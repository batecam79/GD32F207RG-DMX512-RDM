
build_gd32/main.elf:     file format elf32-littlearm


Disassembly of section .vectors:

08007000 <__gVectors>:
 8007000:	20040000 	andcs	r0, r4, r0
 8007004:	080085bd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, r8, sl, pc}
 8007008:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 800700c:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007010:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007014:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007018:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
	...
 800702c:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007030:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007034:	00000000 	andeq	r0, r0, r0
 8007038:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 800703c:	080129e9 	stmdaeq	r1, {r0, r3, r5, r6, r7, r8, fp, sp}
 8007040:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007044:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007048:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 800704c:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007050:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007054:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007058:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 800705c:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007060:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007064:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007068:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 800706c:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007070:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007074:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007078:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 800707c:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007080:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007084:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007088:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 800708c:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007090:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007094:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007098:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 800709c:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80070a0:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80070a4:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80070a8:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80070ac:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80070b0:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80070b4:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80070b8:	0800d9bd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, r8, fp, ip, lr, pc}
 80070bc:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80070c0:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80070c4:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80070c8:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80070cc:	00000000 	andeq	r0, r0, r0
 80070d0:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80070d4:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80070d8:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80070dc:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80070e0:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80070e4:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80070e8:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80070ec:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80070f0:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80070f4:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80070f8:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80070fc:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007100:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007104:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007108:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 800710c:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007110:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007114:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007118:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 800711c:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007120:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007124:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007128:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 800712c:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007130:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007134:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007138:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 800713c:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007140:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007144:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007148:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 800714c:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007150:	00000000 	andeq	r0, r0, r0
 8007154:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007158:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 800715c:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007160:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007164:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
	...
 8007178:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 800717c:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007180:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007184:	00000000 	andeq	r0, r0, r0
 8007188:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 800718c:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
	...
 80071a0:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80071a4:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}

Disassembly of section .text:

080071a8 <net_init>:
 80071a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80071ac:	460c      	mov	r4, r1
 80071ae:	4616      	mov	r6, r2
 80071b0:	9f06      	ldr	r7, [sp, #24]
 80071b2:	4a22      	ldr	r2, [pc, #136]	; (800723c <net_init+0x94>)
 80071b4:	461d      	mov	r5, r3
 80071b6:	1e43      	subs	r3, r0, #1
 80071b8:	3005      	adds	r0, #5
 80071ba:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 80071be:	4283      	cmp	r3, r0
 80071c0:	f802 1b01 	strb.w	r1, [r2], #1
 80071c4:	d1f9      	bne.n	80071ba <net_init+0x12>
 80071c6:	4623      	mov	r3, r4
 80071c8:	4a1d      	ldr	r2, [pc, #116]	; (8007240 <net_init+0x98>)
 80071ca:	f104 010c 	add.w	r1, r4, #12
 80071ce:	f813 0b01 	ldrb.w	r0, [r3], #1
 80071d2:	428b      	cmp	r3, r1
 80071d4:	f802 0b01 	strb.w	r0, [r2], #1
 80071d8:	d1f9      	bne.n	80071ce <net_init+0x26>
 80071da:	f04f 0800 	mov.w	r8, #0
 80071de:	4918      	ldr	r1, [pc, #96]	; (8007240 <net_init+0x98>)
 80071e0:	4816      	ldr	r0, [pc, #88]	; (800723c <net_init+0x94>)
 80071e2:	f000 f9a7 	bl	8007534 <ip_init>
 80071e6:	4815      	ldr	r0, [pc, #84]	; (800723c <net_init+0x94>)
 80071e8:	f000 f83c 	bl	8007264 <rfc3927_init>
 80071ec:	f887 8000 	strb.w	r8, [r7]
 80071f0:	782b      	ldrb	r3, [r5, #0]
 80071f2:	b163      	cbz	r3, 800720e <net_init+0x66>
 80071f4:	4632      	mov	r2, r6
 80071f6:	4912      	ldr	r1, [pc, #72]	; (8007240 <net_init+0x98>)
 80071f8:	4810      	ldr	r0, [pc, #64]	; (800723c <net_init+0x94>)
 80071fa:	f009 fcff 	bl	8010bfc <dhcp_client>
 80071fe:	4540      	cmp	r0, r8
 8007200:	da05      	bge.n	800720e <net_init+0x66>
 8007202:	480f      	ldr	r0, [pc, #60]	; (8007240 <net_init+0x98>)
 8007204:	f885 8000 	strb.w	r8, [r5]
 8007208:	f007 fefc 	bl	800f004 <rfc3927>
 800720c:	7038      	strb	r0, [r7, #0]
 800720e:	490c      	ldr	r1, [pc, #48]	; (8007240 <net_init+0x98>)
 8007210:	480a      	ldr	r0, [pc, #40]	; (800723c <net_init+0x94>)
 8007212:	f000 f883 	bl	800731c <arp_init>
 8007216:	480a      	ldr	r0, [pc, #40]	; (8007240 <net_init+0x98>)
 8007218:	f009 ff10 	bl	801103c <ip_set_ip>
 800721c:	f000 f82e 	bl	800727c <tcp_init>
 8007220:	4a07      	ldr	r2, [pc, #28]	; (8007240 <net_init+0x98>)
 8007222:	1e63      	subs	r3, r4, #1
 8007224:	340b      	adds	r4, #11
 8007226:	f812 1b01 	ldrb.w	r1, [r2], #1
 800722a:	f803 1f01 	strb.w	r1, [r3, #1]!
 800722e:	429c      	cmp	r4, r3
 8007230:	d1f9      	bne.n	8007226 <net_init+0x7e>
 8007232:	782a      	ldrb	r2, [r5, #0]
 8007234:	4b03      	ldr	r3, [pc, #12]	; (8007244 <net_init+0x9c>)
 8007236:	701a      	strb	r2, [r3, #0]
 8007238:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800723c:	200129c8 	andcs	r2, r1, r8, asr #19
 8007240:	200129bc 			; <UNDEFINED> instruction: 0x200129bc
 8007244:	200129ce 	andcs	r2, r1, lr, asr #19

08007248 <net_shutdown>:
 8007248:	b508      	push	{r3, lr}
 800724a:	f000 f97e 	bl	800754a <ip_shutdown>
 800724e:	4b04      	ldr	r3, [pc, #16]	; (8007260 <net_shutdown+0x18>)
 8007250:	781b      	ldrb	r3, [r3, #0]
 8007252:	b11b      	cbz	r3, 800725c <net_shutdown+0x14>
 8007254:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8007258:	f009 bdd8 	b.w	8010e0c <dhcp_client_release>
 800725c:	bd08      	pop	{r3, pc}
 800725e:	bf00      	nop
 8007260:	200129ce 	andcs	r2, r1, lr, asr #19

08007264 <rfc3927_init>:
 8007264:	4b04      	ldr	r3, [pc, #16]	; (8007278 <rfc3927_init+0x14>)
 8007266:	1d82      	adds	r2, r0, #6
 8007268:	4290      	cmp	r0, r2
 800726a:	d100      	bne.n	800726e <rfc3927_init+0xa>
 800726c:	4770      	bx	lr
 800726e:	f810 1b01 	ldrb.w	r1, [r0], #1
 8007272:	f803 1b01 	strb.w	r1, [r3], #1
 8007276:	e7f7      	b.n	8007268 <rfc3927_init+0x4>
 8007278:	200129d8 	ldrdcs	r2, [r1], -r8

0800727c <tcp_init>:
 800727c:	2206      	movs	r2, #6
 800727e:	b513      	push	{r0, r1, r4, lr}
 8007280:	4c0b      	ldr	r4, [pc, #44]	; (80072b0 <tcp_init+0x34>)
 8007282:	490c      	ldr	r1, [pc, #48]	; (80072b4 <tcp_init+0x38>)
 8007284:	18a0      	adds	r0, r4, r2
 8007286:	f007 ff17 	bl	800f0b8 <memcpy.isra.0>
 800728a:	2308      	movs	r3, #8
 800728c:	2204      	movs	r2, #4
 800728e:	81a3      	strh	r3, [r4, #12]
 8007290:	4b09      	ldr	r3, [pc, #36]	; (80072b8 <tcp_init+0x3c>)
 8007292:	eb0d 0102 	add.w	r1, sp, r2
 8007296:	681b      	ldr	r3, [r3, #0]
 8007298:	f104 001a 	add.w	r0, r4, #26
 800729c:	9301      	str	r3, [sp, #4]
 800729e:	f007 ff0b 	bl	800f0b8 <memcpy.isra.0>
 80072a2:	2345      	movs	r3, #69	; 0x45
 80072a4:	81e3      	strh	r3, [r4, #14]
 80072a6:	4b05      	ldr	r3, [pc, #20]	; (80072bc <tcp_init+0x40>)
 80072a8:	6163      	str	r3, [r4, #20]
 80072aa:	b002      	add	sp, #8
 80072ac:	bd10      	pop	{r4, pc}
 80072ae:	bf00      	nop
 80072b0:	200135a0 	andcs	r3, r1, r0, lsr #11
 80072b4:	200129c8 	andcs	r2, r1, r8, asr #19
 80072b8:	200129bc 			; <UNDEFINED> instruction: 0x200129bc
 80072bc:	06400040 	strbeq	r0, [r0], -r0, asr #32

080072c0 <udp_init>:
 80072c0:	b570      	push	{r4, r5, r6, lr}
 80072c2:	2200      	movs	r2, #0
 80072c4:	2408      	movs	r4, #8
 80072c6:	460e      	mov	r6, r1
 80072c8:	4b0d      	ldr	r3, [pc, #52]	; (8007300 <udp_init+0x40>)
 80072ca:	490e      	ldr	r1, [pc, #56]	; (8007304 <udp_init+0x44>)
 80072cc:	3c01      	subs	r4, #1
 80072ce:	801a      	strh	r2, [r3, #0]
 80072d0:	805a      	strh	r2, [r3, #2]
 80072d2:	f841 2b04 	str.w	r2, [r1], #4
 80072d6:	f603 3394 	addw	r3, r3, #2964	; 0xb94
 80072da:	d1f7      	bne.n	80072cc <udp_init+0xc>
 80072dc:	2206      	movs	r2, #6
 80072de:	4d0a      	ldr	r5, [pc, #40]	; (8007308 <udp_init+0x48>)
 80072e0:	4b0a      	ldr	r3, [pc, #40]	; (800730c <udp_init+0x4c>)
 80072e2:	4601      	mov	r1, r0
 80072e4:	18a8      	adds	r0, r5, r2
 80072e6:	801c      	strh	r4, [r3, #0]
 80072e8:	f008 f86a 	bl	800f3c0 <memcpy.isra.0>
 80072ec:	4b08      	ldr	r3, [pc, #32]	; (8007310 <udp_init+0x50>)
 80072ee:	4630      	mov	r0, r6
 80072f0:	60eb      	str	r3, [r5, #12]
 80072f2:	4b08      	ldr	r3, [pc, #32]	; (8007314 <udp_init+0x54>)
 80072f4:	616b      	str	r3, [r5, #20]
 80072f6:	f008 f88b 	bl	800f410 <udp_set_ip>
 80072fa:	852c      	strh	r4, [r5, #40]	; 0x28
 80072fc:	bd70      	pop	{r4, r5, r6, pc}
 80072fe:	bf00      	nop
 8007300:	20013bbc 			; <UNDEFINED> instruction: 0x20013bbc
 8007304:	20013b9c 	mulcs	r1, ip, fp
 8007308:	2001985c 	andcs	r9, r1, ip, asr r8
 800730c:	20013b98 	mulcs	r1, r8, fp
 8007310:	00450008 	subeq	r0, r5, r8
 8007314:	11400040 	cmpne	r0, r0, asr #32

08007318 <udp_shutdown>:
 8007318:	4770      	bx	lr
	...

0800731c <arp_init>:
 800731c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007320:	4604      	mov	r4, r0
 8007322:	460d      	mov	r5, r1
 8007324:	f000 f876 	bl	8007414 <arp_cache_init>
 8007328:	2206      	movs	r2, #6
 800732a:	4621      	mov	r1, r4
 800732c:	482e      	ldr	r0, [pc, #184]	; (80073e8 <arp_init+0xcc>)
 800732e:	682f      	ldr	r7, [r5, #0]
 8007330:	f009 fae6 	bl	8010900 <memcpy.isra.0>
 8007334:	4b2d      	ldr	r3, [pc, #180]	; (80073ec <arp_init+0xd0>)
 8007336:	2507      	movs	r5, #7
 8007338:	461e      	mov	r6, r3
 800733a:	22ff      	movs	r2, #255	; 0xff
 800733c:	3d01      	subs	r5, #1
 800733e:	d146      	bne.n	80073ce <arp_init+0xb2>
 8007340:	4b2b      	ldr	r3, [pc, #172]	; (80073f0 <arp_init+0xd4>)
 8007342:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 80073f4 <arp_init+0xd8>
 8007346:	2206      	movs	r2, #6
 8007348:	e9c6 3803 	strd	r3, r8, [r6, #12]
 800734c:	f44f 7380 	mov.w	r3, #256	; 0x100
 8007350:	4621      	mov	r1, r4
 8007352:	4829      	ldr	r0, [pc, #164]	; (80073f8 <arp_init+0xdc>)
 8007354:	82b3      	strh	r3, [r6, #20]
 8007356:	f009 fad3 	bl	8010900 <memcpy.isra.0>
 800735a:	2307      	movs	r3, #7
 800735c:	4a27      	ldr	r2, [pc, #156]	; (80073fc <arp_init+0xe0>)
 800735e:	61f7      	str	r7, [r6, #28]
 8007360:	3b01      	subs	r3, #1
 8007362:	d137      	bne.n	80073d4 <arp_init+0xb8>
 8007364:	2206      	movs	r2, #6
 8007366:	4621      	mov	r1, r4
 8007368:	4825      	ldr	r0, [pc, #148]	; (8007400 <arp_init+0xe4>)
 800736a:	f8c6 7026 	str.w	r7, [r6, #38]	; 0x26
 800736e:	f009 fac7 	bl	8010900 <memcpy.isra.0>
 8007372:	4a24      	ldr	r2, [pc, #144]	; (8007404 <arp_init+0xe8>)
 8007374:	2306      	movs	r3, #6
 8007376:	4615      	mov	r5, r2
 8007378:	21ff      	movs	r1, #255	; 0xff
 800737a:	3b01      	subs	r3, #1
 800737c:	d22d      	bcs.n	80073da <arp_init+0xbe>
 800737e:	4b1c      	ldr	r3, [pc, #112]	; (80073f0 <arp_init+0xd4>)
 8007380:	2206      	movs	r2, #6
 8007382:	e9c5 3803 	strd	r3, r8, [r5, #12]
 8007386:	f44f 7380 	mov.w	r3, #256	; 0x100
 800738a:	4621      	mov	r1, r4
 800738c:	481e      	ldr	r0, [pc, #120]	; (8007408 <arp_init+0xec>)
 800738e:	82ab      	strh	r3, [r5, #20]
 8007390:	f009 fab6 	bl	8010900 <memcpy.isra.0>
 8007394:	2307      	movs	r3, #7
 8007396:	2100      	movs	r1, #0
 8007398:	4a1c      	ldr	r2, [pc, #112]	; (800740c <arp_init+0xf0>)
 800739a:	61ef      	str	r7, [r5, #28]
 800739c:	3b01      	subs	r3, #1
 800739e:	d11f      	bne.n	80073e0 <arp_init+0xc4>
 80073a0:	2206      	movs	r2, #6
 80073a2:	4d1b      	ldr	r5, [pc, #108]	; (8007410 <arp_init+0xf4>)
 80073a4:	4621      	mov	r1, r4
 80073a6:	18a8      	adds	r0, r5, r2
 80073a8:	f009 faaa 	bl	8010900 <memcpy.isra.0>
 80073ac:	4b10      	ldr	r3, [pc, #64]	; (80073f0 <arp_init+0xd4>)
 80073ae:	4621      	mov	r1, r4
 80073b0:	e9c5 3803 	strd	r3, r8, [r5, #12]
 80073b4:	f44f 7300 	mov.w	r3, #512	; 0x200
 80073b8:	f105 0016 	add.w	r0, r5, #22
 80073bc:	2206      	movs	r2, #6
 80073be:	82ab      	strh	r3, [r5, #20]
 80073c0:	f009 fa9e 	bl	8010900 <memcpy.isra.0>
 80073c4:	61ef      	str	r7, [r5, #28]
 80073c6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80073ca:	f009 baa3 	b.w	8010914 <arp_announce>
 80073ce:	f803 2b01 	strb.w	r2, [r3], #1
 80073d2:	e7b3      	b.n	800733c <arp_init+0x20>
 80073d4:	f802 5b01 	strb.w	r5, [r2], #1
 80073d8:	e7c2      	b.n	8007360 <arp_init+0x44>
 80073da:	f802 1b01 	strb.w	r1, [r2], #1
 80073de:	e7cc      	b.n	800737a <arp_init+0x5e>
 80073e0:	f802 1b01 	strb.w	r1, [r2], #1
 80073e4:	e7da      	b.n	800739c <arp_init+0x80>
 80073e6:	bf00      	nop
 80073e8:	2001a292 	mulcs	r1, r2, r2
 80073ec:	2001a28c 	andcs	sl, r1, ip, lsl #5
 80073f0:	01000608 	tsteq	r0, r8, lsl #12
 80073f4:	04060008 	streq	r0, [r6], #-8
 80073f8:	2001a2a2 	andcs	sl, r1, r2, lsr #5
 80073fc:	2001a2ac 	andcs	sl, r1, ip, lsr #5
 8007400:	2001a2ea 	andcs	sl, r1, sl, ror #5
 8007404:	2001a2e4 	andcs	sl, r1, r4, ror #5
 8007408:	2001a2fa 	strdcs	sl, [r1], -sl	; <UNPREDICTABLE>
 800740c:	2001a304 	andcs	sl, r1, r4, lsl #6
 8007410:	2001a2b8 			; <UNDEFINED> instruction: 0x2001a2b8

08007414 <arp_cache_init>:
 8007414:	2300      	movs	r3, #0
 8007416:	4618      	mov	r0, r3
 8007418:	4a09      	ldr	r2, [pc, #36]	; (8007440 <arp_cache_init+0x2c>)
 800741a:	b510      	push	{r4, lr}
 800741c:	8013      	strh	r3, [r2, #0]
 800741e:	4a09      	ldr	r2, [pc, #36]	; (8007444 <arp_cache_init+0x30>)
 8007420:	4611      	mov	r1, r2
 8007422:	f842 0c04 	str.w	r0, [r2, #-4]
 8007426:	1d94      	adds	r4, r2, #6
 8007428:	42a1      	cmp	r1, r4
 800742a:	d105      	bne.n	8007438 <arp_cache_init+0x24>
 800742c:	3303      	adds	r3, #3
 800742e:	2b60      	cmp	r3, #96	; 0x60
 8007430:	f102 020c 	add.w	r2, r2, #12
 8007434:	d1f4      	bne.n	8007420 <arp_cache_init+0xc>
 8007436:	bd10      	pop	{r4, pc}
 8007438:	f801 0b01 	strb.w	r0, [r1], #1
 800743c:	e7f4      	b.n	8007428 <arp_cache_init+0x14>
 800743e:	bf00      	nop
 8007440:	2001a490 	mulcs	r1, r0, r4
 8007444:	2001a314 	andcs	sl, r1, r4, lsl r3

08007448 <igmp_init>:
 8007448:	2200      	movs	r2, #0
 800744a:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800744e:	4605      	mov	r5, r0
 8007450:	4608      	mov	r0, r1
 8007452:	4611      	mov	r1, r2
 8007454:	4b23      	ldr	r3, [pc, #140]	; (80074e4 <igmp_init+0x9c>)
 8007456:	f103 0408 	add.w	r4, r3, #8
 800745a:	42a3      	cmp	r3, r4
 800745c:	d13e      	bne.n	80074dc <igmp_init+0x94>
 800745e:	3201      	adds	r2, #1
 8007460:	2a24      	cmp	r2, #36	; 0x24
 8007462:	d1f8      	bne.n	8007456 <igmp_init+0xe>
 8007464:	2600      	movs	r6, #0
 8007466:	4b20      	ldr	r3, [pc, #128]	; (80074e8 <igmp_init+0xa0>)
 8007468:	4c20      	ldr	r4, [pc, #128]	; (80074ec <igmp_init+0xa4>)
 800746a:	601e      	str	r6, [r3, #0]
 800746c:	4b20      	ldr	r3, [pc, #128]	; (80074f0 <igmp_init+0xa8>)
 800746e:	f44f 5700 	mov.w	r7, #8192	; 0x2000
 8007472:	801e      	strh	r6, [r3, #0]
 8007474:	f009 fd42 	bl	8010efc <igmp_set_ip>
 8007478:	2201      	movs	r2, #1
 800747a:	4b1e      	ldr	r3, [pc, #120]	; (80074f4 <igmp_init+0xac>)
 800747c:	4629      	mov	r1, r5
 800747e:	801a      	strh	r2, [r3, #0]
 8007480:	225e      	movs	r2, #94	; 0x5e
 8007482:	709a      	strb	r2, [r3, #2]
 8007484:	2206      	movs	r2, #6
 8007486:	18a0      	adds	r0, r4, r2
 8007488:	f009 fcee 	bl	8010e68 <memcpy.isra.0>
 800748c:	f240 4394 	movw	r3, #1172	; 0x494
 8007490:	8463      	strh	r3, [r4, #34]	; 0x22
 8007492:	2316      	movs	r3, #22
 8007494:	f8df 9060 	ldr.w	r9, [pc, #96]	; 80074f8 <igmp_init+0xb0>
 8007498:	f8df 8060 	ldr.w	r8, [pc, #96]	; 80074fc <igmp_init+0xb4>
 800749c:	84e3      	strh	r3, [r4, #38]	; 0x26
 800749e:	f8c4 9014 	str.w	r9, [r4, #20]
 80074a2:	4b17      	ldr	r3, [pc, #92]	; (8007500 <igmp_init+0xb8>)
 80074a4:	f8c4 800c 	str.w	r8, [r4, #12]
 80074a8:	8227      	strh	r7, [r4, #16]
 80074aa:	84a6      	strh	r6, [r4, #36]	; 0x24
 80074ac:	4c15      	ldr	r4, [pc, #84]	; (8007504 <igmp_init+0xbc>)
 80074ae:	2206      	movs	r2, #6
 80074b0:	6023      	str	r3, [r4, #0]
 80074b2:	f44f 7300 	mov.w	r3, #512	; 0x200
 80074b6:	18a0      	adds	r0, r4, r2
 80074b8:	80a3      	strh	r3, [r4, #4]
 80074ba:	4629      	mov	r1, r5
 80074bc:	f009 fcd4 	bl	8010e68 <memcpy.isra.0>
 80074c0:	23e0      	movs	r3, #224	; 0xe0
 80074c2:	83e3      	strh	r3, [r4, #30]
 80074c4:	f44f 13b8 	mov.w	r3, #1507328	; 0x170000
 80074c8:	4a0f      	ldr	r2, [pc, #60]	; (8007508 <igmp_init+0xc0>)
 80074ca:	f8c4 9014 	str.w	r9, [r4, #20]
 80074ce:	e9c4 2308 	strd	r2, r3, [r4, #32]
 80074d2:	f8c4 800c 	str.w	r8, [r4, #12]
 80074d6:	8227      	strh	r7, [r4, #16]
 80074d8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80074dc:	f803 1b01 	strb.w	r1, [r3], #1
 80074e0:	e7bb      	b.n	800745a <igmp_init+0x12>
 80074e2:	bf00      	nop
 80074e4:	2001a6c8 	andcs	sl, r1, r8, asr #13
 80074e8:	2001a7ec 	andcs	sl, r1, ip, ror #15
 80074ec:	2001a828 	andcs	sl, r1, r8, lsr #16
 80074f0:	2001a7e8 	andcs	sl, r1, r8, ror #15
 80074f4:	2001a820 	andcs	sl, r1, r0, lsr #16
 80074f8:	02010040 	andeq	r0, r1, #64	; 0x40
 80074fc:	00460008 	subeq	r0, r6, r8
 8007500:	005e0001 	subseq	r0, lr, r1
 8007504:	2001a7f0 	strdcs	sl, [r1], -r0
 8007508:	04940200 	ldreq	r0, [r4], #512	; 0x200

0800750c <igmp_shutdown>:
 800750c:	b570      	push	{r4, r5, r6, lr}
 800750e:	2500      	movs	r5, #0
 8007510:	462e      	mov	r6, r5
 8007512:	4c07      	ldr	r4, [pc, #28]	; (8007530 <igmp_shutdown+0x24>)
 8007514:	6820      	ldr	r0, [r4, #0]
 8007516:	b120      	cbz	r0, 8007522 <igmp_shutdown+0x16>
 8007518:	f009 fd4c 	bl	8010fb4 <igmp_leave>
 800751c:	6026      	str	r6, [r4, #0]
 800751e:	7166      	strb	r6, [r4, #5]
 8007520:	7126      	strb	r6, [r4, #4]
 8007522:	3501      	adds	r5, #1
 8007524:	2d24      	cmp	r5, #36	; 0x24
 8007526:	f104 0408 	add.w	r4, r4, #8
 800752a:	d1f3      	bne.n	8007514 <igmp_shutdown+0x8>
 800752c:	bd70      	pop	{r4, r5, r6, pc}
 800752e:	bf00      	nop
 8007530:	2001a6c8 	andcs	sl, r1, r8, asr #13

08007534 <ip_init>:
 8007534:	b538      	push	{r3, r4, r5, lr}
 8007536:	4604      	mov	r4, r0
 8007538:	460d      	mov	r5, r1
 800753a:	f7ff fec1 	bl	80072c0 <udp_init>
 800753e:	4629      	mov	r1, r5
 8007540:	4620      	mov	r0, r4
 8007542:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8007546:	f7ff bf7f 	b.w	8007448 <igmp_init>

0800754a <ip_shutdown>:
 800754a:	b508      	push	{r3, lr}
 800754c:	f7ff ffde 	bl	800750c <igmp_shutdown>
 8007550:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8007554:	f7ff bee0 	b.w	8007318 <udp_shutdown>

08007558 <console_init>:
 8007558:	b508      	push	{r3, lr}
 800755a:	f00b f9e7 	bl	801292c <uart0_init>
 800755e:	4804      	ldr	r0, [pc, #16]	; (8007570 <console_init+0x18>)
 8007560:	f00b fa14 	bl	801298c <uart0_puts>
 8007564:	4803      	ldr	r0, [pc, #12]	; (8007574 <console_init+0x1c>)
 8007566:	f00b fa11 	bl	801298c <uart0_puts>
 800756a:	2000      	movs	r0, #0
 800756c:	bd08      	pop	{r3, pc}
 800756e:	bf00      	nop
 8007570:	08014b31 	stmdaeq	r1, {r0, r4, r5, r8, r9, fp, lr}
 8007574:	080177f8 	stmdaeq	r1, {r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr}

08007578 <net_handle>:
 8007578:	b510      	push	{r4, lr}
 800757a:	4c0c      	ldr	r4, [pc, #48]	; (80075ac <net_handle+0x34>)
 800757c:	4620      	mov	r0, r4
 800757e:	f00c f925 	bl	80137cc <emac_eth_recv>
 8007582:	2800      	cmp	r0, #0
 8007584:	dd07      	ble.n	8007596 <net_handle+0x1e>
 8007586:	6820      	ldr	r0, [r4, #0]
 8007588:	8983      	ldrh	r3, [r0, #12]
 800758a:	2b08      	cmp	r3, #8
 800758c:	d107      	bne.n	800759e <net_handle+0x26>
 800758e:	f000 fa6f 	bl	8007a70 <ip_handle>
 8007592:	f00c f92f 	bl	80137f4 <emac_free_pkt>
 8007596:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800759a:	f007 bd23 	b.w	800efe4 <net_timers_run>
 800759e:	f5b3 6fc1 	cmp.w	r3, #1544	; 0x608
 80075a2:	d1f6      	bne.n	8007592 <net_handle+0x1a>
 80075a4:	f000 fa08 	bl	80079b8 <arp_handle>
 80075a8:	e7f3      	b.n	8007592 <net_handle+0x1a>
 80075aa:	bf00      	nop
 80075ac:	200129d0 	ldrdcs	r2, [r1], -r0

080075b0 <tcp_handle>:
 80075b0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80075b4:	4605      	mov	r5, r0
 80075b6:	8c43      	ldrh	r3, [r0, #34]	; 0x22
 80075b8:	f8b0 8010 	ldrh.w	r8, [r0, #16]
 80075bc:	ba5b      	rev16	r3, r3
 80075be:	8443      	strh	r3, [r0, #34]	; 0x22
 80075c0:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 80075c2:	f890 902e 	ldrb.w	r9, [r0, #46]	; 0x2e
 80075c6:	ba5b      	rev16	r3, r3
 80075c8:	8483      	strh	r3, [r0, #36]	; 0x24
 80075ca:	f007 fd7f 	bl	800f0cc <_bswap32>
 80075ce:	8e2b      	ldrh	r3, [r5, #48]	; 0x30
 80075d0:	4ca5      	ldr	r4, [pc, #660]	; (8007868 <tcp_handle+0x2b8>)
 80075d2:	ba5b      	rev16	r3, r3
 80075d4:	862b      	strh	r3, [r5, #48]	; 0x30
 80075d6:	8eab      	ldrh	r3, [r5, #52]	; 0x34
 80075d8:	8822      	ldrh	r2, [r4, #0]
 80075da:	ba5b      	rev16	r3, r3
 80075dc:	86ab      	strh	r3, [r5, #52]	; 0x34
 80075de:	8cab      	ldrh	r3, [r5, #36]	; 0x24
 80075e0:	429a      	cmp	r2, r3
 80075e2:	d14d      	bne.n	8007680 <tcp_handle+0xd0>
 80075e4:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 80075e8:	2b01      	cmp	r3, #1
 80075ea:	d00d      	beq.n	8007608 <tcp_handle+0x58>
 80075ec:	2204      	movs	r2, #4
 80075ee:	4668      	mov	r0, sp
 80075f0:	f105 011a 	add.w	r1, r5, #26
 80075f4:	f007 fd60 	bl	800f0b8 <memcpy.isra.0>
 80075f8:	8862      	ldrh	r2, [r4, #2]
 80075fa:	8c6b      	ldrh	r3, [r5, #34]	; 0x22
 80075fc:	429a      	cmp	r2, r3
 80075fe:	d13f      	bne.n	8007680 <tcp_handle+0xd0>
 8007600:	6862      	ldr	r2, [r4, #4]
 8007602:	9b00      	ldr	r3, [sp, #0]
 8007604:	429a      	cmp	r2, r3
 8007606:	d13b      	bne.n	8007680 <tcp_handle+0xd0>
 8007608:	2204      	movs	r2, #4
 800760a:	f105 012a 	add.w	r1, r5, #42	; 0x2a
 800760e:	eb0d 0002 	add.w	r0, sp, r2
 8007612:	f007 fd51 	bl	800f0b8 <memcpy.isra.0>
 8007616:	2204      	movs	r2, #4
 8007618:	f105 0126 	add.w	r1, r5, #38	; 0x26
 800761c:	eb0d 0002 	add.w	r0, sp, r2
 8007620:	9e01      	ldr	r6, [sp, #4]
 8007622:	f007 fd49 	bl	800f0b8 <memcpy.isra.0>
 8007626:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 800762a:	9f01      	ldr	r7, [sp, #4]
 800762c:	2a01      	cmp	r2, #1
 800762e:	f8b5 a030 	ldrh.w	sl, [r5, #48]	; 0x30
 8007632:	d01b      	beq.n	800766c <tcp_handle+0xbc>
 8007634:	1ed3      	subs	r3, r2, #3
 8007636:	2b07      	cmp	r3, #7
 8007638:	d822      	bhi.n	8007680 <tcp_handle+0xd0>
 800763a:	fa98 f198 	rev16.w	r1, r8
 800763e:	f64f 78ec 	movw	r8, #65516	; 0xffec
 8007642:	ea4f 1319 	mov.w	r3, r9, lsr #4
 8007646:	eba8 0883 	sub.w	r8, r8, r3, lsl #2
 800764a:	4488      	add	r8, r1
 800764c:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 800764e:	f895 002f 	ldrb.w	r0, [r5, #47]	; 0x2f
 8007652:	ea4f 0983 	mov.w	r9, r3, lsl #2
 8007656:	fa1f f888 	uxth.w	r8, r8
 800765a:	2900      	cmp	r1, #0
 800765c:	d142      	bne.n	80076e4 <tcp_handle+0x134>
 800765e:	f1b8 0f00 	cmp.w	r8, #0
 8007662:	d16b      	bne.n	800773c <tcp_handle+0x18c>
 8007664:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007666:	42bb      	cmp	r3, r7
 8007668:	d168      	bne.n	800773c <tcp_handle+0x18c>
 800766a:	e048      	b.n	80076fe <tcp_handle+0x14e>
 800766c:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 8007670:	075a      	lsls	r2, r3, #29
 8007672:	d405      	bmi.n	8007680 <tcp_handle+0xd0>
 8007674:	06d8      	lsls	r0, r3, #27
 8007676:	d506      	bpl.n	8007686 <tcp_handle+0xd6>
 8007678:	4628      	mov	r0, r5
 800767a:	497b      	ldr	r1, [pc, #492]	; (8007868 <tcp_handle+0x2b8>)
 800767c:	f007 fdf2 	bl	800f264 <_send_reset>
 8007680:	b004      	add	sp, #16
 8007682:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007686:	0799      	lsls	r1, r3, #30
 8007688:	d5fa      	bpl.n	8007680 <tcp_handle+0xd0>
 800768a:	f895 2023 	ldrb.w	r2, [r5, #35]	; 0x23
 800768e:	f895 3022 	ldrb.w	r3, [r5, #34]	; 0x22
 8007692:	4668      	mov	r0, sp
 8007694:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8007698:	f105 011a 	add.w	r1, r5, #26
 800769c:	2204      	movs	r2, #4
 800769e:	8063      	strh	r3, [r4, #2]
 80076a0:	f007 fd0a 	bl	800f0b8 <memcpy.isra.0>
 80076a4:	2206      	movs	r2, #6
 80076a6:	9b00      	ldr	r3, [sp, #0]
 80076a8:	18a9      	adds	r1, r5, r2
 80076aa:	4870      	ldr	r0, [pc, #448]	; (800786c <tcp_handle+0x2bc>)
 80076ac:	6063      	str	r3, [r4, #4]
 80076ae:	f007 fd03 	bl	800f0b8 <memcpy.isra.0>
 80076b2:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80076b4:	1c7b      	adds	r3, r7, #1
 80076b6:	e9cd 2301 	strd	r2, r3, [sp, #4]
 80076ba:	6363      	str	r3, [r4, #52]	; 0x34
 80076bc:	2312      	movs	r3, #18
 80076be:	486a      	ldr	r0, [pc, #424]	; (8007868 <tcp_handle+0x2b8>)
 80076c0:	a901      	add	r1, sp, #4
 80076c2:	f88d 300c 	strb.w	r3, [sp, #12]
 80076c6:	e9c4 7608 	strd	r7, r6, [r4, #32]
 80076ca:	63e7      	str	r7, [r4, #60]	; 0x3c
 80076cc:	f8c4 a018 	str.w	sl, [r4, #24]
 80076d0:	f007 fd22 	bl	800f118 <_tcp_send_package>
 80076d4:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80076d6:	1c5a      	adds	r2, r3, #1
 80076d8:	e9c4 3204 	strd	r3, r2, [r4, #16]
 80076dc:	2303      	movs	r3, #3
 80076de:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 80076e2:	e7cd      	b.n	8007680 <tcp_handle+0xd0>
 80076e4:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80076e6:	eba3 0c07 	sub.w	ip, r3, r7
 80076ea:	f1b8 0f00 	cmp.w	r8, #0
 80076ee:	d10d      	bne.n	800770c <tcp_handle+0x15c>
 80076f0:	f1bc 0f00 	cmp.w	ip, #0
 80076f4:	dc22      	bgt.n	800773c <tcp_handle+0x18c>
 80076f6:	1afb      	subs	r3, r7, r3
 80076f8:	1a5b      	subs	r3, r3, r1
 80076fa:	2b00      	cmp	r3, #0
 80076fc:	da1e      	bge.n	800773c <tcp_handle+0x18c>
 80076fe:	0743      	lsls	r3, r0, #29
 8007700:	d530      	bpl.n	8007764 <tcp_handle+0x1b4>
 8007702:	8821      	ldrh	r1, [r4, #0]
 8007704:	4858      	ldr	r0, [pc, #352]	; (8007868 <tcp_handle+0x2b8>)
 8007706:	f007 fcbd 	bl	800f084 <_init_tcb>
 800770a:	e7b9      	b.n	8007680 <tcp_handle+0xd0>
 800770c:	f1bc 0f00 	cmp.w	ip, #0
 8007710:	dc06      	bgt.n	8007720 <tcp_handle+0x170>
 8007712:	eba7 0c03 	sub.w	ip, r7, r3
 8007716:	ebac 0c01 	sub.w	ip, ip, r1
 800771a:	f1bc 0f00 	cmp.w	ip, #0
 800771e:	dbee      	blt.n	80076fe <tcp_handle+0x14e>
 8007720:	eb08 0c07 	add.w	ip, r8, r7
 8007724:	f103 0e01 	add.w	lr, r3, #1
 8007728:	ebae 0e0c 	sub.w	lr, lr, ip
 800772c:	f1be 0f00 	cmp.w	lr, #0
 8007730:	dc04      	bgt.n	800773c <tcp_handle+0x18c>
 8007732:	43db      	mvns	r3, r3
 8007734:	1a5b      	subs	r3, r3, r1
 8007736:	eb13 0f0c 	cmn.w	r3, ip
 800773a:	d4e0      	bmi.n	80076fe <tcp_handle+0x14e>
 800773c:	0742      	lsls	r2, r0, #29
 800773e:	d505      	bpl.n	800774c <tcp_handle+0x19c>
 8007740:	8821      	ldrh	r1, [r4, #0]
 8007742:	4849      	ldr	r0, [pc, #292]	; (8007868 <tcp_handle+0x2b8>)
 8007744:	f007 fc9e 	bl	800f084 <_init_tcb>
 8007748:	2301      	movs	r3, #1
 800774a:	e7c8      	b.n	80076de <tcp_handle+0x12e>
 800774c:	6963      	ldr	r3, [r4, #20]
 800774e:	9301      	str	r3, [sp, #4]
 8007750:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007752:	9302      	str	r3, [sp, #8]
 8007754:	2310      	movs	r3, #16
 8007756:	4844      	ldr	r0, [pc, #272]	; (8007868 <tcp_handle+0x2b8>)
 8007758:	a901      	add	r1, sp, #4
 800775a:	f88d 300c 	strb.w	r3, [sp, #12]
 800775e:	f007 fcdb 	bl	800f118 <_tcp_send_package>
 8007762:	e78d      	b.n	8007680 <tcp_handle+0xd0>
 8007764:	0781      	lsls	r1, r0, #30
 8007766:	d505      	bpl.n	8007774 <tcp_handle+0x1c4>
 8007768:	2a03      	cmp	r2, #3
 800776a:	d0ed      	beq.n	8007748 <tcp_handle+0x198>
 800776c:	4628      	mov	r0, r5
 800776e:	493e      	ldr	r1, [pc, #248]	; (8007868 <tcp_handle+0x2b8>)
 8007770:	f007 fd78 	bl	800f264 <_send_reset>
 8007774:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 8007778:	06da      	lsls	r2, r3, #27
 800777a:	d581      	bpl.n	8007680 <tcp_handle+0xd0>
 800777c:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8007780:	3b03      	subs	r3, #3
 8007782:	2b07      	cmp	r3, #7
 8007784:	d818      	bhi.n	80077b8 <tcp_handle+0x208>
 8007786:	e8df f003 	tbb	[pc, r3]
 800778a:	75757504 	ldrbvc	r7, [r5, #-1284]!	; 0xfffffafc
 800778e:	a59c7575 	ldrge	r7, [ip, #1397]	; 0x575
 8007792:	6923      	ldr	r3, [r4, #16]
 8007794:	1b9b      	subs	r3, r3, r6
 8007796:	2b00      	cmp	r3, #0
 8007798:	dc0a      	bgt.n	80077b0 <tcp_handle+0x200>
 800779a:	6963      	ldr	r3, [r4, #20]
 800779c:	1af3      	subs	r3, r6, r3
 800779e:	2b00      	cmp	r3, #0
 80077a0:	dc06      	bgt.n	80077b0 <tcp_handle+0x200>
 80077a2:	2304      	movs	r3, #4
 80077a4:	e9c4 7608 	strd	r7, r6, [r4, #32]
 80077a8:	f8c4 a018 	str.w	sl, [r4, #24]
 80077ac:	6126      	str	r6, [r4, #16]
 80077ae:	e796      	b.n	80076de <tcp_handle+0x12e>
 80077b0:	4628      	mov	r0, r5
 80077b2:	492d      	ldr	r1, [pc, #180]	; (8007868 <tcp_handle+0x2b8>)
 80077b4:	f007 fd56 	bl	800f264 <_send_reset>
 80077b8:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 80077bc:	3b04      	subs	r3, #4
 80077be:	2b02      	cmp	r3, #2
 80077c0:	d830      	bhi.n	8007824 <tcp_handle+0x274>
 80077c2:	f1b8 0f00 	cmp.w	r8, #0
 80077c6:	d02d      	beq.n	8007824 <tcp_handle+0x274>
 80077c8:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80077ca:	42bb      	cmp	r3, r7
 80077cc:	f040 8091 	bne.w	80078f2 <tcp_handle+0x342>
 80077d0:	f240 53b6 	movw	r3, #1462	; 0x5b6
 80077d4:	f8df a098 	ldr.w	sl, [pc, #152]	; 8007870 <tcp_handle+0x2c0>
 80077d8:	f105 0122 	add.w	r1, r5, #34	; 0x22
 80077dc:	f8ba 7000 	ldrh.w	r7, [sl]
 80077e0:	4642      	mov	r2, r8
 80077e2:	435f      	muls	r7, r3
 80077e4:	1d38      	adds	r0, r7, #4
 80077e6:	4449      	add	r1, r9
 80077e8:	4450      	add	r0, sl
 80077ea:	f007 fc65 	bl	800f0b8 <memcpy.isra.0>
 80077ee:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 80077f0:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80077f2:	f2a2 52b4 	subw	r2, r2, #1460	; 0x5b4
 80077f6:	8722      	strh	r2, [r4, #56]	; 0x38
 80077f8:	6962      	ldr	r2, [r4, #20]
 80077fa:	4443      	add	r3, r8
 80077fc:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8007800:	6363      	str	r3, [r4, #52]	; 0x34
 8007802:	2310      	movs	r3, #16
 8007804:	4457      	add	r7, sl
 8007806:	4818      	ldr	r0, [pc, #96]	; (8007868 <tcp_handle+0x2b8>)
 8007808:	f8a7 85b8 	strh.w	r8, [r7, #1464]	; 0x5b8
 800780c:	a901      	add	r1, sp, #4
 800780e:	f88d 300c 	strb.w	r3, [sp, #12]
 8007812:	f007 fc81 	bl	800f118 <_tcp_send_package>
 8007816:	f8ba 3000 	ldrh.w	r3, [sl]
 800781a:	3301      	adds	r3, #1
 800781c:	f003 0301 	and.w	r3, r3, #1
 8007820:	f8aa 3000 	strh.w	r3, [sl]
 8007824:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8007828:	2b02      	cmp	r3, #2
 800782a:	f67f af29 	bls.w	8007680 <tcp_handle+0xd0>
 800782e:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 8007832:	07db      	lsls	r3, r3, #31
 8007834:	f57f af24 	bpl.w	8007680 <tcp_handle+0xd0>
 8007838:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800783a:	6962      	ldr	r2, [r4, #20]
 800783c:	3301      	adds	r3, #1
 800783e:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8007842:	6363      	str	r3, [r4, #52]	; 0x34
 8007844:	2310      	movs	r3, #16
 8007846:	4808      	ldr	r0, [pc, #32]	; (8007868 <tcp_handle+0x2b8>)
 8007848:	a901      	add	r1, sp, #4
 800784a:	f88d 300c 	strb.w	r3, [sp, #12]
 800784e:	f007 fc63 	bl	800f118 <_tcp_send_package>
 8007852:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8007856:	2b05      	cmp	r3, #5
 8007858:	d053      	beq.n	8007902 <tcp_handle+0x352>
 800785a:	d84d      	bhi.n	80078f8 <tcp_handle+0x348>
 800785c:	3b03      	subs	r3, #3
 800785e:	2b01      	cmp	r3, #1
 8007860:	f63f af0e 	bhi.w	8007680 <tcp_handle+0xd0>
 8007864:	2307      	movs	r3, #7
 8007866:	e73a      	b.n	80076de <tcp_handle+0x12e>
 8007868:	2001355c 	andcs	r3, r1, ip, asr r5
 800786c:	20013564 	andcs	r3, r1, r4, ror #10
 8007870:	200129ec 	andcs	r2, r1, ip, ror #19
 8007874:	6923      	ldr	r3, [r4, #16]
 8007876:	1b99      	subs	r1, r3, r6
 8007878:	d513      	bpl.n	80078a2 <tcp_handle+0x2f2>
 800787a:	6962      	ldr	r2, [r4, #20]
 800787c:	1ab2      	subs	r2, r6, r2
 800787e:	2a00      	cmp	r2, #0
 8007880:	dc0f      	bgt.n	80078a2 <tcp_handle+0x2f2>
 8007882:	6126      	str	r6, [r4, #16]
 8007884:	6a23      	ldr	r3, [r4, #32]
 8007886:	1bda      	subs	r2, r3, r7
 8007888:	2a00      	cmp	r2, #0
 800788a:	db05      	blt.n	8007898 <tcp_handle+0x2e8>
 800788c:	42bb      	cmp	r3, r7
 800788e:	d193      	bne.n	80077b8 <tcp_handle+0x208>
 8007890:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007892:	1b9b      	subs	r3, r3, r6
 8007894:	2b00      	cmp	r3, #0
 8007896:	dc8f      	bgt.n	80077b8 <tcp_handle+0x208>
 8007898:	e9c4 7608 	strd	r7, r6, [r4, #32]
 800789c:	f8c4 a018 	str.w	sl, [r4, #24]
 80078a0:	e78a      	b.n	80077b8 <tcp_handle+0x208>
 80078a2:	1af3      	subs	r3, r6, r3
 80078a4:	2b00      	cmp	r3, #0
 80078a6:	dc06      	bgt.n	80078b6 <tcp_handle+0x306>
 80078a8:	2900      	cmp	r1, #0
 80078aa:	dc85      	bgt.n	80077b8 <tcp_handle+0x208>
 80078ac:	6963      	ldr	r3, [r4, #20]
 80078ae:	1af3      	subs	r3, r6, r3
 80078b0:	2b00      	cmp	r3, #0
 80078b2:	dc81      	bgt.n	80077b8 <tcp_handle+0x208>
 80078b4:	e7e6      	b.n	8007884 <tcp_handle+0x2d4>
 80078b6:	6963      	ldr	r3, [r4, #20]
 80078b8:	1b9a      	subs	r2, r3, r6
 80078ba:	2a00      	cmp	r2, #0
 80078bc:	f6bf af7c 	bge.w	80077b8 <tcp_handle+0x208>
 80078c0:	e745      	b.n	800774e <tcp_handle+0x19e>
 80078c2:	6963      	ldr	r3, [r4, #20]
 80078c4:	42b3      	cmp	r3, r6
 80078c6:	f47f af77 	bne.w	80077b8 <tcp_handle+0x208>
 80078ca:	8821      	ldrh	r1, [r4, #0]
 80078cc:	480f      	ldr	r0, [pc, #60]	; (800790c <tcp_handle+0x35c>)
 80078ce:	f007 fbd9 	bl	800f084 <_init_tcb>
 80078d2:	e771      	b.n	80077b8 <tcp_handle+0x208>
 80078d4:	6963      	ldr	r3, [r4, #20]
 80078d6:	42b3      	cmp	r3, r6
 80078d8:	f47f af6e 	bne.w	80077b8 <tcp_handle+0x208>
 80078dc:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80078de:	480b      	ldr	r0, [pc, #44]	; (800790c <tcp_handle+0x35c>)
 80078e0:	9302      	str	r3, [sp, #8]
 80078e2:	2310      	movs	r3, #16
 80078e4:	a901      	add	r1, sp, #4
 80078e6:	9601      	str	r6, [sp, #4]
 80078e8:	f88d 300c 	strb.w	r3, [sp, #12]
 80078ec:	f007 fc14 	bl	800f118 <_tcp_send_package>
 80078f0:	e762      	b.n	80077b8 <tcp_handle+0x208>
 80078f2:	6962      	ldr	r2, [r4, #20]
 80078f4:	9201      	str	r2, [sp, #4]
 80078f6:	e72c      	b.n	8007752 <tcp_handle+0x1a2>
 80078f8:	2b06      	cmp	r3, #6
 80078fa:	f47f aec1 	bne.w	8007680 <tcp_handle+0xd0>
 80078fe:	230a      	movs	r3, #10
 8007900:	e6ed      	b.n	80076de <tcp_handle+0x12e>
 8007902:	6963      	ldr	r3, [r4, #20]
 8007904:	42b3      	cmp	r3, r6
 8007906:	d0fa      	beq.n	80078fe <tcp_handle+0x34e>
 8007908:	2308      	movs	r3, #8
 800790a:	e6e8      	b.n	80076de <tcp_handle+0x12e>
 800790c:	2001355c 	andcs	r3, r1, ip, asr r5

08007910 <udp_handle>:
 8007910:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8007914:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 8007916:	4607      	mov	r7, r0
 8007918:	ba5b      	rev16	r3, r3
 800791a:	b29b      	uxth	r3, r3
 800791c:	f1a3 0244 	sub.w	r2, r3, #68	; 0x44
 8007920:	2a01      	cmp	r2, #1
 8007922:	d904      	bls.n	800792e <udp_handle+0x1e>
 8007924:	2b7b      	cmp	r3, #123	; 0x7b
 8007926:	d002      	beq.n	800792e <udp_handle+0x1e>
 8007928:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800792c:	d308      	bcc.n	8007940 <udp_handle+0x30>
 800792e:	2400      	movs	r4, #0
 8007930:	4a1f      	ldr	r2, [pc, #124]	; (80079b0 <udp_handle+0xa0>)
 8007932:	f852 1b04 	ldr.w	r1, [r2], #4
 8007936:	4299      	cmp	r1, r3
 8007938:	d005      	beq.n	8007946 <udp_handle+0x36>
 800793a:	3401      	adds	r4, #1
 800793c:	2c08      	cmp	r4, #8
 800793e:	d1f8      	bne.n	8007932 <udp_handle+0x22>
 8007940:	b002      	add	sp, #8
 8007942:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007946:	f640 3394 	movw	r3, #2964	; 0xb94
 800794a:	8cfe      	ldrh	r6, [r7, #38]	; 0x26
 800794c:	435c      	muls	r4, r3
 800794e:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 8007952:	ba76      	rev16	r6, r6
 8007954:	3e08      	subs	r6, #8
 8007956:	b2b6      	uxth	r6, r6
 8007958:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 800795c:	bf28      	it	cs
 800795e:	f44f 66b8 	movcs.w	r6, #1472	; 0x5c0
 8007962:	f8df 8050 	ldr.w	r8, [pc, #80]	; 80079b4 <udp_handle+0xa4>
 8007966:	1d20      	adds	r0, r4, #4
 8007968:	f838 5004 	ldrh.w	r5, [r8, r4]
 800796c:	4632      	mov	r2, r6
 800796e:	435d      	muls	r5, r3
 8007970:	4428      	add	r0, r5
 8007972:	f107 012a 	add.w	r1, r7, #42	; 0x2a
 8007976:	4440      	add	r0, r8
 8007978:	f007 fd22 	bl	800f3c0 <memcpy.isra.0>
 800797c:	2204      	movs	r2, #4
 800797e:	f107 011a 	add.w	r1, r7, #26
 8007982:	eb0d 0002 	add.w	r0, sp, r2
 8007986:	f007 fd1b 	bl	800f3c0 <memcpy.isra.0>
 800798a:	9a01      	ldr	r2, [sp, #4]
 800798c:	192b      	adds	r3, r5, r4
 800798e:	4443      	add	r3, r8
 8007990:	f8c3 25c4 	str.w	r2, [r3, #1476]	; 0x5c4
 8007994:	8c7a      	ldrh	r2, [r7, #34]	; 0x22
 8007996:	f8a3 65ca 	strh.w	r6, [r3, #1482]	; 0x5ca
 800799a:	ba52      	rev16	r2, r2
 800799c:	f8a3 25c8 	strh.w	r2, [r3, #1480]	; 0x5c8
 80079a0:	f838 3004 	ldrh.w	r3, [r8, r4]
 80079a4:	3301      	adds	r3, #1
 80079a6:	f003 0301 	and.w	r3, r3, #1
 80079aa:	f828 3004 	strh.w	r3, [r8, r4]
 80079ae:	e7c7      	b.n	8007940 <udp_handle+0x30>
 80079b0:	20013b9c 	mulcs	r1, ip, fp
 80079b4:	20013bbc 			; <UNDEFINED> instruction: 0x20013bbc

080079b8 <arp_handle>:
 80079b8:	8a83      	ldrh	r3, [r0, #20]
 80079ba:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80079be:	d003      	beq.n	80079c8 <arp_handle+0x10>
 80079c0:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80079c4:	d002      	beq.n	80079cc <arp_handle+0x14>
 80079c6:	4770      	bx	lr
 80079c8:	f008 bfae 	b.w	8010928 <arp_handle_request>
 80079cc:	f008 bfd4 	b.w	8010978 <arp_handle_reply>

080079d0 <igmp_handle>:
 80079d0:	7b83      	ldrb	r3, [r0, #14]
 80079d2:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80079d6:	2b45      	cmp	r3, #69	; 0x45
 80079d8:	d116      	bne.n	8007a08 <igmp_handle+0x38>
 80079da:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 80079de:	2b11      	cmp	r3, #17
 80079e0:	d112      	bne.n	8007a08 <igmp_handle+0x38>
 80079e2:	4b20      	ldr	r3, [pc, #128]	; (8007a64 <igmp_handle+0x94>)
 80079e4:	f100 051d 	add.w	r5, r0, #29
 80079e8:	9300      	str	r3, [sp, #0]
 80079ea:	466a      	mov	r2, sp
 80079ec:	462b      	mov	r3, r5
 80079ee:	f100 0621 	add.w	r6, r0, #33	; 0x21
 80079f2:	42b3      	cmp	r3, r6
 80079f4:	d10b      	bne.n	8007a0e <igmp_handle+0x3e>
 80079f6:	2401      	movs	r4, #1
 80079f8:	2100      	movs	r1, #0
 80079fa:	f04f 0c01 	mov.w	ip, #1
 80079fe:	4b1a      	ldr	r3, [pc, #104]	; (8007a68 <igmp_handle+0x98>)
 8007a00:	4a1a      	ldr	r2, [pc, #104]	; (8007a6c <igmp_handle+0x9c>)
 8007a02:	681f      	ldr	r7, [r3, #0]
 8007a04:	428f      	cmp	r7, r1
 8007a06:	d10a      	bne.n	8007a1e <igmp_handle+0x4e>
 8007a08:	b003      	add	sp, #12
 8007a0a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8007a0e:	f812 1b01 	ldrb.w	r1, [r2], #1
 8007a12:	f813 4f01 	ldrb.w	r4, [r3, #1]!
 8007a16:	428c      	cmp	r4, r1
 8007a18:	d0eb      	beq.n	80079f2 <igmp_handle+0x22>
 8007a1a:	2400      	movs	r4, #0
 8007a1c:	e7ec      	b.n	80079f8 <igmp_handle+0x28>
 8007a1e:	6813      	ldr	r3, [r2, #0]
 8007a20:	9301      	str	r3, [sp, #4]
 8007a22:	b924      	cbnz	r4, 8007a2e <igmp_handle+0x5e>
 8007a24:	462b      	mov	r3, r5
 8007a26:	f10d 0e04 	add.w	lr, sp, #4
 8007a2a:	42b3      	cmp	r3, r6
 8007a2c:	d10e      	bne.n	8007a4c <igmp_handle+0x7c>
 8007a2e:	f892 e005 	ldrb.w	lr, [r2, #5]
 8007a32:	f890 3023 	ldrb.w	r3, [r0, #35]	; 0x23
 8007a36:	f1be 0f01 	cmp.w	lr, #1
 8007a3a:	d110      	bne.n	8007a5e <igmp_handle+0x8e>
 8007a3c:	f892 e004 	ldrb.w	lr, [r2, #4]
 8007a40:	459e      	cmp	lr, r3
 8007a42:	d909      	bls.n	8007a58 <igmp_handle+0x88>
 8007a44:	085b      	lsrs	r3, r3, #1
 8007a46:	3301      	adds	r3, #1
 8007a48:	7113      	strb	r3, [r2, #4]
 8007a4a:	e005      	b.n	8007a58 <igmp_handle+0x88>
 8007a4c:	f81e 8b01 	ldrb.w	r8, [lr], #1
 8007a50:	f813 9f01 	ldrb.w	r9, [r3, #1]!
 8007a54:	45c1      	cmp	r9, r8
 8007a56:	d0e8      	beq.n	8007a2a <igmp_handle+0x5a>
 8007a58:	3101      	adds	r1, #1
 8007a5a:	3208      	adds	r2, #8
 8007a5c:	e7d2      	b.n	8007a04 <igmp_handle+0x34>
 8007a5e:	f882 c005 	strb.w	ip, [r2, #5]
 8007a62:	e7ef      	b.n	8007a44 <igmp_handle+0x74>
 8007a64:	010000e0 	smlatteq	r0, r0, r0, r0
 8007a68:	2001a7ec 	andcs	sl, r1, ip, ror #15
 8007a6c:	2001a6c8 	andcs	sl, r1, r8, asr #13

08007a70 <ip_handle>:
 8007a70:	7b82      	ldrb	r2, [r0, #14]
 8007a72:	7dc3      	ldrb	r3, [r0, #23]
 8007a74:	2a45      	cmp	r2, #69	; 0x45
 8007a76:	d003      	beq.n	8007a80 <ip_handle+0x10>
 8007a78:	2b02      	cmp	r3, #2
 8007a7a:	d111      	bne.n	8007aa0 <ip_handle+0x30>
 8007a7c:	f7ff bfa8 	b.w	80079d0 <igmp_handle>
 8007a80:	2b06      	cmp	r3, #6
 8007a82:	d00b      	beq.n	8007a9c <ip_handle+0x2c>
 8007a84:	d804      	bhi.n	8007a90 <ip_handle+0x20>
 8007a86:	2b01      	cmp	r3, #1
 8007a88:	d006      	beq.n	8007a98 <ip_handle+0x28>
 8007a8a:	2b02      	cmp	r3, #2
 8007a8c:	d0f6      	beq.n	8007a7c <ip_handle+0xc>
 8007a8e:	4770      	bx	lr
 8007a90:	2b11      	cmp	r3, #17
 8007a92:	d105      	bne.n	8007aa0 <ip_handle+0x30>
 8007a94:	f7ff bf3c 	b.w	8007910 <udp_handle>
 8007a98:	f000 b804 	b.w	8007aa4 <icmp_handle>
 8007a9c:	f7ff bd88 	b.w	80075b0 <tcp_handle>
 8007aa0:	4770      	bx	lr
	...

08007aa4 <icmp_handle>:
 8007aa4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007aa6:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 8007aaa:	4604      	mov	r4, r0
 8007aac:	2b08      	cmp	r3, #8
 8007aae:	d13e      	bne.n	8007b2e <icmp_handle+0x8a>
 8007ab0:	f890 5023 	ldrb.w	r5, [r0, #35]	; 0x23
 8007ab4:	2d00      	cmp	r5, #0
 8007ab6:	d13a      	bne.n	8007b2e <icmp_handle+0x8a>
 8007ab8:	1d86      	adds	r6, r0, #6
 8007aba:	4631      	mov	r1, r6
 8007abc:	2206      	movs	r2, #6
 8007abe:	f009 fadf 	bl	8011080 <memcpy.isra.0>
 8007ac2:	4630      	mov	r0, r6
 8007ac4:	2206      	movs	r2, #6
 8007ac6:	491b      	ldr	r1, [pc, #108]	; (8007b34 <icmp_handle+0x90>)
 8007ac8:	f009 fada 	bl	8011080 <memcpy.isra.0>
 8007acc:	8a63      	ldrh	r3, [r4, #18]
 8007ace:	f104 061a 	add.w	r6, r4, #26
 8007ad2:	43db      	mvns	r3, r3
 8007ad4:	4631      	mov	r1, r6
 8007ad6:	2204      	movs	r2, #4
 8007ad8:	8263      	strh	r3, [r4, #18]
 8007ada:	f104 001e 	add.w	r0, r4, #30
 8007ade:	f009 facf 	bl	8011080 <memcpy.isra.0>
 8007ae2:	2204      	movs	r2, #4
 8007ae4:	4b14      	ldr	r3, [pc, #80]	; (8007b38 <icmp_handle+0x94>)
 8007ae6:	eb0d 0102 	add.w	r1, sp, r2
 8007aea:	681b      	ldr	r3, [r3, #0]
 8007aec:	4630      	mov	r0, r6
 8007aee:	f104 060e 	add.w	r6, r4, #14
 8007af2:	9301      	str	r3, [sp, #4]
 8007af4:	f009 fac4 	bl	8011080 <memcpy.isra.0>
 8007af8:	2114      	movs	r1, #20
 8007afa:	4630      	mov	r0, r6
 8007afc:	7625      	strb	r5, [r4, #24]
 8007afe:	7665      	strb	r5, [r4, #25]
 8007b00:	f009 faa5 	bl	801104e <net_chksum>
 8007b04:	8a21      	ldrh	r1, [r4, #16]
 8007b06:	8320      	strh	r0, [r4, #24]
 8007b08:	ba49      	rev16	r1, r1
 8007b0a:	b289      	uxth	r1, r1
 8007b0c:	4630      	mov	r0, r6
 8007b0e:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8007b12:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8007b16:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 8007b1a:	f009 fa98 	bl	801104e <net_chksum>
 8007b1e:	8a21      	ldrh	r1, [r4, #16]
 8007b20:	84a0      	strh	r0, [r4, #36]	; 0x24
 8007b22:	ba49      	rev16	r1, r1
 8007b24:	b289      	uxth	r1, r1
 8007b26:	4620      	mov	r0, r4
 8007b28:	310e      	adds	r1, #14
 8007b2a:	f00b fe67 	bl	80137fc <emac_eth_send>
 8007b2e:	b002      	add	sp, #8
 8007b30:	bd70      	pop	{r4, r5, r6, pc}
 8007b32:	bf00      	nop
 8007b34:	200129c8 	andcs	r2, r1, r8, asr #19
 8007b38:	200129bc 			; <UNDEFINED> instruction: 0x200129bc

08007b3c <__aeabi_d2f>:
 8007b3c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8007b40:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8007b44:	bf24      	itt	cs
 8007b46:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8007b4a:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8007b4e:	d90d      	bls.n	8007b6c <__aeabi_d2f+0x30>
 8007b50:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8007b54:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8007b58:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8007b5c:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8007b60:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8007b64:	bf08      	it	eq
 8007b66:	f020 0001 	biceq.w	r0, r0, #1
 8007b6a:	4770      	bx	lr
 8007b6c:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8007b70:	d121      	bne.n	8007bb6 <__aeabi_d2f+0x7a>
 8007b72:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8007b76:	bfbc      	itt	lt
 8007b78:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8007b7c:	4770      	bxlt	lr
 8007b7e:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8007b82:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8007b86:	f1c2 0218 	rsb	r2, r2, #24
 8007b8a:	f1c2 0c20 	rsb	ip, r2, #32
 8007b8e:	fa10 f30c 	lsls.w	r3, r0, ip
 8007b92:	fa20 f002 	lsr.w	r0, r0, r2
 8007b96:	bf18      	it	ne
 8007b98:	f040 0001 	orrne.w	r0, r0, #1
 8007b9c:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8007ba0:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8007ba4:	fa03 fc0c 	lsl.w	ip, r3, ip
 8007ba8:	ea40 000c 	orr.w	r0, r0, ip
 8007bac:	fa23 f302 	lsr.w	r3, r3, r2
 8007bb0:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8007bb4:	e7cc      	b.n	8007b50 <__aeabi_d2f+0x14>
 8007bb6:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8007bba:	d107      	bne.n	8007bcc <__aeabi_d2f+0x90>
 8007bbc:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8007bc0:	bf1e      	ittt	ne
 8007bc2:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8007bc6:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8007bca:	4770      	bxne	lr
 8007bcc:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8007bd0:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8007bd4:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007bd8:	4770      	bx	lr
 8007bda:	bf00      	nop

08007bdc <__aeabi_frsub>:
 8007bdc:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
 8007be0:	e002      	b.n	8007be8 <__addsf3>
 8007be2:	bf00      	nop

08007be4 <__aeabi_fsub>:
 8007be4:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

08007be8 <__addsf3>:
 8007be8:	0042      	lsls	r2, r0, #1
 8007bea:	bf1f      	itttt	ne
 8007bec:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8007bf0:	ea92 0f03 	teqne	r2, r3
 8007bf4:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8007bf8:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8007bfc:	d06a      	beq.n	8007cd4 <__addsf3+0xec>
 8007bfe:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8007c02:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8007c06:	bfc1      	itttt	gt
 8007c08:	18d2      	addgt	r2, r2, r3
 8007c0a:	4041      	eorgt	r1, r0
 8007c0c:	4048      	eorgt	r0, r1
 8007c0e:	4041      	eorgt	r1, r0
 8007c10:	bfb8      	it	lt
 8007c12:	425b      	neglt	r3, r3
 8007c14:	2b19      	cmp	r3, #25
 8007c16:	bf88      	it	hi
 8007c18:	4770      	bxhi	lr
 8007c1a:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8007c1e:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007c22:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 8007c26:	bf18      	it	ne
 8007c28:	4240      	negne	r0, r0
 8007c2a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8007c2e:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8007c32:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 8007c36:	bf18      	it	ne
 8007c38:	4249      	negne	r1, r1
 8007c3a:	ea92 0f03 	teq	r2, r3
 8007c3e:	d03f      	beq.n	8007cc0 <__addsf3+0xd8>
 8007c40:	f1a2 0201 	sub.w	r2, r2, #1
 8007c44:	fa41 fc03 	asr.w	ip, r1, r3
 8007c48:	eb10 000c 	adds.w	r0, r0, ip
 8007c4c:	f1c3 0320 	rsb	r3, r3, #32
 8007c50:	fa01 f103 	lsl.w	r1, r1, r3
 8007c54:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8007c58:	d502      	bpl.n	8007c60 <__addsf3+0x78>
 8007c5a:	4249      	negs	r1, r1
 8007c5c:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8007c60:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
 8007c64:	d313      	bcc.n	8007c8e <__addsf3+0xa6>
 8007c66:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 8007c6a:	d306      	bcc.n	8007c7a <__addsf3+0x92>
 8007c6c:	0840      	lsrs	r0, r0, #1
 8007c6e:	ea4f 0131 	mov.w	r1, r1, rrx
 8007c72:	f102 0201 	add.w	r2, r2, #1
 8007c76:	2afe      	cmp	r2, #254	; 0xfe
 8007c78:	d251      	bcs.n	8007d1e <__addsf3+0x136>
 8007c7a:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
 8007c7e:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8007c82:	bf08      	it	eq
 8007c84:	f020 0001 	biceq.w	r0, r0, #1
 8007c88:	ea40 0003 	orr.w	r0, r0, r3
 8007c8c:	4770      	bx	lr
 8007c8e:	0049      	lsls	r1, r1, #1
 8007c90:	eb40 0000 	adc.w	r0, r0, r0
 8007c94:	3a01      	subs	r2, #1
 8007c96:	bf28      	it	cs
 8007c98:	f5b0 0f00 	cmpcs.w	r0, #8388608	; 0x800000
 8007c9c:	d2ed      	bcs.n	8007c7a <__addsf3+0x92>
 8007c9e:	fab0 fc80 	clz	ip, r0
 8007ca2:	f1ac 0c08 	sub.w	ip, ip, #8
 8007ca6:	ebb2 020c 	subs.w	r2, r2, ip
 8007caa:	fa00 f00c 	lsl.w	r0, r0, ip
 8007cae:	bfaa      	itet	ge
 8007cb0:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8007cb4:	4252      	neglt	r2, r2
 8007cb6:	4318      	orrge	r0, r3
 8007cb8:	bfbc      	itt	lt
 8007cba:	40d0      	lsrlt	r0, r2
 8007cbc:	4318      	orrlt	r0, r3
 8007cbe:	4770      	bx	lr
 8007cc0:	f092 0f00 	teq	r2, #0
 8007cc4:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
 8007cc8:	bf06      	itte	eq
 8007cca:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
 8007cce:	3201      	addeq	r2, #1
 8007cd0:	3b01      	subne	r3, #1
 8007cd2:	e7b5      	b.n	8007c40 <__addsf3+0x58>
 8007cd4:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8007cd8:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8007cdc:	bf18      	it	ne
 8007cde:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8007ce2:	d021      	beq.n	8007d28 <__addsf3+0x140>
 8007ce4:	ea92 0f03 	teq	r2, r3
 8007ce8:	d004      	beq.n	8007cf4 <__addsf3+0x10c>
 8007cea:	f092 0f00 	teq	r2, #0
 8007cee:	bf08      	it	eq
 8007cf0:	4608      	moveq	r0, r1
 8007cf2:	4770      	bx	lr
 8007cf4:	ea90 0f01 	teq	r0, r1
 8007cf8:	bf1c      	itt	ne
 8007cfa:	2000      	movne	r0, #0
 8007cfc:	4770      	bxne	lr
 8007cfe:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
 8007d02:	d104      	bne.n	8007d0e <__addsf3+0x126>
 8007d04:	0040      	lsls	r0, r0, #1
 8007d06:	bf28      	it	cs
 8007d08:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
 8007d0c:	4770      	bx	lr
 8007d0e:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
 8007d12:	bf3c      	itt	cc
 8007d14:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
 8007d18:	4770      	bxcc	lr
 8007d1a:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8007d1e:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
 8007d22:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007d26:	4770      	bx	lr
 8007d28:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8007d2c:	bf16      	itet	ne
 8007d2e:	4608      	movne	r0, r1
 8007d30:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8007d34:	4601      	movne	r1, r0
 8007d36:	0242      	lsls	r2, r0, #9
 8007d38:	bf06      	itte	eq
 8007d3a:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8007d3e:	ea90 0f01 	teqeq	r0, r1
 8007d42:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
 8007d46:	4770      	bx	lr

08007d48 <__aeabi_ui2f>:
 8007d48:	f04f 0300 	mov.w	r3, #0
 8007d4c:	e004      	b.n	8007d58 <__aeabi_i2f+0x8>
 8007d4e:	bf00      	nop

08007d50 <__aeabi_i2f>:
 8007d50:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
 8007d54:	bf48      	it	mi
 8007d56:	4240      	negmi	r0, r0
 8007d58:	ea5f 0c00 	movs.w	ip, r0
 8007d5c:	bf08      	it	eq
 8007d5e:	4770      	bxeq	lr
 8007d60:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
 8007d64:	4601      	mov	r1, r0
 8007d66:	f04f 0000 	mov.w	r0, #0
 8007d6a:	e01c      	b.n	8007da6 <__aeabi_l2f+0x2a>

08007d6c <__aeabi_ul2f>:
 8007d6c:	ea50 0201 	orrs.w	r2, r0, r1
 8007d70:	bf08      	it	eq
 8007d72:	4770      	bxeq	lr
 8007d74:	f04f 0300 	mov.w	r3, #0
 8007d78:	e00a      	b.n	8007d90 <__aeabi_l2f+0x14>
 8007d7a:	bf00      	nop

08007d7c <__aeabi_l2f>:
 8007d7c:	ea50 0201 	orrs.w	r2, r0, r1
 8007d80:	bf08      	it	eq
 8007d82:	4770      	bxeq	lr
 8007d84:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
 8007d88:	d502      	bpl.n	8007d90 <__aeabi_l2f+0x14>
 8007d8a:	4240      	negs	r0, r0
 8007d8c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8007d90:	ea5f 0c01 	movs.w	ip, r1
 8007d94:	bf02      	ittt	eq
 8007d96:	4684      	moveq	ip, r0
 8007d98:	4601      	moveq	r1, r0
 8007d9a:	2000      	moveq	r0, #0
 8007d9c:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
 8007da0:	bf08      	it	eq
 8007da2:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
 8007da6:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
 8007daa:	fabc f28c 	clz	r2, ip
 8007dae:	3a08      	subs	r2, #8
 8007db0:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8007db4:	db10      	blt.n	8007dd8 <__aeabi_l2f+0x5c>
 8007db6:	fa01 fc02 	lsl.w	ip, r1, r2
 8007dba:	4463      	add	r3, ip
 8007dbc:	fa00 fc02 	lsl.w	ip, r0, r2
 8007dc0:	f1c2 0220 	rsb	r2, r2, #32
 8007dc4:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8007dc8:	fa20 f202 	lsr.w	r2, r0, r2
 8007dcc:	eb43 0002 	adc.w	r0, r3, r2
 8007dd0:	bf08      	it	eq
 8007dd2:	f020 0001 	biceq.w	r0, r0, #1
 8007dd6:	4770      	bx	lr
 8007dd8:	f102 0220 	add.w	r2, r2, #32
 8007ddc:	fa01 fc02 	lsl.w	ip, r1, r2
 8007de0:	f1c2 0220 	rsb	r2, r2, #32
 8007de4:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8007de8:	fa21 f202 	lsr.w	r2, r1, r2
 8007dec:	eb43 0002 	adc.w	r0, r3, r2
 8007df0:	bf08      	it	eq
 8007df2:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8007df6:	4770      	bx	lr

08007df8 <__gesf2>:
 8007df8:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
 8007dfc:	e006      	b.n	8007e0c <__cmpsf2+0x4>
 8007dfe:	bf00      	nop

08007e00 <__lesf2>:
 8007e00:	f04f 0c01 	mov.w	ip, #1
 8007e04:	e002      	b.n	8007e0c <__cmpsf2+0x4>
 8007e06:	bf00      	nop

08007e08 <__cmpsf2>:
 8007e08:	f04f 0c01 	mov.w	ip, #1
 8007e0c:	f84d cd04 	str.w	ip, [sp, #-4]!
 8007e10:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8007e14:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8007e18:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8007e1c:	bf18      	it	ne
 8007e1e:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8007e22:	d011      	beq.n	8007e48 <__cmpsf2+0x40>
 8007e24:	b001      	add	sp, #4
 8007e26:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
 8007e2a:	bf18      	it	ne
 8007e2c:	ea90 0f01 	teqne	r0, r1
 8007e30:	bf58      	it	pl
 8007e32:	ebb2 0003 	subspl.w	r0, r2, r3
 8007e36:	bf88      	it	hi
 8007e38:	17c8      	asrhi	r0, r1, #31
 8007e3a:	bf38      	it	cc
 8007e3c:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
 8007e40:	bf18      	it	ne
 8007e42:	f040 0001 	orrne.w	r0, r0, #1
 8007e46:	4770      	bx	lr
 8007e48:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8007e4c:	d102      	bne.n	8007e54 <__cmpsf2+0x4c>
 8007e4e:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 8007e52:	d105      	bne.n	8007e60 <__cmpsf2+0x58>
 8007e54:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 8007e58:	d1e4      	bne.n	8007e24 <__cmpsf2+0x1c>
 8007e5a:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 8007e5e:	d0e1      	beq.n	8007e24 <__cmpsf2+0x1c>
 8007e60:	f85d 0b04 	ldr.w	r0, [sp], #4
 8007e64:	4770      	bx	lr
 8007e66:	bf00      	nop

08007e68 <__aeabi_cfrcmple>:
 8007e68:	4684      	mov	ip, r0
 8007e6a:	4608      	mov	r0, r1
 8007e6c:	4661      	mov	r1, ip
 8007e6e:	e7ff      	b.n	8007e70 <__aeabi_cfcmpeq>

08007e70 <__aeabi_cfcmpeq>:
 8007e70:	b50f      	push	{r0, r1, r2, r3, lr}
 8007e72:	f7ff ffc9 	bl	8007e08 <__cmpsf2>
 8007e76:	2800      	cmp	r0, #0
 8007e78:	bf48      	it	mi
 8007e7a:	f110 0f00 	cmnmi.w	r0, #0
 8007e7e:	bd0f      	pop	{r0, r1, r2, r3, pc}

08007e80 <__aeabi_fcmpeq>:
 8007e80:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007e84:	f7ff fff4 	bl	8007e70 <__aeabi_cfcmpeq>
 8007e88:	bf0c      	ite	eq
 8007e8a:	2001      	moveq	r0, #1
 8007e8c:	2000      	movne	r0, #0
 8007e8e:	f85d fb08 	ldr.w	pc, [sp], #8
 8007e92:	bf00      	nop

08007e94 <__aeabi_fcmplt>:
 8007e94:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007e98:	f7ff ffea 	bl	8007e70 <__aeabi_cfcmpeq>
 8007e9c:	bf34      	ite	cc
 8007e9e:	2001      	movcc	r0, #1
 8007ea0:	2000      	movcs	r0, #0
 8007ea2:	f85d fb08 	ldr.w	pc, [sp], #8
 8007ea6:	bf00      	nop

08007ea8 <__aeabi_fcmple>:
 8007ea8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007eac:	f7ff ffe0 	bl	8007e70 <__aeabi_cfcmpeq>
 8007eb0:	bf94      	ite	ls
 8007eb2:	2001      	movls	r0, #1
 8007eb4:	2000      	movhi	r0, #0
 8007eb6:	f85d fb08 	ldr.w	pc, [sp], #8
 8007eba:	bf00      	nop

08007ebc <__aeabi_fcmpge>:
 8007ebc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007ec0:	f7ff ffd2 	bl	8007e68 <__aeabi_cfrcmple>
 8007ec4:	bf94      	ite	ls
 8007ec6:	2001      	movls	r0, #1
 8007ec8:	2000      	movhi	r0, #0
 8007eca:	f85d fb08 	ldr.w	pc, [sp], #8
 8007ece:	bf00      	nop

08007ed0 <__aeabi_fcmpgt>:
 8007ed0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007ed4:	f7ff ffc8 	bl	8007e68 <__aeabi_cfrcmple>
 8007ed8:	bf34      	ite	cc
 8007eda:	2001      	movcc	r0, #1
 8007edc:	2000      	movcs	r0, #0
 8007ede:	f85d fb08 	ldr.w	pc, [sp], #8
 8007ee2:	bf00      	nop

08007ee4 <__aeabi_f2iz>:
 8007ee4:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8007ee8:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 8007eec:	d30f      	bcc.n	8007f0e <__aeabi_f2iz+0x2a>
 8007eee:	f04f 039e 	mov.w	r3, #158	; 0x9e
 8007ef2:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 8007ef6:	d90d      	bls.n	8007f14 <__aeabi_f2iz+0x30>
 8007ef8:	ea4f 2300 	mov.w	r3, r0, lsl #8
 8007efc:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8007f00:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8007f04:	fa23 f002 	lsr.w	r0, r3, r2
 8007f08:	bf18      	it	ne
 8007f0a:	4240      	negne	r0, r0
 8007f0c:	4770      	bx	lr
 8007f0e:	f04f 0000 	mov.w	r0, #0
 8007f12:	4770      	bx	lr
 8007f14:	f112 0f61 	cmn.w	r2, #97	; 0x61
 8007f18:	d101      	bne.n	8007f1e <__aeabi_f2iz+0x3a>
 8007f1a:	0242      	lsls	r2, r0, #9
 8007f1c:	d105      	bne.n	8007f2a <__aeabi_f2iz+0x46>
 8007f1e:	f010 4000 	ands.w	r0, r0, #2147483648	; 0x80000000
 8007f22:	bf08      	it	eq
 8007f24:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8007f28:	4770      	bx	lr
 8007f2a:	f04f 0000 	mov.w	r0, #0
 8007f2e:	4770      	bx	lr

08007f30 <__aeabi_uldivmod>:
 8007f30:	b953      	cbnz	r3, 8007f48 <__aeabi_uldivmod+0x18>
 8007f32:	b94a      	cbnz	r2, 8007f48 <__aeabi_uldivmod+0x18>
 8007f34:	2900      	cmp	r1, #0
 8007f36:	bf08      	it	eq
 8007f38:	2800      	cmpeq	r0, #0
 8007f3a:	bf1c      	itt	ne
 8007f3c:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 8007f40:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 8007f44:	f000 b80c 	b.w	8007f60 <__aeabi_idiv0>
 8007f48:	f1ad 0c08 	sub.w	ip, sp, #8
 8007f4c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8007f50:	f001 fb5e 	bl	8009610 <__udivmoddi4>
 8007f54:	f8dd e004 	ldr.w	lr, [sp, #4]
 8007f58:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8007f5c:	b004      	add	sp, #16
 8007f5e:	4770      	bx	lr

08007f60 <__aeabi_idiv0>:
 8007f60:	4770      	bx	lr
 8007f62:	bf00      	nop

08007f64 <__aeabi_drsub>:
 8007f64:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8007f68:	e002      	b.n	8007f70 <__adddf3>
 8007f6a:	bf00      	nop

08007f6c <__aeabi_dsub>:
 8007f6c:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

08007f70 <__adddf3>:
 8007f70:	b530      	push	{r4, r5, lr}
 8007f72:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8007f76:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8007f7a:	ea94 0f05 	teq	r4, r5
 8007f7e:	bf08      	it	eq
 8007f80:	ea90 0f02 	teqeq	r0, r2
 8007f84:	bf1f      	itttt	ne
 8007f86:	ea54 0c00 	orrsne.w	ip, r4, r0
 8007f8a:	ea55 0c02 	orrsne.w	ip, r5, r2
 8007f8e:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8007f92:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8007f96:	f000 80e2 	beq.w	800815e <__adddf3+0x1ee>
 8007f9a:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8007f9e:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8007fa2:	bfb8      	it	lt
 8007fa4:	426d      	neglt	r5, r5
 8007fa6:	dd0c      	ble.n	8007fc2 <__adddf3+0x52>
 8007fa8:	442c      	add	r4, r5
 8007faa:	ea80 0202 	eor.w	r2, r0, r2
 8007fae:	ea81 0303 	eor.w	r3, r1, r3
 8007fb2:	ea82 0000 	eor.w	r0, r2, r0
 8007fb6:	ea83 0101 	eor.w	r1, r3, r1
 8007fba:	ea80 0202 	eor.w	r2, r0, r2
 8007fbe:	ea81 0303 	eor.w	r3, r1, r3
 8007fc2:	2d36      	cmp	r5, #54	; 0x36
 8007fc4:	bf88      	it	hi
 8007fc6:	bd30      	pophi	{r4, r5, pc}
 8007fc8:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8007fcc:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8007fd0:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8007fd4:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8007fd8:	d002      	beq.n	8007fe0 <__adddf3+0x70>
 8007fda:	4240      	negs	r0, r0
 8007fdc:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8007fe0:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8007fe4:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8007fe8:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8007fec:	d002      	beq.n	8007ff4 <__adddf3+0x84>
 8007fee:	4252      	negs	r2, r2
 8007ff0:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8007ff4:	ea94 0f05 	teq	r4, r5
 8007ff8:	f000 80a7 	beq.w	800814a <__adddf3+0x1da>
 8007ffc:	f1a4 0401 	sub.w	r4, r4, #1
 8008000:	f1d5 0e20 	rsbs	lr, r5, #32
 8008004:	db0d      	blt.n	8008022 <__adddf3+0xb2>
 8008006:	fa02 fc0e 	lsl.w	ip, r2, lr
 800800a:	fa22 f205 	lsr.w	r2, r2, r5
 800800e:	1880      	adds	r0, r0, r2
 8008010:	f141 0100 	adc.w	r1, r1, #0
 8008014:	fa03 f20e 	lsl.w	r2, r3, lr
 8008018:	1880      	adds	r0, r0, r2
 800801a:	fa43 f305 	asr.w	r3, r3, r5
 800801e:	4159      	adcs	r1, r3
 8008020:	e00e      	b.n	8008040 <__adddf3+0xd0>
 8008022:	f1a5 0520 	sub.w	r5, r5, #32
 8008026:	f10e 0e20 	add.w	lr, lr, #32
 800802a:	2a01      	cmp	r2, #1
 800802c:	fa03 fc0e 	lsl.w	ip, r3, lr
 8008030:	bf28      	it	cs
 8008032:	f04c 0c02 	orrcs.w	ip, ip, #2
 8008036:	fa43 f305 	asr.w	r3, r3, r5
 800803a:	18c0      	adds	r0, r0, r3
 800803c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8008040:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8008044:	d507      	bpl.n	8008056 <__adddf3+0xe6>
 8008046:	f04f 0e00 	mov.w	lr, #0
 800804a:	f1dc 0c00 	rsbs	ip, ip, #0
 800804e:	eb7e 0000 	sbcs.w	r0, lr, r0
 8008052:	eb6e 0101 	sbc.w	r1, lr, r1
 8008056:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 800805a:	d31b      	bcc.n	8008094 <__adddf3+0x124>
 800805c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 8008060:	d30c      	bcc.n	800807c <__adddf3+0x10c>
 8008062:	0849      	lsrs	r1, r1, #1
 8008064:	ea5f 0030 	movs.w	r0, r0, rrx
 8008068:	ea4f 0c3c 	mov.w	ip, ip, rrx
 800806c:	f104 0401 	add.w	r4, r4, #1
 8008070:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8008074:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8008078:	f080 809a 	bcs.w	80081b0 <__adddf3+0x240>
 800807c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8008080:	bf08      	it	eq
 8008082:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8008086:	f150 0000 	adcs.w	r0, r0, #0
 800808a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800808e:	ea41 0105 	orr.w	r1, r1, r5
 8008092:	bd30      	pop	{r4, r5, pc}
 8008094:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8008098:	4140      	adcs	r0, r0
 800809a:	eb41 0101 	adc.w	r1, r1, r1
 800809e:	3c01      	subs	r4, #1
 80080a0:	bf28      	it	cs
 80080a2:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80080a6:	d2e9      	bcs.n	800807c <__adddf3+0x10c>
 80080a8:	f091 0f00 	teq	r1, #0
 80080ac:	bf04      	itt	eq
 80080ae:	4601      	moveq	r1, r0
 80080b0:	2000      	moveq	r0, #0
 80080b2:	fab1 f381 	clz	r3, r1
 80080b6:	bf08      	it	eq
 80080b8:	3320      	addeq	r3, #32
 80080ba:	f1a3 030b 	sub.w	r3, r3, #11
 80080be:	f1b3 0220 	subs.w	r2, r3, #32
 80080c2:	da0c      	bge.n	80080de <__adddf3+0x16e>
 80080c4:	320c      	adds	r2, #12
 80080c6:	dd08      	ble.n	80080da <__adddf3+0x16a>
 80080c8:	f102 0c14 	add.w	ip, r2, #20
 80080cc:	f1c2 020c 	rsb	r2, r2, #12
 80080d0:	fa01 f00c 	lsl.w	r0, r1, ip
 80080d4:	fa21 f102 	lsr.w	r1, r1, r2
 80080d8:	e00c      	b.n	80080f4 <__adddf3+0x184>
 80080da:	f102 0214 	add.w	r2, r2, #20
 80080de:	bfd8      	it	le
 80080e0:	f1c2 0c20 	rsble	ip, r2, #32
 80080e4:	fa01 f102 	lsl.w	r1, r1, r2
 80080e8:	fa20 fc0c 	lsr.w	ip, r0, ip
 80080ec:	bfdc      	itt	le
 80080ee:	ea41 010c 	orrle.w	r1, r1, ip
 80080f2:	4090      	lslle	r0, r2
 80080f4:	1ae4      	subs	r4, r4, r3
 80080f6:	bfa2      	ittt	ge
 80080f8:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80080fc:	4329      	orrge	r1, r5
 80080fe:	bd30      	popge	{r4, r5, pc}
 8008100:	ea6f 0404 	mvn.w	r4, r4
 8008104:	3c1f      	subs	r4, #31
 8008106:	da1c      	bge.n	8008142 <__adddf3+0x1d2>
 8008108:	340c      	adds	r4, #12
 800810a:	dc0e      	bgt.n	800812a <__adddf3+0x1ba>
 800810c:	f104 0414 	add.w	r4, r4, #20
 8008110:	f1c4 0220 	rsb	r2, r4, #32
 8008114:	fa20 f004 	lsr.w	r0, r0, r4
 8008118:	fa01 f302 	lsl.w	r3, r1, r2
 800811c:	ea40 0003 	orr.w	r0, r0, r3
 8008120:	fa21 f304 	lsr.w	r3, r1, r4
 8008124:	ea45 0103 	orr.w	r1, r5, r3
 8008128:	bd30      	pop	{r4, r5, pc}
 800812a:	f1c4 040c 	rsb	r4, r4, #12
 800812e:	f1c4 0220 	rsb	r2, r4, #32
 8008132:	fa20 f002 	lsr.w	r0, r0, r2
 8008136:	fa01 f304 	lsl.w	r3, r1, r4
 800813a:	ea40 0003 	orr.w	r0, r0, r3
 800813e:	4629      	mov	r1, r5
 8008140:	bd30      	pop	{r4, r5, pc}
 8008142:	fa21 f004 	lsr.w	r0, r1, r4
 8008146:	4629      	mov	r1, r5
 8008148:	bd30      	pop	{r4, r5, pc}
 800814a:	f094 0f00 	teq	r4, #0
 800814e:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 8008152:	bf06      	itte	eq
 8008154:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8008158:	3401      	addeq	r4, #1
 800815a:	3d01      	subne	r5, #1
 800815c:	e74e      	b.n	8007ffc <__adddf3+0x8c>
 800815e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8008162:	bf18      	it	ne
 8008164:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8008168:	d029      	beq.n	80081be <__adddf3+0x24e>
 800816a:	ea94 0f05 	teq	r4, r5
 800816e:	bf08      	it	eq
 8008170:	ea90 0f02 	teqeq	r0, r2
 8008174:	d005      	beq.n	8008182 <__adddf3+0x212>
 8008176:	ea54 0c00 	orrs.w	ip, r4, r0
 800817a:	bf04      	itt	eq
 800817c:	4619      	moveq	r1, r3
 800817e:	4610      	moveq	r0, r2
 8008180:	bd30      	pop	{r4, r5, pc}
 8008182:	ea91 0f03 	teq	r1, r3
 8008186:	bf1e      	ittt	ne
 8008188:	2100      	movne	r1, #0
 800818a:	2000      	movne	r0, #0
 800818c:	bd30      	popne	{r4, r5, pc}
 800818e:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8008192:	d105      	bne.n	80081a0 <__adddf3+0x230>
 8008194:	0040      	lsls	r0, r0, #1
 8008196:	4149      	adcs	r1, r1
 8008198:	bf28      	it	cs
 800819a:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 800819e:	bd30      	pop	{r4, r5, pc}
 80081a0:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80081a4:	bf3c      	itt	cc
 80081a6:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80081aa:	bd30      	popcc	{r4, r5, pc}
 80081ac:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80081b0:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80081b4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80081b8:	f04f 0000 	mov.w	r0, #0
 80081bc:	bd30      	pop	{r4, r5, pc}
 80081be:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80081c2:	bf1a      	itte	ne
 80081c4:	4619      	movne	r1, r3
 80081c6:	4610      	movne	r0, r2
 80081c8:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80081cc:	bf1c      	itt	ne
 80081ce:	460b      	movne	r3, r1
 80081d0:	4602      	movne	r2, r0
 80081d2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80081d6:	bf06      	itte	eq
 80081d8:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80081dc:	ea91 0f03 	teqeq	r1, r3
 80081e0:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 80081e4:	bd30      	pop	{r4, r5, pc}
 80081e6:	bf00      	nop

080081e8 <__aeabi_ui2d>:
 80081e8:	f090 0f00 	teq	r0, #0
 80081ec:	bf04      	itt	eq
 80081ee:	2100      	moveq	r1, #0
 80081f0:	4770      	bxeq	lr
 80081f2:	b530      	push	{r4, r5, lr}
 80081f4:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80081f8:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80081fc:	f04f 0500 	mov.w	r5, #0
 8008200:	f04f 0100 	mov.w	r1, #0
 8008204:	e750      	b.n	80080a8 <__adddf3+0x138>
 8008206:	bf00      	nop

08008208 <__aeabi_i2d>:
 8008208:	f090 0f00 	teq	r0, #0
 800820c:	bf04      	itt	eq
 800820e:	2100      	moveq	r1, #0
 8008210:	4770      	bxeq	lr
 8008212:	b530      	push	{r4, r5, lr}
 8008214:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8008218:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800821c:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8008220:	bf48      	it	mi
 8008222:	4240      	negmi	r0, r0
 8008224:	f04f 0100 	mov.w	r1, #0
 8008228:	e73e      	b.n	80080a8 <__adddf3+0x138>
 800822a:	bf00      	nop

0800822c <__aeabi_f2d>:
 800822c:	0042      	lsls	r2, r0, #1
 800822e:	ea4f 01e2 	mov.w	r1, r2, asr #3
 8008232:	ea4f 0131 	mov.w	r1, r1, rrx
 8008236:	ea4f 7002 	mov.w	r0, r2, lsl #28
 800823a:	bf1f      	itttt	ne
 800823c:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 8008240:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8008244:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8008248:	4770      	bxne	lr
 800824a:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800824e:	bf08      	it	eq
 8008250:	4770      	bxeq	lr
 8008252:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8008256:	bf04      	itt	eq
 8008258:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 800825c:	4770      	bxeq	lr
 800825e:	b530      	push	{r4, r5, lr}
 8008260:	f44f 7460 	mov.w	r4, #896	; 0x380
 8008264:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8008268:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 800826c:	e71c      	b.n	80080a8 <__adddf3+0x138>
 800826e:	bf00      	nop

08008270 <__aeabi_ul2d>:
 8008270:	ea50 0201 	orrs.w	r2, r0, r1
 8008274:	bf08      	it	eq
 8008276:	4770      	bxeq	lr
 8008278:	b530      	push	{r4, r5, lr}
 800827a:	f04f 0500 	mov.w	r5, #0
 800827e:	e00a      	b.n	8008296 <__aeabi_l2d+0x16>

08008280 <__aeabi_l2d>:
 8008280:	ea50 0201 	orrs.w	r2, r0, r1
 8008284:	bf08      	it	eq
 8008286:	4770      	bxeq	lr
 8008288:	b530      	push	{r4, r5, lr}
 800828a:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 800828e:	d502      	bpl.n	8008296 <__aeabi_l2d+0x16>
 8008290:	4240      	negs	r0, r0
 8008292:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8008296:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800829a:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800829e:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80082a2:	f43f aed8 	beq.w	8008056 <__adddf3+0xe6>
 80082a6:	f04f 0203 	mov.w	r2, #3
 80082aa:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80082ae:	bf18      	it	ne
 80082b0:	3203      	addne	r2, #3
 80082b2:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80082b6:	bf18      	it	ne
 80082b8:	3203      	addne	r2, #3
 80082ba:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80082be:	f1c2 0320 	rsb	r3, r2, #32
 80082c2:	fa00 fc03 	lsl.w	ip, r0, r3
 80082c6:	fa20 f002 	lsr.w	r0, r0, r2
 80082ca:	fa01 fe03 	lsl.w	lr, r1, r3
 80082ce:	ea40 000e 	orr.w	r0, r0, lr
 80082d2:	fa21 f102 	lsr.w	r1, r1, r2
 80082d6:	4414      	add	r4, r2
 80082d8:	e6bd      	b.n	8008056 <__adddf3+0xe6>
 80082da:	bf00      	nop

080082dc <__aeabi_fmul>:
 80082dc:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80082e0:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 80082e4:	bf1e      	ittt	ne
 80082e6:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 80082ea:	ea92 0f0c 	teqne	r2, ip
 80082ee:	ea93 0f0c 	teqne	r3, ip
 80082f2:	d06f      	beq.n	80083d4 <__aeabi_fmul+0xf8>
 80082f4:	441a      	add	r2, r3
 80082f6:	ea80 0c01 	eor.w	ip, r0, r1
 80082fa:	0240      	lsls	r0, r0, #9
 80082fc:	bf18      	it	ne
 80082fe:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 8008302:	d01e      	beq.n	8008342 <__aeabi_fmul+0x66>
 8008304:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8008308:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 800830c:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 8008310:	fba0 3101 	umull	r3, r1, r0, r1
 8008314:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8008318:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 800831c:	bf3e      	ittt	cc
 800831e:	0049      	lslcc	r1, r1, #1
 8008320:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 8008324:	005b      	lslcc	r3, r3, #1
 8008326:	ea40 0001 	orr.w	r0, r0, r1
 800832a:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
 800832e:	2afd      	cmp	r2, #253	; 0xfd
 8008330:	d81d      	bhi.n	800836e <__aeabi_fmul+0x92>
 8008332:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8008336:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 800833a:	bf08      	it	eq
 800833c:	f020 0001 	biceq.w	r0, r0, #1
 8008340:	4770      	bx	lr
 8008342:	f090 0f00 	teq	r0, #0
 8008346:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 800834a:	bf08      	it	eq
 800834c:	0249      	lsleq	r1, r1, #9
 800834e:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8008352:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 8008356:	3a7f      	subs	r2, #127	; 0x7f
 8008358:	bfc2      	ittt	gt
 800835a:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 800835e:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8008362:	4770      	bxgt	lr
 8008364:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8008368:	f04f 0300 	mov.w	r3, #0
 800836c:	3a01      	subs	r2, #1
 800836e:	dc5d      	bgt.n	800842c <__aeabi_fmul+0x150>
 8008370:	f112 0f19 	cmn.w	r2, #25
 8008374:	bfdc      	itt	le
 8008376:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
 800837a:	4770      	bxle	lr
 800837c:	f1c2 0200 	rsb	r2, r2, #0
 8008380:	0041      	lsls	r1, r0, #1
 8008382:	fa21 f102 	lsr.w	r1, r1, r2
 8008386:	f1c2 0220 	rsb	r2, r2, #32
 800838a:	fa00 fc02 	lsl.w	ip, r0, r2
 800838e:	ea5f 0031 	movs.w	r0, r1, rrx
 8008392:	f140 0000 	adc.w	r0, r0, #0
 8008396:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 800839a:	bf08      	it	eq
 800839c:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 80083a0:	4770      	bx	lr
 80083a2:	f092 0f00 	teq	r2, #0
 80083a6:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 80083aa:	bf02      	ittt	eq
 80083ac:	0040      	lsleq	r0, r0, #1
 80083ae:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 80083b2:	3a01      	subeq	r2, #1
 80083b4:	d0f9      	beq.n	80083aa <__aeabi_fmul+0xce>
 80083b6:	ea40 000c 	orr.w	r0, r0, ip
 80083ba:	f093 0f00 	teq	r3, #0
 80083be:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 80083c2:	bf02      	ittt	eq
 80083c4:	0049      	lsleq	r1, r1, #1
 80083c6:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 80083ca:	3b01      	subeq	r3, #1
 80083cc:	d0f9      	beq.n	80083c2 <__aeabi_fmul+0xe6>
 80083ce:	ea41 010c 	orr.w	r1, r1, ip
 80083d2:	e78f      	b.n	80082f4 <__aeabi_fmul+0x18>
 80083d4:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 80083d8:	ea92 0f0c 	teq	r2, ip
 80083dc:	bf18      	it	ne
 80083de:	ea93 0f0c 	teqne	r3, ip
 80083e2:	d00a      	beq.n	80083fa <__aeabi_fmul+0x11e>
 80083e4:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 80083e8:	bf18      	it	ne
 80083ea:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 80083ee:	d1d8      	bne.n	80083a2 <__aeabi_fmul+0xc6>
 80083f0:	ea80 0001 	eor.w	r0, r0, r1
 80083f4:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 80083f8:	4770      	bx	lr
 80083fa:	f090 0f00 	teq	r0, #0
 80083fe:	bf17      	itett	ne
 8008400:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
 8008404:	4608      	moveq	r0, r1
 8008406:	f091 0f00 	teqne	r1, #0
 800840a:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
 800840e:	d014      	beq.n	800843a <__aeabi_fmul+0x15e>
 8008410:	ea92 0f0c 	teq	r2, ip
 8008414:	d101      	bne.n	800841a <__aeabi_fmul+0x13e>
 8008416:	0242      	lsls	r2, r0, #9
 8008418:	d10f      	bne.n	800843a <__aeabi_fmul+0x15e>
 800841a:	ea93 0f0c 	teq	r3, ip
 800841e:	d103      	bne.n	8008428 <__aeabi_fmul+0x14c>
 8008420:	024b      	lsls	r3, r1, #9
 8008422:	bf18      	it	ne
 8008424:	4608      	movne	r0, r1
 8008426:	d108      	bne.n	800843a <__aeabi_fmul+0x15e>
 8008428:	ea80 0001 	eor.w	r0, r0, r1
 800842c:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8008430:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8008434:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8008438:	4770      	bx	lr
 800843a:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 800843e:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
 8008442:	4770      	bx	lr

08008444 <__aeabi_fdiv>:
 8008444:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8008448:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 800844c:	bf1e      	ittt	ne
 800844e:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8008452:	ea92 0f0c 	teqne	r2, ip
 8008456:	ea93 0f0c 	teqne	r3, ip
 800845a:	d069      	beq.n	8008530 <__aeabi_fdiv+0xec>
 800845c:	eba2 0203 	sub.w	r2, r2, r3
 8008460:	ea80 0c01 	eor.w	ip, r0, r1
 8008464:	0249      	lsls	r1, r1, #9
 8008466:	ea4f 2040 	mov.w	r0, r0, lsl #9
 800846a:	d037      	beq.n	80084dc <__aeabi_fdiv+0x98>
 800846c:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8008470:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 8008474:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8008478:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 800847c:	428b      	cmp	r3, r1
 800847e:	bf38      	it	cc
 8008480:	005b      	lslcc	r3, r3, #1
 8008482:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
 8008486:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
 800848a:	428b      	cmp	r3, r1
 800848c:	bf24      	itt	cs
 800848e:	1a5b      	subcs	r3, r3, r1
 8008490:	ea40 000c 	orrcs.w	r0, r0, ip
 8008494:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 8008498:	bf24      	itt	cs
 800849a:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 800849e:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80084a2:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 80084a6:	bf24      	itt	cs
 80084a8:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 80084ac:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80084b0:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 80084b4:	bf24      	itt	cs
 80084b6:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 80084ba:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 80084be:	011b      	lsls	r3, r3, #4
 80084c0:	bf18      	it	ne
 80084c2:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 80084c6:	d1e0      	bne.n	800848a <__aeabi_fdiv+0x46>
 80084c8:	2afd      	cmp	r2, #253	; 0xfd
 80084ca:	f63f af50 	bhi.w	800836e <__aeabi_fmul+0x92>
 80084ce:	428b      	cmp	r3, r1
 80084d0:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 80084d4:	bf08      	it	eq
 80084d6:	f020 0001 	biceq.w	r0, r0, #1
 80084da:	4770      	bx	lr
 80084dc:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 80084e0:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 80084e4:	327f      	adds	r2, #127	; 0x7f
 80084e6:	bfc2      	ittt	gt
 80084e8:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 80084ec:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 80084f0:	4770      	bxgt	lr
 80084f2:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80084f6:	f04f 0300 	mov.w	r3, #0
 80084fa:	3a01      	subs	r2, #1
 80084fc:	e737      	b.n	800836e <__aeabi_fmul+0x92>
 80084fe:	f092 0f00 	teq	r2, #0
 8008502:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8008506:	bf02      	ittt	eq
 8008508:	0040      	lsleq	r0, r0, #1
 800850a:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 800850e:	3a01      	subeq	r2, #1
 8008510:	d0f9      	beq.n	8008506 <__aeabi_fdiv+0xc2>
 8008512:	ea40 000c 	orr.w	r0, r0, ip
 8008516:	f093 0f00 	teq	r3, #0
 800851a:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 800851e:	bf02      	ittt	eq
 8008520:	0049      	lsleq	r1, r1, #1
 8008522:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8008526:	3b01      	subeq	r3, #1
 8008528:	d0f9      	beq.n	800851e <__aeabi_fdiv+0xda>
 800852a:	ea41 010c 	orr.w	r1, r1, ip
 800852e:	e795      	b.n	800845c <__aeabi_fdiv+0x18>
 8008530:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8008534:	ea92 0f0c 	teq	r2, ip
 8008538:	d108      	bne.n	800854c <__aeabi_fdiv+0x108>
 800853a:	0242      	lsls	r2, r0, #9
 800853c:	f47f af7d 	bne.w	800843a <__aeabi_fmul+0x15e>
 8008540:	ea93 0f0c 	teq	r3, ip
 8008544:	f47f af70 	bne.w	8008428 <__aeabi_fmul+0x14c>
 8008548:	4608      	mov	r0, r1
 800854a:	e776      	b.n	800843a <__aeabi_fmul+0x15e>
 800854c:	ea93 0f0c 	teq	r3, ip
 8008550:	d104      	bne.n	800855c <__aeabi_fdiv+0x118>
 8008552:	024b      	lsls	r3, r1, #9
 8008554:	f43f af4c 	beq.w	80083f0 <__aeabi_fmul+0x114>
 8008558:	4608      	mov	r0, r1
 800855a:	e76e      	b.n	800843a <__aeabi_fmul+0x15e>
 800855c:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8008560:	bf18      	it	ne
 8008562:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8008566:	d1ca      	bne.n	80084fe <__aeabi_fdiv+0xba>
 8008568:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
 800856c:	f47f af5c 	bne.w	8008428 <__aeabi_fmul+0x14c>
 8008570:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
 8008574:	f47f af3c 	bne.w	80083f0 <__aeabi_fmul+0x114>
 8008578:	e75f      	b.n	800843a <__aeabi_fmul+0x15e>
 800857a:	bf00      	nop

0800857c <__aeabi_f2uiz>:
 800857c:	0042      	lsls	r2, r0, #1
 800857e:	d20e      	bcs.n	800859e <__aeabi_f2uiz+0x22>
 8008580:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 8008584:	d30b      	bcc.n	800859e <__aeabi_f2uiz+0x22>
 8008586:	f04f 039e 	mov.w	r3, #158	; 0x9e
 800858a:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 800858e:	d409      	bmi.n	80085a4 <__aeabi_f2uiz+0x28>
 8008590:	ea4f 2300 	mov.w	r3, r0, lsl #8
 8008594:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8008598:	fa23 f002 	lsr.w	r0, r3, r2
 800859c:	4770      	bx	lr
 800859e:	f04f 0000 	mov.w	r0, #0
 80085a2:	4770      	bx	lr
 80085a4:	f112 0f61 	cmn.w	r2, #97	; 0x61
 80085a8:	d101      	bne.n	80085ae <__aeabi_f2uiz+0x32>
 80085aa:	0242      	lsls	r2, r0, #9
 80085ac:	d102      	bne.n	80085b4 <__aeabi_f2uiz+0x38>
 80085ae:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80085b2:	4770      	bx	lr
 80085b4:	f04f 0000 	mov.w	r0, #0
 80085b8:	4770      	bx	lr
 80085ba:	bf00      	nop

080085bc <Reset_Handler>:
 80085bc:	2100      	movs	r1, #0
 80085be:	e003      	b.n	80085c8 <DataInit>

080085c0 <CopyData>:
 80085c0:	4b0a      	ldr	r3, [pc, #40]	; (80085ec <Zerobss+0x10>)
 80085c2:	585b      	ldr	r3, [r3, r1]
 80085c4:	5043      	str	r3, [r0, r1]
 80085c6:	3104      	adds	r1, #4

080085c8 <DataInit>:
 80085c8:	4809      	ldr	r0, [pc, #36]	; (80085f0 <Zerobss+0x14>)
 80085ca:	4b0a      	ldr	r3, [pc, #40]	; (80085f4 <Zerobss+0x18>)
 80085cc:	1842      	adds	r2, r0, r1
 80085ce:	429a      	cmp	r2, r3
 80085d0:	d3f6      	bcc.n	80085c0 <CopyData>
 80085d2:	4a09      	ldr	r2, [pc, #36]	; (80085f8 <Zerobss+0x1c>)
 80085d4:	e002      	b.n	80085dc <Zerobss>

080085d6 <FillZerobss>:
 80085d6:	2300      	movs	r3, #0
 80085d8:	f842 3b04 	str.w	r3, [r2], #4

080085dc <Zerobss>:
 80085dc:	4b07      	ldr	r3, [pc, #28]	; (80085fc <Zerobss+0x20>)
 80085de:	429a      	cmp	r2, r3
 80085e0:	d3f9      	bcc.n	80085d6 <FillZerobss>
 80085e2:	f00a fa09 	bl	80129f8 <SystemInit>
 80085e6:	f000 f997 	bl	8008918 <main>
 80085ea:	4770      	bx	lr
 80085ec:	080178f4 	stmdaeq	r1, {r2, r4, r5, r6, r7, fp, ip, sp, lr}
 80085f0:	20000000 	andcs	r0, r0, r0
 80085f4:	200000e8 	andcs	r0, r0, r8, ror #1
 80085f8:	200000e8 	andcs	r0, r0, r8, ror #1
 80085fc:	20025228 	andcs	r5, r2, r8, lsr #4

08008600 <ADC0_1_IRQHandler>:
 8008600:	e7fe      	b.n	8008600 <ADC0_1_IRQHandler>

08008602 <memcpy>:
 8008602:	b510      	push	{r4, lr}
 8008604:	1e43      	subs	r3, r0, #1
 8008606:	440a      	add	r2, r1
 8008608:	4291      	cmp	r1, r2
 800860a:	d100      	bne.n	800860e <memcpy+0xc>
 800860c:	bd10      	pop	{r4, pc}
 800860e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8008612:	f803 4f01 	strb.w	r4, [r3, #1]!
 8008616:	e7f7      	b.n	8008608 <memcpy+0x6>

08008618 <DisplayHandler::~DisplayHandler()>:
 8008618:	4770      	bx	lr

0800861a <PixelDmxStartStop::~PixelDmxStartStop()>:
 800861a:	4770      	bx	lr

0800861c <PixelDmxStartStop::Start()>:
 800861c:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8008620:	4b01      	ldr	r3, [pc, #4]	; (8008628 <PixelDmxStartStop::Start()+0xc>)
 8008622:	f8c3 2c10 	str.w	r2, [r3, #3088]	; 0xc10
 8008626:	4770      	bx	lr
 8008628:	40010000 	andmi	r0, r1, r0

0800862c <PixelDmxStartStop::Stop()>:
 800862c:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8008630:	4b01      	ldr	r3, [pc, #4]	; (8008638 <PixelDmxStartStop::Stop()+0xc>)
 8008632:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 8008636:	4770      	bx	lr
 8008638:	40010000 	andmi	r0, r1, r0

0800863c <RDMNetDevice::CopyUID(unsigned char*)>:
 800863c:	460b      	mov	r3, r1
 800863e:	2206      	movs	r2, #6
 8008640:	1d01      	adds	r1, r0, #4
 8008642:	4618      	mov	r0, r3
 8008644:	f7ff bfdd 	b.w	8008602 <memcpy>

08008648 <non-virtual thunk to RDMNetDevice::CopyUID(unsigned char*)>:
 8008648:	f1a0 00cc 	sub.w	r0, r0, #204	; 0xcc
 800864c:	e7f6      	b.n	800863c <RDMNetDevice::CopyUID(unsigned char*)>
	...

08008650 <RDMNetDevice::CopyCID(unsigned char*)>:
 8008650:	4608      	mov	r0, r1
 8008652:	2210      	movs	r2, #16
 8008654:	4901      	ldr	r1, [pc, #4]	; (800865c <RDMNetDevice::CopyCID(unsigned char*)+0xc>)
 8008656:	f7ff bfd4 	b.w	8008602 <memcpy>
 800865a:	bf00      	nop
 800865c:	2000982f 	andcs	r9, r0, pc, lsr #16

08008660 <non-virtual thunk to RDMNetDevice::CopyCID(unsigned char*)>:
 8008660:	f1a0 00cc 	sub.w	r0, r0, #204	; 0xcc
 8008664:	e7f4      	b.n	8008650 <RDMNetDevice::CopyCID(unsigned char*)>
 8008666:	bf00      	nop

08008668 <FactoryDefaults::~FactoryDefaults()>:
 8008668:	4770      	bx	lr

0800866a <DisplayHandler::~DisplayHandler()>:
 800866a:	b510      	push	{r4, lr}
 800866c:	4604      	mov	r4, r0
 800866e:	f009 ff6f 	bl	8012550 <operator delete(void*)>
 8008672:	4620      	mov	r0, r4
 8008674:	bd10      	pop	{r4, pc}

08008676 <PixelDmxStartStop::~PixelDmxStartStop()>:
 8008676:	b510      	push	{r4, lr}
 8008678:	4604      	mov	r4, r0
 800867a:	f009 ff69 	bl	8012550 <operator delete(void*)>
 800867e:	4620      	mov	r0, r4
 8008680:	bd10      	pop	{r4, pc}

08008682 <FactoryDefaults::~FactoryDefaults()>:
 8008682:	b510      	push	{r4, lr}
 8008684:	4604      	mov	r4, r0
 8008686:	f009 ff63 	bl	8012550 <operator delete(void*)>
 800868a:	4620      	mov	r0, r4
 800868c:	bd10      	pop	{r4, pc}
	...

08008690 <RDMNetDevice::LLRPHandleRdmCommand(unsigned char const*)>:
 8008690:	b510      	push	{r4, lr}
 8008692:	4c03      	ldr	r4, [pc, #12]	; (80086a0 <RDMNetDevice::LLRPHandleRdmCommand(unsigned char const*)+0x10>)
 8008694:	30d0      	adds	r0, #208	; 0xd0
 8008696:	4622      	mov	r2, r4
 8008698:	f003 fb4a 	bl	800bd30 <RDMHandler::HandleData(unsigned char const*, unsigned char*)>
 800869c:	4620      	mov	r0, r4
 800869e:	bd10      	pop	{r4, pc}
 80086a0:	20009730 	andcs	r9, r0, r0, lsr r7

080086a4 <non-virtual thunk to RDMNetDevice::LLRPHandleRdmCommand(unsigned char const*)>:
 80086a4:	f1a0 00cc 	sub.w	r0, r0, #204	; 0xcc
 80086a8:	e7f2      	b.n	8008690 <RDMNetDevice::LLRPHandleRdmCommand(unsigned char const*)>
 80086aa:	bf00      	nop

080086ac <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>:
 80086ac:	b110      	cbz	r0, 80086b4 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]+0x8>
 80086ae:	6803      	ldr	r3, [r0, #0]
 80086b0:	6a1b      	ldr	r3, [r3, #32]
 80086b2:	4718      	bx	r3
 80086b4:	4770      	bx	lr

080086b6 <Display::PutChar(int) [clone .isra.0]>:
 80086b6:	b110      	cbz	r0, 80086be <Display::PutChar(int) [clone .isra.0]+0x8>
 80086b8:	6803      	ldr	r3, [r0, #0]
 80086ba:	695b      	ldr	r3, [r3, #20]
 80086bc:	4718      	bx	r3
 80086be:	4770      	bx	lr

080086c0 <DisplayHandler::Print(unsigned int)>:
 80086c0:	b538      	push	{r3, r4, r5, lr}
 80086c2:	7903      	ldrb	r3, [r0, #4]
 80086c4:	b1f3      	cbz	r3, 8008704 <DisplayHandler::Print(unsigned int)+0x44>
 80086c6:	2904      	cmp	r1, #4
 80086c8:	bf98      	it	ls
 80086ca:	4b0f      	ldrls	r3, [pc, #60]	; (8008708 <DisplayHandler::Print(unsigned int)+0x48>)
 80086cc:	4d0f      	ldr	r5, [pc, #60]	; (800870c <DisplayHandler::Print(unsigned int)+0x4c>)
 80086ce:	bf98      	it	ls
 80086d0:	5c5c      	ldrbls	r4, [r3, r1]
 80086d2:	682b      	ldr	r3, [r5, #0]
 80086d4:	bf88      	it	hi
 80086d6:	2455      	movhi	r4, #85	; 0x55
 80086d8:	6998      	ldr	r0, [r3, #24]
 80086da:	b178      	cbz	r0, 80086fc <DisplayHandler::Print(unsigned int)+0x3c>
 80086dc:	7901      	ldrb	r1, [r0, #4]
 80086de:	3901      	subs	r1, #1
 80086e0:	b2c9      	uxtb	r1, r1
 80086e2:	b168      	cbz	r0, 8008700 <DisplayHandler::Print(unsigned int)+0x40>
 80086e4:	7942      	ldrb	r2, [r0, #5]
 80086e6:	3a01      	subs	r2, #1
 80086e8:	b2d2      	uxtb	r2, r2
 80086ea:	f7ff ffdf 	bl	80086ac <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 80086ee:	682b      	ldr	r3, [r5, #0]
 80086f0:	4621      	mov	r1, r4
 80086f2:	6998      	ldr	r0, [r3, #24]
 80086f4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80086f8:	f7ff bfdd 	b.w	80086b6 <Display::PutChar(int) [clone .isra.0]>
 80086fc:	4601      	mov	r1, r0
 80086fe:	e7ee      	b.n	80086de <DisplayHandler::Print(unsigned int)+0x1e>
 8008700:	4602      	mov	r2, r0
 8008702:	e7f0      	b.n	80086e6 <DisplayHandler::Print(unsigned int)+0x26>
 8008704:	bd38      	pop	{r3, r4, r5, pc}
 8008706:	bf00      	nop
 8008708:	08014c58 	stmdaeq	r1, {r3, r4, r6, sl, fp, lr}
 800870c:	2001a860 	andcs	sl, r1, r0, ror #16

08008710 <RDMNetDevice::~RDMNetDevice()>:
 8008710:	b510      	push	{r4, lr}
 8008712:	4604      	mov	r4, r0
 8008714:	4b05      	ldr	r3, [pc, #20]	; (800872c <RDMNetDevice::~RDMNetDevice()+0x1c>)
 8008716:	f840 3b88 	str.w	r3, [r0], #136
 800871a:	f002 fdb1 	bl	800b280 <RDMSubDevices::~RDMSubDevices()>
 800871e:	f104 0080 	add.w	r0, r4, #128	; 0x80
 8008722:	f002 fd8d 	bl	800b240 <RDMSensors::~RDMSensors()>
 8008726:	4620      	mov	r0, r4
 8008728:	bd10      	pop	{r4, pc}
 800872a:	bf00      	nop
 800872c:	08015fdc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r8, r9, sl, fp, ip, lr}

08008730 <non-virtual thunk to RDMNetDevice::~RDMNetDevice()>:
 8008730:	f1a0 00cc 	sub.w	r0, r0, #204	; 0xcc
 8008734:	e7ec      	b.n	8008710 <RDMNetDevice::~RDMNetDevice()>
 8008736:	bf00      	nop

08008738 <RDMNetDevice::~RDMNetDevice()>:
 8008738:	b510      	push	{r4, lr}
 800873a:	4604      	mov	r4, r0
 800873c:	f7ff ffe8 	bl	8008710 <RDMNetDevice::~RDMNetDevice()>
 8008740:	4620      	mov	r0, r4
 8008742:	f009 ff05 	bl	8012550 <operator delete(void*)>
 8008746:	4620      	mov	r0, r4
 8008748:	bd10      	pop	{r4, pc}

0800874a <non-virtual thunk to RDMNetDevice::~RDMNetDevice()>:
 800874a:	f1a0 00cc 	sub.w	r0, r0, #204	; 0xcc
 800874e:	e7f3      	b.n	8008738 <RDMNetDevice::~RDMNetDevice()>

08008750 <Display::Printf(unsigned char, char const*, ...)>:
 8008750:	b40c      	push	{r2, r3}
 8008752:	b570      	push	{r4, r5, r6, lr}
 8008754:	6984      	ldr	r4, [r0, #24]
 8008756:	4605      	mov	r5, r0
 8008758:	460e      	mov	r6, r1
 800875a:	b08a      	sub	sp, #40	; 0x28
 800875c:	b174      	cbz	r4, 800877c <Display::Printf(unsigned char, char const*, ...)+0x2c>
 800875e:	ab0f      	add	r3, sp, #60	; 0x3c
 8008760:	2120      	movs	r1, #32
 8008762:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8008764:	a802      	add	r0, sp, #8
 8008766:	9301      	str	r3, [sp, #4]
 8008768:	f000 ff42 	bl	80095f0 <vsnprintf>
 800876c:	4604      	mov	r4, r0
 800876e:	69a8      	ldr	r0, [r5, #24]
 8008770:	4631      	mov	r1, r6
 8008772:	6803      	ldr	r3, [r0, #0]
 8008774:	aa02      	add	r2, sp, #8
 8008776:	69dd      	ldr	r5, [r3, #28]
 8008778:	b2a3      	uxth	r3, r4
 800877a:	47a8      	blx	r5
 800877c:	4620      	mov	r0, r4
 800877e:	b00a      	add	sp, #40	; 0x28
 8008780:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8008784:	b002      	add	sp, #8
 8008786:	4770      	bx	lr

08008788 <Display::TextStatus(char const*)>:
 8008788:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800878c:	4604      	mov	r4, r0
 800878e:	6980      	ldr	r0, [r0, #24]
 8008790:	460d      	mov	r5, r1
 8008792:	b360      	cbz	r0, 80087ee <Display::TextStatus(char const*)+0x66>
 8008794:	7947      	ldrb	r7, [r0, #5]
 8008796:	2100      	movs	r1, #0
 8008798:	1e7e      	subs	r6, r7, #1
 800879a:	b2f6      	uxtb	r6, r6
 800879c:	4632      	mov	r2, r6
 800879e:	f890 9004 	ldrb.w	r9, [r0, #4]
 80087a2:	f04f 0800 	mov.w	r8, #0
 80087a6:	f7ff ff81 	bl	80086ac <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 80087aa:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 80087ae:	45c1      	cmp	r9, r8
 80087b0:	69a0      	ldr	r0, [r4, #24]
 80087b2:	d816      	bhi.n	80087e2 <Display::TextStatus(char const*)+0x5a>
 80087b4:	4632      	mov	r2, r6
 80087b6:	2100      	movs	r1, #0
 80087b8:	f7ff ff78 	bl	80086ac <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 80087bc:	69a0      	ldr	r0, [r4, #24]
 80087be:	b1b0      	cbz	r0, 80087ee <Display::TextStatus(char const*)+0x66>
 80087c0:	2300      	movs	r3, #0
 80087c2:	7901      	ldrb	r1, [r0, #4]
 80087c4:	5cea      	ldrb	r2, [r5, r3]
 80087c6:	b11a      	cbz	r2, 80087d0 <Display::TextStatus(char const*)+0x48>
 80087c8:	1c5a      	adds	r2, r3, #1
 80087ca:	4299      	cmp	r1, r3
 80087cc:	4613      	mov	r3, r2
 80087ce:	dcf9      	bgt.n	80087c4 <Display::TextStatus(char const*)+0x3c>
 80087d0:	6802      	ldr	r2, [r0, #0]
 80087d2:	4639      	mov	r1, r7
 80087d4:	69d4      	ldr	r4, [r2, #28]
 80087d6:	b2db      	uxtb	r3, r3
 80087d8:	462a      	mov	r2, r5
 80087da:	46a4      	mov	ip, r4
 80087dc:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80087e0:	4760      	bx	ip
 80087e2:	2120      	movs	r1, #32
 80087e4:	f7ff ff67 	bl	80086b6 <Display::PutChar(int) [clone .isra.0]>
 80087e8:	f108 0801 	add.w	r8, r8, #1
 80087ec:	e7df      	b.n	80087ae <Display::TextStatus(char const*)+0x26>
 80087ee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

080087f2 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>:
 80087f2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80087f4:	4605      	mov	r5, r0
 80087f6:	461e      	mov	r6, r3
 80087f8:	460f      	mov	r7, r1
 80087fa:	4614      	mov	r4, r2
 80087fc:	f7ff ffc4 	bl	8008788 <Display::TextStatus(char const*)>
 8008800:	7c6b      	ldrb	r3, [r5, #17]
 8008802:	b19b      	cbz	r3, 800882c <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x3a>
 8008804:	43e2      	mvns	r2, r4
 8008806:	2312      	movs	r3, #18
 8008808:	7a28      	ldrb	r0, [r5, #8]
 800880a:	f88d 3004 	strb.w	r3, [sp, #4]
 800880e:	f3c2 2307 	ubfx	r3, r2, #8, #8
 8008812:	f88d 3005 	strb.w	r3, [sp, #5]
 8008816:	f88d 2006 	strb.w	r2, [sp, #6]
 800881a:	f00b f887 	bl	801392c <gd32_i2c_set_address>
 800881e:	68e8      	ldr	r0, [r5, #12]
 8008820:	f00b f87c 	bl	801391c <gd32_i2c_set_baudrate>
 8008824:	2103      	movs	r1, #3
 8008826:	a801      	add	r0, sp, #4
 8008828:	f00b f886 	bl	8013938 <gd32_i2c_write>
 800882c:	1c73      	adds	r3, r6, #1
 800882e:	d006      	beq.n	800883e <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x4c>
 8008830:	4639      	mov	r1, r7
 8008832:	4630      	mov	r0, r6
 8008834:	b003      	add	sp, #12
 8008836:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800883a:	f009 bd2d 	b.w	8012298 <console_status>
 800883e:	b003      	add	sp, #12
 8008840:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08008844 <Display::SetSleep(bool)>:
 8008844:	b538      	push	{r3, r4, r5, lr}
 8008846:	4604      	mov	r4, r0
 8008848:	6980      	ldr	r0, [r0, #24]
 800884a:	460d      	mov	r5, r1
 800884c:	b138      	cbz	r0, 800885e <Display::SetSleep(bool)+0x1a>
 800884e:	6803      	ldr	r3, [r0, #0]
 8008850:	7421      	strb	r1, [r4, #16]
 8008852:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008854:	4798      	blx	r3
 8008856:	b915      	cbnz	r5, 800885e <Display::SetSleep(bool)+0x1a>
 8008858:	4b01      	ldr	r3, [pc, #4]	; (8008860 <Display::SetSleep(bool)+0x1c>)
 800885a:	681b      	ldr	r3, [r3, #0]
 800885c:	6063      	str	r3, [r4, #4]
 800885e:	bd38      	pop	{r3, r4, r5, pc}
 8008860:	2001a964 	andcs	sl, r1, r4, ror #18

08008864 <display::timeout::gpio_init()>:
 8008864:	b510      	push	{r4, lr}
 8008866:	f240 6003 	movw	r0, #1539	; 0x603
 800886a:	f00a fafd 	bl	8012e68 <rcu_periph_clock_enable>
 800886e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8008872:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8008876:	2203      	movs	r2, #3
 8008878:	2148      	movs	r1, #72	; 0x48
 800887a:	4801      	ldr	r0, [pc, #4]	; (8008880 <display::timeout::gpio_init()+0x1c>)
 800887c:	f00a ba5c 	b.w	8012d38 <gpio_init>
 8008880:	40010c00 	andmi	r0, r1, r0, lsl #24

08008884 <display::timeout::gpio_renew()>:
 8008884:	4b03      	ldr	r3, [pc, #12]	; (8008894 <display::timeout::gpio_renew()+0x10>)
 8008886:	f8d3 0c08 	ldr.w	r0, [r3, #3080]	; 0xc08
 800888a:	f480 4080 	eor.w	r0, r0, #16384	; 0x4000
 800888e:	f3c0 3080 	ubfx	r0, r0, #14, #1
 8008892:	4770      	bx	lr
 8008894:	40010000 	andmi	r0, r1, r0

08008898 <StoreNetwork::SaveDhcp(bool)>:
 8008898:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800889a:	2301      	movs	r3, #1
 800889c:	f88d 1017 	strb.w	r1, [sp, #23]
 80088a0:	2100      	movs	r1, #0
 80088a2:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80088a6:	4805      	ldr	r0, [pc, #20]	; (80088bc <StoreNetwork::SaveDhcp(bool)+0x24>)
 80088a8:	9300      	str	r3, [sp, #0]
 80088aa:	2214      	movs	r2, #20
 80088ac:	6800      	ldr	r0, [r0, #0]
 80088ae:	f10d 0317 	add.w	r3, sp, #23
 80088b2:	f005 fea9 	bl	800e608 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 80088b6:	b007      	add	sp, #28
 80088b8:	f85d fb04 	ldr.w	pc, [sp], #4
 80088bc:	20012984 	andcs	r2, r1, r4, lsl #19

080088c0 <non-virtual thunk to StoreNetwork::SaveDhcp(bool)>:
 80088c0:	f1a0 0004 	sub.w	r0, r0, #4
 80088c4:	e7e8      	b.n	8008898 <StoreNetwork::SaveDhcp(bool)>
 80088c6:	bf00      	nop

080088c8 <FactoryDefaults::Set()>:
 80088c8:	b508      	push	{r3, lr}
 80088ca:	4b08      	ldr	r3, [pc, #32]	; (80088ec <FactoryDefaults::Set()+0x24>)
 80088cc:	2100      	movs	r1, #0
 80088ce:	6818      	ldr	r0, [r3, #0]
 80088d0:	f001 f9b4 	bl	8009c3c <RemoteConfig::SetDisable(bool)>
 80088d4:	4b06      	ldr	r3, [pc, #24]	; (80088f0 <FactoryDefaults::Set()+0x28>)
 80088d6:	210b      	movs	r1, #11
 80088d8:	6818      	ldr	r0, [r3, #0]
 80088da:	f005 fe83 	bl	800e5e4 <SpiFlashStore::ResetSetList(spiflashstore::Store)>
 80088de:	4b05      	ldr	r3, [pc, #20]	; (80088f4 <FactoryDefaults::Set()+0x2c>)
 80088e0:	2101      	movs	r1, #1
 80088e2:	6818      	ldr	r0, [r3, #0]
 80088e4:	f7ff ffd8 	bl	8008898 <StoreNetwork::SaveDhcp(bool)>
 80088e8:	bd08      	pop	{r3, pc}
 80088ea:	bf00      	nop
 80088ec:	20000114 	andcs	r0, r0, r4, lsl r1
 80088f0:	20012984 	andcs	r2, r1, r4, lsl #19
 80088f4:	20012990 	mulcs	r1, r0, r9

080088f8 <Hardware::RebootHandler()>:
 80088f8:	b508      	push	{r3, lr}
 80088fa:	4b05      	ldr	r3, [pc, #20]	; (8008910 <Hardware::RebootHandler()+0x18>)
 80088fc:	6818      	ldr	r0, [r3, #0]
 80088fe:	f005 fb8d 	bl	800e01c <WS28xxMulti::Blackout()>
 8008902:	4b04      	ldr	r3, [pc, #16]	; (8008914 <Hardware::RebootHandler()+0x1c>)
 8008904:	6818      	ldr	r0, [r3, #0]
 8008906:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800890a:	f002 ba53 	b.w	800adb4 <PixelPusher::Stop()>
 800890e:	bf00      	nop
 8008910:	2000996c 	andcs	r9, r0, ip, ror #18
 8008914:	2000971c 	andcs	r9, r0, ip, lsl r7

08008918 <main>:
 8008918:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800891c:	2501      	movs	r5, #1
 800891e:	f2ad 4dac 	subw	sp, sp, #1196	; 0x4ac
 8008922:	a805      	add	r0, sp, #20
 8008924:	f009 fd6c 	bl	8012400 <Hardware::Hardware()>
 8008928:	a8c0      	add	r0, sp, #768	; 0x300
 800892a:	f007 fabd 	bl	800fea8 <Network::Network()>
 800892e:	a814      	add	r0, sp, #80	; 0x50
 8008930:	f009 fd10 	bl	8012354 <LedBlink::LedBlink()>
 8008934:	a875      	add	r0, sp, #468	; 0x1d4
 8008936:	f008 fbc5 	bl	80110c4 <DisplayUdf::DisplayUdf()>
 800893a:	4bbb      	ldr	r3, [pc, #748]	; (8008c28 <main+0x310>)
 800893c:	4abb      	ldr	r2, [pc, #748]	; (8008c2c <main+0x314>)
 800893e:	49bc      	ldr	r1, [pc, #752]	; (8008c30 <main+0x318>)
 8008940:	a806      	add	r0, sp, #24
 8008942:	f009 fcc1 	bl	80122c8 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>
 8008946:	a807      	add	r0, sp, #28
 8008948:	f006 f96c 	bl	800ec24 <FlashRom::FlashRom()>
 800894c:	4eb9      	ldr	r6, [pc, #740]	; (8008c34 <main+0x31c>)
 800894e:	a808      	add	r0, sp, #32
 8008950:	f005 fe22 	bl	800e598 <SpiFlashStore::SpiFlashStore()>
 8008954:	49b8      	ldr	r1, [pc, #736]	; (8008c38 <main+0x320>)
 8008956:	a806      	add	r0, sp, #24
 8008958:	f009 fcee 	bl	8012338 <FirmwareVersion::Print(char const*)>
 800895c:	2008      	movs	r0, #8
 800895e:	6135      	str	r5, [r6, #16]
 8008960:	f009 fdfa 	bl	8012558 <operator new(unsigned int)>
 8008964:	4bb5      	ldr	r3, [pc, #724]	; (8008c3c <main+0x324>)
 8008966:	2400      	movs	r4, #0
 8008968:	6003      	str	r3, [r0, #0]
 800896a:	4bb5      	ldr	r3, [pc, #724]	; (8008c40 <main+0x328>)
 800896c:	f44f 62c0 	mov.w	r2, #1536	; 0x600
 8008970:	681b      	ldr	r3, [r3, #0]
 8008972:	49b4      	ldr	r1, [pc, #720]	; (8008c44 <main+0x32c>)
 8008974:	3b00      	subs	r3, #0
 8008976:	bf18      	it	ne
 8008978:	2301      	movne	r3, #1
 800897a:	9016      	str	r0, [sp, #88]	; 0x58
 800897c:	7103      	strb	r3, [r0, #4]
 800897e:	2303      	movs	r3, #3
 8008980:	a875      	add	r0, sp, #468	; 0x1d4
 8008982:	f7ff ff36 	bl	80087f2 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008986:	a80e      	add	r0, sp, #56	; 0x38
 8008988:	f005 ffcc 	bl	800e924 <StoreNetwork::StoreNetwork()>
 800898c:	ab0f      	add	r3, sp, #60	; 0x3c
 800898e:	a90e      	add	r1, sp, #56	; 0x38
 8008990:	a8c0      	add	r0, sp, #768	; 0x300
 8008992:	93ee      	str	r3, [sp, #952]	; 0x3b8
 8008994:	f007 fae0 	bl	800ff58 <Network::Init(NetworkParamsStore*)>
 8008998:	a8c0      	add	r0, sp, #768	; 0x300
 800899a:	f007 fd45 	bl	8010428 <Network::Print()>
 800899e:	a809      	add	r0, sp, #36	; 0x24
 80089a0:	f006 fec4 	bl	800f72c <MDNS::MDNS()>
 80089a4:	a809      	add	r0, sp, #36	; 0x24
 80089a6:	f006 ff81 	bl	800f8ac <MDNS::Start()>
 80089aa:	f642 1305 	movw	r3, #10501	; 0x2905
 80089ae:	4621      	mov	r1, r4
 80089b0:	4aa5      	ldr	r2, [pc, #660]	; (8008c48 <main+0x330>)
 80089b2:	e9cd 4400 	strd	r4, r4, [sp]
 80089b6:	a809      	add	r0, sp, #36	; 0x24
 80089b8:	f007 f8e2 	bl	800fb80 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 80089bc:	2345      	movs	r3, #69	; 0x45
 80089be:	4621      	mov	r1, r4
 80089c0:	4aa2      	ldr	r2, [pc, #648]	; (8008c4c <main+0x334>)
 80089c2:	e9cd 4400 	strd	r4, r4, [sp]
 80089c6:	a809      	add	r0, sp, #36	; 0x24
 80089c8:	f007 f8da 	bl	800fb80 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 80089cc:	4ba0      	ldr	r3, [pc, #640]	; (8008c50 <main+0x338>)
 80089ce:	4621      	mov	r1, r4
 80089d0:	4aa0      	ldr	r2, [pc, #640]	; (8008c54 <main+0x33c>)
 80089d2:	e9cd 5300 	strd	r5, r3, [sp]
 80089d6:	a809      	add	r0, sp, #36	; 0x24
 80089d8:	2350      	movs	r3, #80	; 0x50
 80089da:	f007 f8d1 	bl	800fb80 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 80089de:	a809      	add	r0, sp, #36	; 0x24
 80089e0:	f007 fa14 	bl	800fe0c <MDNS::Print()>
 80089e4:	a83e      	add	r0, sp, #248	; 0xf8
 80089e6:	f001 fd99 	bl	800a51c <HttpDaemon::HttpDaemon()>
 80089ea:	a83e      	add	r0, sp, #248	; 0xf8
 80089ec:	f001 fdaa 	bl	800a544 <HttpDaemon::Start()>
 80089f0:	23aa      	movs	r3, #170	; 0xaa
 80089f2:	2203      	movs	r2, #3
 80089f4:	e9cd 235d 	strd	r2, r3, [sp, #372]	; 0x174
 80089f8:	2206      	movs	r2, #6
 80089fa:	e9cd 245f 	strd	r2, r4, [sp, #380]	; 0x17c
 80089fe:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8008a02:	9261      	str	r2, [sp, #388]	; 0x184
 8008a04:	f44f 7280 	mov.w	r2, #256	; 0x100
 8008a08:	f8ad 2188 	strh.w	r2, [sp, #392]	; 0x188
 8008a0c:	4a92      	ldr	r2, [pc, #584]	; (8008c58 <main+0x340>)
 8008a0e:	a810      	add	r0, sp, #64	; 0x40
 8008a10:	e9cd 2563 	strd	r2, r5, [sp, #396]	; 0x18c
 8008a14:	e9cd 5365 	strd	r5, r3, [sp, #404]	; 0x194
 8008a18:	f8ad 51a0 	strh.w	r5, [sp, #416]	; 0x1a0
 8008a1c:	f006 f8f6 	bl	800ec0c <StorePixelDmx::StorePixelDmx()>
 8008a20:	a910      	add	r1, sp, #64	; 0x40
 8008a22:	a852      	add	r0, sp, #328	; 0x148
 8008a24:	f003 ff70 	bl	800c908 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)>
 8008a28:	a852      	add	r0, sp, #328	; 0x148
 8008a2a:	f003 ff8f 	bl	800c94c <PixelDmxParams::Load()>
 8008a2e:	b130      	cbz	r0, 8008a3e <main+0x126>
 8008a30:	a852      	add	r0, sp, #328	; 0x148
 8008a32:	f004 fadf 	bl	800cff4 <PixelDmxParams::Dump()>
 8008a36:	a95d      	add	r1, sp, #372	; 0x174
 8008a38:	a852      	add	r0, sp, #328	; 0x148
 8008a3a:	f004 fa96 	bl	800cf6a <PixelDmxParams::Set(PixelDmxConfiguration*)>
 8008a3e:	a95d      	add	r1, sp, #372	; 0x174
 8008a40:	a889      	add	r0, sp, #548	; 0x224
 8008a42:	f003 fe79 	bl	800c738 <WS28xxDmxMulti::WS28xxDmxMulti(PixelDmxConfiguration&)>
 8008a46:	2004      	movs	r0, #4
 8008a48:	f009 fd86 	bl	8012558 <operator new(unsigned int)>
 8008a4c:	4b83      	ldr	r3, [pc, #524]	; (8008c5c <main+0x344>)
 8008a4e:	4604      	mov	r4, r0
 8008a50:	2110      	movs	r1, #16
 8008a52:	6003      	str	r3, [r0, #0]
 8008a54:	2203      	movs	r2, #3
 8008a56:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8008a5a:	4881      	ldr	r0, [pc, #516]	; (8008c60 <main+0x348>)
 8008a5c:	f00a f96c 	bl	8012d38 <gpio_init>
 8008a60:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8008a64:	4b7f      	ldr	r3, [pc, #508]	; (8008c64 <main+0x34c>)
 8008a66:	a89f      	add	r0, sp, #636	; 0x27c
 8008a68:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 8008a6c:	949c      	str	r4, [sp, #624]	; 0x270
 8008a6e:	f002 f935 	bl	800acdc <PixelPusher::PixelPusher()>
 8008a72:	9b93      	ldr	r3, [sp, #588]	; 0x24c
 8008a74:	22ab      	movs	r2, #171	; 0xab
 8008a76:	f5b3 7ff0 	cmp.w	r3, #480	; 0x1e0
 8008a7a:	bf28      	it	cs
 8008a7c:	f44f 73f0 	movcs.w	r3, #480	; 0x1e0
 8008a80:	9d91      	ldr	r5, [sp, #580]	; 0x244
 8008a82:	93a3      	str	r3, [sp, #652]	; 0x28c
 8008a84:	2d07      	cmp	r5, #7
 8008a86:	fbb3 f3f2 	udiv	r3, r3, r2
 8008a8a:	bf94      	ite	ls
 8008a8c:	462a      	movls	r2, r5
 8008a8e:	2208      	movhi	r2, #8
 8008a90:	2400      	movs	r4, #0
 8008a92:	3301      	adds	r3, #1
 8008a94:	93a5      	str	r3, [sp, #660]	; 0x294
 8008a96:	4353      	muls	r3, r2
 8008a98:	f89d 715c 	ldrb.w	r7, [sp, #348]	; 0x15c
 8008a9c:	4629      	mov	r1, r5
 8008a9e:	a80a      	add	r0, sp, #40	; 0x28
 8008aa0:	93a6      	str	r3, [sp, #664]	; 0x298
 8008aa2:	92a7      	str	r2, [sp, #668]	; 0x29c
 8008aa4:	f88d 42a0 	strb.w	r4, [sp, #672]	; 0x2a0
 8008aa8:	f004 fcd0 	bl	800d44c <PixelPatterns::PixelPatterns(unsigned int)>
 8008aac:	4b6e      	ldr	r3, [pc, #440]	; (8008c68 <main+0x350>)
 8008aae:	2f05      	cmp	r7, #5
 8008ab0:	601f      	str	r7, [r3, #0]
 8008ab2:	f340 81b9 	ble.w	8008e28 <main+0x510>
 8008ab6:	a88a      	add	r0, sp, #552	; 0x228
 8008ab8:	f003 fd34 	bl	800c524 <PixelDmxConfiguration::Print()>
 8008abc:	4c6b      	ldr	r4, [pc, #428]	; (8008c6c <main+0x354>)
 8008abe:	ab89      	add	r3, sp, #548	; 0x224
 8008ac0:	a89f      	add	r0, sp, #636	; 0x27c
 8008ac2:	93a9      	str	r3, [sp, #676]	; 0x2a4
 8008ac4:	f002 fa4e 	bl	800af64 <PixelPusher::Print()>
 8008ac8:	f44f 42fe 	mov.w	r2, #32512	; 0x7f00
 8008acc:	4968      	ldr	r1, [pc, #416]	; (8008c70 <main+0x358>)
 8008ace:	2303      	movs	r3, #3
 8008ad0:	a875      	add	r0, sp, #468	; 0x1d4
 8008ad2:	f7ff fe8e 	bl	80087f2 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008ad6:	6823      	ldr	r3, [r4, #0]
 8008ad8:	6818      	ldr	r0, [r3, #0]
 8008ada:	f004 fb93 	bl	800d204 <PixelType::GetType(pixel::Type)>
 8008ade:	6823      	ldr	r3, [r4, #0]
 8008ae0:	2120      	movs	r1, #32
 8008ae2:	685b      	ldr	r3, [r3, #4]
 8008ae4:	4a63      	ldr	r2, [pc, #396]	; (8008c74 <main+0x35c>)
 8008ae6:	e9cd 0300 	strd	r0, r3, [sp]
 8008aea:	462b      	mov	r3, r5
 8008aec:	a81a      	add	r0, sp, #104	; 0x68
 8008aee:	f000 fd67 	bl	80095c0 <snprintf>
 8008af2:	4a61      	ldr	r2, [pc, #388]	; (8008c78 <main+0x360>)
 8008af4:	2120      	movs	r1, #32
 8008af6:	a823      	add	r0, sp, #140	; 0x8c
 8008af8:	f000 fd62 	bl	80095c0 <snprintf>
 8008afc:	4604      	mov	r4, r0
 8008afe:	202c      	movs	r0, #44	; 0x2c
 8008b00:	f009 fd2a 	bl	8012558 <operator new(unsigned int)>
 8008b04:	2200      	movs	r2, #0
 8008b06:	4603      	mov	r3, r0
 8008b08:	6042      	str	r2, [r0, #4]
 8008b0a:	6282      	str	r2, [r0, #40]	; 0x28
 8008b0c:	f100 0c28 	add.w	ip, r0, #40	; 0x28
 8008b10:	f823 2b08 	strh.w	r2, [r3], #8
 8008b14:	aa1a      	add	r2, sp, #104	; 0x68
 8008b16:	f812 1b01 	ldrb.w	r1, [r2], #1
 8008b1a:	b111      	cbz	r1, 8008b22 <main+0x20a>
 8008b1c:	4563      	cmp	r3, ip
 8008b1e:	f040 81ee 	bne.w	8008efe <main+0x5e6>
 8008b22:	2201      	movs	r2, #1
 8008b24:	a90b      	add	r1, sp, #44	; 0x2c
 8008b26:	900b      	str	r0, [sp, #44]	; 0x2c
 8008b28:	a8f3      	add	r0, sp, #972	; 0x3cc
 8008b2a:	f002 fccb 	bl	800b4c4 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)>
 8008b2e:	f50d 6093 	add.w	r0, sp, #1176	; 0x498
 8008b32:	f002 fa49 	bl	800afc8 <LLRPDevice::LLRPDevice()>
 8008b36:	4b51      	ldr	r3, [pc, #324]	; (8008c7c <main+0x364>)
 8008b38:	2100      	movs	r1, #0
 8008b3a:	93f3      	str	r3, [sp, #972]	; 0x3cc
 8008b3c:	f20d 409c 	addw	r0, sp, #1180	; 0x49c
 8008b40:	3324      	adds	r3, #36	; 0x24
 8008b42:	f8cd 3498 	str.w	r3, [sp, #1176]	; 0x498
 8008b46:	f002 feb3 	bl	800b8b0 <RDMHandler::RDMHandler(bool)>
 8008b4a:	4b4d      	ldr	r3, [pc, #308]	; (8008c80 <main+0x368>)
 8008b4c:	b2e4      	uxtb	r4, r4
 8008b4e:	494d      	ldr	r1, [pc, #308]	; (8008c84 <main+0x36c>)
 8008b50:	6818      	ldr	r0, [r3, #0]
 8008b52:	f009 fca5 	bl	80124a0 <Hardware::GetUuid(unsigned char*)>
 8008b56:	2c20      	cmp	r4, #32
 8008b58:	bf28      	it	cs
 8008b5a:	2420      	movcs	r4, #32
 8008b5c:	f89d 3420 	ldrb.w	r3, [sp, #1056]	; 0x420
 8008b60:	4622      	mov	r2, r4
 8008b62:	a923      	add	r1, sp, #140	; 0x8c
 8008b64:	2b00      	cmp	r3, #0
 8008b66:	f000 81d0 	beq.w	8008f0a <main+0x5f2>
 8008b6a:	f20d 30da 	addw	r0, sp, #986	; 0x3da
 8008b6e:	f7ff fd48 	bl	8008602 <memcpy>
 8008b72:	f8dd 0444 	ldr.w	r0, [sp, #1092]	; 0x444
 8008b76:	f88d 43fa 	strb.w	r4, [sp, #1018]	; 0x3fa
 8008b7a:	b128      	cbz	r0, 8008b88 <main+0x270>
 8008b7c:	6803      	ldr	r3, [r0, #0]
 8008b7e:	4622      	mov	r2, r4
 8008b80:	689b      	ldr	r3, [r3, #8]
 8008b82:	f20d 31da 	addw	r1, sp, #986	; 0x3da
 8008b86:	4798      	blx	r3
 8008b88:	4b3f      	ldr	r3, [pc, #252]	; (8008c88 <main+0x370>)
 8008b8a:	2004      	movs	r0, #4
 8008b8c:	f8cd 341c 	str.w	r3, [sp, #1052]	; 0x41c
 8008b90:	f009 fce2 	bl	8012558 <operator new(unsigned int)>
 8008b94:	4b3d      	ldr	r3, [pc, #244]	; (8008c8c <main+0x374>)
 8008b96:	f8cd 0494 	str.w	r0, [sp, #1172]	; 0x494
 8008b9a:	6003      	str	r3, [r0, #0]
 8008b9c:	a8f3      	add	r0, sp, #972	; 0x3cc
 8008b9e:	f002 fce1 	bl	800b564 <RDMDeviceResponder::Init()>
 8008ba2:	a812      	add	r0, sp, #72	; 0x48
 8008ba4:	f005 ff1e 	bl	800e9e4 <StoreRDMDevice::StoreRDMDevice()>
 8008ba8:	a912      	add	r1, sp, #72	; 0x48
 8008baa:	a869      	add	r0, sp, #420	; 0x1a4
 8008bac:	f002 fc1a 	bl	800b3e4 <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)>
 8008bb0:	a869      	add	r0, sp, #420	; 0x1a4
 8008bb2:	f002 fc29 	bl	800b408 <RDMDeviceParams::Load()>
 8008bb6:	b130      	cbz	r0, 8008bc6 <main+0x2ae>
 8008bb8:	a869      	add	r0, sp, #420	; 0x1a4
 8008bba:	f002 fc65 	bl	800b488 <RDMDeviceParams::Dump()>
 8008bbe:	a9f4      	add	r1, sp, #976	; 0x3d0
 8008bc0:	a869      	add	r0, sp, #420	; 0x1a4
 8008bc2:	f002 fc2c 	bl	800b41e <RDMDeviceParams::Set(RDMDevice*)>
 8008bc6:	ab13      	add	r3, sp, #76	; 0x4c
 8008bc8:	a8f3      	add	r0, sp, #972	; 0x3cc
 8008bca:	f8cd 3444 	str.w	r3, [sp, #1092]	; 0x444
 8008bce:	f002 fb0f 	bl	800b1f0 <RDMNetDevice::Print()>
 8008bd2:	462a      	mov	r2, r5
 8008bd4:	492e      	ldr	r1, [pc, #184]	; (8008c90 <main+0x378>)
 8008bd6:	a875      	add	r0, sp, #468	; 0x1d4
 8008bd8:	f008 fa86 	bl	80110e8 <DisplayUdf::SetTitle(char const*, ...)>
 8008bdc:	2203      	movs	r2, #3
 8008bde:	2102      	movs	r1, #2
 8008be0:	a875      	add	r0, sp, #468	; 0x1d4
 8008be2:	f008 fa94 	bl	801110e <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8008be6:	2207      	movs	r2, #7
 8008be8:	2103      	movs	r1, #3
 8008bea:	a875      	add	r0, sp, #468	; 0x1d4
 8008bec:	f008 fa8f 	bl	801110e <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8008bf0:	2202      	movs	r2, #2
 8008bf2:	2104      	movs	r1, #4
 8008bf4:	a875      	add	r0, sp, #468	; 0x1d4
 8008bf6:	f008 fa8a 	bl	801110e <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8008bfa:	2212      	movs	r2, #18
 8008bfc:	2105      	movs	r1, #5
 8008bfe:	a875      	add	r0, sp, #468	; 0x1d4
 8008c00:	f008 fa85 	bl	801110e <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8008c04:	2201      	movs	r2, #1
 8008c06:	2106      	movs	r1, #6
 8008c08:	a875      	add	r0, sp, #468	; 0x1d4
 8008c0a:	f008 fa80 	bl	801110e <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8008c0e:	985d      	ldr	r0, [sp, #372]	; 0x174
 8008c10:	f004 faf8 	bl	800d204 <PixelType::GetType(pixel::Type)>
 8008c14:	4604      	mov	r4, r0
 8008c16:	985f      	ldr	r0, [sp, #380]	; 0x17c
 8008c18:	f8dd 8178 	ldr.w	r8, [sp, #376]	; 0x178
 8008c1c:	f8dd 9194 	ldr.w	r9, [sp, #404]	; 0x194
 8008c20:	f004 fb48 	bl	800d2b4 <PixelType::GetMap(pixel::Map)>
 8008c24:	4623      	mov	r3, r4
 8008c26:	e035      	b.n	8008c94 <main+0x37c>
 8008c28:	08014af0 	stmdaeq	r1, {r4, r5, r6, r7, r9, fp, lr}
 8008c2c:	08014af9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, r9, fp, lr}
 8008c30:	08014c5d 	stmdaeq	r1, {r0, r2, r3, r4, r6, sl, fp, lr}
 8008c34:	40011000 	andmi	r1, r1, r0
 8008c38:	08014b05 	stmdaeq	r1, {r0, r2, r8, r9, fp, lr}
 8008c3c:	08014be0 	stmdaeq	r1, {r5, r6, r7, r8, r9, fp, lr}
 8008c40:	2001a860 	andcs	sl, r1, r0, ror #16
 8008c44:	08017004 	stmdaeq	r1, {r2, ip, sp, lr}
 8008c48:	08014b37 	stmdaeq	r1, {r0, r1, r2, r4, r5, r8, r9, fp, lr}
 8008c4c:	08014b40 	stmdaeq	r1, {r6, r8, r9, fp, lr}
 8008c50:	08014b4e 	stmdaeq	r1, {r1, r2, r3, r6, r8, r9, fp, lr}
 8008c54:	08014b47 	stmdaeq	r1, {r0, r1, r2, r6, r8, r9, fp, lr}
 8008c58:	08014c61 	stmdaeq	r1, {r0, r5, r6, sl, fp, lr}
 8008c5c:	08014bf4 	stmdaeq	r1, {r2, r4, r5, r6, r7, r8, r9, fp, lr}
 8008c60:	40010c00 	andmi	r0, r1, r0, lsl #24
 8008c64:	40010000 	andmi	r0, r1, r0
 8008c68:	20009964 	andcs	r9, r0, r4, ror #18
 8008c6c:	2000996c 	andcs	r9, r0, ip, ror #18
 8008c70:	08015ed8 	stmdaeq	r1, {r3, r4, r6, r7, r9, sl, fp, ip, lr}
 8008c74:	08014b5f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r8, r9, fp, lr}
 8008c78:	08014b74 	stmdaeq	r1, {r2, r4, r5, r6, r8, r9, fp, lr}
 8008c7c:	08014c0c 	stmdaeq	r1, {r2, r3, sl, fp, lr}
 8008c80:	2001a950 	andcs	sl, r1, r0, asr r9
 8008c84:	2000982f 	andcs	r9, r0, pc, lsr #16
 8008c88:	06010100 	streq	r0, [r1], -r0, lsl #2
 8008c8c:	08014c4c 	stmdaeq	r1, {r2, r3, r6, sl, fp, lr}
 8008c90:	08014b8b 	stmdaeq	r1, {r0, r1, r3, r7, r8, r9, fp, lr}
 8008c94:	2107      	movs	r1, #7
 8008c96:	4aa4      	ldr	r2, [pc, #656]	; (8008f28 <main+0x610>)
 8008c98:	e9cd 9001 	strd	r9, r0, [sp, #4]
 8008c9c:	f8cd 8000 	str.w	r8, [sp]
 8008ca0:	a875      	add	r0, sp, #468	; 0x1d4
 8008ca2:	f7ff fd55 	bl	8008750 <Display::Printf(unsigned char, char const*, ...)>
 8008ca6:	a80c      	add	r0, sp, #48	; 0x30
 8008ca8:	f005 fda6 	bl	800e7f8 <StoreDisplayUdf::StoreDisplayUdf()>
 8008cac:	a90c      	add	r1, sp, #48	; 0x30
 8008cae:	a848      	add	r0, sp, #288	; 0x120
 8008cb0:	f008 fbae 	bl	8011410 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 8008cb4:	a848      	add	r0, sp, #288	; 0x120
 8008cb6:	f008 fbb8 	bl	801142a <DisplayUdfParams::Load()>
 8008cba:	b130      	cbz	r0, 8008cca <main+0x3b2>
 8008cbc:	a848      	add	r0, sp, #288	; 0x120
 8008cbe:	a975      	add	r1, sp, #468	; 0x1d4
 8008cc0:	f008 fceb 	bl	801169a <DisplayUdfParams::Set(DisplayUdf*)>
 8008cc4:	a848      	add	r0, sp, #288	; 0x120
 8008cc6:	f008 fd1b 	bl	8011700 <DisplayUdfParams::Dump()>
 8008cca:	a875      	add	r0, sp, #468	; 0x1d4
 8008ccc:	f008 face 	bl	801126c <DisplayUdf::Show()>
 8008cd0:	b17f      	cbz	r7, 8008cf2 <main+0x3da>
 8008cd2:	987b      	ldr	r0, [sp, #492]	; 0x1ec
 8008cd4:	b118      	cbz	r0, 8008cde <main+0x3c6>
 8008cd6:	6803      	ldr	r3, [r0, #0]
 8008cd8:	2106      	movs	r1, #6
 8008cda:	691b      	ldr	r3, [r3, #16]
 8008cdc:	4798      	blx	r3
 8008cde:	4638      	mov	r0, r7
 8008ce0:	f004 fbda 	bl	800d498 <PixelPatterns::GetName(pixelpatterns::Pattern)>
 8008ce4:	2106      	movs	r1, #6
 8008ce6:	4603      	mov	r3, r0
 8008ce8:	4a90      	ldr	r2, [pc, #576]	; (8008f2c <main+0x614>)
 8008cea:	9700      	str	r7, [sp, #0]
 8008cec:	a875      	add	r0, sp, #468	; 0x1d4
 8008cee:	f7ff fd2f 	bl	8008750 <Display::Printf(unsigned char, char const*, ...)>
 8008cf2:	462b      	mov	r3, r5
 8008cf4:	2203      	movs	r2, #3
 8008cf6:	2109      	movs	r1, #9
 8008cf8:	a82c      	add	r0, sp, #176	; 0xb0
 8008cfa:	f000 ff53 	bl	8009ba4 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>
 8008cfe:	a80d      	add	r0, sp, #52	; 0x34
 8008d00:	f005 fea8 	bl	800ea54 <StoreRemoteConfig::StoreRemoteConfig()>
 8008d04:	a90d      	add	r1, sp, #52	; 0x34
 8008d06:	a835      	add	r0, sp, #212	; 0xd4
 8008d08:	f001 f9f2 	bl	800a0f0 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 8008d0c:	a835      	add	r0, sp, #212	; 0xd4
 8008d0e:	f001 f9f9 	bl	800a104 <RemoteConfigParams::Load()>
 8008d12:	b130      	cbz	r0, 8008d22 <main+0x40a>
 8008d14:	a835      	add	r0, sp, #212	; 0xd4
 8008d16:	a92c      	add	r1, sp, #176	; 0xb0
 8008d18:	f001 fb1b 	bl	800a352 <RemoteConfigParams::Set(RemoteConfig*)>
 8008d1c:	a835      	add	r0, sp, #212	; 0xd4
 8008d1e:	f001 fb38 	bl	800a392 <RemoteConfigParams::Dump()>
 8008d22:	a808      	add	r0, sp, #32
 8008d24:	f005 fce2 	bl	800e6ec <SpiFlashStore::Flash()>
 8008d28:	2800      	cmp	r0, #0
 8008d2a:	d1fa      	bne.n	8008d22 <main+0x40a>
 8008d2c:	4c80      	ldr	r4, [pc, #512]	; (8008f30 <main+0x618>)
 8008d2e:	2303      	movs	r3, #3
 8008d30:	f44f 42fa 	mov.w	r2, #32000	; 0x7d00
 8008d34:	497f      	ldr	r1, [pc, #508]	; (8008f34 <main+0x61c>)
 8008d36:	a875      	add	r0, sp, #468	; 0x1d4
 8008d38:	f7ff fd5b 	bl	80087f2 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008d3c:	f241 51c1 	movw	r1, #5569	; 0x15c1
 8008d40:	6820      	ldr	r0, [r4, #0]
 8008d42:	f007 f8e3 	bl	800ff0c <Network::Begin(unsigned short)>
 8008d46:	4b7c      	ldr	r3, [pc, #496]	; (8008f38 <main+0x620>)
 8008d48:	4601      	mov	r1, r0
 8008d4a:	6018      	str	r0, [r3, #0]
 8008d4c:	4b7b      	ldr	r3, [pc, #492]	; (8008f3c <main+0x624>)
 8008d4e:	6820      	ldr	r0, [r4, #0]
 8008d50:	681a      	ldr	r2, [r3, #0]
 8008d52:	f007 f8ec 	bl	800ff2e <Network::JoinGroup(int, unsigned int)>
 8008d56:	2302      	movs	r3, #2
 8008d58:	f248 0280 	movw	r2, #32896	; 0x8080
 8008d5c:	4978      	ldr	r1, [pc, #480]	; (8008f40 <main+0x628>)
 8008d5e:	a875      	add	r0, sp, #468	; 0x1d4
 8008d60:	f7ff fd47 	bl	80087f2 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008d64:	2303      	movs	r3, #3
 8008d66:	f44f 42fa 	mov.w	r2, #32000	; 0x7d00
 8008d6a:	4976      	ldr	r1, [pc, #472]	; (8008f44 <main+0x62c>)
 8008d6c:	a875      	add	r0, sp, #468	; 0x1d4
 8008d6e:	f7ff fd40 	bl	80087f2 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008d72:	a89f      	add	r0, sp, #636	; 0x27c
 8008d74:	f001 fffa 	bl	800ad6c <PixelPusher::Start()>
 8008d78:	2302      	movs	r3, #2
 8008d7a:	f44f 42fa 	mov.w	r2, #32000	; 0x7d00
 8008d7e:	4972      	ldr	r1, [pc, #456]	; (8008f48 <main+0x630>)
 8008d80:	a875      	add	r0, sp, #468	; 0x1d4
 8008d82:	f7ff fd36 	bl	80087f2 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008d86:	2102      	movs	r1, #2
 8008d88:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8008d8c:	f009 ffaa 	bl	8012ce4 <fwdgt_config>
 8008d90:	2801      	cmp	r0, #1
 8008d92:	bf0c      	ite	eq
 8008d94:	2301      	moveq	r3, #1
 8008d96:	2300      	movne	r3, #0
 8008d98:	f88d 3014 	strb.w	r3, [sp, #20]
 8008d9c:	d101      	bne.n	8008da2 <main+0x48a>
 8008d9e:	f009 ff91 	bl	8012cc4 <fwdgt_enable>
 8008da2:	4d6a      	ldr	r5, [pc, #424]	; (8008f4c <main+0x634>)
 8008da4:	4c6a      	ldr	r4, [pc, #424]	; (8008f50 <main+0x638>)
 8008da6:	f009 ff95 	bl	8012cd4 <fwdgt_counter_reload>
 8008daa:	f7fe fbe5 	bl	8007578 <net_handle>
 8008dae:	a89f      	add	r0, sp, #636	; 0x27c
 8008db0:	f002 f814 	bl	800addc <PixelPusher::Run()>
 8008db4:	a82c      	add	r0, sp, #176	; 0xb0
 8008db6:	f001 f873 	bl	8009ea0 <RemoteConfig::Run()>
 8008dba:	a808      	add	r0, sp, #32
 8008dbc:	f005 fc96 	bl	800e6ec <SpiFlashStore::Flash()>
 8008dc0:	682b      	ldr	r3, [r5, #0]
 8008dc2:	b113      	cbz	r3, 8008dca <main+0x4b2>
 8008dc4:	a80a      	add	r0, sp, #40	; 0x28
 8008dc6:	f004 fd89 	bl	800d8dc <PixelPatterns::Run()>
 8008dca:	a809      	add	r0, sp, #36	; 0x24
 8008dcc:	f006 fffa 	bl	800fdc4 <MDNS::Run()>
 8008dd0:	f50d 6093 	add.w	r0, sp, #1176	; 0x498
 8008dd4:	f002 f9b6 	bl	800b144 <LLRPDevice::Run()>
 8008dd8:	a83e      	add	r0, sp, #248	; 0xf8
 8008dda:	f001 fe1f 	bl	800aa1c <HttpDaemon::Run()>
 8008dde:	9a7a      	ldr	r2, [sp, #488]	; 0x1e8
 8008de0:	b16a      	cbz	r2, 8008dfe <main+0x4e6>
 8008de2:	f89d 31e4 	ldrb.w	r3, [sp, #484]	; 0x1e4
 8008de6:	2b00      	cmp	r3, #0
 8008de8:	f040 8096 	bne.w	8008f18 <main+0x600>
 8008dec:	6823      	ldr	r3, [r4, #0]
 8008dee:	9976      	ldr	r1, [sp, #472]	; 0x1d8
 8008df0:	1a5b      	subs	r3, r3, r1
 8008df2:	429a      	cmp	r2, r3
 8008df4:	d203      	bcs.n	8008dfe <main+0x4e6>
 8008df6:	2101      	movs	r1, #1
 8008df8:	a875      	add	r0, sp, #468	; 0x1d4
 8008dfa:	f7ff fd23 	bl	8008844 <Display::SetSleep(bool)>
 8008dfe:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8008e00:	2a00      	cmp	r2, #0
 8008e02:	d0d0      	beq.n	8008da6 <main+0x48e>
 8008e04:	6823      	ldr	r3, [r4, #0]
 8008e06:	9919      	ldr	r1, [sp, #100]	; 0x64
 8008e08:	1a5b      	subs	r3, r3, r1
 8008e0a:	429a      	cmp	r2, r3
 8008e0c:	d8cb      	bhi.n	8008da6 <main+0x48e>
 8008e0e:	6823      	ldr	r3, [r4, #0]
 8008e10:	9319      	str	r3, [sp, #100]	; 0x64
 8008e12:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8008e14:	2b01      	cmp	r3, #1
 8008e16:	f083 0201 	eor.w	r2, r3, #1
 8008e1a:	bf18      	it	ne
 8008e1c:	2301      	movne	r3, #1
 8008e1e:	9218      	str	r2, [sp, #96]	; 0x60
 8008e20:	bf14      	ite	ne
 8008e22:	6133      	strne	r3, [r6, #16]
 8008e24:	6173      	streq	r3, [r6, #20]
 8008e26:	e7be      	b.n	8008da6 <main+0x48e>
 8008e28:	f8df 9128 	ldr.w	r9, [pc, #296]	; 8008f54 <main+0x63c>
 8008e2c:	f8df a128 	ldr.w	sl, [pc, #296]	; 8008f58 <main+0x640>
 8008e30:	f8df b128 	ldr.w	fp, [pc, #296]	; 8008f5c <main+0x644>
 8008e34:	2f05      	cmp	r7, #5
 8008e36:	d80a      	bhi.n	8008e4e <main+0x536>
 8008e38:	e8df f007 	tbb	[pc, r7]
 8008e3c:	190f0336 	stmdbne	pc, {r1, r2, r4, r5, r8, r9}	; <UNPREDICTABLE>
 8008e40:	23002a22 	movwcs	r2, #2594	; 0xa22
 8008e44:	2264      	movs	r2, #100	; 0x64
 8008e46:	4621      	mov	r1, r4
 8008e48:	a80a      	add	r0, sp, #40	; 0x28
 8008e4a:	f004 fb31 	bl	800d4b0 <PixelPatterns::RainbowCycle(unsigned int, unsigned int, pixelpatterns::Direction)>
 8008e4e:	3401      	adds	r4, #1
 8008e50:	2c08      	cmp	r4, #8
 8008e52:	f109 0920 	add.w	r9, r9, #32
 8008e56:	d1ed      	bne.n	8008e34 <main+0x51c>
 8008e58:	e62d      	b.n	8008ab6 <main+0x19e>
 8008e5a:	2364      	movs	r3, #100	; 0x64
 8008e5c:	2200      	movs	r2, #0
 8008e5e:	4621      	mov	r1, r4
 8008e60:	e9cd 3200 	strd	r3, r2, [sp]
 8008e64:	a80a      	add	r0, sp, #40	; 0x28
 8008e66:	4b3e      	ldr	r3, [pc, #248]	; (8008f60 <main+0x648>)
 8008e68:	f004 fb38 	bl	800d4dc <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>
 8008e6c:	e7ef      	b.n	8008e4e <main+0x536>
 8008e6e:	2300      	movs	r3, #0
 8008e70:	4621      	mov	r1, r4
 8008e72:	9300      	str	r3, [sp, #0]
 8008e74:	4a3a      	ldr	r2, [pc, #232]	; (8008f60 <main+0x648>)
 8008e76:	2364      	movs	r3, #100	; 0x64
 8008e78:	a80a      	add	r0, sp, #40	; 0x28
 8008e7a:	f004 fb4b 	bl	800d514 <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>
 8008e7e:	e7e6      	b.n	8008e4e <main+0x536>
 8008e80:	2364      	movs	r3, #100	; 0x64
 8008e82:	f06f 427f 	mvn.w	r2, #4278190080	; 0xff000000
 8008e86:	4621      	mov	r1, r4
 8008e88:	a80a      	add	r0, sp, #40	; 0x28
 8008e8a:	f004 fb5d 	bl	800d548 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)>
 8008e8e:	e7de      	b.n	8008e4e <main+0x536>
 8008e90:	2364      	movs	r3, #100	; 0x64
 8008e92:	2200      	movs	r2, #0
 8008e94:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8008e98:	230a      	movs	r3, #10
 8008e9a:	4621      	mov	r1, r4
 8008e9c:	9300      	str	r3, [sp, #0]
 8008e9e:	a80a      	add	r0, sp, #40	; 0x28
 8008ea0:	4b2f      	ldr	r3, [pc, #188]	; (8008f60 <main+0x648>)
 8008ea2:	f004 fb85 	bl	800d5b0 <PixelPatterns::Fade(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>
 8008ea6:	e7d2      	b.n	8008e4e <main+0x536>
 8008ea8:	2300      	movs	r3, #0
 8008eaa:	4698      	mov	r8, r3
 8008eac:	f8c9 301c 	str.w	r3, [r9, #28]
 8008eb0:	f8db 3000 	ldr.w	r3, [fp]
 8008eb4:	f8da 0000 	ldr.w	r0, [sl]
 8008eb8:	4598      	cmp	r8, r3
 8008eba:	d30a      	bcc.n	8008ed2 <main+0x5ba>
 8008ebc:	f8da 0000 	ldr.w	r0, [sl]
 8008ec0:	f005 f970 	bl	800e1a4 <WS28xxMulti::IsUpdating()>
 8008ec4:	2800      	cmp	r0, #0
 8008ec6:	d1f9      	bne.n	8008ebc <main+0x5a4>
 8008ec8:	f8da 0000 	ldr.w	r0, [sl]
 8008ecc:	f005 f82a 	bl	800df24 <WS28xxMulti::Update()>
 8008ed0:	e7bd      	b.n	8008e4e <main+0x536>
 8008ed2:	6803      	ldr	r3, [r0, #0]
 8008ed4:	2b07      	cmp	r3, #7
 8008ed6:	f04f 0300 	mov.w	r3, #0
 8008eda:	d008      	beq.n	8008eee <main+0x5d6>
 8008edc:	4642      	mov	r2, r8
 8008ede:	4621      	mov	r1, r4
 8008ee0:	e9cd 3300 	strd	r3, r3, [sp]
 8008ee4:	f005 f9e0 	bl	800e2a8 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 8008ee8:	f108 0801 	add.w	r8, r8, #1
 8008eec:	e7e0      	b.n	8008eb0 <main+0x598>
 8008eee:	4642      	mov	r2, r8
 8008ef0:	4621      	mov	r1, r4
 8008ef2:	e9cd 3301 	strd	r3, r3, [sp, #4]
 8008ef6:	9300      	str	r3, [sp, #0]
 8008ef8:	f005 fa5e 	bl	800e3b8 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
 8008efc:	e7f4      	b.n	8008ee8 <main+0x5d0>
 8008efe:	f803 1b01 	strb.w	r1, [r3], #1
 8008f02:	6a81      	ldr	r1, [r0, #40]	; 0x28
 8008f04:	3101      	adds	r1, #1
 8008f06:	6281      	str	r1, [r0, #40]	; 0x28
 8008f08:	e605      	b.n	8008b16 <main+0x1fe>
 8008f0a:	f20d 4021 	addw	r0, sp, #1057	; 0x421
 8008f0e:	f7ff fb78 	bl	8008602 <memcpy>
 8008f12:	f88d 4441 	strb.w	r4, [sp, #1089]	; 0x441
 8008f16:	e637      	b.n	8008b88 <main+0x270>
 8008f18:	f7ff fcb4 	bl	8008884 <display::timeout::gpio_renew()>
 8008f1c:	2800      	cmp	r0, #0
 8008f1e:	f43f af6e 	beq.w	8008dfe <main+0x4e6>
 8008f22:	2100      	movs	r1, #0
 8008f24:	e768      	b.n	8008df8 <main+0x4e0>
 8008f26:	bf00      	nop
 8008f28:	08014b9a 	stmdaeq	r1, {r1, r3, r4, r7, r8, r9, fp, lr}
 8008f2c:	08014ba7 	stmdaeq	r1, {r0, r1, r2, r5, r7, r8, r9, fp, lr}
 8008f30:	2001a288 	andcs	sl, r1, r8, lsl #5
 8008f34:	08015efa 	stmdaeq	r1, {r1, r3, r4, r5, r6, r7, r9, sl, fp, ip, lr}
 8008f38:	20000000 	andcs	r0, r0, r0
 8008f3c:	20009724 	andcs	r9, r0, r4, lsr #14
 8008f40:	08015eeb 	stmdaeq	r1, {r0, r1, r3, r5, r6, r7, r9, sl, fp, ip, lr}
 8008f44:	08014bad 	stmdaeq	r1, {r0, r2, r3, r5, r7, r8, r9, fp, lr}
 8008f48:	08014bc2 	stmdaeq	r1, {r1, r6, r7, r8, r9, fp, lr}
 8008f4c:	20009964 	andcs	r9, r0, r4, ror #18
 8008f50:	2001a964 	andcs	sl, r1, r4, ror #18
 8008f54:	20009854 	andcs	r9, r0, r4, asr r8
 8008f58:	20009960 	andcs	r9, r0, r0, ror #18
 8008f5c:	2000995c 	andcs	r9, r0, ip, asr r9
 8008f60:	00646464 	rsbeq	r6, r4, r4, ror #8

08008f64 <RDMSoftwareVersion::GetVersion()>:
 8008f64:	4800      	ldr	r0, [pc, #0]	; (8008f68 <RDMSoftwareVersion::GetVersion()+0x4>)
 8008f66:	4770      	bx	lr
 8008f68:	08014d61 	stmdaeq	r1, {r0, r5, r6, r8, sl, fp, lr}

08008f6c <RDMSoftwareVersion::GetVersionLength()>:
 8008f6c:	2003      	movs	r0, #3
 8008f6e:	4770      	bx	lr

08008f70 <RDMSoftwareVersion::GetVersionId()>:
 8008f70:	4800      	ldr	r0, [pc, #0]	; (8008f74 <RDMSoftwareVersion::GetVersionId()+0x4>)
 8008f72:	4770      	bx	lr
 8008f74:	63445ccb 	movtvs	r5, #19659	; 0x4ccb

08008f78 <_itostr>:
 8008f78:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008f7a:	0fc7      	lsrs	r7, r0, #31
 8008f7c:	b091      	sub	sp, #68	; 0x44
 8008f7e:	bf18      	it	ne
 8008f80:	4240      	negne	r0, r0
 8008f82:	f10d 043f 	add.w	r4, sp, #63	; 0x3f
 8008f86:	b9c8      	cbnz	r0, 8008fbc <_itostr+0x44>
 8008f88:	2330      	movs	r3, #48	; 0x30
 8008f8a:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8008f8e:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 8008f92:	b132      	cbz	r2, 8008fa2 <_itostr+0x2a>
 8008f94:	4668      	mov	r0, sp
 8008f96:	2530      	movs	r5, #48	; 0x30
 8008f98:	1ae6      	subs	r6, r4, r3
 8008f9a:	4296      	cmp	r6, r2
 8008f9c:	da01      	bge.n	8008fa2 <_itostr+0x2a>
 8008f9e:	4283      	cmp	r3, r0
 8008fa0:	d81c      	bhi.n	8008fdc <_itostr+0x64>
 8008fa2:	b117      	cbz	r7, 8008faa <_itostr+0x32>
 8008fa4:	222d      	movs	r2, #45	; 0x2d
 8008fa6:	f803 2901 	strb.w	r2, [r3], #-1
 8008faa:	3301      	adds	r3, #1
 8008fac:	1ae0      	subs	r0, r4, r3
 8008fae:	3901      	subs	r1, #1
 8008fb0:	aa10      	add	r2, sp, #64	; 0x40
 8008fb2:	4293      	cmp	r3, r2
 8008fb4:	d315      	bcc.n	8008fe2 <_itostr+0x6a>
 8008fb6:	3001      	adds	r0, #1
 8008fb8:	b011      	add	sp, #68	; 0x44
 8008fba:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008fbc:	4623      	mov	r3, r4
 8008fbe:	250a      	movs	r5, #10
 8008fc0:	46ec      	mov	ip, sp
 8008fc2:	fb90 f6f5 	sdiv	r6, r0, r5
 8008fc6:	fb05 0016 	mls	r0, r5, r6, r0
 8008fca:	3030      	adds	r0, #48	; 0x30
 8008fcc:	f803 0901 	strb.w	r0, [r3], #-1
 8008fd0:	4630      	mov	r0, r6
 8008fd2:	2e00      	cmp	r6, #0
 8008fd4:	d0dd      	beq.n	8008f92 <_itostr+0x1a>
 8008fd6:	4563      	cmp	r3, ip
 8008fd8:	d1f3      	bne.n	8008fc2 <_itostr+0x4a>
 8008fda:	e7da      	b.n	8008f92 <_itostr+0x1a>
 8008fdc:	f803 5901 	strb.w	r5, [r3], #-1
 8008fe0:	e7da      	b.n	8008f98 <_itostr+0x20>
 8008fe2:	f813 2b01 	ldrb.w	r2, [r3], #1
 8008fe6:	f801 2f01 	strb.w	r2, [r1, #1]!
 8008fea:	e7e1      	b.n	8008fb0 <_itostr+0x38>

08008fec <_xputch>:
 8008fec:	4603      	mov	r3, r0
 8008fee:	b410      	push	{r4}
 8008ff0:	4c08      	ldr	r4, [pc, #32]	; (8009014 <_xputch+0x28>)
 8008ff2:	68da      	ldr	r2, [r3, #12]
 8008ff4:	4608      	mov	r0, r1
 8008ff6:	6821      	ldr	r1, [r4, #0]
 8008ff8:	3201      	adds	r2, #1
 8008ffa:	60da      	str	r2, [r3, #12]
 8008ffc:	b139      	cbz	r1, 800900e <_xputch+0x22>
 8008ffe:	691b      	ldr	r3, [r3, #16]
 8009000:	429a      	cmp	r2, r3
 8009002:	da02      	bge.n	800900a <_xputch+0x1e>
 8009004:	1c4b      	adds	r3, r1, #1
 8009006:	6023      	str	r3, [r4, #0]
 8009008:	7008      	strb	r0, [r1, #0]
 800900a:	bc10      	pop	{r4}
 800900c:	4770      	bx	lr
 800900e:	bc10      	pop	{r4}
 8009010:	f009 b90a 	b.w	8012228 <console_putc>
 8009014:	200000e8 	andcs	r0, r0, r8, ror #1

08009018 <_format_int>:
 8009018:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800901c:	4698      	mov	r8, r3
 800901e:	b091      	sub	sp, #68	; 0x44
 8009020:	ea52 0308 	orrs.w	r3, r2, r8
 8009024:	4606      	mov	r6, r0
 8009026:	4617      	mov	r7, r2
 8009028:	f10d 053f 	add.w	r5, sp, #63	; 0x3f
 800902c:	d133      	bne.n	8009096 <_format_int+0x7e>
 800902e:	2330      	movs	r3, #48	; 0x30
 8009030:	f10d 043e 	add.w	r4, sp, #62	; 0x3e
 8009034:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8009038:	6833      	ldr	r3, [r6, #0]
 800903a:	07d8      	lsls	r0, r3, #31
 800903c:	d507      	bpl.n	800904e <_format_int+0x36>
 800903e:	466a      	mov	r2, sp
 8009040:	2030      	movs	r0, #48	; 0x30
 8009042:	6871      	ldr	r1, [r6, #4]
 8009044:	1b2f      	subs	r7, r5, r4
 8009046:	428f      	cmp	r7, r1
 8009048:	da01      	bge.n	800904e <_format_int+0x36>
 800904a:	4294      	cmp	r4, r2
 800904c:	d839      	bhi.n	80090c2 <_format_int+0xaa>
 800904e:	0699      	lsls	r1, r3, #26
 8009050:	d507      	bpl.n	8009062 <_format_int+0x4a>
 8009052:	466a      	mov	r2, sp
 8009054:	2030      	movs	r0, #48	; 0x30
 8009056:	68b1      	ldr	r1, [r6, #8]
 8009058:	1b2f      	subs	r7, r5, r4
 800905a:	428f      	cmp	r7, r1
 800905c:	da01      	bge.n	8009062 <_format_int+0x4a>
 800905e:	4294      	cmp	r4, r2
 8009060:	d832      	bhi.n	80090c8 <_format_int+0xb0>
 8009062:	071a      	lsls	r2, r3, #28
 8009064:	bf44      	itt	mi
 8009066:	222d      	movmi	r2, #45	; 0x2d
 8009068:	f804 2901 	strbmi.w	r2, [r4], #-1
 800906c:	065b      	lsls	r3, r3, #25
 800906e:	d407      	bmi.n	8009080 <_format_int+0x68>
 8009070:	466b      	mov	r3, sp
 8009072:	2120      	movs	r1, #32
 8009074:	68b2      	ldr	r2, [r6, #8]
 8009076:	1b28      	subs	r0, r5, r4
 8009078:	4290      	cmp	r0, r2
 800907a:	da01      	bge.n	8009080 <_format_int+0x68>
 800907c:	429c      	cmp	r4, r3
 800907e:	d826      	bhi.n	80090ce <_format_int+0xb6>
 8009080:	1b2d      	subs	r5, r5, r4
 8009082:	3401      	adds	r4, #1
 8009084:	ab10      	add	r3, sp, #64	; 0x40
 8009086:	429c      	cmp	r4, r3
 8009088:	d324      	bcc.n	80090d4 <_format_int+0xbc>
 800908a:	68b3      	ldr	r3, [r6, #8]
 800908c:	42ab      	cmp	r3, r5
 800908e:	dc27      	bgt.n	80090e0 <_format_int+0xc8>
 8009090:	b011      	add	sp, #68	; 0x44
 8009092:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009096:	462c      	mov	r4, r5
 8009098:	46e9      	mov	r9, sp
 800909a:	4638      	mov	r0, r7
 800909c:	4641      	mov	r1, r8
 800909e:	220a      	movs	r2, #10
 80090a0:	2300      	movs	r3, #0
 80090a2:	f7fe ff45 	bl	8007f30 <__aeabi_uldivmod>
 80090a6:	3230      	adds	r2, #48	; 0x30
 80090a8:	f804 2901 	strb.w	r2, [r4], #-1
 80090ac:	463a      	mov	r2, r7
 80090ae:	4643      	mov	r3, r8
 80090b0:	2a0a      	cmp	r2, #10
 80090b2:	f173 0300 	sbcs.w	r3, r3, #0
 80090b6:	4607      	mov	r7, r0
 80090b8:	4688      	mov	r8, r1
 80090ba:	d3bd      	bcc.n	8009038 <_format_int+0x20>
 80090bc:	454c      	cmp	r4, r9
 80090be:	d1ec      	bne.n	800909a <_format_int+0x82>
 80090c0:	e7ba      	b.n	8009038 <_format_int+0x20>
 80090c2:	f804 0901 	strb.w	r0, [r4], #-1
 80090c6:	e7bd      	b.n	8009044 <_format_int+0x2c>
 80090c8:	f804 0901 	strb.w	r0, [r4], #-1
 80090cc:	e7c4      	b.n	8009058 <_format_int+0x40>
 80090ce:	f804 1901 	strb.w	r1, [r4], #-1
 80090d2:	e7d0      	b.n	8009076 <_format_int+0x5e>
 80090d4:	4630      	mov	r0, r6
 80090d6:	f814 1b01 	ldrb.w	r1, [r4], #1
 80090da:	f7ff ff87 	bl	8008fec <_xputch>
 80090de:	e7d1      	b.n	8009084 <_format_int+0x6c>
 80090e0:	2120      	movs	r1, #32
 80090e2:	4630      	mov	r0, r6
 80090e4:	f7ff ff82 	bl	8008fec <_xputch>
 80090e8:	3501      	adds	r5, #1
 80090ea:	e7ce      	b.n	800908a <_format_int+0x72>

080090ec <_format_hex>:
 80090ec:	b5f0      	push	{r4, r5, r6, r7, lr}
 80090ee:	b091      	sub	sp, #68	; 0x44
 80090f0:	4606      	mov	r6, r0
 80090f2:	6804      	ldr	r4, [r0, #0]
 80090f4:	f10d 023f 	add.w	r2, sp, #63	; 0x3f
 80090f8:	bb61      	cbnz	r1, 8009154 <_format_hex+0x68>
 80090fa:	2330      	movs	r3, #48	; 0x30
 80090fc:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8009100:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 8009104:	07e5      	lsls	r5, r4, #31
 8009106:	d507      	bpl.n	8009118 <_format_hex+0x2c>
 8009108:	4669      	mov	r1, sp
 800910a:	2530      	movs	r5, #48	; 0x30
 800910c:	6870      	ldr	r0, [r6, #4]
 800910e:	1ad7      	subs	r7, r2, r3
 8009110:	4287      	cmp	r7, r0
 8009112:	da01      	bge.n	8009118 <_format_hex+0x2c>
 8009114:	428b      	cmp	r3, r1
 8009116:	d831      	bhi.n	800917c <_format_hex+0x90>
 8009118:	06a0      	lsls	r0, r4, #26
 800911a:	d507      	bpl.n	800912c <_format_hex+0x40>
 800911c:	4669      	mov	r1, sp
 800911e:	2530      	movs	r5, #48	; 0x30
 8009120:	68b0      	ldr	r0, [r6, #8]
 8009122:	1ad7      	subs	r7, r2, r3
 8009124:	4287      	cmp	r7, r0
 8009126:	da01      	bge.n	800912c <_format_hex+0x40>
 8009128:	428b      	cmp	r3, r1
 800912a:	d82a      	bhi.n	8009182 <_format_hex+0x96>
 800912c:	0661      	lsls	r1, r4, #25
 800912e:	d407      	bmi.n	8009140 <_format_hex+0x54>
 8009130:	4669      	mov	r1, sp
 8009132:	2420      	movs	r4, #32
 8009134:	68b0      	ldr	r0, [r6, #8]
 8009136:	1ad5      	subs	r5, r2, r3
 8009138:	4285      	cmp	r5, r0
 800913a:	da01      	bge.n	8009140 <_format_hex+0x54>
 800913c:	428b      	cmp	r3, r1
 800913e:	d823      	bhi.n	8009188 <_format_hex+0x9c>
 8009140:	1ad5      	subs	r5, r2, r3
 8009142:	1c5c      	adds	r4, r3, #1
 8009144:	ab10      	add	r3, sp, #64	; 0x40
 8009146:	429c      	cmp	r4, r3
 8009148:	d321      	bcc.n	800918e <_format_hex+0xa2>
 800914a:	68b3      	ldr	r3, [r6, #8]
 800914c:	429d      	cmp	r5, r3
 800914e:	db24      	blt.n	800919a <_format_hex+0xae>
 8009150:	b011      	add	sp, #68	; 0x44
 8009152:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009154:	f014 0f02 	tst.w	r4, #2
 8009158:	bf0c      	ite	eq
 800915a:	2757      	moveq	r7, #87	; 0x57
 800915c:	2737      	movne	r7, #55	; 0x37
 800915e:	4613      	mov	r3, r2
 8009160:	466d      	mov	r5, sp
 8009162:	f001 000f 	and.w	r0, r1, #15
 8009166:	2809      	cmp	r0, #9
 8009168:	bf94      	ite	ls
 800916a:	3030      	addls	r0, #48	; 0x30
 800916c:	19c0      	addhi	r0, r0, r7
 800916e:	0909      	lsrs	r1, r1, #4
 8009170:	f803 0901 	strb.w	r0, [r3], #-1
 8009174:	d0c6      	beq.n	8009104 <_format_hex+0x18>
 8009176:	42ab      	cmp	r3, r5
 8009178:	d1f3      	bne.n	8009162 <_format_hex+0x76>
 800917a:	e7c3      	b.n	8009104 <_format_hex+0x18>
 800917c:	f803 5901 	strb.w	r5, [r3], #-1
 8009180:	e7c5      	b.n	800910e <_format_hex+0x22>
 8009182:	f803 5901 	strb.w	r5, [r3], #-1
 8009186:	e7cc      	b.n	8009122 <_format_hex+0x36>
 8009188:	f803 4901 	strb.w	r4, [r3], #-1
 800918c:	e7d3      	b.n	8009136 <_format_hex+0x4a>
 800918e:	4630      	mov	r0, r6
 8009190:	f814 1b01 	ldrb.w	r1, [r4], #1
 8009194:	f7ff ff2a 	bl	8008fec <_xputch>
 8009198:	e7d4      	b.n	8009144 <_format_hex+0x58>
 800919a:	2120      	movs	r1, #32
 800919c:	4630      	mov	r0, r6
 800919e:	f7ff ff25 	bl	8008fec <_xputch>
 80091a2:	3501      	adds	r5, #1
 80091a4:	e7d1      	b.n	800914a <_format_hex+0x5e>
	...

080091a8 <_vprintf>:
 80091a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80091ac:	4614      	mov	r4, r2
 80091ae:	2200      	movs	r2, #0
 80091b0:	460b      	mov	r3, r1
 80091b2:	f04f 0800 	mov.w	r8, #0
 80091b6:	b099      	sub	sp, #100	; 0x64
 80091b8:	e9cd 2006 	strd	r2, r0, [sp, #24]
 80091bc:	af08      	add	r7, sp, #32
 80091be:	7819      	ldrb	r1, [r3, #0]
 80091c0:	b919      	cbnz	r1, 80091ca <_vprintf+0x22>
 80091c2:	9806      	ldr	r0, [sp, #24]
 80091c4:	b019      	add	sp, #100	; 0x64
 80091c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80091ca:	2925      	cmp	r1, #37	; 0x25
 80091cc:	f103 0601 	add.w	r6, r3, #1
 80091d0:	d004      	beq.n	80091dc <_vprintf+0x34>
 80091d2:	a803      	add	r0, sp, #12
 80091d4:	f7ff ff0a 	bl	8008fec <_xputch>
 80091d8:	4633      	mov	r3, r6
 80091da:	e7f0      	b.n	80091be <_vprintf+0x16>
 80091dc:	2200      	movs	r2, #0
 80091de:	e9cd 2203 	strd	r2, r2, [sp, #12]
 80091e2:	9205      	str	r2, [sp, #20]
 80091e4:	785a      	ldrb	r2, [r3, #1]
 80091e6:	2a30      	cmp	r2, #48	; 0x30
 80091e8:	d129      	bne.n	800923e <_vprintf+0x96>
 80091ea:	2220      	movs	r2, #32
 80091ec:	9203      	str	r2, [sp, #12]
 80091ee:	1c9e      	adds	r6, r3, #2
 80091f0:	2200      	movs	r2, #0
 80091f2:	4635      	mov	r5, r6
 80091f4:	4613      	mov	r3, r2
 80091f6:	f04f 0c0a 	mov.w	ip, #10
 80091fa:	7829      	ldrb	r1, [r5, #0]
 80091fc:	462e      	mov	r6, r5
 80091fe:	f1a1 0030 	sub.w	r0, r1, #48	; 0x30
 8009202:	2809      	cmp	r0, #9
 8009204:	f105 0501 	add.w	r5, r5, #1
 8009208:	d91d      	bls.n	8009246 <_vprintf+0x9e>
 800920a:	b12a      	cbz	r2, 8009218 <_vprintf+0x70>
 800920c:	9305      	str	r3, [sp, #20]
 800920e:	b11b      	cbz	r3, 8009218 <_vprintf+0x70>
 8009210:	9b03      	ldr	r3, [sp, #12]
 8009212:	f043 0310 	orr.w	r3, r3, #16
 8009216:	9303      	str	r3, [sp, #12]
 8009218:	292e      	cmp	r1, #46	; 0x2e
 800921a:	d123      	bne.n	8009264 <_vprintf+0xbc>
 800921c:	7873      	ldrb	r3, [r6, #1]
 800921e:	2b2a      	cmp	r3, #42	; 0x2a
 8009220:	d015      	beq.n	800924e <_vprintf+0xa6>
 8009222:	2100      	movs	r1, #0
 8009224:	250a      	movs	r5, #10
 8009226:	460a      	mov	r2, r1
 8009228:	1c70      	adds	r0, r6, #1
 800922a:	7803      	ldrb	r3, [r0, #0]
 800922c:	4606      	mov	r6, r0
 800922e:	3b30      	subs	r3, #48	; 0x30
 8009230:	2b09      	cmp	r3, #9
 8009232:	f100 0001 	add.w	r0, r0, #1
 8009236:	d959      	bls.n	80092ec <_vprintf+0x144>
 8009238:	b181      	cbz	r1, 800925c <_vprintf+0xb4>
 800923a:	9204      	str	r2, [sp, #16]
 800923c:	e00e      	b.n	800925c <_vprintf+0xb4>
 800923e:	2a2d      	cmp	r2, #45	; 0x2d
 8009240:	d1d6      	bne.n	80091f0 <_vprintf+0x48>
 8009242:	2240      	movs	r2, #64	; 0x40
 8009244:	e7d2      	b.n	80091ec <_vprintf+0x44>
 8009246:	2201      	movs	r2, #1
 8009248:	fb0c 0303 	mla	r3, ip, r3, r0
 800924c:	e7d5      	b.n	80091fa <_vprintf+0x52>
 800924e:	f854 3b04 	ldr.w	r3, [r4], #4
 8009252:	3602      	adds	r6, #2
 8009254:	2b00      	cmp	r3, #0
 8009256:	bfb8      	it	lt
 8009258:	425b      	neglt	r3, r3
 800925a:	9304      	str	r3, [sp, #16]
 800925c:	9b03      	ldr	r3, [sp, #12]
 800925e:	f043 0301 	orr.w	r3, r3, #1
 8009262:	9303      	str	r3, [sp, #12]
 8009264:	7833      	ldrb	r3, [r6, #0]
 8009266:	2b6c      	cmp	r3, #108	; 0x6c
 8009268:	bf04      	itt	eq
 800926a:	9b03      	ldreq	r3, [sp, #12]
 800926c:	3601      	addeq	r6, #1
 800926e:	7831      	ldrb	r1, [r6, #0]
 8009270:	bf04      	itt	eq
 8009272:	f043 0304 	orreq.w	r3, r3, #4
 8009276:	9303      	streq	r3, [sp, #12]
 8009278:	2958      	cmp	r1, #88	; 0x58
 800927a:	f000 8171 	beq.w	8009560 <_vprintf+0x3b8>
 800927e:	f1a1 0363 	sub.w	r3, r1, #99	; 0x63
 8009282:	b2da      	uxtb	r2, r3
 8009284:	2a15      	cmp	r2, #21
 8009286:	d8a4      	bhi.n	80091d2 <_vprintf+0x2a>
 8009288:	2b15      	cmp	r3, #21
 800928a:	d8a2      	bhi.n	80091d2 <_vprintf+0x2a>
 800928c:	a201      	add	r2, pc, #4	; (adr r2, 8009294 <_vprintf+0xec>)
 800928e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8009292:	bf00      	nop
 8009294:	080092f5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r9, ip, pc}
 8009298:	08009307 	stmdaeq	r0, {r0, r1, r2, r8, r9, ip, pc}
 800929c:	080091d3 	stmdaeq	r0, {r0, r1, r4, r6, r7, r8, ip, pc}
 80092a0:	0800933d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r8, r9, ip, pc}
 80092a4:	080091d3 	stmdaeq	r0, {r0, r1, r4, r6, r7, r8, ip, pc}
 80092a8:	080091d3 	stmdaeq	r0, {r0, r1, r4, r6, r7, r8, ip, pc}
 80092ac:	08009307 	stmdaeq	r0, {r0, r1, r2, r8, r9, ip, pc}
 80092b0:	080091d3 	stmdaeq	r0, {r0, r1, r4, r6, r7, r8, ip, pc}
 80092b4:	080091d3 	stmdaeq	r0, {r0, r1, r4, r6, r7, r8, ip, pc}
 80092b8:	080091d3 	stmdaeq	r0, {r0, r1, r4, r6, r7, r8, ip, pc}
 80092bc:	080091d3 	stmdaeq	r0, {r0, r1, r4, r6, r7, r8, ip, pc}
 80092c0:	080091d3 	stmdaeq	r0, {r0, r1, r4, r6, r7, r8, ip, pc}
 80092c4:	080091d3 	stmdaeq	r0, {r0, r1, r4, r6, r7, r8, ip, pc}
 80092c8:	080094a3 	stmdaeq	r0, {r0, r1, r5, r7, sl, ip, pc}
 80092cc:	080091d3 	stmdaeq	r0, {r0, r1, r4, r6, r7, r8, ip, pc}
 80092d0:	080091d3 	stmdaeq	r0, {r0, r1, r4, r6, r7, r8, ip, pc}
 80092d4:	080094cb 	stmdaeq	r0, {r0, r1, r3, r6, r7, sl, ip, pc}
 80092d8:	080091d3 	stmdaeq	r0, {r0, r1, r4, r6, r7, r8, ip, pc}
 80092dc:	08009541 	stmdaeq	r0, {r0, r6, r8, sl, ip, pc}
 80092e0:	080091d3 	stmdaeq	r0, {r0, r1, r4, r6, r7, r8, ip, pc}
 80092e4:	080091d3 	stmdaeq	r0, {r0, r1, r4, r6, r7, r8, ip, pc}
 80092e8:	08009569 	stmdaeq	r0, {r0, r3, r5, r6, r8, sl, ip, pc}
 80092ec:	2101      	movs	r1, #1
 80092ee:	fb05 3202 	mla	r2, r5, r2, r3
 80092f2:	e79a      	b.n	800922a <_vprintf+0x82>
 80092f4:	4625      	mov	r5, r4
 80092f6:	a803      	add	r0, sp, #12
 80092f8:	f855 1b04 	ldr.w	r1, [r5], #4
 80092fc:	f7ff fe76 	bl	8008fec <_xputch>
 8009300:	462c      	mov	r4, r5
 8009302:	3601      	adds	r6, #1
 8009304:	e768      	b.n	80091d8 <_vprintf+0x30>
 8009306:	9903      	ldr	r1, [sp, #12]
 8009308:	074d      	lsls	r5, r1, #29
 800930a:	bf51      	iteee	pl
 800930c:	4625      	movpl	r5, r4
 800930e:	3407      	addmi	r4, #7
 8009310:	f024 0407 	bicmi.w	r4, r4, #7
 8009314:	4625      	movmi	r5, r4
 8009316:	bf55      	itete	pl
 8009318:	f855 2b04 	ldrpl.w	r2, [r5], #4
 800931c:	6863      	ldrmi	r3, [r4, #4]
 800931e:	17d3      	asrpl	r3, r2, #31
 8009320:	f855 2b08 	ldrmi.w	r2, [r5], #8
 8009324:	2b00      	cmp	r3, #0
 8009326:	da05      	bge.n	8009334 <_vprintf+0x18c>
 8009328:	f041 0108 	orr.w	r1, r1, #8
 800932c:	4252      	negs	r2, r2
 800932e:	9103      	str	r1, [sp, #12]
 8009330:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8009334:	a803      	add	r0, sp, #12
 8009336:	f7ff fe6f 	bl	8009018 <_format_int>
 800933a:	e7e1      	b.n	8009300 <_vprintf+0x158>
 800933c:	3407      	adds	r4, #7
 800933e:	f024 0507 	bic.w	r5, r4, #7
 8009342:	e8f5 0102 	ldrd	r0, r1, [r5], #8
 8009346:	f7fe fbf9 	bl	8007b3c <__aeabi_d2f>
 800934a:	9b03      	ldr	r3, [sp, #12]
 800934c:	4641      	mov	r1, r8
 800934e:	07dc      	lsls	r4, r3, #31
 8009350:	bf54      	ite	pl
 8009352:	f04f 0a06 	movpl.w	sl, #6
 8009356:	f8dd a010 	ldrmi.w	sl, [sp, #16]
 800935a:	4681      	mov	r9, r0
 800935c:	f7fe fd9a 	bl	8007e94 <__aeabi_fcmplt>
 8009360:	2800      	cmp	r0, #0
 8009362:	d063      	beq.n	800942c <_vprintf+0x284>
 8009364:	232d      	movs	r3, #45	; 0x2d
 8009366:	f109 4900 	add.w	r9, r9, #2147483648	; 0x80000000
 800936a:	f88d 3020 	strb.w	r3, [sp, #32]
 800936e:	f10d 0b21 	add.w	fp, sp, #33	; 0x21
 8009372:	4648      	mov	r0, r9
 8009374:	f7fe fdb6 	bl	8007ee4 <__aeabi_f2iz>
 8009378:	4659      	mov	r1, fp
 800937a:	2200      	movs	r2, #0
 800937c:	4604      	mov	r4, r0
 800937e:	f7ff fdfb 	bl	8008f78 <_itostr>
 8009382:	eb0b 0200 	add.w	r2, fp, r0
 8009386:	e9cd 2000 	strd	r2, r0, [sp]
 800938a:	4620      	mov	r0, r4
 800938c:	f7fe fce0 	bl	8007d50 <__aeabi_i2f>
 8009390:	4601      	mov	r1, r0
 8009392:	4648      	mov	r0, r9
 8009394:	f7fe fc26 	bl	8007be4 <__aeabi_fsub>
 8009398:	222e      	movs	r2, #46	; 0x2e
 800939a:	4601      	mov	r1, r0
 800939c:	200a      	movs	r0, #10
 800939e:	9b00      	ldr	r3, [sp, #0]
 80093a0:	f10a 0901 	add.w	r9, sl, #1
 80093a4:	1c5c      	adds	r4, r3, #1
 80093a6:	9b01      	ldr	r3, [sp, #4]
 80093a8:	f80b 2003 	strb.w	r2, [fp, r3]
 80093ac:	4603      	mov	r3, r0
 80093ae:	f1ba 0f00 	cmp.w	sl, #0
 80093b2:	dc3d      	bgt.n	8009430 <_vprintf+0x288>
 80093b4:	9100      	str	r1, [sp, #0]
 80093b6:	f7fe fccb 	bl	8007d50 <__aeabi_i2f>
 80093ba:	9900      	ldr	r1, [sp, #0]
 80093bc:	f7fe ff8e 	bl	80082dc <__aeabi_fmul>
 80093c0:	f7fe fd90 	bl	8007ee4 <__aeabi_f2iz>
 80093c4:	464a      	mov	r2, r9
 80093c6:	4621      	mov	r1, r4
 80093c8:	f7ff fdd6 	bl	8008f78 <_itostr>
 80093cc:	4404      	add	r4, r0
 80093ce:	1be0      	subs	r0, r4, r7
 80093d0:	1e44      	subs	r4, r0, #1
 80093d2:	5d3b      	ldrb	r3, [r7, r4]
 80093d4:	193a      	adds	r2, r7, r4
 80093d6:	2b34      	cmp	r3, #52	; 0x34
 80093d8:	d910      	bls.n	80093fc <_vprintf+0x254>
 80093da:	f812 1c01 	ldrb.w	r1, [r2, #-1]
 80093de:	1e53      	subs	r3, r2, #1
 80093e0:	292e      	cmp	r1, #46	; 0x2e
 80093e2:	d02c      	beq.n	800943e <_vprintf+0x296>
 80093e4:	469c      	mov	ip, r3
 80093e6:	f04f 0e30 	mov.w	lr, #48	; 0x30
 80093ea:	4663      	mov	r3, ip
 80093ec:	f81c 1901 	ldrb.w	r1, [ip], #-1
 80093f0:	2939      	cmp	r1, #57	; 0x39
 80093f2:	d021      	beq.n	8009438 <_vprintf+0x290>
 80093f4:	292e      	cmp	r1, #46	; 0x2e
 80093f6:	d022      	beq.n	800943e <_vprintf+0x296>
 80093f8:	3101      	adds	r1, #1
 80093fa:	7019      	strb	r1, [r3, #0]
 80093fc:	f104 0360 	add.w	r3, r4, #96	; 0x60
 8009400:	446b      	add	r3, sp
 8009402:	f813 3c41 	ldrb.w	r3, [r3, #-65]
 8009406:	2b2e      	cmp	r3, #46	; 0x2e
 8009408:	bf08      	it	eq
 800940a:	f104 34ff 	addeq.w	r4, r4, #4294967295	; 0xffffffff
 800940e:	46a1      	mov	r9, r4
 8009410:	9b05      	ldr	r3, [sp, #20]
 8009412:	4599      	cmp	r9, r3
 8009414:	db3e      	blt.n	8009494 <_vprintf+0x2ec>
 8009416:	46b9      	mov	r9, r7
 8009418:	2c00      	cmp	r4, #0
 800941a:	f77f af71 	ble.w	8009300 <_vprintf+0x158>
 800941e:	f819 1b01 	ldrb.w	r1, [r9], #1
 8009422:	a803      	add	r0, sp, #12
 8009424:	f7ff fde2 	bl	8008fec <_xputch>
 8009428:	3c01      	subs	r4, #1
 800942a:	e7f5      	b.n	8009418 <_vprintf+0x270>
 800942c:	46bb      	mov	fp, r7
 800942e:	e7a0      	b.n	8009372 <_vprintf+0x1ca>
 8009430:	4358      	muls	r0, r3
 8009432:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
 8009436:	e7ba      	b.n	80093ae <_vprintf+0x206>
 8009438:	f88c e001 	strb.w	lr, [ip, #1]
 800943c:	e7d5      	b.n	80093ea <_vprintf+0x242>
 800943e:	f04f 0c30 	mov.w	ip, #48	; 0x30
 8009442:	3b01      	subs	r3, #1
 8009444:	7819      	ldrb	r1, [r3, #0]
 8009446:	2939      	cmp	r1, #57	; 0x39
 8009448:	d112      	bne.n	8009470 <_vprintf+0x2c8>
 800944a:	42bb      	cmp	r3, r7
 800944c:	d20d      	bcs.n	800946a <_vprintf+0x2c2>
 800944e:	1c5c      	adds	r4, r3, #1
 8009450:	1c99      	adds	r1, r3, #2
 8009452:	428c      	cmp	r4, r1
 8009454:	eba2 0203 	sub.w	r2, r2, r3
 8009458:	d913      	bls.n	8009482 <_vprintf+0x2da>
 800945a:	4619      	mov	r1, r3
 800945c:	441a      	add	r2, r3
 800945e:	428a      	cmp	r2, r1
 8009460:	d10b      	bne.n	800947a <_vprintf+0x2d2>
 8009462:	2231      	movs	r2, #49	; 0x31
 8009464:	4604      	mov	r4, r0
 8009466:	705a      	strb	r2, [r3, #1]
 8009468:	e7c8      	b.n	80093fc <_vprintf+0x254>
 800946a:	f803 c901 	strb.w	ip, [r3], #-1
 800946e:	e7e9      	b.n	8009444 <_vprintf+0x29c>
 8009470:	42bb      	cmp	r3, r7
 8009472:	d3ec      	bcc.n	800944e <_vprintf+0x2a6>
 8009474:	292d      	cmp	r1, #45	; 0x2d
 8009476:	d0ea      	beq.n	800944e <_vprintf+0x2a6>
 8009478:	e7be      	b.n	80093f8 <_vprintf+0x250>
 800947a:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800947e:	704c      	strb	r4, [r1, #1]
 8009480:	e7ed      	b.n	800945e <_vprintf+0x2b6>
 8009482:	4414      	add	r4, r2
 8009484:	440a      	add	r2, r1
 8009486:	428a      	cmp	r2, r1
 8009488:	d0eb      	beq.n	8009462 <_vprintf+0x2ba>
 800948a:	f814 cd01 	ldrb.w	ip, [r4, #-1]!
 800948e:	f802 cd01 	strb.w	ip, [r2, #-1]!
 8009492:	e7f8      	b.n	8009486 <_vprintf+0x2de>
 8009494:	2120      	movs	r1, #32
 8009496:	a803      	add	r0, sp, #12
 8009498:	f7ff fda8 	bl	8008fec <_xputch>
 800949c:	f109 0901 	add.w	r9, r9, #1
 80094a0:	e7b6      	b.n	8009410 <_vprintf+0x268>
 80094a2:	2308      	movs	r3, #8
 80094a4:	4625      	mov	r5, r4
 80094a6:	9305      	str	r3, [sp, #20]
 80094a8:	2320      	movs	r3, #32
 80094aa:	2130      	movs	r1, #48	; 0x30
 80094ac:	f855 4b04 	ldr.w	r4, [r5], #4
 80094b0:	a803      	add	r0, sp, #12
 80094b2:	9303      	str	r3, [sp, #12]
 80094b4:	f7ff fd9a 	bl	8008fec <_xputch>
 80094b8:	2178      	movs	r1, #120	; 0x78
 80094ba:	a803      	add	r0, sp, #12
 80094bc:	f7ff fd96 	bl	8008fec <_xputch>
 80094c0:	4621      	mov	r1, r4
 80094c2:	a803      	add	r0, sp, #12
 80094c4:	f7ff fe12 	bl	80090ec <_format_hex>
 80094c8:	e71a      	b.n	8009300 <_vprintf+0x158>
 80094ca:	4625      	mov	r5, r4
 80094cc:	2400      	movs	r4, #0
 80094ce:	f855 9b04 	ldr.w	r9, [r5], #4
 80094d2:	f819 3004 	ldrb.w	r3, [r9, r4]
 80094d6:	b993      	cbnz	r3, 80094fe <_vprintf+0x356>
 80094d8:	9b03      	ldr	r3, [sp, #12]
 80094da:	07d9      	lsls	r1, r3, #31
 80094dc:	d503      	bpl.n	80094e6 <_vprintf+0x33e>
 80094de:	9b04      	ldr	r3, [sp, #16]
 80094e0:	429c      	cmp	r4, r3
 80094e2:	bfa8      	it	ge
 80094e4:	461c      	movge	r4, r3
 80094e6:	9b03      	ldr	r3, [sp, #12]
 80094e8:	f104 0a01 	add.w	sl, r4, #1
 80094ec:	065a      	lsls	r2, r3, #25
 80094ee:	d403      	bmi.n	80094f8 <_vprintf+0x350>
 80094f0:	9b05      	ldr	r3, [sp, #20]
 80094f2:	429c      	cmp	r4, r3
 80094f4:	db05      	blt.n	8009502 <_vprintf+0x35a>
 80094f6:	4654      	mov	r4, sl
 80094f8:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 80094fc:	e00d      	b.n	800951a <_vprintf+0x372>
 80094fe:	3401      	adds	r4, #1
 8009500:	e7e7      	b.n	80094d2 <_vprintf+0x32a>
 8009502:	2120      	movs	r1, #32
 8009504:	a803      	add	r0, sp, #12
 8009506:	f7ff fd71 	bl	8008fec <_xputch>
 800950a:	4654      	mov	r4, sl
 800950c:	e7eb      	b.n	80094e6 <_vprintf+0x33e>
 800950e:	a803      	add	r0, sp, #12
 8009510:	f7ff fd6c 	bl	8008fec <_xputch>
 8009514:	9b04      	ldr	r3, [sp, #16]
 8009516:	3b01      	subs	r3, #1
 8009518:	9304      	str	r3, [sp, #16]
 800951a:	9b03      	ldr	r3, [sp, #12]
 800951c:	07db      	lsls	r3, r3, #31
 800951e:	d501      	bpl.n	8009524 <_vprintf+0x37c>
 8009520:	9b04      	ldr	r3, [sp, #16]
 8009522:	b11b      	cbz	r3, 800952c <_vprintf+0x384>
 8009524:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 8009528:	2900      	cmp	r1, #0
 800952a:	d1f0      	bne.n	800950e <_vprintf+0x366>
 800952c:	9b05      	ldr	r3, [sp, #20]
 800952e:	429c      	cmp	r4, r3
 8009530:	f6bf aee6 	bge.w	8009300 <_vprintf+0x158>
 8009534:	2120      	movs	r1, #32
 8009536:	a803      	add	r0, sp, #12
 8009538:	f7ff fd58 	bl	8008fec <_xputch>
 800953c:	3401      	adds	r4, #1
 800953e:	e7f5      	b.n	800952c <_vprintf+0x384>
 8009540:	9b03      	ldr	r3, [sp, #12]
 8009542:	f013 0304 	ands.w	r3, r3, #4
 8009546:	bf1d      	ittte	ne
 8009548:	3407      	addne	r4, #7
 800954a:	f024 0407 	bicne.w	r4, r4, #7
 800954e:	4625      	movne	r5, r4
 8009550:	4625      	moveq	r5, r4
 8009552:	bf1a      	itte	ne
 8009554:	f855 2b08 	ldrne.w	r2, [r5], #8
 8009558:	6863      	ldrne	r3, [r4, #4]
 800955a:	f855 2b04 	ldreq.w	r2, [r5], #4
 800955e:	e6e9      	b.n	8009334 <_vprintf+0x18c>
 8009560:	9b03      	ldr	r3, [sp, #12]
 8009562:	f043 0302 	orr.w	r3, r3, #2
 8009566:	9303      	str	r3, [sp, #12]
 8009568:	4625      	mov	r5, r4
 800956a:	f855 1b04 	ldr.w	r1, [r5], #4
 800956e:	e7a8      	b.n	80094c2 <_vprintf+0x31a>

08009570 <printf>:
 8009570:	b40f      	push	{r0, r1, r2, r3}
 8009572:	b507      	push	{r0, r1, r2, lr}
 8009574:	aa04      	add	r2, sp, #16
 8009576:	f852 1b04 	ldr.w	r1, [r2], #4
 800957a:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800957e:	9201      	str	r2, [sp, #4]
 8009580:	f7ff fe12 	bl	80091a8 <_vprintf>
 8009584:	b003      	add	sp, #12
 8009586:	f85d eb04 	ldr.w	lr, [sp], #4
 800958a:	b004      	add	sp, #16
 800958c:	4770      	bx	lr
	...

08009590 <sprintf>:
 8009590:	b40e      	push	{r1, r2, r3}
 8009592:	b517      	push	{r0, r1, r2, r4, lr}
 8009594:	4c09      	ldr	r4, [pc, #36]	; (80095bc <sprintf+0x2c>)
 8009596:	aa05      	add	r2, sp, #20
 8009598:	f852 1b04 	ldr.w	r1, [r2], #4
 800959c:	6020      	str	r0, [r4, #0]
 800959e:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 80095a2:	9201      	str	r2, [sp, #4]
 80095a4:	f7ff fe00 	bl	80091a8 <_vprintf>
 80095a8:	2300      	movs	r3, #0
 80095aa:	6822      	ldr	r2, [r4, #0]
 80095ac:	6023      	str	r3, [r4, #0]
 80095ae:	7013      	strb	r3, [r2, #0]
 80095b0:	b003      	add	sp, #12
 80095b2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80095b6:	b003      	add	sp, #12
 80095b8:	4770      	bx	lr
 80095ba:	bf00      	nop
 80095bc:	200000e8 	andcs	r0, r0, r8, ror #1

080095c0 <snprintf>:
 80095c0:	b40c      	push	{r2, r3}
 80095c2:	460b      	mov	r3, r1
 80095c4:	b513      	push	{r0, r1, r4, lr}
 80095c6:	4c09      	ldr	r4, [pc, #36]	; (80095ec <snprintf+0x2c>)
 80095c8:	aa04      	add	r2, sp, #16
 80095ca:	f852 1b04 	ldr.w	r1, [r2], #4
 80095ce:	6020      	str	r0, [r4, #0]
 80095d0:	4618      	mov	r0, r3
 80095d2:	9201      	str	r2, [sp, #4]
 80095d4:	f7ff fde8 	bl	80091a8 <_vprintf>
 80095d8:	2300      	movs	r3, #0
 80095da:	6822      	ldr	r2, [r4, #0]
 80095dc:	6023      	str	r3, [r4, #0]
 80095de:	7013      	strb	r3, [r2, #0]
 80095e0:	b002      	add	sp, #8
 80095e2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80095e6:	b002      	add	sp, #8
 80095e8:	4770      	bx	lr
 80095ea:	bf00      	nop
 80095ec:	200000e8 	andcs	r0, r0, r8, ror #1

080095f0 <vsnprintf>:
 80095f0:	b538      	push	{r3, r4, r5, lr}
 80095f2:	4605      	mov	r5, r0
 80095f4:	4c05      	ldr	r4, [pc, #20]	; (800960c <vsnprintf+0x1c>)
 80095f6:	4608      	mov	r0, r1
 80095f8:	4611      	mov	r1, r2
 80095fa:	461a      	mov	r2, r3
 80095fc:	6025      	str	r5, [r4, #0]
 80095fe:	f7ff fdd3 	bl	80091a8 <_vprintf>
 8009602:	2300      	movs	r3, #0
 8009604:	6822      	ldr	r2, [r4, #0]
 8009606:	6023      	str	r3, [r4, #0]
 8009608:	7013      	strb	r3, [r2, #0]
 800960a:	bd38      	pop	{r3, r4, r5, pc}
 800960c:	200000e8 	andcs	r0, r0, r8, ror #1

08009610 <__udivmoddi4>:
 8009610:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009614:	9e08      	ldr	r6, [sp, #32]
 8009616:	460d      	mov	r5, r1
 8009618:	4604      	mov	r4, r0
 800961a:	468e      	mov	lr, r1
 800961c:	2b00      	cmp	r3, #0
 800961e:	d14c      	bne.n	80096ba <__udivmoddi4+0xaa>
 8009620:	428a      	cmp	r2, r1
 8009622:	4694      	mov	ip, r2
 8009624:	d967      	bls.n	80096f6 <__udivmoddi4+0xe6>
 8009626:	fab2 f382 	clz	r3, r2
 800962a:	b153      	cbz	r3, 8009642 <__udivmoddi4+0x32>
 800962c:	fa02 fc03 	lsl.w	ip, r2, r3
 8009630:	f1c3 0220 	rsb	r2, r3, #32
 8009634:	fa01 fe03 	lsl.w	lr, r1, r3
 8009638:	fa20 f202 	lsr.w	r2, r0, r2
 800963c:	ea42 0e0e 	orr.w	lr, r2, lr
 8009640:	409c      	lsls	r4, r3
 8009642:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8009646:	fbbe f1f7 	udiv	r1, lr, r7
 800964a:	fa1f f58c 	uxth.w	r5, ip
 800964e:	fb07 ee11 	mls	lr, r7, r1, lr
 8009652:	fb01 f005 	mul.w	r0, r1, r5
 8009656:	0c22      	lsrs	r2, r4, #16
 8009658:	ea42 420e 	orr.w	r2, r2, lr, lsl #16
 800965c:	4290      	cmp	r0, r2
 800965e:	d90a      	bls.n	8009676 <__udivmoddi4+0x66>
 8009660:	eb1c 0202 	adds.w	r2, ip, r2
 8009664:	f101 3eff 	add.w	lr, r1, #4294967295	; 0xffffffff
 8009668:	f080 8119 	bcs.w	800989e <__udivmoddi4+0x28e>
 800966c:	4290      	cmp	r0, r2
 800966e:	f240 8116 	bls.w	800989e <__udivmoddi4+0x28e>
 8009672:	3902      	subs	r1, #2
 8009674:	4462      	add	r2, ip
 8009676:	1a12      	subs	r2, r2, r0
 8009678:	fbb2 f0f7 	udiv	r0, r2, r7
 800967c:	fb07 2210 	mls	r2, r7, r0, r2
 8009680:	fb00 f505 	mul.w	r5, r0, r5
 8009684:	b2a4      	uxth	r4, r4
 8009686:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 800968a:	42a5      	cmp	r5, r4
 800968c:	d90a      	bls.n	80096a4 <__udivmoddi4+0x94>
 800968e:	eb1c 0404 	adds.w	r4, ip, r4
 8009692:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
 8009696:	f080 8104 	bcs.w	80098a2 <__udivmoddi4+0x292>
 800969a:	42a5      	cmp	r5, r4
 800969c:	f240 8101 	bls.w	80098a2 <__udivmoddi4+0x292>
 80096a0:	4464      	add	r4, ip
 80096a2:	3802      	subs	r0, #2
 80096a4:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 80096a8:	2100      	movs	r1, #0
 80096aa:	1b64      	subs	r4, r4, r5
 80096ac:	b11e      	cbz	r6, 80096b6 <__udivmoddi4+0xa6>
 80096ae:	40dc      	lsrs	r4, r3
 80096b0:	2300      	movs	r3, #0
 80096b2:	e9c6 4300 	strd	r4, r3, [r6]
 80096b6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80096ba:	428b      	cmp	r3, r1
 80096bc:	d908      	bls.n	80096d0 <__udivmoddi4+0xc0>
 80096be:	2e00      	cmp	r6, #0
 80096c0:	f000 80ea 	beq.w	8009898 <__udivmoddi4+0x288>
 80096c4:	2100      	movs	r1, #0
 80096c6:	e9c6 0500 	strd	r0, r5, [r6]
 80096ca:	4608      	mov	r0, r1
 80096cc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80096d0:	fab3 f183 	clz	r1, r3
 80096d4:	2900      	cmp	r1, #0
 80096d6:	d148      	bne.n	800976a <__udivmoddi4+0x15a>
 80096d8:	42ab      	cmp	r3, r5
 80096da:	d302      	bcc.n	80096e2 <__udivmoddi4+0xd2>
 80096dc:	4282      	cmp	r2, r0
 80096de:	f200 80f8 	bhi.w	80098d2 <__udivmoddi4+0x2c2>
 80096e2:	1a84      	subs	r4, r0, r2
 80096e4:	eb65 0203 	sbc.w	r2, r5, r3
 80096e8:	2001      	movs	r0, #1
 80096ea:	4696      	mov	lr, r2
 80096ec:	2e00      	cmp	r6, #0
 80096ee:	d0e2      	beq.n	80096b6 <__udivmoddi4+0xa6>
 80096f0:	e9c6 4e00 	strd	r4, lr, [r6]
 80096f4:	e7df      	b.n	80096b6 <__udivmoddi4+0xa6>
 80096f6:	b902      	cbnz	r2, 80096fa <__udivmoddi4+0xea>
 80096f8:	deff      	udf	#255	; 0xff
 80096fa:	fab2 f382 	clz	r3, r2
 80096fe:	2b00      	cmp	r3, #0
 8009700:	f040 808e 	bne.w	8009820 <__udivmoddi4+0x210>
 8009704:	1a88      	subs	r0, r1, r2
 8009706:	2101      	movs	r1, #1
 8009708:	0c17      	lsrs	r7, r2, #16
 800970a:	fa1f fe82 	uxth.w	lr, r2
 800970e:	fbb0 f5f7 	udiv	r5, r0, r7
 8009712:	fb07 0015 	mls	r0, r7, r5, r0
 8009716:	0c22      	lsrs	r2, r4, #16
 8009718:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800971c:	fb0e f005 	mul.w	r0, lr, r5
 8009720:	4290      	cmp	r0, r2
 8009722:	d908      	bls.n	8009736 <__udivmoddi4+0x126>
 8009724:	eb1c 0202 	adds.w	r2, ip, r2
 8009728:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 800972c:	d202      	bcs.n	8009734 <__udivmoddi4+0x124>
 800972e:	4290      	cmp	r0, r2
 8009730:	f200 80cc 	bhi.w	80098cc <__udivmoddi4+0x2bc>
 8009734:	4645      	mov	r5, r8
 8009736:	1a12      	subs	r2, r2, r0
 8009738:	fbb2 f0f7 	udiv	r0, r2, r7
 800973c:	fb07 2210 	mls	r2, r7, r0, r2
 8009740:	fb0e fe00 	mul.w	lr, lr, r0
 8009744:	b2a4      	uxth	r4, r4
 8009746:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 800974a:	45a6      	cmp	lr, r4
 800974c:	d908      	bls.n	8009760 <__udivmoddi4+0x150>
 800974e:	eb1c 0404 	adds.w	r4, ip, r4
 8009752:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
 8009756:	d202      	bcs.n	800975e <__udivmoddi4+0x14e>
 8009758:	45a6      	cmp	lr, r4
 800975a:	f200 80b4 	bhi.w	80098c6 <__udivmoddi4+0x2b6>
 800975e:	4610      	mov	r0, r2
 8009760:	eba4 040e 	sub.w	r4, r4, lr
 8009764:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8009768:	e7a0      	b.n	80096ac <__udivmoddi4+0x9c>
 800976a:	f1c1 0720 	rsb	r7, r1, #32
 800976e:	408b      	lsls	r3, r1
 8009770:	fa22 fc07 	lsr.w	ip, r2, r7
 8009774:	ea4c 0c03 	orr.w	ip, ip, r3
 8009778:	fa25 fa07 	lsr.w	sl, r5, r7
 800977c:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8009780:	fbba f8f9 	udiv	r8, sl, r9
 8009784:	408d      	lsls	r5, r1
 8009786:	fa20 f307 	lsr.w	r3, r0, r7
 800978a:	fb09 aa18 	mls	sl, r9, r8, sl
 800978e:	fa1f fe8c 	uxth.w	lr, ip
 8009792:	432b      	orrs	r3, r5
 8009794:	fa00 f501 	lsl.w	r5, r0, r1
 8009798:	fb08 f00e 	mul.w	r0, r8, lr
 800979c:	0c1c      	lsrs	r4, r3, #16
 800979e:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
 80097a2:	42a0      	cmp	r0, r4
 80097a4:	fa02 f201 	lsl.w	r2, r2, r1
 80097a8:	d90b      	bls.n	80097c2 <__udivmoddi4+0x1b2>
 80097aa:	eb1c 0404 	adds.w	r4, ip, r4
 80097ae:	f108 3aff 	add.w	sl, r8, #4294967295	; 0xffffffff
 80097b2:	f080 8086 	bcs.w	80098c2 <__udivmoddi4+0x2b2>
 80097b6:	42a0      	cmp	r0, r4
 80097b8:	f240 8083 	bls.w	80098c2 <__udivmoddi4+0x2b2>
 80097bc:	f1a8 0802 	sub.w	r8, r8, #2
 80097c0:	4464      	add	r4, ip
 80097c2:	1a24      	subs	r4, r4, r0
 80097c4:	b298      	uxth	r0, r3
 80097c6:	fbb4 f3f9 	udiv	r3, r4, r9
 80097ca:	fb09 4413 	mls	r4, r9, r3, r4
 80097ce:	fb03 fe0e 	mul.w	lr, r3, lr
 80097d2:	ea40 4404 	orr.w	r4, r0, r4, lsl #16
 80097d6:	45a6      	cmp	lr, r4
 80097d8:	d908      	bls.n	80097ec <__udivmoddi4+0x1dc>
 80097da:	eb1c 0404 	adds.w	r4, ip, r4
 80097de:	f103 30ff 	add.w	r0, r3, #4294967295	; 0xffffffff
 80097e2:	d26a      	bcs.n	80098ba <__udivmoddi4+0x2aa>
 80097e4:	45a6      	cmp	lr, r4
 80097e6:	d968      	bls.n	80098ba <__udivmoddi4+0x2aa>
 80097e8:	3b02      	subs	r3, #2
 80097ea:	4464      	add	r4, ip
 80097ec:	ea43 4008 	orr.w	r0, r3, r8, lsl #16
 80097f0:	fba0 9302 	umull	r9, r3, r0, r2
 80097f4:	eba4 040e 	sub.w	r4, r4, lr
 80097f8:	429c      	cmp	r4, r3
 80097fa:	46c8      	mov	r8, r9
 80097fc:	469e      	mov	lr, r3
 80097fe:	d354      	bcc.n	80098aa <__udivmoddi4+0x29a>
 8009800:	d051      	beq.n	80098a6 <__udivmoddi4+0x296>
 8009802:	2e00      	cmp	r6, #0
 8009804:	d067      	beq.n	80098d6 <__udivmoddi4+0x2c6>
 8009806:	ebb5 0308 	subs.w	r3, r5, r8
 800980a:	eb64 040e 	sbc.w	r4, r4, lr
 800980e:	40cb      	lsrs	r3, r1
 8009810:	fa04 f707 	lsl.w	r7, r4, r7
 8009814:	431f      	orrs	r7, r3
 8009816:	40cc      	lsrs	r4, r1
 8009818:	e9c6 7400 	strd	r7, r4, [r6]
 800981c:	2100      	movs	r1, #0
 800981e:	e74a      	b.n	80096b6 <__udivmoddi4+0xa6>
 8009820:	fa02 fc03 	lsl.w	ip, r2, r3
 8009824:	f1c3 0020 	rsb	r0, r3, #32
 8009828:	40c1      	lsrs	r1, r0
 800982a:	409d      	lsls	r5, r3
 800982c:	fa24 f000 	lsr.w	r0, r4, r0
 8009830:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8009834:	4328      	orrs	r0, r5
 8009836:	fbb1 f5f7 	udiv	r5, r1, r7
 800983a:	fb07 1115 	mls	r1, r7, r5, r1
 800983e:	fa1f fe8c 	uxth.w	lr, ip
 8009842:	0c02      	lsrs	r2, r0, #16
 8009844:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8009848:	fb05 f10e 	mul.w	r1, r5, lr
 800984c:	4291      	cmp	r1, r2
 800984e:	fa04 f403 	lsl.w	r4, r4, r3
 8009852:	d908      	bls.n	8009866 <__udivmoddi4+0x256>
 8009854:	eb1c 0202 	adds.w	r2, ip, r2
 8009858:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 800985c:	d22f      	bcs.n	80098be <__udivmoddi4+0x2ae>
 800985e:	4291      	cmp	r1, r2
 8009860:	d92d      	bls.n	80098be <__udivmoddi4+0x2ae>
 8009862:	3d02      	subs	r5, #2
 8009864:	4462      	add	r2, ip
 8009866:	1a52      	subs	r2, r2, r1
 8009868:	fbb2 f1f7 	udiv	r1, r2, r7
 800986c:	fb07 2211 	mls	r2, r7, r1, r2
 8009870:	b280      	uxth	r0, r0
 8009872:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 8009876:	fb01 f20e 	mul.w	r2, r1, lr
 800987a:	4282      	cmp	r2, r0
 800987c:	d908      	bls.n	8009890 <__udivmoddi4+0x280>
 800987e:	eb1c 0000 	adds.w	r0, ip, r0
 8009882:	f101 38ff 	add.w	r8, r1, #4294967295	; 0xffffffff
 8009886:	d216      	bcs.n	80098b6 <__udivmoddi4+0x2a6>
 8009888:	4282      	cmp	r2, r0
 800988a:	d914      	bls.n	80098b6 <__udivmoddi4+0x2a6>
 800988c:	3902      	subs	r1, #2
 800988e:	4460      	add	r0, ip
 8009890:	1a80      	subs	r0, r0, r2
 8009892:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8009896:	e73a      	b.n	800970e <__udivmoddi4+0xfe>
 8009898:	4631      	mov	r1, r6
 800989a:	4630      	mov	r0, r6
 800989c:	e70b      	b.n	80096b6 <__udivmoddi4+0xa6>
 800989e:	4671      	mov	r1, lr
 80098a0:	e6e9      	b.n	8009676 <__udivmoddi4+0x66>
 80098a2:	4610      	mov	r0, r2
 80098a4:	e6fe      	b.n	80096a4 <__udivmoddi4+0x94>
 80098a6:	454d      	cmp	r5, r9
 80098a8:	d2ab      	bcs.n	8009802 <__udivmoddi4+0x1f2>
 80098aa:	ebb9 0802 	subs.w	r8, r9, r2
 80098ae:	eb63 0e0c 	sbc.w	lr, r3, ip
 80098b2:	3801      	subs	r0, #1
 80098b4:	e7a5      	b.n	8009802 <__udivmoddi4+0x1f2>
 80098b6:	4641      	mov	r1, r8
 80098b8:	e7ea      	b.n	8009890 <__udivmoddi4+0x280>
 80098ba:	4603      	mov	r3, r0
 80098bc:	e796      	b.n	80097ec <__udivmoddi4+0x1dc>
 80098be:	4645      	mov	r5, r8
 80098c0:	e7d1      	b.n	8009866 <__udivmoddi4+0x256>
 80098c2:	46d0      	mov	r8, sl
 80098c4:	e77d      	b.n	80097c2 <__udivmoddi4+0x1b2>
 80098c6:	4464      	add	r4, ip
 80098c8:	3802      	subs	r0, #2
 80098ca:	e749      	b.n	8009760 <__udivmoddi4+0x150>
 80098cc:	3d02      	subs	r5, #2
 80098ce:	4462      	add	r2, ip
 80098d0:	e731      	b.n	8009736 <__udivmoddi4+0x126>
 80098d2:	4608      	mov	r0, r1
 80098d4:	e70a      	b.n	80096ec <__udivmoddi4+0xdc>
 80098d6:	4631      	mov	r1, r6
 80098d8:	e6ed      	b.n	80096b6 <__udivmoddi4+0xa6>
 80098da:	bf00      	nop

080098dc <RemoteConfig::HandleList()>:
 80098dc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80098e0:	6801      	ldr	r1, [r0, #0]
 80098e2:	4604      	mov	r4, r0
 80098e4:	2012      	movs	r0, #18
 80098e6:	f04f 080c 	mov.w	r8, #12
 80098ea:	4a29      	ldr	r2, [pc, #164]	; (8009990 <RemoteConfig::HandleList()+0xb4>)
 80098ec:	4b29      	ldr	r3, [pc, #164]	; (8009994 <RemoteConfig::HandleList()+0xb8>)
 80098ee:	fb00 2201 	mla	r2, r0, r1, r2
 80098f2:	6860      	ldr	r0, [r4, #4]
 80098f4:	4928      	ldr	r1, [pc, #160]	; (8009998 <RemoteConfig::HandleList()+0xbc>)
 80098f6:	681b      	ldr	r3, [r3, #0]
 80098f8:	fb08 1100 	mla	r1, r8, r0, r1
 80098fc:	4e27      	ldr	r6, [pc, #156]	; (800999c <RemoteConfig::HandleList()+0xc0>)
 80098fe:	4828      	ldr	r0, [pc, #160]	; (80099a0 <RemoteConfig::HandleList()+0xc4>)
 8009900:	695f      	ldr	r7, [r3, #20]
 8009902:	6835      	ldr	r5, [r6, #0]
 8009904:	f890 9009 	ldrb.w	r9, [r0, #9]
 8009908:	b2fb      	uxtb	r3, r7
 800990a:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 800990e:	f3c7 4e07 	ubfx	lr, r7, #16, #8
 8009912:	f8d4 8008 	ldr.w	r8, [r4, #8]
 8009916:	b089      	sub	sp, #36	; 0x24
 8009918:	3507      	adds	r5, #7
 800991a:	0e3f      	lsrs	r7, r7, #24
 800991c:	f1b9 0f00 	cmp.w	r9, #0
 8009920:	d01d      	beq.n	800995e <RemoteConfig::HandleList()+0x82>
 8009922:	3009      	adds	r0, #9
 8009924:	e9cd 2103 	strd	r2, r1, [sp, #12]
 8009928:	e9cd 8005 	strd	r8, r0, [sp, #20]
 800992c:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 8009930:	4628      	mov	r0, r5
 8009932:	e9cd e701 	strd	lr, r7, [sp, #4]
 8009936:	4a1b      	ldr	r2, [pc, #108]	; (80099a4 <RemoteConfig::HandleList()+0xc8>)
 8009938:	f8cd c000 	str.w	ip, [sp]
 800993c:	f7ff fe40 	bl	80095c0 <snprintf>
 8009940:	69e3      	ldr	r3, [r4, #28]
 8009942:	2b05      	cmp	r3, #5
 8009944:	d118      	bne.n	8009978 <RemoteConfig::HandleList()+0x9c>
 8009946:	f642 1305 	movw	r3, #10501	; 0x2905
 800994a:	9300      	str	r3, [sp, #0]
 800994c:	69a3      	ldr	r3, [r4, #24]
 800994e:	b282      	uxth	r2, r0
 8009950:	4629      	mov	r1, r5
 8009952:	7d20      	ldrb	r0, [r4, #20]
 8009954:	f005 fe12 	bl	800f57c <udp_send>
 8009958:	b009      	add	sp, #36	; 0x24
 800995a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800995e:	e9cd 1804 	strd	r1, r8, [sp, #16]
 8009962:	e9cd 7202 	strd	r7, r2, [sp, #8]
 8009966:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 800996a:	4628      	mov	r0, r5
 800996c:	e9cd ce00 	strd	ip, lr, [sp]
 8009970:	4a0d      	ldr	r2, [pc, #52]	; (80099a8 <RemoteConfig::HandleList()+0xcc>)
 8009972:	f7ff fe25 	bl	80095c0 <snprintf>
 8009976:	e7e3      	b.n	8009940 <RemoteConfig::HandleList()+0x64>
 8009978:	2b06      	cmp	r3, #6
 800997a:	d1ed      	bne.n	8009958 <RemoteConfig::HandleList()+0x7c>
 800997c:	6833      	ldr	r3, [r6, #0]
 800997e:	799b      	ldrb	r3, [r3, #6]
 8009980:	2b2a      	cmp	r3, #42	; 0x2a
 8009982:	d1e9      	bne.n	8009958 <RemoteConfig::HandleList()+0x7c>
 8009984:	f642 1305 	movw	r3, #10501	; 0x2905
 8009988:	9300      	str	r3, [sp, #0]
 800998a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800998e:	e7de      	b.n	800994e <RemoteConfig::HandleList()+0x72>
 8009990:	08014e50 	stmdaeq	r1, {r4, r6, r9, sl, fp, lr}
 8009994:	2001a288 	andcs	sl, r1, r8, lsl #5
 8009998:	08014f16 	stmdaeq	r1, {r1, r2, r4, r8, r9, sl, fp, lr}
 800999c:	200000ec 	andcs	r0, r0, ip, ror #1
 80099a0:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 80099a4:	08014d65 	stmdaeq	r1, {r0, r2, r5, r6, r8, sl, fp, lr}
 80099a8:	08014d7e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r8, sl, fp, lr}

080099ac <RemoteConfig::HandleDisplayGet()>:
 80099ac:	69c3      	ldr	r3, [r0, #28]
 80099ae:	2b08      	cmp	r3, #8
 80099b0:	d11b      	bne.n	80099ea <RemoteConfig::HandleDisplayGet()+0x3e>
 80099b2:	4b0e      	ldr	r3, [pc, #56]	; (80099ec <RemoteConfig::HandleDisplayGet()+0x40>)
 80099b4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80099b6:	681b      	ldr	r3, [r3, #0]
 80099b8:	4d0d      	ldr	r5, [pc, #52]	; (80099f0 <RemoteConfig::HandleDisplayGet()+0x44>)
 80099ba:	7c19      	ldrb	r1, [r3, #16]
 80099bc:	4a0d      	ldr	r2, [pc, #52]	; (80099f4 <RemoteConfig::HandleDisplayGet()+0x48>)
 80099be:	4b0e      	ldr	r3, [pc, #56]	; (80099f8 <RemoteConfig::HandleDisplayGet()+0x4c>)
 80099c0:	4604      	mov	r4, r0
 80099c2:	2900      	cmp	r1, #0
 80099c4:	bf18      	it	ne
 80099c6:	4613      	movne	r3, r2
 80099c8:	6828      	ldr	r0, [r5, #0]
 80099ca:	f240 31ff 	movw	r1, #1023	; 0x3ff
 80099ce:	4a0b      	ldr	r2, [pc, #44]	; (80099fc <RemoteConfig::HandleDisplayGet()+0x50>)
 80099d0:	f7ff fdf6 	bl	80095c0 <snprintf>
 80099d4:	f642 1305 	movw	r3, #10501	; 0x2905
 80099d8:	9300      	str	r3, [sp, #0]
 80099da:	b282      	uxth	r2, r0
 80099dc:	69a3      	ldr	r3, [r4, #24]
 80099de:	6829      	ldr	r1, [r5, #0]
 80099e0:	7d20      	ldrb	r0, [r4, #20]
 80099e2:	f005 fdcb 	bl	800f57c <udp_send>
 80099e6:	b003      	add	sp, #12
 80099e8:	bd30      	pop	{r4, r5, pc}
 80099ea:	4770      	bx	lr
 80099ec:	2001a860 	andcs	sl, r1, r0, ror #16
 80099f0:	200000ec 	andcs	r0, r0, ip, ror #1
 80099f4:	08014d97 	stmdaeq	r1, {r0, r1, r2, r4, r7, r8, sl, fp, lr}
 80099f8:	08014d94 	stmdaeq	r1, {r2, r4, r7, r8, sl, fp, lr}
 80099fc:	08014d9b 	stmdaeq	r1, {r0, r1, r3, r4, r7, r8, sl, fp, lr}

08009a00 <RemoteConfig::HandleTftpGet()>:
 8009a00:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009a02:	4604      	mov	r4, r0
 8009a04:	f000 fd4a 	bl	800a49c <RemoteConfig::PlatformHandleTftpGet()>
 8009a08:	69e3      	ldr	r3, [r4, #28]
 8009a0a:	2b05      	cmp	r3, #5
 8009a0c:	d116      	bne.n	8009a3c <RemoteConfig::HandleTftpGet()+0x3c>
 8009a0e:	f894 1020 	ldrb.w	r1, [r4, #32]
 8009a12:	4d0b      	ldr	r5, [pc, #44]	; (8009a40 <RemoteConfig::HandleTftpGet()+0x40>)
 8009a14:	4a0b      	ldr	r2, [pc, #44]	; (8009a44 <RemoteConfig::HandleTftpGet()+0x44>)
 8009a16:	4b0c      	ldr	r3, [pc, #48]	; (8009a48 <RemoteConfig::HandleTftpGet()+0x48>)
 8009a18:	6828      	ldr	r0, [r5, #0]
 8009a1a:	2900      	cmp	r1, #0
 8009a1c:	bf08      	it	eq
 8009a1e:	4613      	moveq	r3, r2
 8009a20:	f240 31ff 	movw	r1, #1023	; 0x3ff
 8009a24:	4a09      	ldr	r2, [pc, #36]	; (8009a4c <RemoteConfig::HandleTftpGet()+0x4c>)
 8009a26:	f7ff fdcb 	bl	80095c0 <snprintf>
 8009a2a:	f642 1305 	movw	r3, #10501	; 0x2905
 8009a2e:	b282      	uxth	r2, r0
 8009a30:	9300      	str	r3, [sp, #0]
 8009a32:	6829      	ldr	r1, [r5, #0]
 8009a34:	69a3      	ldr	r3, [r4, #24]
 8009a36:	7d20      	ldrb	r0, [r4, #20]
 8009a38:	f005 fda0 	bl	800f57c <udp_send>
 8009a3c:	b003      	add	sp, #12
 8009a3e:	bd30      	pop	{r4, r5, pc}
 8009a40:	200000ec 	andcs	r0, r0, ip, ror #1
 8009a44:	08014d97 	stmdaeq	r1, {r0, r1, r2, r4, r7, r8, sl, fp, lr}
 8009a48:	08014d94 	stmdaeq	r1, {r2, r4, r7, r8, sl, fp, lr}
 8009a4c:	08014da7 	stmdaeq	r1, {r0, r1, r2, r5, r7, r8, sl, fp, lr}

08009a50 <RemoteConfig::HandleVersion()>:
 8009a50:	69c3      	ldr	r3, [r0, #28]
 8009a52:	2b08      	cmp	r3, #8
 8009a54:	d114      	bne.n	8009a80 <RemoteConfig::HandleVersion()+0x30>
 8009a56:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009a58:	4d0a      	ldr	r5, [pc, #40]	; (8009a84 <RemoteConfig::HandleVersion()+0x34>)
 8009a5a:	4604      	mov	r4, r0
 8009a5c:	f240 31ff 	movw	r1, #1023	; 0x3ff
 8009a60:	4b09      	ldr	r3, [pc, #36]	; (8009a88 <RemoteConfig::HandleVersion()+0x38>)
 8009a62:	4a0a      	ldr	r2, [pc, #40]	; (8009a8c <RemoteConfig::HandleVersion()+0x3c>)
 8009a64:	6828      	ldr	r0, [r5, #0]
 8009a66:	f7ff fdab 	bl	80095c0 <snprintf>
 8009a6a:	f642 1305 	movw	r3, #10501	; 0x2905
 8009a6e:	9300      	str	r3, [sp, #0]
 8009a70:	b282      	uxth	r2, r0
 8009a72:	69a3      	ldr	r3, [r4, #24]
 8009a74:	6829      	ldr	r1, [r5, #0]
 8009a76:	7d20      	ldrb	r0, [r4, #20]
 8009a78:	f005 fd80 	bl	800f57c <udp_send>
 8009a7c:	b003      	add	sp, #12
 8009a7e:	bd30      	pop	{r4, r5, pc}
 8009a80:	4770      	bx	lr
 8009a82:	bf00      	nop
 8009a84:	200000ec 	andcs	r0, r0, ip, ror #1
 8009a88:	2001a906 	andcs	sl, r1, r6, lsl #18
 8009a8c:	08014db0 	stmdaeq	r1, {r4, r5, r7, r8, sl, fp, lr}

08009a90 <RemoteConfig::HandleUptime()>:
 8009a90:	7bc3      	ldrb	r3, [r0, #15]
 8009a92:	b1e3      	cbz	r3, 8009ace <RemoteConfig::HandleUptime()+0x3e>
 8009a94:	4b0e      	ldr	r3, [pc, #56]	; (8009ad0 <RemoteConfig::HandleUptime()+0x40>)
 8009a96:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009a98:	681a      	ldr	r2, [r3, #0]
 8009a9a:	69c3      	ldr	r3, [r0, #28]
 8009a9c:	4604      	mov	r4, r0
 8009a9e:	2b07      	cmp	r3, #7
 8009aa0:	d113      	bne.n	8009aca <RemoteConfig::HandleUptime()+0x3a>
 8009aa2:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8009aa6:	4d0b      	ldr	r5, [pc, #44]	; (8009ad4 <RemoteConfig::HandleUptime()+0x44>)
 8009aa8:	fbb2 f3f3 	udiv	r3, r2, r3
 8009aac:	f240 31ff 	movw	r1, #1023	; 0x3ff
 8009ab0:	4a09      	ldr	r2, [pc, #36]	; (8009ad8 <RemoteConfig::HandleUptime()+0x48>)
 8009ab2:	6828      	ldr	r0, [r5, #0]
 8009ab4:	f7ff fd84 	bl	80095c0 <snprintf>
 8009ab8:	f642 1305 	movw	r3, #10501	; 0x2905
 8009abc:	9300      	str	r3, [sp, #0]
 8009abe:	b282      	uxth	r2, r0
 8009ac0:	69a3      	ldr	r3, [r4, #24]
 8009ac2:	6829      	ldr	r1, [r5, #0]
 8009ac4:	7d20      	ldrb	r0, [r4, #20]
 8009ac6:	f005 fd59 	bl	800f57c <udp_send>
 8009aca:	b003      	add	sp, #12
 8009acc:	bd30      	pop	{r4, r5, pc}
 8009ace:	4770      	bx	lr
 8009ad0:	2001a964 	andcs	sl, r1, r4, ror #18
 8009ad4:	200000ec 	andcs	r0, r0, ip, ror #1
 8009ad8:	08014dbb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r7, r8, sl, fp, lr}

08009adc <Display::Status(Display7SegmentMessage)>:
 8009adc:	7c43      	ldrb	r3, [r0, #17]
 8009ade:	b1bb      	cbz	r3, 8009b10 <Display::Status(Display7SegmentMessage)+0x34>
 8009ae0:	b513      	push	{r0, r1, r4, lr}
 8009ae2:	2312      	movs	r3, #18
 8009ae4:	43c9      	mvns	r1, r1
 8009ae6:	4604      	mov	r4, r0
 8009ae8:	f88d 3004 	strb.w	r3, [sp, #4]
 8009aec:	7a00      	ldrb	r0, [r0, #8]
 8009aee:	f3c1 2307 	ubfx	r3, r1, #8, #8
 8009af2:	f88d 3005 	strb.w	r3, [sp, #5]
 8009af6:	f88d 1006 	strb.w	r1, [sp, #6]
 8009afa:	f009 ff17 	bl	801392c <gd32_i2c_set_address>
 8009afe:	68e0      	ldr	r0, [r4, #12]
 8009b00:	f009 ff0c 	bl	801391c <gd32_i2c_set_baudrate>
 8009b04:	2103      	movs	r1, #3
 8009b06:	a801      	add	r0, sp, #4
 8009b08:	f009 ff16 	bl	8013938 <gd32_i2c_write>
 8009b0c:	b002      	add	sp, #8
 8009b0e:	bd10      	pop	{r4, pc}
 8009b10:	4770      	bx	lr
	...

08009b14 <RemoteConfig::HandleDisplaySet()>:
 8009b14:	b508      	push	{r3, lr}
 8009b16:	69c3      	ldr	r3, [r0, #28]
 8009b18:	2b09      	cmp	r3, #9
 8009b1a:	d10a      	bne.n	8009b32 <RemoteConfig::HandleDisplaySet()+0x1e>
 8009b1c:	4b05      	ldr	r3, [pc, #20]	; (8009b34 <RemoteConfig::HandleDisplaySet()+0x20>)
 8009b1e:	681b      	ldr	r3, [r3, #0]
 8009b20:	7a59      	ldrb	r1, [r3, #9]
 8009b22:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
 8009b26:	4259      	negs	r1, r3
 8009b28:	4159      	adcs	r1, r3
 8009b2a:	4b03      	ldr	r3, [pc, #12]	; (8009b38 <RemoteConfig::HandleDisplaySet()+0x24>)
 8009b2c:	6818      	ldr	r0, [r3, #0]
 8009b2e:	f7fe fe89 	bl	8008844 <Display::SetSleep(bool)>
 8009b32:	bd08      	pop	{r3, pc}
 8009b34:	200000ec 	andcs	r0, r0, ip, ror #1
 8009b38:	2001a860 	andcs	sl, r1, r0, ror #16

08009b3c <RemoteConfig::HandleTftpSet()>:
 8009b3c:	69c3      	ldr	r3, [r0, #28]
 8009b3e:	2b06      	cmp	r3, #6
 8009b40:	d127      	bne.n	8009b92 <RemoteConfig::HandleTftpSet()+0x56>
 8009b42:	b570      	push	{r4, r5, r6, lr}
 8009b44:	4b13      	ldr	r3, [pc, #76]	; (8009b94 <RemoteConfig::HandleTftpSet()+0x58>)
 8009b46:	4e14      	ldr	r6, [pc, #80]	; (8009b98 <RemoteConfig::HandleTftpSet()+0x5c>)
 8009b48:	681b      	ldr	r3, [r3, #0]
 8009b4a:	4604      	mov	r4, r0
 8009b4c:	799b      	ldrb	r3, [r3, #6]
 8009b4e:	6835      	ldr	r5, [r6, #0]
 8009b50:	2b30      	cmp	r3, #48	; 0x30
 8009b52:	bf14      	ite	ne
 8009b54:	2301      	movne	r3, #1
 8009b56:	2300      	moveq	r3, #0
 8009b58:	f880 3020 	strb.w	r3, [r0, #32]
 8009b5c:	d012      	beq.n	8009b84 <RemoteConfig::HandleTftpSet()+0x48>
 8009b5e:	4628      	mov	r0, r5
 8009b60:	2100      	movs	r1, #0
 8009b62:	f7fe fe6f 	bl	8008844 <Display::SetSleep(bool)>
 8009b66:	6835      	ldr	r5, [r6, #0]
 8009b68:	490c      	ldr	r1, [pc, #48]	; (8009b9c <RemoteConfig::HandleTftpSet()+0x60>)
 8009b6a:	4628      	mov	r0, r5
 8009b6c:	f7fe fe0c 	bl	8008788 <Display::TextStatus(char const*)>
 8009b70:	f244 0171 	movw	r1, #16497	; 0x4071
 8009b74:	4628      	mov	r0, r5
 8009b76:	f7ff ffb1 	bl	8009adc <Display::Status(Display7SegmentMessage)>
 8009b7a:	4620      	mov	r0, r4
 8009b7c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009b80:	f000 bc84 	b.w	800a48c <RemoteConfig::PlatformHandleTftpSet()>
 8009b84:	4906      	ldr	r1, [pc, #24]	; (8009ba0 <RemoteConfig::HandleTftpSet()+0x64>)
 8009b86:	4628      	mov	r0, r5
 8009b88:	f7fe fdfe 	bl	8008788 <Display::TextStatus(char const*)>
 8009b8c:	f248 0171 	movw	r1, #32881	; 0x8071
 8009b90:	e7f0      	b.n	8009b74 <RemoteConfig::HandleTftpSet()+0x38>
 8009b92:	4770      	bx	lr
 8009b94:	200000ec 	andcs	r0, r0, ip, ror #1
 8009b98:	2001a860 	andcs	sl, r1, r0, ror #16
 8009b9c:	08014dc8 	stmdaeq	r1, {r3, r6, r7, r8, sl, fp, lr}
 8009ba0:	08014dda 	stmdaeq	r1, {r1, r3, r4, r6, r7, r8, sl, fp, lr}

08009ba4 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>:
 8009ba4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009ba8:	2500      	movs	r5, #0
 8009baa:	461f      	mov	r7, r3
 8009bac:	6083      	str	r3, [r0, #8]
 8009bae:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8009bb2:	4690      	mov	r8, r2
 8009bb4:	4689      	mov	r9, r1
 8009bb6:	4e12      	ldr	r6, [pc, #72]	; (8009c00 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x5c>)
 8009bb8:	e9c0 3505 	strd	r3, r5, [r0, #20]
 8009bbc:	f8df a044 	ldr.w	sl, [pc, #68]	; 8009c04 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x60>
 8009bc0:	4b11      	ldr	r3, [pc, #68]	; (8009c08 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x64>)
 8009bc2:	e9c0 1200 	strd	r1, r2, [r0]
 8009bc6:	4604      	mov	r4, r0
 8009bc8:	6018      	str	r0, [r3, #0]
 8009bca:	4631      	mov	r1, r6
 8009bcc:	60c5      	str	r5, [r0, #12]
 8009bce:	8205      	strh	r5, [r0, #16]
 8009bd0:	61c5      	str	r5, [r0, #28]
 8009bd2:	f880 5020 	strb.w	r5, [r0, #32]
 8009bd6:	f8da 0000 	ldr.w	r0, [sl]
 8009bda:	f006 f99d 	bl	800ff18 <Network::MacAddressCopyTo(unsigned char*)>
 8009bde:	f642 1105 	movw	r1, #10501	; 0x2905
 8009be2:	f8da 0000 	ldr.w	r0, [sl]
 8009be6:	f886 9006 	strb.w	r9, [r6, #6]
 8009bea:	f886 8007 	strb.w	r8, [r6, #7]
 8009bee:	7237      	strb	r7, [r6, #8]
 8009bf0:	7275      	strb	r5, [r6, #9]
 8009bf2:	f006 f98b 	bl	800ff0c <Network::Begin(unsigned short)>
 8009bf6:	6160      	str	r0, [r4, #20]
 8009bf8:	4620      	mov	r0, r4
 8009bfa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009bfe:	bf00      	nop
 8009c00:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 8009c04:	2001a288 	andcs	sl, r1, r8, lsl #5
 8009c08:	20000114 	andcs	r0, r0, r4, lsl r1

08009c0c <RemoteConfig::GetStringNode() const>:
 8009c0c:	2012      	movs	r0, #18
 8009c0e:	4b03      	ldr	r3, [pc, #12]	; (8009c1c <RemoteConfig::GetStringNode() const+0x10>)
 8009c10:	799a      	ldrb	r2, [r3, #6]
 8009c12:	4b03      	ldr	r3, [pc, #12]	; (8009c20 <RemoteConfig::GetStringNode() const+0x14>)
 8009c14:	fb00 3002 	mla	r0, r0, r2, r3
 8009c18:	4770      	bx	lr
 8009c1a:	bf00      	nop
 8009c1c:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 8009c20:	08014e50 	stmdaeq	r1, {r4, r6, r9, sl, fp, lr}

08009c24 <RemoteConfig::GetStringOutput() const>:
 8009c24:	200c      	movs	r0, #12
 8009c26:	4b03      	ldr	r3, [pc, #12]	; (8009c34 <RemoteConfig::GetStringOutput() const+0x10>)
 8009c28:	79da      	ldrb	r2, [r3, #7]
 8009c2a:	4b03      	ldr	r3, [pc, #12]	; (8009c38 <RemoteConfig::GetStringOutput() const+0x14>)
 8009c2c:	fb00 3002 	mla	r0, r0, r2, r3
 8009c30:	4770      	bx	lr
 8009c32:	bf00      	nop
 8009c34:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 8009c38:	08014f16 	stmdaeq	r1, {r1, r2, r4, r8, r9, sl, fp, lr}

08009c3c <RemoteConfig::SetDisable(bool)>:
 8009c3c:	b538      	push	{r3, r4, r5, lr}
 8009c3e:	4604      	mov	r4, r0
 8009c40:	7b03      	ldrb	r3, [r0, #12]
 8009c42:	b161      	cbz	r1, 8009c5e <RemoteConfig::SetDisable(bool)+0x22>
 8009c44:	b953      	cbnz	r3, 8009c5c <RemoteConfig::SetDisable(bool)+0x20>
 8009c46:	4b0c      	ldr	r3, [pc, #48]	; (8009c78 <RemoteConfig::SetDisable(bool)+0x3c>)
 8009c48:	f642 1105 	movw	r1, #10501	; 0x2905
 8009c4c:	6818      	ldr	r0, [r3, #0]
 8009c4e:	f006 f960 	bl	800ff12 <Network::End(unsigned short)>
 8009c52:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8009c56:	6163      	str	r3, [r4, #20]
 8009c58:	2301      	movs	r3, #1
 8009c5a:	7323      	strb	r3, [r4, #12]
 8009c5c:	bd38      	pop	{r3, r4, r5, pc}
 8009c5e:	2b00      	cmp	r3, #0
 8009c60:	d0fc      	beq.n	8009c5c <RemoteConfig::SetDisable(bool)+0x20>
 8009c62:	4b05      	ldr	r3, [pc, #20]	; (8009c78 <RemoteConfig::SetDisable(bool)+0x3c>)
 8009c64:	460d      	mov	r5, r1
 8009c66:	6818      	ldr	r0, [r3, #0]
 8009c68:	f642 1105 	movw	r1, #10501	; 0x2905
 8009c6c:	f006 f94e 	bl	800ff0c <Network::Begin(unsigned short)>
 8009c70:	7325      	strb	r5, [r4, #12]
 8009c72:	6160      	str	r0, [r4, #20]
 8009c74:	e7f2      	b.n	8009c5c <RemoteConfig::SetDisable(bool)+0x20>
 8009c76:	bf00      	nop
 8009c78:	2001a288 	andcs	sl, r1, r8, lsl #5

08009c7c <RemoteConfig::SetDisplayName(char const*)>:
 8009c7c:	2217      	movs	r2, #23
 8009c7e:	4809      	ldr	r0, [pc, #36]	; (8009ca4 <RemoteConfig::SetDisplayName(char const*)+0x28>)
 8009c80:	b508      	push	{r3, lr}
 8009c82:	1e4b      	subs	r3, r1, #1
 8009c84:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8009c88:	b911      	cbnz	r1, 8009c90 <RemoteConfig::SetDisplayName(char const*)+0x14>
 8009c8a:	f008 fd3b 	bl	8012704 <memset>
 8009c8e:	e003      	b.n	8009c98 <RemoteConfig::SetDisplayName(char const*)+0x1c>
 8009c90:	3a01      	subs	r2, #1
 8009c92:	f800 1b01 	strb.w	r1, [r0], #1
 8009c96:	d1f5      	bne.n	8009c84 <RemoteConfig::SetDisplayName(char const*)+0x8>
 8009c98:	2200      	movs	r2, #0
 8009c9a:	4b03      	ldr	r3, [pc, #12]	; (8009ca8 <RemoteConfig::SetDisplayName(char const*)+0x2c>)
 8009c9c:	f883 2020 	strb.w	r2, [r3, #32]
 8009ca0:	bd08      	pop	{r3, pc}
 8009ca2:	bf00      	nop
 8009ca4:	200000f9 	strdcs	r0, [r0], -r9
 8009ca8:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>

08009cac <RemoteConfig::HandleGet(void*, unsigned int)>:
 8009cac:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009cae:	4604      	mov	r4, r0
 8009cb0:	4616      	mov	r6, r2
 8009cb2:	460d      	mov	r5, r1
 8009cb4:	4f28      	ldr	r7, [pc, #160]	; (8009d58 <RemoteConfig::HandleGet(void*, unsigned int)+0xac>)
 8009cb6:	b085      	sub	sp, #20
 8009cb8:	b9a9      	cbnz	r1, 8009ce6 <RemoteConfig::HandleGet(void*, unsigned int)+0x3a>
 8009cba:	f44f 737f 	mov.w	r3, #1020	; 0x3fc
 8009cbe:	6839      	ldr	r1, [r7, #0]
 8009cc0:	aa03      	add	r2, sp, #12
 8009cc2:	3105      	adds	r1, #5
 8009cc4:	9303      	str	r3, [sp, #12]
 8009cc6:	f000 fbb7 	bl	800a438 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 8009cca:	1e03      	subs	r3, r0, #0
 8009ccc:	da1b      	bge.n	8009d06 <RemoteConfig::HandleGet(void*, unsigned int)+0x5a>
 8009cce:	f642 1305 	movw	r3, #10501	; 0x2905
 8009cd2:	220b      	movs	r2, #11
 8009cd4:	9300      	str	r3, [sp, #0]
 8009cd6:	4921      	ldr	r1, [pc, #132]	; (8009d5c <RemoteConfig::HandleGet(void*, unsigned int)+0xb0>)
 8009cd8:	69a3      	ldr	r3, [r4, #24]
 8009cda:	7d20      	ldrb	r0, [r4, #20]
 8009cdc:	f005 fc4e 	bl	800f57c <udp_send>
 8009ce0:	200c      	movs	r0, #12
 8009ce2:	b005      	add	sp, #20
 8009ce4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009ce6:	9203      	str	r2, [sp, #12]
 8009ce8:	aa03      	add	r2, sp, #12
 8009cea:	6039      	str	r1, [r7, #0]
 8009cec:	f000 fba4 	bl	800a438 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 8009cf0:	1e03      	subs	r3, r0, #0
 8009cf2:	da08      	bge.n	8009d06 <RemoteConfig::HandleGet(void*, unsigned int)+0x5a>
 8009cf4:	2e0b      	cmp	r6, #11
 8009cf6:	4632      	mov	r2, r6
 8009cf8:	4628      	mov	r0, r5
 8009cfa:	bf28      	it	cs
 8009cfc:	220b      	movcs	r2, #11
 8009cfe:	4917      	ldr	r1, [pc, #92]	; (8009d5c <RemoteConfig::HandleGet(void*, unsigned int)+0xb0>)
 8009d00:	f008 fcde 	bl	80126c0 <memcpy>
 8009d04:	e7ec      	b.n	8009ce0 <RemoteConfig::HandleGet(void*, unsigned int)+0x34>
 8009d06:	221c      	movs	r2, #28
 8009d08:	4353      	muls	r3, r2
 8009d0a:	4915      	ldr	r1, [pc, #84]	; (8009d60 <RemoteConfig::HandleGet(void*, unsigned int)+0xb4>)
 8009d0c:	18ca      	adds	r2, r1, r3
 8009d0e:	6852      	ldr	r2, [r2, #4]
 8009d10:	58cb      	ldr	r3, [r1, r3]
 8009d12:	ea4f 0c62 	mov.w	ip, r2, asr #1
 8009d16:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8009d1a:	07d2      	lsls	r2, r2, #31
 8009d1c:	bf48      	it	mi
 8009d1e:	f854 200c 	ldrmi.w	r2, [r4, ip]
 8009d22:	a903      	add	r1, sp, #12
 8009d24:	bf48      	it	mi
 8009d26:	58d3      	ldrmi	r3, [r2, r3]
 8009d28:	4798      	blx	r3
 8009d2a:	b95d      	cbnz	r5, 8009d44 <RemoteConfig::HandleGet(void*, unsigned int)+0x98>
 8009d2c:	f642 1305 	movw	r3, #10501	; 0x2905
 8009d30:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8009d34:	9300      	str	r3, [sp, #0]
 8009d36:	6839      	ldr	r1, [r7, #0]
 8009d38:	69a3      	ldr	r3, [r4, #24]
 8009d3a:	7d20      	ldrb	r0, [r4, #20]
 8009d3c:	f005 fc1e 	bl	800f57c <udp_send>
 8009d40:	9803      	ldr	r0, [sp, #12]
 8009d42:	e7ce      	b.n	8009ce2 <RemoteConfig::HandleGet(void*, unsigned int)+0x36>
 8009d44:	9a03      	ldr	r2, [sp, #12]
 8009d46:	4628      	mov	r0, r5
 8009d48:	42b2      	cmp	r2, r6
 8009d4a:	bf28      	it	cs
 8009d4c:	4632      	movcs	r2, r6
 8009d4e:	6839      	ldr	r1, [r7, #0]
 8009d50:	f008 fcc1 	bl	80126d6 <memmove>
 8009d54:	e7f4      	b.n	8009d40 <RemoteConfig::HandleGet(void*, unsigned int)+0x94>
 8009d56:	bf00      	nop
 8009d58:	200000ec 	andcs	r0, r0, ip, ror #1
 8009d5c:	08014ded 	stmdaeq	r1, {r0, r2, r3, r5, r6, r7, r8, sl, fp, lr}
 8009d60:	080150cc 	stmdaeq	r1, {r2, r3, r6, r7, ip, lr}

08009d64 <RemoteConfig::HandleGetNoParams()>:
 8009d64:	2200      	movs	r2, #0
 8009d66:	4611      	mov	r1, r2
 8009d68:	f7ff bfa0 	b.w	8009cac <RemoteConfig::HandleGet(void*, unsigned int)>

08009d6c <RemoteConfig::HandleGetRconfigTxt(unsigned int&)>:
 8009d6c:	b510      	push	{r4, lr}
 8009d6e:	460c      	mov	r4, r1
 8009d70:	4b07      	ldr	r3, [pc, #28]	; (8009d90 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x24>)
 8009d72:	b08a      	sub	sp, #40	; 0x28
 8009d74:	6819      	ldr	r1, [r3, #0]
 8009d76:	a801      	add	r0, sp, #4
 8009d78:	f000 f9ba 	bl	800a0f0 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 8009d7c:	4905      	ldr	r1, [pc, #20]	; (8009d94 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x28>)
 8009d7e:	4623      	mov	r3, r4
 8009d80:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8009d84:	6809      	ldr	r1, [r1, #0]
 8009d86:	a801      	add	r0, sp, #4
 8009d88:	f000 fad6 	bl	800a338 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>
 8009d8c:	b00a      	add	sp, #40	; 0x28
 8009d8e:	bd10      	pop	{r4, pc}
 8009d90:	20012998 	mulcs	r1, r8, r9
 8009d94:	200000ec 	andcs	r0, r0, ip, ror #1

08009d98 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)>:
 8009d98:	b510      	push	{r4, lr}
 8009d9a:	460c      	mov	r4, r1
 8009d9c:	4b07      	ldr	r3, [pc, #28]	; (8009dbc <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x24>)
 8009d9e:	b09a      	sub	sp, #104	; 0x68
 8009da0:	6819      	ldr	r1, [r3, #0]
 8009da2:	a801      	add	r0, sp, #4
 8009da4:	f006 fbc8 	bl	8010538 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 8009da8:	4905      	ldr	r1, [pc, #20]	; (8009dc0 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x28>)
 8009daa:	4623      	mov	r3, r4
 8009dac:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8009db0:	6809      	ldr	r1, [r1, #0]
 8009db2:	a801      	add	r0, sp, #4
 8009db4:	f006 fd96 	bl	80108e4 <NetworkParams::Save(char*, unsigned int, unsigned int&)>
 8009db8:	b01a      	add	sp, #104	; 0x68
 8009dba:	bd10      	pop	{r4, pc}
 8009dbc:	20012990 	mulcs	r1, r0, r9
 8009dc0:	200000ec 	andcs	r0, r0, ip, ror #1

08009dc4 <RemoteConfig::HandleGetDevicesTxt(unsigned int&)>:
 8009dc4:	b510      	push	{r4, lr}
 8009dc6:	460c      	mov	r4, r1
 8009dc8:	4b07      	ldr	r3, [pc, #28]	; (8009de8 <RemoteConfig::HandleGetDevicesTxt(unsigned int&)+0x24>)
 8009dca:	b08c      	sub	sp, #48	; 0x30
 8009dcc:	6819      	ldr	r1, [r3, #0]
 8009dce:	a801      	add	r0, sp, #4
 8009dd0:	f002 fd9a 	bl	800c908 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)>
 8009dd4:	4905      	ldr	r1, [pc, #20]	; (8009dec <RemoteConfig::HandleGetDevicesTxt(unsigned int&)+0x28>)
 8009dd6:	4623      	mov	r3, r4
 8009dd8:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8009ddc:	6809      	ldr	r1, [r1, #0]
 8009dde:	a801      	add	r0, sp, #4
 8009de0:	f003 f8b6 	bl	800cf50 <PixelDmxParams::Save(char*, unsigned int, unsigned int&)>
 8009de4:	b00c      	add	sp, #48	; 0x30
 8009de6:	bd10      	pop	{r4, pc}
 8009de8:	2001299c 	mulcs	r1, ip, r9
 8009dec:	200000ec 	andcs	r0, r0, ip, ror #1

08009df0 <RemoteConfig::HandleGetDisplayTxt(unsigned int&)>:
 8009df0:	b510      	push	{r4, lr}
 8009df2:	460c      	mov	r4, r1
 8009df4:	4b07      	ldr	r3, [pc, #28]	; (8009e14 <RemoteConfig::HandleGetDisplayTxt(unsigned int&)+0x24>)
 8009df6:	b08a      	sub	sp, #40	; 0x28
 8009df8:	6819      	ldr	r1, [r3, #0]
 8009dfa:	4668      	mov	r0, sp
 8009dfc:	f007 fb08 	bl	8011410 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 8009e00:	4905      	ldr	r1, [pc, #20]	; (8009e18 <RemoteConfig::HandleGetDisplayTxt(unsigned int&)+0x28>)
 8009e02:	4623      	mov	r3, r4
 8009e04:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8009e08:	4668      	mov	r0, sp
 8009e0a:	6809      	ldr	r1, [r1, #0]
 8009e0c:	f007 fc38 	bl	8011680 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)>
 8009e10:	b00a      	add	sp, #40	; 0x28
 8009e12:	bd10      	pop	{r4, pc}
 8009e14:	2001298c 	andcs	r2, r1, ip, lsl #19
 8009e18:	200000ec 	andcs	r0, r0, ip, ror #1

08009e1c <RemoteConfig::HandleSet(void*, unsigned int)>:
 8009e1c:	b530      	push	{r4, r5, lr}
 8009e1e:	b085      	sub	sp, #20
 8009e20:	4604      	mov	r4, r0
 8009e22:	9201      	str	r2, [sp, #4]
 8009e24:	b9d1      	cbnz	r1, 8009e5c <RemoteConfig::HandleSet(void*, unsigned int)+0x40>
 8009e26:	f240 33ff 	movw	r3, #1023	; 0x3ff
 8009e2a:	9303      	str	r3, [sp, #12]
 8009e2c:	4b19      	ldr	r3, [pc, #100]	; (8009e94 <RemoteConfig::HandleSet(void*, unsigned int)+0x78>)
 8009e2e:	aa03      	add	r2, sp, #12
 8009e30:	6819      	ldr	r1, [r3, #0]
 8009e32:	3101      	adds	r1, #1
 8009e34:	f000 fb00 	bl	800a438 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 8009e38:	2800      	cmp	r0, #0
 8009e3a:	db0d      	blt.n	8009e58 <RemoteConfig::HandleSet(void*, unsigned int)+0x3c>
 8009e3c:	221c      	movs	r2, #28
 8009e3e:	4b16      	ldr	r3, [pc, #88]	; (8009e98 <RemoteConfig::HandleSet(void*, unsigned int)+0x7c>)
 8009e40:	fb02 3300 	mla	r3, r2, r0, r3
 8009e44:	68da      	ldr	r2, [r3, #12]
 8009e46:	689b      	ldr	r3, [r3, #8]
 8009e48:	1051      	asrs	r1, r2, #1
 8009e4a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8009e4e:	07d2      	lsls	r2, r2, #31
 8009e50:	bf44      	itt	mi
 8009e52:	5862      	ldrmi	r2, [r4, r1]
 8009e54:	58d3      	ldrmi	r3, [r2, r3]
 8009e56:	4798      	blx	r3
 8009e58:	b005      	add	sp, #20
 8009e5a:	bd30      	pop	{r4, r5, pc}
 8009e5c:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8009e60:	d8fa      	bhi.n	8009e58 <RemoteConfig::HandleSet(void*, unsigned int)+0x3c>
 8009e62:	4b0e      	ldr	r3, [pc, #56]	; (8009e9c <RemoteConfig::HandleSet(void*, unsigned int)+0x80>)
 8009e64:	460d      	mov	r5, r1
 8009e66:	781b      	ldrb	r3, [r3, #0]
 8009e68:	07d9      	lsls	r1, r3, #31
 8009e6a:	d50b      	bpl.n	8009e84 <RemoteConfig::HandleSet(void*, unsigned int)+0x68>
 8009e6c:	782b      	ldrb	r3, [r5, #0]
 8009e6e:	2b7b      	cmp	r3, #123	; 0x7b
 8009e70:	d108      	bne.n	8009e84 <RemoteConfig::HandleSet(void*, unsigned int)+0x68>
 8009e72:	1e51      	subs	r1, r2, #1
 8009e74:	4628      	mov	r0, r5
 8009e76:	2200      	movs	r2, #0
 8009e78:	b289      	uxth	r1, r1
 8009e7a:	f007 fc6d 	bl	8011758 <properties::convert_json_file(char*, unsigned short, bool)>
 8009e7e:	1e02      	subs	r2, r0, #0
 8009e80:	ddea      	ble.n	8009e58 <RemoteConfig::HandleSet(void*, unsigned int)+0x3c>
 8009e82:	b292      	uxth	r2, r2
 8009e84:	4b03      	ldr	r3, [pc, #12]	; (8009e94 <RemoteConfig::HandleSet(void*, unsigned int)+0x78>)
 8009e86:	61e2      	str	r2, [r4, #28]
 8009e88:	4620      	mov	r0, r4
 8009e8a:	601d      	str	r5, [r3, #0]
 8009e8c:	aa01      	add	r2, sp, #4
 8009e8e:	1c69      	adds	r1, r5, #1
 8009e90:	e7d0      	b.n	8009e34 <RemoteConfig::HandleSet(void*, unsigned int)+0x18>
 8009e92:	bf00      	nop
 8009e94:	200000ec 	andcs	r0, r0, ip, ror #1
 8009e98:	080150cc 	stmdaeq	r1, {r2, r3, r6, r7, ip, lr}
 8009e9c:	2001a85c 	andcs	sl, r1, ip, asr r8

08009ea0 <RemoteConfig::Run()>:
 8009ea0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8009ea4:	7b05      	ldrb	r5, [r0, #12]
 8009ea6:	2d00      	cmp	r5, #0
 8009ea8:	d156      	bne.n	8009f58 <RemoteConfig::Run()+0xb8>
 8009eaa:	4e45      	ldr	r6, [pc, #276]	; (8009fc0 <RemoteConfig::Run()+0x120>)
 8009eac:	4604      	mov	r4, r0
 8009eae:	f100 0218 	add.w	r2, r0, #24
 8009eb2:	4631      	mov	r1, r6
 8009eb4:	7d00      	ldrb	r0, [r0, #20]
 8009eb6:	f10d 030e 	add.w	r3, sp, #14
 8009eba:	f005 fb39 	bl	800f530 <udp_recv2>
 8009ebe:	2803      	cmp	r0, #3
 8009ec0:	61e0      	str	r0, [r4, #28]
 8009ec2:	d949      	bls.n	8009f58 <RemoteConfig::Run()+0xb8>
 8009ec4:	6831      	ldr	r1, [r6, #0]
 8009ec6:	1e43      	subs	r3, r0, #1
 8009ec8:	5cca      	ldrb	r2, [r1, r3]
 8009eca:	2a0a      	cmp	r2, #10
 8009ecc:	bf18      	it	ne
 8009ece:	4603      	movne	r3, r0
 8009ed0:	61e3      	str	r3, [r4, #28]
 8009ed2:	7808      	ldrb	r0, [r1, #0]
 8009ed4:	283f      	cmp	r0, #63	; 0x3f
 8009ed6:	d137      	bne.n	8009f48 <RemoteConfig::Run()+0xa8>
 8009ed8:	f8df c0e8 	ldr.w	ip, [pc, #232]	; 8009fc4 <RemoteConfig::Run()+0x124>
 8009edc:	462a      	mov	r2, r5
 8009ede:	4667      	mov	r7, ip
 8009ee0:	3b01      	subs	r3, #1
 8009ee2:	61e3      	str	r3, [r4, #28]
 8009ee4:	f89c 500e 	ldrb.w	r5, [ip, #14]
 8009ee8:	f8bc 000c 	ldrh.w	r0, [ip, #12]
 8009eec:	b16d      	cbz	r5, 8009f0a <RemoteConfig::Run()+0x6a>
 8009eee:	4283      	cmp	r3, r0
 8009ef0:	d80d      	bhi.n	8009f0e <RemoteConfig::Run()+0x6e>
 8009ef2:	3201      	adds	r2, #1
 8009ef4:	2a09      	cmp	r2, #9
 8009ef6:	f10c 0c10 	add.w	ip, ip, #16
 8009efa:	d1f3      	bne.n	8009ee4 <RemoteConfig::Run()+0x44>
 8009efc:	f642 1305 	movw	r3, #10501	; 0x2905
 8009f00:	9300      	str	r3, [sp, #0]
 8009f02:	2208      	movs	r2, #8
 8009f04:	69a3      	ldr	r3, [r4, #24]
 8009f06:	4930      	ldr	r1, [pc, #192]	; (8009fc8 <RemoteConfig::Run()+0x128>)
 8009f08:	e04e      	b.n	8009fa8 <RemoteConfig::Run()+0x108>
 8009f0a:	4283      	cmp	r3, r0
 8009f0c:	d1f1      	bne.n	8009ef2 <RemoteConfig::Run()+0x52>
 8009f0e:	460e      	mov	r6, r1
 8009f10:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8009f14:	4408      	add	r0, r1
 8009f16:	3d01      	subs	r5, #1
 8009f18:	4286      	cmp	r6, r0
 8009f1a:	d10b      	bne.n	8009f34 <RemoteConfig::Run()+0x94>
 8009f1c:	0113      	lsls	r3, r2, #4
 8009f1e:	eb07 1202 	add.w	r2, r7, r2, lsl #4
 8009f22:	6852      	ldr	r2, [r2, #4]
 8009f24:	58fb      	ldr	r3, [r7, r3]
 8009f26:	1051      	asrs	r1, r2, #1
 8009f28:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8009f2c:	07d2      	lsls	r2, r2, #31
 8009f2e:	d408      	bmi.n	8009f42 <RemoteConfig::Run()+0xa2>
 8009f30:	4798      	blx	r3
 8009f32:	e011      	b.n	8009f58 <RemoteConfig::Run()+0xb8>
 8009f34:	f816 8f01 	ldrb.w	r8, [r6, #1]!
 8009f38:	f815 ef01 	ldrb.w	lr, [r5, #1]!
 8009f3c:	45f0      	cmp	r8, lr
 8009f3e:	d0eb      	beq.n	8009f18 <RemoteConfig::Run()+0x78>
 8009f40:	e7d7      	b.n	8009ef2 <RemoteConfig::Run()+0x52>
 8009f42:	5862      	ldr	r2, [r4, r1]
 8009f44:	58d3      	ldr	r3, [r2, r3]
 8009f46:	e7f3      	b.n	8009f30 <RemoteConfig::Run()+0x90>
 8009f48:	7b62      	ldrb	r2, [r4, #13]
 8009f4a:	b92a      	cbnz	r2, 8009f58 <RemoteConfig::Run()+0xb8>
 8009f4c:	2823      	cmp	r0, #35	; 0x23
 8009f4e:	d106      	bne.n	8009f5e <RemoteConfig::Run()+0xbe>
 8009f50:	4611      	mov	r1, r2
 8009f52:	4620      	mov	r0, r4
 8009f54:	f7ff ff62 	bl	8009e1c <RemoteConfig::HandleSet(void*, unsigned int)>
 8009f58:	b004      	add	sp, #16
 8009f5a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009f5e:	2821      	cmp	r0, #33	; 0x21
 8009f60:	d1fa      	bne.n	8009f58 <RemoteConfig::Run()+0xb8>
 8009f62:	3b01      	subs	r3, #1
 8009f64:	2b05      	cmp	r3, #5
 8009f66:	61e3      	str	r3, [r4, #28]
 8009f68:	d918      	bls.n	8009f9c <RemoteConfig::Run()+0xfc>
 8009f6a:	460a      	mov	r2, r1
 8009f6c:	4608      	mov	r0, r1
 8009f6e:	4d17      	ldr	r5, [pc, #92]	; (8009fcc <RemoteConfig::Run()+0x12c>)
 8009f70:	f101 0c05 	add.w	ip, r1, #5
 8009f74:	4560      	cmp	r0, ip
 8009f76:	d01b      	beq.n	8009fb0 <RemoteConfig::Run()+0x110>
 8009f78:	f815 6b01 	ldrb.w	r6, [r5], #1
 8009f7c:	f810 7f01 	ldrb.w	r7, [r0, #1]!
 8009f80:	42b7      	cmp	r7, r6
 8009f82:	d0f7      	beq.n	8009f74 <RemoteConfig::Run()+0xd4>
 8009f84:	2b08      	cmp	r3, #8
 8009f86:	d909      	bls.n	8009f9c <RemoteConfig::Run()+0xfc>
 8009f88:	4b11      	ldr	r3, [pc, #68]	; (8009fd0 <RemoteConfig::Run()+0x130>)
 8009f8a:	3108      	adds	r1, #8
 8009f8c:	428a      	cmp	r2, r1
 8009f8e:	d015      	beq.n	8009fbc <RemoteConfig::Run()+0x11c>
 8009f90:	f813 0b01 	ldrb.w	r0, [r3], #1
 8009f94:	f812 5f01 	ldrb.w	r5, [r2, #1]!
 8009f98:	4285      	cmp	r5, r0
 8009f9a:	d0f7      	beq.n	8009f8c <RemoteConfig::Run()+0xec>
 8009f9c:	f642 1305 	movw	r3, #10501	; 0x2905
 8009fa0:	2208      	movs	r2, #8
 8009fa2:	9300      	str	r3, [sp, #0]
 8009fa4:	69a3      	ldr	r3, [r4, #24]
 8009fa6:	490b      	ldr	r1, [pc, #44]	; (8009fd4 <RemoteConfig::Run()+0x134>)
 8009fa8:	7d20      	ldrb	r0, [r4, #20]
 8009faa:	f005 fae7 	bl	800f57c <udp_send>
 8009fae:	e7d3      	b.n	8009f58 <RemoteConfig::Run()+0xb8>
 8009fb0:	2300      	movs	r3, #0
 8009fb2:	4a09      	ldr	r2, [pc, #36]	; (8009fd8 <RemoteConfig::Run()+0x138>)
 8009fb4:	011b      	lsls	r3, r3, #4
 8009fb6:	4620      	mov	r0, r4
 8009fb8:	58d3      	ldr	r3, [r2, r3]
 8009fba:	e7b9      	b.n	8009f30 <RemoteConfig::Run()+0x90>
 8009fbc:	2301      	movs	r3, #1
 8009fbe:	e7f8      	b.n	8009fb2 <RemoteConfig::Run()+0x112>
 8009fc0:	200000ec 	andcs	r0, r0, ip, ror #1
 8009fc4:	08014fa8 	stmdaeq	r1, {r3, r5, r7, r8, r9, sl, fp, lr}
 8009fc8:	08014e11 	stmdaeq	r1, {r0, r4, r9, sl, fp, lr}
 8009fcc:	08014df9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, r8, sl, fp, lr}
 8009fd0:	08014dff 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r7, r8, sl, fp, lr}
 8009fd4:	08014e08 	stmdaeq	r1, {r3, r9, sl, fp, lr}
 8009fd8:	08015038 	stmdaeq	r1, {r3, r4, r5, ip, lr}

08009fdc <RemoteConfig::HandleSetRconfig()>:
 8009fdc:	b510      	push	{r4, lr}
 8009fde:	4604      	mov	r4, r0
 8009fe0:	4b08      	ldr	r3, [pc, #32]	; (800a004 <RemoteConfig::HandleSetRconfig()+0x28>)
 8009fe2:	b08a      	sub	sp, #40	; 0x28
 8009fe4:	6819      	ldr	r1, [r3, #0]
 8009fe6:	a801      	add	r0, sp, #4
 8009fe8:	f000 f882 	bl	800a0f0 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 8009fec:	4b06      	ldr	r3, [pc, #24]	; (800a008 <RemoteConfig::HandleSetRconfig()+0x2c>)
 8009fee:	69e2      	ldr	r2, [r4, #28]
 8009ff0:	6819      	ldr	r1, [r3, #0]
 8009ff2:	a801      	add	r0, sp, #4
 8009ff4:	f000 f892 	bl	800a11c <RemoteConfigParams::Load(char const*, unsigned int)>
 8009ff8:	4621      	mov	r1, r4
 8009ffa:	a801      	add	r0, sp, #4
 8009ffc:	f000 f9a9 	bl	800a352 <RemoteConfigParams::Set(RemoteConfig*)>
 800a000:	b00a      	add	sp, #40	; 0x28
 800a002:	bd10      	pop	{r4, pc}
 800a004:	20012998 	mulcs	r1, r8, r9
 800a008:	200000ec 	andcs	r0, r0, ip, ror #1

0800a00c <RemoteConfig::HandleSetNetworkTxt()>:
 800a00c:	b510      	push	{r4, lr}
 800a00e:	4604      	mov	r4, r0
 800a010:	4b06      	ldr	r3, [pc, #24]	; (800a02c <RemoteConfig::HandleSetNetworkTxt()+0x20>)
 800a012:	b09a      	sub	sp, #104	; 0x68
 800a014:	6819      	ldr	r1, [r3, #0]
 800a016:	a801      	add	r0, sp, #4
 800a018:	f006 fa8e 	bl	8010538 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 800a01c:	4b04      	ldr	r3, [pc, #16]	; (800a030 <RemoteConfig::HandleSetNetworkTxt()+0x24>)
 800a01e:	69e2      	ldr	r2, [r4, #28]
 800a020:	6819      	ldr	r1, [r3, #0]
 800a022:	a801      	add	r0, sp, #4
 800a024:	f006 faa0 	bl	8010568 <NetworkParams::Load(char const*, unsigned int)>
 800a028:	b01a      	add	sp, #104	; 0x68
 800a02a:	bd10      	pop	{r4, pc}
 800a02c:	20012990 	mulcs	r1, r0, r9
 800a030:	200000ec 	andcs	r0, r0, ip, ror #1

0800a034 <RemoteConfig::HandleSetDevicesTxt()>:
 800a034:	b510      	push	{r4, lr}
 800a036:	4604      	mov	r4, r0
 800a038:	4b06      	ldr	r3, [pc, #24]	; (800a054 <RemoteConfig::HandleSetDevicesTxt()+0x20>)
 800a03a:	b08c      	sub	sp, #48	; 0x30
 800a03c:	6819      	ldr	r1, [r3, #0]
 800a03e:	a801      	add	r0, sp, #4
 800a040:	f002 fc62 	bl	800c908 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)>
 800a044:	4b04      	ldr	r3, [pc, #16]	; (800a058 <RemoteConfig::HandleSetDevicesTxt()+0x24>)
 800a046:	69e2      	ldr	r2, [r4, #28]
 800a048:	6819      	ldr	r1, [r3, #0]
 800a04a:	a801      	add	r0, sp, #4
 800a04c:	f002 fc8a 	bl	800c964 <PixelDmxParams::Load(char const*, unsigned int)>
 800a050:	b00c      	add	sp, #48	; 0x30
 800a052:	bd10      	pop	{r4, pc}
 800a054:	2001299c 	mulcs	r1, ip, r9
 800a058:	200000ec 	andcs	r0, r0, ip, ror #1

0800a05c <RemoteConfig::HandleSetDisplayTxt()>:
 800a05c:	b510      	push	{r4, lr}
 800a05e:	4604      	mov	r4, r0
 800a060:	4b06      	ldr	r3, [pc, #24]	; (800a07c <RemoteConfig::HandleSetDisplayTxt()+0x20>)
 800a062:	b08a      	sub	sp, #40	; 0x28
 800a064:	6819      	ldr	r1, [r3, #0]
 800a066:	4668      	mov	r0, sp
 800a068:	f007 f9d2 	bl	8011410 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 800a06c:	4b04      	ldr	r3, [pc, #16]	; (800a080 <RemoteConfig::HandleSetDisplayTxt()+0x24>)
 800a06e:	4668      	mov	r0, sp
 800a070:	69e2      	ldr	r2, [r4, #28]
 800a072:	6819      	ldr	r1, [r3, #0]
 800a074:	f007 f9e6 	bl	8011444 <DisplayUdfParams::Load(char const*, unsigned int)>
 800a078:	b00a      	add	sp, #40	; 0x28
 800a07a:	bd10      	pop	{r4, pc}
 800a07c:	2001298c 	andcs	r2, r1, ip, lsl #19
 800a080:	200000ec 	andcs	r0, r0, ip, ror #1

0800a084 <RemoteConfig::HandleFactory()>:
 800a084:	b538      	push	{r3, r4, r5, lr}
 800a086:	2400      	movs	r4, #0
 800a088:	4d04      	ldr	r5, [pc, #16]	; (800a09c <RemoteConfig::HandleFactory()+0x18>)
 800a08a:	4621      	mov	r1, r4
 800a08c:	6828      	ldr	r0, [r5, #0]
 800a08e:	3401      	adds	r4, #1
 800a090:	f004 faa8 	bl	800e5e4 <SpiFlashStore::ResetSetList(spiflashstore::Store)>
 800a094:	2c1c      	cmp	r4, #28
 800a096:	d1f8      	bne.n	800a08a <RemoteConfig::HandleFactory()+0x6>
 800a098:	bd38      	pop	{r3, r4, r5, pc}
 800a09a:	bf00      	nop
 800a09c:	20012984 	andcs	r2, r1, r4, lsl #19

0800a0a0 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>:
 800a0a0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a0a2:	460b      	mov	r3, r1
 800a0a4:	8885      	ldrh	r5, [r0, #4]
 800a0a6:	88c1      	ldrh	r1, [r0, #6]
 800a0a8:	42a9      	cmp	r1, r5
 800a0aa:	d214      	bcs.n	800a0d6 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x36>
 800a0ac:	4604      	mov	r4, r0
 800a0ae:	6800      	ldr	r0, [r0, #0]
 800a0b0:	1a6d      	subs	r5, r5, r1
 800a0b2:	4408      	add	r0, r1
 800a0b4:	7a21      	ldrb	r1, [r4, #8]
 800a0b6:	b91a      	cbnz	r2, 800a0c0 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x20>
 800a0b8:	b919      	cbnz	r1, 800a0c2 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x22>
 800a0ba:	4a0a      	ldr	r2, [pc, #40]	; (800a0e4 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x44>)
 800a0bc:	9100      	str	r1, [sp, #0]
 800a0be:	e002      	b.n	800a0c6 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 800a0c0:	b159      	cbz	r1, 800a0da <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x3a>
 800a0c2:	9200      	str	r2, [sp, #0]
 800a0c4:	4a08      	ldr	r2, [pc, #32]	; (800a0e8 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x48>)
 800a0c6:	4629      	mov	r1, r5
 800a0c8:	f7ff fa7a 	bl	80095c0 <snprintf>
 800a0cc:	4285      	cmp	r5, r0
 800a0ce:	bfa2      	ittt	ge
 800a0d0:	88e3      	ldrhge	r3, [r4, #6]
 800a0d2:	181b      	addge	r3, r3, r0
 800a0d4:	80e3      	strhge	r3, [r4, #6]
 800a0d6:	b003      	add	sp, #12
 800a0d8:	bd30      	pop	{r4, r5, pc}
 800a0da:	2201      	movs	r2, #1
 800a0dc:	9200      	str	r2, [sp, #0]
 800a0de:	4a03      	ldr	r2, [pc, #12]	; (800a0ec <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x4c>)
 800a0e0:	e7f1      	b.n	800a0c6 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 800a0e2:	bf00      	nop
 800a0e4:	08015061 	stmdaeq	r1, {r0, r5, r6, ip, lr}
 800a0e8:	08015058 	stmdaeq	r1, {r3, r4, r6, ip, lr}
 800a0ec:	08015062 	stmdaeq	r1, {r1, r5, r6, ip, lr}

0800a0f0 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>:
 800a0f0:	b510      	push	{r4, lr}
 800a0f2:	4604      	mov	r4, r0
 800a0f4:	2220      	movs	r2, #32
 800a0f6:	f840 1b04 	str.w	r1, [r0], #4
 800a0fa:	2100      	movs	r1, #0
 800a0fc:	f008 fb02 	bl	8012704 <memset>
 800a100:	4620      	mov	r0, r4
 800a102:	bd10      	pop	{r4, pc}

0800a104 <RemoteConfigParams::Load()>:
 800a104:	b508      	push	{r3, lr}
 800a106:	2300      	movs	r3, #0
 800a108:	4601      	mov	r1, r0
 800a10a:	6043      	str	r3, [r0, #4]
 800a10c:	6800      	ldr	r0, [r0, #0]
 800a10e:	b120      	cbz	r0, 800a11a <RemoteConfigParams::Load()+0x16>
 800a110:	6803      	ldr	r3, [r0, #0]
 800a112:	3104      	adds	r1, #4
 800a114:	68db      	ldr	r3, [r3, #12]
 800a116:	4798      	blx	r3
 800a118:	2001      	movs	r0, #1
 800a11a:	bd08      	pop	{r3, pc}

0800a11c <RemoteConfigParams::Load(char const*, unsigned int)>:
 800a11c:	2300      	movs	r3, #0
 800a11e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a120:	460d      	mov	r5, r1
 800a122:	4616      	mov	r6, r2
 800a124:	4604      	mov	r4, r0
 800a126:	6043      	str	r3, [r0, #4]
 800a128:	4602      	mov	r2, r0
 800a12a:	490a      	ldr	r1, [pc, #40]	; (800a154 <RemoteConfigParams::Load(char const*, unsigned int)+0x38>)
 800a12c:	4668      	mov	r0, sp
 800a12e:	f007 fc65 	bl	80119fc <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800a132:	4632      	mov	r2, r6
 800a134:	4629      	mov	r1, r5
 800a136:	4668      	mov	r0, sp
 800a138:	f007 fc64 	bl	8011a04 <ReadConfigFile::Read(char const*, unsigned int)>
 800a13c:	4621      	mov	r1, r4
 800a13e:	f851 0b04 	ldr.w	r0, [r1], #4
 800a142:	6803      	ldr	r3, [r0, #0]
 800a144:	689b      	ldr	r3, [r3, #8]
 800a146:	4798      	blx	r3
 800a148:	4668      	mov	r0, sp
 800a14a:	f007 fc5a 	bl	8011a02 <ReadConfigFile::~ReadConfigFile()>
 800a14e:	b002      	add	sp, #8
 800a150:	bd70      	pop	{r4, r5, r6, pc}
 800a152:	bf00      	nop
 800a154:	0800a215 	stmdaeq	r0, {r0, r2, r4, r9, sp, pc}

0800a158 <RemoteConfigParams::SetBool(unsigned char, unsigned int)>:
 800a158:	6843      	ldr	r3, [r0, #4]
 800a15a:	b111      	cbz	r1, 800a162 <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0xa>
 800a15c:	4313      	orrs	r3, r2
 800a15e:	6043      	str	r3, [r0, #4]
 800a160:	4770      	bx	lr
 800a162:	ea23 0302 	bic.w	r3, r3, r2
 800a166:	e7fa      	b.n	800a15e <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0x6>

0800a168 <RemoteConfigParams::callbackFunction(char const*)>:
 800a168:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a16a:	460d      	mov	r5, r1
 800a16c:	4604      	mov	r4, r0
 800a16e:	4923      	ldr	r1, [pc, #140]	; (800a1fc <RemoteConfigParams::callbackFunction(char const*)+0x94>)
 800a170:	4628      	mov	r0, r5
 800a172:	f10d 0203 	add.w	r2, sp, #3
 800a176:	f007 fd7d 	bl	8011c74 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a17a:	b940      	cbnz	r0, 800a18e <RemoteConfigParams::callbackFunction(char const*)+0x26>
 800a17c:	2201      	movs	r2, #1
 800a17e:	4620      	mov	r0, r4
 800a180:	f89d 1003 	ldrb.w	r1, [sp, #3]
 800a184:	b003      	add	sp, #12
 800a186:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800a18a:	f7ff bfe5 	b.w	800a158 <RemoteConfigParams::SetBool(unsigned char, unsigned int)>
 800a18e:	4628      	mov	r0, r5
 800a190:	491b      	ldr	r1, [pc, #108]	; (800a200 <RemoteConfigParams::callbackFunction(char const*)+0x98>)
 800a192:	f10d 0203 	add.w	r2, sp, #3
 800a196:	f007 fd6d 	bl	8011c74 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a19a:	b908      	cbnz	r0, 800a1a0 <RemoteConfigParams::callbackFunction(char const*)+0x38>
 800a19c:	2202      	movs	r2, #2
 800a19e:	e7ee      	b.n	800a17e <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800a1a0:	4628      	mov	r0, r5
 800a1a2:	4918      	ldr	r1, [pc, #96]	; (800a204 <RemoteConfigParams::callbackFunction(char const*)+0x9c>)
 800a1a4:	f10d 0203 	add.w	r2, sp, #3
 800a1a8:	f007 fd64 	bl	8011c74 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a1ac:	b908      	cbnz	r0, 800a1b2 <RemoteConfigParams::callbackFunction(char const*)+0x4a>
 800a1ae:	2204      	movs	r2, #4
 800a1b0:	e7e5      	b.n	800a17e <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800a1b2:	4628      	mov	r0, r5
 800a1b4:	4914      	ldr	r1, [pc, #80]	; (800a208 <RemoteConfigParams::callbackFunction(char const*)+0xa0>)
 800a1b6:	f10d 0203 	add.w	r2, sp, #3
 800a1ba:	f007 fd5b 	bl	8011c74 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a1be:	b908      	cbnz	r0, 800a1c4 <RemoteConfigParams::callbackFunction(char const*)+0x5c>
 800a1c0:	2208      	movs	r2, #8
 800a1c2:	e7dc      	b.n	800a17e <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800a1c4:	4628      	mov	r0, r5
 800a1c6:	4911      	ldr	r1, [pc, #68]	; (800a20c <RemoteConfigParams::callbackFunction(char const*)+0xa4>)
 800a1c8:	f10d 0203 	add.w	r2, sp, #3
 800a1cc:	f007 fd52 	bl	8011c74 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a1d0:	b908      	cbnz	r0, 800a1d6 <RemoteConfigParams::callbackFunction(char const*)+0x6e>
 800a1d2:	2220      	movs	r2, #32
 800a1d4:	e7d3      	b.n	800a17e <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800a1d6:	2317      	movs	r3, #23
 800a1d8:	4628      	mov	r0, r5
 800a1da:	9301      	str	r3, [sp, #4]
 800a1dc:	490c      	ldr	r1, [pc, #48]	; (800a210 <RemoteConfigParams::callbackFunction(char const*)+0xa8>)
 800a1de:	ab01      	add	r3, sp, #4
 800a1e0:	f104 020c 	add.w	r2, r4, #12
 800a1e4:	f007 fc42 	bl	8011a6c <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800a1e8:	b930      	cbnz	r0, 800a1f8 <RemoteConfigParams::callbackFunction(char const*)+0x90>
 800a1ea:	9b01      	ldr	r3, [sp, #4]
 800a1ec:	4423      	add	r3, r4
 800a1ee:	7318      	strb	r0, [r3, #12]
 800a1f0:	6863      	ldr	r3, [r4, #4]
 800a1f2:	f043 0310 	orr.w	r3, r3, #16
 800a1f6:	6063      	str	r3, [r4, #4]
 800a1f8:	b003      	add	sp, #12
 800a1fa:	bd30      	pop	{r4, r5, pc}
 800a1fc:	0801541f 	stmdaeq	r1, {r0, r1, r2, r3, r4, sl, ip, lr}
 800a200:	08015440 	stmdaeq	r1, {r6, sl, ip, lr}
 800a204:	0801544e 	stmdaeq	r1, {r1, r2, r3, r6, sl, ip, lr}
 800a208:	0801545c 	stmdaeq	r1, {r2, r3, r4, r6, sl, ip, lr}
 800a20c:	0801546a 	stmdaeq	r1, {r1, r3, r5, r6, sl, ip, lr}
 800a210:	08015433 	stmdaeq	r1, {r0, r1, r4, r5, sl, ip, lr}

0800a214 <RemoteConfigParams::staticCallbackFunction(void*, char const*)>:
 800a214:	f7ff bfa8 	b.w	800a168 <RemoteConfigParams::callbackFunction(char const*)>

0800a218 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>:
 800a218:	b570      	push	{r4, r5, r6, lr}
 800a21a:	4604      	mov	r4, r0
 800a21c:	4615      	mov	r5, r2
 800a21e:	461e      	mov	r6, r3
 800a220:	b086      	sub	sp, #24
 800a222:	3004      	adds	r0, #4
 800a224:	2900      	cmp	r1, #0
 800a226:	d041      	beq.n	800a2ac <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x94>
 800a228:	2220      	movs	r2, #32
 800a22a:	f008 fa54 	bl	80126d6 <memmove>
 800a22e:	4633      	mov	r3, r6
 800a230:	462a      	mov	r2, r5
 800a232:	4937      	ldr	r1, [pc, #220]	; (800a310 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xf8>)
 800a234:	a803      	add	r0, sp, #12
 800a236:	f007 fb41 	bl	80118bc <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800a23a:	6862      	ldr	r2, [r4, #4]
 800a23c:	4935      	ldr	r1, [pc, #212]	; (800a314 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xfc>)
 800a23e:	f002 0201 	and.w	r2, r2, #1
 800a242:	a803      	add	r0, sp, #12
 800a244:	f7ff ff2c 	bl	800a0a0 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800a248:	6862      	ldr	r2, [r4, #4]
 800a24a:	4933      	ldr	r1, [pc, #204]	; (800a318 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x100>)
 800a24c:	f3c2 0240 	ubfx	r2, r2, #1, #1
 800a250:	a803      	add	r0, sp, #12
 800a252:	f7ff ff25 	bl	800a0a0 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800a256:	6862      	ldr	r2, [r4, #4]
 800a258:	4930      	ldr	r1, [pc, #192]	; (800a31c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x104>)
 800a25a:	f3c2 0280 	ubfx	r2, r2, #2, #1
 800a25e:	a803      	add	r0, sp, #12
 800a260:	f7ff ff1e 	bl	800a0a0 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800a264:	6862      	ldr	r2, [r4, #4]
 800a266:	492e      	ldr	r1, [pc, #184]	; (800a320 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x108>)
 800a268:	f3c2 02c0 	ubfx	r2, r2, #3, #1
 800a26c:	a803      	add	r0, sp, #12
 800a26e:	f7ff ff17 	bl	800a0a0 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800a272:	6862      	ldr	r2, [r4, #4]
 800a274:	492b      	ldr	r1, [pc, #172]	; (800a324 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x10c>)
 800a276:	f3c2 1240 	ubfx	r2, r2, #5, #1
 800a27a:	a803      	add	r0, sp, #12
 800a27c:	f7ff ff10 	bl	800a0a0 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800a280:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800a284:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800a288:	6862      	ldr	r2, [r4, #4]
 800a28a:	42ab      	cmp	r3, r5
 800a28c:	d223      	bcs.n	800a2d6 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xbe>
 800a28e:	9803      	ldr	r0, [sp, #12]
 800a290:	06d2      	lsls	r2, r2, #27
 800a292:	4418      	add	r0, r3
 800a294:	eba5 0503 	sub.w	r5, r5, r3
 800a298:	f104 040c 	add.w	r4, r4, #12
 800a29c:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800a2a0:	d40b      	bmi.n	800a2ba <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa2>
 800a2a2:	b95b      	cbnz	r3, 800a2bc <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa4>
 800a2a4:	4b20      	ldr	r3, [pc, #128]	; (800a328 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 800a2a6:	4a21      	ldr	r2, [pc, #132]	; (800a32c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x114>)
 800a2a8:	9400      	str	r4, [sp, #0]
 800a2aa:	e00a      	b.n	800a2c2 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xaa>
 800a2ac:	6823      	ldr	r3, [r4, #0]
 800a2ae:	4601      	mov	r1, r0
 800a2b0:	681a      	ldr	r2, [r3, #0]
 800a2b2:	4618      	mov	r0, r3
 800a2b4:	68d2      	ldr	r2, [r2, #12]
 800a2b6:	4790      	blx	r2
 800a2b8:	e7b9      	b.n	800a22e <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x16>
 800a2ba:	b32b      	cbz	r3, 800a308 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xf0>
 800a2bc:	4b1a      	ldr	r3, [pc, #104]	; (800a328 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 800a2be:	4a1c      	ldr	r2, [pc, #112]	; (800a330 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x118>)
 800a2c0:	9400      	str	r4, [sp, #0]
 800a2c2:	4629      	mov	r1, r5
 800a2c4:	f7ff f97c 	bl	80095c0 <snprintf>
 800a2c8:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800a2cc:	4285      	cmp	r5, r0
 800a2ce:	bfa4      	itt	ge
 800a2d0:	181b      	addge	r3, r3, r0
 800a2d2:	f8ad 3012 	strhge.w	r3, [sp, #18]
 800a2d6:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800a2da:	b17b      	cbz	r3, 800a2fc <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xe4>
 800a2dc:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800a2e0:	9b03      	ldr	r3, [sp, #12]
 800a2e2:	4413      	add	r3, r2
 800a2e4:	227d      	movs	r2, #125	; 0x7d
 800a2e6:	f803 2c01 	strb.w	r2, [r3, #-1]
 800a2ea:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800a2ee:	9903      	ldr	r1, [sp, #12]
 800a2f0:	54ca      	strb	r2, [r1, r3]
 800a2f2:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800a2f6:	3301      	adds	r3, #1
 800a2f8:	f8ad 3012 	strh.w	r3, [sp, #18]
 800a2fc:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800a300:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800a302:	601a      	str	r2, [r3, #0]
 800a304:	b006      	add	sp, #24
 800a306:	bd70      	pop	{r4, r5, r6, pc}
 800a308:	4b07      	ldr	r3, [pc, #28]	; (800a328 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 800a30a:	4a0a      	ldr	r2, [pc, #40]	; (800a334 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x11c>)
 800a30c:	9400      	str	r4, [sp, #0]
 800a30e:	e7d8      	b.n	800a2c2 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xaa>
 800a310:	08015427 	stmdaeq	r1, {r0, r1, r2, r5, sl, ip, lr}
 800a314:	0801541f 	stmdaeq	r1, {r0, r1, r2, r3, r4, sl, ip, lr}
 800a318:	08015440 	stmdaeq	r1, {r6, sl, ip, lr}
 800a31c:	0801544e 	stmdaeq	r1, {r1, r2, r3, r6, sl, ip, lr}
 800a320:	0801545c 	stmdaeq	r1, {r2, r3, r4, r6, sl, ip, lr}
 800a324:	0801546a 	stmdaeq	r1, {r1, r3, r5, r6, sl, ip, lr}
 800a328:	08015433 	stmdaeq	r1, {r0, r1, r4, r5, sl, ip, lr}
 800a32c:	08015074 	stmdaeq	r1, {r2, r4, r5, r6, ip, lr}
 800a330:	08015069 	stmdaeq	r1, {r0, r3, r5, r6, ip, lr}
 800a334:	08015075 	stmdaeq	r1, {r0, r2, r4, r5, r6, ip, lr}

0800a338 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>:
 800a338:	b513      	push	{r0, r1, r4, lr}
 800a33a:	6804      	ldr	r4, [r0, #0]
 800a33c:	b914      	cbnz	r4, 800a344 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800a33e:	601c      	str	r4, [r3, #0]
 800a340:	b002      	add	sp, #8
 800a342:	bd10      	pop	{r4, pc}
 800a344:	9300      	str	r3, [sp, #0]
 800a346:	4613      	mov	r3, r2
 800a348:	460a      	mov	r2, r1
 800a34a:	2100      	movs	r1, #0
 800a34c:	f7ff ff64 	bl	800a218 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>
 800a350:	e7f6      	b.n	800a340 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800a352 <RemoteConfigParams::Set(RemoteConfig*)>:
 800a352:	b538      	push	{r3, r4, r5, lr}
 800a354:	460c      	mov	r4, r1
 800a356:	4605      	mov	r5, r0
 800a358:	6841      	ldr	r1, [r0, #4]
 800a35a:	4620      	mov	r0, r4
 800a35c:	f001 0101 	and.w	r1, r1, #1
 800a360:	f7ff fc6c 	bl	8009c3c <RemoteConfig::SetDisable(bool)>
 800a364:	686b      	ldr	r3, [r5, #4]
 800a366:	f3c3 0240 	ubfx	r2, r3, #1, #1
 800a36a:	7362      	strb	r2, [r4, #13]
 800a36c:	f3c3 0280 	ubfx	r2, r3, #2, #1
 800a370:	73a2      	strb	r2, [r4, #14]
 800a372:	f3c3 02c0 	ubfx	r2, r3, #3, #1
 800a376:	73e2      	strb	r2, [r4, #15]
 800a378:	f3c3 1240 	ubfx	r2, r3, #5, #1
 800a37c:	06db      	lsls	r3, r3, #27
 800a37e:	7422      	strb	r2, [r4, #16]
 800a380:	d506      	bpl.n	800a390 <RemoteConfigParams::Set(RemoteConfig*)+0x3e>
 800a382:	4620      	mov	r0, r4
 800a384:	f105 010c 	add.w	r1, r5, #12
 800a388:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800a38c:	f7ff bc76 	b.w	8009c7c <RemoteConfig::SetDisplayName(char const*)>
 800a390:	bd38      	pop	{r3, r4, r5, pc}

0800a392 <RemoteConfigParams::Dump()>:
 800a392:	4770      	bx	lr

0800a394 <RemoteConfig::HandleReboot()>:
 800a394:	7b83      	ldrb	r3, [r0, #14]
 800a396:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a398:	2b00      	cmp	r3, #0
 800a39a:	d03c      	beq.n	800a416 <RemoteConfig::HandleReboot()+0x82>
 800a39c:	2301      	movs	r3, #1
 800a39e:	4c1f      	ldr	r4, [pc, #124]	; (800a41c <RemoteConfig::HandleReboot()+0x88>)
 800a3a0:	7443      	strb	r3, [r0, #17]
 800a3a2:	6825      	ldr	r5, [r4, #0]
 800a3a4:	69a8      	ldr	r0, [r5, #24]
 800a3a6:	b138      	cbz	r0, 800a3b8 <RemoteConfig::HandleReboot()+0x24>
 800a3a8:	2100      	movs	r1, #0
 800a3aa:	6803      	ldr	r3, [r0, #0]
 800a3ac:	7429      	strb	r1, [r5, #16]
 800a3ae:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a3b0:	4798      	blx	r3
 800a3b2:	4b1b      	ldr	r3, [pc, #108]	; (800a420 <RemoteConfig::HandleReboot()+0x8c>)
 800a3b4:	681b      	ldr	r3, [r3, #0]
 800a3b6:	606b      	str	r3, [r5, #4]
 800a3b8:	4d1a      	ldr	r5, [pc, #104]	; (800a424 <RemoteConfig::HandleReboot()+0x90>)
 800a3ba:	6828      	ldr	r0, [r5, #0]
 800a3bc:	f004 f996 	bl	800e6ec <SpiFlashStore::Flash()>
 800a3c0:	2800      	cmp	r0, #0
 800a3c2:	d1fa      	bne.n	800a3ba <RemoteConfig::HandleReboot()+0x26>
 800a3c4:	4b18      	ldr	r3, [pc, #96]	; (800a428 <RemoteConfig::HandleReboot()+0x94>)
 800a3c6:	6818      	ldr	r0, [r3, #0]
 800a3c8:	f005 fd98 	bl	800fefc <Network::Shutdown()>
 800a3cc:	4817      	ldr	r0, [pc, #92]	; (800a42c <RemoteConfig::HandleReboot()+0x98>)
 800a3ce:	f7ff f8cf 	bl	8009570 <printf>
 800a3d2:	6823      	ldr	r3, [r4, #0]
 800a3d4:	6998      	ldr	r0, [r3, #24]
 800a3d6:	b110      	cbz	r0, 800a3de <RemoteConfig::HandleReboot()+0x4a>
 800a3d8:	6803      	ldr	r3, [r0, #0]
 800a3da:	68db      	ldr	r3, [r3, #12]
 800a3dc:	4798      	blx	r3
 800a3de:	6824      	ldr	r4, [r4, #0]
 800a3e0:	4913      	ldr	r1, [pc, #76]	; (800a430 <RemoteConfig::HandleReboot()+0x9c>)
 800a3e2:	4620      	mov	r0, r4
 800a3e4:	f7fe f9d0 	bl	8008788 <Display::TextStatus(char const*)>
 800a3e8:	7c63      	ldrb	r3, [r4, #17]
 800a3ea:	b183      	cbz	r3, 800a40e <RemoteConfig::HandleReboot()+0x7a>
 800a3ec:	f64b 7312 	movw	r3, #48914	; 0xbf12
 800a3f0:	f8ad 3004 	strh.w	r3, [sp, #4]
 800a3f4:	23bf      	movs	r3, #191	; 0xbf
 800a3f6:	7a20      	ldrb	r0, [r4, #8]
 800a3f8:	f88d 3006 	strb.w	r3, [sp, #6]
 800a3fc:	f009 fa96 	bl	801392c <gd32_i2c_set_address>
 800a400:	68e0      	ldr	r0, [r4, #12]
 800a402:	f009 fa8b 	bl	801391c <gd32_i2c_set_baudrate>
 800a406:	2103      	movs	r1, #3
 800a408:	a801      	add	r0, sp, #4
 800a40a:	f009 fa95 	bl	8013938 <gd32_i2c_write>
 800a40e:	4b09      	ldr	r3, [pc, #36]	; (800a434 <RemoteConfig::HandleReboot()+0xa0>)
 800a410:	6818      	ldr	r0, [r3, #0]
 800a412:	f008 f861 	bl	80124d8 <Hardware::Reboot()>
 800a416:	b003      	add	sp, #12
 800a418:	bd30      	pop	{r4, r5, pc}
 800a41a:	bf00      	nop
 800a41c:	2001a860 	andcs	sl, r1, r0, ror #16
 800a420:	2001a964 	andcs	sl, r1, r4, ror #18
 800a424:	20012984 	andcs	r2, r1, r4, lsl #19
 800a428:	2001a288 	andcs	sl, r1, r8, lsl #5
 800a42c:	0801507c 	stmdaeq	r1, {r2, r3, r4, r5, r6, ip, lr}
 800a430:	0801508b 	stmdaeq	r1, {r0, r1, r3, r7, ip, lr}
 800a434:	2001a950 	andcs	sl, r1, r0, asr r9

0800a438 <RemoteConfig::GetIndex(void const*, unsigned int&)>:
 800a438:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800a43c:	2000      	movs	r0, #0
 800a43e:	4d12      	ldr	r5, [pc, #72]	; (800a488 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x50>)
 800a440:	f10d 0c04 	add.w	ip, sp, #4
 800a444:	6814      	ldr	r4, [r2, #0]
 800a446:	7d2b      	ldrb	r3, [r5, #20]
 800a448:	692e      	ldr	r6, [r5, #16]
 800a44a:	42a3      	cmp	r3, r4
 800a44c:	bf34      	ite	cc
 800a44e:	4664      	movcc	r4, ip
 800a450:	4614      	movcs	r4, r2
 800a452:	9301      	str	r3, [sp, #4]
 800a454:	6827      	ldr	r7, [r4, #0]
 800a456:	460c      	mov	r4, r1
 800a458:	3e01      	subs	r6, #1
 800a45a:	440f      	add	r7, r1
 800a45c:	42bc      	cmp	r4, r7
 800a45e:	d101      	bne.n	800a464 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x2c>
 800a460:	6013      	str	r3, [r2, #0]
 800a462:	e00c      	b.n	800a47e <RemoteConfig::GetIndex(void const*, unsigned int&)+0x46>
 800a464:	f894 8000 	ldrb.w	r8, [r4]
 800a468:	f816 ef01 	ldrb.w	lr, [r6, #1]!
 800a46c:	45f0      	cmp	r8, lr
 800a46e:	d009      	beq.n	800a484 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x4c>
 800a470:	3001      	adds	r0, #1
 800a472:	2804      	cmp	r0, #4
 800a474:	f105 051c 	add.w	r5, r5, #28
 800a478:	d1e4      	bne.n	800a444 <RemoteConfig::GetIndex(void const*, unsigned int&)+0xc>
 800a47a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800a47e:	b002      	add	sp, #8
 800a480:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a484:	3401      	adds	r4, #1
 800a486:	e7e9      	b.n	800a45c <RemoteConfig::GetIndex(void const*, unsigned int&)+0x24>
 800a488:	080150cc 	stmdaeq	r1, {r2, r3, r6, r7, ip, lr}

0800a48c <RemoteConfig::PlatformHandleTftpSet()>:
 800a48c:	f890 1020 	ldrb.w	r1, [r0, #32]
 800a490:	b109      	cbz	r1, 800a496 <RemoteConfig::PlatformHandleTftpSet()+0xa>
 800a492:	f24a 51a5 	movw	r1, #42405	; 0xa5a5
 800a496:	2002      	movs	r0, #2
 800a498:	f008 bb2c 	b.w	8012af4 <bkp_data_write>

0800a49c <RemoteConfig::PlatformHandleTftpGet()>:
 800a49c:	b510      	push	{r4, lr}
 800a49e:	4604      	mov	r4, r0
 800a4a0:	2002      	movs	r0, #2
 800a4a2:	f008 fb3d 	bl	8012b20 <bkp_data_read>
 800a4a6:	f24a 53a5 	movw	r3, #42405	; 0xa5a5
 800a4aa:	1ac3      	subs	r3, r0, r3
 800a4ac:	4258      	negs	r0, r3
 800a4ae:	4158      	adcs	r0, r3
 800a4b0:	f884 0020 	strb.w	r0, [r4, #32]
 800a4b4:	bd10      	pop	{r4, pc}

0800a4b6 <strcmp>:
 800a4b6:	1e43      	subs	r3, r0, #1
 800a4b8:	3901      	subs	r1, #1
 800a4ba:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800a4be:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800a4c2:	4290      	cmp	r0, r2
 800a4c4:	d001      	beq.n	800a4ca <strcmp+0x14>
 800a4c6:	1a80      	subs	r0, r0, r2
 800a4c8:	e001      	b.n	800a4ce <strcmp+0x18>
 800a4ca:	2800      	cmp	r0, #0
 800a4cc:	d1f5      	bne.n	800a4ba <strcmp+0x4>
 800a4ce:	4770      	bx	lr

0800a4d0 <strcasecmp>:
 800a4d0:	b530      	push	{r4, r5, lr}
 800a4d2:	1e42      	subs	r2, r0, #1
 800a4d4:	3901      	subs	r1, #1
 800a4d6:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800a4da:	4604      	mov	r4, r0
 800a4dc:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 800a4e0:	2b19      	cmp	r3, #25
 800a4e2:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800a4e6:	bf98      	it	ls
 800a4e8:	f100 0420 	addls.w	r4, r0, #32
 800a4ec:	f1a3 0541 	sub.w	r5, r3, #65	; 0x41
 800a4f0:	2d19      	cmp	r5, #25
 800a4f2:	bf98      	it	ls
 800a4f4:	3320      	addls	r3, #32
 800a4f6:	42a3      	cmp	r3, r4
 800a4f8:	d001      	beq.n	800a4fe <strcasecmp+0x2e>
 800a4fa:	1ae0      	subs	r0, r4, r3
 800a4fc:	e001      	b.n	800a502 <strcasecmp+0x32>
 800a4fe:	2800      	cmp	r0, #0
 800a500:	d1e9      	bne.n	800a4d6 <strcasecmp+0x6>
 800a502:	bd30      	pop	{r4, r5, pc}

0800a504 <PropertiesConfig::EnableJSON(bool)>:
 800a504:	4a04      	ldr	r2, [pc, #16]	; (800a518 <PropertiesConfig::EnableJSON(bool)+0x14>)
 800a506:	7813      	ldrb	r3, [r2, #0]
 800a508:	b118      	cbz	r0, 800a512 <PropertiesConfig::EnableJSON(bool)+0xe>
 800a50a:	f043 0301 	orr.w	r3, r3, #1
 800a50e:	7013      	strb	r3, [r2, #0]
 800a510:	4770      	bx	lr
 800a512:	f003 03fe 	and.w	r3, r3, #254	; 0xfe
 800a516:	e7fa      	b.n	800a50e <PropertiesConfig::EnableJSON(bool)+0xa>
 800a518:	2001a85c 	andcs	sl, r1, ip, asr r8

0800a51c <HttpDaemon::HttpDaemon()>:
 800a51c:	4a08      	ldr	r2, [pc, #32]	; (800a540 <HttpDaemon::HttpDaemon()+0x24>)
 800a51e:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800a522:	6002      	str	r2, [r0, #0]
 800a524:	2200      	movs	r2, #0
 800a526:	f44f 7c02 	mov.w	ip, #520	; 0x208
 800a52a:	e9c0 1204 	strd	r1, r2, [r0, #16]
 800a52e:	2102      	movs	r1, #2
 800a530:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800a534:	e9c0 c106 	strd	ip, r1, [r0, #24]
 800a538:	e9c0 2208 	strd	r2, r2, [r0, #32]
 800a53c:	60c2      	str	r2, [r0, #12]
 800a53e:	4770      	bx	lr
 800a540:	0801539f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r7, r8, r9, ip, lr}

0800a544 <HttpDaemon::Start()>:
 800a544:	4b04      	ldr	r3, [pc, #16]	; (800a558 <HttpDaemon::Start()+0x14>)
 800a546:	b510      	push	{r4, lr}
 800a548:	2150      	movs	r1, #80	; 0x50
 800a54a:	4604      	mov	r4, r0
 800a54c:	6818      	ldr	r0, [r3, #0]
 800a54e:	f005 ffe7 	bl	8010520 <Network::TcpBegin(unsigned short)>
 800a552:	6120      	str	r0, [r4, #16]
 800a554:	bd10      	pop	{r4, pc}
 800a556:	bf00      	nop
 800a558:	2001a288 	andcs	sl, r1, r8, lsl #5

0800a55c <HttpDaemon::ParseMethod(char*)>:
 800a55c:	b538      	push	{r3, r4, r5, lr}
 800a55e:	4604      	mov	r4, r0
 800a560:	4608      	mov	r0, r1
 800a562:	491a      	ldr	r1, [pc, #104]	; (800a5cc <HttpDaemon::ParseMethod(char*)+0x70>)
 800a564:	f008 f8f8 	bl	8012758 <strtok>
 800a568:	4605      	mov	r5, r0
 800a56a:	b360      	cbz	r0, 800a5c6 <HttpDaemon::ParseMethod(char*)+0x6a>
 800a56c:	4918      	ldr	r1, [pc, #96]	; (800a5d0 <HttpDaemon::ParseMethod(char*)+0x74>)
 800a56e:	f7ff ffa2 	bl	800a4b6 <strcmp>
 800a572:	b128      	cbz	r0, 800a580 <HttpDaemon::ParseMethod(char*)+0x24>
 800a574:	4628      	mov	r0, r5
 800a576:	4917      	ldr	r1, [pc, #92]	; (800a5d4 <HttpDaemon::ParseMethod(char*)+0x78>)
 800a578:	f7ff ff9d 	bl	800a4b6 <strcmp>
 800a57c:	bb18      	cbnz	r0, 800a5c6 <HttpDaemon::ParseMethod(char*)+0x6a>
 800a57e:	2001      	movs	r0, #1
 800a580:	61e0      	str	r0, [r4, #28]
 800a582:	4912      	ldr	r1, [pc, #72]	; (800a5cc <HttpDaemon::ParseMethod(char*)+0x70>)
 800a584:	2000      	movs	r0, #0
 800a586:	f008 f8e7 	bl	8012758 <strtok>
 800a58a:	b910      	cbnz	r0, 800a592 <HttpDaemon::ParseMethod(char*)+0x36>
 800a58c:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800a590:	bd38      	pop	{r3, r4, r5, pc}
 800a592:	6060      	str	r0, [r4, #4]
 800a594:	4910      	ldr	r1, [pc, #64]	; (800a5d8 <HttpDaemon::ParseMethod(char*)+0x7c>)
 800a596:	2000      	movs	r0, #0
 800a598:	f008 f8de 	bl	8012758 <strtok>
 800a59c:	2800      	cmp	r0, #0
 800a59e:	d0f5      	beq.n	800a58c <HttpDaemon::ParseMethod(char*)+0x30>
 800a5a0:	490e      	ldr	r1, [pc, #56]	; (800a5dc <HttpDaemon::ParseMethod(char*)+0x80>)
 800a5a2:	f7ff ff88 	bl	800a4b6 <strcmp>
 800a5a6:	2800      	cmp	r0, #0
 800a5a8:	d1f0      	bne.n	800a58c <HttpDaemon::ParseMethod(char*)+0x30>
 800a5aa:	490d      	ldr	r1, [pc, #52]	; (800a5e0 <HttpDaemon::ParseMethod(char*)+0x84>)
 800a5ac:	f008 f8d4 	bl	8012758 <strtok>
 800a5b0:	2800      	cmp	r0, #0
 800a5b2:	d0eb      	beq.n	800a58c <HttpDaemon::ParseMethod(char*)+0x30>
 800a5b4:	490b      	ldr	r1, [pc, #44]	; (800a5e4 <HttpDaemon::ParseMethod(char*)+0x88>)
 800a5b6:	f7ff ff7e 	bl	800a4b6 <strcmp>
 800a5ba:	2800      	cmp	r0, #0
 800a5bc:	f240 10f9 	movw	r0, #505	; 0x1f9
 800a5c0:	bf08      	it	eq
 800a5c2:	20c8      	moveq	r0, #200	; 0xc8
 800a5c4:	e7e4      	b.n	800a590 <HttpDaemon::ParseMethod(char*)+0x34>
 800a5c6:	f240 10f5 	movw	r0, #501	; 0x1f5
 800a5ca:	e7e1      	b.n	800a590 <HttpDaemon::ParseMethod(char*)+0x34>
 800a5cc:	08014deb 	stmdaeq	r1, {r0, r1, r3, r5, r6, r7, r8, sl, fp, lr}
 800a5d0:	0801513c 	stmdaeq	r1, {r2, r3, r4, r5, r8, ip, lr}
 800a5d4:	08015140 	stmdaeq	r1, {r6, r8, ip, lr}
 800a5d8:	080151a8 	stmdaeq	r1, {r3, r5, r7, r8, ip, lr}
 800a5dc:	08015145 	stmdaeq	r1, {r0, r2, r6, r8, ip, lr}
 800a5e0:	0801514a 	stmdaeq	r1, {r1, r3, r6, r8, ip, lr}
 800a5e4:	0801514d 	stmdaeq	r1, {r0, r2, r3, r6, r8, ip, lr}

0800a5e8 <HttpDaemon::ParseHeaderField(char*)>:
 800a5e8:	b538      	push	{r3, r4, r5, lr}
 800a5ea:	4605      	mov	r5, r0
 800a5ec:	4608      	mov	r0, r1
 800a5ee:	491d      	ldr	r1, [pc, #116]	; (800a664 <HttpDaemon::ParseHeaderField(char*)+0x7c>)
 800a5f0:	f008 f8b2 	bl	8012758 <strtok>
 800a5f4:	4604      	mov	r4, r0
 800a5f6:	b910      	cbnz	r0, 800a5fe <HttpDaemon::ParseHeaderField(char*)+0x16>
 800a5f8:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800a5fc:	bd38      	pop	{r3, r4, r5, pc}
 800a5fe:	491a      	ldr	r1, [pc, #104]	; (800a668 <HttpDaemon::ParseHeaderField(char*)+0x80>)
 800a600:	f7ff ff66 	bl	800a4d0 <strcasecmp>
 800a604:	b970      	cbnz	r0, 800a624 <HttpDaemon::ParseHeaderField(char*)+0x3c>
 800a606:	4919      	ldr	r1, [pc, #100]	; (800a66c <HttpDaemon::ParseHeaderField(char*)+0x84>)
 800a608:	f008 f8a6 	bl	8012758 <strtok>
 800a60c:	2800      	cmp	r0, #0
 800a60e:	d0f3      	beq.n	800a5f8 <HttpDaemon::ParseHeaderField(char*)+0x10>
 800a610:	4917      	ldr	r1, [pc, #92]	; (800a670 <HttpDaemon::ParseHeaderField(char*)+0x88>)
 800a612:	f7ff ff50 	bl	800a4b6 <strcmp>
 800a616:	b108      	cbz	r0, 800a61c <HttpDaemon::ParseHeaderField(char*)+0x34>
 800a618:	20c8      	movs	r0, #200	; 0xc8
 800a61a:	e7ef      	b.n	800a5fc <HttpDaemon::ParseHeaderField(char*)+0x14>
 800a61c:	2301      	movs	r3, #1
 800a61e:	f885 3020 	strb.w	r3, [r5, #32]
 800a622:	e7f9      	b.n	800a618 <HttpDaemon::ParseHeaderField(char*)+0x30>
 800a624:	4620      	mov	r0, r4
 800a626:	4913      	ldr	r1, [pc, #76]	; (800a674 <HttpDaemon::ParseHeaderField(char*)+0x8c>)
 800a628:	f7ff ff52 	bl	800a4d0 <strcasecmp>
 800a62c:	4604      	mov	r4, r0
 800a62e:	2800      	cmp	r0, #0
 800a630:	d1f2      	bne.n	800a618 <HttpDaemon::ParseHeaderField(char*)+0x30>
 800a632:	4911      	ldr	r1, [pc, #68]	; (800a678 <HttpDaemon::ParseHeaderField(char*)+0x90>)
 800a634:	f008 f890 	bl	8012758 <strtok>
 800a638:	2800      	cmp	r0, #0
 800a63a:	d0dd      	beq.n	800a5f8 <HttpDaemon::ParseHeaderField(char*)+0x10>
 800a63c:	1e42      	subs	r2, r0, #1
 800a63e:	4623      	mov	r3, r4
 800a640:	200a      	movs	r0, #10
 800a642:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800a646:	b909      	cbnz	r1, 800a64c <HttpDaemon::ParseHeaderField(char*)+0x64>
 800a648:	84eb      	strh	r3, [r5, #38]	; 0x26
 800a64a:	e7e5      	b.n	800a618 <HttpDaemon::ParseHeaderField(char*)+0x30>
 800a64c:	3930      	subs	r1, #48	; 0x30
 800a64e:	2909      	cmp	r1, #9
 800a650:	d8d2      	bhi.n	800a5f8 <HttpDaemon::ParseHeaderField(char*)+0x10>
 800a652:	fb00 1303 	mla	r3, r0, r3, r1
 800a656:	f5b3 6fb4 	cmp.w	r3, #1440	; 0x5a0
 800a65a:	d9f2      	bls.n	800a642 <HttpDaemon::ParseHeaderField(char*)+0x5a>
 800a65c:	f240 109d 	movw	r0, #413	; 0x19d
 800a660:	e7cc      	b.n	800a5fc <HttpDaemon::ParseHeaderField(char*)+0x14>
 800a662:	bf00      	nop
 800a664:	08015db0 	stmdaeq	r1, {r4, r5, r7, r8, sl, fp, ip, lr}
 800a668:	08015151 	stmdaeq	r1, {r0, r4, r6, r8, ip, lr}
 800a66c:	0801515e 	stmdaeq	r1, {r1, r2, r3, r4, r6, r8, ip, lr}
 800a670:	08015161 	stmdaeq	r1, {r0, r5, r6, r8, ip, lr}
 800a674:	08015172 	stmdaeq	r1, {r1, r4, r5, r6, r8, ip, lr}
 800a678:	08014deb 	stmdaeq	r1, {r0, r1, r3, r5, r6, r7, r8, sl, fp, lr}

0800a67c <HttpDaemon::ParseRequest()>:
 800a67c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a67e:	2400      	movs	r4, #0
 800a680:	4605      	mov	r5, r0
 800a682:	4622      	mov	r2, r4
 800a684:	4626      	mov	r6, r4
 800a686:	68c1      	ldr	r1, [r0, #12]
 800a688:	f880 4020 	strb.w	r4, [r0, #32]
 800a68c:	6244      	str	r4, [r0, #36]	; 0x24
 800a68e:	8aab      	ldrh	r3, [r5, #20]
 800a690:	42a3      	cmp	r3, r4
 800a692:	d91d      	bls.n	800a6d0 <HttpDaemon::ParseRequest()+0x54>
 800a694:	68eb      	ldr	r3, [r5, #12]
 800a696:	5d18      	ldrb	r0, [r3, r4]
 800a698:	280a      	cmp	r0, #10
 800a69a:	d10e      	bne.n	800a6ba <HttpDaemon::ParseRequest()+0x3e>
 800a69c:	4423      	add	r3, r4
 800a69e:	f803 6c01 	strb.w	r6, [r3, #-1]
 800a6a2:	1c57      	adds	r7, r2, #1
 800a6a4:	b962      	cbnz	r2, 800a6c0 <HttpDaemon::ParseRequest()+0x44>
 800a6a6:	4628      	mov	r0, r5
 800a6a8:	f7ff ff58 	bl	800a55c <HttpDaemon::ParseMethod(char*)>
 800a6ac:	28c8      	cmp	r0, #200	; 0xc8
 800a6ae:	d110      	bne.n	800a6d2 <HttpDaemon::ParseRequest()+0x56>
 800a6b0:	463a      	mov	r2, r7
 800a6b2:	68e9      	ldr	r1, [r5, #12]
 800a6b4:	3401      	adds	r4, #1
 800a6b6:	b2a4      	uxth	r4, r4
 800a6b8:	4421      	add	r1, r4
 800a6ba:	3401      	adds	r4, #1
 800a6bc:	b2a4      	uxth	r4, r4
 800a6be:	e7e6      	b.n	800a68e <HttpDaemon::ParseRequest()+0x12>
 800a6c0:	7808      	ldrb	r0, [r1, #0]
 800a6c2:	b968      	cbnz	r0, 800a6e0 <HttpDaemon::ParseRequest()+0x64>
 800a6c4:	696b      	ldr	r3, [r5, #20]
 800a6c6:	3b01      	subs	r3, #1
 800a6c8:	1b1b      	subs	r3, r3, r4
 800a6ca:	b29b      	uxth	r3, r3
 800a6cc:	84ab      	strh	r3, [r5, #36]	; 0x24
 800a6ce:	b90b      	cbnz	r3, 800a6d4 <HttpDaemon::ParseRequest()+0x58>
 800a6d0:	20c8      	movs	r0, #200	; 0xc8
 800a6d2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a6d4:	68ea      	ldr	r2, [r5, #12]
 800a6d6:	3401      	adds	r4, #1
 800a6d8:	4414      	add	r4, r2
 800a6da:	60ac      	str	r4, [r5, #8]
 800a6dc:	54e0      	strb	r0, [r4, r3]
 800a6de:	e7f7      	b.n	800a6d0 <HttpDaemon::ParseRequest()+0x54>
 800a6e0:	4628      	mov	r0, r5
 800a6e2:	f7ff ff81 	bl	800a5e8 <HttpDaemon::ParseHeaderField(char*)>
 800a6e6:	e7e1      	b.n	800a6ac <HttpDaemon::ParseRequest()+0x30>

0800a6e8 <HttpDaemon::HandleGetTxt()>:
 800a6e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a6ec:	6846      	ldr	r6, [r0, #4]
 800a6ee:	4607      	mov	r7, r0
 800a6f0:	1db4      	adds	r4, r6, #6
 800a6f2:	4622      	mov	r2, r4
 800a6f4:	4613      	mov	r3, r2
 800a6f6:	7819      	ldrb	r1, [r3, #0]
 800a6f8:	3201      	adds	r2, #1
 800a6fa:	2900      	cmp	r1, #0
 800a6fc:	d1fa      	bne.n	800a6f4 <HttpDaemon::HandleGetTxt()+0xc>
 800a6fe:	1b1b      	subs	r3, r3, r4
 800a700:	2b04      	cmp	r3, #4
 800a702:	d803      	bhi.n	800a70c <HttpDaemon::HandleGetTxt()+0x24>
 800a704:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800a708:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a70c:	3b04      	subs	r3, #4
 800a70e:	4914      	ldr	r1, [pc, #80]	; (800a760 <HttpDaemon::HandleGetTxt()+0x78>)
 800a710:	18e0      	adds	r0, r4, r3
 800a712:	f7ff fed0 	bl	800a4b6 <strcmp>
 800a716:	2800      	cmp	r0, #0
 800a718:	d1f4      	bne.n	800a704 <HttpDaemon::HandleGetTxt()+0x1c>
 800a71a:	4b12      	ldr	r3, [pc, #72]	; (800a764 <HttpDaemon::HandleGetTxt()+0x7c>)
 800a71c:	2001      	movs	r0, #1
 800a71e:	f893 8000 	ldrb.w	r8, [r3]
 800a722:	f7ff feef 	bl	800a504 <PropertiesConfig::EnableJSON(bool)>
 800a726:	4b10      	ldr	r3, [pc, #64]	; (800a768 <HttpDaemon::HandleGetTxt()+0x80>)
 800a728:	f240 529b 	movw	r2, #1435	; 0x59b
 800a72c:	4621      	mov	r1, r4
 800a72e:	6818      	ldr	r0, [r3, #0]
 800a730:	f7ff fabc 	bl	8009cac <RemoteConfig::HandleGet(void*, unsigned int)>
 800a734:	4605      	mov	r5, r0
 800a736:	f008 0801 	and.w	r8, r8, #1
 800a73a:	4640      	mov	r0, r8
 800a73c:	f7ff fee2 	bl	800a504 <PropertiesConfig::EnableJSON(bool)>
 800a740:	2d00      	cmp	r5, #0
 800a742:	d0df      	beq.n	800a704 <HttpDaemon::HandleGetTxt()+0x1c>
 800a744:	847d      	strh	r5, [r7, #34]	; 0x22
 800a746:	4b09      	ldr	r3, [pc, #36]	; (800a76c <HttpDaemon::HandleGetTxt()+0x84>)
 800a748:	3506      	adds	r5, #6
 800a74a:	442e      	add	r6, r5
 800a74c:	42b4      	cmp	r4, r6
 800a74e:	d101      	bne.n	800a754 <HttpDaemon::HandleGetTxt()+0x6c>
 800a750:	20c8      	movs	r0, #200	; 0xc8
 800a752:	e7d9      	b.n	800a708 <HttpDaemon::HandleGetTxt()+0x20>
 800a754:	f814 2b01 	ldrb.w	r2, [r4], #1
 800a758:	f803 2b01 	strb.w	r2, [r3], #1
 800a75c:	e7f6      	b.n	800a74c <HttpDaemon::HandleGetTxt()+0x64>
 800a75e:	bf00      	nop
 800a760:	080150a0 	stmdaeq	r1, {r5, r7, ip, lr}
 800a764:	2001a85c 	andcs	sl, r1, ip, asr r8
 800a768:	20000114 	andcs	r0, r0, r4, lsl r1
 800a76c:	20000118 	andcs	r0, r0, r8, lsl r1

0800a770 <HttpDaemon::HandleGet()>:
 800a770:	b570      	push	{r4, r5, r6, lr}
 800a772:	6845      	ldr	r5, [r0, #4]
 800a774:	4604      	mov	r4, r0
 800a776:	493e      	ldr	r1, [pc, #248]	; (800a870 <HttpDaemon::HandleGet()+0x100>)
 800a778:	4628      	mov	r0, r5
 800a77a:	f7ff fe9c 	bl	800a4b6 <strcmp>
 800a77e:	b120      	cbz	r0, 800a78a <HttpDaemon::HandleGet()+0x1a>
 800a780:	4628      	mov	r0, r5
 800a782:	493c      	ldr	r1, [pc, #240]	; (800a874 <HttpDaemon::HandleGet()+0x104>)
 800a784:	f7ff fe97 	bl	800a4b6 <strcmp>
 800a788:	b950      	cbnz	r0, 800a7a0 <HttpDaemon::HandleGet()+0x30>
 800a78a:	4b3b      	ldr	r3, [pc, #236]	; (800a878 <HttpDaemon::HandleGet()+0x108>)
 800a78c:	493b      	ldr	r1, [pc, #236]	; (800a87c <HttpDaemon::HandleGet()+0x10c>)
 800a78e:	483c      	ldr	r0, [pc, #240]	; (800a880 <HttpDaemon::HandleGet()+0x110>)
 800a790:	6023      	str	r3, [r4, #0]
 800a792:	f000 fa67 	bl	800ac64 <get_file_content(char const*, char*)>
 800a796:	2800      	cmp	r0, #0
 800a798:	dd2f      	ble.n	800a7fa <HttpDaemon::HandleGet()+0x8a>
 800a79a:	8460      	strh	r0, [r4, #34]	; 0x22
 800a79c:	20c8      	movs	r0, #200	; 0xc8
 800a79e:	bd70      	pop	{r4, r5, r6, pc}
 800a7a0:	4628      	mov	r0, r5
 800a7a2:	4938      	ldr	r1, [pc, #224]	; (800a884 <HttpDaemon::HandleGet()+0x114>)
 800a7a4:	f7ff fe87 	bl	800a4b6 <strcmp>
 800a7a8:	b920      	cbnz	r0, 800a7b4 <HttpDaemon::HandleGet()+0x44>
 800a7aa:	4b37      	ldr	r3, [pc, #220]	; (800a888 <HttpDaemon::HandleGet()+0x118>)
 800a7ac:	4933      	ldr	r1, [pc, #204]	; (800a87c <HttpDaemon::HandleGet()+0x10c>)
 800a7ae:	4837      	ldr	r0, [pc, #220]	; (800a88c <HttpDaemon::HandleGet()+0x11c>)
 800a7b0:	6023      	str	r3, [r4, #0]
 800a7b2:	e7ee      	b.n	800a792 <HttpDaemon::HandleGet()+0x22>
 800a7b4:	4628      	mov	r0, r5
 800a7b6:	4936      	ldr	r1, [pc, #216]	; (800a890 <HttpDaemon::HandleGet()+0x120>)
 800a7b8:	f7ff fe7d 	bl	800a4b6 <strcmp>
 800a7bc:	b190      	cbz	r0, 800a7e4 <HttpDaemon::HandleGet()+0x74>
 800a7be:	4a35      	ldr	r2, [pc, #212]	; (800a894 <HttpDaemon::HandleGet()+0x124>)
 800a7c0:	1e6b      	subs	r3, r5, #1
 800a7c2:	1d69      	adds	r1, r5, #5
 800a7c4:	428b      	cmp	r3, r1
 800a7c6:	d112      	bne.n	800a7ee <HttpDaemon::HandleGet()+0x7e>
 800a7c8:	4b33      	ldr	r3, [pc, #204]	; (800a898 <HttpDaemon::HandleGet()+0x128>)
 800a7ca:	3506      	adds	r5, #6
 800a7cc:	4628      	mov	r0, r5
 800a7ce:	4933      	ldr	r1, [pc, #204]	; (800a89c <HttpDaemon::HandleGet()+0x12c>)
 800a7d0:	6023      	str	r3, [r4, #0]
 800a7d2:	f7ff fe70 	bl	800a4b6 <strcmp>
 800a7d6:	b998      	cbnz	r0, 800a800 <HttpDaemon::HandleGet()+0x90>
 800a7d8:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800a7dc:	4827      	ldr	r0, [pc, #156]	; (800a87c <HttpDaemon::HandleGet()+0x10c>)
 800a7de:	f000 f9c9 	bl	800ab74 <remoteconfig::json_get_list(char*, unsigned short)>
 800a7e2:	e7d8      	b.n	800a796 <HttpDaemon::HandleGet()+0x26>
 800a7e4:	4b2e      	ldr	r3, [pc, #184]	; (800a8a0 <HttpDaemon::HandleGet()+0x130>)
 800a7e6:	4925      	ldr	r1, [pc, #148]	; (800a87c <HttpDaemon::HandleGet()+0x10c>)
 800a7e8:	482e      	ldr	r0, [pc, #184]	; (800a8a4 <HttpDaemon::HandleGet()+0x134>)
 800a7ea:	6023      	str	r3, [r4, #0]
 800a7ec:	e7d1      	b.n	800a792 <HttpDaemon::HandleGet()+0x22>
 800a7ee:	f812 0b01 	ldrb.w	r0, [r2], #1
 800a7f2:	f813 6f01 	ldrb.w	r6, [r3, #1]!
 800a7f6:	4286      	cmp	r6, r0
 800a7f8:	d0e4      	beq.n	800a7c4 <HttpDaemon::HandleGet()+0x54>
 800a7fa:	f44f 70ca 	mov.w	r0, #404	; 0x194
 800a7fe:	e7ce      	b.n	800a79e <HttpDaemon::HandleGet()+0x2e>
 800a800:	4628      	mov	r0, r5
 800a802:	4929      	ldr	r1, [pc, #164]	; (800a8a8 <HttpDaemon::HandleGet()+0x138>)
 800a804:	f7ff fe57 	bl	800a4b6 <strcmp>
 800a808:	b928      	cbnz	r0, 800a816 <HttpDaemon::HandleGet()+0xa6>
 800a80a:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800a80e:	481b      	ldr	r0, [pc, #108]	; (800a87c <HttpDaemon::HandleGet()+0x10c>)
 800a810:	f000 f9e4 	bl	800abdc <remoteconfig::json_get_version(char*, unsigned short)>
 800a814:	e7bf      	b.n	800a796 <HttpDaemon::HandleGet()+0x26>
 800a816:	4628      	mov	r0, r5
 800a818:	4924      	ldr	r1, [pc, #144]	; (800a8ac <HttpDaemon::HandleGet()+0x13c>)
 800a81a:	f7ff fe4c 	bl	800a4b6 <strcmp>
 800a81e:	b948      	cbnz	r0, 800a834 <HttpDaemon::HandleGet()+0xc4>
 800a820:	4b23      	ldr	r3, [pc, #140]	; (800a8b0 <HttpDaemon::HandleGet()+0x140>)
 800a822:	681b      	ldr	r3, [r3, #0]
 800a824:	7bdb      	ldrb	r3, [r3, #15]
 800a826:	b303      	cbz	r3, 800a86a <HttpDaemon::HandleGet()+0xfa>
 800a828:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800a82c:	4813      	ldr	r0, [pc, #76]	; (800a87c <HttpDaemon::HandleGet()+0x10c>)
 800a82e:	f000 f9f1 	bl	800ac14 <remoteconfig::json_get_uptime(char*, unsigned short)>
 800a832:	e7b0      	b.n	800a796 <HttpDaemon::HandleGet()+0x26>
 800a834:	4628      	mov	r0, r5
 800a836:	491f      	ldr	r1, [pc, #124]	; (800a8b4 <HttpDaemon::HandleGet()+0x144>)
 800a838:	f7ff fe3d 	bl	800a4b6 <strcmp>
 800a83c:	b928      	cbnz	r0, 800a84a <HttpDaemon::HandleGet()+0xda>
 800a83e:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800a842:	480e      	ldr	r0, [pc, #56]	; (800a87c <HttpDaemon::HandleGet()+0x10c>)
 800a844:	f000 f9f6 	bl	800ac34 <remoteconfig::json_get_display(char*, unsigned short)>
 800a848:	e7a5      	b.n	800a796 <HttpDaemon::HandleGet()+0x26>
 800a84a:	4628      	mov	r0, r5
 800a84c:	491a      	ldr	r1, [pc, #104]	; (800a8b8 <HttpDaemon::HandleGet()+0x148>)
 800a84e:	f7ff fe32 	bl	800a4b6 <strcmp>
 800a852:	b928      	cbnz	r0, 800a860 <HttpDaemon::HandleGet()+0xf0>
 800a854:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800a858:	4808      	ldr	r0, [pc, #32]	; (800a87c <HttpDaemon::HandleGet()+0x10c>)
 800a85a:	f000 f9fb 	bl	800ac54 <remoteconfig::json_get_directory(char*, unsigned short)>
 800a85e:	e79a      	b.n	800a796 <HttpDaemon::HandleGet()+0x26>
 800a860:	4620      	mov	r0, r4
 800a862:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a866:	f7ff bf3f 	b.w	800a6e8 <HttpDaemon::HandleGetTxt()>
 800a86a:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800a86e:	e796      	b.n	800a79e <HttpDaemon::HandleGet()+0x2e>
 800a870:	080151a8 	stmdaeq	r1, {r3, r5, r7, r8, ip, lr}
 800a874:	08015181 	stmdaeq	r1, {r0, r7, r8, ip, lr}
 800a878:	0801539f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r7, r8, r9, ip, lr}
 800a87c:	20000118 	andcs	r0, r0, r8, lsl r1
 800a880:	08015182 	stmdaeq	r1, {r1, r7, r8, ip, lr}
 800a884:	0801518d 	stmdaeq	r1, {r0, r2, r3, r7, r8, ip, lr}
 800a888:	080153bf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r7, r8, r9, ip, lr}
 800a88c:	0801518e 	stmdaeq	r1, {r1, r2, r3, r7, r8, ip, lr}
 800a890:	08015199 	stmdaeq	r1, {r0, r3, r4, r7, r8, ip, lr}
 800a894:	080151a3 	stmdaeq	r1, {r0, r1, r5, r7, r8, ip, lr}
 800a898:	080153ff 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, ip, lr}
 800a89c:	080151aa 	stmdaeq	r1, {r1, r3, r5, r7, r8, ip, lr}
 800a8a0:	080153df 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r7, r8, r9, ip, lr}
 800a8a4:	0801519a 	stmdaeq	r1, {r1, r3, r4, r7, r8, ip, lr}
 800a8a8:	080151af 	stmdaeq	r1, {r0, r1, r2, r3, r5, r7, r8, ip, lr}
 800a8ac:	080151b7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r7, r8, ip, lr}
 800a8b0:	20000114 	andcs	r0, r0, r4, lsl r1
 800a8b4:	080151be 	stmdaeq	r1, {r1, r2, r3, r4, r5, r7, r8, ip, lr}
 800a8b8:	080151c6 	stmdaeq	r1, {r1, r2, r6, r7, r8, ip, lr}

0800a8bc <HttpDaemon::HandlePost(bool)>:
 800a8bc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a8be:	4604      	mov	r4, r0
 800a8c0:	2900      	cmp	r1, #0
 800a8c2:	f040 808a 	bne.w	800a9da <HttpDaemon::HandlePost(bool)+0x11e>
 800a8c6:	f890 3020 	ldrb.w	r3, [r0, #32]
 800a8ca:	2b00      	cmp	r3, #0
 800a8cc:	d05a      	beq.n	800a984 <HttpDaemon::HandlePost(bool)+0xc8>
 800a8ce:	6845      	ldr	r5, [r0, #4]
 800a8d0:	4944      	ldr	r1, [pc, #272]	; (800a9e4 <HttpDaemon::HandlePost(bool)+0x128>)
 800a8d2:	4628      	mov	r0, r5
 800a8d4:	f7ff fdef 	bl	800a4b6 <strcmp>
 800a8d8:	2800      	cmp	r0, #0
 800a8da:	bf0c      	ite	eq
 800a8dc:	2301      	moveq	r3, #1
 800a8de:	2300      	movne	r3, #0
 800a8e0:	f884 3021 	strb.w	r3, [r4, #33]	; 0x21
 800a8e4:	d052      	beq.n	800a98c <HttpDaemon::HandlePost(bool)+0xd0>
 800a8e6:	4628      	mov	r0, r5
 800a8e8:	493f      	ldr	r1, [pc, #252]	; (800a9e8 <HttpDaemon::HandlePost(bool)+0x12c>)
 800a8ea:	f7ff fde4 	bl	800a4b6 <strcmp>
 800a8ee:	2800      	cmp	r0, #0
 800a8f0:	d04c      	beq.n	800a98c <HttpDaemon::HandlePost(bool)+0xd0>
 800a8f2:	f44f 70ca 	mov.w	r0, #404	; 0x194
 800a8f6:	e047      	b.n	800a988 <HttpDaemon::HandlePost(bool)+0xcc>
 800a8f8:	493c      	ldr	r1, [pc, #240]	; (800a9ec <HttpDaemon::HandlePost(bool)+0x130>)
 800a8fa:	68a0      	ldr	r0, [r4, #8]
 800a8fc:	f10d 0207 	add.w	r2, sp, #7
 800a900:	f007 f9b8 	bl	8011c74 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a904:	b9d8      	cbnz	r0, 800a93e <HttpDaemon::HandlePost(bool)+0x82>
 800a906:	f89d 6007 	ldrb.w	r6, [sp, #7]
 800a90a:	4b39      	ldr	r3, [pc, #228]	; (800a9f0 <HttpDaemon::HandlePost(bool)+0x134>)
 800a90c:	fab6 f186 	clz	r1, r6
 800a910:	681d      	ldr	r5, [r3, #0]
 800a912:	0949      	lsrs	r1, r1, #5
 800a914:	69a8      	ldr	r0, [r5, #24]
 800a916:	b138      	cbz	r0, 800a928 <HttpDaemon::HandlePost(bool)+0x6c>
 800a918:	6803      	ldr	r3, [r0, #0]
 800a91a:	7429      	strb	r1, [r5, #16]
 800a91c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a91e:	4798      	blx	r3
 800a920:	b116      	cbz	r6, 800a928 <HttpDaemon::HandlePost(bool)+0x6c>
 800a922:	4b34      	ldr	r3, [pc, #208]	; (800a9f4 <HttpDaemon::HandlePost(bool)+0x138>)
 800a924:	681b      	ldr	r3, [r3, #0]
 800a926:	606b      	str	r3, [r5, #4]
 800a928:	4b33      	ldr	r3, [pc, #204]	; (800a9f8 <HttpDaemon::HandlePost(bool)+0x13c>)
 800a92a:	f240 519f 	movw	r1, #1439	; 0x59f
 800a92e:	4a33      	ldr	r2, [pc, #204]	; (800a9fc <HttpDaemon::HandlePost(bool)+0x140>)
 800a930:	4833      	ldr	r0, [pc, #204]	; (800aa00 <HttpDaemon::HandlePost(bool)+0x144>)
 800a932:	6023      	str	r3, [r4, #0]
 800a934:	f7fe fe44 	bl	80095c0 <snprintf>
 800a938:	8460      	strh	r0, [r4, #34]	; 0x22
 800a93a:	20c8      	movs	r0, #200	; 0xc8
 800a93c:	e024      	b.n	800a988 <HttpDaemon::HandlePost(bool)+0xcc>
 800a93e:	4931      	ldr	r1, [pc, #196]	; (800aa04 <HttpDaemon::HandlePost(bool)+0x148>)
 800a940:	68a0      	ldr	r0, [r4, #8]
 800a942:	f10d 0207 	add.w	r2, sp, #7
 800a946:	f007 f995 	bl	8011c74 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a94a:	b9d8      	cbnz	r0, 800a984 <HttpDaemon::HandlePost(bool)+0xc8>
 800a94c:	4b2e      	ldr	r3, [pc, #184]	; (800aa08 <HttpDaemon::HandlePost(bool)+0x14c>)
 800a94e:	6818      	ldr	r0, [r3, #0]
 800a950:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800a954:	b11b      	cbz	r3, 800a95e <HttpDaemon::HandlePost(bool)+0xa2>
 800a956:	2104      	movs	r1, #4
 800a958:	f007 fd1e 	bl	8012398 <LedBlink::SetMode(ledblink::Mode)>
 800a95c:	e7e4      	b.n	800a928 <HttpDaemon::HandlePost(bool)+0x6c>
 800a95e:	2102      	movs	r1, #2
 800a960:	e7fa      	b.n	800a958 <HttpDaemon::HandlePost(bool)+0x9c>
 800a962:	4b2a      	ldr	r3, [pc, #168]	; (800aa0c <HttpDaemon::HandlePost(bool)+0x150>)
 800a964:	2001      	movs	r0, #1
 800a966:	781d      	ldrb	r5, [r3, #0]
 800a968:	f7ff fdcc 	bl	800a504 <PropertiesConfig::EnableJSON(bool)>
 800a96c:	4b28      	ldr	r3, [pc, #160]	; (800aa10 <HttpDaemon::HandlePost(bool)+0x154>)
 800a96e:	8ca2      	ldrh	r2, [r4, #36]	; 0x24
 800a970:	6818      	ldr	r0, [r3, #0]
 800a972:	68a1      	ldr	r1, [r4, #8]
 800a974:	f005 0501 	and.w	r5, r5, #1
 800a978:	f7ff fa50 	bl	8009e1c <RemoteConfig::HandleSet(void*, unsigned int)>
 800a97c:	4628      	mov	r0, r5
 800a97e:	f7ff fdc1 	bl	800a504 <PropertiesConfig::EnableJSON(bool)>
 800a982:	e7d1      	b.n	800a928 <HttpDaemon::HandlePost(bool)+0x6c>
 800a984:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800a988:	b002      	add	sp, #8
 800a98a:	bd70      	pop	{r4, r5, r6, pc}
 800a98c:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 800a98e:	6962      	ldr	r2, [r4, #20]
 800a990:	429a      	cmp	r2, r3
 800a992:	dbd2      	blt.n	800a93a <HttpDaemon::HandlePost(bool)+0x7e>
 800a994:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 800a996:	2b00      	cmp	r3, #0
 800a998:	d0cf      	beq.n	800a93a <HttpDaemon::HandlePost(bool)+0x7e>
 800a99a:	f894 3021 	ldrb.w	r3, [r4, #33]	; 0x21
 800a99e:	2b00      	cmp	r3, #0
 800a9a0:	d0df      	beq.n	800a962 <HttpDaemon::HandlePost(bool)+0xa6>
 800a9a2:	2201      	movs	r2, #1
 800a9a4:	8ca1      	ldrh	r1, [r4, #36]	; 0x24
 800a9a6:	68a0      	ldr	r0, [r4, #8]
 800a9a8:	f006 fed6 	bl	8011758 <properties::convert_json_file(char*, unsigned short, bool)>
 800a9ac:	2800      	cmp	r0, #0
 800a9ae:	dde9      	ble.n	800a984 <HttpDaemon::HandlePost(bool)+0xc8>
 800a9b0:	4918      	ldr	r1, [pc, #96]	; (800aa14 <HttpDaemon::HandlePost(bool)+0x158>)
 800a9b2:	68a0      	ldr	r0, [r4, #8]
 800a9b4:	f10d 0207 	add.w	r2, sp, #7
 800a9b8:	f007 f95c 	bl	8011c74 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a9bc:	2800      	cmp	r0, #0
 800a9be:	d19b      	bne.n	800a8f8 <HttpDaemon::HandlePost(bool)+0x3c>
 800a9c0:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800a9c4:	2b00      	cmp	r3, #0
 800a9c6:	d0af      	beq.n	800a928 <HttpDaemon::HandlePost(bool)+0x6c>
 800a9c8:	4b11      	ldr	r3, [pc, #68]	; (800aa10 <HttpDaemon::HandlePost(bool)+0x154>)
 800a9ca:	681b      	ldr	r3, [r3, #0]
 800a9cc:	7b9b      	ldrb	r3, [r3, #14]
 800a9ce:	2b00      	cmp	r3, #0
 800a9d0:	d0d8      	beq.n	800a984 <HttpDaemon::HandlePost(bool)+0xc8>
 800a9d2:	4b11      	ldr	r3, [pc, #68]	; (800aa18 <HttpDaemon::HandlePost(bool)+0x15c>)
 800a9d4:	6818      	ldr	r0, [r3, #0]
 800a9d6:	f007 fd7f 	bl	80124d8 <Hardware::Reboot()>
 800a9da:	68c3      	ldr	r3, [r0, #12]
 800a9dc:	6083      	str	r3, [r0, #8]
 800a9de:	6943      	ldr	r3, [r0, #20]
 800a9e0:	8483      	strh	r3, [r0, #36]	; 0x24
 800a9e2:	e7da      	b.n	800a99a <HttpDaemon::HandlePost(bool)+0xde>
 800a9e4:	080151d0 	stmdaeq	r1, {r4, r6, r7, r8, ip, lr}
 800a9e8:	0801516c 	stmdaeq	r1, {r2, r3, r5, r6, r8, ip, lr}
 800a9ec:	080151be 	stmdaeq	r1, {r1, r2, r3, r4, r5, r7, r8, ip, lr}
 800a9f0:	2001a860 	andcs	sl, r1, r0, ror #16
 800a9f4:	2001a964 	andcs	sl, r1, r4, ror #18
 800a9f8:	0801539f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r7, r8, r9, ip, lr}
 800a9fc:	080151ed 	stmdaeq	r1, {r0, r2, r3, r5, r6, r7, r8, ip, lr}
 800aa00:	20000118 	andcs	r0, r0, r8, lsl r1
 800aa04:	080151e4 	stmdaeq	r1, {r2, r5, r6, r7, r8, ip, lr}
 800aa08:	2001a94c 	andcs	sl, r1, ip, asr #18
 800aa0c:	2001a85c 	andcs	sl, r1, ip, asr r8
 800aa10:	20000114 	andcs	r0, r0, r4, lsl r1
 800aa14:	080151dd 	stmdaeq	r1, {r0, r2, r3, r4, r6, r7, r8, ip, lr}
 800aa18:	2001a950 	andcs	sl, r1, r0, asr r9

0800aa1c <HttpDaemon::Run()>:
 800aa1c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800aa1e:	4e46      	ldr	r6, [pc, #280]	; (800ab38 <HttpDaemon::Run()+0x11c>)
 800aa20:	4604      	mov	r4, r0
 800aa22:	6901      	ldr	r1, [r0, #16]
 800aa24:	f100 020c 	add.w	r2, r0, #12
 800aa28:	6830      	ldr	r0, [r6, #0]
 800aa2a:	f005 fd7c 	bl	8010526 <Network::TcpRead(int, unsigned char const**)>
 800aa2e:	6160      	str	r0, [r4, #20]
 800aa30:	2800      	cmp	r0, #0
 800aa32:	d05b      	beq.n	800aaec <HttpDaemon::Run()+0xd0>
 800aa34:	69a3      	ldr	r3, [r4, #24]
 800aa36:	f5b3 7f02 	cmp.w	r3, #520	; 0x208
 800aa3a:	d159      	bne.n	800aaf0 <HttpDaemon::Run()+0xd4>
 800aa3c:	4620      	mov	r0, r4
 800aa3e:	f7ff fe1d 	bl	800a67c <HttpDaemon::ParseRequest()>
 800aa42:	28c8      	cmp	r0, #200	; 0xc8
 800aa44:	61a0      	str	r0, [r4, #24]
 800aa46:	d106      	bne.n	800aa56 <HttpDaemon::Run()+0x3a>
 800aa48:	69e3      	ldr	r3, [r4, #28]
 800aa4a:	2b00      	cmp	r3, #0
 800aa4c:	d142      	bne.n	800aad4 <HttpDaemon::Run()+0xb8>
 800aa4e:	4620      	mov	r0, r4
 800aa50:	f7ff fe8e 	bl	800a770 <HttpDaemon::HandleGet()>
 800aa54:	61a0      	str	r0, [r4, #24]
 800aa56:	69a3      	ldr	r3, [r4, #24]
 800aa58:	2bc8      	cmp	r3, #200	; 0xc8
 800aa5a:	d06b      	beq.n	800ab34 <HttpDaemon::Run()+0x118>
 800aa5c:	f5b3 7fcf 	cmp.w	r3, #414	; 0x19e
 800aa60:	d05e      	beq.n	800ab20 <HttpDaemon::Run()+0x104>
 800aa62:	dc4e      	bgt.n	800ab02 <HttpDaemon::Run()+0xe6>
 800aa64:	f5b3 7fca 	cmp.w	r3, #404	; 0x194
 800aa68:	d05c      	beq.n	800ab24 <HttpDaemon::Run()+0x108>
 800aa6a:	f240 129d 	movw	r2, #413	; 0x19d
 800aa6e:	4293      	cmp	r3, r2
 800aa70:	d05a      	beq.n	800ab28 <HttpDaemon::Run()+0x10c>
 800aa72:	4d32      	ldr	r5, [pc, #200]	; (800ab3c <HttpDaemon::Run()+0x120>)
 800aa74:	4a32      	ldr	r2, [pc, #200]	; (800ab40 <HttpDaemon::Run()+0x124>)
 800aa76:	f5b3 7fc8 	cmp.w	r3, #400	; 0x190
 800aa7a:	bf18      	it	ne
 800aa7c:	4615      	movne	r5, r2
 800aa7e:	4a31      	ldr	r2, [pc, #196]	; (800ab44 <HttpDaemon::Run()+0x128>)
 800aa80:	f240 519f 	movw	r1, #1439	; 0x59f
 800aa84:	6022      	str	r2, [r4, #0]
 800aa86:	e9cd 5500 	strd	r5, r5, [sp]
 800aa8a:	4a2f      	ldr	r2, [pc, #188]	; (800ab48 <HttpDaemon::Run()+0x12c>)
 800aa8c:	482f      	ldr	r0, [pc, #188]	; (800ab4c <HttpDaemon::Run()+0x130>)
 800aa8e:	f7fe fd97 	bl	80095c0 <snprintf>
 800aa92:	8460      	strh	r0, [r4, #34]	; 0x22
 800aa94:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 800aa96:	f240 519f 	movw	r1, #1439	; 0x59f
 800aa9a:	9303      	str	r3, [sp, #12]
 800aa9c:	6823      	ldr	r3, [r4, #0]
 800aa9e:	4a2c      	ldr	r2, [pc, #176]	; (800ab50 <HttpDaemon::Run()+0x134>)
 800aaa0:	9302      	str	r3, [sp, #8]
 800aaa2:	4b2c      	ldr	r3, [pc, #176]	; (800ab54 <HttpDaemon::Run()+0x138>)
 800aaa4:	68e0      	ldr	r0, [r4, #12]
 800aaa6:	e9cd 5300 	strd	r5, r3, [sp]
 800aaaa:	69a3      	ldr	r3, [r4, #24]
 800aaac:	f7fe fd88 	bl	80095c0 <snprintf>
 800aab0:	e9d4 2103 	ldrd	r2, r1, [r4, #12]
 800aab4:	b283      	uxth	r3, r0
 800aab6:	6830      	ldr	r0, [r6, #0]
 800aab8:	f005 fd39 	bl	801052e <Network::TcpWrite(int, unsigned char const*, unsigned short)>
 800aabc:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 800aabe:	4a23      	ldr	r2, [pc, #140]	; (800ab4c <HttpDaemon::Run()+0x130>)
 800aac0:	6921      	ldr	r1, [r4, #16]
 800aac2:	6830      	ldr	r0, [r6, #0]
 800aac4:	f005 fd33 	bl	801052e <Network::TcpWrite(int, unsigned char const*, unsigned short)>
 800aac8:	f44f 7202 	mov.w	r2, #520	; 0x208
 800aacc:	2302      	movs	r3, #2
 800aace:	e9c4 2306 	strd	r2, r3, [r4, #24]
 800aad2:	e00b      	b.n	800aaec <HttpDaemon::Run()+0xd0>
 800aad4:	2b01      	cmp	r3, #1
 800aad6:	d1be      	bne.n	800aa56 <HttpDaemon::Run()+0x3a>
 800aad8:	2100      	movs	r1, #0
 800aada:	4620      	mov	r0, r4
 800aadc:	f7ff feee 	bl	800a8bc <HttpDaemon::HandlePost(bool)>
 800aae0:	28c8      	cmp	r0, #200	; 0xc8
 800aae2:	61a0      	str	r0, [r4, #24]
 800aae4:	d1b7      	bne.n	800aa56 <HttpDaemon::Run()+0x3a>
 800aae6:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 800aae8:	2b00      	cmp	r3, #0
 800aaea:	d1b4      	bne.n	800aa56 <HttpDaemon::Run()+0x3a>
 800aaec:	b004      	add	sp, #16
 800aaee:	bd70      	pop	{r4, r5, r6, pc}
 800aaf0:	2bc8      	cmp	r3, #200	; 0xc8
 800aaf2:	d1b0      	bne.n	800aa56 <HttpDaemon::Run()+0x3a>
 800aaf4:	69e1      	ldr	r1, [r4, #28]
 800aaf6:	2901      	cmp	r1, #1
 800aaf8:	d1ad      	bne.n	800aa56 <HttpDaemon::Run()+0x3a>
 800aafa:	4620      	mov	r0, r4
 800aafc:	f7ff fede 	bl	800a8bc <HttpDaemon::HandlePost(bool)>
 800ab00:	e7a8      	b.n	800aa54 <HttpDaemon::Run()+0x38>
 800ab02:	f240 12f5 	movw	r2, #501	; 0x1f5
 800ab06:	4293      	cmp	r3, r2
 800ab08:	d010      	beq.n	800ab2c <HttpDaemon::Run()+0x110>
 800ab0a:	f240 12f9 	movw	r2, #505	; 0x1f9
 800ab0e:	4293      	cmp	r3, r2
 800ab10:	d00e      	beq.n	800ab30 <HttpDaemon::Run()+0x114>
 800ab12:	4d11      	ldr	r5, [pc, #68]	; (800ab58 <HttpDaemon::Run()+0x13c>)
 800ab14:	4a0a      	ldr	r2, [pc, #40]	; (800ab40 <HttpDaemon::Run()+0x124>)
 800ab16:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800ab1a:	bf18      	it	ne
 800ab1c:	4615      	movne	r5, r2
 800ab1e:	e7ae      	b.n	800aa7e <HttpDaemon::Run()+0x62>
 800ab20:	4d0e      	ldr	r5, [pc, #56]	; (800ab5c <HttpDaemon::Run()+0x140>)
 800ab22:	e7ac      	b.n	800aa7e <HttpDaemon::Run()+0x62>
 800ab24:	4d0e      	ldr	r5, [pc, #56]	; (800ab60 <HttpDaemon::Run()+0x144>)
 800ab26:	e7aa      	b.n	800aa7e <HttpDaemon::Run()+0x62>
 800ab28:	4d0e      	ldr	r5, [pc, #56]	; (800ab64 <HttpDaemon::Run()+0x148>)
 800ab2a:	e7a8      	b.n	800aa7e <HttpDaemon::Run()+0x62>
 800ab2c:	4d0e      	ldr	r5, [pc, #56]	; (800ab68 <HttpDaemon::Run()+0x14c>)
 800ab2e:	e7a6      	b.n	800aa7e <HttpDaemon::Run()+0x62>
 800ab30:	4d0e      	ldr	r5, [pc, #56]	; (800ab6c <HttpDaemon::Run()+0x150>)
 800ab32:	e7a4      	b.n	800aa7e <HttpDaemon::Run()+0x62>
 800ab34:	4d0e      	ldr	r5, [pc, #56]	; (800ab70 <HttpDaemon::Run()+0x154>)
 800ab36:	e7ad      	b.n	800aa94 <HttpDaemon::Run()+0x78>
 800ab38:	2001a288 	andcs	sl, r1, r8, lsl #5
 800ab3c:	08015249 	stmdaeq	r1, {r0, r3, r6, r9, ip, lr}
 800ab40:	080152d0 	stmdaeq	r1, {r4, r6, r7, r9, ip, lr}
 800ab44:	0801539f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r7, r8, r9, ip, lr}
 800ab48:	080152e1 	stmdaeq	r1, {r0, r5, r6, r7, r9, ip, lr}
 800ab4c:	20000118 	andcs	r0, r0, r8, lsl r1
 800ab50:	0801533c 	stmdaeq	r1, {r2, r3, r4, r5, r8, r9, ip, lr}
 800ab54:	08015394 	stmdaeq	r1, {r2, r4, r7, r8, r9, ip, lr}
 800ab58:	0801528d 	stmdaeq	r1, {r0, r2, r3, r7, r9, ip, lr}
 800ab5c:	08015278 	stmdaeq	r1, {r3, r4, r5, r6, r9, ip, lr}
 800ab60:	08015255 	stmdaeq	r1, {r0, r2, r4, r6, r9, ip, lr}
 800ab64:	0801525f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r9, ip, lr}
 800ab68:	080152a3 	stmdaeq	r1, {r0, r1, r5, r7, r9, ip, lr}
 800ab6c:	080152ba 	stmdaeq	r1, {r1, r3, r4, r5, r7, r9, ip, lr}
 800ab70:	080152de 	stmdaeq	r1, {r1, r2, r3, r4, r6, r7, r9, ip, lr}

0800ab74 <remoteconfig::json_get_list(char*, unsigned short)>:
 800ab74:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ab78:	4b14      	ldr	r3, [pc, #80]	; (800abcc <remoteconfig::json_get_list(char*, unsigned short)+0x58>)
 800ab7a:	f8df 8054 	ldr.w	r8, [pc, #84]	; 800abd0 <remoteconfig::json_get_list(char*, unsigned short)+0x5c>
 800ab7e:	681b      	ldr	r3, [r3, #0]
 800ab80:	b088      	sub	sp, #32
 800ab82:	4605      	mov	r5, r0
 800ab84:	f8d8 0000 	ldr.w	r0, [r8]
 800ab88:	695c      	ldr	r4, [r3, #20]
 800ab8a:	460e      	mov	r6, r1
 800ab8c:	f7ff f83e 	bl	8009c0c <RemoteConfig::GetStringNode() const>
 800ab90:	4607      	mov	r7, r0
 800ab92:	f8d8 0000 	ldr.w	r0, [r8]
 800ab96:	f7ff f845 	bl	8009c24 <RemoteConfig::GetStringOutput() const>
 800ab9a:	4b0e      	ldr	r3, [pc, #56]	; (800abd4 <remoteconfig::json_get_list(char*, unsigned short)+0x60>)
 800ab9c:	4631      	mov	r1, r6
 800ab9e:	7a1a      	ldrb	r2, [r3, #8]
 800aba0:	3309      	adds	r3, #9
 800aba2:	9303      	str	r3, [sp, #12]
 800aba4:	0e23      	lsrs	r3, r4, #24
 800aba6:	9302      	str	r3, [sp, #8]
 800aba8:	f3c4 4307 	ubfx	r3, r4, #16, #8
 800abac:	9301      	str	r3, [sp, #4]
 800abae:	f3c4 2307 	ubfx	r3, r4, #8, #8
 800abb2:	e9cd 0205 	strd	r0, r2, [sp, #20]
 800abb6:	9300      	str	r3, [sp, #0]
 800abb8:	4628      	mov	r0, r5
 800abba:	4a07      	ldr	r2, [pc, #28]	; (800abd8 <remoteconfig::json_get_list(char*, unsigned short)+0x64>)
 800abbc:	9704      	str	r7, [sp, #16]
 800abbe:	b2e3      	uxtb	r3, r4
 800abc0:	f7fe fcfe 	bl	80095c0 <snprintf>
 800abc4:	b280      	uxth	r0, r0
 800abc6:	b008      	add	sp, #32
 800abc8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800abcc:	2001a288 	andcs	sl, r1, r8, lsl #5
 800abd0:	20000114 	andcs	r0, r0, r4, lsl r1
 800abd4:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 800abd8:	08015479 	stmdaeq	r1, {r0, r3, r4, r5, r6, sl, ip, lr}

0800abdc <remoteconfig::json_get_version(char*, unsigned short)>:
 800abdc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800abde:	2208      	movs	r2, #8
 800abe0:	4b09      	ldr	r3, [pc, #36]	; (800ac08 <remoteconfig::json_get_version(char*, unsigned short)+0x2c>)
 800abe2:	9204      	str	r2, [sp, #16]
 800abe4:	f1a3 020b 	sub.w	r2, r3, #11
 800abe8:	9203      	str	r2, [sp, #12]
 800abea:	220b      	movs	r2, #11
 800abec:	9202      	str	r2, [sp, #8]
 800abee:	4a07      	ldr	r2, [pc, #28]	; (800ac0c <remoteconfig::json_get_version(char*, unsigned short)+0x30>)
 800abf0:	9305      	str	r3, [sp, #20]
 800abf2:	3b0e      	subs	r3, #14
 800abf4:	9201      	str	r2, [sp, #4]
 800abf6:	9300      	str	r3, [sp, #0]
 800abf8:	4a05      	ldr	r2, [pc, #20]	; (800ac10 <remoteconfig::json_get_version(char*, unsigned short)+0x34>)
 800abfa:	2303      	movs	r3, #3
 800abfc:	f7fe fce0 	bl	80095c0 <snprintf>
 800ac00:	b280      	uxth	r0, r0
 800ac02:	b007      	add	sp, #28
 800ac04:	f85d fb04 	ldr.w	pc, [sp], #4
 800ac08:	2001a8fe 	strdcs	sl, [r1], -lr
 800ac0c:	08015394 	stmdaeq	r1, {r2, r4, r7, r8, r9, ip, lr}
 800ac10:	080154d8 	stmdaeq	r1, {r3, r4, r6, r7, sl, ip, lr}

0800ac14 <remoteconfig::json_get_uptime(char*, unsigned short)>:
 800ac14:	b508      	push	{r3, lr}
 800ac16:	4b05      	ldr	r3, [pc, #20]	; (800ac2c <remoteconfig::json_get_uptime(char*, unsigned short)+0x18>)
 800ac18:	681a      	ldr	r2, [r3, #0]
 800ac1a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800ac1e:	fbb2 f3f3 	udiv	r3, r2, r3
 800ac22:	4a03      	ldr	r2, [pc, #12]	; (800ac30 <remoteconfig::json_get_uptime(char*, unsigned short)+0x1c>)
 800ac24:	f7fe fccc 	bl	80095c0 <snprintf>
 800ac28:	b280      	uxth	r0, r0
 800ac2a:	bd08      	pop	{r3, pc}
 800ac2c:	2001a964 	andcs	sl, r1, r4, ror #18
 800ac30:	0801551e 	stmdaeq	r1, {r1, r2, r3, r4, r8, sl, ip, lr}

0800ac34 <remoteconfig::json_get_display(char*, unsigned short)>:
 800ac34:	b508      	push	{r3, lr}
 800ac36:	4b05      	ldr	r3, [pc, #20]	; (800ac4c <remoteconfig::json_get_display(char*, unsigned short)+0x18>)
 800ac38:	4a05      	ldr	r2, [pc, #20]	; (800ac50 <remoteconfig::json_get_display(char*, unsigned short)+0x1c>)
 800ac3a:	681b      	ldr	r3, [r3, #0]
 800ac3c:	7c1b      	ldrb	r3, [r3, #16]
 800ac3e:	f083 0301 	eor.w	r3, r3, #1
 800ac42:	f7fe fcbd 	bl	80095c0 <snprintf>
 800ac46:	b280      	uxth	r0, r0
 800ac48:	bd08      	pop	{r3, pc}
 800ac4a:	bf00      	nop
 800ac4c:	2001a860 	andcs	sl, r1, r0, ror #16
 800ac50:	0801552d 	stmdaeq	r1, {r0, r2, r3, r5, r8, sl, ip, lr}

0800ac54 <remoteconfig::json_get_directory(char*, unsigned short)>:
 800ac54:	b508      	push	{r3, lr}
 800ac56:	4a02      	ldr	r2, [pc, #8]	; (800ac60 <remoteconfig::json_get_directory(char*, unsigned short)+0xc>)
 800ac58:	f7fe fcb2 	bl	80095c0 <snprintf>
 800ac5c:	b280      	uxth	r0, r0
 800ac5e:	bd08      	pop	{r3, pc}
 800ac60:	0801553c 	stmdaeq	r1, {r2, r3, r4, r5, r8, sl, ip, lr}

0800ac64 <get_file_content(char const*, char*)>:
 800ac64:	2300      	movs	r3, #0
 800ac66:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ac68:	4a10      	ldr	r2, [pc, #64]	; (800acac <get_file_content(char const*, char*)+0x48>)
 800ac6a:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 800ac6e:	1e46      	subs	r6, r0, #1
 800ac70:	3c01      	subs	r4, #1
 800ac72:	f816 7f01 	ldrb.w	r7, [r6, #1]!
 800ac76:	f814 5f01 	ldrb.w	r5, [r4, #1]!
 800ac7a:	42bd      	cmp	r5, r7
 800ac7c:	d005      	beq.n	800ac8a <get_file_content(char const*, char*)+0x26>
 800ac7e:	3301      	adds	r3, #1
 800ac80:	2b03      	cmp	r3, #3
 800ac82:	d1f2      	bne.n	800ac6a <get_file_content(char const*, char*)+0x6>
 800ac84:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800ac88:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ac8a:	2d00      	cmp	r5, #0
 800ac8c:	d1f1      	bne.n	800ac72 <get_file_content(char const*, char*)+0xe>
 800ac8e:	4608      	mov	r0, r1
 800ac90:	eb02 02c3 	add.w	r2, r2, r3, lsl #3
 800ac94:	6853      	ldr	r3, [r2, #4]
 800ac96:	3b01      	subs	r3, #1
 800ac98:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800ac9c:	f800 2b01 	strb.w	r2, [r0], #1
 800aca0:	2a00      	cmp	r2, #0
 800aca2:	d1f9      	bne.n	800ac98 <get_file_content(char const*, char*)+0x34>
 800aca4:	1a40      	subs	r0, r0, r1
 800aca6:	3801      	subs	r0, #1
 800aca8:	e7ee      	b.n	800ac88 <get_file_content(char const*, char*)+0x24>
 800acaa:	bf00      	nop
 800acac:	08015864 	stmdaeq	r1, {r2, r5, r6, fp, ip, lr}

0800acb0 <memcpy.isra.0>:
 800acb0:	3801      	subs	r0, #1
 800acb2:	440a      	add	r2, r1
 800acb4:	4291      	cmp	r1, r2
 800acb6:	d100      	bne.n	800acba <memcpy.isra.0+0xa>
 800acb8:	4770      	bx	lr
 800acba:	f811 3b01 	ldrb.w	r3, [r1], #1
 800acbe:	f800 3f01 	strb.w	r3, [r0, #1]!
 800acc2:	e7f7      	b.n	800acb4 <memcpy.isra.0+0x4>

0800acc4 <lightset::Data::Get()>:
 800acc4:	4b03      	ldr	r3, [pc, #12]	; (800acd4 <lightset::Data::Get()+0x10>)
 800acc6:	4804      	ldr	r0, [pc, #16]	; (800acd8 <lightset::Data::Get()+0x14>)
 800acc8:	681a      	ldr	r2, [r3, #0]
 800acca:	07d2      	lsls	r2, r2, #31
 800accc:	bf5c      	itt	pl
 800acce:	2201      	movpl	r2, #1
 800acd0:	601a      	strpl	r2, [r3, #0]
 800acd2:	4770      	bx	lr
 800acd4:	200006b8 			; <UNDEFINED> instruction: 0x200006b8
 800acd8:	200006bc 			; <UNDEFINED> instruction: 0x200006bc

0800acdc <PixelPusher::PixelPusher()>:
 800acdc:	4b1f      	ldr	r3, [pc, #124]	; (800ad5c <PixelPusher::PixelPusher()+0x80>)
 800acde:	b510      	push	{r4, lr}
 800ace0:	681b      	ldr	r3, [r3, #0]
 800ace2:	4a1f      	ldr	r2, [pc, #124]	; (800ad60 <PixelPusher::PixelPusher()+0x84>)
 800ace4:	6003      	str	r3, [r0, #0]
 800ace6:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800acea:	f100 012c 	add.w	r1, r0, #44	; 0x2c
 800acee:	e9c0 3301 	strd	r3, r3, [r0, #4]
 800acf2:	2300      	movs	r3, #0
 800acf4:	6010      	str	r0, [r2, #0]
 800acf6:	460a      	mov	r2, r1
 800acf8:	4604      	mov	r4, r0
 800acfa:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800acfe:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800ad02:	e9c0 3307 	strd	r3, r3, [r0, #28]
 800ad06:	f880 3024 	strb.w	r3, [r0, #36]	; 0x24
 800ad0a:	6283      	str	r3, [r0, #40]	; 0x28
 800ad0c:	f8c0 3080 	str.w	r3, [r0, #128]	; 0x80
 800ad10:	3080      	adds	r0, #128	; 0x80
 800ad12:	4290      	cmp	r0, r2
 800ad14:	d11e      	bne.n	800ad54 <PixelPusher::PixelPusher()+0x78>
 800ad16:	4b13      	ldr	r3, [pc, #76]	; (800ad64 <PixelPusher::PixelPusher()+0x88>)
 800ad18:	6818      	ldr	r0, [r3, #0]
 800ad1a:	f005 f8fd 	bl	800ff18 <Network::MacAddressCopyTo(unsigned char*)>
 800ad1e:	f44f 7381 	mov.w	r3, #258	; 0x102
 800ad22:	86e3      	strh	r3, [r4, #54]	; 0x36
 800ad24:	2303      	movs	r3, #3
 800ad26:	8723      	strh	r3, [r4, #56]	; 0x38
 800ad28:	2379      	movs	r3, #121	; 0x79
 800ad2a:	87e3      	strh	r3, [r4, #62]	; 0x3e
 800ad2c:	4b0e      	ldr	r3, [pc, #56]	; (800ad68 <PixelPusher::PixelPusher()+0x8c>)
 800ad2e:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800ad32:	6423      	str	r3, [r4, #64]	; 0x40
 800ad34:	2301      	movs	r3, #1
 800ad36:	f241 32d6 	movw	r2, #5078	; 0x13d6
 800ad3a:	e9c4 1312 	strd	r1, r3, [r4, #72]	; 0x48
 800ad3e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800ad42:	f8a4 3072 	strh.w	r3, [r4, #114]	; 0x72
 800ad46:	2300      	movs	r3, #0
 800ad48:	4620      	mov	r0, r4
 800ad4a:	f8a4 2060 	strh.w	r2, [r4, #96]	; 0x60
 800ad4e:	f8a4 3074 	strh.w	r3, [r4, #116]	; 0x74
 800ad52:	bd10      	pop	{r4, pc}
 800ad54:	f802 3b01 	strb.w	r3, [r2], #1
 800ad58:	e7db      	b.n	800ad12 <PixelPusher::PixelPusher()+0x36>
 800ad5a:	bf00      	nop
 800ad5c:	2001a964 	andcs	sl, r1, r4, ror #18
 800ad60:	2000971c 	andcs	r9, r0, ip, lsl r7
 800ad64:	2001a288 	andcs	sl, r1, r8, lsl #5
 800ad68:	00989680 	addseq	r9, r8, r0, lsl #13

0800ad6c <PixelPusher::Start()>:
 800ad6c:	b538      	push	{r3, r4, r5, lr}
 800ad6e:	4d10      	ldr	r5, [pc, #64]	; (800adb0 <PixelPusher::Start()+0x44>)
 800ad70:	4604      	mov	r4, r0
 800ad72:	f641 41a3 	movw	r1, #7331	; 0x1ca3
 800ad76:	6828      	ldr	r0, [r5, #0]
 800ad78:	f005 f8c8 	bl	800ff0c <Network::Begin(unsigned short)>
 800ad7c:	f241 31d6 	movw	r1, #5078	; 0x13d6
 800ad80:	6060      	str	r0, [r4, #4]
 800ad82:	6828      	ldr	r0, [r5, #0]
 800ad84:	f005 f8c2 	bl	800ff0c <Network::Begin(unsigned short)>
 800ad88:	6a22      	ldr	r2, [r4, #32]
 800ad8a:	6923      	ldr	r3, [r4, #16]
 800ad8c:	f884 2044 	strb.w	r2, [r4, #68]	; 0x44
 800ad90:	f8a4 206c 	strh.w	r2, [r4, #108]	; 0x6c
 800ad94:	2200      	movs	r2, #0
 800ad96:	f8a4 3046 	strh.w	r3, [r4, #70]	; 0x46
 800ad9a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 800ad9e:	3301      	adds	r3, #1
 800ada0:	60a0      	str	r0, [r4, #8]
 800ada2:	f8a4 206e 	strh.w	r2, [r4, #110]	; 0x6e
 800ada6:	f8a4 2070 	strh.w	r2, [r4, #112]	; 0x70
 800adaa:	6163      	str	r3, [r4, #20]
 800adac:	bd38      	pop	{r3, r4, r5, pc}
 800adae:	bf00      	nop
 800adb0:	2001a288 	andcs	sl, r1, r8, lsl #5

0800adb4 <PixelPusher::Stop()>:
 800adb4:	b570      	push	{r4, r5, r6, lr}
 800adb6:	4604      	mov	r4, r0
 800adb8:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 800adbc:	4e06      	ldr	r6, [pc, #24]	; (800add8 <PixelPusher::Stop()+0x24>)
 800adbe:	f241 31d6 	movw	r1, #5078	; 0x13d6
 800adc2:	6830      	ldr	r0, [r6, #0]
 800adc4:	f005 f8a5 	bl	800ff12 <Network::End(unsigned short)>
 800adc8:	f641 41a3 	movw	r1, #7331	; 0x1ca3
 800adcc:	6830      	ldr	r0, [r6, #0]
 800adce:	60a5      	str	r5, [r4, #8]
 800add0:	f005 f89f 	bl	800ff12 <Network::End(unsigned short)>
 800add4:	6065      	str	r5, [r4, #4]
 800add6:	bd70      	pop	{r4, r5, r6, pc}
 800add8:	2001a288 	andcs	sl, r1, r8, lsl #5

0800addc <PixelPusher::Run()>:
 800addc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ade0:	b08b      	sub	sp, #44	; 0x2c
 800ade2:	4604      	mov	r4, r0
 800ade4:	f100 0180 	add.w	r1, r0, #128	; 0x80
 800ade8:	f10d 031a 	add.w	r3, sp, #26
 800adec:	7a00      	ldrb	r0, [r0, #8]
 800adee:	aa07      	add	r2, sp, #28
 800adf0:	f004 fb9e 	bl	800f530 <udp_recv2>
 800adf4:	2803      	cmp	r0, #3
 800adf6:	60e0      	str	r0, [r4, #12]
 800adf8:	d81f      	bhi.n	800ae3a <PixelPusher::Run()+0x5e>
 800adfa:	4b56      	ldr	r3, [pc, #344]	; (800af54 <PixelPusher::Run()+0x178>)
 800adfc:	681a      	ldr	r2, [r3, #0]
 800adfe:	6823      	ldr	r3, [r4, #0]
 800ae00:	1ad3      	subs	r3, r2, r3
 800ae02:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800ae06:	d315      	bcc.n	800ae34 <PixelPusher::Run()+0x58>
 800ae08:	4620      	mov	r0, r4
 800ae0a:	4b53      	ldr	r3, [pc, #332]	; (800af58 <PixelPusher::Run()+0x17c>)
 800ae0c:	f840 2b32 	str.w	r2, [r0], #50
 800ae10:	681b      	ldr	r3, [r3, #0]
 800ae12:	2204      	movs	r2, #4
 800ae14:	695b      	ldr	r3, [r3, #20]
 800ae16:	a909      	add	r1, sp, #36	; 0x24
 800ae18:	9309      	str	r3, [sp, #36]	; 0x24
 800ae1a:	f7ff ff49 	bl	800acb0 <memcpy.isra.0>
 800ae1e:	f641 43a3 	movw	r3, #7331	; 0x1ca3
 800ae22:	2254      	movs	r2, #84	; 0x54
 800ae24:	9300      	str	r3, [sp, #0]
 800ae26:	7920      	ldrb	r0, [r4, #4]
 800ae28:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800ae2c:	f104 012c 	add.w	r1, r4, #44	; 0x2c
 800ae30:	f004 fba4 	bl	800f57c <udp_send>
 800ae34:	b00b      	add	sp, #44	; 0x2c
 800ae36:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ae3a:	f8d4 6080 	ldr.w	r6, [r4, #128]	; 0x80
 800ae3e:	2204      	movs	r2, #4
 800ae40:	4631      	mov	r1, r6
 800ae42:	a808      	add	r0, sp, #32
 800ae44:	f7ff ff34 	bl	800acb0 <memcpy.isra.0>
 800ae48:	68e3      	ldr	r3, [r4, #12]
 800ae4a:	1d35      	adds	r5, r6, #4
 800ae4c:	3b04      	subs	r3, #4
 800ae4e:	2b0f      	cmp	r3, #15
 800ae50:	60e3      	str	r3, [r4, #12]
 800ae52:	d90a      	bls.n	800ae6a <PixelPusher::Run()+0x8e>
 800ae54:	4941      	ldr	r1, [pc, #260]	; (800af5c <PixelPusher::Run()+0x180>)
 800ae56:	1cf2      	adds	r2, r6, #3
 800ae58:	3613      	adds	r6, #19
 800ae5a:	42b2      	cmp	r2, r6
 800ae5c:	d0ea      	beq.n	800ae34 <PixelPusher::Run()+0x58>
 800ae5e:	f811 0b01 	ldrb.w	r0, [r1], #1
 800ae62:	f812 7f01 	ldrb.w	r7, [r2, #1]!
 800ae66:	4287      	cmp	r7, r0
 800ae68:	d0f7      	beq.n	800ae5a <PixelPusher::Run()+0x7e>
 800ae6a:	6962      	ldr	r2, [r4, #20]
 800ae6c:	fbb3 f1f2 	udiv	r1, r3, r2
 800ae70:	fb02 3311 	mls	r3, r2, r1, r3
 800ae74:	9103      	str	r1, [sp, #12]
 800ae76:	2b00      	cmp	r3, #0
 800ae78:	d1dc      	bne.n	800ae34 <PixelPusher::Run()+0x58>
 800ae7a:	9302      	str	r3, [sp, #8]
 800ae7c:	f104 030c 	add.w	r3, r4, #12
 800ae80:	9304      	str	r3, [sp, #16]
 800ae82:	e9dd 3202 	ldrd	r3, r2, [sp, #8]
 800ae86:	4293      	cmp	r3, r2
 800ae88:	d0d4      	beq.n	800ae34 <PixelPusher::Run()+0x58>
 800ae8a:	f895 9000 	ldrb.w	r9, [r5]
 800ae8e:	69a3      	ldr	r3, [r4, #24]
 800ae90:	fb03 f909 	mul.w	r9, r3, r9
 800ae94:	464f      	mov	r7, r9
 800ae96:	69a2      	ldr	r2, [r4, #24]
 800ae98:	ab09      	add	r3, sp, #36	; 0x24
 800ae9a:	444a      	add	r2, r9
 800ae9c:	42ba      	cmp	r2, r7
 800ae9e:	6962      	ldr	r2, [r4, #20]
 800aea0:	d901      	bls.n	800aea6 <PixelPusher::Run()+0xca>
 800aea2:	68e1      	ldr	r1, [r4, #12]
 800aea4:	b939      	cbnz	r1, 800aeb6 <PixelPusher::Run()+0xda>
 800aea6:	69e3      	ldr	r3, [r4, #28]
 800aea8:	4415      	add	r5, r2
 800aeaa:	42bb      	cmp	r3, r7
 800aeac:	d04c      	beq.n	800af48 <PixelPusher::Run()+0x16c>
 800aeae:	9b02      	ldr	r3, [sp, #8]
 800aeb0:	3301      	adds	r3, #1
 800aeb2:	9302      	str	r3, [sp, #8]
 800aeb4:	e7e5      	b.n	800ae82 <PixelPusher::Run()+0xa6>
 800aeb6:	9804      	ldr	r0, [sp, #16]
 800aeb8:	f5b1 7fff 	cmp.w	r1, #510	; 0x1fe
 800aebc:	4928      	ldr	r1, [pc, #160]	; (800af60 <PixelPusher::Run()+0x184>)
 800aebe:	bf38      	it	cc
 800aec0:	4601      	movcc	r1, r0
 800aec2:	6808      	ldr	r0, [r1, #0]
 800aec4:	3a01      	subs	r2, #1
 800aec6:	4282      	cmp	r2, r0
 800aec8:	bf98      	it	ls
 800aeca:	4619      	movls	r1, r3
 800aecc:	9209      	str	r2, [sp, #36]	; 0x24
 800aece:	f8d1 8000 	ldr.w	r8, [r1]
 800aed2:	f7ff fef7 	bl	800acc4 <lightset::Data::Get()>
 800aed6:	f240 6604 	movw	r6, #1540	; 0x604
 800aeda:	4682      	mov	sl, r0
 800aedc:	437e      	muls	r6, r7
 800aede:	f105 0b01 	add.w	fp, r5, #1
 800aee2:	4430      	add	r0, r6
 800aee4:	4642      	mov	r2, r8
 800aee6:	4659      	mov	r1, fp
 800aee8:	9005      	str	r0, [sp, #20]
 800aeea:	f7ff fee1 	bl	800acb0 <memcpy.isra.0>
 800aeee:	9805      	ldr	r0, [sp, #20]
 800aef0:	4642      	mov	r2, r8
 800aef2:	f8c0 8600 	str.w	r8, [r0, #1536]	; 0x600
 800aef6:	f506 6080 	add.w	r0, r6, #1024	; 0x400
 800aefa:	4659      	mov	r1, fp
 800aefc:	4450      	add	r0, sl
 800aefe:	f7ff fed7 	bl	800acb0 <memcpy.isra.0>
 800af02:	68e2      	ldr	r2, [r4, #12]
 800af04:	4445      	add	r5, r8
 800af06:	eba2 0208 	sub.w	r2, r2, r8
 800af0a:	60e2      	str	r2, [r4, #12]
 800af0c:	3701      	adds	r7, #1
 800af0e:	e7c2      	b.n	800ae96 <PixelPusher::Run()+0xba>
 800af10:	6aa7      	ldr	r7, [r4, #40]	; 0x28
 800af12:	f7ff fed7 	bl	800acc4 <lightset::Data::Get()>
 800af16:	fb08 f60b 	mul.w	r6, r8, fp
 800af1a:	683b      	ldr	r3, [r7, #0]
 800af1c:	1981      	adds	r1, r0, r6
 800af1e:	f506 6280 	add.w	r2, r6, #1024	; 0x400
 800af22:	4402      	add	r2, r0
 800af24:	f8d3 a010 	ldr.w	sl, [r3, #16]
 800af28:	4638      	mov	r0, r7
 800af2a:	f8d1 3600 	ldr.w	r3, [r1, #1536]	; 0x600
 800af2e:	4659      	mov	r1, fp
 800af30:	47d0      	blx	sl
 800af32:	f7ff fec7 	bl	800acc4 <lightset::Data::Get()>
 800af36:	4430      	add	r0, r6
 800af38:	f8c0 9600 	str.w	r9, [r0, #1536]	; 0x600
 800af3c:	f10b 0b01 	add.w	fp, fp, #1
 800af40:	69e3      	ldr	r3, [r4, #28]
 800af42:	455b      	cmp	r3, fp
 800af44:	d8e4      	bhi.n	800af10 <PixelPusher::Run()+0x134>
 800af46:	e7b2      	b.n	800aeae <PixelPusher::Run()+0xd2>
 800af48:	f04f 0b00 	mov.w	fp, #0
 800af4c:	f240 6804 	movw	r8, #1540	; 0x604
 800af50:	46d9      	mov	r9, fp
 800af52:	e7f5      	b.n	800af40 <PixelPusher::Run()+0x164>
 800af54:	2001a964 	andcs	sl, r1, r4, ror #18
 800af58:	2001a288 	andcs	sl, r1, r8, lsl #5
 800af5c:	08015dfd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, r8, sl, fp, ip, lr}
 800af60:	08015e10 	stmdaeq	r1, {r4, r9, sl, fp, ip, lr}

0800af64 <PixelPusher::Print()>:
 800af64:	b510      	push	{r4, lr}
 800af66:	4604      	mov	r4, r0
 800af68:	4808      	ldr	r0, [pc, #32]	; (800af8c <PixelPusher::Print()+0x28>)
 800af6a:	f007 fbec 	bl	8012746 <puts>
 800af6e:	6921      	ldr	r1, [r4, #16]
 800af70:	4807      	ldr	r0, [pc, #28]	; (800af90 <PixelPusher::Print()+0x2c>)
 800af72:	f7fe fafd 	bl	8009570 <printf>
 800af76:	2103      	movs	r1, #3
 800af78:	4806      	ldr	r0, [pc, #24]	; (800af94 <PixelPusher::Print()+0x30>)
 800af7a:	f7fe faf9 	bl	8009570 <printf>
 800af7e:	6a21      	ldr	r1, [r4, #32]
 800af80:	4805      	ldr	r0, [pc, #20]	; (800af98 <PixelPusher::Print()+0x34>)
 800af82:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800af86:	f7fe baf3 	b.w	8009570 <printf>
 800af8a:	bf00      	nop
 800af8c:	08015da5 	stmdaeq	r1, {r0, r2, r5, r7, r8, sl, fp, ip, lr}
 800af90:	08015db2 	stmdaeq	r1, {r1, r4, r5, r7, r8, sl, fp, ip, lr}
 800af94:	08015dcb 	stmdaeq	r1, {r0, r1, r3, r6, r7, r8, sl, fp, ip, lr}
 800af98:	08015de4 	stmdaeq	r1, {r2, r5, r6, r7, r8, sl, fp, ip, lr}

0800af9c <LLRPDevice::~LLRPDevice()>:
 800af9c:	4770      	bx	lr

0800af9e <LLRPDevice::CopyUID(unsigned char*)>:
 800af9e:	4770      	bx	lr

0800afa0 <LLRPDevice::CopyCID(unsigned char*)>:
 800afa0:	4770      	bx	lr

0800afa2 <LLRPDevice::LLRPHandleRdmCommand(unsigned char const*)>:
 800afa2:	2000      	movs	r0, #0
 800afa4:	4770      	bx	lr

0800afa6 <LLRPDevice::~LLRPDevice()>:
 800afa6:	b510      	push	{r4, lr}
 800afa8:	4604      	mov	r4, r0
 800afaa:	f007 fad1 	bl	8012550 <operator delete(void*)>
 800afae:	4620      	mov	r0, r4
 800afb0:	bd10      	pop	{r4, pc}

0800afb2 <memcpy.isra.0>:
 800afb2:	3801      	subs	r0, #1
 800afb4:	440a      	add	r2, r1
 800afb6:	4291      	cmp	r1, r2
 800afb8:	d100      	bne.n	800afbc <memcpy.isra.0+0xa>
 800afba:	4770      	bx	lr
 800afbc:	f811 3b01 	ldrb.w	r3, [r1], #1
 800afc0:	f800 3f01 	strb.w	r3, [r0, #1]!
 800afc4:	e7f7      	b.n	800afb6 <memcpy.isra.0+0x4>
	...

0800afc8 <LLRPDevice::LLRPDevice()>:
 800afc8:	b513      	push	{r0, r1, r4, lr}
 800afca:	4604      	mov	r4, r0
 800afcc:	4b09      	ldr	r3, [pc, #36]	; (800aff4 <LLRPDevice::LLRPDevice()+0x2c>)
 800afce:	a901      	add	r1, sp, #4
 800afd0:	6003      	str	r3, [r0, #0]
 800afd2:	4809      	ldr	r0, [pc, #36]	; (800aff8 <LLRPDevice::LLRPDevice()+0x30>)
 800afd4:	f007 fac4 	bl	8012560 <inet_aton>
 800afd8:	9a01      	ldr	r2, [sp, #4]
 800afda:	4b08      	ldr	r3, [pc, #32]	; (800affc <LLRPDevice::LLRPDevice()+0x34>)
 800afdc:	a901      	add	r1, sp, #4
 800afde:	4808      	ldr	r0, [pc, #32]	; (800b000 <LLRPDevice::LLRPDevice()+0x38>)
 800afe0:	601a      	str	r2, [r3, #0]
 800afe2:	f007 fabd 	bl	8012560 <inet_aton>
 800afe6:	4620      	mov	r0, r4
 800afe8:	4b06      	ldr	r3, [pc, #24]	; (800b004 <LLRPDevice::LLRPDevice()+0x3c>)
 800afea:	9a01      	ldr	r2, [sp, #4]
 800afec:	601a      	str	r2, [r3, #0]
 800afee:	b002      	add	sp, #8
 800aff0:	bd10      	pop	{r4, pc}
 800aff2:	bf00      	nop
 800aff4:	08015ec4 	stmdaeq	r1, {r2, r6, r7, r9, sl, fp, ip, lr}
 800aff8:	08015e14 	stmdaeq	r1, {r2, r4, r9, sl, fp, ip, lr}
 800affc:	20009724 	andcs	r9, r0, r4, lsr #14
 800b000:	08015e24 	stmdaeq	r1, {r2, r5, r9, sl, fp, ip, lr}
 800b004:	20009728 	andcs	r9, r0, r8, lsr #14

0800b008 <LLRPDevice::HandleRequestMessage()>:
 800b008:	b570      	push	{r4, r5, r6, lr}
 800b00a:	4b23      	ldr	r3, [pc, #140]	; (800b098 <LLRPDevice::HandleRequestMessage()+0x90>)
 800b00c:	b086      	sub	sp, #24
 800b00e:	681c      	ldr	r4, [r3, #0]
 800b010:	4605      	mov	r5, r0
 800b012:	f104 0617 	add.w	r6, r4, #23
 800b016:	2210      	movs	r2, #16
 800b018:	4631      	mov	r1, r6
 800b01a:	a802      	add	r0, sp, #8
 800b01c:	f7ff ffc9 	bl	800afb2 <memcpy.isra.0>
 800b020:	2343      	movs	r3, #67	; 0x43
 800b022:	74a3      	strb	r3, [r4, #18]
 800b024:	682b      	ldr	r3, [r5, #0]
 800b026:	4631      	mov	r1, r6
 800b028:	4628      	mov	r0, r5
 800b02a:	68db      	ldr	r3, [r3, #12]
 800b02c:	4798      	blx	r3
 800b02e:	232c      	movs	r3, #44	; 0x2c
 800b030:	f884 3029 	strb.w	r3, [r4, #41]	; 0x29
 800b034:	2300      	movs	r3, #0
 800b036:	f884 302a 	strb.w	r3, [r4, #42]	; 0x2a
 800b03a:	f884 302b 	strb.w	r3, [r4, #43]	; 0x2b
 800b03e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 800b042:	2302      	movs	r3, #2
 800b044:	2210      	movs	r2, #16
 800b046:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 800b04a:	a902      	add	r1, sp, #8
 800b04c:	f104 002e 	add.w	r0, r4, #46	; 0x2e
 800b050:	f7ff ffaf 	bl	800afb2 <memcpy.isra.0>
 800b054:	2311      	movs	r3, #17
 800b056:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800b05a:	2301      	movs	r3, #1
 800b05c:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800b060:	682b      	ldr	r3, [r5, #0]
 800b062:	4628      	mov	r0, r5
 800b064:	f104 0146 	add.w	r1, r4, #70	; 0x46
 800b068:	689b      	ldr	r3, [r3, #8]
 800b06a:	4798      	blx	r3
 800b06c:	4b0b      	ldr	r3, [pc, #44]	; (800b09c <LLRPDevice::HandleRequestMessage()+0x94>)
 800b06e:	f104 014c 	add.w	r1, r4, #76	; 0x4c
 800b072:	6818      	ldr	r0, [r3, #0]
 800b074:	f004 ff50 	bl	800ff18 <Network::MacAddressCopyTo(unsigned char*)>
 800b078:	23ff      	movs	r3, #255	; 0xff
 800b07a:	f884 3052 	strb.w	r3, [r4, #82]	; 0x52
 800b07e:	f241 53c1 	movw	r3, #5569	; 0x15c1
 800b082:	4807      	ldr	r0, [pc, #28]	; (800b0a0 <LLRPDevice::HandleRequestMessage()+0x98>)
 800b084:	9300      	str	r3, [sp, #0]
 800b086:	4b07      	ldr	r3, [pc, #28]	; (800b0a4 <LLRPDevice::HandleRequestMessage()+0x9c>)
 800b088:	2253      	movs	r2, #83	; 0x53
 800b08a:	4621      	mov	r1, r4
 800b08c:	681b      	ldr	r3, [r3, #0]
 800b08e:	7800      	ldrb	r0, [r0, #0]
 800b090:	f004 fa74 	bl	800f57c <udp_send>
 800b094:	b006      	add	sp, #24
 800b096:	bd70      	pop	{r4, r5, r6, pc}
 800b098:	2000972c 	andcs	r9, r0, ip, lsr #14
 800b09c:	2001a288 	andcs	sl, r1, r8, lsl #5
 800b0a0:	20000000 	andcs	r0, r0, r0
 800b0a4:	20009728 	andcs	r9, r0, r8, lsr #14

0800b0a8 <LLRPDevice::HandleRdmCommand()>:
 800b0a8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b0ac:	4b22      	ldr	r3, [pc, #136]	; (800b138 <LLRPDevice::HandleRdmCommand()+0x90>)
 800b0ae:	b086      	sub	sp, #24
 800b0b0:	681c      	ldr	r4, [r3, #0]
 800b0b2:	6803      	ldr	r3, [r0, #0]
 800b0b4:	f104 0946 	add.w	r9, r4, #70	; 0x46
 800b0b8:	4649      	mov	r1, r9
 800b0ba:	691b      	ldr	r3, [r3, #16]
 800b0bc:	4607      	mov	r7, r0
 800b0be:	4798      	blx	r3
 800b0c0:	4605      	mov	r5, r0
 800b0c2:	2800      	cmp	r0, #0
 800b0c4:	d034      	beq.n	800b130 <LLRPDevice::HandleRdmCommand()+0x88>
 800b0c6:	7803      	ldrb	r3, [r0, #0]
 800b0c8:	2bcc      	cmp	r3, #204	; 0xcc
 800b0ca:	d131      	bne.n	800b130 <LLRPDevice::HandleRdmCommand()+0x88>
 800b0cc:	f104 0a17 	add.w	sl, r4, #23
 800b0d0:	2210      	movs	r2, #16
 800b0d2:	4651      	mov	r1, sl
 800b0d4:	a802      	add	r0, sp, #8
 800b0d6:	f7ff ff6c 	bl	800afb2 <memcpy.isra.0>
 800b0da:	78ae      	ldrb	r6, [r5, #2]
 800b0dc:	4651      	mov	r1, sl
 800b0de:	f106 0837 	add.w	r8, r6, #55	; 0x37
 800b0e2:	fa5f f888 	uxtb.w	r8, r8
 800b0e6:	f884 8012 	strb.w	r8, [r4, #18]
 800b0ea:	683b      	ldr	r3, [r7, #0]
 800b0ec:	4638      	mov	r0, r7
 800b0ee:	68db      	ldr	r3, [r3, #12]
 800b0f0:	4798      	blx	r3
 800b0f2:	f106 0320 	add.w	r3, r6, #32
 800b0f6:	2210      	movs	r2, #16
 800b0f8:	f884 3029 	strb.w	r3, [r4, #41]	; 0x29
 800b0fc:	a902      	add	r1, sp, #8
 800b0fe:	f104 002e 	add.w	r0, r4, #46	; 0x2e
 800b102:	f7ff ff56 	bl	800afb2 <memcpy.isra.0>
 800b106:	1d73      	adds	r3, r6, #5
 800b108:	1c72      	adds	r2, r6, #1
 800b10a:	4648      	mov	r0, r9
 800b10c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800b110:	b2d2      	uxtb	r2, r2
 800b112:	1c69      	adds	r1, r5, #1
 800b114:	f7ff ff4d 	bl	800afb2 <memcpy.isra.0>
 800b118:	f241 53c1 	movw	r3, #5569	; 0x15c1
 800b11c:	4807      	ldr	r0, [pc, #28]	; (800b13c <LLRPDevice::HandleRdmCommand()+0x94>)
 800b11e:	9300      	str	r3, [sp, #0]
 800b120:	4b07      	ldr	r3, [pc, #28]	; (800b140 <LLRPDevice::HandleRdmCommand()+0x98>)
 800b122:	4621      	mov	r1, r4
 800b124:	681b      	ldr	r3, [r3, #0]
 800b126:	7800      	ldrb	r0, [r0, #0]
 800b128:	f108 0210 	add.w	r2, r8, #16
 800b12c:	f004 fa26 	bl	800f57c <udp_send>
 800b130:	b006      	add	sp, #24
 800b132:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800b136:	bf00      	nop
 800b138:	2000972c 	andcs	r9, r0, ip, lsr #14
 800b13c:	20000000 	andcs	r0, r0, r0
 800b140:	20009728 	andcs	r9, r0, r8, lsr #14

0800b144 <LLRPDevice::Run()>:
 800b144:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b146:	4604      	mov	r4, r0
 800b148:	4d0e      	ldr	r5, [pc, #56]	; (800b184 <LLRPDevice::Run()+0x40>)
 800b14a:	480f      	ldr	r0, [pc, #60]	; (800b188 <LLRPDevice::Run()+0x44>)
 800b14c:	4629      	mov	r1, r5
 800b14e:	4a0f      	ldr	r2, [pc, #60]	; (800b18c <LLRPDevice::Run()+0x48>)
 800b150:	7800      	ldrb	r0, [r0, #0]
 800b152:	f10d 0306 	add.w	r3, sp, #6
 800b156:	f004 f9eb 	bl	800f530 <udp_recv2>
 800b15a:	2841      	cmp	r0, #65	; 0x41
 800b15c:	d908      	bls.n	800b170 <LLRPDevice::Run()+0x2c>
 800b15e:	682b      	ldr	r3, [r5, #0]
 800b160:	f8d3 302a 	ldr.w	r3, [r3, #42]	; 0x2a
 800b164:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800b168:	ba1a      	rev	r2, r3
 800b16a:	d003      	beq.n	800b174 <LLRPDevice::Run()+0x30>
 800b16c:	2a03      	cmp	r2, #3
 800b16e:	d005      	beq.n	800b17c <LLRPDevice::Run()+0x38>
 800b170:	b003      	add	sp, #12
 800b172:	bd30      	pop	{r4, r5, pc}
 800b174:	4620      	mov	r0, r4
 800b176:	f7ff ff47 	bl	800b008 <LLRPDevice::HandleRequestMessage()>
 800b17a:	e7f9      	b.n	800b170 <LLRPDevice::Run()+0x2c>
 800b17c:	4620      	mov	r0, r4
 800b17e:	f7ff ff93 	bl	800b0a8 <LLRPDevice::HandleRdmCommand()>
 800b182:	e7f5      	b.n	800b170 <LLRPDevice::Run()+0x2c>
 800b184:	2000972c 	andcs	r9, r0, ip, lsr #14
 800b188:	20000000 	andcs	r0, r0, r0
 800b18c:	20009720 	andcs	r9, r0, r0, lsr #14

0800b190 <LLRPDevice::Print()>:
 800b190:	b507      	push	{r0, r1, r2, lr}
 800b192:	4811      	ldr	r0, [pc, #68]	; (800b1d8 <LLRPDevice::Print()+0x48>)
 800b194:	f7fe f9ec 	bl	8009570 <printf>
 800b198:	f241 51c1 	movw	r1, #5569	; 0x15c1
 800b19c:	480f      	ldr	r0, [pc, #60]	; (800b1dc <LLRPDevice::Print()+0x4c>)
 800b19e:	f7fe f9e7 	bl	8009570 <printf>
 800b1a2:	4b0f      	ldr	r3, [pc, #60]	; (800b1e0 <LLRPDevice::Print()+0x50>)
 800b1a4:	480f      	ldr	r0, [pc, #60]	; (800b1e4 <LLRPDevice::Print()+0x54>)
 800b1a6:	6819      	ldr	r1, [r3, #0]
 800b1a8:	0e0b      	lsrs	r3, r1, #24
 800b1aa:	9300      	str	r3, [sp, #0]
 800b1ac:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800b1b0:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800b1b4:	b2c9      	uxtb	r1, r1
 800b1b6:	f7fe f9db 	bl	8009570 <printf>
 800b1ba:	4b0b      	ldr	r3, [pc, #44]	; (800b1e8 <LLRPDevice::Print()+0x58>)
 800b1bc:	480b      	ldr	r0, [pc, #44]	; (800b1ec <LLRPDevice::Print()+0x5c>)
 800b1be:	6819      	ldr	r1, [r3, #0]
 800b1c0:	0e0b      	lsrs	r3, r1, #24
 800b1c2:	9300      	str	r3, [sp, #0]
 800b1c4:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800b1c8:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800b1cc:	b2c9      	uxtb	r1, r1
 800b1ce:	f7fe f9cf 	bl	8009570 <printf>
 800b1d2:	b003      	add	sp, #12
 800b1d4:	f85d fb04 	ldr.w	pc, [sp], #4
 800b1d8:	08015e34 	stmdaeq	r1, {r2, r4, r5, r9, sl, fp, ip, lr}
 800b1dc:	08015e4f 	stmdaeq	r1, {r0, r1, r2, r3, r6, r9, sl, fp, ip, lr}
 800b1e0:	20009724 	andcs	r9, r0, r4, lsr #14
 800b1e4:	08015e6d 	stmdaeq	r1, {r0, r2, r3, r5, r6, r9, sl, fp, ip, lr}
 800b1e8:	20009728 	andcs	r9, r0, r8, lsr #14
 800b1ec:	08015e94 	stmdaeq	r1, {r2, r4, r7, r9, sl, fp, ip, lr}

0800b1f0 <RDMNetDevice::Print()>:
 800b1f0:	2300      	movs	r3, #0
 800b1f2:	b510      	push	{r4, lr}
 800b1f4:	4604      	mov	r4, r0
 800b1f6:	b08a      	sub	sp, #40	; 0x28
 800b1f8:	4669      	mov	r1, sp
 800b1fa:	480a      	ldr	r0, [pc, #40]	; (800b224 <RDMNetDevice::Print()+0x34>)
 800b1fc:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800b200:	f001 f94a 	bl	800c498 <uuid_unparse>
 800b204:	4808      	ldr	r0, [pc, #32]	; (800b228 <RDMNetDevice::Print()+0x38>)
 800b206:	f7fe f9b3 	bl	8009570 <printf>
 800b20a:	4669      	mov	r1, sp
 800b20c:	4807      	ldr	r0, [pc, #28]	; (800b22c <RDMNetDevice::Print()+0x3c>)
 800b20e:	f7fe f9af 	bl	8009570 <printf>
 800b212:	f104 00cc 	add.w	r0, r4, #204	; 0xcc
 800b216:	f7ff ffbb 	bl	800b190 <LLRPDevice::Print()>
 800b21a:	4620      	mov	r0, r4
 800b21c:	f000 fa38 	bl	800b690 <RDMDeviceResponder::Print()>
 800b220:	b00a      	add	sp, #40	; 0x28
 800b222:	bd10      	pop	{r4, pc}
 800b224:	2000982f 	andcs	r9, r0, pc, lsr #16
 800b228:	08015f0a 	stmdaeq	r1, {r1, r3, r8, r9, sl, fp, ip, lr}
 800b22c:	08015f12 	stmdaeq	r1, {r1, r4, r8, r9, sl, fp, ip, lr}

0800b230 <RDMSensors::RDMSensors()>:
 800b230:	2200      	movs	r2, #0
 800b232:	6002      	str	r2, [r0, #0]
 800b234:	7102      	strb	r2, [r0, #4]
 800b236:	4a01      	ldr	r2, [pc, #4]	; (800b23c <RDMSensors::RDMSensors()+0xc>)
 800b238:	6010      	str	r0, [r2, #0]
 800b23a:	4770      	bx	lr
 800b23c:	20009840 	andcs	r9, r0, r0, asr #16

0800b240 <RDMSensors::~RDMSensors()>:
 800b240:	b570      	push	{r4, r5, r6, lr}
 800b242:	2500      	movs	r5, #0
 800b244:	4604      	mov	r4, r0
 800b246:	462e      	mov	r6, r5
 800b248:	7923      	ldrb	r3, [r4, #4]
 800b24a:	6820      	ldr	r0, [r4, #0]
 800b24c:	42ab      	cmp	r3, r5
 800b24e:	d804      	bhi.n	800b25a <RDMSensors::~RDMSensors()+0x1a>
 800b250:	b108      	cbz	r0, 800b256 <RDMSensors::~RDMSensors()+0x16>
 800b252:	f007 f97f 	bl	8012554 <operator delete[](void*)>
 800b256:	4620      	mov	r0, r4
 800b258:	bd70      	pop	{r4, r5, r6, pc}
 800b25a:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 800b25e:	b128      	cbz	r0, 800b26c <RDMSensors::~RDMSensors()+0x2c>
 800b260:	6803      	ldr	r3, [r0, #0]
 800b262:	685b      	ldr	r3, [r3, #4]
 800b264:	4798      	blx	r3
 800b266:	6823      	ldr	r3, [r4, #0]
 800b268:	f843 6025 	str.w	r6, [r3, r5, lsl #2]
 800b26c:	3501      	adds	r5, #1
 800b26e:	e7eb      	b.n	800b248 <RDMSensors::~RDMSensors()+0x8>

0800b270 <RDMSubDevices::RDMSubDevices()>:
 800b270:	2200      	movs	r2, #0
 800b272:	6002      	str	r2, [r0, #0]
 800b274:	8082      	strh	r2, [r0, #4]
 800b276:	4a01      	ldr	r2, [pc, #4]	; (800b27c <RDMSubDevices::RDMSubDevices()+0xc>)
 800b278:	6010      	str	r0, [r2, #0]
 800b27a:	4770      	bx	lr
 800b27c:	20009844 	andcs	r9, r0, r4, asr #16

0800b280 <RDMSubDevices::~RDMSubDevices()>:
 800b280:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b282:	2500      	movs	r5, #0
 800b284:	4604      	mov	r4, r0
 800b286:	462e      	mov	r6, r5
 800b288:	88a3      	ldrh	r3, [r4, #4]
 800b28a:	6820      	ldr	r0, [r4, #0]
 800b28c:	42ab      	cmp	r3, r5
 800b28e:	d804      	bhi.n	800b29a <RDMSubDevices::~RDMSubDevices()+0x1a>
 800b290:	b108      	cbz	r0, 800b296 <RDMSubDevices::~RDMSubDevices()+0x16>
 800b292:	f007 f95f 	bl	8012554 <operator delete[](void*)>
 800b296:	4620      	mov	r0, r4
 800b298:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b29a:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 800b29e:	00af      	lsls	r7, r5, #2
 800b2a0:	b110      	cbz	r0, 800b2a8 <RDMSubDevices::~RDMSubDevices()+0x28>
 800b2a2:	6803      	ldr	r3, [r0, #0]
 800b2a4:	685b      	ldr	r3, [r3, #4]
 800b2a6:	4798      	blx	r3
 800b2a8:	6823      	ldr	r3, [r4, #0]
 800b2aa:	3501      	adds	r5, #1
 800b2ac:	51de      	str	r6, [r3, r7]
 800b2ae:	e7eb      	b.n	800b288 <RDMSubDevices::~RDMSubDevices()+0x8>

0800b2b0 <RDMSubDevices::GetInfo(unsigned short)>:
 800b2b0:	6803      	ldr	r3, [r0, #0]
 800b2b2:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 800b2b6:	3901      	subs	r1, #1
 800b2b8:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800b2bc:	3010      	adds	r0, #16
 800b2be:	4770      	bx	lr

0800b2c0 <RDMSubDevices::GetLabel(unsigned short, TRDMDeviceInfoData*)>:
 800b2c0:	f101 4380 	add.w	r3, r1, #1073741824	; 0x40000000
 800b2c4:	6800      	ldr	r0, [r0, #0]
 800b2c6:	3b01      	subs	r3, #1
 800b2c8:	4611      	mov	r1, r2
 800b2ca:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 800b2ce:	f000 b82f 	b.w	800b330 <RDMSubDevice::GetLabel(TRDMDeviceInfoData*)>

0800b2d2 <RDMSubDevices::SetLabel(unsigned short, char const*, unsigned char)>:
 800b2d2:	b410      	push	{r4}
 800b2d4:	460c      	mov	r4, r1
 800b2d6:	6800      	ldr	r0, [r0, #0]
 800b2d8:	f104 4480 	add.w	r4, r4, #1073741824	; 0x40000000
 800b2dc:	3c01      	subs	r4, #1
 800b2de:	4611      	mov	r1, r2
 800b2e0:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
 800b2e4:	461a      	mov	r2, r3
 800b2e6:	bc10      	pop	{r4}
 800b2e8:	f000 b837 	b.w	800b35a <RDMSubDevice::SetLabel(char const*, unsigned char)>

0800b2ec <RDMSubDevices::GetFactoryDefaults()>:
 800b2ec:	b538      	push	{r3, r4, r5, lr}
 800b2ee:	4605      	mov	r5, r0
 800b2f0:	2400      	movs	r4, #0
 800b2f2:	88ab      	ldrh	r3, [r5, #4]
 800b2f4:	42a3      	cmp	r3, r4
 800b2f6:	d801      	bhi.n	800b2fc <RDMSubDevices::GetFactoryDefaults()+0x10>
 800b2f8:	2001      	movs	r0, #1
 800b2fa:	e009      	b.n	800b310 <RDMSubDevices::GetFactoryDefaults()+0x24>
 800b2fc:	682b      	ldr	r3, [r5, #0]
 800b2fe:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 800b302:	b908      	cbnz	r0, 800b308 <RDMSubDevices::GetFactoryDefaults()+0x1c>
 800b304:	3401      	adds	r4, #1
 800b306:	e7f4      	b.n	800b2f2 <RDMSubDevices::GetFactoryDefaults()+0x6>
 800b308:	f000 f85c 	bl	800b3c4 <RDMSubDevice::GetFactoryDefaults()>
 800b30c:	2800      	cmp	r0, #0
 800b30e:	d1f9      	bne.n	800b304 <RDMSubDevices::GetFactoryDefaults()+0x18>
 800b310:	bd38      	pop	{r3, r4, r5, pc}

0800b312 <RDMSubDevices::SetFactoryDefaults()>:
 800b312:	b538      	push	{r3, r4, r5, lr}
 800b314:	4605      	mov	r5, r0
 800b316:	2400      	movs	r4, #0
 800b318:	88ab      	ldrh	r3, [r5, #4]
 800b31a:	42a3      	cmp	r3, r4
 800b31c:	d800      	bhi.n	800b320 <RDMSubDevices::SetFactoryDefaults()+0xe>
 800b31e:	bd38      	pop	{r3, r4, r5, pc}
 800b320:	682b      	ldr	r3, [r5, #0]
 800b322:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 800b326:	b108      	cbz	r0, 800b32c <RDMSubDevices::SetFactoryDefaults()+0x1a>
 800b328:	f000 f826 	bl	800b378 <RDMSubDevice::SetFactoryDefaults()>
 800b32c:	3401      	adds	r4, #1
 800b32e:	e7f3      	b.n	800b318 <RDMSubDevices::SetFactoryDefaults()+0x6>

0800b330 <RDMSubDevice::GetLabel(TRDMDeviceInfoData*)>:
 800b330:	f100 0316 	add.w	r3, r0, #22
 800b334:	600b      	str	r3, [r1, #0]
 800b336:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800b33a:	710b      	strb	r3, [r1, #4]
 800b33c:	4770      	bx	lr

0800b33e <RDMSubDevice::SetLabel(char const*)>:
 800b33e:	2300      	movs	r3, #0
 800b340:	b510      	push	{r4, lr}
 800b342:	f100 0415 	add.w	r4, r0, #21
 800b346:	5cca      	ldrb	r2, [r1, r3]
 800b348:	b122      	cbz	r2, 800b354 <RDMSubDevice::SetLabel(char const*)+0x16>
 800b34a:	3301      	adds	r3, #1
 800b34c:	2b20      	cmp	r3, #32
 800b34e:	f804 2f01 	strb.w	r2, [r4, #1]!
 800b352:	d1f8      	bne.n	800b346 <RDMSubDevice::SetLabel(char const*)+0x8>
 800b354:	f880 3036 	strb.w	r3, [r0, #54]	; 0x36
 800b358:	bd10      	pop	{r4, pc}

0800b35a <RDMSubDevice::SetLabel(char const*, unsigned char)>:
 800b35a:	2300      	movs	r3, #0
 800b35c:	b530      	push	{r4, r5, lr}
 800b35e:	f100 0415 	add.w	r4, r0, #21
 800b362:	429a      	cmp	r2, r3
 800b364:	d905      	bls.n	800b372 <RDMSubDevice::SetLabel(char const*, unsigned char)+0x18>
 800b366:	5ccd      	ldrb	r5, [r1, r3]
 800b368:	3301      	adds	r3, #1
 800b36a:	2b20      	cmp	r3, #32
 800b36c:	f804 5f01 	strb.w	r5, [r4, #1]!
 800b370:	d1f7      	bne.n	800b362 <RDMSubDevice::SetLabel(char const*, unsigned char)+0x8>
 800b372:	f880 3036 	strb.w	r3, [r0, #54]	; 0x36
 800b376:	bd30      	pop	{r4, r5, pc}

0800b378 <RDMSubDevice::SetFactoryDefaults()>:
 800b378:	7a03      	ldrb	r3, [r0, #8]
 800b37a:	b510      	push	{r4, lr}
 800b37c:	b94b      	cbnz	r3, 800b392 <RDMSubDevice::SetFactoryDefaults()+0x1a>
 800b37e:	f100 0138 	add.w	r1, r0, #56	; 0x38
 800b382:	f7ff ffdc 	bl	800b33e <RDMSubDevice::SetLabel(char const*)>
 800b386:	8983      	ldrh	r3, [r0, #12]
 800b388:	8243      	strh	r3, [r0, #18]
 800b38a:	7b83      	ldrb	r3, [r0, #14]
 800b38c:	7503      	strb	r3, [r0, #20]
 800b38e:	2301      	movs	r3, #1
 800b390:	7203      	strb	r3, [r0, #8]
 800b392:	bd10      	pop	{r4, pc}

0800b394 <RDMSubDevice::CalculateChecksum()>:
 800b394:	4602      	mov	r2, r0
 800b396:	b510      	push	{r4, lr}
 800b398:	8a43      	ldrh	r3, [r0, #18]
 800b39a:	7d01      	ldrb	r1, [r0, #20]
 800b39c:	f892 4036 	ldrb.w	r4, [r2, #54]	; 0x36
 800b3a0:	440b      	add	r3, r1
 800b3a2:	b298      	uxth	r0, r3
 800b3a4:	f102 0315 	add.w	r3, r2, #21
 800b3a8:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
 800b3ac:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
 800b3b0:	32eb      	adds	r2, #235	; 0xeb
 800b3b2:	18d1      	adds	r1, r2, r3
 800b3b4:	428c      	cmp	r4, r1
 800b3b6:	d800      	bhi.n	800b3ba <RDMSubDevice::CalculateChecksum()+0x26>
 800b3b8:	bd10      	pop	{r4, pc}
 800b3ba:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800b3be:	4408      	add	r0, r1
 800b3c0:	b280      	uxth	r0, r0
 800b3c2:	e7f6      	b.n	800b3b2 <RDMSubDevice::CalculateChecksum()+0x1e>

0800b3c4 <RDMSubDevice::GetFactoryDefaults()>:
 800b3c4:	7a03      	ldrb	r3, [r0, #8]
 800b3c6:	b510      	push	{r4, lr}
 800b3c8:	4604      	mov	r4, r0
 800b3ca:	b133      	cbz	r3, 800b3da <RDMSubDevice::GetFactoryDefaults()+0x16>
 800b3cc:	f7ff ffe2 	bl	800b394 <RDMSubDevice::CalculateChecksum()>
 800b3d0:	8963      	ldrh	r3, [r4, #10]
 800b3d2:	4283      	cmp	r3, r0
 800b3d4:	bf1c      	itt	ne
 800b3d6:	2300      	movne	r3, #0
 800b3d8:	7223      	strbne	r3, [r4, #8]
 800b3da:	7a20      	ldrb	r0, [r4, #8]
 800b3dc:	bd10      	pop	{r4, pc}

0800b3de <memcpy.isra.0>:
 800b3de:	f007 b96f 	b.w	80126c0 <memcpy>
	...

0800b3e4 <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)>:
 800b3e4:	b510      	push	{r4, lr}
 800b3e6:	6001      	str	r1, [r0, #0]
 800b3e8:	2100      	movs	r1, #0
 800b3ea:	4604      	mov	r4, r0
 800b3ec:	6041      	str	r1, [r0, #4]
 800b3ee:	2220      	movs	r2, #32
 800b3f0:	3008      	adds	r0, #8
 800b3f2:	f007 f987 	bl	8012704 <memset>
 800b3f6:	4b03      	ldr	r3, [pc, #12]	; (800b404 <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)+0x20>)
 800b3f8:	4620      	mov	r0, r4
 800b3fa:	62a3      	str	r3, [r4, #40]	; 0x28
 800b3fc:	237f      	movs	r3, #127	; 0x7f
 800b3fe:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 800b402:	bd10      	pop	{r4, pc}
 800b404:	ff7fff00 			; <UNDEFINED> instruction: 0xff7fff00

0800b408 <RDMDeviceParams::Load()>:
 800b408:	4601      	mov	r1, r0
 800b40a:	6800      	ldr	r0, [r0, #0]
 800b40c:	b130      	cbz	r0, 800b41c <RDMDeviceParams::Load()+0x14>
 800b40e:	b508      	push	{r3, lr}
 800b410:	6803      	ldr	r3, [r0, #0]
 800b412:	3104      	adds	r1, #4
 800b414:	68db      	ldr	r3, [r3, #12]
 800b416:	4798      	blx	r3
 800b418:	2001      	movs	r0, #1
 800b41a:	bd08      	pop	{r3, pc}
 800b41c:	4770      	bx	lr

0800b41e <RDMDeviceParams::Set(RDMDevice*)>:
 800b41e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b420:	6843      	ldr	r3, [r0, #4]
 800b422:	460c      	mov	r4, r1
 800b424:	07d9      	lsls	r1, r3, #31
 800b426:	4605      	mov	r5, r0
 800b428:	d518      	bpl.n	800b45c <RDMDeviceParams::Set(RDMDevice*)+0x3e>
 800b42a:	f890 6028 	ldrb.w	r6, [r0, #40]	; 0x28
 800b42e:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 800b432:	2e20      	cmp	r6, #32
 800b434:	bf28      	it	cs
 800b436:	2620      	movcs	r6, #32
 800b438:	f100 0108 	add.w	r1, r0, #8
 800b43c:	b1e3      	cbz	r3, 800b478 <RDMDeviceParams::Set(RDMDevice*)+0x5a>
 800b43e:	f104 070a 	add.w	r7, r4, #10
 800b442:	4638      	mov	r0, r7
 800b444:	4632      	mov	r2, r6
 800b446:	f7ff ffca 	bl	800b3de <memcpy.isra.0>
 800b44a:	6f60      	ldr	r0, [r4, #116]	; 0x74
 800b44c:	f884 602a 	strb.w	r6, [r4, #42]	; 0x2a
 800b450:	b120      	cbz	r0, 800b45c <RDMDeviceParams::Set(RDMDevice*)+0x3e>
 800b452:	6803      	ldr	r3, [r0, #0]
 800b454:	4632      	mov	r2, r6
 800b456:	4639      	mov	r1, r7
 800b458:	689b      	ldr	r3, [r3, #8]
 800b45a:	4798      	blx	r3
 800b45c:	686b      	ldr	r3, [r5, #4]
 800b45e:	079a      	lsls	r2, r3, #30
 800b460:	bf44      	itt	mi
 800b462:	f8b5 2029 	ldrhmi.w	r2, [r5, #41]	; 0x29
 800b466:	f8a4 204c 	strhmi.w	r2, [r4, #76]	; 0x4c
 800b46a:	075b      	lsls	r3, r3, #29
 800b46c:	bf44      	itt	mi
 800b46e:	f8b5 302b 	ldrhmi.w	r3, [r5, #43]	; 0x2b
 800b472:	f8a4 304e 	strhmi.w	r3, [r4, #78]	; 0x4e
 800b476:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b478:	4632      	mov	r2, r6
 800b47a:	f104 0051 	add.w	r0, r4, #81	; 0x51
 800b47e:	f7ff ffae 	bl	800b3de <memcpy.isra.0>
 800b482:	f884 6071 	strb.w	r6, [r4, #113]	; 0x71
 800b486:	e7e9      	b.n	800b45c <RDMDeviceParams::Set(RDMDevice*)+0x3e>

0800b488 <RDMDeviceParams::Dump()>:
 800b488:	4770      	bx	lr

0800b48a <RDMDeviceResponder::PersonalityUpdate(LightSet*)>:
 800b48a:	4770      	bx	lr

0800b48c <RDMDeviceResponder::DmxStartAddressUpdate()>:
 800b48c:	4770      	bx	lr
	...

0800b490 <RDMDeviceResponder::~RDMDeviceResponder()>:
 800b490:	b510      	push	{r4, lr}
 800b492:	4604      	mov	r4, r0
 800b494:	4b05      	ldr	r3, [pc, #20]	; (800b4ac <RDMDeviceResponder::~RDMDeviceResponder()+0x1c>)
 800b496:	f840 3b88 	str.w	r3, [r0], #136
 800b49a:	f7ff fef1 	bl	800b280 <RDMSubDevices::~RDMSubDevices()>
 800b49e:	f104 0080 	add.w	r0, r4, #128	; 0x80
 800b4a2:	f7ff fecd 	bl	800b240 <RDMSensors::~RDMSensors()>
 800b4a6:	4620      	mov	r0, r4
 800b4a8:	bd10      	pop	{r4, pc}
 800b4aa:	bf00      	nop
 800b4ac:	08015fdc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r8, r9, sl, fp, ip, lr}

0800b4b0 <RDMDeviceResponder::~RDMDeviceResponder()>:
 800b4b0:	b510      	push	{r4, lr}
 800b4b2:	4604      	mov	r4, r0
 800b4b4:	f7ff ffec 	bl	800b490 <RDMDeviceResponder::~RDMDeviceResponder()>
 800b4b8:	4620      	mov	r0, r4
 800b4ba:	f007 f849 	bl	8012550 <operator delete(void*)>
 800b4be:	4620      	mov	r0, r4
 800b4c0:	bd10      	pop	{r4, pc}
	...

0800b4c4 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)>:
 800b4c4:	b570      	push	{r4, r5, r6, lr}
 800b4c6:	4604      	mov	r4, r0
 800b4c8:	3004      	adds	r0, #4
 800b4ca:	460e      	mov	r6, r1
 800b4cc:	4615      	mov	r5, r2
 800b4ce:	f000 feeb 	bl	800c2a8 <RDMDevice::RDMDevice()>
 800b4d2:	4620      	mov	r0, r4
 800b4d4:	4b21      	ldr	r3, [pc, #132]	; (800b55c <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x98>)
 800b4d6:	f840 3b7c 	str.w	r3, [r0], #124
 800b4da:	f000 fcf5 	bl	800bec8 <RDMIdentify::RDMIdentify()>
 800b4de:	f104 0080 	add.w	r0, r4, #128	; 0x80
 800b4e2:	f7ff fea5 	bl	800b230 <RDMSensors::RDMSensors()>
 800b4e6:	f104 0088 	add.w	r0, r4, #136	; 0x88
 800b4ea:	f7ff fec1 	bl	800b270 <RDMSubDevices::RDMSubDevices()>
 800b4ee:	4b1c      	ldr	r3, [pc, #112]	; (800b560 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x9c>)
 800b4f0:	2200      	movs	r2, #0
 800b4f2:	601c      	str	r4, [r3, #0]
 800b4f4:	2365      	movs	r3, #101	; 0x65
 800b4f6:	f884 30bf 	strb.w	r3, [r4, #191]	; 0xbf
 800b4fa:	f44f 73b7 	mov.w	r3, #366	; 0x16e
 800b4fe:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 800b502:	2301      	movs	r3, #1
 800b504:	f8c4 6090 	str.w	r6, [r4, #144]	; 0x90
 800b508:	f8a4 30c4 	strh.w	r3, [r4, #196]	; 0xc4
 800b50c:	f8c4 20c8 	str.w	r2, [r4, #200]	; 0xc8
 800b510:	f104 0399 	add.w	r3, r4, #153	; 0x99
 800b514:	f104 01ac 	add.w	r1, r4, #172	; 0xac
 800b518:	428b      	cmp	r3, r1
 800b51a:	d119      	bne.n	800b550 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x8c>
 800b51c:	2100      	movs	r1, #0
 800b51e:	f104 02bf 	add.w	r2, r4, #191	; 0xbf
 800b522:	4293      	cmp	r3, r2
 800b524:	d117      	bne.n	800b556 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x92>
 800b526:	f884 50a6 	strb.w	r5, [r4, #166]	; 0xa6
 800b52a:	f7fd fd1b 	bl	8008f64 <RDMSoftwareVersion::GetVersion()>
 800b52e:	f8c4 0094 	str.w	r0, [r4, #148]	; 0x94
 800b532:	f7fd fd1b 	bl	8008f6c <RDMSoftwareVersion::GetVersionLength()>
 800b536:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800b53a:	f884 0098 	strb.w	r0, [r4, #152]	; 0x98
 800b53e:	681b      	ldr	r3, [r3, #0]
 800b540:	685b      	ldr	r3, [r3, #4]
 800b542:	b91b      	cbnz	r3, 800b54c <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x88>
 800b544:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800b548:	f8a4 30c4 	strh.w	r3, [r4, #196]	; 0xc4
 800b54c:	4620      	mov	r0, r4
 800b54e:	bd70      	pop	{r4, r5, r6, pc}
 800b550:	f803 2b01 	strb.w	r2, [r3], #1
 800b554:	e7e0      	b.n	800b518 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x54>
 800b556:	f803 1b01 	strb.w	r1, [r3], #1
 800b55a:	e7e2      	b.n	800b522 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x5e>
 800b55c:	08015fdc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r8, r9, sl, fp, ip, lr}
 800b560:	20009848 	andcs	r9, r0, r8, asr #16

0800b564 <RDMDeviceResponder::Init()>:
 800b564:	2301      	movs	r3, #1
 800b566:	b570      	push	{r4, r5, r6, lr}
 800b568:	4604      	mov	r4, r0
 800b56a:	f880 3054 	strb.w	r3, [r0, #84]	; 0x54
 800b56e:	f894 2075 	ldrb.w	r2, [r4, #117]	; 0x75
 800b572:	3055      	adds	r0, #85	; 0x55
 800b574:	2a20      	cmp	r2, #32
 800b576:	bf28      	it	cs
 800b578:	2220      	movcs	r2, #32
 800b57a:	4613      	mov	r3, r2
 800b57c:	f104 010e 	add.w	r1, r4, #14
 800b580:	3b01      	subs	r3, #1
 800b582:	d25d      	bcs.n	800b640 <RDMDeviceResponder::Init()+0xdc>
 800b584:	6fa0      	ldr	r0, [r4, #120]	; 0x78
 800b586:	f884 202e 	strb.w	r2, [r4, #46]	; 0x2e
 800b58a:	b110      	cbz	r0, 800b592 <RDMDeviceResponder::Init()+0x2e>
 800b58c:	6803      	ldr	r3, [r0, #0]
 800b58e:	689b      	ldr	r3, [r3, #8]
 800b590:	4798      	blx	r3
 800b592:	f06f 050c 	mvn.w	r5, #12
 800b596:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800b59a:	f894 002e 	ldrb.w	r0, [r4, #46]	; 0x2e
 800b59e:	f104 020d 	add.w	r2, r4, #13
 800b5a2:	1b2d      	subs	r5, r5, r4
 800b5a4:	18a9      	adds	r1, r5, r2
 800b5a6:	4288      	cmp	r0, r1
 800b5a8:	d84f      	bhi.n	800b64a <RDMDeviceResponder::Init()+0xe6>
 800b5aa:	f8a4 3076 	strh.w	r3, [r4, #118]	; 0x76
 800b5ae:	f7fd fcdf 	bl	8008f70 <RDMSoftwareVersion::GetVersionId()>
 800b5b2:	2201      	movs	r2, #1
 800b5b4:	f884 2099 	strb.w	r2, [r4, #153]	; 0x99
 800b5b8:	2200      	movs	r2, #0
 800b5ba:	f8b4 3050 	ldrh.w	r3, [r4, #80]	; 0x50
 800b5be:	f8a4 209a 	strh.w	r2, [r4, #154]	; 0x9a
 800b5c2:	f884 209c 	strb.w	r2, [r4, #156]	; 0x9c
 800b5c6:	f884 309e 	strb.w	r3, [r4, #158]	; 0x9e
 800b5ca:	0a1a      	lsrs	r2, r3, #8
 800b5cc:	0e03      	lsrs	r3, r0, #24
 800b5ce:	f884 309f 	strb.w	r3, [r4, #159]	; 0x9f
 800b5d2:	0c03      	lsrs	r3, r0, #16
 800b5d4:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
 800b5d8:	0a03      	lsrs	r3, r0, #8
 800b5da:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
 800b5de:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800b5e2:	f884 209d 	strb.w	r2, [r4, #157]	; 0x9d
 800b5e6:	f884 00a2 	strb.w	r0, [r4, #162]	; 0xa2
 800b5ea:	681b      	ldr	r3, [r3, #0]
 800b5ec:	f8b4 608c 	ldrh.w	r6, [r4, #140]	; 0x8c
 800b5f0:	685d      	ldr	r5, [r3, #4]
 800b5f2:	bb7d      	cbnz	r5, 800b654 <RDMDeviceResponder::Init()+0xf0>
 800b5f4:	f8b4 00c4 	ldrh.w	r0, [r4, #196]	; 0xc4
 800b5f8:	f884 50a3 	strb.w	r5, [r4, #163]	; 0xa3
 800b5fc:	0a03      	lsrs	r3, r0, #8
 800b5fe:	f884 50a4 	strb.w	r5, [r4, #164]	; 0xa4
 800b602:	f884 30a7 	strb.w	r3, [r4, #167]	; 0xa7
 800b606:	2301      	movs	r3, #1
 800b608:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 800b60c:	0a33      	lsrs	r3, r6, #8
 800b60e:	f884 30a9 	strb.w	r3, [r4, #169]	; 0xa9
 800b612:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 800b616:	b2c0      	uxtb	r0, r0
 800b618:	f884 30ab 	strb.w	r3, [r4, #171]	; 0xab
 800b61c:	f884 00a8 	strb.w	r0, [r4, #168]	; 0xa8
 800b620:	f884 60aa 	strb.w	r6, [r4, #170]	; 0xaa
 800b624:	f104 0399 	add.w	r3, r4, #153	; 0x99
 800b628:	f104 02ac 	add.w	r2, r4, #172	; 0xac
 800b62c:	4293      	cmp	r3, r2
 800b62e:	d12a      	bne.n	800b686 <RDMDeviceResponder::Init()+0x122>
 800b630:	f894 30a8 	ldrb.w	r3, [r4, #168]	; 0xa8
 800b634:	f894 20a5 	ldrb.w	r2, [r4, #165]	; 0xa5
 800b638:	4413      	add	r3, r2
 800b63a:	f8a4 30c2 	strh.w	r3, [r4, #194]	; 0xc2
 800b63e:	bd70      	pop	{r4, r5, r6, pc}
 800b640:	f810 5b01 	ldrb.w	r5, [r0], #1
 800b644:	f800 5c48 	strb.w	r5, [r0, #-72]
 800b648:	e79a      	b.n	800b580 <RDMDeviceResponder::Init()+0x1c>
 800b64a:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800b64e:	440b      	add	r3, r1
 800b650:	b29b      	uxth	r3, r3
 800b652:	e7a7      	b.n	800b5a4 <RDMDeviceResponder::Init()+0x40>
 800b654:	682b      	ldr	r3, [r5, #0]
 800b656:	4628      	mov	r0, r5
 800b658:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b65a:	4798      	blx	r3
 800b65c:	0a00      	lsrs	r0, r0, #8
 800b65e:	f884 00a3 	strb.w	r0, [r4, #163]	; 0xa3
 800b662:	682b      	ldr	r3, [r5, #0]
 800b664:	4628      	mov	r0, r5
 800b666:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b668:	4798      	blx	r3
 800b66a:	f884 00a4 	strb.w	r0, [r4, #164]	; 0xa4
 800b66e:	682b      	ldr	r3, [r5, #0]
 800b670:	4628      	mov	r0, r5
 800b672:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b674:	4798      	blx	r3
 800b676:	0a00      	lsrs	r0, r0, #8
 800b678:	f884 00a7 	strb.w	r0, [r4, #167]	; 0xa7
 800b67c:	682b      	ldr	r3, [r5, #0]
 800b67e:	4628      	mov	r0, r5
 800b680:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b682:	4798      	blx	r3
 800b684:	e7bf      	b.n	800b606 <RDMDeviceResponder::Init()+0xa2>
 800b686:	f813 1b01 	ldrb.w	r1, [r3], #1
 800b68a:	7499      	strb	r1, [r3, #18]
 800b68c:	e7ce      	b.n	800b62c <RDMDeviceResponder::Init()+0xc8>
	...

0800b690 <RDMDeviceResponder::Print()>:
 800b690:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b692:	4604      	mov	r4, r0
 800b694:	3004      	adds	r0, #4
 800b696:	f000 fe79 	bl	800c38c <RDMDevice::Print()>
 800b69a:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800b69e:	481c      	ldr	r0, [pc, #112]	; (800b710 <RDMDeviceResponder::Print()+0x80>)
 800b6a0:	681d      	ldr	r5, [r3, #0]
 800b6a2:	6aae      	ldr	r6, [r5, #40]	; 0x28
 800b6a4:	f7fd ff64 	bl	8009570 <printf>
 800b6a8:	f894 209a 	ldrb.w	r2, [r4, #154]	; 0x9a
 800b6ac:	f894 1099 	ldrb.w	r1, [r4, #153]	; 0x99
 800b6b0:	4818      	ldr	r0, [pc, #96]	; (800b714 <RDMDeviceResponder::Print()+0x84>)
 800b6b2:	f7fd ff5d 	bl	8009570 <printf>
 800b6b6:	f894 30a8 	ldrb.w	r3, [r4, #168]	; 0xa8
 800b6ba:	f894 10a7 	ldrb.w	r1, [r4, #167]	; 0xa7
 800b6be:	4816      	ldr	r0, [pc, #88]	; (800b718 <RDMDeviceResponder::Print()+0x88>)
 800b6c0:	eb03 2101 	add.w	r1, r3, r1, lsl #8
 800b6c4:	f7fd ff54 	bl	8009570 <printf>
 800b6c8:	f894 30a4 	ldrb.w	r3, [r4, #164]	; 0xa4
 800b6cc:	f894 10a3 	ldrb.w	r1, [r4, #163]	; 0xa3
 800b6d0:	3508      	adds	r5, #8
 800b6d2:	eb03 2101 	add.w	r1, r3, r1, lsl #8
 800b6d6:	4811      	ldr	r0, [pc, #68]	; (800b71c <RDMDeviceResponder::Print()+0x8c>)
 800b6d8:	f7fd ff4a 	bl	8009570 <printf>
 800b6dc:	f894 20a6 	ldrb.w	r2, [r4, #166]	; 0xa6
 800b6e0:	f894 10a5 	ldrb.w	r1, [r4, #165]	; 0xa5
 800b6e4:	b2f3      	uxtb	r3, r6
 800b6e6:	9500      	str	r5, [sp, #0]
 800b6e8:	480d      	ldr	r0, [pc, #52]	; (800b720 <RDMDeviceResponder::Print()+0x90>)
 800b6ea:	f7fd ff41 	bl	8009570 <printf>
 800b6ee:	f894 10a9 	ldrb.w	r1, [r4, #169]	; 0xa9
 800b6f2:	f894 30aa 	ldrb.w	r3, [r4, #170]	; 0xaa
 800b6f6:	480b      	ldr	r0, [pc, #44]	; (800b724 <RDMDeviceResponder::Print()+0x94>)
 800b6f8:	eb03 2101 	add.w	r1, r3, r1, lsl #8
 800b6fc:	f7fd ff38 	bl	8009570 <printf>
 800b700:	f894 10ab 	ldrb.w	r1, [r4, #171]	; 0xab
 800b704:	4808      	ldr	r0, [pc, #32]	; (800b728 <RDMDeviceResponder::Print()+0x98>)
 800b706:	b002      	add	sp, #8
 800b708:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b70c:	f7fd bf30 	b.w	8009570 <printf>
 800b710:	08015f1d 	stmdaeq	r1, {r0, r2, r3, r4, r8, r9, sl, fp, ip, lr}
 800b714:	08015f3a 	stmdaeq	r1, {r1, r3, r4, r5, r8, r9, sl, fp, ip, lr}
 800b718:	08015f53 	stmdaeq	r1, {r0, r1, r4, r6, r8, r9, sl, fp, ip, lr}
 800b71c:	08015f6b 	stmdaeq	r1, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}
 800b720:	08015f83 	stmdaeq	r1, {r0, r1, r7, r8, r9, sl, fp, ip, lr}
 800b724:	08015fa1 	stmdaeq	r1, {r0, r5, r7, r8, r9, sl, fp, ip, lr}
 800b728:	08015fb9 	stmdaeq	r1, {r0, r3, r4, r5, r7, r8, r9, sl, fp, ip, lr}

0800b72c <memcmp>:
 800b72c:	b510      	push	{r4, lr}
 800b72e:	3901      	subs	r1, #1
 800b730:	4402      	add	r2, r0
 800b732:	4290      	cmp	r0, r2
 800b734:	d101      	bne.n	800b73a <memcmp+0xe>
 800b736:	2000      	movs	r0, #0
 800b738:	e005      	b.n	800b746 <memcmp+0x1a>
 800b73a:	7803      	ldrb	r3, [r0, #0]
 800b73c:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800b740:	42a3      	cmp	r3, r4
 800b742:	d001      	beq.n	800b748 <memcmp+0x1c>
 800b744:	1b18      	subs	r0, r3, r4
 800b746:	bd10      	pop	{r4, pc}
 800b748:	3001      	adds	r0, #1
 800b74a:	e7f2      	b.n	800b732 <memcmp+0x6>

0800b74c <memcpy.isra.0>:
 800b74c:	3801      	subs	r0, #1
 800b74e:	440a      	add	r2, r1
 800b750:	4291      	cmp	r1, r2
 800b752:	d100      	bne.n	800b756 <memcpy.isra.0+0xa>
 800b754:	4770      	bx	lr
 800b756:	f811 3b01 	ldrb.w	r3, [r1], #1
 800b75a:	f800 3f01 	strb.w	r3, [r0, #1]!
 800b75e:	e7f7      	b.n	800b750 <memcpy.isra.0+0x4>

0800b760 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>:
 800b760:	b570      	push	{r4, r5, r6, lr}
 800b762:	790d      	ldrb	r5, [r1, #4]
 800b764:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
 800b768:	2d20      	cmp	r5, #32
 800b76a:	4604      	mov	r4, r0
 800b76c:	bf28      	it	cs
 800b76e:	2520      	movcs	r5, #32
 800b770:	6809      	ldr	r1, [r1, #0]
 800b772:	b183      	cbz	r3, 800b796 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x36>
 800b774:	f100 060a 	add.w	r6, r0, #10
 800b778:	4630      	mov	r0, r6
 800b77a:	462a      	mov	r2, r5
 800b77c:	f7ff ffe6 	bl	800b74c <memcpy.isra.0>
 800b780:	6f60      	ldr	r0, [r4, #116]	; 0x74
 800b782:	f884 502a 	strb.w	r5, [r4, #42]	; 0x2a
 800b786:	b160      	cbz	r0, 800b7a2 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x42>
 800b788:	6803      	ldr	r3, [r0, #0]
 800b78a:	462a      	mov	r2, r5
 800b78c:	4631      	mov	r1, r6
 800b78e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b792:	689b      	ldr	r3, [r3, #8]
 800b794:	4718      	bx	r3
 800b796:	462a      	mov	r2, r5
 800b798:	3051      	adds	r0, #81	; 0x51
 800b79a:	f7ff ffd7 	bl	800b74c <memcpy.isra.0>
 800b79e:	f884 5071 	strb.w	r5, [r4, #113]	; 0x71
 800b7a2:	bd70      	pop	{r4, r5, r6, pc}

0800b7a4 <RDMDeviceResponder::SetFactoryDefaults()>:
 800b7a4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b7a6:	4604      	mov	r4, r0
 800b7a8:	f06f 050c 	mvn.w	r5, #12
 800b7ac:	f100 0355 	add.w	r3, r0, #85	; 0x55
 800b7b0:	9300      	str	r3, [sp, #0]
 800b7b2:	f890 3075 	ldrb.w	r3, [r0, #117]	; 0x75
 800b7b6:	4669      	mov	r1, sp
 800b7b8:	3004      	adds	r0, #4
 800b7ba:	f88d 3004 	strb.w	r3, [sp, #4]
 800b7be:	f7ff ffcf 	bl	800b760 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>
 800b7c2:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800b7c6:	f894 002e 	ldrb.w	r0, [r4, #46]	; 0x2e
 800b7ca:	f104 020d 	add.w	r2, r4, #13
 800b7ce:	1b2d      	subs	r5, r5, r4
 800b7d0:	18a9      	adds	r1, r5, r2
 800b7d2:	4288      	cmp	r0, r1
 800b7d4:	d865      	bhi.n	800b8a2 <RDMDeviceResponder::SetFactoryDefaults()+0xfe>
 800b7d6:	f8a4 3076 	strh.w	r3, [r4, #118]	; 0x76
 800b7da:	2301      	movs	r3, #1
 800b7dc:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 800b7e0:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800b7e4:	681b      	ldr	r3, [r3, #0]
 800b7e6:	685d      	ldr	r5, [r3, #4]
 800b7e8:	b1f5      	cbz	r5, 800b828 <RDMDeviceResponder::SetFactoryDefaults()+0x84>
 800b7ea:	682b      	ldr	r3, [r5, #0]
 800b7ec:	4628      	mov	r0, r5
 800b7ee:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b7f0:	4798      	blx	r3
 800b7f2:	0a00      	lsrs	r0, r0, #8
 800b7f4:	f884 00a3 	strb.w	r0, [r4, #163]	; 0xa3
 800b7f8:	682b      	ldr	r3, [r5, #0]
 800b7fa:	4628      	mov	r0, r5
 800b7fc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b7fe:	4798      	blx	r3
 800b800:	f884 00a4 	strb.w	r0, [r4, #164]	; 0xa4
 800b804:	682b      	ldr	r3, [r5, #0]
 800b806:	4628      	mov	r0, r5
 800b808:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b80a:	4798      	blx	r3
 800b80c:	0a00      	lsrs	r0, r0, #8
 800b80e:	f884 00a7 	strb.w	r0, [r4, #167]	; 0xa7
 800b812:	682b      	ldr	r3, [r5, #0]
 800b814:	4628      	mov	r0, r5
 800b816:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b818:	4798      	blx	r3
 800b81a:	6823      	ldr	r3, [r4, #0]
 800b81c:	f884 00a8 	strb.w	r0, [r4, #168]	; 0xa8
 800b820:	4629      	mov	r1, r5
 800b822:	4620      	mov	r0, r4
 800b824:	689b      	ldr	r3, [r3, #8]
 800b826:	4798      	blx	r3
 800b828:	f8b4 50c4 	ldrh.w	r5, [r4, #196]	; 0xc4
 800b82c:	1e6b      	subs	r3, r5, #1
 800b82e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800b832:	d218      	bcs.n	800b866 <RDMDeviceResponder::SetFactoryDefaults()+0xc2>
 800b834:	f894 30a5 	ldrb.w	r3, [r4, #165]	; 0xa5
 800b838:	f8d4 2090 	ldr.w	r2, [r4, #144]	; 0x90
 800b83c:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800b840:	3b01      	subs	r3, #1
 800b842:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800b846:	6858      	ldr	r0, [r3, #4]
 800b848:	b168      	cbz	r0, 800b866 <RDMDeviceResponder::SetFactoryDefaults()+0xc2>
 800b84a:	6803      	ldr	r3, [r0, #0]
 800b84c:	4629      	mov	r1, r5
 800b84e:	6a1b      	ldr	r3, [r3, #32]
 800b850:	4798      	blx	r3
 800b852:	b120      	cbz	r0, 800b85e <RDMDeviceResponder::SetFactoryDefaults()+0xba>
 800b854:	0a2b      	lsrs	r3, r5, #8
 800b856:	f884 30a7 	strb.w	r3, [r4, #167]	; 0xa7
 800b85a:	f884 50a8 	strb.w	r5, [r4, #168]	; 0xa8
 800b85e:	6823      	ldr	r3, [r4, #0]
 800b860:	4620      	mov	r0, r4
 800b862:	68db      	ldr	r3, [r3, #12]
 800b864:	4798      	blx	r3
 800b866:	2213      	movs	r2, #19
 800b868:	f104 0199 	add.w	r1, r4, #153	; 0x99
 800b86c:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 800b870:	f7ff ff6c 	bl	800b74c <memcpy.isra.0>
 800b874:	f104 0088 	add.w	r0, r4, #136	; 0x88
 800b878:	f7ff fd4b 	bl	800b312 <RDMSubDevices::SetFactoryDefaults()>
 800b87c:	f894 30a8 	ldrb.w	r3, [r4, #168]	; 0xa8
 800b880:	f894 20a5 	ldrb.w	r2, [r4, #165]	; 0xa5
 800b884:	f8d4 00c8 	ldr.w	r0, [r4, #200]	; 0xc8
 800b888:	4413      	add	r3, r2
 800b88a:	f8a4 30c2 	strh.w	r3, [r4, #194]	; 0xc2
 800b88e:	2301      	movs	r3, #1
 800b890:	f884 30c1 	strb.w	r3, [r4, #193]	; 0xc1
 800b894:	b150      	cbz	r0, 800b8ac <RDMDeviceResponder::SetFactoryDefaults()+0x108>
 800b896:	6803      	ldr	r3, [r0, #0]
 800b898:	689b      	ldr	r3, [r3, #8]
 800b89a:	b003      	add	sp, #12
 800b89c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800b8a0:	4718      	bx	r3
 800b8a2:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800b8a6:	440b      	add	r3, r1
 800b8a8:	b29b      	uxth	r3, r3
 800b8aa:	e791      	b.n	800b7d0 <RDMDeviceResponder::SetFactoryDefaults()+0x2c>
 800b8ac:	b003      	add	sp, #12
 800b8ae:	bd30      	pop	{r4, r5, pc}

0800b8b0 <RDMHandler::RDMHandler(bool)>:
 800b8b0:	2200      	movs	r2, #0
 800b8b2:	7001      	strb	r1, [r0, #0]
 800b8b4:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800b8b8:	7042      	strb	r2, [r0, #1]
 800b8ba:	4770      	bx	lr

0800b8bc <RDMHandler::HandleString(char const*, unsigned int)>:
 800b8bc:	6883      	ldr	r3, [r0, #8]
 800b8be:	f803 2f17 	strb.w	r2, [r3, #23]!
 800b8c2:	440a      	add	r2, r1
 800b8c4:	4291      	cmp	r1, r2
 800b8c6:	d100      	bne.n	800b8ca <RDMHandler::HandleString(char const*, unsigned int)+0xe>
 800b8c8:	4770      	bx	lr
 800b8ca:	f811 0b01 	ldrb.w	r0, [r1], #1
 800b8ce:	f803 0f01 	strb.w	r0, [r3, #1]!
 800b8d2:	e7f7      	b.n	800b8c4 <RDMHandler::HandleString(char const*, unsigned int)+0x8>

0800b8d4 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)>:
 800b8d4:	b570      	push	{r4, r5, r6, lr}
 800b8d6:	e9d0 4301 	ldrd	r4, r3, [r0, #4]
 800b8da:	25cc      	movs	r5, #204	; 0xcc
 800b8dc:	701d      	strb	r5, [r3, #0]
 800b8de:	7825      	ldrb	r5, [r4, #0]
 800b8e0:	705d      	strb	r5, [r3, #1]
 800b8e2:	7ba5      	ldrb	r5, [r4, #14]
 800b8e4:	73dd      	strb	r5, [r3, #15]
 800b8e6:	2500      	movs	r5, #0
 800b8e8:	745d      	strb	r5, [r3, #17]
 800b8ea:	7c65      	ldrb	r5, [r4, #17]
 800b8ec:	749d      	strb	r5, [r3, #18]
 800b8ee:	7ca5      	ldrb	r5, [r4, #18]
 800b8f0:	74dd      	strb	r5, [r3, #19]
 800b8f2:	7ce5      	ldrb	r5, [r4, #19]
 800b8f4:	3501      	adds	r5, #1
 800b8f6:	751d      	strb	r5, [r3, #20]
 800b8f8:	7d25      	ldrb	r5, [r4, #20]
 800b8fa:	755d      	strb	r5, [r3, #21]
 800b8fc:	7d65      	ldrb	r5, [r4, #21]
 800b8fe:	759d      	strb	r5, [r3, #22]
 800b900:	b119      	cbz	r1, 800b90a <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x36>
 800b902:	1e4d      	subs	r5, r1, #1
 800b904:	2d01      	cmp	r5, #1
 800b906:	d921      	bls.n	800b94c <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x78>
 800b908:	bd70      	pop	{r4, r5, r6, pc}
 800b90a:	7dda      	ldrb	r2, [r3, #23]
 800b90c:	7419      	strb	r1, [r3, #16]
 800b90e:	3218      	adds	r2, #24
 800b910:	709a      	strb	r2, [r3, #2]
 800b912:	4a15      	ldr	r2, [pc, #84]	; (800b968 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x94>)
 800b914:	1de1      	adds	r1, r4, #7
 800b916:	6812      	ldr	r2, [r2, #0]
 800b918:	1c9d      	adds	r5, r3, #2
 800b91a:	3203      	adds	r2, #3
 800b91c:	340d      	adds	r4, #13
 800b91e:	f811 6f01 	ldrb.w	r6, [r1, #1]!
 800b922:	f805 6f01 	strb.w	r6, [r5, #1]!
 800b926:	f812 6f01 	ldrb.w	r6, [r2, #1]!
 800b92a:	42a1      	cmp	r1, r4
 800b92c:	71ae      	strb	r6, [r5, #6]
 800b92e:	d1f6      	bne.n	800b91e <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x4a>
 800b930:	2200      	movs	r2, #0
 800b932:	7899      	ldrb	r1, [r3, #2]
 800b934:	4613      	mov	r3, r2
 800b936:	6884      	ldr	r4, [r0, #8]
 800b938:	428a      	cmp	r2, r1
 800b93a:	eb04 0502 	add.w	r5, r4, r2
 800b93e:	d30e      	bcc.n	800b95e <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x8a>
 800b940:	0a1a      	lsrs	r2, r3, #8
 800b942:	702a      	strb	r2, [r5, #0]
 800b944:	6882      	ldr	r2, [r0, #8]
 800b946:	440a      	add	r2, r1
 800b948:	7053      	strb	r3, [r2, #1]
 800b94a:	e7dd      	b.n	800b908 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x34>
 800b94c:	7419      	strb	r1, [r3, #16]
 800b94e:	2102      	movs	r1, #2
 800b950:	251a      	movs	r5, #26
 800b952:	75d9      	strb	r1, [r3, #23]
 800b954:	0a11      	lsrs	r1, r2, #8
 800b956:	709d      	strb	r5, [r3, #2]
 800b958:	7619      	strb	r1, [r3, #24]
 800b95a:	765a      	strb	r2, [r3, #25]
 800b95c:	e7d9      	b.n	800b912 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x3e>
 800b95e:	5ca5      	ldrb	r5, [r4, r2]
 800b960:	3201      	adds	r2, #1
 800b962:	442b      	add	r3, r5
 800b964:	b29b      	uxth	r3, r3
 800b966:	e7e7      	b.n	800b938 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x64>
 800b968:	20009848 	andcs	r9, r0, r8, asr #16

0800b96c <RDMHandler::RespondMessageAck()>:
 800b96c:	6843      	ldr	r3, [r0, #4]
 800b96e:	7d9a      	ldrb	r2, [r3, #22]
 800b970:	b90a      	cbnz	r2, 800b976 <RDMHandler::RespondMessageAck()+0xa>
 800b972:	2218      	movs	r2, #24
 800b974:	705a      	strb	r2, [r3, #1]
 800b976:	2200      	movs	r2, #0
 800b978:	4611      	mov	r1, r2
 800b97a:	f7ff bfab 	b.w	800b8d4 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)>
	...

0800b980 <RDMHandler::GetDeviceInfo(unsigned short)>:
 800b980:	b538      	push	{r3, r4, r5, lr}
 800b982:	4b18      	ldr	r3, [pc, #96]	; (800b9e4 <RDMHandler::GetDeviceInfo(unsigned short)+0x64>)
 800b984:	4605      	mov	r5, r0
 800b986:	681c      	ldr	r4, [r3, #0]
 800b988:	b349      	cbz	r1, 800b9de <RDMHandler::GetDeviceInfo(unsigned short)+0x5e>
 800b98a:	f104 0088 	add.w	r0, r4, #136	; 0x88
 800b98e:	f7ff fc8f 	bl	800b2b0 <RDMSubDevices::GetInfo(unsigned short)>
 800b992:	b1b8      	cbz	r0, 800b9c4 <RDMHandler::GetDeviceInfo(unsigned short)+0x44>
 800b994:	8803      	ldrh	r3, [r0, #0]
 800b996:	0a1b      	lsrs	r3, r3, #8
 800b998:	f884 30b6 	strb.w	r3, [r4, #182]	; 0xb6
 800b99c:	8803      	ldrh	r3, [r0, #0]
 800b99e:	f884 30b7 	strb.w	r3, [r4, #183]	; 0xb7
 800b9a2:	7903      	ldrb	r3, [r0, #4]
 800b9a4:	f884 30b8 	strb.w	r3, [r4, #184]	; 0xb8
 800b9a8:	7943      	ldrb	r3, [r0, #5]
 800b9aa:	f884 30b9 	strb.w	r3, [r4, #185]	; 0xb9
 800b9ae:	8843      	ldrh	r3, [r0, #2]
 800b9b0:	0a1b      	lsrs	r3, r3, #8
 800b9b2:	f884 30ba 	strb.w	r3, [r4, #186]	; 0xba
 800b9b6:	8843      	ldrh	r3, [r0, #2]
 800b9b8:	f884 30bb 	strb.w	r3, [r4, #187]	; 0xbb
 800b9bc:	f890 3027 	ldrb.w	r3, [r0, #39]	; 0x27
 800b9c0:	f884 30be 	strb.w	r3, [r4, #190]	; 0xbe
 800b9c4:	f104 01ac 	add.w	r1, r4, #172	; 0xac
 800b9c8:	2213      	movs	r2, #19
 800b9ca:	68a8      	ldr	r0, [r5, #8]
 800b9cc:	75c2      	strb	r2, [r0, #23]
 800b9ce:	3018      	adds	r0, #24
 800b9d0:	f7ff febc 	bl	800b74c <memcpy.isra.0>
 800b9d4:	4628      	mov	r0, r5
 800b9d6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800b9da:	f7ff bfc7 	b.w	800b96c <RDMHandler::RespondMessageAck()>
 800b9de:	f104 0199 	add.w	r1, r4, #153	; 0x99
 800b9e2:	e7f1      	b.n	800b9c8 <RDMHandler::GetDeviceInfo(unsigned short)+0x48>
 800b9e4:	20009848 	andcs	r9, r0, r8, asr #16

0800b9e8 <RDMHandler::GetFactoryDefaults(unsigned short)>:
 800b9e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b9ea:	2301      	movs	r3, #1
 800b9ec:	6886      	ldr	r6, [r0, #8]
 800b9ee:	4605      	mov	r5, r0
 800b9f0:	75f3      	strb	r3, [r6, #23]
 800b9f2:	4b1c      	ldr	r3, [pc, #112]	; (800ba64 <RDMHandler::GetFactoryDefaults(unsigned short)+0x7c>)
 800b9f4:	681c      	ldr	r4, [r3, #0]
 800b9f6:	f894 30c1 	ldrb.w	r3, [r4, #193]	; 0xc1
 800b9fa:	b37b      	cbz	r3, 800ba5c <RDMHandler::GetFactoryDefaults(unsigned short)+0x74>
 800b9fc:	f06f 0c0c 	mvn.w	ip, #12
 800ba00:	f8b4 1076 	ldrh.w	r1, [r4, #118]	; 0x76
 800ba04:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800ba08:	f894 002e 	ldrb.w	r0, [r4, #46]	; 0x2e
 800ba0c:	f104 020d 	add.w	r2, r4, #13
 800ba10:	ebac 0c04 	sub.w	ip, ip, r4
 800ba14:	eb0c 0702 	add.w	r7, ip, r2
 800ba18:	4287      	cmp	r7, r0
 800ba1a:	d30a      	bcc.n	800ba32 <RDMHandler::GetFactoryDefaults(unsigned short)+0x4a>
 800ba1c:	4299      	cmp	r1, r3
 800ba1e:	d00d      	beq.n	800ba3c <RDMHandler::GetFactoryDefaults(unsigned short)+0x54>
 800ba20:	2300      	movs	r3, #0
 800ba22:	f884 30c1 	strb.w	r3, [r4, #193]	; 0xc1
 800ba26:	7633      	strb	r3, [r6, #24]
 800ba28:	4628      	mov	r0, r5
 800ba2a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800ba2e:	f7ff bf9d 	b.w	800b96c <RDMHandler::RespondMessageAck()>
 800ba32:	f812 7f01 	ldrb.w	r7, [r2, #1]!
 800ba36:	443b      	add	r3, r7
 800ba38:	b29b      	uxth	r3, r3
 800ba3a:	e7eb      	b.n	800ba14 <RDMHandler::GetFactoryDefaults(unsigned short)+0x2c>
 800ba3c:	f894 30a8 	ldrb.w	r3, [r4, #168]	; 0xa8
 800ba40:	f894 10a5 	ldrb.w	r1, [r4, #165]	; 0xa5
 800ba44:	f8b4 20c2 	ldrh.w	r2, [r4, #194]	; 0xc2
 800ba48:	440b      	add	r3, r1
 800ba4a:	429a      	cmp	r2, r3
 800ba4c:	d1e8      	bne.n	800ba20 <RDMHandler::GetFactoryDefaults(unsigned short)+0x38>
 800ba4e:	f104 0088 	add.w	r0, r4, #136	; 0x88
 800ba52:	f7ff fc4b 	bl	800b2ec <RDMSubDevices::GetFactoryDefaults()>
 800ba56:	4603      	mov	r3, r0
 800ba58:	2800      	cmp	r0, #0
 800ba5a:	d0e2      	beq.n	800ba22 <RDMHandler::GetFactoryDefaults(unsigned short)+0x3a>
 800ba5c:	f894 30c1 	ldrb.w	r3, [r4, #193]	; 0xc1
 800ba60:	e7e1      	b.n	800ba26 <RDMHandler::GetFactoryDefaults(unsigned short)+0x3e>
 800ba62:	bf00      	nop
 800ba64:	20009848 	andcs	r9, r0, r8, asr #16

0800ba68 <RDMHandler::GetDeviceModelDescription(unsigned short)>:
 800ba68:	b510      	push	{r4, lr}
 800ba6a:	4604      	mov	r4, r0
 800ba6c:	220a      	movs	r2, #10
 800ba6e:	4904      	ldr	r1, [pc, #16]	; (800ba80 <RDMHandler::GetDeviceModelDescription(unsigned short)+0x18>)
 800ba70:	f7ff ff24 	bl	800b8bc <RDMHandler::HandleString(char const*, unsigned int)>
 800ba74:	4620      	mov	r0, r4
 800ba76:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ba7a:	f7ff bf77 	b.w	800b96c <RDMHandler::RespondMessageAck()>
 800ba7e:	bf00      	nop
 800ba80:	08015394 	stmdaeq	r1, {r2, r4, r7, r8, r9, ip, lr}

0800ba84 <RDMHandler::GetManufacturerLabel(unsigned short)>:
 800ba84:	b510      	push	{r4, lr}
 800ba86:	4604      	mov	r4, r0
 800ba88:	4b05      	ldr	r3, [pc, #20]	; (800baa0 <RDMHandler::GetManufacturerLabel(unsigned short)+0x1c>)
 800ba8a:	6819      	ldr	r1, [r3, #0]
 800ba8c:	f891 204f 	ldrb.w	r2, [r1, #79]	; 0x4f
 800ba90:	312f      	adds	r1, #47	; 0x2f
 800ba92:	f7ff ff13 	bl	800b8bc <RDMHandler::HandleString(char const*, unsigned int)>
 800ba96:	4620      	mov	r0, r4
 800ba98:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ba9c:	f7ff bf66 	b.w	800b96c <RDMHandler::RespondMessageAck()>
 800baa0:	20009848 	andcs	r9, r0, r8, asr #16

0800baa4 <RDMHandler::GetDeviceLabel(unsigned short)>:
 800baa4:	4b0d      	ldr	r3, [pc, #52]	; (800badc <RDMHandler::GetDeviceLabel(unsigned short)+0x38>)
 800baa6:	b513      	push	{r0, r1, r4, lr}
 800baa8:	4604      	mov	r4, r0
 800baaa:	6818      	ldr	r0, [r3, #0]
 800baac:	b171      	cbz	r1, 800bacc <RDMHandler::GetDeviceLabel(unsigned short)+0x28>
 800baae:	466a      	mov	r2, sp
 800bab0:	3088      	adds	r0, #136	; 0x88
 800bab2:	f7ff fc05 	bl	800b2c0 <RDMSubDevices::GetLabel(unsigned short, TRDMDeviceInfoData*)>
 800bab6:	4620      	mov	r0, r4
 800bab8:	f89d 2004 	ldrb.w	r2, [sp, #4]
 800babc:	9900      	ldr	r1, [sp, #0]
 800babe:	f7ff fefd 	bl	800b8bc <RDMHandler::HandleString(char const*, unsigned int)>
 800bac2:	4620      	mov	r0, r4
 800bac4:	f7ff ff52 	bl	800b96c <RDMHandler::RespondMessageAck()>
 800bac8:	b002      	add	sp, #8
 800baca:	bd10      	pop	{r4, pc}
 800bacc:	f100 030e 	add.w	r3, r0, #14
 800bad0:	9300      	str	r3, [sp, #0]
 800bad2:	f890 302e 	ldrb.w	r3, [r0, #46]	; 0x2e
 800bad6:	f88d 3004 	strb.w	r3, [sp, #4]
 800bada:	e7ec      	b.n	800bab6 <RDMHandler::GetDeviceLabel(unsigned short)+0x12>
 800badc:	20009848 	andcs	r9, r0, r8, asr #16

0800bae0 <RDMHandler::GetIdentifyDevice(unsigned short)>:
 800bae0:	2201      	movs	r2, #1
 800bae2:	6883      	ldr	r3, [r0, #8]
 800bae4:	75da      	strb	r2, [r3, #23]
 800bae6:	4a02      	ldr	r2, [pc, #8]	; (800baf0 <RDMHandler::GetIdentifyDevice(unsigned short)+0x10>)
 800bae8:	7812      	ldrb	r2, [r2, #0]
 800baea:	761a      	strb	r2, [r3, #24]
 800baec:	f7ff bf3e 	b.w	800b96c <RDMHandler::RespondMessageAck()>
 800baf0:	2000984c 	andcs	r9, r0, ip, asr #16

0800baf4 <RDMHandler::RespondMessageNack(unsigned short)>:
 800baf4:	460a      	mov	r2, r1
 800baf6:	2102      	movs	r1, #2
 800baf8:	f7ff beec 	b.w	800b8d4 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)>

0800bafc <RDMHandler::SetResetDevice(bool, unsigned short)>:
 800bafc:	b510      	push	{r4, lr}
 800bafe:	6843      	ldr	r3, [r0, #4]
 800bb00:	4604      	mov	r4, r0
 800bb02:	7d9a      	ldrb	r2, [r3, #22]
 800bb04:	2a01      	cmp	r2, #1
 800bb06:	d004      	beq.n	800bb12 <RDMHandler::SetResetDevice(bool, unsigned short)+0x16>
 800bb08:	2101      	movs	r1, #1
 800bb0a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bb0e:	f7ff bff1 	b.w	800baf4 <RDMHandler::RespondMessageNack(unsigned short)>
 800bb12:	7ddb      	ldrb	r3, [r3, #23]
 800bb14:	2b01      	cmp	r3, #1
 800bb16:	d003      	beq.n	800bb20 <RDMHandler::SetResetDevice(bool, unsigned short)+0x24>
 800bb18:	2bff      	cmp	r3, #255	; 0xff
 800bb1a:	d001      	beq.n	800bb20 <RDMHandler::SetResetDevice(bool, unsigned short)+0x24>
 800bb1c:	2106      	movs	r1, #6
 800bb1e:	e7f4      	b.n	800bb0a <RDMHandler::SetResetDevice(bool, unsigned short)+0xe>
 800bb20:	2100      	movs	r1, #0
 800bb22:	68a2      	ldr	r2, [r4, #8]
 800bb24:	2bff      	cmp	r3, #255	; 0xff
 800bb26:	75d1      	strb	r1, [r2, #23]
 800bb28:	d102      	bne.n	800bb30 <RDMHandler::SetResetDevice(bool, unsigned short)+0x34>
 800bb2a:	2104      	movs	r1, #4
 800bb2c:	4620      	mov	r0, r4
 800bb2e:	e7ec      	b.n	800bb0a <RDMHandler::SetResetDevice(bool, unsigned short)+0xe>
 800bb30:	4b03      	ldr	r3, [pc, #12]	; (800bb40 <RDMHandler::SetResetDevice(bool, unsigned short)+0x44>)
 800bb32:	6818      	ldr	r0, [r3, #0]
 800bb34:	f006 fcd0 	bl	80124d8 <Hardware::Reboot()>
 800bb38:	2800      	cmp	r0, #0
 800bb3a:	d0f6      	beq.n	800bb2a <RDMHandler::SetResetDevice(bool, unsigned short)+0x2e>
 800bb3c:	bd10      	pop	{r4, pc}
 800bb3e:	bf00      	nop
 800bb40:	2001a950 	andcs	sl, r1, r0, asr r9

0800bb44 <RDMHandler::SetIdentifyDevice(bool, unsigned short)>:
 800bb44:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800bb46:	6843      	ldr	r3, [r0, #4]
 800bb48:	460d      	mov	r5, r1
 800bb4a:	7d99      	ldrb	r1, [r3, #22]
 800bb4c:	4604      	mov	r4, r0
 800bb4e:	2901      	cmp	r1, #1
 800bb50:	d004      	beq.n	800bb5c <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x18>
 800bb52:	2101      	movs	r1, #1
 800bb54:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800bb58:	f7ff bfcc 	b.w	800baf4 <RDMHandler::RespondMessageNack(unsigned short)>
 800bb5c:	7ddb      	ldrb	r3, [r3, #23]
 800bb5e:	2b01      	cmp	r3, #1
 800bb60:	d901      	bls.n	800bb66 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x22>
 800bb62:	2106      	movs	r1, #6
 800bb64:	e7f6      	b.n	800bb54 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x10>
 800bb66:	4a12      	ldr	r2, [pc, #72]	; (800bbb0 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x6c>)
 800bb68:	4f12      	ldr	r7, [pc, #72]	; (800bbb4 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x70>)
 800bb6a:	6816      	ldr	r6, [r2, #0]
 800bb6c:	4a12      	ldr	r2, [pc, #72]	; (800bbb8 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x74>)
 800bb6e:	6810      	ldr	r0, [r2, #0]
 800bb70:	4a12      	ldr	r2, [pc, #72]	; (800bbbc <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x78>)
 800bb72:	b983      	cbnz	r3, 800bb96 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x52>
 800bb74:	2102      	movs	r1, #2
 800bb76:	7013      	strb	r3, [r2, #0]
 800bb78:	f006 fc0e 	bl	8012398 <LedBlink::SetMode(ledblink::Mode)>
 800bb7c:	7839      	ldrb	r1, [r7, #0]
 800bb7e:	b111      	cbz	r1, 800bb86 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x42>
 800bb80:	4630      	mov	r0, r6
 800bb82:	f000 f9a8 	bl	800bed6 <RDMIdentify::Off(rdm::identify::Mode)>
 800bb86:	b98d      	cbnz	r5, 800bbac <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x68>
 800bb88:	68a3      	ldr	r3, [r4, #8]
 800bb8a:	4620      	mov	r0, r4
 800bb8c:	75dd      	strb	r5, [r3, #23]
 800bb8e:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800bb92:	f7ff beeb 	b.w	800b96c <RDMHandler::RespondMessageAck()>
 800bb96:	7011      	strb	r1, [r2, #0]
 800bb98:	2104      	movs	r1, #4
 800bb9a:	f006 fbfd 	bl	8012398 <LedBlink::SetMode(ledblink::Mode)>
 800bb9e:	7839      	ldrb	r1, [r7, #0]
 800bba0:	2900      	cmp	r1, #0
 800bba2:	d0f0      	beq.n	800bb86 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x42>
 800bba4:	4630      	mov	r0, r6
 800bba6:	f000 f995 	bl	800bed4 <RDMIdentify::On(rdm::identify::Mode)>
 800bbaa:	e7ec      	b.n	800bb86 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x42>
 800bbac:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800bbae:	bf00      	nop
 800bbb0:	20009850 	andcs	r9, r0, r0, asr r8
 800bbb4:	2000984d 	andcs	r9, r0, sp, asr #16
 800bbb8:	2001a94c 	andcs	sl, r1, ip, asr #18
 800bbbc:	2000984c 	andcs	r9, r0, ip, asr #16

0800bbc0 <RDMHandler::SetFactoryDefaults(bool, unsigned short)>:
 800bbc0:	b538      	push	{r3, r4, r5, lr}
 800bbc2:	6843      	ldr	r3, [r0, #4]
 800bbc4:	4604      	mov	r4, r0
 800bbc6:	7d9b      	ldrb	r3, [r3, #22]
 800bbc8:	460d      	mov	r5, r1
 800bbca:	b123      	cbz	r3, 800bbd6 <RDMHandler::SetFactoryDefaults(bool, unsigned short)+0x16>
 800bbcc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800bbd0:	2101      	movs	r1, #1
 800bbd2:	f7ff bf8f 	b.w	800baf4 <RDMHandler::RespondMessageNack(unsigned short)>
 800bbd6:	4b06      	ldr	r3, [pc, #24]	; (800bbf0 <RDMHandler::SetFactoryDefaults(bool, unsigned short)+0x30>)
 800bbd8:	6818      	ldr	r0, [r3, #0]
 800bbda:	f7ff fde3 	bl	800b7a4 <RDMDeviceResponder::SetFactoryDefaults()>
 800bbde:	b935      	cbnz	r5, 800bbee <RDMHandler::SetFactoryDefaults(bool, unsigned short)+0x2e>
 800bbe0:	68a3      	ldr	r3, [r4, #8]
 800bbe2:	4620      	mov	r0, r4
 800bbe4:	75dd      	strb	r5, [r3, #23]
 800bbe6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800bbea:	f7ff bebf 	b.w	800b96c <RDMHandler::RespondMessageAck()>
 800bbee:	bd38      	pop	{r3, r4, r5, pc}
 800bbf0:	20009848 	andcs	r9, r0, r8, asr #16

0800bbf4 <RDMHandler::SetDeviceLabel(bool, unsigned short)>:
 800bbf4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800bbf6:	6845      	ldr	r5, [r0, #4]
 800bbf8:	460e      	mov	r6, r1
 800bbfa:	7dab      	ldrb	r3, [r5, #22]
 800bbfc:	4604      	mov	r4, r0
 800bbfe:	2b20      	cmp	r3, #32
 800bc00:	4611      	mov	r1, r2
 800bc02:	d905      	bls.n	800bc10 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x1c>
 800bc04:	2101      	movs	r1, #1
 800bc06:	b002      	add	sp, #8
 800bc08:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bc0c:	f7ff bf72 	b.w	800baf4 <RDMHandler::RespondMessageNack(unsigned short)>
 800bc10:	4a0d      	ldr	r2, [pc, #52]	; (800bc48 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x54>)
 800bc12:	6810      	ldr	r0, [r2, #0]
 800bc14:	f105 0217 	add.w	r2, r5, #23
 800bc18:	b159      	cbz	r1, 800bc32 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x3e>
 800bc1a:	3088      	adds	r0, #136	; 0x88
 800bc1c:	f7ff fb59 	bl	800b2d2 <RDMSubDevices::SetLabel(unsigned short, char const*, unsigned char)>
 800bc20:	b97e      	cbnz	r6, 800bc42 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x4e>
 800bc22:	4620      	mov	r0, r4
 800bc24:	68a3      	ldr	r3, [r4, #8]
 800bc26:	75de      	strb	r6, [r3, #23]
 800bc28:	b002      	add	sp, #8
 800bc2a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bc2e:	f7ff be9d 	b.w	800b96c <RDMHandler::RespondMessageAck()>
 800bc32:	4669      	mov	r1, sp
 800bc34:	3004      	adds	r0, #4
 800bc36:	9200      	str	r2, [sp, #0]
 800bc38:	f88d 3004 	strb.w	r3, [sp, #4]
 800bc3c:	f7ff fd90 	bl	800b760 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>
 800bc40:	e7ee      	b.n	800bc20 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x2c>
 800bc42:	b002      	add	sp, #8
 800bc44:	bd70      	pop	{r4, r5, r6, pc}
 800bc46:	bf00      	nop
 800bc48:	20009848 	andcs	r9, r0, r8, asr #16

0800bc4c <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)>:
 800bc4c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800bc50:	4616      	mov	r6, r2
 800bc52:	2700      	movs	r7, #0
 800bc54:	f006 04ef 	and.w	r4, r6, #239	; 0xef
 800bc58:	2c20      	cmp	r4, #32
 800bc5a:	46be      	mov	lr, r7
 800bc5c:	f89d 801c 	ldrb.w	r8, [sp, #28]
 800bc60:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 800bc64:	d004      	beq.n	800bc70 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x24>
 800bc66:	2105      	movs	r1, #5
 800bc68:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800bc6c:	f7ff bf42 	b.w	800baf4 <RDMHandler::RespondMessageNack(unsigned short)>
 800bc70:	4c2d      	ldr	r4, [pc, #180]	; (800bd28 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xdc>)
 800bc72:	6824      	ldr	r4, [r4, #0]
 800bc74:	88a4      	ldrh	r4, [r4, #4]
 800bc76:	4294      	cmp	r4, r2
 800bc78:	d205      	bcs.n	800bc86 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x3a>
 800bc7a:	f64f 74ff 	movw	r4, #65535	; 0xffff
 800bc7e:	42a2      	cmp	r2, r4
 800bc80:	d001      	beq.n	800bc86 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x3a>
 800bc82:	2109      	movs	r1, #9
 800bc84:	e7f0      	b.n	800bc68 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1c>
 800bc86:	f04f 0c14 	mov.w	ip, #20
 800bc8a:	2400      	movs	r4, #0
 800bc8c:	4d27      	ldr	r5, [pc, #156]	; (800bd2c <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xe0>)
 800bc8e:	f8b5 9000 	ldrh.w	r9, [r5]
 800bc92:	4599      	cmp	r9, r3
 800bc94:	bf02      	ittt	eq
 800bc96:	462c      	moveq	r4, r5
 800bc98:	7daf      	ldrbeq	r7, [r5, #22]
 800bc9a:	f895 e017 	ldrbeq.w	lr, [r5, #23]
 800bc9e:	f1bc 0c01 	subs.w	ip, ip, #1
 800bca2:	f105 0518 	add.w	r5, r5, #24
 800bca6:	d1f2      	bne.n	800bc8e <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x42>
 800bca8:	b90c      	cbnz	r4, 800bcae <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x62>
 800bcaa:	2100      	movs	r1, #0
 800bcac:	e7dc      	b.n	800bc68 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1c>
 800bcae:	7803      	ldrb	r3, [r0, #0]
 800bcb0:	b19b      	cbz	r3, 800bcda <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x8e>
 800bcb2:	2f00      	cmp	r7, #0
 800bcb4:	d0f9      	beq.n	800bcaa <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x5e>
 800bcb6:	2e20      	cmp	r6, #32
 800bcb8:	d121      	bne.n	800bcfe <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xb2>
 800bcba:	2900      	cmp	r1, #0
 800bcbc:	d131      	bne.n	800bd22 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xd6>
 800bcbe:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800bcc2:	429a      	cmp	r2, r3
 800bcc4:	d0dd      	beq.n	800bc82 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x36>
 800bcc6:	6863      	ldr	r3, [r4, #4]
 800bcc8:	b913      	cbnz	r3, 800bcd0 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x84>
 800bcca:	68a1      	ldr	r1, [r4, #8]
 800bccc:	07cd      	lsls	r5, r1, #31
 800bcce:	d5ca      	bpl.n	800bc66 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1a>
 800bcd0:	7d21      	ldrb	r1, [r4, #20]
 800bcd2:	4541      	cmp	r1, r8
 800bcd4:	d005      	beq.n	800bce2 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x96>
 800bcd6:	2101      	movs	r1, #1
 800bcd8:	e7c6      	b.n	800bc68 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1c>
 800bcda:	f1be 0f00 	cmp.w	lr, #0
 800bcde:	d1ea      	bne.n	800bcb6 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x6a>
 800bce0:	e7e3      	b.n	800bcaa <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x5e>
 800bce2:	68a1      	ldr	r1, [r4, #8]
 800bce4:	eb00 0461 	add.w	r4, r0, r1, asr #1
 800bce8:	104d      	asrs	r5, r1, #1
 800bcea:	07c9      	lsls	r1, r1, #31
 800bcec:	bf48      	it	mi
 800bcee:	5941      	ldrmi	r1, [r0, r5]
 800bcf0:	4620      	mov	r0, r4
 800bcf2:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800bcf6:	bf48      	it	mi
 800bcf8:	58cb      	ldrmi	r3, [r1, r3]
 800bcfa:	4611      	mov	r1, r2
 800bcfc:	4718      	bx	r3
 800bcfe:	e9d4 5303 	ldrd	r5, r3, [r4, #12]
 800bd02:	f003 0401 	and.w	r4, r3, #1
 800bd06:	b90d      	cbnz	r5, 800bd0c <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xc0>
 800bd08:	2c00      	cmp	r4, #0
 800bd0a:	d0ac      	beq.n	800bc66 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1a>
 800bd0c:	105e      	asrs	r6, r3, #1
 800bd0e:	eb00 0363 	add.w	r3, r0, r3, asr #1
 800bd12:	b10c      	cbz	r4, 800bd18 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xcc>
 800bd14:	5980      	ldr	r0, [r0, r6]
 800bd16:	5945      	ldr	r5, [r0, r5]
 800bd18:	4618      	mov	r0, r3
 800bd1a:	462b      	mov	r3, r5
 800bd1c:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800bd20:	4718      	bx	r3
 800bd22:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800bd26:	bf00      	nop
 800bd28:	20009844 	andcs	r9, r0, r4, asr #16
 800bd2c:	08015ff4 	stmdaeq	r1, {r2, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}

0800bd30 <RDMHandler::HandleData(unsigned char const*, unsigned char*)>:
 800bd30:	23ff      	movs	r3, #255	; 0xff
 800bd32:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bd36:	7013      	strb	r3, [r2, #0]
 800bd38:	e9c0 1201 	strd	r1, r2, [r0, #4]
 800bd3c:	7ccb      	ldrb	r3, [r1, #19]
 800bd3e:	b085      	sub	sp, #20
 800bd40:	7d4f      	ldrb	r7, [r1, #21]
 800bd42:	9303      	str	r3, [sp, #12]
 800bd44:	7d0b      	ldrb	r3, [r1, #20]
 800bd46:	f101 0a02 	add.w	sl, r1, #2
 800bd4a:	eb07 2703 	add.w	r7, r7, r3, lsl #8
 800bd4e:	4b5b      	ldr	r3, [pc, #364]	; (800bebc <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x18c>)
 800bd50:	4606      	mov	r6, r0
 800bd52:	460d      	mov	r5, r1
 800bd54:	4614      	mov	r4, r2
 800bd56:	495a      	ldr	r1, [pc, #360]	; (800bec0 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x190>)
 800bd58:	2206      	movs	r2, #6
 800bd5a:	4650      	mov	r0, sl
 800bd5c:	f8d3 8000 	ldr.w	r8, [r3]
 800bd60:	f7ff fce4 	bl	800b72c <memcmp>
 800bd64:	f108 0904 	add.w	r9, r8, #4
 800bd68:	4683      	mov	fp, r0
 800bd6a:	2202      	movs	r2, #2
 800bd6c:	4649      	mov	r1, r9
 800bd6e:	4650      	mov	r0, sl
 800bd70:	b2bf      	uxth	r7, r7
 800bd72:	f7ff fcdb 	bl	800b72c <memcmp>
 800bd76:	b928      	cbnz	r0, 800bd84 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x54>
 800bd78:	2204      	movs	r2, #4
 800bd7a:	4951      	ldr	r1, [pc, #324]	; (800bec0 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x190>)
 800bd7c:	18a8      	adds	r0, r5, r2
 800bd7e:	f7ff fcd5 	bl	800b72c <memcmp>
 800bd82:	b160      	cbz	r0, 800bd9e <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x6e>
 800bd84:	4649      	mov	r1, r9
 800bd86:	2206      	movs	r2, #6
 800bd88:	4650      	mov	r0, sl
 800bd8a:	f7ff fccf 	bl	800b72c <memcmp>
 800bd8e:	4601      	mov	r1, r0
 800bd90:	b130      	cbz	r0, 800bda0 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x70>
 800bd92:	f1bb 0f00 	cmp.w	fp, #0
 800bd96:	d04a      	beq.n	800be2e <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0xfe>
 800bd98:	b005      	add	sp, #20
 800bd9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bd9e:	2101      	movs	r1, #1
 800bda0:	2301      	movs	r3, #1
 800bda2:	9a03      	ldr	r2, [sp, #12]
 800bda4:	2a10      	cmp	r2, #16
 800bda6:	d176      	bne.n	800be96 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x166>
 800bda8:	2f01      	cmp	r7, #1
 800bdaa:	d143      	bne.n	800be34 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x104>
 800bdac:	7873      	ldrb	r3, [r6, #1]
 800bdae:	2b00      	cmp	r3, #0
 800bdb0:	d1f2      	bne.n	800bd98 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x68>
 800bdb2:	2206      	movs	r2, #6
 800bdb4:	4649      	mov	r1, r9
 800bdb6:	f105 0017 	add.w	r0, r5, #23
 800bdba:	f7ff fcb7 	bl	800b72c <memcmp>
 800bdbe:	2800      	cmp	r0, #0
 800bdc0:	dcea      	bgt.n	800bd98 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x68>
 800bdc2:	2206      	movs	r2, #6
 800bdc4:	4648      	mov	r0, r9
 800bdc6:	f105 011d 	add.w	r1, r5, #29
 800bdca:	f7ff fcaf 	bl	800b72c <memcmp>
 800bdce:	2800      	cmp	r0, #0
 800bdd0:	dce2      	bgt.n	800bd98 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x68>
 800bdd2:	23fe      	movs	r3, #254	; 0xfe
 800bdd4:	7023      	strb	r3, [r4, #0]
 800bdd6:	7063      	strb	r3, [r4, #1]
 800bdd8:	70a3      	strb	r3, [r4, #2]
 800bdda:	70e3      	strb	r3, [r4, #3]
 800bddc:	7123      	strb	r3, [r4, #4]
 800bdde:	7163      	strb	r3, [r4, #5]
 800bde0:	71a3      	strb	r3, [r4, #6]
 800bde2:	23aa      	movs	r3, #170	; 0xaa
 800bde4:	4621      	mov	r1, r4
 800bde6:	71e3      	strb	r3, [r4, #7]
 800bde8:	f240 53fa 	movw	r3, #1530	; 0x5fa
 800bdec:	f108 0203 	add.w	r2, r8, #3
 800bdf0:	f108 0809 	add.w	r8, r8, #9
 800bdf4:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800bdf8:	3102      	adds	r1, #2
 800bdfa:	f060 0055 	orn	r0, r0, #85	; 0x55
 800bdfe:	7188      	strb	r0, [r1, #6]
 800be00:	7810      	ldrb	r0, [r2, #0]
 800be02:	4542      	cmp	r2, r8
 800be04:	f040 0055 	orr.w	r0, r0, #85	; 0x55
 800be08:	71c8      	strb	r0, [r1, #7]
 800be0a:	7810      	ldrb	r0, [r2, #0]
 800be0c:	4403      	add	r3, r0
 800be0e:	b29b      	uxth	r3, r3
 800be10:	d1f0      	bne.n	800bdf4 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0xc4>
 800be12:	0a1a      	lsrs	r2, r3, #8
 800be14:	f062 0155 	orn	r1, r2, #85	; 0x55
 800be18:	f042 0255 	orr.w	r2, r2, #85	; 0x55
 800be1c:	7562      	strb	r2, [r4, #21]
 800be1e:	f063 0255 	orn	r2, r3, #85	; 0x55
 800be22:	f043 0355 	orr.w	r3, r3, #85	; 0x55
 800be26:	7521      	strb	r1, [r4, #20]
 800be28:	75a2      	strb	r2, [r4, #22]
 800be2a:	75e3      	strb	r3, [r4, #23]
 800be2c:	e7b4      	b.n	800bd98 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x68>
 800be2e:	4659      	mov	r1, fp
 800be30:	465b      	mov	r3, fp
 800be32:	e7b6      	b.n	800bda2 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x72>
 800be34:	2f03      	cmp	r7, #3
 800be36:	d11a      	bne.n	800be6e <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x13e>
 800be38:	7daa      	ldrb	r2, [r5, #22]
 800be3a:	2a00      	cmp	r2, #0
 800be3c:	d1ac      	bne.n	800bd98 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x68>
 800be3e:	7072      	strb	r2, [r6, #1]
 800be40:	f1bb 0f00 	cmp.w	fp, #0
 800be44:	d0a8      	beq.n	800bd98 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x68>
 800be46:	2b00      	cmp	r3, #0
 800be48:	d0a6      	beq.n	800bd98 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x68>
 800be4a:	2302      	movs	r3, #2
 800be4c:	75e3      	strb	r3, [r4, #23]
 800be4e:	4b1d      	ldr	r3, [pc, #116]	; (800bec4 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x194>)
 800be50:	7622      	strb	r2, [r4, #24]
 800be52:	681b      	ldr	r3, [r3, #0]
 800be54:	7662      	strb	r2, [r4, #25]
 800be56:	889b      	ldrh	r3, [r3, #4]
 800be58:	3b00      	subs	r3, #0
 800be5a:	bf18      	it	ne
 800be5c:	2301      	movne	r3, #1
 800be5e:	005b      	lsls	r3, r3, #1
 800be60:	4630      	mov	r0, r6
 800be62:	7663      	strb	r3, [r4, #25]
 800be64:	b005      	add	sp, #20
 800be66:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800be6a:	f7ff bd7f 	b.w	800b96c <RDMHandler::RespondMessageAck()>
 800be6e:	2f02      	cmp	r7, #2
 800be70:	d192      	bne.n	800bd98 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x68>
 800be72:	7daa      	ldrb	r2, [r5, #22]
 800be74:	2a00      	cmp	r2, #0
 800be76:	d18f      	bne.n	800bd98 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x68>
 800be78:	2101      	movs	r1, #1
 800be7a:	7071      	strb	r1, [r6, #1]
 800be7c:	2b00      	cmp	r3, #0
 800be7e:	d08b      	beq.n	800bd98 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x68>
 800be80:	4b10      	ldr	r3, [pc, #64]	; (800bec4 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x194>)
 800be82:	75e7      	strb	r7, [r4, #23]
 800be84:	681b      	ldr	r3, [r3, #0]
 800be86:	7622      	strb	r2, [r4, #24]
 800be88:	7662      	strb	r2, [r4, #25]
 800be8a:	889b      	ldrh	r3, [r3, #4]
 800be8c:	3b00      	subs	r3, #0
 800be8e:	bf18      	it	ne
 800be90:	2301      	movne	r3, #1
 800be92:	408b      	lsls	r3, r1
 800be94:	e7e4      	b.n	800be60 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x130>
 800be96:	7c6a      	ldrb	r2, [r5, #17]
 800be98:	7cab      	ldrb	r3, [r5, #18]
 800be9a:	f1bb 0f00 	cmp.w	fp, #0
 800be9e:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 800bea2:	b29b      	uxth	r3, r3
 800bea4:	9301      	str	r3, [sp, #4]
 800bea6:	7dab      	ldrb	r3, [r5, #22]
 800bea8:	bf08      	it	eq
 800beaa:	2101      	moveq	r1, #1
 800beac:	9300      	str	r3, [sp, #0]
 800beae:	4630      	mov	r0, r6
 800beb0:	463b      	mov	r3, r7
 800beb2:	9a03      	ldr	r2, [sp, #12]
 800beb4:	f7ff feca 	bl	800bc4c <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)>
 800beb8:	e76e      	b.n	800bd98 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x68>
 800beba:	bf00      	nop
 800bebc:	20009848 	andcs	r9, r0, r8, asr #16
 800bec0:	08015fec 	stmdaeq	r1, {r2, r3, r5, r6, r7, r8, r9, sl, fp, ip, lr}
 800bec4:	20009844 	andcs	r9, r0, r4, asr #16

0800bec8 <RDMIdentify::RDMIdentify()>:
 800bec8:	4b01      	ldr	r3, [pc, #4]	; (800bed0 <RDMIdentify::RDMIdentify()+0x8>)
 800beca:	6018      	str	r0, [r3, #0]
 800becc:	4770      	bx	lr
 800bece:	bf00      	nop
 800bed0:	20009850 	andcs	r9, r0, r0, asr r8

0800bed4 <RDMIdentify::On(rdm::identify::Mode)>:
 800bed4:	4770      	bx	lr

0800bed6 <RDMIdentify::Off(rdm::identify::Mode)>:
 800bed6:	4770      	bx	lr

0800bed8 <memcpy.constprop.0.isra.0>:
 800bed8:	3801      	subs	r0, #1
 800beda:	1d0b      	adds	r3, r1, #4
 800bedc:	4299      	cmp	r1, r3
 800bede:	d100      	bne.n	800bee2 <memcpy.constprop.0.isra.0+0xa>
 800bee0:	4770      	bx	lr
 800bee2:	f811 2b01 	ldrb.w	r2, [r1], #1
 800bee6:	f800 2f01 	strb.w	r2, [r0, #1]!
 800beea:	e7f7      	b.n	800bedc <memcpy.constprop.0.isra.0+0x4>

0800beec <RDMHandler::GetInterfaceList(unsigned short)>:
 800beec:	4a08      	ldr	r2, [pc, #32]	; (800bf10 <RDMHandler::GetInterfaceList(unsigned short)+0x24>)
 800beee:	6883      	ldr	r3, [r0, #8]
 800bef0:	6812      	ldr	r2, [r2, #0]
 800bef2:	6892      	ldr	r2, [r2, #8]
 800bef4:	0e11      	lsrs	r1, r2, #24
 800bef6:	7619      	strb	r1, [r3, #24]
 800bef8:	0c11      	lsrs	r1, r2, #16
 800befa:	7659      	strb	r1, [r3, #25]
 800befc:	76da      	strb	r2, [r3, #27]
 800befe:	0a11      	lsrs	r1, r2, #8
 800bf00:	2200      	movs	r2, #0
 800bf02:	771a      	strb	r2, [r3, #28]
 800bf04:	2206      	movs	r2, #6
 800bf06:	7699      	strb	r1, [r3, #26]
 800bf08:	775a      	strb	r2, [r3, #29]
 800bf0a:	75da      	strb	r2, [r3, #23]
 800bf0c:	f7ff bd2e 	b.w	800b96c <RDMHandler::RespondMessageAck()>
 800bf10:	2001a288 	andcs	sl, r1, r8, lsl #5

0800bf14 <RDMHandler::GetInterfaceName(unsigned short)>:
 800bf14:	b538      	push	{r3, r4, r5, lr}
 800bf16:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800bf1a:	4604      	mov	r4, r0
 800bf1c:	3117      	adds	r1, #23
 800bf1e:	f105 0018 	add.w	r0, r5, #24
 800bf22:	f7ff ffd9 	bl	800bed8 <memcpy.constprop.0.isra.0>
 800bf26:	4a0d      	ldr	r2, [pc, #52]	; (800bf5c <RDMHandler::GetInterfaceName(unsigned short)+0x48>)
 800bf28:	f105 001b 	add.w	r0, r5, #27
 800bf2c:	6813      	ldr	r3, [r2, #0]
 800bf2e:	33a6      	adds	r3, #166	; 0xa6
 800bf30:	f813 1b01 	ldrb.w	r1, [r3], #1
 800bf34:	f800 1f01 	strb.w	r1, [r0, #1]!
 800bf38:	2900      	cmp	r1, #0
 800bf3a:	d1f9      	bne.n	800bf30 <RDMHandler::GetInterfaceName(unsigned short)+0x1c>
 800bf3c:	6812      	ldr	r2, [r2, #0]
 800bf3e:	32a6      	adds	r2, #166	; 0xa6
 800bf40:	4611      	mov	r1, r2
 800bf42:	460b      	mov	r3, r1
 800bf44:	7818      	ldrb	r0, [r3, #0]
 800bf46:	3101      	adds	r1, #1
 800bf48:	2800      	cmp	r0, #0
 800bf4a:	d1fa      	bne.n	800bf42 <RDMHandler::GetInterfaceName(unsigned short)+0x2e>
 800bf4c:	1a9b      	subs	r3, r3, r2
 800bf4e:	3304      	adds	r3, #4
 800bf50:	75eb      	strb	r3, [r5, #23]
 800bf52:	4620      	mov	r0, r4
 800bf54:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800bf58:	f7ff bd08 	b.w	800b96c <RDMHandler::RespondMessageAck()>
 800bf5c:	2001a288 	andcs	sl, r1, r8, lsl #5

0800bf60 <RDMHandler::GetHardwareAddress(unsigned short)>:
 800bf60:	b538      	push	{r3, r4, r5, lr}
 800bf62:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800bf66:	4604      	mov	r4, r0
 800bf68:	3117      	adds	r1, #23
 800bf6a:	f105 0018 	add.w	r0, r5, #24
 800bf6e:	f7ff ffb3 	bl	800bed8 <memcpy.constprop.0.isra.0>
 800bf72:	4b06      	ldr	r3, [pc, #24]	; (800bf8c <RDMHandler::GetHardwareAddress(unsigned short)+0x2c>)
 800bf74:	f105 011c 	add.w	r1, r5, #28
 800bf78:	6818      	ldr	r0, [r3, #0]
 800bf7a:	f003 ffcd 	bl	800ff18 <Network::MacAddressCopyTo(unsigned char*)>
 800bf7e:	230a      	movs	r3, #10
 800bf80:	75eb      	strb	r3, [r5, #23]
 800bf82:	4620      	mov	r0, r4
 800bf84:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800bf88:	f7ff bcf0 	b.w	800b96c <RDMHandler::RespondMessageAck()>
 800bf8c:	2001a288 	andcs	sl, r1, r8, lsl #5

0800bf90 <RDMHandler::GetDHCPMode(unsigned short)>:
 800bf90:	b538      	push	{r3, r4, r5, lr}
 800bf92:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800bf96:	4604      	mov	r4, r0
 800bf98:	3117      	adds	r1, #23
 800bf9a:	f105 0018 	add.w	r0, r5, #24
 800bf9e:	f7ff ff9b 	bl	800bed8 <memcpy.constprop.0.isra.0>
 800bfa2:	4b05      	ldr	r3, [pc, #20]	; (800bfb8 <RDMHandler::GetDHCPMode(unsigned short)+0x28>)
 800bfa4:	4620      	mov	r0, r4
 800bfa6:	681b      	ldr	r3, [r3, #0]
 800bfa8:	795b      	ldrb	r3, [r3, #5]
 800bfaa:	772b      	strb	r3, [r5, #28]
 800bfac:	2305      	movs	r3, #5
 800bfae:	75eb      	strb	r3, [r5, #23]
 800bfb0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800bfb4:	f7ff bcda 	b.w	800b96c <RDMHandler::RespondMessageAck()>
 800bfb8:	2001a288 	andcs	sl, r1, r8, lsl #5

0800bfbc <RDMHandler::SetDHCPMode(bool, unsigned short)>:
 800bfbc:	4b10      	ldr	r3, [pc, #64]	; (800c000 <RDMHandler::SetDHCPMode(bool, unsigned short)+0x44>)
 800bfbe:	b510      	push	{r4, lr}
 800bfc0:	681b      	ldr	r3, [r3, #0]
 800bfc2:	4604      	mov	r4, r0
 800bfc4:	7919      	ldrb	r1, [r3, #4]
 800bfc6:	6842      	ldr	r2, [r0, #4]
 800bfc8:	b921      	cbnz	r1, 800bfd4 <RDMHandler::SetDHCPMode(bool, unsigned short)+0x18>
 800bfca:	210b      	movs	r1, #11
 800bfcc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bfd0:	f7ff bd90 	b.w	800baf4 <RDMHandler::RespondMessageNack(unsigned short)>
 800bfd4:	7ed2      	ldrb	r2, [r2, #27]
 800bfd6:	2a01      	cmp	r2, #1
 800bfd8:	d109      	bne.n	800bfee <RDMHandler::SetDHCPMode(bool, unsigned short)+0x32>
 800bfda:	f8d3 20c0 	ldr.w	r2, [r3, #192]	; 0xc0
 800bfde:	f042 0204 	orr.w	r2, r2, #4
 800bfe2:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
 800bfe6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bfea:	f7ff bcbf 	b.w	800b96c <RDMHandler::RespondMessageAck()>
 800bfee:	b92a      	cbnz	r2, 800bffc <RDMHandler::SetDHCPMode(bool, unsigned short)+0x40>
 800bff0:	4618      	mov	r0, r3
 800bff2:	4611      	mov	r1, r2
 800bff4:	f004 f9ca 	bl	801038c <Network::SetQueuedStaticIp(unsigned int, unsigned int)>
 800bff8:	4620      	mov	r0, r4
 800bffa:	e7f4      	b.n	800bfe6 <RDMHandler::SetDHCPMode(bool, unsigned short)+0x2a>
 800bffc:	2106      	movs	r1, #6
 800bffe:	e7e5      	b.n	800bfcc <RDMHandler::SetDHCPMode(bool, unsigned short)+0x10>
 800c000:	2001a288 	andcs	sl, r1, r8, lsl #5

0800c004 <RDMHandler::GetNameServers(unsigned short)>:
 800c004:	6842      	ldr	r2, [r0, #4]
 800c006:	7dd2      	ldrb	r2, [r2, #23]
 800c008:	2a02      	cmp	r2, #2
 800c00a:	d902      	bls.n	800c012 <RDMHandler::GetNameServers(unsigned short)+0xe>
 800c00c:	2106      	movs	r1, #6
 800c00e:	f7ff bd71 	b.w	800baf4 <RDMHandler::RespondMessageNack(unsigned short)>
 800c012:	2200      	movs	r2, #0
 800c014:	6883      	ldr	r3, [r0, #8]
 800c016:	765a      	strb	r2, [r3, #25]
 800c018:	769a      	strb	r2, [r3, #26]
 800c01a:	76da      	strb	r2, [r3, #27]
 800c01c:	771a      	strb	r2, [r3, #28]
 800c01e:	2205      	movs	r2, #5
 800c020:	75da      	strb	r2, [r3, #23]
 800c022:	f7ff bca3 	b.w	800b96c <RDMHandler::RespondMessageAck()>
	...

0800c028 <RDMHandler::GetZeroconf(unsigned short)>:
 800c028:	b538      	push	{r3, r4, r5, lr}
 800c02a:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800c02e:	4604      	mov	r4, r0
 800c030:	3117      	adds	r1, #23
 800c032:	f105 0018 	add.w	r0, r5, #24
 800c036:	f7ff ff4f 	bl	800bed8 <memcpy.constprop.0.isra.0>
 800c03a:	4b06      	ldr	r3, [pc, #24]	; (800c054 <RDMHandler::GetZeroconf(unsigned short)+0x2c>)
 800c03c:	681a      	ldr	r2, [r3, #0]
 800c03e:	7993      	ldrb	r3, [r2, #6]
 800c040:	b103      	cbz	r3, 800c044 <RDMHandler::GetZeroconf(unsigned short)+0x1c>
 800c042:	79d3      	ldrb	r3, [r2, #7]
 800c044:	772b      	strb	r3, [r5, #28]
 800c046:	2305      	movs	r3, #5
 800c048:	75eb      	strb	r3, [r5, #23]
 800c04a:	4620      	mov	r0, r4
 800c04c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c050:	f7ff bc8c 	b.w	800b96c <RDMHandler::RespondMessageAck()>
 800c054:	2001a288 	andcs	sl, r1, r8, lsl #5

0800c058 <RDMHandler::SetZeroconf(bool, unsigned short)>:
 800c058:	4b10      	ldr	r3, [pc, #64]	; (800c09c <RDMHandler::SetZeroconf(bool, unsigned short)+0x44>)
 800c05a:	b510      	push	{r4, lr}
 800c05c:	681b      	ldr	r3, [r3, #0]
 800c05e:	4604      	mov	r4, r0
 800c060:	7999      	ldrb	r1, [r3, #6]
 800c062:	6842      	ldr	r2, [r0, #4]
 800c064:	b921      	cbnz	r1, 800c070 <RDMHandler::SetZeroconf(bool, unsigned short)+0x18>
 800c066:	210b      	movs	r1, #11
 800c068:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c06c:	f7ff bd42 	b.w	800baf4 <RDMHandler::RespondMessageNack(unsigned short)>
 800c070:	7ed2      	ldrb	r2, [r2, #27]
 800c072:	2a01      	cmp	r2, #1
 800c074:	d109      	bne.n	800c08a <RDMHandler::SetZeroconf(bool, unsigned short)+0x32>
 800c076:	f8d3 20c0 	ldr.w	r2, [r3, #192]	; 0xc0
 800c07a:	f042 0208 	orr.w	r2, r2, #8
 800c07e:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
 800c082:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c086:	f7ff bc71 	b.w	800b96c <RDMHandler::RespondMessageAck()>
 800c08a:	b92a      	cbnz	r2, 800c098 <RDMHandler::SetZeroconf(bool, unsigned short)+0x40>
 800c08c:	4618      	mov	r0, r3
 800c08e:	4611      	mov	r1, r2
 800c090:	f004 f97c 	bl	801038c <Network::SetQueuedStaticIp(unsigned int, unsigned int)>
 800c094:	4620      	mov	r0, r4
 800c096:	e7f4      	b.n	800c082 <RDMHandler::SetZeroconf(bool, unsigned short)+0x2a>
 800c098:	2106      	movs	r1, #6
 800c09a:	e7e5      	b.n	800c068 <RDMHandler::SetZeroconf(bool, unsigned short)+0x10>
 800c09c:	2001a288 	andcs	sl, r1, r8, lsl #5

0800c0a0 <RDMHandler::RenewDhcp(bool, unsigned short)>:
 800c0a0:	4b09      	ldr	r3, [pc, #36]	; (800c0c8 <RDMHandler::RenewDhcp(bool, unsigned short)+0x28>)
 800c0a2:	b510      	push	{r4, lr}
 800c0a4:	681b      	ldr	r3, [r3, #0]
 800c0a6:	4604      	mov	r4, r0
 800c0a8:	795a      	ldrb	r2, [r3, #5]
 800c0aa:	b922      	cbnz	r2, 800c0b6 <RDMHandler::RenewDhcp(bool, unsigned short)+0x16>
 800c0ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c0b0:	210b      	movs	r1, #11
 800c0b2:	f7ff bd1f 	b.w	800baf4 <RDMHandler::RespondMessageNack(unsigned short)>
 800c0b6:	4618      	mov	r0, r3
 800c0b8:	f004 f91a 	bl	80102f0 <Network::EnableDhcp()>
 800c0bc:	4620      	mov	r0, r4
 800c0be:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c0c2:	f7ff bc53 	b.w	800b96c <RDMHandler::RespondMessageAck()>
 800c0c6:	bf00      	nop
 800c0c8:	2001a288 	andcs	sl, r1, r8, lsl #5

0800c0cc <RDMHandler::GetAddressNetmask(unsigned short)>:
 800c0cc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c0ce:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800c0d2:	4e0f      	ldr	r6, [pc, #60]	; (800c110 <RDMHandler::GetAddressNetmask(unsigned short)+0x44>)
 800c0d4:	4604      	mov	r4, r0
 800c0d6:	6833      	ldr	r3, [r6, #0]
 800c0d8:	f105 0018 	add.w	r0, r5, #24
 800c0dc:	695b      	ldr	r3, [r3, #20]
 800c0de:	3117      	adds	r1, #23
 800c0e0:	9301      	str	r3, [sp, #4]
 800c0e2:	f7ff fef9 	bl	800bed8 <memcpy.constprop.0.isra.0>
 800c0e6:	a901      	add	r1, sp, #4
 800c0e8:	f105 001c 	add.w	r0, r5, #28
 800c0ec:	f7ff fef4 	bl	800bed8 <memcpy.constprop.0.isra.0>
 800c0f0:	6836      	ldr	r6, [r6, #0]
 800c0f2:	69f0      	ldr	r0, [r6, #28]
 800c0f4:	f008 fcdc 	bl	8014ab0 <__popcountsi2>
 800c0f8:	f885 0020 	strb.w	r0, [r5, #32]
 800c0fc:	7973      	ldrb	r3, [r6, #5]
 800c0fe:	4620      	mov	r0, r4
 800c100:	f885 3021 	strb.w	r3, [r5, #33]	; 0x21
 800c104:	230a      	movs	r3, #10
 800c106:	75eb      	strb	r3, [r5, #23]
 800c108:	f7ff fc30 	bl	800b96c <RDMHandler::RespondMessageAck()>
 800c10c:	b002      	add	sp, #8
 800c10e:	bd70      	pop	{r4, r5, r6, pc}
 800c110:	2001a288 	andcs	sl, r1, r8, lsl #5

0800c114 <RDMHandler::GetStaticAddress(unsigned short)>:
 800c114:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c116:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800c11a:	4e0e      	ldr	r6, [pc, #56]	; (800c154 <RDMHandler::GetStaticAddress(unsigned short)+0x40>)
 800c11c:	4604      	mov	r4, r0
 800c11e:	6833      	ldr	r3, [r6, #0]
 800c120:	f105 0018 	add.w	r0, r5, #24
 800c124:	695b      	ldr	r3, [r3, #20]
 800c126:	3117      	adds	r1, #23
 800c128:	9301      	str	r3, [sp, #4]
 800c12a:	f7ff fed5 	bl	800bed8 <memcpy.constprop.0.isra.0>
 800c12e:	a901      	add	r1, sp, #4
 800c130:	f105 001c 	add.w	r0, r5, #28
 800c134:	f7ff fed0 	bl	800bed8 <memcpy.constprop.0.isra.0>
 800c138:	6833      	ldr	r3, [r6, #0]
 800c13a:	69d8      	ldr	r0, [r3, #28]
 800c13c:	f008 fcb8 	bl	8014ab0 <__popcountsi2>
 800c140:	2309      	movs	r3, #9
 800c142:	f885 0020 	strb.w	r0, [r5, #32]
 800c146:	75eb      	strb	r3, [r5, #23]
 800c148:	4620      	mov	r0, r4
 800c14a:	f7ff fc0f 	bl	800b96c <RDMHandler::RespondMessageAck()>
 800c14e:	b002      	add	sp, #8
 800c150:	bd70      	pop	{r4, r5, r6, pc}
 800c152:	bf00      	nop
 800c154:	2001a288 	andcs	sl, r1, r8, lsl #5

0800c158 <RDMHandler::SetStaticAddress(bool, unsigned short)>:
 800c158:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c15a:	6845      	ldr	r5, [r0, #4]
 800c15c:	4604      	mov	r4, r0
 800c15e:	7dab      	ldrb	r3, [r5, #22]
 800c160:	2b09      	cmp	r3, #9
 800c162:	d005      	beq.n	800c170 <RDMHandler::SetStaticAddress(bool, unsigned short)+0x18>
 800c164:	2101      	movs	r1, #1
 800c166:	b003      	add	sp, #12
 800c168:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800c16c:	f7ff bcc2 	b.w	800baf4 <RDMHandler::RespondMessageNack(unsigned short)>
 800c170:	f105 011b 	add.w	r1, r5, #27
 800c174:	a801      	add	r0, sp, #4
 800c176:	f7ff feaf 	bl	800bed8 <memcpy.constprop.0.isra.0>
 800c17a:	4b09      	ldr	r3, [pc, #36]	; (800c1a0 <RDMHandler::SetStaticAddress(bool, unsigned short)+0x48>)
 800c17c:	7fea      	ldrb	r2, [r5, #31]
 800c17e:	6818      	ldr	r0, [r3, #0]
 800c180:	9901      	ldr	r1, [sp, #4]
 800c182:	b12a      	cbz	r2, 800c190 <RDMHandler::SetStaticAddress(bool, unsigned short)+0x38>
 800c184:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800c188:	f1c2 0220 	rsb	r2, r2, #32
 800c18c:	4093      	lsls	r3, r2
 800c18e:	ba1a      	rev	r2, r3
 800c190:	f004 f8fc 	bl	801038c <Network::SetQueuedStaticIp(unsigned int, unsigned int)>
 800c194:	4620      	mov	r0, r4
 800c196:	f7ff fbe9 	bl	800b96c <RDMHandler::RespondMessageAck()>
 800c19a:	b003      	add	sp, #12
 800c19c:	bd30      	pop	{r4, r5, pc}
 800c19e:	bf00      	nop
 800c1a0:	2001a288 	andcs	sl, r1, r8, lsl #5

0800c1a4 <RDMHandler::ApplyConfiguration(bool, unsigned short)>:
 800c1a4:	4b08      	ldr	r3, [pc, #32]	; (800c1c8 <RDMHandler::ApplyConfiguration(bool, unsigned short)+0x24>)
 800c1a6:	b510      	push	{r4, lr}
 800c1a8:	4604      	mov	r4, r0
 800c1aa:	6818      	ldr	r0, [r3, #0]
 800c1ac:	f004 f8fb 	bl	80103a6 <Network::ApplyQueuedConfig()>
 800c1b0:	b120      	cbz	r0, 800c1bc <RDMHandler::ApplyConfiguration(bool, unsigned short)+0x18>
 800c1b2:	4620      	mov	r0, r4
 800c1b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c1b8:	f7ff bbd8 	b.w	800b96c <RDMHandler::RespondMessageAck()>
 800c1bc:	4620      	mov	r0, r4
 800c1be:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c1c2:	2101      	movs	r1, #1
 800c1c4:	f7ff bc96 	b.w	800baf4 <RDMHandler::RespondMessageNack(unsigned short)>
 800c1c8:	2001a288 	andcs	sl, r1, r8, lsl #5

0800c1cc <RDMHandler::GetDefaultRoute(unsigned short)>:
 800c1cc:	4b0c      	ldr	r3, [pc, #48]	; (800c200 <RDMHandler::GetDefaultRoute(unsigned short)+0x34>)
 800c1ce:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c1d0:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800c1d4:	681b      	ldr	r3, [r3, #0]
 800c1d6:	4604      	mov	r4, r0
 800c1d8:	699b      	ldr	r3, [r3, #24]
 800c1da:	f105 0018 	add.w	r0, r5, #24
 800c1de:	3117      	adds	r1, #23
 800c1e0:	9301      	str	r3, [sp, #4]
 800c1e2:	f7ff fe79 	bl	800bed8 <memcpy.constprop.0.isra.0>
 800c1e6:	a901      	add	r1, sp, #4
 800c1e8:	f105 001c 	add.w	r0, r5, #28
 800c1ec:	f7ff fe74 	bl	800bed8 <memcpy.constprop.0.isra.0>
 800c1f0:	2308      	movs	r3, #8
 800c1f2:	4620      	mov	r0, r4
 800c1f4:	75eb      	strb	r3, [r5, #23]
 800c1f6:	f7ff fbb9 	bl	800b96c <RDMHandler::RespondMessageAck()>
 800c1fa:	b003      	add	sp, #12
 800c1fc:	bd30      	pop	{r4, r5, pc}
 800c1fe:	bf00      	nop
 800c200:	2001a288 	andcs	sl, r1, r8, lsl #5

0800c204 <RDMHandler::SetDefaultRoute(bool, unsigned short)>:
 800c204:	210b      	movs	r1, #11
 800c206:	f7ff bc75 	b.w	800baf4 <RDMHandler::RespondMessageNack(unsigned short)>
	...

0800c20c <RDMHandler::GetHostName(unsigned short)>:
 800c20c:	4b0a      	ldr	r3, [pc, #40]	; (800c238 <RDMHandler::GetHostName(unsigned short)+0x2c>)
 800c20e:	b510      	push	{r4, lr}
 800c210:	6819      	ldr	r1, [r3, #0]
 800c212:	4604      	mov	r4, r0
 800c214:	3120      	adds	r1, #32
 800c216:	460b      	mov	r3, r1
 800c218:	461a      	mov	r2, r3
 800c21a:	7810      	ldrb	r0, [r2, #0]
 800c21c:	3301      	adds	r3, #1
 800c21e:	2800      	cmp	r0, #0
 800c220:	d1fa      	bne.n	800c218 <RDMHandler::GetHostName(unsigned short)+0xc>
 800c222:	1a52      	subs	r2, r2, r1
 800c224:	4620      	mov	r0, r4
 800c226:	b292      	uxth	r2, r2
 800c228:	f7ff fb48 	bl	800b8bc <RDMHandler::HandleString(char const*, unsigned int)>
 800c22c:	4620      	mov	r0, r4
 800c22e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c232:	f7ff bb9b 	b.w	800b96c <RDMHandler::RespondMessageAck()>
 800c236:	bf00      	nop
 800c238:	2001a288 	andcs	sl, r1, r8, lsl #5

0800c23c <RDMHandler::SetHostName(bool, unsigned short)>:
 800c23c:	b510      	push	{r4, lr}
 800c23e:	6841      	ldr	r1, [r0, #4]
 800c240:	4604      	mov	r4, r0
 800c242:	7d8b      	ldrb	r3, [r1, #22]
 800c244:	2b3f      	cmp	r3, #63	; 0x3f
 800c246:	d904      	bls.n	800c252 <RDMHandler::SetHostName(bool, unsigned short)+0x16>
 800c248:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c24c:	2102      	movs	r1, #2
 800c24e:	f7ff bc51 	b.w	800baf4 <RDMHandler::RespondMessageNack(unsigned short)>
 800c252:	2200      	movs	r2, #0
 800c254:	440b      	add	r3, r1
 800c256:	75da      	strb	r2, [r3, #23]
 800c258:	4b04      	ldr	r3, [pc, #16]	; (800c26c <RDMHandler::SetHostName(bool, unsigned short)+0x30>)
 800c25a:	3117      	adds	r1, #23
 800c25c:	6818      	ldr	r0, [r3, #0]
 800c25e:	f004 f805 	bl	801026c <Network::SetHostName(char const*)>
 800c262:	4620      	mov	r0, r4
 800c264:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c268:	f7ff bb80 	b.w	800b96c <RDMHandler::RespondMessageAck()>
 800c26c:	2001a288 	andcs	sl, r1, r8, lsl #5

0800c270 <RDMHandler::GetDomainName(unsigned short)>:
 800c270:	4b0a      	ldr	r3, [pc, #40]	; (800c29c <RDMHandler::GetDomainName(unsigned short)+0x2c>)
 800c272:	b510      	push	{r4, lr}
 800c274:	6819      	ldr	r1, [r3, #0]
 800c276:	4604      	mov	r4, r0
 800c278:	3160      	adds	r1, #96	; 0x60
 800c27a:	460b      	mov	r3, r1
 800c27c:	461a      	mov	r2, r3
 800c27e:	7810      	ldrb	r0, [r2, #0]
 800c280:	3301      	adds	r3, #1
 800c282:	2800      	cmp	r0, #0
 800c284:	d1fa      	bne.n	800c27c <RDMHandler::GetDomainName(unsigned short)+0xc>
 800c286:	1a52      	subs	r2, r2, r1
 800c288:	4620      	mov	r0, r4
 800c28a:	b292      	uxth	r2, r2
 800c28c:	f7ff fb16 	bl	800b8bc <RDMHandler::HandleString(char const*, unsigned int)>
 800c290:	4620      	mov	r0, r4
 800c292:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c296:	f7ff bb69 	b.w	800b96c <RDMHandler::RespondMessageAck()>
 800c29a:	bf00      	nop
 800c29c:	2001a288 	andcs	sl, r1, r8, lsl #5

0800c2a0 <RDMHandler::SetDomainName(bool, unsigned short)>:
 800c2a0:	210b      	movs	r1, #11
 800c2a2:	f7ff bc27 	b.w	800baf4 <RDMHandler::RespondMessageNack(unsigned short)>
	...

0800c2a8 <RDMDevice::RDMDevice()>:
 800c2a8:	4a33      	ldr	r2, [pc, #204]	; (800c378 <RDMDevice::RDMDevice()+0xd0>)
 800c2aa:	2300      	movs	r3, #0
 800c2ac:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c2ae:	4604      	mov	r4, r0
 800c2b0:	4611      	mov	r1, r2
 800c2b2:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
 800c2b6:	f880 3071 	strb.w	r3, [r0, #113]	; 0x71
 800c2ba:	f8a0 3072 	strh.w	r3, [r0, #114]	; 0x72
 800c2be:	6743      	str	r3, [r0, #116]	; 0x74
 800c2c0:	4613      	mov	r3, r2
 800c2c2:	7818      	ldrb	r0, [r3, #0]
 800c2c4:	3201      	adds	r2, #1
 800c2c6:	2800      	cmp	r0, #0
 800c2c8:	d1fa      	bne.n	800c2c0 <RDMDevice::RDMDevice()+0x18>
 800c2ca:	1a5b      	subs	r3, r3, r1
 800c2cc:	2b20      	cmp	r3, #32
 800c2ce:	bf28      	it	cs
 800c2d0:	2320      	movcs	r3, #32
 800c2d2:	f104 052a 	add.w	r5, r4, #42	; 0x2a
 800c2d6:	4629      	mov	r1, r5
 800c2d8:	461a      	mov	r2, r3
 800c2da:	4827      	ldr	r0, [pc, #156]	; (800c378 <RDMDevice::RDMDevice()+0xd0>)
 800c2dc:	3a01      	subs	r2, #1
 800c2de:	d23b      	bcs.n	800c358 <RDMDevice::RDMDevice()+0xb0>
 800c2e0:	f884 304b 	strb.w	r3, [r4, #75]	; 0x4b
 800c2e4:	4b25      	ldr	r3, [pc, #148]	; (800c37c <RDMDevice::RDMDevice()+0xd4>)
 800c2e6:	4669      	mov	r1, sp
 800c2e8:	781a      	ldrb	r2, [r3, #0]
 800c2ea:	7022      	strb	r2, [r4, #0]
 800c2ec:	785b      	ldrb	r3, [r3, #1]
 800c2ee:	7063      	strb	r3, [r4, #1]
 800c2f0:	4b23      	ldr	r3, [pc, #140]	; (800c380 <RDMDevice::RDMDevice()+0xd8>)
 800c2f2:	6818      	ldr	r0, [r3, #0]
 800c2f4:	f003 fe10 	bl	800ff18 <Network::MacAddressCopyTo(unsigned char*)>
 800c2f8:	f89d 3002 	ldrb.w	r3, [sp, #2]
 800c2fc:	f89d 2003 	ldrb.w	r2, [sp, #3]
 800c300:	70a3      	strb	r3, [r4, #2]
 800c302:	7263      	strb	r3, [r4, #9]
 800c304:	4b1f      	ldr	r3, [pc, #124]	; (800c384 <RDMDevice::RDMDevice()+0xdc>)
 800c306:	70e2      	strb	r2, [r4, #3]
 800c308:	7222      	strb	r2, [r4, #8]
 800c30a:	461a      	mov	r2, r3
 800c30c:	f89d 1004 	ldrb.w	r1, [sp, #4]
 800c310:	f89d 0005 	ldrb.w	r0, [sp, #5]
 800c314:	7121      	strb	r1, [r4, #4]
 800c316:	7160      	strb	r0, [r4, #5]
 800c318:	71a0      	strb	r0, [r4, #6]
 800c31a:	71e1      	strb	r1, [r4, #7]
 800c31c:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800c320:	2900      	cmp	r1, #0
 800c322:	d1fb      	bne.n	800c31c <RDMDevice::RDMDevice()+0x74>
 800c324:	1a9b      	subs	r3, r3, r2
 800c326:	2b20      	cmp	r3, #32
 800c328:	bf28      	it	cs
 800c32a:	2320      	movcs	r3, #32
 800c32c:	461a      	mov	r2, r3
 800c32e:	4915      	ldr	r1, [pc, #84]	; (800c384 <RDMDevice::RDMDevice()+0xdc>)
 800c330:	3a01      	subs	r2, #1
 800c332:	d216      	bcs.n	800c362 <RDMDevice::RDMDevice()+0xba>
 800c334:	f884 304b 	strb.w	r3, [r4, #75]	; 0x4b
 800c338:	f06f 2380 	mvn.w	r3, #2147516416	; 0x80008000
 800c33c:	64e3      	str	r3, [r4, #76]	; 0x4c
 800c33e:	2315      	movs	r3, #21
 800c340:	4a11      	ldr	r2, [pc, #68]	; (800c388 <RDMDevice::RDMDevice()+0xe0>)
 800c342:	f884 3071 	strb.w	r3, [r4, #113]	; 0x71
 800c346:	f104 0165 	add.w	r1, r4, #101	; 0x65
 800c34a:	f104 0350 	add.w	r3, r4, #80	; 0x50
 800c34e:	4299      	cmp	r1, r3
 800c350:	d10c      	bne.n	800c36c <RDMDevice::RDMDevice()+0xc4>
 800c352:	4620      	mov	r0, r4
 800c354:	b002      	add	sp, #8
 800c356:	bd70      	pop	{r4, r5, r6, pc}
 800c358:	f810 6b01 	ldrb.w	r6, [r0], #1
 800c35c:	f801 6f01 	strb.w	r6, [r1, #1]!
 800c360:	e7bc      	b.n	800c2dc <RDMDevice::RDMDevice()+0x34>
 800c362:	f811 0b01 	ldrb.w	r0, [r1], #1
 800c366:	f805 0f01 	strb.w	r0, [r5, #1]!
 800c36a:	e7e1      	b.n	800c330 <RDMDevice::RDMDevice()+0x88>
 800c36c:	f812 0b01 	ldrb.w	r0, [r2], #1
 800c370:	f803 0f01 	strb.w	r0, [r3, #1]!
 800c374:	e7eb      	b.n	800c34e <RDMDevice::RDMDevice()+0xa6>
 800c376:	bf00      	nop
 800c378:	080162d5 	stmdaeq	r1, {r0, r2, r4, r6, r7, r9, sp, lr}
 800c37c:	080162d3 	stmdaeq	r1, {r0, r1, r4, r6, r7, r9, sp, lr}
 800c380:	2001a288 	andcs	sl, r1, r8, lsl #5
 800c384:	080161d4 	stmdaeq	r1, {r2, r4, r6, r7, r8, sp, lr}
 800c388:	080162bd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r7, r9, sp, lr}

0800c38c <RDMDevice::Print()>:
 800c38c:	b513      	push	{r0, r1, r4, lr}
 800c38e:	4604      	mov	r4, r0
 800c390:	4818      	ldr	r0, [pc, #96]	; (800c3f4 <RDMDevice::Print()+0x68>)
 800c392:	f7fd f8ed 	bl	8009570 <printf>
 800c396:	f894 104b 	ldrb.w	r1, [r4, #75]	; 0x4b
 800c39a:	f104 022b 	add.w	r2, r4, #43	; 0x2b
 800c39e:	4816      	ldr	r0, [pc, #88]	; (800c3f8 <RDMDevice::Print()+0x6c>)
 800c3a0:	f7fd f8e6 	bl	8009570 <printf>
 800c3a4:	7862      	ldrb	r2, [r4, #1]
 800c3a6:	7821      	ldrb	r1, [r4, #0]
 800c3a8:	4814      	ldr	r0, [pc, #80]	; (800c3fc <RDMDevice::Print()+0x70>)
 800c3aa:	f7fd f8e1 	bl	8009570 <printf>
 800c3ae:	79a3      	ldrb	r3, [r4, #6]
 800c3b0:	7a22      	ldrb	r2, [r4, #8]
 800c3b2:	7a61      	ldrb	r1, [r4, #9]
 800c3b4:	9300      	str	r3, [sp, #0]
 800c3b6:	4812      	ldr	r0, [pc, #72]	; (800c400 <RDMDevice::Print()+0x74>)
 800c3b8:	79e3      	ldrb	r3, [r4, #7]
 800c3ba:	f7fd f8d9 	bl	8009570 <printf>
 800c3be:	f894 102a 	ldrb.w	r1, [r4, #42]	; 0x2a
 800c3c2:	f104 020a 	add.w	r2, r4, #10
 800c3c6:	480f      	ldr	r0, [pc, #60]	; (800c404 <RDMDevice::Print()+0x78>)
 800c3c8:	f7fd f8d2 	bl	8009570 <printf>
 800c3cc:	f8b4 104c 	ldrh.w	r1, [r4, #76]	; 0x4c
 800c3d0:	f894 204c 	ldrb.w	r2, [r4, #76]	; 0x4c
 800c3d4:	0a09      	lsrs	r1, r1, #8
 800c3d6:	480c      	ldr	r0, [pc, #48]	; (800c408 <RDMDevice::Print()+0x7c>)
 800c3d8:	f7fd f8ca 	bl	8009570 <printf>
 800c3dc:	f8b4 104e 	ldrh.w	r1, [r4, #78]	; 0x4e
 800c3e0:	f894 204e 	ldrb.w	r2, [r4, #78]	; 0x4e
 800c3e4:	4809      	ldr	r0, [pc, #36]	; (800c40c <RDMDevice::Print()+0x80>)
 800c3e6:	0a09      	lsrs	r1, r1, #8
 800c3e8:	b002      	add	sp, #8
 800c3ea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c3ee:	f7fd b8bf 	b.w	8009570 <printf>
 800c3f2:	bf00      	nop
 800c3f4:	080161e9 	stmdaeq	r1, {r0, r3, r5, r6, r7, r8, sp, lr}
 800c3f8:	08016203 	stmdaeq	r1, {r0, r1, r9, sp, lr}
 800c3fc:	0801621e 	stmdaeq	r1, {r1, r2, r3, r4, r9, sp, lr}
 800c400:	0801623d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r9, sp, lr}
 800c404:	08016264 	stmdaeq	r1, {r2, r5, r6, r9, sp, lr}
 800c408:	0801627f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r9, sp, lr}
 800c40c:	0801629e 	stmdaeq	r1, {r1, r2, r3, r4, r7, r9, sp, lr}

0800c410 <uuid_unparse_x>:
 800c410:	4603      	mov	r3, r0
 800c412:	b530      	push	{r4, r5, lr}
 800c414:	4608      	mov	r0, r1
 800c416:	4611      	mov	r1, r2
 800c418:	681a      	ldr	r2, [r3, #0]
 800c41a:	b08f      	sub	sp, #60	; 0x3c
 800c41c:	ba12      	rev	r2, r2
 800c41e:	920a      	str	r2, [sp, #40]	; 0x28
 800c420:	889a      	ldrh	r2, [r3, #4]
 800c422:	891c      	ldrh	r4, [r3, #8]
 800c424:	ba52      	rev16	r2, r2
 800c426:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800c42a:	88da      	ldrh	r2, [r3, #6]
 800c42c:	ba64      	rev16	r4, r4
 800c42e:	ba52      	rev16	r2, r2
 800c430:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 800c434:	f8ad 4030 	strh.w	r4, [sp, #48]	; 0x30
 800c438:	f103 020a 	add.w	r2, r3, #10
 800c43c:	f10d 0431 	add.w	r4, sp, #49	; 0x31
 800c440:	3310      	adds	r3, #16
 800c442:	4293      	cmp	r3, r2
 800c444:	d122      	bne.n	800c48c <uuid_unparse_x+0x7c>
 800c446:	f89d 2037 	ldrb.w	r2, [sp, #55]	; 0x37
 800c44a:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 800c44e:	9208      	str	r2, [sp, #32]
 800c450:	f89d 2036 	ldrb.w	r2, [sp, #54]	; 0x36
 800c454:	0a1b      	lsrs	r3, r3, #8
 800c456:	9207      	str	r2, [sp, #28]
 800c458:	f89d 2035 	ldrb.w	r2, [sp, #53]	; 0x35
 800c45c:	9301      	str	r3, [sp, #4]
 800c45e:	9206      	str	r2, [sp, #24]
 800c460:	f89d 2034 	ldrb.w	r2, [sp, #52]	; 0x34
 800c464:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 800c468:	9205      	str	r2, [sp, #20]
 800c46a:	f89d 2033 	ldrb.w	r2, [sp, #51]	; 0x33
 800c46e:	9300      	str	r3, [sp, #0]
 800c470:	9204      	str	r2, [sp, #16]
 800c472:	f89d 2032 	ldrb.w	r2, [sp, #50]	; 0x32
 800c476:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 800c47a:	9203      	str	r2, [sp, #12]
 800c47c:	f89d 2030 	ldrb.w	r2, [sp, #48]	; 0x30
 800c480:	9202      	str	r2, [sp, #8]
 800c482:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800c484:	f7fd f884 	bl	8009590 <sprintf>
 800c488:	b00f      	add	sp, #60	; 0x3c
 800c48a:	bd30      	pop	{r4, r5, pc}
 800c48c:	f812 5b01 	ldrb.w	r5, [r2], #1
 800c490:	f804 5f01 	strb.w	r5, [r4, #1]!
 800c494:	e7d5      	b.n	800c442 <uuid_unparse_x+0x32>
	...

0800c498 <uuid_unparse>:
 800c498:	4a01      	ldr	r2, [pc, #4]	; (800c4a0 <uuid_unparse+0x8>)
 800c49a:	f7ff bfb9 	b.w	800c410 <uuid_unparse_x>
 800c49e:	bf00      	nop
 800c4a0:	080162f1 	stmdaeq	r1, {r0, r4, r5, r6, r7, r9, sp, lr}

0800c4a4 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)>:
 800c4a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c4a6:	4604      	mov	r4, r0
 800c4a8:	460e      	mov	r6, r1
 800c4aa:	4611      	mov	r1, r2
 800c4ac:	4617      	mov	r7, r2
 800c4ae:	461d      	mov	r5, r3
 800c4b0:	f000 fdae 	bl	800d010 <PixelConfiguration::Validate(unsigned int&)>
 800c4b4:	7d62      	ldrb	r2, [r4, #21]
 800c4b6:	b94a      	cbnz	r2, 800c4cc <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)+0x28>
 800c4b8:	6823      	ldr	r3, [r4, #0]
 800c4ba:	b11b      	cbz	r3, 800c4c4 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)+0x20>
 800c4bc:	3b0b      	subs	r3, #11
 800c4be:	2b01      	cmp	r3, #1
 800c4c0:	bf88      	it	hi
 800c4c2:	6022      	strhi	r2, [r4, #0]
 800c4c4:	4639      	mov	r1, r7
 800c4c6:	4620      	mov	r0, r4
 800c4c8:	f000 fda2 	bl	800d010 <PixelConfiguration::Validate(unsigned int&)>
 800c4cc:	6823      	ldr	r3, [r4, #0]
 800c4ce:	2b07      	cmp	r3, #7
 800c4d0:	bf15      	itete	ne
 800c4d2:	f44f 71aa 	movne.w	r1, #340	; 0x154
 800c4d6:	f44f 7180 	moveq.w	r1, #256	; 0x100
 800c4da:	23aa      	movne	r3, #170	; 0xaa
 800c4dc:	2380      	moveq	r3, #128	; 0x80
 800c4de:	bf14      	ite	ne
 800c4e0:	f44f 72ff 	movne.w	r2, #510	; 0x1fe
 800c4e4:	f44f 72c0 	moveq.w	r2, #384	; 0x180
 800c4e8:	e9c5 3100 	strd	r3, r1, [r5]
 800c4ec:	6a21      	ldr	r1, [r4, #32]
 800c4ee:	60aa      	str	r2, [r5, #8]
 800c4f0:	6862      	ldr	r2, [r4, #4]
 800c4f2:	b109      	cbz	r1, 800c4f8 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)+0x54>
 800c4f4:	4291      	cmp	r1, r2
 800c4f6:	d900      	bls.n	800c4fa <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)+0x56>
 800c4f8:	6222      	str	r2, [r4, #32]
 800c4fa:	6a21      	ldr	r1, [r4, #32]
 800c4fc:	69e0      	ldr	r0, [r4, #28]
 800c4fe:	fbb2 f2f1 	udiv	r2, r2, r1
 800c502:	3301      	adds	r3, #1
 800c504:	6262      	str	r2, [r4, #36]	; 0x24
 800c506:	42b0      	cmp	r0, r6
 800c508:	fbb2 f2f3 	udiv	r2, r2, r3
 800c50c:	bf28      	it	cs
 800c50e:	4630      	movcs	r0, r6
 800c510:	1c53      	adds	r3, r2, #1
 800c512:	2e01      	cmp	r6, #1
 800c514:	62a3      	str	r3, [r4, #40]	; 0x28
 800c516:	bf1c      	itt	ne
 800c518:	4343      	mulne	r3, r0
 800c51a:	f103 32ff 	addne.w	r2, r3, #4294967295	; 0xffffffff
 800c51e:	61e0      	str	r0, [r4, #28]
 800c520:	60ea      	str	r2, [r5, #12]
 800c522:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800c524 <PixelDmxConfiguration::Print()>:
 800c524:	b510      	push	{r4, lr}
 800c526:	4604      	mov	r4, r0
 800c528:	f000 fe08 	bl	800d13c <PixelConfiguration::Print()>
 800c52c:	4806      	ldr	r0, [pc, #24]	; (800c548 <PixelDmxConfiguration::Print()+0x24>)
 800c52e:	f7fd f81f 	bl	8009570 <printf>
 800c532:	69e1      	ldr	r1, [r4, #28]
 800c534:	4805      	ldr	r0, [pc, #20]	; (800c54c <PixelDmxConfiguration::Print()+0x28>)
 800c536:	f7fd f81b 	bl	8009570 <printf>
 800c53a:	e9d4 1208 	ldrd	r1, r2, [r4, #32]
 800c53e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c542:	4803      	ldr	r0, [pc, #12]	; (800c550 <PixelDmxConfiguration::Print()+0x2c>)
 800c544:	f7fd b814 	b.w	8009570 <printf>
 800c548:	08016322 	stmdaeq	r1, {r1, r5, r8, r9, sp, lr}
 800c54c:	0801633b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r8, r9, sp, lr}
 800c550:	0801634a 	stmdaeq	r1, {r1, r3, r6, r8, r9, sp, lr}

0800c554 <WS28xxDmxMulti::SetDmxStartAddress(unsigned short)>:
 800c554:	2000      	movs	r0, #0
 800c556:	4770      	bx	lr

0800c558 <WS28xxDmxMulti::GetDmxStartAddress()>:
 800c558:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800c55c:	4770      	bx	lr

0800c55e <WS28xxDmxMulti::GetDmxFootprint()>:
 800c55e:	2000      	movs	r0, #0
 800c560:	4770      	bx	lr

0800c562 <WS28xxDmxMulti::Start(unsigned int)>:
 800c562:	b538      	push	{r3, r4, r5, lr}
 800c564:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800c566:	4604      	mov	r4, r0
 800c568:	460d      	mov	r5, r1
 800c56a:	b923      	cbnz	r3, 800c576 <WS28xxDmxMulti::Start(unsigned int)+0x14>
 800c56c:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800c56e:	b110      	cbz	r0, 800c576 <WS28xxDmxMulti::Start(unsigned int)+0x14>
 800c570:	6803      	ldr	r3, [r0, #0]
 800c572:	689b      	ldr	r3, [r3, #8]
 800c574:	4798      	blx	r3
 800c576:	2301      	movs	r3, #1
 800c578:	fa03 f105 	lsl.w	r1, r3, r5
 800c57c:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800c57e:	430b      	orrs	r3, r1
 800c580:	6523      	str	r3, [r4, #80]	; 0x50
 800c582:	bd38      	pop	{r3, r4, r5, pc}

0800c584 <WS28xxDmxMulti::~WS28xxDmxMulti()>:
 800c584:	b538      	push	{r3, r4, r5, lr}
 800c586:	4b06      	ldr	r3, [pc, #24]	; (800c5a0 <WS28xxDmxMulti::~WS28xxDmxMulti()+0x1c>)
 800c588:	6c85      	ldr	r5, [r0, #72]	; 0x48
 800c58a:	4604      	mov	r4, r0
 800c58c:	6003      	str	r3, [r0, #0]
 800c58e:	b12d      	cbz	r5, 800c59c <WS28xxDmxMulti::~WS28xxDmxMulti()+0x18>
 800c590:	4628      	mov	r0, r5
 800c592:	f001 fa47 	bl	800da24 <WS28xxMulti::~WS28xxMulti()>
 800c596:	4628      	mov	r0, r5
 800c598:	f005 ffda 	bl	8012550 <operator delete(void*)>
 800c59c:	4620      	mov	r0, r4
 800c59e:	bd38      	pop	{r3, r4, r5, pc}
 800c5a0:	08016378 	stmdaeq	r1, {r3, r4, r5, r6, r8, r9, sp, lr}

0800c5a4 <WS28xxDmxMulti::~WS28xxDmxMulti()>:
 800c5a4:	b510      	push	{r4, lr}
 800c5a6:	4604      	mov	r4, r0
 800c5a8:	f7ff ffec 	bl	800c584 <WS28xxDmxMulti::~WS28xxDmxMulti()>
 800c5ac:	4620      	mov	r0, r4
 800c5ae:	f005 ffcf 	bl	8012550 <operator delete(void*)>
 800c5b2:	4620      	mov	r0, r4
 800c5b4:	bd10      	pop	{r4, pc}

0800c5b6 <WS28xxDmxMulti::Blackout(bool)>:
 800c5b6:	b538      	push	{r3, r4, r5, lr}
 800c5b8:	4604      	mov	r4, r0
 800c5ba:	460d      	mov	r5, r1
 800c5bc:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 800c5c0:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800c5c2:	f001 fdef 	bl	800e1a4 <WS28xxMulti::IsUpdating()>
 800c5c6:	2800      	cmp	r0, #0
 800c5c8:	d1fa      	bne.n	800c5c0 <WS28xxDmxMulti::Blackout(bool)+0xa>
 800c5ca:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800c5cc:	b11d      	cbz	r5, 800c5d6 <WS28xxDmxMulti::Blackout(bool)+0x20>
 800c5ce:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c5d2:	f001 bd23 	b.w	800e01c <WS28xxMulti::Blackout()>
 800c5d6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c5da:	f001 bca3 	b.w	800df24 <WS28xxMulti::Update()>

0800c5de <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)>:
 800c5de:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c5e2:	6ac4      	ldr	r4, [r0, #44]	; 0x2c
 800c5e4:	b089      	sub	sp, #36	; 0x24
 800c5e6:	4698      	mov	r8, r3
 800c5e8:	e9cd 2105 	strd	r2, r1, [sp, #20]
 800c5ec:	460b      	mov	r3, r1
 800c5ee:	fbb1 f1f4 	udiv	r1, r1, r4
 800c5f2:	fb04 3411 	mls	r4, r4, r1, r3
 800c5f6:	4605      	mov	r5, r0
 800c5f8:	6a86      	ldr	r6, [r0, #40]	; 0x28
 800c5fa:	6c43      	ldr	r3, [r0, #68]	; 0x44
 800c5fc:	2c03      	cmp	r4, #3
 800c5fe:	d835      	bhi.n	800c66c <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x8e>
 800c600:	e8df f004 	tbb	[pc, r4]
 800c604:	34322d02 	ldrtcc	r2, [r2], #-3330	; 0xfffff2fe
 800c608:	fbb8 f3f3 	udiv	r3, r8, r3
 800c60c:	429e      	cmp	r6, r3
 800c60e:	bf28      	it	cs
 800c610:	461e      	movcs	r6, r3
 800c612:	6ca8      	ldr	r0, [r5, #72]	; 0x48
 800c614:	9107      	str	r1, [sp, #28]
 800c616:	f001 fdc5 	bl	800e1a4 <WS28xxMulti::IsUpdating()>
 800c61a:	9907      	ldr	r1, [sp, #28]
 800c61c:	2800      	cmp	r0, #0
 800c61e:	d1f8      	bne.n	800c612 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x34>
 800c620:	6c6b      	ldr	r3, [r5, #68]	; 0x44
 800c622:	f8d5 a024 	ldr.w	sl, [r5, #36]	; 0x24
 800c626:	2b03      	cmp	r3, #3
 800c628:	fb0a f704 	mul.w	r7, sl, r4
 800c62c:	f8dd 9014 	ldr.w	r9, [sp, #20]
 800c630:	d040      	beq.n	800c6b4 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xd6>
 800c632:	42b4      	cmp	r4, r6
 800c634:	d240      	bcs.n	800c6b8 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xda>
 800c636:	9b05      	ldr	r3, [sp, #20]
 800c638:	eba9 0303 	sub.w	r3, r9, r3
 800c63c:	4598      	cmp	r8, r3
 800c63e:	d93b      	bls.n	800c6b8 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xda>
 800c640:	f04f 0b00 	mov.w	fp, #0
 800c644:	f899 f000 	pld	[r9]
 800c648:	fa1f f28b 	uxth.w	r2, fp
 800c64c:	4552      	cmp	r2, sl
 800c64e:	f10b 0b01 	add.w	fp, fp, #1
 800c652:	d33b      	bcc.n	800c6cc <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xee>
 800c654:	3401      	adds	r4, #1
 800c656:	f109 0904 	add.w	r9, r9, #4
 800c65a:	4457      	add	r7, sl
 800c65c:	e7e9      	b.n	800c632 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x54>
 800c65e:	6b44      	ldr	r4, [r0, #52]	; 0x34
 800c660:	fbb8 f3f3 	udiv	r3, r8, r3
 800c664:	4423      	add	r3, r4
 800c666:	e7d1      	b.n	800c60c <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x2e>
 800c668:	6b84      	ldr	r4, [r0, #56]	; 0x38
 800c66a:	e7f9      	b.n	800c660 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x82>
 800c66c:	6bc4      	ldr	r4, [r0, #60]	; 0x3c
 800c66e:	e7f7      	b.n	800c660 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x82>
 800c670:	f899 3002 	ldrb.w	r3, [r9, #2]
 800c674:	6ca8      	ldr	r0, [r5, #72]	; 0x48
 800c676:	9301      	str	r3, [sp, #4]
 800c678:	f899 3001 	ldrb.w	r3, [r9, #1]
 800c67c:	443a      	add	r2, r7
 800c67e:	9300      	str	r3, [sp, #0]
 800c680:	f899 3000 	ldrb.w	r3, [r9]
 800c684:	9107      	str	r1, [sp, #28]
 800c686:	f001 fe0f 	bl	800e2a8 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 800c68a:	9907      	ldr	r1, [sp, #28]
 800c68c:	e008      	b.n	800c6a0 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xc2>
 800c68e:	9b05      	ldr	r3, [sp, #20]
 800c690:	eba9 0303 	sub.w	r3, r9, r3
 800c694:	4598      	cmp	r8, r3
 800c696:	d90f      	bls.n	800c6b8 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xda>
 800c698:	f04f 0b00 	mov.w	fp, #0
 800c69c:	f899 f000 	pld	[r9]
 800c6a0:	fa1f f28b 	uxth.w	r2, fp
 800c6a4:	4552      	cmp	r2, sl
 800c6a6:	f10b 0b01 	add.w	fp, fp, #1
 800c6aa:	d3e1      	bcc.n	800c670 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x92>
 800c6ac:	3401      	adds	r4, #1
 800c6ae:	f109 0903 	add.w	r9, r9, #3
 800c6b2:	4457      	add	r7, sl
 800c6b4:	42b4      	cmp	r4, r6
 800c6b6:	d3ea      	bcc.n	800c68e <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xb0>
 800c6b8:	6c2b      	ldr	r3, [r5, #64]	; 0x40
 800c6ba:	9a06      	ldr	r2, [sp, #24]
 800c6bc:	4293      	cmp	r3, r2
 800c6be:	d117      	bne.n	800c6f0 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x112>
 800c6c0:	6ca8      	ldr	r0, [r5, #72]	; 0x48
 800c6c2:	b009      	add	sp, #36	; 0x24
 800c6c4:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c6c8:	f001 bc2c 	b.w	800df24 <WS28xxMulti::Update()>
 800c6cc:	f899 3003 	ldrb.w	r3, [r9, #3]
 800c6d0:	6ca8      	ldr	r0, [r5, #72]	; 0x48
 800c6d2:	9302      	str	r3, [sp, #8]
 800c6d4:	f899 3002 	ldrb.w	r3, [r9, #2]
 800c6d8:	443a      	add	r2, r7
 800c6da:	9301      	str	r3, [sp, #4]
 800c6dc:	f899 3001 	ldrb.w	r3, [r9, #1]
 800c6e0:	9107      	str	r1, [sp, #28]
 800c6e2:	9300      	str	r3, [sp, #0]
 800c6e4:	f899 3000 	ldrb.w	r3, [r9]
 800c6e8:	f001 fe66 	bl	800e3b8 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
 800c6ec:	9907      	ldr	r1, [sp, #28]
 800c6ee:	e7ab      	b.n	800c648 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x6a>
 800c6f0:	b009      	add	sp, #36	; 0x24
 800c6f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800c6f6 <WS28xxDmxMulti::FullOn()>:
 800c6f6:	b510      	push	{r4, lr}
 800c6f8:	4604      	mov	r4, r0
 800c6fa:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800c6fc:	f001 fd52 	bl	800e1a4 <WS28xxMulti::IsUpdating()>
 800c700:	2800      	cmp	r0, #0
 800c702:	d1fa      	bne.n	800c6fa <WS28xxDmxMulti::FullOn()+0x4>
 800c704:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800c706:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c70a:	f001 bceb 	b.w	800e0e4 <WS28xxMulti::FullOn()>

0800c70e <WS28xxDmxMulti::Print()>:
 800c70e:	3004      	adds	r0, #4
 800c710:	f7ff bf08 	b.w	800c524 <PixelDmxConfiguration::Print()>

0800c714 <WS28xxDmxMulti::Stop(unsigned int)>:
 800c714:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800c716:	fa23 f201 	lsr.w	r2, r3, r1
 800c71a:	07d2      	lsls	r2, r2, #31
 800c71c:	bf41      	itttt	mi
 800c71e:	2201      	movmi	r2, #1
 800c720:	408a      	lslmi	r2, r1
 800c722:	4393      	bicmi	r3, r2
 800c724:	6503      	strmi	r3, [r0, #80]	; 0x50
 800c726:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800c728:	b923      	cbnz	r3, 800c734 <WS28xxDmxMulti::Stop(unsigned int)+0x20>
 800c72a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800c72c:	b110      	cbz	r0, 800c734 <WS28xxDmxMulti::Stop(unsigned int)+0x20>
 800c72e:	6803      	ldr	r3, [r0, #0]
 800c730:	68db      	ldr	r3, [r3, #12]
 800c732:	4718      	bx	r3
 800c734:	4770      	bx	lr
	...

0800c738 <WS28xxDmxMulti::WS28xxDmxMulti(PixelDmxConfiguration&)>:
 800c738:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c73a:	4604      	mov	r4, r0
 800c73c:	460d      	mov	r5, r1
 800c73e:	4b14      	ldr	r3, [pc, #80]	; (800c790 <WS28xxDmxMulti::WS28xxDmxMulti(PixelDmxConfiguration&)+0x58>)
 800c740:	4606      	mov	r6, r0
 800c742:	f844 3b04 	str.w	r3, [r4], #4
 800c746:	460f      	mov	r7, r1
 800c748:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800c74a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800c74c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800c74e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800c750:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 800c754:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800c758:	2300      	movs	r3, #0
 800c75a:	f106 0244 	add.w	r2, r6, #68	; 0x44
 800c75e:	2108      	movs	r1, #8
 800c760:	e9c6 3312 	strd	r3, r3, [r6, #72]	; 0x48
 800c764:	6533      	str	r3, [r6, #80]	; 0x50
 800c766:	f886 3054 	strb.w	r3, [r6, #84]	; 0x54
 800c76a:	1d30      	adds	r0, r6, #4
 800c76c:	f106 0334 	add.w	r3, r6, #52	; 0x34
 800c770:	f7ff fe98 	bl	800c4a4 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)>
 800c774:	2020      	movs	r0, #32
 800c776:	f005 feef 	bl	8012558 <operator new(unsigned int)>
 800c77a:	4604      	mov	r4, r0
 800c77c:	4639      	mov	r1, r7
 800c77e:	f001 fb7f 	bl	800de80 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)>
 800c782:	4620      	mov	r0, r4
 800c784:	64b4      	str	r4, [r6, #72]	; 0x48
 800c786:	f001 fc49 	bl	800e01c <WS28xxMulti::Blackout()>
 800c78a:	4630      	mov	r0, r6
 800c78c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c78e:	bf00      	nop
 800c790:	08016378 	stmdaeq	r1, {r3, r4, r5, r6, r8, r9, sp, lr}

0800c794 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>:
 800c794:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c796:	88c6      	ldrh	r6, [r0, #6]
 800c798:	8885      	ldrh	r5, [r0, #4]
 800c79a:	42ae      	cmp	r6, r5
 800c79c:	d216      	bcs.n	800c7cc <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x38>
 800c79e:	4604      	mov	r4, r0
 800c7a0:	6800      	ldr	r0, [r0, #0]
 800c7a2:	1bad      	subs	r5, r5, r6
 800c7a4:	4430      	add	r0, r6
 800c7a6:	7a26      	ldrb	r6, [r4, #8]
 800c7a8:	b923      	cbnz	r3, 800c7b4 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x20>
 800c7aa:	b926      	cbnz	r6, 800c7b6 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x22>
 800c7ac:	9200      	str	r2, [sp, #0]
 800c7ae:	460b      	mov	r3, r1
 800c7b0:	4a09      	ldr	r2, [pc, #36]	; (800c7d8 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x44>)
 800c7b2:	e003      	b.n	800c7bc <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 800c7b4:	b166      	cbz	r6, 800c7d0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x3c>
 800c7b6:	460b      	mov	r3, r1
 800c7b8:	9200      	str	r2, [sp, #0]
 800c7ba:	4a08      	ldr	r2, [pc, #32]	; (800c7dc <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x48>)
 800c7bc:	4629      	mov	r1, r5
 800c7be:	f7fc feff 	bl	80095c0 <snprintf>
 800c7c2:	4285      	cmp	r5, r0
 800c7c4:	bfa2      	ittt	ge
 800c7c6:	88e3      	ldrhge	r3, [r4, #6]
 800c7c8:	181b      	addge	r3, r3, r0
 800c7ca:	80e3      	strhge	r3, [r4, #6]
 800c7cc:	b002      	add	sp, #8
 800c7ce:	bd70      	pop	{r4, r5, r6, pc}
 800c7d0:	9200      	str	r2, [sp, #0]
 800c7d2:	460b      	mov	r3, r1
 800c7d4:	4a02      	ldr	r2, [pc, #8]	; (800c7e0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x4c>)
 800c7d6:	e7f1      	b.n	800c7bc <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 800c7d8:	08015061 	stmdaeq	r1, {r0, r5, r6, ip, lr}
 800c7dc:	08015058 	stmdaeq	r1, {r3, r4, r6, ip, lr}
 800c7e0:	08015062 	stmdaeq	r1, {r1, r5, r6, ip, lr}

0800c7e4 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>:
 800c7e4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c7e6:	88c6      	ldrh	r6, [r0, #6]
 800c7e8:	8885      	ldrh	r5, [r0, #4]
 800c7ea:	42ae      	cmp	r6, r5
 800c7ec:	d216      	bcs.n	800c81c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x38>
 800c7ee:	4604      	mov	r4, r0
 800c7f0:	6800      	ldr	r0, [r0, #0]
 800c7f2:	1bad      	subs	r5, r5, r6
 800c7f4:	4430      	add	r0, r6
 800c7f6:	7a26      	ldrb	r6, [r4, #8]
 800c7f8:	b923      	cbnz	r3, 800c804 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x20>
 800c7fa:	b926      	cbnz	r6, 800c806 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x22>
 800c7fc:	9200      	str	r2, [sp, #0]
 800c7fe:	460b      	mov	r3, r1
 800c800:	4a09      	ldr	r2, [pc, #36]	; (800c828 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x44>)
 800c802:	e003      	b.n	800c80c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800c804:	b166      	cbz	r6, 800c820 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x3c>
 800c806:	460b      	mov	r3, r1
 800c808:	9200      	str	r2, [sp, #0]
 800c80a:	4a08      	ldr	r2, [pc, #32]	; (800c82c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x48>)
 800c80c:	4629      	mov	r1, r5
 800c80e:	f7fc fed7 	bl	80095c0 <snprintf>
 800c812:	4285      	cmp	r5, r0
 800c814:	bfa2      	ittt	ge
 800c816:	88e3      	ldrhge	r3, [r4, #6]
 800c818:	181b      	addge	r3, r3, r0
 800c81a:	80e3      	strhge	r3, [r4, #6]
 800c81c:	b002      	add	sp, #8
 800c81e:	bd70      	pop	{r4, r5, r6, pc}
 800c820:	9200      	str	r2, [sp, #0]
 800c822:	460b      	mov	r3, r1
 800c824:	4a02      	ldr	r2, [pc, #8]	; (800c830 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x4c>)
 800c826:	e7f1      	b.n	800c80c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800c828:	08015061 	stmdaeq	r1, {r0, r5, r6, ip, lr}
 800c82c:	08015058 	stmdaeq	r1, {r3, r4, r6, ip, lr}
 800c830:	08015062 	stmdaeq	r1, {r1, r5, r6, ip, lr}

0800c834 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>:
 800c834:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c836:	88c6      	ldrh	r6, [r0, #6]
 800c838:	8885      	ldrh	r5, [r0, #4]
 800c83a:	42ae      	cmp	r6, r5
 800c83c:	d216      	bcs.n	800c86c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x38>
 800c83e:	4604      	mov	r4, r0
 800c840:	6800      	ldr	r0, [r0, #0]
 800c842:	1bad      	subs	r5, r5, r6
 800c844:	4430      	add	r0, r6
 800c846:	7a26      	ldrb	r6, [r4, #8]
 800c848:	b923      	cbnz	r3, 800c854 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x20>
 800c84a:	b926      	cbnz	r6, 800c856 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x22>
 800c84c:	9200      	str	r2, [sp, #0]
 800c84e:	460b      	mov	r3, r1
 800c850:	4a09      	ldr	r2, [pc, #36]	; (800c878 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x44>)
 800c852:	e003      	b.n	800c85c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800c854:	b166      	cbz	r6, 800c870 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x3c>
 800c856:	460b      	mov	r3, r1
 800c858:	9200      	str	r2, [sp, #0]
 800c85a:	4a08      	ldr	r2, [pc, #32]	; (800c87c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x48>)
 800c85c:	4629      	mov	r1, r5
 800c85e:	f7fc feaf 	bl	80095c0 <snprintf>
 800c862:	4285      	cmp	r5, r0
 800c864:	bfa2      	ittt	ge
 800c866:	88e3      	ldrhge	r3, [r4, #6]
 800c868:	181b      	addge	r3, r3, r0
 800c86a:	80e3      	strhge	r3, [r4, #6]
 800c86c:	b002      	add	sp, #8
 800c86e:	bd70      	pop	{r4, r5, r6, pc}
 800c870:	9200      	str	r2, [sp, #0]
 800c872:	460b      	mov	r3, r1
 800c874:	4a02      	ldr	r2, [pc, #8]	; (800c880 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x4c>)
 800c876:	e7f1      	b.n	800c85c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800c878:	08015074 	stmdaeq	r1, {r2, r4, r5, r6, ip, lr}
 800c87c:	08015069 	stmdaeq	r1, {r0, r3, r5, r6, ip, lr}
 800c880:	08015075 	stmdaeq	r1, {r0, r2, r4, r5, r6, ip, lr}

0800c884 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>:
 800c884:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800c888:	4699      	mov	r9, r3
 800c88a:	8885      	ldrh	r5, [r0, #4]
 800c88c:	88c3      	ldrh	r3, [r0, #6]
 800c88e:	4604      	mov	r4, r0
 800c890:	42ab      	cmp	r3, r5
 800c892:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
 800c896:	d227      	bcs.n	800c8e8 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x64>
 800c898:	6826      	ldr	r6, [r4, #0]
 800c89a:	4610      	mov	r0, r2
 800c89c:	460f      	mov	r7, r1
 800c89e:	f894 a008 	ldrb.w	sl, [r4, #8]
 800c8a2:	441e      	add	r6, r3
 800c8a4:	1aed      	subs	r5, r5, r3
 800c8a6:	f7fb fcc1 	bl	800822c <__aeabi_f2d>
 800c8aa:	f1b9 0f00 	cmp.w	r9, #0
 800c8ae:	d109      	bne.n	800c8c4 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x40>
 800c8b0:	f1ba 0f00 	cmp.w	sl, #0
 800c8b4:	d109      	bne.n	800c8ca <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x46>
 800c8b6:	463b      	mov	r3, r7
 800c8b8:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800c8bc:	4a0f      	ldr	r2, [pc, #60]	; (800c8fc <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x78>)
 800c8be:	f8cd 8000 	str.w	r8, [sp]
 800c8c2:	e008      	b.n	800c8d6 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x52>
 800c8c4:	f1ba 0f00 	cmp.w	sl, #0
 800c8c8:	d011      	beq.n	800c8ee <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x6a>
 800c8ca:	463b      	mov	r3, r7
 800c8cc:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800c8d0:	4a0b      	ldr	r2, [pc, #44]	; (800c900 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x7c>)
 800c8d2:	f8cd 8000 	str.w	r8, [sp]
 800c8d6:	4629      	mov	r1, r5
 800c8d8:	4630      	mov	r0, r6
 800c8da:	f7fc fe71 	bl	80095c0 <snprintf>
 800c8de:	4285      	cmp	r5, r0
 800c8e0:	bfa2      	ittt	ge
 800c8e2:	88e3      	ldrhge	r3, [r4, #6]
 800c8e4:	181b      	addge	r3, r3, r0
 800c8e6:	80e3      	strhge	r3, [r4, #6]
 800c8e8:	b004      	add	sp, #16
 800c8ea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c8ee:	463b      	mov	r3, r7
 800c8f0:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800c8f4:	4a03      	ldr	r2, [pc, #12]	; (800c904 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x80>)
 800c8f6:	f8cd 8000 	str.w	r8, [sp]
 800c8fa:	e7ec      	b.n	800c8d6 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x52>
 800c8fc:	080163b3 	stmdaeq	r1, {r0, r1, r4, r5, r7, r8, r9, sp, lr}
 800c900:	080163a8 	stmdaeq	r1, {r3, r5, r7, r8, r9, sp, lr}
 800c904:	080163b4 	stmdaeq	r1, {r2, r4, r5, r7, r8, r9, sp, lr}

0800c908 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)>:
 800c908:	6001      	str	r1, [r0, #0]
 800c90a:	2100      	movs	r1, #0
 800c90c:	f04f 6c10 	mov.w	ip, #150994944	; 0x9000000
 800c910:	4a0a      	ldr	r2, [pc, #40]	; (800c93c <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)+0x34>)
 800c912:	e9c0 1201 	strd	r1, r2, [r0, #4]
 800c916:	4a0a      	ldr	r2, [pc, #40]	; (800c940 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)+0x38>)
 800c918:	490a      	ldr	r1, [pc, #40]	; (800c944 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)+0x3c>)
 800c91a:	e9c0 c203 	strd	ip, r2, [r0, #12]
 800c91e:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 800c922:	e9c0 1205 	strd	r1, r2, [r0, #20]
 800c926:	4a08      	ldr	r2, [pc, #32]	; (800c948 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)+0x40>)
 800c928:	61c2      	str	r2, [r0, #28]
 800c92a:	f102 1208 	add.w	r2, r2, #524296	; 0x80008
 800c92e:	6202      	str	r2, [r0, #32]
 800c930:	f102 1208 	add.w	r2, r2, #524296	; 0x80008
 800c934:	6242      	str	r2, [r0, #36]	; 0x24
 800c936:	221d      	movs	r2, #29
 800c938:	8502      	strh	r2, [r0, #40]	; 0x28
 800c93a:	4770      	bx	lr
 800c93c:	0100aa03 	tsteq	r0, r3, lsl #20
 800c940:	01ff003d 	mvnseq	r0, sp, lsr r0
 800c944:	06000100 	streq	r0, [r0], -r0, lsl #2
 800c948:	00090005 	andeq	r0, r9, r5

0800c94c <PixelDmxParams::Load()>:
 800c94c:	b508      	push	{r3, lr}
 800c94e:	2300      	movs	r3, #0
 800c950:	4601      	mov	r1, r0
 800c952:	6043      	str	r3, [r0, #4]
 800c954:	6800      	ldr	r0, [r0, #0]
 800c956:	b120      	cbz	r0, 800c962 <PixelDmxParams::Load()+0x16>
 800c958:	6803      	ldr	r3, [r0, #0]
 800c95a:	3104      	adds	r1, #4
 800c95c:	68db      	ldr	r3, [r3, #12]
 800c95e:	4798      	blx	r3
 800c960:	2001      	movs	r0, #1
 800c962:	bd08      	pop	{r3, pc}

0800c964 <PixelDmxParams::Load(char const*, unsigned int)>:
 800c964:	6803      	ldr	r3, [r0, #0]
 800c966:	b1d3      	cbz	r3, 800c99e <PixelDmxParams::Load(char const*, unsigned int)+0x3a>
 800c968:	2300      	movs	r3, #0
 800c96a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c96c:	460d      	mov	r5, r1
 800c96e:	4616      	mov	r6, r2
 800c970:	4604      	mov	r4, r0
 800c972:	6043      	str	r3, [r0, #4]
 800c974:	4602      	mov	r2, r0
 800c976:	490a      	ldr	r1, [pc, #40]	; (800c9a0 <PixelDmxParams::Load(char const*, unsigned int)+0x3c>)
 800c978:	4668      	mov	r0, sp
 800c97a:	f005 f83f 	bl	80119fc <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800c97e:	4632      	mov	r2, r6
 800c980:	4629      	mov	r1, r5
 800c982:	4668      	mov	r0, sp
 800c984:	f005 f83e 	bl	8011a04 <ReadConfigFile::Read(char const*, unsigned int)>
 800c988:	4621      	mov	r1, r4
 800c98a:	f851 0b04 	ldr.w	r0, [r1], #4
 800c98e:	6803      	ldr	r3, [r0, #0]
 800c990:	689b      	ldr	r3, [r3, #8]
 800c992:	4798      	blx	r3
 800c994:	4668      	mov	r0, sp
 800c996:	f005 f834 	bl	8011a02 <ReadConfigFile::~ReadConfigFile()>
 800c99a:	b002      	add	sp, #8
 800c99c:	bd70      	pop	{r4, r5, r6, pc}
 800c99e:	4770      	bx	lr
 800c9a0:	0800cc5d 	stmdaeq	r0, {r0, r2, r3, r4, r6, sl, fp, lr, pc}

0800c9a4 <PixelDmxParams::callbackFunction(char const*)>:
 800c9a4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c9a8:	2308      	movs	r3, #8
 800c9aa:	460d      	mov	r5, r1
 800c9ac:	b088      	sub	sp, #32
 800c9ae:	4604      	mov	r4, r0
 800c9b0:	9302      	str	r3, [sp, #8]
 800c9b2:	4628      	mov	r0, r5
 800c9b4:	499a      	ldr	r1, [pc, #616]	; (800cc20 <PixelDmxParams::callbackFunction(char const*)+0x27c>)
 800c9b6:	446b      	add	r3, sp
 800c9b8:	aa04      	add	r2, sp, #16
 800c9ba:	f005 f857 	bl	8011a6c <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800c9be:	b9a0      	cbnz	r0, 800c9ea <PixelDmxParams::callbackFunction(char const*)+0x46>
 800c9c0:	9b02      	ldr	r3, [sp, #8]
 800c9c2:	3320      	adds	r3, #32
 800c9c4:	446b      	add	r3, sp
 800c9c6:	f803 0c10 	strb.w	r0, [r3, #-16]
 800c9ca:	a804      	add	r0, sp, #16
 800c9cc:	f000 fc26 	bl	800d21c <PixelType::GetType(char const*)>
 800c9d0:	280e      	cmp	r0, #14
 800c9d2:	bf08      	it	eq
 800c9d4:	2203      	moveq	r2, #3
 800c9d6:	6863      	ldr	r3, [r4, #4]
 800c9d8:	bf19      	ittee	ne
 800c9da:	7220      	strbne	r0, [r4, #8]
 800c9dc:	f043 0301 	orrne.w	r3, r3, #1
 800c9e0:	7222      	strbeq	r2, [r4, #8]
 800c9e2:	f023 0301 	biceq.w	r3, r3, #1
 800c9e6:	6063      	str	r3, [r4, #4]
 800c9e8:	e033      	b.n	800ca52 <PixelDmxParams::callbackFunction(char const*)+0xae>
 800c9ea:	4628      	mov	r0, r5
 800c9ec:	498d      	ldr	r1, [pc, #564]	; (800cc24 <PixelDmxParams::callbackFunction(char const*)+0x280>)
 800c9ee:	f10d 0202 	add.w	r2, sp, #2
 800c9f2:	f005 f8f8 	bl	8011be6 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800c9f6:	b990      	cbnz	r0, 800ca1e <PixelDmxParams::callbackFunction(char const*)+0x7a>
 800c9f8:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800c9fc:	6863      	ldr	r3, [r4, #4]
 800c9fe:	1e51      	subs	r1, r2, #1
 800ca00:	f5b1 7f2a 	cmp.w	r1, #680	; 0x2a8
 800ca04:	bf2d      	iteet	cs
 800ca06:	f06f 0255 	mvncs.w	r2, #85	; 0x55
 800ca0a:	f8a4 2009 	strhcc.w	r2, [r4, #9]
 800ca0e:	f043 0302 	orrcc.w	r3, r3, #2
 800ca12:	7262      	strbcs	r2, [r4, #9]
 800ca14:	bf24      	itt	cs
 800ca16:	72a0      	strbcs	r0, [r4, #10]
 800ca18:	f023 0302 	biccs.w	r3, r3, #2
 800ca1c:	e7e3      	b.n	800c9e6 <PixelDmxParams::callbackFunction(char const*)+0x42>
 800ca1e:	2303      	movs	r3, #3
 800ca20:	4628      	mov	r0, r5
 800ca22:	9302      	str	r3, [sp, #8]
 800ca24:	4980      	ldr	r1, [pc, #512]	; (800cc28 <PixelDmxParams::callbackFunction(char const*)+0x284>)
 800ca26:	ab02      	add	r3, sp, #8
 800ca28:	aa04      	add	r2, sp, #16
 800ca2a:	f005 f81f 	bl	8011a6c <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800ca2e:	b998      	cbnz	r0, 800ca58 <PixelDmxParams::callbackFunction(char const*)+0xb4>
 800ca30:	9b02      	ldr	r3, [sp, #8]
 800ca32:	3320      	adds	r3, #32
 800ca34:	446b      	add	r3, sp
 800ca36:	f803 0c10 	strb.w	r0, [r3, #-16]
 800ca3a:	a804      	add	r0, sp, #16
 800ca3c:	f000 fc12 	bl	800d264 <PixelType::GetMap(char const*)>
 800ca40:	6863      	ldr	r3, [r4, #4]
 800ca42:	2806      	cmp	r0, #6
 800ca44:	bf14      	ite	ne
 800ca46:	f443 7300 	orrne.w	r3, r3, #512	; 0x200
 800ca4a:	f423 7300 	biceq.w	r3, r3, #512	; 0x200
 800ca4e:	6063      	str	r3, [r4, #4]
 800ca50:	75e0      	strb	r0, [r4, #23]
 800ca52:	b008      	add	sp, #32
 800ca54:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ca58:	4628      	mov	r0, r5
 800ca5a:	4974      	ldr	r1, [pc, #464]	; (800cc2c <PixelDmxParams::callbackFunction(char const*)+0x288>)
 800ca5c:	aa01      	add	r2, sp, #4
 800ca5e:	f005 f81e 	bl	8011a9e <Sscan::Float(char const*, char const*, float&)>
 800ca62:	b960      	cbnz	r0, 800ca7e <PixelDmxParams::callbackFunction(char const*)+0xda>
 800ca64:	9801      	ldr	r0, [sp, #4]
 800ca66:	f000 fc69 	bl	800d33c <PixelType::ConvertTxH(float)>
 800ca6a:	6863      	ldr	r3, [r4, #4]
 800ca6c:	b120      	cbz	r0, 800ca78 <PixelDmxParams::callbackFunction(char const*)+0xd4>
 800ca6e:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800ca72:	6063      	str	r3, [r4, #4]
 800ca74:	7620      	strb	r0, [r4, #24]
 800ca76:	e7ec      	b.n	800ca52 <PixelDmxParams::callbackFunction(char const*)+0xae>
 800ca78:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800ca7c:	e7f9      	b.n	800ca72 <PixelDmxParams::callbackFunction(char const*)+0xce>
 800ca7e:	4628      	mov	r0, r5
 800ca80:	496b      	ldr	r1, [pc, #428]	; (800cc30 <PixelDmxParams::callbackFunction(char const*)+0x28c>)
 800ca82:	aa01      	add	r2, sp, #4
 800ca84:	f005 f80b 	bl	8011a9e <Sscan::Float(char const*, char const*, float&)>
 800ca88:	b960      	cbnz	r0, 800caa4 <PixelDmxParams::callbackFunction(char const*)+0x100>
 800ca8a:	9801      	ldr	r0, [sp, #4]
 800ca8c:	f000 fc56 	bl	800d33c <PixelType::ConvertTxH(float)>
 800ca90:	6863      	ldr	r3, [r4, #4]
 800ca92:	b120      	cbz	r0, 800ca9e <PixelDmxParams::callbackFunction(char const*)+0xfa>
 800ca94:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 800ca98:	6063      	str	r3, [r4, #4]
 800ca9a:	7660      	strb	r0, [r4, #25]
 800ca9c:	e7d9      	b.n	800ca52 <PixelDmxParams::callbackFunction(char const*)+0xae>
 800ca9e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800caa2:	e7f9      	b.n	800ca98 <PixelDmxParams::callbackFunction(char const*)+0xf4>
 800caa4:	4628      	mov	r0, r5
 800caa6:	4963      	ldr	r1, [pc, #396]	; (800cc34 <PixelDmxParams::callbackFunction(char const*)+0x290>)
 800caa8:	f10d 0202 	add.w	r2, sp, #2
 800caac:	f005 f89b 	bl	8011be6 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800cab0:	b998      	cbnz	r0, 800cada <PixelDmxParams::callbackFunction(char const*)+0x136>
 800cab2:	f240 25a6 	movw	r5, #678	; 0x2a6
 800cab6:	f8bd 1002 	ldrh.w	r1, [sp, #2]
 800caba:	6863      	ldr	r3, [r4, #4]
 800cabc:	1e8a      	subs	r2, r1, #2
 800cabe:	b292      	uxth	r2, r2
 800cac0:	42aa      	cmp	r2, r5
 800cac2:	bf81      	itttt	hi
 800cac4:	2201      	movhi	r2, #1
 800cac6:	75a0      	strbhi	r0, [r4, #22]
 800cac8:	7562      	strbhi	r2, [r4, #21]
 800caca:	f423 7380 	bichi.w	r3, r3, #256	; 0x100
 800cace:	bf9c      	itt	ls
 800cad0:	f8a4 1015 	strhls.w	r1, [r4, #21]
 800cad4:	f443 7380 	orrls.w	r3, r3, #256	; 0x100
 800cad8:	e785      	b.n	800c9e6 <PixelDmxParams::callbackFunction(char const*)+0x42>
 800cada:	4628      	mov	r0, r5
 800cadc:	4956      	ldr	r1, [pc, #344]	; (800cc38 <PixelDmxParams::callbackFunction(char const*)+0x294>)
 800cade:	aa03      	add	r2, sp, #12
 800cae0:	f005 f89f 	bl	8011c22 <Sscan::Uint32(char const*, char const*, unsigned int&)>
 800cae4:	b960      	cbnz	r0, 800cb00 <PixelDmxParams::callbackFunction(char const*)+0x15c>
 800cae6:	9a03      	ldr	r2, [sp, #12]
 800cae8:	4954      	ldr	r1, [pc, #336]	; (800cc3c <PixelDmxParams::callbackFunction(char const*)+0x298>)
 800caea:	6863      	ldr	r3, [r4, #4]
 800caec:	428a      	cmp	r2, r1
 800caee:	bf14      	ite	ne
 800caf0:	f043 0310 	orrne.w	r3, r3, #16
 800caf4:	f023 0310 	biceq.w	r3, r3, #16
 800caf8:	6063      	str	r3, [r4, #4]
 800cafa:	f8c4 200e 	str.w	r2, [r4, #14]
 800cafe:	e7a8      	b.n	800ca52 <PixelDmxParams::callbackFunction(char const*)+0xae>
 800cb00:	4628      	mov	r0, r5
 800cb02:	494f      	ldr	r1, [pc, #316]	; (800cc40 <PixelDmxParams::callbackFunction(char const*)+0x29c>)
 800cb04:	f10d 0201 	add.w	r2, sp, #1
 800cb08:	f005 f8b4 	bl	8011c74 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800cb0c:	b988      	cbnz	r0, 800cb32 <PixelDmxParams::callbackFunction(char const*)+0x18e>
 800cb0e:	f89d 1001 	ldrb.w	r1, [sp, #1]
 800cb12:	6863      	ldr	r3, [r4, #4]
 800cb14:	1e4a      	subs	r2, r1, #1
 800cb16:	b2d2      	uxtb	r2, r2
 800cb18:	2afd      	cmp	r2, #253	; 0xfd
 800cb1a:	bf83      	ittte	hi
 800cb1c:	f023 0320 	bichi.w	r3, r3, #32
 800cb20:	6063      	strhi	r3, [r4, #4]
 800cb22:	23ff      	movhi	r3, #255	; 0xff
 800cb24:	f043 0320 	orrls.w	r3, r3, #32
 800cb28:	bf9a      	itte	ls
 800cb2a:	6063      	strls	r3, [r4, #4]
 800cb2c:	74a1      	strbls	r1, [r4, #18]
 800cb2e:	74a3      	strbhi	r3, [r4, #18]
 800cb30:	e78f      	b.n	800ca52 <PixelDmxParams::callbackFunction(char const*)+0xae>
 800cb32:	2600      	movs	r6, #0
 800cb34:	f04f 0814 	mov.w	r8, #20
 800cb38:	f44f 5a80 	mov.w	sl, #4096	; 0x1000
 800cb3c:	f8df 9104 	ldr.w	r9, [pc, #260]	; 800cc44 <PixelDmxParams::callbackFunction(char const*)+0x2a0>
 800cb40:	f104 071a 	add.w	r7, r4, #26
 800cb44:	4628      	mov	r0, r5
 800cb46:	fb08 9106 	mla	r1, r8, r6, r9
 800cb4a:	f10d 0202 	add.w	r2, sp, #2
 800cb4e:	f005 f84a 	bl	8011be6 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800cb52:	b940      	cbnz	r0, 800cb66 <PixelDmxParams::callbackFunction(char const*)+0x1c2>
 800cb54:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800cb58:	6863      	ldr	r3, [r4, #4]
 800cb5a:	fa0a f106 	lsl.w	r1, sl, r6
 800cb5e:	b1ea      	cbz	r2, 800cb9c <PixelDmxParams::callbackFunction(char const*)+0x1f8>
 800cb60:	803a      	strh	r2, [r7, #0]
 800cb62:	430b      	orrs	r3, r1
 800cb64:	6063      	str	r3, [r4, #4]
 800cb66:	3601      	adds	r6, #1
 800cb68:	2e08      	cmp	r6, #8
 800cb6a:	f107 0702 	add.w	r7, r7, #2
 800cb6e:	d1e9      	bne.n	800cb44 <PixelDmxParams::callbackFunction(char const*)+0x1a0>
 800cb70:	4628      	mov	r0, r5
 800cb72:	4935      	ldr	r1, [pc, #212]	; (800cc48 <PixelDmxParams::callbackFunction(char const*)+0x2a4>)
 800cb74:	f10d 0201 	add.w	r2, sp, #1
 800cb78:	f005 f87c 	bl	8011c74 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800cb7c:	b9a0      	cbnz	r0, 800cba8 <PixelDmxParams::callbackFunction(char const*)+0x204>
 800cb7e:	f89d 2001 	ldrb.w	r2, [sp, #1]
 800cb82:	6863      	ldr	r3, [r4, #4]
 800cb84:	1e91      	subs	r1, r2, #2
 800cb86:	2906      	cmp	r1, #6
 800cb88:	bf8d      	iteet	hi
 800cb8a:	2201      	movhi	r2, #1
 800cb8c:	74e2      	strbls	r2, [r4, #19]
 800cb8e:	f043 0340 	orrls.w	r3, r3, #64	; 0x40
 800cb92:	74e2      	strbhi	r2, [r4, #19]
 800cb94:	bf88      	it	hi
 800cb96:	f023 0340 	bichi.w	r3, r3, #64	; 0x40
 800cb9a:	e724      	b.n	800c9e6 <PixelDmxParams::callbackFunction(char const*)+0x42>
 800cb9c:	00b2      	lsls	r2, r6, #2
 800cb9e:	3201      	adds	r2, #1
 800cba0:	803a      	strh	r2, [r7, #0]
 800cba2:	ea23 0301 	bic.w	r3, r3, r1
 800cba6:	e7dd      	b.n	800cb64 <PixelDmxParams::callbackFunction(char const*)+0x1c0>
 800cba8:	4628      	mov	r0, r5
 800cbaa:	4928      	ldr	r1, [pc, #160]	; (800cc4c <PixelDmxParams::callbackFunction(char const*)+0x2a8>)
 800cbac:	f10d 0201 	add.w	r2, sp, #1
 800cbb0:	f005 f860 	bl	8011c74 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800cbb4:	b960      	cbnz	r0, 800cbd0 <PixelDmxParams::callbackFunction(char const*)+0x22c>
 800cbb6:	f89d 2001 	ldrb.w	r2, [sp, #1]
 800cbba:	6863      	ldr	r3, [r4, #4]
 800cbbc:	1e51      	subs	r1, r2, #1
 800cbbe:	2904      	cmp	r1, #4
 800cbc0:	bf99      	ittee	ls
 800cbc2:	7522      	strbls	r2, [r4, #20]
 800cbc4:	f043 0308 	orrls.w	r3, r3, #8
 800cbc8:	7520      	strbhi	r0, [r4, #20]
 800cbca:	f023 0308 	bichi.w	r3, r3, #8
 800cbce:	e70a      	b.n	800c9e6 <PixelDmxParams::callbackFunction(char const*)+0x42>
 800cbd0:	4628      	mov	r0, r5
 800cbd2:	491f      	ldr	r1, [pc, #124]	; (800cc50 <PixelDmxParams::callbackFunction(char const*)+0x2ac>)
 800cbd4:	f10d 0201 	add.w	r2, sp, #1
 800cbd8:	f005 f84c 	bl	8011c74 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800cbdc:	b948      	cbnz	r0, 800cbf2 <PixelDmxParams::callbackFunction(char const*)+0x24e>
 800cbde:	f89d 2001 	ldrb.w	r2, [sp, #1]
 800cbe2:	6863      	ldr	r3, [r4, #4]
 800cbe4:	b112      	cbz	r2, 800cbec <PixelDmxParams::callbackFunction(char const*)+0x248>
 800cbe6:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800cbea:	e6fc      	b.n	800c9e6 <PixelDmxParams::callbackFunction(char const*)+0x42>
 800cbec:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800cbf0:	e6f9      	b.n	800c9e6 <PixelDmxParams::callbackFunction(char const*)+0x42>
 800cbf2:	4628      	mov	r0, r5
 800cbf4:	4917      	ldr	r1, [pc, #92]	; (800cc54 <PixelDmxParams::callbackFunction(char const*)+0x2b0>)
 800cbf6:	aa01      	add	r2, sp, #4
 800cbf8:	f004 ff51 	bl	8011a9e <Sscan::Float(char const*, char const*, float&)>
 800cbfc:	4605      	mov	r5, r0
 800cbfe:	2800      	cmp	r0, #0
 800cc00:	f47f af27 	bne.w	800ca52 <PixelDmxParams::callbackFunction(char const*)+0xae>
 800cc04:	4914      	ldr	r1, [pc, #80]	; (800cc58 <PixelDmxParams::callbackFunction(char const*)+0x2b4>)
 800cc06:	9801      	ldr	r0, [sp, #4]
 800cc08:	f7fb fb68 	bl	80082dc <__aeabi_fmul>
 800cc0c:	f7fb fcb6 	bl	800857c <__aeabi_f2uiz>
 800cc10:	b2c3      	uxtb	r3, r0
 800cc12:	f1a3 0214 	sub.w	r2, r3, #20
 800cc16:	2a05      	cmp	r2, #5
 800cc18:	bf8c      	ite	hi
 800cc1a:	7365      	strbhi	r5, [r4, #13]
 800cc1c:	7363      	strbls	r3, [r4, #13]
 800cc1e:	e718      	b.n	800ca52 <PixelDmxParams::callbackFunction(char const*)+0xae>
 800cc20:	0801735e 	stmdaeq	r1, {r1, r2, r3, r4, r6, r8, r9, ip, sp, lr}
 800cc24:	08017367 	stmdaeq	r1, {r0, r1, r2, r5, r6, r8, r9, ip, sp, lr}
 800cc28:	0801734e 	stmdaeq	r1, {r1, r2, r3, r6, r8, r9, ip, sp, lr}
 800cc2c:	08017371 	stmdaeq	r1, {r0, r4, r5, r6, r8, r9, ip, sp, lr}
 800cc30:	08017379 	stmdaeq	r1, {r0, r3, r4, r5, r6, r8, r9, ip, sp, lr}
 800cc34:	0801731b 	stmdaeq	r1, {r0, r1, r3, r4, r8, r9, ip, sp, lr}
 800cc38:	080172ff 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r7, r9, ip, sp, lr}
 800cc3c:	003d0900 	eorseq	r0, sp, r0, lsl #18
 800cc40:	0801733c 	stmdaeq	r1, {r2, r3, r4, r5, r8, r9, ip, sp, lr}
 800cc44:	080173fa 	stmdaeq	r1, {r1, r3, r4, r5, r6, r7, r8, r9, ip, sp, lr}
 800cc48:	080172e8 	stmdaeq	r1, {r3, r5, r6, r7, r9, ip, sp, lr}
 800cc4c:	0801730e 	stmdaeq	r1, {r1, r2, r3, r8, r9, ip, sp, lr}
 800cc50:	0801732b 	stmdaeq	r1, {r0, r1, r3, r5, r8, r9, ip, sp, lr}
 800cc54:	080172f3 	stmdaeq	r1, {r0, r1, r4, r5, r6, r7, r9, ip, sp, lr}
 800cc58:	41200000 			; <UNDEFINED> instruction: 0x41200000

0800cc5c <PixelDmxParams::staticCallbackFunction(void*, char const*)>:
 800cc5c:	f7ff bea2 	b.w	800c9a4 <PixelDmxParams::callbackFunction(char const*)>

0800cc60 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)>:
 800cc60:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cc64:	4604      	mov	r4, r0
 800cc66:	4615      	mov	r5, r2
 800cc68:	461e      	mov	r6, r3
 800cc6a:	b086      	sub	sp, #24
 800cc6c:	3004      	adds	r0, #4
 800cc6e:	b389      	cbz	r1, 800ccd4 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x74>
 800cc70:	2226      	movs	r2, #38	; 0x26
 800cc72:	f005 fd30 	bl	80126d6 <memmove>
 800cc76:	462a      	mov	r2, r5
 800cc78:	4633      	mov	r3, r6
 800cc7a:	499c      	ldr	r1, [pc, #624]	; (800ceec <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x28c>)
 800cc7c:	a803      	add	r0, sp, #12
 800cc7e:	f004 fe1d 	bl	80118bc <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800cc82:	7a20      	ldrb	r0, [r4, #8]
 800cc84:	f000 fabe 	bl	800d204 <PixelType::GetType(pixel::Type)>
 800cc88:	6863      	ldr	r3, [r4, #4]
 800cc8a:	4602      	mov	r2, r0
 800cc8c:	4998      	ldr	r1, [pc, #608]	; (800cef0 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x290>)
 800cc8e:	f003 0301 	and.w	r3, r3, #1
 800cc92:	a803      	add	r0, sp, #12
 800cc94:	f7ff fdce 	bl	800c834 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800cc98:	6863      	ldr	r3, [r4, #4]
 800cc9a:	f8b4 2009 	ldrh.w	r2, [r4, #9]
 800cc9e:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800cca2:	4994      	ldr	r1, [pc, #592]	; (800cef4 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x294>)
 800cca4:	a803      	add	r0, sp, #12
 800cca6:	f7ff fd9d 	bl	800c7e4 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800ccaa:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800ccae:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800ccb2:	6863      	ldr	r3, [r4, #4]
 800ccb4:	42aa      	cmp	r2, r5
 800ccb6:	d227      	bcs.n	800cd08 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0xa8>
 800ccb8:	9803      	ldr	r0, [sp, #12]
 800ccba:	f013 0380 	ands.w	r3, r3, #128	; 0x80
 800ccbe:	4410      	add	r0, r2
 800ccc0:	eba5 0502 	sub.w	r5, r5, r2
 800ccc4:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800ccc8:	d10b      	bne.n	800cce2 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x82>
 800ccca:	b96a      	cbnz	r2, 800cce8 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x88>
 800cccc:	9200      	str	r2, [sp, #0]
 800ccce:	4b8a      	ldr	r3, [pc, #552]	; (800cef8 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x298>)
 800ccd0:	4a8a      	ldr	r2, [pc, #552]	; (800cefc <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x29c>)
 800ccd2:	e00f      	b.n	800ccf4 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x94>
 800ccd4:	6823      	ldr	r3, [r4, #0]
 800ccd6:	4601      	mov	r1, r0
 800ccd8:	681a      	ldr	r2, [r3, #0]
 800ccda:	4618      	mov	r0, r3
 800ccdc:	68d2      	ldr	r2, [r2, #12]
 800ccde:	4790      	blx	r2
 800cce0:	e7c9      	b.n	800cc76 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x16>
 800cce2:	2a00      	cmp	r2, #0
 800cce4:	f000 808a 	beq.w	800cdfc <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x19c>
 800cce8:	3b00      	subs	r3, #0
 800ccea:	bf18      	it	ne
 800ccec:	2301      	movne	r3, #1
 800ccee:	4a84      	ldr	r2, [pc, #528]	; (800cf00 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2a0>)
 800ccf0:	9300      	str	r3, [sp, #0]
 800ccf2:	4b81      	ldr	r3, [pc, #516]	; (800cef8 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x298>)
 800ccf4:	4629      	mov	r1, r5
 800ccf6:	f7fc fc63 	bl	80095c0 <snprintf>
 800ccfa:	4285      	cmp	r5, r0
 800ccfc:	bfa2      	ittt	ge
 800ccfe:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800cd02:	18c0      	addge	r0, r0, r3
 800cd04:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800cd08:	7b63      	ldrb	r3, [r4, #13]
 800cd0a:	2b00      	cmp	r3, #0
 800cd0c:	d17b      	bne.n	800ce06 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1a6>
 800cd0e:	4a7d      	ldr	r2, [pc, #500]	; (800cf04 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2a4>)
 800cd10:	497d      	ldr	r1, [pc, #500]	; (800cf08 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2a8>)
 800cd12:	a803      	add	r0, sp, #12
 800cd14:	f7ff fd8e 	bl	800c834 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800cd18:	497c      	ldr	r1, [pc, #496]	; (800cf0c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2ac>)
 800cd1a:	a803      	add	r0, sp, #12
 800cd1c:	f004 fe54 	bl	80119c8 <PropertiesBuilder::AddComment(char const*)>
 800cd20:	6863      	ldr	r3, [r4, #4]
 800cd22:	059e      	lsls	r6, r3, #22
 800cd24:	d403      	bmi.n	800cd2e <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0xce>
 800cd26:	7a20      	ldrb	r0, [r4, #8]
 800cd28:	f000 fad0 	bl	800d2cc <PixelType::GetMap(pixel::Type)>
 800cd2c:	75e0      	strb	r0, [r4, #23]
 800cd2e:	7de0      	ldrb	r0, [r4, #23]
 800cd30:	f000 fac0 	bl	800d2b4 <PixelType::GetMap(pixel::Map)>
 800cd34:	6863      	ldr	r3, [r4, #4]
 800cd36:	4602      	mov	r2, r0
 800cd38:	f3c3 2340 	ubfx	r3, r3, #9, #1
 800cd3c:	4974      	ldr	r1, [pc, #464]	; (800cf10 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2b0>)
 800cd3e:	a803      	add	r0, sp, #12
 800cd40:	f7ff fd78 	bl	800c834 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800cd44:	6863      	ldr	r3, [r4, #4]
 800cd46:	f403 6340 	and.w	r3, r3, #3072	; 0xc00
 800cd4a:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 800cd4e:	d011      	beq.n	800cd74 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x114>
 800cd50:	f10d 020b 	add.w	r2, sp, #11
 800cd54:	7a20      	ldrb	r0, [r4, #8]
 800cd56:	f10d 010a 	add.w	r1, sp, #10
 800cd5a:	f000 f94c 	bl	800cff6 <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)>
 800cd5e:	6863      	ldr	r3, [r4, #4]
 800cd60:	055d      	lsls	r5, r3, #21
 800cd62:	bf5c      	itt	pl
 800cd64:	f89d 200a 	ldrbpl.w	r2, [sp, #10]
 800cd68:	7622      	strbpl	r2, [r4, #24]
 800cd6a:	0518      	lsls	r0, r3, #20
 800cd6c:	bf5c      	itt	pl
 800cd6e:	f89d 300b 	ldrbpl.w	r3, [sp, #11]
 800cd72:	7663      	strbpl	r3, [r4, #25]
 800cd74:	4967      	ldr	r1, [pc, #412]	; (800cf14 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2b4>)
 800cd76:	a803      	add	r0, sp, #12
 800cd78:	f004 fe26 	bl	80119c8 <PropertiesBuilder::AddComment(char const*)>
 800cd7c:	7e20      	ldrb	r0, [r4, #24]
 800cd7e:	f000 faaf 	bl	800d2e0 <PixelType::ConvertTxH(unsigned char)>
 800cd82:	2502      	movs	r5, #2
 800cd84:	6863      	ldr	r3, [r4, #4]
 800cd86:	4602      	mov	r2, r0
 800cd88:	4963      	ldr	r1, [pc, #396]	; (800cf18 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2b8>)
 800cd8a:	f3c3 2380 	ubfx	r3, r3, #10, #1
 800cd8e:	9500      	str	r5, [sp, #0]
 800cd90:	a803      	add	r0, sp, #12
 800cd92:	f7ff fd77 	bl	800c884 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>
 800cd96:	7e60      	ldrb	r0, [r4, #25]
 800cd98:	f000 faa2 	bl	800d2e0 <PixelType::ConvertTxH(unsigned char)>
 800cd9c:	6863      	ldr	r3, [r4, #4]
 800cd9e:	4602      	mov	r2, r0
 800cda0:	f3c3 23c0 	ubfx	r3, r3, #11, #1
 800cda4:	495d      	ldr	r1, [pc, #372]	; (800cf1c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2bc>)
 800cda6:	9500      	str	r5, [sp, #0]
 800cda8:	a803      	add	r0, sp, #12
 800cdaa:	f7ff fd6b 	bl	800c884 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>
 800cdae:	495c      	ldr	r1, [pc, #368]	; (800cf20 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2c0>)
 800cdb0:	a803      	add	r0, sp, #12
 800cdb2:	f004 fe09 	bl	80119c8 <PropertiesBuilder::AddComment(char const*)>
 800cdb6:	6863      	ldr	r3, [r4, #4]
 800cdb8:	f8b4 2015 	ldrh.w	r2, [r4, #21]
 800cdbc:	f3c3 2300 	ubfx	r3, r3, #8, #1
 800cdc0:	4958      	ldr	r1, [pc, #352]	; (800cf24 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2c4>)
 800cdc2:	a803      	add	r0, sp, #12
 800cdc4:	f7ff fd0e 	bl	800c7e4 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800cdc8:	4957      	ldr	r1, [pc, #348]	; (800cf28 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2c8>)
 800cdca:	a803      	add	r0, sp, #12
 800cdcc:	f004 fdfc 	bl	80119c8 <PropertiesBuilder::AddComment(char const*)>
 800cdd0:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800cdd4:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800cdd8:	f8d4 300e 	ldr.w	r3, [r4, #14]
 800cddc:	42aa      	cmp	r2, r5
 800cdde:	6861      	ldr	r1, [r4, #4]
 800cde0:	d22e      	bcs.n	800ce40 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1e0>
 800cde2:	9803      	ldr	r0, [sp, #12]
 800cde4:	06c9      	lsls	r1, r1, #27
 800cde6:	4410      	add	r0, r2
 800cde8:	eba5 0502 	sub.w	r5, r5, r2
 800cdec:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800cdf0:	d417      	bmi.n	800ce22 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1c2>
 800cdf2:	b9c2      	cbnz	r2, 800ce26 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1c6>
 800cdf4:	9300      	str	r3, [sp, #0]
 800cdf6:	4a41      	ldr	r2, [pc, #260]	; (800cefc <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x29c>)
 800cdf8:	4b4c      	ldr	r3, [pc, #304]	; (800cf2c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2cc>)
 800cdfa:	e017      	b.n	800ce2c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1cc>
 800cdfc:	2301      	movs	r3, #1
 800cdfe:	4a4c      	ldr	r2, [pc, #304]	; (800cf30 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2d0>)
 800ce00:	9300      	str	r3, [sp, #0]
 800ce02:	4b3d      	ldr	r3, [pc, #244]	; (800cef8 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x298>)
 800ce04:	e776      	b.n	800ccf4 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x94>
 800ce06:	4618      	mov	r0, r3
 800ce08:	f7fa ff9e 	bl	8007d48 <__aeabi_ui2f>
 800ce0c:	4949      	ldr	r1, [pc, #292]	; (800cf34 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2d4>)
 800ce0e:	f7fb fb19 	bl	8008444 <__aeabi_fdiv>
 800ce12:	2301      	movs	r3, #1
 800ce14:	4602      	mov	r2, r0
 800ce16:	493c      	ldr	r1, [pc, #240]	; (800cf08 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2a8>)
 800ce18:	9300      	str	r3, [sp, #0]
 800ce1a:	a803      	add	r0, sp, #12
 800ce1c:	f7ff fd32 	bl	800c884 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>
 800ce20:	e77a      	b.n	800cd18 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0xb8>
 800ce22:	2a00      	cmp	r2, #0
 800ce24:	d05e      	beq.n	800cee4 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x284>
 800ce26:	9300      	str	r3, [sp, #0]
 800ce28:	4a35      	ldr	r2, [pc, #212]	; (800cf00 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2a0>)
 800ce2a:	4b40      	ldr	r3, [pc, #256]	; (800cf2c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2cc>)
 800ce2c:	4629      	mov	r1, r5
 800ce2e:	f7fc fbc7 	bl	80095c0 <snprintf>
 800ce32:	4285      	cmp	r5, r0
 800ce34:	bfa2      	ittt	ge
 800ce36:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800ce3a:	18c0      	addge	r0, r0, r3
 800ce3c:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800ce40:	493d      	ldr	r1, [pc, #244]	; (800cf38 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2d8>)
 800ce42:	a803      	add	r0, sp, #12
 800ce44:	f004 fdc0 	bl	80119c8 <PropertiesBuilder::AddComment(char const*)>
 800ce48:	6863      	ldr	r3, [r4, #4]
 800ce4a:	7ca2      	ldrb	r2, [r4, #18]
 800ce4c:	493b      	ldr	r1, [pc, #236]	; (800cf3c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2dc>)
 800ce4e:	f3c3 1340 	ubfx	r3, r3, #5, #1
 800ce52:	a803      	add	r0, sp, #12
 800ce54:	f7ff fc9e 	bl	800c794 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800ce58:	2500      	movs	r5, #0
 800ce5a:	f44f 5880 	mov.w	r8, #4096	; 0x1000
 800ce5e:	4e38      	ldr	r6, [pc, #224]	; (800cf40 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2e0>)
 800ce60:	f104 0718 	add.w	r7, r4, #24
 800ce64:	6862      	ldr	r2, [r4, #4]
 800ce66:	fa08 f305 	lsl.w	r3, r8, r5
 800ce6a:	4393      	bics	r3, r2
 800ce6c:	bf0c      	ite	eq
 800ce6e:	2301      	moveq	r3, #1
 800ce70:	2300      	movne	r3, #0
 800ce72:	4631      	mov	r1, r6
 800ce74:	f837 2f02 	ldrh.w	r2, [r7, #2]!
 800ce78:	a803      	add	r0, sp, #12
 800ce7a:	3501      	adds	r5, #1
 800ce7c:	f7ff fcb2 	bl	800c7e4 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800ce80:	2d08      	cmp	r5, #8
 800ce82:	f106 0614 	add.w	r6, r6, #20
 800ce86:	d1ed      	bne.n	800ce64 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x204>
 800ce88:	6863      	ldr	r3, [r4, #4]
 800ce8a:	7ce2      	ldrb	r2, [r4, #19]
 800ce8c:	f3c3 1380 	ubfx	r3, r3, #6, #1
 800ce90:	492c      	ldr	r1, [pc, #176]	; (800cf44 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2e4>)
 800ce92:	a803      	add	r0, sp, #12
 800ce94:	f7ff fc7e 	bl	800c794 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800ce98:	492b      	ldr	r1, [pc, #172]	; (800cf48 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2e8>)
 800ce9a:	a803      	add	r0, sp, #12
 800ce9c:	f004 fd94 	bl	80119c8 <PropertiesBuilder::AddComment(char const*)>
 800cea0:	6863      	ldr	r3, [r4, #4]
 800cea2:	7d22      	ldrb	r2, [r4, #20]
 800cea4:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 800cea8:	4928      	ldr	r1, [pc, #160]	; (800cf4c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2ec>)
 800ceaa:	a803      	add	r0, sp, #12
 800ceac:	f7ff fc72 	bl	800c794 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800ceb0:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800ceb4:	b17b      	cbz	r3, 800ced6 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x276>
 800ceb6:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800ceba:	9b03      	ldr	r3, [sp, #12]
 800cebc:	4413      	add	r3, r2
 800cebe:	227d      	movs	r2, #125	; 0x7d
 800cec0:	f803 2c01 	strb.w	r2, [r3, #-1]
 800cec4:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800cec8:	9903      	ldr	r1, [sp, #12]
 800ceca:	54ca      	strb	r2, [r1, r3]
 800cecc:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800ced0:	3301      	adds	r3, #1
 800ced2:	f8ad 3012 	strh.w	r3, [sp, #18]
 800ced6:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800ceda:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800cedc:	601a      	str	r2, [r3, #0]
 800cede:	b006      	add	sp, #24
 800cee0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cee4:	9300      	str	r3, [sp, #0]
 800cee6:	4a12      	ldr	r2, [pc, #72]	; (800cf30 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2d0>)
 800cee8:	4b10      	ldr	r3, [pc, #64]	; (800cf2c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2cc>)
 800ceea:	e79f      	b.n	800ce2c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1cc>
 800ceec:	08017381 	stmdaeq	r1, {r0, r7, r8, r9, ip, sp, lr}
 800cef0:	0801735e 	stmdaeq	r1, {r1, r2, r3, r4, r6, r8, r9, ip, sp, lr}
 800cef4:	08017367 	stmdaeq	r1, {r0, r1, r2, r5, r6, r8, r9, ip, sp, lr}
 800cef8:	0801732b 	stmdaeq	r1, {r0, r1, r3, r5, r8, r9, ip, sp, lr}
 800cefc:	08015061 	stmdaeq	r1, {r0, r5, r6, ip, lr}
 800cf00:	08015058 	stmdaeq	r1, {r3, r4, r6, ip, lr}
 800cf04:	080163bd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r7, r8, r9, sp, lr}
 800cf08:	080172f3 	stmdaeq	r1, {r0, r1, r4, r5, r6, r7, r9, ip, sp, lr}
 800cf0c:	080163c7 	stmdaeq	r1, {r0, r1, r2, r6, r7, r8, r9, sp, lr}
 800cf10:	0801734e 	stmdaeq	r1, {r1, r2, r3, r6, r8, r9, ip, sp, lr}
 800cf14:	080163db 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, r8, r9, sp, lr}
 800cf18:	08017371 	stmdaeq	r1, {r0, r4, r5, r6, r8, r9, ip, sp, lr}
 800cf1c:	08017379 	stmdaeq	r1, {r0, r3, r4, r5, r6, r8, r9, ip, sp, lr}
 800cf20:	080163f1 	stmdaeq	r1, {r0, r4, r5, r6, r7, r8, r9, sp, lr}
 800cf24:	0801731b 	stmdaeq	r1, {r0, r1, r3, r4, r8, r9, ip, sp, lr}
 800cf28:	080163fa 	stmdaeq	r1, {r1, r3, r4, r5, r6, r7, r8, r9, sp, lr}
 800cf2c:	080172ff 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r7, r9, ip, sp, lr}
 800cf30:	08015062 	stmdaeq	r1, {r1, r5, r6, ip, lr}
 800cf34:	41200000 			; <UNDEFINED> instruction: 0x41200000
 800cf38:	0801640c 	stmdaeq	r1, {r2, r3, sl, sp, lr}
 800cf3c:	0801733c 	stmdaeq	r1, {r2, r3, r4, r5, r8, r9, ip, sp, lr}
 800cf40:	080173fa 	stmdaeq	r1, {r1, r3, r4, r5, r6, r7, r8, r9, ip, sp, lr}
 800cf44:	080172e8 	stmdaeq	r1, {r3, r5, r6, r7, r9, ip, sp, lr}
 800cf48:	0801641a 	stmdaeq	r1, {r1, r3, r4, sl, sp, lr}
 800cf4c:	0801730e 	stmdaeq	r1, {r1, r2, r3, r8, r9, ip, sp, lr}

0800cf50 <PixelDmxParams::Save(char*, unsigned int, unsigned int&)>:
 800cf50:	b513      	push	{r0, r1, r4, lr}
 800cf52:	6804      	ldr	r4, [r0, #0]
 800cf54:	b914      	cbnz	r4, 800cf5c <PixelDmxParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800cf56:	601c      	str	r4, [r3, #0]
 800cf58:	b002      	add	sp, #8
 800cf5a:	bd10      	pop	{r4, pc}
 800cf5c:	9300      	str	r3, [sp, #0]
 800cf5e:	4613      	mov	r3, r2
 800cf60:	460a      	mov	r2, r1
 800cf62:	2100      	movs	r1, #0
 800cf64:	f7ff fe7c 	bl	800cc60 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)>
 800cf68:	e7f6      	b.n	800cf58 <PixelDmxParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800cf6a <PixelDmxParams::Set(PixelDmxConfiguration*)>:
 800cf6a:	6843      	ldr	r3, [r0, #4]
 800cf6c:	07da      	lsls	r2, r3, #31
 800cf6e:	bf44      	itt	mi
 800cf70:	7a02      	ldrbmi	r2, [r0, #8]
 800cf72:	600a      	strmi	r2, [r1, #0]
 800cf74:	079a      	lsls	r2, r3, #30
 800cf76:	d505      	bpl.n	800cf84 <PixelDmxParams::Set(PixelDmxConfiguration*)+0x1a>
 800cf78:	f8b0 2009 	ldrh.w	r2, [r0, #9]
 800cf7c:	2a00      	cmp	r2, #0
 800cf7e:	bf08      	it	eq
 800cf80:	22aa      	moveq	r2, #170	; 0xaa
 800cf82:	604a      	str	r2, [r1, #4]
 800cf84:	059a      	lsls	r2, r3, #22
 800cf86:	bf44      	itt	mi
 800cf88:	7dc2      	ldrbmi	r2, [r0, #23]
 800cf8a:	608a      	strmi	r2, [r1, #8]
 800cf8c:	055a      	lsls	r2, r3, #21
 800cf8e:	bf44      	itt	mi
 800cf90:	7e02      	ldrbmi	r2, [r0, #24]
 800cf92:	740a      	strbmi	r2, [r1, #16]
 800cf94:	051a      	lsls	r2, r3, #20
 800cf96:	bf44      	itt	mi
 800cf98:	7e42      	ldrbmi	r2, [r0, #25]
 800cf9a:	744a      	strbmi	r2, [r1, #17]
 800cf9c:	06da      	lsls	r2, r3, #27
 800cf9e:	bf44      	itt	mi
 800cfa0:	f8d0 200e 	ldrmi.w	r2, [r0, #14]
 800cfa4:	60ca      	strmi	r2, [r1, #12]
 800cfa6:	069a      	lsls	r2, r3, #26
 800cfa8:	bf44      	itt	mi
 800cfaa:	7c82      	ldrbmi	r2, [r0, #18]
 800cfac:	748a      	strbmi	r2, [r1, #18]
 800cfae:	061a      	lsls	r2, r3, #24
 800cfb0:	d504      	bpl.n	800cfbc <PixelDmxParams::Set(PixelDmxConfiguration*)+0x52>
 800cfb2:	2201      	movs	r2, #1
 800cfb4:	750a      	strb	r2, [r1, #20]
 800cfb6:	7b42      	ldrb	r2, [r0, #13]
 800cfb8:	b102      	cbz	r2, 800cfbc <PixelDmxParams::Set(PixelDmxConfiguration*)+0x52>
 800cfba:	74ca      	strb	r2, [r1, #19]
 800cfbc:	075a      	lsls	r2, r3, #29
 800cfbe:	d50f      	bpl.n	800cfe0 <PixelDmxParams::Set(PixelDmxConfiguration*)+0x76>
 800cfc0:	7ac2      	ldrb	r2, [r0, #11]
 800cfc2:	b510      	push	{r4, lr}
 800cfc4:	7b04      	ldrb	r4, [r0, #12]
 800cfc6:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
 800cfca:	858a      	strh	r2, [r1, #44]	; 0x2c
 800cfcc:	05da      	lsls	r2, r3, #23
 800cfce:	bf44      	itt	mi
 800cfd0:	f8b0 2015 	ldrhmi.w	r2, [r0, #21]
 800cfd4:	620a      	strmi	r2, [r1, #32]
 800cfd6:	065c      	lsls	r4, r3, #25
 800cfd8:	bf44      	itt	mi
 800cfda:	7cc3      	ldrbmi	r3, [r0, #19]
 800cfdc:	61cb      	strmi	r3, [r1, #28]
 800cfde:	bd10      	pop	{r4, pc}
 800cfe0:	05da      	lsls	r2, r3, #23
 800cfe2:	bf44      	itt	mi
 800cfe4:	f8b0 2015 	ldrhmi.w	r2, [r0, #21]
 800cfe8:	620a      	strmi	r2, [r1, #32]
 800cfea:	065b      	lsls	r3, r3, #25
 800cfec:	bf44      	itt	mi
 800cfee:	7cc3      	ldrbmi	r3, [r0, #19]
 800cff0:	61cb      	strmi	r3, [r1, #28]
 800cff2:	4770      	bx	lr

0800cff4 <PixelDmxParams::Dump()>:
 800cff4:	4770      	bx	lr

0800cff6 <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)>:
 800cff6:	23c0      	movs	r3, #192	; 0xc0
 800cff8:	2803      	cmp	r0, #3
 800cffa:	700b      	strb	r3, [r1, #0]
 800cffc:	d006      	beq.n	800d00c <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)+0x16>
 800cffe:	3808      	subs	r0, #8
 800d000:	2803      	cmp	r0, #3
 800d002:	bf34      	ite	cc
 800d004:	23fc      	movcc	r3, #252	; 0xfc
 800d006:	23f0      	movcs	r3, #240	; 0xf0
 800d008:	7013      	strb	r3, [r2, #0]
 800d00a:	4770      	bx	lr
 800d00c:	23f8      	movs	r3, #248	; 0xf8
 800d00e:	e7fb      	b.n	800d008 <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)+0x12>

0800d010 <PixelConfiguration::Validate(unsigned int&)>:
 800d010:	b513      	push	{r0, r1, r4, lr}
 800d012:	4604      	mov	r4, r0
 800d014:	6800      	ldr	r0, [r0, #0]
 800d016:	6863      	ldr	r3, [r4, #4]
 800d018:	2807      	cmp	r0, #7
 800d01a:	68a2      	ldr	r2, [r4, #8]
 800d01c:	d128      	bne.n	800d070 <PixelConfiguration::Validate(unsigned int&)+0x60>
 800d01e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800d022:	bf28      	it	cs
 800d024:	f44f 7300 	movcs.w	r3, #512	; 0x200
 800d028:	6063      	str	r3, [r4, #4]
 800d02a:	2304      	movs	r3, #4
 800d02c:	600b      	str	r3, [r1, #0]
 800d02e:	2301      	movs	r3, #1
 800d030:	2a06      	cmp	r2, #6
 800d032:	7563      	strb	r3, [r4, #21]
 800d034:	d102      	bne.n	800d03c <PixelConfiguration::Validate(unsigned int&)+0x2c>
 800d036:	f000 f949 	bl	800d2cc <PixelType::GetMap(pixel::Type)>
 800d03a:	60a0      	str	r0, [r4, #8]
 800d03c:	7c63      	ldrb	r3, [r4, #17]
 800d03e:	7c22      	ldrb	r2, [r4, #16]
 800d040:	6820      	ldr	r0, [r4, #0]
 800d042:	429a      	cmp	r2, r3
 800d044:	bf28      	it	cs
 800d046:	2300      	movcs	r3, #0
 800d048:	f10d 0207 	add.w	r2, sp, #7
 800d04c:	bf28      	it	cs
 800d04e:	8223      	strhcs	r3, [r4, #16]
 800d050:	f10d 0106 	add.w	r1, sp, #6
 800d054:	f7ff ffcf 	bl	800cff6 <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)>
 800d058:	7c23      	ldrb	r3, [r4, #16]
 800d05a:	b913      	cbnz	r3, 800d062 <PixelConfiguration::Validate(unsigned int&)+0x52>
 800d05c:	f89d 3006 	ldrb.w	r3, [sp, #6]
 800d060:	7423      	strb	r3, [r4, #16]
 800d062:	7c63      	ldrb	r3, [r4, #17]
 800d064:	b913      	cbnz	r3, 800d06c <PixelConfiguration::Validate(unsigned int&)+0x5c>
 800d066:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800d06a:	7463      	strb	r3, [r4, #17]
 800d06c:	4b29      	ldr	r3, [pc, #164]	; (800d114 <PixelConfiguration::Validate(unsigned int&)+0x104>)
 800d06e:	e01e      	b.n	800d0ae <PixelConfiguration::Validate(unsigned int&)+0x9e>
 800d070:	f5b3 7f2a 	cmp.w	r3, #680	; 0x2a8
 800d074:	bf28      	it	cs
 800d076:	f44f 732a 	movcs.w	r3, #680	; 0x2a8
 800d07a:	6063      	str	r3, [r4, #4]
 800d07c:	2303      	movs	r3, #3
 800d07e:	600b      	str	r3, [r1, #0]
 800d080:	f1a0 030b 	sub.w	r3, r0, #11
 800d084:	2b01      	cmp	r3, #1
 800d086:	d806      	bhi.n	800d096 <PixelConfiguration::Validate(unsigned int&)+0x86>
 800d088:	7ca3      	ldrb	r3, [r4, #18]
 800d08a:	2b1f      	cmp	r3, #31
 800d08c:	d83d      	bhi.n	800d10a <PixelConfiguration::Validate(unsigned int&)+0xfa>
 800d08e:	f043 03e0 	orr.w	r3, r3, #224	; 0xe0
 800d092:	74a3      	strb	r3, [r4, #18]
 800d094:	e001      	b.n	800d09a <PixelConfiguration::Validate(unsigned int&)+0x8a>
 800d096:	2800      	cmp	r0, #0
 800d098:	d139      	bne.n	800d10e <PixelConfiguration::Validate(unsigned int&)+0xfe>
 800d09a:	2300      	movs	r3, #0
 800d09c:	2a06      	cmp	r2, #6
 800d09e:	bf08      	it	eq
 800d0a0:	60a3      	streq	r3, [r4, #8]
 800d0a2:	280d      	cmp	r0, #13
 800d0a4:	7563      	strb	r3, [r4, #21]
 800d0a6:	68e3      	ldr	r3, [r4, #12]
 800d0a8:	d119      	bne.n	800d0de <PixelConfiguration::Validate(unsigned int&)+0xce>
 800d0aa:	b913      	cbnz	r3, 800d0b2 <PixelConfiguration::Validate(unsigned int&)+0xa2>
 800d0ac:	4b1a      	ldr	r3, [pc, #104]	; (800d118 <PixelConfiguration::Validate(unsigned int&)+0x108>)
 800d0ae:	60e3      	str	r3, [r4, #12]
 800d0b0:	e003      	b.n	800d0ba <PixelConfiguration::Validate(unsigned int&)+0xaa>
 800d0b2:	4a1a      	ldr	r2, [pc, #104]	; (800d11c <PixelConfiguration::Validate(unsigned int&)+0x10c>)
 800d0b4:	4293      	cmp	r3, r2
 800d0b6:	d900      	bls.n	800d0ba <PixelConfiguration::Validate(unsigned int&)+0xaa>
 800d0b8:	60e2      	str	r2, [r4, #12]
 800d0ba:	7d23      	ldrb	r3, [r4, #20]
 800d0bc:	b31b      	cbz	r3, 800d106 <PixelConfiguration::Validate(unsigned int&)+0xf6>
 800d0be:	7ce3      	ldrb	r3, [r4, #19]
 800d0c0:	b9ab      	cbnz	r3, 800d0ee <PixelConfiguration::Validate(unsigned int&)+0xde>
 800d0c2:	6822      	ldr	r2, [r4, #0]
 800d0c4:	b17a      	cbz	r2, 800d0e6 <PixelConfiguration::Validate(unsigned int&)+0xd6>
 800d0c6:	f1a2 030b 	sub.w	r3, r2, #11
 800d0ca:	2b01      	cmp	r3, #1
 800d0cc:	d90d      	bls.n	800d0ea <PixelConfiguration::Validate(unsigned int&)+0xda>
 800d0ce:	4b14      	ldr	r3, [pc, #80]	; (800d120 <PixelConfiguration::Validate(unsigned int&)+0x110>)
 800d0d0:	4914      	ldr	r1, [pc, #80]	; (800d124 <PixelConfiguration::Validate(unsigned int&)+0x114>)
 800d0d2:	2a0d      	cmp	r2, #13
 800d0d4:	bf08      	it	eq
 800d0d6:	460b      	moveq	r3, r1
 800d0d8:	61a3      	str	r3, [r4, #24]
 800d0da:	b002      	add	sp, #8
 800d0dc:	bd10      	pop	{r4, pc}
 800d0de:	2b00      	cmp	r3, #0
 800d0e0:	d0e4      	beq.n	800d0ac <PixelConfiguration::Validate(unsigned int&)+0x9c>
 800d0e2:	4a11      	ldr	r2, [pc, #68]	; (800d128 <PixelConfiguration::Validate(unsigned int&)+0x118>)
 800d0e4:	e7e6      	b.n	800d0b4 <PixelConfiguration::Validate(unsigned int&)+0xa4>
 800d0e6:	4b11      	ldr	r3, [pc, #68]	; (800d12c <PixelConfiguration::Validate(unsigned int&)+0x11c>)
 800d0e8:	e7f6      	b.n	800d0d8 <PixelConfiguration::Validate(unsigned int&)+0xc8>
 800d0ea:	4b11      	ldr	r3, [pc, #68]	; (800d130 <PixelConfiguration::Validate(unsigned int&)+0x120>)
 800d0ec:	e7f4      	b.n	800d0d8 <PixelConfiguration::Validate(unsigned int&)+0xc8>
 800d0ee:	f1a3 0214 	sub.w	r2, r3, #20
 800d0f2:	2a05      	cmp	r2, #5
 800d0f4:	d807      	bhi.n	800d106 <PixelConfiguration::Validate(unsigned int&)+0xf6>
 800d0f6:	3b15      	subs	r3, #21
 800d0f8:	2b04      	cmp	r3, #4
 800d0fa:	bf96      	itet	ls
 800d0fc:	4a0d      	ldrls	r2, [pc, #52]	; (800d134 <PixelConfiguration::Validate(unsigned int&)+0x124>)
 800d0fe:	4b0e      	ldrhi	r3, [pc, #56]	; (800d138 <PixelConfiguration::Validate(unsigned int&)+0x128>)
 800d100:	f852 3023 	ldrls.w	r3, [r2, r3, lsl #2]
 800d104:	e7e8      	b.n	800d0d8 <PixelConfiguration::Validate(unsigned int&)+0xc8>
 800d106:	4b07      	ldr	r3, [pc, #28]	; (800d124 <PixelConfiguration::Validate(unsigned int&)+0x114>)
 800d108:	e7e6      	b.n	800d0d8 <PixelConfiguration::Validate(unsigned int&)+0xc8>
 800d10a:	23ff      	movs	r3, #255	; 0xff
 800d10c:	e7c1      	b.n	800d092 <PixelConfiguration::Validate(unsigned int&)+0x82>
 800d10e:	280d      	cmp	r0, #13
 800d110:	d18d      	bne.n	800d02e <PixelConfiguration::Validate(unsigned int&)+0x1e>
 800d112:	e7c2      	b.n	800d09a <PixelConfiguration::Validate(unsigned int&)+0x8a>
 800d114:	0061a800 	rsbeq	sl, r1, r0, lsl #16
 800d118:	003d0900 	eorseq	r0, sp, r0, lsl #18
 800d11c:	00e4e1c0 	rsceq	lr, r4, r0, asr #3
 800d120:	080167fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r8, r9, sl, sp, lr}
 800d124:	080164fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, sl, sp, lr}
 800d128:	017d7840 	cmneq	sp, r0, asr #16
 800d12c:	08016afc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r9, fp, sp, lr}
 800d130:	08016bfc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r8, r9, fp, sp, lr}
 800d134:	080164e8 	stmdaeq	r1, {r3, r5, r6, r7, sl, sp, lr}
 800d138:	080165fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r8, sl, sp, lr}

0800d13c <PixelConfiguration::Print()>:
 800d13c:	b513      	push	{r0, r1, r4, lr}
 800d13e:	4604      	mov	r4, r0
 800d140:	4825      	ldr	r0, [pc, #148]	; (800d1d8 <PixelConfiguration::Print()+0x9c>)
 800d142:	f7fc fa15 	bl	8009570 <printf>
 800d146:	6820      	ldr	r0, [r4, #0]
 800d148:	f000 f85c 	bl	800d204 <PixelType::GetType(pixel::Type)>
 800d14c:	6822      	ldr	r2, [r4, #0]
 800d14e:	4601      	mov	r1, r0
 800d150:	4822      	ldr	r0, [pc, #136]	; (800d1dc <PixelConfiguration::Print()+0xa0>)
 800d152:	f7fc fa0d 	bl	8009570 <printf>
 800d156:	6861      	ldr	r1, [r4, #4]
 800d158:	4821      	ldr	r0, [pc, #132]	; (800d1e0 <PixelConfiguration::Print()+0xa4>)
 800d15a:	f7fc fa09 	bl	8009570 <printf>
 800d15e:	7d63      	ldrb	r3, [r4, #21]
 800d160:	2b00      	cmp	r3, #0
 800d162:	d030      	beq.n	800d1c6 <PixelConfiguration::Print()+0x8a>
 800d164:	68a0      	ldr	r0, [r4, #8]
 800d166:	f000 f8a5 	bl	800d2b4 <PixelType::GetMap(pixel::Map)>
 800d16a:	68a2      	ldr	r2, [r4, #8]
 800d16c:	4601      	mov	r1, r0
 800d16e:	481d      	ldr	r0, [pc, #116]	; (800d1e4 <PixelConfiguration::Print()+0xa8>)
 800d170:	f7fc f9fe 	bl	8009570 <printf>
 800d174:	7c20      	ldrb	r0, [r4, #16]
 800d176:	f000 f8b3 	bl	800d2e0 <PixelType::ConvertTxH(unsigned char)>
 800d17a:	f7fb f857 	bl	800822c <__aeabi_f2d>
 800d17e:	460b      	mov	r3, r1
 800d180:	7c21      	ldrb	r1, [r4, #16]
 800d182:	4602      	mov	r2, r0
 800d184:	9100      	str	r1, [sp, #0]
 800d186:	4818      	ldr	r0, [pc, #96]	; (800d1e8 <PixelConfiguration::Print()+0xac>)
 800d188:	f7fc f9f2 	bl	8009570 <printf>
 800d18c:	7c60      	ldrb	r0, [r4, #17]
 800d18e:	f000 f8a7 	bl	800d2e0 <PixelType::ConvertTxH(unsigned char)>
 800d192:	f7fb f84b 	bl	800822c <__aeabi_f2d>
 800d196:	460b      	mov	r3, r1
 800d198:	7c61      	ldrb	r1, [r4, #17]
 800d19a:	4602      	mov	r2, r0
 800d19c:	9100      	str	r1, [sp, #0]
 800d19e:	4813      	ldr	r0, [pc, #76]	; (800d1ec <PixelConfiguration::Print()+0xb0>)
 800d1a0:	f7fc f9e6 	bl	8009570 <printf>
 800d1a4:	7d21      	ldrb	r1, [r4, #20]
 800d1a6:	4a12      	ldr	r2, [pc, #72]	; (800d1f0 <PixelConfiguration::Print()+0xb4>)
 800d1a8:	4b12      	ldr	r3, [pc, #72]	; (800d1f4 <PixelConfiguration::Print()+0xb8>)
 800d1aa:	4813      	ldr	r0, [pc, #76]	; (800d1f8 <PixelConfiguration::Print()+0xbc>)
 800d1ac:	2900      	cmp	r1, #0
 800d1ae:	bf14      	ite	ne
 800d1b0:	4611      	movne	r1, r2
 800d1b2:	4619      	moveq	r1, r3
 800d1b4:	f7fc f9dc 	bl	8009570 <printf>
 800d1b8:	68e1      	ldr	r1, [r4, #12]
 800d1ba:	4810      	ldr	r0, [pc, #64]	; (800d1fc <PixelConfiguration::Print()+0xc0>)
 800d1bc:	b002      	add	sp, #8
 800d1be:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d1c2:	f7fc b9d5 	b.w	8009570 <printf>
 800d1c6:	6823      	ldr	r3, [r4, #0]
 800d1c8:	3b0b      	subs	r3, #11
 800d1ca:	2b01      	cmp	r3, #1
 800d1cc:	d8ea      	bhi.n	800d1a4 <PixelConfiguration::Print()+0x68>
 800d1ce:	7ca1      	ldrb	r1, [r4, #18]
 800d1d0:	480b      	ldr	r0, [pc, #44]	; (800d200 <PixelConfiguration::Print()+0xc4>)
 800d1d2:	f7fc f9cd 	bl	8009570 <printf>
 800d1d6:	e7e5      	b.n	800d1a4 <PixelConfiguration::Print()+0x68>
 800d1d8:	0801642e 	stmdaeq	r1, {r1, r2, r3, r5, sl, sp, lr}
 800d1dc:	08016443 	stmdaeq	r1, {r0, r1, r6, sl, sp, lr}
 800d1e0:	08016457 	stmdaeq	r1, {r0, r1, r2, r4, r6, sl, sp, lr}
 800d1e4:	08016466 	stmdaeq	r1, {r1, r2, r5, r6, sl, sp, lr}
 800d1e8:	0801647a 	stmdaeq	r1, {r1, r3, r4, r5, r6, sl, sp, lr}
 800d1ec:	08016492 	stmdaeq	r1, {r1, r4, r7, sl, sp, lr}
 800d1f0:	08016427 	stmdaeq	r1, {r0, r1, r2, r5, sl, sp, lr}
 800d1f4:	0801642b 	stmdaeq	r1, {r0, r1, r3, r5, sl, sp, lr}
 800d1f8:	080164c1 	stmdaeq	r1, {r0, r6, r7, sl, sp, lr}
 800d1fc:	080164d7 	stmdaeq	r1, {r0, r1, r2, r4, r6, r7, sl, sp, lr}
 800d200:	080164aa 	stmdaeq	r1, {r1, r3, r5, r7, sl, sp, lr}

0800d204 <PixelType::GetType(pixel::Type)>:
 800d204:	280d      	cmp	r0, #13
 800d206:	bfda      	itte	le
 800d208:	4b02      	ldrle	r3, [pc, #8]	; (800d214 <PixelType::GetType(pixel::Type)+0x10>)
 800d20a:	eb03 00c0 	addle.w	r0, r3, r0, lsl #3
 800d20e:	4802      	ldrgt	r0, [pc, #8]	; (800d218 <PixelType::GetType(pixel::Type)+0x14>)
 800d210:	4770      	bx	lr
 800d212:	bf00      	nop
 800d214:	08016d30 	stmdaeq	r1, {r4, r5, r8, sl, fp, sp, lr}
 800d218:	08016cfc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, sl, fp, sp, lr}

0800d21c <PixelType::GetType(char const*)>:
 800d21c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d21e:	4604      	mov	r4, r0
 800d220:	2000      	movs	r0, #0
 800d222:	490f      	ldr	r1, [pc, #60]	; (800d260 <PixelType::GetType(char const*)+0x44>)
 800d224:	1e67      	subs	r7, r4, #1
 800d226:	1e4e      	subs	r6, r1, #1
 800d228:	f817 2f01 	ldrb.w	r2, [r7, #1]!
 800d22c:	4615      	mov	r5, r2
 800d22e:	f1a2 0341 	sub.w	r3, r2, #65	; 0x41
 800d232:	2b19      	cmp	r3, #25
 800d234:	f816 3f01 	ldrb.w	r3, [r6, #1]!
 800d238:	bf98      	it	ls
 800d23a:	f102 0520 	addls.w	r5, r2, #32
 800d23e:	f1a3 0c41 	sub.w	ip, r3, #65	; 0x41
 800d242:	f1bc 0f19 	cmp.w	ip, #25
 800d246:	bf98      	it	ls
 800d248:	3320      	addls	r3, #32
 800d24a:	42ab      	cmp	r3, r5
 800d24c:	d005      	beq.n	800d25a <PixelType::GetType(char const*)+0x3e>
 800d24e:	3001      	adds	r0, #1
 800d250:	280e      	cmp	r0, #14
 800d252:	f101 0108 	add.w	r1, r1, #8
 800d256:	d1e5      	bne.n	800d224 <PixelType::GetType(char const*)+0x8>
 800d258:	e001      	b.n	800d25e <PixelType::GetType(char const*)+0x42>
 800d25a:	2a00      	cmp	r2, #0
 800d25c:	d1e4      	bne.n	800d228 <PixelType::GetType(char const*)+0xc>
 800d25e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d260:	08016d30 	stmdaeq	r1, {r4, r5, r8, sl, fp, sp, lr}

0800d264 <PixelType::GetMap(char const*)>:
 800d264:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d266:	4605      	mov	r5, r0
 800d268:	2000      	movs	r0, #0
 800d26a:	4b11      	ldr	r3, [pc, #68]	; (800d2b0 <PixelType::GetMap(char const*)+0x4c>)
 800d26c:	1e5c      	subs	r4, r3, #1
 800d26e:	1e6e      	subs	r6, r5, #1
 800d270:	f103 0c02 	add.w	ip, r3, #2
 800d274:	f814 2f01 	ldrb.w	r2, [r4, #1]!
 800d278:	4617      	mov	r7, r2
 800d27a:	f1a2 0141 	sub.w	r1, r2, #65	; 0x41
 800d27e:	2919      	cmp	r1, #25
 800d280:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 800d284:	bf98      	it	ls
 800d286:	f102 0720 	addls.w	r7, r2, #32
 800d28a:	f1a1 0e41 	sub.w	lr, r1, #65	; 0x41
 800d28e:	f1be 0f19 	cmp.w	lr, #25
 800d292:	bf98      	it	ls
 800d294:	3120      	addls	r1, #32
 800d296:	42b9      	cmp	r1, r7
 800d298:	d005      	beq.n	800d2a6 <PixelType::GetMap(char const*)+0x42>
 800d29a:	3001      	adds	r0, #1
 800d29c:	2806      	cmp	r0, #6
 800d29e:	f103 0304 	add.w	r3, r3, #4
 800d2a2:	d1e3      	bne.n	800d26c <PixelType::GetMap(char const*)+0x8>
 800d2a4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d2a6:	2a00      	cmp	r2, #0
 800d2a8:	d0fc      	beq.n	800d2a4 <PixelType::GetMap(char const*)+0x40>
 800d2aa:	4564      	cmp	r4, ip
 800d2ac:	d1e2      	bne.n	800d274 <PixelType::GetMap(char const*)+0x10>
 800d2ae:	e7f9      	b.n	800d2a4 <PixelType::GetMap(char const*)+0x40>
 800d2b0:	08016d18 	stmdaeq	r1, {r3, r4, r8, sl, fp, sp, lr}

0800d2b4 <PixelType::GetMap(pixel::Map)>:
 800d2b4:	2805      	cmp	r0, #5
 800d2b6:	bfda      	itte	le
 800d2b8:	4b02      	ldrle	r3, [pc, #8]	; (800d2c4 <PixelType::GetMap(pixel::Map)+0x10>)
 800d2ba:	eb03 0080 	addle.w	r0, r3, r0, lsl #2
 800d2be:	4802      	ldrgt	r0, [pc, #8]	; (800d2c8 <PixelType::GetMap(pixel::Map)+0x14>)
 800d2c0:	4770      	bx	lr
 800d2c2:	bf00      	nop
 800d2c4:	08016d18 	stmdaeq	r1, {r3, r4, r8, sl, fp, sp, lr}
 800d2c8:	08016d04 	stmdaeq	r1, {r2, r8, sl, fp, sp, lr}

0800d2cc <PixelType::GetMap(pixel::Type)>:
 800d2cc:	3801      	subs	r0, #1
 800d2ce:	2809      	cmp	r0, #9
 800d2d0:	bf9a      	itte	ls
 800d2d2:	4b02      	ldrls	r3, [pc, #8]	; (800d2dc <PixelType::GetMap(pixel::Type)+0x10>)
 800d2d4:	5618      	ldrsbls	r0, [r3, r0]
 800d2d6:	2002      	movhi	r0, #2
 800d2d8:	4770      	bx	lr
 800d2da:	bf00      	nop
 800d2dc:	08016d0e 	stmdaeq	r1, {r1, r2, r3, r8, sl, fp, sp, lr}

0800d2e0 <PixelType::ConvertTxH(unsigned char)>:
 800d2e0:	28f0      	cmp	r0, #240	; 0xf0
 800d2e2:	d010      	beq.n	800d306 <PixelType::ConvertTxH(unsigned char)+0x26>
 800d2e4:	d807      	bhi.n	800d2f6 <PixelType::ConvertTxH(unsigned char)+0x16>
 800d2e6:	28c0      	cmp	r0, #192	; 0xc0
 800d2e8:	d00f      	beq.n	800d30a <PixelType::ConvertTxH(unsigned char)+0x2a>
 800d2ea:	28e0      	cmp	r0, #224	; 0xe0
 800d2ec:	d00f      	beq.n	800d30e <PixelType::ConvertTxH(unsigned char)+0x2e>
 800d2ee:	2880      	cmp	r0, #128	; 0x80
 800d2f0:	d113      	bne.n	800d31a <PixelType::ConvertTxH(unsigned char)+0x3a>
 800d2f2:	480b      	ldr	r0, [pc, #44]	; (800d320 <PixelType::ConvertTxH(unsigned char)+0x40>)
 800d2f4:	4770      	bx	lr
 800d2f6:	28fc      	cmp	r0, #252	; 0xfc
 800d2f8:	d00b      	beq.n	800d312 <PixelType::ConvertTxH(unsigned char)+0x32>
 800d2fa:	28fe      	cmp	r0, #254	; 0xfe
 800d2fc:	d00b      	beq.n	800d316 <PixelType::ConvertTxH(unsigned char)+0x36>
 800d2fe:	28f8      	cmp	r0, #248	; 0xf8
 800d300:	d10b      	bne.n	800d31a <PixelType::ConvertTxH(unsigned char)+0x3a>
 800d302:	4808      	ldr	r0, [pc, #32]	; (800d324 <PixelType::ConvertTxH(unsigned char)+0x44>)
 800d304:	4770      	bx	lr
 800d306:	4808      	ldr	r0, [pc, #32]	; (800d328 <PixelType::ConvertTxH(unsigned char)+0x48>)
 800d308:	4770      	bx	lr
 800d30a:	4808      	ldr	r0, [pc, #32]	; (800d32c <PixelType::ConvertTxH(unsigned char)+0x4c>)
 800d30c:	4770      	bx	lr
 800d30e:	4808      	ldr	r0, [pc, #32]	; (800d330 <PixelType::ConvertTxH(unsigned char)+0x50>)
 800d310:	4770      	bx	lr
 800d312:	4808      	ldr	r0, [pc, #32]	; (800d334 <PixelType::ConvertTxH(unsigned char)+0x54>)
 800d314:	4770      	bx	lr
 800d316:	4808      	ldr	r0, [pc, #32]	; (800d338 <PixelType::ConvertTxH(unsigned char)+0x58>)
 800d318:	4770      	bx	lr
 800d31a:	2000      	movs	r0, #0
 800d31c:	4770      	bx	lr
 800d31e:	bf00      	nop
 800d320:	3e200000 	cdpcc	0, 2, cr0, cr0, cr0, {0}
 800d324:	3f480000 	svccc	0x00480000
 800d328:	3f200000 	svccc	0x00200000
 800d32c:	3ea00000 	cdpcc	0, 10, cr0, cr0, cr0, {0}
 800d330:	3ef00000 	cdpcc	0, 15, cr0, cr0, cr0, {0}
 800d334:	3f700000 	svccc	0x00700000
 800d338:	3f8c0000 	svccc	0x008c0000

0800d33c <PixelType::ConvertTxH(float)>:
 800d33c:	b510      	push	{r4, lr}
 800d33e:	491d      	ldr	r1, [pc, #116]	; (800d3b4 <PixelType::ConvertTxH(float)+0x78>)
 800d340:	4604      	mov	r4, r0
 800d342:	f7fa fda7 	bl	8007e94 <__aeabi_fcmplt>
 800d346:	bb30      	cbnz	r0, 800d396 <PixelType::ConvertTxH(float)+0x5a>
 800d348:	4620      	mov	r0, r4
 800d34a:	491b      	ldr	r1, [pc, #108]	; (800d3b8 <PixelType::ConvertTxH(float)+0x7c>)
 800d34c:	f7fa fda2 	bl	8007e94 <__aeabi_fcmplt>
 800d350:	bb18      	cbnz	r0, 800d39a <PixelType::ConvertTxH(float)+0x5e>
 800d352:	4620      	mov	r0, r4
 800d354:	4919      	ldr	r1, [pc, #100]	; (800d3bc <PixelType::ConvertTxH(float)+0x80>)
 800d356:	f7fa fd9d 	bl	8007e94 <__aeabi_fcmplt>
 800d35a:	bb00      	cbnz	r0, 800d39e <PixelType::ConvertTxH(float)+0x62>
 800d35c:	4620      	mov	r0, r4
 800d35e:	4918      	ldr	r1, [pc, #96]	; (800d3c0 <PixelType::ConvertTxH(float)+0x84>)
 800d360:	f7fa fd98 	bl	8007e94 <__aeabi_fcmplt>
 800d364:	b9e8      	cbnz	r0, 800d3a2 <PixelType::ConvertTxH(float)+0x66>
 800d366:	4620      	mov	r0, r4
 800d368:	4916      	ldr	r1, [pc, #88]	; (800d3c4 <PixelType::ConvertTxH(float)+0x88>)
 800d36a:	f7fa fd93 	bl	8007e94 <__aeabi_fcmplt>
 800d36e:	b9d0      	cbnz	r0, 800d3a6 <PixelType::ConvertTxH(float)+0x6a>
 800d370:	4620      	mov	r0, r4
 800d372:	4915      	ldr	r1, [pc, #84]	; (800d3c8 <PixelType::ConvertTxH(float)+0x8c>)
 800d374:	f7fa fd8e 	bl	8007e94 <__aeabi_fcmplt>
 800d378:	b9b8      	cbnz	r0, 800d3aa <PixelType::ConvertTxH(float)+0x6e>
 800d37a:	4620      	mov	r0, r4
 800d37c:	4913      	ldr	r1, [pc, #76]	; (800d3cc <PixelType::ConvertTxH(float)+0x90>)
 800d37e:	f7fa fd89 	bl	8007e94 <__aeabi_fcmplt>
 800d382:	b9a0      	cbnz	r0, 800d3ae <PixelType::ConvertTxH(float)+0x72>
 800d384:	4620      	mov	r0, r4
 800d386:	4912      	ldr	r1, [pc, #72]	; (800d3d0 <PixelType::ConvertTxH(float)+0x94>)
 800d388:	f7fa fd84 	bl	8007e94 <__aeabi_fcmplt>
 800d38c:	2800      	cmp	r0, #0
 800d38e:	bf14      	ite	ne
 800d390:	20fe      	movne	r0, #254	; 0xfe
 800d392:	2000      	moveq	r0, #0
 800d394:	bd10      	pop	{r4, pc}
 800d396:	2000      	movs	r0, #0
 800d398:	e7fc      	b.n	800d394 <PixelType::ConvertTxH(float)+0x58>
 800d39a:	2080      	movs	r0, #128	; 0x80
 800d39c:	e7fa      	b.n	800d394 <PixelType::ConvertTxH(float)+0x58>
 800d39e:	20c0      	movs	r0, #192	; 0xc0
 800d3a0:	e7f8      	b.n	800d394 <PixelType::ConvertTxH(float)+0x58>
 800d3a2:	20e0      	movs	r0, #224	; 0xe0
 800d3a4:	e7f6      	b.n	800d394 <PixelType::ConvertTxH(float)+0x58>
 800d3a6:	20f0      	movs	r0, #240	; 0xf0
 800d3a8:	e7f4      	b.n	800d394 <PixelType::ConvertTxH(float)+0x58>
 800d3aa:	20f8      	movs	r0, #248	; 0xf8
 800d3ac:	e7f2      	b.n	800d394 <PixelType::ConvertTxH(float)+0x58>
 800d3ae:	20fc      	movs	r0, #252	; 0xfc
 800d3b0:	e7f0      	b.n	800d394 <PixelType::ConvertTxH(float)+0x58>
 800d3b2:	bf00      	nop
 800d3b4:	3da00000 	stccc	0, cr0, [r0]
 800d3b8:	3e700000 	cdpcc	0, 7, cr0, cr0, cr0, {0}
 800d3bc:	3ec80000 	cdpcc	0, 12, cr0, cr8, cr0, {0}
 800d3c0:	3f0c0000 	svccc	0x000c0000
 800d3c4:	3f340000 	svccc	0x00340000
 800d3c8:	3f5c0000 	svccc	0x005c0000
 800d3cc:	3f820000 	svccc	0x00820000
 800d3d0:	3f960000 	svccc	0x00960000

0800d3d4 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>:
 800d3d4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800d3d6:	f3c2 4307 	ubfx	r3, r2, #16, #8
 800d3da:	f3c2 2607 	ubfx	r6, r2, #8, #8
 800d3de:	b2d4      	uxtb	r4, r2
 800d3e0:	4a10      	ldr	r2, [pc, #64]	; (800d424 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x50>)
 800d3e2:	4605      	mov	r5, r0
 800d3e4:	6810      	ldr	r0, [r2, #0]
 800d3e6:	6802      	ldr	r2, [r0, #0]
 800d3e8:	2a07      	cmp	r2, #7
 800d3ea:	d007      	beq.n	800d3fc <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x28>
 800d3ec:	460a      	mov	r2, r1
 800d3ee:	e9cd 6400 	strd	r6, r4, [sp]
 800d3f2:	4629      	mov	r1, r5
 800d3f4:	f000 ff58 	bl	800e2a8 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 800d3f8:	b004      	add	sp, #16
 800d3fa:	bd70      	pop	{r4, r5, r6, pc}
 800d3fc:	42b3      	cmp	r3, r6
 800d3fe:	f04f 0200 	mov.w	r2, #0
 800d402:	d10a      	bne.n	800d41a <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x46>
 800d404:	42a3      	cmp	r3, r4
 800d406:	d108      	bne.n	800d41a <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x46>
 800d408:	e9cd 2301 	strd	r2, r3, [sp, #4]
 800d40c:	4613      	mov	r3, r2
 800d40e:	9200      	str	r2, [sp, #0]
 800d410:	460a      	mov	r2, r1
 800d412:	4629      	mov	r1, r5
 800d414:	f000 ffd0 	bl	800e3b8 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
 800d418:	e7ee      	b.n	800d3f8 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x24>
 800d41a:	e9cd 4201 	strd	r4, r2, [sp, #4]
 800d41e:	9600      	str	r6, [sp, #0]
 800d420:	e7f6      	b.n	800d410 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x3c>
 800d422:	bf00      	nop
 800d424:	20009960 	andcs	r9, r0, r0, ror #18

0800d428 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>:
 800d428:	b570      	push	{r4, r5, r6, lr}
 800d42a:	4605      	mov	r5, r0
 800d42c:	2400      	movs	r4, #0
 800d42e:	4e06      	ldr	r6, [pc, #24]	; (800d448 <PixelPatterns::Clear(unsigned int) [clone .isra.0]+0x20>)
 800d430:	6833      	ldr	r3, [r6, #0]
 800d432:	429c      	cmp	r4, r3
 800d434:	d300      	bcc.n	800d438 <PixelPatterns::Clear(unsigned int) [clone .isra.0]+0x10>
 800d436:	bd70      	pop	{r4, r5, r6, pc}
 800d438:	4621      	mov	r1, r4
 800d43a:	2200      	movs	r2, #0
 800d43c:	4628      	mov	r0, r5
 800d43e:	f7ff ffc9 	bl	800d3d4 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800d442:	3401      	adds	r4, #1
 800d444:	e7f4      	b.n	800d430 <PixelPatterns::Clear(unsigned int) [clone .isra.0]+0x8>
 800d446:	bf00      	nop
 800d448:	2000995c 	andcs	r9, r0, ip, asr r9

0800d44c <PixelPatterns::PixelPatterns(unsigned int)>:
 800d44c:	2908      	cmp	r1, #8
 800d44e:	bf28      	it	cs
 800d450:	2108      	movcs	r1, #8
 800d452:	4b0b      	ldr	r3, [pc, #44]	; (800d480 <PixelPatterns::PixelPatterns(unsigned int)+0x34>)
 800d454:	4a0b      	ldr	r2, [pc, #44]	; (800d484 <PixelPatterns::PixelPatterns(unsigned int)+0x38>)
 800d456:	681b      	ldr	r3, [r3, #0]
 800d458:	b510      	push	{r4, lr}
 800d45a:	6013      	str	r3, [r2, #0]
 800d45c:	4a0a      	ldr	r2, [pc, #40]	; (800d488 <PixelPatterns::PixelPatterns(unsigned int)+0x3c>)
 800d45e:	6011      	str	r1, [r2, #0]
 800d460:	685a      	ldr	r2, [r3, #4]
 800d462:	4b0a      	ldr	r3, [pc, #40]	; (800d48c <PixelPatterns::PixelPatterns(unsigned int)+0x40>)
 800d464:	2100      	movs	r1, #0
 800d466:	601a      	str	r2, [r3, #0]
 800d468:	2208      	movs	r2, #8
 800d46a:	4b09      	ldr	r3, [pc, #36]	; (800d490 <PixelPatterns::PixelPatterns(unsigned int)+0x44>)
 800d46c:	681c      	ldr	r4, [r3, #0]
 800d46e:	4b09      	ldr	r3, [pc, #36]	; (800d494 <PixelPatterns::PixelPatterns(unsigned int)+0x48>)
 800d470:	3a01      	subs	r2, #1
 800d472:	61d9      	str	r1, [r3, #28]
 800d474:	601c      	str	r4, [r3, #0]
 800d476:	6199      	str	r1, [r3, #24]
 800d478:	f103 0320 	add.w	r3, r3, #32
 800d47c:	d1f8      	bne.n	800d470 <PixelPatterns::PixelPatterns(unsigned int)+0x24>
 800d47e:	bd10      	pop	{r4, pc}
 800d480:	2000996c 	andcs	r9, r0, ip, ror #18
 800d484:	20009960 	andcs	r9, r0, r0, ror #18
 800d488:	20009954 	andcs	r9, r0, r4, asr r9
 800d48c:	2000995c 	andcs	r9, r0, ip, asr r9
 800d490:	2001a964 	andcs	sl, r1, r4, ror #18
 800d494:	20009854 	andcs	r9, r0, r4, asr r8

0800d498 <PixelPatterns::GetName(pixelpatterns::Pattern)>:
 800d498:	2805      	cmp	r0, #5
 800d49a:	bfdd      	ittte	le
 800d49c:	220e      	movle	r2, #14
 800d49e:	4b02      	ldrle	r3, [pc, #8]	; (800d4a8 <PixelPatterns::GetName(pixelpatterns::Pattern)+0x10>)
 800d4a0:	fb02 3000 	mlale	r0, r2, r0, r3
 800d4a4:	4801      	ldrgt	r0, [pc, #4]	; (800d4ac <PixelPatterns::GetName(pixelpatterns::Pattern)+0x14>)
 800d4a6:	4770      	bx	lr
 800d4a8:	08016da0 	stmdaeq	r1, {r5, r7, r8, sl, fp, sp, lr}
 800d4ac:	08016cfc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, sl, fp, sp, lr}

0800d4b0 <PixelPatterns::RainbowCycle(unsigned int, unsigned int, pixelpatterns::Direction)>:
 800d4b0:	b5e0      	push	{r5, r6, r7, lr}
 800d4b2:	4608      	mov	r0, r1
 800d4b4:	460d      	mov	r5, r1
 800d4b6:	4617      	mov	r7, r2
 800d4b8:	461e      	mov	r6, r3
 800d4ba:	f7ff ffb5 	bl	800d428 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800d4be:	2301      	movs	r3, #1
 800d4c0:	4905      	ldr	r1, [pc, #20]	; (800d4d8 <PixelPatterns::RainbowCycle(unsigned int, unsigned int, pixelpatterns::Direction)+0x28>)
 800d4c2:	22ff      	movs	r2, #255	; 0xff
 800d4c4:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 800d4c8:	61cb      	str	r3, [r1, #28]
 800d4ca:	2300      	movs	r3, #0
 800d4cc:	604f      	str	r7, [r1, #4]
 800d4ce:	e9c1 2304 	strd	r2, r3, [r1, #16]
 800d4d2:	618e      	str	r6, [r1, #24]
 800d4d4:	bde0      	pop	{r5, r6, r7, pc}
 800d4d6:	bf00      	nop
 800d4d8:	20009854 	andcs	r9, r0, r4, asr r8

0800d4dc <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>:
 800d4dc:	b5e0      	push	{r5, r6, r7, lr}
 800d4de:	4608      	mov	r0, r1
 800d4e0:	460d      	mov	r5, r1
 800d4e2:	461e      	mov	r6, r3
 800d4e4:	4617      	mov	r7, r2
 800d4e6:	f7ff ff9f 	bl	800d428 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800d4ea:	2302      	movs	r3, #2
 800d4ec:	4907      	ldr	r1, [pc, #28]	; (800d50c <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x30>)
 800d4ee:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 800d4f2:	61cb      	str	r3, [r1, #28]
 800d4f4:	9b04      	ldr	r3, [sp, #16]
 800d4f6:	e9c1 7602 	strd	r7, r6, [r1, #8]
 800d4fa:	604b      	str	r3, [r1, #4]
 800d4fc:	4b04      	ldr	r3, [pc, #16]	; (800d510 <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x34>)
 800d4fe:	681b      	ldr	r3, [r3, #0]
 800d500:	610b      	str	r3, [r1, #16]
 800d502:	2300      	movs	r3, #0
 800d504:	614b      	str	r3, [r1, #20]
 800d506:	9b05      	ldr	r3, [sp, #20]
 800d508:	618b      	str	r3, [r1, #24]
 800d50a:	bde0      	pop	{r5, r6, r7, pc}
 800d50c:	20009854 	andcs	r9, r0, r4, asr r8
 800d510:	2000995c 	andcs	r9, r0, ip, asr r9

0800d514 <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>:
 800d514:	b5e0      	push	{r5, r6, r7, lr}
 800d516:	4608      	mov	r0, r1
 800d518:	460d      	mov	r5, r1
 800d51a:	461f      	mov	r7, r3
 800d51c:	4616      	mov	r6, r2
 800d51e:	f7ff ff83 	bl	800d428 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800d522:	2303      	movs	r3, #3
 800d524:	4906      	ldr	r1, [pc, #24]	; (800d540 <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x2c>)
 800d526:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 800d52a:	61cb      	str	r3, [r1, #28]
 800d52c:	4b05      	ldr	r3, [pc, #20]	; (800d544 <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x30>)
 800d52e:	604f      	str	r7, [r1, #4]
 800d530:	681b      	ldr	r3, [r3, #0]
 800d532:	608e      	str	r6, [r1, #8]
 800d534:	610b      	str	r3, [r1, #16]
 800d536:	2300      	movs	r3, #0
 800d538:	614b      	str	r3, [r1, #20]
 800d53a:	9b04      	ldr	r3, [sp, #16]
 800d53c:	618b      	str	r3, [r1, #24]
 800d53e:	bde0      	pop	{r5, r6, r7, pc}
 800d540:	20009854 	andcs	r9, r0, r4, asr r8
 800d544:	2000995c 	andcs	r9, r0, ip, asr r9

0800d548 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)>:
 800d548:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d54a:	4608      	mov	r0, r1
 800d54c:	460d      	mov	r5, r1
 800d54e:	461f      	mov	r7, r3
 800d550:	4616      	mov	r6, r2
 800d552:	f7ff ff69 	bl	800d428 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800d556:	2304      	movs	r3, #4
 800d558:	4c12      	ldr	r4, [pc, #72]	; (800d5a4 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x5c>)
 800d55a:	4913      	ldr	r1, [pc, #76]	; (800d5a8 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x60>)
 800d55c:	6820      	ldr	r0, [r4, #0]
 800d55e:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 800d562:	61cb      	str	r3, [r1, #28]
 800d564:	1e43      	subs	r3, r0, #1
 800d566:	005b      	lsls	r3, r3, #1
 800d568:	b29b      	uxth	r3, r3
 800d56a:	610b      	str	r3, [r1, #16]
 800d56c:	2300      	movs	r3, #0
 800d56e:	4d0f      	ldr	r5, [pc, #60]	; (800d5ac <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x64>)
 800d570:	614b      	str	r3, [r1, #20]
 800d572:	682b      	ldr	r3, [r5, #0]
 800d574:	604f      	str	r7, [r1, #4]
 800d576:	608e      	str	r6, [r1, #8]
 800d578:	b97b      	cbnz	r3, 800d59a <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x52>
 800d57a:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 800d57e:	4298      	cmp	r0, r3
 800d580:	bf2c      	ite	cs
 800d582:	f04f 30ff 	movcs.w	r0, #4294967295	; 0xffffffff
 800d586:	0080      	lslcc	r0, r0, #2
 800d588:	f004 ffe8 	bl	801255c <operator new[](unsigned int)>
 800d58c:	2200      	movs	r2, #0
 800d58e:	6823      	ldr	r3, [r4, #0]
 800d590:	6028      	str	r0, [r5, #0]
 800d592:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 800d596:	4298      	cmp	r0, r3
 800d598:	d100      	bne.n	800d59c <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x54>
 800d59a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d59c:	f840 2b04 	str.w	r2, [r0], #4
 800d5a0:	e7f9      	b.n	800d596 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x4e>
 800d5a2:	bf00      	nop
 800d5a4:	2000995c 	andcs	r9, r0, ip, asr r9
 800d5a8:	20009854 	andcs	r9, r0, r4, asr r8
 800d5ac:	20009958 	andcs	r9, r0, r8, asr r9

0800d5b0 <PixelPatterns::Fade(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>:
 800d5b0:	b5e0      	push	{r5, r6, r7, lr}
 800d5b2:	4608      	mov	r0, r1
 800d5b4:	460d      	mov	r5, r1
 800d5b6:	461e      	mov	r6, r3
 800d5b8:	4617      	mov	r7, r2
 800d5ba:	f7ff ff35 	bl	800d428 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800d5be:	2305      	movs	r3, #5
 800d5c0:	4907      	ldr	r1, [pc, #28]	; (800d5e0 <PixelPatterns::Fade(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x30>)
 800d5c2:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 800d5c6:	61cb      	str	r3, [r1, #28]
 800d5c8:	9b05      	ldr	r3, [sp, #20]
 800d5ca:	e9c1 7602 	strd	r7, r6, [r1, #8]
 800d5ce:	604b      	str	r3, [r1, #4]
 800d5d0:	9b04      	ldr	r3, [sp, #16]
 800d5d2:	610b      	str	r3, [r1, #16]
 800d5d4:	2300      	movs	r3, #0
 800d5d6:	614b      	str	r3, [r1, #20]
 800d5d8:	9b06      	ldr	r3, [sp, #24]
 800d5da:	618b      	str	r3, [r1, #24]
 800d5dc:	bde0      	pop	{r5, r6, r7, pc}
 800d5de:	bf00      	nop
 800d5e0:	20009854 	andcs	r9, r0, r4, asr r8

0800d5e4 <PixelPatterns::Wheel(unsigned char)>:
 800d5e4:	43cb      	mvns	r3, r1
 800d5e6:	b2db      	uxtb	r3, r3
 800d5e8:	2b54      	cmp	r3, #84	; 0x54
 800d5ea:	d809      	bhi.n	800d600 <PixelPatterns::Wheel(unsigned char)+0x1c>
 800d5ec:	eba3 0383 	sub.w	r3, r3, r3, lsl #2
 800d5f0:	b2db      	uxtb	r3, r3
 800d5f2:	1e5a      	subs	r2, r3, #1
 800d5f4:	4258      	negs	r0, r3
 800d5f6:	b2d2      	uxtb	r2, r2
 800d5f8:	b2c0      	uxtb	r0, r0
 800d5fa:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 800d5fe:	4770      	bx	lr
 800d600:	2ba9      	cmp	r3, #169	; 0xa9
 800d602:	d809      	bhi.n	800d618 <PixelPatterns::Wheel(unsigned char)+0x34>
 800d604:	f1c1 01aa 	rsb	r1, r1, #170	; 0xaa
 800d608:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 800d60c:	b2c9      	uxtb	r1, r1
 800d60e:	43c8      	mvns	r0, r1
 800d610:	b2c0      	uxtb	r0, r0
 800d612:	ea40 2001 	orr.w	r0, r0, r1, lsl #8
 800d616:	4770      	bx	lr
 800d618:	f1c1 0155 	rsb	r1, r1, #85	; 0x55
 800d61c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 800d620:	b2c9      	uxtb	r1, r1
 800d622:	0208      	lsls	r0, r1, #8
 800d624:	f480 407f 	eor.w	r0, r0, #65280	; 0xff00
 800d628:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 800d62c:	4770      	bx	lr
	...

0800d630 <PixelPatterns::Increment(unsigned int)>:
 800d630:	4a0d      	ldr	r2, [pc, #52]	; (800d668 <PixelPatterns::Increment(unsigned int)+0x38>)
 800d632:	b510      	push	{r4, lr}
 800d634:	014c      	lsls	r4, r1, #5
 800d636:	eb02 1141 	add.w	r1, r2, r1, lsl #5
 800d63a:	e9d1 3005 	ldrd	r3, r0, [r1, #20]
 800d63e:	b930      	cbnz	r0, 800d64e <PixelPatterns::Increment(unsigned int)+0x1e>
 800d640:	690a      	ldr	r2, [r1, #16]
 800d642:	3301      	adds	r3, #1
 800d644:	4293      	cmp	r3, r2
 800d646:	bf18      	it	ne
 800d648:	4618      	movne	r0, r3
 800d64a:	6148      	str	r0, [r1, #20]
 800d64c:	bd10      	pop	{r4, pc}
 800d64e:	b92b      	cbnz	r3, 800d65c <PixelPatterns::Increment(unsigned int)+0x2c>
 800d650:	4422      	add	r2, r4
 800d652:	6913      	ldr	r3, [r2, #16]
 800d654:	3b01      	subs	r3, #1
 800d656:	b29b      	uxth	r3, r3
 800d658:	6153      	str	r3, [r2, #20]
 800d65a:	e7f7      	b.n	800d64c <PixelPatterns::Increment(unsigned int)+0x1c>
 800d65c:	3b01      	subs	r3, #1
 800d65e:	614b      	str	r3, [r1, #20]
 800d660:	2b00      	cmp	r3, #0
 800d662:	d1f3      	bne.n	800d64c <PixelPatterns::Increment(unsigned int)+0x1c>
 800d664:	e7f4      	b.n	800d650 <PixelPatterns::Increment(unsigned int)+0x20>
 800d666:	bf00      	nop
 800d668:	20009854 	andcs	r9, r0, r4, asr r8

0800d66c <PixelPatterns::RainbowCycleUpdate(unsigned int)>:
 800d66c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800d670:	4605      	mov	r5, r0
 800d672:	460c      	mov	r4, r1
 800d674:	2700      	movs	r7, #0
 800d676:	4b11      	ldr	r3, [pc, #68]	; (800d6bc <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x50>)
 800d678:	f8df 8044 	ldr.w	r8, [pc, #68]	; 800d6c0 <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x54>
 800d67c:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800d680:	f8d3 9014 	ldr.w	r9, [r3, #20]
 800d684:	f8d8 3000 	ldr.w	r3, [r8]
 800d688:	b2be      	uxth	r6, r7
 800d68a:	42b3      	cmp	r3, r6
 800d68c:	f107 0701 	add.w	r7, r7, #1
 800d690:	d805      	bhi.n	800d69e <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x32>
 800d692:	4621      	mov	r1, r4
 800d694:	4628      	mov	r0, r5
 800d696:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800d69a:	f7ff bfc9 	b.w	800d630 <PixelPatterns::Increment(unsigned int)>
 800d69e:	0231      	lsls	r1, r6, #8
 800d6a0:	fbb1 f1f3 	udiv	r1, r1, r3
 800d6a4:	4449      	add	r1, r9
 800d6a6:	4628      	mov	r0, r5
 800d6a8:	b2c9      	uxtb	r1, r1
 800d6aa:	f7ff ff9b 	bl	800d5e4 <PixelPatterns::Wheel(unsigned char)>
 800d6ae:	4631      	mov	r1, r6
 800d6b0:	4602      	mov	r2, r0
 800d6b2:	4620      	mov	r0, r4
 800d6b4:	f7ff fe8e 	bl	800d3d4 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800d6b8:	e7e4      	b.n	800d684 <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x18>
 800d6ba:	bf00      	nop
 800d6bc:	20009854 	andcs	r9, r0, r4, asr r8
 800d6c0:	2000995c 	andcs	r9, r0, ip, asr r9

0800d6c4 <PixelPatterns::TheaterChaseUpdate(unsigned int)>:
 800d6c4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d6c8:	4605      	mov	r5, r0
 800d6ca:	460c      	mov	r4, r1
 800d6cc:	f04f 0b00 	mov.w	fp, #0
 800d6d0:	4b11      	ldr	r3, [pc, #68]	; (800d718 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x54>)
 800d6d2:	4e12      	ldr	r6, [pc, #72]	; (800d71c <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x58>)
 800d6d4:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800d6d8:	f8d3 9014 	ldr.w	r9, [r3, #20]
 800d6dc:	f8df a040 	ldr.w	sl, [pc, #64]	; 800d720 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x5c>
 800d6e0:	e9d3 7802 	ldrd	r7, r8, [r3, #8]
 800d6e4:	6833      	ldr	r3, [r6, #0]
 800d6e6:	fa1f f18b 	uxth.w	r1, fp
 800d6ea:	428b      	cmp	r3, r1
 800d6ec:	d805      	bhi.n	800d6fa <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x36>
 800d6ee:	4621      	mov	r1, r4
 800d6f0:	4628      	mov	r0, r5
 800d6f2:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d6f6:	f7ff bf9b 	b.w	800d630 <PixelPatterns::Increment(unsigned int)>
 800d6fa:	eb09 0301 	add.w	r3, r9, r1
 800d6fe:	fb0a f303 	mul.w	r3, sl, r3
 800d702:	f1b3 3f55 	cmp.w	r3, #1431655765	; 0x55555555
 800d706:	bf94      	ite	ls
 800d708:	463a      	movls	r2, r7
 800d70a:	4642      	movhi	r2, r8
 800d70c:	4620      	mov	r0, r4
 800d70e:	f7ff fe61 	bl	800d3d4 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800d712:	f10b 0b01 	add.w	fp, fp, #1
 800d716:	e7e5      	b.n	800d6e4 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x20>
 800d718:	20009854 	andcs	r9, r0, r4, asr r8
 800d71c:	2000995c 	andcs	r9, r0, ip, asr r9
 800d720:	aaaaaaab 	bge	6ab81d4 <__stack_size+0x6ab59d4>

0800d724 <PixelPatterns::ColourWipeUpdate(unsigned int)>:
 800d724:	b538      	push	{r3, r4, r5, lr}
 800d726:	460c      	mov	r4, r1
 800d728:	4605      	mov	r5, r0
 800d72a:	4b07      	ldr	r3, [pc, #28]	; (800d748 <PixelPatterns::ColourWipeUpdate(unsigned int)+0x24>)
 800d72c:	4620      	mov	r0, r4
 800d72e:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800d732:	6959      	ldr	r1, [r3, #20]
 800d734:	689a      	ldr	r2, [r3, #8]
 800d736:	f7ff fe4d 	bl	800d3d4 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800d73a:	4621      	mov	r1, r4
 800d73c:	4628      	mov	r0, r5
 800d73e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d742:	f7ff bf75 	b.w	800d630 <PixelPatterns::Increment(unsigned int)>
 800d746:	bf00      	nop
 800d748:	20009854 	andcs	r9, r0, r4, asr r8

0800d74c <PixelPatterns::ScannerUpdate(unsigned int)>:
 800d74c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d750:	468b      	mov	fp, r1
 800d752:	f04f 0900 	mov.w	r9, #0
 800d756:	4b27      	ldr	r3, [pc, #156]	; (800d7f4 <PixelPatterns::ScannerUpdate(unsigned int)+0xa8>)
 800d758:	b085      	sub	sp, #20
 800d75a:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800d75e:	e9d3 7604 	ldrd	r7, r6, [r3, #16]
 800d762:	689d      	ldr	r5, [r3, #8]
 800d764:	f8df a090 	ldr.w	sl, [pc, #144]	; 800d7f8 <PixelPatterns::ScannerUpdate(unsigned int)+0xac>
 800d768:	00b3      	lsls	r3, r6, #2
 800d76a:	f8df 8090 	ldr.w	r8, [pc, #144]	; 800d7fc <PixelPatterns::ScannerUpdate(unsigned int)+0xb0>
 800d76e:	9002      	str	r0, [sp, #8]
 800d770:	9301      	str	r3, [sp, #4]
 800d772:	1bbf      	subs	r7, r7, r6
 800d774:	f8da 2000 	ldr.w	r2, [sl]
 800d778:	fa1f f489 	uxth.w	r4, r9
 800d77c:	42a2      	cmp	r2, r4
 800d77e:	d806      	bhi.n	800d78e <PixelPatterns::ScannerUpdate(unsigned int)+0x42>
 800d780:	4659      	mov	r1, fp
 800d782:	9802      	ldr	r0, [sp, #8]
 800d784:	b005      	add	sp, #20
 800d786:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d78a:	f7ff bf51 	b.w	800d630 <PixelPatterns::Increment(unsigned int)>
 800d78e:	42a6      	cmp	r6, r4
 800d790:	d10b      	bne.n	800d7aa <PixelPatterns::ScannerUpdate(unsigned int)+0x5e>
 800d792:	462a      	mov	r2, r5
 800d794:	4631      	mov	r1, r6
 800d796:	4658      	mov	r0, fp
 800d798:	f7ff fe1c 	bl	800d3d4 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800d79c:	f8d8 2000 	ldr.w	r2, [r8]
 800d7a0:	9b01      	ldr	r3, [sp, #4]
 800d7a2:	50d5      	str	r5, [r2, r3]
 800d7a4:	f109 0901 	add.w	r9, r9, #1
 800d7a8:	e7e4      	b.n	800d774 <PixelPatterns::ScannerUpdate(unsigned int)+0x28>
 800d7aa:	42a7      	cmp	r7, r4
 800d7ac:	d109      	bne.n	800d7c2 <PixelPatterns::ScannerUpdate(unsigned int)+0x76>
 800d7ae:	462a      	mov	r2, r5
 800d7b0:	4639      	mov	r1, r7
 800d7b2:	4658      	mov	r0, fp
 800d7b4:	f7ff fe0e 	bl	800d3d4 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800d7b8:	f8d8 2000 	ldr.w	r2, [r8]
 800d7bc:	f842 5024 	str.w	r5, [r2, r4, lsl #2]
 800d7c0:	e7f0      	b.n	800d7a4 <PixelPatterns::ScannerUpdate(unsigned int)+0x58>
 800d7c2:	f8d8 2000 	ldr.w	r2, [r8]
 800d7c6:	4658      	mov	r0, fp
 800d7c8:	f852 1024 	ldr.w	r1, [r2, r4, lsl #2]
 800d7cc:	f3c1 2246 	ubfx	r2, r1, #9, #7
 800d7d0:	f3c1 4c46 	ubfx	ip, r1, #17, #7
 800d7d4:	0212      	lsls	r2, r2, #8
 800d7d6:	ea42 420c 	orr.w	r2, r2, ip, lsl #16
 800d7da:	f3c1 0146 	ubfx	r1, r1, #1, #7
 800d7de:	430a      	orrs	r2, r1
 800d7e0:	4621      	mov	r1, r4
 800d7e2:	9203      	str	r2, [sp, #12]
 800d7e4:	f7ff fdf6 	bl	800d3d4 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800d7e8:	f8d8 1000 	ldr.w	r1, [r8]
 800d7ec:	9a03      	ldr	r2, [sp, #12]
 800d7ee:	f841 2024 	str.w	r2, [r1, r4, lsl #2]
 800d7f2:	e7d7      	b.n	800d7a4 <PixelPatterns::ScannerUpdate(unsigned int)+0x58>
 800d7f4:	20009854 	andcs	r9, r0, r4, asr r8
 800d7f8:	2000995c 	andcs	r9, r0, ip, asr r9
 800d7fc:	20009958 	andcs	r9, r0, r8, asr r9

0800d800 <PixelPatterns::FadeUpdate(unsigned int)>:
 800d800:	4a20      	ldr	r2, [pc, #128]	; (800d884 <PixelPatterns::FadeUpdate(unsigned int)+0x84>)
 800d802:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d806:	eb02 1241 	add.w	r2, r2, r1, lsl #5
 800d80a:	e9d2 c302 	ldrd	ip, r3, [r2, #8]
 800d80e:	460e      	mov	r6, r1
 800d810:	e9d2 1704 	ldrd	r1, r7, [r2, #16]
 800d814:	f3c3 2207 	ubfx	r2, r3, #8, #8
 800d818:	437a      	muls	r2, r7
 800d81a:	f3cc 2407 	ubfx	r4, ip, #8, #8
 800d81e:	4605      	mov	r5, r0
 800d820:	1bc8      	subs	r0, r1, r7
 800d822:	fb00 2204 	mla	r2, r0, r4, r2
 800d826:	f3c3 4407 	ubfx	r4, r3, #16, #8
 800d82a:	437c      	muls	r4, r7
 800d82c:	b2db      	uxtb	r3, r3
 800d82e:	437b      	muls	r3, r7
 800d830:	f3cc 4e07 	ubfx	lr, ip, #16, #8
 800d834:	fb00 440e 	mla	r4, r0, lr, r4
 800d838:	fa5f fc8c 	uxtb.w	ip, ip
 800d83c:	fb00 330c 	mla	r3, r0, ip, r3
 800d840:	fbb2 f2f1 	udiv	r2, r2, r1
 800d844:	fbb4 f4f1 	udiv	r4, r4, r1
 800d848:	fbb3 f3f1 	udiv	r3, r3, r1
 800d84c:	2700      	movs	r7, #0
 800d84e:	0212      	lsls	r2, r2, #8
 800d850:	0424      	lsls	r4, r4, #16
 800d852:	b292      	uxth	r2, r2
 800d854:	f404 047f 	and.w	r4, r4, #16711680	; 0xff0000
 800d858:	4314      	orrs	r4, r2
 800d85a:	b2db      	uxtb	r3, r3
 800d85c:	f8df 8028 	ldr.w	r8, [pc, #40]	; 800d888 <PixelPatterns::FadeUpdate(unsigned int)+0x88>
 800d860:	431c      	orrs	r4, r3
 800d862:	f8d8 3000 	ldr.w	r3, [r8]
 800d866:	429f      	cmp	r7, r3
 800d868:	d305      	bcc.n	800d876 <PixelPatterns::FadeUpdate(unsigned int)+0x76>
 800d86a:	4631      	mov	r1, r6
 800d86c:	4628      	mov	r0, r5
 800d86e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800d872:	f7ff bedd 	b.w	800d630 <PixelPatterns::Increment(unsigned int)>
 800d876:	4639      	mov	r1, r7
 800d878:	4622      	mov	r2, r4
 800d87a:	4630      	mov	r0, r6
 800d87c:	f7ff fdaa 	bl	800d3d4 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800d880:	3701      	adds	r7, #1
 800d882:	e7ee      	b.n	800d862 <PixelPatterns::FadeUpdate(unsigned int)+0x62>
 800d884:	20009854 	andcs	r9, r0, r4, asr r8
 800d888:	2000995c 	andcs	r9, r0, ip, asr r9

0800d88c <PixelPatterns::PortUpdate(unsigned int, unsigned int)>:
 800d88c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d88e:	4b12      	ldr	r3, [pc, #72]	; (800d8d8 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x4c>)
 800d890:	014e      	lsls	r6, r1, #5
 800d892:	599c      	ldr	r4, [r3, r6]
 800d894:	eb03 1541 	add.w	r5, r3, r1, lsl #5
 800d898:	686f      	ldr	r7, [r5, #4]
 800d89a:	1b14      	subs	r4, r2, r4
 800d89c:	42bc      	cmp	r4, r7
 800d89e:	d319      	bcc.n	800d8d4 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x48>
 800d8a0:	519a      	str	r2, [r3, r6]
 800d8a2:	69eb      	ldr	r3, [r5, #28]
 800d8a4:	3b01      	subs	r3, #1
 800d8a6:	2b04      	cmp	r3, #4
 800d8a8:	d814      	bhi.n	800d8d4 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x48>
 800d8aa:	e8df f003 	tbb	[pc, r3]
 800d8ae:	0d0a0703 	stceq	7, cr0, [sl, #-12]
 800d8b2:	f7ff0010 			; <UNDEFINED> instruction: 0xf7ff0010
 800d8b6:	feda 2001 	cdp2	0, 13, cr2, cr10, cr1, {0}
 800d8ba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d8bc:	f7ff ff02 	bl	800d6c4 <PixelPatterns::TheaterChaseUpdate(unsigned int)>
 800d8c0:	e7fa      	b.n	800d8b8 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 800d8c2:	f7ff ff2f 	bl	800d724 <PixelPatterns::ColourWipeUpdate(unsigned int)>
 800d8c6:	e7f7      	b.n	800d8b8 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 800d8c8:	f7ff ff40 	bl	800d74c <PixelPatterns::ScannerUpdate(unsigned int)>
 800d8cc:	e7f4      	b.n	800d8b8 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 800d8ce:	f7ff ff97 	bl	800d800 <PixelPatterns::FadeUpdate(unsigned int)>
 800d8d2:	e7f1      	b.n	800d8b8 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 800d8d4:	2000      	movs	r0, #0
 800d8d6:	e7f0      	b.n	800d8ba <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2e>
 800d8d8:	20009854 	andcs	r9, r0, r4, asr r8

0800d8dc <PixelPatterns::Run()>:
 800d8dc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800d8e0:	4f11      	ldr	r7, [pc, #68]	; (800d928 <PixelPatterns::Run()+0x4c>)
 800d8e2:	4606      	mov	r6, r0
 800d8e4:	6838      	ldr	r0, [r7, #0]
 800d8e6:	f000 fc5d 	bl	800e1a4 <WS28xxMulti::IsUpdating()>
 800d8ea:	4604      	mov	r4, r0
 800d8ec:	b9c8      	cbnz	r0, 800d922 <PixelPatterns::Run()+0x46>
 800d8ee:	4605      	mov	r5, r0
 800d8f0:	4b0e      	ldr	r3, [pc, #56]	; (800d92c <PixelPatterns::Run()+0x50>)
 800d8f2:	f8df 803c 	ldr.w	r8, [pc, #60]	; 800d930 <PixelPatterns::Run()+0x54>
 800d8f6:	f8d3 9000 	ldr.w	r9, [r3]
 800d8fa:	f8d8 3000 	ldr.w	r3, [r8]
 800d8fe:	b2e9      	uxtb	r1, r5
 800d900:	428b      	cmp	r3, r1
 800d902:	f105 0501 	add.w	r5, r5, #1
 800d906:	d805      	bhi.n	800d914 <PixelPatterns::Run()+0x38>
 800d908:	b15c      	cbz	r4, 800d922 <PixelPatterns::Run()+0x46>
 800d90a:	6838      	ldr	r0, [r7, #0]
 800d90c:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800d910:	f000 bb08 	b.w	800df24 <WS28xxMulti::Update()>
 800d914:	464a      	mov	r2, r9
 800d916:	4630      	mov	r0, r6
 800d918:	f7ff ffb8 	bl	800d88c <PixelPatterns::PortUpdate(unsigned int, unsigned int)>
 800d91c:	4320      	orrs	r0, r4
 800d91e:	b2c4      	uxtb	r4, r0
 800d920:	e7eb      	b.n	800d8fa <PixelPatterns::Run()+0x1e>
 800d922:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800d926:	bf00      	nop
 800d928:	20009960 	andcs	r9, r0, r0, ror #18
 800d92c:	2001a964 	andcs	sl, r1, r4, ror #18
 800d930:	20009954 	andcs	r9, r0, r4, asr r9

0800d934 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>:
 800d934:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d936:	f04f 0c80 	mov.w	ip, #128	; 0x80
 800d93a:	2501      	movs	r5, #1
 800d93c:	4c1d      	ldr	r4, [pc, #116]	; (800d9b4 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]+0x80>)
 800d93e:	f89d e014 	ldrb.w	lr, [sp, #20]
 800d942:	eb04 1481 	add.w	r4, r4, r1, lsl #6
 800d946:	1d81      	adds	r1, r0, #6
 800d948:	481b      	ldr	r0, [pc, #108]	; (800d9b8 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]+0x84>)
 800d94a:	b2c9      	uxtb	r1, r1
 800d94c:	4420      	add	r0, r4
 800d94e:	eb01 00c0 	add.w	r0, r1, r0, lsl #3
 800d952:	f101 6108 	add.w	r1, r1, #142606336	; 0x8800000
 800d956:	f501 7100 	add.w	r1, r1, #512	; 0x200
 800d95a:	eb01 01c4 	add.w	r1, r1, r4, lsl #3
 800d95e:	f89d 4018 	ldrb.w	r4, [sp, #24]
 800d962:	0080      	lsls	r0, r0, #2
 800d964:	0089      	lsls	r1, r1, #2
 800d966:	ea12 060c 	ands.w	r6, r2, ip
 800d96a:	bf0b      	itete	eq
 800d96c:	f5a0 67c0 	subeq.w	r7, r0, #1536	; 0x600
 800d970:	f5a0 66c0 	subne.w	r6, r0, #1536	; 0x600
 800d974:	603e      	streq	r6, [r7, #0]
 800d976:	6035      	strne	r5, [r6, #0]
 800d978:	ea13 060c 	ands.w	r6, r3, ip
 800d97c:	bf0b      	itete	eq
 800d97e:	f5a0 6780 	subeq.w	r7, r0, #1024	; 0x400
 800d982:	f5a0 6680 	subne.w	r6, r0, #1024	; 0x400
 800d986:	603e      	streq	r6, [r7, #0]
 800d988:	6035      	strne	r5, [r6, #0]
 800d98a:	ea1e 060c 	ands.w	r6, lr, ip
 800d98e:	bf15      	itete	ne
 800d990:	f5a0 7600 	subne.w	r6, r0, #512	; 0x200
 800d994:	f5a0 7700 	subeq.w	r7, r0, #512	; 0x200
 800d998:	6035      	strne	r5, [r6, #0]
 800d99a:	603e      	streq	r6, [r7, #0]
 800d99c:	ea14 060c 	ands.w	r6, r4, ip
 800d9a0:	bf14      	ite	ne
 800d9a2:	6005      	strne	r5, [r0, #0]
 800d9a4:	6006      	streq	r6, [r0, #0]
 800d9a6:	3040      	adds	r0, #64	; 0x40
 800d9a8:	4281      	cmp	r1, r0
 800d9aa:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 800d9ae:	d1da      	bne.n	800d966 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]+0x32>
 800d9b0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d9b2:	bf00      	nop
 800d9b4:	20009970 	andcs	r9, r0, r0, ror r9
 800d9b8:	e1100030 	tst	r0, r0, lsr r0

0800d9bc <TIMER3_IRQHandler>:
 800d9bc:	f3bf 8f5f 	dmb	sy
 800d9c0:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800d9c4:	f8d3 2810 	ldr.w	r2, [r3, #2064]	; 0x810
 800d9c8:	0791      	lsls	r1, r2, #30
 800d9ca:	d51e      	bpl.n	800da0a <TIMER3_IRQHandler+0x4e>
 800d9cc:	f8d3 1400 	ldr.w	r1, [r3, #1024]	; 0x400
 800d9d0:	f021 0101 	bic.w	r1, r1, #1
 800d9d4:	f8c3 1400 	str.w	r1, [r3, #1024]	; 0x400
 800d9d8:	f8d3 140c 	ldr.w	r1, [r3, #1036]	; 0x40c
 800d9dc:	f421 7100 	bic.w	r1, r1, #512	; 0x200
 800d9e0:	f8c3 140c 	str.w	r1, [r3, #1036]	; 0x40c
 800d9e4:	f8d3 140c 	ldr.w	r1, [r3, #1036]	; 0x40c
 800d9e8:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
 800d9ec:	f8c3 140c 	str.w	r1, [r3, #1036]	; 0x40c
 800d9f0:	f8d3 140c 	ldr.w	r1, [r3, #1036]	; 0x40c
 800d9f4:	f421 5180 	bic.w	r1, r1, #4096	; 0x1000
 800d9f8:	f8c3 140c 	str.w	r1, [r3, #1036]	; 0x40c
 800d9fc:	2100      	movs	r1, #0
 800d9fe:	4b07      	ldr	r3, [pc, #28]	; (800da1c <TIMER3_IRQHandler+0x60>)
 800da00:	7019      	strb	r1, [r3, #0]
 800da02:	f44f 517f 	mov.w	r1, #16320	; 0x3fc0
 800da06:	4b06      	ldr	r3, [pc, #24]	; (800da20 <TIMER3_IRQHandler+0x64>)
 800da08:	6159      	str	r1, [r3, #20]
 800da0a:	43d2      	mvns	r2, r2
 800da0c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800da10:	f8c3 2810 	str.w	r2, [r3, #2064]	; 0x810
 800da14:	f3bf 8f5f 	dmb	sy
 800da18:	4770      	bx	lr
 800da1a:	bf00      	nop
 800da1c:	20009968 	andcs	r9, r0, r8, ror #18
 800da20:	40011000 	andmi	r1, r1, r0

0800da24 <WS28xxMulti::~WS28xxMulti()>:
 800da24:	2200      	movs	r2, #0
 800da26:	4b01      	ldr	r3, [pc, #4]	; (800da2c <WS28xxMulti::~WS28xxMulti()+0x8>)
 800da28:	601a      	str	r2, [r3, #0]
 800da2a:	4770      	bx	lr
 800da2c:	2000996c 	andcs	r9, r0, ip, ror #18

0800da30 <WS28xxMulti::Setup(unsigned char, unsigned char)>:
 800da30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800da34:	4680      	mov	r8, r0
 800da36:	b08d      	sub	sp, #52	; 0x34
 800da38:	4608      	mov	r0, r1
 800da3a:	4614      	mov	r4, r2
 800da3c:	f007 f838 	bl	8014ab0 <__popcountsi2>
 800da40:	4607      	mov	r7, r0
 800da42:	4620      	mov	r0, r4
 800da44:	f007 f834 	bl	8014ab0 <__popcountsi2>
 800da48:	4d76      	ldr	r5, [pc, #472]	; (800dc24 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x1f4>)
 800da4a:	4606      	mov	r6, r0
 800da4c:	f240 7001 	movw	r0, #1793	; 0x701
 800da50:	f005 fa0a 	bl	8012e68 <rcu_periph_clock_enable>
 800da54:	4628      	mov	r0, r5
 800da56:	2400      	movs	r4, #0
 800da58:	f005 fb6a 	bl	8013130 <timer_deinit>
 800da5c:	2395      	movs	r3, #149	; 0x95
 800da5e:	f04f 0996 	mov.w	r9, #150	; 0x96
 800da62:	4628      	mov	r0, r5
 800da64:	a901      	add	r1, sp, #4
 800da66:	9303      	str	r3, [sp, #12]
 800da68:	9401      	str	r4, [sp, #4]
 800da6a:	f8ad 4008 	strh.w	r4, [sp, #8]
 800da6e:	f8ad 4010 	strh.w	r4, [sp, #16]
 800da72:	f005 fc03 	bl	801327c <timer_init>
 800da76:	4621      	mov	r1, r4
 800da78:	4628      	mov	r0, r5
 800da7a:	f005 fdc3 	bl	8013604 <timer_master_slave_mode_config>
 800da7e:	4628      	mov	r0, r5
 800da80:	2130      	movs	r1, #48	; 0x30
 800da82:	f005 fdaf 	bl	80135e4 <timer_master_output_trigger_source_select>
 800da86:	4621      	mov	r1, r4
 800da88:	4628      	mov	r0, r5
 800da8a:	2210      	movs	r2, #16
 800da8c:	f005 fd48 	bl	8013520 <timer_channel_output_mode_config>
 800da90:	4628      	mov	r0, r5
 800da92:	2210      	movs	r2, #16
 800da94:	2102      	movs	r1, #2
 800da96:	f005 fd43 	bl	8013520 <timer_channel_output_mode_config>
 800da9a:	4628      	mov	r0, r5
 800da9c:	2210      	movs	r2, #16
 800da9e:	2103      	movs	r1, #3
 800daa0:	f005 fd3e 	bl	8013520 <timer_channel_output_mode_config>
 800daa4:	4621      	mov	r1, r4
 800daa6:	4628      	mov	r0, r5
 800daa8:	2201      	movs	r2, #1
 800daaa:	f005 fd5f 	bl	801356c <timer_channel_output_pulse_value_config>
 800daae:	fb09 f207 	mul.w	r2, r9, r7
 800dab2:	4628      	mov	r0, r5
 800dab4:	2102      	movs	r1, #2
 800dab6:	f3c2 02cf 	ubfx	r2, r2, #3, #16
 800daba:	f005 fd57 	bl	801356c <timer_channel_output_pulse_value_config>
 800dabe:	fb09 f206 	mul.w	r2, r9, r6
 800dac2:	2103      	movs	r1, #3
 800dac4:	f3c2 02cf 	ubfx	r2, r2, #3, #16
 800dac8:	4628      	mov	r0, r5
 800daca:	f005 fd4f 	bl	801356c <timer_channel_output_pulse_value_config>
 800dace:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800dad2:	f240 7002 	movw	r0, #1794	; 0x702
 800dad6:	f005 f9c7 	bl	8012e68 <rcu_periph_clock_enable>
 800dada:	4628      	mov	r0, r5
 800dadc:	f005 fb28 	bl	8013130 <timer_deinit>
 800dae0:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800dae4:	4628      	mov	r0, r5
 800dae6:	a901      	add	r1, sp, #4
 800dae8:	9303      	str	r3, [sp, #12]
 800daea:	9401      	str	r4, [sp, #4]
 800daec:	f8ad 4008 	strh.w	r4, [sp, #8]
 800daf0:	f8ad 4010 	strh.w	r4, [sp, #16]
 800daf4:	f005 fbc2 	bl	801327c <timer_init>
 800daf8:	4621      	mov	r1, r4
 800dafa:	4628      	mov	r0, r5
 800dafc:	f005 fd82 	bl	8013604 <timer_master_slave_mode_config>
 800db00:	4628      	mov	r0, r5
 800db02:	2107      	movs	r1, #7
 800db04:	f005 fd76 	bl	80135f4 <timer_slave_mode_select>
 800db08:	4628      	mov	r0, r5
 800db0a:	2120      	movs	r1, #32
 800db0c:	f005 fd62 	bl	80135d4 <timer_input_trigger_source_select>
 800db10:	4621      	mov	r1, r4
 800db12:	4628      	mov	r0, r5
 800db14:	2210      	movs	r2, #16
 800db16:	f005 fd03 	bl	8013520 <timer_channel_output_mode_config>
 800db1a:	f8d8 201c 	ldr.w	r2, [r8, #28]
 800db1e:	4621      	mov	r1, r4
 800db20:	3201      	adds	r2, #1
 800db22:	4628      	mov	r0, r5
 800db24:	b292      	uxth	r2, r2
 800db26:	f005 fd21 	bl	801356c <timer_channel_output_pulse_value_config>
 800db2a:	2102      	movs	r1, #2
 800db2c:	4628      	mov	r0, r5
 800db2e:	f005 fd76 	bl	801361e <timer_interrupt_enable>
 800db32:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800db36:	2601      	movs	r6, #1
 800db38:	f44f 7780 	mov.w	r7, #256	; 0x100
 800db3c:	f44f 6980 	mov.w	r9, #1024	; 0x400
 800db40:	f44f 5800 	mov.w	r8, #8192	; 0x2000
 800db44:	4b38      	ldr	r3, [pc, #224]	; (800dc28 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x1f8>)
 800db46:	f505 35fc 	add.w	r5, r5, #129024	; 0x1f800
 800db4a:	f883 431e 	strb.w	r4, [r3, #798]	; 0x31e
 800db4e:	f44f 60a0 	mov.w	r0, #1280	; 0x500
 800db52:	601a      	str	r2, [r3, #0]
 800db54:	f005 f988 	bl	8012e68 <rcu_periph_clock_enable>
 800db58:	2105      	movs	r1, #5
 800db5a:	4628      	mov	r0, r5
 800db5c:	f004 fff8 	bl	8012b50 <dma_deinit>
 800db60:	a805      	add	r0, sp, #20
 800db62:	f005 f813 	bl	8012b8c <dma_struct_para_init>
 800db66:	f8df b0c4 	ldr.w	fp, [pc, #196]	; 800dc2c <WS28xxMulti::Setup(unsigned char, unsigned char)+0x1fc>
 800db6a:	4b31      	ldr	r3, [pc, #196]	; (800dc30 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x200>)
 800db6c:	aa05      	add	r2, sp, #20
 800db6e:	4628      	mov	r0, r5
 800db70:	2105      	movs	r1, #5
 800db72:	e9cd 3705 	strd	r3, r7, [sp, #20]
 800db76:	f8cd b01c 	str.w	fp, [sp, #28]
 800db7a:	f8cd 9020 	str.w	r9, [sp, #32]
 800db7e:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 800db82:	f8ad 402c 	strh.w	r4, [sp, #44]	; 0x2c
 800db86:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 800db8a:	f005 f809 	bl	8012ba0 <dma_init>
 800db8e:	4628      	mov	r0, r5
 800db90:	2105      	movs	r1, #5
 800db92:	f005 f836 	bl	8012c02 <dma_circulation_disable>
 800db96:	4628      	mov	r0, r5
 800db98:	2105      	movs	r1, #5
 800db9a:	f005 f83a 	bl	8012c12 <dma_memory_to_memory_disable>
 800db9e:	4631      	mov	r1, r6
 800dba0:	4628      	mov	r0, r5
 800dba2:	f004 ffd5 	bl	8012b50 <dma_deinit>
 800dba6:	a805      	add	r0, sp, #20
 800dba8:	f004 fff0 	bl	8012b8c <dma_struct_para_init>
 800dbac:	f8df a084 	ldr.w	sl, [pc, #132]	; 800dc34 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x204>
 800dbb0:	4b21      	ldr	r3, [pc, #132]	; (800dc38 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x208>)
 800dbb2:	aa05      	add	r2, sp, #20
 800dbb4:	4631      	mov	r1, r6
 800dbb6:	4628      	mov	r0, r5
 800dbb8:	e9cd 3907 	strd	r3, r9, [sp, #28]
 800dbbc:	e9cd a705 	strd	sl, r7, [sp, #20]
 800dbc0:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 800dbc4:	f8ad 702c 	strh.w	r7, [sp, #44]	; 0x2c
 800dbc8:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 800dbcc:	f004 ffe8 	bl	8012ba0 <dma_init>
 800dbd0:	4631      	mov	r1, r6
 800dbd2:	4628      	mov	r0, r5
 800dbd4:	f005 f815 	bl	8012c02 <dma_circulation_disable>
 800dbd8:	4631      	mov	r1, r6
 800dbda:	4628      	mov	r0, r5
 800dbdc:	f005 f819 	bl	8012c12 <dma_memory_to_memory_disable>
 800dbe0:	2102      	movs	r1, #2
 800dbe2:	4628      	mov	r0, r5
 800dbe4:	f004 ffb4 	bl	8012b50 <dma_deinit>
 800dbe8:	a805      	add	r0, sp, #20
 800dbea:	f004 ffcf 	bl	8012b8c <dma_struct_para_init>
 800dbee:	aa05      	add	r2, sp, #20
 800dbf0:	4628      	mov	r0, r5
 800dbf2:	2102      	movs	r1, #2
 800dbf4:	e9cd b907 	strd	fp, r9, [sp, #28]
 800dbf8:	e9cd a705 	strd	sl, r7, [sp, #20]
 800dbfc:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 800dc00:	f8ad 402c 	strh.w	r4, [sp, #44]	; 0x2c
 800dc04:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 800dc08:	f004 ffca 	bl	8012ba0 <dma_init>
 800dc0c:	4628      	mov	r0, r5
 800dc0e:	2102      	movs	r1, #2
 800dc10:	f004 fff7 	bl	8012c02 <dma_circulation_disable>
 800dc14:	2102      	movs	r1, #2
 800dc16:	4628      	mov	r0, r5
 800dc18:	f004 fffb 	bl	8012c12 <dma_memory_to_memory_disable>
 800dc1c:	b00d      	add	sp, #52	; 0x34
 800dc1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dc22:	bf00      	nop
 800dc24:	40000400 	andmi	r0, r0, r0, lsl #8
 800dc28:	e000e100 	and	lr, r0, r0, lsl #2
 800dc2c:	08016df4 	stmdaeq	r1, {r2, r4, r5, r6, r7, r8, sl, fp, sp, lr}
 800dc30:	40011010 	andmi	r1, r1, r0, lsl r0
 800dc34:	40011014 	andmi	r1, r1, r4, lsl r0
 800dc38:	20009970 	andcs	r9, r0, r0, ror r9

0800dc3c <WS28xxMulti::Setup(unsigned int)>:
 800dc3c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800dc40:	460c      	mov	r4, r1
 800dc42:	b090      	sub	sp, #64	; 0x40
 800dc44:	4680      	mov	r8, r0
 800dc46:	f240 6002 	movw	r0, #1538	; 0x602
 800dc4a:	f005 f90d 	bl	8012e68 <rcu_periph_clock_enable>
 800dc4e:	4d82      	ldr	r5, [pc, #520]	; (800de58 <WS28xxMulti::Setup(unsigned int)+0x21c>)
 800dc50:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 800dc54:	f005 f908 	bl	8012e68 <rcu_periph_clock_enable>
 800dc58:	2203      	movs	r2, #3
 800dc5a:	2340      	movs	r3, #64	; 0x40
 800dc5c:	2118      	movs	r1, #24
 800dc5e:	487f      	ldr	r0, [pc, #508]	; (800de5c <WS28xxMulti::Setup(unsigned int)+0x220>)
 800dc60:	f005 f86a 	bl	8012d38 <gpio_init>
 800dc64:	fbb5 f5f4 	udiv	r5, r5, r4
 800dc68:	2d0c      	cmp	r5, #12
 800dc6a:	bf38      	it	cc
 800dc6c:	250c      	movcc	r5, #12
 800dc6e:	2400      	movs	r4, #0
 800dc70:	2602      	movs	r6, #2
 800dc72:	2701      	movs	r7, #1
 800dc74:	f44f 7980 	mov.w	r9, #256	; 0x100
 800dc78:	f240 7001 	movw	r0, #1793	; 0x701
 800dc7c:	f005 f8f4 	bl	8012e68 <rcu_periph_clock_enable>
 800dc80:	4877      	ldr	r0, [pc, #476]	; (800de60 <WS28xxMulti::Setup(unsigned int)+0x224>)
 800dc82:	f005 fa55 	bl	8013130 <timer_deinit>
 800dc86:	1e6b      	subs	r3, r5, #1
 800dc88:	4875      	ldr	r0, [pc, #468]	; (800de60 <WS28xxMulti::Setup(unsigned int)+0x224>)
 800dc8a:	a905      	add	r1, sp, #20
 800dc8c:	9307      	str	r3, [sp, #28]
 800dc8e:	9405      	str	r4, [sp, #20]
 800dc90:	f8ad 4018 	strh.w	r4, [sp, #24]
 800dc94:	f8ad 4020 	strh.w	r4, [sp, #32]
 800dc98:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800dc9c:	f005 faee 	bl	801327c <timer_init>
 800dca0:	4621      	mov	r1, r4
 800dca2:	486f      	ldr	r0, [pc, #444]	; (800de60 <WS28xxMulti::Setup(unsigned int)+0x224>)
 800dca4:	aa02      	add	r2, sp, #8
 800dca6:	e9cd 7602 	strd	r7, r6, [sp, #8]
 800dcaa:	f8cd 9010 	str.w	r9, [sp, #16]
 800dcae:	f005 fb47 	bl	8013340 <timer_channel_output_config>
 800dcb2:	fa25 f207 	lsr.w	r2, r5, r7
 800dcb6:	3a01      	subs	r2, #1
 800dcb8:	4621      	mov	r1, r4
 800dcba:	4869      	ldr	r0, [pc, #420]	; (800de60 <WS28xxMulti::Setup(unsigned int)+0x224>)
 800dcbc:	b292      	uxth	r2, r2
 800dcbe:	f005 fc55 	bl	801356c <timer_channel_output_pulse_value_config>
 800dcc2:	2260      	movs	r2, #96	; 0x60
 800dcc4:	4621      	mov	r1, r4
 800dcc6:	4866      	ldr	r0, [pc, #408]	; (800de60 <WS28xxMulti::Setup(unsigned int)+0x224>)
 800dcc8:	f005 fc2a 	bl	8013520 <timer_channel_output_mode_config>
 800dccc:	4622      	mov	r2, r4
 800dcce:	4621      	mov	r1, r4
 800dcd0:	4863      	ldr	r0, [pc, #396]	; (800de60 <WS28xxMulti::Setup(unsigned int)+0x224>)
 800dcd2:	f005 fc59 	bl	8013588 <timer_channel_output_shadow_config>
 800dcd6:	2210      	movs	r2, #16
 800dcd8:	4631      	mov	r1, r6
 800dcda:	4861      	ldr	r0, [pc, #388]	; (800de60 <WS28xxMulti::Setup(unsigned int)+0x224>)
 800dcdc:	f005 fc20 	bl	8013520 <timer_channel_output_mode_config>
 800dce0:	2210      	movs	r2, #16
 800dce2:	2103      	movs	r1, #3
 800dce4:	485e      	ldr	r0, [pc, #376]	; (800de60 <WS28xxMulti::Setup(unsigned int)+0x224>)
 800dce6:	f005 fc1b 	bl	8013520 <timer_channel_output_mode_config>
 800dcea:	463a      	mov	r2, r7
 800dcec:	4631      	mov	r1, r6
 800dcee:	485c      	ldr	r0, [pc, #368]	; (800de60 <WS28xxMulti::Setup(unsigned int)+0x224>)
 800dcf0:	f005 fc3c 	bl	801356c <timer_channel_output_pulse_value_config>
 800dcf4:	fa25 f206 	lsr.w	r2, r5, r6
 800dcf8:	3a01      	subs	r2, #1
 800dcfa:	b292      	uxth	r2, r2
 800dcfc:	2103      	movs	r1, #3
 800dcfe:	4858      	ldr	r0, [pc, #352]	; (800de60 <WS28xxMulti::Setup(unsigned int)+0x224>)
 800dd00:	f005 fc34 	bl	801356c <timer_channel_output_pulse_value_config>
 800dd04:	4621      	mov	r1, r4
 800dd06:	4856      	ldr	r0, [pc, #344]	; (800de60 <WS28xxMulti::Setup(unsigned int)+0x224>)
 800dd08:	f005 fc7c 	bl	8013604 <timer_master_slave_mode_config>
 800dd0c:	2130      	movs	r1, #48	; 0x30
 800dd0e:	4854      	ldr	r0, [pc, #336]	; (800de60 <WS28xxMulti::Setup(unsigned int)+0x224>)
 800dd10:	f005 fc68 	bl	80135e4 <timer_master_output_trigger_source_select>
 800dd14:	f240 7002 	movw	r0, #1794	; 0x702
 800dd18:	f005 f8a6 	bl	8012e68 <rcu_periph_clock_enable>
 800dd1c:	4851      	ldr	r0, [pc, #324]	; (800de64 <WS28xxMulti::Setup(unsigned int)+0x228>)
 800dd1e:	f005 fa07 	bl	8013130 <timer_deinit>
 800dd22:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800dd26:	484f      	ldr	r0, [pc, #316]	; (800de64 <WS28xxMulti::Setup(unsigned int)+0x228>)
 800dd28:	a905      	add	r1, sp, #20
 800dd2a:	9307      	str	r3, [sp, #28]
 800dd2c:	9405      	str	r4, [sp, #20]
 800dd2e:	f8ad 4018 	strh.w	r4, [sp, #24]
 800dd32:	f8ad 4020 	strh.w	r4, [sp, #32]
 800dd36:	f005 faa1 	bl	801327c <timer_init>
 800dd3a:	4621      	mov	r1, r4
 800dd3c:	4849      	ldr	r0, [pc, #292]	; (800de64 <WS28xxMulti::Setup(unsigned int)+0x228>)
 800dd3e:	f005 fc61 	bl	8013604 <timer_master_slave_mode_config>
 800dd42:	2107      	movs	r1, #7
 800dd44:	4847      	ldr	r0, [pc, #284]	; (800de64 <WS28xxMulti::Setup(unsigned int)+0x228>)
 800dd46:	f005 fc55 	bl	80135f4 <timer_slave_mode_select>
 800dd4a:	2120      	movs	r1, #32
 800dd4c:	4845      	ldr	r0, [pc, #276]	; (800de64 <WS28xxMulti::Setup(unsigned int)+0x228>)
 800dd4e:	f005 fc41 	bl	80135d4 <timer_input_trigger_source_select>
 800dd52:	2210      	movs	r2, #16
 800dd54:	4621      	mov	r1, r4
 800dd56:	4843      	ldr	r0, [pc, #268]	; (800de64 <WS28xxMulti::Setup(unsigned int)+0x228>)
 800dd58:	f005 fbe2 	bl	8013520 <timer_channel_output_mode_config>
 800dd5c:	f8b8 201c 	ldrh.w	r2, [r8, #28]
 800dd60:	4621      	mov	r1, r4
 800dd62:	4840      	ldr	r0, [pc, #256]	; (800de64 <WS28xxMulti::Setup(unsigned int)+0x228>)
 800dd64:	f005 fc02 	bl	801356c <timer_channel_output_pulse_value_config>
 800dd68:	4631      	mov	r1, r6
 800dd6a:	483e      	ldr	r0, [pc, #248]	; (800de64 <WS28xxMulti::Setup(unsigned int)+0x228>)
 800dd6c:	f005 fc57 	bl	801361e <timer_interrupt_enable>
 800dd70:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800dd74:	f44f 5500 	mov.w	r5, #8192	; 0x2000
 800dd78:	f44f 6a80 	mov.w	sl, #1024	; 0x400
 800dd7c:	4b3a      	ldr	r3, [pc, #232]	; (800de68 <WS28xxMulti::Setup(unsigned int)+0x22c>)
 800dd7e:	f44f 60a0 	mov.w	r0, #1280	; 0x500
 800dd82:	f883 431e 	strb.w	r4, [r3, #798]	; 0x31e
 800dd86:	601a      	str	r2, [r3, #0]
 800dd88:	f005 f86e 	bl	8012e68 <rcu_periph_clock_enable>
 800dd8c:	4639      	mov	r1, r7
 800dd8e:	4837      	ldr	r0, [pc, #220]	; (800de6c <WS28xxMulti::Setup(unsigned int)+0x230>)
 800dd90:	f004 fede 	bl	8012b50 <dma_deinit>
 800dd94:	a809      	add	r0, sp, #36	; 0x24
 800dd96:	f004 fef9 	bl	8012b8c <dma_struct_para_init>
 800dd9a:	4b35      	ldr	r3, [pc, #212]	; (800de70 <WS28xxMulti::Setup(unsigned int)+0x234>)
 800dd9c:	aa09      	add	r2, sp, #36	; 0x24
 800dd9e:	930b      	str	r3, [sp, #44]	; 0x2c
 800dda0:	4b34      	ldr	r3, [pc, #208]	; (800de74 <WS28xxMulti::Setup(unsigned int)+0x238>)
 800dda2:	4639      	mov	r1, r7
 800dda4:	4831      	ldr	r0, [pc, #196]	; (800de6c <WS28xxMulti::Setup(unsigned int)+0x230>)
 800dda6:	e9cd 3909 	strd	r3, r9, [sp, #36]	; 0x24
 800ddaa:	950e      	str	r5, [sp, #56]	; 0x38
 800ddac:	f8cd a030 	str.w	sl, [sp, #48]	; 0x30
 800ddb0:	f8ad 403c 	strh.w	r4, [sp, #60]	; 0x3c
 800ddb4:	f88d 703e 	strb.w	r7, [sp, #62]	; 0x3e
 800ddb8:	f004 fef2 	bl	8012ba0 <dma_init>
 800ddbc:	4639      	mov	r1, r7
 800ddbe:	482b      	ldr	r0, [pc, #172]	; (800de6c <WS28xxMulti::Setup(unsigned int)+0x230>)
 800ddc0:	f004 ff1f 	bl	8012c02 <dma_circulation_disable>
 800ddc4:	4639      	mov	r1, r7
 800ddc6:	4829      	ldr	r0, [pc, #164]	; (800de6c <WS28xxMulti::Setup(unsigned int)+0x230>)
 800ddc8:	f004 ff23 	bl	8012c12 <dma_memory_to_memory_disable>
 800ddcc:	4631      	mov	r1, r6
 800ddce:	4827      	ldr	r0, [pc, #156]	; (800de6c <WS28xxMulti::Setup(unsigned int)+0x230>)
 800ddd0:	f004 febe 	bl	8012b50 <dma_deinit>
 800ddd4:	a809      	add	r0, sp, #36	; 0x24
 800ddd6:	f004 fed9 	bl	8012b8c <dma_struct_para_init>
 800ddda:	4b27      	ldr	r3, [pc, #156]	; (800de78 <WS28xxMulti::Setup(unsigned int)+0x23c>)
 800dddc:	aa09      	add	r2, sp, #36	; 0x24
 800ddde:	e9cd 3a0b 	strd	r3, sl, [sp, #44]	; 0x2c
 800dde2:	4b26      	ldr	r3, [pc, #152]	; (800de7c <WS28xxMulti::Setup(unsigned int)+0x240>)
 800dde4:	4631      	mov	r1, r6
 800dde6:	4821      	ldr	r0, [pc, #132]	; (800de6c <WS28xxMulti::Setup(unsigned int)+0x230>)
 800dde8:	e9cd 3909 	strd	r3, r9, [sp, #36]	; 0x24
 800ddec:	950e      	str	r5, [sp, #56]	; 0x38
 800ddee:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 800ddf2:	f88d 703e 	strb.w	r7, [sp, #62]	; 0x3e
 800ddf6:	f004 fed3 	bl	8012ba0 <dma_init>
 800ddfa:	4631      	mov	r1, r6
 800ddfc:	481b      	ldr	r0, [pc, #108]	; (800de6c <WS28xxMulti::Setup(unsigned int)+0x230>)
 800ddfe:	f004 ff00 	bl	8012c02 <dma_circulation_disable>
 800de02:	4631      	mov	r1, r6
 800de04:	4819      	ldr	r0, [pc, #100]	; (800de6c <WS28xxMulti::Setup(unsigned int)+0x230>)
 800de06:	f004 ff04 	bl	8012c12 <dma_memory_to_memory_disable>
 800de0a:	f8d8 5000 	ldr.w	r5, [r8]
 800de0e:	3d0b      	subs	r5, #11
 800de10:	42b5      	cmp	r5, r6
 800de12:	d81d      	bhi.n	800de50 <WS28xxMulti::Setup(unsigned int)+0x214>
 800de14:	f8d8 6004 	ldr.w	r6, [r8, #4]
 800de18:	4627      	mov	r7, r4
 800de1a:	f04f 08ff 	mov.w	r8, #255	; 0xff
 800de1e:	3601      	adds	r6, #1
 800de20:	2300      	movs	r3, #0
 800de22:	4620      	mov	r0, r4
 800de24:	461a      	mov	r2, r3
 800de26:	4619      	mov	r1, r3
 800de28:	e9cd 7700 	strd	r7, r7, [sp]
 800de2c:	f7ff fd82 	bl	800d934 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800de30:	2d02      	cmp	r5, #2
 800de32:	bf18      	it	ne
 800de34:	23ff      	movne	r3, #255	; 0xff
 800de36:	4620      	mov	r0, r4
 800de38:	bf1a      	itte	ne
 800de3a:	461a      	movne	r2, r3
 800de3c:	e9cd 8800 	strdne	r8, r8, [sp]
 800de40:	e9cd 7700 	strdeq	r7, r7, [sp]
 800de44:	4631      	mov	r1, r6
 800de46:	3401      	adds	r4, #1
 800de48:	f7ff fd74 	bl	800d934 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800de4c:	2c08      	cmp	r4, #8
 800de4e:	d1e7      	bne.n	800de20 <WS28xxMulti::Setup(unsigned int)+0x1e4>
 800de50:	b010      	add	sp, #64	; 0x40
 800de52:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800de56:	bf00      	nop
 800de58:	07270e00 	streq	r0, [r7, -r0, lsl #28]!
 800de5c:	40010800 	andmi	r0, r1, r0, lsl #16
 800de60:	40000400 	andmi	r0, r0, r0, lsl #8
 800de64:	40000800 	andmi	r0, r0, r0, lsl #16
 800de68:	e000e100 	and	lr, r0, r0, lsl #2
 800de6c:	40020000 	andmi	r0, r2, r0
 800de70:	08016df4 	stmdaeq	r1, {r2, r4, r5, r6, r7, r8, sl, fp, sp, lr}
 800de74:	40011014 	andmi	r1, r1, r4, lsl r0
 800de78:	20009970 	andcs	r9, r0, r0, ror r9
 800de7c:	40011010 	andmi	r1, r1, r0, lsl r0

0800de80 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)>:
 800de80:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800de82:	4606      	mov	r6, r0
 800de84:	460f      	mov	r7, r1
 800de86:	4604      	mov	r4, r0
 800de88:	460d      	mov	r5, r1
 800de8a:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800de8c:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 800de8e:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800de92:	2300      	movs	r3, #0
 800de94:	e886 0007 	stmia.w	r6, {r0, r1, r2}
 800de98:	61e3      	str	r3, [r4, #28]
 800de9a:	4b20      	ldr	r3, [pc, #128]	; (800df1c <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x9c>)
 800de9c:	4628      	mov	r0, r5
 800de9e:	a901      	add	r1, sp, #4
 800dea0:	601c      	str	r4, [r3, #0]
 800dea2:	f7ff f8b5 	bl	800d010 <PixelConfiguration::Validate(unsigned int&)>
 800dea6:	6826      	ldr	r6, [r4, #0]
 800dea8:	3e0b      	subs	r6, #11
 800deaa:	2e02      	cmp	r6, #2
 800deac:	d80a      	bhi.n	800dec4 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x44>
 800deae:	686b      	ldr	r3, [r5, #4]
 800deb0:	f5b3 7fff 	cmp.w	r3, #510	; 0x1fe
 800deb4:	d906      	bls.n	800dec4 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x44>
 800deb6:	f44f 73ff 	mov.w	r3, #510	; 0x1fe
 800deba:	4628      	mov	r0, r5
 800debc:	606b      	str	r3, [r5, #4]
 800debe:	a901      	add	r1, sp, #4
 800dec0:	f7ff f8a6 	bl	800d010 <PixelConfiguration::Validate(unsigned int&)>
 800dec4:	6863      	ldr	r3, [r4, #4]
 800dec6:	9a01      	ldr	r2, [sp, #4]
 800dec8:	2e02      	cmp	r6, #2
 800deca:	fb03 f202 	mul.w	r2, r3, r2
 800dece:	bf9b      	ittet	ls
 800ded0:	3308      	addls	r3, #8
 800ded2:	189b      	addls	r3, r3, r2
 800ded4:	61e2      	strhi	r2, [r4, #28]
 800ded6:	61e3      	strls	r3, [r4, #28]
 800ded8:	69e3      	ldr	r3, [r4, #28]
 800deda:	4e11      	ldr	r6, [pc, #68]	; (800df20 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0xa0>)
 800dedc:	00db      	lsls	r3, r3, #3
 800dede:	f240 6004 	movw	r0, #1540	; 0x604
 800dee2:	61e3      	str	r3, [r4, #28]
 800dee4:	f004 ffc0 	bl	8012e68 <rcu_periph_clock_enable>
 800dee8:	f44f 537f 	mov.w	r3, #16320	; 0x3fc0
 800deec:	2203      	movs	r2, #3
 800deee:	2110      	movs	r1, #16
 800def0:	4630      	mov	r0, r6
 800def2:	f004 ff21 	bl	8012d38 <gpio_init>
 800def6:	f44f 537f 	mov.w	r3, #16320	; 0x3fc0
 800defa:	6173      	str	r3, [r6, #20]
 800defc:	7d6b      	ldrb	r3, [r5, #21]
 800defe:	b13b      	cbz	r3, 800df10 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x90>
 800df00:	4620      	mov	r0, r4
 800df02:	7c6a      	ldrb	r2, [r5, #17]
 800df04:	7c29      	ldrb	r1, [r5, #16]
 800df06:	f7ff fd93 	bl	800da30 <WS28xxMulti::Setup(unsigned char, unsigned char)>
 800df0a:	4620      	mov	r0, r4
 800df0c:	b003      	add	sp, #12
 800df0e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800df10:	4620      	mov	r0, r4
 800df12:	68e9      	ldr	r1, [r5, #12]
 800df14:	f7ff fe92 	bl	800dc3c <WS28xxMulti::Setup(unsigned int)>
 800df18:	e7f7      	b.n	800df0a <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x8a>
 800df1a:	bf00      	nop
 800df1c:	2000996c 	andcs	r9, r0, ip, ror #18
 800df20:	40011000 	andmi	r1, r1, r0

0800df24 <WS28xxMulti::Update()>:
 800df24:	2201      	movs	r2, #1
 800df26:	4b39      	ldr	r3, [pc, #228]	; (800e00c <WS28xxMulti::Update()+0xe8>)
 800df28:	b510      	push	{r4, lr}
 800df2a:	701a      	strb	r2, [r3, #0]
 800df2c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800df30:	2100      	movs	r1, #0
 800df32:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
 800df36:	4c36      	ldr	r4, [pc, #216]	; (800e010 <WS28xxMulti::Update()+0xec>)
 800df38:	f022 0201 	bic.w	r2, r2, #1
 800df3c:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
 800df40:	f8c3 1824 	str.w	r1, [r3, #2084]	; 0x824
 800df44:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 800df48:	f022 0201 	bic.w	r2, r2, #1
 800df4c:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
 800df50:	f8c3 1424 	str.w	r1, [r3, #1060]	; 0x424
 800df54:	7d41      	ldrb	r1, [r0, #21]
 800df56:	4a2f      	ldr	r2, [pc, #188]	; (800e014 <WS28xxMulti::Update()+0xf0>)
 800df58:	f503 3300 	add.w	r3, r3, #131072	; 0x20000
 800df5c:	2900      	cmp	r1, #0
 800df5e:	d03e      	beq.n	800dfde <WS28xxMulti::Update()+0xba>
 800df60:	6ed9      	ldr	r1, [r3, #108]	; 0x6c
 800df62:	f021 0101 	bic.w	r1, r1, #1
 800df66:	66d9      	str	r1, [r3, #108]	; 0x6c
 800df68:	679a      	str	r2, [r3, #120]	; 0x78
 800df6a:	8b81      	ldrh	r1, [r0, #28]
 800df6c:	6719      	str	r1, [r3, #112]	; 0x70
 800df6e:	6ed9      	ldr	r1, [r3, #108]	; 0x6c
 800df70:	f041 0101 	orr.w	r1, r1, #1
 800df74:	66d9      	str	r1, [r3, #108]	; 0x6c
 800df76:	69d9      	ldr	r1, [r3, #28]
 800df78:	f021 0101 	bic.w	r1, r1, #1
 800df7c:	61d9      	str	r1, [r3, #28]
 800df7e:	629c      	str	r4, [r3, #40]	; 0x28
 800df80:	8b81      	ldrh	r1, [r0, #28]
 800df82:	6219      	str	r1, [r3, #32]
 800df84:	69d9      	ldr	r1, [r3, #28]
 800df86:	f041 0101 	orr.w	r1, r1, #1
 800df8a:	61d9      	str	r1, [r3, #28]
 800df8c:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800df8e:	f021 0101 	bic.w	r1, r1, #1
 800df92:	6319      	str	r1, [r3, #48]	; 0x30
 800df94:	63da      	str	r2, [r3, #60]	; 0x3c
 800df96:	8b82      	ldrh	r2, [r0, #28]
 800df98:	f44f 7100 	mov.w	r1, #512	; 0x200
 800df9c:	635a      	str	r2, [r3, #52]	; 0x34
 800df9e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800dfa0:	481d      	ldr	r0, [pc, #116]	; (800e018 <WS28xxMulti::Update()+0xf4>)
 800dfa2:	f042 0201 	orr.w	r2, r2, #1
 800dfa6:	631a      	str	r2, [r3, #48]	; 0x30
 800dfa8:	f005 f9c5 	bl	8013336 <timer_dma_enable>
 800dfac:	f44f 6100 	mov.w	r1, #2048	; 0x800
 800dfb0:	4819      	ldr	r0, [pc, #100]	; (800e018 <WS28xxMulti::Update()+0xf4>)
 800dfb2:	f005 f9c0 	bl	8013336 <timer_dma_enable>
 800dfb6:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 800dfba:	4817      	ldr	r0, [pc, #92]	; (800e018 <WS28xxMulti::Update()+0xf4>)
 800dfbc:	f005 f9bb 	bl	8013336 <timer_dma_enable>
 800dfc0:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800dfc4:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
 800dfc8:	f042 0201 	orr.w	r2, r2, #1
 800dfcc:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
 800dfd0:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 800dfd4:	f042 0201 	orr.w	r2, r2, #1
 800dfd8:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
 800dfdc:	bd10      	pop	{r4, pc}
 800dfde:	69d9      	ldr	r1, [r3, #28]
 800dfe0:	f021 0101 	bic.w	r1, r1, #1
 800dfe4:	61d9      	str	r1, [r3, #28]
 800dfe6:	629a      	str	r2, [r3, #40]	; 0x28
 800dfe8:	8b82      	ldrh	r2, [r0, #28]
 800dfea:	621a      	str	r2, [r3, #32]
 800dfec:	69da      	ldr	r2, [r3, #28]
 800dfee:	f042 0201 	orr.w	r2, r2, #1
 800dff2:	61da      	str	r2, [r3, #28]
 800dff4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800dff6:	f022 0201 	bic.w	r2, r2, #1
 800dffa:	631a      	str	r2, [r3, #48]	; 0x30
 800dffc:	63dc      	str	r4, [r3, #60]	; 0x3c
 800dffe:	8b82      	ldrh	r2, [r0, #28]
 800e000:	635a      	str	r2, [r3, #52]	; 0x34
 800e002:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800e004:	f042 0201 	orr.w	r2, r2, #1
 800e008:	631a      	str	r2, [r3, #48]	; 0x30
 800e00a:	e7cf      	b.n	800dfac <WS28xxMulti::Update()+0x88>
 800e00c:	20009968 	andcs	r9, r0, r8, ror #18
 800e010:	20009970 	andcs	r9, r0, r0, ror r9
 800e014:	08016df4 	stmdaeq	r1, {r2, r4, r5, r6, r7, r8, sl, fp, sp, lr}
 800e018:	40000400 	andmi	r0, r0, r0, lsl #8

0800e01c <WS28xxMulti::Blackout()>:
 800e01c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e020:	4605      	mov	r5, r0
 800e022:	4f2d      	ldr	r7, [pc, #180]	; (800e0d8 <WS28xxMulti::Blackout()+0xbc>)
 800e024:	f3bf 8f5f 	dmb	sy
 800e028:	783a      	ldrb	r2, [r7, #0]
 800e02a:	f002 03ff 	and.w	r3, r2, #255	; 0xff
 800e02e:	2a00      	cmp	r2, #0
 800e030:	d1f8      	bne.n	800e024 <WS28xxMulti::Blackout()+0x8>
 800e032:	7d6c      	ldrb	r4, [r5, #21]
 800e034:	b194      	cbz	r4, 800e05c <WS28xxMulti::Blackout()+0x40>
 800e036:	4a29      	ldr	r2, [pc, #164]	; (800e0dc <WS28xxMulti::Blackout()+0xc0>)
 800e038:	4929      	ldr	r1, [pc, #164]	; (800e0e0 <WS28xxMulti::Blackout()+0xc4>)
 800e03a:	3301      	adds	r3, #1
 800e03c:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800e040:	f842 1b04 	str.w	r1, [r2], #4
 800e044:	d1f9      	bne.n	800e03a <WS28xxMulti::Blackout()+0x1e>
 800e046:	4628      	mov	r0, r5
 800e048:	f7ff ff6c 	bl	800df24 <WS28xxMulti::Update()>
 800e04c:	f3bf 8f5f 	dmb	sy
 800e050:	783b      	ldrb	r3, [r7, #0]
 800e052:	2b00      	cmp	r3, #0
 800e054:	d1fa      	bne.n	800e04c <WS28xxMulti::Blackout()+0x30>
 800e056:	b003      	add	sp, #12
 800e058:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e05c:	682b      	ldr	r3, [r5, #0]
 800e05e:	f1a3 080b 	sub.w	r8, r3, #11
 800e062:	f1b8 0f02 	cmp.w	r8, #2
 800e066:	d908      	bls.n	800e07a <WS28xxMulti::Blackout()+0x5e>
 800e068:	4622      	mov	r2, r4
 800e06a:	4b1c      	ldr	r3, [pc, #112]	; (800e0dc <WS28xxMulti::Blackout()+0xc0>)
 800e06c:	3401      	adds	r4, #1
 800e06e:	f5b4 5f00 	cmp.w	r4, #8192	; 0x2000
 800e072:	f843 2b04 	str.w	r2, [r3], #4
 800e076:	d1f9      	bne.n	800e06c <WS28xxMulti::Blackout()+0x50>
 800e078:	e7e5      	b.n	800e046 <WS28xxMulti::Blackout()+0x2a>
 800e07a:	4626      	mov	r6, r4
 800e07c:	f8d5 a004 	ldr.w	sl, [r5, #4]
 800e080:	f10a 0b01 	add.w	fp, sl, #1
 800e084:	2300      	movs	r3, #0
 800e086:	4620      	mov	r0, r4
 800e088:	461a      	mov	r2, r3
 800e08a:	4619      	mov	r1, r3
 800e08c:	e9cd 6600 	strd	r6, r6, [sp]
 800e090:	f7ff fc50 	bl	800d934 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800e094:	f04f 0901 	mov.w	r9, #1
 800e098:	45ca      	cmp	sl, r9
 800e09a:	d212      	bcs.n	800e0c2 <WS28xxMulti::Blackout()+0xa6>
 800e09c:	f1b8 0f02 	cmp.w	r8, #2
 800e0a0:	bf14      	ite	ne
 800e0a2:	23ff      	movne	r3, #255	; 0xff
 800e0a4:	2300      	moveq	r3, #0
 800e0a6:	4620      	mov	r0, r4
 800e0a8:	bf14      	ite	ne
 800e0aa:	e9cd 3300 	strdne	r3, r3, [sp]
 800e0ae:	e9cd 6600 	strdeq	r6, r6, [sp]
 800e0b2:	461a      	mov	r2, r3
 800e0b4:	4659      	mov	r1, fp
 800e0b6:	3401      	adds	r4, #1
 800e0b8:	f7ff fc3c 	bl	800d934 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800e0bc:	2c08      	cmp	r4, #8
 800e0be:	d1e1      	bne.n	800e084 <WS28xxMulti::Blackout()+0x68>
 800e0c0:	e7c1      	b.n	800e046 <WS28xxMulti::Blackout()+0x2a>
 800e0c2:	4649      	mov	r1, r9
 800e0c4:	2300      	movs	r3, #0
 800e0c6:	22e0      	movs	r2, #224	; 0xe0
 800e0c8:	4620      	mov	r0, r4
 800e0ca:	e9cd 6600 	strd	r6, r6, [sp]
 800e0ce:	f7ff fc31 	bl	800d934 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800e0d2:	f109 0901 	add.w	r9, r9, #1
 800e0d6:	e7df      	b.n	800e098 <WS28xxMulti::Blackout()+0x7c>
 800e0d8:	20009968 	andcs	r9, r0, r8, ror #18
 800e0dc:	20009970 	andcs	r9, r0, r0, ror r9
 800e0e0:	3fc03fc0 	svccc	0x00c03fc0

0800e0e4 <WS28xxMulti::FullOn()>:
 800e0e4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e0e8:	4605      	mov	r5, r0
 800e0ea:	4f2c      	ldr	r7, [pc, #176]	; (800e19c <WS28xxMulti::FullOn()+0xb8>)
 800e0ec:	f3bf 8f5f 	dmb	sy
 800e0f0:	783a      	ldrb	r2, [r7, #0]
 800e0f2:	f002 03ff 	and.w	r3, r2, #255	; 0xff
 800e0f6:	2a00      	cmp	r2, #0
 800e0f8:	d1f8      	bne.n	800e0ec <WS28xxMulti::FullOn()+0x8>
 800e0fa:	7d6c      	ldrb	r4, [r5, #21]
 800e0fc:	b194      	cbz	r4, 800e124 <WS28xxMulti::FullOn()+0x40>
 800e0fe:	4619      	mov	r1, r3
 800e100:	4a27      	ldr	r2, [pc, #156]	; (800e1a0 <WS28xxMulti::FullOn()+0xbc>)
 800e102:	3301      	adds	r3, #1
 800e104:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800e108:	f842 1b04 	str.w	r1, [r2], #4
 800e10c:	d1f9      	bne.n	800e102 <WS28xxMulti::FullOn()+0x1e>
 800e10e:	4628      	mov	r0, r5
 800e110:	f7ff ff08 	bl	800df24 <WS28xxMulti::Update()>
 800e114:	f3bf 8f5f 	dmb	sy
 800e118:	783b      	ldrb	r3, [r7, #0]
 800e11a:	2b00      	cmp	r3, #0
 800e11c:	d1fa      	bne.n	800e114 <WS28xxMulti::FullOn()+0x30>
 800e11e:	b003      	add	sp, #12
 800e120:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e124:	682e      	ldr	r6, [r5, #0]
 800e126:	3e0b      	subs	r6, #11
 800e128:	2e02      	cmp	r6, #2
 800e12a:	d908      	bls.n	800e13e <WS28xxMulti::FullOn()+0x5a>
 800e12c:	22ff      	movs	r2, #255	; 0xff
 800e12e:	4b1c      	ldr	r3, [pc, #112]	; (800e1a0 <WS28xxMulti::FullOn()+0xbc>)
 800e130:	3401      	adds	r4, #1
 800e132:	f5b4 5f00 	cmp.w	r4, #8192	; 0x2000
 800e136:	f843 2b04 	str.w	r2, [r3], #4
 800e13a:	d1f9      	bne.n	800e130 <WS28xxMulti::FullOn()+0x4c>
 800e13c:	e7e7      	b.n	800e10e <WS28xxMulti::FullOn()+0x2a>
 800e13e:	46a0      	mov	r8, r4
 800e140:	f04f 09ff 	mov.w	r9, #255	; 0xff
 800e144:	f8d5 a004 	ldr.w	sl, [r5, #4]
 800e148:	2300      	movs	r3, #0
 800e14a:	4620      	mov	r0, r4
 800e14c:	461a      	mov	r2, r3
 800e14e:	4619      	mov	r1, r3
 800e150:	e9cd 8800 	strd	r8, r8, [sp]
 800e154:	f7ff fbee 	bl	800d934 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800e158:	f04f 0b01 	mov.w	fp, #1
 800e15c:	45da      	cmp	sl, fp
 800e15e:	d212      	bcs.n	800e186 <WS28xxMulti::FullOn()+0xa2>
 800e160:	2e02      	cmp	r6, #2
 800e162:	bf14      	ite	ne
 800e164:	23ff      	movne	r3, #255	; 0xff
 800e166:	2300      	moveq	r3, #0
 800e168:	4620      	mov	r0, r4
 800e16a:	bf14      	ite	ne
 800e16c:	e9cd 9900 	strdne	r9, r9, [sp]
 800e170:	e9cd 8800 	strdeq	r8, r8, [sp]
 800e174:	461a      	mov	r2, r3
 800e176:	f10a 0101 	add.w	r1, sl, #1
 800e17a:	3401      	adds	r4, #1
 800e17c:	f7ff fbda 	bl	800d934 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800e180:	2c08      	cmp	r4, #8
 800e182:	d1e1      	bne.n	800e148 <WS28xxMulti::FullOn()+0x64>
 800e184:	e7c3      	b.n	800e10e <WS28xxMulti::FullOn()+0x2a>
 800e186:	4659      	mov	r1, fp
 800e188:	23ff      	movs	r3, #255	; 0xff
 800e18a:	22e0      	movs	r2, #224	; 0xe0
 800e18c:	4620      	mov	r0, r4
 800e18e:	e9cd 9900 	strd	r9, r9, [sp]
 800e192:	f7ff fbcf 	bl	800d934 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800e196:	f10b 0b01 	add.w	fp, fp, #1
 800e19a:	e7df      	b.n	800e15c <WS28xxMulti::FullOn()+0x78>
 800e19c:	20009968 	andcs	r9, r0, r8, ror #18
 800e1a0:	20009970 	andcs	r9, r0, r0, ror r9

0800e1a4 <WS28xxMulti::IsUpdating()>:
 800e1a4:	f3bf 8f5f 	dmb	sy
 800e1a8:	4b01      	ldr	r3, [pc, #4]	; (800e1b0 <WS28xxMulti::IsUpdating()+0xc>)
 800e1aa:	7818      	ldrb	r0, [r3, #0]
 800e1ac:	4770      	bx	lr
 800e1ae:	bf00      	nop
 800e1b0:	20009968 	andcs	r9, r0, r8, ror #18

0800e1b4 <WS28xxMulti::SetColourRTZ(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>:
 800e1b4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e1b6:	f04f 0c80 	mov.w	ip, #128	; 0x80
 800e1ba:	2400      	movs	r4, #0
 800e1bc:	2501      	movs	r5, #1
 800e1be:	4f1a      	ldr	r7, [pc, #104]	; (800e228 <WS28xxMulti::SetColourRTZ(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x74>)
 800e1c0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800e1c4:	4819      	ldr	r0, [pc, #100]	; (800e22c <WS28xxMulti::SetColourRTZ(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x78>)
 800e1c6:	eb07 1702 	add.w	r7, r7, r2, lsl #4
 800e1ca:	3106      	adds	r1, #6
 800e1cc:	b2c9      	uxtb	r1, r1
 800e1ce:	4438      	add	r0, r7
 800e1d0:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
 800e1d4:	f101 6108 	add.w	r1, r1, #142606336	; 0x8800000
 800e1d8:	f501 71c0 	add.w	r1, r1, #384	; 0x180
 800e1dc:	eb01 01c7 	add.w	r1, r1, r7, lsl #3
 800e1e0:	f89d e014 	ldrb.w	lr, [sp, #20]
 800e1e4:	f89d 6018 	ldrb.w	r6, [sp, #24]
 800e1e8:	0092      	lsls	r2, r2, #2
 800e1ea:	0089      	lsls	r1, r1, #2
 800e1ec:	ea13 0f0c 	tst.w	r3, ip
 800e1f0:	f5a2 6080 	sub.w	r0, r2, #1024	; 0x400
 800e1f4:	bf16      	itet	ne
 800e1f6:	f5a2 6080 	subne.w	r0, r2, #1024	; 0x400
 800e1fa:	6005      	streq	r5, [r0, #0]
 800e1fc:	6004      	strne	r4, [r0, #0]
 800e1fe:	ea1e 0f0c 	tst.w	lr, ip
 800e202:	f5a2 7000 	sub.w	r0, r2, #512	; 0x200
 800e206:	bf16      	itet	ne
 800e208:	f5a2 7000 	subne.w	r0, r2, #512	; 0x200
 800e20c:	6005      	streq	r5, [r0, #0]
 800e20e:	6004      	strne	r4, [r0, #0]
 800e210:	ea16 0f0c 	tst.w	r6, ip
 800e214:	bf0c      	ite	eq
 800e216:	6015      	streq	r5, [r2, #0]
 800e218:	6014      	strne	r4, [r2, #0]
 800e21a:	3240      	adds	r2, #64	; 0x40
 800e21c:	4291      	cmp	r1, r2
 800e21e:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 800e222:	d1e3      	bne.n	800e1ec <WS28xxMulti::SetColourRTZ(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x38>
 800e224:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e226:	bf00      	nop
 800e228:	20009970 	andcs	r9, r0, r0, ror r9
 800e22c:	e1100020 	tst	r0, r0, lsr #32

0800e230 <WS28xxMulti::SetColourWS2801(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>:
 800e230:	b570      	push	{r4, r5, r6, lr}
 800e232:	2080      	movs	r0, #128	; 0x80
 800e234:	2401      	movs	r4, #1
 800e236:	4e1a      	ldr	r6, [pc, #104]	; (800e2a0 <WS28xxMulti::SetColourWS2801(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x70>)
 800e238:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800e23c:	4d19      	ldr	r5, [pc, #100]	; (800e2a4 <WS28xxMulti::SetColourWS2801(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x74>)
 800e23e:	eb06 1602 	add.w	r6, r6, r2, lsl #4
 800e242:	3106      	adds	r1, #6
 800e244:	b2c9      	uxtb	r1, r1
 800e246:	4435      	add	r5, r6
 800e248:	eb01 02c5 	add.w	r2, r1, r5, lsl #3
 800e24c:	f101 6108 	add.w	r1, r1, #142606336	; 0x8800000
 800e250:	f501 71c0 	add.w	r1, r1, #384	; 0x180
 800e254:	eb01 01c6 	add.w	r1, r1, r6, lsl #3
 800e258:	f89d c010 	ldrb.w	ip, [sp, #16]
 800e25c:	f89d e014 	ldrb.w	lr, [sp, #20]
 800e260:	0092      	lsls	r2, r2, #2
 800e262:	0089      	lsls	r1, r1, #2
 800e264:	ea13 0500 	ands.w	r5, r3, r0
 800e268:	f5a2 6680 	sub.w	r6, r2, #1024	; 0x400
 800e26c:	bf0a      	itet	eq
 800e26e:	f5a2 6680 	subeq.w	r6, r2, #1024	; 0x400
 800e272:	6034      	strne	r4, [r6, #0]
 800e274:	6035      	streq	r5, [r6, #0]
 800e276:	ea1c 0500 	ands.w	r5, ip, r0
 800e27a:	f5a2 7600 	sub.w	r6, r2, #512	; 0x200
 800e27e:	bf0a      	itet	eq
 800e280:	f5a2 7600 	subeq.w	r6, r2, #512	; 0x200
 800e284:	6034      	strne	r4, [r6, #0]
 800e286:	6035      	streq	r5, [r6, #0]
 800e288:	ea1e 0500 	ands.w	r5, lr, r0
 800e28c:	bf14      	ite	ne
 800e28e:	6014      	strne	r4, [r2, #0]
 800e290:	6015      	streq	r5, [r2, #0]
 800e292:	3240      	adds	r2, #64	; 0x40
 800e294:	4291      	cmp	r1, r2
 800e296:	ea4f 0050 	mov.w	r0, r0, lsr #1
 800e29a:	d1e3      	bne.n	800e264 <WS28xxMulti::SetColourWS2801(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x34>
 800e29c:	bd70      	pop	{r4, r5, r6, pc}
 800e29e:	bf00      	nop
 800e2a0:	20009970 	andcs	r9, r0, r0, ror r9
 800e2a4:	e1100020 	tst	r0, r0, lsr #32

0800e2a8 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>:
 800e2a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e2aa:	6984      	ldr	r4, [r0, #24]
 800e2ac:	f89d 5014 	ldrb.w	r5, [sp, #20]
 800e2b0:	5ce6      	ldrb	r6, [r4, r3]
 800e2b2:	f89d 7018 	ldrb.w	r7, [sp, #24]
 800e2b6:	7d43      	ldrb	r3, [r0, #21]
 800e2b8:	5d65      	ldrb	r5, [r4, r5]
 800e2ba:	4684      	mov	ip, r0
 800e2bc:	4696      	mov	lr, r2
 800e2be:	5de4      	ldrb	r4, [r4, r7]
 800e2c0:	bb23      	cbnz	r3, 800e30c <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x64>
 800e2c2:	6803      	ldr	r3, [r0, #0]
 800e2c4:	b1d3      	cbz	r3, 800e2fc <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x54>
 800e2c6:	3b0b      	subs	r3, #11
 800e2c8:	2b01      	cmp	r3, #1
 800e2ca:	d94b      	bls.n	800e364 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xbc>
 800e2cc:	4608      	mov	r0, r1
 800e2ce:	1c51      	adds	r1, r2, #1
 800e2d0:	ea6f 0294 	mvn.w	r2, r4, lsr #2
 800e2d4:	9505      	str	r5, [sp, #20]
 800e2d6:	ea6f 1515 	mvn.w	r5, r5, lsr #4
 800e2da:	9606      	str	r6, [sp, #24]
 800e2dc:	f002 0230 	and.w	r2, r2, #48	; 0x30
 800e2e0:	f086 06c0 	eor.w	r6, r6, #192	; 0xc0
 800e2e4:	f005 050c 	and.w	r5, r5, #12
 800e2e8:	ea42 1296 	orr.w	r2, r2, r6, lsr #6
 800e2ec:	432a      	orrs	r2, r5
 800e2ee:	4623      	mov	r3, r4
 800e2f0:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800e2f4:	f042 02c0 	orr.w	r2, r2, #192	; 0xc0
 800e2f8:	f7ff bb1c 	b.w	800d934 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800e2fc:	6883      	ldr	r3, [r0, #8]
 800e2fe:	2b05      	cmp	r3, #5
 800e300:	d85a      	bhi.n	800e3b8 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
 800e302:	e8df f003 	tbb	[pc, r3]
 800e306:	534d4744 	movtpl	r4, #55108	; 0xd744
 800e30a:	68833b56 	stmvs	r3, {r1, r2, r4, r6, r8, r9, fp, ip, sp}
 800e30e:	2b05      	cmp	r3, #5
 800e310:	d825      	bhi.n	800e35e <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xb6>
 800e312:	e8df f003 	tbb	[pc, r3]
 800e316:	0c15181b 	ldceq	8, cr1, [r5], {27}
 800e31a:	46232403 	strtmi	r2, [r3], -r3, lsl #8
 800e31e:	9506      	str	r5, [sp, #24]
 800e320:	4672      	mov	r2, lr
 800e322:	9605      	str	r6, [sp, #20]
 800e324:	4660      	mov	r0, ip
 800e326:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800e32a:	f7ff bf43 	b.w	800e1b4 <WS28xxMulti::SetColourRTZ(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 800e32e:	462b      	mov	r3, r5
 800e330:	9606      	str	r6, [sp, #24]
 800e332:	4672      	mov	r2, lr
 800e334:	9405      	str	r4, [sp, #20]
 800e336:	4660      	mov	r0, ip
 800e338:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800e33c:	f7ff bf3a 	b.w	800e1b4 <WS28xxMulti::SetColourRTZ(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 800e340:	462b      	mov	r3, r5
 800e342:	9406      	str	r4, [sp, #24]
 800e344:	e7ec      	b.n	800e320 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x78>
 800e346:	4633      	mov	r3, r6
 800e348:	9506      	str	r5, [sp, #24]
 800e34a:	e7f2      	b.n	800e332 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x8a>
 800e34c:	4633      	mov	r3, r6
 800e34e:	9406      	str	r4, [sp, #24]
 800e350:	4672      	mov	r2, lr
 800e352:	9505      	str	r5, [sp, #20]
 800e354:	4660      	mov	r0, ip
 800e356:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800e35a:	f7ff bf2b 	b.w	800e1b4 <WS28xxMulti::SetColourRTZ(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 800e35e:	4623      	mov	r3, r4
 800e360:	9606      	str	r6, [sp, #24]
 800e362:	e7f5      	b.n	800e350 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xa8>
 800e364:	9606      	str	r6, [sp, #24]
 800e366:	4623      	mov	r3, r4
 800e368:	4608      	mov	r0, r1
 800e36a:	f89c 2012 	ldrb.w	r2, [ip, #18]
 800e36e:	f10e 0101 	add.w	r1, lr, #1
 800e372:	9505      	str	r5, [sp, #20]
 800e374:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800e378:	f7ff badc 	b.w	800d934 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800e37c:	4623      	mov	r3, r4
 800e37e:	9606      	str	r6, [sp, #24]
 800e380:	4672      	mov	r2, lr
 800e382:	4660      	mov	r0, ip
 800e384:	9505      	str	r5, [sp, #20]
 800e386:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800e38a:	f7ff bf51 	b.w	800e230 <WS28xxMulti::SetColourWS2801(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 800e38e:	4633      	mov	r3, r6
 800e390:	9406      	str	r4, [sp, #24]
 800e392:	e7f5      	b.n	800e380 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xd8>
 800e394:	4633      	mov	r3, r6
 800e396:	9506      	str	r5, [sp, #24]
 800e398:	4672      	mov	r2, lr
 800e39a:	4660      	mov	r0, ip
 800e39c:	9405      	str	r4, [sp, #20]
 800e39e:	e7f2      	b.n	800e386 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xde>
 800e3a0:	462b      	mov	r3, r5
 800e3a2:	9406      	str	r4, [sp, #24]
 800e3a4:	4672      	mov	r2, lr
 800e3a6:	4660      	mov	r0, ip
 800e3a8:	9605      	str	r6, [sp, #20]
 800e3aa:	e7ec      	b.n	800e386 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xde>
 800e3ac:	462b      	mov	r3, r5
 800e3ae:	9606      	str	r6, [sp, #24]
 800e3b0:	e7f2      	b.n	800e398 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xf0>
 800e3b2:	4623      	mov	r3, r4
 800e3b4:	9506      	str	r5, [sp, #24]
 800e3b6:	e7f5      	b.n	800e3a4 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xfc>

0800e3b8 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>:
 800e3b8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e3ba:	f04f 0c80 	mov.w	ip, #128	; 0x80
 800e3be:	2400      	movs	r4, #0
 800e3c0:	2501      	movs	r5, #1
 800e3c2:	6986      	ldr	r6, [r0, #24]
 800e3c4:	4f1e      	ldr	r7, [pc, #120]	; (800e440 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)+0x88>)
 800e3c6:	f89d e014 	ldrb.w	lr, [sp, #20]
 800e3ca:	eb07 1782 	add.w	r7, r7, r2, lsl #6
 800e3ce:	1d8a      	adds	r2, r1, #6
 800e3d0:	5cf1      	ldrb	r1, [r6, r3]
 800e3d2:	4b1c      	ldr	r3, [pc, #112]	; (800e444 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)+0x8c>)
 800e3d4:	b2d2      	uxtb	r2, r2
 800e3d6:	443b      	add	r3, r7
 800e3d8:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800e3dc:	f102 6208 	add.w	r2, r2, #142606336	; 0x8800000
 800e3e0:	f502 7200 	add.w	r2, r2, #512	; 0x200
 800e3e4:	eb02 02c7 	add.w	r2, r2, r7, lsl #3
 800e3e8:	f89d 7018 	ldrb.w	r7, [sp, #24]
 800e3ec:	f816 000e 	ldrb.w	r0, [r6, lr]
 800e3f0:	f816 e007 	ldrb.w	lr, [r6, r7]
 800e3f4:	f89d 701c 	ldrb.w	r7, [sp, #28]
 800e3f8:	009b      	lsls	r3, r3, #2
 800e3fa:	5df6      	ldrb	r6, [r6, r7]
 800e3fc:	0092      	lsls	r2, r2, #2
 800e3fe:	f5a3 67c0 	sub.w	r7, r3, #1536	; 0x600
 800e402:	ea10 0f0c 	tst.w	r0, ip
 800e406:	bf0c      	ite	eq
 800e408:	603d      	streq	r5, [r7, #0]
 800e40a:	603c      	strne	r4, [r7, #0]
 800e40c:	f5a3 6780 	sub.w	r7, r3, #1024	; 0x400
 800e410:	ea11 0f0c 	tst.w	r1, ip
 800e414:	bf0c      	ite	eq
 800e416:	603d      	streq	r5, [r7, #0]
 800e418:	603c      	strne	r4, [r7, #0]
 800e41a:	ea1e 0f0c 	tst.w	lr, ip
 800e41e:	f5a3 7700 	sub.w	r7, r3, #512	; 0x200
 800e422:	bf0c      	ite	eq
 800e424:	603d      	streq	r5, [r7, #0]
 800e426:	603c      	strne	r4, [r7, #0]
 800e428:	ea16 0f0c 	tst.w	r6, ip
 800e42c:	bf0c      	ite	eq
 800e42e:	601d      	streq	r5, [r3, #0]
 800e430:	601c      	strne	r4, [r3, #0]
 800e432:	3340      	adds	r3, #64	; 0x40
 800e434:	429a      	cmp	r2, r3
 800e436:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 800e43a:	d1e0      	bne.n	800e3fe <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)+0x46>
 800e43c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e43e:	bf00      	nop
 800e440:	20009970 	andcs	r9, r0, r0, ror r9
 800e444:	e1100030 	tst	r0, r0, lsr r0

0800e448 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>:
 800e448:	2300      	movs	r3, #0
 800e44a:	2020      	movs	r0, #32
 800e44c:	b510      	push	{r4, lr}
 800e44e:	4a04      	ldr	r2, [pc, #16]	; (800e460 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x18>)
 800e450:	428b      	cmp	r3, r1
 800e452:	d100      	bne.n	800e456 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0xe>
 800e454:	bd10      	pop	{r4, pc}
 800e456:	f852 4b04 	ldr.w	r4, [r2], #4
 800e45a:	3301      	adds	r3, #1
 800e45c:	4420      	add	r0, r4
 800e45e:	e7f7      	b.n	800e450 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x8>
 800e460:	08016df8 	stmdaeq	r1, {r3, r4, r5, r6, r7, r8, sl, fp, sp, lr}

0800e464 <SpiFlashStore::Init()>:
 800e464:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e468:	f8df 8114 	ldr.w	r8, [pc, #276]	; 800e580 <SpiFlashStore::Init()+0x11c>
 800e46c:	4607      	mov	r7, r0
 800e46e:	b085      	sub	sp, #20
 800e470:	f8d8 0000 	ldr.w	r0, [r8]
 800e474:	f000 fbf6 	bl	800ec64 <FlashRom::GetSectorSize() const>
 800e478:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
 800e47c:	4605      	mov	r5, r0
 800e47e:	d17d      	bne.n	800e57c <SpiFlashStore::Init()+0x118>
 800e480:	f8d8 0000 	ldr.w	r0, [r8]
 800e484:	f000 fbe6 	bl	800ec54 <FlashRom::GetSize() const>
 800e488:	4b3e      	ldr	r3, [pc, #248]	; (800e584 <SpiFlashStore::Init()+0x120>)
 800e48a:	f5a0 5180 	sub.w	r1, r0, #4096	; 0x1000
 800e48e:	f3c1 060b 	ubfx	r6, r1, #0, #12
 800e492:	6019      	str	r1, [r3, #0]
 800e494:	2e00      	cmp	r6, #0
 800e496:	d171      	bne.n	800e57c <SpiFlashStore::Init()+0x118>
 800e498:	4c3b      	ldr	r4, [pc, #236]	; (800e588 <SpiFlashStore::Init()+0x124>)
 800e49a:	ab03      	add	r3, sp, #12
 800e49c:	9300      	str	r3, [sp, #0]
 800e49e:	462a      	mov	r2, r5
 800e4a0:	4623      	mov	r3, r4
 800e4a2:	f8d8 0000 	ldr.w	r0, [r8]
 800e4a6:	f000 fbe0 	bl	800ec6a <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)>
 800e4aa:	7823      	ldrb	r3, [r4, #0]
 800e4ac:	2b41      	cmp	r3, #65	; 0x41
 800e4ae:	bf1c      	itt	ne
 800e4b0:	2341      	movne	r3, #65	; 0x41
 800e4b2:	7023      	strbne	r3, [r4, #0]
 800e4b4:	7863      	ldrb	r3, [r4, #1]
 800e4b6:	bf14      	ite	ne
 800e4b8:	4635      	movne	r5, r6
 800e4ba:	2501      	moveq	r5, #1
 800e4bc:	2b76      	cmp	r3, #118	; 0x76
 800e4be:	bf1c      	itt	ne
 800e4c0:	2376      	movne	r3, #118	; 0x76
 800e4c2:	7063      	strbne	r3, [r4, #1]
 800e4c4:	78a3      	ldrb	r3, [r4, #2]
 800e4c6:	bf18      	it	ne
 800e4c8:	2500      	movne	r5, #0
 800e4ca:	2b56      	cmp	r3, #86	; 0x56
 800e4cc:	bf1c      	itt	ne
 800e4ce:	2356      	movne	r3, #86	; 0x56
 800e4d0:	70a3      	strbne	r3, [r4, #2]
 800e4d2:	78e3      	ldrb	r3, [r4, #3]
 800e4d4:	bf18      	it	ne
 800e4d6:	2500      	movne	r5, #0
 800e4d8:	2b10      	cmp	r3, #16
 800e4da:	d022      	beq.n	800e522 <SpiFlashStore::Init()+0xbe>
 800e4dc:	2310      	movs	r3, #16
 800e4de:	70e3      	strb	r3, [r4, #3]
 800e4e0:	2201      	movs	r2, #1
 800e4e2:	2500      	movs	r5, #0
 800e4e4:	f04f 09ff 	mov.w	r9, #255	; 0xff
 800e4e8:	4b28      	ldr	r3, [pc, #160]	; (800e58c <SpiFlashStore::Init()+0x128>)
 800e4ea:	f8df 80a4 	ldr.w	r8, [pc, #164]	; 800e590 <SpiFlashStore::Init()+0x12c>
 800e4ee:	701a      	strb	r2, [r3, #0]
 800e4f0:	4631      	mov	r1, r6
 800e4f2:	4638      	mov	r0, r7
 800e4f4:	f7ff ffa8 	bl	800e448 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800e4f8:	1823      	adds	r3, r4, r0
 800e4fa:	5425      	strb	r5, [r4, r0]
 800e4fc:	705d      	strb	r5, [r3, #1]
 800e4fe:	709d      	strb	r5, [r3, #2]
 800e500:	70dd      	strb	r5, [r3, #3]
 800e502:	f858 3b04 	ldr.w	r3, [r8], #4
 800e506:	1d02      	adds	r2, r0, #4
 800e508:	4403      	add	r3, r0
 800e50a:	429a      	cmp	r2, r3
 800e50c:	d332      	bcc.n	800e574 <SpiFlashStore::Init()+0x110>
 800e50e:	3601      	adds	r6, #1
 800e510:	2e1c      	cmp	r6, #28
 800e512:	d1ed      	bne.n	800e4f0 <SpiFlashStore::Init()+0x8c>
 800e514:	2501      	movs	r5, #1
 800e516:	4b1f      	ldr	r3, [pc, #124]	; (800e594 <SpiFlashStore::Init()+0x130>)
 800e518:	601d      	str	r5, [r3, #0]
 800e51a:	4628      	mov	r0, r5
 800e51c:	b005      	add	sp, #20
 800e51e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e522:	2d00      	cmp	r5, #0
 800e524:	d0dc      	beq.n	800e4e0 <SpiFlashStore::Init()+0x7c>
 800e526:	f04f 0900 	mov.w	r9, #0
 800e52a:	46c8      	mov	r8, r9
 800e52c:	4631      	mov	r1, r6
 800e52e:	4638      	mov	r0, r7
 800e530:	f7ff ff8a 	bl	800e448 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800e534:	5c23      	ldrb	r3, [r4, r0]
 800e536:	2bff      	cmp	r3, #255	; 0xff
 800e538:	d112      	bne.n	800e560 <SpiFlashStore::Init()+0xfc>
 800e53a:	1823      	adds	r3, r4, r0
 800e53c:	785a      	ldrb	r2, [r3, #1]
 800e53e:	2aff      	cmp	r2, #255	; 0xff
 800e540:	d10e      	bne.n	800e560 <SpiFlashStore::Init()+0xfc>
 800e542:	789a      	ldrb	r2, [r3, #2]
 800e544:	2aff      	cmp	r2, #255	; 0xff
 800e546:	d10b      	bne.n	800e560 <SpiFlashStore::Init()+0xfc>
 800e548:	78da      	ldrb	r2, [r3, #3]
 800e54a:	2aff      	cmp	r2, #255	; 0xff
 800e54c:	d108      	bne.n	800e560 <SpiFlashStore::Init()+0xfc>
 800e54e:	46a9      	mov	r9, r5
 800e550:	f804 8000 	strb.w	r8, [r4, r0]
 800e554:	f883 8001 	strb.w	r8, [r3, #1]
 800e558:	f883 8002 	strb.w	r8, [r3, #2]
 800e55c:	f883 8003 	strb.w	r8, [r3, #3]
 800e560:	3601      	adds	r6, #1
 800e562:	2e1c      	cmp	r6, #28
 800e564:	d1e2      	bne.n	800e52c <SpiFlashStore::Init()+0xc8>
 800e566:	f1b9 0f00 	cmp.w	r9, #0
 800e56a:	d0d6      	beq.n	800e51a <SpiFlashStore::Init()+0xb6>
 800e56c:	2201      	movs	r2, #1
 800e56e:	4b09      	ldr	r3, [pc, #36]	; (800e594 <SpiFlashStore::Init()+0x130>)
 800e570:	601a      	str	r2, [r3, #0]
 800e572:	e7d2      	b.n	800e51a <SpiFlashStore::Init()+0xb6>
 800e574:	f804 9002 	strb.w	r9, [r4, r2]
 800e578:	3201      	adds	r2, #1
 800e57a:	e7c6      	b.n	800e50a <SpiFlashStore::Init()+0xa6>
 800e57c:	2500      	movs	r5, #0
 800e57e:	e7cc      	b.n	800e51a <SpiFlashStore::Init()+0xb6>
 800e580:	200129a0 	andcs	r2, r1, r0, lsr #19
 800e584:	20012974 	andcs	r2, r1, r4, ror r9
 800e588:	20011974 	andcs	r1, r1, r4, ror r9
 800e58c:	20012988 	andcs	r2, r1, r8, lsl #19
 800e590:	08016df8 	stmdaeq	r1, {r3, r4, r5, r6, r7, r8, sl, fp, sp, lr}
 800e594:	20012980 	andcs	r2, r1, r0, lsl #19

0800e598 <SpiFlashStore::SpiFlashStore()>:
 800e598:	b538      	push	{r3, r4, r5, lr}
 800e59a:	4b0d      	ldr	r3, [pc, #52]	; (800e5d0 <SpiFlashStore::SpiFlashStore()+0x38>)
 800e59c:	4604      	mov	r4, r0
 800e59e:	6018      	str	r0, [r3, #0]
 800e5a0:	4b0c      	ldr	r3, [pc, #48]	; (800e5d4 <SpiFlashStore::SpiFlashStore()+0x3c>)
 800e5a2:	4d0d      	ldr	r5, [pc, #52]	; (800e5d8 <SpiFlashStore::SpiFlashStore()+0x40>)
 800e5a4:	681b      	ldr	r3, [r3, #0]
 800e5a6:	781b      	ldrb	r3, [r3, #0]
 800e5a8:	b113      	cbz	r3, 800e5b0 <SpiFlashStore::SpiFlashStore()+0x18>
 800e5aa:	f7ff ff5b 	bl	800e464 <SpiFlashStore::Init()>
 800e5ae:	7028      	strb	r0, [r5, #0]
 800e5b0:	782b      	ldrb	r3, [r5, #0]
 800e5b2:	b153      	cbz	r3, 800e5ca <SpiFlashStore::SpiFlashStore()+0x32>
 800e5b4:	2320      	movs	r3, #32
 800e5b6:	2200      	movs	r2, #0
 800e5b8:	4908      	ldr	r1, [pc, #32]	; (800e5dc <SpiFlashStore::SpiFlashStore()+0x44>)
 800e5ba:	f851 0b04 	ldr.w	r0, [r1], #4
 800e5be:	3201      	adds	r2, #1
 800e5c0:	2a1c      	cmp	r2, #28
 800e5c2:	4403      	add	r3, r0
 800e5c4:	d1f9      	bne.n	800e5ba <SpiFlashStore::SpiFlashStore()+0x22>
 800e5c6:	4a06      	ldr	r2, [pc, #24]	; (800e5e0 <SpiFlashStore::SpiFlashStore()+0x48>)
 800e5c8:	6013      	str	r3, [r2, #0]
 800e5ca:	4620      	mov	r0, r4
 800e5cc:	bd38      	pop	{r3, r4, r5, pc}
 800e5ce:	bf00      	nop
 800e5d0:	20012984 	andcs	r2, r1, r4, lsl #19
 800e5d4:	200129a0 	andcs	r2, r1, r0, lsr #19
 800e5d8:	20012978 	andcs	r2, r1, r8, ror r9
 800e5dc:	08016df8 	stmdaeq	r1, {r3, r4, r5, r6, r7, r8, sl, fp, sp, lr}
 800e5e0:	2001297c 	andcs	r2, r1, ip, ror r9

0800e5e4 <SpiFlashStore::ResetSetList(spiflashstore::Store)>:
 800e5e4:	b508      	push	{r3, lr}
 800e5e6:	f7ff ff2f 	bl	800e448 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800e5ea:	2300      	movs	r3, #0
 800e5ec:	4904      	ldr	r1, [pc, #16]	; (800e600 <SpiFlashStore::ResetSetList(spiflashstore::Store)+0x1c>)
 800e5ee:	1842      	adds	r2, r0, r1
 800e5f0:	540b      	strb	r3, [r1, r0]
 800e5f2:	7053      	strb	r3, [r2, #1]
 800e5f4:	7093      	strb	r3, [r2, #2]
 800e5f6:	70d3      	strb	r3, [r2, #3]
 800e5f8:	2201      	movs	r2, #1
 800e5fa:	4b02      	ldr	r3, [pc, #8]	; (800e604 <SpiFlashStore::ResetSetList(spiflashstore::Store)+0x20>)
 800e5fc:	601a      	str	r2, [r3, #0]
 800e5fe:	bd08      	pop	{r3, pc}
 800e600:	20011974 	andcs	r1, r1, r4, ror r9
 800e604:	20012980 	andcs	r2, r1, r0, lsl #19

0800e608 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>:
 800e608:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e60c:	461c      	mov	r4, r3
 800e60e:	4b19      	ldr	r3, [pc, #100]	; (800e674 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x6c>)
 800e610:	4616      	mov	r6, r2
 800e612:	781f      	ldrb	r7, [r3, #0]
 800e614:	9d07      	ldr	r5, [sp, #28]
 800e616:	b307      	cbz	r7, 800e65a <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800e618:	f7ff ff16 	bl	800e448 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800e61c:	f04f 0c00 	mov.w	ip, #0
 800e620:	4a15      	ldr	r2, [pc, #84]	; (800e678 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x70>)
 800e622:	1831      	adds	r1, r6, r0
 800e624:	1e63      	subs	r3, r4, #1
 800e626:	9c06      	ldr	r4, [sp, #24]
 800e628:	4411      	add	r1, r2
 800e62a:	440c      	add	r4, r1
 800e62c:	42a1      	cmp	r1, r4
 800e62e:	d116      	bne.n	800e65e <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x56>
 800e630:	f1bc 0f00 	cmp.w	ip, #0
 800e634:	d011      	beq.n	800e65a <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800e636:	4b11      	ldr	r3, [pc, #68]	; (800e67c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x74>)
 800e638:	6819      	ldr	r1, [r3, #0]
 800e63a:	b109      	cbz	r1, 800e640 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x38>
 800e63c:	2906      	cmp	r1, #6
 800e63e:	d101      	bne.n	800e644 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x3c>
 800e640:	2101      	movs	r1, #1
 800e642:	6019      	str	r1, [r3, #0]
 800e644:	4b0e      	ldr	r3, [pc, #56]	; (800e680 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x78>)
 800e646:	6819      	ldr	r1, [r3, #0]
 800e648:	4b0e      	ldr	r3, [pc, #56]	; (800e684 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x7c>)
 800e64a:	6019      	str	r1, [r3, #0]
 800e64c:	b12e      	cbz	r6, 800e65a <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800e64e:	b125      	cbz	r5, 800e65a <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800e650:	9b08      	ldr	r3, [sp, #32]
 800e652:	4418      	add	r0, r3
 800e654:	5813      	ldr	r3, [r2, r0]
 800e656:	432b      	orrs	r3, r5
 800e658:	5013      	str	r3, [r2, r0]
 800e65a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e65e:	f891 8000 	ldrb.w	r8, [r1]
 800e662:	f813 ef01 	ldrb.w	lr, [r3, #1]!
 800e666:	3101      	adds	r1, #1
 800e668:	45f0      	cmp	r8, lr
 800e66a:	bf1c      	itt	ne
 800e66c:	f801 ec01 	strbne.w	lr, [r1, #-1]
 800e670:	46bc      	movne	ip, r7
 800e672:	e7db      	b.n	800e62c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x24>
 800e674:	20012978 	andcs	r2, r1, r8, ror r9
 800e678:	20011974 	andcs	r1, r1, r4, ror r9
 800e67c:	20012980 	andcs	r2, r1, r0, lsl #19
 800e680:	2001a964 	andcs	sl, r1, r4, ror #18
 800e684:	20011970 	andcs	r1, r1, r0, ror r9

0800e688 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)>:
 800e688:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e68c:	461d      	mov	r5, r3
 800e68e:	4b15      	ldr	r3, [pc, #84]	; (800e6e4 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x5c>)
 800e690:	b085      	sub	sp, #20
 800e692:	781b      	ldrb	r3, [r3, #0]
 800e694:	4607      	mov	r7, r0
 800e696:	4614      	mov	r4, r2
 800e698:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
 800e69c:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 800e6a0:	b193      	cbz	r3, 800e6c8 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x40>
 800e6a2:	f7ff fed1 	bl	800e448 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800e6a6:	4a10      	ldr	r2, [pc, #64]	; (800e6e8 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x60>)
 800e6a8:	eb08 0600 	add.w	r6, r8, r0
 800e6ac:	18b3      	adds	r3, r6, r2
 800e6ae:	f1b9 0f00 	cmp.w	r9, #0
 800e6b2:	d013      	beq.n	800e6dc <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x54>
 800e6b4:	5990      	ldr	r0, [r2, r6]
 800e6b6:	b988      	cbnz	r0, 800e6dc <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x54>
 800e6b8:	e9cd 0001 	strd	r0, r0, [sp, #4]
 800e6bc:	4623      	mov	r3, r4
 800e6be:	4642      	mov	r2, r8
 800e6c0:	4638      	mov	r0, r7
 800e6c2:	9500      	str	r5, [sp, #0]
 800e6c4:	f7ff ffa0 	bl	800e608 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e6c8:	b005      	add	sp, #20
 800e6ca:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e6ce:	f813 2b01 	ldrb.w	r2, [r3], #1
 800e6d2:	f804 2f01 	strb.w	r2, [r4, #1]!
 800e6d6:	429d      	cmp	r5, r3
 800e6d8:	d1f9      	bne.n	800e6ce <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x46>
 800e6da:	e7f5      	b.n	800e6c8 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x40>
 800e6dc:	3c01      	subs	r4, #1
 800e6de:	441d      	add	r5, r3
 800e6e0:	e7f9      	b.n	800e6d6 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x4e>
 800e6e2:	bf00      	nop
 800e6e4:	20012978 	andcs	r2, r1, r8, ror r9
 800e6e8:	20011974 	andcs	r1, r1, r4, ror r9

0800e6ec <SpiFlashStore::Flash()>:
 800e6ec:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e6ee:	4c25      	ldr	r4, [pc, #148]	; (800e784 <SpiFlashStore::Flash()+0x98>)
 800e6f0:	6820      	ldr	r0, [r4, #0]
 800e6f2:	2800      	cmp	r0, #0
 800e6f4:	d043      	beq.n	800e77e <SpiFlashStore::Flash()+0x92>
 800e6f6:	3801      	subs	r0, #1
 800e6f8:	2805      	cmp	r0, #5
 800e6fa:	d831      	bhi.n	800e760 <SpiFlashStore::Flash()+0x74>
 800e6fc:	e8df f000 	tbb	[pc, r0]
 800e700:	2e140b03 	vnmlscs.f64	d0, d4, d3
 800e704:	4b203025 	blmi	881a7a0 <__exidx_end+0x802eac>
 800e708:	681a      	ldr	r2, [r3, #0]
 800e70a:	4b20      	ldr	r3, [pc, #128]	; (800e78c <SpiFlashStore::Flash()+0xa0>)
 800e70c:	601a      	str	r2, [r3, #0]
 800e70e:	2302      	movs	r3, #2
 800e710:	6023      	str	r3, [r4, #0]
 800e712:	2001      	movs	r0, #1
 800e714:	e033      	b.n	800e77e <SpiFlashStore::Flash()+0x92>
 800e716:	4b1c      	ldr	r3, [pc, #112]	; (800e788 <SpiFlashStore::Flash()+0x9c>)
 800e718:	4a1c      	ldr	r2, [pc, #112]	; (800e78c <SpiFlashStore::Flash()+0xa0>)
 800e71a:	681b      	ldr	r3, [r3, #0]
 800e71c:	6812      	ldr	r2, [r2, #0]
 800e71e:	1a9b      	subs	r3, r3, r2
 800e720:	2b63      	cmp	r3, #99	; 0x63
 800e722:	d9f6      	bls.n	800e712 <SpiFlashStore::Flash()+0x26>
 800e724:	2303      	movs	r3, #3
 800e726:	e7f3      	b.n	800e710 <SpiFlashStore::Flash()+0x24>
 800e728:	4919      	ldr	r1, [pc, #100]	; (800e790 <SpiFlashStore::Flash()+0xa4>)
 800e72a:	481a      	ldr	r0, [pc, #104]	; (800e794 <SpiFlashStore::Flash()+0xa8>)
 800e72c:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 800e730:	6809      	ldr	r1, [r1, #0]
 800e732:	6800      	ldr	r0, [r0, #0]
 800e734:	ab03      	add	r3, sp, #12
 800e736:	f000 faa7 	bl	800ec88 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)>
 800e73a:	2800      	cmp	r0, #0
 800e73c:	d0e9      	beq.n	800e712 <SpiFlashStore::Flash()+0x26>
 800e73e:	4b12      	ldr	r3, [pc, #72]	; (800e788 <SpiFlashStore::Flash()+0x9c>)
 800e740:	681a      	ldr	r2, [r3, #0]
 800e742:	4b12      	ldr	r3, [pc, #72]	; (800e78c <SpiFlashStore::Flash()+0xa0>)
 800e744:	601a      	str	r2, [r3, #0]
 800e746:	2305      	movs	r3, #5
 800e748:	e7e2      	b.n	800e710 <SpiFlashStore::Flash()+0x24>
 800e74a:	4b0f      	ldr	r3, [pc, #60]	; (800e788 <SpiFlashStore::Flash()+0x9c>)
 800e74c:	4a0f      	ldr	r2, [pc, #60]	; (800e78c <SpiFlashStore::Flash()+0xa0>)
 800e74e:	681b      	ldr	r3, [r3, #0]
 800e750:	6812      	ldr	r2, [r2, #0]
 800e752:	1a9b      	subs	r3, r3, r2
 800e754:	2b63      	cmp	r3, #99	; 0x63
 800e756:	d9dc      	bls.n	800e712 <SpiFlashStore::Flash()+0x26>
 800e758:	2304      	movs	r3, #4
 800e75a:	e7d9      	b.n	800e710 <SpiFlashStore::Flash()+0x24>
 800e75c:	2306      	movs	r3, #6
 800e75e:	e7d7      	b.n	800e710 <SpiFlashStore::Flash()+0x24>
 800e760:	ab03      	add	r3, sp, #12
 800e762:	4a0d      	ldr	r2, [pc, #52]	; (800e798 <SpiFlashStore::Flash()+0xac>)
 800e764:	490a      	ldr	r1, [pc, #40]	; (800e790 <SpiFlashStore::Flash()+0xa4>)
 800e766:	480b      	ldr	r0, [pc, #44]	; (800e794 <SpiFlashStore::Flash()+0xa8>)
 800e768:	9300      	str	r3, [sp, #0]
 800e76a:	6812      	ldr	r2, [r2, #0]
 800e76c:	4b0b      	ldr	r3, [pc, #44]	; (800e79c <SpiFlashStore::Flash()+0xb0>)
 800e76e:	6809      	ldr	r1, [r1, #0]
 800e770:	6800      	ldr	r0, [r0, #0]
 800e772:	f000 fb29 	bl	800edc8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)>
 800e776:	2800      	cmp	r0, #0
 800e778:	d0cb      	beq.n	800e712 <SpiFlashStore::Flash()+0x26>
 800e77a:	2000      	movs	r0, #0
 800e77c:	6020      	str	r0, [r4, #0]
 800e77e:	b004      	add	sp, #16
 800e780:	bd10      	pop	{r4, pc}
 800e782:	bf00      	nop
 800e784:	20012980 	andcs	r2, r1, r0, lsl #19
 800e788:	2001a964 	andcs	sl, r1, r4, ror #18
 800e78c:	20011970 	andcs	r1, r1, r0, ror r9
 800e790:	20012974 	andcs	r2, r1, r4, ror r9
 800e794:	200129a0 	andcs	r2, r1, r0, lsr #19
 800e798:	2001297c 	andcs	r2, r1, ip, ror r9
 800e79c:	20011974 	andcs	r1, r1, r4, ror r9

0800e7a0 <StoreDisplayUdf::~StoreDisplayUdf()>:
 800e7a0:	4770      	bx	lr
	...

0800e7a4 <StoreDisplayUdf::Copy(displayudfparams::Params*)>:
 800e7a4:	b507      	push	{r0, r1, r2, lr}
 800e7a6:	2300      	movs	r3, #0
 800e7a8:	460a      	mov	r2, r1
 800e7aa:	2101      	movs	r1, #1
 800e7ac:	e9cd 3100 	strd	r3, r1, [sp]
 800e7b0:	4804      	ldr	r0, [pc, #16]	; (800e7c4 <StoreDisplayUdf::Copy(displayudfparams::Params*)+0x20>)
 800e7b2:	2322      	movs	r3, #34	; 0x22
 800e7b4:	210f      	movs	r1, #15
 800e7b6:	6800      	ldr	r0, [r0, #0]
 800e7b8:	f7ff ff66 	bl	800e688 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)>
 800e7bc:	b003      	add	sp, #12
 800e7be:	f85d fb04 	ldr.w	pc, [sp], #4
 800e7c2:	bf00      	nop
 800e7c4:	20012984 	andcs	r2, r1, r4, lsl #19

0800e7c8 <StoreDisplayUdf::Update(displayudfparams::Params const*)>:
 800e7c8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e7ca:	2200      	movs	r2, #0
 800e7cc:	460b      	mov	r3, r1
 800e7ce:	2122      	movs	r1, #34	; 0x22
 800e7d0:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800e7d4:	4804      	ldr	r0, [pc, #16]	; (800e7e8 <StoreDisplayUdf::Update(displayudfparams::Params const*)+0x20>)
 800e7d6:	9100      	str	r1, [sp, #0]
 800e7d8:	6800      	ldr	r0, [r0, #0]
 800e7da:	210f      	movs	r1, #15
 800e7dc:	f7ff ff14 	bl	800e608 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e7e0:	b005      	add	sp, #20
 800e7e2:	f85d fb04 	ldr.w	pc, [sp], #4
 800e7e6:	bf00      	nop
 800e7e8:	20012984 	andcs	r2, r1, r4, lsl #19

0800e7ec <StoreDisplayUdf::~StoreDisplayUdf()>:
 800e7ec:	b510      	push	{r4, lr}
 800e7ee:	4604      	mov	r4, r0
 800e7f0:	f003 feae 	bl	8012550 <operator delete(void*)>
 800e7f4:	4620      	mov	r0, r4
 800e7f6:	bd10      	pop	{r4, pc}

0800e7f8 <StoreDisplayUdf::StoreDisplayUdf()>:
 800e7f8:	4a02      	ldr	r2, [pc, #8]	; (800e804 <StoreDisplayUdf::StoreDisplayUdf()+0xc>)
 800e7fa:	6002      	str	r2, [r0, #0]
 800e7fc:	4a02      	ldr	r2, [pc, #8]	; (800e808 <StoreDisplayUdf::StoreDisplayUdf()+0x10>)
 800e7fe:	6010      	str	r0, [r2, #0]
 800e800:	4770      	bx	lr
 800e802:	bf00      	nop
 800e804:	08016e70 	stmdaeq	r1, {r4, r5, r6, r9, sl, fp, sp, lr}
 800e808:	2001298c 	andcs	r2, r1, ip, lsl #19

0800e80c <StoreNetwork::~StoreNetwork()>:
 800e80c:	4770      	bx	lr

0800e80e <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 800e80e:	3804      	subs	r0, #4
 800e810:	4770      	bx	lr
	...

0800e814 <StoreNetwork::Update(networkparams::Params const*)>:
 800e814:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e816:	2200      	movs	r2, #0
 800e818:	460b      	mov	r3, r1
 800e81a:	215e      	movs	r1, #94	; 0x5e
 800e81c:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800e820:	4804      	ldr	r0, [pc, #16]	; (800e834 <StoreNetwork::Update(networkparams::Params const*)+0x20>)
 800e822:	9100      	str	r1, [sp, #0]
 800e824:	6800      	ldr	r0, [r0, #0]
 800e826:	4611      	mov	r1, r2
 800e828:	f7ff feee 	bl	800e608 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e82c:	b005      	add	sp, #20
 800e82e:	f85d fb04 	ldr.w	pc, [sp], #4
 800e832:	bf00      	nop
 800e834:	20012984 	andcs	r2, r1, r4, lsl #19

0800e838 <StoreNetwork::SaveGatewayIp(unsigned int)>:
 800e838:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800e83a:	2308      	movs	r3, #8
 800e83c:	9105      	str	r1, [sp, #20]
 800e83e:	2100      	movs	r1, #0
 800e840:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800e844:	2304      	movs	r3, #4
 800e846:	4805      	ldr	r0, [pc, #20]	; (800e85c <StoreNetwork::SaveGatewayIp(unsigned int)+0x24>)
 800e848:	9300      	str	r3, [sp, #0]
 800e84a:	220c      	movs	r2, #12
 800e84c:	6800      	ldr	r0, [r0, #0]
 800e84e:	ab05      	add	r3, sp, #20
 800e850:	f7ff feda 	bl	800e608 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e854:	b007      	add	sp, #28
 800e856:	f85d fb04 	ldr.w	pc, [sp], #4
 800e85a:	bf00      	nop
 800e85c:	20012984 	andcs	r2, r1, r4, lsl #19

0800e860 <non-virtual thunk to StoreNetwork::SaveGatewayIp(unsigned int)>:
 800e860:	f1a0 0004 	sub.w	r0, r0, #4
 800e864:	e7e8      	b.n	800e838 <StoreNetwork::SaveGatewayIp(unsigned int)>
 800e866:	bf00      	nop

0800e868 <StoreNetwork::SaveNetMask(unsigned int)>:
 800e868:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800e86a:	2304      	movs	r3, #4
 800e86c:	9105      	str	r1, [sp, #20]
 800e86e:	2100      	movs	r1, #0
 800e870:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800e874:	4804      	ldr	r0, [pc, #16]	; (800e888 <StoreNetwork::SaveNetMask(unsigned int)+0x20>)
 800e876:	9300      	str	r3, [sp, #0]
 800e878:	2208      	movs	r2, #8
 800e87a:	6800      	ldr	r0, [r0, #0]
 800e87c:	ab05      	add	r3, sp, #20
 800e87e:	f7ff fec3 	bl	800e608 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e882:	b007      	add	sp, #28
 800e884:	f85d fb04 	ldr.w	pc, [sp], #4
 800e888:	20012984 	andcs	r2, r1, r4, lsl #19

0800e88c <non-virtual thunk to StoreNetwork::SaveNetMask(unsigned int)>:
 800e88c:	f1a0 0004 	sub.w	r0, r0, #4
 800e890:	e7ea      	b.n	800e868 <StoreNetwork::SaveNetMask(unsigned int)>
 800e892:	bf00      	nop

0800e894 <StoreNetwork::SaveIp(unsigned int)>:
 800e894:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800e896:	2302      	movs	r3, #2
 800e898:	9105      	str	r1, [sp, #20]
 800e89a:	2100      	movs	r1, #0
 800e89c:	2204      	movs	r2, #4
 800e89e:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800e8a2:	4804      	ldr	r0, [pc, #16]	; (800e8b4 <StoreNetwork::SaveIp(unsigned int)+0x20>)
 800e8a4:	9200      	str	r2, [sp, #0]
 800e8a6:	6800      	ldr	r0, [r0, #0]
 800e8a8:	ab05      	add	r3, sp, #20
 800e8aa:	f7ff fead 	bl	800e608 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e8ae:	b007      	add	sp, #28
 800e8b0:	f85d fb04 	ldr.w	pc, [sp], #4
 800e8b4:	20012984 	andcs	r2, r1, r4, lsl #19

0800e8b8 <non-virtual thunk to StoreNetwork::SaveIp(unsigned int)>:
 800e8b8:	f1a0 0004 	sub.w	r0, r0, #4
 800e8bc:	e7ea      	b.n	800e894 <StoreNetwork::SaveIp(unsigned int)>
 800e8be:	bf00      	nop

0800e8c0 <StoreNetwork::SaveHostName(char const*, unsigned int)>:
 800e8c0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e8c2:	460b      	mov	r3, r1
 800e8c4:	2020      	movs	r0, #32
 800e8c6:	2100      	movs	r1, #0
 800e8c8:	2a40      	cmp	r2, #64	; 0x40
 800e8ca:	bf28      	it	cs
 800e8cc:	2240      	movcs	r2, #64	; 0x40
 800e8ce:	e9cd 0101 	strd	r0, r1, [sp, #4]
 800e8d2:	4804      	ldr	r0, [pc, #16]	; (800e8e4 <StoreNetwork::SaveHostName(char const*, unsigned int)+0x24>)
 800e8d4:	9200      	str	r2, [sp, #0]
 800e8d6:	6800      	ldr	r0, [r0, #0]
 800e8d8:	2215      	movs	r2, #21
 800e8da:	f7ff fe95 	bl	800e608 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e8de:	b005      	add	sp, #20
 800e8e0:	f85d fb04 	ldr.w	pc, [sp], #4
 800e8e4:	20012984 	andcs	r2, r1, r4, lsl #19

0800e8e8 <non-virtual thunk to StoreNetwork::SaveHostName(char const*, unsigned int)>:
 800e8e8:	f1a0 0004 	sub.w	r0, r0, #4
 800e8ec:	e7e8      	b.n	800e8c0 <StoreNetwork::SaveHostName(char const*, unsigned int)>
 800e8ee:	bf00      	nop

0800e8f0 <StoreNetwork::~StoreNetwork()>:
 800e8f0:	b510      	push	{r4, lr}
 800e8f2:	4604      	mov	r4, r0
 800e8f4:	f003 fe2c 	bl	8012550 <operator delete(void*)>
 800e8f8:	4620      	mov	r0, r4
 800e8fa:	bd10      	pop	{r4, pc}

0800e8fc <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 800e8fc:	f1a0 0004 	sub.w	r0, r0, #4
 800e900:	e7f6      	b.n	800e8f0 <StoreNetwork::~StoreNetwork()>
	...

0800e904 <StoreNetwork::Copy(networkparams::Params*)>:
 800e904:	b507      	push	{r0, r1, r2, lr}
 800e906:	2301      	movs	r3, #1
 800e908:	460a      	mov	r2, r1
 800e90a:	2100      	movs	r1, #0
 800e90c:	e9cd 1300 	strd	r1, r3, [sp]
 800e910:	4803      	ldr	r0, [pc, #12]	; (800e920 <StoreNetwork::Copy(networkparams::Params*)+0x1c>)
 800e912:	235e      	movs	r3, #94	; 0x5e
 800e914:	6800      	ldr	r0, [r0, #0]
 800e916:	f7ff feb7 	bl	800e688 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)>
 800e91a:	b003      	add	sp, #12
 800e91c:	f85d fb04 	ldr.w	pc, [sp], #4
 800e920:	20012984 	andcs	r2, r1, r4, lsl #19

0800e924 <StoreNetwork::StoreNetwork()>:
 800e924:	4a03      	ldr	r2, [pc, #12]	; (800e934 <StoreNetwork::StoreNetwork()+0x10>)
 800e926:	6002      	str	r2, [r0, #0]
 800e928:	322c      	adds	r2, #44	; 0x2c
 800e92a:	6042      	str	r2, [r0, #4]
 800e92c:	4a02      	ldr	r2, [pc, #8]	; (800e938 <StoreNetwork::StoreNetwork()+0x14>)
 800e92e:	6010      	str	r0, [r2, #0]
 800e930:	4770      	bx	lr
 800e932:	bf00      	nop
 800e934:	08016e88 	stmdaeq	r1, {r3, r7, r9, sl, fp, sp, lr}
 800e938:	20012990 	mulcs	r1, r0, r9

0800e93c <StoreRDMDevice::~StoreRDMDevice()>:
 800e93c:	4770      	bx	lr

0800e93e <non-virtual thunk to StoreRDMDevice::~StoreRDMDevice()>:
 800e93e:	3804      	subs	r0, #4
 800e940:	4770      	bx	lr
	...

0800e944 <StoreRDMDevice::Update(TRDMDeviceParams const*)>:
 800e944:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e946:	2200      	movs	r2, #0
 800e948:	460b      	mov	r3, r1
 800e94a:	2129      	movs	r1, #41	; 0x29
 800e94c:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800e950:	4804      	ldr	r0, [pc, #16]	; (800e964 <StoreRDMDevice::Update(TRDMDeviceParams const*)+0x20>)
 800e952:	9100      	str	r1, [sp, #0]
 800e954:	6800      	ldr	r0, [r0, #0]
 800e956:	210b      	movs	r1, #11
 800e958:	f7ff fe56 	bl	800e608 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e95c:	b005      	add	sp, #20
 800e95e:	f85d fb04 	ldr.w	pc, [sp], #4
 800e962:	bf00      	nop
 800e964:	20012984 	andcs	r2, r1, r4, lsl #19

0800e968 <StoreRDMDevice::SaveLabel(char const*, unsigned char)>:
 800e968:	b570      	push	{r4, r5, r6, lr}
 800e96a:	2401      	movs	r4, #1
 800e96c:	2600      	movs	r6, #0
 800e96e:	4d0c      	ldr	r5, [pc, #48]	; (800e9a0 <StoreRDMDevice::SaveLabel(char const*, unsigned char)+0x38>)
 800e970:	b086      	sub	sp, #24
 800e972:	460b      	mov	r3, r1
 800e974:	6828      	ldr	r0, [r5, #0]
 800e976:	f88d 2017 	strb.w	r2, [sp, #23]
 800e97a:	9200      	str	r2, [sp, #0]
 800e97c:	210b      	movs	r1, #11
 800e97e:	2204      	movs	r2, #4
 800e980:	e9cd 4601 	strd	r4, r6, [sp, #4]
 800e984:	f7ff fe40 	bl	800e608 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e988:	2224      	movs	r2, #36	; 0x24
 800e98a:	210b      	movs	r1, #11
 800e98c:	e9cd 4601 	strd	r4, r6, [sp, #4]
 800e990:	6828      	ldr	r0, [r5, #0]
 800e992:	9400      	str	r4, [sp, #0]
 800e994:	f10d 0317 	add.w	r3, sp, #23
 800e998:	f7ff fe36 	bl	800e608 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e99c:	b006      	add	sp, #24
 800e99e:	bd70      	pop	{r4, r5, r6, pc}
 800e9a0:	20012984 	andcs	r2, r1, r4, lsl #19

0800e9a4 <non-virtual thunk to StoreRDMDevice::SaveLabel(char const*, unsigned char)>:
 800e9a4:	f1a0 0004 	sub.w	r0, r0, #4
 800e9a8:	e7de      	b.n	800e968 <StoreRDMDevice::SaveLabel(char const*, unsigned char)>
 800e9aa:	bf00      	nop

0800e9ac <StoreRDMDevice::~StoreRDMDevice()>:
 800e9ac:	b510      	push	{r4, lr}
 800e9ae:	4604      	mov	r4, r0
 800e9b0:	f003 fdce 	bl	8012550 <operator delete(void*)>
 800e9b4:	4620      	mov	r0, r4
 800e9b6:	bd10      	pop	{r4, pc}

0800e9b8 <non-virtual thunk to StoreRDMDevice::~StoreRDMDevice()>:
 800e9b8:	f1a0 0004 	sub.w	r0, r0, #4
 800e9bc:	e7f6      	b.n	800e9ac <StoreRDMDevice::~StoreRDMDevice()>
	...

0800e9c0 <StoreRDMDevice::Copy(TRDMDeviceParams*)>:
 800e9c0:	b507      	push	{r0, r1, r2, lr}
 800e9c2:	2300      	movs	r3, #0
 800e9c4:	460a      	mov	r2, r1
 800e9c6:	2101      	movs	r1, #1
 800e9c8:	e9cd 3100 	strd	r3, r1, [sp]
 800e9cc:	4804      	ldr	r0, [pc, #16]	; (800e9e0 <StoreRDMDevice::Copy(TRDMDeviceParams*)+0x20>)
 800e9ce:	2329      	movs	r3, #41	; 0x29
 800e9d0:	210b      	movs	r1, #11
 800e9d2:	6800      	ldr	r0, [r0, #0]
 800e9d4:	f7ff fe58 	bl	800e688 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)>
 800e9d8:	b003      	add	sp, #12
 800e9da:	f85d fb04 	ldr.w	pc, [sp], #4
 800e9de:	bf00      	nop
 800e9e0:	20012984 	andcs	r2, r1, r4, lsl #19

0800e9e4 <StoreRDMDevice::StoreRDMDevice()>:
 800e9e4:	4a03      	ldr	r2, [pc, #12]	; (800e9f4 <StoreRDMDevice::StoreRDMDevice()+0x10>)
 800e9e6:	6002      	str	r2, [r0, #0]
 800e9e8:	321c      	adds	r2, #28
 800e9ea:	6042      	str	r2, [r0, #4]
 800e9ec:	4a02      	ldr	r2, [pc, #8]	; (800e9f8 <StoreRDMDevice::StoreRDMDevice()+0x14>)
 800e9ee:	6010      	str	r0, [r2, #0]
 800e9f0:	4770      	bx	lr
 800e9f2:	bf00      	nop
 800e9f4:	08016ed8 	stmdaeq	r1, {r3, r4, r6, r7, r9, sl, fp, sp, lr}
 800e9f8:	20012994 	mulcs	r1, r4, r9

0800e9fc <StoreRemoteConfig::~StoreRemoteConfig()>:
 800e9fc:	4770      	bx	lr
	...

0800ea00 <StoreRemoteConfig::Copy(TRemoteConfigParams*)>:
 800ea00:	b507      	push	{r0, r1, r2, lr}
 800ea02:	2300      	movs	r3, #0
 800ea04:	460a      	mov	r2, r1
 800ea06:	2101      	movs	r1, #1
 800ea08:	e9cd 3100 	strd	r3, r1, [sp]
 800ea0c:	4804      	ldr	r0, [pc, #16]	; (800ea20 <StoreRemoteConfig::Copy(TRemoteConfigParams*)+0x20>)
 800ea0e:	2320      	movs	r3, #32
 800ea10:	210c      	movs	r1, #12
 800ea12:	6800      	ldr	r0, [r0, #0]
 800ea14:	f7ff fe38 	bl	800e688 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)>
 800ea18:	b003      	add	sp, #12
 800ea1a:	f85d fb04 	ldr.w	pc, [sp], #4
 800ea1e:	bf00      	nop
 800ea20:	20012984 	andcs	r2, r1, r4, lsl #19

0800ea24 <StoreRemoteConfig::Update(TRemoteConfigParams const*)>:
 800ea24:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800ea26:	2200      	movs	r2, #0
 800ea28:	460b      	mov	r3, r1
 800ea2a:	2120      	movs	r1, #32
 800ea2c:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800ea30:	4804      	ldr	r0, [pc, #16]	; (800ea44 <StoreRemoteConfig::Update(TRemoteConfigParams const*)+0x20>)
 800ea32:	9100      	str	r1, [sp, #0]
 800ea34:	6800      	ldr	r0, [r0, #0]
 800ea36:	210c      	movs	r1, #12
 800ea38:	f7ff fde6 	bl	800e608 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800ea3c:	b005      	add	sp, #20
 800ea3e:	f85d fb04 	ldr.w	pc, [sp], #4
 800ea42:	bf00      	nop
 800ea44:	20012984 	andcs	r2, r1, r4, lsl #19

0800ea48 <StoreRemoteConfig::~StoreRemoteConfig()>:
 800ea48:	b510      	push	{r4, lr}
 800ea4a:	4604      	mov	r4, r0
 800ea4c:	f003 fd80 	bl	8012550 <operator delete(void*)>
 800ea50:	4620      	mov	r0, r4
 800ea52:	bd10      	pop	{r4, pc}

0800ea54 <StoreRemoteConfig::StoreRemoteConfig()>:
 800ea54:	4a02      	ldr	r2, [pc, #8]	; (800ea60 <StoreRemoteConfig::StoreRemoteConfig()+0xc>)
 800ea56:	6002      	str	r2, [r0, #0]
 800ea58:	4a02      	ldr	r2, [pc, #8]	; (800ea64 <StoreRemoteConfig::StoreRemoteConfig()+0x10>)
 800ea5a:	6010      	str	r0, [r2, #0]
 800ea5c:	4770      	bx	lr
 800ea5e:	bf00      	nop
 800ea60:	08016f08 	stmdaeq	r1, {r3, r8, r9, sl, fp, sp, lr}
 800ea64:	20012998 	mulcs	r1, r8, r9

0800ea68 <StorePixelDmx::~StorePixelDmx()>:
 800ea68:	4770      	bx	lr

0800ea6a <non-virtual thunk to StorePixelDmx::~StorePixelDmx()>:
 800ea6a:	3804      	subs	r0, #4
 800ea6c:	4770      	bx	lr
	...

0800ea70 <StorePixelDmx::Update(pixeldmxparams::Params const*)>:
 800ea70:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800ea72:	2200      	movs	r2, #0
 800ea74:	460b      	mov	r3, r1
 800ea76:	2126      	movs	r1, #38	; 0x26
 800ea78:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800ea7c:	4804      	ldr	r0, [pc, #16]	; (800ea90 <StorePixelDmx::Update(pixeldmxparams::Params const*)+0x20>)
 800ea7e:	9100      	str	r1, [sp, #0]
 800ea80:	6800      	ldr	r0, [r0, #0]
 800ea82:	2103      	movs	r1, #3
 800ea84:	f7ff fdc0 	bl	800e608 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800ea88:	b005      	add	sp, #20
 800ea8a:	f85d fb04 	ldr.w	pc, [sp], #4
 800ea8e:	bf00      	nop
 800ea90:	20012984 	andcs	r2, r1, r4, lsl #19

0800ea94 <StorePixelDmx::SaveDmxStartAddress(unsigned short)>:
 800ea94:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800ea96:	2304      	movs	r3, #4
 800ea98:	2200      	movs	r2, #0
 800ea9a:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800ea9e:	2302      	movs	r3, #2
 800eaa0:	4806      	ldr	r0, [pc, #24]	; (800eabc <StorePixelDmx::SaveDmxStartAddress(unsigned short)+0x28>)
 800eaa2:	9300      	str	r3, [sp, #0]
 800eaa4:	f8ad 1016 	strh.w	r1, [sp, #22]
 800eaa8:	2207      	movs	r2, #7
 800eaaa:	2103      	movs	r1, #3
 800eaac:	6800      	ldr	r0, [r0, #0]
 800eaae:	f10d 0316 	add.w	r3, sp, #22
 800eab2:	f7ff fda9 	bl	800e608 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800eab6:	b007      	add	sp, #28
 800eab8:	f85d fb04 	ldr.w	pc, [sp], #4
 800eabc:	20012984 	andcs	r2, r1, r4, lsl #19

0800eac0 <non-virtual thunk to StorePixelDmx::SaveDmxStartAddress(unsigned short)>:
 800eac0:	f1a0 0004 	sub.w	r0, r0, #4
 800eac4:	e7e6      	b.n	800ea94 <StorePixelDmx::SaveDmxStartAddress(unsigned short)>
 800eac6:	bf00      	nop

0800eac8 <StorePixelDmx::SaveTestPattern(unsigned char)>:
 800eac8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800eaca:	2308      	movs	r3, #8
 800eacc:	2200      	movs	r2, #0
 800eace:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800ead2:	2301      	movs	r3, #1
 800ead4:	4806      	ldr	r0, [pc, #24]	; (800eaf0 <StorePixelDmx::SaveTestPattern(unsigned char)+0x28>)
 800ead6:	9300      	str	r3, [sp, #0]
 800ead8:	f88d 1017 	strb.w	r1, [sp, #23]
 800eadc:	2210      	movs	r2, #16
 800eade:	2103      	movs	r1, #3
 800eae0:	6800      	ldr	r0, [r0, #0]
 800eae2:	f10d 0317 	add.w	r3, sp, #23
 800eae6:	f7ff fd8f 	bl	800e608 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800eaea:	b007      	add	sp, #28
 800eaec:	f85d fb04 	ldr.w	pc, [sp], #4
 800eaf0:	20012984 	andcs	r2, r1, r4, lsl #19

0800eaf4 <non-virtual thunk to StorePixelDmx::SaveTestPattern(unsigned char)>:
 800eaf4:	f1a0 0004 	sub.w	r0, r0, #4
 800eaf8:	e7e6      	b.n	800eac8 <StorePixelDmx::SaveTestPattern(unsigned char)>
 800eafa:	bf00      	nop

0800eafc <StorePixelDmx::SaveMap(unsigned char)>:
 800eafc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800eafe:	f44f 7300 	mov.w	r3, #512	; 0x200
 800eb02:	2200      	movs	r2, #0
 800eb04:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800eb08:	2301      	movs	r3, #1
 800eb0a:	4807      	ldr	r0, [pc, #28]	; (800eb28 <StorePixelDmx::SaveMap(unsigned char)+0x2c>)
 800eb0c:	9300      	str	r3, [sp, #0]
 800eb0e:	f88d 1017 	strb.w	r1, [sp, #23]
 800eb12:	2213      	movs	r2, #19
 800eb14:	2103      	movs	r1, #3
 800eb16:	6800      	ldr	r0, [r0, #0]
 800eb18:	f10d 0317 	add.w	r3, sp, #23
 800eb1c:	f7ff fd74 	bl	800e608 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800eb20:	b007      	add	sp, #28
 800eb22:	f85d fb04 	ldr.w	pc, [sp], #4
 800eb26:	bf00      	nop
 800eb28:	20012984 	andcs	r2, r1, r4, lsl #19

0800eb2c <non-virtual thunk to StorePixelDmx::SaveMap(unsigned char)>:
 800eb2c:	f1a0 0004 	sub.w	r0, r0, #4
 800eb30:	e7e4      	b.n	800eafc <StorePixelDmx::SaveMap(unsigned char)>
 800eb32:	bf00      	nop

0800eb34 <StorePixelDmx::SaveGroupingCount(unsigned short)>:
 800eb34:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800eb36:	f44f 7380 	mov.w	r3, #256	; 0x100
 800eb3a:	2200      	movs	r2, #0
 800eb3c:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800eb40:	2302      	movs	r3, #2
 800eb42:	4807      	ldr	r0, [pc, #28]	; (800eb60 <StorePixelDmx::SaveGroupingCount(unsigned short)+0x2c>)
 800eb44:	9300      	str	r3, [sp, #0]
 800eb46:	f8ad 1016 	strh.w	r1, [sp, #22]
 800eb4a:	2211      	movs	r2, #17
 800eb4c:	2103      	movs	r1, #3
 800eb4e:	6800      	ldr	r0, [r0, #0]
 800eb50:	f10d 0316 	add.w	r3, sp, #22
 800eb54:	f7ff fd58 	bl	800e608 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800eb58:	b007      	add	sp, #28
 800eb5a:	f85d fb04 	ldr.w	pc, [sp], #4
 800eb5e:	bf00      	nop
 800eb60:	20012984 	andcs	r2, r1, r4, lsl #19

0800eb64 <non-virtual thunk to StorePixelDmx::SaveGroupingCount(unsigned short)>:
 800eb64:	f1a0 0004 	sub.w	r0, r0, #4
 800eb68:	e7e4      	b.n	800eb34 <StorePixelDmx::SaveGroupingCount(unsigned short)>
 800eb6a:	bf00      	nop

0800eb6c <StorePixelDmx::SaveCount(unsigned short)>:
 800eb6c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800eb6e:	2302      	movs	r3, #2
 800eb70:	2200      	movs	r2, #0
 800eb72:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800eb76:	4807      	ldr	r0, [pc, #28]	; (800eb94 <StorePixelDmx::SaveCount(unsigned short)+0x28>)
 800eb78:	9300      	str	r3, [sp, #0]
 800eb7a:	f8ad 1016 	strh.w	r1, [sp, #22]
 800eb7e:	2205      	movs	r2, #5
 800eb80:	2103      	movs	r1, #3
 800eb82:	6800      	ldr	r0, [r0, #0]
 800eb84:	f10d 0316 	add.w	r3, sp, #22
 800eb88:	f7ff fd3e 	bl	800e608 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800eb8c:	b007      	add	sp, #28
 800eb8e:	f85d fb04 	ldr.w	pc, [sp], #4
 800eb92:	bf00      	nop
 800eb94:	20012984 	andcs	r2, r1, r4, lsl #19

0800eb98 <non-virtual thunk to StorePixelDmx::SaveCount(unsigned short)>:
 800eb98:	f1a0 0004 	sub.w	r0, r0, #4
 800eb9c:	e7e6      	b.n	800eb6c <StorePixelDmx::SaveCount(unsigned short)>
 800eb9e:	bf00      	nop

0800eba0 <StorePixelDmx::SaveType(unsigned char)>:
 800eba0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800eba2:	2301      	movs	r3, #1
 800eba4:	2200      	movs	r2, #0
 800eba6:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800ebaa:	4807      	ldr	r0, [pc, #28]	; (800ebc8 <StorePixelDmx::SaveType(unsigned char)+0x28>)
 800ebac:	9300      	str	r3, [sp, #0]
 800ebae:	f88d 1017 	strb.w	r1, [sp, #23]
 800ebb2:	2204      	movs	r2, #4
 800ebb4:	2103      	movs	r1, #3
 800ebb6:	6800      	ldr	r0, [r0, #0]
 800ebb8:	f10d 0317 	add.w	r3, sp, #23
 800ebbc:	f7ff fd24 	bl	800e608 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800ebc0:	b007      	add	sp, #28
 800ebc2:	f85d fb04 	ldr.w	pc, [sp], #4
 800ebc6:	bf00      	nop
 800ebc8:	20012984 	andcs	r2, r1, r4, lsl #19

0800ebcc <non-virtual thunk to StorePixelDmx::SaveType(unsigned char)>:
 800ebcc:	f1a0 0004 	sub.w	r0, r0, #4
 800ebd0:	e7e6      	b.n	800eba0 <StorePixelDmx::SaveType(unsigned char)>
 800ebd2:	bf00      	nop

0800ebd4 <StorePixelDmx::~StorePixelDmx()>:
 800ebd4:	b510      	push	{r4, lr}
 800ebd6:	4604      	mov	r4, r0
 800ebd8:	f003 fcba 	bl	8012550 <operator delete(void*)>
 800ebdc:	4620      	mov	r0, r4
 800ebde:	bd10      	pop	{r4, pc}

0800ebe0 <non-virtual thunk to StorePixelDmx::~StorePixelDmx()>:
 800ebe0:	f1a0 0004 	sub.w	r0, r0, #4
 800ebe4:	e7f6      	b.n	800ebd4 <StorePixelDmx::~StorePixelDmx()>
	...

0800ebe8 <StorePixelDmx::Copy(pixeldmxparams::Params*)>:
 800ebe8:	b507      	push	{r0, r1, r2, lr}
 800ebea:	2300      	movs	r3, #0
 800ebec:	460a      	mov	r2, r1
 800ebee:	2101      	movs	r1, #1
 800ebf0:	e9cd 3100 	strd	r3, r1, [sp]
 800ebf4:	4804      	ldr	r0, [pc, #16]	; (800ec08 <StorePixelDmx::Copy(pixeldmxparams::Params*)+0x20>)
 800ebf6:	2326      	movs	r3, #38	; 0x26
 800ebf8:	2103      	movs	r1, #3
 800ebfa:	6800      	ldr	r0, [r0, #0]
 800ebfc:	f7ff fd44 	bl	800e688 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)>
 800ec00:	b003      	add	sp, #12
 800ec02:	f85d fb04 	ldr.w	pc, [sp], #4
 800ec06:	bf00      	nop
 800ec08:	20012984 	andcs	r2, r1, r4, lsl #19

0800ec0c <StorePixelDmx::StorePixelDmx()>:
 800ec0c:	4a03      	ldr	r2, [pc, #12]	; (800ec1c <StorePixelDmx::StorePixelDmx()+0x10>)
 800ec0e:	6002      	str	r2, [r0, #0]
 800ec10:	3230      	adds	r2, #48	; 0x30
 800ec12:	6042      	str	r2, [r0, #4]
 800ec14:	4a02      	ldr	r2, [pc, #8]	; (800ec20 <StorePixelDmx::StorePixelDmx()+0x14>)
 800ec16:	6010      	str	r0, [r2, #0]
 800ec18:	4770      	bx	lr
 800ec1a:	bf00      	nop
 800ec1c:	08016f20 	stmdaeq	r1, {r5, r8, r9, sl, fp, sp, lr}
 800ec20:	2001299c 	mulcs	r1, ip, r9

0800ec24 <FlashRom::FlashRom()>:
 800ec24:	4b07      	ldr	r3, [pc, #28]	; (800ec44 <FlashRom::FlashRom()+0x20>)
 800ec26:	b510      	push	{r4, lr}
 800ec28:	6018      	str	r0, [r3, #0]
 800ec2a:	2301      	movs	r3, #1
 800ec2c:	4604      	mov	r4, r0
 800ec2e:	7003      	strb	r3, [r0, #0]
 800ec30:	4b05      	ldr	r3, [pc, #20]	; (800ec48 <FlashRom::FlashRom()+0x24>)
 800ec32:	4906      	ldr	r1, [pc, #24]	; (800ec4c <FlashRom::FlashRom()+0x28>)
 800ec34:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800ec38:	4805      	ldr	r0, [pc, #20]	; (800ec50 <FlashRom::FlashRom()+0x2c>)
 800ec3a:	029a      	lsls	r2, r3, #10
 800ec3c:	f7fa fc98 	bl	8009570 <printf>
 800ec40:	4620      	mov	r0, r4
 800ec42:	bd10      	pop	{r4, pc}
 800ec44:	200129a0 	andcs	r2, r1, r0, lsr #19
 800ec48:	1ffff700 	svcne	0x00fff700
 800ec4c:	08015394 	stmdaeq	r1, {r2, r4, r7, r8, r9, ip, lr}
 800ec50:	08016f70 	stmdaeq	r1, {r4, r5, r6, r8, r9, sl, fp, sp, lr}

0800ec54 <FlashRom::GetSize() const>:
 800ec54:	4b02      	ldr	r3, [pc, #8]	; (800ec60 <FlashRom::GetSize() const+0xc>)
 800ec56:	f8b3 00e0 	ldrh.w	r0, [r3, #224]	; 0xe0
 800ec5a:	0280      	lsls	r0, r0, #10
 800ec5c:	4770      	bx	lr
 800ec5e:	bf00      	nop
 800ec60:	1ffff700 	svcne	0x00fff700

0800ec64 <FlashRom::GetSectorSize() const>:
 800ec64:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 800ec68:	4770      	bx	lr

0800ec6a <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)>:
 800ec6a:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800ec6e:	441a      	add	r2, r3
 800ec70:	4293      	cmp	r3, r2
 800ec72:	d104      	bne.n	800ec7e <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)+0x14>
 800ec74:	2200      	movs	r2, #0
 800ec76:	9b00      	ldr	r3, [sp, #0]
 800ec78:	2001      	movs	r0, #1
 800ec7a:	601a      	str	r2, [r3, #0]
 800ec7c:	4770      	bx	lr
 800ec7e:	f851 0b04 	ldr.w	r0, [r1], #4
 800ec82:	f843 0b04 	str.w	r0, [r3], #4
 800ec86:	e7f3      	b.n	800ec70 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)+0x6>

0800ec88 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)>:
 800ec88:	2000      	movs	r0, #0
 800ec8a:	b538      	push	{r3, r4, r5, lr}
 800ec8c:	4c47      	ldr	r4, [pc, #284]	; (800edac <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x124>)
 800ec8e:	6018      	str	r0, [r3, #0]
 800ec90:	6823      	ldr	r3, [r4, #0]
 800ec92:	2b04      	cmp	r3, #4
 800ec94:	f200 8082 	bhi.w	800ed9c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x114>
 800ec98:	e8df f003 	tbb	[pc, r3]
 800ec9c:	78452003 	stmdavc	r5, {r0, r1, sp}^
 800eca0:	4b430080 	blmi	90ceea8 <__exidx_end+0x10b75b4>
 800eca4:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800eca8:	6019      	str	r1, [r3, #0]
 800ecaa:	4b42      	ldr	r3, [pc, #264]	; (800edb4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800ecac:	601a      	str	r2, [r3, #0]
 800ecae:	4b42      	ldr	r3, [pc, #264]	; (800edb8 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x130>)
 800ecb0:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800ecb4:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800ecb8:	4b40      	ldr	r3, [pc, #256]	; (800edbc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800ecba:	d807      	bhi.n	800eccc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x44>
 800ecbc:	2201      	movs	r2, #1
 800ecbe:	701a      	strb	r2, [r3, #0]
 800ecc0:	f003 ffb0 	bl	8012c24 <fmc_bank0_unlock>
 800ecc4:	2301      	movs	r3, #1
 800ecc6:	6023      	str	r3, [r4, #0]
 800ecc8:	2000      	movs	r0, #0
 800ecca:	e026      	b.n	800ed1a <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x92>
 800eccc:	4a3c      	ldr	r2, [pc, #240]	; (800edc0 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x138>)
 800ecce:	4291      	cmp	r1, r2
 800ecd0:	d3f4      	bcc.n	800ecbc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x34>
 800ecd2:	2200      	movs	r2, #0
 800ecd4:	701a      	strb	r2, [r3, #0]
 800ecd6:	f003 ffb3 	bl	8012c40 <fmc_bank1_unlock>
 800ecda:	e7f3      	b.n	800ecc4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 800ecdc:	4d37      	ldr	r5, [pc, #220]	; (800edbc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800ecde:	782b      	ldrb	r3, [r5, #0]
 800ece0:	b15b      	cbz	r3, 800ecfa <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x72>
 800ece2:	f003 ffcb 	bl	8012c7c <fmc_bank0_state_get>
 800ece6:	2801      	cmp	r0, #1
 800ece8:	d0ee      	beq.n	800ecc8 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x40>
 800ecea:	7829      	ldrb	r1, [r5, #0]
 800ecec:	4b35      	ldr	r3, [pc, #212]	; (800edc4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800ecee:	b939      	cbnz	r1, 800ed00 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x78>
 800ecf0:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800ecf2:	f022 0202 	bic.w	r2, r2, #2
 800ecf6:	651a      	str	r2, [r3, #80]	; 0x50
 800ecf8:	e006      	b.n	800ed08 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x80>
 800ecfa:	f003 ffd1 	bl	8012ca0 <fmc_bank1_state_get>
 800ecfe:	e7f2      	b.n	800ece6 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x5e>
 800ed00:	691a      	ldr	r2, [r3, #16]
 800ed02:	f022 0202 	bic.w	r2, r2, #2
 800ed06:	611a      	str	r2, [r3, #16]
 800ed08:	4b2a      	ldr	r3, [pc, #168]	; (800edb4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800ed0a:	681b      	ldr	r3, [r3, #0]
 800ed0c:	b94b      	cbnz	r3, 800ed22 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x9a>
 800ed0e:	b129      	cbz	r1, 800ed1c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x94>
 800ed10:	f003 ffa4 	bl	8012c5c <fmc_bank0_lock>
 800ed14:	2300      	movs	r3, #0
 800ed16:	2001      	movs	r0, #1
 800ed18:	6023      	str	r3, [r4, #0]
 800ed1a:	bd38      	pop	{r3, r4, r5, pc}
 800ed1c:	f003 ffa6 	bl	8012c6c <fmc_bank1_lock>
 800ed20:	e7f8      	b.n	800ed14 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x8c>
 800ed22:	2302      	movs	r3, #2
 800ed24:	e7cf      	b.n	800ecc6 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3e>
 800ed26:	4923      	ldr	r1, [pc, #140]	; (800edb4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800ed28:	680b      	ldr	r3, [r1, #0]
 800ed2a:	2b00      	cmp	r3, #0
 800ed2c:	d0ca      	beq.n	800ecc4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 800ed2e:	4b23      	ldr	r3, [pc, #140]	; (800edbc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800ed30:	4a1f      	ldr	r2, [pc, #124]	; (800edb0 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x128>)
 800ed32:	7818      	ldrb	r0, [r3, #0]
 800ed34:	4b23      	ldr	r3, [pc, #140]	; (800edc4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800ed36:	b190      	cbz	r0, 800ed5e <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0xd6>
 800ed38:	6918      	ldr	r0, [r3, #16]
 800ed3a:	f040 0002 	orr.w	r0, r0, #2
 800ed3e:	6118      	str	r0, [r3, #16]
 800ed40:	6810      	ldr	r0, [r2, #0]
 800ed42:	6158      	str	r0, [r3, #20]
 800ed44:	6918      	ldr	r0, [r3, #16]
 800ed46:	f040 0040 	orr.w	r0, r0, #64	; 0x40
 800ed4a:	6118      	str	r0, [r3, #16]
 800ed4c:	680b      	ldr	r3, [r1, #0]
 800ed4e:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 800ed52:	600b      	str	r3, [r1, #0]
 800ed54:	6813      	ldr	r3, [r2, #0]
 800ed56:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800ed5a:	6013      	str	r3, [r2, #0]
 800ed5c:	e7b2      	b.n	800ecc4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 800ed5e:	6d18      	ldr	r0, [r3, #80]	; 0x50
 800ed60:	f040 0002 	orr.w	r0, r0, #2
 800ed64:	6518      	str	r0, [r3, #80]	; 0x50
 800ed66:	6810      	ldr	r0, [r2, #0]
 800ed68:	6558      	str	r0, [r3, #84]	; 0x54
 800ed6a:	69dd      	ldr	r5, [r3, #28]
 800ed6c:	07ad      	lsls	r5, r5, #30
 800ed6e:	bf48      	it	mi
 800ed70:	6158      	strmi	r0, [r3, #20]
 800ed72:	4814      	ldr	r0, [pc, #80]	; (800edc4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800ed74:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800ed76:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800ed7a:	6503      	str	r3, [r0, #80]	; 0x50
 800ed7c:	680b      	ldr	r3, [r1, #0]
 800ed7e:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
 800ed82:	600b      	str	r3, [r1, #0]
 800ed84:	6813      	ldr	r3, [r2, #0]
 800ed86:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800ed8a:	e7e6      	b.n	800ed5a <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0xd2>
 800ed8c:	4b0b      	ldr	r3, [pc, #44]	; (800edbc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800ed8e:	781a      	ldrb	r2, [r3, #0]
 800ed90:	4b0c      	ldr	r3, [pc, #48]	; (800edc4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800ed92:	b132      	cbz	r2, 800eda2 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x11a>
 800ed94:	691a      	ldr	r2, [r3, #16]
 800ed96:	f022 0201 	bic.w	r2, r2, #1
 800ed9a:	611a      	str	r2, [r3, #16]
 800ed9c:	2000      	movs	r0, #0
 800ed9e:	6020      	str	r0, [r4, #0]
 800eda0:	e7bb      	b.n	800ed1a <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x92>
 800eda2:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800eda4:	f022 0201 	bic.w	r2, r2, #1
 800eda8:	651a      	str	r2, [r3, #80]	; 0x50
 800edaa:	e7f7      	b.n	800ed9c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x114>
 800edac:	200129a8 	andcs	r2, r1, r8, lsr #19
 800edb0:	200129ac 	andcs	r2, r1, ip, lsr #19
 800edb4:	200129b8 			; <UNDEFINED> instruction: 0x200129b8
 800edb8:	1ffff700 	svcne	0x00fff700
 800edbc:	200129b4 			; <UNDEFINED> instruction: 0x200129b4
 800edc0:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 800edc4:	40022000 	andmi	r2, r2, r0

0800edc8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)>:
 800edc8:	b570      	push	{r4, r5, r6, lr}
 800edca:	2400      	movs	r4, #0
 800edcc:	9804      	ldr	r0, [sp, #16]
 800edce:	6004      	str	r4, [r0, #0]
 800edd0:	4c48      	ldr	r4, [pc, #288]	; (800eef4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x12c>)
 800edd2:	6820      	ldr	r0, [r4, #0]
 800edd4:	2804      	cmp	r0, #4
 800edd6:	d848      	bhi.n	800ee6a <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xa2>
 800edd8:	e8df f000 	tbb	[pc, r0]
 800eddc:	22847c03 	addcs	r7, r4, #768	; 0x300
 800ede0:	48450047 	stmdami	r5, {r0, r1, r2, r6}^
 800ede4:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800ede8:	6001      	str	r1, [r0, #0]
 800edea:	4844      	ldr	r0, [pc, #272]	; (800eefc <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 800edec:	6003      	str	r3, [r0, #0]
 800edee:	4b44      	ldr	r3, [pc, #272]	; (800ef00 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 800edf0:	601a      	str	r2, [r3, #0]
 800edf2:	4b44      	ldr	r3, [pc, #272]	; (800ef04 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x13c>)
 800edf4:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800edf8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800edfc:	4b42      	ldr	r3, [pc, #264]	; (800ef08 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800edfe:	d807      	bhi.n	800ee10 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x48>
 800ee00:	2201      	movs	r2, #1
 800ee02:	701a      	strb	r2, [r3, #0]
 800ee04:	f003 ff0e 	bl	8012c24 <fmc_bank0_unlock>
 800ee08:	2303      	movs	r3, #3
 800ee0a:	6023      	str	r3, [r4, #0]
 800ee0c:	2000      	movs	r0, #0
 800ee0e:	e026      	b.n	800ee5e <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x96>
 800ee10:	4a3e      	ldr	r2, [pc, #248]	; (800ef0c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x144>)
 800ee12:	4291      	cmp	r1, r2
 800ee14:	d3f4      	bcc.n	800ee00 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x38>
 800ee16:	2200      	movs	r2, #0
 800ee18:	701a      	strb	r2, [r3, #0]
 800ee1a:	f003 ff11 	bl	8012c40 <fmc_bank1_unlock>
 800ee1e:	e7f3      	b.n	800ee08 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800ee20:	4d39      	ldr	r5, [pc, #228]	; (800ef08 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800ee22:	782b      	ldrb	r3, [r5, #0]
 800ee24:	b15b      	cbz	r3, 800ee3e <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x76>
 800ee26:	f003 ff29 	bl	8012c7c <fmc_bank0_state_get>
 800ee2a:	2801      	cmp	r0, #1
 800ee2c:	d0ee      	beq.n	800ee0c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x44>
 800ee2e:	7829      	ldrb	r1, [r5, #0]
 800ee30:	4b37      	ldr	r3, [pc, #220]	; (800ef10 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800ee32:	b939      	cbnz	r1, 800ee44 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x7c>
 800ee34:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800ee36:	f022 0201 	bic.w	r2, r2, #1
 800ee3a:	651a      	str	r2, [r3, #80]	; 0x50
 800ee3c:	e006      	b.n	800ee4c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x84>
 800ee3e:	f003 ff2f 	bl	8012ca0 <fmc_bank1_state_get>
 800ee42:	e7f2      	b.n	800ee2a <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x62>
 800ee44:	691a      	ldr	r2, [r3, #16]
 800ee46:	f022 0201 	bic.w	r2, r2, #1
 800ee4a:	611a      	str	r2, [r3, #16]
 800ee4c:	4b2c      	ldr	r3, [pc, #176]	; (800ef00 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 800ee4e:	681b      	ldr	r3, [r3, #0]
 800ee50:	b94b      	cbnz	r3, 800ee66 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x9e>
 800ee52:	b129      	cbz	r1, 800ee60 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x98>
 800ee54:	f003 ff02 	bl	8012c5c <fmc_bank0_lock>
 800ee58:	2300      	movs	r3, #0
 800ee5a:	2001      	movs	r0, #1
 800ee5c:	6023      	str	r3, [r4, #0]
 800ee5e:	bd70      	pop	{r4, r5, r6, pc}
 800ee60:	f003 ff04 	bl	8012c6c <fmc_bank1_lock>
 800ee64:	e7f8      	b.n	800ee58 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x90>
 800ee66:	2304      	movs	r3, #4
 800ee68:	e7cf      	b.n	800ee0a <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x42>
 800ee6a:	4a25      	ldr	r2, [pc, #148]	; (800ef00 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 800ee6c:	6813      	ldr	r3, [r2, #0]
 800ee6e:	2b03      	cmp	r3, #3
 800ee70:	d91a      	bls.n	800eea8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xe0>
 800ee72:	4b25      	ldr	r3, [pc, #148]	; (800ef08 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800ee74:	7819      	ldrb	r1, [r3, #0]
 800ee76:	4b26      	ldr	r3, [pc, #152]	; (800ef10 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800ee78:	b189      	cbz	r1, 800ee9e <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xd6>
 800ee7a:	6919      	ldr	r1, [r3, #16]
 800ee7c:	f041 0101 	orr.w	r1, r1, #1
 800ee80:	6119      	str	r1, [r3, #16]
 800ee82:	4d1e      	ldr	r5, [pc, #120]	; (800eefc <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 800ee84:	481c      	ldr	r0, [pc, #112]	; (800eef8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x130>)
 800ee86:	6829      	ldr	r1, [r5, #0]
 800ee88:	6803      	ldr	r3, [r0, #0]
 800ee8a:	f851 6b04 	ldr.w	r6, [r1], #4
 800ee8e:	f843 6b04 	str.w	r6, [r3], #4
 800ee92:	6003      	str	r3, [r0, #0]
 800ee94:	6813      	ldr	r3, [r2, #0]
 800ee96:	6029      	str	r1, [r5, #0]
 800ee98:	3b04      	subs	r3, #4
 800ee9a:	6013      	str	r3, [r2, #0]
 800ee9c:	e7b4      	b.n	800ee08 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800ee9e:	6d19      	ldr	r1, [r3, #80]	; 0x50
 800eea0:	f041 0101 	orr.w	r1, r1, #1
 800eea4:	6519      	str	r1, [r3, #80]	; 0x50
 800eea6:	e7ec      	b.n	800ee82 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xba>
 800eea8:	2b00      	cmp	r3, #0
 800eeaa:	d0ad      	beq.n	800ee08 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800eeac:	4b16      	ldr	r3, [pc, #88]	; (800ef08 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800eeae:	781a      	ldrb	r2, [r3, #0]
 800eeb0:	4b17      	ldr	r3, [pc, #92]	; (800ef10 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800eeb2:	b152      	cbz	r2, 800eeca <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x102>
 800eeb4:	691a      	ldr	r2, [r3, #16]
 800eeb6:	f042 0201 	orr.w	r2, r2, #1
 800eeba:	611a      	str	r2, [r3, #16]
 800eebc:	4a0f      	ldr	r2, [pc, #60]	; (800eefc <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 800eebe:	4b0e      	ldr	r3, [pc, #56]	; (800eef8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x130>)
 800eec0:	6812      	ldr	r2, [r2, #0]
 800eec2:	681b      	ldr	r3, [r3, #0]
 800eec4:	6812      	ldr	r2, [r2, #0]
 800eec6:	601a      	str	r2, [r3, #0]
 800eec8:	e79e      	b.n	800ee08 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800eeca:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800eecc:	f042 0201 	orr.w	r2, r2, #1
 800eed0:	651a      	str	r2, [r3, #80]	; 0x50
 800eed2:	e7f3      	b.n	800eebc <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xf4>
 800eed4:	4b0c      	ldr	r3, [pc, #48]	; (800ef08 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800eed6:	781a      	ldrb	r2, [r3, #0]
 800eed8:	4b0d      	ldr	r3, [pc, #52]	; (800ef10 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800eeda:	b132      	cbz	r2, 800eeea <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x122>
 800eedc:	691a      	ldr	r2, [r3, #16]
 800eede:	f022 0202 	bic.w	r2, r2, #2
 800eee2:	611a      	str	r2, [r3, #16]
 800eee4:	2000      	movs	r0, #0
 800eee6:	6020      	str	r0, [r4, #0]
 800eee8:	e7b9      	b.n	800ee5e <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x96>
 800eeea:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800eeec:	f022 0202 	bic.w	r2, r2, #2
 800eef0:	651a      	str	r2, [r3, #80]	; 0x50
 800eef2:	e7f7      	b.n	800eee4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x11c>
 800eef4:	200129a8 	andcs	r2, r1, r8, lsr #19
 800eef8:	200129a4 	andcs	r2, r1, r4, lsr #19
 800eefc:	200129b0 			; <UNDEFINED> instruction: 0x200129b0
 800ef00:	200129b8 			; <UNDEFINED> instruction: 0x200129b8
 800ef04:	1ffff700 	svcne	0x00fff700
 800ef08:	200129b4 			; <UNDEFINED> instruction: 0x200129b4
 800ef0c:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 800ef10:	40022000 	andmi	r2, r2, r0

0800ef14 <net_set_ip>:
 800ef14:	b510      	push	{r4, lr}
 800ef16:	4c05      	ldr	r4, [pc, #20]	; (800ef2c <net_set_ip+0x18>)
 800ef18:	6020      	str	r0, [r4, #0]
 800ef1a:	4621      	mov	r1, r4
 800ef1c:	4804      	ldr	r0, [pc, #16]	; (800ef30 <net_set_ip+0x1c>)
 800ef1e:	f7f8 f9fd 	bl	800731c <arp_init>
 800ef22:	4620      	mov	r0, r4
 800ef24:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ef28:	f002 b888 	b.w	801103c <ip_set_ip>
 800ef2c:	200129bc 			; <UNDEFINED> instruction: 0x200129bc
 800ef30:	200129c8 	andcs	r2, r1, r8, asr #19

0800ef34 <net_set_dhcp>:
 800ef34:	b570      	push	{r4, r5, r6, lr}
 800ef36:	2400      	movs	r4, #0
 800ef38:	4605      	mov	r5, r0
 800ef3a:	7014      	strb	r4, [r2, #0]
 800ef3c:	4616      	mov	r6, r2
 800ef3e:	4810      	ldr	r0, [pc, #64]	; (800ef80 <net_set_dhcp+0x4c>)
 800ef40:	460a      	mov	r2, r1
 800ef42:	4910      	ldr	r1, [pc, #64]	; (800ef84 <net_set_dhcp+0x50>)
 800ef44:	f001 fe5a 	bl	8010bfc <dhcp_client>
 800ef48:	42a0      	cmp	r0, r4
 800ef4a:	da17      	bge.n	800ef7c <net_set_dhcp+0x48>
 800ef4c:	480d      	ldr	r0, [pc, #52]	; (800ef84 <net_set_dhcp+0x50>)
 800ef4e:	f000 f859 	bl	800f004 <rfc3927>
 800ef52:	7030      	strb	r0, [r6, #0]
 800ef54:	490b      	ldr	r1, [pc, #44]	; (800ef84 <net_set_dhcp+0x50>)
 800ef56:	480a      	ldr	r0, [pc, #40]	; (800ef80 <net_set_dhcp+0x4c>)
 800ef58:	f7f8 f9e0 	bl	800731c <arp_init>
 800ef5c:	4809      	ldr	r0, [pc, #36]	; (800ef84 <net_set_dhcp+0x50>)
 800ef5e:	f002 f86d 	bl	801103c <ip_set_ip>
 800ef62:	4a08      	ldr	r2, [pc, #32]	; (800ef84 <net_set_dhcp+0x50>)
 800ef64:	1e6b      	subs	r3, r5, #1
 800ef66:	350b      	adds	r5, #11
 800ef68:	f812 1b01 	ldrb.w	r1, [r2], #1
 800ef6c:	f803 1f01 	strb.w	r1, [r3, #1]!
 800ef70:	42ab      	cmp	r3, r5
 800ef72:	d1f9      	bne.n	800ef68 <net_set_dhcp+0x34>
 800ef74:	4b04      	ldr	r3, [pc, #16]	; (800ef88 <net_set_dhcp+0x54>)
 800ef76:	4620      	mov	r0, r4
 800ef78:	701c      	strb	r4, [r3, #0]
 800ef7a:	bd70      	pop	{r4, r5, r6, pc}
 800ef7c:	2401      	movs	r4, #1
 800ef7e:	e7e9      	b.n	800ef54 <net_set_dhcp+0x20>
 800ef80:	200129c8 	andcs	r2, r1, r8, asr #19
 800ef84:	200129bc 			; <UNDEFINED> instruction: 0x200129bc
 800ef88:	200129ce 	andcs	r2, r1, lr, asr #19

0800ef8c <net_dhcp_release>:
 800ef8c:	b508      	push	{r3, lr}
 800ef8e:	f001 ff3d 	bl	8010e0c <dhcp_client_release>
 800ef92:	2200      	movs	r2, #0
 800ef94:	4b01      	ldr	r3, [pc, #4]	; (800ef9c <net_dhcp_release+0x10>)
 800ef96:	701a      	strb	r2, [r3, #0]
 800ef98:	bd08      	pop	{r3, pc}
 800ef9a:	bf00      	nop
 800ef9c:	200129ce 	andcs	r2, r1, lr, asr #19

0800efa0 <net_set_zeroconf>:
 800efa0:	b538      	push	{r3, r4, r5, lr}
 800efa2:	4604      	mov	r4, r0
 800efa4:	480c      	ldr	r0, [pc, #48]	; (800efd8 <net_set_zeroconf+0x38>)
 800efa6:	f000 f82d 	bl	800f004 <rfc3927>
 800efaa:	4605      	mov	r5, r0
 800efac:	b190      	cbz	r0, 800efd4 <net_set_zeroconf+0x34>
 800efae:	490a      	ldr	r1, [pc, #40]	; (800efd8 <net_set_zeroconf+0x38>)
 800efb0:	480a      	ldr	r0, [pc, #40]	; (800efdc <net_set_zeroconf+0x3c>)
 800efb2:	f7f8 f9b3 	bl	800731c <arp_init>
 800efb6:	4808      	ldr	r0, [pc, #32]	; (800efd8 <net_set_zeroconf+0x38>)
 800efb8:	f002 f840 	bl	801103c <ip_set_ip>
 800efbc:	4a06      	ldr	r2, [pc, #24]	; (800efd8 <net_set_zeroconf+0x38>)
 800efbe:	1e63      	subs	r3, r4, #1
 800efc0:	340b      	adds	r4, #11
 800efc2:	f812 1b01 	ldrb.w	r1, [r2], #1
 800efc6:	f803 1f01 	strb.w	r1, [r3, #1]!
 800efca:	42a3      	cmp	r3, r4
 800efcc:	d1f9      	bne.n	800efc2 <net_set_zeroconf+0x22>
 800efce:	2200      	movs	r2, #0
 800efd0:	4b03      	ldr	r3, [pc, #12]	; (800efe0 <net_set_zeroconf+0x40>)
 800efd2:	701a      	strb	r2, [r3, #0]
 800efd4:	4628      	mov	r0, r5
 800efd6:	bd38      	pop	{r3, r4, r5, pc}
 800efd8:	200129bc 			; <UNDEFINED> instruction: 0x200129bc
 800efdc:	200129c8 	andcs	r2, r1, r8, asr #19
 800efe0:	200129ce 	andcs	r2, r1, lr, asr #19

0800efe4 <net_timers_run>:
 800efe4:	4b05      	ldr	r3, [pc, #20]	; (800effc <net_timers_run+0x18>)
 800efe6:	4a06      	ldr	r2, [pc, #24]	; (800f000 <net_timers_run+0x1c>)
 800efe8:	681b      	ldr	r3, [r3, #0]
 800efea:	6811      	ldr	r1, [r2, #0]
 800efec:	4299      	cmp	r1, r3
 800efee:	d803      	bhi.n	800eff8 <net_timers_run+0x14>
 800eff0:	3364      	adds	r3, #100	; 0x64
 800eff2:	6013      	str	r3, [r2, #0]
 800eff4:	f001 bf98 	b.w	8010f28 <igmp_timer>
 800eff8:	4770      	bx	lr
 800effa:	bf00      	nop
 800effc:	2001a964 	andcs	sl, r1, r4, ror #18
 800f000:	200129d4 	ldrdcs	r2, [r1], -r4

0800f004 <rfc3927>:
 800f004:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f008:	4606      	mov	r6, r0
 800f00a:	25ff      	movs	r5, #255	; 0xff
 800f00c:	4b18      	ldr	r3, [pc, #96]	; (800f070 <rfc3927+0x6c>)
 800f00e:	4f19      	ldr	r7, [pc, #100]	; (800f074 <rfc3927+0x70>)
 800f010:	791a      	ldrb	r2, [r3, #4]
 800f012:	78dc      	ldrb	r4, [r3, #3]
 800f014:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800f078 <rfc3927+0x74>
 800f018:	eb04 2402 	add.w	r4, r4, r2, lsl #8
 800f01c:	f8d7 9000 	ldr.w	r9, [r7]
 800f020:	f8df b058 	ldr.w	fp, [pc, #88]	; 800f07c <rfc3927+0x78>
 800f024:	f8df a058 	ldr.w	sl, [pc, #88]	; 800f080 <rfc3927+0x7c>
 800f028:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
 800f02c:	4659      	mov	r1, fp
 800f02e:	4620      	mov	r0, r4
 800f030:	f001 fcd8 	bl	80109e4 <arp_cache_lookup>
 800f034:	b190      	cbz	r0, 800f05c <rfc3927+0x58>
 800f036:	ba24      	rev	r4, r4
 800f038:	3401      	adds	r4, #1
 800f03a:	3d01      	subs	r5, #1
 800f03c:	ba24      	rev	r4, r4
 800f03e:	b2ad      	uxth	r5, r5
 800f040:	4554      	cmp	r4, sl
 800f042:	bf08      	it	eq
 800f044:	4644      	moveq	r4, r8
 800f046:	b18d      	cbz	r5, 800f06c <rfc3927+0x68>
 800f048:	683b      	ldr	r3, [r7, #0]
 800f04a:	eba3 0309 	sub.w	r3, r3, r9
 800f04e:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800f052:	d3eb      	bcc.n	800f02c <rfc3927+0x28>
 800f054:	2400      	movs	r4, #0
 800f056:	4623      	mov	r3, r4
 800f058:	4620      	mov	r0, r4
 800f05a:	e002      	b.n	800f062 <rfc3927+0x5e>
 800f05c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800f060:	2001      	movs	r0, #1
 800f062:	e9c6 3401 	strd	r3, r4, [r6, #4]
 800f066:	6034      	str	r4, [r6, #0]
 800f068:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f06c:	462c      	mov	r4, r5
 800f06e:	e7f2      	b.n	800f056 <rfc3927+0x52>
 800f070:	200129d8 	ldrdcs	r2, [r1], -r8
 800f074:	2001a964 	andcs	sl, r1, r4, ror #18
 800f078:	0100fea9 	smlatbeq	r0, r9, lr, pc	; <UNPREDICTABLE>
 800f07c:	200129e0 	andcs	r2, r1, r0, ror #19
 800f080:	fffefea9 			; <UNDEFINED> instruction: 0xfffefea9

0800f084 <_init_tcb>:
 800f084:	b510      	push	{r4, lr}
 800f086:	4603      	mov	r3, r0
 800f088:	2400      	movs	r4, #0
 800f08a:	f100 0244 	add.w	r2, r0, #68	; 0x44
 800f08e:	4293      	cmp	r3, r2
 800f090:	d10d      	bne.n	800f0ae <_init_tcb+0x2a>
 800f092:	4b08      	ldr	r3, [pc, #32]	; (800f0b4 <_init_tcb+0x30>)
 800f094:	f640 3268 	movw	r2, #2920	; 0xb68
 800f098:	681b      	ldr	r3, [r3, #0]
 800f09a:	8702      	strh	r2, [r0, #56]	; 0x38
 800f09c:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800f0a0:	6283      	str	r3, [r0, #40]	; 0x28
 800f0a2:	6243      	str	r3, [r0, #36]	; 0x24
 800f0a4:	2301      	movs	r3, #1
 800f0a6:	8001      	strh	r1, [r0, #0]
 800f0a8:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
 800f0ac:	bd10      	pop	{r4, pc}
 800f0ae:	f803 4b01 	strb.w	r4, [r3], #1
 800f0b2:	e7ec      	b.n	800f08e <_init_tcb+0xa>
 800f0b4:	2001a964 	andcs	sl, r1, r4, ror #18

0800f0b8 <memcpy.isra.0>:
 800f0b8:	3801      	subs	r0, #1
 800f0ba:	440a      	add	r2, r1
 800f0bc:	4291      	cmp	r1, r2
 800f0be:	d100      	bne.n	800f0c2 <memcpy.isra.0+0xa>
 800f0c0:	4770      	bx	lr
 800f0c2:	f811 3b01 	ldrb.w	r3, [r1], #1
 800f0c6:	f800 3f01 	strb.w	r3, [r0, #1]!
 800f0ca:	e7f7      	b.n	800f0bc <memcpy.isra.0+0x4>

0800f0cc <_bswap32>:
 800f0cc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f0ce:	2204      	movs	r2, #4
 800f0d0:	f100 052a 	add.w	r5, r0, #42	; 0x2a
 800f0d4:	4629      	mov	r1, r5
 800f0d6:	4604      	mov	r4, r0
 800f0d8:	eb0d 0002 	add.w	r0, sp, r2
 800f0dc:	f7ff ffec 	bl	800f0b8 <memcpy.isra.0>
 800f0e0:	2204      	movs	r2, #4
 800f0e2:	9b01      	ldr	r3, [sp, #4]
 800f0e4:	eb0d 0102 	add.w	r1, sp, r2
 800f0e8:	ba1b      	rev	r3, r3
 800f0ea:	4628      	mov	r0, r5
 800f0ec:	9301      	str	r3, [sp, #4]
 800f0ee:	f7ff ffe3 	bl	800f0b8 <memcpy.isra.0>
 800f0f2:	2204      	movs	r2, #4
 800f0f4:	3426      	adds	r4, #38	; 0x26
 800f0f6:	eb0d 0002 	add.w	r0, sp, r2
 800f0fa:	4621      	mov	r1, r4
 800f0fc:	f7ff ffdc 	bl	800f0b8 <memcpy.isra.0>
 800f100:	2204      	movs	r2, #4
 800f102:	9b01      	ldr	r3, [sp, #4]
 800f104:	4620      	mov	r0, r4
 800f106:	ba1b      	rev	r3, r3
 800f108:	eb0d 0102 	add.w	r1, sp, r2
 800f10c:	9301      	str	r3, [sp, #4]
 800f10e:	f7ff ffd3 	bl	800f0b8 <memcpy.isra.0>
 800f112:	b003      	add	sp, #12
 800f114:	bd30      	pop	{r4, r5, pc}
	...

0800f118 <_tcp_send_package>:
 800f118:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800f11c:	7a0b      	ldrb	r3, [r1, #8]
 800f11e:	4605      	mov	r5, r0
 800f120:	f013 0f02 	tst.w	r3, #2
 800f124:	bf0c      	ite	eq
 800f126:	f04f 0805 	moveq.w	r8, #5
 800f12a:	f04f 0806 	movne.w	r8, #6
 800f12e:	f04f 0a00 	mov.w	sl, #0
 800f132:	4c47      	ldr	r4, [pc, #284]	; (800f250 <_tcp_send_package+0x138>)
 800f134:	460f      	mov	r7, r1
 800f136:	8e06      	ldrh	r6, [r0, #48]	; 0x30
 800f138:	f100 0108 	add.w	r1, r0, #8
 800f13c:	2206      	movs	r2, #6
 800f13e:	4620      	mov	r0, r4
 800f140:	f7ff ffba 	bl	800f0b8 <memcpy.isra.0>
 800f144:	4a43      	ldr	r2, [pc, #268]	; (800f254 <_tcp_send_package+0x13c>)
 800f146:	eb06 0688 	add.w	r6, r6, r8, lsl #2
 800f14a:	8813      	ldrh	r3, [r2, #0]
 800f14c:	b2b6      	uxth	r6, r6
 800f14e:	1c59      	adds	r1, r3, #1
 800f150:	8263      	strh	r3, [r4, #18]
 800f152:	f105 0904 	add.w	r9, r5, #4
 800f156:	f106 0314 	add.w	r3, r6, #20
 800f15a:	ba5b      	rev16	r3, r3
 800f15c:	8011      	strh	r1, [r2, #0]
 800f15e:	f104 001e 	add.w	r0, r4, #30
 800f162:	2204      	movs	r2, #4
 800f164:	4649      	mov	r1, r9
 800f166:	8223      	strh	r3, [r4, #16]
 800f168:	f7ff ffa6 	bl	800f0b8 <memcpy.isra.0>
 800f16c:	2114      	movs	r1, #20
 800f16e:	f104 000e 	add.w	r0, r4, #14
 800f172:	f8a4 a018 	strh.w	sl, [r4, #24]
 800f176:	f001 ff6a 	bl	801104e <net_chksum>
 800f17a:	882b      	ldrh	r3, [r5, #0]
 800f17c:	ea4f 1808 	mov.w	r8, r8, lsl #4
 800f180:	8463      	strh	r3, [r4, #34]	; 0x22
 800f182:	886b      	ldrh	r3, [r5, #2]
 800f184:	8320      	strh	r0, [r4, #24]
 800f186:	84a3      	strh	r3, [r4, #36]	; 0x24
 800f188:	683b      	ldr	r3, [r7, #0]
 800f18a:	8f2a      	ldrh	r2, [r5, #56]	; 0x38
 800f18c:	f8c4 3026 	str.w	r3, [r4, #38]	; 0x26
 800f190:	687b      	ldr	r3, [r7, #4]
 800f192:	f884 802e 	strb.w	r8, [r4, #46]	; 0x2e
 800f196:	f8c4 302a 	str.w	r3, [r4, #42]	; 0x2a
 800f19a:	7a3b      	ldrb	r3, [r7, #8]
 800f19c:	8622      	strh	r2, [r4, #48]	; 0x30
 800f19e:	f884 302f 	strb.w	r3, [r4, #47]	; 0x2f
 800f1a2:	079b      	lsls	r3, r3, #30
 800f1a4:	bf48      	it	mi
 800f1a6:	f240 4302 	movwmi	r3, #1026	; 0x402
 800f1aa:	8baa      	ldrh	r2, [r5, #28]
 800f1ac:	bf48      	it	mi
 800f1ae:	86e3      	strhmi	r3, [r4, #54]	; 0x36
 800f1b0:	86a2      	strh	r2, [r4, #52]	; 0x34
 800f1b2:	bf42      	ittt	mi
 800f1b4:	f24b 4305 	movwmi	r3, #46085	; 0xb405
 800f1b8:	4622      	movmi	r2, r4
 800f1ba:	f822 3f38 	strhmi.w	r3, [r2, #56]!
 800f1be:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800f1c0:	f8a4 a032 	strh.w	sl, [r4, #50]	; 0x32
 800f1c4:	bf58      	it	pl
 800f1c6:	f104 0236 	addpl.w	r2, r4, #54	; 0x36
 800f1ca:	2b00      	cmp	r3, #0
 800f1cc:	d13e      	bne.n	800f24c <_tcp_send_package+0x134>
 800f1ce:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 800f1d0:	481f      	ldr	r0, [pc, #124]	; (800f250 <_tcp_send_package+0x138>)
 800f1d2:	ba5b      	rev16	r3, r3
 800f1d4:	8463      	strh	r3, [r4, #34]	; 0x22
 800f1d6:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 800f1d8:	ba5b      	rev16	r3, r3
 800f1da:	84a3      	strh	r3, [r4, #36]	; 0x24
 800f1dc:	f7ff ff76 	bl	800f0cc <_bswap32>
 800f1e0:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800f1e2:	a801      	add	r0, sp, #4
 800f1e4:	ba5b      	rev16	r3, r3
 800f1e6:	8623      	strh	r3, [r4, #48]	; 0x30
 800f1e8:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800f1ea:	220c      	movs	r2, #12
 800f1ec:	ba5b      	rev16	r3, r3
 800f1ee:	491a      	ldr	r1, [pc, #104]	; (800f258 <_tcp_send_package+0x140>)
 800f1f0:	86a3      	strh	r3, [r4, #52]	; 0x34
 800f1f2:	f7ff ff61 	bl	800f0b8 <memcpy.isra.0>
 800f1f6:	2204      	movs	r2, #4
 800f1f8:	4918      	ldr	r1, [pc, #96]	; (800f25c <_tcp_send_package+0x144>)
 800f1fa:	4817      	ldr	r0, [pc, #92]	; (800f258 <_tcp_send_package+0x140>)
 800f1fc:	f7ff ff5c 	bl	800f0b8 <memcpy.isra.0>
 800f200:	2204      	movs	r2, #4
 800f202:	4649      	mov	r1, r9
 800f204:	4816      	ldr	r0, [pc, #88]	; (800f260 <_tcp_send_package+0x148>)
 800f206:	f7ff ff57 	bl	800f0b8 <memcpy.isra.0>
 800f20a:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 800f20e:	f106 010c 	add.w	r1, r6, #12
 800f212:	83e3      	strh	r3, [r4, #30]
 800f214:	4810      	ldr	r0, [pc, #64]	; (800f258 <_tcp_send_package+0x140>)
 800f216:	ba73      	rev16	r3, r6
 800f218:	8423      	strh	r3, [r4, #32]
 800f21a:	f001 ff18 	bl	801104e <net_chksum>
 800f21e:	a901      	add	r1, sp, #4
 800f220:	4605      	mov	r5, r0
 800f222:	220c      	movs	r2, #12
 800f224:	480c      	ldr	r0, [pc, #48]	; (800f258 <_tcp_send_package+0x140>)
 800f226:	f7ff ff47 	bl	800f0b8 <memcpy.isra.0>
 800f22a:	4809      	ldr	r0, [pc, #36]	; (800f250 <_tcp_send_package+0x138>)
 800f22c:	f106 0122 	add.w	r1, r6, #34	; 0x22
 800f230:	8665      	strh	r5, [r4, #50]	; 0x32
 800f232:	b004      	add	sp, #16
 800f234:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f238:	f004 bae0 	b.w	80137fc <emac_eth_send>
 800f23c:	6ae9      	ldr	r1, [r5, #44]	; 0x2c
 800f23e:	5cc9      	ldrb	r1, [r1, r3]
 800f240:	54d1      	strb	r1, [r2, r3]
 800f242:	3301      	adds	r3, #1
 800f244:	8e29      	ldrh	r1, [r5, #48]	; 0x30
 800f246:	4299      	cmp	r1, r3
 800f248:	d8f8      	bhi.n	800f23c <_tcp_send_package+0x124>
 800f24a:	e7c0      	b.n	800f1ce <_tcp_send_package+0xb6>
 800f24c:	2300      	movs	r3, #0
 800f24e:	e7f9      	b.n	800f244 <_tcp_send_package+0x12c>
 800f250:	200135a0 	andcs	r3, r1, r0, lsr #11
 800f254:	200129e8 	andcs	r2, r1, r8, ror #19
 800f258:	200135b6 			; <UNDEFINED> instruction: 0x200135b6
 800f25c:	200129bc 			; <UNDEFINED> instruction: 0x200129bc
 800f260:	200135ba 			; <UNDEFINED> instruction: 0x200135ba

0800f264 <_send_reset>:
 800f264:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800f266:	f890 302f 	ldrb.w	r3, [r0, #47]	; 0x2f
 800f26a:	4604      	mov	r4, r0
 800f26c:	075a      	lsls	r2, r3, #29
 800f26e:	460e      	mov	r6, r1
 800f270:	d421      	bmi.n	800f2b6 <_send_reset+0x52>
 800f272:	2204      	movs	r2, #4
 800f274:	f013 0310 	ands.w	r3, r3, #16
 800f278:	f88d 200c 	strb.w	r2, [sp, #12]
 800f27c:	d01d      	beq.n	800f2ba <_send_reset+0x56>
 800f27e:	f100 012a 	add.w	r1, r0, #42	; 0x2a
 800f282:	4668      	mov	r0, sp
 800f284:	f7ff ff18 	bl	800f0b8 <memcpy.isra.0>
 800f288:	9b00      	ldr	r3, [sp, #0]
 800f28a:	9301      	str	r3, [sp, #4]
 800f28c:	f894 302f 	ldrb.w	r3, [r4, #47]	; 0x2f
 800f290:	4668      	mov	r0, sp
 800f292:	f3c3 0540 	ubfx	r5, r3, #1, #1
 800f296:	f104 0126 	add.w	r1, r4, #38	; 0x26
 800f29a:	07db      	lsls	r3, r3, #31
 800f29c:	f04f 0204 	mov.w	r2, #4
 800f2a0:	bf48      	it	mi
 800f2a2:	3501      	addmi	r5, #1
 800f2a4:	f7ff ff08 	bl	800f0b8 <memcpy.isra.0>
 800f2a8:	9b00      	ldr	r3, [sp, #0]
 800f2aa:	4630      	mov	r0, r6
 800f2ac:	441d      	add	r5, r3
 800f2ae:	a901      	add	r1, sp, #4
 800f2b0:	9502      	str	r5, [sp, #8]
 800f2b2:	f7ff ff31 	bl	800f118 <_tcp_send_package>
 800f2b6:	b004      	add	sp, #16
 800f2b8:	bd70      	pop	{r4, r5, r6, pc}
 800f2ba:	9301      	str	r3, [sp, #4]
 800f2bc:	2314      	movs	r3, #20
 800f2be:	f88d 300c 	strb.w	r3, [sp, #12]
 800f2c2:	e7e3      	b.n	800f28c <_send_reset+0x28>

0800f2c4 <tcp_begin>:
 800f2c4:	b508      	push	{r3, lr}
 800f2c6:	4b0a      	ldr	r3, [pc, #40]	; (800f2f0 <tcp_begin+0x2c>)
 800f2c8:	4601      	mov	r1, r0
 800f2ca:	881a      	ldrh	r2, [r3, #0]
 800f2cc:	4282      	cmp	r2, r0
 800f2ce:	d102      	bne.n	800f2d6 <tcp_begin+0x12>
 800f2d0:	f893 0040 	ldrb.w	r0, [r3, #64]	; 0x40
 800f2d4:	b130      	cbz	r0, 800f2e4 <tcp_begin+0x20>
 800f2d6:	b12a      	cbz	r2, 800f2e4 <tcp_begin+0x20>
 800f2d8:	4806      	ldr	r0, [pc, #24]	; (800f2f4 <tcp_begin+0x30>)
 800f2da:	f002 ffcb 	bl	8012274 <console_error>
 800f2de:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800f2e2:	bd08      	pop	{r3, pc}
 800f2e4:	4802      	ldr	r0, [pc, #8]	; (800f2f0 <tcp_begin+0x2c>)
 800f2e6:	8019      	strh	r1, [r3, #0]
 800f2e8:	f7ff fecc 	bl	800f084 <_init_tcb>
 800f2ec:	2000      	movs	r0, #0
 800f2ee:	e7f8      	b.n	800f2e2 <tcp_begin+0x1e>
 800f2f0:	2001355c 	andcs	r3, r1, ip, asr r5
 800f2f4:	08016f9e 	stmdaeq	r1, {r1, r2, r3, r4, r7, r8, r9, sl, fp, sp, lr}

0800f2f8 <tcp_write>:
 800f2f8:	f240 53b4 	movw	r3, #1460	; 0x5b4
 800f2fc:	429a      	cmp	r2, r3
 800f2fe:	bf28      	it	cs
 800f300:	461a      	movcs	r2, r3
 800f302:	2344      	movs	r3, #68	; 0x44
 800f304:	b530      	push	{r4, r5, lr}
 800f306:	4c0d      	ldr	r4, [pc, #52]	; (800f33c <tcp_write+0x44>)
 800f308:	b085      	sub	sp, #20
 800f30a:	fb03 4400 	mla	r4, r3, r0, r4
 800f30e:	6963      	ldr	r3, [r4, #20]
 800f310:	62e1      	str	r1, [r4, #44]	; 0x2c
 800f312:	9301      	str	r3, [sp, #4]
 800f314:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800f316:	4620      	mov	r0, r4
 800f318:	9302      	str	r3, [sp, #8]
 800f31a:	2318      	movs	r3, #24
 800f31c:	8622      	strh	r2, [r4, #48]	; 0x30
 800f31e:	a901      	add	r1, sp, #4
 800f320:	4615      	mov	r5, r2
 800f322:	f88d 300c 	strb.w	r3, [sp, #12]
 800f326:	f7ff fef7 	bl	800f118 <_tcp_send_package>
 800f32a:	2300      	movs	r3, #0
 800f32c:	62e3      	str	r3, [r4, #44]	; 0x2c
 800f32e:	8623      	strh	r3, [r4, #48]	; 0x30
 800f330:	6963      	ldr	r3, [r4, #20]
 800f332:	442b      	add	r3, r5
 800f334:	6163      	str	r3, [r4, #20]
 800f336:	b005      	add	sp, #20
 800f338:	bd30      	pop	{r4, r5, pc}
 800f33a:	bf00      	nop
 800f33c:	2001355c 	andcs	r3, r1, ip, asr r5

0800f340 <tcp_read>:
 800f340:	2344      	movs	r3, #68	; 0x44
 800f342:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f344:	4c1c      	ldr	r4, [pc, #112]	; (800f3b8 <tcp_read+0x78>)
 800f346:	b085      	sub	sp, #20
 800f348:	fb03 4400 	mla	r4, r3, r0, r4
 800f34c:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800f350:	2b07      	cmp	r3, #7
 800f352:	d112      	bne.n	800f37a <tcp_read+0x3a>
 800f354:	6963      	ldr	r3, [r4, #20]
 800f356:	4620      	mov	r0, r4
 800f358:	9301      	str	r3, [sp, #4]
 800f35a:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800f35c:	a901      	add	r1, sp, #4
 800f35e:	9302      	str	r3, [sp, #8]
 800f360:	2311      	movs	r3, #17
 800f362:	f88d 300c 	strb.w	r3, [sp, #12]
 800f366:	f7ff fed7 	bl	800f118 <_tcp_send_package>
 800f36a:	2309      	movs	r3, #9
 800f36c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800f370:	6963      	ldr	r3, [r4, #20]
 800f372:	3301      	adds	r3, #1
 800f374:	6163      	str	r3, [r4, #20]
 800f376:	2000      	movs	r0, #0
 800f378:	e01b      	b.n	800f3b2 <tcp_read+0x72>
 800f37a:	f44f 6337 	mov.w	r3, #2928	; 0xb70
 800f37e:	4358      	muls	r0, r3
 800f380:	4a0e      	ldr	r2, [pc, #56]	; (800f3bc <tcp_read+0x7c>)
 800f382:	1817      	adds	r7, r2, r0
 800f384:	887b      	ldrh	r3, [r7, #2]
 800f386:	5a15      	ldrh	r5, [r2, r0]
 800f388:	429d      	cmp	r5, r3
 800f38a:	d0f4      	beq.n	800f376 <tcp_read+0x36>
 800f38c:	f240 55b6 	movw	r5, #1462	; 0x5b6
 800f390:	435d      	muls	r5, r3
 800f392:	1d06      	adds	r6, r0, #4
 800f394:	442e      	add	r6, r5
 800f396:	4416      	add	r6, r2
 800f398:	4405      	add	r5, r0
 800f39a:	600e      	str	r6, [r1, #0]
 800f39c:	442a      	add	r2, r5
 800f39e:	f8b2 05b8 	ldrh.w	r0, [r2, #1464]	; 0x5b8
 800f3a2:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 800f3a4:	3301      	adds	r3, #1
 800f3a6:	f202 52b4 	addw	r2, r2, #1460	; 0x5b4
 800f3aa:	f003 0301 	and.w	r3, r3, #1
 800f3ae:	8722      	strh	r2, [r4, #56]	; 0x38
 800f3b0:	807b      	strh	r3, [r7, #2]
 800f3b2:	b005      	add	sp, #20
 800f3b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f3b6:	bf00      	nop
 800f3b8:	2001355c 	andcs	r3, r1, ip, asr r5
 800f3bc:	200129ec 	andcs	r2, r1, ip, ror #19

0800f3c0 <memcpy.isra.0>:
 800f3c0:	3801      	subs	r0, #1
 800f3c2:	440a      	add	r2, r1
 800f3c4:	4291      	cmp	r1, r2
 800f3c6:	d100      	bne.n	800f3ca <memcpy.isra.0+0xa>
 800f3c8:	4770      	bx	lr
 800f3ca:	f811 3b01 	ldrb.w	r3, [r1], #1
 800f3ce:	f800 3f01 	strb.w	r3, [r0, #1]!
 800f3d2:	e7f7      	b.n	800f3c4 <memcpy.isra.0+0x4>

0800f3d4 <net_memcpy>:
 800f3d4:	ea40 0301 	orr.w	r3, r0, r1
 800f3d8:	079b      	lsls	r3, r3, #30
 800f3da:	b570      	push	{r4, r5, r6, lr}
 800f3dc:	d108      	bne.n	800f3f0 <net_memcpy+0x1c>
 800f3de:	f022 0303 	bic.w	r3, r2, #3
 800f3e2:	1f04      	subs	r4, r0, #4
 800f3e4:	18cd      	adds	r5, r1, r3
 800f3e6:	42a9      	cmp	r1, r5
 800f3e8:	d108      	bne.n	800f3fc <net_memcpy+0x28>
 800f3ea:	1ad2      	subs	r2, r2, r3
 800f3ec:	4403      	add	r3, r0
 800f3ee:	e000      	b.n	800f3f2 <net_memcpy+0x1e>
 800f3f0:	4603      	mov	r3, r0
 800f3f2:	3b01      	subs	r3, #1
 800f3f4:	440a      	add	r2, r1
 800f3f6:	4291      	cmp	r1, r2
 800f3f8:	d105      	bne.n	800f406 <net_memcpy+0x32>
 800f3fa:	bd70      	pop	{r4, r5, r6, pc}
 800f3fc:	f851 6b04 	ldr.w	r6, [r1], #4
 800f400:	f844 6f04 	str.w	r6, [r4, #4]!
 800f404:	e7ef      	b.n	800f3e6 <net_memcpy+0x12>
 800f406:	f811 4b01 	ldrb.w	r4, [r1], #1
 800f40a:	f803 4f01 	strb.w	r4, [r3, #1]!
 800f40e:	e7f2      	b.n	800f3f6 <net_memcpy+0x22>

0800f410 <udp_set_ip>:
 800f410:	2204      	movs	r2, #4
 800f412:	b513      	push	{r0, r1, r4, lr}
 800f414:	4604      	mov	r4, r0
 800f416:	6803      	ldr	r3, [r0, #0]
 800f418:	eb0d 0102 	add.w	r1, sp, r2
 800f41c:	4808      	ldr	r0, [pc, #32]	; (800f440 <udp_set_ip+0x30>)
 800f41e:	9301      	str	r3, [sp, #4]
 800f420:	f7ff ffce 	bl	800f3c0 <memcpy.isra.0>
 800f424:	6862      	ldr	r2, [r4, #4]
 800f426:	4b07      	ldr	r3, [pc, #28]	; (800f444 <udp_set_ip+0x34>)
 800f428:	43d1      	mvns	r1, r2
 800f42a:	6019      	str	r1, [r3, #0]
 800f42c:	6823      	ldr	r3, [r4, #0]
 800f42e:	4013      	ands	r3, r2
 800f430:	4a05      	ldr	r2, [pc, #20]	; (800f448 <udp_set_ip+0x38>)
 800f432:	6013      	str	r3, [r2, #0]
 800f434:	68a2      	ldr	r2, [r4, #8]
 800f436:	4b05      	ldr	r3, [pc, #20]	; (800f44c <udp_set_ip+0x3c>)
 800f438:	601a      	str	r2, [r3, #0]
 800f43a:	b002      	add	sp, #8
 800f43c:	bd10      	pop	{r4, pc}
 800f43e:	bf00      	nop
 800f440:	20019876 	andcs	r9, r1, r6, ror r8
 800f444:	20013b8c 	andcs	r3, r1, ip, lsl #23
 800f448:	20013b94 	mulcs	r1, r4, fp
 800f44c:	20013b90 	mulcs	r1, r0, fp

0800f450 <udp_bind>:
 800f450:	4a0a      	ldr	r2, [pc, #40]	; (800f47c <udp_bind+0x2c>)
 800f452:	4603      	mov	r3, r0
 800f454:	b510      	push	{r4, lr}
 800f456:	2000      	movs	r0, #0
 800f458:	4614      	mov	r4, r2
 800f45a:	f852 1b04 	ldr.w	r1, [r2], #4
 800f45e:	4299      	cmp	r1, r3
 800f460:	d008      	beq.n	800f474 <udp_bind+0x24>
 800f462:	b141      	cbz	r1, 800f476 <udp_bind+0x26>
 800f464:	3001      	adds	r0, #1
 800f466:	2808      	cmp	r0, #8
 800f468:	d1f7      	bne.n	800f45a <udp_bind+0xa>
 800f46a:	4805      	ldr	r0, [pc, #20]	; (800f480 <udp_bind+0x30>)
 800f46c:	f002 ff02 	bl	8012274 <console_error>
 800f470:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800f474:	bd10      	pop	{r4, pc}
 800f476:	f844 3020 	str.w	r3, [r4, r0, lsl #2]
 800f47a:	e7fb      	b.n	800f474 <udp_bind+0x24>
 800f47c:	20013b9c 	mulcs	r1, ip, fp
 800f480:	08016fbe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r7, r8, r9, sl, fp, sp, lr}

0800f484 <udp_unbind>:
 800f484:	4a0c      	ldr	r2, [pc, #48]	; (800f4b8 <udp_unbind+0x34>)
 800f486:	2300      	movs	r3, #0
 800f488:	4611      	mov	r1, r2
 800f48a:	b510      	push	{r4, lr}
 800f48c:	f852 4b04 	ldr.w	r4, [r2], #4
 800f490:	4284      	cmp	r4, r0
 800f492:	d108      	bne.n	800f4a6 <udp_unbind+0x22>
 800f494:	2000      	movs	r0, #0
 800f496:	f640 3294 	movw	r2, #2964	; 0xb94
 800f49a:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 800f49e:	4353      	muls	r3, r2
 800f4a0:	4a06      	ldr	r2, [pc, #24]	; (800f4bc <udp_unbind+0x38>)
 800f4a2:	50d0      	str	r0, [r2, r3]
 800f4a4:	bd10      	pop	{r4, pc}
 800f4a6:	3301      	adds	r3, #1
 800f4a8:	2b08      	cmp	r3, #8
 800f4aa:	d1ef      	bne.n	800f48c <udp_unbind+0x8>
 800f4ac:	4804      	ldr	r0, [pc, #16]	; (800f4c0 <udp_unbind+0x3c>)
 800f4ae:	f002 fee1 	bl	8012274 <console_error>
 800f4b2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800f4b6:	e7f5      	b.n	800f4a4 <udp_unbind+0x20>
 800f4b8:	20013b9c 	mulcs	r1, ip, fp
 800f4bc:	20013bbc 			; <UNDEFINED> instruction: 0x20013bbc
 800f4c0:	08016fc3 	stmdaeq	r1, {r0, r1, r6, r7, r8, r9, sl, fp, sp, lr}

0800f4c4 <udp_recv>:
 800f4c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f4c8:	4604      	mov	r4, r0
 800f4ca:	4698      	mov	r8, r3
 800f4cc:	f640 3394 	movw	r3, #2964	; 0xb94
 800f4d0:	435c      	muls	r4, r3
 800f4d2:	4608      	mov	r0, r1
 800f4d4:	4915      	ldr	r1, [pc, #84]	; (800f52c <udp_recv+0x68>)
 800f4d6:	190f      	adds	r7, r1, r4
 800f4d8:	f8b7 c002 	ldrh.w	ip, [r7, #2]
 800f4dc:	5b0b      	ldrh	r3, [r1, r4]
 800f4de:	4563      	cmp	r3, ip
 800f4e0:	d021      	beq.n	800f526 <udp_recv+0x62>
 800f4e2:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 800f4e6:	fb03 fc0c 	mul.w	ip, r3, ip
 800f4ea:	eb0c 0604 	add.w	r6, ip, r4
 800f4ee:	440e      	add	r6, r1
 800f4f0:	f8b6 55ca 	ldrh.w	r5, [r6, #1482]	; 0x5ca
 800f4f4:	3404      	adds	r4, #4
 800f4f6:	4295      	cmp	r5, r2
 800f4f8:	bf28      	it	cs
 800f4fa:	4615      	movcs	r5, r2
 800f4fc:	4464      	add	r4, ip
 800f4fe:	462a      	mov	r2, r5
 800f500:	4421      	add	r1, r4
 800f502:	f7ff ff67 	bl	800f3d4 <net_memcpy>
 800f506:	f8d6 35c4 	ldr.w	r3, [r6, #1476]	; 0x5c4
 800f50a:	f8c8 3000 	str.w	r3, [r8]
 800f50e:	f8b6 25c8 	ldrh.w	r2, [r6, #1480]	; 0x5c8
 800f512:	9b06      	ldr	r3, [sp, #24]
 800f514:	801a      	strh	r2, [r3, #0]
 800f516:	887b      	ldrh	r3, [r7, #2]
 800f518:	3301      	adds	r3, #1
 800f51a:	f003 0301 	and.w	r3, r3, #1
 800f51e:	807b      	strh	r3, [r7, #2]
 800f520:	4628      	mov	r0, r5
 800f522:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f526:	2500      	movs	r5, #0
 800f528:	e7fa      	b.n	800f520 <udp_recv+0x5c>
 800f52a:	bf00      	nop
 800f52c:	20013bbc 			; <UNDEFINED> instruction: 0x20013bbc

0800f530 <udp_recv2>:
 800f530:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f532:	f640 3594 	movw	r5, #2964	; 0xb94
 800f536:	4368      	muls	r0, r5
 800f538:	4c0f      	ldr	r4, [pc, #60]	; (800f578 <udp_recv2+0x48>)
 800f53a:	1827      	adds	r7, r4, r0
 800f53c:	887d      	ldrh	r5, [r7, #2]
 800f53e:	5a26      	ldrh	r6, [r4, r0]
 800f540:	42ae      	cmp	r6, r5
 800f542:	d017      	beq.n	800f574 <udp_recv2+0x44>
 800f544:	f44f 6cb9 	mov.w	ip, #1480	; 0x5c8
 800f548:	fb0c f505 	mul.w	r5, ip, r5
 800f54c:	1d06      	adds	r6, r0, #4
 800f54e:	442e      	add	r6, r5
 800f550:	4405      	add	r5, r0
 800f552:	4426      	add	r6, r4
 800f554:	442c      	add	r4, r5
 800f556:	600e      	str	r6, [r1, #0]
 800f558:	f8d4 15c4 	ldr.w	r1, [r4, #1476]	; 0x5c4
 800f55c:	6011      	str	r1, [r2, #0]
 800f55e:	f8b4 25c8 	ldrh.w	r2, [r4, #1480]	; 0x5c8
 800f562:	801a      	strh	r2, [r3, #0]
 800f564:	887b      	ldrh	r3, [r7, #2]
 800f566:	f8b4 05ca 	ldrh.w	r0, [r4, #1482]	; 0x5ca
 800f56a:	3301      	adds	r3, #1
 800f56c:	f003 0301 	and.w	r3, r3, #1
 800f570:	807b      	strh	r3, [r7, #2]
 800f572:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f574:	2000      	movs	r0, #0
 800f576:	e7fc      	b.n	800f572 <udp_recv2+0x42>
 800f578:	20013bbc 			; <UNDEFINED> instruction: 0x20013bbc

0800f57c <udp_send>:
 800f57c:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800f580:	f8df 9130 	ldr.w	r9, [pc, #304]	; 800f6b4 <udp_send+0x138>
 800f584:	461c      	mov	r4, r3
 800f586:	f859 3020 	ldr.w	r3, [r9, r0, lsl #2]
 800f58a:	4607      	mov	r7, r0
 800f58c:	4688      	mov	r8, r1
 800f58e:	4616      	mov	r6, r2
 800f590:	2b00      	cmp	r3, #0
 800f592:	f000 808b 	beq.w	800f6ac <udp_send+0x130>
 800f596:	1c63      	adds	r3, r4, #1
 800f598:	d141      	bne.n	800f61e <udp_send+0xa2>
 800f59a:	4a47      	ldr	r2, [pc, #284]	; (800f6b8 <udp_send+0x13c>)
 800f59c:	2307      	movs	r3, #7
 800f59e:	4611      	mov	r1, r2
 800f5a0:	20ff      	movs	r0, #255	; 0xff
 800f5a2:	e001      	b.n	800f5a8 <udp_send+0x2c>
 800f5a4:	f802 0b01 	strb.w	r0, [r2], #1
 800f5a8:	3b01      	subs	r3, #1
 800f5aa:	d1fb      	bne.n	800f5a4 <udp_send+0x28>
 800f5ac:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800f5b0:	83cb      	strh	r3, [r1, #30]
 800f5b2:	840b      	strh	r3, [r1, #32]
 800f5b4:	2500      	movs	r5, #0
 800f5b6:	f8df a104 	ldr.w	sl, [pc, #260]	; 800f6bc <udp_send+0x140>
 800f5ba:	4c3f      	ldr	r4, [pc, #252]	; (800f6b8 <udp_send+0x13c>)
 800f5bc:	f8ba 3000 	ldrh.w	r3, [sl]
 800f5c0:	2114      	movs	r1, #20
 800f5c2:	8263      	strh	r3, [r4, #18]
 800f5c4:	f106 031c 	add.w	r3, r6, #28
 800f5c8:	ba5b      	rev16	r3, r3
 800f5ca:	f104 000e 	add.w	r0, r4, #14
 800f5ce:	8223      	strh	r3, [r4, #16]
 800f5d0:	8325      	strh	r5, [r4, #24]
 800f5d2:	f001 fd3c 	bl	801104e <net_chksum>
 800f5d6:	f859 3027 	ldr.w	r3, [r9, r7, lsl #2]
 800f5da:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 800f5de:	ba5b      	rev16	r3, r3
 800f5e0:	8463      	strh	r3, [r4, #34]	; 0x22
 800f5e2:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800f5e6:	4632      	mov	r2, r6
 800f5e8:	ba5b      	rev16	r3, r3
 800f5ea:	84a3      	strh	r3, [r4, #36]	; 0x24
 800f5ec:	f106 0308 	add.w	r3, r6, #8
 800f5f0:	ba5b      	rev16	r3, r3
 800f5f2:	bf28      	it	cs
 800f5f4:	f44f 62b8 	movcs.w	r2, #1472	; 0x5c0
 800f5f8:	4641      	mov	r1, r8
 800f5fa:	8320      	strh	r0, [r4, #24]
 800f5fc:	f104 002a 	add.w	r0, r4, #42	; 0x2a
 800f600:	84e3      	strh	r3, [r4, #38]	; 0x26
 800f602:	f7ff fee7 	bl	800f3d4 <net_memcpy>
 800f606:	4620      	mov	r0, r4
 800f608:	f106 012a 	add.w	r1, r6, #42	; 0x2a
 800f60c:	f004 f8f6 	bl	80137fc <emac_eth_send>
 800f610:	f8ba 3000 	ldrh.w	r3, [sl]
 800f614:	4628      	mov	r0, r5
 800f616:	3301      	adds	r3, #1
 800f618:	f8aa 3000 	strh.w	r3, [sl]
 800f61c:	e037      	b.n	800f68e <udp_send+0x112>
 800f61e:	4b28      	ldr	r3, [pc, #160]	; (800f6c0 <udp_send+0x144>)
 800f620:	681b      	ldr	r3, [r3, #0]
 800f622:	43a3      	bics	r3, r4
 800f624:	d10f      	bne.n	800f646 <udp_send+0xca>
 800f626:	2307      	movs	r3, #7
 800f628:	21ff      	movs	r1, #255	; 0xff
 800f62a:	4a23      	ldr	r2, [pc, #140]	; (800f6b8 <udp_send+0x13c>)
 800f62c:	e001      	b.n	800f632 <udp_send+0xb6>
 800f62e:	f802 1b01 	strb.w	r1, [r2], #1
 800f632:	3b01      	subs	r3, #1
 800f634:	d1fb      	bne.n	800f62e <udp_send+0xb2>
 800f636:	2204      	movs	r2, #4
 800f638:	4822      	ldr	r0, [pc, #136]	; (800f6c4 <udp_send+0x148>)
 800f63a:	eb0d 0102 	add.w	r1, sp, r2
 800f63e:	9401      	str	r4, [sp, #4]
 800f640:	f7ff febe 	bl	800f3c0 <memcpy.isra.0>
 800f644:	e7b6      	b.n	800f5b4 <udp_send+0x38>
 800f646:	f004 03e0 	and.w	r3, r4, #224	; 0xe0
 800f64a:	2be0      	cmp	r3, #224	; 0xe0
 800f64c:	d10e      	bne.n	800f66c <udp_send+0xf0>
 800f64e:	491e      	ldr	r1, [pc, #120]	; (800f6c8 <udp_send+0x14c>)
 800f650:	f3c4 2306 	ubfx	r3, r4, #8, #7
 800f654:	70cb      	strb	r3, [r1, #3]
 800f656:	f3c4 4307 	ubfx	r3, r4, #16, #8
 800f65a:	710b      	strb	r3, [r1, #4]
 800f65c:	f3c4 6307 	ubfx	r3, r4, #24, #8
 800f660:	2206      	movs	r2, #6
 800f662:	4815      	ldr	r0, [pc, #84]	; (800f6b8 <udp_send+0x13c>)
 800f664:	714b      	strb	r3, [r1, #5]
 800f666:	f7ff feab 	bl	800f3c0 <memcpy.isra.0>
 800f66a:	e7e4      	b.n	800f636 <udp_send+0xba>
 800f66c:	4b17      	ldr	r3, [pc, #92]	; (800f6cc <udp_send+0x150>)
 800f66e:	681b      	ldr	r3, [r3, #0]
 800f670:	43a3      	bics	r3, r4
 800f672:	d00f      	beq.n	800f694 <udp_send+0x118>
 800f674:	4d16      	ldr	r5, [pc, #88]	; (800f6d0 <udp_send+0x154>)
 800f676:	4910      	ldr	r1, [pc, #64]	; (800f6b8 <udp_send+0x13c>)
 800f678:	6828      	ldr	r0, [r5, #0]
 800f67a:	f001 f9b3 	bl	80109e4 <arp_cache_lookup>
 800f67e:	682b      	ldr	r3, [r5, #0]
 800f680:	4298      	cmp	r0, r3
 800f682:	d0d8      	beq.n	800f636 <udp_send+0xba>
 800f684:	4813      	ldr	r0, [pc, #76]	; (800f6d4 <udp_send+0x158>)
 800f686:	f002 fdf5 	bl	8012274 <console_error>
 800f68a:	f06f 0002 	mvn.w	r0, #2
 800f68e:	b002      	add	sp, #8
 800f690:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f694:	4620      	mov	r0, r4
 800f696:	4908      	ldr	r1, [pc, #32]	; (800f6b8 <udp_send+0x13c>)
 800f698:	f001 f9a4 	bl	80109e4 <arp_cache_lookup>
 800f69c:	42a0      	cmp	r0, r4
 800f69e:	d0ca      	beq.n	800f636 <udp_send+0xba>
 800f6a0:	480d      	ldr	r0, [pc, #52]	; (800f6d8 <udp_send+0x15c>)
 800f6a2:	f002 fde7 	bl	8012274 <console_error>
 800f6a6:	f06f 0001 	mvn.w	r0, #1
 800f6aa:	e7f0      	b.n	800f68e <udp_send+0x112>
 800f6ac:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800f6b0:	e7ed      	b.n	800f68e <udp_send+0x112>
 800f6b2:	bf00      	nop
 800f6b4:	20013b9c 	mulcs	r1, ip, fp
 800f6b8:	2001985c 	andcs	r9, r1, ip, asr r8
 800f6bc:	20013b98 	mulcs	r1, r8, fp
 800f6c0:	20013b8c 	andcs	r3, r1, ip, lsl #23
 800f6c4:	2001987a 	andcs	r9, r1, sl, ror r8
 800f6c8:	20000004 	andcs	r0, r0, r4
 800f6cc:	20013b94 	mulcs	r1, r4, fp
 800f6d0:	20013b90 	mulcs	r1, r0, fp
 800f6d4:	08016fcb 	stmdaeq	r1, {r0, r1, r3, r6, r7, r8, r9, sl, fp, sp, lr}
 800f6d8:	08016ff1 	stmdaeq	r1, {r0, r4, r5, r6, r7, r8, r9, sl, fp, sp, lr}

0800f6dc <strlen>:
 800f6dc:	4603      	mov	r3, r0
 800f6de:	461a      	mov	r2, r3
 800f6e0:	7811      	ldrb	r1, [r2, #0]
 800f6e2:	3301      	adds	r3, #1
 800f6e4:	2900      	cmp	r1, #0
 800f6e6:	d1fa      	bne.n	800f6de <strlen+0x2>
 800f6e8:	1a10      	subs	r0, r2, r0
 800f6ea:	4770      	bx	lr

0800f6ec <strcmp>:
 800f6ec:	1e43      	subs	r3, r0, #1
 800f6ee:	3901      	subs	r1, #1
 800f6f0:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800f6f4:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800f6f8:	4290      	cmp	r0, r2
 800f6fa:	d001      	beq.n	800f700 <strcmp+0x14>
 800f6fc:	1a80      	subs	r0, r0, r2
 800f6fe:	e001      	b.n	800f704 <strcmp+0x18>
 800f700:	2800      	cmp	r0, #0
 800f702:	d1f5      	bne.n	800f6f0 <strcmp+0x4>
 800f704:	4770      	bx	lr

0800f706 <strcpy.isra.0>:
 800f706:	3801      	subs	r0, #1
 800f708:	f811 3b01 	ldrb.w	r3, [r1], #1
 800f70c:	f800 3f01 	strb.w	r3, [r0, #1]!
 800f710:	2b00      	cmp	r3, #0
 800f712:	d1f9      	bne.n	800f708 <strcpy.isra.0+0x2>
 800f714:	4770      	bx	lr

0800f716 <strcat.isra.0>:
 800f716:	b538      	push	{r3, r4, r5, lr}
 800f718:	4604      	mov	r4, r0
 800f71a:	460d      	mov	r5, r1
 800f71c:	f7ff ffde 	bl	800f6dc <strlen>
 800f720:	4629      	mov	r1, r5
 800f722:	4420      	add	r0, r4
 800f724:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800f728:	f7ff bfed 	b.w	800f706 <strcpy.isra.0>

0800f72c <MDNS::MDNS()>:
 800f72c:	b513      	push	{r0, r1, r4, lr}
 800f72e:	4604      	mov	r4, r0
 800f730:	a901      	add	r1, sp, #4
 800f732:	4804      	ldr	r0, [pc, #16]	; (800f744 <MDNS::MDNS()+0x18>)
 800f734:	f002 ff14 	bl	8012560 <inet_aton>
 800f738:	4620      	mov	r0, r4
 800f73a:	4b03      	ldr	r3, [pc, #12]	; (800f748 <MDNS::MDNS()+0x1c>)
 800f73c:	9a01      	ldr	r2, [sp, #4]
 800f73e:	601a      	str	r2, [r3, #0]
 800f740:	b002      	add	sp, #8
 800f742:	bd10      	pop	{r4, pc}
 800f744:	08017011 	stmdaeq	r1, {r0, r4, ip, sp, lr}
 800f748:	20019e50 	andcs	r9, r1, r0, asr lr

0800f74c <MDNS::SetName(char const*)>:
 800f74c:	b538      	push	{r3, r4, r5, lr}
 800f74e:	4d0b      	ldr	r5, [pc, #44]	; (800f77c <MDNS::SetName(char const*)+0x30>)
 800f750:	460c      	mov	r4, r1
 800f752:	6828      	ldr	r0, [r5, #0]
 800f754:	b108      	cbz	r0, 800f75a <MDNS::SetName(char const*)+0xe>
 800f756:	f002 fefd 	bl	8012554 <operator delete[](void*)>
 800f75a:	4620      	mov	r0, r4
 800f75c:	f7ff ffbe 	bl	800f6dc <strlen>
 800f760:	3007      	adds	r0, #7
 800f762:	f002 fefb 	bl	801255c <operator new[](unsigned int)>
 800f766:	4621      	mov	r1, r4
 800f768:	6028      	str	r0, [r5, #0]
 800f76a:	f7ff ffcc 	bl	800f706 <strcpy.isra.0>
 800f76e:	6828      	ldr	r0, [r5, #0]
 800f770:	4903      	ldr	r1, [pc, #12]	; (800f780 <MDNS::SetName(char const*)+0x34>)
 800f772:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800f776:	f7ff bfce 	b.w	800f716 <strcat.isra.0>
 800f77a:	bf00      	nop
 800f77c:	2001a280 	andcs	sl, r1, r0, lsl #5
 800f780:	08017021 	stmdaeq	r1, {r0, r5, ip, sp, lr}

0800f784 <MDNS::DecodeDNSNameNotation(char const*, char*)>:
 800f784:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f788:	f04f 0e00 	mov.w	lr, #0
 800f78c:	f04f 0c2e 	mov.w	ip, #46	; 0x2e
 800f790:	4675      	mov	r5, lr
 800f792:	4e1b      	ldr	r6, [pc, #108]	; (800f800 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x7c>)
 800f794:	4f1b      	ldr	r7, [pc, #108]	; (800f804 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x80>)
 800f796:	780b      	ldrb	r3, [r1, #0]
 800f798:	1c68      	adds	r0, r5, #1
 800f79a:	b913      	cbnz	r3, 800f7a2 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x1e>
 800f79c:	7013      	strb	r3, [r2, #0]
 800f79e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f7a2:	2b3f      	cmp	r3, #63	; 0x3f
 800f7a4:	d91c      	bls.n	800f7e0 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x5c>
 800f7a6:	7849      	ldrb	r1, [r1, #1]
 800f7a8:	ea06 2303 	and.w	r3, r6, r3, lsl #8
 800f7ac:	430b      	orrs	r3, r1
 800f7ae:	6839      	ldr	r1, [r7, #0]
 800f7b0:	f1be 0f00 	cmp.w	lr, #0
 800f7b4:	bf08      	it	eq
 800f7b6:	4605      	moveq	r5, r0
 800f7b8:	5ccc      	ldrb	r4, [r1, r3]
 800f7ba:	3301      	adds	r3, #1
 800f7bc:	4419      	add	r1, r3
 800f7be:	2300      	movs	r3, #0
 800f7c0:	42a3      	cmp	r3, r4
 800f7c2:	5cc8      	ldrb	r0, [r1, r3]
 800f7c4:	d309      	bcc.n	800f7da <MDNS::DecodeDNSNameNotation(char const*, char*)+0x56>
 800f7c6:	f04f 0e01 	mov.w	lr, #1
 800f7ca:	4421      	add	r1, r4
 800f7cc:	4414      	add	r4, r2
 800f7ce:	780b      	ldrb	r3, [r1, #0]
 800f7d0:	b10b      	cbz	r3, 800f7d6 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x52>
 800f7d2:	f804 cb01 	strb.w	ip, [r4], #1
 800f7d6:	4622      	mov	r2, r4
 800f7d8:	e7dd      	b.n	800f796 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x12>
 800f7da:	54d0      	strb	r0, [r2, r3]
 800f7dc:	3301      	adds	r3, #1
 800f7de:	e7ef      	b.n	800f7c0 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x3c>
 800f7e0:	4688      	mov	r8, r1
 800f7e2:	18d4      	adds	r4, r2, r3
 800f7e4:	f818 9f01 	ldrb.w	r9, [r8, #1]!
 800f7e8:	f802 9b01 	strb.w	r9, [r2], #1
 800f7ec:	4294      	cmp	r4, r2
 800f7ee:	d1f9      	bne.n	800f7e4 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x60>
 800f7f0:	1c5a      	adds	r2, r3, #1
 800f7f2:	4411      	add	r1, r2
 800f7f4:	f1be 0f00 	cmp.w	lr, #0
 800f7f8:	d1e9      	bne.n	800f7ce <MDNS::DecodeDNSNameNotation(char const*, char*)+0x4a>
 800f7fa:	181d      	adds	r5, r3, r0
 800f7fc:	e7e7      	b.n	800f7ce <MDNS::DecodeDNSNameNotation(char const*, char*)+0x4a>
 800f7fe:	bf00      	nop
 800f800:	ffff3f00 			; <UNDEFINED> instruction: 0xffff3f00
 800f804:	2001a284 	andcs	sl, r1, r4, lsl #5

0800f808 <MDNS::FindFirstDotFromRight(char const*) const>:
 800f808:	b510      	push	{r4, lr}
 800f80a:	4608      	mov	r0, r1
 800f80c:	460c      	mov	r4, r1
 800f80e:	f7ff ff65 	bl	800f6dc <strlen>
 800f812:	4420      	add	r0, r4
 800f814:	42a0      	cmp	r0, r4
 800f816:	d903      	bls.n	800f820 <MDNS::FindFirstDotFromRight(char const*) const+0x18>
 800f818:	f810 3901 	ldrb.w	r3, [r0], #-1
 800f81c:	2b2e      	cmp	r3, #46	; 0x2e
 800f81e:	d1f9      	bne.n	800f814 <MDNS::FindFirstDotFromRight(char const*) const+0xc>
 800f820:	3001      	adds	r0, #1
 800f822:	bd10      	pop	{r4, pc}

0800f824 <MDNS::WriteDnsName(char const*, char*, bool)>:
 800f824:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f826:	4614      	mov	r4, r2
 800f828:	460f      	mov	r7, r1
 800f82a:	1c60      	adds	r0, r4, #1
 800f82c:	463d      	mov	r5, r7
 800f82e:	f817 6b01 	ldrb.w	r6, [r7], #1
 800f832:	b946      	cbnz	r6, 800f846 <MDNS::WriteDnsName(char const*, char*, bool)+0x22>
 800f834:	1a69      	subs	r1, r5, r1
 800f836:	7021      	strb	r1, [r4, #0]
 800f838:	7829      	ldrb	r1, [r5, #0]
 800f83a:	b949      	cbnz	r1, 800f850 <MDNS::WriteDnsName(char const*, char*, bool)+0x2c>
 800f83c:	b10b      	cbz	r3, 800f842 <MDNS::WriteDnsName(char const*, char*, bool)+0x1e>
 800f83e:	f800 1b01 	strb.w	r1, [r0], #1
 800f842:	1a80      	subs	r0, r0, r2
 800f844:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f846:	2e2e      	cmp	r6, #46	; 0x2e
 800f848:	d0f4      	beq.n	800f834 <MDNS::WriteDnsName(char const*, char*, bool)+0x10>
 800f84a:	f800 6b01 	strb.w	r6, [r0], #1
 800f84e:	e7ed      	b.n	800f82c <MDNS::WriteDnsName(char const*, char*, bool)+0x8>
 800f850:	4604      	mov	r4, r0
 800f852:	1c69      	adds	r1, r5, #1
 800f854:	e7e8      	b.n	800f828 <MDNS::WriteDnsName(char const*, char*, bool)+0x4>
	...

0800f858 <MDNS::CreateAnswerLocalIpAddress()>:
 800f858:	2384      	movs	r3, #132	; 0x84
 800f85a:	b510      	push	{r4, lr}
 800f85c:	4c0f      	ldr	r4, [pc, #60]	; (800f89c <MDNS::CreateAnswerLocalIpAddress()+0x44>)
 800f85e:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 800f862:	80e3      	strh	r3, [r4, #6]
 800f864:	2300      	movs	r3, #0
 800f866:	490e      	ldr	r1, [pc, #56]	; (800f8a0 <MDNS::CreateAnswerLocalIpAddress()+0x48>)
 800f868:	e9c4 2302 	strd	r2, r3, [r4, #8]
 800f86c:	6809      	ldr	r1, [r1, #0]
 800f86e:	f104 0210 	add.w	r2, r4, #16
 800f872:	2301      	movs	r3, #1
 800f874:	f7ff ffd6 	bl	800f824 <MDNS::WriteDnsName(char const*, char*, bool)>
 800f878:	490a      	ldr	r1, [pc, #40]	; (800f8a4 <MDNS::CreateAnswerLocalIpAddress()+0x4c>)
 800f87a:	1813      	adds	r3, r2, r0
 800f87c:	5011      	str	r1, [r2, r0]
 800f87e:	f04f 42f0 	mov.w	r2, #2013265920	; 0x78000000
 800f882:	605a      	str	r2, [r3, #4]
 800f884:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800f888:	811a      	strh	r2, [r3, #8]
 800f88a:	4a07      	ldr	r2, [pc, #28]	; (800f8a8 <MDNS::CreateAnswerLocalIpAddress()+0x50>)
 800f88c:	6812      	ldr	r2, [r2, #0]
 800f88e:	6952      	ldr	r2, [r2, #20]
 800f890:	f8c3 200a 	str.w	r2, [r3, #10]
 800f894:	1b1b      	subs	r3, r3, r4
 800f896:	330a      	adds	r3, #10
 800f898:	6023      	str	r3, [r4, #0]
 800f89a:	bd10      	pop	{r4, pc}
 800f89c:	20019e54 	andcs	r9, r1, r4, asr lr
 800f8a0:	2001a280 	andcs	sl, r1, r0, lsl #5
 800f8a4:	01800100 	orreq	r0, r0, r0, lsl #2
 800f8a8:	2001a288 	andcs	sl, r1, r8, lsl #5

0800f8ac <MDNS::Start()>:
 800f8ac:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f8ae:	4c1d      	ldr	r4, [pc, #116]	; (800f924 <MDNS::Start()+0x78>)
 800f8b0:	f241 41e9 	movw	r1, #5353	; 0x14e9
 800f8b4:	4605      	mov	r5, r0
 800f8b6:	6820      	ldr	r0, [r4, #0]
 800f8b8:	f000 fb28 	bl	800ff0c <Network::Begin(unsigned short)>
 800f8bc:	4e1a      	ldr	r6, [pc, #104]	; (800f928 <MDNS::Start()+0x7c>)
 800f8be:	4f1b      	ldr	r7, [pc, #108]	; (800f92c <MDNS::Start()+0x80>)
 800f8c0:	4601      	mov	r1, r0
 800f8c2:	6030      	str	r0, [r6, #0]
 800f8c4:	683a      	ldr	r2, [r7, #0]
 800f8c6:	6820      	ldr	r0, [r4, #0]
 800f8c8:	f000 fb31 	bl	800ff2e <Network::JoinGroup(int, unsigned int)>
 800f8cc:	4b18      	ldr	r3, [pc, #96]	; (800f930 <MDNS::Start()+0x84>)
 800f8ce:	681b      	ldr	r3, [r3, #0]
 800f8d0:	b923      	cbnz	r3, 800f8dc <MDNS::Start()+0x30>
 800f8d2:	6821      	ldr	r1, [r4, #0]
 800f8d4:	4628      	mov	r0, r5
 800f8d6:	3120      	adds	r1, #32
 800f8d8:	f7ff ff38 	bl	800f74c <MDNS::SetName(char const*)>
 800f8dc:	4628      	mov	r0, r5
 800f8de:	f7ff ffbb 	bl	800f858 <MDNS::CreateAnswerLocalIpAddress()>
 800f8e2:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800f8e6:	4913      	ldr	r1, [pc, #76]	; (800f934 <MDNS::Start()+0x88>)
 800f8e8:	7830      	ldrb	r0, [r6, #0]
 800f8ea:	f831 2b04 	ldrh.w	r2, [r1], #4
 800f8ee:	9300      	str	r3, [sp, #0]
 800f8f0:	683b      	ldr	r3, [r7, #0]
 800f8f2:	f7ff fe43 	bl	800f57c <udp_send>
 800f8f6:	233f      	movs	r3, #63	; 0x3f
 800f8f8:	6820      	ldr	r0, [r4, #0]
 800f8fa:	4c0f      	ldr	r4, [pc, #60]	; (800f938 <MDNS::Start()+0x8c>)
 800f8fc:	f100 0260 	add.w	r2, r0, #96	; 0x60
 800f900:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 800f904:	b929      	cbnz	r1, 800f912 <MDNS::Start()+0x66>
 800f906:	4413      	add	r3, r2
 800f908:	429a      	cmp	r2, r3
 800f90a:	d006      	beq.n	800f91a <MDNS::Start()+0x6e>
 800f90c:	f802 1b01 	strb.w	r1, [r2], #1
 800f910:	e7fa      	b.n	800f908 <MDNS::Start()+0x5c>
 800f912:	3b01      	subs	r3, #1
 800f914:	f802 1b01 	strb.w	r1, [r2], #1
 800f918:	d1f2      	bne.n	800f900 <MDNS::Start()+0x54>
 800f91a:	2300      	movs	r3, #0
 800f91c:	f880 309f 	strb.w	r3, [r0, #159]	; 0x9f
 800f920:	b003      	add	sp, #12
 800f922:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f924:	2001a288 	andcs	sl, r1, r8, lsl #5
 800f928:	2000000c 	andcs	r0, r0, ip
 800f92c:	20019e50 	andcs	r9, r1, r0, asr lr
 800f930:	2001a280 	andcs	sl, r1, r0, lsl #5
 800f934:	20019e54 	andcs	r9, r1, r4, asr lr
 800f938:	08017021 	stmdaeq	r1, {r0, r5, ip, sp, lr}

0800f93c <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)>:
 800f93c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f940:	4c1b      	ldr	r4, [pc, #108]	; (800f9b0 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x74>)
 800f942:	ea4f 1c01 	mov.w	ip, r1, lsl #4
 800f946:	eb04 1501 	add.w	r5, r4, r1, lsl #4
 800f94a:	2300      	movs	r3, #0
 800f94c:	f854 100c 	ldr.w	r1, [r4, ip]
 800f950:	4607      	mov	r7, r0
 800f952:	f7ff ff67 	bl	800f824 <MDNS::WriteDnsName(char const*, char*, bool)>
 800f956:	2301      	movs	r3, #1
 800f958:	7bac      	ldrb	r4, [r5, #14]
 800f95a:	4616      	mov	r6, r2
 800f95c:	4915      	ldr	r1, [pc, #84]	; (800f9b4 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x78>)
 800f95e:	4402      	add	r2, r0
 800f960:	4815      	ldr	r0, [pc, #84]	; (800f9b8 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x7c>)
 800f962:	429c      	cmp	r4, r3
 800f964:	bf18      	it	ne
 800f966:	4601      	movne	r1, r0
 800f968:	4638      	mov	r0, r7
 800f96a:	f7ff ff5b 	bl	800f824 <MDNS::WriteDnsName(char const*, char*, bool)>
 800f96e:	4b13      	ldr	r3, [pc, #76]	; (800f9bc <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x80>)
 800f970:	1814      	adds	r4, r2, r0
 800f972:	5013      	str	r3, [r2, r0]
 800f974:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800f978:	6063      	str	r3, [r4, #4]
 800f97a:	4b11      	ldr	r3, [pc, #68]	; (800f9c0 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x84>)
 800f97c:	f8d3 8000 	ldr.w	r8, [r3]
 800f980:	4640      	mov	r0, r8
 800f982:	f7ff feab 	bl	800f6dc <strlen>
 800f986:	f100 0308 	add.w	r3, r0, #8
 800f98a:	ba5b      	rev16	r3, r3
 800f98c:	8123      	strh	r3, [r4, #8]
 800f98e:	2300      	movs	r3, #0
 800f990:	f8c4 300a 	str.w	r3, [r4, #10]
 800f994:	89ab      	ldrh	r3, [r5, #12]
 800f996:	f104 0210 	add.w	r2, r4, #16
 800f99a:	ba5b      	rev16	r3, r3
 800f99c:	81e3      	strh	r3, [r4, #14]
 800f99e:	4641      	mov	r1, r8
 800f9a0:	2301      	movs	r3, #1
 800f9a2:	4638      	mov	r0, r7
 800f9a4:	f7ff ff3e 	bl	800f824 <MDNS::WriteDnsName(char const*, char*, bool)>
 800f9a8:	4410      	add	r0, r2
 800f9aa:	1b80      	subs	r0, r0, r6
 800f9ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f9b0:	2001a058 	andcs	sl, r1, r8, asr r0
 800f9b4:	0801701d 	stmdaeq	r1, {r0, r2, r3, r4, ip, sp, lr}
 800f9b8:	0801703a 	stmdaeq	r1, {r1, r3, r4, r5, ip, sp, lr}
 800f9bc:	01802100 	orreq	r2, r0, r0, lsl #2
 800f9c0:	2001a280 	andcs	sl, r1, r0, lsl #5

0800f9c4 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)>:
 800f9c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f9c8:	4e19      	ldr	r6, [pc, #100]	; (800fa30 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x6c>)
 800f9ca:	010f      	lsls	r7, r1, #4
 800f9cc:	eb06 1501 	add.w	r5, r6, r1, lsl #4
 800f9d0:	2300      	movs	r3, #0
 800f9d2:	59f1      	ldr	r1, [r6, r7]
 800f9d4:	4604      	mov	r4, r0
 800f9d6:	f7ff ff25 	bl	800f824 <MDNS::WriteDnsName(char const*, char*, bool)>
 800f9da:	2301      	movs	r3, #1
 800f9dc:	7bae      	ldrb	r6, [r5, #14]
 800f9de:	4690      	mov	r8, r2
 800f9e0:	4914      	ldr	r1, [pc, #80]	; (800fa34 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x70>)
 800f9e2:	4402      	add	r2, r0
 800f9e4:	4814      	ldr	r0, [pc, #80]	; (800fa38 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x74>)
 800f9e6:	429e      	cmp	r6, r3
 800f9e8:	bf18      	it	ne
 800f9ea:	4601      	movne	r1, r0
 800f9ec:	4620      	mov	r0, r4
 800f9ee:	f7ff ff19 	bl	800f824 <MDNS::WriteDnsName(char const*, char*, bool)>
 800f9f2:	4b12      	ldr	r3, [pc, #72]	; (800fa3c <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x78>)
 800f9f4:	1816      	adds	r6, r2, r0
 800f9f6:	5013      	str	r3, [r2, r0]
 800f9f8:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800f9fc:	68a8      	ldr	r0, [r5, #8]
 800f9fe:	6073      	str	r3, [r6, #4]
 800fa00:	f106 040b 	add.w	r4, r6, #11
 800fa04:	b938      	cbnz	r0, 800fa16 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x52>
 800fa06:	f44f 7380 	mov.w	r3, #256	; 0x100
 800fa0a:	72b0      	strb	r0, [r6, #10]
 800fa0c:	8133      	strh	r3, [r6, #8]
 800fa0e:	eba4 0008 	sub.w	r0, r4, r8
 800fa12:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800fa16:	f7ff fe61 	bl	800f6dc <strlen>
 800fa1a:	4607      	mov	r7, r0
 800fa1c:	1c43      	adds	r3, r0, #1
 800fa1e:	72b0      	strb	r0, [r6, #10]
 800fa20:	ba5b      	rev16	r3, r3
 800fa22:	4620      	mov	r0, r4
 800fa24:	68a9      	ldr	r1, [r5, #8]
 800fa26:	8133      	strh	r3, [r6, #8]
 800fa28:	f7ff fe6d 	bl	800f706 <strcpy.isra.0>
 800fa2c:	443c      	add	r4, r7
 800fa2e:	e7ee      	b.n	800fa0e <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x4a>
 800fa30:	2001a058 	andcs	sl, r1, r8, asr r0
 800fa34:	0801701d 	stmdaeq	r1, {r0, r2, r3, r4, ip, sp, lr}
 800fa38:	0801703a 	stmdaeq	r1, {r1, r3, r4, r5, ip, sp, lr}
 800fa3c:	01801000 	orreq	r1, r0, r0

0800fa40 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)>:
 800fa40:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800fa44:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800faa8 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x68>
 800fa48:	ea4f 1901 	mov.w	r9, r1, lsl #4
 800fa4c:	eb08 1501 	add.w	r5, r8, r1, lsl #4
 800fa50:	6869      	ldr	r1, [r5, #4]
 800fa52:	2301      	movs	r3, #1
 800fa54:	4607      	mov	r7, r0
 800fa56:	f7ff fee5 	bl	800f824 <MDNS::WriteDnsName(char const*, char*, bool)>
 800fa5a:	4b14      	ldr	r3, [pc, #80]	; (800faac <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x6c>)
 800fa5c:	f858 8009 	ldr.w	r8, [r8, r9]
 800fa60:	5013      	str	r3, [r2, r0]
 800fa62:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800fa66:	1816      	adds	r6, r2, r0
 800fa68:	6073      	str	r3, [r6, #4]
 800fa6a:	4640      	mov	r0, r8
 800fa6c:	4614      	mov	r4, r2
 800fa6e:	f7ff fe35 	bl	800f6dc <strlen>
 800fa72:	f100 030d 	add.w	r3, r0, #13
 800fa76:	ba5b      	rev16	r3, r3
 800fa78:	4641      	mov	r1, r8
 800fa7a:	8133      	strh	r3, [r6, #8]
 800fa7c:	f106 020a 	add.w	r2, r6, #10
 800fa80:	2300      	movs	r3, #0
 800fa82:	4638      	mov	r0, r7
 800fa84:	f7ff fece 	bl	800f824 <MDNS::WriteDnsName(char const*, char*, bool)>
 800fa88:	2301      	movs	r3, #1
 800fa8a:	4402      	add	r2, r0
 800fa8c:	7bad      	ldrb	r5, [r5, #14]
 800fa8e:	4808      	ldr	r0, [pc, #32]	; (800fab0 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x70>)
 800fa90:	4908      	ldr	r1, [pc, #32]	; (800fab4 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x74>)
 800fa92:	429d      	cmp	r5, r3
 800fa94:	bf18      	it	ne
 800fa96:	4601      	movne	r1, r0
 800fa98:	4638      	mov	r0, r7
 800fa9a:	f7ff fec3 	bl	800f824 <MDNS::WriteDnsName(char const*, char*, bool)>
 800fa9e:	4410      	add	r0, r2
 800faa0:	1b00      	subs	r0, r0, r4
 800faa2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800faa6:	bf00      	nop
 800faa8:	2001a058 	andcs	sl, r1, r8, asr r0
 800faac:	01000c00 	tsteq	r0, r0, lsl #24
 800fab0:	0801703a 	stmdaeq	r1, {r1, r3, r4, r5, ip, sp, lr}
 800fab4:	0801701d 	stmdaeq	r1, {r0, r2, r3, r4, ip, sp, lr}

0800fab8 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)>:
 800fab8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800faba:	460f      	mov	r7, r1
 800fabc:	2301      	movs	r3, #1
 800fabe:	490f      	ldr	r1, [pc, #60]	; (800fafc <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x44>)
 800fac0:	4606      	mov	r6, r0
 800fac2:	f7ff feaf 	bl	800f824 <MDNS::WriteDnsName(char const*, char*, bool)>
 800fac6:	4b0e      	ldr	r3, [pc, #56]	; (800fb00 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x48>)
 800fac8:	490e      	ldr	r1, [pc, #56]	; (800fb04 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x4c>)
 800faca:	5013      	str	r3, [r2, r0]
 800facc:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800fad0:	eb01 1107 	add.w	r1, r1, r7, lsl #4
 800fad4:	684f      	ldr	r7, [r1, #4]
 800fad6:	1815      	adds	r5, r2, r0
 800fad8:	606b      	str	r3, [r5, #4]
 800fada:	4638      	mov	r0, r7
 800fadc:	4614      	mov	r4, r2
 800fade:	f7ff fdfd 	bl	800f6dc <strlen>
 800fae2:	1c83      	adds	r3, r0, #2
 800fae4:	ba5b      	rev16	r3, r3
 800fae6:	812b      	strh	r3, [r5, #8]
 800fae8:	f105 020a 	add.w	r2, r5, #10
 800faec:	2301      	movs	r3, #1
 800faee:	4639      	mov	r1, r7
 800faf0:	4630      	mov	r0, r6
 800faf2:	f7ff fe97 	bl	800f824 <MDNS::WriteDnsName(char const*, char*, bool)>
 800faf6:	4410      	add	r0, r2
 800faf8:	1b00      	subs	r0, r0, r4
 800fafa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800fafc:	08017028 	stmdaeq	r1, {r3, r5, ip, sp, lr}
 800fb00:	01000c00 	tsteq	r0, r0, lsl #24
 800fb04:	2001a058 	andcs	sl, r1, r8, asr r0

0800fb08 <MDNS::CreateMDNSMessage(unsigned int)>:
 800fb08:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fb0a:	2384      	movs	r3, #132	; 0x84
 800fb0c:	4d19      	ldr	r5, [pc, #100]	; (800fb74 <MDNS::CreateMDNSMessage(unsigned int)+0x6c>)
 800fb0e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800fb12:	80eb      	strh	r3, [r5, #6]
 800fb14:	f44f 7380 	mov.w	r3, #256	; 0x100
 800fb18:	f105 0410 	add.w	r4, r5, #16
 800fb1c:	e9c5 2302 	strd	r2, r3, [r5, #8]
 800fb20:	4622      	mov	r2, r4
 800fb22:	4606      	mov	r6, r0
 800fb24:	460f      	mov	r7, r1
 800fb26:	f7ff ff09 	bl	800f93c <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)>
 800fb2a:	4404      	add	r4, r0
 800fb2c:	4622      	mov	r2, r4
 800fb2e:	4639      	mov	r1, r7
 800fb30:	4630      	mov	r0, r6
 800fb32:	f7ff ff47 	bl	800f9c4 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)>
 800fb36:	4404      	add	r4, r0
 800fb38:	4622      	mov	r2, r4
 800fb3a:	4639      	mov	r1, r7
 800fb3c:	4630      	mov	r0, r6
 800fb3e:	f7ff ffbb 	bl	800fab8 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)>
 800fb42:	4404      	add	r4, r0
 800fb44:	4622      	mov	r2, r4
 800fb46:	4639      	mov	r1, r7
 800fb48:	4630      	mov	r0, r6
 800fb4a:	f7ff ff79 	bl	800fa40 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)>
 800fb4e:	4a0a      	ldr	r2, [pc, #40]	; (800fb78 <MDNS::CreateMDNSMessage(unsigned int)+0x70>)
 800fb50:	4404      	add	r4, r0
 800fb52:	f852 3b10 	ldr.w	r3, [r2], #16
 800fb56:	1e60      	subs	r0, r4, #1
 800fb58:	3b0c      	subs	r3, #12
 800fb5a:	4619      	mov	r1, r3
 800fb5c:	3901      	subs	r1, #1
 800fb5e:	d204      	bcs.n	800fb6a <MDNS::CreateMDNSMessage(unsigned int)+0x62>
 800fb60:	441c      	add	r4, r3
 800fb62:	4b06      	ldr	r3, [pc, #24]	; (800fb7c <MDNS::CreateMDNSMessage(unsigned int)+0x74>)
 800fb64:	1ae4      	subs	r4, r4, r3
 800fb66:	602c      	str	r4, [r5, #0]
 800fb68:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800fb6a:	f812 6b01 	ldrb.w	r6, [r2], #1
 800fb6e:	f800 6f01 	strb.w	r6, [r0, #1]!
 800fb72:	e7f3      	b.n	800fb5c <MDNS::CreateMDNSMessage(unsigned int)+0x54>
 800fb74:	2001a07c 	andcs	sl, r1, ip, ror r0
 800fb78:	20019e54 	andcs	r9, r1, r4, asr lr
 800fb7c:	2001a080 	andcs	sl, r1, r0, lsl #1

0800fb80 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>:
 800fb80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fb84:	4d40      	ldr	r5, [pc, #256]	; (800fc88 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x108>)
 800fb86:	b085      	sub	sp, #20
 800fb88:	682c      	ldr	r4, [r5, #0]
 800fb8a:	4680      	mov	r8, r0
 800fb8c:	460f      	mov	r7, r1
 800fb8e:	4616      	mov	r6, r2
 800fb90:	f89d b038 	ldrb.w	fp, [sp, #56]	; 0x38
 800fb94:	f8dd a03c 	ldr.w	sl, [sp, #60]	; 0x3c
 800fb98:	b11c      	cbz	r4, 800fba2 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x22>
 800fb9a:	692a      	ldr	r2, [r5, #16]
 800fb9c:	2a00      	cmp	r2, #0
 800fb9e:	d16e      	bne.n	800fc7e <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xfe>
 800fba0:	2401      	movs	r4, #1
 800fba2:	eb05 1204 	add.w	r2, r5, r4, lsl #4
 800fba6:	ea4f 1904 	mov.w	r9, r4, lsl #4
 800fbaa:	8193      	strh	r3, [r2, #12]
 800fbac:	f882 b00e 	strb.w	fp, [r2, #14]
 800fbb0:	2f00      	cmp	r7, #0
 800fbb2:	d154      	bne.n	800fc5e <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xde>
 800fbb4:	4b35      	ldr	r3, [pc, #212]	; (800fc8c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x10c>)
 800fbb6:	6818      	ldr	r0, [r3, #0]
 800fbb8:	3020      	adds	r0, #32
 800fbba:	f7ff fd8f 	bl	800f6dc <strlen>
 800fbbe:	4607      	mov	r7, r0
 800fbc0:	4630      	mov	r0, r6
 800fbc2:	f7ff fd8b 	bl	800f6dc <strlen>
 800fbc6:	4438      	add	r0, r7
 800fbc8:	3001      	adds	r0, #1
 800fbca:	f002 fcc7 	bl	801255c <operator new[](unsigned int)>
 800fbce:	4b2f      	ldr	r3, [pc, #188]	; (800fc8c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x10c>)
 800fbd0:	f845 0009 	str.w	r0, [r5, r9]
 800fbd4:	6819      	ldr	r1, [r3, #0]
 800fbd6:	3120      	adds	r1, #32
 800fbd8:	f7ff fd95 	bl	800f706 <strcpy.isra.0>
 800fbdc:	f855 0009 	ldr.w	r0, [r5, r9]
 800fbe0:	4631      	mov	r1, r6
 800fbe2:	f7ff fd98 	bl	800f716 <strcat.isra.0>
 800fbe6:	4631      	mov	r1, r6
 800fbe8:	4640      	mov	r0, r8
 800fbea:	f7ff fe0d 	bl	800f808 <MDNS::FindFirstDotFromRight(char const*) const>
 800fbee:	eb05 0709 	add.w	r7, r5, r9
 800fbf2:	4605      	mov	r5, r0
 800fbf4:	f7ff fd72 	bl	800f6dc <strlen>
 800fbf8:	300d      	adds	r0, #13
 800fbfa:	f002 fcaf 	bl	801255c <operator new[](unsigned int)>
 800fbfe:	4629      	mov	r1, r5
 800fc00:	6078      	str	r0, [r7, #4]
 800fc02:	f7ff fd80 	bl	800f706 <strcpy.isra.0>
 800fc06:	4922      	ldr	r1, [pc, #136]	; (800fc90 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x110>)
 800fc08:	6878      	ldr	r0, [r7, #4]
 800fc0a:	f7ff fd84 	bl	800f716 <strcat.isra.0>
 800fc0e:	4921      	ldr	r1, [pc, #132]	; (800fc94 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x114>)
 800fc10:	4b21      	ldr	r3, [pc, #132]	; (800fc98 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x118>)
 800fc12:	6878      	ldr	r0, [r7, #4]
 800fc14:	f1bb 0f01 	cmp.w	fp, #1
 800fc18:	bf18      	it	ne
 800fc1a:	4619      	movne	r1, r3
 800fc1c:	f7ff fd7b 	bl	800f716 <strcat.isra.0>
 800fc20:	f1ba 0f00 	cmp.w	sl, #0
 800fc24:	d009      	beq.n	800fc3a <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xba>
 800fc26:	4650      	mov	r0, sl
 800fc28:	f7ff fd58 	bl	800f6dc <strlen>
 800fc2c:	3001      	adds	r0, #1
 800fc2e:	f002 fc95 	bl	801255c <operator new[](unsigned int)>
 800fc32:	4651      	mov	r1, sl
 800fc34:	60b8      	str	r0, [r7, #8]
 800fc36:	f7ff fd66 	bl	800f706 <strcpy.isra.0>
 800fc3a:	4621      	mov	r1, r4
 800fc3c:	4640      	mov	r0, r8
 800fc3e:	f7ff ff63 	bl	800fb08 <MDNS::CreateMDNSMessage(unsigned int)>
 800fc42:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800fc46:	4915      	ldr	r1, [pc, #84]	; (800fc9c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x11c>)
 800fc48:	4815      	ldr	r0, [pc, #84]	; (800fca0 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x120>)
 800fc4a:	f831 2b04 	ldrh.w	r2, [r1], #4
 800fc4e:	9300      	str	r3, [sp, #0]
 800fc50:	4b14      	ldr	r3, [pc, #80]	; (800fca4 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x124>)
 800fc52:	7800      	ldrb	r0, [r0, #0]
 800fc54:	681b      	ldr	r3, [r3, #0]
 800fc56:	f7ff fc91 	bl	800f57c <udp_send>
 800fc5a:	2001      	movs	r0, #1
 800fc5c:	e010      	b.n	800fc80 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x100>
 800fc5e:	4638      	mov	r0, r7
 800fc60:	f7ff fd3c 	bl	800f6dc <strlen>
 800fc64:	9003      	str	r0, [sp, #12]
 800fc66:	4630      	mov	r0, r6
 800fc68:	f7ff fd38 	bl	800f6dc <strlen>
 800fc6c:	9b03      	ldr	r3, [sp, #12]
 800fc6e:	4418      	add	r0, r3
 800fc70:	3001      	adds	r0, #1
 800fc72:	f002 fc73 	bl	801255c <operator new[](unsigned int)>
 800fc76:	4639      	mov	r1, r7
 800fc78:	f845 0009 	str.w	r0, [r5, r9]
 800fc7c:	e7ac      	b.n	800fbd8 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x58>
 800fc7e:	2000      	movs	r0, #0
 800fc80:	b005      	add	sp, #20
 800fc82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fc86:	bf00      	nop
 800fc88:	2001a058 	andcs	sl, r1, r8, asr r0
 800fc8c:	2001a288 	andcs	sl, r1, r8, lsl #5
 800fc90:	08015097 	stmdaeq	r1, {r0, r1, r2, r4, r7, ip, lr}
 800fc94:	0801701d 	stmdaeq	r1, {r0, r2, r3, r4, ip, sp, lr}
 800fc98:	0801703a 	stmdaeq	r1, {r1, r3, r4, r5, ip, sp, lr}
 800fc9c:	2001a07c 	andcs	sl, r1, ip, ror r0
 800fca0:	2000000c 	andcs	r0, r0, ip
 800fca4:	20019e50 	andcs	r9, r1, r0, asr lr

0800fca8 <MDNS::HandleRequest(unsigned short)>:
 800fca8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fcac:	4605      	mov	r5, r0
 800fcae:	2700      	movs	r7, #0
 800fcb0:	f04f 080c 	mov.w	r8, #12
 800fcb4:	b0c5      	sub	sp, #276	; 0x114
 800fcb6:	f8df a0c0 	ldr.w	sl, [pc, #192]	; 800fd78 <MDNS::HandleRequest(unsigned short)+0xd0>
 800fcba:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 800fd7c <MDNS::HandleRequest(unsigned short)+0xd4>
 800fcbe:	9103      	str	r1, [sp, #12]
 800fcc0:	9b03      	ldr	r3, [sp, #12]
 800fcc2:	42bb      	cmp	r3, r7
 800fcc4:	d802      	bhi.n	800fccc <MDNS::HandleRequest(unsigned short)+0x24>
 800fcc6:	b045      	add	sp, #276	; 0x114
 800fcc8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fccc:	f8da 1000 	ldr.w	r1, [sl]
 800fcd0:	aa04      	add	r2, sp, #16
 800fcd2:	4441      	add	r1, r8
 800fcd4:	4628      	mov	r0, r5
 800fcd6:	f7ff fd55 	bl	800f784 <MDNS::DecodeDNSNameNotation(char const*, char*)>
 800fcda:	f8da 2000 	ldr.w	r2, [sl]
 800fcde:	4440      	add	r0, r8
 800fce0:	1813      	adds	r3, r2, r0
 800fce2:	885b      	ldrh	r3, [r3, #2]
 800fce4:	f100 0804 	add.w	r8, r0, #4
 800fce8:	ba5b      	rev16	r3, r3
 800fcea:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800fcee:	2b01      	cmp	r3, #1
 800fcf0:	d13d      	bne.n	800fd6e <MDNS::HandleRequest(unsigned short)+0xc6>
 800fcf2:	5a14      	ldrh	r4, [r2, r0]
 800fcf4:	4b22      	ldr	r3, [pc, #136]	; (800fd80 <MDNS::HandleRequest(unsigned short)+0xd8>)
 800fcf6:	ba64      	rev16	r4, r4
 800fcf8:	6818      	ldr	r0, [r3, #0]
 800fcfa:	a904      	add	r1, sp, #16
 800fcfc:	b2a4      	uxth	r4, r4
 800fcfe:	f7ff fcf5 	bl	800f6ec <strcmp>
 800fd02:	b968      	cbnz	r0, 800fd20 <MDNS::HandleRequest(unsigned short)+0x78>
 800fd04:	2c01      	cmp	r4, #1
 800fd06:	d10b      	bne.n	800fd20 <MDNS::HandleRequest(unsigned short)+0x78>
 800fd08:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800fd0c:	491d      	ldr	r1, [pc, #116]	; (800fd84 <MDNS::HandleRequest(unsigned short)+0xdc>)
 800fd0e:	481e      	ldr	r0, [pc, #120]	; (800fd88 <MDNS::HandleRequest(unsigned short)+0xe0>)
 800fd10:	f831 2b04 	ldrh.w	r2, [r1], #4
 800fd14:	9300      	str	r3, [sp, #0]
 800fd16:	4b1d      	ldr	r3, [pc, #116]	; (800fd8c <MDNS::HandleRequest(unsigned short)+0xe4>)
 800fd18:	7800      	ldrb	r0, [r0, #0]
 800fd1a:	681b      	ldr	r3, [r3, #0]
 800fd1c:	f7ff fc2e 	bl	800f57c <udp_send>
 800fd20:	481b      	ldr	r0, [pc, #108]	; (800fd90 <MDNS::HandleRequest(unsigned short)+0xe8>)
 800fd22:	a904      	add	r1, sp, #16
 800fd24:	f7ff fce2 	bl	800f6ec <strcmp>
 800fd28:	f04f 0900 	mov.w	r9, #0
 800fd2c:	4e19      	ldr	r6, [pc, #100]	; (800fd94 <MDNS::HandleRequest(unsigned short)+0xec>)
 800fd2e:	9002      	str	r0, [sp, #8]
 800fd30:	6833      	ldr	r3, [r6, #0]
 800fd32:	b1c3      	cbz	r3, 800fd66 <MDNS::HandleRequest(unsigned short)+0xbe>
 800fd34:	9b02      	ldr	r3, [sp, #8]
 800fd36:	b123      	cbz	r3, 800fd42 <MDNS::HandleRequest(unsigned short)+0x9a>
 800fd38:	6870      	ldr	r0, [r6, #4]
 800fd3a:	a904      	add	r1, sp, #16
 800fd3c:	f7ff fcd6 	bl	800f6ec <strcmp>
 800fd40:	b988      	cbnz	r0, 800fd66 <MDNS::HandleRequest(unsigned short)+0xbe>
 800fd42:	2c0c      	cmp	r4, #12
 800fd44:	d10f      	bne.n	800fd66 <MDNS::HandleRequest(unsigned short)+0xbe>
 800fd46:	4649      	mov	r1, r9
 800fd48:	4628      	mov	r0, r5
 800fd4a:	f7ff fedd 	bl	800fb08 <MDNS::CreateMDNSMessage(unsigned int)>
 800fd4e:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800fd52:	480d      	ldr	r0, [pc, #52]	; (800fd88 <MDNS::HandleRequest(unsigned short)+0xe0>)
 800fd54:	9300      	str	r3, [sp, #0]
 800fd56:	4b0d      	ldr	r3, [pc, #52]	; (800fd8c <MDNS::HandleRequest(unsigned short)+0xe4>)
 800fd58:	f8bb 2000 	ldrh.w	r2, [fp]
 800fd5c:	681b      	ldr	r3, [r3, #0]
 800fd5e:	490e      	ldr	r1, [pc, #56]	; (800fd98 <MDNS::HandleRequest(unsigned short)+0xf0>)
 800fd60:	7800      	ldrb	r0, [r0, #0]
 800fd62:	f7ff fc0b 	bl	800f57c <udp_send>
 800fd66:	3610      	adds	r6, #16
 800fd68:	f1b9 0f00 	cmp.w	r9, #0
 800fd6c:	d001      	beq.n	800fd72 <MDNS::HandleRequest(unsigned short)+0xca>
 800fd6e:	3701      	adds	r7, #1
 800fd70:	e7a6      	b.n	800fcc0 <MDNS::HandleRequest(unsigned short)+0x18>
 800fd72:	f04f 0901 	mov.w	r9, #1
 800fd76:	e7db      	b.n	800fd30 <MDNS::HandleRequest(unsigned short)+0x88>
 800fd78:	2001a284 	andcs	sl, r1, r4, lsl #5
 800fd7c:	2001a07c 	andcs	sl, r1, ip, ror r0
 800fd80:	2001a280 	andcs	sl, r1, r0, lsl #5
 800fd84:	20019e54 	andcs	r9, r1, r4, asr lr
 800fd88:	2000000c 	andcs	r0, r0, ip
 800fd8c:	20019e50 	andcs	r9, r1, r0, asr lr
 800fd90:	08017028 	stmdaeq	r1, {r3, r5, ip, sp, lr}
 800fd94:	2001a058 	andcs	sl, r1, r8, asr r0
 800fd98:	2001a080 	andcs	sl, r1, r0, lsl #1

0800fd9c <MDNS::Parse()>:
 800fd9c:	4b08      	ldr	r3, [pc, #32]	; (800fdc0 <MDNS::Parse()+0x24>)
 800fd9e:	681a      	ldr	r2, [r3, #0]
 800fda0:	8853      	ldrh	r3, [r2, #2]
 800fda2:	ba5b      	rev16	r3, r3
 800fda4:	b299      	uxth	r1, r3
 800fda6:	041b      	lsls	r3, r3, #16
 800fda8:	d408      	bmi.n	800fdbc <MDNS::Parse()+0x20>
 800fdaa:	0b89      	lsrs	r1, r1, #14
 800fdac:	d106      	bne.n	800fdbc <MDNS::Parse()+0x20>
 800fdae:	8891      	ldrh	r1, [r2, #4]
 800fdb0:	b28b      	uxth	r3, r1
 800fdb2:	b11b      	cbz	r3, 800fdbc <MDNS::Parse()+0x20>
 800fdb4:	ba49      	rev16	r1, r1
 800fdb6:	b289      	uxth	r1, r1
 800fdb8:	f7ff bf76 	b.w	800fca8 <MDNS::HandleRequest(unsigned short)>
 800fdbc:	4770      	bx	lr
 800fdbe:	bf00      	nop
 800fdc0:	2001a284 	andcs	sl, r1, r4, lsl #5

0800fdc4 <MDNS::Run()>:
 800fdc4:	b538      	push	{r3, r4, r5, lr}
 800fdc6:	4d0c      	ldr	r5, [pc, #48]	; (800fdf8 <MDNS::Run()+0x34>)
 800fdc8:	4604      	mov	r4, r0
 800fdca:	480c      	ldr	r0, [pc, #48]	; (800fdfc <MDNS::Run()+0x38>)
 800fdcc:	462b      	mov	r3, r5
 800fdce:	4a0c      	ldr	r2, [pc, #48]	; (800fe00 <MDNS::Run()+0x3c>)
 800fdd0:	490c      	ldr	r1, [pc, #48]	; (800fe04 <MDNS::Run()+0x40>)
 800fdd2:	7800      	ldrb	r0, [r0, #0]
 800fdd4:	f7ff fbac 	bl	800f530 <udp_recv2>
 800fdd8:	4b0b      	ldr	r3, [pc, #44]	; (800fe08 <MDNS::Run()+0x44>)
 800fdda:	882a      	ldrh	r2, [r5, #0]
 800fddc:	8018      	strh	r0, [r3, #0]
 800fdde:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800fde2:	429a      	cmp	r2, r3
 800fde4:	d106      	bne.n	800fdf4 <MDNS::Run()+0x30>
 800fde6:	280c      	cmp	r0, #12
 800fde8:	d904      	bls.n	800fdf4 <MDNS::Run()+0x30>
 800fdea:	4620      	mov	r0, r4
 800fdec:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800fdf0:	f7ff bfd4 	b.w	800fd9c <MDNS::Parse()>
 800fdf4:	bd38      	pop	{r3, r4, r5, pc}
 800fdf6:	bf00      	nop
 800fdf8:	20019e4c 	andcs	r9, r1, ip, asr #28
 800fdfc:	2000000c 	andcs	r0, r0, ip
 800fe00:	20019e48 	andcs	r9, r1, r8, asr #28
 800fe04:	2001a284 	andcs	sl, r1, r4, lsl #5
 800fe08:	2001a078 	andcs	sl, r1, r8, ror r0

0800fe0c <MDNS::Print()>:
 800fe0c:	b510      	push	{r4, lr}
 800fe0e:	4816      	ldr	r0, [pc, #88]	; (800fe68 <MDNS::Print()+0x5c>)
 800fe10:	f7f9 fbae 	bl	8009570 <printf>
 800fe14:	4b15      	ldr	r3, [pc, #84]	; (800fe6c <MDNS::Print()+0x60>)
 800fe16:	681b      	ldr	r3, [r3, #0]
 800fe18:	3301      	adds	r3, #1
 800fe1a:	d104      	bne.n	800fe26 <MDNS::Print()+0x1a>
 800fe1c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fe20:	4813      	ldr	r0, [pc, #76]	; (800fe70 <MDNS::Print()+0x64>)
 800fe22:	f7f9 bba5 	b.w	8009570 <printf>
 800fe26:	4b13      	ldr	r3, [pc, #76]	; (800fe74 <MDNS::Print()+0x68>)
 800fe28:	4c13      	ldr	r4, [pc, #76]	; (800fe78 <MDNS::Print()+0x6c>)
 800fe2a:	6819      	ldr	r1, [r3, #0]
 800fe2c:	4813      	ldr	r0, [pc, #76]	; (800fe7c <MDNS::Print()+0x70>)
 800fe2e:	f7f9 fb9f 	bl	8009570 <printf>
 800fe32:	6823      	ldr	r3, [r4, #0]
 800fe34:	b14b      	cbz	r3, 800fe4a <MDNS::Print()+0x3e>
 800fe36:	4a12      	ldr	r2, [pc, #72]	; (800fe80 <MDNS::Print()+0x74>)
 800fe38:	68a3      	ldr	r3, [r4, #8]
 800fe3a:	6861      	ldr	r1, [r4, #4]
 800fe3c:	2b00      	cmp	r3, #0
 800fe3e:	bf08      	it	eq
 800fe40:	4613      	moveq	r3, r2
 800fe42:	4810      	ldr	r0, [pc, #64]	; (800fe84 <MDNS::Print()+0x78>)
 800fe44:	89a2      	ldrh	r2, [r4, #12]
 800fe46:	f7f9 fb93 	bl	8009570 <printf>
 800fe4a:	6923      	ldr	r3, [r4, #16]
 800fe4c:	b15b      	cbz	r3, 800fe66 <MDNS::Print()+0x5a>
 800fe4e:	69a3      	ldr	r3, [r4, #24]
 800fe50:	4a0b      	ldr	r2, [pc, #44]	; (800fe80 <MDNS::Print()+0x74>)
 800fe52:	6961      	ldr	r1, [r4, #20]
 800fe54:	2b00      	cmp	r3, #0
 800fe56:	bf08      	it	eq
 800fe58:	4613      	moveq	r3, r2
 800fe5a:	480a      	ldr	r0, [pc, #40]	; (800fe84 <MDNS::Print()+0x78>)
 800fe5c:	8ba2      	ldrh	r2, [r4, #28]
 800fe5e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fe62:	f7f9 bb85 	b.w	8009570 <printf>
 800fe66:	bd10      	pop	{r4, pc}
 800fe68:	08017045 	stmdaeq	r1, {r0, r2, r6, ip, sp, lr}
 800fe6c:	2000000c 	andcs	r0, r0, ip
 800fe70:	0801704b 	stmdaeq	r1, {r0, r1, r3, r6, ip, sp, lr}
 800fe74:	2001a280 	andcs	sl, r1, r0, lsl #5
 800fe78:	2001a058 	andcs	sl, r1, r8, asr r0
 800fe7c:	08017059 	stmdaeq	r1, {r0, r3, r4, r6, ip, sp, lr}
 800fe80:	08015393 	stmdaeq	r1, {r0, r1, r4, r7, r8, r9, ip, lr}
 800fe84:	08017065 	stmdaeq	r1, {r0, r2, r5, r6, ip, sp, lr}

0800fe88 <strncpy.constprop.0.isra.0>:
 800fe88:	233f      	movs	r3, #63	; 0x3f
 800fe8a:	3901      	subs	r1, #1
 800fe8c:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800fe90:	b92a      	cbnz	r2, 800fe9e <strncpy.constprop.0.isra.0+0x16>
 800fe92:	4403      	add	r3, r0
 800fe94:	4298      	cmp	r0, r3
 800fe96:	d006      	beq.n	800fea6 <strncpy.constprop.0.isra.0+0x1e>
 800fe98:	f800 2b01 	strb.w	r2, [r0], #1
 800fe9c:	e7fa      	b.n	800fe94 <strncpy.constprop.0.isra.0+0xc>
 800fe9e:	3b01      	subs	r3, #1
 800fea0:	f800 2b01 	strb.w	r2, [r0], #1
 800fea4:	d1f2      	bne.n	800fe8c <strncpy.constprop.0.isra.0+0x4>
 800fea6:	4770      	bx	lr

0800fea8 <Network::Network()>:
 800fea8:	4a12      	ldr	r2, [pc, #72]	; (800fef4 <Network::Network()+0x4c>)
 800feaa:	2300      	movs	r3, #0
 800feac:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 800feb0:	6010      	str	r0, [r2, #0]
 800feb2:	2201      	movs	r2, #1
 800feb4:	e9c0 2100 	strd	r2, r1, [r0]
 800feb8:	e9c0 2302 	strd	r2, r3, [r0, #8]
 800febc:	2200      	movs	r2, #0
 800febe:	e9c0 3330 	strd	r3, r3, [r0, #192]	; 0xc0
 800fec2:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800fec6:	490c      	ldr	r1, [pc, #48]	; (800fef8 <Network::Network()+0x50>)
 800fec8:	6102      	str	r2, [r0, #16]
 800feca:	f8c0 30b8 	str.w	r3, [r0, #184]	; 0xb8
 800fece:	f8c0 30c8 	str.w	r3, [r0, #200]	; 0xc8
 800fed2:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
 800fed6:	61c3      	str	r3, [r0, #28]
 800fed8:	f880 3020 	strb.w	r3, [r0, #32]
 800fedc:	f880 3060 	strb.w	r3, [r0, #96]	; 0x60
 800fee0:	f100 02a5 	add.w	r2, r0, #165	; 0xa5
 800fee4:	f811 3b01 	ldrb.w	r3, [r1], #1
 800fee8:	f802 3f01 	strb.w	r3, [r2, #1]!
 800feec:	2b00      	cmp	r3, #0
 800feee:	d1f9      	bne.n	800fee4 <Network::Network()+0x3c>
 800fef0:	4770      	bx	lr
 800fef2:	bf00      	nop
 800fef4:	2001a288 	andcs	sl, r1, r8, lsl #5
 800fef8:	08017070 	stmdaeq	r1, {r4, r5, r6, ip, sp, lr}

0800fefc <Network::Shutdown()>:
 800fefc:	b508      	push	{r3, lr}
 800fefe:	30bc      	adds	r0, #188	; 0xbc
 800ff00:	f001 fc1e 	bl	8011740 <NetworkDisplay::ShowShutdown()>
 800ff04:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800ff08:	f7f7 b99e 	b.w	8007248 <net_shutdown>

0800ff0c <Network::Begin(unsigned short)>:
 800ff0c:	4608      	mov	r0, r1
 800ff0e:	f7ff ba9f 	b.w	800f450 <udp_bind>

0800ff12 <Network::End(unsigned short)>:
 800ff12:	4608      	mov	r0, r1
 800ff14:	f7ff bab6 	b.w	800f484 <udp_unbind>

0800ff18 <Network::MacAddressCopyTo(unsigned char*)>:
 800ff18:	f100 039f 	add.w	r3, r0, #159	; 0x9f
 800ff1c:	3901      	subs	r1, #1
 800ff1e:	30a5      	adds	r0, #165	; 0xa5
 800ff20:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800ff24:	4283      	cmp	r3, r0
 800ff26:	f801 2f01 	strb.w	r2, [r1, #1]!
 800ff2a:	d1f9      	bne.n	800ff20 <Network::MacAddressCopyTo(unsigned char*)+0x8>
 800ff2c:	4770      	bx	lr

0800ff2e <Network::JoinGroup(int, unsigned int)>:
 800ff2e:	4610      	mov	r0, r2
 800ff30:	f001 b814 	b.w	8010f5c <igmp_join>

0800ff34 <Network::SetDefaultIp()>:
 800ff34:	f890 30a4 	ldrb.w	r3, [r0, #164]	; 0xa4
 800ff38:	f890 20a3 	ldrb.w	r2, [r0, #163]	; 0xa3
 800ff3c:	041b      	lsls	r3, r3, #16
 800ff3e:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 800ff42:	f890 20a5 	ldrb.w	r2, [r0, #165]	; 0xa5
 800ff46:	3302      	adds	r3, #2
 800ff48:	eb03 6302 	add.w	r3, r3, r2, lsl #24
 800ff4c:	22ff      	movs	r2, #255	; 0xff
 800ff4e:	6143      	str	r3, [r0, #20]
 800ff50:	e9c0 3206 	strd	r3, r2, [r0, #24]
 800ff54:	4770      	bx	lr
	...

0800ff58 <Network::Init(NetworkParamsStore*)>:
 800ff58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ff5c:	b0a5      	sub	sp, #148	; 0x94
 800ff5e:	4604      	mov	r4, r0
 800ff60:	a80b      	add	r0, sp, #44	; 0x2c
 800ff62:	f000 fae9 	bl	8010538 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 800ff66:	a80b      	add	r0, sp, #44	; 0x2c
 800ff68:	f000 faf2 	bl	8010550 <NetworkParams::Load()>
 800ff6c:	b110      	cbz	r0, 800ff74 <Network::Init(NetworkParamsStore*)+0x1c>
 800ff6e:	a80b      	add	r0, sp, #44	; 0x2c
 800ff70:	f000 fcc5 	bl	80108fe <NetworkParams::Dump()>
 800ff74:	f104 05bc 	add.w	r5, r4, #188	; 0xbc
 800ff78:	4628      	mov	r0, r5
 800ff7a:	f001 fbc3 	bl	8011704 <NetworkDisplay::ShowEmacStart()>
 800ff7e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800ff80:	f104 06a0 	add.w	r6, r4, #160	; 0xa0
 800ff84:	9308      	str	r3, [sp, #32]
 800ff86:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800ff88:	4630      	mov	r0, r6
 800ff8a:	9309      	str	r3, [sp, #36]	; 0x24
 800ff8c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800ff8e:	f104 0720 	add.w	r7, r4, #32
 800ff92:	930a      	str	r3, [sp, #40]	; 0x28
 800ff94:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 800ff98:	7163      	strb	r3, [r4, #5]
 800ff9a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800ff9c:	f013 0240 	ands.w	r2, r3, #64	; 0x40
 800ffa0:	bf18      	it	ne
 800ffa2:	f8dd 2085 	ldrne.w	r2, [sp, #133]	; 0x85
 800ffa6:	061b      	lsls	r3, r3, #24
 800ffa8:	bf54      	ite	pl
 800ffaa:	2300      	movpl	r3, #0
 800ffac:	f8dd 3089 	ldrmi.w	r3, [sp, #137]	; 0x89
 800ffb0:	60e2      	str	r2, [r4, #12]
 800ffb2:	6123      	str	r3, [r4, #16]
 800ffb4:	f003 ff5c 	bl	8013e70 <emac_start(unsigned char*)>
 800ffb8:	f89d 3045 	ldrb.w	r3, [sp, #69]	; 0x45
 800ffbc:	2b00      	cmp	r3, #0
 800ffbe:	f040 80c7 	bne.w	8010150 <Network::Init(NetworkParamsStore*)+0x1f8>
 800ffc2:	4984      	ldr	r1, [pc, #528]	; (80101d4 <Network::Init(NetworkParamsStore*)+0x27c>)
 800ffc4:	f104 001f 	add.w	r0, r4, #31
 800ffc8:	f811 2b01 	ldrb.w	r2, [r1], #1
 800ffcc:	f103 0c01 	add.w	ip, r3, #1
 800ffd0:	2a00      	cmp	r2, #0
 800ffd2:	f040 80b9 	bne.w	8010148 <Network::Init(NetworkParamsStore*)+0x1f0>
 800ffd6:	f894 20a3 	ldrb.w	r2, [r4, #163]	; 0xa3
 800ffda:	18e1      	adds	r1, r4, r3
 800ffdc:	0910      	lsrs	r0, r2, #4
 800ffde:	2a9f      	cmp	r2, #159	; 0x9f
 800ffe0:	f002 020f 	and.w	r2, r2, #15
 800ffe4:	bf94      	ite	ls
 800ffe6:	3030      	addls	r0, #48	; 0x30
 800ffe8:	3037      	addhi	r0, #55	; 0x37
 800ffea:	2a09      	cmp	r2, #9
 800ffec:	bf94      	ite	ls
 800ffee:	3230      	addls	r2, #48	; 0x30
 800fff0:	3237      	addhi	r2, #55	; 0x37
 800fff2:	44a4      	add	ip, r4
 800fff4:	f881 0020 	strb.w	r0, [r1, #32]
 800fff8:	f88c 2020 	strb.w	r2, [ip, #32]
 800fffc:	f894 20a4 	ldrb.w	r2, [r4, #164]	; 0xa4
 8010000:	f103 0802 	add.w	r8, r3, #2
 8010004:	0910      	lsrs	r0, r2, #4
 8010006:	2a9f      	cmp	r2, #159	; 0x9f
 8010008:	f002 020f 	and.w	r2, r2, #15
 801000c:	bf94      	ite	ls
 801000e:	3030      	addls	r0, #48	; 0x30
 8010010:	3037      	addhi	r0, #55	; 0x37
 8010012:	f103 0e03 	add.w	lr, r3, #3
 8010016:	2a09      	cmp	r2, #9
 8010018:	eb04 0c08 	add.w	ip, r4, r8
 801001c:	f88c 0020 	strb.w	r0, [ip, #32]
 8010020:	bf94      	ite	ls
 8010022:	3230      	addls	r2, #48	; 0x30
 8010024:	3237      	addhi	r2, #55	; 0x37
 8010026:	eb04 000e 	add.w	r0, r4, lr
 801002a:	f880 2020 	strb.w	r2, [r0, #32]
 801002e:	f894 20a5 	ldrb.w	r2, [r4, #165]	; 0xa5
 8010032:	f103 0c04 	add.w	ip, r3, #4
 8010036:	0910      	lsrs	r0, r2, #4
 8010038:	2a9f      	cmp	r2, #159	; 0x9f
 801003a:	f002 020f 	and.w	r2, r2, #15
 801003e:	bf94      	ite	ls
 8010040:	3030      	addls	r0, #48	; 0x30
 8010042:	3037      	addhi	r0, #55	; 0x37
 8010044:	3305      	adds	r3, #5
 8010046:	2a09      	cmp	r2, #9
 8010048:	4423      	add	r3, r4
 801004a:	44a4      	add	ip, r4
 801004c:	bf94      	ite	ls
 801004e:	3230      	addls	r2, #48	; 0x30
 8010050:	3237      	addhi	r2, #55	; 0x37
 8010052:	f88c 0020 	strb.w	r0, [ip, #32]
 8010056:	f883 2020 	strb.w	r2, [r3, #32]
 801005a:	2300      	movs	r3, #0
 801005c:	f881 3026 	strb.w	r3, [r1, #38]	; 0x26
 8010060:	f003 ffb0 	bl	8013fc4 <net::link_register_read()>
 8010064:	7963      	ldrb	r3, [r4, #5]
 8010066:	6020      	str	r0, [r4, #0]
 8010068:	2800      	cmp	r0, #0
 801006a:	f040 809c 	bne.w	80101a6 <Network::Init(NetworkParamsStore*)+0x24e>
 801006e:	2b00      	cmp	r3, #0
 8010070:	f040 80aa 	bne.w	80101c8 <Network::Init(NetworkParamsStore*)+0x270>
 8010074:	9b08      	ldr	r3, [sp, #32]
 8010076:	2b00      	cmp	r3, #0
 8010078:	d173      	bne.n	8010162 <Network::Init(NetworkParamsStore*)+0x20a>
 801007a:	4620      	mov	r0, r4
 801007c:	f7ff ff5a 	bl	800ff34 <Network::SetDefaultIp()>
 8010080:	6963      	ldr	r3, [r4, #20]
 8010082:	69e2      	ldr	r2, [r4, #28]
 8010084:	9308      	str	r3, [sp, #32]
 8010086:	e9cd 2309 	strd	r2, r3, [sp, #36]	; 0x24
 801008a:	1de3      	adds	r3, r4, #7
 801008c:	f104 0905 	add.w	r9, r4, #5
 8010090:	9302      	str	r3, [sp, #8]
 8010092:	9300      	str	r3, [sp, #0]
 8010094:	463a      	mov	r2, r7
 8010096:	464b      	mov	r3, r9
 8010098:	4630      	mov	r0, r6
 801009a:	a908      	add	r1, sp, #32
 801009c:	f7f7 f884 	bl	80071a8 <net_init>
 80100a0:	79e3      	ldrb	r3, [r4, #7]
 80100a2:	b11b      	cbz	r3, 80100ac <Network::Init(NetworkParamsStore*)+0x154>
 80100a4:	2104      	movs	r1, #4
 80100a6:	4628      	mov	r0, r5
 80100a8:	f001 fb50 	bl	801174c <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 80100ac:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 80100b0:	f89d a08d 	ldrb.w	sl, [sp, #141]	; 0x8d
 80100b4:	9304      	str	r3, [sp, #16]
 80100b6:	233c      	movs	r3, #60	; 0x3c
 80100b8:	fb03 f30a 	mul.w	r3, r3, sl
 80100bc:	f8df 8118 	ldr.w	r8, [pc, #280]	; 80101d8 <Network::Init(NetworkParamsStore*)+0x280>
 80100c0:	f8df b118 	ldr.w	fp, [pc, #280]	; 80101dc <Network::Init(NetworkParamsStore*)+0x284>
 80100c4:	9303      	str	r3, [sp, #12]
 80100c6:	79e3      	ldrb	r3, [r4, #7]
 80100c8:	b393      	cbz	r3, 8010130 <Network::Init(NetworkParamsStore*)+0x1d8>
 80100ca:	f1ba 0f00 	cmp.w	sl, #0
 80100ce:	d02f      	beq.n	8010130 <Network::Init(NetworkParamsStore*)+0x1d8>
 80100d0:	9b04      	ldr	r3, [sp, #16]
 80100d2:	b36b      	cbz	r3, 8010130 <Network::Init(NetworkParamsStore*)+0x1d8>
 80100d4:	2104      	movs	r1, #4
 80100d6:	f8d8 0000 	ldr.w	r0, [r8]
 80100da:	f002 f95d 	bl	8012398 <LedBlink::SetMode(ledblink::Mode)>
 80100de:	2103      	movs	r1, #3
 80100e0:	4628      	mov	r0, r5
 80100e2:	f001 fb33 	bl	801174c <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 80100e6:	2000      	movs	r0, #0
 80100e8:	f002 fc14 	bl	8012914 <time>
 80100ec:	9005      	str	r0, [sp, #20]
 80100ee:	2000      	movs	r0, #0
 80100f0:	f002 fc10 	bl	8012914 <time>
 80100f4:	9b05      	ldr	r3, [sp, #20]
 80100f6:	493a      	ldr	r1, [pc, #232]	; (80101e0 <Network::Init(NetworkParamsStore*)+0x288>)
 80100f8:	1ac0      	subs	r0, r0, r3
 80100fa:	9b03      	ldr	r3, [sp, #12]
 80100fc:	4298      	cmp	r0, r3
 80100fe:	db38      	blt.n	8010172 <Network::Init(NetworkParamsStore*)+0x21a>
 8010100:	2101      	movs	r1, #1
 8010102:	4628      	mov	r0, r5
 8010104:	f001 fb22 	bl	801174c <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 8010108:	2101      	movs	r1, #1
 801010a:	f8d8 0000 	ldr.w	r0, [r8]
 801010e:	f002 f943 	bl	8012398 <LedBlink::SetMode(ledblink::Mode)>
 8010112:	2301      	movs	r3, #1
 8010114:	7163      	strb	r3, [r4, #5]
 8010116:	2300      	movs	r3, #0
 8010118:	71e3      	strb	r3, [r4, #7]
 801011a:	9b02      	ldr	r3, [sp, #8]
 801011c:	463a      	mov	r2, r7
 801011e:	9300      	str	r3, [sp, #0]
 8010120:	4630      	mov	r0, r6
 8010122:	464b      	mov	r3, r9
 8010124:	a908      	add	r1, sp, #32
 8010126:	f7f7 f83f 	bl	80071a8 <net_init>
 801012a:	7963      	ldrb	r3, [r4, #5]
 801012c:	2b00      	cmp	r3, #0
 801012e:	d0ca      	beq.n	80100c6 <Network::Init(NetworkParamsStore*)+0x16e>
 8010130:	9b08      	ldr	r3, [sp, #32]
 8010132:	4628      	mov	r0, r5
 8010134:	6163      	str	r3, [r4, #20]
 8010136:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8010138:	61e3      	str	r3, [r4, #28]
 801013a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801013c:	61a3      	str	r3, [r4, #24]
 801013e:	f001 fae7 	bl	8011710 <NetworkDisplay::ShowIp()>
 8010142:	b025      	add	sp, #148	; 0x94
 8010144:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010148:	4663      	mov	r3, ip
 801014a:	f800 2f01 	strb.w	r2, [r0, #1]!
 801014e:	e73b      	b.n	800ffc8 <Network::Init(NetworkParamsStore*)+0x70>
 8010150:	4638      	mov	r0, r7
 8010152:	f10d 0145 	add.w	r1, sp, #69	; 0x45
 8010156:	f7ff fe97 	bl	800fe88 <strncpy.constprop.0.isra.0>
 801015a:	2300      	movs	r3, #0
 801015c:	f884 305f 	strb.w	r3, [r4, #95]	; 0x5f
 8010160:	e77e      	b.n	8010060 <Network::Init(NetworkParamsStore*)+0x108>
 8010162:	69e1      	ldr	r1, [r4, #28]
 8010164:	e9d4 2305 	ldrd	r2, r3, [r4, #20]
 8010168:	4053      	eors	r3, r2
 801016a:	420b      	tst	r3, r1
 801016c:	bf18      	it	ne
 801016e:	920a      	strne	r2, [sp, #40]	; 0x28
 8010170:	e78b      	b.n	801008a <Network::Init(NetworkParamsStore*)+0x132>
 8010172:	f8d8 3000 	ldr.w	r3, [r8]
 8010176:	f8d3 c00c 	ldr.w	ip, [r3, #12]
 801017a:	f1bc 0f00 	cmp.w	ip, #0
 801017e:	d0b6      	beq.n	80100ee <Network::Init(NetworkParamsStore*)+0x196>
 8010180:	6808      	ldr	r0, [r1, #0]
 8010182:	695a      	ldr	r2, [r3, #20]
 8010184:	1a80      	subs	r0, r0, r2
 8010186:	4584      	cmp	ip, r0
 8010188:	d8b1      	bhi.n	80100ee <Network::Init(NetworkParamsStore*)+0x196>
 801018a:	6808      	ldr	r0, [r1, #0]
 801018c:	6158      	str	r0, [r3, #20]
 801018e:	6918      	ldr	r0, [r3, #16]
 8010190:	2801      	cmp	r0, #1
 8010192:	f080 0201 	eor.w	r2, r0, #1
 8010196:	611a      	str	r2, [r3, #16]
 8010198:	bf16      	itet	ne
 801019a:	2301      	movne	r3, #1
 801019c:	f8cb 0014 	streq.w	r0, [fp, #20]
 80101a0:	f8cb 3010 	strne.w	r3, [fp, #16]
 80101a4:	e7a3      	b.n	80100ee <Network::Init(NetworkParamsStore*)+0x196>
 80101a6:	b11b      	cbz	r3, 80101b0 <Network::Init(NetworkParamsStore*)+0x258>
 80101a8:	2300      	movs	r3, #0
 80101aa:	e9c4 3306 	strd	r3, r3, [r4, #24]
 80101ae:	9308      	str	r3, [sp, #32]
 80101b0:	2300      	movs	r3, #0
 80101b2:	f88d 301f 	strb.w	r3, [sp, #31]
 80101b6:	f10d 031f 	add.w	r3, sp, #31
 80101ba:	463a      	mov	r2, r7
 80101bc:	4630      	mov	r0, r6
 80101be:	9300      	str	r3, [sp, #0]
 80101c0:	a908      	add	r1, sp, #32
 80101c2:	f7f6 fff1 	bl	80071a8 <net_init>
 80101c6:	e7b3      	b.n	8010130 <Network::Init(NetworkParamsStore*)+0x1d8>
 80101c8:	2101      	movs	r1, #1
 80101ca:	4628      	mov	r0, r5
 80101cc:	f001 fabe 	bl	801174c <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 80101d0:	e75b      	b.n	801008a <Network::Init(NetworkParamsStore*)+0x132>
 80101d2:	bf00      	nop
 80101d4:	08017075 	stmdaeq	r1, {r0, r2, r4, r5, r6, ip, sp, lr}
 80101d8:	2001a94c 	andcs	sl, r1, ip, asr #18
 80101dc:	40011000 	andmi	r1, r1, r0
 80101e0:	2001a964 	andcs	sl, r1, r4, ror #18

080101e4 <Network::SetIp(unsigned int)>:
 80101e4:	7943      	ldrb	r3, [r0, #5]
 80101e6:	b570      	push	{r4, r5, r6, lr}
 80101e8:	4604      	mov	r4, r0
 80101ea:	460d      	mov	r5, r1
 80101ec:	2600      	movs	r6, #0
 80101ee:	b113      	cbz	r3, 80101f6 <Network::SetIp(unsigned int)+0x12>
 80101f0:	7146      	strb	r6, [r0, #5]
 80101f2:	f7fe fecb 	bl	800ef8c <net_dhcp_release>
 80101f6:	71e6      	strb	r6, [r4, #7]
 80101f8:	b975      	cbnz	r5, 8010218 <Network::SetIp(unsigned int)+0x34>
 80101fa:	4620      	mov	r0, r4
 80101fc:	f7ff fe9a 	bl	800ff34 <Network::SetDefaultIp()>
 8010200:	6960      	ldr	r0, [r4, #20]
 8010202:	f7fe fe87 	bl	800ef14 <net_set_ip>
 8010206:	34bc      	adds	r4, #188	; 0xbc
 8010208:	4620      	mov	r0, r4
 801020a:	f001 fa81 	bl	8011710 <NetworkDisplay::ShowIp()>
 801020e:	4620      	mov	r0, r4
 8010210:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010214:	f001 ba82 	b.w	801171c <NetworkDisplay::ShowNetMask()>
 8010218:	4628      	mov	r0, r5
 801021a:	f7fe fe7b 	bl	800ef14 <net_set_ip>
 801021e:	f8d4 00b8 	ldr.w	r0, [r4, #184]	; 0xb8
 8010222:	e9c4 5505 	strd	r5, r5, [r4, #20]
 8010226:	2800      	cmp	r0, #0
 8010228:	d0ed      	beq.n	8010206 <Network::SetIp(unsigned int)+0x22>
 801022a:	6803      	ldr	r3, [r0, #0]
 801022c:	4629      	mov	r1, r5
 801022e:	689b      	ldr	r3, [r3, #8]
 8010230:	4798      	blx	r3
 8010232:	f8d4 00b8 	ldr.w	r0, [r4, #184]	; 0xb8
 8010236:	2100      	movs	r1, #0
 8010238:	6803      	ldr	r3, [r0, #0]
 801023a:	699b      	ldr	r3, [r3, #24]
 801023c:	4798      	blx	r3
 801023e:	e7e2      	b.n	8010206 <Network::SetIp(unsigned int)+0x22>

08010240 <Network::SetNetmask(unsigned int)>:
 8010240:	69c2      	ldr	r2, [r0, #28]
 8010242:	b510      	push	{r4, lr}
 8010244:	428a      	cmp	r2, r1
 8010246:	4604      	mov	r4, r0
 8010248:	d00f      	beq.n	801026a <Network::SetNetmask(unsigned int)+0x2a>
 801024a:	61c1      	str	r1, [r0, #28]
 801024c:	f8d0 00b8 	ldr.w	r0, [r0, #184]	; 0xb8
 8010250:	b110      	cbz	r0, 8010258 <Network::SetNetmask(unsigned int)+0x18>
 8010252:	6803      	ldr	r3, [r0, #0]
 8010254:	68db      	ldr	r3, [r3, #12]
 8010256:	4798      	blx	r3
 8010258:	34bc      	adds	r4, #188	; 0xbc
 801025a:	4620      	mov	r0, r4
 801025c:	f001 fa58 	bl	8011710 <NetworkDisplay::ShowIp()>
 8010260:	4620      	mov	r0, r4
 8010262:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010266:	f001 ba59 	b.w	801171c <NetworkDisplay::ShowNetMask()>
 801026a:	bd10      	pop	{r4, pc}

0801026c <Network::SetHostName(char const*)>:
 801026c:	b570      	push	{r4, r5, r6, lr}
 801026e:	4604      	mov	r4, r0
 8010270:	f100 0520 	add.w	r5, r0, #32
 8010274:	4628      	mov	r0, r5
 8010276:	f7ff fe07 	bl	800fe88 <strncpy.constprop.0.isra.0>
 801027a:	2300      	movs	r3, #0
 801027c:	f8d4 00b8 	ldr.w	r0, [r4, #184]	; 0xb8
 8010280:	f884 305f 	strb.w	r3, [r4, #95]	; 0x5f
 8010284:	b158      	cbz	r0, 801029e <Network::SetHostName(char const*)+0x32>
 8010286:	6803      	ldr	r3, [r0, #0]
 8010288:	695e      	ldr	r6, [r3, #20]
 801028a:	462b      	mov	r3, r5
 801028c:	461a      	mov	r2, r3
 801028e:	7811      	ldrb	r1, [r2, #0]
 8010290:	3301      	adds	r3, #1
 8010292:	2900      	cmp	r1, #0
 8010294:	d1fa      	bne.n	801028c <Network::SetHostName(char const*)+0x20>
 8010296:	1b52      	subs	r2, r2, r5
 8010298:	4629      	mov	r1, r5
 801029a:	b292      	uxth	r2, r2
 801029c:	47b0      	blx	r6
 801029e:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 80102a2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80102a6:	f001 ba45 	b.w	8011734 <NetworkDisplay::ShowHostName()>

080102aa <Network::SetZeroconf()>:
 80102aa:	b530      	push	{r4, r5, lr}
 80102ac:	b085      	sub	sp, #20
 80102ae:	4604      	mov	r4, r0
 80102b0:	a801      	add	r0, sp, #4
 80102b2:	f7fe fe75 	bl	800efa0 <net_set_zeroconf>
 80102b6:	71e0      	strb	r0, [r4, #7]
 80102b8:	b170      	cbz	r0, 80102d8 <Network::SetZeroconf()+0x2e>
 80102ba:	9b01      	ldr	r3, [sp, #4]
 80102bc:	f8d4 00b8 	ldr.w	r0, [r4, #184]	; 0xb8
 80102c0:	6163      	str	r3, [r4, #20]
 80102c2:	9b02      	ldr	r3, [sp, #8]
 80102c4:	61e3      	str	r3, [r4, #28]
 80102c6:	9b03      	ldr	r3, [sp, #12]
 80102c8:	61a3      	str	r3, [r4, #24]
 80102ca:	2300      	movs	r3, #0
 80102cc:	7163      	strb	r3, [r4, #5]
 80102ce:	b118      	cbz	r0, 80102d8 <Network::SetZeroconf()+0x2e>
 80102d0:	6803      	ldr	r3, [r0, #0]
 80102d2:	2101      	movs	r1, #1
 80102d4:	699b      	ldr	r3, [r3, #24]
 80102d6:	4798      	blx	r3
 80102d8:	f104 05bc 	add.w	r5, r4, #188	; 0xbc
 80102dc:	4628      	mov	r0, r5
 80102de:	f001 fa17 	bl	8011710 <NetworkDisplay::ShowIp()>
 80102e2:	4628      	mov	r0, r5
 80102e4:	f001 fa1a 	bl	801171c <NetworkDisplay::ShowNetMask()>
 80102e8:	79e0      	ldrb	r0, [r4, #7]
 80102ea:	b005      	add	sp, #20
 80102ec:	bd30      	pop	{r4, r5, pc}
	...

080102f0 <Network::EnableDhcp()>:
 80102f0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80102f2:	4e25      	ldr	r6, [pc, #148]	; (8010388 <Network::EnableDhcp()+0x98>)
 80102f4:	4604      	mov	r4, r0
 80102f6:	6833      	ldr	r3, [r6, #0]
 80102f8:	b085      	sub	sp, #20
 80102fa:	781f      	ldrb	r7, [r3, #0]
 80102fc:	b137      	cbz	r7, 801030c <Network::EnableDhcp()+0x1c>
 80102fe:	2200      	movs	r2, #0
 8010300:	2104      	movs	r1, #4
 8010302:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8010306:	701a      	strb	r2, [r3, #0]
 8010308:	f002 fcec 	bl	8012ce4 <fwdgt_config>
 801030c:	f104 05bc 	add.w	r5, r4, #188	; 0xbc
 8010310:	2101      	movs	r1, #1
 8010312:	4628      	mov	r0, r5
 8010314:	f001 fa1a 	bl	801174c <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 8010318:	1de2      	adds	r2, r4, #7
 801031a:	f104 0120 	add.w	r1, r4, #32
 801031e:	a801      	add	r0, sp, #4
 8010320:	f7fe fe08 	bl	800ef34 <net_set_dhcp>
 8010324:	79e3      	ldrb	r3, [r4, #7]
 8010326:	7160      	strb	r0, [r4, #5]
 8010328:	b35b      	cbz	r3, 8010382 <Network::EnableDhcp()+0x92>
 801032a:	2104      	movs	r1, #4
 801032c:	4628      	mov	r0, r5
 801032e:	f001 fa0d 	bl	801174c <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 8010332:	b16f      	cbz	r7, 8010350 <Network::EnableDhcp()+0x60>
 8010334:	2102      	movs	r1, #2
 8010336:	f64f 70ff 	movw	r0, #65535	; 0xffff
 801033a:	6836      	ldr	r6, [r6, #0]
 801033c:	f002 fcd2 	bl	8012ce4 <fwdgt_config>
 8010340:	2801      	cmp	r0, #1
 8010342:	bf0c      	ite	eq
 8010344:	2301      	moveq	r3, #1
 8010346:	2300      	movne	r3, #0
 8010348:	7033      	strb	r3, [r6, #0]
 801034a:	d101      	bne.n	8010350 <Network::EnableDhcp()+0x60>
 801034c:	f002 fcba 	bl	8012cc4 <fwdgt_enable>
 8010350:	9b01      	ldr	r3, [sp, #4]
 8010352:	f8d4 00b8 	ldr.w	r0, [r4, #184]	; 0xb8
 8010356:	6163      	str	r3, [r4, #20]
 8010358:	9b02      	ldr	r3, [sp, #8]
 801035a:	61e3      	str	r3, [r4, #28]
 801035c:	9b03      	ldr	r3, [sp, #12]
 801035e:	61a3      	str	r3, [r4, #24]
 8010360:	b118      	cbz	r0, 801036a <Network::EnableDhcp()+0x7a>
 8010362:	6803      	ldr	r3, [r0, #0]
 8010364:	7961      	ldrb	r1, [r4, #5]
 8010366:	699b      	ldr	r3, [r3, #24]
 8010368:	4798      	blx	r3
 801036a:	4628      	mov	r0, r5
 801036c:	f001 f9d0 	bl	8011710 <NetworkDisplay::ShowIp()>
 8010370:	4628      	mov	r0, r5
 8010372:	f001 f9d3 	bl	801171c <NetworkDisplay::ShowNetMask()>
 8010376:	4628      	mov	r0, r5
 8010378:	f001 f9d6 	bl	8011728 <NetworkDisplay::ShowGatewayIp()>
 801037c:	7960      	ldrb	r0, [r4, #5]
 801037e:	b005      	add	sp, #20
 8010380:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010382:	2102      	movs	r1, #2
 8010384:	e7d2      	b.n	801032c <Network::EnableDhcp()+0x3c>
 8010386:	bf00      	nop
 8010388:	2001a950 	andcs	sl, r1, r0, asr r9

0801038c <Network::SetQueuedStaticIp(unsigned int, unsigned int)>:
 801038c:	b109      	cbz	r1, 8010392 <Network::SetQueuedStaticIp(unsigned int, unsigned int)+0x6>
 801038e:	f8c0 10c4 	str.w	r1, [r0, #196]	; 0xc4
 8010392:	b10a      	cbz	r2, 8010398 <Network::SetQueuedStaticIp(unsigned int, unsigned int)+0xc>
 8010394:	f8c0 20c8 	str.w	r2, [r0, #200]	; 0xc8
 8010398:	f8d0 30c0 	ldr.w	r3, [r0, #192]	; 0xc0
 801039c:	f043 0303 	orr.w	r3, r3, #3
 80103a0:	f8c0 30c0 	str.w	r3, [r0, #192]	; 0xc0
 80103a4:	4770      	bx	lr

080103a6 <Network::ApplyQueuedConfig()>:
 80103a6:	f8d0 30c0 	ldr.w	r3, [r0, #192]	; 0xc0
 80103aa:	b510      	push	{r4, lr}
 80103ac:	4604      	mov	r4, r0
 80103ae:	b3c3      	cbz	r3, 8010422 <Network::ApplyQueuedConfig()+0x7c>
 80103b0:	079a      	lsls	r2, r3, #30
 80103b2:	d01a      	beq.n	80103ea <Network::ApplyQueuedConfig()+0x44>
 80103b4:	079b      	lsls	r3, r3, #30
 80103b6:	d509      	bpl.n	80103cc <Network::ApplyQueuedConfig()+0x26>
 80103b8:	f8d0 10c8 	ldr.w	r1, [r0, #200]	; 0xc8
 80103bc:	f7ff ff40 	bl	8010240 <Network::SetNetmask(unsigned int)>
 80103c0:	f8d4 30c0 	ldr.w	r3, [r4, #192]	; 0xc0
 80103c4:	f023 0302 	bic.w	r3, r3, #2
 80103c8:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 80103cc:	f8d4 30c0 	ldr.w	r3, [r4, #192]	; 0xc0
 80103d0:	07d9      	lsls	r1, r3, #31
 80103d2:	d50a      	bpl.n	80103ea <Network::ApplyQueuedConfig()+0x44>
 80103d4:	4620      	mov	r0, r4
 80103d6:	f8d4 10c4 	ldr.w	r1, [r4, #196]	; 0xc4
 80103da:	f7ff ff03 	bl	80101e4 <Network::SetIp(unsigned int)>
 80103de:	f8d4 30c0 	ldr.w	r3, [r4, #192]	; 0xc0
 80103e2:	f023 0301 	bic.w	r3, r3, #1
 80103e6:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 80103ea:	f8d4 30c0 	ldr.w	r3, [r4, #192]	; 0xc0
 80103ee:	075a      	lsls	r2, r3, #29
 80103f0:	d508      	bpl.n	8010404 <Network::ApplyQueuedConfig()+0x5e>
 80103f2:	4620      	mov	r0, r4
 80103f4:	f7ff ff7c 	bl	80102f0 <Network::EnableDhcp()>
 80103f8:	f8d4 30c0 	ldr.w	r3, [r4, #192]	; 0xc0
 80103fc:	f023 0304 	bic.w	r3, r3, #4
 8010400:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8010404:	f8d4 30c0 	ldr.w	r3, [r4, #192]	; 0xc0
 8010408:	071b      	lsls	r3, r3, #28
 801040a:	d508      	bpl.n	801041e <Network::ApplyQueuedConfig()+0x78>
 801040c:	4620      	mov	r0, r4
 801040e:	f7ff ff4c 	bl	80102aa <Network::SetZeroconf()>
 8010412:	f8d4 30c0 	ldr.w	r3, [r4, #192]	; 0xc0
 8010416:	f023 0308 	bic.w	r3, r3, #8
 801041a:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 801041e:	2001      	movs	r0, #1
 8010420:	e000      	b.n	8010424 <Network::ApplyQueuedConfig()+0x7e>
 8010422:	4618      	mov	r0, r3
 8010424:	bd10      	pop	{r4, pc}
	...

08010428 <Network::Print()>:
 8010428:	b530      	push	{r4, r5, lr}
 801042a:	4604      	mov	r4, r0
 801042c:	b085      	sub	sp, #20
 801042e:	4832      	ldr	r0, [pc, #200]	; (80104f8 <Network::Print()+0xd0>)
 8010430:	f7f9 f89e 	bl	8009570 <printf>
 8010434:	f104 0120 	add.w	r1, r4, #32
 8010438:	4830      	ldr	r0, [pc, #192]	; (80104fc <Network::Print()+0xd4>)
 801043a:	f7f9 f899 	bl	8009570 <printf>
 801043e:	68a1      	ldr	r1, [r4, #8]
 8010440:	f104 02a6 	add.w	r2, r4, #166	; 0xa6
 8010444:	482e      	ldr	r0, [pc, #184]	; (8010500 <Network::Print()+0xd8>)
 8010446:	f7f9 f893 	bl	8009570 <printf>
 801044a:	69e0      	ldr	r0, [r4, #28]
 801044c:	f004 fb30 	bl	8014ab0 <__popcountsi2>
 8010450:	6965      	ldr	r5, [r4, #20]
 8010452:	9001      	str	r0, [sp, #4]
 8010454:	0e2b      	lsrs	r3, r5, #24
 8010456:	9300      	str	r3, [sp, #0]
 8010458:	f3c5 2207 	ubfx	r2, r5, #8, #8
 801045c:	f3c5 4307 	ubfx	r3, r5, #16, #8
 8010460:	b2e9      	uxtb	r1, r5
 8010462:	4828      	ldr	r0, [pc, #160]	; (8010504 <Network::Print()+0xdc>)
 8010464:	f7f9 f884 	bl	8009570 <printf>
 8010468:	69e1      	ldr	r1, [r4, #28]
 801046a:	4827      	ldr	r0, [pc, #156]	; (8010508 <Network::Print()+0xe0>)
 801046c:	0e0b      	lsrs	r3, r1, #24
 801046e:	f3c1 2207 	ubfx	r2, r1, #8, #8
 8010472:	9300      	str	r3, [sp, #0]
 8010474:	f3c1 4307 	ubfx	r3, r1, #16, #8
 8010478:	b2c9      	uxtb	r1, r1
 801047a:	f7f9 f879 	bl	8009570 <printf>
 801047e:	69a1      	ldr	r1, [r4, #24]
 8010480:	4822      	ldr	r0, [pc, #136]	; (801050c <Network::Print()+0xe4>)
 8010482:	0e0b      	lsrs	r3, r1, #24
 8010484:	f3c1 2207 	ubfx	r2, r1, #8, #8
 8010488:	9300      	str	r3, [sp, #0]
 801048a:	f3c1 4307 	ubfx	r3, r1, #16, #8
 801048e:	b2c9      	uxtb	r1, r1
 8010490:	f7f9 f86e 	bl	8009570 <printf>
 8010494:	69e3      	ldr	r3, [r4, #28]
 8010496:	6961      	ldr	r1, [r4, #20]
 8010498:	481d      	ldr	r0, [pc, #116]	; (8010510 <Network::Print()+0xe8>)
 801049a:	ea61 0103 	orn	r1, r1, r3
 801049e:	0e0b      	lsrs	r3, r1, #24
 80104a0:	f3c1 2207 	ubfx	r2, r1, #8, #8
 80104a4:	9300      	str	r3, [sp, #0]
 80104a6:	f3c1 4307 	ubfx	r3, r1, #16, #8
 80104aa:	b2c9      	uxtb	r1, r1
 80104ac:	f7f9 f860 	bl	8009570 <printf>
 80104b0:	f894 30a5 	ldrb.w	r3, [r4, #165]	; 0xa5
 80104b4:	f894 20a1 	ldrb.w	r2, [r4, #161]	; 0xa1
 80104b8:	9302      	str	r3, [sp, #8]
 80104ba:	f894 30a4 	ldrb.w	r3, [r4, #164]	; 0xa4
 80104be:	f894 10a0 	ldrb.w	r1, [r4, #160]	; 0xa0
 80104c2:	9301      	str	r3, [sp, #4]
 80104c4:	f894 30a3 	ldrb.w	r3, [r4, #163]	; 0xa3
 80104c8:	4812      	ldr	r0, [pc, #72]	; (8010514 <Network::Print()+0xec>)
 80104ca:	9300      	str	r3, [sp, #0]
 80104cc:	f894 30a2 	ldrb.w	r3, [r4, #162]	; 0xa2
 80104d0:	f7f9 f84e 	bl	8009570 <printf>
 80104d4:	4b10      	ldr	r3, [pc, #64]	; (8010518 <Network::Print()+0xf0>)
 80104d6:	681b      	ldr	r3, [r3, #0]
 80104d8:	79da      	ldrb	r2, [r3, #7]
 80104da:	b952      	cbnz	r2, 80104f2 <Network::Print()+0xca>
 80104dc:	795b      	ldrb	r3, [r3, #5]
 80104de:	2b00      	cmp	r3, #0
 80104e0:	bf14      	ite	ne
 80104e2:	2144      	movne	r1, #68	; 0x44
 80104e4:	2153      	moveq	r1, #83	; 0x53
 80104e6:	480d      	ldr	r0, [pc, #52]	; (801051c <Network::Print()+0xf4>)
 80104e8:	b005      	add	sp, #20
 80104ea:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80104ee:	f7f9 b83f 	b.w	8009570 <printf>
 80104f2:	215a      	movs	r1, #90	; 0x5a
 80104f4:	e7f7      	b.n	80104e6 <Network::Print()+0xbe>
 80104f6:	bf00      	nop
 80104f8:	08017081 	stmdaeq	r1, {r0, r7, ip, sp, lr}
 80104fc:	0801708a 	stmdaeq	r1, {r1, r3, r7, ip, sp, lr}
 8010500:	0801709b 	stmdaeq	r1, {r0, r1, r3, r4, r7, ip, sp, lr}
 8010504:	080170b0 	stmdaeq	r1, {r4, r5, r7, ip, sp, lr}
 8010508:	080170cd 	stmdaeq	r1, {r0, r2, r3, r6, r7, ip, sp, lr}
 801050c:	080170e7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, ip, sp, lr}
 8010510:	08017101 	stmdaeq	r1, {r0, r8, ip, sp, lr}
 8010514:	0801711b 	stmdaeq	r1, {r0, r1, r3, r4, r8, ip, sp, lr}
 8010518:	2001a288 	andcs	sl, r1, r8, lsl #5
 801051c:	08017147 	stmdaeq	r1, {r0, r1, r2, r6, r8, ip, sp, lr}

08010520 <Network::TcpBegin(unsigned short)>:
 8010520:	4608      	mov	r0, r1
 8010522:	f7fe becf 	b.w	800f2c4 <tcp_begin>

08010526 <Network::TcpRead(int, unsigned char const**)>:
 8010526:	4608      	mov	r0, r1
 8010528:	4611      	mov	r1, r2
 801052a:	f7fe bf09 	b.w	800f340 <tcp_read>

0801052e <Network::TcpWrite(int, unsigned char const*, unsigned short)>:
 801052e:	4608      	mov	r0, r1
 8010530:	4611      	mov	r1, r2
 8010532:	461a      	mov	r2, r3
 8010534:	f7fe bee0 	b.w	800f2f8 <tcp_write>

08010538 <NetworkParams::NetworkParams(NetworkParamsStore*)>:
 8010538:	b510      	push	{r4, lr}
 801053a:	225e      	movs	r2, #94	; 0x5e
 801053c:	4604      	mov	r4, r0
 801053e:	f840 1b04 	str.w	r1, [r0], #4
 8010542:	2100      	movs	r1, #0
 8010544:	f002 f8de 	bl	8012704 <memset>
 8010548:	2301      	movs	r3, #1
 801054a:	4620      	mov	r0, r4
 801054c:	7623      	strb	r3, [r4, #24]
 801054e:	bd10      	pop	{r4, pc}

08010550 <NetworkParams::Load()>:
 8010550:	b508      	push	{r3, lr}
 8010552:	2300      	movs	r3, #0
 8010554:	4601      	mov	r1, r0
 8010556:	6043      	str	r3, [r0, #4]
 8010558:	6800      	ldr	r0, [r0, #0]
 801055a:	b120      	cbz	r0, 8010566 <NetworkParams::Load()+0x16>
 801055c:	6803      	ldr	r3, [r0, #0]
 801055e:	3104      	adds	r1, #4
 8010560:	68db      	ldr	r3, [r3, #12]
 8010562:	4798      	blx	r3
 8010564:	2001      	movs	r0, #1
 8010566:	bd08      	pop	{r3, pc}

08010568 <NetworkParams::Load(char const*, unsigned int)>:
 8010568:	6803      	ldr	r3, [r0, #0]
 801056a:	b1d3      	cbz	r3, 80105a2 <NetworkParams::Load(char const*, unsigned int)+0x3a>
 801056c:	2300      	movs	r3, #0
 801056e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8010570:	460d      	mov	r5, r1
 8010572:	4616      	mov	r6, r2
 8010574:	4604      	mov	r4, r0
 8010576:	6043      	str	r3, [r0, #4]
 8010578:	4602      	mov	r2, r0
 801057a:	490a      	ldr	r1, [pc, #40]	; (80105a4 <NetworkParams::Load(char const*, unsigned int)+0x3c>)
 801057c:	4668      	mov	r0, sp
 801057e:	f001 fa3d 	bl	80119fc <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 8010582:	4632      	mov	r2, r6
 8010584:	4629      	mov	r1, r5
 8010586:	4668      	mov	r0, sp
 8010588:	f001 fa3c 	bl	8011a04 <ReadConfigFile::Read(char const*, unsigned int)>
 801058c:	4621      	mov	r1, r4
 801058e:	f851 0b04 	ldr.w	r0, [r1], #4
 8010592:	6803      	ldr	r3, [r0, #0]
 8010594:	689b      	ldr	r3, [r3, #8]
 8010596:	4798      	blx	r3
 8010598:	4668      	mov	r0, sp
 801059a:	f001 fa32 	bl	8011a02 <ReadConfigFile::~ReadConfigFile()>
 801059e:	b002      	add	sp, #8
 80105a0:	bd70      	pop	{r4, r5, r6, pc}
 80105a2:	4770      	bx	lr
 80105a4:	080106c9 	stmdaeq	r1, {r0, r3, r6, r7, r9, sl}

080105a8 <NetworkParams::callbackFunction(char const*)>:
 80105a8:	b530      	push	{r4, r5, lr}
 80105aa:	460d      	mov	r5, r1
 80105ac:	b085      	sub	sp, #20
 80105ae:	4604      	mov	r4, r0
 80105b0:	493f      	ldr	r1, [pc, #252]	; (80106b0 <NetworkParams::callbackFunction(char const*)+0x108>)
 80105b2:	4628      	mov	r0, r5
 80105b4:	f10d 0207 	add.w	r2, sp, #7
 80105b8:	f001 fb5c 	bl	8011c74 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 80105bc:	b978      	cbnz	r0, 80105de <NetworkParams::callbackFunction(char const*)+0x36>
 80105be:	f89d 2007 	ldrb.w	r2, [sp, #7]
 80105c2:	6863      	ldr	r3, [r4, #4]
 80105c4:	b142      	cbz	r2, 80105d8 <NetworkParams::callbackFunction(char const*)+0x30>
 80105c6:	f023 0301 	bic.w	r3, r3, #1
 80105ca:	3a00      	subs	r2, #0
 80105cc:	bf18      	it	ne
 80105ce:	2201      	movne	r2, #1
 80105d0:	6063      	str	r3, [r4, #4]
 80105d2:	7622      	strb	r2, [r4, #24]
 80105d4:	b005      	add	sp, #20
 80105d6:	bd30      	pop	{r4, r5, pc}
 80105d8:	f043 0301 	orr.w	r3, r3, #1
 80105dc:	e7f5      	b.n	80105ca <NetworkParams::callbackFunction(char const*)+0x22>
 80105de:	4628      	mov	r0, r5
 80105e0:	4934      	ldr	r1, [pc, #208]	; (80106b4 <NetworkParams::callbackFunction(char const*)+0x10c>)
 80105e2:	f10d 0207 	add.w	r2, sp, #7
 80105e6:	f001 fb45 	bl	8011c74 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 80105ea:	b980      	cbnz	r0, 801060e <NetworkParams::callbackFunction(char const*)+0x66>
 80105ec:	f89d 2007 	ldrb.w	r2, [sp, #7]
 80105f0:	6863      	ldr	r3, [r4, #4]
 80105f2:	1e51      	subs	r1, r2, #1
 80105f4:	2904      	cmp	r1, #4
 80105f6:	bf97      	itett	ls
 80105f8:	f443 7380 	orrls.w	r3, r3, #256	; 0x100
 80105fc:	f423 7380 	bichi.w	r3, r3, #256	; 0x100
 8010600:	6063      	strls	r3, [r4, #4]
 8010602:	f884 2061 	strbls.w	r2, [r4, #97]	; 0x61
 8010606:	bf84      	itt	hi
 8010608:	6063      	strhi	r3, [r4, #4]
 801060a:	f884 0061 	strbhi.w	r0, [r4, #97]	; 0x61
 801060e:	4628      	mov	r0, r5
 8010610:	4929      	ldr	r1, [pc, #164]	; (80106b8 <NetworkParams::callbackFunction(char const*)+0x110>)
 8010612:	aa02      	add	r2, sp, #8
 8010614:	f001 faa6 	bl	8011b64 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 8010618:	b9c8      	cbnz	r0, 801064e <NetworkParams::callbackFunction(char const*)+0xa6>
 801061a:	9b02      	ldr	r3, [sp, #8]
 801061c:	b2d9      	uxtb	r1, r3
 801061e:	29ac      	cmp	r1, #172	; 0xac
 8010620:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8010624:	d009      	beq.n	801063a <NetworkParams::callbackFunction(char const*)+0x92>
 8010626:	29c0      	cmp	r1, #192	; 0xc0
 8010628:	d00b      	beq.n	8010642 <NetworkParams::callbackFunction(char const*)+0x9a>
 801062a:	290a      	cmp	r1, #10
 801062c:	d10c      	bne.n	8010648 <NetworkParams::callbackFunction(char const*)+0xa0>
 801062e:	60a3      	str	r3, [r4, #8]
 8010630:	6863      	ldr	r3, [r4, #4]
 8010632:	f043 0302 	orr.w	r3, r3, #2
 8010636:	6063      	str	r3, [r4, #4]
 8010638:	e7cc      	b.n	80105d4 <NetworkParams::callbackFunction(char const*)+0x2c>
 801063a:	3a10      	subs	r2, #16
 801063c:	2a0f      	cmp	r2, #15
 801063e:	d8c9      	bhi.n	80105d4 <NetworkParams::callbackFunction(char const*)+0x2c>
 8010640:	e7f5      	b.n	801062e <NetworkParams::callbackFunction(char const*)+0x86>
 8010642:	2aa8      	cmp	r2, #168	; 0xa8
 8010644:	d1c6      	bne.n	80105d4 <NetworkParams::callbackFunction(char const*)+0x2c>
 8010646:	e7f2      	b.n	801062e <NetworkParams::callbackFunction(char const*)+0x86>
 8010648:	2b00      	cmp	r3, #0
 801064a:	d0f0      	beq.n	801062e <NetworkParams::callbackFunction(char const*)+0x86>
 801064c:	e7c2      	b.n	80105d4 <NetworkParams::callbackFunction(char const*)+0x2c>
 801064e:	4628      	mov	r0, r5
 8010650:	491a      	ldr	r1, [pc, #104]	; (80106bc <NetworkParams::callbackFunction(char const*)+0x114>)
 8010652:	aa02      	add	r2, sp, #8
 8010654:	f001 fa86 	bl	8011b64 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 8010658:	b960      	cbnz	r0, 8010674 <NetworkParams::callbackFunction(char const*)+0xcc>
 801065a:	9b02      	ldr	r3, [sp, #8]
 801065c:	2b00      	cmp	r3, #0
 801065e:	d0b9      	beq.n	80105d4 <NetworkParams::callbackFunction(char const*)+0x2c>
 8010660:	ba1a      	rev	r2, r3
 8010662:	43d1      	mvns	r1, r2
 8010664:	ea12 0251 	ands.w	r2, r2, r1, lsr #1
 8010668:	d1b4      	bne.n	80105d4 <NetworkParams::callbackFunction(char const*)+0x2c>
 801066a:	60e3      	str	r3, [r4, #12]
 801066c:	6863      	ldr	r3, [r4, #4]
 801066e:	f043 0304 	orr.w	r3, r3, #4
 8010672:	e7e0      	b.n	8010636 <NetworkParams::callbackFunction(char const*)+0x8e>
 8010674:	4628      	mov	r0, r5
 8010676:	4912      	ldr	r1, [pc, #72]	; (80106c0 <NetworkParams::callbackFunction(char const*)+0x118>)
 8010678:	aa02      	add	r2, sp, #8
 801067a:	f001 fa73 	bl	8011b64 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 801067e:	b928      	cbnz	r0, 801068c <NetworkParams::callbackFunction(char const*)+0xe4>
 8010680:	9b02      	ldr	r3, [sp, #8]
 8010682:	6123      	str	r3, [r4, #16]
 8010684:	6863      	ldr	r3, [r4, #4]
 8010686:	f043 0308 	orr.w	r3, r3, #8
 801068a:	e7d4      	b.n	8010636 <NetworkParams::callbackFunction(char const*)+0x8e>
 801068c:	233f      	movs	r3, #63	; 0x3f
 801068e:	4628      	mov	r0, r5
 8010690:	9303      	str	r3, [sp, #12]
 8010692:	490c      	ldr	r1, [pc, #48]	; (80106c4 <NetworkParams::callbackFunction(char const*)+0x11c>)
 8010694:	ab03      	add	r3, sp, #12
 8010696:	f104 0219 	add.w	r2, r4, #25
 801069a:	f001 f9e7 	bl	8011a6c <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 801069e:	2800      	cmp	r0, #0
 80106a0:	d198      	bne.n	80105d4 <NetworkParams::callbackFunction(char const*)+0x2c>
 80106a2:	9b03      	ldr	r3, [sp, #12]
 80106a4:	4423      	add	r3, r4
 80106a6:	7658      	strb	r0, [r3, #25]
 80106a8:	6863      	ldr	r3, [r4, #4]
 80106aa:	f043 0320 	orr.w	r3, r3, #32
 80106ae:	e7c2      	b.n	8010636 <NetworkParams::callbackFunction(char const*)+0x8e>
 80106b0:	0801719f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r7, r8, ip, sp, lr}
 80106b4:	0801717d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r8, ip, sp, lr}
 80106b8:	08017162 	stmdaeq	r1, {r1, r5, r6, r8, ip, sp, lr}
 80106bc:	08017196 	stmdaeq	r1, {r1, r2, r4, r7, r8, ip, sp, lr}
 80106c0:	0801716d 	stmdaeq	r1, {r0, r2, r3, r5, r6, r8, ip, sp, lr}
 80106c4:	0801718d 	stmdaeq	r1, {r0, r2, r3, r7, r8, ip, sp, lr}

080106c8 <NetworkParams::staticCallbackFunction(void*, char const*)>:
 80106c8:	f7ff bf6e 	b.w	80105a8 <NetworkParams::callbackFunction(char const*)>

080106cc <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)>:
 80106cc:	b570      	push	{r4, r5, r6, lr}
 80106ce:	4604      	mov	r4, r0
 80106d0:	4615      	mov	r5, r2
 80106d2:	461e      	mov	r6, r3
 80106d4:	b086      	sub	sp, #24
 80106d6:	3004      	adds	r0, #4
 80106d8:	2900      	cmp	r1, #0
 80106da:	d02b      	beq.n	8010734 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x68>
 80106dc:	225e      	movs	r2, #94	; 0x5e
 80106de:	f001 fffa 	bl	80126d6 <memmove>
 80106e2:	462a      	mov	r2, r5
 80106e4:	4633      	mov	r3, r6
 80106e6:	4970      	ldr	r1, [pc, #448]	; (80108a8 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1dc>)
 80106e8:	a803      	add	r0, sp, #12
 80106ea:	f001 f8e7 	bl	80118bc <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 80106ee:	6863      	ldr	r3, [r4, #4]
 80106f0:	079a      	lsls	r2, r3, #30
 80106f2:	bf5f      	itttt	pl
 80106f4:	4a6d      	ldrpl	r2, [pc, #436]	; (80108ac <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e0>)
 80106f6:	6812      	ldrpl	r2, [r2, #0]
 80106f8:	6952      	ldrpl	r2, [r2, #20]
 80106fa:	60a2      	strpl	r2, [r4, #8]
 80106fc:	075e      	lsls	r6, r3, #29
 80106fe:	bf5f      	itttt	pl
 8010700:	4a6a      	ldrpl	r2, [pc, #424]	; (80108ac <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e0>)
 8010702:	6812      	ldrpl	r2, [r2, #0]
 8010704:	69d2      	ldrpl	r2, [r2, #28]
 8010706:	60e2      	strpl	r2, [r4, #12]
 8010708:	071d      	lsls	r5, r3, #28
 801070a:	bf58      	it	pl
 801070c:	4a67      	ldrpl	r2, [pc, #412]	; (80108ac <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e0>)
 801070e:	f104 0519 	add.w	r5, r4, #25
 8010712:	bf5e      	ittt	pl
 8010714:	6812      	ldrpl	r2, [r2, #0]
 8010716:	6992      	ldrpl	r2, [r2, #24]
 8010718:	6122      	strpl	r2, [r4, #16]
 801071a:	0698      	lsls	r0, r3, #26
 801071c:	d418      	bmi.n	8010750 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x84>
 801071e:	4628      	mov	r0, r5
 8010720:	223f      	movs	r2, #63	; 0x3f
 8010722:	4b62      	ldr	r3, [pc, #392]	; (80108ac <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e0>)
 8010724:	681b      	ldr	r3, [r3, #0]
 8010726:	331f      	adds	r3, #31
 8010728:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 801072c:	b949      	cbnz	r1, 8010742 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x76>
 801072e:	f001 ffe9 	bl	8012704 <memset>
 8010732:	e00a      	b.n	801074a <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x7e>
 8010734:	6823      	ldr	r3, [r4, #0]
 8010736:	4601      	mov	r1, r0
 8010738:	681a      	ldr	r2, [r3, #0]
 801073a:	4618      	mov	r0, r3
 801073c:	68d2      	ldr	r2, [r2, #12]
 801073e:	4790      	blx	r2
 8010740:	e7cf      	b.n	80106e2 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x16>
 8010742:	3a01      	subs	r2, #1
 8010744:	f800 1b01 	strb.w	r1, [r0], #1
 8010748:	d1ee      	bne.n	8010728 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x5c>
 801074a:	2300      	movs	r3, #0
 801074c:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8010750:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8010754:	f8bd 6010 	ldrh.w	r6, [sp, #16]
 8010758:	7e23      	ldrb	r3, [r4, #24]
 801075a:	42b2      	cmp	r2, r6
 801075c:	6861      	ldr	r1, [r4, #4]
 801075e:	d21a      	bcs.n	8010796 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xca>
 8010760:	9803      	ldr	r0, [sp, #12]
 8010762:	07c9      	lsls	r1, r1, #31
 8010764:	4410      	add	r0, r2
 8010766:	eba6 0602 	sub.w	r6, r6, r2
 801076a:	f89d 2014 	ldrb.w	r2, [sp, #20]
 801076e:	d404      	bmi.n	801077a <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xae>
 8010770:	b922      	cbnz	r2, 801077c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xb0>
 8010772:	9300      	str	r3, [sp, #0]
 8010774:	4a4e      	ldr	r2, [pc, #312]	; (80108b0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e4>)
 8010776:	4b4f      	ldr	r3, [pc, #316]	; (80108b4 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e8>)
 8010778:	e003      	b.n	8010782 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xb6>
 801077a:	b312      	cbz	r2, 80107c2 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xf6>
 801077c:	9300      	str	r3, [sp, #0]
 801077e:	4a4e      	ldr	r2, [pc, #312]	; (80108b8 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1ec>)
 8010780:	4b4c      	ldr	r3, [pc, #304]	; (80108b4 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e8>)
 8010782:	4631      	mov	r1, r6
 8010784:	f7f8 ff1c 	bl	80095c0 <snprintf>
 8010788:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801078c:	4286      	cmp	r6, r0
 801078e:	bfa4      	itt	ge
 8010790:	181b      	addge	r3, r3, r0
 8010792:	f8ad 3012 	strhge.w	r3, [sp, #18]
 8010796:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801079a:	f8bd 6010 	ldrh.w	r6, [sp, #16]
 801079e:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 80107a2:	42b2      	cmp	r2, r6
 80107a4:	6861      	ldr	r1, [r4, #4]
 80107a6:	d21f      	bcs.n	80107e8 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>
 80107a8:	9803      	ldr	r0, [sp, #12]
 80107aa:	05c9      	lsls	r1, r1, #23
 80107ac:	4410      	add	r0, r2
 80107ae:	eba6 0602 	sub.w	r6, r6, r2
 80107b2:	f89d 2014 	ldrb.w	r2, [sp, #20]
 80107b6:	d408      	bmi.n	80107ca <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xfe>
 80107b8:	b94a      	cbnz	r2, 80107ce <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x102>
 80107ba:	9300      	str	r3, [sp, #0]
 80107bc:	4a3c      	ldr	r2, [pc, #240]	; (80108b0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e4>)
 80107be:	4b3f      	ldr	r3, [pc, #252]	; (80108bc <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f0>)
 80107c0:	e008      	b.n	80107d4 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x108>
 80107c2:	9300      	str	r3, [sp, #0]
 80107c4:	4a3e      	ldr	r2, [pc, #248]	; (80108c0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f4>)
 80107c6:	4b3b      	ldr	r3, [pc, #236]	; (80108b4 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e8>)
 80107c8:	e7db      	b.n	8010782 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xb6>
 80107ca:	2a00      	cmp	r2, #0
 80107cc:	d03c      	beq.n	8010848 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x17c>
 80107ce:	9300      	str	r3, [sp, #0]
 80107d0:	4a39      	ldr	r2, [pc, #228]	; (80108b8 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1ec>)
 80107d2:	4b3a      	ldr	r3, [pc, #232]	; (80108bc <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f0>)
 80107d4:	4631      	mov	r1, r6
 80107d6:	f7f8 fef3 	bl	80095c0 <snprintf>
 80107da:	4286      	cmp	r6, r0
 80107dc:	bfa2      	ittt	ge
 80107de:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 80107e2:	18c0      	addge	r0, r0, r3
 80107e4:	f8ad 0012 	strhge.w	r0, [sp, #18]
 80107e8:	4936      	ldr	r1, [pc, #216]	; (80108c4 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f8>)
 80107ea:	a803      	add	r0, sp, #12
 80107ec:	f001 f8ec 	bl	80119c8 <PropertiesBuilder::AddComment(char const*)>
 80107f0:	6863      	ldr	r3, [r4, #4]
 80107f2:	68a2      	ldr	r2, [r4, #8]
 80107f4:	4934      	ldr	r1, [pc, #208]	; (80108c8 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1fc>)
 80107f6:	f3c3 0340 	ubfx	r3, r3, #1, #1
 80107fa:	a803      	add	r0, sp, #12
 80107fc:	f001 f8a0 	bl	8011940 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 8010800:	6863      	ldr	r3, [r4, #4]
 8010802:	68e2      	ldr	r2, [r4, #12]
 8010804:	4931      	ldr	r1, [pc, #196]	; (80108cc <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x200>)
 8010806:	f3c3 0380 	ubfx	r3, r3, #2, #1
 801080a:	a803      	add	r0, sp, #12
 801080c:	f001 f898 	bl	8011940 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 8010810:	6863      	ldr	r3, [r4, #4]
 8010812:	6922      	ldr	r2, [r4, #16]
 8010814:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 8010818:	492d      	ldr	r1, [pc, #180]	; (80108d0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x204>)
 801081a:	a803      	add	r0, sp, #12
 801081c:	f001 f890 	bl	8011940 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 8010820:	6862      	ldr	r2, [r4, #4]
 8010822:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8010826:	f8bd 4010 	ldrh.w	r4, [sp, #16]
 801082a:	42a3      	cmp	r3, r4
 801082c:	d21e      	bcs.n	801086c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1a0>
 801082e:	9803      	ldr	r0, [sp, #12]
 8010830:	0692      	lsls	r2, r2, #26
 8010832:	4418      	add	r0, r3
 8010834:	eba4 0403 	sub.w	r4, r4, r3
 8010838:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801083c:	d408      	bmi.n	8010850 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x184>
 801083e:	b943      	cbnz	r3, 8010852 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x186>
 8010840:	4b24      	ldr	r3, [pc, #144]	; (80108d4 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x208>)
 8010842:	4a25      	ldr	r2, [pc, #148]	; (80108d8 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x20c>)
 8010844:	9500      	str	r5, [sp, #0]
 8010846:	e007      	b.n	8010858 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x18c>
 8010848:	9300      	str	r3, [sp, #0]
 801084a:	4a1d      	ldr	r2, [pc, #116]	; (80108c0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f4>)
 801084c:	4b1b      	ldr	r3, [pc, #108]	; (80108bc <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f0>)
 801084e:	e7c1      	b.n	80107d4 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x108>
 8010850:	b32b      	cbz	r3, 801089e <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1d2>
 8010852:	4b20      	ldr	r3, [pc, #128]	; (80108d4 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x208>)
 8010854:	4a21      	ldr	r2, [pc, #132]	; (80108dc <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x210>)
 8010856:	9500      	str	r5, [sp, #0]
 8010858:	4621      	mov	r1, r4
 801085a:	f7f8 feb1 	bl	80095c0 <snprintf>
 801085e:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8010862:	4284      	cmp	r4, r0
 8010864:	bfa4      	itt	ge
 8010866:	181b      	addge	r3, r3, r0
 8010868:	f8ad 3012 	strhge.w	r3, [sp, #18]
 801086c:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8010870:	b17b      	cbz	r3, 8010892 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1c6>
 8010872:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8010876:	9b03      	ldr	r3, [sp, #12]
 8010878:	4413      	add	r3, r2
 801087a:	227d      	movs	r2, #125	; 0x7d
 801087c:	f803 2c01 	strb.w	r2, [r3, #-1]
 8010880:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8010884:	9903      	ldr	r1, [sp, #12]
 8010886:	54ca      	strb	r2, [r1, r3]
 8010888:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801088c:	3301      	adds	r3, #1
 801088e:	f8ad 3012 	strh.w	r3, [sp, #18]
 8010892:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8010896:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8010898:	601a      	str	r2, [r3, #0]
 801089a:	b006      	add	sp, #24
 801089c:	bd70      	pop	{r4, r5, r6, pc}
 801089e:	4b0d      	ldr	r3, [pc, #52]	; (80108d4 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x208>)
 80108a0:	4a0f      	ldr	r2, [pc, #60]	; (80108e0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x214>)
 80108a2:	9500      	str	r5, [sp, #0]
 80108a4:	e7d8      	b.n	8010858 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x18c>
 80108a6:	bf00      	nop
 80108a8:	080171a8 	stmdaeq	r1, {r3, r5, r7, r8, ip, sp, lr}
 80108ac:	2001a288 	andcs	sl, r1, r8, lsl #5
 80108b0:	08015061 	stmdaeq	r1, {r0, r5, r6, ip, lr}
 80108b4:	0801719f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r7, r8, ip, sp, lr}
 80108b8:	08015058 	stmdaeq	r1, {r3, r4, r6, ip, lr}
 80108bc:	0801717d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r8, ip, sp, lr}
 80108c0:	08015062 	stmdaeq	r1, {r1, r5, r6, ip, lr}
 80108c4:	08017158 	stmdaeq	r1, {r3, r4, r6, r8, ip, sp, lr}
 80108c8:	08017162 	stmdaeq	r1, {r1, r5, r6, r8, ip, sp, lr}
 80108cc:	08017196 	stmdaeq	r1, {r1, r2, r4, r7, r8, ip, sp, lr}
 80108d0:	0801716d 	stmdaeq	r1, {r0, r2, r3, r5, r6, r8, ip, sp, lr}
 80108d4:	0801718d 	stmdaeq	r1, {r0, r2, r3, r7, r8, ip, sp, lr}
 80108d8:	08015074 	stmdaeq	r1, {r2, r4, r5, r6, ip, lr}
 80108dc:	08015069 	stmdaeq	r1, {r0, r3, r5, r6, ip, lr}
 80108e0:	08015075 	stmdaeq	r1, {r0, r2, r4, r5, r6, ip, lr}

080108e4 <NetworkParams::Save(char*, unsigned int, unsigned int&)>:
 80108e4:	b513      	push	{r0, r1, r4, lr}
 80108e6:	6804      	ldr	r4, [r0, #0]
 80108e8:	b914      	cbnz	r4, 80108f0 <NetworkParams::Save(char*, unsigned int, unsigned int&)+0xc>
 80108ea:	601c      	str	r4, [r3, #0]
 80108ec:	b002      	add	sp, #8
 80108ee:	bd10      	pop	{r4, pc}
 80108f0:	9300      	str	r3, [sp, #0]
 80108f2:	4613      	mov	r3, r2
 80108f4:	460a      	mov	r2, r1
 80108f6:	2100      	movs	r1, #0
 80108f8:	f7ff fee8 	bl	80106cc <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)>
 80108fc:	e7f6      	b.n	80108ec <NetworkParams::Save(char*, unsigned int, unsigned int&)+0x8>

080108fe <NetworkParams::Dump()>:
 80108fe:	4770      	bx	lr

08010900 <memcpy.isra.0>:
 8010900:	3801      	subs	r0, #1
 8010902:	440a      	add	r2, r1
 8010904:	4291      	cmp	r1, r2
 8010906:	d100      	bne.n	801090a <memcpy.isra.0+0xa>
 8010908:	4770      	bx	lr
 801090a:	f811 3b01 	ldrb.w	r3, [r1], #1
 801090e:	f800 3f01 	strb.w	r3, [r0, #1]!
 8010912:	e7f7      	b.n	8010904 <memcpy.isra.0+0x4>

08010914 <arp_announce>:
 8010914:	4803      	ldr	r0, [pc, #12]	; (8010924 <arp_announce+0x10>)
 8010916:	69c3      	ldr	r3, [r0, #28]
 8010918:	b113      	cbz	r3, 8010920 <arp_announce+0xc>
 801091a:	212a      	movs	r1, #42	; 0x2a
 801091c:	f002 bf6e 	b.w	80137fc <emac_eth_send>
 8010920:	4770      	bx	lr
 8010922:	bf00      	nop
 8010924:	2001a28c 	andcs	sl, r1, ip, lsl #5

08010928 <arp_handle_request>:
 8010928:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801092a:	2204      	movs	r2, #4
 801092c:	f100 0126 	add.w	r1, r0, #38	; 0x26
 8010930:	4604      	mov	r4, r0
 8010932:	eb0d 0002 	add.w	r0, sp, r2
 8010936:	f7ff ffe3 	bl	8010900 <memcpy.isra.0>
 801093a:	4b0d      	ldr	r3, [pc, #52]	; (8010970 <arp_handle_request+0x48>)
 801093c:	9a01      	ldr	r2, [sp, #4]
 801093e:	69db      	ldr	r3, [r3, #28]
 8010940:	429a      	cmp	r2, r3
 8010942:	d113      	bne.n	801096c <arp_handle_request+0x44>
 8010944:	2206      	movs	r2, #6
 8010946:	4d0b      	ldr	r5, [pc, #44]	; (8010974 <arp_handle_request+0x4c>)
 8010948:	18a1      	adds	r1, r4, r2
 801094a:	4628      	mov	r0, r5
 801094c:	f7ff ffd8 	bl	8010900 <memcpy.isra.0>
 8010950:	f104 0116 	add.w	r1, r4, #22
 8010954:	f105 0020 	add.w	r0, r5, #32
 8010958:	2206      	movs	r2, #6
 801095a:	f7ff ffd1 	bl	8010900 <memcpy.isra.0>
 801095e:	69e3      	ldr	r3, [r4, #28]
 8010960:	212a      	movs	r1, #42	; 0x2a
 8010962:	4628      	mov	r0, r5
 8010964:	f8c5 3026 	str.w	r3, [r5, #38]	; 0x26
 8010968:	f002 ff48 	bl	80137fc <emac_eth_send>
 801096c:	b003      	add	sp, #12
 801096e:	bd30      	pop	{r4, r5, pc}
 8010970:	2001a28c 	andcs	sl, r1, ip, lsl #5
 8010974:	2001a2b8 			; <UNDEFINED> instruction: 0x2001a2b8

08010978 <arp_handle_reply>:
 8010978:	69c1      	ldr	r1, [r0, #28]
 801097a:	3016      	adds	r0, #22
 801097c:	f000 b80a 	b.w	8010994 <arp_cache_update>

08010980 <arp_send_request>:
 8010980:	4b03      	ldr	r3, [pc, #12]	; (8010990 <arp_send_request+0x10>)
 8010982:	212a      	movs	r1, #42	; 0x2a
 8010984:	f8c3 0026 	str.w	r0, [r3, #38]	; 0x26
 8010988:	4618      	mov	r0, r3
 801098a:	f002 bf37 	b.w	80137fc <emac_eth_send>
 801098e:	bf00      	nop
 8010990:	2001a2e4 	andcs	sl, r1, r4, ror #5

08010994 <arp_cache_update>:
 8010994:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010996:	4e11      	ldr	r6, [pc, #68]	; (80109dc <arp_cache_update+0x48>)
 8010998:	8833      	ldrh	r3, [r6, #0]
 801099a:	2b20      	cmp	r3, #32
 801099c:	d018      	beq.n	80109d0 <arp_cache_update+0x3c>
 801099e:	2400      	movs	r4, #0
 80109a0:	220c      	movs	r2, #12
 80109a2:	4d0f      	ldr	r5, [pc, #60]	; (80109e0 <arp_cache_update+0x4c>)
 80109a4:	b2a7      	uxth	r7, r4
 80109a6:	42bb      	cmp	r3, r7
 80109a8:	d80b      	bhi.n	80109c2 <arp_cache_update+0x2e>
 80109aa:	fb02 5203 	mla	r2, r2, r3, r5
 80109ae:	1d84      	adds	r4, r0, #6
 80109b0:	3203      	adds	r2, #3
 80109b2:	42a0      	cmp	r0, r4
 80109b4:	d10d      	bne.n	80109d2 <arp_cache_update+0x3e>
 80109b6:	220c      	movs	r2, #12
 80109b8:	435a      	muls	r2, r3
 80109ba:	3301      	adds	r3, #1
 80109bc:	50a9      	str	r1, [r5, r2]
 80109be:	8033      	strh	r3, [r6, #0]
 80109c0:	e006      	b.n	80109d0 <arp_cache_update+0x3c>
 80109c2:	3401      	adds	r4, #1
 80109c4:	fb02 5704 	mla	r7, r2, r4, r5
 80109c8:	f857 7c0c 	ldr.w	r7, [r7, #-12]
 80109cc:	428f      	cmp	r7, r1
 80109ce:	d1e9      	bne.n	80109a4 <arp_cache_update+0x10>
 80109d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80109d2:	f810 7b01 	ldrb.w	r7, [r0], #1
 80109d6:	f802 7f01 	strb.w	r7, [r2, #1]!
 80109da:	e7ea      	b.n	80109b2 <arp_cache_update+0x1e>
 80109dc:	2001a490 	mulcs	r1, r0, r4
 80109e0:	2001a310 	andcs	sl, r1, r0, lsl r3

080109e4 <arp_cache_lookup>:
 80109e4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80109e8:	2200      	movs	r2, #0
 80109ea:	4606      	mov	r6, r0
 80109ec:	460c      	mov	r4, r1
 80109ee:	200c      	movs	r0, #12
 80109f0:	f8df 8084 	ldr.w	r8, [pc, #132]	; 8010a78 <arp_cache_lookup+0x94>
 80109f4:	fb00 f302 	mul.w	r3, r0, r2
 80109f8:	f853 1008 	ldr.w	r1, [r3, r8]
 80109fc:	42b1      	cmp	r1, r6
 80109fe:	d10d      	bne.n	8010a1c <arp_cache_lookup+0x38>
 8010a00:	3304      	adds	r3, #4
 8010a02:	4443      	add	r3, r8
 8010a04:	3c01      	subs	r4, #1
 8010a06:	1d9a      	adds	r2, r3, #6
 8010a08:	4293      	cmp	r3, r2
 8010a0a:	d102      	bne.n	8010a12 <arp_cache_lookup+0x2e>
 8010a0c:	4630      	mov	r0, r6
 8010a0e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8010a12:	f813 1b01 	ldrb.w	r1, [r3], #1
 8010a16:	f804 1f01 	strb.w	r1, [r4, #1]!
 8010a1a:	e7f5      	b.n	8010a08 <arp_cache_lookup+0x24>
 8010a1c:	b111      	cbz	r1, 8010a24 <arp_cache_lookup+0x40>
 8010a1e:	3201      	adds	r2, #1
 8010a20:	2a20      	cmp	r2, #32
 8010a22:	d1e7      	bne.n	80109f4 <arp_cache_lookup+0x10>
 8010a24:	2704      	movs	r7, #4
 8010a26:	f8df a054 	ldr.w	sl, [pc, #84]	; 8010a7c <arp_cache_lookup+0x98>
 8010a2a:	f8ba 5000 	ldrh.w	r5, [sl]
 8010a2e:	3f01      	subs	r7, #1
 8010a30:	f017 07ff 	ands.w	r7, r7, #255	; 0xff
 8010a34:	d101      	bne.n	8010a3a <arp_cache_lookup+0x56>
 8010a36:	463e      	mov	r6, r7
 8010a38:	e7e8      	b.n	8010a0c <arp_cache_lookup+0x28>
 8010a3a:	4630      	mov	r0, r6
 8010a3c:	f7ff ffa0 	bl	8010980 <arp_send_request>
 8010a40:	f44f 3900 	mov.w	r9, #131072	; 0x20000
 8010a44:	f1b9 0901 	subs.w	r9, r9, #1
 8010a48:	f8ba 3000 	ldrh.w	r3, [sl]
 8010a4c:	d011      	beq.n	8010a72 <arp_cache_lookup+0x8e>
 8010a4e:	429d      	cmp	r5, r3
 8010a50:	d00c      	beq.n	8010a6c <arp_cache_lookup+0x88>
 8010a52:	230c      	movs	r3, #12
 8010a54:	fb03 8505 	mla	r5, r3, r5, r8
 8010a58:	3c01      	subs	r4, #1
 8010a5a:	1d2b      	adds	r3, r5, #4
 8010a5c:	350a      	adds	r5, #10
 8010a5e:	42ab      	cmp	r3, r5
 8010a60:	d0d4      	beq.n	8010a0c <arp_cache_lookup+0x28>
 8010a62:	f813 2b01 	ldrb.w	r2, [r3], #1
 8010a66:	f804 2f01 	strb.w	r2, [r4, #1]!
 8010a6a:	e7f8      	b.n	8010a5e <arp_cache_lookup+0x7a>
 8010a6c:	f7f6 fd84 	bl	8007578 <net_handle>
 8010a70:	e7e8      	b.n	8010a44 <arp_cache_lookup+0x60>
 8010a72:	429d      	cmp	r5, r3
 8010a74:	d0db      	beq.n	8010a2e <arp_cache_lookup+0x4a>
 8010a76:	e7ec      	b.n	8010a52 <arp_cache_lookup+0x6e>
 8010a78:	2001a310 	andcs	sl, r1, r0, lsl r3
 8010a7c:	2001a490 	mulcs	r1, r0, r4

08010a80 <_parse_response>:
 8010a80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010a84:	2400      	movs	r4, #0
 8010a86:	460d      	mov	r5, r1
 8010a88:	46a3      	mov	fp, r4
 8010a8a:	4627      	mov	r7, r4
 8010a8c:	46a2      	mov	sl, r4
 8010a8e:	46a1      	mov	r9, r4
 8010a90:	46a0      	mov	r8, r4
 8010a92:	4e50      	ldr	r6, [pc, #320]	; (8010bd4 <_parse_response+0x154>)
 8010a94:	f5ad 7d17 	sub.w	sp, sp, #604	; 0x25c
 8010a98:	6833      	ldr	r3, [r6, #0]
 8010a9a:	e9cd 4403 	strd	r4, r4, [sp, #12]
 8010a9e:	e9cd 4405 	strd	r4, r4, [sp, #20]
 8010aa2:	9009      	str	r0, [sp, #36]	; 0x24
 8010aa4:	9402      	str	r4, [sp, #8]
 8010aa6:	9407      	str	r4, [sp, #28]
 8010aa8:	9308      	str	r3, [sp, #32]
 8010aaa:	f7f6 fd65 	bl	8007578 <net_handle>
 8010aae:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8010ab2:	9300      	str	r3, [sp, #0]
 8010ab4:	f44f 7209 	mov.w	r2, #548	; 0x224
 8010ab8:	f89d 0024 	ldrb.w	r0, [sp, #36]	; 0x24
 8010abc:	ab0c      	add	r3, sp, #48	; 0x30
 8010abe:	a90d      	add	r1, sp, #52	; 0x34
 8010ac0:	f7fe fd00 	bl	800f4c4 <udp_recv>
 8010ac4:	2800      	cmp	r0, #0
 8010ac6:	d03f      	beq.n	8010b48 <_parse_response+0xc8>
 8010ac8:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 8010acc:	2b43      	cmp	r3, #67	; 0x43
 8010ace:	d13b      	bne.n	8010b48 <_parse_response+0xc8>
 8010ad0:	f10d 024f 	add.w	r2, sp, #79	; 0x4f
 8010ad4:	1e6b      	subs	r3, r5, #1
 8010ad6:	1d69      	adds	r1, r5, #5
 8010ad8:	4299      	cmp	r1, r3
 8010ada:	d12f      	bne.n	8010b3c <_parse_response+0xbc>
 8010adc:	2100      	movs	r1, #0
 8010ade:	ab0d      	add	r3, sp, #52	; 0x34
 8010ae0:	181d      	adds	r5, r3, r0
 8010ae2:	468c      	mov	ip, r1
 8010ae4:	460e      	mov	r6, r1
 8010ae6:	4608      	mov	r0, r1
 8010ae8:	ab49      	add	r3, sp, #292	; 0x124
 8010aea:	42ab      	cmp	r3, r5
 8010aec:	d337      	bcc.n	8010b5e <_parse_response+0xde>
 8010aee:	b141      	cbz	r1, 8010b02 <_parse_response+0x82>
 8010af0:	4b39      	ldr	r3, [pc, #228]	; (8010bd8 <_parse_response+0x158>)
 8010af2:	9a07      	ldr	r2, [sp, #28]
 8010af4:	f883 8003 	strb.w	r8, [r3, #3]
 8010af8:	709a      	strb	r2, [r3, #2]
 8010afa:	9a06      	ldr	r2, [sp, #24]
 8010afc:	705a      	strb	r2, [r3, #1]
 8010afe:	9a05      	ldr	r2, [sp, #20]
 8010b00:	701a      	strb	r2, [r3, #0]
 8010b02:	f1bc 0f00 	cmp.w	ip, #0
 8010b06:	d007      	beq.n	8010b18 <_parse_response+0x98>
 8010b08:	4b34      	ldr	r3, [pc, #208]	; (8010bdc <_parse_response+0x15c>)
 8010b0a:	9a04      	ldr	r2, [sp, #16]
 8010b0c:	705c      	strb	r4, [r3, #1]
 8010b0e:	70da      	strb	r2, [r3, #3]
 8010b10:	9a03      	ldr	r2, [sp, #12]
 8010b12:	709a      	strb	r2, [r3, #2]
 8010b14:	9a02      	ldr	r2, [sp, #8]
 8010b16:	701a      	strb	r2, [r3, #0]
 8010b18:	b13e      	cbz	r6, 8010b2a <_parse_response+0xaa>
 8010b1a:	4b31      	ldr	r3, [pc, #196]	; (8010be0 <_parse_response+0x160>)
 8010b1c:	70df      	strb	r7, [r3, #3]
 8010b1e:	f883 a002 	strb.w	sl, [r3, #2]
 8010b22:	f883 9001 	strb.w	r9, [r3, #1]
 8010b26:	f883 b000 	strb.w	fp, [r3]
 8010b2a:	2802      	cmp	r0, #2
 8010b2c:	d102      	bne.n	8010b34 <_parse_response+0xb4>
 8010b2e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8010b30:	4b2c      	ldr	r3, [pc, #176]	; (8010be4 <_parse_response+0x164>)
 8010b32:	601a      	str	r2, [r3, #0]
 8010b34:	f50d 7d17 	add.w	sp, sp, #604	; 0x25c
 8010b38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010b3c:	f812 ef01 	ldrb.w	lr, [r2, #1]!
 8010b40:	f813 cf01 	ldrb.w	ip, [r3, #1]!
 8010b44:	45e6      	cmp	lr, ip
 8010b46:	d0c7      	beq.n	8010ad8 <_parse_response+0x58>
 8010b48:	6833      	ldr	r3, [r6, #0]
 8010b4a:	9a08      	ldr	r2, [sp, #32]
 8010b4c:	1a9b      	subs	r3, r3, r2
 8010b4e:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 8010b52:	d3aa      	bcc.n	8010aaa <_parse_response+0x2a>
 8010b54:	2800      	cmp	r0, #0
 8010b56:	d1c1      	bne.n	8010adc <_parse_response+0x5c>
 8010b58:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8010b5c:	e7ea      	b.n	8010b34 <_parse_response+0xb4>
 8010b5e:	781a      	ldrb	r2, [r3, #0]
 8010b60:	2a35      	cmp	r2, #53	; 0x35
 8010b62:	d011      	beq.n	8010b88 <_parse_response+0x108>
 8010b64:	d808      	bhi.n	8010b78 <_parse_response+0xf8>
 8010b66:	2a01      	cmp	r2, #1
 8010b68:	d011      	beq.n	8010b8e <_parse_response+0x10e>
 8010b6a:	2a03      	cmp	r2, #3
 8010b6c:	d019      	beq.n	8010ba2 <_parse_response+0x122>
 8010b6e:	b14a      	cbz	r2, 8010b84 <_parse_response+0x104>
 8010b70:	1c9a      	adds	r2, r3, #2
 8010b72:	785b      	ldrb	r3, [r3, #1]
 8010b74:	4413      	add	r3, r2
 8010b76:	e7b8      	b.n	8010aea <_parse_response+0x6a>
 8010b78:	2a36      	cmp	r2, #54	; 0x36
 8010b7a:	d01f      	beq.n	8010bbc <_parse_response+0x13c>
 8010b7c:	2aff      	cmp	r2, #255	; 0xff
 8010b7e:	d1f7      	bne.n	8010b70 <_parse_response+0xf0>
 8010b80:	462b      	mov	r3, r5
 8010b82:	e7b2      	b.n	8010aea <_parse_response+0x6a>
 8010b84:	3301      	adds	r3, #1
 8010b86:	e7b0      	b.n	8010aea <_parse_response+0x6a>
 8010b88:	7898      	ldrb	r0, [r3, #2]
 8010b8a:	3303      	adds	r3, #3
 8010b8c:	e7ad      	b.n	8010aea <_parse_response+0x6a>
 8010b8e:	f893 b002 	ldrb.w	fp, [r3, #2]
 8010b92:	f893 9003 	ldrb.w	r9, [r3, #3]
 8010b96:	f893 a004 	ldrb.w	sl, [r3, #4]
 8010b9a:	795f      	ldrb	r7, [r3, #5]
 8010b9c:	4616      	mov	r6, r2
 8010b9e:	3306      	adds	r3, #6
 8010ba0:	e7a3      	b.n	8010aea <_parse_response+0x6a>
 8010ba2:	789a      	ldrb	r2, [r3, #2]
 8010ba4:	78dc      	ldrb	r4, [r3, #3]
 8010ba6:	9202      	str	r2, [sp, #8]
 8010ba8:	791a      	ldrb	r2, [r3, #4]
 8010baa:	f04f 0c01 	mov.w	ip, #1
 8010bae:	9203      	str	r2, [sp, #12]
 8010bb0:	795a      	ldrb	r2, [r3, #5]
 8010bb2:	9204      	str	r2, [sp, #16]
 8010bb4:	785a      	ldrb	r2, [r3, #1]
 8010bb6:	4413      	add	r3, r2
 8010bb8:	3302      	adds	r3, #2
 8010bba:	e796      	b.n	8010aea <_parse_response+0x6a>
 8010bbc:	789a      	ldrb	r2, [r3, #2]
 8010bbe:	f893 8005 	ldrb.w	r8, [r3, #5]
 8010bc2:	9205      	str	r2, [sp, #20]
 8010bc4:	78da      	ldrb	r2, [r3, #3]
 8010bc6:	2101      	movs	r1, #1
 8010bc8:	9206      	str	r2, [sp, #24]
 8010bca:	791a      	ldrb	r2, [r3, #4]
 8010bcc:	3306      	adds	r3, #6
 8010bce:	9207      	str	r2, [sp, #28]
 8010bd0:	e78b      	b.n	8010aea <_parse_response+0x6a>
 8010bd2:	bf00      	nop
 8010bd4:	2001a964 	andcs	sl, r1, r4, ror #18
 8010bd8:	2001a6c4 	andcs	sl, r1, r4, asr #13
 8010bdc:	2001a494 	mulcs	r1, r4, r4
 8010be0:	2001a49c 	mulcs	r1, ip, r4
 8010be4:	2001a498 	mulcs	r1, r8, r4

08010be8 <memcpy.isra.0>:
 8010be8:	3801      	subs	r0, #1
 8010bea:	440a      	add	r2, r1
 8010bec:	4291      	cmp	r1, r2
 8010bee:	d100      	bne.n	8010bf2 <memcpy.isra.0+0xa>
 8010bf0:	4770      	bx	lr
 8010bf2:	f811 3b01 	ldrb.w	r3, [r1], #1
 8010bf6:	f800 3f01 	strb.w	r3, [r0, #1]!
 8010bfa:	e7f7      	b.n	8010bec <memcpy.isra.0+0x4>

08010bfc <dhcp_client>:
 8010bfc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010c00:	b087      	sub	sp, #28
 8010c02:	9203      	str	r2, [sp, #12]
 8010c04:	4a77      	ldr	r2, [pc, #476]	; (8010de4 <dhcp_client+0x1e8>)
 8010c06:	460f      	mov	r7, r1
 8010c08:	4605      	mov	r5, r0
 8010c0a:	f44f 7309 	mov.w	r3, #548	; 0x224
 8010c0e:	4614      	mov	r4, r2
 8010c10:	2100      	movs	r1, #0
 8010c12:	3b01      	subs	r3, #1
 8010c14:	f802 1b01 	strb.w	r1, [r2], #1
 8010c18:	d1fb      	bne.n	8010c12 <dhcp_client+0x16>
 8010c1a:	f240 1301 	movw	r3, #257	; 0x101
 8010c1e:	2206      	movs	r2, #6
 8010c20:	4629      	mov	r1, r5
 8010c22:	4871      	ldr	r0, [pc, #452]	; (8010de8 <dhcp_client+0x1ec>)
 8010c24:	8023      	strh	r3, [r4, #0]
 8010c26:	70a2      	strb	r2, [r4, #2]
 8010c28:	f7ff ffde 	bl	8010be8 <memcpy.isra.0>
 8010c2c:	4b6f      	ldr	r3, [pc, #444]	; (8010dec <dhcp_client+0x1f0>)
 8010c2e:	2044      	movs	r0, #68	; 0x44
 8010c30:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
 8010c34:	f240 1335 	movw	r3, #309	; 0x135
 8010c38:	f8a4 30f0 	strh.w	r3, [r4, #240]	; 0xf0
 8010c3c:	f7fe fc08 	bl	800f450 <udp_bind>
 8010c40:	1e06      	subs	r6, r0, #0
 8010c42:	f2c0 80c9 	blt.w	8010dd8 <dhcp_client+0x1dc>
 8010c46:	f04f 0915 	mov.w	r9, #21
 8010c4a:	f8df a198 	ldr.w	sl, [pc, #408]	; 8010de4 <dhcp_client+0x1e8>
 8010c4e:	f1b9 0901 	subs.w	r9, r9, #1
 8010c52:	d11f      	bne.n	8010c94 <dhcp_client+0x98>
 8010c54:	464c      	mov	r4, r9
 8010c56:	2044      	movs	r0, #68	; 0x44
 8010c58:	f7fe fc14 	bl	800f484 <udp_unbind>
 8010c5c:	2c00      	cmp	r4, #0
 8010c5e:	f000 80be 	beq.w	8010dde <dhcp_client+0x1e2>
 8010c62:	2204      	movs	r2, #4
 8010c64:	4962      	ldr	r1, [pc, #392]	; (8010df0 <dhcp_client+0x1f4>)
 8010c66:	a805      	add	r0, sp, #20
 8010c68:	f7ff ffbe 	bl	8010be8 <memcpy.isra.0>
 8010c6c:	9b05      	ldr	r3, [sp, #20]
 8010c6e:	2204      	movs	r2, #4
 8010c70:	4960      	ldr	r1, [pc, #384]	; (8010df4 <dhcp_client+0x1f8>)
 8010c72:	603b      	str	r3, [r7, #0]
 8010c74:	a805      	add	r0, sp, #20
 8010c76:	f7ff ffb7 	bl	8010be8 <memcpy.isra.0>
 8010c7a:	9b05      	ldr	r3, [sp, #20]
 8010c7c:	a805      	add	r0, sp, #20
 8010c7e:	60bb      	str	r3, [r7, #8]
 8010c80:	2204      	movs	r2, #4
 8010c82:	495d      	ldr	r1, [pc, #372]	; (8010df8 <dhcp_client+0x1fc>)
 8010c84:	f7ff ffb0 	bl	8010be8 <memcpy.isra.0>
 8010c88:	2000      	movs	r0, #0
 8010c8a:	9b05      	ldr	r3, [sp, #20]
 8010c8c:	607b      	str	r3, [r7, #4]
 8010c8e:	b007      	add	sp, #28
 8010c90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010c94:	f643 5301 	movw	r3, #15617	; 0x3d01
 8010c98:	f240 1807 	movw	r8, #263	; 0x107
 8010c9c:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 8010ca0:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 8010ca4:	782b      	ldrb	r3, [r5, #0]
 8010ca6:	4a55      	ldr	r2, [pc, #340]	; (8010dfc <dhcp_client+0x200>)
 8010ca8:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 8010cac:	786b      	ldrb	r3, [r5, #1]
 8010cae:	fa5f fb86 	uxtb.w	fp, r6
 8010cb2:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 8010cb6:	78ab      	ldrb	r3, [r5, #2]
 8010cb8:	4651      	mov	r1, sl
 8010cba:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 8010cbe:	78eb      	ldrb	r3, [r5, #3]
 8010cc0:	4658      	mov	r0, fp
 8010cc2:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 8010cc6:	792b      	ldrb	r3, [r5, #4]
 8010cc8:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 8010ccc:	796b      	ldrb	r3, [r5, #5]
 8010cce:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 8010cd2:	4b4b      	ldr	r3, [pc, #300]	; (8010e00 <dhcp_client+0x204>)
 8010cd4:	e9c4 233f 	strd	r2, r3, [r4, #252]	; 0xfc
 8010cd8:	23ff      	movs	r3, #255	; 0xff
 8010cda:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8010cde:	2343      	movs	r3, #67	; 0x43
 8010ce0:	f240 1205 	movw	r2, #261	; 0x105
 8010ce4:	9300      	str	r3, [sp, #0]
 8010ce6:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8010cea:	f7fe fc47 	bl	800f57c <udp_send>
 8010cee:	4629      	mov	r1, r5
 8010cf0:	4630      	mov	r0, r6
 8010cf2:	f7ff fec5 	bl	8010a80 <_parse_response>
 8010cf6:	2802      	cmp	r0, #2
 8010cf8:	d1a9      	bne.n	8010c4e <dhcp_client+0x52>
 8010cfa:	f643 5303 	movw	r3, #15619	; 0x3d03
 8010cfe:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 8010d02:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 8010d06:	782b      	ldrb	r3, [r5, #0]
 8010d08:	f8df c0f8 	ldr.w	ip, [pc, #248]	; 8010e04 <dhcp_client+0x208>
 8010d0c:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 8010d10:	786b      	ldrb	r3, [r5, #1]
 8010d12:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 8010d16:	78ab      	ldrb	r3, [r5, #2]
 8010d18:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 8010d1c:	78eb      	ldrb	r3, [r5, #3]
 8010d1e:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 8010d22:	792b      	ldrb	r3, [r5, #4]
 8010d24:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 8010d28:	796b      	ldrb	r3, [r5, #5]
 8010d2a:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 8010d2e:	f240 4332 	movw	r3, #1074	; 0x432
 8010d32:	f8a4 30fc 	strh.w	r3, [r4, #252]	; 0xfc
 8010d36:	4b2e      	ldr	r3, [pc, #184]	; (8010df0 <dhcp_client+0x1f4>)
 8010d38:	881a      	ldrh	r2, [r3, #0]
 8010d3a:	885b      	ldrh	r3, [r3, #2]
 8010d3c:	f8a4 20fe 	strh.w	r2, [r4, #254]	; 0xfe
 8010d40:	f8a4 3100 	strh.w	r3, [r4, #256]	; 0x100
 8010d44:	f240 4336 	movw	r3, #1078	; 0x436
 8010d48:	f8a4 3102 	strh.w	r3, [r4, #258]	; 0x102
 8010d4c:	4b2e      	ldr	r3, [pc, #184]	; (8010e08 <dhcp_client+0x20c>)
 8010d4e:	221e      	movs	r2, #30
 8010d50:	681b      	ldr	r3, [r3, #0]
 8010d52:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
 8010d56:	230c      	movs	r3, #12
 8010d58:	f8a4 3108 	strh.w	r3, [r4, #264]	; 0x108
 8010d5c:	9b03      	ldr	r3, [sp, #12]
 8010d5e:	1e58      	subs	r0, r3, #1
 8010d60:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 8010d64:	f1a2 0e1e 	sub.w	lr, r2, #30
 8010d68:	1c51      	adds	r1, r2, #1
 8010d6a:	bb8b      	cbnz	r3, 8010dd0 <dhcp_client+0x1d4>
 8010d6c:	2037      	movs	r0, #55	; 0x37
 8010d6e:	18a3      	adds	r3, r4, r2
 8010d70:	f883 00ec 	strb.w	r0, [r3, #236]	; 0xec
 8010d74:	2006      	movs	r0, #6
 8010d76:	4421      	add	r1, r4
 8010d78:	f881 00ec 	strb.w	r0, [r1, #236]	; 0xec
 8010d7c:	2103      	movs	r1, #3
 8010d7e:	f883 10ef 	strb.w	r1, [r3, #239]	; 0xef
 8010d82:	210f      	movs	r1, #15
 8010d84:	f883 10f1 	strb.w	r1, [r3, #241]	; 0xf1
 8010d88:	213a      	movs	r1, #58	; 0x3a
 8010d8a:	f883 10f2 	strb.w	r1, [r3, #242]	; 0xf2
 8010d8e:	213b      	movs	r1, #59	; 0x3b
 8010d90:	f04f 0801 	mov.w	r8, #1
 8010d94:	f883 10f3 	strb.w	r1, [r3, #243]	; 0xf3
 8010d98:	21ff      	movs	r1, #255	; 0xff
 8010d9a:	f883 00f0 	strb.w	r0, [r3, #240]	; 0xf0
 8010d9e:	f883 10f4 	strb.w	r1, [r3, #244]	; 0xf4
 8010da2:	f883 80ee 	strb.w	r8, [r3, #238]	; 0xee
 8010da6:	2343      	movs	r3, #67	; 0x43
 8010da8:	32f5      	adds	r2, #245	; 0xf5
 8010daa:	f884 e109 	strb.w	lr, [r4, #265]	; 0x109
 8010dae:	4651      	mov	r1, sl
 8010db0:	9300      	str	r3, [sp, #0]
 8010db2:	b292      	uxth	r2, r2
 8010db4:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8010db8:	4658      	mov	r0, fp
 8010dba:	f7fe fbdf 	bl	800f57c <udp_send>
 8010dbe:	4629      	mov	r1, r5
 8010dc0:	4630      	mov	r0, r6
 8010dc2:	f7ff fe5d 	bl	8010a80 <_parse_response>
 8010dc6:	2805      	cmp	r0, #5
 8010dc8:	f47f af41 	bne.w	8010c4e <dhcp_client+0x52>
 8010dcc:	4644      	mov	r4, r8
 8010dce:	e742      	b.n	8010c56 <dhcp_client+0x5a>
 8010dd0:	460a      	mov	r2, r1
 8010dd2:	f80c 3f01 	strb.w	r3, [ip, #1]!
 8010dd6:	e7c3      	b.n	8010d60 <dhcp_client+0x164>
 8010dd8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8010ddc:	e757      	b.n	8010c8e <dhcp_client+0x92>
 8010dde:	f06f 0001 	mvn.w	r0, #1
 8010de2:	e754      	b.n	8010c8e <dhcp_client+0x92>
 8010de4:	2001a4a0 	andcs	sl, r1, r0, lsr #9
 8010de8:	2001a4bc 			; <UNDEFINED> instruction: 0x2001a4bc
 8010dec:	63538263 	cmpvs	r3, #805306374	; 0x30000006
 8010df0:	2001a498 	mulcs	r1, r8, r4
 8010df4:	2001a494 	mulcs	r1, r4, r4
 8010df8:	2001a49c 	mulcs	r1, ip, r4
 8010dfc:	03010637 	movweq	r0, #5687	; 0x1637
 8010e00:	3b3a0f06 	blcc	8e94a20 <__exidx_end+0xe7d12c>
 8010e04:	2001a5a9 	andcs	sl, r1, r9, lsr #11
 8010e08:	2001a6c4 	andcs	sl, r1, r4, asr #13

08010e0c <dhcp_client_release>:
 8010e0c:	b507      	push	{r0, r1, r2, lr}
 8010e0e:	2044      	movs	r0, #68	; 0x44
 8010e10:	f7fe fb1e 	bl	800f450 <udp_bind>
 8010e14:	f243 6307 	movw	r3, #13831	; 0x3607
 8010e18:	4911      	ldr	r1, [pc, #68]	; (8010e60 <dhcp_client_release+0x54>)
 8010e1a:	b2c0      	uxtb	r0, r0
 8010e1c:	f8a1 30f2 	strh.w	r3, [r1, #242]	; 0xf2
 8010e20:	2304      	movs	r3, #4
 8010e22:	f881 30f4 	strb.w	r3, [r1, #244]	; 0xf4
 8010e26:	4b0f      	ldr	r3, [pc, #60]	; (8010e64 <dhcp_client_release+0x58>)
 8010e28:	781a      	ldrb	r2, [r3, #0]
 8010e2a:	f881 20f5 	strb.w	r2, [r1, #245]	; 0xf5
 8010e2e:	785a      	ldrb	r2, [r3, #1]
 8010e30:	f881 20f6 	strb.w	r2, [r1, #246]	; 0xf6
 8010e34:	789a      	ldrb	r2, [r3, #2]
 8010e36:	78db      	ldrb	r3, [r3, #3]
 8010e38:	f881 20f7 	strb.w	r2, [r1, #247]	; 0xf7
 8010e3c:	f881 30f8 	strb.w	r3, [r1, #248]	; 0xf8
 8010e40:	23ff      	movs	r3, #255	; 0xff
 8010e42:	f881 30f9 	strb.w	r3, [r1, #249]	; 0xf9
 8010e46:	2343      	movs	r3, #67	; 0x43
 8010e48:	22fa      	movs	r2, #250	; 0xfa
 8010e4a:	9300      	str	r3, [sp, #0]
 8010e4c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8010e50:	f7fe fb94 	bl	800f57c <udp_send>
 8010e54:	2044      	movs	r0, #68	; 0x44
 8010e56:	b003      	add	sp, #12
 8010e58:	f85d eb04 	ldr.w	lr, [sp], #4
 8010e5c:	f7fe bb12 	b.w	800f484 <udp_unbind>
 8010e60:	2001a4a0 	andcs	sl, r1, r0, lsr #9
 8010e64:	2001a6c4 	andcs	sl, r1, r4, asr #13

08010e68 <memcpy.isra.0>:
 8010e68:	3801      	subs	r0, #1
 8010e6a:	440a      	add	r2, r1
 8010e6c:	4291      	cmp	r1, r2
 8010e6e:	d100      	bne.n	8010e72 <memcpy.isra.0+0xa>
 8010e70:	4770      	bx	lr
 8010e72:	f811 3b01 	ldrb.w	r3, [r1], #1
 8010e76:	f800 3f01 	strb.w	r3, [r0, #1]!
 8010e7a:	e7f7      	b.n	8010e6c <memcpy.isra.0+0x4>

08010e7c <_send_report>:
 8010e7c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8010e7e:	491c      	ldr	r1, [pc, #112]	; (8010ef0 <_send_report+0x74>)
 8010e80:	4c1c      	ldr	r4, [pc, #112]	; (8010ef4 <_send_report+0x78>)
 8010e82:	f3c0 2306 	ubfx	r3, r0, #8, #7
 8010e86:	9001      	str	r0, [sp, #4]
 8010e88:	70cb      	strb	r3, [r1, #3]
 8010e8a:	f3c0 4307 	ubfx	r3, r0, #16, #8
 8010e8e:	f3c0 6007 	ubfx	r0, r0, #24, #8
 8010e92:	710b      	strb	r3, [r1, #4]
 8010e94:	7148      	strb	r0, [r1, #5]
 8010e96:	2206      	movs	r2, #6
 8010e98:	4620      	mov	r0, r4
 8010e9a:	f7ff ffe5 	bl	8010e68 <memcpy.isra.0>
 8010e9e:	2204      	movs	r2, #4
 8010ea0:	2700      	movs	r7, #0
 8010ea2:	4d15      	ldr	r5, [pc, #84]	; (8010ef8 <_send_report+0x7c>)
 8010ea4:	eb0d 0102 	add.w	r1, sp, r2
 8010ea8:	882b      	ldrh	r3, [r5, #0]
 8010eaa:	f104 001e 	add.w	r0, r4, #30
 8010eae:	f104 060e 	add.w	r6, r4, #14
 8010eb2:	8263      	strh	r3, [r4, #18]
 8010eb4:	f7ff ffd8 	bl	8010e68 <memcpy.isra.0>
 8010eb8:	2118      	movs	r1, #24
 8010eba:	4630      	mov	r0, r6
 8010ebc:	8327      	strh	r7, [r4, #24]
 8010ebe:	f000 f8c6 	bl	801104e <net_chksum>
 8010ec2:	2204      	movs	r2, #4
 8010ec4:	8320      	strh	r0, [r4, #24]
 8010ec6:	eb0d 0102 	add.w	r1, sp, r2
 8010eca:	f104 002a 	add.w	r0, r4, #42	; 0x2a
 8010ece:	f7ff ffcb 	bl	8010e68 <memcpy.isra.0>
 8010ed2:	2120      	movs	r1, #32
 8010ed4:	4630      	mov	r0, r6
 8010ed6:	8527      	strh	r7, [r4, #40]	; 0x28
 8010ed8:	f000 f8b9 	bl	801104e <net_chksum>
 8010edc:	212e      	movs	r1, #46	; 0x2e
 8010ede:	8520      	strh	r0, [r4, #40]	; 0x28
 8010ee0:	4620      	mov	r0, r4
 8010ee2:	f002 fc8b 	bl	80137fc <emac_eth_send>
 8010ee6:	882b      	ldrh	r3, [r5, #0]
 8010ee8:	3301      	adds	r3, #1
 8010eea:	802b      	strh	r3, [r5, #0]
 8010eec:	b003      	add	sp, #12
 8010eee:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010ef0:	2001a820 	andcs	sl, r1, r0, lsr #16
 8010ef4:	2001a828 	andcs	sl, r1, r8, lsr #16
 8010ef8:	2001a7e8 	andcs	sl, r1, r8, ror #15

08010efc <igmp_set_ip>:
 8010efc:	b507      	push	{r0, r1, r2, lr}
 8010efe:	2204      	movs	r2, #4
 8010f00:	6803      	ldr	r3, [r0, #0]
 8010f02:	eb0d 0102 	add.w	r1, sp, r2
 8010f06:	4806      	ldr	r0, [pc, #24]	; (8010f20 <igmp_set_ip+0x24>)
 8010f08:	9301      	str	r3, [sp, #4]
 8010f0a:	f7ff ffad 	bl	8010e68 <memcpy.isra.0>
 8010f0e:	2204      	movs	r2, #4
 8010f10:	4804      	ldr	r0, [pc, #16]	; (8010f24 <igmp_set_ip+0x28>)
 8010f12:	eb0d 0102 	add.w	r1, sp, r2
 8010f16:	f7ff ffa7 	bl	8010e68 <memcpy.isra.0>
 8010f1a:	b003      	add	sp, #12
 8010f1c:	f85d fb04 	ldr.w	pc, [sp], #4
 8010f20:	2001a842 	andcs	sl, r1, r2, asr #16
 8010f24:	2001a80a 	andcs	sl, r1, sl, lsl #16

08010f28 <igmp_timer>:
 8010f28:	b570      	push	{r4, r5, r6, lr}
 8010f2a:	2500      	movs	r5, #0
 8010f2c:	2602      	movs	r6, #2
 8010f2e:	4c0a      	ldr	r4, [pc, #40]	; (8010f58 <igmp_timer+0x30>)
 8010f30:	7963      	ldrb	r3, [r4, #5]
 8010f32:	2b01      	cmp	r3, #1
 8010f34:	d109      	bne.n	8010f4a <igmp_timer+0x22>
 8010f36:	7923      	ldrb	r3, [r4, #4]
 8010f38:	b13b      	cbz	r3, 8010f4a <igmp_timer+0x22>
 8010f3a:	3b01      	subs	r3, #1
 8010f3c:	b2db      	uxtb	r3, r3
 8010f3e:	7123      	strb	r3, [r4, #4]
 8010f40:	b91b      	cbnz	r3, 8010f4a <igmp_timer+0x22>
 8010f42:	6820      	ldr	r0, [r4, #0]
 8010f44:	f7ff ff9a 	bl	8010e7c <_send_report>
 8010f48:	7166      	strb	r6, [r4, #5]
 8010f4a:	3501      	adds	r5, #1
 8010f4c:	2d24      	cmp	r5, #36	; 0x24
 8010f4e:	f104 0408 	add.w	r4, r4, #8
 8010f52:	d1ed      	bne.n	8010f30 <igmp_timer+0x8>
 8010f54:	bd70      	pop	{r4, r5, r6, pc}
 8010f56:	bf00      	nop
 8010f58:	2001a6c8 	andcs	sl, r1, r8, asr #13

08010f5c <igmp_join>:
 8010f5c:	b538      	push	{r3, r4, r5, lr}
 8010f5e:	f000 03e0 	and.w	r3, r0, #224	; 0xe0
 8010f62:	2be0      	cmp	r3, #224	; 0xe0
 8010f64:	d11b      	bne.n	8010f9e <igmp_join+0x42>
 8010f66:	4911      	ldr	r1, [pc, #68]	; (8010fac <igmp_join+0x50>)
 8010f68:	680c      	ldr	r4, [r1, #0]
 8010f6a:	2c24      	cmp	r4, #36	; 0x24
 8010f6c:	d01a      	beq.n	8010fa4 <igmp_join+0x48>
 8010f6e:	2300      	movs	r3, #0
 8010f70:	4a0f      	ldr	r2, [pc, #60]	; (8010fb0 <igmp_join+0x54>)
 8010f72:	429c      	cmp	r4, r3
 8010f74:	dc0d      	bgt.n	8010f92 <igmp_join+0x36>
 8010f76:	f44f 7381 	mov.w	r3, #258	; 0x102
 8010f7a:	f842 0034 	str.w	r0, [r2, r4, lsl #3]
 8010f7e:	eb02 02c4 	add.w	r2, r2, r4, lsl #3
 8010f82:	8093      	strh	r3, [r2, #4]
 8010f84:	1c63      	adds	r3, r4, #1
 8010f86:	600b      	str	r3, [r1, #0]
 8010f88:	f7ff ff78 	bl	8010e7c <_send_report>
 8010f8c:	4623      	mov	r3, r4
 8010f8e:	4618      	mov	r0, r3
 8010f90:	bd38      	pop	{r3, r4, r5, pc}
 8010f92:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 8010f96:	4285      	cmp	r5, r0
 8010f98:	d0f9      	beq.n	8010f8e <igmp_join+0x32>
 8010f9a:	3301      	adds	r3, #1
 8010f9c:	e7e9      	b.n	8010f72 <igmp_join+0x16>
 8010f9e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8010fa2:	e7f4      	b.n	8010f8e <igmp_join+0x32>
 8010fa4:	f06f 0301 	mvn.w	r3, #1
 8010fa8:	e7f1      	b.n	8010f8e <igmp_join+0x32>
 8010faa:	bf00      	nop
 8010fac:	2001a7ec 	andcs	sl, r1, ip, ror #15
 8010fb0:	2001a6c8 	andcs	sl, r1, r8, asr #13

08010fb4 <igmp_leave>:
 8010fb4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8010fb8:	2600      	movs	r6, #0
 8010fba:	4f1c      	ldr	r7, [pc, #112]	; (801102c <igmp_leave+0x78>)
 8010fbc:	f857 3036 	ldr.w	r3, [r7, r6, lsl #3]
 8010fc0:	4283      	cmp	r3, r0
 8010fc2:	d007      	beq.n	8010fd4 <igmp_leave+0x20>
 8010fc4:	3601      	adds	r6, #1
 8010fc6:	2e24      	cmp	r6, #36	; 0x24
 8010fc8:	d1f8      	bne.n	8010fbc <igmp_leave+0x8>
 8010fca:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8010fce:	b002      	add	sp, #8
 8010fd0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010fd4:	2400      	movs	r4, #0
 8010fd6:	f8df 8058 	ldr.w	r8, [pc, #88]	; 8011030 <igmp_leave+0x7c>
 8010fda:	4d16      	ldr	r5, [pc, #88]	; (8011034 <igmp_leave+0x80>)
 8010fdc:	f8b8 3000 	ldrh.w	r3, [r8]
 8010fe0:	2118      	movs	r1, #24
 8010fe2:	9001      	str	r0, [sp, #4]
 8010fe4:	4814      	ldr	r0, [pc, #80]	; (8011038 <igmp_leave+0x84>)
 8010fe6:	826b      	strh	r3, [r5, #18]
 8010fe8:	832c      	strh	r4, [r5, #24]
 8010fea:	f000 f830 	bl	801104e <net_chksum>
 8010fee:	2204      	movs	r2, #4
 8010ff0:	8328      	strh	r0, [r5, #24]
 8010ff2:	eb0d 0102 	add.w	r1, sp, r2
 8010ff6:	f105 002a 	add.w	r0, r5, #42	; 0x2a
 8010ffa:	f7ff ff35 	bl	8010e68 <memcpy.isra.0>
 8010ffe:	2120      	movs	r1, #32
 8011000:	f105 000e 	add.w	r0, r5, #14
 8011004:	852c      	strh	r4, [r5, #40]	; 0x28
 8011006:	f000 f822 	bl	801104e <net_chksum>
 801100a:	212e      	movs	r1, #46	; 0x2e
 801100c:	8528      	strh	r0, [r5, #40]	; 0x28
 801100e:	4628      	mov	r0, r5
 8011010:	f002 fbf4 	bl	80137fc <emac_eth_send>
 8011014:	f8b8 3000 	ldrh.w	r3, [r8]
 8011018:	f847 4036 	str.w	r4, [r7, r6, lsl #3]
 801101c:	3301      	adds	r3, #1
 801101e:	eb07 07c6 	add.w	r7, r7, r6, lsl #3
 8011022:	4620      	mov	r0, r4
 8011024:	f8a8 3000 	strh.w	r3, [r8]
 8011028:	80bc      	strh	r4, [r7, #4]
 801102a:	e7d0      	b.n	8010fce <igmp_leave+0x1a>
 801102c:	2001a6c8 	andcs	sl, r1, r8, asr #13
 8011030:	2001a7e8 	andcs	sl, r1, r8, ror #15
 8011034:	2001a7f0 	strdcs	sl, [r1], -r0
 8011038:	2001a836 	andcs	sl, r1, r6, lsr r8

0801103c <ip_set_ip>:
 801103c:	b510      	push	{r4, lr}
 801103e:	4604      	mov	r4, r0
 8011040:	f7fe f9e6 	bl	800f410 <udp_set_ip>
 8011044:	4620      	mov	r0, r4
 8011046:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801104a:	f7ff bf57 	b.w	8010efc <igmp_set_ip>

0801104e <net_chksum>:
 801104e:	2300      	movs	r3, #0
 8011050:	f021 0201 	bic.w	r2, r1, #1
 8011054:	b530      	push	{r4, r5, lr}
 8011056:	1884      	adds	r4, r0, r2
 8011058:	42a0      	cmp	r0, r4
 801105a:	d10b      	bne.n	8011074 <net_chksum+0x26>
 801105c:	4291      	cmp	r1, r2
 801105e:	d004      	beq.n	801106a <net_chksum+0x1c>
 8011060:	7802      	ldrb	r2, [r0, #0]
 8011062:	0212      	lsls	r2, r2, #8
 8011064:	ba52      	rev16	r2, r2
 8011066:	b292      	uxth	r2, r2
 8011068:	4413      	add	r3, r2
 801106a:	0c1a      	lsrs	r2, r3, #16
 801106c:	d106      	bne.n	801107c <net_chksum+0x2e>
 801106e:	43d8      	mvns	r0, r3
 8011070:	b280      	uxth	r0, r0
 8011072:	bd30      	pop	{r4, r5, pc}
 8011074:	f830 5b02 	ldrh.w	r5, [r0], #2
 8011078:	442b      	add	r3, r5
 801107a:	e7ed      	b.n	8011058 <net_chksum+0xa>
 801107c:	b29b      	uxth	r3, r3
 801107e:	e7f3      	b.n	8011068 <net_chksum+0x1a>

08011080 <memcpy.isra.0>:
 8011080:	3801      	subs	r0, #1
 8011082:	440a      	add	r2, r1
 8011084:	4291      	cmp	r1, r2
 8011086:	d100      	bne.n	801108a <memcpy.isra.0+0xa>
 8011088:	4770      	bx	lr
 801108a:	f811 3b01 	ldrb.w	r3, [r1], #1
 801108e:	f800 3f01 	strb.w	r3, [r0, #1]!
 8011092:	e7f7      	b.n	8011084 <memcpy.isra.0+0x4>

08011094 <Display::Write(unsigned char, char const*) [clone .isra.0]>:
 8011094:	b430      	push	{r4, r5}
 8011096:	b168      	cbz	r0, 80110b4 <Display::Write(unsigned char, char const*) [clone .isra.0]+0x20>
 8011098:	2300      	movs	r3, #0
 801109a:	7905      	ldrb	r5, [r0, #4]
 801109c:	5cd4      	ldrb	r4, [r2, r3]
 801109e:	b11c      	cbz	r4, 80110a8 <Display::Write(unsigned char, char const*) [clone .isra.0]+0x14>
 80110a0:	1c5c      	adds	r4, r3, #1
 80110a2:	429d      	cmp	r5, r3
 80110a4:	4623      	mov	r3, r4
 80110a6:	dcf9      	bgt.n	801109c <Display::Write(unsigned char, char const*) [clone .isra.0]+0x8>
 80110a8:	6804      	ldr	r4, [r0, #0]
 80110aa:	b2db      	uxtb	r3, r3
 80110ac:	69e4      	ldr	r4, [r4, #28]
 80110ae:	46a4      	mov	ip, r4
 80110b0:	bc30      	pop	{r4, r5}
 80110b2:	4760      	bx	ip
 80110b4:	bc30      	pop	{r4, r5}
 80110b6:	4770      	bx	lr

080110b8 <Display::ClearLine(unsigned char) [clone .isra.0]>:
 80110b8:	b110      	cbz	r0, 80110c0 <Display::ClearLine(unsigned char) [clone .isra.0]+0x8>
 80110ba:	6803      	ldr	r3, [r0, #0]
 80110bc:	691b      	ldr	r3, [r3, #16]
 80110be:	4718      	bx	r3
 80110c0:	4770      	bx	lr
	...

080110c4 <DisplayUdf::DisplayUdf()>:
 80110c4:	b510      	push	{r4, lr}
 80110c6:	4604      	mov	r4, r0
 80110c8:	f000 fe8c 	bl	8011de4 <Display::Display()>
 80110cc:	4b05      	ldr	r3, [pc, #20]	; (80110e4 <DisplayUdf::DisplayUdf()+0x20>)
 80110ce:	f104 023b 	add.w	r2, r4, #59	; 0x3b
 80110d2:	601c      	str	r4, [r3, #0]
 80110d4:	2301      	movs	r3, #1
 80110d6:	f802 3f01 	strb.w	r3, [r2, #1]!
 80110da:	3301      	adds	r3, #1
 80110dc:	2b15      	cmp	r3, #21
 80110de:	d1fa      	bne.n	80110d6 <DisplayUdf::DisplayUdf()+0x12>
 80110e0:	4620      	mov	r0, r4
 80110e2:	bd10      	pop	{r4, pc}
 80110e4:	2001a858 	andcs	sl, r1, r8, asr r8

080110e8 <DisplayUdf::SetTitle(char const*, ...)>:
 80110e8:	b40e      	push	{r1, r2, r3}
 80110ea:	b517      	push	{r0, r1, r2, r4, lr}
 80110ec:	ab05      	add	r3, sp, #20
 80110ee:	f853 2b04 	ldr.w	r2, [r3], #4
 80110f2:	4604      	mov	r4, r0
 80110f4:	211f      	movs	r1, #31
 80110f6:	301c      	adds	r0, #28
 80110f8:	9301      	str	r3, [sp, #4]
 80110fa:	f7f8 fa79 	bl	80095f0 <vsnprintf>
 80110fe:	2300      	movs	r3, #0
 8011100:	4404      	add	r4, r0
 8011102:	7723      	strb	r3, [r4, #28]
 8011104:	b003      	add	sp, #12
 8011106:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801110a:	b003      	add	sp, #12
 801110c:	4770      	bx	lr

0801110e <DisplayUdf::Set(unsigned char, displayudf::Labels)>:
 801110e:	1e4b      	subs	r3, r1, #1
 8011110:	2b05      	cmp	r3, #5
 8011112:	b530      	push	{r4, r5, lr}
 8011114:	d80f      	bhi.n	8011136 <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x28>
 8011116:	2300      	movs	r3, #0
 8011118:	f100 043b 	add.w	r4, r0, #59	; 0x3b
 801111c:	f814 5f01 	ldrb.w	r5, [r4, #1]!
 8011120:	428d      	cmp	r5, r1
 8011122:	d109      	bne.n	8011138 <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x2a>
 8011124:	1884      	adds	r4, r0, r2
 8011126:	f894 403c 	ldrb.w	r4, [r4, #60]	; 0x3c
 801112a:	4403      	add	r3, r0
 801112c:	f883 403c 	strb.w	r4, [r3, #60]	; 0x3c
 8011130:	4410      	add	r0, r2
 8011132:	f880 103c 	strb.w	r1, [r0, #60]	; 0x3c
 8011136:	bd30      	pop	{r4, r5, pc}
 8011138:	3301      	adds	r3, #1
 801113a:	2b14      	cmp	r3, #20
 801113c:	d1ee      	bne.n	801111c <DisplayUdf::Set(unsigned char, displayudf::Labels)+0xe>
 801113e:	e7f7      	b.n	8011130 <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x22>

08011140 <DisplayUdf::ShowEmacStart()>:
 8011140:	b510      	push	{r4, lr}
 8011142:	4604      	mov	r4, r0
 8011144:	f890 103e 	ldrb.w	r1, [r0, #62]	; 0x3e
 8011148:	6980      	ldr	r0, [r0, #24]
 801114a:	f7ff ffb5 	bl	80110b8 <Display::ClearLine(unsigned char) [clone .isra.0]>
 801114e:	4620      	mov	r0, r4
 8011150:	4a02      	ldr	r2, [pc, #8]	; (801115c <DisplayUdf::ShowEmacStart()+0x1c>)
 8011152:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 8011156:	f7f7 fafb 	bl	8008750 <Display::Printf(unsigned char, char const*, ...)>
 801115a:	bd10      	pop	{r4, pc}
 801115c:	080171b4 	stmdaeq	r1, {r2, r4, r5, r7, r8, ip, sp, lr}

08011160 <DisplayUdf::ShowIpAddress()>:
 8011160:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011164:	4604      	mov	r4, r0
 8011166:	f890 103e 	ldrb.w	r1, [r0, #62]	; 0x3e
 801116a:	b086      	sub	sp, #24
 801116c:	6980      	ldr	r0, [r0, #24]
 801116e:	f7ff ffa3 	bl	80110b8 <Display::ClearLine(unsigned char) [clone .isra.0]>
 8011172:	4b13      	ldr	r3, [pc, #76]	; (80111c0 <DisplayUdf::ShowIpAddress()+0x60>)
 8011174:	f894 703e 	ldrb.w	r7, [r4, #62]	; 0x3e
 8011178:	681d      	ldr	r5, [r3, #0]
 801117a:	69e8      	ldr	r0, [r5, #28]
 801117c:	696e      	ldr	r6, [r5, #20]
 801117e:	f003 fc97 	bl	8014ab0 <__popcountsi2>
 8011182:	79eb      	ldrb	r3, [r5, #7]
 8011184:	fa5f f886 	uxtb.w	r8, r6
 8011188:	f3c6 2907 	ubfx	r9, r6, #8, #8
 801118c:	f3c6 4a07 	ubfx	sl, r6, #16, #8
 8011190:	0e36      	lsrs	r6, r6, #24
 8011192:	b99b      	cbnz	r3, 80111bc <DisplayUdf::ShowIpAddress()+0x5c>
 8011194:	796b      	ldrb	r3, [r5, #5]
 8011196:	2b00      	cmp	r3, #0
 8011198:	bf14      	ite	ne
 801119a:	2244      	movne	r2, #68	; 0x44
 801119c:	2253      	moveq	r2, #83	; 0x53
 801119e:	e9cd 0203 	strd	r0, r2, [sp, #12]
 80111a2:	4643      	mov	r3, r8
 80111a4:	4639      	mov	r1, r7
 80111a6:	4620      	mov	r0, r4
 80111a8:	e9cd a601 	strd	sl, r6, [sp, #4]
 80111ac:	4a05      	ldr	r2, [pc, #20]	; (80111c4 <DisplayUdf::ShowIpAddress()+0x64>)
 80111ae:	f8cd 9000 	str.w	r9, [sp]
 80111b2:	f7f7 facd 	bl	8008750 <Display::Printf(unsigned char, char const*, ...)>
 80111b6:	b006      	add	sp, #24
 80111b8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80111bc:	225a      	movs	r2, #90	; 0x5a
 80111be:	e7ee      	b.n	801119e <DisplayUdf::ShowIpAddress()+0x3e>
 80111c0:	2001a288 	andcs	sl, r1, r8, lsl #5
 80111c4:	080171c3 	stmdaeq	r1, {r0, r1, r6, r7, r8, ip, sp, lr}

080111c8 <DisplayUdf::ShowNetmask()>:
 80111c8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80111ca:	4604      	mov	r4, r0
 80111cc:	4b0b      	ldr	r3, [pc, #44]	; (80111fc <DisplayUdf::ShowNetmask()+0x34>)
 80111ce:	681b      	ldr	r3, [r3, #0]
 80111d0:	69db      	ldr	r3, [r3, #28]
 80111d2:	0e1a      	lsrs	r2, r3, #24
 80111d4:	9202      	str	r2, [sp, #8]
 80111d6:	f3c3 4207 	ubfx	r2, r3, #16, #8
 80111da:	9201      	str	r2, [sp, #4]
 80111dc:	f3c3 2207 	ubfx	r2, r3, #8, #8
 80111e0:	9200      	str	r2, [sp, #0]
 80111e2:	f890 1048 	ldrb.w	r1, [r0, #72]	; 0x48
 80111e6:	4a06      	ldr	r2, [pc, #24]	; (8011200 <DisplayUdf::ShowNetmask()+0x38>)
 80111e8:	b2db      	uxtb	r3, r3
 80111ea:	f7f7 fab1 	bl	8008750 <Display::Printf(unsigned char, char const*, ...)>
 80111ee:	4620      	mov	r0, r4
 80111f0:	b004      	add	sp, #16
 80111f2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80111f6:	f7ff bfb3 	b.w	8011160 <DisplayUdf::ShowIpAddress()>
 80111fa:	bf00      	nop
 80111fc:	2001a288 	andcs	sl, r1, r8, lsl #5
 8011200:	080171d5 	stmdaeq	r1, {r0, r2, r4, r6, r7, r8, ip, sp, lr}

08011204 <DisplayUdf::ShowGatewayIp()>:
 8011204:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8011206:	4604      	mov	r4, r0
 8011208:	f890 104e 	ldrb.w	r1, [r0, #78]	; 0x4e
 801120c:	6980      	ldr	r0, [r0, #24]
 801120e:	f7ff ff53 	bl	80110b8 <Display::ClearLine(unsigned char) [clone .isra.0]>
 8011212:	4b0a      	ldr	r3, [pc, #40]	; (801123c <DisplayUdf::ShowGatewayIp()+0x38>)
 8011214:	4620      	mov	r0, r4
 8011216:	681b      	ldr	r3, [r3, #0]
 8011218:	f894 104e 	ldrb.w	r1, [r4, #78]	; 0x4e
 801121c:	699b      	ldr	r3, [r3, #24]
 801121e:	0e1a      	lsrs	r2, r3, #24
 8011220:	9202      	str	r2, [sp, #8]
 8011222:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8011226:	9201      	str	r2, [sp, #4]
 8011228:	f3c3 2207 	ubfx	r2, r3, #8, #8
 801122c:	9200      	str	r2, [sp, #0]
 801122e:	b2db      	uxtb	r3, r3
 8011230:	4a03      	ldr	r2, [pc, #12]	; (8011240 <DisplayUdf::ShowGatewayIp()+0x3c>)
 8011232:	f7f7 fa8d 	bl	8008750 <Display::Printf(unsigned char, char const*, ...)>
 8011236:	b004      	add	sp, #16
 8011238:	bd10      	pop	{r4, pc}
 801123a:	bf00      	nop
 801123c:	2001a288 	andcs	sl, r1, r8, lsl #5
 8011240:	080171e4 	stmdaeq	r1, {r2, r5, r6, r7, r8, ip, sp, lr}

08011244 <DisplayUdf::ShowHostName()>:
 8011244:	b510      	push	{r4, lr}
 8011246:	4604      	mov	r4, r0
 8011248:	f890 1043 	ldrb.w	r1, [r0, #67]	; 0x43
 801124c:	6980      	ldr	r0, [r0, #24]
 801124e:	f7ff ff33 	bl	80110b8 <Display::ClearLine(unsigned char) [clone .isra.0]>
 8011252:	4b05      	ldr	r3, [pc, #20]	; (8011268 <DisplayUdf::ShowHostName()+0x24>)
 8011254:	f894 1043 	ldrb.w	r1, [r4, #67]	; 0x43
 8011258:	681a      	ldr	r2, [r3, #0]
 801125a:	69a0      	ldr	r0, [r4, #24]
 801125c:	3220      	adds	r2, #32
 801125e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011262:	f7ff bf17 	b.w	8011094 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 8011266:	bf00      	nop
 8011268:	2001a288 	andcs	sl, r1, r8, lsl #5

0801126c <DisplayUdf::Show()>:
 801126c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801126e:	4604      	mov	r4, r0
 8011270:	21ff      	movs	r1, #255	; 0xff
 8011272:	f100 033b 	add.w	r3, r0, #59	; 0x3b
 8011276:	f100 024f 	add.w	r2, r0, #79	; 0x4f
 801127a:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 801127e:	2806      	cmp	r0, #6
 8011280:	bf88      	it	hi
 8011282:	7019      	strbhi	r1, [r3, #0]
 8011284:	429a      	cmp	r2, r3
 8011286:	d1f8      	bne.n	801127a <DisplayUdf::Show()+0xe>
 8011288:	2501      	movs	r5, #1
 801128a:	4629      	mov	r1, r5
 801128c:	3501      	adds	r5, #1
 801128e:	69a0      	ldr	r0, [r4, #24]
 8011290:	b2ed      	uxtb	r5, r5
 8011292:	f7ff ff11 	bl	80110b8 <Display::ClearLine(unsigned char) [clone .isra.0]>
 8011296:	2d06      	cmp	r5, #6
 8011298:	d1f7      	bne.n	801128a <DisplayUdf::Show()+0x1e>
 801129a:	f894 103c 	ldrb.w	r1, [r4, #60]	; 0x3c
 801129e:	69a0      	ldr	r0, [r4, #24]
 80112a0:	f104 021c 	add.w	r2, r4, #28
 80112a4:	f7ff fef6 	bl	8011094 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 80112a8:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 80112ac:	69a0      	ldr	r0, [r4, #24]
 80112ae:	4a0d      	ldr	r2, [pc, #52]	; (80112e4 <DisplayUdf::Show()+0x78>)
 80112b0:	f7ff fef0 	bl	8011094 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 80112b4:	4b0c      	ldr	r3, [pc, #48]	; (80112e8 <DisplayUdf::Show()+0x7c>)
 80112b6:	4a0d      	ldr	r2, [pc, #52]	; (80112ec <DisplayUdf::Show()+0x80>)
 80112b8:	f894 103f 	ldrb.w	r1, [r4, #63]	; 0x3f
 80112bc:	9300      	str	r3, [sp, #0]
 80112be:	4620      	mov	r0, r4
 80112c0:	2303      	movs	r3, #3
 80112c2:	f7f7 fa45 	bl	8008750 <Display::Printf(unsigned char, char const*, ...)>
 80112c6:	4620      	mov	r0, r4
 80112c8:	f7ff ff4a 	bl	8011160 <DisplayUdf::ShowIpAddress()>
 80112cc:	4620      	mov	r0, r4
 80112ce:	f7ff ff99 	bl	8011204 <DisplayUdf::ShowGatewayIp()>
 80112d2:	4620      	mov	r0, r4
 80112d4:	f7ff ff78 	bl	80111c8 <DisplayUdf::ShowNetmask()>
 80112d8:	4620      	mov	r0, r4
 80112da:	b003      	add	sp, #12
 80112dc:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80112e0:	f7ff bfb0 	b.w	8011244 <DisplayUdf::ShowHostName()>
 80112e4:	08015394 	stmdaeq	r1, {r2, r4, r7, r8, r9, ip, lr}
 80112e8:	2001a8f0 	strdcs	sl, [r1], -r0
 80112ec:	080171f3 	stmdaeq	r1, {r0, r1, r4, r5, r6, r7, r8, ip, sp, lr}

080112f0 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)>:
 80112f0:	3901      	subs	r1, #1
 80112f2:	b510      	push	{r4, lr}
 80112f4:	4604      	mov	r4, r0
 80112f6:	2903      	cmp	r1, #3
 80112f8:	d814      	bhi.n	8011324 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x34>
 80112fa:	e8df f001 	tbb	[pc, r1]
 80112fe:	281b1402 	ldmdacs	fp, {r1, sl, ip}
 8011302:	4b14      	ldr	r3, [pc, #80]	; (8011354 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 8011304:	f44f 41b6 	mov.w	r1, #23296	; 0x5b00
 8011308:	6818      	ldr	r0, [r3, #0]
 801130a:	f7f8 fbe7 	bl	8009adc <Display::Status(Display7SegmentMessage)>
 801130e:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 8011312:	69a0      	ldr	r0, [r4, #24]
 8011314:	f7ff fed0 	bl	80110b8 <Display::ClearLine(unsigned char) [clone .isra.0]>
 8011318:	4a0f      	ldr	r2, [pc, #60]	; (8011358 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x68>)
 801131a:	4620      	mov	r0, r4
 801131c:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 8011320:	f7f7 fa16 	bl	8008750 <Display::Printf(unsigned char, char const*, ...)>
 8011324:	bd10      	pop	{r4, pc}
 8011326:	f248 0180 	movw	r1, #32896	; 0x8080
 801132a:	4b0a      	ldr	r3, [pc, #40]	; (8011354 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 801132c:	6818      	ldr	r0, [r3, #0]
 801132e:	f7f8 fbd5 	bl	8009adc <Display::Status(Display7SegmentMessage)>
 8011332:	e7f7      	b.n	8011324 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x34>
 8011334:	4b07      	ldr	r3, [pc, #28]	; (8011354 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 8011336:	f44f 41b6 	mov.w	r1, #23296	; 0x5b00
 801133a:	6818      	ldr	r0, [r3, #0]
 801133c:	f7f8 fbce 	bl	8009adc <Display::Status(Display7SegmentMessage)>
 8011340:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 8011344:	69a0      	ldr	r0, [r4, #24]
 8011346:	f7ff feb7 	bl	80110b8 <Display::ClearLine(unsigned char) [clone .isra.0]>
 801134a:	4a04      	ldr	r2, [pc, #16]	; (801135c <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x6c>)
 801134c:	e7e5      	b.n	801131a <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x2a>
 801134e:	f645 3179 	movw	r1, #23417	; 0x5b79
 8011352:	e7ea      	b.n	801132a <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x3a>
 8011354:	2001a860 	andcs	sl, r1, r0, ror #16
 8011358:	08017202 	stmdaeq	r1, {r1, r9, ip, sp, lr}
 801135c:	08017210 	stmdaeq	r1, {r4, r9, ip, sp, lr}

08011360 <DisplayUdf::ShowShutdown()>:
 8011360:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011364:	4604      	mov	r4, r0
 8011366:	6980      	ldr	r0, [r0, #24]
 8011368:	b1d0      	cbz	r0, 80113a0 <DisplayUdf::ShowShutdown()+0x40>
 801136a:	f890 8005 	ldrb.w	r8, [r0, #5]
 801136e:	6803      	ldr	r3, [r0, #0]
 8011370:	f108 35ff 	add.w	r5, r8, #4294967295	; 0xffffffff
 8011374:	b2ed      	uxtb	r5, r5
 8011376:	462a      	mov	r2, r5
 8011378:	2100      	movs	r1, #0
 801137a:	6a1b      	ldr	r3, [r3, #32]
 801137c:	7906      	ldrb	r6, [r0, #4]
 801137e:	2700      	movs	r7, #0
 8011380:	4798      	blx	r3
 8011382:	3e01      	subs	r6, #1
 8011384:	42b7      	cmp	r7, r6
 8011386:	69a0      	ldr	r0, [r4, #24]
 8011388:	d311      	bcc.n	80113ae <DisplayUdf::ShowShutdown()+0x4e>
 801138a:	b120      	cbz	r0, 8011396 <DisplayUdf::ShowShutdown()+0x36>
 801138c:	6803      	ldr	r3, [r0, #0]
 801138e:	462a      	mov	r2, r5
 8011390:	2100      	movs	r1, #0
 8011392:	6a1b      	ldr	r3, [r3, #32]
 8011394:	4798      	blx	r3
 8011396:	4641      	mov	r1, r8
 8011398:	4a08      	ldr	r2, [pc, #32]	; (80113bc <DisplayUdf::ShowShutdown()+0x5c>)
 801139a:	69a0      	ldr	r0, [r4, #24]
 801139c:	f7ff fe7a 	bl	8011094 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 80113a0:	f44f 41de 	mov.w	r1, #28416	; 0x6f00
 80113a4:	4620      	mov	r0, r4
 80113a6:	f7f8 fb99 	bl	8009adc <Display::Status(Display7SegmentMessage)>
 80113aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80113ae:	b118      	cbz	r0, 80113b8 <DisplayUdf::ShowShutdown()+0x58>
 80113b0:	6803      	ldr	r3, [r0, #0]
 80113b2:	2120      	movs	r1, #32
 80113b4:	695b      	ldr	r3, [r3, #20]
 80113b6:	4798      	blx	r3
 80113b8:	3701      	adds	r7, #1
 80113ba:	e7e3      	b.n	8011384 <DisplayUdf::ShowShutdown()+0x24>
 80113bc:	0801721e 	stmdaeq	r1, {r1, r2, r3, r4, r9, ip, sp, lr}

080113c0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>:
 80113c0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80113c2:	88c6      	ldrh	r6, [r0, #6]
 80113c4:	8885      	ldrh	r5, [r0, #4]
 80113c6:	42ae      	cmp	r6, r5
 80113c8:	d216      	bcs.n	80113f8 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x38>
 80113ca:	4604      	mov	r4, r0
 80113cc:	6800      	ldr	r0, [r0, #0]
 80113ce:	1bad      	subs	r5, r5, r6
 80113d0:	4430      	add	r0, r6
 80113d2:	7a26      	ldrb	r6, [r4, #8]
 80113d4:	b923      	cbnz	r3, 80113e0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x20>
 80113d6:	b926      	cbnz	r6, 80113e2 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x22>
 80113d8:	9200      	str	r2, [sp, #0]
 80113da:	460b      	mov	r3, r1
 80113dc:	4a09      	ldr	r2, [pc, #36]	; (8011404 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x44>)
 80113de:	e003      	b.n	80113e8 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 80113e0:	b166      	cbz	r6, 80113fc <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x3c>
 80113e2:	460b      	mov	r3, r1
 80113e4:	9200      	str	r2, [sp, #0]
 80113e6:	4a08      	ldr	r2, [pc, #32]	; (8011408 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x48>)
 80113e8:	4629      	mov	r1, r5
 80113ea:	f7f8 f8e9 	bl	80095c0 <snprintf>
 80113ee:	4285      	cmp	r5, r0
 80113f0:	bfa2      	ittt	ge
 80113f2:	88e3      	ldrhge	r3, [r4, #6]
 80113f4:	181b      	addge	r3, r3, r0
 80113f6:	80e3      	strhge	r3, [r4, #6]
 80113f8:	b002      	add	sp, #8
 80113fa:	bd70      	pop	{r4, r5, r6, pc}
 80113fc:	9200      	str	r2, [sp, #0]
 80113fe:	460b      	mov	r3, r1
 8011400:	4a02      	ldr	r2, [pc, #8]	; (801140c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x4c>)
 8011402:	e7f1      	b.n	80113e8 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 8011404:	08015061 	stmdaeq	r1, {r0, r5, r6, ip, lr}
 8011408:	08015058 	stmdaeq	r1, {r3, r4, r6, ip, lr}
 801140c:	08015062 	stmdaeq	r1, {r1, r5, r6, ip, lr}

08011410 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>:
 8011410:	b510      	push	{r4, lr}
 8011412:	2220      	movs	r2, #32
 8011414:	4604      	mov	r4, r0
 8011416:	f840 1b04 	str.w	r1, [r0], #4
 801141a:	2100      	movs	r1, #0
 801141c:	f001 f972 	bl	8012704 <memset>
 8011420:	f647 7305 	movw	r3, #32517	; 0x7f05
 8011424:	4620      	mov	r0, r4
 8011426:	84a3      	strh	r3, [r4, #36]	; 0x24
 8011428:	bd10      	pop	{r4, pc}

0801142a <DisplayUdfParams::Load()>:
 801142a:	b508      	push	{r3, lr}
 801142c:	2300      	movs	r3, #0
 801142e:	4601      	mov	r1, r0
 8011430:	6043      	str	r3, [r0, #4]
 8011432:	6800      	ldr	r0, [r0, #0]
 8011434:	b120      	cbz	r0, 8011440 <DisplayUdfParams::Load()+0x16>
 8011436:	6803      	ldr	r3, [r0, #0]
 8011438:	3104      	adds	r1, #4
 801143a:	68db      	ldr	r3, [r3, #12]
 801143c:	4798      	blx	r3
 801143e:	2001      	movs	r0, #1
 8011440:	bd08      	pop	{r3, pc}
	...

08011444 <DisplayUdfParams::Load(char const*, unsigned int)>:
 8011444:	6803      	ldr	r3, [r0, #0]
 8011446:	b1d3      	cbz	r3, 801147e <DisplayUdfParams::Load(char const*, unsigned int)+0x3a>
 8011448:	2300      	movs	r3, #0
 801144a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801144c:	460d      	mov	r5, r1
 801144e:	4616      	mov	r6, r2
 8011450:	4604      	mov	r4, r0
 8011452:	6043      	str	r3, [r0, #4]
 8011454:	4602      	mov	r2, r0
 8011456:	490a      	ldr	r1, [pc, #40]	; (8011480 <DisplayUdfParams::Load(char const*, unsigned int)+0x3c>)
 8011458:	4668      	mov	r0, sp
 801145a:	f000 facf 	bl	80119fc <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 801145e:	4632      	mov	r2, r6
 8011460:	4629      	mov	r1, r5
 8011462:	4668      	mov	r0, sp
 8011464:	f000 face 	bl	8011a04 <ReadConfigFile::Read(char const*, unsigned int)>
 8011468:	4621      	mov	r1, r4
 801146a:	f851 0b04 	ldr.w	r0, [r1], #4
 801146e:	6803      	ldr	r3, [r0, #0]
 8011470:	689b      	ldr	r3, [r3, #8]
 8011472:	4798      	blx	r3
 8011474:	4668      	mov	r0, sp
 8011476:	f000 fac4 	bl	8011a02 <ReadConfigFile::~ReadConfigFile()>
 801147a:	b002      	add	sp, #8
 801147c:	bd70      	pop	{r4, r5, r6, pc}
 801147e:	4770      	bx	lr
 8011480:	0801154d 	stmdaeq	r1, {r0, r2, r3, r6, r8, sl, ip}

08011484 <DisplayUdfParams::callbackFunction(char const*)>:
 8011484:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8011486:	460e      	mov	r6, r1
 8011488:	4604      	mov	r4, r0
 801148a:	492c      	ldr	r1, [pc, #176]	; (801153c <DisplayUdfParams::callbackFunction(char const*)+0xb8>)
 801148c:	4630      	mov	r0, r6
 801148e:	f10d 0207 	add.w	r2, sp, #7
 8011492:	f000 fbef 	bl	8011c74 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8011496:	b968      	cbnz	r0, 80114b4 <DisplayUdfParams::callbackFunction(char const*)+0x30>
 8011498:	f89d 2007 	ldrb.w	r2, [sp, #7]
 801149c:	6863      	ldr	r3, [r4, #4]
 801149e:	2a7f      	cmp	r2, #127	; 0x7f
 80114a0:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
 80114a4:	bf14      	ite	ne
 80114a6:	f043 5300 	orrne.w	r3, r3, #536870912	; 0x20000000
 80114aa:	f023 5300 	biceq.w	r3, r3, #536870912	; 0x20000000
 80114ae:	6063      	str	r3, [r4, #4]
 80114b0:	b003      	add	sp, #12
 80114b2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80114b4:	4630      	mov	r0, r6
 80114b6:	4922      	ldr	r1, [pc, #136]	; (8011540 <DisplayUdfParams::callbackFunction(char const*)+0xbc>)
 80114b8:	f10d 0207 	add.w	r2, sp, #7
 80114bc:	f000 fbda 	bl	8011c74 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 80114c0:	b958      	cbnz	r0, 80114da <DisplayUdfParams::callbackFunction(char const*)+0x56>
 80114c2:	f89d 2007 	ldrb.w	r2, [sp, #7]
 80114c6:	6863      	ldr	r3, [r4, #4]
 80114c8:	2a05      	cmp	r2, #5
 80114ca:	f884 2024 	strb.w	r2, [r4, #36]	; 0x24
 80114ce:	bf14      	ite	ne
 80114d0:	f043 5380 	orrne.w	r3, r3, #268435456	; 0x10000000
 80114d4:	f023 5380 	biceq.w	r3, r3, #268435456	; 0x10000000
 80114d8:	e7e9      	b.n	80114ae <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 80114da:	4630      	mov	r0, r6
 80114dc:	4919      	ldr	r1, [pc, #100]	; (8011544 <DisplayUdfParams::callbackFunction(char const*)+0xc0>)
 80114de:	f10d 0207 	add.w	r2, sp, #7
 80114e2:	f000 fbc7 	bl	8011c74 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 80114e6:	b948      	cbnz	r0, 80114fc <DisplayUdfParams::callbackFunction(char const*)+0x78>
 80114e8:	f89d 2007 	ldrb.w	r2, [sp, #7]
 80114ec:	6863      	ldr	r3, [r4, #4]
 80114ee:	b112      	cbz	r2, 80114f6 <DisplayUdfParams::callbackFunction(char const*)+0x72>
 80114f0:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 80114f4:	e7db      	b.n	80114ae <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 80114f6:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 80114fa:	e7d8      	b.n	80114ae <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 80114fc:	2500      	movs	r5, #0
 80114fe:	4f12      	ldr	r7, [pc, #72]	; (8011548 <DisplayUdfParams::callbackFunction(char const*)+0xc4>)
 8011500:	4630      	mov	r0, r6
 8011502:	f857 1b04 	ldr.w	r1, [r7], #4
 8011506:	f10d 0207 	add.w	r2, sp, #7
 801150a:	f000 fbb3 	bl	8011c74 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 801150e:	b980      	cbnz	r0, 8011532 <DisplayUdfParams::callbackFunction(char const*)+0xae>
 8011510:	2301      	movs	r3, #1
 8011512:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8011516:	40ab      	lsls	r3, r5
 8011518:	1e4e      	subs	r6, r1, #1
 801151a:	2e05      	cmp	r6, #5
 801151c:	6862      	ldr	r2, [r4, #4]
 801151e:	4425      	add	r5, r4
 8011520:	d802      	bhi.n	8011528 <DisplayUdfParams::callbackFunction(char const*)+0xa4>
 8011522:	7229      	strb	r1, [r5, #8]
 8011524:	4313      	orrs	r3, r2
 8011526:	e7c2      	b.n	80114ae <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 8011528:	ea22 0203 	bic.w	r2, r2, r3
 801152c:	7228      	strb	r0, [r5, #8]
 801152e:	6062      	str	r2, [r4, #4]
 8011530:	e7be      	b.n	80114b0 <DisplayUdfParams::callbackFunction(char const*)+0x2c>
 8011532:	3501      	adds	r5, #1
 8011534:	2d14      	cmp	r5, #20
 8011536:	d1e3      	bne.n	8011500 <DisplayUdfParams::callbackFunction(char const*)+0x7c>
 8011538:	e7ba      	b.n	80114b0 <DisplayUdfParams::callbackFunction(char const*)+0x2c>
 801153a:	bf00      	nop
 801153c:	080172de 	stmdaeq	r1, {r1, r2, r3, r4, r6, r7, r9, ip, sp, lr}
 8011540:	080172a6 	stmdaeq	r1, {r1, r2, r5, r7, r9, ip, sp, lr}
 8011544:	080172b4 	stmdaeq	r1, {r2, r4, r5, r7, r9, ip, sp, lr}
 8011548:	08017230 	stmdaeq	r1, {r4, r5, r9, ip, sp, lr}

0801154c <DisplayUdfParams::staticCallbackFunction(void*, char const*)>:
 801154c:	f7ff bf9a 	b.w	8011484 <DisplayUdfParams::callbackFunction(char const*)>

08011550 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)>:
 8011550:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011554:	4604      	mov	r4, r0
 8011556:	4615      	mov	r5, r2
 8011558:	461e      	mov	r6, r3
 801155a:	b086      	sub	sp, #24
 801155c:	3004      	adds	r0, #4
 801155e:	b379      	cbz	r1, 80115c0 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x70>
 8011560:	2222      	movs	r2, #34	; 0x22
 8011562:	f001 f8b8 	bl	80126d6 <memmove>
 8011566:	462a      	mov	r2, r5
 8011568:	4633      	mov	r3, r6
 801156a:	493d      	ldr	r1, [pc, #244]	; (8011660 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x110>)
 801156c:	a803      	add	r0, sp, #12
 801156e:	f000 f9a5 	bl	80118bc <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 8011572:	6863      	ldr	r3, [r4, #4]
 8011574:	f894 2025 	ldrb.w	r2, [r4, #37]	; 0x25
 8011578:	493a      	ldr	r1, [pc, #232]	; (8011664 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x114>)
 801157a:	f3c3 7340 	ubfx	r3, r3, #29, #1
 801157e:	a803      	add	r0, sp, #12
 8011580:	f7ff ff1e 	bl	80113c0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 8011584:	6863      	ldr	r3, [r4, #4]
 8011586:	f894 2024 	ldrb.w	r2, [r4, #36]	; 0x24
 801158a:	f3c3 7300 	ubfx	r3, r3, #28, #1
 801158e:	4936      	ldr	r1, [pc, #216]	; (8011668 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x118>)
 8011590:	a803      	add	r0, sp, #12
 8011592:	f7ff ff15 	bl	80113c0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 8011596:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801159a:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 801159e:	6863      	ldr	r3, [r4, #4]
 80115a0:	42aa      	cmp	r2, r5
 80115a2:	d226      	bcs.n	80115f2 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xa2>
 80115a4:	9803      	ldr	r0, [sp, #12]
 80115a6:	f013 4380 	ands.w	r3, r3, #1073741824	; 0x40000000
 80115aa:	4410      	add	r0, r2
 80115ac:	eba5 0502 	sub.w	r5, r5, r2
 80115b0:	f89d 2014 	ldrb.w	r2, [sp, #20]
 80115b4:	d10b      	bne.n	80115ce <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x7e>
 80115b6:	b962      	cbnz	r2, 80115d2 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x82>
 80115b8:	9200      	str	r2, [sp, #0]
 80115ba:	4b2c      	ldr	r3, [pc, #176]	; (801166c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>)
 80115bc:	4a2c      	ldr	r2, [pc, #176]	; (8011670 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x120>)
 80115be:	e00e      	b.n	80115de <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x8e>
 80115c0:	6823      	ldr	r3, [r4, #0]
 80115c2:	4601      	mov	r1, r0
 80115c4:	681a      	ldr	r2, [r3, #0]
 80115c6:	4618      	mov	r0, r3
 80115c8:	68d2      	ldr	r2, [r2, #12]
 80115ca:	4790      	blx	r2
 80115cc:	e7cb      	b.n	8011566 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x16>
 80115ce:	2a00      	cmp	r2, #0
 80115d0:	d041      	beq.n	8011656 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x106>
 80115d2:	3b00      	subs	r3, #0
 80115d4:	bf18      	it	ne
 80115d6:	2301      	movne	r3, #1
 80115d8:	4a26      	ldr	r2, [pc, #152]	; (8011674 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x124>)
 80115da:	9300      	str	r3, [sp, #0]
 80115dc:	4b23      	ldr	r3, [pc, #140]	; (801166c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>)
 80115de:	4629      	mov	r1, r5
 80115e0:	f7f7 ffee 	bl	80095c0 <snprintf>
 80115e4:	4285      	cmp	r5, r0
 80115e6:	bfa2      	ittt	ge
 80115e8:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 80115ec:	181b      	addge	r3, r3, r0
 80115ee:	f8ad 3012 	strhge.w	r3, [sp, #18]
 80115f2:	2500      	movs	r5, #0
 80115f4:	2701      	movs	r7, #1
 80115f6:	4e20      	ldr	r6, [pc, #128]	; (8011678 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x128>)
 80115f8:	f104 0808 	add.w	r8, r4, #8
 80115fc:	f856 1b04 	ldr.w	r1, [r6], #4
 8011600:	780b      	ldrb	r3, [r1, #0]
 8011602:	b15b      	cbz	r3, 801161c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xcc>
 8011604:	6862      	ldr	r2, [r4, #4]
 8011606:	fa07 f305 	lsl.w	r3, r7, r5
 801160a:	4393      	bics	r3, r2
 801160c:	bf0c      	ite	eq
 801160e:	2301      	moveq	r3, #1
 8011610:	2300      	movne	r3, #0
 8011612:	f818 2005 	ldrb.w	r2, [r8, r5]
 8011616:	a803      	add	r0, sp, #12
 8011618:	f7ff fed2 	bl	80113c0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 801161c:	3501      	adds	r5, #1
 801161e:	2d14      	cmp	r5, #20
 8011620:	d1ec      	bne.n	80115fc <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xac>
 8011622:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8011626:	b17b      	cbz	r3, 8011648 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xf8>
 8011628:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801162c:	9b03      	ldr	r3, [sp, #12]
 801162e:	4413      	add	r3, r2
 8011630:	227d      	movs	r2, #125	; 0x7d
 8011632:	f803 2c01 	strb.w	r2, [r3, #-1]
 8011636:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801163a:	9903      	ldr	r1, [sp, #12]
 801163c:	54ca      	strb	r2, [r1, r3]
 801163e:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8011642:	3301      	adds	r3, #1
 8011644:	f8ad 3012 	strh.w	r3, [sp, #18]
 8011648:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801164c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801164e:	601a      	str	r2, [r3, #0]
 8011650:	b006      	add	sp, #24
 8011652:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011656:	2301      	movs	r3, #1
 8011658:	4a08      	ldr	r2, [pc, #32]	; (801167c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x12c>)
 801165a:	9300      	str	r3, [sp, #0]
 801165c:	4b03      	ldr	r3, [pc, #12]	; (801166c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>)
 801165e:	e7be      	b.n	80115de <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x8e>
 8011660:	080172d2 	stmdaeq	r1, {r1, r4, r6, r7, r9, ip, sp, lr}
 8011664:	080172de 	stmdaeq	r1, {r1, r2, r3, r4, r6, r7, r9, ip, sp, lr}
 8011668:	080172a6 	stmdaeq	r1, {r1, r2, r5, r7, r9, ip, sp, lr}
 801166c:	080172b4 	stmdaeq	r1, {r2, r4, r5, r7, r9, ip, sp, lr}
 8011670:	08015061 	stmdaeq	r1, {r0, r5, r6, ip, lr}
 8011674:	08015058 	stmdaeq	r1, {r3, r4, r6, ip, lr}
 8011678:	08017230 	stmdaeq	r1, {r4, r5, r9, ip, sp, lr}
 801167c:	08015062 	stmdaeq	r1, {r1, r5, r6, ip, lr}

08011680 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)>:
 8011680:	b513      	push	{r0, r1, r4, lr}
 8011682:	6804      	ldr	r4, [r0, #0]
 8011684:	b914      	cbnz	r4, 801168c <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)+0xc>
 8011686:	601c      	str	r4, [r3, #0]
 8011688:	b002      	add	sp, #8
 801168a:	bd10      	pop	{r4, pc}
 801168c:	9300      	str	r3, [sp, #0]
 801168e:	4613      	mov	r3, r2
 8011690:	460a      	mov	r2, r1
 8011692:	2100      	movs	r1, #0
 8011694:	f7ff ff5c 	bl	8011550 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)>
 8011698:	e7f6      	b.n	8011688 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)+0x8>

0801169a <DisplayUdfParams::Set(DisplayUdf*)>:
 801169a:	6843      	ldr	r3, [r0, #4]
 801169c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80116a0:	009a      	lsls	r2, r3, #2
 80116a2:	4604      	mov	r4, r0
 80116a4:	460e      	mov	r6, r1
 80116a6:	d506      	bpl.n	80116b6 <DisplayUdfParams::Set(DisplayUdf*)+0x1c>
 80116a8:	6988      	ldr	r0, [r1, #24]
 80116aa:	b120      	cbz	r0, 80116b6 <DisplayUdfParams::Set(DisplayUdf*)+0x1c>
 80116ac:	6803      	ldr	r3, [r0, #0]
 80116ae:	f894 1025 	ldrb.w	r1, [r4, #37]	; 0x25
 80116b2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80116b4:	4798      	blx	r3
 80116b6:	6863      	ldr	r3, [r4, #4]
 80116b8:	69b0      	ldr	r0, [r6, #24]
 80116ba:	00db      	lsls	r3, r3, #3
 80116bc:	bf41      	itttt	mi
 80116be:	f64e 2260 	movwmi	r2, #60000	; 0xea60
 80116c2:	f894 3024 	ldrbmi.w	r3, [r4, #36]	; 0x24
 80116c6:	4353      	mulmi	r3, r2
 80116c8:	6173      	strmi	r3, [r6, #20]
 80116ca:	6861      	ldr	r1, [r4, #4]
 80116cc:	f3c1 7180 	ubfx	r1, r1, #30, #1
 80116d0:	b110      	cbz	r0, 80116d8 <DisplayUdfParams::Set(DisplayUdf*)+0x3e>
 80116d2:	6803      	ldr	r3, [r0, #0]
 80116d4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80116d6:	4798      	blx	r3
 80116d8:	2500      	movs	r5, #0
 80116da:	2701      	movs	r7, #1
 80116dc:	f104 0808 	add.w	r8, r4, #8
 80116e0:	6862      	ldr	r2, [r4, #4]
 80116e2:	fa07 f305 	lsl.w	r3, r7, r5
 80116e6:	4393      	bics	r3, r2
 80116e8:	d105      	bne.n	80116f6 <DisplayUdfParams::Set(DisplayUdf*)+0x5c>
 80116ea:	462a      	mov	r2, r5
 80116ec:	4630      	mov	r0, r6
 80116ee:	f818 1005 	ldrb.w	r1, [r8, r5]
 80116f2:	f7ff fd0c 	bl	801110e <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 80116f6:	3501      	adds	r5, #1
 80116f8:	2d14      	cmp	r5, #20
 80116fa:	d1f1      	bne.n	80116e0 <DisplayUdfParams::Set(DisplayUdf*)+0x46>
 80116fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08011700 <DisplayUdfParams::Dump()>:
 8011700:	4770      	bx	lr
	...

08011704 <NetworkDisplay::ShowEmacStart()>:
 8011704:	4b01      	ldr	r3, [pc, #4]	; (801170c <NetworkDisplay::ShowEmacStart()+0x8>)
 8011706:	6818      	ldr	r0, [r3, #0]
 8011708:	f7ff bd1a 	b.w	8011140 <DisplayUdf::ShowEmacStart()>
 801170c:	2001a858 	andcs	sl, r1, r8, asr r8

08011710 <NetworkDisplay::ShowIp()>:
 8011710:	4b01      	ldr	r3, [pc, #4]	; (8011718 <NetworkDisplay::ShowIp()+0x8>)
 8011712:	6818      	ldr	r0, [r3, #0]
 8011714:	f7ff bd24 	b.w	8011160 <DisplayUdf::ShowIpAddress()>
 8011718:	2001a858 	andcs	sl, r1, r8, asr r8

0801171c <NetworkDisplay::ShowNetMask()>:
 801171c:	4b01      	ldr	r3, [pc, #4]	; (8011724 <NetworkDisplay::ShowNetMask()+0x8>)
 801171e:	6818      	ldr	r0, [r3, #0]
 8011720:	f7ff bd52 	b.w	80111c8 <DisplayUdf::ShowNetmask()>
 8011724:	2001a858 	andcs	sl, r1, r8, asr r8

08011728 <NetworkDisplay::ShowGatewayIp()>:
 8011728:	4b01      	ldr	r3, [pc, #4]	; (8011730 <NetworkDisplay::ShowGatewayIp()+0x8>)
 801172a:	6818      	ldr	r0, [r3, #0]
 801172c:	f7ff bd6a 	b.w	8011204 <DisplayUdf::ShowGatewayIp()>
 8011730:	2001a858 	andcs	sl, r1, r8, asr r8

08011734 <NetworkDisplay::ShowHostName()>:
 8011734:	4b01      	ldr	r3, [pc, #4]	; (801173c <NetworkDisplay::ShowHostName()+0x8>)
 8011736:	6818      	ldr	r0, [r3, #0]
 8011738:	f7ff bd84 	b.w	8011244 <DisplayUdf::ShowHostName()>
 801173c:	2001a858 	andcs	sl, r1, r8, asr r8

08011740 <NetworkDisplay::ShowShutdown()>:
 8011740:	4b01      	ldr	r3, [pc, #4]	; (8011748 <NetworkDisplay::ShowShutdown()+0x8>)
 8011742:	6818      	ldr	r0, [r3, #0]
 8011744:	f7ff be0c 	b.w	8011360 <DisplayUdf::ShowShutdown()>
 8011748:	2001a858 	andcs	sl, r1, r8, asr r8

0801174c <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>:
 801174c:	4b01      	ldr	r3, [pc, #4]	; (8011754 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)+0x8>)
 801174e:	6818      	ldr	r0, [r3, #0]
 8011750:	f7ff bdce 	b.w	80112f0 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)>
 8011754:	2001a858 	andcs	sl, r1, r8, asr r8

08011758 <properties::convert_json_file(char*, unsigned short, bool)>:
 8011758:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801175c:	4603      	mov	r3, r0
 801175e:	7800      	ldrb	r0, [r0, #0]
 8011760:	287b      	cmp	r0, #123	; 0x7b
 8011762:	f040 80a2 	bne.w	80118aa <properties::convert_json_file(char*, unsigned short, bool)+0x152>
 8011766:	b17a      	cbz	r2, 8011788 <properties::convert_json_file(char*, unsigned short, bool)+0x30>
 8011768:	2401      	movs	r4, #1
 801176a:	461e      	mov	r6, r3
 801176c:	4620      	mov	r0, r4
 801176e:	2a00      	cmp	r2, #0
 8011770:	bf0c      	ite	eq
 8011772:	f04f 0c0a 	moveq.w	ip, #10
 8011776:	f04f 0c00 	movne.w	ip, #0
 801177a:	273d      	movs	r7, #61	; 0x3d
 801177c:	42a1      	cmp	r1, r4
 801177e:	d850      	bhi.n	8011822 <properties::convert_json_file(char*, unsigned short, bool)+0xca>
 8011780:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011784:	463c      	mov	r4, r7
 8011786:	e7f2      	b.n	801176e <properties::convert_json_file(char*, unsigned short, bool)+0x16>
 8011788:	2023      	movs	r0, #35	; 0x23
 801178a:	f803 0b01 	strb.w	r0, [r3], #1
 801178e:	461c      	mov	r4, r3
 8011790:	2701      	movs	r7, #1
 8011792:	42b9      	cmp	r1, r7
 8011794:	d811      	bhi.n	80117ba <properties::convert_json_file(char*, unsigned short, bool)+0x62>
 8011796:	2001      	movs	r0, #1
 8011798:	461e      	mov	r6, r3
 801179a:	230a      	movs	r3, #10
 801179c:	4625      	mov	r5, r4
 801179e:	f806 3b01 	strb.w	r3, [r6], #1
 80117a2:	3001      	adds	r0, #1
 80117a4:	462b      	mov	r3, r5
 80117a6:	781c      	ldrb	r4, [r3, #0]
 80117a8:	3501      	adds	r5, #1
 80117aa:	2c7b      	cmp	r4, #123	; 0x7b
 80117ac:	d0ea      	beq.n	8011784 <properties::convert_json_file(char*, unsigned short, bool)+0x2c>
 80117ae:	42b9      	cmp	r1, r7
 80117b0:	f107 0401 	add.w	r4, r7, #1
 80117b4:	d9db      	bls.n	801176e <properties::convert_json_file(char*, unsigned short, bool)+0x16>
 80117b6:	4627      	mov	r7, r4
 80117b8:	e7f4      	b.n	80117a4 <properties::convert_json_file(char*, unsigned short, bool)+0x4c>
 80117ba:	f814 0b01 	ldrb.w	r0, [r4], #1
 80117be:	2822      	cmp	r0, #34	; 0x22
 80117c0:	d119      	bne.n	80117f6 <properties::convert_json_file(char*, unsigned short, bool)+0x9e>
 80117c2:	46a4      	mov	ip, r4
 80117c4:	461d      	mov	r5, r3
 80117c6:	2601      	movs	r6, #1
 80117c8:	f89c e000 	ldrb.w	lr, [ip]
 80117cc:	4664      	mov	r4, ip
 80117ce:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 80117d2:	462b      	mov	r3, r5
 80117d4:	4630      	mov	r0, r6
 80117d6:	f10c 0c01 	add.w	ip, ip, #1
 80117da:	f105 0501 	add.w	r5, r5, #1
 80117de:	f106 0601 	add.w	r6, r6, #1
 80117e2:	d0d9      	beq.n	8011798 <properties::convert_json_file(char*, unsigned short, bool)+0x40>
 80117e4:	3701      	adds	r7, #1
 80117e6:	42b9      	cmp	r1, r7
 80117e8:	4664      	mov	r4, ip
 80117ea:	f805 ec01 	strb.w	lr, [r5, #-1]
 80117ee:	d8eb      	bhi.n	80117c8 <properties::convert_json_file(char*, unsigned short, bool)+0x70>
 80117f0:	4630      	mov	r0, r6
 80117f2:	462b      	mov	r3, r5
 80117f4:	e7d0      	b.n	8011798 <properties::convert_json_file(char*, unsigned short, bool)+0x40>
 80117f6:	3701      	adds	r7, #1
 80117f8:	e7cb      	b.n	8011792 <properties::convert_json_file(char*, unsigned short, bool)+0x3a>
 80117fa:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 80117fe:	d110      	bne.n	8011822 <properties::convert_json_file(char*, unsigned short, bool)+0xca>
 8011800:	eba0 0803 	sub.w	r8, r0, r3
 8011804:	461a      	mov	r2, r3
 8011806:	eb08 0003 	add.w	r0, r8, r3
 801180a:	f813 eb01 	ldrb.w	lr, [r3], #1
 801180e:	1c65      	adds	r5, r4, #1
 8011810:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 8011814:	d04c      	beq.n	80118b0 <properties::convert_json_file(char*, unsigned short, bool)+0x158>
 8011816:	42a1      	cmp	r1, r4
 8011818:	d911      	bls.n	801183e <properties::convert_json_file(char*, unsigned short, bool)+0xe6>
 801181a:	462c      	mov	r4, r5
 801181c:	f806 eb01 	strb.w	lr, [r6], #1
 8011820:	e7f0      	b.n	8011804 <properties::convert_json_file(char*, unsigned short, bool)+0xac>
 8011822:	42a1      	cmp	r1, r4
 8011824:	461d      	mov	r5, r3
 8011826:	f893 e000 	ldrb.w	lr, [r3]
 801182a:	f104 0401 	add.w	r4, r4, #1
 801182e:	f103 0301 	add.w	r3, r3, #1
 8011832:	d8e2      	bhi.n	80117fa <properties::convert_json_file(char*, unsigned short, bool)+0xa2>
 8011834:	462b      	mov	r3, r5
 8011836:	e7e3      	b.n	8011800 <properties::convert_json_file(char*, unsigned short, bool)+0xa8>
 8011838:	f1be 0f3a 	cmp.w	lr, #58	; 0x3a
 801183c:	d009      	beq.n	8011852 <properties::convert_json_file(char*, unsigned short, bool)+0xfa>
 801183e:	42a9      	cmp	r1, r5
 8011840:	4614      	mov	r4, r2
 8011842:	f892 e000 	ldrb.w	lr, [r2]
 8011846:	f105 0501 	add.w	r5, r5, #1
 801184a:	f102 0201 	add.w	r2, r2, #1
 801184e:	d8f3      	bhi.n	8011838 <properties::convert_json_file(char*, unsigned short, bool)+0xe0>
 8011850:	4622      	mov	r2, r4
 8011852:	7814      	ldrb	r4, [r2, #0]
 8011854:	4696      	mov	lr, r2
 8011856:	2c2f      	cmp	r4, #47	; 0x2f
 8011858:	462b      	mov	r3, r5
 801185a:	f102 0201 	add.w	r2, r2, #1
 801185e:	f105 0501 	add.w	r5, r5, #1
 8011862:	d81a      	bhi.n	801189a <properties::convert_json_file(char*, unsigned short, bool)+0x142>
 8011864:	4299      	cmp	r1, r3
 8011866:	d8f4      	bhi.n	8011852 <properties::convert_json_file(char*, unsigned short, bool)+0xfa>
 8011868:	2c22      	cmp	r4, #34	; 0x22
 801186a:	bf08      	it	eq
 801186c:	4696      	moveq	lr, r2
 801186e:	4673      	mov	r3, lr
 8011870:	f813 2b01 	ldrb.w	r2, [r3], #1
 8011874:	1c6c      	adds	r4, r5, #1
 8011876:	2a22      	cmp	r2, #34	; 0x22
 8011878:	d011      	beq.n	801189e <properties::convert_json_file(char*, unsigned short, bool)+0x146>
 801187a:	2a2c      	cmp	r2, #44	; 0x2c
 801187c:	d00f      	beq.n	801189e <properties::convert_json_file(char*, unsigned short, bool)+0x146>
 801187e:	2a7d      	cmp	r2, #125	; 0x7d
 8011880:	d00d      	beq.n	801189e <properties::convert_json_file(char*, unsigned short, bool)+0x146>
 8011882:	42a9      	cmp	r1, r5
 8011884:	d90f      	bls.n	80118a6 <properties::convert_json_file(char*, unsigned short, bool)+0x14e>
 8011886:	f1a2 0520 	sub.w	r5, r2, #32
 801188a:	2d5a      	cmp	r5, #90	; 0x5a
 801188c:	d803      	bhi.n	8011896 <properties::convert_json_file(char*, unsigned short, bool)+0x13e>
 801188e:	469e      	mov	lr, r3
 8011890:	f806 2b01 	strb.w	r2, [r6], #1
 8011894:	3001      	adds	r0, #1
 8011896:	4625      	mov	r5, r4
 8011898:	e7e9      	b.n	801186e <properties::convert_json_file(char*, unsigned short, bool)+0x116>
 801189a:	461d      	mov	r5, r3
 801189c:	e7e7      	b.n	801186e <properties::convert_json_file(char*, unsigned short, bool)+0x116>
 801189e:	462c      	mov	r4, r5
 80118a0:	f806 cb01 	strb.w	ip, [r6], #1
 80118a4:	3001      	adds	r0, #1
 80118a6:	3401      	adds	r4, #1
 80118a8:	e768      	b.n	801177c <properties::convert_json_file(char*, unsigned short, bool)+0x24>
 80118aa:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80118ae:	e767      	b.n	8011780 <properties::convert_json_file(char*, unsigned short, bool)+0x28>
 80118b0:	4625      	mov	r5, r4
 80118b2:	f806 7b01 	strb.w	r7, [r6], #1
 80118b6:	3001      	adds	r0, #1
 80118b8:	e7c1      	b.n	801183e <properties::convert_json_file(char*, unsigned short, bool)+0xe6>
	...

080118bc <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>:
 80118bc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80118c0:	6002      	str	r2, [r0, #0]
 80118c2:	4614      	mov	r4, r2
 80118c4:	2200      	movs	r2, #0
 80118c6:	80c2      	strh	r2, [r0, #6]
 80118c8:	4a1c      	ldr	r2, [pc, #112]	; (801193c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x80>)
 80118ca:	4606      	mov	r6, r0
 80118cc:	7812      	ldrb	r2, [r2, #0]
 80118ce:	8083      	strh	r3, [r0, #4]
 80118d0:	f002 0201 	and.w	r2, r2, #1
 80118d4:	7202      	strb	r2, [r0, #8]
 80118d6:	4608      	mov	r0, r1
 80118d8:	4605      	mov	r5, r0
 80118da:	782f      	ldrb	r7, [r5, #0]
 80118dc:	3001      	adds	r0, #1
 80118de:	2f00      	cmp	r7, #0
 80118e0:	d1fa      	bne.n	80118d8 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x1c>
 80118e2:	1a6d      	subs	r5, r5, r1
 80118e4:	b29b      	uxth	r3, r3
 80118e6:	b1d2      	cbz	r2, 801191e <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x62>
 80118e8:	1d2f      	adds	r7, r5, #4
 80118ea:	429f      	cmp	r7, r3
 80118ec:	d814      	bhi.n	8011918 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 80118ee:	f04f 087b 	mov.w	r8, #123	; 0x7b
 80118f2:	f04f 0922 	mov.w	r9, #34	; 0x22
 80118f6:	462a      	mov	r2, r5
 80118f8:	f884 8000 	strb.w	r8, [r4]
 80118fc:	f884 9001 	strb.w	r9, [r4, #1]
 8011900:	1ca0      	adds	r0, r4, #2
 8011902:	f000 fee8 	bl	80126d6 <memmove>
 8011906:	223a      	movs	r2, #58	; 0x3a
 8011908:	1963      	adds	r3, r4, r5
 801190a:	3505      	adds	r5, #5
 801190c:	f883 9002 	strb.w	r9, [r3, #2]
 8011910:	70da      	strb	r2, [r3, #3]
 8011912:	80f5      	strh	r5, [r6, #6]
 8011914:	f804 8007 	strb.w	r8, [r4, r7]
 8011918:	4630      	mov	r0, r6
 801191a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801191e:	1caf      	adds	r7, r5, #2
 8011920:	429f      	cmp	r7, r3
 8011922:	d8f9      	bhi.n	8011918 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 8011924:	4620      	mov	r0, r4
 8011926:	2323      	movs	r3, #35	; 0x23
 8011928:	462a      	mov	r2, r5
 801192a:	f800 3b01 	strb.w	r3, [r0], #1
 801192e:	f000 fed2 	bl	80126d6 <memmove>
 8011932:	230a      	movs	r3, #10
 8011934:	442c      	add	r4, r5
 8011936:	7063      	strb	r3, [r4, #1]
 8011938:	80f7      	strh	r7, [r6, #6]
 801193a:	e7ed      	b.n	8011918 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 801193c:	2001a85c 	andcs	sl, r1, ip, asr r8

08011940 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>:
 8011940:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011942:	469c      	mov	ip, r3
 8011944:	8885      	ldrh	r5, [r0, #4]
 8011946:	88c3      	ldrh	r3, [r0, #6]
 8011948:	b085      	sub	sp, #20
 801194a:	42ab      	cmp	r3, r5
 801194c:	d302      	bcc.n	8011954 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x14>
 801194e:	2000      	movs	r0, #0
 8011950:	b005      	add	sp, #20
 8011952:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011954:	4604      	mov	r4, r0
 8011956:	6800      	ldr	r0, [r0, #0]
 8011958:	1aed      	subs	r5, r5, r3
 801195a:	4418      	add	r0, r3
 801195c:	b2d6      	uxtb	r6, r2
 801195e:	f3c2 2707 	ubfx	r7, r2, #8, #8
 8011962:	f3c2 4307 	ubfx	r3, r2, #16, #8
 8011966:	f894 e008 	ldrb.w	lr, [r4, #8]
 801196a:	0e12      	lsrs	r2, r2, #24
 801196c:	f1bc 0f00 	cmp.w	ip, #0
 8011970:	d109      	bne.n	8011986 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x46>
 8011972:	f1be 0f00 	cmp.w	lr, #0
 8011976:	d109      	bne.n	801198c <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x4c>
 8011978:	e9cd 3202 	strd	r3, r2, [sp, #8]
 801197c:	e9cd 6700 	strd	r6, r7, [sp]
 8011980:	460b      	mov	r3, r1
 8011982:	4a0e      	ldr	r2, [pc, #56]	; (80119bc <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x7c>)
 8011984:	e008      	b.n	8011998 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x58>
 8011986:	f1be 0f00 	cmp.w	lr, #0
 801198a:	d00f      	beq.n	80119ac <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x6c>
 801198c:	e9cd 3202 	strd	r3, r2, [sp, #8]
 8011990:	460b      	mov	r3, r1
 8011992:	e9cd 6700 	strd	r6, r7, [sp]
 8011996:	4a0a      	ldr	r2, [pc, #40]	; (80119c0 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x80>)
 8011998:	4629      	mov	r1, r5
 801199a:	f7f7 fe11 	bl	80095c0 <snprintf>
 801199e:	4285      	cmp	r5, r0
 80119a0:	dbd5      	blt.n	801194e <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0xe>
 80119a2:	88e3      	ldrh	r3, [r4, #6]
 80119a4:	4403      	add	r3, r0
 80119a6:	80e3      	strh	r3, [r4, #6]
 80119a8:	2001      	movs	r0, #1
 80119aa:	e7d1      	b.n	8011950 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x10>
 80119ac:	e9cd 3202 	strd	r3, r2, [sp, #8]
 80119b0:	e9cd 6700 	strd	r6, r7, [sp]
 80119b4:	460b      	mov	r3, r1
 80119b6:	4a03      	ldr	r2, [pc, #12]	; (80119c4 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x84>)
 80119b8:	e7ee      	b.n	8011998 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x58>
 80119ba:	bf00      	nop
 80119bc:	080173a1 	stmdaeq	r1, {r0, r5, r7, r8, r9, ip, sp, lr}
 80119c0:	0801738d 	stmdaeq	r1, {r0, r2, r3, r7, r8, r9, ip, sp, lr}
 80119c4:	080173a2 	stmdaeq	r1, {r1, r5, r7, r8, r9, ip, sp, lr}

080119c8 <PropertiesBuilder::AddComment(char const*)>:
 80119c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80119ca:	7a06      	ldrb	r6, [r0, #8]
 80119cc:	b996      	cbnz	r6, 80119f4 <PropertiesBuilder::AddComment(char const*)+0x2c>
 80119ce:	4604      	mov	r4, r0
 80119d0:	88c0      	ldrh	r0, [r0, #6]
 80119d2:	88a5      	ldrh	r5, [r4, #4]
 80119d4:	42a8      	cmp	r0, r5
 80119d6:	d20d      	bcs.n	80119f4 <PropertiesBuilder::AddComment(char const*)+0x2c>
 80119d8:	6827      	ldr	r7, [r4, #0]
 80119da:	1a2d      	subs	r5, r5, r0
 80119dc:	460b      	mov	r3, r1
 80119de:	4a06      	ldr	r2, [pc, #24]	; (80119f8 <PropertiesBuilder::AddComment(char const*)+0x30>)
 80119e0:	4629      	mov	r1, r5
 80119e2:	4438      	add	r0, r7
 80119e4:	f7f7 fdec 	bl	80095c0 <snprintf>
 80119e8:	4285      	cmp	r5, r0
 80119ea:	bfa1      	itttt	ge
 80119ec:	2601      	movge	r6, #1
 80119ee:	88e3      	ldrhge	r3, [r4, #6]
 80119f0:	18c0      	addge	r0, r0, r3
 80119f2:	80e0      	strhge	r0, [r4, #6]
 80119f4:	4630      	mov	r0, r6
 80119f6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80119f8:	080173b2 	stmdaeq	r1, {r1, r4, r5, r7, r8, r9, ip, sp, lr}

080119fc <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>:
 80119fc:	e9c0 1200 	strd	r1, r2, [r0]
 8011a00:	4770      	bx	lr

08011a02 <ReadConfigFile::~ReadConfigFile()>:
 8011a02:	4770      	bx	lr

08011a04 <ReadConfigFile::Read(char const*, unsigned int)>:
 8011a04:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011a08:	4606      	mov	r6, r0
 8011a0a:	460d      	mov	r5, r1
 8011a0c:	4614      	mov	r4, r2
 8011a0e:	f04f 0800 	mov.w	r8, #0
 8011a12:	b0a0      	sub	sp, #128	; 0x80
 8011a14:	b33c      	cbz	r4, 8011a66 <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 8011a16:	466b      	mov	r3, sp
 8011a18:	462a      	mov	r2, r5
 8011a1a:	4619      	mov	r1, r3
 8011a1c:	e007      	b.n	8011a2e <ReadConfigFile::Read(char const*, unsigned int)+0x2a>
 8011a1e:	f803 7b01 	strb.w	r7, [r3], #1
 8011a22:	1a58      	subs	r0, r3, r1
 8011a24:	287f      	cmp	r0, #127	; 0x7f
 8011a26:	4615      	mov	r5, r2
 8011a28:	dc1d      	bgt.n	8011a66 <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 8011a2a:	3c01      	subs	r4, #1
 8011a2c:	d00f      	beq.n	8011a4e <ReadConfigFile::Read(char const*, unsigned int)+0x4a>
 8011a2e:	7817      	ldrb	r7, [r2, #0]
 8011a30:	4610      	mov	r0, r2
 8011a32:	2f0d      	cmp	r7, #13
 8011a34:	f102 0201 	add.w	r2, r2, #1
 8011a38:	d001      	beq.n	8011a3e <ReadConfigFile::Read(char const*, unsigned int)+0x3a>
 8011a3a:	2f0a      	cmp	r7, #10
 8011a3c:	d1ef      	bne.n	8011a1e <ReadConfigFile::Read(char const*, unsigned int)+0x1a>
 8011a3e:	4605      	mov	r5, r0
 8011a40:	b12c      	cbz	r4, 8011a4e <ReadConfigFile::Read(char const*, unsigned int)+0x4a>
 8011a42:	f810 2b01 	ldrb.w	r2, [r0], #1
 8011a46:	2a0d      	cmp	r2, #13
 8011a48:	d00b      	beq.n	8011a62 <ReadConfigFile::Read(char const*, unsigned int)+0x5e>
 8011a4a:	2a0a      	cmp	r2, #10
 8011a4c:	d009      	beq.n	8011a62 <ReadConfigFile::Read(char const*, unsigned int)+0x5e>
 8011a4e:	f89d 2000 	ldrb.w	r2, [sp]
 8011a52:	2a60      	cmp	r2, #96	; 0x60
 8011a54:	d9de      	bls.n	8011a14 <ReadConfigFile::Read(char const*, unsigned int)+0x10>
 8011a56:	f883 8000 	strb.w	r8, [r3]
 8011a5a:	e9d6 3000 	ldrd	r3, r0, [r6]
 8011a5e:	4798      	blx	r3
 8011a60:	e7d8      	b.n	8011a14 <ReadConfigFile::Read(char const*, unsigned int)+0x10>
 8011a62:	3c01      	subs	r4, #1
 8011a64:	e7eb      	b.n	8011a3e <ReadConfigFile::Read(char const*, unsigned int)+0x3a>
 8011a66:	b020      	add	sp, #128	; 0x80
 8011a68:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08011a6c <Sscan::Char(char const*, char const*, char*, unsigned int&)>:
 8011a6c:	b570      	push	{r4, r5, r6, lr}
 8011a6e:	4615      	mov	r5, r2
 8011a70:	461c      	mov	r4, r3
 8011a72:	f000 f91c 	bl	8011cae <Sscan::checkName(char const*, char const*)>
 8011a76:	b180      	cbz	r0, 8011a9a <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2e>
 8011a78:	2100      	movs	r1, #0
 8011a7a:	5c43      	ldrb	r3, [r0, r1]
 8011a7c:	6826      	ldr	r6, [r4, #0]
 8011a7e:	b28a      	uxth	r2, r1
 8011a80:	b143      	cbz	r3, 8011a94 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x28>
 8011a82:	42b2      	cmp	r2, r6
 8011a84:	d303      	bcc.n	8011a8e <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x22>
 8011a86:	2b0a      	cmp	r3, #10
 8011a88:	d004      	beq.n	8011a94 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x28>
 8011a8a:	2002      	movs	r0, #2
 8011a8c:	e004      	b.n	8011a98 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2c>
 8011a8e:	546b      	strb	r3, [r5, r1]
 8011a90:	3101      	adds	r1, #1
 8011a92:	e7f2      	b.n	8011a7a <Sscan::Char(char const*, char const*, char*, unsigned int&)+0xe>
 8011a94:	2000      	movs	r0, #0
 8011a96:	6022      	str	r2, [r4, #0]
 8011a98:	bd70      	pop	{r4, r5, r6, pc}
 8011a9a:	2001      	movs	r0, #1
 8011a9c:	e7fc      	b.n	8011a98 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2c>

08011a9e <Sscan::Float(char const*, char const*, float&)>:
 8011a9e:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8011aa2:	4616      	mov	r6, r2
 8011aa4:	f000 f903 	bl	8011cae <Sscan::checkName(char const*, char const*)>
 8011aa8:	2800      	cmp	r0, #0
 8011aaa:	d059      	beq.n	8011b60 <Sscan::Float(char const*, char const*, float&)+0xc2>
 8011aac:	4604      	mov	r4, r0
 8011aae:	7803      	ldrb	r3, [r0, #0]
 8011ab0:	2b2d      	cmp	r3, #45	; 0x2d
 8011ab2:	bf08      	it	eq
 8011ab4:	3401      	addeq	r4, #1
 8011ab6:	7823      	ldrb	r3, [r4, #0]
 8011ab8:	bf0c      	ite	eq
 8011aba:	f04f 0801 	moveq.w	r8, #1
 8011abe:	f04f 0800 	movne.w	r8, #0
 8011ac2:	f013 0fdf 	tst.w	r3, #223	; 0xdf
 8011ac6:	d103      	bne.n	8011ad0 <Sscan::Float(char const*, char const*, float&)+0x32>
 8011ac8:	2702      	movs	r7, #2
 8011aca:	4638      	mov	r0, r7
 8011acc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8011ad0:	2000      	movs	r0, #0
 8011ad2:	220a      	movs	r2, #10
 8011ad4:	7823      	ldrb	r3, [r4, #0]
 8011ad6:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 8011ada:	2909      	cmp	r1, #9
 8011adc:	d8f4      	bhi.n	8011ac8 <Sscan::Float(char const*, char const*, float&)+0x2a>
 8011ade:	fb02 3000 	mla	r0, r2, r0, r3
 8011ae2:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8011ae6:	3830      	subs	r0, #48	; 0x30
 8011ae8:	2b2e      	cmp	r3, #46	; 0x2e
 8011aea:	d002      	beq.n	8011af2 <Sscan::Float(char const*, char const*, float&)+0x54>
 8011aec:	f013 0fdf 	tst.w	r3, #223	; 0xdf
 8011af0:	d1f0      	bne.n	8011ad4 <Sscan::Float(char const*, char const*, float&)+0x36>
 8011af2:	f7f6 f929 	bl	8007d48 <__aeabi_ui2f>
 8011af6:	6030      	str	r0, [r6, #0]
 8011af8:	7823      	ldrb	r3, [r4, #0]
 8011afa:	4605      	mov	r5, r0
 8011afc:	2b2e      	cmp	r3, #46	; 0x2e
 8011afe:	d008      	beq.n	8011b12 <Sscan::Float(char const*, char const*, float&)+0x74>
 8011b00:	f1b8 0f00 	cmp.w	r8, #0
 8011b04:	d101      	bne.n	8011b0a <Sscan::Float(char const*, char const*, float&)+0x6c>
 8011b06:	2700      	movs	r7, #0
 8011b08:	e7df      	b.n	8011aca <Sscan::Float(char const*, char const*, float&)+0x2c>
 8011b0a:	f100 4500 	add.w	r5, r0, #2147483648	; 0x80000000
 8011b0e:	6035      	str	r5, [r6, #0]
 8011b10:	e7f9      	b.n	8011b06 <Sscan::Float(char const*, char const*, float&)+0x68>
 8011b12:	f04f 0901 	mov.w	r9, #1
 8011b16:	2000      	movs	r0, #0
 8011b18:	220a      	movs	r2, #10
 8011b1a:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8011b1e:	f013 07df 	ands.w	r7, r3, #223	; 0xdf
 8011b22:	d111      	bne.n	8011b48 <Sscan::Float(char const*, char const*, float&)+0xaa>
 8011b24:	f7f6 f910 	bl	8007d48 <__aeabi_ui2f>
 8011b28:	4604      	mov	r4, r0
 8011b2a:	4648      	mov	r0, r9
 8011b2c:	f7f6 f90c 	bl	8007d48 <__aeabi_ui2f>
 8011b30:	4601      	mov	r1, r0
 8011b32:	4620      	mov	r0, r4
 8011b34:	f7f6 fc86 	bl	8008444 <__aeabi_fdiv>
 8011b38:	4629      	mov	r1, r5
 8011b3a:	f7f6 f855 	bl	8007be8 <__addsf3>
 8011b3e:	f1b8 0f00 	cmp.w	r8, #0
 8011b42:	d109      	bne.n	8011b58 <Sscan::Float(char const*, char const*, float&)+0xba>
 8011b44:	6030      	str	r0, [r6, #0]
 8011b46:	e7de      	b.n	8011b06 <Sscan::Float(char const*, char const*, float&)+0x68>
 8011b48:	3b30      	subs	r3, #48	; 0x30
 8011b4a:	2b09      	cmp	r3, #9
 8011b4c:	d8bc      	bhi.n	8011ac8 <Sscan::Float(char const*, char const*, float&)+0x2a>
 8011b4e:	fb02 3000 	mla	r0, r2, r0, r3
 8011b52:	fb02 f909 	mul.w	r9, r2, r9
 8011b56:	e7e0      	b.n	8011b1a <Sscan::Float(char const*, char const*, float&)+0x7c>
 8011b58:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
 8011b5c:	6030      	str	r0, [r6, #0]
 8011b5e:	e7b4      	b.n	8011aca <Sscan::Float(char const*, char const*, float&)+0x2c>
 8011b60:	2701      	movs	r7, #1
 8011b62:	e7b2      	b.n	8011aca <Sscan::Float(char const*, char const*, float&)+0x2c>

08011b64 <Sscan::IpAddress(char const*, char const*, unsigned int&)>:
 8011b64:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8011b66:	4615      	mov	r5, r2
 8011b68:	f000 f8a1 	bl	8011cae <Sscan::checkName(char const*, char const*)>
 8011b6c:	bb58      	cbnz	r0, 8011bc6 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x62>
 8011b6e:	2001      	movs	r0, #1
 8011b70:	e027      	b.n	8011bc2 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5e>
 8011b72:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 8011b76:	2b09      	cmp	r3, #9
 8011b78:	d822      	bhi.n	8011bc0 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 8011b7a:	4603      	mov	r3, r0
 8011b7c:	fb0c 2101 	mla	r1, ip, r1, r2
 8011b80:	3930      	subs	r1, #48	; 0x30
 8011b82:	4618      	mov	r0, r3
 8011b84:	f810 2b01 	ldrb.w	r2, [r0], #1
 8011b88:	2a2e      	cmp	r2, #46	; 0x2e
 8011b8a:	d115      	bne.n	8011bb8 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x54>
 8011b8c:	29ff      	cmp	r1, #255	; 0xff
 8011b8e:	d817      	bhi.n	8011bc0 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 8011b90:	3401      	adds	r4, #1
 8011b92:	2c03      	cmp	r4, #3
 8011b94:	f806 1b01 	strb.w	r1, [r6], #1
 8011b98:	d119      	bne.n	8011bce <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x6a>
 8011b9a:	2400      	movs	r4, #0
 8011b9c:	260a      	movs	r6, #10
 8011b9e:	1d1a      	adds	r2, r3, #4
 8011ba0:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8011ba4:	f011 00df 	ands.w	r0, r1, #223	; 0xdf
 8011ba8:	d115      	bne.n	8011bd6 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x72>
 8011baa:	2cff      	cmp	r4, #255	; 0xff
 8011bac:	d808      	bhi.n	8011bc0 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 8011bae:	f88d 4007 	strb.w	r4, [sp, #7]
 8011bb2:	9b01      	ldr	r3, [sp, #4]
 8011bb4:	602b      	str	r3, [r5, #0]
 8011bb6:	e004      	b.n	8011bc2 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5e>
 8011bb8:	2a00      	cmp	r2, #0
 8011bba:	d0e7      	beq.n	8011b8c <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 8011bbc:	42b8      	cmp	r0, r7
 8011bbe:	d1d8      	bne.n	8011b72 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0xe>
 8011bc0:	2002      	movs	r0, #2
 8011bc2:	b003      	add	sp, #12
 8011bc4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011bc6:	2400      	movs	r4, #0
 8011bc8:	f04f 0c0a 	mov.w	ip, #10
 8011bcc:	ae01      	add	r6, sp, #4
 8011bce:	4603      	mov	r3, r0
 8011bd0:	2100      	movs	r1, #0
 8011bd2:	1d07      	adds	r7, r0, #4
 8011bd4:	e7d5      	b.n	8011b82 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x1e>
 8011bd6:	4293      	cmp	r3, r2
 8011bd8:	d0f2      	beq.n	8011bc0 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 8011bda:	3930      	subs	r1, #48	; 0x30
 8011bdc:	2909      	cmp	r1, #9
 8011bde:	d8ef      	bhi.n	8011bc0 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 8011be0:	fb06 1404 	mla	r4, r6, r4, r1
 8011be4:	e7dc      	b.n	8011ba0 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x3c>

08011be6 <Sscan::Uint16(char const*, char const*, unsigned short&)>:
 8011be6:	b538      	push	{r3, r4, r5, lr}
 8011be8:	4615      	mov	r5, r2
 8011bea:	f000 f860 	bl	8011cae <Sscan::checkName(char const*, char const*)>
 8011bee:	b1a0      	cbz	r0, 8011c1a <Sscan::Uint16(char const*, char const*, unsigned short&)+0x34>
 8011bf0:	4604      	mov	r4, r0
 8011bf2:	2100      	movs	r1, #0
 8011bf4:	220a      	movs	r2, #10
 8011bf6:	7823      	ldrb	r3, [r4, #0]
 8011bf8:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
 8011bfc:	2809      	cmp	r0, #9
 8011bfe:	d80e      	bhi.n	8011c1e <Sscan::Uint16(char const*, char const*, unsigned short&)+0x38>
 8011c00:	fb02 3101 	mla	r1, r2, r1, r3
 8011c04:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8011c08:	3930      	subs	r1, #48	; 0x30
 8011c0a:	f013 00df 	ands.w	r0, r3, #223	; 0xdf
 8011c0e:	d1f2      	bne.n	8011bf6 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x10>
 8011c10:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
 8011c14:	d203      	bcs.n	8011c1e <Sscan::Uint16(char const*, char const*, unsigned short&)+0x38>
 8011c16:	8029      	strh	r1, [r5, #0]
 8011c18:	bd38      	pop	{r3, r4, r5, pc}
 8011c1a:	2001      	movs	r0, #1
 8011c1c:	e7fc      	b.n	8011c18 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x32>
 8011c1e:	2002      	movs	r0, #2
 8011c20:	e7fa      	b.n	8011c18 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x32>

08011c22 <Sscan::Uint32(char const*, char const*, unsigned int&)>:
 8011c22:	b570      	push	{r4, r5, r6, lr}
 8011c24:	4615      	mov	r5, r2
 8011c26:	f000 f842 	bl	8011cae <Sscan::checkName(char const*, char const*)>
 8011c2a:	b1f8      	cbz	r0, 8011c6c <Sscan::Uint32(char const*, char const*, unsigned int&)+0x4a>
 8011c2c:	2300      	movs	r3, #0
 8011c2e:	4604      	mov	r4, r0
 8011c30:	461a      	mov	r2, r3
 8011c32:	260a      	movs	r6, #10
 8011c34:	7820      	ldrb	r0, [r4, #0]
 8011c36:	f1a0 0130 	sub.w	r1, r0, #48	; 0x30
 8011c3a:	2909      	cmp	r1, #9
 8011c3c:	d818      	bhi.n	8011c70 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x4e>
 8011c3e:	fba3 3106 	umull	r3, r1, r3, r6
 8011c42:	fb06 1102 	mla	r1, r6, r2, r1
 8011c46:	3b30      	subs	r3, #48	; 0x30
 8011c48:	f141 31ff 	adc.w	r1, r1, #4294967295	; 0xffffffff
 8011c4c:	18c3      	adds	r3, r0, r3
 8011c4e:	f141 0200 	adc.w	r2, r1, #0
 8011c52:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8011c56:	f011 00df 	ands.w	r0, r1, #223	; 0xdf
 8011c5a:	d1eb      	bne.n	8011c34 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x12>
 8011c5c:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8011c60:	4299      	cmp	r1, r3
 8011c62:	eb70 0202 	sbcs.w	r2, r0, r2
 8011c66:	d303      	bcc.n	8011c70 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x4e>
 8011c68:	602b      	str	r3, [r5, #0]
 8011c6a:	bd70      	pop	{r4, r5, r6, pc}
 8011c6c:	2001      	movs	r0, #1
 8011c6e:	e7fc      	b.n	8011c6a <Sscan::Uint32(char const*, char const*, unsigned int&)+0x48>
 8011c70:	2002      	movs	r0, #2
 8011c72:	e7fa      	b.n	8011c6a <Sscan::Uint32(char const*, char const*, unsigned int&)+0x48>

08011c74 <Sscan::Uint8(char const*, char const*, unsigned char&)>:
 8011c74:	b538      	push	{r3, r4, r5, lr}
 8011c76:	4615      	mov	r5, r2
 8011c78:	f000 f819 	bl	8011cae <Sscan::checkName(char const*, char const*)>
 8011c7c:	b198      	cbz	r0, 8011ca6 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x32>
 8011c7e:	4604      	mov	r4, r0
 8011c80:	2100      	movs	r1, #0
 8011c82:	220a      	movs	r2, #10
 8011c84:	7823      	ldrb	r3, [r4, #0]
 8011c86:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
 8011c8a:	2809      	cmp	r0, #9
 8011c8c:	d80d      	bhi.n	8011caa <Sscan::Uint8(char const*, char const*, unsigned char&)+0x36>
 8011c8e:	fb02 3101 	mla	r1, r2, r1, r3
 8011c92:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8011c96:	3930      	subs	r1, #48	; 0x30
 8011c98:	f013 00df 	ands.w	r0, r3, #223	; 0xdf
 8011c9c:	d1f2      	bne.n	8011c84 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x10>
 8011c9e:	29ff      	cmp	r1, #255	; 0xff
 8011ca0:	d803      	bhi.n	8011caa <Sscan::Uint8(char const*, char const*, unsigned char&)+0x36>
 8011ca2:	7029      	strb	r1, [r5, #0]
 8011ca4:	bd38      	pop	{r3, r4, r5, pc}
 8011ca6:	2001      	movs	r0, #1
 8011ca8:	e7fc      	b.n	8011ca4 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>
 8011caa:	2002      	movs	r0, #2
 8011cac:	e7fa      	b.n	8011ca4 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>

08011cae <Sscan::checkName(char const*, char const*)>:
 8011cae:	4603      	mov	r3, r0
 8011cb0:	b510      	push	{r4, lr}
 8011cb2:	3901      	subs	r1, #1
 8011cb4:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 8011cb8:	461c      	mov	r4, r3
 8011cba:	f813 2b01 	ldrb.w	r2, [r3], #1
 8011cbe:	b120      	cbz	r0, 8011cca <Sscan::checkName(char const*, char const*)+0x1c>
 8011cc0:	b10a      	cbz	r2, 8011cc6 <Sscan::checkName(char const*, char const*)+0x18>
 8011cc2:	4290      	cmp	r0, r2
 8011cc4:	d0f6      	beq.n	8011cb4 <Sscan::checkName(char const*, char const*)+0x6>
 8011cc6:	2000      	movs	r0, #0
 8011cc8:	e006      	b.n	8011cd8 <Sscan::checkName(char const*, char const*)+0x2a>
 8011cca:	2a3d      	cmp	r2, #61	; 0x3d
 8011ccc:	d104      	bne.n	8011cd8 <Sscan::checkName(char const*, char const*)+0x2a>
 8011cce:	7860      	ldrb	r0, [r4, #1]
 8011cd0:	f010 00df 	ands.w	r0, r0, #223	; 0xdf
 8011cd4:	d000      	beq.n	8011cd8 <Sscan::checkName(char const*, char const*)+0x2a>
 8011cd6:	1c60      	adds	r0, r4, #1
 8011cd8:	bd10      	pop	{r4, pc}

08011cda <LightSet::GetSlotInfo(unsigned short, lightset::SlotInfo&)>:
 8011cda:	2300      	movs	r3, #0
 8011cdc:	2001      	movs	r0, #1
 8011cde:	7093      	strb	r3, [r2, #2]
 8011ce0:	8010      	strh	r0, [r2, #0]
 8011ce2:	4770      	bx	lr

08011ce4 <Display::PrintInfo() [clone .isra.0]>:
 8011ce4:	b910      	cbnz	r0, 8011cec <Display::PrintInfo() [clone .isra.0]+0x8>
 8011ce6:	4803      	ldr	r0, [pc, #12]	; (8011cf4 <Display::PrintInfo() [clone .isra.0]+0x10>)
 8011ce8:	f000 bd2d 	b.w	8012746 <puts>
 8011cec:	6803      	ldr	r3, [r0, #0]
 8011cee:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8011cf0:	4718      	bx	r3
 8011cf2:	bf00      	nop
 8011cf4:	080174b5 	stmdaeq	r1, {r0, r2, r4, r5, r7, sl, ip, sp, lr}

08011cf8 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>:
 8011cf8:	b513      	push	{r0, r1, r4, lr}
 8011cfa:	4604      	mov	r4, r0
 8011cfc:	0a13      	lsrs	r3, r2, #8
 8011cfe:	7800      	ldrb	r0, [r0, #0]
 8011d00:	f88d 1004 	strb.w	r1, [sp, #4]
 8011d04:	f88d 3005 	strb.w	r3, [sp, #5]
 8011d08:	f88d 2006 	strb.w	r2, [sp, #6]
 8011d0c:	f001 fe0e 	bl	801392c <gd32_i2c_set_address>
 8011d10:	6860      	ldr	r0, [r4, #4]
 8011d12:	f001 fe03 	bl	801391c <gd32_i2c_set_baudrate>
 8011d16:	2103      	movs	r1, #3
 8011d18:	a801      	add	r0, sp, #4
 8011d1a:	f001 fe0d 	bl	8013938 <gd32_i2c_write>
 8011d1e:	b002      	add	sp, #8
 8011d20:	bd10      	pop	{r4, pc}

08011d22 <HAL_I2C::IsConnected_(unsigned char, unsigned int)>:
 8011d22:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011d24:	460d      	mov	r5, r1
 8011d26:	4604      	mov	r4, r0
 8011d28:	f001 fe00 	bl	801392c <gd32_i2c_set_address>
 8011d2c:	4628      	mov	r0, r5
 8011d2e:	f001 fdf5 	bl	801391c <gd32_i2c_set_baudrate>
 8011d32:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8011d36:	2b07      	cmp	r3, #7
 8011d38:	d902      	bls.n	8011d40 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x1e>
 8011d3a:	3c50      	subs	r4, #80	; 0x50
 8011d3c:	2c0f      	cmp	r4, #15
 8011d3e:	d809      	bhi.n	8011d54 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x32>
 8011d40:	2101      	movs	r1, #1
 8011d42:	f10d 0007 	add.w	r0, sp, #7
 8011d46:	f001 fe5d 	bl	8013a04 <gd32_i2c_read>
 8011d4a:	fab0 f080 	clz	r0, r0
 8011d4e:	0940      	lsrs	r0, r0, #5
 8011d50:	b003      	add	sp, #12
 8011d52:	bd30      	pop	{r4, r5, pc}
 8011d54:	2100      	movs	r1, #0
 8011d56:	4608      	mov	r0, r1
 8011d58:	f001 fdee 	bl	8013938 <gd32_i2c_write>
 8011d5c:	e7f5      	b.n	8011d4a <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x28>

08011d5e <Display::Detect7Segment()>:
 8011d5e:	b538      	push	{r3, r4, r5, lr}
 8011d60:	68c1      	ldr	r1, [r0, #12]
 8011d62:	4604      	mov	r4, r0
 8011d64:	7a00      	ldrb	r0, [r0, #8]
 8011d66:	f7ff ffdc 	bl	8011d22 <HAL_I2C::IsConnected_(unsigned char, unsigned int)>
 8011d6a:	7460      	strb	r0, [r4, #17]
 8011d6c:	b170      	cbz	r0, 8011d8c <Display::Detect7Segment()+0x2e>
 8011d6e:	2200      	movs	r2, #0
 8011d70:	f104 0508 	add.w	r5, r4, #8
 8011d74:	4611      	mov	r1, r2
 8011d76:	4628      	mov	r0, r5
 8011d78:	f7ff ffbe 	bl	8011cf8 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 8011d7c:	7c63      	ldrb	r3, [r4, #17]
 8011d7e:	b12b      	cbz	r3, 8011d8c <Display::Detect7Segment()+0x2e>
 8011d80:	f24c 02ff 	movw	r2, #49407	; 0xc0ff
 8011d84:	2112      	movs	r1, #18
 8011d86:	4628      	mov	r0, r5
 8011d88:	f7ff ffb6 	bl	8011cf8 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 8011d8c:	bd38      	pop	{r3, r4, r5, pc}

08011d8e <Display::Detect(display::Type)>:
 8011d8e:	2902      	cmp	r1, #2
 8011d90:	b538      	push	{r3, r4, r5, lr}
 8011d92:	4604      	mov	r4, r0
 8011d94:	d014      	beq.n	8011dc0 <Display::Detect(display::Type)+0x32>
 8011d96:	2904      	cmp	r1, #4
 8011d98:	d01b      	beq.n	8011dd2 <Display::Detect(display::Type)+0x44>
 8011d9a:	69a0      	ldr	r0, [r4, #24]
 8011d9c:	b168      	cbz	r0, 8011dba <Display::Detect(display::Type)+0x2c>
 8011d9e:	6803      	ldr	r3, [r0, #0]
 8011da0:	689b      	ldr	r3, [r3, #8]
 8011da2:	4798      	blx	r3
 8011da4:	4603      	mov	r3, r0
 8011da6:	69a0      	ldr	r0, [r4, #24]
 8011da8:	b9ab      	cbnz	r3, 8011dd6 <Display::Detect(display::Type)+0x48>
 8011daa:	b110      	cbz	r0, 8011db2 <Display::Detect(display::Type)+0x24>
 8011dac:	6803      	ldr	r3, [r0, #0]
 8011dae:	685b      	ldr	r3, [r3, #4]
 8011db0:	4798      	blx	r3
 8011db2:	2300      	movs	r3, #0
 8011db4:	61a3      	str	r3, [r4, #24]
 8011db6:	2304      	movs	r3, #4
 8011db8:	6023      	str	r3, [r4, #0]
 8011dba:	2300      	movs	r3, #0
 8011dbc:	6163      	str	r3, [r4, #20]
 8011dbe:	e010      	b.n	8011de2 <Display::Detect(display::Type)+0x54>
 8011dc0:	2018      	movs	r0, #24
 8011dc2:	f000 fbc9 	bl	8012558 <operator new(unsigned int)>
 8011dc6:	4605      	mov	r5, r0
 8011dc8:	2100      	movs	r1, #0
 8011dca:	f000 f89d 	bl	8011f08 <Ssd1306::Ssd1306(TOledPanel)>
 8011dce:	61a5      	str	r5, [r4, #24]
 8011dd0:	e7e3      	b.n	8011d9a <Display::Detect(display::Type)+0xc>
 8011dd2:	6001      	str	r1, [r0, #0]
 8011dd4:	e7e1      	b.n	8011d9a <Display::Detect(display::Type)+0xc>
 8011dd6:	6803      	ldr	r3, [r0, #0]
 8011dd8:	68db      	ldr	r3, [r3, #12]
 8011dda:	4798      	blx	r3
 8011ddc:	69a3      	ldr	r3, [r4, #24]
 8011dde:	2b00      	cmp	r3, #0
 8011de0:	d0eb      	beq.n	8011dba <Display::Detect(display::Type)+0x2c>
 8011de2:	bd38      	pop	{r3, r4, r5, pc}

08011de4 <Display::Display()>:
 8011de4:	2304      	movs	r3, #4
 8011de6:	b510      	push	{r4, lr}
 8011de8:	6003      	str	r3, [r0, #0]
 8011dea:	4b0f      	ldr	r3, [pc, #60]	; (8011e28 <Display::Display()+0x44>)
 8011dec:	4604      	mov	r4, r0
 8011dee:	681b      	ldr	r3, [r3, #0]
 8011df0:	4a0e      	ldr	r2, [pc, #56]	; (8011e2c <Display::Display()+0x48>)
 8011df2:	6043      	str	r3, [r0, #4]
 8011df4:	2321      	movs	r3, #33	; 0x21
 8011df6:	7203      	strb	r3, [r0, #8]
 8011df8:	4b0d      	ldr	r3, [pc, #52]	; (8011e30 <Display::Display()+0x4c>)
 8011dfa:	2102      	movs	r1, #2
 8011dfc:	60c3      	str	r3, [r0, #12]
 8011dfe:	2300      	movs	r3, #0
 8011e00:	e9c0 2305 	strd	r2, r3, [r0, #20]
 8011e04:	8203      	strh	r3, [r0, #16]
 8011e06:	4b0b      	ldr	r3, [pc, #44]	; (8011e34 <Display::Display()+0x50>)
 8011e08:	6018      	str	r0, [r3, #0]
 8011e0a:	f7ff ffc0 	bl	8011d8e <Display::Detect(display::Type)>
 8011e0e:	4620      	mov	r0, r4
 8011e10:	f7ff ffa5 	bl	8011d5e <Display::Detect7Segment()>
 8011e14:	69a3      	ldr	r3, [r4, #24]
 8011e16:	b10b      	cbz	r3, 8011e1c <Display::Display()+0x38>
 8011e18:	f7f6 fd24 	bl	8008864 <display::timeout::gpio_init()>
 8011e1c:	69a0      	ldr	r0, [r4, #24]
 8011e1e:	f7ff ff61 	bl	8011ce4 <Display::PrintInfo() [clone .isra.0]>
 8011e22:	4620      	mov	r0, r4
 8011e24:	bd10      	pop	{r4, pc}
 8011e26:	bf00      	nop
 8011e28:	2001a964 	andcs	sl, r1, r4, ror #18
 8011e2c:	000493e0 	andeq	r9, r4, r0, ror #7
 8011e30:	00061a80 	andeq	r1, r6, r0, lsl #21
 8011e34:	2001a860 	andcs	sl, r1, r0, ror #16

08011e38 <Ssd1306::~Ssd1306()>:
 8011e38:	4770      	bx	lr

08011e3a <Ssd1306::SetCursor(unsigned int)>:
 8011e3a:	4770      	bx	lr

08011e3c <Ssd1306::PrintInfo()>:
 8011e3c:	b410      	push	{r4}
 8011e3e:	4906      	ldr	r1, [pc, #24]	; (8011e58 <Ssd1306::PrintInfo()+0x1c>)
 8011e40:	7c44      	ldrb	r4, [r0, #17]
 8011e42:	7903      	ldrb	r3, [r0, #4]
 8011e44:	7942      	ldrb	r2, [r0, #5]
 8011e46:	4805      	ldr	r0, [pc, #20]	; (8011e5c <Ssd1306::PrintInfo()+0x20>)
 8011e48:	2c00      	cmp	r4, #0
 8011e4a:	bf08      	it	eq
 8011e4c:	4601      	moveq	r1, r0
 8011e4e:	4804      	ldr	r0, [pc, #16]	; (8011e60 <Ssd1306::PrintInfo()+0x24>)
 8011e50:	bc10      	pop	{r4}
 8011e52:	f7f7 bb8d 	b.w	8009570 <printf>
 8011e56:	bf00      	nop
 8011e58:	080174c6 	stmdaeq	r1, {r1, r2, r6, r7, sl, ip, sp, lr}
 8011e5c:	080174cd 	stmdaeq	r1, {r0, r2, r3, r6, r7, sl, ip, sp, lr}
 8011e60:	080174d5 	stmdaeq	r1, {r0, r2, r4, r6, r7, sl, ip, sp, lr}

08011e64 <Ssd1306::~Ssd1306()>:
 8011e64:	b510      	push	{r4, lr}
 8011e66:	4604      	mov	r4, r0
 8011e68:	f000 fb72 	bl	8012550 <operator delete(void*)>
 8011e6c:	4620      	mov	r0, r4
 8011e6e:	bd10      	pop	{r4, pc}

08011e70 <HAL_I2C::Setup()>:
 8011e70:	b510      	push	{r4, lr}
 8011e72:	4604      	mov	r4, r0
 8011e74:	7800      	ldrb	r0, [r0, #0]
 8011e76:	f001 fd59 	bl	801392c <gd32_i2c_set_address>
 8011e7a:	6860      	ldr	r0, [r4, #4]
 8011e7c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011e80:	f001 bd4c 	b.w	801391c <gd32_i2c_set_baudrate>

08011e84 <Ssd1306::PutChar(int)>:
 8011e84:	b510      	push	{r4, lr}
 8011e86:	f1a1 0420 	sub.w	r4, r1, #32
 8011e8a:	2c5f      	cmp	r4, #95	; 0x5f
 8011e8c:	bf88      	it	hi
 8011e8e:	2400      	movhi	r4, #0
 8011e90:	3008      	adds	r0, #8
 8011e92:	f7ff ffed 	bl	8011e70 <HAL_I2C::Setup()>
 8011e96:	4804      	ldr	r0, [pc, #16]	; (8011ea8 <Ssd1306::PutChar(int)+0x24>)
 8011e98:	ebc4 04c4 	rsb	r4, r4, r4, lsl #3
 8011e9c:	4420      	add	r0, r4
 8011e9e:	2107      	movs	r1, #7
 8011ea0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011ea4:	f001 bd48 	b.w	8013938 <gd32_i2c_write>
 8011ea8:	080174e8 	stmdaeq	r1, {r3, r5, r6, r7, sl, ip, sp, lr}

08011eac <Ssd1306::PutString(char const*)>:
 8011eac:	b538      	push	{r3, r4, r5, lr}
 8011eae:	4605      	mov	r5, r0
 8011eb0:	1e4c      	subs	r4, r1, #1
 8011eb2:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8011eb6:	b901      	cbnz	r1, 8011eba <Ssd1306::PutString(char const*)+0xe>
 8011eb8:	bd38      	pop	{r3, r4, r5, pc}
 8011eba:	4628      	mov	r0, r5
 8011ebc:	f7ff ffe2 	bl	8011e84 <Ssd1306::PutChar(int)>
 8011ec0:	e7f7      	b.n	8011eb2 <Ssd1306::PutString(char const*)+0x6>

08011ec2 <Ssd1306::Text(char const*, unsigned int)>:
 8011ec2:	b570      	push	{r4, r5, r6, lr}
 8011ec4:	7903      	ldrb	r3, [r0, #4]
 8011ec6:	4605      	mov	r5, r0
 8011ec8:	460c      	mov	r4, r1
 8011eca:	4293      	cmp	r3, r2
 8011ecc:	bf94      	ite	ls
 8011ece:	18ce      	addls	r6, r1, r3
 8011ed0:	188e      	addhi	r6, r1, r2
 8011ed2:	42b4      	cmp	r4, r6
 8011ed4:	d100      	bne.n	8011ed8 <Ssd1306::Text(char const*, unsigned int)+0x16>
 8011ed6:	bd70      	pop	{r4, r5, r6, pc}
 8011ed8:	4628      	mov	r0, r5
 8011eda:	f814 1b01 	ldrb.w	r1, [r4], #1
 8011ede:	f7ff ffd1 	bl	8011e84 <Ssd1306::PutChar(int)>
 8011ee2:	e7f6      	b.n	8011ed2 <Ssd1306::Text(char const*, unsigned int)+0x10>

08011ee4 <Ssd1306::InitMembers()>:
 8011ee4:	7c03      	ldrb	r3, [r0, #16]
 8011ee6:	b14b      	cbz	r3, 8011efc <Ssd1306::InitMembers()+0x18>
 8011ee8:	3b01      	subs	r3, #1
 8011eea:	2b01      	cmp	r3, #1
 8011eec:	d909      	bls.n	8011f02 <Ssd1306::InitMembers()+0x1e>
 8011eee:	2308      	movs	r3, #8
 8011ef0:	2204      	movs	r2, #4
 8011ef2:	2115      	movs	r1, #21
 8011ef4:	7143      	strb	r3, [r0, #5]
 8011ef6:	7101      	strb	r1, [r0, #4]
 8011ef8:	6142      	str	r2, [r0, #20]
 8011efa:	4770      	bx	lr
 8011efc:	2308      	movs	r3, #8
 8011efe:	461a      	mov	r2, r3
 8011f00:	e7f7      	b.n	8011ef2 <Ssd1306::InitMembers()+0xe>
 8011f02:	2304      	movs	r3, #4
 8011f04:	e7fb      	b.n	8011efe <Ssd1306::InitMembers()+0x1a>
	...

08011f08 <Ssd1306::Ssd1306(TOledPanel)>:
 8011f08:	4a08      	ldr	r2, [pc, #32]	; (8011f2c <Ssd1306::Ssd1306(TOledPanel)+0x24>)
 8011f0a:	b508      	push	{r3, lr}
 8011f0c:	6002      	str	r2, [r0, #0]
 8011f0e:	227f      	movs	r2, #127	; 0x7f
 8011f10:	80c2      	strh	r2, [r0, #6]
 8011f12:	223c      	movs	r2, #60	; 0x3c
 8011f14:	7202      	strb	r2, [r0, #8]
 8011f16:	4a06      	ldr	r2, [pc, #24]	; (8011f30 <Ssd1306::Ssd1306(TOledPanel)+0x28>)
 8011f18:	7401      	strb	r1, [r0, #16]
 8011f1a:	60c2      	str	r2, [r0, #12]
 8011f1c:	2200      	movs	r2, #0
 8011f1e:	7442      	strb	r2, [r0, #17]
 8011f20:	4a04      	ldr	r2, [pc, #16]	; (8011f34 <Ssd1306::Ssd1306(TOledPanel)+0x2c>)
 8011f22:	6010      	str	r0, [r2, #0]
 8011f24:	f7ff ffde 	bl	8011ee4 <Ssd1306::InitMembers()>
 8011f28:	bd08      	pop	{r3, pc}
 8011f2a:	bf00      	nop
 8011f2c:	080177c0 	stmdaeq	r1, {r6, r7, r8, r9, sl, ip, sp, lr}
 8011f30:	00061a80 	andeq	r1, r6, r0, lsl #21
 8011f34:	2001a8ec 	andcs	sl, r1, ip, ror #17

08011f38 <Ssd1306::SendCommand(unsigned char)>:
 8011f38:	2300      	movs	r3, #0
 8011f3a:	b507      	push	{r0, r1, r2, lr}
 8011f3c:	3008      	adds	r0, #8
 8011f3e:	f88d 3004 	strb.w	r3, [sp, #4]
 8011f42:	f88d 1005 	strb.w	r1, [sp, #5]
 8011f46:	f7ff ff93 	bl	8011e70 <HAL_I2C::Setup()>
 8011f4a:	2102      	movs	r1, #2
 8011f4c:	a801      	add	r0, sp, #4
 8011f4e:	f001 fcf3 	bl	8013938 <gd32_i2c_write>
 8011f52:	b003      	add	sp, #12
 8011f54:	f85d fb04 	ldr.w	pc, [sp], #4

08011f58 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>:
 8011f58:	2914      	cmp	r1, #20
 8011f5a:	b570      	push	{r4, r5, r6, lr}
 8011f5c:	4605      	mov	r5, r0
 8011f5e:	4616      	mov	r6, r2
 8011f60:	d81c      	bhi.n	8011f9c <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 8011f62:	7943      	ldrb	r3, [r0, #5]
 8011f64:	4293      	cmp	r3, r2
 8011f66:	d919      	bls.n	8011f9c <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 8011f68:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8011f6c:	7c43      	ldrb	r3, [r0, #17]
 8011f6e:	004c      	lsls	r4, r1, #1
 8011f70:	b2e4      	uxtb	r4, r4
 8011f72:	b10b      	cbz	r3, 8011f78 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x20>
 8011f74:	3404      	adds	r4, #4
 8011f76:	b2e4      	uxtb	r4, r4
 8011f78:	4628      	mov	r0, r5
 8011f7a:	f004 010e 	and.w	r1, r4, #14
 8011f7e:	f7ff ffdb 	bl	8011f38 <Ssd1306::SendCommand(unsigned char)>
 8011f82:	0921      	lsrs	r1, r4, #4
 8011f84:	4628      	mov	r0, r5
 8011f86:	f041 0110 	orr.w	r1, r1, #16
 8011f8a:	f7ff ffd5 	bl	8011f38 <Ssd1306::SendCommand(unsigned char)>
 8011f8e:	4628      	mov	r0, r5
 8011f90:	f046 01b0 	orr.w	r1, r6, #176	; 0xb0
 8011f94:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011f98:	f7ff bfce 	b.w	8011f38 <Ssd1306::SendCommand(unsigned char)>
 8011f9c:	bd70      	pop	{r4, r5, r6, pc}

08011f9e <Ssd1306::TextLine(unsigned char, char const*, unsigned int)>:
 8011f9e:	b570      	push	{r4, r5, r6, lr}
 8011fa0:	461e      	mov	r6, r3
 8011fa2:	7943      	ldrb	r3, [r0, #5]
 8011fa4:	4604      	mov	r4, r0
 8011fa6:	428b      	cmp	r3, r1
 8011fa8:	4615      	mov	r5, r2
 8011faa:	d30b      	bcc.n	8011fc4 <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x26>
 8011fac:	3901      	subs	r1, #1
 8011fae:	b2ca      	uxtb	r2, r1
 8011fb0:	2100      	movs	r1, #0
 8011fb2:	f7ff ffd1 	bl	8011f58 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8011fb6:	4632      	mov	r2, r6
 8011fb8:	4629      	mov	r1, r5
 8011fba:	4620      	mov	r0, r4
 8011fbc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011fc0:	f7ff bf7f 	b.w	8011ec2 <Ssd1306::Text(char const*, unsigned int)>
 8011fc4:	bd70      	pop	{r4, r5, r6, pc}
	...

08011fc8 <Ssd1306::ClearLine(unsigned char)>:
 8011fc8:	b538      	push	{r3, r4, r5, lr}
 8011fca:	7943      	ldrb	r3, [r0, #5]
 8011fcc:	4605      	mov	r5, r0
 8011fce:	428b      	cmp	r3, r1
 8011fd0:	d314      	bcc.n	8011ffc <Ssd1306::ClearLine(unsigned char)+0x34>
 8011fd2:	3901      	subs	r1, #1
 8011fd4:	b2cc      	uxtb	r4, r1
 8011fd6:	4622      	mov	r2, r4
 8011fd8:	2100      	movs	r1, #0
 8011fda:	f7ff ffbd 	bl	8011f58 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8011fde:	f105 0008 	add.w	r0, r5, #8
 8011fe2:	f7ff ff45 	bl	8011e70 <HAL_I2C::Setup()>
 8011fe6:	2181      	movs	r1, #129	; 0x81
 8011fe8:	4805      	ldr	r0, [pc, #20]	; (8012000 <Ssd1306::ClearLine(unsigned char)+0x38>)
 8011fea:	f001 fca5 	bl	8013938 <gd32_i2c_write>
 8011fee:	4622      	mov	r2, r4
 8011ff0:	4628      	mov	r0, r5
 8011ff2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8011ff6:	2100      	movs	r1, #0
 8011ff8:	f7ff bfae 	b.w	8011f58 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8011ffc:	bd38      	pop	{r3, r4, r5, pc}
 8011ffe:	bf00      	nop
 8012000:	2001a864 	andcs	sl, r1, r4, ror #16

08012004 <Ssd1306::SetSleep(bool)>:
 8012004:	b111      	cbz	r1, 801200c <Ssd1306::SetSleep(bool)+0x8>
 8012006:	21ae      	movs	r1, #174	; 0xae
 8012008:	f7ff bf96 	b.w	8011f38 <Ssd1306::SendCommand(unsigned char)>
 801200c:	21af      	movs	r1, #175	; 0xaf
 801200e:	e7fb      	b.n	8012008 <Ssd1306::SetSleep(bool)+0x4>

08012010 <Ssd1306::SetContrast(unsigned char)>:
 8012010:	b538      	push	{r3, r4, r5, lr}
 8012012:	4604      	mov	r4, r0
 8012014:	460d      	mov	r5, r1
 8012016:	7181      	strb	r1, [r0, #6]
 8012018:	2181      	movs	r1, #129	; 0x81
 801201a:	f7ff ff8d 	bl	8011f38 <Ssd1306::SendCommand(unsigned char)>
 801201e:	4629      	mov	r1, r5
 8012020:	4620      	mov	r0, r4
 8012022:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8012026:	f7ff bf87 	b.w	8011f38 <Ssd1306::SendCommand(unsigned char)>

0801202a <Ssd1306::SetFlipVertically(bool)>:
 801202a:	b510      	push	{r4, lr}
 801202c:	4604      	mov	r4, r0
 801202e:	71c1      	strb	r1, [r0, #7]
 8012030:	b141      	cbz	r1, 8012044 <Ssd1306::SetFlipVertically(bool)+0x1a>
 8012032:	21c0      	movs	r1, #192	; 0xc0
 8012034:	f7ff ff80 	bl	8011f38 <Ssd1306::SendCommand(unsigned char)>
 8012038:	21a0      	movs	r1, #160	; 0xa0
 801203a:	4620      	mov	r0, r4
 801203c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012040:	f7ff bf7a 	b.w	8011f38 <Ssd1306::SendCommand(unsigned char)>
 8012044:	21c8      	movs	r1, #200	; 0xc8
 8012046:	f7ff ff77 	bl	8011f38 <Ssd1306::SendCommand(unsigned char)>
 801204a:	21a1      	movs	r1, #161	; 0xa1
 801204c:	e7f5      	b.n	801203a <Ssd1306::SetFlipVertically(bool)+0x10>
	...

08012050 <Ssd1306::CheckSH1106()>:
 8012050:	b530      	push	{r4, r5, lr}
 8012052:	4604      	mov	r4, r0
 8012054:	b087      	sub	sp, #28
 8012056:	2100      	movs	r1, #0
 8012058:	f7ff ff6e 	bl	8011f38 <Ssd1306::SendCommand(unsigned char)>
 801205c:	2190      	movs	r1, #144	; 0x90
 801205e:	4620      	mov	r0, r4
 8012060:	f7ff ff6a 	bl	8011f38 <Ssd1306::SendCommand(unsigned char)>
 8012064:	21b0      	movs	r1, #176	; 0xb0
 8012066:	4620      	mov	r0, r4
 8012068:	f7ff ff66 	bl	8011f38 <Ssd1306::SendCommand(unsigned char)>
 801206c:	4b22      	ldr	r3, [pc, #136]	; (80120f8 <Ssd1306::CheckSH1106()+0xa8>)
 801206e:	f104 0508 	add.w	r5, r4, #8
 8012072:	6818      	ldr	r0, [r3, #0]
 8012074:	791b      	ldrb	r3, [r3, #4]
 8012076:	9002      	str	r0, [sp, #8]
 8012078:	4628      	mov	r0, r5
 801207a:	f88d 300c 	strb.w	r3, [sp, #12]
 801207e:	f7ff fef7 	bl	8011e70 <HAL_I2C::Setup()>
 8012082:	2105      	movs	r1, #5
 8012084:	a802      	add	r0, sp, #8
 8012086:	f001 fc57 	bl	8013938 <gd32_i2c_write>
 801208a:	2100      	movs	r1, #0
 801208c:	4620      	mov	r0, r4
 801208e:	f7ff ff53 	bl	8011f38 <Ssd1306::SendCommand(unsigned char)>
 8012092:	2190      	movs	r1, #144	; 0x90
 8012094:	4620      	mov	r0, r4
 8012096:	f7ff ff4f 	bl	8011f38 <Ssd1306::SendCommand(unsigned char)>
 801209a:	21b0      	movs	r1, #176	; 0xb0
 801209c:	4620      	mov	r0, r4
 801209e:	f7ff ff4b 	bl	8011f38 <Ssd1306::SendCommand(unsigned char)>
 80120a2:	2300      	movs	r3, #0
 80120a4:	9304      	str	r3, [sp, #16]
 80120a6:	f88d 3014 	strb.w	r3, [sp, #20]
 80120aa:	2340      	movs	r3, #64	; 0x40
 80120ac:	4628      	mov	r0, r5
 80120ae:	f88d 3007 	strb.w	r3, [sp, #7]
 80120b2:	f7ff fedd 	bl	8011e70 <HAL_I2C::Setup()>
 80120b6:	2101      	movs	r1, #1
 80120b8:	f10d 0007 	add.w	r0, sp, #7
 80120bc:	f001 fc3c 	bl	8013938 <gd32_i2c_write>
 80120c0:	4628      	mov	r0, r5
 80120c2:	f7ff fed5 	bl	8011e70 <HAL_I2C::Setup()>
 80120c6:	2105      	movs	r1, #5
 80120c8:	a804      	add	r0, sp, #16
 80120ca:	f001 fc9b 	bl	8013a04 <gd32_i2c_read>
 80120ce:	2004      	movs	r0, #4
 80120d0:	aa02      	add	r2, sp, #8
 80120d2:	a904      	add	r1, sp, #16
 80120d4:	3801      	subs	r0, #1
 80120d6:	d201      	bcs.n	80120dc <Ssd1306::CheckSH1106()+0x8c>
 80120d8:	2300      	movs	r3, #0
 80120da:	e006      	b.n	80120ea <Ssd1306::CheckSH1106()+0x9a>
 80120dc:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 80120e0:	f811 5f01 	ldrb.w	r5, [r1, #1]!
 80120e4:	42ab      	cmp	r3, r5
 80120e6:	d0f5      	beq.n	80120d4 <Ssd1306::CheckSH1106()+0x84>
 80120e8:	1b5b      	subs	r3, r3, r5
 80120ea:	fab3 f383 	clz	r3, r3
 80120ee:	095b      	lsrs	r3, r3, #5
 80120f0:	7463      	strb	r3, [r4, #17]
 80120f2:	b007      	add	sp, #28
 80120f4:	bd30      	pop	{r4, r5, pc}
 80120f6:	bf00      	nop
 80120f8:	080174e1 	stmdaeq	r1, {r0, r5, r6, r7, sl, ip, sp, lr}

080120fc <Ssd1306::Cls()>:
 80120fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012100:	4604      	mov	r4, r0
 8012102:	2600      	movs	r6, #0
 8012104:	7c45      	ldrb	r5, [r0, #17]
 8012106:	00ad      	lsls	r5, r5, #2
 8012108:	b2ed      	uxtb	r5, r5
 801210a:	f1a5 077f 	sub.w	r7, r5, #127	; 0x7f
 801210e:	f045 0810 	orr.w	r8, r5, #16
 8012112:	b2ff      	uxtb	r7, r7
 8012114:	6963      	ldr	r3, [r4, #20]
 8012116:	4629      	mov	r1, r5
 8012118:	42b3      	cmp	r3, r6
 801211a:	4620      	mov	r0, r4
 801211c:	d80b      	bhi.n	8012136 <Ssd1306::Cls()+0x3a>
 801211e:	f7ff ff0b 	bl	8011f38 <Ssd1306::SendCommand(unsigned char)>
 8012122:	4641      	mov	r1, r8
 8012124:	4620      	mov	r0, r4
 8012126:	f7ff ff07 	bl	8011f38 <Ssd1306::SendCommand(unsigned char)>
 801212a:	4620      	mov	r0, r4
 801212c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8012130:	21b0      	movs	r1, #176	; 0xb0
 8012132:	f7ff bf01 	b.w	8011f38 <Ssd1306::SendCommand(unsigned char)>
 8012136:	f7ff feff 	bl	8011f38 <Ssd1306::SendCommand(unsigned char)>
 801213a:	4641      	mov	r1, r8
 801213c:	4620      	mov	r0, r4
 801213e:	f7ff fefb 	bl	8011f38 <Ssd1306::SendCommand(unsigned char)>
 8012142:	f066 014f 	orn	r1, r6, #79	; 0x4f
 8012146:	4620      	mov	r0, r4
 8012148:	b2c9      	uxtb	r1, r1
 801214a:	f7ff fef5 	bl	8011f38 <Ssd1306::SendCommand(unsigned char)>
 801214e:	7c23      	ldrb	r3, [r4, #16]
 8012150:	b123      	cbz	r3, 801215c <Ssd1306::Cls()+0x60>
 8012152:	3b01      	subs	r3, #1
 8012154:	2b01      	cmp	r3, #1
 8012156:	d901      	bls.n	801215c <Ssd1306::Cls()+0x60>
 8012158:	3601      	adds	r6, #1
 801215a:	e7db      	b.n	8012114 <Ssd1306::Cls()+0x18>
 801215c:	f104 0008 	add.w	r0, r4, #8
 8012160:	f7ff fe86 	bl	8011e70 <HAL_I2C::Setup()>
 8012164:	4639      	mov	r1, r7
 8012166:	4802      	ldr	r0, [pc, #8]	; (8012170 <Ssd1306::Cls()+0x74>)
 8012168:	f001 fbe6 	bl	8013938 <gd32_i2c_write>
 801216c:	e7f4      	b.n	8012158 <Ssd1306::Cls()+0x5c>
 801216e:	bf00      	nop
 8012170:	2001a864 	andcs	sl, r1, r4, ror #16

08012174 <Ssd1306::Start()>:
 8012174:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8012176:	7a04      	ldrb	r4, [r0, #8]
 8012178:	68c6      	ldr	r6, [r0, #12]
 801217a:	4605      	mov	r5, r0
 801217c:	4620      	mov	r0, r4
 801217e:	f001 fbd5 	bl	801392c <gd32_i2c_set_address>
 8012182:	4630      	mov	r0, r6
 8012184:	f001 fbca 	bl	801391c <gd32_i2c_set_baudrate>
 8012188:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 801218c:	2b07      	cmp	r3, #7
 801218e:	d902      	bls.n	8012196 <Ssd1306::Start()+0x22>
 8012190:	3c50      	subs	r4, #80	; 0x50
 8012192:	2c0f      	cmp	r4, #15
 8012194:	d80f      	bhi.n	80121b6 <Ssd1306::Start()+0x42>
 8012196:	2101      	movs	r1, #1
 8012198:	f10d 0007 	add.w	r0, sp, #7
 801219c:	f001 fc32 	bl	8013a04 <gd32_i2c_read>
 80121a0:	fab0 f480 	clz	r4, r0
 80121a4:	0964      	lsrs	r4, r4, #5
 80121a6:	b35c      	cbz	r4, 8012200 <Ssd1306::Start()+0x8c>
 80121a8:	7c2e      	ldrb	r6, [r5, #16]
 80121aa:	b14e      	cbz	r6, 80121c0 <Ssd1306::Start()+0x4c>
 80121ac:	3e01      	subs	r6, #1
 80121ae:	2e01      	cmp	r6, #1
 80121b0:	d929      	bls.n	8012206 <Ssd1306::Start()+0x92>
 80121b2:	2400      	movs	r4, #0
 80121b4:	e024      	b.n	8012200 <Ssd1306::Start()+0x8c>
 80121b6:	2100      	movs	r1, #0
 80121b8:	4608      	mov	r0, r1
 80121ba:	f001 fbbd 	bl	8013938 <gd32_i2c_write>
 80121be:	e7ef      	b.n	80121a0 <Ssd1306::Start()+0x2c>
 80121c0:	4f16      	ldr	r7, [pc, #88]	; (801221c <Ssd1306::Start()+0xa8>)
 80121c2:	4628      	mov	r0, r5
 80121c4:	f817 1b01 	ldrb.w	r1, [r7], #1
 80121c8:	3601      	adds	r6, #1
 80121ca:	f7ff feb5 	bl	8011f38 <Ssd1306::SendCommand(unsigned char)>
 80121ce:	2e18      	cmp	r6, #24
 80121d0:	d1f7      	bne.n	80121c2 <Ssd1306::Start()+0x4e>
 80121d2:	2300      	movs	r3, #0
 80121d4:	4a12      	ldr	r2, [pc, #72]	; (8012220 <Ssd1306::Start()+0xac>)
 80121d6:	4618      	mov	r0, r3
 80121d8:	4611      	mov	r1, r2
 80121da:	3301      	adds	r3, #1
 80121dc:	2b86      	cmp	r3, #134	; 0x86
 80121de:	f802 0b01 	strb.w	r0, [r2], #1
 80121e2:	d1fa      	bne.n	80121da <Ssd1306::Start()+0x66>
 80121e4:	2340      	movs	r3, #64	; 0x40
 80121e6:	4628      	mov	r0, r5
 80121e8:	700b      	strb	r3, [r1, #0]
 80121ea:	f7ff ff31 	bl	8012050 <Ssd1306::CheckSH1106()>
 80121ee:	4628      	mov	r0, r5
 80121f0:	f7ff ff84 	bl	80120fc <Ssd1306::Cls()>
 80121f4:	21af      	movs	r1, #175	; 0xaf
 80121f6:	4628      	mov	r0, r5
 80121f8:	f7ff fe9e 	bl	8011f38 <Ssd1306::SendCommand(unsigned char)>
 80121fc:	2301      	movs	r3, #1
 80121fe:	71eb      	strb	r3, [r5, #7]
 8012200:	4620      	mov	r0, r4
 8012202:	b003      	add	sp, #12
 8012204:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012206:	2600      	movs	r6, #0
 8012208:	4f06      	ldr	r7, [pc, #24]	; (8012224 <Ssd1306::Start()+0xb0>)
 801220a:	4628      	mov	r0, r5
 801220c:	f817 1b01 	ldrb.w	r1, [r7], #1
 8012210:	3601      	adds	r6, #1
 8012212:	f7ff fe91 	bl	8011f38 <Ssd1306::SendCommand(unsigned char)>
 8012216:	2e18      	cmp	r6, #24
 8012218:	d1f7      	bne.n	801220a <Ssd1306::Start()+0x96>
 801221a:	e7da      	b.n	80121d2 <Ssd1306::Start()+0x5e>
 801221c:	080177a0 	stmdaeq	r1, {r5, r7, r8, r9, sl, ip, sp, lr}
 8012220:	2001a864 	andcs	sl, r1, r4, ror #16
 8012224:	08017788 	stmdaeq	r1, {r3, r7, r8, r9, sl, ip, sp, lr}

08012228 <console_putc>:
 8012228:	f000 bb90 	b.w	801294c <uart0_putc>

0801222c <console_puts>:
 801222c:	f000 bbae 	b.w	801298c <uart0_puts>

08012230 <console_set_fg_color>:
 8012230:	2807      	cmp	r0, #7
 8012232:	d810      	bhi.n	8012256 <console_set_fg_color+0x26>
 8012234:	e8df f000 	tbb	[pc, r0]
 8012238:	0b090704 	bleq	8253e50 <__exidx_end+0x23c55c>
 801223c:	0d0f0f0f 	stceq	15, cr0, [pc, #-60]	; 8012208 <Ssd1306::Start()+0x94>
 8012240:	4806      	ldr	r0, [pc, #24]	; (801225c <console_set_fg_color+0x2c>)
 8012242:	f000 bba3 	b.w	801298c <uart0_puts>
 8012246:	4806      	ldr	r0, [pc, #24]	; (8012260 <console_set_fg_color+0x30>)
 8012248:	e7fb      	b.n	8012242 <console_set_fg_color+0x12>
 801224a:	4806      	ldr	r0, [pc, #24]	; (8012264 <console_set_fg_color+0x34>)
 801224c:	e7f9      	b.n	8012242 <console_set_fg_color+0x12>
 801224e:	4806      	ldr	r0, [pc, #24]	; (8012268 <console_set_fg_color+0x38>)
 8012250:	e7f7      	b.n	8012242 <console_set_fg_color+0x12>
 8012252:	4806      	ldr	r0, [pc, #24]	; (801226c <console_set_fg_color+0x3c>)
 8012254:	e7f5      	b.n	8012242 <console_set_fg_color+0x12>
 8012256:	4806      	ldr	r0, [pc, #24]	; (8012270 <console_set_fg_color+0x40>)
 8012258:	e7f3      	b.n	8012242 <console_set_fg_color+0x12>
 801225a:	bf00      	nop
 801225c:	080177fe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr}
 8012260:	08017804 	stmdaeq	r1, {r2, fp, ip, sp, lr}
 8012264:	0801780a 	stmdaeq	r1, {r1, r3, fp, ip, sp, lr}
 8012268:	08017810 	stmdaeq	r1, {r4, fp, ip, sp, lr}
 801226c:	08014b31 	stmdaeq	r1, {r0, r4, r5, r8, r9, fp, lr}
 8012270:	08017816 	stmdaeq	r1, {r1, r2, r4, fp, ip, sp, lr}

08012274 <console_error>:
 8012274:	b510      	push	{r4, lr}
 8012276:	4604      	mov	r4, r0
 8012278:	4805      	ldr	r0, [pc, #20]	; (8012290 <console_error+0x1c>)
 801227a:	f000 fb87 	bl	801298c <uart0_puts>
 801227e:	4620      	mov	r0, r4
 8012280:	f000 fb84 	bl	801298c <uart0_puts>
 8012284:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012288:	4802      	ldr	r0, [pc, #8]	; (8012294 <console_error+0x20>)
 801228a:	f000 bb7f 	b.w	801298c <uart0_puts>
 801228e:	bf00      	nop
 8012290:	08017804 	stmdaeq	r1, {r2, fp, ip, sp, lr}
 8012294:	08014b31 	stmdaeq	r1, {r0, r4, r5, r8, r9, fp, lr}

08012298 <console_status>:
 8012298:	b510      	push	{r4, lr}
 801229a:	460c      	mov	r4, r1
 801229c:	b280      	uxth	r0, r0
 801229e:	f7ff ffc7 	bl	8012230 <console_set_fg_color>
 80122a2:	4807      	ldr	r0, [pc, #28]	; (80122c0 <console_status+0x28>)
 80122a4:	f000 fb72 	bl	801298c <uart0_puts>
 80122a8:	4620      	mov	r0, r4
 80122aa:	f000 fb6f 	bl	801298c <uart0_puts>
 80122ae:	200a      	movs	r0, #10
 80122b0:	f000 fb4c 	bl	801294c <uart0_putc>
 80122b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80122b8:	4802      	ldr	r0, [pc, #8]	; (80122c4 <console_status+0x2c>)
 80122ba:	f000 bb67 	b.w	801298c <uart0_puts>
 80122be:	bf00      	nop
 80122c0:	080177f8 	stmdaeq	r1, {r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr}
 80122c4:	08014b31 	stmdaeq	r1, {r0, r4, r5, r8, r9, fp, lr}

080122c8 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>:
 80122c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80122cc:	4617      	mov	r7, r2
 80122ce:	461e      	mov	r6, r3
 80122d0:	4d14      	ldr	r5, [pc, #80]	; (8012324 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x5c>)
 80122d2:	4b15      	ldr	r3, [pc, #84]	; (8012328 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x60>)
 80122d4:	b086      	sub	sp, #24
 80122d6:	6018      	str	r0, [r3, #0]
 80122d8:	4604      	mov	r4, r0
 80122da:	f105 0803 	add.w	r8, r5, #3
 80122de:	2203      	movs	r2, #3
 80122e0:	4628      	mov	r0, r5
 80122e2:	f000 f9f8 	bl	80126d6 <memmove>
 80122e6:	4639      	mov	r1, r7
 80122e8:	220b      	movs	r2, #11
 80122ea:	4640      	mov	r0, r8
 80122ec:	f000 f9f3 	bl	80126d6 <memmove>
 80122f0:	f105 030e 	add.w	r3, r5, #14
 80122f4:	4631      	mov	r1, r6
 80122f6:	2208      	movs	r2, #8
 80122f8:	4618      	mov	r0, r3
 80122fa:	f000 f9ec 	bl	80126d6 <memmove>
 80122fe:	2308      	movs	r3, #8
 8012300:	e9cd 8303 	strd	r8, r3, [sp, #12]
 8012304:	230b      	movs	r3, #11
 8012306:	9302      	str	r3, [sp, #8]
 8012308:	4b08      	ldr	r3, [pc, #32]	; (801232c <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x64>)
 801230a:	9005      	str	r0, [sp, #20]
 801230c:	e9cd 5300 	strd	r5, r3, [sp]
 8012310:	213f      	movs	r1, #63	; 0x3f
 8012312:	2303      	movs	r3, #3
 8012314:	4a06      	ldr	r2, [pc, #24]	; (8012330 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x68>)
 8012316:	4807      	ldr	r0, [pc, #28]	; (8012334 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x6c>)
 8012318:	f7f7 f952 	bl	80095c0 <snprintf>
 801231c:	4620      	mov	r0, r4
 801231e:	b006      	add	sp, #24
 8012320:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012324:	2001a8f0 	strdcs	sl, [r1], -r0
 8012328:	2001a948 	andcs	sl, r1, r8, asr #18
 801232c:	08015394 	stmdaeq	r1, {r2, r4, r7, r8, r9, ip, lr}
 8012330:	0801781c 	stmdaeq	r1, {r2, r3, r4, fp, ip, sp, lr}
 8012334:	2001a906 	andcs	sl, r1, r6, lsl #18

08012338 <FirmwareVersion::Print(char const*)>:
 8012338:	b510      	push	{r4, lr}
 801233a:	460c      	mov	r4, r1
 801233c:	4804      	ldr	r0, [pc, #16]	; (8012350 <FirmwareVersion::Print(char const*)+0x18>)
 801233e:	f000 fa02 	bl	8012746 <puts>
 8012342:	b124      	cbz	r4, 801234e <FirmwareVersion::Print(char const*)+0x16>
 8012344:	4620      	mov	r0, r4
 8012346:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801234a:	f000 b9fc 	b.w	8012746 <puts>
 801234e:	bd10      	pop	{r4, pc}
 8012350:	2001a906 	andcs	sl, r1, r6, lsl #18

08012354 <LedBlink::LedBlink()>:
 8012354:	b538      	push	{r3, r4, r5, lr}
 8012356:	2205      	movs	r2, #5
 8012358:	2300      	movs	r3, #0
 801235a:	e9c0 3200 	strd	r3, r2, [r0]
 801235e:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 8012362:	6083      	str	r3, [r0, #8]
 8012364:	e9c0 2303 	strd	r2, r3, [r0, #12]
 8012368:	6143      	str	r3, [r0, #20]
 801236a:	4b09      	ldr	r3, [pc, #36]	; (8012390 <LedBlink::LedBlink()+0x3c>)
 801236c:	4d09      	ldr	r5, [pc, #36]	; (8012394 <LedBlink::LedBlink()+0x40>)
 801236e:	4604      	mov	r4, r0
 8012370:	6018      	str	r0, [r3, #0]
 8012372:	f240 6004 	movw	r0, #1540	; 0x604
 8012376:	f000 fd77 	bl	8012e68 <rcu_periph_clock_enable>
 801237a:	4628      	mov	r0, r5
 801237c:	2301      	movs	r3, #1
 801237e:	2203      	movs	r2, #3
 8012380:	2110      	movs	r1, #16
 8012382:	f000 fcd9 	bl	8012d38 <gpio_init>
 8012386:	2301      	movs	r3, #1
 8012388:	4620      	mov	r0, r4
 801238a:	616b      	str	r3, [r5, #20]
 801238c:	bd38      	pop	{r3, r4, r5, pc}
 801238e:	bf00      	nop
 8012390:	2001a94c 	andcs	sl, r1, ip, asr #18
 8012394:	40011000 	andmi	r1, r1, r0

08012398 <LedBlink::SetMode(ledblink::Mode)>:
 8012398:	6843      	ldr	r3, [r0, #4]
 801239a:	428b      	cmp	r3, r1
 801239c:	d02f      	beq.n	80123fe <LedBlink::SetMode(ledblink::Mode)+0x66>
 801239e:	6041      	str	r1, [r0, #4]
 80123a0:	2904      	cmp	r1, #4
 80123a2:	d822      	bhi.n	80123ea <LedBlink::SetMode(ledblink::Mode)+0x52>
 80123a4:	e8df f001 	tbb	[pc, r1]
 80123a8:	18120321 	ldmdane	r2, {r0, r5, r8, r9}
 80123ac:	23ff001d 	mvnscs	r0, #29
 80123b0:	6003      	str	r3, [r0, #0]
 80123b2:	2300      	movs	r3, #0
 80123b4:	2201      	movs	r2, #1
 80123b6:	60c3      	str	r3, [r0, #12]
 80123b8:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80123bc:	f503 3388 	add.w	r3, r3, #69632	; 0x11000
 80123c0:	611a      	str	r2, [r3, #16]
 80123c2:	6880      	ldr	r0, [r0, #8]
 80123c4:	b1d8      	cbz	r0, 80123fe <LedBlink::SetMode(ledblink::Mode)+0x66>
 80123c6:	6803      	ldr	r3, [r0, #0]
 80123c8:	689b      	ldr	r3, [r3, #8]
 80123ca:	4718      	bx	r3
 80123cc:	2301      	movs	r3, #1
 80123ce:	6003      	str	r3, [r0, #0]
 80123d0:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80123d4:	60c3      	str	r3, [r0, #12]
 80123d6:	e7f4      	b.n	80123c2 <LedBlink::SetMode(ledblink::Mode)+0x2a>
 80123d8:	2303      	movs	r3, #3
 80123da:	6003      	str	r3, [r0, #0]
 80123dc:	f240 134d 	movw	r3, #333	; 0x14d
 80123e0:	e7f8      	b.n	80123d4 <LedBlink::SetMode(ledblink::Mode)+0x3c>
 80123e2:	2305      	movs	r3, #5
 80123e4:	6003      	str	r3, [r0, #0]
 80123e6:	23c8      	movs	r3, #200	; 0xc8
 80123e8:	e7f4      	b.n	80123d4 <LedBlink::SetMode(ledblink::Mode)+0x3c>
 80123ea:	2300      	movs	r3, #0
 80123ec:	2201      	movs	r2, #1
 80123ee:	6003      	str	r3, [r0, #0]
 80123f0:	60c3      	str	r3, [r0, #12]
 80123f2:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80123f6:	f503 3388 	add.w	r3, r3, #69632	; 0x11000
 80123fa:	615a      	str	r2, [r3, #20]
 80123fc:	e7e1      	b.n	80123c2 <LedBlink::SetMode(ledblink::Mode)+0x2a>
 80123fe:	4770      	bx	lr

08012400 <Hardware::Hardware()>:
 8012400:	b570      	push	{r4, r5, r6, lr}
 8012402:	2400      	movs	r4, #0
 8012404:	4b24      	ldr	r3, [pc, #144]	; (8012498 <Hardware::Hardware()+0x98>)
 8012406:	b090      	sub	sp, #64	; 0x40
 8012408:	7004      	strb	r4, [r0, #0]
 801240a:	6018      	str	r0, [r3, #0]
 801240c:	4605      	mov	r5, r0
 801240e:	f7f5 f8a3 	bl	8007558 <console_init>
 8012412:	f000 facb 	bl	80129ac <systick_config>
 8012416:	f001 fcff 	bl	8013e18 <udelay_init()>
 801241a:	f001 fcaf 	bl	8013d7c <micros_init()>
 801241e:	f240 701b 	movw	r0, #1819	; 0x71b
 8012422:	f000 fd21 	bl	8012e68 <rcu_periph_clock_enable>
 8012426:	f240 701c 	movw	r0, #1820	; 0x71c
 801242a:	f000 fd1d 	bl	8012e68 <rcu_periph_clock_enable>
 801242e:	4e1b      	ldr	r6, [pc, #108]	; (801249c <Hardware::Hardware()+0x9c>)
 8012430:	f000 fd12 	bl	8012e58 <pmu_backup_write_enable>
 8012434:	4621      	mov	r1, r4
 8012436:	2002      	movs	r0, #2
 8012438:	f000 fb5c 	bl	8012af4 <bkp_data_write>
 801243c:	f240 7004 	movw	r0, #1796	; 0x704
 8012440:	f000 fd12 	bl	8012e68 <rcu_periph_clock_enable>
 8012444:	4630      	mov	r0, r6
 8012446:	f000 fe73 	bl	8013130 <timer_deinit>
 801244a:	2377      	movs	r3, #119	; 0x77
 801244c:	f8ad 300c 	strh.w	r3, [sp, #12]
 8012450:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8012454:	a903      	add	r1, sp, #12
 8012456:	4630      	mov	r0, r6
 8012458:	9305      	str	r3, [sp, #20]
 801245a:	f000 ff0f 	bl	801327c <timer_init>
 801245e:	4630      	mov	r0, r6
 8012460:	f000 ff64 	bl	801332c <timer_enable>
 8012464:	f001 f9cc 	bl	8013800 <gd32_adc_init()>
 8012468:	220a      	movs	r2, #10
 801246a:	2309      	movs	r3, #9
 801246c:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 8012470:	237a      	movs	r3, #122	; 0x7a
 8012472:	a807      	add	r0, sp, #28
 8012474:	930c      	str	r3, [sp, #48]	; 0x30
 8012476:	e9cd 4408 	strd	r4, r4, [sp, #32]
 801247a:	9407      	str	r4, [sp, #28]
 801247c:	940f      	str	r4, [sp, #60]	; 0x3c
 801247e:	f000 f9bb 	bl	80127f8 <mktime>
 8012482:	4621      	mov	r1, r4
 8012484:	e9cd 0401 	strd	r0, r4, [sp, #4]
 8012488:	a801      	add	r0, sp, #4
 801248a:	f000 fa2b 	bl	80128e4 <settimeofday>
 801248e:	f001 fa11 	bl	80138b4 <gd32_i2c_begin>
 8012492:	4628      	mov	r0, r5
 8012494:	b010      	add	sp, #64	; 0x40
 8012496:	bd70      	pop	{r4, r5, r6, pc}
 8012498:	2001a950 	andcs	sl, r1, r0, asr r9
 801249c:	40001000 	andmi	r1, r0, r0

080124a0 <Hardware::GetUuid(unsigned char*)>:
 80124a0:	4a0c      	ldr	r2, [pc, #48]	; (80124d4 <Hardware::GetUuid(unsigned char*)+0x34>)
 80124a2:	b084      	sub	sp, #16
 80124a4:	f8d2 37e8 	ldr.w	r3, [r2, #2024]	; 0x7e8
 80124a8:	9300      	str	r3, [sp, #0]
 80124aa:	f8d2 07ec 	ldr.w	r0, [r2, #2028]	; 0x7ec
 80124ae:	9001      	str	r0, [sp, #4]
 80124b0:	f8d2 27f0 	ldr.w	r2, [r2, #2032]	; 0x7f0
 80124b4:	4403      	add	r3, r0
 80124b6:	4413      	add	r3, r2
 80124b8:	9202      	str	r2, [sp, #8]
 80124ba:	466a      	mov	r2, sp
 80124bc:	9303      	str	r3, [sp, #12]
 80124be:	1e4b      	subs	r3, r1, #1
 80124c0:	310f      	adds	r1, #15
 80124c2:	428b      	cmp	r3, r1
 80124c4:	d101      	bne.n	80124ca <Hardware::GetUuid(unsigned char*)+0x2a>
 80124c6:	b004      	add	sp, #16
 80124c8:	4770      	bx	lr
 80124ca:	f812 0b01 	ldrb.w	r0, [r2], #1
 80124ce:	f803 0f01 	strb.w	r0, [r3, #1]!
 80124d2:	e7f6      	b.n	80124c2 <Hardware::GetUuid(unsigned char*)+0x22>
 80124d4:	1ffff000 	svcne	0x00fff000

080124d8 <Hardware::Reboot()>:
 80124d8:	b508      	push	{r3, lr}
 80124da:	2300      	movs	r3, #0
 80124dc:	4604      	mov	r4, r0
 80124de:	7003      	strb	r3, [r0, #0]
 80124e0:	2104      	movs	r1, #4
 80124e2:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80124e6:	f000 fbfd 	bl	8012ce4 <fwdgt_config>
 80124ea:	4620      	mov	r0, r4
 80124ec:	f7f6 fa04 	bl	80088f8 <Hardware::RebootHandler()>
 80124f0:	2102      	movs	r1, #2
 80124f2:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80124f6:	f000 fbf5 	bl	8012ce4 <fwdgt_config>
 80124fa:	2801      	cmp	r0, #1
 80124fc:	bf0c      	ite	eq
 80124fe:	2301      	moveq	r3, #1
 8012500:	2300      	movne	r3, #0
 8012502:	7023      	strb	r3, [r4, #0]
 8012504:	d101      	bne.n	801250a <Hardware::Reboot()+0x32>
 8012506:	f000 fbdd 	bl	8012cc4 <fwdgt_enable>
 801250a:	2208      	movs	r2, #8
 801250c:	4b0d      	ldr	r3, [pc, #52]	; (8012544 <Hardware::Reboot()+0x6c>)
 801250e:	2501      	movs	r5, #1
 8012510:	681b      	ldr	r3, [r3, #0]
 8012512:	480d      	ldr	r0, [pc, #52]	; (8012548 <Hardware::Reboot()+0x70>)
 8012514:	601a      	str	r2, [r3, #0]
 8012516:	227d      	movs	r2, #125	; 0x7d
 8012518:	490c      	ldr	r1, [pc, #48]	; (801254c <Hardware::Reboot()+0x74>)
 801251a:	60da      	str	r2, [r3, #12]
 801251c:	68dc      	ldr	r4, [r3, #12]
 801251e:	b904      	cbnz	r4, 8012522 <Hardware::Reboot()+0x4a>
 8012520:	e7fe      	b.n	8012520 <Hardware::Reboot()+0x48>
 8012522:	6802      	ldr	r2, [r0, #0]
 8012524:	695e      	ldr	r6, [r3, #20]
 8012526:	1b92      	subs	r2, r2, r6
 8012528:	4294      	cmp	r4, r2
 801252a:	d8f8      	bhi.n	801251e <Hardware::Reboot()+0x46>
 801252c:	6802      	ldr	r2, [r0, #0]
 801252e:	615a      	str	r2, [r3, #20]
 8012530:	691a      	ldr	r2, [r3, #16]
 8012532:	2a01      	cmp	r2, #1
 8012534:	f082 0401 	eor.w	r4, r2, #1
 8012538:	611c      	str	r4, [r3, #16]
 801253a:	bf14      	ite	ne
 801253c:	610d      	strne	r5, [r1, #16]
 801253e:	614a      	streq	r2, [r1, #20]
 8012540:	e7ec      	b.n	801251c <Hardware::Reboot()+0x44>
 8012542:	bf00      	nop
 8012544:	2001a94c 	andcs	sl, r1, ip, asr #18
 8012548:	2001a964 	andcs	sl, r1, r4, ror #18
 801254c:	40011000 	andmi	r1, r1, r0

08012550 <operator delete(void*)>:
 8012550:	f000 b890 	b.w	8012674 <free>

08012554 <operator delete[](void*)>:
 8012554:	f000 b88e 	b.w	8012674 <free>

08012558 <operator new(unsigned int)>:
 8012558:	f000 b842 	b.w	80125e0 <malloc>

0801255c <operator new[](unsigned int)>:
 801255c:	f000 b840 	b.w	80125e0 <malloc>

08012560 <inet_aton>:
 8012560:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8012562:	f04f 0c0a 	mov.w	ip, #10
 8012566:	2500      	movs	r5, #0
 8012568:	ae01      	add	r6, sp, #4
 801256a:	4603      	mov	r3, r0
 801256c:	2200      	movs	r2, #0
 801256e:	1d07      	adds	r7, r0, #4
 8012570:	e007      	b.n	8012582 <inet_aton+0x22>
 8012572:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8012576:	2b09      	cmp	r3, #9
 8012578:	d820      	bhi.n	80125bc <inet_aton+0x5c>
 801257a:	4603      	mov	r3, r0
 801257c:	fb0c 4202 	mla	r2, ip, r2, r4
 8012580:	3a30      	subs	r2, #48	; 0x30
 8012582:	4618      	mov	r0, r3
 8012584:	f810 4b01 	ldrb.w	r4, [r0], #1
 8012588:	2c2e      	cmp	r4, #46	; 0x2e
 801258a:	d111      	bne.n	80125b0 <inet_aton+0x50>
 801258c:	3501      	adds	r5, #1
 801258e:	2d03      	cmp	r5, #3
 8012590:	f806 2b01 	strb.w	r2, [r6], #1
 8012594:	d1e9      	bne.n	801256a <inet_aton+0xa>
 8012596:	2200      	movs	r2, #0
 8012598:	250a      	movs	r5, #10
 801259a:	1d1c      	adds	r4, r3, #4
 801259c:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 80125a0:	f010 0fdf 	tst.w	r0, #223	; 0xdf
 80125a4:	d10d      	bne.n	80125c2 <inet_aton+0x62>
 80125a6:	f88d 2007 	strb.w	r2, [sp, #7]
 80125aa:	b9b1      	cbnz	r1, 80125da <inet_aton+0x7a>
 80125ac:	2001      	movs	r0, #1
 80125ae:	e006      	b.n	80125be <inet_aton+0x5e>
 80125b0:	2c00      	cmp	r4, #0
 80125b2:	d0eb      	beq.n	801258c <inet_aton+0x2c>
 80125b4:	2c0a      	cmp	r4, #10
 80125b6:	d0e9      	beq.n	801258c <inet_aton+0x2c>
 80125b8:	42b8      	cmp	r0, r7
 80125ba:	d1da      	bne.n	8012572 <inet_aton+0x12>
 80125bc:	2000      	movs	r0, #0
 80125be:	b003      	add	sp, #12
 80125c0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80125c2:	280a      	cmp	r0, #10
 80125c4:	d0ef      	beq.n	80125a6 <inet_aton+0x46>
 80125c6:	42a3      	cmp	r3, r4
 80125c8:	d0f8      	beq.n	80125bc <inet_aton+0x5c>
 80125ca:	f1a0 0630 	sub.w	r6, r0, #48	; 0x30
 80125ce:	2e09      	cmp	r6, #9
 80125d0:	d8f4      	bhi.n	80125bc <inet_aton+0x5c>
 80125d2:	fb05 0202 	mla	r2, r5, r2, r0
 80125d6:	3a30      	subs	r2, #48	; 0x30
 80125d8:	e7e0      	b.n	801259c <inet_aton+0x3c>
 80125da:	9b01      	ldr	r3, [sp, #4]
 80125dc:	600b      	str	r3, [r1, #0]
 80125de:	e7e5      	b.n	80125ac <inet_aton+0x4c>

080125e0 <malloc>:
 80125e0:	b538      	push	{r3, r4, r5, lr}
 80125e2:	4604      	mov	r4, r0
 80125e4:	4601      	mov	r1, r0
 80125e6:	481c      	ldr	r0, [pc, #112]	; (8012658 <malloc+0x78>)
 80125e8:	f7f6 ffc2 	bl	8009570 <printf>
 80125ec:	b17c      	cbz	r4, 801260e <malloc+0x2e>
 80125ee:	4b1b      	ldr	r3, [pc, #108]	; (801265c <malloc+0x7c>)
 80125f0:	6818      	ldr	r0, [r3, #0]
 80125f2:	b978      	cbnz	r0, 8012614 <malloc+0x34>
 80125f4:	4a1a      	ldr	r2, [pc, #104]	; (8012660 <malloc+0x80>)
 80125f6:	f104 031b 	add.w	r3, r4, #27
 80125fa:	6811      	ldr	r1, [r2, #0]
 80125fc:	4819      	ldr	r0, [pc, #100]	; (8012664 <malloc+0x84>)
 80125fe:	f023 030f 	bic.w	r3, r3, #15
 8012602:	440b      	add	r3, r1
 8012604:	4283      	cmp	r3, r0
 8012606:	d921      	bls.n	801264c <malloc+0x6c>
 8012608:	4817      	ldr	r0, [pc, #92]	; (8012668 <malloc+0x88>)
 801260a:	f7f6 ffb1 	bl	8009570 <printf>
 801260e:	2500      	movs	r5, #0
 8012610:	4628      	mov	r0, r5
 8012612:	bd38      	pop	{r3, r4, r5, pc}
 8012614:	4284      	cmp	r4, r0
 8012616:	d80a      	bhi.n	801262e <malloc+0x4e>
 8012618:	685a      	ldr	r2, [r3, #4]
 801261a:	6899      	ldr	r1, [r3, #8]
 801261c:	3201      	adds	r2, #1
 801261e:	428a      	cmp	r2, r1
 8012620:	605a      	str	r2, [r3, #4]
 8012622:	d900      	bls.n	8012626 <malloc+0x46>
 8012624:	609a      	str	r2, [r3, #8]
 8012626:	68d9      	ldr	r1, [r3, #12]
 8012628:	b919      	cbnz	r1, 8012632 <malloc+0x52>
 801262a:	4604      	mov	r4, r0
 801262c:	e7e2      	b.n	80125f4 <malloc+0x14>
 801262e:	3310      	adds	r3, #16
 8012630:	e7de      	b.n	80125f0 <malloc+0x10>
 8012632:	4604      	mov	r4, r0
 8012634:	688a      	ldr	r2, [r1, #8]
 8012636:	60da      	str	r2, [r3, #12]
 8012638:	2300      	movs	r3, #0
 801263a:	f101 050c 	add.w	r5, r1, #12
 801263e:	608b      	str	r3, [r1, #8]
 8012640:	4622      	mov	r2, r4
 8012642:	462b      	mov	r3, r5
 8012644:	4809      	ldr	r0, [pc, #36]	; (801266c <malloc+0x8c>)
 8012646:	f7f6 ff93 	bl	8009570 <printf>
 801264a:	e7e1      	b.n	8012610 <malloc+0x30>
 801264c:	6013      	str	r3, [r2, #0]
 801264e:	4b08      	ldr	r3, [pc, #32]	; (8012670 <malloc+0x90>)
 8012650:	e9c1 3400 	strd	r3, r4, [r1]
 8012654:	e7f0      	b.n	8012638 <malloc+0x58>
 8012656:	bf00      	nop
 8012658:	08017840 	stmdaeq	r1, {r6, fp, ip, sp, lr}
 801265c:	20000014 	andcs	r0, r0, r4, lsl r0
 8012660:	20000010 	andcs	r0, r0, r0, lsl r0
 8012664:	2003d800 	andcs	sp, r3, r0, lsl #16
 8012668:	0801784c 	stmdaeq	r1, {r2, r3, r6, fp, ip, sp, lr}
 801266c:	08017868 	stmdaeq	r1, {r3, r5, r6, fp, ip, sp, lr}
 8012670:	424c4d43 	submi	r4, ip, #4288	; 0x10c0

08012674 <free>:
 8012674:	b538      	push	{r3, r4, r5, lr}
 8012676:	4604      	mov	r4, r0
 8012678:	b1c8      	cbz	r0, 80126ae <free+0x3a>
 801267a:	f1a0 050c 	sub.w	r5, r0, #12
 801267e:	4602      	mov	r2, r0
 8012680:	4629      	mov	r1, r5
 8012682:	480c      	ldr	r0, [pc, #48]	; (80126b4 <free+0x40>)
 8012684:	f7f6 ff74 	bl	8009570 <printf>
 8012688:	f854 2c0c 	ldr.w	r2, [r4, #-12]
 801268c:	4b0a      	ldr	r3, [pc, #40]	; (80126b8 <free+0x44>)
 801268e:	429a      	cmp	r2, r3
 8012690:	d10d      	bne.n	80126ae <free+0x3a>
 8012692:	4b0a      	ldr	r3, [pc, #40]	; (80126bc <free+0x48>)
 8012694:	681a      	ldr	r2, [r3, #0]
 8012696:	b152      	cbz	r2, 80126ae <free+0x3a>
 8012698:	f854 1c08 	ldr.w	r1, [r4, #-8]
 801269c:	4291      	cmp	r1, r2
 801269e:	d107      	bne.n	80126b0 <free+0x3c>
 80126a0:	68da      	ldr	r2, [r3, #12]
 80126a2:	f844 2c04 	str.w	r2, [r4, #-4]
 80126a6:	685a      	ldr	r2, [r3, #4]
 80126a8:	60dd      	str	r5, [r3, #12]
 80126aa:	3a01      	subs	r2, #1
 80126ac:	605a      	str	r2, [r3, #4]
 80126ae:	bd38      	pop	{r3, r4, r5, pc}
 80126b0:	3310      	adds	r3, #16
 80126b2:	e7ef      	b.n	8012694 <free+0x20>
 80126b4:	08017893 	stmdaeq	r1, {r0, r1, r4, r7, fp, ip, sp, lr}
 80126b8:	424c4d43 	submi	r4, ip, #4288	; 0x10c0
 80126bc:	20000014 	andcs	r0, r0, r4, lsl r0

080126c0 <memcpy>:
 80126c0:	b510      	push	{r4, lr}
 80126c2:	1e43      	subs	r3, r0, #1
 80126c4:	440a      	add	r2, r1
 80126c6:	4291      	cmp	r1, r2
 80126c8:	d100      	bne.n	80126cc <memcpy+0xc>
 80126ca:	bd10      	pop	{r4, pc}
 80126cc:	f811 4b01 	ldrb.w	r4, [r1], #1
 80126d0:	f803 4f01 	strb.w	r4, [r3, #1]!
 80126d4:	e7f7      	b.n	80126c6 <memcpy+0x6>

080126d6 <memmove>:
 80126d6:	4288      	cmp	r0, r1
 80126d8:	b510      	push	{r4, lr}
 80126da:	eb01 0302 	add.w	r3, r1, r2
 80126de:	d208      	bcs.n	80126f2 <memmove+0x1c>
 80126e0:	1e42      	subs	r2, r0, #1
 80126e2:	4299      	cmp	r1, r3
 80126e4:	d100      	bne.n	80126e8 <memmove+0x12>
 80126e6:	bd10      	pop	{r4, pc}
 80126e8:	f811 4b01 	ldrb.w	r4, [r1], #1
 80126ec:	f802 4f01 	strb.w	r4, [r2, #1]!
 80126f0:	e7f7      	b.n	80126e2 <memmove+0xc>
 80126f2:	4601      	mov	r1, r0
 80126f4:	4402      	add	r2, r0
 80126f6:	428a      	cmp	r2, r1
 80126f8:	d0f5      	beq.n	80126e6 <memmove+0x10>
 80126fa:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80126fe:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8012702:	e7f8      	b.n	80126f6 <memmove+0x20>

08012704 <memset>:
 8012704:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012706:	b1c2      	cbz	r2, 801273a <memset+0x36>
 8012708:	4603      	mov	r3, r0
 801270a:	b2c9      	uxtb	r1, r1
 801270c:	075c      	lsls	r4, r3, #29
 801270e:	d110      	bne.n	8012732 <memset+0x2e>
 8012710:	ea41 2401 	orr.w	r4, r1, r1, lsl #8
 8012714:	ea44 4704 	orr.w	r7, r4, r4, lsl #16
 8012718:	463d      	mov	r5, r7
 801271a:	461e      	mov	r6, r3
 801271c:	f022 0407 	bic.w	r4, r2, #7
 8012720:	441c      	add	r4, r3
 8012722:	42a6      	cmp	r6, r4
 8012724:	d10a      	bne.n	801273c <memset+0x38>
 8012726:	4413      	add	r3, r2
 8012728:	429c      	cmp	r4, r3
 801272a:	d006      	beq.n	801273a <memset+0x36>
 801272c:	f804 1b01 	strb.w	r1, [r4], #1
 8012730:	e7fa      	b.n	8012728 <memset+0x24>
 8012732:	3a01      	subs	r2, #1
 8012734:	f803 1b01 	strb.w	r1, [r3], #1
 8012738:	d1e8      	bne.n	801270c <memset+0x8>
 801273a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801273c:	f846 7b08 	str.w	r7, [r6], #8
 8012740:	f846 5c04 	str.w	r5, [r6, #-4]
 8012744:	e7ed      	b.n	8012722 <memset+0x1e>

08012746 <puts>:
 8012746:	b508      	push	{r3, lr}
 8012748:	f7ff fd70 	bl	801222c <console_puts>
 801274c:	200a      	movs	r0, #10
 801274e:	f7ff fd6b 	bl	8012228 <console_putc>
 8012752:	2001      	movs	r0, #1
 8012754:	bd08      	pop	{r3, pc}
	...

08012758 <strtok>:
 8012758:	b530      	push	{r4, r5, lr}
 801275a:	b910      	cbnz	r0, 8012762 <strtok+0xa>
 801275c:	4b12      	ldr	r3, [pc, #72]	; (80127a8 <strtok+0x50>)
 801275e:	6818      	ldr	r0, [r3, #0]
 8012760:	b158      	cbz	r0, 801277a <strtok+0x22>
 8012762:	4603      	mov	r3, r0
 8012764:	460d      	mov	r5, r1
 8012766:	4618      	mov	r0, r3
 8012768:	f813 2b01 	ldrb.w	r2, [r3], #1
 801276c:	f815 4b01 	ldrb.w	r4, [r5], #1
 8012770:	b924      	cbnz	r4, 801277c <strtok+0x24>
 8012772:	b94a      	cbnz	r2, 8012788 <strtok+0x30>
 8012774:	4610      	mov	r0, r2
 8012776:	4b0c      	ldr	r3, [pc, #48]	; (80127a8 <strtok+0x50>)
 8012778:	601a      	str	r2, [r3, #0]
 801277a:	bd30      	pop	{r4, r5, pc}
 801277c:	42a2      	cmp	r2, r4
 801277e:	d1f5      	bne.n	801276c <strtok+0x14>
 8012780:	e7f0      	b.n	8012764 <strtok+0xc>
 8012782:	4613      	mov	r3, r2
 8012784:	e00c      	b.n	80127a0 <strtok+0x48>
 8012786:	b914      	cbnz	r4, 801278e <strtok+0x36>
 8012788:	460d      	mov	r5, r1
 801278a:	f813 2b01 	ldrb.w	r2, [r3], #1
 801278e:	f815 4b01 	ldrb.w	r4, [r5], #1
 8012792:	42a2      	cmp	r2, r4
 8012794:	d1f7      	bne.n	8012786 <strtok+0x2e>
 8012796:	2a00      	cmp	r2, #0
 8012798:	d0f3      	beq.n	8012782 <strtok+0x2a>
 801279a:	2200      	movs	r2, #0
 801279c:	f803 2c01 	strb.w	r2, [r3, #-1]
 80127a0:	4a01      	ldr	r2, [pc, #4]	; (80127a8 <strtok+0x50>)
 80127a2:	6013      	str	r3, [r2, #0]
 80127a4:	e7e9      	b.n	801277a <strtok+0x22>
 80127a6:	bf00      	nop
 80127a8:	2001a954 	andcs	sl, r1, r4, asr r9

080127ac <isleapyear>:
 80127ac:	2264      	movs	r2, #100	; 0x64
 80127ae:	fb90 f3f2 	sdiv	r3, r0, r2
 80127b2:	fb02 0313 	mls	r3, r2, r3, r0
 80127b6:	b94b      	cbnz	r3, 80127cc <isleapyear+0x20>
 80127b8:	f44f 73c8 	mov.w	r3, #400	; 0x190
 80127bc:	fb90 f2f3 	sdiv	r2, r0, r3
 80127c0:	fb03 0012 	mls	r0, r3, r2, r0
 80127c4:	fab0 f080 	clz	r0, r0
 80127c8:	0940      	lsrs	r0, r0, #5
 80127ca:	4770      	bx	lr
 80127cc:	f010 0f03 	tst.w	r0, #3
 80127d0:	bf0c      	ite	eq
 80127d2:	2001      	moveq	r0, #1
 80127d4:	2000      	movne	r0, #0
 80127d6:	4770      	bx	lr

080127d8 <getdaysofmonth>:
 80127d8:	b510      	push	{r4, lr}
 80127da:	4604      	mov	r4, r0
 80127dc:	2c01      	cmp	r4, #1
 80127de:	4608      	mov	r0, r1
 80127e0:	d102      	bne.n	80127e8 <getdaysofmonth+0x10>
 80127e2:	f7ff ffe3 	bl	80127ac <isleapyear>
 80127e6:	b918      	cbnz	r0, 80127f0 <getdaysofmonth+0x18>
 80127e8:	4b02      	ldr	r3, [pc, #8]	; (80127f4 <getdaysofmonth+0x1c>)
 80127ea:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 80127ee:	bd10      	pop	{r4, pc}
 80127f0:	201d      	movs	r0, #29
 80127f2:	e7fc      	b.n	80127ee <getdaysofmonth+0x16>
 80127f4:	080178bc 	stmdaeq	r1, {r2, r3, r4, r5, r7, fp, ip, sp, lr}

080127f8 <mktime>:
 80127f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80127fc:	4604      	mov	r4, r0
 80127fe:	2800      	cmp	r0, #0
 8012800:	d043      	beq.n	801288a <mktime+0x92>
 8012802:	6941      	ldr	r1, [r0, #20]
 8012804:	f1a1 0346 	sub.w	r3, r1, #70	; 0x46
 8012808:	2b45      	cmp	r3, #69	; 0x45
 801280a:	d83e      	bhi.n	801288a <mktime+0x92>
 801280c:	2600      	movs	r6, #0
 801280e:	f240 75b2 	movw	r5, #1970	; 0x7b2
 8012812:	f240 186d 	movw	r8, #365	; 0x16d
 8012816:	f201 776b 	addw	r7, r1, #1899	; 0x76b
 801281a:	42af      	cmp	r7, r5
 801281c:	da24      	bge.n	8012868 <mktime+0x70>
 801281e:	6927      	ldr	r7, [r4, #16]
 8012820:	2f0b      	cmp	r7, #11
 8012822:	d832      	bhi.n	801288a <mktime+0x92>
 8012824:	2500      	movs	r5, #0
 8012826:	42af      	cmp	r7, r5
 8012828:	d129      	bne.n	801287e <mktime+0x86>
 801282a:	68e5      	ldr	r5, [r4, #12]
 801282c:	2d00      	cmp	r5, #0
 801282e:	dd2c      	ble.n	801288a <mktime+0x92>
 8012830:	4638      	mov	r0, r7
 8012832:	f7ff ffd1 	bl	80127d8 <getdaysofmonth>
 8012836:	4285      	cmp	r5, r0
 8012838:	dc27      	bgt.n	801288a <mktime+0x92>
 801283a:	2318      	movs	r3, #24
 801283c:	3d01      	subs	r5, #1
 801283e:	4435      	add	r5, r6
 8012840:	435d      	muls	r5, r3
 8012842:	68a3      	ldr	r3, [r4, #8]
 8012844:	2b17      	cmp	r3, #23
 8012846:	d820      	bhi.n	801288a <mktime+0x92>
 8012848:	213c      	movs	r1, #60	; 0x3c
 801284a:	442b      	add	r3, r5
 801284c:	fb01 f203 	mul.w	r2, r1, r3
 8012850:	6863      	ldr	r3, [r4, #4]
 8012852:	2b3b      	cmp	r3, #59	; 0x3b
 8012854:	d819      	bhi.n	801288a <mktime+0x92>
 8012856:	6820      	ldr	r0, [r4, #0]
 8012858:	4413      	add	r3, r2
 801285a:	283b      	cmp	r0, #59	; 0x3b
 801285c:	fb01 f303 	mul.w	r3, r1, r3
 8012860:	d813      	bhi.n	801288a <mktime+0x92>
 8012862:	4418      	add	r0, r3
 8012864:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012868:	4628      	mov	r0, r5
 801286a:	f7ff ff9f 	bl	80127ac <isleapyear>
 801286e:	2800      	cmp	r0, #0
 8012870:	bf14      	ite	ne
 8012872:	f44f 73b7 	movne.w	r3, #366	; 0x16e
 8012876:	4643      	moveq	r3, r8
 8012878:	3501      	adds	r5, #1
 801287a:	441e      	add	r6, r3
 801287c:	e7cd      	b.n	801281a <mktime+0x22>
 801287e:	4628      	mov	r0, r5
 8012880:	f7ff ffaa 	bl	80127d8 <getdaysofmonth>
 8012884:	3501      	adds	r5, #1
 8012886:	4406      	add	r6, r0
 8012888:	e7cd      	b.n	8012826 <mktime+0x2e>
 801288a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801288e:	e7e9      	b.n	8012864 <mktime+0x6c>

08012890 <gettimeofday>:
 8012890:	b538      	push	{r3, r4, r5, lr}
 8012892:	4b10      	ldr	r3, [pc, #64]	; (80128d4 <gettimeofday+0x44>)
 8012894:	4a10      	ldr	r2, [pc, #64]	; (80128d8 <gettimeofday+0x48>)
 8012896:	681b      	ldr	r3, [r3, #0]
 8012898:	6814      	ldr	r4, [r2, #0]
 801289a:	6013      	str	r3, [r2, #0]
 801289c:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80128a0:	429c      	cmp	r4, r3
 80128a2:	bf2c      	ite	cs
 80128a4:	1ae4      	subcs	r4, r4, r3
 80128a6:	1b1c      	subcc	r4, r3, r4
 80128a8:	4354      	muls	r4, r2
 80128aa:	4b0c      	ldr	r3, [pc, #48]	; (80128dc <gettimeofday+0x4c>)
 80128ac:	4605      	mov	r5, r0
 80128ae:	e9d3 2100 	ldrd	r2, r1, [r3]
 80128b2:	18a4      	adds	r4, r4, r2
 80128b4:	f141 0100 	adc.w	r1, r1, #0
 80128b8:	e9c3 4100 	strd	r4, r1, [r3]
 80128bc:	4620      	mov	r0, r4
 80128be:	2300      	movs	r3, #0
 80128c0:	4a07      	ldr	r2, [pc, #28]	; (80128e0 <gettimeofday+0x50>)
 80128c2:	f7f5 fb35 	bl	8007f30 <__aeabi_uldivmod>
 80128c6:	4b06      	ldr	r3, [pc, #24]	; (80128e0 <gettimeofday+0x50>)
 80128c8:	6028      	str	r0, [r5, #0]
 80128ca:	fb03 4410 	mls	r4, r3, r0, r4
 80128ce:	2000      	movs	r0, #0
 80128d0:	606c      	str	r4, [r5, #4]
 80128d2:	bd38      	pop	{r3, r4, r5, pc}
 80128d4:	2001a964 	andcs	sl, r1, r4, ror #18
 80128d8:	2001a960 	andcs	sl, r1, r0, ror #18
 80128dc:	2001a958 	andcs	sl, r1, r8, asr r9
 80128e0:	000f4240 	andeq	r4, pc, r0, asr #4

080128e4 <settimeofday>:
 80128e4:	4b07      	ldr	r3, [pc, #28]	; (8012904 <settimeofday+0x20>)
 80128e6:	b510      	push	{r4, lr}
 80128e8:	681a      	ldr	r2, [r3, #0]
 80128ea:	4b07      	ldr	r3, [pc, #28]	; (8012908 <settimeofday+0x24>)
 80128ec:	6804      	ldr	r4, [r0, #0]
 80128ee:	601a      	str	r2, [r3, #0]
 80128f0:	6843      	ldr	r3, [r0, #4]
 80128f2:	4806      	ldr	r0, [pc, #24]	; (801290c <settimeofday+0x28>)
 80128f4:	17da      	asrs	r2, r3, #31
 80128f6:	fbc4 3200 	smlal	r3, r2, r4, r0
 80128fa:	4905      	ldr	r1, [pc, #20]	; (8012910 <settimeofday+0x2c>)
 80128fc:	2000      	movs	r0, #0
 80128fe:	e9c1 3200 	strd	r3, r2, [r1]
 8012902:	bd10      	pop	{r4, pc}
 8012904:	2001a964 	andcs	sl, r1, r4, ror #18
 8012908:	2001a960 	andcs	sl, r1, r0, ror #18
 801290c:	000f4240 	andeq	r4, pc, r0, asr #4
 8012910:	2001a958 	andcs	sl, r1, r8, asr r9

08012914 <time>:
 8012914:	b513      	push	{r0, r1, r4, lr}
 8012916:	4604      	mov	r4, r0
 8012918:	2100      	movs	r1, #0
 801291a:	4668      	mov	r0, sp
 801291c:	f7ff ffb8 	bl	8012890 <gettimeofday>
 8012920:	9800      	ldr	r0, [sp, #0]
 8012922:	b104      	cbz	r4, 8012926 <time+0x12>
 8012924:	6020      	str	r0, [r4, #0]
 8012926:	b002      	add	sp, #8
 8012928:	bd10      	pop	{r4, pc}
	...

0801292c <uart0_init>:
 801292c:	2301      	movs	r3, #1
 801292e:	b507      	push	{r0, r1, r2, lr}
 8012930:	2208      	movs	r2, #8
 8012932:	9300      	str	r3, [sp, #0]
 8012934:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
 8012938:	2300      	movs	r3, #0
 801293a:	4803      	ldr	r0, [pc, #12]	; (8012948 <uart0_init+0x1c>)
 801293c:	f001 f906 	bl	8013b4c <gd32_uart_begin>
 8012940:	b003      	add	sp, #12
 8012942:	f85d fb04 	ldr.w	pc, [sp], #4
 8012946:	bf00      	nop
 8012948:	40013800 	andmi	r3, r1, r0, lsl #16

0801294c <uart0_putc>:
 801294c:	280a      	cmp	r0, #10
 801294e:	b538      	push	{r3, r4, r5, lr}
 8012950:	4604      	mov	r4, r0
 8012952:	d10a      	bne.n	801296a <uart0_putc+0x1e>
 8012954:	4d0b      	ldr	r5, [pc, #44]	; (8012984 <uart0_putc+0x38>)
 8012956:	2107      	movs	r1, #7
 8012958:	4628      	mov	r0, r5
 801295a:	f000 ff2b 	bl	80137b4 <usart_flag_get>
 801295e:	2800      	cmp	r0, #0
 8012960:	d0f9      	beq.n	8012956 <uart0_putc+0xa>
 8012962:	220d      	movs	r2, #13
 8012964:	4b08      	ldr	r3, [pc, #32]	; (8012988 <uart0_putc+0x3c>)
 8012966:	f8c3 2804 	str.w	r2, [r3, #2052]	; 0x804
 801296a:	4d06      	ldr	r5, [pc, #24]	; (8012984 <uart0_putc+0x38>)
 801296c:	2107      	movs	r1, #7
 801296e:	4628      	mov	r0, r5
 8012970:	f000 ff20 	bl	80137b4 <usart_flag_get>
 8012974:	2800      	cmp	r0, #0
 8012976:	d0f9      	beq.n	801296c <uart0_putc+0x20>
 8012978:	4b03      	ldr	r3, [pc, #12]	; (8012988 <uart0_putc+0x3c>)
 801297a:	b2e4      	uxtb	r4, r4
 801297c:	f8c3 4804 	str.w	r4, [r3, #2052]	; 0x804
 8012980:	bd38      	pop	{r3, r4, r5, pc}
 8012982:	bf00      	nop
 8012984:	40013800 	andmi	r3, r1, r0, lsl #16
 8012988:	40013000 	andmi	r3, r1, r0

0801298c <uart0_puts>:
 801298c:	b510      	push	{r4, lr}
 801298e:	1e44      	subs	r4, r0, #1
 8012990:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8012994:	b903      	cbnz	r3, 8012998 <uart0_puts+0xc>
 8012996:	bd10      	pop	{r4, pc}
 8012998:	2b0a      	cmp	r3, #10
 801299a:	d102      	bne.n	80129a2 <uart0_puts+0x16>
 801299c:	200d      	movs	r0, #13
 801299e:	f7ff ffd5 	bl	801294c <uart0_putc>
 80129a2:	7820      	ldrb	r0, [r4, #0]
 80129a4:	f7ff ffd2 	bl	801294c <uart0_putc>
 80129a8:	e7f2      	b.n	8012990 <uart0_puts+0x4>
	...

080129ac <systick_config>:
 80129ac:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80129b0:	4b0b      	ldr	r3, [pc, #44]	; (80129e0 <systick_config+0x34>)
 80129b2:	681b      	ldr	r3, [r3, #0]
 80129b4:	fbb3 f3f2 	udiv	r3, r3, r2
 80129b8:	3b01      	subs	r3, #1
 80129ba:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 80129be:	d20d      	bcs.n	80129dc <systick_config+0x30>
 80129c0:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 80129c4:	21f0      	movs	r1, #240	; 0xf0
 80129c6:	6153      	str	r3, [r2, #20]
 80129c8:	4b06      	ldr	r3, [pc, #24]	; (80129e4 <systick_config+0x38>)
 80129ca:	2007      	movs	r0, #7
 80129cc:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 80129d0:	2100      	movs	r1, #0
 80129d2:	6191      	str	r1, [r2, #24]
 80129d4:	6110      	str	r0, [r2, #16]
 80129d6:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 80129da:	4770      	bx	lr
 80129dc:	e7fe      	b.n	80129dc <systick_config+0x30>
 80129de:	bf00      	nop
 80129e0:	200000e4 	andcs	r0, r0, r4, ror #1
 80129e4:	e000ed00 	and	lr, r0, r0, lsl #26

080129e8 <SysTick_Handler>:
 80129e8:	4a02      	ldr	r2, [pc, #8]	; (80129f4 <SysTick_Handler+0xc>)
 80129ea:	6813      	ldr	r3, [r2, #0]
 80129ec:	3301      	adds	r3, #1
 80129ee:	6013      	str	r3, [r2, #0]
 80129f0:	4770      	bx	lr
 80129f2:	bf00      	nop
 80129f4:	2001a964 	andcs	sl, r1, r4, ror #18

080129f8 <SystemInit>:
 80129f8:	4b3a      	ldr	r3, [pc, #232]	; (8012ae4 <SystemInit+0xec>)
 80129fa:	681a      	ldr	r2, [r3, #0]
 80129fc:	f042 0201 	orr.w	r2, r2, #1
 8012a00:	601a      	str	r2, [r3, #0]
 8012a02:	6859      	ldr	r1, [r3, #4]
 8012a04:	4a38      	ldr	r2, [pc, #224]	; (8012ae8 <SystemInit+0xf0>)
 8012a06:	400a      	ands	r2, r1
 8012a08:	605a      	str	r2, [r3, #4]
 8012a0a:	681a      	ldr	r2, [r3, #0]
 8012a0c:	f44f 017f 	mov.w	r1, #16711680	; 0xff0000
 8012a10:	f022 7284 	bic.w	r2, r2, #17301504	; 0x1080000
 8012a14:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8012a18:	601a      	str	r2, [r3, #0]
 8012a1a:	681a      	ldr	r2, [r3, #0]
 8012a1c:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8012a20:	601a      	str	r2, [r3, #0]
 8012a22:	685a      	ldr	r2, [r3, #4]
 8012a24:	f022 5203 	bic.w	r2, r2, #549453824	; 0x20c00000
 8012a28:	f422 127c 	bic.w	r2, r2, #4128768	; 0x3f0000
 8012a2c:	605a      	str	r2, [r3, #4]
 8012a2e:	681a      	ldr	r2, [r3, #0]
 8012a30:	f022 52a0 	bic.w	r2, r2, #335544320	; 0x14000000
 8012a34:	601a      	str	r2, [r3, #0]
 8012a36:	2200      	movs	r2, #0
 8012a38:	62da      	str	r2, [r3, #44]	; 0x2c
 8012a3a:	6099      	str	r1, [r3, #8]
 8012a3c:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 8012a40:	f8d3 2090 	ldr.w	r2, [r3, #144]	; 0x90
 8012a44:	f022 5280 	bic.w	r2, r2, #268435456	; 0x10000000
 8012a48:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
 8012a4c:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
 8012a50:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
 8012a54:	4a25      	ldr	r2, [pc, #148]	; (8012aec <SystemInit+0xf4>)
 8012a56:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
 8012a5a:	681a      	ldr	r2, [r3, #0]
 8012a5c:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8012a60:	601a      	str	r2, [r3, #0]
 8012a62:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8012a66:	6819      	ldr	r1, [r3, #0]
 8012a68:	0389      	lsls	r1, r1, #14
 8012a6a:	d401      	bmi.n	8012a70 <SystemInit+0x78>
 8012a6c:	3a01      	subs	r2, #1
 8012a6e:	d1fa      	bne.n	8012a66 <SystemInit+0x6e>
 8012a70:	681a      	ldr	r2, [r3, #0]
 8012a72:	0392      	lsls	r2, r2, #14
 8012a74:	d400      	bmi.n	8012a78 <SystemInit+0x80>
 8012a76:	e7fe      	b.n	8012a76 <SystemInit+0x7e>
 8012a78:	685a      	ldr	r2, [r3, #4]
 8012a7a:	605a      	str	r2, [r3, #4]
 8012a7c:	685a      	ldr	r2, [r3, #4]
 8012a7e:	605a      	str	r2, [r3, #4]
 8012a80:	685a      	ldr	r2, [r3, #4]
 8012a82:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8012a86:	605a      	str	r2, [r3, #4]
 8012a88:	685a      	ldr	r2, [r3, #4]
 8012a8a:	f022 5200 	bic.w	r2, r2, #536870912	; 0x20000000
 8012a8e:	f422 127c 	bic.w	r2, r2, #4128768	; 0x3f0000
 8012a92:	605a      	str	r2, [r3, #4]
 8012a94:	685a      	ldr	r2, [r3, #4]
 8012a96:	f442 1204 	orr.w	r2, r2, #2162688	; 0x210000
 8012a9a:	605a      	str	r2, [r3, #4]
 8012a9c:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8012a9e:	4a14      	ldr	r2, [pc, #80]	; (8012af0 <SystemInit+0xf8>)
 8012aa0:	400a      	ands	r2, r1
 8012aa2:	62da      	str	r2, [r3, #44]	; 0x2c
 8012aa4:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8012aa6:	f442 3285 	orr.w	r2, r2, #68096	; 0x10a00
 8012aaa:	f042 0244 	orr.w	r2, r2, #68	; 0x44
 8012aae:	62da      	str	r2, [r3, #44]	; 0x2c
 8012ab0:	681a      	ldr	r2, [r3, #0]
 8012ab2:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8012ab6:	601a      	str	r2, [r3, #0]
 8012ab8:	681a      	ldr	r2, [r3, #0]
 8012aba:	0110      	lsls	r0, r2, #4
 8012abc:	d5fc      	bpl.n	8012ab8 <SystemInit+0xc0>
 8012abe:	681a      	ldr	r2, [r3, #0]
 8012ac0:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 8012ac4:	601a      	str	r2, [r3, #0]
 8012ac6:	681a      	ldr	r2, [r3, #0]
 8012ac8:	0191      	lsls	r1, r2, #6
 8012aca:	d5fc      	bpl.n	8012ac6 <SystemInit+0xce>
 8012acc:	685a      	ldr	r2, [r3, #4]
 8012ace:	f022 0203 	bic.w	r2, r2, #3
 8012ad2:	605a      	str	r2, [r3, #4]
 8012ad4:	685a      	ldr	r2, [r3, #4]
 8012ad6:	f042 0202 	orr.w	r2, r2, #2
 8012ada:	605a      	str	r2, [r3, #4]
 8012adc:	685a      	ldr	r2, [r3, #4]
 8012ade:	0712      	lsls	r2, r2, #28
 8012ae0:	d5fc      	bpl.n	8012adc <SystemInit+0xe4>
 8012ae2:	4770      	bx	lr
 8012ae4:	40021000 	andmi	r1, r2, r0
 8012ae8:	e0ff000c 	rscs	r0, pc, ip
 8012aec:	20003010 	andcs	r3, r0, r0, lsl r0
 8012af0:	fffef000 			; <UNDEFINED> instruction: 0xfffef000

08012af4 <bkp_data_write>:
 8012af4:	f1a0 030b 	sub.w	r3, r0, #11
 8012af8:	2b1f      	cmp	r3, #31
 8012afa:	d804      	bhi.n	8012b06 <bkp_data_write+0x12>
 8012afc:	4b07      	ldr	r3, [pc, #28]	; (8012b1c <bkp_data_write+0x28>)
 8012afe:	4403      	add	r3, r0
 8012b00:	009b      	lsls	r3, r3, #2
 8012b02:	8019      	strh	r1, [r3, #0]
 8012b04:	4770      	bx	lr
 8012b06:	1e43      	subs	r3, r0, #1
 8012b08:	2b09      	cmp	r3, #9
 8012b0a:	bf9f      	itttt	ls
 8012b0c:	f100 5080 	addls.w	r0, r0, #268435456	; 0x10000000
 8012b10:	f500 50d8 	addls.w	r0, r0, #6912	; 0x1b00
 8012b14:	0080      	lslls	r0, r0, #2
 8012b16:	8001      	strhls	r1, [r0, #0]
 8012b18:	4770      	bx	lr
 8012b1a:	bf00      	nop
 8012b1c:	10001b05 	andne	r1, r0, r5, lsl #22

08012b20 <bkp_data_read>:
 8012b20:	f1a0 030b 	sub.w	r3, r0, #11
 8012b24:	2b1f      	cmp	r3, #31
 8012b26:	d805      	bhi.n	8012b34 <bkp_data_read+0x14>
 8012b28:	4b08      	ldr	r3, [pc, #32]	; (8012b4c <bkp_data_read+0x2c>)
 8012b2a:	4403      	add	r3, r0
 8012b2c:	009b      	lsls	r3, r3, #2
 8012b2e:	8818      	ldrh	r0, [r3, #0]
 8012b30:	b280      	uxth	r0, r0
 8012b32:	4770      	bx	lr
 8012b34:	1e43      	subs	r3, r0, #1
 8012b36:	2b09      	cmp	r3, #9
 8012b38:	d806      	bhi.n	8012b48 <bkp_data_read+0x28>
 8012b3a:	f100 5080 	add.w	r0, r0, #268435456	; 0x10000000
 8012b3e:	f500 50d8 	add.w	r0, r0, #6912	; 0x1b00
 8012b42:	0080      	lsls	r0, r0, #2
 8012b44:	8800      	ldrh	r0, [r0, #0]
 8012b46:	e7f3      	b.n	8012b30 <bkp_data_read+0x10>
 8012b48:	2000      	movs	r0, #0
 8012b4a:	4770      	bx	lr
 8012b4c:	10001b05 	andne	r1, r0, r5, lsl #22

08012b50 <dma_deinit>:
 8012b50:	2314      	movs	r3, #20
 8012b52:	fb03 0301 	mla	r3, r3, r1, r0
 8012b56:	689a      	ldr	r2, [r3, #8]
 8012b58:	b530      	push	{r4, r5, lr}
 8012b5a:	f022 0201 	bic.w	r2, r2, #1
 8012b5e:	609a      	str	r2, [r3, #8]
 8012b60:	2200      	movs	r2, #0
 8012b62:	609a      	str	r2, [r3, #8]
 8012b64:	60da      	str	r2, [r3, #12]
 8012b66:	611a      	str	r2, [r3, #16]
 8012b68:	615a      	str	r2, [r3, #20]
 8012b6a:	230f      	movs	r3, #15
 8012b6c:	6844      	ldr	r4, [r0, #4]
 8012b6e:	008d      	lsls	r5, r1, #2
 8012b70:	40ab      	lsls	r3, r5
 8012b72:	4323      	orrs	r3, r4
 8012b74:	6043      	str	r3, [r0, #4]
 8012b76:	4b04      	ldr	r3, [pc, #16]	; (8012b88 <dma_deinit+0x38>)
 8012b78:	4298      	cmp	r0, r3
 8012b7a:	d103      	bne.n	8012b84 <dma_deinit+0x34>
 8012b7c:	2905      	cmp	r1, #5
 8012b7e:	bf08      	it	eq
 8012b80:	f8c3 2300 	streq.w	r2, [r3, #768]	; 0x300
 8012b84:	bd30      	pop	{r4, r5, pc}
 8012b86:	bf00      	nop
 8012b88:	40020400 	andmi	r0, r2, r0, lsl #8

08012b8c <dma_struct_para_init>:
 8012b8c:	2300      	movs	r3, #0
 8012b8e:	e9c0 3300 	strd	r3, r3, [r0]
 8012b92:	e9c0 3302 	strd	r3, r3, [r0, #8]
 8012b96:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8012b9a:	8303      	strh	r3, [r0, #24]
 8012b9c:	7683      	strb	r3, [r0, #26]
 8012b9e:	4770      	bx	lr

08012ba0 <dma_init>:
 8012ba0:	2314      	movs	r3, #20
 8012ba2:	fb03 0101 	mla	r1, r3, r1, r0
 8012ba6:	6813      	ldr	r3, [r2, #0]
 8012ba8:	b510      	push	{r4, lr}
 8012baa:	610b      	str	r3, [r1, #16]
 8012bac:	6893      	ldr	r3, [r2, #8]
 8012bae:	614b      	str	r3, [r1, #20]
 8012bb0:	8a13      	ldrh	r3, [r2, #16]
 8012bb2:	60cb      	str	r3, [r1, #12]
 8012bb4:	68d4      	ldr	r4, [r2, #12]
 8012bb6:	6853      	ldr	r3, [r2, #4]
 8012bb8:	6888      	ldr	r0, [r1, #8]
 8012bba:	4323      	orrs	r3, r4
 8012bbc:	6954      	ldr	r4, [r2, #20]
 8012bbe:	f420 507c 	bic.w	r0, r0, #16128	; 0x3f00
 8012bc2:	4323      	orrs	r3, r4
 8012bc4:	4303      	orrs	r3, r0
 8012bc6:	608b      	str	r3, [r1, #8]
 8012bc8:	7e13      	ldrb	r3, [r2, #24]
 8012bca:	2b01      	cmp	r3, #1
 8012bcc:	688b      	ldr	r3, [r1, #8]
 8012bce:	bf0c      	ite	eq
 8012bd0:	f043 0340 	orreq.w	r3, r3, #64	; 0x40
 8012bd4:	f023 0340 	bicne.w	r3, r3, #64	; 0x40
 8012bd8:	608b      	str	r3, [r1, #8]
 8012bda:	7e53      	ldrb	r3, [r2, #25]
 8012bdc:	2b01      	cmp	r3, #1
 8012bde:	688b      	ldr	r3, [r1, #8]
 8012be0:	bf0c      	ite	eq
 8012be2:	f043 0380 	orreq.w	r3, r3, #128	; 0x80
 8012be6:	f023 0380 	bicne.w	r3, r3, #128	; 0x80
 8012bea:	608b      	str	r3, [r1, #8]
 8012bec:	7e93      	ldrb	r3, [r2, #26]
 8012bee:	b923      	cbnz	r3, 8012bfa <dma_init+0x5a>
 8012bf0:	688b      	ldr	r3, [r1, #8]
 8012bf2:	f023 0310 	bic.w	r3, r3, #16
 8012bf6:	608b      	str	r3, [r1, #8]
 8012bf8:	bd10      	pop	{r4, pc}
 8012bfa:	688b      	ldr	r3, [r1, #8]
 8012bfc:	f043 0310 	orr.w	r3, r3, #16
 8012c00:	e7f9      	b.n	8012bf6 <dma_init+0x56>

08012c02 <dma_circulation_disable>:
 8012c02:	2314      	movs	r3, #20
 8012c04:	4359      	muls	r1, r3
 8012c06:	3008      	adds	r0, #8
 8012c08:	580b      	ldr	r3, [r1, r0]
 8012c0a:	f023 0320 	bic.w	r3, r3, #32
 8012c0e:	500b      	str	r3, [r1, r0]
 8012c10:	4770      	bx	lr

08012c12 <dma_memory_to_memory_disable>:
 8012c12:	2314      	movs	r3, #20
 8012c14:	4359      	muls	r1, r3
 8012c16:	3008      	adds	r0, #8
 8012c18:	580b      	ldr	r3, [r1, r0]
 8012c1a:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8012c1e:	500b      	str	r3, [r1, r0]
 8012c20:	4770      	bx	lr
	...

08012c24 <fmc_bank0_unlock>:
 8012c24:	4b04      	ldr	r3, [pc, #16]	; (8012c38 <fmc_bank0_unlock+0x14>)
 8012c26:	691a      	ldr	r2, [r3, #16]
 8012c28:	0612      	lsls	r2, r2, #24
 8012c2a:	bf41      	itttt	mi
 8012c2c:	4a03      	ldrmi	r2, [pc, #12]	; (8012c3c <fmc_bank0_unlock+0x18>)
 8012c2e:	605a      	strmi	r2, [r3, #4]
 8012c30:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 8012c34:	605a      	strmi	r2, [r3, #4]
 8012c36:	4770      	bx	lr
 8012c38:	40022000 	andmi	r2, r2, r0
 8012c3c:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

08012c40 <fmc_bank1_unlock>:
 8012c40:	4b04      	ldr	r3, [pc, #16]	; (8012c54 <fmc_bank1_unlock+0x14>)
 8012c42:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8012c44:	0612      	lsls	r2, r2, #24
 8012c46:	bf41      	itttt	mi
 8012c48:	4a03      	ldrmi	r2, [pc, #12]	; (8012c58 <fmc_bank1_unlock+0x18>)
 8012c4a:	645a      	strmi	r2, [r3, #68]	; 0x44
 8012c4c:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 8012c50:	645a      	strmi	r2, [r3, #68]	; 0x44
 8012c52:	4770      	bx	lr
 8012c54:	40022000 	andmi	r2, r2, r0
 8012c58:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

08012c5c <fmc_bank0_lock>:
 8012c5c:	4a02      	ldr	r2, [pc, #8]	; (8012c68 <fmc_bank0_lock+0xc>)
 8012c5e:	6913      	ldr	r3, [r2, #16]
 8012c60:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8012c64:	6113      	str	r3, [r2, #16]
 8012c66:	4770      	bx	lr
 8012c68:	40022000 	andmi	r2, r2, r0

08012c6c <fmc_bank1_lock>:
 8012c6c:	4a02      	ldr	r2, [pc, #8]	; (8012c78 <fmc_bank1_lock+0xc>)
 8012c6e:	6d13      	ldr	r3, [r2, #80]	; 0x50
 8012c70:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8012c74:	6513      	str	r3, [r2, #80]	; 0x50
 8012c76:	4770      	bx	lr
 8012c78:	40022000 	andmi	r2, r2, r0

08012c7c <fmc_bank0_state_get>:
 8012c7c:	4b07      	ldr	r3, [pc, #28]	; (8012c9c <fmc_bank0_state_get+0x20>)
 8012c7e:	68da      	ldr	r2, [r3, #12]
 8012c80:	07d1      	lsls	r1, r2, #31
 8012c82:	d407      	bmi.n	8012c94 <fmc_bank0_state_get+0x18>
 8012c84:	68da      	ldr	r2, [r3, #12]
 8012c86:	06d2      	lsls	r2, r2, #27
 8012c88:	d406      	bmi.n	8012c98 <fmc_bank0_state_get+0x1c>
 8012c8a:	68d8      	ldr	r0, [r3, #12]
 8012c8c:	f3c0 0080 	ubfx	r0, r0, #2, #1
 8012c90:	0040      	lsls	r0, r0, #1
 8012c92:	4770      	bx	lr
 8012c94:	2001      	movs	r0, #1
 8012c96:	4770      	bx	lr
 8012c98:	2003      	movs	r0, #3
 8012c9a:	4770      	bx	lr
 8012c9c:	40022000 	andmi	r2, r2, r0

08012ca0 <fmc_bank1_state_get>:
 8012ca0:	4b07      	ldr	r3, [pc, #28]	; (8012cc0 <fmc_bank1_state_get+0x20>)
 8012ca2:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8012ca4:	07d1      	lsls	r1, r2, #31
 8012ca6:	d407      	bmi.n	8012cb8 <fmc_bank1_state_get+0x18>
 8012ca8:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8012caa:	06d2      	lsls	r2, r2, #27
 8012cac:	d406      	bmi.n	8012cbc <fmc_bank1_state_get+0x1c>
 8012cae:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8012cb0:	f3c0 0080 	ubfx	r0, r0, #2, #1
 8012cb4:	0040      	lsls	r0, r0, #1
 8012cb6:	4770      	bx	lr
 8012cb8:	2001      	movs	r0, #1
 8012cba:	4770      	bx	lr
 8012cbc:	2003      	movs	r0, #3
 8012cbe:	4770      	bx	lr
 8012cc0:	40022000 	andmi	r2, r2, r0

08012cc4 <fwdgt_enable>:
 8012cc4:	f64c 42cc 	movw	r2, #52428	; 0xcccc
 8012cc8:	4b01      	ldr	r3, [pc, #4]	; (8012cd0 <fwdgt_enable+0xc>)
 8012cca:	601a      	str	r2, [r3, #0]
 8012ccc:	4770      	bx	lr
 8012cce:	bf00      	nop
 8012cd0:	40003000 	andmi	r3, r0, r0

08012cd4 <fwdgt_counter_reload>:
 8012cd4:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
 8012cd8:	4b01      	ldr	r3, [pc, #4]	; (8012ce0 <fwdgt_counter_reload+0xc>)
 8012cda:	601a      	str	r2, [r3, #0]
 8012cdc:	4770      	bx	lr
 8012cde:	bf00      	nop
 8012ce0:	40003000 	andmi	r3, r0, r0

08012ce4 <fwdgt_config>:
 8012ce4:	f245 5355 	movw	r3, #21845	; 0x5555
 8012ce8:	4a11      	ldr	r2, [pc, #68]	; (8012d30 <fwdgt_config+0x4c>)
 8012cea:	b510      	push	{r4, lr}
 8012cec:	4c11      	ldr	r4, [pc, #68]	; (8012d34 <fwdgt_config+0x50>)
 8012cee:	6013      	str	r3, [r2, #0]
 8012cf0:	68d3      	ldr	r3, [r2, #12]
 8012cf2:	3c01      	subs	r4, #1
 8012cf4:	f003 0301 	and.w	r3, r3, #1
 8012cf8:	d013      	beq.n	8012d22 <fwdgt_config+0x3e>
 8012cfa:	2b00      	cmp	r3, #0
 8012cfc:	d1f8      	bne.n	8012cf0 <fwdgt_config+0xc>
 8012cfe:	6051      	str	r1, [r2, #4]
 8012d00:	490c      	ldr	r1, [pc, #48]	; (8012d34 <fwdgt_config+0x50>)
 8012d02:	4a0b      	ldr	r2, [pc, #44]	; (8012d30 <fwdgt_config+0x4c>)
 8012d04:	68d3      	ldr	r3, [r2, #12]
 8012d06:	3901      	subs	r1, #1
 8012d08:	f003 0302 	and.w	r3, r3, #2
 8012d0c:	d00d      	beq.n	8012d2a <fwdgt_config+0x46>
 8012d0e:	2b00      	cmp	r3, #0
 8012d10:	d1f8      	bne.n	8012d04 <fwdgt_config+0x20>
 8012d12:	f64a 23aa 	movw	r3, #43690	; 0xaaaa
 8012d16:	f3c0 000b 	ubfx	r0, r0, #0, #12
 8012d1a:	6090      	str	r0, [r2, #8]
 8012d1c:	2001      	movs	r0, #1
 8012d1e:	6013      	str	r3, [r2, #0]
 8012d20:	e002      	b.n	8012d28 <fwdgt_config+0x44>
 8012d22:	2b00      	cmp	r3, #0
 8012d24:	d0eb      	beq.n	8012cfe <fwdgt_config+0x1a>
 8012d26:	2000      	movs	r0, #0
 8012d28:	bd10      	pop	{r4, pc}
 8012d2a:	2b00      	cmp	r3, #0
 8012d2c:	d1fb      	bne.n	8012d26 <fwdgt_config+0x42>
 8012d2e:	e7f0      	b.n	8012d12 <fwdgt_config+0x2e>
 8012d30:	40003000 	andmi	r3, r0, r0
 8012d34:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

08012d38 <gpio_init>:
 8012d38:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012d3c:	f04f 0c0f 	mov.w	ip, #15
 8012d40:	06cf      	lsls	r7, r1, #27
 8012d42:	f04f 0400 	mov.w	r4, #0
 8012d46:	f04f 0701 	mov.w	r7, #1
 8012d4a:	f001 050f 	and.w	r5, r1, #15
 8012d4e:	bf48      	it	mi
 8012d50:	4315      	orrmi	r5, r2
 8012d52:	fa23 f204 	lsr.w	r2, r3, r4
 8012d56:	07d6      	lsls	r6, r2, #31
 8012d58:	d510      	bpl.n	8012d7c <gpio_init+0x44>
 8012d5a:	00a2      	lsls	r2, r4, #2
 8012d5c:	6806      	ldr	r6, [r0, #0]
 8012d5e:	fa0c fe02 	lsl.w	lr, ip, r2
 8012d62:	ea26 060e 	bic.w	r6, r6, lr
 8012d66:	fa05 f202 	lsl.w	r2, r5, r2
 8012d6a:	2928      	cmp	r1, #40	; 0x28
 8012d6c:	ea42 0206 	orr.w	r2, r2, r6
 8012d70:	d128      	bne.n	8012dc4 <gpio_init+0x8c>
 8012d72:	fa07 f604 	lsl.w	r6, r7, r4
 8012d76:	401e      	ands	r6, r3
 8012d78:	6146      	str	r6, [r0, #20]
 8012d7a:	6002      	str	r2, [r0, #0]
 8012d7c:	3401      	adds	r4, #1
 8012d7e:	2c08      	cmp	r4, #8
 8012d80:	d1e7      	bne.n	8012d52 <gpio_init+0x1a>
 8012d82:	2600      	movs	r6, #0
 8012d84:	f04f 0c0f 	mov.w	ip, #15
 8012d88:	2701      	movs	r7, #1
 8012d8a:	f106 0208 	add.w	r2, r6, #8
 8012d8e:	fa23 f402 	lsr.w	r4, r3, r2
 8012d92:	07e4      	lsls	r4, r4, #31
 8012d94:	d511      	bpl.n	8012dba <gpio_init+0x82>
 8012d96:	00b4      	lsls	r4, r6, #2
 8012d98:	f8d0 e004 	ldr.w	lr, [r0, #4]
 8012d9c:	fa0c f804 	lsl.w	r8, ip, r4
 8012da0:	ea2e 0e08 	bic.w	lr, lr, r8
 8012da4:	fa05 f404 	lsl.w	r4, r5, r4
 8012da8:	2928      	cmp	r1, #40	; 0x28
 8012daa:	ea44 040e 	orr.w	r4, r4, lr
 8012dae:	d110      	bne.n	8012dd2 <gpio_init+0x9a>
 8012db0:	fa07 f202 	lsl.w	r2, r7, r2
 8012db4:	401a      	ands	r2, r3
 8012db6:	6142      	str	r2, [r0, #20]
 8012db8:	6044      	str	r4, [r0, #4]
 8012dba:	3601      	adds	r6, #1
 8012dbc:	2e08      	cmp	r6, #8
 8012dbe:	d1e4      	bne.n	8012d8a <gpio_init+0x52>
 8012dc0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012dc4:	2948      	cmp	r1, #72	; 0x48
 8012dc6:	bf02      	ittt	eq
 8012dc8:	fa07 f604 	lsleq.w	r6, r7, r4
 8012dcc:	401e      	andeq	r6, r3
 8012dce:	6106      	streq	r6, [r0, #16]
 8012dd0:	e7d3      	b.n	8012d7a <gpio_init+0x42>
 8012dd2:	2948      	cmp	r1, #72	; 0x48
 8012dd4:	bf02      	ittt	eq
 8012dd6:	fa07 f202 	lsleq.w	r2, r7, r2
 8012dda:	401a      	andeq	r2, r3
 8012ddc:	6102      	streq	r2, [r0, #16]
 8012dde:	e7eb      	b.n	8012db8 <gpio_init+0x80>

08012de0 <gpio_pin_remap_config>:
 8012de0:	2800      	cmp	r0, #0
 8012de2:	4a16      	ldr	r2, [pc, #88]	; (8012e3c <gpio_pin_remap_config+0x5c>)
 8012de4:	b530      	push	{r4, r5, lr}
 8012de6:	f400 1540 	and.w	r5, r0, #3145728	; 0x300000
 8012dea:	bfb4      	ite	lt
 8012dec:	69d3      	ldrlt	r3, [r2, #28]
 8012dee:	6853      	ldrge	r3, [r2, #4]
 8012df0:	f5b5 1f40 	cmp.w	r5, #3145728	; 0x300000
 8012df4:	b284      	uxth	r4, r0
 8012df6:	d110      	bne.n	8012e1a <gpio_pin_remap_config+0x3a>
 8012df8:	6855      	ldr	r5, [r2, #4]
 8012dfa:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 8012dfe:	f025 6570 	bic.w	r5, r5, #251658240	; 0xf000000
 8012e02:	6055      	str	r5, [r2, #4]
 8012e04:	b119      	cbz	r1, 8012e0e <gpio_pin_remap_config+0x2e>
 8012e06:	0d42      	lsrs	r2, r0, #21
 8012e08:	0112      	lsls	r2, r2, #4
 8012e0a:	4094      	lsls	r4, r2
 8012e0c:	4323      	orrs	r3, r4
 8012e0e:	4a0b      	ldr	r2, [pc, #44]	; (8012e3c <gpio_pin_remap_config+0x5c>)
 8012e10:	2800      	cmp	r0, #0
 8012e12:	bfb4      	ite	lt
 8012e14:	61d3      	strlt	r3, [r2, #28]
 8012e16:	6053      	strge	r3, [r2, #4]
 8012e18:	bd30      	pop	{r4, r5, pc}
 8012e1a:	02c2      	lsls	r2, r0, #11
 8012e1c:	bf4d      	iteet	mi
 8012e1e:	2203      	movmi	r2, #3
 8012e20:	0d42      	lsrpl	r2, r0, #21
 8012e22:	0112      	lslpl	r2, r2, #4
 8012e24:	f3c0 4503 	ubfxmi	r5, r0, #16, #4
 8012e28:	bf4c      	ite	mi
 8012e2a:	40aa      	lslmi	r2, r5
 8012e2c:	fa04 f202 	lslpl.w	r2, r4, r2
 8012e30:	ea23 0302 	bic.w	r3, r3, r2
 8012e34:	f043 6370 	orr.w	r3, r3, #251658240	; 0xf000000
 8012e38:	e7e4      	b.n	8012e04 <gpio_pin_remap_config+0x24>
 8012e3a:	bf00      	nop
 8012e3c:	40010000 	andmi	r0, r1, r0

08012e40 <gpio_ethernet_phy_select>:
 8012e40:	4b04      	ldr	r3, [pc, #16]	; (8012e54 <gpio_ethernet_phy_select+0x14>)
 8012e42:	685a      	ldr	r2, [r3, #4]
 8012e44:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8012e48:	605a      	str	r2, [r3, #4]
 8012e4a:	685a      	ldr	r2, [r3, #4]
 8012e4c:	4302      	orrs	r2, r0
 8012e4e:	605a      	str	r2, [r3, #4]
 8012e50:	4770      	bx	lr
 8012e52:	bf00      	nop
 8012e54:	40010000 	andmi	r0, r1, r0

08012e58 <pmu_backup_write_enable>:
 8012e58:	4a02      	ldr	r2, [pc, #8]	; (8012e64 <pmu_backup_write_enable+0xc>)
 8012e5a:	6813      	ldr	r3, [r2, #0]
 8012e5c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8012e60:	6013      	str	r3, [r2, #0]
 8012e62:	4770      	bx	lr
 8012e64:	40007000 	andmi	r7, r0, r0

08012e68 <rcu_periph_clock_enable>:
 8012e68:	2201      	movs	r2, #1
 8012e6a:	0983      	lsrs	r3, r0, #6
 8012e6c:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8012e70:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 8012e74:	6819      	ldr	r1, [r3, #0]
 8012e76:	f000 001f 	and.w	r0, r0, #31
 8012e7a:	4082      	lsls	r2, r0
 8012e7c:	430a      	orrs	r2, r1
 8012e7e:	601a      	str	r2, [r3, #0]
 8012e80:	4770      	bx	lr

08012e82 <rcu_periph_clock_disable>:
 8012e82:	2101      	movs	r1, #1
 8012e84:	0983      	lsrs	r3, r0, #6
 8012e86:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8012e8a:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 8012e8e:	681a      	ldr	r2, [r3, #0]
 8012e90:	f000 001f 	and.w	r0, r0, #31
 8012e94:	4081      	lsls	r1, r0
 8012e96:	ea22 0201 	bic.w	r2, r2, r1
 8012e9a:	601a      	str	r2, [r3, #0]
 8012e9c:	4770      	bx	lr

08012e9e <rcu_periph_reset_enable>:
 8012e9e:	f7ff bfe3 	b.w	8012e68 <rcu_periph_clock_enable>

08012ea2 <rcu_periph_reset_disable>:
 8012ea2:	f7ff bfee 	b.w	8012e82 <rcu_periph_clock_disable>
	...

08012ea8 <rcu_ckout0_config>:
 8012ea8:	4a06      	ldr	r2, [pc, #24]	; (8012ec4 <rcu_ckout0_config+0x1c>)
 8012eaa:	6853      	ldr	r3, [r2, #4]
 8012eac:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 8012eb0:	4303      	orrs	r3, r0
 8012eb2:	6053      	str	r3, [r2, #4]
 8012eb4:	f8d2 3080 	ldr.w	r3, [r2, #128]	; 0x80
 8012eb8:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8012ebc:	430b      	orrs	r3, r1
 8012ebe:	f8c2 3080 	str.w	r3, [r2, #128]	; 0x80
 8012ec2:	4770      	bx	lr
 8012ec4:	40021000 	andmi	r1, r2, r0

08012ec8 <rcu_pll2_config>:
 8012ec8:	4b04      	ldr	r3, [pc, #16]	; (8012edc <rcu_pll2_config+0x14>)
 8012eca:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8012ecc:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
 8012ed0:	62da      	str	r2, [r3, #44]	; 0x2c
 8012ed2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8012ed4:	4302      	orrs	r2, r0
 8012ed6:	62da      	str	r2, [r3, #44]	; 0x2c
 8012ed8:	4770      	bx	lr
 8012eda:	bf00      	nop
 8012edc:	40021000 	andmi	r1, r2, r0

08012ee0 <rcu_adc_clock_config>:
 8012ee0:	490c      	ldr	r1, [pc, #48]	; (8012f14 <rcu_adc_clock_config+0x34>)
 8012ee2:	2805      	cmp	r0, #5
 8012ee4:	684b      	ldr	r3, [r1, #4]
 8012ee6:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8012eea:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 8012eee:	d006      	beq.n	8012efe <rcu_adc_clock_config+0x1e>
 8012ef0:	d803      	bhi.n	8012efa <rcu_adc_clock_config+0x1a>
 8012ef2:	2804      	cmp	r0, #4
 8012ef4:	d10a      	bne.n	8012f0c <rcu_adc_clock_config+0x2c>
 8012ef6:	604b      	str	r3, [r1, #4]
 8012ef8:	4770      	bx	lr
 8012efa:	2807      	cmp	r0, #7
 8012efc:	d1fb      	bne.n	8012ef6 <rcu_adc_clock_config+0x16>
 8012efe:	4a06      	ldr	r2, [pc, #24]	; (8012f18 <rcu_adc_clock_config+0x38>)
 8012f00:	ea02 3280 	and.w	r2, r2, r0, lsl #14
 8012f04:	4313      	orrs	r3, r2
 8012f06:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8012f0a:	e7f4      	b.n	8012ef6 <rcu_adc_clock_config+0x16>
 8012f0c:	ea43 3380 	orr.w	r3, r3, r0, lsl #14
 8012f10:	e7f1      	b.n	8012ef6 <rcu_adc_clock_config+0x16>
 8012f12:	bf00      	nop
 8012f14:	40021000 	andmi	r1, r2, r0
 8012f18:	fffec000 			; <UNDEFINED> instruction: 0xfffec000

08012f1c <rcu_flag_get>:
 8012f1c:	0983      	lsrs	r3, r0, #6
 8012f1e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8012f22:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 8012f26:	681a      	ldr	r2, [r3, #0]
 8012f28:	2301      	movs	r3, #1
 8012f2a:	f000 001f 	and.w	r0, r0, #31
 8012f2e:	4083      	lsls	r3, r0
 8012f30:	4213      	tst	r3, r2
 8012f32:	bf14      	ite	ne
 8012f34:	2001      	movne	r0, #1
 8012f36:	2000      	moveq	r0, #0
 8012f38:	4770      	bx	lr
	...

08012f3c <rcu_osci_stab_wait>:
 8012f3c:	281c      	cmp	r0, #28
 8012f3e:	b508      	push	{r3, lr}
 8012f40:	d056      	beq.n	8012ff0 <rcu_osci_stab_wait+0xb4>
 8012f42:	d812      	bhi.n	8012f6a <rcu_osci_stab_wait+0x2e>
 8012f44:	2818      	cmp	r0, #24
 8012f46:	d04a      	beq.n	8012fde <rcu_osci_stab_wait+0xa2>
 8012f48:	d804      	bhi.n	8012f54 <rcu_osci_stab_wait+0x18>
 8012f4a:	b398      	cbz	r0, 8012fb4 <rcu_osci_stab_wait+0x78>
 8012f4c:	2810      	cmp	r0, #16
 8012f4e:	d022      	beq.n	8012f96 <rcu_osci_stab_wait+0x5a>
 8012f50:	2000      	movs	r0, #0
 8012f52:	bd08      	pop	{r3, pc}
 8012f54:	281a      	cmp	r0, #26
 8012f56:	d1fb      	bne.n	8012f50 <rcu_osci_stab_wait+0x14>
 8012f58:	492f      	ldr	r1, [pc, #188]	; (8013018 <rcu_osci_stab_wait+0xdc>)
 8012f5a:	201b      	movs	r0, #27
 8012f5c:	f7ff ffde 	bl	8012f1c <rcu_flag_get>
 8012f60:	b908      	cbnz	r0, 8012f66 <rcu_osci_stab_wait+0x2a>
 8012f62:	3901      	subs	r1, #1
 8012f64:	d1f9      	bne.n	8012f5a <rcu_osci_stab_wait+0x1e>
 8012f66:	201b      	movs	r0, #27
 8012f68:	e01e      	b.n	8012fa8 <rcu_osci_stab_wait+0x6c>
 8012f6a:	f5b0 6f10 	cmp.w	r0, #2304	; 0x900
 8012f6e:	d02b      	beq.n	8012fc8 <rcu_osci_stab_wait+0x8c>
 8012f70:	f242 431c 	movw	r3, #9244	; 0x241c
 8012f74:	4298      	cmp	r0, r3
 8012f76:	d044      	beq.n	8013002 <rcu_osci_stab_wait+0xc6>
 8012f78:	f5b0 6f00 	cmp.w	r0, #2048	; 0x800
 8012f7c:	d1e8      	bne.n	8012f50 <rcu_osci_stab_wait+0x14>
 8012f7e:	f06f 417c 	mvn.w	r1, #4227858432	; 0xfc000000
 8012f82:	f640 0001 	movw	r0, #2049	; 0x801
 8012f86:	f7ff ffc9 	bl	8012f1c <rcu_flag_get>
 8012f8a:	b908      	cbnz	r0, 8012f90 <rcu_osci_stab_wait+0x54>
 8012f8c:	3901      	subs	r1, #1
 8012f8e:	d1f8      	bne.n	8012f82 <rcu_osci_stab_wait+0x46>
 8012f90:	f640 0001 	movw	r0, #2049	; 0x801
 8012f94:	e008      	b.n	8012fa8 <rcu_osci_stab_wait+0x6c>
 8012f96:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8012f9a:	2011      	movs	r0, #17
 8012f9c:	f7ff ffbe 	bl	8012f1c <rcu_flag_get>
 8012fa0:	b908      	cbnz	r0, 8012fa6 <rcu_osci_stab_wait+0x6a>
 8012fa2:	3901      	subs	r1, #1
 8012fa4:	d1f9      	bne.n	8012f9a <rcu_osci_stab_wait+0x5e>
 8012fa6:	2011      	movs	r0, #17
 8012fa8:	f7ff ffb8 	bl	8012f1c <rcu_flag_get>
 8012fac:	3800      	subs	r0, #0
 8012fae:	bf18      	it	ne
 8012fb0:	2001      	movne	r0, #1
 8012fb2:	e7ce      	b.n	8012f52 <rcu_osci_stab_wait+0x16>
 8012fb4:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8012fb8:	2001      	movs	r0, #1
 8012fba:	f7ff ffaf 	bl	8012f1c <rcu_flag_get>
 8012fbe:	b908      	cbnz	r0, 8012fc4 <rcu_osci_stab_wait+0x88>
 8012fc0:	3901      	subs	r1, #1
 8012fc2:	d1f9      	bne.n	8012fb8 <rcu_osci_stab_wait+0x7c>
 8012fc4:	2001      	movs	r0, #1
 8012fc6:	e7ef      	b.n	8012fa8 <rcu_osci_stab_wait+0x6c>
 8012fc8:	4913      	ldr	r1, [pc, #76]	; (8013018 <rcu_osci_stab_wait+0xdc>)
 8012fca:	f640 1001 	movw	r0, #2305	; 0x901
 8012fce:	f7ff ffa5 	bl	8012f1c <rcu_flag_get>
 8012fd2:	b908      	cbnz	r0, 8012fd8 <rcu_osci_stab_wait+0x9c>
 8012fd4:	3901      	subs	r1, #1
 8012fd6:	d1f8      	bne.n	8012fca <rcu_osci_stab_wait+0x8e>
 8012fd8:	f640 1001 	movw	r0, #2305	; 0x901
 8012fdc:	e7e4      	b.n	8012fa8 <rcu_osci_stab_wait+0x6c>
 8012fde:	490e      	ldr	r1, [pc, #56]	; (8013018 <rcu_osci_stab_wait+0xdc>)
 8012fe0:	2019      	movs	r0, #25
 8012fe2:	f7ff ff9b 	bl	8012f1c <rcu_flag_get>
 8012fe6:	b908      	cbnz	r0, 8012fec <rcu_osci_stab_wait+0xb0>
 8012fe8:	3901      	subs	r1, #1
 8012fea:	d1f9      	bne.n	8012fe0 <rcu_osci_stab_wait+0xa4>
 8012fec:	2019      	movs	r0, #25
 8012fee:	e7db      	b.n	8012fa8 <rcu_osci_stab_wait+0x6c>
 8012ff0:	4909      	ldr	r1, [pc, #36]	; (8013018 <rcu_osci_stab_wait+0xdc>)
 8012ff2:	201d      	movs	r0, #29
 8012ff4:	f7ff ff92 	bl	8012f1c <rcu_flag_get>
 8012ff8:	b908      	cbnz	r0, 8012ffe <rcu_osci_stab_wait+0xc2>
 8012ffa:	3901      	subs	r1, #1
 8012ffc:	d1f9      	bne.n	8012ff2 <rcu_osci_stab_wait+0xb6>
 8012ffe:	201d      	movs	r0, #29
 8013000:	e7d2      	b.n	8012fa8 <rcu_osci_stab_wait+0x6c>
 8013002:	4905      	ldr	r1, [pc, #20]	; (8013018 <rcu_osci_stab_wait+0xdc>)
 8013004:	f242 401d 	movw	r0, #9245	; 0x241d
 8013008:	f7ff ff88 	bl	8012f1c <rcu_flag_get>
 801300c:	b908      	cbnz	r0, 8013012 <rcu_osci_stab_wait+0xd6>
 801300e:	3901      	subs	r1, #1
 8013010:	d1f8      	bne.n	8013004 <rcu_osci_stab_wait+0xc8>
 8013012:	f242 401d 	movw	r0, #9245	; 0x241d
 8013016:	e7c7      	b.n	8012fa8 <rcu_osci_stab_wait+0x6c>
 8013018:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

0801301c <rcu_osci_on>:
 801301c:	f7ff bf24 	b.w	8012e68 <rcu_periph_clock_enable>

08013020 <rcu_clock_freq_get>:
 8013020:	4b3e      	ldr	r3, [pc, #248]	; (801311c <rcu_clock_freq_get+0xfc>)
 8013022:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013024:	4604      	mov	r4, r0
 8013026:	461f      	mov	r7, r3
 8013028:	b089      	sub	sp, #36	; 0x24
 801302a:	ad04      	add	r5, sp, #16
 801302c:	f103 0610 	add.w	r6, r3, #16
 8013030:	462a      	mov	r2, r5
 8013032:	6818      	ldr	r0, [r3, #0]
 8013034:	6859      	ldr	r1, [r3, #4]
 8013036:	3308      	adds	r3, #8
 8013038:	c203      	stmia	r2!, {r0, r1}
 801303a:	42b3      	cmp	r3, r6
 801303c:	4615      	mov	r5, r2
 801303e:	d1f7      	bne.n	8013030 <rcu_clock_freq_get+0x10>
 8013040:	466b      	mov	r3, sp
 8013042:	6938      	ldr	r0, [r7, #16]
 8013044:	6871      	ldr	r1, [r6, #4]
 8013046:	4a36      	ldr	r2, [pc, #216]	; (8013120 <rcu_clock_freq_get+0x100>)
 8013048:	c303      	stmia	r3!, {r0, r1}
 801304a:	c303      	stmia	r3!, {r0, r1}
 801304c:	6853      	ldr	r3, [r2, #4]
 801304e:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8013052:	2b01      	cmp	r3, #1
 8013054:	d053      	beq.n	80130fe <rcu_clock_freq_get+0xde>
 8013056:	2b02      	cmp	r3, #2
 8013058:	d153      	bne.n	8013102 <rcu_clock_freq_get+0xe2>
 801305a:	6853      	ldr	r3, [r2, #4]
 801305c:	03dd      	lsls	r5, r3, #15
 801305e:	d523      	bpl.n	80130a8 <rcu_clock_freq_get+0x88>
 8013060:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8013062:	f413 3f80 	tst.w	r3, #65536	; 0x10000
 8013066:	4b2f      	ldr	r3, [pc, #188]	; (8013124 <rcu_clock_freq_get+0x104>)
 8013068:	d00e      	beq.n	8013088 <rcu_clock_freq_get+0x68>
 801306a:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 801306c:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
 801306e:	f3c1 1103 	ubfx	r1, r1, #4, #4
 8013072:	f3c0 2003 	ubfx	r0, r0, #8, #4
 8013076:	3101      	adds	r1, #1
 8013078:	280f      	cmp	r0, #15
 801307a:	f100 0502 	add.w	r5, r0, #2
 801307e:	fbb3 f3f1 	udiv	r3, r3, r1
 8013082:	bf08      	it	eq
 8013084:	2514      	moveq	r5, #20
 8013086:	436b      	muls	r3, r5
 8013088:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 801308a:	f001 010f 	and.w	r1, r1, #15
 801308e:	3101      	adds	r1, #1
 8013090:	fbb3 f3f1 	udiv	r3, r3, r1
 8013094:	6851      	ldr	r1, [r2, #4]
 8013096:	6850      	ldr	r0, [r2, #4]
 8013098:	f3c1 4183 	ubfx	r1, r1, #18, #4
 801309c:	0080      	lsls	r0, r0, #2
 801309e:	d505      	bpl.n	80130ac <rcu_clock_freq_get+0x8c>
 80130a0:	f041 0110 	orr.w	r1, r1, #16
 80130a4:	3101      	adds	r1, #1
 80130a6:	e027      	b.n	80130f8 <rcu_clock_freq_get+0xd8>
 80130a8:	4b1f      	ldr	r3, [pc, #124]	; (8013128 <rcu_clock_freq_get+0x108>)
 80130aa:	e7f3      	b.n	8013094 <rcu_clock_freq_get+0x74>
 80130ac:	290d      	cmp	r1, #13
 80130ae:	d120      	bne.n	80130f2 <rcu_clock_freq_get+0xd2>
 80130b0:	2006      	movs	r0, #6
 80130b2:	0859      	lsrs	r1, r3, #1
 80130b4:	fb00 1003 	mla	r0, r0, r3, r1
 80130b8:	6853      	ldr	r3, [r2, #4]
 80130ba:	6851      	ldr	r1, [r2, #4]
 80130bc:	f3c3 1303 	ubfx	r3, r3, #4, #4
 80130c0:	6852      	ldr	r2, [r2, #4]
 80130c2:	3320      	adds	r3, #32
 80130c4:	446b      	add	r3, sp
 80130c6:	f3c1 2102 	ubfx	r1, r1, #8, #3
 80130ca:	f3c2 22c2 	ubfx	r2, r2, #11, #3
 80130ce:	f813 3c10 	ldrb.w	r3, [r3, #-16]
 80130d2:	3120      	adds	r1, #32
 80130d4:	3220      	adds	r2, #32
 80130d6:	4469      	add	r1, sp
 80130d8:	446a      	add	r2, sp
 80130da:	f811 1c20 	ldrb.w	r1, [r1, #-32]
 80130de:	f812 2c18 	ldrb.w	r2, [r2, #-24]
 80130e2:	fa20 f303 	lsr.w	r3, r0, r3
 80130e6:	2c03      	cmp	r4, #3
 80130e8:	d816      	bhi.n	8013118 <rcu_clock_freq_get+0xf8>
 80130ea:	e8df f004 	tbb	[pc, r4]
 80130ee:	120f0c0d 	andne	r0, pc, #3328	; 0xd00
 80130f2:	290f      	cmp	r1, #15
 80130f4:	d0d6      	beq.n	80130a4 <rcu_clock_freq_get+0x84>
 80130f6:	3102      	adds	r1, #2
 80130f8:	fb03 f001 	mul.w	r0, r3, r1
 80130fc:	e7dc      	b.n	80130b8 <rcu_clock_freq_get+0x98>
 80130fe:	4809      	ldr	r0, [pc, #36]	; (8013124 <rcu_clock_freq_get+0x104>)
 8013100:	e7da      	b.n	80130b8 <rcu_clock_freq_get+0x98>
 8013102:	480a      	ldr	r0, [pc, #40]	; (801312c <rcu_clock_freq_get+0x10c>)
 8013104:	e7d8      	b.n	80130b8 <rcu_clock_freq_get+0x98>
 8013106:	4618      	mov	r0, r3
 8013108:	b009      	add	sp, #36	; 0x24
 801310a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801310c:	fa23 f001 	lsr.w	r0, r3, r1
 8013110:	e7fa      	b.n	8013108 <rcu_clock_freq_get+0xe8>
 8013112:	fa23 f002 	lsr.w	r0, r3, r2
 8013116:	e7f7      	b.n	8013108 <rcu_clock_freq_get+0xe8>
 8013118:	2000      	movs	r0, #0
 801311a:	e7f5      	b.n	8013108 <rcu_clock_freq_get+0xe8>
 801311c:	08014ad8 	stmdaeq	r1, {r3, r4, r6, r7, r9, fp, lr}
 8013120:	40021000 	andmi	r1, r2, r0
 8013124:	017d7840 	cmneq	sp, r0, asr #16
 8013128:	003d0900 	eorseq	r0, sp, r0, lsl #18
 801312c:	007a1200 	rsbseq	r1, sl, r0, lsl #4

08013130 <timer_deinit>:
 8013130:	b508      	push	{r3, lr}
 8013132:	4b4e      	ldr	r3, [pc, #312]	; (801326c <timer_deinit+0x13c>)
 8013134:	4298      	cmp	r0, r3
 8013136:	f000 8092 	beq.w	801325e <timer_deinit+0x12e>
 801313a:	d822      	bhi.n	8013182 <timer_deinit+0x52>
 801313c:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
 8013140:	4298      	cmp	r0, r3
 8013142:	d062      	beq.n	801320a <timer_deinit+0xda>
 8013144:	d80b      	bhi.n	801315e <timer_deinit+0x2e>
 8013146:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 801314a:	4298      	cmp	r0, r3
 801314c:	d04f      	beq.n	80131ee <timer_deinit+0xbe>
 801314e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8013152:	4298      	cmp	r0, r3
 8013154:	d052      	beq.n	80131fc <timer_deinit+0xcc>
 8013156:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 801315a:	d041      	beq.n	80131e0 <timer_deinit+0xb0>
 801315c:	bd08      	pop	{r3, pc}
 801315e:	4b44      	ldr	r3, [pc, #272]	; (8013270 <timer_deinit+0x140>)
 8013160:	4298      	cmp	r0, r3
 8013162:	d059      	beq.n	8013218 <timer_deinit+0xe8>
 8013164:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8013168:	4298      	cmp	r0, r3
 801316a:	d071      	beq.n	8013250 <timer_deinit+0x120>
 801316c:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8013170:	4298      	cmp	r0, r3
 8013172:	d1f3      	bne.n	801315c <timer_deinit+0x2c>
 8013174:	f240 4004 	movw	r0, #1028	; 0x404
 8013178:	f7ff fe91 	bl	8012e9e <rcu_periph_reset_enable>
 801317c:	f240 4004 	movw	r0, #1028	; 0x404
 8013180:	e02a      	b.n	80131d8 <timer_deinit+0xa8>
 8013182:	4b3c      	ldr	r3, [pc, #240]	; (8013274 <timer_deinit+0x144>)
 8013184:	4298      	cmp	r0, r3
 8013186:	d055      	beq.n	8013234 <timer_deinit+0x104>
 8013188:	d812      	bhi.n	80131b0 <timer_deinit+0x80>
 801318a:	f5a3 5300 	sub.w	r3, r3, #8192	; 0x2000
 801318e:	4298      	cmp	r0, r3
 8013190:	d01c      	beq.n	80131cc <timer_deinit+0x9c>
 8013192:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8013196:	4298      	cmp	r0, r3
 8013198:	d045      	beq.n	8013226 <timer_deinit+0xf6>
 801319a:	f5a3 338a 	sub.w	r3, r3, #70656	; 0x11400
 801319e:	4298      	cmp	r0, r3
 80131a0:	d1dc      	bne.n	801315c <timer_deinit+0x2c>
 80131a2:	f44f 6081 	mov.w	r0, #1032	; 0x408
 80131a6:	f7ff fe7a 	bl	8012e9e <rcu_periph_reset_enable>
 80131aa:	f44f 6081 	mov.w	r0, #1032	; 0x408
 80131ae:	e013      	b.n	80131d8 <timer_deinit+0xa8>
 80131b0:	4b31      	ldr	r3, [pc, #196]	; (8013278 <timer_deinit+0x148>)
 80131b2:	4298      	cmp	r0, r3
 80131b4:	d045      	beq.n	8013242 <timer_deinit+0x112>
 80131b6:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80131ba:	4298      	cmp	r0, r3
 80131bc:	d1ce      	bne.n	801315c <timer_deinit+0x2c>
 80131be:	f240 3015 	movw	r0, #789	; 0x315
 80131c2:	f7ff fe6c 	bl	8012e9e <rcu_periph_reset_enable>
 80131c6:	f240 3015 	movw	r0, #789	; 0x315
 80131ca:	e005      	b.n	80131d8 <timer_deinit+0xa8>
 80131cc:	f240 300b 	movw	r0, #779	; 0x30b
 80131d0:	f7ff fe65 	bl	8012e9e <rcu_periph_reset_enable>
 80131d4:	f240 300b 	movw	r0, #779	; 0x30b
 80131d8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80131dc:	f7ff be61 	b.w	8012ea2 <rcu_periph_reset_disable>
 80131e0:	f44f 6080 	mov.w	r0, #1024	; 0x400
 80131e4:	f7ff fe5b 	bl	8012e9e <rcu_periph_reset_enable>
 80131e8:	f44f 6080 	mov.w	r0, #1024	; 0x400
 80131ec:	e7f4      	b.n	80131d8 <timer_deinit+0xa8>
 80131ee:	f240 4001 	movw	r0, #1025	; 0x401
 80131f2:	f7ff fe54 	bl	8012e9e <rcu_periph_reset_enable>
 80131f6:	f240 4001 	movw	r0, #1025	; 0x401
 80131fa:	e7ed      	b.n	80131d8 <timer_deinit+0xa8>
 80131fc:	f240 4002 	movw	r0, #1026	; 0x402
 8013200:	f7ff fe4d 	bl	8012e9e <rcu_periph_reset_enable>
 8013204:	f240 4002 	movw	r0, #1026	; 0x402
 8013208:	e7e6      	b.n	80131d8 <timer_deinit+0xa8>
 801320a:	f240 4003 	movw	r0, #1027	; 0x403
 801320e:	f7ff fe46 	bl	8012e9e <rcu_periph_reset_enable>
 8013212:	f240 4003 	movw	r0, #1027	; 0x403
 8013216:	e7df      	b.n	80131d8 <timer_deinit+0xa8>
 8013218:	f240 4005 	movw	r0, #1029	; 0x405
 801321c:	f7ff fe3f 	bl	8012e9e <rcu_periph_reset_enable>
 8013220:	f240 4005 	movw	r0, #1029	; 0x405
 8013224:	e7d8      	b.n	80131d8 <timer_deinit+0xa8>
 8013226:	f240 300d 	movw	r0, #781	; 0x30d
 801322a:	f7ff fe38 	bl	8012e9e <rcu_periph_reset_enable>
 801322e:	f240 300d 	movw	r0, #781	; 0x30d
 8013232:	e7d1      	b.n	80131d8 <timer_deinit+0xa8>
 8013234:	f240 3013 	movw	r0, #787	; 0x313
 8013238:	f7ff fe31 	bl	8012e9e <rcu_periph_reset_enable>
 801323c:	f240 3013 	movw	r0, #787	; 0x313
 8013240:	e7ca      	b.n	80131d8 <timer_deinit+0xa8>
 8013242:	f44f 7045 	mov.w	r0, #788	; 0x314
 8013246:	f7ff fe2a 	bl	8012e9e <rcu_periph_reset_enable>
 801324a:	f44f 7045 	mov.w	r0, #788	; 0x314
 801324e:	e7c3      	b.n	80131d8 <timer_deinit+0xa8>
 8013250:	f240 4006 	movw	r0, #1030	; 0x406
 8013254:	f7ff fe23 	bl	8012e9e <rcu_periph_reset_enable>
 8013258:	f240 4006 	movw	r0, #1030	; 0x406
 801325c:	e7bc      	b.n	80131d8 <timer_deinit+0xa8>
 801325e:	f240 4007 	movw	r0, #1031	; 0x407
 8013262:	f7ff fe1c 	bl	8012e9e <rcu_periph_reset_enable>
 8013266:	f240 4007 	movw	r0, #1031	; 0x407
 801326a:	e7b5      	b.n	80131d8 <timer_deinit+0xa8>
 801326c:	40001c00 	andmi	r1, r0, r0, lsl #24
 8013270:	40001400 	andmi	r1, r0, r0, lsl #8
 8013274:	40014c00 	andmi	r4, r1, r0, lsl #24
 8013278:	40015000 	andmi	r5, r1, r0

0801327c <timer_init>:
 801327c:	880b      	ldrh	r3, [r1, #0]
 801327e:	6283      	str	r3, [r0, #40]	; 0x28
 8013280:	4b26      	ldr	r3, [pc, #152]	; (801331c <timer_init+0xa0>)
 8013282:	4298      	cmp	r0, r3
 8013284:	d018      	beq.n	80132b8 <timer_init+0x3c>
 8013286:	f420 6240 	bic.w	r2, r0, #3072	; 0xc00
 801328a:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 801328e:	f420 6380 	bic.w	r3, r0, #1024	; 0x400
 8013292:	d011      	beq.n	80132b8 <timer_init+0x3c>
 8013294:	4a22      	ldr	r2, [pc, #136]	; (8013320 <timer_init+0xa4>)
 8013296:	4290      	cmp	r0, r2
 8013298:	d00e      	beq.n	80132b8 <timer_init+0x3c>
 801329a:	f502 52c0 	add.w	r2, r2, #6144	; 0x1800
 801329e:	4290      	cmp	r0, r2
 80132a0:	d00a      	beq.n	80132b8 <timer_init+0x3c>
 80132a2:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80132a6:	4293      	cmp	r3, r2
 80132a8:	d006      	beq.n	80132b8 <timer_init+0x3c>
 80132aa:	f5a2 329c 	sub.w	r2, r2, #79872	; 0x13800
 80132ae:	4293      	cmp	r3, r2
 80132b0:	d002      	beq.n	80132b8 <timer_init+0x3c>
 80132b2:	4b1c      	ldr	r3, [pc, #112]	; (8013324 <timer_init+0xa8>)
 80132b4:	4298      	cmp	r0, r3
 80132b6:	d10f      	bne.n	80132d8 <timer_init+0x5c>
 80132b8:	6803      	ldr	r3, [r0, #0]
 80132ba:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80132be:	6003      	str	r3, [r0, #0]
 80132c0:	884b      	ldrh	r3, [r1, #2]
 80132c2:	6802      	ldr	r2, [r0, #0]
 80132c4:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80132c8:	4313      	orrs	r3, r2
 80132ca:	6003      	str	r3, [r0, #0]
 80132cc:	888b      	ldrh	r3, [r1, #4]
 80132ce:	6802      	ldr	r2, [r0, #0]
 80132d0:	f003 0310 	and.w	r3, r3, #16
 80132d4:	4313      	orrs	r3, r2
 80132d6:	6003      	str	r3, [r0, #0]
 80132d8:	688b      	ldr	r3, [r1, #8]
 80132da:	62c3      	str	r3, [r0, #44]	; 0x2c
 80132dc:	4b12      	ldr	r3, [pc, #72]	; (8013328 <timer_init+0xac>)
 80132de:	4298      	cmp	r0, r3
 80132e0:	d003      	beq.n	80132ea <timer_init+0x6e>
 80132e2:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80132e6:	4298      	cmp	r0, r3
 80132e8:	d104      	bne.n	80132f4 <timer_init+0x78>
 80132ea:	6943      	ldr	r3, [r0, #20]
 80132ec:	f043 0301 	orr.w	r3, r3, #1
 80132f0:	6143      	str	r3, [r0, #20]
 80132f2:	4770      	bx	lr
 80132f4:	6803      	ldr	r3, [r0, #0]
 80132f6:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80132fa:	6003      	str	r3, [r0, #0]
 80132fc:	898b      	ldrh	r3, [r1, #12]
 80132fe:	6802      	ldr	r2, [r0, #0]
 8013300:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8013304:	4313      	orrs	r3, r2
 8013306:	6003      	str	r3, [r0, #0]
 8013308:	4b04      	ldr	r3, [pc, #16]	; (801331c <timer_init+0xa0>)
 801330a:	4298      	cmp	r0, r3
 801330c:	d002      	beq.n	8013314 <timer_init+0x98>
 801330e:	4b04      	ldr	r3, [pc, #16]	; (8013320 <timer_init+0xa4>)
 8013310:	4298      	cmp	r0, r3
 8013312:	d1ea      	bne.n	80132ea <timer_init+0x6e>
 8013314:	7b8b      	ldrb	r3, [r1, #14]
 8013316:	6303      	str	r3, [r0, #48]	; 0x30
 8013318:	e7e7      	b.n	80132ea <timer_init+0x6e>
 801331a:	bf00      	nop
 801331c:	40012c00 	andmi	r2, r1, r0, lsl #24
 8013320:	40013400 	andmi	r3, r1, r0, lsl #8
 8013324:	40002000 	andmi	r2, r0, r0
 8013328:	40001000 	andmi	r1, r0, r0

0801332c <timer_enable>:
 801332c:	6803      	ldr	r3, [r0, #0]
 801332e:	f043 0301 	orr.w	r3, r3, #1
 8013332:	6003      	str	r3, [r0, #0]
 8013334:	4770      	bx	lr

08013336 <timer_dma_enable>:
 8013336:	68c3      	ldr	r3, [r0, #12]
 8013338:	4319      	orrs	r1, r3
 801333a:	60c1      	str	r1, [r0, #12]
 801333c:	4770      	bx	lr
	...

08013340 <timer_channel_output_config>:
 8013340:	2903      	cmp	r1, #3
 8013342:	d840      	bhi.n	80133c6 <timer_channel_output_config+0x86>
 8013344:	e8df f011 	tbh	[pc, r1, lsl #1]
 8013348:	00400004 	subeq	r0, r0, r4
 801334c:	00c20081 	sbceq	r0, r2, r1, lsl #1
 8013350:	6a03      	ldr	r3, [r0, #32]
 8013352:	f023 0301 	bic.w	r3, r3, #1
 8013356:	6203      	str	r3, [r0, #32]
 8013358:	6983      	ldr	r3, [r0, #24]
 801335a:	f023 0303 	bic.w	r3, r3, #3
 801335e:	6183      	str	r3, [r0, #24]
 8013360:	6a01      	ldr	r1, [r0, #32]
 8013362:	8813      	ldrh	r3, [r2, #0]
 8013364:	430b      	orrs	r3, r1
 8013366:	6203      	str	r3, [r0, #32]
 8013368:	6a03      	ldr	r3, [r0, #32]
 801336a:	f023 0302 	bic.w	r3, r3, #2
 801336e:	6203      	str	r3, [r0, #32]
 8013370:	6a01      	ldr	r1, [r0, #32]
 8013372:	8893      	ldrh	r3, [r2, #4]
 8013374:	430b      	orrs	r3, r1
 8013376:	6203      	str	r3, [r0, #32]
 8013378:	4b68      	ldr	r3, [pc, #416]	; (801351c <timer_channel_output_config+0x1dc>)
 801337a:	4298      	cmp	r0, r3
 801337c:	d003      	beq.n	8013386 <timer_channel_output_config+0x46>
 801337e:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8013382:	4298      	cmp	r0, r3
 8013384:	d11f      	bne.n	80133c6 <timer_channel_output_config+0x86>
 8013386:	6a03      	ldr	r3, [r0, #32]
 8013388:	f023 0304 	bic.w	r3, r3, #4
 801338c:	6203      	str	r3, [r0, #32]
 801338e:	6a01      	ldr	r1, [r0, #32]
 8013390:	8853      	ldrh	r3, [r2, #2]
 8013392:	430b      	orrs	r3, r1
 8013394:	6203      	str	r3, [r0, #32]
 8013396:	6a03      	ldr	r3, [r0, #32]
 8013398:	f023 0308 	bic.w	r3, r3, #8
 801339c:	6203      	str	r3, [r0, #32]
 801339e:	6a01      	ldr	r1, [r0, #32]
 80133a0:	88d3      	ldrh	r3, [r2, #6]
 80133a2:	430b      	orrs	r3, r1
 80133a4:	6203      	str	r3, [r0, #32]
 80133a6:	6843      	ldr	r3, [r0, #4]
 80133a8:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80133ac:	6043      	str	r3, [r0, #4]
 80133ae:	6841      	ldr	r1, [r0, #4]
 80133b0:	8913      	ldrh	r3, [r2, #8]
 80133b2:	430b      	orrs	r3, r1
 80133b4:	6043      	str	r3, [r0, #4]
 80133b6:	6843      	ldr	r3, [r0, #4]
 80133b8:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 80133bc:	6043      	str	r3, [r0, #4]
 80133be:	6841      	ldr	r1, [r0, #4]
 80133c0:	8953      	ldrh	r3, [r2, #10]
 80133c2:	430b      	orrs	r3, r1
 80133c4:	6043      	str	r3, [r0, #4]
 80133c6:	4770      	bx	lr
 80133c8:	6a03      	ldr	r3, [r0, #32]
 80133ca:	8811      	ldrh	r1, [r2, #0]
 80133cc:	f023 0310 	bic.w	r3, r3, #16
 80133d0:	6203      	str	r3, [r0, #32]
 80133d2:	6983      	ldr	r3, [r0, #24]
 80133d4:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80133d8:	6183      	str	r3, [r0, #24]
 80133da:	6a03      	ldr	r3, [r0, #32]
 80133dc:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
 80133e0:	6203      	str	r3, [r0, #32]
 80133e2:	6a03      	ldr	r3, [r0, #32]
 80133e4:	8891      	ldrh	r1, [r2, #4]
 80133e6:	f023 0320 	bic.w	r3, r3, #32
 80133ea:	6203      	str	r3, [r0, #32]
 80133ec:	6a03      	ldr	r3, [r0, #32]
 80133ee:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
 80133f2:	6203      	str	r3, [r0, #32]
 80133f4:	4b49      	ldr	r3, [pc, #292]	; (801351c <timer_channel_output_config+0x1dc>)
 80133f6:	4298      	cmp	r0, r3
 80133f8:	d003      	beq.n	8013402 <timer_channel_output_config+0xc2>
 80133fa:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80133fe:	4298      	cmp	r0, r3
 8013400:	d1e1      	bne.n	80133c6 <timer_channel_output_config+0x86>
 8013402:	6a03      	ldr	r3, [r0, #32]
 8013404:	8851      	ldrh	r1, [r2, #2]
 8013406:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 801340a:	6203      	str	r3, [r0, #32]
 801340c:	6a03      	ldr	r3, [r0, #32]
 801340e:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
 8013412:	6203      	str	r3, [r0, #32]
 8013414:	6a03      	ldr	r3, [r0, #32]
 8013416:	88d1      	ldrh	r1, [r2, #6]
 8013418:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 801341c:	6203      	str	r3, [r0, #32]
 801341e:	6a03      	ldr	r3, [r0, #32]
 8013420:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
 8013424:	6203      	str	r3, [r0, #32]
 8013426:	6843      	ldr	r3, [r0, #4]
 8013428:	8911      	ldrh	r1, [r2, #8]
 801342a:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 801342e:	6043      	str	r3, [r0, #4]
 8013430:	6843      	ldr	r3, [r0, #4]
 8013432:	8952      	ldrh	r2, [r2, #10]
 8013434:	ea43 0381 	orr.w	r3, r3, r1, lsl #2
 8013438:	6043      	str	r3, [r0, #4]
 801343a:	6843      	ldr	r3, [r0, #4]
 801343c:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8013440:	6043      	str	r3, [r0, #4]
 8013442:	6843      	ldr	r3, [r0, #4]
 8013444:	ea43 0382 	orr.w	r3, r3, r2, lsl #2
 8013448:	e7bc      	b.n	80133c4 <timer_channel_output_config+0x84>
 801344a:	6a03      	ldr	r3, [r0, #32]
 801344c:	8811      	ldrh	r1, [r2, #0]
 801344e:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8013452:	6203      	str	r3, [r0, #32]
 8013454:	69c3      	ldr	r3, [r0, #28]
 8013456:	f023 0303 	bic.w	r3, r3, #3
 801345a:	61c3      	str	r3, [r0, #28]
 801345c:	6a03      	ldr	r3, [r0, #32]
 801345e:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8013462:	6203      	str	r3, [r0, #32]
 8013464:	6a03      	ldr	r3, [r0, #32]
 8013466:	8891      	ldrh	r1, [r2, #4]
 8013468:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 801346c:	6203      	str	r3, [r0, #32]
 801346e:	6a03      	ldr	r3, [r0, #32]
 8013470:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8013474:	6203      	str	r3, [r0, #32]
 8013476:	4b29      	ldr	r3, [pc, #164]	; (801351c <timer_channel_output_config+0x1dc>)
 8013478:	4298      	cmp	r0, r3
 801347a:	d003      	beq.n	8013484 <timer_channel_output_config+0x144>
 801347c:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8013480:	4298      	cmp	r0, r3
 8013482:	d1a0      	bne.n	80133c6 <timer_channel_output_config+0x86>
 8013484:	6a03      	ldr	r3, [r0, #32]
 8013486:	8851      	ldrh	r1, [r2, #2]
 8013488:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 801348c:	6203      	str	r3, [r0, #32]
 801348e:	6a03      	ldr	r3, [r0, #32]
 8013490:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8013494:	6203      	str	r3, [r0, #32]
 8013496:	6a03      	ldr	r3, [r0, #32]
 8013498:	88d1      	ldrh	r1, [r2, #6]
 801349a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 801349e:	6203      	str	r3, [r0, #32]
 80134a0:	6a03      	ldr	r3, [r0, #32]
 80134a2:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 80134a6:	6203      	str	r3, [r0, #32]
 80134a8:	6843      	ldr	r3, [r0, #4]
 80134aa:	8911      	ldrh	r1, [r2, #8]
 80134ac:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80134b0:	6043      	str	r3, [r0, #4]
 80134b2:	6843      	ldr	r3, [r0, #4]
 80134b4:	8952      	ldrh	r2, [r2, #10]
 80134b6:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
 80134ba:	6043      	str	r3, [r0, #4]
 80134bc:	6843      	ldr	r3, [r0, #4]
 80134be:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80134c2:	6043      	str	r3, [r0, #4]
 80134c4:	6843      	ldr	r3, [r0, #4]
 80134c6:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
 80134ca:	e77b      	b.n	80133c4 <timer_channel_output_config+0x84>
 80134cc:	6a03      	ldr	r3, [r0, #32]
 80134ce:	8811      	ldrh	r1, [r2, #0]
 80134d0:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80134d4:	6203      	str	r3, [r0, #32]
 80134d6:	69c3      	ldr	r3, [r0, #28]
 80134d8:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80134dc:	61c3      	str	r3, [r0, #28]
 80134de:	6a03      	ldr	r3, [r0, #32]
 80134e0:	ea43 3301 	orr.w	r3, r3, r1, lsl #12
 80134e4:	6203      	str	r3, [r0, #32]
 80134e6:	6a03      	ldr	r3, [r0, #32]
 80134e8:	8891      	ldrh	r1, [r2, #4]
 80134ea:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80134ee:	6203      	str	r3, [r0, #32]
 80134f0:	6a03      	ldr	r3, [r0, #32]
 80134f2:	ea43 3301 	orr.w	r3, r3, r1, lsl #12
 80134f6:	6203      	str	r3, [r0, #32]
 80134f8:	4b08      	ldr	r3, [pc, #32]	; (801351c <timer_channel_output_config+0x1dc>)
 80134fa:	4298      	cmp	r0, r3
 80134fc:	d004      	beq.n	8013508 <timer_channel_output_config+0x1c8>
 80134fe:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8013502:	4298      	cmp	r0, r3
 8013504:	f47f af5f 	bne.w	80133c6 <timer_channel_output_config+0x86>
 8013508:	6843      	ldr	r3, [r0, #4]
 801350a:	8912      	ldrh	r2, [r2, #8]
 801350c:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8013510:	6043      	str	r3, [r0, #4]
 8013512:	6843      	ldr	r3, [r0, #4]
 8013514:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8013518:	e754      	b.n	80133c4 <timer_channel_output_config+0x84>
 801351a:	bf00      	nop
 801351c:	40012c00 	andmi	r2, r1, r0, lsl #24

08013520 <timer_channel_output_mode_config>:
 8013520:	2903      	cmp	r1, #3
 8013522:	d81a      	bhi.n	801355a <timer_channel_output_mode_config+0x3a>
 8013524:	e8df f001 	tbb	[pc, r1]
 8013528:	1a120a02 	bne	8495d38 <__exidx_end+0x47e444>
 801352c:	6983      	ldr	r3, [r0, #24]
 801352e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8013532:	6183      	str	r3, [r0, #24]
 8013534:	6983      	ldr	r3, [r0, #24]
 8013536:	4313      	orrs	r3, r2
 8013538:	6183      	str	r3, [r0, #24]
 801353a:	4770      	bx	lr
 801353c:	6983      	ldr	r3, [r0, #24]
 801353e:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8013542:	6183      	str	r3, [r0, #24]
 8013544:	6983      	ldr	r3, [r0, #24]
 8013546:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 801354a:	e7f5      	b.n	8013538 <timer_channel_output_mode_config+0x18>
 801354c:	69c3      	ldr	r3, [r0, #28]
 801354e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8013552:	61c3      	str	r3, [r0, #28]
 8013554:	69c3      	ldr	r3, [r0, #28]
 8013556:	4313      	orrs	r3, r2
 8013558:	61c3      	str	r3, [r0, #28]
 801355a:	4770      	bx	lr
 801355c:	69c3      	ldr	r3, [r0, #28]
 801355e:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8013562:	61c3      	str	r3, [r0, #28]
 8013564:	69c3      	ldr	r3, [r0, #28]
 8013566:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 801356a:	e7f5      	b.n	8013558 <timer_channel_output_mode_config+0x38>

0801356c <timer_channel_output_pulse_value_config>:
 801356c:	2903      	cmp	r1, #3
 801356e:	d80a      	bhi.n	8013586 <timer_channel_output_pulse_value_config+0x1a>
 8013570:	e8df f001 	tbb	[pc, r1]
 8013574:	08060402 	stmdaeq	r6, {r1, sl}
 8013578:	6342      	str	r2, [r0, #52]	; 0x34
 801357a:	4770      	bx	lr
 801357c:	6382      	str	r2, [r0, #56]	; 0x38
 801357e:	4770      	bx	lr
 8013580:	63c2      	str	r2, [r0, #60]	; 0x3c
 8013582:	4770      	bx	lr
 8013584:	6402      	str	r2, [r0, #64]	; 0x40
 8013586:	4770      	bx	lr

08013588 <timer_channel_output_shadow_config>:
 8013588:	2903      	cmp	r1, #3
 801358a:	d81a      	bhi.n	80135c2 <timer_channel_output_shadow_config+0x3a>
 801358c:	e8df f001 	tbb	[pc, r1]
 8013590:	1a120a02 	bne	8495da0 <__exidx_end+0x47e4ac>
 8013594:	6983      	ldr	r3, [r0, #24]
 8013596:	f023 0308 	bic.w	r3, r3, #8
 801359a:	6183      	str	r3, [r0, #24]
 801359c:	6983      	ldr	r3, [r0, #24]
 801359e:	4313      	orrs	r3, r2
 80135a0:	6183      	str	r3, [r0, #24]
 80135a2:	4770      	bx	lr
 80135a4:	6983      	ldr	r3, [r0, #24]
 80135a6:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80135aa:	6183      	str	r3, [r0, #24]
 80135ac:	6983      	ldr	r3, [r0, #24]
 80135ae:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80135b2:	e7f5      	b.n	80135a0 <timer_channel_output_shadow_config+0x18>
 80135b4:	69c3      	ldr	r3, [r0, #28]
 80135b6:	f023 0308 	bic.w	r3, r3, #8
 80135ba:	61c3      	str	r3, [r0, #28]
 80135bc:	69c3      	ldr	r3, [r0, #28]
 80135be:	4313      	orrs	r3, r2
 80135c0:	61c3      	str	r3, [r0, #28]
 80135c2:	4770      	bx	lr
 80135c4:	69c3      	ldr	r3, [r0, #28]
 80135c6:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80135ca:	61c3      	str	r3, [r0, #28]
 80135cc:	69c3      	ldr	r3, [r0, #28]
 80135ce:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80135d2:	e7f5      	b.n	80135c0 <timer_channel_output_shadow_config+0x38>

080135d4 <timer_input_trigger_source_select>:
 80135d4:	6883      	ldr	r3, [r0, #8]
 80135d6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80135da:	6083      	str	r3, [r0, #8]
 80135dc:	6883      	ldr	r3, [r0, #8]
 80135de:	430b      	orrs	r3, r1
 80135e0:	6083      	str	r3, [r0, #8]
 80135e2:	4770      	bx	lr

080135e4 <timer_master_output_trigger_source_select>:
 80135e4:	6843      	ldr	r3, [r0, #4]
 80135e6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80135ea:	6043      	str	r3, [r0, #4]
 80135ec:	6843      	ldr	r3, [r0, #4]
 80135ee:	430b      	orrs	r3, r1
 80135f0:	6043      	str	r3, [r0, #4]
 80135f2:	4770      	bx	lr

080135f4 <timer_slave_mode_select>:
 80135f4:	6883      	ldr	r3, [r0, #8]
 80135f6:	f023 0307 	bic.w	r3, r3, #7
 80135fa:	6083      	str	r3, [r0, #8]
 80135fc:	6883      	ldr	r3, [r0, #8]
 80135fe:	430b      	orrs	r3, r1
 8013600:	6083      	str	r3, [r0, #8]
 8013602:	4770      	bx	lr

08013604 <timer_master_slave_mode_config>:
 8013604:	2980      	cmp	r1, #128	; 0x80
 8013606:	d104      	bne.n	8013612 <timer_master_slave_mode_config+0xe>
 8013608:	6883      	ldr	r3, [r0, #8]
 801360a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 801360e:	6083      	str	r3, [r0, #8]
 8013610:	4770      	bx	lr
 8013612:	2900      	cmp	r1, #0
 8013614:	d1fc      	bne.n	8013610 <timer_master_slave_mode_config+0xc>
 8013616:	6883      	ldr	r3, [r0, #8]
 8013618:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 801361c:	e7f7      	b.n	801360e <timer_master_slave_mode_config+0xa>

0801361e <timer_interrupt_enable>:
 801361e:	68c3      	ldr	r3, [r0, #12]
 8013620:	430b      	orrs	r3, r1
 8013622:	60c3      	str	r3, [r0, #12]
 8013624:	4770      	bx	lr
	...

08013628 <usart_deinit>:
 8013628:	b508      	push	{r3, lr}
 801362a:	4b2d      	ldr	r3, [pc, #180]	; (80136e0 <usart_deinit+0xb8>)
 801362c:	4298      	cmp	r0, r3
 801362e:	d050      	beq.n	80136d2 <usart_deinit+0xaa>
 8013630:	d817      	bhi.n	8013662 <usart_deinit+0x3a>
 8013632:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 8013636:	4298      	cmp	r0, r3
 8013638:	d044      	beq.n	80136c4 <usart_deinit+0x9c>
 801363a:	d808      	bhi.n	801364e <usart_deinit+0x26>
 801363c:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8013640:	4298      	cmp	r0, r3
 8013642:	d02a      	beq.n	801369a <usart_deinit+0x72>
 8013644:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8013648:	4298      	cmp	r0, r3
 801364a:	d02d      	beq.n	80136a8 <usart_deinit+0x80>
 801364c:	bd08      	pop	{r3, pc}
 801364e:	4b25      	ldr	r3, [pc, #148]	; (80136e4 <usart_deinit+0xbc>)
 8013650:	4298      	cmp	r0, r3
 8013652:	d1fb      	bne.n	801364c <usart_deinit+0x24>
 8013654:	f240 4014 	movw	r0, #1044	; 0x414
 8013658:	f7ff fc21 	bl	8012e9e <rcu_periph_reset_enable>
 801365c:	f240 4014 	movw	r0, #1044	; 0x414
 8013660:	e017      	b.n	8013692 <usart_deinit+0x6a>
 8013662:	4b21      	ldr	r3, [pc, #132]	; (80136e8 <usart_deinit+0xc0>)
 8013664:	4298      	cmp	r0, r3
 8013666:	d00e      	beq.n	8013686 <usart_deinit+0x5e>
 8013668:	f503 5360 	add.w	r3, r3, #14336	; 0x3800
 801366c:	4298      	cmp	r0, r3
 801366e:	d022      	beq.n	80136b6 <usart_deinit+0x8e>
 8013670:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
 8013674:	4298      	cmp	r0, r3
 8013676:	d1e9      	bne.n	801364c <usart_deinit+0x24>
 8013678:	f641 601f 	movw	r0, #7711	; 0x1e1f
 801367c:	f7ff fc0f 	bl	8012e9e <rcu_periph_reset_enable>
 8013680:	f641 601f 	movw	r0, #7711	; 0x1e1f
 8013684:	e005      	b.n	8013692 <usart_deinit+0x6a>
 8013686:	f240 300e 	movw	r0, #782	; 0x30e
 801368a:	f7ff fc08 	bl	8012e9e <rcu_periph_reset_enable>
 801368e:	f240 300e 	movw	r0, #782	; 0x30e
 8013692:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8013696:	f7ff bc04 	b.w	8012ea2 <rcu_periph_reset_disable>
 801369a:	f240 4011 	movw	r0, #1041	; 0x411
 801369e:	f7ff fbfe 	bl	8012e9e <rcu_periph_reset_enable>
 80136a2:	f240 4011 	movw	r0, #1041	; 0x411
 80136a6:	e7f4      	b.n	8013692 <usart_deinit+0x6a>
 80136a8:	f240 4012 	movw	r0, #1042	; 0x412
 80136ac:	f7ff fbf7 	bl	8012e9e <rcu_periph_reset_enable>
 80136b0:	f240 4012 	movw	r0, #1042	; 0x412
 80136b4:	e7ed      	b.n	8013692 <usart_deinit+0x6a>
 80136b6:	f641 5018 	movw	r0, #7448	; 0x1d18
 80136ba:	f7ff fbf0 	bl	8012e9e <rcu_periph_reset_enable>
 80136be:	f641 5018 	movw	r0, #7448	; 0x1d18
 80136c2:	e7e6      	b.n	8013692 <usart_deinit+0x6a>
 80136c4:	f240 4013 	movw	r0, #1043	; 0x413
 80136c8:	f7ff fbe9 	bl	8012e9e <rcu_periph_reset_enable>
 80136cc:	f240 4013 	movw	r0, #1043	; 0x413
 80136d0:	e7df      	b.n	8013692 <usart_deinit+0x6a>
 80136d2:	f641 601e 	movw	r0, #7710	; 0x1e1e
 80136d6:	f7ff fbe2 	bl	8012e9e <rcu_periph_reset_enable>
 80136da:	f641 601e 	movw	r0, #7710	; 0x1e1e
 80136de:	e7d8      	b.n	8013692 <usart_deinit+0x6a>
 80136e0:	40007800 	andmi	r7, r0, r0, lsl #16
 80136e4:	40005000 	andmi	r5, r0, r0
 80136e8:	40013800 	andmi	r3, r1, r0, lsl #16

080136ec <usart_baudrate_set>:
 80136ec:	b538      	push	{r3, r4, r5, lr}
 80136ee:	4b16      	ldr	r3, [pc, #88]	; (8013748 <usart_baudrate_set+0x5c>)
 80136f0:	4604      	mov	r4, r0
 80136f2:	4298      	cmp	r0, r3
 80136f4:	460d      	mov	r5, r1
 80136f6:	d025      	beq.n	8013744 <usart_baudrate_set+0x58>
 80136f8:	d816      	bhi.n	8013728 <usart_baudrate_set+0x3c>
 80136fa:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 80136fe:	4298      	cmp	r0, r3
 8013700:	d020      	beq.n	8013744 <usart_baudrate_set+0x58>
 8013702:	d80f      	bhi.n	8013724 <usart_baudrate_set+0x38>
 8013704:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8013708:	4298      	cmp	r0, r3
 801370a:	d01b      	beq.n	8013744 <usart_baudrate_set+0x58>
 801370c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8013710:	429c      	cmp	r4, r3
 8013712:	d017      	beq.n	8013744 <usart_baudrate_set+0x58>
 8013714:	2000      	movs	r0, #0
 8013716:	eb00 0155 	add.w	r1, r0, r5, lsr #1
 801371a:	fbb1 f1f5 	udiv	r1, r1, r5
 801371e:	b289      	uxth	r1, r1
 8013720:	60a1      	str	r1, [r4, #8]
 8013722:	bd38      	pop	{r3, r4, r5, pc}
 8013724:	4b09      	ldr	r3, [pc, #36]	; (801374c <usart_baudrate_set+0x60>)
 8013726:	e7f3      	b.n	8013710 <usart_baudrate_set+0x24>
 8013728:	4b09      	ldr	r3, [pc, #36]	; (8013750 <usart_baudrate_set+0x64>)
 801372a:	4298      	cmp	r0, r3
 801372c:	d006      	beq.n	801373c <usart_baudrate_set+0x50>
 801372e:	f503 5360 	add.w	r3, r3, #14336	; 0x3800
 8013732:	4298      	cmp	r0, r3
 8013734:	d002      	beq.n	801373c <usart_baudrate_set+0x50>
 8013736:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
 801373a:	e7e9      	b.n	8013710 <usart_baudrate_set+0x24>
 801373c:	2003      	movs	r0, #3
 801373e:	f7ff fc6f 	bl	8013020 <rcu_clock_freq_get>
 8013742:	e7e8      	b.n	8013716 <usart_baudrate_set+0x2a>
 8013744:	2002      	movs	r0, #2
 8013746:	e7fa      	b.n	801373e <usart_baudrate_set+0x52>
 8013748:	40007800 	andmi	r7, r0, r0, lsl #16
 801374c:	40005000 	andmi	r5, r0, r0
 8013750:	40013800 	andmi	r3, r1, r0, lsl #16

08013754 <usart_parity_config>:
 8013754:	68c3      	ldr	r3, [r0, #12]
 8013756:	f423 63c0 	bic.w	r3, r3, #1536	; 0x600
 801375a:	60c3      	str	r3, [r0, #12]
 801375c:	68c3      	ldr	r3, [r0, #12]
 801375e:	430b      	orrs	r3, r1
 8013760:	60c3      	str	r3, [r0, #12]
 8013762:	4770      	bx	lr

08013764 <usart_word_length_set>:
 8013764:	68c3      	ldr	r3, [r0, #12]
 8013766:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 801376a:	60c3      	str	r3, [r0, #12]
 801376c:	68c3      	ldr	r3, [r0, #12]
 801376e:	430b      	orrs	r3, r1
 8013770:	60c3      	str	r3, [r0, #12]
 8013772:	4770      	bx	lr

08013774 <usart_stop_bit_set>:
 8013774:	6903      	ldr	r3, [r0, #16]
 8013776:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 801377a:	6103      	str	r3, [r0, #16]
 801377c:	6903      	ldr	r3, [r0, #16]
 801377e:	430b      	orrs	r3, r1
 8013780:	6103      	str	r3, [r0, #16]
 8013782:	4770      	bx	lr

08013784 <usart_transmit_config>:
 8013784:	68c3      	ldr	r3, [r0, #12]
 8013786:	f023 0308 	bic.w	r3, r3, #8
 801378a:	430b      	orrs	r3, r1
 801378c:	60c3      	str	r3, [r0, #12]
 801378e:	4770      	bx	lr

08013790 <usart_receive_config>:
 8013790:	68c3      	ldr	r3, [r0, #12]
 8013792:	f023 0304 	bic.w	r3, r3, #4
 8013796:	430b      	orrs	r3, r1
 8013798:	60c3      	str	r3, [r0, #12]
 801379a:	4770      	bx	lr

0801379c <usart_hardware_flow_rts_config>:
 801379c:	6943      	ldr	r3, [r0, #20]
 801379e:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80137a2:	430b      	orrs	r3, r1
 80137a4:	6143      	str	r3, [r0, #20]
 80137a6:	4770      	bx	lr

080137a8 <usart_hardware_flow_cts_config>:
 80137a8:	6943      	ldr	r3, [r0, #20]
 80137aa:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 80137ae:	430b      	orrs	r3, r1
 80137b0:	6143      	str	r3, [r0, #20]
 80137b2:	4770      	bx	lr

080137b4 <usart_flag_get>:
 80137b4:	098b      	lsrs	r3, r1, #6
 80137b6:	581a      	ldr	r2, [r3, r0]
 80137b8:	2301      	movs	r3, #1
 80137ba:	f001 011f 	and.w	r1, r1, #31
 80137be:	408b      	lsls	r3, r1
 80137c0:	4213      	tst	r3, r2
 80137c2:	bf14      	ite	ne
 80137c4:	2001      	movne	r0, #1
 80137c6:	2000      	moveq	r0, #0
 80137c8:	4770      	bx	lr
	...

080137cc <emac_eth_recv>:
 80137cc:	b538      	push	{r3, r4, r5, lr}
 80137ce:	4605      	mov	r5, r0
 80137d0:	f001 f870 	bl	80148b4 <enet_rxframe_size_get>
 80137d4:	4604      	mov	r4, r0
 80137d6:	b138      	cbz	r0, 80137e8 <emac_eth_recv+0x1c>
 80137d8:	4b05      	ldr	r3, [pc, #20]	; (80137f0 <emac_eth_recv+0x24>)
 80137da:	2105      	movs	r1, #5
 80137dc:	6818      	ldr	r0, [r3, #0]
 80137de:	f001 f818 	bl	8014812 <enet_desc_information_get>
 80137e2:	6028      	str	r0, [r5, #0]
 80137e4:	4620      	mov	r0, r4
 80137e6:	bd38      	pop	{r3, r4, r5, pc}
 80137e8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80137ec:	e7fb      	b.n	80137e6 <emac_eth_recv+0x1a>
 80137ee:	bf00      	nop
 80137f0:	2001a974 	andcs	sl, r1, r4, ror r9

080137f4 <emac_free_pkt>:
 80137f4:	2100      	movs	r1, #0
 80137f6:	4608      	mov	r0, r1
 80137f8:	f000 bd46 	b.w	8014288 <enet_frame_receive>

080137fc <emac_eth_send>:
 80137fc:	f000 bd84 	b.w	8014308 <enet_frame_transmit>

08013800 <gd32_adc_init()>:
 8013800:	b510      	push	{r4, lr}
 8013802:	f240 6009 	movw	r0, #1545	; 0x609
 8013806:	4c21      	ldr	r4, [pc, #132]	; (801388c <gd32_adc_init()+0x8c>)
 8013808:	f7ff fb2e 	bl	8012e68 <rcu_periph_clock_enable>
 801380c:	2005      	movs	r0, #5
 801380e:	f7ff fb67 	bl	8012ee0 <rcu_adc_clock_config>
 8013812:	4620      	mov	r0, r4
 8013814:	2201      	movs	r2, #1
 8013816:	f44f 7180 	mov.w	r1, #256	; 0x100
 801381a:	f000 fbf5 	bl	8014008 <adc_special_function_config>
 801381e:	f44f 42e0 	mov.w	r2, #28672	; 0x7000
 8013822:	4620      	mov	r0, r4
 8013824:	2102      	movs	r1, #2
 8013826:	f000 fc8e 	bl	8014146 <adc_external_trigger_source_config>
 801382a:	2100      	movs	r1, #0
 801382c:	4620      	mov	r0, r4
 801382e:	f000 fc13 	bl	8014058 <adc_data_alignment_config>
 8013832:	2000      	movs	r0, #0
 8013834:	f000 fbd8 	bl	8013fe8 <adc_mode_config>
 8013838:	2202      	movs	r2, #2
 801383a:	4620      	mov	r0, r4
 801383c:	4611      	mov	r1, r2
 801383e:	f000 fc37 	bl	80140b0 <adc_channel_length_config>
 8013842:	4620      	mov	r0, r4
 8013844:	2307      	movs	r3, #7
 8013846:	2210      	movs	r2, #16
 8013848:	2100      	movs	r1, #0
 801384a:	f000 fc4e 	bl	80140ea <adc_inserted_channel_config>
 801384e:	2307      	movs	r3, #7
 8013850:	4620      	mov	r0, r4
 8013852:	2211      	movs	r2, #17
 8013854:	2101      	movs	r1, #1
 8013856:	f000 fc48 	bl	80140ea <adc_inserted_channel_config>
 801385a:	2201      	movs	r2, #1
 801385c:	2102      	movs	r1, #2
 801385e:	4620      	mov	r0, r4
 8013860:	f000 fc82 	bl	8014168 <adc_external_trigger_config>
 8013864:	f000 fc1a 	bl	801409c <adc_tempsensor_vrefint_enable>
 8013868:	4620      	mov	r0, r4
 801386a:	f000 fbfe 	bl	801406a <adc_enable>
 801386e:	2100      	movs	r1, #0
 8013870:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8013874:	f000 fae4 	bl	8013e40 <udelay(unsigned int, unsigned int)>
 8013878:	4620      	mov	r0, r4
 801387a:	f000 fbfe 	bl	801407a <adc_calibration_enable>
 801387e:	4620      	mov	r0, r4
 8013880:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013884:	2102      	movs	r1, #2
 8013886:	f000 bc8a 	b.w	801419e <adc_software_trigger_enable>
 801388a:	bf00      	nop
 801388c:	40012400 	andmi	r2, r1, r0, lsl #8

08013890 <_stop() [clone .isra.0]>:
 8013890:	b508      	push	{r3, lr}
 8013892:	4806      	ldr	r0, [pc, #24]	; (80138ac <_stop() [clone .isra.0]+0x1c>)
 8013894:	f001 f8d2 	bl	8014a3c <i2c_stop_on_bus>
 8013898:	f640 73ff 	movw	r3, #4095	; 0xfff
 801389c:	4904      	ldr	r1, [pc, #16]	; (80138b0 <_stop() [clone .isra.0]+0x20>)
 801389e:	f8d1 2400 	ldr.w	r2, [r1, #1024]	; 0x400
 80138a2:	0592      	lsls	r2, r2, #22
 80138a4:	d501      	bpl.n	80138aa <_stop() [clone .isra.0]+0x1a>
 80138a6:	3b01      	subs	r3, #1
 80138a8:	d1f9      	bne.n	801389e <_stop() [clone .isra.0]+0xe>
 80138aa:	bd08      	pop	{r3, pc}
 80138ac:	40005400 	andmi	r5, r0, r0, lsl #8
 80138b0:	40005000 	andmi	r5, r0, r0

080138b4 <gd32_i2c_begin>:
 80138b4:	b510      	push	{r4, lr}
 80138b6:	f240 7015 	movw	r0, #1813	; 0x715
 80138ba:	f7ff fad5 	bl	8012e68 <rcu_periph_clock_enable>
 80138be:	4c15      	ldr	r4, [pc, #84]	; (8013914 <gd32_i2c_begin+0x60>)
 80138c0:	f240 6003 	movw	r0, #1539	; 0x603
 80138c4:	f7ff fad0 	bl	8012e68 <rcu_periph_clock_enable>
 80138c8:	f240 6003 	movw	r0, #1539	; 0x603
 80138cc:	f7ff facc 	bl	8012e68 <rcu_periph_clock_enable>
 80138d0:	4620      	mov	r0, r4
 80138d2:	f44f 7380 	mov.w	r3, #256	; 0x100
 80138d6:	2203      	movs	r2, #3
 80138d8:	211c      	movs	r1, #28
 80138da:	f7ff fa2d 	bl	8012d38 <gpio_init>
 80138de:	f44f 7300 	mov.w	r3, #512	; 0x200
 80138e2:	2203      	movs	r2, #3
 80138e4:	4620      	mov	r0, r4
 80138e6:	211c      	movs	r1, #28
 80138e8:	f7ff fa26 	bl	8012d38 <gpio_init>
 80138ec:	f5a4 4438 	sub.w	r4, r4, #47104	; 0xb800
 80138f0:	2101      	movs	r1, #1
 80138f2:	2002      	movs	r0, #2
 80138f4:	f7ff fa74 	bl	8012de0 <gpio_pin_remap_config>
 80138f8:	4620      	mov	r0, r4
 80138fa:	4907      	ldr	r1, [pc, #28]	; (8013918 <gd32_i2c_begin+0x64>)
 80138fc:	2200      	movs	r2, #0
 80138fe:	f001 f817 	bl	8014930 <i2c_clock_config>
 8013902:	4620      	mov	r0, r4
 8013904:	f001 f890 	bl	8014a28 <i2c_enable>
 8013908:	4620      	mov	r0, r4
 801390a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801390e:	2101      	movs	r1, #1
 8013910:	f001 b870 	b.w	80149f4 <i2c_ack_config>
 8013914:	40010c00 	andmi	r0, r1, r0, lsl #24
 8013918:	00061a80 	andeq	r1, r6, r0, lsl #21

0801391c <gd32_i2c_set_baudrate>:
 801391c:	4601      	mov	r1, r0
 801391e:	2200      	movs	r2, #0
 8013920:	4801      	ldr	r0, [pc, #4]	; (8013928 <gd32_i2c_set_baudrate+0xc>)
 8013922:	f001 b805 	b.w	8014930 <i2c_clock_config>
 8013926:	bf00      	nop
 8013928:	40005400 	andmi	r5, r0, r0, lsl #8

0801392c <gd32_i2c_set_address>:
 801392c:	4b01      	ldr	r3, [pc, #4]	; (8013934 <gd32_i2c_set_address+0x8>)
 801392e:	0040      	lsls	r0, r0, #1
 8013930:	7018      	strb	r0, [r3, #0]
 8013932:	4770      	bx	lr
 8013934:	2001a968 	andcs	sl, r1, r8, ror #18

08013938 <gd32_i2c_write>:
 8013938:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801393a:	4604      	mov	r4, r0
 801393c:	460f      	mov	r7, r1
 801393e:	f640 75ff 	movw	r5, #4095	; 0xfff
 8013942:	4e2e      	ldr	r6, [pc, #184]	; (80139fc <gd32_i2c_write+0xc4>)
 8013944:	f240 6101 	movw	r1, #1537	; 0x601
 8013948:	4630      	mov	r0, r6
 801394a:	f001 f881 	bl	8014a50 <i2c_flag_get>
 801394e:	b9b0      	cbnz	r0, 801397e <gd32_i2c_write+0x46>
 8013950:	482a      	ldr	r0, [pc, #168]	; (80139fc <gd32_i2c_write+0xc4>)
 8013952:	f001 f86e 	bl	8014a32 <i2c_start_on_bus>
 8013956:	f640 75ff 	movw	r5, #4095	; 0xfff
 801395a:	4e28      	ldr	r6, [pc, #160]	; (80139fc <gd32_i2c_write+0xc4>)
 801395c:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8013960:	4630      	mov	r0, r6
 8013962:	f001 f875 	bl	8014a50 <i2c_flag_get>
 8013966:	b190      	cbz	r0, 801398e <gd32_i2c_write+0x56>
 8013968:	4b25      	ldr	r3, [pc, #148]	; (8013a00 <gd32_i2c_write+0xc8>)
 801396a:	f06f 0201 	mvn.w	r2, #1
 801396e:	7819      	ldrb	r1, [r3, #0]
 8013970:	4822      	ldr	r0, [pc, #136]	; (80139fc <gd32_i2c_write+0xc4>)
 8013972:	f001 f851 	bl	8014a18 <i2c_master_addressing>
 8013976:	f640 75ff 	movw	r5, #4095	; 0xfff
 801397a:	4e20      	ldr	r6, [pc, #128]	; (80139fc <gd32_i2c_write+0xc4>)
 801397c:	e00c      	b.n	8013998 <gd32_i2c_write+0x60>
 801397e:	3d01      	subs	r5, #1
 8013980:	d1e0      	bne.n	8013944 <gd32_i2c_write+0xc>
 8013982:	f7ff ff85 	bl	8013890 <_stop() [clone .isra.0]>
 8013986:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801398a:	4240      	negs	r0, r0
 801398c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801398e:	3d01      	subs	r5, #1
 8013990:	d1e4      	bne.n	801395c <gd32_i2c_write+0x24>
 8013992:	e7f6      	b.n	8013982 <gd32_i2c_write+0x4a>
 8013994:	3d01      	subs	r5, #1
 8013996:	d0f4      	beq.n	8013982 <gd32_i2c_write+0x4a>
 8013998:	f240 5101 	movw	r1, #1281	; 0x501
 801399c:	4630      	mov	r0, r6
 801399e:	f001 f857 	bl	8014a50 <i2c_flag_get>
 80139a2:	2800      	cmp	r0, #0
 80139a4:	d0f6      	beq.n	8013994 <gd32_i2c_write+0x5c>
 80139a6:	f240 5101 	movw	r1, #1281	; 0x501
 80139aa:	4814      	ldr	r0, [pc, #80]	; (80139fc <gd32_i2c_write+0xc4>)
 80139ac:	f001 f85b 	bl	8014a66 <i2c_flag_clear>
 80139b0:	f640 75ff 	movw	r5, #4095	; 0xfff
 80139b4:	4e11      	ldr	r6, [pc, #68]	; (80139fc <gd32_i2c_write+0xc4>)
 80139b6:	f240 5107 	movw	r1, #1287	; 0x507
 80139ba:	4630      	mov	r0, r6
 80139bc:	f001 f848 	bl	8014a50 <i2c_flag_get>
 80139c0:	2801      	cmp	r0, #1
 80139c2:	d107      	bne.n	80139d4 <gd32_i2c_write+0x9c>
 80139c4:	4e0d      	ldr	r6, [pc, #52]	; (80139fc <gd32_i2c_write+0xc4>)
 80139c6:	4427      	add	r7, r4
 80139c8:	42a7      	cmp	r7, r4
 80139ca:	d106      	bne.n	80139da <gd32_i2c_write+0xa2>
 80139cc:	f7ff ff60 	bl	8013890 <_stop() [clone .isra.0]>
 80139d0:	2000      	movs	r0, #0
 80139d2:	e7da      	b.n	801398a <gd32_i2c_write+0x52>
 80139d4:	3d01      	subs	r5, #1
 80139d6:	d1ee      	bne.n	80139b6 <gd32_i2c_write+0x7e>
 80139d8:	e7d3      	b.n	8013982 <gd32_i2c_write+0x4a>
 80139da:	4630      	mov	r0, r6
 80139dc:	f814 1b01 	ldrb.w	r1, [r4], #1
 80139e0:	f001 f831 	bl	8014a46 <i2c_data_transmit>
 80139e4:	f640 75ff 	movw	r5, #4095	; 0xfff
 80139e8:	f240 5102 	movw	r1, #1282	; 0x502
 80139ec:	4630      	mov	r0, r6
 80139ee:	f001 f82f 	bl	8014a50 <i2c_flag_get>
 80139f2:	2800      	cmp	r0, #0
 80139f4:	d1e8      	bne.n	80139c8 <gd32_i2c_write+0x90>
 80139f6:	3d01      	subs	r5, #1
 80139f8:	d1f6      	bne.n	80139e8 <gd32_i2c_write+0xb0>
 80139fa:	e7c2      	b.n	8013982 <gd32_i2c_write+0x4a>
 80139fc:	40005400 	andmi	r5, r0, r0, lsl #8
 8013a00:	2001a968 	andcs	sl, r1, r8, ror #18

08013a04 <gd32_i2c_read>:
 8013a04:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8013a08:	4680      	mov	r8, r0
 8013a0a:	460c      	mov	r4, r1
 8013a0c:	f640 76ff 	movw	r6, #4095	; 0xfff
 8013a10:	4f4b      	ldr	r7, [pc, #300]	; (8013b40 <gd32_i2c_read+0x13c>)
 8013a12:	f240 6101 	movw	r1, #1537	; 0x601
 8013a16:	4638      	mov	r0, r7
 8013a18:	f001 f81a 	bl	8014a50 <i2c_flag_get>
 8013a1c:	4605      	mov	r5, r0
 8013a1e:	bb08      	cbnz	r0, 8013a64 <gd32_i2c_read+0x60>
 8013a20:	2c02      	cmp	r4, #2
 8013a22:	d103      	bne.n	8013a2c <gd32_i2c_read+0x28>
 8013a24:	4601      	mov	r1, r0
 8013a26:	4846      	ldr	r0, [pc, #280]	; (8013b40 <gd32_i2c_read+0x13c>)
 8013a28:	f000 ffed 	bl	8014a06 <i2c_ackpos_config>
 8013a2c:	4844      	ldr	r0, [pc, #272]	; (8013b40 <gd32_i2c_read+0x13c>)
 8013a2e:	f001 f800 	bl	8014a32 <i2c_start_on_bus>
 8013a32:	f640 76ff 	movw	r6, #4095	; 0xfff
 8013a36:	4f42      	ldr	r7, [pc, #264]	; (8013b40 <gd32_i2c_read+0x13c>)
 8013a38:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8013a3c:	4638      	mov	r0, r7
 8013a3e:	f001 f807 	bl	8014a50 <i2c_flag_get>
 8013a42:	b1a8      	cbz	r0, 8013a70 <gd32_i2c_read+0x6c>
 8013a44:	4b3f      	ldr	r3, [pc, #252]	; (8013b44 <gd32_i2c_read+0x140>)
 8013a46:	2201      	movs	r2, #1
 8013a48:	7819      	ldrb	r1, [r3, #0]
 8013a4a:	483d      	ldr	r0, [pc, #244]	; (8013b40 <gd32_i2c_read+0x13c>)
 8013a4c:	f000 ffe4 	bl	8014a18 <i2c_master_addressing>
 8013a50:	2c02      	cmp	r4, #2
 8013a52:	d803      	bhi.n	8013a5c <gd32_i2c_read+0x58>
 8013a54:	2100      	movs	r1, #0
 8013a56:	483a      	ldr	r0, [pc, #232]	; (8013b40 <gd32_i2c_read+0x13c>)
 8013a58:	f000 ffcc 	bl	80149f4 <i2c_ack_config>
 8013a5c:	f640 76ff 	movw	r6, #4095	; 0xfff
 8013a60:	4f37      	ldr	r7, [pc, #220]	; (8013b40 <gd32_i2c_read+0x13c>)
 8013a62:	e00a      	b.n	8013a7a <gd32_i2c_read+0x76>
 8013a64:	3e01      	subs	r6, #1
 8013a66:	d1d4      	bne.n	8013a12 <gd32_i2c_read+0xe>
 8013a68:	f7ff ff12 	bl	8013890 <_stop() [clone .isra.0]>
 8013a6c:	2504      	movs	r5, #4
 8013a6e:	e04d      	b.n	8013b0c <gd32_i2c_read+0x108>
 8013a70:	3e01      	subs	r6, #1
 8013a72:	d1e1      	bne.n	8013a38 <gd32_i2c_read+0x34>
 8013a74:	e7f8      	b.n	8013a68 <gd32_i2c_read+0x64>
 8013a76:	3e01      	subs	r6, #1
 8013a78:	d0f6      	beq.n	8013a68 <gd32_i2c_read+0x64>
 8013a7a:	f240 5101 	movw	r1, #1281	; 0x501
 8013a7e:	4638      	mov	r0, r7
 8013a80:	f000 ffe6 	bl	8014a50 <i2c_flag_get>
 8013a84:	2800      	cmp	r0, #0
 8013a86:	d0f6      	beq.n	8013a76 <gd32_i2c_read+0x72>
 8013a88:	f240 5101 	movw	r1, #1281	; 0x501
 8013a8c:	482c      	ldr	r0, [pc, #176]	; (8013b40 <gd32_i2c_read+0x13c>)
 8013a8e:	f000 ffea 	bl	8014a66 <i2c_flag_clear>
 8013a92:	2c01      	cmp	r4, #1
 8013a94:	d102      	bne.n	8013a9c <gd32_i2c_read+0x98>
 8013a96:	482a      	ldr	r0, [pc, #168]	; (8013b40 <gd32_i2c_read+0x13c>)
 8013a98:	f000 ffd0 	bl	8014a3c <i2c_stop_on_bus>
 8013a9c:	f640 77ff 	movw	r7, #4095	; 0xfff
 8013aa0:	4e27      	ldr	r6, [pc, #156]	; (8013b40 <gd32_i2c_read+0x13c>)
 8013aa2:	e022      	b.n	8013aea <gd32_i2c_read+0xe6>
 8013aa4:	2c03      	cmp	r4, #3
 8013aa6:	d134      	bne.n	8013b12 <gd32_i2c_read+0x10e>
 8013aa8:	f640 79ff 	movw	r9, #4095	; 0xfff
 8013aac:	e002      	b.n	8013ab4 <gd32_i2c_read+0xb0>
 8013aae:	f1b9 0901 	subs.w	r9, r9, #1
 8013ab2:	d0d9      	beq.n	8013a68 <gd32_i2c_read+0x64>
 8013ab4:	f240 5102 	movw	r1, #1282	; 0x502
 8013ab8:	4630      	mov	r0, r6
 8013aba:	f000 ffc9 	bl	8014a50 <i2c_flag_get>
 8013abe:	2800      	cmp	r0, #0
 8013ac0:	d0f5      	beq.n	8013aae <gd32_i2c_read+0xaa>
 8013ac2:	2100      	movs	r1, #0
 8013ac4:	4630      	mov	r0, r6
 8013ac6:	f000 ff95 	bl	80149f4 <i2c_ack_config>
 8013aca:	f240 5106 	movw	r1, #1286	; 0x506
 8013ace:	4630      	mov	r0, r6
 8013ad0:	f000 ffbe 	bl	8014a50 <i2c_flag_get>
 8013ad4:	b138      	cbz	r0, 8013ae6 <gd32_i2c_read+0xe2>
 8013ad6:	4630      	mov	r0, r6
 8013ad8:	f000 ffb7 	bl	8014a4a <i2c_data_receive>
 8013adc:	f640 77ff 	movw	r7, #4095	; 0xfff
 8013ae0:	f808 0b01 	strb.w	r0, [r8], #1
 8013ae4:	3c01      	subs	r4, #1
 8013ae6:	3f01      	subs	r7, #1
 8013ae8:	d0be      	beq.n	8013a68 <gd32_i2c_read+0x64>
 8013aea:	2c00      	cmp	r4, #0
 8013aec:	d1da      	bne.n	8013aa4 <gd32_i2c_read+0xa0>
 8013aee:	f640 73ff 	movw	r3, #4095	; 0xfff
 8013af2:	4915      	ldr	r1, [pc, #84]	; (8013b48 <gd32_i2c_read+0x144>)
 8013af4:	f8d1 2400 	ldr.w	r2, [r1, #1024]	; 0x400
 8013af8:	0592      	lsls	r2, r2, #22
 8013afa:	d41d      	bmi.n	8013b38 <gd32_i2c_read+0x134>
 8013afc:	2101      	movs	r1, #1
 8013afe:	4810      	ldr	r0, [pc, #64]	; (8013b40 <gd32_i2c_read+0x13c>)
 8013b00:	f000 ff78 	bl	80149f4 <i2c_ack_config>
 8013b04:	2101      	movs	r1, #1
 8013b06:	480e      	ldr	r0, [pc, #56]	; (8013b40 <gd32_i2c_read+0x13c>)
 8013b08:	f000 ff7d 	bl	8014a06 <i2c_ackpos_config>
 8013b0c:	4628      	mov	r0, r5
 8013b0e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8013b12:	2c02      	cmp	r4, #2
 8013b14:	d1d9      	bne.n	8013aca <gd32_i2c_read+0xc6>
 8013b16:	f640 79ff 	movw	r9, #4095	; 0xfff
 8013b1a:	e002      	b.n	8013b22 <gd32_i2c_read+0x11e>
 8013b1c:	f1b9 0901 	subs.w	r9, r9, #1
 8013b20:	d0a2      	beq.n	8013a68 <gd32_i2c_read+0x64>
 8013b22:	f240 5102 	movw	r1, #1282	; 0x502
 8013b26:	4630      	mov	r0, r6
 8013b28:	f000 ff92 	bl	8014a50 <i2c_flag_get>
 8013b2c:	2800      	cmp	r0, #0
 8013b2e:	d0f5      	beq.n	8013b1c <gd32_i2c_read+0x118>
 8013b30:	4630      	mov	r0, r6
 8013b32:	f000 ff83 	bl	8014a3c <i2c_stop_on_bus>
 8013b36:	e7c8      	b.n	8013aca <gd32_i2c_read+0xc6>
 8013b38:	3b01      	subs	r3, #1
 8013b3a:	d1db      	bne.n	8013af4 <gd32_i2c_read+0xf0>
 8013b3c:	e796      	b.n	8013a6c <gd32_i2c_read+0x68>
 8013b3e:	bf00      	nop
 8013b40:	40005400 	andmi	r5, r0, r0, lsl #8
 8013b44:	2001a968 	andcs	sl, r1, r8, ror #18
 8013b48:	40005000 	andmi	r5, r0, r0

08013b4c <gd32_uart_begin>:
 8013b4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8013b4e:	461e      	mov	r6, r3
 8013b50:	4b82      	ldr	r3, [pc, #520]	; (8013d5c <gd32_uart_begin+0x210>)
 8013b52:	4604      	mov	r4, r0
 8013b54:	4298      	cmp	r0, r3
 8013b56:	460f      	mov	r7, r1
 8013b58:	4615      	mov	r5, r2
 8013b5a:	d060      	beq.n	8013c1e <gd32_uart_begin+0xd2>
 8013b5c:	d80f      	bhi.n	8013b7e <gd32_uart_begin+0x32>
 8013b5e:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 8013b62:	4298      	cmp	r0, r3
 8013b64:	d04a      	beq.n	8013bfc <gd32_uart_begin+0xb0>
 8013b66:	d84c      	bhi.n	8013c02 <gd32_uart_begin+0xb6>
 8013b68:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8013b6c:	4298      	cmp	r0, r3
 8013b6e:	d03e      	beq.n	8013bee <gd32_uart_begin+0xa2>
 8013b70:	f240 7012 	movw	r0, #1810	; 0x712
 8013b74:	f7ff f978 	bl	8012e68 <rcu_periph_clock_enable>
 8013b78:	f240 6004 	movw	r0, #1540	; 0x604
 8013b7c:	e00f      	b.n	8013b9e <gd32_uart_begin+0x52>
 8013b7e:	4b78      	ldr	r3, [pc, #480]	; (8013d60 <gd32_uart_begin+0x214>)
 8013b80:	4298      	cmp	r0, r3
 8013b82:	d006      	beq.n	8013b92 <gd32_uart_begin+0x46>
 8013b84:	f503 5360 	add.w	r3, r3, #14336	; 0x3800
 8013b88:	4298      	cmp	r0, r3
 8013b8a:	d045      	beq.n	8013c18 <gd32_uart_begin+0xcc>
 8013b8c:	f641 201f 	movw	r0, #6687	; 0x1a1f
 8013b90:	e047      	b.n	8013c22 <gd32_uart_begin+0xd6>
 8013b92:	f240 600e 	movw	r0, #1550	; 0x60e
 8013b96:	f7ff f967 	bl	8012e68 <rcu_periph_clock_enable>
 8013b9a:	f240 6003 	movw	r0, #1539	; 0x603
 8013b9e:	f7ff f963 	bl	8012e68 <rcu_periph_clock_enable>
 8013ba2:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 8013ba6:	f7ff f95f 	bl	8012e68 <rcu_periph_clock_enable>
 8013baa:	4b6c      	ldr	r3, [pc, #432]	; (8013d5c <gd32_uart_begin+0x210>)
 8013bac:	429c      	cmp	r4, r3
 8013bae:	f000 80c3 	beq.w	8013d38 <gd32_uart_begin+0x1ec>
 8013bb2:	d83b      	bhi.n	8013c2c <gd32_uart_begin+0xe0>
 8013bb4:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 8013bb8:	429c      	cmp	r4, r3
 8013bba:	f000 809c 	beq.w	8013cf6 <gd32_uart_begin+0x1aa>
 8013bbe:	f200 80a7 	bhi.w	8013d10 <gd32_uart_begin+0x1c4>
 8013bc2:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8013bc6:	429c      	cmp	r4, r3
 8013bc8:	f000 8088 	beq.w	8013cdc <gd32_uart_begin+0x190>
 8013bcc:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8013bd0:	2203      	movs	r2, #3
 8013bd2:	2118      	movs	r1, #24
 8013bd4:	4863      	ldr	r0, [pc, #396]	; (8013d64 <gd32_uart_begin+0x218>)
 8013bd6:	f7ff f8af 	bl	8012d38 <gpio_init>
 8013bda:	2104      	movs	r1, #4
 8013bdc:	4861      	ldr	r0, [pc, #388]	; (8013d64 <gd32_uart_begin+0x218>)
 8013bde:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8013be2:	2203      	movs	r2, #3
 8013be4:	f7ff f8a8 	bl	8012d38 <gpio_init>
 8013be8:	2101      	movs	r1, #1
 8013bea:	485f      	ldr	r0, [pc, #380]	; (8013d68 <gd32_uart_begin+0x21c>)
 8013bec:	e03b      	b.n	8013c66 <gd32_uart_begin+0x11a>
 8013bee:	f240 7011 	movw	r0, #1809	; 0x711
 8013bf2:	f7ff f939 	bl	8012e68 <rcu_periph_clock_enable>
 8013bf6:	f240 6002 	movw	r0, #1538	; 0x602
 8013bfa:	e7d0      	b.n	8013b9e <gd32_uart_begin+0x52>
 8013bfc:	f240 7013 	movw	r0, #1811	; 0x713
 8013c00:	e7b8      	b.n	8013b74 <gd32_uart_begin+0x28>
 8013c02:	f240 7014 	movw	r0, #1812	; 0x714
 8013c06:	f7ff f92f 	bl	8012e68 <rcu_periph_clock_enable>
 8013c0a:	f240 6004 	movw	r0, #1540	; 0x604
 8013c0e:	f7ff f92b 	bl	8012e68 <rcu_periph_clock_enable>
 8013c12:	f240 6005 	movw	r0, #1541	; 0x605
 8013c16:	e7c2      	b.n	8013b9e <gd32_uart_begin+0x52>
 8013c18:	f641 1018 	movw	r0, #6424	; 0x1918
 8013c1c:	e7aa      	b.n	8013b74 <gd32_uart_begin+0x28>
 8013c1e:	f641 201e 	movw	r0, #6686	; 0x1a1e
 8013c22:	f7ff f921 	bl	8012e68 <rcu_periph_clock_enable>
 8013c26:	f240 6006 	movw	r0, #1542	; 0x606
 8013c2a:	e7b8      	b.n	8013b9e <gd32_uart_begin+0x52>
 8013c2c:	4b4c      	ldr	r3, [pc, #304]	; (8013d60 <gd32_uart_begin+0x214>)
 8013c2e:	429c      	cmp	r4, r3
 8013c30:	d00b      	beq.n	8013c4a <gd32_uart_begin+0xfe>
 8013c32:	f503 5360 	add.w	r3, r3, #14336	; 0x3800
 8013c36:	429c      	cmp	r4, r3
 8013c38:	d076      	beq.n	8013d28 <gd32_uart_begin+0x1dc>
 8013c3a:	2302      	movs	r3, #2
 8013c3c:	2203      	movs	r2, #3
 8013c3e:	2118      	movs	r1, #24
 8013c40:	484a      	ldr	r0, [pc, #296]	; (8013d6c <gd32_uart_begin+0x220>)
 8013c42:	f7ff f879 	bl	8012d38 <gpio_init>
 8013c46:	2301      	movs	r3, #1
 8013c48:	e07e      	b.n	8013d48 <gd32_uart_begin+0x1fc>
 8013c4a:	2340      	movs	r3, #64	; 0x40
 8013c4c:	2203      	movs	r2, #3
 8013c4e:	2118      	movs	r1, #24
 8013c50:	4847      	ldr	r0, [pc, #284]	; (8013d70 <gd32_uart_begin+0x224>)
 8013c52:	f7ff f871 	bl	8012d38 <gpio_init>
 8013c56:	2104      	movs	r1, #4
 8013c58:	4845      	ldr	r0, [pc, #276]	; (8013d70 <gd32_uart_begin+0x224>)
 8013c5a:	2380      	movs	r3, #128	; 0x80
 8013c5c:	2203      	movs	r2, #3
 8013c5e:	f7ff f86b 	bl	8012d38 <gpio_init>
 8013c62:	2101      	movs	r1, #1
 8013c64:	2004      	movs	r0, #4
 8013c66:	f7ff f8bb 	bl	8012de0 <gpio_pin_remap_config>
 8013c6a:	4620      	mov	r0, r4
 8013c6c:	f7ff fcdc 	bl	8013628 <usart_deinit>
 8013c70:	68e3      	ldr	r3, [r4, #12]
 8013c72:	4639      	mov	r1, r7
 8013c74:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8013c78:	4620      	mov	r0, r4
 8013c7a:	60e3      	str	r3, [r4, #12]
 8013c7c:	f7ff fd36 	bl	80136ec <usart_baudrate_set>
 8013c80:	f1a5 0309 	sub.w	r3, r5, #9
 8013c84:	4259      	negs	r1, r3
 8013c86:	4159      	adcs	r1, r3
 8013c88:	4620      	mov	r0, r4
 8013c8a:	0309      	lsls	r1, r1, #12
 8013c8c:	f7ff fd6a 	bl	8013764 <usart_word_length_set>
 8013c90:	9906      	ldr	r1, [sp, #24]
 8013c92:	4620      	mov	r0, r4
 8013c94:	1e8a      	subs	r2, r1, #2
 8013c96:	4251      	negs	r1, r2
 8013c98:	4151      	adcs	r1, r2
 8013c9a:	0349      	lsls	r1, r1, #13
 8013c9c:	f7ff fd6a 	bl	8013774 <usart_stop_bit_set>
 8013ca0:	2e01      	cmp	r6, #1
 8013ca2:	d055      	beq.n	8013d50 <gd32_uart_begin+0x204>
 8013ca4:	2e02      	cmp	r6, #2
 8013ca6:	d156      	bne.n	8013d56 <gd32_uart_begin+0x20a>
 8013ca8:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8013cac:	4620      	mov	r0, r4
 8013cae:	f7ff fd51 	bl	8013754 <usart_parity_config>
 8013cb2:	2100      	movs	r1, #0
 8013cb4:	4620      	mov	r0, r4
 8013cb6:	f7ff fd71 	bl	801379c <usart_hardware_flow_rts_config>
 8013cba:	2100      	movs	r1, #0
 8013cbc:	4620      	mov	r0, r4
 8013cbe:	f7ff fd73 	bl	80137a8 <usart_hardware_flow_cts_config>
 8013cc2:	2104      	movs	r1, #4
 8013cc4:	4620      	mov	r0, r4
 8013cc6:	f7ff fd63 	bl	8013790 <usart_receive_config>
 8013cca:	2108      	movs	r1, #8
 8013ccc:	4620      	mov	r0, r4
 8013cce:	f7ff fd59 	bl	8013784 <usart_transmit_config>
 8013cd2:	68e3      	ldr	r3, [r4, #12]
 8013cd4:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8013cd8:	60e3      	str	r3, [r4, #12]
 8013cda:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8013cdc:	2304      	movs	r3, #4
 8013cde:	2203      	movs	r2, #3
 8013ce0:	2118      	movs	r1, #24
 8013ce2:	4824      	ldr	r0, [pc, #144]	; (8013d74 <gd32_uart_begin+0x228>)
 8013ce4:	f7ff f828 	bl	8012d38 <gpio_init>
 8013ce8:	2308      	movs	r3, #8
 8013cea:	2203      	movs	r2, #3
 8013cec:	2104      	movs	r1, #4
 8013cee:	4821      	ldr	r0, [pc, #132]	; (8013d74 <gd32_uart_begin+0x228>)
 8013cf0:	f7ff f822 	bl	8012d38 <gpio_init>
 8013cf4:	e7b9      	b.n	8013c6a <gd32_uart_begin+0x11e>
 8013cf6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8013cfa:	2203      	movs	r2, #3
 8013cfc:	2118      	movs	r1, #24
 8013cfe:	4819      	ldr	r0, [pc, #100]	; (8013d64 <gd32_uart_begin+0x218>)
 8013d00:	f7ff f81a 	bl	8012d38 <gpio_init>
 8013d04:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8013d08:	2203      	movs	r2, #3
 8013d0a:	2104      	movs	r1, #4
 8013d0c:	4815      	ldr	r0, [pc, #84]	; (8013d64 <gd32_uart_begin+0x218>)
 8013d0e:	e7ef      	b.n	8013cf0 <gd32_uart_begin+0x1a4>
 8013d10:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8013d14:	2203      	movs	r2, #3
 8013d16:	2118      	movs	r1, #24
 8013d18:	4812      	ldr	r0, [pc, #72]	; (8013d64 <gd32_uart_begin+0x218>)
 8013d1a:	f7ff f80d 	bl	8012d38 <gpio_init>
 8013d1e:	2304      	movs	r3, #4
 8013d20:	2203      	movs	r2, #3
 8013d22:	4619      	mov	r1, r3
 8013d24:	4814      	ldr	r0, [pc, #80]	; (8013d78 <gd32_uart_begin+0x22c>)
 8013d26:	e7e3      	b.n	8013cf0 <gd32_uart_begin+0x1a4>
 8013d28:	2340      	movs	r3, #64	; 0x40
 8013d2a:	2203      	movs	r2, #3
 8013d2c:	2118      	movs	r1, #24
 8013d2e:	480d      	ldr	r0, [pc, #52]	; (8013d64 <gd32_uart_begin+0x218>)
 8013d30:	f7ff f802 	bl	8012d38 <gpio_init>
 8013d34:	2380      	movs	r3, #128	; 0x80
 8013d36:	e7e7      	b.n	8013d08 <gd32_uart_begin+0x1bc>
 8013d38:	f44f 7380 	mov.w	r3, #256	; 0x100
 8013d3c:	2203      	movs	r2, #3
 8013d3e:	2118      	movs	r1, #24
 8013d40:	480a      	ldr	r0, [pc, #40]	; (8013d6c <gd32_uart_begin+0x220>)
 8013d42:	f7fe fff9 	bl	8012d38 <gpio_init>
 8013d46:	2380      	movs	r3, #128	; 0x80
 8013d48:	2203      	movs	r2, #3
 8013d4a:	2104      	movs	r1, #4
 8013d4c:	4807      	ldr	r0, [pc, #28]	; (8013d6c <gd32_uart_begin+0x220>)
 8013d4e:	e7cf      	b.n	8013cf0 <gd32_uart_begin+0x1a4>
 8013d50:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 8013d54:	e7aa      	b.n	8013cac <gd32_uart_begin+0x160>
 8013d56:	2100      	movs	r1, #0
 8013d58:	e7a8      	b.n	8013cac <gd32_uart_begin+0x160>
 8013d5a:	bf00      	nop
 8013d5c:	40007800 	andmi	r7, r0, r0, lsl #16
 8013d60:	40013800 	andmi	r3, r1, r0, lsl #16
 8013d64:	40011000 	andmi	r1, r1, r0
 8013d68:	00140010 	andseq	r0, r4, r0, lsl r0
 8013d6c:	40011800 	andmi	r1, r1, r0, lsl #16
 8013d70:	40010c00 	andmi	r0, r1, r0, lsl #24
 8013d74:	40010800 	andmi	r0, r1, r0, lsl #16
 8013d78:	40011400 	andmi	r1, r1, r0, lsl #8

08013d7c <micros_init()>:
 8013d7c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8013d7e:	2400      	movs	r4, #0
 8013d80:	f04f 36ff 	mov.w	r6, #4294967295	; 0xffffffff
 8013d84:	4d22      	ldr	r5, [pc, #136]	; (8013e10 <micros_init()+0x94>)
 8013d86:	f240 6013 	movw	r0, #1555	; 0x613
 8013d8a:	f7ff f86d 	bl	8012e68 <rcu_periph_clock_enable>
 8013d8e:	4628      	mov	r0, r5
 8013d90:	f7ff f9ce 	bl	8013130 <timer_deinit>
 8013d94:	4b1f      	ldr	r3, [pc, #124]	; (8013e14 <micros_init()+0x98>)
 8013d96:	4628      	mov	r0, r5
 8013d98:	f8c3 4c24 	str.w	r4, [r3, #3108]	; 0xc24
 8013d9c:	4669      	mov	r1, sp
 8013d9e:	9400      	str	r4, [sp, #0]
 8013da0:	f8ad 4004 	strh.w	r4, [sp, #4]
 8013da4:	9602      	str	r6, [sp, #8]
 8013da6:	f8ad 400c 	strh.w	r4, [sp, #12]
 8013daa:	f7ff fa67 	bl	801327c <timer_init>
 8013dae:	4628      	mov	r0, r5
 8013db0:	4621      	mov	r1, r4
 8013db2:	f7ff fc27 	bl	8013604 <timer_master_slave_mode_config>
 8013db6:	4628      	mov	r0, r5
 8013db8:	2107      	movs	r1, #7
 8013dba:	f7ff fc1b 	bl	80135f4 <timer_slave_mode_select>
 8013dbe:	2120      	movs	r1, #32
 8013dc0:	4628      	mov	r0, r5
 8013dc2:	f7ff fc07 	bl	80135d4 <timer_input_trigger_source_select>
 8013dc6:	4628      	mov	r0, r5
 8013dc8:	f7ff fab0 	bl	801332c <timer_enable>
 8013dcc:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8013dd0:	f240 6014 	movw	r0, #1556	; 0x614
 8013dd4:	f7ff f848 	bl	8012e68 <rcu_periph_clock_enable>
 8013dd8:	4628      	mov	r0, r5
 8013dda:	f7ff f9a9 	bl	8013130 <timer_deinit>
 8013dde:	2377      	movs	r3, #119	; 0x77
 8013de0:	626c      	str	r4, [r5, #36]	; 0x24
 8013de2:	4669      	mov	r1, sp
 8013de4:	4628      	mov	r0, r5
 8013de6:	9300      	str	r3, [sp, #0]
 8013de8:	f8ad 4004 	strh.w	r4, [sp, #4]
 8013dec:	9602      	str	r6, [sp, #8]
 8013dee:	f8ad 400c 	strh.w	r4, [sp, #12]
 8013df2:	f7ff fa43 	bl	801327c <timer_init>
 8013df6:	4621      	mov	r1, r4
 8013df8:	4628      	mov	r0, r5
 8013dfa:	f7ff fc03 	bl	8013604 <timer_master_slave_mode_config>
 8013dfe:	2120      	movs	r1, #32
 8013e00:	4628      	mov	r0, r5
 8013e02:	f7ff fbef 	bl	80135e4 <timer_master_output_trigger_source_select>
 8013e06:	4628      	mov	r0, r5
 8013e08:	f7ff fa90 	bl	801332c <timer_enable>
 8013e0c:	b004      	add	sp, #16
 8013e0e:	bd70      	pop	{r4, r5, r6, pc}
 8013e10:	40014c00 	andmi	r4, r1, r0, lsl #24
 8013e14:	40014000 	andmi	r4, r1, r0

08013e18 <udelay_init()>:
 8013e18:	4a07      	ldr	r2, [pc, #28]	; (8013e38 <udelay_init()+0x20>)
 8013e1a:	f8d2 30fc 	ldr.w	r3, [r2, #252]	; 0xfc
 8013e1e:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8013e22:	f8c2 30fc 	str.w	r3, [r2, #252]	; 0xfc
 8013e26:	2200      	movs	r2, #0
 8013e28:	4b04      	ldr	r3, [pc, #16]	; (8013e3c <udelay_init()+0x24>)
 8013e2a:	605a      	str	r2, [r3, #4]
 8013e2c:	681a      	ldr	r2, [r3, #0]
 8013e2e:	f042 0201 	orr.w	r2, r2, #1
 8013e32:	601a      	str	r2, [r3, #0]
 8013e34:	4770      	bx	lr
 8013e36:	bf00      	nop
 8013e38:	e000ed00 	and	lr, r0, r0, lsl #26
 8013e3c:	e0001000 	and	r1, r0, r0

08013e40 <udelay(unsigned int, unsigned int)>:
 8013e40:	2378      	movs	r3, #120	; 0x78
 8013e42:	b530      	push	{r4, r5, lr}
 8013e44:	4358      	muls	r0, r3
 8013e46:	b909      	cbnz	r1, 8013e4c <udelay(unsigned int, unsigned int)+0xc>
 8013e48:	4b08      	ldr	r3, [pc, #32]	; (8013e6c <udelay(unsigned int, unsigned int)+0x2c>)
 8013e4a:	6859      	ldr	r1, [r3, #4]
 8013e4c:	2300      	movs	r3, #0
 8013e4e:	4c07      	ldr	r4, [pc, #28]	; (8013e6c <udelay(unsigned int, unsigned int)+0x2c>)
 8013e50:	6862      	ldr	r2, [r4, #4]
 8013e52:	4291      	cmp	r1, r2
 8013e54:	d0fc      	beq.n	8013e50 <udelay(unsigned int, unsigned int)+0x10>
 8013e56:	bf2a      	itet	cs
 8013e58:	f102 35ff 	addcs.w	r5, r2, #4294967295	; 0xffffffff
 8013e5c:	189b      	addcc	r3, r3, r2
 8013e5e:	195b      	addcs	r3, r3, r5
 8013e60:	1a5b      	subs	r3, r3, r1
 8013e62:	4283      	cmp	r3, r0
 8013e64:	d300      	bcc.n	8013e68 <udelay(unsigned int, unsigned int)+0x28>
 8013e66:	bd30      	pop	{r4, r5, pc}
 8013e68:	4611      	mov	r1, r2
 8013e6a:	e7f1      	b.n	8013e50 <udelay(unsigned int, unsigned int)+0x10>
 8013e6c:	e0001000 	and	r1, r0, r0

08013e70 <emac_start(unsigned char*)>:
 8013e70:	b538      	push	{r3, r4, r5, lr}
 8013e72:	4605      	mov	r5, r0
 8013e74:	f240 6002 	movw	r0, #1538	; 0x602
 8013e78:	f7fe fff6 	bl	8012e68 <rcu_periph_clock_enable>
 8013e7c:	f240 6003 	movw	r0, #1539	; 0x603
 8013e80:	f7fe fff2 	bl	8012e68 <rcu_periph_clock_enable>
 8013e84:	f240 6004 	movw	r0, #1540	; 0x604
 8013e88:	f7fe ffee 	bl	8012e68 <rcu_periph_clock_enable>
 8013e8c:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 8013e90:	f7fe ffea 	bl	8012e68 <rcu_periph_clock_enable>
 8013e94:	f44f 7380 	mov.w	r3, #256	; 0x100
 8013e98:	2203      	movs	r2, #3
 8013e9a:	2118      	movs	r1, #24
 8013e9c:	4844      	ldr	r0, [pc, #272]	; (8013fb0 <emac_start(unsigned char*)+0x140>)
 8013e9e:	f7fe ff4b 	bl	8012d38 <gpio_init>
 8013ea2:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 8013ea6:	f7ff f80f 	bl	8012ec8 <rcu_pll2_config>
 8013eaa:	201c      	movs	r0, #28
 8013eac:	f7ff f8b6 	bl	801301c <rcu_osci_on>
 8013eb0:	201c      	movs	r0, #28
 8013eb2:	f7ff f843 	bl	8012f3c <rcu_osci_stab_wait>
 8013eb6:	2100      	movs	r1, #0
 8013eb8:	f04f 6030 	mov.w	r0, #184549376	; 0xb000000
 8013ebc:	f7fe fff4 	bl	8012ea8 <rcu_ckout0_config>
 8013ec0:	f44f 0000 	mov.w	r0, #8388608	; 0x800000
 8013ec4:	f7fe ffbc 	bl	8012e40 <gpio_ethernet_phy_select>
 8013ec8:	2302      	movs	r3, #2
 8013eca:	2203      	movs	r2, #3
 8013ecc:	2104      	movs	r1, #4
 8013ece:	4838      	ldr	r0, [pc, #224]	; (8013fb0 <emac_start(unsigned char*)+0x140>)
 8013ed0:	f7fe ff32 	bl	8012d38 <gpio_init>
 8013ed4:	2304      	movs	r3, #4
 8013ed6:	2203      	movs	r2, #3
 8013ed8:	2118      	movs	r1, #24
 8013eda:	4835      	ldr	r0, [pc, #212]	; (8013fb0 <emac_start(unsigned char*)+0x140>)
 8013edc:	f7fe ff2c 	bl	8012d38 <gpio_init>
 8013ee0:	2380      	movs	r3, #128	; 0x80
 8013ee2:	2203      	movs	r2, #3
 8013ee4:	2104      	movs	r1, #4
 8013ee6:	4832      	ldr	r0, [pc, #200]	; (8013fb0 <emac_start(unsigned char*)+0x140>)
 8013ee8:	f7fe ff26 	bl	8012d38 <gpio_init>
 8013eec:	2302      	movs	r3, #2
 8013eee:	2203      	movs	r2, #3
 8013ef0:	2118      	movs	r1, #24
 8013ef2:	4830      	ldr	r0, [pc, #192]	; (8013fb4 <emac_start(unsigned char*)+0x144>)
 8013ef4:	f7fe ff20 	bl	8012d38 <gpio_init>
 8013ef8:	2310      	movs	r3, #16
 8013efa:	2203      	movs	r2, #3
 8013efc:	2104      	movs	r1, #4
 8013efe:	482d      	ldr	r0, [pc, #180]	; (8013fb4 <emac_start(unsigned char*)+0x144>)
 8013f00:	f7fe ff1a 	bl	8012d38 <gpio_init>
 8013f04:	2320      	movs	r3, #32
 8013f06:	2203      	movs	r2, #3
 8013f08:	2104      	movs	r1, #4
 8013f0a:	482a      	ldr	r0, [pc, #168]	; (8013fb4 <emac_start(unsigned char*)+0x144>)
 8013f0c:	f7fe ff14 	bl	8012d38 <gpio_init>
 8013f10:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8013f14:	2203      	movs	r2, #3
 8013f16:	2118      	movs	r1, #24
 8013f18:	4827      	ldr	r0, [pc, #156]	; (8013fb8 <emac_start(unsigned char*)+0x148>)
 8013f1a:	f7fe ff0d 	bl	8012d38 <gpio_init>
 8013f1e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8013f22:	2203      	movs	r2, #3
 8013f24:	2118      	movs	r1, #24
 8013f26:	4824      	ldr	r0, [pc, #144]	; (8013fb8 <emac_start(unsigned char*)+0x148>)
 8013f28:	f7fe ff06 	bl	8012d38 <gpio_init>
 8013f2c:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8013f30:	2203      	movs	r2, #3
 8013f32:	2118      	movs	r1, #24
 8013f34:	4820      	ldr	r0, [pc, #128]	; (8013fb8 <emac_start(unsigned char*)+0x148>)
 8013f36:	f7fe feff 	bl	8012d38 <gpio_init>
 8013f3a:	f240 500e 	movw	r0, #1294	; 0x50e
 8013f3e:	f7fe ff93 	bl	8012e68 <rcu_periph_clock_enable>
 8013f42:	f240 500f 	movw	r0, #1295	; 0x50f
 8013f46:	f7fe ff8f 	bl	8012e68 <rcu_periph_clock_enable>
 8013f4a:	f44f 60a2 	mov.w	r0, #1296	; 0x510
 8013f4e:	f7fe ff8b 	bl	8012e68 <rcu_periph_clock_enable>
 8013f52:	f000 fcdf 	bl	8014914 <enet_deinit>
 8013f56:	f000 f93b 	bl	80141d0 <enet_software_reset>
 8013f5a:	4604      	mov	r4, r0
 8013f5c:	b138      	cbz	r0, 8013f6e <emac_start(unsigned char*)+0xfe>
 8013f5e:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 8013f62:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8013f66:	2001      	movs	r0, #1
 8013f68:	f000 fab6 	bl	80144d8 <enet_init>
 8013f6c:	4604      	mov	r4, r0
 8013f6e:	4628      	mov	r0, r5
 8013f70:	f000 fd8c 	bl	8014a8c <mac_address_get(unsigned char*)>
 8013f74:	4629      	mov	r1, r5
 8013f76:	2000      	movs	r0, #0
 8013f78:	f000 fa0e 	bl	8014398 <enet_mac_address_set>
 8013f7c:	f44f 00e0 	mov.w	r0, #7340032	; 0x700000
 8013f80:	f000 f93a 	bl	80141f8 <enet_descriptors_chain_init>
 8013f84:	f44f 2060 	mov.w	r0, #917504	; 0xe0000
 8013f88:	f000 f936 	bl	80141f8 <enet_descriptors_chain_init>
 8013f8c:	f44f 0140 	mov.w	r1, #12582912	; 0xc00000
 8013f90:	480a      	ldr	r0, [pc, #40]	; (8013fbc <emac_start(unsigned char*)+0x14c>)
 8013f92:	f000 f9fb 	bl	801438c <enet_transmit_checksum_config>
 8013f96:	f44f 0140 	mov.w	r1, #12582912	; 0xc00000
 8013f9a:	4809      	ldr	r0, [pc, #36]	; (8013fc0 <emac_start(unsigned char*)+0x150>)
 8013f9c:	f000 f9f6 	bl	801438c <enet_transmit_checksum_config>
 8013fa0:	f000 fc30 	bl	8014804 <enet_enable>
 8013fa4:	fab4 f084 	clz	r0, r4
 8013fa8:	0940      	lsrs	r0, r0, #5
 8013faa:	4240      	negs	r0, r0
 8013fac:	bd38      	pop	{r3, r4, r5, pc}
 8013fae:	bf00      	nop
 8013fb0:	40010800 	andmi	r0, r1, r0, lsl #16
 8013fb4:	40011000 	andmi	r1, r1, r0
 8013fb8:	40010c00 	andmi	r0, r1, r0, lsl #24
 8013fbc:	20025208 	andcs	r5, r2, r8, lsl #4
 8013fc0:	20025218 	andcs	r5, r2, r8, lsl r2

08013fc4 <net::link_register_read()>:
 8013fc4:	b507      	push	{r0, r1, r2, lr}
 8013fc6:	2201      	movs	r2, #1
 8013fc8:	f10d 0306 	add.w	r3, sp, #6
 8013fcc:	4611      	mov	r1, r2
 8013fce:	2000      	movs	r0, #0
 8013fd0:	f000 f9fa 	bl	80143c8 <enet_phy_write_read>
 8013fd4:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8013fd8:	f080 0004 	eor.w	r0, r0, #4
 8013fdc:	f3c0 0080 	ubfx	r0, r0, #2, #1
 8013fe0:	b003      	add	sp, #12
 8013fe2:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08013fe8 <adc_mode_config>:
 8013fe8:	4b06      	ldr	r3, [pc, #24]	; (8014004 <adc_mode_config+0x1c>)
 8013fea:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 8013fee:	f422 2270 	bic.w	r2, r2, #983040	; 0xf0000
 8013ff2:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 8013ff6:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 8013ffa:	4302      	orrs	r2, r0
 8013ffc:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 8014000:	4770      	bx	lr
 8014002:	bf00      	nop
 8014004:	40012000 	andmi	r2, r1, r0

08014008 <adc_special_function_config>:
 8014008:	b510      	push	{r4, lr}
 801400a:	f401 7380 	and.w	r3, r1, #256	; 0x100
 801400e:	f401 6480 	and.w	r4, r1, #1024	; 0x400
 8014012:	f001 0102 	and.w	r1, r1, #2
 8014016:	b17a      	cbz	r2, 8014038 <adc_special_function_config+0x30>
 8014018:	b11b      	cbz	r3, 8014022 <adc_special_function_config+0x1a>
 801401a:	6843      	ldr	r3, [r0, #4]
 801401c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8014020:	6043      	str	r3, [r0, #4]
 8014022:	b11c      	cbz	r4, 801402c <adc_special_function_config+0x24>
 8014024:	6843      	ldr	r3, [r0, #4]
 8014026:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 801402a:	6043      	str	r3, [r0, #4]
 801402c:	b119      	cbz	r1, 8014036 <adc_special_function_config+0x2e>
 801402e:	6883      	ldr	r3, [r0, #8]
 8014030:	f043 0302 	orr.w	r3, r3, #2
 8014034:	6083      	str	r3, [r0, #8]
 8014036:	bd10      	pop	{r4, pc}
 8014038:	b11b      	cbz	r3, 8014042 <adc_special_function_config+0x3a>
 801403a:	6843      	ldr	r3, [r0, #4]
 801403c:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8014040:	6043      	str	r3, [r0, #4]
 8014042:	b11c      	cbz	r4, 801404c <adc_special_function_config+0x44>
 8014044:	6843      	ldr	r3, [r0, #4]
 8014046:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 801404a:	6043      	str	r3, [r0, #4]
 801404c:	2900      	cmp	r1, #0
 801404e:	d0f2      	beq.n	8014036 <adc_special_function_config+0x2e>
 8014050:	6883      	ldr	r3, [r0, #8]
 8014052:	f023 0302 	bic.w	r3, r3, #2
 8014056:	e7ed      	b.n	8014034 <adc_special_function_config+0x2c>

08014058 <adc_data_alignment_config>:
 8014058:	6883      	ldr	r3, [r0, #8]
 801405a:	b119      	cbz	r1, 8014064 <adc_data_alignment_config+0xc>
 801405c:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8014060:	6083      	str	r3, [r0, #8]
 8014062:	4770      	bx	lr
 8014064:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8014068:	e7fa      	b.n	8014060 <adc_data_alignment_config+0x8>

0801406a <adc_enable>:
 801406a:	6883      	ldr	r3, [r0, #8]
 801406c:	07db      	lsls	r3, r3, #31
 801406e:	bf5e      	ittt	pl
 8014070:	6883      	ldrpl	r3, [r0, #8]
 8014072:	f043 0301 	orrpl.w	r3, r3, #1
 8014076:	6083      	strpl	r3, [r0, #8]
 8014078:	4770      	bx	lr

0801407a <adc_calibration_enable>:
 801407a:	6883      	ldr	r3, [r0, #8]
 801407c:	f100 0208 	add.w	r2, r0, #8
 8014080:	f043 0308 	orr.w	r3, r3, #8
 8014084:	6083      	str	r3, [r0, #8]
 8014086:	6813      	ldr	r3, [r2, #0]
 8014088:	0719      	lsls	r1, r3, #28
 801408a:	d4fc      	bmi.n	8014086 <adc_calibration_enable+0xc>
 801408c:	6883      	ldr	r3, [r0, #8]
 801408e:	f043 0304 	orr.w	r3, r3, #4
 8014092:	6083      	str	r3, [r0, #8]
 8014094:	6813      	ldr	r3, [r2, #0]
 8014096:	075b      	lsls	r3, r3, #29
 8014098:	d4fc      	bmi.n	8014094 <adc_calibration_enable+0x1a>
 801409a:	4770      	bx	lr

0801409c <adc_tempsensor_vrefint_enable>:
 801409c:	4a03      	ldr	r2, [pc, #12]	; (80140ac <adc_tempsensor_vrefint_enable+0x10>)
 801409e:	f8d2 3408 	ldr.w	r3, [r2, #1032]	; 0x408
 80140a2:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 80140a6:	f8c2 3408 	str.w	r3, [r2, #1032]	; 0x408
 80140aa:	4770      	bx	lr
 80140ac:	40012000 	andmi	r2, r1, r0

080140b0 <adc_channel_length_config>:
 80140b0:	2901      	cmp	r1, #1
 80140b2:	d002      	beq.n	80140ba <adc_channel_length_config+0xa>
 80140b4:	2902      	cmp	r1, #2
 80140b6:	d00c      	beq.n	80140d2 <adc_channel_length_config+0x22>
 80140b8:	4770      	bx	lr
 80140ba:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80140bc:	3a01      	subs	r2, #1
 80140be:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 80140c2:	62c3      	str	r3, [r0, #44]	; 0x2c
 80140c4:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80140c6:	0512      	lsls	r2, r2, #20
 80140c8:	f402 0270 	and.w	r2, r2, #15728640	; 0xf00000
 80140cc:	431a      	orrs	r2, r3
 80140ce:	62c2      	str	r2, [r0, #44]	; 0x2c
 80140d0:	4770      	bx	lr
 80140d2:	6b83      	ldr	r3, [r0, #56]	; 0x38
 80140d4:	3a01      	subs	r2, #1
 80140d6:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 80140da:	6383      	str	r3, [r0, #56]	; 0x38
 80140dc:	6b83      	ldr	r3, [r0, #56]	; 0x38
 80140de:	0512      	lsls	r2, r2, #20
 80140e0:	f402 1240 	and.w	r2, r2, #3145728	; 0x300000
 80140e4:	431a      	orrs	r2, r3
 80140e6:	6382      	str	r2, [r0, #56]	; 0x38
 80140e8:	4770      	bx	lr

080140ea <adc_inserted_channel_config>:
 80140ea:	b530      	push	{r4, r5, lr}
 80140ec:	6b84      	ldr	r4, [r0, #56]	; 0x38
 80140ee:	6b85      	ldr	r5, [r0, #56]	; 0x38
 80140f0:	f3c4 5401 	ubfx	r4, r4, #20, #2
 80140f4:	1a61      	subs	r1, r4, r1
 80140f6:	f06f 0404 	mvn.w	r4, #4
 80140fa:	4361      	muls	r1, r4
 80140fc:	241f      	movs	r4, #31
 80140fe:	310f      	adds	r1, #15
 8014100:	408c      	lsls	r4, r1
 8014102:	ea25 0504 	bic.w	r5, r5, r4
 8014106:	fa02 f101 	lsl.w	r1, r2, r1
 801410a:	4329      	orrs	r1, r5
 801410c:	2a09      	cmp	r2, #9
 801410e:	6381      	str	r1, [r0, #56]	; 0x38
 8014110:	d80b      	bhi.n	801412a <adc_inserted_channel_config+0x40>
 8014112:	2407      	movs	r4, #7
 8014114:	6901      	ldr	r1, [r0, #16]
 8014116:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801411a:	4094      	lsls	r4, r2
 801411c:	ea21 0104 	bic.w	r1, r1, r4
 8014120:	fa03 f202 	lsl.w	r2, r3, r2
 8014124:	430a      	orrs	r2, r1
 8014126:	6102      	str	r2, [r0, #16]
 8014128:	bd30      	pop	{r4, r5, pc}
 801412a:	2a11      	cmp	r2, #17
 801412c:	d8fc      	bhi.n	8014128 <adc_inserted_channel_config+0x3e>
 801412e:	2407      	movs	r4, #7
 8014130:	3a0a      	subs	r2, #10
 8014132:	68c1      	ldr	r1, [r0, #12]
 8014134:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8014138:	4094      	lsls	r4, r2
 801413a:	ea21 0104 	bic.w	r1, r1, r4
 801413e:	4093      	lsls	r3, r2
 8014140:	430b      	orrs	r3, r1
 8014142:	60c3      	str	r3, [r0, #12]
 8014144:	e7f0      	b.n	8014128 <adc_inserted_channel_config+0x3e>

08014146 <adc_external_trigger_source_config>:
 8014146:	2901      	cmp	r1, #1
 8014148:	d002      	beq.n	8014150 <adc_external_trigger_source_config+0xa>
 801414a:	2902      	cmp	r1, #2
 801414c:	d008      	beq.n	8014160 <adc_external_trigger_source_config+0x1a>
 801414e:	4770      	bx	lr
 8014150:	6883      	ldr	r3, [r0, #8]
 8014152:	f423 2360 	bic.w	r3, r3, #917504	; 0xe0000
 8014156:	6083      	str	r3, [r0, #8]
 8014158:	6883      	ldr	r3, [r0, #8]
 801415a:	4313      	orrs	r3, r2
 801415c:	6083      	str	r3, [r0, #8]
 801415e:	4770      	bx	lr
 8014160:	6883      	ldr	r3, [r0, #8]
 8014162:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8014166:	e7f6      	b.n	8014156 <adc_external_trigger_source_config+0x10>

08014168 <adc_external_trigger_config>:
 8014168:	f001 0301 	and.w	r3, r1, #1
 801416c:	f001 0102 	and.w	r1, r1, #2
 8014170:	b152      	cbz	r2, 8014188 <adc_external_trigger_config+0x20>
 8014172:	b11b      	cbz	r3, 801417c <adc_external_trigger_config+0x14>
 8014174:	6883      	ldr	r3, [r0, #8]
 8014176:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 801417a:	6083      	str	r3, [r0, #8]
 801417c:	b119      	cbz	r1, 8014186 <adc_external_trigger_config+0x1e>
 801417e:	6883      	ldr	r3, [r0, #8]
 8014180:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8014184:	6083      	str	r3, [r0, #8]
 8014186:	4770      	bx	lr
 8014188:	b11b      	cbz	r3, 8014192 <adc_external_trigger_config+0x2a>
 801418a:	6883      	ldr	r3, [r0, #8]
 801418c:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 8014190:	6083      	str	r3, [r0, #8]
 8014192:	2900      	cmp	r1, #0
 8014194:	d0f7      	beq.n	8014186 <adc_external_trigger_config+0x1e>
 8014196:	6883      	ldr	r3, [r0, #8]
 8014198:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 801419c:	e7f2      	b.n	8014184 <adc_external_trigger_config+0x1c>

0801419e <adc_software_trigger_enable>:
 801419e:	07ca      	lsls	r2, r1, #31
 80141a0:	bf42      	ittt	mi
 80141a2:	6883      	ldrmi	r3, [r0, #8]
 80141a4:	f443 0380 	orrmi.w	r3, r3, #4194304	; 0x400000
 80141a8:	6083      	strmi	r3, [r0, #8]
 80141aa:	078b      	lsls	r3, r1, #30
 80141ac:	bf42      	ittt	mi
 80141ae:	6883      	ldrmi	r3, [r0, #8]
 80141b0:	f443 1300 	orrmi.w	r3, r3, #2097152	; 0x200000
 80141b4:	6083      	strmi	r3, [r0, #8]
 80141b6:	4770      	bx	lr

080141b8 <enet_delay>:
 80141b8:	2300      	movs	r3, #0
 80141ba:	b082      	sub	sp, #8
 80141bc:	9301      	str	r3, [sp, #4]
 80141be:	9001      	str	r0, [sp, #4]
 80141c0:	9b01      	ldr	r3, [sp, #4]
 80141c2:	b90b      	cbnz	r3, 80141c8 <enet_delay+0x10>
 80141c4:	b002      	add	sp, #8
 80141c6:	4770      	bx	lr
 80141c8:	9b01      	ldr	r3, [sp, #4]
 80141ca:	3b01      	subs	r3, #1
 80141cc:	9301      	str	r3, [sp, #4]
 80141ce:	e7f7      	b.n	80141c0 <enet_delay+0x8>

080141d0 <enet_software_reset>:
 80141d0:	4b07      	ldr	r3, [pc, #28]	; (80141f0 <enet_software_reset+0x20>)
 80141d2:	681a      	ldr	r2, [r3, #0]
 80141d4:	f042 0201 	orr.w	r2, r2, #1
 80141d8:	601a      	str	r2, [r3, #0]
 80141da:	4a06      	ldr	r2, [pc, #24]	; (80141f4 <enet_software_reset+0x24>)
 80141dc:	6819      	ldr	r1, [r3, #0]
 80141de:	07c9      	lsls	r1, r1, #31
 80141e0:	d501      	bpl.n	80141e6 <enet_software_reset+0x16>
 80141e2:	3a01      	subs	r2, #1
 80141e4:	d1fa      	bne.n	80141dc <enet_software_reset+0xc>
 80141e6:	6818      	ldr	r0, [r3, #0]
 80141e8:	43c0      	mvns	r0, r0
 80141ea:	f000 0001 	and.w	r0, r0, #1
 80141ee:	4770      	bx	lr
 80141f0:	40029000 	andmi	r9, r2, r0
 80141f4:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

080141f8 <enet_descriptors_chain_init>:
 80141f8:	f5b0 0fe0 	cmp.w	r0, #7340032	; 0x700000
 80141fc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80141fe:	4a19      	ldr	r2, [pc, #100]	; (8014264 <enet_descriptors_chain_init+0x6c>)
 8014200:	d125      	bne.n	801424e <enet_descriptors_chain_init+0x56>
 8014202:	2500      	movs	r5, #0
 8014204:	f44f 1680 	mov.w	r6, #1048576	; 0x100000
 8014208:	2002      	movs	r0, #2
 801420a:	4b17      	ldr	r3, [pc, #92]	; (8014268 <enet_descriptors_chain_init+0x70>)
 801420c:	4c17      	ldr	r4, [pc, #92]	; (801426c <enet_descriptors_chain_init+0x74>)
 801420e:	6113      	str	r3, [r2, #16]
 8014210:	4a17      	ldr	r2, [pc, #92]	; (8014270 <enet_descriptors_chain_init+0x78>)
 8014212:	6013      	str	r3, [r2, #0]
 8014214:	2200      	movs	r2, #0
 8014216:	f240 5ef4 	movw	lr, #1524	; 0x5f4
 801421a:	4916      	ldr	r1, [pc, #88]	; (8014274 <enet_descriptors_chain_init+0x7c>)
 801421c:	f100 3cff 	add.w	ip, r0, #4294967295	; 0xffffffff
 8014220:	600a      	str	r2, [r1, #0]
 8014222:	4915      	ldr	r1, [pc, #84]	; (8014278 <enet_descriptors_chain_init+0x80>)
 8014224:	600a      	str	r2, [r1, #0]
 8014226:	f103 0110 	add.w	r1, r3, #16
 801422a:	fb0e 4702 	mla	r7, lr, r2, r4
 801422e:	f841 7c08 	str.w	r7, [r1, #-8]
 8014232:	4594      	cmp	ip, r2
 8014234:	bf94      	ite	ls
 8014236:	461f      	movls	r7, r3
 8014238:	460f      	movhi	r7, r1
 801423a:	3201      	adds	r2, #1
 801423c:	4290      	cmp	r0, r2
 801423e:	e941 6504 	strd	r6, r5, [r1, #-16]
 8014242:	f841 7c04 	str.w	r7, [r1, #-4]
 8014246:	f101 0110 	add.w	r1, r1, #16
 801424a:	d1ee      	bne.n	801422a <enet_descriptors_chain_init+0x32>
 801424c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801424e:	4b0b      	ldr	r3, [pc, #44]	; (801427c <enet_descriptors_chain_init+0x84>)
 8014250:	f244 55f4 	movw	r5, #17908	; 0x45f4
 8014254:	60d3      	str	r3, [r2, #12]
 8014256:	4a0a      	ldr	r2, [pc, #40]	; (8014280 <enet_descriptors_chain_init+0x88>)
 8014258:	f04f 4600 	mov.w	r6, #2147483648	; 0x80000000
 801425c:	201a      	movs	r0, #26
 801425e:	4c09      	ldr	r4, [pc, #36]	; (8014284 <enet_descriptors_chain_init+0x8c>)
 8014260:	6013      	str	r3, [r2, #0]
 8014262:	e7d7      	b.n	8014214 <enet_descriptors_chain_init+0x1c>
 8014264:	40029000 	andmi	r9, r2, r0
 8014268:	20025208 	andcs	r5, r2, r8, lsl #4
 801426c:	20024620 	andcs	r4, r2, r0, lsr #12
 8014270:	2001a978 	andcs	sl, r1, r8, ror r9
 8014274:	2001a96c 	andcs	sl, r1, ip, ror #18
 8014278:	2001a970 	andcs	sl, r1, r0, ror r9
 801427c:	20024480 	andcs	r4, r2, r0, lsl #9
 8014280:	2001a974 	andcs	sl, r1, r4, ror r9
 8014284:	2001a9b8 			; <UNDEFINED> instruction: 0x2001a9b8

08014288 <enet_frame_receive>:
 8014288:	4a1d      	ldr	r2, [pc, #116]	; (8014300 <enet_frame_receive+0x78>)
 801428a:	b510      	push	{r4, lr}
 801428c:	6813      	ldr	r3, [r2, #0]
 801428e:	681b      	ldr	r3, [r3, #0]
 8014290:	2b00      	cmp	r3, #0
 8014292:	db33      	blt.n	80142fc <enet_frame_receive+0x74>
 8014294:	b970      	cbnz	r0, 80142b4 <enet_frame_receive+0x2c>
 8014296:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
 801429a:	6813      	ldr	r3, [r2, #0]
 801429c:	6019      	str	r1, [r3, #0]
 801429e:	4919      	ldr	r1, [pc, #100]	; (8014304 <enet_frame_receive+0x7c>)
 80142a0:	6948      	ldr	r0, [r1, #20]
 80142a2:	0604      	lsls	r4, r0, #24
 80142a4:	d419      	bmi.n	80142da <enet_frame_receive+0x52>
 80142a6:	6859      	ldr	r1, [r3, #4]
 80142a8:	0448      	lsls	r0, r1, #17
 80142aa:	d51b      	bpl.n	80142e4 <enet_frame_receive+0x5c>
 80142ac:	68db      	ldr	r3, [r3, #12]
 80142ae:	2001      	movs	r0, #1
 80142b0:	6013      	str	r3, [r2, #0]
 80142b2:	bd10      	pop	{r4, pc}
 80142b4:	f403 4403 	and.w	r4, r3, #33536	; 0x8300
 80142b8:	f5b4 7f40 	cmp.w	r4, #768	; 0x300
 80142bc:	d11e      	bne.n	80142fc <enet_frame_receive+0x74>
 80142be:	f3c3 430d 	ubfx	r3, r3, #16, #14
 80142c2:	3b04      	subs	r3, #4
 80142c4:	428b      	cmp	r3, r1
 80142c6:	d819      	bhi.n	80142fc <enet_frame_receive+0x74>
 80142c8:	2100      	movs	r1, #0
 80142ca:	4299      	cmp	r1, r3
 80142cc:	6814      	ldr	r4, [r2, #0]
 80142ce:	d2e2      	bcs.n	8014296 <enet_frame_receive+0xe>
 80142d0:	68a4      	ldr	r4, [r4, #8]
 80142d2:	5d0c      	ldrb	r4, [r1, r4]
 80142d4:	5444      	strb	r4, [r0, r1]
 80142d6:	3101      	adds	r1, #1
 80142d8:	e7f7      	b.n	80142ca <enet_frame_receive+0x42>
 80142da:	2080      	movs	r0, #128	; 0x80
 80142dc:	6148      	str	r0, [r1, #20]
 80142de:	2000      	movs	r0, #0
 80142e0:	6088      	str	r0, [r1, #8]
 80142e2:	e7e0      	b.n	80142a6 <enet_frame_receive+0x1e>
 80142e4:	f411 4f00 	tst.w	r1, #32768	; 0x8000
 80142e8:	4906      	ldr	r1, [pc, #24]	; (8014304 <enet_frame_receive+0x7c>)
 80142ea:	bf05      	ittet	eq
 80142ec:	3310      	addeq	r3, #16
 80142ee:	6809      	ldreq	r1, [r1, #0]
 80142f0:	68cb      	ldrne	r3, [r1, #12]
 80142f2:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 80142f6:	bf08      	it	eq
 80142f8:	185b      	addeq	r3, r3, r1
 80142fa:	e7d8      	b.n	80142ae <enet_frame_receive+0x26>
 80142fc:	2000      	movs	r0, #0
 80142fe:	e7d8      	b.n	80142b2 <enet_frame_receive+0x2a>
 8014300:	2001a974 	andcs	sl, r1, r4, ror r9
 8014304:	40029000 	andmi	r9, r2, r0

08014308 <enet_frame_transmit>:
 8014308:	4a1e      	ldr	r2, [pc, #120]	; (8014384 <enet_frame_transmit+0x7c>)
 801430a:	b530      	push	{r4, r5, lr}
 801430c:	6813      	ldr	r3, [r2, #0]
 801430e:	681b      	ldr	r3, [r3, #0]
 8014310:	2b00      	cmp	r3, #0
 8014312:	db34      	blt.n	801437e <enet_frame_transmit+0x76>
 8014314:	f240 53f4 	movw	r3, #1524	; 0x5f4
 8014318:	4299      	cmp	r1, r3
 801431a:	d830      	bhi.n	801437e <enet_frame_transmit+0x76>
 801431c:	b9e8      	cbnz	r0, 801435a <enet_frame_transmit+0x52>
 801431e:	6813      	ldr	r3, [r2, #0]
 8014320:	4819      	ldr	r0, [pc, #100]	; (8014388 <enet_frame_transmit+0x80>)
 8014322:	6059      	str	r1, [r3, #4]
 8014324:	6819      	ldr	r1, [r3, #0]
 8014326:	f041 4130 	orr.w	r1, r1, #2952790016	; 0xb0000000
 801432a:	6019      	str	r1, [r3, #0]
 801432c:	6941      	ldr	r1, [r0, #20]
 801432e:	6944      	ldr	r4, [r0, #20]
 8014330:	f001 0104 	and.w	r1, r1, #4
 8014334:	f004 0420 	and.w	r4, r4, #32
 8014338:	4321      	orrs	r1, r4
 801433a:	d110      	bne.n	801435e <enet_frame_transmit+0x56>
 801433c:	6819      	ldr	r1, [r3, #0]
 801433e:	02c8      	lsls	r0, r1, #11
 8014340:	d511      	bpl.n	8014366 <enet_frame_transmit+0x5e>
 8014342:	68db      	ldr	r3, [r3, #12]
 8014344:	2001      	movs	r0, #1
 8014346:	6013      	str	r3, [r2, #0]
 8014348:	bd30      	pop	{r4, r5, pc}
 801434a:	5cc5      	ldrb	r5, [r0, r3]
 801434c:	68a4      	ldr	r4, [r4, #8]
 801434e:	551d      	strb	r5, [r3, r4]
 8014350:	3301      	adds	r3, #1
 8014352:	428b      	cmp	r3, r1
 8014354:	6814      	ldr	r4, [r2, #0]
 8014356:	d1f8      	bne.n	801434a <enet_frame_transmit+0x42>
 8014358:	e7e1      	b.n	801431e <enet_frame_transmit+0x16>
 801435a:	2300      	movs	r3, #0
 801435c:	e7f9      	b.n	8014352 <enet_frame_transmit+0x4a>
 801435e:	6141      	str	r1, [r0, #20]
 8014360:	2100      	movs	r1, #0
 8014362:	6041      	str	r1, [r0, #4]
 8014364:	e7ea      	b.n	801433c <enet_frame_transmit+0x34>
 8014366:	f411 1f00 	tst.w	r1, #2097152	; 0x200000
 801436a:	4907      	ldr	r1, [pc, #28]	; (8014388 <enet_frame_transmit+0x80>)
 801436c:	bf05      	ittet	eq
 801436e:	3310      	addeq	r3, #16
 8014370:	6809      	ldreq	r1, [r1, #0]
 8014372:	690b      	ldrne	r3, [r1, #16]
 8014374:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 8014378:	bf08      	it	eq
 801437a:	185b      	addeq	r3, r3, r1
 801437c:	e7e2      	b.n	8014344 <enet_frame_transmit+0x3c>
 801437e:	2000      	movs	r0, #0
 8014380:	e7e2      	b.n	8014348 <enet_frame_transmit+0x40>
 8014382:	bf00      	nop
 8014384:	2001a978 	andcs	sl, r1, r8, ror r9
 8014388:	40029000 	andmi	r9, r2, r0

0801438c <enet_transmit_checksum_config>:
 801438c:	6803      	ldr	r3, [r0, #0]
 801438e:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 8014392:	430b      	orrs	r3, r1
 8014394:	6003      	str	r3, [r0, #0]
 8014396:	4770      	bx	lr

08014398 <enet_mac_address_set>:
 8014398:	888a      	ldrh	r2, [r1, #4]
 801439a:	4b03      	ldr	r3, [pc, #12]	; (80143a8 <enet_mac_address_set+0x10>)
 801439c:	50c2      	str	r2, [r0, r3]
 801439e:	680a      	ldr	r2, [r1, #0]
 80143a0:	3304      	adds	r3, #4
 80143a2:	50c2      	str	r2, [r0, r3]
 80143a4:	4770      	bx	lr
 80143a6:	bf00      	nop
 80143a8:	40028040 	andmi	r8, r2, r0, asr #32

080143ac <enet_rx_enable>:
 80143ac:	4a05      	ldr	r2, [pc, #20]	; (80143c4 <enet_rx_enable+0x18>)
 80143ae:	6813      	ldr	r3, [r2, #0]
 80143b0:	f043 0304 	orr.w	r3, r3, #4
 80143b4:	6013      	str	r3, [r2, #0]
 80143b6:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 80143ba:	6993      	ldr	r3, [r2, #24]
 80143bc:	f043 0302 	orr.w	r3, r3, #2
 80143c0:	6193      	str	r3, [r2, #24]
 80143c2:	4770      	bx	lr
 80143c4:	40028000 	andmi	r8, r2, r0

080143c8 <enet_phy_write_read>:
 80143c8:	b530      	push	{r4, r5, lr}
 80143ca:	4604      	mov	r4, r0
 80143cc:	4d13      	ldr	r5, [pc, #76]	; (801441c <enet_phy_write_read+0x54>)
 80143ce:	0192      	lsls	r2, r2, #6
 80143d0:	6928      	ldr	r0, [r5, #16]
 80143d2:	f402 62f8 	and.w	r2, r2, #1984	; 0x7c0
 80143d6:	f420 407f 	bic.w	r0, r0, #65280	; 0xff00
 80143da:	f020 00c3 	bic.w	r0, r0, #195	; 0xc3
 80143de:	4302      	orrs	r2, r0
 80143e0:	02c9      	lsls	r1, r1, #11
 80143e2:	b289      	uxth	r1, r1
 80143e4:	2c02      	cmp	r4, #2
 80143e6:	ea42 0204 	orr.w	r2, r2, r4
 80143ea:	ea42 0201 	orr.w	r2, r2, r1
 80143ee:	bf08      	it	eq
 80143f0:	8819      	ldrheq	r1, [r3, #0]
 80143f2:	f042 0201 	orr.w	r2, r2, #1
 80143f6:	bf08      	it	eq
 80143f8:	6169      	streq	r1, [r5, #20]
 80143fa:	612a      	str	r2, [r5, #16]
 80143fc:	4907      	ldr	r1, [pc, #28]	; (801441c <enet_phy_write_read+0x54>)
 80143fe:	4a08      	ldr	r2, [pc, #32]	; (8014420 <enet_phy_write_read+0x58>)
 8014400:	6908      	ldr	r0, [r1, #16]
 8014402:	07c0      	lsls	r0, r0, #31
 8014404:	d501      	bpl.n	801440a <enet_phy_write_read+0x42>
 8014406:	3a01      	subs	r2, #1
 8014408:	d1fa      	bne.n	8014400 <enet_phy_write_read+0x38>
 801440a:	690a      	ldr	r2, [r1, #16]
 801440c:	43d2      	mvns	r2, r2
 801440e:	f002 0001 	and.w	r0, r2, #1
 8014412:	b90c      	cbnz	r4, 8014418 <enet_phy_write_read+0x50>
 8014414:	694a      	ldr	r2, [r1, #20]
 8014416:	801a      	strh	r2, [r3, #0]
 8014418:	bd30      	pop	{r4, r5, pc}
 801441a:	bf00      	nop
 801441c:	40028000 	andmi	r8, r2, r0
 8014420:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

08014424 <enet_phy_config>:
 8014424:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8014426:	4d22      	ldr	r5, [pc, #136]	; (80144b0 <enet_phy_config+0x8c>)
 8014428:	2001      	movs	r0, #1
 801442a:	692c      	ldr	r4, [r5, #16]
 801442c:	f7fe fdf8 	bl	8013020 <rcu_clock_freq_get>
 8014430:	4b20      	ldr	r3, [pc, #128]	; (80144b4 <enet_phy_config+0x90>)
 8014432:	4a21      	ldr	r2, [pc, #132]	; (80144b8 <enet_phy_config+0x94>)
 8014434:	4403      	add	r3, r0
 8014436:	4293      	cmp	r3, r2
 8014438:	f024 041c 	bic.w	r4, r4, #28
 801443c:	d21f      	bcs.n	801447e <enet_phy_config+0x5a>
 801443e:	f044 0408 	orr.w	r4, r4, #8
 8014442:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8014446:	612c      	str	r4, [r5, #16]
 8014448:	2200      	movs	r2, #0
 801444a:	f8ad 3006 	strh.w	r3, [sp, #6]
 801444e:	2101      	movs	r1, #1
 8014450:	2002      	movs	r0, #2
 8014452:	f10d 0306 	add.w	r3, sp, #6
 8014456:	f7ff ffb7 	bl	80143c8 <enet_phy_write_read>
 801445a:	b310      	cbz	r0, 80144a2 <enet_phy_config+0x7e>
 801445c:	2200      	movs	r2, #0
 801445e:	4817      	ldr	r0, [pc, #92]	; (80144bc <enet_phy_config+0x98>)
 8014460:	f7ff feaa 	bl	80141b8 <enet_delay>
 8014464:	2101      	movs	r1, #1
 8014466:	4610      	mov	r0, r2
 8014468:	f10d 0306 	add.w	r3, sp, #6
 801446c:	f7ff ffac 	bl	80143c8 <enet_phy_write_read>
 8014470:	b1b8      	cbz	r0, 80144a2 <enet_phy_config+0x7e>
 8014472:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8014476:	43c0      	mvns	r0, r0
 8014478:	f3c0 30c0 	ubfx	r0, r0, #15, #1
 801447c:	e012      	b.n	80144a4 <enet_phy_config+0x80>
 801447e:	4b10      	ldr	r3, [pc, #64]	; (80144c0 <enet_phy_config+0x9c>)
 8014480:	4a10      	ldr	r2, [pc, #64]	; (80144c4 <enet_phy_config+0xa0>)
 8014482:	4403      	add	r3, r0
 8014484:	4293      	cmp	r3, r2
 8014486:	d802      	bhi.n	801448e <enet_phy_config+0x6a>
 8014488:	f044 040c 	orr.w	r4, r4, #12
 801448c:	e7d9      	b.n	8014442 <enet_phy_config+0x1e>
 801448e:	4b0e      	ldr	r3, [pc, #56]	; (80144c8 <enet_phy_config+0xa4>)
 8014490:	4a0e      	ldr	r2, [pc, #56]	; (80144cc <enet_phy_config+0xa8>)
 8014492:	4403      	add	r3, r0
 8014494:	4293      	cmp	r3, r2
 8014496:	d3d4      	bcc.n	8014442 <enet_phy_config+0x1e>
 8014498:	4b0d      	ldr	r3, [pc, #52]	; (80144d0 <enet_phy_config+0xac>)
 801449a:	4a0e      	ldr	r2, [pc, #56]	; (80144d4 <enet_phy_config+0xb0>)
 801449c:	4403      	add	r3, r0
 801449e:	4293      	cmp	r3, r2
 80144a0:	d902      	bls.n	80144a8 <enet_phy_config+0x84>
 80144a2:	2000      	movs	r0, #0
 80144a4:	b003      	add	sp, #12
 80144a6:	bd30      	pop	{r4, r5, pc}
 80144a8:	f044 0404 	orr.w	r4, r4, #4
 80144ac:	e7c9      	b.n	8014442 <enet_phy_config+0x1e>
 80144ae:	bf00      	nop
 80144b0:	40028000 	andmi	r8, r2, r0
 80144b4:	feced300 	cdp2	3, 12, cr13, cr14, cr0, {0}
 80144b8:	00e4e1c0 	rsceq	lr, r4, r0, asr #3
 80144bc:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 80144c0:	fde9f140 	stc2l	1, cr15, [r9, #256]!	; 0x100
 80144c4:	017d783f 	cmneq	sp, pc, lsr r8
 80144c8:	fc6c7900 	stc2l	9, cr7, [ip], #-0	; <UNPREDICTABLE>
 80144cc:	02625a00 	rsbeq	r5, r2, #0, 20
 80144d0:	fa0a1f00 	blx	829c0d8 <__exidx_end+0x2847e4>
 80144d4:	01312d00 	teqeq	r1, r0, lsl #26

080144d8 <enet_init>:
 80144d8:	2300      	movs	r3, #0
 80144da:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80144dc:	4604      	mov	r4, r0
 80144de:	460d      	mov	r5, r1
 80144e0:	4616      	mov	r6, r2
 80144e2:	f8ad 3006 	strh.w	r3, [sp, #6]
 80144e6:	f7ff ff9d 	bl	8014424 <enet_phy_config>
 80144ea:	2800      	cmp	r0, #0
 80144ec:	d039      	beq.n	8014562 <enet_init+0x8a>
 80144ee:	4b3c      	ldr	r3, [pc, #240]	; (80145e0 <enet_init+0x108>)
 80144f0:	4a3c      	ldr	r2, [pc, #240]	; (80145e4 <enet_init+0x10c>)
 80144f2:	6819      	ldr	r1, [r3, #0]
 80144f4:	f44f 50a8 	mov.w	r0, #5376	; 0x1500
 80144f8:	400a      	ands	r2, r1
 80144fa:	601a      	str	r2, [r3, #0]
 80144fc:	2200      	movs	r2, #0
 80144fe:	605a      	str	r2, [r3, #4]
 8014500:	609a      	str	r2, [r3, #8]
 8014502:	60da      	str	r2, [r3, #12]
 8014504:	6999      	ldr	r1, [r3, #24]
 8014506:	2c01      	cmp	r4, #1
 8014508:	f021 01be 	bic.w	r1, r1, #190	; 0xbe
 801450c:	ea4f 4101 	mov.w	r1, r1, lsl #16
 8014510:	ea4f 4111 	mov.w	r1, r1, lsr #16
 8014514:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8014518:	6199      	str	r1, [r3, #24]
 801451a:	4933      	ldr	r1, [pc, #204]	; (80145e8 <enet_init+0x110>)
 801451c:	f8c1 0080 	str.w	r0, [r1, #128]	; 0x80
 8014520:	61da      	str	r2, [r3, #28]
 8014522:	6988      	ldr	r0, [r1, #24]
 8014524:	4b31      	ldr	r3, [pc, #196]	; (80145ec <enet_init+0x114>)
 8014526:	ea03 0300 	and.w	r3, r3, r0
 801452a:	f043 7308 	orr.w	r3, r3, #35651584	; 0x2200000
 801452e:	618b      	str	r3, [r1, #24]
 8014530:	680b      	ldr	r3, [r1, #0]
 8014532:	4b2f      	ldr	r3, [pc, #188]	; (80145f0 <enet_init+0x118>)
 8014534:	600b      	str	r3, [r1, #0]
 8014536:	d01e      	beq.n	8014576 <enet_init+0x9e>
 8014538:	08e3      	lsrs	r3, r4, #3
 801453a:	0861      	lsrs	r1, r4, #1
 801453c:	f401 5100 	and.w	r1, r1, #8192	; 0x2000
 8014540:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8014544:	430b      	orrs	r3, r1
 8014546:	f8ad 3006 	strh.w	r3, [sp, #6]
 801454a:	2101      	movs	r1, #1
 801454c:	2002      	movs	r0, #2
 801454e:	f10d 0306 	add.w	r3, sp, #6
 8014552:	f7ff ff39 	bl	80143c8 <enet_phy_write_read>
 8014556:	b158      	cbz	r0, 8014570 <enet_init+0x98>
 8014558:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 801455c:	f7ff fe2c 	bl	80141b8 <enet_delay>
 8014560:	e05d      	b.n	801461e <enet_init+0x146>
 8014562:	4824      	ldr	r0, [pc, #144]	; (80145f4 <enet_init+0x11c>)
 8014564:	f7ff fe28 	bl	80141b8 <enet_delay>
 8014568:	f7ff ff5c 	bl	8014424 <enet_phy_config>
 801456c:	2800      	cmp	r0, #0
 801456e:	d1be      	bne.n	80144ee <enet_init+0x16>
 8014570:	2000      	movs	r0, #0
 8014572:	b003      	add	sp, #12
 8014574:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014576:	4614      	mov	r4, r2
 8014578:	4f1f      	ldr	r7, [pc, #124]	; (80145f8 <enet_init+0x120>)
 801457a:	2201      	movs	r2, #1
 801457c:	2000      	movs	r0, #0
 801457e:	4611      	mov	r1, r2
 8014580:	f10d 0306 	add.w	r3, sp, #6
 8014584:	f7ff ff20 	bl	80143c8 <enet_phy_write_read>
 8014588:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 801458c:	3401      	adds	r4, #1
 801458e:	f002 0204 	and.w	r2, r2, #4
 8014592:	f8ad 2006 	strh.w	r2, [sp, #6]
 8014596:	b912      	cbnz	r2, 801459e <enet_init+0xc6>
 8014598:	42bc      	cmp	r4, r7
 801459a:	d1ee      	bne.n	801457a <enet_init+0xa2>
 801459c:	e7e8      	b.n	8014570 <enet_init+0x98>
 801459e:	42bc      	cmp	r4, r7
 80145a0:	d0e6      	beq.n	8014570 <enet_init+0x98>
 80145a2:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 80145a6:	2101      	movs	r1, #1
 80145a8:	f8ad 2006 	strh.w	r2, [sp, #6]
 80145ac:	2002      	movs	r0, #2
 80145ae:	2200      	movs	r2, #0
 80145b0:	f7ff ff0a 	bl	80143c8 <enet_phy_write_read>
 80145b4:	2800      	cmp	r0, #0
 80145b6:	d0db      	beq.n	8014570 <enet_init+0x98>
 80145b8:	2400      	movs	r4, #0
 80145ba:	4f0f      	ldr	r7, [pc, #60]	; (80145f8 <enet_init+0x120>)
 80145bc:	2201      	movs	r2, #1
 80145be:	2000      	movs	r0, #0
 80145c0:	4611      	mov	r1, r2
 80145c2:	f10d 0306 	add.w	r3, sp, #6
 80145c6:	f7ff feff 	bl	80143c8 <enet_phy_write_read>
 80145ca:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 80145ce:	3401      	adds	r4, #1
 80145d0:	f002 0220 	and.w	r2, r2, #32
 80145d4:	f8ad 2006 	strh.w	r2, [sp, #6]
 80145d8:	b982      	cbnz	r2, 80145fc <enet_init+0x124>
 80145da:	42bc      	cmp	r4, r7
 80145dc:	d1ee      	bne.n	80145bc <enet_init+0xe4>
 80145de:	e7c7      	b.n	8014570 <enet_init+0x98>
 80145e0:	40028000 	andmi	r8, r2, r0
 80145e4:	fd30810f 	ldc2	1, cr8, [r0, #-60]!	; 0xffffffc4
 80145e8:	40029000 	andmi	r9, r2, r0
 80145ec:	f8de3f23 			; <UNDEFINED> instruction: 0xf8de3f23
 80145f0:	02c16000 	sbceq	r6, r1, #0
 80145f4:	008fffff 	strdeq	pc, [pc], pc	; <UNPREDICTABLE>
 80145f8:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 80145fc:	42bc      	cmp	r4, r7
 80145fe:	d0b7      	beq.n	8014570 <enet_init+0x98>
 8014600:	2101      	movs	r1, #1
 8014602:	2210      	movs	r2, #16
 8014604:	2000      	movs	r0, #0
 8014606:	f7ff fedf 	bl	80143c8 <enet_phy_write_read>
 801460a:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 801460e:	f3c3 0480 	ubfx	r4, r3, #2, #1
 8014612:	0799      	lsls	r1, r3, #30
 8014614:	ea4f 24c4 	mov.w	r4, r4, lsl #11
 8014618:	d401      	bmi.n	801461e <enet_init+0x146>
 801461a:	f444 4480 	orr.w	r4, r4, #16384	; 0x4000
 801461e:	4b63      	ldr	r3, [pc, #396]	; (80147ac <enet_init+0x2d4>)
 8014620:	681a      	ldr	r2, [r3, #0]
 8014622:	f422 42b0 	bic.w	r2, r2, #22528	; 0x5800
 8014626:	4314      	orrs	r4, r2
 8014628:	056a      	lsls	r2, r5, #21
 801462a:	601c      	str	r4, [r3, #0]
 801462c:	d50b      	bpl.n	8014646 <enet_init+0x16e>
 801462e:	681a      	ldr	r2, [r3, #0]
 8014630:	f005 6580 	and.w	r5, r5, #67108864	; 0x4000000
 8014634:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8014638:	601a      	str	r2, [r3, #0]
 801463a:	4a5d      	ldr	r2, [pc, #372]	; (80147b0 <enet_init+0x2d8>)
 801463c:	6993      	ldr	r3, [r2, #24]
 801463e:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 8014642:	431d      	orrs	r5, r3
 8014644:	6195      	str	r5, [r2, #24]
 8014646:	4959      	ldr	r1, [pc, #356]	; (80147ac <enet_init+0x2d4>)
 8014648:	684b      	ldr	r3, [r1, #4]
 801464a:	431e      	orrs	r6, r3
 801464c:	4b59      	ldr	r3, [pc, #356]	; (80147b4 <enet_init+0x2dc>)
 801464e:	604e      	str	r6, [r1, #4]
 8014650:	681a      	ldr	r2, [r3, #0]
 8014652:	07d7      	lsls	r7, r2, #31
 8014654:	d510      	bpl.n	8014678 <enet_init+0x1a0>
 8014656:	685a      	ldr	r2, [r3, #4]
 8014658:	680c      	ldr	r4, [r1, #0]
 801465a:	f002 0080 	and.w	r0, r2, #128	; 0x80
 801465e:	f024 0480 	bic.w	r4, r4, #128	; 0x80
 8014662:	4320      	orrs	r0, r4
 8014664:	6008      	str	r0, [r1, #0]
 8014666:	4852      	ldr	r0, [pc, #328]	; (80147b0 <enet_init+0x2d8>)
 8014668:	0892      	lsrs	r2, r2, #2
 801466a:	6981      	ldr	r1, [r0, #24]
 801466c:	f002 02c0 	and.w	r2, r2, #192	; 0xc0
 8014670:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8014674:	430a      	orrs	r2, r1
 8014676:	6182      	str	r2, [r0, #24]
 8014678:	681a      	ldr	r2, [r3, #0]
 801467a:	0796      	lsls	r6, r2, #30
 801467c:	d508      	bpl.n	8014690 <enet_init+0x1b8>
 801467e:	494c      	ldr	r1, [pc, #304]	; (80147b0 <enet_init+0x2d8>)
 8014680:	6898      	ldr	r0, [r3, #8]
 8014682:	680a      	ldr	r2, [r1, #0]
 8014684:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 8014688:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 801468c:	4302      	orrs	r2, r0
 801468e:	600a      	str	r2, [r1, #0]
 8014690:	681a      	ldr	r2, [r3, #0]
 8014692:	0755      	lsls	r5, r2, #29
 8014694:	d508      	bpl.n	80146a8 <enet_init+0x1d0>
 8014696:	4946      	ldr	r1, [pc, #280]	; (80147b0 <enet_init+0x2d8>)
 8014698:	68d8      	ldr	r0, [r3, #12]
 801469a:	680a      	ldr	r2, [r1, #0]
 801469c:	f422 027e 	bic.w	r2, r2, #16646144	; 0xfe0000
 80146a0:	f422 527c 	bic.w	r2, r2, #16128	; 0x3f00
 80146a4:	4302      	orrs	r2, r0
 80146a6:	600a      	str	r2, [r1, #0]
 80146a8:	681a      	ldr	r2, [r3, #0]
 80146aa:	0714      	lsls	r4, r2, #28
 80146ac:	d508      	bpl.n	80146c0 <enet_init+0x1e8>
 80146ae:	4940      	ldr	r1, [pc, #256]	; (80147b0 <enet_init+0x2d8>)
 80146b0:	6918      	ldr	r0, [r3, #16]
 80146b2:	680a      	ldr	r2, [r1, #0]
 80146b4:	f422 4240 	bic.w	r2, r2, #49152	; 0xc000
 80146b8:	f022 0202 	bic.w	r2, r2, #2
 80146bc:	4302      	orrs	r2, r0
 80146be:	600a      	str	r2, [r1, #0]
 80146c0:	681a      	ldr	r2, [r3, #0]
 80146c2:	06d0      	lsls	r0, r2, #27
 80146c4:	d506      	bpl.n	80146d4 <enet_init+0x1fc>
 80146c6:	493a      	ldr	r1, [pc, #232]	; (80147b0 <enet_init+0x2d8>)
 80146c8:	4a3b      	ldr	r2, [pc, #236]	; (80147b8 <enet_init+0x2e0>)
 80146ca:	6988      	ldr	r0, [r1, #24]
 80146cc:	4002      	ands	r2, r0
 80146ce:	6958      	ldr	r0, [r3, #20]
 80146d0:	4302      	orrs	r2, r0
 80146d2:	618a      	str	r2, [r1, #24]
 80146d4:	681a      	ldr	r2, [r3, #0]
 80146d6:	0691      	lsls	r1, r2, #26
 80146d8:	d508      	bpl.n	80146ec <enet_init+0x214>
 80146da:	4935      	ldr	r1, [pc, #212]	; (80147b0 <enet_init+0x2d8>)
 80146dc:	6998      	ldr	r0, [r3, #24]
 80146de:	698a      	ldr	r2, [r1, #24]
 80146e0:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
 80146e4:	f022 0204 	bic.w	r2, r2, #4
 80146e8:	4302      	orrs	r2, r0
 80146ea:	618a      	str	r2, [r1, #24]
 80146ec:	681a      	ldr	r2, [r3, #0]
 80146ee:	0652      	lsls	r2, r2, #25
 80146f0:	d506      	bpl.n	8014700 <enet_init+0x228>
 80146f2:	492e      	ldr	r1, [pc, #184]	; (80147ac <enet_init+0x2d4>)
 80146f4:	69d8      	ldr	r0, [r3, #28]
 80146f6:	69ca      	ldr	r2, [r1, #28]
 80146f8:	0c52      	lsrs	r2, r2, #17
 80146fa:	0452      	lsls	r2, r2, #17
 80146fc:	4302      	orrs	r2, r0
 80146fe:	61ca      	str	r2, [r1, #28]
 8014700:	681a      	ldr	r2, [r3, #0]
 8014702:	0617      	lsls	r7, r2, #24
 8014704:	d517      	bpl.n	8014736 <enet_init+0x25e>
 8014706:	4c29      	ldr	r4, [pc, #164]	; (80147ac <enet_init+0x2d4>)
 8014708:	6a1a      	ldr	r2, [r3, #32]
 801470a:	69a0      	ldr	r0, [r4, #24]
 801470c:	f422 417f 	bic.w	r1, r2, #65280	; 0xff00
 8014710:	f020 00be 	bic.w	r0, r0, #190	; 0xbe
 8014714:	0400      	lsls	r0, r0, #16
 8014716:	0c00      	lsrs	r0, r0, #16
 8014718:	f021 0141 	bic.w	r1, r1, #65	; 0x41
 801471c:	4301      	orrs	r1, r0
 801471e:	4824      	ldr	r0, [pc, #144]	; (80147b0 <enet_init+0x2d8>)
 8014720:	61a1      	str	r1, [r4, #24]
 8014722:	f8d0 1080 	ldr.w	r1, [r0, #128]	; 0x80
 8014726:	0a12      	lsrs	r2, r2, #8
 8014728:	f021 0177 	bic.w	r1, r1, #119	; 0x77
 801472c:	f002 0277 	and.w	r2, r2, #119	; 0x77
 8014730:	430a      	orrs	r2, r1
 8014732:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 8014736:	681a      	ldr	r2, [r3, #0]
 8014738:	05d6      	lsls	r6, r2, #23
 801473a:	bf42      	ittt	mi
 801473c:	6a59      	ldrmi	r1, [r3, #36]	; 0x24
 801473e:	4a1b      	ldrmi	r2, [pc, #108]	; (80147ac <enet_init+0x2d4>)
 8014740:	6091      	strmi	r1, [r2, #8]
 8014742:	681a      	ldr	r2, [r3, #0]
 8014744:	0595      	lsls	r5, r2, #22
 8014746:	bf42      	ittt	mi
 8014748:	4a18      	ldrmi	r2, [pc, #96]	; (80147ac <enet_init+0x2d4>)
 801474a:	6a99      	ldrmi	r1, [r3, #40]	; 0x28
 801474c:	60d1      	strmi	r1, [r2, #12]
 801474e:	681a      	ldr	r2, [r3, #0]
 8014750:	0554      	lsls	r4, r2, #21
 8014752:	d508      	bpl.n	8014766 <enet_init+0x28e>
 8014754:	4915      	ldr	r1, [pc, #84]	; (80147ac <enet_init+0x2d4>)
 8014756:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 8014758:	684a      	ldr	r2, [r1, #4]
 801475a:	f422 62fb 	bic.w	r2, r2, #2008	; 0x7d8
 801475e:	f022 0206 	bic.w	r2, r2, #6
 8014762:	4302      	orrs	r2, r0
 8014764:	604a      	str	r2, [r1, #4]
 8014766:	681a      	ldr	r2, [r3, #0]
 8014768:	0510      	lsls	r0, r2, #20
 801476a:	d508      	bpl.n	801477e <enet_init+0x2a6>
 801476c:	490f      	ldr	r1, [pc, #60]	; (80147ac <enet_init+0x2d4>)
 801476e:	6b18      	ldr	r0, [r3, #48]	; 0x30
 8014770:	680a      	ldr	r2, [r1, #0]
 8014772:	f422 3291 	bic.w	r2, r2, #74240	; 0x12200
 8014776:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 801477a:	4302      	orrs	r2, r0
 801477c:	600a      	str	r2, [r1, #0]
 801477e:	681a      	ldr	r2, [r3, #0]
 8014780:	04d1      	lsls	r1, r2, #19
 8014782:	d506      	bpl.n	8014792 <enet_init+0x2ba>
 8014784:	4909      	ldr	r1, [pc, #36]	; (80147ac <enet_init+0x2d4>)
 8014786:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8014788:	680a      	ldr	r2, [r1, #0]
 801478a:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 801478e:	4302      	orrs	r2, r0
 8014790:	600a      	str	r2, [r1, #0]
 8014792:	681a      	ldr	r2, [r3, #0]
 8014794:	0492      	lsls	r2, r2, #18
 8014796:	d506      	bpl.n	80147a6 <enet_init+0x2ce>
 8014798:	4904      	ldr	r1, [pc, #16]	; (80147ac <enet_init+0x2d4>)
 801479a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801479c:	680a      	ldr	r2, [r1, #0]
 801479e:	f422 2260 	bic.w	r2, r2, #917504	; 0xe0000
 80147a2:	4313      	orrs	r3, r2
 80147a4:	600b      	str	r3, [r1, #0]
 80147a6:	2001      	movs	r0, #1
 80147a8:	e6e3      	b.n	8014572 <enet_init+0x9a>
 80147aa:	bf00      	nop
 80147ac:	40028000 	andmi	r8, r2, r0
 80147b0:	40029000 	andmi	r9, r2, r0
 80147b4:	2001a97c 	andcs	sl, r1, ip, ror r9
 80147b8:	fdde3fe7 	ldc2l	15, cr3, [lr, #924]	; 0x39c

080147bc <enet_txfifo_flush>:
 80147bc:	4b06      	ldr	r3, [pc, #24]	; (80147d8 <enet_txfifo_flush+0x1c>)
 80147be:	4807      	ldr	r0, [pc, #28]	; (80147dc <enet_txfifo_flush+0x20>)
 80147c0:	699a      	ldr	r2, [r3, #24]
 80147c2:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 80147c6:	619a      	str	r2, [r3, #24]
 80147c8:	699a      	ldr	r2, [r3, #24]
 80147ca:	02d2      	lsls	r2, r2, #11
 80147cc:	d502      	bpl.n	80147d4 <enet_txfifo_flush+0x18>
 80147ce:	3801      	subs	r0, #1
 80147d0:	d1fa      	bne.n	80147c8 <enet_txfifo_flush+0xc>
 80147d2:	4770      	bx	lr
 80147d4:	2001      	movs	r0, #1
 80147d6:	4770      	bx	lr
 80147d8:	40029000 	andmi	r9, r2, r0
 80147dc:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

080147e0 <enet_tx_enable>:
 80147e0:	4a06      	ldr	r2, [pc, #24]	; (80147fc <enet_tx_enable+0x1c>)
 80147e2:	b508      	push	{r3, lr}
 80147e4:	6813      	ldr	r3, [r2, #0]
 80147e6:	f043 0308 	orr.w	r3, r3, #8
 80147ea:	6013      	str	r3, [r2, #0]
 80147ec:	f7ff ffe6 	bl	80147bc <enet_txfifo_flush>
 80147f0:	4a03      	ldr	r2, [pc, #12]	; (8014800 <enet_tx_enable+0x20>)
 80147f2:	6993      	ldr	r3, [r2, #24]
 80147f4:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80147f8:	6193      	str	r3, [r2, #24]
 80147fa:	bd08      	pop	{r3, pc}
 80147fc:	40028000 	andmi	r8, r2, r0
 8014800:	40029000 	andmi	r9, r2, r0

08014804 <enet_enable>:
 8014804:	b508      	push	{r3, lr}
 8014806:	f7ff ffeb 	bl	80147e0 <enet_tx_enable>
 801480a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801480e:	f7ff bdcd 	b.w	80143ac <enet_rx_enable>

08014812 <enet_desc_information_get>:
 8014812:	2905      	cmp	r1, #5
 8014814:	d817      	bhi.n	8014846 <enet_desc_information_get+0x34>
 8014816:	e8df f001 	tbb	[pc, r1]
 801481a:	03091012 	movweq	r1, #36882	; 0x9012
 801481e:	68401007 	stmdavs	r0, {r0, r1, r2, ip}^
 8014822:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8014826:	4770      	bx	lr
 8014828:	88c0      	ldrh	r0, [r0, #6]
 801482a:	e7fa      	b.n	8014822 <enet_desc_information_get+0x10>
 801482c:	8840      	ldrh	r0, [r0, #2]
 801482e:	f3c0 000d 	ubfx	r0, r0, #0, #14
 8014832:	2804      	cmp	r0, #4
 8014834:	d90a      	bls.n	801484c <enet_desc_information_get+0x3a>
 8014836:	3804      	subs	r0, #4
 8014838:	4770      	bx	lr
 801483a:	6880      	ldr	r0, [r0, #8]
 801483c:	4770      	bx	lr
 801483e:	6800      	ldr	r0, [r0, #0]
 8014840:	f3c0 00c3 	ubfx	r0, r0, #3, #4
 8014844:	4770      	bx	lr
 8014846:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801484a:	4770      	bx	lr
 801484c:	2000      	movs	r0, #0
 801484e:	4770      	bx	lr

08014850 <enet_rxframe_drop>:
 8014850:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8014854:	4814      	ldr	r0, [pc, #80]	; (80148a8 <enet_rxframe_drop+0x58>)
 8014856:	b510      	push	{r4, lr}
 8014858:	6802      	ldr	r2, [r0, #0]
 801485a:	4914      	ldr	r1, [pc, #80]	; (80148ac <enet_rxframe_drop+0x5c>)
 801485c:	6854      	ldr	r4, [r2, #4]
 801485e:	6013      	str	r3, [r2, #0]
 8014860:	f414 4f80 	tst.w	r4, #16384	; 0x4000
 8014864:	680b      	ldr	r3, [r1, #0]
 8014866:	d009      	beq.n	801487c <enet_rxframe_drop+0x2c>
 8014868:	b12b      	cbz	r3, 8014876 <enet_rxframe_drop+0x26>
 801486a:	68da      	ldr	r2, [r3, #12]
 801486c:	6002      	str	r2, [r0, #0]
 801486e:	681a      	ldr	r2, [r3, #0]
 8014870:	b1ba      	cbz	r2, 80148a2 <enet_rxframe_drop+0x52>
 8014872:	600a      	str	r2, [r1, #0]
 8014874:	bd10      	pop	{r4, pc}
 8014876:	68d3      	ldr	r3, [r2, #12]
 8014878:	6003      	str	r3, [r0, #0]
 801487a:	e7fb      	b.n	8014874 <enet_rxframe_drop+0x24>
 801487c:	f414 4f00 	tst.w	r4, #32768	; 0x8000
 8014880:	4c0b      	ldr	r4, [pc, #44]	; (80148b0 <enet_rxframe_drop+0x60>)
 8014882:	d006      	beq.n	8014892 <enet_rxframe_drop+0x42>
 8014884:	68e2      	ldr	r2, [r4, #12]
 8014886:	6002      	str	r2, [r0, #0]
 8014888:	2b00      	cmp	r3, #0
 801488a:	d0f3      	beq.n	8014874 <enet_rxframe_drop+0x24>
 801488c:	681b      	ldr	r3, [r3, #0]
 801488e:	600b      	str	r3, [r1, #0]
 8014890:	e7f0      	b.n	8014874 <enet_rxframe_drop+0x24>
 8014892:	6824      	ldr	r4, [r4, #0]
 8014894:	3210      	adds	r2, #16
 8014896:	f3c4 0484 	ubfx	r4, r4, #2, #5
 801489a:	4422      	add	r2, r4
 801489c:	6002      	str	r2, [r0, #0]
 801489e:	2b00      	cmp	r3, #0
 80148a0:	d0e8      	beq.n	8014874 <enet_rxframe_drop+0x24>
 80148a2:	3310      	adds	r3, #16
 80148a4:	e7f3      	b.n	801488e <enet_rxframe_drop+0x3e>
 80148a6:	bf00      	nop
 80148a8:	2001a974 	andcs	sl, r1, r4, ror r9
 80148ac:	2001a96c 	andcs	sl, r1, ip, ror #18
 80148b0:	40029000 	andmi	r9, r2, r0

080148b4 <enet_rxframe_size_get>:
 80148b4:	b508      	push	{r3, lr}
 80148b6:	4b0c      	ldr	r3, [pc, #48]	; (80148e8 <enet_rxframe_size_get+0x34>)
 80148b8:	681b      	ldr	r3, [r3, #0]
 80148ba:	6818      	ldr	r0, [r3, #0]
 80148bc:	2800      	cmp	r0, #0
 80148be:	db10      	blt.n	80148e2 <enet_rxframe_size_get+0x2e>
 80148c0:	f400 4303 	and.w	r3, r0, #33536	; 0x8300
 80148c4:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80148c8:	d003      	beq.n	80148d2 <enet_rxframe_size_get+0x1e>
 80148ca:	f7ff ffc1 	bl	8014850 <enet_rxframe_drop>
 80148ce:	2001      	movs	r0, #1
 80148d0:	bd08      	pop	{r3, pc}
 80148d2:	f000 0321 	and.w	r3, r0, #33	; 0x21
 80148d6:	2b21      	cmp	r3, #33	; 0x21
 80148d8:	d0f7      	beq.n	80148ca <enet_rxframe_size_get+0x16>
 80148da:	f3c0 400d 	ubfx	r0, r0, #16, #14
 80148de:	3804      	subs	r0, #4
 80148e0:	e7f6      	b.n	80148d0 <enet_rxframe_size_get+0x1c>
 80148e2:	2000      	movs	r0, #0
 80148e4:	e7f4      	b.n	80148d0 <enet_rxframe_size_get+0x1c>
 80148e6:	bf00      	nop
 80148e8:	2001a974 	andcs	sl, r1, r4, ror r9

080148ec <enet_initpara_reset>:
 80148ec:	2200      	movs	r2, #0
 80148ee:	4b08      	ldr	r3, [pc, #32]	; (8014910 <enet_initpara_reset+0x24>)
 80148f0:	e9c3 2200 	strd	r2, r2, [r3]
 80148f4:	e9c3 2202 	strd	r2, r2, [r3, #8]
 80148f8:	e9c3 2204 	strd	r2, r2, [r3, #16]
 80148fc:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8014900:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8014904:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 8014908:	e9c3 220c 	strd	r2, r2, [r3, #48]	; 0x30
 801490c:	639a      	str	r2, [r3, #56]	; 0x38
 801490e:	4770      	bx	lr
 8014910:	2001a97c 	andcs	sl, r1, ip, ror r9

08014914 <enet_deinit>:
 8014914:	b508      	push	{r3, lr}
 8014916:	f640 200e 	movw	r0, #2574	; 0xa0e
 801491a:	f7fe fac0 	bl	8012e9e <rcu_periph_reset_enable>
 801491e:	f640 200e 	movw	r0, #2574	; 0xa0e
 8014922:	f7fe fabe 	bl	8012ea2 <rcu_periph_reset_disable>
 8014926:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801492a:	f7ff bfdf 	b.w	80148ec <enet_initpara_reset>
	...

08014930 <i2c_clock_config>:
 8014930:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014932:	4605      	mov	r5, r0
 8014934:	2002      	movs	r0, #2
 8014936:	460c      	mov	r4, r1
 8014938:	4617      	mov	r7, r2
 801493a:	f7fe fb71 	bl	8013020 <rcu_clock_freq_get>
 801493e:	4603      	mov	r3, r0
 8014940:	4828      	ldr	r0, [pc, #160]	; (80149e4 <i2c_clock_config+0xb4>)
 8014942:	4a29      	ldr	r2, [pc, #164]	; (80149e8 <i2c_clock_config+0xb8>)
 8014944:	fbb3 f0f0 	udiv	r0, r3, r0
 8014948:	4293      	cmp	r3, r2
 801494a:	bf94      	ite	ls
 801494c:	4601      	movls	r1, r0
 801494e:	213f      	movhi	r1, #63	; 0x3f
 8014950:	686e      	ldr	r6, [r5, #4]
 8014952:	4a26      	ldr	r2, [pc, #152]	; (80149ec <i2c_clock_config+0xbc>)
 8014954:	f026 063f 	bic.w	r6, r6, #63	; 0x3f
 8014958:	430e      	orrs	r6, r1
 801495a:	4294      	cmp	r4, r2
 801495c:	606e      	str	r6, [r5, #4]
 801495e:	d816      	bhi.n	801498e <i2c_clock_config+0x5e>
 8014960:	3001      	adds	r0, #1
 8014962:	283e      	cmp	r0, #62	; 0x3e
 8014964:	d90d      	bls.n	8014982 <i2c_clock_config+0x52>
 8014966:	223f      	movs	r2, #63	; 0x3f
 8014968:	622a      	str	r2, [r5, #32]
 801496a:	0064      	lsls	r4, r4, #1
 801496c:	fbb3 f4f4 	udiv	r4, r3, r4
 8014970:	2c04      	cmp	r4, #4
 8014972:	bf38      	it	cc
 8014974:	2404      	movcc	r4, #4
 8014976:	69ea      	ldr	r2, [r5, #28]
 8014978:	f3c4 040b 	ubfx	r4, r4, #0, #12
 801497c:	4314      	orrs	r4, r2
 801497e:	61ec      	str	r4, [r5, #28]
 8014980:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014982:	2802      	cmp	r0, #2
 8014984:	d801      	bhi.n	801498a <i2c_clock_config+0x5a>
 8014986:	2202      	movs	r2, #2
 8014988:	e7ee      	b.n	8014968 <i2c_clock_config+0x38>
 801498a:	6228      	str	r0, [r5, #32]
 801498c:	e7ed      	b.n	801496a <i2c_clock_config+0x3a>
 801498e:	4a18      	ldr	r2, [pc, #96]	; (80149f0 <i2c_clock_config+0xc0>)
 8014990:	4294      	cmp	r4, r2
 8014992:	d8f5      	bhi.n	8014980 <i2c_clock_config+0x50>
 8014994:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8014998:	4351      	muls	r1, r2
 801499a:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 801499e:	fbb1 f1f2 	udiv	r1, r1, r2
 80149a2:	3101      	adds	r1, #1
 80149a4:	6229      	str	r1, [r5, #32]
 80149a6:	b9a7      	cbnz	r7, 80149d2 <i2c_clock_config+0xa2>
 80149a8:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 80149ac:	fbb3 f4f4 	udiv	r4, r3, r4
 80149b0:	69eb      	ldr	r3, [r5, #28]
 80149b2:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80149b6:	61eb      	str	r3, [r5, #28]
 80149b8:	f3c4 030b 	ubfx	r3, r4, #0, #12
 80149bc:	b90b      	cbnz	r3, 80149c2 <i2c_clock_config+0x92>
 80149be:	f044 0401 	orr.w	r4, r4, #1
 80149c2:	69eb      	ldr	r3, [r5, #28]
 80149c4:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80149c8:	61eb      	str	r3, [r5, #28]
 80149ca:	69eb      	ldr	r3, [r5, #28]
 80149cc:	4323      	orrs	r3, r4
 80149ce:	61eb      	str	r3, [r5, #28]
 80149d0:	e7d6      	b.n	8014980 <i2c_clock_config+0x50>
 80149d2:	2219      	movs	r2, #25
 80149d4:	4354      	muls	r4, r2
 80149d6:	fbb3 f4f4 	udiv	r4, r3, r4
 80149da:	69eb      	ldr	r3, [r5, #28]
 80149dc:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80149e0:	e7e9      	b.n	80149b6 <i2c_clock_config+0x86>
 80149e2:	bf00      	nop
 80149e4:	000f4240 	andeq	r4, pc, r0, asr #4
 80149e8:	03c14dbf 	biceq	r4, r1, #12224	; 0x2fc0
 80149ec:	000186a0 	andeq	r8, r1, r0, lsr #13
 80149f0:	00061a80 	andeq	r1, r6, r0, lsl #21

080149f4 <i2c_ack_config>:
 80149f4:	6803      	ldr	r3, [r0, #0]
 80149f6:	2901      	cmp	r1, #1
 80149f8:	bf0c      	ite	eq
 80149fa:	f443 6380 	orreq.w	r3, r3, #1024	; 0x400
 80149fe:	f423 6380 	bicne.w	r3, r3, #1024	; 0x400
 8014a02:	6003      	str	r3, [r0, #0]
 8014a04:	4770      	bx	lr

08014a06 <i2c_ackpos_config>:
 8014a06:	6803      	ldr	r3, [r0, #0]
 8014a08:	b919      	cbnz	r1, 8014a12 <i2c_ackpos_config+0xc>
 8014a0a:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8014a0e:	6003      	str	r3, [r0, #0]
 8014a10:	4770      	bx	lr
 8014a12:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8014a16:	e7fa      	b.n	8014a0e <i2c_ackpos_config+0x8>

08014a18 <i2c_master_addressing>:
 8014a18:	3202      	adds	r2, #2
 8014a1a:	bf0c      	ite	eq
 8014a1c:	f021 0101 	biceq.w	r1, r1, #1
 8014a20:	f041 0101 	orrne.w	r1, r1, #1
 8014a24:	6101      	str	r1, [r0, #16]
 8014a26:	4770      	bx	lr

08014a28 <i2c_enable>:
 8014a28:	6803      	ldr	r3, [r0, #0]
 8014a2a:	f043 0301 	orr.w	r3, r3, #1
 8014a2e:	6003      	str	r3, [r0, #0]
 8014a30:	4770      	bx	lr

08014a32 <i2c_start_on_bus>:
 8014a32:	6803      	ldr	r3, [r0, #0]
 8014a34:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8014a38:	6003      	str	r3, [r0, #0]
 8014a3a:	4770      	bx	lr

08014a3c <i2c_stop_on_bus>:
 8014a3c:	6803      	ldr	r3, [r0, #0]
 8014a3e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8014a42:	6003      	str	r3, [r0, #0]
 8014a44:	4770      	bx	lr

08014a46 <i2c_data_transmit>:
 8014a46:	6101      	str	r1, [r0, #16]
 8014a48:	4770      	bx	lr

08014a4a <i2c_data_receive>:
 8014a4a:	6900      	ldr	r0, [r0, #16]
 8014a4c:	b2c0      	uxtb	r0, r0
 8014a4e:	4770      	bx	lr

08014a50 <i2c_flag_get>:
 8014a50:	098b      	lsrs	r3, r1, #6
 8014a52:	581a      	ldr	r2, [r3, r0]
 8014a54:	2301      	movs	r3, #1
 8014a56:	f001 011f 	and.w	r1, r1, #31
 8014a5a:	408b      	lsls	r3, r1
 8014a5c:	4213      	tst	r3, r2
 8014a5e:	bf14      	ite	ne
 8014a60:	2001      	movne	r0, #1
 8014a62:	2000      	moveq	r0, #0
 8014a64:	4770      	bx	lr

08014a66 <i2c_flag_clear>:
 8014a66:	f240 5301 	movw	r3, #1281	; 0x501
 8014a6a:	4299      	cmp	r1, r3
 8014a6c:	b510      	push	{r4, lr}
 8014a6e:	d102      	bne.n	8014a76 <i2c_flag_clear+0x10>
 8014a70:	6943      	ldr	r3, [r0, #20]
 8014a72:	6983      	ldr	r3, [r0, #24]
 8014a74:	bd10      	pop	{r4, pc}
 8014a76:	2201      	movs	r2, #1
 8014a78:	098c      	lsrs	r4, r1, #6
 8014a7a:	5823      	ldr	r3, [r4, r0]
 8014a7c:	f001 011f 	and.w	r1, r1, #31
 8014a80:	408a      	lsls	r2, r1
 8014a82:	ea23 0302 	bic.w	r3, r3, r2
 8014a86:	5023      	str	r3, [r4, r0]
 8014a88:	e7f4      	b.n	8014a74 <i2c_flag_clear+0xe>
	...

08014a8c <mac_address_get(unsigned char*)>:
 8014a8c:	2102      	movs	r1, #2
 8014a8e:	4a07      	ldr	r2, [pc, #28]	; (8014aac <mac_address_get(unsigned char*)+0x20>)
 8014a90:	f8d2 37e8 	ldr.w	r3, [r2, #2024]	; 0x7e8
 8014a94:	f8d2 27ec 	ldr.w	r2, [r2, #2028]	; 0x7ec
 8014a98:	7001      	strb	r1, [r0, #0]
 8014a9a:	7042      	strb	r2, [r0, #1]
 8014a9c:	0e1a      	lsrs	r2, r3, #24
 8014a9e:	7082      	strb	r2, [r0, #2]
 8014aa0:	0c1a      	lsrs	r2, r3, #16
 8014aa2:	70c2      	strb	r2, [r0, #3]
 8014aa4:	0a1a      	lsrs	r2, r3, #8
 8014aa6:	7102      	strb	r2, [r0, #4]
 8014aa8:	7143      	strb	r3, [r0, #5]
 8014aaa:	4770      	bx	lr
 8014aac:	1ffff000 	svcne	0x00fff000

08014ab0 <__popcountsi2>:
 8014ab0:	0843      	lsrs	r3, r0, #1
 8014ab2:	f003 3355 	and.w	r3, r3, #1431655765	; 0x55555555
 8014ab6:	1ac0      	subs	r0, r0, r3
 8014ab8:	0883      	lsrs	r3, r0, #2
 8014aba:	f003 3333 	and.w	r3, r3, #858993459	; 0x33333333
 8014abe:	f000 3033 	and.w	r0, r0, #858993459	; 0x33333333
 8014ac2:	4418      	add	r0, r3
 8014ac4:	eb00 1010 	add.w	r0, r0, r0, lsr #4
 8014ac8:	f000 300f 	and.w	r0, r0, #252645135	; 0xf0f0f0f
 8014acc:	eb00 2000 	add.w	r0, r0, r0, lsl #8
 8014ad0:	eb00 4000 	add.w	r0, r0, r0, lsl #16
 8014ad4:	0e00      	lsrs	r0, r0, #24
 8014ad6:	4770      	bx	lr

Disassembly of section .rodata:

08014ad8 <vtable for DisplayHandler-0x100>:
	...
 8014ae0:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 8014ae4:	09080706 	stmdbeq	r8, {r1, r2, r8, r9, sl}
 8014ae8:	00000000 	andeq	r0, r0, r0
 8014aec:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 8014af0:	353a3931 	ldrcc	r3, [sl, #-2353]!	; 0xfffff6cf
 8014af4:	37323a36 			; <UNDEFINED> instruction: 0x37323a36
 8014af8:	74634f00 	strbtvc	r4, [r3], #-3840	; 0xfffff100
 8014afc:	20303120 	eorscs	r3, r0, r0, lsr #2
 8014b00:	32323032 	eorscc	r3, r2, #50	; 0x32
 8014b04:	335b1b00 	cmpcc	fp, #0, 22
 8014b08:	69506d32 	ldmdbvs	r0, {r1, r4, r5, r8, sl, fp, sp, lr}^
 8014b0c:	506c6578 	rsbpl	r6, ip, r8, ror r5
 8014b10:	65687375 	strbvs	r7, [r8, #-885]!	; 0xfffffc8b
 8014b14:	6f632072 	svcvs	0x00632072
 8014b18:	6f72746e 	svcvs	0x0072746e
 8014b1c:	72656c6c 	rsbvc	r6, r5, #108, 24	; 0x6c00
 8014b20:	78387b20 	ldmdavc	r8!, {r5, r8, r9, fp, ip, sp, lr}
 8014b24:	55203420 	strpl	r3, [r0, #-1056]!	; 0xfffffbe0
 8014b28:	6576696e 	ldrbvs	r6, [r6, #-2414]!	; 0xfffff692
 8014b2c:	73657372 	cmnvc	r5, #-939524095	; 0xc8000001
 8014b30:	335b1b7d 	cmpcc	fp, #128000	; 0x1f400
 8014b34:	2e006d37 	mcrcs	13, 0, r6, cr0, cr7, {1}
 8014b38:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
 8014b3c:	00676966 	rsbeq	r6, r7, r6, ror #18
 8014b40:	66745f2e 	ldrbtvs	r5, [r4], -lr, lsr #30
 8014b44:	2e007074 	mcrcs	0, 0, r7, cr0, cr4, {3}
 8014b48:	7474685f 	ldrbtvc	r6, [r4], #-2143	; 0xfffff7a1
 8014b4c:	6f6e0070 	svcvs	0x006e0070
 8014b50:	503d6564 	eorspl	r6, sp, r4, ror #10
 8014b54:	6c657869 	stclvs	8, cr7, [r5], #-420	; 0xfffffe5c
 8014b58:	68737550 	ldmdavs	r3!, {r4, r6, r8, sl, ip, sp, lr}^
 8014b5c:	50007265 	andpl	r7, r0, r5, ror #4
 8014b60:	6c657869 	stclvs	8, cr7, [r5], #-420	; 0xfffffe5c
 8014b64:	68737550 	ldmdavs	r3!, {r4, r6, r8, sl, ip, sp, lr}^
 8014b68:	25207265 	strcs	r7, [r0, #-613]!	; 0xfffffd9b
 8014b6c:	73252d75 			; <UNDEFINED> instruction: 0x73252d75
 8014b70:	0064253a 	rsbeq	r2, r4, sl, lsr r5
 8014b74:	32334447 	eorscc	r4, r3, #1191182336	; 0x47000000
 8014b78:	37303246 	ldrcc	r3, [r0, -r6, asr #4]!
 8014b7c:	50204752 	eorpl	r4, r0, r2, asr r7
 8014b80:	6c657869 	stclvs	8, cr7, [r5], #-420	; 0xfffffe5c
 8014b84:	68737550 	ldmdavs	r3!, {r4, r6, r8, sl, ip, sp, lr}^
 8014b88:	50007265 	andpl	r7, r0, r5, ror #4
 8014b8c:	6c657869 	stclvs	8, cr7, [r5], #-420	; 0xfffffe5c
 8014b90:	68737550 	ldmdavs	r3!, {r4, r6, r8, sl, ip, sp, lr}^
 8014b94:	25207265 	strcs	r7, [r0, #-613]!	; 0xfffffd9b
 8014b98:	73250064 			; <UNDEFINED> instruction: 0x73250064
 8014b9c:	2064253a 	rsbcs	r2, r4, sl, lsr r5
 8014ba0:	20642547 	rsbcs	r2, r4, r7, asr #10
 8014ba4:	25007325 	strcs	r7, [r0, #-805]	; 0xfffffcdb
 8014ba8:	75253a73 	strvc	r3, [r5, #-2675]!	; 0xfffff58d
 8014bac:	61745300 	cmnvs	r4, r0, lsl #6
 8014bb0:	6e697472 	mcrvs	4, 3, r7, cr9, cr2, {3}
 8014bb4:	69502067 	ldmdbvs	r0, {r0, r1, r2, r5, r6, sp}^
 8014bb8:	506c6578 	rsbpl	r6, ip, r8, ror r5
 8014bbc:	65687375 	strbvs	r7, [r8, #-885]!	; 0xfffffc8b
 8014bc0:	69500072 	ldmdbvs	r0, {r1, r4, r5, r6}^
 8014bc4:	506c6578 	rsbpl	r6, ip, r8, ror r5
 8014bc8:	65687375 	strbvs	r7, [r8, #-885]!	; 0xfffffc8b
 8014bcc:	74532072 	ldrbvc	r2, [r3], #-114	; 0xffffff8e
 8014bd0:	65747261 	ldrbvs	r7, [r4, #-609]!	; 0xfffffd9f
 8014bd4:	00000064 	andeq	r0, r0, r4, rrx

08014bd8 <vtable for DisplayHandler>:
	...
 8014be0:	08008619 	stmdaeq	r0, {r0, r3, r4, r9, sl, pc}
 8014be4:	0800866b 	stmdaeq	r0, {r0, r1, r3, r5, r6, r9, sl, pc}
 8014be8:	080086c1 	stmdaeq	r0, {r0, r6, r7, r9, sl, pc}

08014bec <vtable for PixelDmxStartStop>:
	...
 8014bf4:	0800861b 	stmdaeq	r0, {r0, r1, r3, r4, r9, sl, pc}
 8014bf8:	08008677 	stmdaeq	r0, {r0, r1, r2, r4, r5, r6, r9, sl, pc}
 8014bfc:	0800861d 	stmdaeq	r0, {r0, r2, r3, r4, r9, sl, pc}
 8014c00:	0800862d 	stmdaeq	r0, {r0, r2, r3, r5, r9, sl, pc}

08014c04 <vtable for RDMNetDevice>:
	...
 8014c0c:	08008711 	stmdaeq	r0, {r0, r4, r8, r9, sl, pc}
 8014c10:	08008739 	stmdaeq	r0, {r0, r3, r4, r5, r8, r9, sl, pc}
 8014c14:	0800b48b 	stmdaeq	r0, {r0, r1, r3, r7, sl, ip, sp, pc}
 8014c18:	0800b48d 	stmdaeq	r0, {r0, r2, r3, r7, sl, ip, sp, pc}
 8014c1c:	0800863d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r9, sl, pc}
 8014c20:	08008651 	stmdaeq	r0, {r0, r4, r6, r9, sl, pc}
 8014c24:	08008691 	stmdaeq	r0, {r0, r4, r7, r9, sl, pc}
 8014c28:	ffffff34 			; <UNDEFINED> instruction: 0xffffff34
 8014c2c:	00000000 	andeq	r0, r0, r0
 8014c30:	08008731 	stmdaeq	r0, {r0, r4, r5, r8, r9, sl, pc}
 8014c34:	0800874b 	stmdaeq	r0, {r0, r1, r3, r6, r8, r9, sl, pc}
 8014c38:	08008649 	stmdaeq	r0, {r0, r3, r6, r9, sl, pc}
 8014c3c:	08008661 	stmdaeq	r0, {r0, r5, r6, r9, sl, pc}
 8014c40:	080086a5 	stmdaeq	r0, {r0, r2, r5, r7, r9, sl, pc}

08014c44 <vtable for FactoryDefaults>:
	...
 8014c4c:	08008669 	stmdaeq	r0, {r0, r3, r5, r6, r9, sl, pc}
 8014c50:	08008683 	stmdaeq	r0, {r0, r1, r7, r9, sl, pc}
 8014c54:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}

08014c58 <CSWTCH.80>:
 8014c58:	444e4f4f 	strbmi	r4, [lr], #-3919	; 0xfffff0b1
 8014c5c:	 	strtcc	r3, [lr], #-326	; 0xfffffeba

08014c5d <SOFTWARE_VERSION>:
 8014c5d:	00342e31 	eorseq	r2, r4, r1, lsr lr

08014c61 <gamma10_0>:
 8014c61:	03020100 	movweq	r0, #8448	; 0x2100
 8014c65:	07060504 	streq	r0, [r6, -r4, lsl #10]
 8014c69:	0b0a0908 	bleq	8297091 <__exidx_end+0x27f79d>
 8014c6d:	0f0e0d0c 	svceq	0x000e0d0c
 8014c71:	13121110 	tstne	r2, #16, 2
 8014c75:	17161514 			; <UNDEFINED> instruction: 0x17161514
 8014c79:	1b1a1918 	blne	869b0e1 <__exidx_end+0x6837ed>
 8014c7d:	1f1e1d1c 	svcne	0x001e1d1c
 8014c81:	23222120 			; <UNDEFINED> instruction: 0x23222120
 8014c85:	27262524 	strcs	r2, [r6, -r4, lsr #10]!
 8014c89:	2b2a2928 	blcs	8a9f131 <__exidx_end+0xa8783d>
 8014c8d:	2f2e2d2c 	svccs	0x002e2d2c
 8014c91:	33323130 	teqcc	r2, #48, 2
 8014c95:	37363534 			; <UNDEFINED> instruction: 0x37363534
 8014c99:	3b3a3938 	blcc	8ea3181 <__exidx_end+0xe8b88d>
 8014c9d:	3f3e3d3c 	svccc	0x003e3d3c
 8014ca1:	43424140 	movtmi	r4, #8512	; 0x2140
 8014ca5:	47464544 	strbmi	r4, [r6, -r4, asr #10]
 8014ca9:	4b4a4948 	blmi	92a71d1 <__exidx_end+0x128f8dd>
 8014cad:	4f4e4d4c 	svcmi	0x004e4d4c
 8014cb1:	53525150 	cmppl	r2, #80, 2
 8014cb5:	57565554 			; <UNDEFINED> instruction: 0x57565554
 8014cb9:	5b5a5958 	blpl	96ab221 <__exidx_end+0x169392d>
 8014cbd:	5f5e5d5c 	svcpl	0x005e5d5c
 8014cc1:	63626160 	cmnvs	r2, #96, 2
 8014cc5:	67666564 	strbvs	r6, [r6, -r4, ror #10]!
 8014cc9:	6b6a6968 	blvs	9aaf271 <__exidx_end+0x1a9797d>
 8014ccd:	6f6e6d6c 	svcvs	0x006e6d6c
 8014cd1:	73727170 	cmnvc	r2, #112, 2
 8014cd5:	77767574 			; <UNDEFINED> instruction: 0x77767574
 8014cd9:	7b7a7978 	blvc	9eb32c1 <__exidx_end+0x1e9b9cd>
 8014cdd:	7f7e7d7c 	svcvc	0x007e7d7c
 8014ce1:	83828180 	orrhi	r8, r2, #128, 2
 8014ce5:	87868584 	strhi	r8, [r6, r4, lsl #11]
 8014ce9:	8b8a8988 	blhi	62b7311 <__stack_size+0x62b4b11>
 8014ced:	8f8e8d8c 	svchi	0x008e8d8c
 8014cf1:	93929190 	orrsls	r9, r2, #144, 2	; 0x24
 8014cf5:	97969594 			; <UNDEFINED> instruction: 0x97969594
 8014cf9:	9b9a9998 	blls	66bb361 <__stack_size+0x66b8b61>
 8014cfd:	9f9e9d9c 	svcls	0x009e9d9c
 8014d01:	a3a2a1a0 			; <UNDEFINED> instruction: 0xa3a2a1a0
 8014d05:	a7a6a5a4 	strge	sl, [r6, r4, lsr #11]!
 8014d09:	abaaa9a8 	blge	6abf3b1 <__stack_size+0x6abcbb1>
 8014d0d:	afaeadac 	svcge	0x00aeadac
 8014d11:	b3b2b1b0 			; <UNDEFINED> instruction: 0xb3b2b1b0
 8014d15:	b7b6b5b4 			; <UNDEFINED> instruction: 0xb7b6b5b4
 8014d19:	bbbab9b8 	bllt	6ec3401 <__stack_size+0x6ec0c01>
 8014d1d:	bfbebdbc 	svclt	0x00bebdbc
 8014d21:	c3c2c1c0 	bicgt	ip, r2, #192, 2	; 0x30
 8014d25:	c7c6c5c4 	strbgt	ip, [r6, r4, asr #11]
 8014d29:	cbcac9c8 	blgt	72c7451 <__stack_size+0x72c4c51>
 8014d2d:	cfcecdcc 	svcgt	0x00cecdcc
 8014d31:	d3d2d1d0 	bicsle	sp, r2, #208, 2	; 0x34
 8014d35:	d7d6d5d4 			; <UNDEFINED> instruction: 0xd7d6d5d4
 8014d39:	dbdad9d8 	blle	76cb4a1 <__stack_size+0x76c8ca1>
 8014d3d:	dfdedddc 	svcle	0x00dedddc
 8014d41:	e3e2e1e0 	mvn	lr, #224, 2	; 0x38
 8014d45:	e7e6e5e4 	strb	lr, [r6, r4, ror #11]!
 8014d49:	ebeae9e8 	bl	7acf4f1 <__stack_size+0x7acccf1>
 8014d4d:	efeeedec 	svc	0x00eeedec
 8014d51:	f3f2f1f0 	vsra.u64	<illegal reg q15.5>, q8, #14
 8014d55:	f7f6f5f4 			; <UNDEFINED> instruction: 0xf7f6f5f4
 8014d59:	fbfaf9f8 	blx	7ed3543 <__stack_size+0x7ed0d43>
 8014d5d:	fffefdfc 			; <UNDEFINED> instruction: 0xfffefdfc

08014d61 <SOFTWARE_VERSION>:
 8014d61:	00342e31 	eorseq	r2, r4, r1, lsr lr
 8014d65:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8014d69:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8014d6d:	2c64252e 	cfstr64cs	mvdx2, [r4], #-184	; 0xffffff48
 8014d71:	252c7325 	strcs	r7, [ip, #-805]!	; 0xfffffcdb
 8014d75:	64252c73 	strtvs	r2, [r5], #-3187	; 0xfffff38d
 8014d79:	0a73252c 	beq	9cde231 <__exidx_end+0x1cc693d>
 8014d7d:	2e642500 	cdpcs	5, 6, cr2, cr4, cr0, {0}
 8014d81:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8014d85:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8014d89:	2c73252c 	cfldr64cs	mvdx2, [r3], #-176	; 0xffffff50
 8014d8d:	252c7325 	strcs	r7, [ip, #-805]!	; 0xfffffcdb
 8014d91:	4f000a64 	svcmi	0x00000a64
 8014d95:	664f006e 	strbvs	r0, [pc], -lr, rrx
 8014d99:	69640066 	stmdbvs	r4!, {r1, r2, r5, r6}^
 8014d9d:	616c7073 	smcvs	50947	; 0xc703
 8014da1:	73253a79 			; <UNDEFINED> instruction: 0x73253a79
 8014da5:	6674000a 	ldrbtvs	r0, [r4], -sl
 8014da9:	253a7074 	ldrcs	r7, [sl, #-116]!	; 0xffffff8c
 8014dad:	76000a73 			; <UNDEFINED> instruction: 0x76000a73
 8014db1:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8014db5:	253a6e6f 	ldrcs	r6, [sl, #-3695]!	; 0xfffff191
 8014db9:	70750073 	rsbsvc	r0, r5, r3, ror r0
 8014dbd:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 8014dc1:	7525203a 	strvc	r2, [r5, #-58]!	; 0xffffffc6
 8014dc5:	54000a73 	strpl	r0, [r0], #-2675	; 0xfffff58d
 8014dc9:	20505446 	subscs	r5, r0, r6, asr #8
 8014dcd:	20206e4f 	eorcs	r6, r0, pc, asr #28
 8014dd1:	6265525b 	rsbvs	r5, r5, #-1342177275	; 0xb0000005
 8014dd5:	5d746f6f 	ldclpl	15, cr6, [r4, #-444]!	; 0xfffffe44
 8014dd9:	54465400 	strbpl	r5, [r6], #-1024	; 0xfffffc00
 8014ddd:	664f2050 			; <UNDEFINED> instruction: 0x664f2050
 8014de1:	525b2066 	subspl	r2, fp, #102	; 0x66
 8014de5:	6f6f6265 	svcvs	0x006f6265
 8014de9:	00205d74 	eoreq	r5, r0, r4, ror sp
 8014ded:	4f525245 	svcmi	0x00525245
 8014df1:	673f2352 			; <UNDEFINED> instruction: 0x673f2352
 8014df5:	000a7465 	andeq	r7, sl, r5, ror #8
 8014df9:	70746674 	rsbsvc	r6, r4, r4, ror r6
 8014dfd:	69640023 	stmdbvs	r4!, {r0, r1, r5}^
 8014e01:	616c7073 	smcvs	50947	; 0xc703
 8014e05:	45002379 	strmi	r2, [r0, #-889]	; 0xfffffc87
 8014e09:	524f5252 	subpl	r5, pc, #536870917	; 0x20000005
 8014e0d:	000a2123 	andeq	r2, sl, r3, lsr #2
 8014e11:	4f525245 	svcmi	0x00525245
 8014e15:	0a3f2352 	beq	8fddb65 <__exidx_end+0xfc6271>
 8014e19:	62657200 	rsbvs	r7, r5, #0, 4
 8014e1d:	23746f6f 	cmncs	r4, #444	; 0x1bc
 8014e21:	696c0023 	stmdbvs	ip!, {r0, r1, r5}^
 8014e25:	00237473 	eoreq	r7, r3, r3, ror r4
 8014e29:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8014e2d:	75002a23 	strvc	r2, [r0, #-2595]	; 0xfffff5dd
 8014e31:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 8014e35:	76002365 	strvc	r2, [r0], -r5, ror #6
 8014e39:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8014e3d:	00236e6f 	eoreq	r6, r3, pc, ror #28
 8014e41:	23746567 	cmncs	r4, #432013312	; 0x19c00000
 8014e45:	63616600 	cmnvs	r1, #0, 12
 8014e49:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8014e4d:	 	tstmi	r0, r3, lsr #6

08014e50 <s_Node>:
 8014e50:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 8014e54:	0074654e 	rsbseq	r6, r4, lr, asr #10
	...
 8014e60:	41730000 	cmnmi	r3, r0
 8014e64:	45204e43 	strmi	r4, [r0, #-3651]!	; 0xfffff1bd
 8014e68:	31332e31 	teqcc	r3, r1, lsr lr
	...
 8014e74:	2043534f 	subcs	r5, r3, pc, asr #6
 8014e78:	76726553 			; <UNDEFINED> instruction: 0x76726553
 8014e7c:	00007265 	andeq	r7, r0, r5, ror #4
 8014e80:	00000000 	andeq	r0, r0, r0
 8014e84:	544c0000 	strbpl	r0, [ip], #-0
 8014e88:	00000043 	andeq	r0, r0, r3, asr #32
	...
 8014e98:	2043534f 	subcs	r5, r3, pc, asr #6
 8014e9c:	65696c43 	strbvs	r6, [r9, #-3139]!	; 0xfffff3bd
 8014ea0:	0000746e 	andeq	r7, r0, lr, ror #8
 8014ea4:	00000000 	andeq	r0, r0, r0
 8014ea8:	44520000 	ldrbmi	r0, [r2], #-0
 8014eac:	74654e4d 	strbtvc	r4, [r5], #-3661	; 0xfffff1b3
 8014eb0:	524c4c20 	subpl	r4, ip, #32, 24	; 0x2000
 8014eb4:	6e4f2050 	mcrvs	0, 2, r2, cr15, cr0, {2}
 8014eb8:	0000796c 	andeq	r7, r0, ip, ror #18
 8014ebc:	776f6853 			; <UNDEFINED> instruction: 0x776f6853
 8014ec0:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
	...
 8014ecc:	494d0000 	stmdbmi	sp, {}^	; <UNPREDICTABLE>
 8014ed0:	00004944 	andeq	r4, r0, r4, asr #18
	...
 8014ee0:	00504444 	subseq	r4, r0, r4, asr #8
	...
 8014ef0:	69500000 	ldmdbvs	r0, {}^	; <UNPREDICTABLE>
 8014ef4:	506c6578 	rsbpl	r6, ip, r8, ror r5
 8014ef8:	65687375 	strbvs	r7, [r8, #-885]!	; 0xfffffc8b
 8014efc:	00000072 	andeq	r0, r0, r2, ror r0
 8014f00:	00000000 	andeq	r0, r0, r0
 8014f04:	65646f4e 	strbvs	r6, [r4, #-3918]!	; 0xfffff0b2
	...

08014f16 <s_Output>:
 8014f16:	00584d44 	subseq	r4, r8, r4, asr #26
	...
 8014f22:	004d4452 	subeq	r4, sp, r2, asr r4
	...
 8014f2e:	696e6f4d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
 8014f32:	00726f74 	rsbseq	r6, r2, r4, ror pc
 8014f36:	00000000 	andeq	r0, r0, r0
 8014f3a:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
 8014f3e:	0000006c 	andeq	r0, r0, ip, rrx
 8014f42:	00000000 	andeq	r0, r0, r0
 8014f46:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
 8014f4a:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
 8014f4e:	00000000 	andeq	r0, r0, r0
 8014f52:	0043534f 	subeq	r5, r3, pc, asr #6
	...
 8014f5e:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 8014f62:	00006769 	andeq	r6, r0, r9, ror #14
 8014f66:	00000000 	andeq	r0, r0, r0
 8014f6a:	70657453 	rsbvc	r7, r5, r3, asr r4
 8014f6e:	00726570 	rsbseq	r6, r2, r0, ror r5
 8014f72:	00000000 	andeq	r0, r0, r0
 8014f76:	79616c50 	stmdbvc	r1!, {r4, r6, sl, fp, sp, lr}^
 8014f7a:	00007265 	andeq	r7, r0, r5, ror #4
 8014f7e:	00000000 	andeq	r0, r0, r0
 8014f82:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 8014f86:	0074654e 	rsbseq	r6, r4, lr, asr #10
 8014f8a:	00000000 	andeq	r0, r0, r0
 8014f8e:	69726553 	ldmdbvs	r2!, {r0, r1, r4, r6, r8, sl, sp, lr}^
 8014f92:	00006c61 	andeq	r6, r0, r1, ror #24
 8014f96:	00000000 	andeq	r0, r0, r0
 8014f9a:	20424752 	subcs	r4, r2, r2, asr r7
 8014f9e:	656e6150 	strbvs	r6, [lr, #-336]!	; 0xfffffeb0
 8014fa2:	0000006c 	andeq	r0, r0, ip, rrx
	...

08014fa8 <RemoteConfig::s_GET>:
 8014fa8:	0800a395 	stmdaeq	r0, {r0, r2, r4, r7, r8, r9, sp, pc}
 8014fac:	00000000 	andeq	r0, r0, r0
 8014fb0:	08014e1a 	stmdaeq	r1, {r1, r3, r4, r9, sl, fp, lr}
 8014fb4:	00000008 	andeq	r0, r0, r8
 8014fb8:	080098dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, fp, ip, pc}
 8014fbc:	00000000 	andeq	r0, r0, r0
 8014fc0:	08014e23 	stmdaeq	r1, {r0, r1, r5, r9, sl, fp, lr}
 8014fc4:	00000005 	andeq	r0, r0, r5
 8014fc8:	080098dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, fp, ip, pc}
 8014fcc:	00000000 	andeq	r0, r0, r0
 8014fd0:	08014e29 	stmdaeq	r1, {r0, r3, r5, r9, sl, fp, lr}
 8014fd4:	00000006 	andeq	r0, r0, r6
 8014fd8:	08009a91 	stmdaeq	r0, {r0, r4, r7, r9, fp, ip, pc}
 8014fdc:	00000000 	andeq	r0, r0, r0
 8014fe0:	08014e30 	stmdaeq	r1, {r4, r5, r9, sl, fp, lr}
 8014fe4:	00000007 	andeq	r0, r0, r7
 8014fe8:	08009a51 	stmdaeq	r0, {r0, r4, r6, r9, fp, ip, pc}
 8014fec:	00000000 	andeq	r0, r0, r0
 8014ff0:	08014e38 	stmdaeq	r1, {r3, r4, r5, r9, sl, fp, lr}
 8014ff4:	00000008 	andeq	r0, r0, r8
 8014ff8:	080099ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, fp, ip, pc}
 8014ffc:	00000000 	andeq	r0, r0, r0
 8015000:	08014dff 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r7, r8, sl, fp, lr}
 8015004:	00000008 	andeq	r0, r0, r8
 8015008:	08009d65 	stmdaeq	r0, {r0, r2, r5, r6, r8, sl, fp, ip, pc}
 801500c:	00000000 	andeq	r0, r0, r0
 8015010:	08014e41 	stmdaeq	r1, {r0, r6, r9, sl, fp, lr}
 8015014:	00010004 	andeq	r0, r1, r4
 8015018:	08009a01 	stmdaeq	r0, {r0, r9, fp, ip, pc}
 801501c:	00000000 	andeq	r0, r0, r0
 8015020:	08014df9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, r8, sl, fp, lr}
 8015024:	00000005 	andeq	r0, r0, r5
 8015028:	0800a085 	stmdaeq	r0, {r0, r2, r7, sp, pc}
 801502c:	00000000 	andeq	r0, r0, r0
 8015030:	08014e46 	stmdaeq	r1, {r1, r2, r6, r9, sl, fp, lr}
 8015034:	00000009 	andeq	r0, r0, r9

08015038 <RemoteConfig::s_SET>:
 8015038:	08009b3d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r8, r9, fp, ip, pc}
 801503c:	00000000 	andeq	r0, r0, r0
 8015040:	08014df9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, r8, sl, fp, lr}
 8015044:	00010005 	andeq	r0, r1, r5
 8015048:	08009b15 	stmdaeq	r0, {r0, r2, r4, r8, r9, fp, ip, pc}
 801504c:	00000000 	andeq	r0, r0, r0
 8015050:	08014dff 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r7, r8, sl, fp, lr}
 8015054:	00010008 	andeq	r0, r1, r8
 8015058:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 801505c:	2c64253a 	cfstr64cs	mvdx2, [r4], #-232	; 0xffffff18
 8015060:	73252300 			; <UNDEFINED> instruction: 0x73252300
 8015064:	0a64253d 	beq	991e560 <__exidx_end+0x1906c6c>
 8015068:	73252200 			; <UNDEFINED> instruction: 0x73252200
 801506c:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8015070:	002c2273 	eoreq	r2, ip, r3, ror r2
 8015074:	3d732523 	cfldr64cc	mvdx2, [r3, #-140]!	; 0xffffff74
 8015078:	000a7325 	andeq	r7, sl, r5, lsr #6
 801507c:	6f626552 	svcvs	0x00626552
 8015080:	6e69746f 	cdpvs	4, 6, cr7, cr9, cr15, {3}
 8015084:	2e2e2067 	cdpcs	0, 2, cr2, cr14, cr7, {3}
 8015088:	52000a2e 	andpl	r0, r0, #188416	; 0x2e000
 801508c:	6f6f6265 	svcvs	0x006f6265
 8015090:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 8015094:	2e2e2e20 	cdpcs	14, 2, cr2, cr14, cr0, {1}
 8015098:	6f637200 	svcvs	0x00637200
 801509c:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 80150a0:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 80150a4:	74656e00 	strbtvc	r6, [r5], #-3584	; 0xfffff200
 80150a8:	6b726f77 	blvs	9cb0e8c <__exidx_end+0x1c99598>
 80150ac:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 80150b0:	73696400 	cmnvc	r9, #0, 8
 80150b4:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 80150b8:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 80150bc:	76656400 	strbtvc	r6, [r5], -r0, lsl #8
 80150c0:	73656369 	cmnvc	r5, #-1543503871	; 0xa4000001
 80150c4:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 80150c8:	00000000 	andeq	r0, r0, r0

080150cc <RemoteConfig::s_TXT>:
 80150cc:	08009d6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r8, sl, fp, ip, pc}
 80150d0:	00000000 	andeq	r0, r0, r0
 80150d4:	08009fdd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, sl, fp, ip, pc}
 80150d8:	00000000 	andeq	r0, r0, r0
 80150dc:	08015099 	stmdaeq	r1, {r0, r3, r4, r7, ip, lr}
 80150e0:	0000000b 	andeq	r0, r0, fp
 80150e4:	0000000c 	andeq	r0, r0, ip
 80150e8:	08009d99 	stmdaeq	r0, {r0, r3, r4, r7, r8, sl, fp, ip, pc}
 80150ec:	00000000 	andeq	r0, r0, r0
 80150f0:	0800a00d 	stmdaeq	r0, {r0, r2, r3, sp, pc}
 80150f4:	00000000 	andeq	r0, r0, r0
 80150f8:	080150a5 	stmdaeq	r1, {r0, r2, r5, r7, ip, lr}
 80150fc:	0000000b 	andeq	r0, r0, fp
 8015100:	00000000 	andeq	r0, r0, r0
 8015104:	08009df1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, fp, ip, pc}
 8015108:	00000000 	andeq	r0, r0, r0
 801510c:	0800a05d 	stmdaeq	r0, {r0, r2, r3, r4, r6, sp, pc}
 8015110:	00000000 	andeq	r0, r0, r0
 8015114:	080150b1 	stmdaeq	r1, {r0, r4, r5, r7, ip, lr}
 8015118:	0000000b 	andeq	r0, r0, fp
 801511c:	0000000f 	andeq	r0, r0, pc
 8015120:	08009dc5 	stmdaeq	r0, {r0, r2, r6, r7, r8, sl, fp, ip, pc}
 8015124:	00000000 	andeq	r0, r0, r0
 8015128:	0800a035 	stmdaeq	r0, {r0, r2, r4, r5, sp, pc}
 801512c:	00000000 	andeq	r0, r0, r0
 8015130:	080150bd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r7, ip, lr}
 8015134:	0000000b 	andeq	r0, r0, fp
 8015138:	00000003 	andeq	r0, r0, r3
 801513c:	00544547 	subseq	r4, r4, r7, asr #10
 8015140:	54534f50 	ldrbpl	r4, [r3], #-3920	; 0xfffff0b0
 8015144:	54544800 	ldrbpl	r4, [r4], #-2048	; 0xfffff800
 8015148:	0a200050 	beq	8815290 <__exidx_end+0x7fd99c>
 801514c:	312e3100 			; <UNDEFINED> instruction: 0x312e3100
 8015150:	6e6f4300 	cdpvs	3, 6, cr4, cr15, cr0, {0}
 8015154:	746e6574 	strbtvc	r6, [lr], #-1396	; 0xfffffa8c
 8015158:	7079542d 	rsbsvc	r5, r9, sp, lsr #8
 801515c:	3b200065 	blcc	88152f8 <__exidx_end+0x7fda04>
 8015160:	70706100 	rsbsvc	r6, r0, r0, lsl #2
 8015164:	6163696c 	cmnvs	r3, ip, ror #18
 8015168:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 801516c:	6f736a2f 	svcvs	0x00736a2f
 8015170:	6f43006e 	svcvs	0x0043006e
 8015174:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 8015178:	654c2d74 	strbvs	r2, [ip, #-3444]	; 0xfffff28c
 801517c:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
 8015180:	6e692f00 	cdpvs	15, 6, cr2, cr9, cr0, {0}
 8015184:	2e786564 	cdpcs	5, 7, cr6, cr8, cr4, {3}
 8015188:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 801518c:	74732f00 	ldrbtvc	r2, [r3], #-3840	; 0xfffff100
 8015190:	73656c79 	cmnvc	r5, #30976	; 0x7900
 8015194:	7373632e 	cmnvc	r3, #-1207959552	; 0xb8000000
 8015198:	6e692f00 	cdpvs	15, 6, cr2, cr9, cr0, {0}
 801519c:	2e786564 	cdpcs	5, 7, cr6, cr8, cr4, {3}
 80151a0:	2f00736a 	svccs	0x0000736a
 80151a4:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 80151a8:	696c002f 	stmdbvs	ip!, {r0, r1, r2, r3, r5}^
 80151ac:	76007473 			; <UNDEFINED> instruction: 0x76007473
 80151b0:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 80151b4:	75006e6f 	strvc	r6, [r0, #-3695]	; 0xfffff191
 80151b8:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 80151bc:	69640065 	stmdbvs	r4!, {r0, r2, r5, r6}^
 80151c0:	616c7073 	smcvs	50947	; 0xc703
 80151c4:	69640079 	stmdbvs	r4!, {r0, r3, r4, r5, r6}^
 80151c8:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 80151cc:	0079726f 	rsbseq	r7, r9, pc, ror #4
 80151d0:	6f736a2f 	svcvs	0x00736a2f
 80151d4:	63612f6e 	cmnvs	r1, #440	; 0x1b8
 80151d8:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 80151dc:	62657200 	rsbvs	r7, r5, #0, 4
 80151e0:	00746f6f 	rsbseq	r6, r4, pc, ror #30
 80151e4:	6e656469 	cdpvs	4, 6, cr6, cr5, cr9, {3}
 80151e8:	79666974 	stmdbvc	r6!, {r2, r4, r5, r6, r8, fp, sp, lr}^
 80151ec:	44213c00 	strtmi	r3, [r1], #-3072	; 0xfffff400
 80151f0:	5954434f 	ldmdbpl	r4, {r0, r1, r2, r3, r6, r8, r9, lr}^
 80151f4:	68204550 	stmdavs	r0!, {r4, r6, r8, sl, lr}
 80151f8:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 80151fc:	74683c0a 	strbtvc	r3, [r8], #-3082	; 0xfffff3f6
 8015200:	0a3e6c6d 	beq	8fb03bc <__exidx_end+0xf98ac8>
 8015204:	6165683c 	cmnvs	r5, ip, lsr r8
 8015208:	743c3e64 	ldrtvc	r3, [ip], #-3684	; 0xfffff19c
 801520c:	656c7469 	strbvs	r7, [ip, #-1129]!	; 0xfffffb97
 8015210:	6275533e 	rsbsvs	r5, r5, #-134217728	; 0xf8000000
 8015214:	3c74696d 			; <UNDEFINED> instruction: 0x3c74696d
 8015218:	7469742f 	strbtvc	r7, [r9], #-1071	; 0xfffffbd1
 801521c:	3c3e656c 	cfldr32cc	mvfx6, [lr], #-432	; 0xfffffe50
 8015220:	6165682f 	cmnvs	r5, pc, lsr #16
 8015224:	3c0a3e64 	stccc	14, cr3, [sl], {100}	; 0x64
 8015228:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 801522c:	31683c3e 	cmncc	r8, lr, lsr ip
 8015230:	3c4b4f3e 	mcrrcc	15, 3, r4, fp, cr14
 8015234:	3e31682f 	cdpcc	8, 3, cr6, cr1, cr15, {1}
 8015238:	6f622f3c 	svcvs	0x00622f3c
 801523c:	0a3e7964 	beq	8fb37d4 <__exidx_end+0xf9bee0>
 8015240:	74682f3c 	strbtvc	r2, [r8], #-3900	; 0xfffff0c4
 8015244:	0a3e6c6d 	beq	8fb0400 <__exidx_end+0xf98b0c>
 8015248:	64614200 	strbtvs	r4, [r1], #-512	; 0xfffffe00
 801524c:	71655220 	cmnvc	r5, r0, lsr #4
 8015250:	74736575 	ldrbtvc	r6, [r3], #-1397	; 0xfffffa8b
 8015254:	746f4e00 	strbtvc	r4, [pc], #-3584	; 801525c <RemoteConfig::s_TXT+0x190>
 8015258:	756f4620 	strbvc	r4, [pc, #-1568]!	; 8014c40 <vtable for RDMNetDevice+0x3c>
 801525c:	5200646e 	andpl	r6, r0, #1845493760	; 0x6e000000
 8015260:	65757165 	ldrbvs	r7, [r5, #-357]!	; 0xfffffe9b
 8015264:	45207473 	strmi	r7, [r0, #-1139]!	; 0xfffffb8d
 8015268:	7469746e 	strbtvc	r7, [r9], #-1134	; 0xfffffb92
 801526c:	6f542079 	svcvs	0x00542079
 8015270:	614c206f 	cmpvs	ip, pc, rrx
 8015274:	00656772 	rsbeq	r6, r5, r2, ror r7
 8015278:	75716552 	ldrbvc	r6, [r1, #-1362]!	; 0xfffffaae
 801527c:	2d747365 	ldclcs	3, cr7, [r4, #-404]!	; 0xfffffe6c
 8015280:	20495255 	subcs	r5, r9, r5, asr r2
 8015284:	206f6f54 	rsbcs	r6, pc, r4, asr pc	; <UNPREDICTABLE>
 8015288:	676e6f4c 	strbvs	r6, [lr, -ip, asr #30]!
 801528c:	746e4900 	strbtvc	r4, [lr], #-2304	; 0xfffff700
 8015290:	616e7265 	cmnvs	lr, r5, ror #4
 8015294:	6553206c 	ldrbvs	r2, [r3, #-108]	; 0xffffff94
 8015298:	72657672 	rsbvc	r7, r5, #119537664	; 0x7200000
 801529c:	72724520 	rsbsvc	r4, r2, #32, 10	; 0x8000000
 80152a0:	4d00726f 	sfmmi	f7, 4, [r0, #-444]	; 0xfffffe44
 80152a4:	6f687465 	svcvs	0x00687465
 80152a8:	6f4e2064 	svcvs	0x004e2064
 80152ac:	6d492074 	stclvs	0, cr2, [r9, #-464]	; 0xfffffe30
 80152b0:	6d656c70 	stclvs	12, cr6, [r5, #-448]!	; 0xfffffe40
 80152b4:	65746e65 	ldrbvs	r6, [r4, #-3685]!	; 0xfffff19b
 80152b8:	65560064 	ldrbvs	r0, [r6, #-100]	; 0xffffff9c
 80152bc:	6f697372 	svcvs	0x00697372
 80152c0:	6f4e206e 	svcvs	0x004e206e
 80152c4:	75532074 	ldrbvc	r2, [r3, #-116]	; 0xffffff8c
 80152c8:	726f7070 	rsbvc	r7, pc, #112	; 0x70
 80152cc:	00646574 	rsbeq	r6, r4, r4, ror r5
 80152d0:	6e6b6e55 	mcrvs	14, 3, r6, cr11, cr5, {2}
 80152d4:	206e776f 	rsbcs	r7, lr, pc, ror #14
 80152d8:	6f727245 	svcvs	0x00727245
 80152dc:	4b4f0072 	blmi	93d54ac <__exidx_end+0x13bdbb8>
 80152e0:	44213c00 	strtmi	r3, [r1], #-3072	; 0xfffff400
 80152e4:	5954434f 	ldmdbpl	r4, {r0, r1, r2, r3, r6, r8, r9, lr}^
 80152e8:	68204550 	stmdavs	r0!, {r4, r6, r8, sl, lr}
 80152ec:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 80152f0:	74683c0a 	strbtvc	r3, [r8], #-3082	; 0xfffff3f6
 80152f4:	0a3e6c6d 	beq	8fb04b0 <__exidx_end+0xf98bbc>
 80152f8:	6165683c 	cmnvs	r5, ip, lsr r8
 80152fc:	743c3e64 	ldrtvc	r3, [ip], #-3684	; 0xfffff19c
 8015300:	656c7469 	strbvs	r7, [ip, #-1129]!	; 0xfffffb97
 8015304:	2075253e 	rsbscs	r2, r5, lr, lsr r5
 8015308:	2f3c7325 	svccs	0x003c7325
 801530c:	6c746974 			; <UNDEFINED> instruction: 0x6c746974
 8015310:	2f3c3e65 	svccs	0x003c3e65
 8015314:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
 8015318:	623c0a3e 	eorsvs	r0, ip, #253952	; 0x3e000
 801531c:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 8015320:	3e31683c 	mrccc	8, 1, r6, cr1, cr12, {1}
 8015324:	2f3c7325 	svccs	0x003c7325
 8015328:	3c3e3168 	ldfccs	f3, [lr], #-416	; 0xfffffe60
 801532c:	646f622f 	strbtvs	r6, [pc], #-559	; 8015334 <RemoteConfig::s_TXT+0x268>
 8015330:	3c0a3e79 	stccc	14, cr3, [sl], {121}	; 0x79
 8015334:	6d74682f 	ldclvs	8, cr6, [r4, #-188]!	; 0xffffff44
 8015338:	000a3e6c 	andeq	r3, sl, ip, ror #28
 801533c:	50545448 	subspl	r5, r4, r8, asr #8
 8015340:	312e312f 			; <UNDEFINED> instruction: 0x312e312f
 8015344:	20752520 	rsbscs	r2, r5, r0, lsr #10
 8015348:	0a0d7325 	beq	8371fe4 <__exidx_end+0x35a6f0>
 801534c:	76726553 			; <UNDEFINED> instruction: 0x76726553
 8015350:	203a7265 	eorscs	r7, sl, r5, ror #4
 8015354:	0a0d7325 	beq	8371ff0 <__exidx_end+0x35a6fc>
 8015358:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
 801535c:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	; 0xfffffe6c
 8015360:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
 8015364:	7325203a 			; <UNDEFINED> instruction: 0x7325203a
 8015368:	6f430a0d 	svcvs	0x00430a0d
 801536c:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 8015370:	654c2d74 	strbvs	r2, [ip, #-3444]	; 0xfffff28c
 8015374:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
 8015378:	7525203a 	strvc	r2, [r5, #-58]!	; 0xffffffc6
 801537c:	6f430a0d 	svcvs	0x00430a0d
 8015380:	63656e6e 	cmnvs	r5, #1760	; 0x6e0
 8015384:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8015388:	6c63203a 	stclvs	0, cr2, [r3], #-232	; 0xffffff18
 801538c:	0d65736f 	stcleq	3, cr7, [r5, #-444]!	; 0xfffffe44
 8015390:	000a0d0a 	andeq	r0, sl, sl, lsl #26
 8015394:	32334447 	eorscc	r4, r3, #1191182336	; 0x47000000
 8015398:	37303246 	ldrcc	r3, [r0, -r6, asr #4]!
 801539c:	 	strvc	r4, [r0], #-1874	; 0xfffff8ae

0801539f <contentType>:
 801539f:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 80153a3:	6d74682f 	ldclvs	8, cr6, [r4, #-188]!	; 0xffffff44
 80153a7:	0000006c 	andeq	r0, r0, ip, rrx
	...
 80153bf:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 80153c3:	7373632f 	cmnvc	r3, #-1140850688	; 0xbc000000
	...
 80153df:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 80153e3:	76616a2f 	strbtvc	r6, [r1], -pc, lsr #20
 80153e7:	72637361 	rsbvc	r7, r3, #-2080374783	; 0x84000001
 80153eb:	00747069 	rsbseq	r7, r4, r9, rrx
	...
 80153ff:	6c707061 	ldclvs	0, cr7, [r0], #-388	; 0xfffffe7c
 8015403:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
 8015407:	2f6e6f69 	svccs	0x006e6f69
 801540b:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
	...

0801541f <RemoteConfigConst::PARAMS_DISABLE>:
 801541f:	61736964 	cmnvs	r3, r4, ror #18
 8015423:	00656c62 	rsbeq	r6, r5, r2, ror #24

08015427 <RemoteConfigConst::PARAMS_FILE_NAME>:
 8015427:	6e6f6372 	mcrvs	3, 3, r6, cr15, cr2, {3}
 801542b:	2e676966 	vnmulcs.f16	s13, s14, s13	; <UNPREDICTABLE>
 801542f:	00747874 	rsbseq	r7, r4, r4, ror r8

08015433 <RemoteConfigConst::PARAMS_DISPLAY_NAME>:
 8015433:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8015437:	5f79616c 	svcpl	0x0079616c
 801543b:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

08015440 <RemoteConfigConst::PARAMS_DISABLE_WRITE>:
 8015440:	61736964 	cmnvs	r3, r4, ror #18
 8015444:	5f656c62 	svcpl	0x00656c62
 8015448:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
 801544c:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

0801544e <RemoteConfigConst::PARAMS_ENABLE_REBOOT>:
 801544e:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 8015452:	725f656c 	subsvc	r6, pc, #108, 10	; 0x1b000000
 8015456:	6f6f6265 	svcvs	0x006f6265
 801545a:	 	mcrvs	0, 3, r0, cr5, cr4, {3}

0801545c <RemoteConfigConst::PARAMS_ENABLE_UPTIME>:
 801545c:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 8015460:	755f656c 	ldrbvc	r6, [pc, #-1388]	; 8014efc <s_Node+0xac>
 8015464:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 8015468:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

0801546a <RemoteConfigConst::PARAMS_ENABLE_FACTORY>:
 801546a:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 801546e:	665f656c 	ldrbvs	r6, [pc], -ip, ror #10
 8015472:	6f746361 	svcvs	0x00746361
 8015476:	7b007972 	blvc	8033a46 <__exidx_end+0x1c152>
 801547a:	73696c22 	cmnvc	r9, #8704	; 0x2200
 801547e:	7b3a2274 	blvc	8e9de56 <__exidx_end+0xe86562>
 8015482:	22706922 	rsbscs	r6, r0, #557056	; 0x88000
 8015486:	6425223a 	strtvs	r2, [r5], #-570	; 0xfffffdc6
 801548a:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801548e:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8015492:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 8015496:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 801549a:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 801549e:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 80154a2:	65646f6e 	strbvs	r6, [r4, #-3950]!	; 0xfffff092
 80154a6:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 80154aa:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 80154ae:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 80154b2:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 80154b6:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 80154ba:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 80154be:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 80154c2:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 80154c6:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 80154ca:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 80154ce:	253a2274 	ldrcs	r2, [sl, #-628]!	; 0xfffffd8c
 80154d2:	7d7d7d64 	ldclvc	13, cr7, [sp, #-400]!	; 0xfffffe70
 80154d6:	227b007d 	rsbscs	r0, fp, #125	; 0x7d
 80154da:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 80154de:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 80154e2:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 80154e6:	2c22732a 	stccs	3, cr7, [r2], #-168	; 0xffffff58
 80154ea:	616f6222 	cmnvs	pc, r2, lsr #4
 80154ee:	3a226472 	bcc	88ae6be <__exidx_end+0x896dca>
 80154f2:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 80154f6:	7562222c 	strbvc	r2, [r2, #-556]!	; 0xfffffdd4
 80154fa:	22646c69 	rsbcs	r6, r4, #26880	; 0x6900
 80154fe:	64227b3a 	strtvs	r7, [r2], #-2874	; 0xfffff4c6
 8015502:	22657461 	rsbcs	r7, r5, #1627389952	; 0x61000000
 8015506:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 801550a:	2c22732a 	stccs	3, cr7, [r2], #-168	; 0xffffff58
 801550e:	6d697422 	cfstrdvs	mvd7, [r9, #-136]!	; 0xffffff78
 8015512:	223a2265 	eorscs	r2, sl, #1342177286	; 0x50000006
 8015516:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
 801551a:	007d7d22 	rsbseq	r7, sp, r2, lsr #26
 801551e:	7075227b 	rsbsvc	r2, r5, fp, ror r2
 8015522:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 8015526:	75253a22 	strvc	r3, [r5, #-2594]!	; 0xfffff5de
 801552a:	7b000a7d 	blvc	8017f26 <__exidx_end+0x632>
 801552e:	73696422 	cmnvc	r9, #570425344	; 0x22000000
 8015532:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8015536:	64253a22 	strtvs	r3, [r5], #-2594	; 0xfffff5de
 801553a:	227b007d 	rsbscs	r0, fp, #125	; 0x7d
 801553e:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8015542:	7b3a2273 	blvc	8e9df16 <__exidx_end+0xe86622>
 8015546:	76656422 	strbtvc	r6, [r5], -r2, lsr #8
 801554a:	73656369 	cmnvc	r5, #-1543503871	; 0xa4000001
 801554e:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8015552:	44223a22 	strtmi	r3, [r2], #-2594	; 0xfffff5de
 8015556:	5020584d 	eorpl	r5, r0, sp, asr #16
 801555a:	6c657869 	stclvs	8, cr7, [r5], #-420	; 0xfffffe5c
 801555e:	64222c22 	strtvs	r2, [r2], #-3106	; 0xfffff3de
 8015562:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
 8015566:	742e7961 	strtvc	r7, [lr], #-2401	; 0xfffff69f
 801556a:	3a227478 	bcc	88b2752 <__exidx_end+0x89ae5e>
 801556e:	73694422 	cmnvc	r9, #570425344	; 0x22000000
 8015572:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8015576:	46445520 	strbmi	r5, [r4], -r0, lsr #10
 801557a:	6e222c22 	cdpvs	12, 2, cr2, cr2, cr2, {1}
 801557e:	6f777465 	svcvs	0x00777465
 8015582:	742e6b72 	strtvc	r6, [lr], #-2930	; 0xfffff48e
 8015586:	3a227478 	bcc	88b276e <__exidx_end+0x89ae7a>
 801558a:	74654e22 	strbtvc	r4, [r5], #-3618	; 0xfffff1de
 801558e:	6b726f77 	blvs	9cb1372 <__exidx_end+0x1c99a7e>
 8015592:	72222c22 	eorvc	r2, r2, #8704	; 0x2200
 8015596:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 801559a:	742e6769 	strtvc	r6, [lr], #-1897	; 0xfffff897
 801559e:	3a227478 	bcc	88b2786 <__exidx_end+0x89ae92>
 80155a2:	6d655222 	sfmvs	f5, 2, [r5, #-136]!	; 0xffffff78
 80155a6:	2065746f 	rsbcs	r7, r5, pc, ror #8
 80155aa:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 80155ae:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 80155b2:	6f697461 	svcvs	0x00697461
 80155b6:	7d7d226e 	lfmvc	f2, 2, [sp, #-440]!	; 0xfffffe48
	...

080155bb <index_html>:
 80155bb:	4f44213c 	svcmi	0x0044213c
 80155bf:	50595443 	subspl	r5, r9, r3, asr #8
 80155c3:	74682045 	strbtvc	r2, [r8], #-69	; 0xffffffbb
 80155c7:	0a3e6c6d 	beq	8fb0783 <__exidx_end+0xf98e8f>
 80155cb:	6d74683c 	ldclvs	8, cr6, [r4, #-240]!	; 0xffffff10
 80155cf:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
 80155d3:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
 80155d7:	3c090a3e 			; <UNDEFINED> instruction: 0x3c090a3e
 80155db:	6b6e696c 	blvs	9bafb93 <__exidx_end+0x1b9829f>
 80155df:	6c657220 	sfmvs	f7, 2, [r5], #-128	; 0xffffff80
 80155e3:	7473223d 	ldrbtvc	r2, [r3], #-573	; 0xfffffdc3
 80155e7:	73656c79 	cmnvc	r5, #30976	; 0x7900
 80155eb:	74656568 	strbtvc	r6, [r5], #-1384	; 0xfffffa98
 80155ef:	72682022 	rsbvc	r2, r8, #34	; 0x22
 80155f3:	223d6665 	eorscs	r6, sp, #105906176	; 0x6500000
 80155f7:	6c797473 	cfldrdvs	mvd7, [r9], #-460	; 0xfffffe34
 80155fb:	632e7365 			; <UNDEFINED> instruction: 0x632e7365
 80155ff:	20227373 	eorcs	r7, r2, r3, ror r3
 8015603:	090a3e2f 	stmdbeq	sl, {r0, r1, r2, r3, r5, r9, sl, fp, ip, sp}
 8015607:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
 801560b:	3c3e656c 	cfldr32cc	mvfx6, [lr], #-432	; 0xfffffe50
 801560f:	7469742f 	strbtvc	r7, [r9], #-1071	; 0xfffffbd1
 8015613:	0a3e656c 	beq	8faebcb <__exidx_end+0xf972d7>
 8015617:	65682f3c 	strbvs	r2, [r8, #-3900]!	; 0xfffff0c4
 801561b:	0a3e6461 	beq	8fae7a7 <__exidx_end+0xf96eb3>
 801561f:	646f623c 	strbtvs	r6, [pc], #-572	; 8015627 <index_html+0x6c>
 8015623:	090a3e79 	stmdbeq	sl, {r0, r3, r4, r5, r6, r9, sl, fp, ip, sp}
 8015627:	6165683c 	cmnvs	r5, ip, lsr r8
 801562b:	3e726564 	cdpcc	5, 7, cr6, cr2, cr4, {3}
 801562f:	206c753c 	rsbcs	r7, ip, ip, lsr r5
 8015633:	223d6469 	eorscs	r6, sp, #1761607680	; 0x69000000
 8015637:	694c6469 	stmdbvs	ip, {r0, r3, r5, r6, sl, sp, lr}^
 801563b:	3e227473 	mcrcc	4, 1, r7, cr2, cr3, {3}
 801563f:	6c752f3c 	ldclvs	15, cr2, [r5], #-240	; 0xffffff10
 8015643:	682f3c3e 	stmdavs	pc!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8015647:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 801564b:	090a3e72 	stmdbeq	sl, {r1, r4, r5, r6, r9, sl, fp, ip, sp}
 801564f:	3c3e703c 	ldccc	0, cr7, [lr], #-240	; 0xffffff10
 8015653:	656c6573 	strbvs	r6, [ip, #-1395]!	; 0xfffffa8d
 8015657:	69207463 	stmdbvs	r0!, {r0, r1, r5, r6, sl, ip, sp, lr}
 801565b:	69223d64 	stmdbvs	r2!, {r2, r5, r6, r8, sl, fp, ip, sp}
 801565f:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
 8015663:	6f746365 	svcvs	0x00746365
 8015667:	20227972 	eorcs	r7, r2, r2, ror r9
 801566b:	68636e6f 	stmdavs	r3!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 801566f:	65676e61 	strbvs	r6, [r7, #-3681]!	; 0xfffff19f
 8015673:	6567223d 	strbvs	r2, [r7, #-573]!	; 0xfffffdc3
 8015677:	78745f74 	ldmdavc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 801567b:	68742874 	ldmdavs	r4!, {r2, r4, r5, r6, fp, sp}^
 801567f:	762e7369 	strtvc	r7, [lr], -r9, ror #6
 8015683:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
 8015687:	3c3e2229 	lfmcc	f2, 4, [lr], #-164	; 0xffffff5c
 801568b:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
 801568f:	3e746365 	cdpcc	3, 7, cr6, cr4, cr5, {3}
 8015693:	3e702f3c 	mrccc	15, 3, r2, cr0, cr12, {1}
 8015697:	743c090a 	ldrtvc	r0, [ip], #-2314	; 0xfffff6f6
 801569b:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
 801569f:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
 80156a3:	54646922 	strbtpl	r6, [r4], #-2338	; 0xfffff6de
 80156a7:	20227478 	eorcs	r7, r2, r8, ror r4
 80156ab:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 80156af:	273d7265 	ldrcs	r7, [sp, -r5, ror #4]!
 80156b3:	3c3e2731 	ldccc	7, cr2, [lr], #-196	; 0xffffff3c
 80156b7:	6261742f 	rsbvs	r7, r1, #788529152	; 0x2f000000
 80156bb:	0a3e656c 	beq	8faec73 <__exidx_end+0xf9737f>
 80156bf:	6f663c09 	svcvs	0x00663c09
 80156c3:	7265746f 	rsbvc	r7, r5, #1862270976	; 0x6f000000
 80156c7:	6c753c3e 	ldclvs	12, cr3, [r5], #-248	; 0xffffff08
 80156cb:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
 80156cf:	56646922 	strbtpl	r6, [r4], -r2, lsr #18
 80156d3:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 80156d7:	3e226e6f 	cdpcc	14, 2, cr6, cr2, cr15, {3}
 80156db:	6c752f3c 	ldclvs	15, cr2, [r5], #-240	; 0xffffff10
 80156df:	662f3c3e 			; <UNDEFINED> instruction: 0x662f3c3e
 80156e3:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
 80156e7:	090a3e72 	stmdbeq	sl, {r1, r4, r5, r6, r9, sl, fp, ip, sp}
 80156eb:	7263733c 	rsbvc	r7, r3, #60, 6	; 0xf0000000
 80156ef:	20747069 	rsbscs	r7, r4, r9, rrx
 80156f3:	3d637273 	sfmcc	f7, 2, [r3, #-460]!	; 0xfffffe34
 80156f7:	646e6922 	strbtvs	r6, [lr], #-2338	; 0xfffff6de
 80156fb:	6a2e7865 	bvs	8bb3897 <__exidx_end+0xb9bfa3>
 80156ff:	3c3e2273 	lfmcc	f2, 4, [lr], #-460	; 0xfffffe34
 8015703:	7263732f 	rsbvc	r7, r3, #-1140850688	; 0xbc000000
 8015707:	3e747069 	cdpcc	0, 7, cr7, cr4, cr9, {3}
 801570b:	622f3c0a 	eorvs	r3, pc, #2560	; 0xa00
 801570f:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 8015713:	682f3c0a 	stmdavs	pc!, {r1, r3, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8015717:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 801571b:	 	strbtvs	r6, [pc], #-522	; 8015723 <styles_css+0x7>

0801571c <styles_css>:
 801571c:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 8015720:	200a7b20 	andcs	r7, sl, r0, lsr #22
 8015724:	63616220 	cmnvs	r1, #32, 4
 8015728:	6f72676b 	svcvs	0x0072676b
 801572c:	2d646e75 	stclcs	14, cr6, [r4, #-468]!	; 0xfffffe2c
 8015730:	6f6c6f63 	svcvs	0x006c6f63
 8015734:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
 8015738:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
 801573c:	30322c30 	eorscc	r2, r2, r0, lsr ip
 8015740:	2930322c 	ldmdbcs	r0!, {r2, r3, r5, r9, ip, sp}
 8015744:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 8015748:	6f6c6f63 	svcvs	0x006c6f63
 801574c:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
 8015750:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
 8015754:	202c3535 	eorcs	r3, ip, r5, lsr r5
 8015758:	2c353532 	cfldr32cs	mvfx3, [r5], #-200	; 0xffffff38
 801575c:	35353220 	ldrcc	r3, [r5, #-544]!	; 0xfffffde0
 8015760:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
 8015764:	6c750a0a 			; <UNDEFINED> instruction: 0x6c750a0a
 8015768:	200a7b20 	andcs	r7, sl, r0, lsr #22
 801576c:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 8015770:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8015774:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 8015778:	0a3b7865 	beq	8ef3914 <__exidx_end+0xedc020>
 801577c:	6c0a0a7d 			; <UNDEFINED> instruction: 0x6c0a0a7d
 8015780:	0a7b2069 	beq	9edd92c <__exidx_end+0x1ec6038>
 8015784:	696c2020 	stmdbvs	ip!, {r5, sp}^
 8015788:	732d7473 			; <UNDEFINED> instruction: 0x732d7473
 801578c:	656c7974 	strbvs	r7, [ip, #-2420]!	; 0xfffff68c
 8015790:	6f6e203a 	svcvs	0x006e203a
 8015794:	0a3b656e 	beq	8eeed54 <__exidx_end+0xed7460>
 8015798:	616d2020 	cmnvs	sp, r0, lsr #32
 801579c:	6e696772 	mcrvs	7, 3, r6, cr9, cr2, {3}
 80157a0:	7031203a 	eorsvc	r2, r1, sl, lsr r0
 80157a4:	70352078 	eorsvc	r2, r5, r8, ror r0
 80157a8:	7d0a3b78 	vstrvc	d3, [sl, #-480]	; 0xfffffe20
 80157ac:	65680a0a 	strbvs	r0, [r8, #-2570]!	; 0xfffff5f6
 80157b0:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 80157b4:	200a7b20 	andcs	r7, sl, r0, lsr #22
 80157b8:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 80157bc:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 80157c0:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 80157c4:	0a3b7865 	beq	8ef3960 <__exidx_end+0xedc06c>
 80157c8:	6f622020 	svcvs	0x00622020
 80157cc:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
 80157d0:	6461722d 	strbtvs	r7, [r1], #-557	; 0xfffffdd3
 80157d4:	3a737569 	bcc	9cf2d80 <__exidx_end+0x1cdb48c>
 80157d8:	78703420 	ldmdavc	r0!, {r5, sl, ip, sp}^
 80157dc:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 80157e0:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 80157e4:	203a7265 	eorscs	r7, sl, r5, ror #4
 80157e8:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 80157ec:	72672064 	rsbvc	r2, r7, #100	; 0x64
 80157f0:	31207965 			; <UNDEFINED> instruction: 0x31207965
 80157f4:	0a3b7870 	beq	8ef39bc <__exidx_end+0xedc0c8>
 80157f8:	660a0a7d 			; <UNDEFINED> instruction: 0x660a0a7d
 80157fc:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
 8015800:	0a7b2072 	beq	9edd9d0 <__exidx_end+0x1ec60dc>
 8015804:	69642020 	stmdbvs	r4!, {r5, sp}^
 8015808:	616c7073 	smcvs	50947	; 0xc703
 801580c:	66203a79 			; <UNDEFINED> instruction: 0x66203a79
 8015810:	3b78656c 	blcc	9e2edc8 <__exidx_end+0x1e174d4>
 8015814:	6a20200a 	bvs	881d844 <__exidx_end+0x805f50>
 8015818:	69747375 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r8, r9, ip, sp, lr}^
 801581c:	632d7966 			; <UNDEFINED> instruction: 0x632d7966
 8015820:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
 8015824:	203a746e 	eorscs	r7, sl, lr, ror #8
 8015828:	746e6563 	strbtvc	r6, [lr], #-1379	; 0xfffffa9d
 801582c:	0a3b7265 	beq	8ef21c8 <__exidx_end+0xeda8d4>
 8015830:	6f622020 	svcvs	0x00622020
 8015834:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
 8015838:	6461722d 	strbtvs	r7, [r1], #-557	; 0xfffffdd3
 801583c:	3a737569 	bcc	9cf2de8 <__exidx_end+0x1cdb4f4>
 8015840:	78703420 	ldmdavc	r0!, {r5, sl, ip, sp}^
 8015844:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 8015848:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 801584c:	203a7265 	eorscs	r7, sl, r5, ror #4
 8015850:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8015854:	72672064 	rsbvc	r2, r7, #100	; 0x64
 8015858:	31207965 			; <UNDEFINED> instruction: 0x31207965
 801585c:	0a3b7870 	beq	8ef3a24 <__exidx_end+0xedc130>
 8015860:	00000a7d 	andeq	r0, r0, sp, ror sl

08015864 <HttpContent>:
 8015864:	0801518e 	stmdaeq	r1, {r1, r2, r3, r7, r8, ip, lr}
 8015868:	0801571c 	stmdaeq	r1, {r2, r3, r4, r8, r9, sl, ip, lr}
 801586c:	0801519a 	stmdaeq	r1, {r1, r3, r4, r7, r8, ip, lr}
 8015870:	0801587c 	stmdaeq	r1, {r2, r3, r4, r5, r6, fp, ip, lr}
 8015874:	08015182 	stmdaeq	r1, {r1, r7, r8, ip, lr}
 8015878:	080155bb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r7, r8, sl, ip, lr}

0801587c <index_js>:
 801587c:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8015880:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8015884:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8015888:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 801588c:	534a7465 	movtpl	r7, #42085	; 0xa465
 8015890:	6a284e4f 	bvs	8a291d4 <__exidx_end+0xa118e0>
 8015894:	296e6f73 	stmdbcs	lr!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8015898:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 801589c:	74656c09 	strbtvc	r6, [r5], #-3081	; 0xfffff3f7
 80158a0:	6c727520 	cfldr64vs	mvdx7, [r2], #-128	; 0xffffff80
 80158a4:	6a2f273d 	bvs	8bdf5a0 <__exidx_end+0xbc7cac>
 80158a8:	2f6e6f73 	svccs	0x006e6f73
 80158ac:	202b2027 	eorcs	r2, fp, r7, lsr #32
 80158b0:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 80158b4:	09090a3b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r9, fp}
 80158b8:	20797274 	rsbscs	r7, r9, r4, ror r2
 80158bc:	09090a7b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r6, r9, fp}
 80158c0:	656c0909 	strbvs	r0, [ip, #-2313]!	; 0xfffff6f7
 80158c4:	65722074 	ldrbvs	r2, [r2, #-116]!	; 0xffffff8c
 80158c8:	77613d73 			; <UNDEFINED> instruction: 0x77613d73
 80158cc:	20746961 	rsbscs	r6, r4, r1, ror #18
 80158d0:	63746566 	cmnvs	r4, #427819008	; 0x19800000
 80158d4:	72752868 	rsbsvc	r2, r5, #104, 16	; 0x680000
 80158d8:	0a3b296c 	beq	8edfe90 <__exidx_end+0xec859c>
 80158dc:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 80158e0:	75746572 	ldrbvc	r6, [r4, #-1394]!	; 0xfffffa8e
 80158e4:	61206e72 			; <UNDEFINED> instruction: 0x61206e72
 80158e8:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 80158ec:	73657220 	cmnvc	r5, #32, 4
 80158f0:	6f736a2e 	svcvs	0x00736a2e
 80158f4:	3b29286e 	blcc	8a5fab4 <__exidx_end+0xa481c0>
 80158f8:	7d09090a 	vstrvc.16	s0, [r9, #-20]	; 0xffffffec	; <UNPREDICTABLE>
 80158fc:	74616320 	strbtvc	r6, [r1], #-800	; 0xfffffce0
 8015900:	28206863 	stmdacs	r0!, {r0, r1, r5, r6, fp, sp, lr}
 8015904:	6f727265 	svcvs	0x00727265
 8015908:	7b202972 	blvc	881fed8 <__exidx_end+0x8085e4>
 801590c:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8015910:	6e6f6309 	cdpvs	3, 6, cr6, cr15, cr9, {0}
 8015914:	656c6f73 	strbvs	r6, [ip, #-3955]!	; 0xfffff08d
 8015918:	676f6c2e 	strbvs	r6, [pc, -lr, lsr #24]!
 801591c:	72726528 	rsbsvc	r6, r2, #40, 10	; 0xa000000
 8015920:	3b29726f 	blcc	8a722e4 <__exidx_end+0xa5a9f0>
 8015924:	7d09090a 	vstrvc.16	s0, [r9, #-20]	; 0xffffffec	; <UNPREDICTABLE>
 8015928:	0a0a7d0a 	beq	82b4d58 <__exidx_end+0x29d464>
 801592c:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8015930:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8015934:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8015938:	72206e6f 	eorvc	r6, r0, #1776	; 0x6f0
 801593c:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 8015940:	73694c72 	cmnvc	r9, #29184	; 0x7200
 8015944:	20292874 	eorcs	r2, r9, r4, ror r8
 8015948:	09090a7b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r6, r9, fp}
 801594c:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8015950:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8015954:	6177613d 	cmnvs	r7, sp, lsr r1
 8015958:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 801595c:	534a7465 	movtpl	r7, #42085	; 0xa465
 8015960:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8015964:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8015968:	0a3b2927 	beq	8edfe0c <__exidx_end+0xec8518>
 801596c:	6f640909 	svcvs	0x00640909
 8015970:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 8015974:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 8015978:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
 801597c:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 8015980:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 8015984:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 8015988:	73694c64 	cmnvc	r9, #100, 24	; 0x6400
 801598c:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 8015990:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
 8015994:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
 8015998:	3c223d4c 	stccc	13, cr3, [r2], #-304	; 0xfffffed0
 801599c:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
 80159a0:	73696c2b 	cmnvc	r9, #11008	; 0x2b00
 80159a4:	696c2e74 	stmdbvs	ip!, {r2, r4, r5, r6, r9, sl, fp, sp}^
 80159a8:	6e2e7473 	mcrvs	4, 1, r7, cr14, cr3, {3}
 80159ac:	2b656d61 	blcs	9970f38 <__exidx_end+0x1959644>
 80159b0:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8015930 <index_js+0xb4>
 80159b4:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 80159b8:	2b223e69 	blcs	88a5364 <__exidx_end+0x88da70>
 80159bc:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 80159c0:	73696c2e 	cmnvc	r9, #11776	; 0x2e00
 80159c4:	6f6e2e74 	svcvs	0x006e2e74
 80159c8:	742e6564 	strtvc	r6, [lr], #-1380	; 0xfffffa9c
 80159cc:	2b657079 	blcs	9971bb8 <__exidx_end+0x195a2c4>
 80159d0:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8015950 <index_js+0xd4>
 80159d4:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 80159d8:	2b223e69 	blcs	88a5384 <__exidx_end+0x88da90>
 80159dc:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 80159e0:	73696c2e 	cmnvc	r9, #11776	; 0x2e00
 80159e4:	6f6e2e74 	svcvs	0x006e2e74
 80159e8:	702e6564 	eorvc	r6, lr, r4, ror #10
 80159ec:	2e74726f 	cdpcs	2, 7, cr7, cr4, cr15, {3}
 80159f0:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 80159f4:	2f3c222b 	svccs	0x003c222b
 80159f8:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
 80159fc:	0a7d0a3b 	beq	9f582f0 <__exidx_end+0x1f409fc>
 8015a00:	7973610a 	ldmdbvc	r3!, {r1, r3, r8, sp, lr}^
 8015a04:	6620636e 	strtvs	r6, [r0], -lr, ror #6
 8015a08:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 8015a0c:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 8015a10:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 8015a14:	69447265 	stmdbvs	r4, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8015a18:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 8015a1c:	2879726f 	ldmdacs	r9!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
 8015a20:	0a7b2029 	beq	9eddacc <__exidx_end+0x1ec61d8>
 8015a24:	6c090909 			; <UNDEFINED> instruction: 0x6c090909
 8015a28:	64207465 	strtvs	r7, [r0], #-1125	; 0xfffffb9b
 8015a2c:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
 8015a30:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8015a34:	6177613d 	cmnvs	r7, sp, lsr r1
 8015a38:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8015a3c:	534a7465 	movtpl	r7, #42085	; 0xa465
 8015a40:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8015a44:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8015a48:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8015a4c:	3b292779 	blcc	8a5f838 <__exidx_end+0xa47f44>
 8015a50:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8015a54:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8015a58:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8015a5c:	0a22223d 	beq	889e358 <__exidx_end+0x886a64>
 8015a60:	6c090909 			; <UNDEFINED> instruction: 0x6c090909
 8015a64:	66207465 	strtvs	r7, [r0], -r5, ror #8
 8015a68:	6e656c69 	cdpvs	12, 6, cr6, cr5, cr9, {3}
 8015a6c:	73656d61 	cmnvc	r5, #6208	; 0x1840
 8015a70:	6a624f3d 	bvs	98a976c <__exidx_end+0x1891e78>
 8015a74:	2e746365 	cdpcs	3, 7, cr6, cr4, cr5, {3}
 8015a78:	7379656b 	cmnvc	r9, #448790528	; 0x1ac00000
 8015a7c:	72696428 	rsbvc	r6, r9, #40, 8	; 0x28000000
 8015a80:	6f746365 	svcvs	0x00746365
 8015a84:	225b7972 	subscs	r7, fp, #1867776	; 0x1c8000
 8015a88:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8015a8c:	295d2273 	ldmdbcs	sp, {r0, r1, r4, r5, r6, r9, sp}^
 8015a90:	09090a3b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r9, fp}
 8015a94:	6c696609 	stclvs	6, cr6, [r9], #-36	; 0xffffffdc
 8015a98:	6d616e65 	stclvs	14, cr6, [r1, #-404]!	; 0xfffffe6c
 8015a9c:	662e7365 	strtvs	r7, [lr], -r5, ror #6
 8015aa0:	6145726f 	cmpvs	r5, pc, ror #4
 8015aa4:	66286863 	strtvs	r6, [r8], -r3, ror #16
 8015aa8:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 8015aac:	286e6f69 	stmdacs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 8015ab0:	2979656b 	ldmdbcs	r9!, {r0, r1, r3, r5, r6, r8, sl, sp, lr}^
 8015ab4:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 8015ab8:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 8015abc:	20726176 	rsbscs	r6, r2, r6, ror r1
 8015ac0:	756c6176 	strbvc	r6, [ip, #-374]!	; 0xfffffe8a
 8015ac4:	203d2065 	eorscs	r2, sp, r5, rrx
 8015ac8:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8015acc:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8015ad0:	66225b79 			; <UNDEFINED> instruction: 0x66225b79
 8015ad4:	73656c69 	cmnvc	r5, #26880	; 0x6900
 8015ad8:	6b5b5d22 	blvs	96ecf68 <__exidx_end+0x16d5674>
 8015adc:	3b5d7965 	blcc	9774078 <__exidx_end+0x175c784>
 8015ae0:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8015ae4:	74680909 	strbtvc	r0, [r8], #-2313	; 0xfffff6f7
 8015ae8:	3d2b6c6d 	stccc	12, cr6, [fp, #-436]!	; 0xfffffe4c
 8015aec:	706f3c22 	rsbvc	r3, pc, r2, lsr #24
 8015af0:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8015af4:	6c617620 	stclvs	6, cr7, [r1], #-128	; 0xffffff80
 8015af8:	223d6575 	eorscs	r6, sp, #490733568	; 0x1d400000
 8015afc:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 8015b00:	223e222b 	eorscs	r2, lr, #-1342177278	; 0xb0000002
 8015b04:	6c61762b 	stclvs	6, cr7, [r1], #-172	; 0xffffff54
 8015b08:	222b6575 	eorcs	r6, fp, #490733568	; 0x1d400000
 8015b0c:	706f2f3c 	rsbvc	r2, pc, ip, lsr pc	; <UNPREDICTABLE>
 8015b10:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8015b14:	0a3b223e 	beq	8ede414 <__exidx_end+0xec6b20>
 8015b18:	7d090909 	vstrvc.16	s0, [r9, #-18]	; 0xffffffee	; <UNPREDICTABLE>
 8015b1c:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 8015b20:	6f640909 	svcvs	0x00640909
 8015b24:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 8015b28:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 8015b2c:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
 8015b30:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 8015b34:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 8015b38:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 8015b3c:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
 8015b40:	6f746365 	svcvs	0x00746365
 8015b44:	29227972 	stmdbcs	r2!, {r1, r4, r5, r6, r8, fp, ip, sp, lr}
 8015b48:	6e6e692e 	vmulvs.f16	s13, s28, s29	; <UNPREDICTABLE>
 8015b4c:	54487265 	strbpl	r7, [r8], #-613	; 0xfffffd9b
 8015b50:	683d4c4d 	ldmdavs	sp!, {r0, r2, r3, r6, sl, fp, lr}
 8015b54:	3b6c6d74 	blcc	9b3112c <__exidx_end+0x1b19838>
 8015b58:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8015b5c:	5f746567 	svcpl	0x00746567
 8015b60:	28747874 	ldmdacs	r4!, {r2, r4, r5, r6, fp, ip, sp, lr}^
 8015b64:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8015b68:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 8015b6c:	5d305b73 	fldmdbxpl	r0!, {d5-d61}	;@ Deprecated
 8015b70:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
 8015b74:	73610a0a 	cmnvc	r1, #40960	; 0xa000
 8015b78:	20636e79 	rsbcs	r6, r3, r9, ror lr
 8015b7c:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 8015b80:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8015b84:	6e657220 	cdpvs	2, 6, cr7, cr5, cr0, {1}
 8015b88:	56726564 	ldrbtpl	r6, [r2], -r4, ror #10
 8015b8c:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8015b90:	29286e6f 	stmdbcs	r8!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
 8015b94:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 8015b98:	74656c09 	strbtvc	r6, [r5], #-3081	; 0xfffff3f7
 8015b9c:	72657620 	rsbvc	r7, r5, #32, 12	; 0x2000000
 8015ba0:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 8015ba4:	6177613d 	cmnvs	r7, sp, lsr r1
 8015ba8:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8015bac:	534a7465 	movtpl	r7, #42085	; 0xa465
 8015bb0:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8015bb4:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8015bb8:	276e6f69 	strbcs	r6, [lr, -r9, ror #30]!
 8015bbc:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 8015bc0:	636f6409 	cmnvs	pc, #150994944	; 0x9000000
 8015bc4:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
 8015bc8:	65672e74 	strbvs	r2, [r7, #-3700]!	; 0xfffff18c
 8015bcc:	656c4574 	strbvs	r4, [ip, #-1396]!	; 0xfffffa8c
 8015bd0:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
 8015bd4:	64497942 	strbvs	r7, [r9], #-2370	; 0xfffff6be
 8015bd8:	64692228 	strbtvs	r2, [r9], #-552	; 0xfffffdd8
 8015bdc:	73726556 	cmnvc	r2, #360710144	; 0x15800000
 8015be0:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 8015be4:	6e692e29 	cdpvs	14, 6, cr2, cr9, cr9, {1}
 8015be8:	4872656e 	ldmdami	r2!, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^
 8015bec:	3d4c4d54 	stclcc	13, cr4, [ip, #-336]	; 0xfffffeb0
 8015bf0:	696c3c22 	stmdbvs	ip!, {r1, r5, sl, fp, ip, sp}^
 8015bf4:	2b22563e 	blcs	88ab4f4 <__exidx_end+0x893c00>
 8015bf8:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8015bfc:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 8015c00:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8015c04:	2b6e6f69 	blcs	9bb19b0 <__exidx_end+0x1b9a0bc>
 8015c08:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8015b88 <index_js+0x30c>
 8015c0c:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8015c10:	2b223e69 	blcs	88a55bc <__exidx_end+0x88dcc8>
 8015c14:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8015c18:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 8015c1c:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
 8015c20:	61642e64 	cmnvs	r4, r4, ror #28
 8015c24:	222b6574 	eorcs	r6, fp, #116, 10	; 0x1d000000
 8015c28:	696c2f3c 	stmdbvs	ip!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 8015c2c:	696c3c3e 	stmdbvs	ip!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}^
 8015c30:	762b223e 			; <UNDEFINED> instruction: 0x762b223e
 8015c34:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8015c38:	622e6e6f 	eorvs	r6, lr, #1776	; 0x6f0
 8015c3c:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
 8015c40:	6d69742e 	cfstrdvs	mvd7, [r9, #-184]!	; 0xffffff48
 8015c44:	3c222b65 			; <UNDEFINED> instruction: 0x3c222b65
 8015c48:	3e696c2f 	cdpcc	12, 6, cr6, cr9, cr15, {1}
 8015c4c:	3e696c3c 	mcrcc	12, 3, r6, cr9, cr12, {1}
 8015c50:	65762b22 	ldrbvs	r2, [r6, #-2850]!	; 0xfffff4de
 8015c54:	6f697372 	svcvs	0x00697372
 8015c58:	6f622e6e 	svcvs	0x00622e6e
 8015c5c:	2b647261 	blcs	99325e8 <__exidx_end+0x191acf4>
 8015c60:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8015be0 <index_js+0x364>
 8015c64:	3b223e69 	blcc	88a5610 <__exidx_end+0x88dd1c>
 8015c68:	0a0a7d0a 	beq	82b5098 <__exidx_end+0x29d7a4>
 8015c6c:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8015c70:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8015c74:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8015c78:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 8015c7c:	745f7465 	ldrbvc	r7, [pc], #-1125	; 8015c84 <index_js+0x408>
 8015c80:	73287478 			; <UNDEFINED> instruction: 0x73287478
 8015c84:	20296c65 	eorcs	r6, r9, r5, ror #24
 8015c88:	6c090a7b 			; <UNDEFINED> instruction: 0x6c090a7b
 8015c8c:	74207465 	strtvc	r7, [r0], #-1125	; 0xfffffb9b
 8015c90:	613d7478 	teqvs	sp, r8, ror r4
 8015c94:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 8015c98:	74656720 	strbtvc	r6, [r5], #-1824	; 0xfffff8e0
 8015c9c:	4e4f534a 	cdpmi	3, 4, cr5, cr15, cr10, {2}
 8015ca0:	6c657328 	stclvs	3, cr7, [r5], #-160	; 0xffffff60
 8015ca4:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 8015ca8:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8015cac:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8015cb0:	3b22223d 	blcc	889e5ac <__exidx_end+0x886cb8>
 8015cb4:	624f090a 	subvs	r0, pc, #163840	; 0x28000
 8015cb8:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
 8015cbc:	79656b2e 	stmdbvc	r5!, {r1, r2, r3, r5, r8, r9, fp, sp, lr}^
 8015cc0:	78742873 	ldmdavc	r4!, {r0, r1, r4, r5, r6, fp, sp}^
 8015cc4:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
 8015cc8:	2e295d6c 	cdpcs	13, 2, cr5, cr9, cr12, {3}
 8015ccc:	45726f66 	ldrbmi	r6, [r2, #-3942]!	; 0xfffff09a
 8015cd0:	28686361 	stmdacs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
 8015cd4:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 8015cd8:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8015cdc:	79656b28 	stmdbvc	r5!, {r3, r5, r8, r9, fp, sp, lr}^
 8015ce0:	0a7b2029 	beq	9eddd8c <__exidx_end+0x1ec6498>
 8015ce4:	61760909 	cmnvs	r6, r9, lsl #18
 8015ce8:	61762072 	cmnvs	r6, r2, ror r0
 8015cec:	2065756c 	rsbcs	r7, r5, ip, ror #10
 8015cf0:	7874203d 	ldmdavc	r4!, {r0, r2, r3, r4, r5, sp}^
 8015cf4:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
 8015cf8:	6b5b5d6c 	blvs	96ed2b0 <__exidx_end+0x16d59bc>
 8015cfc:	3b5d7965 	blcc	9774298 <__exidx_end+0x175c9a4>
 8015d00:	2009090a 	andcs	r0, r9, sl, lsl #18
 8015d04:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8015d08:	3c223d2b 	stccc	13, cr3, [r2], #-172	; 0xffffff54
 8015d0c:	3c3e7274 	lfmcc	f7, 4, [lr], #-464	; 0xfffffe30
 8015d10:	223e6474 	eorscs	r6, lr, #116, 8	; 0x74000000
 8015d14:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 8015d18:	2f3c222b 	svccs	0x003c222b
 8015d1c:	3c3e6474 	cfldrscc	mvf6, [lr], #-464	; 0xfffffe30
 8015d20:	223e6474 	eorscs	r6, lr, #116, 8	; 0x74000000
 8015d24:	6c61762b 	stclvs	6, cr7, [r1], #-172	; 0xffffff54
 8015d28:	222b6575 	eorcs	r6, fp, #490733568	; 0x1d400000
 8015d2c:	64742f3c 	ldrbtvs	r2, [r4], #-3900	; 0xfffff0c4
 8015d30:	742f3c3e 	strtvc	r3, [pc], #-3134	; 8015d38 <index_js+0x4bc>
 8015d34:	3b223e72 	blcc	88a5704 <__exidx_end+0x88de10>
 8015d38:	297d090a 	ldmdbcs	sp!, {r1, r3, r8, fp}^
 8015d3c:	64090a3b 	strvs	r0, [r9], #-2619	; 0xfffff5c5
 8015d40:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
 8015d44:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 8015d48:	45746567 	ldrbmi	r6, [r4, #-1383]!	; 0xfffffa99
 8015d4c:	656d656c 	strbvs	r6, [sp, #-1388]!	; 0xfffffa94
 8015d50:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
 8015d54:	22286449 	eorcs	r6, r8, #1224736768	; 0x49000000
 8015d58:	78546469 	ldmdavc	r4, {r0, r3, r5, r6, sl, sp, lr}^
 8015d5c:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 8015d60:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
 8015d64:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
 8015d68:	74683d4c 	strbtvc	r3, [r8], #-3404	; 0xfffff2b4
 8015d6c:	0a3b6c6d 	beq	8ef0f28 <__exidx_end+0xed9634>
 8015d70:	720a0a7d 	andvc	r0, sl, #512000	; 0x7d000
 8015d74:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 8015d78:	73694c72 	cmnvc	r9, #29184	; 0x7200
 8015d7c:	3b292874 	blcc	8a5ff54 <__exidx_end+0xa48660>
 8015d80:	6e65720a 	cdpvs	2, 6, cr7, cr5, cr10, {0}
 8015d84:	44726564 	ldrbtmi	r6, [r2], #-1380	; 0xfffffa9c
 8015d88:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
 8015d8c:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8015d90:	0a3b2928 	beq	8ee0238 <__exidx_end+0xec8944>
 8015d94:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 8015d98:	65567265 	ldrbvs	r7, [r6, #-613]	; 0xfffffd9b
 8015d9c:	6f697372 	svcvs	0x00697372
 8015da0:	3b29286e 	blcc	8a5ff60 <__exidx_end+0xa4866c>
 8015da4:	7869500a 	stmdavc	r9!, {r1, r3, ip, lr}^
 8015da8:	75506c65 	ldrbvc	r6, [r0, #-3173]	; 0xfffff39b
 8015dac:	72656873 	rsbvc	r6, r5, #7536640	; 0x730000
 8015db0:	4320003a 			; <UNDEFINED> instruction: 0x4320003a
 8015db4:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
 8015db8:	20202020 	eorcs	r2, r0, r0, lsr #32
 8015dbc:	20202020 	eorcs	r2, r0, r0, lsr #32
 8015dc0:	20202020 	eorcs	r2, r0, r0, lsr #32
 8015dc4:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8015dc8:	20000a75 	andcs	r0, r0, r5, ror sl
 8015dcc:	6e616843 	cdpvs	8, 6, cr6, cr1, cr3, {2}
 8015dd0:	736c656e 	cmnvc	ip, #461373440	; 0x1b800000
 8015dd4:	72657020 	rsbvc	r7, r5, #32
 8015dd8:	78697020 	stmdavc	r9!, {r5, ip, sp, lr}^
 8015ddc:	203a6c65 	eorscs	r6, sl, r5, ror #24
 8015de0:	000a7525 	andeq	r7, sl, r5, lsr #10
 8015de4:	74634120 	strbtvc	r4, [r3], #-288	; 0xfffffee0
 8015de8:	20657669 	rsbcs	r7, r5, r9, ror #12
 8015dec:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8015df0:	20202073 	eorcs	r2, r0, r3, ror r0
 8015df4:	3a202020 	bcc	881de7c <__exidx_end+0x806588>
 8015df8:	0a752520 	beq	9d5f280 <__exidx_end+0x1d4798c>
	...

08015dfd <COMMAND_MAGIC>:
 8015dfd:	a62d0940 	strtge	r0, [sp], -r0, asr #18
 8015e01:	e5dda515 	ldrb	sl, [sp, #1301]	; 0x515
 8015e05:	5a4d9d6a 	bpl	937d3b5 <__exidx_end+0x1365ac1>
 8015e09:	50af09cf 	adcpl	r0, pc, pc, asr #19
 8015e0d:	 	cdp2	0, 0, cr0, cr0, cr0, {0}

08015e10 <pp::configuration::UNIVERSE_MAX_LENGTH>:
 8015e10:	000001fe 	strdeq	r0, [r0], -lr
 8015e14:	2e393332 	mrccs	3, 1, r3, cr9, cr2, {1}
 8015e18:	2e353532 	mrccs	5, 1, r3, cr5, cr2, {1}
 8015e1c:	2e303532 	mrccs	5, 1, r3, cr0, cr2, {1}
 8015e20:	00333331 	eorseq	r3, r3, r1, lsr r3
 8015e24:	2e393332 	mrccs	3, 1, r3, cr9, cr2, {1}
 8015e28:	2e353532 	mrccs	5, 1, r3, cr5, cr2, {1}
 8015e2c:	2e303532 	mrccs	5, 1, r3, cr0, cr2, {1}
 8015e30:	00343331 	eorseq	r3, r4, r1, lsr r3
 8015e34:	50524c4c 	subspl	r4, r2, ip, asr #24
 8015e38:	76654420 	strbtvc	r4, [r5], -r0, lsr #8
 8015e3c:	20656369 	rsbcs	r6, r5, r9, ror #6
 8015e40:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 8015e44:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 8015e48:	6f697461 	svcvs	0x00697461
 8015e4c:	20000a6e 	andcs	r0, r0, lr, ror #20
 8015e50:	74726f50 	ldrbtvc	r6, [r2], #-3920	; 0xfffff0b0
 8015e54:	50445520 	subpl	r5, r4, r0, lsr #10
 8015e58:	20202020 	eorcs	r2, r0, r0, lsr #32
 8015e5c:	20202020 	eorcs	r2, r0, r0, lsr #32
 8015e60:	20202020 	eorcs	r2, r0, r0, lsr #32
 8015e64:	3a202020 	bcc	881deec <__exidx_end+0x8065f8>
 8015e68:	0a642520 	beq	991f2f0 <__exidx_end+0x19079fc>
 8015e6c:	754d2000 	strbvc	r2, [sp, #-0]
 8015e70:	6369746c 	cmnvs	r9, #108, 8	; 0x6c000000
 8015e74:	20747361 	rsbscs	r7, r4, r1, ror #6
 8015e78:	6e696f6a 	cdpvs	15, 6, cr6, cr9, cr10, {3}
 8015e7c:	71655220 	cmnvc	r5, r0, lsr #4
 8015e80:	74736575 	ldrbtvc	r6, [r3], #-1397	; 0xfffffa8b
 8015e84:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8015e88:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8015e8c:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8015e90:	000a6425 	andeq	r6, sl, r5, lsr #8
 8015e94:	6c754d20 	ldclvs	13, cr4, [r5], #-128	; 0xffffff80
 8015e98:	61636974 	smcvs	13972	; 0x3694
 8015e9c:	52207473 	eorpl	r7, r0, #1929379840	; 0x73000000
 8015ea0:	6f707365 	svcvs	0x00707365
 8015ea4:	2065736e 	rsbcs	r7, r5, lr, ror #6
 8015ea8:	20202020 	eorcs	r2, r0, r0, lsr #32
 8015eac:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8015eb0:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8015eb4:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8015eb8:	00000a64 	andeq	r0, r0, r4, ror #20

08015ebc <vtable for LLRPDevice>:
	...
 8015ec4:	0800af9d 	stmdaeq	r0, {r0, r2, r3, r4, r7, r8, r9, sl, fp, sp, pc}
 8015ec8:	0800afa7 	stmdaeq	r0, {r0, r1, r2, r5, r7, r8, r9, sl, fp, sp, pc}
 8015ecc:	0800af9f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r7, r8, r9, sl, fp, sp, pc}
 8015ed0:	0800afa1 	stmdaeq	r0, {r0, r5, r7, r8, r9, sl, fp, sp, pc}
 8015ed4:	0800afa3 	stmdaeq	r0, {r0, r1, r5, r7, r8, r9, sl, fp, sp, pc}

08015ed8 <RDMNetConst::MSG_CONFIG>:
 8015ed8:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 8015edc:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 8015ee0:	20676e69 	rsbcs	r6, r7, r9, ror #28
 8015ee4:	4e4d4452 	mcrmi	4, 2, r4, cr13, cr2, {2}
 8015ee8:	 	andpl	r7, r0, #1694498816	; 0x65000000

08015eeb <RDMNetConst::MSG_STARTED>:
 8015eeb:	4e4d4452 	mcrmi	4, 2, r4, cr13, cr2, {2}
 8015eef:	73207465 			; <UNDEFINED> instruction: 0x73207465
 8015ef3:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
 8015ef7:	 	movwpl	r6, #1125	; 0x465

08015efa <RDMNetConst::MSG_START>:
 8015efa:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
 8015efe:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 8015f02:	4d445220 	sfmmi	f5, 2, [r4, #-128]	; 0xffffff80
 8015f06:	0074654e 	rsbseq	r6, r4, lr, asr #10
 8015f0a:	4e4d4452 	mcrmi	4, 2, r4, cr13, cr2, {2}
 8015f0e:	000a7465 	andeq	r7, sl, r5, ror #8
 8015f12:	44494320 	strbmi	r4, [r9], #-800	; 0xfffffce0
 8015f16:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8015f1a:	52000a73 	andpl	r0, r0, #471040	; 0x73000
 8015f1e:	52204d44 	eorpl	r4, r0, #68, 26	; 0x1100
 8015f22:	6f707365 	svcvs	0x00707365
 8015f26:	7265646e 	rsbvc	r6, r5, #1845493760	; 0x6e000000
 8015f2a:	6e6f6320 	cdpvs	3, 6, cr6, cr15, cr0, {1}
 8015f2e:	75676966 	strbvc	r6, [r7, #-2406]!	; 0xfffff69a
 8015f32:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
 8015f36:	000a6e6f 	andeq	r6, sl, pc, ror #28
 8015f3a:	6f725020 	svcvs	0x00725020
 8015f3e:	6f636f74 	svcvs	0x00636f74
 8015f42:	6556206c 	ldrbvs	r2, [r6, #-108]	; 0xffffff94
 8015f46:	6f697372 	svcvs	0x00697372
 8015f4a:	6425206e 	strtvs	r2, [r5], #-110	; 0xffffff92
 8015f4e:	0a64252e 	beq	991f40e <__exidx_end+0x1907b1a>
 8015f52:	4d442000 	stclmi	0, cr2, [r4, #-0]
 8015f56:	64412058 	strbvs	r2, [r1], #-88	; 0xffffffa8
 8015f5a:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
 8015f5e:	20202073 	eorcs	r2, r0, r3, ror r0
 8015f62:	3a202020 	bcc	881dfea <__exidx_end+0x8066f6>
 8015f66:	0a642520 	beq	991f3ee <__exidx_end+0x1907afa>
 8015f6a:	4d442000 	stclmi	0, cr2, [r4, #-0]
 8015f6e:	6f462058 	svcvs	0x00462058
 8015f72:	7270746f 	rsbsvc	r7, r0, #1862270976	; 0x6f000000
 8015f76:	20746e69 	rsbscs	r6, r4, r9, ror #28
 8015f7a:	3a202020 	bcc	881e002 <__exidx_end+0x80670e>
 8015f7e:	0a642520 	beq	991f406 <__exidx_end+0x1907b12>
 8015f82:	65502000 	ldrbvs	r2, [r0, #-0]
 8015f86:	6e6f7372 	mcrvs	3, 3, r7, cr15, cr2, {3}
 8015f8a:	74696c61 	strbtvc	r6, [r9], #-3169	; 0xfffff39f
 8015f8e:	64252079 	strtvs	r2, [r5], #-121	; 0xffffff87
 8015f92:	20666f20 	rsbcs	r6, r6, r0, lsr #30
 8015f96:	5b206425 	blpl	882f032 <__exidx_end+0x81773e>
 8015f9a:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
 8015f9e:	20000a5d 	andcs	r0, r0, sp, asr sl
 8015fa2:	20627553 	rsbcs	r7, r2, r3, asr r5
 8015fa6:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
 8015faa:	20736563 	rsbscs	r6, r3, r3, ror #10
 8015fae:	20202020 	eorcs	r2, r0, r0, lsr #32
 8015fb2:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8015fb6:	20000a64 	andcs	r0, r0, r4, ror #20
 8015fba:	736e6553 	cmnvc	lr, #348127232	; 0x14c00000
 8015fbe:	2073726f 	rsbscs	r7, r3, pc, ror #4
 8015fc2:	20202020 	eorcs	r2, r0, r0, lsr #32
 8015fc6:	20202020 	eorcs	r2, r0, r0, lsr #32
 8015fca:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8015fce:	00000a64 	andeq	r0, r0, r4, ror #20
	...

08015fd4 <vtable for RDMDeviceResponder>:
	...
 8015fdc:	0800b491 	stmdaeq	r0, {r0, r4, r7, sl, ip, sp, pc}
 8015fe0:	0800b4b1 	stmdaeq	r0, {r0, r4, r5, r7, sl, ip, sp, pc}
 8015fe4:	0800b48b 	stmdaeq	r0, {r0, r1, r3, r7, sl, ip, sp, pc}
 8015fe8:	0800b48d 	stmdaeq	r0, {r0, r2, r3, r7, sl, ip, sp, pc}

08015fec <UID_ALL>:
 8015fec:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 8015ff0:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>

08015ff4 <RDMHandler::PID_DEFINITIONS>:
 8015ff4:	00000060 	andeq	r0, r0, r0, rrx
 8015ff8:	0800b981 	stmdaeq	r0, {r0, r7, r8, fp, ip, sp, pc}
	...
 8016008:	01010000 	mrseq	r0, (UNDEF: 1)
 801600c:	00000080 	andeq	r0, r0, r0, lsl #1
 8016010:	0800ba69 	stmdaeq	r0, {r0, r3, r5, r6, r9, fp, ip, sp, pc}
	...
 8016020:	01010100 	mrseq	r0, (UNDEF: 17)
 8016024:	00000081 	andeq	r0, r0, r1, lsl #1
 8016028:	0800ba85 	stmdaeq	r0, {r0, r2, r7, r9, fp, ip, sp, pc}
	...
 8016038:	01010100 	mrseq	r0, (UNDEF: 17)
 801603c:	00000082 	andeq	r0, r0, r2, lsl #1
 8016040:	0800baa5 	stmdaeq	r0, {r0, r2, r5, r7, r9, fp, ip, sp, pc}
 8016044:	00000000 	andeq	r0, r0, r0
 8016048:	0800bbf5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r8, r9, fp, ip, sp, pc}
 801604c:	00000000 	andeq	r0, r0, r0
 8016050:	01010100 	mrseq	r0, (UNDEF: 17)
 8016054:	00000090 	muleq	r0, r0, r0
 8016058:	0800b9e9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r8, fp, ip, sp, pc}
 801605c:	00000000 	andeq	r0, r0, r0
 8016060:	0800bbc1 	stmdaeq	r0, {r0, r6, r7, r8, r9, fp, ip, sp, pc}
 8016064:	00000000 	andeq	r0, r0, r0
 8016068:	01010100 	mrseq	r0, (UNDEF: 17)
 801606c:	00001000 	andeq	r1, r0, r0
 8016070:	0800bae1 	stmdaeq	r0, {r0, r5, r6, r7, r9, fp, ip, sp, pc}
 8016074:	00000000 	andeq	r0, r0, r0
 8016078:	0800bb45 	stmdaeq	r0, {r0, r2, r6, r8, r9, fp, ip, sp, pc}
 801607c:	00000000 	andeq	r0, r0, r0
 8016080:	01010000 	mrseq	r0, (UNDEF: 1)
 8016084:	00001001 	andeq	r1, r0, r1
	...
 8016090:	0800bafd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r9, fp, ip, sp, pc}
 8016094:	00000000 	andeq	r0, r0, r0
 8016098:	01010100 	mrseq	r0, (UNDEF: 17)
 801609c:	00000700 	andeq	r0, r0, r0, lsl #14
 80160a0:	0800beed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, r9, sl, fp, ip, sp, pc}
	...
 80160b0:	01000000 	mrseq	r0, (UNDEF: 0)
 80160b4:	00000701 	andeq	r0, r0, r1, lsl #14
 80160b8:	0800bf15 	stmdaeq	r0, {r0, r2, r4, r8, r9, sl, fp, ip, sp, pc}
	...
 80160c8:	01000004 	tsteq	r0, r4
 80160cc:	00000702 	andeq	r0, r0, r2, lsl #14
 80160d0:	0800bf61 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, fp, ip, sp, pc}
	...
 80160e0:	01000004 	tsteq	r0, r4
 80160e4:	00000703 	andeq	r0, r0, r3, lsl #14
 80160e8:	0800bf91 	stmdaeq	r0, {r0, r4, r7, r8, r9, sl, fp, ip, sp, pc}
 80160ec:	00000000 	andeq	r0, r0, r0
 80160f0:	0800bfbd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, r8, r9, sl, fp, ip, sp, pc}
 80160f4:	00000000 	andeq	r0, r0, r0
 80160f8:	01000004 	tsteq	r0, r4
 80160fc:	00000704 	andeq	r0, r0, r4, lsl #14
 8016100:	0800c029 	stmdaeq	r0, {r0, r3, r5, lr, pc}
 8016104:	00000000 	andeq	r0, r0, r0
 8016108:	0800c059 	stmdaeq	r0, {r0, r3, r4, r6, lr, pc}
 801610c:	00000000 	andeq	r0, r0, r0
 8016110:	01000004 	tsteq	r0, r4
 8016114:	00000705 	andeq	r0, r0, r5, lsl #14
 8016118:	0800c0cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, lr, pc}
	...
 8016128:	01000004 	tsteq	r0, r4
 801612c:	00000707 	andeq	r0, r0, r7, lsl #14
	...
 8016138:	0800c0a1 	stmdaeq	r0, {r0, r5, r7, lr, pc}
 801613c:	00000000 	andeq	r0, r0, r0
 8016140:	01000004 	tsteq	r0, r4
 8016144:	00000706 	andeq	r0, r0, r6, lsl #14
 8016148:	0800c115 	stmdaeq	r0, {r0, r2, r4, r8, lr, pc}
 801614c:	00000000 	andeq	r0, r0, r0
 8016150:	0800c159 	stmdaeq	r0, {r0, r3, r4, r6, r8, lr, pc}
 8016154:	00000000 	andeq	r0, r0, r0
 8016158:	01000004 	tsteq	r0, r4
 801615c:	00000709 	andeq	r0, r0, r9, lsl #14
	...
 8016168:	0800c1a5 	stmdaeq	r0, {r0, r2, r5, r7, r8, lr, pc}
 801616c:	00000000 	andeq	r0, r0, r0
 8016170:	01000004 	tsteq	r0, r4
 8016174:	0000070b 	andeq	r0, r0, fp, lsl #14
 8016178:	0800c005 	stmdaeq	r0, {r0, r2, lr, pc}
	...
 8016188:	01000001 	tsteq	r0, r1
 801618c:	0000070a 	andeq	r0, r0, sl, lsl #14
 8016190:	0800c1cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, r8, lr, pc}
 8016194:	00000000 	andeq	r0, r0, r0
 8016198:	0800c205 	stmdaeq	r0, {r0, r2, r9, lr, pc}
 801619c:	00000000 	andeq	r0, r0, r0
 80161a0:	01000004 	tsteq	r0, r4
 80161a4:	0000070c 	andeq	r0, r0, ip, lsl #14
 80161a8:	0800c20d 	stmdaeq	r0, {r0, r2, r3, r9, lr, pc}
 80161ac:	00000000 	andeq	r0, r0, r0
 80161b0:	0800c23d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r9, lr, pc}
 80161b4:	00000000 	andeq	r0, r0, r0
 80161b8:	01000000 	mrseq	r0, (UNDEF: 0)
 80161bc:	0000070d 	andeq	r0, r0, sp, lsl #14
 80161c0:	0800c271 	stmdaeq	r0, {r0, r4, r5, r6, r9, lr, pc}
 80161c4:	00000000 	andeq	r0, r0, r0
 80161c8:	0800c2a1 	stmdaeq	r0, {r0, r5, r7, r9, lr, pc}
 80161cc:	00000000 	andeq	r0, r0, r0
 80161d0:	01000000 	mrseq	r0, (UNDEF: 0)
 80161d4:	70747468 	rsbsvc	r7, r4, r8, ror #8
 80161d8:	2f2f3a73 	svccs	0x002f3a73
 80161dc:	32336467 	eorscc	r6, r3, #1728053248	; 0x67000000
 80161e0:	786d642d 	stmdavc	sp!, {r0, r2, r3, r5, sl, sp, lr}^
 80161e4:	67726f2e 	ldrbvs	r6, [r2, -lr, lsr #30]!
 80161e8:	4d445200 	sfmmi	f5, 2, [r4, #-0]
 80161ec:	76654420 	strbtvc	r4, [r5], -r0, lsr #8
 80161f0:	20656369 	rsbcs	r6, r5, r9, ror #6
 80161f4:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 80161f8:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 80161fc:	6f697461 	svcvs	0x00697461
 8016200:	20000a6e 	andcs	r0, r0, lr, ror #20
 8016204:	756e614d 	strbvc	r6, [lr, #-333]!	; 0xfffffeb3
 8016208:	74636166 	strbtvc	r6, [r3], #-358	; 0xfffffe9a
 801620c:	72657275 	rsbvc	r7, r5, #1342177287	; 0x50000007
 8016210:	6d614e20 	stclvs	14, cr4, [r1, #-128]!	; 0xffffff80
 8016214:	203a2065 	eorscs	r2, sl, r5, rrx
 8016218:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
 801621c:	4d20000a 	stcmi	0, cr0, [r0, #-40]!	; 0xffffffd8
 8016220:	66756e61 	ldrbtvs	r6, [r5], -r1, ror #28
 8016224:	75746361 	ldrbvc	r6, [r4, #-865]!	; 0xfffffc9f
 8016228:	20726572 	rsbscs	r6, r2, r2, ror r5
 801622c:	20204449 	eorcs	r4, r0, r9, asr #8
 8016230:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8016234:	2558322e 	ldrbcs	r3, [r8, #-558]	; 0xfffffdd2
 8016238:	0a58322e 	beq	9622af8 <__exidx_end+0x160b204>
 801623c:	65532000 	ldrbvs	r2, [r3, #-0]
 8016240:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
 8016244:	6d754e20 	ldclvs	14, cr4, [r5, #-128]!	; 0xffffff80
 8016248:	20726562 	rsbscs	r6, r2, r2, ror #10
 801624c:	20202020 	eorcs	r2, r0, r0, lsr #32
 8016250:	2e25203a 	mcrcs	0, 1, r2, cr5, cr10, {1}
 8016254:	2e255832 	mcrcs	8, 1, r5, cr5, cr2, {1}
 8016258:	2e255832 	mcrcs	8, 1, r5, cr5, cr2, {1}
 801625c:	2e255832 	mcrcs	8, 1, r5, cr5, cr2, {1}
 8016260:	000a5832 	andeq	r5, sl, r2, lsr r8
 8016264:	6f6f5220 	svcvs	0x006f5220
 8016268:	616c2074 	smcvs	49668	; 0xc204
 801626c:	206c6562 	rsbcs	r6, ip, r2, ror #10
 8016270:	20202020 	eorcs	r2, r0, r0, lsr #32
 8016274:	3a202020 	bcc	881e2fc <__exidx_end+0x806a08>
 8016278:	2a2e2520 	bcs	8b9f700 <__exidx_end+0xb87e0c>
 801627c:	20000a73 	andcs	r0, r0, r3, ror sl
 8016280:	646f7250 	strbtvs	r7, [pc], #-592	; 8016288 <RDMHandler::PID_DEFINITIONS+0x294>
 8016284:	20746375 	rsbscs	r6, r4, r5, ror r3
 8016288:	65746143 	ldrbvs	r6, [r4, #-323]!	; 0xfffffebd
 801628c:	79726f67 	ldmdbvc	r2!, {r0, r1, r2, r5, r6, r8, r9, sl, fp, sp, lr}^
 8016290:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8016294:	58322e25 	ldmdapl	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8016298:	58322e25 	ldmdapl	r2!, {r0, r2, r5, r9, sl, fp, sp}
 801629c:	5020000a 	eorpl	r0, r0, sl
 80162a0:	75646f72 	strbvc	r6, [r4, #-3954]!	; 0xfffff08e
 80162a4:	44207463 	strtmi	r7, [r0], #-1123	; 0xfffffb9d
 80162a8:	69617465 	stmdbvs	r1!, {r0, r2, r5, r6, sl, ip, sp, lr}^
 80162ac:	2020206c 	eorcs	r2, r0, ip, rrx
 80162b0:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 80162b4:	2558322e 	ldrbcs	r3, [r8, #-558]	; 0xfffffdd2
 80162b8:	0a58322e 	beq	9622b78 <__exidx_end+0x160b284>
	...

080162bd <DEVICE_LABEL>:
 80162bd:	32334447 	eorscc	r4, r3, #1191182336	; 0x47000000
 80162c1:	37303246 	ldrcc	r3, [r0, -r6, asr #4]!
 80162c5:	52204752 	eorpl	r4, r0, #21495808	; 0x1480000
 80162c9:	44204d44 	strtmi	r4, [r0], #-3396	; 0xfffff2bc
 80162cd:	63697665 	cmnvs	r9, #105906176	; 0x6500000
 80162d1:	 	subseq	r0, r0, r5, rrx

080162d3 <RDMConst::MANUFACTURER_ID>:
 80162d3:	 	strbtvc	r0, [r8], #-80	; 0xffffffb0

080162d5 <RDMConst::MANUFACTURER_NAME>:
 80162d5:	70747468 	rsbsvc	r7, r4, r8, ror #8
 80162d9:	772f2f3a 			; <UNDEFINED> instruction: 0x772f2f3a
 80162dd:	6f2e7777 	svcvs	0x002e7777
 80162e1:	676e6172 			; <UNDEFINED> instruction: 0x676e6172
 80162e5:	2d697065 	stclcs	0, cr7, [r9, #-404]!	; 0xfffffe6c
 80162e9:	2e786d64 	cdpcs	13, 7, cr6, cr8, cr4, {3}
 80162ed:	0067726f 	rsbeq	r7, r7, pc, ror #4
 80162f1:	78383025 	ldmdavc	r8!, {r0, r2, r5, ip, sp}
 80162f5:	3430252d 	ldrtcc	r2, [r0], #-1325	; 0xfffffad3
 80162f9:	30252d78 	eorcc	r2, r5, r8, ror sp
 80162fd:	252d7834 	strcs	r7, [sp, #-2100]!	; 0xfffff7cc
 8016301:	25783230 	ldrbcs	r3, [r8, #-560]!	; 0xfffffdd0
 8016305:	2d783230 	lfmcs	f3, 2, [r8, #-192]!	; 0xffffff40
 8016309:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 801630d:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 8016311:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 8016315:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 8016319:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 801631d:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 8016321:	78695000 	stmdavc	r9!, {ip, lr}^
 8016325:	44206c65 	strtmi	r6, [r0], #-3173	; 0xfffff39b
 8016329:	6320584d 			; <UNDEFINED> instruction: 0x6320584d
 801632d:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 8016331:	61727567 	cmnvs	r2, r7, ror #10
 8016335:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8016339:	4f20000a 	svcmi	0x0020000a
 801633d:	75707475 	ldrbvc	r7, [r0, #-1141]!	; 0xfffffb8b
 8016341:	3a207374 	bcc	8833119 <__exidx_end+0x81b825>
 8016345:	0a642520 	beq	991f7cd <__exidx_end+0x1907ed9>
 8016349:	72472000 	subvc	r2, r7, #0
 801634d:	6970756f 	ldmdbvs	r0!, {r0, r1, r2, r3, r5, r6, r8, sl, ip, sp, lr}^
 8016351:	6320676e 			; <UNDEFINED> instruction: 0x6320676e
 8016355:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
 8016359:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 801635d:	475b2064 	ldrbmi	r2, [fp, -r4, rrx]
 8016361:	70756f72 	rsbsvc	r6, r5, r2, ror pc
 8016365:	203a2073 	eorscs	r2, sl, r3, ror r0
 8016369:	0a5d6425 	beq	976f405 <__exidx_end+0x1757b11>
 801636d:	 	andeq	r0, r0, r0

08016370 <vtable for WS28xxDmxMulti>:
	...
 8016378:	0800c585 	stmdaeq	r0, {r0, r2, r7, r8, sl, lr, pc}
 801637c:	0800c5a5 	stmdaeq	r0, {r0, r2, r5, r7, r8, sl, lr, pc}
 8016380:	0800c563 	stmdaeq	r0, {r0, r1, r5, r6, r8, sl, lr, pc}
 8016384:	0800c715 	stmdaeq	r0, {r0, r2, r4, r8, r9, sl, lr, pc}
 8016388:	0800c5df 	stmdaeq	r0, {r0, r1, r2, r3, r4, r6, r7, r8, sl, lr, pc}
 801638c:	0800c5b7 	stmdaeq	r0, {r0, r1, r2, r4, r5, r7, r8, sl, lr, pc}
 8016390:	0800c6f7 	stmdaeq	r0, {r0, r1, r2, r4, r5, r6, r7, r9, sl, lr, pc}
 8016394:	0800c70f 	stmdaeq	r0, {r0, r1, r2, r3, r8, r9, sl, lr, pc}
 8016398:	0800c555 	stmdaeq	r0, {r0, r2, r4, r6, r8, sl, lr, pc}
 801639c:	0800c559 	stmdaeq	r0, {r0, r3, r4, r6, r8, sl, lr, pc}
 80163a0:	0800c55f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r6, r8, sl, lr, pc}
 80163a4:	08011cdb 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, sl, fp, ip}
 80163a8:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 80163ac:	2a2e253a 	bcs	8b9f89c <__exidx_end+0xb87fa8>
 80163b0:	23002c66 	movwcs	r2, #3174	; 0xc66
 80163b4:	253d7325 	ldrcs	r7, [sp, #-805]!	; 0xfffffcdb
 80163b8:	0a662a2e 	beq	99a0c78 <__exidx_end+0x1989384>
 80163bc:	65643c00 	strbvs	r3, [r4, #-3072]!	; 0xfffff400
 80163c0:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
 80163c4:	4f003e74 	svcmi	0x00003e74
 80163c8:	77726576 			; <UNDEFINED> instruction: 0x77726576
 80163cc:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
 80163d0:	74616420 	strbtvc	r6, [r1], #-1056	; 0xfffffbe0
 80163d4:	65687361 	strbvs	r7, [r8, #-865]!	; 0xfffffc9f
 80163d8:	4f007465 	svcmi	0x00007465
 80163dc:	77726576 			; <UNDEFINED> instruction: 0x77726576
 80163e0:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
 80163e4:	6d697420 	cfstrdvs	mvd7, [r9, #-128]!	; 0xffffff80
 80163e8:	20676e69 	rsbcs	r6, r7, r9, ror #28
 80163ec:	29737528 	ldmdbcs	r3!, {r3, r5, r8, sl, ip, sp, lr}^
 80163f0:	6f724700 	svcvs	0x00724700
 80163f4:	6e697075 	mcrvs	0, 3, r7, cr9, cr5, {3}
 80163f8:	6c430067 	mcrrvs	0, 6, r0, r3, cr7
 80163fc:	206b636f 	rsbcs	r6, fp, pc, ror #6
 8016400:	65736162 	ldrbvs	r6, [r3, #-354]!	; 0xfffffe9e
 8016404:	68632064 	stmdavs	r3!, {r2, r5, r6, sp}^
 8016408:	00737069 	rsbseq	r7, r3, r9, rrx
 801640c:	31415041 	cmpcc	r1, r1, asr #32
 8016410:	532f3230 			; <UNDEFINED> instruction: 0x532f3230
 8016414:	3238394b 	eorscc	r3, r8, #1228800	; 0x12c000
 8016418:	65540032 	ldrbvs	r0, [r4, #-50]	; 0xffffffce
 801641c:	70207473 	eorvc	r7, r0, r3, ror r4
 8016420:	65747461 	ldrbvs	r7, [r4, #-1121]!	; 0xfffffb9f
 8016424:	59006e72 	stmdbpl	r0, {r1, r4, r5, r6, r9, sl, fp, sp, lr}
 8016428:	4e007365 	cdpmi	3, 0, cr7, cr0, cr5, {3}
 801642c:	6950006f 	ldmdbvs	r0, {r0, r1, r2, r3, r5, r6}^
 8016430:	206c6578 	rsbcs	r6, ip, r8, ror r5
 8016434:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 8016438:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 801643c:	6f697461 	svcvs	0x00697461
 8016440:	20000a6e 	andcs	r0, r0, lr, ror #20
 8016444:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
 8016448:	20202020 	eorcs	r2, r0, r0, lsr #32
 801644c:	7325203a 			; <UNDEFINED> instruction: 0x7325203a
 8016450:	64255b20 	strtvs	r5, [r5], #-2848	; 0xfffff4e0
 8016454:	20000a5d 	andcs	r0, r0, sp, asr sl
 8016458:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
 801645c:	20202074 	eorcs	r2, r0, r4, ror r0
 8016460:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8016464:	4d20000a 	stcmi	0, cr0, [r0, #-40]!	; 0xffffffd8
 8016468:	69707061 	ldmdbvs	r0!, {r0, r5, r6, ip, sp, lr}^
 801646c:	3a20676e 	bcc	883022c <__exidx_end+0x818938>
 8016470:	20732520 	rsbscs	r2, r3, r0, lsr #10
 8016474:	5d64255b 	cfstr64pl	mvdx2, [r4, #-364]!	; 0xfffffe94
 8016478:	5420000a 	strtpl	r0, [r0], #-10
 801647c:	20204830 	eorcs	r4, r0, r0, lsr r8
 8016480:	3a202020 	bcc	881e508 <__exidx_end+0x806c14>
 8016484:	322e2520 	eorcc	r2, lr, #32, 10	; 0x8000000
 8016488:	305b2066 	subscc	r2, fp, r6, rrx
 801648c:	5d582578 	cfldr64pl	mvdx2, [r8, #-480]	; 0xfffffe20
 8016490:	5420000a 	strtpl	r0, [r0], #-10
 8016494:	20204831 	eorcs	r4, r0, r1, lsr r8
 8016498:	3a202020 	bcc	881e520 <__exidx_end+0x806c2c>
 801649c:	322e2520 	eorcc	r2, lr, #32, 10	; 0x8000000
 80164a0:	305b2066 	subscc	r2, fp, r6, rrx
 80164a4:	5d582578 	cfldr64pl	mvdx2, [r8, #-480]	; 0xfffffe20
 80164a8:	4720000a 	strmi	r0, [r0, -sl]!
 80164ac:	61626f6c 	cmnvs	r2, ip, ror #30
 80164b0:	6972426c 	ldmdbvs	r2!, {r2, r3, r5, r6, r9, lr}^
 80164b4:	6e746867 	cdpvs	8, 7, cr6, cr4, cr7, {3}
 80164b8:	3a737365 	bcc	9cf3254 <__exidx_end+0x1cdb960>
 80164bc:	0a752520 	beq	9d5f944 <__exidx_end+0x1d48050>
 80164c0:	61472000 	mrsvs	r2, (UNDEF: 71)
 80164c4:	20616d6d 	rsbcs	r6, r1, sp, ror #26
 80164c8:	72726f63 	rsbsvc	r6, r2, #396	; 0x18c
 80164cc:	69746365 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sp, lr}^
 80164d0:	25206e6f 	strcs	r6, [r0, #-3695]!	; 0xfffff191
 80164d4:	20000a73 	andcs	r0, r0, r3, ror sl
 80164d8:	636f6c43 	cmnvs	pc, #17152	; 0x4300
 80164dc:	25203a6b 	strcs	r3, [r0, #-2667]!	; 0xfffff595
 80164e0:	7a482075 	bvc	921e6bc <__exidx_end+0x1206dc8>
 80164e4:	0000000a 	andeq	r0, r0, sl

080164e8 <CSWTCH.9>:
 80164e8:	080166fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r9, sl, sp, lr}
 80164ec:	080167fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r8, r9, sl, sp, lr}
 80164f0:	080168fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, fp, sp, lr}
 80164f4:	080169fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r8, fp, sp, lr}
 80164f8:	08016afc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r9, fp, sp, lr}

080164fc <gamma10_0>:
 80164fc:	03020100 	movweq	r0, #8448	; 0x2100
 8016500:	07060504 	streq	r0, [r6, -r4, lsl #10]
 8016504:	0b0a0908 	bleq	829892c <__exidx_end+0x281038>
 8016508:	0f0e0d0c 	svceq	0x000e0d0c
 801650c:	13121110 	tstne	r2, #16, 2
 8016510:	17161514 			; <UNDEFINED> instruction: 0x17161514
 8016514:	1b1a1918 	blne	869c97c <__exidx_end+0x685088>
 8016518:	1f1e1d1c 	svcne	0x001e1d1c
 801651c:	23222120 			; <UNDEFINED> instruction: 0x23222120
 8016520:	27262524 	strcs	r2, [r6, -r4, lsr #10]!
 8016524:	2b2a2928 	blcs	8aa09cc <__exidx_end+0xa890d8>
 8016528:	2f2e2d2c 	svccs	0x002e2d2c
 801652c:	33323130 	teqcc	r2, #48, 2
 8016530:	37363534 			; <UNDEFINED> instruction: 0x37363534
 8016534:	3b3a3938 	blcc	8ea4a1c <__exidx_end+0xe8d128>
 8016538:	3f3e3d3c 	svccc	0x003e3d3c
 801653c:	43424140 	movtmi	r4, #8512	; 0x2140
 8016540:	47464544 	strbmi	r4, [r6, -r4, asr #10]
 8016544:	4b4a4948 	blmi	92a8a6c <__exidx_end+0x1291178>
 8016548:	4f4e4d4c 	svcmi	0x004e4d4c
 801654c:	53525150 	cmppl	r2, #80, 2
 8016550:	57565554 			; <UNDEFINED> instruction: 0x57565554
 8016554:	5b5a5958 	blpl	96acabc <__exidx_end+0x16951c8>
 8016558:	5f5e5d5c 	svcpl	0x005e5d5c
 801655c:	63626160 	cmnvs	r2, #96, 2
 8016560:	67666564 	strbvs	r6, [r6, -r4, ror #10]!
 8016564:	6b6a6968 	blvs	9ab0b0c <__exidx_end+0x1a99218>
 8016568:	6f6e6d6c 	svcvs	0x006e6d6c
 801656c:	73727170 	cmnvc	r2, #112, 2
 8016570:	77767574 			; <UNDEFINED> instruction: 0x77767574
 8016574:	7b7a7978 	blvc	9eb4b5c <__exidx_end+0x1e9d268>
 8016578:	7f7e7d7c 	svcvc	0x007e7d7c
 801657c:	83828180 	orrhi	r8, r2, #128, 2
 8016580:	87868584 	strhi	r8, [r6, r4, lsl #11]
 8016584:	8b8a8988 	blhi	62b8bac <__stack_size+0x62b63ac>
 8016588:	8f8e8d8c 	svchi	0x008e8d8c
 801658c:	93929190 	orrsls	r9, r2, #144, 2	; 0x24
 8016590:	97969594 			; <UNDEFINED> instruction: 0x97969594
 8016594:	9b9a9998 	blls	66bcbfc <__stack_size+0x66ba3fc>
 8016598:	9f9e9d9c 	svcls	0x009e9d9c
 801659c:	a3a2a1a0 			; <UNDEFINED> instruction: 0xa3a2a1a0
 80165a0:	a7a6a5a4 	strge	sl, [r6, r4, lsr #11]!
 80165a4:	abaaa9a8 	blge	6ac0c4c <__stack_size+0x6abe44c>
 80165a8:	afaeadac 	svcge	0x00aeadac
 80165ac:	b3b2b1b0 			; <UNDEFINED> instruction: 0xb3b2b1b0
 80165b0:	b7b6b5b4 			; <UNDEFINED> instruction: 0xb7b6b5b4
 80165b4:	bbbab9b8 	bllt	6ec4c9c <__stack_size+0x6ec249c>
 80165b8:	bfbebdbc 	svclt	0x00bebdbc
 80165bc:	c3c2c1c0 	bicgt	ip, r2, #192, 2	; 0x30
 80165c0:	c7c6c5c4 	strbgt	ip, [r6, r4, asr #11]
 80165c4:	cbcac9c8 	blgt	72c8cec <__stack_size+0x72c64ec>
 80165c8:	cfcecdcc 	svcgt	0x00cecdcc
 80165cc:	d3d2d1d0 	bicsle	sp, r2, #208, 2	; 0x34
 80165d0:	d7d6d5d4 			; <UNDEFINED> instruction: 0xd7d6d5d4
 80165d4:	dbdad9d8 	blle	76ccd3c <__stack_size+0x76ca53c>
 80165d8:	dfdedddc 	svcle	0x00dedddc
 80165dc:	e3e2e1e0 	mvn	lr, #224, 2	; 0x38
 80165e0:	e7e6e5e4 	strb	lr, [r6, r4, ror #11]!
 80165e4:	ebeae9e8 	bl	7ad0d8c <__stack_size+0x7ace58c>
 80165e8:	efeeedec 	svc	0x00eeedec
 80165ec:	f3f2f1f0 	vsra.u64	<illegal reg q15.5>, q8, #14
 80165f0:	f7f6f5f4 			; <UNDEFINED> instruction: 0xf7f6f5f4
 80165f4:	fbfaf9f8 	blx	7ed4dde <__stack_size+0x7ed25de>
 80165f8:	fffefdfc 			; <UNDEFINED> instruction: 0xfffefdfc

080165fc <gamma20_0>:
	...
 8016608:	01010101 	tsteq	r1, r1, lsl #2
 801660c:	01010101 	tsteq	r1, r1, lsl #2
 8016610:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 8016614:	03030202 	movweq	r0, #12802	; 0x3202
 8016618:	04040303 	streq	r0, [r4], #-771	; 0xfffffcfd
 801661c:	05050404 	streq	r0, [r5, #-1028]	; 0xfffffbfc
 8016620:	06060505 	streq	r0, [r6], -r5, lsl #10
 8016624:	07070706 	streq	r0, [r7, -r6, lsl #14]
 8016628:	09080808 	stmdbeq	r8, {r3, fp}
 801662c:	0a0a0909 	beq	8298a58 <__exidx_end+0x281164>
 8016630:	0c0b0b0b 			; <UNDEFINED> instruction: 0x0c0b0b0b
 8016634:	0e0d0d0c 	cdpeq	13, 0, cr0, cr13, cr12, {0}
 8016638:	100f0f0e 	andne	r0, pc, lr, lsl #30
 801663c:	12111110 	andsne	r1, r1, #16, 2
 8016640:	14131312 	ldrne	r1, [r3], #-786	; 0xfffffcee
 8016644:	16151514 			; <UNDEFINED> instruction: 0x16151514
 8016648:	18181717 	ldmdane	r8, {r0, r1, r2, r4, r8, r9, sl, ip}
 801664c:	1b1a1a19 	blne	869ceb8 <__exidx_end+0x6855c4>
 8016650:	1e1d1c1c 	mrcne	12, 0, r1, cr13, cr12, {0}
 8016654:	20201f1e 	eorcs	r1, r0, lr, lsl pc
 8016658:	23232221 			; <UNDEFINED> instruction: 0x23232221
 801665c:	26262524 	strtcs	r2, [r6], -r4, lsr #10
 8016660:	2a292827 	bcs	8a60704 <__exidx_end+0xa48e10>
 8016664:	2d2c2b2a 	vstmdbcs	ip!, {d2-d22}
 8016668:	302f2f2e 	eorcc	r2, pc, lr, lsr #30
 801666c:	34333231 	ldrtcc	r3, [r3], #-561	; 0xfffffdcf
 8016670:	38373635 	ldmdacc	r7!, {r0, r2, r4, r5, r9, sl, ip, sp}
 8016674:	3b3a3938 	blcc	8ea4b5c <__exidx_end+0xe8d268>
 8016678:	3f3e3d3c 	svccc	0x003e3d3c
 801667c:	43424140 	movtmi	r4, #8512	; 0x2140
 8016680:	47464544 	strbmi	r4, [r6, -r4, asr #10]
 8016684:	4c4b4a49 	mcrrmi	10, 4, r4, fp, cr9
 8016688:	504f4e4d 	subpl	r4, pc, sp, asr #28
 801668c:	55545251 	ldrbpl	r5, [r4, #-593]	; 0xfffffdaf
 8016690:	59585756 	ldmdbpl	r8, {r1, r2, r4, r6, r8, r9, sl, ip, lr}^
 8016694:	5e5d5c5b 	mrcpl	12, 2, r5, cr13, cr11, {2}
 8016698:	6362615f 	cmnvs	r2, #-1073741801	; 0xc0000017
 801669c:	68676664 	stmdavs	r7!, {r2, r5, r6, r9, sl, sp, lr}^
 80166a0:	6d6c6b69 	fstmdbxvs	ip!, {d22-d73}	;@ Deprecated
 80166a4:	7371706f 	cmnvc	r1, #111	; 0x6f
 80166a8:	78777574 	ldmdavc	r7!, {r2, r4, r5, r6, r8, sl, ip, sp, lr}^
 80166ac:	7e7c7b79 	vmovvc.s8	r7, d12[7]
 80166b0:	8382807f 	orrhi	r8, r2, #127	; 0x7f
 80166b4:	89888685 	stmibhi	r8, {r0, r2, r7, r9, sl, pc}
 80166b8:	8f8e8c8b 	svchi	0x008e8c8b
 80166bc:	95949291 	ldrls	r9, [r4, #657]	; 0x291
 80166c0:	9b9a9897 	blls	66bc924 <__stack_size+0x66ba124>
 80166c4:	a2a09e9d 	adcge	r9, r0, #2512	; 0x9d0
 80166c8:	a8a6a5a3 	stmiage	r6!, {r0, r1, r5, r7, r8, sl, sp, pc}
 80166cc:	afadabaa 	svcge	0x00adabaa
 80166d0:	b5b4b2b0 	ldrlt	fp, [r4, #688]!	; 0x2b0
 80166d4:	bcbab9b7 			; <UNDEFINED> instruction: 0xbcbab9b7
 80166d8:	c3c1c0be 	bicgt	ip, r1, #190	; 0xbe
 80166dc:	cac8c7c5 	bgt	72485f8 <__stack_size+0x7245df8>
 80166e0:	d1cfcecc 	bicle	ip, pc, ip, asr #29
 80166e4:	d9d7d5d3 	ldmible	r7, {r0, r1, r4, r6, r7, r8, sl, ip, lr, pc}^
 80166e8:	e0dedcda 	ldrsb	sp, [lr], #202	; 0xca
 80166ec:	e8e6e4e2 	stmia	r6!, {r1, r5, r6, r7, sl, sp, lr, pc}^
 80166f0:	efedebe9 	svc	0x00edebe9
 80166f4:	f7f5f3f1 			; <UNDEFINED> instruction: 0xf7f5f3f1
 80166f8:	fffdfbf9 			; <UNDEFINED> instruction: 0xfffdfbf9

080166fc <gamma21_0>:
	...
 8016708:	01010000 	mrseq	r0, (UNDEF: 1)
 801670c:	01010101 	tsteq	r1, r1, lsl #2
 8016710:	02010101 	andeq	r0, r1, #1073741824	; 0x40000000
 8016714:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 8016718:	03030302 	movweq	r0, #13058	; 0x3302
 801671c:	04040303 	streq	r0, [r4], #-771	; 0xfffffcfd
 8016720:	05050404 	streq	r0, [r5, #-1028]	; 0xfffffbfc
 8016724:	06060505 	streq	r0, [r6], -r5, lsl #10
 8016728:	07070706 	streq	r0, [r7, -r6, lsl #14]
 801672c:	09080808 	stmdbeq	r8, {r3, fp}
 8016730:	0a0a0909 	beq	8298b5c <__exidx_end+0x281268>
 8016734:	0c0b0b0b 			; <UNDEFINED> instruction: 0x0c0b0b0b
 8016738:	0e0d0d0c 	cdpeq	13, 0, cr0, cr13, cr12, {0}
 801673c:	0f0f0e0e 	svceq	0x000f0e0e
 8016740:	11111010 	tstne	r1, r0, lsl r0
 8016744:	14131212 	ldrne	r1, [r3], #-530	; 0xfffffdee
 8016748:	16151514 			; <UNDEFINED> instruction: 0x16151514
 801674c:	18181716 	ldmdane	r8, {r1, r2, r4, r8, r9, sl, ip}
 8016750:	1b1a1919 	blne	869cbbc <__exidx_end+0x6852c8>
 8016754:	1d1d1c1b 	ldcne	12, cr1, [sp, #-108]	; 0xffffff94
 8016758:	201f1f1e 	andscs	r1, pc, lr, lsl pc	; <UNPREDICTABLE>
 801675c:	23222121 			; <UNDEFINED> instruction: 0x23222121
 8016760:	26252424 	strtcs	r2, [r5], -r4, lsr #8
 8016764:	29282827 	stmdbcs	r8!, {r0, r1, r2, r5, fp, sp}
 8016768:	2c2c2b2a 			; <UNDEFINED> instruction: 0x2c2c2b2a
 801676c:	302f2e2d 	eorcc	r2, pc, sp, lsr #28
 8016770:	33333231 	teqcc	r3, #268435459	; 0x10000003
 8016774:	37363534 			; <UNDEFINED> instruction: 0x37363534
 8016778:	3b3a3938 	blcc	8ea4c60 <__exidx_end+0xe8d36c>
 801677c:	3f3e3d3c 	svccc	0x003e3d3c
 8016780:	43424140 	movtmi	r4, #8512	; 0x2140
 8016784:	47464544 	strbmi	r4, [r6, -r4, asr #10]
 8016788:	4c4b4948 	mcrrmi	9, 4, r4, fp, cr8	; <UNPREDICTABLE>
 801678c:	504f4e4d 	subpl	r4, pc, sp, asr #28
 8016790:	55545351 	ldrbpl	r5, [r4, #-849]	; 0xfffffcaf
 8016794:	5a585756 	bpl	962c4f4 <__exidx_end+0x1614c00>
 8016798:	5f5d5c5b 	svcpl	0x005d5c5b
 801679c:	64626160 	strbtvs	r6, [r2], #-352	; 0xfffffea0
 80167a0:	69686665 	stmdbvs	r8!, {r0, r2, r5, r6, r9, sl, sp, lr}^
 80167a4:	6e6d6b6a 	vnmulvs.f64	d22, d13, d26
 80167a8:	74727170 	ldrbtvc	r7, [r2], #-368	; 0xfffffe90
 80167ac:	79787675 	ldmdbvc	r8!, {r0, r2, r4, r5, r6, r9, sl, ip, sp, lr}^
 80167b0:	7f7e7c7b 	svcvc	0x007e7c7b
 80167b4:	85838281 	strhi	r8, [r3, #641]	; 0x281
 80167b8:	8b898886 	blhi	62789d8 <__stack_size+0x62761d8>
 80167bc:	91908e8d 	orrsls	r8, r0, sp, lsl #29
 80167c0:	97969493 			; <UNDEFINED> instruction: 0x97969493
 80167c4:	9e9c9b99 	vmovls.32	r9, d28[0]
 80167c8:	a5a3a1a0 	strge	sl, [r3, #416]!	; 0x1a0
 80167cc:	abaaa8a6 	blge	6ac0a6c <__stack_size+0x6abe26c>
 80167d0:	b2b0afad 	adcslt	sl, r0, #692	; 0x2b4
 80167d4:	b9b7b6b4 	ldmiblt	r7!, {r2, r4, r5, r7, r9, sl, ip, sp, pc}
 80167d8:	c0bfbdbb 	ldrhtgt	fp, [pc], fp
 80167dc:	c8c6c4c2 	stmiagt	r6, {r1, r6, r7, sl, lr, pc}^
 80167e0:	cfcdcbca 	svcgt	0x00cdcbca
 80167e4:	d7d5d3d1 			; <UNDEFINED> instruction: 0xd7d5d3d1
 80167e8:	dfdddbd9 	svcle	0x00dddbd9
 80167ec:	e6e4e2e1 	strbt	lr, [r4], r1, ror #5
 80167f0:	eeeceae8 	vfms.f32	s29, s25, s17
 80167f4:	f7f5f3f1 			; <UNDEFINED> instruction: 0xf7f5f3f1
 80167f8:	fffdfbf9 			; <UNDEFINED> instruction: 0xfffdfbf9

080167fc <gamma22_0>:
	...
 8016808:	01000000 	mrseq	r0, (UNDEF: 0)
 801680c:	01010101 	tsteq	r1, r1, lsl #2
 8016810:	01010101 	tsteq	r1, r1, lsl #2
 8016814:	02020201 	andeq	r0, r2, #268435456	; 0x10000000
 8016818:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 801681c:	03030303 	movweq	r0, #13059	; 0x3303
 8016820:	04040403 	streq	r0, [r4], #-1027	; 0xfffffbfd
 8016824:	05050504 	streq	r0, [r5, #-1284]	; 0xfffffafc
 8016828:	06060605 	streq	r0, [r6], -r5, lsl #12
 801682c:	07070706 	streq	r0, [r7, -r6, lsl #14]
 8016830:	09080808 	stmdbeq	r8, {r3, fp}
 8016834:	0a0a0909 	beq	8298c60 <__exidx_end+0x28136c>
 8016838:	0c0b0b0b 			; <UNDEFINED> instruction: 0x0c0b0b0b
 801683c:	0d0d0d0c 	stceq	13, cr0, [sp, #-48]	; 0xffffffd0
 8016840:	0f0f0e0e 	svceq	0x000f0e0e
 8016844:	11111010 	tstne	r1, r0, lsl r0
 8016848:	13131212 	tstne	r3, #536870913	; 0x20000001
 801684c:	16151414 			; <UNDEFINED> instruction: 0x16151414
 8016850:	18171716 	ldmdane	r7, {r1, r2, r4, r8, r9, sl, ip}
 8016854:	1a1a1919 	bne	869ccc0 <__exidx_end+0x6853cc>
 8016858:	1d1c1c1b 	ldcne	12, cr1, [ip, #-108]	; 0xffffff94
 801685c:	201f1e1e 	andscs	r1, pc, lr, lsl lr	; <UNPREDICTABLE>
 8016860:	23222121 			; <UNDEFINED> instruction: 0x23222121
 8016864:	26252423 	strtcs	r2, [r5], -r3, lsr #8
 8016868:	29282727 	stmdbcs	r8!, {r0, r1, r2, r5, r8, r9, sl, sp}
 801686c:	2c2b2b2a 			; <UNDEFINED> instruction: 0x2c2b2b2a
 8016870:	302f2e2d 	eorcc	r2, pc, sp, lsr #28
 8016874:	33323131 	teqcc	r2, #1073741836	; 0x4000000c
 8016878:	37363534 			; <UNDEFINED> instruction: 0x37363534
 801687c:	3b3a3938 	blcc	8ea4d64 <__exidx_end+0xe8d470>
 8016880:	3f3e3d3c 	svccc	0x003e3d3c
 8016884:	43424140 	movtmi	r4, #8512	; 0x2140
 8016888:	47464544 	strbmi	r4, [r6, -r4, asr #10]
 801688c:	4c4b4a49 	mcrrmi	10, 4, r4, fp, cr9
 8016890:	514f4e4d 	cmppl	pc, sp, asr #28
 8016894:	55545352 	ldrbpl	r5, [r4, #-850]	; 0xfffffcae
 8016898:	5a595857 	bpl	966c9fc <__exidx_end+0x1655108>
 801689c:	5f5e5d5b 	svcpl	0x005e5d5b
 80168a0:	64636261 	strbtvs	r6, [r3], #-609	; 0xfffffd9f
 80168a4:	6a696766 	bvs	9a70644 <__exidx_end+0x1a58d50>
 80168a8:	6f6e6d6b 	svcvs	0x006e6d6b
 80168ac:	75747271 	ldrbvc	r7, [r4, #-625]!	; 0xfffffd8f
 80168b0:	7b797877 	blvc	9e74a94 <__exidx_end+0x1e5d1a0>
 80168b4:	817f7e7c 	cmnhi	pc, ip, ror lr	; <UNPREDICTABLE>
 80168b8:	87858482 	strhi	r8, [r5, r2, lsl #9]
 80168bc:	8d8c8a89 	vstrhi	s16, [ip, #548]	; 0x224
 80168c0:	9492918f 	ldrls	r9, [r2], #399	; 0x18f
 80168c4:	9a999795 	bls	667c720 <__stack_size+0x6679f20>
 80168c8:	a19f9e9c 			; <UNDEFINED> instruction: 0xa19f9e9c
 80168cc:	a8a6a5a3 	stmiage	r6!, {r0, r1, r5, r7, r8, sl, sp, pc}
 80168d0:	afadacaa 	svcge	0x00adacaa
 80168d4:	b6b5b3b1 			; <UNDEFINED> instruction: 0xb6b5b3b1
 80168d8:	bebcbab8 			; <UNDEFINED> instruction: 0xbebcbab8
 80168dc:	c5c4c2c0 	strbgt	ip, [r4, #704]	; 0x2c0
 80168e0:	cdcbc9c7 	vstrgt.16	s25, [fp, #398]	; 0x18e	; <UNPREDICTABLE>
 80168e4:	d5d3d1cf 	ldrble	sp, [r3, #463]	; 0x1cf
 80168e8:	dddbd9d7 	vldrle.16	s27, [fp, #430]	; 0x1ae	; <UNPREDICTABLE>
 80168ec:	e5e3e1df 	strb	lr, [r3, #479]!	; 0x1df
 80168f0:	eeeceae7 	vfms.f32	s29, s25, s15
 80168f4:	f6f4f2f0 			; <UNDEFINED> instruction: 0xf6f4f2f0
 80168f8:	fffdfbf8 			; <UNDEFINED> instruction: 0xfffdfbf8

080168fc <gamma23_0>:
	...
 801690c:	01010100 	mrseq	r0, (UNDEF: 17)
 8016910:	01010101 	tsteq	r1, r1, lsl #2
 8016914:	01010101 	tsteq	r1, r1, lsl #2
 8016918:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 801691c:	03020202 	movweq	r0, #8706	; 0x2202
 8016920:	03030303 	movweq	r0, #13059	; 0x3303
 8016924:	04040404 	streq	r0, [r4], #-1028	; 0xfffffbfc
 8016928:	05050504 	streq	r0, [r5, #-1284]	; 0xfffffafc
 801692c:	06060605 	streq	r0, [r6], -r5, lsl #12
 8016930:	07070707 	streq	r0, [r7, -r7, lsl #14]
 8016934:	09080808 	stmdbeq	r8, {r3, fp}
 8016938:	0a0a0a09 	beq	8299164 <__exidx_end+0x281870>
 801693c:	0c0b0b0b 			; <UNDEFINED> instruction: 0x0c0b0b0b
 8016940:	0d0d0d0c 	stceq	13, cr0, [sp, #-48]	; 0xffffffd0
 8016944:	0f0f0e0e 	svceq	0x000f0e0e
 8016948:	11111010 	tstne	r1, r0, lsl r0
 801694c:	13131212 	tstne	r3, #536870913	; 0x20000001
 8016950:	15151414 	ldrne	r1, [r5, #-1044]	; 0xfffffbec
 8016954:	18171716 	ldmdane	r7, {r1, r2, r4, r8, r9, sl, ip}
 8016958:	1a1a1918 	bne	869cdc0 <__exidx_end+0x6854cc>
 801695c:	1d1c1c1b 	ldcne	12, cr1, [ip, #-108]	; 0xffffff94
 8016960:	201f1e1e 	andscs	r1, pc, lr, lsl lr	; <UNPREDICTABLE>
 8016964:	23222120 			; <UNDEFINED> instruction: 0x23222120
 8016968:	26252423 	strtcs	r2, [r5], -r3, lsr #8
 801696c:	29282726 	stmdbcs	r8!, {r1, r2, r5, r8, r9, sl, sp}
 8016970:	2c2b2a2a 			; <UNDEFINED> instruction: 0x2c2b2a2a
 8016974:	302f2e2d 	eorcc	r2, pc, sp, lsr #28
 8016978:	33323131 	teqcc	r2, #1073741836	; 0x4000000c
 801697c:	37363534 			; <UNDEFINED> instruction: 0x37363534
 8016980:	3b3a3938 	blcc	8ea4e68 <__exidx_end+0xe8d574>
 8016984:	3f3e3d3c 	svccc	0x003e3d3c
 8016988:	43424140 	movtmi	r4, #8512	; 0x2140
 801698c:	48474645 	stmdami	r7, {r0, r2, r6, r9, sl, lr}^
 8016990:	4c4b4a49 	mcrrmi	10, 4, r4, fp, cr9
 8016994:	51504f4e 	cmppl	r0, lr, asr #30
 8016998:	56555452 			; <UNDEFINED> instruction: 0x56555452
 801699c:	5b5a5957 	blpl	96acf00 <__exidx_end+0x169560c>
 80169a0:	605f5e5c 	subsvs	r5, pc, ip, asr lr	; <UNPREDICTABLE>
 80169a4:	66646362 	strbtvs	r6, [r4], -r2, ror #6
 80169a8:	6b6a6867 	blvs	9ab0b4c <__exidx_end+0x1a99258>
 80169ac:	71706e6d 	cmnvc	r0, sp, ror #28
 80169b0:	77757472 			; <UNDEFINED> instruction: 0x77757472
 80169b4:	7d7b7a78 	vldmdbvc	fp!, {s15-s134}
 80169b8:	8382807e 	orrhi	r8, r2, #126	; 0x7e
 80169bc:	8a888685 	bhi	62383d8 <__stack_size+0x6235bd8>
 80169c0:	908f8d8b 	addls	r8, pc, fp, lsl #27
 80169c4:	97959492 			; <UNDEFINED> instruction: 0x97959492
 80169c8:	9e9c9a99 			; <UNDEFINED> instruction: 0x9e9c9a99
 80169cc:	a5a3a1a0 	strge	sl, [r3, #416]!	; 0x1a0
 80169d0:	acaaa9a7 			; <UNDEFINED> instruction: 0xacaaa9a7
 80169d4:	b4b2b0ae 	ldrtlt	fp, [r2], #174	; 0xae
 80169d8:	bbb9b7b6 	bllt	6e848b8 <__stack_size+0x6e820b8>
 80169dc:	c3c1bfbd 	bicgt	fp, r1, #756	; 0x2f4
 80169e0:	cbc9c7c5 	blgt	72888fc <__stack_size+0x72860fc>
 80169e4:	d3d1cfcd 	bicsle	ip, r1, #820	; 0x334
 80169e8:	dcdad7d5 	ldclle	7, cr13, [sl], {213}	; 0xd5
 80169ec:	e4e2e0de 	strbt	lr, [r2], #222	; 0xde
 80169f0:	edebe9e6 			; <UNDEFINED> instruction: 0xedebe9e6
 80169f4:	f6f4f1ef 			; <UNDEFINED> instruction: 0xf6f4f1ef
 80169f8:	fffdfaf8 			; <UNDEFINED> instruction: 0xfffdfaf8

080169fc <gamma24_0>:
	...
 8016a0c:	01000000 	mrseq	r0, (UNDEF: 0)
 8016a10:	01010101 	tsteq	r1, r1, lsl #2
 8016a14:	01010101 	tsteq	r1, r1, lsl #2
 8016a18:	02010101 	andeq	r0, r1, #1073741824	; 0x40000000
 8016a1c:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 8016a20:	03030202 	movweq	r0, #12802	; 0x3202
 8016a24:	04030303 	streq	r0, [r3], #-771	; 0xfffffcfd
 8016a28:	04040404 	streq	r0, [r4], #-1028	; 0xfffffbfc
 8016a2c:	05050505 	streq	r0, [r5, #-1285]	; 0xfffffafb
 8016a30:	06060606 	streq	r0, [r6], -r6, lsl #12
 8016a34:	08070707 	stmdaeq	r7, {r0, r1, r2, r8, r9, sl}
 8016a38:	09090808 	stmdbeq	r9, {r3, fp}
 8016a3c:	0a0a0a09 	beq	8299268 <__exidx_end+0x281974>
 8016a40:	0c0b0b0b 			; <UNDEFINED> instruction: 0x0c0b0b0b
 8016a44:	0e0d0d0c 	cdpeq	13, 0, cr0, cr13, cr12, {0}
 8016a48:	0f0f0e0e 	svceq	0x000f0e0e
 8016a4c:	11111010 	tstne	r1, r0, lsl r0
 8016a50:	13131212 	tstne	r3, #536870913	; 0x20000001
 8016a54:	16151414 			; <UNDEFINED> instruction: 0x16151414
 8016a58:	18171716 	ldmdane	r7, {r1, r2, r4, r8, r9, sl, ip}
 8016a5c:	1a1a1918 	bne	869cec4 <__exidx_end+0x6855d0>
 8016a60:	1d1c1c1b 	ldcne	12, cr1, [ip, #-108]	; 0xffffff94
 8016a64:	201f1e1e 	andscs	r1, pc, lr, lsl lr	; <UNPREDICTABLE>
 8016a68:	23222120 			; <UNDEFINED> instruction: 0x23222120
 8016a6c:	26252423 	strtcs	r2, [r5], -r3, lsr #8
 8016a70:	29282727 	stmdbcs	r8!, {r0, r1, r2, r5, r8, r9, sl, sp}
 8016a74:	2c2b2b2a 			; <UNDEFINED> instruction: 0x2c2b2b2a
 8016a78:	302f2e2d 	eorcc	r2, pc, sp, lsr #28
 8016a7c:	34333231 	ldrtcc	r3, [r3], #-561	; 0xfffffdcf
 8016a80:	37363535 			; <UNDEFINED> instruction: 0x37363535
 8016a84:	3b3a3938 	blcc	8ea4f6c <__exidx_end+0xe8d678>
 8016a88:	403f3e3c 	eorsmi	r3, pc, ip, lsr lr	; <UNPREDICTABLE>
 8016a8c:	44434241 	strbmi	r4, [r3], #-577	; 0xfffffdbf
 8016a90:	49474645 	stmdbmi	r7, {r0, r2, r6, r9, sl, lr}^
 8016a94:	4d4c4b4a 	vstrmi	d20, [ip, #-296]	; 0xfffffed8
 8016a98:	5251504e 	subspl	r5, r1, #78	; 0x4e
 8016a9c:	57565553 			; <UNDEFINED> instruction: 0x57565553
 8016aa0:	5c5b5a58 	mrrcpl	10, 5, r5, fp, cr8
 8016aa4:	62605f5e 	rsbvs	r5, r0, #376	; 0x178
 8016aa8:	67666463 	strbvs	r6, [r6, -r3, ror #8]!
 8016aac:	6d6c6a69 	vstmdbvs	ip!, {s13-s117}
 8016ab0:	7372706f 	cmnvc	r2, #111	; 0x6f
 8016ab4:	79787675 	ldmdbvc	r8!, {r0, r2, r4, r5, r6, r9, sl, ip, sp, lr}^
 8016ab8:	7f7e7c7b 	svcvc	0x007e7c7b
 8016abc:	86848381 	strhi	r8, [r4], r1, lsl #7
 8016ac0:	8d8b8988 	vstrhi.16	s16, [fp, #272]	; 0x110	; <UNPREDICTABLE>
 8016ac4:	9492908e 	ldrls	r9, [r2], #142	; 0x8e
 8016ac8:	9b999795 	blls	667c924 <__stack_size+0x667a124>
 8016acc:	a2a09e9c 	adcge	r9, r0, #156, 28	; 0x9c0
 8016ad0:	a9a7a6a4 	stmibge	r7!, {r2, r5, r7, r9, sl, sp, pc}
 8016ad4:	b1afadab 			; <UNDEFINED> instruction: 0xb1afadab
 8016ad8:	b9b7b5b3 	ldmiblt	r7!, {r0, r1, r4, r5, r7, r8, sl, ip, sp, pc}
 8016adc:	c1bfbdbb 			; <UNDEFINED> instruction: 0xc1bfbdbb
 8016ae0:	c9c7c5c3 	stmibgt	r7, {r0, r1, r6, r7, r8, sl, lr, pc}^
 8016ae4:	d2cfcdcb 	sbcle	ip, pc, #12992	; 0x32c0
 8016ae8:	dad8d6d4 	ble	764c640 <__stack_size+0x7649e40>
 8016aec:	e3e1dfdc 	mvn	sp, #220, 30	; 0x370
 8016af0:	eceae8e5 	stcl	8, cr14, [sl], #916	; 0x394
 8016af4:	f6f3f1ef 			; <UNDEFINED> instruction: 0xf6f3f1ef
 8016af8:	fffdfaf8 			; <UNDEFINED> instruction: 0xfffdfaf8

08016afc <gamma25_0>:
	...
 8016b10:	01010000 	mrseq	r0, (UNDEF: 1)
 8016b14:	01010101 	tsteq	r1, r1, lsl #2
 8016b18:	01010101 	tsteq	r1, r1, lsl #2
 8016b1c:	02020201 	andeq	r0, r2, #268435456	; 0x10000000
 8016b20:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 8016b24:	03030302 	movweq	r0, #13058	; 0x3302
 8016b28:	04040303 	streq	r0, [r4], #-771	; 0xfffffcfd
 8016b2c:	05040404 	streq	r0, [r4, #-1028]	; 0xfffffbfc
 8016b30:	06050505 	streq	r0, [r5], -r5, lsl #10
 8016b34:	07060606 	streq	r0, [r6, -r6, lsl #12]
 8016b38:	08070707 	stmdaeq	r7, {r0, r1, r2, r8, r9, sl}
 8016b3c:	09090808 	stmdbeq	r9, {r3, fp}
 8016b40:	0a0a0a09 	beq	829936c <__exidx_end+0x281a78>
 8016b44:	0c0c0b0b 			; <UNDEFINED> instruction: 0x0c0c0b0b
 8016b48:	0e0d0d0c 	cdpeq	13, 0, cr0, cr13, cr12, {0}
 8016b4c:	0f0f0f0e 	svceq	0x000f0f0e
 8016b50:	11111010 	tstne	r1, r0, lsl r0
 8016b54:	13131212 	tstne	r3, #536870913	; 0x20000001
 8016b58:	16151414 			; <UNDEFINED> instruction: 0x16151414
 8016b5c:	18171716 	ldmdane	r7, {r1, r2, r4, r8, r9, sl, ip}
 8016b60:	1a1a1919 	bne	869cfcc <__exidx_end+0x6856d8>
 8016b64:	1d1c1c1b 	ldcne	12, cr1, [ip, #-108]	; 0xffffff94
 8016b68:	201f1e1e 	andscs	r1, pc, lr, lsl lr	; <UNPREDICTABLE>
 8016b6c:	23222121 			; <UNDEFINED> instruction: 0x23222121
 8016b70:	26252424 	strtcs	r2, [r5], -r4, lsr #8
 8016b74:	29282827 	stmdbcs	r8!, {r0, r1, r2, r5, fp, sp}
 8016b78:	2d2c2b2a 	vstmdbcs	ip!, {d2-d22}
 8016b7c:	302f2e2e 	eorcc	r2, pc, lr, lsr #28
 8016b80:	34333231 	ldrtcc	r3, [r3], #-561	; 0xfffffdcf
 8016b84:	38373635 	ldmdacc	r7!, {r0, r2, r4, r5, r9, sl, ip, sp}
 8016b88:	3c3b3a39 			; <UNDEFINED> instruction: 0x3c3b3a39
 8016b8c:	403f3e3d 	eorsmi	r3, pc, sp, lsr lr	; <UNPREDICTABLE>
 8016b90:	45444341 	strbmi	r4, [r4, #-833]	; 0xfffffcbf
 8016b94:	49484746 	stmdbmi	r8, {r1, r2, r6, r8, r9, sl, lr}^
 8016b98:	4e4d4c4b 	cdpmi	12, 4, cr4, cr13, cr11, {2}
 8016b9c:	53525150 	cmppl	r2, #80, 2
 8016ba0:	59575655 	ldmdbpl	r7, {r0, r2, r4, r6, r9, sl, ip, lr}^
 8016ba4:	5e5d5b5a 	vmovpl.s8	r5, d13[2]
 8016ba8:	6362615f 	cmnvs	r2, #-1073741801	; 0xc0000017
 8016bac:	69686665 	stmdbvs	r8!, {r0, r2, r5, r6, r9, sl, sp, lr}^
 8016bb0:	6f6e6c6b 	svcvs	0x006e6c6b
 8016bb4:	75747271 	ldrbvc	r7, [r4, #-625]!	; 0xfffffd8f
 8016bb8:	7c7a7977 			; <UNDEFINED> instruction: 0x7c7a7977
 8016bbc:	82817f7d 	addhi	r7, r1, #500	; 0x1f4
 8016bc0:	89878684 	stmibhi	r7, {r2, r7, r9, sl, pc}
 8016bc4:	908e8d8b 	addls	r8, lr, fp, lsl #27
 8016bc8:	97969492 			; <UNDEFINED> instruction: 0x97969492
 8016bcc:	9f9d9b99 	svcls	0x009d9b99
 8016bd0:	a6a5a3a1 	strtge	sl, [r5], r1, lsr #7
 8016bd4:	aeacaaa8 	vfmage.f32	s20, s25, s17
 8016bd8:	b6b4b2b0 			; <UNDEFINED> instruction: 0xb6b4b2b0
 8016bdc:	bfbdbab8 	svclt	0x00bdbab8
 8016be0:	c7c5c3c1 	strbgt	ip, [r5, r1, asr #7]
 8016be4:	d0ceccc9 	sbcle	ip, lr, r9, asr #25
 8016be8:	d9d7d4d2 	ldmible	r7, {r1, r4, r6, r7, sl, ip, lr, pc}^
 8016bec:	e2e0dddb 	rsc	sp, r0, #14016	; 0x36c0
 8016bf0:	ebe9e7e4 	bl	7a90b88 <__stack_size+0x7a8e388>
 8016bf4:	f5f3f0ee 			; <UNDEFINED> instruction: 0xf5f3f0ee
 8016bf8:	fffdfaf8 			; <UNDEFINED> instruction: 0xfffdfaf8

08016bfc <gamma25_5>:
 8016bfc:	01010100 	mrseq	r0, (UNDEF: 17)
 8016c00:	01010101 	tsteq	r1, r1, lsl #2
 8016c04:	01010101 	tsteq	r1, r1, lsl #2
 8016c08:	01010101 	tsteq	r1, r1, lsl #2
 8016c0c:	01010101 	tsteq	r1, r1, lsl #2
 8016c10:	01010101 	tsteq	r1, r1, lsl #2
 8016c14:	01010101 	tsteq	r1, r1, lsl #2
 8016c18:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 8016c1c:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 8016c20:	03030302 	movweq	r0, #13058	; 0x3302
 8016c24:	03030303 	movweq	r0, #13059	; 0x3303
 8016c28:	04040404 	streq	r0, [r4], #-1028	; 0xfffffbfc
 8016c2c:	05050504 	streq	r0, [r5, #-1284]	; 0xfffffafc
 8016c30:	06060605 	streq	r0, [r6], -r5, lsl #12
 8016c34:	07070706 	streq	r0, [r7, -r6, lsl #14]
 8016c38:	08080807 	stmdaeq	r8, {r0, r1, r2, fp}
 8016c3c:	0a090909 	beq	8259068 <__exidx_end+0x241774>
 8016c40:	0b0b0a0a 	bleq	82d9470 <__exidx_end+0x2c1b7c>
 8016c44:	0c0c0c0b 	stceq	12, cr0, [ip], {11}
 8016c48:	0e0e0d0d 	cdpeq	13, 0, cr0, cr14, cr13, {0}
 8016c4c:	100f0f0f 	andne	r0, pc, pc, lsl #30
 8016c50:	12111110 	andsne	r1, r1, #16, 2
 8016c54:	14131312 	ldrne	r1, [r3], #-786	; 0xfffffcee
 8016c58:	16161514 			; <UNDEFINED> instruction: 0x16161514
 8016c5c:	18181717 	ldmdane	r8, {r0, r1, r2, r4, r8, r9, sl, ip}
 8016c60:	1b1a1a19 	blne	869d4cc <__exidx_end+0x685bd8>
 8016c64:	1e1d1c1c 	mrcne	12, 0, r1, cr13, cr12, {0}
 8016c68:	20201f1e 	eorcs	r1, r0, lr, lsl pc
 8016c6c:	23232221 			; <UNDEFINED> instruction: 0x23232221
 8016c70:	26262524 	strtcs	r2, [r6], -r4, lsr #10
 8016c74:	2a292827 	bcs	8a60d18 <__exidx_end+0xa49424>
 8016c78:	2d2c2b2b 	fstmdbxcs	ip!, {d2-d22}	;@ Deprecated
 8016c7c:	31302f2e 	teqcc	r0, lr, lsr #30
 8016c80:	35343332 	ldrcc	r3, [r4, #-818]!	; 0xfffffcce
 8016c84:	38373635 	ldmdacc	r7!, {r0, r2, r4, r5, r9, sl, ip, sp}
 8016c88:	3d3c3a39 	vldmdbcc	ip!, {s6-s62}
 8016c8c:	41403f3e 	cmpmi	r0, lr, lsr pc
 8016c90:	45444342 	strbmi	r4, [r4, #-834]	; 0xfffffcbe
 8016c94:	4a494846 	bmi	9268db4 <__exidx_end+0x12514c0>
 8016c98:	4f4e4c4b 	svcmi	0x004e4c4b
 8016c9c:	54535150 	ldrbpl	r5, [r3], #-336	; 0xfffffeb0
 8016ca0:	59585655 	ldmdbpl	r8, {r0, r2, r4, r6, r9, sl, ip, lr}^
 8016ca4:	5e5d5c5a 	mrcpl	12, 2, r5, cr13, cr10, {2}
 8016ca8:	64636160 	strbtvs	r6, [r3], #-352	; 0xfffffea0
 8016cac:	6a686765 	bvs	9a30a48 <__exidx_end+0x1a19154>
 8016cb0:	706e6d6b 	rsbvc	r6, lr, fp, ror #26
 8016cb4:	76747371 			; <UNDEFINED> instruction: 0x76747371
 8016cb8:	7c7b7978 			; <UNDEFINED> instruction: 0x7c7b7978
 8016cbc:	8381807e 	orrhi	r8, r1, #126	; 0x7e
 8016cc0:	8a888685 	bhi	62386dc <__stack_size+0x6235edc>
 8016cc4:	918f8d8b 	orrls	r8, pc, fp, lsl #27
 8016cc8:	98969492 	ldmls	r6, {r1, r4, r7, sl, ip, pc}
 8016ccc:	9f9d9c9a 	svcls	0x009d9c9a
 8016cd0:	a7a5a3a1 	strge	sl, [r5, r1, lsr #7]!
 8016cd4:	afadaba9 	svcge	0x00adaba9
 8016cd8:	b7b5b3b1 			; <UNDEFINED> instruction: 0xb7b5b3b1
 8016cdc:	bfbdbbb9 	svclt	0x00bdbbb9
 8016ce0:	c8c6c3c1 	stmiagt	r6, {r0, r6, r7, r8, r9, lr, pc}^
 8016ce4:	d0ceccca 	sbcle	ip, lr, sl, asr #25
 8016ce8:	d9d7d5d3 	ldmible	r7, {r0, r1, r4, r6, r7, r8, sl, ip, lr, pc}^
 8016cec:	e3e0dedc 	mvn	sp, #220, 28	; 0xdc0
 8016cf0:	eceae7e5 	stcl	7, cr14, [sl], #916	; 0x394
 8016cf4:	f6f3f1ee 			; <UNDEFINED> instruction: 0xf6f3f1ee
 8016cf8:	fffdfbf8 			; <UNDEFINED> instruction: 0xfffdfbf8
 8016cfc:	6e6b6e55 	mcrvs	14, 3, r6, cr11, cr5, {2}
 8016d00:	006e776f 	rsbeq	r7, lr, pc, ror #14
 8016d04:	65646e55 	strbvs	r6, [r4, #-3669]!	; 0xfffff1ab
 8016d08:	656e6966 	strbvs	r6, [lr, #-2406]!	; 0xfffff69a
 8016d0c:	 	andeq	r0, r0, #100	; 0x64

08016d0e <CSWTCH.18>:
 8016d0e:	02020200 	andeq	r0, r2, #0, 4
 8016d12:	04020202 	streq	r0, [r2], #-514	; 0xfffffdfe
 8016d16:	 	ldrbmi	r0, [r2, -r0, lsl #10]

08016d18 <PixelType::MAPS>:
 8016d18:	00424752 	subeq	r4, r2, r2, asr r7
 8016d1c:	00474252 	subeq	r4, r7, r2, asr r2
 8016d20:	00425247 	subeq	r5, r2, r7, asr #4
 8016d24:	00524247 	subseq	r4, r2, r7, asr #4
 8016d28:	00475242 	subeq	r5, r7, r2, asr #4
 8016d2c:	00524742 	subseq	r4, r2, r2, asr #14

08016d30 <PixelType::TYPES>:
 8016d30:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 8016d34:	00003130 	andeq	r3, r0, r0, lsr r1
 8016d38:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 8016d3c:	00003131 	andeq	r3, r0, r1, lsr r1
 8016d40:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 8016d44:	00003231 	andeq	r3, r0, r1, lsr r2
 8016d48:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 8016d4c:	00423231 	subeq	r3, r2, r1, lsr r2
 8016d50:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 8016d54:	00003331 	andeq	r3, r0, r1, lsr r3
 8016d58:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 8016d5c:	00003531 	andeq	r3, r0, r1, lsr r5
 8016d60:	38364b53 	ldmdacc	r6!, {r0, r1, r4, r6, r8, r9, fp, lr}
 8016d64:	00003231 	andeq	r3, r0, r1, lsr r2
 8016d68:	38364b53 	ldmdacc	r6!, {r0, r1, r4, r6, r8, r9, fp, lr}
 8016d6c:	00573231 	subseq	r3, r7, r1, lsr r2
 8016d70:	31534355 	cmpcc	r3, r5, asr r3
 8016d74:	00333039 	eorseq	r3, r3, r9, lsr r0
 8016d78:	32534355 	subscc	r4, r3, #1409286145	; 0x54000001
 8016d7c:	00333039 	eorseq	r3, r3, r9, lsr r0
 8016d80:	38385343 	ldmdacc	r8!, {r0, r1, r6, r8, r9, ip, lr}
 8016d84:	00003231 	andeq	r3, r0, r1, lsr r2
 8016d88:	31415041 	cmpcc	r1, r1, asr #32
 8016d8c:	00003230 	andeq	r3, r0, r0, lsr r2
 8016d90:	38394b53 	ldmdacc	r9!, {r0, r1, r4, r6, r8, r9, fp, lr}
 8016d94:	00003232 	andeq	r3, r0, r2, lsr r2
 8016d98:	31383950 	teqcc	r8, r0, asr r9
 8016d9c:	00000033 	andeq	r0, r0, r3, lsr r0

08016da0 <s_patternName>:
 8016da0:	656e6f4e 	strbvs	r6, [lr, #-3918]!	; 0xfffff0b2
	...
 8016dac:	61520000 	cmpvs	r2, r0
 8016db0:	6f626e69 	svcvs	0x00626e69
 8016db4:	79632077 	stmdbvc	r3!, {r0, r1, r2, r4, r5, r6, sp}^
 8016db8:	00656c63 	rsbeq	r6, r5, r3, ror #24
 8016dbc:	61656854 	cmnvs	r5, r4, asr r8
 8016dc0:	20726574 	rsbscs	r6, r2, r4, ror r5
 8016dc4:	73616863 	cmnvc	r1, #6488064	; 0x630000
 8016dc8:	6f430065 	svcvs	0x00430065
 8016dcc:	72756f6c 	rsbsvc	r6, r5, #108, 30	; 0x1b0
 8016dd0:	70697720 	rsbvc	r7, r9, r0, lsr #14
 8016dd4:	00000065 	andeq	r0, r0, r5, rrx
 8016dd8:	6e616353 	mcrvs	3, 3, r6, cr1, cr3, {2}
 8016ddc:	0072656e 	rsbseq	r6, r2, lr, ror #10
 8016de0:	00000000 	andeq	r0, r0, r0
 8016de4:	61460000 	mrsvs	r0, (UNDEF: 70)
 8016de8:	00006564 	andeq	r6, r0, r4, ror #10
	...

08016df4 <pixel::s_GPIO_PINs>:
 8016df4:	00003fc0 	andeq	r3, r0, r0, asr #31

08016df8 <s_aStorSize>:
 8016df8:	00000060 	andeq	r0, r0, r0, rrx
 8016dfc:	00000090 	muleq	r0, r0, r0
 8016e00:	00000020 	andeq	r0, r0, r0, lsr #32
 8016e04:	00000040 	andeq	r0, r0, r0, asr #32
 8016e08:	00000060 	andeq	r0, r0, r0, rrx
 8016e0c:	00000040 	andeq	r0, r0, r0, asr #32
 8016e10:	00000020 	andeq	r0, r0, r0, lsr #32
 8016e14:	00000020 	andeq	r0, r0, r0, lsr #32
 8016e18:	000001e0 	andeq	r0, r0, r0, ror #3
 8016e1c:	00000040 	andeq	r0, r0, r0, asr #32
 8016e20:	00000020 	andeq	r0, r0, r0, lsr #32
 8016e24:	00000060 	andeq	r0, r0, r0, rrx
 8016e28:	00000030 	andeq	r0, r0, r0, lsr r0
 8016e2c:	00000020 	andeq	r0, r0, r0, lsr #32
 8016e30:	000003b0 			; <UNDEFINED> instruction: 0x000003b0
 8016e34:	00000030 	andeq	r0, r0, r0, lsr r0
 8016e38:	00000040 	andeq	r0, r0, r0, asr #32
 8016e3c:	00000020 	andeq	r0, r0, r0, lsr #32
 8016e40:	00000060 	andeq	r0, r0, r0, rrx
 8016e44:	00000020 	andeq	r0, r0, r0, lsr #32
 8016e48:	00000400 	andeq	r0, r0, r0, lsl #8
 8016e4c:	00000020 	andeq	r0, r0, r0, lsr #32
 8016e50:	00000020 	andeq	r0, r0, r0, lsr #32
 8016e54:	00000040 	andeq	r0, r0, r0, asr #32
 8016e58:	00000060 	andeq	r0, r0, r0, rrx
 8016e5c:	00000020 	andeq	r0, r0, r0, lsr #32
 8016e60:	00000020 	andeq	r0, r0, r0, lsr #32
 8016e64:	000000c0 	andeq	r0, r0, r0, asr #1

08016e68 <vtable for StoreDisplayUdf>:
	...
 8016e70:	0800e7a1 	stmdaeq	r0, {r0, r5, r7, r8, r9, sl, sp, lr, pc}
 8016e74:	0800e7ed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, r8, r9, sl, sp, lr, pc}
 8016e78:	0800e7c9 	stmdaeq	r0, {r0, r3, r6, r7, r8, r9, sl, sp, lr, pc}
 8016e7c:	0800e7a5 	stmdaeq	r0, {r0, r2, r5, r7, r8, r9, sl, sp, lr, pc}

08016e80 <vtable for StoreNetwork>:
	...
 8016e88:	0800e80d 	stmdaeq	r0, {r0, r2, r3, fp, sp, lr, pc}
 8016e8c:	0800e8f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, fp, sp, lr, pc}
 8016e90:	0800e815 	stmdaeq	r0, {r0, r2, r4, fp, sp, lr, pc}
 8016e94:	0800e905 	stmdaeq	r0, {r0, r2, r8, fp, sp, lr, pc}
 8016e98:	0800e895 	stmdaeq	r0, {r0, r2, r4, r7, fp, sp, lr, pc}
 8016e9c:	0800e869 	stmdaeq	r0, {r0, r3, r5, r6, fp, sp, lr, pc}
 8016ea0:	0800e839 	stmdaeq	r0, {r0, r3, r4, r5, fp, sp, lr, pc}
 8016ea4:	0800e8c1 	stmdaeq	r0, {r0, r6, r7, fp, sp, lr, pc}
 8016ea8:	08008899 	stmdaeq	r0, {r0, r3, r4, r7, fp, pc}
 8016eac:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 8016eb0:	00000000 	andeq	r0, r0, r0
 8016eb4:	0800e80f 	stmdaeq	r0, {r0, r1, r2, r3, fp, sp, lr, pc}
 8016eb8:	0800e8fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, fp, sp, lr, pc}
 8016ebc:	0800e8b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, sp, lr, pc}
 8016ec0:	0800e88d 	stmdaeq	r0, {r0, r2, r3, r7, fp, sp, lr, pc}
 8016ec4:	0800e861 	stmdaeq	r0, {r0, r5, r6, fp, sp, lr, pc}
 8016ec8:	0800e8e9 	stmdaeq	r0, {r0, r3, r5, r6, r7, fp, sp, lr, pc}
 8016ecc:	080088c1 	stmdaeq	r0, {r0, r6, r7, fp, pc}

08016ed0 <vtable for StoreRDMDevice>:
	...
 8016ed8:	0800e93d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r8, fp, sp, lr, pc}
 8016edc:	0800e9ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, fp, sp, lr, pc}
 8016ee0:	0800e945 	stmdaeq	r0, {r0, r2, r6, r8, fp, sp, lr, pc}
 8016ee4:	0800e9c1 	stmdaeq	r0, {r0, r6, r7, r8, fp, sp, lr, pc}
 8016ee8:	0800e969 	stmdaeq	r0, {r0, r3, r5, r6, r8, fp, sp, lr, pc}
 8016eec:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 8016ef0:	00000000 	andeq	r0, r0, r0
 8016ef4:	0800e93f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r8, fp, sp, lr, pc}
 8016ef8:	0800e9b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, r8, fp, sp, lr, pc}
 8016efc:	0800e9a5 	stmdaeq	r0, {r0, r2, r5, r7, r8, fp, sp, lr, pc}

08016f00 <vtable for StoreRemoteConfig>:
	...
 8016f08:	0800e9fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, fp, sp, lr, pc}
 8016f0c:	0800ea49 	stmdaeq	r0, {r0, r3, r6, r9, fp, sp, lr, pc}
 8016f10:	0800ea25 	stmdaeq	r0, {r0, r2, r5, r9, fp, sp, lr, pc}
 8016f14:	0800ea01 	stmdaeq	r0, {r0, r9, fp, sp, lr, pc}

08016f18 <vtable for StorePixelDmx>:
	...
 8016f20:	0800ea69 	stmdaeq	r0, {r0, r3, r5, r6, r9, fp, sp, lr, pc}
 8016f24:	0800ebd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp, sp, lr, pc}
 8016f28:	0800ea71 	stmdaeq	r0, {r0, r4, r5, r6, r9, fp, sp, lr, pc}
 8016f2c:	0800ebe9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r8, r9, fp, sp, lr, pc}
 8016f30:	0800eba1 	stmdaeq	r0, {r0, r5, r7, r8, r9, fp, sp, lr, pc}
 8016f34:	0800eb6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r8, r9, fp, sp, lr, pc}
 8016f38:	0800eb35 	stmdaeq	r0, {r0, r2, r4, r5, r8, r9, fp, sp, lr, pc}
 8016f3c:	0800eafd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r9, fp, sp, lr, pc}
 8016f40:	0800eac9 	stmdaeq	r0, {r0, r3, r6, r7, r9, fp, sp, lr, pc}
 8016f44:	0800ea95 	stmdaeq	r0, {r0, r2, r4, r7, r9, fp, sp, lr, pc}
 8016f48:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 8016f4c:	00000000 	andeq	r0, r0, r0
 8016f50:	0800ea6b 	stmdaeq	r0, {r0, r1, r3, r5, r6, r9, fp, sp, lr, pc}
 8016f54:	0800ebe1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, fp, sp, lr, pc}
 8016f58:	0800ebcd 	stmdaeq	r0, {r0, r2, r3, r6, r7, r8, r9, fp, sp, lr, pc}
 8016f5c:	0800eb99 	stmdaeq	r0, {r0, r3, r4, r7, r8, r9, fp, sp, lr, pc}
 8016f60:	0800eb65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, fp, sp, lr, pc}
 8016f64:	0800eb2d 	stmdaeq	r0, {r0, r2, r3, r5, r8, r9, fp, sp, lr, pc}
 8016f68:	0800eaf5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r9, fp, sp, lr, pc}
 8016f6c:	0800eac1 	stmdaeq	r0, {r0, r6, r7, r9, fp, sp, lr, pc}
 8016f70:	3a434d46 	bcc	90ea490 <__exidx_end+0x10d2b9c>
 8016f74:	74654420 	strbtvc	r4, [r5], #-1056	; 0xfffffbe0
 8016f78:	65746365 	ldrbvs	r6, [r4, #-869]!	; 0xfffffc9b
 8016f7c:	73252064 			; <UNDEFINED> instruction: 0x73252064
 8016f80:	74697720 	strbtvc	r7, [r9], #-1824	; 0xfffff8e0
 8016f84:	6f742068 	svcvs	0x00742068
 8016f88:	206c6174 	rsbcs	r6, ip, r4, ror r1
 8016f8c:	62206425 	eorvs	r6, r0, #620756992	; 0x25000000
 8016f90:	73657479 	cmnvc	r5, #2030043136	; 0x79000000
 8016f94:	64255b20 	strtvs	r5, [r5], #-2848	; 0xfffff4e0
 8016f98:	5d426b20 	vstrpl	d22, [r2, #-128]	; 0xffffff80
 8016f9c:	6374000a 	cmnvs	r4, #10
 8016fa0:	65625f70 	strbvs	r5, [r2, #-3952]!	; 0xfffff090
 8016fa4:	3a6e6967 	bcc	9bb1548 <__exidx_end+0x1b99c54>
 8016fa8:	6f6f7420 	svcvs	0x006f7420
 8016fac:	6e616d20 	cdpvs	13, 6, cr6, cr1, cr0, {1}
 8016fb0:	6f632079 	svcvs	0x00632079
 8016fb4:	63656e6e 	cmnvs	r5, #1760	; 0x6e0
 8016fb8:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8016fbc:	69620073 	stmdbvs	r2!, {r0, r1, r4, r5, r6}^
 8016fc0:	7500646e 	strvc	r6, [r0, #-1134]	; 0xfffffb92
 8016fc4:	6e69626e 	cdpvs	2, 6, cr6, cr9, cr14, {3}
 8016fc8:	41000a64 	tstmi	r0, r4, ror #20
 8016fcc:	6c205052 	stcvs	0, cr5, [r0], #-328	; 0xfffffeb8
 8016fd0:	756b6f6f 	strbvc	r6, [fp, #-3951]!	; 0xfffff091
 8016fd4:	61662070 	smcvs	25088	; 0x6200
 8016fd8:	64656c69 	strbtvs	r6, [r5], #-3177	; 0xfffff397
 8016fdc:	203e2d20 	eorscs	r2, lr, r0, lsr #26
 8016fe0:	61666564 	cmnvs	r6, r4, ror #10
 8016fe4:	20746c75 	rsbscs	r6, r4, r5, ror ip
 8016fe8:	65746167 	ldrbvs	r6, [r4, #-359]!	; 0xfffffe99
 8016fec:	0a796177 	beq	9e6f5d0 <__exidx_end+0x1e57cdc>
 8016ff0:	50524100 	subspl	r4, r2, r0, lsl #2
 8016ff4:	6f6f6c20 	svcvs	0x006f6c20
 8016ff8:	2070756b 	rsbscs	r7, r0, fp, ror #10
 8016ffc:	6c696166 	stfvse	f6, [r9], #-408	; 0xfffffe68
 8017000:	000a6465 	andeq	r6, sl, r5, ror #8

08017004 <NetworkConst::MSG_NETWORK_INIT>:
 8017004:	7774654e 	ldrbvc	r6, [r4, -lr, asr #10]!
 8017008:	206b726f 	rsbcs	r7, fp, pc, ror #4
 801700c:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
 8017010:	34323200 	ldrtcc	r3, [r2], #-512	; 0xfffffe00
 8017014:	302e302e 	eorcc	r3, lr, lr, lsr #32
 8017018:	3135322e 	teqcc	r5, lr, lsr #4
 801701c:	63745f00 	cmnvs	r4, #0, 30
 8017020:	6f6c2e70 	svcvs	0x006c2e70
 8017024:	006c6163 	rsbeq	r6, ip, r3, ror #2
 8017028:	7265735f 	rsbvc	r7, r5, #2080374785	; 0x7c000001
 801702c:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
 8017030:	645f2e73 	ldrbvs	r2, [pc], #-3699	; 8017038 <NetworkConst::MSG_NETWORK_INIT+0x34>
 8017034:	732d736e 			; <UNDEFINED> instruction: 0x732d736e
 8017038:	755f2e64 	ldrbvc	r2, [pc, #-3684]	; 80161dc <RDMHandler::PID_DEFINITIONS+0x1e8>
 801703c:	6c2e7064 	stcvs	0, cr7, [lr], #-400	; 0xfffffe70
 8017040:	6c61636f 	stclvs	3, cr6, [r1], #-444	; 0xfffffe44
 8017044:	4e446d00 	cdpmi	13, 4, cr6, cr4, cr0, {0}
 8017048:	20000a53 	andcs	r0, r0, r3, asr sl
 801704c:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 8017050:	6e6e7572 	mcrvs	5, 3, r7, cr14, cr2, {3}
 8017054:	0a676e69 	beq	99f2a00 <__exidx_end+0x19db10c>
 8017058:	614e2000 	mrsvs	r2, (UNDEF: 78)
 801705c:	3a20656d 	bcc	8830618 <__exidx_end+0x818d24>
 8017060:	0a732520 	beq	9ce04e8 <__exidx_end+0x1cc8bf4>
 8017064:	73252000 			; <UNDEFINED> instruction: 0x73252000
 8017068:	20642520 	rsbcs	r2, r4, r0, lsr #10
 801706c:	000a7325 	andeq	r7, sl, r5, lsr #6
 8017070:	30687465 	rsbcc	r7, r8, r5, ror #8
 8017074:	67696700 	strbvs	r6, [r9, -r0, lsl #14]!
 8017078:	76656461 	strbtvc	r6, [r5], -r1, ror #8
 801707c:	5f656369 	svcpl	0x00656369
 8017080:	74654e00 	strbtvc	r4, [r5], #-3584	; 0xfffff200
 8017084:	6b726f77 	blvs	9cb2e68 <__exidx_end+0x1c9b574>
 8017088:	4820000a 	stmdami	r0!, {r1, r3}
 801708c:	6e74736f 	cdpvs	3, 7, cr7, cr4, cr15, {3}
 8017090:	20656d61 	rsbcs	r6, r5, r1, ror #26
 8017094:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8017098:	20000a73 	andcs	r0, r0, r3, ror sl
 801709c:	614e6649 	cmpvs	lr, r9, asr #12
 80170a0:	2020656d 	eorcs	r6, r0, sp, ror #10
 80170a4:	203a2020 	eorscs	r2, sl, r0, lsr #32
 80170a8:	203a6425 	eorscs	r6, sl, r5, lsr #8
 80170ac:	000a7325 	andeq	r7, sl, r5, lsr #6
 80170b0:	656e4920 	strbvs	r4, [lr, #-2336]!	; 0xfffff6e0
 80170b4:	20202074 	eorcs	r2, r0, r4, ror r0
 80170b8:	3a202020 	bcc	881f140 <__exidx_end+0x80784c>
 80170bc:	2e642520 	cdpcs	5, 6, cr2, cr4, cr0, {1}
 80170c0:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80170c4:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80170c8:	0a64252f 	beq	992058c <__exidx_end+0x1908c98>
 80170cc:	654e2000 	strbvs	r2, [lr, #-0]
 80170d0:	73616d74 	cmnvc	r1, #116, 26	; 0x1d00
 80170d4:	2020206b 	eorcs	r2, r0, fp, rrx
 80170d8:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 80170dc:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 80170e0:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80170e4:	20000a64 	andcs	r0, r0, r4, ror #20
 80170e8:	65746147 	ldrbvs	r6, [r4, #-327]!	; 0xfffffeb9
 80170ec:	20796177 	rsbscs	r6, r9, r7, ror r1
 80170f0:	203a2020 	eorscs	r2, sl, r0, lsr #32
 80170f4:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80170f8:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80170fc:	0a64252e 	beq	99205bc <__exidx_end+0x1908cc8>
 8017100:	72422000 	subvc	r2, r2, #0
 8017104:	6364616f 	cmnvs	r4, #-1073741797	; 0xc000001b
 8017108:	20747361 	rsbscs	r7, r4, r1, ror #6
 801710c:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8017110:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8017114:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8017118:	20000a64 	andcs	r0, r0, r4, ror #20
 801711c:	2063614d 	rsbcs	r6, r3, sp, asr #2
 8017120:	20202020 	eorcs	r2, r0, r0, lsr #32
 8017124:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8017128:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 801712c:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 8017130:	2e253a78 			; <UNDEFINED> instruction: 0x2e253a78
 8017134:	253a7832 	ldrcs	r7, [sl, #-2098]!	; 0xfffff7ce
 8017138:	3a78322e 	bcc	9e239f8 <__exidx_end+0x1e0c104>
 801713c:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8017140:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 8017144:	20000a78 	andcs	r0, r0, r8, ror sl
 8017148:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
 801714c:	20202020 	eorcs	r2, r0, r0, lsr #32
 8017150:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8017154:	000a6325 	andeq	r6, sl, r5, lsr #6
 8017158:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
 801715c:	49206369 	stmdbmi	r0!, {r0, r3, r5, r6, r8, r9, sp, lr}
 8017160:	 	rsbvc	r0, r9, r0, asr r0

08017162 <NetworkParamsConst::IP_ADDRESS>:
 8017162:	615f7069 	cmpvs	pc, r9, rrx
 8017166:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0xfffffb9c
 801716a:	 	strvs	r7, [r0], #-883	; 0xfffffc8d

0801716d <NetworkParamsConst::DEFAULT_GATEWAY>:
 801716d:	61666564 	cmnvs	r6, r4, ror #10
 8017171:	5f746c75 	svcpl	0x00746c75
 8017175:	65746167 	ldrbvs	r6, [r4, #-359]!	; 0xfffffe99
 8017179:	00796177 	rsbseq	r6, r9, r7, ror r1

0801717d <NetworkParamsConst::DHCP_RETRY_TIME>:
 801717d:	70636864 	rsbvc	r6, r3, r4, ror #16
 8017181:	7465725f 	strbtvc	r7, [r5], #-607	; 0xfffffda1
 8017185:	745f7972 	ldrbvc	r7, [pc], #-2418	; 801718d <NetworkParamsConst::HOSTNAME>
 8017189:	00656d69 	rsbeq	r6, r5, r9, ror #26

0801718d <NetworkParamsConst::HOSTNAME>:
 801718d:	74736f68 	ldrbtvc	r6, [r3], #-3944	; 0xfffff098
 8017191:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

08017196 <NetworkParamsConst::NET_MASK>:
 8017196:	5f74656e 	svcpl	0x0074656e
 801719a:	6b73616d 	blvs	9cef756 <__exidx_end+0x1cd7e62>
	...

0801719f <NetworkParamsConst::USE_DHCP>:
 801719f:	5f657375 	svcpl	0x00657375
 80171a3:	70636864 	rsbvc	r6, r3, r4, ror #16
	...

080171a8 <NetworkParamsConst::FILE_NAME>:
 80171a8:	7774656e 	ldrbvc	r6, [r4, -lr, ror #10]!
 80171ac:	2e6b726f 	cdpcs	2, 6, cr7, cr11, cr15, {3}
 80171b0:	00747874 	rsbseq	r7, r4, r4, ror r8
 80171b4:	65687445 	strbvs	r7, [r8, #-1093]!	; 0xfffffbbb
 80171b8:	74656e72 	strbtvc	r6, [r5], #-3698	; 0xfffff18e
 80171bc:	61747320 	cmnvs	r4, r0, lsr #6
 80171c0:	25007472 	strcs	r7, [r0, #-1138]	; 0xfffffb8e
 80171c4:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80171c8:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 80171cc:	252f6425 	strcs	r6, [pc, #-1061]!	; 8016daf <s_patternName+0xf>
 80171d0:	63252064 			; <UNDEFINED> instruction: 0x63252064
 80171d4:	203a4e00 	eorscs	r4, sl, r0, lsl #28
 80171d8:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80171dc:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80171e0:	0064252e 	rsbeq	r2, r4, lr, lsr #10
 80171e4:	25203a47 	strcs	r3, [r0, #-2631]!	; 0xfffff5b9
 80171e8:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80171ec:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 80171f0:	46006425 	strmi	r6, [r0], -r5, lsr #8
 80171f4:	776d7269 	strbvc	r7, [sp, -r9, ror #4]!
 80171f8:	20657261 	rsbcs	r7, r5, r1, ror #4
 80171fc:	2a2e2556 	bcs	8ba075c <__exidx_end+0xb88e68>
 8017200:	48440073 	stmdami	r4, {r0, r1, r4, r5, r6}^
 8017204:	72205043 	eorvc	r5, r0, #67	; 0x43
 8017208:	77656e65 	strbvc	r6, [r5, -r5, ror #28]!
 801720c:	00676e69 	rsbeq	r6, r7, r9, ror #28
 8017210:	50434844 	subpl	r4, r3, r4, asr #16
 8017214:	74657220 	strbtvc	r7, [r5], #-544	; 0xfffffde0
 8017218:	6e697972 			; <UNDEFINED> instruction: 0x6e697972
 801721c:	654e0067 	strbvs	r0, [lr, #-103]	; 0xffffff99
 8017220:	726f7774 	rsbvc	r7, pc, #116, 14	; 0x1d00000
 8017224:	6873206b 	ldmdavs	r3!, {r0, r1, r3, r5, r6, sp}^
 8017228:	6f647475 	svcvs	0x00647475
 801722c:	00006e77 	andeq	r6, r0, r7, ror lr

08017230 <pArray>:
 8017230:	080172c4 	stmdaeq	r1, {r2, r6, r7, r9, ip, sp, lr}
 8017234:	08017280 	stmdaeq	r1, {r7, r9, ip, sp, lr}
 8017238:	08017162 	stmdaeq	r1, {r1, r5, r6, r8, ip, sp, lr}
 801723c:	080172ca 	stmdaeq	r1, {r1, r3, r6, r7, r9, ip, sp, lr}
 8017240:	080174ac 	stmdaeq	r1, {r2, r3, r5, r7, sl, ip, sp, lr}
 8017244:	0801728b 	stmdaeq	r1, {r0, r1, r3, r7, r9, ip, sp, lr}
 8017248:	08015393 	stmdaeq	r1, {r0, r1, r4, r7, r8, r9, ip, lr}
 801724c:	0801718d 	stmdaeq	r1, {r0, r2, r3, r7, r8, ip, sp, lr}
 8017250:	080173ba 	stmdaeq	r1, {r1, r3, r4, r5, r7, r8, r9, ip, sp, lr}
 8017254:	080173ca 	stmdaeq	r1, {r1, r3, r6, r7, r8, r9, ip, sp, lr}
 8017258:	080173da 	stmdaeq	r1, {r1, r3, r4, r6, r7, r8, r9, ip, sp, lr}
 801725c:	080173ea 	stmdaeq	r1, {r1, r3, r5, r6, r7, r8, r9, ip, sp, lr}
 8017260:	08017196 	stmdaeq	r1, {r1, r2, r4, r7, r8, ip, sp, lr}
 8017264:	0801749a 	stmdaeq	r1, {r1, r3, r4, r7, sl, ip, sp, lr}
 8017268:	08015393 	stmdaeq	r1, {r0, r1, r4, r7, r8, r9, ip, lr}
 801726c:	08015393 	stmdaeq	r1, {r0, r1, r4, r7, r8, r9, ip, lr}
 8017270:	08015393 	stmdaeq	r1, {r0, r1, r4, r7, r8, r9, ip, lr}
 8017274:	08015393 	stmdaeq	r1, {r0, r1, r4, r7, r8, r9, ip, lr}
 8017278:	0801716d 	stmdaeq	r1, {r0, r2, r3, r5, r6, r8, ip, sp, lr}
 801727c:	08017298 	stmdaeq	r1, {r3, r4, r7, r9, ip, sp, lr}

08017280 <DisplayUdfParamsConst::BOARD_NAME>:
 8017280:	72616f62 	rsbvc	r6, r1, #392	; 0x188
 8017284:	616e5f64 	cmnvs	lr, r4, ror #30
 8017288:	 	tstvs	r0, sp, ror #10

0801728b <DisplayUdfParamsConst::ACTIVE_PORTS>:
 801728b:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 801728f:	705f6576 	subsvc	r6, pc, r6, ror r5	; <UNPREDICTABLE>
 8017293:	7374726f 	cmnvc	r4, #-268435450	; 0xf0000006
	...

08017298 <DisplayUdfParamsConst::DMX_DIRECTION>:
 8017298:	5f786d64 	svcpl	0x00786d64
 801729c:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 80172a0:	6f697463 	svcvs	0x00697463
 80172a4:	 	ldclvs	0, cr0, [r3], #-440	; 0xfffffe48

080172a6 <DisplayUdfParamsConst::SLEEP_TIMEOUT>:
 80172a6:	65656c73 	strbvs	r6, [r5, #-3187]!	; 0xfffff38d
 80172aa:	69745f70 	ldmdbvs	r4!, {r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 80172ae:	756f656d 	strbvc	r6, [pc, #-1389]!	; 8016d49 <PixelType::TYPES+0x19>
 80172b2:	 	stclvs	0, cr0, [r6], #-464	; 0xfffffe30

080172b4 <DisplayUdfParamsConst::FLIP_VERTICALLY>:
 80172b4:	70696c66 	rsbvc	r6, r9, r6, ror #24
 80172b8:	7265765f 	rsbvc	r7, r5, #99614720	; 0x5f00000
 80172bc:	61636974 	smcvs	13972	; 0x3694
 80172c0:	00796c6c 	rsbseq	r6, r9, ip, ror #24

080172c4 <DisplayUdfParamsConst::TITLE>:
 80172c4:	6c746974 			; <UNDEFINED> instruction: 0x6c746974
 80172c8:	 	ldrbvs	r0, [r6, #-101]!	; 0xffffff9b

080172ca <DisplayUdfParamsConst::VERSION>:
 80172ca:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 80172ce:	006e6f69 	rsbeq	r6, lr, r9, ror #30

080172d2 <DisplayUdfParamsConst::FILE_NAME>:
 80172d2:	70736964 	rsbsvc	r6, r3, r4, ror #18
 80172d6:	2e79616c 	rpwcsez	f6, f1, #4.0
 80172da:	00747874 	rsbseq	r7, r4, r4, ror r8

080172de <DisplayUdfParamsConst::INTENSITY>:
 80172de:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
 80172e2:	7469736e 	strbtvc	r7, [r9], #-878	; 0xfffffc92
 80172e6:	 	cmnvs	r1, #121	; 0x79

080172e8 <DevicesParamsConst::ACTIVE_OUT>:
 80172e8:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 80172ec:	6f5f6576 	svcvs	0x005f6576
 80172f0:	 	smlsdxvs	r0, r5, r4, r7

080172f3 <DevicesParamsConst::GAMMA_VALUE>:
 80172f3:	6d6d6167 	stfvse	f6, [sp, #-412]!	; 0xfffffe64
 80172f7:	61765f61 	cmnvs	r6, r1, ror #30
 80172fb:	0065756c 	rsbeq	r7, r5, ip, ror #10

080172ff <DevicesParamsConst::SPI_SPEED_HZ>:
 80172ff:	636f6c63 	cmnvs	pc, #25344	; 0x6300
 8017303:	70735f6b 	rsbsvc	r5, r3, fp, ror #30
 8017307:	5f646565 	svcpl	0x00646565
 801730b:	 	strvc	r7, [r0], #-2664	; 0xfffff598

0801730e <DevicesParamsConst::TEST_PATTERN>:
 801730e:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
 8017312:	7461705f 	strbtvc	r7, [r1], #-95	; 0xffffffa1
 8017316:	6e726574 	mrcvs	5, 3, r6, cr2, cr4, {3}
	...

0801731b <DevicesParamsConst::GROUPING_COUNT>:
 801731b:	5f64656c 	svcpl	0x0064656c
 801731f:	756f7267 	strbvc	r7, [pc, #-615]!	; 80170c0 <NetworkConst::MSG_NETWORK_INIT+0xbc>
 8017323:	6f635f70 	svcvs	0x00635f70
 8017327:	00746e75 	rsbseq	r6, r4, r5, ror lr

0801732b <DevicesParamsConst::GAMMA_CORRECTION>:
 801732b:	6d6d6167 	stfvse	f6, [sp, #-412]!	; 0xfffffe64
 801732f:	6f635f61 	svcvs	0x00635f61
 8017333:	63657272 	cmnvs	r5, #536870919	; 0x20000007
 8017337:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
	...

0801733c <DevicesParamsConst::GLOBAL_BRIGHTNESS>:
 801733c:	626f6c67 	rsbvs	r6, pc, #26368	; 0x6700
 8017340:	625f6c61 	subsvs	r6, pc, #24832	; 0x6100
 8017344:	68676972 	stmdavs	r7!, {r1, r4, r5, r6, r8, fp, sp, lr}^
 8017348:	73656e74 	cmnvc	r5, #116, 28	; 0x740
 801734c:	 	strbvs	r0, [ip, #-115]!	; 0xffffff8d

0801734e <DevicesParamsConst::MAP>:
 801734e:	5f64656c 	svcpl	0x0064656c
 8017352:	5f626772 	svcpl	0x00626772
 8017356:	7070616d 	rsbsvc	r6, r0, sp, ror #2
 801735a:	00676e69 	rsbeq	r6, r7, r9, ror #28

0801735e <DevicesParamsConst::TYPE>:
 801735e:	5f64656c 	svcpl	0x0064656c
 8017362:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
	...

08017367 <DevicesParamsConst::COUNT>:
 8017367:	5f64656c 	svcpl	0x0064656c
 801736b:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 801736f:	 	strbvs	r0, [ip, #-116]!	; 0xffffff8c

08017371 <DevicesParamsConst::LED_T0H>:
 8017371:	5f64656c 	svcpl	0x0064656c
 8017375:	00683074 	rsbeq	r3, r8, r4, ror r0

08017379 <DevicesParamsConst::LED_T1H>:
 8017379:	5f64656c 	svcpl	0x0064656c
 801737d:	00683174 	rsbeq	r3, r8, r4, ror r1

08017381 <DevicesParamsConst::FILE_NAME>:
 8017381:	69766564 	ldmdbvs	r6!, {r2, r5, r6, r8, sl, sp, lr}^
 8017385:	2e736563 	cdpcs	5, 7, cr6, cr3, cr3, {3}
 8017389:	00747874 	rsbseq	r7, r4, r4, ror r8
 801738d:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 8017391:	6425223a 	strtvs	r2, [r5], #-570	; 0xfffffdc6
 8017395:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8017399:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801739d:	002c2264 	eoreq	r2, ip, r4, ror #4
 80173a1:	3d732523 	cfldr64cc	mvdx2, [r3, #-140]!	; 0xffffff74
 80173a5:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80173a9:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80173ad:	0a64252e 	beq	992086d <__exidx_end+0x1908f79>
 80173b1:	25202300 	strcs	r2, [r0, #-768]!	; 0xfffffd00
 80173b5:	0a232073 	beq	88df589 <__exidx_end+0x8c7c95>
	...

080173ba <LightSetParamsConst::UNIVERSE_PORT>:
 80173ba:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 80173be:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 80173c2:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 80173c6:	00615f74 	rsbeq	r5, r1, r4, ror pc
 80173ca:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 80173ce:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 80173d2:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 80173d6:	00625f74 	rsbeq	r5, r2, r4, ror pc
 80173da:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 80173de:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 80173e2:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 80173e6:	00635f74 	rsbeq	r5, r3, r4, ror pc
 80173ea:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 80173ee:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 80173f2:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 80173f6:	00645f74 	rsbeq	r5, r4, r4, ror pc

080173fa <LightSetParamsConst::START_UNI_PORT>:
 80173fa:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 80173fe:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 8017402:	6f705f69 	svcvs	0x00705f69
 8017406:	315f7472 	cmpcc	pc, r2, ror r4	; <UNPREDICTABLE>
 801740a:	00000000 	andeq	r0, r0, r0
 801740e:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8017412:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 8017416:	6f705f69 	svcvs	0x00705f69
 801741a:	325f7472 	subscc	r7, pc, #1912602624	; 0x72000000
 801741e:	00000000 	andeq	r0, r0, r0
 8017422:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8017426:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801742a:	6f705f69 	svcvs	0x00705f69
 801742e:	335f7472 	cmpcc	pc, #1912602624	; 0x72000000
 8017432:	00000000 	andeq	r0, r0, r0
 8017436:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801743a:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801743e:	6f705f69 	svcvs	0x00705f69
 8017442:	345f7472 	ldrbcc	r7, [pc], #-1138	; 801744a <LightSetParamsConst::START_UNI_PORT+0x50>
 8017446:	00000000 	andeq	r0, r0, r0
 801744a:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801744e:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 8017452:	6f705f69 	svcvs	0x00705f69
 8017456:	355f7472 	ldrbcc	r7, [pc, #-1138]	; 8016fec <vtable for StorePixelDmx+0xd4>
 801745a:	00000000 	andeq	r0, r0, r0
 801745e:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8017462:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 8017466:	6f705f69 	svcvs	0x00705f69
 801746a:	365f7472 			; <UNDEFINED> instruction: 0x365f7472
 801746e:	00000000 	andeq	r0, r0, r0
 8017472:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8017476:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801747a:	6f705f69 	svcvs	0x00705f69
 801747e:	375f7472 			; <UNDEFINED> instruction: 0x375f7472
 8017482:	00000000 	andeq	r0, r0, r0
 8017486:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801748a:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801748e:	6f705f69 	svcvs	0x00705f69
 8017492:	385f7472 	ldmdacc	pc, {r1, r4, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
 8017496:	00000000 	andeq	r0, r0, r0

0801749a <LightSetParamsConst::DMX_START_ADDRESS>:
 801749a:	5f786d64 	svcpl	0x00786d64
 801749e:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 80174a2:	64615f74 	strbtvs	r5, [r1], #-3956	; 0xfffff08c
 80174a6:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
 80174aa:	 	mrcvs	0, 3, r0, cr5, cr3, {3}

080174ac <LightSetParamsConst::UNIVERSE>:
 80174ac:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 80174b0:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 80174b4:	206f4e00 	rsbcs	r4, pc, r0, lsl #28
 80174b8:	70736964 	rsbsvc	r6, r3, r4, ror #18
 80174bc:	2079616c 	rsbscs	r6, r9, ip, ror #2
 80174c0:	6e756f66 	cdpvs	15, 7, cr6, cr5, cr6, {3}
 80174c4:	48530064 	ldmdami	r3, {r2, r5, r6}^
 80174c8:	36303131 			; <UNDEFINED> instruction: 0x36303131
 80174cc:	44535300 	ldrbmi	r5, [r3], #-768	; 0xfffffd00
 80174d0:	36303331 			; <UNDEFINED> instruction: 0x36303331
 80174d4:	20732500 	rsbscs	r2, r3, r0, lsl #10
 80174d8:	2c642528 	cfstr64cs	mvdx2, [r4], #-160	; 0xffffff60
 80174dc:	0a296425 	beq	8a70578 <__exidx_end+0xa58c84>
 80174e0:	eeaa4000 	cdp	0, 10, cr4, cr10, cr0, {0}
 80174e4:	0000eeaa 	andeq	lr, r0, sl, lsr #29

080174e8 <_OledFont8x6>:
 80174e8:	00000040 	andeq	r0, r0, r0, asr #32
 80174ec:	40000000 	andmi	r0, r0, r0
 80174f0:	005f0000 	subseq	r0, pc, r0
 80174f4:	00400000 	subeq	r0, r0, r0
 80174f8:	00070007 	andeq	r0, r7, r7
 80174fc:	7f144000 	svcvc	0x00144000
 8017500:	00147f14 	andseq	r7, r4, r4, lsl pc
 8017504:	7f2a2440 	svcvc	0x002a2440
 8017508:	4000122a 	andmi	r1, r0, sl, lsr #4
 801750c:	64081323 	strvs	r1, [r8], #-803	; 0xfffffcdd
 8017510:	36400062 	strbcc	r0, [r0], -r2, rrx
 8017514:	50205649 	eorpl	r5, r0, r9, asr #12
 8017518:	08004000 	stmdaeq	r0, {lr}
 801751c:	00000307 	andeq	r0, r0, r7, lsl #6
 8017520:	221c0040 	andscs	r0, ip, #64	; 0x40
 8017524:	40000041 	andmi	r0, r0, r1, asr #32
 8017528:	1c224100 	stfnes	f4, [r2], #-0
 801752c:	2a400000 	bcs	9017534 <__exidx_end+0xfffc40>
 8017530:	2a1c7f1c 	bcs	87371a8 <__exidx_end+0x71f8b4>
 8017534:	08084000 	stmdaeq	r8, {lr}
 8017538:	0008083e 	andeq	r0, r8, lr, lsr r8
 801753c:	70800040 	addvc	r0, r0, r0, asr #32
 8017540:	40000030 	andmi	r0, r0, r0, lsr r0
 8017544:	08080808 	stmdaeq	r8, {r3, fp}
 8017548:	00400008 	subeq	r0, r0, r8
 801754c:	00606000 	rsbeq	r6, r0, r0
 8017550:	10204000 	eorne	r4, r0, r0
 8017554:	00020408 	andeq	r0, r2, r8, lsl #8
 8017558:	49513e40 	ldmdbmi	r1, {r6, r9, sl, fp, ip, sp}^
 801755c:	40003e45 	andmi	r3, r0, r5, asr #28
 8017560:	407f4200 	rsbsmi	r4, pc, r0, lsl #4
 8017564:	72400000 	subvc	r0, r0, #0
 8017568:	46494949 	strbmi	r4, [r9], -r9, asr #18
 801756c:	41214000 			; <UNDEFINED> instruction: 0x41214000
 8017570:	00334d49 	eorseq	r4, r3, r9, asr #26
 8017574:	12141840 	andsne	r1, r4, #64, 16	; 0x400000
 8017578:	4000107f 	andmi	r1, r0, pc, ror r0
 801757c:	45454527 	strbmi	r4, [r5, #-1319]	; 0xfffffad9
 8017580:	3c400039 	mcrrcc	0, 3, r0, r0, cr9
 8017584:	3149494a 	cmpcc	r9, sl, asr #18
 8017588:	21414000 	mrscs	r4, (UNDEF: 65)
 801758c:	00070911 	andeq	r0, r7, r1, lsl r9
 8017590:	49493640 	stmdbmi	r9, {r6, r9, sl, ip, sp}^
 8017594:	40003649 	andmi	r3, r0, r9, asr #12
 8017598:	29494946 	stmdbcs	r9, {r1, r2, r6, r8, fp, lr}^
 801759c:	0040001e 	subeq	r0, r0, lr, lsl r0
 80175a0:	00001400 	andeq	r1, r0, r0, lsl #8
 80175a4:	40004000 	andmi	r4, r0, r0
 80175a8:	00000034 	andeq	r0, r0, r4, lsr r0
 80175ac:	14080040 	strne	r0, [r8], #-64	; 0xffffffc0
 80175b0:	40004122 	andmi	r4, r0, r2, lsr #2
 80175b4:	14141414 	ldrne	r1, [r4], #-1044	; 0xfffffbec
 80175b8:	00400014 	subeq	r0, r0, r4, lsl r0
 80175bc:	08142241 	ldmdaeq	r4, {r0, r6, r9, sp}
 80175c0:	01024000 	mrseq	r4, (UNDEF: 2)
 80175c4:	00060959 	andeq	r0, r6, r9, asr r9
 80175c8:	5d413e40 	stclpl	14, cr3, [r1, #-256]	; 0xffffff00
 80175cc:	40004e59 	andmi	r4, r0, r9, asr lr
 80175d0:	1211127c 	andsne	r1, r1, #124, 4	; 0xc0000007
 80175d4:	7f40007c 	svcvc	0x0040007c
 80175d8:	36494949 	strbcc	r4, [r9], -r9, asr #18
 80175dc:	413e4000 	teqmi	lr, r0
 80175e0:	00224141 	eoreq	r4, r2, r1, asr #2
 80175e4:	41417f40 	cmpmi	r1, r0, asr #30
 80175e8:	40003e41 	andmi	r3, r0, r1, asr #28
 80175ec:	4949497f 	stmdbmi	r9, {r0, r1, r2, r3, r4, r5, r6, r8, fp, lr}^
 80175f0:	7f400041 	svcvc	0x00400041
 80175f4:	01090909 	tsteq	r9, r9, lsl #18
 80175f8:	413e4000 	teqmi	lr, r0
 80175fc:	00735141 	rsbseq	r5, r3, r1, asr #2
 8017600:	08087f40 	stmdaeq	r8, {r6, r8, r9, sl, fp, ip, sp, lr}
 8017604:	40007f08 	andmi	r7, r0, r8, lsl #30
 8017608:	417f4100 	cmnmi	pc, r0, lsl #2
 801760c:	20400000 	subcs	r0, r0, r0
 8017610:	013f4140 	teqeq	pc, r0, asr #2
 8017614:	087f4000 	ldmdaeq	pc!, {lr}^	; <UNPREDICTABLE>
 8017618:	00412214 	subeq	r2, r1, r4, lsl r2
 801761c:	40407f40 	submi	r7, r0, r0, asr #30
 8017620:	40004040 	andmi	r4, r0, r0, asr #32
 8017624:	021c027f 	andseq	r0, ip, #-268435449	; 0xf0000007
 8017628:	7f40007f 	svcvc	0x0040007f
 801762c:	7f100804 	svcvc	0x00100804
 8017630:	413e4000 	teqmi	lr, r0
 8017634:	003e4141 	eorseq	r4, lr, r1, asr #2
 8017638:	09097f40 	stmdbeq	r9, {r6, r8, r9, sl, fp, ip, sp, lr}
 801763c:	40000609 	andmi	r0, r0, r9, lsl #12
 8017640:	2151413e 	cmpcs	r1, lr, lsr r1
 8017644:	7f40005e 	svcvc	0x0040005e
 8017648:	46291909 	strtmi	r1, [r9], -r9, lsl #18
 801764c:	49264000 	stmdbmi	r6!, {lr}
 8017650:	00324949 	eorseq	r4, r2, r9, asr #18
 8017654:	7f010340 	svcvc	0x00010340
 8017658:	40000301 	andmi	r0, r0, r1, lsl #6
 801765c:	4040403f 	submi	r4, r0, pc, lsr r0
 8017660:	1f40003f 	svcne	0x0040003f
 8017664:	1f204020 	svcne	0x00204020
 8017668:	403f4000 	eorsmi	r4, pc, r0
 801766c:	003f4038 	eorseq	r4, pc, r8, lsr r0	; <UNPREDICTABLE>
 8017670:	08146340 	ldmdaeq	r4, {r6, r8, r9, sp, lr}
 8017674:	40006314 	andmi	r6, r0, r4, lsl r3
 8017678:	04780403 	ldrbteq	r0, [r8], #-1027	; 0xfffffbfd
 801767c:	61400003 	cmpvs	r0, r3
 8017680:	434d4959 	movtmi	r4, #55641	; 0xd959
 8017684:	7f004000 	svcvc	0x00004000
 8017688:	00414141 	subeq	r4, r1, r1, asr #2
 801768c:	08040240 	stmdaeq	r4, {r6, r9}
 8017690:	40002010 	andmi	r2, r0, r0, lsl r0
 8017694:	41414100 	mrsmi	r4, (UNDEF: 81)
 8017698:	0440007f 	strbeq	r0, [r0], #-127	; 0xffffff81
 801769c:	04020102 	streq	r0, [r2], #-258	; 0xfffffefe
 80176a0:	40404000 	submi	r4, r0, r0
 80176a4:	00404040 	subeq	r4, r0, r0, asr #32
 80176a8:	07030040 	streq	r0, [r3, -r0, asr #32]
 80176ac:	40000008 	andmi	r0, r0, r8
 80176b0:	78545420 	ldmdavc	r4, {r5, sl, ip, lr}^
 80176b4:	7f400040 	svcvc	0x00400040
 80176b8:	38444428 	stmdacc	r4, {r3, r5, sl, lr}^
 80176bc:	44384000 	ldrtmi	r4, [r8], #-0
 80176c0:	00284444 	eoreq	r4, r8, r4, asr #8
 80176c4:	44443840 	strbmi	r3, [r4], #-2112	; 0xfffff7c0
 80176c8:	40007f28 	andmi	r7, r0, r8, lsr #30
 80176cc:	54545438 	ldrbpl	r5, [r4], #-1080	; 0xfffffbc8
 80176d0:	00400018 	subeq	r0, r0, r8, lsl r0
 80176d4:	02097e08 	andeq	r7, r9, #8, 28	; 0x80
 80176d8:	a4184000 	ldrge	r4, [r8], #-0
 80176dc:	00789ca4 	rsbseq	r9, r8, r4, lsr #25
 80176e0:	04087f40 	streq	r7, [r8], #-3904	; 0xfffff0c0
 80176e4:	40007804 	andmi	r7, r0, r4, lsl #16
 80176e8:	407d4400 	rsbsmi	r4, sp, r0, lsl #8
 80176ec:	20400000 	subcs	r0, r0, r0
 80176f0:	003d4040 	eorseq	r4, sp, r0, asr #32
 80176f4:	107f4000 	rsbsne	r4, pc, r0
 80176f8:	00004428 	andeq	r4, r0, r8, lsr #8
 80176fc:	7f410040 	svcvc	0x00410040
 8017700:	40000040 	andmi	r0, r0, r0, asr #32
 8017704:	0478047c 	ldrbteq	r0, [r8], #-1148	; 0xfffffb84
 8017708:	7c400078 	mcrrvc	0, 7, r0, r0, cr8
 801770c:	78040408 	stmdavc	r4, {r3, sl}
 8017710:	44384000 	ldrtmi	r4, [r8], #-0
 8017714:	00384444 	eorseq	r4, r8, r4, asr #8
 8017718:	2418fc40 	ldrcs	pc, [r8], #-3136	; 0xfffff3c0
 801771c:	40001824 	andmi	r1, r0, r4, lsr #16
 8017720:	18242418 	stmdane	r4!, {r3, r4, sl, sp}
 8017724:	7c4000fc 	mcrrvc	0, 15, r0, r0, cr12
 8017728:	08040408 	stmdaeq	r4, {r3, sl}
 801772c:	54484000 	strbpl	r4, [r8], #-0
 8017730:	00245454 	eoreq	r5, r4, r4, asr r4
 8017734:	3f040440 	svccc	0x00040440
 8017738:	40002444 	andmi	r2, r0, r4, asr #8
 801773c:	2040403c 	subcs	r4, r0, ip, lsr r0
 8017740:	1c40007c 	mcrrne	0, 7, r0, r0, cr12
 8017744:	1c204020 	stcne	0, cr4, [r0], #-128	; 0xffffff80
 8017748:	403c4000 	eorsmi	r4, ip, r0
 801774c:	003c4030 	eorseq	r4, ip, r0, lsr r0
 8017750:	10284440 	eorne	r4, r8, r0, asr #8
 8017754:	40004428 	andmi	r4, r0, r8, lsr #8
 8017758:	9090904c 	addsls	r9, r0, ip, asr #32
 801775c:	4440007c 	strbmi	r0, [r0], #-124	; 0xffffff84
 8017760:	444c5464 	strbmi	r5, [ip], #-1124	; 0xfffffb9c
 8017764:	08004000 	stmdaeq	r0, {lr}
 8017768:	00004136 	andeq	r4, r0, r6, lsr r1
 801776c:	77000040 	strvc	r0, [r0, -r0, asr #32]
 8017770:	40000000 	andmi	r0, r0, r0
 8017774:	08364100 	ldmdaeq	r6!, {r8, lr}
 8017778:	02400000 	subeq	r0, r0, #0
 801777c:	02040201 	andeq	r0, r4, #268435456	; 0x10000000
 8017780:	263c4000 	ldrtcs	r4, [ip], -r0
 8017784:	003c2623 	eorseq	r2, ip, r3, lsr #12

08017788 <oled_128x32_init>:
 8017788:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 801778c:	4000d31f 	andmi	sp, r0, pc, lsl r3
 8017790:	0020148d 	eoreq	r1, r0, sp, lsl #9
 8017794:	02dac8a1 	sbcseq	ip, sl, #10551296	; 0xa10000
 8017798:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 801779c:	a6a440db 	ssatge	r4, #5, fp, asr #1

080177a0 <oled_128x64_init>:
 80177a0:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 80177a4:	4000d33f 	andmi	sp, r0, pc, lsr r3
 80177a8:	0020148d 	eoreq	r1, r0, sp, lsl #9
 80177ac:	12dac8a1 	sbcsne	ip, sl, #10551296	; 0xa10000
 80177b0:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 80177b4:	a6a440db 	ssatge	r4, #5, fp, asr #1

080177b8 <vtable for Ssd1306>:
	...
 80177c0:	08011e39 	stmdaeq	r1, {r0, r3, r4, r5, r9, sl, fp, ip}
 80177c4:	08011e65 	stmdaeq	r1, {r0, r2, r5, r6, r9, sl, fp, ip}
 80177c8:	08012175 	stmdaeq	r1, {r0, r2, r4, r5, r6, r8, sp}
 80177cc:	080120fd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, sp}
 80177d0:	08011fc9 	stmdaeq	r1, {r0, r3, r6, r7, r8, r9, sl, fp, ip}
 80177d4:	08011e85 	stmdaeq	r1, {r0, r2, r7, r9, sl, fp, ip}
 80177d8:	08011ead 	stmdaeq	r1, {r0, r2, r3, r5, r7, r9, sl, fp, ip}
 80177dc:	08011f9f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r7, r8, r9, sl, fp, ip}
 80177e0:	08011f59 	stmdaeq	r1, {r0, r3, r4, r6, r8, r9, sl, fp, ip}
 80177e4:	08011e3b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r9, sl, fp, ip}
 80177e8:	08012005 	stmdaeq	r1, {r0, r2, sp}
 80177ec:	08012011 	stmdaeq	r1, {r0, r4, sp}
 80177f0:	0801202b 	stmdaeq	r1, {r0, r1, r3, r5, sp}
 80177f4:	08011e3d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r9, sl, fp, ip}
 80177f8:	30345b1b 	eorscc	r5, r4, fp, lsl fp
 80177fc:	5b1b006d 	blpl	86d79b8 <__exidx_end+0x6c00c4>
 8017800:	006d3033 	rsbeq	r3, sp, r3, lsr r0
 8017804:	31335b1b 	teqcc	r3, fp, lsl fp
 8017808:	5b1b006d 	blpl	86d79c4 <__exidx_end+0x6c00d0>
 801780c:	006d3233 	rsbeq	r3, sp, r3, lsr r2
 8017810:	33335b1b 	teqcc	r3, #27648	; 0x6c00
 8017814:	5b1b006d 	blpl	86d79d0 <__exidx_end+0x6c00dc>
 8017818:	006d3933 	rsbeq	r3, sp, r3, lsr r9
 801781c:	2e25565b 	mcrcs	6, 1, r5, cr5, cr11, {2}
 8017820:	205d732a 	subscs	r7, sp, sl, lsr #6
 8017824:	43207325 			; <UNDEFINED> instruction: 0x43207325
 8017828:	69706d6f 	ldmdbvs	r0!, {r0, r1, r2, r3, r5, r6, r8, sl, fp, sp, lr}^
 801782c:	2064656c 	rsbcs	r6, r4, ip, ror #10
 8017830:	25206e6f 	strcs	r6, [r0, #-3695]!	; 0xfffff191
 8017834:	20732a2e 	rsbscs	r2, r3, lr, lsr #20
 8017838:	25207461 	strcs	r7, [r0, #-1121]!	; 0xfffffb9f
 801783c:	00732a2e 	rsbseq	r2, r3, lr, lsr #20
 8017840:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8017844:	203a636f 	eorscs	r6, sl, pc, ror #6
 8017848:	000a7525 	andeq	r7, sl, r5, lsr #10
 801784c:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8017850:	203a636f 	eorscs	r6, sl, pc, ror #6
 8017854:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
 8017858:	62203e20 	eorvs	r3, r0, #32, 28	; 0x200
 801785c:	6b636f6c 	blvs	98f3614 <__exidx_end+0x18dbd20>
 8017860:	6d696c5f 	stclvs	12, cr6, [r9, #-380]!	; 0xfffffe84
 8017864:	000a7469 	andeq	r7, sl, r9, ror #8
 8017868:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 801786c:	203a636f 	eorscs	r6, sl, pc, ror #6
 8017870:	6f6c4270 	svcvs	0x006c4270
 8017874:	65486b63 	strbvs	r6, [r8, #-2915]	; 0xfffff49d
 8017878:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 801787c:	2c70253d 	cfldr64cs	mvdx2, [r0], #-244	; 0xffffff0c
 8017880:	7a697320 	bvc	9a74508 <__exidx_end+0x1a5cc14>
 8017884:	64253d65 	strtvs	r3, [r5], #-3429	; 0xfffff29b
 8017888:	6164202c 	cmnvs	r4, ip, lsr #32
 801788c:	253d6174 	ldrcs	r6, [sp, #-372]!	; 0xfffffe8c
 8017890:	66000a70 			; <UNDEFINED> instruction: 0x66000a70
 8017894:	3a656572 	bcc	9970e64 <__exidx_end+0x1959570>
 8017898:	6c427020 	mcrrvs	0, 2, r7, r2, cr0
 801789c:	486b636f 	stmdami	fp!, {r0, r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 80178a0:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 80178a4:	203d2072 	eorscs	r2, sp, r2, ror r0
 80178a8:	202c7025 	eorcs	r7, ip, r5, lsr #32
 80178ac:	6f6c4270 	svcvs	0x006c4270
 80178b0:	3d206b63 	fstmdbxcc	r0!, {d6-d54}	;@ Deprecated
 80178b4:	0a702520 	beq	9c20d3c <__exidx_end+0x1c09448>
 80178b8:	00000000 	andeq	r0, r0, r0

080178bc <days_of_month>:
 80178bc:	0000001f 	andeq	r0, r0, pc, lsl r0
 80178c0:	0000001c 	andeq	r0, r0, ip, lsl r0
 80178c4:	0000001f 	andeq	r0, r0, pc, lsl r0
 80178c8:	0000001e 	andeq	r0, r0, lr, lsl r0
 80178cc:	0000001f 	andeq	r0, r0, pc, lsl r0
 80178d0:	0000001e 	andeq	r0, r0, lr, lsl r0
 80178d4:	0000001f 	andeq	r0, r0, pc, lsl r0
 80178d8:	0000001f 	andeq	r0, r0, pc, lsl r0
 80178dc:	0000001e 	andeq	r0, r0, lr, lsl r0
 80178e0:	0000001f 	andeq	r0, r0, pc, lsl r0
 80178e4:	0000001e 	andeq	r0, r0, lr, lsl r0
 80178e8:	0000001f 	andeq	r0, r0, pc, lsl r0

Disassembly of section .ARM:

080178ec <__exidx_start>:
 80178ec:	7fff1d24 	svcvc	0x00ff1d24
 80178f0:	00000001 	andeq	r0, r0, r1

Disassembly of section .ARM.attributes:

080178f4 <.ARM.attributes>:
 80178f4:	00002e41 	andeq	r2, r0, r1, asr #28
 80178f8:	61656100 	cmnvs	r5, r0, lsl #2
 80178fc:	01006962 	tsteq	r0, r2, ror #18
 8017900:	00000024 	andeq	r0, r0, r4, lsr #32
 8017904:	726f4305 	rsbvc	r4, pc, #335544320	; 0x14000000
 8017908:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
 801790c:	0600334d 	streq	r3, [r0], -sp, asr #6
 8017910:	094d070a 	stmdbeq	sp, {r1, r3, r8, r9, sl}^
 8017914:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
 8017918:	17011501 	strne	r1, [r1, -r1, lsl #10]
 801791c:	1a011803 	bne	805d930 <__exidx_end+0x4603c>
 8017920:	Address 0x0000000008017920 is out of bounds.


Disassembly of section .data:

20000000 <LLRPDevice::m_nHandleLLRP>:
20000000:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

20000004 <s_multicast_mac>:
20000004:	005e0001 	subseq	r0, lr, r1
20000008:	00000000 	andeq	r0, r0, r0

2000000c <MDNS::s_nHandle>:
2000000c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

20000010 <next_block>:
20000010:	2003c000 	andcs	ip, r3, r0

20000014 <s_block_bucket>:
20000014:	00000010 	andeq	r0, r0, r0, lsl r0
	...
20000024:	00000020 	andeq	r0, r0, r0, lsr #32
	...
20000034:	00000040 	andeq	r0, r0, r0, asr #32
	...
20000044:	00000060 	andeq	r0, r0, r0, rrx
	...
20000054:	00000080 	andeq	r0, r0, r0, lsl #1
	...
20000064:	00000100 	andeq	r0, r0, r0, lsl #2
	...
20000074:	00000140 	andeq	r0, r0, r0, asr #2
	...
20000084:	00000180 	andeq	r0, r0, r0, lsl #3
	...
20000094:	00000200 	andeq	r0, r0, r0, lsl #4
	...
200000a4:	00000300 	andeq	r0, r0, r0, lsl #6
	...
200000b4:	00000400 	andeq	r0, r0, r0, lsl #8
	...
200000c4:	00000500 	andeq	r0, r0, r0, lsl #10
	...

200000e4 <SystemCoreClock>:
200000e4:	07270e00 	streq	r0, [r7, -r0, lsl #28]!

Disassembly of section .bss:

200000e8 <outptr>:
200000e8:	00000000 	andeq	r0, r0, r0

200000ec <RemoteConfig::s_pUdpBuffer>:
200000ec:	00000000 	andeq	r0, r0, r0

200000f0 <RemoteConfig::s_RemoteConfigListBin>:
	...

20000114 <RemoteConfig::s_pThis>:
20000114:	00000000 	andeq	r0, r0, r0

20000118 <HttpDaemon::m_Content>:
	...

200006b8 <guard variable for lightset::Data::Get()::instance>:
200006b8:	00000000 	andeq	r0, r0, r0

200006bc <lightset::Data::Get()::instance>:
	...

2000971c <PixelPusher::s_pThis>:
2000971c:	00000000 	andeq	r0, r0, r0

20009720 <LLRPDevice::s_nIpAddressFrom>:
20009720:	00000000 	andeq	r0, r0, r0

20009724 <LLRPDevice::m_nIpAddresLLRPRequest>:
20009724:	00000000 	andeq	r0, r0, r0

20009728 <LLRPDevice::m_nIpAddressLLRPResponse>:
20009728:	00000000 	andeq	r0, r0, r0

2000972c <LLRPDevice::m_pLLRP>:
2000972c:	00000000 	andeq	r0, r0, r0

20009730 <RDMNetDevice::s_RdmCommand>:
	...

2000982f <RDMNetDevice::s_Cid>:
	...

20009840 <RDMSensors::s_pThis>:
20009840:	00000000 	andeq	r0, r0, r0

20009844 <RDMSubDevices::s_pThis>:
20009844:	00000000 	andeq	r0, r0, r0

20009848 <RDMDeviceResponder::s_pThis>:
20009848:	00000000 	andeq	r0, r0, r0

2000984c <RDMIdentify::m_bIsEnabled>:
	...

2000984d <RDMIdentify::m_nMode>:
2000984d:	 	andeq	r0, r0, r0

20009850 <RDMIdentify::s_pThis>:
20009850:	00000000 	andeq	r0, r0, r0

20009854 <PixelPatterns::m_PortConfig>:
	...

20009954 <PixelPatterns::m_nActivePorts>:
20009954:	00000000 	andeq	r0, r0, r0

20009958 <PixelPatterns::m_pScannerColours>:
20009958:	00000000 	andeq	r0, r0, r0

2000995c <PixelPatterns::m_nCount>:
2000995c:	00000000 	andeq	r0, r0, r0

20009960 <PixelPatterns::m_pOutput>:
20009960:	00000000 	andeq	r0, r0, r0

20009964 <PixelTestPattern::s_Pattern>:
20009964:	00000000 	andeq	r0, r0, r0

20009968 <sv_isRunning>:
20009968:	00000000 	andeq	r0, r0, r0

2000996c <WS28xxMulti::s_pThis>:
2000996c:	00000000 	andeq	r0, r0, r0

20009970 <pixel::s_DmaBuffer>:
	...

20011970 <SpiFlashStore::s_nWaitMillis>:
20011970:	00000000 	andeq	r0, r0, r0

20011974 <SpiFlashStore::s_SpiFlashData>:
	...

20012974 <SpiFlashStore::s_nStartAddress>:
20012974:	00000000 	andeq	r0, r0, r0

20012978 <SpiFlashStore::s_bHaveFlashChip>:
20012978:	00000000 	andeq	r0, r0, r0

2001297c <SpiFlashStore::s_nSpiFlashStoreSize>:
2001297c:	00000000 	andeq	r0, r0, r0

20012980 <SpiFlashStore::s_State>:
20012980:	00000000 	andeq	r0, r0, r0

20012984 <SpiFlashStore::s_pThis>:
20012984:	00000000 	andeq	r0, r0, r0

20012988 <SpiFlashStore::s_bIsNew>:
20012988:	00000000 	andeq	r0, r0, r0

2001298c <StoreDisplayUdf::s_pThis>:
2001298c:	00000000 	andeq	r0, r0, r0

20012990 <StoreNetwork::s_pThis>:
20012990:	00000000 	andeq	r0, r0, r0

20012994 <StoreRDMDevice::s_pThis>:
20012994:	00000000 	andeq	r0, r0, r0

20012998 <StoreRemoteConfig::s_pThis>:
20012998:	00000000 	andeq	r0, r0, r0

2001299c <StorePixelDmx::s_pThis>:
2001299c:	00000000 	andeq	r0, r0, r0

200129a0 <FlashRom::s_pThis>:
200129a0:	00000000 	andeq	r0, r0, r0

200129a4 <flashrom::s_nAddress>:
200129a4:	00000000 	andeq	r0, r0, r0

200129a8 <flashrom::s_State>:
200129a8:	00000000 	andeq	r0, r0, r0

200129ac <flashrom::s_nPage>:
200129ac:	00000000 	andeq	r0, r0, r0

200129b0 <flashrom::s_pData>:
200129b0:	00000000 	andeq	r0, r0, r0

200129b4 <flashrom::s_isBank0>:
200129b4:	00000000 	andeq	r0, r0, r0

200129b8 <flashrom::s_nLength>:
200129b8:	00000000 	andeq	r0, r0, r0

200129bc <g_ip_info>:
	...

200129c8 <g_mac_address>:
200129c8:	00000000 	andeq	r0, r0, r0
	...

200129ce <s_is_dhcp>:
	...

200129d0 <s_p>:
200129d0:	00000000 	andeq	r0, r0, r0

200129d4 <s_ticker>:
200129d4:	00000000 	andeq	r0, r0, r0

200129d8 <s_mac_address>:
	...

200129e0 <s_mac_address_arp_reply>:
	...

200129e8 <s_id>:
200129e8:	00000000 	andeq	r0, r0, r0

200129ec <s_recv_queue>:
	...

2001355c <s_tcb>:
	...

200135a0 <s_tcp>:
	...

20013b8c <broadcast_mask>:
20013b8c:	00000000 	andeq	r0, r0, r0

20013b90 <gw_ip>:
20013b90:	00000000 	andeq	r0, r0, r0

20013b94 <on_network_mask>:
20013b94:	00000000 	andeq	r0, r0, r0

20013b98 <s_id>:
20013b98:	00000000 	andeq	r0, r0, r0

20013b9c <s_ports_allowed>:
	...

20013bbc <s_recv_queue>:
	...

2001985c <s_send_packet>:
	...

20019e48 <MDNS::s_nRemoteIp>:
20019e48:	00000000 	andeq	r0, r0, r0

20019e4c <MDNS::s_nRemotePort>:
20019e4c:	00000000 	andeq	r0, r0, r0

20019e50 <MDNS::s_nMulticastIp>:
20019e50:	00000000 	andeq	r0, r0, r0

20019e54 <MDNS::s_AnswerLocalIp>:
	...

2001a058 <MDNS::s_ServiceRecords>:
	...

2001a078 <MDNS::s_nBytesReceived>:
2001a078:	00000000 	andeq	r0, r0, r0

2001a07c <MDNS::s_ServiceRecordsData>:
	...

2001a280 <MDNS::s_pName>:
2001a280:	00000000 	andeq	r0, r0, r0

2001a284 <MDNS::s_pBuffer>:
2001a284:	00000000 	andeq	r0, r0, r0

2001a288 <Network::s_pThis>:
2001a288:	00000000 	andeq	r0, r0, r0

2001a28c <s_arp_announce>:
	...

2001a2b8 <s_arp_reply>:
	...

2001a2e4 <s_arp_request>:
	...

2001a310 <s_arp_records>:
	...

2001a490 <s_entry_current>:
2001a490:	00000000 	andeq	r0, r0, r0

2001a494 <s_dhcp_allocated_gw>:
2001a494:	00000000 	andeq	r0, r0, r0

2001a498 <s_dhcp_allocated_ip>:
2001a498:	00000000 	andeq	r0, r0, r0

2001a49c <s_dhcp_allocated_netmask>:
2001a49c:	00000000 	andeq	r0, r0, r0

2001a4a0 <s_dhcp_message>:
	...

2001a6c4 <s_dhcp_server_ip>:
2001a6c4:	00000000 	andeq	r0, r0, r0

2001a6c8 <s_groups>:
	...

2001a7e8 <s_id>:
2001a7e8:	00000000 	andeq	r0, r0, r0

2001a7ec <s_joins_allowed_index>:
2001a7ec:	00000000 	andeq	r0, r0, r0

2001a7f0 <s_leave>:
	...

2001a820 <s_multicast_mac>:
	...

2001a828 <s_report>:
	...

2001a858 <DisplayUdf::s_pThis>:
2001a858:	00000000 	andeq	r0, r0, r0

2001a85c <PropertiesConfig::s_Config>:
2001a85c:	00000000 	andeq	r0, r0, r0

2001a860 <Display::s_pThis>:
2001a860:	00000000 	andeq	r0, r0, r0

2001a864 <_ClearBuffer>:
	...

2001a8ec <Ssd1306::s_pThis>:
2001a8ec:	00000000 	andeq	r0, r0, r0

2001a8f0 <FirmwareVersion::s_FirmwareVersion>:
	...

2001a906 <FirmwareVersion::s_Print>:
	...

2001a948 <FirmwareVersion::s_pThis>:
2001a948:	00000000 	andeq	r0, r0, r0

2001a94c <LedBlink::s_pThis>:
2001a94c:	00000000 	andeq	r0, r0, r0

2001a950 <Hardware::s_pThis>:
2001a950:	00000000 	andeq	r0, r0, r0

2001a954 <last.0>:
2001a954:	00000000 	andeq	r0, r0, r0

2001a958 <s_micros>:
	...

2001a960 <set_timer>:
2001a960:	00000000 	andeq	r0, r0, r0

2001a964 <s_nSysTickMillis>:
2001a964:	00000000 	andeq	r0, r0, r0

2001a968 <s_nAddress>:
2001a968:	00000000 	andeq	r0, r0, r0

2001a96c <dma_current_ptp_rxdesc>:
2001a96c:	00000000 	andeq	r0, r0, r0

2001a970 <dma_current_ptp_txdesc>:
2001a970:	00000000 	andeq	r0, r0, r0

2001a974 <dma_current_rxdesc>:
2001a974:	00000000 	andeq	r0, r0, r0

2001a978 <dma_current_txdesc>:
2001a978:	00000000 	andeq	r0, r0, r0

2001a97c <enet_initpara>:
	...

2001a9b8 <rx_buff>:
	...

20024480 <rxdesc_tab>:
	...

20024620 <tx_buff>:
	...

20025208 <txdesc_tab>:
	...

Disassembly of section .heap:

2003c000 <heap_low>:
	...

Disassembly of section .stack:

2003d800 <_sp-0x2800>:
	...
