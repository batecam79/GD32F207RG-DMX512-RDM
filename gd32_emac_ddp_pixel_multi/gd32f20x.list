
build_gd32/main.elf:     file format elf32-littlearm


Disassembly of section .vectors:

08007000 <__gVectors>:
 8007000:	20040000 	andcs	r0, r4, r0
 8007004:	080085bd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, r8, sl, pc}
 8007008:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 800700c:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007010:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007014:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007018:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
	...
 800702c:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007030:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007034:	00000000 	andeq	r0, r0, r0
 8007038:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 800703c:	08012b79 	stmdaeq	r1, {r0, r3, r4, r5, r6, r8, r9, fp, sp}
 8007040:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007044:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007048:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 800704c:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007050:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007054:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007058:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 800705c:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007060:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007064:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007068:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 800706c:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007070:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007074:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007078:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 800707c:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007080:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007084:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007088:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 800708c:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007090:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007094:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007098:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 800709c:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80070a0:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80070a4:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80070a8:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80070ac:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80070b0:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80070b4:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80070b8:	0800db4d 	stmdaeq	r0, {r0, r2, r3, r6, r8, r9, fp, ip, lr, pc}
 80070bc:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80070c0:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80070c4:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80070c8:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80070cc:	00000000 	andeq	r0, r0, r0
 80070d0:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80070d4:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80070d8:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80070dc:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80070e0:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80070e4:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80070e8:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80070ec:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80070f0:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80070f4:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80070f8:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80070fc:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007100:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007104:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007108:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 800710c:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007110:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007114:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007118:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 800711c:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007120:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007124:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007128:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 800712c:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007130:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007134:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007138:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 800713c:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007140:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007144:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007148:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 800714c:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007150:	00000000 	andeq	r0, r0, r0
 8007154:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007158:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 800715c:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007160:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007164:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
	...
 8007178:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 800717c:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007180:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 8007184:	00000000 	andeq	r0, r0, r0
 8007188:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 800718c:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
	...
 80071a0:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}
 80071a4:	08008601 	stmdaeq	r0, {r0, r9, sl, pc}

Disassembly of section .text:

080071a8 <net_init>:
 80071a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80071ac:	460c      	mov	r4, r1
 80071ae:	4616      	mov	r6, r2
 80071b0:	9f06      	ldr	r7, [sp, #24]
 80071b2:	4a22      	ldr	r2, [pc, #136]	; (800723c <net_init+0x94>)
 80071b4:	461d      	mov	r5, r3
 80071b6:	1e43      	subs	r3, r0, #1
 80071b8:	3005      	adds	r0, #5
 80071ba:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 80071be:	4283      	cmp	r3, r0
 80071c0:	f802 1b01 	strb.w	r1, [r2], #1
 80071c4:	d1f9      	bne.n	80071ba <net_init+0x12>
 80071c6:	4623      	mov	r3, r4
 80071c8:	4a1d      	ldr	r2, [pc, #116]	; (8007240 <net_init+0x98>)
 80071ca:	f104 010c 	add.w	r1, r4, #12
 80071ce:	f813 0b01 	ldrb.w	r0, [r3], #1
 80071d2:	428b      	cmp	r3, r1
 80071d4:	f802 0b01 	strb.w	r0, [r2], #1
 80071d8:	d1f9      	bne.n	80071ce <net_init+0x26>
 80071da:	f04f 0800 	mov.w	r8, #0
 80071de:	4918      	ldr	r1, [pc, #96]	; (8007240 <net_init+0x98>)
 80071e0:	4816      	ldr	r0, [pc, #88]	; (800723c <net_init+0x94>)
 80071e2:	f000 f9a7 	bl	8007534 <ip_init>
 80071e6:	4815      	ldr	r0, [pc, #84]	; (800723c <net_init+0x94>)
 80071e8:	f000 f83c 	bl	8007264 <rfc3927_init>
 80071ec:	f887 8000 	strb.w	r8, [r7]
 80071f0:	782b      	ldrb	r3, [r5, #0]
 80071f2:	b163      	cbz	r3, 800720e <net_init+0x66>
 80071f4:	4632      	mov	r2, r6
 80071f6:	4912      	ldr	r1, [pc, #72]	; (8007240 <net_init+0x98>)
 80071f8:	4810      	ldr	r0, [pc, #64]	; (800723c <net_init+0x94>)
 80071fa:	f009 fdc7 	bl	8010d8c <dhcp_client>
 80071fe:	4540      	cmp	r0, r8
 8007200:	da05      	bge.n	800720e <net_init+0x66>
 8007202:	480f      	ldr	r0, [pc, #60]	; (8007240 <net_init+0x98>)
 8007204:	f885 8000 	strb.w	r8, [r5]
 8007208:	f007 ffc4 	bl	800f194 <rfc3927>
 800720c:	7038      	strb	r0, [r7, #0]
 800720e:	490c      	ldr	r1, [pc, #48]	; (8007240 <net_init+0x98>)
 8007210:	480a      	ldr	r0, [pc, #40]	; (800723c <net_init+0x94>)
 8007212:	f000 f883 	bl	800731c <arp_init>
 8007216:	480a      	ldr	r0, [pc, #40]	; (8007240 <net_init+0x98>)
 8007218:	f009 ffd8 	bl	80111cc <ip_set_ip>
 800721c:	f000 f82e 	bl	800727c <tcp_init>
 8007220:	4a07      	ldr	r2, [pc, #28]	; (8007240 <net_init+0x98>)
 8007222:	1e63      	subs	r3, r4, #1
 8007224:	340b      	adds	r4, #11
 8007226:	f812 1b01 	ldrb.w	r1, [r2], #1
 800722a:	f803 1f01 	strb.w	r1, [r3, #1]!
 800722e:	429c      	cmp	r4, r3
 8007230:	d1f9      	bne.n	8007226 <net_init+0x7e>
 8007232:	782a      	ldrb	r2, [r5, #0]
 8007234:	4b03      	ldr	r3, [pc, #12]	; (8007244 <net_init+0x9c>)
 8007236:	701a      	strb	r2, [r3, #0]
 8007238:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800723c:	20015a88 	andcs	r5, r1, r8, lsl #21
 8007240:	20015a7c 	andcs	r5, r1, ip, ror sl
 8007244:	20015a8e 	andcs	r5, r1, lr, lsl #21

08007248 <net_shutdown>:
 8007248:	b508      	push	{r3, lr}
 800724a:	f000 f97e 	bl	800754a <ip_shutdown>
 800724e:	4b04      	ldr	r3, [pc, #16]	; (8007260 <net_shutdown+0x18>)
 8007250:	781b      	ldrb	r3, [r3, #0]
 8007252:	b11b      	cbz	r3, 800725c <net_shutdown+0x14>
 8007254:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8007258:	f009 bea0 	b.w	8010f9c <dhcp_client_release>
 800725c:	bd08      	pop	{r3, pc}
 800725e:	bf00      	nop
 8007260:	20015a8e 	andcs	r5, r1, lr, lsl #21

08007264 <rfc3927_init>:
 8007264:	4b04      	ldr	r3, [pc, #16]	; (8007278 <rfc3927_init+0x14>)
 8007266:	1d82      	adds	r2, r0, #6
 8007268:	4290      	cmp	r0, r2
 800726a:	d100      	bne.n	800726e <rfc3927_init+0xa>
 800726c:	4770      	bx	lr
 800726e:	f810 1b01 	ldrb.w	r1, [r0], #1
 8007272:	f803 1b01 	strb.w	r1, [r3], #1
 8007276:	e7f7      	b.n	8007268 <rfc3927_init+0x4>
 8007278:	20015a98 	mulcs	r1, r8, sl

0800727c <tcp_init>:
 800727c:	2206      	movs	r2, #6
 800727e:	b513      	push	{r0, r1, r4, lr}
 8007280:	4c0b      	ldr	r4, [pc, #44]	; (80072b0 <tcp_init+0x34>)
 8007282:	490c      	ldr	r1, [pc, #48]	; (80072b4 <tcp_init+0x38>)
 8007284:	18a0      	adds	r0, r4, r2
 8007286:	f007 ffdf 	bl	800f248 <memcpy.isra.0>
 800728a:	2308      	movs	r3, #8
 800728c:	2204      	movs	r2, #4
 800728e:	81a3      	strh	r3, [r4, #12]
 8007290:	4b09      	ldr	r3, [pc, #36]	; (80072b8 <tcp_init+0x3c>)
 8007292:	eb0d 0102 	add.w	r1, sp, r2
 8007296:	681b      	ldr	r3, [r3, #0]
 8007298:	f104 001a 	add.w	r0, r4, #26
 800729c:	9301      	str	r3, [sp, #4]
 800729e:	f007 ffd3 	bl	800f248 <memcpy.isra.0>
 80072a2:	2345      	movs	r3, #69	; 0x45
 80072a4:	81e3      	strh	r3, [r4, #14]
 80072a6:	4b05      	ldr	r3, [pc, #20]	; (80072bc <tcp_init+0x40>)
 80072a8:	6163      	str	r3, [r4, #20]
 80072aa:	b002      	add	sp, #8
 80072ac:	bd10      	pop	{r4, pc}
 80072ae:	bf00      	nop
 80072b0:	20016660 	andcs	r6, r1, r0, ror #12
 80072b4:	20015a88 	andcs	r5, r1, r8, lsl #21
 80072b8:	20015a7c 	andcs	r5, r1, ip, ror sl
 80072bc:	06400040 	strbeq	r0, [r0], -r0, asr #32

080072c0 <udp_init>:
 80072c0:	b570      	push	{r4, r5, r6, lr}
 80072c2:	2200      	movs	r2, #0
 80072c4:	2408      	movs	r4, #8
 80072c6:	460e      	mov	r6, r1
 80072c8:	4b0d      	ldr	r3, [pc, #52]	; (8007300 <udp_init+0x40>)
 80072ca:	490e      	ldr	r1, [pc, #56]	; (8007304 <udp_init+0x44>)
 80072cc:	3c01      	subs	r4, #1
 80072ce:	801a      	strh	r2, [r3, #0]
 80072d0:	805a      	strh	r2, [r3, #2]
 80072d2:	f841 2b04 	str.w	r2, [r1], #4
 80072d6:	f603 3394 	addw	r3, r3, #2964	; 0xb94
 80072da:	d1f7      	bne.n	80072cc <udp_init+0xc>
 80072dc:	2206      	movs	r2, #6
 80072de:	4d0a      	ldr	r5, [pc, #40]	; (8007308 <udp_init+0x48>)
 80072e0:	4b0a      	ldr	r3, [pc, #40]	; (800730c <udp_init+0x4c>)
 80072e2:	4601      	mov	r1, r0
 80072e4:	18a8      	adds	r0, r5, r2
 80072e6:	801c      	strh	r4, [r3, #0]
 80072e8:	f008 f932 	bl	800f550 <memcpy.isra.0>
 80072ec:	4b08      	ldr	r3, [pc, #32]	; (8007310 <udp_init+0x50>)
 80072ee:	4630      	mov	r0, r6
 80072f0:	60eb      	str	r3, [r5, #12]
 80072f2:	4b08      	ldr	r3, [pc, #32]	; (8007314 <udp_init+0x54>)
 80072f4:	616b      	str	r3, [r5, #20]
 80072f6:	f008 f953 	bl	800f5a0 <udp_set_ip>
 80072fa:	852c      	strh	r4, [r5, #40]	; 0x28
 80072fc:	bd70      	pop	{r4, r5, r6, pc}
 80072fe:	bf00      	nop
 8007300:	20016c7c 	andcs	r6, r1, ip, ror ip
 8007304:	20016c5c 	andcs	r6, r1, ip, asr ip
 8007308:	2001c91c 	andcs	ip, r1, ip, lsl r9
 800730c:	20016c58 	andcs	r6, r1, r8, asr ip
 8007310:	00450008 	subeq	r0, r5, r8
 8007314:	11400040 	cmpne	r0, r0, asr #32

08007318 <udp_shutdown>:
 8007318:	4770      	bx	lr
	...

0800731c <arp_init>:
 800731c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007320:	4604      	mov	r4, r0
 8007322:	460d      	mov	r5, r1
 8007324:	f000 f876 	bl	8007414 <arp_cache_init>
 8007328:	2206      	movs	r2, #6
 800732a:	4621      	mov	r1, r4
 800732c:	482e      	ldr	r0, [pc, #184]	; (80073e8 <arp_init+0xcc>)
 800732e:	682f      	ldr	r7, [r5, #0]
 8007330:	f009 fbae 	bl	8010a90 <memcpy.isra.0>
 8007334:	4b2d      	ldr	r3, [pc, #180]	; (80073ec <arp_init+0xd0>)
 8007336:	2507      	movs	r5, #7
 8007338:	461e      	mov	r6, r3
 800733a:	22ff      	movs	r2, #255	; 0xff
 800733c:	3d01      	subs	r5, #1
 800733e:	d146      	bne.n	80073ce <arp_init+0xb2>
 8007340:	4b2b      	ldr	r3, [pc, #172]	; (80073f0 <arp_init+0xd4>)
 8007342:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 80073f4 <arp_init+0xd8>
 8007346:	2206      	movs	r2, #6
 8007348:	e9c6 3803 	strd	r3, r8, [r6, #12]
 800734c:	f44f 7380 	mov.w	r3, #256	; 0x100
 8007350:	4621      	mov	r1, r4
 8007352:	4829      	ldr	r0, [pc, #164]	; (80073f8 <arp_init+0xdc>)
 8007354:	82b3      	strh	r3, [r6, #20]
 8007356:	f009 fb9b 	bl	8010a90 <memcpy.isra.0>
 800735a:	2307      	movs	r3, #7
 800735c:	4a27      	ldr	r2, [pc, #156]	; (80073fc <arp_init+0xe0>)
 800735e:	61f7      	str	r7, [r6, #28]
 8007360:	3b01      	subs	r3, #1
 8007362:	d137      	bne.n	80073d4 <arp_init+0xb8>
 8007364:	2206      	movs	r2, #6
 8007366:	4621      	mov	r1, r4
 8007368:	4825      	ldr	r0, [pc, #148]	; (8007400 <arp_init+0xe4>)
 800736a:	f8c6 7026 	str.w	r7, [r6, #38]	; 0x26
 800736e:	f009 fb8f 	bl	8010a90 <memcpy.isra.0>
 8007372:	4a24      	ldr	r2, [pc, #144]	; (8007404 <arp_init+0xe8>)
 8007374:	2306      	movs	r3, #6
 8007376:	4615      	mov	r5, r2
 8007378:	21ff      	movs	r1, #255	; 0xff
 800737a:	3b01      	subs	r3, #1
 800737c:	d22d      	bcs.n	80073da <arp_init+0xbe>
 800737e:	4b1c      	ldr	r3, [pc, #112]	; (80073f0 <arp_init+0xd4>)
 8007380:	2206      	movs	r2, #6
 8007382:	e9c5 3803 	strd	r3, r8, [r5, #12]
 8007386:	f44f 7380 	mov.w	r3, #256	; 0x100
 800738a:	4621      	mov	r1, r4
 800738c:	481e      	ldr	r0, [pc, #120]	; (8007408 <arp_init+0xec>)
 800738e:	82ab      	strh	r3, [r5, #20]
 8007390:	f009 fb7e 	bl	8010a90 <memcpy.isra.0>
 8007394:	2307      	movs	r3, #7
 8007396:	2100      	movs	r1, #0
 8007398:	4a1c      	ldr	r2, [pc, #112]	; (800740c <arp_init+0xf0>)
 800739a:	61ef      	str	r7, [r5, #28]
 800739c:	3b01      	subs	r3, #1
 800739e:	d11f      	bne.n	80073e0 <arp_init+0xc4>
 80073a0:	2206      	movs	r2, #6
 80073a2:	4d1b      	ldr	r5, [pc, #108]	; (8007410 <arp_init+0xf4>)
 80073a4:	4621      	mov	r1, r4
 80073a6:	18a8      	adds	r0, r5, r2
 80073a8:	f009 fb72 	bl	8010a90 <memcpy.isra.0>
 80073ac:	4b10      	ldr	r3, [pc, #64]	; (80073f0 <arp_init+0xd4>)
 80073ae:	4621      	mov	r1, r4
 80073b0:	e9c5 3803 	strd	r3, r8, [r5, #12]
 80073b4:	f44f 7300 	mov.w	r3, #512	; 0x200
 80073b8:	f105 0016 	add.w	r0, r5, #22
 80073bc:	2206      	movs	r2, #6
 80073be:	82ab      	strh	r3, [r5, #20]
 80073c0:	f009 fb66 	bl	8010a90 <memcpy.isra.0>
 80073c4:	61ef      	str	r7, [r5, #28]
 80073c6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80073ca:	f009 bb6b 	b.w	8010aa4 <arp_announce>
 80073ce:	f803 2b01 	strb.w	r2, [r3], #1
 80073d2:	e7b3      	b.n	800733c <arp_init+0x20>
 80073d4:	f802 5b01 	strb.w	r5, [r2], #1
 80073d8:	e7c2      	b.n	8007360 <arp_init+0x44>
 80073da:	f802 1b01 	strb.w	r1, [r2], #1
 80073de:	e7cc      	b.n	800737a <arp_init+0x5e>
 80073e0:	f802 1b01 	strb.w	r1, [r2], #1
 80073e4:	e7da      	b.n	800739c <arp_init+0x80>
 80073e6:	bf00      	nop
 80073e8:	2001d352 	andcs	sp, r1, r2, asr r3
 80073ec:	2001d34c 	andcs	sp, r1, ip, asr #6
 80073f0:	01000608 	tsteq	r0, r8, lsl #12
 80073f4:	04060008 	streq	r0, [r6], #-8
 80073f8:	2001d362 	andcs	sp, r1, r2, ror #6
 80073fc:	2001d36c 	andcs	sp, r1, ip, ror #6
 8007400:	2001d3aa 	andcs	sp, r1, sl, lsr #7
 8007404:	2001d3a4 	andcs	sp, r1, r4, lsr #7
 8007408:	2001d3ba 			; <UNDEFINED> instruction: 0x2001d3ba
 800740c:	2001d3c4 	andcs	sp, r1, r4, asr #7
 8007410:	2001d378 	andcs	sp, r1, r8, ror r3

08007414 <arp_cache_init>:
 8007414:	2300      	movs	r3, #0
 8007416:	4618      	mov	r0, r3
 8007418:	4a09      	ldr	r2, [pc, #36]	; (8007440 <arp_cache_init+0x2c>)
 800741a:	b510      	push	{r4, lr}
 800741c:	8013      	strh	r3, [r2, #0]
 800741e:	4a09      	ldr	r2, [pc, #36]	; (8007444 <arp_cache_init+0x30>)
 8007420:	4611      	mov	r1, r2
 8007422:	f842 0c04 	str.w	r0, [r2, #-4]
 8007426:	1d94      	adds	r4, r2, #6
 8007428:	42a1      	cmp	r1, r4
 800742a:	d105      	bne.n	8007438 <arp_cache_init+0x24>
 800742c:	3303      	adds	r3, #3
 800742e:	2b60      	cmp	r3, #96	; 0x60
 8007430:	f102 020c 	add.w	r2, r2, #12
 8007434:	d1f4      	bne.n	8007420 <arp_cache_init+0xc>
 8007436:	bd10      	pop	{r4, pc}
 8007438:	f801 0b01 	strb.w	r0, [r1], #1
 800743c:	e7f4      	b.n	8007428 <arp_cache_init+0x14>
 800743e:	bf00      	nop
 8007440:	2001d550 	andcs	sp, r1, r0, asr r5
 8007444:	2001d3d4 	ldrdcs	sp, [r1], -r4

08007448 <igmp_init>:
 8007448:	2200      	movs	r2, #0
 800744a:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800744e:	4605      	mov	r5, r0
 8007450:	4608      	mov	r0, r1
 8007452:	4611      	mov	r1, r2
 8007454:	4b23      	ldr	r3, [pc, #140]	; (80074e4 <igmp_init+0x9c>)
 8007456:	f103 0408 	add.w	r4, r3, #8
 800745a:	42a3      	cmp	r3, r4
 800745c:	d13e      	bne.n	80074dc <igmp_init+0x94>
 800745e:	3201      	adds	r2, #1
 8007460:	2a24      	cmp	r2, #36	; 0x24
 8007462:	d1f8      	bne.n	8007456 <igmp_init+0xe>
 8007464:	2600      	movs	r6, #0
 8007466:	4b20      	ldr	r3, [pc, #128]	; (80074e8 <igmp_init+0xa0>)
 8007468:	4c20      	ldr	r4, [pc, #128]	; (80074ec <igmp_init+0xa4>)
 800746a:	601e      	str	r6, [r3, #0]
 800746c:	4b20      	ldr	r3, [pc, #128]	; (80074f0 <igmp_init+0xa8>)
 800746e:	f44f 5700 	mov.w	r7, #8192	; 0x2000
 8007472:	801e      	strh	r6, [r3, #0]
 8007474:	f009 fe0a 	bl	801108c <igmp_set_ip>
 8007478:	2201      	movs	r2, #1
 800747a:	4b1e      	ldr	r3, [pc, #120]	; (80074f4 <igmp_init+0xac>)
 800747c:	4629      	mov	r1, r5
 800747e:	801a      	strh	r2, [r3, #0]
 8007480:	225e      	movs	r2, #94	; 0x5e
 8007482:	709a      	strb	r2, [r3, #2]
 8007484:	2206      	movs	r2, #6
 8007486:	18a0      	adds	r0, r4, r2
 8007488:	f009 fdb6 	bl	8010ff8 <memcpy.isra.0>
 800748c:	f240 4394 	movw	r3, #1172	; 0x494
 8007490:	8463      	strh	r3, [r4, #34]	; 0x22
 8007492:	2316      	movs	r3, #22
 8007494:	f8df 9060 	ldr.w	r9, [pc, #96]	; 80074f8 <igmp_init+0xb0>
 8007498:	f8df 8060 	ldr.w	r8, [pc, #96]	; 80074fc <igmp_init+0xb4>
 800749c:	84e3      	strh	r3, [r4, #38]	; 0x26
 800749e:	f8c4 9014 	str.w	r9, [r4, #20]
 80074a2:	4b17      	ldr	r3, [pc, #92]	; (8007500 <igmp_init+0xb8>)
 80074a4:	f8c4 800c 	str.w	r8, [r4, #12]
 80074a8:	8227      	strh	r7, [r4, #16]
 80074aa:	84a6      	strh	r6, [r4, #36]	; 0x24
 80074ac:	4c15      	ldr	r4, [pc, #84]	; (8007504 <igmp_init+0xbc>)
 80074ae:	2206      	movs	r2, #6
 80074b0:	6023      	str	r3, [r4, #0]
 80074b2:	f44f 7300 	mov.w	r3, #512	; 0x200
 80074b6:	18a0      	adds	r0, r4, r2
 80074b8:	80a3      	strh	r3, [r4, #4]
 80074ba:	4629      	mov	r1, r5
 80074bc:	f009 fd9c 	bl	8010ff8 <memcpy.isra.0>
 80074c0:	23e0      	movs	r3, #224	; 0xe0
 80074c2:	83e3      	strh	r3, [r4, #30]
 80074c4:	f44f 13b8 	mov.w	r3, #1507328	; 0x170000
 80074c8:	4a0f      	ldr	r2, [pc, #60]	; (8007508 <igmp_init+0xc0>)
 80074ca:	f8c4 9014 	str.w	r9, [r4, #20]
 80074ce:	e9c4 2308 	strd	r2, r3, [r4, #32]
 80074d2:	f8c4 800c 	str.w	r8, [r4, #12]
 80074d6:	8227      	strh	r7, [r4, #16]
 80074d8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80074dc:	f803 1b01 	strb.w	r1, [r3], #1
 80074e0:	e7bb      	b.n	800745a <igmp_init+0x12>
 80074e2:	bf00      	nop
 80074e4:	2001d788 	andcs	sp, r1, r8, lsl #15
 80074e8:	2001d8ac 	andcs	sp, r1, ip, lsr #17
 80074ec:	2001d8e8 	andcs	sp, r1, r8, ror #17
 80074f0:	2001d8a8 	andcs	sp, r1, r8, lsr #17
 80074f4:	2001d8e0 	andcs	sp, r1, r0, ror #17
 80074f8:	02010040 	andeq	r0, r1, #64	; 0x40
 80074fc:	00460008 	subeq	r0, r6, r8
 8007500:	005e0001 	subseq	r0, lr, r1
 8007504:	2001d8b0 			; <UNDEFINED> instruction: 0x2001d8b0
 8007508:	04940200 	ldreq	r0, [r4], #512	; 0x200

0800750c <igmp_shutdown>:
 800750c:	b570      	push	{r4, r5, r6, lr}
 800750e:	2500      	movs	r5, #0
 8007510:	462e      	mov	r6, r5
 8007512:	4c07      	ldr	r4, [pc, #28]	; (8007530 <igmp_shutdown+0x24>)
 8007514:	6820      	ldr	r0, [r4, #0]
 8007516:	b120      	cbz	r0, 8007522 <igmp_shutdown+0x16>
 8007518:	f009 fe14 	bl	8011144 <igmp_leave>
 800751c:	6026      	str	r6, [r4, #0]
 800751e:	7166      	strb	r6, [r4, #5]
 8007520:	7126      	strb	r6, [r4, #4]
 8007522:	3501      	adds	r5, #1
 8007524:	2d24      	cmp	r5, #36	; 0x24
 8007526:	f104 0408 	add.w	r4, r4, #8
 800752a:	d1f3      	bne.n	8007514 <igmp_shutdown+0x8>
 800752c:	bd70      	pop	{r4, r5, r6, pc}
 800752e:	bf00      	nop
 8007530:	2001d788 	andcs	sp, r1, r8, lsl #15

08007534 <ip_init>:
 8007534:	b538      	push	{r3, r4, r5, lr}
 8007536:	4604      	mov	r4, r0
 8007538:	460d      	mov	r5, r1
 800753a:	f7ff fec1 	bl	80072c0 <udp_init>
 800753e:	4629      	mov	r1, r5
 8007540:	4620      	mov	r0, r4
 8007542:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8007546:	f7ff bf7f 	b.w	8007448 <igmp_init>

0800754a <ip_shutdown>:
 800754a:	b508      	push	{r3, lr}
 800754c:	f7ff ffde 	bl	800750c <igmp_shutdown>
 8007550:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8007554:	f7ff bee0 	b.w	8007318 <udp_shutdown>

08007558 <console_init>:
 8007558:	b508      	push	{r3, lr}
 800755a:	f00b faaf 	bl	8012abc <uart0_init>
 800755e:	4804      	ldr	r0, [pc, #16]	; (8007570 <console_init+0x18>)
 8007560:	f00b fadc 	bl	8012b1c <uart0_puts>
 8007564:	4803      	ldr	r0, [pc, #12]	; (8007574 <console_init+0x1c>)
 8007566:	f00b fad9 	bl	8012b1c <uart0_puts>
 800756a:	2000      	movs	r0, #0
 800756c:	bd08      	pop	{r3, pc}
 800756e:	bf00      	nop
 8007570:	08014cbf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r7, sl, fp, lr}
 8007574:	08017bd0 	stmdaeq	r1, {r4, r6, r7, r8, r9, fp, ip, sp, lr}

08007578 <net_handle>:
 8007578:	b510      	push	{r4, lr}
 800757a:	4c0c      	ldr	r4, [pc, #48]	; (80075ac <net_handle+0x34>)
 800757c:	4620      	mov	r0, r4
 800757e:	f00c f9ed 	bl	801395c <emac_eth_recv>
 8007582:	2800      	cmp	r0, #0
 8007584:	dd07      	ble.n	8007596 <net_handle+0x1e>
 8007586:	6820      	ldr	r0, [r4, #0]
 8007588:	8983      	ldrh	r3, [r0, #12]
 800758a:	2b08      	cmp	r3, #8
 800758c:	d107      	bne.n	800759e <net_handle+0x26>
 800758e:	f000 fa6f 	bl	8007a70 <ip_handle>
 8007592:	f00c f9f7 	bl	8013984 <emac_free_pkt>
 8007596:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800759a:	f007 bdeb 	b.w	800f174 <net_timers_run>
 800759e:	f5b3 6fc1 	cmp.w	r3, #1544	; 0x608
 80075a2:	d1f6      	bne.n	8007592 <net_handle+0x1a>
 80075a4:	f000 fa08 	bl	80079b8 <arp_handle>
 80075a8:	e7f3      	b.n	8007592 <net_handle+0x1a>
 80075aa:	bf00      	nop
 80075ac:	20015a90 	mulcs	r1, r0, sl

080075b0 <tcp_handle>:
 80075b0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80075b4:	4605      	mov	r5, r0
 80075b6:	8c43      	ldrh	r3, [r0, #34]	; 0x22
 80075b8:	f8b0 8010 	ldrh.w	r8, [r0, #16]
 80075bc:	ba5b      	rev16	r3, r3
 80075be:	8443      	strh	r3, [r0, #34]	; 0x22
 80075c0:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 80075c2:	f890 902e 	ldrb.w	r9, [r0, #46]	; 0x2e
 80075c6:	ba5b      	rev16	r3, r3
 80075c8:	8483      	strh	r3, [r0, #36]	; 0x24
 80075ca:	f007 fe47 	bl	800f25c <_bswap32>
 80075ce:	8e2b      	ldrh	r3, [r5, #48]	; 0x30
 80075d0:	4ca5      	ldr	r4, [pc, #660]	; (8007868 <tcp_handle+0x2b8>)
 80075d2:	ba5b      	rev16	r3, r3
 80075d4:	862b      	strh	r3, [r5, #48]	; 0x30
 80075d6:	8eab      	ldrh	r3, [r5, #52]	; 0x34
 80075d8:	8822      	ldrh	r2, [r4, #0]
 80075da:	ba5b      	rev16	r3, r3
 80075dc:	86ab      	strh	r3, [r5, #52]	; 0x34
 80075de:	8cab      	ldrh	r3, [r5, #36]	; 0x24
 80075e0:	429a      	cmp	r2, r3
 80075e2:	d14d      	bne.n	8007680 <tcp_handle+0xd0>
 80075e4:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 80075e8:	2b01      	cmp	r3, #1
 80075ea:	d00d      	beq.n	8007608 <tcp_handle+0x58>
 80075ec:	2204      	movs	r2, #4
 80075ee:	4668      	mov	r0, sp
 80075f0:	f105 011a 	add.w	r1, r5, #26
 80075f4:	f007 fe28 	bl	800f248 <memcpy.isra.0>
 80075f8:	8862      	ldrh	r2, [r4, #2]
 80075fa:	8c6b      	ldrh	r3, [r5, #34]	; 0x22
 80075fc:	429a      	cmp	r2, r3
 80075fe:	d13f      	bne.n	8007680 <tcp_handle+0xd0>
 8007600:	6862      	ldr	r2, [r4, #4]
 8007602:	9b00      	ldr	r3, [sp, #0]
 8007604:	429a      	cmp	r2, r3
 8007606:	d13b      	bne.n	8007680 <tcp_handle+0xd0>
 8007608:	2204      	movs	r2, #4
 800760a:	f105 012a 	add.w	r1, r5, #42	; 0x2a
 800760e:	eb0d 0002 	add.w	r0, sp, r2
 8007612:	f007 fe19 	bl	800f248 <memcpy.isra.0>
 8007616:	2204      	movs	r2, #4
 8007618:	f105 0126 	add.w	r1, r5, #38	; 0x26
 800761c:	eb0d 0002 	add.w	r0, sp, r2
 8007620:	9e01      	ldr	r6, [sp, #4]
 8007622:	f007 fe11 	bl	800f248 <memcpy.isra.0>
 8007626:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 800762a:	9f01      	ldr	r7, [sp, #4]
 800762c:	2a01      	cmp	r2, #1
 800762e:	f8b5 a030 	ldrh.w	sl, [r5, #48]	; 0x30
 8007632:	d01b      	beq.n	800766c <tcp_handle+0xbc>
 8007634:	1ed3      	subs	r3, r2, #3
 8007636:	2b07      	cmp	r3, #7
 8007638:	d822      	bhi.n	8007680 <tcp_handle+0xd0>
 800763a:	fa98 f198 	rev16.w	r1, r8
 800763e:	f64f 78ec 	movw	r8, #65516	; 0xffec
 8007642:	ea4f 1319 	mov.w	r3, r9, lsr #4
 8007646:	eba8 0883 	sub.w	r8, r8, r3, lsl #2
 800764a:	4488      	add	r8, r1
 800764c:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 800764e:	f895 002f 	ldrb.w	r0, [r5, #47]	; 0x2f
 8007652:	ea4f 0983 	mov.w	r9, r3, lsl #2
 8007656:	fa1f f888 	uxth.w	r8, r8
 800765a:	2900      	cmp	r1, #0
 800765c:	d142      	bne.n	80076e4 <tcp_handle+0x134>
 800765e:	f1b8 0f00 	cmp.w	r8, #0
 8007662:	d16b      	bne.n	800773c <tcp_handle+0x18c>
 8007664:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007666:	42bb      	cmp	r3, r7
 8007668:	d168      	bne.n	800773c <tcp_handle+0x18c>
 800766a:	e048      	b.n	80076fe <tcp_handle+0x14e>
 800766c:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 8007670:	075a      	lsls	r2, r3, #29
 8007672:	d405      	bmi.n	8007680 <tcp_handle+0xd0>
 8007674:	06d8      	lsls	r0, r3, #27
 8007676:	d506      	bpl.n	8007686 <tcp_handle+0xd6>
 8007678:	4628      	mov	r0, r5
 800767a:	497b      	ldr	r1, [pc, #492]	; (8007868 <tcp_handle+0x2b8>)
 800767c:	f007 feba 	bl	800f3f4 <_send_reset>
 8007680:	b004      	add	sp, #16
 8007682:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007686:	0799      	lsls	r1, r3, #30
 8007688:	d5fa      	bpl.n	8007680 <tcp_handle+0xd0>
 800768a:	f895 2023 	ldrb.w	r2, [r5, #35]	; 0x23
 800768e:	f895 3022 	ldrb.w	r3, [r5, #34]	; 0x22
 8007692:	4668      	mov	r0, sp
 8007694:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8007698:	f105 011a 	add.w	r1, r5, #26
 800769c:	2204      	movs	r2, #4
 800769e:	8063      	strh	r3, [r4, #2]
 80076a0:	f007 fdd2 	bl	800f248 <memcpy.isra.0>
 80076a4:	2206      	movs	r2, #6
 80076a6:	9b00      	ldr	r3, [sp, #0]
 80076a8:	18a9      	adds	r1, r5, r2
 80076aa:	4870      	ldr	r0, [pc, #448]	; (800786c <tcp_handle+0x2bc>)
 80076ac:	6063      	str	r3, [r4, #4]
 80076ae:	f007 fdcb 	bl	800f248 <memcpy.isra.0>
 80076b2:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80076b4:	1c7b      	adds	r3, r7, #1
 80076b6:	e9cd 2301 	strd	r2, r3, [sp, #4]
 80076ba:	6363      	str	r3, [r4, #52]	; 0x34
 80076bc:	2312      	movs	r3, #18
 80076be:	486a      	ldr	r0, [pc, #424]	; (8007868 <tcp_handle+0x2b8>)
 80076c0:	a901      	add	r1, sp, #4
 80076c2:	f88d 300c 	strb.w	r3, [sp, #12]
 80076c6:	e9c4 7608 	strd	r7, r6, [r4, #32]
 80076ca:	63e7      	str	r7, [r4, #60]	; 0x3c
 80076cc:	f8c4 a018 	str.w	sl, [r4, #24]
 80076d0:	f007 fdea 	bl	800f2a8 <_tcp_send_package>
 80076d4:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80076d6:	1c5a      	adds	r2, r3, #1
 80076d8:	e9c4 3204 	strd	r3, r2, [r4, #16]
 80076dc:	2303      	movs	r3, #3
 80076de:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 80076e2:	e7cd      	b.n	8007680 <tcp_handle+0xd0>
 80076e4:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80076e6:	eba3 0c07 	sub.w	ip, r3, r7
 80076ea:	f1b8 0f00 	cmp.w	r8, #0
 80076ee:	d10d      	bne.n	800770c <tcp_handle+0x15c>
 80076f0:	f1bc 0f00 	cmp.w	ip, #0
 80076f4:	dc22      	bgt.n	800773c <tcp_handle+0x18c>
 80076f6:	1afb      	subs	r3, r7, r3
 80076f8:	1a5b      	subs	r3, r3, r1
 80076fa:	2b00      	cmp	r3, #0
 80076fc:	da1e      	bge.n	800773c <tcp_handle+0x18c>
 80076fe:	0743      	lsls	r3, r0, #29
 8007700:	d530      	bpl.n	8007764 <tcp_handle+0x1b4>
 8007702:	8821      	ldrh	r1, [r4, #0]
 8007704:	4858      	ldr	r0, [pc, #352]	; (8007868 <tcp_handle+0x2b8>)
 8007706:	f007 fd85 	bl	800f214 <_init_tcb>
 800770a:	e7b9      	b.n	8007680 <tcp_handle+0xd0>
 800770c:	f1bc 0f00 	cmp.w	ip, #0
 8007710:	dc06      	bgt.n	8007720 <tcp_handle+0x170>
 8007712:	eba7 0c03 	sub.w	ip, r7, r3
 8007716:	ebac 0c01 	sub.w	ip, ip, r1
 800771a:	f1bc 0f00 	cmp.w	ip, #0
 800771e:	dbee      	blt.n	80076fe <tcp_handle+0x14e>
 8007720:	eb08 0c07 	add.w	ip, r8, r7
 8007724:	f103 0e01 	add.w	lr, r3, #1
 8007728:	ebae 0e0c 	sub.w	lr, lr, ip
 800772c:	f1be 0f00 	cmp.w	lr, #0
 8007730:	dc04      	bgt.n	800773c <tcp_handle+0x18c>
 8007732:	43db      	mvns	r3, r3
 8007734:	1a5b      	subs	r3, r3, r1
 8007736:	eb13 0f0c 	cmn.w	r3, ip
 800773a:	d4e0      	bmi.n	80076fe <tcp_handle+0x14e>
 800773c:	0742      	lsls	r2, r0, #29
 800773e:	d505      	bpl.n	800774c <tcp_handle+0x19c>
 8007740:	8821      	ldrh	r1, [r4, #0]
 8007742:	4849      	ldr	r0, [pc, #292]	; (8007868 <tcp_handle+0x2b8>)
 8007744:	f007 fd66 	bl	800f214 <_init_tcb>
 8007748:	2301      	movs	r3, #1
 800774a:	e7c8      	b.n	80076de <tcp_handle+0x12e>
 800774c:	6963      	ldr	r3, [r4, #20]
 800774e:	9301      	str	r3, [sp, #4]
 8007750:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007752:	9302      	str	r3, [sp, #8]
 8007754:	2310      	movs	r3, #16
 8007756:	4844      	ldr	r0, [pc, #272]	; (8007868 <tcp_handle+0x2b8>)
 8007758:	a901      	add	r1, sp, #4
 800775a:	f88d 300c 	strb.w	r3, [sp, #12]
 800775e:	f007 fda3 	bl	800f2a8 <_tcp_send_package>
 8007762:	e78d      	b.n	8007680 <tcp_handle+0xd0>
 8007764:	0781      	lsls	r1, r0, #30
 8007766:	d505      	bpl.n	8007774 <tcp_handle+0x1c4>
 8007768:	2a03      	cmp	r2, #3
 800776a:	d0ed      	beq.n	8007748 <tcp_handle+0x198>
 800776c:	4628      	mov	r0, r5
 800776e:	493e      	ldr	r1, [pc, #248]	; (8007868 <tcp_handle+0x2b8>)
 8007770:	f007 fe40 	bl	800f3f4 <_send_reset>
 8007774:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 8007778:	06da      	lsls	r2, r3, #27
 800777a:	d581      	bpl.n	8007680 <tcp_handle+0xd0>
 800777c:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8007780:	3b03      	subs	r3, #3
 8007782:	2b07      	cmp	r3, #7
 8007784:	d818      	bhi.n	80077b8 <tcp_handle+0x208>
 8007786:	e8df f003 	tbb	[pc, r3]
 800778a:	75757504 	ldrbvc	r7, [r5, #-1284]!	; 0xfffffafc
 800778e:	a59c7575 	ldrge	r7, [ip, #1397]	; 0x575
 8007792:	6923      	ldr	r3, [r4, #16]
 8007794:	1b9b      	subs	r3, r3, r6
 8007796:	2b00      	cmp	r3, #0
 8007798:	dc0a      	bgt.n	80077b0 <tcp_handle+0x200>
 800779a:	6963      	ldr	r3, [r4, #20]
 800779c:	1af3      	subs	r3, r6, r3
 800779e:	2b00      	cmp	r3, #0
 80077a0:	dc06      	bgt.n	80077b0 <tcp_handle+0x200>
 80077a2:	2304      	movs	r3, #4
 80077a4:	e9c4 7608 	strd	r7, r6, [r4, #32]
 80077a8:	f8c4 a018 	str.w	sl, [r4, #24]
 80077ac:	6126      	str	r6, [r4, #16]
 80077ae:	e796      	b.n	80076de <tcp_handle+0x12e>
 80077b0:	4628      	mov	r0, r5
 80077b2:	492d      	ldr	r1, [pc, #180]	; (8007868 <tcp_handle+0x2b8>)
 80077b4:	f007 fe1e 	bl	800f3f4 <_send_reset>
 80077b8:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 80077bc:	3b04      	subs	r3, #4
 80077be:	2b02      	cmp	r3, #2
 80077c0:	d830      	bhi.n	8007824 <tcp_handle+0x274>
 80077c2:	f1b8 0f00 	cmp.w	r8, #0
 80077c6:	d02d      	beq.n	8007824 <tcp_handle+0x274>
 80077c8:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80077ca:	42bb      	cmp	r3, r7
 80077cc:	f040 8091 	bne.w	80078f2 <tcp_handle+0x342>
 80077d0:	f240 53b6 	movw	r3, #1462	; 0x5b6
 80077d4:	f8df a098 	ldr.w	sl, [pc, #152]	; 8007870 <tcp_handle+0x2c0>
 80077d8:	f105 0122 	add.w	r1, r5, #34	; 0x22
 80077dc:	f8ba 7000 	ldrh.w	r7, [sl]
 80077e0:	4642      	mov	r2, r8
 80077e2:	435f      	muls	r7, r3
 80077e4:	1d38      	adds	r0, r7, #4
 80077e6:	4449      	add	r1, r9
 80077e8:	4450      	add	r0, sl
 80077ea:	f007 fd2d 	bl	800f248 <memcpy.isra.0>
 80077ee:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 80077f0:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80077f2:	f2a2 52b4 	subw	r2, r2, #1460	; 0x5b4
 80077f6:	8722      	strh	r2, [r4, #56]	; 0x38
 80077f8:	6962      	ldr	r2, [r4, #20]
 80077fa:	4443      	add	r3, r8
 80077fc:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8007800:	6363      	str	r3, [r4, #52]	; 0x34
 8007802:	2310      	movs	r3, #16
 8007804:	4457      	add	r7, sl
 8007806:	4818      	ldr	r0, [pc, #96]	; (8007868 <tcp_handle+0x2b8>)
 8007808:	f8a7 85b8 	strh.w	r8, [r7, #1464]	; 0x5b8
 800780c:	a901      	add	r1, sp, #4
 800780e:	f88d 300c 	strb.w	r3, [sp, #12]
 8007812:	f007 fd49 	bl	800f2a8 <_tcp_send_package>
 8007816:	f8ba 3000 	ldrh.w	r3, [sl]
 800781a:	3301      	adds	r3, #1
 800781c:	f003 0301 	and.w	r3, r3, #1
 8007820:	f8aa 3000 	strh.w	r3, [sl]
 8007824:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8007828:	2b02      	cmp	r3, #2
 800782a:	f67f af29 	bls.w	8007680 <tcp_handle+0xd0>
 800782e:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 8007832:	07db      	lsls	r3, r3, #31
 8007834:	f57f af24 	bpl.w	8007680 <tcp_handle+0xd0>
 8007838:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800783a:	6962      	ldr	r2, [r4, #20]
 800783c:	3301      	adds	r3, #1
 800783e:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8007842:	6363      	str	r3, [r4, #52]	; 0x34
 8007844:	2310      	movs	r3, #16
 8007846:	4808      	ldr	r0, [pc, #32]	; (8007868 <tcp_handle+0x2b8>)
 8007848:	a901      	add	r1, sp, #4
 800784a:	f88d 300c 	strb.w	r3, [sp, #12]
 800784e:	f007 fd2b 	bl	800f2a8 <_tcp_send_package>
 8007852:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8007856:	2b05      	cmp	r3, #5
 8007858:	d053      	beq.n	8007902 <tcp_handle+0x352>
 800785a:	d84d      	bhi.n	80078f8 <tcp_handle+0x348>
 800785c:	3b03      	subs	r3, #3
 800785e:	2b01      	cmp	r3, #1
 8007860:	f63f af0e 	bhi.w	8007680 <tcp_handle+0xd0>
 8007864:	2307      	movs	r3, #7
 8007866:	e73a      	b.n	80076de <tcp_handle+0x12e>
 8007868:	2001661c 	andcs	r6, r1, ip, lsl r6
 800786c:	20016624 	andcs	r6, r1, r4, lsr #12
 8007870:	20015aac 	andcs	r5, r1, ip, lsr #21
 8007874:	6923      	ldr	r3, [r4, #16]
 8007876:	1b99      	subs	r1, r3, r6
 8007878:	d513      	bpl.n	80078a2 <tcp_handle+0x2f2>
 800787a:	6962      	ldr	r2, [r4, #20]
 800787c:	1ab2      	subs	r2, r6, r2
 800787e:	2a00      	cmp	r2, #0
 8007880:	dc0f      	bgt.n	80078a2 <tcp_handle+0x2f2>
 8007882:	6126      	str	r6, [r4, #16]
 8007884:	6a23      	ldr	r3, [r4, #32]
 8007886:	1bda      	subs	r2, r3, r7
 8007888:	2a00      	cmp	r2, #0
 800788a:	db05      	blt.n	8007898 <tcp_handle+0x2e8>
 800788c:	42bb      	cmp	r3, r7
 800788e:	d193      	bne.n	80077b8 <tcp_handle+0x208>
 8007890:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007892:	1b9b      	subs	r3, r3, r6
 8007894:	2b00      	cmp	r3, #0
 8007896:	dc8f      	bgt.n	80077b8 <tcp_handle+0x208>
 8007898:	e9c4 7608 	strd	r7, r6, [r4, #32]
 800789c:	f8c4 a018 	str.w	sl, [r4, #24]
 80078a0:	e78a      	b.n	80077b8 <tcp_handle+0x208>
 80078a2:	1af3      	subs	r3, r6, r3
 80078a4:	2b00      	cmp	r3, #0
 80078a6:	dc06      	bgt.n	80078b6 <tcp_handle+0x306>
 80078a8:	2900      	cmp	r1, #0
 80078aa:	dc85      	bgt.n	80077b8 <tcp_handle+0x208>
 80078ac:	6963      	ldr	r3, [r4, #20]
 80078ae:	1af3      	subs	r3, r6, r3
 80078b0:	2b00      	cmp	r3, #0
 80078b2:	dc81      	bgt.n	80077b8 <tcp_handle+0x208>
 80078b4:	e7e6      	b.n	8007884 <tcp_handle+0x2d4>
 80078b6:	6963      	ldr	r3, [r4, #20]
 80078b8:	1b9a      	subs	r2, r3, r6
 80078ba:	2a00      	cmp	r2, #0
 80078bc:	f6bf af7c 	bge.w	80077b8 <tcp_handle+0x208>
 80078c0:	e745      	b.n	800774e <tcp_handle+0x19e>
 80078c2:	6963      	ldr	r3, [r4, #20]
 80078c4:	42b3      	cmp	r3, r6
 80078c6:	f47f af77 	bne.w	80077b8 <tcp_handle+0x208>
 80078ca:	8821      	ldrh	r1, [r4, #0]
 80078cc:	480f      	ldr	r0, [pc, #60]	; (800790c <tcp_handle+0x35c>)
 80078ce:	f007 fca1 	bl	800f214 <_init_tcb>
 80078d2:	e771      	b.n	80077b8 <tcp_handle+0x208>
 80078d4:	6963      	ldr	r3, [r4, #20]
 80078d6:	42b3      	cmp	r3, r6
 80078d8:	f47f af6e 	bne.w	80077b8 <tcp_handle+0x208>
 80078dc:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80078de:	480b      	ldr	r0, [pc, #44]	; (800790c <tcp_handle+0x35c>)
 80078e0:	9302      	str	r3, [sp, #8]
 80078e2:	2310      	movs	r3, #16
 80078e4:	a901      	add	r1, sp, #4
 80078e6:	9601      	str	r6, [sp, #4]
 80078e8:	f88d 300c 	strb.w	r3, [sp, #12]
 80078ec:	f007 fcdc 	bl	800f2a8 <_tcp_send_package>
 80078f0:	e762      	b.n	80077b8 <tcp_handle+0x208>
 80078f2:	6962      	ldr	r2, [r4, #20]
 80078f4:	9201      	str	r2, [sp, #4]
 80078f6:	e72c      	b.n	8007752 <tcp_handle+0x1a2>
 80078f8:	2b06      	cmp	r3, #6
 80078fa:	f47f aec1 	bne.w	8007680 <tcp_handle+0xd0>
 80078fe:	230a      	movs	r3, #10
 8007900:	e6ed      	b.n	80076de <tcp_handle+0x12e>
 8007902:	6963      	ldr	r3, [r4, #20]
 8007904:	42b3      	cmp	r3, r6
 8007906:	d0fa      	beq.n	80078fe <tcp_handle+0x34e>
 8007908:	2308      	movs	r3, #8
 800790a:	e6e8      	b.n	80076de <tcp_handle+0x12e>
 800790c:	2001661c 	andcs	r6, r1, ip, lsl r6

08007910 <udp_handle>:
 8007910:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8007914:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 8007916:	4607      	mov	r7, r0
 8007918:	ba5b      	rev16	r3, r3
 800791a:	b29b      	uxth	r3, r3
 800791c:	f1a3 0244 	sub.w	r2, r3, #68	; 0x44
 8007920:	2a01      	cmp	r2, #1
 8007922:	d904      	bls.n	800792e <udp_handle+0x1e>
 8007924:	2b7b      	cmp	r3, #123	; 0x7b
 8007926:	d002      	beq.n	800792e <udp_handle+0x1e>
 8007928:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800792c:	d308      	bcc.n	8007940 <udp_handle+0x30>
 800792e:	2400      	movs	r4, #0
 8007930:	4a1f      	ldr	r2, [pc, #124]	; (80079b0 <udp_handle+0xa0>)
 8007932:	f852 1b04 	ldr.w	r1, [r2], #4
 8007936:	4299      	cmp	r1, r3
 8007938:	d005      	beq.n	8007946 <udp_handle+0x36>
 800793a:	3401      	adds	r4, #1
 800793c:	2c08      	cmp	r4, #8
 800793e:	d1f8      	bne.n	8007932 <udp_handle+0x22>
 8007940:	b002      	add	sp, #8
 8007942:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007946:	f640 3394 	movw	r3, #2964	; 0xb94
 800794a:	8cfe      	ldrh	r6, [r7, #38]	; 0x26
 800794c:	435c      	muls	r4, r3
 800794e:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 8007952:	ba76      	rev16	r6, r6
 8007954:	3e08      	subs	r6, #8
 8007956:	b2b6      	uxth	r6, r6
 8007958:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 800795c:	bf28      	it	cs
 800795e:	f44f 66b8 	movcs.w	r6, #1472	; 0x5c0
 8007962:	f8df 8050 	ldr.w	r8, [pc, #80]	; 80079b4 <udp_handle+0xa4>
 8007966:	1d20      	adds	r0, r4, #4
 8007968:	f838 5004 	ldrh.w	r5, [r8, r4]
 800796c:	4632      	mov	r2, r6
 800796e:	435d      	muls	r5, r3
 8007970:	4428      	add	r0, r5
 8007972:	f107 012a 	add.w	r1, r7, #42	; 0x2a
 8007976:	4440      	add	r0, r8
 8007978:	f007 fdea 	bl	800f550 <memcpy.isra.0>
 800797c:	2204      	movs	r2, #4
 800797e:	f107 011a 	add.w	r1, r7, #26
 8007982:	eb0d 0002 	add.w	r0, sp, r2
 8007986:	f007 fde3 	bl	800f550 <memcpy.isra.0>
 800798a:	9a01      	ldr	r2, [sp, #4]
 800798c:	192b      	adds	r3, r5, r4
 800798e:	4443      	add	r3, r8
 8007990:	f8c3 25c4 	str.w	r2, [r3, #1476]	; 0x5c4
 8007994:	8c7a      	ldrh	r2, [r7, #34]	; 0x22
 8007996:	f8a3 65ca 	strh.w	r6, [r3, #1482]	; 0x5ca
 800799a:	ba52      	rev16	r2, r2
 800799c:	f8a3 25c8 	strh.w	r2, [r3, #1480]	; 0x5c8
 80079a0:	f838 3004 	ldrh.w	r3, [r8, r4]
 80079a4:	3301      	adds	r3, #1
 80079a6:	f003 0301 	and.w	r3, r3, #1
 80079aa:	f828 3004 	strh.w	r3, [r8, r4]
 80079ae:	e7c7      	b.n	8007940 <udp_handle+0x30>
 80079b0:	20016c5c 	andcs	r6, r1, ip, asr ip
 80079b4:	20016c7c 	andcs	r6, r1, ip, ror ip

080079b8 <arp_handle>:
 80079b8:	8a83      	ldrh	r3, [r0, #20]
 80079ba:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80079be:	d003      	beq.n	80079c8 <arp_handle+0x10>
 80079c0:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80079c4:	d002      	beq.n	80079cc <arp_handle+0x14>
 80079c6:	4770      	bx	lr
 80079c8:	f009 b876 	b.w	8010ab8 <arp_handle_request>
 80079cc:	f009 b89c 	b.w	8010b08 <arp_handle_reply>

080079d0 <igmp_handle>:
 80079d0:	7b83      	ldrb	r3, [r0, #14]
 80079d2:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80079d6:	2b45      	cmp	r3, #69	; 0x45
 80079d8:	d116      	bne.n	8007a08 <igmp_handle+0x38>
 80079da:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 80079de:	2b11      	cmp	r3, #17
 80079e0:	d112      	bne.n	8007a08 <igmp_handle+0x38>
 80079e2:	4b20      	ldr	r3, [pc, #128]	; (8007a64 <igmp_handle+0x94>)
 80079e4:	f100 051d 	add.w	r5, r0, #29
 80079e8:	9300      	str	r3, [sp, #0]
 80079ea:	466a      	mov	r2, sp
 80079ec:	462b      	mov	r3, r5
 80079ee:	f100 0621 	add.w	r6, r0, #33	; 0x21
 80079f2:	42b3      	cmp	r3, r6
 80079f4:	d10b      	bne.n	8007a0e <igmp_handle+0x3e>
 80079f6:	2401      	movs	r4, #1
 80079f8:	2100      	movs	r1, #0
 80079fa:	f04f 0c01 	mov.w	ip, #1
 80079fe:	4b1a      	ldr	r3, [pc, #104]	; (8007a68 <igmp_handle+0x98>)
 8007a00:	4a1a      	ldr	r2, [pc, #104]	; (8007a6c <igmp_handle+0x9c>)
 8007a02:	681f      	ldr	r7, [r3, #0]
 8007a04:	428f      	cmp	r7, r1
 8007a06:	d10a      	bne.n	8007a1e <igmp_handle+0x4e>
 8007a08:	b003      	add	sp, #12
 8007a0a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8007a0e:	f812 1b01 	ldrb.w	r1, [r2], #1
 8007a12:	f813 4f01 	ldrb.w	r4, [r3, #1]!
 8007a16:	428c      	cmp	r4, r1
 8007a18:	d0eb      	beq.n	80079f2 <igmp_handle+0x22>
 8007a1a:	2400      	movs	r4, #0
 8007a1c:	e7ec      	b.n	80079f8 <igmp_handle+0x28>
 8007a1e:	6813      	ldr	r3, [r2, #0]
 8007a20:	9301      	str	r3, [sp, #4]
 8007a22:	b924      	cbnz	r4, 8007a2e <igmp_handle+0x5e>
 8007a24:	462b      	mov	r3, r5
 8007a26:	f10d 0e04 	add.w	lr, sp, #4
 8007a2a:	42b3      	cmp	r3, r6
 8007a2c:	d10e      	bne.n	8007a4c <igmp_handle+0x7c>
 8007a2e:	f892 e005 	ldrb.w	lr, [r2, #5]
 8007a32:	f890 3023 	ldrb.w	r3, [r0, #35]	; 0x23
 8007a36:	f1be 0f01 	cmp.w	lr, #1
 8007a3a:	d110      	bne.n	8007a5e <igmp_handle+0x8e>
 8007a3c:	f892 e004 	ldrb.w	lr, [r2, #4]
 8007a40:	459e      	cmp	lr, r3
 8007a42:	d909      	bls.n	8007a58 <igmp_handle+0x88>
 8007a44:	085b      	lsrs	r3, r3, #1
 8007a46:	3301      	adds	r3, #1
 8007a48:	7113      	strb	r3, [r2, #4]
 8007a4a:	e005      	b.n	8007a58 <igmp_handle+0x88>
 8007a4c:	f81e 8b01 	ldrb.w	r8, [lr], #1
 8007a50:	f813 9f01 	ldrb.w	r9, [r3, #1]!
 8007a54:	45c1      	cmp	r9, r8
 8007a56:	d0e8      	beq.n	8007a2a <igmp_handle+0x5a>
 8007a58:	3101      	adds	r1, #1
 8007a5a:	3208      	adds	r2, #8
 8007a5c:	e7d2      	b.n	8007a04 <igmp_handle+0x34>
 8007a5e:	f882 c005 	strb.w	ip, [r2, #5]
 8007a62:	e7ef      	b.n	8007a44 <igmp_handle+0x74>
 8007a64:	010000e0 	smlatteq	r0, r0, r0, r0
 8007a68:	2001d8ac 	andcs	sp, r1, ip, lsr #17
 8007a6c:	2001d788 	andcs	sp, r1, r8, lsl #15

08007a70 <ip_handle>:
 8007a70:	7b82      	ldrb	r2, [r0, #14]
 8007a72:	7dc3      	ldrb	r3, [r0, #23]
 8007a74:	2a45      	cmp	r2, #69	; 0x45
 8007a76:	d003      	beq.n	8007a80 <ip_handle+0x10>
 8007a78:	2b02      	cmp	r3, #2
 8007a7a:	d111      	bne.n	8007aa0 <ip_handle+0x30>
 8007a7c:	f7ff bfa8 	b.w	80079d0 <igmp_handle>
 8007a80:	2b06      	cmp	r3, #6
 8007a82:	d00b      	beq.n	8007a9c <ip_handle+0x2c>
 8007a84:	d804      	bhi.n	8007a90 <ip_handle+0x20>
 8007a86:	2b01      	cmp	r3, #1
 8007a88:	d006      	beq.n	8007a98 <ip_handle+0x28>
 8007a8a:	2b02      	cmp	r3, #2
 8007a8c:	d0f6      	beq.n	8007a7c <ip_handle+0xc>
 8007a8e:	4770      	bx	lr
 8007a90:	2b11      	cmp	r3, #17
 8007a92:	d105      	bne.n	8007aa0 <ip_handle+0x30>
 8007a94:	f7ff bf3c 	b.w	8007910 <udp_handle>
 8007a98:	f000 b804 	b.w	8007aa4 <icmp_handle>
 8007a9c:	f7ff bd88 	b.w	80075b0 <tcp_handle>
 8007aa0:	4770      	bx	lr
	...

08007aa4 <icmp_handle>:
 8007aa4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007aa6:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 8007aaa:	4604      	mov	r4, r0
 8007aac:	2b08      	cmp	r3, #8
 8007aae:	d13e      	bne.n	8007b2e <icmp_handle+0x8a>
 8007ab0:	f890 5023 	ldrb.w	r5, [r0, #35]	; 0x23
 8007ab4:	2d00      	cmp	r5, #0
 8007ab6:	d13a      	bne.n	8007b2e <icmp_handle+0x8a>
 8007ab8:	1d86      	adds	r6, r0, #6
 8007aba:	4631      	mov	r1, r6
 8007abc:	2206      	movs	r2, #6
 8007abe:	f009 fba7 	bl	8011210 <memcpy.isra.0>
 8007ac2:	4630      	mov	r0, r6
 8007ac4:	2206      	movs	r2, #6
 8007ac6:	491b      	ldr	r1, [pc, #108]	; (8007b34 <icmp_handle+0x90>)
 8007ac8:	f009 fba2 	bl	8011210 <memcpy.isra.0>
 8007acc:	8a63      	ldrh	r3, [r4, #18]
 8007ace:	f104 061a 	add.w	r6, r4, #26
 8007ad2:	43db      	mvns	r3, r3
 8007ad4:	4631      	mov	r1, r6
 8007ad6:	2204      	movs	r2, #4
 8007ad8:	8263      	strh	r3, [r4, #18]
 8007ada:	f104 001e 	add.w	r0, r4, #30
 8007ade:	f009 fb97 	bl	8011210 <memcpy.isra.0>
 8007ae2:	2204      	movs	r2, #4
 8007ae4:	4b14      	ldr	r3, [pc, #80]	; (8007b38 <icmp_handle+0x94>)
 8007ae6:	eb0d 0102 	add.w	r1, sp, r2
 8007aea:	681b      	ldr	r3, [r3, #0]
 8007aec:	4630      	mov	r0, r6
 8007aee:	f104 060e 	add.w	r6, r4, #14
 8007af2:	9301      	str	r3, [sp, #4]
 8007af4:	f009 fb8c 	bl	8011210 <memcpy.isra.0>
 8007af8:	2114      	movs	r1, #20
 8007afa:	4630      	mov	r0, r6
 8007afc:	7625      	strb	r5, [r4, #24]
 8007afe:	7665      	strb	r5, [r4, #25]
 8007b00:	f009 fb6d 	bl	80111de <net_chksum>
 8007b04:	8a21      	ldrh	r1, [r4, #16]
 8007b06:	8320      	strh	r0, [r4, #24]
 8007b08:	ba49      	rev16	r1, r1
 8007b0a:	b289      	uxth	r1, r1
 8007b0c:	4630      	mov	r0, r6
 8007b0e:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8007b12:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8007b16:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 8007b1a:	f009 fb60 	bl	80111de <net_chksum>
 8007b1e:	8a21      	ldrh	r1, [r4, #16]
 8007b20:	84a0      	strh	r0, [r4, #36]	; 0x24
 8007b22:	ba49      	rev16	r1, r1
 8007b24:	b289      	uxth	r1, r1
 8007b26:	4620      	mov	r0, r4
 8007b28:	310e      	adds	r1, #14
 8007b2a:	f00b ff2f 	bl	801398c <emac_eth_send>
 8007b2e:	b002      	add	sp, #8
 8007b30:	bd70      	pop	{r4, r5, r6, pc}
 8007b32:	bf00      	nop
 8007b34:	20015a88 	andcs	r5, r1, r8, lsl #21
 8007b38:	20015a7c 	andcs	r5, r1, ip, ror sl

08007b3c <__aeabi_d2f>:
 8007b3c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8007b40:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8007b44:	bf24      	itt	cs
 8007b46:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8007b4a:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8007b4e:	d90d      	bls.n	8007b6c <__aeabi_d2f+0x30>
 8007b50:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8007b54:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8007b58:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8007b5c:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8007b60:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8007b64:	bf08      	it	eq
 8007b66:	f020 0001 	biceq.w	r0, r0, #1
 8007b6a:	4770      	bx	lr
 8007b6c:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8007b70:	d121      	bne.n	8007bb6 <__aeabi_d2f+0x7a>
 8007b72:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8007b76:	bfbc      	itt	lt
 8007b78:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8007b7c:	4770      	bxlt	lr
 8007b7e:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8007b82:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8007b86:	f1c2 0218 	rsb	r2, r2, #24
 8007b8a:	f1c2 0c20 	rsb	ip, r2, #32
 8007b8e:	fa10 f30c 	lsls.w	r3, r0, ip
 8007b92:	fa20 f002 	lsr.w	r0, r0, r2
 8007b96:	bf18      	it	ne
 8007b98:	f040 0001 	orrne.w	r0, r0, #1
 8007b9c:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8007ba0:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8007ba4:	fa03 fc0c 	lsl.w	ip, r3, ip
 8007ba8:	ea40 000c 	orr.w	r0, r0, ip
 8007bac:	fa23 f302 	lsr.w	r3, r3, r2
 8007bb0:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8007bb4:	e7cc      	b.n	8007b50 <__aeabi_d2f+0x14>
 8007bb6:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8007bba:	d107      	bne.n	8007bcc <__aeabi_d2f+0x90>
 8007bbc:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8007bc0:	bf1e      	ittt	ne
 8007bc2:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8007bc6:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8007bca:	4770      	bxne	lr
 8007bcc:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8007bd0:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8007bd4:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007bd8:	4770      	bx	lr
 8007bda:	bf00      	nop

08007bdc <__aeabi_frsub>:
 8007bdc:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
 8007be0:	e002      	b.n	8007be8 <__addsf3>
 8007be2:	bf00      	nop

08007be4 <__aeabi_fsub>:
 8007be4:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

08007be8 <__addsf3>:
 8007be8:	0042      	lsls	r2, r0, #1
 8007bea:	bf1f      	itttt	ne
 8007bec:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8007bf0:	ea92 0f03 	teqne	r2, r3
 8007bf4:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8007bf8:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8007bfc:	d06a      	beq.n	8007cd4 <__addsf3+0xec>
 8007bfe:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8007c02:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8007c06:	bfc1      	itttt	gt
 8007c08:	18d2      	addgt	r2, r2, r3
 8007c0a:	4041      	eorgt	r1, r0
 8007c0c:	4048      	eorgt	r0, r1
 8007c0e:	4041      	eorgt	r1, r0
 8007c10:	bfb8      	it	lt
 8007c12:	425b      	neglt	r3, r3
 8007c14:	2b19      	cmp	r3, #25
 8007c16:	bf88      	it	hi
 8007c18:	4770      	bxhi	lr
 8007c1a:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8007c1e:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007c22:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 8007c26:	bf18      	it	ne
 8007c28:	4240      	negne	r0, r0
 8007c2a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8007c2e:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8007c32:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 8007c36:	bf18      	it	ne
 8007c38:	4249      	negne	r1, r1
 8007c3a:	ea92 0f03 	teq	r2, r3
 8007c3e:	d03f      	beq.n	8007cc0 <__addsf3+0xd8>
 8007c40:	f1a2 0201 	sub.w	r2, r2, #1
 8007c44:	fa41 fc03 	asr.w	ip, r1, r3
 8007c48:	eb10 000c 	adds.w	r0, r0, ip
 8007c4c:	f1c3 0320 	rsb	r3, r3, #32
 8007c50:	fa01 f103 	lsl.w	r1, r1, r3
 8007c54:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8007c58:	d502      	bpl.n	8007c60 <__addsf3+0x78>
 8007c5a:	4249      	negs	r1, r1
 8007c5c:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8007c60:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
 8007c64:	d313      	bcc.n	8007c8e <__addsf3+0xa6>
 8007c66:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 8007c6a:	d306      	bcc.n	8007c7a <__addsf3+0x92>
 8007c6c:	0840      	lsrs	r0, r0, #1
 8007c6e:	ea4f 0131 	mov.w	r1, r1, rrx
 8007c72:	f102 0201 	add.w	r2, r2, #1
 8007c76:	2afe      	cmp	r2, #254	; 0xfe
 8007c78:	d251      	bcs.n	8007d1e <__addsf3+0x136>
 8007c7a:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
 8007c7e:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8007c82:	bf08      	it	eq
 8007c84:	f020 0001 	biceq.w	r0, r0, #1
 8007c88:	ea40 0003 	orr.w	r0, r0, r3
 8007c8c:	4770      	bx	lr
 8007c8e:	0049      	lsls	r1, r1, #1
 8007c90:	eb40 0000 	adc.w	r0, r0, r0
 8007c94:	3a01      	subs	r2, #1
 8007c96:	bf28      	it	cs
 8007c98:	f5b0 0f00 	cmpcs.w	r0, #8388608	; 0x800000
 8007c9c:	d2ed      	bcs.n	8007c7a <__addsf3+0x92>
 8007c9e:	fab0 fc80 	clz	ip, r0
 8007ca2:	f1ac 0c08 	sub.w	ip, ip, #8
 8007ca6:	ebb2 020c 	subs.w	r2, r2, ip
 8007caa:	fa00 f00c 	lsl.w	r0, r0, ip
 8007cae:	bfaa      	itet	ge
 8007cb0:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8007cb4:	4252      	neglt	r2, r2
 8007cb6:	4318      	orrge	r0, r3
 8007cb8:	bfbc      	itt	lt
 8007cba:	40d0      	lsrlt	r0, r2
 8007cbc:	4318      	orrlt	r0, r3
 8007cbe:	4770      	bx	lr
 8007cc0:	f092 0f00 	teq	r2, #0
 8007cc4:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
 8007cc8:	bf06      	itte	eq
 8007cca:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
 8007cce:	3201      	addeq	r2, #1
 8007cd0:	3b01      	subne	r3, #1
 8007cd2:	e7b5      	b.n	8007c40 <__addsf3+0x58>
 8007cd4:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8007cd8:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8007cdc:	bf18      	it	ne
 8007cde:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8007ce2:	d021      	beq.n	8007d28 <__addsf3+0x140>
 8007ce4:	ea92 0f03 	teq	r2, r3
 8007ce8:	d004      	beq.n	8007cf4 <__addsf3+0x10c>
 8007cea:	f092 0f00 	teq	r2, #0
 8007cee:	bf08      	it	eq
 8007cf0:	4608      	moveq	r0, r1
 8007cf2:	4770      	bx	lr
 8007cf4:	ea90 0f01 	teq	r0, r1
 8007cf8:	bf1c      	itt	ne
 8007cfa:	2000      	movne	r0, #0
 8007cfc:	4770      	bxne	lr
 8007cfe:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
 8007d02:	d104      	bne.n	8007d0e <__addsf3+0x126>
 8007d04:	0040      	lsls	r0, r0, #1
 8007d06:	bf28      	it	cs
 8007d08:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
 8007d0c:	4770      	bx	lr
 8007d0e:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
 8007d12:	bf3c      	itt	cc
 8007d14:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
 8007d18:	4770      	bxcc	lr
 8007d1a:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8007d1e:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
 8007d22:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007d26:	4770      	bx	lr
 8007d28:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8007d2c:	bf16      	itet	ne
 8007d2e:	4608      	movne	r0, r1
 8007d30:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8007d34:	4601      	movne	r1, r0
 8007d36:	0242      	lsls	r2, r0, #9
 8007d38:	bf06      	itte	eq
 8007d3a:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8007d3e:	ea90 0f01 	teqeq	r0, r1
 8007d42:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
 8007d46:	4770      	bx	lr

08007d48 <__aeabi_ui2f>:
 8007d48:	f04f 0300 	mov.w	r3, #0
 8007d4c:	e004      	b.n	8007d58 <__aeabi_i2f+0x8>
 8007d4e:	bf00      	nop

08007d50 <__aeabi_i2f>:
 8007d50:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
 8007d54:	bf48      	it	mi
 8007d56:	4240      	negmi	r0, r0
 8007d58:	ea5f 0c00 	movs.w	ip, r0
 8007d5c:	bf08      	it	eq
 8007d5e:	4770      	bxeq	lr
 8007d60:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
 8007d64:	4601      	mov	r1, r0
 8007d66:	f04f 0000 	mov.w	r0, #0
 8007d6a:	e01c      	b.n	8007da6 <__aeabi_l2f+0x2a>

08007d6c <__aeabi_ul2f>:
 8007d6c:	ea50 0201 	orrs.w	r2, r0, r1
 8007d70:	bf08      	it	eq
 8007d72:	4770      	bxeq	lr
 8007d74:	f04f 0300 	mov.w	r3, #0
 8007d78:	e00a      	b.n	8007d90 <__aeabi_l2f+0x14>
 8007d7a:	bf00      	nop

08007d7c <__aeabi_l2f>:
 8007d7c:	ea50 0201 	orrs.w	r2, r0, r1
 8007d80:	bf08      	it	eq
 8007d82:	4770      	bxeq	lr
 8007d84:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
 8007d88:	d502      	bpl.n	8007d90 <__aeabi_l2f+0x14>
 8007d8a:	4240      	negs	r0, r0
 8007d8c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8007d90:	ea5f 0c01 	movs.w	ip, r1
 8007d94:	bf02      	ittt	eq
 8007d96:	4684      	moveq	ip, r0
 8007d98:	4601      	moveq	r1, r0
 8007d9a:	2000      	moveq	r0, #0
 8007d9c:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
 8007da0:	bf08      	it	eq
 8007da2:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
 8007da6:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
 8007daa:	fabc f28c 	clz	r2, ip
 8007dae:	3a08      	subs	r2, #8
 8007db0:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8007db4:	db10      	blt.n	8007dd8 <__aeabi_l2f+0x5c>
 8007db6:	fa01 fc02 	lsl.w	ip, r1, r2
 8007dba:	4463      	add	r3, ip
 8007dbc:	fa00 fc02 	lsl.w	ip, r0, r2
 8007dc0:	f1c2 0220 	rsb	r2, r2, #32
 8007dc4:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8007dc8:	fa20 f202 	lsr.w	r2, r0, r2
 8007dcc:	eb43 0002 	adc.w	r0, r3, r2
 8007dd0:	bf08      	it	eq
 8007dd2:	f020 0001 	biceq.w	r0, r0, #1
 8007dd6:	4770      	bx	lr
 8007dd8:	f102 0220 	add.w	r2, r2, #32
 8007ddc:	fa01 fc02 	lsl.w	ip, r1, r2
 8007de0:	f1c2 0220 	rsb	r2, r2, #32
 8007de4:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8007de8:	fa21 f202 	lsr.w	r2, r1, r2
 8007dec:	eb43 0002 	adc.w	r0, r3, r2
 8007df0:	bf08      	it	eq
 8007df2:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8007df6:	4770      	bx	lr

08007df8 <__gesf2>:
 8007df8:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
 8007dfc:	e006      	b.n	8007e0c <__cmpsf2+0x4>
 8007dfe:	bf00      	nop

08007e00 <__lesf2>:
 8007e00:	f04f 0c01 	mov.w	ip, #1
 8007e04:	e002      	b.n	8007e0c <__cmpsf2+0x4>
 8007e06:	bf00      	nop

08007e08 <__cmpsf2>:
 8007e08:	f04f 0c01 	mov.w	ip, #1
 8007e0c:	f84d cd04 	str.w	ip, [sp, #-4]!
 8007e10:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8007e14:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8007e18:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8007e1c:	bf18      	it	ne
 8007e1e:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8007e22:	d011      	beq.n	8007e48 <__cmpsf2+0x40>
 8007e24:	b001      	add	sp, #4
 8007e26:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
 8007e2a:	bf18      	it	ne
 8007e2c:	ea90 0f01 	teqne	r0, r1
 8007e30:	bf58      	it	pl
 8007e32:	ebb2 0003 	subspl.w	r0, r2, r3
 8007e36:	bf88      	it	hi
 8007e38:	17c8      	asrhi	r0, r1, #31
 8007e3a:	bf38      	it	cc
 8007e3c:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
 8007e40:	bf18      	it	ne
 8007e42:	f040 0001 	orrne.w	r0, r0, #1
 8007e46:	4770      	bx	lr
 8007e48:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8007e4c:	d102      	bne.n	8007e54 <__cmpsf2+0x4c>
 8007e4e:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 8007e52:	d105      	bne.n	8007e60 <__cmpsf2+0x58>
 8007e54:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 8007e58:	d1e4      	bne.n	8007e24 <__cmpsf2+0x1c>
 8007e5a:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 8007e5e:	d0e1      	beq.n	8007e24 <__cmpsf2+0x1c>
 8007e60:	f85d 0b04 	ldr.w	r0, [sp], #4
 8007e64:	4770      	bx	lr
 8007e66:	bf00      	nop

08007e68 <__aeabi_cfrcmple>:
 8007e68:	4684      	mov	ip, r0
 8007e6a:	4608      	mov	r0, r1
 8007e6c:	4661      	mov	r1, ip
 8007e6e:	e7ff      	b.n	8007e70 <__aeabi_cfcmpeq>

08007e70 <__aeabi_cfcmpeq>:
 8007e70:	b50f      	push	{r0, r1, r2, r3, lr}
 8007e72:	f7ff ffc9 	bl	8007e08 <__cmpsf2>
 8007e76:	2800      	cmp	r0, #0
 8007e78:	bf48      	it	mi
 8007e7a:	f110 0f00 	cmnmi.w	r0, #0
 8007e7e:	bd0f      	pop	{r0, r1, r2, r3, pc}

08007e80 <__aeabi_fcmpeq>:
 8007e80:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007e84:	f7ff fff4 	bl	8007e70 <__aeabi_cfcmpeq>
 8007e88:	bf0c      	ite	eq
 8007e8a:	2001      	moveq	r0, #1
 8007e8c:	2000      	movne	r0, #0
 8007e8e:	f85d fb08 	ldr.w	pc, [sp], #8
 8007e92:	bf00      	nop

08007e94 <__aeabi_fcmplt>:
 8007e94:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007e98:	f7ff ffea 	bl	8007e70 <__aeabi_cfcmpeq>
 8007e9c:	bf34      	ite	cc
 8007e9e:	2001      	movcc	r0, #1
 8007ea0:	2000      	movcs	r0, #0
 8007ea2:	f85d fb08 	ldr.w	pc, [sp], #8
 8007ea6:	bf00      	nop

08007ea8 <__aeabi_fcmple>:
 8007ea8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007eac:	f7ff ffe0 	bl	8007e70 <__aeabi_cfcmpeq>
 8007eb0:	bf94      	ite	ls
 8007eb2:	2001      	movls	r0, #1
 8007eb4:	2000      	movhi	r0, #0
 8007eb6:	f85d fb08 	ldr.w	pc, [sp], #8
 8007eba:	bf00      	nop

08007ebc <__aeabi_fcmpge>:
 8007ebc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007ec0:	f7ff ffd2 	bl	8007e68 <__aeabi_cfrcmple>
 8007ec4:	bf94      	ite	ls
 8007ec6:	2001      	movls	r0, #1
 8007ec8:	2000      	movhi	r0, #0
 8007eca:	f85d fb08 	ldr.w	pc, [sp], #8
 8007ece:	bf00      	nop

08007ed0 <__aeabi_fcmpgt>:
 8007ed0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007ed4:	f7ff ffc8 	bl	8007e68 <__aeabi_cfrcmple>
 8007ed8:	bf34      	ite	cc
 8007eda:	2001      	movcc	r0, #1
 8007edc:	2000      	movcs	r0, #0
 8007ede:	f85d fb08 	ldr.w	pc, [sp], #8
 8007ee2:	bf00      	nop

08007ee4 <__aeabi_f2iz>:
 8007ee4:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8007ee8:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 8007eec:	d30f      	bcc.n	8007f0e <__aeabi_f2iz+0x2a>
 8007eee:	f04f 039e 	mov.w	r3, #158	; 0x9e
 8007ef2:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 8007ef6:	d90d      	bls.n	8007f14 <__aeabi_f2iz+0x30>
 8007ef8:	ea4f 2300 	mov.w	r3, r0, lsl #8
 8007efc:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8007f00:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8007f04:	fa23 f002 	lsr.w	r0, r3, r2
 8007f08:	bf18      	it	ne
 8007f0a:	4240      	negne	r0, r0
 8007f0c:	4770      	bx	lr
 8007f0e:	f04f 0000 	mov.w	r0, #0
 8007f12:	4770      	bx	lr
 8007f14:	f112 0f61 	cmn.w	r2, #97	; 0x61
 8007f18:	d101      	bne.n	8007f1e <__aeabi_f2iz+0x3a>
 8007f1a:	0242      	lsls	r2, r0, #9
 8007f1c:	d105      	bne.n	8007f2a <__aeabi_f2iz+0x46>
 8007f1e:	f010 4000 	ands.w	r0, r0, #2147483648	; 0x80000000
 8007f22:	bf08      	it	eq
 8007f24:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8007f28:	4770      	bx	lr
 8007f2a:	f04f 0000 	mov.w	r0, #0
 8007f2e:	4770      	bx	lr

08007f30 <__aeabi_uldivmod>:
 8007f30:	b953      	cbnz	r3, 8007f48 <__aeabi_uldivmod+0x18>
 8007f32:	b94a      	cbnz	r2, 8007f48 <__aeabi_uldivmod+0x18>
 8007f34:	2900      	cmp	r1, #0
 8007f36:	bf08      	it	eq
 8007f38:	2800      	cmpeq	r0, #0
 8007f3a:	bf1c      	itt	ne
 8007f3c:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 8007f40:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 8007f44:	f000 b80c 	b.w	8007f60 <__aeabi_idiv0>
 8007f48:	f1ad 0c08 	sub.w	ip, sp, #8
 8007f4c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8007f50:	f001 fb5c 	bl	800960c <__udivmoddi4>
 8007f54:	f8dd e004 	ldr.w	lr, [sp, #4]
 8007f58:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8007f5c:	b004      	add	sp, #16
 8007f5e:	4770      	bx	lr

08007f60 <__aeabi_idiv0>:
 8007f60:	4770      	bx	lr
 8007f62:	bf00      	nop

08007f64 <__aeabi_drsub>:
 8007f64:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8007f68:	e002      	b.n	8007f70 <__adddf3>
 8007f6a:	bf00      	nop

08007f6c <__aeabi_dsub>:
 8007f6c:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

08007f70 <__adddf3>:
 8007f70:	b530      	push	{r4, r5, lr}
 8007f72:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8007f76:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8007f7a:	ea94 0f05 	teq	r4, r5
 8007f7e:	bf08      	it	eq
 8007f80:	ea90 0f02 	teqeq	r0, r2
 8007f84:	bf1f      	itttt	ne
 8007f86:	ea54 0c00 	orrsne.w	ip, r4, r0
 8007f8a:	ea55 0c02 	orrsne.w	ip, r5, r2
 8007f8e:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8007f92:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8007f96:	f000 80e2 	beq.w	800815e <__adddf3+0x1ee>
 8007f9a:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8007f9e:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8007fa2:	bfb8      	it	lt
 8007fa4:	426d      	neglt	r5, r5
 8007fa6:	dd0c      	ble.n	8007fc2 <__adddf3+0x52>
 8007fa8:	442c      	add	r4, r5
 8007faa:	ea80 0202 	eor.w	r2, r0, r2
 8007fae:	ea81 0303 	eor.w	r3, r1, r3
 8007fb2:	ea82 0000 	eor.w	r0, r2, r0
 8007fb6:	ea83 0101 	eor.w	r1, r3, r1
 8007fba:	ea80 0202 	eor.w	r2, r0, r2
 8007fbe:	ea81 0303 	eor.w	r3, r1, r3
 8007fc2:	2d36      	cmp	r5, #54	; 0x36
 8007fc4:	bf88      	it	hi
 8007fc6:	bd30      	pophi	{r4, r5, pc}
 8007fc8:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8007fcc:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8007fd0:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8007fd4:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8007fd8:	d002      	beq.n	8007fe0 <__adddf3+0x70>
 8007fda:	4240      	negs	r0, r0
 8007fdc:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8007fe0:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8007fe4:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8007fe8:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8007fec:	d002      	beq.n	8007ff4 <__adddf3+0x84>
 8007fee:	4252      	negs	r2, r2
 8007ff0:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8007ff4:	ea94 0f05 	teq	r4, r5
 8007ff8:	f000 80a7 	beq.w	800814a <__adddf3+0x1da>
 8007ffc:	f1a4 0401 	sub.w	r4, r4, #1
 8008000:	f1d5 0e20 	rsbs	lr, r5, #32
 8008004:	db0d      	blt.n	8008022 <__adddf3+0xb2>
 8008006:	fa02 fc0e 	lsl.w	ip, r2, lr
 800800a:	fa22 f205 	lsr.w	r2, r2, r5
 800800e:	1880      	adds	r0, r0, r2
 8008010:	f141 0100 	adc.w	r1, r1, #0
 8008014:	fa03 f20e 	lsl.w	r2, r3, lr
 8008018:	1880      	adds	r0, r0, r2
 800801a:	fa43 f305 	asr.w	r3, r3, r5
 800801e:	4159      	adcs	r1, r3
 8008020:	e00e      	b.n	8008040 <__adddf3+0xd0>
 8008022:	f1a5 0520 	sub.w	r5, r5, #32
 8008026:	f10e 0e20 	add.w	lr, lr, #32
 800802a:	2a01      	cmp	r2, #1
 800802c:	fa03 fc0e 	lsl.w	ip, r3, lr
 8008030:	bf28      	it	cs
 8008032:	f04c 0c02 	orrcs.w	ip, ip, #2
 8008036:	fa43 f305 	asr.w	r3, r3, r5
 800803a:	18c0      	adds	r0, r0, r3
 800803c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8008040:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8008044:	d507      	bpl.n	8008056 <__adddf3+0xe6>
 8008046:	f04f 0e00 	mov.w	lr, #0
 800804a:	f1dc 0c00 	rsbs	ip, ip, #0
 800804e:	eb7e 0000 	sbcs.w	r0, lr, r0
 8008052:	eb6e 0101 	sbc.w	r1, lr, r1
 8008056:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 800805a:	d31b      	bcc.n	8008094 <__adddf3+0x124>
 800805c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 8008060:	d30c      	bcc.n	800807c <__adddf3+0x10c>
 8008062:	0849      	lsrs	r1, r1, #1
 8008064:	ea5f 0030 	movs.w	r0, r0, rrx
 8008068:	ea4f 0c3c 	mov.w	ip, ip, rrx
 800806c:	f104 0401 	add.w	r4, r4, #1
 8008070:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8008074:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8008078:	f080 809a 	bcs.w	80081b0 <__adddf3+0x240>
 800807c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8008080:	bf08      	it	eq
 8008082:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8008086:	f150 0000 	adcs.w	r0, r0, #0
 800808a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800808e:	ea41 0105 	orr.w	r1, r1, r5
 8008092:	bd30      	pop	{r4, r5, pc}
 8008094:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8008098:	4140      	adcs	r0, r0
 800809a:	eb41 0101 	adc.w	r1, r1, r1
 800809e:	3c01      	subs	r4, #1
 80080a0:	bf28      	it	cs
 80080a2:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80080a6:	d2e9      	bcs.n	800807c <__adddf3+0x10c>
 80080a8:	f091 0f00 	teq	r1, #0
 80080ac:	bf04      	itt	eq
 80080ae:	4601      	moveq	r1, r0
 80080b0:	2000      	moveq	r0, #0
 80080b2:	fab1 f381 	clz	r3, r1
 80080b6:	bf08      	it	eq
 80080b8:	3320      	addeq	r3, #32
 80080ba:	f1a3 030b 	sub.w	r3, r3, #11
 80080be:	f1b3 0220 	subs.w	r2, r3, #32
 80080c2:	da0c      	bge.n	80080de <__adddf3+0x16e>
 80080c4:	320c      	adds	r2, #12
 80080c6:	dd08      	ble.n	80080da <__adddf3+0x16a>
 80080c8:	f102 0c14 	add.w	ip, r2, #20
 80080cc:	f1c2 020c 	rsb	r2, r2, #12
 80080d0:	fa01 f00c 	lsl.w	r0, r1, ip
 80080d4:	fa21 f102 	lsr.w	r1, r1, r2
 80080d8:	e00c      	b.n	80080f4 <__adddf3+0x184>
 80080da:	f102 0214 	add.w	r2, r2, #20
 80080de:	bfd8      	it	le
 80080e0:	f1c2 0c20 	rsble	ip, r2, #32
 80080e4:	fa01 f102 	lsl.w	r1, r1, r2
 80080e8:	fa20 fc0c 	lsr.w	ip, r0, ip
 80080ec:	bfdc      	itt	le
 80080ee:	ea41 010c 	orrle.w	r1, r1, ip
 80080f2:	4090      	lslle	r0, r2
 80080f4:	1ae4      	subs	r4, r4, r3
 80080f6:	bfa2      	ittt	ge
 80080f8:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80080fc:	4329      	orrge	r1, r5
 80080fe:	bd30      	popge	{r4, r5, pc}
 8008100:	ea6f 0404 	mvn.w	r4, r4
 8008104:	3c1f      	subs	r4, #31
 8008106:	da1c      	bge.n	8008142 <__adddf3+0x1d2>
 8008108:	340c      	adds	r4, #12
 800810a:	dc0e      	bgt.n	800812a <__adddf3+0x1ba>
 800810c:	f104 0414 	add.w	r4, r4, #20
 8008110:	f1c4 0220 	rsb	r2, r4, #32
 8008114:	fa20 f004 	lsr.w	r0, r0, r4
 8008118:	fa01 f302 	lsl.w	r3, r1, r2
 800811c:	ea40 0003 	orr.w	r0, r0, r3
 8008120:	fa21 f304 	lsr.w	r3, r1, r4
 8008124:	ea45 0103 	orr.w	r1, r5, r3
 8008128:	bd30      	pop	{r4, r5, pc}
 800812a:	f1c4 040c 	rsb	r4, r4, #12
 800812e:	f1c4 0220 	rsb	r2, r4, #32
 8008132:	fa20 f002 	lsr.w	r0, r0, r2
 8008136:	fa01 f304 	lsl.w	r3, r1, r4
 800813a:	ea40 0003 	orr.w	r0, r0, r3
 800813e:	4629      	mov	r1, r5
 8008140:	bd30      	pop	{r4, r5, pc}
 8008142:	fa21 f004 	lsr.w	r0, r1, r4
 8008146:	4629      	mov	r1, r5
 8008148:	bd30      	pop	{r4, r5, pc}
 800814a:	f094 0f00 	teq	r4, #0
 800814e:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 8008152:	bf06      	itte	eq
 8008154:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8008158:	3401      	addeq	r4, #1
 800815a:	3d01      	subne	r5, #1
 800815c:	e74e      	b.n	8007ffc <__adddf3+0x8c>
 800815e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8008162:	bf18      	it	ne
 8008164:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8008168:	d029      	beq.n	80081be <__adddf3+0x24e>
 800816a:	ea94 0f05 	teq	r4, r5
 800816e:	bf08      	it	eq
 8008170:	ea90 0f02 	teqeq	r0, r2
 8008174:	d005      	beq.n	8008182 <__adddf3+0x212>
 8008176:	ea54 0c00 	orrs.w	ip, r4, r0
 800817a:	bf04      	itt	eq
 800817c:	4619      	moveq	r1, r3
 800817e:	4610      	moveq	r0, r2
 8008180:	bd30      	pop	{r4, r5, pc}
 8008182:	ea91 0f03 	teq	r1, r3
 8008186:	bf1e      	ittt	ne
 8008188:	2100      	movne	r1, #0
 800818a:	2000      	movne	r0, #0
 800818c:	bd30      	popne	{r4, r5, pc}
 800818e:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8008192:	d105      	bne.n	80081a0 <__adddf3+0x230>
 8008194:	0040      	lsls	r0, r0, #1
 8008196:	4149      	adcs	r1, r1
 8008198:	bf28      	it	cs
 800819a:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 800819e:	bd30      	pop	{r4, r5, pc}
 80081a0:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80081a4:	bf3c      	itt	cc
 80081a6:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80081aa:	bd30      	popcc	{r4, r5, pc}
 80081ac:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80081b0:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80081b4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80081b8:	f04f 0000 	mov.w	r0, #0
 80081bc:	bd30      	pop	{r4, r5, pc}
 80081be:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80081c2:	bf1a      	itte	ne
 80081c4:	4619      	movne	r1, r3
 80081c6:	4610      	movne	r0, r2
 80081c8:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80081cc:	bf1c      	itt	ne
 80081ce:	460b      	movne	r3, r1
 80081d0:	4602      	movne	r2, r0
 80081d2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80081d6:	bf06      	itte	eq
 80081d8:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80081dc:	ea91 0f03 	teqeq	r1, r3
 80081e0:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 80081e4:	bd30      	pop	{r4, r5, pc}
 80081e6:	bf00      	nop

080081e8 <__aeabi_ui2d>:
 80081e8:	f090 0f00 	teq	r0, #0
 80081ec:	bf04      	itt	eq
 80081ee:	2100      	moveq	r1, #0
 80081f0:	4770      	bxeq	lr
 80081f2:	b530      	push	{r4, r5, lr}
 80081f4:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80081f8:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80081fc:	f04f 0500 	mov.w	r5, #0
 8008200:	f04f 0100 	mov.w	r1, #0
 8008204:	e750      	b.n	80080a8 <__adddf3+0x138>
 8008206:	bf00      	nop

08008208 <__aeabi_i2d>:
 8008208:	f090 0f00 	teq	r0, #0
 800820c:	bf04      	itt	eq
 800820e:	2100      	moveq	r1, #0
 8008210:	4770      	bxeq	lr
 8008212:	b530      	push	{r4, r5, lr}
 8008214:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8008218:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800821c:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8008220:	bf48      	it	mi
 8008222:	4240      	negmi	r0, r0
 8008224:	f04f 0100 	mov.w	r1, #0
 8008228:	e73e      	b.n	80080a8 <__adddf3+0x138>
 800822a:	bf00      	nop

0800822c <__aeabi_f2d>:
 800822c:	0042      	lsls	r2, r0, #1
 800822e:	ea4f 01e2 	mov.w	r1, r2, asr #3
 8008232:	ea4f 0131 	mov.w	r1, r1, rrx
 8008236:	ea4f 7002 	mov.w	r0, r2, lsl #28
 800823a:	bf1f      	itttt	ne
 800823c:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 8008240:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8008244:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8008248:	4770      	bxne	lr
 800824a:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800824e:	bf08      	it	eq
 8008250:	4770      	bxeq	lr
 8008252:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8008256:	bf04      	itt	eq
 8008258:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 800825c:	4770      	bxeq	lr
 800825e:	b530      	push	{r4, r5, lr}
 8008260:	f44f 7460 	mov.w	r4, #896	; 0x380
 8008264:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8008268:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 800826c:	e71c      	b.n	80080a8 <__adddf3+0x138>
 800826e:	bf00      	nop

08008270 <__aeabi_ul2d>:
 8008270:	ea50 0201 	orrs.w	r2, r0, r1
 8008274:	bf08      	it	eq
 8008276:	4770      	bxeq	lr
 8008278:	b530      	push	{r4, r5, lr}
 800827a:	f04f 0500 	mov.w	r5, #0
 800827e:	e00a      	b.n	8008296 <__aeabi_l2d+0x16>

08008280 <__aeabi_l2d>:
 8008280:	ea50 0201 	orrs.w	r2, r0, r1
 8008284:	bf08      	it	eq
 8008286:	4770      	bxeq	lr
 8008288:	b530      	push	{r4, r5, lr}
 800828a:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 800828e:	d502      	bpl.n	8008296 <__aeabi_l2d+0x16>
 8008290:	4240      	negs	r0, r0
 8008292:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8008296:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800829a:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800829e:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80082a2:	f43f aed8 	beq.w	8008056 <__adddf3+0xe6>
 80082a6:	f04f 0203 	mov.w	r2, #3
 80082aa:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80082ae:	bf18      	it	ne
 80082b0:	3203      	addne	r2, #3
 80082b2:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80082b6:	bf18      	it	ne
 80082b8:	3203      	addne	r2, #3
 80082ba:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80082be:	f1c2 0320 	rsb	r3, r2, #32
 80082c2:	fa00 fc03 	lsl.w	ip, r0, r3
 80082c6:	fa20 f002 	lsr.w	r0, r0, r2
 80082ca:	fa01 fe03 	lsl.w	lr, r1, r3
 80082ce:	ea40 000e 	orr.w	r0, r0, lr
 80082d2:	fa21 f102 	lsr.w	r1, r1, r2
 80082d6:	4414      	add	r4, r2
 80082d8:	e6bd      	b.n	8008056 <__adddf3+0xe6>
 80082da:	bf00      	nop

080082dc <__aeabi_fmul>:
 80082dc:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80082e0:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 80082e4:	bf1e      	ittt	ne
 80082e6:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 80082ea:	ea92 0f0c 	teqne	r2, ip
 80082ee:	ea93 0f0c 	teqne	r3, ip
 80082f2:	d06f      	beq.n	80083d4 <__aeabi_fmul+0xf8>
 80082f4:	441a      	add	r2, r3
 80082f6:	ea80 0c01 	eor.w	ip, r0, r1
 80082fa:	0240      	lsls	r0, r0, #9
 80082fc:	bf18      	it	ne
 80082fe:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 8008302:	d01e      	beq.n	8008342 <__aeabi_fmul+0x66>
 8008304:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8008308:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 800830c:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 8008310:	fba0 3101 	umull	r3, r1, r0, r1
 8008314:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8008318:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 800831c:	bf3e      	ittt	cc
 800831e:	0049      	lslcc	r1, r1, #1
 8008320:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 8008324:	005b      	lslcc	r3, r3, #1
 8008326:	ea40 0001 	orr.w	r0, r0, r1
 800832a:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
 800832e:	2afd      	cmp	r2, #253	; 0xfd
 8008330:	d81d      	bhi.n	800836e <__aeabi_fmul+0x92>
 8008332:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8008336:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 800833a:	bf08      	it	eq
 800833c:	f020 0001 	biceq.w	r0, r0, #1
 8008340:	4770      	bx	lr
 8008342:	f090 0f00 	teq	r0, #0
 8008346:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 800834a:	bf08      	it	eq
 800834c:	0249      	lsleq	r1, r1, #9
 800834e:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8008352:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 8008356:	3a7f      	subs	r2, #127	; 0x7f
 8008358:	bfc2      	ittt	gt
 800835a:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 800835e:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8008362:	4770      	bxgt	lr
 8008364:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8008368:	f04f 0300 	mov.w	r3, #0
 800836c:	3a01      	subs	r2, #1
 800836e:	dc5d      	bgt.n	800842c <__aeabi_fmul+0x150>
 8008370:	f112 0f19 	cmn.w	r2, #25
 8008374:	bfdc      	itt	le
 8008376:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
 800837a:	4770      	bxle	lr
 800837c:	f1c2 0200 	rsb	r2, r2, #0
 8008380:	0041      	lsls	r1, r0, #1
 8008382:	fa21 f102 	lsr.w	r1, r1, r2
 8008386:	f1c2 0220 	rsb	r2, r2, #32
 800838a:	fa00 fc02 	lsl.w	ip, r0, r2
 800838e:	ea5f 0031 	movs.w	r0, r1, rrx
 8008392:	f140 0000 	adc.w	r0, r0, #0
 8008396:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 800839a:	bf08      	it	eq
 800839c:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 80083a0:	4770      	bx	lr
 80083a2:	f092 0f00 	teq	r2, #0
 80083a6:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 80083aa:	bf02      	ittt	eq
 80083ac:	0040      	lsleq	r0, r0, #1
 80083ae:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 80083b2:	3a01      	subeq	r2, #1
 80083b4:	d0f9      	beq.n	80083aa <__aeabi_fmul+0xce>
 80083b6:	ea40 000c 	orr.w	r0, r0, ip
 80083ba:	f093 0f00 	teq	r3, #0
 80083be:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 80083c2:	bf02      	ittt	eq
 80083c4:	0049      	lsleq	r1, r1, #1
 80083c6:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 80083ca:	3b01      	subeq	r3, #1
 80083cc:	d0f9      	beq.n	80083c2 <__aeabi_fmul+0xe6>
 80083ce:	ea41 010c 	orr.w	r1, r1, ip
 80083d2:	e78f      	b.n	80082f4 <__aeabi_fmul+0x18>
 80083d4:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 80083d8:	ea92 0f0c 	teq	r2, ip
 80083dc:	bf18      	it	ne
 80083de:	ea93 0f0c 	teqne	r3, ip
 80083e2:	d00a      	beq.n	80083fa <__aeabi_fmul+0x11e>
 80083e4:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 80083e8:	bf18      	it	ne
 80083ea:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 80083ee:	d1d8      	bne.n	80083a2 <__aeabi_fmul+0xc6>
 80083f0:	ea80 0001 	eor.w	r0, r0, r1
 80083f4:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 80083f8:	4770      	bx	lr
 80083fa:	f090 0f00 	teq	r0, #0
 80083fe:	bf17      	itett	ne
 8008400:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
 8008404:	4608      	moveq	r0, r1
 8008406:	f091 0f00 	teqne	r1, #0
 800840a:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
 800840e:	d014      	beq.n	800843a <__aeabi_fmul+0x15e>
 8008410:	ea92 0f0c 	teq	r2, ip
 8008414:	d101      	bne.n	800841a <__aeabi_fmul+0x13e>
 8008416:	0242      	lsls	r2, r0, #9
 8008418:	d10f      	bne.n	800843a <__aeabi_fmul+0x15e>
 800841a:	ea93 0f0c 	teq	r3, ip
 800841e:	d103      	bne.n	8008428 <__aeabi_fmul+0x14c>
 8008420:	024b      	lsls	r3, r1, #9
 8008422:	bf18      	it	ne
 8008424:	4608      	movne	r0, r1
 8008426:	d108      	bne.n	800843a <__aeabi_fmul+0x15e>
 8008428:	ea80 0001 	eor.w	r0, r0, r1
 800842c:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8008430:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8008434:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8008438:	4770      	bx	lr
 800843a:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 800843e:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
 8008442:	4770      	bx	lr

08008444 <__aeabi_fdiv>:
 8008444:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8008448:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 800844c:	bf1e      	ittt	ne
 800844e:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8008452:	ea92 0f0c 	teqne	r2, ip
 8008456:	ea93 0f0c 	teqne	r3, ip
 800845a:	d069      	beq.n	8008530 <__aeabi_fdiv+0xec>
 800845c:	eba2 0203 	sub.w	r2, r2, r3
 8008460:	ea80 0c01 	eor.w	ip, r0, r1
 8008464:	0249      	lsls	r1, r1, #9
 8008466:	ea4f 2040 	mov.w	r0, r0, lsl #9
 800846a:	d037      	beq.n	80084dc <__aeabi_fdiv+0x98>
 800846c:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8008470:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 8008474:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8008478:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 800847c:	428b      	cmp	r3, r1
 800847e:	bf38      	it	cc
 8008480:	005b      	lslcc	r3, r3, #1
 8008482:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
 8008486:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
 800848a:	428b      	cmp	r3, r1
 800848c:	bf24      	itt	cs
 800848e:	1a5b      	subcs	r3, r3, r1
 8008490:	ea40 000c 	orrcs.w	r0, r0, ip
 8008494:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 8008498:	bf24      	itt	cs
 800849a:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 800849e:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80084a2:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 80084a6:	bf24      	itt	cs
 80084a8:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 80084ac:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80084b0:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 80084b4:	bf24      	itt	cs
 80084b6:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 80084ba:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 80084be:	011b      	lsls	r3, r3, #4
 80084c0:	bf18      	it	ne
 80084c2:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 80084c6:	d1e0      	bne.n	800848a <__aeabi_fdiv+0x46>
 80084c8:	2afd      	cmp	r2, #253	; 0xfd
 80084ca:	f63f af50 	bhi.w	800836e <__aeabi_fmul+0x92>
 80084ce:	428b      	cmp	r3, r1
 80084d0:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 80084d4:	bf08      	it	eq
 80084d6:	f020 0001 	biceq.w	r0, r0, #1
 80084da:	4770      	bx	lr
 80084dc:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 80084e0:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 80084e4:	327f      	adds	r2, #127	; 0x7f
 80084e6:	bfc2      	ittt	gt
 80084e8:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 80084ec:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 80084f0:	4770      	bxgt	lr
 80084f2:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80084f6:	f04f 0300 	mov.w	r3, #0
 80084fa:	3a01      	subs	r2, #1
 80084fc:	e737      	b.n	800836e <__aeabi_fmul+0x92>
 80084fe:	f092 0f00 	teq	r2, #0
 8008502:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8008506:	bf02      	ittt	eq
 8008508:	0040      	lsleq	r0, r0, #1
 800850a:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 800850e:	3a01      	subeq	r2, #1
 8008510:	d0f9      	beq.n	8008506 <__aeabi_fdiv+0xc2>
 8008512:	ea40 000c 	orr.w	r0, r0, ip
 8008516:	f093 0f00 	teq	r3, #0
 800851a:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 800851e:	bf02      	ittt	eq
 8008520:	0049      	lsleq	r1, r1, #1
 8008522:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8008526:	3b01      	subeq	r3, #1
 8008528:	d0f9      	beq.n	800851e <__aeabi_fdiv+0xda>
 800852a:	ea41 010c 	orr.w	r1, r1, ip
 800852e:	e795      	b.n	800845c <__aeabi_fdiv+0x18>
 8008530:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8008534:	ea92 0f0c 	teq	r2, ip
 8008538:	d108      	bne.n	800854c <__aeabi_fdiv+0x108>
 800853a:	0242      	lsls	r2, r0, #9
 800853c:	f47f af7d 	bne.w	800843a <__aeabi_fmul+0x15e>
 8008540:	ea93 0f0c 	teq	r3, ip
 8008544:	f47f af70 	bne.w	8008428 <__aeabi_fmul+0x14c>
 8008548:	4608      	mov	r0, r1
 800854a:	e776      	b.n	800843a <__aeabi_fmul+0x15e>
 800854c:	ea93 0f0c 	teq	r3, ip
 8008550:	d104      	bne.n	800855c <__aeabi_fdiv+0x118>
 8008552:	024b      	lsls	r3, r1, #9
 8008554:	f43f af4c 	beq.w	80083f0 <__aeabi_fmul+0x114>
 8008558:	4608      	mov	r0, r1
 800855a:	e76e      	b.n	800843a <__aeabi_fmul+0x15e>
 800855c:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8008560:	bf18      	it	ne
 8008562:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8008566:	d1ca      	bne.n	80084fe <__aeabi_fdiv+0xba>
 8008568:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
 800856c:	f47f af5c 	bne.w	8008428 <__aeabi_fmul+0x14c>
 8008570:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
 8008574:	f47f af3c 	bne.w	80083f0 <__aeabi_fmul+0x114>
 8008578:	e75f      	b.n	800843a <__aeabi_fmul+0x15e>
 800857a:	bf00      	nop

0800857c <__aeabi_f2uiz>:
 800857c:	0042      	lsls	r2, r0, #1
 800857e:	d20e      	bcs.n	800859e <__aeabi_f2uiz+0x22>
 8008580:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 8008584:	d30b      	bcc.n	800859e <__aeabi_f2uiz+0x22>
 8008586:	f04f 039e 	mov.w	r3, #158	; 0x9e
 800858a:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 800858e:	d409      	bmi.n	80085a4 <__aeabi_f2uiz+0x28>
 8008590:	ea4f 2300 	mov.w	r3, r0, lsl #8
 8008594:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8008598:	fa23 f002 	lsr.w	r0, r3, r2
 800859c:	4770      	bx	lr
 800859e:	f04f 0000 	mov.w	r0, #0
 80085a2:	4770      	bx	lr
 80085a4:	f112 0f61 	cmn.w	r2, #97	; 0x61
 80085a8:	d101      	bne.n	80085ae <__aeabi_f2uiz+0x32>
 80085aa:	0242      	lsls	r2, r0, #9
 80085ac:	d102      	bne.n	80085b4 <__aeabi_f2uiz+0x38>
 80085ae:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80085b2:	4770      	bx	lr
 80085b4:	f04f 0000 	mov.w	r0, #0
 80085b8:	4770      	bx	lr
 80085ba:	bf00      	nop

080085bc <Reset_Handler>:
 80085bc:	2100      	movs	r1, #0
 80085be:	e003      	b.n	80085c8 <DataInit>

080085c0 <CopyData>:
 80085c0:	4b0a      	ldr	r3, [pc, #40]	; (80085ec <Zerobss+0x10>)
 80085c2:	585b      	ldr	r3, [r3, r1]
 80085c4:	5043      	str	r3, [r0, r1]
 80085c6:	3104      	adds	r1, #4

080085c8 <DataInit>:
 80085c8:	4809      	ldr	r0, [pc, #36]	; (80085f0 <Zerobss+0x14>)
 80085ca:	4b0a      	ldr	r3, [pc, #40]	; (80085f4 <Zerobss+0x18>)
 80085cc:	1842      	adds	r2, r0, r1
 80085ce:	429a      	cmp	r2, r3
 80085d0:	d3f6      	bcc.n	80085c0 <CopyData>
 80085d2:	4a09      	ldr	r2, [pc, #36]	; (80085f8 <Zerobss+0x1c>)
 80085d4:	e002      	b.n	80085dc <Zerobss>

080085d6 <FillZerobss>:
 80085d6:	2300      	movs	r3, #0
 80085d8:	f842 3b04 	str.w	r3, [r2], #4

080085dc <Zerobss>:
 80085dc:	4b07      	ldr	r3, [pc, #28]	; (80085fc <Zerobss+0x20>)
 80085de:	429a      	cmp	r2, r3
 80085e0:	d3f9      	bcc.n	80085d6 <FillZerobss>
 80085e2:	f00a fad1 	bl	8012b88 <SystemInit>
 80085e6:	f000 f997 	bl	8008918 <main>
 80085ea:	4770      	bx	lr
 80085ec:	08017ccc 	stmdaeq	r1, {r2, r3, r6, r7, sl, fp, ip, sp, lr}
 80085f0:	20000000 	andcs	r0, r0, r0
 80085f4:	200000e8 	andcs	r0, r0, r8, ror #1
 80085f8:	200000e8 	andcs	r0, r0, r8, ror #1
 80085fc:	2002b308 	andcs	fp, r2, r8, lsl #6

08008600 <ADC0_1_IRQHandler>:
 8008600:	e7fe      	b.n	8008600 <ADC0_1_IRQHandler>

08008602 <memcpy>:
 8008602:	b510      	push	{r4, lr}
 8008604:	1e43      	subs	r3, r0, #1
 8008606:	440a      	add	r2, r1
 8008608:	4291      	cmp	r1, r2
 800860a:	d100      	bne.n	800860e <memcpy+0xc>
 800860c:	bd10      	pop	{r4, pc}
 800860e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8008612:	f803 4f01 	strb.w	r4, [r3, #1]!
 8008616:	e7f7      	b.n	8008608 <memcpy+0x6>

08008618 <DisplayHandler::~DisplayHandler()>:
 8008618:	4770      	bx	lr

0800861a <PixelDmxStartStop::~PixelDmxStartStop()>:
 800861a:	4770      	bx	lr

0800861c <PixelDmxStartStop::Start()>:
 800861c:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8008620:	4b01      	ldr	r3, [pc, #4]	; (8008628 <PixelDmxStartStop::Start()+0xc>)
 8008622:	f8c3 2c10 	str.w	r2, [r3, #3088]	; 0xc10
 8008626:	4770      	bx	lr
 8008628:	40010000 	andmi	r0, r1, r0

0800862c <PixelDmxStartStop::Stop()>:
 800862c:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8008630:	4b01      	ldr	r3, [pc, #4]	; (8008638 <PixelDmxStartStop::Stop()+0xc>)
 8008632:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 8008636:	4770      	bx	lr
 8008638:	40010000 	andmi	r0, r1, r0

0800863c <RDMNetDevice::CopyUID(unsigned char*)>:
 800863c:	460b      	mov	r3, r1
 800863e:	2206      	movs	r2, #6
 8008640:	1d01      	adds	r1, r0, #4
 8008642:	4618      	mov	r0, r3
 8008644:	f7ff bfdd 	b.w	8008602 <memcpy>

08008648 <non-virtual thunk to RDMNetDevice::CopyUID(unsigned char*)>:
 8008648:	f1a0 00cc 	sub.w	r0, r0, #204	; 0xcc
 800864c:	e7f6      	b.n	800863c <RDMNetDevice::CopyUID(unsigned char*)>
	...

08008650 <RDMNetDevice::CopyCID(unsigned char*)>:
 8008650:	4608      	mov	r0, r1
 8008652:	2210      	movs	r2, #16
 8008654:	4901      	ldr	r1, [pc, #4]	; (800865c <RDMNetDevice::CopyCID(unsigned char*)+0xc>)
 8008656:	f7ff bfd4 	b.w	8008602 <memcpy>
 800865a:	bf00      	nop
 800865c:	2000c8ef 	andcs	ip, r0, pc, ror #17

08008660 <non-virtual thunk to RDMNetDevice::CopyCID(unsigned char*)>:
 8008660:	f1a0 00cc 	sub.w	r0, r0, #204	; 0xcc
 8008664:	e7f4      	b.n	8008650 <RDMNetDevice::CopyCID(unsigned char*)>
 8008666:	bf00      	nop

08008668 <FactoryDefaults::~FactoryDefaults()>:
 8008668:	4770      	bx	lr

0800866a <DisplayHandler::~DisplayHandler()>:
 800866a:	b510      	push	{r4, lr}
 800866c:	4604      	mov	r4, r0
 800866e:	f00a f837 	bl	80126e0 <operator delete(void*)>
 8008672:	4620      	mov	r0, r4
 8008674:	bd10      	pop	{r4, pc}

08008676 <PixelDmxStartStop::~PixelDmxStartStop()>:
 8008676:	b510      	push	{r4, lr}
 8008678:	4604      	mov	r4, r0
 800867a:	f00a f831 	bl	80126e0 <operator delete(void*)>
 800867e:	4620      	mov	r0, r4
 8008680:	bd10      	pop	{r4, pc}

08008682 <FactoryDefaults::~FactoryDefaults()>:
 8008682:	b510      	push	{r4, lr}
 8008684:	4604      	mov	r4, r0
 8008686:	f00a f82b 	bl	80126e0 <operator delete(void*)>
 800868a:	4620      	mov	r0, r4
 800868c:	bd10      	pop	{r4, pc}
	...

08008690 <RDMNetDevice::LLRPHandleRdmCommand(unsigned char const*)>:
 8008690:	b510      	push	{r4, lr}
 8008692:	4c03      	ldr	r4, [pc, #12]	; (80086a0 <RDMNetDevice::LLRPHandleRdmCommand(unsigned char const*)+0x10>)
 8008694:	30d0      	adds	r0, #208	; 0xd0
 8008696:	4622      	mov	r2, r4
 8008698:	f003 fc14 	bl	800bec4 <RDMHandler::HandleData(unsigned char const*, unsigned char*)>
 800869c:	4620      	mov	r0, r4
 800869e:	bd10      	pop	{r4, pc}
 80086a0:	2000c7f0 	strdcs	ip, [r0], -r0

080086a4 <non-virtual thunk to RDMNetDevice::LLRPHandleRdmCommand(unsigned char const*)>:
 80086a4:	f1a0 00cc 	sub.w	r0, r0, #204	; 0xcc
 80086a8:	e7f2      	b.n	8008690 <RDMNetDevice::LLRPHandleRdmCommand(unsigned char const*)>
 80086aa:	bf00      	nop

080086ac <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>:
 80086ac:	b110      	cbz	r0, 80086b4 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]+0x8>
 80086ae:	6803      	ldr	r3, [r0, #0]
 80086b0:	6a1b      	ldr	r3, [r3, #32]
 80086b2:	4718      	bx	r3
 80086b4:	4770      	bx	lr

080086b6 <Display::PutChar(int) [clone .isra.0]>:
 80086b6:	b110      	cbz	r0, 80086be <Display::PutChar(int) [clone .isra.0]+0x8>
 80086b8:	6803      	ldr	r3, [r0, #0]
 80086ba:	695b      	ldr	r3, [r3, #20]
 80086bc:	4718      	bx	r3
 80086be:	4770      	bx	lr

080086c0 <DisplayHandler::Print(unsigned int)>:
 80086c0:	b538      	push	{r3, r4, r5, lr}
 80086c2:	7903      	ldrb	r3, [r0, #4]
 80086c4:	b1f3      	cbz	r3, 8008704 <DisplayHandler::Print(unsigned int)+0x44>
 80086c6:	2904      	cmp	r1, #4
 80086c8:	bf98      	it	ls
 80086ca:	4b0f      	ldrls	r3, [pc, #60]	; (8008708 <DisplayHandler::Print(unsigned int)+0x48>)
 80086cc:	4d0f      	ldr	r5, [pc, #60]	; (800870c <DisplayHandler::Print(unsigned int)+0x4c>)
 80086ce:	bf98      	it	ls
 80086d0:	5c5c      	ldrbls	r4, [r3, r1]
 80086d2:	682b      	ldr	r3, [r5, #0]
 80086d4:	bf88      	it	hi
 80086d6:	2455      	movhi	r4, #85	; 0x55
 80086d8:	6998      	ldr	r0, [r3, #24]
 80086da:	b178      	cbz	r0, 80086fc <DisplayHandler::Print(unsigned int)+0x3c>
 80086dc:	7901      	ldrb	r1, [r0, #4]
 80086de:	3901      	subs	r1, #1
 80086e0:	b2c9      	uxtb	r1, r1
 80086e2:	b168      	cbz	r0, 8008700 <DisplayHandler::Print(unsigned int)+0x40>
 80086e4:	7942      	ldrb	r2, [r0, #5]
 80086e6:	3a01      	subs	r2, #1
 80086e8:	b2d2      	uxtb	r2, r2
 80086ea:	f7ff ffdf 	bl	80086ac <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 80086ee:	682b      	ldr	r3, [r5, #0]
 80086f0:	4621      	mov	r1, r4
 80086f2:	6998      	ldr	r0, [r3, #24]
 80086f4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80086f8:	f7ff bfdd 	b.w	80086b6 <Display::PutChar(int) [clone .isra.0]>
 80086fc:	4601      	mov	r1, r0
 80086fe:	e7ee      	b.n	80086de <DisplayHandler::Print(unsigned int)+0x1e>
 8008700:	4602      	mov	r2, r0
 8008702:	e7f0      	b.n	80086e6 <DisplayHandler::Print(unsigned int)+0x26>
 8008704:	bd38      	pop	{r3, r4, r5, pc}
 8008706:	bf00      	nop
 8008708:	08014de0 	stmdaeq	r1, {r5, r6, r7, r8, sl, fp, lr}
 800870c:	2001d920 	andcs	sp, r1, r0, lsr #18

08008710 <RDMNetDevice::~RDMNetDevice()>:
 8008710:	b510      	push	{r4, lr}
 8008712:	4604      	mov	r4, r0
 8008714:	4b05      	ldr	r3, [pc, #20]	; (800872c <RDMNetDevice::~RDMNetDevice()+0x1c>)
 8008716:	f840 3b88 	str.w	r3, [r0], #136
 800871a:	f002 fe7b 	bl	800b414 <RDMSubDevices::~RDMSubDevices()>
 800871e:	f104 0080 	add.w	r0, r4, #128	; 0x80
 8008722:	f002 fe57 	bl	800b3d4 <RDMSensors::~RDMSensors()>
 8008726:	4620      	mov	r0, r4
 8008728:	bd10      	pop	{r4, pc}
 800872a:	bf00      	nop
 800872c:	080163c8 	stmdaeq	r1, {r3, r6, r7, r8, r9, sp, lr}

08008730 <non-virtual thunk to RDMNetDevice::~RDMNetDevice()>:
 8008730:	f1a0 00cc 	sub.w	r0, r0, #204	; 0xcc
 8008734:	e7ec      	b.n	8008710 <RDMNetDevice::~RDMNetDevice()>
 8008736:	bf00      	nop

08008738 <RDMNetDevice::~RDMNetDevice()>:
 8008738:	b510      	push	{r4, lr}
 800873a:	4604      	mov	r4, r0
 800873c:	f7ff ffe8 	bl	8008710 <RDMNetDevice::~RDMNetDevice()>
 8008740:	4620      	mov	r0, r4
 8008742:	f009 ffcd 	bl	80126e0 <operator delete(void*)>
 8008746:	4620      	mov	r0, r4
 8008748:	bd10      	pop	{r4, pc}

0800874a <non-virtual thunk to RDMNetDevice::~RDMNetDevice()>:
 800874a:	f1a0 00cc 	sub.w	r0, r0, #204	; 0xcc
 800874e:	e7f3      	b.n	8008738 <RDMNetDevice::~RDMNetDevice()>

08008750 <Display::Printf(unsigned char, char const*, ...)>:
 8008750:	b40c      	push	{r2, r3}
 8008752:	b570      	push	{r4, r5, r6, lr}
 8008754:	6984      	ldr	r4, [r0, #24]
 8008756:	4605      	mov	r5, r0
 8008758:	460e      	mov	r6, r1
 800875a:	b08a      	sub	sp, #40	; 0x28
 800875c:	b174      	cbz	r4, 800877c <Display::Printf(unsigned char, char const*, ...)+0x2c>
 800875e:	ab0f      	add	r3, sp, #60	; 0x3c
 8008760:	2120      	movs	r1, #32
 8008762:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8008764:	a802      	add	r0, sp, #8
 8008766:	9301      	str	r3, [sp, #4]
 8008768:	f000 ff40 	bl	80095ec <vsnprintf>
 800876c:	4604      	mov	r4, r0
 800876e:	69a8      	ldr	r0, [r5, #24]
 8008770:	4631      	mov	r1, r6
 8008772:	6803      	ldr	r3, [r0, #0]
 8008774:	aa02      	add	r2, sp, #8
 8008776:	69dd      	ldr	r5, [r3, #28]
 8008778:	b2a3      	uxth	r3, r4
 800877a:	47a8      	blx	r5
 800877c:	4620      	mov	r0, r4
 800877e:	b00a      	add	sp, #40	; 0x28
 8008780:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8008784:	b002      	add	sp, #8
 8008786:	4770      	bx	lr

08008788 <Display::TextStatus(char const*)>:
 8008788:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800878c:	4604      	mov	r4, r0
 800878e:	6980      	ldr	r0, [r0, #24]
 8008790:	460d      	mov	r5, r1
 8008792:	b360      	cbz	r0, 80087ee <Display::TextStatus(char const*)+0x66>
 8008794:	7947      	ldrb	r7, [r0, #5]
 8008796:	2100      	movs	r1, #0
 8008798:	1e7e      	subs	r6, r7, #1
 800879a:	b2f6      	uxtb	r6, r6
 800879c:	4632      	mov	r2, r6
 800879e:	f890 9004 	ldrb.w	r9, [r0, #4]
 80087a2:	f04f 0800 	mov.w	r8, #0
 80087a6:	f7ff ff81 	bl	80086ac <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 80087aa:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 80087ae:	45c1      	cmp	r9, r8
 80087b0:	69a0      	ldr	r0, [r4, #24]
 80087b2:	d816      	bhi.n	80087e2 <Display::TextStatus(char const*)+0x5a>
 80087b4:	4632      	mov	r2, r6
 80087b6:	2100      	movs	r1, #0
 80087b8:	f7ff ff78 	bl	80086ac <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 80087bc:	69a0      	ldr	r0, [r4, #24]
 80087be:	b1b0      	cbz	r0, 80087ee <Display::TextStatus(char const*)+0x66>
 80087c0:	2300      	movs	r3, #0
 80087c2:	7901      	ldrb	r1, [r0, #4]
 80087c4:	5cea      	ldrb	r2, [r5, r3]
 80087c6:	b11a      	cbz	r2, 80087d0 <Display::TextStatus(char const*)+0x48>
 80087c8:	1c5a      	adds	r2, r3, #1
 80087ca:	4299      	cmp	r1, r3
 80087cc:	4613      	mov	r3, r2
 80087ce:	dcf9      	bgt.n	80087c4 <Display::TextStatus(char const*)+0x3c>
 80087d0:	6802      	ldr	r2, [r0, #0]
 80087d2:	4639      	mov	r1, r7
 80087d4:	69d4      	ldr	r4, [r2, #28]
 80087d6:	b2db      	uxtb	r3, r3
 80087d8:	462a      	mov	r2, r5
 80087da:	46a4      	mov	ip, r4
 80087dc:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80087e0:	4760      	bx	ip
 80087e2:	2120      	movs	r1, #32
 80087e4:	f7ff ff67 	bl	80086b6 <Display::PutChar(int) [clone .isra.0]>
 80087e8:	f108 0801 	add.w	r8, r8, #1
 80087ec:	e7df      	b.n	80087ae <Display::TextStatus(char const*)+0x26>
 80087ee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

080087f2 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>:
 80087f2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80087f4:	4605      	mov	r5, r0
 80087f6:	461e      	mov	r6, r3
 80087f8:	460f      	mov	r7, r1
 80087fa:	4614      	mov	r4, r2
 80087fc:	f7ff ffc4 	bl	8008788 <Display::TextStatus(char const*)>
 8008800:	7c6b      	ldrb	r3, [r5, #17]
 8008802:	b19b      	cbz	r3, 800882c <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x3a>
 8008804:	43e2      	mvns	r2, r4
 8008806:	2312      	movs	r3, #18
 8008808:	7a28      	ldrb	r0, [r5, #8]
 800880a:	f88d 3004 	strb.w	r3, [sp, #4]
 800880e:	f3c2 2307 	ubfx	r3, r2, #8, #8
 8008812:	f88d 3005 	strb.w	r3, [sp, #5]
 8008816:	f88d 2006 	strb.w	r2, [sp, #6]
 800881a:	f00b f94f 	bl	8013abc <gd32_i2c_set_address>
 800881e:	68e8      	ldr	r0, [r5, #12]
 8008820:	f00b f944 	bl	8013aac <gd32_i2c_set_baudrate>
 8008824:	2103      	movs	r1, #3
 8008826:	a801      	add	r0, sp, #4
 8008828:	f00b f94e 	bl	8013ac8 <gd32_i2c_write>
 800882c:	1c73      	adds	r3, r6, #1
 800882e:	d006      	beq.n	800883e <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x4c>
 8008830:	4639      	mov	r1, r7
 8008832:	4630      	mov	r0, r6
 8008834:	b003      	add	sp, #12
 8008836:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800883a:	f009 bdf5 	b.w	8012428 <console_status>
 800883e:	b003      	add	sp, #12
 8008840:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08008844 <Display::SetSleep(bool)>:
 8008844:	b538      	push	{r3, r4, r5, lr}
 8008846:	4604      	mov	r4, r0
 8008848:	6980      	ldr	r0, [r0, #24]
 800884a:	460d      	mov	r5, r1
 800884c:	b138      	cbz	r0, 800885e <Display::SetSleep(bool)+0x1a>
 800884e:	6803      	ldr	r3, [r0, #0]
 8008850:	7421      	strb	r1, [r4, #16]
 8008852:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008854:	4798      	blx	r3
 8008856:	b915      	cbnz	r5, 800885e <Display::SetSleep(bool)+0x1a>
 8008858:	4b01      	ldr	r3, [pc, #4]	; (8008860 <Display::SetSleep(bool)+0x1c>)
 800885a:	681b      	ldr	r3, [r3, #0]
 800885c:	6063      	str	r3, [r4, #4]
 800885e:	bd38      	pop	{r3, r4, r5, pc}
 8008860:	2001da24 	andcs	sp, r1, r4, lsr #20

08008864 <display::timeout::gpio_init()>:
 8008864:	b510      	push	{r4, lr}
 8008866:	f240 6003 	movw	r0, #1539	; 0x603
 800886a:	f00a fbc5 	bl	8012ff8 <rcu_periph_clock_enable>
 800886e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8008872:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8008876:	2203      	movs	r2, #3
 8008878:	2148      	movs	r1, #72	; 0x48
 800887a:	4801      	ldr	r0, [pc, #4]	; (8008880 <display::timeout::gpio_init()+0x1c>)
 800887c:	f00a bb24 	b.w	8012ec8 <gpio_init>
 8008880:	40010c00 	andmi	r0, r1, r0, lsl #24

08008884 <display::timeout::gpio_renew()>:
 8008884:	4b03      	ldr	r3, [pc, #12]	; (8008894 <display::timeout::gpio_renew()+0x10>)
 8008886:	f8d3 0c08 	ldr.w	r0, [r3, #3080]	; 0xc08
 800888a:	f480 4080 	eor.w	r0, r0, #16384	; 0x4000
 800888e:	f3c0 3080 	ubfx	r0, r0, #14, #1
 8008892:	4770      	bx	lr
 8008894:	40010000 	andmi	r0, r1, r0

08008898 <StoreNetwork::SaveDhcp(bool)>:
 8008898:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800889a:	2301      	movs	r3, #1
 800889c:	f88d 1017 	strb.w	r1, [sp, #23]
 80088a0:	2100      	movs	r1, #0
 80088a2:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80088a6:	4805      	ldr	r0, [pc, #20]	; (80088bc <StoreNetwork::SaveDhcp(bool)+0x24>)
 80088a8:	9300      	str	r3, [sp, #0]
 80088aa:	2214      	movs	r2, #20
 80088ac:	6800      	ldr	r0, [r0, #0]
 80088ae:	f10d 0317 	add.w	r3, sp, #23
 80088b2:	f005 ff71 	bl	800e798 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 80088b6:	b007      	add	sp, #28
 80088b8:	f85d fb04 	ldr.w	pc, [sp], #4
 80088bc:	20015a44 	andcs	r5, r1, r4, asr #20

080088c0 <non-virtual thunk to StoreNetwork::SaveDhcp(bool)>:
 80088c0:	f1a0 0004 	sub.w	r0, r0, #4
 80088c4:	e7e8      	b.n	8008898 <StoreNetwork::SaveDhcp(bool)>
 80088c6:	bf00      	nop

080088c8 <FactoryDefaults::Set()>:
 80088c8:	b508      	push	{r3, lr}
 80088ca:	4b08      	ldr	r3, [pc, #32]	; (80088ec <FactoryDefaults::Set()+0x24>)
 80088cc:	2100      	movs	r1, #0
 80088ce:	6818      	ldr	r0, [r3, #0]
 80088d0:	f001 f9b2 	bl	8009c38 <RemoteConfig::SetDisable(bool)>
 80088d4:	4b06      	ldr	r3, [pc, #24]	; (80088f0 <FactoryDefaults::Set()+0x28>)
 80088d6:	210b      	movs	r1, #11
 80088d8:	6818      	ldr	r0, [r3, #0]
 80088da:	f005 ff4b 	bl	800e774 <SpiFlashStore::ResetSetList(spiflashstore::Store)>
 80088de:	4b05      	ldr	r3, [pc, #20]	; (80088f4 <FactoryDefaults::Set()+0x2c>)
 80088e0:	2101      	movs	r1, #1
 80088e2:	6818      	ldr	r0, [r3, #0]
 80088e4:	f7ff ffd8 	bl	8008898 <StoreNetwork::SaveDhcp(bool)>
 80088e8:	bd08      	pop	{r3, pc}
 80088ea:	bf00      	nop
 80088ec:	20000114 	andcs	r0, r0, r4, lsl r1
 80088f0:	20015a44 	andcs	r5, r1, r4, asr #20
 80088f4:	20015a50 	andcs	r5, r1, r0, asr sl

080088f8 <Hardware::RebootHandler()>:
 80088f8:	b508      	push	{r3, lr}
 80088fa:	4b05      	ldr	r3, [pc, #20]	; (8008910 <Hardware::RebootHandler()+0x18>)
 80088fc:	6818      	ldr	r0, [r3, #0]
 80088fe:	f005 fc55 	bl	800e1ac <WS28xxMulti::Blackout()>
 8008902:	4b04      	ldr	r3, [pc, #16]	; (8008914 <Hardware::RebootHandler()+0x1c>)
 8008904:	6818      	ldr	r0, [r3, #0]
 8008906:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800890a:	f002 ba3f 	b.w	800ad8c <DdpDisplay::Stop()>
 800890e:	bf00      	nop
 8008910:	2000ca2c 	andcs	ip, r0, ip, lsr #20
 8008914:	2000c7dc 	ldrdcs	ip, [r0], -ip	; <UNPREDICTABLE>

08008918 <main>:
 8008918:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800891c:	2501      	movs	r5, #1
 800891e:	f6ad 1df4 	subw	sp, sp, #2548	; 0x9f4
 8008922:	a804      	add	r0, sp, #16
 8008924:	f009 fe34 	bl	8012590 <Hardware::Hardware()>
 8008928:	a89e      	add	r0, sp, #632	; 0x278
 800892a:	f007 fb85 	bl	8010038 <Network::Network()>
 800892e:	a813      	add	r0, sp, #76	; 0x4c
 8008930:	f009 fdd8 	bl	80124e4 <LedBlink::LedBlink()>
 8008934:	a874      	add	r0, sp, #464	; 0x1d0
 8008936:	f008 fc8d 	bl	8011254 <DisplayUdf::DisplayUdf()>
 800893a:	4bbc      	ldr	r3, [pc, #752]	; (8008c2c <main+0x314>)
 800893c:	4abc      	ldr	r2, [pc, #752]	; (8008c30 <main+0x318>)
 800893e:	49bd      	ldr	r1, [pc, #756]	; (8008c34 <main+0x31c>)
 8008940:	a805      	add	r0, sp, #20
 8008942:	f009 fd89 	bl	8012458 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>
 8008946:	a806      	add	r0, sp, #24
 8008948:	f006 fa34 	bl	800edb4 <FlashRom::FlashRom()>
 800894c:	4fba      	ldr	r7, [pc, #744]	; (8008c38 <main+0x320>)
 800894e:	a807      	add	r0, sp, #28
 8008950:	f005 feea 	bl	800e728 <SpiFlashStore::SpiFlashStore()>
 8008954:	49b9      	ldr	r1, [pc, #740]	; (8008c3c <main+0x324>)
 8008956:	a805      	add	r0, sp, #20
 8008958:	f009 fdb6 	bl	80124c8 <FirmwareVersion::Print(char const*)>
 800895c:	2008      	movs	r0, #8
 800895e:	613d      	str	r5, [r7, #16]
 8008960:	f009 fec2 	bl	80126e8 <operator new(unsigned int)>
 8008964:	4bb6      	ldr	r3, [pc, #728]	; (8008c40 <main+0x328>)
 8008966:	2400      	movs	r4, #0
 8008968:	6003      	str	r3, [r0, #0]
 800896a:	4bb6      	ldr	r3, [pc, #728]	; (8008c44 <main+0x32c>)
 800896c:	f44f 62c0 	mov.w	r2, #1536	; 0x600
 8008970:	681b      	ldr	r3, [r3, #0]
 8008972:	49b5      	ldr	r1, [pc, #724]	; (8008c48 <main+0x330>)
 8008974:	3b00      	subs	r3, #0
 8008976:	bf18      	it	ne
 8008978:	2301      	movne	r3, #1
 800897a:	9015      	str	r0, [sp, #84]	; 0x54
 800897c:	7103      	strb	r3, [r0, #4]
 800897e:	2303      	movs	r3, #3
 8008980:	a874      	add	r0, sp, #464	; 0x1d0
 8008982:	f7ff ff36 	bl	80087f2 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008986:	a80d      	add	r0, sp, #52	; 0x34
 8008988:	f006 f894 	bl	800eab4 <StoreNetwork::StoreNetwork()>
 800898c:	ab0e      	add	r3, sp, #56	; 0x38
 800898e:	a90d      	add	r1, sp, #52	; 0x34
 8008990:	a89e      	add	r0, sp, #632	; 0x278
 8008992:	93cc      	str	r3, [sp, #816]	; 0x330
 8008994:	f007 fba8 	bl	80100e8 <Network::Init(NetworkParamsStore*)>
 8008998:	a89e      	add	r0, sp, #632	; 0x278
 800899a:	f007 fe0d 	bl	80105b8 <Network::Print()>
 800899e:	a808      	add	r0, sp, #32
 80089a0:	f006 ff8c 	bl	800f8bc <MDNS::MDNS()>
 80089a4:	a808      	add	r0, sp, #32
 80089a6:	f007 f849 	bl	800fa3c <MDNS::Start()>
 80089aa:	f642 1305 	movw	r3, #10501	; 0x2905
 80089ae:	4621      	mov	r1, r4
 80089b0:	4aa6      	ldr	r2, [pc, #664]	; (8008c4c <main+0x334>)
 80089b2:	e9cd 4400 	strd	r4, r4, [sp]
 80089b6:	a808      	add	r0, sp, #32
 80089b8:	f007 f9aa 	bl	800fd10 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 80089bc:	2345      	movs	r3, #69	; 0x45
 80089be:	4621      	mov	r1, r4
 80089c0:	4aa3      	ldr	r2, [pc, #652]	; (8008c50 <main+0x338>)
 80089c2:	e9cd 4400 	strd	r4, r4, [sp]
 80089c6:	a808      	add	r0, sp, #32
 80089c8:	f007 f9a2 	bl	800fd10 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 80089cc:	4ba1      	ldr	r3, [pc, #644]	; (8008c54 <main+0x33c>)
 80089ce:	4621      	mov	r1, r4
 80089d0:	4aa1      	ldr	r2, [pc, #644]	; (8008c58 <main+0x340>)
 80089d2:	e9cd 5300 	strd	r5, r3, [sp]
 80089d6:	a808      	add	r0, sp, #32
 80089d8:	2350      	movs	r3, #80	; 0x50
 80089da:	f007 f999 	bl	800fd10 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 80089de:	a808      	add	r0, sp, #32
 80089e0:	f007 fadc 	bl	800ff9c <MDNS::Print()>
 80089e4:	a83d      	add	r0, sp, #244	; 0xf4
 80089e6:	f001 fd97 	bl	800a518 <HttpDaemon::HttpDaemon()>
 80089ea:	a83d      	add	r0, sp, #244	; 0xf4
 80089ec:	f001 fda8 	bl	800a540 <HttpDaemon::Start()>
 80089f0:	23aa      	movs	r3, #170	; 0xaa
 80089f2:	2203      	movs	r2, #3
 80089f4:	e9cd 235c 	strd	r2, r3, [sp, #368]	; 0x170
 80089f8:	2206      	movs	r2, #6
 80089fa:	e9cd 245e 	strd	r2, r4, [sp, #376]	; 0x178
 80089fe:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8008a02:	9260      	str	r2, [sp, #384]	; 0x180
 8008a04:	f44f 7280 	mov.w	r2, #256	; 0x100
 8008a08:	f8ad 2184 	strh.w	r2, [sp, #388]	; 0x184
 8008a0c:	4a93      	ldr	r2, [pc, #588]	; (8008c5c <main+0x344>)
 8008a0e:	a80f      	add	r0, sp, #60	; 0x3c
 8008a10:	e9cd 2562 	strd	r2, r5, [sp, #392]	; 0x188
 8008a14:	e9cd 5364 	strd	r5, r3, [sp, #400]	; 0x190
 8008a18:	f8ad 519c 	strh.w	r5, [sp, #412]	; 0x19c
 8008a1c:	f006 f9be 	bl	800ed9c <StorePixelDmx::StorePixelDmx()>
 8008a20:	a90f      	add	r1, sp, #60	; 0x3c
 8008a22:	a851      	add	r0, sp, #324	; 0x144
 8008a24:	f003 ffde 	bl	800c9e4 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)>
 8008a28:	a851      	add	r0, sp, #324	; 0x144
 8008a2a:	f003 fffd 	bl	800ca28 <PixelDmxParams::Load()>
 8008a2e:	b130      	cbz	r0, 8008a3e <main+0x126>
 8008a30:	a851      	add	r0, sp, #324	; 0x144
 8008a32:	f004 fb4d 	bl	800d0d0 <PixelDmxParams::Dump()>
 8008a36:	a95c      	add	r1, sp, #368	; 0x170
 8008a38:	a851      	add	r0, sp, #324	; 0x144
 8008a3a:	f004 fb04 	bl	800d046 <PixelDmxParams::Set(PixelDmxConfiguration*)>
 8008a3e:	a95c      	add	r1, sp, #368	; 0x170
 8008a40:	a888      	add	r0, sp, #544	; 0x220
 8008a42:	f003 fee7 	bl	800c814 <WS28xxDmxMulti::WS28xxDmxMulti(PixelDmxConfiguration&)>
 8008a46:	2004      	movs	r0, #4
 8008a48:	f009 fe4e 	bl	80126e8 <operator new(unsigned int)>
 8008a4c:	4b84      	ldr	r3, [pc, #528]	; (8008c60 <main+0x348>)
 8008a4e:	2110      	movs	r1, #16
 8008a50:	6003      	str	r3, [r0, #0]
 8008a52:	4604      	mov	r4, r0
 8008a54:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8008a58:	2203      	movs	r2, #3
 8008a5a:	4882      	ldr	r0, [pc, #520]	; (8008c64 <main+0x34c>)
 8008a5c:	f00a fa34 	bl	8012ec8 <gpio_init>
 8008a60:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8008a64:	4b80      	ldr	r3, [pc, #512]	; (8008c68 <main+0x350>)
 8008a66:	f50d 6084 	add.w	r0, sp, #1056	; 0x420
 8008a6a:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 8008a6e:	949b      	str	r4, [sp, #620]	; 0x26c
 8008a70:	f002 f928 	bl	800acc4 <DdpDisplay::DdpDisplay()>
 8008a74:	9b92      	ldr	r3, [sp, #584]	; 0x248
 8008a76:	9a99      	ldr	r2, [sp, #612]	; 0x264
 8008a78:	f8cd 3430 	str.w	r3, [sp, #1072]	; 0x430
 8008a7c:	4353      	muls	r3, r2
 8008a7e:	2a04      	cmp	r2, #4
 8008a80:	f8cd 3434 	str.w	r3, [sp, #1076]	; 0x434
 8008a84:	bf0c      	ite	eq
 8008a86:	f44f 7300 	moveq.w	r3, #512	; 0x200
 8008a8a:	f44f 73ff 	movne.w	r3, #510	; 0x1fe
 8008a8e:	9e90      	ldr	r6, [sp, #576]	; 0x240
 8008a90:	f8cd 3438 	str.w	r3, [sp, #1080]	; 0x438
 8008a94:	2e07      	cmp	r6, #7
 8008a96:	bf94      	ite	ls
 8008a98:	4633      	movls	r3, r6
 8008a9a:	2308      	movhi	r3, #8
 8008a9c:	f89d 5158 	ldrb.w	r5, [sp, #344]	; 0x158
 8008aa0:	4631      	mov	r1, r6
 8008aa2:	a809      	add	r0, sp, #36	; 0x24
 8008aa4:	f8cd 343c 	str.w	r3, [sp, #1084]	; 0x43c
 8008aa8:	f004 fd98 	bl	800d5dc <PixelPatterns::PixelPatterns(unsigned int)>
 8008aac:	4b6f      	ldr	r3, [pc, #444]	; (8008c6c <main+0x354>)
 8008aae:	2d05      	cmp	r5, #5
 8008ab0:	601d      	str	r5, [r3, #0]
 8008ab2:	f340 81b9 	ble.w	8008e28 <main+0x510>
 8008ab6:	4c6e      	ldr	r4, [pc, #440]	; (8008c70 <main+0x358>)
 8008ab8:	ab88      	add	r3, sp, #544	; 0x220
 8008aba:	f50d 6084 	add.w	r0, sp, #1056	; 0x420
 8008abe:	f8cd 3440 	str.w	r3, [sp, #1088]	; 0x440
 8008ac2:	f002 fb17 	bl	800b0f4 <DdpDisplay::Print()>
 8008ac6:	f44f 42fe 	mov.w	r2, #32512	; 0x7f00
 8008aca:	496a      	ldr	r1, [pc, #424]	; (8008c74 <main+0x35c>)
 8008acc:	2303      	movs	r3, #3
 8008ace:	a874      	add	r0, sp, #464	; 0x1d0
 8008ad0:	f7ff fe8f 	bl	80087f2 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008ad4:	6823      	ldr	r3, [r4, #0]
 8008ad6:	6818      	ldr	r0, [r3, #0]
 8008ad8:	f004 fc5c 	bl	800d394 <PixelType::GetType(pixel::Type)>
 8008adc:	6823      	ldr	r3, [r4, #0]
 8008ade:	2120      	movs	r1, #32
 8008ae0:	685b      	ldr	r3, [r3, #4]
 8008ae2:	4a65      	ldr	r2, [pc, #404]	; (8008c78 <main+0x360>)
 8008ae4:	e9cd 0300 	strd	r0, r3, [sp]
 8008ae8:	4633      	mov	r3, r6
 8008aea:	a819      	add	r0, sp, #100	; 0x64
 8008aec:	f000 fd66 	bl	80095bc <snprintf>
 8008af0:	4a62      	ldr	r2, [pc, #392]	; (8008c7c <main+0x364>)
 8008af2:	2120      	movs	r1, #32
 8008af4:	a822      	add	r0, sp, #136	; 0x88
 8008af6:	f000 fd61 	bl	80095bc <snprintf>
 8008afa:	4604      	mov	r4, r0
 8008afc:	202c      	movs	r0, #44	; 0x2c
 8008afe:	f009 fdf3 	bl	80126e8 <operator new(unsigned int)>
 8008b02:	2200      	movs	r2, #0
 8008b04:	4603      	mov	r3, r0
 8008b06:	6042      	str	r2, [r0, #4]
 8008b08:	6282      	str	r2, [r0, #40]	; 0x28
 8008b0a:	f100 0c28 	add.w	ip, r0, #40	; 0x28
 8008b0e:	f823 2b08 	strh.w	r2, [r3], #8
 8008b12:	aa19      	add	r2, sp, #100	; 0x64
 8008b14:	f812 1b01 	ldrb.w	r1, [r2], #1
 8008b18:	b111      	cbz	r1, 8008b20 <main+0x208>
 8008b1a:	459c      	cmp	ip, r3
 8008b1c:	f040 81f0 	bne.w	8008f00 <main+0x5e8>
 8008b20:	2201      	movs	r2, #1
 8008b22:	a90a      	add	r1, sp, #40	; 0x28
 8008b24:	900a      	str	r0, [sp, #40]	; 0x28
 8008b26:	a8d1      	add	r0, sp, #836	; 0x344
 8008b28:	f002 fd96 	bl	800b658 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)>
 8008b2c:	f50d 6082 	add.w	r0, sp, #1040	; 0x410
 8008b30:	f002 fb14 	bl	800b15c <LLRPDevice::LLRPDevice()>
 8008b34:	4b52      	ldr	r3, [pc, #328]	; (8008c80 <main+0x368>)
 8008b36:	2100      	movs	r1, #0
 8008b38:	93d1      	str	r3, [sp, #836]	; 0x344
 8008b3a:	f20d 4014 	addw	r0, sp, #1044	; 0x414
 8008b3e:	3324      	adds	r3, #36	; 0x24
 8008b40:	f8cd 3410 	str.w	r3, [sp, #1040]	; 0x410
 8008b44:	f002 ff7e 	bl	800ba44 <RDMHandler::RDMHandler(bool)>
 8008b48:	4b4e      	ldr	r3, [pc, #312]	; (8008c84 <main+0x36c>)
 8008b4a:	b2e4      	uxtb	r4, r4
 8008b4c:	494e      	ldr	r1, [pc, #312]	; (8008c88 <main+0x370>)
 8008b4e:	6818      	ldr	r0, [r3, #0]
 8008b50:	f009 fd6e 	bl	8012630 <Hardware::GetUuid(unsigned char*)>
 8008b54:	2c20      	cmp	r4, #32
 8008b56:	bf28      	it	cs
 8008b58:	2420      	movcs	r4, #32
 8008b5a:	f89d 3398 	ldrb.w	r3, [sp, #920]	; 0x398
 8008b5e:	4622      	mov	r2, r4
 8008b60:	a922      	add	r1, sp, #136	; 0x88
 8008b62:	2b00      	cmp	r3, #0
 8008b64:	f000 81d2 	beq.w	8008f0c <main+0x5f4>
 8008b68:	f20d 3052 	addw	r0, sp, #850	; 0x352
 8008b6c:	f7ff fd49 	bl	8008602 <memcpy>
 8008b70:	98ef      	ldr	r0, [sp, #956]	; 0x3bc
 8008b72:	f88d 4372 	strb.w	r4, [sp, #882]	; 0x372
 8008b76:	b128      	cbz	r0, 8008b84 <main+0x26c>
 8008b78:	6803      	ldr	r3, [r0, #0]
 8008b7a:	4622      	mov	r2, r4
 8008b7c:	689b      	ldr	r3, [r3, #8]
 8008b7e:	f20d 3152 	addw	r1, sp, #850	; 0x352
 8008b82:	4798      	blx	r3
 8008b84:	4b41      	ldr	r3, [pc, #260]	; (8008c8c <main+0x374>)
 8008b86:	2004      	movs	r0, #4
 8008b88:	93e5      	str	r3, [sp, #916]	; 0x394
 8008b8a:	f009 fdad 	bl	80126e8 <operator new(unsigned int)>
 8008b8e:	4b40      	ldr	r3, [pc, #256]	; (8008c90 <main+0x378>)
 8008b90:	f8cd 040c 	str.w	r0, [sp, #1036]	; 0x40c
 8008b94:	6003      	str	r3, [r0, #0]
 8008b96:	a8d1      	add	r0, sp, #836	; 0x344
 8008b98:	f002 fdae 	bl	800b6f8 <RDMDeviceResponder::Init()>
 8008b9c:	a811      	add	r0, sp, #68	; 0x44
 8008b9e:	f005 ffe9 	bl	800eb74 <StoreRDMDevice::StoreRDMDevice()>
 8008ba2:	a911      	add	r1, sp, #68	; 0x44
 8008ba4:	a868      	add	r0, sp, #416	; 0x1a0
 8008ba6:	f002 fce7 	bl	800b578 <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)>
 8008baa:	a868      	add	r0, sp, #416	; 0x1a0
 8008bac:	f002 fcf6 	bl	800b59c <RDMDeviceParams::Load()>
 8008bb0:	b130      	cbz	r0, 8008bc0 <main+0x2a8>
 8008bb2:	a868      	add	r0, sp, #416	; 0x1a0
 8008bb4:	f002 fd32 	bl	800b61c <RDMDeviceParams::Dump()>
 8008bb8:	a9d2      	add	r1, sp, #840	; 0x348
 8008bba:	a868      	add	r0, sp, #416	; 0x1a0
 8008bbc:	f002 fcf9 	bl	800b5b2 <RDMDeviceParams::Set(RDMDevice*)>
 8008bc0:	ab12      	add	r3, sp, #72	; 0x48
 8008bc2:	a8d1      	add	r0, sp, #836	; 0x344
 8008bc4:	93ef      	str	r3, [sp, #956]	; 0x3bc
 8008bc6:	f002 fbdd 	bl	800b384 <RDMNetDevice::Print()>
 8008bca:	4632      	mov	r2, r6
 8008bcc:	4931      	ldr	r1, [pc, #196]	; (8008c94 <main+0x37c>)
 8008bce:	a874      	add	r0, sp, #464	; 0x1d0
 8008bd0:	f008 fb52 	bl	8011278 <DisplayUdf::SetTitle(char const*, ...)>
 8008bd4:	2203      	movs	r2, #3
 8008bd6:	2102      	movs	r1, #2
 8008bd8:	a874      	add	r0, sp, #464	; 0x1d0
 8008bda:	f008 fb60 	bl	801129e <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8008bde:	2207      	movs	r2, #7
 8008be0:	2103      	movs	r1, #3
 8008be2:	a874      	add	r0, sp, #464	; 0x1d0
 8008be4:	f008 fb5b 	bl	801129e <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8008be8:	2202      	movs	r2, #2
 8008bea:	2104      	movs	r1, #4
 8008bec:	a874      	add	r0, sp, #464	; 0x1d0
 8008bee:	f008 fb56 	bl	801129e <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8008bf2:	2212      	movs	r2, #18
 8008bf4:	2105      	movs	r1, #5
 8008bf6:	a874      	add	r0, sp, #464	; 0x1d0
 8008bf8:	f008 fb51 	bl	801129e <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8008bfc:	2201      	movs	r2, #1
 8008bfe:	2106      	movs	r1, #6
 8008c00:	a874      	add	r0, sp, #464	; 0x1d0
 8008c02:	f008 fb4c 	bl	801129e <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8008c06:	985c      	ldr	r0, [sp, #368]	; 0x170
 8008c08:	f004 fbc4 	bl	800d394 <PixelType::GetType(pixel::Type)>
 8008c0c:	4604      	mov	r4, r0
 8008c0e:	985e      	ldr	r0, [sp, #376]	; 0x178
 8008c10:	f8dd 8174 	ldr.w	r8, [sp, #372]	; 0x174
 8008c14:	f8dd 9190 	ldr.w	r9, [sp, #400]	; 0x190
 8008c18:	f004 fc14 	bl	800d444 <PixelType::GetMap(pixel::Map)>
 8008c1c:	4623      	mov	r3, r4
 8008c1e:	2107      	movs	r1, #7
 8008c20:	4a1d      	ldr	r2, [pc, #116]	; (8008c98 <main+0x380>)
 8008c22:	e9cd 9001 	strd	r9, r0, [sp, #4]
 8008c26:	f8cd 8000 	str.w	r8, [sp]
 8008c2a:	e037      	b.n	8008c9c <main+0x384>
 8008c2c:	08014c80 	stmdaeq	r1, {r7, sl, fp, lr}
 8008c30:	08014c89 	stmdaeq	r1, {r0, r3, r7, sl, fp, lr}
 8008c34:	08014de5 	stmdaeq	r1, {r0, r2, r5, r6, r7, r8, sl, fp, lr}
 8008c38:	40011000 	andmi	r1, r1, r0
 8008c3c:	08014c95 	stmdaeq	r1, {r0, r2, r4, r7, sl, fp, lr}
 8008c40:	08014d68 	stmdaeq	r1, {r3, r5, r6, r8, sl, fp, lr}
 8008c44:	2001d920 	andcs	sp, r1, r0, lsr #18
 8008c48:	080173dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r8, r9, ip, sp, lr}
 8008c4c:	08014cc5 	stmdaeq	r1, {r0, r2, r6, r7, sl, fp, lr}
 8008c50:	08014cce 	stmdaeq	r1, {r1, r2, r3, r6, r7, sl, fp, lr}
 8008c54:	08014cdc 	stmdaeq	r1, {r2, r3, r4, r6, r7, sl, fp, lr}
 8008c58:	08014cd5 	stmdaeq	r1, {r0, r2, r4, r6, r7, sl, fp, lr}
 8008c5c:	08014de9 	stmdaeq	r1, {r0, r3, r5, r6, r7, r8, sl, fp, lr}
 8008c60:	08014d7c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r8, sl, fp, lr}
 8008c64:	40010c00 	andmi	r0, r1, r0, lsl #24
 8008c68:	40010000 	andmi	r0, r1, r0
 8008c6c:	2000ca24 	andcs	ip, r0, r4, lsr #20
 8008c70:	2000ca2c 	andcs	ip, r0, ip, lsr #20
 8008c74:	080162c4 	stmdaeq	r1, {r2, r6, r7, r9, sp, lr}
 8008c78:	08014ceb 	stmdaeq	r1, {r0, r1, r3, r5, r6, r7, sl, fp, lr}
 8008c7c:	08014d00 	stmdaeq	r1, {r8, sl, fp, lr}
 8008c80:	08014d94 	stmdaeq	r1, {r2, r4, r7, r8, sl, fp, lr}
 8008c84:	2001da10 	andcs	sp, r1, r0, lsl sl
 8008c88:	2000c8ef 	andcs	ip, r0, pc, ror #17
 8008c8c:	06010100 	streq	r0, [r1], -r0, lsl #2
 8008c90:	08014dd4 	stmdaeq	r1, {r2, r4, r6, r7, r8, sl, fp, lr}
 8008c94:	08014d15 	stmdaeq	r1, {r0, r2, r4, r8, sl, fp, lr}
 8008c98:	08014d22 	stmdaeq	r1, {r1, r5, r8, sl, fp, lr}
 8008c9c:	a874      	add	r0, sp, #464	; 0x1d0
 8008c9e:	f7ff fd57 	bl	8008750 <Display::Printf(unsigned char, char const*, ...)>
 8008ca2:	a80b      	add	r0, sp, #44	; 0x2c
 8008ca4:	f005 fe70 	bl	800e988 <StoreDisplayUdf::StoreDisplayUdf()>
 8008ca8:	a90b      	add	r1, sp, #44	; 0x2c
 8008caa:	a847      	add	r0, sp, #284	; 0x11c
 8008cac:	f008 fc78 	bl	80115a0 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 8008cb0:	a847      	add	r0, sp, #284	; 0x11c
 8008cb2:	f008 fc82 	bl	80115ba <DisplayUdfParams::Load()>
 8008cb6:	b130      	cbz	r0, 8008cc6 <main+0x3ae>
 8008cb8:	a847      	add	r0, sp, #284	; 0x11c
 8008cba:	a974      	add	r1, sp, #464	; 0x1d0
 8008cbc:	f008 fdb5 	bl	801182a <DisplayUdfParams::Set(DisplayUdf*)>
 8008cc0:	a847      	add	r0, sp, #284	; 0x11c
 8008cc2:	f008 fde5 	bl	8011890 <DisplayUdfParams::Dump()>
 8008cc6:	a874      	add	r0, sp, #464	; 0x1d0
 8008cc8:	f008 fb98 	bl	80113fc <DisplayUdf::Show()>
 8008ccc:	b17d      	cbz	r5, 8008cee <main+0x3d6>
 8008cce:	987a      	ldr	r0, [sp, #488]	; 0x1e8
 8008cd0:	b118      	cbz	r0, 8008cda <main+0x3c2>
 8008cd2:	6803      	ldr	r3, [r0, #0]
 8008cd4:	2106      	movs	r1, #6
 8008cd6:	691b      	ldr	r3, [r3, #16]
 8008cd8:	4798      	blx	r3
 8008cda:	4628      	mov	r0, r5
 8008cdc:	f004 fca4 	bl	800d628 <PixelPatterns::GetName(pixelpatterns::Pattern)>
 8008ce0:	2106      	movs	r1, #6
 8008ce2:	4603      	mov	r3, r0
 8008ce4:	4a90      	ldr	r2, [pc, #576]	; (8008f28 <main+0x610>)
 8008ce6:	9500      	str	r5, [sp, #0]
 8008ce8:	a874      	add	r0, sp, #464	; 0x1d0
 8008cea:	f7ff fd31 	bl	8008750 <Display::Printf(unsigned char, char const*, ...)>
 8008cee:	4633      	mov	r3, r6
 8008cf0:	2203      	movs	r2, #3
 8008cf2:	2108      	movs	r1, #8
 8008cf4:	a82b      	add	r0, sp, #172	; 0xac
 8008cf6:	f000 ff53 	bl	8009ba0 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>
 8008cfa:	a80c      	add	r0, sp, #48	; 0x30
 8008cfc:	f005 ff72 	bl	800ebe4 <StoreRemoteConfig::StoreRemoteConfig()>
 8008d00:	a90c      	add	r1, sp, #48	; 0x30
 8008d02:	a834      	add	r0, sp, #208	; 0xd0
 8008d04:	f001 f9f2 	bl	800a0ec <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 8008d08:	a834      	add	r0, sp, #208	; 0xd0
 8008d0a:	f001 f9f9 	bl	800a100 <RemoteConfigParams::Load()>
 8008d0e:	b130      	cbz	r0, 8008d1e <main+0x406>
 8008d10:	a834      	add	r0, sp, #208	; 0xd0
 8008d12:	a92b      	add	r1, sp, #172	; 0xac
 8008d14:	f001 fb1b 	bl	800a34e <RemoteConfigParams::Set(RemoteConfig*)>
 8008d18:	a834      	add	r0, sp, #208	; 0xd0
 8008d1a:	f001 fb38 	bl	800a38e <RemoteConfigParams::Dump()>
 8008d1e:	a807      	add	r0, sp, #28
 8008d20:	f005 fdac 	bl	800e87c <SpiFlashStore::Flash()>
 8008d24:	2800      	cmp	r0, #0
 8008d26:	d1fa      	bne.n	8008d1e <main+0x406>
 8008d28:	4c80      	ldr	r4, [pc, #512]	; (8008f2c <main+0x614>)
 8008d2a:	2303      	movs	r3, #3
 8008d2c:	f44f 42fa 	mov.w	r2, #32000	; 0x7d00
 8008d30:	497f      	ldr	r1, [pc, #508]	; (8008f30 <main+0x618>)
 8008d32:	a874      	add	r0, sp, #464	; 0x1d0
 8008d34:	f7ff fd5d 	bl	80087f2 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008d38:	f241 51c1 	movw	r1, #5569	; 0x15c1
 8008d3c:	6820      	ldr	r0, [r4, #0]
 8008d3e:	f007 f9ad 	bl	801009c <Network::Begin(unsigned short)>
 8008d42:	4b7c      	ldr	r3, [pc, #496]	; (8008f34 <main+0x61c>)
 8008d44:	4601      	mov	r1, r0
 8008d46:	6018      	str	r0, [r3, #0]
 8008d48:	4b7b      	ldr	r3, [pc, #492]	; (8008f38 <main+0x620>)
 8008d4a:	6820      	ldr	r0, [r4, #0]
 8008d4c:	681a      	ldr	r2, [r3, #0]
 8008d4e:	f007 f9b6 	bl	80100be <Network::JoinGroup(int, unsigned int)>
 8008d52:	2302      	movs	r3, #2
 8008d54:	f248 0280 	movw	r2, #32896	; 0x8080
 8008d58:	4978      	ldr	r1, [pc, #480]	; (8008f3c <main+0x624>)
 8008d5a:	a874      	add	r0, sp, #464	; 0x1d0
 8008d5c:	f7ff fd49 	bl	80087f2 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008d60:	2303      	movs	r3, #3
 8008d62:	f44f 42fa 	mov.w	r2, #32000	; 0x7d00
 8008d66:	4976      	ldr	r1, [pc, #472]	; (8008f40 <main+0x628>)
 8008d68:	a874      	add	r0, sp, #464	; 0x1d0
 8008d6a:	f7ff fd42 	bl	80087f2 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008d6e:	f50d 6084 	add.w	r0, sp, #1056	; 0x420
 8008d72:	f001 ffcd 	bl	800ad10 <DdpDisplay::Start()>
 8008d76:	2302      	movs	r3, #2
 8008d78:	f44f 42fa 	mov.w	r2, #32000	; 0x7d00
 8008d7c:	4971      	ldr	r1, [pc, #452]	; (8008f44 <main+0x62c>)
 8008d7e:	a874      	add	r0, sp, #464	; 0x1d0
 8008d80:	f7ff fd37 	bl	80087f2 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008d84:	2102      	movs	r1, #2
 8008d86:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8008d8a:	f00a f873 	bl	8012e74 <fwdgt_config>
 8008d8e:	2801      	cmp	r0, #1
 8008d90:	bf0c      	ite	eq
 8008d92:	2301      	moveq	r3, #1
 8008d94:	2300      	movne	r3, #0
 8008d96:	f88d 3010 	strb.w	r3, [sp, #16]
 8008d9a:	d101      	bne.n	8008da0 <main+0x488>
 8008d9c:	f00a f85a 	bl	8012e54 <fwdgt_enable>
 8008da0:	4d69      	ldr	r5, [pc, #420]	; (8008f48 <main+0x630>)
 8008da2:	4c6a      	ldr	r4, [pc, #424]	; (8008f4c <main+0x634>)
 8008da4:	f00a f85e 	bl	8012e64 <fwdgt_counter_reload>
 8008da8:	f7fe fbe6 	bl	8007578 <net_handle>
 8008dac:	f50d 6084 	add.w	r0, sp, #1056	; 0x420
 8008db0:	f002 f972 	bl	800b098 <DdpDisplay::Run()>
 8008db4:	a82b      	add	r0, sp, #172	; 0xac
 8008db6:	f001 f871 	bl	8009e9c <RemoteConfig::Run()>
 8008dba:	a807      	add	r0, sp, #28
 8008dbc:	f005 fd5e 	bl	800e87c <SpiFlashStore::Flash()>
 8008dc0:	682b      	ldr	r3, [r5, #0]
 8008dc2:	b113      	cbz	r3, 8008dca <main+0x4b2>
 8008dc4:	a809      	add	r0, sp, #36	; 0x24
 8008dc6:	f004 fe51 	bl	800da6c <PixelPatterns::Run()>
 8008dca:	a808      	add	r0, sp, #32
 8008dcc:	f007 f8c2 	bl	800ff54 <MDNS::Run()>
 8008dd0:	f50d 6082 	add.w	r0, sp, #1040	; 0x410
 8008dd4:	f002 fa80 	bl	800b2d8 <LLRPDevice::Run()>
 8008dd8:	a83d      	add	r0, sp, #244	; 0xf4
 8008dda:	f001 fe1d 	bl	800aa18 <HttpDaemon::Run()>
 8008dde:	9a79      	ldr	r2, [sp, #484]	; 0x1e4
 8008de0:	b16a      	cbz	r2, 8008dfe <main+0x4e6>
 8008de2:	f89d 31e0 	ldrb.w	r3, [sp, #480]	; 0x1e0
 8008de6:	2b00      	cmp	r3, #0
 8008de8:	f040 8097 	bne.w	8008f1a <main+0x602>
 8008dec:	6823      	ldr	r3, [r4, #0]
 8008dee:	9975      	ldr	r1, [sp, #468]	; 0x1d4
 8008df0:	1a5b      	subs	r3, r3, r1
 8008df2:	429a      	cmp	r2, r3
 8008df4:	d203      	bcs.n	8008dfe <main+0x4e6>
 8008df6:	2101      	movs	r1, #1
 8008df8:	a874      	add	r0, sp, #464	; 0x1d0
 8008dfa:	f7ff fd23 	bl	8008844 <Display::SetSleep(bool)>
 8008dfe:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8008e00:	2a00      	cmp	r2, #0
 8008e02:	d0cf      	beq.n	8008da4 <main+0x48c>
 8008e04:	6823      	ldr	r3, [r4, #0]
 8008e06:	9918      	ldr	r1, [sp, #96]	; 0x60
 8008e08:	1a5b      	subs	r3, r3, r1
 8008e0a:	429a      	cmp	r2, r3
 8008e0c:	d8ca      	bhi.n	8008da4 <main+0x48c>
 8008e0e:	6823      	ldr	r3, [r4, #0]
 8008e10:	9318      	str	r3, [sp, #96]	; 0x60
 8008e12:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8008e14:	2b01      	cmp	r3, #1
 8008e16:	f083 0201 	eor.w	r2, r3, #1
 8008e1a:	bf18      	it	ne
 8008e1c:	2301      	movne	r3, #1
 8008e1e:	9217      	str	r2, [sp, #92]	; 0x5c
 8008e20:	bf14      	ite	ne
 8008e22:	613b      	strne	r3, [r7, #16]
 8008e24:	617b      	streq	r3, [r7, #20]
 8008e26:	e7bd      	b.n	8008da4 <main+0x48c>
 8008e28:	2400      	movs	r4, #0
 8008e2a:	f8df 9124 	ldr.w	r9, [pc, #292]	; 8008f50 <main+0x638>
 8008e2e:	f8df a124 	ldr.w	sl, [pc, #292]	; 8008f54 <main+0x63c>
 8008e32:	f8df b124 	ldr.w	fp, [pc, #292]	; 8008f58 <main+0x640>
 8008e36:	2d05      	cmp	r5, #5
 8008e38:	d80a      	bhi.n	8008e50 <main+0x538>
 8008e3a:	e8df f005 	tbb	[pc, r5]
 8008e3e:	190f0336 	stmdbne	pc, {r1, r2, r4, r5, r8, r9}	; <UNPREDICTABLE>
 8008e42:	23002a22 	movwcs	r2, #2594	; 0xa22
 8008e46:	2264      	movs	r2, #100	; 0x64
 8008e48:	4621      	mov	r1, r4
 8008e4a:	a809      	add	r0, sp, #36	; 0x24
 8008e4c:	f004 fbf8 	bl	800d640 <PixelPatterns::RainbowCycle(unsigned int, unsigned int, pixelpatterns::Direction)>
 8008e50:	3401      	adds	r4, #1
 8008e52:	2c08      	cmp	r4, #8
 8008e54:	f109 0920 	add.w	r9, r9, #32
 8008e58:	d1ed      	bne.n	8008e36 <main+0x51e>
 8008e5a:	e62c      	b.n	8008ab6 <main+0x19e>
 8008e5c:	2364      	movs	r3, #100	; 0x64
 8008e5e:	2200      	movs	r2, #0
 8008e60:	4621      	mov	r1, r4
 8008e62:	e9cd 3200 	strd	r3, r2, [sp]
 8008e66:	a809      	add	r0, sp, #36	; 0x24
 8008e68:	4b3c      	ldr	r3, [pc, #240]	; (8008f5c <main+0x644>)
 8008e6a:	f004 fbff 	bl	800d66c <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>
 8008e6e:	e7ef      	b.n	8008e50 <main+0x538>
 8008e70:	2300      	movs	r3, #0
 8008e72:	4621      	mov	r1, r4
 8008e74:	9300      	str	r3, [sp, #0]
 8008e76:	4a39      	ldr	r2, [pc, #228]	; (8008f5c <main+0x644>)
 8008e78:	2364      	movs	r3, #100	; 0x64
 8008e7a:	a809      	add	r0, sp, #36	; 0x24
 8008e7c:	f004 fc12 	bl	800d6a4 <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>
 8008e80:	e7e6      	b.n	8008e50 <main+0x538>
 8008e82:	2364      	movs	r3, #100	; 0x64
 8008e84:	f06f 427f 	mvn.w	r2, #4278190080	; 0xff000000
 8008e88:	4621      	mov	r1, r4
 8008e8a:	a809      	add	r0, sp, #36	; 0x24
 8008e8c:	f004 fc24 	bl	800d6d8 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)>
 8008e90:	e7de      	b.n	8008e50 <main+0x538>
 8008e92:	2364      	movs	r3, #100	; 0x64
 8008e94:	2200      	movs	r2, #0
 8008e96:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8008e9a:	230a      	movs	r3, #10
 8008e9c:	4621      	mov	r1, r4
 8008e9e:	9300      	str	r3, [sp, #0]
 8008ea0:	a809      	add	r0, sp, #36	; 0x24
 8008ea2:	4b2e      	ldr	r3, [pc, #184]	; (8008f5c <main+0x644>)
 8008ea4:	f004 fc4c 	bl	800d740 <PixelPatterns::Fade(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>
 8008ea8:	e7d2      	b.n	8008e50 <main+0x538>
 8008eaa:	2300      	movs	r3, #0
 8008eac:	4698      	mov	r8, r3
 8008eae:	f8c9 301c 	str.w	r3, [r9, #28]
 8008eb2:	f8db 3000 	ldr.w	r3, [fp]
 8008eb6:	f8da 0000 	ldr.w	r0, [sl]
 8008eba:	4598      	cmp	r8, r3
 8008ebc:	d30a      	bcc.n	8008ed4 <main+0x5bc>
 8008ebe:	f8da 0000 	ldr.w	r0, [sl]
 8008ec2:	f005 fa37 	bl	800e334 <WS28xxMulti::IsUpdating()>
 8008ec6:	2800      	cmp	r0, #0
 8008ec8:	d1f9      	bne.n	8008ebe <main+0x5a6>
 8008eca:	f8da 0000 	ldr.w	r0, [sl]
 8008ece:	f005 f8f1 	bl	800e0b4 <WS28xxMulti::Update()>
 8008ed2:	e7bd      	b.n	8008e50 <main+0x538>
 8008ed4:	6803      	ldr	r3, [r0, #0]
 8008ed6:	2b07      	cmp	r3, #7
 8008ed8:	f04f 0300 	mov.w	r3, #0
 8008edc:	d008      	beq.n	8008ef0 <main+0x5d8>
 8008ede:	4642      	mov	r2, r8
 8008ee0:	4621      	mov	r1, r4
 8008ee2:	e9cd 3300 	strd	r3, r3, [sp]
 8008ee6:	f005 faa7 	bl	800e438 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 8008eea:	f108 0801 	add.w	r8, r8, #1
 8008eee:	e7e0      	b.n	8008eb2 <main+0x59a>
 8008ef0:	4642      	mov	r2, r8
 8008ef2:	4621      	mov	r1, r4
 8008ef4:	e9cd 3301 	strd	r3, r3, [sp, #4]
 8008ef8:	9300      	str	r3, [sp, #0]
 8008efa:	f005 fb25 	bl	800e548 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
 8008efe:	e7f4      	b.n	8008eea <main+0x5d2>
 8008f00:	f803 1b01 	strb.w	r1, [r3], #1
 8008f04:	6a81      	ldr	r1, [r0, #40]	; 0x28
 8008f06:	3101      	adds	r1, #1
 8008f08:	6281      	str	r1, [r0, #40]	; 0x28
 8008f0a:	e603      	b.n	8008b14 <main+0x1fc>
 8008f0c:	f20d 3099 	addw	r0, sp, #921	; 0x399
 8008f10:	f7ff fb77 	bl	8008602 <memcpy>
 8008f14:	f88d 43b9 	strb.w	r4, [sp, #953]	; 0x3b9
 8008f18:	e634      	b.n	8008b84 <main+0x26c>
 8008f1a:	f7ff fcb3 	bl	8008884 <display::timeout::gpio_renew()>
 8008f1e:	2800      	cmp	r0, #0
 8008f20:	f43f af6d 	beq.w	8008dfe <main+0x4e6>
 8008f24:	2100      	movs	r1, #0
 8008f26:	e767      	b.n	8008df8 <main+0x4e0>
 8008f28:	08014d2f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r8, sl, fp, lr}
 8008f2c:	2001d348 	andcs	sp, r1, r8, asr #6
 8008f30:	080162e6 	stmdaeq	r1, {r1, r2, r5, r6, r7, r9, sp, lr}
 8008f34:	20000000 	andcs	r0, r0, r0
 8008f38:	2000c7e4 	andcs	ip, r0, r4, ror #15
 8008f3c:	080162d7 	stmdaeq	r1, {r0, r1, r2, r4, r6, r7, r9, sp, lr}
 8008f40:	08014d35 	stmdaeq	r1, {r0, r2, r4, r5, r8, sl, fp, lr}
 8008f44:	08014d4a 	stmdaeq	r1, {r1, r3, r6, r8, sl, fp, lr}
 8008f48:	2000ca24 	andcs	ip, r0, r4, lsr #20
 8008f4c:	2001da24 	andcs	sp, r1, r4, lsr #20
 8008f50:	2000c914 	andcs	ip, r0, r4, lsl r9
 8008f54:	2000ca20 	andcs	ip, r0, r0, lsr #20
 8008f58:	2000ca1c 	andcs	ip, r0, ip, lsl sl
 8008f5c:	00646464 	rsbeq	r6, r4, r4, ror #8

08008f60 <RDMSoftwareVersion::GetVersion()>:
 8008f60:	4800      	ldr	r0, [pc, #0]	; (8008f64 <RDMSoftwareVersion::GetVersion()+0x4>)
 8008f62:	4770      	bx	lr
 8008f64:	08014ee9 	stmdaeq	r1, {r0, r3, r5, r6, r7, r9, sl, fp, lr}

08008f68 <RDMSoftwareVersion::GetVersionLength()>:
 8008f68:	2003      	movs	r0, #3
 8008f6a:	4770      	bx	lr

08008f6c <RDMSoftwareVersion::GetVersionId()>:
 8008f6c:	4800      	ldr	r0, [pc, #0]	; (8008f70 <RDMSoftwareVersion::GetVersionId()+0x4>)
 8008f6e:	4770      	bx	lr
 8008f70:	63445c89 	movtvs	r5, #19593	; 0x4c89

08008f74 <_itostr>:
 8008f74:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008f76:	0fc7      	lsrs	r7, r0, #31
 8008f78:	b091      	sub	sp, #68	; 0x44
 8008f7a:	bf18      	it	ne
 8008f7c:	4240      	negne	r0, r0
 8008f7e:	f10d 043f 	add.w	r4, sp, #63	; 0x3f
 8008f82:	b9c8      	cbnz	r0, 8008fb8 <_itostr+0x44>
 8008f84:	2330      	movs	r3, #48	; 0x30
 8008f86:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8008f8a:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 8008f8e:	b132      	cbz	r2, 8008f9e <_itostr+0x2a>
 8008f90:	4668      	mov	r0, sp
 8008f92:	2530      	movs	r5, #48	; 0x30
 8008f94:	1ae6      	subs	r6, r4, r3
 8008f96:	4296      	cmp	r6, r2
 8008f98:	da01      	bge.n	8008f9e <_itostr+0x2a>
 8008f9a:	4283      	cmp	r3, r0
 8008f9c:	d81c      	bhi.n	8008fd8 <_itostr+0x64>
 8008f9e:	b117      	cbz	r7, 8008fa6 <_itostr+0x32>
 8008fa0:	222d      	movs	r2, #45	; 0x2d
 8008fa2:	f803 2901 	strb.w	r2, [r3], #-1
 8008fa6:	3301      	adds	r3, #1
 8008fa8:	1ae0      	subs	r0, r4, r3
 8008faa:	3901      	subs	r1, #1
 8008fac:	aa10      	add	r2, sp, #64	; 0x40
 8008fae:	4293      	cmp	r3, r2
 8008fb0:	d315      	bcc.n	8008fde <_itostr+0x6a>
 8008fb2:	3001      	adds	r0, #1
 8008fb4:	b011      	add	sp, #68	; 0x44
 8008fb6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008fb8:	4623      	mov	r3, r4
 8008fba:	250a      	movs	r5, #10
 8008fbc:	46ec      	mov	ip, sp
 8008fbe:	fb90 f6f5 	sdiv	r6, r0, r5
 8008fc2:	fb05 0016 	mls	r0, r5, r6, r0
 8008fc6:	3030      	adds	r0, #48	; 0x30
 8008fc8:	f803 0901 	strb.w	r0, [r3], #-1
 8008fcc:	4630      	mov	r0, r6
 8008fce:	2e00      	cmp	r6, #0
 8008fd0:	d0dd      	beq.n	8008f8e <_itostr+0x1a>
 8008fd2:	4563      	cmp	r3, ip
 8008fd4:	d1f3      	bne.n	8008fbe <_itostr+0x4a>
 8008fd6:	e7da      	b.n	8008f8e <_itostr+0x1a>
 8008fd8:	f803 5901 	strb.w	r5, [r3], #-1
 8008fdc:	e7da      	b.n	8008f94 <_itostr+0x20>
 8008fde:	f813 2b01 	ldrb.w	r2, [r3], #1
 8008fe2:	f801 2f01 	strb.w	r2, [r1, #1]!
 8008fe6:	e7e1      	b.n	8008fac <_itostr+0x38>

08008fe8 <_xputch>:
 8008fe8:	4603      	mov	r3, r0
 8008fea:	b410      	push	{r4}
 8008fec:	4c08      	ldr	r4, [pc, #32]	; (8009010 <_xputch+0x28>)
 8008fee:	68da      	ldr	r2, [r3, #12]
 8008ff0:	4608      	mov	r0, r1
 8008ff2:	6821      	ldr	r1, [r4, #0]
 8008ff4:	3201      	adds	r2, #1
 8008ff6:	60da      	str	r2, [r3, #12]
 8008ff8:	b139      	cbz	r1, 800900a <_xputch+0x22>
 8008ffa:	691b      	ldr	r3, [r3, #16]
 8008ffc:	429a      	cmp	r2, r3
 8008ffe:	da02      	bge.n	8009006 <_xputch+0x1e>
 8009000:	1c4b      	adds	r3, r1, #1
 8009002:	6023      	str	r3, [r4, #0]
 8009004:	7008      	strb	r0, [r1, #0]
 8009006:	bc10      	pop	{r4}
 8009008:	4770      	bx	lr
 800900a:	bc10      	pop	{r4}
 800900c:	f009 b9d4 	b.w	80123b8 <console_putc>
 8009010:	200000e8 	andcs	r0, r0, r8, ror #1

08009014 <_format_int>:
 8009014:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009018:	4698      	mov	r8, r3
 800901a:	b091      	sub	sp, #68	; 0x44
 800901c:	ea52 0308 	orrs.w	r3, r2, r8
 8009020:	4606      	mov	r6, r0
 8009022:	4617      	mov	r7, r2
 8009024:	f10d 053f 	add.w	r5, sp, #63	; 0x3f
 8009028:	d133      	bne.n	8009092 <_format_int+0x7e>
 800902a:	2330      	movs	r3, #48	; 0x30
 800902c:	f10d 043e 	add.w	r4, sp, #62	; 0x3e
 8009030:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8009034:	6833      	ldr	r3, [r6, #0]
 8009036:	07d8      	lsls	r0, r3, #31
 8009038:	d507      	bpl.n	800904a <_format_int+0x36>
 800903a:	466a      	mov	r2, sp
 800903c:	2030      	movs	r0, #48	; 0x30
 800903e:	6871      	ldr	r1, [r6, #4]
 8009040:	1b2f      	subs	r7, r5, r4
 8009042:	428f      	cmp	r7, r1
 8009044:	da01      	bge.n	800904a <_format_int+0x36>
 8009046:	4294      	cmp	r4, r2
 8009048:	d839      	bhi.n	80090be <_format_int+0xaa>
 800904a:	0699      	lsls	r1, r3, #26
 800904c:	d507      	bpl.n	800905e <_format_int+0x4a>
 800904e:	466a      	mov	r2, sp
 8009050:	2030      	movs	r0, #48	; 0x30
 8009052:	68b1      	ldr	r1, [r6, #8]
 8009054:	1b2f      	subs	r7, r5, r4
 8009056:	428f      	cmp	r7, r1
 8009058:	da01      	bge.n	800905e <_format_int+0x4a>
 800905a:	4294      	cmp	r4, r2
 800905c:	d832      	bhi.n	80090c4 <_format_int+0xb0>
 800905e:	071a      	lsls	r2, r3, #28
 8009060:	bf44      	itt	mi
 8009062:	222d      	movmi	r2, #45	; 0x2d
 8009064:	f804 2901 	strbmi.w	r2, [r4], #-1
 8009068:	065b      	lsls	r3, r3, #25
 800906a:	d407      	bmi.n	800907c <_format_int+0x68>
 800906c:	466b      	mov	r3, sp
 800906e:	2120      	movs	r1, #32
 8009070:	68b2      	ldr	r2, [r6, #8]
 8009072:	1b28      	subs	r0, r5, r4
 8009074:	4290      	cmp	r0, r2
 8009076:	da01      	bge.n	800907c <_format_int+0x68>
 8009078:	429c      	cmp	r4, r3
 800907a:	d826      	bhi.n	80090ca <_format_int+0xb6>
 800907c:	1b2d      	subs	r5, r5, r4
 800907e:	3401      	adds	r4, #1
 8009080:	ab10      	add	r3, sp, #64	; 0x40
 8009082:	429c      	cmp	r4, r3
 8009084:	d324      	bcc.n	80090d0 <_format_int+0xbc>
 8009086:	68b3      	ldr	r3, [r6, #8]
 8009088:	42ab      	cmp	r3, r5
 800908a:	dc27      	bgt.n	80090dc <_format_int+0xc8>
 800908c:	b011      	add	sp, #68	; 0x44
 800908e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009092:	462c      	mov	r4, r5
 8009094:	46e9      	mov	r9, sp
 8009096:	4638      	mov	r0, r7
 8009098:	4641      	mov	r1, r8
 800909a:	220a      	movs	r2, #10
 800909c:	2300      	movs	r3, #0
 800909e:	f7fe ff47 	bl	8007f30 <__aeabi_uldivmod>
 80090a2:	3230      	adds	r2, #48	; 0x30
 80090a4:	f804 2901 	strb.w	r2, [r4], #-1
 80090a8:	463a      	mov	r2, r7
 80090aa:	4643      	mov	r3, r8
 80090ac:	2a0a      	cmp	r2, #10
 80090ae:	f173 0300 	sbcs.w	r3, r3, #0
 80090b2:	4607      	mov	r7, r0
 80090b4:	4688      	mov	r8, r1
 80090b6:	d3bd      	bcc.n	8009034 <_format_int+0x20>
 80090b8:	454c      	cmp	r4, r9
 80090ba:	d1ec      	bne.n	8009096 <_format_int+0x82>
 80090bc:	e7ba      	b.n	8009034 <_format_int+0x20>
 80090be:	f804 0901 	strb.w	r0, [r4], #-1
 80090c2:	e7bd      	b.n	8009040 <_format_int+0x2c>
 80090c4:	f804 0901 	strb.w	r0, [r4], #-1
 80090c8:	e7c4      	b.n	8009054 <_format_int+0x40>
 80090ca:	f804 1901 	strb.w	r1, [r4], #-1
 80090ce:	e7d0      	b.n	8009072 <_format_int+0x5e>
 80090d0:	4630      	mov	r0, r6
 80090d2:	f814 1b01 	ldrb.w	r1, [r4], #1
 80090d6:	f7ff ff87 	bl	8008fe8 <_xputch>
 80090da:	e7d1      	b.n	8009080 <_format_int+0x6c>
 80090dc:	2120      	movs	r1, #32
 80090de:	4630      	mov	r0, r6
 80090e0:	f7ff ff82 	bl	8008fe8 <_xputch>
 80090e4:	3501      	adds	r5, #1
 80090e6:	e7ce      	b.n	8009086 <_format_int+0x72>

080090e8 <_format_hex>:
 80090e8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80090ea:	b091      	sub	sp, #68	; 0x44
 80090ec:	4606      	mov	r6, r0
 80090ee:	6804      	ldr	r4, [r0, #0]
 80090f0:	f10d 023f 	add.w	r2, sp, #63	; 0x3f
 80090f4:	bb61      	cbnz	r1, 8009150 <_format_hex+0x68>
 80090f6:	2330      	movs	r3, #48	; 0x30
 80090f8:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 80090fc:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 8009100:	07e5      	lsls	r5, r4, #31
 8009102:	d507      	bpl.n	8009114 <_format_hex+0x2c>
 8009104:	4669      	mov	r1, sp
 8009106:	2530      	movs	r5, #48	; 0x30
 8009108:	6870      	ldr	r0, [r6, #4]
 800910a:	1ad7      	subs	r7, r2, r3
 800910c:	4287      	cmp	r7, r0
 800910e:	da01      	bge.n	8009114 <_format_hex+0x2c>
 8009110:	428b      	cmp	r3, r1
 8009112:	d831      	bhi.n	8009178 <_format_hex+0x90>
 8009114:	06a0      	lsls	r0, r4, #26
 8009116:	d507      	bpl.n	8009128 <_format_hex+0x40>
 8009118:	4669      	mov	r1, sp
 800911a:	2530      	movs	r5, #48	; 0x30
 800911c:	68b0      	ldr	r0, [r6, #8]
 800911e:	1ad7      	subs	r7, r2, r3
 8009120:	4287      	cmp	r7, r0
 8009122:	da01      	bge.n	8009128 <_format_hex+0x40>
 8009124:	428b      	cmp	r3, r1
 8009126:	d82a      	bhi.n	800917e <_format_hex+0x96>
 8009128:	0661      	lsls	r1, r4, #25
 800912a:	d407      	bmi.n	800913c <_format_hex+0x54>
 800912c:	4669      	mov	r1, sp
 800912e:	2420      	movs	r4, #32
 8009130:	68b0      	ldr	r0, [r6, #8]
 8009132:	1ad5      	subs	r5, r2, r3
 8009134:	4285      	cmp	r5, r0
 8009136:	da01      	bge.n	800913c <_format_hex+0x54>
 8009138:	428b      	cmp	r3, r1
 800913a:	d823      	bhi.n	8009184 <_format_hex+0x9c>
 800913c:	1ad5      	subs	r5, r2, r3
 800913e:	1c5c      	adds	r4, r3, #1
 8009140:	ab10      	add	r3, sp, #64	; 0x40
 8009142:	429c      	cmp	r4, r3
 8009144:	d321      	bcc.n	800918a <_format_hex+0xa2>
 8009146:	68b3      	ldr	r3, [r6, #8]
 8009148:	429d      	cmp	r5, r3
 800914a:	db24      	blt.n	8009196 <_format_hex+0xae>
 800914c:	b011      	add	sp, #68	; 0x44
 800914e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009150:	f014 0f02 	tst.w	r4, #2
 8009154:	bf0c      	ite	eq
 8009156:	2757      	moveq	r7, #87	; 0x57
 8009158:	2737      	movne	r7, #55	; 0x37
 800915a:	4613      	mov	r3, r2
 800915c:	466d      	mov	r5, sp
 800915e:	f001 000f 	and.w	r0, r1, #15
 8009162:	2809      	cmp	r0, #9
 8009164:	bf94      	ite	ls
 8009166:	3030      	addls	r0, #48	; 0x30
 8009168:	19c0      	addhi	r0, r0, r7
 800916a:	0909      	lsrs	r1, r1, #4
 800916c:	f803 0901 	strb.w	r0, [r3], #-1
 8009170:	d0c6      	beq.n	8009100 <_format_hex+0x18>
 8009172:	42ab      	cmp	r3, r5
 8009174:	d1f3      	bne.n	800915e <_format_hex+0x76>
 8009176:	e7c3      	b.n	8009100 <_format_hex+0x18>
 8009178:	f803 5901 	strb.w	r5, [r3], #-1
 800917c:	e7c5      	b.n	800910a <_format_hex+0x22>
 800917e:	f803 5901 	strb.w	r5, [r3], #-1
 8009182:	e7cc      	b.n	800911e <_format_hex+0x36>
 8009184:	f803 4901 	strb.w	r4, [r3], #-1
 8009188:	e7d3      	b.n	8009132 <_format_hex+0x4a>
 800918a:	4630      	mov	r0, r6
 800918c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8009190:	f7ff ff2a 	bl	8008fe8 <_xputch>
 8009194:	e7d4      	b.n	8009140 <_format_hex+0x58>
 8009196:	2120      	movs	r1, #32
 8009198:	4630      	mov	r0, r6
 800919a:	f7ff ff25 	bl	8008fe8 <_xputch>
 800919e:	3501      	adds	r5, #1
 80091a0:	e7d1      	b.n	8009146 <_format_hex+0x5e>
	...

080091a4 <_vprintf>:
 80091a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80091a8:	4614      	mov	r4, r2
 80091aa:	2200      	movs	r2, #0
 80091ac:	460b      	mov	r3, r1
 80091ae:	f04f 0800 	mov.w	r8, #0
 80091b2:	b099      	sub	sp, #100	; 0x64
 80091b4:	e9cd 2006 	strd	r2, r0, [sp, #24]
 80091b8:	af08      	add	r7, sp, #32
 80091ba:	7819      	ldrb	r1, [r3, #0]
 80091bc:	b919      	cbnz	r1, 80091c6 <_vprintf+0x22>
 80091be:	9806      	ldr	r0, [sp, #24]
 80091c0:	b019      	add	sp, #100	; 0x64
 80091c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80091c6:	2925      	cmp	r1, #37	; 0x25
 80091c8:	f103 0601 	add.w	r6, r3, #1
 80091cc:	d004      	beq.n	80091d8 <_vprintf+0x34>
 80091ce:	a803      	add	r0, sp, #12
 80091d0:	f7ff ff0a 	bl	8008fe8 <_xputch>
 80091d4:	4633      	mov	r3, r6
 80091d6:	e7f0      	b.n	80091ba <_vprintf+0x16>
 80091d8:	2200      	movs	r2, #0
 80091da:	e9cd 2203 	strd	r2, r2, [sp, #12]
 80091de:	9205      	str	r2, [sp, #20]
 80091e0:	785a      	ldrb	r2, [r3, #1]
 80091e2:	2a30      	cmp	r2, #48	; 0x30
 80091e4:	d129      	bne.n	800923a <_vprintf+0x96>
 80091e6:	2220      	movs	r2, #32
 80091e8:	9203      	str	r2, [sp, #12]
 80091ea:	1c9e      	adds	r6, r3, #2
 80091ec:	2200      	movs	r2, #0
 80091ee:	4635      	mov	r5, r6
 80091f0:	4613      	mov	r3, r2
 80091f2:	f04f 0c0a 	mov.w	ip, #10
 80091f6:	7829      	ldrb	r1, [r5, #0]
 80091f8:	462e      	mov	r6, r5
 80091fa:	f1a1 0030 	sub.w	r0, r1, #48	; 0x30
 80091fe:	2809      	cmp	r0, #9
 8009200:	f105 0501 	add.w	r5, r5, #1
 8009204:	d91d      	bls.n	8009242 <_vprintf+0x9e>
 8009206:	b12a      	cbz	r2, 8009214 <_vprintf+0x70>
 8009208:	9305      	str	r3, [sp, #20]
 800920a:	b11b      	cbz	r3, 8009214 <_vprintf+0x70>
 800920c:	9b03      	ldr	r3, [sp, #12]
 800920e:	f043 0310 	orr.w	r3, r3, #16
 8009212:	9303      	str	r3, [sp, #12]
 8009214:	292e      	cmp	r1, #46	; 0x2e
 8009216:	d123      	bne.n	8009260 <_vprintf+0xbc>
 8009218:	7873      	ldrb	r3, [r6, #1]
 800921a:	2b2a      	cmp	r3, #42	; 0x2a
 800921c:	d015      	beq.n	800924a <_vprintf+0xa6>
 800921e:	2100      	movs	r1, #0
 8009220:	250a      	movs	r5, #10
 8009222:	460a      	mov	r2, r1
 8009224:	1c70      	adds	r0, r6, #1
 8009226:	7803      	ldrb	r3, [r0, #0]
 8009228:	4606      	mov	r6, r0
 800922a:	3b30      	subs	r3, #48	; 0x30
 800922c:	2b09      	cmp	r3, #9
 800922e:	f100 0001 	add.w	r0, r0, #1
 8009232:	d959      	bls.n	80092e8 <_vprintf+0x144>
 8009234:	b181      	cbz	r1, 8009258 <_vprintf+0xb4>
 8009236:	9204      	str	r2, [sp, #16]
 8009238:	e00e      	b.n	8009258 <_vprintf+0xb4>
 800923a:	2a2d      	cmp	r2, #45	; 0x2d
 800923c:	d1d6      	bne.n	80091ec <_vprintf+0x48>
 800923e:	2240      	movs	r2, #64	; 0x40
 8009240:	e7d2      	b.n	80091e8 <_vprintf+0x44>
 8009242:	2201      	movs	r2, #1
 8009244:	fb0c 0303 	mla	r3, ip, r3, r0
 8009248:	e7d5      	b.n	80091f6 <_vprintf+0x52>
 800924a:	f854 3b04 	ldr.w	r3, [r4], #4
 800924e:	3602      	adds	r6, #2
 8009250:	2b00      	cmp	r3, #0
 8009252:	bfb8      	it	lt
 8009254:	425b      	neglt	r3, r3
 8009256:	9304      	str	r3, [sp, #16]
 8009258:	9b03      	ldr	r3, [sp, #12]
 800925a:	f043 0301 	orr.w	r3, r3, #1
 800925e:	9303      	str	r3, [sp, #12]
 8009260:	7833      	ldrb	r3, [r6, #0]
 8009262:	2b6c      	cmp	r3, #108	; 0x6c
 8009264:	bf04      	itt	eq
 8009266:	9b03      	ldreq	r3, [sp, #12]
 8009268:	3601      	addeq	r6, #1
 800926a:	7831      	ldrb	r1, [r6, #0]
 800926c:	bf04      	itt	eq
 800926e:	f043 0304 	orreq.w	r3, r3, #4
 8009272:	9303      	streq	r3, [sp, #12]
 8009274:	2958      	cmp	r1, #88	; 0x58
 8009276:	f000 8171 	beq.w	800955c <_vprintf+0x3b8>
 800927a:	f1a1 0363 	sub.w	r3, r1, #99	; 0x63
 800927e:	b2da      	uxtb	r2, r3
 8009280:	2a15      	cmp	r2, #21
 8009282:	d8a4      	bhi.n	80091ce <_vprintf+0x2a>
 8009284:	2b15      	cmp	r3, #21
 8009286:	d8a2      	bhi.n	80091ce <_vprintf+0x2a>
 8009288:	a201      	add	r2, pc, #4	; (adr r2, 8009290 <_vprintf+0xec>)
 800928a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800928e:	bf00      	nop
 8009290:	080092f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r9, ip, pc}
 8009294:	08009303 	stmdaeq	r0, {r0, r1, r8, r9, ip, pc}
 8009298:	080091cf 	stmdaeq	r0, {r0, r1, r2, r3, r6, r7, r8, ip, pc}
 800929c:	08009339 	stmdaeq	r0, {r0, r3, r4, r5, r8, r9, ip, pc}
 80092a0:	080091cf 	stmdaeq	r0, {r0, r1, r2, r3, r6, r7, r8, ip, pc}
 80092a4:	080091cf 	stmdaeq	r0, {r0, r1, r2, r3, r6, r7, r8, ip, pc}
 80092a8:	08009303 	stmdaeq	r0, {r0, r1, r8, r9, ip, pc}
 80092ac:	080091cf 	stmdaeq	r0, {r0, r1, r2, r3, r6, r7, r8, ip, pc}
 80092b0:	080091cf 	stmdaeq	r0, {r0, r1, r2, r3, r6, r7, r8, ip, pc}
 80092b4:	080091cf 	stmdaeq	r0, {r0, r1, r2, r3, r6, r7, r8, ip, pc}
 80092b8:	080091cf 	stmdaeq	r0, {r0, r1, r2, r3, r6, r7, r8, ip, pc}
 80092bc:	080091cf 	stmdaeq	r0, {r0, r1, r2, r3, r6, r7, r8, ip, pc}
 80092c0:	080091cf 	stmdaeq	r0, {r0, r1, r2, r3, r6, r7, r8, ip, pc}
 80092c4:	0800949f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r7, sl, ip, pc}
 80092c8:	080091cf 	stmdaeq	r0, {r0, r1, r2, r3, r6, r7, r8, ip, pc}
 80092cc:	080091cf 	stmdaeq	r0, {r0, r1, r2, r3, r6, r7, r8, ip, pc}
 80092d0:	080094c7 	stmdaeq	r0, {r0, r1, r2, r6, r7, sl, ip, pc}
 80092d4:	080091cf 	stmdaeq	r0, {r0, r1, r2, r3, r6, r7, r8, ip, pc}
 80092d8:	0800953d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r8, sl, ip, pc}
 80092dc:	080091cf 	stmdaeq	r0, {r0, r1, r2, r3, r6, r7, r8, ip, pc}
 80092e0:	080091cf 	stmdaeq	r0, {r0, r1, r2, r3, r6, r7, r8, ip, pc}
 80092e4:	08009565 	stmdaeq	r0, {r0, r2, r5, r6, r8, sl, ip, pc}
 80092e8:	2101      	movs	r1, #1
 80092ea:	fb05 3202 	mla	r2, r5, r2, r3
 80092ee:	e79a      	b.n	8009226 <_vprintf+0x82>
 80092f0:	4625      	mov	r5, r4
 80092f2:	a803      	add	r0, sp, #12
 80092f4:	f855 1b04 	ldr.w	r1, [r5], #4
 80092f8:	f7ff fe76 	bl	8008fe8 <_xputch>
 80092fc:	462c      	mov	r4, r5
 80092fe:	3601      	adds	r6, #1
 8009300:	e768      	b.n	80091d4 <_vprintf+0x30>
 8009302:	9903      	ldr	r1, [sp, #12]
 8009304:	074d      	lsls	r5, r1, #29
 8009306:	bf51      	iteee	pl
 8009308:	4625      	movpl	r5, r4
 800930a:	3407      	addmi	r4, #7
 800930c:	f024 0407 	bicmi.w	r4, r4, #7
 8009310:	4625      	movmi	r5, r4
 8009312:	bf55      	itete	pl
 8009314:	f855 2b04 	ldrpl.w	r2, [r5], #4
 8009318:	6863      	ldrmi	r3, [r4, #4]
 800931a:	17d3      	asrpl	r3, r2, #31
 800931c:	f855 2b08 	ldrmi.w	r2, [r5], #8
 8009320:	2b00      	cmp	r3, #0
 8009322:	da05      	bge.n	8009330 <_vprintf+0x18c>
 8009324:	f041 0108 	orr.w	r1, r1, #8
 8009328:	4252      	negs	r2, r2
 800932a:	9103      	str	r1, [sp, #12]
 800932c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8009330:	a803      	add	r0, sp, #12
 8009332:	f7ff fe6f 	bl	8009014 <_format_int>
 8009336:	e7e1      	b.n	80092fc <_vprintf+0x158>
 8009338:	3407      	adds	r4, #7
 800933a:	f024 0507 	bic.w	r5, r4, #7
 800933e:	e8f5 0102 	ldrd	r0, r1, [r5], #8
 8009342:	f7fe fbfb 	bl	8007b3c <__aeabi_d2f>
 8009346:	9b03      	ldr	r3, [sp, #12]
 8009348:	4641      	mov	r1, r8
 800934a:	07dc      	lsls	r4, r3, #31
 800934c:	bf54      	ite	pl
 800934e:	f04f 0a06 	movpl.w	sl, #6
 8009352:	f8dd a010 	ldrmi.w	sl, [sp, #16]
 8009356:	4681      	mov	r9, r0
 8009358:	f7fe fd9c 	bl	8007e94 <__aeabi_fcmplt>
 800935c:	2800      	cmp	r0, #0
 800935e:	d063      	beq.n	8009428 <_vprintf+0x284>
 8009360:	232d      	movs	r3, #45	; 0x2d
 8009362:	f109 4900 	add.w	r9, r9, #2147483648	; 0x80000000
 8009366:	f88d 3020 	strb.w	r3, [sp, #32]
 800936a:	f10d 0b21 	add.w	fp, sp, #33	; 0x21
 800936e:	4648      	mov	r0, r9
 8009370:	f7fe fdb8 	bl	8007ee4 <__aeabi_f2iz>
 8009374:	4659      	mov	r1, fp
 8009376:	2200      	movs	r2, #0
 8009378:	4604      	mov	r4, r0
 800937a:	f7ff fdfb 	bl	8008f74 <_itostr>
 800937e:	eb0b 0200 	add.w	r2, fp, r0
 8009382:	e9cd 2000 	strd	r2, r0, [sp]
 8009386:	4620      	mov	r0, r4
 8009388:	f7fe fce2 	bl	8007d50 <__aeabi_i2f>
 800938c:	4601      	mov	r1, r0
 800938e:	4648      	mov	r0, r9
 8009390:	f7fe fc28 	bl	8007be4 <__aeabi_fsub>
 8009394:	222e      	movs	r2, #46	; 0x2e
 8009396:	4601      	mov	r1, r0
 8009398:	200a      	movs	r0, #10
 800939a:	9b00      	ldr	r3, [sp, #0]
 800939c:	f10a 0901 	add.w	r9, sl, #1
 80093a0:	1c5c      	adds	r4, r3, #1
 80093a2:	9b01      	ldr	r3, [sp, #4]
 80093a4:	f80b 2003 	strb.w	r2, [fp, r3]
 80093a8:	4603      	mov	r3, r0
 80093aa:	f1ba 0f00 	cmp.w	sl, #0
 80093ae:	dc3d      	bgt.n	800942c <_vprintf+0x288>
 80093b0:	9100      	str	r1, [sp, #0]
 80093b2:	f7fe fccd 	bl	8007d50 <__aeabi_i2f>
 80093b6:	9900      	ldr	r1, [sp, #0]
 80093b8:	f7fe ff90 	bl	80082dc <__aeabi_fmul>
 80093bc:	f7fe fd92 	bl	8007ee4 <__aeabi_f2iz>
 80093c0:	464a      	mov	r2, r9
 80093c2:	4621      	mov	r1, r4
 80093c4:	f7ff fdd6 	bl	8008f74 <_itostr>
 80093c8:	4404      	add	r4, r0
 80093ca:	1be0      	subs	r0, r4, r7
 80093cc:	1e44      	subs	r4, r0, #1
 80093ce:	5d3b      	ldrb	r3, [r7, r4]
 80093d0:	193a      	adds	r2, r7, r4
 80093d2:	2b34      	cmp	r3, #52	; 0x34
 80093d4:	d910      	bls.n	80093f8 <_vprintf+0x254>
 80093d6:	f812 1c01 	ldrb.w	r1, [r2, #-1]
 80093da:	1e53      	subs	r3, r2, #1
 80093dc:	292e      	cmp	r1, #46	; 0x2e
 80093de:	d02c      	beq.n	800943a <_vprintf+0x296>
 80093e0:	469c      	mov	ip, r3
 80093e2:	f04f 0e30 	mov.w	lr, #48	; 0x30
 80093e6:	4663      	mov	r3, ip
 80093e8:	f81c 1901 	ldrb.w	r1, [ip], #-1
 80093ec:	2939      	cmp	r1, #57	; 0x39
 80093ee:	d021      	beq.n	8009434 <_vprintf+0x290>
 80093f0:	292e      	cmp	r1, #46	; 0x2e
 80093f2:	d022      	beq.n	800943a <_vprintf+0x296>
 80093f4:	3101      	adds	r1, #1
 80093f6:	7019      	strb	r1, [r3, #0]
 80093f8:	f104 0360 	add.w	r3, r4, #96	; 0x60
 80093fc:	446b      	add	r3, sp
 80093fe:	f813 3c41 	ldrb.w	r3, [r3, #-65]
 8009402:	2b2e      	cmp	r3, #46	; 0x2e
 8009404:	bf08      	it	eq
 8009406:	f104 34ff 	addeq.w	r4, r4, #4294967295	; 0xffffffff
 800940a:	46a1      	mov	r9, r4
 800940c:	9b05      	ldr	r3, [sp, #20]
 800940e:	4599      	cmp	r9, r3
 8009410:	db3e      	blt.n	8009490 <_vprintf+0x2ec>
 8009412:	46b9      	mov	r9, r7
 8009414:	2c00      	cmp	r4, #0
 8009416:	f77f af71 	ble.w	80092fc <_vprintf+0x158>
 800941a:	f819 1b01 	ldrb.w	r1, [r9], #1
 800941e:	a803      	add	r0, sp, #12
 8009420:	f7ff fde2 	bl	8008fe8 <_xputch>
 8009424:	3c01      	subs	r4, #1
 8009426:	e7f5      	b.n	8009414 <_vprintf+0x270>
 8009428:	46bb      	mov	fp, r7
 800942a:	e7a0      	b.n	800936e <_vprintf+0x1ca>
 800942c:	4358      	muls	r0, r3
 800942e:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
 8009432:	e7ba      	b.n	80093aa <_vprintf+0x206>
 8009434:	f88c e001 	strb.w	lr, [ip, #1]
 8009438:	e7d5      	b.n	80093e6 <_vprintf+0x242>
 800943a:	f04f 0c30 	mov.w	ip, #48	; 0x30
 800943e:	3b01      	subs	r3, #1
 8009440:	7819      	ldrb	r1, [r3, #0]
 8009442:	2939      	cmp	r1, #57	; 0x39
 8009444:	d112      	bne.n	800946c <_vprintf+0x2c8>
 8009446:	42bb      	cmp	r3, r7
 8009448:	d20d      	bcs.n	8009466 <_vprintf+0x2c2>
 800944a:	1c5c      	adds	r4, r3, #1
 800944c:	1c99      	adds	r1, r3, #2
 800944e:	428c      	cmp	r4, r1
 8009450:	eba2 0203 	sub.w	r2, r2, r3
 8009454:	d913      	bls.n	800947e <_vprintf+0x2da>
 8009456:	4619      	mov	r1, r3
 8009458:	441a      	add	r2, r3
 800945a:	428a      	cmp	r2, r1
 800945c:	d10b      	bne.n	8009476 <_vprintf+0x2d2>
 800945e:	2231      	movs	r2, #49	; 0x31
 8009460:	4604      	mov	r4, r0
 8009462:	705a      	strb	r2, [r3, #1]
 8009464:	e7c8      	b.n	80093f8 <_vprintf+0x254>
 8009466:	f803 c901 	strb.w	ip, [r3], #-1
 800946a:	e7e9      	b.n	8009440 <_vprintf+0x29c>
 800946c:	42bb      	cmp	r3, r7
 800946e:	d3ec      	bcc.n	800944a <_vprintf+0x2a6>
 8009470:	292d      	cmp	r1, #45	; 0x2d
 8009472:	d0ea      	beq.n	800944a <_vprintf+0x2a6>
 8009474:	e7be      	b.n	80093f4 <_vprintf+0x250>
 8009476:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800947a:	704c      	strb	r4, [r1, #1]
 800947c:	e7ed      	b.n	800945a <_vprintf+0x2b6>
 800947e:	4414      	add	r4, r2
 8009480:	440a      	add	r2, r1
 8009482:	428a      	cmp	r2, r1
 8009484:	d0eb      	beq.n	800945e <_vprintf+0x2ba>
 8009486:	f814 cd01 	ldrb.w	ip, [r4, #-1]!
 800948a:	f802 cd01 	strb.w	ip, [r2, #-1]!
 800948e:	e7f8      	b.n	8009482 <_vprintf+0x2de>
 8009490:	2120      	movs	r1, #32
 8009492:	a803      	add	r0, sp, #12
 8009494:	f7ff fda8 	bl	8008fe8 <_xputch>
 8009498:	f109 0901 	add.w	r9, r9, #1
 800949c:	e7b6      	b.n	800940c <_vprintf+0x268>
 800949e:	2308      	movs	r3, #8
 80094a0:	4625      	mov	r5, r4
 80094a2:	9305      	str	r3, [sp, #20]
 80094a4:	2320      	movs	r3, #32
 80094a6:	2130      	movs	r1, #48	; 0x30
 80094a8:	f855 4b04 	ldr.w	r4, [r5], #4
 80094ac:	a803      	add	r0, sp, #12
 80094ae:	9303      	str	r3, [sp, #12]
 80094b0:	f7ff fd9a 	bl	8008fe8 <_xputch>
 80094b4:	2178      	movs	r1, #120	; 0x78
 80094b6:	a803      	add	r0, sp, #12
 80094b8:	f7ff fd96 	bl	8008fe8 <_xputch>
 80094bc:	4621      	mov	r1, r4
 80094be:	a803      	add	r0, sp, #12
 80094c0:	f7ff fe12 	bl	80090e8 <_format_hex>
 80094c4:	e71a      	b.n	80092fc <_vprintf+0x158>
 80094c6:	4625      	mov	r5, r4
 80094c8:	2400      	movs	r4, #0
 80094ca:	f855 9b04 	ldr.w	r9, [r5], #4
 80094ce:	f819 3004 	ldrb.w	r3, [r9, r4]
 80094d2:	b993      	cbnz	r3, 80094fa <_vprintf+0x356>
 80094d4:	9b03      	ldr	r3, [sp, #12]
 80094d6:	07d9      	lsls	r1, r3, #31
 80094d8:	d503      	bpl.n	80094e2 <_vprintf+0x33e>
 80094da:	9b04      	ldr	r3, [sp, #16]
 80094dc:	429c      	cmp	r4, r3
 80094de:	bfa8      	it	ge
 80094e0:	461c      	movge	r4, r3
 80094e2:	9b03      	ldr	r3, [sp, #12]
 80094e4:	f104 0a01 	add.w	sl, r4, #1
 80094e8:	065a      	lsls	r2, r3, #25
 80094ea:	d403      	bmi.n	80094f4 <_vprintf+0x350>
 80094ec:	9b05      	ldr	r3, [sp, #20]
 80094ee:	429c      	cmp	r4, r3
 80094f0:	db05      	blt.n	80094fe <_vprintf+0x35a>
 80094f2:	4654      	mov	r4, sl
 80094f4:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 80094f8:	e00d      	b.n	8009516 <_vprintf+0x372>
 80094fa:	3401      	adds	r4, #1
 80094fc:	e7e7      	b.n	80094ce <_vprintf+0x32a>
 80094fe:	2120      	movs	r1, #32
 8009500:	a803      	add	r0, sp, #12
 8009502:	f7ff fd71 	bl	8008fe8 <_xputch>
 8009506:	4654      	mov	r4, sl
 8009508:	e7eb      	b.n	80094e2 <_vprintf+0x33e>
 800950a:	a803      	add	r0, sp, #12
 800950c:	f7ff fd6c 	bl	8008fe8 <_xputch>
 8009510:	9b04      	ldr	r3, [sp, #16]
 8009512:	3b01      	subs	r3, #1
 8009514:	9304      	str	r3, [sp, #16]
 8009516:	9b03      	ldr	r3, [sp, #12]
 8009518:	07db      	lsls	r3, r3, #31
 800951a:	d501      	bpl.n	8009520 <_vprintf+0x37c>
 800951c:	9b04      	ldr	r3, [sp, #16]
 800951e:	b11b      	cbz	r3, 8009528 <_vprintf+0x384>
 8009520:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 8009524:	2900      	cmp	r1, #0
 8009526:	d1f0      	bne.n	800950a <_vprintf+0x366>
 8009528:	9b05      	ldr	r3, [sp, #20]
 800952a:	429c      	cmp	r4, r3
 800952c:	f6bf aee6 	bge.w	80092fc <_vprintf+0x158>
 8009530:	2120      	movs	r1, #32
 8009532:	a803      	add	r0, sp, #12
 8009534:	f7ff fd58 	bl	8008fe8 <_xputch>
 8009538:	3401      	adds	r4, #1
 800953a:	e7f5      	b.n	8009528 <_vprintf+0x384>
 800953c:	9b03      	ldr	r3, [sp, #12]
 800953e:	f013 0304 	ands.w	r3, r3, #4
 8009542:	bf1d      	ittte	ne
 8009544:	3407      	addne	r4, #7
 8009546:	f024 0407 	bicne.w	r4, r4, #7
 800954a:	4625      	movne	r5, r4
 800954c:	4625      	moveq	r5, r4
 800954e:	bf1a      	itte	ne
 8009550:	f855 2b08 	ldrne.w	r2, [r5], #8
 8009554:	6863      	ldrne	r3, [r4, #4]
 8009556:	f855 2b04 	ldreq.w	r2, [r5], #4
 800955a:	e6e9      	b.n	8009330 <_vprintf+0x18c>
 800955c:	9b03      	ldr	r3, [sp, #12]
 800955e:	f043 0302 	orr.w	r3, r3, #2
 8009562:	9303      	str	r3, [sp, #12]
 8009564:	4625      	mov	r5, r4
 8009566:	f855 1b04 	ldr.w	r1, [r5], #4
 800956a:	e7a8      	b.n	80094be <_vprintf+0x31a>

0800956c <printf>:
 800956c:	b40f      	push	{r0, r1, r2, r3}
 800956e:	b507      	push	{r0, r1, r2, lr}
 8009570:	aa04      	add	r2, sp, #16
 8009572:	f852 1b04 	ldr.w	r1, [r2], #4
 8009576:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800957a:	9201      	str	r2, [sp, #4]
 800957c:	f7ff fe12 	bl	80091a4 <_vprintf>
 8009580:	b003      	add	sp, #12
 8009582:	f85d eb04 	ldr.w	lr, [sp], #4
 8009586:	b004      	add	sp, #16
 8009588:	4770      	bx	lr
	...

0800958c <sprintf>:
 800958c:	b40e      	push	{r1, r2, r3}
 800958e:	b517      	push	{r0, r1, r2, r4, lr}
 8009590:	4c09      	ldr	r4, [pc, #36]	; (80095b8 <sprintf+0x2c>)
 8009592:	aa05      	add	r2, sp, #20
 8009594:	f852 1b04 	ldr.w	r1, [r2], #4
 8009598:	6020      	str	r0, [r4, #0]
 800959a:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800959e:	9201      	str	r2, [sp, #4]
 80095a0:	f7ff fe00 	bl	80091a4 <_vprintf>
 80095a4:	2300      	movs	r3, #0
 80095a6:	6822      	ldr	r2, [r4, #0]
 80095a8:	6023      	str	r3, [r4, #0]
 80095aa:	7013      	strb	r3, [r2, #0]
 80095ac:	b003      	add	sp, #12
 80095ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80095b2:	b003      	add	sp, #12
 80095b4:	4770      	bx	lr
 80095b6:	bf00      	nop
 80095b8:	200000e8 	andcs	r0, r0, r8, ror #1

080095bc <snprintf>:
 80095bc:	b40c      	push	{r2, r3}
 80095be:	460b      	mov	r3, r1
 80095c0:	b513      	push	{r0, r1, r4, lr}
 80095c2:	4c09      	ldr	r4, [pc, #36]	; (80095e8 <snprintf+0x2c>)
 80095c4:	aa04      	add	r2, sp, #16
 80095c6:	f852 1b04 	ldr.w	r1, [r2], #4
 80095ca:	6020      	str	r0, [r4, #0]
 80095cc:	4618      	mov	r0, r3
 80095ce:	9201      	str	r2, [sp, #4]
 80095d0:	f7ff fde8 	bl	80091a4 <_vprintf>
 80095d4:	2300      	movs	r3, #0
 80095d6:	6822      	ldr	r2, [r4, #0]
 80095d8:	6023      	str	r3, [r4, #0]
 80095da:	7013      	strb	r3, [r2, #0]
 80095dc:	b002      	add	sp, #8
 80095de:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80095e2:	b002      	add	sp, #8
 80095e4:	4770      	bx	lr
 80095e6:	bf00      	nop
 80095e8:	200000e8 	andcs	r0, r0, r8, ror #1

080095ec <vsnprintf>:
 80095ec:	b538      	push	{r3, r4, r5, lr}
 80095ee:	4605      	mov	r5, r0
 80095f0:	4c05      	ldr	r4, [pc, #20]	; (8009608 <vsnprintf+0x1c>)
 80095f2:	4608      	mov	r0, r1
 80095f4:	4611      	mov	r1, r2
 80095f6:	461a      	mov	r2, r3
 80095f8:	6025      	str	r5, [r4, #0]
 80095fa:	f7ff fdd3 	bl	80091a4 <_vprintf>
 80095fe:	2300      	movs	r3, #0
 8009600:	6822      	ldr	r2, [r4, #0]
 8009602:	6023      	str	r3, [r4, #0]
 8009604:	7013      	strb	r3, [r2, #0]
 8009606:	bd38      	pop	{r3, r4, r5, pc}
 8009608:	200000e8 	andcs	r0, r0, r8, ror #1

0800960c <__udivmoddi4>:
 800960c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009610:	9e08      	ldr	r6, [sp, #32]
 8009612:	460d      	mov	r5, r1
 8009614:	4604      	mov	r4, r0
 8009616:	468e      	mov	lr, r1
 8009618:	2b00      	cmp	r3, #0
 800961a:	d14c      	bne.n	80096b6 <__udivmoddi4+0xaa>
 800961c:	428a      	cmp	r2, r1
 800961e:	4694      	mov	ip, r2
 8009620:	d967      	bls.n	80096f2 <__udivmoddi4+0xe6>
 8009622:	fab2 f382 	clz	r3, r2
 8009626:	b153      	cbz	r3, 800963e <__udivmoddi4+0x32>
 8009628:	fa02 fc03 	lsl.w	ip, r2, r3
 800962c:	f1c3 0220 	rsb	r2, r3, #32
 8009630:	fa01 fe03 	lsl.w	lr, r1, r3
 8009634:	fa20 f202 	lsr.w	r2, r0, r2
 8009638:	ea42 0e0e 	orr.w	lr, r2, lr
 800963c:	409c      	lsls	r4, r3
 800963e:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8009642:	fbbe f1f7 	udiv	r1, lr, r7
 8009646:	fa1f f58c 	uxth.w	r5, ip
 800964a:	fb07 ee11 	mls	lr, r7, r1, lr
 800964e:	fb01 f005 	mul.w	r0, r1, r5
 8009652:	0c22      	lsrs	r2, r4, #16
 8009654:	ea42 420e 	orr.w	r2, r2, lr, lsl #16
 8009658:	4290      	cmp	r0, r2
 800965a:	d90a      	bls.n	8009672 <__udivmoddi4+0x66>
 800965c:	eb1c 0202 	adds.w	r2, ip, r2
 8009660:	f101 3eff 	add.w	lr, r1, #4294967295	; 0xffffffff
 8009664:	f080 8119 	bcs.w	800989a <__udivmoddi4+0x28e>
 8009668:	4290      	cmp	r0, r2
 800966a:	f240 8116 	bls.w	800989a <__udivmoddi4+0x28e>
 800966e:	3902      	subs	r1, #2
 8009670:	4462      	add	r2, ip
 8009672:	1a12      	subs	r2, r2, r0
 8009674:	fbb2 f0f7 	udiv	r0, r2, r7
 8009678:	fb07 2210 	mls	r2, r7, r0, r2
 800967c:	fb00 f505 	mul.w	r5, r0, r5
 8009680:	b2a4      	uxth	r4, r4
 8009682:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8009686:	42a5      	cmp	r5, r4
 8009688:	d90a      	bls.n	80096a0 <__udivmoddi4+0x94>
 800968a:	eb1c 0404 	adds.w	r4, ip, r4
 800968e:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
 8009692:	f080 8104 	bcs.w	800989e <__udivmoddi4+0x292>
 8009696:	42a5      	cmp	r5, r4
 8009698:	f240 8101 	bls.w	800989e <__udivmoddi4+0x292>
 800969c:	4464      	add	r4, ip
 800969e:	3802      	subs	r0, #2
 80096a0:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 80096a4:	2100      	movs	r1, #0
 80096a6:	1b64      	subs	r4, r4, r5
 80096a8:	b11e      	cbz	r6, 80096b2 <__udivmoddi4+0xa6>
 80096aa:	40dc      	lsrs	r4, r3
 80096ac:	2300      	movs	r3, #0
 80096ae:	e9c6 4300 	strd	r4, r3, [r6]
 80096b2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80096b6:	428b      	cmp	r3, r1
 80096b8:	d908      	bls.n	80096cc <__udivmoddi4+0xc0>
 80096ba:	2e00      	cmp	r6, #0
 80096bc:	f000 80ea 	beq.w	8009894 <__udivmoddi4+0x288>
 80096c0:	2100      	movs	r1, #0
 80096c2:	e9c6 0500 	strd	r0, r5, [r6]
 80096c6:	4608      	mov	r0, r1
 80096c8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80096cc:	fab3 f183 	clz	r1, r3
 80096d0:	2900      	cmp	r1, #0
 80096d2:	d148      	bne.n	8009766 <__udivmoddi4+0x15a>
 80096d4:	42ab      	cmp	r3, r5
 80096d6:	d302      	bcc.n	80096de <__udivmoddi4+0xd2>
 80096d8:	4282      	cmp	r2, r0
 80096da:	f200 80f8 	bhi.w	80098ce <__udivmoddi4+0x2c2>
 80096de:	1a84      	subs	r4, r0, r2
 80096e0:	eb65 0203 	sbc.w	r2, r5, r3
 80096e4:	2001      	movs	r0, #1
 80096e6:	4696      	mov	lr, r2
 80096e8:	2e00      	cmp	r6, #0
 80096ea:	d0e2      	beq.n	80096b2 <__udivmoddi4+0xa6>
 80096ec:	e9c6 4e00 	strd	r4, lr, [r6]
 80096f0:	e7df      	b.n	80096b2 <__udivmoddi4+0xa6>
 80096f2:	b902      	cbnz	r2, 80096f6 <__udivmoddi4+0xea>
 80096f4:	deff      	udf	#255	; 0xff
 80096f6:	fab2 f382 	clz	r3, r2
 80096fa:	2b00      	cmp	r3, #0
 80096fc:	f040 808e 	bne.w	800981c <__udivmoddi4+0x210>
 8009700:	1a88      	subs	r0, r1, r2
 8009702:	2101      	movs	r1, #1
 8009704:	0c17      	lsrs	r7, r2, #16
 8009706:	fa1f fe82 	uxth.w	lr, r2
 800970a:	fbb0 f5f7 	udiv	r5, r0, r7
 800970e:	fb07 0015 	mls	r0, r7, r5, r0
 8009712:	0c22      	lsrs	r2, r4, #16
 8009714:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8009718:	fb0e f005 	mul.w	r0, lr, r5
 800971c:	4290      	cmp	r0, r2
 800971e:	d908      	bls.n	8009732 <__udivmoddi4+0x126>
 8009720:	eb1c 0202 	adds.w	r2, ip, r2
 8009724:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 8009728:	d202      	bcs.n	8009730 <__udivmoddi4+0x124>
 800972a:	4290      	cmp	r0, r2
 800972c:	f200 80cc 	bhi.w	80098c8 <__udivmoddi4+0x2bc>
 8009730:	4645      	mov	r5, r8
 8009732:	1a12      	subs	r2, r2, r0
 8009734:	fbb2 f0f7 	udiv	r0, r2, r7
 8009738:	fb07 2210 	mls	r2, r7, r0, r2
 800973c:	fb0e fe00 	mul.w	lr, lr, r0
 8009740:	b2a4      	uxth	r4, r4
 8009742:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8009746:	45a6      	cmp	lr, r4
 8009748:	d908      	bls.n	800975c <__udivmoddi4+0x150>
 800974a:	eb1c 0404 	adds.w	r4, ip, r4
 800974e:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
 8009752:	d202      	bcs.n	800975a <__udivmoddi4+0x14e>
 8009754:	45a6      	cmp	lr, r4
 8009756:	f200 80b4 	bhi.w	80098c2 <__udivmoddi4+0x2b6>
 800975a:	4610      	mov	r0, r2
 800975c:	eba4 040e 	sub.w	r4, r4, lr
 8009760:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8009764:	e7a0      	b.n	80096a8 <__udivmoddi4+0x9c>
 8009766:	f1c1 0720 	rsb	r7, r1, #32
 800976a:	408b      	lsls	r3, r1
 800976c:	fa22 fc07 	lsr.w	ip, r2, r7
 8009770:	ea4c 0c03 	orr.w	ip, ip, r3
 8009774:	fa25 fa07 	lsr.w	sl, r5, r7
 8009778:	ea4f 491c 	mov.w	r9, ip, lsr #16
 800977c:	fbba f8f9 	udiv	r8, sl, r9
 8009780:	408d      	lsls	r5, r1
 8009782:	fa20 f307 	lsr.w	r3, r0, r7
 8009786:	fb09 aa18 	mls	sl, r9, r8, sl
 800978a:	fa1f fe8c 	uxth.w	lr, ip
 800978e:	432b      	orrs	r3, r5
 8009790:	fa00 f501 	lsl.w	r5, r0, r1
 8009794:	fb08 f00e 	mul.w	r0, r8, lr
 8009798:	0c1c      	lsrs	r4, r3, #16
 800979a:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
 800979e:	42a0      	cmp	r0, r4
 80097a0:	fa02 f201 	lsl.w	r2, r2, r1
 80097a4:	d90b      	bls.n	80097be <__udivmoddi4+0x1b2>
 80097a6:	eb1c 0404 	adds.w	r4, ip, r4
 80097aa:	f108 3aff 	add.w	sl, r8, #4294967295	; 0xffffffff
 80097ae:	f080 8086 	bcs.w	80098be <__udivmoddi4+0x2b2>
 80097b2:	42a0      	cmp	r0, r4
 80097b4:	f240 8083 	bls.w	80098be <__udivmoddi4+0x2b2>
 80097b8:	f1a8 0802 	sub.w	r8, r8, #2
 80097bc:	4464      	add	r4, ip
 80097be:	1a24      	subs	r4, r4, r0
 80097c0:	b298      	uxth	r0, r3
 80097c2:	fbb4 f3f9 	udiv	r3, r4, r9
 80097c6:	fb09 4413 	mls	r4, r9, r3, r4
 80097ca:	fb03 fe0e 	mul.w	lr, r3, lr
 80097ce:	ea40 4404 	orr.w	r4, r0, r4, lsl #16
 80097d2:	45a6      	cmp	lr, r4
 80097d4:	d908      	bls.n	80097e8 <__udivmoddi4+0x1dc>
 80097d6:	eb1c 0404 	adds.w	r4, ip, r4
 80097da:	f103 30ff 	add.w	r0, r3, #4294967295	; 0xffffffff
 80097de:	d26a      	bcs.n	80098b6 <__udivmoddi4+0x2aa>
 80097e0:	45a6      	cmp	lr, r4
 80097e2:	d968      	bls.n	80098b6 <__udivmoddi4+0x2aa>
 80097e4:	3b02      	subs	r3, #2
 80097e6:	4464      	add	r4, ip
 80097e8:	ea43 4008 	orr.w	r0, r3, r8, lsl #16
 80097ec:	fba0 9302 	umull	r9, r3, r0, r2
 80097f0:	eba4 040e 	sub.w	r4, r4, lr
 80097f4:	429c      	cmp	r4, r3
 80097f6:	46c8      	mov	r8, r9
 80097f8:	469e      	mov	lr, r3
 80097fa:	d354      	bcc.n	80098a6 <__udivmoddi4+0x29a>
 80097fc:	d051      	beq.n	80098a2 <__udivmoddi4+0x296>
 80097fe:	2e00      	cmp	r6, #0
 8009800:	d067      	beq.n	80098d2 <__udivmoddi4+0x2c6>
 8009802:	ebb5 0308 	subs.w	r3, r5, r8
 8009806:	eb64 040e 	sbc.w	r4, r4, lr
 800980a:	40cb      	lsrs	r3, r1
 800980c:	fa04 f707 	lsl.w	r7, r4, r7
 8009810:	431f      	orrs	r7, r3
 8009812:	40cc      	lsrs	r4, r1
 8009814:	e9c6 7400 	strd	r7, r4, [r6]
 8009818:	2100      	movs	r1, #0
 800981a:	e74a      	b.n	80096b2 <__udivmoddi4+0xa6>
 800981c:	fa02 fc03 	lsl.w	ip, r2, r3
 8009820:	f1c3 0020 	rsb	r0, r3, #32
 8009824:	40c1      	lsrs	r1, r0
 8009826:	409d      	lsls	r5, r3
 8009828:	fa24 f000 	lsr.w	r0, r4, r0
 800982c:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8009830:	4328      	orrs	r0, r5
 8009832:	fbb1 f5f7 	udiv	r5, r1, r7
 8009836:	fb07 1115 	mls	r1, r7, r5, r1
 800983a:	fa1f fe8c 	uxth.w	lr, ip
 800983e:	0c02      	lsrs	r2, r0, #16
 8009840:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8009844:	fb05 f10e 	mul.w	r1, r5, lr
 8009848:	4291      	cmp	r1, r2
 800984a:	fa04 f403 	lsl.w	r4, r4, r3
 800984e:	d908      	bls.n	8009862 <__udivmoddi4+0x256>
 8009850:	eb1c 0202 	adds.w	r2, ip, r2
 8009854:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 8009858:	d22f      	bcs.n	80098ba <__udivmoddi4+0x2ae>
 800985a:	4291      	cmp	r1, r2
 800985c:	d92d      	bls.n	80098ba <__udivmoddi4+0x2ae>
 800985e:	3d02      	subs	r5, #2
 8009860:	4462      	add	r2, ip
 8009862:	1a52      	subs	r2, r2, r1
 8009864:	fbb2 f1f7 	udiv	r1, r2, r7
 8009868:	fb07 2211 	mls	r2, r7, r1, r2
 800986c:	b280      	uxth	r0, r0
 800986e:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 8009872:	fb01 f20e 	mul.w	r2, r1, lr
 8009876:	4282      	cmp	r2, r0
 8009878:	d908      	bls.n	800988c <__udivmoddi4+0x280>
 800987a:	eb1c 0000 	adds.w	r0, ip, r0
 800987e:	f101 38ff 	add.w	r8, r1, #4294967295	; 0xffffffff
 8009882:	d216      	bcs.n	80098b2 <__udivmoddi4+0x2a6>
 8009884:	4282      	cmp	r2, r0
 8009886:	d914      	bls.n	80098b2 <__udivmoddi4+0x2a6>
 8009888:	3902      	subs	r1, #2
 800988a:	4460      	add	r0, ip
 800988c:	1a80      	subs	r0, r0, r2
 800988e:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8009892:	e73a      	b.n	800970a <__udivmoddi4+0xfe>
 8009894:	4631      	mov	r1, r6
 8009896:	4630      	mov	r0, r6
 8009898:	e70b      	b.n	80096b2 <__udivmoddi4+0xa6>
 800989a:	4671      	mov	r1, lr
 800989c:	e6e9      	b.n	8009672 <__udivmoddi4+0x66>
 800989e:	4610      	mov	r0, r2
 80098a0:	e6fe      	b.n	80096a0 <__udivmoddi4+0x94>
 80098a2:	454d      	cmp	r5, r9
 80098a4:	d2ab      	bcs.n	80097fe <__udivmoddi4+0x1f2>
 80098a6:	ebb9 0802 	subs.w	r8, r9, r2
 80098aa:	eb63 0e0c 	sbc.w	lr, r3, ip
 80098ae:	3801      	subs	r0, #1
 80098b0:	e7a5      	b.n	80097fe <__udivmoddi4+0x1f2>
 80098b2:	4641      	mov	r1, r8
 80098b4:	e7ea      	b.n	800988c <__udivmoddi4+0x280>
 80098b6:	4603      	mov	r3, r0
 80098b8:	e796      	b.n	80097e8 <__udivmoddi4+0x1dc>
 80098ba:	4645      	mov	r5, r8
 80098bc:	e7d1      	b.n	8009862 <__udivmoddi4+0x256>
 80098be:	46d0      	mov	r8, sl
 80098c0:	e77d      	b.n	80097be <__udivmoddi4+0x1b2>
 80098c2:	4464      	add	r4, ip
 80098c4:	3802      	subs	r0, #2
 80098c6:	e749      	b.n	800975c <__udivmoddi4+0x150>
 80098c8:	3d02      	subs	r5, #2
 80098ca:	4462      	add	r2, ip
 80098cc:	e731      	b.n	8009732 <__udivmoddi4+0x126>
 80098ce:	4608      	mov	r0, r1
 80098d0:	e70a      	b.n	80096e8 <__udivmoddi4+0xdc>
 80098d2:	4631      	mov	r1, r6
 80098d4:	e6ed      	b.n	80096b2 <__udivmoddi4+0xa6>
 80098d6:	bf00      	nop

080098d8 <RemoteConfig::HandleList()>:
 80098d8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80098dc:	6801      	ldr	r1, [r0, #0]
 80098de:	4604      	mov	r4, r0
 80098e0:	2012      	movs	r0, #18
 80098e2:	f04f 080c 	mov.w	r8, #12
 80098e6:	4a29      	ldr	r2, [pc, #164]	; (800998c <RemoteConfig::HandleList()+0xb4>)
 80098e8:	4b29      	ldr	r3, [pc, #164]	; (8009990 <RemoteConfig::HandleList()+0xb8>)
 80098ea:	fb00 2201 	mla	r2, r0, r1, r2
 80098ee:	6860      	ldr	r0, [r4, #4]
 80098f0:	4928      	ldr	r1, [pc, #160]	; (8009994 <RemoteConfig::HandleList()+0xbc>)
 80098f2:	681b      	ldr	r3, [r3, #0]
 80098f4:	fb08 1100 	mla	r1, r8, r0, r1
 80098f8:	4e27      	ldr	r6, [pc, #156]	; (8009998 <RemoteConfig::HandleList()+0xc0>)
 80098fa:	4828      	ldr	r0, [pc, #160]	; (800999c <RemoteConfig::HandleList()+0xc4>)
 80098fc:	695f      	ldr	r7, [r3, #20]
 80098fe:	6835      	ldr	r5, [r6, #0]
 8009900:	f890 9009 	ldrb.w	r9, [r0, #9]
 8009904:	b2fb      	uxtb	r3, r7
 8009906:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 800990a:	f3c7 4e07 	ubfx	lr, r7, #16, #8
 800990e:	f8d4 8008 	ldr.w	r8, [r4, #8]
 8009912:	b089      	sub	sp, #36	; 0x24
 8009914:	3507      	adds	r5, #7
 8009916:	0e3f      	lsrs	r7, r7, #24
 8009918:	f1b9 0f00 	cmp.w	r9, #0
 800991c:	d01d      	beq.n	800995a <RemoteConfig::HandleList()+0x82>
 800991e:	3009      	adds	r0, #9
 8009920:	e9cd 2103 	strd	r2, r1, [sp, #12]
 8009924:	e9cd 8005 	strd	r8, r0, [sp, #20]
 8009928:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 800992c:	4628      	mov	r0, r5
 800992e:	e9cd e701 	strd	lr, r7, [sp, #4]
 8009932:	4a1b      	ldr	r2, [pc, #108]	; (80099a0 <RemoteConfig::HandleList()+0xc8>)
 8009934:	f8cd c000 	str.w	ip, [sp]
 8009938:	f7ff fe40 	bl	80095bc <snprintf>
 800993c:	69e3      	ldr	r3, [r4, #28]
 800993e:	2b05      	cmp	r3, #5
 8009940:	d118      	bne.n	8009974 <RemoteConfig::HandleList()+0x9c>
 8009942:	f642 1305 	movw	r3, #10501	; 0x2905
 8009946:	9300      	str	r3, [sp, #0]
 8009948:	69a3      	ldr	r3, [r4, #24]
 800994a:	b282      	uxth	r2, r0
 800994c:	4629      	mov	r1, r5
 800994e:	7d20      	ldrb	r0, [r4, #20]
 8009950:	f005 fedc 	bl	800f70c <udp_send>
 8009954:	b009      	add	sp, #36	; 0x24
 8009956:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800995a:	e9cd 1804 	strd	r1, r8, [sp, #16]
 800995e:	e9cd 7202 	strd	r7, r2, [sp, #8]
 8009962:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 8009966:	4628      	mov	r0, r5
 8009968:	e9cd ce00 	strd	ip, lr, [sp]
 800996c:	4a0d      	ldr	r2, [pc, #52]	; (80099a4 <RemoteConfig::HandleList()+0xcc>)
 800996e:	f7ff fe25 	bl	80095bc <snprintf>
 8009972:	e7e3      	b.n	800993c <RemoteConfig::HandleList()+0x64>
 8009974:	2b06      	cmp	r3, #6
 8009976:	d1ed      	bne.n	8009954 <RemoteConfig::HandleList()+0x7c>
 8009978:	6833      	ldr	r3, [r6, #0]
 800997a:	799b      	ldrb	r3, [r3, #6]
 800997c:	2b2a      	cmp	r3, #42	; 0x2a
 800997e:	d1e9      	bne.n	8009954 <RemoteConfig::HandleList()+0x7c>
 8009980:	f642 1305 	movw	r3, #10501	; 0x2905
 8009984:	9300      	str	r3, [sp, #0]
 8009986:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800998a:	e7de      	b.n	800994a <RemoteConfig::HandleList()+0x72>
 800998c:	08014fd8 	stmdaeq	r1, {r3, r4, r6, r7, r8, r9, sl, fp, lr}
 8009990:	2001d348 	andcs	sp, r1, r8, asr #6
 8009994:	0801509e 	stmdaeq	r1, {r1, r2, r3, r4, r7, ip, lr}
 8009998:	200000ec 	andcs	r0, r0, ip, ror #1
 800999c:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 80099a0:	08014eed 	stmdaeq	r1, {r0, r2, r3, r5, r6, r7, r9, sl, fp, lr}
 80099a4:	08014f06 	stmdaeq	r1, {r1, r2, r8, r9, sl, fp, lr}

080099a8 <RemoteConfig::HandleDisplayGet()>:
 80099a8:	69c3      	ldr	r3, [r0, #28]
 80099aa:	2b08      	cmp	r3, #8
 80099ac:	d11b      	bne.n	80099e6 <RemoteConfig::HandleDisplayGet()+0x3e>
 80099ae:	4b0e      	ldr	r3, [pc, #56]	; (80099e8 <RemoteConfig::HandleDisplayGet()+0x40>)
 80099b0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80099b2:	681b      	ldr	r3, [r3, #0]
 80099b4:	4d0d      	ldr	r5, [pc, #52]	; (80099ec <RemoteConfig::HandleDisplayGet()+0x44>)
 80099b6:	7c19      	ldrb	r1, [r3, #16]
 80099b8:	4a0d      	ldr	r2, [pc, #52]	; (80099f0 <RemoteConfig::HandleDisplayGet()+0x48>)
 80099ba:	4b0e      	ldr	r3, [pc, #56]	; (80099f4 <RemoteConfig::HandleDisplayGet()+0x4c>)
 80099bc:	4604      	mov	r4, r0
 80099be:	2900      	cmp	r1, #0
 80099c0:	bf18      	it	ne
 80099c2:	4613      	movne	r3, r2
 80099c4:	6828      	ldr	r0, [r5, #0]
 80099c6:	f240 31ff 	movw	r1, #1023	; 0x3ff
 80099ca:	4a0b      	ldr	r2, [pc, #44]	; (80099f8 <RemoteConfig::HandleDisplayGet()+0x50>)
 80099cc:	f7ff fdf6 	bl	80095bc <snprintf>
 80099d0:	f642 1305 	movw	r3, #10501	; 0x2905
 80099d4:	9300      	str	r3, [sp, #0]
 80099d6:	b282      	uxth	r2, r0
 80099d8:	69a3      	ldr	r3, [r4, #24]
 80099da:	6829      	ldr	r1, [r5, #0]
 80099dc:	7d20      	ldrb	r0, [r4, #20]
 80099de:	f005 fe95 	bl	800f70c <udp_send>
 80099e2:	b003      	add	sp, #12
 80099e4:	bd30      	pop	{r4, r5, pc}
 80099e6:	4770      	bx	lr
 80099e8:	2001d920 	andcs	sp, r1, r0, lsr #18
 80099ec:	200000ec 	andcs	r0, r0, ip, ror #1
 80099f0:	08014f1f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r8, r9, sl, fp, lr}
 80099f4:	08014f1c 	stmdaeq	r1, {r2, r3, r4, r8, r9, sl, fp, lr}
 80099f8:	08014f23 	stmdaeq	r1, {r0, r1, r5, r8, r9, sl, fp, lr}

080099fc <RemoteConfig::HandleTftpGet()>:
 80099fc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80099fe:	4604      	mov	r4, r0
 8009a00:	f000 fd4a 	bl	800a498 <RemoteConfig::PlatformHandleTftpGet()>
 8009a04:	69e3      	ldr	r3, [r4, #28]
 8009a06:	2b05      	cmp	r3, #5
 8009a08:	d116      	bne.n	8009a38 <RemoteConfig::HandleTftpGet()+0x3c>
 8009a0a:	f894 1020 	ldrb.w	r1, [r4, #32]
 8009a0e:	4d0b      	ldr	r5, [pc, #44]	; (8009a3c <RemoteConfig::HandleTftpGet()+0x40>)
 8009a10:	4a0b      	ldr	r2, [pc, #44]	; (8009a40 <RemoteConfig::HandleTftpGet()+0x44>)
 8009a12:	4b0c      	ldr	r3, [pc, #48]	; (8009a44 <RemoteConfig::HandleTftpGet()+0x48>)
 8009a14:	6828      	ldr	r0, [r5, #0]
 8009a16:	2900      	cmp	r1, #0
 8009a18:	bf08      	it	eq
 8009a1a:	4613      	moveq	r3, r2
 8009a1c:	f240 31ff 	movw	r1, #1023	; 0x3ff
 8009a20:	4a09      	ldr	r2, [pc, #36]	; (8009a48 <RemoteConfig::HandleTftpGet()+0x4c>)
 8009a22:	f7ff fdcb 	bl	80095bc <snprintf>
 8009a26:	f642 1305 	movw	r3, #10501	; 0x2905
 8009a2a:	b282      	uxth	r2, r0
 8009a2c:	9300      	str	r3, [sp, #0]
 8009a2e:	6829      	ldr	r1, [r5, #0]
 8009a30:	69a3      	ldr	r3, [r4, #24]
 8009a32:	7d20      	ldrb	r0, [r4, #20]
 8009a34:	f005 fe6a 	bl	800f70c <udp_send>
 8009a38:	b003      	add	sp, #12
 8009a3a:	bd30      	pop	{r4, r5, pc}
 8009a3c:	200000ec 	andcs	r0, r0, ip, ror #1
 8009a40:	08014f1f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r8, r9, sl, fp, lr}
 8009a44:	08014f1c 	stmdaeq	r1, {r2, r3, r4, r8, r9, sl, fp, lr}
 8009a48:	08014f2f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r8, r9, sl, fp, lr}

08009a4c <RemoteConfig::HandleVersion()>:
 8009a4c:	69c3      	ldr	r3, [r0, #28]
 8009a4e:	2b08      	cmp	r3, #8
 8009a50:	d114      	bne.n	8009a7c <RemoteConfig::HandleVersion()+0x30>
 8009a52:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009a54:	4d0a      	ldr	r5, [pc, #40]	; (8009a80 <RemoteConfig::HandleVersion()+0x34>)
 8009a56:	4604      	mov	r4, r0
 8009a58:	f240 31ff 	movw	r1, #1023	; 0x3ff
 8009a5c:	4b09      	ldr	r3, [pc, #36]	; (8009a84 <RemoteConfig::HandleVersion()+0x38>)
 8009a5e:	4a0a      	ldr	r2, [pc, #40]	; (8009a88 <RemoteConfig::HandleVersion()+0x3c>)
 8009a60:	6828      	ldr	r0, [r5, #0]
 8009a62:	f7ff fdab 	bl	80095bc <snprintf>
 8009a66:	f642 1305 	movw	r3, #10501	; 0x2905
 8009a6a:	9300      	str	r3, [sp, #0]
 8009a6c:	b282      	uxth	r2, r0
 8009a6e:	69a3      	ldr	r3, [r4, #24]
 8009a70:	6829      	ldr	r1, [r5, #0]
 8009a72:	7d20      	ldrb	r0, [r4, #20]
 8009a74:	f005 fe4a 	bl	800f70c <udp_send>
 8009a78:	b003      	add	sp, #12
 8009a7a:	bd30      	pop	{r4, r5, pc}
 8009a7c:	4770      	bx	lr
 8009a7e:	bf00      	nop
 8009a80:	200000ec 	andcs	r0, r0, ip, ror #1
 8009a84:	2001d9c6 	andcs	sp, r1, r6, asr #19
 8009a88:	08014f38 	stmdaeq	r1, {r3, r4, r5, r8, r9, sl, fp, lr}

08009a8c <RemoteConfig::HandleUptime()>:
 8009a8c:	7bc3      	ldrb	r3, [r0, #15]
 8009a8e:	b1e3      	cbz	r3, 8009aca <RemoteConfig::HandleUptime()+0x3e>
 8009a90:	4b0e      	ldr	r3, [pc, #56]	; (8009acc <RemoteConfig::HandleUptime()+0x40>)
 8009a92:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009a94:	681a      	ldr	r2, [r3, #0]
 8009a96:	69c3      	ldr	r3, [r0, #28]
 8009a98:	4604      	mov	r4, r0
 8009a9a:	2b07      	cmp	r3, #7
 8009a9c:	d113      	bne.n	8009ac6 <RemoteConfig::HandleUptime()+0x3a>
 8009a9e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8009aa2:	4d0b      	ldr	r5, [pc, #44]	; (8009ad0 <RemoteConfig::HandleUptime()+0x44>)
 8009aa4:	fbb2 f3f3 	udiv	r3, r2, r3
 8009aa8:	f240 31ff 	movw	r1, #1023	; 0x3ff
 8009aac:	4a09      	ldr	r2, [pc, #36]	; (8009ad4 <RemoteConfig::HandleUptime()+0x48>)
 8009aae:	6828      	ldr	r0, [r5, #0]
 8009ab0:	f7ff fd84 	bl	80095bc <snprintf>
 8009ab4:	f642 1305 	movw	r3, #10501	; 0x2905
 8009ab8:	9300      	str	r3, [sp, #0]
 8009aba:	b282      	uxth	r2, r0
 8009abc:	69a3      	ldr	r3, [r4, #24]
 8009abe:	6829      	ldr	r1, [r5, #0]
 8009ac0:	7d20      	ldrb	r0, [r4, #20]
 8009ac2:	f005 fe23 	bl	800f70c <udp_send>
 8009ac6:	b003      	add	sp, #12
 8009ac8:	bd30      	pop	{r4, r5, pc}
 8009aca:	4770      	bx	lr
 8009acc:	2001da24 	andcs	sp, r1, r4, lsr #20
 8009ad0:	200000ec 	andcs	r0, r0, ip, ror #1
 8009ad4:	08014f43 	stmdaeq	r1, {r0, r1, r6, r8, r9, sl, fp, lr}

08009ad8 <Display::Status(Display7SegmentMessage)>:
 8009ad8:	7c43      	ldrb	r3, [r0, #17]
 8009ada:	b1bb      	cbz	r3, 8009b0c <Display::Status(Display7SegmentMessage)+0x34>
 8009adc:	b513      	push	{r0, r1, r4, lr}
 8009ade:	2312      	movs	r3, #18
 8009ae0:	43c9      	mvns	r1, r1
 8009ae2:	4604      	mov	r4, r0
 8009ae4:	f88d 3004 	strb.w	r3, [sp, #4]
 8009ae8:	7a00      	ldrb	r0, [r0, #8]
 8009aea:	f3c1 2307 	ubfx	r3, r1, #8, #8
 8009aee:	f88d 3005 	strb.w	r3, [sp, #5]
 8009af2:	f88d 1006 	strb.w	r1, [sp, #6]
 8009af6:	f009 ffe1 	bl	8013abc <gd32_i2c_set_address>
 8009afa:	68e0      	ldr	r0, [r4, #12]
 8009afc:	f009 ffd6 	bl	8013aac <gd32_i2c_set_baudrate>
 8009b00:	2103      	movs	r1, #3
 8009b02:	a801      	add	r0, sp, #4
 8009b04:	f009 ffe0 	bl	8013ac8 <gd32_i2c_write>
 8009b08:	b002      	add	sp, #8
 8009b0a:	bd10      	pop	{r4, pc}
 8009b0c:	4770      	bx	lr
	...

08009b10 <RemoteConfig::HandleDisplaySet()>:
 8009b10:	b508      	push	{r3, lr}
 8009b12:	69c3      	ldr	r3, [r0, #28]
 8009b14:	2b09      	cmp	r3, #9
 8009b16:	d10a      	bne.n	8009b2e <RemoteConfig::HandleDisplaySet()+0x1e>
 8009b18:	4b05      	ldr	r3, [pc, #20]	; (8009b30 <RemoteConfig::HandleDisplaySet()+0x20>)
 8009b1a:	681b      	ldr	r3, [r3, #0]
 8009b1c:	7a59      	ldrb	r1, [r3, #9]
 8009b1e:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
 8009b22:	4259      	negs	r1, r3
 8009b24:	4159      	adcs	r1, r3
 8009b26:	4b03      	ldr	r3, [pc, #12]	; (8009b34 <RemoteConfig::HandleDisplaySet()+0x24>)
 8009b28:	6818      	ldr	r0, [r3, #0]
 8009b2a:	f7fe fe8b 	bl	8008844 <Display::SetSleep(bool)>
 8009b2e:	bd08      	pop	{r3, pc}
 8009b30:	200000ec 	andcs	r0, r0, ip, ror #1
 8009b34:	2001d920 	andcs	sp, r1, r0, lsr #18

08009b38 <RemoteConfig::HandleTftpSet()>:
 8009b38:	69c3      	ldr	r3, [r0, #28]
 8009b3a:	2b06      	cmp	r3, #6
 8009b3c:	d127      	bne.n	8009b8e <RemoteConfig::HandleTftpSet()+0x56>
 8009b3e:	b570      	push	{r4, r5, r6, lr}
 8009b40:	4b13      	ldr	r3, [pc, #76]	; (8009b90 <RemoteConfig::HandleTftpSet()+0x58>)
 8009b42:	4e14      	ldr	r6, [pc, #80]	; (8009b94 <RemoteConfig::HandleTftpSet()+0x5c>)
 8009b44:	681b      	ldr	r3, [r3, #0]
 8009b46:	4604      	mov	r4, r0
 8009b48:	799b      	ldrb	r3, [r3, #6]
 8009b4a:	6835      	ldr	r5, [r6, #0]
 8009b4c:	2b30      	cmp	r3, #48	; 0x30
 8009b4e:	bf14      	ite	ne
 8009b50:	2301      	movne	r3, #1
 8009b52:	2300      	moveq	r3, #0
 8009b54:	f880 3020 	strb.w	r3, [r0, #32]
 8009b58:	d012      	beq.n	8009b80 <RemoteConfig::HandleTftpSet()+0x48>
 8009b5a:	4628      	mov	r0, r5
 8009b5c:	2100      	movs	r1, #0
 8009b5e:	f7fe fe71 	bl	8008844 <Display::SetSleep(bool)>
 8009b62:	6835      	ldr	r5, [r6, #0]
 8009b64:	490c      	ldr	r1, [pc, #48]	; (8009b98 <RemoteConfig::HandleTftpSet()+0x60>)
 8009b66:	4628      	mov	r0, r5
 8009b68:	f7fe fe0e 	bl	8008788 <Display::TextStatus(char const*)>
 8009b6c:	f244 0171 	movw	r1, #16497	; 0x4071
 8009b70:	4628      	mov	r0, r5
 8009b72:	f7ff ffb1 	bl	8009ad8 <Display::Status(Display7SegmentMessage)>
 8009b76:	4620      	mov	r0, r4
 8009b78:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009b7c:	f000 bc84 	b.w	800a488 <RemoteConfig::PlatformHandleTftpSet()>
 8009b80:	4906      	ldr	r1, [pc, #24]	; (8009b9c <RemoteConfig::HandleTftpSet()+0x64>)
 8009b82:	4628      	mov	r0, r5
 8009b84:	f7fe fe00 	bl	8008788 <Display::TextStatus(char const*)>
 8009b88:	f248 0171 	movw	r1, #32881	; 0x8071
 8009b8c:	e7f0      	b.n	8009b70 <RemoteConfig::HandleTftpSet()+0x38>
 8009b8e:	4770      	bx	lr
 8009b90:	200000ec 	andcs	r0, r0, ip, ror #1
 8009b94:	2001d920 	andcs	sp, r1, r0, lsr #18
 8009b98:	08014f50 	stmdaeq	r1, {r4, r6, r8, r9, sl, fp, lr}
 8009b9c:	08014f62 	stmdaeq	r1, {r1, r5, r6, r8, r9, sl, fp, lr}

08009ba0 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>:
 8009ba0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009ba4:	2500      	movs	r5, #0
 8009ba6:	461f      	mov	r7, r3
 8009ba8:	6083      	str	r3, [r0, #8]
 8009baa:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8009bae:	4690      	mov	r8, r2
 8009bb0:	4689      	mov	r9, r1
 8009bb2:	4e12      	ldr	r6, [pc, #72]	; (8009bfc <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x5c>)
 8009bb4:	e9c0 3505 	strd	r3, r5, [r0, #20]
 8009bb8:	f8df a044 	ldr.w	sl, [pc, #68]	; 8009c00 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x60>
 8009bbc:	4b11      	ldr	r3, [pc, #68]	; (8009c04 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x64>)
 8009bbe:	e9c0 1200 	strd	r1, r2, [r0]
 8009bc2:	4604      	mov	r4, r0
 8009bc4:	6018      	str	r0, [r3, #0]
 8009bc6:	4631      	mov	r1, r6
 8009bc8:	60c5      	str	r5, [r0, #12]
 8009bca:	8205      	strh	r5, [r0, #16]
 8009bcc:	61c5      	str	r5, [r0, #28]
 8009bce:	f880 5020 	strb.w	r5, [r0, #32]
 8009bd2:	f8da 0000 	ldr.w	r0, [sl]
 8009bd6:	f006 fa67 	bl	80100a8 <Network::MacAddressCopyTo(unsigned char*)>
 8009bda:	f642 1105 	movw	r1, #10501	; 0x2905
 8009bde:	f8da 0000 	ldr.w	r0, [sl]
 8009be2:	f886 9006 	strb.w	r9, [r6, #6]
 8009be6:	f886 8007 	strb.w	r8, [r6, #7]
 8009bea:	7237      	strb	r7, [r6, #8]
 8009bec:	7275      	strb	r5, [r6, #9]
 8009bee:	f006 fa55 	bl	801009c <Network::Begin(unsigned short)>
 8009bf2:	6160      	str	r0, [r4, #20]
 8009bf4:	4620      	mov	r0, r4
 8009bf6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009bfa:	bf00      	nop
 8009bfc:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 8009c00:	2001d348 	andcs	sp, r1, r8, asr #6
 8009c04:	20000114 	andcs	r0, r0, r4, lsl r1

08009c08 <RemoteConfig::GetStringNode() const>:
 8009c08:	2012      	movs	r0, #18
 8009c0a:	4b03      	ldr	r3, [pc, #12]	; (8009c18 <RemoteConfig::GetStringNode() const+0x10>)
 8009c0c:	799a      	ldrb	r2, [r3, #6]
 8009c0e:	4b03      	ldr	r3, [pc, #12]	; (8009c1c <RemoteConfig::GetStringNode() const+0x14>)
 8009c10:	fb00 3002 	mla	r0, r0, r2, r3
 8009c14:	4770      	bx	lr
 8009c16:	bf00      	nop
 8009c18:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 8009c1c:	08014fd8 	stmdaeq	r1, {r3, r4, r6, r7, r8, r9, sl, fp, lr}

08009c20 <RemoteConfig::GetStringOutput() const>:
 8009c20:	200c      	movs	r0, #12
 8009c22:	4b03      	ldr	r3, [pc, #12]	; (8009c30 <RemoteConfig::GetStringOutput() const+0x10>)
 8009c24:	79da      	ldrb	r2, [r3, #7]
 8009c26:	4b03      	ldr	r3, [pc, #12]	; (8009c34 <RemoteConfig::GetStringOutput() const+0x14>)
 8009c28:	fb00 3002 	mla	r0, r0, r2, r3
 8009c2c:	4770      	bx	lr
 8009c2e:	bf00      	nop
 8009c30:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 8009c34:	0801509e 	stmdaeq	r1, {r1, r2, r3, r4, r7, ip, lr}

08009c38 <RemoteConfig::SetDisable(bool)>:
 8009c38:	b538      	push	{r3, r4, r5, lr}
 8009c3a:	4604      	mov	r4, r0
 8009c3c:	7b03      	ldrb	r3, [r0, #12]
 8009c3e:	b161      	cbz	r1, 8009c5a <RemoteConfig::SetDisable(bool)+0x22>
 8009c40:	b953      	cbnz	r3, 8009c58 <RemoteConfig::SetDisable(bool)+0x20>
 8009c42:	4b0c      	ldr	r3, [pc, #48]	; (8009c74 <RemoteConfig::SetDisable(bool)+0x3c>)
 8009c44:	f642 1105 	movw	r1, #10501	; 0x2905
 8009c48:	6818      	ldr	r0, [r3, #0]
 8009c4a:	f006 fa2a 	bl	80100a2 <Network::End(unsigned short)>
 8009c4e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8009c52:	6163      	str	r3, [r4, #20]
 8009c54:	2301      	movs	r3, #1
 8009c56:	7323      	strb	r3, [r4, #12]
 8009c58:	bd38      	pop	{r3, r4, r5, pc}
 8009c5a:	2b00      	cmp	r3, #0
 8009c5c:	d0fc      	beq.n	8009c58 <RemoteConfig::SetDisable(bool)+0x20>
 8009c5e:	4b05      	ldr	r3, [pc, #20]	; (8009c74 <RemoteConfig::SetDisable(bool)+0x3c>)
 8009c60:	460d      	mov	r5, r1
 8009c62:	6818      	ldr	r0, [r3, #0]
 8009c64:	f642 1105 	movw	r1, #10501	; 0x2905
 8009c68:	f006 fa18 	bl	801009c <Network::Begin(unsigned short)>
 8009c6c:	7325      	strb	r5, [r4, #12]
 8009c6e:	6160      	str	r0, [r4, #20]
 8009c70:	e7f2      	b.n	8009c58 <RemoteConfig::SetDisable(bool)+0x20>
 8009c72:	bf00      	nop
 8009c74:	2001d348 	andcs	sp, r1, r8, asr #6

08009c78 <RemoteConfig::SetDisplayName(char const*)>:
 8009c78:	2217      	movs	r2, #23
 8009c7a:	4809      	ldr	r0, [pc, #36]	; (8009ca0 <RemoteConfig::SetDisplayName(char const*)+0x28>)
 8009c7c:	b508      	push	{r3, lr}
 8009c7e:	1e4b      	subs	r3, r1, #1
 8009c80:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8009c84:	b911      	cbnz	r1, 8009c8c <RemoteConfig::SetDisplayName(char const*)+0x14>
 8009c86:	f008 fe05 	bl	8012894 <memset>
 8009c8a:	e003      	b.n	8009c94 <RemoteConfig::SetDisplayName(char const*)+0x1c>
 8009c8c:	3a01      	subs	r2, #1
 8009c8e:	f800 1b01 	strb.w	r1, [r0], #1
 8009c92:	d1f5      	bne.n	8009c80 <RemoteConfig::SetDisplayName(char const*)+0x8>
 8009c94:	2200      	movs	r2, #0
 8009c96:	4b03      	ldr	r3, [pc, #12]	; (8009ca4 <RemoteConfig::SetDisplayName(char const*)+0x2c>)
 8009c98:	f883 2020 	strb.w	r2, [r3, #32]
 8009c9c:	bd08      	pop	{r3, pc}
 8009c9e:	bf00      	nop
 8009ca0:	200000f9 	strdcs	r0, [r0], -r9
 8009ca4:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>

08009ca8 <RemoteConfig::HandleGet(void*, unsigned int)>:
 8009ca8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009caa:	4604      	mov	r4, r0
 8009cac:	4616      	mov	r6, r2
 8009cae:	460d      	mov	r5, r1
 8009cb0:	4f28      	ldr	r7, [pc, #160]	; (8009d54 <RemoteConfig::HandleGet(void*, unsigned int)+0xac>)
 8009cb2:	b085      	sub	sp, #20
 8009cb4:	b9a9      	cbnz	r1, 8009ce2 <RemoteConfig::HandleGet(void*, unsigned int)+0x3a>
 8009cb6:	f44f 737f 	mov.w	r3, #1020	; 0x3fc
 8009cba:	6839      	ldr	r1, [r7, #0]
 8009cbc:	aa03      	add	r2, sp, #12
 8009cbe:	3105      	adds	r1, #5
 8009cc0:	9303      	str	r3, [sp, #12]
 8009cc2:	f000 fbb7 	bl	800a434 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 8009cc6:	1e03      	subs	r3, r0, #0
 8009cc8:	da1b      	bge.n	8009d02 <RemoteConfig::HandleGet(void*, unsigned int)+0x5a>
 8009cca:	f642 1305 	movw	r3, #10501	; 0x2905
 8009cce:	220b      	movs	r2, #11
 8009cd0:	9300      	str	r3, [sp, #0]
 8009cd2:	4921      	ldr	r1, [pc, #132]	; (8009d58 <RemoteConfig::HandleGet(void*, unsigned int)+0xb0>)
 8009cd4:	69a3      	ldr	r3, [r4, #24]
 8009cd6:	7d20      	ldrb	r0, [r4, #20]
 8009cd8:	f005 fd18 	bl	800f70c <udp_send>
 8009cdc:	200c      	movs	r0, #12
 8009cde:	b005      	add	sp, #20
 8009ce0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009ce2:	9203      	str	r2, [sp, #12]
 8009ce4:	aa03      	add	r2, sp, #12
 8009ce6:	6039      	str	r1, [r7, #0]
 8009ce8:	f000 fba4 	bl	800a434 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 8009cec:	1e03      	subs	r3, r0, #0
 8009cee:	da08      	bge.n	8009d02 <RemoteConfig::HandleGet(void*, unsigned int)+0x5a>
 8009cf0:	2e0b      	cmp	r6, #11
 8009cf2:	4632      	mov	r2, r6
 8009cf4:	4628      	mov	r0, r5
 8009cf6:	bf28      	it	cs
 8009cf8:	220b      	movcs	r2, #11
 8009cfa:	4917      	ldr	r1, [pc, #92]	; (8009d58 <RemoteConfig::HandleGet(void*, unsigned int)+0xb0>)
 8009cfc:	f008 fda8 	bl	8012850 <memcpy>
 8009d00:	e7ec      	b.n	8009cdc <RemoteConfig::HandleGet(void*, unsigned int)+0x34>
 8009d02:	221c      	movs	r2, #28
 8009d04:	4353      	muls	r3, r2
 8009d06:	4915      	ldr	r1, [pc, #84]	; (8009d5c <RemoteConfig::HandleGet(void*, unsigned int)+0xb4>)
 8009d08:	18ca      	adds	r2, r1, r3
 8009d0a:	6852      	ldr	r2, [r2, #4]
 8009d0c:	58cb      	ldr	r3, [r1, r3]
 8009d0e:	ea4f 0c62 	mov.w	ip, r2, asr #1
 8009d12:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8009d16:	07d2      	lsls	r2, r2, #31
 8009d18:	bf48      	it	mi
 8009d1a:	f854 200c 	ldrmi.w	r2, [r4, ip]
 8009d1e:	a903      	add	r1, sp, #12
 8009d20:	bf48      	it	mi
 8009d22:	58d3      	ldrmi	r3, [r2, r3]
 8009d24:	4798      	blx	r3
 8009d26:	b95d      	cbnz	r5, 8009d40 <RemoteConfig::HandleGet(void*, unsigned int)+0x98>
 8009d28:	f642 1305 	movw	r3, #10501	; 0x2905
 8009d2c:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8009d30:	9300      	str	r3, [sp, #0]
 8009d32:	6839      	ldr	r1, [r7, #0]
 8009d34:	69a3      	ldr	r3, [r4, #24]
 8009d36:	7d20      	ldrb	r0, [r4, #20]
 8009d38:	f005 fce8 	bl	800f70c <udp_send>
 8009d3c:	9803      	ldr	r0, [sp, #12]
 8009d3e:	e7ce      	b.n	8009cde <RemoteConfig::HandleGet(void*, unsigned int)+0x36>
 8009d40:	9a03      	ldr	r2, [sp, #12]
 8009d42:	4628      	mov	r0, r5
 8009d44:	42b2      	cmp	r2, r6
 8009d46:	bf28      	it	cs
 8009d48:	4632      	movcs	r2, r6
 8009d4a:	6839      	ldr	r1, [r7, #0]
 8009d4c:	f008 fd8b 	bl	8012866 <memmove>
 8009d50:	e7f4      	b.n	8009d3c <RemoteConfig::HandleGet(void*, unsigned int)+0x94>
 8009d52:	bf00      	nop
 8009d54:	200000ec 	andcs	r0, r0, ip, ror #1
 8009d58:	08014f75 	stmdaeq	r1, {r0, r2, r4, r5, r6, r8, r9, sl, fp, lr}
 8009d5c:	08015254 	stmdaeq	r1, {r2, r4, r6, r9, ip, lr}

08009d60 <RemoteConfig::HandleGetNoParams()>:
 8009d60:	2200      	movs	r2, #0
 8009d62:	4611      	mov	r1, r2
 8009d64:	f7ff bfa0 	b.w	8009ca8 <RemoteConfig::HandleGet(void*, unsigned int)>

08009d68 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)>:
 8009d68:	b510      	push	{r4, lr}
 8009d6a:	460c      	mov	r4, r1
 8009d6c:	4b07      	ldr	r3, [pc, #28]	; (8009d8c <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x24>)
 8009d6e:	b08a      	sub	sp, #40	; 0x28
 8009d70:	6819      	ldr	r1, [r3, #0]
 8009d72:	a801      	add	r0, sp, #4
 8009d74:	f000 f9ba 	bl	800a0ec <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 8009d78:	4905      	ldr	r1, [pc, #20]	; (8009d90 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x28>)
 8009d7a:	4623      	mov	r3, r4
 8009d7c:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8009d80:	6809      	ldr	r1, [r1, #0]
 8009d82:	a801      	add	r0, sp, #4
 8009d84:	f000 fad6 	bl	800a334 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>
 8009d88:	b00a      	add	sp, #40	; 0x28
 8009d8a:	bd10      	pop	{r4, pc}
 8009d8c:	20015a58 	andcs	r5, r1, r8, asr sl
 8009d90:	200000ec 	andcs	r0, r0, ip, ror #1

08009d94 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)>:
 8009d94:	b510      	push	{r4, lr}
 8009d96:	460c      	mov	r4, r1
 8009d98:	4b07      	ldr	r3, [pc, #28]	; (8009db8 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x24>)
 8009d9a:	b09a      	sub	sp, #104	; 0x68
 8009d9c:	6819      	ldr	r1, [r3, #0]
 8009d9e:	a801      	add	r0, sp, #4
 8009da0:	f006 fc92 	bl	80106c8 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 8009da4:	4905      	ldr	r1, [pc, #20]	; (8009dbc <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x28>)
 8009da6:	4623      	mov	r3, r4
 8009da8:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8009dac:	6809      	ldr	r1, [r1, #0]
 8009dae:	a801      	add	r0, sp, #4
 8009db0:	f006 fe60 	bl	8010a74 <NetworkParams::Save(char*, unsigned int, unsigned int&)>
 8009db4:	b01a      	add	sp, #104	; 0x68
 8009db6:	bd10      	pop	{r4, pc}
 8009db8:	20015a50 	andcs	r5, r1, r0, asr sl
 8009dbc:	200000ec 	andcs	r0, r0, ip, ror #1

08009dc0 <RemoteConfig::HandleGetDevicesTxt(unsigned int&)>:
 8009dc0:	b510      	push	{r4, lr}
 8009dc2:	460c      	mov	r4, r1
 8009dc4:	4b07      	ldr	r3, [pc, #28]	; (8009de4 <RemoteConfig::HandleGetDevicesTxt(unsigned int&)+0x24>)
 8009dc6:	b08c      	sub	sp, #48	; 0x30
 8009dc8:	6819      	ldr	r1, [r3, #0]
 8009dca:	a801      	add	r0, sp, #4
 8009dcc:	f002 fe0a 	bl	800c9e4 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)>
 8009dd0:	4905      	ldr	r1, [pc, #20]	; (8009de8 <RemoteConfig::HandleGetDevicesTxt(unsigned int&)+0x28>)
 8009dd2:	4623      	mov	r3, r4
 8009dd4:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8009dd8:	6809      	ldr	r1, [r1, #0]
 8009dda:	a801      	add	r0, sp, #4
 8009ddc:	f003 f926 	bl	800d02c <PixelDmxParams::Save(char*, unsigned int, unsigned int&)>
 8009de0:	b00c      	add	sp, #48	; 0x30
 8009de2:	bd10      	pop	{r4, pc}
 8009de4:	20015a5c 	andcs	r5, r1, ip, asr sl
 8009de8:	200000ec 	andcs	r0, r0, ip, ror #1

08009dec <RemoteConfig::HandleGetDisplayTxt(unsigned int&)>:
 8009dec:	b510      	push	{r4, lr}
 8009dee:	460c      	mov	r4, r1
 8009df0:	4b07      	ldr	r3, [pc, #28]	; (8009e10 <RemoteConfig::HandleGetDisplayTxt(unsigned int&)+0x24>)
 8009df2:	b08a      	sub	sp, #40	; 0x28
 8009df4:	6819      	ldr	r1, [r3, #0]
 8009df6:	4668      	mov	r0, sp
 8009df8:	f007 fbd2 	bl	80115a0 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 8009dfc:	4905      	ldr	r1, [pc, #20]	; (8009e14 <RemoteConfig::HandleGetDisplayTxt(unsigned int&)+0x28>)
 8009dfe:	4623      	mov	r3, r4
 8009e00:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8009e04:	4668      	mov	r0, sp
 8009e06:	6809      	ldr	r1, [r1, #0]
 8009e08:	f007 fd02 	bl	8011810 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)>
 8009e0c:	b00a      	add	sp, #40	; 0x28
 8009e0e:	bd10      	pop	{r4, pc}
 8009e10:	20015a4c 	andcs	r5, r1, ip, asr #20
 8009e14:	200000ec 	andcs	r0, r0, ip, ror #1

08009e18 <RemoteConfig::HandleSet(void*, unsigned int)>:
 8009e18:	b530      	push	{r4, r5, lr}
 8009e1a:	b085      	sub	sp, #20
 8009e1c:	4604      	mov	r4, r0
 8009e1e:	9201      	str	r2, [sp, #4]
 8009e20:	b9d1      	cbnz	r1, 8009e58 <RemoteConfig::HandleSet(void*, unsigned int)+0x40>
 8009e22:	f240 33ff 	movw	r3, #1023	; 0x3ff
 8009e26:	9303      	str	r3, [sp, #12]
 8009e28:	4b19      	ldr	r3, [pc, #100]	; (8009e90 <RemoteConfig::HandleSet(void*, unsigned int)+0x78>)
 8009e2a:	aa03      	add	r2, sp, #12
 8009e2c:	6819      	ldr	r1, [r3, #0]
 8009e2e:	3101      	adds	r1, #1
 8009e30:	f000 fb00 	bl	800a434 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 8009e34:	2800      	cmp	r0, #0
 8009e36:	db0d      	blt.n	8009e54 <RemoteConfig::HandleSet(void*, unsigned int)+0x3c>
 8009e38:	221c      	movs	r2, #28
 8009e3a:	4b16      	ldr	r3, [pc, #88]	; (8009e94 <RemoteConfig::HandleSet(void*, unsigned int)+0x7c>)
 8009e3c:	fb02 3300 	mla	r3, r2, r0, r3
 8009e40:	68da      	ldr	r2, [r3, #12]
 8009e42:	689b      	ldr	r3, [r3, #8]
 8009e44:	1051      	asrs	r1, r2, #1
 8009e46:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8009e4a:	07d2      	lsls	r2, r2, #31
 8009e4c:	bf44      	itt	mi
 8009e4e:	5862      	ldrmi	r2, [r4, r1]
 8009e50:	58d3      	ldrmi	r3, [r2, r3]
 8009e52:	4798      	blx	r3
 8009e54:	b005      	add	sp, #20
 8009e56:	bd30      	pop	{r4, r5, pc}
 8009e58:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8009e5c:	d8fa      	bhi.n	8009e54 <RemoteConfig::HandleSet(void*, unsigned int)+0x3c>
 8009e5e:	4b0e      	ldr	r3, [pc, #56]	; (8009e98 <RemoteConfig::HandleSet(void*, unsigned int)+0x80>)
 8009e60:	460d      	mov	r5, r1
 8009e62:	781b      	ldrb	r3, [r3, #0]
 8009e64:	07d9      	lsls	r1, r3, #31
 8009e66:	d50b      	bpl.n	8009e80 <RemoteConfig::HandleSet(void*, unsigned int)+0x68>
 8009e68:	782b      	ldrb	r3, [r5, #0]
 8009e6a:	2b7b      	cmp	r3, #123	; 0x7b
 8009e6c:	d108      	bne.n	8009e80 <RemoteConfig::HandleSet(void*, unsigned int)+0x68>
 8009e6e:	1e51      	subs	r1, r2, #1
 8009e70:	4628      	mov	r0, r5
 8009e72:	2200      	movs	r2, #0
 8009e74:	b289      	uxth	r1, r1
 8009e76:	f007 fd37 	bl	80118e8 <properties::convert_json_file(char*, unsigned short, bool)>
 8009e7a:	1e02      	subs	r2, r0, #0
 8009e7c:	ddea      	ble.n	8009e54 <RemoteConfig::HandleSet(void*, unsigned int)+0x3c>
 8009e7e:	b292      	uxth	r2, r2
 8009e80:	4b03      	ldr	r3, [pc, #12]	; (8009e90 <RemoteConfig::HandleSet(void*, unsigned int)+0x78>)
 8009e82:	61e2      	str	r2, [r4, #28]
 8009e84:	4620      	mov	r0, r4
 8009e86:	601d      	str	r5, [r3, #0]
 8009e88:	aa01      	add	r2, sp, #4
 8009e8a:	1c69      	adds	r1, r5, #1
 8009e8c:	e7d0      	b.n	8009e30 <RemoteConfig::HandleSet(void*, unsigned int)+0x18>
 8009e8e:	bf00      	nop
 8009e90:	200000ec 	andcs	r0, r0, ip, ror #1
 8009e94:	08015254 	stmdaeq	r1, {r2, r4, r6, r9, ip, lr}
 8009e98:	2001d91c 	andcs	sp, r1, ip, lsl r9

08009e9c <RemoteConfig::Run()>:
 8009e9c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8009ea0:	7b05      	ldrb	r5, [r0, #12]
 8009ea2:	2d00      	cmp	r5, #0
 8009ea4:	d156      	bne.n	8009f54 <RemoteConfig::Run()+0xb8>
 8009ea6:	4e45      	ldr	r6, [pc, #276]	; (8009fbc <RemoteConfig::Run()+0x120>)
 8009ea8:	4604      	mov	r4, r0
 8009eaa:	f100 0218 	add.w	r2, r0, #24
 8009eae:	4631      	mov	r1, r6
 8009eb0:	7d00      	ldrb	r0, [r0, #20]
 8009eb2:	f10d 030e 	add.w	r3, sp, #14
 8009eb6:	f005 fc03 	bl	800f6c0 <udp_recv2>
 8009eba:	2803      	cmp	r0, #3
 8009ebc:	61e0      	str	r0, [r4, #28]
 8009ebe:	d949      	bls.n	8009f54 <RemoteConfig::Run()+0xb8>
 8009ec0:	6831      	ldr	r1, [r6, #0]
 8009ec2:	1e43      	subs	r3, r0, #1
 8009ec4:	5cca      	ldrb	r2, [r1, r3]
 8009ec6:	2a0a      	cmp	r2, #10
 8009ec8:	bf18      	it	ne
 8009eca:	4603      	movne	r3, r0
 8009ecc:	61e3      	str	r3, [r4, #28]
 8009ece:	7808      	ldrb	r0, [r1, #0]
 8009ed0:	283f      	cmp	r0, #63	; 0x3f
 8009ed2:	d137      	bne.n	8009f44 <RemoteConfig::Run()+0xa8>
 8009ed4:	f8df c0e8 	ldr.w	ip, [pc, #232]	; 8009fc0 <RemoteConfig::Run()+0x124>
 8009ed8:	462a      	mov	r2, r5
 8009eda:	4667      	mov	r7, ip
 8009edc:	3b01      	subs	r3, #1
 8009ede:	61e3      	str	r3, [r4, #28]
 8009ee0:	f89c 500e 	ldrb.w	r5, [ip, #14]
 8009ee4:	f8bc 000c 	ldrh.w	r0, [ip, #12]
 8009ee8:	b16d      	cbz	r5, 8009f06 <RemoteConfig::Run()+0x6a>
 8009eea:	4283      	cmp	r3, r0
 8009eec:	d80d      	bhi.n	8009f0a <RemoteConfig::Run()+0x6e>
 8009eee:	3201      	adds	r2, #1
 8009ef0:	2a09      	cmp	r2, #9
 8009ef2:	f10c 0c10 	add.w	ip, ip, #16
 8009ef6:	d1f3      	bne.n	8009ee0 <RemoteConfig::Run()+0x44>
 8009ef8:	f642 1305 	movw	r3, #10501	; 0x2905
 8009efc:	9300      	str	r3, [sp, #0]
 8009efe:	2208      	movs	r2, #8
 8009f00:	69a3      	ldr	r3, [r4, #24]
 8009f02:	4930      	ldr	r1, [pc, #192]	; (8009fc4 <RemoteConfig::Run()+0x128>)
 8009f04:	e04e      	b.n	8009fa4 <RemoteConfig::Run()+0x108>
 8009f06:	4283      	cmp	r3, r0
 8009f08:	d1f1      	bne.n	8009eee <RemoteConfig::Run()+0x52>
 8009f0a:	460e      	mov	r6, r1
 8009f0c:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8009f10:	4408      	add	r0, r1
 8009f12:	3d01      	subs	r5, #1
 8009f14:	4286      	cmp	r6, r0
 8009f16:	d10b      	bne.n	8009f30 <RemoteConfig::Run()+0x94>
 8009f18:	0113      	lsls	r3, r2, #4
 8009f1a:	eb07 1202 	add.w	r2, r7, r2, lsl #4
 8009f1e:	6852      	ldr	r2, [r2, #4]
 8009f20:	58fb      	ldr	r3, [r7, r3]
 8009f22:	1051      	asrs	r1, r2, #1
 8009f24:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8009f28:	07d2      	lsls	r2, r2, #31
 8009f2a:	d408      	bmi.n	8009f3e <RemoteConfig::Run()+0xa2>
 8009f2c:	4798      	blx	r3
 8009f2e:	e011      	b.n	8009f54 <RemoteConfig::Run()+0xb8>
 8009f30:	f816 8f01 	ldrb.w	r8, [r6, #1]!
 8009f34:	f815 ef01 	ldrb.w	lr, [r5, #1]!
 8009f38:	45f0      	cmp	r8, lr
 8009f3a:	d0eb      	beq.n	8009f14 <RemoteConfig::Run()+0x78>
 8009f3c:	e7d7      	b.n	8009eee <RemoteConfig::Run()+0x52>
 8009f3e:	5862      	ldr	r2, [r4, r1]
 8009f40:	58d3      	ldr	r3, [r2, r3]
 8009f42:	e7f3      	b.n	8009f2c <RemoteConfig::Run()+0x90>
 8009f44:	7b62      	ldrb	r2, [r4, #13]
 8009f46:	b92a      	cbnz	r2, 8009f54 <RemoteConfig::Run()+0xb8>
 8009f48:	2823      	cmp	r0, #35	; 0x23
 8009f4a:	d106      	bne.n	8009f5a <RemoteConfig::Run()+0xbe>
 8009f4c:	4611      	mov	r1, r2
 8009f4e:	4620      	mov	r0, r4
 8009f50:	f7ff ff62 	bl	8009e18 <RemoteConfig::HandleSet(void*, unsigned int)>
 8009f54:	b004      	add	sp, #16
 8009f56:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009f5a:	2821      	cmp	r0, #33	; 0x21
 8009f5c:	d1fa      	bne.n	8009f54 <RemoteConfig::Run()+0xb8>
 8009f5e:	3b01      	subs	r3, #1
 8009f60:	2b05      	cmp	r3, #5
 8009f62:	61e3      	str	r3, [r4, #28]
 8009f64:	d918      	bls.n	8009f98 <RemoteConfig::Run()+0xfc>
 8009f66:	460a      	mov	r2, r1
 8009f68:	4608      	mov	r0, r1
 8009f6a:	4d17      	ldr	r5, [pc, #92]	; (8009fc8 <RemoteConfig::Run()+0x12c>)
 8009f6c:	f101 0c05 	add.w	ip, r1, #5
 8009f70:	4560      	cmp	r0, ip
 8009f72:	d01b      	beq.n	8009fac <RemoteConfig::Run()+0x110>
 8009f74:	f815 6b01 	ldrb.w	r6, [r5], #1
 8009f78:	f810 7f01 	ldrb.w	r7, [r0, #1]!
 8009f7c:	42b7      	cmp	r7, r6
 8009f7e:	d0f7      	beq.n	8009f70 <RemoteConfig::Run()+0xd4>
 8009f80:	2b08      	cmp	r3, #8
 8009f82:	d909      	bls.n	8009f98 <RemoteConfig::Run()+0xfc>
 8009f84:	4b11      	ldr	r3, [pc, #68]	; (8009fcc <RemoteConfig::Run()+0x130>)
 8009f86:	3108      	adds	r1, #8
 8009f88:	428a      	cmp	r2, r1
 8009f8a:	d015      	beq.n	8009fb8 <RemoteConfig::Run()+0x11c>
 8009f8c:	f813 0b01 	ldrb.w	r0, [r3], #1
 8009f90:	f812 5f01 	ldrb.w	r5, [r2, #1]!
 8009f94:	4285      	cmp	r5, r0
 8009f96:	d0f7      	beq.n	8009f88 <RemoteConfig::Run()+0xec>
 8009f98:	f642 1305 	movw	r3, #10501	; 0x2905
 8009f9c:	2208      	movs	r2, #8
 8009f9e:	9300      	str	r3, [sp, #0]
 8009fa0:	69a3      	ldr	r3, [r4, #24]
 8009fa2:	490b      	ldr	r1, [pc, #44]	; (8009fd0 <RemoteConfig::Run()+0x134>)
 8009fa4:	7d20      	ldrb	r0, [r4, #20]
 8009fa6:	f005 fbb1 	bl	800f70c <udp_send>
 8009faa:	e7d3      	b.n	8009f54 <RemoteConfig::Run()+0xb8>
 8009fac:	2300      	movs	r3, #0
 8009fae:	4a09      	ldr	r2, [pc, #36]	; (8009fd4 <RemoteConfig::Run()+0x138>)
 8009fb0:	011b      	lsls	r3, r3, #4
 8009fb2:	4620      	mov	r0, r4
 8009fb4:	58d3      	ldr	r3, [r2, r3]
 8009fb6:	e7b9      	b.n	8009f2c <RemoteConfig::Run()+0x90>
 8009fb8:	2301      	movs	r3, #1
 8009fba:	e7f8      	b.n	8009fae <RemoteConfig::Run()+0x112>
 8009fbc:	200000ec 	andcs	r0, r0, ip, ror #1
 8009fc0:	08015130 	stmdaeq	r1, {r4, r5, r8, ip, lr}
 8009fc4:	08014f99 	stmdaeq	r1, {r0, r3, r4, r7, r8, r9, sl, fp, lr}
 8009fc8:	08014f81 	stmdaeq	r1, {r0, r7, r8, r9, sl, fp, lr}
 8009fcc:	08014f87 	stmdaeq	r1, {r0, r1, r2, r7, r8, r9, sl, fp, lr}
 8009fd0:	08014f90 	stmdaeq	r1, {r4, r7, r8, r9, sl, fp, lr}
 8009fd4:	080151c0 	stmdaeq	r1, {r6, r7, r8, ip, lr}

08009fd8 <RemoteConfig::HandleSetRconfig()>:
 8009fd8:	b510      	push	{r4, lr}
 8009fda:	4604      	mov	r4, r0
 8009fdc:	4b08      	ldr	r3, [pc, #32]	; (800a000 <RemoteConfig::HandleSetRconfig()+0x28>)
 8009fde:	b08a      	sub	sp, #40	; 0x28
 8009fe0:	6819      	ldr	r1, [r3, #0]
 8009fe2:	a801      	add	r0, sp, #4
 8009fe4:	f000 f882 	bl	800a0ec <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 8009fe8:	4b06      	ldr	r3, [pc, #24]	; (800a004 <RemoteConfig::HandleSetRconfig()+0x2c>)
 8009fea:	69e2      	ldr	r2, [r4, #28]
 8009fec:	6819      	ldr	r1, [r3, #0]
 8009fee:	a801      	add	r0, sp, #4
 8009ff0:	f000 f892 	bl	800a118 <RemoteConfigParams::Load(char const*, unsigned int)>
 8009ff4:	4621      	mov	r1, r4
 8009ff6:	a801      	add	r0, sp, #4
 8009ff8:	f000 f9a9 	bl	800a34e <RemoteConfigParams::Set(RemoteConfig*)>
 8009ffc:	b00a      	add	sp, #40	; 0x28
 8009ffe:	bd10      	pop	{r4, pc}
 800a000:	20015a58 	andcs	r5, r1, r8, asr sl
 800a004:	200000ec 	andcs	r0, r0, ip, ror #1

0800a008 <RemoteConfig::HandleSetNetworkTxt()>:
 800a008:	b510      	push	{r4, lr}
 800a00a:	4604      	mov	r4, r0
 800a00c:	4b06      	ldr	r3, [pc, #24]	; (800a028 <RemoteConfig::HandleSetNetworkTxt()+0x20>)
 800a00e:	b09a      	sub	sp, #104	; 0x68
 800a010:	6819      	ldr	r1, [r3, #0]
 800a012:	a801      	add	r0, sp, #4
 800a014:	f006 fb58 	bl	80106c8 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 800a018:	4b04      	ldr	r3, [pc, #16]	; (800a02c <RemoteConfig::HandleSetNetworkTxt()+0x24>)
 800a01a:	69e2      	ldr	r2, [r4, #28]
 800a01c:	6819      	ldr	r1, [r3, #0]
 800a01e:	a801      	add	r0, sp, #4
 800a020:	f006 fb6a 	bl	80106f8 <NetworkParams::Load(char const*, unsigned int)>
 800a024:	b01a      	add	sp, #104	; 0x68
 800a026:	bd10      	pop	{r4, pc}
 800a028:	20015a50 	andcs	r5, r1, r0, asr sl
 800a02c:	200000ec 	andcs	r0, r0, ip, ror #1

0800a030 <RemoteConfig::HandleSetDevicesTxt()>:
 800a030:	b510      	push	{r4, lr}
 800a032:	4604      	mov	r4, r0
 800a034:	4b06      	ldr	r3, [pc, #24]	; (800a050 <RemoteConfig::HandleSetDevicesTxt()+0x20>)
 800a036:	b08c      	sub	sp, #48	; 0x30
 800a038:	6819      	ldr	r1, [r3, #0]
 800a03a:	a801      	add	r0, sp, #4
 800a03c:	f002 fcd2 	bl	800c9e4 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)>
 800a040:	4b04      	ldr	r3, [pc, #16]	; (800a054 <RemoteConfig::HandleSetDevicesTxt()+0x24>)
 800a042:	69e2      	ldr	r2, [r4, #28]
 800a044:	6819      	ldr	r1, [r3, #0]
 800a046:	a801      	add	r0, sp, #4
 800a048:	f002 fcfa 	bl	800ca40 <PixelDmxParams::Load(char const*, unsigned int)>
 800a04c:	b00c      	add	sp, #48	; 0x30
 800a04e:	bd10      	pop	{r4, pc}
 800a050:	20015a5c 	andcs	r5, r1, ip, asr sl
 800a054:	200000ec 	andcs	r0, r0, ip, ror #1

0800a058 <RemoteConfig::HandleSetDisplayTxt()>:
 800a058:	b510      	push	{r4, lr}
 800a05a:	4604      	mov	r4, r0
 800a05c:	4b06      	ldr	r3, [pc, #24]	; (800a078 <RemoteConfig::HandleSetDisplayTxt()+0x20>)
 800a05e:	b08a      	sub	sp, #40	; 0x28
 800a060:	6819      	ldr	r1, [r3, #0]
 800a062:	4668      	mov	r0, sp
 800a064:	f007 fa9c 	bl	80115a0 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 800a068:	4b04      	ldr	r3, [pc, #16]	; (800a07c <RemoteConfig::HandleSetDisplayTxt()+0x24>)
 800a06a:	4668      	mov	r0, sp
 800a06c:	69e2      	ldr	r2, [r4, #28]
 800a06e:	6819      	ldr	r1, [r3, #0]
 800a070:	f007 fab0 	bl	80115d4 <DisplayUdfParams::Load(char const*, unsigned int)>
 800a074:	b00a      	add	sp, #40	; 0x28
 800a076:	bd10      	pop	{r4, pc}
 800a078:	20015a4c 	andcs	r5, r1, ip, asr #20
 800a07c:	200000ec 	andcs	r0, r0, ip, ror #1

0800a080 <RemoteConfig::HandleFactory()>:
 800a080:	b538      	push	{r3, r4, r5, lr}
 800a082:	2400      	movs	r4, #0
 800a084:	4d04      	ldr	r5, [pc, #16]	; (800a098 <RemoteConfig::HandleFactory()+0x18>)
 800a086:	4621      	mov	r1, r4
 800a088:	6828      	ldr	r0, [r5, #0]
 800a08a:	3401      	adds	r4, #1
 800a08c:	f004 fb72 	bl	800e774 <SpiFlashStore::ResetSetList(spiflashstore::Store)>
 800a090:	2c1c      	cmp	r4, #28
 800a092:	d1f8      	bne.n	800a086 <RemoteConfig::HandleFactory()+0x6>
 800a094:	bd38      	pop	{r3, r4, r5, pc}
 800a096:	bf00      	nop
 800a098:	20015a44 	andcs	r5, r1, r4, asr #20

0800a09c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>:
 800a09c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a09e:	460b      	mov	r3, r1
 800a0a0:	8885      	ldrh	r5, [r0, #4]
 800a0a2:	88c1      	ldrh	r1, [r0, #6]
 800a0a4:	42a9      	cmp	r1, r5
 800a0a6:	d214      	bcs.n	800a0d2 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x36>
 800a0a8:	4604      	mov	r4, r0
 800a0aa:	6800      	ldr	r0, [r0, #0]
 800a0ac:	1a6d      	subs	r5, r5, r1
 800a0ae:	4408      	add	r0, r1
 800a0b0:	7a21      	ldrb	r1, [r4, #8]
 800a0b2:	b91a      	cbnz	r2, 800a0bc <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x20>
 800a0b4:	b919      	cbnz	r1, 800a0be <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x22>
 800a0b6:	4a0a      	ldr	r2, [pc, #40]	; (800a0e0 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x44>)
 800a0b8:	9100      	str	r1, [sp, #0]
 800a0ba:	e002      	b.n	800a0c2 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 800a0bc:	b159      	cbz	r1, 800a0d6 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x3a>
 800a0be:	9200      	str	r2, [sp, #0]
 800a0c0:	4a08      	ldr	r2, [pc, #32]	; (800a0e4 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x48>)
 800a0c2:	4629      	mov	r1, r5
 800a0c4:	f7ff fa7a 	bl	80095bc <snprintf>
 800a0c8:	4285      	cmp	r5, r0
 800a0ca:	bfa2      	ittt	ge
 800a0cc:	88e3      	ldrhge	r3, [r4, #6]
 800a0ce:	181b      	addge	r3, r3, r0
 800a0d0:	80e3      	strhge	r3, [r4, #6]
 800a0d2:	b003      	add	sp, #12
 800a0d4:	bd30      	pop	{r4, r5, pc}
 800a0d6:	2201      	movs	r2, #1
 800a0d8:	9200      	str	r2, [sp, #0]
 800a0da:	4a03      	ldr	r2, [pc, #12]	; (800a0e8 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x4c>)
 800a0dc:	e7f1      	b.n	800a0c2 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 800a0de:	bf00      	nop
 800a0e0:	080151e9 	stmdaeq	r1, {r0, r3, r5, r6, r7, r8, ip, lr}
 800a0e4:	080151e0 	stmdaeq	r1, {r5, r6, r7, r8, ip, lr}
 800a0e8:	080151ea 	stmdaeq	r1, {r1, r3, r5, r6, r7, r8, ip, lr}

0800a0ec <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>:
 800a0ec:	b510      	push	{r4, lr}
 800a0ee:	4604      	mov	r4, r0
 800a0f0:	2220      	movs	r2, #32
 800a0f2:	f840 1b04 	str.w	r1, [r0], #4
 800a0f6:	2100      	movs	r1, #0
 800a0f8:	f008 fbcc 	bl	8012894 <memset>
 800a0fc:	4620      	mov	r0, r4
 800a0fe:	bd10      	pop	{r4, pc}

0800a100 <RemoteConfigParams::Load()>:
 800a100:	b508      	push	{r3, lr}
 800a102:	2300      	movs	r3, #0
 800a104:	4601      	mov	r1, r0
 800a106:	6043      	str	r3, [r0, #4]
 800a108:	6800      	ldr	r0, [r0, #0]
 800a10a:	b120      	cbz	r0, 800a116 <RemoteConfigParams::Load()+0x16>
 800a10c:	6803      	ldr	r3, [r0, #0]
 800a10e:	3104      	adds	r1, #4
 800a110:	68db      	ldr	r3, [r3, #12]
 800a112:	4798      	blx	r3
 800a114:	2001      	movs	r0, #1
 800a116:	bd08      	pop	{r3, pc}

0800a118 <RemoteConfigParams::Load(char const*, unsigned int)>:
 800a118:	2300      	movs	r3, #0
 800a11a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a11c:	460d      	mov	r5, r1
 800a11e:	4616      	mov	r6, r2
 800a120:	4604      	mov	r4, r0
 800a122:	6043      	str	r3, [r0, #4]
 800a124:	4602      	mov	r2, r0
 800a126:	490a      	ldr	r1, [pc, #40]	; (800a150 <RemoteConfigParams::Load(char const*, unsigned int)+0x38>)
 800a128:	4668      	mov	r0, sp
 800a12a:	f007 fd2f 	bl	8011b8c <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800a12e:	4632      	mov	r2, r6
 800a130:	4629      	mov	r1, r5
 800a132:	4668      	mov	r0, sp
 800a134:	f007 fd2e 	bl	8011b94 <ReadConfigFile::Read(char const*, unsigned int)>
 800a138:	4621      	mov	r1, r4
 800a13a:	f851 0b04 	ldr.w	r0, [r1], #4
 800a13e:	6803      	ldr	r3, [r0, #0]
 800a140:	689b      	ldr	r3, [r3, #8]
 800a142:	4798      	blx	r3
 800a144:	4668      	mov	r0, sp
 800a146:	f007 fd24 	bl	8011b92 <ReadConfigFile::~ReadConfigFile()>
 800a14a:	b002      	add	sp, #8
 800a14c:	bd70      	pop	{r4, r5, r6, pc}
 800a14e:	bf00      	nop
 800a150:	0800a211 	stmdaeq	r0, {r0, r4, r9, sp, pc}

0800a154 <RemoteConfigParams::SetBool(unsigned char, unsigned int)>:
 800a154:	6843      	ldr	r3, [r0, #4]
 800a156:	b111      	cbz	r1, 800a15e <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0xa>
 800a158:	4313      	orrs	r3, r2
 800a15a:	6043      	str	r3, [r0, #4]
 800a15c:	4770      	bx	lr
 800a15e:	ea23 0302 	bic.w	r3, r3, r2
 800a162:	e7fa      	b.n	800a15a <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0x6>

0800a164 <RemoteConfigParams::callbackFunction(char const*)>:
 800a164:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a166:	460d      	mov	r5, r1
 800a168:	4604      	mov	r4, r0
 800a16a:	4923      	ldr	r1, [pc, #140]	; (800a1f8 <RemoteConfigParams::callbackFunction(char const*)+0x94>)
 800a16c:	4628      	mov	r0, r5
 800a16e:	f10d 0203 	add.w	r2, sp, #3
 800a172:	f007 fe47 	bl	8011e04 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a176:	b940      	cbnz	r0, 800a18a <RemoteConfigParams::callbackFunction(char const*)+0x26>
 800a178:	2201      	movs	r2, #1
 800a17a:	4620      	mov	r0, r4
 800a17c:	f89d 1003 	ldrb.w	r1, [sp, #3]
 800a180:	b003      	add	sp, #12
 800a182:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800a186:	f7ff bfe5 	b.w	800a154 <RemoteConfigParams::SetBool(unsigned char, unsigned int)>
 800a18a:	4628      	mov	r0, r5
 800a18c:	491b      	ldr	r1, [pc, #108]	; (800a1fc <RemoteConfigParams::callbackFunction(char const*)+0x98>)
 800a18e:	f10d 0203 	add.w	r2, sp, #3
 800a192:	f007 fe37 	bl	8011e04 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a196:	b908      	cbnz	r0, 800a19c <RemoteConfigParams::callbackFunction(char const*)+0x38>
 800a198:	2202      	movs	r2, #2
 800a19a:	e7ee      	b.n	800a17a <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800a19c:	4628      	mov	r0, r5
 800a19e:	4918      	ldr	r1, [pc, #96]	; (800a200 <RemoteConfigParams::callbackFunction(char const*)+0x9c>)
 800a1a0:	f10d 0203 	add.w	r2, sp, #3
 800a1a4:	f007 fe2e 	bl	8011e04 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a1a8:	b908      	cbnz	r0, 800a1ae <RemoteConfigParams::callbackFunction(char const*)+0x4a>
 800a1aa:	2204      	movs	r2, #4
 800a1ac:	e7e5      	b.n	800a17a <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800a1ae:	4628      	mov	r0, r5
 800a1b0:	4914      	ldr	r1, [pc, #80]	; (800a204 <RemoteConfigParams::callbackFunction(char const*)+0xa0>)
 800a1b2:	f10d 0203 	add.w	r2, sp, #3
 800a1b6:	f007 fe25 	bl	8011e04 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a1ba:	b908      	cbnz	r0, 800a1c0 <RemoteConfigParams::callbackFunction(char const*)+0x5c>
 800a1bc:	2208      	movs	r2, #8
 800a1be:	e7dc      	b.n	800a17a <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800a1c0:	4628      	mov	r0, r5
 800a1c2:	4911      	ldr	r1, [pc, #68]	; (800a208 <RemoteConfigParams::callbackFunction(char const*)+0xa4>)
 800a1c4:	f10d 0203 	add.w	r2, sp, #3
 800a1c8:	f007 fe1c 	bl	8011e04 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a1cc:	b908      	cbnz	r0, 800a1d2 <RemoteConfigParams::callbackFunction(char const*)+0x6e>
 800a1ce:	2220      	movs	r2, #32
 800a1d0:	e7d3      	b.n	800a17a <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800a1d2:	2317      	movs	r3, #23
 800a1d4:	4628      	mov	r0, r5
 800a1d6:	9301      	str	r3, [sp, #4]
 800a1d8:	490c      	ldr	r1, [pc, #48]	; (800a20c <RemoteConfigParams::callbackFunction(char const*)+0xa8>)
 800a1da:	ab01      	add	r3, sp, #4
 800a1dc:	f104 020c 	add.w	r2, r4, #12
 800a1e0:	f007 fd0c 	bl	8011bfc <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800a1e4:	b930      	cbnz	r0, 800a1f4 <RemoteConfigParams::callbackFunction(char const*)+0x90>
 800a1e6:	9b01      	ldr	r3, [sp, #4]
 800a1e8:	4423      	add	r3, r4
 800a1ea:	7318      	strb	r0, [r3, #12]
 800a1ec:	6863      	ldr	r3, [r4, #4]
 800a1ee:	f043 0310 	orr.w	r3, r3, #16
 800a1f2:	6063      	str	r3, [r4, #4]
 800a1f4:	b003      	add	sp, #12
 800a1f6:	bd30      	pop	{r4, r5, pc}
 800a1f8:	080155a7 	stmdaeq	r1, {r0, r1, r2, r5, r7, r8, sl, ip, lr}
 800a1fc:	080155c8 	stmdaeq	r1, {r3, r6, r7, r8, sl, ip, lr}
 800a200:	080155d6 	stmdaeq	r1, {r1, r2, r4, r6, r7, r8, sl, ip, lr}
 800a204:	080155e4 	stmdaeq	r1, {r2, r5, r6, r7, r8, sl, ip, lr}
 800a208:	080155f2 	stmdaeq	r1, {r1, r4, r5, r6, r7, r8, sl, ip, lr}
 800a20c:	080155bb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r7, r8, sl, ip, lr}

0800a210 <RemoteConfigParams::staticCallbackFunction(void*, char const*)>:
 800a210:	f7ff bfa8 	b.w	800a164 <RemoteConfigParams::callbackFunction(char const*)>

0800a214 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>:
 800a214:	b570      	push	{r4, r5, r6, lr}
 800a216:	4604      	mov	r4, r0
 800a218:	4615      	mov	r5, r2
 800a21a:	461e      	mov	r6, r3
 800a21c:	b086      	sub	sp, #24
 800a21e:	3004      	adds	r0, #4
 800a220:	2900      	cmp	r1, #0
 800a222:	d041      	beq.n	800a2a8 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x94>
 800a224:	2220      	movs	r2, #32
 800a226:	f008 fb1e 	bl	8012866 <memmove>
 800a22a:	4633      	mov	r3, r6
 800a22c:	462a      	mov	r2, r5
 800a22e:	4937      	ldr	r1, [pc, #220]	; (800a30c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xf8>)
 800a230:	a803      	add	r0, sp, #12
 800a232:	f007 fc0b 	bl	8011a4c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800a236:	6862      	ldr	r2, [r4, #4]
 800a238:	4935      	ldr	r1, [pc, #212]	; (800a310 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xfc>)
 800a23a:	f002 0201 	and.w	r2, r2, #1
 800a23e:	a803      	add	r0, sp, #12
 800a240:	f7ff ff2c 	bl	800a09c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800a244:	6862      	ldr	r2, [r4, #4]
 800a246:	4933      	ldr	r1, [pc, #204]	; (800a314 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x100>)
 800a248:	f3c2 0240 	ubfx	r2, r2, #1, #1
 800a24c:	a803      	add	r0, sp, #12
 800a24e:	f7ff ff25 	bl	800a09c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800a252:	6862      	ldr	r2, [r4, #4]
 800a254:	4930      	ldr	r1, [pc, #192]	; (800a318 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x104>)
 800a256:	f3c2 0280 	ubfx	r2, r2, #2, #1
 800a25a:	a803      	add	r0, sp, #12
 800a25c:	f7ff ff1e 	bl	800a09c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800a260:	6862      	ldr	r2, [r4, #4]
 800a262:	492e      	ldr	r1, [pc, #184]	; (800a31c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x108>)
 800a264:	f3c2 02c0 	ubfx	r2, r2, #3, #1
 800a268:	a803      	add	r0, sp, #12
 800a26a:	f7ff ff17 	bl	800a09c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800a26e:	6862      	ldr	r2, [r4, #4]
 800a270:	492b      	ldr	r1, [pc, #172]	; (800a320 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x10c>)
 800a272:	f3c2 1240 	ubfx	r2, r2, #5, #1
 800a276:	a803      	add	r0, sp, #12
 800a278:	f7ff ff10 	bl	800a09c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800a27c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800a280:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800a284:	6862      	ldr	r2, [r4, #4]
 800a286:	42ab      	cmp	r3, r5
 800a288:	d223      	bcs.n	800a2d2 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xbe>
 800a28a:	9803      	ldr	r0, [sp, #12]
 800a28c:	06d2      	lsls	r2, r2, #27
 800a28e:	4418      	add	r0, r3
 800a290:	eba5 0503 	sub.w	r5, r5, r3
 800a294:	f104 040c 	add.w	r4, r4, #12
 800a298:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800a29c:	d40b      	bmi.n	800a2b6 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa2>
 800a29e:	b95b      	cbnz	r3, 800a2b8 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa4>
 800a2a0:	4b20      	ldr	r3, [pc, #128]	; (800a324 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 800a2a2:	4a21      	ldr	r2, [pc, #132]	; (800a328 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x114>)
 800a2a4:	9400      	str	r4, [sp, #0]
 800a2a6:	e00a      	b.n	800a2be <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xaa>
 800a2a8:	6823      	ldr	r3, [r4, #0]
 800a2aa:	4601      	mov	r1, r0
 800a2ac:	681a      	ldr	r2, [r3, #0]
 800a2ae:	4618      	mov	r0, r3
 800a2b0:	68d2      	ldr	r2, [r2, #12]
 800a2b2:	4790      	blx	r2
 800a2b4:	e7b9      	b.n	800a22a <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x16>
 800a2b6:	b32b      	cbz	r3, 800a304 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xf0>
 800a2b8:	4b1a      	ldr	r3, [pc, #104]	; (800a324 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 800a2ba:	4a1c      	ldr	r2, [pc, #112]	; (800a32c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x118>)
 800a2bc:	9400      	str	r4, [sp, #0]
 800a2be:	4629      	mov	r1, r5
 800a2c0:	f7ff f97c 	bl	80095bc <snprintf>
 800a2c4:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800a2c8:	4285      	cmp	r5, r0
 800a2ca:	bfa4      	itt	ge
 800a2cc:	181b      	addge	r3, r3, r0
 800a2ce:	f8ad 3012 	strhge.w	r3, [sp, #18]
 800a2d2:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800a2d6:	b17b      	cbz	r3, 800a2f8 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xe4>
 800a2d8:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800a2dc:	9b03      	ldr	r3, [sp, #12]
 800a2de:	4413      	add	r3, r2
 800a2e0:	227d      	movs	r2, #125	; 0x7d
 800a2e2:	f803 2c01 	strb.w	r2, [r3, #-1]
 800a2e6:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800a2ea:	9903      	ldr	r1, [sp, #12]
 800a2ec:	54ca      	strb	r2, [r1, r3]
 800a2ee:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800a2f2:	3301      	adds	r3, #1
 800a2f4:	f8ad 3012 	strh.w	r3, [sp, #18]
 800a2f8:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800a2fc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800a2fe:	601a      	str	r2, [r3, #0]
 800a300:	b006      	add	sp, #24
 800a302:	bd70      	pop	{r4, r5, r6, pc}
 800a304:	4b07      	ldr	r3, [pc, #28]	; (800a324 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 800a306:	4a0a      	ldr	r2, [pc, #40]	; (800a330 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x11c>)
 800a308:	9400      	str	r4, [sp, #0]
 800a30a:	e7d8      	b.n	800a2be <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xaa>
 800a30c:	080155af 	stmdaeq	r1, {r0, r1, r2, r3, r5, r7, r8, sl, ip, lr}
 800a310:	080155a7 	stmdaeq	r1, {r0, r1, r2, r5, r7, r8, sl, ip, lr}
 800a314:	080155c8 	stmdaeq	r1, {r3, r6, r7, r8, sl, ip, lr}
 800a318:	080155d6 	stmdaeq	r1, {r1, r2, r4, r6, r7, r8, sl, ip, lr}
 800a31c:	080155e4 	stmdaeq	r1, {r2, r5, r6, r7, r8, sl, ip, lr}
 800a320:	080155f2 	stmdaeq	r1, {r1, r4, r5, r6, r7, r8, sl, ip, lr}
 800a324:	080155bb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r7, r8, sl, ip, lr}
 800a328:	080151fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r8, ip, lr}
 800a32c:	080151f1 	stmdaeq	r1, {r0, r4, r5, r6, r7, r8, ip, lr}
 800a330:	080151fd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, r8, ip, lr}

0800a334 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>:
 800a334:	b513      	push	{r0, r1, r4, lr}
 800a336:	6804      	ldr	r4, [r0, #0]
 800a338:	b914      	cbnz	r4, 800a340 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800a33a:	601c      	str	r4, [r3, #0]
 800a33c:	b002      	add	sp, #8
 800a33e:	bd10      	pop	{r4, pc}
 800a340:	9300      	str	r3, [sp, #0]
 800a342:	4613      	mov	r3, r2
 800a344:	460a      	mov	r2, r1
 800a346:	2100      	movs	r1, #0
 800a348:	f7ff ff64 	bl	800a214 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>
 800a34c:	e7f6      	b.n	800a33c <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800a34e <RemoteConfigParams::Set(RemoteConfig*)>:
 800a34e:	b538      	push	{r3, r4, r5, lr}
 800a350:	460c      	mov	r4, r1
 800a352:	4605      	mov	r5, r0
 800a354:	6841      	ldr	r1, [r0, #4]
 800a356:	4620      	mov	r0, r4
 800a358:	f001 0101 	and.w	r1, r1, #1
 800a35c:	f7ff fc6c 	bl	8009c38 <RemoteConfig::SetDisable(bool)>
 800a360:	686b      	ldr	r3, [r5, #4]
 800a362:	f3c3 0240 	ubfx	r2, r3, #1, #1
 800a366:	7362      	strb	r2, [r4, #13]
 800a368:	f3c3 0280 	ubfx	r2, r3, #2, #1
 800a36c:	73a2      	strb	r2, [r4, #14]
 800a36e:	f3c3 02c0 	ubfx	r2, r3, #3, #1
 800a372:	73e2      	strb	r2, [r4, #15]
 800a374:	f3c3 1240 	ubfx	r2, r3, #5, #1
 800a378:	06db      	lsls	r3, r3, #27
 800a37a:	7422      	strb	r2, [r4, #16]
 800a37c:	d506      	bpl.n	800a38c <RemoteConfigParams::Set(RemoteConfig*)+0x3e>
 800a37e:	4620      	mov	r0, r4
 800a380:	f105 010c 	add.w	r1, r5, #12
 800a384:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800a388:	f7ff bc76 	b.w	8009c78 <RemoteConfig::SetDisplayName(char const*)>
 800a38c:	bd38      	pop	{r3, r4, r5, pc}

0800a38e <RemoteConfigParams::Dump()>:
 800a38e:	4770      	bx	lr

0800a390 <RemoteConfig::HandleReboot()>:
 800a390:	7b83      	ldrb	r3, [r0, #14]
 800a392:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a394:	2b00      	cmp	r3, #0
 800a396:	d03c      	beq.n	800a412 <RemoteConfig::HandleReboot()+0x82>
 800a398:	2301      	movs	r3, #1
 800a39a:	4c1f      	ldr	r4, [pc, #124]	; (800a418 <RemoteConfig::HandleReboot()+0x88>)
 800a39c:	7443      	strb	r3, [r0, #17]
 800a39e:	6825      	ldr	r5, [r4, #0]
 800a3a0:	69a8      	ldr	r0, [r5, #24]
 800a3a2:	b138      	cbz	r0, 800a3b4 <RemoteConfig::HandleReboot()+0x24>
 800a3a4:	2100      	movs	r1, #0
 800a3a6:	6803      	ldr	r3, [r0, #0]
 800a3a8:	7429      	strb	r1, [r5, #16]
 800a3aa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a3ac:	4798      	blx	r3
 800a3ae:	4b1b      	ldr	r3, [pc, #108]	; (800a41c <RemoteConfig::HandleReboot()+0x8c>)
 800a3b0:	681b      	ldr	r3, [r3, #0]
 800a3b2:	606b      	str	r3, [r5, #4]
 800a3b4:	4d1a      	ldr	r5, [pc, #104]	; (800a420 <RemoteConfig::HandleReboot()+0x90>)
 800a3b6:	6828      	ldr	r0, [r5, #0]
 800a3b8:	f004 fa60 	bl	800e87c <SpiFlashStore::Flash()>
 800a3bc:	2800      	cmp	r0, #0
 800a3be:	d1fa      	bne.n	800a3b6 <RemoteConfig::HandleReboot()+0x26>
 800a3c0:	4b18      	ldr	r3, [pc, #96]	; (800a424 <RemoteConfig::HandleReboot()+0x94>)
 800a3c2:	6818      	ldr	r0, [r3, #0]
 800a3c4:	f005 fe62 	bl	801008c <Network::Shutdown()>
 800a3c8:	4817      	ldr	r0, [pc, #92]	; (800a428 <RemoteConfig::HandleReboot()+0x98>)
 800a3ca:	f7ff f8cf 	bl	800956c <printf>
 800a3ce:	6823      	ldr	r3, [r4, #0]
 800a3d0:	6998      	ldr	r0, [r3, #24]
 800a3d2:	b110      	cbz	r0, 800a3da <RemoteConfig::HandleReboot()+0x4a>
 800a3d4:	6803      	ldr	r3, [r0, #0]
 800a3d6:	68db      	ldr	r3, [r3, #12]
 800a3d8:	4798      	blx	r3
 800a3da:	6824      	ldr	r4, [r4, #0]
 800a3dc:	4913      	ldr	r1, [pc, #76]	; (800a42c <RemoteConfig::HandleReboot()+0x9c>)
 800a3de:	4620      	mov	r0, r4
 800a3e0:	f7fe f9d2 	bl	8008788 <Display::TextStatus(char const*)>
 800a3e4:	7c63      	ldrb	r3, [r4, #17]
 800a3e6:	b183      	cbz	r3, 800a40a <RemoteConfig::HandleReboot()+0x7a>
 800a3e8:	f64b 7312 	movw	r3, #48914	; 0xbf12
 800a3ec:	f8ad 3004 	strh.w	r3, [sp, #4]
 800a3f0:	23bf      	movs	r3, #191	; 0xbf
 800a3f2:	7a20      	ldrb	r0, [r4, #8]
 800a3f4:	f88d 3006 	strb.w	r3, [sp, #6]
 800a3f8:	f009 fb60 	bl	8013abc <gd32_i2c_set_address>
 800a3fc:	68e0      	ldr	r0, [r4, #12]
 800a3fe:	f009 fb55 	bl	8013aac <gd32_i2c_set_baudrate>
 800a402:	2103      	movs	r1, #3
 800a404:	a801      	add	r0, sp, #4
 800a406:	f009 fb5f 	bl	8013ac8 <gd32_i2c_write>
 800a40a:	4b09      	ldr	r3, [pc, #36]	; (800a430 <RemoteConfig::HandleReboot()+0xa0>)
 800a40c:	6818      	ldr	r0, [r3, #0]
 800a40e:	f008 f92b 	bl	8012668 <Hardware::Reboot()>
 800a412:	b003      	add	sp, #12
 800a414:	bd30      	pop	{r4, r5, pc}
 800a416:	bf00      	nop
 800a418:	2001d920 	andcs	sp, r1, r0, lsr #18
 800a41c:	2001da24 	andcs	sp, r1, r4, lsr #20
 800a420:	20015a44 	andcs	r5, r1, r4, asr #20
 800a424:	2001d348 	andcs	sp, r1, r8, asr #6
 800a428:	08015204 	stmdaeq	r1, {r2, r9, ip, lr}
 800a42c:	08015213 	stmdaeq	r1, {r0, r1, r4, r9, ip, lr}
 800a430:	2001da10 	andcs	sp, r1, r0, lsl sl

0800a434 <RemoteConfig::GetIndex(void const*, unsigned int&)>:
 800a434:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800a438:	2000      	movs	r0, #0
 800a43a:	4d12      	ldr	r5, [pc, #72]	; (800a484 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x50>)
 800a43c:	f10d 0c04 	add.w	ip, sp, #4
 800a440:	6814      	ldr	r4, [r2, #0]
 800a442:	7d2b      	ldrb	r3, [r5, #20]
 800a444:	692e      	ldr	r6, [r5, #16]
 800a446:	42a3      	cmp	r3, r4
 800a448:	bf34      	ite	cc
 800a44a:	4664      	movcc	r4, ip
 800a44c:	4614      	movcs	r4, r2
 800a44e:	9301      	str	r3, [sp, #4]
 800a450:	6827      	ldr	r7, [r4, #0]
 800a452:	460c      	mov	r4, r1
 800a454:	3e01      	subs	r6, #1
 800a456:	440f      	add	r7, r1
 800a458:	42bc      	cmp	r4, r7
 800a45a:	d101      	bne.n	800a460 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x2c>
 800a45c:	6013      	str	r3, [r2, #0]
 800a45e:	e00c      	b.n	800a47a <RemoteConfig::GetIndex(void const*, unsigned int&)+0x46>
 800a460:	f894 8000 	ldrb.w	r8, [r4]
 800a464:	f816 ef01 	ldrb.w	lr, [r6, #1]!
 800a468:	45f0      	cmp	r8, lr
 800a46a:	d009      	beq.n	800a480 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x4c>
 800a46c:	3001      	adds	r0, #1
 800a46e:	2804      	cmp	r0, #4
 800a470:	f105 051c 	add.w	r5, r5, #28
 800a474:	d1e4      	bne.n	800a440 <RemoteConfig::GetIndex(void const*, unsigned int&)+0xc>
 800a476:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800a47a:	b002      	add	sp, #8
 800a47c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a480:	3401      	adds	r4, #1
 800a482:	e7e9      	b.n	800a458 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x24>
 800a484:	08015254 	stmdaeq	r1, {r2, r4, r6, r9, ip, lr}

0800a488 <RemoteConfig::PlatformHandleTftpSet()>:
 800a488:	f890 1020 	ldrb.w	r1, [r0, #32]
 800a48c:	b109      	cbz	r1, 800a492 <RemoteConfig::PlatformHandleTftpSet()+0xa>
 800a48e:	f24a 51a5 	movw	r1, #42405	; 0xa5a5
 800a492:	2002      	movs	r0, #2
 800a494:	f008 bbf6 	b.w	8012c84 <bkp_data_write>

0800a498 <RemoteConfig::PlatformHandleTftpGet()>:
 800a498:	b510      	push	{r4, lr}
 800a49a:	4604      	mov	r4, r0
 800a49c:	2002      	movs	r0, #2
 800a49e:	f008 fc07 	bl	8012cb0 <bkp_data_read>
 800a4a2:	f24a 53a5 	movw	r3, #42405	; 0xa5a5
 800a4a6:	1ac3      	subs	r3, r0, r3
 800a4a8:	4258      	negs	r0, r3
 800a4aa:	4158      	adcs	r0, r3
 800a4ac:	f884 0020 	strb.w	r0, [r4, #32]
 800a4b0:	bd10      	pop	{r4, pc}

0800a4b2 <strcmp>:
 800a4b2:	1e43      	subs	r3, r0, #1
 800a4b4:	3901      	subs	r1, #1
 800a4b6:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800a4ba:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800a4be:	4290      	cmp	r0, r2
 800a4c0:	d001      	beq.n	800a4c6 <strcmp+0x14>
 800a4c2:	1a80      	subs	r0, r0, r2
 800a4c4:	e001      	b.n	800a4ca <strcmp+0x18>
 800a4c6:	2800      	cmp	r0, #0
 800a4c8:	d1f5      	bne.n	800a4b6 <strcmp+0x4>
 800a4ca:	4770      	bx	lr

0800a4cc <strcasecmp>:
 800a4cc:	b530      	push	{r4, r5, lr}
 800a4ce:	1e42      	subs	r2, r0, #1
 800a4d0:	3901      	subs	r1, #1
 800a4d2:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800a4d6:	4604      	mov	r4, r0
 800a4d8:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 800a4dc:	2b19      	cmp	r3, #25
 800a4de:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800a4e2:	bf98      	it	ls
 800a4e4:	f100 0420 	addls.w	r4, r0, #32
 800a4e8:	f1a3 0541 	sub.w	r5, r3, #65	; 0x41
 800a4ec:	2d19      	cmp	r5, #25
 800a4ee:	bf98      	it	ls
 800a4f0:	3320      	addls	r3, #32
 800a4f2:	42a3      	cmp	r3, r4
 800a4f4:	d001      	beq.n	800a4fa <strcasecmp+0x2e>
 800a4f6:	1ae0      	subs	r0, r4, r3
 800a4f8:	e001      	b.n	800a4fe <strcasecmp+0x32>
 800a4fa:	2800      	cmp	r0, #0
 800a4fc:	d1e9      	bne.n	800a4d2 <strcasecmp+0x6>
 800a4fe:	bd30      	pop	{r4, r5, pc}

0800a500 <PropertiesConfig::EnableJSON(bool)>:
 800a500:	4a04      	ldr	r2, [pc, #16]	; (800a514 <PropertiesConfig::EnableJSON(bool)+0x14>)
 800a502:	7813      	ldrb	r3, [r2, #0]
 800a504:	b118      	cbz	r0, 800a50e <PropertiesConfig::EnableJSON(bool)+0xe>
 800a506:	f043 0301 	orr.w	r3, r3, #1
 800a50a:	7013      	strb	r3, [r2, #0]
 800a50c:	4770      	bx	lr
 800a50e:	f003 03fe 	and.w	r3, r3, #254	; 0xfe
 800a512:	e7fa      	b.n	800a50a <PropertiesConfig::EnableJSON(bool)+0xa>
 800a514:	2001d91c 	andcs	sp, r1, ip, lsl r9

0800a518 <HttpDaemon::HttpDaemon()>:
 800a518:	4a08      	ldr	r2, [pc, #32]	; (800a53c <HttpDaemon::HttpDaemon()+0x24>)
 800a51a:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800a51e:	6002      	str	r2, [r0, #0]
 800a520:	2200      	movs	r2, #0
 800a522:	f44f 7c02 	mov.w	ip, #520	; 0x208
 800a526:	e9c0 1204 	strd	r1, r2, [r0, #16]
 800a52a:	2102      	movs	r1, #2
 800a52c:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800a530:	e9c0 c106 	strd	ip, r1, [r0, #24]
 800a534:	e9c0 2208 	strd	r2, r2, [r0, #32]
 800a538:	60c2      	str	r2, [r0, #12]
 800a53a:	4770      	bx	lr
 800a53c:	08015527 	stmdaeq	r1, {r0, r1, r2, r5, r8, sl, ip, lr}

0800a540 <HttpDaemon::Start()>:
 800a540:	4b04      	ldr	r3, [pc, #16]	; (800a554 <HttpDaemon::Start()+0x14>)
 800a542:	b510      	push	{r4, lr}
 800a544:	2150      	movs	r1, #80	; 0x50
 800a546:	4604      	mov	r4, r0
 800a548:	6818      	ldr	r0, [r3, #0]
 800a54a:	f006 f8b1 	bl	80106b0 <Network::TcpBegin(unsigned short)>
 800a54e:	6120      	str	r0, [r4, #16]
 800a550:	bd10      	pop	{r4, pc}
 800a552:	bf00      	nop
 800a554:	2001d348 	andcs	sp, r1, r8, asr #6

0800a558 <HttpDaemon::ParseMethod(char*)>:
 800a558:	b538      	push	{r3, r4, r5, lr}
 800a55a:	4604      	mov	r4, r0
 800a55c:	4608      	mov	r0, r1
 800a55e:	491a      	ldr	r1, [pc, #104]	; (800a5c8 <HttpDaemon::ParseMethod(char*)+0x70>)
 800a560:	f008 f9c2 	bl	80128e8 <strtok>
 800a564:	4605      	mov	r5, r0
 800a566:	b360      	cbz	r0, 800a5c2 <HttpDaemon::ParseMethod(char*)+0x6a>
 800a568:	4918      	ldr	r1, [pc, #96]	; (800a5cc <HttpDaemon::ParseMethod(char*)+0x74>)
 800a56a:	f7ff ffa2 	bl	800a4b2 <strcmp>
 800a56e:	b128      	cbz	r0, 800a57c <HttpDaemon::ParseMethod(char*)+0x24>
 800a570:	4628      	mov	r0, r5
 800a572:	4917      	ldr	r1, [pc, #92]	; (800a5d0 <HttpDaemon::ParseMethod(char*)+0x78>)
 800a574:	f7ff ff9d 	bl	800a4b2 <strcmp>
 800a578:	bb18      	cbnz	r0, 800a5c2 <HttpDaemon::ParseMethod(char*)+0x6a>
 800a57a:	2001      	movs	r0, #1
 800a57c:	61e0      	str	r0, [r4, #28]
 800a57e:	4912      	ldr	r1, [pc, #72]	; (800a5c8 <HttpDaemon::ParseMethod(char*)+0x70>)
 800a580:	2000      	movs	r0, #0
 800a582:	f008 f9b1 	bl	80128e8 <strtok>
 800a586:	b910      	cbnz	r0, 800a58e <HttpDaemon::ParseMethod(char*)+0x36>
 800a588:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800a58c:	bd38      	pop	{r3, r4, r5, pc}
 800a58e:	6060      	str	r0, [r4, #4]
 800a590:	4910      	ldr	r1, [pc, #64]	; (800a5d4 <HttpDaemon::ParseMethod(char*)+0x7c>)
 800a592:	2000      	movs	r0, #0
 800a594:	f008 f9a8 	bl	80128e8 <strtok>
 800a598:	2800      	cmp	r0, #0
 800a59a:	d0f5      	beq.n	800a588 <HttpDaemon::ParseMethod(char*)+0x30>
 800a59c:	490e      	ldr	r1, [pc, #56]	; (800a5d8 <HttpDaemon::ParseMethod(char*)+0x80>)
 800a59e:	f7ff ff88 	bl	800a4b2 <strcmp>
 800a5a2:	2800      	cmp	r0, #0
 800a5a4:	d1f0      	bne.n	800a588 <HttpDaemon::ParseMethod(char*)+0x30>
 800a5a6:	490d      	ldr	r1, [pc, #52]	; (800a5dc <HttpDaemon::ParseMethod(char*)+0x84>)
 800a5a8:	f008 f99e 	bl	80128e8 <strtok>
 800a5ac:	2800      	cmp	r0, #0
 800a5ae:	d0eb      	beq.n	800a588 <HttpDaemon::ParseMethod(char*)+0x30>
 800a5b0:	490b      	ldr	r1, [pc, #44]	; (800a5e0 <HttpDaemon::ParseMethod(char*)+0x88>)
 800a5b2:	f7ff ff7e 	bl	800a4b2 <strcmp>
 800a5b6:	2800      	cmp	r0, #0
 800a5b8:	f240 10f9 	movw	r0, #505	; 0x1f9
 800a5bc:	bf08      	it	eq
 800a5be:	20c8      	moveq	r0, #200	; 0xc8
 800a5c0:	e7e4      	b.n	800a58c <HttpDaemon::ParseMethod(char*)+0x34>
 800a5c2:	f240 10f5 	movw	r0, #501	; 0x1f5
 800a5c6:	e7e1      	b.n	800a58c <HttpDaemon::ParseMethod(char*)+0x34>
 800a5c8:	08014f73 	stmdaeq	r1, {r0, r1, r4, r5, r6, r8, r9, sl, fp, lr}
 800a5cc:	080152c4 	stmdaeq	r1, {r2, r6, r7, r9, ip, lr}
 800a5d0:	080152c8 	stmdaeq	r1, {r3, r6, r7, r9, ip, lr}
 800a5d4:	08015330 	stmdaeq	r1, {r4, r5, r8, r9, ip, lr}
 800a5d8:	080152cd 	stmdaeq	r1, {r0, r2, r3, r6, r7, r9, ip, lr}
 800a5dc:	080152d2 	stmdaeq	r1, {r1, r4, r6, r7, r9, ip, lr}
 800a5e0:	080152d5 	stmdaeq	r1, {r0, r2, r4, r6, r7, r9, ip, lr}

0800a5e4 <HttpDaemon::ParseHeaderField(char*)>:
 800a5e4:	b538      	push	{r3, r4, r5, lr}
 800a5e6:	4605      	mov	r5, r0
 800a5e8:	4608      	mov	r0, r1
 800a5ea:	491d      	ldr	r1, [pc, #116]	; (800a660 <HttpDaemon::ParseHeaderField(char*)+0x7c>)
 800a5ec:	f008 f97c 	bl	80128e8 <strtok>
 800a5f0:	4604      	mov	r4, r0
 800a5f2:	b910      	cbnz	r0, 800a5fa <HttpDaemon::ParseHeaderField(char*)+0x16>
 800a5f4:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800a5f8:	bd38      	pop	{r3, r4, r5, pc}
 800a5fa:	491a      	ldr	r1, [pc, #104]	; (800a664 <HttpDaemon::ParseHeaderField(char*)+0x80>)
 800a5fc:	f7ff ff66 	bl	800a4cc <strcasecmp>
 800a600:	b970      	cbnz	r0, 800a620 <HttpDaemon::ParseHeaderField(char*)+0x3c>
 800a602:	4919      	ldr	r1, [pc, #100]	; (800a668 <HttpDaemon::ParseHeaderField(char*)+0x84>)
 800a604:	f008 f970 	bl	80128e8 <strtok>
 800a608:	2800      	cmp	r0, #0
 800a60a:	d0f3      	beq.n	800a5f4 <HttpDaemon::ParseHeaderField(char*)+0x10>
 800a60c:	4917      	ldr	r1, [pc, #92]	; (800a66c <HttpDaemon::ParseHeaderField(char*)+0x88>)
 800a60e:	f7ff ff50 	bl	800a4b2 <strcmp>
 800a612:	b108      	cbz	r0, 800a618 <HttpDaemon::ParseHeaderField(char*)+0x34>
 800a614:	20c8      	movs	r0, #200	; 0xc8
 800a616:	e7ef      	b.n	800a5f8 <HttpDaemon::ParseHeaderField(char*)+0x14>
 800a618:	2301      	movs	r3, #1
 800a61a:	f885 3020 	strb.w	r3, [r5, #32]
 800a61e:	e7f9      	b.n	800a614 <HttpDaemon::ParseHeaderField(char*)+0x30>
 800a620:	4620      	mov	r0, r4
 800a622:	4913      	ldr	r1, [pc, #76]	; (800a670 <HttpDaemon::ParseHeaderField(char*)+0x8c>)
 800a624:	f7ff ff52 	bl	800a4cc <strcasecmp>
 800a628:	4604      	mov	r4, r0
 800a62a:	2800      	cmp	r0, #0
 800a62c:	d1f2      	bne.n	800a614 <HttpDaemon::ParseHeaderField(char*)+0x30>
 800a62e:	4911      	ldr	r1, [pc, #68]	; (800a674 <HttpDaemon::ParseHeaderField(char*)+0x90>)
 800a630:	f008 f95a 	bl	80128e8 <strtok>
 800a634:	2800      	cmp	r0, #0
 800a636:	d0dd      	beq.n	800a5f4 <HttpDaemon::ParseHeaderField(char*)+0x10>
 800a638:	1e42      	subs	r2, r0, #1
 800a63a:	4623      	mov	r3, r4
 800a63c:	200a      	movs	r0, #10
 800a63e:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800a642:	b909      	cbnz	r1, 800a648 <HttpDaemon::ParseHeaderField(char*)+0x64>
 800a644:	84eb      	strh	r3, [r5, #38]	; 0x26
 800a646:	e7e5      	b.n	800a614 <HttpDaemon::ParseHeaderField(char*)+0x30>
 800a648:	3930      	subs	r1, #48	; 0x30
 800a64a:	2909      	cmp	r1, #9
 800a64c:	d8d2      	bhi.n	800a5f4 <HttpDaemon::ParseHeaderField(char*)+0x10>
 800a64e:	fb00 1303 	mla	r3, r0, r3, r1
 800a652:	f5b3 6fb4 	cmp.w	r3, #1440	; 0x5a0
 800a656:	d9f2      	bls.n	800a63e <HttpDaemon::ParseHeaderField(char*)+0x5a>
 800a658:	f240 109d 	movw	r0, #413	; 0x19d
 800a65c:	e7cc      	b.n	800a5f8 <HttpDaemon::ParseHeaderField(char*)+0x14>
 800a65e:	bf00      	nop
 800a660:	08015f4d 	stmdaeq	r1, {r0, r2, r3, r6, r8, r9, sl, fp, ip, lr}
 800a664:	080152d9 	stmdaeq	r1, {r0, r3, r4, r6, r7, r9, ip, lr}
 800a668:	080152e6 	stmdaeq	r1, {r1, r2, r5, r6, r7, r9, ip, lr}
 800a66c:	080152e9 	stmdaeq	r1, {r0, r3, r5, r6, r7, r9, ip, lr}
 800a670:	080152fa 	stmdaeq	r1, {r1, r3, r4, r5, r6, r7, r9, ip, lr}
 800a674:	08014f73 	stmdaeq	r1, {r0, r1, r4, r5, r6, r8, r9, sl, fp, lr}

0800a678 <HttpDaemon::ParseRequest()>:
 800a678:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a67a:	2400      	movs	r4, #0
 800a67c:	4605      	mov	r5, r0
 800a67e:	4622      	mov	r2, r4
 800a680:	4626      	mov	r6, r4
 800a682:	68c1      	ldr	r1, [r0, #12]
 800a684:	f880 4020 	strb.w	r4, [r0, #32]
 800a688:	6244      	str	r4, [r0, #36]	; 0x24
 800a68a:	8aab      	ldrh	r3, [r5, #20]
 800a68c:	42a3      	cmp	r3, r4
 800a68e:	d91d      	bls.n	800a6cc <HttpDaemon::ParseRequest()+0x54>
 800a690:	68eb      	ldr	r3, [r5, #12]
 800a692:	5d18      	ldrb	r0, [r3, r4]
 800a694:	280a      	cmp	r0, #10
 800a696:	d10e      	bne.n	800a6b6 <HttpDaemon::ParseRequest()+0x3e>
 800a698:	4423      	add	r3, r4
 800a69a:	f803 6c01 	strb.w	r6, [r3, #-1]
 800a69e:	1c57      	adds	r7, r2, #1
 800a6a0:	b962      	cbnz	r2, 800a6bc <HttpDaemon::ParseRequest()+0x44>
 800a6a2:	4628      	mov	r0, r5
 800a6a4:	f7ff ff58 	bl	800a558 <HttpDaemon::ParseMethod(char*)>
 800a6a8:	28c8      	cmp	r0, #200	; 0xc8
 800a6aa:	d110      	bne.n	800a6ce <HttpDaemon::ParseRequest()+0x56>
 800a6ac:	463a      	mov	r2, r7
 800a6ae:	68e9      	ldr	r1, [r5, #12]
 800a6b0:	3401      	adds	r4, #1
 800a6b2:	b2a4      	uxth	r4, r4
 800a6b4:	4421      	add	r1, r4
 800a6b6:	3401      	adds	r4, #1
 800a6b8:	b2a4      	uxth	r4, r4
 800a6ba:	e7e6      	b.n	800a68a <HttpDaemon::ParseRequest()+0x12>
 800a6bc:	7808      	ldrb	r0, [r1, #0]
 800a6be:	b968      	cbnz	r0, 800a6dc <HttpDaemon::ParseRequest()+0x64>
 800a6c0:	696b      	ldr	r3, [r5, #20]
 800a6c2:	3b01      	subs	r3, #1
 800a6c4:	1b1b      	subs	r3, r3, r4
 800a6c6:	b29b      	uxth	r3, r3
 800a6c8:	84ab      	strh	r3, [r5, #36]	; 0x24
 800a6ca:	b90b      	cbnz	r3, 800a6d0 <HttpDaemon::ParseRequest()+0x58>
 800a6cc:	20c8      	movs	r0, #200	; 0xc8
 800a6ce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a6d0:	68ea      	ldr	r2, [r5, #12]
 800a6d2:	3401      	adds	r4, #1
 800a6d4:	4414      	add	r4, r2
 800a6d6:	60ac      	str	r4, [r5, #8]
 800a6d8:	54e0      	strb	r0, [r4, r3]
 800a6da:	e7f7      	b.n	800a6cc <HttpDaemon::ParseRequest()+0x54>
 800a6dc:	4628      	mov	r0, r5
 800a6de:	f7ff ff81 	bl	800a5e4 <HttpDaemon::ParseHeaderField(char*)>
 800a6e2:	e7e1      	b.n	800a6a8 <HttpDaemon::ParseRequest()+0x30>

0800a6e4 <HttpDaemon::HandleGetTxt()>:
 800a6e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a6e8:	6846      	ldr	r6, [r0, #4]
 800a6ea:	4607      	mov	r7, r0
 800a6ec:	1db4      	adds	r4, r6, #6
 800a6ee:	4622      	mov	r2, r4
 800a6f0:	4613      	mov	r3, r2
 800a6f2:	7819      	ldrb	r1, [r3, #0]
 800a6f4:	3201      	adds	r2, #1
 800a6f6:	2900      	cmp	r1, #0
 800a6f8:	d1fa      	bne.n	800a6f0 <HttpDaemon::HandleGetTxt()+0xc>
 800a6fa:	1b1b      	subs	r3, r3, r4
 800a6fc:	2b04      	cmp	r3, #4
 800a6fe:	d803      	bhi.n	800a708 <HttpDaemon::HandleGetTxt()+0x24>
 800a700:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800a704:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a708:	3b04      	subs	r3, #4
 800a70a:	4914      	ldr	r1, [pc, #80]	; (800a75c <HttpDaemon::HandleGetTxt()+0x78>)
 800a70c:	18e0      	adds	r0, r4, r3
 800a70e:	f7ff fed0 	bl	800a4b2 <strcmp>
 800a712:	2800      	cmp	r0, #0
 800a714:	d1f4      	bne.n	800a700 <HttpDaemon::HandleGetTxt()+0x1c>
 800a716:	4b12      	ldr	r3, [pc, #72]	; (800a760 <HttpDaemon::HandleGetTxt()+0x7c>)
 800a718:	2001      	movs	r0, #1
 800a71a:	f893 8000 	ldrb.w	r8, [r3]
 800a71e:	f7ff feef 	bl	800a500 <PropertiesConfig::EnableJSON(bool)>
 800a722:	4b10      	ldr	r3, [pc, #64]	; (800a764 <HttpDaemon::HandleGetTxt()+0x80>)
 800a724:	f240 529b 	movw	r2, #1435	; 0x59b
 800a728:	4621      	mov	r1, r4
 800a72a:	6818      	ldr	r0, [r3, #0]
 800a72c:	f7ff fabc 	bl	8009ca8 <RemoteConfig::HandleGet(void*, unsigned int)>
 800a730:	4605      	mov	r5, r0
 800a732:	f008 0801 	and.w	r8, r8, #1
 800a736:	4640      	mov	r0, r8
 800a738:	f7ff fee2 	bl	800a500 <PropertiesConfig::EnableJSON(bool)>
 800a73c:	2d00      	cmp	r5, #0
 800a73e:	d0df      	beq.n	800a700 <HttpDaemon::HandleGetTxt()+0x1c>
 800a740:	847d      	strh	r5, [r7, #34]	; 0x22
 800a742:	4b09      	ldr	r3, [pc, #36]	; (800a768 <HttpDaemon::HandleGetTxt()+0x84>)
 800a744:	3506      	adds	r5, #6
 800a746:	442e      	add	r6, r5
 800a748:	42b4      	cmp	r4, r6
 800a74a:	d101      	bne.n	800a750 <HttpDaemon::HandleGetTxt()+0x6c>
 800a74c:	20c8      	movs	r0, #200	; 0xc8
 800a74e:	e7d9      	b.n	800a704 <HttpDaemon::HandleGetTxt()+0x20>
 800a750:	f814 2b01 	ldrb.w	r2, [r4], #1
 800a754:	f803 2b01 	strb.w	r2, [r3], #1
 800a758:	e7f6      	b.n	800a748 <HttpDaemon::HandleGetTxt()+0x64>
 800a75a:	bf00      	nop
 800a75c:	08015228 	stmdaeq	r1, {r3, r5, r9, ip, lr}
 800a760:	2001d91c 	andcs	sp, r1, ip, lsl r9
 800a764:	20000114 	andcs	r0, r0, r4, lsl r1
 800a768:	20000118 	andcs	r0, r0, r8, lsl r1

0800a76c <HttpDaemon::HandleGet()>:
 800a76c:	b570      	push	{r4, r5, r6, lr}
 800a76e:	6845      	ldr	r5, [r0, #4]
 800a770:	4604      	mov	r4, r0
 800a772:	493e      	ldr	r1, [pc, #248]	; (800a86c <HttpDaemon::HandleGet()+0x100>)
 800a774:	4628      	mov	r0, r5
 800a776:	f7ff fe9c 	bl	800a4b2 <strcmp>
 800a77a:	b120      	cbz	r0, 800a786 <HttpDaemon::HandleGet()+0x1a>
 800a77c:	4628      	mov	r0, r5
 800a77e:	493c      	ldr	r1, [pc, #240]	; (800a870 <HttpDaemon::HandleGet()+0x104>)
 800a780:	f7ff fe97 	bl	800a4b2 <strcmp>
 800a784:	b950      	cbnz	r0, 800a79c <HttpDaemon::HandleGet()+0x30>
 800a786:	4b3b      	ldr	r3, [pc, #236]	; (800a874 <HttpDaemon::HandleGet()+0x108>)
 800a788:	493b      	ldr	r1, [pc, #236]	; (800a878 <HttpDaemon::HandleGet()+0x10c>)
 800a78a:	483c      	ldr	r0, [pc, #240]	; (800a87c <HttpDaemon::HandleGet()+0x110>)
 800a78c:	6023      	str	r3, [r4, #0]
 800a78e:	f000 fa67 	bl	800ac60 <get_file_content(char const*, char*)>
 800a792:	2800      	cmp	r0, #0
 800a794:	dd2f      	ble.n	800a7f6 <HttpDaemon::HandleGet()+0x8a>
 800a796:	8460      	strh	r0, [r4, #34]	; 0x22
 800a798:	20c8      	movs	r0, #200	; 0xc8
 800a79a:	bd70      	pop	{r4, r5, r6, pc}
 800a79c:	4628      	mov	r0, r5
 800a79e:	4938      	ldr	r1, [pc, #224]	; (800a880 <HttpDaemon::HandleGet()+0x114>)
 800a7a0:	f7ff fe87 	bl	800a4b2 <strcmp>
 800a7a4:	b920      	cbnz	r0, 800a7b0 <HttpDaemon::HandleGet()+0x44>
 800a7a6:	4b37      	ldr	r3, [pc, #220]	; (800a884 <HttpDaemon::HandleGet()+0x118>)
 800a7a8:	4933      	ldr	r1, [pc, #204]	; (800a878 <HttpDaemon::HandleGet()+0x10c>)
 800a7aa:	4837      	ldr	r0, [pc, #220]	; (800a888 <HttpDaemon::HandleGet()+0x11c>)
 800a7ac:	6023      	str	r3, [r4, #0]
 800a7ae:	e7ee      	b.n	800a78e <HttpDaemon::HandleGet()+0x22>
 800a7b0:	4628      	mov	r0, r5
 800a7b2:	4936      	ldr	r1, [pc, #216]	; (800a88c <HttpDaemon::HandleGet()+0x120>)
 800a7b4:	f7ff fe7d 	bl	800a4b2 <strcmp>
 800a7b8:	b190      	cbz	r0, 800a7e0 <HttpDaemon::HandleGet()+0x74>
 800a7ba:	4a35      	ldr	r2, [pc, #212]	; (800a890 <HttpDaemon::HandleGet()+0x124>)
 800a7bc:	1e6b      	subs	r3, r5, #1
 800a7be:	1d69      	adds	r1, r5, #5
 800a7c0:	428b      	cmp	r3, r1
 800a7c2:	d112      	bne.n	800a7ea <HttpDaemon::HandleGet()+0x7e>
 800a7c4:	4b33      	ldr	r3, [pc, #204]	; (800a894 <HttpDaemon::HandleGet()+0x128>)
 800a7c6:	3506      	adds	r5, #6
 800a7c8:	4628      	mov	r0, r5
 800a7ca:	4933      	ldr	r1, [pc, #204]	; (800a898 <HttpDaemon::HandleGet()+0x12c>)
 800a7cc:	6023      	str	r3, [r4, #0]
 800a7ce:	f7ff fe70 	bl	800a4b2 <strcmp>
 800a7d2:	b998      	cbnz	r0, 800a7fc <HttpDaemon::HandleGet()+0x90>
 800a7d4:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800a7d8:	4827      	ldr	r0, [pc, #156]	; (800a878 <HttpDaemon::HandleGet()+0x10c>)
 800a7da:	f000 f9c9 	bl	800ab70 <remoteconfig::json_get_list(char*, unsigned short)>
 800a7de:	e7d8      	b.n	800a792 <HttpDaemon::HandleGet()+0x26>
 800a7e0:	4b2e      	ldr	r3, [pc, #184]	; (800a89c <HttpDaemon::HandleGet()+0x130>)
 800a7e2:	4925      	ldr	r1, [pc, #148]	; (800a878 <HttpDaemon::HandleGet()+0x10c>)
 800a7e4:	482e      	ldr	r0, [pc, #184]	; (800a8a0 <HttpDaemon::HandleGet()+0x134>)
 800a7e6:	6023      	str	r3, [r4, #0]
 800a7e8:	e7d1      	b.n	800a78e <HttpDaemon::HandleGet()+0x22>
 800a7ea:	f812 0b01 	ldrb.w	r0, [r2], #1
 800a7ee:	f813 6f01 	ldrb.w	r6, [r3, #1]!
 800a7f2:	4286      	cmp	r6, r0
 800a7f4:	d0e4      	beq.n	800a7c0 <HttpDaemon::HandleGet()+0x54>
 800a7f6:	f44f 70ca 	mov.w	r0, #404	; 0x194
 800a7fa:	e7ce      	b.n	800a79a <HttpDaemon::HandleGet()+0x2e>
 800a7fc:	4628      	mov	r0, r5
 800a7fe:	4929      	ldr	r1, [pc, #164]	; (800a8a4 <HttpDaemon::HandleGet()+0x138>)
 800a800:	f7ff fe57 	bl	800a4b2 <strcmp>
 800a804:	b928      	cbnz	r0, 800a812 <HttpDaemon::HandleGet()+0xa6>
 800a806:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800a80a:	481b      	ldr	r0, [pc, #108]	; (800a878 <HttpDaemon::HandleGet()+0x10c>)
 800a80c:	f000 f9e4 	bl	800abd8 <remoteconfig::json_get_version(char*, unsigned short)>
 800a810:	e7bf      	b.n	800a792 <HttpDaemon::HandleGet()+0x26>
 800a812:	4628      	mov	r0, r5
 800a814:	4924      	ldr	r1, [pc, #144]	; (800a8a8 <HttpDaemon::HandleGet()+0x13c>)
 800a816:	f7ff fe4c 	bl	800a4b2 <strcmp>
 800a81a:	b948      	cbnz	r0, 800a830 <HttpDaemon::HandleGet()+0xc4>
 800a81c:	4b23      	ldr	r3, [pc, #140]	; (800a8ac <HttpDaemon::HandleGet()+0x140>)
 800a81e:	681b      	ldr	r3, [r3, #0]
 800a820:	7bdb      	ldrb	r3, [r3, #15]
 800a822:	b303      	cbz	r3, 800a866 <HttpDaemon::HandleGet()+0xfa>
 800a824:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800a828:	4813      	ldr	r0, [pc, #76]	; (800a878 <HttpDaemon::HandleGet()+0x10c>)
 800a82a:	f000 f9f1 	bl	800ac10 <remoteconfig::json_get_uptime(char*, unsigned short)>
 800a82e:	e7b0      	b.n	800a792 <HttpDaemon::HandleGet()+0x26>
 800a830:	4628      	mov	r0, r5
 800a832:	491f      	ldr	r1, [pc, #124]	; (800a8b0 <HttpDaemon::HandleGet()+0x144>)
 800a834:	f7ff fe3d 	bl	800a4b2 <strcmp>
 800a838:	b928      	cbnz	r0, 800a846 <HttpDaemon::HandleGet()+0xda>
 800a83a:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800a83e:	480e      	ldr	r0, [pc, #56]	; (800a878 <HttpDaemon::HandleGet()+0x10c>)
 800a840:	f000 f9f6 	bl	800ac30 <remoteconfig::json_get_display(char*, unsigned short)>
 800a844:	e7a5      	b.n	800a792 <HttpDaemon::HandleGet()+0x26>
 800a846:	4628      	mov	r0, r5
 800a848:	491a      	ldr	r1, [pc, #104]	; (800a8b4 <HttpDaemon::HandleGet()+0x148>)
 800a84a:	f7ff fe32 	bl	800a4b2 <strcmp>
 800a84e:	b928      	cbnz	r0, 800a85c <HttpDaemon::HandleGet()+0xf0>
 800a850:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800a854:	4808      	ldr	r0, [pc, #32]	; (800a878 <HttpDaemon::HandleGet()+0x10c>)
 800a856:	f000 f9fb 	bl	800ac50 <remoteconfig::json_get_directory(char*, unsigned short)>
 800a85a:	e79a      	b.n	800a792 <HttpDaemon::HandleGet()+0x26>
 800a85c:	4620      	mov	r0, r4
 800a85e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a862:	f7ff bf3f 	b.w	800a6e4 <HttpDaemon::HandleGetTxt()>
 800a866:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800a86a:	e796      	b.n	800a79a <HttpDaemon::HandleGet()+0x2e>
 800a86c:	08015330 	stmdaeq	r1, {r4, r5, r8, r9, ip, lr}
 800a870:	08015309 	stmdaeq	r1, {r0, r3, r8, r9, ip, lr}
 800a874:	08015527 	stmdaeq	r1, {r0, r1, r2, r5, r8, sl, ip, lr}
 800a878:	20000118 	andcs	r0, r0, r8, lsl r1
 800a87c:	0801530a 	stmdaeq	r1, {r1, r3, r8, r9, ip, lr}
 800a880:	08015315 	stmdaeq	r1, {r0, r2, r4, r8, r9, ip, lr}
 800a884:	08015547 	stmdaeq	r1, {r0, r1, r2, r6, r8, sl, ip, lr}
 800a888:	08015316 	stmdaeq	r1, {r1, r2, r4, r8, r9, ip, lr}
 800a88c:	08015321 	stmdaeq	r1, {r0, r5, r8, r9, ip, lr}
 800a890:	0801532b 	stmdaeq	r1, {r0, r1, r3, r5, r8, r9, ip, lr}
 800a894:	08015587 	stmdaeq	r1, {r0, r1, r2, r7, r8, sl, ip, lr}
 800a898:	08015332 	stmdaeq	r1, {r1, r4, r5, r8, r9, ip, lr}
 800a89c:	08015567 	stmdaeq	r1, {r0, r1, r2, r5, r6, r8, sl, ip, lr}
 800a8a0:	08015322 	stmdaeq	r1, {r1, r5, r8, r9, ip, lr}
 800a8a4:	08015337 	stmdaeq	r1, {r0, r1, r2, r4, r5, r8, r9, ip, lr}
 800a8a8:	0801533f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r8, r9, ip, lr}
 800a8ac:	20000114 	andcs	r0, r0, r4, lsl r1
 800a8b0:	08015346 	stmdaeq	r1, {r1, r2, r6, r8, r9, ip, lr}
 800a8b4:	0801534e 	stmdaeq	r1, {r1, r2, r3, r6, r8, r9, ip, lr}

0800a8b8 <HttpDaemon::HandlePost(bool)>:
 800a8b8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a8ba:	4604      	mov	r4, r0
 800a8bc:	2900      	cmp	r1, #0
 800a8be:	f040 808a 	bne.w	800a9d6 <HttpDaemon::HandlePost(bool)+0x11e>
 800a8c2:	f890 3020 	ldrb.w	r3, [r0, #32]
 800a8c6:	2b00      	cmp	r3, #0
 800a8c8:	d05a      	beq.n	800a980 <HttpDaemon::HandlePost(bool)+0xc8>
 800a8ca:	6845      	ldr	r5, [r0, #4]
 800a8cc:	4944      	ldr	r1, [pc, #272]	; (800a9e0 <HttpDaemon::HandlePost(bool)+0x128>)
 800a8ce:	4628      	mov	r0, r5
 800a8d0:	f7ff fdef 	bl	800a4b2 <strcmp>
 800a8d4:	2800      	cmp	r0, #0
 800a8d6:	bf0c      	ite	eq
 800a8d8:	2301      	moveq	r3, #1
 800a8da:	2300      	movne	r3, #0
 800a8dc:	f884 3021 	strb.w	r3, [r4, #33]	; 0x21
 800a8e0:	d052      	beq.n	800a988 <HttpDaemon::HandlePost(bool)+0xd0>
 800a8e2:	4628      	mov	r0, r5
 800a8e4:	493f      	ldr	r1, [pc, #252]	; (800a9e4 <HttpDaemon::HandlePost(bool)+0x12c>)
 800a8e6:	f7ff fde4 	bl	800a4b2 <strcmp>
 800a8ea:	2800      	cmp	r0, #0
 800a8ec:	d04c      	beq.n	800a988 <HttpDaemon::HandlePost(bool)+0xd0>
 800a8ee:	f44f 70ca 	mov.w	r0, #404	; 0x194
 800a8f2:	e047      	b.n	800a984 <HttpDaemon::HandlePost(bool)+0xcc>
 800a8f4:	493c      	ldr	r1, [pc, #240]	; (800a9e8 <HttpDaemon::HandlePost(bool)+0x130>)
 800a8f6:	68a0      	ldr	r0, [r4, #8]
 800a8f8:	f10d 0207 	add.w	r2, sp, #7
 800a8fc:	f007 fa82 	bl	8011e04 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a900:	b9d8      	cbnz	r0, 800a93a <HttpDaemon::HandlePost(bool)+0x82>
 800a902:	f89d 6007 	ldrb.w	r6, [sp, #7]
 800a906:	4b39      	ldr	r3, [pc, #228]	; (800a9ec <HttpDaemon::HandlePost(bool)+0x134>)
 800a908:	fab6 f186 	clz	r1, r6
 800a90c:	681d      	ldr	r5, [r3, #0]
 800a90e:	0949      	lsrs	r1, r1, #5
 800a910:	69a8      	ldr	r0, [r5, #24]
 800a912:	b138      	cbz	r0, 800a924 <HttpDaemon::HandlePost(bool)+0x6c>
 800a914:	6803      	ldr	r3, [r0, #0]
 800a916:	7429      	strb	r1, [r5, #16]
 800a918:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a91a:	4798      	blx	r3
 800a91c:	b116      	cbz	r6, 800a924 <HttpDaemon::HandlePost(bool)+0x6c>
 800a91e:	4b34      	ldr	r3, [pc, #208]	; (800a9f0 <HttpDaemon::HandlePost(bool)+0x138>)
 800a920:	681b      	ldr	r3, [r3, #0]
 800a922:	606b      	str	r3, [r5, #4]
 800a924:	4b33      	ldr	r3, [pc, #204]	; (800a9f4 <HttpDaemon::HandlePost(bool)+0x13c>)
 800a926:	f240 519f 	movw	r1, #1439	; 0x59f
 800a92a:	4a33      	ldr	r2, [pc, #204]	; (800a9f8 <HttpDaemon::HandlePost(bool)+0x140>)
 800a92c:	4833      	ldr	r0, [pc, #204]	; (800a9fc <HttpDaemon::HandlePost(bool)+0x144>)
 800a92e:	6023      	str	r3, [r4, #0]
 800a930:	f7fe fe44 	bl	80095bc <snprintf>
 800a934:	8460      	strh	r0, [r4, #34]	; 0x22
 800a936:	20c8      	movs	r0, #200	; 0xc8
 800a938:	e024      	b.n	800a984 <HttpDaemon::HandlePost(bool)+0xcc>
 800a93a:	4931      	ldr	r1, [pc, #196]	; (800aa00 <HttpDaemon::HandlePost(bool)+0x148>)
 800a93c:	68a0      	ldr	r0, [r4, #8]
 800a93e:	f10d 0207 	add.w	r2, sp, #7
 800a942:	f007 fa5f 	bl	8011e04 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a946:	b9d8      	cbnz	r0, 800a980 <HttpDaemon::HandlePost(bool)+0xc8>
 800a948:	4b2e      	ldr	r3, [pc, #184]	; (800aa04 <HttpDaemon::HandlePost(bool)+0x14c>)
 800a94a:	6818      	ldr	r0, [r3, #0]
 800a94c:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800a950:	b11b      	cbz	r3, 800a95a <HttpDaemon::HandlePost(bool)+0xa2>
 800a952:	2104      	movs	r1, #4
 800a954:	f007 fde8 	bl	8012528 <LedBlink::SetMode(ledblink::Mode)>
 800a958:	e7e4      	b.n	800a924 <HttpDaemon::HandlePost(bool)+0x6c>
 800a95a:	2102      	movs	r1, #2
 800a95c:	e7fa      	b.n	800a954 <HttpDaemon::HandlePost(bool)+0x9c>
 800a95e:	4b2a      	ldr	r3, [pc, #168]	; (800aa08 <HttpDaemon::HandlePost(bool)+0x150>)
 800a960:	2001      	movs	r0, #1
 800a962:	781d      	ldrb	r5, [r3, #0]
 800a964:	f7ff fdcc 	bl	800a500 <PropertiesConfig::EnableJSON(bool)>
 800a968:	4b28      	ldr	r3, [pc, #160]	; (800aa0c <HttpDaemon::HandlePost(bool)+0x154>)
 800a96a:	8ca2      	ldrh	r2, [r4, #36]	; 0x24
 800a96c:	6818      	ldr	r0, [r3, #0]
 800a96e:	68a1      	ldr	r1, [r4, #8]
 800a970:	f005 0501 	and.w	r5, r5, #1
 800a974:	f7ff fa50 	bl	8009e18 <RemoteConfig::HandleSet(void*, unsigned int)>
 800a978:	4628      	mov	r0, r5
 800a97a:	f7ff fdc1 	bl	800a500 <PropertiesConfig::EnableJSON(bool)>
 800a97e:	e7d1      	b.n	800a924 <HttpDaemon::HandlePost(bool)+0x6c>
 800a980:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800a984:	b002      	add	sp, #8
 800a986:	bd70      	pop	{r4, r5, r6, pc}
 800a988:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 800a98a:	6962      	ldr	r2, [r4, #20]
 800a98c:	429a      	cmp	r2, r3
 800a98e:	dbd2      	blt.n	800a936 <HttpDaemon::HandlePost(bool)+0x7e>
 800a990:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 800a992:	2b00      	cmp	r3, #0
 800a994:	d0cf      	beq.n	800a936 <HttpDaemon::HandlePost(bool)+0x7e>
 800a996:	f894 3021 	ldrb.w	r3, [r4, #33]	; 0x21
 800a99a:	2b00      	cmp	r3, #0
 800a99c:	d0df      	beq.n	800a95e <HttpDaemon::HandlePost(bool)+0xa6>
 800a99e:	2201      	movs	r2, #1
 800a9a0:	8ca1      	ldrh	r1, [r4, #36]	; 0x24
 800a9a2:	68a0      	ldr	r0, [r4, #8]
 800a9a4:	f006 ffa0 	bl	80118e8 <properties::convert_json_file(char*, unsigned short, bool)>
 800a9a8:	2800      	cmp	r0, #0
 800a9aa:	dde9      	ble.n	800a980 <HttpDaemon::HandlePost(bool)+0xc8>
 800a9ac:	4918      	ldr	r1, [pc, #96]	; (800aa10 <HttpDaemon::HandlePost(bool)+0x158>)
 800a9ae:	68a0      	ldr	r0, [r4, #8]
 800a9b0:	f10d 0207 	add.w	r2, sp, #7
 800a9b4:	f007 fa26 	bl	8011e04 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a9b8:	2800      	cmp	r0, #0
 800a9ba:	d19b      	bne.n	800a8f4 <HttpDaemon::HandlePost(bool)+0x3c>
 800a9bc:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800a9c0:	2b00      	cmp	r3, #0
 800a9c2:	d0af      	beq.n	800a924 <HttpDaemon::HandlePost(bool)+0x6c>
 800a9c4:	4b11      	ldr	r3, [pc, #68]	; (800aa0c <HttpDaemon::HandlePost(bool)+0x154>)
 800a9c6:	681b      	ldr	r3, [r3, #0]
 800a9c8:	7b9b      	ldrb	r3, [r3, #14]
 800a9ca:	2b00      	cmp	r3, #0
 800a9cc:	d0d8      	beq.n	800a980 <HttpDaemon::HandlePost(bool)+0xc8>
 800a9ce:	4b11      	ldr	r3, [pc, #68]	; (800aa14 <HttpDaemon::HandlePost(bool)+0x15c>)
 800a9d0:	6818      	ldr	r0, [r3, #0]
 800a9d2:	f007 fe49 	bl	8012668 <Hardware::Reboot()>
 800a9d6:	68c3      	ldr	r3, [r0, #12]
 800a9d8:	6083      	str	r3, [r0, #8]
 800a9da:	6943      	ldr	r3, [r0, #20]
 800a9dc:	8483      	strh	r3, [r0, #36]	; 0x24
 800a9de:	e7da      	b.n	800a996 <HttpDaemon::HandlePost(bool)+0xde>
 800a9e0:	08015358 	stmdaeq	r1, {r3, r4, r6, r8, r9, ip, lr}
 800a9e4:	080152f4 	stmdaeq	r1, {r2, r4, r5, r6, r7, r9, ip, lr}
 800a9e8:	08015346 	stmdaeq	r1, {r1, r2, r6, r8, r9, ip, lr}
 800a9ec:	2001d920 	andcs	sp, r1, r0, lsr #18
 800a9f0:	2001da24 	andcs	sp, r1, r4, lsr #20
 800a9f4:	08015527 	stmdaeq	r1, {r0, r1, r2, r5, r8, sl, ip, lr}
 800a9f8:	08015375 	stmdaeq	r1, {r0, r2, r4, r5, r6, r8, r9, ip, lr}
 800a9fc:	20000118 	andcs	r0, r0, r8, lsl r1
 800aa00:	0801536c 	stmdaeq	r1, {r2, r3, r5, r6, r8, r9, ip, lr}
 800aa04:	2001da0c 	andcs	sp, r1, ip, lsl #20
 800aa08:	2001d91c 	andcs	sp, r1, ip, lsl r9
 800aa0c:	20000114 	andcs	r0, r0, r4, lsl r1
 800aa10:	08015365 	stmdaeq	r1, {r0, r2, r5, r6, r8, r9, ip, lr}
 800aa14:	2001da10 	andcs	sp, r1, r0, lsl sl

0800aa18 <HttpDaemon::Run()>:
 800aa18:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800aa1a:	4e46      	ldr	r6, [pc, #280]	; (800ab34 <HttpDaemon::Run()+0x11c>)
 800aa1c:	4604      	mov	r4, r0
 800aa1e:	6901      	ldr	r1, [r0, #16]
 800aa20:	f100 020c 	add.w	r2, r0, #12
 800aa24:	6830      	ldr	r0, [r6, #0]
 800aa26:	f005 fe46 	bl	80106b6 <Network::TcpRead(int, unsigned char const**)>
 800aa2a:	6160      	str	r0, [r4, #20]
 800aa2c:	2800      	cmp	r0, #0
 800aa2e:	d05b      	beq.n	800aae8 <HttpDaemon::Run()+0xd0>
 800aa30:	69a3      	ldr	r3, [r4, #24]
 800aa32:	f5b3 7f02 	cmp.w	r3, #520	; 0x208
 800aa36:	d159      	bne.n	800aaec <HttpDaemon::Run()+0xd4>
 800aa38:	4620      	mov	r0, r4
 800aa3a:	f7ff fe1d 	bl	800a678 <HttpDaemon::ParseRequest()>
 800aa3e:	28c8      	cmp	r0, #200	; 0xc8
 800aa40:	61a0      	str	r0, [r4, #24]
 800aa42:	d106      	bne.n	800aa52 <HttpDaemon::Run()+0x3a>
 800aa44:	69e3      	ldr	r3, [r4, #28]
 800aa46:	2b00      	cmp	r3, #0
 800aa48:	d142      	bne.n	800aad0 <HttpDaemon::Run()+0xb8>
 800aa4a:	4620      	mov	r0, r4
 800aa4c:	f7ff fe8e 	bl	800a76c <HttpDaemon::HandleGet()>
 800aa50:	61a0      	str	r0, [r4, #24]
 800aa52:	69a3      	ldr	r3, [r4, #24]
 800aa54:	2bc8      	cmp	r3, #200	; 0xc8
 800aa56:	d06b      	beq.n	800ab30 <HttpDaemon::Run()+0x118>
 800aa58:	f5b3 7fcf 	cmp.w	r3, #414	; 0x19e
 800aa5c:	d05e      	beq.n	800ab1c <HttpDaemon::Run()+0x104>
 800aa5e:	dc4e      	bgt.n	800aafe <HttpDaemon::Run()+0xe6>
 800aa60:	f5b3 7fca 	cmp.w	r3, #404	; 0x194
 800aa64:	d05c      	beq.n	800ab20 <HttpDaemon::Run()+0x108>
 800aa66:	f240 129d 	movw	r2, #413	; 0x19d
 800aa6a:	4293      	cmp	r3, r2
 800aa6c:	d05a      	beq.n	800ab24 <HttpDaemon::Run()+0x10c>
 800aa6e:	4d32      	ldr	r5, [pc, #200]	; (800ab38 <HttpDaemon::Run()+0x120>)
 800aa70:	4a32      	ldr	r2, [pc, #200]	; (800ab3c <HttpDaemon::Run()+0x124>)
 800aa72:	f5b3 7fc8 	cmp.w	r3, #400	; 0x190
 800aa76:	bf18      	it	ne
 800aa78:	4615      	movne	r5, r2
 800aa7a:	4a31      	ldr	r2, [pc, #196]	; (800ab40 <HttpDaemon::Run()+0x128>)
 800aa7c:	f240 519f 	movw	r1, #1439	; 0x59f
 800aa80:	6022      	str	r2, [r4, #0]
 800aa82:	e9cd 5500 	strd	r5, r5, [sp]
 800aa86:	4a2f      	ldr	r2, [pc, #188]	; (800ab44 <HttpDaemon::Run()+0x12c>)
 800aa88:	482f      	ldr	r0, [pc, #188]	; (800ab48 <HttpDaemon::Run()+0x130>)
 800aa8a:	f7fe fd97 	bl	80095bc <snprintf>
 800aa8e:	8460      	strh	r0, [r4, #34]	; 0x22
 800aa90:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 800aa92:	f240 519f 	movw	r1, #1439	; 0x59f
 800aa96:	9303      	str	r3, [sp, #12]
 800aa98:	6823      	ldr	r3, [r4, #0]
 800aa9a:	4a2c      	ldr	r2, [pc, #176]	; (800ab4c <HttpDaemon::Run()+0x134>)
 800aa9c:	9302      	str	r3, [sp, #8]
 800aa9e:	4b2c      	ldr	r3, [pc, #176]	; (800ab50 <HttpDaemon::Run()+0x138>)
 800aaa0:	68e0      	ldr	r0, [r4, #12]
 800aaa2:	e9cd 5300 	strd	r5, r3, [sp]
 800aaa6:	69a3      	ldr	r3, [r4, #24]
 800aaa8:	f7fe fd88 	bl	80095bc <snprintf>
 800aaac:	e9d4 2103 	ldrd	r2, r1, [r4, #12]
 800aab0:	b283      	uxth	r3, r0
 800aab2:	6830      	ldr	r0, [r6, #0]
 800aab4:	f005 fe03 	bl	80106be <Network::TcpWrite(int, unsigned char const*, unsigned short)>
 800aab8:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 800aaba:	4a23      	ldr	r2, [pc, #140]	; (800ab48 <HttpDaemon::Run()+0x130>)
 800aabc:	6921      	ldr	r1, [r4, #16]
 800aabe:	6830      	ldr	r0, [r6, #0]
 800aac0:	f005 fdfd 	bl	80106be <Network::TcpWrite(int, unsigned char const*, unsigned short)>
 800aac4:	f44f 7202 	mov.w	r2, #520	; 0x208
 800aac8:	2302      	movs	r3, #2
 800aaca:	e9c4 2306 	strd	r2, r3, [r4, #24]
 800aace:	e00b      	b.n	800aae8 <HttpDaemon::Run()+0xd0>
 800aad0:	2b01      	cmp	r3, #1
 800aad2:	d1be      	bne.n	800aa52 <HttpDaemon::Run()+0x3a>
 800aad4:	2100      	movs	r1, #0
 800aad6:	4620      	mov	r0, r4
 800aad8:	f7ff feee 	bl	800a8b8 <HttpDaemon::HandlePost(bool)>
 800aadc:	28c8      	cmp	r0, #200	; 0xc8
 800aade:	61a0      	str	r0, [r4, #24]
 800aae0:	d1b7      	bne.n	800aa52 <HttpDaemon::Run()+0x3a>
 800aae2:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 800aae4:	2b00      	cmp	r3, #0
 800aae6:	d1b4      	bne.n	800aa52 <HttpDaemon::Run()+0x3a>
 800aae8:	b004      	add	sp, #16
 800aaea:	bd70      	pop	{r4, r5, r6, pc}
 800aaec:	2bc8      	cmp	r3, #200	; 0xc8
 800aaee:	d1b0      	bne.n	800aa52 <HttpDaemon::Run()+0x3a>
 800aaf0:	69e1      	ldr	r1, [r4, #28]
 800aaf2:	2901      	cmp	r1, #1
 800aaf4:	d1ad      	bne.n	800aa52 <HttpDaemon::Run()+0x3a>
 800aaf6:	4620      	mov	r0, r4
 800aaf8:	f7ff fede 	bl	800a8b8 <HttpDaemon::HandlePost(bool)>
 800aafc:	e7a8      	b.n	800aa50 <HttpDaemon::Run()+0x38>
 800aafe:	f240 12f5 	movw	r2, #501	; 0x1f5
 800ab02:	4293      	cmp	r3, r2
 800ab04:	d010      	beq.n	800ab28 <HttpDaemon::Run()+0x110>
 800ab06:	f240 12f9 	movw	r2, #505	; 0x1f9
 800ab0a:	4293      	cmp	r3, r2
 800ab0c:	d00e      	beq.n	800ab2c <HttpDaemon::Run()+0x114>
 800ab0e:	4d11      	ldr	r5, [pc, #68]	; (800ab54 <HttpDaemon::Run()+0x13c>)
 800ab10:	4a0a      	ldr	r2, [pc, #40]	; (800ab3c <HttpDaemon::Run()+0x124>)
 800ab12:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800ab16:	bf18      	it	ne
 800ab18:	4615      	movne	r5, r2
 800ab1a:	e7ae      	b.n	800aa7a <HttpDaemon::Run()+0x62>
 800ab1c:	4d0e      	ldr	r5, [pc, #56]	; (800ab58 <HttpDaemon::Run()+0x140>)
 800ab1e:	e7ac      	b.n	800aa7a <HttpDaemon::Run()+0x62>
 800ab20:	4d0e      	ldr	r5, [pc, #56]	; (800ab5c <HttpDaemon::Run()+0x144>)
 800ab22:	e7aa      	b.n	800aa7a <HttpDaemon::Run()+0x62>
 800ab24:	4d0e      	ldr	r5, [pc, #56]	; (800ab60 <HttpDaemon::Run()+0x148>)
 800ab26:	e7a8      	b.n	800aa7a <HttpDaemon::Run()+0x62>
 800ab28:	4d0e      	ldr	r5, [pc, #56]	; (800ab64 <HttpDaemon::Run()+0x14c>)
 800ab2a:	e7a6      	b.n	800aa7a <HttpDaemon::Run()+0x62>
 800ab2c:	4d0e      	ldr	r5, [pc, #56]	; (800ab68 <HttpDaemon::Run()+0x150>)
 800ab2e:	e7a4      	b.n	800aa7a <HttpDaemon::Run()+0x62>
 800ab30:	4d0e      	ldr	r5, [pc, #56]	; (800ab6c <HttpDaemon::Run()+0x154>)
 800ab32:	e7ad      	b.n	800aa90 <HttpDaemon::Run()+0x78>
 800ab34:	2001d348 	andcs	sp, r1, r8, asr #6
 800ab38:	080153d1 	stmdaeq	r1, {r0, r4, r6, r7, r8, r9, ip, lr}
 800ab3c:	08015458 	stmdaeq	r1, {r3, r4, r6, sl, ip, lr}
 800ab40:	08015527 	stmdaeq	r1, {r0, r1, r2, r5, r8, sl, ip, lr}
 800ab44:	08015469 	stmdaeq	r1, {r0, r3, r5, r6, sl, ip, lr}
 800ab48:	20000118 	andcs	r0, r0, r8, lsl r1
 800ab4c:	080154c4 	stmdaeq	r1, {r2, r6, r7, sl, ip, lr}
 800ab50:	0801551c 	stmdaeq	r1, {r2, r3, r4, r8, sl, ip, lr}
 800ab54:	08015415 	stmdaeq	r1, {r0, r2, r4, sl, ip, lr}
 800ab58:	08015400 	stmdaeq	r1, {sl, ip, lr}
 800ab5c:	080153dd 	stmdaeq	r1, {r0, r2, r3, r4, r6, r7, r8, r9, ip, lr}
 800ab60:	080153e7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, r8, r9, ip, lr}
 800ab64:	0801542b 	stmdaeq	r1, {r0, r1, r3, r5, sl, ip, lr}
 800ab68:	08015442 	stmdaeq	r1, {r1, r6, sl, ip, lr}
 800ab6c:	08015466 	stmdaeq	r1, {r1, r2, r5, r6, sl, ip, lr}

0800ab70 <remoteconfig::json_get_list(char*, unsigned short)>:
 800ab70:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ab74:	4b14      	ldr	r3, [pc, #80]	; (800abc8 <remoteconfig::json_get_list(char*, unsigned short)+0x58>)
 800ab76:	f8df 8054 	ldr.w	r8, [pc, #84]	; 800abcc <remoteconfig::json_get_list(char*, unsigned short)+0x5c>
 800ab7a:	681b      	ldr	r3, [r3, #0]
 800ab7c:	b088      	sub	sp, #32
 800ab7e:	4605      	mov	r5, r0
 800ab80:	f8d8 0000 	ldr.w	r0, [r8]
 800ab84:	695c      	ldr	r4, [r3, #20]
 800ab86:	460e      	mov	r6, r1
 800ab88:	f7ff f83e 	bl	8009c08 <RemoteConfig::GetStringNode() const>
 800ab8c:	4607      	mov	r7, r0
 800ab8e:	f8d8 0000 	ldr.w	r0, [r8]
 800ab92:	f7ff f845 	bl	8009c20 <RemoteConfig::GetStringOutput() const>
 800ab96:	4b0e      	ldr	r3, [pc, #56]	; (800abd0 <remoteconfig::json_get_list(char*, unsigned short)+0x60>)
 800ab98:	4631      	mov	r1, r6
 800ab9a:	7a1a      	ldrb	r2, [r3, #8]
 800ab9c:	3309      	adds	r3, #9
 800ab9e:	9303      	str	r3, [sp, #12]
 800aba0:	0e23      	lsrs	r3, r4, #24
 800aba2:	9302      	str	r3, [sp, #8]
 800aba4:	f3c4 4307 	ubfx	r3, r4, #16, #8
 800aba8:	9301      	str	r3, [sp, #4]
 800abaa:	f3c4 2307 	ubfx	r3, r4, #8, #8
 800abae:	e9cd 0205 	strd	r0, r2, [sp, #20]
 800abb2:	9300      	str	r3, [sp, #0]
 800abb4:	4628      	mov	r0, r5
 800abb6:	4a07      	ldr	r2, [pc, #28]	; (800abd4 <remoteconfig::json_get_list(char*, unsigned short)+0x64>)
 800abb8:	9704      	str	r7, [sp, #16]
 800abba:	b2e3      	uxtb	r3, r4
 800abbc:	f7fe fcfe 	bl	80095bc <snprintf>
 800abc0:	b280      	uxth	r0, r0
 800abc2:	b008      	add	sp, #32
 800abc4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800abc8:	2001d348 	andcs	sp, r1, r8, asr #6
 800abcc:	20000114 	andcs	r0, r0, r4, lsl r1
 800abd0:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 800abd4:	08015601 	stmdaeq	r1, {r0, r9, sl, ip, lr}

0800abd8 <remoteconfig::json_get_version(char*, unsigned short)>:
 800abd8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800abda:	2208      	movs	r2, #8
 800abdc:	4b09      	ldr	r3, [pc, #36]	; (800ac04 <remoteconfig::json_get_version(char*, unsigned short)+0x2c>)
 800abde:	9204      	str	r2, [sp, #16]
 800abe0:	f1a3 020b 	sub.w	r2, r3, #11
 800abe4:	9203      	str	r2, [sp, #12]
 800abe6:	220b      	movs	r2, #11
 800abe8:	9202      	str	r2, [sp, #8]
 800abea:	4a07      	ldr	r2, [pc, #28]	; (800ac08 <remoteconfig::json_get_version(char*, unsigned short)+0x30>)
 800abec:	9305      	str	r3, [sp, #20]
 800abee:	3b0e      	subs	r3, #14
 800abf0:	9201      	str	r2, [sp, #4]
 800abf2:	9300      	str	r3, [sp, #0]
 800abf4:	4a05      	ldr	r2, [pc, #20]	; (800ac0c <remoteconfig::json_get_version(char*, unsigned short)+0x34>)
 800abf6:	2303      	movs	r3, #3
 800abf8:	f7fe fce0 	bl	80095bc <snprintf>
 800abfc:	b280      	uxth	r0, r0
 800abfe:	b007      	add	sp, #28
 800ac00:	f85d fb04 	ldr.w	pc, [sp], #4
 800ac04:	2001d9be 			; <UNDEFINED> instruction: 0x2001d9be
 800ac08:	0801551c 	stmdaeq	r1, {r2, r3, r4, r8, sl, ip, lr}
 800ac0c:	08015660 	stmdaeq	r1, {r5, r6, r9, sl, ip, lr}

0800ac10 <remoteconfig::json_get_uptime(char*, unsigned short)>:
 800ac10:	b508      	push	{r3, lr}
 800ac12:	4b05      	ldr	r3, [pc, #20]	; (800ac28 <remoteconfig::json_get_uptime(char*, unsigned short)+0x18>)
 800ac14:	681a      	ldr	r2, [r3, #0]
 800ac16:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800ac1a:	fbb2 f3f3 	udiv	r3, r2, r3
 800ac1e:	4a03      	ldr	r2, [pc, #12]	; (800ac2c <remoteconfig::json_get_uptime(char*, unsigned short)+0x1c>)
 800ac20:	f7fe fccc 	bl	80095bc <snprintf>
 800ac24:	b280      	uxth	r0, r0
 800ac26:	bd08      	pop	{r3, pc}
 800ac28:	2001da24 	andcs	sp, r1, r4, lsr #20
 800ac2c:	080156a6 	stmdaeq	r1, {r1, r2, r5, r7, r9, sl, ip, lr}

0800ac30 <remoteconfig::json_get_display(char*, unsigned short)>:
 800ac30:	b508      	push	{r3, lr}
 800ac32:	4b05      	ldr	r3, [pc, #20]	; (800ac48 <remoteconfig::json_get_display(char*, unsigned short)+0x18>)
 800ac34:	4a05      	ldr	r2, [pc, #20]	; (800ac4c <remoteconfig::json_get_display(char*, unsigned short)+0x1c>)
 800ac36:	681b      	ldr	r3, [r3, #0]
 800ac38:	7c1b      	ldrb	r3, [r3, #16]
 800ac3a:	f083 0301 	eor.w	r3, r3, #1
 800ac3e:	f7fe fcbd 	bl	80095bc <snprintf>
 800ac42:	b280      	uxth	r0, r0
 800ac44:	bd08      	pop	{r3, pc}
 800ac46:	bf00      	nop
 800ac48:	2001d920 	andcs	sp, r1, r0, lsr #18
 800ac4c:	080156b5 	stmdaeq	r1, {r0, r2, r4, r5, r7, r9, sl, ip, lr}

0800ac50 <remoteconfig::json_get_directory(char*, unsigned short)>:
 800ac50:	b508      	push	{r3, lr}
 800ac52:	4a02      	ldr	r2, [pc, #8]	; (800ac5c <remoteconfig::json_get_directory(char*, unsigned short)+0xc>)
 800ac54:	f7fe fcb2 	bl	80095bc <snprintf>
 800ac58:	b280      	uxth	r0, r0
 800ac5a:	bd08      	pop	{r3, pc}
 800ac5c:	080156c4 	stmdaeq	r1, {r2, r6, r7, r9, sl, ip, lr}

0800ac60 <get_file_content(char const*, char*)>:
 800ac60:	2300      	movs	r3, #0
 800ac62:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ac64:	4a10      	ldr	r2, [pc, #64]	; (800aca8 <get_file_content(char const*, char*)+0x48>)
 800ac66:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 800ac6a:	1e46      	subs	r6, r0, #1
 800ac6c:	3c01      	subs	r4, #1
 800ac6e:	f816 7f01 	ldrb.w	r7, [r6, #1]!
 800ac72:	f814 5f01 	ldrb.w	r5, [r4, #1]!
 800ac76:	42bd      	cmp	r5, r7
 800ac78:	d005      	beq.n	800ac86 <get_file_content(char const*, char*)+0x26>
 800ac7a:	3301      	adds	r3, #1
 800ac7c:	2b03      	cmp	r3, #3
 800ac7e:	d1f2      	bne.n	800ac66 <get_file_content(char const*, char*)+0x6>
 800ac80:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800ac84:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ac86:	2d00      	cmp	r5, #0
 800ac88:	d1f1      	bne.n	800ac6e <get_file_content(char const*, char*)+0xe>
 800ac8a:	4608      	mov	r0, r1
 800ac8c:	eb02 02c3 	add.w	r2, r2, r3, lsl #3
 800ac90:	6853      	ldr	r3, [r2, #4]
 800ac92:	3b01      	subs	r3, #1
 800ac94:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800ac98:	f800 2b01 	strb.w	r2, [r0], #1
 800ac9c:	2a00      	cmp	r2, #0
 800ac9e:	d1f9      	bne.n	800ac94 <get_file_content(char const*, char*)+0x34>
 800aca0:	1a40      	subs	r0, r0, r1
 800aca2:	3801      	subs	r0, #1
 800aca4:	e7ee      	b.n	800ac84 <get_file_content(char const*, char*)+0x24>
 800aca6:	bf00      	nop
 800aca8:	080159ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, r8, fp, ip, lr}

0800acac <lightset::Data::Get()>:
 800acac:	4b03      	ldr	r3, [pc, #12]	; (800acbc <lightset::Data::Get()+0x10>)
 800acae:	4804      	ldr	r0, [pc, #16]	; (800acc0 <lightset::Data::Get()+0x14>)
 800acb0:	681a      	ldr	r2, [r3, #0]
 800acb2:	07d2      	lsls	r2, r2, #31
 800acb4:	bf5c      	itt	pl
 800acb6:	2201      	movpl	r2, #1
 800acb8:	601a      	strpl	r2, [r3, #0]
 800acba:	4770      	bx	lr
 800acbc:	200006b8 			; <UNDEFINED> instruction: 0x200006b8
 800acc0:	200006bc 			; <UNDEFINED> instruction: 0x200006bc

0800acc4 <DdpDisplay::DdpDisplay()>:
 800acc4:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800acc8:	b510      	push	{r4, lr}
 800acca:	6083      	str	r3, [r0, #8]
 800accc:	2300      	movs	r3, #0
 800acce:	4604      	mov	r4, r0
 800acd0:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800acd4:	e9c0 3306 	strd	r3, r3, [r0, #24]
 800acd8:	6203      	str	r3, [r0, #32]
 800acda:	4b04      	ldr	r3, [pc, #16]	; (800acec <DdpDisplay::DdpDisplay()+0x28>)
 800acdc:	4601      	mov	r1, r0
 800acde:	6018      	str	r0, [r3, #0]
 800ace0:	4b03      	ldr	r3, [pc, #12]	; (800acf0 <DdpDisplay::DdpDisplay()+0x2c>)
 800ace2:	6818      	ldr	r0, [r3, #0]
 800ace4:	f005 f9e0 	bl	80100a8 <Network::MacAddressCopyTo(unsigned char*)>
 800ace8:	4620      	mov	r0, r4
 800acea:	bd10      	pop	{r4, pc}
 800acec:	2000c7dc 	ldrdcs	ip, [r0], -ip	; <UNPREDICTABLE>
 800acf0:	2001d348 	andcs	sp, r1, r8, asr #6

0800acf4 <DdpDisplay::CalculateOffsets()>:
 800acf4:	2300      	movs	r3, #0
 800acf6:	461a      	mov	r2, r3
 800acf8:	b510      	push	{r4, lr}
 800acfa:	4904      	ldr	r1, [pc, #16]	; (800ad0c <DdpDisplay::CalculateOffsets()+0x18>)
 800acfc:	6944      	ldr	r4, [r0, #20]
 800acfe:	3301      	adds	r3, #1
 800ad00:	4422      	add	r2, r4
 800ad02:	2b08      	cmp	r3, #8
 800ad04:	f841 2b04 	str.w	r2, [r1], #4
 800ad08:	d1f8      	bne.n	800acfc <DdpDisplay::CalculateOffsets()+0x8>
 800ad0a:	bd10      	pop	{r4, pc}
 800ad0c:	2000c73c 	andcs	ip, r0, ip, lsr r7

0800ad10 <DdpDisplay::Start()>:
 800ad10:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ad12:	4d1c      	ldr	r5, [pc, #112]	; (800ad84 <DdpDisplay::Start()+0x74>)
 800ad14:	4604      	mov	r4, r0
 800ad16:	f44f 617d 	mov.w	r1, #4048	; 0xfd0
 800ad1a:	6828      	ldr	r0, [r5, #0]
 800ad1c:	f005 f9be 	bl	801009c <Network::Begin(unsigned short)>
 800ad20:	f104 0124 	add.w	r1, r4, #36	; 0x24
 800ad24:	60a0      	str	r0, [r4, #8]
 800ad26:	460b      	mov	r3, r1
 800ad28:	2000      	movs	r0, #0
 800ad2a:	f104 022e 	add.w	r2, r4, #46	; 0x2e
 800ad2e:	4293      	cmp	r3, r2
 800ad30:	d120      	bne.n	800ad74 <DdpDisplay::Start()+0x64>
 800ad32:	2344      	movs	r3, #68	; 0x44
 800ad34:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
 800ad38:	23fb      	movs	r3, #251	; 0xfb
 800ad3a:	222b      	movs	r2, #43	; 0x2b
 800ad3c:	f884 3027 	strb.w	r3, [r4, #39]	; 0x27
 800ad40:	4623      	mov	r3, r4
 800ad42:	f803 2f2d 	strb.w	r2, [r3, #45]!
 800ad46:	4a10      	ldr	r2, [pc, #64]	; (800ad88 <DdpDisplay::Start()+0x78>)
 800ad48:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800ad4c:	4298      	cmp	r0, r3
 800ad4e:	d114      	bne.n	800ad7a <DdpDisplay::Start()+0x6a>
 800ad50:	682a      	ldr	r2, [r5, #0]
 800ad52:	69d0      	ldr	r0, [r2, #28]
 800ad54:	6953      	ldr	r3, [r2, #20]
 800ad56:	f44f 627d 	mov.w	r2, #4048	; 0xfd0
 800ad5a:	ea63 0300 	orn	r3, r3, r0
 800ad5e:	9200      	str	r2, [sp, #0]
 800ad60:	7a20      	ldrb	r0, [r4, #8]
 800ad62:	2235      	movs	r2, #53	; 0x35
 800ad64:	f004 fcd2 	bl	800f70c <udp_send>
 800ad68:	4620      	mov	r0, r4
 800ad6a:	b002      	add	sp, #8
 800ad6c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ad70:	f7ff bfc0 	b.w	800acf4 <DdpDisplay::CalculateOffsets()>
 800ad74:	f803 0b01 	strb.w	r0, [r3], #1
 800ad78:	e7d9      	b.n	800ad2e <DdpDisplay::Start()+0x1e>
 800ad7a:	f812 6b01 	ldrb.w	r6, [r2], #1
 800ad7e:	f803 6f01 	strb.w	r6, [r3, #1]!
 800ad82:	e7e3      	b.n	800ad4c <DdpDisplay::Start()+0x3c>
 800ad84:	2001d348 	andcs	sp, r1, r8, asr #6
 800ad88:	080161d2 	stmdaeq	r1, {r1, r4, r6, r7, r8, sp, lr}

0800ad8c <DdpDisplay::Stop()>:
 800ad8c:	4b05      	ldr	r3, [pc, #20]	; (800ada4 <DdpDisplay::Stop()+0x18>)
 800ad8e:	b510      	push	{r4, lr}
 800ad90:	f44f 617d 	mov.w	r1, #4048	; 0xfd0
 800ad94:	4604      	mov	r4, r0
 800ad96:	6818      	ldr	r0, [r3, #0]
 800ad98:	f005 f983 	bl	80100a2 <Network::End(unsigned short)>
 800ad9c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800ada0:	60a3      	str	r3, [r4, #8]
 800ada2:	bd10      	pop	{r4, pc}
 800ada4:	2001d348 	andcs	sp, r1, r8, asr #6

0800ada8 <DdpDisplay::HandleQuery()>:
 800ada8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800adac:	f890 3027 	ldrb.w	r3, [r0, #39]	; 0x27
 800adb0:	4605      	mov	r5, r0
 800adb2:	f003 03fb 	and.w	r3, r3, #251	; 0xfb
 800adb6:	2bfb      	cmp	r3, #251	; 0xfb
 800adb8:	b0a1      	sub	sp, #132	; 0x84
 800adba:	d12a      	bne.n	800ae12 <DdpDisplay::HandleQuery()+0x6a>
 800adbc:	7943      	ldrb	r3, [r0, #5]
 800adbe:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800adc2:	9305      	str	r3, [sp, #20]
 800adc4:	7903      	ldrb	r3, [r0, #4]
 800adc6:	4a6a      	ldr	r2, [pc, #424]	; (800af70 <DdpDisplay::HandleQuery()+0x1c8>)
 800adc8:	9304      	str	r3, [sp, #16]
 800adca:	78c3      	ldrb	r3, [r0, #3]
 800adcc:	302e      	adds	r0, #46	; 0x2e
 800adce:	9303      	str	r3, [sp, #12]
 800add0:	f810 3c2c 	ldrb.w	r3, [r0, #-44]
 800add4:	9302      	str	r3, [sp, #8]
 800add6:	f810 3c2d 	ldrb.w	r3, [r0, #-45]
 800adda:	9301      	str	r3, [sp, #4]
 800addc:	f810 3c2e 	ldrb.w	r3, [r0, #-46]
 800ade0:	9300      	str	r3, [sp, #0]
 800ade2:	4b64      	ldr	r3, [pc, #400]	; (800af74 <DdpDisplay::HandleQuery()+0x1cc>)
 800ade4:	f7fe fbea 	bl	80095bc <snprintf>
 800ade8:	2345      	movs	r3, #69	; 0x45
 800adea:	f885 3024 	strb.w	r3, [r5, #36]	; 0x24
 800adee:	ba43      	rev16	r3, r0
 800adf0:	85ab      	strh	r3, [r5, #44]	; 0x2c
 800adf2:	4b61      	ldr	r3, [pc, #388]	; (800af78 <DdpDisplay::HandleQuery()+0x1d0>)
 800adf4:	300a      	adds	r0, #10
 800adf6:	681a      	ldr	r2, [r3, #0]
 800adf8:	69d1      	ldr	r1, [r2, #28]
 800adfa:	6953      	ldr	r3, [r2, #20]
 800adfc:	f44f 627d 	mov.w	r2, #4048	; 0xfd0
 800ae00:	ea63 0301 	orn	r3, r3, r1
 800ae04:	9200      	str	r2, [sp, #0]
 800ae06:	f105 0124 	add.w	r1, r5, #36	; 0x24
 800ae0a:	b282      	uxth	r2, r0
 800ae0c:	7a28      	ldrb	r0, [r5, #8]
 800ae0e:	f004 fc7d 	bl	800f70c <udp_send>
 800ae12:	f895 3027 	ldrb.w	r3, [r5, #39]	; 0x27
 800ae16:	f003 03fb 	and.w	r3, r3, #251	; 0xfb
 800ae1a:	2bfa      	cmp	r3, #250	; 0xfa
 800ae1c:	d171      	bne.n	800af02 <DdpDisplay::HandleQuery()+0x15a>
 800ae1e:	4b56      	ldr	r3, [pc, #344]	; (800af78 <DdpDisplay::HandleQuery()+0x1d0>)
 800ae20:	69ec      	ldr	r4, [r5, #28]
 800ae22:	681a      	ldr	r2, [r3, #0]
 800ae24:	f105 002e 	add.w	r0, r5, #46	; 0x2e
 800ae28:	6953      	ldr	r3, [r2, #20]
 800ae2a:	f3c3 2107 	ubfx	r1, r3, #8, #8
 800ae2e:	fa5f fa83 	uxtb.w	sl, r3
 800ae32:	9117      	str	r1, [sp, #92]	; 0x5c
 800ae34:	f3c3 4107 	ubfx	r1, r3, #16, #8
 800ae38:	0e1b      	lsrs	r3, r3, #24
 800ae3a:	9319      	str	r3, [sp, #100]	; 0x64
 800ae3c:	69d3      	ldr	r3, [r2, #28]
 800ae3e:	9118      	str	r1, [sp, #96]	; 0x60
 800ae40:	b2d9      	uxtb	r1, r3
 800ae42:	911a      	str	r1, [sp, #104]	; 0x68
 800ae44:	f3c3 2107 	ubfx	r1, r3, #8, #8
 800ae48:	911b      	str	r1, [sp, #108]	; 0x6c
 800ae4a:	f3c3 4107 	ubfx	r1, r3, #16, #8
 800ae4e:	0e1b      	lsrs	r3, r3, #24
 800ae50:	931d      	str	r3, [sp, #116]	; 0x74
 800ae52:	6993      	ldr	r3, [r2, #24]
 800ae54:	911c      	str	r1, [sp, #112]	; 0x70
 800ae56:	b2da      	uxtb	r2, r3
 800ae58:	921e      	str	r2, [sp, #120]	; 0x78
 800ae5a:	f3c3 2207 	ubfx	r2, r3, #8, #8
 800ae5e:	921f      	str	r2, [sp, #124]	; 0x7c
 800ae60:	f3c3 4b07 	ubfx	fp, r3, #16, #8
 800ae64:	ea4f 6913 	mov.w	r9, r3, lsr #24
 800ae68:	2c00      	cmp	r4, #0
 800ae6a:	d04d      	beq.n	800af08 <DdpDisplay::HandleQuery()+0x160>
 800ae6c:	2c01      	cmp	r4, #1
 800ae6e:	692a      	ldr	r2, [r5, #16]
 800ae70:	d052      	beq.n	800af18 <DdpDisplay::HandleQuery()+0x170>
 800ae72:	2c02      	cmp	r4, #2
 800ae74:	d058      	beq.n	800af28 <DdpDisplay::HandleQuery()+0x180>
 800ae76:	2c03      	cmp	r4, #3
 800ae78:	d05d      	beq.n	800af36 <DdpDisplay::HandleQuery()+0x18e>
 800ae7a:	2c04      	cmp	r4, #4
 800ae7c:	d062      	beq.n	800af44 <DdpDisplay::HandleQuery()+0x19c>
 800ae7e:	2c05      	cmp	r4, #5
 800ae80:	d067      	beq.n	800af52 <DdpDisplay::HandleQuery()+0x1aa>
 800ae82:	2c06      	cmp	r4, #6
 800ae84:	d06c      	beq.n	800af60 <DdpDisplay::HandleQuery()+0x1b8>
 800ae86:	2c07      	cmp	r4, #7
 800ae88:	4611      	mov	r1, r2
 800ae8a:	4690      	mov	r8, r2
 800ae8c:	4696      	mov	lr, r2
 800ae8e:	4694      	mov	ip, r2
 800ae90:	4617      	mov	r7, r2
 800ae92:	4616      	mov	r6, r2
 800ae94:	d046      	beq.n	800af24 <DdpDisplay::HandleQuery()+0x17c>
 800ae96:	4614      	mov	r4, r2
 800ae98:	2300      	movs	r3, #0
 800ae9a:	e9cd 3313 	strd	r3, r3, [sp, #76]	; 0x4c
 800ae9e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 800aea0:	e9cd 1411 	strd	r1, r4, [sp, #68]	; 0x44
 800aea4:	9308      	str	r3, [sp, #32]
 800aea6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 800aea8:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800aeac:	9307      	str	r3, [sp, #28]
 800aeae:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 800aeb0:	e9cd 260b 	strd	r2, r6, [sp, #44]	; 0x2c
 800aeb4:	9306      	str	r3, [sp, #24]
 800aeb6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800aeb8:	4a30      	ldr	r2, [pc, #192]	; (800af7c <DdpDisplay::HandleQuery()+0x1d4>)
 800aeba:	9305      	str	r3, [sp, #20]
 800aebc:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800aebe:	e9cd e80f 	strd	lr, r8, [sp, #60]	; 0x3c
 800aec2:	9304      	str	r3, [sp, #16]
 800aec4:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 800aec6:	e9cd 7c0d 	strd	r7, ip, [sp, #52]	; 0x34
 800aeca:	9303      	str	r3, [sp, #12]
 800aecc:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800aece:	e9cd b909 	strd	fp, r9, [sp, #36]	; 0x24
 800aed2:	9302      	str	r3, [sp, #8]
 800aed4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 800aed6:	9301      	str	r3, [sp, #4]
 800aed8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800aeda:	9300      	str	r3, [sp, #0]
 800aedc:	4653      	mov	r3, sl
 800aede:	f7fe fb6d 	bl	80095bc <snprintf>
 800aee2:	2345      	movs	r3, #69	; 0x45
 800aee4:	f885 3024 	strb.w	r3, [r5, #36]	; 0x24
 800aee8:	ba43      	rev16	r3, r0
 800aeea:	85ab      	strh	r3, [r5, #44]	; 0x2c
 800aeec:	f44f 637d 	mov.w	r3, #4048	; 0xfd0
 800aef0:	300a      	adds	r0, #10
 800aef2:	9300      	str	r3, [sp, #0]
 800aef4:	b282      	uxth	r2, r0
 800aef6:	68eb      	ldr	r3, [r5, #12]
 800aef8:	7a28      	ldrb	r0, [r5, #8]
 800aefa:	f105 0124 	add.w	r1, r5, #36	; 0x24
 800aefe:	f004 fc05 	bl	800f70c <udp_send>
 800af02:	b021      	add	sp, #132	; 0x84
 800af04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800af08:	4621      	mov	r1, r4
 800af0a:	46a0      	mov	r8, r4
 800af0c:	46a6      	mov	lr, r4
 800af0e:	46a4      	mov	ip, r4
 800af10:	4627      	mov	r7, r4
 800af12:	4626      	mov	r6, r4
 800af14:	4622      	mov	r2, r4
 800af16:	e7bf      	b.n	800ae98 <DdpDisplay::HandleQuery()+0xf0>
 800af18:	2100      	movs	r1, #0
 800af1a:	4688      	mov	r8, r1
 800af1c:	468e      	mov	lr, r1
 800af1e:	468c      	mov	ip, r1
 800af20:	460f      	mov	r7, r1
 800af22:	460e      	mov	r6, r1
 800af24:	2400      	movs	r4, #0
 800af26:	e7b7      	b.n	800ae98 <DdpDisplay::HandleQuery()+0xf0>
 800af28:	2100      	movs	r1, #0
 800af2a:	4616      	mov	r6, r2
 800af2c:	4688      	mov	r8, r1
 800af2e:	468e      	mov	lr, r1
 800af30:	468c      	mov	ip, r1
 800af32:	460f      	mov	r7, r1
 800af34:	e7f6      	b.n	800af24 <DdpDisplay::HandleQuery()+0x17c>
 800af36:	2100      	movs	r1, #0
 800af38:	4617      	mov	r7, r2
 800af3a:	4616      	mov	r6, r2
 800af3c:	4688      	mov	r8, r1
 800af3e:	468e      	mov	lr, r1
 800af40:	468c      	mov	ip, r1
 800af42:	e7ef      	b.n	800af24 <DdpDisplay::HandleQuery()+0x17c>
 800af44:	2100      	movs	r1, #0
 800af46:	4694      	mov	ip, r2
 800af48:	4617      	mov	r7, r2
 800af4a:	4616      	mov	r6, r2
 800af4c:	4688      	mov	r8, r1
 800af4e:	468e      	mov	lr, r1
 800af50:	e7e8      	b.n	800af24 <DdpDisplay::HandleQuery()+0x17c>
 800af52:	2100      	movs	r1, #0
 800af54:	4696      	mov	lr, r2
 800af56:	4694      	mov	ip, r2
 800af58:	4617      	mov	r7, r2
 800af5a:	4616      	mov	r6, r2
 800af5c:	4688      	mov	r8, r1
 800af5e:	e7e1      	b.n	800af24 <DdpDisplay::HandleQuery()+0x17c>
 800af60:	4690      	mov	r8, r2
 800af62:	4696      	mov	lr, r2
 800af64:	4694      	mov	ip, r2
 800af66:	4617      	mov	r7, r2
 800af68:	4616      	mov	r6, r2
 800af6a:	2100      	movs	r1, #0
 800af6c:	e7da      	b.n	800af24 <DdpDisplay::HandleQuery()+0x17c>
 800af6e:	bf00      	nop
 800af70:	0801617a 	stmdaeq	r1, {r1, r3, r4, r5, r6, r8, sp, lr}
 800af74:	08015f2d 	stmdaeq	r1, {r0, r2, r3, r5, r8, r9, sl, fp, ip, lr}
 800af78:	2001d348 	andcs	sp, r1, r8, asr #6
 800af7c:	08015f9a 	stmdaeq	r1, {r1, r3, r4, r7, r8, r9, sl, fp, ip, lr}

0800af80 <DdpDisplay::HandleData()>:
 800af80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800af84:	2500      	movs	r5, #0
 800af86:	4604      	mov	r4, r0
 800af88:	46ab      	mov	fp, r5
 800af8a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800af8c:	b087      	sub	sp, #28
 800af8e:	fa93 f883 	rev.w	r8, r3
 800af92:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800af94:	ba5b      	rev16	r3, r3
 800af96:	b29b      	uxth	r3, r3
 800af98:	9305      	str	r3, [sp, #20]
 800af9a:	f100 032e 	add.w	r3, r0, #46	; 0x2e
 800af9e:	9302      	str	r3, [sp, #8]
 800afa0:	69e3      	ldr	r3, [r4, #28]
 800afa2:	42ab      	cmp	r3, r5
 800afa4:	d901      	bls.n	800afaa <DdpDisplay::HandleData()+0x2a>
 800afa6:	9b05      	ldr	r3, [sp, #20]
 800afa8:	bb33      	cbnz	r3, 800aff8 <DdpDisplay::HandleData()+0x78>
 800afaa:	f894 3024 	ldrb.w	r3, [r4, #36]	; 0x24
 800afae:	07db      	lsls	r3, r3, #31
 800afb0:	d51f      	bpl.n	800aff2 <DdpDisplay::HandleData()+0x72>
 800afb2:	2500      	movs	r5, #0
 800afb4:	f240 6704 	movw	r7, #1540	; 0x604
 800afb8:	462e      	mov	r6, r5
 800afba:	f8d4 9020 	ldr.w	r9, [r4, #32]
 800afbe:	f7ff fe75 	bl	800acac <lightset::Data::Get()>
 800afc2:	fb07 f805 	mul.w	r8, r7, r5
 800afc6:	f8d9 3000 	ldr.w	r3, [r9]
 800afca:	eb00 0108 	add.w	r1, r0, r8
 800afce:	f508 6280 	add.w	r2, r8, #1024	; 0x400
 800afd2:	4402      	add	r2, r0
 800afd4:	f8d3 a010 	ldr.w	sl, [r3, #16]
 800afd8:	4648      	mov	r0, r9
 800afda:	f8d1 3600 	ldr.w	r3, [r1, #1536]	; 0x600
 800afde:	4629      	mov	r1, r5
 800afe0:	47d0      	blx	sl
 800afe2:	f7ff fe63 	bl	800acac <lightset::Data::Get()>
 800afe6:	3501      	adds	r5, #1
 800afe8:	4440      	add	r0, r8
 800afea:	2d20      	cmp	r5, #32
 800afec:	f8c0 6600 	str.w	r6, [r0, #1536]	; 0x600
 800aff0:	d1e3      	bne.n	800afba <DdpDisplay::HandleData()+0x3a>
 800aff2:	b007      	add	sp, #28
 800aff4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800aff8:	1c6b      	adds	r3, r5, #1
 800affa:	00ae      	lsls	r6, r5, #2
 800affc:	9301      	str	r3, [sp, #4]
 800affe:	1d33      	adds	r3, r6, #4
 800b000:	9303      	str	r3, [sp, #12]
 800b002:	4b23      	ldr	r3, [pc, #140]	; (800b090 <DdpDisplay::HandleData()+0x110>)
 800b004:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 800b008:	4543      	cmp	r3, r8
 800b00a:	d902      	bls.n	800b012 <DdpDisplay::HandleData()+0x92>
 800b00c:	9b03      	ldr	r3, [sp, #12]
 800b00e:	429e      	cmp	r6, r3
 800b010:	d301      	bcc.n	800b016 <DdpDisplay::HandleData()+0x96>
 800b012:	9d01      	ldr	r5, [sp, #4]
 800b014:	e7c4      	b.n	800afa0 <DdpDisplay::HandleData()+0x20>
 800b016:	69a1      	ldr	r1, [r4, #24]
 800b018:	f8dd 9014 	ldr.w	r9, [sp, #20]
 800b01c:	6963      	ldr	r3, [r4, #20]
 800b01e:	4589      	cmp	r9, r1
 800b020:	bf36      	itet	cc
 800b022:	4649      	movcc	r1, r9
 800b024:	f104 0218 	addcs.w	r2, r4, #24
 800b028:	aa05      	addcc	r2, sp, #20
 800b02a:	428b      	cmp	r3, r1
 800b02c:	9b02      	ldr	r3, [sp, #8]
 800b02e:	bf98      	it	ls
 800b030:	f104 0214 	addls.w	r2, r4, #20
 800b034:	eb03 0a0b 	add.w	sl, r3, fp
 800b038:	6817      	ldr	r7, [r2, #0]
 800b03a:	f7ff fe37 	bl	800acac <lightset::Data::Get()>
 800b03e:	f240 6304 	movw	r3, #1540	; 0x604
 800b042:	4652      	mov	r2, sl
 800b044:	4373      	muls	r3, r6
 800b046:	1e59      	subs	r1, r3, #1
 800b048:	4401      	add	r1, r0
 800b04a:	eb0a 0c07 	add.w	ip, sl, r7
 800b04e:	4594      	cmp	ip, r2
 800b050:	d114      	bne.n	800b07c <DdpDisplay::HandleData()+0xfc>
 800b052:	f240 6104 	movw	r1, #1540	; 0x604
 800b056:	fb01 0106 	mla	r1, r1, r6, r0
 800b05a:	f203 33ff 	addw	r3, r3, #1023	; 0x3ff
 800b05e:	f8c1 7600 	str.w	r7, [r1, #1536]	; 0x600
 800b062:	4418      	add	r0, r3
 800b064:	4552      	cmp	r2, sl
 800b066:	d10e      	bne.n	800b086 <DdpDisplay::HandleData()+0x106>
 800b068:	4b0a      	ldr	r3, [pc, #40]	; (800b094 <DdpDisplay::HandleData()+0x114>)
 800b06a:	44bb      	add	fp, r7
 800b06c:	f843 7026 	str.w	r7, [r3, r6, lsl #2]
 800b070:	44b8      	add	r8, r7
 800b072:	eba9 0707 	sub.w	r7, r9, r7
 800b076:	9705      	str	r7, [sp, #20]
 800b078:	3601      	adds	r6, #1
 800b07a:	e7c2      	b.n	800b002 <DdpDisplay::HandleData()+0x82>
 800b07c:	f812 eb01 	ldrb.w	lr, [r2], #1
 800b080:	f801 ef01 	strb.w	lr, [r1, #1]!
 800b084:	e7e3      	b.n	800b04e <DdpDisplay::HandleData()+0xce>
 800b086:	f81a 3b01 	ldrb.w	r3, [sl], #1
 800b08a:	f800 3f01 	strb.w	r3, [r0, #1]!
 800b08e:	e7e9      	b.n	800b064 <DdpDisplay::HandleData()+0xe4>
 800b090:	2000c73c 	andcs	ip, r0, ip, lsr r7
 800b094:	2000c75c 	andcs	ip, r0, ip, asr r7

0800b098 <DdpDisplay::Run()>:
 800b098:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800b09a:	f10d 030e 	add.w	r3, sp, #14
 800b09e:	9300      	str	r3, [sp, #0]
 800b0a0:	f100 0124 	add.w	r1, r0, #36	; 0x24
 800b0a4:	f100 030c 	add.w	r3, r0, #12
 800b0a8:	4604      	mov	r4, r0
 800b0aa:	f240 52aa 	movw	r2, #1450	; 0x5aa
 800b0ae:	7a00      	ldrb	r0, [r0, #8]
 800b0b0:	f004 fad0 	bl	800f654 <udp_recv>
 800b0b4:	2809      	cmp	r0, #9
 800b0b6:	d912      	bls.n	800b0de <DdpDisplay::Run()+0x46>
 800b0b8:	4b0d      	ldr	r3, [pc, #52]	; (800b0f0 <DdpDisplay::Run()+0x58>)
 800b0ba:	68e2      	ldr	r2, [r4, #12]
 800b0bc:	681b      	ldr	r3, [r3, #0]
 800b0be:	695b      	ldr	r3, [r3, #20]
 800b0c0:	429a      	cmp	r2, r3
 800b0c2:	d00c      	beq.n	800b0de <DdpDisplay::Run()+0x46>
 800b0c4:	f894 3024 	ldrb.w	r3, [r4, #36]	; 0x24
 800b0c8:	f003 02c0 	and.w	r2, r3, #192	; 0xc0
 800b0cc:	2a40      	cmp	r2, #64	; 0x40
 800b0ce:	d106      	bne.n	800b0de <DdpDisplay::Run()+0x46>
 800b0d0:	f894 2027 	ldrb.w	r2, [r4, #39]	; 0x27
 800b0d4:	2a01      	cmp	r2, #1
 800b0d6:	d104      	bne.n	800b0e2 <DdpDisplay::Run()+0x4a>
 800b0d8:	4620      	mov	r0, r4
 800b0da:	f7ff ff51 	bl	800af80 <DdpDisplay::HandleData()>
 800b0de:	b004      	add	sp, #16
 800b0e0:	bd10      	pop	{r4, pc}
 800b0e2:	079b      	lsls	r3, r3, #30
 800b0e4:	d5fb      	bpl.n	800b0de <DdpDisplay::Run()+0x46>
 800b0e6:	4620      	mov	r0, r4
 800b0e8:	f7ff fe5e 	bl	800ada8 <DdpDisplay::HandleQuery()>
 800b0ec:	e7f7      	b.n	800b0de <DdpDisplay::Run()+0x46>
 800b0ee:	bf00      	nop
 800b0f0:	2001d348 	andcs	sp, r1, r8, asr #6

0800b0f4 <DdpDisplay::Print()>:
 800b0f4:	b510      	push	{r4, lr}
 800b0f6:	4604      	mov	r4, r0
 800b0f8:	4809      	ldr	r0, [pc, #36]	; (800b120 <DdpDisplay::Print()+0x2c>)
 800b0fa:	f007 fbec 	bl	80128d6 <puts>
 800b0fe:	6921      	ldr	r1, [r4, #16]
 800b100:	4808      	ldr	r0, [pc, #32]	; (800b124 <DdpDisplay::Print()+0x30>)
 800b102:	f7fe fa33 	bl	800956c <printf>
 800b106:	e9d4 3104 	ldrd	r3, r1, [r4, #16]
 800b10a:	4807      	ldr	r0, [pc, #28]	; (800b128 <DdpDisplay::Print()+0x34>)
 800b10c:	fbb1 f1f3 	udiv	r1, r1, r3
 800b110:	f7fe fa2c 	bl	800956c <printf>
 800b114:	69e1      	ldr	r1, [r4, #28]
 800b116:	4805      	ldr	r0, [pc, #20]	; (800b12c <DdpDisplay::Print()+0x38>)
 800b118:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b11c:	f7fe ba26 	b.w	800956c <printf>
 800b120:	08015f42 	stmdaeq	r1, {r1, r6, r8, r9, sl, fp, ip, lr}
 800b124:	08015f4f 	stmdaeq	r1, {r0, r1, r2, r3, r6, r8, r9, sl, fp, ip, lr}
 800b128:	08015f68 	stmdaeq	r1, {r3, r5, r6, r8, r9, sl, fp, ip, lr}
 800b12c:	08015f81 	stmdaeq	r1, {r0, r7, r8, r9, sl, fp, ip, lr}

0800b130 <LLRPDevice::~LLRPDevice()>:
 800b130:	4770      	bx	lr

0800b132 <LLRPDevice::CopyUID(unsigned char*)>:
 800b132:	4770      	bx	lr

0800b134 <LLRPDevice::CopyCID(unsigned char*)>:
 800b134:	4770      	bx	lr

0800b136 <LLRPDevice::LLRPHandleRdmCommand(unsigned char const*)>:
 800b136:	2000      	movs	r0, #0
 800b138:	4770      	bx	lr

0800b13a <LLRPDevice::~LLRPDevice()>:
 800b13a:	b510      	push	{r4, lr}
 800b13c:	4604      	mov	r4, r0
 800b13e:	f007 facf 	bl	80126e0 <operator delete(void*)>
 800b142:	4620      	mov	r0, r4
 800b144:	bd10      	pop	{r4, pc}

0800b146 <memcpy.isra.0>:
 800b146:	3801      	subs	r0, #1
 800b148:	440a      	add	r2, r1
 800b14a:	4291      	cmp	r1, r2
 800b14c:	d100      	bne.n	800b150 <memcpy.isra.0+0xa>
 800b14e:	4770      	bx	lr
 800b150:	f811 3b01 	ldrb.w	r3, [r1], #1
 800b154:	f800 3f01 	strb.w	r3, [r0, #1]!
 800b158:	e7f7      	b.n	800b14a <memcpy.isra.0+0x4>
	...

0800b15c <LLRPDevice::LLRPDevice()>:
 800b15c:	b513      	push	{r0, r1, r4, lr}
 800b15e:	4604      	mov	r4, r0
 800b160:	4b09      	ldr	r3, [pc, #36]	; (800b188 <LLRPDevice::LLRPDevice()+0x2c>)
 800b162:	a901      	add	r1, sp, #4
 800b164:	6003      	str	r3, [r0, #0]
 800b166:	4809      	ldr	r0, [pc, #36]	; (800b18c <LLRPDevice::LLRPDevice()+0x30>)
 800b168:	f007 fac2 	bl	80126f0 <inet_aton>
 800b16c:	9a01      	ldr	r2, [sp, #4]
 800b16e:	4b08      	ldr	r3, [pc, #32]	; (800b190 <LLRPDevice::LLRPDevice()+0x34>)
 800b170:	a901      	add	r1, sp, #4
 800b172:	4808      	ldr	r0, [pc, #32]	; (800b194 <LLRPDevice::LLRPDevice()+0x38>)
 800b174:	601a      	str	r2, [r3, #0]
 800b176:	f007 fabb 	bl	80126f0 <inet_aton>
 800b17a:	4620      	mov	r0, r4
 800b17c:	4b06      	ldr	r3, [pc, #24]	; (800b198 <LLRPDevice::LLRPDevice()+0x3c>)
 800b17e:	9a01      	ldr	r2, [sp, #4]
 800b180:	601a      	str	r2, [r3, #0]
 800b182:	b002      	add	sp, #8
 800b184:	bd10      	pop	{r4, pc}
 800b186:	bf00      	nop
 800b188:	080162b0 	stmdaeq	r1, {r4, r5, r7, r9, sp, lr}
 800b18c:	080161fe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r7, r8, sp, lr}
 800b190:	2000c7e4 	andcs	ip, r0, r4, ror #15
 800b194:	0801620e 	stmdaeq	r1, {r1, r2, r3, r9, sp, lr}
 800b198:	2000c7e8 	andcs	ip, r0, r8, ror #15

0800b19c <LLRPDevice::HandleRequestMessage()>:
 800b19c:	b570      	push	{r4, r5, r6, lr}
 800b19e:	4b23      	ldr	r3, [pc, #140]	; (800b22c <LLRPDevice::HandleRequestMessage()+0x90>)
 800b1a0:	b086      	sub	sp, #24
 800b1a2:	681c      	ldr	r4, [r3, #0]
 800b1a4:	4605      	mov	r5, r0
 800b1a6:	f104 0617 	add.w	r6, r4, #23
 800b1aa:	2210      	movs	r2, #16
 800b1ac:	4631      	mov	r1, r6
 800b1ae:	a802      	add	r0, sp, #8
 800b1b0:	f7ff ffc9 	bl	800b146 <memcpy.isra.0>
 800b1b4:	2343      	movs	r3, #67	; 0x43
 800b1b6:	74a3      	strb	r3, [r4, #18]
 800b1b8:	682b      	ldr	r3, [r5, #0]
 800b1ba:	4631      	mov	r1, r6
 800b1bc:	4628      	mov	r0, r5
 800b1be:	68db      	ldr	r3, [r3, #12]
 800b1c0:	4798      	blx	r3
 800b1c2:	232c      	movs	r3, #44	; 0x2c
 800b1c4:	f884 3029 	strb.w	r3, [r4, #41]	; 0x29
 800b1c8:	2300      	movs	r3, #0
 800b1ca:	f884 302a 	strb.w	r3, [r4, #42]	; 0x2a
 800b1ce:	f884 302b 	strb.w	r3, [r4, #43]	; 0x2b
 800b1d2:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 800b1d6:	2302      	movs	r3, #2
 800b1d8:	2210      	movs	r2, #16
 800b1da:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 800b1de:	a902      	add	r1, sp, #8
 800b1e0:	f104 002e 	add.w	r0, r4, #46	; 0x2e
 800b1e4:	f7ff ffaf 	bl	800b146 <memcpy.isra.0>
 800b1e8:	2311      	movs	r3, #17
 800b1ea:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800b1ee:	2301      	movs	r3, #1
 800b1f0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800b1f4:	682b      	ldr	r3, [r5, #0]
 800b1f6:	4628      	mov	r0, r5
 800b1f8:	f104 0146 	add.w	r1, r4, #70	; 0x46
 800b1fc:	689b      	ldr	r3, [r3, #8]
 800b1fe:	4798      	blx	r3
 800b200:	4b0b      	ldr	r3, [pc, #44]	; (800b230 <LLRPDevice::HandleRequestMessage()+0x94>)
 800b202:	f104 014c 	add.w	r1, r4, #76	; 0x4c
 800b206:	6818      	ldr	r0, [r3, #0]
 800b208:	f004 ff4e 	bl	80100a8 <Network::MacAddressCopyTo(unsigned char*)>
 800b20c:	23ff      	movs	r3, #255	; 0xff
 800b20e:	f884 3052 	strb.w	r3, [r4, #82]	; 0x52
 800b212:	f241 53c1 	movw	r3, #5569	; 0x15c1
 800b216:	4807      	ldr	r0, [pc, #28]	; (800b234 <LLRPDevice::HandleRequestMessage()+0x98>)
 800b218:	9300      	str	r3, [sp, #0]
 800b21a:	4b07      	ldr	r3, [pc, #28]	; (800b238 <LLRPDevice::HandleRequestMessage()+0x9c>)
 800b21c:	2253      	movs	r2, #83	; 0x53
 800b21e:	4621      	mov	r1, r4
 800b220:	681b      	ldr	r3, [r3, #0]
 800b222:	7800      	ldrb	r0, [r0, #0]
 800b224:	f004 fa72 	bl	800f70c <udp_send>
 800b228:	b006      	add	sp, #24
 800b22a:	bd70      	pop	{r4, r5, r6, pc}
 800b22c:	2000c7ec 	andcs	ip, r0, ip, ror #15
 800b230:	2001d348 	andcs	sp, r1, r8, asr #6
 800b234:	20000000 	andcs	r0, r0, r0
 800b238:	2000c7e8 	andcs	ip, r0, r8, ror #15

0800b23c <LLRPDevice::HandleRdmCommand()>:
 800b23c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b240:	4b22      	ldr	r3, [pc, #136]	; (800b2cc <LLRPDevice::HandleRdmCommand()+0x90>)
 800b242:	b086      	sub	sp, #24
 800b244:	681c      	ldr	r4, [r3, #0]
 800b246:	6803      	ldr	r3, [r0, #0]
 800b248:	f104 0946 	add.w	r9, r4, #70	; 0x46
 800b24c:	4649      	mov	r1, r9
 800b24e:	691b      	ldr	r3, [r3, #16]
 800b250:	4607      	mov	r7, r0
 800b252:	4798      	blx	r3
 800b254:	4605      	mov	r5, r0
 800b256:	2800      	cmp	r0, #0
 800b258:	d034      	beq.n	800b2c4 <LLRPDevice::HandleRdmCommand()+0x88>
 800b25a:	7803      	ldrb	r3, [r0, #0]
 800b25c:	2bcc      	cmp	r3, #204	; 0xcc
 800b25e:	d131      	bne.n	800b2c4 <LLRPDevice::HandleRdmCommand()+0x88>
 800b260:	f104 0a17 	add.w	sl, r4, #23
 800b264:	2210      	movs	r2, #16
 800b266:	4651      	mov	r1, sl
 800b268:	a802      	add	r0, sp, #8
 800b26a:	f7ff ff6c 	bl	800b146 <memcpy.isra.0>
 800b26e:	78ae      	ldrb	r6, [r5, #2]
 800b270:	4651      	mov	r1, sl
 800b272:	f106 0837 	add.w	r8, r6, #55	; 0x37
 800b276:	fa5f f888 	uxtb.w	r8, r8
 800b27a:	f884 8012 	strb.w	r8, [r4, #18]
 800b27e:	683b      	ldr	r3, [r7, #0]
 800b280:	4638      	mov	r0, r7
 800b282:	68db      	ldr	r3, [r3, #12]
 800b284:	4798      	blx	r3
 800b286:	f106 0320 	add.w	r3, r6, #32
 800b28a:	2210      	movs	r2, #16
 800b28c:	f884 3029 	strb.w	r3, [r4, #41]	; 0x29
 800b290:	a902      	add	r1, sp, #8
 800b292:	f104 002e 	add.w	r0, r4, #46	; 0x2e
 800b296:	f7ff ff56 	bl	800b146 <memcpy.isra.0>
 800b29a:	1d73      	adds	r3, r6, #5
 800b29c:	1c72      	adds	r2, r6, #1
 800b29e:	4648      	mov	r0, r9
 800b2a0:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800b2a4:	b2d2      	uxtb	r2, r2
 800b2a6:	1c69      	adds	r1, r5, #1
 800b2a8:	f7ff ff4d 	bl	800b146 <memcpy.isra.0>
 800b2ac:	f241 53c1 	movw	r3, #5569	; 0x15c1
 800b2b0:	4807      	ldr	r0, [pc, #28]	; (800b2d0 <LLRPDevice::HandleRdmCommand()+0x94>)
 800b2b2:	9300      	str	r3, [sp, #0]
 800b2b4:	4b07      	ldr	r3, [pc, #28]	; (800b2d4 <LLRPDevice::HandleRdmCommand()+0x98>)
 800b2b6:	4621      	mov	r1, r4
 800b2b8:	681b      	ldr	r3, [r3, #0]
 800b2ba:	7800      	ldrb	r0, [r0, #0]
 800b2bc:	f108 0210 	add.w	r2, r8, #16
 800b2c0:	f004 fa24 	bl	800f70c <udp_send>
 800b2c4:	b006      	add	sp, #24
 800b2c6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800b2ca:	bf00      	nop
 800b2cc:	2000c7ec 	andcs	ip, r0, ip, ror #15
 800b2d0:	20000000 	andcs	r0, r0, r0
 800b2d4:	2000c7e8 	andcs	ip, r0, r8, ror #15

0800b2d8 <LLRPDevice::Run()>:
 800b2d8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b2da:	4604      	mov	r4, r0
 800b2dc:	4d0e      	ldr	r5, [pc, #56]	; (800b318 <LLRPDevice::Run()+0x40>)
 800b2de:	480f      	ldr	r0, [pc, #60]	; (800b31c <LLRPDevice::Run()+0x44>)
 800b2e0:	4629      	mov	r1, r5
 800b2e2:	4a0f      	ldr	r2, [pc, #60]	; (800b320 <LLRPDevice::Run()+0x48>)
 800b2e4:	7800      	ldrb	r0, [r0, #0]
 800b2e6:	f10d 0306 	add.w	r3, sp, #6
 800b2ea:	f004 f9e9 	bl	800f6c0 <udp_recv2>
 800b2ee:	2841      	cmp	r0, #65	; 0x41
 800b2f0:	d908      	bls.n	800b304 <LLRPDevice::Run()+0x2c>
 800b2f2:	682b      	ldr	r3, [r5, #0]
 800b2f4:	f8d3 302a 	ldr.w	r3, [r3, #42]	; 0x2a
 800b2f8:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800b2fc:	ba1a      	rev	r2, r3
 800b2fe:	d003      	beq.n	800b308 <LLRPDevice::Run()+0x30>
 800b300:	2a03      	cmp	r2, #3
 800b302:	d005      	beq.n	800b310 <LLRPDevice::Run()+0x38>
 800b304:	b003      	add	sp, #12
 800b306:	bd30      	pop	{r4, r5, pc}
 800b308:	4620      	mov	r0, r4
 800b30a:	f7ff ff47 	bl	800b19c <LLRPDevice::HandleRequestMessage()>
 800b30e:	e7f9      	b.n	800b304 <LLRPDevice::Run()+0x2c>
 800b310:	4620      	mov	r0, r4
 800b312:	f7ff ff93 	bl	800b23c <LLRPDevice::HandleRdmCommand()>
 800b316:	e7f5      	b.n	800b304 <LLRPDevice::Run()+0x2c>
 800b318:	2000c7ec 	andcs	ip, r0, ip, ror #15
 800b31c:	20000000 	andcs	r0, r0, r0
 800b320:	2000c7e0 	andcs	ip, r0, r0, ror #15

0800b324 <LLRPDevice::Print()>:
 800b324:	b507      	push	{r0, r1, r2, lr}
 800b326:	4811      	ldr	r0, [pc, #68]	; (800b36c <LLRPDevice::Print()+0x48>)
 800b328:	f7fe f920 	bl	800956c <printf>
 800b32c:	f241 51c1 	movw	r1, #5569	; 0x15c1
 800b330:	480f      	ldr	r0, [pc, #60]	; (800b370 <LLRPDevice::Print()+0x4c>)
 800b332:	f7fe f91b 	bl	800956c <printf>
 800b336:	4b0f      	ldr	r3, [pc, #60]	; (800b374 <LLRPDevice::Print()+0x50>)
 800b338:	480f      	ldr	r0, [pc, #60]	; (800b378 <LLRPDevice::Print()+0x54>)
 800b33a:	6819      	ldr	r1, [r3, #0]
 800b33c:	0e0b      	lsrs	r3, r1, #24
 800b33e:	9300      	str	r3, [sp, #0]
 800b340:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800b344:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800b348:	b2c9      	uxtb	r1, r1
 800b34a:	f7fe f90f 	bl	800956c <printf>
 800b34e:	4b0b      	ldr	r3, [pc, #44]	; (800b37c <LLRPDevice::Print()+0x58>)
 800b350:	480b      	ldr	r0, [pc, #44]	; (800b380 <LLRPDevice::Print()+0x5c>)
 800b352:	6819      	ldr	r1, [r3, #0]
 800b354:	0e0b      	lsrs	r3, r1, #24
 800b356:	9300      	str	r3, [sp, #0]
 800b358:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800b35c:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800b360:	b2c9      	uxtb	r1, r1
 800b362:	f7fe f903 	bl	800956c <printf>
 800b366:	b003      	add	sp, #12
 800b368:	f85d fb04 	ldr.w	pc, [sp], #4
 800b36c:	0801621e 	stmdaeq	r1, {r1, r2, r3, r4, r9, sp, lr}
 800b370:	08016239 	stmdaeq	r1, {r0, r3, r4, r5, r9, sp, lr}
 800b374:	2000c7e4 	andcs	ip, r0, r4, ror #15
 800b378:	08016257 	stmdaeq	r1, {r0, r1, r2, r4, r6, r9, sp, lr}
 800b37c:	2000c7e8 	andcs	ip, r0, r8, ror #15
 800b380:	0801627e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r9, sp, lr}

0800b384 <RDMNetDevice::Print()>:
 800b384:	2300      	movs	r3, #0
 800b386:	b510      	push	{r4, lr}
 800b388:	4604      	mov	r4, r0
 800b38a:	b08a      	sub	sp, #40	; 0x28
 800b38c:	4669      	mov	r1, sp
 800b38e:	480a      	ldr	r0, [pc, #40]	; (800b3b8 <RDMNetDevice::Print()+0x34>)
 800b390:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800b394:	f001 f94a 	bl	800c62c <uuid_unparse>
 800b398:	4808      	ldr	r0, [pc, #32]	; (800b3bc <RDMNetDevice::Print()+0x38>)
 800b39a:	f7fe f8e7 	bl	800956c <printf>
 800b39e:	4669      	mov	r1, sp
 800b3a0:	4807      	ldr	r0, [pc, #28]	; (800b3c0 <RDMNetDevice::Print()+0x3c>)
 800b3a2:	f7fe f8e3 	bl	800956c <printf>
 800b3a6:	f104 00cc 	add.w	r0, r4, #204	; 0xcc
 800b3aa:	f7ff ffbb 	bl	800b324 <LLRPDevice::Print()>
 800b3ae:	4620      	mov	r0, r4
 800b3b0:	f000 fa38 	bl	800b824 <RDMDeviceResponder::Print()>
 800b3b4:	b00a      	add	sp, #40	; 0x28
 800b3b6:	bd10      	pop	{r4, pc}
 800b3b8:	2000c8ef 	andcs	ip, r0, pc, ror #17
 800b3bc:	080162f6 	stmdaeq	r1, {r1, r2, r4, r5, r6, r7, r9, sp, lr}
 800b3c0:	080162fe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r7, r9, sp, lr}

0800b3c4 <RDMSensors::RDMSensors()>:
 800b3c4:	2200      	movs	r2, #0
 800b3c6:	6002      	str	r2, [r0, #0]
 800b3c8:	7102      	strb	r2, [r0, #4]
 800b3ca:	4a01      	ldr	r2, [pc, #4]	; (800b3d0 <RDMSensors::RDMSensors()+0xc>)
 800b3cc:	6010      	str	r0, [r2, #0]
 800b3ce:	4770      	bx	lr
 800b3d0:	2000c900 	andcs	ip, r0, r0, lsl #18

0800b3d4 <RDMSensors::~RDMSensors()>:
 800b3d4:	b570      	push	{r4, r5, r6, lr}
 800b3d6:	2500      	movs	r5, #0
 800b3d8:	4604      	mov	r4, r0
 800b3da:	462e      	mov	r6, r5
 800b3dc:	7923      	ldrb	r3, [r4, #4]
 800b3de:	6820      	ldr	r0, [r4, #0]
 800b3e0:	42ab      	cmp	r3, r5
 800b3e2:	d804      	bhi.n	800b3ee <RDMSensors::~RDMSensors()+0x1a>
 800b3e4:	b108      	cbz	r0, 800b3ea <RDMSensors::~RDMSensors()+0x16>
 800b3e6:	f007 f97d 	bl	80126e4 <operator delete[](void*)>
 800b3ea:	4620      	mov	r0, r4
 800b3ec:	bd70      	pop	{r4, r5, r6, pc}
 800b3ee:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 800b3f2:	b128      	cbz	r0, 800b400 <RDMSensors::~RDMSensors()+0x2c>
 800b3f4:	6803      	ldr	r3, [r0, #0]
 800b3f6:	685b      	ldr	r3, [r3, #4]
 800b3f8:	4798      	blx	r3
 800b3fa:	6823      	ldr	r3, [r4, #0]
 800b3fc:	f843 6025 	str.w	r6, [r3, r5, lsl #2]
 800b400:	3501      	adds	r5, #1
 800b402:	e7eb      	b.n	800b3dc <RDMSensors::~RDMSensors()+0x8>

0800b404 <RDMSubDevices::RDMSubDevices()>:
 800b404:	2200      	movs	r2, #0
 800b406:	6002      	str	r2, [r0, #0]
 800b408:	8082      	strh	r2, [r0, #4]
 800b40a:	4a01      	ldr	r2, [pc, #4]	; (800b410 <RDMSubDevices::RDMSubDevices()+0xc>)
 800b40c:	6010      	str	r0, [r2, #0]
 800b40e:	4770      	bx	lr
 800b410:	2000c904 	andcs	ip, r0, r4, lsl #18

0800b414 <RDMSubDevices::~RDMSubDevices()>:
 800b414:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b416:	2500      	movs	r5, #0
 800b418:	4604      	mov	r4, r0
 800b41a:	462e      	mov	r6, r5
 800b41c:	88a3      	ldrh	r3, [r4, #4]
 800b41e:	6820      	ldr	r0, [r4, #0]
 800b420:	42ab      	cmp	r3, r5
 800b422:	d804      	bhi.n	800b42e <RDMSubDevices::~RDMSubDevices()+0x1a>
 800b424:	b108      	cbz	r0, 800b42a <RDMSubDevices::~RDMSubDevices()+0x16>
 800b426:	f007 f95d 	bl	80126e4 <operator delete[](void*)>
 800b42a:	4620      	mov	r0, r4
 800b42c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b42e:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 800b432:	00af      	lsls	r7, r5, #2
 800b434:	b110      	cbz	r0, 800b43c <RDMSubDevices::~RDMSubDevices()+0x28>
 800b436:	6803      	ldr	r3, [r0, #0]
 800b438:	685b      	ldr	r3, [r3, #4]
 800b43a:	4798      	blx	r3
 800b43c:	6823      	ldr	r3, [r4, #0]
 800b43e:	3501      	adds	r5, #1
 800b440:	51de      	str	r6, [r3, r7]
 800b442:	e7eb      	b.n	800b41c <RDMSubDevices::~RDMSubDevices()+0x8>

0800b444 <RDMSubDevices::GetInfo(unsigned short)>:
 800b444:	6803      	ldr	r3, [r0, #0]
 800b446:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 800b44a:	3901      	subs	r1, #1
 800b44c:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800b450:	3010      	adds	r0, #16
 800b452:	4770      	bx	lr

0800b454 <RDMSubDevices::GetLabel(unsigned short, TRDMDeviceInfoData*)>:
 800b454:	f101 4380 	add.w	r3, r1, #1073741824	; 0x40000000
 800b458:	6800      	ldr	r0, [r0, #0]
 800b45a:	3b01      	subs	r3, #1
 800b45c:	4611      	mov	r1, r2
 800b45e:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 800b462:	f000 b82f 	b.w	800b4c4 <RDMSubDevice::GetLabel(TRDMDeviceInfoData*)>

0800b466 <RDMSubDevices::SetLabel(unsigned short, char const*, unsigned char)>:
 800b466:	b410      	push	{r4}
 800b468:	460c      	mov	r4, r1
 800b46a:	6800      	ldr	r0, [r0, #0]
 800b46c:	f104 4480 	add.w	r4, r4, #1073741824	; 0x40000000
 800b470:	3c01      	subs	r4, #1
 800b472:	4611      	mov	r1, r2
 800b474:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
 800b478:	461a      	mov	r2, r3
 800b47a:	bc10      	pop	{r4}
 800b47c:	f000 b837 	b.w	800b4ee <RDMSubDevice::SetLabel(char const*, unsigned char)>

0800b480 <RDMSubDevices::GetFactoryDefaults()>:
 800b480:	b538      	push	{r3, r4, r5, lr}
 800b482:	4605      	mov	r5, r0
 800b484:	2400      	movs	r4, #0
 800b486:	88ab      	ldrh	r3, [r5, #4]
 800b488:	42a3      	cmp	r3, r4
 800b48a:	d801      	bhi.n	800b490 <RDMSubDevices::GetFactoryDefaults()+0x10>
 800b48c:	2001      	movs	r0, #1
 800b48e:	e009      	b.n	800b4a4 <RDMSubDevices::GetFactoryDefaults()+0x24>
 800b490:	682b      	ldr	r3, [r5, #0]
 800b492:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 800b496:	b908      	cbnz	r0, 800b49c <RDMSubDevices::GetFactoryDefaults()+0x1c>
 800b498:	3401      	adds	r4, #1
 800b49a:	e7f4      	b.n	800b486 <RDMSubDevices::GetFactoryDefaults()+0x6>
 800b49c:	f000 f85c 	bl	800b558 <RDMSubDevice::GetFactoryDefaults()>
 800b4a0:	2800      	cmp	r0, #0
 800b4a2:	d1f9      	bne.n	800b498 <RDMSubDevices::GetFactoryDefaults()+0x18>
 800b4a4:	bd38      	pop	{r3, r4, r5, pc}

0800b4a6 <RDMSubDevices::SetFactoryDefaults()>:
 800b4a6:	b538      	push	{r3, r4, r5, lr}
 800b4a8:	4605      	mov	r5, r0
 800b4aa:	2400      	movs	r4, #0
 800b4ac:	88ab      	ldrh	r3, [r5, #4]
 800b4ae:	42a3      	cmp	r3, r4
 800b4b0:	d800      	bhi.n	800b4b4 <RDMSubDevices::SetFactoryDefaults()+0xe>
 800b4b2:	bd38      	pop	{r3, r4, r5, pc}
 800b4b4:	682b      	ldr	r3, [r5, #0]
 800b4b6:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 800b4ba:	b108      	cbz	r0, 800b4c0 <RDMSubDevices::SetFactoryDefaults()+0x1a>
 800b4bc:	f000 f826 	bl	800b50c <RDMSubDevice::SetFactoryDefaults()>
 800b4c0:	3401      	adds	r4, #1
 800b4c2:	e7f3      	b.n	800b4ac <RDMSubDevices::SetFactoryDefaults()+0x6>

0800b4c4 <RDMSubDevice::GetLabel(TRDMDeviceInfoData*)>:
 800b4c4:	f100 0316 	add.w	r3, r0, #22
 800b4c8:	600b      	str	r3, [r1, #0]
 800b4ca:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800b4ce:	710b      	strb	r3, [r1, #4]
 800b4d0:	4770      	bx	lr

0800b4d2 <RDMSubDevice::SetLabel(char const*)>:
 800b4d2:	2300      	movs	r3, #0
 800b4d4:	b510      	push	{r4, lr}
 800b4d6:	f100 0415 	add.w	r4, r0, #21
 800b4da:	5cca      	ldrb	r2, [r1, r3]
 800b4dc:	b122      	cbz	r2, 800b4e8 <RDMSubDevice::SetLabel(char const*)+0x16>
 800b4de:	3301      	adds	r3, #1
 800b4e0:	2b20      	cmp	r3, #32
 800b4e2:	f804 2f01 	strb.w	r2, [r4, #1]!
 800b4e6:	d1f8      	bne.n	800b4da <RDMSubDevice::SetLabel(char const*)+0x8>
 800b4e8:	f880 3036 	strb.w	r3, [r0, #54]	; 0x36
 800b4ec:	bd10      	pop	{r4, pc}

0800b4ee <RDMSubDevice::SetLabel(char const*, unsigned char)>:
 800b4ee:	2300      	movs	r3, #0
 800b4f0:	b530      	push	{r4, r5, lr}
 800b4f2:	f100 0415 	add.w	r4, r0, #21
 800b4f6:	429a      	cmp	r2, r3
 800b4f8:	d905      	bls.n	800b506 <RDMSubDevice::SetLabel(char const*, unsigned char)+0x18>
 800b4fa:	5ccd      	ldrb	r5, [r1, r3]
 800b4fc:	3301      	adds	r3, #1
 800b4fe:	2b20      	cmp	r3, #32
 800b500:	f804 5f01 	strb.w	r5, [r4, #1]!
 800b504:	d1f7      	bne.n	800b4f6 <RDMSubDevice::SetLabel(char const*, unsigned char)+0x8>
 800b506:	f880 3036 	strb.w	r3, [r0, #54]	; 0x36
 800b50a:	bd30      	pop	{r4, r5, pc}

0800b50c <RDMSubDevice::SetFactoryDefaults()>:
 800b50c:	7a03      	ldrb	r3, [r0, #8]
 800b50e:	b510      	push	{r4, lr}
 800b510:	b94b      	cbnz	r3, 800b526 <RDMSubDevice::SetFactoryDefaults()+0x1a>
 800b512:	f100 0138 	add.w	r1, r0, #56	; 0x38
 800b516:	f7ff ffdc 	bl	800b4d2 <RDMSubDevice::SetLabel(char const*)>
 800b51a:	8983      	ldrh	r3, [r0, #12]
 800b51c:	8243      	strh	r3, [r0, #18]
 800b51e:	7b83      	ldrb	r3, [r0, #14]
 800b520:	7503      	strb	r3, [r0, #20]
 800b522:	2301      	movs	r3, #1
 800b524:	7203      	strb	r3, [r0, #8]
 800b526:	bd10      	pop	{r4, pc}

0800b528 <RDMSubDevice::CalculateChecksum()>:
 800b528:	4602      	mov	r2, r0
 800b52a:	b510      	push	{r4, lr}
 800b52c:	8a43      	ldrh	r3, [r0, #18]
 800b52e:	7d01      	ldrb	r1, [r0, #20]
 800b530:	f892 4036 	ldrb.w	r4, [r2, #54]	; 0x36
 800b534:	440b      	add	r3, r1
 800b536:	b298      	uxth	r0, r3
 800b538:	f102 0315 	add.w	r3, r2, #21
 800b53c:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
 800b540:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
 800b544:	32eb      	adds	r2, #235	; 0xeb
 800b546:	18d1      	adds	r1, r2, r3
 800b548:	428c      	cmp	r4, r1
 800b54a:	d800      	bhi.n	800b54e <RDMSubDevice::CalculateChecksum()+0x26>
 800b54c:	bd10      	pop	{r4, pc}
 800b54e:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800b552:	4408      	add	r0, r1
 800b554:	b280      	uxth	r0, r0
 800b556:	e7f6      	b.n	800b546 <RDMSubDevice::CalculateChecksum()+0x1e>

0800b558 <RDMSubDevice::GetFactoryDefaults()>:
 800b558:	7a03      	ldrb	r3, [r0, #8]
 800b55a:	b510      	push	{r4, lr}
 800b55c:	4604      	mov	r4, r0
 800b55e:	b133      	cbz	r3, 800b56e <RDMSubDevice::GetFactoryDefaults()+0x16>
 800b560:	f7ff ffe2 	bl	800b528 <RDMSubDevice::CalculateChecksum()>
 800b564:	8963      	ldrh	r3, [r4, #10]
 800b566:	4283      	cmp	r3, r0
 800b568:	bf1c      	itt	ne
 800b56a:	2300      	movne	r3, #0
 800b56c:	7223      	strbne	r3, [r4, #8]
 800b56e:	7a20      	ldrb	r0, [r4, #8]
 800b570:	bd10      	pop	{r4, pc}

0800b572 <memcpy.isra.0>:
 800b572:	f007 b96d 	b.w	8012850 <memcpy>
	...

0800b578 <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)>:
 800b578:	b510      	push	{r4, lr}
 800b57a:	6001      	str	r1, [r0, #0]
 800b57c:	2100      	movs	r1, #0
 800b57e:	4604      	mov	r4, r0
 800b580:	6041      	str	r1, [r0, #4]
 800b582:	2220      	movs	r2, #32
 800b584:	3008      	adds	r0, #8
 800b586:	f007 f985 	bl	8012894 <memset>
 800b58a:	4b03      	ldr	r3, [pc, #12]	; (800b598 <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)+0x20>)
 800b58c:	4620      	mov	r0, r4
 800b58e:	62a3      	str	r3, [r4, #40]	; 0x28
 800b590:	237f      	movs	r3, #127	; 0x7f
 800b592:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 800b596:	bd10      	pop	{r4, pc}
 800b598:	ff7fff00 			; <UNDEFINED> instruction: 0xff7fff00

0800b59c <RDMDeviceParams::Load()>:
 800b59c:	4601      	mov	r1, r0
 800b59e:	6800      	ldr	r0, [r0, #0]
 800b5a0:	b130      	cbz	r0, 800b5b0 <RDMDeviceParams::Load()+0x14>
 800b5a2:	b508      	push	{r3, lr}
 800b5a4:	6803      	ldr	r3, [r0, #0]
 800b5a6:	3104      	adds	r1, #4
 800b5a8:	68db      	ldr	r3, [r3, #12]
 800b5aa:	4798      	blx	r3
 800b5ac:	2001      	movs	r0, #1
 800b5ae:	bd08      	pop	{r3, pc}
 800b5b0:	4770      	bx	lr

0800b5b2 <RDMDeviceParams::Set(RDMDevice*)>:
 800b5b2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b5b4:	6843      	ldr	r3, [r0, #4]
 800b5b6:	460c      	mov	r4, r1
 800b5b8:	07d9      	lsls	r1, r3, #31
 800b5ba:	4605      	mov	r5, r0
 800b5bc:	d518      	bpl.n	800b5f0 <RDMDeviceParams::Set(RDMDevice*)+0x3e>
 800b5be:	f890 6028 	ldrb.w	r6, [r0, #40]	; 0x28
 800b5c2:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 800b5c6:	2e20      	cmp	r6, #32
 800b5c8:	bf28      	it	cs
 800b5ca:	2620      	movcs	r6, #32
 800b5cc:	f100 0108 	add.w	r1, r0, #8
 800b5d0:	b1e3      	cbz	r3, 800b60c <RDMDeviceParams::Set(RDMDevice*)+0x5a>
 800b5d2:	f104 070a 	add.w	r7, r4, #10
 800b5d6:	4638      	mov	r0, r7
 800b5d8:	4632      	mov	r2, r6
 800b5da:	f7ff ffca 	bl	800b572 <memcpy.isra.0>
 800b5de:	6f60      	ldr	r0, [r4, #116]	; 0x74
 800b5e0:	f884 602a 	strb.w	r6, [r4, #42]	; 0x2a
 800b5e4:	b120      	cbz	r0, 800b5f0 <RDMDeviceParams::Set(RDMDevice*)+0x3e>
 800b5e6:	6803      	ldr	r3, [r0, #0]
 800b5e8:	4632      	mov	r2, r6
 800b5ea:	4639      	mov	r1, r7
 800b5ec:	689b      	ldr	r3, [r3, #8]
 800b5ee:	4798      	blx	r3
 800b5f0:	686b      	ldr	r3, [r5, #4]
 800b5f2:	079a      	lsls	r2, r3, #30
 800b5f4:	bf44      	itt	mi
 800b5f6:	f8b5 2029 	ldrhmi.w	r2, [r5, #41]	; 0x29
 800b5fa:	f8a4 204c 	strhmi.w	r2, [r4, #76]	; 0x4c
 800b5fe:	075b      	lsls	r3, r3, #29
 800b600:	bf44      	itt	mi
 800b602:	f8b5 302b 	ldrhmi.w	r3, [r5, #43]	; 0x2b
 800b606:	f8a4 304e 	strhmi.w	r3, [r4, #78]	; 0x4e
 800b60a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b60c:	4632      	mov	r2, r6
 800b60e:	f104 0051 	add.w	r0, r4, #81	; 0x51
 800b612:	f7ff ffae 	bl	800b572 <memcpy.isra.0>
 800b616:	f884 6071 	strb.w	r6, [r4, #113]	; 0x71
 800b61a:	e7e9      	b.n	800b5f0 <RDMDeviceParams::Set(RDMDevice*)+0x3e>

0800b61c <RDMDeviceParams::Dump()>:
 800b61c:	4770      	bx	lr

0800b61e <RDMDeviceResponder::PersonalityUpdate(LightSet*)>:
 800b61e:	4770      	bx	lr

0800b620 <RDMDeviceResponder::DmxStartAddressUpdate()>:
 800b620:	4770      	bx	lr
	...

0800b624 <RDMDeviceResponder::~RDMDeviceResponder()>:
 800b624:	b510      	push	{r4, lr}
 800b626:	4604      	mov	r4, r0
 800b628:	4b05      	ldr	r3, [pc, #20]	; (800b640 <RDMDeviceResponder::~RDMDeviceResponder()+0x1c>)
 800b62a:	f840 3b88 	str.w	r3, [r0], #136
 800b62e:	f7ff fef1 	bl	800b414 <RDMSubDevices::~RDMSubDevices()>
 800b632:	f104 0080 	add.w	r0, r4, #128	; 0x80
 800b636:	f7ff fecd 	bl	800b3d4 <RDMSensors::~RDMSensors()>
 800b63a:	4620      	mov	r0, r4
 800b63c:	bd10      	pop	{r4, pc}
 800b63e:	bf00      	nop
 800b640:	080163c8 	stmdaeq	r1, {r3, r6, r7, r8, r9, sp, lr}

0800b644 <RDMDeviceResponder::~RDMDeviceResponder()>:
 800b644:	b510      	push	{r4, lr}
 800b646:	4604      	mov	r4, r0
 800b648:	f7ff ffec 	bl	800b624 <RDMDeviceResponder::~RDMDeviceResponder()>
 800b64c:	4620      	mov	r0, r4
 800b64e:	f007 f847 	bl	80126e0 <operator delete(void*)>
 800b652:	4620      	mov	r0, r4
 800b654:	bd10      	pop	{r4, pc}
	...

0800b658 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)>:
 800b658:	b570      	push	{r4, r5, r6, lr}
 800b65a:	4604      	mov	r4, r0
 800b65c:	3004      	adds	r0, #4
 800b65e:	460e      	mov	r6, r1
 800b660:	4615      	mov	r5, r2
 800b662:	f000 feeb 	bl	800c43c <RDMDevice::RDMDevice()>
 800b666:	4620      	mov	r0, r4
 800b668:	4b21      	ldr	r3, [pc, #132]	; (800b6f0 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x98>)
 800b66a:	f840 3b7c 	str.w	r3, [r0], #124
 800b66e:	f000 fcf5 	bl	800c05c <RDMIdentify::RDMIdentify()>
 800b672:	f104 0080 	add.w	r0, r4, #128	; 0x80
 800b676:	f7ff fea5 	bl	800b3c4 <RDMSensors::RDMSensors()>
 800b67a:	f104 0088 	add.w	r0, r4, #136	; 0x88
 800b67e:	f7ff fec1 	bl	800b404 <RDMSubDevices::RDMSubDevices()>
 800b682:	4b1c      	ldr	r3, [pc, #112]	; (800b6f4 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x9c>)
 800b684:	2200      	movs	r2, #0
 800b686:	601c      	str	r4, [r3, #0]
 800b688:	2365      	movs	r3, #101	; 0x65
 800b68a:	f884 30bf 	strb.w	r3, [r4, #191]	; 0xbf
 800b68e:	f44f 73b7 	mov.w	r3, #366	; 0x16e
 800b692:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 800b696:	2301      	movs	r3, #1
 800b698:	f8c4 6090 	str.w	r6, [r4, #144]	; 0x90
 800b69c:	f8a4 30c4 	strh.w	r3, [r4, #196]	; 0xc4
 800b6a0:	f8c4 20c8 	str.w	r2, [r4, #200]	; 0xc8
 800b6a4:	f104 0399 	add.w	r3, r4, #153	; 0x99
 800b6a8:	f104 01ac 	add.w	r1, r4, #172	; 0xac
 800b6ac:	428b      	cmp	r3, r1
 800b6ae:	d119      	bne.n	800b6e4 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x8c>
 800b6b0:	2100      	movs	r1, #0
 800b6b2:	f104 02bf 	add.w	r2, r4, #191	; 0xbf
 800b6b6:	4293      	cmp	r3, r2
 800b6b8:	d117      	bne.n	800b6ea <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x92>
 800b6ba:	f884 50a6 	strb.w	r5, [r4, #166]	; 0xa6
 800b6be:	f7fd fc4f 	bl	8008f60 <RDMSoftwareVersion::GetVersion()>
 800b6c2:	f8c4 0094 	str.w	r0, [r4, #148]	; 0x94
 800b6c6:	f7fd fc4f 	bl	8008f68 <RDMSoftwareVersion::GetVersionLength()>
 800b6ca:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800b6ce:	f884 0098 	strb.w	r0, [r4, #152]	; 0x98
 800b6d2:	681b      	ldr	r3, [r3, #0]
 800b6d4:	685b      	ldr	r3, [r3, #4]
 800b6d6:	b91b      	cbnz	r3, 800b6e0 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x88>
 800b6d8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800b6dc:	f8a4 30c4 	strh.w	r3, [r4, #196]	; 0xc4
 800b6e0:	4620      	mov	r0, r4
 800b6e2:	bd70      	pop	{r4, r5, r6, pc}
 800b6e4:	f803 2b01 	strb.w	r2, [r3], #1
 800b6e8:	e7e0      	b.n	800b6ac <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x54>
 800b6ea:	f803 1b01 	strb.w	r1, [r3], #1
 800b6ee:	e7e2      	b.n	800b6b6 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x5e>
 800b6f0:	080163c8 	stmdaeq	r1, {r3, r6, r7, r8, r9, sp, lr}
 800b6f4:	2000c908 	andcs	ip, r0, r8, lsl #18

0800b6f8 <RDMDeviceResponder::Init()>:
 800b6f8:	2301      	movs	r3, #1
 800b6fa:	b570      	push	{r4, r5, r6, lr}
 800b6fc:	4604      	mov	r4, r0
 800b6fe:	f880 3054 	strb.w	r3, [r0, #84]	; 0x54
 800b702:	f894 2075 	ldrb.w	r2, [r4, #117]	; 0x75
 800b706:	3055      	adds	r0, #85	; 0x55
 800b708:	2a20      	cmp	r2, #32
 800b70a:	bf28      	it	cs
 800b70c:	2220      	movcs	r2, #32
 800b70e:	4613      	mov	r3, r2
 800b710:	f104 010e 	add.w	r1, r4, #14
 800b714:	3b01      	subs	r3, #1
 800b716:	d25d      	bcs.n	800b7d4 <RDMDeviceResponder::Init()+0xdc>
 800b718:	6fa0      	ldr	r0, [r4, #120]	; 0x78
 800b71a:	f884 202e 	strb.w	r2, [r4, #46]	; 0x2e
 800b71e:	b110      	cbz	r0, 800b726 <RDMDeviceResponder::Init()+0x2e>
 800b720:	6803      	ldr	r3, [r0, #0]
 800b722:	689b      	ldr	r3, [r3, #8]
 800b724:	4798      	blx	r3
 800b726:	f06f 050c 	mvn.w	r5, #12
 800b72a:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800b72e:	f894 002e 	ldrb.w	r0, [r4, #46]	; 0x2e
 800b732:	f104 020d 	add.w	r2, r4, #13
 800b736:	1b2d      	subs	r5, r5, r4
 800b738:	18a9      	adds	r1, r5, r2
 800b73a:	4288      	cmp	r0, r1
 800b73c:	d84f      	bhi.n	800b7de <RDMDeviceResponder::Init()+0xe6>
 800b73e:	f8a4 3076 	strh.w	r3, [r4, #118]	; 0x76
 800b742:	f7fd fc13 	bl	8008f6c <RDMSoftwareVersion::GetVersionId()>
 800b746:	2201      	movs	r2, #1
 800b748:	f884 2099 	strb.w	r2, [r4, #153]	; 0x99
 800b74c:	2200      	movs	r2, #0
 800b74e:	f8b4 3050 	ldrh.w	r3, [r4, #80]	; 0x50
 800b752:	f8a4 209a 	strh.w	r2, [r4, #154]	; 0x9a
 800b756:	f884 209c 	strb.w	r2, [r4, #156]	; 0x9c
 800b75a:	f884 309e 	strb.w	r3, [r4, #158]	; 0x9e
 800b75e:	0a1a      	lsrs	r2, r3, #8
 800b760:	0e03      	lsrs	r3, r0, #24
 800b762:	f884 309f 	strb.w	r3, [r4, #159]	; 0x9f
 800b766:	0c03      	lsrs	r3, r0, #16
 800b768:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
 800b76c:	0a03      	lsrs	r3, r0, #8
 800b76e:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
 800b772:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800b776:	f884 209d 	strb.w	r2, [r4, #157]	; 0x9d
 800b77a:	f884 00a2 	strb.w	r0, [r4, #162]	; 0xa2
 800b77e:	681b      	ldr	r3, [r3, #0]
 800b780:	f8b4 608c 	ldrh.w	r6, [r4, #140]	; 0x8c
 800b784:	685d      	ldr	r5, [r3, #4]
 800b786:	bb7d      	cbnz	r5, 800b7e8 <RDMDeviceResponder::Init()+0xf0>
 800b788:	f8b4 00c4 	ldrh.w	r0, [r4, #196]	; 0xc4
 800b78c:	f884 50a3 	strb.w	r5, [r4, #163]	; 0xa3
 800b790:	0a03      	lsrs	r3, r0, #8
 800b792:	f884 50a4 	strb.w	r5, [r4, #164]	; 0xa4
 800b796:	f884 30a7 	strb.w	r3, [r4, #167]	; 0xa7
 800b79a:	2301      	movs	r3, #1
 800b79c:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 800b7a0:	0a33      	lsrs	r3, r6, #8
 800b7a2:	f884 30a9 	strb.w	r3, [r4, #169]	; 0xa9
 800b7a6:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 800b7aa:	b2c0      	uxtb	r0, r0
 800b7ac:	f884 30ab 	strb.w	r3, [r4, #171]	; 0xab
 800b7b0:	f884 00a8 	strb.w	r0, [r4, #168]	; 0xa8
 800b7b4:	f884 60aa 	strb.w	r6, [r4, #170]	; 0xaa
 800b7b8:	f104 0399 	add.w	r3, r4, #153	; 0x99
 800b7bc:	f104 02ac 	add.w	r2, r4, #172	; 0xac
 800b7c0:	4293      	cmp	r3, r2
 800b7c2:	d12a      	bne.n	800b81a <RDMDeviceResponder::Init()+0x122>
 800b7c4:	f894 30a8 	ldrb.w	r3, [r4, #168]	; 0xa8
 800b7c8:	f894 20a5 	ldrb.w	r2, [r4, #165]	; 0xa5
 800b7cc:	4413      	add	r3, r2
 800b7ce:	f8a4 30c2 	strh.w	r3, [r4, #194]	; 0xc2
 800b7d2:	bd70      	pop	{r4, r5, r6, pc}
 800b7d4:	f810 5b01 	ldrb.w	r5, [r0], #1
 800b7d8:	f800 5c48 	strb.w	r5, [r0, #-72]
 800b7dc:	e79a      	b.n	800b714 <RDMDeviceResponder::Init()+0x1c>
 800b7de:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800b7e2:	440b      	add	r3, r1
 800b7e4:	b29b      	uxth	r3, r3
 800b7e6:	e7a7      	b.n	800b738 <RDMDeviceResponder::Init()+0x40>
 800b7e8:	682b      	ldr	r3, [r5, #0]
 800b7ea:	4628      	mov	r0, r5
 800b7ec:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b7ee:	4798      	blx	r3
 800b7f0:	0a00      	lsrs	r0, r0, #8
 800b7f2:	f884 00a3 	strb.w	r0, [r4, #163]	; 0xa3
 800b7f6:	682b      	ldr	r3, [r5, #0]
 800b7f8:	4628      	mov	r0, r5
 800b7fa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b7fc:	4798      	blx	r3
 800b7fe:	f884 00a4 	strb.w	r0, [r4, #164]	; 0xa4
 800b802:	682b      	ldr	r3, [r5, #0]
 800b804:	4628      	mov	r0, r5
 800b806:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b808:	4798      	blx	r3
 800b80a:	0a00      	lsrs	r0, r0, #8
 800b80c:	f884 00a7 	strb.w	r0, [r4, #167]	; 0xa7
 800b810:	682b      	ldr	r3, [r5, #0]
 800b812:	4628      	mov	r0, r5
 800b814:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b816:	4798      	blx	r3
 800b818:	e7bf      	b.n	800b79a <RDMDeviceResponder::Init()+0xa2>
 800b81a:	f813 1b01 	ldrb.w	r1, [r3], #1
 800b81e:	7499      	strb	r1, [r3, #18]
 800b820:	e7ce      	b.n	800b7c0 <RDMDeviceResponder::Init()+0xc8>
	...

0800b824 <RDMDeviceResponder::Print()>:
 800b824:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b826:	4604      	mov	r4, r0
 800b828:	3004      	adds	r0, #4
 800b82a:	f000 fe79 	bl	800c520 <RDMDevice::Print()>
 800b82e:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800b832:	481c      	ldr	r0, [pc, #112]	; (800b8a4 <RDMDeviceResponder::Print()+0x80>)
 800b834:	681d      	ldr	r5, [r3, #0]
 800b836:	6aae      	ldr	r6, [r5, #40]	; 0x28
 800b838:	f7fd fe98 	bl	800956c <printf>
 800b83c:	f894 209a 	ldrb.w	r2, [r4, #154]	; 0x9a
 800b840:	f894 1099 	ldrb.w	r1, [r4, #153]	; 0x99
 800b844:	4818      	ldr	r0, [pc, #96]	; (800b8a8 <RDMDeviceResponder::Print()+0x84>)
 800b846:	f7fd fe91 	bl	800956c <printf>
 800b84a:	f894 30a8 	ldrb.w	r3, [r4, #168]	; 0xa8
 800b84e:	f894 10a7 	ldrb.w	r1, [r4, #167]	; 0xa7
 800b852:	4816      	ldr	r0, [pc, #88]	; (800b8ac <RDMDeviceResponder::Print()+0x88>)
 800b854:	eb03 2101 	add.w	r1, r3, r1, lsl #8
 800b858:	f7fd fe88 	bl	800956c <printf>
 800b85c:	f894 30a4 	ldrb.w	r3, [r4, #164]	; 0xa4
 800b860:	f894 10a3 	ldrb.w	r1, [r4, #163]	; 0xa3
 800b864:	3508      	adds	r5, #8
 800b866:	eb03 2101 	add.w	r1, r3, r1, lsl #8
 800b86a:	4811      	ldr	r0, [pc, #68]	; (800b8b0 <RDMDeviceResponder::Print()+0x8c>)
 800b86c:	f7fd fe7e 	bl	800956c <printf>
 800b870:	f894 20a6 	ldrb.w	r2, [r4, #166]	; 0xa6
 800b874:	f894 10a5 	ldrb.w	r1, [r4, #165]	; 0xa5
 800b878:	b2f3      	uxtb	r3, r6
 800b87a:	9500      	str	r5, [sp, #0]
 800b87c:	480d      	ldr	r0, [pc, #52]	; (800b8b4 <RDMDeviceResponder::Print()+0x90>)
 800b87e:	f7fd fe75 	bl	800956c <printf>
 800b882:	f894 10a9 	ldrb.w	r1, [r4, #169]	; 0xa9
 800b886:	f894 30aa 	ldrb.w	r3, [r4, #170]	; 0xaa
 800b88a:	480b      	ldr	r0, [pc, #44]	; (800b8b8 <RDMDeviceResponder::Print()+0x94>)
 800b88c:	eb03 2101 	add.w	r1, r3, r1, lsl #8
 800b890:	f7fd fe6c 	bl	800956c <printf>
 800b894:	f894 10ab 	ldrb.w	r1, [r4, #171]	; 0xab
 800b898:	4808      	ldr	r0, [pc, #32]	; (800b8bc <RDMDeviceResponder::Print()+0x98>)
 800b89a:	b002      	add	sp, #8
 800b89c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b8a0:	f7fd be64 	b.w	800956c <printf>
 800b8a4:	08016309 	stmdaeq	r1, {r0, r3, r8, r9, sp, lr}
 800b8a8:	08016326 	stmdaeq	r1, {r1, r2, r5, r8, r9, sp, lr}
 800b8ac:	0801633f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r8, r9, sp, lr}
 800b8b0:	08016357 	stmdaeq	r1, {r0, r1, r2, r4, r6, r8, r9, sp, lr}
 800b8b4:	0801636f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r8, r9, sp, lr}
 800b8b8:	0801638d 	stmdaeq	r1, {r0, r2, r3, r7, r8, r9, sp, lr}
 800b8bc:	080163a5 	stmdaeq	r1, {r0, r2, r5, r7, r8, r9, sp, lr}

0800b8c0 <memcmp>:
 800b8c0:	b510      	push	{r4, lr}
 800b8c2:	3901      	subs	r1, #1
 800b8c4:	4402      	add	r2, r0
 800b8c6:	4290      	cmp	r0, r2
 800b8c8:	d101      	bne.n	800b8ce <memcmp+0xe>
 800b8ca:	2000      	movs	r0, #0
 800b8cc:	e005      	b.n	800b8da <memcmp+0x1a>
 800b8ce:	7803      	ldrb	r3, [r0, #0]
 800b8d0:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800b8d4:	42a3      	cmp	r3, r4
 800b8d6:	d001      	beq.n	800b8dc <memcmp+0x1c>
 800b8d8:	1b18      	subs	r0, r3, r4
 800b8da:	bd10      	pop	{r4, pc}
 800b8dc:	3001      	adds	r0, #1
 800b8de:	e7f2      	b.n	800b8c6 <memcmp+0x6>

0800b8e0 <memcpy.isra.0>:
 800b8e0:	3801      	subs	r0, #1
 800b8e2:	440a      	add	r2, r1
 800b8e4:	4291      	cmp	r1, r2
 800b8e6:	d100      	bne.n	800b8ea <memcpy.isra.0+0xa>
 800b8e8:	4770      	bx	lr
 800b8ea:	f811 3b01 	ldrb.w	r3, [r1], #1
 800b8ee:	f800 3f01 	strb.w	r3, [r0, #1]!
 800b8f2:	e7f7      	b.n	800b8e4 <memcpy.isra.0+0x4>

0800b8f4 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>:
 800b8f4:	b570      	push	{r4, r5, r6, lr}
 800b8f6:	790d      	ldrb	r5, [r1, #4]
 800b8f8:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
 800b8fc:	2d20      	cmp	r5, #32
 800b8fe:	4604      	mov	r4, r0
 800b900:	bf28      	it	cs
 800b902:	2520      	movcs	r5, #32
 800b904:	6809      	ldr	r1, [r1, #0]
 800b906:	b183      	cbz	r3, 800b92a <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x36>
 800b908:	f100 060a 	add.w	r6, r0, #10
 800b90c:	4630      	mov	r0, r6
 800b90e:	462a      	mov	r2, r5
 800b910:	f7ff ffe6 	bl	800b8e0 <memcpy.isra.0>
 800b914:	6f60      	ldr	r0, [r4, #116]	; 0x74
 800b916:	f884 502a 	strb.w	r5, [r4, #42]	; 0x2a
 800b91a:	b160      	cbz	r0, 800b936 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x42>
 800b91c:	6803      	ldr	r3, [r0, #0]
 800b91e:	462a      	mov	r2, r5
 800b920:	4631      	mov	r1, r6
 800b922:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b926:	689b      	ldr	r3, [r3, #8]
 800b928:	4718      	bx	r3
 800b92a:	462a      	mov	r2, r5
 800b92c:	3051      	adds	r0, #81	; 0x51
 800b92e:	f7ff ffd7 	bl	800b8e0 <memcpy.isra.0>
 800b932:	f884 5071 	strb.w	r5, [r4, #113]	; 0x71
 800b936:	bd70      	pop	{r4, r5, r6, pc}

0800b938 <RDMDeviceResponder::SetFactoryDefaults()>:
 800b938:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b93a:	4604      	mov	r4, r0
 800b93c:	f06f 050c 	mvn.w	r5, #12
 800b940:	f100 0355 	add.w	r3, r0, #85	; 0x55
 800b944:	9300      	str	r3, [sp, #0]
 800b946:	f890 3075 	ldrb.w	r3, [r0, #117]	; 0x75
 800b94a:	4669      	mov	r1, sp
 800b94c:	3004      	adds	r0, #4
 800b94e:	f88d 3004 	strb.w	r3, [sp, #4]
 800b952:	f7ff ffcf 	bl	800b8f4 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>
 800b956:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800b95a:	f894 002e 	ldrb.w	r0, [r4, #46]	; 0x2e
 800b95e:	f104 020d 	add.w	r2, r4, #13
 800b962:	1b2d      	subs	r5, r5, r4
 800b964:	18a9      	adds	r1, r5, r2
 800b966:	4288      	cmp	r0, r1
 800b968:	d865      	bhi.n	800ba36 <RDMDeviceResponder::SetFactoryDefaults()+0xfe>
 800b96a:	f8a4 3076 	strh.w	r3, [r4, #118]	; 0x76
 800b96e:	2301      	movs	r3, #1
 800b970:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 800b974:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800b978:	681b      	ldr	r3, [r3, #0]
 800b97a:	685d      	ldr	r5, [r3, #4]
 800b97c:	b1f5      	cbz	r5, 800b9bc <RDMDeviceResponder::SetFactoryDefaults()+0x84>
 800b97e:	682b      	ldr	r3, [r5, #0]
 800b980:	4628      	mov	r0, r5
 800b982:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b984:	4798      	blx	r3
 800b986:	0a00      	lsrs	r0, r0, #8
 800b988:	f884 00a3 	strb.w	r0, [r4, #163]	; 0xa3
 800b98c:	682b      	ldr	r3, [r5, #0]
 800b98e:	4628      	mov	r0, r5
 800b990:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b992:	4798      	blx	r3
 800b994:	f884 00a4 	strb.w	r0, [r4, #164]	; 0xa4
 800b998:	682b      	ldr	r3, [r5, #0]
 800b99a:	4628      	mov	r0, r5
 800b99c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b99e:	4798      	blx	r3
 800b9a0:	0a00      	lsrs	r0, r0, #8
 800b9a2:	f884 00a7 	strb.w	r0, [r4, #167]	; 0xa7
 800b9a6:	682b      	ldr	r3, [r5, #0]
 800b9a8:	4628      	mov	r0, r5
 800b9aa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b9ac:	4798      	blx	r3
 800b9ae:	6823      	ldr	r3, [r4, #0]
 800b9b0:	f884 00a8 	strb.w	r0, [r4, #168]	; 0xa8
 800b9b4:	4629      	mov	r1, r5
 800b9b6:	4620      	mov	r0, r4
 800b9b8:	689b      	ldr	r3, [r3, #8]
 800b9ba:	4798      	blx	r3
 800b9bc:	f8b4 50c4 	ldrh.w	r5, [r4, #196]	; 0xc4
 800b9c0:	1e6b      	subs	r3, r5, #1
 800b9c2:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800b9c6:	d218      	bcs.n	800b9fa <RDMDeviceResponder::SetFactoryDefaults()+0xc2>
 800b9c8:	f894 30a5 	ldrb.w	r3, [r4, #165]	; 0xa5
 800b9cc:	f8d4 2090 	ldr.w	r2, [r4, #144]	; 0x90
 800b9d0:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800b9d4:	3b01      	subs	r3, #1
 800b9d6:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800b9da:	6858      	ldr	r0, [r3, #4]
 800b9dc:	b168      	cbz	r0, 800b9fa <RDMDeviceResponder::SetFactoryDefaults()+0xc2>
 800b9de:	6803      	ldr	r3, [r0, #0]
 800b9e0:	4629      	mov	r1, r5
 800b9e2:	6a1b      	ldr	r3, [r3, #32]
 800b9e4:	4798      	blx	r3
 800b9e6:	b120      	cbz	r0, 800b9f2 <RDMDeviceResponder::SetFactoryDefaults()+0xba>
 800b9e8:	0a2b      	lsrs	r3, r5, #8
 800b9ea:	f884 30a7 	strb.w	r3, [r4, #167]	; 0xa7
 800b9ee:	f884 50a8 	strb.w	r5, [r4, #168]	; 0xa8
 800b9f2:	6823      	ldr	r3, [r4, #0]
 800b9f4:	4620      	mov	r0, r4
 800b9f6:	68db      	ldr	r3, [r3, #12]
 800b9f8:	4798      	blx	r3
 800b9fa:	2213      	movs	r2, #19
 800b9fc:	f104 0199 	add.w	r1, r4, #153	; 0x99
 800ba00:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 800ba04:	f7ff ff6c 	bl	800b8e0 <memcpy.isra.0>
 800ba08:	f104 0088 	add.w	r0, r4, #136	; 0x88
 800ba0c:	f7ff fd4b 	bl	800b4a6 <RDMSubDevices::SetFactoryDefaults()>
 800ba10:	f894 30a8 	ldrb.w	r3, [r4, #168]	; 0xa8
 800ba14:	f894 20a5 	ldrb.w	r2, [r4, #165]	; 0xa5
 800ba18:	f8d4 00c8 	ldr.w	r0, [r4, #200]	; 0xc8
 800ba1c:	4413      	add	r3, r2
 800ba1e:	f8a4 30c2 	strh.w	r3, [r4, #194]	; 0xc2
 800ba22:	2301      	movs	r3, #1
 800ba24:	f884 30c1 	strb.w	r3, [r4, #193]	; 0xc1
 800ba28:	b150      	cbz	r0, 800ba40 <RDMDeviceResponder::SetFactoryDefaults()+0x108>
 800ba2a:	6803      	ldr	r3, [r0, #0]
 800ba2c:	689b      	ldr	r3, [r3, #8]
 800ba2e:	b003      	add	sp, #12
 800ba30:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800ba34:	4718      	bx	r3
 800ba36:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800ba3a:	440b      	add	r3, r1
 800ba3c:	b29b      	uxth	r3, r3
 800ba3e:	e791      	b.n	800b964 <RDMDeviceResponder::SetFactoryDefaults()+0x2c>
 800ba40:	b003      	add	sp, #12
 800ba42:	bd30      	pop	{r4, r5, pc}

0800ba44 <RDMHandler::RDMHandler(bool)>:
 800ba44:	2200      	movs	r2, #0
 800ba46:	7001      	strb	r1, [r0, #0]
 800ba48:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800ba4c:	7042      	strb	r2, [r0, #1]
 800ba4e:	4770      	bx	lr

0800ba50 <RDMHandler::HandleString(char const*, unsigned int)>:
 800ba50:	6883      	ldr	r3, [r0, #8]
 800ba52:	f803 2f17 	strb.w	r2, [r3, #23]!
 800ba56:	440a      	add	r2, r1
 800ba58:	4291      	cmp	r1, r2
 800ba5a:	d100      	bne.n	800ba5e <RDMHandler::HandleString(char const*, unsigned int)+0xe>
 800ba5c:	4770      	bx	lr
 800ba5e:	f811 0b01 	ldrb.w	r0, [r1], #1
 800ba62:	f803 0f01 	strb.w	r0, [r3, #1]!
 800ba66:	e7f7      	b.n	800ba58 <RDMHandler::HandleString(char const*, unsigned int)+0x8>

0800ba68 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)>:
 800ba68:	b570      	push	{r4, r5, r6, lr}
 800ba6a:	e9d0 4301 	ldrd	r4, r3, [r0, #4]
 800ba6e:	25cc      	movs	r5, #204	; 0xcc
 800ba70:	701d      	strb	r5, [r3, #0]
 800ba72:	7825      	ldrb	r5, [r4, #0]
 800ba74:	705d      	strb	r5, [r3, #1]
 800ba76:	7ba5      	ldrb	r5, [r4, #14]
 800ba78:	73dd      	strb	r5, [r3, #15]
 800ba7a:	2500      	movs	r5, #0
 800ba7c:	745d      	strb	r5, [r3, #17]
 800ba7e:	7c65      	ldrb	r5, [r4, #17]
 800ba80:	749d      	strb	r5, [r3, #18]
 800ba82:	7ca5      	ldrb	r5, [r4, #18]
 800ba84:	74dd      	strb	r5, [r3, #19]
 800ba86:	7ce5      	ldrb	r5, [r4, #19]
 800ba88:	3501      	adds	r5, #1
 800ba8a:	751d      	strb	r5, [r3, #20]
 800ba8c:	7d25      	ldrb	r5, [r4, #20]
 800ba8e:	755d      	strb	r5, [r3, #21]
 800ba90:	7d65      	ldrb	r5, [r4, #21]
 800ba92:	759d      	strb	r5, [r3, #22]
 800ba94:	b119      	cbz	r1, 800ba9e <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x36>
 800ba96:	1e4d      	subs	r5, r1, #1
 800ba98:	2d01      	cmp	r5, #1
 800ba9a:	d921      	bls.n	800bae0 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x78>
 800ba9c:	bd70      	pop	{r4, r5, r6, pc}
 800ba9e:	7dda      	ldrb	r2, [r3, #23]
 800baa0:	7419      	strb	r1, [r3, #16]
 800baa2:	3218      	adds	r2, #24
 800baa4:	709a      	strb	r2, [r3, #2]
 800baa6:	4a15      	ldr	r2, [pc, #84]	; (800bafc <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x94>)
 800baa8:	1de1      	adds	r1, r4, #7
 800baaa:	6812      	ldr	r2, [r2, #0]
 800baac:	1c9d      	adds	r5, r3, #2
 800baae:	3203      	adds	r2, #3
 800bab0:	340d      	adds	r4, #13
 800bab2:	f811 6f01 	ldrb.w	r6, [r1, #1]!
 800bab6:	f805 6f01 	strb.w	r6, [r5, #1]!
 800baba:	f812 6f01 	ldrb.w	r6, [r2, #1]!
 800babe:	42a1      	cmp	r1, r4
 800bac0:	71ae      	strb	r6, [r5, #6]
 800bac2:	d1f6      	bne.n	800bab2 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x4a>
 800bac4:	2200      	movs	r2, #0
 800bac6:	7899      	ldrb	r1, [r3, #2]
 800bac8:	4613      	mov	r3, r2
 800baca:	6884      	ldr	r4, [r0, #8]
 800bacc:	428a      	cmp	r2, r1
 800bace:	eb04 0502 	add.w	r5, r4, r2
 800bad2:	d30e      	bcc.n	800baf2 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x8a>
 800bad4:	0a1a      	lsrs	r2, r3, #8
 800bad6:	702a      	strb	r2, [r5, #0]
 800bad8:	6882      	ldr	r2, [r0, #8]
 800bada:	440a      	add	r2, r1
 800badc:	7053      	strb	r3, [r2, #1]
 800bade:	e7dd      	b.n	800ba9c <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x34>
 800bae0:	7419      	strb	r1, [r3, #16]
 800bae2:	2102      	movs	r1, #2
 800bae4:	251a      	movs	r5, #26
 800bae6:	75d9      	strb	r1, [r3, #23]
 800bae8:	0a11      	lsrs	r1, r2, #8
 800baea:	709d      	strb	r5, [r3, #2]
 800baec:	7619      	strb	r1, [r3, #24]
 800baee:	765a      	strb	r2, [r3, #25]
 800baf0:	e7d9      	b.n	800baa6 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x3e>
 800baf2:	5ca5      	ldrb	r5, [r4, r2]
 800baf4:	3201      	adds	r2, #1
 800baf6:	442b      	add	r3, r5
 800baf8:	b29b      	uxth	r3, r3
 800bafa:	e7e7      	b.n	800bacc <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x64>
 800bafc:	2000c908 	andcs	ip, r0, r8, lsl #18

0800bb00 <RDMHandler::RespondMessageAck()>:
 800bb00:	6843      	ldr	r3, [r0, #4]
 800bb02:	7d9a      	ldrb	r2, [r3, #22]
 800bb04:	b90a      	cbnz	r2, 800bb0a <RDMHandler::RespondMessageAck()+0xa>
 800bb06:	2218      	movs	r2, #24
 800bb08:	705a      	strb	r2, [r3, #1]
 800bb0a:	2200      	movs	r2, #0
 800bb0c:	4611      	mov	r1, r2
 800bb0e:	f7ff bfab 	b.w	800ba68 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)>
	...

0800bb14 <RDMHandler::GetDeviceInfo(unsigned short)>:
 800bb14:	b538      	push	{r3, r4, r5, lr}
 800bb16:	4b18      	ldr	r3, [pc, #96]	; (800bb78 <RDMHandler::GetDeviceInfo(unsigned short)+0x64>)
 800bb18:	4605      	mov	r5, r0
 800bb1a:	681c      	ldr	r4, [r3, #0]
 800bb1c:	b349      	cbz	r1, 800bb72 <RDMHandler::GetDeviceInfo(unsigned short)+0x5e>
 800bb1e:	f104 0088 	add.w	r0, r4, #136	; 0x88
 800bb22:	f7ff fc8f 	bl	800b444 <RDMSubDevices::GetInfo(unsigned short)>
 800bb26:	b1b8      	cbz	r0, 800bb58 <RDMHandler::GetDeviceInfo(unsigned short)+0x44>
 800bb28:	8803      	ldrh	r3, [r0, #0]
 800bb2a:	0a1b      	lsrs	r3, r3, #8
 800bb2c:	f884 30b6 	strb.w	r3, [r4, #182]	; 0xb6
 800bb30:	8803      	ldrh	r3, [r0, #0]
 800bb32:	f884 30b7 	strb.w	r3, [r4, #183]	; 0xb7
 800bb36:	7903      	ldrb	r3, [r0, #4]
 800bb38:	f884 30b8 	strb.w	r3, [r4, #184]	; 0xb8
 800bb3c:	7943      	ldrb	r3, [r0, #5]
 800bb3e:	f884 30b9 	strb.w	r3, [r4, #185]	; 0xb9
 800bb42:	8843      	ldrh	r3, [r0, #2]
 800bb44:	0a1b      	lsrs	r3, r3, #8
 800bb46:	f884 30ba 	strb.w	r3, [r4, #186]	; 0xba
 800bb4a:	8843      	ldrh	r3, [r0, #2]
 800bb4c:	f884 30bb 	strb.w	r3, [r4, #187]	; 0xbb
 800bb50:	f890 3027 	ldrb.w	r3, [r0, #39]	; 0x27
 800bb54:	f884 30be 	strb.w	r3, [r4, #190]	; 0xbe
 800bb58:	f104 01ac 	add.w	r1, r4, #172	; 0xac
 800bb5c:	2213      	movs	r2, #19
 800bb5e:	68a8      	ldr	r0, [r5, #8]
 800bb60:	75c2      	strb	r2, [r0, #23]
 800bb62:	3018      	adds	r0, #24
 800bb64:	f7ff febc 	bl	800b8e0 <memcpy.isra.0>
 800bb68:	4628      	mov	r0, r5
 800bb6a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800bb6e:	f7ff bfc7 	b.w	800bb00 <RDMHandler::RespondMessageAck()>
 800bb72:	f104 0199 	add.w	r1, r4, #153	; 0x99
 800bb76:	e7f1      	b.n	800bb5c <RDMHandler::GetDeviceInfo(unsigned short)+0x48>
 800bb78:	2000c908 	andcs	ip, r0, r8, lsl #18

0800bb7c <RDMHandler::GetFactoryDefaults(unsigned short)>:
 800bb7c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800bb7e:	2301      	movs	r3, #1
 800bb80:	6886      	ldr	r6, [r0, #8]
 800bb82:	4605      	mov	r5, r0
 800bb84:	75f3      	strb	r3, [r6, #23]
 800bb86:	4b1c      	ldr	r3, [pc, #112]	; (800bbf8 <RDMHandler::GetFactoryDefaults(unsigned short)+0x7c>)
 800bb88:	681c      	ldr	r4, [r3, #0]
 800bb8a:	f894 30c1 	ldrb.w	r3, [r4, #193]	; 0xc1
 800bb8e:	b37b      	cbz	r3, 800bbf0 <RDMHandler::GetFactoryDefaults(unsigned short)+0x74>
 800bb90:	f06f 0c0c 	mvn.w	ip, #12
 800bb94:	f8b4 1076 	ldrh.w	r1, [r4, #118]	; 0x76
 800bb98:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800bb9c:	f894 002e 	ldrb.w	r0, [r4, #46]	; 0x2e
 800bba0:	f104 020d 	add.w	r2, r4, #13
 800bba4:	ebac 0c04 	sub.w	ip, ip, r4
 800bba8:	eb0c 0702 	add.w	r7, ip, r2
 800bbac:	4287      	cmp	r7, r0
 800bbae:	d30a      	bcc.n	800bbc6 <RDMHandler::GetFactoryDefaults(unsigned short)+0x4a>
 800bbb0:	4299      	cmp	r1, r3
 800bbb2:	d00d      	beq.n	800bbd0 <RDMHandler::GetFactoryDefaults(unsigned short)+0x54>
 800bbb4:	2300      	movs	r3, #0
 800bbb6:	f884 30c1 	strb.w	r3, [r4, #193]	; 0xc1
 800bbba:	7633      	strb	r3, [r6, #24]
 800bbbc:	4628      	mov	r0, r5
 800bbbe:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800bbc2:	f7ff bf9d 	b.w	800bb00 <RDMHandler::RespondMessageAck()>
 800bbc6:	f812 7f01 	ldrb.w	r7, [r2, #1]!
 800bbca:	443b      	add	r3, r7
 800bbcc:	b29b      	uxth	r3, r3
 800bbce:	e7eb      	b.n	800bba8 <RDMHandler::GetFactoryDefaults(unsigned short)+0x2c>
 800bbd0:	f894 30a8 	ldrb.w	r3, [r4, #168]	; 0xa8
 800bbd4:	f894 10a5 	ldrb.w	r1, [r4, #165]	; 0xa5
 800bbd8:	f8b4 20c2 	ldrh.w	r2, [r4, #194]	; 0xc2
 800bbdc:	440b      	add	r3, r1
 800bbde:	429a      	cmp	r2, r3
 800bbe0:	d1e8      	bne.n	800bbb4 <RDMHandler::GetFactoryDefaults(unsigned short)+0x38>
 800bbe2:	f104 0088 	add.w	r0, r4, #136	; 0x88
 800bbe6:	f7ff fc4b 	bl	800b480 <RDMSubDevices::GetFactoryDefaults()>
 800bbea:	4603      	mov	r3, r0
 800bbec:	2800      	cmp	r0, #0
 800bbee:	d0e2      	beq.n	800bbb6 <RDMHandler::GetFactoryDefaults(unsigned short)+0x3a>
 800bbf0:	f894 30c1 	ldrb.w	r3, [r4, #193]	; 0xc1
 800bbf4:	e7e1      	b.n	800bbba <RDMHandler::GetFactoryDefaults(unsigned short)+0x3e>
 800bbf6:	bf00      	nop
 800bbf8:	2000c908 	andcs	ip, r0, r8, lsl #18

0800bbfc <RDMHandler::GetDeviceModelDescription(unsigned short)>:
 800bbfc:	b510      	push	{r4, lr}
 800bbfe:	4604      	mov	r4, r0
 800bc00:	220a      	movs	r2, #10
 800bc02:	4904      	ldr	r1, [pc, #16]	; (800bc14 <RDMHandler::GetDeviceModelDescription(unsigned short)+0x18>)
 800bc04:	f7ff ff24 	bl	800ba50 <RDMHandler::HandleString(char const*, unsigned int)>
 800bc08:	4620      	mov	r0, r4
 800bc0a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bc0e:	f7ff bf77 	b.w	800bb00 <RDMHandler::RespondMessageAck()>
 800bc12:	bf00      	nop
 800bc14:	0801551c 	stmdaeq	r1, {r2, r3, r4, r8, sl, ip, lr}

0800bc18 <RDMHandler::GetManufacturerLabel(unsigned short)>:
 800bc18:	b510      	push	{r4, lr}
 800bc1a:	4604      	mov	r4, r0
 800bc1c:	4b05      	ldr	r3, [pc, #20]	; (800bc34 <RDMHandler::GetManufacturerLabel(unsigned short)+0x1c>)
 800bc1e:	6819      	ldr	r1, [r3, #0]
 800bc20:	f891 204f 	ldrb.w	r2, [r1, #79]	; 0x4f
 800bc24:	312f      	adds	r1, #47	; 0x2f
 800bc26:	f7ff ff13 	bl	800ba50 <RDMHandler::HandleString(char const*, unsigned int)>
 800bc2a:	4620      	mov	r0, r4
 800bc2c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bc30:	f7ff bf66 	b.w	800bb00 <RDMHandler::RespondMessageAck()>
 800bc34:	2000c908 	andcs	ip, r0, r8, lsl #18

0800bc38 <RDMHandler::GetDeviceLabel(unsigned short)>:
 800bc38:	4b0d      	ldr	r3, [pc, #52]	; (800bc70 <RDMHandler::GetDeviceLabel(unsigned short)+0x38>)
 800bc3a:	b513      	push	{r0, r1, r4, lr}
 800bc3c:	4604      	mov	r4, r0
 800bc3e:	6818      	ldr	r0, [r3, #0]
 800bc40:	b171      	cbz	r1, 800bc60 <RDMHandler::GetDeviceLabel(unsigned short)+0x28>
 800bc42:	466a      	mov	r2, sp
 800bc44:	3088      	adds	r0, #136	; 0x88
 800bc46:	f7ff fc05 	bl	800b454 <RDMSubDevices::GetLabel(unsigned short, TRDMDeviceInfoData*)>
 800bc4a:	4620      	mov	r0, r4
 800bc4c:	f89d 2004 	ldrb.w	r2, [sp, #4]
 800bc50:	9900      	ldr	r1, [sp, #0]
 800bc52:	f7ff fefd 	bl	800ba50 <RDMHandler::HandleString(char const*, unsigned int)>
 800bc56:	4620      	mov	r0, r4
 800bc58:	f7ff ff52 	bl	800bb00 <RDMHandler::RespondMessageAck()>
 800bc5c:	b002      	add	sp, #8
 800bc5e:	bd10      	pop	{r4, pc}
 800bc60:	f100 030e 	add.w	r3, r0, #14
 800bc64:	9300      	str	r3, [sp, #0]
 800bc66:	f890 302e 	ldrb.w	r3, [r0, #46]	; 0x2e
 800bc6a:	f88d 3004 	strb.w	r3, [sp, #4]
 800bc6e:	e7ec      	b.n	800bc4a <RDMHandler::GetDeviceLabel(unsigned short)+0x12>
 800bc70:	2000c908 	andcs	ip, r0, r8, lsl #18

0800bc74 <RDMHandler::GetIdentifyDevice(unsigned short)>:
 800bc74:	2201      	movs	r2, #1
 800bc76:	6883      	ldr	r3, [r0, #8]
 800bc78:	75da      	strb	r2, [r3, #23]
 800bc7a:	4a02      	ldr	r2, [pc, #8]	; (800bc84 <RDMHandler::GetIdentifyDevice(unsigned short)+0x10>)
 800bc7c:	7812      	ldrb	r2, [r2, #0]
 800bc7e:	761a      	strb	r2, [r3, #24]
 800bc80:	f7ff bf3e 	b.w	800bb00 <RDMHandler::RespondMessageAck()>
 800bc84:	2000c90c 	andcs	ip, r0, ip, lsl #18

0800bc88 <RDMHandler::RespondMessageNack(unsigned short)>:
 800bc88:	460a      	mov	r2, r1
 800bc8a:	2102      	movs	r1, #2
 800bc8c:	f7ff beec 	b.w	800ba68 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)>

0800bc90 <RDMHandler::SetResetDevice(bool, unsigned short)>:
 800bc90:	b510      	push	{r4, lr}
 800bc92:	6843      	ldr	r3, [r0, #4]
 800bc94:	4604      	mov	r4, r0
 800bc96:	7d9a      	ldrb	r2, [r3, #22]
 800bc98:	2a01      	cmp	r2, #1
 800bc9a:	d004      	beq.n	800bca6 <RDMHandler::SetResetDevice(bool, unsigned short)+0x16>
 800bc9c:	2101      	movs	r1, #1
 800bc9e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bca2:	f7ff bff1 	b.w	800bc88 <RDMHandler::RespondMessageNack(unsigned short)>
 800bca6:	7ddb      	ldrb	r3, [r3, #23]
 800bca8:	2b01      	cmp	r3, #1
 800bcaa:	d003      	beq.n	800bcb4 <RDMHandler::SetResetDevice(bool, unsigned short)+0x24>
 800bcac:	2bff      	cmp	r3, #255	; 0xff
 800bcae:	d001      	beq.n	800bcb4 <RDMHandler::SetResetDevice(bool, unsigned short)+0x24>
 800bcb0:	2106      	movs	r1, #6
 800bcb2:	e7f4      	b.n	800bc9e <RDMHandler::SetResetDevice(bool, unsigned short)+0xe>
 800bcb4:	2100      	movs	r1, #0
 800bcb6:	68a2      	ldr	r2, [r4, #8]
 800bcb8:	2bff      	cmp	r3, #255	; 0xff
 800bcba:	75d1      	strb	r1, [r2, #23]
 800bcbc:	d102      	bne.n	800bcc4 <RDMHandler::SetResetDevice(bool, unsigned short)+0x34>
 800bcbe:	2104      	movs	r1, #4
 800bcc0:	4620      	mov	r0, r4
 800bcc2:	e7ec      	b.n	800bc9e <RDMHandler::SetResetDevice(bool, unsigned short)+0xe>
 800bcc4:	4b03      	ldr	r3, [pc, #12]	; (800bcd4 <RDMHandler::SetResetDevice(bool, unsigned short)+0x44>)
 800bcc6:	6818      	ldr	r0, [r3, #0]
 800bcc8:	f006 fcce 	bl	8012668 <Hardware::Reboot()>
 800bccc:	2800      	cmp	r0, #0
 800bcce:	d0f6      	beq.n	800bcbe <RDMHandler::SetResetDevice(bool, unsigned short)+0x2e>
 800bcd0:	bd10      	pop	{r4, pc}
 800bcd2:	bf00      	nop
 800bcd4:	2001da10 	andcs	sp, r1, r0, lsl sl

0800bcd8 <RDMHandler::SetIdentifyDevice(bool, unsigned short)>:
 800bcd8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800bcda:	6843      	ldr	r3, [r0, #4]
 800bcdc:	460d      	mov	r5, r1
 800bcde:	7d99      	ldrb	r1, [r3, #22]
 800bce0:	4604      	mov	r4, r0
 800bce2:	2901      	cmp	r1, #1
 800bce4:	d004      	beq.n	800bcf0 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x18>
 800bce6:	2101      	movs	r1, #1
 800bce8:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800bcec:	f7ff bfcc 	b.w	800bc88 <RDMHandler::RespondMessageNack(unsigned short)>
 800bcf0:	7ddb      	ldrb	r3, [r3, #23]
 800bcf2:	2b01      	cmp	r3, #1
 800bcf4:	d901      	bls.n	800bcfa <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x22>
 800bcf6:	2106      	movs	r1, #6
 800bcf8:	e7f6      	b.n	800bce8 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x10>
 800bcfa:	4a12      	ldr	r2, [pc, #72]	; (800bd44 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x6c>)
 800bcfc:	4f12      	ldr	r7, [pc, #72]	; (800bd48 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x70>)
 800bcfe:	6816      	ldr	r6, [r2, #0]
 800bd00:	4a12      	ldr	r2, [pc, #72]	; (800bd4c <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x74>)
 800bd02:	6810      	ldr	r0, [r2, #0]
 800bd04:	4a12      	ldr	r2, [pc, #72]	; (800bd50 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x78>)
 800bd06:	b983      	cbnz	r3, 800bd2a <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x52>
 800bd08:	2102      	movs	r1, #2
 800bd0a:	7013      	strb	r3, [r2, #0]
 800bd0c:	f006 fc0c 	bl	8012528 <LedBlink::SetMode(ledblink::Mode)>
 800bd10:	7839      	ldrb	r1, [r7, #0]
 800bd12:	b111      	cbz	r1, 800bd1a <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x42>
 800bd14:	4630      	mov	r0, r6
 800bd16:	f000 f9a8 	bl	800c06a <RDMIdentify::Off(rdm::identify::Mode)>
 800bd1a:	b98d      	cbnz	r5, 800bd40 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x68>
 800bd1c:	68a3      	ldr	r3, [r4, #8]
 800bd1e:	4620      	mov	r0, r4
 800bd20:	75dd      	strb	r5, [r3, #23]
 800bd22:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800bd26:	f7ff beeb 	b.w	800bb00 <RDMHandler::RespondMessageAck()>
 800bd2a:	7011      	strb	r1, [r2, #0]
 800bd2c:	2104      	movs	r1, #4
 800bd2e:	f006 fbfb 	bl	8012528 <LedBlink::SetMode(ledblink::Mode)>
 800bd32:	7839      	ldrb	r1, [r7, #0]
 800bd34:	2900      	cmp	r1, #0
 800bd36:	d0f0      	beq.n	800bd1a <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x42>
 800bd38:	4630      	mov	r0, r6
 800bd3a:	f000 f995 	bl	800c068 <RDMIdentify::On(rdm::identify::Mode)>
 800bd3e:	e7ec      	b.n	800bd1a <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x42>
 800bd40:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800bd42:	bf00      	nop
 800bd44:	2000c910 	andcs	ip, r0, r0, lsl r9
 800bd48:	2000c90d 	andcs	ip, r0, sp, lsl #18
 800bd4c:	2001da0c 	andcs	sp, r1, ip, lsl #20
 800bd50:	2000c90c 	andcs	ip, r0, ip, lsl #18

0800bd54 <RDMHandler::SetFactoryDefaults(bool, unsigned short)>:
 800bd54:	b538      	push	{r3, r4, r5, lr}
 800bd56:	6843      	ldr	r3, [r0, #4]
 800bd58:	4604      	mov	r4, r0
 800bd5a:	7d9b      	ldrb	r3, [r3, #22]
 800bd5c:	460d      	mov	r5, r1
 800bd5e:	b123      	cbz	r3, 800bd6a <RDMHandler::SetFactoryDefaults(bool, unsigned short)+0x16>
 800bd60:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800bd64:	2101      	movs	r1, #1
 800bd66:	f7ff bf8f 	b.w	800bc88 <RDMHandler::RespondMessageNack(unsigned short)>
 800bd6a:	4b06      	ldr	r3, [pc, #24]	; (800bd84 <RDMHandler::SetFactoryDefaults(bool, unsigned short)+0x30>)
 800bd6c:	6818      	ldr	r0, [r3, #0]
 800bd6e:	f7ff fde3 	bl	800b938 <RDMDeviceResponder::SetFactoryDefaults()>
 800bd72:	b935      	cbnz	r5, 800bd82 <RDMHandler::SetFactoryDefaults(bool, unsigned short)+0x2e>
 800bd74:	68a3      	ldr	r3, [r4, #8]
 800bd76:	4620      	mov	r0, r4
 800bd78:	75dd      	strb	r5, [r3, #23]
 800bd7a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800bd7e:	f7ff bebf 	b.w	800bb00 <RDMHandler::RespondMessageAck()>
 800bd82:	bd38      	pop	{r3, r4, r5, pc}
 800bd84:	2000c908 	andcs	ip, r0, r8, lsl #18

0800bd88 <RDMHandler::SetDeviceLabel(bool, unsigned short)>:
 800bd88:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800bd8a:	6845      	ldr	r5, [r0, #4]
 800bd8c:	460e      	mov	r6, r1
 800bd8e:	7dab      	ldrb	r3, [r5, #22]
 800bd90:	4604      	mov	r4, r0
 800bd92:	2b20      	cmp	r3, #32
 800bd94:	4611      	mov	r1, r2
 800bd96:	d905      	bls.n	800bda4 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x1c>
 800bd98:	2101      	movs	r1, #1
 800bd9a:	b002      	add	sp, #8
 800bd9c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bda0:	f7ff bf72 	b.w	800bc88 <RDMHandler::RespondMessageNack(unsigned short)>
 800bda4:	4a0d      	ldr	r2, [pc, #52]	; (800bddc <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x54>)
 800bda6:	6810      	ldr	r0, [r2, #0]
 800bda8:	f105 0217 	add.w	r2, r5, #23
 800bdac:	b159      	cbz	r1, 800bdc6 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x3e>
 800bdae:	3088      	adds	r0, #136	; 0x88
 800bdb0:	f7ff fb59 	bl	800b466 <RDMSubDevices::SetLabel(unsigned short, char const*, unsigned char)>
 800bdb4:	b97e      	cbnz	r6, 800bdd6 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x4e>
 800bdb6:	4620      	mov	r0, r4
 800bdb8:	68a3      	ldr	r3, [r4, #8]
 800bdba:	75de      	strb	r6, [r3, #23]
 800bdbc:	b002      	add	sp, #8
 800bdbe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bdc2:	f7ff be9d 	b.w	800bb00 <RDMHandler::RespondMessageAck()>
 800bdc6:	4669      	mov	r1, sp
 800bdc8:	3004      	adds	r0, #4
 800bdca:	9200      	str	r2, [sp, #0]
 800bdcc:	f88d 3004 	strb.w	r3, [sp, #4]
 800bdd0:	f7ff fd90 	bl	800b8f4 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>
 800bdd4:	e7ee      	b.n	800bdb4 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x2c>
 800bdd6:	b002      	add	sp, #8
 800bdd8:	bd70      	pop	{r4, r5, r6, pc}
 800bdda:	bf00      	nop
 800bddc:	2000c908 	andcs	ip, r0, r8, lsl #18

0800bde0 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)>:
 800bde0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800bde4:	4616      	mov	r6, r2
 800bde6:	2700      	movs	r7, #0
 800bde8:	f006 04ef 	and.w	r4, r6, #239	; 0xef
 800bdec:	2c20      	cmp	r4, #32
 800bdee:	46be      	mov	lr, r7
 800bdf0:	f89d 801c 	ldrb.w	r8, [sp, #28]
 800bdf4:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 800bdf8:	d004      	beq.n	800be04 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x24>
 800bdfa:	2105      	movs	r1, #5
 800bdfc:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800be00:	f7ff bf42 	b.w	800bc88 <RDMHandler::RespondMessageNack(unsigned short)>
 800be04:	4c2d      	ldr	r4, [pc, #180]	; (800bebc <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xdc>)
 800be06:	6824      	ldr	r4, [r4, #0]
 800be08:	88a4      	ldrh	r4, [r4, #4]
 800be0a:	4294      	cmp	r4, r2
 800be0c:	d205      	bcs.n	800be1a <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x3a>
 800be0e:	f64f 74ff 	movw	r4, #65535	; 0xffff
 800be12:	42a2      	cmp	r2, r4
 800be14:	d001      	beq.n	800be1a <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x3a>
 800be16:	2109      	movs	r1, #9
 800be18:	e7f0      	b.n	800bdfc <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1c>
 800be1a:	f04f 0c14 	mov.w	ip, #20
 800be1e:	2400      	movs	r4, #0
 800be20:	4d27      	ldr	r5, [pc, #156]	; (800bec0 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xe0>)
 800be22:	f8b5 9000 	ldrh.w	r9, [r5]
 800be26:	4599      	cmp	r9, r3
 800be28:	bf02      	ittt	eq
 800be2a:	462c      	moveq	r4, r5
 800be2c:	7daf      	ldrbeq	r7, [r5, #22]
 800be2e:	f895 e017 	ldrbeq.w	lr, [r5, #23]
 800be32:	f1bc 0c01 	subs.w	ip, ip, #1
 800be36:	f105 0518 	add.w	r5, r5, #24
 800be3a:	d1f2      	bne.n	800be22 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x42>
 800be3c:	b90c      	cbnz	r4, 800be42 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x62>
 800be3e:	2100      	movs	r1, #0
 800be40:	e7dc      	b.n	800bdfc <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1c>
 800be42:	7803      	ldrb	r3, [r0, #0]
 800be44:	b19b      	cbz	r3, 800be6e <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x8e>
 800be46:	2f00      	cmp	r7, #0
 800be48:	d0f9      	beq.n	800be3e <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x5e>
 800be4a:	2e20      	cmp	r6, #32
 800be4c:	d121      	bne.n	800be92 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xb2>
 800be4e:	2900      	cmp	r1, #0
 800be50:	d131      	bne.n	800beb6 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xd6>
 800be52:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800be56:	429a      	cmp	r2, r3
 800be58:	d0dd      	beq.n	800be16 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x36>
 800be5a:	6863      	ldr	r3, [r4, #4]
 800be5c:	b913      	cbnz	r3, 800be64 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x84>
 800be5e:	68a1      	ldr	r1, [r4, #8]
 800be60:	07cd      	lsls	r5, r1, #31
 800be62:	d5ca      	bpl.n	800bdfa <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1a>
 800be64:	7d21      	ldrb	r1, [r4, #20]
 800be66:	4541      	cmp	r1, r8
 800be68:	d005      	beq.n	800be76 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x96>
 800be6a:	2101      	movs	r1, #1
 800be6c:	e7c6      	b.n	800bdfc <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1c>
 800be6e:	f1be 0f00 	cmp.w	lr, #0
 800be72:	d1ea      	bne.n	800be4a <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x6a>
 800be74:	e7e3      	b.n	800be3e <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x5e>
 800be76:	68a1      	ldr	r1, [r4, #8]
 800be78:	eb00 0461 	add.w	r4, r0, r1, asr #1
 800be7c:	104d      	asrs	r5, r1, #1
 800be7e:	07c9      	lsls	r1, r1, #31
 800be80:	bf48      	it	mi
 800be82:	5941      	ldrmi	r1, [r0, r5]
 800be84:	4620      	mov	r0, r4
 800be86:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800be8a:	bf48      	it	mi
 800be8c:	58cb      	ldrmi	r3, [r1, r3]
 800be8e:	4611      	mov	r1, r2
 800be90:	4718      	bx	r3
 800be92:	e9d4 5303 	ldrd	r5, r3, [r4, #12]
 800be96:	f003 0401 	and.w	r4, r3, #1
 800be9a:	b90d      	cbnz	r5, 800bea0 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xc0>
 800be9c:	2c00      	cmp	r4, #0
 800be9e:	d0ac      	beq.n	800bdfa <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1a>
 800bea0:	105e      	asrs	r6, r3, #1
 800bea2:	eb00 0363 	add.w	r3, r0, r3, asr #1
 800bea6:	b10c      	cbz	r4, 800beac <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xcc>
 800bea8:	5980      	ldr	r0, [r0, r6]
 800beaa:	5945      	ldr	r5, [r0, r5]
 800beac:	4618      	mov	r0, r3
 800beae:	462b      	mov	r3, r5
 800beb0:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800beb4:	4718      	bx	r3
 800beb6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800beba:	bf00      	nop
 800bebc:	2000c904 	andcs	ip, r0, r4, lsl #18
 800bec0:	080163e0 	stmdaeq	r1, {r5, r6, r7, r8, r9, sp, lr}

0800bec4 <RDMHandler::HandleData(unsigned char const*, unsigned char*)>:
 800bec4:	23ff      	movs	r3, #255	; 0xff
 800bec6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800beca:	7013      	strb	r3, [r2, #0]
 800becc:	e9c0 1201 	strd	r1, r2, [r0, #4]
 800bed0:	7ccb      	ldrb	r3, [r1, #19]
 800bed2:	b085      	sub	sp, #20
 800bed4:	7d4f      	ldrb	r7, [r1, #21]
 800bed6:	9303      	str	r3, [sp, #12]
 800bed8:	7d0b      	ldrb	r3, [r1, #20]
 800beda:	f101 0a02 	add.w	sl, r1, #2
 800bede:	eb07 2703 	add.w	r7, r7, r3, lsl #8
 800bee2:	4b5b      	ldr	r3, [pc, #364]	; (800c050 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x18c>)
 800bee4:	4606      	mov	r6, r0
 800bee6:	460d      	mov	r5, r1
 800bee8:	4614      	mov	r4, r2
 800beea:	495a      	ldr	r1, [pc, #360]	; (800c054 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x190>)
 800beec:	2206      	movs	r2, #6
 800beee:	4650      	mov	r0, sl
 800bef0:	f8d3 8000 	ldr.w	r8, [r3]
 800bef4:	f7ff fce4 	bl	800b8c0 <memcmp>
 800bef8:	f108 0904 	add.w	r9, r8, #4
 800befc:	4683      	mov	fp, r0
 800befe:	2202      	movs	r2, #2
 800bf00:	4649      	mov	r1, r9
 800bf02:	4650      	mov	r0, sl
 800bf04:	b2bf      	uxth	r7, r7
 800bf06:	f7ff fcdb 	bl	800b8c0 <memcmp>
 800bf0a:	b928      	cbnz	r0, 800bf18 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x54>
 800bf0c:	2204      	movs	r2, #4
 800bf0e:	4951      	ldr	r1, [pc, #324]	; (800c054 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x190>)
 800bf10:	18a8      	adds	r0, r5, r2
 800bf12:	f7ff fcd5 	bl	800b8c0 <memcmp>
 800bf16:	b160      	cbz	r0, 800bf32 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x6e>
 800bf18:	4649      	mov	r1, r9
 800bf1a:	2206      	movs	r2, #6
 800bf1c:	4650      	mov	r0, sl
 800bf1e:	f7ff fccf 	bl	800b8c0 <memcmp>
 800bf22:	4601      	mov	r1, r0
 800bf24:	b130      	cbz	r0, 800bf34 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x70>
 800bf26:	f1bb 0f00 	cmp.w	fp, #0
 800bf2a:	d04a      	beq.n	800bfc2 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0xfe>
 800bf2c:	b005      	add	sp, #20
 800bf2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bf32:	2101      	movs	r1, #1
 800bf34:	2301      	movs	r3, #1
 800bf36:	9a03      	ldr	r2, [sp, #12]
 800bf38:	2a10      	cmp	r2, #16
 800bf3a:	d176      	bne.n	800c02a <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x166>
 800bf3c:	2f01      	cmp	r7, #1
 800bf3e:	d143      	bne.n	800bfc8 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x104>
 800bf40:	7873      	ldrb	r3, [r6, #1]
 800bf42:	2b00      	cmp	r3, #0
 800bf44:	d1f2      	bne.n	800bf2c <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x68>
 800bf46:	2206      	movs	r2, #6
 800bf48:	4649      	mov	r1, r9
 800bf4a:	f105 0017 	add.w	r0, r5, #23
 800bf4e:	f7ff fcb7 	bl	800b8c0 <memcmp>
 800bf52:	2800      	cmp	r0, #0
 800bf54:	dcea      	bgt.n	800bf2c <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x68>
 800bf56:	2206      	movs	r2, #6
 800bf58:	4648      	mov	r0, r9
 800bf5a:	f105 011d 	add.w	r1, r5, #29
 800bf5e:	f7ff fcaf 	bl	800b8c0 <memcmp>
 800bf62:	2800      	cmp	r0, #0
 800bf64:	dce2      	bgt.n	800bf2c <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x68>
 800bf66:	23fe      	movs	r3, #254	; 0xfe
 800bf68:	7023      	strb	r3, [r4, #0]
 800bf6a:	7063      	strb	r3, [r4, #1]
 800bf6c:	70a3      	strb	r3, [r4, #2]
 800bf6e:	70e3      	strb	r3, [r4, #3]
 800bf70:	7123      	strb	r3, [r4, #4]
 800bf72:	7163      	strb	r3, [r4, #5]
 800bf74:	71a3      	strb	r3, [r4, #6]
 800bf76:	23aa      	movs	r3, #170	; 0xaa
 800bf78:	4621      	mov	r1, r4
 800bf7a:	71e3      	strb	r3, [r4, #7]
 800bf7c:	f240 53fa 	movw	r3, #1530	; 0x5fa
 800bf80:	f108 0203 	add.w	r2, r8, #3
 800bf84:	f108 0809 	add.w	r8, r8, #9
 800bf88:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800bf8c:	3102      	adds	r1, #2
 800bf8e:	f060 0055 	orn	r0, r0, #85	; 0x55
 800bf92:	7188      	strb	r0, [r1, #6]
 800bf94:	7810      	ldrb	r0, [r2, #0]
 800bf96:	4542      	cmp	r2, r8
 800bf98:	f040 0055 	orr.w	r0, r0, #85	; 0x55
 800bf9c:	71c8      	strb	r0, [r1, #7]
 800bf9e:	7810      	ldrb	r0, [r2, #0]
 800bfa0:	4403      	add	r3, r0
 800bfa2:	b29b      	uxth	r3, r3
 800bfa4:	d1f0      	bne.n	800bf88 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0xc4>
 800bfa6:	0a1a      	lsrs	r2, r3, #8
 800bfa8:	f062 0155 	orn	r1, r2, #85	; 0x55
 800bfac:	f042 0255 	orr.w	r2, r2, #85	; 0x55
 800bfb0:	7562      	strb	r2, [r4, #21]
 800bfb2:	f063 0255 	orn	r2, r3, #85	; 0x55
 800bfb6:	f043 0355 	orr.w	r3, r3, #85	; 0x55
 800bfba:	7521      	strb	r1, [r4, #20]
 800bfbc:	75a2      	strb	r2, [r4, #22]
 800bfbe:	75e3      	strb	r3, [r4, #23]
 800bfc0:	e7b4      	b.n	800bf2c <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x68>
 800bfc2:	4659      	mov	r1, fp
 800bfc4:	465b      	mov	r3, fp
 800bfc6:	e7b6      	b.n	800bf36 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x72>
 800bfc8:	2f03      	cmp	r7, #3
 800bfca:	d11a      	bne.n	800c002 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x13e>
 800bfcc:	7daa      	ldrb	r2, [r5, #22]
 800bfce:	2a00      	cmp	r2, #0
 800bfd0:	d1ac      	bne.n	800bf2c <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x68>
 800bfd2:	7072      	strb	r2, [r6, #1]
 800bfd4:	f1bb 0f00 	cmp.w	fp, #0
 800bfd8:	d0a8      	beq.n	800bf2c <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x68>
 800bfda:	2b00      	cmp	r3, #0
 800bfdc:	d0a6      	beq.n	800bf2c <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x68>
 800bfde:	2302      	movs	r3, #2
 800bfe0:	75e3      	strb	r3, [r4, #23]
 800bfe2:	4b1d      	ldr	r3, [pc, #116]	; (800c058 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x194>)
 800bfe4:	7622      	strb	r2, [r4, #24]
 800bfe6:	681b      	ldr	r3, [r3, #0]
 800bfe8:	7662      	strb	r2, [r4, #25]
 800bfea:	889b      	ldrh	r3, [r3, #4]
 800bfec:	3b00      	subs	r3, #0
 800bfee:	bf18      	it	ne
 800bff0:	2301      	movne	r3, #1
 800bff2:	005b      	lsls	r3, r3, #1
 800bff4:	4630      	mov	r0, r6
 800bff6:	7663      	strb	r3, [r4, #25]
 800bff8:	b005      	add	sp, #20
 800bffa:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bffe:	f7ff bd7f 	b.w	800bb00 <RDMHandler::RespondMessageAck()>
 800c002:	2f02      	cmp	r7, #2
 800c004:	d192      	bne.n	800bf2c <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x68>
 800c006:	7daa      	ldrb	r2, [r5, #22]
 800c008:	2a00      	cmp	r2, #0
 800c00a:	d18f      	bne.n	800bf2c <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x68>
 800c00c:	2101      	movs	r1, #1
 800c00e:	7071      	strb	r1, [r6, #1]
 800c010:	2b00      	cmp	r3, #0
 800c012:	d08b      	beq.n	800bf2c <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x68>
 800c014:	4b10      	ldr	r3, [pc, #64]	; (800c058 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x194>)
 800c016:	75e7      	strb	r7, [r4, #23]
 800c018:	681b      	ldr	r3, [r3, #0]
 800c01a:	7622      	strb	r2, [r4, #24]
 800c01c:	7662      	strb	r2, [r4, #25]
 800c01e:	889b      	ldrh	r3, [r3, #4]
 800c020:	3b00      	subs	r3, #0
 800c022:	bf18      	it	ne
 800c024:	2301      	movne	r3, #1
 800c026:	408b      	lsls	r3, r1
 800c028:	e7e4      	b.n	800bff4 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x130>
 800c02a:	7c6a      	ldrb	r2, [r5, #17]
 800c02c:	7cab      	ldrb	r3, [r5, #18]
 800c02e:	f1bb 0f00 	cmp.w	fp, #0
 800c032:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 800c036:	b29b      	uxth	r3, r3
 800c038:	9301      	str	r3, [sp, #4]
 800c03a:	7dab      	ldrb	r3, [r5, #22]
 800c03c:	bf08      	it	eq
 800c03e:	2101      	moveq	r1, #1
 800c040:	9300      	str	r3, [sp, #0]
 800c042:	4630      	mov	r0, r6
 800c044:	463b      	mov	r3, r7
 800c046:	9a03      	ldr	r2, [sp, #12]
 800c048:	f7ff feca 	bl	800bde0 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)>
 800c04c:	e76e      	b.n	800bf2c <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x68>
 800c04e:	bf00      	nop
 800c050:	2000c908 	andcs	ip, r0, r8, lsl #18
 800c054:	080163d8 	stmdaeq	r1, {r3, r4, r6, r7, r8, r9, sp, lr}
 800c058:	2000c904 	andcs	ip, r0, r4, lsl #18

0800c05c <RDMIdentify::RDMIdentify()>:
 800c05c:	4b01      	ldr	r3, [pc, #4]	; (800c064 <RDMIdentify::RDMIdentify()+0x8>)
 800c05e:	6018      	str	r0, [r3, #0]
 800c060:	4770      	bx	lr
 800c062:	bf00      	nop
 800c064:	2000c910 	andcs	ip, r0, r0, lsl r9

0800c068 <RDMIdentify::On(rdm::identify::Mode)>:
 800c068:	4770      	bx	lr

0800c06a <RDMIdentify::Off(rdm::identify::Mode)>:
 800c06a:	4770      	bx	lr

0800c06c <memcpy.constprop.0.isra.0>:
 800c06c:	3801      	subs	r0, #1
 800c06e:	1d0b      	adds	r3, r1, #4
 800c070:	4299      	cmp	r1, r3
 800c072:	d100      	bne.n	800c076 <memcpy.constprop.0.isra.0+0xa>
 800c074:	4770      	bx	lr
 800c076:	f811 2b01 	ldrb.w	r2, [r1], #1
 800c07a:	f800 2f01 	strb.w	r2, [r0, #1]!
 800c07e:	e7f7      	b.n	800c070 <memcpy.constprop.0.isra.0+0x4>

0800c080 <RDMHandler::GetInterfaceList(unsigned short)>:
 800c080:	4a08      	ldr	r2, [pc, #32]	; (800c0a4 <RDMHandler::GetInterfaceList(unsigned short)+0x24>)
 800c082:	6883      	ldr	r3, [r0, #8]
 800c084:	6812      	ldr	r2, [r2, #0]
 800c086:	6892      	ldr	r2, [r2, #8]
 800c088:	0e11      	lsrs	r1, r2, #24
 800c08a:	7619      	strb	r1, [r3, #24]
 800c08c:	0c11      	lsrs	r1, r2, #16
 800c08e:	7659      	strb	r1, [r3, #25]
 800c090:	76da      	strb	r2, [r3, #27]
 800c092:	0a11      	lsrs	r1, r2, #8
 800c094:	2200      	movs	r2, #0
 800c096:	771a      	strb	r2, [r3, #28]
 800c098:	2206      	movs	r2, #6
 800c09a:	7699      	strb	r1, [r3, #26]
 800c09c:	775a      	strb	r2, [r3, #29]
 800c09e:	75da      	strb	r2, [r3, #23]
 800c0a0:	f7ff bd2e 	b.w	800bb00 <RDMHandler::RespondMessageAck()>
 800c0a4:	2001d348 	andcs	sp, r1, r8, asr #6

0800c0a8 <RDMHandler::GetInterfaceName(unsigned short)>:
 800c0a8:	b538      	push	{r3, r4, r5, lr}
 800c0aa:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800c0ae:	4604      	mov	r4, r0
 800c0b0:	3117      	adds	r1, #23
 800c0b2:	f105 0018 	add.w	r0, r5, #24
 800c0b6:	f7ff ffd9 	bl	800c06c <memcpy.constprop.0.isra.0>
 800c0ba:	4a0d      	ldr	r2, [pc, #52]	; (800c0f0 <RDMHandler::GetInterfaceName(unsigned short)+0x48>)
 800c0bc:	f105 001b 	add.w	r0, r5, #27
 800c0c0:	6813      	ldr	r3, [r2, #0]
 800c0c2:	33a6      	adds	r3, #166	; 0xa6
 800c0c4:	f813 1b01 	ldrb.w	r1, [r3], #1
 800c0c8:	f800 1f01 	strb.w	r1, [r0, #1]!
 800c0cc:	2900      	cmp	r1, #0
 800c0ce:	d1f9      	bne.n	800c0c4 <RDMHandler::GetInterfaceName(unsigned short)+0x1c>
 800c0d0:	6812      	ldr	r2, [r2, #0]
 800c0d2:	32a6      	adds	r2, #166	; 0xa6
 800c0d4:	4611      	mov	r1, r2
 800c0d6:	460b      	mov	r3, r1
 800c0d8:	7818      	ldrb	r0, [r3, #0]
 800c0da:	3101      	adds	r1, #1
 800c0dc:	2800      	cmp	r0, #0
 800c0de:	d1fa      	bne.n	800c0d6 <RDMHandler::GetInterfaceName(unsigned short)+0x2e>
 800c0e0:	1a9b      	subs	r3, r3, r2
 800c0e2:	3304      	adds	r3, #4
 800c0e4:	75eb      	strb	r3, [r5, #23]
 800c0e6:	4620      	mov	r0, r4
 800c0e8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c0ec:	f7ff bd08 	b.w	800bb00 <RDMHandler::RespondMessageAck()>
 800c0f0:	2001d348 	andcs	sp, r1, r8, asr #6

0800c0f4 <RDMHandler::GetHardwareAddress(unsigned short)>:
 800c0f4:	b538      	push	{r3, r4, r5, lr}
 800c0f6:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800c0fa:	4604      	mov	r4, r0
 800c0fc:	3117      	adds	r1, #23
 800c0fe:	f105 0018 	add.w	r0, r5, #24
 800c102:	f7ff ffb3 	bl	800c06c <memcpy.constprop.0.isra.0>
 800c106:	4b06      	ldr	r3, [pc, #24]	; (800c120 <RDMHandler::GetHardwareAddress(unsigned short)+0x2c>)
 800c108:	f105 011c 	add.w	r1, r5, #28
 800c10c:	6818      	ldr	r0, [r3, #0]
 800c10e:	f003 ffcb 	bl	80100a8 <Network::MacAddressCopyTo(unsigned char*)>
 800c112:	230a      	movs	r3, #10
 800c114:	75eb      	strb	r3, [r5, #23]
 800c116:	4620      	mov	r0, r4
 800c118:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c11c:	f7ff bcf0 	b.w	800bb00 <RDMHandler::RespondMessageAck()>
 800c120:	2001d348 	andcs	sp, r1, r8, asr #6

0800c124 <RDMHandler::GetDHCPMode(unsigned short)>:
 800c124:	b538      	push	{r3, r4, r5, lr}
 800c126:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800c12a:	4604      	mov	r4, r0
 800c12c:	3117      	adds	r1, #23
 800c12e:	f105 0018 	add.w	r0, r5, #24
 800c132:	f7ff ff9b 	bl	800c06c <memcpy.constprop.0.isra.0>
 800c136:	4b05      	ldr	r3, [pc, #20]	; (800c14c <RDMHandler::GetDHCPMode(unsigned short)+0x28>)
 800c138:	4620      	mov	r0, r4
 800c13a:	681b      	ldr	r3, [r3, #0]
 800c13c:	795b      	ldrb	r3, [r3, #5]
 800c13e:	772b      	strb	r3, [r5, #28]
 800c140:	2305      	movs	r3, #5
 800c142:	75eb      	strb	r3, [r5, #23]
 800c144:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c148:	f7ff bcda 	b.w	800bb00 <RDMHandler::RespondMessageAck()>
 800c14c:	2001d348 	andcs	sp, r1, r8, asr #6

0800c150 <RDMHandler::SetDHCPMode(bool, unsigned short)>:
 800c150:	4b10      	ldr	r3, [pc, #64]	; (800c194 <RDMHandler::SetDHCPMode(bool, unsigned short)+0x44>)
 800c152:	b510      	push	{r4, lr}
 800c154:	681b      	ldr	r3, [r3, #0]
 800c156:	4604      	mov	r4, r0
 800c158:	7919      	ldrb	r1, [r3, #4]
 800c15a:	6842      	ldr	r2, [r0, #4]
 800c15c:	b921      	cbnz	r1, 800c168 <RDMHandler::SetDHCPMode(bool, unsigned short)+0x18>
 800c15e:	210b      	movs	r1, #11
 800c160:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c164:	f7ff bd90 	b.w	800bc88 <RDMHandler::RespondMessageNack(unsigned short)>
 800c168:	7ed2      	ldrb	r2, [r2, #27]
 800c16a:	2a01      	cmp	r2, #1
 800c16c:	d109      	bne.n	800c182 <RDMHandler::SetDHCPMode(bool, unsigned short)+0x32>
 800c16e:	f8d3 20c0 	ldr.w	r2, [r3, #192]	; 0xc0
 800c172:	f042 0204 	orr.w	r2, r2, #4
 800c176:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
 800c17a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c17e:	f7ff bcbf 	b.w	800bb00 <RDMHandler::RespondMessageAck()>
 800c182:	b92a      	cbnz	r2, 800c190 <RDMHandler::SetDHCPMode(bool, unsigned short)+0x40>
 800c184:	4618      	mov	r0, r3
 800c186:	4611      	mov	r1, r2
 800c188:	f004 f9c8 	bl	801051c <Network::SetQueuedStaticIp(unsigned int, unsigned int)>
 800c18c:	4620      	mov	r0, r4
 800c18e:	e7f4      	b.n	800c17a <RDMHandler::SetDHCPMode(bool, unsigned short)+0x2a>
 800c190:	2106      	movs	r1, #6
 800c192:	e7e5      	b.n	800c160 <RDMHandler::SetDHCPMode(bool, unsigned short)+0x10>
 800c194:	2001d348 	andcs	sp, r1, r8, asr #6

0800c198 <RDMHandler::GetNameServers(unsigned short)>:
 800c198:	6842      	ldr	r2, [r0, #4]
 800c19a:	7dd2      	ldrb	r2, [r2, #23]
 800c19c:	2a02      	cmp	r2, #2
 800c19e:	d902      	bls.n	800c1a6 <RDMHandler::GetNameServers(unsigned short)+0xe>
 800c1a0:	2106      	movs	r1, #6
 800c1a2:	f7ff bd71 	b.w	800bc88 <RDMHandler::RespondMessageNack(unsigned short)>
 800c1a6:	2200      	movs	r2, #0
 800c1a8:	6883      	ldr	r3, [r0, #8]
 800c1aa:	765a      	strb	r2, [r3, #25]
 800c1ac:	769a      	strb	r2, [r3, #26]
 800c1ae:	76da      	strb	r2, [r3, #27]
 800c1b0:	771a      	strb	r2, [r3, #28]
 800c1b2:	2205      	movs	r2, #5
 800c1b4:	75da      	strb	r2, [r3, #23]
 800c1b6:	f7ff bca3 	b.w	800bb00 <RDMHandler::RespondMessageAck()>
	...

0800c1bc <RDMHandler::GetZeroconf(unsigned short)>:
 800c1bc:	b538      	push	{r3, r4, r5, lr}
 800c1be:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800c1c2:	4604      	mov	r4, r0
 800c1c4:	3117      	adds	r1, #23
 800c1c6:	f105 0018 	add.w	r0, r5, #24
 800c1ca:	f7ff ff4f 	bl	800c06c <memcpy.constprop.0.isra.0>
 800c1ce:	4b06      	ldr	r3, [pc, #24]	; (800c1e8 <RDMHandler::GetZeroconf(unsigned short)+0x2c>)
 800c1d0:	681a      	ldr	r2, [r3, #0]
 800c1d2:	7993      	ldrb	r3, [r2, #6]
 800c1d4:	b103      	cbz	r3, 800c1d8 <RDMHandler::GetZeroconf(unsigned short)+0x1c>
 800c1d6:	79d3      	ldrb	r3, [r2, #7]
 800c1d8:	772b      	strb	r3, [r5, #28]
 800c1da:	2305      	movs	r3, #5
 800c1dc:	75eb      	strb	r3, [r5, #23]
 800c1de:	4620      	mov	r0, r4
 800c1e0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c1e4:	f7ff bc8c 	b.w	800bb00 <RDMHandler::RespondMessageAck()>
 800c1e8:	2001d348 	andcs	sp, r1, r8, asr #6

0800c1ec <RDMHandler::SetZeroconf(bool, unsigned short)>:
 800c1ec:	4b10      	ldr	r3, [pc, #64]	; (800c230 <RDMHandler::SetZeroconf(bool, unsigned short)+0x44>)
 800c1ee:	b510      	push	{r4, lr}
 800c1f0:	681b      	ldr	r3, [r3, #0]
 800c1f2:	4604      	mov	r4, r0
 800c1f4:	7999      	ldrb	r1, [r3, #6]
 800c1f6:	6842      	ldr	r2, [r0, #4]
 800c1f8:	b921      	cbnz	r1, 800c204 <RDMHandler::SetZeroconf(bool, unsigned short)+0x18>
 800c1fa:	210b      	movs	r1, #11
 800c1fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c200:	f7ff bd42 	b.w	800bc88 <RDMHandler::RespondMessageNack(unsigned short)>
 800c204:	7ed2      	ldrb	r2, [r2, #27]
 800c206:	2a01      	cmp	r2, #1
 800c208:	d109      	bne.n	800c21e <RDMHandler::SetZeroconf(bool, unsigned short)+0x32>
 800c20a:	f8d3 20c0 	ldr.w	r2, [r3, #192]	; 0xc0
 800c20e:	f042 0208 	orr.w	r2, r2, #8
 800c212:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
 800c216:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c21a:	f7ff bc71 	b.w	800bb00 <RDMHandler::RespondMessageAck()>
 800c21e:	b92a      	cbnz	r2, 800c22c <RDMHandler::SetZeroconf(bool, unsigned short)+0x40>
 800c220:	4618      	mov	r0, r3
 800c222:	4611      	mov	r1, r2
 800c224:	f004 f97a 	bl	801051c <Network::SetQueuedStaticIp(unsigned int, unsigned int)>
 800c228:	4620      	mov	r0, r4
 800c22a:	e7f4      	b.n	800c216 <RDMHandler::SetZeroconf(bool, unsigned short)+0x2a>
 800c22c:	2106      	movs	r1, #6
 800c22e:	e7e5      	b.n	800c1fc <RDMHandler::SetZeroconf(bool, unsigned short)+0x10>
 800c230:	2001d348 	andcs	sp, r1, r8, asr #6

0800c234 <RDMHandler::RenewDhcp(bool, unsigned short)>:
 800c234:	4b09      	ldr	r3, [pc, #36]	; (800c25c <RDMHandler::RenewDhcp(bool, unsigned short)+0x28>)
 800c236:	b510      	push	{r4, lr}
 800c238:	681b      	ldr	r3, [r3, #0]
 800c23a:	4604      	mov	r4, r0
 800c23c:	795a      	ldrb	r2, [r3, #5]
 800c23e:	b922      	cbnz	r2, 800c24a <RDMHandler::RenewDhcp(bool, unsigned short)+0x16>
 800c240:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c244:	210b      	movs	r1, #11
 800c246:	f7ff bd1f 	b.w	800bc88 <RDMHandler::RespondMessageNack(unsigned short)>
 800c24a:	4618      	mov	r0, r3
 800c24c:	f004 f918 	bl	8010480 <Network::EnableDhcp()>
 800c250:	4620      	mov	r0, r4
 800c252:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c256:	f7ff bc53 	b.w	800bb00 <RDMHandler::RespondMessageAck()>
 800c25a:	bf00      	nop
 800c25c:	2001d348 	andcs	sp, r1, r8, asr #6

0800c260 <RDMHandler::GetAddressNetmask(unsigned short)>:
 800c260:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c262:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800c266:	4e0f      	ldr	r6, [pc, #60]	; (800c2a4 <RDMHandler::GetAddressNetmask(unsigned short)+0x44>)
 800c268:	4604      	mov	r4, r0
 800c26a:	6833      	ldr	r3, [r6, #0]
 800c26c:	f105 0018 	add.w	r0, r5, #24
 800c270:	695b      	ldr	r3, [r3, #20]
 800c272:	3117      	adds	r1, #23
 800c274:	9301      	str	r3, [sp, #4]
 800c276:	f7ff fef9 	bl	800c06c <memcpy.constprop.0.isra.0>
 800c27a:	a901      	add	r1, sp, #4
 800c27c:	f105 001c 	add.w	r0, r5, #28
 800c280:	f7ff fef4 	bl	800c06c <memcpy.constprop.0.isra.0>
 800c284:	6836      	ldr	r6, [r6, #0]
 800c286:	69f0      	ldr	r0, [r6, #28]
 800c288:	f008 fcda 	bl	8014c40 <__popcountsi2>
 800c28c:	f885 0020 	strb.w	r0, [r5, #32]
 800c290:	7973      	ldrb	r3, [r6, #5]
 800c292:	4620      	mov	r0, r4
 800c294:	f885 3021 	strb.w	r3, [r5, #33]	; 0x21
 800c298:	230a      	movs	r3, #10
 800c29a:	75eb      	strb	r3, [r5, #23]
 800c29c:	f7ff fc30 	bl	800bb00 <RDMHandler::RespondMessageAck()>
 800c2a0:	b002      	add	sp, #8
 800c2a2:	bd70      	pop	{r4, r5, r6, pc}
 800c2a4:	2001d348 	andcs	sp, r1, r8, asr #6

0800c2a8 <RDMHandler::GetStaticAddress(unsigned short)>:
 800c2a8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c2aa:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800c2ae:	4e0e      	ldr	r6, [pc, #56]	; (800c2e8 <RDMHandler::GetStaticAddress(unsigned short)+0x40>)
 800c2b0:	4604      	mov	r4, r0
 800c2b2:	6833      	ldr	r3, [r6, #0]
 800c2b4:	f105 0018 	add.w	r0, r5, #24
 800c2b8:	695b      	ldr	r3, [r3, #20]
 800c2ba:	3117      	adds	r1, #23
 800c2bc:	9301      	str	r3, [sp, #4]
 800c2be:	f7ff fed5 	bl	800c06c <memcpy.constprop.0.isra.0>
 800c2c2:	a901      	add	r1, sp, #4
 800c2c4:	f105 001c 	add.w	r0, r5, #28
 800c2c8:	f7ff fed0 	bl	800c06c <memcpy.constprop.0.isra.0>
 800c2cc:	6833      	ldr	r3, [r6, #0]
 800c2ce:	69d8      	ldr	r0, [r3, #28]
 800c2d0:	f008 fcb6 	bl	8014c40 <__popcountsi2>
 800c2d4:	2309      	movs	r3, #9
 800c2d6:	f885 0020 	strb.w	r0, [r5, #32]
 800c2da:	75eb      	strb	r3, [r5, #23]
 800c2dc:	4620      	mov	r0, r4
 800c2de:	f7ff fc0f 	bl	800bb00 <RDMHandler::RespondMessageAck()>
 800c2e2:	b002      	add	sp, #8
 800c2e4:	bd70      	pop	{r4, r5, r6, pc}
 800c2e6:	bf00      	nop
 800c2e8:	2001d348 	andcs	sp, r1, r8, asr #6

0800c2ec <RDMHandler::SetStaticAddress(bool, unsigned short)>:
 800c2ec:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c2ee:	6845      	ldr	r5, [r0, #4]
 800c2f0:	4604      	mov	r4, r0
 800c2f2:	7dab      	ldrb	r3, [r5, #22]
 800c2f4:	2b09      	cmp	r3, #9
 800c2f6:	d005      	beq.n	800c304 <RDMHandler::SetStaticAddress(bool, unsigned short)+0x18>
 800c2f8:	2101      	movs	r1, #1
 800c2fa:	b003      	add	sp, #12
 800c2fc:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800c300:	f7ff bcc2 	b.w	800bc88 <RDMHandler::RespondMessageNack(unsigned short)>
 800c304:	f105 011b 	add.w	r1, r5, #27
 800c308:	a801      	add	r0, sp, #4
 800c30a:	f7ff feaf 	bl	800c06c <memcpy.constprop.0.isra.0>
 800c30e:	4b09      	ldr	r3, [pc, #36]	; (800c334 <RDMHandler::SetStaticAddress(bool, unsigned short)+0x48>)
 800c310:	7fea      	ldrb	r2, [r5, #31]
 800c312:	6818      	ldr	r0, [r3, #0]
 800c314:	9901      	ldr	r1, [sp, #4]
 800c316:	b12a      	cbz	r2, 800c324 <RDMHandler::SetStaticAddress(bool, unsigned short)+0x38>
 800c318:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800c31c:	f1c2 0220 	rsb	r2, r2, #32
 800c320:	4093      	lsls	r3, r2
 800c322:	ba1a      	rev	r2, r3
 800c324:	f004 f8fa 	bl	801051c <Network::SetQueuedStaticIp(unsigned int, unsigned int)>
 800c328:	4620      	mov	r0, r4
 800c32a:	f7ff fbe9 	bl	800bb00 <RDMHandler::RespondMessageAck()>
 800c32e:	b003      	add	sp, #12
 800c330:	bd30      	pop	{r4, r5, pc}
 800c332:	bf00      	nop
 800c334:	2001d348 	andcs	sp, r1, r8, asr #6

0800c338 <RDMHandler::ApplyConfiguration(bool, unsigned short)>:
 800c338:	4b08      	ldr	r3, [pc, #32]	; (800c35c <RDMHandler::ApplyConfiguration(bool, unsigned short)+0x24>)
 800c33a:	b510      	push	{r4, lr}
 800c33c:	4604      	mov	r4, r0
 800c33e:	6818      	ldr	r0, [r3, #0]
 800c340:	f004 f8f9 	bl	8010536 <Network::ApplyQueuedConfig()>
 800c344:	b120      	cbz	r0, 800c350 <RDMHandler::ApplyConfiguration(bool, unsigned short)+0x18>
 800c346:	4620      	mov	r0, r4
 800c348:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c34c:	f7ff bbd8 	b.w	800bb00 <RDMHandler::RespondMessageAck()>
 800c350:	4620      	mov	r0, r4
 800c352:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c356:	2101      	movs	r1, #1
 800c358:	f7ff bc96 	b.w	800bc88 <RDMHandler::RespondMessageNack(unsigned short)>
 800c35c:	2001d348 	andcs	sp, r1, r8, asr #6

0800c360 <RDMHandler::GetDefaultRoute(unsigned short)>:
 800c360:	4b0c      	ldr	r3, [pc, #48]	; (800c394 <RDMHandler::GetDefaultRoute(unsigned short)+0x34>)
 800c362:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c364:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800c368:	681b      	ldr	r3, [r3, #0]
 800c36a:	4604      	mov	r4, r0
 800c36c:	699b      	ldr	r3, [r3, #24]
 800c36e:	f105 0018 	add.w	r0, r5, #24
 800c372:	3117      	adds	r1, #23
 800c374:	9301      	str	r3, [sp, #4]
 800c376:	f7ff fe79 	bl	800c06c <memcpy.constprop.0.isra.0>
 800c37a:	a901      	add	r1, sp, #4
 800c37c:	f105 001c 	add.w	r0, r5, #28
 800c380:	f7ff fe74 	bl	800c06c <memcpy.constprop.0.isra.0>
 800c384:	2308      	movs	r3, #8
 800c386:	4620      	mov	r0, r4
 800c388:	75eb      	strb	r3, [r5, #23]
 800c38a:	f7ff fbb9 	bl	800bb00 <RDMHandler::RespondMessageAck()>
 800c38e:	b003      	add	sp, #12
 800c390:	bd30      	pop	{r4, r5, pc}
 800c392:	bf00      	nop
 800c394:	2001d348 	andcs	sp, r1, r8, asr #6

0800c398 <RDMHandler::SetDefaultRoute(bool, unsigned short)>:
 800c398:	210b      	movs	r1, #11
 800c39a:	f7ff bc75 	b.w	800bc88 <RDMHandler::RespondMessageNack(unsigned short)>
	...

0800c3a0 <RDMHandler::GetHostName(unsigned short)>:
 800c3a0:	4b0a      	ldr	r3, [pc, #40]	; (800c3cc <RDMHandler::GetHostName(unsigned short)+0x2c>)
 800c3a2:	b510      	push	{r4, lr}
 800c3a4:	6819      	ldr	r1, [r3, #0]
 800c3a6:	4604      	mov	r4, r0
 800c3a8:	3120      	adds	r1, #32
 800c3aa:	460b      	mov	r3, r1
 800c3ac:	461a      	mov	r2, r3
 800c3ae:	7810      	ldrb	r0, [r2, #0]
 800c3b0:	3301      	adds	r3, #1
 800c3b2:	2800      	cmp	r0, #0
 800c3b4:	d1fa      	bne.n	800c3ac <RDMHandler::GetHostName(unsigned short)+0xc>
 800c3b6:	1a52      	subs	r2, r2, r1
 800c3b8:	4620      	mov	r0, r4
 800c3ba:	b292      	uxth	r2, r2
 800c3bc:	f7ff fb48 	bl	800ba50 <RDMHandler::HandleString(char const*, unsigned int)>
 800c3c0:	4620      	mov	r0, r4
 800c3c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c3c6:	f7ff bb9b 	b.w	800bb00 <RDMHandler::RespondMessageAck()>
 800c3ca:	bf00      	nop
 800c3cc:	2001d348 	andcs	sp, r1, r8, asr #6

0800c3d0 <RDMHandler::SetHostName(bool, unsigned short)>:
 800c3d0:	b510      	push	{r4, lr}
 800c3d2:	6841      	ldr	r1, [r0, #4]
 800c3d4:	4604      	mov	r4, r0
 800c3d6:	7d8b      	ldrb	r3, [r1, #22]
 800c3d8:	2b3f      	cmp	r3, #63	; 0x3f
 800c3da:	d904      	bls.n	800c3e6 <RDMHandler::SetHostName(bool, unsigned short)+0x16>
 800c3dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c3e0:	2102      	movs	r1, #2
 800c3e2:	f7ff bc51 	b.w	800bc88 <RDMHandler::RespondMessageNack(unsigned short)>
 800c3e6:	2200      	movs	r2, #0
 800c3e8:	440b      	add	r3, r1
 800c3ea:	75da      	strb	r2, [r3, #23]
 800c3ec:	4b04      	ldr	r3, [pc, #16]	; (800c400 <RDMHandler::SetHostName(bool, unsigned short)+0x30>)
 800c3ee:	3117      	adds	r1, #23
 800c3f0:	6818      	ldr	r0, [r3, #0]
 800c3f2:	f004 f803 	bl	80103fc <Network::SetHostName(char const*)>
 800c3f6:	4620      	mov	r0, r4
 800c3f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c3fc:	f7ff bb80 	b.w	800bb00 <RDMHandler::RespondMessageAck()>
 800c400:	2001d348 	andcs	sp, r1, r8, asr #6

0800c404 <RDMHandler::GetDomainName(unsigned short)>:
 800c404:	4b0a      	ldr	r3, [pc, #40]	; (800c430 <RDMHandler::GetDomainName(unsigned short)+0x2c>)
 800c406:	b510      	push	{r4, lr}
 800c408:	6819      	ldr	r1, [r3, #0]
 800c40a:	4604      	mov	r4, r0
 800c40c:	3160      	adds	r1, #96	; 0x60
 800c40e:	460b      	mov	r3, r1
 800c410:	461a      	mov	r2, r3
 800c412:	7810      	ldrb	r0, [r2, #0]
 800c414:	3301      	adds	r3, #1
 800c416:	2800      	cmp	r0, #0
 800c418:	d1fa      	bne.n	800c410 <RDMHandler::GetDomainName(unsigned short)+0xc>
 800c41a:	1a52      	subs	r2, r2, r1
 800c41c:	4620      	mov	r0, r4
 800c41e:	b292      	uxth	r2, r2
 800c420:	f7ff fb16 	bl	800ba50 <RDMHandler::HandleString(char const*, unsigned int)>
 800c424:	4620      	mov	r0, r4
 800c426:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c42a:	f7ff bb69 	b.w	800bb00 <RDMHandler::RespondMessageAck()>
 800c42e:	bf00      	nop
 800c430:	2001d348 	andcs	sp, r1, r8, asr #6

0800c434 <RDMHandler::SetDomainName(bool, unsigned short)>:
 800c434:	210b      	movs	r1, #11
 800c436:	f7ff bc27 	b.w	800bc88 <RDMHandler::RespondMessageNack(unsigned short)>
	...

0800c43c <RDMDevice::RDMDevice()>:
 800c43c:	4a33      	ldr	r2, [pc, #204]	; (800c50c <RDMDevice::RDMDevice()+0xd0>)
 800c43e:	2300      	movs	r3, #0
 800c440:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c442:	4604      	mov	r4, r0
 800c444:	4611      	mov	r1, r2
 800c446:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
 800c44a:	f880 3071 	strb.w	r3, [r0, #113]	; 0x71
 800c44e:	f8a0 3072 	strh.w	r3, [r0, #114]	; 0x72
 800c452:	6743      	str	r3, [r0, #116]	; 0x74
 800c454:	4613      	mov	r3, r2
 800c456:	7818      	ldrb	r0, [r3, #0]
 800c458:	3201      	adds	r2, #1
 800c45a:	2800      	cmp	r0, #0
 800c45c:	d1fa      	bne.n	800c454 <RDMDevice::RDMDevice()+0x18>
 800c45e:	1a5b      	subs	r3, r3, r1
 800c460:	2b20      	cmp	r3, #32
 800c462:	bf28      	it	cs
 800c464:	2320      	movcs	r3, #32
 800c466:	f104 052a 	add.w	r5, r4, #42	; 0x2a
 800c46a:	4629      	mov	r1, r5
 800c46c:	461a      	mov	r2, r3
 800c46e:	4827      	ldr	r0, [pc, #156]	; (800c50c <RDMDevice::RDMDevice()+0xd0>)
 800c470:	3a01      	subs	r2, #1
 800c472:	d23b      	bcs.n	800c4ec <RDMDevice::RDMDevice()+0xb0>
 800c474:	f884 304b 	strb.w	r3, [r4, #75]	; 0x4b
 800c478:	4b25      	ldr	r3, [pc, #148]	; (800c510 <RDMDevice::RDMDevice()+0xd4>)
 800c47a:	4669      	mov	r1, sp
 800c47c:	781a      	ldrb	r2, [r3, #0]
 800c47e:	7022      	strb	r2, [r4, #0]
 800c480:	785b      	ldrb	r3, [r3, #1]
 800c482:	7063      	strb	r3, [r4, #1]
 800c484:	4b23      	ldr	r3, [pc, #140]	; (800c514 <RDMDevice::RDMDevice()+0xd8>)
 800c486:	6818      	ldr	r0, [r3, #0]
 800c488:	f003 fe0e 	bl	80100a8 <Network::MacAddressCopyTo(unsigned char*)>
 800c48c:	f89d 3002 	ldrb.w	r3, [sp, #2]
 800c490:	f89d 2003 	ldrb.w	r2, [sp, #3]
 800c494:	70a3      	strb	r3, [r4, #2]
 800c496:	7263      	strb	r3, [r4, #9]
 800c498:	4b1f      	ldr	r3, [pc, #124]	; (800c518 <RDMDevice::RDMDevice()+0xdc>)
 800c49a:	70e2      	strb	r2, [r4, #3]
 800c49c:	7222      	strb	r2, [r4, #8]
 800c49e:	461a      	mov	r2, r3
 800c4a0:	f89d 1004 	ldrb.w	r1, [sp, #4]
 800c4a4:	f89d 0005 	ldrb.w	r0, [sp, #5]
 800c4a8:	7121      	strb	r1, [r4, #4]
 800c4aa:	7160      	strb	r0, [r4, #5]
 800c4ac:	71a0      	strb	r0, [r4, #6]
 800c4ae:	71e1      	strb	r1, [r4, #7]
 800c4b0:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800c4b4:	2900      	cmp	r1, #0
 800c4b6:	d1fb      	bne.n	800c4b0 <RDMDevice::RDMDevice()+0x74>
 800c4b8:	1a9b      	subs	r3, r3, r2
 800c4ba:	2b20      	cmp	r3, #32
 800c4bc:	bf28      	it	cs
 800c4be:	2320      	movcs	r3, #32
 800c4c0:	461a      	mov	r2, r3
 800c4c2:	4915      	ldr	r1, [pc, #84]	; (800c518 <RDMDevice::RDMDevice()+0xdc>)
 800c4c4:	3a01      	subs	r2, #1
 800c4c6:	d216      	bcs.n	800c4f6 <RDMDevice::RDMDevice()+0xba>
 800c4c8:	f884 304b 	strb.w	r3, [r4, #75]	; 0x4b
 800c4cc:	f06f 2380 	mvn.w	r3, #2147516416	; 0x80008000
 800c4d0:	64e3      	str	r3, [r4, #76]	; 0x4c
 800c4d2:	2315      	movs	r3, #21
 800c4d4:	4a11      	ldr	r2, [pc, #68]	; (800c51c <RDMDevice::RDMDevice()+0xe0>)
 800c4d6:	f884 3071 	strb.w	r3, [r4, #113]	; 0x71
 800c4da:	f104 0165 	add.w	r1, r4, #101	; 0x65
 800c4de:	f104 0350 	add.w	r3, r4, #80	; 0x50
 800c4e2:	4299      	cmp	r1, r3
 800c4e4:	d10c      	bne.n	800c500 <RDMDevice::RDMDevice()+0xc4>
 800c4e6:	4620      	mov	r0, r4
 800c4e8:	b002      	add	sp, #8
 800c4ea:	bd70      	pop	{r4, r5, r6, pc}
 800c4ec:	f810 6b01 	ldrb.w	r6, [r0], #1
 800c4f0:	f801 6f01 	strb.w	r6, [r1, #1]!
 800c4f4:	e7bc      	b.n	800c470 <RDMDevice::RDMDevice()+0x34>
 800c4f6:	f811 0b01 	ldrb.w	r0, [r1], #1
 800c4fa:	f805 0f01 	strb.w	r0, [r5, #1]!
 800c4fe:	e7e1      	b.n	800c4c4 <RDMDevice::RDMDevice()+0x88>
 800c500:	f812 0b01 	ldrb.w	r0, [r2], #1
 800c504:	f803 0f01 	strb.w	r0, [r3, #1]!
 800c508:	e7eb      	b.n	800c4e2 <RDMDevice::RDMDevice()+0xa6>
 800c50a:	bf00      	nop
 800c50c:	080166ac 	stmdaeq	r1, {r2, r3, r5, r7, r9, sl, sp, lr}
 800c510:	080166aa 	stmdaeq	r1, {r1, r3, r5, r7, r9, sl, sp, lr}
 800c514:	2001d348 	andcs	sp, r1, r8, asr #6
 800c518:	08015f2d 	stmdaeq	r1, {r0, r2, r3, r5, r8, r9, sl, fp, ip, lr}
 800c51c:	08016694 	stmdaeq	r1, {r2, r4, r7, r9, sl, sp, lr}

0800c520 <RDMDevice::Print()>:
 800c520:	b513      	push	{r0, r1, r4, lr}
 800c522:	4604      	mov	r4, r0
 800c524:	4818      	ldr	r0, [pc, #96]	; (800c588 <RDMDevice::Print()+0x68>)
 800c526:	f7fd f821 	bl	800956c <printf>
 800c52a:	f894 104b 	ldrb.w	r1, [r4, #75]	; 0x4b
 800c52e:	f104 022b 	add.w	r2, r4, #43	; 0x2b
 800c532:	4816      	ldr	r0, [pc, #88]	; (800c58c <RDMDevice::Print()+0x6c>)
 800c534:	f7fd f81a 	bl	800956c <printf>
 800c538:	7862      	ldrb	r2, [r4, #1]
 800c53a:	7821      	ldrb	r1, [r4, #0]
 800c53c:	4814      	ldr	r0, [pc, #80]	; (800c590 <RDMDevice::Print()+0x70>)
 800c53e:	f7fd f815 	bl	800956c <printf>
 800c542:	79a3      	ldrb	r3, [r4, #6]
 800c544:	7a22      	ldrb	r2, [r4, #8]
 800c546:	7a61      	ldrb	r1, [r4, #9]
 800c548:	9300      	str	r3, [sp, #0]
 800c54a:	4812      	ldr	r0, [pc, #72]	; (800c594 <RDMDevice::Print()+0x74>)
 800c54c:	79e3      	ldrb	r3, [r4, #7]
 800c54e:	f7fd f80d 	bl	800956c <printf>
 800c552:	f894 102a 	ldrb.w	r1, [r4, #42]	; 0x2a
 800c556:	f104 020a 	add.w	r2, r4, #10
 800c55a:	480f      	ldr	r0, [pc, #60]	; (800c598 <RDMDevice::Print()+0x78>)
 800c55c:	f7fd f806 	bl	800956c <printf>
 800c560:	f8b4 104c 	ldrh.w	r1, [r4, #76]	; 0x4c
 800c564:	f894 204c 	ldrb.w	r2, [r4, #76]	; 0x4c
 800c568:	0a09      	lsrs	r1, r1, #8
 800c56a:	480c      	ldr	r0, [pc, #48]	; (800c59c <RDMDevice::Print()+0x7c>)
 800c56c:	f7fc fffe 	bl	800956c <printf>
 800c570:	f8b4 104e 	ldrh.w	r1, [r4, #78]	; 0x4e
 800c574:	f894 204e 	ldrb.w	r2, [r4, #78]	; 0x4e
 800c578:	4809      	ldr	r0, [pc, #36]	; (800c5a0 <RDMDevice::Print()+0x80>)
 800c57a:	0a09      	lsrs	r1, r1, #8
 800c57c:	b002      	add	sp, #8
 800c57e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c582:	f7fc bff3 	b.w	800956c <printf>
 800c586:	bf00      	nop
 800c588:	080165c0 	stmdaeq	r1, {r6, r7, r8, sl, sp, lr}
 800c58c:	080165da 	stmdaeq	r1, {r1, r3, r4, r6, r7, r8, sl, sp, lr}
 800c590:	080165f5 	stmdaeq	r1, {r0, r2, r4, r5, r6, r7, r8, sl, sp, lr}
 800c594:	08016614 	stmdaeq	r1, {r2, r4, r9, sl, sp, lr}
 800c598:	0801663b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r9, sl, sp, lr}
 800c59c:	08016656 	stmdaeq	r1, {r1, r2, r4, r6, r9, sl, sp, lr}
 800c5a0:	08016675 	stmdaeq	r1, {r0, r2, r4, r5, r6, r9, sl, sp, lr}

0800c5a4 <uuid_unparse_x>:
 800c5a4:	4603      	mov	r3, r0
 800c5a6:	b530      	push	{r4, r5, lr}
 800c5a8:	4608      	mov	r0, r1
 800c5aa:	4611      	mov	r1, r2
 800c5ac:	681a      	ldr	r2, [r3, #0]
 800c5ae:	b08f      	sub	sp, #60	; 0x3c
 800c5b0:	ba12      	rev	r2, r2
 800c5b2:	920a      	str	r2, [sp, #40]	; 0x28
 800c5b4:	889a      	ldrh	r2, [r3, #4]
 800c5b6:	891c      	ldrh	r4, [r3, #8]
 800c5b8:	ba52      	rev16	r2, r2
 800c5ba:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800c5be:	88da      	ldrh	r2, [r3, #6]
 800c5c0:	ba64      	rev16	r4, r4
 800c5c2:	ba52      	rev16	r2, r2
 800c5c4:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 800c5c8:	f8ad 4030 	strh.w	r4, [sp, #48]	; 0x30
 800c5cc:	f103 020a 	add.w	r2, r3, #10
 800c5d0:	f10d 0431 	add.w	r4, sp, #49	; 0x31
 800c5d4:	3310      	adds	r3, #16
 800c5d6:	4293      	cmp	r3, r2
 800c5d8:	d122      	bne.n	800c620 <uuid_unparse_x+0x7c>
 800c5da:	f89d 2037 	ldrb.w	r2, [sp, #55]	; 0x37
 800c5de:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 800c5e2:	9208      	str	r2, [sp, #32]
 800c5e4:	f89d 2036 	ldrb.w	r2, [sp, #54]	; 0x36
 800c5e8:	0a1b      	lsrs	r3, r3, #8
 800c5ea:	9207      	str	r2, [sp, #28]
 800c5ec:	f89d 2035 	ldrb.w	r2, [sp, #53]	; 0x35
 800c5f0:	9301      	str	r3, [sp, #4]
 800c5f2:	9206      	str	r2, [sp, #24]
 800c5f4:	f89d 2034 	ldrb.w	r2, [sp, #52]	; 0x34
 800c5f8:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 800c5fc:	9205      	str	r2, [sp, #20]
 800c5fe:	f89d 2033 	ldrb.w	r2, [sp, #51]	; 0x33
 800c602:	9300      	str	r3, [sp, #0]
 800c604:	9204      	str	r2, [sp, #16]
 800c606:	f89d 2032 	ldrb.w	r2, [sp, #50]	; 0x32
 800c60a:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 800c60e:	9203      	str	r2, [sp, #12]
 800c610:	f89d 2030 	ldrb.w	r2, [sp, #48]	; 0x30
 800c614:	9202      	str	r2, [sp, #8]
 800c616:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800c618:	f7fc ffb8 	bl	800958c <sprintf>
 800c61c:	b00f      	add	sp, #60	; 0x3c
 800c61e:	bd30      	pop	{r4, r5, pc}
 800c620:	f812 5b01 	ldrb.w	r5, [r2], #1
 800c624:	f804 5f01 	strb.w	r5, [r4, #1]!
 800c628:	e7d5      	b.n	800c5d6 <uuid_unparse_x+0x32>
	...

0800c62c <uuid_unparse>:
 800c62c:	4a01      	ldr	r2, [pc, #4]	; (800c634 <uuid_unparse+0x8>)
 800c62e:	f7ff bfb9 	b.w	800c5a4 <uuid_unparse_x>
 800c632:	bf00      	nop
 800c634:	080166c8 	stmdaeq	r1, {r3, r6, r7, r9, sl, sp, lr}

0800c638 <WS28xxDmxMulti::SetDmxStartAddress(unsigned short)>:
 800c638:	2000      	movs	r0, #0
 800c63a:	4770      	bx	lr

0800c63c <WS28xxDmxMulti::GetDmxStartAddress()>:
 800c63c:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800c640:	4770      	bx	lr

0800c642 <WS28xxDmxMulti::GetDmxFootprint()>:
 800c642:	2000      	movs	r0, #0
 800c644:	4770      	bx	lr

0800c646 <WS28xxDmxMulti::Start(unsigned int)>:
 800c646:	b538      	push	{r3, r4, r5, lr}
 800c648:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800c64a:	4604      	mov	r4, r0
 800c64c:	460d      	mov	r5, r1
 800c64e:	b923      	cbnz	r3, 800c65a <WS28xxDmxMulti::Start(unsigned int)+0x14>
 800c650:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800c652:	b110      	cbz	r0, 800c65a <WS28xxDmxMulti::Start(unsigned int)+0x14>
 800c654:	6803      	ldr	r3, [r0, #0]
 800c656:	689b      	ldr	r3, [r3, #8]
 800c658:	4798      	blx	r3
 800c65a:	2301      	movs	r3, #1
 800c65c:	fa03 f105 	lsl.w	r1, r3, r5
 800c660:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800c662:	430b      	orrs	r3, r1
 800c664:	6523      	str	r3, [r4, #80]	; 0x50
 800c666:	bd38      	pop	{r3, r4, r5, pc}

0800c668 <WS28xxDmxMulti::~WS28xxDmxMulti()>:
 800c668:	b538      	push	{r3, r4, r5, lr}
 800c66a:	4b06      	ldr	r3, [pc, #24]	; (800c684 <WS28xxDmxMulti::~WS28xxDmxMulti()+0x1c>)
 800c66c:	6c85      	ldr	r5, [r0, #72]	; 0x48
 800c66e:	4604      	mov	r4, r0
 800c670:	6003      	str	r3, [r0, #0]
 800c672:	b12d      	cbz	r5, 800c680 <WS28xxDmxMulti::~WS28xxDmxMulti()+0x18>
 800c674:	4628      	mov	r0, r5
 800c676:	f001 fa9d 	bl	800dbb4 <WS28xxMulti::~WS28xxMulti()>
 800c67a:	4628      	mov	r0, r5
 800c67c:	f006 f830 	bl	80126e0 <operator delete(void*)>
 800c680:	4620      	mov	r0, r4
 800c682:	bd38      	pop	{r3, r4, r5, pc}
 800c684:	08016704 	stmdaeq	r1, {r2, r8, r9, sl, sp, lr}

0800c688 <WS28xxDmxMulti::~WS28xxDmxMulti()>:
 800c688:	b510      	push	{r4, lr}
 800c68a:	4604      	mov	r4, r0
 800c68c:	f7ff ffec 	bl	800c668 <WS28xxDmxMulti::~WS28xxDmxMulti()>
 800c690:	4620      	mov	r0, r4
 800c692:	f006 f825 	bl	80126e0 <operator delete(void*)>
 800c696:	4620      	mov	r0, r4
 800c698:	bd10      	pop	{r4, pc}

0800c69a <WS28xxDmxMulti::Blackout(bool)>:
 800c69a:	b538      	push	{r3, r4, r5, lr}
 800c69c:	4604      	mov	r4, r0
 800c69e:	460d      	mov	r5, r1
 800c6a0:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 800c6a4:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800c6a6:	f001 fe45 	bl	800e334 <WS28xxMulti::IsUpdating()>
 800c6aa:	2800      	cmp	r0, #0
 800c6ac:	d1fa      	bne.n	800c6a4 <WS28xxDmxMulti::Blackout(bool)+0xa>
 800c6ae:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800c6b0:	b11d      	cbz	r5, 800c6ba <WS28xxDmxMulti::Blackout(bool)+0x20>
 800c6b2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c6b6:	f001 bd79 	b.w	800e1ac <WS28xxMulti::Blackout()>
 800c6ba:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c6be:	f001 bcf9 	b.w	800e0b4 <WS28xxMulti::Update()>

0800c6c2 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)>:
 800c6c2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c6c6:	b089      	sub	sp, #36	; 0x24
 800c6c8:	9306      	str	r3, [sp, #24]
 800c6ca:	088b      	lsrs	r3, r1, #2
 800c6cc:	4691      	mov	r9, r2
 800c6ce:	9105      	str	r1, [sp, #20]
 800c6d0:	f001 0203 	and.w	r2, r1, #3
 800c6d4:	9307      	str	r3, [sp, #28]
 800c6d6:	9906      	ldr	r1, [sp, #24]
 800c6d8:	6c43      	ldr	r3, [r0, #68]	; 0x44
 800c6da:	2a02      	cmp	r2, #2
 800c6dc:	4604      	mov	r4, r0
 800c6de:	fbb1 f3f3 	udiv	r3, r1, r3
 800c6e2:	6a86      	ldr	r6, [r0, #40]	; 0x28
 800c6e4:	d030      	beq.n	800c748 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x86>
 800c6e6:	2a03      	cmp	r2, #3
 800c6e8:	d030      	beq.n	800c74c <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x8a>
 800c6ea:	2a01      	cmp	r2, #1
 800c6ec:	d026      	beq.n	800c73c <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x7a>
 800c6ee:	429e      	cmp	r6, r3
 800c6f0:	bf28      	it	cs
 800c6f2:	461e      	movcs	r6, r3
 800c6f4:	2500      	movs	r5, #0
 800c6f6:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800c6f8:	f001 fe1c 	bl	800e334 <WS28xxMulti::IsUpdating()>
 800c6fc:	2800      	cmp	r0, #0
 800c6fe:	d1fa      	bne.n	800c6f6 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x34>
 800c700:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800c702:	f8d4 a024 	ldr.w	sl, [r4, #36]	; 0x24
 800c706:	2b03      	cmp	r3, #3
 800c708:	46c8      	mov	r8, r9
 800c70a:	fb0a f705 	mul.w	r7, sl, r5
 800c70e:	d040      	beq.n	800c792 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xd0>
 800c710:	42b5      	cmp	r5, r6
 800c712:	d240      	bcs.n	800c796 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xd4>
 800c714:	9a06      	ldr	r2, [sp, #24]
 800c716:	eba8 0309 	sub.w	r3, r8, r9
 800c71a:	429a      	cmp	r2, r3
 800c71c:	d93b      	bls.n	800c796 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xd4>
 800c71e:	f04f 0b00 	mov.w	fp, #0
 800c722:	f898 f000 	pld	[r8]
 800c726:	fa1f f28b 	uxth.w	r2, fp
 800c72a:	4552      	cmp	r2, sl
 800c72c:	f10b 0b01 	add.w	fp, fp, #1
 800c730:	d33b      	bcc.n	800c7aa <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xe8>
 800c732:	3501      	adds	r5, #1
 800c734:	f108 0804 	add.w	r8, r8, #4
 800c738:	4457      	add	r7, sl
 800c73a:	e7e9      	b.n	800c710 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x4e>
 800c73c:	6b45      	ldr	r5, [r0, #52]	; 0x34
 800c73e:	442b      	add	r3, r5
 800c740:	429e      	cmp	r6, r3
 800c742:	bf28      	it	cs
 800c744:	461e      	movcs	r6, r3
 800c746:	e7d6      	b.n	800c6f6 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x34>
 800c748:	6b85      	ldr	r5, [r0, #56]	; 0x38
 800c74a:	e7f8      	b.n	800c73e <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x7c>
 800c74c:	6bc5      	ldr	r5, [r0, #60]	; 0x3c
 800c74e:	e7f6      	b.n	800c73e <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x7c>
 800c750:	f898 3002 	ldrb.w	r3, [r8, #2]
 800c754:	9907      	ldr	r1, [sp, #28]
 800c756:	9301      	str	r3, [sp, #4]
 800c758:	f898 3001 	ldrb.w	r3, [r8, #1]
 800c75c:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800c75e:	9300      	str	r3, [sp, #0]
 800c760:	f898 3000 	ldrb.w	r3, [r8]
 800c764:	443a      	add	r2, r7
 800c766:	f001 fe67 	bl	800e438 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 800c76a:	e008      	b.n	800c77e <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xbc>
 800c76c:	9a06      	ldr	r2, [sp, #24]
 800c76e:	eba8 0309 	sub.w	r3, r8, r9
 800c772:	429a      	cmp	r2, r3
 800c774:	d90f      	bls.n	800c796 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xd4>
 800c776:	f04f 0b00 	mov.w	fp, #0
 800c77a:	f898 f000 	pld	[r8]
 800c77e:	fa1f f28b 	uxth.w	r2, fp
 800c782:	4552      	cmp	r2, sl
 800c784:	f10b 0b01 	add.w	fp, fp, #1
 800c788:	d3e2      	bcc.n	800c750 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x8e>
 800c78a:	3501      	adds	r5, #1
 800c78c:	f108 0803 	add.w	r8, r8, #3
 800c790:	4457      	add	r7, sl
 800c792:	42b5      	cmp	r5, r6
 800c794:	d3ea      	bcc.n	800c76c <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xaa>
 800c796:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800c798:	9a05      	ldr	r2, [sp, #20]
 800c79a:	4293      	cmp	r3, r2
 800c79c:	d116      	bne.n	800c7cc <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x10a>
 800c79e:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800c7a0:	b009      	add	sp, #36	; 0x24
 800c7a2:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c7a6:	f001 bc85 	b.w	800e0b4 <WS28xxMulti::Update()>
 800c7aa:	f898 3003 	ldrb.w	r3, [r8, #3]
 800c7ae:	9907      	ldr	r1, [sp, #28]
 800c7b0:	9302      	str	r3, [sp, #8]
 800c7b2:	f898 3002 	ldrb.w	r3, [r8, #2]
 800c7b6:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800c7b8:	9301      	str	r3, [sp, #4]
 800c7ba:	f898 3001 	ldrb.w	r3, [r8, #1]
 800c7be:	443a      	add	r2, r7
 800c7c0:	9300      	str	r3, [sp, #0]
 800c7c2:	f898 3000 	ldrb.w	r3, [r8]
 800c7c6:	f001 febf 	bl	800e548 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
 800c7ca:	e7ac      	b.n	800c726 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x64>
 800c7cc:	b009      	add	sp, #36	; 0x24
 800c7ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800c7d2 <WS28xxDmxMulti::FullOn()>:
 800c7d2:	b510      	push	{r4, lr}
 800c7d4:	4604      	mov	r4, r0
 800c7d6:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800c7d8:	f001 fdac 	bl	800e334 <WS28xxMulti::IsUpdating()>
 800c7dc:	2800      	cmp	r0, #0
 800c7de:	d1fa      	bne.n	800c7d6 <WS28xxDmxMulti::FullOn()+0x4>
 800c7e0:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800c7e2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c7e6:	f001 bd45 	b.w	800e274 <WS28xxMulti::FullOn()>

0800c7ea <WS28xxDmxMulti::Print()>:
 800c7ea:	3004      	adds	r0, #4
 800c7ec:	f000 bcb2 	b.w	800d154 <PixelDmxConfiguration::Print()>

0800c7f0 <WS28xxDmxMulti::Stop(unsigned int)>:
 800c7f0:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800c7f2:	fa23 f201 	lsr.w	r2, r3, r1
 800c7f6:	07d2      	lsls	r2, r2, #31
 800c7f8:	bf41      	itttt	mi
 800c7fa:	2201      	movmi	r2, #1
 800c7fc:	408a      	lslmi	r2, r1
 800c7fe:	4393      	bicmi	r3, r2
 800c800:	6503      	strmi	r3, [r0, #80]	; 0x50
 800c802:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800c804:	b923      	cbnz	r3, 800c810 <WS28xxDmxMulti::Stop(unsigned int)+0x20>
 800c806:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800c808:	b110      	cbz	r0, 800c810 <WS28xxDmxMulti::Stop(unsigned int)+0x20>
 800c80a:	6803      	ldr	r3, [r0, #0]
 800c80c:	68db      	ldr	r3, [r3, #12]
 800c80e:	4718      	bx	r3
 800c810:	4770      	bx	lr
	...

0800c814 <WS28xxDmxMulti::WS28xxDmxMulti(PixelDmxConfiguration&)>:
 800c814:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c816:	4604      	mov	r4, r0
 800c818:	460d      	mov	r5, r1
 800c81a:	4b14      	ldr	r3, [pc, #80]	; (800c86c <WS28xxDmxMulti::WS28xxDmxMulti(PixelDmxConfiguration&)+0x58>)
 800c81c:	4606      	mov	r6, r0
 800c81e:	f844 3b04 	str.w	r3, [r4], #4
 800c822:	460f      	mov	r7, r1
 800c824:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800c826:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800c828:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800c82a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800c82c:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 800c830:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800c834:	2300      	movs	r3, #0
 800c836:	f106 0244 	add.w	r2, r6, #68	; 0x44
 800c83a:	2108      	movs	r1, #8
 800c83c:	e9c6 3312 	strd	r3, r3, [r6, #72]	; 0x48
 800c840:	6533      	str	r3, [r6, #80]	; 0x50
 800c842:	f886 3054 	strb.w	r3, [r6, #84]	; 0x54
 800c846:	1d30      	adds	r0, r6, #4
 800c848:	f106 0334 	add.w	r3, r6, #52	; 0x34
 800c84c:	f000 fc41 	bl	800d0d2 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)>
 800c850:	2020      	movs	r0, #32
 800c852:	f005 ff49 	bl	80126e8 <operator new(unsigned int)>
 800c856:	4604      	mov	r4, r0
 800c858:	4639      	mov	r1, r7
 800c85a:	f001 fbd9 	bl	800e010 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)>
 800c85e:	4620      	mov	r0, r4
 800c860:	64b4      	str	r4, [r6, #72]	; 0x48
 800c862:	f001 fca3 	bl	800e1ac <WS28xxMulti::Blackout()>
 800c866:	4630      	mov	r0, r6
 800c868:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c86a:	bf00      	nop
 800c86c:	08016704 	stmdaeq	r1, {r2, r8, r9, sl, sp, lr}

0800c870 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>:
 800c870:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c872:	88c6      	ldrh	r6, [r0, #6]
 800c874:	8885      	ldrh	r5, [r0, #4]
 800c876:	42ae      	cmp	r6, r5
 800c878:	d216      	bcs.n	800c8a8 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x38>
 800c87a:	4604      	mov	r4, r0
 800c87c:	6800      	ldr	r0, [r0, #0]
 800c87e:	1bad      	subs	r5, r5, r6
 800c880:	4430      	add	r0, r6
 800c882:	7a26      	ldrb	r6, [r4, #8]
 800c884:	b923      	cbnz	r3, 800c890 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x20>
 800c886:	b926      	cbnz	r6, 800c892 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x22>
 800c888:	9200      	str	r2, [sp, #0]
 800c88a:	460b      	mov	r3, r1
 800c88c:	4a09      	ldr	r2, [pc, #36]	; (800c8b4 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x44>)
 800c88e:	e003      	b.n	800c898 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 800c890:	b166      	cbz	r6, 800c8ac <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x3c>
 800c892:	460b      	mov	r3, r1
 800c894:	9200      	str	r2, [sp, #0]
 800c896:	4a08      	ldr	r2, [pc, #32]	; (800c8b8 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x48>)
 800c898:	4629      	mov	r1, r5
 800c89a:	f7fc fe8f 	bl	80095bc <snprintf>
 800c89e:	4285      	cmp	r5, r0
 800c8a0:	bfa2      	ittt	ge
 800c8a2:	88e3      	ldrhge	r3, [r4, #6]
 800c8a4:	181b      	addge	r3, r3, r0
 800c8a6:	80e3      	strhge	r3, [r4, #6]
 800c8a8:	b002      	add	sp, #8
 800c8aa:	bd70      	pop	{r4, r5, r6, pc}
 800c8ac:	9200      	str	r2, [sp, #0]
 800c8ae:	460b      	mov	r3, r1
 800c8b0:	4a02      	ldr	r2, [pc, #8]	; (800c8bc <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x4c>)
 800c8b2:	e7f1      	b.n	800c898 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 800c8b4:	080151e9 	stmdaeq	r1, {r0, r3, r5, r6, r7, r8, ip, lr}
 800c8b8:	080151e0 	stmdaeq	r1, {r5, r6, r7, r8, ip, lr}
 800c8bc:	080151ea 	stmdaeq	r1, {r1, r3, r5, r6, r7, r8, ip, lr}

0800c8c0 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>:
 800c8c0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c8c2:	88c6      	ldrh	r6, [r0, #6]
 800c8c4:	8885      	ldrh	r5, [r0, #4]
 800c8c6:	42ae      	cmp	r6, r5
 800c8c8:	d216      	bcs.n	800c8f8 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x38>
 800c8ca:	4604      	mov	r4, r0
 800c8cc:	6800      	ldr	r0, [r0, #0]
 800c8ce:	1bad      	subs	r5, r5, r6
 800c8d0:	4430      	add	r0, r6
 800c8d2:	7a26      	ldrb	r6, [r4, #8]
 800c8d4:	b923      	cbnz	r3, 800c8e0 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x20>
 800c8d6:	b926      	cbnz	r6, 800c8e2 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x22>
 800c8d8:	9200      	str	r2, [sp, #0]
 800c8da:	460b      	mov	r3, r1
 800c8dc:	4a09      	ldr	r2, [pc, #36]	; (800c904 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x44>)
 800c8de:	e003      	b.n	800c8e8 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800c8e0:	b166      	cbz	r6, 800c8fc <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x3c>
 800c8e2:	460b      	mov	r3, r1
 800c8e4:	9200      	str	r2, [sp, #0]
 800c8e6:	4a08      	ldr	r2, [pc, #32]	; (800c908 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x48>)
 800c8e8:	4629      	mov	r1, r5
 800c8ea:	f7fc fe67 	bl	80095bc <snprintf>
 800c8ee:	4285      	cmp	r5, r0
 800c8f0:	bfa2      	ittt	ge
 800c8f2:	88e3      	ldrhge	r3, [r4, #6]
 800c8f4:	181b      	addge	r3, r3, r0
 800c8f6:	80e3      	strhge	r3, [r4, #6]
 800c8f8:	b002      	add	sp, #8
 800c8fa:	bd70      	pop	{r4, r5, r6, pc}
 800c8fc:	9200      	str	r2, [sp, #0]
 800c8fe:	460b      	mov	r3, r1
 800c900:	4a02      	ldr	r2, [pc, #8]	; (800c90c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x4c>)
 800c902:	e7f1      	b.n	800c8e8 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800c904:	080151e9 	stmdaeq	r1, {r0, r3, r5, r6, r7, r8, ip, lr}
 800c908:	080151e0 	stmdaeq	r1, {r5, r6, r7, r8, ip, lr}
 800c90c:	080151ea 	stmdaeq	r1, {r1, r3, r5, r6, r7, r8, ip, lr}

0800c910 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>:
 800c910:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c912:	88c6      	ldrh	r6, [r0, #6]
 800c914:	8885      	ldrh	r5, [r0, #4]
 800c916:	42ae      	cmp	r6, r5
 800c918:	d216      	bcs.n	800c948 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x38>
 800c91a:	4604      	mov	r4, r0
 800c91c:	6800      	ldr	r0, [r0, #0]
 800c91e:	1bad      	subs	r5, r5, r6
 800c920:	4430      	add	r0, r6
 800c922:	7a26      	ldrb	r6, [r4, #8]
 800c924:	b923      	cbnz	r3, 800c930 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x20>
 800c926:	b926      	cbnz	r6, 800c932 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x22>
 800c928:	9200      	str	r2, [sp, #0]
 800c92a:	460b      	mov	r3, r1
 800c92c:	4a09      	ldr	r2, [pc, #36]	; (800c954 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x44>)
 800c92e:	e003      	b.n	800c938 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800c930:	b166      	cbz	r6, 800c94c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x3c>
 800c932:	460b      	mov	r3, r1
 800c934:	9200      	str	r2, [sp, #0]
 800c936:	4a08      	ldr	r2, [pc, #32]	; (800c958 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x48>)
 800c938:	4629      	mov	r1, r5
 800c93a:	f7fc fe3f 	bl	80095bc <snprintf>
 800c93e:	4285      	cmp	r5, r0
 800c940:	bfa2      	ittt	ge
 800c942:	88e3      	ldrhge	r3, [r4, #6]
 800c944:	181b      	addge	r3, r3, r0
 800c946:	80e3      	strhge	r3, [r4, #6]
 800c948:	b002      	add	sp, #8
 800c94a:	bd70      	pop	{r4, r5, r6, pc}
 800c94c:	9200      	str	r2, [sp, #0]
 800c94e:	460b      	mov	r3, r1
 800c950:	4a02      	ldr	r2, [pc, #8]	; (800c95c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x4c>)
 800c952:	e7f1      	b.n	800c938 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800c954:	080151fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r8, ip, lr}
 800c958:	080151f1 	stmdaeq	r1, {r0, r4, r5, r6, r7, r8, ip, lr}
 800c95c:	080151fd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, r8, ip, lr}

0800c960 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>:
 800c960:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800c964:	4699      	mov	r9, r3
 800c966:	8885      	ldrh	r5, [r0, #4]
 800c968:	88c3      	ldrh	r3, [r0, #6]
 800c96a:	4604      	mov	r4, r0
 800c96c:	42ab      	cmp	r3, r5
 800c96e:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
 800c972:	d227      	bcs.n	800c9c4 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x64>
 800c974:	6826      	ldr	r6, [r4, #0]
 800c976:	4610      	mov	r0, r2
 800c978:	460f      	mov	r7, r1
 800c97a:	f894 a008 	ldrb.w	sl, [r4, #8]
 800c97e:	441e      	add	r6, r3
 800c980:	1aed      	subs	r5, r5, r3
 800c982:	f7fb fc53 	bl	800822c <__aeabi_f2d>
 800c986:	f1b9 0f00 	cmp.w	r9, #0
 800c98a:	d109      	bne.n	800c9a0 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x40>
 800c98c:	f1ba 0f00 	cmp.w	sl, #0
 800c990:	d109      	bne.n	800c9a6 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x46>
 800c992:	463b      	mov	r3, r7
 800c994:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800c998:	4a0f      	ldr	r2, [pc, #60]	; (800c9d8 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x78>)
 800c99a:	f8cd 8000 	str.w	r8, [sp]
 800c99e:	e008      	b.n	800c9b2 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x52>
 800c9a0:	f1ba 0f00 	cmp.w	sl, #0
 800c9a4:	d011      	beq.n	800c9ca <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x6a>
 800c9a6:	463b      	mov	r3, r7
 800c9a8:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800c9ac:	4a0b      	ldr	r2, [pc, #44]	; (800c9dc <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x7c>)
 800c9ae:	f8cd 8000 	str.w	r8, [sp]
 800c9b2:	4629      	mov	r1, r5
 800c9b4:	4630      	mov	r0, r6
 800c9b6:	f7fc fe01 	bl	80095bc <snprintf>
 800c9ba:	4285      	cmp	r5, r0
 800c9bc:	bfa2      	ittt	ge
 800c9be:	88e3      	ldrhge	r3, [r4, #6]
 800c9c0:	181b      	addge	r3, r3, r0
 800c9c2:	80e3      	strhge	r3, [r4, #6]
 800c9c4:	b004      	add	sp, #16
 800c9c6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c9ca:	463b      	mov	r3, r7
 800c9cc:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800c9d0:	4a03      	ldr	r2, [pc, #12]	; (800c9e0 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x80>)
 800c9d2:	f8cd 8000 	str.w	r8, [sp]
 800c9d6:	e7ec      	b.n	800c9b2 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x52>
 800c9d8:	0801673f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r8, r9, sl, sp, lr}
 800c9dc:	08016734 	stmdaeq	r1, {r2, r4, r5, r8, r9, sl, sp, lr}
 800c9e0:	08016740 	stmdaeq	r1, {r6, r8, r9, sl, sp, lr}

0800c9e4 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)>:
 800c9e4:	6001      	str	r1, [r0, #0]
 800c9e6:	2100      	movs	r1, #0
 800c9e8:	f04f 6c10 	mov.w	ip, #150994944	; 0x9000000
 800c9ec:	4a0a      	ldr	r2, [pc, #40]	; (800ca18 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)+0x34>)
 800c9ee:	e9c0 1201 	strd	r1, r2, [r0, #4]
 800c9f2:	4a0a      	ldr	r2, [pc, #40]	; (800ca1c <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)+0x38>)
 800c9f4:	490a      	ldr	r1, [pc, #40]	; (800ca20 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)+0x3c>)
 800c9f6:	e9c0 c203 	strd	ip, r2, [r0, #12]
 800c9fa:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 800c9fe:	e9c0 1205 	strd	r1, r2, [r0, #20]
 800ca02:	4a08      	ldr	r2, [pc, #32]	; (800ca24 <PixelDmxParams::PixelDmxParams(PixelDmxParamsStore*)+0x40>)
 800ca04:	61c2      	str	r2, [r0, #28]
 800ca06:	f102 1208 	add.w	r2, r2, #524296	; 0x80008
 800ca0a:	6202      	str	r2, [r0, #32]
 800ca0c:	f102 1208 	add.w	r2, r2, #524296	; 0x80008
 800ca10:	6242      	str	r2, [r0, #36]	; 0x24
 800ca12:	221d      	movs	r2, #29
 800ca14:	8502      	strh	r2, [r0, #40]	; 0x28
 800ca16:	4770      	bx	lr
 800ca18:	0100aa03 	tsteq	r0, r3, lsl #20
 800ca1c:	01ff003d 	mvnseq	r0, sp, lsr r0
 800ca20:	06000100 	streq	r0, [r0], -r0, lsl #2
 800ca24:	00090005 	andeq	r0, r9, r5

0800ca28 <PixelDmxParams::Load()>:
 800ca28:	b508      	push	{r3, lr}
 800ca2a:	2300      	movs	r3, #0
 800ca2c:	4601      	mov	r1, r0
 800ca2e:	6043      	str	r3, [r0, #4]
 800ca30:	6800      	ldr	r0, [r0, #0]
 800ca32:	b120      	cbz	r0, 800ca3e <PixelDmxParams::Load()+0x16>
 800ca34:	6803      	ldr	r3, [r0, #0]
 800ca36:	3104      	adds	r1, #4
 800ca38:	68db      	ldr	r3, [r3, #12]
 800ca3a:	4798      	blx	r3
 800ca3c:	2001      	movs	r0, #1
 800ca3e:	bd08      	pop	{r3, pc}

0800ca40 <PixelDmxParams::Load(char const*, unsigned int)>:
 800ca40:	6803      	ldr	r3, [r0, #0]
 800ca42:	b1d3      	cbz	r3, 800ca7a <PixelDmxParams::Load(char const*, unsigned int)+0x3a>
 800ca44:	2300      	movs	r3, #0
 800ca46:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ca48:	460d      	mov	r5, r1
 800ca4a:	4616      	mov	r6, r2
 800ca4c:	4604      	mov	r4, r0
 800ca4e:	6043      	str	r3, [r0, #4]
 800ca50:	4602      	mov	r2, r0
 800ca52:	490a      	ldr	r1, [pc, #40]	; (800ca7c <PixelDmxParams::Load(char const*, unsigned int)+0x3c>)
 800ca54:	4668      	mov	r0, sp
 800ca56:	f005 f899 	bl	8011b8c <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800ca5a:	4632      	mov	r2, r6
 800ca5c:	4629      	mov	r1, r5
 800ca5e:	4668      	mov	r0, sp
 800ca60:	f005 f898 	bl	8011b94 <ReadConfigFile::Read(char const*, unsigned int)>
 800ca64:	4621      	mov	r1, r4
 800ca66:	f851 0b04 	ldr.w	r0, [r1], #4
 800ca6a:	6803      	ldr	r3, [r0, #0]
 800ca6c:	689b      	ldr	r3, [r3, #8]
 800ca6e:	4798      	blx	r3
 800ca70:	4668      	mov	r0, sp
 800ca72:	f005 f88e 	bl	8011b92 <ReadConfigFile::~ReadConfigFile()>
 800ca76:	b002      	add	sp, #8
 800ca78:	bd70      	pop	{r4, r5, r6, pc}
 800ca7a:	4770      	bx	lr
 800ca7c:	0800cd39 	stmdaeq	r0, {r0, r3, r4, r5, r8, sl, fp, lr, pc}

0800ca80 <PixelDmxParams::callbackFunction(char const*)>:
 800ca80:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ca84:	2308      	movs	r3, #8
 800ca86:	460d      	mov	r5, r1
 800ca88:	b088      	sub	sp, #32
 800ca8a:	4604      	mov	r4, r0
 800ca8c:	9302      	str	r3, [sp, #8]
 800ca8e:	4628      	mov	r0, r5
 800ca90:	499a      	ldr	r1, [pc, #616]	; (800ccfc <PixelDmxParams::callbackFunction(char const*)+0x27c>)
 800ca92:	446b      	add	r3, sp
 800ca94:	aa04      	add	r2, sp, #16
 800ca96:	f005 f8b1 	bl	8011bfc <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800ca9a:	b9a0      	cbnz	r0, 800cac6 <PixelDmxParams::callbackFunction(char const*)+0x46>
 800ca9c:	9b02      	ldr	r3, [sp, #8]
 800ca9e:	3320      	adds	r3, #32
 800caa0:	446b      	add	r3, sp
 800caa2:	f803 0c10 	strb.w	r0, [r3, #-16]
 800caa6:	a804      	add	r0, sp, #16
 800caa8:	f000 fc80 	bl	800d3ac <PixelType::GetType(char const*)>
 800caac:	280e      	cmp	r0, #14
 800caae:	bf08      	it	eq
 800cab0:	2203      	moveq	r2, #3
 800cab2:	6863      	ldr	r3, [r4, #4]
 800cab4:	bf19      	ittee	ne
 800cab6:	7220      	strbne	r0, [r4, #8]
 800cab8:	f043 0301 	orrne.w	r3, r3, #1
 800cabc:	7222      	strbeq	r2, [r4, #8]
 800cabe:	f023 0301 	biceq.w	r3, r3, #1
 800cac2:	6063      	str	r3, [r4, #4]
 800cac4:	e033      	b.n	800cb2e <PixelDmxParams::callbackFunction(char const*)+0xae>
 800cac6:	4628      	mov	r0, r5
 800cac8:	498d      	ldr	r1, [pc, #564]	; (800cd00 <PixelDmxParams::callbackFunction(char const*)+0x280>)
 800caca:	f10d 0202 	add.w	r2, sp, #2
 800cace:	f005 f952 	bl	8011d76 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800cad2:	b990      	cbnz	r0, 800cafa <PixelDmxParams::callbackFunction(char const*)+0x7a>
 800cad4:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800cad8:	6863      	ldr	r3, [r4, #4]
 800cada:	1e51      	subs	r1, r2, #1
 800cadc:	f5b1 7f2a 	cmp.w	r1, #680	; 0x2a8
 800cae0:	bf2d      	iteet	cs
 800cae2:	f06f 0255 	mvncs.w	r2, #85	; 0x55
 800cae6:	f8a4 2009 	strhcc.w	r2, [r4, #9]
 800caea:	f043 0302 	orrcc.w	r3, r3, #2
 800caee:	7262      	strbcs	r2, [r4, #9]
 800caf0:	bf24      	itt	cs
 800caf2:	72a0      	strbcs	r0, [r4, #10]
 800caf4:	f023 0302 	biccs.w	r3, r3, #2
 800caf8:	e7e3      	b.n	800cac2 <PixelDmxParams::callbackFunction(char const*)+0x42>
 800cafa:	2303      	movs	r3, #3
 800cafc:	4628      	mov	r0, r5
 800cafe:	9302      	str	r3, [sp, #8]
 800cb00:	4980      	ldr	r1, [pc, #512]	; (800cd04 <PixelDmxParams::callbackFunction(char const*)+0x284>)
 800cb02:	ab02      	add	r3, sp, #8
 800cb04:	aa04      	add	r2, sp, #16
 800cb06:	f005 f879 	bl	8011bfc <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800cb0a:	b998      	cbnz	r0, 800cb34 <PixelDmxParams::callbackFunction(char const*)+0xb4>
 800cb0c:	9b02      	ldr	r3, [sp, #8]
 800cb0e:	3320      	adds	r3, #32
 800cb10:	446b      	add	r3, sp
 800cb12:	f803 0c10 	strb.w	r0, [r3, #-16]
 800cb16:	a804      	add	r0, sp, #16
 800cb18:	f000 fc6c 	bl	800d3f4 <PixelType::GetMap(char const*)>
 800cb1c:	6863      	ldr	r3, [r4, #4]
 800cb1e:	2806      	cmp	r0, #6
 800cb20:	bf14      	ite	ne
 800cb22:	f443 7300 	orrne.w	r3, r3, #512	; 0x200
 800cb26:	f423 7300 	biceq.w	r3, r3, #512	; 0x200
 800cb2a:	6063      	str	r3, [r4, #4]
 800cb2c:	75e0      	strb	r0, [r4, #23]
 800cb2e:	b008      	add	sp, #32
 800cb30:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800cb34:	4628      	mov	r0, r5
 800cb36:	4974      	ldr	r1, [pc, #464]	; (800cd08 <PixelDmxParams::callbackFunction(char const*)+0x288>)
 800cb38:	aa01      	add	r2, sp, #4
 800cb3a:	f005 f878 	bl	8011c2e <Sscan::Float(char const*, char const*, float&)>
 800cb3e:	b960      	cbnz	r0, 800cb5a <PixelDmxParams::callbackFunction(char const*)+0xda>
 800cb40:	9801      	ldr	r0, [sp, #4]
 800cb42:	f000 fcc3 	bl	800d4cc <PixelType::ConvertTxH(float)>
 800cb46:	6863      	ldr	r3, [r4, #4]
 800cb48:	b120      	cbz	r0, 800cb54 <PixelDmxParams::callbackFunction(char const*)+0xd4>
 800cb4a:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800cb4e:	6063      	str	r3, [r4, #4]
 800cb50:	7620      	strb	r0, [r4, #24]
 800cb52:	e7ec      	b.n	800cb2e <PixelDmxParams::callbackFunction(char const*)+0xae>
 800cb54:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800cb58:	e7f9      	b.n	800cb4e <PixelDmxParams::callbackFunction(char const*)+0xce>
 800cb5a:	4628      	mov	r0, r5
 800cb5c:	496b      	ldr	r1, [pc, #428]	; (800cd0c <PixelDmxParams::callbackFunction(char const*)+0x28c>)
 800cb5e:	aa01      	add	r2, sp, #4
 800cb60:	f005 f865 	bl	8011c2e <Sscan::Float(char const*, char const*, float&)>
 800cb64:	b960      	cbnz	r0, 800cb80 <PixelDmxParams::callbackFunction(char const*)+0x100>
 800cb66:	9801      	ldr	r0, [sp, #4]
 800cb68:	f000 fcb0 	bl	800d4cc <PixelType::ConvertTxH(float)>
 800cb6c:	6863      	ldr	r3, [r4, #4]
 800cb6e:	b120      	cbz	r0, 800cb7a <PixelDmxParams::callbackFunction(char const*)+0xfa>
 800cb70:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 800cb74:	6063      	str	r3, [r4, #4]
 800cb76:	7660      	strb	r0, [r4, #25]
 800cb78:	e7d9      	b.n	800cb2e <PixelDmxParams::callbackFunction(char const*)+0xae>
 800cb7a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800cb7e:	e7f9      	b.n	800cb74 <PixelDmxParams::callbackFunction(char const*)+0xf4>
 800cb80:	4628      	mov	r0, r5
 800cb82:	4963      	ldr	r1, [pc, #396]	; (800cd10 <PixelDmxParams::callbackFunction(char const*)+0x290>)
 800cb84:	f10d 0202 	add.w	r2, sp, #2
 800cb88:	f005 f8f5 	bl	8011d76 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800cb8c:	b998      	cbnz	r0, 800cbb6 <PixelDmxParams::callbackFunction(char const*)+0x136>
 800cb8e:	f240 25a6 	movw	r5, #678	; 0x2a6
 800cb92:	f8bd 1002 	ldrh.w	r1, [sp, #2]
 800cb96:	6863      	ldr	r3, [r4, #4]
 800cb98:	1e8a      	subs	r2, r1, #2
 800cb9a:	b292      	uxth	r2, r2
 800cb9c:	42aa      	cmp	r2, r5
 800cb9e:	bf81      	itttt	hi
 800cba0:	2201      	movhi	r2, #1
 800cba2:	75a0      	strbhi	r0, [r4, #22]
 800cba4:	7562      	strbhi	r2, [r4, #21]
 800cba6:	f423 7380 	bichi.w	r3, r3, #256	; 0x100
 800cbaa:	bf9c      	itt	ls
 800cbac:	f8a4 1015 	strhls.w	r1, [r4, #21]
 800cbb0:	f443 7380 	orrls.w	r3, r3, #256	; 0x100
 800cbb4:	e785      	b.n	800cac2 <PixelDmxParams::callbackFunction(char const*)+0x42>
 800cbb6:	4628      	mov	r0, r5
 800cbb8:	4956      	ldr	r1, [pc, #344]	; (800cd14 <PixelDmxParams::callbackFunction(char const*)+0x294>)
 800cbba:	aa03      	add	r2, sp, #12
 800cbbc:	f005 f8f9 	bl	8011db2 <Sscan::Uint32(char const*, char const*, unsigned int&)>
 800cbc0:	b960      	cbnz	r0, 800cbdc <PixelDmxParams::callbackFunction(char const*)+0x15c>
 800cbc2:	9a03      	ldr	r2, [sp, #12]
 800cbc4:	4954      	ldr	r1, [pc, #336]	; (800cd18 <PixelDmxParams::callbackFunction(char const*)+0x298>)
 800cbc6:	6863      	ldr	r3, [r4, #4]
 800cbc8:	428a      	cmp	r2, r1
 800cbca:	bf14      	ite	ne
 800cbcc:	f043 0310 	orrne.w	r3, r3, #16
 800cbd0:	f023 0310 	biceq.w	r3, r3, #16
 800cbd4:	6063      	str	r3, [r4, #4]
 800cbd6:	f8c4 200e 	str.w	r2, [r4, #14]
 800cbda:	e7a8      	b.n	800cb2e <PixelDmxParams::callbackFunction(char const*)+0xae>
 800cbdc:	4628      	mov	r0, r5
 800cbde:	494f      	ldr	r1, [pc, #316]	; (800cd1c <PixelDmxParams::callbackFunction(char const*)+0x29c>)
 800cbe0:	f10d 0201 	add.w	r2, sp, #1
 800cbe4:	f005 f90e 	bl	8011e04 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800cbe8:	b988      	cbnz	r0, 800cc0e <PixelDmxParams::callbackFunction(char const*)+0x18e>
 800cbea:	f89d 1001 	ldrb.w	r1, [sp, #1]
 800cbee:	6863      	ldr	r3, [r4, #4]
 800cbf0:	1e4a      	subs	r2, r1, #1
 800cbf2:	b2d2      	uxtb	r2, r2
 800cbf4:	2afd      	cmp	r2, #253	; 0xfd
 800cbf6:	bf83      	ittte	hi
 800cbf8:	f023 0320 	bichi.w	r3, r3, #32
 800cbfc:	6063      	strhi	r3, [r4, #4]
 800cbfe:	23ff      	movhi	r3, #255	; 0xff
 800cc00:	f043 0320 	orrls.w	r3, r3, #32
 800cc04:	bf9a      	itte	ls
 800cc06:	6063      	strls	r3, [r4, #4]
 800cc08:	74a1      	strbls	r1, [r4, #18]
 800cc0a:	74a3      	strbhi	r3, [r4, #18]
 800cc0c:	e78f      	b.n	800cb2e <PixelDmxParams::callbackFunction(char const*)+0xae>
 800cc0e:	2600      	movs	r6, #0
 800cc10:	f04f 0814 	mov.w	r8, #20
 800cc14:	f44f 5a80 	mov.w	sl, #4096	; 0x1000
 800cc18:	f8df 9104 	ldr.w	r9, [pc, #260]	; 800cd20 <PixelDmxParams::callbackFunction(char const*)+0x2a0>
 800cc1c:	f104 071a 	add.w	r7, r4, #26
 800cc20:	4628      	mov	r0, r5
 800cc22:	fb08 9106 	mla	r1, r8, r6, r9
 800cc26:	f10d 0202 	add.w	r2, sp, #2
 800cc2a:	f005 f8a4 	bl	8011d76 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800cc2e:	b940      	cbnz	r0, 800cc42 <PixelDmxParams::callbackFunction(char const*)+0x1c2>
 800cc30:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800cc34:	6863      	ldr	r3, [r4, #4]
 800cc36:	fa0a f106 	lsl.w	r1, sl, r6
 800cc3a:	b1ea      	cbz	r2, 800cc78 <PixelDmxParams::callbackFunction(char const*)+0x1f8>
 800cc3c:	803a      	strh	r2, [r7, #0]
 800cc3e:	430b      	orrs	r3, r1
 800cc40:	6063      	str	r3, [r4, #4]
 800cc42:	3601      	adds	r6, #1
 800cc44:	2e08      	cmp	r6, #8
 800cc46:	f107 0702 	add.w	r7, r7, #2
 800cc4a:	d1e9      	bne.n	800cc20 <PixelDmxParams::callbackFunction(char const*)+0x1a0>
 800cc4c:	4628      	mov	r0, r5
 800cc4e:	4935      	ldr	r1, [pc, #212]	; (800cd24 <PixelDmxParams::callbackFunction(char const*)+0x2a4>)
 800cc50:	f10d 0201 	add.w	r2, sp, #1
 800cc54:	f005 f8d6 	bl	8011e04 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800cc58:	b9a0      	cbnz	r0, 800cc84 <PixelDmxParams::callbackFunction(char const*)+0x204>
 800cc5a:	f89d 2001 	ldrb.w	r2, [sp, #1]
 800cc5e:	6863      	ldr	r3, [r4, #4]
 800cc60:	1e91      	subs	r1, r2, #2
 800cc62:	2906      	cmp	r1, #6
 800cc64:	bf8d      	iteet	hi
 800cc66:	2201      	movhi	r2, #1
 800cc68:	74e2      	strbls	r2, [r4, #19]
 800cc6a:	f043 0340 	orrls.w	r3, r3, #64	; 0x40
 800cc6e:	74e2      	strbhi	r2, [r4, #19]
 800cc70:	bf88      	it	hi
 800cc72:	f023 0340 	bichi.w	r3, r3, #64	; 0x40
 800cc76:	e724      	b.n	800cac2 <PixelDmxParams::callbackFunction(char const*)+0x42>
 800cc78:	00b2      	lsls	r2, r6, #2
 800cc7a:	3201      	adds	r2, #1
 800cc7c:	803a      	strh	r2, [r7, #0]
 800cc7e:	ea23 0301 	bic.w	r3, r3, r1
 800cc82:	e7dd      	b.n	800cc40 <PixelDmxParams::callbackFunction(char const*)+0x1c0>
 800cc84:	4628      	mov	r0, r5
 800cc86:	4928      	ldr	r1, [pc, #160]	; (800cd28 <PixelDmxParams::callbackFunction(char const*)+0x2a8>)
 800cc88:	f10d 0201 	add.w	r2, sp, #1
 800cc8c:	f005 f8ba 	bl	8011e04 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800cc90:	b960      	cbnz	r0, 800ccac <PixelDmxParams::callbackFunction(char const*)+0x22c>
 800cc92:	f89d 2001 	ldrb.w	r2, [sp, #1]
 800cc96:	6863      	ldr	r3, [r4, #4]
 800cc98:	1e51      	subs	r1, r2, #1
 800cc9a:	2904      	cmp	r1, #4
 800cc9c:	bf99      	ittee	ls
 800cc9e:	7522      	strbls	r2, [r4, #20]
 800cca0:	f043 0308 	orrls.w	r3, r3, #8
 800cca4:	7520      	strbhi	r0, [r4, #20]
 800cca6:	f023 0308 	bichi.w	r3, r3, #8
 800ccaa:	e70a      	b.n	800cac2 <PixelDmxParams::callbackFunction(char const*)+0x42>
 800ccac:	4628      	mov	r0, r5
 800ccae:	491f      	ldr	r1, [pc, #124]	; (800cd2c <PixelDmxParams::callbackFunction(char const*)+0x2ac>)
 800ccb0:	f10d 0201 	add.w	r2, sp, #1
 800ccb4:	f005 f8a6 	bl	8011e04 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800ccb8:	b948      	cbnz	r0, 800ccce <PixelDmxParams::callbackFunction(char const*)+0x24e>
 800ccba:	f89d 2001 	ldrb.w	r2, [sp, #1]
 800ccbe:	6863      	ldr	r3, [r4, #4]
 800ccc0:	b112      	cbz	r2, 800ccc8 <PixelDmxParams::callbackFunction(char const*)+0x248>
 800ccc2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800ccc6:	e6fc      	b.n	800cac2 <PixelDmxParams::callbackFunction(char const*)+0x42>
 800ccc8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800cccc:	e6f9      	b.n	800cac2 <PixelDmxParams::callbackFunction(char const*)+0x42>
 800ccce:	4628      	mov	r0, r5
 800ccd0:	4917      	ldr	r1, [pc, #92]	; (800cd30 <PixelDmxParams::callbackFunction(char const*)+0x2b0>)
 800ccd2:	aa01      	add	r2, sp, #4
 800ccd4:	f004 ffab 	bl	8011c2e <Sscan::Float(char const*, char const*, float&)>
 800ccd8:	4605      	mov	r5, r0
 800ccda:	2800      	cmp	r0, #0
 800ccdc:	f47f af27 	bne.w	800cb2e <PixelDmxParams::callbackFunction(char const*)+0xae>
 800cce0:	4914      	ldr	r1, [pc, #80]	; (800cd34 <PixelDmxParams::callbackFunction(char const*)+0x2b4>)
 800cce2:	9801      	ldr	r0, [sp, #4]
 800cce4:	f7fb fafa 	bl	80082dc <__aeabi_fmul>
 800cce8:	f7fb fc48 	bl	800857c <__aeabi_f2uiz>
 800ccec:	b2c3      	uxtb	r3, r0
 800ccee:	f1a3 0214 	sub.w	r2, r3, #20
 800ccf2:	2a05      	cmp	r2, #5
 800ccf4:	bf8c      	ite	hi
 800ccf6:	7365      	strbhi	r5, [r4, #13]
 800ccf8:	7363      	strbls	r3, [r4, #13]
 800ccfa:	e718      	b.n	800cb2e <PixelDmxParams::callbackFunction(char const*)+0xae>
 800ccfc:	08017736 	stmdaeq	r1, {r1, r2, r4, r5, r8, r9, sl, ip, sp, lr}
 800cd00:	0801773f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r8, r9, sl, ip, sp, lr}
 800cd04:	08017726 	stmdaeq	r1, {r1, r2, r5, r8, r9, sl, ip, sp, lr}
 800cd08:	08017749 	stmdaeq	r1, {r0, r3, r6, r8, r9, sl, ip, sp, lr}
 800cd0c:	08017751 	stmdaeq	r1, {r0, r4, r6, r8, r9, sl, ip, sp, lr}
 800cd10:	080176f3 	stmdaeq	r1, {r0, r1, r4, r5, r6, r7, r9, sl, ip, sp, lr}
 800cd14:	080176d7 	stmdaeq	r1, {r0, r1, r2, r4, r6, r7, r9, sl, ip, sp, lr}
 800cd18:	003d0900 	eorseq	r0, sp, r0, lsl #18
 800cd1c:	08017714 	stmdaeq	r1, {r2, r4, r8, r9, sl, ip, sp, lr}
 800cd20:	080177d2 	stmdaeq	r1, {r1, r4, r6, r7, r8, r9, sl, ip, sp, lr}
 800cd24:	080176c0 	stmdaeq	r1, {r6, r7, r9, sl, ip, sp, lr}
 800cd28:	080176e6 	stmdaeq	r1, {r1, r2, r5, r6, r7, r9, sl, ip, sp, lr}
 800cd2c:	08017703 	stmdaeq	r1, {r0, r1, r8, r9, sl, ip, sp, lr}
 800cd30:	080176cb 	stmdaeq	r1, {r0, r1, r3, r6, r7, r9, sl, ip, sp, lr}
 800cd34:	41200000 			; <UNDEFINED> instruction: 0x41200000

0800cd38 <PixelDmxParams::staticCallbackFunction(void*, char const*)>:
 800cd38:	f7ff bea2 	b.w	800ca80 <PixelDmxParams::callbackFunction(char const*)>

0800cd3c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)>:
 800cd3c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cd40:	4604      	mov	r4, r0
 800cd42:	4615      	mov	r5, r2
 800cd44:	461e      	mov	r6, r3
 800cd46:	b086      	sub	sp, #24
 800cd48:	3004      	adds	r0, #4
 800cd4a:	b389      	cbz	r1, 800cdb0 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x74>
 800cd4c:	2226      	movs	r2, #38	; 0x26
 800cd4e:	f005 fd8a 	bl	8012866 <memmove>
 800cd52:	462a      	mov	r2, r5
 800cd54:	4633      	mov	r3, r6
 800cd56:	499c      	ldr	r1, [pc, #624]	; (800cfc8 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x28c>)
 800cd58:	a803      	add	r0, sp, #12
 800cd5a:	f004 fe77 	bl	8011a4c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800cd5e:	7a20      	ldrb	r0, [r4, #8]
 800cd60:	f000 fb18 	bl	800d394 <PixelType::GetType(pixel::Type)>
 800cd64:	6863      	ldr	r3, [r4, #4]
 800cd66:	4602      	mov	r2, r0
 800cd68:	4998      	ldr	r1, [pc, #608]	; (800cfcc <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x290>)
 800cd6a:	f003 0301 	and.w	r3, r3, #1
 800cd6e:	a803      	add	r0, sp, #12
 800cd70:	f7ff fdce 	bl	800c910 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800cd74:	6863      	ldr	r3, [r4, #4]
 800cd76:	f8b4 2009 	ldrh.w	r2, [r4, #9]
 800cd7a:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800cd7e:	4994      	ldr	r1, [pc, #592]	; (800cfd0 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x294>)
 800cd80:	a803      	add	r0, sp, #12
 800cd82:	f7ff fd9d 	bl	800c8c0 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800cd86:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800cd8a:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800cd8e:	6863      	ldr	r3, [r4, #4]
 800cd90:	42aa      	cmp	r2, r5
 800cd92:	d227      	bcs.n	800cde4 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0xa8>
 800cd94:	9803      	ldr	r0, [sp, #12]
 800cd96:	f013 0380 	ands.w	r3, r3, #128	; 0x80
 800cd9a:	4410      	add	r0, r2
 800cd9c:	eba5 0502 	sub.w	r5, r5, r2
 800cda0:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800cda4:	d10b      	bne.n	800cdbe <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x82>
 800cda6:	b96a      	cbnz	r2, 800cdc4 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x88>
 800cda8:	9200      	str	r2, [sp, #0]
 800cdaa:	4b8a      	ldr	r3, [pc, #552]	; (800cfd4 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x298>)
 800cdac:	4a8a      	ldr	r2, [pc, #552]	; (800cfd8 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x29c>)
 800cdae:	e00f      	b.n	800cdd0 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x94>
 800cdb0:	6823      	ldr	r3, [r4, #0]
 800cdb2:	4601      	mov	r1, r0
 800cdb4:	681a      	ldr	r2, [r3, #0]
 800cdb6:	4618      	mov	r0, r3
 800cdb8:	68d2      	ldr	r2, [r2, #12]
 800cdba:	4790      	blx	r2
 800cdbc:	e7c9      	b.n	800cd52 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x16>
 800cdbe:	2a00      	cmp	r2, #0
 800cdc0:	f000 808a 	beq.w	800ced8 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x19c>
 800cdc4:	3b00      	subs	r3, #0
 800cdc6:	bf18      	it	ne
 800cdc8:	2301      	movne	r3, #1
 800cdca:	4a84      	ldr	r2, [pc, #528]	; (800cfdc <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2a0>)
 800cdcc:	9300      	str	r3, [sp, #0]
 800cdce:	4b81      	ldr	r3, [pc, #516]	; (800cfd4 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x298>)
 800cdd0:	4629      	mov	r1, r5
 800cdd2:	f7fc fbf3 	bl	80095bc <snprintf>
 800cdd6:	4285      	cmp	r5, r0
 800cdd8:	bfa2      	ittt	ge
 800cdda:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800cdde:	18c0      	addge	r0, r0, r3
 800cde0:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800cde4:	7b63      	ldrb	r3, [r4, #13]
 800cde6:	2b00      	cmp	r3, #0
 800cde8:	d17b      	bne.n	800cee2 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1a6>
 800cdea:	4a7d      	ldr	r2, [pc, #500]	; (800cfe0 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2a4>)
 800cdec:	497d      	ldr	r1, [pc, #500]	; (800cfe4 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2a8>)
 800cdee:	a803      	add	r0, sp, #12
 800cdf0:	f7ff fd8e 	bl	800c910 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800cdf4:	497c      	ldr	r1, [pc, #496]	; (800cfe8 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2ac>)
 800cdf6:	a803      	add	r0, sp, #12
 800cdf8:	f004 feae 	bl	8011b58 <PropertiesBuilder::AddComment(char const*)>
 800cdfc:	6863      	ldr	r3, [r4, #4]
 800cdfe:	059e      	lsls	r6, r3, #22
 800ce00:	d403      	bmi.n	800ce0a <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0xce>
 800ce02:	7a20      	ldrb	r0, [r4, #8]
 800ce04:	f000 fb2a 	bl	800d45c <PixelType::GetMap(pixel::Type)>
 800ce08:	75e0      	strb	r0, [r4, #23]
 800ce0a:	7de0      	ldrb	r0, [r4, #23]
 800ce0c:	f000 fb1a 	bl	800d444 <PixelType::GetMap(pixel::Map)>
 800ce10:	6863      	ldr	r3, [r4, #4]
 800ce12:	4602      	mov	r2, r0
 800ce14:	f3c3 2340 	ubfx	r3, r3, #9, #1
 800ce18:	4974      	ldr	r1, [pc, #464]	; (800cfec <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2b0>)
 800ce1a:	a803      	add	r0, sp, #12
 800ce1c:	f7ff fd78 	bl	800c910 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800ce20:	6863      	ldr	r3, [r4, #4]
 800ce22:	f403 6340 	and.w	r3, r3, #3072	; 0xc00
 800ce26:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 800ce2a:	d011      	beq.n	800ce50 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x114>
 800ce2c:	f10d 020b 	add.w	r2, sp, #11
 800ce30:	7a20      	ldrb	r0, [r4, #8]
 800ce32:	f10d 010a 	add.w	r1, sp, #10
 800ce36:	f000 f9a5 	bl	800d184 <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)>
 800ce3a:	6863      	ldr	r3, [r4, #4]
 800ce3c:	055d      	lsls	r5, r3, #21
 800ce3e:	bf5c      	itt	pl
 800ce40:	f89d 200a 	ldrbpl.w	r2, [sp, #10]
 800ce44:	7622      	strbpl	r2, [r4, #24]
 800ce46:	0518      	lsls	r0, r3, #20
 800ce48:	bf5c      	itt	pl
 800ce4a:	f89d 300b 	ldrbpl.w	r3, [sp, #11]
 800ce4e:	7663      	strbpl	r3, [r4, #25]
 800ce50:	4967      	ldr	r1, [pc, #412]	; (800cff0 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2b4>)
 800ce52:	a803      	add	r0, sp, #12
 800ce54:	f004 fe80 	bl	8011b58 <PropertiesBuilder::AddComment(char const*)>
 800ce58:	7e20      	ldrb	r0, [r4, #24]
 800ce5a:	f000 fb09 	bl	800d470 <PixelType::ConvertTxH(unsigned char)>
 800ce5e:	2502      	movs	r5, #2
 800ce60:	6863      	ldr	r3, [r4, #4]
 800ce62:	4602      	mov	r2, r0
 800ce64:	4963      	ldr	r1, [pc, #396]	; (800cff4 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2b8>)
 800ce66:	f3c3 2380 	ubfx	r3, r3, #10, #1
 800ce6a:	9500      	str	r5, [sp, #0]
 800ce6c:	a803      	add	r0, sp, #12
 800ce6e:	f7ff fd77 	bl	800c960 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>
 800ce72:	7e60      	ldrb	r0, [r4, #25]
 800ce74:	f000 fafc 	bl	800d470 <PixelType::ConvertTxH(unsigned char)>
 800ce78:	6863      	ldr	r3, [r4, #4]
 800ce7a:	4602      	mov	r2, r0
 800ce7c:	f3c3 23c0 	ubfx	r3, r3, #11, #1
 800ce80:	495d      	ldr	r1, [pc, #372]	; (800cff8 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2bc>)
 800ce82:	9500      	str	r5, [sp, #0]
 800ce84:	a803      	add	r0, sp, #12
 800ce86:	f7ff fd6b 	bl	800c960 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>
 800ce8a:	495c      	ldr	r1, [pc, #368]	; (800cffc <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2c0>)
 800ce8c:	a803      	add	r0, sp, #12
 800ce8e:	f004 fe63 	bl	8011b58 <PropertiesBuilder::AddComment(char const*)>
 800ce92:	6863      	ldr	r3, [r4, #4]
 800ce94:	f8b4 2015 	ldrh.w	r2, [r4, #21]
 800ce98:	f3c3 2300 	ubfx	r3, r3, #8, #1
 800ce9c:	4958      	ldr	r1, [pc, #352]	; (800d000 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2c4>)
 800ce9e:	a803      	add	r0, sp, #12
 800cea0:	f7ff fd0e 	bl	800c8c0 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800cea4:	4957      	ldr	r1, [pc, #348]	; (800d004 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2c8>)
 800cea6:	a803      	add	r0, sp, #12
 800cea8:	f004 fe56 	bl	8011b58 <PropertiesBuilder::AddComment(char const*)>
 800ceac:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800ceb0:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800ceb4:	f8d4 300e 	ldr.w	r3, [r4, #14]
 800ceb8:	42aa      	cmp	r2, r5
 800ceba:	6861      	ldr	r1, [r4, #4]
 800cebc:	d22e      	bcs.n	800cf1c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1e0>
 800cebe:	9803      	ldr	r0, [sp, #12]
 800cec0:	06c9      	lsls	r1, r1, #27
 800cec2:	4410      	add	r0, r2
 800cec4:	eba5 0502 	sub.w	r5, r5, r2
 800cec8:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800cecc:	d417      	bmi.n	800cefe <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1c2>
 800cece:	b9c2      	cbnz	r2, 800cf02 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1c6>
 800ced0:	9300      	str	r3, [sp, #0]
 800ced2:	4a41      	ldr	r2, [pc, #260]	; (800cfd8 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x29c>)
 800ced4:	4b4c      	ldr	r3, [pc, #304]	; (800d008 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2cc>)
 800ced6:	e017      	b.n	800cf08 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1cc>
 800ced8:	2301      	movs	r3, #1
 800ceda:	4a4c      	ldr	r2, [pc, #304]	; (800d00c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2d0>)
 800cedc:	9300      	str	r3, [sp, #0]
 800cede:	4b3d      	ldr	r3, [pc, #244]	; (800cfd4 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x298>)
 800cee0:	e776      	b.n	800cdd0 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x94>
 800cee2:	4618      	mov	r0, r3
 800cee4:	f7fa ff30 	bl	8007d48 <__aeabi_ui2f>
 800cee8:	4949      	ldr	r1, [pc, #292]	; (800d010 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2d4>)
 800ceea:	f7fb faab 	bl	8008444 <__aeabi_fdiv>
 800ceee:	2301      	movs	r3, #1
 800cef0:	4602      	mov	r2, r0
 800cef2:	493c      	ldr	r1, [pc, #240]	; (800cfe4 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2a8>)
 800cef4:	9300      	str	r3, [sp, #0]
 800cef6:	a803      	add	r0, sp, #12
 800cef8:	f7ff fd32 	bl	800c960 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>
 800cefc:	e77a      	b.n	800cdf4 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0xb8>
 800cefe:	2a00      	cmp	r2, #0
 800cf00:	d05e      	beq.n	800cfc0 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x284>
 800cf02:	9300      	str	r3, [sp, #0]
 800cf04:	4a35      	ldr	r2, [pc, #212]	; (800cfdc <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2a0>)
 800cf06:	4b40      	ldr	r3, [pc, #256]	; (800d008 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2cc>)
 800cf08:	4629      	mov	r1, r5
 800cf0a:	f7fc fb57 	bl	80095bc <snprintf>
 800cf0e:	4285      	cmp	r5, r0
 800cf10:	bfa2      	ittt	ge
 800cf12:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800cf16:	18c0      	addge	r0, r0, r3
 800cf18:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800cf1c:	493d      	ldr	r1, [pc, #244]	; (800d014 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2d8>)
 800cf1e:	a803      	add	r0, sp, #12
 800cf20:	f004 fe1a 	bl	8011b58 <PropertiesBuilder::AddComment(char const*)>
 800cf24:	6863      	ldr	r3, [r4, #4]
 800cf26:	7ca2      	ldrb	r2, [r4, #18]
 800cf28:	493b      	ldr	r1, [pc, #236]	; (800d018 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2dc>)
 800cf2a:	f3c3 1340 	ubfx	r3, r3, #5, #1
 800cf2e:	a803      	add	r0, sp, #12
 800cf30:	f7ff fc9e 	bl	800c870 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800cf34:	2500      	movs	r5, #0
 800cf36:	f44f 5880 	mov.w	r8, #4096	; 0x1000
 800cf3a:	4e38      	ldr	r6, [pc, #224]	; (800d01c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2e0>)
 800cf3c:	f104 0718 	add.w	r7, r4, #24
 800cf40:	6862      	ldr	r2, [r4, #4]
 800cf42:	fa08 f305 	lsl.w	r3, r8, r5
 800cf46:	4393      	bics	r3, r2
 800cf48:	bf0c      	ite	eq
 800cf4a:	2301      	moveq	r3, #1
 800cf4c:	2300      	movne	r3, #0
 800cf4e:	4631      	mov	r1, r6
 800cf50:	f837 2f02 	ldrh.w	r2, [r7, #2]!
 800cf54:	a803      	add	r0, sp, #12
 800cf56:	3501      	adds	r5, #1
 800cf58:	f7ff fcb2 	bl	800c8c0 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800cf5c:	2d08      	cmp	r5, #8
 800cf5e:	f106 0614 	add.w	r6, r6, #20
 800cf62:	d1ed      	bne.n	800cf40 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x204>
 800cf64:	6863      	ldr	r3, [r4, #4]
 800cf66:	7ce2      	ldrb	r2, [r4, #19]
 800cf68:	f3c3 1380 	ubfx	r3, r3, #6, #1
 800cf6c:	492c      	ldr	r1, [pc, #176]	; (800d020 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2e4>)
 800cf6e:	a803      	add	r0, sp, #12
 800cf70:	f7ff fc7e 	bl	800c870 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800cf74:	492b      	ldr	r1, [pc, #172]	; (800d024 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2e8>)
 800cf76:	a803      	add	r0, sp, #12
 800cf78:	f004 fdee 	bl	8011b58 <PropertiesBuilder::AddComment(char const*)>
 800cf7c:	6863      	ldr	r3, [r4, #4]
 800cf7e:	7d22      	ldrb	r2, [r4, #20]
 800cf80:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 800cf84:	4928      	ldr	r1, [pc, #160]	; (800d028 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2ec>)
 800cf86:	a803      	add	r0, sp, #12
 800cf88:	f7ff fc72 	bl	800c870 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800cf8c:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800cf90:	b17b      	cbz	r3, 800cfb2 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x276>
 800cf92:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800cf96:	9b03      	ldr	r3, [sp, #12]
 800cf98:	4413      	add	r3, r2
 800cf9a:	227d      	movs	r2, #125	; 0x7d
 800cf9c:	f803 2c01 	strb.w	r2, [r3, #-1]
 800cfa0:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800cfa4:	9903      	ldr	r1, [sp, #12]
 800cfa6:	54ca      	strb	r2, [r1, r3]
 800cfa8:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800cfac:	3301      	adds	r3, #1
 800cfae:	f8ad 3012 	strh.w	r3, [sp, #18]
 800cfb2:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800cfb6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800cfb8:	601a      	str	r2, [r3, #0]
 800cfba:	b006      	add	sp, #24
 800cfbc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cfc0:	9300      	str	r3, [sp, #0]
 800cfc2:	4a12      	ldr	r2, [pc, #72]	; (800d00c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2d0>)
 800cfc4:	4b10      	ldr	r3, [pc, #64]	; (800d008 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x2cc>)
 800cfc6:	e79f      	b.n	800cf08 <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)+0x1cc>
 800cfc8:	08017759 	stmdaeq	r1, {r0, r3, r4, r6, r8, r9, sl, ip, sp, lr}
 800cfcc:	08017736 	stmdaeq	r1, {r1, r2, r4, r5, r8, r9, sl, ip, sp, lr}
 800cfd0:	0801773f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r8, r9, sl, ip, sp, lr}
 800cfd4:	08017703 	stmdaeq	r1, {r0, r1, r8, r9, sl, ip, sp, lr}
 800cfd8:	080151e9 	stmdaeq	r1, {r0, r3, r5, r6, r7, r8, ip, lr}
 800cfdc:	080151e0 	stmdaeq	r1, {r5, r6, r7, r8, ip, lr}
 800cfe0:	08016749 	stmdaeq	r1, {r0, r3, r6, r8, r9, sl, sp, lr}
 800cfe4:	080176cb 	stmdaeq	r1, {r0, r1, r3, r6, r7, r9, sl, ip, sp, lr}
 800cfe8:	08016753 	stmdaeq	r1, {r0, r1, r4, r6, r8, r9, sl, sp, lr}
 800cfec:	08017726 	stmdaeq	r1, {r1, r2, r5, r8, r9, sl, ip, sp, lr}
 800cff0:	08016767 	stmdaeq	r1, {r0, r1, r2, r5, r6, r8, r9, sl, sp, lr}
 800cff4:	08017749 	stmdaeq	r1, {r0, r3, r6, r8, r9, sl, ip, sp, lr}
 800cff8:	08017751 	stmdaeq	r1, {r0, r4, r6, r8, r9, sl, ip, sp, lr}
 800cffc:	0801677d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r8, r9, sl, sp, lr}
 800d000:	080176f3 	stmdaeq	r1, {r0, r1, r4, r5, r6, r7, r9, sl, ip, sp, lr}
 800d004:	08016786 	stmdaeq	r1, {r1, r2, r7, r8, r9, sl, sp, lr}
 800d008:	080176d7 	stmdaeq	r1, {r0, r1, r2, r4, r6, r7, r9, sl, ip, sp, lr}
 800d00c:	080151ea 	stmdaeq	r1, {r1, r3, r5, r6, r7, r8, ip, lr}
 800d010:	41200000 			; <UNDEFINED> instruction: 0x41200000
 800d014:	08016798 	stmdaeq	r1, {r3, r4, r7, r8, r9, sl, sp, lr}
 800d018:	08017714 	stmdaeq	r1, {r2, r4, r8, r9, sl, ip, sp, lr}
 800d01c:	080177d2 	stmdaeq	r1, {r1, r4, r6, r7, r8, r9, sl, ip, sp, lr}
 800d020:	080176c0 	stmdaeq	r1, {r6, r7, r9, sl, ip, sp, lr}
 800d024:	080167a6 	stmdaeq	r1, {r1, r2, r5, r7, r8, r9, sl, sp, lr}
 800d028:	080176e6 	stmdaeq	r1, {r1, r2, r5, r6, r7, r9, sl, ip, sp, lr}

0800d02c <PixelDmxParams::Save(char*, unsigned int, unsigned int&)>:
 800d02c:	b513      	push	{r0, r1, r4, lr}
 800d02e:	6804      	ldr	r4, [r0, #0]
 800d030:	b914      	cbnz	r4, 800d038 <PixelDmxParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800d032:	601c      	str	r4, [r3, #0]
 800d034:	b002      	add	sp, #8
 800d036:	bd10      	pop	{r4, pc}
 800d038:	9300      	str	r3, [sp, #0]
 800d03a:	4613      	mov	r3, r2
 800d03c:	460a      	mov	r2, r1
 800d03e:	2100      	movs	r1, #0
 800d040:	f7ff fe7c 	bl	800cd3c <PixelDmxParams::Builder(pixeldmxparams::Params const*, char*, unsigned int, unsigned int&)>
 800d044:	e7f6      	b.n	800d034 <PixelDmxParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800d046 <PixelDmxParams::Set(PixelDmxConfiguration*)>:
 800d046:	6843      	ldr	r3, [r0, #4]
 800d048:	07da      	lsls	r2, r3, #31
 800d04a:	bf44      	itt	mi
 800d04c:	7a02      	ldrbmi	r2, [r0, #8]
 800d04e:	600a      	strmi	r2, [r1, #0]
 800d050:	079a      	lsls	r2, r3, #30
 800d052:	d505      	bpl.n	800d060 <PixelDmxParams::Set(PixelDmxConfiguration*)+0x1a>
 800d054:	f8b0 2009 	ldrh.w	r2, [r0, #9]
 800d058:	2a00      	cmp	r2, #0
 800d05a:	bf08      	it	eq
 800d05c:	22aa      	moveq	r2, #170	; 0xaa
 800d05e:	604a      	str	r2, [r1, #4]
 800d060:	059a      	lsls	r2, r3, #22
 800d062:	bf44      	itt	mi
 800d064:	7dc2      	ldrbmi	r2, [r0, #23]
 800d066:	608a      	strmi	r2, [r1, #8]
 800d068:	055a      	lsls	r2, r3, #21
 800d06a:	bf44      	itt	mi
 800d06c:	7e02      	ldrbmi	r2, [r0, #24]
 800d06e:	740a      	strbmi	r2, [r1, #16]
 800d070:	051a      	lsls	r2, r3, #20
 800d072:	bf44      	itt	mi
 800d074:	7e42      	ldrbmi	r2, [r0, #25]
 800d076:	744a      	strbmi	r2, [r1, #17]
 800d078:	06da      	lsls	r2, r3, #27
 800d07a:	bf44      	itt	mi
 800d07c:	f8d0 200e 	ldrmi.w	r2, [r0, #14]
 800d080:	60ca      	strmi	r2, [r1, #12]
 800d082:	069a      	lsls	r2, r3, #26
 800d084:	bf44      	itt	mi
 800d086:	7c82      	ldrbmi	r2, [r0, #18]
 800d088:	748a      	strbmi	r2, [r1, #18]
 800d08a:	061a      	lsls	r2, r3, #24
 800d08c:	d504      	bpl.n	800d098 <PixelDmxParams::Set(PixelDmxConfiguration*)+0x52>
 800d08e:	2201      	movs	r2, #1
 800d090:	750a      	strb	r2, [r1, #20]
 800d092:	7b42      	ldrb	r2, [r0, #13]
 800d094:	b102      	cbz	r2, 800d098 <PixelDmxParams::Set(PixelDmxConfiguration*)+0x52>
 800d096:	74ca      	strb	r2, [r1, #19]
 800d098:	075a      	lsls	r2, r3, #29
 800d09a:	d50f      	bpl.n	800d0bc <PixelDmxParams::Set(PixelDmxConfiguration*)+0x76>
 800d09c:	7ac2      	ldrb	r2, [r0, #11]
 800d09e:	b510      	push	{r4, lr}
 800d0a0:	7b04      	ldrb	r4, [r0, #12]
 800d0a2:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
 800d0a6:	858a      	strh	r2, [r1, #44]	; 0x2c
 800d0a8:	05da      	lsls	r2, r3, #23
 800d0aa:	bf44      	itt	mi
 800d0ac:	f8b0 2015 	ldrhmi.w	r2, [r0, #21]
 800d0b0:	620a      	strmi	r2, [r1, #32]
 800d0b2:	065c      	lsls	r4, r3, #25
 800d0b4:	bf44      	itt	mi
 800d0b6:	7cc3      	ldrbmi	r3, [r0, #19]
 800d0b8:	61cb      	strmi	r3, [r1, #28]
 800d0ba:	bd10      	pop	{r4, pc}
 800d0bc:	05da      	lsls	r2, r3, #23
 800d0be:	bf44      	itt	mi
 800d0c0:	f8b0 2015 	ldrhmi.w	r2, [r0, #21]
 800d0c4:	620a      	strmi	r2, [r1, #32]
 800d0c6:	065b      	lsls	r3, r3, #25
 800d0c8:	bf44      	itt	mi
 800d0ca:	7cc3      	ldrbmi	r3, [r0, #19]
 800d0cc:	61cb      	strmi	r3, [r1, #28]
 800d0ce:	4770      	bx	lr

0800d0d0 <PixelDmxParams::Dump()>:
 800d0d0:	4770      	bx	lr

0800d0d2 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)>:
 800d0d2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d0d4:	4604      	mov	r4, r0
 800d0d6:	460e      	mov	r6, r1
 800d0d8:	4611      	mov	r1, r2
 800d0da:	4617      	mov	r7, r2
 800d0dc:	461d      	mov	r5, r3
 800d0de:	f000 f85f 	bl	800d1a0 <PixelConfiguration::Validate(unsigned int&)>
 800d0e2:	7d62      	ldrb	r2, [r4, #21]
 800d0e4:	b94a      	cbnz	r2, 800d0fa <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)+0x28>
 800d0e6:	6823      	ldr	r3, [r4, #0]
 800d0e8:	b11b      	cbz	r3, 800d0f2 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)+0x20>
 800d0ea:	3b0b      	subs	r3, #11
 800d0ec:	2b01      	cmp	r3, #1
 800d0ee:	bf88      	it	hi
 800d0f0:	6022      	strhi	r2, [r4, #0]
 800d0f2:	4639      	mov	r1, r7
 800d0f4:	4620      	mov	r0, r4
 800d0f6:	f000 f853 	bl	800d1a0 <PixelConfiguration::Validate(unsigned int&)>
 800d0fa:	6823      	ldr	r3, [r4, #0]
 800d0fc:	2b07      	cmp	r3, #7
 800d0fe:	bf15      	itete	ne
 800d100:	f44f 71aa 	movne.w	r1, #340	; 0x154
 800d104:	f44f 7180 	moveq.w	r1, #256	; 0x100
 800d108:	23aa      	movne	r3, #170	; 0xaa
 800d10a:	2380      	moveq	r3, #128	; 0x80
 800d10c:	bf14      	ite	ne
 800d10e:	f44f 72ff 	movne.w	r2, #510	; 0x1fe
 800d112:	f44f 72c0 	moveq.w	r2, #384	; 0x180
 800d116:	e9c5 3100 	strd	r3, r1, [r5]
 800d11a:	6a21      	ldr	r1, [r4, #32]
 800d11c:	60aa      	str	r2, [r5, #8]
 800d11e:	6862      	ldr	r2, [r4, #4]
 800d120:	b109      	cbz	r1, 800d126 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)+0x54>
 800d122:	4291      	cmp	r1, r2
 800d124:	d900      	bls.n	800d128 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&)+0x56>
 800d126:	6222      	str	r2, [r4, #32]
 800d128:	6a21      	ldr	r1, [r4, #32]
 800d12a:	69e0      	ldr	r0, [r4, #28]
 800d12c:	fbb2 f2f1 	udiv	r2, r2, r1
 800d130:	3301      	adds	r3, #1
 800d132:	6262      	str	r2, [r4, #36]	; 0x24
 800d134:	42b0      	cmp	r0, r6
 800d136:	fbb2 f2f3 	udiv	r2, r2, r3
 800d13a:	bf28      	it	cs
 800d13c:	4630      	movcs	r0, r6
 800d13e:	1c53      	adds	r3, r2, #1
 800d140:	2e01      	cmp	r6, #1
 800d142:	62a3      	str	r3, [r4, #40]	; 0x28
 800d144:	bf1c      	itt	ne
 800d146:	eb03 0380 	addne.w	r3, r3, r0, lsl #2
 800d14a:	1f5a      	subne	r2, r3, #5
 800d14c:	61e0      	str	r0, [r4, #28]
 800d14e:	60ea      	str	r2, [r5, #12]
 800d150:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0800d154 <PixelDmxConfiguration::Print()>:
 800d154:	b510      	push	{r4, lr}
 800d156:	4604      	mov	r4, r0
 800d158:	f000 f8b8 	bl	800d2cc <PixelConfiguration::Print()>
 800d15c:	4806      	ldr	r0, [pc, #24]	; (800d178 <PixelDmxConfiguration::Print()+0x24>)
 800d15e:	f7fc fa05 	bl	800956c <printf>
 800d162:	69e1      	ldr	r1, [r4, #28]
 800d164:	4805      	ldr	r0, [pc, #20]	; (800d17c <PixelDmxConfiguration::Print()+0x28>)
 800d166:	f7fc fa01 	bl	800956c <printf>
 800d16a:	e9d4 1208 	ldrd	r1, r2, [r4, #32]
 800d16e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d172:	4803      	ldr	r0, [pc, #12]	; (800d180 <PixelDmxConfiguration::Print()+0x2c>)
 800d174:	f7fc b9fa 	b.w	800956c <printf>
 800d178:	080167b3 	stmdaeq	r1, {r0, r1, r4, r5, r7, r8, r9, sl, sp, lr}
 800d17c:	080167cc 	stmdaeq	r1, {r2, r3, r6, r7, r8, r9, sl, sp, lr}
 800d180:	080167db 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, r8, r9, sl, sp, lr}

0800d184 <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)>:
 800d184:	23c0      	movs	r3, #192	; 0xc0
 800d186:	2803      	cmp	r0, #3
 800d188:	700b      	strb	r3, [r1, #0]
 800d18a:	d006      	beq.n	800d19a <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)+0x16>
 800d18c:	3808      	subs	r0, #8
 800d18e:	2803      	cmp	r0, #3
 800d190:	bf34      	ite	cc
 800d192:	23fc      	movcc	r3, #252	; 0xfc
 800d194:	23f0      	movcs	r3, #240	; 0xf0
 800d196:	7013      	strb	r3, [r2, #0]
 800d198:	4770      	bx	lr
 800d19a:	23f8      	movs	r3, #248	; 0xf8
 800d19c:	e7fb      	b.n	800d196 <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)+0x12>
	...

0800d1a0 <PixelConfiguration::Validate(unsigned int&)>:
 800d1a0:	b513      	push	{r0, r1, r4, lr}
 800d1a2:	4604      	mov	r4, r0
 800d1a4:	6800      	ldr	r0, [r0, #0]
 800d1a6:	6863      	ldr	r3, [r4, #4]
 800d1a8:	2807      	cmp	r0, #7
 800d1aa:	68a2      	ldr	r2, [r4, #8]
 800d1ac:	d128      	bne.n	800d200 <PixelConfiguration::Validate(unsigned int&)+0x60>
 800d1ae:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800d1b2:	bf28      	it	cs
 800d1b4:	f44f 7300 	movcs.w	r3, #512	; 0x200
 800d1b8:	6063      	str	r3, [r4, #4]
 800d1ba:	2304      	movs	r3, #4
 800d1bc:	600b      	str	r3, [r1, #0]
 800d1be:	2301      	movs	r3, #1
 800d1c0:	2a06      	cmp	r2, #6
 800d1c2:	7563      	strb	r3, [r4, #21]
 800d1c4:	d102      	bne.n	800d1cc <PixelConfiguration::Validate(unsigned int&)+0x2c>
 800d1c6:	f000 f949 	bl	800d45c <PixelType::GetMap(pixel::Type)>
 800d1ca:	60a0      	str	r0, [r4, #8]
 800d1cc:	7c63      	ldrb	r3, [r4, #17]
 800d1ce:	7c22      	ldrb	r2, [r4, #16]
 800d1d0:	6820      	ldr	r0, [r4, #0]
 800d1d2:	429a      	cmp	r2, r3
 800d1d4:	bf28      	it	cs
 800d1d6:	2300      	movcs	r3, #0
 800d1d8:	f10d 0207 	add.w	r2, sp, #7
 800d1dc:	bf28      	it	cs
 800d1de:	8223      	strhcs	r3, [r4, #16]
 800d1e0:	f10d 0106 	add.w	r1, sp, #6
 800d1e4:	f7ff ffce 	bl	800d184 <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)>
 800d1e8:	7c23      	ldrb	r3, [r4, #16]
 800d1ea:	b913      	cbnz	r3, 800d1f2 <PixelConfiguration::Validate(unsigned int&)+0x52>
 800d1ec:	f89d 3006 	ldrb.w	r3, [sp, #6]
 800d1f0:	7423      	strb	r3, [r4, #16]
 800d1f2:	7c63      	ldrb	r3, [r4, #17]
 800d1f4:	b913      	cbnz	r3, 800d1fc <PixelConfiguration::Validate(unsigned int&)+0x5c>
 800d1f6:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800d1fa:	7463      	strb	r3, [r4, #17]
 800d1fc:	4b29      	ldr	r3, [pc, #164]	; (800d2a4 <PixelConfiguration::Validate(unsigned int&)+0x104>)
 800d1fe:	e01e      	b.n	800d23e <PixelConfiguration::Validate(unsigned int&)+0x9e>
 800d200:	f5b3 7f2a 	cmp.w	r3, #680	; 0x2a8
 800d204:	bf28      	it	cs
 800d206:	f44f 732a 	movcs.w	r3, #680	; 0x2a8
 800d20a:	6063      	str	r3, [r4, #4]
 800d20c:	2303      	movs	r3, #3
 800d20e:	600b      	str	r3, [r1, #0]
 800d210:	f1a0 030b 	sub.w	r3, r0, #11
 800d214:	2b01      	cmp	r3, #1
 800d216:	d806      	bhi.n	800d226 <PixelConfiguration::Validate(unsigned int&)+0x86>
 800d218:	7ca3      	ldrb	r3, [r4, #18]
 800d21a:	2b1f      	cmp	r3, #31
 800d21c:	d83d      	bhi.n	800d29a <PixelConfiguration::Validate(unsigned int&)+0xfa>
 800d21e:	f043 03e0 	orr.w	r3, r3, #224	; 0xe0
 800d222:	74a3      	strb	r3, [r4, #18]
 800d224:	e001      	b.n	800d22a <PixelConfiguration::Validate(unsigned int&)+0x8a>
 800d226:	2800      	cmp	r0, #0
 800d228:	d139      	bne.n	800d29e <PixelConfiguration::Validate(unsigned int&)+0xfe>
 800d22a:	2300      	movs	r3, #0
 800d22c:	2a06      	cmp	r2, #6
 800d22e:	bf08      	it	eq
 800d230:	60a3      	streq	r3, [r4, #8]
 800d232:	280d      	cmp	r0, #13
 800d234:	7563      	strb	r3, [r4, #21]
 800d236:	68e3      	ldr	r3, [r4, #12]
 800d238:	d119      	bne.n	800d26e <PixelConfiguration::Validate(unsigned int&)+0xce>
 800d23a:	b913      	cbnz	r3, 800d242 <PixelConfiguration::Validate(unsigned int&)+0xa2>
 800d23c:	4b1a      	ldr	r3, [pc, #104]	; (800d2a8 <PixelConfiguration::Validate(unsigned int&)+0x108>)
 800d23e:	60e3      	str	r3, [r4, #12]
 800d240:	e003      	b.n	800d24a <PixelConfiguration::Validate(unsigned int&)+0xaa>
 800d242:	4a1a      	ldr	r2, [pc, #104]	; (800d2ac <PixelConfiguration::Validate(unsigned int&)+0x10c>)
 800d244:	4293      	cmp	r3, r2
 800d246:	d900      	bls.n	800d24a <PixelConfiguration::Validate(unsigned int&)+0xaa>
 800d248:	60e2      	str	r2, [r4, #12]
 800d24a:	7d23      	ldrb	r3, [r4, #20]
 800d24c:	b31b      	cbz	r3, 800d296 <PixelConfiguration::Validate(unsigned int&)+0xf6>
 800d24e:	7ce3      	ldrb	r3, [r4, #19]
 800d250:	b9ab      	cbnz	r3, 800d27e <PixelConfiguration::Validate(unsigned int&)+0xde>
 800d252:	6822      	ldr	r2, [r4, #0]
 800d254:	b17a      	cbz	r2, 800d276 <PixelConfiguration::Validate(unsigned int&)+0xd6>
 800d256:	f1a2 030b 	sub.w	r3, r2, #11
 800d25a:	2b01      	cmp	r3, #1
 800d25c:	d90d      	bls.n	800d27a <PixelConfiguration::Validate(unsigned int&)+0xda>
 800d25e:	4b14      	ldr	r3, [pc, #80]	; (800d2b0 <PixelConfiguration::Validate(unsigned int&)+0x110>)
 800d260:	4914      	ldr	r1, [pc, #80]	; (800d2b4 <PixelConfiguration::Validate(unsigned int&)+0x114>)
 800d262:	2a0d      	cmp	r2, #13
 800d264:	bf08      	it	eq
 800d266:	460b      	moveq	r3, r1
 800d268:	61a3      	str	r3, [r4, #24]
 800d26a:	b002      	add	sp, #8
 800d26c:	bd10      	pop	{r4, pc}
 800d26e:	2b00      	cmp	r3, #0
 800d270:	d0e4      	beq.n	800d23c <PixelConfiguration::Validate(unsigned int&)+0x9c>
 800d272:	4a11      	ldr	r2, [pc, #68]	; (800d2b8 <PixelConfiguration::Validate(unsigned int&)+0x118>)
 800d274:	e7e6      	b.n	800d244 <PixelConfiguration::Validate(unsigned int&)+0xa4>
 800d276:	4b11      	ldr	r3, [pc, #68]	; (800d2bc <PixelConfiguration::Validate(unsigned int&)+0x11c>)
 800d278:	e7f6      	b.n	800d268 <PixelConfiguration::Validate(unsigned int&)+0xc8>
 800d27a:	4b11      	ldr	r3, [pc, #68]	; (800d2c0 <PixelConfiguration::Validate(unsigned int&)+0x120>)
 800d27c:	e7f4      	b.n	800d268 <PixelConfiguration::Validate(unsigned int&)+0xc8>
 800d27e:	f1a3 0214 	sub.w	r2, r3, #20
 800d282:	2a05      	cmp	r2, #5
 800d284:	d807      	bhi.n	800d296 <PixelConfiguration::Validate(unsigned int&)+0xf6>
 800d286:	3b15      	subs	r3, #21
 800d288:	2b04      	cmp	r3, #4
 800d28a:	bf96      	itet	ls
 800d28c:	4a0d      	ldrls	r2, [pc, #52]	; (800d2c4 <PixelConfiguration::Validate(unsigned int&)+0x124>)
 800d28e:	4b0e      	ldrhi	r3, [pc, #56]	; (800d2c8 <PixelConfiguration::Validate(unsigned int&)+0x128>)
 800d290:	f852 3023 	ldrls.w	r3, [r2, r3, lsl #2]
 800d294:	e7e8      	b.n	800d268 <PixelConfiguration::Validate(unsigned int&)+0xc8>
 800d296:	4b07      	ldr	r3, [pc, #28]	; (800d2b4 <PixelConfiguration::Validate(unsigned int&)+0x114>)
 800d298:	e7e6      	b.n	800d268 <PixelConfiguration::Validate(unsigned int&)+0xc8>
 800d29a:	23ff      	movs	r3, #255	; 0xff
 800d29c:	e7c1      	b.n	800d222 <PixelConfiguration::Validate(unsigned int&)+0x82>
 800d29e:	280d      	cmp	r0, #13
 800d2a0:	d18d      	bne.n	800d1be <PixelConfiguration::Validate(unsigned int&)+0x1e>
 800d2a2:	e7c2      	b.n	800d22a <PixelConfiguration::Validate(unsigned int&)+0x8a>
 800d2a4:	0061a800 	rsbeq	sl, r1, r0, lsl #16
 800d2a8:	003d0900 	eorseq	r0, sp, r0, lsl #18
 800d2ac:	00e4e1c0 	rsceq	lr, r4, r0, asr #3
 800d2b0:	08016bd4 	stmdaeq	r1, {r2, r4, r6, r7, r8, r9, fp, sp, lr}
 800d2b4:	080168d4 	stmdaeq	r1, {r2, r4, r6, r7, fp, sp, lr}
 800d2b8:	017d7840 	cmneq	sp, r0, asr #16
 800d2bc:	08016ed4 	stmdaeq	r1, {r2, r4, r6, r7, r9, sl, fp, sp, lr}
 800d2c0:	08016fd4 	stmdaeq	r1, {r2, r4, r6, r7, r8, r9, sl, fp, sp, lr}
 800d2c4:	080168c0 	stmdaeq	r1, {r6, r7, fp, sp, lr}
 800d2c8:	080169d4 	stmdaeq	r1, {r2, r4, r6, r7, r8, fp, sp, lr}

0800d2cc <PixelConfiguration::Print()>:
 800d2cc:	b513      	push	{r0, r1, r4, lr}
 800d2ce:	4604      	mov	r4, r0
 800d2d0:	4825      	ldr	r0, [pc, #148]	; (800d368 <PixelConfiguration::Print()+0x9c>)
 800d2d2:	f7fc f94b 	bl	800956c <printf>
 800d2d6:	6820      	ldr	r0, [r4, #0]
 800d2d8:	f000 f85c 	bl	800d394 <PixelType::GetType(pixel::Type)>
 800d2dc:	6822      	ldr	r2, [r4, #0]
 800d2de:	4601      	mov	r1, r0
 800d2e0:	4822      	ldr	r0, [pc, #136]	; (800d36c <PixelConfiguration::Print()+0xa0>)
 800d2e2:	f7fc f943 	bl	800956c <printf>
 800d2e6:	6861      	ldr	r1, [r4, #4]
 800d2e8:	4821      	ldr	r0, [pc, #132]	; (800d370 <PixelConfiguration::Print()+0xa4>)
 800d2ea:	f7fc f93f 	bl	800956c <printf>
 800d2ee:	7d63      	ldrb	r3, [r4, #21]
 800d2f0:	2b00      	cmp	r3, #0
 800d2f2:	d030      	beq.n	800d356 <PixelConfiguration::Print()+0x8a>
 800d2f4:	68a0      	ldr	r0, [r4, #8]
 800d2f6:	f000 f8a5 	bl	800d444 <PixelType::GetMap(pixel::Map)>
 800d2fa:	68a2      	ldr	r2, [r4, #8]
 800d2fc:	4601      	mov	r1, r0
 800d2fe:	481d      	ldr	r0, [pc, #116]	; (800d374 <PixelConfiguration::Print()+0xa8>)
 800d300:	f7fc f934 	bl	800956c <printf>
 800d304:	7c20      	ldrb	r0, [r4, #16]
 800d306:	f000 f8b3 	bl	800d470 <PixelType::ConvertTxH(unsigned char)>
 800d30a:	f7fa ff8f 	bl	800822c <__aeabi_f2d>
 800d30e:	460b      	mov	r3, r1
 800d310:	7c21      	ldrb	r1, [r4, #16]
 800d312:	4602      	mov	r2, r0
 800d314:	9100      	str	r1, [sp, #0]
 800d316:	4818      	ldr	r0, [pc, #96]	; (800d378 <PixelConfiguration::Print()+0xac>)
 800d318:	f7fc f928 	bl	800956c <printf>
 800d31c:	7c60      	ldrb	r0, [r4, #17]
 800d31e:	f000 f8a7 	bl	800d470 <PixelType::ConvertTxH(unsigned char)>
 800d322:	f7fa ff83 	bl	800822c <__aeabi_f2d>
 800d326:	460b      	mov	r3, r1
 800d328:	7c61      	ldrb	r1, [r4, #17]
 800d32a:	4602      	mov	r2, r0
 800d32c:	9100      	str	r1, [sp, #0]
 800d32e:	4813      	ldr	r0, [pc, #76]	; (800d37c <PixelConfiguration::Print()+0xb0>)
 800d330:	f7fc f91c 	bl	800956c <printf>
 800d334:	7d21      	ldrb	r1, [r4, #20]
 800d336:	4a12      	ldr	r2, [pc, #72]	; (800d380 <PixelConfiguration::Print()+0xb4>)
 800d338:	4b12      	ldr	r3, [pc, #72]	; (800d384 <PixelConfiguration::Print()+0xb8>)
 800d33a:	4813      	ldr	r0, [pc, #76]	; (800d388 <PixelConfiguration::Print()+0xbc>)
 800d33c:	2900      	cmp	r1, #0
 800d33e:	bf14      	ite	ne
 800d340:	4611      	movne	r1, r2
 800d342:	4619      	moveq	r1, r3
 800d344:	f7fc f912 	bl	800956c <printf>
 800d348:	68e1      	ldr	r1, [r4, #12]
 800d34a:	4810      	ldr	r0, [pc, #64]	; (800d38c <PixelConfiguration::Print()+0xc0>)
 800d34c:	b002      	add	sp, #8
 800d34e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d352:	f7fc b90b 	b.w	800956c <printf>
 800d356:	6823      	ldr	r3, [r4, #0]
 800d358:	3b0b      	subs	r3, #11
 800d35a:	2b01      	cmp	r3, #1
 800d35c:	d8ea      	bhi.n	800d334 <PixelConfiguration::Print()+0x68>
 800d35e:	7ca1      	ldrb	r1, [r4, #18]
 800d360:	480b      	ldr	r0, [pc, #44]	; (800d390 <PixelConfiguration::Print()+0xc4>)
 800d362:	f7fc f903 	bl	800956c <printf>
 800d366:	e7e5      	b.n	800d334 <PixelConfiguration::Print()+0x68>
 800d368:	08016806 	stmdaeq	r1, {r1, r2, fp, sp, lr}
 800d36c:	0801681b 	stmdaeq	r1, {r0, r1, r3, r4, fp, sp, lr}
 800d370:	0801682f 	stmdaeq	r1, {r0, r1, r2, r3, r5, fp, sp, lr}
 800d374:	0801683e 	stmdaeq	r1, {r1, r2, r3, r4, r5, fp, sp, lr}
 800d378:	08016852 	stmdaeq	r1, {r1, r4, r6, fp, sp, lr}
 800d37c:	0801686a 	stmdaeq	r1, {r1, r3, r5, r6, fp, sp, lr}
 800d380:	080167ff 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, sp, lr}
 800d384:	08016803 	stmdaeq	r1, {r0, r1, fp, sp, lr}
 800d388:	08016899 	stmdaeq	r1, {r0, r3, r4, r7, fp, sp, lr}
 800d38c:	080168af 	stmdaeq	r1, {r0, r1, r2, r3, r5, r7, fp, sp, lr}
 800d390:	08016882 	stmdaeq	r1, {r1, r7, fp, sp, lr}

0800d394 <PixelType::GetType(pixel::Type)>:
 800d394:	280d      	cmp	r0, #13
 800d396:	bfda      	itte	le
 800d398:	4b02      	ldrle	r3, [pc, #8]	; (800d3a4 <PixelType::GetType(pixel::Type)+0x10>)
 800d39a:	eb03 00c0 	addle.w	r0, r3, r0, lsl #3
 800d39e:	4802      	ldrgt	r0, [pc, #8]	; (800d3a8 <PixelType::GetType(pixel::Type)+0x14>)
 800d3a0:	4770      	bx	lr
 800d3a2:	bf00      	nop
 800d3a4:	08017108 	stmdaeq	r1, {r3, r8, ip, sp, lr}
 800d3a8:	080170d4 	stmdaeq	r1, {r2, r4, r6, r7, ip, sp, lr}

0800d3ac <PixelType::GetType(char const*)>:
 800d3ac:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d3ae:	4604      	mov	r4, r0
 800d3b0:	2000      	movs	r0, #0
 800d3b2:	490f      	ldr	r1, [pc, #60]	; (800d3f0 <PixelType::GetType(char const*)+0x44>)
 800d3b4:	1e67      	subs	r7, r4, #1
 800d3b6:	1e4e      	subs	r6, r1, #1
 800d3b8:	f817 2f01 	ldrb.w	r2, [r7, #1]!
 800d3bc:	4615      	mov	r5, r2
 800d3be:	f1a2 0341 	sub.w	r3, r2, #65	; 0x41
 800d3c2:	2b19      	cmp	r3, #25
 800d3c4:	f816 3f01 	ldrb.w	r3, [r6, #1]!
 800d3c8:	bf98      	it	ls
 800d3ca:	f102 0520 	addls.w	r5, r2, #32
 800d3ce:	f1a3 0c41 	sub.w	ip, r3, #65	; 0x41
 800d3d2:	f1bc 0f19 	cmp.w	ip, #25
 800d3d6:	bf98      	it	ls
 800d3d8:	3320      	addls	r3, #32
 800d3da:	42ab      	cmp	r3, r5
 800d3dc:	d005      	beq.n	800d3ea <PixelType::GetType(char const*)+0x3e>
 800d3de:	3001      	adds	r0, #1
 800d3e0:	280e      	cmp	r0, #14
 800d3e2:	f101 0108 	add.w	r1, r1, #8
 800d3e6:	d1e5      	bne.n	800d3b4 <PixelType::GetType(char const*)+0x8>
 800d3e8:	e001      	b.n	800d3ee <PixelType::GetType(char const*)+0x42>
 800d3ea:	2a00      	cmp	r2, #0
 800d3ec:	d1e4      	bne.n	800d3b8 <PixelType::GetType(char const*)+0xc>
 800d3ee:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d3f0:	08017108 	stmdaeq	r1, {r3, r8, ip, sp, lr}

0800d3f4 <PixelType::GetMap(char const*)>:
 800d3f4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d3f6:	4605      	mov	r5, r0
 800d3f8:	2000      	movs	r0, #0
 800d3fa:	4b11      	ldr	r3, [pc, #68]	; (800d440 <PixelType::GetMap(char const*)+0x4c>)
 800d3fc:	1e5c      	subs	r4, r3, #1
 800d3fe:	1e6e      	subs	r6, r5, #1
 800d400:	f103 0c02 	add.w	ip, r3, #2
 800d404:	f814 2f01 	ldrb.w	r2, [r4, #1]!
 800d408:	4617      	mov	r7, r2
 800d40a:	f1a2 0141 	sub.w	r1, r2, #65	; 0x41
 800d40e:	2919      	cmp	r1, #25
 800d410:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 800d414:	bf98      	it	ls
 800d416:	f102 0720 	addls.w	r7, r2, #32
 800d41a:	f1a1 0e41 	sub.w	lr, r1, #65	; 0x41
 800d41e:	f1be 0f19 	cmp.w	lr, #25
 800d422:	bf98      	it	ls
 800d424:	3120      	addls	r1, #32
 800d426:	42b9      	cmp	r1, r7
 800d428:	d005      	beq.n	800d436 <PixelType::GetMap(char const*)+0x42>
 800d42a:	3001      	adds	r0, #1
 800d42c:	2806      	cmp	r0, #6
 800d42e:	f103 0304 	add.w	r3, r3, #4
 800d432:	d1e3      	bne.n	800d3fc <PixelType::GetMap(char const*)+0x8>
 800d434:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d436:	2a00      	cmp	r2, #0
 800d438:	d0fc      	beq.n	800d434 <PixelType::GetMap(char const*)+0x40>
 800d43a:	4564      	cmp	r4, ip
 800d43c:	d1e2      	bne.n	800d404 <PixelType::GetMap(char const*)+0x10>
 800d43e:	e7f9      	b.n	800d434 <PixelType::GetMap(char const*)+0x40>
 800d440:	080170f0 	stmdaeq	r1, {r4, r5, r6, r7, ip, sp, lr}

0800d444 <PixelType::GetMap(pixel::Map)>:
 800d444:	2805      	cmp	r0, #5
 800d446:	bfda      	itte	le
 800d448:	4b02      	ldrle	r3, [pc, #8]	; (800d454 <PixelType::GetMap(pixel::Map)+0x10>)
 800d44a:	eb03 0080 	addle.w	r0, r3, r0, lsl #2
 800d44e:	4802      	ldrgt	r0, [pc, #8]	; (800d458 <PixelType::GetMap(pixel::Map)+0x14>)
 800d450:	4770      	bx	lr
 800d452:	bf00      	nop
 800d454:	080170f0 	stmdaeq	r1, {r4, r5, r6, r7, ip, sp, lr}
 800d458:	080170dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, ip, sp, lr}

0800d45c <PixelType::GetMap(pixel::Type)>:
 800d45c:	3801      	subs	r0, #1
 800d45e:	2809      	cmp	r0, #9
 800d460:	bf9a      	itte	ls
 800d462:	4b02      	ldrls	r3, [pc, #8]	; (800d46c <PixelType::GetMap(pixel::Type)+0x10>)
 800d464:	5618      	ldrsbls	r0, [r3, r0]
 800d466:	2002      	movhi	r0, #2
 800d468:	4770      	bx	lr
 800d46a:	bf00      	nop
 800d46c:	080170e6 	stmdaeq	r1, {r1, r2, r5, r6, r7, ip, sp, lr}

0800d470 <PixelType::ConvertTxH(unsigned char)>:
 800d470:	28f0      	cmp	r0, #240	; 0xf0
 800d472:	d010      	beq.n	800d496 <PixelType::ConvertTxH(unsigned char)+0x26>
 800d474:	d807      	bhi.n	800d486 <PixelType::ConvertTxH(unsigned char)+0x16>
 800d476:	28c0      	cmp	r0, #192	; 0xc0
 800d478:	d00f      	beq.n	800d49a <PixelType::ConvertTxH(unsigned char)+0x2a>
 800d47a:	28e0      	cmp	r0, #224	; 0xe0
 800d47c:	d00f      	beq.n	800d49e <PixelType::ConvertTxH(unsigned char)+0x2e>
 800d47e:	2880      	cmp	r0, #128	; 0x80
 800d480:	d113      	bne.n	800d4aa <PixelType::ConvertTxH(unsigned char)+0x3a>
 800d482:	480b      	ldr	r0, [pc, #44]	; (800d4b0 <PixelType::ConvertTxH(unsigned char)+0x40>)
 800d484:	4770      	bx	lr
 800d486:	28fc      	cmp	r0, #252	; 0xfc
 800d488:	d00b      	beq.n	800d4a2 <PixelType::ConvertTxH(unsigned char)+0x32>
 800d48a:	28fe      	cmp	r0, #254	; 0xfe
 800d48c:	d00b      	beq.n	800d4a6 <PixelType::ConvertTxH(unsigned char)+0x36>
 800d48e:	28f8      	cmp	r0, #248	; 0xf8
 800d490:	d10b      	bne.n	800d4aa <PixelType::ConvertTxH(unsigned char)+0x3a>
 800d492:	4808      	ldr	r0, [pc, #32]	; (800d4b4 <PixelType::ConvertTxH(unsigned char)+0x44>)
 800d494:	4770      	bx	lr
 800d496:	4808      	ldr	r0, [pc, #32]	; (800d4b8 <PixelType::ConvertTxH(unsigned char)+0x48>)
 800d498:	4770      	bx	lr
 800d49a:	4808      	ldr	r0, [pc, #32]	; (800d4bc <PixelType::ConvertTxH(unsigned char)+0x4c>)
 800d49c:	4770      	bx	lr
 800d49e:	4808      	ldr	r0, [pc, #32]	; (800d4c0 <PixelType::ConvertTxH(unsigned char)+0x50>)
 800d4a0:	4770      	bx	lr
 800d4a2:	4808      	ldr	r0, [pc, #32]	; (800d4c4 <PixelType::ConvertTxH(unsigned char)+0x54>)
 800d4a4:	4770      	bx	lr
 800d4a6:	4808      	ldr	r0, [pc, #32]	; (800d4c8 <PixelType::ConvertTxH(unsigned char)+0x58>)
 800d4a8:	4770      	bx	lr
 800d4aa:	2000      	movs	r0, #0
 800d4ac:	4770      	bx	lr
 800d4ae:	bf00      	nop
 800d4b0:	3e200000 	cdpcc	0, 2, cr0, cr0, cr0, {0}
 800d4b4:	3f480000 	svccc	0x00480000
 800d4b8:	3f200000 	svccc	0x00200000
 800d4bc:	3ea00000 	cdpcc	0, 10, cr0, cr0, cr0, {0}
 800d4c0:	3ef00000 	cdpcc	0, 15, cr0, cr0, cr0, {0}
 800d4c4:	3f700000 	svccc	0x00700000
 800d4c8:	3f8c0000 	svccc	0x008c0000

0800d4cc <PixelType::ConvertTxH(float)>:
 800d4cc:	b510      	push	{r4, lr}
 800d4ce:	491d      	ldr	r1, [pc, #116]	; (800d544 <PixelType::ConvertTxH(float)+0x78>)
 800d4d0:	4604      	mov	r4, r0
 800d4d2:	f7fa fcdf 	bl	8007e94 <__aeabi_fcmplt>
 800d4d6:	bb30      	cbnz	r0, 800d526 <PixelType::ConvertTxH(float)+0x5a>
 800d4d8:	4620      	mov	r0, r4
 800d4da:	491b      	ldr	r1, [pc, #108]	; (800d548 <PixelType::ConvertTxH(float)+0x7c>)
 800d4dc:	f7fa fcda 	bl	8007e94 <__aeabi_fcmplt>
 800d4e0:	bb18      	cbnz	r0, 800d52a <PixelType::ConvertTxH(float)+0x5e>
 800d4e2:	4620      	mov	r0, r4
 800d4e4:	4919      	ldr	r1, [pc, #100]	; (800d54c <PixelType::ConvertTxH(float)+0x80>)
 800d4e6:	f7fa fcd5 	bl	8007e94 <__aeabi_fcmplt>
 800d4ea:	bb00      	cbnz	r0, 800d52e <PixelType::ConvertTxH(float)+0x62>
 800d4ec:	4620      	mov	r0, r4
 800d4ee:	4918      	ldr	r1, [pc, #96]	; (800d550 <PixelType::ConvertTxH(float)+0x84>)
 800d4f0:	f7fa fcd0 	bl	8007e94 <__aeabi_fcmplt>
 800d4f4:	b9e8      	cbnz	r0, 800d532 <PixelType::ConvertTxH(float)+0x66>
 800d4f6:	4620      	mov	r0, r4
 800d4f8:	4916      	ldr	r1, [pc, #88]	; (800d554 <PixelType::ConvertTxH(float)+0x88>)
 800d4fa:	f7fa fccb 	bl	8007e94 <__aeabi_fcmplt>
 800d4fe:	b9d0      	cbnz	r0, 800d536 <PixelType::ConvertTxH(float)+0x6a>
 800d500:	4620      	mov	r0, r4
 800d502:	4915      	ldr	r1, [pc, #84]	; (800d558 <PixelType::ConvertTxH(float)+0x8c>)
 800d504:	f7fa fcc6 	bl	8007e94 <__aeabi_fcmplt>
 800d508:	b9b8      	cbnz	r0, 800d53a <PixelType::ConvertTxH(float)+0x6e>
 800d50a:	4620      	mov	r0, r4
 800d50c:	4913      	ldr	r1, [pc, #76]	; (800d55c <PixelType::ConvertTxH(float)+0x90>)
 800d50e:	f7fa fcc1 	bl	8007e94 <__aeabi_fcmplt>
 800d512:	b9a0      	cbnz	r0, 800d53e <PixelType::ConvertTxH(float)+0x72>
 800d514:	4620      	mov	r0, r4
 800d516:	4912      	ldr	r1, [pc, #72]	; (800d560 <PixelType::ConvertTxH(float)+0x94>)
 800d518:	f7fa fcbc 	bl	8007e94 <__aeabi_fcmplt>
 800d51c:	2800      	cmp	r0, #0
 800d51e:	bf14      	ite	ne
 800d520:	20fe      	movne	r0, #254	; 0xfe
 800d522:	2000      	moveq	r0, #0
 800d524:	bd10      	pop	{r4, pc}
 800d526:	2000      	movs	r0, #0
 800d528:	e7fc      	b.n	800d524 <PixelType::ConvertTxH(float)+0x58>
 800d52a:	2080      	movs	r0, #128	; 0x80
 800d52c:	e7fa      	b.n	800d524 <PixelType::ConvertTxH(float)+0x58>
 800d52e:	20c0      	movs	r0, #192	; 0xc0
 800d530:	e7f8      	b.n	800d524 <PixelType::ConvertTxH(float)+0x58>
 800d532:	20e0      	movs	r0, #224	; 0xe0
 800d534:	e7f6      	b.n	800d524 <PixelType::ConvertTxH(float)+0x58>
 800d536:	20f0      	movs	r0, #240	; 0xf0
 800d538:	e7f4      	b.n	800d524 <PixelType::ConvertTxH(float)+0x58>
 800d53a:	20f8      	movs	r0, #248	; 0xf8
 800d53c:	e7f2      	b.n	800d524 <PixelType::ConvertTxH(float)+0x58>
 800d53e:	20fc      	movs	r0, #252	; 0xfc
 800d540:	e7f0      	b.n	800d524 <PixelType::ConvertTxH(float)+0x58>
 800d542:	bf00      	nop
 800d544:	3da00000 	stccc	0, cr0, [r0]
 800d548:	3e700000 	cdpcc	0, 7, cr0, cr0, cr0, {0}
 800d54c:	3ec80000 	cdpcc	0, 12, cr0, cr8, cr0, {0}
 800d550:	3f0c0000 	svccc	0x000c0000
 800d554:	3f340000 	svccc	0x00340000
 800d558:	3f5c0000 	svccc	0x005c0000
 800d55c:	3f820000 	svccc	0x00820000
 800d560:	3f960000 	svccc	0x00960000

0800d564 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>:
 800d564:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800d566:	f3c2 4307 	ubfx	r3, r2, #16, #8
 800d56a:	f3c2 2607 	ubfx	r6, r2, #8, #8
 800d56e:	b2d4      	uxtb	r4, r2
 800d570:	4a10      	ldr	r2, [pc, #64]	; (800d5b4 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x50>)
 800d572:	4605      	mov	r5, r0
 800d574:	6810      	ldr	r0, [r2, #0]
 800d576:	6802      	ldr	r2, [r0, #0]
 800d578:	2a07      	cmp	r2, #7
 800d57a:	d007      	beq.n	800d58c <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x28>
 800d57c:	460a      	mov	r2, r1
 800d57e:	e9cd 6400 	strd	r6, r4, [sp]
 800d582:	4629      	mov	r1, r5
 800d584:	f000 ff58 	bl	800e438 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 800d588:	b004      	add	sp, #16
 800d58a:	bd70      	pop	{r4, r5, r6, pc}
 800d58c:	42b3      	cmp	r3, r6
 800d58e:	f04f 0200 	mov.w	r2, #0
 800d592:	d10a      	bne.n	800d5aa <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x46>
 800d594:	42a3      	cmp	r3, r4
 800d596:	d108      	bne.n	800d5aa <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x46>
 800d598:	e9cd 2301 	strd	r2, r3, [sp, #4]
 800d59c:	4613      	mov	r3, r2
 800d59e:	9200      	str	r2, [sp, #0]
 800d5a0:	460a      	mov	r2, r1
 800d5a2:	4629      	mov	r1, r5
 800d5a4:	f000 ffd0 	bl	800e548 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
 800d5a8:	e7ee      	b.n	800d588 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x24>
 800d5aa:	e9cd 4201 	strd	r4, r2, [sp, #4]
 800d5ae:	9600      	str	r6, [sp, #0]
 800d5b0:	e7f6      	b.n	800d5a0 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x3c>
 800d5b2:	bf00      	nop
 800d5b4:	2000ca20 	andcs	ip, r0, r0, lsr #20

0800d5b8 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>:
 800d5b8:	b570      	push	{r4, r5, r6, lr}
 800d5ba:	4605      	mov	r5, r0
 800d5bc:	2400      	movs	r4, #0
 800d5be:	4e06      	ldr	r6, [pc, #24]	; (800d5d8 <PixelPatterns::Clear(unsigned int) [clone .isra.0]+0x20>)
 800d5c0:	6833      	ldr	r3, [r6, #0]
 800d5c2:	429c      	cmp	r4, r3
 800d5c4:	d300      	bcc.n	800d5c8 <PixelPatterns::Clear(unsigned int) [clone .isra.0]+0x10>
 800d5c6:	bd70      	pop	{r4, r5, r6, pc}
 800d5c8:	4621      	mov	r1, r4
 800d5ca:	2200      	movs	r2, #0
 800d5cc:	4628      	mov	r0, r5
 800d5ce:	f7ff ffc9 	bl	800d564 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800d5d2:	3401      	adds	r4, #1
 800d5d4:	e7f4      	b.n	800d5c0 <PixelPatterns::Clear(unsigned int) [clone .isra.0]+0x8>
 800d5d6:	bf00      	nop
 800d5d8:	2000ca1c 	andcs	ip, r0, ip, lsl sl

0800d5dc <PixelPatterns::PixelPatterns(unsigned int)>:
 800d5dc:	2908      	cmp	r1, #8
 800d5de:	bf28      	it	cs
 800d5e0:	2108      	movcs	r1, #8
 800d5e2:	4b0b      	ldr	r3, [pc, #44]	; (800d610 <PixelPatterns::PixelPatterns(unsigned int)+0x34>)
 800d5e4:	4a0b      	ldr	r2, [pc, #44]	; (800d614 <PixelPatterns::PixelPatterns(unsigned int)+0x38>)
 800d5e6:	681b      	ldr	r3, [r3, #0]
 800d5e8:	b510      	push	{r4, lr}
 800d5ea:	6013      	str	r3, [r2, #0]
 800d5ec:	4a0a      	ldr	r2, [pc, #40]	; (800d618 <PixelPatterns::PixelPatterns(unsigned int)+0x3c>)
 800d5ee:	6011      	str	r1, [r2, #0]
 800d5f0:	685a      	ldr	r2, [r3, #4]
 800d5f2:	4b0a      	ldr	r3, [pc, #40]	; (800d61c <PixelPatterns::PixelPatterns(unsigned int)+0x40>)
 800d5f4:	2100      	movs	r1, #0
 800d5f6:	601a      	str	r2, [r3, #0]
 800d5f8:	2208      	movs	r2, #8
 800d5fa:	4b09      	ldr	r3, [pc, #36]	; (800d620 <PixelPatterns::PixelPatterns(unsigned int)+0x44>)
 800d5fc:	681c      	ldr	r4, [r3, #0]
 800d5fe:	4b09      	ldr	r3, [pc, #36]	; (800d624 <PixelPatterns::PixelPatterns(unsigned int)+0x48>)
 800d600:	3a01      	subs	r2, #1
 800d602:	61d9      	str	r1, [r3, #28]
 800d604:	601c      	str	r4, [r3, #0]
 800d606:	6199      	str	r1, [r3, #24]
 800d608:	f103 0320 	add.w	r3, r3, #32
 800d60c:	d1f8      	bne.n	800d600 <PixelPatterns::PixelPatterns(unsigned int)+0x24>
 800d60e:	bd10      	pop	{r4, pc}
 800d610:	2000ca2c 	andcs	ip, r0, ip, lsr #20
 800d614:	2000ca20 	andcs	ip, r0, r0, lsr #20
 800d618:	2000ca14 	andcs	ip, r0, r4, lsl sl
 800d61c:	2000ca1c 	andcs	ip, r0, ip, lsl sl
 800d620:	2001da24 	andcs	sp, r1, r4, lsr #20
 800d624:	2000c914 	andcs	ip, r0, r4, lsl r9

0800d628 <PixelPatterns::GetName(pixelpatterns::Pattern)>:
 800d628:	2805      	cmp	r0, #5
 800d62a:	bfdd      	ittte	le
 800d62c:	220e      	movle	r2, #14
 800d62e:	4b02      	ldrle	r3, [pc, #8]	; (800d638 <PixelPatterns::GetName(pixelpatterns::Pattern)+0x10>)
 800d630:	fb02 3000 	mlale	r0, r2, r0, r3
 800d634:	4801      	ldrgt	r0, [pc, #4]	; (800d63c <PixelPatterns::GetName(pixelpatterns::Pattern)+0x14>)
 800d636:	4770      	bx	lr
 800d638:	08017178 	stmdaeq	r1, {r3, r4, r5, r6, r8, ip, sp, lr}
 800d63c:	080170d4 	stmdaeq	r1, {r2, r4, r6, r7, ip, sp, lr}

0800d640 <PixelPatterns::RainbowCycle(unsigned int, unsigned int, pixelpatterns::Direction)>:
 800d640:	b5e0      	push	{r5, r6, r7, lr}
 800d642:	4608      	mov	r0, r1
 800d644:	460d      	mov	r5, r1
 800d646:	4617      	mov	r7, r2
 800d648:	461e      	mov	r6, r3
 800d64a:	f7ff ffb5 	bl	800d5b8 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800d64e:	2301      	movs	r3, #1
 800d650:	4905      	ldr	r1, [pc, #20]	; (800d668 <PixelPatterns::RainbowCycle(unsigned int, unsigned int, pixelpatterns::Direction)+0x28>)
 800d652:	22ff      	movs	r2, #255	; 0xff
 800d654:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 800d658:	61cb      	str	r3, [r1, #28]
 800d65a:	2300      	movs	r3, #0
 800d65c:	604f      	str	r7, [r1, #4]
 800d65e:	e9c1 2304 	strd	r2, r3, [r1, #16]
 800d662:	618e      	str	r6, [r1, #24]
 800d664:	bde0      	pop	{r5, r6, r7, pc}
 800d666:	bf00      	nop
 800d668:	2000c914 	andcs	ip, r0, r4, lsl r9

0800d66c <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>:
 800d66c:	b5e0      	push	{r5, r6, r7, lr}
 800d66e:	4608      	mov	r0, r1
 800d670:	460d      	mov	r5, r1
 800d672:	461e      	mov	r6, r3
 800d674:	4617      	mov	r7, r2
 800d676:	f7ff ff9f 	bl	800d5b8 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800d67a:	2302      	movs	r3, #2
 800d67c:	4907      	ldr	r1, [pc, #28]	; (800d69c <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x30>)
 800d67e:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 800d682:	61cb      	str	r3, [r1, #28]
 800d684:	9b04      	ldr	r3, [sp, #16]
 800d686:	e9c1 7602 	strd	r7, r6, [r1, #8]
 800d68a:	604b      	str	r3, [r1, #4]
 800d68c:	4b04      	ldr	r3, [pc, #16]	; (800d6a0 <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x34>)
 800d68e:	681b      	ldr	r3, [r3, #0]
 800d690:	610b      	str	r3, [r1, #16]
 800d692:	2300      	movs	r3, #0
 800d694:	614b      	str	r3, [r1, #20]
 800d696:	9b05      	ldr	r3, [sp, #20]
 800d698:	618b      	str	r3, [r1, #24]
 800d69a:	bde0      	pop	{r5, r6, r7, pc}
 800d69c:	2000c914 	andcs	ip, r0, r4, lsl r9
 800d6a0:	2000ca1c 	andcs	ip, r0, ip, lsl sl

0800d6a4 <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>:
 800d6a4:	b5e0      	push	{r5, r6, r7, lr}
 800d6a6:	4608      	mov	r0, r1
 800d6a8:	460d      	mov	r5, r1
 800d6aa:	461f      	mov	r7, r3
 800d6ac:	4616      	mov	r6, r2
 800d6ae:	f7ff ff83 	bl	800d5b8 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800d6b2:	2303      	movs	r3, #3
 800d6b4:	4906      	ldr	r1, [pc, #24]	; (800d6d0 <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x2c>)
 800d6b6:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 800d6ba:	61cb      	str	r3, [r1, #28]
 800d6bc:	4b05      	ldr	r3, [pc, #20]	; (800d6d4 <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x30>)
 800d6be:	604f      	str	r7, [r1, #4]
 800d6c0:	681b      	ldr	r3, [r3, #0]
 800d6c2:	608e      	str	r6, [r1, #8]
 800d6c4:	610b      	str	r3, [r1, #16]
 800d6c6:	2300      	movs	r3, #0
 800d6c8:	614b      	str	r3, [r1, #20]
 800d6ca:	9b04      	ldr	r3, [sp, #16]
 800d6cc:	618b      	str	r3, [r1, #24]
 800d6ce:	bde0      	pop	{r5, r6, r7, pc}
 800d6d0:	2000c914 	andcs	ip, r0, r4, lsl r9
 800d6d4:	2000ca1c 	andcs	ip, r0, ip, lsl sl

0800d6d8 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)>:
 800d6d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d6da:	4608      	mov	r0, r1
 800d6dc:	460d      	mov	r5, r1
 800d6de:	461f      	mov	r7, r3
 800d6e0:	4616      	mov	r6, r2
 800d6e2:	f7ff ff69 	bl	800d5b8 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800d6e6:	2304      	movs	r3, #4
 800d6e8:	4c12      	ldr	r4, [pc, #72]	; (800d734 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x5c>)
 800d6ea:	4913      	ldr	r1, [pc, #76]	; (800d738 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x60>)
 800d6ec:	6820      	ldr	r0, [r4, #0]
 800d6ee:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 800d6f2:	61cb      	str	r3, [r1, #28]
 800d6f4:	1e43      	subs	r3, r0, #1
 800d6f6:	005b      	lsls	r3, r3, #1
 800d6f8:	b29b      	uxth	r3, r3
 800d6fa:	610b      	str	r3, [r1, #16]
 800d6fc:	2300      	movs	r3, #0
 800d6fe:	4d0f      	ldr	r5, [pc, #60]	; (800d73c <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x64>)
 800d700:	614b      	str	r3, [r1, #20]
 800d702:	682b      	ldr	r3, [r5, #0]
 800d704:	604f      	str	r7, [r1, #4]
 800d706:	608e      	str	r6, [r1, #8]
 800d708:	b97b      	cbnz	r3, 800d72a <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x52>
 800d70a:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 800d70e:	4298      	cmp	r0, r3
 800d710:	bf2c      	ite	cs
 800d712:	f04f 30ff 	movcs.w	r0, #4294967295	; 0xffffffff
 800d716:	0080      	lslcc	r0, r0, #2
 800d718:	f004 ffe8 	bl	80126ec <operator new[](unsigned int)>
 800d71c:	2200      	movs	r2, #0
 800d71e:	6823      	ldr	r3, [r4, #0]
 800d720:	6028      	str	r0, [r5, #0]
 800d722:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 800d726:	4298      	cmp	r0, r3
 800d728:	d100      	bne.n	800d72c <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x54>
 800d72a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d72c:	f840 2b04 	str.w	r2, [r0], #4
 800d730:	e7f9      	b.n	800d726 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x4e>
 800d732:	bf00      	nop
 800d734:	2000ca1c 	andcs	ip, r0, ip, lsl sl
 800d738:	2000c914 	andcs	ip, r0, r4, lsl r9
 800d73c:	2000ca18 	andcs	ip, r0, r8, lsl sl

0800d740 <PixelPatterns::Fade(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>:
 800d740:	b5e0      	push	{r5, r6, r7, lr}
 800d742:	4608      	mov	r0, r1
 800d744:	460d      	mov	r5, r1
 800d746:	461e      	mov	r6, r3
 800d748:	4617      	mov	r7, r2
 800d74a:	f7ff ff35 	bl	800d5b8 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800d74e:	2305      	movs	r3, #5
 800d750:	4907      	ldr	r1, [pc, #28]	; (800d770 <PixelPatterns::Fade(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x30>)
 800d752:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 800d756:	61cb      	str	r3, [r1, #28]
 800d758:	9b05      	ldr	r3, [sp, #20]
 800d75a:	e9c1 7602 	strd	r7, r6, [r1, #8]
 800d75e:	604b      	str	r3, [r1, #4]
 800d760:	9b04      	ldr	r3, [sp, #16]
 800d762:	610b      	str	r3, [r1, #16]
 800d764:	2300      	movs	r3, #0
 800d766:	614b      	str	r3, [r1, #20]
 800d768:	9b06      	ldr	r3, [sp, #24]
 800d76a:	618b      	str	r3, [r1, #24]
 800d76c:	bde0      	pop	{r5, r6, r7, pc}
 800d76e:	bf00      	nop
 800d770:	2000c914 	andcs	ip, r0, r4, lsl r9

0800d774 <PixelPatterns::Wheel(unsigned char)>:
 800d774:	43cb      	mvns	r3, r1
 800d776:	b2db      	uxtb	r3, r3
 800d778:	2b54      	cmp	r3, #84	; 0x54
 800d77a:	d809      	bhi.n	800d790 <PixelPatterns::Wheel(unsigned char)+0x1c>
 800d77c:	eba3 0383 	sub.w	r3, r3, r3, lsl #2
 800d780:	b2db      	uxtb	r3, r3
 800d782:	1e5a      	subs	r2, r3, #1
 800d784:	4258      	negs	r0, r3
 800d786:	b2d2      	uxtb	r2, r2
 800d788:	b2c0      	uxtb	r0, r0
 800d78a:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 800d78e:	4770      	bx	lr
 800d790:	2ba9      	cmp	r3, #169	; 0xa9
 800d792:	d809      	bhi.n	800d7a8 <PixelPatterns::Wheel(unsigned char)+0x34>
 800d794:	f1c1 01aa 	rsb	r1, r1, #170	; 0xaa
 800d798:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 800d79c:	b2c9      	uxtb	r1, r1
 800d79e:	43c8      	mvns	r0, r1
 800d7a0:	b2c0      	uxtb	r0, r0
 800d7a2:	ea40 2001 	orr.w	r0, r0, r1, lsl #8
 800d7a6:	4770      	bx	lr
 800d7a8:	f1c1 0155 	rsb	r1, r1, #85	; 0x55
 800d7ac:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 800d7b0:	b2c9      	uxtb	r1, r1
 800d7b2:	0208      	lsls	r0, r1, #8
 800d7b4:	f480 407f 	eor.w	r0, r0, #65280	; 0xff00
 800d7b8:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 800d7bc:	4770      	bx	lr
	...

0800d7c0 <PixelPatterns::Increment(unsigned int)>:
 800d7c0:	4a0d      	ldr	r2, [pc, #52]	; (800d7f8 <PixelPatterns::Increment(unsigned int)+0x38>)
 800d7c2:	b510      	push	{r4, lr}
 800d7c4:	014c      	lsls	r4, r1, #5
 800d7c6:	eb02 1141 	add.w	r1, r2, r1, lsl #5
 800d7ca:	e9d1 3005 	ldrd	r3, r0, [r1, #20]
 800d7ce:	b930      	cbnz	r0, 800d7de <PixelPatterns::Increment(unsigned int)+0x1e>
 800d7d0:	690a      	ldr	r2, [r1, #16]
 800d7d2:	3301      	adds	r3, #1
 800d7d4:	4293      	cmp	r3, r2
 800d7d6:	bf18      	it	ne
 800d7d8:	4618      	movne	r0, r3
 800d7da:	6148      	str	r0, [r1, #20]
 800d7dc:	bd10      	pop	{r4, pc}
 800d7de:	b92b      	cbnz	r3, 800d7ec <PixelPatterns::Increment(unsigned int)+0x2c>
 800d7e0:	4422      	add	r2, r4
 800d7e2:	6913      	ldr	r3, [r2, #16]
 800d7e4:	3b01      	subs	r3, #1
 800d7e6:	b29b      	uxth	r3, r3
 800d7e8:	6153      	str	r3, [r2, #20]
 800d7ea:	e7f7      	b.n	800d7dc <PixelPatterns::Increment(unsigned int)+0x1c>
 800d7ec:	3b01      	subs	r3, #1
 800d7ee:	614b      	str	r3, [r1, #20]
 800d7f0:	2b00      	cmp	r3, #0
 800d7f2:	d1f3      	bne.n	800d7dc <PixelPatterns::Increment(unsigned int)+0x1c>
 800d7f4:	e7f4      	b.n	800d7e0 <PixelPatterns::Increment(unsigned int)+0x20>
 800d7f6:	bf00      	nop
 800d7f8:	2000c914 	andcs	ip, r0, r4, lsl r9

0800d7fc <PixelPatterns::RainbowCycleUpdate(unsigned int)>:
 800d7fc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800d800:	4605      	mov	r5, r0
 800d802:	460c      	mov	r4, r1
 800d804:	2700      	movs	r7, #0
 800d806:	4b11      	ldr	r3, [pc, #68]	; (800d84c <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x50>)
 800d808:	f8df 8044 	ldr.w	r8, [pc, #68]	; 800d850 <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x54>
 800d80c:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800d810:	f8d3 9014 	ldr.w	r9, [r3, #20]
 800d814:	f8d8 3000 	ldr.w	r3, [r8]
 800d818:	b2be      	uxth	r6, r7
 800d81a:	42b3      	cmp	r3, r6
 800d81c:	f107 0701 	add.w	r7, r7, #1
 800d820:	d805      	bhi.n	800d82e <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x32>
 800d822:	4621      	mov	r1, r4
 800d824:	4628      	mov	r0, r5
 800d826:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800d82a:	f7ff bfc9 	b.w	800d7c0 <PixelPatterns::Increment(unsigned int)>
 800d82e:	0231      	lsls	r1, r6, #8
 800d830:	fbb1 f1f3 	udiv	r1, r1, r3
 800d834:	4449      	add	r1, r9
 800d836:	4628      	mov	r0, r5
 800d838:	b2c9      	uxtb	r1, r1
 800d83a:	f7ff ff9b 	bl	800d774 <PixelPatterns::Wheel(unsigned char)>
 800d83e:	4631      	mov	r1, r6
 800d840:	4602      	mov	r2, r0
 800d842:	4620      	mov	r0, r4
 800d844:	f7ff fe8e 	bl	800d564 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800d848:	e7e4      	b.n	800d814 <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x18>
 800d84a:	bf00      	nop
 800d84c:	2000c914 	andcs	ip, r0, r4, lsl r9
 800d850:	2000ca1c 	andcs	ip, r0, ip, lsl sl

0800d854 <PixelPatterns::TheaterChaseUpdate(unsigned int)>:
 800d854:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d858:	4605      	mov	r5, r0
 800d85a:	460c      	mov	r4, r1
 800d85c:	f04f 0b00 	mov.w	fp, #0
 800d860:	4b11      	ldr	r3, [pc, #68]	; (800d8a8 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x54>)
 800d862:	4e12      	ldr	r6, [pc, #72]	; (800d8ac <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x58>)
 800d864:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800d868:	f8d3 9014 	ldr.w	r9, [r3, #20]
 800d86c:	f8df a040 	ldr.w	sl, [pc, #64]	; 800d8b0 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x5c>
 800d870:	e9d3 7802 	ldrd	r7, r8, [r3, #8]
 800d874:	6833      	ldr	r3, [r6, #0]
 800d876:	fa1f f18b 	uxth.w	r1, fp
 800d87a:	428b      	cmp	r3, r1
 800d87c:	d805      	bhi.n	800d88a <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x36>
 800d87e:	4621      	mov	r1, r4
 800d880:	4628      	mov	r0, r5
 800d882:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d886:	f7ff bf9b 	b.w	800d7c0 <PixelPatterns::Increment(unsigned int)>
 800d88a:	eb09 0301 	add.w	r3, r9, r1
 800d88e:	fb0a f303 	mul.w	r3, sl, r3
 800d892:	f1b3 3f55 	cmp.w	r3, #1431655765	; 0x55555555
 800d896:	bf94      	ite	ls
 800d898:	463a      	movls	r2, r7
 800d89a:	4642      	movhi	r2, r8
 800d89c:	4620      	mov	r0, r4
 800d89e:	f7ff fe61 	bl	800d564 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800d8a2:	f10b 0b01 	add.w	fp, fp, #1
 800d8a6:	e7e5      	b.n	800d874 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x20>
 800d8a8:	2000c914 	andcs	ip, r0, r4, lsl r9
 800d8ac:	2000ca1c 	andcs	ip, r0, ip, lsl sl
 800d8b0:	aaaaaaab 	bge	6ab8364 <__stack_size+0x6ab5b64>

0800d8b4 <PixelPatterns::ColourWipeUpdate(unsigned int)>:
 800d8b4:	b538      	push	{r3, r4, r5, lr}
 800d8b6:	460c      	mov	r4, r1
 800d8b8:	4605      	mov	r5, r0
 800d8ba:	4b07      	ldr	r3, [pc, #28]	; (800d8d8 <PixelPatterns::ColourWipeUpdate(unsigned int)+0x24>)
 800d8bc:	4620      	mov	r0, r4
 800d8be:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800d8c2:	6959      	ldr	r1, [r3, #20]
 800d8c4:	689a      	ldr	r2, [r3, #8]
 800d8c6:	f7ff fe4d 	bl	800d564 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800d8ca:	4621      	mov	r1, r4
 800d8cc:	4628      	mov	r0, r5
 800d8ce:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d8d2:	f7ff bf75 	b.w	800d7c0 <PixelPatterns::Increment(unsigned int)>
 800d8d6:	bf00      	nop
 800d8d8:	2000c914 	andcs	ip, r0, r4, lsl r9

0800d8dc <PixelPatterns::ScannerUpdate(unsigned int)>:
 800d8dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d8e0:	468b      	mov	fp, r1
 800d8e2:	f04f 0900 	mov.w	r9, #0
 800d8e6:	4b27      	ldr	r3, [pc, #156]	; (800d984 <PixelPatterns::ScannerUpdate(unsigned int)+0xa8>)
 800d8e8:	b085      	sub	sp, #20
 800d8ea:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800d8ee:	e9d3 7604 	ldrd	r7, r6, [r3, #16]
 800d8f2:	689d      	ldr	r5, [r3, #8]
 800d8f4:	f8df a090 	ldr.w	sl, [pc, #144]	; 800d988 <PixelPatterns::ScannerUpdate(unsigned int)+0xac>
 800d8f8:	00b3      	lsls	r3, r6, #2
 800d8fa:	f8df 8090 	ldr.w	r8, [pc, #144]	; 800d98c <PixelPatterns::ScannerUpdate(unsigned int)+0xb0>
 800d8fe:	9002      	str	r0, [sp, #8]
 800d900:	9301      	str	r3, [sp, #4]
 800d902:	1bbf      	subs	r7, r7, r6
 800d904:	f8da 2000 	ldr.w	r2, [sl]
 800d908:	fa1f f489 	uxth.w	r4, r9
 800d90c:	42a2      	cmp	r2, r4
 800d90e:	d806      	bhi.n	800d91e <PixelPatterns::ScannerUpdate(unsigned int)+0x42>
 800d910:	4659      	mov	r1, fp
 800d912:	9802      	ldr	r0, [sp, #8]
 800d914:	b005      	add	sp, #20
 800d916:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d91a:	f7ff bf51 	b.w	800d7c0 <PixelPatterns::Increment(unsigned int)>
 800d91e:	42a6      	cmp	r6, r4
 800d920:	d10b      	bne.n	800d93a <PixelPatterns::ScannerUpdate(unsigned int)+0x5e>
 800d922:	462a      	mov	r2, r5
 800d924:	4631      	mov	r1, r6
 800d926:	4658      	mov	r0, fp
 800d928:	f7ff fe1c 	bl	800d564 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800d92c:	f8d8 2000 	ldr.w	r2, [r8]
 800d930:	9b01      	ldr	r3, [sp, #4]
 800d932:	50d5      	str	r5, [r2, r3]
 800d934:	f109 0901 	add.w	r9, r9, #1
 800d938:	e7e4      	b.n	800d904 <PixelPatterns::ScannerUpdate(unsigned int)+0x28>
 800d93a:	42a7      	cmp	r7, r4
 800d93c:	d109      	bne.n	800d952 <PixelPatterns::ScannerUpdate(unsigned int)+0x76>
 800d93e:	462a      	mov	r2, r5
 800d940:	4639      	mov	r1, r7
 800d942:	4658      	mov	r0, fp
 800d944:	f7ff fe0e 	bl	800d564 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800d948:	f8d8 2000 	ldr.w	r2, [r8]
 800d94c:	f842 5024 	str.w	r5, [r2, r4, lsl #2]
 800d950:	e7f0      	b.n	800d934 <PixelPatterns::ScannerUpdate(unsigned int)+0x58>
 800d952:	f8d8 2000 	ldr.w	r2, [r8]
 800d956:	4658      	mov	r0, fp
 800d958:	f852 1024 	ldr.w	r1, [r2, r4, lsl #2]
 800d95c:	f3c1 2246 	ubfx	r2, r1, #9, #7
 800d960:	f3c1 4c46 	ubfx	ip, r1, #17, #7
 800d964:	0212      	lsls	r2, r2, #8
 800d966:	ea42 420c 	orr.w	r2, r2, ip, lsl #16
 800d96a:	f3c1 0146 	ubfx	r1, r1, #1, #7
 800d96e:	430a      	orrs	r2, r1
 800d970:	4621      	mov	r1, r4
 800d972:	9203      	str	r2, [sp, #12]
 800d974:	f7ff fdf6 	bl	800d564 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800d978:	f8d8 1000 	ldr.w	r1, [r8]
 800d97c:	9a03      	ldr	r2, [sp, #12]
 800d97e:	f841 2024 	str.w	r2, [r1, r4, lsl #2]
 800d982:	e7d7      	b.n	800d934 <PixelPatterns::ScannerUpdate(unsigned int)+0x58>
 800d984:	2000c914 	andcs	ip, r0, r4, lsl r9
 800d988:	2000ca1c 	andcs	ip, r0, ip, lsl sl
 800d98c:	2000ca18 	andcs	ip, r0, r8, lsl sl

0800d990 <PixelPatterns::FadeUpdate(unsigned int)>:
 800d990:	4a20      	ldr	r2, [pc, #128]	; (800da14 <PixelPatterns::FadeUpdate(unsigned int)+0x84>)
 800d992:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d996:	eb02 1241 	add.w	r2, r2, r1, lsl #5
 800d99a:	e9d2 c302 	ldrd	ip, r3, [r2, #8]
 800d99e:	460e      	mov	r6, r1
 800d9a0:	e9d2 1704 	ldrd	r1, r7, [r2, #16]
 800d9a4:	f3c3 2207 	ubfx	r2, r3, #8, #8
 800d9a8:	437a      	muls	r2, r7
 800d9aa:	f3cc 2407 	ubfx	r4, ip, #8, #8
 800d9ae:	4605      	mov	r5, r0
 800d9b0:	1bc8      	subs	r0, r1, r7
 800d9b2:	fb00 2204 	mla	r2, r0, r4, r2
 800d9b6:	f3c3 4407 	ubfx	r4, r3, #16, #8
 800d9ba:	437c      	muls	r4, r7
 800d9bc:	b2db      	uxtb	r3, r3
 800d9be:	437b      	muls	r3, r7
 800d9c0:	f3cc 4e07 	ubfx	lr, ip, #16, #8
 800d9c4:	fb00 440e 	mla	r4, r0, lr, r4
 800d9c8:	fa5f fc8c 	uxtb.w	ip, ip
 800d9cc:	fb00 330c 	mla	r3, r0, ip, r3
 800d9d0:	fbb2 f2f1 	udiv	r2, r2, r1
 800d9d4:	fbb4 f4f1 	udiv	r4, r4, r1
 800d9d8:	fbb3 f3f1 	udiv	r3, r3, r1
 800d9dc:	2700      	movs	r7, #0
 800d9de:	0212      	lsls	r2, r2, #8
 800d9e0:	0424      	lsls	r4, r4, #16
 800d9e2:	b292      	uxth	r2, r2
 800d9e4:	f404 047f 	and.w	r4, r4, #16711680	; 0xff0000
 800d9e8:	4314      	orrs	r4, r2
 800d9ea:	b2db      	uxtb	r3, r3
 800d9ec:	f8df 8028 	ldr.w	r8, [pc, #40]	; 800da18 <PixelPatterns::FadeUpdate(unsigned int)+0x88>
 800d9f0:	431c      	orrs	r4, r3
 800d9f2:	f8d8 3000 	ldr.w	r3, [r8]
 800d9f6:	429f      	cmp	r7, r3
 800d9f8:	d305      	bcc.n	800da06 <PixelPatterns::FadeUpdate(unsigned int)+0x76>
 800d9fa:	4631      	mov	r1, r6
 800d9fc:	4628      	mov	r0, r5
 800d9fe:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800da02:	f7ff bedd 	b.w	800d7c0 <PixelPatterns::Increment(unsigned int)>
 800da06:	4639      	mov	r1, r7
 800da08:	4622      	mov	r2, r4
 800da0a:	4630      	mov	r0, r6
 800da0c:	f7ff fdaa 	bl	800d564 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800da10:	3701      	adds	r7, #1
 800da12:	e7ee      	b.n	800d9f2 <PixelPatterns::FadeUpdate(unsigned int)+0x62>
 800da14:	2000c914 	andcs	ip, r0, r4, lsl r9
 800da18:	2000ca1c 	andcs	ip, r0, ip, lsl sl

0800da1c <PixelPatterns::PortUpdate(unsigned int, unsigned int)>:
 800da1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800da1e:	4b12      	ldr	r3, [pc, #72]	; (800da68 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x4c>)
 800da20:	014e      	lsls	r6, r1, #5
 800da22:	599c      	ldr	r4, [r3, r6]
 800da24:	eb03 1541 	add.w	r5, r3, r1, lsl #5
 800da28:	686f      	ldr	r7, [r5, #4]
 800da2a:	1b14      	subs	r4, r2, r4
 800da2c:	42bc      	cmp	r4, r7
 800da2e:	d319      	bcc.n	800da64 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x48>
 800da30:	519a      	str	r2, [r3, r6]
 800da32:	69eb      	ldr	r3, [r5, #28]
 800da34:	3b01      	subs	r3, #1
 800da36:	2b04      	cmp	r3, #4
 800da38:	d814      	bhi.n	800da64 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x48>
 800da3a:	e8df f003 	tbb	[pc, r3]
 800da3e:	0d0a0703 	stceq	7, cr0, [sl, #-12]
 800da42:	f7ff0010 			; <UNDEFINED> instruction: 0xf7ff0010
 800da46:	feda 2001 	cdp2	0, 13, cr2, cr10, cr1, {0}
 800da4a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800da4c:	f7ff ff02 	bl	800d854 <PixelPatterns::TheaterChaseUpdate(unsigned int)>
 800da50:	e7fa      	b.n	800da48 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 800da52:	f7ff ff2f 	bl	800d8b4 <PixelPatterns::ColourWipeUpdate(unsigned int)>
 800da56:	e7f7      	b.n	800da48 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 800da58:	f7ff ff40 	bl	800d8dc <PixelPatterns::ScannerUpdate(unsigned int)>
 800da5c:	e7f4      	b.n	800da48 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 800da5e:	f7ff ff97 	bl	800d990 <PixelPatterns::FadeUpdate(unsigned int)>
 800da62:	e7f1      	b.n	800da48 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 800da64:	2000      	movs	r0, #0
 800da66:	e7f0      	b.n	800da4a <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2e>
 800da68:	2000c914 	andcs	ip, r0, r4, lsl r9

0800da6c <PixelPatterns::Run()>:
 800da6c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800da70:	4f11      	ldr	r7, [pc, #68]	; (800dab8 <PixelPatterns::Run()+0x4c>)
 800da72:	4606      	mov	r6, r0
 800da74:	6838      	ldr	r0, [r7, #0]
 800da76:	f000 fc5d 	bl	800e334 <WS28xxMulti::IsUpdating()>
 800da7a:	4604      	mov	r4, r0
 800da7c:	b9c8      	cbnz	r0, 800dab2 <PixelPatterns::Run()+0x46>
 800da7e:	4605      	mov	r5, r0
 800da80:	4b0e      	ldr	r3, [pc, #56]	; (800dabc <PixelPatterns::Run()+0x50>)
 800da82:	f8df 803c 	ldr.w	r8, [pc, #60]	; 800dac0 <PixelPatterns::Run()+0x54>
 800da86:	f8d3 9000 	ldr.w	r9, [r3]
 800da8a:	f8d8 3000 	ldr.w	r3, [r8]
 800da8e:	b2e9      	uxtb	r1, r5
 800da90:	428b      	cmp	r3, r1
 800da92:	f105 0501 	add.w	r5, r5, #1
 800da96:	d805      	bhi.n	800daa4 <PixelPatterns::Run()+0x38>
 800da98:	b15c      	cbz	r4, 800dab2 <PixelPatterns::Run()+0x46>
 800da9a:	6838      	ldr	r0, [r7, #0]
 800da9c:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800daa0:	f000 bb08 	b.w	800e0b4 <WS28xxMulti::Update()>
 800daa4:	464a      	mov	r2, r9
 800daa6:	4630      	mov	r0, r6
 800daa8:	f7ff ffb8 	bl	800da1c <PixelPatterns::PortUpdate(unsigned int, unsigned int)>
 800daac:	4320      	orrs	r0, r4
 800daae:	b2c4      	uxtb	r4, r0
 800dab0:	e7eb      	b.n	800da8a <PixelPatterns::Run()+0x1e>
 800dab2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800dab6:	bf00      	nop
 800dab8:	2000ca20 	andcs	ip, r0, r0, lsr #20
 800dabc:	2001da24 	andcs	sp, r1, r4, lsr #20
 800dac0:	2000ca14 	andcs	ip, r0, r4, lsl sl

0800dac4 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>:
 800dac4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800dac6:	f04f 0c80 	mov.w	ip, #128	; 0x80
 800daca:	2501      	movs	r5, #1
 800dacc:	4c1d      	ldr	r4, [pc, #116]	; (800db44 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]+0x80>)
 800dace:	f89d e014 	ldrb.w	lr, [sp, #20]
 800dad2:	eb04 1481 	add.w	r4, r4, r1, lsl #6
 800dad6:	1d81      	adds	r1, r0, #6
 800dad8:	481b      	ldr	r0, [pc, #108]	; (800db48 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]+0x84>)
 800dada:	b2c9      	uxtb	r1, r1
 800dadc:	4420      	add	r0, r4
 800dade:	eb01 00c0 	add.w	r0, r1, r0, lsl #3
 800dae2:	f101 6108 	add.w	r1, r1, #142606336	; 0x8800000
 800dae6:	f501 7100 	add.w	r1, r1, #512	; 0x200
 800daea:	eb01 01c4 	add.w	r1, r1, r4, lsl #3
 800daee:	f89d 4018 	ldrb.w	r4, [sp, #24]
 800daf2:	0080      	lsls	r0, r0, #2
 800daf4:	0089      	lsls	r1, r1, #2
 800daf6:	ea12 060c 	ands.w	r6, r2, ip
 800dafa:	bf0b      	itete	eq
 800dafc:	f5a0 67c0 	subeq.w	r7, r0, #1536	; 0x600
 800db00:	f5a0 66c0 	subne.w	r6, r0, #1536	; 0x600
 800db04:	603e      	streq	r6, [r7, #0]
 800db06:	6035      	strne	r5, [r6, #0]
 800db08:	ea13 060c 	ands.w	r6, r3, ip
 800db0c:	bf0b      	itete	eq
 800db0e:	f5a0 6780 	subeq.w	r7, r0, #1024	; 0x400
 800db12:	f5a0 6680 	subne.w	r6, r0, #1024	; 0x400
 800db16:	603e      	streq	r6, [r7, #0]
 800db18:	6035      	strne	r5, [r6, #0]
 800db1a:	ea1e 060c 	ands.w	r6, lr, ip
 800db1e:	bf15      	itete	ne
 800db20:	f5a0 7600 	subne.w	r6, r0, #512	; 0x200
 800db24:	f5a0 7700 	subeq.w	r7, r0, #512	; 0x200
 800db28:	6035      	strne	r5, [r6, #0]
 800db2a:	603e      	streq	r6, [r7, #0]
 800db2c:	ea14 060c 	ands.w	r6, r4, ip
 800db30:	bf14      	ite	ne
 800db32:	6005      	strne	r5, [r0, #0]
 800db34:	6006      	streq	r6, [r0, #0]
 800db36:	3040      	adds	r0, #64	; 0x40
 800db38:	4281      	cmp	r1, r0
 800db3a:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 800db3e:	d1da      	bne.n	800daf6 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]+0x32>
 800db40:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800db42:	bf00      	nop
 800db44:	2000ca30 	andcs	ip, r0, r0, lsr sl
 800db48:	e1100030 	tst	r0, r0, lsr r0

0800db4c <TIMER3_IRQHandler>:
 800db4c:	f3bf 8f5f 	dmb	sy
 800db50:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800db54:	f8d3 2810 	ldr.w	r2, [r3, #2064]	; 0x810
 800db58:	0791      	lsls	r1, r2, #30
 800db5a:	d51e      	bpl.n	800db9a <TIMER3_IRQHandler+0x4e>
 800db5c:	f8d3 1400 	ldr.w	r1, [r3, #1024]	; 0x400
 800db60:	f021 0101 	bic.w	r1, r1, #1
 800db64:	f8c3 1400 	str.w	r1, [r3, #1024]	; 0x400
 800db68:	f8d3 140c 	ldr.w	r1, [r3, #1036]	; 0x40c
 800db6c:	f421 7100 	bic.w	r1, r1, #512	; 0x200
 800db70:	f8c3 140c 	str.w	r1, [r3, #1036]	; 0x40c
 800db74:	f8d3 140c 	ldr.w	r1, [r3, #1036]	; 0x40c
 800db78:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
 800db7c:	f8c3 140c 	str.w	r1, [r3, #1036]	; 0x40c
 800db80:	f8d3 140c 	ldr.w	r1, [r3, #1036]	; 0x40c
 800db84:	f421 5180 	bic.w	r1, r1, #4096	; 0x1000
 800db88:	f8c3 140c 	str.w	r1, [r3, #1036]	; 0x40c
 800db8c:	2100      	movs	r1, #0
 800db8e:	4b07      	ldr	r3, [pc, #28]	; (800dbac <TIMER3_IRQHandler+0x60>)
 800db90:	7019      	strb	r1, [r3, #0]
 800db92:	f44f 517f 	mov.w	r1, #16320	; 0x3fc0
 800db96:	4b06      	ldr	r3, [pc, #24]	; (800dbb0 <TIMER3_IRQHandler+0x64>)
 800db98:	6159      	str	r1, [r3, #20]
 800db9a:	43d2      	mvns	r2, r2
 800db9c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800dba0:	f8c3 2810 	str.w	r2, [r3, #2064]	; 0x810
 800dba4:	f3bf 8f5f 	dmb	sy
 800dba8:	4770      	bx	lr
 800dbaa:	bf00      	nop
 800dbac:	2000ca28 	andcs	ip, r0, r8, lsr #20
 800dbb0:	40011000 	andmi	r1, r1, r0

0800dbb4 <WS28xxMulti::~WS28xxMulti()>:
 800dbb4:	2200      	movs	r2, #0
 800dbb6:	4b01      	ldr	r3, [pc, #4]	; (800dbbc <WS28xxMulti::~WS28xxMulti()+0x8>)
 800dbb8:	601a      	str	r2, [r3, #0]
 800dbba:	4770      	bx	lr
 800dbbc:	2000ca2c 	andcs	ip, r0, ip, lsr #20

0800dbc0 <WS28xxMulti::Setup(unsigned char, unsigned char)>:
 800dbc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dbc4:	4680      	mov	r8, r0
 800dbc6:	b08d      	sub	sp, #52	; 0x34
 800dbc8:	4608      	mov	r0, r1
 800dbca:	4614      	mov	r4, r2
 800dbcc:	f007 f838 	bl	8014c40 <__popcountsi2>
 800dbd0:	4607      	mov	r7, r0
 800dbd2:	4620      	mov	r0, r4
 800dbd4:	f007 f834 	bl	8014c40 <__popcountsi2>
 800dbd8:	4d76      	ldr	r5, [pc, #472]	; (800ddb4 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x1f4>)
 800dbda:	4606      	mov	r6, r0
 800dbdc:	f240 7001 	movw	r0, #1793	; 0x701
 800dbe0:	f005 fa0a 	bl	8012ff8 <rcu_periph_clock_enable>
 800dbe4:	4628      	mov	r0, r5
 800dbe6:	2400      	movs	r4, #0
 800dbe8:	f005 fb6a 	bl	80132c0 <timer_deinit>
 800dbec:	2395      	movs	r3, #149	; 0x95
 800dbee:	f04f 0996 	mov.w	r9, #150	; 0x96
 800dbf2:	4628      	mov	r0, r5
 800dbf4:	a901      	add	r1, sp, #4
 800dbf6:	9303      	str	r3, [sp, #12]
 800dbf8:	9401      	str	r4, [sp, #4]
 800dbfa:	f8ad 4008 	strh.w	r4, [sp, #8]
 800dbfe:	f8ad 4010 	strh.w	r4, [sp, #16]
 800dc02:	f005 fc03 	bl	801340c <timer_init>
 800dc06:	4621      	mov	r1, r4
 800dc08:	4628      	mov	r0, r5
 800dc0a:	f005 fdc3 	bl	8013794 <timer_master_slave_mode_config>
 800dc0e:	4628      	mov	r0, r5
 800dc10:	2130      	movs	r1, #48	; 0x30
 800dc12:	f005 fdaf 	bl	8013774 <timer_master_output_trigger_source_select>
 800dc16:	4621      	mov	r1, r4
 800dc18:	4628      	mov	r0, r5
 800dc1a:	2210      	movs	r2, #16
 800dc1c:	f005 fd48 	bl	80136b0 <timer_channel_output_mode_config>
 800dc20:	4628      	mov	r0, r5
 800dc22:	2210      	movs	r2, #16
 800dc24:	2102      	movs	r1, #2
 800dc26:	f005 fd43 	bl	80136b0 <timer_channel_output_mode_config>
 800dc2a:	4628      	mov	r0, r5
 800dc2c:	2210      	movs	r2, #16
 800dc2e:	2103      	movs	r1, #3
 800dc30:	f005 fd3e 	bl	80136b0 <timer_channel_output_mode_config>
 800dc34:	4621      	mov	r1, r4
 800dc36:	4628      	mov	r0, r5
 800dc38:	2201      	movs	r2, #1
 800dc3a:	f005 fd5f 	bl	80136fc <timer_channel_output_pulse_value_config>
 800dc3e:	fb09 f207 	mul.w	r2, r9, r7
 800dc42:	4628      	mov	r0, r5
 800dc44:	2102      	movs	r1, #2
 800dc46:	f3c2 02cf 	ubfx	r2, r2, #3, #16
 800dc4a:	f005 fd57 	bl	80136fc <timer_channel_output_pulse_value_config>
 800dc4e:	fb09 f206 	mul.w	r2, r9, r6
 800dc52:	2103      	movs	r1, #3
 800dc54:	f3c2 02cf 	ubfx	r2, r2, #3, #16
 800dc58:	4628      	mov	r0, r5
 800dc5a:	f005 fd4f 	bl	80136fc <timer_channel_output_pulse_value_config>
 800dc5e:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800dc62:	f240 7002 	movw	r0, #1794	; 0x702
 800dc66:	f005 f9c7 	bl	8012ff8 <rcu_periph_clock_enable>
 800dc6a:	4628      	mov	r0, r5
 800dc6c:	f005 fb28 	bl	80132c0 <timer_deinit>
 800dc70:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800dc74:	4628      	mov	r0, r5
 800dc76:	a901      	add	r1, sp, #4
 800dc78:	9303      	str	r3, [sp, #12]
 800dc7a:	9401      	str	r4, [sp, #4]
 800dc7c:	f8ad 4008 	strh.w	r4, [sp, #8]
 800dc80:	f8ad 4010 	strh.w	r4, [sp, #16]
 800dc84:	f005 fbc2 	bl	801340c <timer_init>
 800dc88:	4621      	mov	r1, r4
 800dc8a:	4628      	mov	r0, r5
 800dc8c:	f005 fd82 	bl	8013794 <timer_master_slave_mode_config>
 800dc90:	4628      	mov	r0, r5
 800dc92:	2107      	movs	r1, #7
 800dc94:	f005 fd76 	bl	8013784 <timer_slave_mode_select>
 800dc98:	4628      	mov	r0, r5
 800dc9a:	2120      	movs	r1, #32
 800dc9c:	f005 fd62 	bl	8013764 <timer_input_trigger_source_select>
 800dca0:	4621      	mov	r1, r4
 800dca2:	4628      	mov	r0, r5
 800dca4:	2210      	movs	r2, #16
 800dca6:	f005 fd03 	bl	80136b0 <timer_channel_output_mode_config>
 800dcaa:	f8d8 201c 	ldr.w	r2, [r8, #28]
 800dcae:	4621      	mov	r1, r4
 800dcb0:	3201      	adds	r2, #1
 800dcb2:	4628      	mov	r0, r5
 800dcb4:	b292      	uxth	r2, r2
 800dcb6:	f005 fd21 	bl	80136fc <timer_channel_output_pulse_value_config>
 800dcba:	2102      	movs	r1, #2
 800dcbc:	4628      	mov	r0, r5
 800dcbe:	f005 fd76 	bl	80137ae <timer_interrupt_enable>
 800dcc2:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800dcc6:	2601      	movs	r6, #1
 800dcc8:	f44f 7780 	mov.w	r7, #256	; 0x100
 800dccc:	f44f 6980 	mov.w	r9, #1024	; 0x400
 800dcd0:	f44f 5800 	mov.w	r8, #8192	; 0x2000
 800dcd4:	4b38      	ldr	r3, [pc, #224]	; (800ddb8 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x1f8>)
 800dcd6:	f505 35fc 	add.w	r5, r5, #129024	; 0x1f800
 800dcda:	f883 431e 	strb.w	r4, [r3, #798]	; 0x31e
 800dcde:	f44f 60a0 	mov.w	r0, #1280	; 0x500
 800dce2:	601a      	str	r2, [r3, #0]
 800dce4:	f005 f988 	bl	8012ff8 <rcu_periph_clock_enable>
 800dce8:	2105      	movs	r1, #5
 800dcea:	4628      	mov	r0, r5
 800dcec:	f004 fff8 	bl	8012ce0 <dma_deinit>
 800dcf0:	a805      	add	r0, sp, #20
 800dcf2:	f005 f813 	bl	8012d1c <dma_struct_para_init>
 800dcf6:	f8df b0c4 	ldr.w	fp, [pc, #196]	; 800ddbc <WS28xxMulti::Setup(unsigned char, unsigned char)+0x1fc>
 800dcfa:	4b31      	ldr	r3, [pc, #196]	; (800ddc0 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x200>)
 800dcfc:	aa05      	add	r2, sp, #20
 800dcfe:	4628      	mov	r0, r5
 800dd00:	2105      	movs	r1, #5
 800dd02:	e9cd 3705 	strd	r3, r7, [sp, #20]
 800dd06:	f8cd b01c 	str.w	fp, [sp, #28]
 800dd0a:	f8cd 9020 	str.w	r9, [sp, #32]
 800dd0e:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 800dd12:	f8ad 402c 	strh.w	r4, [sp, #44]	; 0x2c
 800dd16:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 800dd1a:	f005 f809 	bl	8012d30 <dma_init>
 800dd1e:	4628      	mov	r0, r5
 800dd20:	2105      	movs	r1, #5
 800dd22:	f005 f836 	bl	8012d92 <dma_circulation_disable>
 800dd26:	4628      	mov	r0, r5
 800dd28:	2105      	movs	r1, #5
 800dd2a:	f005 f83a 	bl	8012da2 <dma_memory_to_memory_disable>
 800dd2e:	4631      	mov	r1, r6
 800dd30:	4628      	mov	r0, r5
 800dd32:	f004 ffd5 	bl	8012ce0 <dma_deinit>
 800dd36:	a805      	add	r0, sp, #20
 800dd38:	f004 fff0 	bl	8012d1c <dma_struct_para_init>
 800dd3c:	f8df a084 	ldr.w	sl, [pc, #132]	; 800ddc4 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x204>
 800dd40:	4b21      	ldr	r3, [pc, #132]	; (800ddc8 <WS28xxMulti::Setup(unsigned char, unsigned char)+0x208>)
 800dd42:	aa05      	add	r2, sp, #20
 800dd44:	4631      	mov	r1, r6
 800dd46:	4628      	mov	r0, r5
 800dd48:	e9cd 3907 	strd	r3, r9, [sp, #28]
 800dd4c:	e9cd a705 	strd	sl, r7, [sp, #20]
 800dd50:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 800dd54:	f8ad 702c 	strh.w	r7, [sp, #44]	; 0x2c
 800dd58:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 800dd5c:	f004 ffe8 	bl	8012d30 <dma_init>
 800dd60:	4631      	mov	r1, r6
 800dd62:	4628      	mov	r0, r5
 800dd64:	f005 f815 	bl	8012d92 <dma_circulation_disable>
 800dd68:	4631      	mov	r1, r6
 800dd6a:	4628      	mov	r0, r5
 800dd6c:	f005 f819 	bl	8012da2 <dma_memory_to_memory_disable>
 800dd70:	2102      	movs	r1, #2
 800dd72:	4628      	mov	r0, r5
 800dd74:	f004 ffb4 	bl	8012ce0 <dma_deinit>
 800dd78:	a805      	add	r0, sp, #20
 800dd7a:	f004 ffcf 	bl	8012d1c <dma_struct_para_init>
 800dd7e:	aa05      	add	r2, sp, #20
 800dd80:	4628      	mov	r0, r5
 800dd82:	2102      	movs	r1, #2
 800dd84:	e9cd b907 	strd	fp, r9, [sp, #28]
 800dd88:	e9cd a705 	strd	sl, r7, [sp, #20]
 800dd8c:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 800dd90:	f8ad 402c 	strh.w	r4, [sp, #44]	; 0x2c
 800dd94:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 800dd98:	f004 ffca 	bl	8012d30 <dma_init>
 800dd9c:	4628      	mov	r0, r5
 800dd9e:	2102      	movs	r1, #2
 800dda0:	f004 fff7 	bl	8012d92 <dma_circulation_disable>
 800dda4:	2102      	movs	r1, #2
 800dda6:	4628      	mov	r0, r5
 800dda8:	f004 fffb 	bl	8012da2 <dma_memory_to_memory_disable>
 800ddac:	b00d      	add	sp, #52	; 0x34
 800ddae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ddb2:	bf00      	nop
 800ddb4:	40000400 	andmi	r0, r0, r0, lsl #8
 800ddb8:	e000e100 	and	lr, r0, r0, lsl #2
 800ddbc:	080171cc 	stmdaeq	r1, {r2, r3, r6, r7, r8, ip, sp, lr}
 800ddc0:	40011010 	andmi	r1, r1, r0, lsl r0
 800ddc4:	40011014 	andmi	r1, r1, r4, lsl r0
 800ddc8:	2000ca30 	andcs	ip, r0, r0, lsr sl

0800ddcc <WS28xxMulti::Setup(unsigned int)>:
 800ddcc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ddd0:	460c      	mov	r4, r1
 800ddd2:	b090      	sub	sp, #64	; 0x40
 800ddd4:	4680      	mov	r8, r0
 800ddd6:	f240 6002 	movw	r0, #1538	; 0x602
 800ddda:	f005 f90d 	bl	8012ff8 <rcu_periph_clock_enable>
 800ddde:	4d82      	ldr	r5, [pc, #520]	; (800dfe8 <WS28xxMulti::Setup(unsigned int)+0x21c>)
 800dde0:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 800dde4:	f005 f908 	bl	8012ff8 <rcu_periph_clock_enable>
 800dde8:	2203      	movs	r2, #3
 800ddea:	2340      	movs	r3, #64	; 0x40
 800ddec:	2118      	movs	r1, #24
 800ddee:	487f      	ldr	r0, [pc, #508]	; (800dfec <WS28xxMulti::Setup(unsigned int)+0x220>)
 800ddf0:	f005 f86a 	bl	8012ec8 <gpio_init>
 800ddf4:	fbb5 f5f4 	udiv	r5, r5, r4
 800ddf8:	2d0c      	cmp	r5, #12
 800ddfa:	bf38      	it	cc
 800ddfc:	250c      	movcc	r5, #12
 800ddfe:	2400      	movs	r4, #0
 800de00:	2602      	movs	r6, #2
 800de02:	2701      	movs	r7, #1
 800de04:	f44f 7980 	mov.w	r9, #256	; 0x100
 800de08:	f240 7001 	movw	r0, #1793	; 0x701
 800de0c:	f005 f8f4 	bl	8012ff8 <rcu_periph_clock_enable>
 800de10:	4877      	ldr	r0, [pc, #476]	; (800dff0 <WS28xxMulti::Setup(unsigned int)+0x224>)
 800de12:	f005 fa55 	bl	80132c0 <timer_deinit>
 800de16:	1e6b      	subs	r3, r5, #1
 800de18:	4875      	ldr	r0, [pc, #468]	; (800dff0 <WS28xxMulti::Setup(unsigned int)+0x224>)
 800de1a:	a905      	add	r1, sp, #20
 800de1c:	9307      	str	r3, [sp, #28]
 800de1e:	9405      	str	r4, [sp, #20]
 800de20:	f8ad 4018 	strh.w	r4, [sp, #24]
 800de24:	f8ad 4020 	strh.w	r4, [sp, #32]
 800de28:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800de2c:	f005 faee 	bl	801340c <timer_init>
 800de30:	4621      	mov	r1, r4
 800de32:	486f      	ldr	r0, [pc, #444]	; (800dff0 <WS28xxMulti::Setup(unsigned int)+0x224>)
 800de34:	aa02      	add	r2, sp, #8
 800de36:	e9cd 7602 	strd	r7, r6, [sp, #8]
 800de3a:	f8cd 9010 	str.w	r9, [sp, #16]
 800de3e:	f005 fb47 	bl	80134d0 <timer_channel_output_config>
 800de42:	fa25 f207 	lsr.w	r2, r5, r7
 800de46:	3a01      	subs	r2, #1
 800de48:	4621      	mov	r1, r4
 800de4a:	4869      	ldr	r0, [pc, #420]	; (800dff0 <WS28xxMulti::Setup(unsigned int)+0x224>)
 800de4c:	b292      	uxth	r2, r2
 800de4e:	f005 fc55 	bl	80136fc <timer_channel_output_pulse_value_config>
 800de52:	2260      	movs	r2, #96	; 0x60
 800de54:	4621      	mov	r1, r4
 800de56:	4866      	ldr	r0, [pc, #408]	; (800dff0 <WS28xxMulti::Setup(unsigned int)+0x224>)
 800de58:	f005 fc2a 	bl	80136b0 <timer_channel_output_mode_config>
 800de5c:	4622      	mov	r2, r4
 800de5e:	4621      	mov	r1, r4
 800de60:	4863      	ldr	r0, [pc, #396]	; (800dff0 <WS28xxMulti::Setup(unsigned int)+0x224>)
 800de62:	f005 fc59 	bl	8013718 <timer_channel_output_shadow_config>
 800de66:	2210      	movs	r2, #16
 800de68:	4631      	mov	r1, r6
 800de6a:	4861      	ldr	r0, [pc, #388]	; (800dff0 <WS28xxMulti::Setup(unsigned int)+0x224>)
 800de6c:	f005 fc20 	bl	80136b0 <timer_channel_output_mode_config>
 800de70:	2210      	movs	r2, #16
 800de72:	2103      	movs	r1, #3
 800de74:	485e      	ldr	r0, [pc, #376]	; (800dff0 <WS28xxMulti::Setup(unsigned int)+0x224>)
 800de76:	f005 fc1b 	bl	80136b0 <timer_channel_output_mode_config>
 800de7a:	463a      	mov	r2, r7
 800de7c:	4631      	mov	r1, r6
 800de7e:	485c      	ldr	r0, [pc, #368]	; (800dff0 <WS28xxMulti::Setup(unsigned int)+0x224>)
 800de80:	f005 fc3c 	bl	80136fc <timer_channel_output_pulse_value_config>
 800de84:	fa25 f206 	lsr.w	r2, r5, r6
 800de88:	3a01      	subs	r2, #1
 800de8a:	b292      	uxth	r2, r2
 800de8c:	2103      	movs	r1, #3
 800de8e:	4858      	ldr	r0, [pc, #352]	; (800dff0 <WS28xxMulti::Setup(unsigned int)+0x224>)
 800de90:	f005 fc34 	bl	80136fc <timer_channel_output_pulse_value_config>
 800de94:	4621      	mov	r1, r4
 800de96:	4856      	ldr	r0, [pc, #344]	; (800dff0 <WS28xxMulti::Setup(unsigned int)+0x224>)
 800de98:	f005 fc7c 	bl	8013794 <timer_master_slave_mode_config>
 800de9c:	2130      	movs	r1, #48	; 0x30
 800de9e:	4854      	ldr	r0, [pc, #336]	; (800dff0 <WS28xxMulti::Setup(unsigned int)+0x224>)
 800dea0:	f005 fc68 	bl	8013774 <timer_master_output_trigger_source_select>
 800dea4:	f240 7002 	movw	r0, #1794	; 0x702
 800dea8:	f005 f8a6 	bl	8012ff8 <rcu_periph_clock_enable>
 800deac:	4851      	ldr	r0, [pc, #324]	; (800dff4 <WS28xxMulti::Setup(unsigned int)+0x228>)
 800deae:	f005 fa07 	bl	80132c0 <timer_deinit>
 800deb2:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800deb6:	484f      	ldr	r0, [pc, #316]	; (800dff4 <WS28xxMulti::Setup(unsigned int)+0x228>)
 800deb8:	a905      	add	r1, sp, #20
 800deba:	9307      	str	r3, [sp, #28]
 800debc:	9405      	str	r4, [sp, #20]
 800debe:	f8ad 4018 	strh.w	r4, [sp, #24]
 800dec2:	f8ad 4020 	strh.w	r4, [sp, #32]
 800dec6:	f005 faa1 	bl	801340c <timer_init>
 800deca:	4621      	mov	r1, r4
 800decc:	4849      	ldr	r0, [pc, #292]	; (800dff4 <WS28xxMulti::Setup(unsigned int)+0x228>)
 800dece:	f005 fc61 	bl	8013794 <timer_master_slave_mode_config>
 800ded2:	2107      	movs	r1, #7
 800ded4:	4847      	ldr	r0, [pc, #284]	; (800dff4 <WS28xxMulti::Setup(unsigned int)+0x228>)
 800ded6:	f005 fc55 	bl	8013784 <timer_slave_mode_select>
 800deda:	2120      	movs	r1, #32
 800dedc:	4845      	ldr	r0, [pc, #276]	; (800dff4 <WS28xxMulti::Setup(unsigned int)+0x228>)
 800dede:	f005 fc41 	bl	8013764 <timer_input_trigger_source_select>
 800dee2:	2210      	movs	r2, #16
 800dee4:	4621      	mov	r1, r4
 800dee6:	4843      	ldr	r0, [pc, #268]	; (800dff4 <WS28xxMulti::Setup(unsigned int)+0x228>)
 800dee8:	f005 fbe2 	bl	80136b0 <timer_channel_output_mode_config>
 800deec:	f8b8 201c 	ldrh.w	r2, [r8, #28]
 800def0:	4621      	mov	r1, r4
 800def2:	4840      	ldr	r0, [pc, #256]	; (800dff4 <WS28xxMulti::Setup(unsigned int)+0x228>)
 800def4:	f005 fc02 	bl	80136fc <timer_channel_output_pulse_value_config>
 800def8:	4631      	mov	r1, r6
 800defa:	483e      	ldr	r0, [pc, #248]	; (800dff4 <WS28xxMulti::Setup(unsigned int)+0x228>)
 800defc:	f005 fc57 	bl	80137ae <timer_interrupt_enable>
 800df00:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800df04:	f44f 5500 	mov.w	r5, #8192	; 0x2000
 800df08:	f44f 6a80 	mov.w	sl, #1024	; 0x400
 800df0c:	4b3a      	ldr	r3, [pc, #232]	; (800dff8 <WS28xxMulti::Setup(unsigned int)+0x22c>)
 800df0e:	f44f 60a0 	mov.w	r0, #1280	; 0x500
 800df12:	f883 431e 	strb.w	r4, [r3, #798]	; 0x31e
 800df16:	601a      	str	r2, [r3, #0]
 800df18:	f005 f86e 	bl	8012ff8 <rcu_periph_clock_enable>
 800df1c:	4639      	mov	r1, r7
 800df1e:	4837      	ldr	r0, [pc, #220]	; (800dffc <WS28xxMulti::Setup(unsigned int)+0x230>)
 800df20:	f004 fede 	bl	8012ce0 <dma_deinit>
 800df24:	a809      	add	r0, sp, #36	; 0x24
 800df26:	f004 fef9 	bl	8012d1c <dma_struct_para_init>
 800df2a:	4b35      	ldr	r3, [pc, #212]	; (800e000 <WS28xxMulti::Setup(unsigned int)+0x234>)
 800df2c:	aa09      	add	r2, sp, #36	; 0x24
 800df2e:	930b      	str	r3, [sp, #44]	; 0x2c
 800df30:	4b34      	ldr	r3, [pc, #208]	; (800e004 <WS28xxMulti::Setup(unsigned int)+0x238>)
 800df32:	4639      	mov	r1, r7
 800df34:	4831      	ldr	r0, [pc, #196]	; (800dffc <WS28xxMulti::Setup(unsigned int)+0x230>)
 800df36:	e9cd 3909 	strd	r3, r9, [sp, #36]	; 0x24
 800df3a:	950e      	str	r5, [sp, #56]	; 0x38
 800df3c:	f8cd a030 	str.w	sl, [sp, #48]	; 0x30
 800df40:	f8ad 403c 	strh.w	r4, [sp, #60]	; 0x3c
 800df44:	f88d 703e 	strb.w	r7, [sp, #62]	; 0x3e
 800df48:	f004 fef2 	bl	8012d30 <dma_init>
 800df4c:	4639      	mov	r1, r7
 800df4e:	482b      	ldr	r0, [pc, #172]	; (800dffc <WS28xxMulti::Setup(unsigned int)+0x230>)
 800df50:	f004 ff1f 	bl	8012d92 <dma_circulation_disable>
 800df54:	4639      	mov	r1, r7
 800df56:	4829      	ldr	r0, [pc, #164]	; (800dffc <WS28xxMulti::Setup(unsigned int)+0x230>)
 800df58:	f004 ff23 	bl	8012da2 <dma_memory_to_memory_disable>
 800df5c:	4631      	mov	r1, r6
 800df5e:	4827      	ldr	r0, [pc, #156]	; (800dffc <WS28xxMulti::Setup(unsigned int)+0x230>)
 800df60:	f004 febe 	bl	8012ce0 <dma_deinit>
 800df64:	a809      	add	r0, sp, #36	; 0x24
 800df66:	f004 fed9 	bl	8012d1c <dma_struct_para_init>
 800df6a:	4b27      	ldr	r3, [pc, #156]	; (800e008 <WS28xxMulti::Setup(unsigned int)+0x23c>)
 800df6c:	aa09      	add	r2, sp, #36	; 0x24
 800df6e:	e9cd 3a0b 	strd	r3, sl, [sp, #44]	; 0x2c
 800df72:	4b26      	ldr	r3, [pc, #152]	; (800e00c <WS28xxMulti::Setup(unsigned int)+0x240>)
 800df74:	4631      	mov	r1, r6
 800df76:	4821      	ldr	r0, [pc, #132]	; (800dffc <WS28xxMulti::Setup(unsigned int)+0x230>)
 800df78:	e9cd 3909 	strd	r3, r9, [sp, #36]	; 0x24
 800df7c:	950e      	str	r5, [sp, #56]	; 0x38
 800df7e:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 800df82:	f88d 703e 	strb.w	r7, [sp, #62]	; 0x3e
 800df86:	f004 fed3 	bl	8012d30 <dma_init>
 800df8a:	4631      	mov	r1, r6
 800df8c:	481b      	ldr	r0, [pc, #108]	; (800dffc <WS28xxMulti::Setup(unsigned int)+0x230>)
 800df8e:	f004 ff00 	bl	8012d92 <dma_circulation_disable>
 800df92:	4631      	mov	r1, r6
 800df94:	4819      	ldr	r0, [pc, #100]	; (800dffc <WS28xxMulti::Setup(unsigned int)+0x230>)
 800df96:	f004 ff04 	bl	8012da2 <dma_memory_to_memory_disable>
 800df9a:	f8d8 5000 	ldr.w	r5, [r8]
 800df9e:	3d0b      	subs	r5, #11
 800dfa0:	42b5      	cmp	r5, r6
 800dfa2:	d81d      	bhi.n	800dfe0 <WS28xxMulti::Setup(unsigned int)+0x214>
 800dfa4:	f8d8 6004 	ldr.w	r6, [r8, #4]
 800dfa8:	4627      	mov	r7, r4
 800dfaa:	f04f 08ff 	mov.w	r8, #255	; 0xff
 800dfae:	3601      	adds	r6, #1
 800dfb0:	2300      	movs	r3, #0
 800dfb2:	4620      	mov	r0, r4
 800dfb4:	461a      	mov	r2, r3
 800dfb6:	4619      	mov	r1, r3
 800dfb8:	e9cd 7700 	strd	r7, r7, [sp]
 800dfbc:	f7ff fd82 	bl	800dac4 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800dfc0:	2d02      	cmp	r5, #2
 800dfc2:	bf18      	it	ne
 800dfc4:	23ff      	movne	r3, #255	; 0xff
 800dfc6:	4620      	mov	r0, r4
 800dfc8:	bf1a      	itte	ne
 800dfca:	461a      	movne	r2, r3
 800dfcc:	e9cd 8800 	strdne	r8, r8, [sp]
 800dfd0:	e9cd 7700 	strdeq	r7, r7, [sp]
 800dfd4:	4631      	mov	r1, r6
 800dfd6:	3401      	adds	r4, #1
 800dfd8:	f7ff fd74 	bl	800dac4 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800dfdc:	2c08      	cmp	r4, #8
 800dfde:	d1e7      	bne.n	800dfb0 <WS28xxMulti::Setup(unsigned int)+0x1e4>
 800dfe0:	b010      	add	sp, #64	; 0x40
 800dfe2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800dfe6:	bf00      	nop
 800dfe8:	07270e00 	streq	r0, [r7, -r0, lsl #28]!
 800dfec:	40010800 	andmi	r0, r1, r0, lsl #16
 800dff0:	40000400 	andmi	r0, r0, r0, lsl #8
 800dff4:	40000800 	andmi	r0, r0, r0, lsl #16
 800dff8:	e000e100 	and	lr, r0, r0, lsl #2
 800dffc:	40020000 	andmi	r0, r2, r0
 800e000:	080171cc 	stmdaeq	r1, {r2, r3, r6, r7, r8, ip, sp, lr}
 800e004:	40011014 	andmi	r1, r1, r4, lsl r0
 800e008:	2000ca30 	andcs	ip, r0, r0, lsr sl
 800e00c:	40011010 	andmi	r1, r1, r0, lsl r0

0800e010 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)>:
 800e010:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800e012:	4606      	mov	r6, r0
 800e014:	460f      	mov	r7, r1
 800e016:	4604      	mov	r4, r0
 800e018:	460d      	mov	r5, r1
 800e01a:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800e01c:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 800e01e:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800e022:	2300      	movs	r3, #0
 800e024:	e886 0007 	stmia.w	r6, {r0, r1, r2}
 800e028:	61e3      	str	r3, [r4, #28]
 800e02a:	4b20      	ldr	r3, [pc, #128]	; (800e0ac <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x9c>)
 800e02c:	4628      	mov	r0, r5
 800e02e:	a901      	add	r1, sp, #4
 800e030:	601c      	str	r4, [r3, #0]
 800e032:	f7ff f8b5 	bl	800d1a0 <PixelConfiguration::Validate(unsigned int&)>
 800e036:	6826      	ldr	r6, [r4, #0]
 800e038:	3e0b      	subs	r6, #11
 800e03a:	2e02      	cmp	r6, #2
 800e03c:	d80a      	bhi.n	800e054 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x44>
 800e03e:	686b      	ldr	r3, [r5, #4]
 800e040:	f5b3 7fff 	cmp.w	r3, #510	; 0x1fe
 800e044:	d906      	bls.n	800e054 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x44>
 800e046:	f44f 73ff 	mov.w	r3, #510	; 0x1fe
 800e04a:	4628      	mov	r0, r5
 800e04c:	606b      	str	r3, [r5, #4]
 800e04e:	a901      	add	r1, sp, #4
 800e050:	f7ff f8a6 	bl	800d1a0 <PixelConfiguration::Validate(unsigned int&)>
 800e054:	6863      	ldr	r3, [r4, #4]
 800e056:	9a01      	ldr	r2, [sp, #4]
 800e058:	2e02      	cmp	r6, #2
 800e05a:	fb03 f202 	mul.w	r2, r3, r2
 800e05e:	bf9b      	ittet	ls
 800e060:	3308      	addls	r3, #8
 800e062:	189b      	addls	r3, r3, r2
 800e064:	61e2      	strhi	r2, [r4, #28]
 800e066:	61e3      	strls	r3, [r4, #28]
 800e068:	69e3      	ldr	r3, [r4, #28]
 800e06a:	4e11      	ldr	r6, [pc, #68]	; (800e0b0 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0xa0>)
 800e06c:	00db      	lsls	r3, r3, #3
 800e06e:	f240 6004 	movw	r0, #1540	; 0x604
 800e072:	61e3      	str	r3, [r4, #28]
 800e074:	f004 ffc0 	bl	8012ff8 <rcu_periph_clock_enable>
 800e078:	f44f 537f 	mov.w	r3, #16320	; 0x3fc0
 800e07c:	2203      	movs	r2, #3
 800e07e:	2110      	movs	r1, #16
 800e080:	4630      	mov	r0, r6
 800e082:	f004 ff21 	bl	8012ec8 <gpio_init>
 800e086:	f44f 537f 	mov.w	r3, #16320	; 0x3fc0
 800e08a:	6173      	str	r3, [r6, #20]
 800e08c:	7d6b      	ldrb	r3, [r5, #21]
 800e08e:	b13b      	cbz	r3, 800e0a0 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x90>
 800e090:	4620      	mov	r0, r4
 800e092:	7c6a      	ldrb	r2, [r5, #17]
 800e094:	7c29      	ldrb	r1, [r5, #16]
 800e096:	f7ff fd93 	bl	800dbc0 <WS28xxMulti::Setup(unsigned char, unsigned char)>
 800e09a:	4620      	mov	r0, r4
 800e09c:	b003      	add	sp, #12
 800e09e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e0a0:	4620      	mov	r0, r4
 800e0a2:	68e9      	ldr	r1, [r5, #12]
 800e0a4:	f7ff fe92 	bl	800ddcc <WS28xxMulti::Setup(unsigned int)>
 800e0a8:	e7f7      	b.n	800e09a <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x8a>
 800e0aa:	bf00      	nop
 800e0ac:	2000ca2c 	andcs	ip, r0, ip, lsr #20
 800e0b0:	40011000 	andmi	r1, r1, r0

0800e0b4 <WS28xxMulti::Update()>:
 800e0b4:	2201      	movs	r2, #1
 800e0b6:	4b39      	ldr	r3, [pc, #228]	; (800e19c <WS28xxMulti::Update()+0xe8>)
 800e0b8:	b510      	push	{r4, lr}
 800e0ba:	701a      	strb	r2, [r3, #0]
 800e0bc:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800e0c0:	2100      	movs	r1, #0
 800e0c2:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
 800e0c6:	4c36      	ldr	r4, [pc, #216]	; (800e1a0 <WS28xxMulti::Update()+0xec>)
 800e0c8:	f022 0201 	bic.w	r2, r2, #1
 800e0cc:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
 800e0d0:	f8c3 1824 	str.w	r1, [r3, #2084]	; 0x824
 800e0d4:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 800e0d8:	f022 0201 	bic.w	r2, r2, #1
 800e0dc:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
 800e0e0:	f8c3 1424 	str.w	r1, [r3, #1060]	; 0x424
 800e0e4:	7d41      	ldrb	r1, [r0, #21]
 800e0e6:	4a2f      	ldr	r2, [pc, #188]	; (800e1a4 <WS28xxMulti::Update()+0xf0>)
 800e0e8:	f503 3300 	add.w	r3, r3, #131072	; 0x20000
 800e0ec:	2900      	cmp	r1, #0
 800e0ee:	d03e      	beq.n	800e16e <WS28xxMulti::Update()+0xba>
 800e0f0:	6ed9      	ldr	r1, [r3, #108]	; 0x6c
 800e0f2:	f021 0101 	bic.w	r1, r1, #1
 800e0f6:	66d9      	str	r1, [r3, #108]	; 0x6c
 800e0f8:	679a      	str	r2, [r3, #120]	; 0x78
 800e0fa:	8b81      	ldrh	r1, [r0, #28]
 800e0fc:	6719      	str	r1, [r3, #112]	; 0x70
 800e0fe:	6ed9      	ldr	r1, [r3, #108]	; 0x6c
 800e100:	f041 0101 	orr.w	r1, r1, #1
 800e104:	66d9      	str	r1, [r3, #108]	; 0x6c
 800e106:	69d9      	ldr	r1, [r3, #28]
 800e108:	f021 0101 	bic.w	r1, r1, #1
 800e10c:	61d9      	str	r1, [r3, #28]
 800e10e:	629c      	str	r4, [r3, #40]	; 0x28
 800e110:	8b81      	ldrh	r1, [r0, #28]
 800e112:	6219      	str	r1, [r3, #32]
 800e114:	69d9      	ldr	r1, [r3, #28]
 800e116:	f041 0101 	orr.w	r1, r1, #1
 800e11a:	61d9      	str	r1, [r3, #28]
 800e11c:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800e11e:	f021 0101 	bic.w	r1, r1, #1
 800e122:	6319      	str	r1, [r3, #48]	; 0x30
 800e124:	63da      	str	r2, [r3, #60]	; 0x3c
 800e126:	8b82      	ldrh	r2, [r0, #28]
 800e128:	f44f 7100 	mov.w	r1, #512	; 0x200
 800e12c:	635a      	str	r2, [r3, #52]	; 0x34
 800e12e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800e130:	481d      	ldr	r0, [pc, #116]	; (800e1a8 <WS28xxMulti::Update()+0xf4>)
 800e132:	f042 0201 	orr.w	r2, r2, #1
 800e136:	631a      	str	r2, [r3, #48]	; 0x30
 800e138:	f005 f9c5 	bl	80134c6 <timer_dma_enable>
 800e13c:	f44f 6100 	mov.w	r1, #2048	; 0x800
 800e140:	4819      	ldr	r0, [pc, #100]	; (800e1a8 <WS28xxMulti::Update()+0xf4>)
 800e142:	f005 f9c0 	bl	80134c6 <timer_dma_enable>
 800e146:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 800e14a:	4817      	ldr	r0, [pc, #92]	; (800e1a8 <WS28xxMulti::Update()+0xf4>)
 800e14c:	f005 f9bb 	bl	80134c6 <timer_dma_enable>
 800e150:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800e154:	f8d3 2800 	ldr.w	r2, [r3, #2048]	; 0x800
 800e158:	f042 0201 	orr.w	r2, r2, #1
 800e15c:	f8c3 2800 	str.w	r2, [r3, #2048]	; 0x800
 800e160:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 800e164:	f042 0201 	orr.w	r2, r2, #1
 800e168:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
 800e16c:	bd10      	pop	{r4, pc}
 800e16e:	69d9      	ldr	r1, [r3, #28]
 800e170:	f021 0101 	bic.w	r1, r1, #1
 800e174:	61d9      	str	r1, [r3, #28]
 800e176:	629a      	str	r2, [r3, #40]	; 0x28
 800e178:	8b82      	ldrh	r2, [r0, #28]
 800e17a:	621a      	str	r2, [r3, #32]
 800e17c:	69da      	ldr	r2, [r3, #28]
 800e17e:	f042 0201 	orr.w	r2, r2, #1
 800e182:	61da      	str	r2, [r3, #28]
 800e184:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800e186:	f022 0201 	bic.w	r2, r2, #1
 800e18a:	631a      	str	r2, [r3, #48]	; 0x30
 800e18c:	63dc      	str	r4, [r3, #60]	; 0x3c
 800e18e:	8b82      	ldrh	r2, [r0, #28]
 800e190:	635a      	str	r2, [r3, #52]	; 0x34
 800e192:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800e194:	f042 0201 	orr.w	r2, r2, #1
 800e198:	631a      	str	r2, [r3, #48]	; 0x30
 800e19a:	e7cf      	b.n	800e13c <WS28xxMulti::Update()+0x88>
 800e19c:	2000ca28 	andcs	ip, r0, r8, lsr #20
 800e1a0:	2000ca30 	andcs	ip, r0, r0, lsr sl
 800e1a4:	080171cc 	stmdaeq	r1, {r2, r3, r6, r7, r8, ip, sp, lr}
 800e1a8:	40000400 	andmi	r0, r0, r0, lsl #8

0800e1ac <WS28xxMulti::Blackout()>:
 800e1ac:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e1b0:	4605      	mov	r5, r0
 800e1b2:	4f2d      	ldr	r7, [pc, #180]	; (800e268 <WS28xxMulti::Blackout()+0xbc>)
 800e1b4:	f3bf 8f5f 	dmb	sy
 800e1b8:	783a      	ldrb	r2, [r7, #0]
 800e1ba:	f002 03ff 	and.w	r3, r2, #255	; 0xff
 800e1be:	2a00      	cmp	r2, #0
 800e1c0:	d1f8      	bne.n	800e1b4 <WS28xxMulti::Blackout()+0x8>
 800e1c2:	7d6c      	ldrb	r4, [r5, #21]
 800e1c4:	b194      	cbz	r4, 800e1ec <WS28xxMulti::Blackout()+0x40>
 800e1c6:	4a29      	ldr	r2, [pc, #164]	; (800e26c <WS28xxMulti::Blackout()+0xc0>)
 800e1c8:	4929      	ldr	r1, [pc, #164]	; (800e270 <WS28xxMulti::Blackout()+0xc4>)
 800e1ca:	3301      	adds	r3, #1
 800e1cc:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800e1d0:	f842 1b04 	str.w	r1, [r2], #4
 800e1d4:	d1f9      	bne.n	800e1ca <WS28xxMulti::Blackout()+0x1e>
 800e1d6:	4628      	mov	r0, r5
 800e1d8:	f7ff ff6c 	bl	800e0b4 <WS28xxMulti::Update()>
 800e1dc:	f3bf 8f5f 	dmb	sy
 800e1e0:	783b      	ldrb	r3, [r7, #0]
 800e1e2:	2b00      	cmp	r3, #0
 800e1e4:	d1fa      	bne.n	800e1dc <WS28xxMulti::Blackout()+0x30>
 800e1e6:	b003      	add	sp, #12
 800e1e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e1ec:	682b      	ldr	r3, [r5, #0]
 800e1ee:	f1a3 080b 	sub.w	r8, r3, #11
 800e1f2:	f1b8 0f02 	cmp.w	r8, #2
 800e1f6:	d908      	bls.n	800e20a <WS28xxMulti::Blackout()+0x5e>
 800e1f8:	4622      	mov	r2, r4
 800e1fa:	4b1c      	ldr	r3, [pc, #112]	; (800e26c <WS28xxMulti::Blackout()+0xc0>)
 800e1fc:	3401      	adds	r4, #1
 800e1fe:	f5b4 5f00 	cmp.w	r4, #8192	; 0x2000
 800e202:	f843 2b04 	str.w	r2, [r3], #4
 800e206:	d1f9      	bne.n	800e1fc <WS28xxMulti::Blackout()+0x50>
 800e208:	e7e5      	b.n	800e1d6 <WS28xxMulti::Blackout()+0x2a>
 800e20a:	4626      	mov	r6, r4
 800e20c:	f8d5 a004 	ldr.w	sl, [r5, #4]
 800e210:	f10a 0b01 	add.w	fp, sl, #1
 800e214:	2300      	movs	r3, #0
 800e216:	4620      	mov	r0, r4
 800e218:	461a      	mov	r2, r3
 800e21a:	4619      	mov	r1, r3
 800e21c:	e9cd 6600 	strd	r6, r6, [sp]
 800e220:	f7ff fc50 	bl	800dac4 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800e224:	f04f 0901 	mov.w	r9, #1
 800e228:	45ca      	cmp	sl, r9
 800e22a:	d212      	bcs.n	800e252 <WS28xxMulti::Blackout()+0xa6>
 800e22c:	f1b8 0f02 	cmp.w	r8, #2
 800e230:	bf14      	ite	ne
 800e232:	23ff      	movne	r3, #255	; 0xff
 800e234:	2300      	moveq	r3, #0
 800e236:	4620      	mov	r0, r4
 800e238:	bf14      	ite	ne
 800e23a:	e9cd 3300 	strdne	r3, r3, [sp]
 800e23e:	e9cd 6600 	strdeq	r6, r6, [sp]
 800e242:	461a      	mov	r2, r3
 800e244:	4659      	mov	r1, fp
 800e246:	3401      	adds	r4, #1
 800e248:	f7ff fc3c 	bl	800dac4 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800e24c:	2c08      	cmp	r4, #8
 800e24e:	d1e1      	bne.n	800e214 <WS28xxMulti::Blackout()+0x68>
 800e250:	e7c1      	b.n	800e1d6 <WS28xxMulti::Blackout()+0x2a>
 800e252:	4649      	mov	r1, r9
 800e254:	2300      	movs	r3, #0
 800e256:	22e0      	movs	r2, #224	; 0xe0
 800e258:	4620      	mov	r0, r4
 800e25a:	e9cd 6600 	strd	r6, r6, [sp]
 800e25e:	f7ff fc31 	bl	800dac4 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800e262:	f109 0901 	add.w	r9, r9, #1
 800e266:	e7df      	b.n	800e228 <WS28xxMulti::Blackout()+0x7c>
 800e268:	2000ca28 	andcs	ip, r0, r8, lsr #20
 800e26c:	2000ca30 	andcs	ip, r0, r0, lsr sl
 800e270:	3fc03fc0 	svccc	0x00c03fc0

0800e274 <WS28xxMulti::FullOn()>:
 800e274:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e278:	4605      	mov	r5, r0
 800e27a:	4f2c      	ldr	r7, [pc, #176]	; (800e32c <WS28xxMulti::FullOn()+0xb8>)
 800e27c:	f3bf 8f5f 	dmb	sy
 800e280:	783a      	ldrb	r2, [r7, #0]
 800e282:	f002 03ff 	and.w	r3, r2, #255	; 0xff
 800e286:	2a00      	cmp	r2, #0
 800e288:	d1f8      	bne.n	800e27c <WS28xxMulti::FullOn()+0x8>
 800e28a:	7d6c      	ldrb	r4, [r5, #21]
 800e28c:	b194      	cbz	r4, 800e2b4 <WS28xxMulti::FullOn()+0x40>
 800e28e:	4619      	mov	r1, r3
 800e290:	4a27      	ldr	r2, [pc, #156]	; (800e330 <WS28xxMulti::FullOn()+0xbc>)
 800e292:	3301      	adds	r3, #1
 800e294:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800e298:	f842 1b04 	str.w	r1, [r2], #4
 800e29c:	d1f9      	bne.n	800e292 <WS28xxMulti::FullOn()+0x1e>
 800e29e:	4628      	mov	r0, r5
 800e2a0:	f7ff ff08 	bl	800e0b4 <WS28xxMulti::Update()>
 800e2a4:	f3bf 8f5f 	dmb	sy
 800e2a8:	783b      	ldrb	r3, [r7, #0]
 800e2aa:	2b00      	cmp	r3, #0
 800e2ac:	d1fa      	bne.n	800e2a4 <WS28xxMulti::FullOn()+0x30>
 800e2ae:	b003      	add	sp, #12
 800e2b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e2b4:	682e      	ldr	r6, [r5, #0]
 800e2b6:	3e0b      	subs	r6, #11
 800e2b8:	2e02      	cmp	r6, #2
 800e2ba:	d908      	bls.n	800e2ce <WS28xxMulti::FullOn()+0x5a>
 800e2bc:	22ff      	movs	r2, #255	; 0xff
 800e2be:	4b1c      	ldr	r3, [pc, #112]	; (800e330 <WS28xxMulti::FullOn()+0xbc>)
 800e2c0:	3401      	adds	r4, #1
 800e2c2:	f5b4 5f00 	cmp.w	r4, #8192	; 0x2000
 800e2c6:	f843 2b04 	str.w	r2, [r3], #4
 800e2ca:	d1f9      	bne.n	800e2c0 <WS28xxMulti::FullOn()+0x4c>
 800e2cc:	e7e7      	b.n	800e29e <WS28xxMulti::FullOn()+0x2a>
 800e2ce:	46a0      	mov	r8, r4
 800e2d0:	f04f 09ff 	mov.w	r9, #255	; 0xff
 800e2d4:	f8d5 a004 	ldr.w	sl, [r5, #4]
 800e2d8:	2300      	movs	r3, #0
 800e2da:	4620      	mov	r0, r4
 800e2dc:	461a      	mov	r2, r3
 800e2de:	4619      	mov	r1, r3
 800e2e0:	e9cd 8800 	strd	r8, r8, [sp]
 800e2e4:	f7ff fbee 	bl	800dac4 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800e2e8:	f04f 0b01 	mov.w	fp, #1
 800e2ec:	45da      	cmp	sl, fp
 800e2ee:	d212      	bcs.n	800e316 <WS28xxMulti::FullOn()+0xa2>
 800e2f0:	2e02      	cmp	r6, #2
 800e2f2:	bf14      	ite	ne
 800e2f4:	23ff      	movne	r3, #255	; 0xff
 800e2f6:	2300      	moveq	r3, #0
 800e2f8:	4620      	mov	r0, r4
 800e2fa:	bf14      	ite	ne
 800e2fc:	e9cd 9900 	strdne	r9, r9, [sp]
 800e300:	e9cd 8800 	strdeq	r8, r8, [sp]
 800e304:	461a      	mov	r2, r3
 800e306:	f10a 0101 	add.w	r1, sl, #1
 800e30a:	3401      	adds	r4, #1
 800e30c:	f7ff fbda 	bl	800dac4 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800e310:	2c08      	cmp	r4, #8
 800e312:	d1e1      	bne.n	800e2d8 <WS28xxMulti::FullOn()+0x64>
 800e314:	e7c3      	b.n	800e29e <WS28xxMulti::FullOn()+0x2a>
 800e316:	4659      	mov	r1, fp
 800e318:	23ff      	movs	r3, #255	; 0xff
 800e31a:	22e0      	movs	r2, #224	; 0xe0
 800e31c:	4620      	mov	r0, r4
 800e31e:	e9cd 9900 	strd	r9, r9, [sp]
 800e322:	f7ff fbcf 	bl	800dac4 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800e326:	f10b 0b01 	add.w	fp, fp, #1
 800e32a:	e7df      	b.n	800e2ec <WS28xxMulti::FullOn()+0x78>
 800e32c:	2000ca28 	andcs	ip, r0, r8, lsr #20
 800e330:	2000ca30 	andcs	ip, r0, r0, lsr sl

0800e334 <WS28xxMulti::IsUpdating()>:
 800e334:	f3bf 8f5f 	dmb	sy
 800e338:	4b01      	ldr	r3, [pc, #4]	; (800e340 <WS28xxMulti::IsUpdating()+0xc>)
 800e33a:	7818      	ldrb	r0, [r3, #0]
 800e33c:	4770      	bx	lr
 800e33e:	bf00      	nop
 800e340:	2000ca28 	andcs	ip, r0, r8, lsr #20

0800e344 <WS28xxMulti::SetColourRTZ(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>:
 800e344:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e346:	f04f 0c80 	mov.w	ip, #128	; 0x80
 800e34a:	2400      	movs	r4, #0
 800e34c:	2501      	movs	r5, #1
 800e34e:	4f1a      	ldr	r7, [pc, #104]	; (800e3b8 <WS28xxMulti::SetColourRTZ(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x74>)
 800e350:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800e354:	4819      	ldr	r0, [pc, #100]	; (800e3bc <WS28xxMulti::SetColourRTZ(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x78>)
 800e356:	eb07 1702 	add.w	r7, r7, r2, lsl #4
 800e35a:	3106      	adds	r1, #6
 800e35c:	b2c9      	uxtb	r1, r1
 800e35e:	4438      	add	r0, r7
 800e360:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
 800e364:	f101 6108 	add.w	r1, r1, #142606336	; 0x8800000
 800e368:	f501 71c0 	add.w	r1, r1, #384	; 0x180
 800e36c:	eb01 01c7 	add.w	r1, r1, r7, lsl #3
 800e370:	f89d e014 	ldrb.w	lr, [sp, #20]
 800e374:	f89d 6018 	ldrb.w	r6, [sp, #24]
 800e378:	0092      	lsls	r2, r2, #2
 800e37a:	0089      	lsls	r1, r1, #2
 800e37c:	ea13 0f0c 	tst.w	r3, ip
 800e380:	f5a2 6080 	sub.w	r0, r2, #1024	; 0x400
 800e384:	bf16      	itet	ne
 800e386:	f5a2 6080 	subne.w	r0, r2, #1024	; 0x400
 800e38a:	6005      	streq	r5, [r0, #0]
 800e38c:	6004      	strne	r4, [r0, #0]
 800e38e:	ea1e 0f0c 	tst.w	lr, ip
 800e392:	f5a2 7000 	sub.w	r0, r2, #512	; 0x200
 800e396:	bf16      	itet	ne
 800e398:	f5a2 7000 	subne.w	r0, r2, #512	; 0x200
 800e39c:	6005      	streq	r5, [r0, #0]
 800e39e:	6004      	strne	r4, [r0, #0]
 800e3a0:	ea16 0f0c 	tst.w	r6, ip
 800e3a4:	bf0c      	ite	eq
 800e3a6:	6015      	streq	r5, [r2, #0]
 800e3a8:	6014      	strne	r4, [r2, #0]
 800e3aa:	3240      	adds	r2, #64	; 0x40
 800e3ac:	4291      	cmp	r1, r2
 800e3ae:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 800e3b2:	d1e3      	bne.n	800e37c <WS28xxMulti::SetColourRTZ(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x38>
 800e3b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e3b6:	bf00      	nop
 800e3b8:	2000ca30 	andcs	ip, r0, r0, lsr sl
 800e3bc:	e1100020 	tst	r0, r0, lsr #32

0800e3c0 <WS28xxMulti::SetColourWS2801(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>:
 800e3c0:	b570      	push	{r4, r5, r6, lr}
 800e3c2:	2080      	movs	r0, #128	; 0x80
 800e3c4:	2401      	movs	r4, #1
 800e3c6:	4e1a      	ldr	r6, [pc, #104]	; (800e430 <WS28xxMulti::SetColourWS2801(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x70>)
 800e3c8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800e3cc:	4d19      	ldr	r5, [pc, #100]	; (800e434 <WS28xxMulti::SetColourWS2801(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x74>)
 800e3ce:	eb06 1602 	add.w	r6, r6, r2, lsl #4
 800e3d2:	3106      	adds	r1, #6
 800e3d4:	b2c9      	uxtb	r1, r1
 800e3d6:	4435      	add	r5, r6
 800e3d8:	eb01 02c5 	add.w	r2, r1, r5, lsl #3
 800e3dc:	f101 6108 	add.w	r1, r1, #142606336	; 0x8800000
 800e3e0:	f501 71c0 	add.w	r1, r1, #384	; 0x180
 800e3e4:	eb01 01c6 	add.w	r1, r1, r6, lsl #3
 800e3e8:	f89d c010 	ldrb.w	ip, [sp, #16]
 800e3ec:	f89d e014 	ldrb.w	lr, [sp, #20]
 800e3f0:	0092      	lsls	r2, r2, #2
 800e3f2:	0089      	lsls	r1, r1, #2
 800e3f4:	ea13 0500 	ands.w	r5, r3, r0
 800e3f8:	f5a2 6680 	sub.w	r6, r2, #1024	; 0x400
 800e3fc:	bf0a      	itet	eq
 800e3fe:	f5a2 6680 	subeq.w	r6, r2, #1024	; 0x400
 800e402:	6034      	strne	r4, [r6, #0]
 800e404:	6035      	streq	r5, [r6, #0]
 800e406:	ea1c 0500 	ands.w	r5, ip, r0
 800e40a:	f5a2 7600 	sub.w	r6, r2, #512	; 0x200
 800e40e:	bf0a      	itet	eq
 800e410:	f5a2 7600 	subeq.w	r6, r2, #512	; 0x200
 800e414:	6034      	strne	r4, [r6, #0]
 800e416:	6035      	streq	r5, [r6, #0]
 800e418:	ea1e 0500 	ands.w	r5, lr, r0
 800e41c:	bf14      	ite	ne
 800e41e:	6014      	strne	r4, [r2, #0]
 800e420:	6015      	streq	r5, [r2, #0]
 800e422:	3240      	adds	r2, #64	; 0x40
 800e424:	4291      	cmp	r1, r2
 800e426:	ea4f 0050 	mov.w	r0, r0, lsr #1
 800e42a:	d1e3      	bne.n	800e3f4 <WS28xxMulti::SetColourWS2801(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x34>
 800e42c:	bd70      	pop	{r4, r5, r6, pc}
 800e42e:	bf00      	nop
 800e430:	2000ca30 	andcs	ip, r0, r0, lsr sl
 800e434:	e1100020 	tst	r0, r0, lsr #32

0800e438 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>:
 800e438:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e43a:	6984      	ldr	r4, [r0, #24]
 800e43c:	f89d 5014 	ldrb.w	r5, [sp, #20]
 800e440:	5ce6      	ldrb	r6, [r4, r3]
 800e442:	f89d 7018 	ldrb.w	r7, [sp, #24]
 800e446:	7d43      	ldrb	r3, [r0, #21]
 800e448:	5d65      	ldrb	r5, [r4, r5]
 800e44a:	4684      	mov	ip, r0
 800e44c:	4696      	mov	lr, r2
 800e44e:	5de4      	ldrb	r4, [r4, r7]
 800e450:	bb23      	cbnz	r3, 800e49c <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x64>
 800e452:	6803      	ldr	r3, [r0, #0]
 800e454:	b1d3      	cbz	r3, 800e48c <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x54>
 800e456:	3b0b      	subs	r3, #11
 800e458:	2b01      	cmp	r3, #1
 800e45a:	d94b      	bls.n	800e4f4 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xbc>
 800e45c:	4608      	mov	r0, r1
 800e45e:	1c51      	adds	r1, r2, #1
 800e460:	ea6f 0294 	mvn.w	r2, r4, lsr #2
 800e464:	9505      	str	r5, [sp, #20]
 800e466:	ea6f 1515 	mvn.w	r5, r5, lsr #4
 800e46a:	9606      	str	r6, [sp, #24]
 800e46c:	f002 0230 	and.w	r2, r2, #48	; 0x30
 800e470:	f086 06c0 	eor.w	r6, r6, #192	; 0xc0
 800e474:	f005 050c 	and.w	r5, r5, #12
 800e478:	ea42 1296 	orr.w	r2, r2, r6, lsr #6
 800e47c:	432a      	orrs	r2, r5
 800e47e:	4623      	mov	r3, r4
 800e480:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800e484:	f042 02c0 	orr.w	r2, r2, #192	; 0xc0
 800e488:	f7ff bb1c 	b.w	800dac4 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800e48c:	6883      	ldr	r3, [r0, #8]
 800e48e:	2b05      	cmp	r3, #5
 800e490:	d85a      	bhi.n	800e548 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
 800e492:	e8df f003 	tbb	[pc, r3]
 800e496:	534d4744 	movtpl	r4, #55108	; 0xd744
 800e49a:	68833b56 	stmvs	r3, {r1, r2, r4, r6, r8, r9, fp, ip, sp}
 800e49e:	2b05      	cmp	r3, #5
 800e4a0:	d825      	bhi.n	800e4ee <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xb6>
 800e4a2:	e8df f003 	tbb	[pc, r3]
 800e4a6:	0c15181b 	ldceq	8, cr1, [r5], {27}
 800e4aa:	46232403 	strtmi	r2, [r3], -r3, lsl #8
 800e4ae:	9506      	str	r5, [sp, #24]
 800e4b0:	4672      	mov	r2, lr
 800e4b2:	9605      	str	r6, [sp, #20]
 800e4b4:	4660      	mov	r0, ip
 800e4b6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800e4ba:	f7ff bf43 	b.w	800e344 <WS28xxMulti::SetColourRTZ(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 800e4be:	462b      	mov	r3, r5
 800e4c0:	9606      	str	r6, [sp, #24]
 800e4c2:	4672      	mov	r2, lr
 800e4c4:	9405      	str	r4, [sp, #20]
 800e4c6:	4660      	mov	r0, ip
 800e4c8:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800e4cc:	f7ff bf3a 	b.w	800e344 <WS28xxMulti::SetColourRTZ(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 800e4d0:	462b      	mov	r3, r5
 800e4d2:	9406      	str	r4, [sp, #24]
 800e4d4:	e7ec      	b.n	800e4b0 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x78>
 800e4d6:	4633      	mov	r3, r6
 800e4d8:	9506      	str	r5, [sp, #24]
 800e4da:	e7f2      	b.n	800e4c2 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x8a>
 800e4dc:	4633      	mov	r3, r6
 800e4de:	9406      	str	r4, [sp, #24]
 800e4e0:	4672      	mov	r2, lr
 800e4e2:	9505      	str	r5, [sp, #20]
 800e4e4:	4660      	mov	r0, ip
 800e4e6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800e4ea:	f7ff bf2b 	b.w	800e344 <WS28xxMulti::SetColourRTZ(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 800e4ee:	4623      	mov	r3, r4
 800e4f0:	9606      	str	r6, [sp, #24]
 800e4f2:	e7f5      	b.n	800e4e0 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xa8>
 800e4f4:	9606      	str	r6, [sp, #24]
 800e4f6:	4623      	mov	r3, r4
 800e4f8:	4608      	mov	r0, r1
 800e4fa:	f89c 2012 	ldrb.w	r2, [ip, #18]
 800e4fe:	f10e 0101 	add.w	r1, lr, #1
 800e502:	9505      	str	r5, [sp, #20]
 800e504:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800e508:	f7ff badc 	b.w	800dac4 <WS28xxMulti::SetPixel4Bytes(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char) [clone .constprop.0]>
 800e50c:	4623      	mov	r3, r4
 800e50e:	9606      	str	r6, [sp, #24]
 800e510:	4672      	mov	r2, lr
 800e512:	4660      	mov	r0, ip
 800e514:	9505      	str	r5, [sp, #20]
 800e516:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800e51a:	f7ff bf51 	b.w	800e3c0 <WS28xxMulti::SetColourWS2801(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 800e51e:	4633      	mov	r3, r6
 800e520:	9406      	str	r4, [sp, #24]
 800e522:	e7f5      	b.n	800e510 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xd8>
 800e524:	4633      	mov	r3, r6
 800e526:	9506      	str	r5, [sp, #24]
 800e528:	4672      	mov	r2, lr
 800e52a:	4660      	mov	r0, ip
 800e52c:	9405      	str	r4, [sp, #20]
 800e52e:	e7f2      	b.n	800e516 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xde>
 800e530:	462b      	mov	r3, r5
 800e532:	9406      	str	r4, [sp, #24]
 800e534:	4672      	mov	r2, lr
 800e536:	4660      	mov	r0, ip
 800e538:	9605      	str	r6, [sp, #20]
 800e53a:	e7ec      	b.n	800e516 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xde>
 800e53c:	462b      	mov	r3, r5
 800e53e:	9606      	str	r6, [sp, #24]
 800e540:	e7f2      	b.n	800e528 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xf0>
 800e542:	4623      	mov	r3, r4
 800e544:	9506      	str	r5, [sp, #24]
 800e546:	e7f5      	b.n	800e534 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0xfc>

0800e548 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>:
 800e548:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e54a:	f04f 0c80 	mov.w	ip, #128	; 0x80
 800e54e:	2400      	movs	r4, #0
 800e550:	2501      	movs	r5, #1
 800e552:	6986      	ldr	r6, [r0, #24]
 800e554:	4f1e      	ldr	r7, [pc, #120]	; (800e5d0 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)+0x88>)
 800e556:	f89d e014 	ldrb.w	lr, [sp, #20]
 800e55a:	eb07 1782 	add.w	r7, r7, r2, lsl #6
 800e55e:	1d8a      	adds	r2, r1, #6
 800e560:	5cf1      	ldrb	r1, [r6, r3]
 800e562:	4b1c      	ldr	r3, [pc, #112]	; (800e5d4 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)+0x8c>)
 800e564:	b2d2      	uxtb	r2, r2
 800e566:	443b      	add	r3, r7
 800e568:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800e56c:	f102 6208 	add.w	r2, r2, #142606336	; 0x8800000
 800e570:	f502 7200 	add.w	r2, r2, #512	; 0x200
 800e574:	eb02 02c7 	add.w	r2, r2, r7, lsl #3
 800e578:	f89d 7018 	ldrb.w	r7, [sp, #24]
 800e57c:	f816 000e 	ldrb.w	r0, [r6, lr]
 800e580:	f816 e007 	ldrb.w	lr, [r6, r7]
 800e584:	f89d 701c 	ldrb.w	r7, [sp, #28]
 800e588:	009b      	lsls	r3, r3, #2
 800e58a:	5df6      	ldrb	r6, [r6, r7]
 800e58c:	0092      	lsls	r2, r2, #2
 800e58e:	f5a3 67c0 	sub.w	r7, r3, #1536	; 0x600
 800e592:	ea10 0f0c 	tst.w	r0, ip
 800e596:	bf0c      	ite	eq
 800e598:	603d      	streq	r5, [r7, #0]
 800e59a:	603c      	strne	r4, [r7, #0]
 800e59c:	f5a3 6780 	sub.w	r7, r3, #1024	; 0x400
 800e5a0:	ea11 0f0c 	tst.w	r1, ip
 800e5a4:	bf0c      	ite	eq
 800e5a6:	603d      	streq	r5, [r7, #0]
 800e5a8:	603c      	strne	r4, [r7, #0]
 800e5aa:	ea1e 0f0c 	tst.w	lr, ip
 800e5ae:	f5a3 7700 	sub.w	r7, r3, #512	; 0x200
 800e5b2:	bf0c      	ite	eq
 800e5b4:	603d      	streq	r5, [r7, #0]
 800e5b6:	603c      	strne	r4, [r7, #0]
 800e5b8:	ea16 0f0c 	tst.w	r6, ip
 800e5bc:	bf0c      	ite	eq
 800e5be:	601d      	streq	r5, [r3, #0]
 800e5c0:	601c      	strne	r4, [r3, #0]
 800e5c2:	3340      	adds	r3, #64	; 0x40
 800e5c4:	429a      	cmp	r2, r3
 800e5c6:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 800e5ca:	d1e0      	bne.n	800e58e <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)+0x46>
 800e5cc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e5ce:	bf00      	nop
 800e5d0:	2000ca30 	andcs	ip, r0, r0, lsr sl
 800e5d4:	e1100030 	tst	r0, r0, lsr r0

0800e5d8 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>:
 800e5d8:	2300      	movs	r3, #0
 800e5da:	2020      	movs	r0, #32
 800e5dc:	b510      	push	{r4, lr}
 800e5de:	4a04      	ldr	r2, [pc, #16]	; (800e5f0 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x18>)
 800e5e0:	428b      	cmp	r3, r1
 800e5e2:	d100      	bne.n	800e5e6 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0xe>
 800e5e4:	bd10      	pop	{r4, pc}
 800e5e6:	f852 4b04 	ldr.w	r4, [r2], #4
 800e5ea:	3301      	adds	r3, #1
 800e5ec:	4420      	add	r0, r4
 800e5ee:	e7f7      	b.n	800e5e0 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x8>
 800e5f0:	080171d0 	stmdaeq	r1, {r4, r6, r7, r8, ip, sp, lr}

0800e5f4 <SpiFlashStore::Init()>:
 800e5f4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e5f8:	f8df 8114 	ldr.w	r8, [pc, #276]	; 800e710 <SpiFlashStore::Init()+0x11c>
 800e5fc:	4607      	mov	r7, r0
 800e5fe:	b085      	sub	sp, #20
 800e600:	f8d8 0000 	ldr.w	r0, [r8]
 800e604:	f000 fbf6 	bl	800edf4 <FlashRom::GetSectorSize() const>
 800e608:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
 800e60c:	4605      	mov	r5, r0
 800e60e:	d17d      	bne.n	800e70c <SpiFlashStore::Init()+0x118>
 800e610:	f8d8 0000 	ldr.w	r0, [r8]
 800e614:	f000 fbe6 	bl	800ede4 <FlashRom::GetSize() const>
 800e618:	4b3e      	ldr	r3, [pc, #248]	; (800e714 <SpiFlashStore::Init()+0x120>)
 800e61a:	f5a0 5180 	sub.w	r1, r0, #4096	; 0x1000
 800e61e:	f3c1 060b 	ubfx	r6, r1, #0, #12
 800e622:	6019      	str	r1, [r3, #0]
 800e624:	2e00      	cmp	r6, #0
 800e626:	d171      	bne.n	800e70c <SpiFlashStore::Init()+0x118>
 800e628:	4c3b      	ldr	r4, [pc, #236]	; (800e718 <SpiFlashStore::Init()+0x124>)
 800e62a:	ab03      	add	r3, sp, #12
 800e62c:	9300      	str	r3, [sp, #0]
 800e62e:	462a      	mov	r2, r5
 800e630:	4623      	mov	r3, r4
 800e632:	f8d8 0000 	ldr.w	r0, [r8]
 800e636:	f000 fbe0 	bl	800edfa <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)>
 800e63a:	7823      	ldrb	r3, [r4, #0]
 800e63c:	2b41      	cmp	r3, #65	; 0x41
 800e63e:	bf1c      	itt	ne
 800e640:	2341      	movne	r3, #65	; 0x41
 800e642:	7023      	strbne	r3, [r4, #0]
 800e644:	7863      	ldrb	r3, [r4, #1]
 800e646:	bf14      	ite	ne
 800e648:	4635      	movne	r5, r6
 800e64a:	2501      	moveq	r5, #1
 800e64c:	2b76      	cmp	r3, #118	; 0x76
 800e64e:	bf1c      	itt	ne
 800e650:	2376      	movne	r3, #118	; 0x76
 800e652:	7063      	strbne	r3, [r4, #1]
 800e654:	78a3      	ldrb	r3, [r4, #2]
 800e656:	bf18      	it	ne
 800e658:	2500      	movne	r5, #0
 800e65a:	2b56      	cmp	r3, #86	; 0x56
 800e65c:	bf1c      	itt	ne
 800e65e:	2356      	movne	r3, #86	; 0x56
 800e660:	70a3      	strbne	r3, [r4, #2]
 800e662:	78e3      	ldrb	r3, [r4, #3]
 800e664:	bf18      	it	ne
 800e666:	2500      	movne	r5, #0
 800e668:	2b10      	cmp	r3, #16
 800e66a:	d022      	beq.n	800e6b2 <SpiFlashStore::Init()+0xbe>
 800e66c:	2310      	movs	r3, #16
 800e66e:	70e3      	strb	r3, [r4, #3]
 800e670:	2201      	movs	r2, #1
 800e672:	2500      	movs	r5, #0
 800e674:	f04f 09ff 	mov.w	r9, #255	; 0xff
 800e678:	4b28      	ldr	r3, [pc, #160]	; (800e71c <SpiFlashStore::Init()+0x128>)
 800e67a:	f8df 80a4 	ldr.w	r8, [pc, #164]	; 800e720 <SpiFlashStore::Init()+0x12c>
 800e67e:	701a      	strb	r2, [r3, #0]
 800e680:	4631      	mov	r1, r6
 800e682:	4638      	mov	r0, r7
 800e684:	f7ff ffa8 	bl	800e5d8 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800e688:	1823      	adds	r3, r4, r0
 800e68a:	5425      	strb	r5, [r4, r0]
 800e68c:	705d      	strb	r5, [r3, #1]
 800e68e:	709d      	strb	r5, [r3, #2]
 800e690:	70dd      	strb	r5, [r3, #3]
 800e692:	f858 3b04 	ldr.w	r3, [r8], #4
 800e696:	1d02      	adds	r2, r0, #4
 800e698:	4403      	add	r3, r0
 800e69a:	429a      	cmp	r2, r3
 800e69c:	d332      	bcc.n	800e704 <SpiFlashStore::Init()+0x110>
 800e69e:	3601      	adds	r6, #1
 800e6a0:	2e1c      	cmp	r6, #28
 800e6a2:	d1ed      	bne.n	800e680 <SpiFlashStore::Init()+0x8c>
 800e6a4:	2501      	movs	r5, #1
 800e6a6:	4b1f      	ldr	r3, [pc, #124]	; (800e724 <SpiFlashStore::Init()+0x130>)
 800e6a8:	601d      	str	r5, [r3, #0]
 800e6aa:	4628      	mov	r0, r5
 800e6ac:	b005      	add	sp, #20
 800e6ae:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e6b2:	2d00      	cmp	r5, #0
 800e6b4:	d0dc      	beq.n	800e670 <SpiFlashStore::Init()+0x7c>
 800e6b6:	f04f 0900 	mov.w	r9, #0
 800e6ba:	46c8      	mov	r8, r9
 800e6bc:	4631      	mov	r1, r6
 800e6be:	4638      	mov	r0, r7
 800e6c0:	f7ff ff8a 	bl	800e5d8 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800e6c4:	5c23      	ldrb	r3, [r4, r0]
 800e6c6:	2bff      	cmp	r3, #255	; 0xff
 800e6c8:	d112      	bne.n	800e6f0 <SpiFlashStore::Init()+0xfc>
 800e6ca:	1823      	adds	r3, r4, r0
 800e6cc:	785a      	ldrb	r2, [r3, #1]
 800e6ce:	2aff      	cmp	r2, #255	; 0xff
 800e6d0:	d10e      	bne.n	800e6f0 <SpiFlashStore::Init()+0xfc>
 800e6d2:	789a      	ldrb	r2, [r3, #2]
 800e6d4:	2aff      	cmp	r2, #255	; 0xff
 800e6d6:	d10b      	bne.n	800e6f0 <SpiFlashStore::Init()+0xfc>
 800e6d8:	78da      	ldrb	r2, [r3, #3]
 800e6da:	2aff      	cmp	r2, #255	; 0xff
 800e6dc:	d108      	bne.n	800e6f0 <SpiFlashStore::Init()+0xfc>
 800e6de:	46a9      	mov	r9, r5
 800e6e0:	f804 8000 	strb.w	r8, [r4, r0]
 800e6e4:	f883 8001 	strb.w	r8, [r3, #1]
 800e6e8:	f883 8002 	strb.w	r8, [r3, #2]
 800e6ec:	f883 8003 	strb.w	r8, [r3, #3]
 800e6f0:	3601      	adds	r6, #1
 800e6f2:	2e1c      	cmp	r6, #28
 800e6f4:	d1e2      	bne.n	800e6bc <SpiFlashStore::Init()+0xc8>
 800e6f6:	f1b9 0f00 	cmp.w	r9, #0
 800e6fa:	d0d6      	beq.n	800e6aa <SpiFlashStore::Init()+0xb6>
 800e6fc:	2201      	movs	r2, #1
 800e6fe:	4b09      	ldr	r3, [pc, #36]	; (800e724 <SpiFlashStore::Init()+0x130>)
 800e700:	601a      	str	r2, [r3, #0]
 800e702:	e7d2      	b.n	800e6aa <SpiFlashStore::Init()+0xb6>
 800e704:	f804 9002 	strb.w	r9, [r4, r2]
 800e708:	3201      	adds	r2, #1
 800e70a:	e7c6      	b.n	800e69a <SpiFlashStore::Init()+0xa6>
 800e70c:	2500      	movs	r5, #0
 800e70e:	e7cc      	b.n	800e6aa <SpiFlashStore::Init()+0xb6>
 800e710:	20015a60 	andcs	r5, r1, r0, ror #20
 800e714:	20015a34 	andcs	r5, r1, r4, lsr sl
 800e718:	20014a34 	andcs	r4, r1, r4, lsr sl
 800e71c:	20015a48 	andcs	r5, r1, r8, asr #20
 800e720:	080171d0 	stmdaeq	r1, {r4, r6, r7, r8, ip, sp, lr}
 800e724:	20015a40 	andcs	r5, r1, r0, asr #20

0800e728 <SpiFlashStore::SpiFlashStore()>:
 800e728:	b538      	push	{r3, r4, r5, lr}
 800e72a:	4b0d      	ldr	r3, [pc, #52]	; (800e760 <SpiFlashStore::SpiFlashStore()+0x38>)
 800e72c:	4604      	mov	r4, r0
 800e72e:	6018      	str	r0, [r3, #0]
 800e730:	4b0c      	ldr	r3, [pc, #48]	; (800e764 <SpiFlashStore::SpiFlashStore()+0x3c>)
 800e732:	4d0d      	ldr	r5, [pc, #52]	; (800e768 <SpiFlashStore::SpiFlashStore()+0x40>)
 800e734:	681b      	ldr	r3, [r3, #0]
 800e736:	781b      	ldrb	r3, [r3, #0]
 800e738:	b113      	cbz	r3, 800e740 <SpiFlashStore::SpiFlashStore()+0x18>
 800e73a:	f7ff ff5b 	bl	800e5f4 <SpiFlashStore::Init()>
 800e73e:	7028      	strb	r0, [r5, #0]
 800e740:	782b      	ldrb	r3, [r5, #0]
 800e742:	b153      	cbz	r3, 800e75a <SpiFlashStore::SpiFlashStore()+0x32>
 800e744:	2320      	movs	r3, #32
 800e746:	2200      	movs	r2, #0
 800e748:	4908      	ldr	r1, [pc, #32]	; (800e76c <SpiFlashStore::SpiFlashStore()+0x44>)
 800e74a:	f851 0b04 	ldr.w	r0, [r1], #4
 800e74e:	3201      	adds	r2, #1
 800e750:	2a1c      	cmp	r2, #28
 800e752:	4403      	add	r3, r0
 800e754:	d1f9      	bne.n	800e74a <SpiFlashStore::SpiFlashStore()+0x22>
 800e756:	4a06      	ldr	r2, [pc, #24]	; (800e770 <SpiFlashStore::SpiFlashStore()+0x48>)
 800e758:	6013      	str	r3, [r2, #0]
 800e75a:	4620      	mov	r0, r4
 800e75c:	bd38      	pop	{r3, r4, r5, pc}
 800e75e:	bf00      	nop
 800e760:	20015a44 	andcs	r5, r1, r4, asr #20
 800e764:	20015a60 	andcs	r5, r1, r0, ror #20
 800e768:	20015a38 	andcs	r5, r1, r8, lsr sl
 800e76c:	080171d0 	stmdaeq	r1, {r4, r6, r7, r8, ip, sp, lr}
 800e770:	20015a3c 	andcs	r5, r1, ip, lsr sl

0800e774 <SpiFlashStore::ResetSetList(spiflashstore::Store)>:
 800e774:	b508      	push	{r3, lr}
 800e776:	f7ff ff2f 	bl	800e5d8 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800e77a:	2300      	movs	r3, #0
 800e77c:	4904      	ldr	r1, [pc, #16]	; (800e790 <SpiFlashStore::ResetSetList(spiflashstore::Store)+0x1c>)
 800e77e:	1842      	adds	r2, r0, r1
 800e780:	540b      	strb	r3, [r1, r0]
 800e782:	7053      	strb	r3, [r2, #1]
 800e784:	7093      	strb	r3, [r2, #2]
 800e786:	70d3      	strb	r3, [r2, #3]
 800e788:	2201      	movs	r2, #1
 800e78a:	4b02      	ldr	r3, [pc, #8]	; (800e794 <SpiFlashStore::ResetSetList(spiflashstore::Store)+0x20>)
 800e78c:	601a      	str	r2, [r3, #0]
 800e78e:	bd08      	pop	{r3, pc}
 800e790:	20014a34 	andcs	r4, r1, r4, lsr sl
 800e794:	20015a40 	andcs	r5, r1, r0, asr #20

0800e798 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>:
 800e798:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e79c:	461c      	mov	r4, r3
 800e79e:	4b19      	ldr	r3, [pc, #100]	; (800e804 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x6c>)
 800e7a0:	4616      	mov	r6, r2
 800e7a2:	781f      	ldrb	r7, [r3, #0]
 800e7a4:	9d07      	ldr	r5, [sp, #28]
 800e7a6:	b307      	cbz	r7, 800e7ea <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800e7a8:	f7ff ff16 	bl	800e5d8 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800e7ac:	f04f 0c00 	mov.w	ip, #0
 800e7b0:	4a15      	ldr	r2, [pc, #84]	; (800e808 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x70>)
 800e7b2:	1831      	adds	r1, r6, r0
 800e7b4:	1e63      	subs	r3, r4, #1
 800e7b6:	9c06      	ldr	r4, [sp, #24]
 800e7b8:	4411      	add	r1, r2
 800e7ba:	440c      	add	r4, r1
 800e7bc:	42a1      	cmp	r1, r4
 800e7be:	d116      	bne.n	800e7ee <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x56>
 800e7c0:	f1bc 0f00 	cmp.w	ip, #0
 800e7c4:	d011      	beq.n	800e7ea <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800e7c6:	4b11      	ldr	r3, [pc, #68]	; (800e80c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x74>)
 800e7c8:	6819      	ldr	r1, [r3, #0]
 800e7ca:	b109      	cbz	r1, 800e7d0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x38>
 800e7cc:	2906      	cmp	r1, #6
 800e7ce:	d101      	bne.n	800e7d4 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x3c>
 800e7d0:	2101      	movs	r1, #1
 800e7d2:	6019      	str	r1, [r3, #0]
 800e7d4:	4b0e      	ldr	r3, [pc, #56]	; (800e810 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x78>)
 800e7d6:	6819      	ldr	r1, [r3, #0]
 800e7d8:	4b0e      	ldr	r3, [pc, #56]	; (800e814 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x7c>)
 800e7da:	6019      	str	r1, [r3, #0]
 800e7dc:	b12e      	cbz	r6, 800e7ea <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800e7de:	b125      	cbz	r5, 800e7ea <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800e7e0:	9b08      	ldr	r3, [sp, #32]
 800e7e2:	4418      	add	r0, r3
 800e7e4:	5813      	ldr	r3, [r2, r0]
 800e7e6:	432b      	orrs	r3, r5
 800e7e8:	5013      	str	r3, [r2, r0]
 800e7ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e7ee:	f891 8000 	ldrb.w	r8, [r1]
 800e7f2:	f813 ef01 	ldrb.w	lr, [r3, #1]!
 800e7f6:	3101      	adds	r1, #1
 800e7f8:	45f0      	cmp	r8, lr
 800e7fa:	bf1c      	itt	ne
 800e7fc:	f801 ec01 	strbne.w	lr, [r1, #-1]
 800e800:	46bc      	movne	ip, r7
 800e802:	e7db      	b.n	800e7bc <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x24>
 800e804:	20015a38 	andcs	r5, r1, r8, lsr sl
 800e808:	20014a34 	andcs	r4, r1, r4, lsr sl
 800e80c:	20015a40 	andcs	r5, r1, r0, asr #20
 800e810:	2001da24 	andcs	sp, r1, r4, lsr #20
 800e814:	20014a30 	andcs	r4, r1, r0, lsr sl

0800e818 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)>:
 800e818:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e81c:	461d      	mov	r5, r3
 800e81e:	4b15      	ldr	r3, [pc, #84]	; (800e874 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x5c>)
 800e820:	b085      	sub	sp, #20
 800e822:	781b      	ldrb	r3, [r3, #0]
 800e824:	4607      	mov	r7, r0
 800e826:	4614      	mov	r4, r2
 800e828:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
 800e82c:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 800e830:	b193      	cbz	r3, 800e858 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x40>
 800e832:	f7ff fed1 	bl	800e5d8 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800e836:	4a10      	ldr	r2, [pc, #64]	; (800e878 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x60>)
 800e838:	eb08 0600 	add.w	r6, r8, r0
 800e83c:	18b3      	adds	r3, r6, r2
 800e83e:	f1b9 0f00 	cmp.w	r9, #0
 800e842:	d013      	beq.n	800e86c <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x54>
 800e844:	5990      	ldr	r0, [r2, r6]
 800e846:	b988      	cbnz	r0, 800e86c <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x54>
 800e848:	e9cd 0001 	strd	r0, r0, [sp, #4]
 800e84c:	4623      	mov	r3, r4
 800e84e:	4642      	mov	r2, r8
 800e850:	4638      	mov	r0, r7
 800e852:	9500      	str	r5, [sp, #0]
 800e854:	f7ff ffa0 	bl	800e798 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e858:	b005      	add	sp, #20
 800e85a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e85e:	f813 2b01 	ldrb.w	r2, [r3], #1
 800e862:	f804 2f01 	strb.w	r2, [r4, #1]!
 800e866:	429d      	cmp	r5, r3
 800e868:	d1f9      	bne.n	800e85e <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x46>
 800e86a:	e7f5      	b.n	800e858 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x40>
 800e86c:	3c01      	subs	r4, #1
 800e86e:	441d      	add	r5, r3
 800e870:	e7f9      	b.n	800e866 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x4e>
 800e872:	bf00      	nop
 800e874:	20015a38 	andcs	r5, r1, r8, lsr sl
 800e878:	20014a34 	andcs	r4, r1, r4, lsr sl

0800e87c <SpiFlashStore::Flash()>:
 800e87c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e87e:	4c25      	ldr	r4, [pc, #148]	; (800e914 <SpiFlashStore::Flash()+0x98>)
 800e880:	6820      	ldr	r0, [r4, #0]
 800e882:	2800      	cmp	r0, #0
 800e884:	d043      	beq.n	800e90e <SpiFlashStore::Flash()+0x92>
 800e886:	3801      	subs	r0, #1
 800e888:	2805      	cmp	r0, #5
 800e88a:	d831      	bhi.n	800e8f0 <SpiFlashStore::Flash()+0x74>
 800e88c:	e8df f000 	tbb	[pc, r0]
 800e890:	2e140b03 	vnmlscs.f64	d0, d4, d3
 800e894:	4b203025 	blmi	881a930 <__exidx_end+0x802c64>
 800e898:	681a      	ldr	r2, [r3, #0]
 800e89a:	4b20      	ldr	r3, [pc, #128]	; (800e91c <SpiFlashStore::Flash()+0xa0>)
 800e89c:	601a      	str	r2, [r3, #0]
 800e89e:	2302      	movs	r3, #2
 800e8a0:	6023      	str	r3, [r4, #0]
 800e8a2:	2001      	movs	r0, #1
 800e8a4:	e033      	b.n	800e90e <SpiFlashStore::Flash()+0x92>
 800e8a6:	4b1c      	ldr	r3, [pc, #112]	; (800e918 <SpiFlashStore::Flash()+0x9c>)
 800e8a8:	4a1c      	ldr	r2, [pc, #112]	; (800e91c <SpiFlashStore::Flash()+0xa0>)
 800e8aa:	681b      	ldr	r3, [r3, #0]
 800e8ac:	6812      	ldr	r2, [r2, #0]
 800e8ae:	1a9b      	subs	r3, r3, r2
 800e8b0:	2b63      	cmp	r3, #99	; 0x63
 800e8b2:	d9f6      	bls.n	800e8a2 <SpiFlashStore::Flash()+0x26>
 800e8b4:	2303      	movs	r3, #3
 800e8b6:	e7f3      	b.n	800e8a0 <SpiFlashStore::Flash()+0x24>
 800e8b8:	4919      	ldr	r1, [pc, #100]	; (800e920 <SpiFlashStore::Flash()+0xa4>)
 800e8ba:	481a      	ldr	r0, [pc, #104]	; (800e924 <SpiFlashStore::Flash()+0xa8>)
 800e8bc:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 800e8c0:	6809      	ldr	r1, [r1, #0]
 800e8c2:	6800      	ldr	r0, [r0, #0]
 800e8c4:	ab03      	add	r3, sp, #12
 800e8c6:	f000 faa7 	bl	800ee18 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)>
 800e8ca:	2800      	cmp	r0, #0
 800e8cc:	d0e9      	beq.n	800e8a2 <SpiFlashStore::Flash()+0x26>
 800e8ce:	4b12      	ldr	r3, [pc, #72]	; (800e918 <SpiFlashStore::Flash()+0x9c>)
 800e8d0:	681a      	ldr	r2, [r3, #0]
 800e8d2:	4b12      	ldr	r3, [pc, #72]	; (800e91c <SpiFlashStore::Flash()+0xa0>)
 800e8d4:	601a      	str	r2, [r3, #0]
 800e8d6:	2305      	movs	r3, #5
 800e8d8:	e7e2      	b.n	800e8a0 <SpiFlashStore::Flash()+0x24>
 800e8da:	4b0f      	ldr	r3, [pc, #60]	; (800e918 <SpiFlashStore::Flash()+0x9c>)
 800e8dc:	4a0f      	ldr	r2, [pc, #60]	; (800e91c <SpiFlashStore::Flash()+0xa0>)
 800e8de:	681b      	ldr	r3, [r3, #0]
 800e8e0:	6812      	ldr	r2, [r2, #0]
 800e8e2:	1a9b      	subs	r3, r3, r2
 800e8e4:	2b63      	cmp	r3, #99	; 0x63
 800e8e6:	d9dc      	bls.n	800e8a2 <SpiFlashStore::Flash()+0x26>
 800e8e8:	2304      	movs	r3, #4
 800e8ea:	e7d9      	b.n	800e8a0 <SpiFlashStore::Flash()+0x24>
 800e8ec:	2306      	movs	r3, #6
 800e8ee:	e7d7      	b.n	800e8a0 <SpiFlashStore::Flash()+0x24>
 800e8f0:	ab03      	add	r3, sp, #12
 800e8f2:	4a0d      	ldr	r2, [pc, #52]	; (800e928 <SpiFlashStore::Flash()+0xac>)
 800e8f4:	490a      	ldr	r1, [pc, #40]	; (800e920 <SpiFlashStore::Flash()+0xa4>)
 800e8f6:	480b      	ldr	r0, [pc, #44]	; (800e924 <SpiFlashStore::Flash()+0xa8>)
 800e8f8:	9300      	str	r3, [sp, #0]
 800e8fa:	6812      	ldr	r2, [r2, #0]
 800e8fc:	4b0b      	ldr	r3, [pc, #44]	; (800e92c <SpiFlashStore::Flash()+0xb0>)
 800e8fe:	6809      	ldr	r1, [r1, #0]
 800e900:	6800      	ldr	r0, [r0, #0]
 800e902:	f000 fb29 	bl	800ef58 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)>
 800e906:	2800      	cmp	r0, #0
 800e908:	d0cb      	beq.n	800e8a2 <SpiFlashStore::Flash()+0x26>
 800e90a:	2000      	movs	r0, #0
 800e90c:	6020      	str	r0, [r4, #0]
 800e90e:	b004      	add	sp, #16
 800e910:	bd10      	pop	{r4, pc}
 800e912:	bf00      	nop
 800e914:	20015a40 	andcs	r5, r1, r0, asr #20
 800e918:	2001da24 	andcs	sp, r1, r4, lsr #20
 800e91c:	20014a30 	andcs	r4, r1, r0, lsr sl
 800e920:	20015a34 	andcs	r5, r1, r4, lsr sl
 800e924:	20015a60 	andcs	r5, r1, r0, ror #20
 800e928:	20015a3c 	andcs	r5, r1, ip, lsr sl
 800e92c:	20014a34 	andcs	r4, r1, r4, lsr sl

0800e930 <StoreDisplayUdf::~StoreDisplayUdf()>:
 800e930:	4770      	bx	lr
	...

0800e934 <StoreDisplayUdf::Copy(displayudfparams::Params*)>:
 800e934:	b507      	push	{r0, r1, r2, lr}
 800e936:	2300      	movs	r3, #0
 800e938:	460a      	mov	r2, r1
 800e93a:	2101      	movs	r1, #1
 800e93c:	e9cd 3100 	strd	r3, r1, [sp]
 800e940:	4804      	ldr	r0, [pc, #16]	; (800e954 <StoreDisplayUdf::Copy(displayudfparams::Params*)+0x20>)
 800e942:	2322      	movs	r3, #34	; 0x22
 800e944:	210f      	movs	r1, #15
 800e946:	6800      	ldr	r0, [r0, #0]
 800e948:	f7ff ff66 	bl	800e818 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)>
 800e94c:	b003      	add	sp, #12
 800e94e:	f85d fb04 	ldr.w	pc, [sp], #4
 800e952:	bf00      	nop
 800e954:	20015a44 	andcs	r5, r1, r4, asr #20

0800e958 <StoreDisplayUdf::Update(displayudfparams::Params const*)>:
 800e958:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e95a:	2200      	movs	r2, #0
 800e95c:	460b      	mov	r3, r1
 800e95e:	2122      	movs	r1, #34	; 0x22
 800e960:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800e964:	4804      	ldr	r0, [pc, #16]	; (800e978 <StoreDisplayUdf::Update(displayudfparams::Params const*)+0x20>)
 800e966:	9100      	str	r1, [sp, #0]
 800e968:	6800      	ldr	r0, [r0, #0]
 800e96a:	210f      	movs	r1, #15
 800e96c:	f7ff ff14 	bl	800e798 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e970:	b005      	add	sp, #20
 800e972:	f85d fb04 	ldr.w	pc, [sp], #4
 800e976:	bf00      	nop
 800e978:	20015a44 	andcs	r5, r1, r4, asr #20

0800e97c <StoreDisplayUdf::~StoreDisplayUdf()>:
 800e97c:	b510      	push	{r4, lr}
 800e97e:	4604      	mov	r4, r0
 800e980:	f003 feae 	bl	80126e0 <operator delete(void*)>
 800e984:	4620      	mov	r0, r4
 800e986:	bd10      	pop	{r4, pc}

0800e988 <StoreDisplayUdf::StoreDisplayUdf()>:
 800e988:	4a02      	ldr	r2, [pc, #8]	; (800e994 <StoreDisplayUdf::StoreDisplayUdf()+0xc>)
 800e98a:	6002      	str	r2, [r0, #0]
 800e98c:	4a02      	ldr	r2, [pc, #8]	; (800e998 <StoreDisplayUdf::StoreDisplayUdf()+0x10>)
 800e98e:	6010      	str	r0, [r2, #0]
 800e990:	4770      	bx	lr
 800e992:	bf00      	nop
 800e994:	08017248 	stmdaeq	r1, {r3, r6, r9, ip, sp, lr}
 800e998:	20015a4c 	andcs	r5, r1, ip, asr #20

0800e99c <StoreNetwork::~StoreNetwork()>:
 800e99c:	4770      	bx	lr

0800e99e <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 800e99e:	3804      	subs	r0, #4
 800e9a0:	4770      	bx	lr
	...

0800e9a4 <StoreNetwork::Update(networkparams::Params const*)>:
 800e9a4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e9a6:	2200      	movs	r2, #0
 800e9a8:	460b      	mov	r3, r1
 800e9aa:	215e      	movs	r1, #94	; 0x5e
 800e9ac:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800e9b0:	4804      	ldr	r0, [pc, #16]	; (800e9c4 <StoreNetwork::Update(networkparams::Params const*)+0x20>)
 800e9b2:	9100      	str	r1, [sp, #0]
 800e9b4:	6800      	ldr	r0, [r0, #0]
 800e9b6:	4611      	mov	r1, r2
 800e9b8:	f7ff feee 	bl	800e798 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e9bc:	b005      	add	sp, #20
 800e9be:	f85d fb04 	ldr.w	pc, [sp], #4
 800e9c2:	bf00      	nop
 800e9c4:	20015a44 	andcs	r5, r1, r4, asr #20

0800e9c8 <StoreNetwork::SaveGatewayIp(unsigned int)>:
 800e9c8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800e9ca:	2308      	movs	r3, #8
 800e9cc:	9105      	str	r1, [sp, #20]
 800e9ce:	2100      	movs	r1, #0
 800e9d0:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800e9d4:	2304      	movs	r3, #4
 800e9d6:	4805      	ldr	r0, [pc, #20]	; (800e9ec <StoreNetwork::SaveGatewayIp(unsigned int)+0x24>)
 800e9d8:	9300      	str	r3, [sp, #0]
 800e9da:	220c      	movs	r2, #12
 800e9dc:	6800      	ldr	r0, [r0, #0]
 800e9de:	ab05      	add	r3, sp, #20
 800e9e0:	f7ff feda 	bl	800e798 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e9e4:	b007      	add	sp, #28
 800e9e6:	f85d fb04 	ldr.w	pc, [sp], #4
 800e9ea:	bf00      	nop
 800e9ec:	20015a44 	andcs	r5, r1, r4, asr #20

0800e9f0 <non-virtual thunk to StoreNetwork::SaveGatewayIp(unsigned int)>:
 800e9f0:	f1a0 0004 	sub.w	r0, r0, #4
 800e9f4:	e7e8      	b.n	800e9c8 <StoreNetwork::SaveGatewayIp(unsigned int)>
 800e9f6:	bf00      	nop

0800e9f8 <StoreNetwork::SaveNetMask(unsigned int)>:
 800e9f8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800e9fa:	2304      	movs	r3, #4
 800e9fc:	9105      	str	r1, [sp, #20]
 800e9fe:	2100      	movs	r1, #0
 800ea00:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800ea04:	4804      	ldr	r0, [pc, #16]	; (800ea18 <StoreNetwork::SaveNetMask(unsigned int)+0x20>)
 800ea06:	9300      	str	r3, [sp, #0]
 800ea08:	2208      	movs	r2, #8
 800ea0a:	6800      	ldr	r0, [r0, #0]
 800ea0c:	ab05      	add	r3, sp, #20
 800ea0e:	f7ff fec3 	bl	800e798 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800ea12:	b007      	add	sp, #28
 800ea14:	f85d fb04 	ldr.w	pc, [sp], #4
 800ea18:	20015a44 	andcs	r5, r1, r4, asr #20

0800ea1c <non-virtual thunk to StoreNetwork::SaveNetMask(unsigned int)>:
 800ea1c:	f1a0 0004 	sub.w	r0, r0, #4
 800ea20:	e7ea      	b.n	800e9f8 <StoreNetwork::SaveNetMask(unsigned int)>
 800ea22:	bf00      	nop

0800ea24 <StoreNetwork::SaveIp(unsigned int)>:
 800ea24:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800ea26:	2302      	movs	r3, #2
 800ea28:	9105      	str	r1, [sp, #20]
 800ea2a:	2100      	movs	r1, #0
 800ea2c:	2204      	movs	r2, #4
 800ea2e:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800ea32:	4804      	ldr	r0, [pc, #16]	; (800ea44 <StoreNetwork::SaveIp(unsigned int)+0x20>)
 800ea34:	9200      	str	r2, [sp, #0]
 800ea36:	6800      	ldr	r0, [r0, #0]
 800ea38:	ab05      	add	r3, sp, #20
 800ea3a:	f7ff fead 	bl	800e798 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800ea3e:	b007      	add	sp, #28
 800ea40:	f85d fb04 	ldr.w	pc, [sp], #4
 800ea44:	20015a44 	andcs	r5, r1, r4, asr #20

0800ea48 <non-virtual thunk to StoreNetwork::SaveIp(unsigned int)>:
 800ea48:	f1a0 0004 	sub.w	r0, r0, #4
 800ea4c:	e7ea      	b.n	800ea24 <StoreNetwork::SaveIp(unsigned int)>
 800ea4e:	bf00      	nop

0800ea50 <StoreNetwork::SaveHostName(char const*, unsigned int)>:
 800ea50:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800ea52:	460b      	mov	r3, r1
 800ea54:	2020      	movs	r0, #32
 800ea56:	2100      	movs	r1, #0
 800ea58:	2a40      	cmp	r2, #64	; 0x40
 800ea5a:	bf28      	it	cs
 800ea5c:	2240      	movcs	r2, #64	; 0x40
 800ea5e:	e9cd 0101 	strd	r0, r1, [sp, #4]
 800ea62:	4804      	ldr	r0, [pc, #16]	; (800ea74 <StoreNetwork::SaveHostName(char const*, unsigned int)+0x24>)
 800ea64:	9200      	str	r2, [sp, #0]
 800ea66:	6800      	ldr	r0, [r0, #0]
 800ea68:	2215      	movs	r2, #21
 800ea6a:	f7ff fe95 	bl	800e798 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800ea6e:	b005      	add	sp, #20
 800ea70:	f85d fb04 	ldr.w	pc, [sp], #4
 800ea74:	20015a44 	andcs	r5, r1, r4, asr #20

0800ea78 <non-virtual thunk to StoreNetwork::SaveHostName(char const*, unsigned int)>:
 800ea78:	f1a0 0004 	sub.w	r0, r0, #4
 800ea7c:	e7e8      	b.n	800ea50 <StoreNetwork::SaveHostName(char const*, unsigned int)>
 800ea7e:	bf00      	nop

0800ea80 <StoreNetwork::~StoreNetwork()>:
 800ea80:	b510      	push	{r4, lr}
 800ea82:	4604      	mov	r4, r0
 800ea84:	f003 fe2c 	bl	80126e0 <operator delete(void*)>
 800ea88:	4620      	mov	r0, r4
 800ea8a:	bd10      	pop	{r4, pc}

0800ea8c <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 800ea8c:	f1a0 0004 	sub.w	r0, r0, #4
 800ea90:	e7f6      	b.n	800ea80 <StoreNetwork::~StoreNetwork()>
	...

0800ea94 <StoreNetwork::Copy(networkparams::Params*)>:
 800ea94:	b507      	push	{r0, r1, r2, lr}
 800ea96:	2301      	movs	r3, #1
 800ea98:	460a      	mov	r2, r1
 800ea9a:	2100      	movs	r1, #0
 800ea9c:	e9cd 1300 	strd	r1, r3, [sp]
 800eaa0:	4803      	ldr	r0, [pc, #12]	; (800eab0 <StoreNetwork::Copy(networkparams::Params*)+0x1c>)
 800eaa2:	235e      	movs	r3, #94	; 0x5e
 800eaa4:	6800      	ldr	r0, [r0, #0]
 800eaa6:	f7ff feb7 	bl	800e818 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)>
 800eaaa:	b003      	add	sp, #12
 800eaac:	f85d fb04 	ldr.w	pc, [sp], #4
 800eab0:	20015a44 	andcs	r5, r1, r4, asr #20

0800eab4 <StoreNetwork::StoreNetwork()>:
 800eab4:	4a03      	ldr	r2, [pc, #12]	; (800eac4 <StoreNetwork::StoreNetwork()+0x10>)
 800eab6:	6002      	str	r2, [r0, #0]
 800eab8:	322c      	adds	r2, #44	; 0x2c
 800eaba:	6042      	str	r2, [r0, #4]
 800eabc:	4a02      	ldr	r2, [pc, #8]	; (800eac8 <StoreNetwork::StoreNetwork()+0x14>)
 800eabe:	6010      	str	r0, [r2, #0]
 800eac0:	4770      	bx	lr
 800eac2:	bf00      	nop
 800eac4:	08017260 	stmdaeq	r1, {r5, r6, r9, ip, sp, lr}
 800eac8:	20015a50 	andcs	r5, r1, r0, asr sl

0800eacc <StoreRDMDevice::~StoreRDMDevice()>:
 800eacc:	4770      	bx	lr

0800eace <non-virtual thunk to StoreRDMDevice::~StoreRDMDevice()>:
 800eace:	3804      	subs	r0, #4
 800ead0:	4770      	bx	lr
	...

0800ead4 <StoreRDMDevice::Update(TRDMDeviceParams const*)>:
 800ead4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800ead6:	2200      	movs	r2, #0
 800ead8:	460b      	mov	r3, r1
 800eada:	2129      	movs	r1, #41	; 0x29
 800eadc:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800eae0:	4804      	ldr	r0, [pc, #16]	; (800eaf4 <StoreRDMDevice::Update(TRDMDeviceParams const*)+0x20>)
 800eae2:	9100      	str	r1, [sp, #0]
 800eae4:	6800      	ldr	r0, [r0, #0]
 800eae6:	210b      	movs	r1, #11
 800eae8:	f7ff fe56 	bl	800e798 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800eaec:	b005      	add	sp, #20
 800eaee:	f85d fb04 	ldr.w	pc, [sp], #4
 800eaf2:	bf00      	nop
 800eaf4:	20015a44 	andcs	r5, r1, r4, asr #20

0800eaf8 <StoreRDMDevice::SaveLabel(char const*, unsigned char)>:
 800eaf8:	b570      	push	{r4, r5, r6, lr}
 800eafa:	2401      	movs	r4, #1
 800eafc:	2600      	movs	r6, #0
 800eafe:	4d0c      	ldr	r5, [pc, #48]	; (800eb30 <StoreRDMDevice::SaveLabel(char const*, unsigned char)+0x38>)
 800eb00:	b086      	sub	sp, #24
 800eb02:	460b      	mov	r3, r1
 800eb04:	6828      	ldr	r0, [r5, #0]
 800eb06:	f88d 2017 	strb.w	r2, [sp, #23]
 800eb0a:	9200      	str	r2, [sp, #0]
 800eb0c:	210b      	movs	r1, #11
 800eb0e:	2204      	movs	r2, #4
 800eb10:	e9cd 4601 	strd	r4, r6, [sp, #4]
 800eb14:	f7ff fe40 	bl	800e798 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800eb18:	2224      	movs	r2, #36	; 0x24
 800eb1a:	210b      	movs	r1, #11
 800eb1c:	e9cd 4601 	strd	r4, r6, [sp, #4]
 800eb20:	6828      	ldr	r0, [r5, #0]
 800eb22:	9400      	str	r4, [sp, #0]
 800eb24:	f10d 0317 	add.w	r3, sp, #23
 800eb28:	f7ff fe36 	bl	800e798 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800eb2c:	b006      	add	sp, #24
 800eb2e:	bd70      	pop	{r4, r5, r6, pc}
 800eb30:	20015a44 	andcs	r5, r1, r4, asr #20

0800eb34 <non-virtual thunk to StoreRDMDevice::SaveLabel(char const*, unsigned char)>:
 800eb34:	f1a0 0004 	sub.w	r0, r0, #4
 800eb38:	e7de      	b.n	800eaf8 <StoreRDMDevice::SaveLabel(char const*, unsigned char)>
 800eb3a:	bf00      	nop

0800eb3c <StoreRDMDevice::~StoreRDMDevice()>:
 800eb3c:	b510      	push	{r4, lr}
 800eb3e:	4604      	mov	r4, r0
 800eb40:	f003 fdce 	bl	80126e0 <operator delete(void*)>
 800eb44:	4620      	mov	r0, r4
 800eb46:	bd10      	pop	{r4, pc}

0800eb48 <non-virtual thunk to StoreRDMDevice::~StoreRDMDevice()>:
 800eb48:	f1a0 0004 	sub.w	r0, r0, #4
 800eb4c:	e7f6      	b.n	800eb3c <StoreRDMDevice::~StoreRDMDevice()>
	...

0800eb50 <StoreRDMDevice::Copy(TRDMDeviceParams*)>:
 800eb50:	b507      	push	{r0, r1, r2, lr}
 800eb52:	2300      	movs	r3, #0
 800eb54:	460a      	mov	r2, r1
 800eb56:	2101      	movs	r1, #1
 800eb58:	e9cd 3100 	strd	r3, r1, [sp]
 800eb5c:	4804      	ldr	r0, [pc, #16]	; (800eb70 <StoreRDMDevice::Copy(TRDMDeviceParams*)+0x20>)
 800eb5e:	2329      	movs	r3, #41	; 0x29
 800eb60:	210b      	movs	r1, #11
 800eb62:	6800      	ldr	r0, [r0, #0]
 800eb64:	f7ff fe58 	bl	800e818 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)>
 800eb68:	b003      	add	sp, #12
 800eb6a:	f85d fb04 	ldr.w	pc, [sp], #4
 800eb6e:	bf00      	nop
 800eb70:	20015a44 	andcs	r5, r1, r4, asr #20

0800eb74 <StoreRDMDevice::StoreRDMDevice()>:
 800eb74:	4a03      	ldr	r2, [pc, #12]	; (800eb84 <StoreRDMDevice::StoreRDMDevice()+0x10>)
 800eb76:	6002      	str	r2, [r0, #0]
 800eb78:	321c      	adds	r2, #28
 800eb7a:	6042      	str	r2, [r0, #4]
 800eb7c:	4a02      	ldr	r2, [pc, #8]	; (800eb88 <StoreRDMDevice::StoreRDMDevice()+0x14>)
 800eb7e:	6010      	str	r0, [r2, #0]
 800eb80:	4770      	bx	lr
 800eb82:	bf00      	nop
 800eb84:	080172b0 	stmdaeq	r1, {r4, r5, r7, r9, ip, sp, lr}
 800eb88:	20015a54 	andcs	r5, r1, r4, asr sl

0800eb8c <StoreRemoteConfig::~StoreRemoteConfig()>:
 800eb8c:	4770      	bx	lr
	...

0800eb90 <StoreRemoteConfig::Copy(TRemoteConfigParams*)>:
 800eb90:	b507      	push	{r0, r1, r2, lr}
 800eb92:	2300      	movs	r3, #0
 800eb94:	460a      	mov	r2, r1
 800eb96:	2101      	movs	r1, #1
 800eb98:	e9cd 3100 	strd	r3, r1, [sp]
 800eb9c:	4804      	ldr	r0, [pc, #16]	; (800ebb0 <StoreRemoteConfig::Copy(TRemoteConfigParams*)+0x20>)
 800eb9e:	2320      	movs	r3, #32
 800eba0:	210c      	movs	r1, #12
 800eba2:	6800      	ldr	r0, [r0, #0]
 800eba4:	f7ff fe38 	bl	800e818 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)>
 800eba8:	b003      	add	sp, #12
 800ebaa:	f85d fb04 	ldr.w	pc, [sp], #4
 800ebae:	bf00      	nop
 800ebb0:	20015a44 	andcs	r5, r1, r4, asr #20

0800ebb4 <StoreRemoteConfig::Update(TRemoteConfigParams const*)>:
 800ebb4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800ebb6:	2200      	movs	r2, #0
 800ebb8:	460b      	mov	r3, r1
 800ebba:	2120      	movs	r1, #32
 800ebbc:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800ebc0:	4804      	ldr	r0, [pc, #16]	; (800ebd4 <StoreRemoteConfig::Update(TRemoteConfigParams const*)+0x20>)
 800ebc2:	9100      	str	r1, [sp, #0]
 800ebc4:	6800      	ldr	r0, [r0, #0]
 800ebc6:	210c      	movs	r1, #12
 800ebc8:	f7ff fde6 	bl	800e798 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800ebcc:	b005      	add	sp, #20
 800ebce:	f85d fb04 	ldr.w	pc, [sp], #4
 800ebd2:	bf00      	nop
 800ebd4:	20015a44 	andcs	r5, r1, r4, asr #20

0800ebd8 <StoreRemoteConfig::~StoreRemoteConfig()>:
 800ebd8:	b510      	push	{r4, lr}
 800ebda:	4604      	mov	r4, r0
 800ebdc:	f003 fd80 	bl	80126e0 <operator delete(void*)>
 800ebe0:	4620      	mov	r0, r4
 800ebe2:	bd10      	pop	{r4, pc}

0800ebe4 <StoreRemoteConfig::StoreRemoteConfig()>:
 800ebe4:	4a02      	ldr	r2, [pc, #8]	; (800ebf0 <StoreRemoteConfig::StoreRemoteConfig()+0xc>)
 800ebe6:	6002      	str	r2, [r0, #0]
 800ebe8:	4a02      	ldr	r2, [pc, #8]	; (800ebf4 <StoreRemoteConfig::StoreRemoteConfig()+0x10>)
 800ebea:	6010      	str	r0, [r2, #0]
 800ebec:	4770      	bx	lr
 800ebee:	bf00      	nop
 800ebf0:	080172e0 	stmdaeq	r1, {r5, r6, r7, r9, ip, sp, lr}
 800ebf4:	20015a58 	andcs	r5, r1, r8, asr sl

0800ebf8 <StorePixelDmx::~StorePixelDmx()>:
 800ebf8:	4770      	bx	lr

0800ebfa <non-virtual thunk to StorePixelDmx::~StorePixelDmx()>:
 800ebfa:	3804      	subs	r0, #4
 800ebfc:	4770      	bx	lr
	...

0800ec00 <StorePixelDmx::Update(pixeldmxparams::Params const*)>:
 800ec00:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800ec02:	2200      	movs	r2, #0
 800ec04:	460b      	mov	r3, r1
 800ec06:	2126      	movs	r1, #38	; 0x26
 800ec08:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800ec0c:	4804      	ldr	r0, [pc, #16]	; (800ec20 <StorePixelDmx::Update(pixeldmxparams::Params const*)+0x20>)
 800ec0e:	9100      	str	r1, [sp, #0]
 800ec10:	6800      	ldr	r0, [r0, #0]
 800ec12:	2103      	movs	r1, #3
 800ec14:	f7ff fdc0 	bl	800e798 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800ec18:	b005      	add	sp, #20
 800ec1a:	f85d fb04 	ldr.w	pc, [sp], #4
 800ec1e:	bf00      	nop
 800ec20:	20015a44 	andcs	r5, r1, r4, asr #20

0800ec24 <StorePixelDmx::SaveDmxStartAddress(unsigned short)>:
 800ec24:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800ec26:	2304      	movs	r3, #4
 800ec28:	2200      	movs	r2, #0
 800ec2a:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800ec2e:	2302      	movs	r3, #2
 800ec30:	4806      	ldr	r0, [pc, #24]	; (800ec4c <StorePixelDmx::SaveDmxStartAddress(unsigned short)+0x28>)
 800ec32:	9300      	str	r3, [sp, #0]
 800ec34:	f8ad 1016 	strh.w	r1, [sp, #22]
 800ec38:	2207      	movs	r2, #7
 800ec3a:	2103      	movs	r1, #3
 800ec3c:	6800      	ldr	r0, [r0, #0]
 800ec3e:	f10d 0316 	add.w	r3, sp, #22
 800ec42:	f7ff fda9 	bl	800e798 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800ec46:	b007      	add	sp, #28
 800ec48:	f85d fb04 	ldr.w	pc, [sp], #4
 800ec4c:	20015a44 	andcs	r5, r1, r4, asr #20

0800ec50 <non-virtual thunk to StorePixelDmx::SaveDmxStartAddress(unsigned short)>:
 800ec50:	f1a0 0004 	sub.w	r0, r0, #4
 800ec54:	e7e6      	b.n	800ec24 <StorePixelDmx::SaveDmxStartAddress(unsigned short)>
 800ec56:	bf00      	nop

0800ec58 <StorePixelDmx::SaveTestPattern(unsigned char)>:
 800ec58:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800ec5a:	2308      	movs	r3, #8
 800ec5c:	2200      	movs	r2, #0
 800ec5e:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800ec62:	2301      	movs	r3, #1
 800ec64:	4806      	ldr	r0, [pc, #24]	; (800ec80 <StorePixelDmx::SaveTestPattern(unsigned char)+0x28>)
 800ec66:	9300      	str	r3, [sp, #0]
 800ec68:	f88d 1017 	strb.w	r1, [sp, #23]
 800ec6c:	2210      	movs	r2, #16
 800ec6e:	2103      	movs	r1, #3
 800ec70:	6800      	ldr	r0, [r0, #0]
 800ec72:	f10d 0317 	add.w	r3, sp, #23
 800ec76:	f7ff fd8f 	bl	800e798 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800ec7a:	b007      	add	sp, #28
 800ec7c:	f85d fb04 	ldr.w	pc, [sp], #4
 800ec80:	20015a44 	andcs	r5, r1, r4, asr #20

0800ec84 <non-virtual thunk to StorePixelDmx::SaveTestPattern(unsigned char)>:
 800ec84:	f1a0 0004 	sub.w	r0, r0, #4
 800ec88:	e7e6      	b.n	800ec58 <StorePixelDmx::SaveTestPattern(unsigned char)>
 800ec8a:	bf00      	nop

0800ec8c <StorePixelDmx::SaveMap(unsigned char)>:
 800ec8c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800ec8e:	f44f 7300 	mov.w	r3, #512	; 0x200
 800ec92:	2200      	movs	r2, #0
 800ec94:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800ec98:	2301      	movs	r3, #1
 800ec9a:	4807      	ldr	r0, [pc, #28]	; (800ecb8 <StorePixelDmx::SaveMap(unsigned char)+0x2c>)
 800ec9c:	9300      	str	r3, [sp, #0]
 800ec9e:	f88d 1017 	strb.w	r1, [sp, #23]
 800eca2:	2213      	movs	r2, #19
 800eca4:	2103      	movs	r1, #3
 800eca6:	6800      	ldr	r0, [r0, #0]
 800eca8:	f10d 0317 	add.w	r3, sp, #23
 800ecac:	f7ff fd74 	bl	800e798 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800ecb0:	b007      	add	sp, #28
 800ecb2:	f85d fb04 	ldr.w	pc, [sp], #4
 800ecb6:	bf00      	nop
 800ecb8:	20015a44 	andcs	r5, r1, r4, asr #20

0800ecbc <non-virtual thunk to StorePixelDmx::SaveMap(unsigned char)>:
 800ecbc:	f1a0 0004 	sub.w	r0, r0, #4
 800ecc0:	e7e4      	b.n	800ec8c <StorePixelDmx::SaveMap(unsigned char)>
 800ecc2:	bf00      	nop

0800ecc4 <StorePixelDmx::SaveGroupingCount(unsigned short)>:
 800ecc4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800ecc6:	f44f 7380 	mov.w	r3, #256	; 0x100
 800ecca:	2200      	movs	r2, #0
 800eccc:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800ecd0:	2302      	movs	r3, #2
 800ecd2:	4807      	ldr	r0, [pc, #28]	; (800ecf0 <StorePixelDmx::SaveGroupingCount(unsigned short)+0x2c>)
 800ecd4:	9300      	str	r3, [sp, #0]
 800ecd6:	f8ad 1016 	strh.w	r1, [sp, #22]
 800ecda:	2211      	movs	r2, #17
 800ecdc:	2103      	movs	r1, #3
 800ecde:	6800      	ldr	r0, [r0, #0]
 800ece0:	f10d 0316 	add.w	r3, sp, #22
 800ece4:	f7ff fd58 	bl	800e798 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800ece8:	b007      	add	sp, #28
 800ecea:	f85d fb04 	ldr.w	pc, [sp], #4
 800ecee:	bf00      	nop
 800ecf0:	20015a44 	andcs	r5, r1, r4, asr #20

0800ecf4 <non-virtual thunk to StorePixelDmx::SaveGroupingCount(unsigned short)>:
 800ecf4:	f1a0 0004 	sub.w	r0, r0, #4
 800ecf8:	e7e4      	b.n	800ecc4 <StorePixelDmx::SaveGroupingCount(unsigned short)>
 800ecfa:	bf00      	nop

0800ecfc <StorePixelDmx::SaveCount(unsigned short)>:
 800ecfc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800ecfe:	2302      	movs	r3, #2
 800ed00:	2200      	movs	r2, #0
 800ed02:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800ed06:	4807      	ldr	r0, [pc, #28]	; (800ed24 <StorePixelDmx::SaveCount(unsigned short)+0x28>)
 800ed08:	9300      	str	r3, [sp, #0]
 800ed0a:	f8ad 1016 	strh.w	r1, [sp, #22]
 800ed0e:	2205      	movs	r2, #5
 800ed10:	2103      	movs	r1, #3
 800ed12:	6800      	ldr	r0, [r0, #0]
 800ed14:	f10d 0316 	add.w	r3, sp, #22
 800ed18:	f7ff fd3e 	bl	800e798 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800ed1c:	b007      	add	sp, #28
 800ed1e:	f85d fb04 	ldr.w	pc, [sp], #4
 800ed22:	bf00      	nop
 800ed24:	20015a44 	andcs	r5, r1, r4, asr #20

0800ed28 <non-virtual thunk to StorePixelDmx::SaveCount(unsigned short)>:
 800ed28:	f1a0 0004 	sub.w	r0, r0, #4
 800ed2c:	e7e6      	b.n	800ecfc <StorePixelDmx::SaveCount(unsigned short)>
 800ed2e:	bf00      	nop

0800ed30 <StorePixelDmx::SaveType(unsigned char)>:
 800ed30:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800ed32:	2301      	movs	r3, #1
 800ed34:	2200      	movs	r2, #0
 800ed36:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800ed3a:	4807      	ldr	r0, [pc, #28]	; (800ed58 <StorePixelDmx::SaveType(unsigned char)+0x28>)
 800ed3c:	9300      	str	r3, [sp, #0]
 800ed3e:	f88d 1017 	strb.w	r1, [sp, #23]
 800ed42:	2204      	movs	r2, #4
 800ed44:	2103      	movs	r1, #3
 800ed46:	6800      	ldr	r0, [r0, #0]
 800ed48:	f10d 0317 	add.w	r3, sp, #23
 800ed4c:	f7ff fd24 	bl	800e798 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800ed50:	b007      	add	sp, #28
 800ed52:	f85d fb04 	ldr.w	pc, [sp], #4
 800ed56:	bf00      	nop
 800ed58:	20015a44 	andcs	r5, r1, r4, asr #20

0800ed5c <non-virtual thunk to StorePixelDmx::SaveType(unsigned char)>:
 800ed5c:	f1a0 0004 	sub.w	r0, r0, #4
 800ed60:	e7e6      	b.n	800ed30 <StorePixelDmx::SaveType(unsigned char)>
 800ed62:	bf00      	nop

0800ed64 <StorePixelDmx::~StorePixelDmx()>:
 800ed64:	b510      	push	{r4, lr}
 800ed66:	4604      	mov	r4, r0
 800ed68:	f003 fcba 	bl	80126e0 <operator delete(void*)>
 800ed6c:	4620      	mov	r0, r4
 800ed6e:	bd10      	pop	{r4, pc}

0800ed70 <non-virtual thunk to StorePixelDmx::~StorePixelDmx()>:
 800ed70:	f1a0 0004 	sub.w	r0, r0, #4
 800ed74:	e7f6      	b.n	800ed64 <StorePixelDmx::~StorePixelDmx()>
	...

0800ed78 <StorePixelDmx::Copy(pixeldmxparams::Params*)>:
 800ed78:	b507      	push	{r0, r1, r2, lr}
 800ed7a:	2300      	movs	r3, #0
 800ed7c:	460a      	mov	r2, r1
 800ed7e:	2101      	movs	r1, #1
 800ed80:	e9cd 3100 	strd	r3, r1, [sp]
 800ed84:	4804      	ldr	r0, [pc, #16]	; (800ed98 <StorePixelDmx::Copy(pixeldmxparams::Params*)+0x20>)
 800ed86:	2326      	movs	r3, #38	; 0x26
 800ed88:	2103      	movs	r1, #3
 800ed8a:	6800      	ldr	r0, [r0, #0]
 800ed8c:	f7ff fd44 	bl	800e818 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)>
 800ed90:	b003      	add	sp, #12
 800ed92:	f85d fb04 	ldr.w	pc, [sp], #4
 800ed96:	bf00      	nop
 800ed98:	20015a44 	andcs	r5, r1, r4, asr #20

0800ed9c <StorePixelDmx::StorePixelDmx()>:
 800ed9c:	4a03      	ldr	r2, [pc, #12]	; (800edac <StorePixelDmx::StorePixelDmx()+0x10>)
 800ed9e:	6002      	str	r2, [r0, #0]
 800eda0:	3230      	adds	r2, #48	; 0x30
 800eda2:	6042      	str	r2, [r0, #4]
 800eda4:	4a02      	ldr	r2, [pc, #8]	; (800edb0 <StorePixelDmx::StorePixelDmx()+0x14>)
 800eda6:	6010      	str	r0, [r2, #0]
 800eda8:	4770      	bx	lr
 800edaa:	bf00      	nop
 800edac:	080172f8 	stmdaeq	r1, {r3, r4, r5, r6, r7, r9, ip, sp, lr}
 800edb0:	20015a5c 	andcs	r5, r1, ip, asr sl

0800edb4 <FlashRom::FlashRom()>:
 800edb4:	4b07      	ldr	r3, [pc, #28]	; (800edd4 <FlashRom::FlashRom()+0x20>)
 800edb6:	b510      	push	{r4, lr}
 800edb8:	6018      	str	r0, [r3, #0]
 800edba:	2301      	movs	r3, #1
 800edbc:	4604      	mov	r4, r0
 800edbe:	7003      	strb	r3, [r0, #0]
 800edc0:	4b05      	ldr	r3, [pc, #20]	; (800edd8 <FlashRom::FlashRom()+0x24>)
 800edc2:	4906      	ldr	r1, [pc, #24]	; (800eddc <FlashRom::FlashRom()+0x28>)
 800edc4:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800edc8:	4805      	ldr	r0, [pc, #20]	; (800ede0 <FlashRom::FlashRom()+0x2c>)
 800edca:	029a      	lsls	r2, r3, #10
 800edcc:	f7fa fbce 	bl	800956c <printf>
 800edd0:	4620      	mov	r0, r4
 800edd2:	bd10      	pop	{r4, pc}
 800edd4:	20015a60 	andcs	r5, r1, r0, ror #20
 800edd8:	1ffff700 	svcne	0x00fff700
 800eddc:	0801551c 	stmdaeq	r1, {r2, r3, r4, r8, sl, ip, lr}
 800ede0:	08017348 	stmdaeq	r1, {r3, r6, r8, r9, ip, sp, lr}

0800ede4 <FlashRom::GetSize() const>:
 800ede4:	4b02      	ldr	r3, [pc, #8]	; (800edf0 <FlashRom::GetSize() const+0xc>)
 800ede6:	f8b3 00e0 	ldrh.w	r0, [r3, #224]	; 0xe0
 800edea:	0280      	lsls	r0, r0, #10
 800edec:	4770      	bx	lr
 800edee:	bf00      	nop
 800edf0:	1ffff700 	svcne	0x00fff700

0800edf4 <FlashRom::GetSectorSize() const>:
 800edf4:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 800edf8:	4770      	bx	lr

0800edfa <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)>:
 800edfa:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800edfe:	441a      	add	r2, r3
 800ee00:	4293      	cmp	r3, r2
 800ee02:	d104      	bne.n	800ee0e <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)+0x14>
 800ee04:	2200      	movs	r2, #0
 800ee06:	9b00      	ldr	r3, [sp, #0]
 800ee08:	2001      	movs	r0, #1
 800ee0a:	601a      	str	r2, [r3, #0]
 800ee0c:	4770      	bx	lr
 800ee0e:	f851 0b04 	ldr.w	r0, [r1], #4
 800ee12:	f843 0b04 	str.w	r0, [r3], #4
 800ee16:	e7f3      	b.n	800ee00 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)+0x6>

0800ee18 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)>:
 800ee18:	2000      	movs	r0, #0
 800ee1a:	b538      	push	{r3, r4, r5, lr}
 800ee1c:	4c47      	ldr	r4, [pc, #284]	; (800ef3c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x124>)
 800ee1e:	6018      	str	r0, [r3, #0]
 800ee20:	6823      	ldr	r3, [r4, #0]
 800ee22:	2b04      	cmp	r3, #4
 800ee24:	f200 8082 	bhi.w	800ef2c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x114>
 800ee28:	e8df f003 	tbb	[pc, r3]
 800ee2c:	78452003 	stmdavc	r5, {r0, r1, sp}^
 800ee30:	4b430080 	blmi	90cf038 <__exidx_end+0x10b736c>
 800ee34:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800ee38:	6019      	str	r1, [r3, #0]
 800ee3a:	4b42      	ldr	r3, [pc, #264]	; (800ef44 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800ee3c:	601a      	str	r2, [r3, #0]
 800ee3e:	4b42      	ldr	r3, [pc, #264]	; (800ef48 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x130>)
 800ee40:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800ee44:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800ee48:	4b40      	ldr	r3, [pc, #256]	; (800ef4c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800ee4a:	d807      	bhi.n	800ee5c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x44>
 800ee4c:	2201      	movs	r2, #1
 800ee4e:	701a      	strb	r2, [r3, #0]
 800ee50:	f003 ffb0 	bl	8012db4 <fmc_bank0_unlock>
 800ee54:	2301      	movs	r3, #1
 800ee56:	6023      	str	r3, [r4, #0]
 800ee58:	2000      	movs	r0, #0
 800ee5a:	e026      	b.n	800eeaa <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x92>
 800ee5c:	4a3c      	ldr	r2, [pc, #240]	; (800ef50 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x138>)
 800ee5e:	4291      	cmp	r1, r2
 800ee60:	d3f4      	bcc.n	800ee4c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x34>
 800ee62:	2200      	movs	r2, #0
 800ee64:	701a      	strb	r2, [r3, #0]
 800ee66:	f003 ffb3 	bl	8012dd0 <fmc_bank1_unlock>
 800ee6a:	e7f3      	b.n	800ee54 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 800ee6c:	4d37      	ldr	r5, [pc, #220]	; (800ef4c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800ee6e:	782b      	ldrb	r3, [r5, #0]
 800ee70:	b15b      	cbz	r3, 800ee8a <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x72>
 800ee72:	f003 ffcb 	bl	8012e0c <fmc_bank0_state_get>
 800ee76:	2801      	cmp	r0, #1
 800ee78:	d0ee      	beq.n	800ee58 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x40>
 800ee7a:	7829      	ldrb	r1, [r5, #0]
 800ee7c:	4b35      	ldr	r3, [pc, #212]	; (800ef54 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800ee7e:	b939      	cbnz	r1, 800ee90 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x78>
 800ee80:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800ee82:	f022 0202 	bic.w	r2, r2, #2
 800ee86:	651a      	str	r2, [r3, #80]	; 0x50
 800ee88:	e006      	b.n	800ee98 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x80>
 800ee8a:	f003 ffd1 	bl	8012e30 <fmc_bank1_state_get>
 800ee8e:	e7f2      	b.n	800ee76 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x5e>
 800ee90:	691a      	ldr	r2, [r3, #16]
 800ee92:	f022 0202 	bic.w	r2, r2, #2
 800ee96:	611a      	str	r2, [r3, #16]
 800ee98:	4b2a      	ldr	r3, [pc, #168]	; (800ef44 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800ee9a:	681b      	ldr	r3, [r3, #0]
 800ee9c:	b94b      	cbnz	r3, 800eeb2 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x9a>
 800ee9e:	b129      	cbz	r1, 800eeac <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x94>
 800eea0:	f003 ffa4 	bl	8012dec <fmc_bank0_lock>
 800eea4:	2300      	movs	r3, #0
 800eea6:	2001      	movs	r0, #1
 800eea8:	6023      	str	r3, [r4, #0]
 800eeaa:	bd38      	pop	{r3, r4, r5, pc}
 800eeac:	f003 ffa6 	bl	8012dfc <fmc_bank1_lock>
 800eeb0:	e7f8      	b.n	800eea4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x8c>
 800eeb2:	2302      	movs	r3, #2
 800eeb4:	e7cf      	b.n	800ee56 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3e>
 800eeb6:	4923      	ldr	r1, [pc, #140]	; (800ef44 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800eeb8:	680b      	ldr	r3, [r1, #0]
 800eeba:	2b00      	cmp	r3, #0
 800eebc:	d0ca      	beq.n	800ee54 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 800eebe:	4b23      	ldr	r3, [pc, #140]	; (800ef4c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800eec0:	4a1f      	ldr	r2, [pc, #124]	; (800ef40 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x128>)
 800eec2:	7818      	ldrb	r0, [r3, #0]
 800eec4:	4b23      	ldr	r3, [pc, #140]	; (800ef54 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800eec6:	b190      	cbz	r0, 800eeee <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0xd6>
 800eec8:	6918      	ldr	r0, [r3, #16]
 800eeca:	f040 0002 	orr.w	r0, r0, #2
 800eece:	6118      	str	r0, [r3, #16]
 800eed0:	6810      	ldr	r0, [r2, #0]
 800eed2:	6158      	str	r0, [r3, #20]
 800eed4:	6918      	ldr	r0, [r3, #16]
 800eed6:	f040 0040 	orr.w	r0, r0, #64	; 0x40
 800eeda:	6118      	str	r0, [r3, #16]
 800eedc:	680b      	ldr	r3, [r1, #0]
 800eede:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 800eee2:	600b      	str	r3, [r1, #0]
 800eee4:	6813      	ldr	r3, [r2, #0]
 800eee6:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800eeea:	6013      	str	r3, [r2, #0]
 800eeec:	e7b2      	b.n	800ee54 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 800eeee:	6d18      	ldr	r0, [r3, #80]	; 0x50
 800eef0:	f040 0002 	orr.w	r0, r0, #2
 800eef4:	6518      	str	r0, [r3, #80]	; 0x50
 800eef6:	6810      	ldr	r0, [r2, #0]
 800eef8:	6558      	str	r0, [r3, #84]	; 0x54
 800eefa:	69dd      	ldr	r5, [r3, #28]
 800eefc:	07ad      	lsls	r5, r5, #30
 800eefe:	bf48      	it	mi
 800ef00:	6158      	strmi	r0, [r3, #20]
 800ef02:	4814      	ldr	r0, [pc, #80]	; (800ef54 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800ef04:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800ef06:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800ef0a:	6503      	str	r3, [r0, #80]	; 0x50
 800ef0c:	680b      	ldr	r3, [r1, #0]
 800ef0e:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
 800ef12:	600b      	str	r3, [r1, #0]
 800ef14:	6813      	ldr	r3, [r2, #0]
 800ef16:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800ef1a:	e7e6      	b.n	800eeea <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0xd2>
 800ef1c:	4b0b      	ldr	r3, [pc, #44]	; (800ef4c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800ef1e:	781a      	ldrb	r2, [r3, #0]
 800ef20:	4b0c      	ldr	r3, [pc, #48]	; (800ef54 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800ef22:	b132      	cbz	r2, 800ef32 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x11a>
 800ef24:	691a      	ldr	r2, [r3, #16]
 800ef26:	f022 0201 	bic.w	r2, r2, #1
 800ef2a:	611a      	str	r2, [r3, #16]
 800ef2c:	2000      	movs	r0, #0
 800ef2e:	6020      	str	r0, [r4, #0]
 800ef30:	e7bb      	b.n	800eeaa <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x92>
 800ef32:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800ef34:	f022 0201 	bic.w	r2, r2, #1
 800ef38:	651a      	str	r2, [r3, #80]	; 0x50
 800ef3a:	e7f7      	b.n	800ef2c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x114>
 800ef3c:	20015a68 	andcs	r5, r1, r8, ror #20
 800ef40:	20015a6c 	andcs	r5, r1, ip, ror #20
 800ef44:	20015a78 	andcs	r5, r1, r8, ror sl
 800ef48:	1ffff700 	svcne	0x00fff700
 800ef4c:	20015a74 	andcs	r5, r1, r4, ror sl
 800ef50:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 800ef54:	40022000 	andmi	r2, r2, r0

0800ef58 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)>:
 800ef58:	b570      	push	{r4, r5, r6, lr}
 800ef5a:	2400      	movs	r4, #0
 800ef5c:	9804      	ldr	r0, [sp, #16]
 800ef5e:	6004      	str	r4, [r0, #0]
 800ef60:	4c48      	ldr	r4, [pc, #288]	; (800f084 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x12c>)
 800ef62:	6820      	ldr	r0, [r4, #0]
 800ef64:	2804      	cmp	r0, #4
 800ef66:	d848      	bhi.n	800effa <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xa2>
 800ef68:	e8df f000 	tbb	[pc, r0]
 800ef6c:	22847c03 	addcs	r7, r4, #768	; 0x300
 800ef70:	48450047 	stmdami	r5, {r0, r1, r2, r6}^
 800ef74:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800ef78:	6001      	str	r1, [r0, #0]
 800ef7a:	4844      	ldr	r0, [pc, #272]	; (800f08c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 800ef7c:	6003      	str	r3, [r0, #0]
 800ef7e:	4b44      	ldr	r3, [pc, #272]	; (800f090 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 800ef80:	601a      	str	r2, [r3, #0]
 800ef82:	4b44      	ldr	r3, [pc, #272]	; (800f094 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x13c>)
 800ef84:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800ef88:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800ef8c:	4b42      	ldr	r3, [pc, #264]	; (800f098 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800ef8e:	d807      	bhi.n	800efa0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x48>
 800ef90:	2201      	movs	r2, #1
 800ef92:	701a      	strb	r2, [r3, #0]
 800ef94:	f003 ff0e 	bl	8012db4 <fmc_bank0_unlock>
 800ef98:	2303      	movs	r3, #3
 800ef9a:	6023      	str	r3, [r4, #0]
 800ef9c:	2000      	movs	r0, #0
 800ef9e:	e026      	b.n	800efee <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x96>
 800efa0:	4a3e      	ldr	r2, [pc, #248]	; (800f09c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x144>)
 800efa2:	4291      	cmp	r1, r2
 800efa4:	d3f4      	bcc.n	800ef90 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x38>
 800efa6:	2200      	movs	r2, #0
 800efa8:	701a      	strb	r2, [r3, #0]
 800efaa:	f003 ff11 	bl	8012dd0 <fmc_bank1_unlock>
 800efae:	e7f3      	b.n	800ef98 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800efb0:	4d39      	ldr	r5, [pc, #228]	; (800f098 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800efb2:	782b      	ldrb	r3, [r5, #0]
 800efb4:	b15b      	cbz	r3, 800efce <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x76>
 800efb6:	f003 ff29 	bl	8012e0c <fmc_bank0_state_get>
 800efba:	2801      	cmp	r0, #1
 800efbc:	d0ee      	beq.n	800ef9c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x44>
 800efbe:	7829      	ldrb	r1, [r5, #0]
 800efc0:	4b37      	ldr	r3, [pc, #220]	; (800f0a0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800efc2:	b939      	cbnz	r1, 800efd4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x7c>
 800efc4:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800efc6:	f022 0201 	bic.w	r2, r2, #1
 800efca:	651a      	str	r2, [r3, #80]	; 0x50
 800efcc:	e006      	b.n	800efdc <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x84>
 800efce:	f003 ff2f 	bl	8012e30 <fmc_bank1_state_get>
 800efd2:	e7f2      	b.n	800efba <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x62>
 800efd4:	691a      	ldr	r2, [r3, #16]
 800efd6:	f022 0201 	bic.w	r2, r2, #1
 800efda:	611a      	str	r2, [r3, #16]
 800efdc:	4b2c      	ldr	r3, [pc, #176]	; (800f090 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 800efde:	681b      	ldr	r3, [r3, #0]
 800efe0:	b94b      	cbnz	r3, 800eff6 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x9e>
 800efe2:	b129      	cbz	r1, 800eff0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x98>
 800efe4:	f003 ff02 	bl	8012dec <fmc_bank0_lock>
 800efe8:	2300      	movs	r3, #0
 800efea:	2001      	movs	r0, #1
 800efec:	6023      	str	r3, [r4, #0]
 800efee:	bd70      	pop	{r4, r5, r6, pc}
 800eff0:	f003 ff04 	bl	8012dfc <fmc_bank1_lock>
 800eff4:	e7f8      	b.n	800efe8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x90>
 800eff6:	2304      	movs	r3, #4
 800eff8:	e7cf      	b.n	800ef9a <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x42>
 800effa:	4a25      	ldr	r2, [pc, #148]	; (800f090 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 800effc:	6813      	ldr	r3, [r2, #0]
 800effe:	2b03      	cmp	r3, #3
 800f000:	d91a      	bls.n	800f038 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xe0>
 800f002:	4b25      	ldr	r3, [pc, #148]	; (800f098 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800f004:	7819      	ldrb	r1, [r3, #0]
 800f006:	4b26      	ldr	r3, [pc, #152]	; (800f0a0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800f008:	b189      	cbz	r1, 800f02e <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xd6>
 800f00a:	6919      	ldr	r1, [r3, #16]
 800f00c:	f041 0101 	orr.w	r1, r1, #1
 800f010:	6119      	str	r1, [r3, #16]
 800f012:	4d1e      	ldr	r5, [pc, #120]	; (800f08c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 800f014:	481c      	ldr	r0, [pc, #112]	; (800f088 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x130>)
 800f016:	6829      	ldr	r1, [r5, #0]
 800f018:	6803      	ldr	r3, [r0, #0]
 800f01a:	f851 6b04 	ldr.w	r6, [r1], #4
 800f01e:	f843 6b04 	str.w	r6, [r3], #4
 800f022:	6003      	str	r3, [r0, #0]
 800f024:	6813      	ldr	r3, [r2, #0]
 800f026:	6029      	str	r1, [r5, #0]
 800f028:	3b04      	subs	r3, #4
 800f02a:	6013      	str	r3, [r2, #0]
 800f02c:	e7b4      	b.n	800ef98 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800f02e:	6d19      	ldr	r1, [r3, #80]	; 0x50
 800f030:	f041 0101 	orr.w	r1, r1, #1
 800f034:	6519      	str	r1, [r3, #80]	; 0x50
 800f036:	e7ec      	b.n	800f012 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xba>
 800f038:	2b00      	cmp	r3, #0
 800f03a:	d0ad      	beq.n	800ef98 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800f03c:	4b16      	ldr	r3, [pc, #88]	; (800f098 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800f03e:	781a      	ldrb	r2, [r3, #0]
 800f040:	4b17      	ldr	r3, [pc, #92]	; (800f0a0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800f042:	b152      	cbz	r2, 800f05a <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x102>
 800f044:	691a      	ldr	r2, [r3, #16]
 800f046:	f042 0201 	orr.w	r2, r2, #1
 800f04a:	611a      	str	r2, [r3, #16]
 800f04c:	4a0f      	ldr	r2, [pc, #60]	; (800f08c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 800f04e:	4b0e      	ldr	r3, [pc, #56]	; (800f088 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x130>)
 800f050:	6812      	ldr	r2, [r2, #0]
 800f052:	681b      	ldr	r3, [r3, #0]
 800f054:	6812      	ldr	r2, [r2, #0]
 800f056:	601a      	str	r2, [r3, #0]
 800f058:	e79e      	b.n	800ef98 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800f05a:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800f05c:	f042 0201 	orr.w	r2, r2, #1
 800f060:	651a      	str	r2, [r3, #80]	; 0x50
 800f062:	e7f3      	b.n	800f04c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xf4>
 800f064:	4b0c      	ldr	r3, [pc, #48]	; (800f098 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800f066:	781a      	ldrb	r2, [r3, #0]
 800f068:	4b0d      	ldr	r3, [pc, #52]	; (800f0a0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800f06a:	b132      	cbz	r2, 800f07a <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x122>
 800f06c:	691a      	ldr	r2, [r3, #16]
 800f06e:	f022 0202 	bic.w	r2, r2, #2
 800f072:	611a      	str	r2, [r3, #16]
 800f074:	2000      	movs	r0, #0
 800f076:	6020      	str	r0, [r4, #0]
 800f078:	e7b9      	b.n	800efee <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x96>
 800f07a:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800f07c:	f022 0202 	bic.w	r2, r2, #2
 800f080:	651a      	str	r2, [r3, #80]	; 0x50
 800f082:	e7f7      	b.n	800f074 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x11c>
 800f084:	20015a68 	andcs	r5, r1, r8, ror #20
 800f088:	20015a64 	andcs	r5, r1, r4, ror #20
 800f08c:	20015a70 	andcs	r5, r1, r0, ror sl
 800f090:	20015a78 	andcs	r5, r1, r8, ror sl
 800f094:	1ffff700 	svcne	0x00fff700
 800f098:	20015a74 	andcs	r5, r1, r4, ror sl
 800f09c:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 800f0a0:	40022000 	andmi	r2, r2, r0

0800f0a4 <net_set_ip>:
 800f0a4:	b510      	push	{r4, lr}
 800f0a6:	4c05      	ldr	r4, [pc, #20]	; (800f0bc <net_set_ip+0x18>)
 800f0a8:	6020      	str	r0, [r4, #0]
 800f0aa:	4621      	mov	r1, r4
 800f0ac:	4804      	ldr	r0, [pc, #16]	; (800f0c0 <net_set_ip+0x1c>)
 800f0ae:	f7f8 f935 	bl	800731c <arp_init>
 800f0b2:	4620      	mov	r0, r4
 800f0b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f0b8:	f002 b888 	b.w	80111cc <ip_set_ip>
 800f0bc:	20015a7c 	andcs	r5, r1, ip, ror sl
 800f0c0:	20015a88 	andcs	r5, r1, r8, lsl #21

0800f0c4 <net_set_dhcp>:
 800f0c4:	b570      	push	{r4, r5, r6, lr}
 800f0c6:	2400      	movs	r4, #0
 800f0c8:	4605      	mov	r5, r0
 800f0ca:	7014      	strb	r4, [r2, #0]
 800f0cc:	4616      	mov	r6, r2
 800f0ce:	4810      	ldr	r0, [pc, #64]	; (800f110 <net_set_dhcp+0x4c>)
 800f0d0:	460a      	mov	r2, r1
 800f0d2:	4910      	ldr	r1, [pc, #64]	; (800f114 <net_set_dhcp+0x50>)
 800f0d4:	f001 fe5a 	bl	8010d8c <dhcp_client>
 800f0d8:	42a0      	cmp	r0, r4
 800f0da:	da17      	bge.n	800f10c <net_set_dhcp+0x48>
 800f0dc:	480d      	ldr	r0, [pc, #52]	; (800f114 <net_set_dhcp+0x50>)
 800f0de:	f000 f859 	bl	800f194 <rfc3927>
 800f0e2:	7030      	strb	r0, [r6, #0]
 800f0e4:	490b      	ldr	r1, [pc, #44]	; (800f114 <net_set_dhcp+0x50>)
 800f0e6:	480a      	ldr	r0, [pc, #40]	; (800f110 <net_set_dhcp+0x4c>)
 800f0e8:	f7f8 f918 	bl	800731c <arp_init>
 800f0ec:	4809      	ldr	r0, [pc, #36]	; (800f114 <net_set_dhcp+0x50>)
 800f0ee:	f002 f86d 	bl	80111cc <ip_set_ip>
 800f0f2:	4a08      	ldr	r2, [pc, #32]	; (800f114 <net_set_dhcp+0x50>)
 800f0f4:	1e6b      	subs	r3, r5, #1
 800f0f6:	350b      	adds	r5, #11
 800f0f8:	f812 1b01 	ldrb.w	r1, [r2], #1
 800f0fc:	f803 1f01 	strb.w	r1, [r3, #1]!
 800f100:	42ab      	cmp	r3, r5
 800f102:	d1f9      	bne.n	800f0f8 <net_set_dhcp+0x34>
 800f104:	4b04      	ldr	r3, [pc, #16]	; (800f118 <net_set_dhcp+0x54>)
 800f106:	4620      	mov	r0, r4
 800f108:	701c      	strb	r4, [r3, #0]
 800f10a:	bd70      	pop	{r4, r5, r6, pc}
 800f10c:	2401      	movs	r4, #1
 800f10e:	e7e9      	b.n	800f0e4 <net_set_dhcp+0x20>
 800f110:	20015a88 	andcs	r5, r1, r8, lsl #21
 800f114:	20015a7c 	andcs	r5, r1, ip, ror sl
 800f118:	20015a8e 	andcs	r5, r1, lr, lsl #21

0800f11c <net_dhcp_release>:
 800f11c:	b508      	push	{r3, lr}
 800f11e:	f001 ff3d 	bl	8010f9c <dhcp_client_release>
 800f122:	2200      	movs	r2, #0
 800f124:	4b01      	ldr	r3, [pc, #4]	; (800f12c <net_dhcp_release+0x10>)
 800f126:	701a      	strb	r2, [r3, #0]
 800f128:	bd08      	pop	{r3, pc}
 800f12a:	bf00      	nop
 800f12c:	20015a8e 	andcs	r5, r1, lr, lsl #21

0800f130 <net_set_zeroconf>:
 800f130:	b538      	push	{r3, r4, r5, lr}
 800f132:	4604      	mov	r4, r0
 800f134:	480c      	ldr	r0, [pc, #48]	; (800f168 <net_set_zeroconf+0x38>)
 800f136:	f000 f82d 	bl	800f194 <rfc3927>
 800f13a:	4605      	mov	r5, r0
 800f13c:	b190      	cbz	r0, 800f164 <net_set_zeroconf+0x34>
 800f13e:	490a      	ldr	r1, [pc, #40]	; (800f168 <net_set_zeroconf+0x38>)
 800f140:	480a      	ldr	r0, [pc, #40]	; (800f16c <net_set_zeroconf+0x3c>)
 800f142:	f7f8 f8eb 	bl	800731c <arp_init>
 800f146:	4808      	ldr	r0, [pc, #32]	; (800f168 <net_set_zeroconf+0x38>)
 800f148:	f002 f840 	bl	80111cc <ip_set_ip>
 800f14c:	4a06      	ldr	r2, [pc, #24]	; (800f168 <net_set_zeroconf+0x38>)
 800f14e:	1e63      	subs	r3, r4, #1
 800f150:	340b      	adds	r4, #11
 800f152:	f812 1b01 	ldrb.w	r1, [r2], #1
 800f156:	f803 1f01 	strb.w	r1, [r3, #1]!
 800f15a:	42a3      	cmp	r3, r4
 800f15c:	d1f9      	bne.n	800f152 <net_set_zeroconf+0x22>
 800f15e:	2200      	movs	r2, #0
 800f160:	4b03      	ldr	r3, [pc, #12]	; (800f170 <net_set_zeroconf+0x40>)
 800f162:	701a      	strb	r2, [r3, #0]
 800f164:	4628      	mov	r0, r5
 800f166:	bd38      	pop	{r3, r4, r5, pc}
 800f168:	20015a7c 	andcs	r5, r1, ip, ror sl
 800f16c:	20015a88 	andcs	r5, r1, r8, lsl #21
 800f170:	20015a8e 	andcs	r5, r1, lr, lsl #21

0800f174 <net_timers_run>:
 800f174:	4b05      	ldr	r3, [pc, #20]	; (800f18c <net_timers_run+0x18>)
 800f176:	4a06      	ldr	r2, [pc, #24]	; (800f190 <net_timers_run+0x1c>)
 800f178:	681b      	ldr	r3, [r3, #0]
 800f17a:	6811      	ldr	r1, [r2, #0]
 800f17c:	4299      	cmp	r1, r3
 800f17e:	d803      	bhi.n	800f188 <net_timers_run+0x14>
 800f180:	3364      	adds	r3, #100	; 0x64
 800f182:	6013      	str	r3, [r2, #0]
 800f184:	f001 bf98 	b.w	80110b8 <igmp_timer>
 800f188:	4770      	bx	lr
 800f18a:	bf00      	nop
 800f18c:	2001da24 	andcs	sp, r1, r4, lsr #20
 800f190:	20015a94 	mulcs	r1, r4, sl

0800f194 <rfc3927>:
 800f194:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f198:	4606      	mov	r6, r0
 800f19a:	25ff      	movs	r5, #255	; 0xff
 800f19c:	4b18      	ldr	r3, [pc, #96]	; (800f200 <rfc3927+0x6c>)
 800f19e:	4f19      	ldr	r7, [pc, #100]	; (800f204 <rfc3927+0x70>)
 800f1a0:	791a      	ldrb	r2, [r3, #4]
 800f1a2:	78dc      	ldrb	r4, [r3, #3]
 800f1a4:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800f208 <rfc3927+0x74>
 800f1a8:	eb04 2402 	add.w	r4, r4, r2, lsl #8
 800f1ac:	f8d7 9000 	ldr.w	r9, [r7]
 800f1b0:	f8df b058 	ldr.w	fp, [pc, #88]	; 800f20c <rfc3927+0x78>
 800f1b4:	f8df a058 	ldr.w	sl, [pc, #88]	; 800f210 <rfc3927+0x7c>
 800f1b8:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
 800f1bc:	4659      	mov	r1, fp
 800f1be:	4620      	mov	r0, r4
 800f1c0:	f001 fcd8 	bl	8010b74 <arp_cache_lookup>
 800f1c4:	b190      	cbz	r0, 800f1ec <rfc3927+0x58>
 800f1c6:	ba24      	rev	r4, r4
 800f1c8:	3401      	adds	r4, #1
 800f1ca:	3d01      	subs	r5, #1
 800f1cc:	ba24      	rev	r4, r4
 800f1ce:	b2ad      	uxth	r5, r5
 800f1d0:	4554      	cmp	r4, sl
 800f1d2:	bf08      	it	eq
 800f1d4:	4644      	moveq	r4, r8
 800f1d6:	b18d      	cbz	r5, 800f1fc <rfc3927+0x68>
 800f1d8:	683b      	ldr	r3, [r7, #0]
 800f1da:	eba3 0309 	sub.w	r3, r3, r9
 800f1de:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800f1e2:	d3eb      	bcc.n	800f1bc <rfc3927+0x28>
 800f1e4:	2400      	movs	r4, #0
 800f1e6:	4623      	mov	r3, r4
 800f1e8:	4620      	mov	r0, r4
 800f1ea:	e002      	b.n	800f1f2 <rfc3927+0x5e>
 800f1ec:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800f1f0:	2001      	movs	r0, #1
 800f1f2:	e9c6 3401 	strd	r3, r4, [r6, #4]
 800f1f6:	6034      	str	r4, [r6, #0]
 800f1f8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f1fc:	462c      	mov	r4, r5
 800f1fe:	e7f2      	b.n	800f1e6 <rfc3927+0x52>
 800f200:	20015a98 	mulcs	r1, r8, sl
 800f204:	2001da24 	andcs	sp, r1, r4, lsr #20
 800f208:	0100fea9 	smlatbeq	r0, r9, lr, pc	; <UNPREDICTABLE>
 800f20c:	20015aa0 	andcs	r5, r1, r0, lsr #21
 800f210:	fffefea9 			; <UNDEFINED> instruction: 0xfffefea9

0800f214 <_init_tcb>:
 800f214:	b510      	push	{r4, lr}
 800f216:	4603      	mov	r3, r0
 800f218:	2400      	movs	r4, #0
 800f21a:	f100 0244 	add.w	r2, r0, #68	; 0x44
 800f21e:	4293      	cmp	r3, r2
 800f220:	d10d      	bne.n	800f23e <_init_tcb+0x2a>
 800f222:	4b08      	ldr	r3, [pc, #32]	; (800f244 <_init_tcb+0x30>)
 800f224:	f640 3268 	movw	r2, #2920	; 0xb68
 800f228:	681b      	ldr	r3, [r3, #0]
 800f22a:	8702      	strh	r2, [r0, #56]	; 0x38
 800f22c:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800f230:	6283      	str	r3, [r0, #40]	; 0x28
 800f232:	6243      	str	r3, [r0, #36]	; 0x24
 800f234:	2301      	movs	r3, #1
 800f236:	8001      	strh	r1, [r0, #0]
 800f238:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
 800f23c:	bd10      	pop	{r4, pc}
 800f23e:	f803 4b01 	strb.w	r4, [r3], #1
 800f242:	e7ec      	b.n	800f21e <_init_tcb+0xa>
 800f244:	2001da24 	andcs	sp, r1, r4, lsr #20

0800f248 <memcpy.isra.0>:
 800f248:	3801      	subs	r0, #1
 800f24a:	440a      	add	r2, r1
 800f24c:	4291      	cmp	r1, r2
 800f24e:	d100      	bne.n	800f252 <memcpy.isra.0+0xa>
 800f250:	4770      	bx	lr
 800f252:	f811 3b01 	ldrb.w	r3, [r1], #1
 800f256:	f800 3f01 	strb.w	r3, [r0, #1]!
 800f25a:	e7f7      	b.n	800f24c <memcpy.isra.0+0x4>

0800f25c <_bswap32>:
 800f25c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f25e:	2204      	movs	r2, #4
 800f260:	f100 052a 	add.w	r5, r0, #42	; 0x2a
 800f264:	4629      	mov	r1, r5
 800f266:	4604      	mov	r4, r0
 800f268:	eb0d 0002 	add.w	r0, sp, r2
 800f26c:	f7ff ffec 	bl	800f248 <memcpy.isra.0>
 800f270:	2204      	movs	r2, #4
 800f272:	9b01      	ldr	r3, [sp, #4]
 800f274:	eb0d 0102 	add.w	r1, sp, r2
 800f278:	ba1b      	rev	r3, r3
 800f27a:	4628      	mov	r0, r5
 800f27c:	9301      	str	r3, [sp, #4]
 800f27e:	f7ff ffe3 	bl	800f248 <memcpy.isra.0>
 800f282:	2204      	movs	r2, #4
 800f284:	3426      	adds	r4, #38	; 0x26
 800f286:	eb0d 0002 	add.w	r0, sp, r2
 800f28a:	4621      	mov	r1, r4
 800f28c:	f7ff ffdc 	bl	800f248 <memcpy.isra.0>
 800f290:	2204      	movs	r2, #4
 800f292:	9b01      	ldr	r3, [sp, #4]
 800f294:	4620      	mov	r0, r4
 800f296:	ba1b      	rev	r3, r3
 800f298:	eb0d 0102 	add.w	r1, sp, r2
 800f29c:	9301      	str	r3, [sp, #4]
 800f29e:	f7ff ffd3 	bl	800f248 <memcpy.isra.0>
 800f2a2:	b003      	add	sp, #12
 800f2a4:	bd30      	pop	{r4, r5, pc}
	...

0800f2a8 <_tcp_send_package>:
 800f2a8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800f2ac:	7a0b      	ldrb	r3, [r1, #8]
 800f2ae:	4605      	mov	r5, r0
 800f2b0:	f013 0f02 	tst.w	r3, #2
 800f2b4:	bf0c      	ite	eq
 800f2b6:	f04f 0805 	moveq.w	r8, #5
 800f2ba:	f04f 0806 	movne.w	r8, #6
 800f2be:	f04f 0a00 	mov.w	sl, #0
 800f2c2:	4c47      	ldr	r4, [pc, #284]	; (800f3e0 <_tcp_send_package+0x138>)
 800f2c4:	460f      	mov	r7, r1
 800f2c6:	8e06      	ldrh	r6, [r0, #48]	; 0x30
 800f2c8:	f100 0108 	add.w	r1, r0, #8
 800f2cc:	2206      	movs	r2, #6
 800f2ce:	4620      	mov	r0, r4
 800f2d0:	f7ff ffba 	bl	800f248 <memcpy.isra.0>
 800f2d4:	4a43      	ldr	r2, [pc, #268]	; (800f3e4 <_tcp_send_package+0x13c>)
 800f2d6:	eb06 0688 	add.w	r6, r6, r8, lsl #2
 800f2da:	8813      	ldrh	r3, [r2, #0]
 800f2dc:	b2b6      	uxth	r6, r6
 800f2de:	1c59      	adds	r1, r3, #1
 800f2e0:	8263      	strh	r3, [r4, #18]
 800f2e2:	f105 0904 	add.w	r9, r5, #4
 800f2e6:	f106 0314 	add.w	r3, r6, #20
 800f2ea:	ba5b      	rev16	r3, r3
 800f2ec:	8011      	strh	r1, [r2, #0]
 800f2ee:	f104 001e 	add.w	r0, r4, #30
 800f2f2:	2204      	movs	r2, #4
 800f2f4:	4649      	mov	r1, r9
 800f2f6:	8223      	strh	r3, [r4, #16]
 800f2f8:	f7ff ffa6 	bl	800f248 <memcpy.isra.0>
 800f2fc:	2114      	movs	r1, #20
 800f2fe:	f104 000e 	add.w	r0, r4, #14
 800f302:	f8a4 a018 	strh.w	sl, [r4, #24]
 800f306:	f001 ff6a 	bl	80111de <net_chksum>
 800f30a:	882b      	ldrh	r3, [r5, #0]
 800f30c:	ea4f 1808 	mov.w	r8, r8, lsl #4
 800f310:	8463      	strh	r3, [r4, #34]	; 0x22
 800f312:	886b      	ldrh	r3, [r5, #2]
 800f314:	8320      	strh	r0, [r4, #24]
 800f316:	84a3      	strh	r3, [r4, #36]	; 0x24
 800f318:	683b      	ldr	r3, [r7, #0]
 800f31a:	8f2a      	ldrh	r2, [r5, #56]	; 0x38
 800f31c:	f8c4 3026 	str.w	r3, [r4, #38]	; 0x26
 800f320:	687b      	ldr	r3, [r7, #4]
 800f322:	f884 802e 	strb.w	r8, [r4, #46]	; 0x2e
 800f326:	f8c4 302a 	str.w	r3, [r4, #42]	; 0x2a
 800f32a:	7a3b      	ldrb	r3, [r7, #8]
 800f32c:	8622      	strh	r2, [r4, #48]	; 0x30
 800f32e:	f884 302f 	strb.w	r3, [r4, #47]	; 0x2f
 800f332:	079b      	lsls	r3, r3, #30
 800f334:	bf48      	it	mi
 800f336:	f240 4302 	movwmi	r3, #1026	; 0x402
 800f33a:	8baa      	ldrh	r2, [r5, #28]
 800f33c:	bf48      	it	mi
 800f33e:	86e3      	strhmi	r3, [r4, #54]	; 0x36
 800f340:	86a2      	strh	r2, [r4, #52]	; 0x34
 800f342:	bf42      	ittt	mi
 800f344:	f24b 4305 	movwmi	r3, #46085	; 0xb405
 800f348:	4622      	movmi	r2, r4
 800f34a:	f822 3f38 	strhmi.w	r3, [r2, #56]!
 800f34e:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800f350:	f8a4 a032 	strh.w	sl, [r4, #50]	; 0x32
 800f354:	bf58      	it	pl
 800f356:	f104 0236 	addpl.w	r2, r4, #54	; 0x36
 800f35a:	2b00      	cmp	r3, #0
 800f35c:	d13e      	bne.n	800f3dc <_tcp_send_package+0x134>
 800f35e:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 800f360:	481f      	ldr	r0, [pc, #124]	; (800f3e0 <_tcp_send_package+0x138>)
 800f362:	ba5b      	rev16	r3, r3
 800f364:	8463      	strh	r3, [r4, #34]	; 0x22
 800f366:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 800f368:	ba5b      	rev16	r3, r3
 800f36a:	84a3      	strh	r3, [r4, #36]	; 0x24
 800f36c:	f7ff ff76 	bl	800f25c <_bswap32>
 800f370:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800f372:	a801      	add	r0, sp, #4
 800f374:	ba5b      	rev16	r3, r3
 800f376:	8623      	strh	r3, [r4, #48]	; 0x30
 800f378:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800f37a:	220c      	movs	r2, #12
 800f37c:	ba5b      	rev16	r3, r3
 800f37e:	491a      	ldr	r1, [pc, #104]	; (800f3e8 <_tcp_send_package+0x140>)
 800f380:	86a3      	strh	r3, [r4, #52]	; 0x34
 800f382:	f7ff ff61 	bl	800f248 <memcpy.isra.0>
 800f386:	2204      	movs	r2, #4
 800f388:	4918      	ldr	r1, [pc, #96]	; (800f3ec <_tcp_send_package+0x144>)
 800f38a:	4817      	ldr	r0, [pc, #92]	; (800f3e8 <_tcp_send_package+0x140>)
 800f38c:	f7ff ff5c 	bl	800f248 <memcpy.isra.0>
 800f390:	2204      	movs	r2, #4
 800f392:	4649      	mov	r1, r9
 800f394:	4816      	ldr	r0, [pc, #88]	; (800f3f0 <_tcp_send_package+0x148>)
 800f396:	f7ff ff57 	bl	800f248 <memcpy.isra.0>
 800f39a:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 800f39e:	f106 010c 	add.w	r1, r6, #12
 800f3a2:	83e3      	strh	r3, [r4, #30]
 800f3a4:	4810      	ldr	r0, [pc, #64]	; (800f3e8 <_tcp_send_package+0x140>)
 800f3a6:	ba73      	rev16	r3, r6
 800f3a8:	8423      	strh	r3, [r4, #32]
 800f3aa:	f001 ff18 	bl	80111de <net_chksum>
 800f3ae:	a901      	add	r1, sp, #4
 800f3b0:	4605      	mov	r5, r0
 800f3b2:	220c      	movs	r2, #12
 800f3b4:	480c      	ldr	r0, [pc, #48]	; (800f3e8 <_tcp_send_package+0x140>)
 800f3b6:	f7ff ff47 	bl	800f248 <memcpy.isra.0>
 800f3ba:	4809      	ldr	r0, [pc, #36]	; (800f3e0 <_tcp_send_package+0x138>)
 800f3bc:	f106 0122 	add.w	r1, r6, #34	; 0x22
 800f3c0:	8665      	strh	r5, [r4, #50]	; 0x32
 800f3c2:	b004      	add	sp, #16
 800f3c4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f3c8:	f004 bae0 	b.w	801398c <emac_eth_send>
 800f3cc:	6ae9      	ldr	r1, [r5, #44]	; 0x2c
 800f3ce:	5cc9      	ldrb	r1, [r1, r3]
 800f3d0:	54d1      	strb	r1, [r2, r3]
 800f3d2:	3301      	adds	r3, #1
 800f3d4:	8e29      	ldrh	r1, [r5, #48]	; 0x30
 800f3d6:	4299      	cmp	r1, r3
 800f3d8:	d8f8      	bhi.n	800f3cc <_tcp_send_package+0x124>
 800f3da:	e7c0      	b.n	800f35e <_tcp_send_package+0xb6>
 800f3dc:	2300      	movs	r3, #0
 800f3de:	e7f9      	b.n	800f3d4 <_tcp_send_package+0x12c>
 800f3e0:	20016660 	andcs	r6, r1, r0, ror #12
 800f3e4:	20015aa8 	andcs	r5, r1, r8, lsr #21
 800f3e8:	20016676 	andcs	r6, r1, r6, ror r6
 800f3ec:	20015a7c 	andcs	r5, r1, ip, ror sl
 800f3f0:	2001667a 	andcs	r6, r1, sl, ror r6

0800f3f4 <_send_reset>:
 800f3f4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800f3f6:	f890 302f 	ldrb.w	r3, [r0, #47]	; 0x2f
 800f3fa:	4604      	mov	r4, r0
 800f3fc:	075a      	lsls	r2, r3, #29
 800f3fe:	460e      	mov	r6, r1
 800f400:	d421      	bmi.n	800f446 <_send_reset+0x52>
 800f402:	2204      	movs	r2, #4
 800f404:	f013 0310 	ands.w	r3, r3, #16
 800f408:	f88d 200c 	strb.w	r2, [sp, #12]
 800f40c:	d01d      	beq.n	800f44a <_send_reset+0x56>
 800f40e:	f100 012a 	add.w	r1, r0, #42	; 0x2a
 800f412:	4668      	mov	r0, sp
 800f414:	f7ff ff18 	bl	800f248 <memcpy.isra.0>
 800f418:	9b00      	ldr	r3, [sp, #0]
 800f41a:	9301      	str	r3, [sp, #4]
 800f41c:	f894 302f 	ldrb.w	r3, [r4, #47]	; 0x2f
 800f420:	4668      	mov	r0, sp
 800f422:	f3c3 0540 	ubfx	r5, r3, #1, #1
 800f426:	f104 0126 	add.w	r1, r4, #38	; 0x26
 800f42a:	07db      	lsls	r3, r3, #31
 800f42c:	f04f 0204 	mov.w	r2, #4
 800f430:	bf48      	it	mi
 800f432:	3501      	addmi	r5, #1
 800f434:	f7ff ff08 	bl	800f248 <memcpy.isra.0>
 800f438:	9b00      	ldr	r3, [sp, #0]
 800f43a:	4630      	mov	r0, r6
 800f43c:	441d      	add	r5, r3
 800f43e:	a901      	add	r1, sp, #4
 800f440:	9502      	str	r5, [sp, #8]
 800f442:	f7ff ff31 	bl	800f2a8 <_tcp_send_package>
 800f446:	b004      	add	sp, #16
 800f448:	bd70      	pop	{r4, r5, r6, pc}
 800f44a:	9301      	str	r3, [sp, #4]
 800f44c:	2314      	movs	r3, #20
 800f44e:	f88d 300c 	strb.w	r3, [sp, #12]
 800f452:	e7e3      	b.n	800f41c <_send_reset+0x28>

0800f454 <tcp_begin>:
 800f454:	b508      	push	{r3, lr}
 800f456:	4b0a      	ldr	r3, [pc, #40]	; (800f480 <tcp_begin+0x2c>)
 800f458:	4601      	mov	r1, r0
 800f45a:	881a      	ldrh	r2, [r3, #0]
 800f45c:	4282      	cmp	r2, r0
 800f45e:	d102      	bne.n	800f466 <tcp_begin+0x12>
 800f460:	f893 0040 	ldrb.w	r0, [r3, #64]	; 0x40
 800f464:	b130      	cbz	r0, 800f474 <tcp_begin+0x20>
 800f466:	b12a      	cbz	r2, 800f474 <tcp_begin+0x20>
 800f468:	4806      	ldr	r0, [pc, #24]	; (800f484 <tcp_begin+0x30>)
 800f46a:	f002 ffcb 	bl	8012404 <console_error>
 800f46e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800f472:	bd08      	pop	{r3, pc}
 800f474:	4802      	ldr	r0, [pc, #8]	; (800f480 <tcp_begin+0x2c>)
 800f476:	8019      	strh	r1, [r3, #0]
 800f478:	f7ff fecc 	bl	800f214 <_init_tcb>
 800f47c:	2000      	movs	r0, #0
 800f47e:	e7f8      	b.n	800f472 <tcp_begin+0x1e>
 800f480:	2001661c 	andcs	r6, r1, ip, lsl r6
 800f484:	08017376 	stmdaeq	r1, {r1, r2, r4, r5, r6, r8, r9, ip, sp, lr}

0800f488 <tcp_write>:
 800f488:	f240 53b4 	movw	r3, #1460	; 0x5b4
 800f48c:	429a      	cmp	r2, r3
 800f48e:	bf28      	it	cs
 800f490:	461a      	movcs	r2, r3
 800f492:	2344      	movs	r3, #68	; 0x44
 800f494:	b530      	push	{r4, r5, lr}
 800f496:	4c0d      	ldr	r4, [pc, #52]	; (800f4cc <tcp_write+0x44>)
 800f498:	b085      	sub	sp, #20
 800f49a:	fb03 4400 	mla	r4, r3, r0, r4
 800f49e:	6963      	ldr	r3, [r4, #20]
 800f4a0:	62e1      	str	r1, [r4, #44]	; 0x2c
 800f4a2:	9301      	str	r3, [sp, #4]
 800f4a4:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800f4a6:	4620      	mov	r0, r4
 800f4a8:	9302      	str	r3, [sp, #8]
 800f4aa:	2318      	movs	r3, #24
 800f4ac:	8622      	strh	r2, [r4, #48]	; 0x30
 800f4ae:	a901      	add	r1, sp, #4
 800f4b0:	4615      	mov	r5, r2
 800f4b2:	f88d 300c 	strb.w	r3, [sp, #12]
 800f4b6:	f7ff fef7 	bl	800f2a8 <_tcp_send_package>
 800f4ba:	2300      	movs	r3, #0
 800f4bc:	62e3      	str	r3, [r4, #44]	; 0x2c
 800f4be:	8623      	strh	r3, [r4, #48]	; 0x30
 800f4c0:	6963      	ldr	r3, [r4, #20]
 800f4c2:	442b      	add	r3, r5
 800f4c4:	6163      	str	r3, [r4, #20]
 800f4c6:	b005      	add	sp, #20
 800f4c8:	bd30      	pop	{r4, r5, pc}
 800f4ca:	bf00      	nop
 800f4cc:	2001661c 	andcs	r6, r1, ip, lsl r6

0800f4d0 <tcp_read>:
 800f4d0:	2344      	movs	r3, #68	; 0x44
 800f4d2:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f4d4:	4c1c      	ldr	r4, [pc, #112]	; (800f548 <tcp_read+0x78>)
 800f4d6:	b085      	sub	sp, #20
 800f4d8:	fb03 4400 	mla	r4, r3, r0, r4
 800f4dc:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800f4e0:	2b07      	cmp	r3, #7
 800f4e2:	d112      	bne.n	800f50a <tcp_read+0x3a>
 800f4e4:	6963      	ldr	r3, [r4, #20]
 800f4e6:	4620      	mov	r0, r4
 800f4e8:	9301      	str	r3, [sp, #4]
 800f4ea:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800f4ec:	a901      	add	r1, sp, #4
 800f4ee:	9302      	str	r3, [sp, #8]
 800f4f0:	2311      	movs	r3, #17
 800f4f2:	f88d 300c 	strb.w	r3, [sp, #12]
 800f4f6:	f7ff fed7 	bl	800f2a8 <_tcp_send_package>
 800f4fa:	2309      	movs	r3, #9
 800f4fc:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800f500:	6963      	ldr	r3, [r4, #20]
 800f502:	3301      	adds	r3, #1
 800f504:	6163      	str	r3, [r4, #20]
 800f506:	2000      	movs	r0, #0
 800f508:	e01b      	b.n	800f542 <tcp_read+0x72>
 800f50a:	f44f 6337 	mov.w	r3, #2928	; 0xb70
 800f50e:	4358      	muls	r0, r3
 800f510:	4a0e      	ldr	r2, [pc, #56]	; (800f54c <tcp_read+0x7c>)
 800f512:	1817      	adds	r7, r2, r0
 800f514:	887b      	ldrh	r3, [r7, #2]
 800f516:	5a15      	ldrh	r5, [r2, r0]
 800f518:	429d      	cmp	r5, r3
 800f51a:	d0f4      	beq.n	800f506 <tcp_read+0x36>
 800f51c:	f240 55b6 	movw	r5, #1462	; 0x5b6
 800f520:	435d      	muls	r5, r3
 800f522:	1d06      	adds	r6, r0, #4
 800f524:	442e      	add	r6, r5
 800f526:	4416      	add	r6, r2
 800f528:	4405      	add	r5, r0
 800f52a:	600e      	str	r6, [r1, #0]
 800f52c:	442a      	add	r2, r5
 800f52e:	f8b2 05b8 	ldrh.w	r0, [r2, #1464]	; 0x5b8
 800f532:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 800f534:	3301      	adds	r3, #1
 800f536:	f202 52b4 	addw	r2, r2, #1460	; 0x5b4
 800f53a:	f003 0301 	and.w	r3, r3, #1
 800f53e:	8722      	strh	r2, [r4, #56]	; 0x38
 800f540:	807b      	strh	r3, [r7, #2]
 800f542:	b005      	add	sp, #20
 800f544:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f546:	bf00      	nop
 800f548:	2001661c 	andcs	r6, r1, ip, lsl r6
 800f54c:	20015aac 	andcs	r5, r1, ip, lsr #21

0800f550 <memcpy.isra.0>:
 800f550:	3801      	subs	r0, #1
 800f552:	440a      	add	r2, r1
 800f554:	4291      	cmp	r1, r2
 800f556:	d100      	bne.n	800f55a <memcpy.isra.0+0xa>
 800f558:	4770      	bx	lr
 800f55a:	f811 3b01 	ldrb.w	r3, [r1], #1
 800f55e:	f800 3f01 	strb.w	r3, [r0, #1]!
 800f562:	e7f7      	b.n	800f554 <memcpy.isra.0+0x4>

0800f564 <net_memcpy>:
 800f564:	ea40 0301 	orr.w	r3, r0, r1
 800f568:	079b      	lsls	r3, r3, #30
 800f56a:	b570      	push	{r4, r5, r6, lr}
 800f56c:	d108      	bne.n	800f580 <net_memcpy+0x1c>
 800f56e:	f022 0303 	bic.w	r3, r2, #3
 800f572:	1f04      	subs	r4, r0, #4
 800f574:	18cd      	adds	r5, r1, r3
 800f576:	42a9      	cmp	r1, r5
 800f578:	d108      	bne.n	800f58c <net_memcpy+0x28>
 800f57a:	1ad2      	subs	r2, r2, r3
 800f57c:	4403      	add	r3, r0
 800f57e:	e000      	b.n	800f582 <net_memcpy+0x1e>
 800f580:	4603      	mov	r3, r0
 800f582:	3b01      	subs	r3, #1
 800f584:	440a      	add	r2, r1
 800f586:	4291      	cmp	r1, r2
 800f588:	d105      	bne.n	800f596 <net_memcpy+0x32>
 800f58a:	bd70      	pop	{r4, r5, r6, pc}
 800f58c:	f851 6b04 	ldr.w	r6, [r1], #4
 800f590:	f844 6f04 	str.w	r6, [r4, #4]!
 800f594:	e7ef      	b.n	800f576 <net_memcpy+0x12>
 800f596:	f811 4b01 	ldrb.w	r4, [r1], #1
 800f59a:	f803 4f01 	strb.w	r4, [r3, #1]!
 800f59e:	e7f2      	b.n	800f586 <net_memcpy+0x22>

0800f5a0 <udp_set_ip>:
 800f5a0:	2204      	movs	r2, #4
 800f5a2:	b513      	push	{r0, r1, r4, lr}
 800f5a4:	4604      	mov	r4, r0
 800f5a6:	6803      	ldr	r3, [r0, #0]
 800f5a8:	eb0d 0102 	add.w	r1, sp, r2
 800f5ac:	4808      	ldr	r0, [pc, #32]	; (800f5d0 <udp_set_ip+0x30>)
 800f5ae:	9301      	str	r3, [sp, #4]
 800f5b0:	f7ff ffce 	bl	800f550 <memcpy.isra.0>
 800f5b4:	6862      	ldr	r2, [r4, #4]
 800f5b6:	4b07      	ldr	r3, [pc, #28]	; (800f5d4 <udp_set_ip+0x34>)
 800f5b8:	43d1      	mvns	r1, r2
 800f5ba:	6019      	str	r1, [r3, #0]
 800f5bc:	6823      	ldr	r3, [r4, #0]
 800f5be:	4013      	ands	r3, r2
 800f5c0:	4a05      	ldr	r2, [pc, #20]	; (800f5d8 <udp_set_ip+0x38>)
 800f5c2:	6013      	str	r3, [r2, #0]
 800f5c4:	68a2      	ldr	r2, [r4, #8]
 800f5c6:	4b05      	ldr	r3, [pc, #20]	; (800f5dc <udp_set_ip+0x3c>)
 800f5c8:	601a      	str	r2, [r3, #0]
 800f5ca:	b002      	add	sp, #8
 800f5cc:	bd10      	pop	{r4, pc}
 800f5ce:	bf00      	nop
 800f5d0:	2001c936 	andcs	ip, r1, r6, lsr r9
 800f5d4:	20016c4c 	andcs	r6, r1, ip, asr #24
 800f5d8:	20016c54 	andcs	r6, r1, r4, asr ip
 800f5dc:	20016c50 	andcs	r6, r1, r0, asr ip

0800f5e0 <udp_bind>:
 800f5e0:	4a0a      	ldr	r2, [pc, #40]	; (800f60c <udp_bind+0x2c>)
 800f5e2:	4603      	mov	r3, r0
 800f5e4:	b510      	push	{r4, lr}
 800f5e6:	2000      	movs	r0, #0
 800f5e8:	4614      	mov	r4, r2
 800f5ea:	f852 1b04 	ldr.w	r1, [r2], #4
 800f5ee:	4299      	cmp	r1, r3
 800f5f0:	d008      	beq.n	800f604 <udp_bind+0x24>
 800f5f2:	b141      	cbz	r1, 800f606 <udp_bind+0x26>
 800f5f4:	3001      	adds	r0, #1
 800f5f6:	2808      	cmp	r0, #8
 800f5f8:	d1f7      	bne.n	800f5ea <udp_bind+0xa>
 800f5fa:	4805      	ldr	r0, [pc, #20]	; (800f610 <udp_bind+0x30>)
 800f5fc:	f002 ff02 	bl	8012404 <console_error>
 800f600:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800f604:	bd10      	pop	{r4, pc}
 800f606:	f844 3020 	str.w	r3, [r4, r0, lsl #2]
 800f60a:	e7fb      	b.n	800f604 <udp_bind+0x24>
 800f60c:	20016c5c 	andcs	r6, r1, ip, asr ip
 800f610:	08017396 	stmdaeq	r1, {r1, r2, r4, r7, r8, r9, ip, sp, lr}

0800f614 <udp_unbind>:
 800f614:	4a0c      	ldr	r2, [pc, #48]	; (800f648 <udp_unbind+0x34>)
 800f616:	2300      	movs	r3, #0
 800f618:	4611      	mov	r1, r2
 800f61a:	b510      	push	{r4, lr}
 800f61c:	f852 4b04 	ldr.w	r4, [r2], #4
 800f620:	4284      	cmp	r4, r0
 800f622:	d108      	bne.n	800f636 <udp_unbind+0x22>
 800f624:	2000      	movs	r0, #0
 800f626:	f640 3294 	movw	r2, #2964	; 0xb94
 800f62a:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 800f62e:	4353      	muls	r3, r2
 800f630:	4a06      	ldr	r2, [pc, #24]	; (800f64c <udp_unbind+0x38>)
 800f632:	50d0      	str	r0, [r2, r3]
 800f634:	bd10      	pop	{r4, pc}
 800f636:	3301      	adds	r3, #1
 800f638:	2b08      	cmp	r3, #8
 800f63a:	d1ef      	bne.n	800f61c <udp_unbind+0x8>
 800f63c:	4804      	ldr	r0, [pc, #16]	; (800f650 <udp_unbind+0x3c>)
 800f63e:	f002 fee1 	bl	8012404 <console_error>
 800f642:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800f646:	e7f5      	b.n	800f634 <udp_unbind+0x20>
 800f648:	20016c5c 	andcs	r6, r1, ip, asr ip
 800f64c:	20016c7c 	andcs	r6, r1, ip, ror ip
 800f650:	0801739b 	stmdaeq	r1, {r0, r1, r3, r4, r7, r8, r9, ip, sp, lr}

0800f654 <udp_recv>:
 800f654:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f658:	4604      	mov	r4, r0
 800f65a:	4698      	mov	r8, r3
 800f65c:	f640 3394 	movw	r3, #2964	; 0xb94
 800f660:	435c      	muls	r4, r3
 800f662:	4608      	mov	r0, r1
 800f664:	4915      	ldr	r1, [pc, #84]	; (800f6bc <udp_recv+0x68>)
 800f666:	190f      	adds	r7, r1, r4
 800f668:	f8b7 c002 	ldrh.w	ip, [r7, #2]
 800f66c:	5b0b      	ldrh	r3, [r1, r4]
 800f66e:	4563      	cmp	r3, ip
 800f670:	d021      	beq.n	800f6b6 <udp_recv+0x62>
 800f672:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 800f676:	fb03 fc0c 	mul.w	ip, r3, ip
 800f67a:	eb0c 0604 	add.w	r6, ip, r4
 800f67e:	440e      	add	r6, r1
 800f680:	f8b6 55ca 	ldrh.w	r5, [r6, #1482]	; 0x5ca
 800f684:	3404      	adds	r4, #4
 800f686:	4295      	cmp	r5, r2
 800f688:	bf28      	it	cs
 800f68a:	4615      	movcs	r5, r2
 800f68c:	4464      	add	r4, ip
 800f68e:	462a      	mov	r2, r5
 800f690:	4421      	add	r1, r4
 800f692:	f7ff ff67 	bl	800f564 <net_memcpy>
 800f696:	f8d6 35c4 	ldr.w	r3, [r6, #1476]	; 0x5c4
 800f69a:	f8c8 3000 	str.w	r3, [r8]
 800f69e:	f8b6 25c8 	ldrh.w	r2, [r6, #1480]	; 0x5c8
 800f6a2:	9b06      	ldr	r3, [sp, #24]
 800f6a4:	801a      	strh	r2, [r3, #0]
 800f6a6:	887b      	ldrh	r3, [r7, #2]
 800f6a8:	3301      	adds	r3, #1
 800f6aa:	f003 0301 	and.w	r3, r3, #1
 800f6ae:	807b      	strh	r3, [r7, #2]
 800f6b0:	4628      	mov	r0, r5
 800f6b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f6b6:	2500      	movs	r5, #0
 800f6b8:	e7fa      	b.n	800f6b0 <udp_recv+0x5c>
 800f6ba:	bf00      	nop
 800f6bc:	20016c7c 	andcs	r6, r1, ip, ror ip

0800f6c0 <udp_recv2>:
 800f6c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f6c2:	f640 3594 	movw	r5, #2964	; 0xb94
 800f6c6:	4368      	muls	r0, r5
 800f6c8:	4c0f      	ldr	r4, [pc, #60]	; (800f708 <udp_recv2+0x48>)
 800f6ca:	1827      	adds	r7, r4, r0
 800f6cc:	887d      	ldrh	r5, [r7, #2]
 800f6ce:	5a26      	ldrh	r6, [r4, r0]
 800f6d0:	42ae      	cmp	r6, r5
 800f6d2:	d017      	beq.n	800f704 <udp_recv2+0x44>
 800f6d4:	f44f 6cb9 	mov.w	ip, #1480	; 0x5c8
 800f6d8:	fb0c f505 	mul.w	r5, ip, r5
 800f6dc:	1d06      	adds	r6, r0, #4
 800f6de:	442e      	add	r6, r5
 800f6e0:	4405      	add	r5, r0
 800f6e2:	4426      	add	r6, r4
 800f6e4:	442c      	add	r4, r5
 800f6e6:	600e      	str	r6, [r1, #0]
 800f6e8:	f8d4 15c4 	ldr.w	r1, [r4, #1476]	; 0x5c4
 800f6ec:	6011      	str	r1, [r2, #0]
 800f6ee:	f8b4 25c8 	ldrh.w	r2, [r4, #1480]	; 0x5c8
 800f6f2:	801a      	strh	r2, [r3, #0]
 800f6f4:	887b      	ldrh	r3, [r7, #2]
 800f6f6:	f8b4 05ca 	ldrh.w	r0, [r4, #1482]	; 0x5ca
 800f6fa:	3301      	adds	r3, #1
 800f6fc:	f003 0301 	and.w	r3, r3, #1
 800f700:	807b      	strh	r3, [r7, #2]
 800f702:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f704:	2000      	movs	r0, #0
 800f706:	e7fc      	b.n	800f702 <udp_recv2+0x42>
 800f708:	20016c7c 	andcs	r6, r1, ip, ror ip

0800f70c <udp_send>:
 800f70c:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800f710:	f8df 9130 	ldr.w	r9, [pc, #304]	; 800f844 <udp_send+0x138>
 800f714:	461c      	mov	r4, r3
 800f716:	f859 3020 	ldr.w	r3, [r9, r0, lsl #2]
 800f71a:	4607      	mov	r7, r0
 800f71c:	4688      	mov	r8, r1
 800f71e:	4616      	mov	r6, r2
 800f720:	2b00      	cmp	r3, #0
 800f722:	f000 808b 	beq.w	800f83c <udp_send+0x130>
 800f726:	1c63      	adds	r3, r4, #1
 800f728:	d141      	bne.n	800f7ae <udp_send+0xa2>
 800f72a:	4a47      	ldr	r2, [pc, #284]	; (800f848 <udp_send+0x13c>)
 800f72c:	2307      	movs	r3, #7
 800f72e:	4611      	mov	r1, r2
 800f730:	20ff      	movs	r0, #255	; 0xff
 800f732:	e001      	b.n	800f738 <udp_send+0x2c>
 800f734:	f802 0b01 	strb.w	r0, [r2], #1
 800f738:	3b01      	subs	r3, #1
 800f73a:	d1fb      	bne.n	800f734 <udp_send+0x28>
 800f73c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800f740:	83cb      	strh	r3, [r1, #30]
 800f742:	840b      	strh	r3, [r1, #32]
 800f744:	2500      	movs	r5, #0
 800f746:	f8df a104 	ldr.w	sl, [pc, #260]	; 800f84c <udp_send+0x140>
 800f74a:	4c3f      	ldr	r4, [pc, #252]	; (800f848 <udp_send+0x13c>)
 800f74c:	f8ba 3000 	ldrh.w	r3, [sl]
 800f750:	2114      	movs	r1, #20
 800f752:	8263      	strh	r3, [r4, #18]
 800f754:	f106 031c 	add.w	r3, r6, #28
 800f758:	ba5b      	rev16	r3, r3
 800f75a:	f104 000e 	add.w	r0, r4, #14
 800f75e:	8223      	strh	r3, [r4, #16]
 800f760:	8325      	strh	r5, [r4, #24]
 800f762:	f001 fd3c 	bl	80111de <net_chksum>
 800f766:	f859 3027 	ldr.w	r3, [r9, r7, lsl #2]
 800f76a:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 800f76e:	ba5b      	rev16	r3, r3
 800f770:	8463      	strh	r3, [r4, #34]	; 0x22
 800f772:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800f776:	4632      	mov	r2, r6
 800f778:	ba5b      	rev16	r3, r3
 800f77a:	84a3      	strh	r3, [r4, #36]	; 0x24
 800f77c:	f106 0308 	add.w	r3, r6, #8
 800f780:	ba5b      	rev16	r3, r3
 800f782:	bf28      	it	cs
 800f784:	f44f 62b8 	movcs.w	r2, #1472	; 0x5c0
 800f788:	4641      	mov	r1, r8
 800f78a:	8320      	strh	r0, [r4, #24]
 800f78c:	f104 002a 	add.w	r0, r4, #42	; 0x2a
 800f790:	84e3      	strh	r3, [r4, #38]	; 0x26
 800f792:	f7ff fee7 	bl	800f564 <net_memcpy>
 800f796:	4620      	mov	r0, r4
 800f798:	f106 012a 	add.w	r1, r6, #42	; 0x2a
 800f79c:	f004 f8f6 	bl	801398c <emac_eth_send>
 800f7a0:	f8ba 3000 	ldrh.w	r3, [sl]
 800f7a4:	4628      	mov	r0, r5
 800f7a6:	3301      	adds	r3, #1
 800f7a8:	f8aa 3000 	strh.w	r3, [sl]
 800f7ac:	e037      	b.n	800f81e <udp_send+0x112>
 800f7ae:	4b28      	ldr	r3, [pc, #160]	; (800f850 <udp_send+0x144>)
 800f7b0:	681b      	ldr	r3, [r3, #0]
 800f7b2:	43a3      	bics	r3, r4
 800f7b4:	d10f      	bne.n	800f7d6 <udp_send+0xca>
 800f7b6:	2307      	movs	r3, #7
 800f7b8:	21ff      	movs	r1, #255	; 0xff
 800f7ba:	4a23      	ldr	r2, [pc, #140]	; (800f848 <udp_send+0x13c>)
 800f7bc:	e001      	b.n	800f7c2 <udp_send+0xb6>
 800f7be:	f802 1b01 	strb.w	r1, [r2], #1
 800f7c2:	3b01      	subs	r3, #1
 800f7c4:	d1fb      	bne.n	800f7be <udp_send+0xb2>
 800f7c6:	2204      	movs	r2, #4
 800f7c8:	4822      	ldr	r0, [pc, #136]	; (800f854 <udp_send+0x148>)
 800f7ca:	eb0d 0102 	add.w	r1, sp, r2
 800f7ce:	9401      	str	r4, [sp, #4]
 800f7d0:	f7ff febe 	bl	800f550 <memcpy.isra.0>
 800f7d4:	e7b6      	b.n	800f744 <udp_send+0x38>
 800f7d6:	f004 03e0 	and.w	r3, r4, #224	; 0xe0
 800f7da:	2be0      	cmp	r3, #224	; 0xe0
 800f7dc:	d10e      	bne.n	800f7fc <udp_send+0xf0>
 800f7de:	491e      	ldr	r1, [pc, #120]	; (800f858 <udp_send+0x14c>)
 800f7e0:	f3c4 2306 	ubfx	r3, r4, #8, #7
 800f7e4:	70cb      	strb	r3, [r1, #3]
 800f7e6:	f3c4 4307 	ubfx	r3, r4, #16, #8
 800f7ea:	710b      	strb	r3, [r1, #4]
 800f7ec:	f3c4 6307 	ubfx	r3, r4, #24, #8
 800f7f0:	2206      	movs	r2, #6
 800f7f2:	4815      	ldr	r0, [pc, #84]	; (800f848 <udp_send+0x13c>)
 800f7f4:	714b      	strb	r3, [r1, #5]
 800f7f6:	f7ff feab 	bl	800f550 <memcpy.isra.0>
 800f7fa:	e7e4      	b.n	800f7c6 <udp_send+0xba>
 800f7fc:	4b17      	ldr	r3, [pc, #92]	; (800f85c <udp_send+0x150>)
 800f7fe:	681b      	ldr	r3, [r3, #0]
 800f800:	43a3      	bics	r3, r4
 800f802:	d00f      	beq.n	800f824 <udp_send+0x118>
 800f804:	4d16      	ldr	r5, [pc, #88]	; (800f860 <udp_send+0x154>)
 800f806:	4910      	ldr	r1, [pc, #64]	; (800f848 <udp_send+0x13c>)
 800f808:	6828      	ldr	r0, [r5, #0]
 800f80a:	f001 f9b3 	bl	8010b74 <arp_cache_lookup>
 800f80e:	682b      	ldr	r3, [r5, #0]
 800f810:	4298      	cmp	r0, r3
 800f812:	d0d8      	beq.n	800f7c6 <udp_send+0xba>
 800f814:	4813      	ldr	r0, [pc, #76]	; (800f864 <udp_send+0x158>)
 800f816:	f002 fdf5 	bl	8012404 <console_error>
 800f81a:	f06f 0002 	mvn.w	r0, #2
 800f81e:	b002      	add	sp, #8
 800f820:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f824:	4620      	mov	r0, r4
 800f826:	4908      	ldr	r1, [pc, #32]	; (800f848 <udp_send+0x13c>)
 800f828:	f001 f9a4 	bl	8010b74 <arp_cache_lookup>
 800f82c:	42a0      	cmp	r0, r4
 800f82e:	d0ca      	beq.n	800f7c6 <udp_send+0xba>
 800f830:	480d      	ldr	r0, [pc, #52]	; (800f868 <udp_send+0x15c>)
 800f832:	f002 fde7 	bl	8012404 <console_error>
 800f836:	f06f 0001 	mvn.w	r0, #1
 800f83a:	e7f0      	b.n	800f81e <udp_send+0x112>
 800f83c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800f840:	e7ed      	b.n	800f81e <udp_send+0x112>
 800f842:	bf00      	nop
 800f844:	20016c5c 	andcs	r6, r1, ip, asr ip
 800f848:	2001c91c 	andcs	ip, r1, ip, lsl r9
 800f84c:	20016c58 	andcs	r6, r1, r8, asr ip
 800f850:	20016c4c 	andcs	r6, r1, ip, asr #24
 800f854:	2001c93a 	andcs	ip, r1, sl, lsr r9
 800f858:	20000004 	andcs	r0, r0, r4
 800f85c:	20016c54 	andcs	r6, r1, r4, asr ip
 800f860:	20016c50 	andcs	r6, r1, r0, asr ip
 800f864:	080173a3 	stmdaeq	r1, {r0, r1, r5, r7, r8, r9, ip, sp, lr}
 800f868:	080173c9 	stmdaeq	r1, {r0, r3, r6, r7, r8, r9, ip, sp, lr}

0800f86c <strlen>:
 800f86c:	4603      	mov	r3, r0
 800f86e:	461a      	mov	r2, r3
 800f870:	7811      	ldrb	r1, [r2, #0]
 800f872:	3301      	adds	r3, #1
 800f874:	2900      	cmp	r1, #0
 800f876:	d1fa      	bne.n	800f86e <strlen+0x2>
 800f878:	1a10      	subs	r0, r2, r0
 800f87a:	4770      	bx	lr

0800f87c <strcmp>:
 800f87c:	1e43      	subs	r3, r0, #1
 800f87e:	3901      	subs	r1, #1
 800f880:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800f884:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800f888:	4290      	cmp	r0, r2
 800f88a:	d001      	beq.n	800f890 <strcmp+0x14>
 800f88c:	1a80      	subs	r0, r0, r2
 800f88e:	e001      	b.n	800f894 <strcmp+0x18>
 800f890:	2800      	cmp	r0, #0
 800f892:	d1f5      	bne.n	800f880 <strcmp+0x4>
 800f894:	4770      	bx	lr

0800f896 <strcpy.isra.0>:
 800f896:	3801      	subs	r0, #1
 800f898:	f811 3b01 	ldrb.w	r3, [r1], #1
 800f89c:	f800 3f01 	strb.w	r3, [r0, #1]!
 800f8a0:	2b00      	cmp	r3, #0
 800f8a2:	d1f9      	bne.n	800f898 <strcpy.isra.0+0x2>
 800f8a4:	4770      	bx	lr

0800f8a6 <strcat.isra.0>:
 800f8a6:	b538      	push	{r3, r4, r5, lr}
 800f8a8:	4604      	mov	r4, r0
 800f8aa:	460d      	mov	r5, r1
 800f8ac:	f7ff ffde 	bl	800f86c <strlen>
 800f8b0:	4629      	mov	r1, r5
 800f8b2:	4420      	add	r0, r4
 800f8b4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800f8b8:	f7ff bfed 	b.w	800f896 <strcpy.isra.0>

0800f8bc <MDNS::MDNS()>:
 800f8bc:	b513      	push	{r0, r1, r4, lr}
 800f8be:	4604      	mov	r4, r0
 800f8c0:	a901      	add	r1, sp, #4
 800f8c2:	4804      	ldr	r0, [pc, #16]	; (800f8d4 <MDNS::MDNS()+0x18>)
 800f8c4:	f002 ff14 	bl	80126f0 <inet_aton>
 800f8c8:	4620      	mov	r0, r4
 800f8ca:	4b03      	ldr	r3, [pc, #12]	; (800f8d8 <MDNS::MDNS()+0x1c>)
 800f8cc:	9a01      	ldr	r2, [sp, #4]
 800f8ce:	601a      	str	r2, [r3, #0]
 800f8d0:	b002      	add	sp, #8
 800f8d2:	bd10      	pop	{r4, pc}
 800f8d4:	080173e9 	stmdaeq	r1, {r0, r3, r5, r6, r7, r8, r9, ip, sp, lr}
 800f8d8:	2001cf10 	andcs	ip, r1, r0, lsl pc

0800f8dc <MDNS::SetName(char const*)>:
 800f8dc:	b538      	push	{r3, r4, r5, lr}
 800f8de:	4d0b      	ldr	r5, [pc, #44]	; (800f90c <MDNS::SetName(char const*)+0x30>)
 800f8e0:	460c      	mov	r4, r1
 800f8e2:	6828      	ldr	r0, [r5, #0]
 800f8e4:	b108      	cbz	r0, 800f8ea <MDNS::SetName(char const*)+0xe>
 800f8e6:	f002 fefd 	bl	80126e4 <operator delete[](void*)>
 800f8ea:	4620      	mov	r0, r4
 800f8ec:	f7ff ffbe 	bl	800f86c <strlen>
 800f8f0:	3007      	adds	r0, #7
 800f8f2:	f002 fefb 	bl	80126ec <operator new[](unsigned int)>
 800f8f6:	4621      	mov	r1, r4
 800f8f8:	6028      	str	r0, [r5, #0]
 800f8fa:	f7ff ffcc 	bl	800f896 <strcpy.isra.0>
 800f8fe:	6828      	ldr	r0, [r5, #0]
 800f900:	4903      	ldr	r1, [pc, #12]	; (800f910 <MDNS::SetName(char const*)+0x34>)
 800f902:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800f906:	f7ff bfce 	b.w	800f8a6 <strcat.isra.0>
 800f90a:	bf00      	nop
 800f90c:	2001d340 	andcs	sp, r1, r0, asr #6
 800f910:	080173f9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, r8, r9, ip, sp, lr}

0800f914 <MDNS::DecodeDNSNameNotation(char const*, char*)>:
 800f914:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f918:	f04f 0e00 	mov.w	lr, #0
 800f91c:	f04f 0c2e 	mov.w	ip, #46	; 0x2e
 800f920:	4675      	mov	r5, lr
 800f922:	4e1b      	ldr	r6, [pc, #108]	; (800f990 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x7c>)
 800f924:	4f1b      	ldr	r7, [pc, #108]	; (800f994 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x80>)
 800f926:	780b      	ldrb	r3, [r1, #0]
 800f928:	1c68      	adds	r0, r5, #1
 800f92a:	b913      	cbnz	r3, 800f932 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x1e>
 800f92c:	7013      	strb	r3, [r2, #0]
 800f92e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f932:	2b3f      	cmp	r3, #63	; 0x3f
 800f934:	d91c      	bls.n	800f970 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x5c>
 800f936:	7849      	ldrb	r1, [r1, #1]
 800f938:	ea06 2303 	and.w	r3, r6, r3, lsl #8
 800f93c:	430b      	orrs	r3, r1
 800f93e:	6839      	ldr	r1, [r7, #0]
 800f940:	f1be 0f00 	cmp.w	lr, #0
 800f944:	bf08      	it	eq
 800f946:	4605      	moveq	r5, r0
 800f948:	5ccc      	ldrb	r4, [r1, r3]
 800f94a:	3301      	adds	r3, #1
 800f94c:	4419      	add	r1, r3
 800f94e:	2300      	movs	r3, #0
 800f950:	42a3      	cmp	r3, r4
 800f952:	5cc8      	ldrb	r0, [r1, r3]
 800f954:	d309      	bcc.n	800f96a <MDNS::DecodeDNSNameNotation(char const*, char*)+0x56>
 800f956:	f04f 0e01 	mov.w	lr, #1
 800f95a:	4421      	add	r1, r4
 800f95c:	4414      	add	r4, r2
 800f95e:	780b      	ldrb	r3, [r1, #0]
 800f960:	b10b      	cbz	r3, 800f966 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x52>
 800f962:	f804 cb01 	strb.w	ip, [r4], #1
 800f966:	4622      	mov	r2, r4
 800f968:	e7dd      	b.n	800f926 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x12>
 800f96a:	54d0      	strb	r0, [r2, r3]
 800f96c:	3301      	adds	r3, #1
 800f96e:	e7ef      	b.n	800f950 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x3c>
 800f970:	4688      	mov	r8, r1
 800f972:	18d4      	adds	r4, r2, r3
 800f974:	f818 9f01 	ldrb.w	r9, [r8, #1]!
 800f978:	f802 9b01 	strb.w	r9, [r2], #1
 800f97c:	4294      	cmp	r4, r2
 800f97e:	d1f9      	bne.n	800f974 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x60>
 800f980:	1c5a      	adds	r2, r3, #1
 800f982:	4411      	add	r1, r2
 800f984:	f1be 0f00 	cmp.w	lr, #0
 800f988:	d1e9      	bne.n	800f95e <MDNS::DecodeDNSNameNotation(char const*, char*)+0x4a>
 800f98a:	181d      	adds	r5, r3, r0
 800f98c:	e7e7      	b.n	800f95e <MDNS::DecodeDNSNameNotation(char const*, char*)+0x4a>
 800f98e:	bf00      	nop
 800f990:	ffff3f00 			; <UNDEFINED> instruction: 0xffff3f00
 800f994:	2001d344 	andcs	sp, r1, r4, asr #6

0800f998 <MDNS::FindFirstDotFromRight(char const*) const>:
 800f998:	b510      	push	{r4, lr}
 800f99a:	4608      	mov	r0, r1
 800f99c:	460c      	mov	r4, r1
 800f99e:	f7ff ff65 	bl	800f86c <strlen>
 800f9a2:	4420      	add	r0, r4
 800f9a4:	42a0      	cmp	r0, r4
 800f9a6:	d903      	bls.n	800f9b0 <MDNS::FindFirstDotFromRight(char const*) const+0x18>
 800f9a8:	f810 3901 	ldrb.w	r3, [r0], #-1
 800f9ac:	2b2e      	cmp	r3, #46	; 0x2e
 800f9ae:	d1f9      	bne.n	800f9a4 <MDNS::FindFirstDotFromRight(char const*) const+0xc>
 800f9b0:	3001      	adds	r0, #1
 800f9b2:	bd10      	pop	{r4, pc}

0800f9b4 <MDNS::WriteDnsName(char const*, char*, bool)>:
 800f9b4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f9b6:	4614      	mov	r4, r2
 800f9b8:	460f      	mov	r7, r1
 800f9ba:	1c60      	adds	r0, r4, #1
 800f9bc:	463d      	mov	r5, r7
 800f9be:	f817 6b01 	ldrb.w	r6, [r7], #1
 800f9c2:	b946      	cbnz	r6, 800f9d6 <MDNS::WriteDnsName(char const*, char*, bool)+0x22>
 800f9c4:	1a69      	subs	r1, r5, r1
 800f9c6:	7021      	strb	r1, [r4, #0]
 800f9c8:	7829      	ldrb	r1, [r5, #0]
 800f9ca:	b949      	cbnz	r1, 800f9e0 <MDNS::WriteDnsName(char const*, char*, bool)+0x2c>
 800f9cc:	b10b      	cbz	r3, 800f9d2 <MDNS::WriteDnsName(char const*, char*, bool)+0x1e>
 800f9ce:	f800 1b01 	strb.w	r1, [r0], #1
 800f9d2:	1a80      	subs	r0, r0, r2
 800f9d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f9d6:	2e2e      	cmp	r6, #46	; 0x2e
 800f9d8:	d0f4      	beq.n	800f9c4 <MDNS::WriteDnsName(char const*, char*, bool)+0x10>
 800f9da:	f800 6b01 	strb.w	r6, [r0], #1
 800f9de:	e7ed      	b.n	800f9bc <MDNS::WriteDnsName(char const*, char*, bool)+0x8>
 800f9e0:	4604      	mov	r4, r0
 800f9e2:	1c69      	adds	r1, r5, #1
 800f9e4:	e7e8      	b.n	800f9b8 <MDNS::WriteDnsName(char const*, char*, bool)+0x4>
	...

0800f9e8 <MDNS::CreateAnswerLocalIpAddress()>:
 800f9e8:	2384      	movs	r3, #132	; 0x84
 800f9ea:	b510      	push	{r4, lr}
 800f9ec:	4c0f      	ldr	r4, [pc, #60]	; (800fa2c <MDNS::CreateAnswerLocalIpAddress()+0x44>)
 800f9ee:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 800f9f2:	80e3      	strh	r3, [r4, #6]
 800f9f4:	2300      	movs	r3, #0
 800f9f6:	490e      	ldr	r1, [pc, #56]	; (800fa30 <MDNS::CreateAnswerLocalIpAddress()+0x48>)
 800f9f8:	e9c4 2302 	strd	r2, r3, [r4, #8]
 800f9fc:	6809      	ldr	r1, [r1, #0]
 800f9fe:	f104 0210 	add.w	r2, r4, #16
 800fa02:	2301      	movs	r3, #1
 800fa04:	f7ff ffd6 	bl	800f9b4 <MDNS::WriteDnsName(char const*, char*, bool)>
 800fa08:	490a      	ldr	r1, [pc, #40]	; (800fa34 <MDNS::CreateAnswerLocalIpAddress()+0x4c>)
 800fa0a:	1813      	adds	r3, r2, r0
 800fa0c:	5011      	str	r1, [r2, r0]
 800fa0e:	f04f 42f0 	mov.w	r2, #2013265920	; 0x78000000
 800fa12:	605a      	str	r2, [r3, #4]
 800fa14:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800fa18:	811a      	strh	r2, [r3, #8]
 800fa1a:	4a07      	ldr	r2, [pc, #28]	; (800fa38 <MDNS::CreateAnswerLocalIpAddress()+0x50>)
 800fa1c:	6812      	ldr	r2, [r2, #0]
 800fa1e:	6952      	ldr	r2, [r2, #20]
 800fa20:	f8c3 200a 	str.w	r2, [r3, #10]
 800fa24:	1b1b      	subs	r3, r3, r4
 800fa26:	330a      	adds	r3, #10
 800fa28:	6023      	str	r3, [r4, #0]
 800fa2a:	bd10      	pop	{r4, pc}
 800fa2c:	2001cf14 	andcs	ip, r1, r4, lsl pc
 800fa30:	2001d340 	andcs	sp, r1, r0, asr #6
 800fa34:	01800100 	orreq	r0, r0, r0, lsl #2
 800fa38:	2001d348 	andcs	sp, r1, r8, asr #6

0800fa3c <MDNS::Start()>:
 800fa3c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800fa3e:	4c1d      	ldr	r4, [pc, #116]	; (800fab4 <MDNS::Start()+0x78>)
 800fa40:	f241 41e9 	movw	r1, #5353	; 0x14e9
 800fa44:	4605      	mov	r5, r0
 800fa46:	6820      	ldr	r0, [r4, #0]
 800fa48:	f000 fb28 	bl	801009c <Network::Begin(unsigned short)>
 800fa4c:	4e1a      	ldr	r6, [pc, #104]	; (800fab8 <MDNS::Start()+0x7c>)
 800fa4e:	4f1b      	ldr	r7, [pc, #108]	; (800fabc <MDNS::Start()+0x80>)
 800fa50:	4601      	mov	r1, r0
 800fa52:	6030      	str	r0, [r6, #0]
 800fa54:	683a      	ldr	r2, [r7, #0]
 800fa56:	6820      	ldr	r0, [r4, #0]
 800fa58:	f000 fb31 	bl	80100be <Network::JoinGroup(int, unsigned int)>
 800fa5c:	4b18      	ldr	r3, [pc, #96]	; (800fac0 <MDNS::Start()+0x84>)
 800fa5e:	681b      	ldr	r3, [r3, #0]
 800fa60:	b923      	cbnz	r3, 800fa6c <MDNS::Start()+0x30>
 800fa62:	6821      	ldr	r1, [r4, #0]
 800fa64:	4628      	mov	r0, r5
 800fa66:	3120      	adds	r1, #32
 800fa68:	f7ff ff38 	bl	800f8dc <MDNS::SetName(char const*)>
 800fa6c:	4628      	mov	r0, r5
 800fa6e:	f7ff ffbb 	bl	800f9e8 <MDNS::CreateAnswerLocalIpAddress()>
 800fa72:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800fa76:	4913      	ldr	r1, [pc, #76]	; (800fac4 <MDNS::Start()+0x88>)
 800fa78:	7830      	ldrb	r0, [r6, #0]
 800fa7a:	f831 2b04 	ldrh.w	r2, [r1], #4
 800fa7e:	9300      	str	r3, [sp, #0]
 800fa80:	683b      	ldr	r3, [r7, #0]
 800fa82:	f7ff fe43 	bl	800f70c <udp_send>
 800fa86:	233f      	movs	r3, #63	; 0x3f
 800fa88:	6820      	ldr	r0, [r4, #0]
 800fa8a:	4c0f      	ldr	r4, [pc, #60]	; (800fac8 <MDNS::Start()+0x8c>)
 800fa8c:	f100 0260 	add.w	r2, r0, #96	; 0x60
 800fa90:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 800fa94:	b929      	cbnz	r1, 800faa2 <MDNS::Start()+0x66>
 800fa96:	4413      	add	r3, r2
 800fa98:	429a      	cmp	r2, r3
 800fa9a:	d006      	beq.n	800faaa <MDNS::Start()+0x6e>
 800fa9c:	f802 1b01 	strb.w	r1, [r2], #1
 800faa0:	e7fa      	b.n	800fa98 <MDNS::Start()+0x5c>
 800faa2:	3b01      	subs	r3, #1
 800faa4:	f802 1b01 	strb.w	r1, [r2], #1
 800faa8:	d1f2      	bne.n	800fa90 <MDNS::Start()+0x54>
 800faaa:	2300      	movs	r3, #0
 800faac:	f880 309f 	strb.w	r3, [r0, #159]	; 0x9f
 800fab0:	b003      	add	sp, #12
 800fab2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800fab4:	2001d348 	andcs	sp, r1, r8, asr #6
 800fab8:	2000000c 	andcs	r0, r0, ip
 800fabc:	2001cf10 	andcs	ip, r1, r0, lsl pc
 800fac0:	2001d340 	andcs	sp, r1, r0, asr #6
 800fac4:	2001cf14 	andcs	ip, r1, r4, lsl pc
 800fac8:	080173f9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, r8, r9, ip, sp, lr}

0800facc <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)>:
 800facc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fad0:	4c1b      	ldr	r4, [pc, #108]	; (800fb40 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x74>)
 800fad2:	ea4f 1c01 	mov.w	ip, r1, lsl #4
 800fad6:	eb04 1501 	add.w	r5, r4, r1, lsl #4
 800fada:	2300      	movs	r3, #0
 800fadc:	f854 100c 	ldr.w	r1, [r4, ip]
 800fae0:	4607      	mov	r7, r0
 800fae2:	f7ff ff67 	bl	800f9b4 <MDNS::WriteDnsName(char const*, char*, bool)>
 800fae6:	2301      	movs	r3, #1
 800fae8:	7bac      	ldrb	r4, [r5, #14]
 800faea:	4616      	mov	r6, r2
 800faec:	4915      	ldr	r1, [pc, #84]	; (800fb44 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x78>)
 800faee:	4402      	add	r2, r0
 800faf0:	4815      	ldr	r0, [pc, #84]	; (800fb48 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x7c>)
 800faf2:	429c      	cmp	r4, r3
 800faf4:	bf18      	it	ne
 800faf6:	4601      	movne	r1, r0
 800faf8:	4638      	mov	r0, r7
 800fafa:	f7ff ff5b 	bl	800f9b4 <MDNS::WriteDnsName(char const*, char*, bool)>
 800fafe:	4b13      	ldr	r3, [pc, #76]	; (800fb4c <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x80>)
 800fb00:	1814      	adds	r4, r2, r0
 800fb02:	5013      	str	r3, [r2, r0]
 800fb04:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800fb08:	6063      	str	r3, [r4, #4]
 800fb0a:	4b11      	ldr	r3, [pc, #68]	; (800fb50 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x84>)
 800fb0c:	f8d3 8000 	ldr.w	r8, [r3]
 800fb10:	4640      	mov	r0, r8
 800fb12:	f7ff feab 	bl	800f86c <strlen>
 800fb16:	f100 0308 	add.w	r3, r0, #8
 800fb1a:	ba5b      	rev16	r3, r3
 800fb1c:	8123      	strh	r3, [r4, #8]
 800fb1e:	2300      	movs	r3, #0
 800fb20:	f8c4 300a 	str.w	r3, [r4, #10]
 800fb24:	89ab      	ldrh	r3, [r5, #12]
 800fb26:	f104 0210 	add.w	r2, r4, #16
 800fb2a:	ba5b      	rev16	r3, r3
 800fb2c:	81e3      	strh	r3, [r4, #14]
 800fb2e:	4641      	mov	r1, r8
 800fb30:	2301      	movs	r3, #1
 800fb32:	4638      	mov	r0, r7
 800fb34:	f7ff ff3e 	bl	800f9b4 <MDNS::WriteDnsName(char const*, char*, bool)>
 800fb38:	4410      	add	r0, r2
 800fb3a:	1b80      	subs	r0, r0, r6
 800fb3c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800fb40:	2001d118 	andcs	sp, r1, r8, lsl r1
 800fb44:	080173f5 	stmdaeq	r1, {r0, r2, r4, r5, r6, r7, r8, r9, ip, sp, lr}
 800fb48:	08017412 	stmdaeq	r1, {r1, r4, sl, ip, sp, lr}
 800fb4c:	01802100 	orreq	r2, r0, r0, lsl #2
 800fb50:	2001d340 	andcs	sp, r1, r0, asr #6

0800fb54 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)>:
 800fb54:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fb58:	4e19      	ldr	r6, [pc, #100]	; (800fbc0 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x6c>)
 800fb5a:	010f      	lsls	r7, r1, #4
 800fb5c:	eb06 1501 	add.w	r5, r6, r1, lsl #4
 800fb60:	2300      	movs	r3, #0
 800fb62:	59f1      	ldr	r1, [r6, r7]
 800fb64:	4604      	mov	r4, r0
 800fb66:	f7ff ff25 	bl	800f9b4 <MDNS::WriteDnsName(char const*, char*, bool)>
 800fb6a:	2301      	movs	r3, #1
 800fb6c:	7bae      	ldrb	r6, [r5, #14]
 800fb6e:	4690      	mov	r8, r2
 800fb70:	4914      	ldr	r1, [pc, #80]	; (800fbc4 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x70>)
 800fb72:	4402      	add	r2, r0
 800fb74:	4814      	ldr	r0, [pc, #80]	; (800fbc8 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x74>)
 800fb76:	429e      	cmp	r6, r3
 800fb78:	bf18      	it	ne
 800fb7a:	4601      	movne	r1, r0
 800fb7c:	4620      	mov	r0, r4
 800fb7e:	f7ff ff19 	bl	800f9b4 <MDNS::WriteDnsName(char const*, char*, bool)>
 800fb82:	4b12      	ldr	r3, [pc, #72]	; (800fbcc <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x78>)
 800fb84:	1816      	adds	r6, r2, r0
 800fb86:	5013      	str	r3, [r2, r0]
 800fb88:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800fb8c:	68a8      	ldr	r0, [r5, #8]
 800fb8e:	6073      	str	r3, [r6, #4]
 800fb90:	f106 040b 	add.w	r4, r6, #11
 800fb94:	b938      	cbnz	r0, 800fba6 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x52>
 800fb96:	f44f 7380 	mov.w	r3, #256	; 0x100
 800fb9a:	72b0      	strb	r0, [r6, #10]
 800fb9c:	8133      	strh	r3, [r6, #8]
 800fb9e:	eba4 0008 	sub.w	r0, r4, r8
 800fba2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800fba6:	f7ff fe61 	bl	800f86c <strlen>
 800fbaa:	4607      	mov	r7, r0
 800fbac:	1c43      	adds	r3, r0, #1
 800fbae:	72b0      	strb	r0, [r6, #10]
 800fbb0:	ba5b      	rev16	r3, r3
 800fbb2:	4620      	mov	r0, r4
 800fbb4:	68a9      	ldr	r1, [r5, #8]
 800fbb6:	8133      	strh	r3, [r6, #8]
 800fbb8:	f7ff fe6d 	bl	800f896 <strcpy.isra.0>
 800fbbc:	443c      	add	r4, r7
 800fbbe:	e7ee      	b.n	800fb9e <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x4a>
 800fbc0:	2001d118 	andcs	sp, r1, r8, lsl r1
 800fbc4:	080173f5 	stmdaeq	r1, {r0, r2, r4, r5, r6, r7, r8, r9, ip, sp, lr}
 800fbc8:	08017412 	stmdaeq	r1, {r1, r4, sl, ip, sp, lr}
 800fbcc:	01801000 	orreq	r1, r0, r0

0800fbd0 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)>:
 800fbd0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800fbd4:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800fc38 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x68>
 800fbd8:	ea4f 1901 	mov.w	r9, r1, lsl #4
 800fbdc:	eb08 1501 	add.w	r5, r8, r1, lsl #4
 800fbe0:	6869      	ldr	r1, [r5, #4]
 800fbe2:	2301      	movs	r3, #1
 800fbe4:	4607      	mov	r7, r0
 800fbe6:	f7ff fee5 	bl	800f9b4 <MDNS::WriteDnsName(char const*, char*, bool)>
 800fbea:	4b14      	ldr	r3, [pc, #80]	; (800fc3c <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x6c>)
 800fbec:	f858 8009 	ldr.w	r8, [r8, r9]
 800fbf0:	5013      	str	r3, [r2, r0]
 800fbf2:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800fbf6:	1816      	adds	r6, r2, r0
 800fbf8:	6073      	str	r3, [r6, #4]
 800fbfa:	4640      	mov	r0, r8
 800fbfc:	4614      	mov	r4, r2
 800fbfe:	f7ff fe35 	bl	800f86c <strlen>
 800fc02:	f100 030d 	add.w	r3, r0, #13
 800fc06:	ba5b      	rev16	r3, r3
 800fc08:	4641      	mov	r1, r8
 800fc0a:	8133      	strh	r3, [r6, #8]
 800fc0c:	f106 020a 	add.w	r2, r6, #10
 800fc10:	2300      	movs	r3, #0
 800fc12:	4638      	mov	r0, r7
 800fc14:	f7ff fece 	bl	800f9b4 <MDNS::WriteDnsName(char const*, char*, bool)>
 800fc18:	2301      	movs	r3, #1
 800fc1a:	4402      	add	r2, r0
 800fc1c:	7bad      	ldrb	r5, [r5, #14]
 800fc1e:	4808      	ldr	r0, [pc, #32]	; (800fc40 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x70>)
 800fc20:	4908      	ldr	r1, [pc, #32]	; (800fc44 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x74>)
 800fc22:	429d      	cmp	r5, r3
 800fc24:	bf18      	it	ne
 800fc26:	4601      	movne	r1, r0
 800fc28:	4638      	mov	r0, r7
 800fc2a:	f7ff fec3 	bl	800f9b4 <MDNS::WriteDnsName(char const*, char*, bool)>
 800fc2e:	4410      	add	r0, r2
 800fc30:	1b00      	subs	r0, r0, r4
 800fc32:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800fc36:	bf00      	nop
 800fc38:	2001d118 	andcs	sp, r1, r8, lsl r1
 800fc3c:	01000c00 	tsteq	r0, r0, lsl #24
 800fc40:	08017412 	stmdaeq	r1, {r1, r4, sl, ip, sp, lr}
 800fc44:	080173f5 	stmdaeq	r1, {r0, r2, r4, r5, r6, r7, r8, r9, ip, sp, lr}

0800fc48 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)>:
 800fc48:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fc4a:	460f      	mov	r7, r1
 800fc4c:	2301      	movs	r3, #1
 800fc4e:	490f      	ldr	r1, [pc, #60]	; (800fc8c <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x44>)
 800fc50:	4606      	mov	r6, r0
 800fc52:	f7ff feaf 	bl	800f9b4 <MDNS::WriteDnsName(char const*, char*, bool)>
 800fc56:	4b0e      	ldr	r3, [pc, #56]	; (800fc90 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x48>)
 800fc58:	490e      	ldr	r1, [pc, #56]	; (800fc94 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x4c>)
 800fc5a:	5013      	str	r3, [r2, r0]
 800fc5c:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800fc60:	eb01 1107 	add.w	r1, r1, r7, lsl #4
 800fc64:	684f      	ldr	r7, [r1, #4]
 800fc66:	1815      	adds	r5, r2, r0
 800fc68:	606b      	str	r3, [r5, #4]
 800fc6a:	4638      	mov	r0, r7
 800fc6c:	4614      	mov	r4, r2
 800fc6e:	f7ff fdfd 	bl	800f86c <strlen>
 800fc72:	1c83      	adds	r3, r0, #2
 800fc74:	ba5b      	rev16	r3, r3
 800fc76:	812b      	strh	r3, [r5, #8]
 800fc78:	f105 020a 	add.w	r2, r5, #10
 800fc7c:	2301      	movs	r3, #1
 800fc7e:	4639      	mov	r1, r7
 800fc80:	4630      	mov	r0, r6
 800fc82:	f7ff fe97 	bl	800f9b4 <MDNS::WriteDnsName(char const*, char*, bool)>
 800fc86:	4410      	add	r0, r2
 800fc88:	1b00      	subs	r0, r0, r4
 800fc8a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800fc8c:	08017400 	stmdaeq	r1, {sl, ip, sp, lr}
 800fc90:	01000c00 	tsteq	r0, r0, lsl #24
 800fc94:	2001d118 	andcs	sp, r1, r8, lsl r1

0800fc98 <MDNS::CreateMDNSMessage(unsigned int)>:
 800fc98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fc9a:	2384      	movs	r3, #132	; 0x84
 800fc9c:	4d19      	ldr	r5, [pc, #100]	; (800fd04 <MDNS::CreateMDNSMessage(unsigned int)+0x6c>)
 800fc9e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800fca2:	80eb      	strh	r3, [r5, #6]
 800fca4:	f44f 7380 	mov.w	r3, #256	; 0x100
 800fca8:	f105 0410 	add.w	r4, r5, #16
 800fcac:	e9c5 2302 	strd	r2, r3, [r5, #8]
 800fcb0:	4622      	mov	r2, r4
 800fcb2:	4606      	mov	r6, r0
 800fcb4:	460f      	mov	r7, r1
 800fcb6:	f7ff ff09 	bl	800facc <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)>
 800fcba:	4404      	add	r4, r0
 800fcbc:	4622      	mov	r2, r4
 800fcbe:	4639      	mov	r1, r7
 800fcc0:	4630      	mov	r0, r6
 800fcc2:	f7ff ff47 	bl	800fb54 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)>
 800fcc6:	4404      	add	r4, r0
 800fcc8:	4622      	mov	r2, r4
 800fcca:	4639      	mov	r1, r7
 800fccc:	4630      	mov	r0, r6
 800fcce:	f7ff ffbb 	bl	800fc48 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)>
 800fcd2:	4404      	add	r4, r0
 800fcd4:	4622      	mov	r2, r4
 800fcd6:	4639      	mov	r1, r7
 800fcd8:	4630      	mov	r0, r6
 800fcda:	f7ff ff79 	bl	800fbd0 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)>
 800fcde:	4a0a      	ldr	r2, [pc, #40]	; (800fd08 <MDNS::CreateMDNSMessage(unsigned int)+0x70>)
 800fce0:	4404      	add	r4, r0
 800fce2:	f852 3b10 	ldr.w	r3, [r2], #16
 800fce6:	1e60      	subs	r0, r4, #1
 800fce8:	3b0c      	subs	r3, #12
 800fcea:	4619      	mov	r1, r3
 800fcec:	3901      	subs	r1, #1
 800fcee:	d204      	bcs.n	800fcfa <MDNS::CreateMDNSMessage(unsigned int)+0x62>
 800fcf0:	441c      	add	r4, r3
 800fcf2:	4b06      	ldr	r3, [pc, #24]	; (800fd0c <MDNS::CreateMDNSMessage(unsigned int)+0x74>)
 800fcf4:	1ae4      	subs	r4, r4, r3
 800fcf6:	602c      	str	r4, [r5, #0]
 800fcf8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800fcfa:	f812 6b01 	ldrb.w	r6, [r2], #1
 800fcfe:	f800 6f01 	strb.w	r6, [r0, #1]!
 800fd02:	e7f3      	b.n	800fcec <MDNS::CreateMDNSMessage(unsigned int)+0x54>
 800fd04:	2001d13c 	andcs	sp, r1, ip, lsr r1
 800fd08:	2001cf14 	andcs	ip, r1, r4, lsl pc
 800fd0c:	2001d140 	andcs	sp, r1, r0, asr #2

0800fd10 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>:
 800fd10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fd14:	4d40      	ldr	r5, [pc, #256]	; (800fe18 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x108>)
 800fd16:	b085      	sub	sp, #20
 800fd18:	682c      	ldr	r4, [r5, #0]
 800fd1a:	4680      	mov	r8, r0
 800fd1c:	460f      	mov	r7, r1
 800fd1e:	4616      	mov	r6, r2
 800fd20:	f89d b038 	ldrb.w	fp, [sp, #56]	; 0x38
 800fd24:	f8dd a03c 	ldr.w	sl, [sp, #60]	; 0x3c
 800fd28:	b11c      	cbz	r4, 800fd32 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x22>
 800fd2a:	692a      	ldr	r2, [r5, #16]
 800fd2c:	2a00      	cmp	r2, #0
 800fd2e:	d16e      	bne.n	800fe0e <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xfe>
 800fd30:	2401      	movs	r4, #1
 800fd32:	eb05 1204 	add.w	r2, r5, r4, lsl #4
 800fd36:	ea4f 1904 	mov.w	r9, r4, lsl #4
 800fd3a:	8193      	strh	r3, [r2, #12]
 800fd3c:	f882 b00e 	strb.w	fp, [r2, #14]
 800fd40:	2f00      	cmp	r7, #0
 800fd42:	d154      	bne.n	800fdee <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xde>
 800fd44:	4b35      	ldr	r3, [pc, #212]	; (800fe1c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x10c>)
 800fd46:	6818      	ldr	r0, [r3, #0]
 800fd48:	3020      	adds	r0, #32
 800fd4a:	f7ff fd8f 	bl	800f86c <strlen>
 800fd4e:	4607      	mov	r7, r0
 800fd50:	4630      	mov	r0, r6
 800fd52:	f7ff fd8b 	bl	800f86c <strlen>
 800fd56:	4438      	add	r0, r7
 800fd58:	3001      	adds	r0, #1
 800fd5a:	f002 fcc7 	bl	80126ec <operator new[](unsigned int)>
 800fd5e:	4b2f      	ldr	r3, [pc, #188]	; (800fe1c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x10c>)
 800fd60:	f845 0009 	str.w	r0, [r5, r9]
 800fd64:	6819      	ldr	r1, [r3, #0]
 800fd66:	3120      	adds	r1, #32
 800fd68:	f7ff fd95 	bl	800f896 <strcpy.isra.0>
 800fd6c:	f855 0009 	ldr.w	r0, [r5, r9]
 800fd70:	4631      	mov	r1, r6
 800fd72:	f7ff fd98 	bl	800f8a6 <strcat.isra.0>
 800fd76:	4631      	mov	r1, r6
 800fd78:	4640      	mov	r0, r8
 800fd7a:	f7ff fe0d 	bl	800f998 <MDNS::FindFirstDotFromRight(char const*) const>
 800fd7e:	eb05 0709 	add.w	r7, r5, r9
 800fd82:	4605      	mov	r5, r0
 800fd84:	f7ff fd72 	bl	800f86c <strlen>
 800fd88:	300d      	adds	r0, #13
 800fd8a:	f002 fcaf 	bl	80126ec <operator new[](unsigned int)>
 800fd8e:	4629      	mov	r1, r5
 800fd90:	6078      	str	r0, [r7, #4]
 800fd92:	f7ff fd80 	bl	800f896 <strcpy.isra.0>
 800fd96:	4922      	ldr	r1, [pc, #136]	; (800fe20 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x110>)
 800fd98:	6878      	ldr	r0, [r7, #4]
 800fd9a:	f7ff fd84 	bl	800f8a6 <strcat.isra.0>
 800fd9e:	4921      	ldr	r1, [pc, #132]	; (800fe24 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x114>)
 800fda0:	4b21      	ldr	r3, [pc, #132]	; (800fe28 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x118>)
 800fda2:	6878      	ldr	r0, [r7, #4]
 800fda4:	f1bb 0f01 	cmp.w	fp, #1
 800fda8:	bf18      	it	ne
 800fdaa:	4619      	movne	r1, r3
 800fdac:	f7ff fd7b 	bl	800f8a6 <strcat.isra.0>
 800fdb0:	f1ba 0f00 	cmp.w	sl, #0
 800fdb4:	d009      	beq.n	800fdca <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xba>
 800fdb6:	4650      	mov	r0, sl
 800fdb8:	f7ff fd58 	bl	800f86c <strlen>
 800fdbc:	3001      	adds	r0, #1
 800fdbe:	f002 fc95 	bl	80126ec <operator new[](unsigned int)>
 800fdc2:	4651      	mov	r1, sl
 800fdc4:	60b8      	str	r0, [r7, #8]
 800fdc6:	f7ff fd66 	bl	800f896 <strcpy.isra.0>
 800fdca:	4621      	mov	r1, r4
 800fdcc:	4640      	mov	r0, r8
 800fdce:	f7ff ff63 	bl	800fc98 <MDNS::CreateMDNSMessage(unsigned int)>
 800fdd2:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800fdd6:	4915      	ldr	r1, [pc, #84]	; (800fe2c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x11c>)
 800fdd8:	4815      	ldr	r0, [pc, #84]	; (800fe30 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x120>)
 800fdda:	f831 2b04 	ldrh.w	r2, [r1], #4
 800fdde:	9300      	str	r3, [sp, #0]
 800fde0:	4b14      	ldr	r3, [pc, #80]	; (800fe34 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x124>)
 800fde2:	7800      	ldrb	r0, [r0, #0]
 800fde4:	681b      	ldr	r3, [r3, #0]
 800fde6:	f7ff fc91 	bl	800f70c <udp_send>
 800fdea:	2001      	movs	r0, #1
 800fdec:	e010      	b.n	800fe10 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x100>
 800fdee:	4638      	mov	r0, r7
 800fdf0:	f7ff fd3c 	bl	800f86c <strlen>
 800fdf4:	9003      	str	r0, [sp, #12]
 800fdf6:	4630      	mov	r0, r6
 800fdf8:	f7ff fd38 	bl	800f86c <strlen>
 800fdfc:	9b03      	ldr	r3, [sp, #12]
 800fdfe:	4418      	add	r0, r3
 800fe00:	3001      	adds	r0, #1
 800fe02:	f002 fc73 	bl	80126ec <operator new[](unsigned int)>
 800fe06:	4639      	mov	r1, r7
 800fe08:	f845 0009 	str.w	r0, [r5, r9]
 800fe0c:	e7ac      	b.n	800fd68 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x58>
 800fe0e:	2000      	movs	r0, #0
 800fe10:	b005      	add	sp, #20
 800fe12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fe16:	bf00      	nop
 800fe18:	2001d118 	andcs	sp, r1, r8, lsl r1
 800fe1c:	2001d348 	andcs	sp, r1, r8, asr #6
 800fe20:	0801521f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r9, ip, lr}
 800fe24:	080173f5 	stmdaeq	r1, {r0, r2, r4, r5, r6, r7, r8, r9, ip, sp, lr}
 800fe28:	08017412 	stmdaeq	r1, {r1, r4, sl, ip, sp, lr}
 800fe2c:	2001d13c 	andcs	sp, r1, ip, lsr r1
 800fe30:	2000000c 	andcs	r0, r0, ip
 800fe34:	2001cf10 	andcs	ip, r1, r0, lsl pc

0800fe38 <MDNS::HandleRequest(unsigned short)>:
 800fe38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fe3c:	4605      	mov	r5, r0
 800fe3e:	2700      	movs	r7, #0
 800fe40:	f04f 080c 	mov.w	r8, #12
 800fe44:	b0c5      	sub	sp, #276	; 0x114
 800fe46:	f8df a0c0 	ldr.w	sl, [pc, #192]	; 800ff08 <MDNS::HandleRequest(unsigned short)+0xd0>
 800fe4a:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 800ff0c <MDNS::HandleRequest(unsigned short)+0xd4>
 800fe4e:	9103      	str	r1, [sp, #12]
 800fe50:	9b03      	ldr	r3, [sp, #12]
 800fe52:	42bb      	cmp	r3, r7
 800fe54:	d802      	bhi.n	800fe5c <MDNS::HandleRequest(unsigned short)+0x24>
 800fe56:	b045      	add	sp, #276	; 0x114
 800fe58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fe5c:	f8da 1000 	ldr.w	r1, [sl]
 800fe60:	aa04      	add	r2, sp, #16
 800fe62:	4441      	add	r1, r8
 800fe64:	4628      	mov	r0, r5
 800fe66:	f7ff fd55 	bl	800f914 <MDNS::DecodeDNSNameNotation(char const*, char*)>
 800fe6a:	f8da 2000 	ldr.w	r2, [sl]
 800fe6e:	4440      	add	r0, r8
 800fe70:	1813      	adds	r3, r2, r0
 800fe72:	885b      	ldrh	r3, [r3, #2]
 800fe74:	f100 0804 	add.w	r8, r0, #4
 800fe78:	ba5b      	rev16	r3, r3
 800fe7a:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800fe7e:	2b01      	cmp	r3, #1
 800fe80:	d13d      	bne.n	800fefe <MDNS::HandleRequest(unsigned short)+0xc6>
 800fe82:	5a14      	ldrh	r4, [r2, r0]
 800fe84:	4b22      	ldr	r3, [pc, #136]	; (800ff10 <MDNS::HandleRequest(unsigned short)+0xd8>)
 800fe86:	ba64      	rev16	r4, r4
 800fe88:	6818      	ldr	r0, [r3, #0]
 800fe8a:	a904      	add	r1, sp, #16
 800fe8c:	b2a4      	uxth	r4, r4
 800fe8e:	f7ff fcf5 	bl	800f87c <strcmp>
 800fe92:	b968      	cbnz	r0, 800feb0 <MDNS::HandleRequest(unsigned short)+0x78>
 800fe94:	2c01      	cmp	r4, #1
 800fe96:	d10b      	bne.n	800feb0 <MDNS::HandleRequest(unsigned short)+0x78>
 800fe98:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800fe9c:	491d      	ldr	r1, [pc, #116]	; (800ff14 <MDNS::HandleRequest(unsigned short)+0xdc>)
 800fe9e:	481e      	ldr	r0, [pc, #120]	; (800ff18 <MDNS::HandleRequest(unsigned short)+0xe0>)
 800fea0:	f831 2b04 	ldrh.w	r2, [r1], #4
 800fea4:	9300      	str	r3, [sp, #0]
 800fea6:	4b1d      	ldr	r3, [pc, #116]	; (800ff1c <MDNS::HandleRequest(unsigned short)+0xe4>)
 800fea8:	7800      	ldrb	r0, [r0, #0]
 800feaa:	681b      	ldr	r3, [r3, #0]
 800feac:	f7ff fc2e 	bl	800f70c <udp_send>
 800feb0:	481b      	ldr	r0, [pc, #108]	; (800ff20 <MDNS::HandleRequest(unsigned short)+0xe8>)
 800feb2:	a904      	add	r1, sp, #16
 800feb4:	f7ff fce2 	bl	800f87c <strcmp>
 800feb8:	f04f 0900 	mov.w	r9, #0
 800febc:	4e19      	ldr	r6, [pc, #100]	; (800ff24 <MDNS::HandleRequest(unsigned short)+0xec>)
 800febe:	9002      	str	r0, [sp, #8]
 800fec0:	6833      	ldr	r3, [r6, #0]
 800fec2:	b1c3      	cbz	r3, 800fef6 <MDNS::HandleRequest(unsigned short)+0xbe>
 800fec4:	9b02      	ldr	r3, [sp, #8]
 800fec6:	b123      	cbz	r3, 800fed2 <MDNS::HandleRequest(unsigned short)+0x9a>
 800fec8:	6870      	ldr	r0, [r6, #4]
 800feca:	a904      	add	r1, sp, #16
 800fecc:	f7ff fcd6 	bl	800f87c <strcmp>
 800fed0:	b988      	cbnz	r0, 800fef6 <MDNS::HandleRequest(unsigned short)+0xbe>
 800fed2:	2c0c      	cmp	r4, #12
 800fed4:	d10f      	bne.n	800fef6 <MDNS::HandleRequest(unsigned short)+0xbe>
 800fed6:	4649      	mov	r1, r9
 800fed8:	4628      	mov	r0, r5
 800feda:	f7ff fedd 	bl	800fc98 <MDNS::CreateMDNSMessage(unsigned int)>
 800fede:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800fee2:	480d      	ldr	r0, [pc, #52]	; (800ff18 <MDNS::HandleRequest(unsigned short)+0xe0>)
 800fee4:	9300      	str	r3, [sp, #0]
 800fee6:	4b0d      	ldr	r3, [pc, #52]	; (800ff1c <MDNS::HandleRequest(unsigned short)+0xe4>)
 800fee8:	f8bb 2000 	ldrh.w	r2, [fp]
 800feec:	681b      	ldr	r3, [r3, #0]
 800feee:	490e      	ldr	r1, [pc, #56]	; (800ff28 <MDNS::HandleRequest(unsigned short)+0xf0>)
 800fef0:	7800      	ldrb	r0, [r0, #0]
 800fef2:	f7ff fc0b 	bl	800f70c <udp_send>
 800fef6:	3610      	adds	r6, #16
 800fef8:	f1b9 0f00 	cmp.w	r9, #0
 800fefc:	d001      	beq.n	800ff02 <MDNS::HandleRequest(unsigned short)+0xca>
 800fefe:	3701      	adds	r7, #1
 800ff00:	e7a6      	b.n	800fe50 <MDNS::HandleRequest(unsigned short)+0x18>
 800ff02:	f04f 0901 	mov.w	r9, #1
 800ff06:	e7db      	b.n	800fec0 <MDNS::HandleRequest(unsigned short)+0x88>
 800ff08:	2001d344 	andcs	sp, r1, r4, asr #6
 800ff0c:	2001d13c 	andcs	sp, r1, ip, lsr r1
 800ff10:	2001d340 	andcs	sp, r1, r0, asr #6
 800ff14:	2001cf14 	andcs	ip, r1, r4, lsl pc
 800ff18:	2000000c 	andcs	r0, r0, ip
 800ff1c:	2001cf10 	andcs	ip, r1, r0, lsl pc
 800ff20:	08017400 	stmdaeq	r1, {sl, ip, sp, lr}
 800ff24:	2001d118 	andcs	sp, r1, r8, lsl r1
 800ff28:	2001d140 	andcs	sp, r1, r0, asr #2

0800ff2c <MDNS::Parse()>:
 800ff2c:	4b08      	ldr	r3, [pc, #32]	; (800ff50 <MDNS::Parse()+0x24>)
 800ff2e:	681a      	ldr	r2, [r3, #0]
 800ff30:	8853      	ldrh	r3, [r2, #2]
 800ff32:	ba5b      	rev16	r3, r3
 800ff34:	b299      	uxth	r1, r3
 800ff36:	041b      	lsls	r3, r3, #16
 800ff38:	d408      	bmi.n	800ff4c <MDNS::Parse()+0x20>
 800ff3a:	0b89      	lsrs	r1, r1, #14
 800ff3c:	d106      	bne.n	800ff4c <MDNS::Parse()+0x20>
 800ff3e:	8891      	ldrh	r1, [r2, #4]
 800ff40:	b28b      	uxth	r3, r1
 800ff42:	b11b      	cbz	r3, 800ff4c <MDNS::Parse()+0x20>
 800ff44:	ba49      	rev16	r1, r1
 800ff46:	b289      	uxth	r1, r1
 800ff48:	f7ff bf76 	b.w	800fe38 <MDNS::HandleRequest(unsigned short)>
 800ff4c:	4770      	bx	lr
 800ff4e:	bf00      	nop
 800ff50:	2001d344 	andcs	sp, r1, r4, asr #6

0800ff54 <MDNS::Run()>:
 800ff54:	b538      	push	{r3, r4, r5, lr}
 800ff56:	4d0c      	ldr	r5, [pc, #48]	; (800ff88 <MDNS::Run()+0x34>)
 800ff58:	4604      	mov	r4, r0
 800ff5a:	480c      	ldr	r0, [pc, #48]	; (800ff8c <MDNS::Run()+0x38>)
 800ff5c:	462b      	mov	r3, r5
 800ff5e:	4a0c      	ldr	r2, [pc, #48]	; (800ff90 <MDNS::Run()+0x3c>)
 800ff60:	490c      	ldr	r1, [pc, #48]	; (800ff94 <MDNS::Run()+0x40>)
 800ff62:	7800      	ldrb	r0, [r0, #0]
 800ff64:	f7ff fbac 	bl	800f6c0 <udp_recv2>
 800ff68:	4b0b      	ldr	r3, [pc, #44]	; (800ff98 <MDNS::Run()+0x44>)
 800ff6a:	882a      	ldrh	r2, [r5, #0]
 800ff6c:	8018      	strh	r0, [r3, #0]
 800ff6e:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800ff72:	429a      	cmp	r2, r3
 800ff74:	d106      	bne.n	800ff84 <MDNS::Run()+0x30>
 800ff76:	280c      	cmp	r0, #12
 800ff78:	d904      	bls.n	800ff84 <MDNS::Run()+0x30>
 800ff7a:	4620      	mov	r0, r4
 800ff7c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800ff80:	f7ff bfd4 	b.w	800ff2c <MDNS::Parse()>
 800ff84:	bd38      	pop	{r3, r4, r5, pc}
 800ff86:	bf00      	nop
 800ff88:	2001cf0c 	andcs	ip, r1, ip, lsl #30
 800ff8c:	2000000c 	andcs	r0, r0, ip
 800ff90:	2001cf08 	andcs	ip, r1, r8, lsl #30
 800ff94:	2001d344 	andcs	sp, r1, r4, asr #6
 800ff98:	2001d138 	andcs	sp, r1, r8, lsr r1

0800ff9c <MDNS::Print()>:
 800ff9c:	b510      	push	{r4, lr}
 800ff9e:	4816      	ldr	r0, [pc, #88]	; (800fff8 <MDNS::Print()+0x5c>)
 800ffa0:	f7f9 fae4 	bl	800956c <printf>
 800ffa4:	4b15      	ldr	r3, [pc, #84]	; (800fffc <MDNS::Print()+0x60>)
 800ffa6:	681b      	ldr	r3, [r3, #0]
 800ffa8:	3301      	adds	r3, #1
 800ffaa:	d104      	bne.n	800ffb6 <MDNS::Print()+0x1a>
 800ffac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ffb0:	4813      	ldr	r0, [pc, #76]	; (8010000 <MDNS::Print()+0x64>)
 800ffb2:	f7f9 badb 	b.w	800956c <printf>
 800ffb6:	4b13      	ldr	r3, [pc, #76]	; (8010004 <MDNS::Print()+0x68>)
 800ffb8:	4c13      	ldr	r4, [pc, #76]	; (8010008 <MDNS::Print()+0x6c>)
 800ffba:	6819      	ldr	r1, [r3, #0]
 800ffbc:	4813      	ldr	r0, [pc, #76]	; (801000c <MDNS::Print()+0x70>)
 800ffbe:	f7f9 fad5 	bl	800956c <printf>
 800ffc2:	6823      	ldr	r3, [r4, #0]
 800ffc4:	b14b      	cbz	r3, 800ffda <MDNS::Print()+0x3e>
 800ffc6:	4a12      	ldr	r2, [pc, #72]	; (8010010 <MDNS::Print()+0x74>)
 800ffc8:	68a3      	ldr	r3, [r4, #8]
 800ffca:	6861      	ldr	r1, [r4, #4]
 800ffcc:	2b00      	cmp	r3, #0
 800ffce:	bf08      	it	eq
 800ffd0:	4613      	moveq	r3, r2
 800ffd2:	4810      	ldr	r0, [pc, #64]	; (8010014 <MDNS::Print()+0x78>)
 800ffd4:	89a2      	ldrh	r2, [r4, #12]
 800ffd6:	f7f9 fac9 	bl	800956c <printf>
 800ffda:	6923      	ldr	r3, [r4, #16]
 800ffdc:	b15b      	cbz	r3, 800fff6 <MDNS::Print()+0x5a>
 800ffde:	69a3      	ldr	r3, [r4, #24]
 800ffe0:	4a0b      	ldr	r2, [pc, #44]	; (8010010 <MDNS::Print()+0x74>)
 800ffe2:	6961      	ldr	r1, [r4, #20]
 800ffe4:	2b00      	cmp	r3, #0
 800ffe6:	bf08      	it	eq
 800ffe8:	4613      	moveq	r3, r2
 800ffea:	480a      	ldr	r0, [pc, #40]	; (8010014 <MDNS::Print()+0x78>)
 800ffec:	8ba2      	ldrh	r2, [r4, #28]
 800ffee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fff2:	f7f9 babb 	b.w	800956c <printf>
 800fff6:	bd10      	pop	{r4, pc}
 800fff8:	0801741d 	stmdaeq	r1, {r0, r2, r3, r4, sl, ip, sp, lr}
 800fffc:	2000000c 	andcs	r0, r0, ip
 8010000:	08017423 	stmdaeq	r1, {r0, r1, r5, sl, ip, sp, lr}
 8010004:	2001d340 	andcs	sp, r1, r0, asr #6
 8010008:	2001d118 	andcs	sp, r1, r8, lsl r1
 801000c:	08017431 	stmdaeq	r1, {r0, r4, r5, sl, ip, sp, lr}
 8010010:	0801551b 	stmdaeq	r1, {r0, r1, r3, r4, r8, sl, ip, lr}
 8010014:	0801743d 	stmdaeq	r1, {r0, r2, r3, r4, r5, sl, ip, sp, lr}

08010018 <strncpy.constprop.0.isra.0>:
 8010018:	233f      	movs	r3, #63	; 0x3f
 801001a:	3901      	subs	r1, #1
 801001c:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 8010020:	b92a      	cbnz	r2, 801002e <strncpy.constprop.0.isra.0+0x16>
 8010022:	4403      	add	r3, r0
 8010024:	4298      	cmp	r0, r3
 8010026:	d006      	beq.n	8010036 <strncpy.constprop.0.isra.0+0x1e>
 8010028:	f800 2b01 	strb.w	r2, [r0], #1
 801002c:	e7fa      	b.n	8010024 <strncpy.constprop.0.isra.0+0xc>
 801002e:	3b01      	subs	r3, #1
 8010030:	f800 2b01 	strb.w	r2, [r0], #1
 8010034:	d1f2      	bne.n	801001c <strncpy.constprop.0.isra.0+0x4>
 8010036:	4770      	bx	lr

08010038 <Network::Network()>:
 8010038:	4a12      	ldr	r2, [pc, #72]	; (8010084 <Network::Network()+0x4c>)
 801003a:	2300      	movs	r3, #0
 801003c:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8010040:	6010      	str	r0, [r2, #0]
 8010042:	2201      	movs	r2, #1
 8010044:	e9c0 2100 	strd	r2, r1, [r0]
 8010048:	e9c0 2302 	strd	r2, r3, [r0, #8]
 801004c:	2200      	movs	r2, #0
 801004e:	e9c0 3330 	strd	r3, r3, [r0, #192]	; 0xc0
 8010052:	e9c0 3305 	strd	r3, r3, [r0, #20]
 8010056:	490c      	ldr	r1, [pc, #48]	; (8010088 <Network::Network()+0x50>)
 8010058:	6102      	str	r2, [r0, #16]
 801005a:	f8c0 30b8 	str.w	r3, [r0, #184]	; 0xb8
 801005e:	f8c0 30c8 	str.w	r3, [r0, #200]	; 0xc8
 8010062:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
 8010066:	61c3      	str	r3, [r0, #28]
 8010068:	f880 3020 	strb.w	r3, [r0, #32]
 801006c:	f880 3060 	strb.w	r3, [r0, #96]	; 0x60
 8010070:	f100 02a5 	add.w	r2, r0, #165	; 0xa5
 8010074:	f811 3b01 	ldrb.w	r3, [r1], #1
 8010078:	f802 3f01 	strb.w	r3, [r2, #1]!
 801007c:	2b00      	cmp	r3, #0
 801007e:	d1f9      	bne.n	8010074 <Network::Network()+0x3c>
 8010080:	4770      	bx	lr
 8010082:	bf00      	nop
 8010084:	2001d348 	andcs	sp, r1, r8, asr #6
 8010088:	08017448 	stmdaeq	r1, {r3, r6, sl, ip, sp, lr}

0801008c <Network::Shutdown()>:
 801008c:	b508      	push	{r3, lr}
 801008e:	30bc      	adds	r0, #188	; 0xbc
 8010090:	f001 fc1e 	bl	80118d0 <NetworkDisplay::ShowShutdown()>
 8010094:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8010098:	f7f7 b8d6 	b.w	8007248 <net_shutdown>

0801009c <Network::Begin(unsigned short)>:
 801009c:	4608      	mov	r0, r1
 801009e:	f7ff ba9f 	b.w	800f5e0 <udp_bind>

080100a2 <Network::End(unsigned short)>:
 80100a2:	4608      	mov	r0, r1
 80100a4:	f7ff bab6 	b.w	800f614 <udp_unbind>

080100a8 <Network::MacAddressCopyTo(unsigned char*)>:
 80100a8:	f100 039f 	add.w	r3, r0, #159	; 0x9f
 80100ac:	3901      	subs	r1, #1
 80100ae:	30a5      	adds	r0, #165	; 0xa5
 80100b0:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 80100b4:	4283      	cmp	r3, r0
 80100b6:	f801 2f01 	strb.w	r2, [r1, #1]!
 80100ba:	d1f9      	bne.n	80100b0 <Network::MacAddressCopyTo(unsigned char*)+0x8>
 80100bc:	4770      	bx	lr

080100be <Network::JoinGroup(int, unsigned int)>:
 80100be:	4610      	mov	r0, r2
 80100c0:	f001 b814 	b.w	80110ec <igmp_join>

080100c4 <Network::SetDefaultIp()>:
 80100c4:	f890 30a4 	ldrb.w	r3, [r0, #164]	; 0xa4
 80100c8:	f890 20a3 	ldrb.w	r2, [r0, #163]	; 0xa3
 80100cc:	041b      	lsls	r3, r3, #16
 80100ce:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 80100d2:	f890 20a5 	ldrb.w	r2, [r0, #165]	; 0xa5
 80100d6:	3302      	adds	r3, #2
 80100d8:	eb03 6302 	add.w	r3, r3, r2, lsl #24
 80100dc:	22ff      	movs	r2, #255	; 0xff
 80100de:	6143      	str	r3, [r0, #20]
 80100e0:	e9c0 3206 	strd	r3, r2, [r0, #24]
 80100e4:	4770      	bx	lr
	...

080100e8 <Network::Init(NetworkParamsStore*)>:
 80100e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80100ec:	b0a5      	sub	sp, #148	; 0x94
 80100ee:	4604      	mov	r4, r0
 80100f0:	a80b      	add	r0, sp, #44	; 0x2c
 80100f2:	f000 fae9 	bl	80106c8 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 80100f6:	a80b      	add	r0, sp, #44	; 0x2c
 80100f8:	f000 faf2 	bl	80106e0 <NetworkParams::Load()>
 80100fc:	b110      	cbz	r0, 8010104 <Network::Init(NetworkParamsStore*)+0x1c>
 80100fe:	a80b      	add	r0, sp, #44	; 0x2c
 8010100:	f000 fcc5 	bl	8010a8e <NetworkParams::Dump()>
 8010104:	f104 05bc 	add.w	r5, r4, #188	; 0xbc
 8010108:	4628      	mov	r0, r5
 801010a:	f001 fbc3 	bl	8011894 <NetworkDisplay::ShowEmacStart()>
 801010e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8010110:	f104 06a0 	add.w	r6, r4, #160	; 0xa0
 8010114:	9308      	str	r3, [sp, #32]
 8010116:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010118:	4630      	mov	r0, r6
 801011a:	9309      	str	r3, [sp, #36]	; 0x24
 801011c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801011e:	f104 0720 	add.w	r7, r4, #32
 8010122:	930a      	str	r3, [sp, #40]	; 0x28
 8010124:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 8010128:	7163      	strb	r3, [r4, #5]
 801012a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801012c:	f013 0240 	ands.w	r2, r3, #64	; 0x40
 8010130:	bf18      	it	ne
 8010132:	f8dd 2085 	ldrne.w	r2, [sp, #133]	; 0x85
 8010136:	061b      	lsls	r3, r3, #24
 8010138:	bf54      	ite	pl
 801013a:	2300      	movpl	r3, #0
 801013c:	f8dd 3089 	ldrmi.w	r3, [sp, #137]	; 0x89
 8010140:	60e2      	str	r2, [r4, #12]
 8010142:	6123      	str	r3, [r4, #16]
 8010144:	f003 ff5c 	bl	8014000 <emac_start(unsigned char*)>
 8010148:	f89d 3045 	ldrb.w	r3, [sp, #69]	; 0x45
 801014c:	2b00      	cmp	r3, #0
 801014e:	f040 80c7 	bne.w	80102e0 <Network::Init(NetworkParamsStore*)+0x1f8>
 8010152:	4984      	ldr	r1, [pc, #528]	; (8010364 <Network::Init(NetworkParamsStore*)+0x27c>)
 8010154:	f104 001f 	add.w	r0, r4, #31
 8010158:	f811 2b01 	ldrb.w	r2, [r1], #1
 801015c:	f103 0c01 	add.w	ip, r3, #1
 8010160:	2a00      	cmp	r2, #0
 8010162:	f040 80b9 	bne.w	80102d8 <Network::Init(NetworkParamsStore*)+0x1f0>
 8010166:	f894 20a3 	ldrb.w	r2, [r4, #163]	; 0xa3
 801016a:	18e1      	adds	r1, r4, r3
 801016c:	0910      	lsrs	r0, r2, #4
 801016e:	2a9f      	cmp	r2, #159	; 0x9f
 8010170:	f002 020f 	and.w	r2, r2, #15
 8010174:	bf94      	ite	ls
 8010176:	3030      	addls	r0, #48	; 0x30
 8010178:	3037      	addhi	r0, #55	; 0x37
 801017a:	2a09      	cmp	r2, #9
 801017c:	bf94      	ite	ls
 801017e:	3230      	addls	r2, #48	; 0x30
 8010180:	3237      	addhi	r2, #55	; 0x37
 8010182:	44a4      	add	ip, r4
 8010184:	f881 0020 	strb.w	r0, [r1, #32]
 8010188:	f88c 2020 	strb.w	r2, [ip, #32]
 801018c:	f894 20a4 	ldrb.w	r2, [r4, #164]	; 0xa4
 8010190:	f103 0802 	add.w	r8, r3, #2
 8010194:	0910      	lsrs	r0, r2, #4
 8010196:	2a9f      	cmp	r2, #159	; 0x9f
 8010198:	f002 020f 	and.w	r2, r2, #15
 801019c:	bf94      	ite	ls
 801019e:	3030      	addls	r0, #48	; 0x30
 80101a0:	3037      	addhi	r0, #55	; 0x37
 80101a2:	f103 0e03 	add.w	lr, r3, #3
 80101a6:	2a09      	cmp	r2, #9
 80101a8:	eb04 0c08 	add.w	ip, r4, r8
 80101ac:	f88c 0020 	strb.w	r0, [ip, #32]
 80101b0:	bf94      	ite	ls
 80101b2:	3230      	addls	r2, #48	; 0x30
 80101b4:	3237      	addhi	r2, #55	; 0x37
 80101b6:	eb04 000e 	add.w	r0, r4, lr
 80101ba:	f880 2020 	strb.w	r2, [r0, #32]
 80101be:	f894 20a5 	ldrb.w	r2, [r4, #165]	; 0xa5
 80101c2:	f103 0c04 	add.w	ip, r3, #4
 80101c6:	0910      	lsrs	r0, r2, #4
 80101c8:	2a9f      	cmp	r2, #159	; 0x9f
 80101ca:	f002 020f 	and.w	r2, r2, #15
 80101ce:	bf94      	ite	ls
 80101d0:	3030      	addls	r0, #48	; 0x30
 80101d2:	3037      	addhi	r0, #55	; 0x37
 80101d4:	3305      	adds	r3, #5
 80101d6:	2a09      	cmp	r2, #9
 80101d8:	4423      	add	r3, r4
 80101da:	44a4      	add	ip, r4
 80101dc:	bf94      	ite	ls
 80101de:	3230      	addls	r2, #48	; 0x30
 80101e0:	3237      	addhi	r2, #55	; 0x37
 80101e2:	f88c 0020 	strb.w	r0, [ip, #32]
 80101e6:	f883 2020 	strb.w	r2, [r3, #32]
 80101ea:	2300      	movs	r3, #0
 80101ec:	f881 3026 	strb.w	r3, [r1, #38]	; 0x26
 80101f0:	f003 ffb0 	bl	8014154 <net::link_register_read()>
 80101f4:	7963      	ldrb	r3, [r4, #5]
 80101f6:	6020      	str	r0, [r4, #0]
 80101f8:	2800      	cmp	r0, #0
 80101fa:	f040 809c 	bne.w	8010336 <Network::Init(NetworkParamsStore*)+0x24e>
 80101fe:	2b00      	cmp	r3, #0
 8010200:	f040 80aa 	bne.w	8010358 <Network::Init(NetworkParamsStore*)+0x270>
 8010204:	9b08      	ldr	r3, [sp, #32]
 8010206:	2b00      	cmp	r3, #0
 8010208:	d173      	bne.n	80102f2 <Network::Init(NetworkParamsStore*)+0x20a>
 801020a:	4620      	mov	r0, r4
 801020c:	f7ff ff5a 	bl	80100c4 <Network::SetDefaultIp()>
 8010210:	6963      	ldr	r3, [r4, #20]
 8010212:	69e2      	ldr	r2, [r4, #28]
 8010214:	9308      	str	r3, [sp, #32]
 8010216:	e9cd 2309 	strd	r2, r3, [sp, #36]	; 0x24
 801021a:	1de3      	adds	r3, r4, #7
 801021c:	f104 0905 	add.w	r9, r4, #5
 8010220:	9302      	str	r3, [sp, #8]
 8010222:	9300      	str	r3, [sp, #0]
 8010224:	463a      	mov	r2, r7
 8010226:	464b      	mov	r3, r9
 8010228:	4630      	mov	r0, r6
 801022a:	a908      	add	r1, sp, #32
 801022c:	f7f6 ffbc 	bl	80071a8 <net_init>
 8010230:	79e3      	ldrb	r3, [r4, #7]
 8010232:	b11b      	cbz	r3, 801023c <Network::Init(NetworkParamsStore*)+0x154>
 8010234:	2104      	movs	r1, #4
 8010236:	4628      	mov	r0, r5
 8010238:	f001 fb50 	bl	80118dc <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 801023c:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 8010240:	f89d a08d 	ldrb.w	sl, [sp, #141]	; 0x8d
 8010244:	9304      	str	r3, [sp, #16]
 8010246:	233c      	movs	r3, #60	; 0x3c
 8010248:	fb03 f30a 	mul.w	r3, r3, sl
 801024c:	f8df 8118 	ldr.w	r8, [pc, #280]	; 8010368 <Network::Init(NetworkParamsStore*)+0x280>
 8010250:	f8df b118 	ldr.w	fp, [pc, #280]	; 801036c <Network::Init(NetworkParamsStore*)+0x284>
 8010254:	9303      	str	r3, [sp, #12]
 8010256:	79e3      	ldrb	r3, [r4, #7]
 8010258:	b393      	cbz	r3, 80102c0 <Network::Init(NetworkParamsStore*)+0x1d8>
 801025a:	f1ba 0f00 	cmp.w	sl, #0
 801025e:	d02f      	beq.n	80102c0 <Network::Init(NetworkParamsStore*)+0x1d8>
 8010260:	9b04      	ldr	r3, [sp, #16]
 8010262:	b36b      	cbz	r3, 80102c0 <Network::Init(NetworkParamsStore*)+0x1d8>
 8010264:	2104      	movs	r1, #4
 8010266:	f8d8 0000 	ldr.w	r0, [r8]
 801026a:	f002 f95d 	bl	8012528 <LedBlink::SetMode(ledblink::Mode)>
 801026e:	2103      	movs	r1, #3
 8010270:	4628      	mov	r0, r5
 8010272:	f001 fb33 	bl	80118dc <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 8010276:	2000      	movs	r0, #0
 8010278:	f002 fc14 	bl	8012aa4 <time>
 801027c:	9005      	str	r0, [sp, #20]
 801027e:	2000      	movs	r0, #0
 8010280:	f002 fc10 	bl	8012aa4 <time>
 8010284:	9b05      	ldr	r3, [sp, #20]
 8010286:	493a      	ldr	r1, [pc, #232]	; (8010370 <Network::Init(NetworkParamsStore*)+0x288>)
 8010288:	1ac0      	subs	r0, r0, r3
 801028a:	9b03      	ldr	r3, [sp, #12]
 801028c:	4298      	cmp	r0, r3
 801028e:	db38      	blt.n	8010302 <Network::Init(NetworkParamsStore*)+0x21a>
 8010290:	2101      	movs	r1, #1
 8010292:	4628      	mov	r0, r5
 8010294:	f001 fb22 	bl	80118dc <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 8010298:	2101      	movs	r1, #1
 801029a:	f8d8 0000 	ldr.w	r0, [r8]
 801029e:	f002 f943 	bl	8012528 <LedBlink::SetMode(ledblink::Mode)>
 80102a2:	2301      	movs	r3, #1
 80102a4:	7163      	strb	r3, [r4, #5]
 80102a6:	2300      	movs	r3, #0
 80102a8:	71e3      	strb	r3, [r4, #7]
 80102aa:	9b02      	ldr	r3, [sp, #8]
 80102ac:	463a      	mov	r2, r7
 80102ae:	9300      	str	r3, [sp, #0]
 80102b0:	4630      	mov	r0, r6
 80102b2:	464b      	mov	r3, r9
 80102b4:	a908      	add	r1, sp, #32
 80102b6:	f7f6 ff77 	bl	80071a8 <net_init>
 80102ba:	7963      	ldrb	r3, [r4, #5]
 80102bc:	2b00      	cmp	r3, #0
 80102be:	d0ca      	beq.n	8010256 <Network::Init(NetworkParamsStore*)+0x16e>
 80102c0:	9b08      	ldr	r3, [sp, #32]
 80102c2:	4628      	mov	r0, r5
 80102c4:	6163      	str	r3, [r4, #20]
 80102c6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80102c8:	61e3      	str	r3, [r4, #28]
 80102ca:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80102cc:	61a3      	str	r3, [r4, #24]
 80102ce:	f001 fae7 	bl	80118a0 <NetworkDisplay::ShowIp()>
 80102d2:	b025      	add	sp, #148	; 0x94
 80102d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80102d8:	4663      	mov	r3, ip
 80102da:	f800 2f01 	strb.w	r2, [r0, #1]!
 80102de:	e73b      	b.n	8010158 <Network::Init(NetworkParamsStore*)+0x70>
 80102e0:	4638      	mov	r0, r7
 80102e2:	f10d 0145 	add.w	r1, sp, #69	; 0x45
 80102e6:	f7ff fe97 	bl	8010018 <strncpy.constprop.0.isra.0>
 80102ea:	2300      	movs	r3, #0
 80102ec:	f884 305f 	strb.w	r3, [r4, #95]	; 0x5f
 80102f0:	e77e      	b.n	80101f0 <Network::Init(NetworkParamsStore*)+0x108>
 80102f2:	69e1      	ldr	r1, [r4, #28]
 80102f4:	e9d4 2305 	ldrd	r2, r3, [r4, #20]
 80102f8:	4053      	eors	r3, r2
 80102fa:	420b      	tst	r3, r1
 80102fc:	bf18      	it	ne
 80102fe:	920a      	strne	r2, [sp, #40]	; 0x28
 8010300:	e78b      	b.n	801021a <Network::Init(NetworkParamsStore*)+0x132>
 8010302:	f8d8 3000 	ldr.w	r3, [r8]
 8010306:	f8d3 c00c 	ldr.w	ip, [r3, #12]
 801030a:	f1bc 0f00 	cmp.w	ip, #0
 801030e:	d0b6      	beq.n	801027e <Network::Init(NetworkParamsStore*)+0x196>
 8010310:	6808      	ldr	r0, [r1, #0]
 8010312:	695a      	ldr	r2, [r3, #20]
 8010314:	1a80      	subs	r0, r0, r2
 8010316:	4584      	cmp	ip, r0
 8010318:	d8b1      	bhi.n	801027e <Network::Init(NetworkParamsStore*)+0x196>
 801031a:	6808      	ldr	r0, [r1, #0]
 801031c:	6158      	str	r0, [r3, #20]
 801031e:	6918      	ldr	r0, [r3, #16]
 8010320:	2801      	cmp	r0, #1
 8010322:	f080 0201 	eor.w	r2, r0, #1
 8010326:	611a      	str	r2, [r3, #16]
 8010328:	bf16      	itet	ne
 801032a:	2301      	movne	r3, #1
 801032c:	f8cb 0014 	streq.w	r0, [fp, #20]
 8010330:	f8cb 3010 	strne.w	r3, [fp, #16]
 8010334:	e7a3      	b.n	801027e <Network::Init(NetworkParamsStore*)+0x196>
 8010336:	b11b      	cbz	r3, 8010340 <Network::Init(NetworkParamsStore*)+0x258>
 8010338:	2300      	movs	r3, #0
 801033a:	e9c4 3306 	strd	r3, r3, [r4, #24]
 801033e:	9308      	str	r3, [sp, #32]
 8010340:	2300      	movs	r3, #0
 8010342:	f88d 301f 	strb.w	r3, [sp, #31]
 8010346:	f10d 031f 	add.w	r3, sp, #31
 801034a:	463a      	mov	r2, r7
 801034c:	4630      	mov	r0, r6
 801034e:	9300      	str	r3, [sp, #0]
 8010350:	a908      	add	r1, sp, #32
 8010352:	f7f6 ff29 	bl	80071a8 <net_init>
 8010356:	e7b3      	b.n	80102c0 <Network::Init(NetworkParamsStore*)+0x1d8>
 8010358:	2101      	movs	r1, #1
 801035a:	4628      	mov	r0, r5
 801035c:	f001 fabe 	bl	80118dc <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 8010360:	e75b      	b.n	801021a <Network::Init(NetworkParamsStore*)+0x132>
 8010362:	bf00      	nop
 8010364:	0801744d 	stmdaeq	r1, {r0, r2, r3, r6, sl, ip, sp, lr}
 8010368:	2001da0c 	andcs	sp, r1, ip, lsl #20
 801036c:	40011000 	andmi	r1, r1, r0
 8010370:	2001da24 	andcs	sp, r1, r4, lsr #20

08010374 <Network::SetIp(unsigned int)>:
 8010374:	7943      	ldrb	r3, [r0, #5]
 8010376:	b570      	push	{r4, r5, r6, lr}
 8010378:	4604      	mov	r4, r0
 801037a:	460d      	mov	r5, r1
 801037c:	2600      	movs	r6, #0
 801037e:	b113      	cbz	r3, 8010386 <Network::SetIp(unsigned int)+0x12>
 8010380:	7146      	strb	r6, [r0, #5]
 8010382:	f7fe fecb 	bl	800f11c <net_dhcp_release>
 8010386:	71e6      	strb	r6, [r4, #7]
 8010388:	b975      	cbnz	r5, 80103a8 <Network::SetIp(unsigned int)+0x34>
 801038a:	4620      	mov	r0, r4
 801038c:	f7ff fe9a 	bl	80100c4 <Network::SetDefaultIp()>
 8010390:	6960      	ldr	r0, [r4, #20]
 8010392:	f7fe fe87 	bl	800f0a4 <net_set_ip>
 8010396:	34bc      	adds	r4, #188	; 0xbc
 8010398:	4620      	mov	r0, r4
 801039a:	f001 fa81 	bl	80118a0 <NetworkDisplay::ShowIp()>
 801039e:	4620      	mov	r0, r4
 80103a0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80103a4:	f001 ba82 	b.w	80118ac <NetworkDisplay::ShowNetMask()>
 80103a8:	4628      	mov	r0, r5
 80103aa:	f7fe fe7b 	bl	800f0a4 <net_set_ip>
 80103ae:	f8d4 00b8 	ldr.w	r0, [r4, #184]	; 0xb8
 80103b2:	e9c4 5505 	strd	r5, r5, [r4, #20]
 80103b6:	2800      	cmp	r0, #0
 80103b8:	d0ed      	beq.n	8010396 <Network::SetIp(unsigned int)+0x22>
 80103ba:	6803      	ldr	r3, [r0, #0]
 80103bc:	4629      	mov	r1, r5
 80103be:	689b      	ldr	r3, [r3, #8]
 80103c0:	4798      	blx	r3
 80103c2:	f8d4 00b8 	ldr.w	r0, [r4, #184]	; 0xb8
 80103c6:	2100      	movs	r1, #0
 80103c8:	6803      	ldr	r3, [r0, #0]
 80103ca:	699b      	ldr	r3, [r3, #24]
 80103cc:	4798      	blx	r3
 80103ce:	e7e2      	b.n	8010396 <Network::SetIp(unsigned int)+0x22>

080103d0 <Network::SetNetmask(unsigned int)>:
 80103d0:	69c2      	ldr	r2, [r0, #28]
 80103d2:	b510      	push	{r4, lr}
 80103d4:	428a      	cmp	r2, r1
 80103d6:	4604      	mov	r4, r0
 80103d8:	d00f      	beq.n	80103fa <Network::SetNetmask(unsigned int)+0x2a>
 80103da:	61c1      	str	r1, [r0, #28]
 80103dc:	f8d0 00b8 	ldr.w	r0, [r0, #184]	; 0xb8
 80103e0:	b110      	cbz	r0, 80103e8 <Network::SetNetmask(unsigned int)+0x18>
 80103e2:	6803      	ldr	r3, [r0, #0]
 80103e4:	68db      	ldr	r3, [r3, #12]
 80103e6:	4798      	blx	r3
 80103e8:	34bc      	adds	r4, #188	; 0xbc
 80103ea:	4620      	mov	r0, r4
 80103ec:	f001 fa58 	bl	80118a0 <NetworkDisplay::ShowIp()>
 80103f0:	4620      	mov	r0, r4
 80103f2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80103f6:	f001 ba59 	b.w	80118ac <NetworkDisplay::ShowNetMask()>
 80103fa:	bd10      	pop	{r4, pc}

080103fc <Network::SetHostName(char const*)>:
 80103fc:	b570      	push	{r4, r5, r6, lr}
 80103fe:	4604      	mov	r4, r0
 8010400:	f100 0520 	add.w	r5, r0, #32
 8010404:	4628      	mov	r0, r5
 8010406:	f7ff fe07 	bl	8010018 <strncpy.constprop.0.isra.0>
 801040a:	2300      	movs	r3, #0
 801040c:	f8d4 00b8 	ldr.w	r0, [r4, #184]	; 0xb8
 8010410:	f884 305f 	strb.w	r3, [r4, #95]	; 0x5f
 8010414:	b158      	cbz	r0, 801042e <Network::SetHostName(char const*)+0x32>
 8010416:	6803      	ldr	r3, [r0, #0]
 8010418:	695e      	ldr	r6, [r3, #20]
 801041a:	462b      	mov	r3, r5
 801041c:	461a      	mov	r2, r3
 801041e:	7811      	ldrb	r1, [r2, #0]
 8010420:	3301      	adds	r3, #1
 8010422:	2900      	cmp	r1, #0
 8010424:	d1fa      	bne.n	801041c <Network::SetHostName(char const*)+0x20>
 8010426:	1b52      	subs	r2, r2, r5
 8010428:	4629      	mov	r1, r5
 801042a:	b292      	uxth	r2, r2
 801042c:	47b0      	blx	r6
 801042e:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 8010432:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010436:	f001 ba45 	b.w	80118c4 <NetworkDisplay::ShowHostName()>

0801043a <Network::SetZeroconf()>:
 801043a:	b530      	push	{r4, r5, lr}
 801043c:	b085      	sub	sp, #20
 801043e:	4604      	mov	r4, r0
 8010440:	a801      	add	r0, sp, #4
 8010442:	f7fe fe75 	bl	800f130 <net_set_zeroconf>
 8010446:	71e0      	strb	r0, [r4, #7]
 8010448:	b170      	cbz	r0, 8010468 <Network::SetZeroconf()+0x2e>
 801044a:	9b01      	ldr	r3, [sp, #4]
 801044c:	f8d4 00b8 	ldr.w	r0, [r4, #184]	; 0xb8
 8010450:	6163      	str	r3, [r4, #20]
 8010452:	9b02      	ldr	r3, [sp, #8]
 8010454:	61e3      	str	r3, [r4, #28]
 8010456:	9b03      	ldr	r3, [sp, #12]
 8010458:	61a3      	str	r3, [r4, #24]
 801045a:	2300      	movs	r3, #0
 801045c:	7163      	strb	r3, [r4, #5]
 801045e:	b118      	cbz	r0, 8010468 <Network::SetZeroconf()+0x2e>
 8010460:	6803      	ldr	r3, [r0, #0]
 8010462:	2101      	movs	r1, #1
 8010464:	699b      	ldr	r3, [r3, #24]
 8010466:	4798      	blx	r3
 8010468:	f104 05bc 	add.w	r5, r4, #188	; 0xbc
 801046c:	4628      	mov	r0, r5
 801046e:	f001 fa17 	bl	80118a0 <NetworkDisplay::ShowIp()>
 8010472:	4628      	mov	r0, r5
 8010474:	f001 fa1a 	bl	80118ac <NetworkDisplay::ShowNetMask()>
 8010478:	79e0      	ldrb	r0, [r4, #7]
 801047a:	b005      	add	sp, #20
 801047c:	bd30      	pop	{r4, r5, pc}
	...

08010480 <Network::EnableDhcp()>:
 8010480:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010482:	4e25      	ldr	r6, [pc, #148]	; (8010518 <Network::EnableDhcp()+0x98>)
 8010484:	4604      	mov	r4, r0
 8010486:	6833      	ldr	r3, [r6, #0]
 8010488:	b085      	sub	sp, #20
 801048a:	781f      	ldrb	r7, [r3, #0]
 801048c:	b137      	cbz	r7, 801049c <Network::EnableDhcp()+0x1c>
 801048e:	2200      	movs	r2, #0
 8010490:	2104      	movs	r1, #4
 8010492:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8010496:	701a      	strb	r2, [r3, #0]
 8010498:	f002 fcec 	bl	8012e74 <fwdgt_config>
 801049c:	f104 05bc 	add.w	r5, r4, #188	; 0xbc
 80104a0:	2101      	movs	r1, #1
 80104a2:	4628      	mov	r0, r5
 80104a4:	f001 fa1a 	bl	80118dc <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 80104a8:	1de2      	adds	r2, r4, #7
 80104aa:	f104 0120 	add.w	r1, r4, #32
 80104ae:	a801      	add	r0, sp, #4
 80104b0:	f7fe fe08 	bl	800f0c4 <net_set_dhcp>
 80104b4:	79e3      	ldrb	r3, [r4, #7]
 80104b6:	7160      	strb	r0, [r4, #5]
 80104b8:	b35b      	cbz	r3, 8010512 <Network::EnableDhcp()+0x92>
 80104ba:	2104      	movs	r1, #4
 80104bc:	4628      	mov	r0, r5
 80104be:	f001 fa0d 	bl	80118dc <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 80104c2:	b16f      	cbz	r7, 80104e0 <Network::EnableDhcp()+0x60>
 80104c4:	2102      	movs	r1, #2
 80104c6:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80104ca:	6836      	ldr	r6, [r6, #0]
 80104cc:	f002 fcd2 	bl	8012e74 <fwdgt_config>
 80104d0:	2801      	cmp	r0, #1
 80104d2:	bf0c      	ite	eq
 80104d4:	2301      	moveq	r3, #1
 80104d6:	2300      	movne	r3, #0
 80104d8:	7033      	strb	r3, [r6, #0]
 80104da:	d101      	bne.n	80104e0 <Network::EnableDhcp()+0x60>
 80104dc:	f002 fcba 	bl	8012e54 <fwdgt_enable>
 80104e0:	9b01      	ldr	r3, [sp, #4]
 80104e2:	f8d4 00b8 	ldr.w	r0, [r4, #184]	; 0xb8
 80104e6:	6163      	str	r3, [r4, #20]
 80104e8:	9b02      	ldr	r3, [sp, #8]
 80104ea:	61e3      	str	r3, [r4, #28]
 80104ec:	9b03      	ldr	r3, [sp, #12]
 80104ee:	61a3      	str	r3, [r4, #24]
 80104f0:	b118      	cbz	r0, 80104fa <Network::EnableDhcp()+0x7a>
 80104f2:	6803      	ldr	r3, [r0, #0]
 80104f4:	7961      	ldrb	r1, [r4, #5]
 80104f6:	699b      	ldr	r3, [r3, #24]
 80104f8:	4798      	blx	r3
 80104fa:	4628      	mov	r0, r5
 80104fc:	f001 f9d0 	bl	80118a0 <NetworkDisplay::ShowIp()>
 8010500:	4628      	mov	r0, r5
 8010502:	f001 f9d3 	bl	80118ac <NetworkDisplay::ShowNetMask()>
 8010506:	4628      	mov	r0, r5
 8010508:	f001 f9d6 	bl	80118b8 <NetworkDisplay::ShowGatewayIp()>
 801050c:	7960      	ldrb	r0, [r4, #5]
 801050e:	b005      	add	sp, #20
 8010510:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010512:	2102      	movs	r1, #2
 8010514:	e7d2      	b.n	80104bc <Network::EnableDhcp()+0x3c>
 8010516:	bf00      	nop
 8010518:	2001da10 	andcs	sp, r1, r0, lsl sl

0801051c <Network::SetQueuedStaticIp(unsigned int, unsigned int)>:
 801051c:	b109      	cbz	r1, 8010522 <Network::SetQueuedStaticIp(unsigned int, unsigned int)+0x6>
 801051e:	f8c0 10c4 	str.w	r1, [r0, #196]	; 0xc4
 8010522:	b10a      	cbz	r2, 8010528 <Network::SetQueuedStaticIp(unsigned int, unsigned int)+0xc>
 8010524:	f8c0 20c8 	str.w	r2, [r0, #200]	; 0xc8
 8010528:	f8d0 30c0 	ldr.w	r3, [r0, #192]	; 0xc0
 801052c:	f043 0303 	orr.w	r3, r3, #3
 8010530:	f8c0 30c0 	str.w	r3, [r0, #192]	; 0xc0
 8010534:	4770      	bx	lr

08010536 <Network::ApplyQueuedConfig()>:
 8010536:	f8d0 30c0 	ldr.w	r3, [r0, #192]	; 0xc0
 801053a:	b510      	push	{r4, lr}
 801053c:	4604      	mov	r4, r0
 801053e:	b3c3      	cbz	r3, 80105b2 <Network::ApplyQueuedConfig()+0x7c>
 8010540:	079a      	lsls	r2, r3, #30
 8010542:	d01a      	beq.n	801057a <Network::ApplyQueuedConfig()+0x44>
 8010544:	079b      	lsls	r3, r3, #30
 8010546:	d509      	bpl.n	801055c <Network::ApplyQueuedConfig()+0x26>
 8010548:	f8d0 10c8 	ldr.w	r1, [r0, #200]	; 0xc8
 801054c:	f7ff ff40 	bl	80103d0 <Network::SetNetmask(unsigned int)>
 8010550:	f8d4 30c0 	ldr.w	r3, [r4, #192]	; 0xc0
 8010554:	f023 0302 	bic.w	r3, r3, #2
 8010558:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 801055c:	f8d4 30c0 	ldr.w	r3, [r4, #192]	; 0xc0
 8010560:	07d9      	lsls	r1, r3, #31
 8010562:	d50a      	bpl.n	801057a <Network::ApplyQueuedConfig()+0x44>
 8010564:	4620      	mov	r0, r4
 8010566:	f8d4 10c4 	ldr.w	r1, [r4, #196]	; 0xc4
 801056a:	f7ff ff03 	bl	8010374 <Network::SetIp(unsigned int)>
 801056e:	f8d4 30c0 	ldr.w	r3, [r4, #192]	; 0xc0
 8010572:	f023 0301 	bic.w	r3, r3, #1
 8010576:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 801057a:	f8d4 30c0 	ldr.w	r3, [r4, #192]	; 0xc0
 801057e:	075a      	lsls	r2, r3, #29
 8010580:	d508      	bpl.n	8010594 <Network::ApplyQueuedConfig()+0x5e>
 8010582:	4620      	mov	r0, r4
 8010584:	f7ff ff7c 	bl	8010480 <Network::EnableDhcp()>
 8010588:	f8d4 30c0 	ldr.w	r3, [r4, #192]	; 0xc0
 801058c:	f023 0304 	bic.w	r3, r3, #4
 8010590:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8010594:	f8d4 30c0 	ldr.w	r3, [r4, #192]	; 0xc0
 8010598:	071b      	lsls	r3, r3, #28
 801059a:	d508      	bpl.n	80105ae <Network::ApplyQueuedConfig()+0x78>
 801059c:	4620      	mov	r0, r4
 801059e:	f7ff ff4c 	bl	801043a <Network::SetZeroconf()>
 80105a2:	f8d4 30c0 	ldr.w	r3, [r4, #192]	; 0xc0
 80105a6:	f023 0308 	bic.w	r3, r3, #8
 80105aa:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 80105ae:	2001      	movs	r0, #1
 80105b0:	e000      	b.n	80105b4 <Network::ApplyQueuedConfig()+0x7e>
 80105b2:	4618      	mov	r0, r3
 80105b4:	bd10      	pop	{r4, pc}
	...

080105b8 <Network::Print()>:
 80105b8:	b530      	push	{r4, r5, lr}
 80105ba:	4604      	mov	r4, r0
 80105bc:	b085      	sub	sp, #20
 80105be:	4832      	ldr	r0, [pc, #200]	; (8010688 <Network::Print()+0xd0>)
 80105c0:	f7f8 ffd4 	bl	800956c <printf>
 80105c4:	f104 0120 	add.w	r1, r4, #32
 80105c8:	4830      	ldr	r0, [pc, #192]	; (801068c <Network::Print()+0xd4>)
 80105ca:	f7f8 ffcf 	bl	800956c <printf>
 80105ce:	68a1      	ldr	r1, [r4, #8]
 80105d0:	f104 02a6 	add.w	r2, r4, #166	; 0xa6
 80105d4:	482e      	ldr	r0, [pc, #184]	; (8010690 <Network::Print()+0xd8>)
 80105d6:	f7f8 ffc9 	bl	800956c <printf>
 80105da:	69e0      	ldr	r0, [r4, #28]
 80105dc:	f004 fb30 	bl	8014c40 <__popcountsi2>
 80105e0:	6965      	ldr	r5, [r4, #20]
 80105e2:	9001      	str	r0, [sp, #4]
 80105e4:	0e2b      	lsrs	r3, r5, #24
 80105e6:	9300      	str	r3, [sp, #0]
 80105e8:	f3c5 2207 	ubfx	r2, r5, #8, #8
 80105ec:	f3c5 4307 	ubfx	r3, r5, #16, #8
 80105f0:	b2e9      	uxtb	r1, r5
 80105f2:	4828      	ldr	r0, [pc, #160]	; (8010694 <Network::Print()+0xdc>)
 80105f4:	f7f8 ffba 	bl	800956c <printf>
 80105f8:	69e1      	ldr	r1, [r4, #28]
 80105fa:	4827      	ldr	r0, [pc, #156]	; (8010698 <Network::Print()+0xe0>)
 80105fc:	0e0b      	lsrs	r3, r1, #24
 80105fe:	f3c1 2207 	ubfx	r2, r1, #8, #8
 8010602:	9300      	str	r3, [sp, #0]
 8010604:	f3c1 4307 	ubfx	r3, r1, #16, #8
 8010608:	b2c9      	uxtb	r1, r1
 801060a:	f7f8 ffaf 	bl	800956c <printf>
 801060e:	69a1      	ldr	r1, [r4, #24]
 8010610:	4822      	ldr	r0, [pc, #136]	; (801069c <Network::Print()+0xe4>)
 8010612:	0e0b      	lsrs	r3, r1, #24
 8010614:	f3c1 2207 	ubfx	r2, r1, #8, #8
 8010618:	9300      	str	r3, [sp, #0]
 801061a:	f3c1 4307 	ubfx	r3, r1, #16, #8
 801061e:	b2c9      	uxtb	r1, r1
 8010620:	f7f8 ffa4 	bl	800956c <printf>
 8010624:	69e3      	ldr	r3, [r4, #28]
 8010626:	6961      	ldr	r1, [r4, #20]
 8010628:	481d      	ldr	r0, [pc, #116]	; (80106a0 <Network::Print()+0xe8>)
 801062a:	ea61 0103 	orn	r1, r1, r3
 801062e:	0e0b      	lsrs	r3, r1, #24
 8010630:	f3c1 2207 	ubfx	r2, r1, #8, #8
 8010634:	9300      	str	r3, [sp, #0]
 8010636:	f3c1 4307 	ubfx	r3, r1, #16, #8
 801063a:	b2c9      	uxtb	r1, r1
 801063c:	f7f8 ff96 	bl	800956c <printf>
 8010640:	f894 30a5 	ldrb.w	r3, [r4, #165]	; 0xa5
 8010644:	f894 20a1 	ldrb.w	r2, [r4, #161]	; 0xa1
 8010648:	9302      	str	r3, [sp, #8]
 801064a:	f894 30a4 	ldrb.w	r3, [r4, #164]	; 0xa4
 801064e:	f894 10a0 	ldrb.w	r1, [r4, #160]	; 0xa0
 8010652:	9301      	str	r3, [sp, #4]
 8010654:	f894 30a3 	ldrb.w	r3, [r4, #163]	; 0xa3
 8010658:	4812      	ldr	r0, [pc, #72]	; (80106a4 <Network::Print()+0xec>)
 801065a:	9300      	str	r3, [sp, #0]
 801065c:	f894 30a2 	ldrb.w	r3, [r4, #162]	; 0xa2
 8010660:	f7f8 ff84 	bl	800956c <printf>
 8010664:	4b10      	ldr	r3, [pc, #64]	; (80106a8 <Network::Print()+0xf0>)
 8010666:	681b      	ldr	r3, [r3, #0]
 8010668:	79da      	ldrb	r2, [r3, #7]
 801066a:	b952      	cbnz	r2, 8010682 <Network::Print()+0xca>
 801066c:	795b      	ldrb	r3, [r3, #5]
 801066e:	2b00      	cmp	r3, #0
 8010670:	bf14      	ite	ne
 8010672:	2144      	movne	r1, #68	; 0x44
 8010674:	2153      	moveq	r1, #83	; 0x53
 8010676:	480d      	ldr	r0, [pc, #52]	; (80106ac <Network::Print()+0xf4>)
 8010678:	b005      	add	sp, #20
 801067a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801067e:	f7f8 bf75 	b.w	800956c <printf>
 8010682:	215a      	movs	r1, #90	; 0x5a
 8010684:	e7f7      	b.n	8010676 <Network::Print()+0xbe>
 8010686:	bf00      	nop
 8010688:	08017459 	stmdaeq	r1, {r0, r3, r4, r6, sl, ip, sp, lr}
 801068c:	08017462 	stmdaeq	r1, {r1, r5, r6, sl, ip, sp, lr}
 8010690:	08017473 	stmdaeq	r1, {r0, r1, r4, r5, r6, sl, ip, sp, lr}
 8010694:	08017488 	stmdaeq	r1, {r3, r7, sl, ip, sp, lr}
 8010698:	080174a5 	stmdaeq	r1, {r0, r2, r5, r7, sl, ip, sp, lr}
 801069c:	080174bf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r7, sl, ip, sp, lr}
 80106a0:	080174d9 	stmdaeq	r1, {r0, r3, r4, r6, r7, sl, ip, sp, lr}
 80106a4:	080174f3 	stmdaeq	r1, {r0, r1, r4, r5, r6, r7, sl, ip, sp, lr}
 80106a8:	2001d348 	andcs	sp, r1, r8, asr #6
 80106ac:	0801751f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r8, sl, ip, sp, lr}

080106b0 <Network::TcpBegin(unsigned short)>:
 80106b0:	4608      	mov	r0, r1
 80106b2:	f7fe becf 	b.w	800f454 <tcp_begin>

080106b6 <Network::TcpRead(int, unsigned char const**)>:
 80106b6:	4608      	mov	r0, r1
 80106b8:	4611      	mov	r1, r2
 80106ba:	f7fe bf09 	b.w	800f4d0 <tcp_read>

080106be <Network::TcpWrite(int, unsigned char const*, unsigned short)>:
 80106be:	4608      	mov	r0, r1
 80106c0:	4611      	mov	r1, r2
 80106c2:	461a      	mov	r2, r3
 80106c4:	f7fe bee0 	b.w	800f488 <tcp_write>

080106c8 <NetworkParams::NetworkParams(NetworkParamsStore*)>:
 80106c8:	b510      	push	{r4, lr}
 80106ca:	225e      	movs	r2, #94	; 0x5e
 80106cc:	4604      	mov	r4, r0
 80106ce:	f840 1b04 	str.w	r1, [r0], #4
 80106d2:	2100      	movs	r1, #0
 80106d4:	f002 f8de 	bl	8012894 <memset>
 80106d8:	2301      	movs	r3, #1
 80106da:	4620      	mov	r0, r4
 80106dc:	7623      	strb	r3, [r4, #24]
 80106de:	bd10      	pop	{r4, pc}

080106e0 <NetworkParams::Load()>:
 80106e0:	b508      	push	{r3, lr}
 80106e2:	2300      	movs	r3, #0
 80106e4:	4601      	mov	r1, r0
 80106e6:	6043      	str	r3, [r0, #4]
 80106e8:	6800      	ldr	r0, [r0, #0]
 80106ea:	b120      	cbz	r0, 80106f6 <NetworkParams::Load()+0x16>
 80106ec:	6803      	ldr	r3, [r0, #0]
 80106ee:	3104      	adds	r1, #4
 80106f0:	68db      	ldr	r3, [r3, #12]
 80106f2:	4798      	blx	r3
 80106f4:	2001      	movs	r0, #1
 80106f6:	bd08      	pop	{r3, pc}

080106f8 <NetworkParams::Load(char const*, unsigned int)>:
 80106f8:	6803      	ldr	r3, [r0, #0]
 80106fa:	b1d3      	cbz	r3, 8010732 <NetworkParams::Load(char const*, unsigned int)+0x3a>
 80106fc:	2300      	movs	r3, #0
 80106fe:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8010700:	460d      	mov	r5, r1
 8010702:	4616      	mov	r6, r2
 8010704:	4604      	mov	r4, r0
 8010706:	6043      	str	r3, [r0, #4]
 8010708:	4602      	mov	r2, r0
 801070a:	490a      	ldr	r1, [pc, #40]	; (8010734 <NetworkParams::Load(char const*, unsigned int)+0x3c>)
 801070c:	4668      	mov	r0, sp
 801070e:	f001 fa3d 	bl	8011b8c <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 8010712:	4632      	mov	r2, r6
 8010714:	4629      	mov	r1, r5
 8010716:	4668      	mov	r0, sp
 8010718:	f001 fa3c 	bl	8011b94 <ReadConfigFile::Read(char const*, unsigned int)>
 801071c:	4621      	mov	r1, r4
 801071e:	f851 0b04 	ldr.w	r0, [r1], #4
 8010722:	6803      	ldr	r3, [r0, #0]
 8010724:	689b      	ldr	r3, [r3, #8]
 8010726:	4798      	blx	r3
 8010728:	4668      	mov	r0, sp
 801072a:	f001 fa32 	bl	8011b92 <ReadConfigFile::~ReadConfigFile()>
 801072e:	b002      	add	sp, #8
 8010730:	bd70      	pop	{r4, r5, r6, pc}
 8010732:	4770      	bx	lr
 8010734:	08010859 	stmdaeq	r1, {r0, r3, r4, r6, fp}

08010738 <NetworkParams::callbackFunction(char const*)>:
 8010738:	b530      	push	{r4, r5, lr}
 801073a:	460d      	mov	r5, r1
 801073c:	b085      	sub	sp, #20
 801073e:	4604      	mov	r4, r0
 8010740:	493f      	ldr	r1, [pc, #252]	; (8010840 <NetworkParams::callbackFunction(char const*)+0x108>)
 8010742:	4628      	mov	r0, r5
 8010744:	f10d 0207 	add.w	r2, sp, #7
 8010748:	f001 fb5c 	bl	8011e04 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 801074c:	b978      	cbnz	r0, 801076e <NetworkParams::callbackFunction(char const*)+0x36>
 801074e:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8010752:	6863      	ldr	r3, [r4, #4]
 8010754:	b142      	cbz	r2, 8010768 <NetworkParams::callbackFunction(char const*)+0x30>
 8010756:	f023 0301 	bic.w	r3, r3, #1
 801075a:	3a00      	subs	r2, #0
 801075c:	bf18      	it	ne
 801075e:	2201      	movne	r2, #1
 8010760:	6063      	str	r3, [r4, #4]
 8010762:	7622      	strb	r2, [r4, #24]
 8010764:	b005      	add	sp, #20
 8010766:	bd30      	pop	{r4, r5, pc}
 8010768:	f043 0301 	orr.w	r3, r3, #1
 801076c:	e7f5      	b.n	801075a <NetworkParams::callbackFunction(char const*)+0x22>
 801076e:	4628      	mov	r0, r5
 8010770:	4934      	ldr	r1, [pc, #208]	; (8010844 <NetworkParams::callbackFunction(char const*)+0x10c>)
 8010772:	f10d 0207 	add.w	r2, sp, #7
 8010776:	f001 fb45 	bl	8011e04 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 801077a:	b980      	cbnz	r0, 801079e <NetworkParams::callbackFunction(char const*)+0x66>
 801077c:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8010780:	6863      	ldr	r3, [r4, #4]
 8010782:	1e51      	subs	r1, r2, #1
 8010784:	2904      	cmp	r1, #4
 8010786:	bf97      	itett	ls
 8010788:	f443 7380 	orrls.w	r3, r3, #256	; 0x100
 801078c:	f423 7380 	bichi.w	r3, r3, #256	; 0x100
 8010790:	6063      	strls	r3, [r4, #4]
 8010792:	f884 2061 	strbls.w	r2, [r4, #97]	; 0x61
 8010796:	bf84      	itt	hi
 8010798:	6063      	strhi	r3, [r4, #4]
 801079a:	f884 0061 	strbhi.w	r0, [r4, #97]	; 0x61
 801079e:	4628      	mov	r0, r5
 80107a0:	4929      	ldr	r1, [pc, #164]	; (8010848 <NetworkParams::callbackFunction(char const*)+0x110>)
 80107a2:	aa02      	add	r2, sp, #8
 80107a4:	f001 faa6 	bl	8011cf4 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 80107a8:	b9c8      	cbnz	r0, 80107de <NetworkParams::callbackFunction(char const*)+0xa6>
 80107aa:	9b02      	ldr	r3, [sp, #8]
 80107ac:	b2d9      	uxtb	r1, r3
 80107ae:	29ac      	cmp	r1, #172	; 0xac
 80107b0:	f3c3 2207 	ubfx	r2, r3, #8, #8
 80107b4:	d009      	beq.n	80107ca <NetworkParams::callbackFunction(char const*)+0x92>
 80107b6:	29c0      	cmp	r1, #192	; 0xc0
 80107b8:	d00b      	beq.n	80107d2 <NetworkParams::callbackFunction(char const*)+0x9a>
 80107ba:	290a      	cmp	r1, #10
 80107bc:	d10c      	bne.n	80107d8 <NetworkParams::callbackFunction(char const*)+0xa0>
 80107be:	60a3      	str	r3, [r4, #8]
 80107c0:	6863      	ldr	r3, [r4, #4]
 80107c2:	f043 0302 	orr.w	r3, r3, #2
 80107c6:	6063      	str	r3, [r4, #4]
 80107c8:	e7cc      	b.n	8010764 <NetworkParams::callbackFunction(char const*)+0x2c>
 80107ca:	3a10      	subs	r2, #16
 80107cc:	2a0f      	cmp	r2, #15
 80107ce:	d8c9      	bhi.n	8010764 <NetworkParams::callbackFunction(char const*)+0x2c>
 80107d0:	e7f5      	b.n	80107be <NetworkParams::callbackFunction(char const*)+0x86>
 80107d2:	2aa8      	cmp	r2, #168	; 0xa8
 80107d4:	d1c6      	bne.n	8010764 <NetworkParams::callbackFunction(char const*)+0x2c>
 80107d6:	e7f2      	b.n	80107be <NetworkParams::callbackFunction(char const*)+0x86>
 80107d8:	2b00      	cmp	r3, #0
 80107da:	d0f0      	beq.n	80107be <NetworkParams::callbackFunction(char const*)+0x86>
 80107dc:	e7c2      	b.n	8010764 <NetworkParams::callbackFunction(char const*)+0x2c>
 80107de:	4628      	mov	r0, r5
 80107e0:	491a      	ldr	r1, [pc, #104]	; (801084c <NetworkParams::callbackFunction(char const*)+0x114>)
 80107e2:	aa02      	add	r2, sp, #8
 80107e4:	f001 fa86 	bl	8011cf4 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 80107e8:	b960      	cbnz	r0, 8010804 <NetworkParams::callbackFunction(char const*)+0xcc>
 80107ea:	9b02      	ldr	r3, [sp, #8]
 80107ec:	2b00      	cmp	r3, #0
 80107ee:	d0b9      	beq.n	8010764 <NetworkParams::callbackFunction(char const*)+0x2c>
 80107f0:	ba1a      	rev	r2, r3
 80107f2:	43d1      	mvns	r1, r2
 80107f4:	ea12 0251 	ands.w	r2, r2, r1, lsr #1
 80107f8:	d1b4      	bne.n	8010764 <NetworkParams::callbackFunction(char const*)+0x2c>
 80107fa:	60e3      	str	r3, [r4, #12]
 80107fc:	6863      	ldr	r3, [r4, #4]
 80107fe:	f043 0304 	orr.w	r3, r3, #4
 8010802:	e7e0      	b.n	80107c6 <NetworkParams::callbackFunction(char const*)+0x8e>
 8010804:	4628      	mov	r0, r5
 8010806:	4912      	ldr	r1, [pc, #72]	; (8010850 <NetworkParams::callbackFunction(char const*)+0x118>)
 8010808:	aa02      	add	r2, sp, #8
 801080a:	f001 fa73 	bl	8011cf4 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 801080e:	b928      	cbnz	r0, 801081c <NetworkParams::callbackFunction(char const*)+0xe4>
 8010810:	9b02      	ldr	r3, [sp, #8]
 8010812:	6123      	str	r3, [r4, #16]
 8010814:	6863      	ldr	r3, [r4, #4]
 8010816:	f043 0308 	orr.w	r3, r3, #8
 801081a:	e7d4      	b.n	80107c6 <NetworkParams::callbackFunction(char const*)+0x8e>
 801081c:	233f      	movs	r3, #63	; 0x3f
 801081e:	4628      	mov	r0, r5
 8010820:	9303      	str	r3, [sp, #12]
 8010822:	490c      	ldr	r1, [pc, #48]	; (8010854 <NetworkParams::callbackFunction(char const*)+0x11c>)
 8010824:	ab03      	add	r3, sp, #12
 8010826:	f104 0219 	add.w	r2, r4, #25
 801082a:	f001 f9e7 	bl	8011bfc <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 801082e:	2800      	cmp	r0, #0
 8010830:	d198      	bne.n	8010764 <NetworkParams::callbackFunction(char const*)+0x2c>
 8010832:	9b03      	ldr	r3, [sp, #12]
 8010834:	4423      	add	r3, r4
 8010836:	7658      	strb	r0, [r3, #25]
 8010838:	6863      	ldr	r3, [r4, #4]
 801083a:	f043 0320 	orr.w	r3, r3, #32
 801083e:	e7c2      	b.n	80107c6 <NetworkParams::callbackFunction(char const*)+0x8e>
 8010840:	08017577 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, r8, sl, ip, sp, lr}
 8010844:	08017555 	stmdaeq	r1, {r0, r2, r4, r6, r8, sl, ip, sp, lr}
 8010848:	0801753a 	stmdaeq	r1, {r1, r3, r4, r5, r8, sl, ip, sp, lr}
 801084c:	0801756e 	stmdaeq	r1, {r1, r2, r3, r5, r6, r8, sl, ip, sp, lr}
 8010850:	08017545 	stmdaeq	r1, {r0, r2, r6, r8, sl, ip, sp, lr}
 8010854:	08017565 	stmdaeq	r1, {r0, r2, r5, r6, r8, sl, ip, sp, lr}

08010858 <NetworkParams::staticCallbackFunction(void*, char const*)>:
 8010858:	f7ff bf6e 	b.w	8010738 <NetworkParams::callbackFunction(char const*)>

0801085c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)>:
 801085c:	b570      	push	{r4, r5, r6, lr}
 801085e:	4604      	mov	r4, r0
 8010860:	4615      	mov	r5, r2
 8010862:	461e      	mov	r6, r3
 8010864:	b086      	sub	sp, #24
 8010866:	3004      	adds	r0, #4
 8010868:	2900      	cmp	r1, #0
 801086a:	d02b      	beq.n	80108c4 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x68>
 801086c:	225e      	movs	r2, #94	; 0x5e
 801086e:	f001 fffa 	bl	8012866 <memmove>
 8010872:	462a      	mov	r2, r5
 8010874:	4633      	mov	r3, r6
 8010876:	4970      	ldr	r1, [pc, #448]	; (8010a38 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1dc>)
 8010878:	a803      	add	r0, sp, #12
 801087a:	f001 f8e7 	bl	8011a4c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 801087e:	6863      	ldr	r3, [r4, #4]
 8010880:	079a      	lsls	r2, r3, #30
 8010882:	bf5f      	itttt	pl
 8010884:	4a6d      	ldrpl	r2, [pc, #436]	; (8010a3c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e0>)
 8010886:	6812      	ldrpl	r2, [r2, #0]
 8010888:	6952      	ldrpl	r2, [r2, #20]
 801088a:	60a2      	strpl	r2, [r4, #8]
 801088c:	075e      	lsls	r6, r3, #29
 801088e:	bf5f      	itttt	pl
 8010890:	4a6a      	ldrpl	r2, [pc, #424]	; (8010a3c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e0>)
 8010892:	6812      	ldrpl	r2, [r2, #0]
 8010894:	69d2      	ldrpl	r2, [r2, #28]
 8010896:	60e2      	strpl	r2, [r4, #12]
 8010898:	071d      	lsls	r5, r3, #28
 801089a:	bf58      	it	pl
 801089c:	4a67      	ldrpl	r2, [pc, #412]	; (8010a3c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e0>)
 801089e:	f104 0519 	add.w	r5, r4, #25
 80108a2:	bf5e      	ittt	pl
 80108a4:	6812      	ldrpl	r2, [r2, #0]
 80108a6:	6992      	ldrpl	r2, [r2, #24]
 80108a8:	6122      	strpl	r2, [r4, #16]
 80108aa:	0698      	lsls	r0, r3, #26
 80108ac:	d418      	bmi.n	80108e0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x84>
 80108ae:	4628      	mov	r0, r5
 80108b0:	223f      	movs	r2, #63	; 0x3f
 80108b2:	4b62      	ldr	r3, [pc, #392]	; (8010a3c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e0>)
 80108b4:	681b      	ldr	r3, [r3, #0]
 80108b6:	331f      	adds	r3, #31
 80108b8:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 80108bc:	b949      	cbnz	r1, 80108d2 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x76>
 80108be:	f001 ffe9 	bl	8012894 <memset>
 80108c2:	e00a      	b.n	80108da <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x7e>
 80108c4:	6823      	ldr	r3, [r4, #0]
 80108c6:	4601      	mov	r1, r0
 80108c8:	681a      	ldr	r2, [r3, #0]
 80108ca:	4618      	mov	r0, r3
 80108cc:	68d2      	ldr	r2, [r2, #12]
 80108ce:	4790      	blx	r2
 80108d0:	e7cf      	b.n	8010872 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x16>
 80108d2:	3a01      	subs	r2, #1
 80108d4:	f800 1b01 	strb.w	r1, [r0], #1
 80108d8:	d1ee      	bne.n	80108b8 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x5c>
 80108da:	2300      	movs	r3, #0
 80108dc:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 80108e0:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80108e4:	f8bd 6010 	ldrh.w	r6, [sp, #16]
 80108e8:	7e23      	ldrb	r3, [r4, #24]
 80108ea:	42b2      	cmp	r2, r6
 80108ec:	6861      	ldr	r1, [r4, #4]
 80108ee:	d21a      	bcs.n	8010926 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xca>
 80108f0:	9803      	ldr	r0, [sp, #12]
 80108f2:	07c9      	lsls	r1, r1, #31
 80108f4:	4410      	add	r0, r2
 80108f6:	eba6 0602 	sub.w	r6, r6, r2
 80108fa:	f89d 2014 	ldrb.w	r2, [sp, #20]
 80108fe:	d404      	bmi.n	801090a <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xae>
 8010900:	b922      	cbnz	r2, 801090c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xb0>
 8010902:	9300      	str	r3, [sp, #0]
 8010904:	4a4e      	ldr	r2, [pc, #312]	; (8010a40 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e4>)
 8010906:	4b4f      	ldr	r3, [pc, #316]	; (8010a44 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e8>)
 8010908:	e003      	b.n	8010912 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xb6>
 801090a:	b312      	cbz	r2, 8010952 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xf6>
 801090c:	9300      	str	r3, [sp, #0]
 801090e:	4a4e      	ldr	r2, [pc, #312]	; (8010a48 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1ec>)
 8010910:	4b4c      	ldr	r3, [pc, #304]	; (8010a44 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e8>)
 8010912:	4631      	mov	r1, r6
 8010914:	f7f8 fe52 	bl	80095bc <snprintf>
 8010918:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801091c:	4286      	cmp	r6, r0
 801091e:	bfa4      	itt	ge
 8010920:	181b      	addge	r3, r3, r0
 8010922:	f8ad 3012 	strhge.w	r3, [sp, #18]
 8010926:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801092a:	f8bd 6010 	ldrh.w	r6, [sp, #16]
 801092e:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8010932:	42b2      	cmp	r2, r6
 8010934:	6861      	ldr	r1, [r4, #4]
 8010936:	d21f      	bcs.n	8010978 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>
 8010938:	9803      	ldr	r0, [sp, #12]
 801093a:	05c9      	lsls	r1, r1, #23
 801093c:	4410      	add	r0, r2
 801093e:	eba6 0602 	sub.w	r6, r6, r2
 8010942:	f89d 2014 	ldrb.w	r2, [sp, #20]
 8010946:	d408      	bmi.n	801095a <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xfe>
 8010948:	b94a      	cbnz	r2, 801095e <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x102>
 801094a:	9300      	str	r3, [sp, #0]
 801094c:	4a3c      	ldr	r2, [pc, #240]	; (8010a40 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e4>)
 801094e:	4b3f      	ldr	r3, [pc, #252]	; (8010a4c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f0>)
 8010950:	e008      	b.n	8010964 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x108>
 8010952:	9300      	str	r3, [sp, #0]
 8010954:	4a3e      	ldr	r2, [pc, #248]	; (8010a50 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f4>)
 8010956:	4b3b      	ldr	r3, [pc, #236]	; (8010a44 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e8>)
 8010958:	e7db      	b.n	8010912 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xb6>
 801095a:	2a00      	cmp	r2, #0
 801095c:	d03c      	beq.n	80109d8 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x17c>
 801095e:	9300      	str	r3, [sp, #0]
 8010960:	4a39      	ldr	r2, [pc, #228]	; (8010a48 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1ec>)
 8010962:	4b3a      	ldr	r3, [pc, #232]	; (8010a4c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f0>)
 8010964:	4631      	mov	r1, r6
 8010966:	f7f8 fe29 	bl	80095bc <snprintf>
 801096a:	4286      	cmp	r6, r0
 801096c:	bfa2      	ittt	ge
 801096e:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 8010972:	18c0      	addge	r0, r0, r3
 8010974:	f8ad 0012 	strhge.w	r0, [sp, #18]
 8010978:	4936      	ldr	r1, [pc, #216]	; (8010a54 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f8>)
 801097a:	a803      	add	r0, sp, #12
 801097c:	f001 f8ec 	bl	8011b58 <PropertiesBuilder::AddComment(char const*)>
 8010980:	6863      	ldr	r3, [r4, #4]
 8010982:	68a2      	ldr	r2, [r4, #8]
 8010984:	4934      	ldr	r1, [pc, #208]	; (8010a58 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1fc>)
 8010986:	f3c3 0340 	ubfx	r3, r3, #1, #1
 801098a:	a803      	add	r0, sp, #12
 801098c:	f001 f8a0 	bl	8011ad0 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 8010990:	6863      	ldr	r3, [r4, #4]
 8010992:	68e2      	ldr	r2, [r4, #12]
 8010994:	4931      	ldr	r1, [pc, #196]	; (8010a5c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x200>)
 8010996:	f3c3 0380 	ubfx	r3, r3, #2, #1
 801099a:	a803      	add	r0, sp, #12
 801099c:	f001 f898 	bl	8011ad0 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 80109a0:	6863      	ldr	r3, [r4, #4]
 80109a2:	6922      	ldr	r2, [r4, #16]
 80109a4:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 80109a8:	492d      	ldr	r1, [pc, #180]	; (8010a60 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x204>)
 80109aa:	a803      	add	r0, sp, #12
 80109ac:	f001 f890 	bl	8011ad0 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 80109b0:	6862      	ldr	r2, [r4, #4]
 80109b2:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80109b6:	f8bd 4010 	ldrh.w	r4, [sp, #16]
 80109ba:	42a3      	cmp	r3, r4
 80109bc:	d21e      	bcs.n	80109fc <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1a0>
 80109be:	9803      	ldr	r0, [sp, #12]
 80109c0:	0692      	lsls	r2, r2, #26
 80109c2:	4418      	add	r0, r3
 80109c4:	eba4 0403 	sub.w	r4, r4, r3
 80109c8:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80109cc:	d408      	bmi.n	80109e0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x184>
 80109ce:	b943      	cbnz	r3, 80109e2 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x186>
 80109d0:	4b24      	ldr	r3, [pc, #144]	; (8010a64 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x208>)
 80109d2:	4a25      	ldr	r2, [pc, #148]	; (8010a68 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x20c>)
 80109d4:	9500      	str	r5, [sp, #0]
 80109d6:	e007      	b.n	80109e8 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x18c>
 80109d8:	9300      	str	r3, [sp, #0]
 80109da:	4a1d      	ldr	r2, [pc, #116]	; (8010a50 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f4>)
 80109dc:	4b1b      	ldr	r3, [pc, #108]	; (8010a4c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f0>)
 80109de:	e7c1      	b.n	8010964 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x108>
 80109e0:	b32b      	cbz	r3, 8010a2e <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1d2>
 80109e2:	4b20      	ldr	r3, [pc, #128]	; (8010a64 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x208>)
 80109e4:	4a21      	ldr	r2, [pc, #132]	; (8010a6c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x210>)
 80109e6:	9500      	str	r5, [sp, #0]
 80109e8:	4621      	mov	r1, r4
 80109ea:	f7f8 fde7 	bl	80095bc <snprintf>
 80109ee:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80109f2:	4284      	cmp	r4, r0
 80109f4:	bfa4      	itt	ge
 80109f6:	181b      	addge	r3, r3, r0
 80109f8:	f8ad 3012 	strhge.w	r3, [sp, #18]
 80109fc:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8010a00:	b17b      	cbz	r3, 8010a22 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1c6>
 8010a02:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8010a06:	9b03      	ldr	r3, [sp, #12]
 8010a08:	4413      	add	r3, r2
 8010a0a:	227d      	movs	r2, #125	; 0x7d
 8010a0c:	f803 2c01 	strb.w	r2, [r3, #-1]
 8010a10:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8010a14:	9903      	ldr	r1, [sp, #12]
 8010a16:	54ca      	strb	r2, [r1, r3]
 8010a18:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8010a1c:	3301      	adds	r3, #1
 8010a1e:	f8ad 3012 	strh.w	r3, [sp, #18]
 8010a22:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8010a26:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8010a28:	601a      	str	r2, [r3, #0]
 8010a2a:	b006      	add	sp, #24
 8010a2c:	bd70      	pop	{r4, r5, r6, pc}
 8010a2e:	4b0d      	ldr	r3, [pc, #52]	; (8010a64 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x208>)
 8010a30:	4a0f      	ldr	r2, [pc, #60]	; (8010a70 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x214>)
 8010a32:	9500      	str	r5, [sp, #0]
 8010a34:	e7d8      	b.n	80109e8 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x18c>
 8010a36:	bf00      	nop
 8010a38:	08017580 	stmdaeq	r1, {r7, r8, sl, ip, sp, lr}
 8010a3c:	2001d348 	andcs	sp, r1, r8, asr #6
 8010a40:	080151e9 	stmdaeq	r1, {r0, r3, r5, r6, r7, r8, ip, lr}
 8010a44:	08017577 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, r8, sl, ip, sp, lr}
 8010a48:	080151e0 	stmdaeq	r1, {r5, r6, r7, r8, ip, lr}
 8010a4c:	08017555 	stmdaeq	r1, {r0, r2, r4, r6, r8, sl, ip, sp, lr}
 8010a50:	080151ea 	stmdaeq	r1, {r1, r3, r5, r6, r7, r8, ip, lr}
 8010a54:	08017530 	stmdaeq	r1, {r4, r5, r8, sl, ip, sp, lr}
 8010a58:	0801753a 	stmdaeq	r1, {r1, r3, r4, r5, r8, sl, ip, sp, lr}
 8010a5c:	0801756e 	stmdaeq	r1, {r1, r2, r3, r5, r6, r8, sl, ip, sp, lr}
 8010a60:	08017545 	stmdaeq	r1, {r0, r2, r6, r8, sl, ip, sp, lr}
 8010a64:	08017565 	stmdaeq	r1, {r0, r2, r5, r6, r8, sl, ip, sp, lr}
 8010a68:	080151fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r8, ip, lr}
 8010a6c:	080151f1 	stmdaeq	r1, {r0, r4, r5, r6, r7, r8, ip, lr}
 8010a70:	080151fd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, r8, ip, lr}

08010a74 <NetworkParams::Save(char*, unsigned int, unsigned int&)>:
 8010a74:	b513      	push	{r0, r1, r4, lr}
 8010a76:	6804      	ldr	r4, [r0, #0]
 8010a78:	b914      	cbnz	r4, 8010a80 <NetworkParams::Save(char*, unsigned int, unsigned int&)+0xc>
 8010a7a:	601c      	str	r4, [r3, #0]
 8010a7c:	b002      	add	sp, #8
 8010a7e:	bd10      	pop	{r4, pc}
 8010a80:	9300      	str	r3, [sp, #0]
 8010a82:	4613      	mov	r3, r2
 8010a84:	460a      	mov	r2, r1
 8010a86:	2100      	movs	r1, #0
 8010a88:	f7ff fee8 	bl	801085c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)>
 8010a8c:	e7f6      	b.n	8010a7c <NetworkParams::Save(char*, unsigned int, unsigned int&)+0x8>

08010a8e <NetworkParams::Dump()>:
 8010a8e:	4770      	bx	lr

08010a90 <memcpy.isra.0>:
 8010a90:	3801      	subs	r0, #1
 8010a92:	440a      	add	r2, r1
 8010a94:	4291      	cmp	r1, r2
 8010a96:	d100      	bne.n	8010a9a <memcpy.isra.0+0xa>
 8010a98:	4770      	bx	lr
 8010a9a:	f811 3b01 	ldrb.w	r3, [r1], #1
 8010a9e:	f800 3f01 	strb.w	r3, [r0, #1]!
 8010aa2:	e7f7      	b.n	8010a94 <memcpy.isra.0+0x4>

08010aa4 <arp_announce>:
 8010aa4:	4803      	ldr	r0, [pc, #12]	; (8010ab4 <arp_announce+0x10>)
 8010aa6:	69c3      	ldr	r3, [r0, #28]
 8010aa8:	b113      	cbz	r3, 8010ab0 <arp_announce+0xc>
 8010aaa:	212a      	movs	r1, #42	; 0x2a
 8010aac:	f002 bf6e 	b.w	801398c <emac_eth_send>
 8010ab0:	4770      	bx	lr
 8010ab2:	bf00      	nop
 8010ab4:	2001d34c 	andcs	sp, r1, ip, asr #6

08010ab8 <arp_handle_request>:
 8010ab8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010aba:	2204      	movs	r2, #4
 8010abc:	f100 0126 	add.w	r1, r0, #38	; 0x26
 8010ac0:	4604      	mov	r4, r0
 8010ac2:	eb0d 0002 	add.w	r0, sp, r2
 8010ac6:	f7ff ffe3 	bl	8010a90 <memcpy.isra.0>
 8010aca:	4b0d      	ldr	r3, [pc, #52]	; (8010b00 <arp_handle_request+0x48>)
 8010acc:	9a01      	ldr	r2, [sp, #4]
 8010ace:	69db      	ldr	r3, [r3, #28]
 8010ad0:	429a      	cmp	r2, r3
 8010ad2:	d113      	bne.n	8010afc <arp_handle_request+0x44>
 8010ad4:	2206      	movs	r2, #6
 8010ad6:	4d0b      	ldr	r5, [pc, #44]	; (8010b04 <arp_handle_request+0x4c>)
 8010ad8:	18a1      	adds	r1, r4, r2
 8010ada:	4628      	mov	r0, r5
 8010adc:	f7ff ffd8 	bl	8010a90 <memcpy.isra.0>
 8010ae0:	f104 0116 	add.w	r1, r4, #22
 8010ae4:	f105 0020 	add.w	r0, r5, #32
 8010ae8:	2206      	movs	r2, #6
 8010aea:	f7ff ffd1 	bl	8010a90 <memcpy.isra.0>
 8010aee:	69e3      	ldr	r3, [r4, #28]
 8010af0:	212a      	movs	r1, #42	; 0x2a
 8010af2:	4628      	mov	r0, r5
 8010af4:	f8c5 3026 	str.w	r3, [r5, #38]	; 0x26
 8010af8:	f002 ff48 	bl	801398c <emac_eth_send>
 8010afc:	b003      	add	sp, #12
 8010afe:	bd30      	pop	{r4, r5, pc}
 8010b00:	2001d34c 	andcs	sp, r1, ip, asr #6
 8010b04:	2001d378 	andcs	sp, r1, r8, ror r3

08010b08 <arp_handle_reply>:
 8010b08:	69c1      	ldr	r1, [r0, #28]
 8010b0a:	3016      	adds	r0, #22
 8010b0c:	f000 b80a 	b.w	8010b24 <arp_cache_update>

08010b10 <arp_send_request>:
 8010b10:	4b03      	ldr	r3, [pc, #12]	; (8010b20 <arp_send_request+0x10>)
 8010b12:	212a      	movs	r1, #42	; 0x2a
 8010b14:	f8c3 0026 	str.w	r0, [r3, #38]	; 0x26
 8010b18:	4618      	mov	r0, r3
 8010b1a:	f002 bf37 	b.w	801398c <emac_eth_send>
 8010b1e:	bf00      	nop
 8010b20:	2001d3a4 	andcs	sp, r1, r4, lsr #7

08010b24 <arp_cache_update>:
 8010b24:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010b26:	4e11      	ldr	r6, [pc, #68]	; (8010b6c <arp_cache_update+0x48>)
 8010b28:	8833      	ldrh	r3, [r6, #0]
 8010b2a:	2b20      	cmp	r3, #32
 8010b2c:	d018      	beq.n	8010b60 <arp_cache_update+0x3c>
 8010b2e:	2400      	movs	r4, #0
 8010b30:	220c      	movs	r2, #12
 8010b32:	4d0f      	ldr	r5, [pc, #60]	; (8010b70 <arp_cache_update+0x4c>)
 8010b34:	b2a7      	uxth	r7, r4
 8010b36:	42bb      	cmp	r3, r7
 8010b38:	d80b      	bhi.n	8010b52 <arp_cache_update+0x2e>
 8010b3a:	fb02 5203 	mla	r2, r2, r3, r5
 8010b3e:	1d84      	adds	r4, r0, #6
 8010b40:	3203      	adds	r2, #3
 8010b42:	42a0      	cmp	r0, r4
 8010b44:	d10d      	bne.n	8010b62 <arp_cache_update+0x3e>
 8010b46:	220c      	movs	r2, #12
 8010b48:	435a      	muls	r2, r3
 8010b4a:	3301      	adds	r3, #1
 8010b4c:	50a9      	str	r1, [r5, r2]
 8010b4e:	8033      	strh	r3, [r6, #0]
 8010b50:	e006      	b.n	8010b60 <arp_cache_update+0x3c>
 8010b52:	3401      	adds	r4, #1
 8010b54:	fb02 5704 	mla	r7, r2, r4, r5
 8010b58:	f857 7c0c 	ldr.w	r7, [r7, #-12]
 8010b5c:	428f      	cmp	r7, r1
 8010b5e:	d1e9      	bne.n	8010b34 <arp_cache_update+0x10>
 8010b60:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010b62:	f810 7b01 	ldrb.w	r7, [r0], #1
 8010b66:	f802 7f01 	strb.w	r7, [r2, #1]!
 8010b6a:	e7ea      	b.n	8010b42 <arp_cache_update+0x1e>
 8010b6c:	2001d550 	andcs	sp, r1, r0, asr r5
 8010b70:	2001d3d0 	ldrdcs	sp, [r1], -r0

08010b74 <arp_cache_lookup>:
 8010b74:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8010b78:	2200      	movs	r2, #0
 8010b7a:	4606      	mov	r6, r0
 8010b7c:	460c      	mov	r4, r1
 8010b7e:	200c      	movs	r0, #12
 8010b80:	f8df 8084 	ldr.w	r8, [pc, #132]	; 8010c08 <arp_cache_lookup+0x94>
 8010b84:	fb00 f302 	mul.w	r3, r0, r2
 8010b88:	f853 1008 	ldr.w	r1, [r3, r8]
 8010b8c:	42b1      	cmp	r1, r6
 8010b8e:	d10d      	bne.n	8010bac <arp_cache_lookup+0x38>
 8010b90:	3304      	adds	r3, #4
 8010b92:	4443      	add	r3, r8
 8010b94:	3c01      	subs	r4, #1
 8010b96:	1d9a      	adds	r2, r3, #6
 8010b98:	4293      	cmp	r3, r2
 8010b9a:	d102      	bne.n	8010ba2 <arp_cache_lookup+0x2e>
 8010b9c:	4630      	mov	r0, r6
 8010b9e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8010ba2:	f813 1b01 	ldrb.w	r1, [r3], #1
 8010ba6:	f804 1f01 	strb.w	r1, [r4, #1]!
 8010baa:	e7f5      	b.n	8010b98 <arp_cache_lookup+0x24>
 8010bac:	b111      	cbz	r1, 8010bb4 <arp_cache_lookup+0x40>
 8010bae:	3201      	adds	r2, #1
 8010bb0:	2a20      	cmp	r2, #32
 8010bb2:	d1e7      	bne.n	8010b84 <arp_cache_lookup+0x10>
 8010bb4:	2704      	movs	r7, #4
 8010bb6:	f8df a054 	ldr.w	sl, [pc, #84]	; 8010c0c <arp_cache_lookup+0x98>
 8010bba:	f8ba 5000 	ldrh.w	r5, [sl]
 8010bbe:	3f01      	subs	r7, #1
 8010bc0:	f017 07ff 	ands.w	r7, r7, #255	; 0xff
 8010bc4:	d101      	bne.n	8010bca <arp_cache_lookup+0x56>
 8010bc6:	463e      	mov	r6, r7
 8010bc8:	e7e8      	b.n	8010b9c <arp_cache_lookup+0x28>
 8010bca:	4630      	mov	r0, r6
 8010bcc:	f7ff ffa0 	bl	8010b10 <arp_send_request>
 8010bd0:	f44f 3900 	mov.w	r9, #131072	; 0x20000
 8010bd4:	f1b9 0901 	subs.w	r9, r9, #1
 8010bd8:	f8ba 3000 	ldrh.w	r3, [sl]
 8010bdc:	d011      	beq.n	8010c02 <arp_cache_lookup+0x8e>
 8010bde:	429d      	cmp	r5, r3
 8010be0:	d00c      	beq.n	8010bfc <arp_cache_lookup+0x88>
 8010be2:	230c      	movs	r3, #12
 8010be4:	fb03 8505 	mla	r5, r3, r5, r8
 8010be8:	3c01      	subs	r4, #1
 8010bea:	1d2b      	adds	r3, r5, #4
 8010bec:	350a      	adds	r5, #10
 8010bee:	42ab      	cmp	r3, r5
 8010bf0:	d0d4      	beq.n	8010b9c <arp_cache_lookup+0x28>
 8010bf2:	f813 2b01 	ldrb.w	r2, [r3], #1
 8010bf6:	f804 2f01 	strb.w	r2, [r4, #1]!
 8010bfa:	e7f8      	b.n	8010bee <arp_cache_lookup+0x7a>
 8010bfc:	f7f6 fcbc 	bl	8007578 <net_handle>
 8010c00:	e7e8      	b.n	8010bd4 <arp_cache_lookup+0x60>
 8010c02:	429d      	cmp	r5, r3
 8010c04:	d0db      	beq.n	8010bbe <arp_cache_lookup+0x4a>
 8010c06:	e7ec      	b.n	8010be2 <arp_cache_lookup+0x6e>
 8010c08:	2001d3d0 	ldrdcs	sp, [r1], -r0
 8010c0c:	2001d550 	andcs	sp, r1, r0, asr r5

08010c10 <_parse_response>:
 8010c10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010c14:	2400      	movs	r4, #0
 8010c16:	460d      	mov	r5, r1
 8010c18:	46a3      	mov	fp, r4
 8010c1a:	4627      	mov	r7, r4
 8010c1c:	46a2      	mov	sl, r4
 8010c1e:	46a1      	mov	r9, r4
 8010c20:	46a0      	mov	r8, r4
 8010c22:	4e50      	ldr	r6, [pc, #320]	; (8010d64 <_parse_response+0x154>)
 8010c24:	f5ad 7d17 	sub.w	sp, sp, #604	; 0x25c
 8010c28:	6833      	ldr	r3, [r6, #0]
 8010c2a:	e9cd 4403 	strd	r4, r4, [sp, #12]
 8010c2e:	e9cd 4405 	strd	r4, r4, [sp, #20]
 8010c32:	9009      	str	r0, [sp, #36]	; 0x24
 8010c34:	9402      	str	r4, [sp, #8]
 8010c36:	9407      	str	r4, [sp, #28]
 8010c38:	9308      	str	r3, [sp, #32]
 8010c3a:	f7f6 fc9d 	bl	8007578 <net_handle>
 8010c3e:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8010c42:	9300      	str	r3, [sp, #0]
 8010c44:	f44f 7209 	mov.w	r2, #548	; 0x224
 8010c48:	f89d 0024 	ldrb.w	r0, [sp, #36]	; 0x24
 8010c4c:	ab0c      	add	r3, sp, #48	; 0x30
 8010c4e:	a90d      	add	r1, sp, #52	; 0x34
 8010c50:	f7fe fd00 	bl	800f654 <udp_recv>
 8010c54:	2800      	cmp	r0, #0
 8010c56:	d03f      	beq.n	8010cd8 <_parse_response+0xc8>
 8010c58:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 8010c5c:	2b43      	cmp	r3, #67	; 0x43
 8010c5e:	d13b      	bne.n	8010cd8 <_parse_response+0xc8>
 8010c60:	f10d 024f 	add.w	r2, sp, #79	; 0x4f
 8010c64:	1e6b      	subs	r3, r5, #1
 8010c66:	1d69      	adds	r1, r5, #5
 8010c68:	4299      	cmp	r1, r3
 8010c6a:	d12f      	bne.n	8010ccc <_parse_response+0xbc>
 8010c6c:	2100      	movs	r1, #0
 8010c6e:	ab0d      	add	r3, sp, #52	; 0x34
 8010c70:	181d      	adds	r5, r3, r0
 8010c72:	468c      	mov	ip, r1
 8010c74:	460e      	mov	r6, r1
 8010c76:	4608      	mov	r0, r1
 8010c78:	ab49      	add	r3, sp, #292	; 0x124
 8010c7a:	42ab      	cmp	r3, r5
 8010c7c:	d337      	bcc.n	8010cee <_parse_response+0xde>
 8010c7e:	b141      	cbz	r1, 8010c92 <_parse_response+0x82>
 8010c80:	4b39      	ldr	r3, [pc, #228]	; (8010d68 <_parse_response+0x158>)
 8010c82:	9a07      	ldr	r2, [sp, #28]
 8010c84:	f883 8003 	strb.w	r8, [r3, #3]
 8010c88:	709a      	strb	r2, [r3, #2]
 8010c8a:	9a06      	ldr	r2, [sp, #24]
 8010c8c:	705a      	strb	r2, [r3, #1]
 8010c8e:	9a05      	ldr	r2, [sp, #20]
 8010c90:	701a      	strb	r2, [r3, #0]
 8010c92:	f1bc 0f00 	cmp.w	ip, #0
 8010c96:	d007      	beq.n	8010ca8 <_parse_response+0x98>
 8010c98:	4b34      	ldr	r3, [pc, #208]	; (8010d6c <_parse_response+0x15c>)
 8010c9a:	9a04      	ldr	r2, [sp, #16]
 8010c9c:	705c      	strb	r4, [r3, #1]
 8010c9e:	70da      	strb	r2, [r3, #3]
 8010ca0:	9a03      	ldr	r2, [sp, #12]
 8010ca2:	709a      	strb	r2, [r3, #2]
 8010ca4:	9a02      	ldr	r2, [sp, #8]
 8010ca6:	701a      	strb	r2, [r3, #0]
 8010ca8:	b13e      	cbz	r6, 8010cba <_parse_response+0xaa>
 8010caa:	4b31      	ldr	r3, [pc, #196]	; (8010d70 <_parse_response+0x160>)
 8010cac:	70df      	strb	r7, [r3, #3]
 8010cae:	f883 a002 	strb.w	sl, [r3, #2]
 8010cb2:	f883 9001 	strb.w	r9, [r3, #1]
 8010cb6:	f883 b000 	strb.w	fp, [r3]
 8010cba:	2802      	cmp	r0, #2
 8010cbc:	d102      	bne.n	8010cc4 <_parse_response+0xb4>
 8010cbe:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8010cc0:	4b2c      	ldr	r3, [pc, #176]	; (8010d74 <_parse_response+0x164>)
 8010cc2:	601a      	str	r2, [r3, #0]
 8010cc4:	f50d 7d17 	add.w	sp, sp, #604	; 0x25c
 8010cc8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010ccc:	f812 ef01 	ldrb.w	lr, [r2, #1]!
 8010cd0:	f813 cf01 	ldrb.w	ip, [r3, #1]!
 8010cd4:	45e6      	cmp	lr, ip
 8010cd6:	d0c7      	beq.n	8010c68 <_parse_response+0x58>
 8010cd8:	6833      	ldr	r3, [r6, #0]
 8010cda:	9a08      	ldr	r2, [sp, #32]
 8010cdc:	1a9b      	subs	r3, r3, r2
 8010cde:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 8010ce2:	d3aa      	bcc.n	8010c3a <_parse_response+0x2a>
 8010ce4:	2800      	cmp	r0, #0
 8010ce6:	d1c1      	bne.n	8010c6c <_parse_response+0x5c>
 8010ce8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8010cec:	e7ea      	b.n	8010cc4 <_parse_response+0xb4>
 8010cee:	781a      	ldrb	r2, [r3, #0]
 8010cf0:	2a35      	cmp	r2, #53	; 0x35
 8010cf2:	d011      	beq.n	8010d18 <_parse_response+0x108>
 8010cf4:	d808      	bhi.n	8010d08 <_parse_response+0xf8>
 8010cf6:	2a01      	cmp	r2, #1
 8010cf8:	d011      	beq.n	8010d1e <_parse_response+0x10e>
 8010cfa:	2a03      	cmp	r2, #3
 8010cfc:	d019      	beq.n	8010d32 <_parse_response+0x122>
 8010cfe:	b14a      	cbz	r2, 8010d14 <_parse_response+0x104>
 8010d00:	1c9a      	adds	r2, r3, #2
 8010d02:	785b      	ldrb	r3, [r3, #1]
 8010d04:	4413      	add	r3, r2
 8010d06:	e7b8      	b.n	8010c7a <_parse_response+0x6a>
 8010d08:	2a36      	cmp	r2, #54	; 0x36
 8010d0a:	d01f      	beq.n	8010d4c <_parse_response+0x13c>
 8010d0c:	2aff      	cmp	r2, #255	; 0xff
 8010d0e:	d1f7      	bne.n	8010d00 <_parse_response+0xf0>
 8010d10:	462b      	mov	r3, r5
 8010d12:	e7b2      	b.n	8010c7a <_parse_response+0x6a>
 8010d14:	3301      	adds	r3, #1
 8010d16:	e7b0      	b.n	8010c7a <_parse_response+0x6a>
 8010d18:	7898      	ldrb	r0, [r3, #2]
 8010d1a:	3303      	adds	r3, #3
 8010d1c:	e7ad      	b.n	8010c7a <_parse_response+0x6a>
 8010d1e:	f893 b002 	ldrb.w	fp, [r3, #2]
 8010d22:	f893 9003 	ldrb.w	r9, [r3, #3]
 8010d26:	f893 a004 	ldrb.w	sl, [r3, #4]
 8010d2a:	795f      	ldrb	r7, [r3, #5]
 8010d2c:	4616      	mov	r6, r2
 8010d2e:	3306      	adds	r3, #6
 8010d30:	e7a3      	b.n	8010c7a <_parse_response+0x6a>
 8010d32:	789a      	ldrb	r2, [r3, #2]
 8010d34:	78dc      	ldrb	r4, [r3, #3]
 8010d36:	9202      	str	r2, [sp, #8]
 8010d38:	791a      	ldrb	r2, [r3, #4]
 8010d3a:	f04f 0c01 	mov.w	ip, #1
 8010d3e:	9203      	str	r2, [sp, #12]
 8010d40:	795a      	ldrb	r2, [r3, #5]
 8010d42:	9204      	str	r2, [sp, #16]
 8010d44:	785a      	ldrb	r2, [r3, #1]
 8010d46:	4413      	add	r3, r2
 8010d48:	3302      	adds	r3, #2
 8010d4a:	e796      	b.n	8010c7a <_parse_response+0x6a>
 8010d4c:	789a      	ldrb	r2, [r3, #2]
 8010d4e:	f893 8005 	ldrb.w	r8, [r3, #5]
 8010d52:	9205      	str	r2, [sp, #20]
 8010d54:	78da      	ldrb	r2, [r3, #3]
 8010d56:	2101      	movs	r1, #1
 8010d58:	9206      	str	r2, [sp, #24]
 8010d5a:	791a      	ldrb	r2, [r3, #4]
 8010d5c:	3306      	adds	r3, #6
 8010d5e:	9207      	str	r2, [sp, #28]
 8010d60:	e78b      	b.n	8010c7a <_parse_response+0x6a>
 8010d62:	bf00      	nop
 8010d64:	2001da24 	andcs	sp, r1, r4, lsr #20
 8010d68:	2001d784 	andcs	sp, r1, r4, lsl #15
 8010d6c:	2001d554 	andcs	sp, r1, r4, asr r5
 8010d70:	2001d55c 	andcs	sp, r1, ip, asr r5
 8010d74:	2001d558 	andcs	sp, r1, r8, asr r5

08010d78 <memcpy.isra.0>:
 8010d78:	3801      	subs	r0, #1
 8010d7a:	440a      	add	r2, r1
 8010d7c:	4291      	cmp	r1, r2
 8010d7e:	d100      	bne.n	8010d82 <memcpy.isra.0+0xa>
 8010d80:	4770      	bx	lr
 8010d82:	f811 3b01 	ldrb.w	r3, [r1], #1
 8010d86:	f800 3f01 	strb.w	r3, [r0, #1]!
 8010d8a:	e7f7      	b.n	8010d7c <memcpy.isra.0+0x4>

08010d8c <dhcp_client>:
 8010d8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010d90:	b087      	sub	sp, #28
 8010d92:	9203      	str	r2, [sp, #12]
 8010d94:	4a77      	ldr	r2, [pc, #476]	; (8010f74 <dhcp_client+0x1e8>)
 8010d96:	460f      	mov	r7, r1
 8010d98:	4605      	mov	r5, r0
 8010d9a:	f44f 7309 	mov.w	r3, #548	; 0x224
 8010d9e:	4614      	mov	r4, r2
 8010da0:	2100      	movs	r1, #0
 8010da2:	3b01      	subs	r3, #1
 8010da4:	f802 1b01 	strb.w	r1, [r2], #1
 8010da8:	d1fb      	bne.n	8010da2 <dhcp_client+0x16>
 8010daa:	f240 1301 	movw	r3, #257	; 0x101
 8010dae:	2206      	movs	r2, #6
 8010db0:	4629      	mov	r1, r5
 8010db2:	4871      	ldr	r0, [pc, #452]	; (8010f78 <dhcp_client+0x1ec>)
 8010db4:	8023      	strh	r3, [r4, #0]
 8010db6:	70a2      	strb	r2, [r4, #2]
 8010db8:	f7ff ffde 	bl	8010d78 <memcpy.isra.0>
 8010dbc:	4b6f      	ldr	r3, [pc, #444]	; (8010f7c <dhcp_client+0x1f0>)
 8010dbe:	2044      	movs	r0, #68	; 0x44
 8010dc0:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
 8010dc4:	f240 1335 	movw	r3, #309	; 0x135
 8010dc8:	f8a4 30f0 	strh.w	r3, [r4, #240]	; 0xf0
 8010dcc:	f7fe fc08 	bl	800f5e0 <udp_bind>
 8010dd0:	1e06      	subs	r6, r0, #0
 8010dd2:	f2c0 80c9 	blt.w	8010f68 <dhcp_client+0x1dc>
 8010dd6:	f04f 0915 	mov.w	r9, #21
 8010dda:	f8df a198 	ldr.w	sl, [pc, #408]	; 8010f74 <dhcp_client+0x1e8>
 8010dde:	f1b9 0901 	subs.w	r9, r9, #1
 8010de2:	d11f      	bne.n	8010e24 <dhcp_client+0x98>
 8010de4:	464c      	mov	r4, r9
 8010de6:	2044      	movs	r0, #68	; 0x44
 8010de8:	f7fe fc14 	bl	800f614 <udp_unbind>
 8010dec:	2c00      	cmp	r4, #0
 8010dee:	f000 80be 	beq.w	8010f6e <dhcp_client+0x1e2>
 8010df2:	2204      	movs	r2, #4
 8010df4:	4962      	ldr	r1, [pc, #392]	; (8010f80 <dhcp_client+0x1f4>)
 8010df6:	a805      	add	r0, sp, #20
 8010df8:	f7ff ffbe 	bl	8010d78 <memcpy.isra.0>
 8010dfc:	9b05      	ldr	r3, [sp, #20]
 8010dfe:	2204      	movs	r2, #4
 8010e00:	4960      	ldr	r1, [pc, #384]	; (8010f84 <dhcp_client+0x1f8>)
 8010e02:	603b      	str	r3, [r7, #0]
 8010e04:	a805      	add	r0, sp, #20
 8010e06:	f7ff ffb7 	bl	8010d78 <memcpy.isra.0>
 8010e0a:	9b05      	ldr	r3, [sp, #20]
 8010e0c:	a805      	add	r0, sp, #20
 8010e0e:	60bb      	str	r3, [r7, #8]
 8010e10:	2204      	movs	r2, #4
 8010e12:	495d      	ldr	r1, [pc, #372]	; (8010f88 <dhcp_client+0x1fc>)
 8010e14:	f7ff ffb0 	bl	8010d78 <memcpy.isra.0>
 8010e18:	2000      	movs	r0, #0
 8010e1a:	9b05      	ldr	r3, [sp, #20]
 8010e1c:	607b      	str	r3, [r7, #4]
 8010e1e:	b007      	add	sp, #28
 8010e20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010e24:	f643 5301 	movw	r3, #15617	; 0x3d01
 8010e28:	f240 1807 	movw	r8, #263	; 0x107
 8010e2c:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 8010e30:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 8010e34:	782b      	ldrb	r3, [r5, #0]
 8010e36:	4a55      	ldr	r2, [pc, #340]	; (8010f8c <dhcp_client+0x200>)
 8010e38:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 8010e3c:	786b      	ldrb	r3, [r5, #1]
 8010e3e:	fa5f fb86 	uxtb.w	fp, r6
 8010e42:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 8010e46:	78ab      	ldrb	r3, [r5, #2]
 8010e48:	4651      	mov	r1, sl
 8010e4a:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 8010e4e:	78eb      	ldrb	r3, [r5, #3]
 8010e50:	4658      	mov	r0, fp
 8010e52:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 8010e56:	792b      	ldrb	r3, [r5, #4]
 8010e58:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 8010e5c:	796b      	ldrb	r3, [r5, #5]
 8010e5e:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 8010e62:	4b4b      	ldr	r3, [pc, #300]	; (8010f90 <dhcp_client+0x204>)
 8010e64:	e9c4 233f 	strd	r2, r3, [r4, #252]	; 0xfc
 8010e68:	23ff      	movs	r3, #255	; 0xff
 8010e6a:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8010e6e:	2343      	movs	r3, #67	; 0x43
 8010e70:	f240 1205 	movw	r2, #261	; 0x105
 8010e74:	9300      	str	r3, [sp, #0]
 8010e76:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8010e7a:	f7fe fc47 	bl	800f70c <udp_send>
 8010e7e:	4629      	mov	r1, r5
 8010e80:	4630      	mov	r0, r6
 8010e82:	f7ff fec5 	bl	8010c10 <_parse_response>
 8010e86:	2802      	cmp	r0, #2
 8010e88:	d1a9      	bne.n	8010dde <dhcp_client+0x52>
 8010e8a:	f643 5303 	movw	r3, #15619	; 0x3d03
 8010e8e:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 8010e92:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 8010e96:	782b      	ldrb	r3, [r5, #0]
 8010e98:	f8df c0f8 	ldr.w	ip, [pc, #248]	; 8010f94 <dhcp_client+0x208>
 8010e9c:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 8010ea0:	786b      	ldrb	r3, [r5, #1]
 8010ea2:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 8010ea6:	78ab      	ldrb	r3, [r5, #2]
 8010ea8:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 8010eac:	78eb      	ldrb	r3, [r5, #3]
 8010eae:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 8010eb2:	792b      	ldrb	r3, [r5, #4]
 8010eb4:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 8010eb8:	796b      	ldrb	r3, [r5, #5]
 8010eba:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 8010ebe:	f240 4332 	movw	r3, #1074	; 0x432
 8010ec2:	f8a4 30fc 	strh.w	r3, [r4, #252]	; 0xfc
 8010ec6:	4b2e      	ldr	r3, [pc, #184]	; (8010f80 <dhcp_client+0x1f4>)
 8010ec8:	881a      	ldrh	r2, [r3, #0]
 8010eca:	885b      	ldrh	r3, [r3, #2]
 8010ecc:	f8a4 20fe 	strh.w	r2, [r4, #254]	; 0xfe
 8010ed0:	f8a4 3100 	strh.w	r3, [r4, #256]	; 0x100
 8010ed4:	f240 4336 	movw	r3, #1078	; 0x436
 8010ed8:	f8a4 3102 	strh.w	r3, [r4, #258]	; 0x102
 8010edc:	4b2e      	ldr	r3, [pc, #184]	; (8010f98 <dhcp_client+0x20c>)
 8010ede:	221e      	movs	r2, #30
 8010ee0:	681b      	ldr	r3, [r3, #0]
 8010ee2:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
 8010ee6:	230c      	movs	r3, #12
 8010ee8:	f8a4 3108 	strh.w	r3, [r4, #264]	; 0x108
 8010eec:	9b03      	ldr	r3, [sp, #12]
 8010eee:	1e58      	subs	r0, r3, #1
 8010ef0:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 8010ef4:	f1a2 0e1e 	sub.w	lr, r2, #30
 8010ef8:	1c51      	adds	r1, r2, #1
 8010efa:	bb8b      	cbnz	r3, 8010f60 <dhcp_client+0x1d4>
 8010efc:	2037      	movs	r0, #55	; 0x37
 8010efe:	18a3      	adds	r3, r4, r2
 8010f00:	f883 00ec 	strb.w	r0, [r3, #236]	; 0xec
 8010f04:	2006      	movs	r0, #6
 8010f06:	4421      	add	r1, r4
 8010f08:	f881 00ec 	strb.w	r0, [r1, #236]	; 0xec
 8010f0c:	2103      	movs	r1, #3
 8010f0e:	f883 10ef 	strb.w	r1, [r3, #239]	; 0xef
 8010f12:	210f      	movs	r1, #15
 8010f14:	f883 10f1 	strb.w	r1, [r3, #241]	; 0xf1
 8010f18:	213a      	movs	r1, #58	; 0x3a
 8010f1a:	f883 10f2 	strb.w	r1, [r3, #242]	; 0xf2
 8010f1e:	213b      	movs	r1, #59	; 0x3b
 8010f20:	f04f 0801 	mov.w	r8, #1
 8010f24:	f883 10f3 	strb.w	r1, [r3, #243]	; 0xf3
 8010f28:	21ff      	movs	r1, #255	; 0xff
 8010f2a:	f883 00f0 	strb.w	r0, [r3, #240]	; 0xf0
 8010f2e:	f883 10f4 	strb.w	r1, [r3, #244]	; 0xf4
 8010f32:	f883 80ee 	strb.w	r8, [r3, #238]	; 0xee
 8010f36:	2343      	movs	r3, #67	; 0x43
 8010f38:	32f5      	adds	r2, #245	; 0xf5
 8010f3a:	f884 e109 	strb.w	lr, [r4, #265]	; 0x109
 8010f3e:	4651      	mov	r1, sl
 8010f40:	9300      	str	r3, [sp, #0]
 8010f42:	b292      	uxth	r2, r2
 8010f44:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8010f48:	4658      	mov	r0, fp
 8010f4a:	f7fe fbdf 	bl	800f70c <udp_send>
 8010f4e:	4629      	mov	r1, r5
 8010f50:	4630      	mov	r0, r6
 8010f52:	f7ff fe5d 	bl	8010c10 <_parse_response>
 8010f56:	2805      	cmp	r0, #5
 8010f58:	f47f af41 	bne.w	8010dde <dhcp_client+0x52>
 8010f5c:	4644      	mov	r4, r8
 8010f5e:	e742      	b.n	8010de6 <dhcp_client+0x5a>
 8010f60:	460a      	mov	r2, r1
 8010f62:	f80c 3f01 	strb.w	r3, [ip, #1]!
 8010f66:	e7c3      	b.n	8010ef0 <dhcp_client+0x164>
 8010f68:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8010f6c:	e757      	b.n	8010e1e <dhcp_client+0x92>
 8010f6e:	f06f 0001 	mvn.w	r0, #1
 8010f72:	e754      	b.n	8010e1e <dhcp_client+0x92>
 8010f74:	2001d560 	andcs	sp, r1, r0, ror #10
 8010f78:	2001d57c 	andcs	sp, r1, ip, ror r5
 8010f7c:	63538263 	cmpvs	r3, #805306374	; 0x30000006
 8010f80:	2001d558 	andcs	sp, r1, r8, asr r5
 8010f84:	2001d554 	andcs	sp, r1, r4, asr r5
 8010f88:	2001d55c 	andcs	sp, r1, ip, asr r5
 8010f8c:	03010637 	movweq	r0, #5687	; 0x1637
 8010f90:	3b3a0f06 	blcc	8e94bb0 <__exidx_end+0xe7cee4>
 8010f94:	2001d669 	andcs	sp, r1, r9, ror #12
 8010f98:	2001d784 	andcs	sp, r1, r4, lsl #15

08010f9c <dhcp_client_release>:
 8010f9c:	b507      	push	{r0, r1, r2, lr}
 8010f9e:	2044      	movs	r0, #68	; 0x44
 8010fa0:	f7fe fb1e 	bl	800f5e0 <udp_bind>
 8010fa4:	f243 6307 	movw	r3, #13831	; 0x3607
 8010fa8:	4911      	ldr	r1, [pc, #68]	; (8010ff0 <dhcp_client_release+0x54>)
 8010faa:	b2c0      	uxtb	r0, r0
 8010fac:	f8a1 30f2 	strh.w	r3, [r1, #242]	; 0xf2
 8010fb0:	2304      	movs	r3, #4
 8010fb2:	f881 30f4 	strb.w	r3, [r1, #244]	; 0xf4
 8010fb6:	4b0f      	ldr	r3, [pc, #60]	; (8010ff4 <dhcp_client_release+0x58>)
 8010fb8:	781a      	ldrb	r2, [r3, #0]
 8010fba:	f881 20f5 	strb.w	r2, [r1, #245]	; 0xf5
 8010fbe:	785a      	ldrb	r2, [r3, #1]
 8010fc0:	f881 20f6 	strb.w	r2, [r1, #246]	; 0xf6
 8010fc4:	789a      	ldrb	r2, [r3, #2]
 8010fc6:	78db      	ldrb	r3, [r3, #3]
 8010fc8:	f881 20f7 	strb.w	r2, [r1, #247]	; 0xf7
 8010fcc:	f881 30f8 	strb.w	r3, [r1, #248]	; 0xf8
 8010fd0:	23ff      	movs	r3, #255	; 0xff
 8010fd2:	f881 30f9 	strb.w	r3, [r1, #249]	; 0xf9
 8010fd6:	2343      	movs	r3, #67	; 0x43
 8010fd8:	22fa      	movs	r2, #250	; 0xfa
 8010fda:	9300      	str	r3, [sp, #0]
 8010fdc:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8010fe0:	f7fe fb94 	bl	800f70c <udp_send>
 8010fe4:	2044      	movs	r0, #68	; 0x44
 8010fe6:	b003      	add	sp, #12
 8010fe8:	f85d eb04 	ldr.w	lr, [sp], #4
 8010fec:	f7fe bb12 	b.w	800f614 <udp_unbind>
 8010ff0:	2001d560 	andcs	sp, r1, r0, ror #10
 8010ff4:	2001d784 	andcs	sp, r1, r4, lsl #15

08010ff8 <memcpy.isra.0>:
 8010ff8:	3801      	subs	r0, #1
 8010ffa:	440a      	add	r2, r1
 8010ffc:	4291      	cmp	r1, r2
 8010ffe:	d100      	bne.n	8011002 <memcpy.isra.0+0xa>
 8011000:	4770      	bx	lr
 8011002:	f811 3b01 	ldrb.w	r3, [r1], #1
 8011006:	f800 3f01 	strb.w	r3, [r0, #1]!
 801100a:	e7f7      	b.n	8010ffc <memcpy.isra.0+0x4>

0801100c <_send_report>:
 801100c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801100e:	491c      	ldr	r1, [pc, #112]	; (8011080 <_send_report+0x74>)
 8011010:	4c1c      	ldr	r4, [pc, #112]	; (8011084 <_send_report+0x78>)
 8011012:	f3c0 2306 	ubfx	r3, r0, #8, #7
 8011016:	9001      	str	r0, [sp, #4]
 8011018:	70cb      	strb	r3, [r1, #3]
 801101a:	f3c0 4307 	ubfx	r3, r0, #16, #8
 801101e:	f3c0 6007 	ubfx	r0, r0, #24, #8
 8011022:	710b      	strb	r3, [r1, #4]
 8011024:	7148      	strb	r0, [r1, #5]
 8011026:	2206      	movs	r2, #6
 8011028:	4620      	mov	r0, r4
 801102a:	f7ff ffe5 	bl	8010ff8 <memcpy.isra.0>
 801102e:	2204      	movs	r2, #4
 8011030:	2700      	movs	r7, #0
 8011032:	4d15      	ldr	r5, [pc, #84]	; (8011088 <_send_report+0x7c>)
 8011034:	eb0d 0102 	add.w	r1, sp, r2
 8011038:	882b      	ldrh	r3, [r5, #0]
 801103a:	f104 001e 	add.w	r0, r4, #30
 801103e:	f104 060e 	add.w	r6, r4, #14
 8011042:	8263      	strh	r3, [r4, #18]
 8011044:	f7ff ffd8 	bl	8010ff8 <memcpy.isra.0>
 8011048:	2118      	movs	r1, #24
 801104a:	4630      	mov	r0, r6
 801104c:	8327      	strh	r7, [r4, #24]
 801104e:	f000 f8c6 	bl	80111de <net_chksum>
 8011052:	2204      	movs	r2, #4
 8011054:	8320      	strh	r0, [r4, #24]
 8011056:	eb0d 0102 	add.w	r1, sp, r2
 801105a:	f104 002a 	add.w	r0, r4, #42	; 0x2a
 801105e:	f7ff ffcb 	bl	8010ff8 <memcpy.isra.0>
 8011062:	2120      	movs	r1, #32
 8011064:	4630      	mov	r0, r6
 8011066:	8527      	strh	r7, [r4, #40]	; 0x28
 8011068:	f000 f8b9 	bl	80111de <net_chksum>
 801106c:	212e      	movs	r1, #46	; 0x2e
 801106e:	8520      	strh	r0, [r4, #40]	; 0x28
 8011070:	4620      	mov	r0, r4
 8011072:	f002 fc8b 	bl	801398c <emac_eth_send>
 8011076:	882b      	ldrh	r3, [r5, #0]
 8011078:	3301      	adds	r3, #1
 801107a:	802b      	strh	r3, [r5, #0]
 801107c:	b003      	add	sp, #12
 801107e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011080:	2001d8e0 	andcs	sp, r1, r0, ror #17
 8011084:	2001d8e8 	andcs	sp, r1, r8, ror #17
 8011088:	2001d8a8 	andcs	sp, r1, r8, lsr #17

0801108c <igmp_set_ip>:
 801108c:	b507      	push	{r0, r1, r2, lr}
 801108e:	2204      	movs	r2, #4
 8011090:	6803      	ldr	r3, [r0, #0]
 8011092:	eb0d 0102 	add.w	r1, sp, r2
 8011096:	4806      	ldr	r0, [pc, #24]	; (80110b0 <igmp_set_ip+0x24>)
 8011098:	9301      	str	r3, [sp, #4]
 801109a:	f7ff ffad 	bl	8010ff8 <memcpy.isra.0>
 801109e:	2204      	movs	r2, #4
 80110a0:	4804      	ldr	r0, [pc, #16]	; (80110b4 <igmp_set_ip+0x28>)
 80110a2:	eb0d 0102 	add.w	r1, sp, r2
 80110a6:	f7ff ffa7 	bl	8010ff8 <memcpy.isra.0>
 80110aa:	b003      	add	sp, #12
 80110ac:	f85d fb04 	ldr.w	pc, [sp], #4
 80110b0:	2001d902 	andcs	sp, r1, r2, lsl #18
 80110b4:	2001d8ca 	andcs	sp, r1, sl, asr #17

080110b8 <igmp_timer>:
 80110b8:	b570      	push	{r4, r5, r6, lr}
 80110ba:	2500      	movs	r5, #0
 80110bc:	2602      	movs	r6, #2
 80110be:	4c0a      	ldr	r4, [pc, #40]	; (80110e8 <igmp_timer+0x30>)
 80110c0:	7963      	ldrb	r3, [r4, #5]
 80110c2:	2b01      	cmp	r3, #1
 80110c4:	d109      	bne.n	80110da <igmp_timer+0x22>
 80110c6:	7923      	ldrb	r3, [r4, #4]
 80110c8:	b13b      	cbz	r3, 80110da <igmp_timer+0x22>
 80110ca:	3b01      	subs	r3, #1
 80110cc:	b2db      	uxtb	r3, r3
 80110ce:	7123      	strb	r3, [r4, #4]
 80110d0:	b91b      	cbnz	r3, 80110da <igmp_timer+0x22>
 80110d2:	6820      	ldr	r0, [r4, #0]
 80110d4:	f7ff ff9a 	bl	801100c <_send_report>
 80110d8:	7166      	strb	r6, [r4, #5]
 80110da:	3501      	adds	r5, #1
 80110dc:	2d24      	cmp	r5, #36	; 0x24
 80110de:	f104 0408 	add.w	r4, r4, #8
 80110e2:	d1ed      	bne.n	80110c0 <igmp_timer+0x8>
 80110e4:	bd70      	pop	{r4, r5, r6, pc}
 80110e6:	bf00      	nop
 80110e8:	2001d788 	andcs	sp, r1, r8, lsl #15

080110ec <igmp_join>:
 80110ec:	b538      	push	{r3, r4, r5, lr}
 80110ee:	f000 03e0 	and.w	r3, r0, #224	; 0xe0
 80110f2:	2be0      	cmp	r3, #224	; 0xe0
 80110f4:	d11b      	bne.n	801112e <igmp_join+0x42>
 80110f6:	4911      	ldr	r1, [pc, #68]	; (801113c <igmp_join+0x50>)
 80110f8:	680c      	ldr	r4, [r1, #0]
 80110fa:	2c24      	cmp	r4, #36	; 0x24
 80110fc:	d01a      	beq.n	8011134 <igmp_join+0x48>
 80110fe:	2300      	movs	r3, #0
 8011100:	4a0f      	ldr	r2, [pc, #60]	; (8011140 <igmp_join+0x54>)
 8011102:	429c      	cmp	r4, r3
 8011104:	dc0d      	bgt.n	8011122 <igmp_join+0x36>
 8011106:	f44f 7381 	mov.w	r3, #258	; 0x102
 801110a:	f842 0034 	str.w	r0, [r2, r4, lsl #3]
 801110e:	eb02 02c4 	add.w	r2, r2, r4, lsl #3
 8011112:	8093      	strh	r3, [r2, #4]
 8011114:	1c63      	adds	r3, r4, #1
 8011116:	600b      	str	r3, [r1, #0]
 8011118:	f7ff ff78 	bl	801100c <_send_report>
 801111c:	4623      	mov	r3, r4
 801111e:	4618      	mov	r0, r3
 8011120:	bd38      	pop	{r3, r4, r5, pc}
 8011122:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 8011126:	4285      	cmp	r5, r0
 8011128:	d0f9      	beq.n	801111e <igmp_join+0x32>
 801112a:	3301      	adds	r3, #1
 801112c:	e7e9      	b.n	8011102 <igmp_join+0x16>
 801112e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8011132:	e7f4      	b.n	801111e <igmp_join+0x32>
 8011134:	f06f 0301 	mvn.w	r3, #1
 8011138:	e7f1      	b.n	801111e <igmp_join+0x32>
 801113a:	bf00      	nop
 801113c:	2001d8ac 	andcs	sp, r1, ip, lsr #17
 8011140:	2001d788 	andcs	sp, r1, r8, lsl #15

08011144 <igmp_leave>:
 8011144:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8011148:	2600      	movs	r6, #0
 801114a:	4f1c      	ldr	r7, [pc, #112]	; (80111bc <igmp_leave+0x78>)
 801114c:	f857 3036 	ldr.w	r3, [r7, r6, lsl #3]
 8011150:	4283      	cmp	r3, r0
 8011152:	d007      	beq.n	8011164 <igmp_leave+0x20>
 8011154:	3601      	adds	r6, #1
 8011156:	2e24      	cmp	r6, #36	; 0x24
 8011158:	d1f8      	bne.n	801114c <igmp_leave+0x8>
 801115a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801115e:	b002      	add	sp, #8
 8011160:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011164:	2400      	movs	r4, #0
 8011166:	f8df 8058 	ldr.w	r8, [pc, #88]	; 80111c0 <igmp_leave+0x7c>
 801116a:	4d16      	ldr	r5, [pc, #88]	; (80111c4 <igmp_leave+0x80>)
 801116c:	f8b8 3000 	ldrh.w	r3, [r8]
 8011170:	2118      	movs	r1, #24
 8011172:	9001      	str	r0, [sp, #4]
 8011174:	4814      	ldr	r0, [pc, #80]	; (80111c8 <igmp_leave+0x84>)
 8011176:	826b      	strh	r3, [r5, #18]
 8011178:	832c      	strh	r4, [r5, #24]
 801117a:	f000 f830 	bl	80111de <net_chksum>
 801117e:	2204      	movs	r2, #4
 8011180:	8328      	strh	r0, [r5, #24]
 8011182:	eb0d 0102 	add.w	r1, sp, r2
 8011186:	f105 002a 	add.w	r0, r5, #42	; 0x2a
 801118a:	f7ff ff35 	bl	8010ff8 <memcpy.isra.0>
 801118e:	2120      	movs	r1, #32
 8011190:	f105 000e 	add.w	r0, r5, #14
 8011194:	852c      	strh	r4, [r5, #40]	; 0x28
 8011196:	f000 f822 	bl	80111de <net_chksum>
 801119a:	212e      	movs	r1, #46	; 0x2e
 801119c:	8528      	strh	r0, [r5, #40]	; 0x28
 801119e:	4628      	mov	r0, r5
 80111a0:	f002 fbf4 	bl	801398c <emac_eth_send>
 80111a4:	f8b8 3000 	ldrh.w	r3, [r8]
 80111a8:	f847 4036 	str.w	r4, [r7, r6, lsl #3]
 80111ac:	3301      	adds	r3, #1
 80111ae:	eb07 07c6 	add.w	r7, r7, r6, lsl #3
 80111b2:	4620      	mov	r0, r4
 80111b4:	f8a8 3000 	strh.w	r3, [r8]
 80111b8:	80bc      	strh	r4, [r7, #4]
 80111ba:	e7d0      	b.n	801115e <igmp_leave+0x1a>
 80111bc:	2001d788 	andcs	sp, r1, r8, lsl #15
 80111c0:	2001d8a8 	andcs	sp, r1, r8, lsr #17
 80111c4:	2001d8b0 			; <UNDEFINED> instruction: 0x2001d8b0
 80111c8:	2001d8f6 	strdcs	sp, [r1], -r6

080111cc <ip_set_ip>:
 80111cc:	b510      	push	{r4, lr}
 80111ce:	4604      	mov	r4, r0
 80111d0:	f7fe f9e6 	bl	800f5a0 <udp_set_ip>
 80111d4:	4620      	mov	r0, r4
 80111d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80111da:	f7ff bf57 	b.w	801108c <igmp_set_ip>

080111de <net_chksum>:
 80111de:	2300      	movs	r3, #0
 80111e0:	f021 0201 	bic.w	r2, r1, #1
 80111e4:	b530      	push	{r4, r5, lr}
 80111e6:	1884      	adds	r4, r0, r2
 80111e8:	42a0      	cmp	r0, r4
 80111ea:	d10b      	bne.n	8011204 <net_chksum+0x26>
 80111ec:	4291      	cmp	r1, r2
 80111ee:	d004      	beq.n	80111fa <net_chksum+0x1c>
 80111f0:	7802      	ldrb	r2, [r0, #0]
 80111f2:	0212      	lsls	r2, r2, #8
 80111f4:	ba52      	rev16	r2, r2
 80111f6:	b292      	uxth	r2, r2
 80111f8:	4413      	add	r3, r2
 80111fa:	0c1a      	lsrs	r2, r3, #16
 80111fc:	d106      	bne.n	801120c <net_chksum+0x2e>
 80111fe:	43d8      	mvns	r0, r3
 8011200:	b280      	uxth	r0, r0
 8011202:	bd30      	pop	{r4, r5, pc}
 8011204:	f830 5b02 	ldrh.w	r5, [r0], #2
 8011208:	442b      	add	r3, r5
 801120a:	e7ed      	b.n	80111e8 <net_chksum+0xa>
 801120c:	b29b      	uxth	r3, r3
 801120e:	e7f3      	b.n	80111f8 <net_chksum+0x1a>

08011210 <memcpy.isra.0>:
 8011210:	3801      	subs	r0, #1
 8011212:	440a      	add	r2, r1
 8011214:	4291      	cmp	r1, r2
 8011216:	d100      	bne.n	801121a <memcpy.isra.0+0xa>
 8011218:	4770      	bx	lr
 801121a:	f811 3b01 	ldrb.w	r3, [r1], #1
 801121e:	f800 3f01 	strb.w	r3, [r0, #1]!
 8011222:	e7f7      	b.n	8011214 <memcpy.isra.0+0x4>

08011224 <Display::Write(unsigned char, char const*) [clone .isra.0]>:
 8011224:	b430      	push	{r4, r5}
 8011226:	b168      	cbz	r0, 8011244 <Display::Write(unsigned char, char const*) [clone .isra.0]+0x20>
 8011228:	2300      	movs	r3, #0
 801122a:	7905      	ldrb	r5, [r0, #4]
 801122c:	5cd4      	ldrb	r4, [r2, r3]
 801122e:	b11c      	cbz	r4, 8011238 <Display::Write(unsigned char, char const*) [clone .isra.0]+0x14>
 8011230:	1c5c      	adds	r4, r3, #1
 8011232:	429d      	cmp	r5, r3
 8011234:	4623      	mov	r3, r4
 8011236:	dcf9      	bgt.n	801122c <Display::Write(unsigned char, char const*) [clone .isra.0]+0x8>
 8011238:	6804      	ldr	r4, [r0, #0]
 801123a:	b2db      	uxtb	r3, r3
 801123c:	69e4      	ldr	r4, [r4, #28]
 801123e:	46a4      	mov	ip, r4
 8011240:	bc30      	pop	{r4, r5}
 8011242:	4760      	bx	ip
 8011244:	bc30      	pop	{r4, r5}
 8011246:	4770      	bx	lr

08011248 <Display::ClearLine(unsigned char) [clone .isra.0]>:
 8011248:	b110      	cbz	r0, 8011250 <Display::ClearLine(unsigned char) [clone .isra.0]+0x8>
 801124a:	6803      	ldr	r3, [r0, #0]
 801124c:	691b      	ldr	r3, [r3, #16]
 801124e:	4718      	bx	r3
 8011250:	4770      	bx	lr
	...

08011254 <DisplayUdf::DisplayUdf()>:
 8011254:	b510      	push	{r4, lr}
 8011256:	4604      	mov	r4, r0
 8011258:	f000 fe8c 	bl	8011f74 <Display::Display()>
 801125c:	4b05      	ldr	r3, [pc, #20]	; (8011274 <DisplayUdf::DisplayUdf()+0x20>)
 801125e:	f104 023b 	add.w	r2, r4, #59	; 0x3b
 8011262:	601c      	str	r4, [r3, #0]
 8011264:	2301      	movs	r3, #1
 8011266:	f802 3f01 	strb.w	r3, [r2, #1]!
 801126a:	3301      	adds	r3, #1
 801126c:	2b15      	cmp	r3, #21
 801126e:	d1fa      	bne.n	8011266 <DisplayUdf::DisplayUdf()+0x12>
 8011270:	4620      	mov	r0, r4
 8011272:	bd10      	pop	{r4, pc}
 8011274:	2001d918 	andcs	sp, r1, r8, lsl r9

08011278 <DisplayUdf::SetTitle(char const*, ...)>:
 8011278:	b40e      	push	{r1, r2, r3}
 801127a:	b517      	push	{r0, r1, r2, r4, lr}
 801127c:	ab05      	add	r3, sp, #20
 801127e:	f853 2b04 	ldr.w	r2, [r3], #4
 8011282:	4604      	mov	r4, r0
 8011284:	211f      	movs	r1, #31
 8011286:	301c      	adds	r0, #28
 8011288:	9301      	str	r3, [sp, #4]
 801128a:	f7f8 f9af 	bl	80095ec <vsnprintf>
 801128e:	2300      	movs	r3, #0
 8011290:	4404      	add	r4, r0
 8011292:	7723      	strb	r3, [r4, #28]
 8011294:	b003      	add	sp, #12
 8011296:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801129a:	b003      	add	sp, #12
 801129c:	4770      	bx	lr

0801129e <DisplayUdf::Set(unsigned char, displayudf::Labels)>:
 801129e:	1e4b      	subs	r3, r1, #1
 80112a0:	2b05      	cmp	r3, #5
 80112a2:	b530      	push	{r4, r5, lr}
 80112a4:	d80f      	bhi.n	80112c6 <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x28>
 80112a6:	2300      	movs	r3, #0
 80112a8:	f100 043b 	add.w	r4, r0, #59	; 0x3b
 80112ac:	f814 5f01 	ldrb.w	r5, [r4, #1]!
 80112b0:	428d      	cmp	r5, r1
 80112b2:	d109      	bne.n	80112c8 <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x2a>
 80112b4:	1884      	adds	r4, r0, r2
 80112b6:	f894 403c 	ldrb.w	r4, [r4, #60]	; 0x3c
 80112ba:	4403      	add	r3, r0
 80112bc:	f883 403c 	strb.w	r4, [r3, #60]	; 0x3c
 80112c0:	4410      	add	r0, r2
 80112c2:	f880 103c 	strb.w	r1, [r0, #60]	; 0x3c
 80112c6:	bd30      	pop	{r4, r5, pc}
 80112c8:	3301      	adds	r3, #1
 80112ca:	2b14      	cmp	r3, #20
 80112cc:	d1ee      	bne.n	80112ac <DisplayUdf::Set(unsigned char, displayudf::Labels)+0xe>
 80112ce:	e7f7      	b.n	80112c0 <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x22>

080112d0 <DisplayUdf::ShowEmacStart()>:
 80112d0:	b510      	push	{r4, lr}
 80112d2:	4604      	mov	r4, r0
 80112d4:	f890 103e 	ldrb.w	r1, [r0, #62]	; 0x3e
 80112d8:	6980      	ldr	r0, [r0, #24]
 80112da:	f7ff ffb5 	bl	8011248 <Display::ClearLine(unsigned char) [clone .isra.0]>
 80112de:	4620      	mov	r0, r4
 80112e0:	4a02      	ldr	r2, [pc, #8]	; (80112ec <DisplayUdf::ShowEmacStart()+0x1c>)
 80112e2:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 80112e6:	f7f7 fa33 	bl	8008750 <Display::Printf(unsigned char, char const*, ...)>
 80112ea:	bd10      	pop	{r4, pc}
 80112ec:	0801758c 	stmdaeq	r1, {r2, r3, r7, r8, sl, ip, sp, lr}

080112f0 <DisplayUdf::ShowIpAddress()>:
 80112f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80112f4:	4604      	mov	r4, r0
 80112f6:	f890 103e 	ldrb.w	r1, [r0, #62]	; 0x3e
 80112fa:	b086      	sub	sp, #24
 80112fc:	6980      	ldr	r0, [r0, #24]
 80112fe:	f7ff ffa3 	bl	8011248 <Display::ClearLine(unsigned char) [clone .isra.0]>
 8011302:	4b13      	ldr	r3, [pc, #76]	; (8011350 <DisplayUdf::ShowIpAddress()+0x60>)
 8011304:	f894 703e 	ldrb.w	r7, [r4, #62]	; 0x3e
 8011308:	681d      	ldr	r5, [r3, #0]
 801130a:	69e8      	ldr	r0, [r5, #28]
 801130c:	696e      	ldr	r6, [r5, #20]
 801130e:	f003 fc97 	bl	8014c40 <__popcountsi2>
 8011312:	79eb      	ldrb	r3, [r5, #7]
 8011314:	fa5f f886 	uxtb.w	r8, r6
 8011318:	f3c6 2907 	ubfx	r9, r6, #8, #8
 801131c:	f3c6 4a07 	ubfx	sl, r6, #16, #8
 8011320:	0e36      	lsrs	r6, r6, #24
 8011322:	b99b      	cbnz	r3, 801134c <DisplayUdf::ShowIpAddress()+0x5c>
 8011324:	796b      	ldrb	r3, [r5, #5]
 8011326:	2b00      	cmp	r3, #0
 8011328:	bf14      	ite	ne
 801132a:	2244      	movne	r2, #68	; 0x44
 801132c:	2253      	moveq	r2, #83	; 0x53
 801132e:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8011332:	4643      	mov	r3, r8
 8011334:	4639      	mov	r1, r7
 8011336:	4620      	mov	r0, r4
 8011338:	e9cd a601 	strd	sl, r6, [sp, #4]
 801133c:	4a05      	ldr	r2, [pc, #20]	; (8011354 <DisplayUdf::ShowIpAddress()+0x64>)
 801133e:	f8cd 9000 	str.w	r9, [sp]
 8011342:	f7f7 fa05 	bl	8008750 <Display::Printf(unsigned char, char const*, ...)>
 8011346:	b006      	add	sp, #24
 8011348:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801134c:	225a      	movs	r2, #90	; 0x5a
 801134e:	e7ee      	b.n	801132e <DisplayUdf::ShowIpAddress()+0x3e>
 8011350:	2001d348 	andcs	sp, r1, r8, asr #6
 8011354:	0801759b 	stmdaeq	r1, {r0, r1, r3, r4, r7, r8, sl, ip, sp, lr}

08011358 <DisplayUdf::ShowNetmask()>:
 8011358:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801135a:	4604      	mov	r4, r0
 801135c:	4b0b      	ldr	r3, [pc, #44]	; (801138c <DisplayUdf::ShowNetmask()+0x34>)
 801135e:	681b      	ldr	r3, [r3, #0]
 8011360:	69db      	ldr	r3, [r3, #28]
 8011362:	0e1a      	lsrs	r2, r3, #24
 8011364:	9202      	str	r2, [sp, #8]
 8011366:	f3c3 4207 	ubfx	r2, r3, #16, #8
 801136a:	9201      	str	r2, [sp, #4]
 801136c:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8011370:	9200      	str	r2, [sp, #0]
 8011372:	f890 1048 	ldrb.w	r1, [r0, #72]	; 0x48
 8011376:	4a06      	ldr	r2, [pc, #24]	; (8011390 <DisplayUdf::ShowNetmask()+0x38>)
 8011378:	b2db      	uxtb	r3, r3
 801137a:	f7f7 f9e9 	bl	8008750 <Display::Printf(unsigned char, char const*, ...)>
 801137e:	4620      	mov	r0, r4
 8011380:	b004      	add	sp, #16
 8011382:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011386:	f7ff bfb3 	b.w	80112f0 <DisplayUdf::ShowIpAddress()>
 801138a:	bf00      	nop
 801138c:	2001d348 	andcs	sp, r1, r8, asr #6
 8011390:	080175ad 	stmdaeq	r1, {r0, r2, r3, r5, r7, r8, sl, ip, sp, lr}

08011394 <DisplayUdf::ShowGatewayIp()>:
 8011394:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8011396:	4604      	mov	r4, r0
 8011398:	f890 104e 	ldrb.w	r1, [r0, #78]	; 0x4e
 801139c:	6980      	ldr	r0, [r0, #24]
 801139e:	f7ff ff53 	bl	8011248 <Display::ClearLine(unsigned char) [clone .isra.0]>
 80113a2:	4b0a      	ldr	r3, [pc, #40]	; (80113cc <DisplayUdf::ShowGatewayIp()+0x38>)
 80113a4:	4620      	mov	r0, r4
 80113a6:	681b      	ldr	r3, [r3, #0]
 80113a8:	f894 104e 	ldrb.w	r1, [r4, #78]	; 0x4e
 80113ac:	699b      	ldr	r3, [r3, #24]
 80113ae:	0e1a      	lsrs	r2, r3, #24
 80113b0:	9202      	str	r2, [sp, #8]
 80113b2:	f3c3 4207 	ubfx	r2, r3, #16, #8
 80113b6:	9201      	str	r2, [sp, #4]
 80113b8:	f3c3 2207 	ubfx	r2, r3, #8, #8
 80113bc:	9200      	str	r2, [sp, #0]
 80113be:	b2db      	uxtb	r3, r3
 80113c0:	4a03      	ldr	r2, [pc, #12]	; (80113d0 <DisplayUdf::ShowGatewayIp()+0x3c>)
 80113c2:	f7f7 f9c5 	bl	8008750 <Display::Printf(unsigned char, char const*, ...)>
 80113c6:	b004      	add	sp, #16
 80113c8:	bd10      	pop	{r4, pc}
 80113ca:	bf00      	nop
 80113cc:	2001d348 	andcs	sp, r1, r8, asr #6
 80113d0:	080175bc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r8, sl, ip, sp, lr}

080113d4 <DisplayUdf::ShowHostName()>:
 80113d4:	b510      	push	{r4, lr}
 80113d6:	4604      	mov	r4, r0
 80113d8:	f890 1043 	ldrb.w	r1, [r0, #67]	; 0x43
 80113dc:	6980      	ldr	r0, [r0, #24]
 80113de:	f7ff ff33 	bl	8011248 <Display::ClearLine(unsigned char) [clone .isra.0]>
 80113e2:	4b05      	ldr	r3, [pc, #20]	; (80113f8 <DisplayUdf::ShowHostName()+0x24>)
 80113e4:	f894 1043 	ldrb.w	r1, [r4, #67]	; 0x43
 80113e8:	681a      	ldr	r2, [r3, #0]
 80113ea:	69a0      	ldr	r0, [r4, #24]
 80113ec:	3220      	adds	r2, #32
 80113ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80113f2:	f7ff bf17 	b.w	8011224 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 80113f6:	bf00      	nop
 80113f8:	2001d348 	andcs	sp, r1, r8, asr #6

080113fc <DisplayUdf::Show()>:
 80113fc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80113fe:	4604      	mov	r4, r0
 8011400:	21ff      	movs	r1, #255	; 0xff
 8011402:	f100 033b 	add.w	r3, r0, #59	; 0x3b
 8011406:	f100 024f 	add.w	r2, r0, #79	; 0x4f
 801140a:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 801140e:	2806      	cmp	r0, #6
 8011410:	bf88      	it	hi
 8011412:	7019      	strbhi	r1, [r3, #0]
 8011414:	429a      	cmp	r2, r3
 8011416:	d1f8      	bne.n	801140a <DisplayUdf::Show()+0xe>
 8011418:	2501      	movs	r5, #1
 801141a:	4629      	mov	r1, r5
 801141c:	3501      	adds	r5, #1
 801141e:	69a0      	ldr	r0, [r4, #24]
 8011420:	b2ed      	uxtb	r5, r5
 8011422:	f7ff ff11 	bl	8011248 <Display::ClearLine(unsigned char) [clone .isra.0]>
 8011426:	2d06      	cmp	r5, #6
 8011428:	d1f7      	bne.n	801141a <DisplayUdf::Show()+0x1e>
 801142a:	f894 103c 	ldrb.w	r1, [r4, #60]	; 0x3c
 801142e:	69a0      	ldr	r0, [r4, #24]
 8011430:	f104 021c 	add.w	r2, r4, #28
 8011434:	f7ff fef6 	bl	8011224 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 8011438:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 801143c:	69a0      	ldr	r0, [r4, #24]
 801143e:	4a0d      	ldr	r2, [pc, #52]	; (8011474 <DisplayUdf::Show()+0x78>)
 8011440:	f7ff fef0 	bl	8011224 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 8011444:	4b0c      	ldr	r3, [pc, #48]	; (8011478 <DisplayUdf::Show()+0x7c>)
 8011446:	4a0d      	ldr	r2, [pc, #52]	; (801147c <DisplayUdf::Show()+0x80>)
 8011448:	f894 103f 	ldrb.w	r1, [r4, #63]	; 0x3f
 801144c:	9300      	str	r3, [sp, #0]
 801144e:	4620      	mov	r0, r4
 8011450:	2303      	movs	r3, #3
 8011452:	f7f7 f97d 	bl	8008750 <Display::Printf(unsigned char, char const*, ...)>
 8011456:	4620      	mov	r0, r4
 8011458:	f7ff ff4a 	bl	80112f0 <DisplayUdf::ShowIpAddress()>
 801145c:	4620      	mov	r0, r4
 801145e:	f7ff ff99 	bl	8011394 <DisplayUdf::ShowGatewayIp()>
 8011462:	4620      	mov	r0, r4
 8011464:	f7ff ff78 	bl	8011358 <DisplayUdf::ShowNetmask()>
 8011468:	4620      	mov	r0, r4
 801146a:	b003      	add	sp, #12
 801146c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8011470:	f7ff bfb0 	b.w	80113d4 <DisplayUdf::ShowHostName()>
 8011474:	0801551c 	stmdaeq	r1, {r2, r3, r4, r8, sl, ip, lr}
 8011478:	2001d9b0 			; <UNDEFINED> instruction: 0x2001d9b0
 801147c:	080175cb 	stmdaeq	r1, {r0, r1, r3, r6, r7, r8, sl, ip, sp, lr}

08011480 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)>:
 8011480:	3901      	subs	r1, #1
 8011482:	b510      	push	{r4, lr}
 8011484:	4604      	mov	r4, r0
 8011486:	2903      	cmp	r1, #3
 8011488:	d814      	bhi.n	80114b4 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x34>
 801148a:	e8df f001 	tbb	[pc, r1]
 801148e:	281b1402 	ldmdacs	fp, {r1, sl, ip}
 8011492:	4b14      	ldr	r3, [pc, #80]	; (80114e4 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 8011494:	f44f 41b6 	mov.w	r1, #23296	; 0x5b00
 8011498:	6818      	ldr	r0, [r3, #0]
 801149a:	f7f8 fb1d 	bl	8009ad8 <Display::Status(Display7SegmentMessage)>
 801149e:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 80114a2:	69a0      	ldr	r0, [r4, #24]
 80114a4:	f7ff fed0 	bl	8011248 <Display::ClearLine(unsigned char) [clone .isra.0]>
 80114a8:	4a0f      	ldr	r2, [pc, #60]	; (80114e8 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x68>)
 80114aa:	4620      	mov	r0, r4
 80114ac:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 80114b0:	f7f7 f94e 	bl	8008750 <Display::Printf(unsigned char, char const*, ...)>
 80114b4:	bd10      	pop	{r4, pc}
 80114b6:	f248 0180 	movw	r1, #32896	; 0x8080
 80114ba:	4b0a      	ldr	r3, [pc, #40]	; (80114e4 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 80114bc:	6818      	ldr	r0, [r3, #0]
 80114be:	f7f8 fb0b 	bl	8009ad8 <Display::Status(Display7SegmentMessage)>
 80114c2:	e7f7      	b.n	80114b4 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x34>
 80114c4:	4b07      	ldr	r3, [pc, #28]	; (80114e4 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 80114c6:	f44f 41b6 	mov.w	r1, #23296	; 0x5b00
 80114ca:	6818      	ldr	r0, [r3, #0]
 80114cc:	f7f8 fb04 	bl	8009ad8 <Display::Status(Display7SegmentMessage)>
 80114d0:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 80114d4:	69a0      	ldr	r0, [r4, #24]
 80114d6:	f7ff feb7 	bl	8011248 <Display::ClearLine(unsigned char) [clone .isra.0]>
 80114da:	4a04      	ldr	r2, [pc, #16]	; (80114ec <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x6c>)
 80114dc:	e7e5      	b.n	80114aa <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x2a>
 80114de:	f645 3179 	movw	r1, #23417	; 0x5b79
 80114e2:	e7ea      	b.n	80114ba <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x3a>
 80114e4:	2001d920 	andcs	sp, r1, r0, lsr #18
 80114e8:	080175da 	stmdaeq	r1, {r1, r3, r4, r6, r7, r8, sl, ip, sp, lr}
 80114ec:	080175e8 	stmdaeq	r1, {r3, r5, r6, r7, r8, sl, ip, sp, lr}

080114f0 <DisplayUdf::ShowShutdown()>:
 80114f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80114f4:	4604      	mov	r4, r0
 80114f6:	6980      	ldr	r0, [r0, #24]
 80114f8:	b1d0      	cbz	r0, 8011530 <DisplayUdf::ShowShutdown()+0x40>
 80114fa:	f890 8005 	ldrb.w	r8, [r0, #5]
 80114fe:	6803      	ldr	r3, [r0, #0]
 8011500:	f108 35ff 	add.w	r5, r8, #4294967295	; 0xffffffff
 8011504:	b2ed      	uxtb	r5, r5
 8011506:	462a      	mov	r2, r5
 8011508:	2100      	movs	r1, #0
 801150a:	6a1b      	ldr	r3, [r3, #32]
 801150c:	7906      	ldrb	r6, [r0, #4]
 801150e:	2700      	movs	r7, #0
 8011510:	4798      	blx	r3
 8011512:	3e01      	subs	r6, #1
 8011514:	42b7      	cmp	r7, r6
 8011516:	69a0      	ldr	r0, [r4, #24]
 8011518:	d311      	bcc.n	801153e <DisplayUdf::ShowShutdown()+0x4e>
 801151a:	b120      	cbz	r0, 8011526 <DisplayUdf::ShowShutdown()+0x36>
 801151c:	6803      	ldr	r3, [r0, #0]
 801151e:	462a      	mov	r2, r5
 8011520:	2100      	movs	r1, #0
 8011522:	6a1b      	ldr	r3, [r3, #32]
 8011524:	4798      	blx	r3
 8011526:	4641      	mov	r1, r8
 8011528:	4a08      	ldr	r2, [pc, #32]	; (801154c <DisplayUdf::ShowShutdown()+0x5c>)
 801152a:	69a0      	ldr	r0, [r4, #24]
 801152c:	f7ff fe7a 	bl	8011224 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 8011530:	f44f 41de 	mov.w	r1, #28416	; 0x6f00
 8011534:	4620      	mov	r0, r4
 8011536:	f7f8 facf 	bl	8009ad8 <Display::Status(Display7SegmentMessage)>
 801153a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801153e:	b118      	cbz	r0, 8011548 <DisplayUdf::ShowShutdown()+0x58>
 8011540:	6803      	ldr	r3, [r0, #0]
 8011542:	2120      	movs	r1, #32
 8011544:	695b      	ldr	r3, [r3, #20]
 8011546:	4798      	blx	r3
 8011548:	3701      	adds	r7, #1
 801154a:	e7e3      	b.n	8011514 <DisplayUdf::ShowShutdown()+0x24>
 801154c:	080175f6 	stmdaeq	r1, {r1, r2, r4, r5, r6, r7, r8, sl, ip, sp, lr}

08011550 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>:
 8011550:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8011552:	88c6      	ldrh	r6, [r0, #6]
 8011554:	8885      	ldrh	r5, [r0, #4]
 8011556:	42ae      	cmp	r6, r5
 8011558:	d216      	bcs.n	8011588 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x38>
 801155a:	4604      	mov	r4, r0
 801155c:	6800      	ldr	r0, [r0, #0]
 801155e:	1bad      	subs	r5, r5, r6
 8011560:	4430      	add	r0, r6
 8011562:	7a26      	ldrb	r6, [r4, #8]
 8011564:	b923      	cbnz	r3, 8011570 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x20>
 8011566:	b926      	cbnz	r6, 8011572 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x22>
 8011568:	9200      	str	r2, [sp, #0]
 801156a:	460b      	mov	r3, r1
 801156c:	4a09      	ldr	r2, [pc, #36]	; (8011594 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x44>)
 801156e:	e003      	b.n	8011578 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 8011570:	b166      	cbz	r6, 801158c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x3c>
 8011572:	460b      	mov	r3, r1
 8011574:	9200      	str	r2, [sp, #0]
 8011576:	4a08      	ldr	r2, [pc, #32]	; (8011598 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x48>)
 8011578:	4629      	mov	r1, r5
 801157a:	f7f8 f81f 	bl	80095bc <snprintf>
 801157e:	4285      	cmp	r5, r0
 8011580:	bfa2      	ittt	ge
 8011582:	88e3      	ldrhge	r3, [r4, #6]
 8011584:	181b      	addge	r3, r3, r0
 8011586:	80e3      	strhge	r3, [r4, #6]
 8011588:	b002      	add	sp, #8
 801158a:	bd70      	pop	{r4, r5, r6, pc}
 801158c:	9200      	str	r2, [sp, #0]
 801158e:	460b      	mov	r3, r1
 8011590:	4a02      	ldr	r2, [pc, #8]	; (801159c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x4c>)
 8011592:	e7f1      	b.n	8011578 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 8011594:	080151e9 	stmdaeq	r1, {r0, r3, r5, r6, r7, r8, ip, lr}
 8011598:	080151e0 	stmdaeq	r1, {r5, r6, r7, r8, ip, lr}
 801159c:	080151ea 	stmdaeq	r1, {r1, r3, r5, r6, r7, r8, ip, lr}

080115a0 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>:
 80115a0:	b510      	push	{r4, lr}
 80115a2:	2220      	movs	r2, #32
 80115a4:	4604      	mov	r4, r0
 80115a6:	f840 1b04 	str.w	r1, [r0], #4
 80115aa:	2100      	movs	r1, #0
 80115ac:	f001 f972 	bl	8012894 <memset>
 80115b0:	f647 7305 	movw	r3, #32517	; 0x7f05
 80115b4:	4620      	mov	r0, r4
 80115b6:	84a3      	strh	r3, [r4, #36]	; 0x24
 80115b8:	bd10      	pop	{r4, pc}

080115ba <DisplayUdfParams::Load()>:
 80115ba:	b508      	push	{r3, lr}
 80115bc:	2300      	movs	r3, #0
 80115be:	4601      	mov	r1, r0
 80115c0:	6043      	str	r3, [r0, #4]
 80115c2:	6800      	ldr	r0, [r0, #0]
 80115c4:	b120      	cbz	r0, 80115d0 <DisplayUdfParams::Load()+0x16>
 80115c6:	6803      	ldr	r3, [r0, #0]
 80115c8:	3104      	adds	r1, #4
 80115ca:	68db      	ldr	r3, [r3, #12]
 80115cc:	4798      	blx	r3
 80115ce:	2001      	movs	r0, #1
 80115d0:	bd08      	pop	{r3, pc}
	...

080115d4 <DisplayUdfParams::Load(char const*, unsigned int)>:
 80115d4:	6803      	ldr	r3, [r0, #0]
 80115d6:	b1d3      	cbz	r3, 801160e <DisplayUdfParams::Load(char const*, unsigned int)+0x3a>
 80115d8:	2300      	movs	r3, #0
 80115da:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80115dc:	460d      	mov	r5, r1
 80115de:	4616      	mov	r6, r2
 80115e0:	4604      	mov	r4, r0
 80115e2:	6043      	str	r3, [r0, #4]
 80115e4:	4602      	mov	r2, r0
 80115e6:	490a      	ldr	r1, [pc, #40]	; (8011610 <DisplayUdfParams::Load(char const*, unsigned int)+0x3c>)
 80115e8:	4668      	mov	r0, sp
 80115ea:	f000 facf 	bl	8011b8c <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 80115ee:	4632      	mov	r2, r6
 80115f0:	4629      	mov	r1, r5
 80115f2:	4668      	mov	r0, sp
 80115f4:	f000 face 	bl	8011b94 <ReadConfigFile::Read(char const*, unsigned int)>
 80115f8:	4621      	mov	r1, r4
 80115fa:	f851 0b04 	ldr.w	r0, [r1], #4
 80115fe:	6803      	ldr	r3, [r0, #0]
 8011600:	689b      	ldr	r3, [r3, #8]
 8011602:	4798      	blx	r3
 8011604:	4668      	mov	r0, sp
 8011606:	f000 fac4 	bl	8011b92 <ReadConfigFile::~ReadConfigFile()>
 801160a:	b002      	add	sp, #8
 801160c:	bd70      	pop	{r4, r5, r6, pc}
 801160e:	4770      	bx	lr
 8011610:	080116dd 	stmdaeq	r1, {r0, r2, r3, r4, r6, r7, r9, sl, ip}

08011614 <DisplayUdfParams::callbackFunction(char const*)>:
 8011614:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8011616:	460e      	mov	r6, r1
 8011618:	4604      	mov	r4, r0
 801161a:	492c      	ldr	r1, [pc, #176]	; (80116cc <DisplayUdfParams::callbackFunction(char const*)+0xb8>)
 801161c:	4630      	mov	r0, r6
 801161e:	f10d 0207 	add.w	r2, sp, #7
 8011622:	f000 fbef 	bl	8011e04 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8011626:	b968      	cbnz	r0, 8011644 <DisplayUdfParams::callbackFunction(char const*)+0x30>
 8011628:	f89d 2007 	ldrb.w	r2, [sp, #7]
 801162c:	6863      	ldr	r3, [r4, #4]
 801162e:	2a7f      	cmp	r2, #127	; 0x7f
 8011630:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
 8011634:	bf14      	ite	ne
 8011636:	f043 5300 	orrne.w	r3, r3, #536870912	; 0x20000000
 801163a:	f023 5300 	biceq.w	r3, r3, #536870912	; 0x20000000
 801163e:	6063      	str	r3, [r4, #4]
 8011640:	b003      	add	sp, #12
 8011642:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011644:	4630      	mov	r0, r6
 8011646:	4922      	ldr	r1, [pc, #136]	; (80116d0 <DisplayUdfParams::callbackFunction(char const*)+0xbc>)
 8011648:	f10d 0207 	add.w	r2, sp, #7
 801164c:	f000 fbda 	bl	8011e04 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8011650:	b958      	cbnz	r0, 801166a <DisplayUdfParams::callbackFunction(char const*)+0x56>
 8011652:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8011656:	6863      	ldr	r3, [r4, #4]
 8011658:	2a05      	cmp	r2, #5
 801165a:	f884 2024 	strb.w	r2, [r4, #36]	; 0x24
 801165e:	bf14      	ite	ne
 8011660:	f043 5380 	orrne.w	r3, r3, #268435456	; 0x10000000
 8011664:	f023 5380 	biceq.w	r3, r3, #268435456	; 0x10000000
 8011668:	e7e9      	b.n	801163e <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 801166a:	4630      	mov	r0, r6
 801166c:	4919      	ldr	r1, [pc, #100]	; (80116d4 <DisplayUdfParams::callbackFunction(char const*)+0xc0>)
 801166e:	f10d 0207 	add.w	r2, sp, #7
 8011672:	f000 fbc7 	bl	8011e04 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8011676:	b948      	cbnz	r0, 801168c <DisplayUdfParams::callbackFunction(char const*)+0x78>
 8011678:	f89d 2007 	ldrb.w	r2, [sp, #7]
 801167c:	6863      	ldr	r3, [r4, #4]
 801167e:	b112      	cbz	r2, 8011686 <DisplayUdfParams::callbackFunction(char const*)+0x72>
 8011680:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8011684:	e7db      	b.n	801163e <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 8011686:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 801168a:	e7d8      	b.n	801163e <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 801168c:	2500      	movs	r5, #0
 801168e:	4f12      	ldr	r7, [pc, #72]	; (80116d8 <DisplayUdfParams::callbackFunction(char const*)+0xc4>)
 8011690:	4630      	mov	r0, r6
 8011692:	f857 1b04 	ldr.w	r1, [r7], #4
 8011696:	f10d 0207 	add.w	r2, sp, #7
 801169a:	f000 fbb3 	bl	8011e04 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 801169e:	b980      	cbnz	r0, 80116c2 <DisplayUdfParams::callbackFunction(char const*)+0xae>
 80116a0:	2301      	movs	r3, #1
 80116a2:	f89d 1007 	ldrb.w	r1, [sp, #7]
 80116a6:	40ab      	lsls	r3, r5
 80116a8:	1e4e      	subs	r6, r1, #1
 80116aa:	2e05      	cmp	r6, #5
 80116ac:	6862      	ldr	r2, [r4, #4]
 80116ae:	4425      	add	r5, r4
 80116b0:	d802      	bhi.n	80116b8 <DisplayUdfParams::callbackFunction(char const*)+0xa4>
 80116b2:	7229      	strb	r1, [r5, #8]
 80116b4:	4313      	orrs	r3, r2
 80116b6:	e7c2      	b.n	801163e <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 80116b8:	ea22 0203 	bic.w	r2, r2, r3
 80116bc:	7228      	strb	r0, [r5, #8]
 80116be:	6062      	str	r2, [r4, #4]
 80116c0:	e7be      	b.n	8011640 <DisplayUdfParams::callbackFunction(char const*)+0x2c>
 80116c2:	3501      	adds	r5, #1
 80116c4:	2d14      	cmp	r5, #20
 80116c6:	d1e3      	bne.n	8011690 <DisplayUdfParams::callbackFunction(char const*)+0x7c>
 80116c8:	e7ba      	b.n	8011640 <DisplayUdfParams::callbackFunction(char const*)+0x2c>
 80116ca:	bf00      	nop
 80116cc:	080176b6 	stmdaeq	r1, {r1, r2, r4, r5, r7, r9, sl, ip, sp, lr}
 80116d0:	0801767e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r9, sl, ip, sp, lr}
 80116d4:	0801768c 	stmdaeq	r1, {r2, r3, r7, r9, sl, ip, sp, lr}
 80116d8:	08017608 	stmdaeq	r1, {r3, r9, sl, ip, sp, lr}

080116dc <DisplayUdfParams::staticCallbackFunction(void*, char const*)>:
 80116dc:	f7ff bf9a 	b.w	8011614 <DisplayUdfParams::callbackFunction(char const*)>

080116e0 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)>:
 80116e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80116e4:	4604      	mov	r4, r0
 80116e6:	4615      	mov	r5, r2
 80116e8:	461e      	mov	r6, r3
 80116ea:	b086      	sub	sp, #24
 80116ec:	3004      	adds	r0, #4
 80116ee:	b379      	cbz	r1, 8011750 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x70>
 80116f0:	2222      	movs	r2, #34	; 0x22
 80116f2:	f001 f8b8 	bl	8012866 <memmove>
 80116f6:	462a      	mov	r2, r5
 80116f8:	4633      	mov	r3, r6
 80116fa:	493d      	ldr	r1, [pc, #244]	; (80117f0 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x110>)
 80116fc:	a803      	add	r0, sp, #12
 80116fe:	f000 f9a5 	bl	8011a4c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 8011702:	6863      	ldr	r3, [r4, #4]
 8011704:	f894 2025 	ldrb.w	r2, [r4, #37]	; 0x25
 8011708:	493a      	ldr	r1, [pc, #232]	; (80117f4 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x114>)
 801170a:	f3c3 7340 	ubfx	r3, r3, #29, #1
 801170e:	a803      	add	r0, sp, #12
 8011710:	f7ff ff1e 	bl	8011550 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 8011714:	6863      	ldr	r3, [r4, #4]
 8011716:	f894 2024 	ldrb.w	r2, [r4, #36]	; 0x24
 801171a:	f3c3 7300 	ubfx	r3, r3, #28, #1
 801171e:	4936      	ldr	r1, [pc, #216]	; (80117f8 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x118>)
 8011720:	a803      	add	r0, sp, #12
 8011722:	f7ff ff15 	bl	8011550 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 8011726:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801172a:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 801172e:	6863      	ldr	r3, [r4, #4]
 8011730:	42aa      	cmp	r2, r5
 8011732:	d226      	bcs.n	8011782 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xa2>
 8011734:	9803      	ldr	r0, [sp, #12]
 8011736:	f013 4380 	ands.w	r3, r3, #1073741824	; 0x40000000
 801173a:	4410      	add	r0, r2
 801173c:	eba5 0502 	sub.w	r5, r5, r2
 8011740:	f89d 2014 	ldrb.w	r2, [sp, #20]
 8011744:	d10b      	bne.n	801175e <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x7e>
 8011746:	b962      	cbnz	r2, 8011762 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x82>
 8011748:	9200      	str	r2, [sp, #0]
 801174a:	4b2c      	ldr	r3, [pc, #176]	; (80117fc <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>)
 801174c:	4a2c      	ldr	r2, [pc, #176]	; (8011800 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x120>)
 801174e:	e00e      	b.n	801176e <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x8e>
 8011750:	6823      	ldr	r3, [r4, #0]
 8011752:	4601      	mov	r1, r0
 8011754:	681a      	ldr	r2, [r3, #0]
 8011756:	4618      	mov	r0, r3
 8011758:	68d2      	ldr	r2, [r2, #12]
 801175a:	4790      	blx	r2
 801175c:	e7cb      	b.n	80116f6 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x16>
 801175e:	2a00      	cmp	r2, #0
 8011760:	d041      	beq.n	80117e6 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x106>
 8011762:	3b00      	subs	r3, #0
 8011764:	bf18      	it	ne
 8011766:	2301      	movne	r3, #1
 8011768:	4a26      	ldr	r2, [pc, #152]	; (8011804 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x124>)
 801176a:	9300      	str	r3, [sp, #0]
 801176c:	4b23      	ldr	r3, [pc, #140]	; (80117fc <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>)
 801176e:	4629      	mov	r1, r5
 8011770:	f7f7 ff24 	bl	80095bc <snprintf>
 8011774:	4285      	cmp	r5, r0
 8011776:	bfa2      	ittt	ge
 8011778:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 801177c:	181b      	addge	r3, r3, r0
 801177e:	f8ad 3012 	strhge.w	r3, [sp, #18]
 8011782:	2500      	movs	r5, #0
 8011784:	2701      	movs	r7, #1
 8011786:	4e20      	ldr	r6, [pc, #128]	; (8011808 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x128>)
 8011788:	f104 0808 	add.w	r8, r4, #8
 801178c:	f856 1b04 	ldr.w	r1, [r6], #4
 8011790:	780b      	ldrb	r3, [r1, #0]
 8011792:	b15b      	cbz	r3, 80117ac <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xcc>
 8011794:	6862      	ldr	r2, [r4, #4]
 8011796:	fa07 f305 	lsl.w	r3, r7, r5
 801179a:	4393      	bics	r3, r2
 801179c:	bf0c      	ite	eq
 801179e:	2301      	moveq	r3, #1
 80117a0:	2300      	movne	r3, #0
 80117a2:	f818 2005 	ldrb.w	r2, [r8, r5]
 80117a6:	a803      	add	r0, sp, #12
 80117a8:	f7ff fed2 	bl	8011550 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 80117ac:	3501      	adds	r5, #1
 80117ae:	2d14      	cmp	r5, #20
 80117b0:	d1ec      	bne.n	801178c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xac>
 80117b2:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80117b6:	b17b      	cbz	r3, 80117d8 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xf8>
 80117b8:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80117bc:	9b03      	ldr	r3, [sp, #12]
 80117be:	4413      	add	r3, r2
 80117c0:	227d      	movs	r2, #125	; 0x7d
 80117c2:	f803 2c01 	strb.w	r2, [r3, #-1]
 80117c6:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80117ca:	9903      	ldr	r1, [sp, #12]
 80117cc:	54ca      	strb	r2, [r1, r3]
 80117ce:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80117d2:	3301      	adds	r3, #1
 80117d4:	f8ad 3012 	strh.w	r3, [sp, #18]
 80117d8:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80117dc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80117de:	601a      	str	r2, [r3, #0]
 80117e0:	b006      	add	sp, #24
 80117e2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80117e6:	2301      	movs	r3, #1
 80117e8:	4a08      	ldr	r2, [pc, #32]	; (801180c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x12c>)
 80117ea:	9300      	str	r3, [sp, #0]
 80117ec:	4b03      	ldr	r3, [pc, #12]	; (80117fc <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>)
 80117ee:	e7be      	b.n	801176e <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x8e>
 80117f0:	080176aa 	stmdaeq	r1, {r1, r3, r5, r7, r9, sl, ip, sp, lr}
 80117f4:	080176b6 	stmdaeq	r1, {r1, r2, r4, r5, r7, r9, sl, ip, sp, lr}
 80117f8:	0801767e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r9, sl, ip, sp, lr}
 80117fc:	0801768c 	stmdaeq	r1, {r2, r3, r7, r9, sl, ip, sp, lr}
 8011800:	080151e9 	stmdaeq	r1, {r0, r3, r5, r6, r7, r8, ip, lr}
 8011804:	080151e0 	stmdaeq	r1, {r5, r6, r7, r8, ip, lr}
 8011808:	08017608 	stmdaeq	r1, {r3, r9, sl, ip, sp, lr}
 801180c:	080151ea 	stmdaeq	r1, {r1, r3, r5, r6, r7, r8, ip, lr}

08011810 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)>:
 8011810:	b513      	push	{r0, r1, r4, lr}
 8011812:	6804      	ldr	r4, [r0, #0]
 8011814:	b914      	cbnz	r4, 801181c <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)+0xc>
 8011816:	601c      	str	r4, [r3, #0]
 8011818:	b002      	add	sp, #8
 801181a:	bd10      	pop	{r4, pc}
 801181c:	9300      	str	r3, [sp, #0]
 801181e:	4613      	mov	r3, r2
 8011820:	460a      	mov	r2, r1
 8011822:	2100      	movs	r1, #0
 8011824:	f7ff ff5c 	bl	80116e0 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)>
 8011828:	e7f6      	b.n	8011818 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)+0x8>

0801182a <DisplayUdfParams::Set(DisplayUdf*)>:
 801182a:	6843      	ldr	r3, [r0, #4]
 801182c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011830:	009a      	lsls	r2, r3, #2
 8011832:	4604      	mov	r4, r0
 8011834:	460e      	mov	r6, r1
 8011836:	d506      	bpl.n	8011846 <DisplayUdfParams::Set(DisplayUdf*)+0x1c>
 8011838:	6988      	ldr	r0, [r1, #24]
 801183a:	b120      	cbz	r0, 8011846 <DisplayUdfParams::Set(DisplayUdf*)+0x1c>
 801183c:	6803      	ldr	r3, [r0, #0]
 801183e:	f894 1025 	ldrb.w	r1, [r4, #37]	; 0x25
 8011842:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011844:	4798      	blx	r3
 8011846:	6863      	ldr	r3, [r4, #4]
 8011848:	69b0      	ldr	r0, [r6, #24]
 801184a:	00db      	lsls	r3, r3, #3
 801184c:	bf41      	itttt	mi
 801184e:	f64e 2260 	movwmi	r2, #60000	; 0xea60
 8011852:	f894 3024 	ldrbmi.w	r3, [r4, #36]	; 0x24
 8011856:	4353      	mulmi	r3, r2
 8011858:	6173      	strmi	r3, [r6, #20]
 801185a:	6861      	ldr	r1, [r4, #4]
 801185c:	f3c1 7180 	ubfx	r1, r1, #30, #1
 8011860:	b110      	cbz	r0, 8011868 <DisplayUdfParams::Set(DisplayUdf*)+0x3e>
 8011862:	6803      	ldr	r3, [r0, #0]
 8011864:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011866:	4798      	blx	r3
 8011868:	2500      	movs	r5, #0
 801186a:	2701      	movs	r7, #1
 801186c:	f104 0808 	add.w	r8, r4, #8
 8011870:	6862      	ldr	r2, [r4, #4]
 8011872:	fa07 f305 	lsl.w	r3, r7, r5
 8011876:	4393      	bics	r3, r2
 8011878:	d105      	bne.n	8011886 <DisplayUdfParams::Set(DisplayUdf*)+0x5c>
 801187a:	462a      	mov	r2, r5
 801187c:	4630      	mov	r0, r6
 801187e:	f818 1005 	ldrb.w	r1, [r8, r5]
 8011882:	f7ff fd0c 	bl	801129e <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8011886:	3501      	adds	r5, #1
 8011888:	2d14      	cmp	r5, #20
 801188a:	d1f1      	bne.n	8011870 <DisplayUdfParams::Set(DisplayUdf*)+0x46>
 801188c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08011890 <DisplayUdfParams::Dump()>:
 8011890:	4770      	bx	lr
	...

08011894 <NetworkDisplay::ShowEmacStart()>:
 8011894:	4b01      	ldr	r3, [pc, #4]	; (801189c <NetworkDisplay::ShowEmacStart()+0x8>)
 8011896:	6818      	ldr	r0, [r3, #0]
 8011898:	f7ff bd1a 	b.w	80112d0 <DisplayUdf::ShowEmacStart()>
 801189c:	2001d918 	andcs	sp, r1, r8, lsl r9

080118a0 <NetworkDisplay::ShowIp()>:
 80118a0:	4b01      	ldr	r3, [pc, #4]	; (80118a8 <NetworkDisplay::ShowIp()+0x8>)
 80118a2:	6818      	ldr	r0, [r3, #0]
 80118a4:	f7ff bd24 	b.w	80112f0 <DisplayUdf::ShowIpAddress()>
 80118a8:	2001d918 	andcs	sp, r1, r8, lsl r9

080118ac <NetworkDisplay::ShowNetMask()>:
 80118ac:	4b01      	ldr	r3, [pc, #4]	; (80118b4 <NetworkDisplay::ShowNetMask()+0x8>)
 80118ae:	6818      	ldr	r0, [r3, #0]
 80118b0:	f7ff bd52 	b.w	8011358 <DisplayUdf::ShowNetmask()>
 80118b4:	2001d918 	andcs	sp, r1, r8, lsl r9

080118b8 <NetworkDisplay::ShowGatewayIp()>:
 80118b8:	4b01      	ldr	r3, [pc, #4]	; (80118c0 <NetworkDisplay::ShowGatewayIp()+0x8>)
 80118ba:	6818      	ldr	r0, [r3, #0]
 80118bc:	f7ff bd6a 	b.w	8011394 <DisplayUdf::ShowGatewayIp()>
 80118c0:	2001d918 	andcs	sp, r1, r8, lsl r9

080118c4 <NetworkDisplay::ShowHostName()>:
 80118c4:	4b01      	ldr	r3, [pc, #4]	; (80118cc <NetworkDisplay::ShowHostName()+0x8>)
 80118c6:	6818      	ldr	r0, [r3, #0]
 80118c8:	f7ff bd84 	b.w	80113d4 <DisplayUdf::ShowHostName()>
 80118cc:	2001d918 	andcs	sp, r1, r8, lsl r9

080118d0 <NetworkDisplay::ShowShutdown()>:
 80118d0:	4b01      	ldr	r3, [pc, #4]	; (80118d8 <NetworkDisplay::ShowShutdown()+0x8>)
 80118d2:	6818      	ldr	r0, [r3, #0]
 80118d4:	f7ff be0c 	b.w	80114f0 <DisplayUdf::ShowShutdown()>
 80118d8:	2001d918 	andcs	sp, r1, r8, lsl r9

080118dc <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>:
 80118dc:	4b01      	ldr	r3, [pc, #4]	; (80118e4 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)+0x8>)
 80118de:	6818      	ldr	r0, [r3, #0]
 80118e0:	f7ff bdce 	b.w	8011480 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)>
 80118e4:	2001d918 	andcs	sp, r1, r8, lsl r9

080118e8 <properties::convert_json_file(char*, unsigned short, bool)>:
 80118e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80118ec:	4603      	mov	r3, r0
 80118ee:	7800      	ldrb	r0, [r0, #0]
 80118f0:	287b      	cmp	r0, #123	; 0x7b
 80118f2:	f040 80a2 	bne.w	8011a3a <properties::convert_json_file(char*, unsigned short, bool)+0x152>
 80118f6:	b17a      	cbz	r2, 8011918 <properties::convert_json_file(char*, unsigned short, bool)+0x30>
 80118f8:	2401      	movs	r4, #1
 80118fa:	461e      	mov	r6, r3
 80118fc:	4620      	mov	r0, r4
 80118fe:	2a00      	cmp	r2, #0
 8011900:	bf0c      	ite	eq
 8011902:	f04f 0c0a 	moveq.w	ip, #10
 8011906:	f04f 0c00 	movne.w	ip, #0
 801190a:	273d      	movs	r7, #61	; 0x3d
 801190c:	42a1      	cmp	r1, r4
 801190e:	d850      	bhi.n	80119b2 <properties::convert_json_file(char*, unsigned short, bool)+0xca>
 8011910:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011914:	463c      	mov	r4, r7
 8011916:	e7f2      	b.n	80118fe <properties::convert_json_file(char*, unsigned short, bool)+0x16>
 8011918:	2023      	movs	r0, #35	; 0x23
 801191a:	f803 0b01 	strb.w	r0, [r3], #1
 801191e:	461c      	mov	r4, r3
 8011920:	2701      	movs	r7, #1
 8011922:	42b9      	cmp	r1, r7
 8011924:	d811      	bhi.n	801194a <properties::convert_json_file(char*, unsigned short, bool)+0x62>
 8011926:	2001      	movs	r0, #1
 8011928:	461e      	mov	r6, r3
 801192a:	230a      	movs	r3, #10
 801192c:	4625      	mov	r5, r4
 801192e:	f806 3b01 	strb.w	r3, [r6], #1
 8011932:	3001      	adds	r0, #1
 8011934:	462b      	mov	r3, r5
 8011936:	781c      	ldrb	r4, [r3, #0]
 8011938:	3501      	adds	r5, #1
 801193a:	2c7b      	cmp	r4, #123	; 0x7b
 801193c:	d0ea      	beq.n	8011914 <properties::convert_json_file(char*, unsigned short, bool)+0x2c>
 801193e:	42b9      	cmp	r1, r7
 8011940:	f107 0401 	add.w	r4, r7, #1
 8011944:	d9db      	bls.n	80118fe <properties::convert_json_file(char*, unsigned short, bool)+0x16>
 8011946:	4627      	mov	r7, r4
 8011948:	e7f4      	b.n	8011934 <properties::convert_json_file(char*, unsigned short, bool)+0x4c>
 801194a:	f814 0b01 	ldrb.w	r0, [r4], #1
 801194e:	2822      	cmp	r0, #34	; 0x22
 8011950:	d119      	bne.n	8011986 <properties::convert_json_file(char*, unsigned short, bool)+0x9e>
 8011952:	46a4      	mov	ip, r4
 8011954:	461d      	mov	r5, r3
 8011956:	2601      	movs	r6, #1
 8011958:	f89c e000 	ldrb.w	lr, [ip]
 801195c:	4664      	mov	r4, ip
 801195e:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 8011962:	462b      	mov	r3, r5
 8011964:	4630      	mov	r0, r6
 8011966:	f10c 0c01 	add.w	ip, ip, #1
 801196a:	f105 0501 	add.w	r5, r5, #1
 801196e:	f106 0601 	add.w	r6, r6, #1
 8011972:	d0d9      	beq.n	8011928 <properties::convert_json_file(char*, unsigned short, bool)+0x40>
 8011974:	3701      	adds	r7, #1
 8011976:	42b9      	cmp	r1, r7
 8011978:	4664      	mov	r4, ip
 801197a:	f805 ec01 	strb.w	lr, [r5, #-1]
 801197e:	d8eb      	bhi.n	8011958 <properties::convert_json_file(char*, unsigned short, bool)+0x70>
 8011980:	4630      	mov	r0, r6
 8011982:	462b      	mov	r3, r5
 8011984:	e7d0      	b.n	8011928 <properties::convert_json_file(char*, unsigned short, bool)+0x40>
 8011986:	3701      	adds	r7, #1
 8011988:	e7cb      	b.n	8011922 <properties::convert_json_file(char*, unsigned short, bool)+0x3a>
 801198a:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 801198e:	d110      	bne.n	80119b2 <properties::convert_json_file(char*, unsigned short, bool)+0xca>
 8011990:	eba0 0803 	sub.w	r8, r0, r3
 8011994:	461a      	mov	r2, r3
 8011996:	eb08 0003 	add.w	r0, r8, r3
 801199a:	f813 eb01 	ldrb.w	lr, [r3], #1
 801199e:	1c65      	adds	r5, r4, #1
 80119a0:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 80119a4:	d04c      	beq.n	8011a40 <properties::convert_json_file(char*, unsigned short, bool)+0x158>
 80119a6:	42a1      	cmp	r1, r4
 80119a8:	d911      	bls.n	80119ce <properties::convert_json_file(char*, unsigned short, bool)+0xe6>
 80119aa:	462c      	mov	r4, r5
 80119ac:	f806 eb01 	strb.w	lr, [r6], #1
 80119b0:	e7f0      	b.n	8011994 <properties::convert_json_file(char*, unsigned short, bool)+0xac>
 80119b2:	42a1      	cmp	r1, r4
 80119b4:	461d      	mov	r5, r3
 80119b6:	f893 e000 	ldrb.w	lr, [r3]
 80119ba:	f104 0401 	add.w	r4, r4, #1
 80119be:	f103 0301 	add.w	r3, r3, #1
 80119c2:	d8e2      	bhi.n	801198a <properties::convert_json_file(char*, unsigned short, bool)+0xa2>
 80119c4:	462b      	mov	r3, r5
 80119c6:	e7e3      	b.n	8011990 <properties::convert_json_file(char*, unsigned short, bool)+0xa8>
 80119c8:	f1be 0f3a 	cmp.w	lr, #58	; 0x3a
 80119cc:	d009      	beq.n	80119e2 <properties::convert_json_file(char*, unsigned short, bool)+0xfa>
 80119ce:	42a9      	cmp	r1, r5
 80119d0:	4614      	mov	r4, r2
 80119d2:	f892 e000 	ldrb.w	lr, [r2]
 80119d6:	f105 0501 	add.w	r5, r5, #1
 80119da:	f102 0201 	add.w	r2, r2, #1
 80119de:	d8f3      	bhi.n	80119c8 <properties::convert_json_file(char*, unsigned short, bool)+0xe0>
 80119e0:	4622      	mov	r2, r4
 80119e2:	7814      	ldrb	r4, [r2, #0]
 80119e4:	4696      	mov	lr, r2
 80119e6:	2c2f      	cmp	r4, #47	; 0x2f
 80119e8:	462b      	mov	r3, r5
 80119ea:	f102 0201 	add.w	r2, r2, #1
 80119ee:	f105 0501 	add.w	r5, r5, #1
 80119f2:	d81a      	bhi.n	8011a2a <properties::convert_json_file(char*, unsigned short, bool)+0x142>
 80119f4:	4299      	cmp	r1, r3
 80119f6:	d8f4      	bhi.n	80119e2 <properties::convert_json_file(char*, unsigned short, bool)+0xfa>
 80119f8:	2c22      	cmp	r4, #34	; 0x22
 80119fa:	bf08      	it	eq
 80119fc:	4696      	moveq	lr, r2
 80119fe:	4673      	mov	r3, lr
 8011a00:	f813 2b01 	ldrb.w	r2, [r3], #1
 8011a04:	1c6c      	adds	r4, r5, #1
 8011a06:	2a22      	cmp	r2, #34	; 0x22
 8011a08:	d011      	beq.n	8011a2e <properties::convert_json_file(char*, unsigned short, bool)+0x146>
 8011a0a:	2a2c      	cmp	r2, #44	; 0x2c
 8011a0c:	d00f      	beq.n	8011a2e <properties::convert_json_file(char*, unsigned short, bool)+0x146>
 8011a0e:	2a7d      	cmp	r2, #125	; 0x7d
 8011a10:	d00d      	beq.n	8011a2e <properties::convert_json_file(char*, unsigned short, bool)+0x146>
 8011a12:	42a9      	cmp	r1, r5
 8011a14:	d90f      	bls.n	8011a36 <properties::convert_json_file(char*, unsigned short, bool)+0x14e>
 8011a16:	f1a2 0520 	sub.w	r5, r2, #32
 8011a1a:	2d5a      	cmp	r5, #90	; 0x5a
 8011a1c:	d803      	bhi.n	8011a26 <properties::convert_json_file(char*, unsigned short, bool)+0x13e>
 8011a1e:	469e      	mov	lr, r3
 8011a20:	f806 2b01 	strb.w	r2, [r6], #1
 8011a24:	3001      	adds	r0, #1
 8011a26:	4625      	mov	r5, r4
 8011a28:	e7e9      	b.n	80119fe <properties::convert_json_file(char*, unsigned short, bool)+0x116>
 8011a2a:	461d      	mov	r5, r3
 8011a2c:	e7e7      	b.n	80119fe <properties::convert_json_file(char*, unsigned short, bool)+0x116>
 8011a2e:	462c      	mov	r4, r5
 8011a30:	f806 cb01 	strb.w	ip, [r6], #1
 8011a34:	3001      	adds	r0, #1
 8011a36:	3401      	adds	r4, #1
 8011a38:	e768      	b.n	801190c <properties::convert_json_file(char*, unsigned short, bool)+0x24>
 8011a3a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8011a3e:	e767      	b.n	8011910 <properties::convert_json_file(char*, unsigned short, bool)+0x28>
 8011a40:	4625      	mov	r5, r4
 8011a42:	f806 7b01 	strb.w	r7, [r6], #1
 8011a46:	3001      	adds	r0, #1
 8011a48:	e7c1      	b.n	80119ce <properties::convert_json_file(char*, unsigned short, bool)+0xe6>
	...

08011a4c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>:
 8011a4c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8011a50:	6002      	str	r2, [r0, #0]
 8011a52:	4614      	mov	r4, r2
 8011a54:	2200      	movs	r2, #0
 8011a56:	80c2      	strh	r2, [r0, #6]
 8011a58:	4a1c      	ldr	r2, [pc, #112]	; (8011acc <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x80>)
 8011a5a:	4606      	mov	r6, r0
 8011a5c:	7812      	ldrb	r2, [r2, #0]
 8011a5e:	8083      	strh	r3, [r0, #4]
 8011a60:	f002 0201 	and.w	r2, r2, #1
 8011a64:	7202      	strb	r2, [r0, #8]
 8011a66:	4608      	mov	r0, r1
 8011a68:	4605      	mov	r5, r0
 8011a6a:	782f      	ldrb	r7, [r5, #0]
 8011a6c:	3001      	adds	r0, #1
 8011a6e:	2f00      	cmp	r7, #0
 8011a70:	d1fa      	bne.n	8011a68 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x1c>
 8011a72:	1a6d      	subs	r5, r5, r1
 8011a74:	b29b      	uxth	r3, r3
 8011a76:	b1d2      	cbz	r2, 8011aae <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x62>
 8011a78:	1d2f      	adds	r7, r5, #4
 8011a7a:	429f      	cmp	r7, r3
 8011a7c:	d814      	bhi.n	8011aa8 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 8011a7e:	f04f 087b 	mov.w	r8, #123	; 0x7b
 8011a82:	f04f 0922 	mov.w	r9, #34	; 0x22
 8011a86:	462a      	mov	r2, r5
 8011a88:	f884 8000 	strb.w	r8, [r4]
 8011a8c:	f884 9001 	strb.w	r9, [r4, #1]
 8011a90:	1ca0      	adds	r0, r4, #2
 8011a92:	f000 fee8 	bl	8012866 <memmove>
 8011a96:	223a      	movs	r2, #58	; 0x3a
 8011a98:	1963      	adds	r3, r4, r5
 8011a9a:	3505      	adds	r5, #5
 8011a9c:	f883 9002 	strb.w	r9, [r3, #2]
 8011aa0:	70da      	strb	r2, [r3, #3]
 8011aa2:	80f5      	strh	r5, [r6, #6]
 8011aa4:	f804 8007 	strb.w	r8, [r4, r7]
 8011aa8:	4630      	mov	r0, r6
 8011aaa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8011aae:	1caf      	adds	r7, r5, #2
 8011ab0:	429f      	cmp	r7, r3
 8011ab2:	d8f9      	bhi.n	8011aa8 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 8011ab4:	4620      	mov	r0, r4
 8011ab6:	2323      	movs	r3, #35	; 0x23
 8011ab8:	462a      	mov	r2, r5
 8011aba:	f800 3b01 	strb.w	r3, [r0], #1
 8011abe:	f000 fed2 	bl	8012866 <memmove>
 8011ac2:	230a      	movs	r3, #10
 8011ac4:	442c      	add	r4, r5
 8011ac6:	7063      	strb	r3, [r4, #1]
 8011ac8:	80f7      	strh	r7, [r6, #6]
 8011aca:	e7ed      	b.n	8011aa8 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 8011acc:	2001d91c 	andcs	sp, r1, ip, lsl r9

08011ad0 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>:
 8011ad0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011ad2:	469c      	mov	ip, r3
 8011ad4:	8885      	ldrh	r5, [r0, #4]
 8011ad6:	88c3      	ldrh	r3, [r0, #6]
 8011ad8:	b085      	sub	sp, #20
 8011ada:	42ab      	cmp	r3, r5
 8011adc:	d302      	bcc.n	8011ae4 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x14>
 8011ade:	2000      	movs	r0, #0
 8011ae0:	b005      	add	sp, #20
 8011ae2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011ae4:	4604      	mov	r4, r0
 8011ae6:	6800      	ldr	r0, [r0, #0]
 8011ae8:	1aed      	subs	r5, r5, r3
 8011aea:	4418      	add	r0, r3
 8011aec:	b2d6      	uxtb	r6, r2
 8011aee:	f3c2 2707 	ubfx	r7, r2, #8, #8
 8011af2:	f3c2 4307 	ubfx	r3, r2, #16, #8
 8011af6:	f894 e008 	ldrb.w	lr, [r4, #8]
 8011afa:	0e12      	lsrs	r2, r2, #24
 8011afc:	f1bc 0f00 	cmp.w	ip, #0
 8011b00:	d109      	bne.n	8011b16 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x46>
 8011b02:	f1be 0f00 	cmp.w	lr, #0
 8011b06:	d109      	bne.n	8011b1c <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x4c>
 8011b08:	e9cd 3202 	strd	r3, r2, [sp, #8]
 8011b0c:	e9cd 6700 	strd	r6, r7, [sp]
 8011b10:	460b      	mov	r3, r1
 8011b12:	4a0e      	ldr	r2, [pc, #56]	; (8011b4c <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x7c>)
 8011b14:	e008      	b.n	8011b28 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x58>
 8011b16:	f1be 0f00 	cmp.w	lr, #0
 8011b1a:	d00f      	beq.n	8011b3c <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x6c>
 8011b1c:	e9cd 3202 	strd	r3, r2, [sp, #8]
 8011b20:	460b      	mov	r3, r1
 8011b22:	e9cd 6700 	strd	r6, r7, [sp]
 8011b26:	4a0a      	ldr	r2, [pc, #40]	; (8011b50 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x80>)
 8011b28:	4629      	mov	r1, r5
 8011b2a:	f7f7 fd47 	bl	80095bc <snprintf>
 8011b2e:	4285      	cmp	r5, r0
 8011b30:	dbd5      	blt.n	8011ade <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0xe>
 8011b32:	88e3      	ldrh	r3, [r4, #6]
 8011b34:	4403      	add	r3, r0
 8011b36:	80e3      	strh	r3, [r4, #6]
 8011b38:	2001      	movs	r0, #1
 8011b3a:	e7d1      	b.n	8011ae0 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x10>
 8011b3c:	e9cd 3202 	strd	r3, r2, [sp, #8]
 8011b40:	e9cd 6700 	strd	r6, r7, [sp]
 8011b44:	460b      	mov	r3, r1
 8011b46:	4a03      	ldr	r2, [pc, #12]	; (8011b54 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x84>)
 8011b48:	e7ee      	b.n	8011b28 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x58>
 8011b4a:	bf00      	nop
 8011b4c:	08017779 	stmdaeq	r1, {r0, r3, r4, r5, r6, r8, r9, sl, ip, sp, lr}
 8011b50:	08017765 	stmdaeq	r1, {r0, r2, r5, r6, r8, r9, sl, ip, sp, lr}
 8011b54:	0801777a 	stmdaeq	r1, {r1, r3, r4, r5, r6, r8, r9, sl, ip, sp, lr}

08011b58 <PropertiesBuilder::AddComment(char const*)>:
 8011b58:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011b5a:	7a06      	ldrb	r6, [r0, #8]
 8011b5c:	b996      	cbnz	r6, 8011b84 <PropertiesBuilder::AddComment(char const*)+0x2c>
 8011b5e:	4604      	mov	r4, r0
 8011b60:	88c0      	ldrh	r0, [r0, #6]
 8011b62:	88a5      	ldrh	r5, [r4, #4]
 8011b64:	42a8      	cmp	r0, r5
 8011b66:	d20d      	bcs.n	8011b84 <PropertiesBuilder::AddComment(char const*)+0x2c>
 8011b68:	6827      	ldr	r7, [r4, #0]
 8011b6a:	1a2d      	subs	r5, r5, r0
 8011b6c:	460b      	mov	r3, r1
 8011b6e:	4a06      	ldr	r2, [pc, #24]	; (8011b88 <PropertiesBuilder::AddComment(char const*)+0x30>)
 8011b70:	4629      	mov	r1, r5
 8011b72:	4438      	add	r0, r7
 8011b74:	f7f7 fd22 	bl	80095bc <snprintf>
 8011b78:	4285      	cmp	r5, r0
 8011b7a:	bfa1      	itttt	ge
 8011b7c:	2601      	movge	r6, #1
 8011b7e:	88e3      	ldrhge	r3, [r4, #6]
 8011b80:	18c0      	addge	r0, r0, r3
 8011b82:	80e0      	strhge	r0, [r4, #6]
 8011b84:	4630      	mov	r0, r6
 8011b86:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011b88:	0801778a 	stmdaeq	r1, {r1, r3, r7, r8, r9, sl, ip, sp, lr}

08011b8c <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>:
 8011b8c:	e9c0 1200 	strd	r1, r2, [r0]
 8011b90:	4770      	bx	lr

08011b92 <ReadConfigFile::~ReadConfigFile()>:
 8011b92:	4770      	bx	lr

08011b94 <ReadConfigFile::Read(char const*, unsigned int)>:
 8011b94:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011b98:	4606      	mov	r6, r0
 8011b9a:	460d      	mov	r5, r1
 8011b9c:	4614      	mov	r4, r2
 8011b9e:	f04f 0800 	mov.w	r8, #0
 8011ba2:	b0a0      	sub	sp, #128	; 0x80
 8011ba4:	b33c      	cbz	r4, 8011bf6 <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 8011ba6:	466b      	mov	r3, sp
 8011ba8:	462a      	mov	r2, r5
 8011baa:	4619      	mov	r1, r3
 8011bac:	e007      	b.n	8011bbe <ReadConfigFile::Read(char const*, unsigned int)+0x2a>
 8011bae:	f803 7b01 	strb.w	r7, [r3], #1
 8011bb2:	1a58      	subs	r0, r3, r1
 8011bb4:	287f      	cmp	r0, #127	; 0x7f
 8011bb6:	4615      	mov	r5, r2
 8011bb8:	dc1d      	bgt.n	8011bf6 <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 8011bba:	3c01      	subs	r4, #1
 8011bbc:	d00f      	beq.n	8011bde <ReadConfigFile::Read(char const*, unsigned int)+0x4a>
 8011bbe:	7817      	ldrb	r7, [r2, #0]
 8011bc0:	4610      	mov	r0, r2
 8011bc2:	2f0d      	cmp	r7, #13
 8011bc4:	f102 0201 	add.w	r2, r2, #1
 8011bc8:	d001      	beq.n	8011bce <ReadConfigFile::Read(char const*, unsigned int)+0x3a>
 8011bca:	2f0a      	cmp	r7, #10
 8011bcc:	d1ef      	bne.n	8011bae <ReadConfigFile::Read(char const*, unsigned int)+0x1a>
 8011bce:	4605      	mov	r5, r0
 8011bd0:	b12c      	cbz	r4, 8011bde <ReadConfigFile::Read(char const*, unsigned int)+0x4a>
 8011bd2:	f810 2b01 	ldrb.w	r2, [r0], #1
 8011bd6:	2a0d      	cmp	r2, #13
 8011bd8:	d00b      	beq.n	8011bf2 <ReadConfigFile::Read(char const*, unsigned int)+0x5e>
 8011bda:	2a0a      	cmp	r2, #10
 8011bdc:	d009      	beq.n	8011bf2 <ReadConfigFile::Read(char const*, unsigned int)+0x5e>
 8011bde:	f89d 2000 	ldrb.w	r2, [sp]
 8011be2:	2a60      	cmp	r2, #96	; 0x60
 8011be4:	d9de      	bls.n	8011ba4 <ReadConfigFile::Read(char const*, unsigned int)+0x10>
 8011be6:	f883 8000 	strb.w	r8, [r3]
 8011bea:	e9d6 3000 	ldrd	r3, r0, [r6]
 8011bee:	4798      	blx	r3
 8011bf0:	e7d8      	b.n	8011ba4 <ReadConfigFile::Read(char const*, unsigned int)+0x10>
 8011bf2:	3c01      	subs	r4, #1
 8011bf4:	e7eb      	b.n	8011bce <ReadConfigFile::Read(char const*, unsigned int)+0x3a>
 8011bf6:	b020      	add	sp, #128	; 0x80
 8011bf8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08011bfc <Sscan::Char(char const*, char const*, char*, unsigned int&)>:
 8011bfc:	b570      	push	{r4, r5, r6, lr}
 8011bfe:	4615      	mov	r5, r2
 8011c00:	461c      	mov	r4, r3
 8011c02:	f000 f91c 	bl	8011e3e <Sscan::checkName(char const*, char const*)>
 8011c06:	b180      	cbz	r0, 8011c2a <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2e>
 8011c08:	2100      	movs	r1, #0
 8011c0a:	5c43      	ldrb	r3, [r0, r1]
 8011c0c:	6826      	ldr	r6, [r4, #0]
 8011c0e:	b28a      	uxth	r2, r1
 8011c10:	b143      	cbz	r3, 8011c24 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x28>
 8011c12:	42b2      	cmp	r2, r6
 8011c14:	d303      	bcc.n	8011c1e <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x22>
 8011c16:	2b0a      	cmp	r3, #10
 8011c18:	d004      	beq.n	8011c24 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x28>
 8011c1a:	2002      	movs	r0, #2
 8011c1c:	e004      	b.n	8011c28 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2c>
 8011c1e:	546b      	strb	r3, [r5, r1]
 8011c20:	3101      	adds	r1, #1
 8011c22:	e7f2      	b.n	8011c0a <Sscan::Char(char const*, char const*, char*, unsigned int&)+0xe>
 8011c24:	2000      	movs	r0, #0
 8011c26:	6022      	str	r2, [r4, #0]
 8011c28:	bd70      	pop	{r4, r5, r6, pc}
 8011c2a:	2001      	movs	r0, #1
 8011c2c:	e7fc      	b.n	8011c28 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2c>

08011c2e <Sscan::Float(char const*, char const*, float&)>:
 8011c2e:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8011c32:	4616      	mov	r6, r2
 8011c34:	f000 f903 	bl	8011e3e <Sscan::checkName(char const*, char const*)>
 8011c38:	2800      	cmp	r0, #0
 8011c3a:	d059      	beq.n	8011cf0 <Sscan::Float(char const*, char const*, float&)+0xc2>
 8011c3c:	4604      	mov	r4, r0
 8011c3e:	7803      	ldrb	r3, [r0, #0]
 8011c40:	2b2d      	cmp	r3, #45	; 0x2d
 8011c42:	bf08      	it	eq
 8011c44:	3401      	addeq	r4, #1
 8011c46:	7823      	ldrb	r3, [r4, #0]
 8011c48:	bf0c      	ite	eq
 8011c4a:	f04f 0801 	moveq.w	r8, #1
 8011c4e:	f04f 0800 	movne.w	r8, #0
 8011c52:	f013 0fdf 	tst.w	r3, #223	; 0xdf
 8011c56:	d103      	bne.n	8011c60 <Sscan::Float(char const*, char const*, float&)+0x32>
 8011c58:	2702      	movs	r7, #2
 8011c5a:	4638      	mov	r0, r7
 8011c5c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8011c60:	2000      	movs	r0, #0
 8011c62:	220a      	movs	r2, #10
 8011c64:	7823      	ldrb	r3, [r4, #0]
 8011c66:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 8011c6a:	2909      	cmp	r1, #9
 8011c6c:	d8f4      	bhi.n	8011c58 <Sscan::Float(char const*, char const*, float&)+0x2a>
 8011c6e:	fb02 3000 	mla	r0, r2, r0, r3
 8011c72:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8011c76:	3830      	subs	r0, #48	; 0x30
 8011c78:	2b2e      	cmp	r3, #46	; 0x2e
 8011c7a:	d002      	beq.n	8011c82 <Sscan::Float(char const*, char const*, float&)+0x54>
 8011c7c:	f013 0fdf 	tst.w	r3, #223	; 0xdf
 8011c80:	d1f0      	bne.n	8011c64 <Sscan::Float(char const*, char const*, float&)+0x36>
 8011c82:	f7f6 f861 	bl	8007d48 <__aeabi_ui2f>
 8011c86:	6030      	str	r0, [r6, #0]
 8011c88:	7823      	ldrb	r3, [r4, #0]
 8011c8a:	4605      	mov	r5, r0
 8011c8c:	2b2e      	cmp	r3, #46	; 0x2e
 8011c8e:	d008      	beq.n	8011ca2 <Sscan::Float(char const*, char const*, float&)+0x74>
 8011c90:	f1b8 0f00 	cmp.w	r8, #0
 8011c94:	d101      	bne.n	8011c9a <Sscan::Float(char const*, char const*, float&)+0x6c>
 8011c96:	2700      	movs	r7, #0
 8011c98:	e7df      	b.n	8011c5a <Sscan::Float(char const*, char const*, float&)+0x2c>
 8011c9a:	f100 4500 	add.w	r5, r0, #2147483648	; 0x80000000
 8011c9e:	6035      	str	r5, [r6, #0]
 8011ca0:	e7f9      	b.n	8011c96 <Sscan::Float(char const*, char const*, float&)+0x68>
 8011ca2:	f04f 0901 	mov.w	r9, #1
 8011ca6:	2000      	movs	r0, #0
 8011ca8:	220a      	movs	r2, #10
 8011caa:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8011cae:	f013 07df 	ands.w	r7, r3, #223	; 0xdf
 8011cb2:	d111      	bne.n	8011cd8 <Sscan::Float(char const*, char const*, float&)+0xaa>
 8011cb4:	f7f6 f848 	bl	8007d48 <__aeabi_ui2f>
 8011cb8:	4604      	mov	r4, r0
 8011cba:	4648      	mov	r0, r9
 8011cbc:	f7f6 f844 	bl	8007d48 <__aeabi_ui2f>
 8011cc0:	4601      	mov	r1, r0
 8011cc2:	4620      	mov	r0, r4
 8011cc4:	f7f6 fbbe 	bl	8008444 <__aeabi_fdiv>
 8011cc8:	4629      	mov	r1, r5
 8011cca:	f7f5 ff8d 	bl	8007be8 <__addsf3>
 8011cce:	f1b8 0f00 	cmp.w	r8, #0
 8011cd2:	d109      	bne.n	8011ce8 <Sscan::Float(char const*, char const*, float&)+0xba>
 8011cd4:	6030      	str	r0, [r6, #0]
 8011cd6:	e7de      	b.n	8011c96 <Sscan::Float(char const*, char const*, float&)+0x68>
 8011cd8:	3b30      	subs	r3, #48	; 0x30
 8011cda:	2b09      	cmp	r3, #9
 8011cdc:	d8bc      	bhi.n	8011c58 <Sscan::Float(char const*, char const*, float&)+0x2a>
 8011cde:	fb02 3000 	mla	r0, r2, r0, r3
 8011ce2:	fb02 f909 	mul.w	r9, r2, r9
 8011ce6:	e7e0      	b.n	8011caa <Sscan::Float(char const*, char const*, float&)+0x7c>
 8011ce8:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
 8011cec:	6030      	str	r0, [r6, #0]
 8011cee:	e7b4      	b.n	8011c5a <Sscan::Float(char const*, char const*, float&)+0x2c>
 8011cf0:	2701      	movs	r7, #1
 8011cf2:	e7b2      	b.n	8011c5a <Sscan::Float(char const*, char const*, float&)+0x2c>

08011cf4 <Sscan::IpAddress(char const*, char const*, unsigned int&)>:
 8011cf4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8011cf6:	4615      	mov	r5, r2
 8011cf8:	f000 f8a1 	bl	8011e3e <Sscan::checkName(char const*, char const*)>
 8011cfc:	bb58      	cbnz	r0, 8011d56 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x62>
 8011cfe:	2001      	movs	r0, #1
 8011d00:	e027      	b.n	8011d52 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5e>
 8011d02:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 8011d06:	2b09      	cmp	r3, #9
 8011d08:	d822      	bhi.n	8011d50 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 8011d0a:	4603      	mov	r3, r0
 8011d0c:	fb0c 2101 	mla	r1, ip, r1, r2
 8011d10:	3930      	subs	r1, #48	; 0x30
 8011d12:	4618      	mov	r0, r3
 8011d14:	f810 2b01 	ldrb.w	r2, [r0], #1
 8011d18:	2a2e      	cmp	r2, #46	; 0x2e
 8011d1a:	d115      	bne.n	8011d48 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x54>
 8011d1c:	29ff      	cmp	r1, #255	; 0xff
 8011d1e:	d817      	bhi.n	8011d50 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 8011d20:	3401      	adds	r4, #1
 8011d22:	2c03      	cmp	r4, #3
 8011d24:	f806 1b01 	strb.w	r1, [r6], #1
 8011d28:	d119      	bne.n	8011d5e <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x6a>
 8011d2a:	2400      	movs	r4, #0
 8011d2c:	260a      	movs	r6, #10
 8011d2e:	1d1a      	adds	r2, r3, #4
 8011d30:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8011d34:	f011 00df 	ands.w	r0, r1, #223	; 0xdf
 8011d38:	d115      	bne.n	8011d66 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x72>
 8011d3a:	2cff      	cmp	r4, #255	; 0xff
 8011d3c:	d808      	bhi.n	8011d50 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 8011d3e:	f88d 4007 	strb.w	r4, [sp, #7]
 8011d42:	9b01      	ldr	r3, [sp, #4]
 8011d44:	602b      	str	r3, [r5, #0]
 8011d46:	e004      	b.n	8011d52 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5e>
 8011d48:	2a00      	cmp	r2, #0
 8011d4a:	d0e7      	beq.n	8011d1c <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 8011d4c:	42b8      	cmp	r0, r7
 8011d4e:	d1d8      	bne.n	8011d02 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0xe>
 8011d50:	2002      	movs	r0, #2
 8011d52:	b003      	add	sp, #12
 8011d54:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011d56:	2400      	movs	r4, #0
 8011d58:	f04f 0c0a 	mov.w	ip, #10
 8011d5c:	ae01      	add	r6, sp, #4
 8011d5e:	4603      	mov	r3, r0
 8011d60:	2100      	movs	r1, #0
 8011d62:	1d07      	adds	r7, r0, #4
 8011d64:	e7d5      	b.n	8011d12 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x1e>
 8011d66:	4293      	cmp	r3, r2
 8011d68:	d0f2      	beq.n	8011d50 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 8011d6a:	3930      	subs	r1, #48	; 0x30
 8011d6c:	2909      	cmp	r1, #9
 8011d6e:	d8ef      	bhi.n	8011d50 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 8011d70:	fb06 1404 	mla	r4, r6, r4, r1
 8011d74:	e7dc      	b.n	8011d30 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x3c>

08011d76 <Sscan::Uint16(char const*, char const*, unsigned short&)>:
 8011d76:	b538      	push	{r3, r4, r5, lr}
 8011d78:	4615      	mov	r5, r2
 8011d7a:	f000 f860 	bl	8011e3e <Sscan::checkName(char const*, char const*)>
 8011d7e:	b1a0      	cbz	r0, 8011daa <Sscan::Uint16(char const*, char const*, unsigned short&)+0x34>
 8011d80:	4604      	mov	r4, r0
 8011d82:	2100      	movs	r1, #0
 8011d84:	220a      	movs	r2, #10
 8011d86:	7823      	ldrb	r3, [r4, #0]
 8011d88:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
 8011d8c:	2809      	cmp	r0, #9
 8011d8e:	d80e      	bhi.n	8011dae <Sscan::Uint16(char const*, char const*, unsigned short&)+0x38>
 8011d90:	fb02 3101 	mla	r1, r2, r1, r3
 8011d94:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8011d98:	3930      	subs	r1, #48	; 0x30
 8011d9a:	f013 00df 	ands.w	r0, r3, #223	; 0xdf
 8011d9e:	d1f2      	bne.n	8011d86 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x10>
 8011da0:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
 8011da4:	d203      	bcs.n	8011dae <Sscan::Uint16(char const*, char const*, unsigned short&)+0x38>
 8011da6:	8029      	strh	r1, [r5, #0]
 8011da8:	bd38      	pop	{r3, r4, r5, pc}
 8011daa:	2001      	movs	r0, #1
 8011dac:	e7fc      	b.n	8011da8 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x32>
 8011dae:	2002      	movs	r0, #2
 8011db0:	e7fa      	b.n	8011da8 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x32>

08011db2 <Sscan::Uint32(char const*, char const*, unsigned int&)>:
 8011db2:	b570      	push	{r4, r5, r6, lr}
 8011db4:	4615      	mov	r5, r2
 8011db6:	f000 f842 	bl	8011e3e <Sscan::checkName(char const*, char const*)>
 8011dba:	b1f8      	cbz	r0, 8011dfc <Sscan::Uint32(char const*, char const*, unsigned int&)+0x4a>
 8011dbc:	2300      	movs	r3, #0
 8011dbe:	4604      	mov	r4, r0
 8011dc0:	461a      	mov	r2, r3
 8011dc2:	260a      	movs	r6, #10
 8011dc4:	7820      	ldrb	r0, [r4, #0]
 8011dc6:	f1a0 0130 	sub.w	r1, r0, #48	; 0x30
 8011dca:	2909      	cmp	r1, #9
 8011dcc:	d818      	bhi.n	8011e00 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x4e>
 8011dce:	fba3 3106 	umull	r3, r1, r3, r6
 8011dd2:	fb06 1102 	mla	r1, r6, r2, r1
 8011dd6:	3b30      	subs	r3, #48	; 0x30
 8011dd8:	f141 31ff 	adc.w	r1, r1, #4294967295	; 0xffffffff
 8011ddc:	18c3      	adds	r3, r0, r3
 8011dde:	f141 0200 	adc.w	r2, r1, #0
 8011de2:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8011de6:	f011 00df 	ands.w	r0, r1, #223	; 0xdf
 8011dea:	d1eb      	bne.n	8011dc4 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x12>
 8011dec:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8011df0:	4299      	cmp	r1, r3
 8011df2:	eb70 0202 	sbcs.w	r2, r0, r2
 8011df6:	d303      	bcc.n	8011e00 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x4e>
 8011df8:	602b      	str	r3, [r5, #0]
 8011dfa:	bd70      	pop	{r4, r5, r6, pc}
 8011dfc:	2001      	movs	r0, #1
 8011dfe:	e7fc      	b.n	8011dfa <Sscan::Uint32(char const*, char const*, unsigned int&)+0x48>
 8011e00:	2002      	movs	r0, #2
 8011e02:	e7fa      	b.n	8011dfa <Sscan::Uint32(char const*, char const*, unsigned int&)+0x48>

08011e04 <Sscan::Uint8(char const*, char const*, unsigned char&)>:
 8011e04:	b538      	push	{r3, r4, r5, lr}
 8011e06:	4615      	mov	r5, r2
 8011e08:	f000 f819 	bl	8011e3e <Sscan::checkName(char const*, char const*)>
 8011e0c:	b198      	cbz	r0, 8011e36 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x32>
 8011e0e:	4604      	mov	r4, r0
 8011e10:	2100      	movs	r1, #0
 8011e12:	220a      	movs	r2, #10
 8011e14:	7823      	ldrb	r3, [r4, #0]
 8011e16:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
 8011e1a:	2809      	cmp	r0, #9
 8011e1c:	d80d      	bhi.n	8011e3a <Sscan::Uint8(char const*, char const*, unsigned char&)+0x36>
 8011e1e:	fb02 3101 	mla	r1, r2, r1, r3
 8011e22:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8011e26:	3930      	subs	r1, #48	; 0x30
 8011e28:	f013 00df 	ands.w	r0, r3, #223	; 0xdf
 8011e2c:	d1f2      	bne.n	8011e14 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x10>
 8011e2e:	29ff      	cmp	r1, #255	; 0xff
 8011e30:	d803      	bhi.n	8011e3a <Sscan::Uint8(char const*, char const*, unsigned char&)+0x36>
 8011e32:	7029      	strb	r1, [r5, #0]
 8011e34:	bd38      	pop	{r3, r4, r5, pc}
 8011e36:	2001      	movs	r0, #1
 8011e38:	e7fc      	b.n	8011e34 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>
 8011e3a:	2002      	movs	r0, #2
 8011e3c:	e7fa      	b.n	8011e34 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>

08011e3e <Sscan::checkName(char const*, char const*)>:
 8011e3e:	4603      	mov	r3, r0
 8011e40:	b510      	push	{r4, lr}
 8011e42:	3901      	subs	r1, #1
 8011e44:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 8011e48:	461c      	mov	r4, r3
 8011e4a:	f813 2b01 	ldrb.w	r2, [r3], #1
 8011e4e:	b120      	cbz	r0, 8011e5a <Sscan::checkName(char const*, char const*)+0x1c>
 8011e50:	b10a      	cbz	r2, 8011e56 <Sscan::checkName(char const*, char const*)+0x18>
 8011e52:	4290      	cmp	r0, r2
 8011e54:	d0f6      	beq.n	8011e44 <Sscan::checkName(char const*, char const*)+0x6>
 8011e56:	2000      	movs	r0, #0
 8011e58:	e006      	b.n	8011e68 <Sscan::checkName(char const*, char const*)+0x2a>
 8011e5a:	2a3d      	cmp	r2, #61	; 0x3d
 8011e5c:	d104      	bne.n	8011e68 <Sscan::checkName(char const*, char const*)+0x2a>
 8011e5e:	7860      	ldrb	r0, [r4, #1]
 8011e60:	f010 00df 	ands.w	r0, r0, #223	; 0xdf
 8011e64:	d000      	beq.n	8011e68 <Sscan::checkName(char const*, char const*)+0x2a>
 8011e66:	1c60      	adds	r0, r4, #1
 8011e68:	bd10      	pop	{r4, pc}

08011e6a <LightSet::GetSlotInfo(unsigned short, lightset::SlotInfo&)>:
 8011e6a:	2300      	movs	r3, #0
 8011e6c:	2001      	movs	r0, #1
 8011e6e:	7093      	strb	r3, [r2, #2]
 8011e70:	8010      	strh	r0, [r2, #0]
 8011e72:	4770      	bx	lr

08011e74 <Display::PrintInfo() [clone .isra.0]>:
 8011e74:	b910      	cbnz	r0, 8011e7c <Display::PrintInfo() [clone .isra.0]+0x8>
 8011e76:	4803      	ldr	r0, [pc, #12]	; (8011e84 <Display::PrintInfo() [clone .isra.0]+0x10>)
 8011e78:	f000 bd2d 	b.w	80128d6 <puts>
 8011e7c:	6803      	ldr	r3, [r0, #0]
 8011e7e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8011e80:	4718      	bx	r3
 8011e82:	bf00      	nop
 8011e84:	0801788d 	stmdaeq	r1, {r0, r2, r3, r7, fp, ip, sp, lr}

08011e88 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>:
 8011e88:	b513      	push	{r0, r1, r4, lr}
 8011e8a:	4604      	mov	r4, r0
 8011e8c:	0a13      	lsrs	r3, r2, #8
 8011e8e:	7800      	ldrb	r0, [r0, #0]
 8011e90:	f88d 1004 	strb.w	r1, [sp, #4]
 8011e94:	f88d 3005 	strb.w	r3, [sp, #5]
 8011e98:	f88d 2006 	strb.w	r2, [sp, #6]
 8011e9c:	f001 fe0e 	bl	8013abc <gd32_i2c_set_address>
 8011ea0:	6860      	ldr	r0, [r4, #4]
 8011ea2:	f001 fe03 	bl	8013aac <gd32_i2c_set_baudrate>
 8011ea6:	2103      	movs	r1, #3
 8011ea8:	a801      	add	r0, sp, #4
 8011eaa:	f001 fe0d 	bl	8013ac8 <gd32_i2c_write>
 8011eae:	b002      	add	sp, #8
 8011eb0:	bd10      	pop	{r4, pc}

08011eb2 <HAL_I2C::IsConnected_(unsigned char, unsigned int)>:
 8011eb2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011eb4:	460d      	mov	r5, r1
 8011eb6:	4604      	mov	r4, r0
 8011eb8:	f001 fe00 	bl	8013abc <gd32_i2c_set_address>
 8011ebc:	4628      	mov	r0, r5
 8011ebe:	f001 fdf5 	bl	8013aac <gd32_i2c_set_baudrate>
 8011ec2:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8011ec6:	2b07      	cmp	r3, #7
 8011ec8:	d902      	bls.n	8011ed0 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x1e>
 8011eca:	3c50      	subs	r4, #80	; 0x50
 8011ecc:	2c0f      	cmp	r4, #15
 8011ece:	d809      	bhi.n	8011ee4 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x32>
 8011ed0:	2101      	movs	r1, #1
 8011ed2:	f10d 0007 	add.w	r0, sp, #7
 8011ed6:	f001 fe5d 	bl	8013b94 <gd32_i2c_read>
 8011eda:	fab0 f080 	clz	r0, r0
 8011ede:	0940      	lsrs	r0, r0, #5
 8011ee0:	b003      	add	sp, #12
 8011ee2:	bd30      	pop	{r4, r5, pc}
 8011ee4:	2100      	movs	r1, #0
 8011ee6:	4608      	mov	r0, r1
 8011ee8:	f001 fdee 	bl	8013ac8 <gd32_i2c_write>
 8011eec:	e7f5      	b.n	8011eda <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x28>

08011eee <Display::Detect7Segment()>:
 8011eee:	b538      	push	{r3, r4, r5, lr}
 8011ef0:	68c1      	ldr	r1, [r0, #12]
 8011ef2:	4604      	mov	r4, r0
 8011ef4:	7a00      	ldrb	r0, [r0, #8]
 8011ef6:	f7ff ffdc 	bl	8011eb2 <HAL_I2C::IsConnected_(unsigned char, unsigned int)>
 8011efa:	7460      	strb	r0, [r4, #17]
 8011efc:	b170      	cbz	r0, 8011f1c <Display::Detect7Segment()+0x2e>
 8011efe:	2200      	movs	r2, #0
 8011f00:	f104 0508 	add.w	r5, r4, #8
 8011f04:	4611      	mov	r1, r2
 8011f06:	4628      	mov	r0, r5
 8011f08:	f7ff ffbe 	bl	8011e88 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 8011f0c:	7c63      	ldrb	r3, [r4, #17]
 8011f0e:	b12b      	cbz	r3, 8011f1c <Display::Detect7Segment()+0x2e>
 8011f10:	f24c 02ff 	movw	r2, #49407	; 0xc0ff
 8011f14:	2112      	movs	r1, #18
 8011f16:	4628      	mov	r0, r5
 8011f18:	f7ff ffb6 	bl	8011e88 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 8011f1c:	bd38      	pop	{r3, r4, r5, pc}

08011f1e <Display::Detect(display::Type)>:
 8011f1e:	2902      	cmp	r1, #2
 8011f20:	b538      	push	{r3, r4, r5, lr}
 8011f22:	4604      	mov	r4, r0
 8011f24:	d014      	beq.n	8011f50 <Display::Detect(display::Type)+0x32>
 8011f26:	2904      	cmp	r1, #4
 8011f28:	d01b      	beq.n	8011f62 <Display::Detect(display::Type)+0x44>
 8011f2a:	69a0      	ldr	r0, [r4, #24]
 8011f2c:	b168      	cbz	r0, 8011f4a <Display::Detect(display::Type)+0x2c>
 8011f2e:	6803      	ldr	r3, [r0, #0]
 8011f30:	689b      	ldr	r3, [r3, #8]
 8011f32:	4798      	blx	r3
 8011f34:	4603      	mov	r3, r0
 8011f36:	69a0      	ldr	r0, [r4, #24]
 8011f38:	b9ab      	cbnz	r3, 8011f66 <Display::Detect(display::Type)+0x48>
 8011f3a:	b110      	cbz	r0, 8011f42 <Display::Detect(display::Type)+0x24>
 8011f3c:	6803      	ldr	r3, [r0, #0]
 8011f3e:	685b      	ldr	r3, [r3, #4]
 8011f40:	4798      	blx	r3
 8011f42:	2300      	movs	r3, #0
 8011f44:	61a3      	str	r3, [r4, #24]
 8011f46:	2304      	movs	r3, #4
 8011f48:	6023      	str	r3, [r4, #0]
 8011f4a:	2300      	movs	r3, #0
 8011f4c:	6163      	str	r3, [r4, #20]
 8011f4e:	e010      	b.n	8011f72 <Display::Detect(display::Type)+0x54>
 8011f50:	2018      	movs	r0, #24
 8011f52:	f000 fbc9 	bl	80126e8 <operator new(unsigned int)>
 8011f56:	4605      	mov	r5, r0
 8011f58:	2100      	movs	r1, #0
 8011f5a:	f000 f89d 	bl	8012098 <Ssd1306::Ssd1306(TOledPanel)>
 8011f5e:	61a5      	str	r5, [r4, #24]
 8011f60:	e7e3      	b.n	8011f2a <Display::Detect(display::Type)+0xc>
 8011f62:	6001      	str	r1, [r0, #0]
 8011f64:	e7e1      	b.n	8011f2a <Display::Detect(display::Type)+0xc>
 8011f66:	6803      	ldr	r3, [r0, #0]
 8011f68:	68db      	ldr	r3, [r3, #12]
 8011f6a:	4798      	blx	r3
 8011f6c:	69a3      	ldr	r3, [r4, #24]
 8011f6e:	2b00      	cmp	r3, #0
 8011f70:	d0eb      	beq.n	8011f4a <Display::Detect(display::Type)+0x2c>
 8011f72:	bd38      	pop	{r3, r4, r5, pc}

08011f74 <Display::Display()>:
 8011f74:	2304      	movs	r3, #4
 8011f76:	b510      	push	{r4, lr}
 8011f78:	6003      	str	r3, [r0, #0]
 8011f7a:	4b0f      	ldr	r3, [pc, #60]	; (8011fb8 <Display::Display()+0x44>)
 8011f7c:	4604      	mov	r4, r0
 8011f7e:	681b      	ldr	r3, [r3, #0]
 8011f80:	4a0e      	ldr	r2, [pc, #56]	; (8011fbc <Display::Display()+0x48>)
 8011f82:	6043      	str	r3, [r0, #4]
 8011f84:	2321      	movs	r3, #33	; 0x21
 8011f86:	7203      	strb	r3, [r0, #8]
 8011f88:	4b0d      	ldr	r3, [pc, #52]	; (8011fc0 <Display::Display()+0x4c>)
 8011f8a:	2102      	movs	r1, #2
 8011f8c:	60c3      	str	r3, [r0, #12]
 8011f8e:	2300      	movs	r3, #0
 8011f90:	e9c0 2305 	strd	r2, r3, [r0, #20]
 8011f94:	8203      	strh	r3, [r0, #16]
 8011f96:	4b0b      	ldr	r3, [pc, #44]	; (8011fc4 <Display::Display()+0x50>)
 8011f98:	6018      	str	r0, [r3, #0]
 8011f9a:	f7ff ffc0 	bl	8011f1e <Display::Detect(display::Type)>
 8011f9e:	4620      	mov	r0, r4
 8011fa0:	f7ff ffa5 	bl	8011eee <Display::Detect7Segment()>
 8011fa4:	69a3      	ldr	r3, [r4, #24]
 8011fa6:	b10b      	cbz	r3, 8011fac <Display::Display()+0x38>
 8011fa8:	f7f6 fc5c 	bl	8008864 <display::timeout::gpio_init()>
 8011fac:	69a0      	ldr	r0, [r4, #24]
 8011fae:	f7ff ff61 	bl	8011e74 <Display::PrintInfo() [clone .isra.0]>
 8011fb2:	4620      	mov	r0, r4
 8011fb4:	bd10      	pop	{r4, pc}
 8011fb6:	bf00      	nop
 8011fb8:	2001da24 	andcs	sp, r1, r4, lsr #20
 8011fbc:	000493e0 	andeq	r9, r4, r0, ror #7
 8011fc0:	00061a80 	andeq	r1, r6, r0, lsl #21
 8011fc4:	2001d920 	andcs	sp, r1, r0, lsr #18

08011fc8 <Ssd1306::~Ssd1306()>:
 8011fc8:	4770      	bx	lr

08011fca <Ssd1306::SetCursor(unsigned int)>:
 8011fca:	4770      	bx	lr

08011fcc <Ssd1306::PrintInfo()>:
 8011fcc:	b410      	push	{r4}
 8011fce:	4906      	ldr	r1, [pc, #24]	; (8011fe8 <Ssd1306::PrintInfo()+0x1c>)
 8011fd0:	7c44      	ldrb	r4, [r0, #17]
 8011fd2:	7903      	ldrb	r3, [r0, #4]
 8011fd4:	7942      	ldrb	r2, [r0, #5]
 8011fd6:	4805      	ldr	r0, [pc, #20]	; (8011fec <Ssd1306::PrintInfo()+0x20>)
 8011fd8:	2c00      	cmp	r4, #0
 8011fda:	bf08      	it	eq
 8011fdc:	4601      	moveq	r1, r0
 8011fde:	4804      	ldr	r0, [pc, #16]	; (8011ff0 <Ssd1306::PrintInfo()+0x24>)
 8011fe0:	bc10      	pop	{r4}
 8011fe2:	f7f7 bac3 	b.w	800956c <printf>
 8011fe6:	bf00      	nop
 8011fe8:	0801789e 	stmdaeq	r1, {r1, r2, r3, r4, r7, fp, ip, sp, lr}
 8011fec:	080178a5 	stmdaeq	r1, {r0, r2, r5, r7, fp, ip, sp, lr}
 8011ff0:	080178ad 	stmdaeq	r1, {r0, r2, r3, r5, r7, fp, ip, sp, lr}

08011ff4 <Ssd1306::~Ssd1306()>:
 8011ff4:	b510      	push	{r4, lr}
 8011ff6:	4604      	mov	r4, r0
 8011ff8:	f000 fb72 	bl	80126e0 <operator delete(void*)>
 8011ffc:	4620      	mov	r0, r4
 8011ffe:	bd10      	pop	{r4, pc}

08012000 <HAL_I2C::Setup()>:
 8012000:	b510      	push	{r4, lr}
 8012002:	4604      	mov	r4, r0
 8012004:	7800      	ldrb	r0, [r0, #0]
 8012006:	f001 fd59 	bl	8013abc <gd32_i2c_set_address>
 801200a:	6860      	ldr	r0, [r4, #4]
 801200c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012010:	f001 bd4c 	b.w	8013aac <gd32_i2c_set_baudrate>

08012014 <Ssd1306::PutChar(int)>:
 8012014:	b510      	push	{r4, lr}
 8012016:	f1a1 0420 	sub.w	r4, r1, #32
 801201a:	2c5f      	cmp	r4, #95	; 0x5f
 801201c:	bf88      	it	hi
 801201e:	2400      	movhi	r4, #0
 8012020:	3008      	adds	r0, #8
 8012022:	f7ff ffed 	bl	8012000 <HAL_I2C::Setup()>
 8012026:	4804      	ldr	r0, [pc, #16]	; (8012038 <Ssd1306::PutChar(int)+0x24>)
 8012028:	ebc4 04c4 	rsb	r4, r4, r4, lsl #3
 801202c:	4420      	add	r0, r4
 801202e:	2107      	movs	r1, #7
 8012030:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012034:	f001 bd48 	b.w	8013ac8 <gd32_i2c_write>
 8012038:	080178c0 	stmdaeq	r1, {r6, r7, fp, ip, sp, lr}

0801203c <Ssd1306::PutString(char const*)>:
 801203c:	b538      	push	{r3, r4, r5, lr}
 801203e:	4605      	mov	r5, r0
 8012040:	1e4c      	subs	r4, r1, #1
 8012042:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8012046:	b901      	cbnz	r1, 801204a <Ssd1306::PutString(char const*)+0xe>
 8012048:	bd38      	pop	{r3, r4, r5, pc}
 801204a:	4628      	mov	r0, r5
 801204c:	f7ff ffe2 	bl	8012014 <Ssd1306::PutChar(int)>
 8012050:	e7f7      	b.n	8012042 <Ssd1306::PutString(char const*)+0x6>

08012052 <Ssd1306::Text(char const*, unsigned int)>:
 8012052:	b570      	push	{r4, r5, r6, lr}
 8012054:	7903      	ldrb	r3, [r0, #4]
 8012056:	4605      	mov	r5, r0
 8012058:	460c      	mov	r4, r1
 801205a:	4293      	cmp	r3, r2
 801205c:	bf94      	ite	ls
 801205e:	18ce      	addls	r6, r1, r3
 8012060:	188e      	addhi	r6, r1, r2
 8012062:	42b4      	cmp	r4, r6
 8012064:	d100      	bne.n	8012068 <Ssd1306::Text(char const*, unsigned int)+0x16>
 8012066:	bd70      	pop	{r4, r5, r6, pc}
 8012068:	4628      	mov	r0, r5
 801206a:	f814 1b01 	ldrb.w	r1, [r4], #1
 801206e:	f7ff ffd1 	bl	8012014 <Ssd1306::PutChar(int)>
 8012072:	e7f6      	b.n	8012062 <Ssd1306::Text(char const*, unsigned int)+0x10>

08012074 <Ssd1306::InitMembers()>:
 8012074:	7c03      	ldrb	r3, [r0, #16]
 8012076:	b14b      	cbz	r3, 801208c <Ssd1306::InitMembers()+0x18>
 8012078:	3b01      	subs	r3, #1
 801207a:	2b01      	cmp	r3, #1
 801207c:	d909      	bls.n	8012092 <Ssd1306::InitMembers()+0x1e>
 801207e:	2308      	movs	r3, #8
 8012080:	2204      	movs	r2, #4
 8012082:	2115      	movs	r1, #21
 8012084:	7143      	strb	r3, [r0, #5]
 8012086:	7101      	strb	r1, [r0, #4]
 8012088:	6142      	str	r2, [r0, #20]
 801208a:	4770      	bx	lr
 801208c:	2308      	movs	r3, #8
 801208e:	461a      	mov	r2, r3
 8012090:	e7f7      	b.n	8012082 <Ssd1306::InitMembers()+0xe>
 8012092:	2304      	movs	r3, #4
 8012094:	e7fb      	b.n	801208e <Ssd1306::InitMembers()+0x1a>
	...

08012098 <Ssd1306::Ssd1306(TOledPanel)>:
 8012098:	4a08      	ldr	r2, [pc, #32]	; (80120bc <Ssd1306::Ssd1306(TOledPanel)+0x24>)
 801209a:	b508      	push	{r3, lr}
 801209c:	6002      	str	r2, [r0, #0]
 801209e:	227f      	movs	r2, #127	; 0x7f
 80120a0:	80c2      	strh	r2, [r0, #6]
 80120a2:	223c      	movs	r2, #60	; 0x3c
 80120a4:	7202      	strb	r2, [r0, #8]
 80120a6:	4a06      	ldr	r2, [pc, #24]	; (80120c0 <Ssd1306::Ssd1306(TOledPanel)+0x28>)
 80120a8:	7401      	strb	r1, [r0, #16]
 80120aa:	60c2      	str	r2, [r0, #12]
 80120ac:	2200      	movs	r2, #0
 80120ae:	7442      	strb	r2, [r0, #17]
 80120b0:	4a04      	ldr	r2, [pc, #16]	; (80120c4 <Ssd1306::Ssd1306(TOledPanel)+0x2c>)
 80120b2:	6010      	str	r0, [r2, #0]
 80120b4:	f7ff ffde 	bl	8012074 <Ssd1306::InitMembers()>
 80120b8:	bd08      	pop	{r3, pc}
 80120ba:	bf00      	nop
 80120bc:	08017b98 	stmdaeq	r1, {r3, r4, r7, r8, r9, fp, ip, sp, lr}
 80120c0:	00061a80 	andeq	r1, r6, r0, lsl #21
 80120c4:	2001d9ac 	andcs	sp, r1, ip, lsr #19

080120c8 <Ssd1306::SendCommand(unsigned char)>:
 80120c8:	2300      	movs	r3, #0
 80120ca:	b507      	push	{r0, r1, r2, lr}
 80120cc:	3008      	adds	r0, #8
 80120ce:	f88d 3004 	strb.w	r3, [sp, #4]
 80120d2:	f88d 1005 	strb.w	r1, [sp, #5]
 80120d6:	f7ff ff93 	bl	8012000 <HAL_I2C::Setup()>
 80120da:	2102      	movs	r1, #2
 80120dc:	a801      	add	r0, sp, #4
 80120de:	f001 fcf3 	bl	8013ac8 <gd32_i2c_write>
 80120e2:	b003      	add	sp, #12
 80120e4:	f85d fb04 	ldr.w	pc, [sp], #4

080120e8 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>:
 80120e8:	2914      	cmp	r1, #20
 80120ea:	b570      	push	{r4, r5, r6, lr}
 80120ec:	4605      	mov	r5, r0
 80120ee:	4616      	mov	r6, r2
 80120f0:	d81c      	bhi.n	801212c <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 80120f2:	7943      	ldrb	r3, [r0, #5]
 80120f4:	4293      	cmp	r3, r2
 80120f6:	d919      	bls.n	801212c <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 80120f8:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80120fc:	7c43      	ldrb	r3, [r0, #17]
 80120fe:	004c      	lsls	r4, r1, #1
 8012100:	b2e4      	uxtb	r4, r4
 8012102:	b10b      	cbz	r3, 8012108 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x20>
 8012104:	3404      	adds	r4, #4
 8012106:	b2e4      	uxtb	r4, r4
 8012108:	4628      	mov	r0, r5
 801210a:	f004 010e 	and.w	r1, r4, #14
 801210e:	f7ff ffdb 	bl	80120c8 <Ssd1306::SendCommand(unsigned char)>
 8012112:	0921      	lsrs	r1, r4, #4
 8012114:	4628      	mov	r0, r5
 8012116:	f041 0110 	orr.w	r1, r1, #16
 801211a:	f7ff ffd5 	bl	80120c8 <Ssd1306::SendCommand(unsigned char)>
 801211e:	4628      	mov	r0, r5
 8012120:	f046 01b0 	orr.w	r1, r6, #176	; 0xb0
 8012124:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012128:	f7ff bfce 	b.w	80120c8 <Ssd1306::SendCommand(unsigned char)>
 801212c:	bd70      	pop	{r4, r5, r6, pc}

0801212e <Ssd1306::TextLine(unsigned char, char const*, unsigned int)>:
 801212e:	b570      	push	{r4, r5, r6, lr}
 8012130:	461e      	mov	r6, r3
 8012132:	7943      	ldrb	r3, [r0, #5]
 8012134:	4604      	mov	r4, r0
 8012136:	428b      	cmp	r3, r1
 8012138:	4615      	mov	r5, r2
 801213a:	d30b      	bcc.n	8012154 <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x26>
 801213c:	3901      	subs	r1, #1
 801213e:	b2ca      	uxtb	r2, r1
 8012140:	2100      	movs	r1, #0
 8012142:	f7ff ffd1 	bl	80120e8 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8012146:	4632      	mov	r2, r6
 8012148:	4629      	mov	r1, r5
 801214a:	4620      	mov	r0, r4
 801214c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012150:	f7ff bf7f 	b.w	8012052 <Ssd1306::Text(char const*, unsigned int)>
 8012154:	bd70      	pop	{r4, r5, r6, pc}
	...

08012158 <Ssd1306::ClearLine(unsigned char)>:
 8012158:	b538      	push	{r3, r4, r5, lr}
 801215a:	7943      	ldrb	r3, [r0, #5]
 801215c:	4605      	mov	r5, r0
 801215e:	428b      	cmp	r3, r1
 8012160:	d314      	bcc.n	801218c <Ssd1306::ClearLine(unsigned char)+0x34>
 8012162:	3901      	subs	r1, #1
 8012164:	b2cc      	uxtb	r4, r1
 8012166:	4622      	mov	r2, r4
 8012168:	2100      	movs	r1, #0
 801216a:	f7ff ffbd 	bl	80120e8 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 801216e:	f105 0008 	add.w	r0, r5, #8
 8012172:	f7ff ff45 	bl	8012000 <HAL_I2C::Setup()>
 8012176:	2181      	movs	r1, #129	; 0x81
 8012178:	4805      	ldr	r0, [pc, #20]	; (8012190 <Ssd1306::ClearLine(unsigned char)+0x38>)
 801217a:	f001 fca5 	bl	8013ac8 <gd32_i2c_write>
 801217e:	4622      	mov	r2, r4
 8012180:	4628      	mov	r0, r5
 8012182:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8012186:	2100      	movs	r1, #0
 8012188:	f7ff bfae 	b.w	80120e8 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 801218c:	bd38      	pop	{r3, r4, r5, pc}
 801218e:	bf00      	nop
 8012190:	2001d924 	andcs	sp, r1, r4, lsr #18

08012194 <Ssd1306::SetSleep(bool)>:
 8012194:	b111      	cbz	r1, 801219c <Ssd1306::SetSleep(bool)+0x8>
 8012196:	21ae      	movs	r1, #174	; 0xae
 8012198:	f7ff bf96 	b.w	80120c8 <Ssd1306::SendCommand(unsigned char)>
 801219c:	21af      	movs	r1, #175	; 0xaf
 801219e:	e7fb      	b.n	8012198 <Ssd1306::SetSleep(bool)+0x4>

080121a0 <Ssd1306::SetContrast(unsigned char)>:
 80121a0:	b538      	push	{r3, r4, r5, lr}
 80121a2:	4604      	mov	r4, r0
 80121a4:	460d      	mov	r5, r1
 80121a6:	7181      	strb	r1, [r0, #6]
 80121a8:	2181      	movs	r1, #129	; 0x81
 80121aa:	f7ff ff8d 	bl	80120c8 <Ssd1306::SendCommand(unsigned char)>
 80121ae:	4629      	mov	r1, r5
 80121b0:	4620      	mov	r0, r4
 80121b2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80121b6:	f7ff bf87 	b.w	80120c8 <Ssd1306::SendCommand(unsigned char)>

080121ba <Ssd1306::SetFlipVertically(bool)>:
 80121ba:	b510      	push	{r4, lr}
 80121bc:	4604      	mov	r4, r0
 80121be:	71c1      	strb	r1, [r0, #7]
 80121c0:	b141      	cbz	r1, 80121d4 <Ssd1306::SetFlipVertically(bool)+0x1a>
 80121c2:	21c0      	movs	r1, #192	; 0xc0
 80121c4:	f7ff ff80 	bl	80120c8 <Ssd1306::SendCommand(unsigned char)>
 80121c8:	21a0      	movs	r1, #160	; 0xa0
 80121ca:	4620      	mov	r0, r4
 80121cc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80121d0:	f7ff bf7a 	b.w	80120c8 <Ssd1306::SendCommand(unsigned char)>
 80121d4:	21c8      	movs	r1, #200	; 0xc8
 80121d6:	f7ff ff77 	bl	80120c8 <Ssd1306::SendCommand(unsigned char)>
 80121da:	21a1      	movs	r1, #161	; 0xa1
 80121dc:	e7f5      	b.n	80121ca <Ssd1306::SetFlipVertically(bool)+0x10>
	...

080121e0 <Ssd1306::CheckSH1106()>:
 80121e0:	b530      	push	{r4, r5, lr}
 80121e2:	4604      	mov	r4, r0
 80121e4:	b087      	sub	sp, #28
 80121e6:	2100      	movs	r1, #0
 80121e8:	f7ff ff6e 	bl	80120c8 <Ssd1306::SendCommand(unsigned char)>
 80121ec:	2190      	movs	r1, #144	; 0x90
 80121ee:	4620      	mov	r0, r4
 80121f0:	f7ff ff6a 	bl	80120c8 <Ssd1306::SendCommand(unsigned char)>
 80121f4:	21b0      	movs	r1, #176	; 0xb0
 80121f6:	4620      	mov	r0, r4
 80121f8:	f7ff ff66 	bl	80120c8 <Ssd1306::SendCommand(unsigned char)>
 80121fc:	4b22      	ldr	r3, [pc, #136]	; (8012288 <Ssd1306::CheckSH1106()+0xa8>)
 80121fe:	f104 0508 	add.w	r5, r4, #8
 8012202:	6818      	ldr	r0, [r3, #0]
 8012204:	791b      	ldrb	r3, [r3, #4]
 8012206:	9002      	str	r0, [sp, #8]
 8012208:	4628      	mov	r0, r5
 801220a:	f88d 300c 	strb.w	r3, [sp, #12]
 801220e:	f7ff fef7 	bl	8012000 <HAL_I2C::Setup()>
 8012212:	2105      	movs	r1, #5
 8012214:	a802      	add	r0, sp, #8
 8012216:	f001 fc57 	bl	8013ac8 <gd32_i2c_write>
 801221a:	2100      	movs	r1, #0
 801221c:	4620      	mov	r0, r4
 801221e:	f7ff ff53 	bl	80120c8 <Ssd1306::SendCommand(unsigned char)>
 8012222:	2190      	movs	r1, #144	; 0x90
 8012224:	4620      	mov	r0, r4
 8012226:	f7ff ff4f 	bl	80120c8 <Ssd1306::SendCommand(unsigned char)>
 801222a:	21b0      	movs	r1, #176	; 0xb0
 801222c:	4620      	mov	r0, r4
 801222e:	f7ff ff4b 	bl	80120c8 <Ssd1306::SendCommand(unsigned char)>
 8012232:	2300      	movs	r3, #0
 8012234:	9304      	str	r3, [sp, #16]
 8012236:	f88d 3014 	strb.w	r3, [sp, #20]
 801223a:	2340      	movs	r3, #64	; 0x40
 801223c:	4628      	mov	r0, r5
 801223e:	f88d 3007 	strb.w	r3, [sp, #7]
 8012242:	f7ff fedd 	bl	8012000 <HAL_I2C::Setup()>
 8012246:	2101      	movs	r1, #1
 8012248:	f10d 0007 	add.w	r0, sp, #7
 801224c:	f001 fc3c 	bl	8013ac8 <gd32_i2c_write>
 8012250:	4628      	mov	r0, r5
 8012252:	f7ff fed5 	bl	8012000 <HAL_I2C::Setup()>
 8012256:	2105      	movs	r1, #5
 8012258:	a804      	add	r0, sp, #16
 801225a:	f001 fc9b 	bl	8013b94 <gd32_i2c_read>
 801225e:	2004      	movs	r0, #4
 8012260:	aa02      	add	r2, sp, #8
 8012262:	a904      	add	r1, sp, #16
 8012264:	3801      	subs	r0, #1
 8012266:	d201      	bcs.n	801226c <Ssd1306::CheckSH1106()+0x8c>
 8012268:	2300      	movs	r3, #0
 801226a:	e006      	b.n	801227a <Ssd1306::CheckSH1106()+0x9a>
 801226c:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 8012270:	f811 5f01 	ldrb.w	r5, [r1, #1]!
 8012274:	42ab      	cmp	r3, r5
 8012276:	d0f5      	beq.n	8012264 <Ssd1306::CheckSH1106()+0x84>
 8012278:	1b5b      	subs	r3, r3, r5
 801227a:	fab3 f383 	clz	r3, r3
 801227e:	095b      	lsrs	r3, r3, #5
 8012280:	7463      	strb	r3, [r4, #17]
 8012282:	b007      	add	sp, #28
 8012284:	bd30      	pop	{r4, r5, pc}
 8012286:	bf00      	nop
 8012288:	080178b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, fp, ip, sp, lr}

0801228c <Ssd1306::Cls()>:
 801228c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012290:	4604      	mov	r4, r0
 8012292:	2600      	movs	r6, #0
 8012294:	7c45      	ldrb	r5, [r0, #17]
 8012296:	00ad      	lsls	r5, r5, #2
 8012298:	b2ed      	uxtb	r5, r5
 801229a:	f1a5 077f 	sub.w	r7, r5, #127	; 0x7f
 801229e:	f045 0810 	orr.w	r8, r5, #16
 80122a2:	b2ff      	uxtb	r7, r7
 80122a4:	6963      	ldr	r3, [r4, #20]
 80122a6:	4629      	mov	r1, r5
 80122a8:	42b3      	cmp	r3, r6
 80122aa:	4620      	mov	r0, r4
 80122ac:	d80b      	bhi.n	80122c6 <Ssd1306::Cls()+0x3a>
 80122ae:	f7ff ff0b 	bl	80120c8 <Ssd1306::SendCommand(unsigned char)>
 80122b2:	4641      	mov	r1, r8
 80122b4:	4620      	mov	r0, r4
 80122b6:	f7ff ff07 	bl	80120c8 <Ssd1306::SendCommand(unsigned char)>
 80122ba:	4620      	mov	r0, r4
 80122bc:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80122c0:	21b0      	movs	r1, #176	; 0xb0
 80122c2:	f7ff bf01 	b.w	80120c8 <Ssd1306::SendCommand(unsigned char)>
 80122c6:	f7ff feff 	bl	80120c8 <Ssd1306::SendCommand(unsigned char)>
 80122ca:	4641      	mov	r1, r8
 80122cc:	4620      	mov	r0, r4
 80122ce:	f7ff fefb 	bl	80120c8 <Ssd1306::SendCommand(unsigned char)>
 80122d2:	f066 014f 	orn	r1, r6, #79	; 0x4f
 80122d6:	4620      	mov	r0, r4
 80122d8:	b2c9      	uxtb	r1, r1
 80122da:	f7ff fef5 	bl	80120c8 <Ssd1306::SendCommand(unsigned char)>
 80122de:	7c23      	ldrb	r3, [r4, #16]
 80122e0:	b123      	cbz	r3, 80122ec <Ssd1306::Cls()+0x60>
 80122e2:	3b01      	subs	r3, #1
 80122e4:	2b01      	cmp	r3, #1
 80122e6:	d901      	bls.n	80122ec <Ssd1306::Cls()+0x60>
 80122e8:	3601      	adds	r6, #1
 80122ea:	e7db      	b.n	80122a4 <Ssd1306::Cls()+0x18>
 80122ec:	f104 0008 	add.w	r0, r4, #8
 80122f0:	f7ff fe86 	bl	8012000 <HAL_I2C::Setup()>
 80122f4:	4639      	mov	r1, r7
 80122f6:	4802      	ldr	r0, [pc, #8]	; (8012300 <Ssd1306::Cls()+0x74>)
 80122f8:	f001 fbe6 	bl	8013ac8 <gd32_i2c_write>
 80122fc:	e7f4      	b.n	80122e8 <Ssd1306::Cls()+0x5c>
 80122fe:	bf00      	nop
 8012300:	2001d924 	andcs	sp, r1, r4, lsr #18

08012304 <Ssd1306::Start()>:
 8012304:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8012306:	7a04      	ldrb	r4, [r0, #8]
 8012308:	68c6      	ldr	r6, [r0, #12]
 801230a:	4605      	mov	r5, r0
 801230c:	4620      	mov	r0, r4
 801230e:	f001 fbd5 	bl	8013abc <gd32_i2c_set_address>
 8012312:	4630      	mov	r0, r6
 8012314:	f001 fbca 	bl	8013aac <gd32_i2c_set_baudrate>
 8012318:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 801231c:	2b07      	cmp	r3, #7
 801231e:	d902      	bls.n	8012326 <Ssd1306::Start()+0x22>
 8012320:	3c50      	subs	r4, #80	; 0x50
 8012322:	2c0f      	cmp	r4, #15
 8012324:	d80f      	bhi.n	8012346 <Ssd1306::Start()+0x42>
 8012326:	2101      	movs	r1, #1
 8012328:	f10d 0007 	add.w	r0, sp, #7
 801232c:	f001 fc32 	bl	8013b94 <gd32_i2c_read>
 8012330:	fab0 f480 	clz	r4, r0
 8012334:	0964      	lsrs	r4, r4, #5
 8012336:	b35c      	cbz	r4, 8012390 <Ssd1306::Start()+0x8c>
 8012338:	7c2e      	ldrb	r6, [r5, #16]
 801233a:	b14e      	cbz	r6, 8012350 <Ssd1306::Start()+0x4c>
 801233c:	3e01      	subs	r6, #1
 801233e:	2e01      	cmp	r6, #1
 8012340:	d929      	bls.n	8012396 <Ssd1306::Start()+0x92>
 8012342:	2400      	movs	r4, #0
 8012344:	e024      	b.n	8012390 <Ssd1306::Start()+0x8c>
 8012346:	2100      	movs	r1, #0
 8012348:	4608      	mov	r0, r1
 801234a:	f001 fbbd 	bl	8013ac8 <gd32_i2c_write>
 801234e:	e7ef      	b.n	8012330 <Ssd1306::Start()+0x2c>
 8012350:	4f16      	ldr	r7, [pc, #88]	; (80123ac <Ssd1306::Start()+0xa8>)
 8012352:	4628      	mov	r0, r5
 8012354:	f817 1b01 	ldrb.w	r1, [r7], #1
 8012358:	3601      	adds	r6, #1
 801235a:	f7ff feb5 	bl	80120c8 <Ssd1306::SendCommand(unsigned char)>
 801235e:	2e18      	cmp	r6, #24
 8012360:	d1f7      	bne.n	8012352 <Ssd1306::Start()+0x4e>
 8012362:	2300      	movs	r3, #0
 8012364:	4a12      	ldr	r2, [pc, #72]	; (80123b0 <Ssd1306::Start()+0xac>)
 8012366:	4618      	mov	r0, r3
 8012368:	4611      	mov	r1, r2
 801236a:	3301      	adds	r3, #1
 801236c:	2b86      	cmp	r3, #134	; 0x86
 801236e:	f802 0b01 	strb.w	r0, [r2], #1
 8012372:	d1fa      	bne.n	801236a <Ssd1306::Start()+0x66>
 8012374:	2340      	movs	r3, #64	; 0x40
 8012376:	4628      	mov	r0, r5
 8012378:	700b      	strb	r3, [r1, #0]
 801237a:	f7ff ff31 	bl	80121e0 <Ssd1306::CheckSH1106()>
 801237e:	4628      	mov	r0, r5
 8012380:	f7ff ff84 	bl	801228c <Ssd1306::Cls()>
 8012384:	21af      	movs	r1, #175	; 0xaf
 8012386:	4628      	mov	r0, r5
 8012388:	f7ff fe9e 	bl	80120c8 <Ssd1306::SendCommand(unsigned char)>
 801238c:	2301      	movs	r3, #1
 801238e:	71eb      	strb	r3, [r5, #7]
 8012390:	4620      	mov	r0, r4
 8012392:	b003      	add	sp, #12
 8012394:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012396:	2600      	movs	r6, #0
 8012398:	4f06      	ldr	r7, [pc, #24]	; (80123b4 <Ssd1306::Start()+0xb0>)
 801239a:	4628      	mov	r0, r5
 801239c:	f817 1b01 	ldrb.w	r1, [r7], #1
 80123a0:	3601      	adds	r6, #1
 80123a2:	f7ff fe91 	bl	80120c8 <Ssd1306::SendCommand(unsigned char)>
 80123a6:	2e18      	cmp	r6, #24
 80123a8:	d1f7      	bne.n	801239a <Ssd1306::Start()+0x96>
 80123aa:	e7da      	b.n	8012362 <Ssd1306::Start()+0x5e>
 80123ac:	08017b78 	stmdaeq	r1, {r3, r4, r5, r6, r8, r9, fp, ip, sp, lr}
 80123b0:	2001d924 	andcs	sp, r1, r4, lsr #18
 80123b4:	08017b60 	stmdaeq	r1, {r5, r6, r8, r9, fp, ip, sp, lr}

080123b8 <console_putc>:
 80123b8:	f000 bb90 	b.w	8012adc <uart0_putc>

080123bc <console_puts>:
 80123bc:	f000 bbae 	b.w	8012b1c <uart0_puts>

080123c0 <console_set_fg_color>:
 80123c0:	2807      	cmp	r0, #7
 80123c2:	d810      	bhi.n	80123e6 <console_set_fg_color+0x26>
 80123c4:	e8df f000 	tbb	[pc, r0]
 80123c8:	0b090704 	bleq	8253fe0 <__exidx_end+0x23c314>
 80123cc:	0d0f0f0f 	stceq	15, cr0, [pc, #-60]	; 8012398 <Ssd1306::Start()+0x94>
 80123d0:	4806      	ldr	r0, [pc, #24]	; (80123ec <console_set_fg_color+0x2c>)
 80123d2:	f000 bba3 	b.w	8012b1c <uart0_puts>
 80123d6:	4806      	ldr	r0, [pc, #24]	; (80123f0 <console_set_fg_color+0x30>)
 80123d8:	e7fb      	b.n	80123d2 <console_set_fg_color+0x12>
 80123da:	4806      	ldr	r0, [pc, #24]	; (80123f4 <console_set_fg_color+0x34>)
 80123dc:	e7f9      	b.n	80123d2 <console_set_fg_color+0x12>
 80123de:	4806      	ldr	r0, [pc, #24]	; (80123f8 <console_set_fg_color+0x38>)
 80123e0:	e7f7      	b.n	80123d2 <console_set_fg_color+0x12>
 80123e2:	4806      	ldr	r0, [pc, #24]	; (80123fc <console_set_fg_color+0x3c>)
 80123e4:	e7f5      	b.n	80123d2 <console_set_fg_color+0x12>
 80123e6:	4806      	ldr	r0, [pc, #24]	; (8012400 <console_set_fg_color+0x40>)
 80123e8:	e7f3      	b.n	80123d2 <console_set_fg_color+0x12>
 80123ea:	bf00      	nop
 80123ec:	08017bd6 	stmdaeq	r1, {r1, r2, r4, r6, r7, r8, r9, fp, ip, sp, lr}
 80123f0:	08017bdc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r8, r9, fp, ip, sp, lr}
 80123f4:	08017be2 	stmdaeq	r1, {r1, r5, r6, r7, r8, r9, fp, ip, sp, lr}
 80123f8:	08017be8 	stmdaeq	r1, {r3, r5, r6, r7, r8, r9, fp, ip, sp, lr}
 80123fc:	08014cbf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r7, sl, fp, lr}
 8012400:	08017bee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, r8, r9, fp, ip, sp, lr}

08012404 <console_error>:
 8012404:	b510      	push	{r4, lr}
 8012406:	4604      	mov	r4, r0
 8012408:	4805      	ldr	r0, [pc, #20]	; (8012420 <console_error+0x1c>)
 801240a:	f000 fb87 	bl	8012b1c <uart0_puts>
 801240e:	4620      	mov	r0, r4
 8012410:	f000 fb84 	bl	8012b1c <uart0_puts>
 8012414:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012418:	4802      	ldr	r0, [pc, #8]	; (8012424 <console_error+0x20>)
 801241a:	f000 bb7f 	b.w	8012b1c <uart0_puts>
 801241e:	bf00      	nop
 8012420:	08017bdc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r8, r9, fp, ip, sp, lr}
 8012424:	08014cbf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r7, sl, fp, lr}

08012428 <console_status>:
 8012428:	b510      	push	{r4, lr}
 801242a:	460c      	mov	r4, r1
 801242c:	b280      	uxth	r0, r0
 801242e:	f7ff ffc7 	bl	80123c0 <console_set_fg_color>
 8012432:	4807      	ldr	r0, [pc, #28]	; (8012450 <console_status+0x28>)
 8012434:	f000 fb72 	bl	8012b1c <uart0_puts>
 8012438:	4620      	mov	r0, r4
 801243a:	f000 fb6f 	bl	8012b1c <uart0_puts>
 801243e:	200a      	movs	r0, #10
 8012440:	f000 fb4c 	bl	8012adc <uart0_putc>
 8012444:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012448:	4802      	ldr	r0, [pc, #8]	; (8012454 <console_status+0x2c>)
 801244a:	f000 bb67 	b.w	8012b1c <uart0_puts>
 801244e:	bf00      	nop
 8012450:	08017bd0 	stmdaeq	r1, {r4, r6, r7, r8, r9, fp, ip, sp, lr}
 8012454:	08014cbf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r7, sl, fp, lr}

08012458 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>:
 8012458:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801245c:	4617      	mov	r7, r2
 801245e:	461e      	mov	r6, r3
 8012460:	4d14      	ldr	r5, [pc, #80]	; (80124b4 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x5c>)
 8012462:	4b15      	ldr	r3, [pc, #84]	; (80124b8 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x60>)
 8012464:	b086      	sub	sp, #24
 8012466:	6018      	str	r0, [r3, #0]
 8012468:	4604      	mov	r4, r0
 801246a:	f105 0803 	add.w	r8, r5, #3
 801246e:	2203      	movs	r2, #3
 8012470:	4628      	mov	r0, r5
 8012472:	f000 f9f8 	bl	8012866 <memmove>
 8012476:	4639      	mov	r1, r7
 8012478:	220b      	movs	r2, #11
 801247a:	4640      	mov	r0, r8
 801247c:	f000 f9f3 	bl	8012866 <memmove>
 8012480:	f105 030e 	add.w	r3, r5, #14
 8012484:	4631      	mov	r1, r6
 8012486:	2208      	movs	r2, #8
 8012488:	4618      	mov	r0, r3
 801248a:	f000 f9ec 	bl	8012866 <memmove>
 801248e:	2308      	movs	r3, #8
 8012490:	e9cd 8303 	strd	r8, r3, [sp, #12]
 8012494:	230b      	movs	r3, #11
 8012496:	9302      	str	r3, [sp, #8]
 8012498:	4b08      	ldr	r3, [pc, #32]	; (80124bc <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x64>)
 801249a:	9005      	str	r0, [sp, #20]
 801249c:	e9cd 5300 	strd	r5, r3, [sp]
 80124a0:	213f      	movs	r1, #63	; 0x3f
 80124a2:	2303      	movs	r3, #3
 80124a4:	4a06      	ldr	r2, [pc, #24]	; (80124c0 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x68>)
 80124a6:	4807      	ldr	r0, [pc, #28]	; (80124c4 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x6c>)
 80124a8:	f7f7 f888 	bl	80095bc <snprintf>
 80124ac:	4620      	mov	r0, r4
 80124ae:	b006      	add	sp, #24
 80124b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80124b4:	2001d9b0 			; <UNDEFINED> instruction: 0x2001d9b0
 80124b8:	2001da08 	andcs	sp, r1, r8, lsl #20
 80124bc:	0801551c 	stmdaeq	r1, {r2, r3, r4, r8, sl, ip, lr}
 80124c0:	08017bf4 	stmdaeq	r1, {r2, r4, r5, r6, r7, r8, r9, fp, ip, sp, lr}
 80124c4:	2001d9c6 	andcs	sp, r1, r6, asr #19

080124c8 <FirmwareVersion::Print(char const*)>:
 80124c8:	b510      	push	{r4, lr}
 80124ca:	460c      	mov	r4, r1
 80124cc:	4804      	ldr	r0, [pc, #16]	; (80124e0 <FirmwareVersion::Print(char const*)+0x18>)
 80124ce:	f000 fa02 	bl	80128d6 <puts>
 80124d2:	b124      	cbz	r4, 80124de <FirmwareVersion::Print(char const*)+0x16>
 80124d4:	4620      	mov	r0, r4
 80124d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80124da:	f000 b9fc 	b.w	80128d6 <puts>
 80124de:	bd10      	pop	{r4, pc}
 80124e0:	2001d9c6 	andcs	sp, r1, r6, asr #19

080124e4 <LedBlink::LedBlink()>:
 80124e4:	b538      	push	{r3, r4, r5, lr}
 80124e6:	2205      	movs	r2, #5
 80124e8:	2300      	movs	r3, #0
 80124ea:	e9c0 3200 	strd	r3, r2, [r0]
 80124ee:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 80124f2:	6083      	str	r3, [r0, #8]
 80124f4:	e9c0 2303 	strd	r2, r3, [r0, #12]
 80124f8:	6143      	str	r3, [r0, #20]
 80124fa:	4b09      	ldr	r3, [pc, #36]	; (8012520 <LedBlink::LedBlink()+0x3c>)
 80124fc:	4d09      	ldr	r5, [pc, #36]	; (8012524 <LedBlink::LedBlink()+0x40>)
 80124fe:	4604      	mov	r4, r0
 8012500:	6018      	str	r0, [r3, #0]
 8012502:	f240 6004 	movw	r0, #1540	; 0x604
 8012506:	f000 fd77 	bl	8012ff8 <rcu_periph_clock_enable>
 801250a:	4628      	mov	r0, r5
 801250c:	2301      	movs	r3, #1
 801250e:	2203      	movs	r2, #3
 8012510:	2110      	movs	r1, #16
 8012512:	f000 fcd9 	bl	8012ec8 <gpio_init>
 8012516:	2301      	movs	r3, #1
 8012518:	4620      	mov	r0, r4
 801251a:	616b      	str	r3, [r5, #20]
 801251c:	bd38      	pop	{r3, r4, r5, pc}
 801251e:	bf00      	nop
 8012520:	2001da0c 	andcs	sp, r1, ip, lsl #20
 8012524:	40011000 	andmi	r1, r1, r0

08012528 <LedBlink::SetMode(ledblink::Mode)>:
 8012528:	6843      	ldr	r3, [r0, #4]
 801252a:	428b      	cmp	r3, r1
 801252c:	d02f      	beq.n	801258e <LedBlink::SetMode(ledblink::Mode)+0x66>
 801252e:	6041      	str	r1, [r0, #4]
 8012530:	2904      	cmp	r1, #4
 8012532:	d822      	bhi.n	801257a <LedBlink::SetMode(ledblink::Mode)+0x52>
 8012534:	e8df f001 	tbb	[pc, r1]
 8012538:	18120321 	ldmdane	r2, {r0, r5, r8, r9}
 801253c:	23ff001d 	mvnscs	r0, #29
 8012540:	6003      	str	r3, [r0, #0]
 8012542:	2300      	movs	r3, #0
 8012544:	2201      	movs	r2, #1
 8012546:	60c3      	str	r3, [r0, #12]
 8012548:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801254c:	f503 3388 	add.w	r3, r3, #69632	; 0x11000
 8012550:	611a      	str	r2, [r3, #16]
 8012552:	6880      	ldr	r0, [r0, #8]
 8012554:	b1d8      	cbz	r0, 801258e <LedBlink::SetMode(ledblink::Mode)+0x66>
 8012556:	6803      	ldr	r3, [r0, #0]
 8012558:	689b      	ldr	r3, [r3, #8]
 801255a:	4718      	bx	r3
 801255c:	2301      	movs	r3, #1
 801255e:	6003      	str	r3, [r0, #0]
 8012560:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8012564:	60c3      	str	r3, [r0, #12]
 8012566:	e7f4      	b.n	8012552 <LedBlink::SetMode(ledblink::Mode)+0x2a>
 8012568:	2303      	movs	r3, #3
 801256a:	6003      	str	r3, [r0, #0]
 801256c:	f240 134d 	movw	r3, #333	; 0x14d
 8012570:	e7f8      	b.n	8012564 <LedBlink::SetMode(ledblink::Mode)+0x3c>
 8012572:	2305      	movs	r3, #5
 8012574:	6003      	str	r3, [r0, #0]
 8012576:	23c8      	movs	r3, #200	; 0xc8
 8012578:	e7f4      	b.n	8012564 <LedBlink::SetMode(ledblink::Mode)+0x3c>
 801257a:	2300      	movs	r3, #0
 801257c:	2201      	movs	r2, #1
 801257e:	6003      	str	r3, [r0, #0]
 8012580:	60c3      	str	r3, [r0, #12]
 8012582:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8012586:	f503 3388 	add.w	r3, r3, #69632	; 0x11000
 801258a:	615a      	str	r2, [r3, #20]
 801258c:	e7e1      	b.n	8012552 <LedBlink::SetMode(ledblink::Mode)+0x2a>
 801258e:	4770      	bx	lr

08012590 <Hardware::Hardware()>:
 8012590:	b570      	push	{r4, r5, r6, lr}
 8012592:	2400      	movs	r4, #0
 8012594:	4b24      	ldr	r3, [pc, #144]	; (8012628 <Hardware::Hardware()+0x98>)
 8012596:	b090      	sub	sp, #64	; 0x40
 8012598:	7004      	strb	r4, [r0, #0]
 801259a:	6018      	str	r0, [r3, #0]
 801259c:	4605      	mov	r5, r0
 801259e:	f7f4 ffdb 	bl	8007558 <console_init>
 80125a2:	f000 facb 	bl	8012b3c <systick_config>
 80125a6:	f001 fcff 	bl	8013fa8 <udelay_init()>
 80125aa:	f001 fcaf 	bl	8013f0c <micros_init()>
 80125ae:	f240 701b 	movw	r0, #1819	; 0x71b
 80125b2:	f000 fd21 	bl	8012ff8 <rcu_periph_clock_enable>
 80125b6:	f240 701c 	movw	r0, #1820	; 0x71c
 80125ba:	f000 fd1d 	bl	8012ff8 <rcu_periph_clock_enable>
 80125be:	4e1b      	ldr	r6, [pc, #108]	; (801262c <Hardware::Hardware()+0x9c>)
 80125c0:	f000 fd12 	bl	8012fe8 <pmu_backup_write_enable>
 80125c4:	4621      	mov	r1, r4
 80125c6:	2002      	movs	r0, #2
 80125c8:	f000 fb5c 	bl	8012c84 <bkp_data_write>
 80125cc:	f240 7004 	movw	r0, #1796	; 0x704
 80125d0:	f000 fd12 	bl	8012ff8 <rcu_periph_clock_enable>
 80125d4:	4630      	mov	r0, r6
 80125d6:	f000 fe73 	bl	80132c0 <timer_deinit>
 80125da:	2377      	movs	r3, #119	; 0x77
 80125dc:	f8ad 300c 	strh.w	r3, [sp, #12]
 80125e0:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80125e4:	a903      	add	r1, sp, #12
 80125e6:	4630      	mov	r0, r6
 80125e8:	9305      	str	r3, [sp, #20]
 80125ea:	f000 ff0f 	bl	801340c <timer_init>
 80125ee:	4630      	mov	r0, r6
 80125f0:	f000 ff64 	bl	80134bc <timer_enable>
 80125f4:	f001 f9cc 	bl	8013990 <gd32_adc_init()>
 80125f8:	220a      	movs	r2, #10
 80125fa:	2309      	movs	r3, #9
 80125fc:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 8012600:	237a      	movs	r3, #122	; 0x7a
 8012602:	a807      	add	r0, sp, #28
 8012604:	930c      	str	r3, [sp, #48]	; 0x30
 8012606:	e9cd 4408 	strd	r4, r4, [sp, #32]
 801260a:	9407      	str	r4, [sp, #28]
 801260c:	940f      	str	r4, [sp, #60]	; 0x3c
 801260e:	f000 f9bb 	bl	8012988 <mktime>
 8012612:	4621      	mov	r1, r4
 8012614:	e9cd 0401 	strd	r0, r4, [sp, #4]
 8012618:	a801      	add	r0, sp, #4
 801261a:	f000 fa2b 	bl	8012a74 <settimeofday>
 801261e:	f001 fa11 	bl	8013a44 <gd32_i2c_begin>
 8012622:	4628      	mov	r0, r5
 8012624:	b010      	add	sp, #64	; 0x40
 8012626:	bd70      	pop	{r4, r5, r6, pc}
 8012628:	2001da10 	andcs	sp, r1, r0, lsl sl
 801262c:	40001000 	andmi	r1, r0, r0

08012630 <Hardware::GetUuid(unsigned char*)>:
 8012630:	4a0c      	ldr	r2, [pc, #48]	; (8012664 <Hardware::GetUuid(unsigned char*)+0x34>)
 8012632:	b084      	sub	sp, #16
 8012634:	f8d2 37e8 	ldr.w	r3, [r2, #2024]	; 0x7e8
 8012638:	9300      	str	r3, [sp, #0]
 801263a:	f8d2 07ec 	ldr.w	r0, [r2, #2028]	; 0x7ec
 801263e:	9001      	str	r0, [sp, #4]
 8012640:	f8d2 27f0 	ldr.w	r2, [r2, #2032]	; 0x7f0
 8012644:	4403      	add	r3, r0
 8012646:	4413      	add	r3, r2
 8012648:	9202      	str	r2, [sp, #8]
 801264a:	466a      	mov	r2, sp
 801264c:	9303      	str	r3, [sp, #12]
 801264e:	1e4b      	subs	r3, r1, #1
 8012650:	310f      	adds	r1, #15
 8012652:	428b      	cmp	r3, r1
 8012654:	d101      	bne.n	801265a <Hardware::GetUuid(unsigned char*)+0x2a>
 8012656:	b004      	add	sp, #16
 8012658:	4770      	bx	lr
 801265a:	f812 0b01 	ldrb.w	r0, [r2], #1
 801265e:	f803 0f01 	strb.w	r0, [r3, #1]!
 8012662:	e7f6      	b.n	8012652 <Hardware::GetUuid(unsigned char*)+0x22>
 8012664:	1ffff000 	svcne	0x00fff000

08012668 <Hardware::Reboot()>:
 8012668:	b508      	push	{r3, lr}
 801266a:	2300      	movs	r3, #0
 801266c:	4604      	mov	r4, r0
 801266e:	7003      	strb	r3, [r0, #0]
 8012670:	2104      	movs	r1, #4
 8012672:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8012676:	f000 fbfd 	bl	8012e74 <fwdgt_config>
 801267a:	4620      	mov	r0, r4
 801267c:	f7f6 f93c 	bl	80088f8 <Hardware::RebootHandler()>
 8012680:	2102      	movs	r1, #2
 8012682:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8012686:	f000 fbf5 	bl	8012e74 <fwdgt_config>
 801268a:	2801      	cmp	r0, #1
 801268c:	bf0c      	ite	eq
 801268e:	2301      	moveq	r3, #1
 8012690:	2300      	movne	r3, #0
 8012692:	7023      	strb	r3, [r4, #0]
 8012694:	d101      	bne.n	801269a <Hardware::Reboot()+0x32>
 8012696:	f000 fbdd 	bl	8012e54 <fwdgt_enable>
 801269a:	2208      	movs	r2, #8
 801269c:	4b0d      	ldr	r3, [pc, #52]	; (80126d4 <Hardware::Reboot()+0x6c>)
 801269e:	2501      	movs	r5, #1
 80126a0:	681b      	ldr	r3, [r3, #0]
 80126a2:	480d      	ldr	r0, [pc, #52]	; (80126d8 <Hardware::Reboot()+0x70>)
 80126a4:	601a      	str	r2, [r3, #0]
 80126a6:	227d      	movs	r2, #125	; 0x7d
 80126a8:	490c      	ldr	r1, [pc, #48]	; (80126dc <Hardware::Reboot()+0x74>)
 80126aa:	60da      	str	r2, [r3, #12]
 80126ac:	68dc      	ldr	r4, [r3, #12]
 80126ae:	b904      	cbnz	r4, 80126b2 <Hardware::Reboot()+0x4a>
 80126b0:	e7fe      	b.n	80126b0 <Hardware::Reboot()+0x48>
 80126b2:	6802      	ldr	r2, [r0, #0]
 80126b4:	695e      	ldr	r6, [r3, #20]
 80126b6:	1b92      	subs	r2, r2, r6
 80126b8:	4294      	cmp	r4, r2
 80126ba:	d8f8      	bhi.n	80126ae <Hardware::Reboot()+0x46>
 80126bc:	6802      	ldr	r2, [r0, #0]
 80126be:	615a      	str	r2, [r3, #20]
 80126c0:	691a      	ldr	r2, [r3, #16]
 80126c2:	2a01      	cmp	r2, #1
 80126c4:	f082 0401 	eor.w	r4, r2, #1
 80126c8:	611c      	str	r4, [r3, #16]
 80126ca:	bf14      	ite	ne
 80126cc:	610d      	strne	r5, [r1, #16]
 80126ce:	614a      	streq	r2, [r1, #20]
 80126d0:	e7ec      	b.n	80126ac <Hardware::Reboot()+0x44>
 80126d2:	bf00      	nop
 80126d4:	2001da0c 	andcs	sp, r1, ip, lsl #20
 80126d8:	2001da24 	andcs	sp, r1, r4, lsr #20
 80126dc:	40011000 	andmi	r1, r1, r0

080126e0 <operator delete(void*)>:
 80126e0:	f000 b890 	b.w	8012804 <free>

080126e4 <operator delete[](void*)>:
 80126e4:	f000 b88e 	b.w	8012804 <free>

080126e8 <operator new(unsigned int)>:
 80126e8:	f000 b842 	b.w	8012770 <malloc>

080126ec <operator new[](unsigned int)>:
 80126ec:	f000 b840 	b.w	8012770 <malloc>

080126f0 <inet_aton>:
 80126f0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80126f2:	f04f 0c0a 	mov.w	ip, #10
 80126f6:	2500      	movs	r5, #0
 80126f8:	ae01      	add	r6, sp, #4
 80126fa:	4603      	mov	r3, r0
 80126fc:	2200      	movs	r2, #0
 80126fe:	1d07      	adds	r7, r0, #4
 8012700:	e007      	b.n	8012712 <inet_aton+0x22>
 8012702:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8012706:	2b09      	cmp	r3, #9
 8012708:	d820      	bhi.n	801274c <inet_aton+0x5c>
 801270a:	4603      	mov	r3, r0
 801270c:	fb0c 4202 	mla	r2, ip, r2, r4
 8012710:	3a30      	subs	r2, #48	; 0x30
 8012712:	4618      	mov	r0, r3
 8012714:	f810 4b01 	ldrb.w	r4, [r0], #1
 8012718:	2c2e      	cmp	r4, #46	; 0x2e
 801271a:	d111      	bne.n	8012740 <inet_aton+0x50>
 801271c:	3501      	adds	r5, #1
 801271e:	2d03      	cmp	r5, #3
 8012720:	f806 2b01 	strb.w	r2, [r6], #1
 8012724:	d1e9      	bne.n	80126fa <inet_aton+0xa>
 8012726:	2200      	movs	r2, #0
 8012728:	250a      	movs	r5, #10
 801272a:	1d1c      	adds	r4, r3, #4
 801272c:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8012730:	f010 0fdf 	tst.w	r0, #223	; 0xdf
 8012734:	d10d      	bne.n	8012752 <inet_aton+0x62>
 8012736:	f88d 2007 	strb.w	r2, [sp, #7]
 801273a:	b9b1      	cbnz	r1, 801276a <inet_aton+0x7a>
 801273c:	2001      	movs	r0, #1
 801273e:	e006      	b.n	801274e <inet_aton+0x5e>
 8012740:	2c00      	cmp	r4, #0
 8012742:	d0eb      	beq.n	801271c <inet_aton+0x2c>
 8012744:	2c0a      	cmp	r4, #10
 8012746:	d0e9      	beq.n	801271c <inet_aton+0x2c>
 8012748:	42b8      	cmp	r0, r7
 801274a:	d1da      	bne.n	8012702 <inet_aton+0x12>
 801274c:	2000      	movs	r0, #0
 801274e:	b003      	add	sp, #12
 8012750:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012752:	280a      	cmp	r0, #10
 8012754:	d0ef      	beq.n	8012736 <inet_aton+0x46>
 8012756:	42a3      	cmp	r3, r4
 8012758:	d0f8      	beq.n	801274c <inet_aton+0x5c>
 801275a:	f1a0 0630 	sub.w	r6, r0, #48	; 0x30
 801275e:	2e09      	cmp	r6, #9
 8012760:	d8f4      	bhi.n	801274c <inet_aton+0x5c>
 8012762:	fb05 0202 	mla	r2, r5, r2, r0
 8012766:	3a30      	subs	r2, #48	; 0x30
 8012768:	e7e0      	b.n	801272c <inet_aton+0x3c>
 801276a:	9b01      	ldr	r3, [sp, #4]
 801276c:	600b      	str	r3, [r1, #0]
 801276e:	e7e5      	b.n	801273c <inet_aton+0x4c>

08012770 <malloc>:
 8012770:	b538      	push	{r3, r4, r5, lr}
 8012772:	4604      	mov	r4, r0
 8012774:	4601      	mov	r1, r0
 8012776:	481c      	ldr	r0, [pc, #112]	; (80127e8 <malloc+0x78>)
 8012778:	f7f6 fef8 	bl	800956c <printf>
 801277c:	b17c      	cbz	r4, 801279e <malloc+0x2e>
 801277e:	4b1b      	ldr	r3, [pc, #108]	; (80127ec <malloc+0x7c>)
 8012780:	6818      	ldr	r0, [r3, #0]
 8012782:	b978      	cbnz	r0, 80127a4 <malloc+0x34>
 8012784:	4a1a      	ldr	r2, [pc, #104]	; (80127f0 <malloc+0x80>)
 8012786:	f104 031b 	add.w	r3, r4, #27
 801278a:	6811      	ldr	r1, [r2, #0]
 801278c:	4819      	ldr	r0, [pc, #100]	; (80127f4 <malloc+0x84>)
 801278e:	f023 030f 	bic.w	r3, r3, #15
 8012792:	440b      	add	r3, r1
 8012794:	4283      	cmp	r3, r0
 8012796:	d921      	bls.n	80127dc <malloc+0x6c>
 8012798:	4817      	ldr	r0, [pc, #92]	; (80127f8 <malloc+0x88>)
 801279a:	f7f6 fee7 	bl	800956c <printf>
 801279e:	2500      	movs	r5, #0
 80127a0:	4628      	mov	r0, r5
 80127a2:	bd38      	pop	{r3, r4, r5, pc}
 80127a4:	4284      	cmp	r4, r0
 80127a6:	d80a      	bhi.n	80127be <malloc+0x4e>
 80127a8:	685a      	ldr	r2, [r3, #4]
 80127aa:	6899      	ldr	r1, [r3, #8]
 80127ac:	3201      	adds	r2, #1
 80127ae:	428a      	cmp	r2, r1
 80127b0:	605a      	str	r2, [r3, #4]
 80127b2:	d900      	bls.n	80127b6 <malloc+0x46>
 80127b4:	609a      	str	r2, [r3, #8]
 80127b6:	68d9      	ldr	r1, [r3, #12]
 80127b8:	b919      	cbnz	r1, 80127c2 <malloc+0x52>
 80127ba:	4604      	mov	r4, r0
 80127bc:	e7e2      	b.n	8012784 <malloc+0x14>
 80127be:	3310      	adds	r3, #16
 80127c0:	e7de      	b.n	8012780 <malloc+0x10>
 80127c2:	4604      	mov	r4, r0
 80127c4:	688a      	ldr	r2, [r1, #8]
 80127c6:	60da      	str	r2, [r3, #12]
 80127c8:	2300      	movs	r3, #0
 80127ca:	f101 050c 	add.w	r5, r1, #12
 80127ce:	608b      	str	r3, [r1, #8]
 80127d0:	4622      	mov	r2, r4
 80127d2:	462b      	mov	r3, r5
 80127d4:	4809      	ldr	r0, [pc, #36]	; (80127fc <malloc+0x8c>)
 80127d6:	f7f6 fec9 	bl	800956c <printf>
 80127da:	e7e1      	b.n	80127a0 <malloc+0x30>
 80127dc:	6013      	str	r3, [r2, #0]
 80127de:	4b08      	ldr	r3, [pc, #32]	; (8012800 <malloc+0x90>)
 80127e0:	e9c1 3400 	strd	r3, r4, [r1]
 80127e4:	e7f0      	b.n	80127c8 <malloc+0x58>
 80127e6:	bf00      	nop
 80127e8:	08017c18 	stmdaeq	r1, {r3, r4, sl, fp, ip, sp, lr}
 80127ec:	20000014 	andcs	r0, r0, r4, lsl r0
 80127f0:	20000010 	andcs	r0, r0, r0, lsl r0
 80127f4:	2003d800 	andcs	sp, r3, r0, lsl #16
 80127f8:	08017c24 	stmdaeq	r1, {r2, r5, sl, fp, ip, sp, lr}
 80127fc:	08017c40 	stmdaeq	r1, {r6, sl, fp, ip, sp, lr}
 8012800:	424c4d43 	submi	r4, ip, #4288	; 0x10c0

08012804 <free>:
 8012804:	b538      	push	{r3, r4, r5, lr}
 8012806:	4604      	mov	r4, r0
 8012808:	b1c8      	cbz	r0, 801283e <free+0x3a>
 801280a:	f1a0 050c 	sub.w	r5, r0, #12
 801280e:	4602      	mov	r2, r0
 8012810:	4629      	mov	r1, r5
 8012812:	480c      	ldr	r0, [pc, #48]	; (8012844 <free+0x40>)
 8012814:	f7f6 feaa 	bl	800956c <printf>
 8012818:	f854 2c0c 	ldr.w	r2, [r4, #-12]
 801281c:	4b0a      	ldr	r3, [pc, #40]	; (8012848 <free+0x44>)
 801281e:	429a      	cmp	r2, r3
 8012820:	d10d      	bne.n	801283e <free+0x3a>
 8012822:	4b0a      	ldr	r3, [pc, #40]	; (801284c <free+0x48>)
 8012824:	681a      	ldr	r2, [r3, #0]
 8012826:	b152      	cbz	r2, 801283e <free+0x3a>
 8012828:	f854 1c08 	ldr.w	r1, [r4, #-8]
 801282c:	4291      	cmp	r1, r2
 801282e:	d107      	bne.n	8012840 <free+0x3c>
 8012830:	68da      	ldr	r2, [r3, #12]
 8012832:	f844 2c04 	str.w	r2, [r4, #-4]
 8012836:	685a      	ldr	r2, [r3, #4]
 8012838:	60dd      	str	r5, [r3, #12]
 801283a:	3a01      	subs	r2, #1
 801283c:	605a      	str	r2, [r3, #4]
 801283e:	bd38      	pop	{r3, r4, r5, pc}
 8012840:	3310      	adds	r3, #16
 8012842:	e7ef      	b.n	8012824 <free+0x20>
 8012844:	08017c6b 	stmdaeq	r1, {r0, r1, r3, r5, r6, sl, fp, ip, sp, lr}
 8012848:	424c4d43 	submi	r4, ip, #4288	; 0x10c0
 801284c:	20000014 	andcs	r0, r0, r4, lsl r0

08012850 <memcpy>:
 8012850:	b510      	push	{r4, lr}
 8012852:	1e43      	subs	r3, r0, #1
 8012854:	440a      	add	r2, r1
 8012856:	4291      	cmp	r1, r2
 8012858:	d100      	bne.n	801285c <memcpy+0xc>
 801285a:	bd10      	pop	{r4, pc}
 801285c:	f811 4b01 	ldrb.w	r4, [r1], #1
 8012860:	f803 4f01 	strb.w	r4, [r3, #1]!
 8012864:	e7f7      	b.n	8012856 <memcpy+0x6>

08012866 <memmove>:
 8012866:	4288      	cmp	r0, r1
 8012868:	b510      	push	{r4, lr}
 801286a:	eb01 0302 	add.w	r3, r1, r2
 801286e:	d208      	bcs.n	8012882 <memmove+0x1c>
 8012870:	1e42      	subs	r2, r0, #1
 8012872:	4299      	cmp	r1, r3
 8012874:	d100      	bne.n	8012878 <memmove+0x12>
 8012876:	bd10      	pop	{r4, pc}
 8012878:	f811 4b01 	ldrb.w	r4, [r1], #1
 801287c:	f802 4f01 	strb.w	r4, [r2, #1]!
 8012880:	e7f7      	b.n	8012872 <memmove+0xc>
 8012882:	4601      	mov	r1, r0
 8012884:	4402      	add	r2, r0
 8012886:	428a      	cmp	r2, r1
 8012888:	d0f5      	beq.n	8012876 <memmove+0x10>
 801288a:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 801288e:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8012892:	e7f8      	b.n	8012886 <memmove+0x20>

08012894 <memset>:
 8012894:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012896:	b1c2      	cbz	r2, 80128ca <memset+0x36>
 8012898:	4603      	mov	r3, r0
 801289a:	b2c9      	uxtb	r1, r1
 801289c:	075c      	lsls	r4, r3, #29
 801289e:	d110      	bne.n	80128c2 <memset+0x2e>
 80128a0:	ea41 2401 	orr.w	r4, r1, r1, lsl #8
 80128a4:	ea44 4704 	orr.w	r7, r4, r4, lsl #16
 80128a8:	463d      	mov	r5, r7
 80128aa:	461e      	mov	r6, r3
 80128ac:	f022 0407 	bic.w	r4, r2, #7
 80128b0:	441c      	add	r4, r3
 80128b2:	42a6      	cmp	r6, r4
 80128b4:	d10a      	bne.n	80128cc <memset+0x38>
 80128b6:	4413      	add	r3, r2
 80128b8:	429c      	cmp	r4, r3
 80128ba:	d006      	beq.n	80128ca <memset+0x36>
 80128bc:	f804 1b01 	strb.w	r1, [r4], #1
 80128c0:	e7fa      	b.n	80128b8 <memset+0x24>
 80128c2:	3a01      	subs	r2, #1
 80128c4:	f803 1b01 	strb.w	r1, [r3], #1
 80128c8:	d1e8      	bne.n	801289c <memset+0x8>
 80128ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80128cc:	f846 7b08 	str.w	r7, [r6], #8
 80128d0:	f846 5c04 	str.w	r5, [r6, #-4]
 80128d4:	e7ed      	b.n	80128b2 <memset+0x1e>

080128d6 <puts>:
 80128d6:	b508      	push	{r3, lr}
 80128d8:	f7ff fd70 	bl	80123bc <console_puts>
 80128dc:	200a      	movs	r0, #10
 80128de:	f7ff fd6b 	bl	80123b8 <console_putc>
 80128e2:	2001      	movs	r0, #1
 80128e4:	bd08      	pop	{r3, pc}
	...

080128e8 <strtok>:
 80128e8:	b530      	push	{r4, r5, lr}
 80128ea:	b910      	cbnz	r0, 80128f2 <strtok+0xa>
 80128ec:	4b12      	ldr	r3, [pc, #72]	; (8012938 <strtok+0x50>)
 80128ee:	6818      	ldr	r0, [r3, #0]
 80128f0:	b158      	cbz	r0, 801290a <strtok+0x22>
 80128f2:	4603      	mov	r3, r0
 80128f4:	460d      	mov	r5, r1
 80128f6:	4618      	mov	r0, r3
 80128f8:	f813 2b01 	ldrb.w	r2, [r3], #1
 80128fc:	f815 4b01 	ldrb.w	r4, [r5], #1
 8012900:	b924      	cbnz	r4, 801290c <strtok+0x24>
 8012902:	b94a      	cbnz	r2, 8012918 <strtok+0x30>
 8012904:	4610      	mov	r0, r2
 8012906:	4b0c      	ldr	r3, [pc, #48]	; (8012938 <strtok+0x50>)
 8012908:	601a      	str	r2, [r3, #0]
 801290a:	bd30      	pop	{r4, r5, pc}
 801290c:	42a2      	cmp	r2, r4
 801290e:	d1f5      	bne.n	80128fc <strtok+0x14>
 8012910:	e7f0      	b.n	80128f4 <strtok+0xc>
 8012912:	4613      	mov	r3, r2
 8012914:	e00c      	b.n	8012930 <strtok+0x48>
 8012916:	b914      	cbnz	r4, 801291e <strtok+0x36>
 8012918:	460d      	mov	r5, r1
 801291a:	f813 2b01 	ldrb.w	r2, [r3], #1
 801291e:	f815 4b01 	ldrb.w	r4, [r5], #1
 8012922:	42a2      	cmp	r2, r4
 8012924:	d1f7      	bne.n	8012916 <strtok+0x2e>
 8012926:	2a00      	cmp	r2, #0
 8012928:	d0f3      	beq.n	8012912 <strtok+0x2a>
 801292a:	2200      	movs	r2, #0
 801292c:	f803 2c01 	strb.w	r2, [r3, #-1]
 8012930:	4a01      	ldr	r2, [pc, #4]	; (8012938 <strtok+0x50>)
 8012932:	6013      	str	r3, [r2, #0]
 8012934:	e7e9      	b.n	801290a <strtok+0x22>
 8012936:	bf00      	nop
 8012938:	2001da14 	andcs	sp, r1, r4, lsl sl

0801293c <isleapyear>:
 801293c:	2264      	movs	r2, #100	; 0x64
 801293e:	fb90 f3f2 	sdiv	r3, r0, r2
 8012942:	fb02 0313 	mls	r3, r2, r3, r0
 8012946:	b94b      	cbnz	r3, 801295c <isleapyear+0x20>
 8012948:	f44f 73c8 	mov.w	r3, #400	; 0x190
 801294c:	fb90 f2f3 	sdiv	r2, r0, r3
 8012950:	fb03 0012 	mls	r0, r3, r2, r0
 8012954:	fab0 f080 	clz	r0, r0
 8012958:	0940      	lsrs	r0, r0, #5
 801295a:	4770      	bx	lr
 801295c:	f010 0f03 	tst.w	r0, #3
 8012960:	bf0c      	ite	eq
 8012962:	2001      	moveq	r0, #1
 8012964:	2000      	movne	r0, #0
 8012966:	4770      	bx	lr

08012968 <getdaysofmonth>:
 8012968:	b510      	push	{r4, lr}
 801296a:	4604      	mov	r4, r0
 801296c:	2c01      	cmp	r4, #1
 801296e:	4608      	mov	r0, r1
 8012970:	d102      	bne.n	8012978 <getdaysofmonth+0x10>
 8012972:	f7ff ffe3 	bl	801293c <isleapyear>
 8012976:	b918      	cbnz	r0, 8012980 <getdaysofmonth+0x18>
 8012978:	4b02      	ldr	r3, [pc, #8]	; (8012984 <getdaysofmonth+0x1c>)
 801297a:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 801297e:	bd10      	pop	{r4, pc}
 8012980:	201d      	movs	r0, #29
 8012982:	e7fc      	b.n	801297e <getdaysofmonth+0x16>
 8012984:	08017c94 	stmdaeq	r1, {r2, r4, r7, sl, fp, ip, sp, lr}

08012988 <mktime>:
 8012988:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801298c:	4604      	mov	r4, r0
 801298e:	2800      	cmp	r0, #0
 8012990:	d043      	beq.n	8012a1a <mktime+0x92>
 8012992:	6941      	ldr	r1, [r0, #20]
 8012994:	f1a1 0346 	sub.w	r3, r1, #70	; 0x46
 8012998:	2b45      	cmp	r3, #69	; 0x45
 801299a:	d83e      	bhi.n	8012a1a <mktime+0x92>
 801299c:	2600      	movs	r6, #0
 801299e:	f240 75b2 	movw	r5, #1970	; 0x7b2
 80129a2:	f240 186d 	movw	r8, #365	; 0x16d
 80129a6:	f201 776b 	addw	r7, r1, #1899	; 0x76b
 80129aa:	42af      	cmp	r7, r5
 80129ac:	da24      	bge.n	80129f8 <mktime+0x70>
 80129ae:	6927      	ldr	r7, [r4, #16]
 80129b0:	2f0b      	cmp	r7, #11
 80129b2:	d832      	bhi.n	8012a1a <mktime+0x92>
 80129b4:	2500      	movs	r5, #0
 80129b6:	42af      	cmp	r7, r5
 80129b8:	d129      	bne.n	8012a0e <mktime+0x86>
 80129ba:	68e5      	ldr	r5, [r4, #12]
 80129bc:	2d00      	cmp	r5, #0
 80129be:	dd2c      	ble.n	8012a1a <mktime+0x92>
 80129c0:	4638      	mov	r0, r7
 80129c2:	f7ff ffd1 	bl	8012968 <getdaysofmonth>
 80129c6:	4285      	cmp	r5, r0
 80129c8:	dc27      	bgt.n	8012a1a <mktime+0x92>
 80129ca:	2318      	movs	r3, #24
 80129cc:	3d01      	subs	r5, #1
 80129ce:	4435      	add	r5, r6
 80129d0:	435d      	muls	r5, r3
 80129d2:	68a3      	ldr	r3, [r4, #8]
 80129d4:	2b17      	cmp	r3, #23
 80129d6:	d820      	bhi.n	8012a1a <mktime+0x92>
 80129d8:	213c      	movs	r1, #60	; 0x3c
 80129da:	442b      	add	r3, r5
 80129dc:	fb01 f203 	mul.w	r2, r1, r3
 80129e0:	6863      	ldr	r3, [r4, #4]
 80129e2:	2b3b      	cmp	r3, #59	; 0x3b
 80129e4:	d819      	bhi.n	8012a1a <mktime+0x92>
 80129e6:	6820      	ldr	r0, [r4, #0]
 80129e8:	4413      	add	r3, r2
 80129ea:	283b      	cmp	r0, #59	; 0x3b
 80129ec:	fb01 f303 	mul.w	r3, r1, r3
 80129f0:	d813      	bhi.n	8012a1a <mktime+0x92>
 80129f2:	4418      	add	r0, r3
 80129f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80129f8:	4628      	mov	r0, r5
 80129fa:	f7ff ff9f 	bl	801293c <isleapyear>
 80129fe:	2800      	cmp	r0, #0
 8012a00:	bf14      	ite	ne
 8012a02:	f44f 73b7 	movne.w	r3, #366	; 0x16e
 8012a06:	4643      	moveq	r3, r8
 8012a08:	3501      	adds	r5, #1
 8012a0a:	441e      	add	r6, r3
 8012a0c:	e7cd      	b.n	80129aa <mktime+0x22>
 8012a0e:	4628      	mov	r0, r5
 8012a10:	f7ff ffaa 	bl	8012968 <getdaysofmonth>
 8012a14:	3501      	adds	r5, #1
 8012a16:	4406      	add	r6, r0
 8012a18:	e7cd      	b.n	80129b6 <mktime+0x2e>
 8012a1a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8012a1e:	e7e9      	b.n	80129f4 <mktime+0x6c>

08012a20 <gettimeofday>:
 8012a20:	b538      	push	{r3, r4, r5, lr}
 8012a22:	4b10      	ldr	r3, [pc, #64]	; (8012a64 <gettimeofday+0x44>)
 8012a24:	4a10      	ldr	r2, [pc, #64]	; (8012a68 <gettimeofday+0x48>)
 8012a26:	681b      	ldr	r3, [r3, #0]
 8012a28:	6814      	ldr	r4, [r2, #0]
 8012a2a:	6013      	str	r3, [r2, #0]
 8012a2c:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8012a30:	429c      	cmp	r4, r3
 8012a32:	bf2c      	ite	cs
 8012a34:	1ae4      	subcs	r4, r4, r3
 8012a36:	1b1c      	subcc	r4, r3, r4
 8012a38:	4354      	muls	r4, r2
 8012a3a:	4b0c      	ldr	r3, [pc, #48]	; (8012a6c <gettimeofday+0x4c>)
 8012a3c:	4605      	mov	r5, r0
 8012a3e:	e9d3 2100 	ldrd	r2, r1, [r3]
 8012a42:	18a4      	adds	r4, r4, r2
 8012a44:	f141 0100 	adc.w	r1, r1, #0
 8012a48:	e9c3 4100 	strd	r4, r1, [r3]
 8012a4c:	4620      	mov	r0, r4
 8012a4e:	2300      	movs	r3, #0
 8012a50:	4a07      	ldr	r2, [pc, #28]	; (8012a70 <gettimeofday+0x50>)
 8012a52:	f7f5 fa6d 	bl	8007f30 <__aeabi_uldivmod>
 8012a56:	4b06      	ldr	r3, [pc, #24]	; (8012a70 <gettimeofday+0x50>)
 8012a58:	6028      	str	r0, [r5, #0]
 8012a5a:	fb03 4410 	mls	r4, r3, r0, r4
 8012a5e:	2000      	movs	r0, #0
 8012a60:	606c      	str	r4, [r5, #4]
 8012a62:	bd38      	pop	{r3, r4, r5, pc}
 8012a64:	2001da24 	andcs	sp, r1, r4, lsr #20
 8012a68:	2001da20 	andcs	sp, r1, r0, lsr #20
 8012a6c:	2001da18 	andcs	sp, r1, r8, lsl sl
 8012a70:	000f4240 	andeq	r4, pc, r0, asr #4

08012a74 <settimeofday>:
 8012a74:	4b07      	ldr	r3, [pc, #28]	; (8012a94 <settimeofday+0x20>)
 8012a76:	b510      	push	{r4, lr}
 8012a78:	681a      	ldr	r2, [r3, #0]
 8012a7a:	4b07      	ldr	r3, [pc, #28]	; (8012a98 <settimeofday+0x24>)
 8012a7c:	6804      	ldr	r4, [r0, #0]
 8012a7e:	601a      	str	r2, [r3, #0]
 8012a80:	6843      	ldr	r3, [r0, #4]
 8012a82:	4806      	ldr	r0, [pc, #24]	; (8012a9c <settimeofday+0x28>)
 8012a84:	17da      	asrs	r2, r3, #31
 8012a86:	fbc4 3200 	smlal	r3, r2, r4, r0
 8012a8a:	4905      	ldr	r1, [pc, #20]	; (8012aa0 <settimeofday+0x2c>)
 8012a8c:	2000      	movs	r0, #0
 8012a8e:	e9c1 3200 	strd	r3, r2, [r1]
 8012a92:	bd10      	pop	{r4, pc}
 8012a94:	2001da24 	andcs	sp, r1, r4, lsr #20
 8012a98:	2001da20 	andcs	sp, r1, r0, lsr #20
 8012a9c:	000f4240 	andeq	r4, pc, r0, asr #4
 8012aa0:	2001da18 	andcs	sp, r1, r8, lsl sl

08012aa4 <time>:
 8012aa4:	b513      	push	{r0, r1, r4, lr}
 8012aa6:	4604      	mov	r4, r0
 8012aa8:	2100      	movs	r1, #0
 8012aaa:	4668      	mov	r0, sp
 8012aac:	f7ff ffb8 	bl	8012a20 <gettimeofday>
 8012ab0:	9800      	ldr	r0, [sp, #0]
 8012ab2:	b104      	cbz	r4, 8012ab6 <time+0x12>
 8012ab4:	6020      	str	r0, [r4, #0]
 8012ab6:	b002      	add	sp, #8
 8012ab8:	bd10      	pop	{r4, pc}
	...

08012abc <uart0_init>:
 8012abc:	2301      	movs	r3, #1
 8012abe:	b507      	push	{r0, r1, r2, lr}
 8012ac0:	2208      	movs	r2, #8
 8012ac2:	9300      	str	r3, [sp, #0]
 8012ac4:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
 8012ac8:	2300      	movs	r3, #0
 8012aca:	4803      	ldr	r0, [pc, #12]	; (8012ad8 <uart0_init+0x1c>)
 8012acc:	f001 f906 	bl	8013cdc <gd32_uart_begin>
 8012ad0:	b003      	add	sp, #12
 8012ad2:	f85d fb04 	ldr.w	pc, [sp], #4
 8012ad6:	bf00      	nop
 8012ad8:	40013800 	andmi	r3, r1, r0, lsl #16

08012adc <uart0_putc>:
 8012adc:	280a      	cmp	r0, #10
 8012ade:	b538      	push	{r3, r4, r5, lr}
 8012ae0:	4604      	mov	r4, r0
 8012ae2:	d10a      	bne.n	8012afa <uart0_putc+0x1e>
 8012ae4:	4d0b      	ldr	r5, [pc, #44]	; (8012b14 <uart0_putc+0x38>)
 8012ae6:	2107      	movs	r1, #7
 8012ae8:	4628      	mov	r0, r5
 8012aea:	f000 ff2b 	bl	8013944 <usart_flag_get>
 8012aee:	2800      	cmp	r0, #0
 8012af0:	d0f9      	beq.n	8012ae6 <uart0_putc+0xa>
 8012af2:	220d      	movs	r2, #13
 8012af4:	4b08      	ldr	r3, [pc, #32]	; (8012b18 <uart0_putc+0x3c>)
 8012af6:	f8c3 2804 	str.w	r2, [r3, #2052]	; 0x804
 8012afa:	4d06      	ldr	r5, [pc, #24]	; (8012b14 <uart0_putc+0x38>)
 8012afc:	2107      	movs	r1, #7
 8012afe:	4628      	mov	r0, r5
 8012b00:	f000 ff20 	bl	8013944 <usart_flag_get>
 8012b04:	2800      	cmp	r0, #0
 8012b06:	d0f9      	beq.n	8012afc <uart0_putc+0x20>
 8012b08:	4b03      	ldr	r3, [pc, #12]	; (8012b18 <uart0_putc+0x3c>)
 8012b0a:	b2e4      	uxtb	r4, r4
 8012b0c:	f8c3 4804 	str.w	r4, [r3, #2052]	; 0x804
 8012b10:	bd38      	pop	{r3, r4, r5, pc}
 8012b12:	bf00      	nop
 8012b14:	40013800 	andmi	r3, r1, r0, lsl #16
 8012b18:	40013000 	andmi	r3, r1, r0

08012b1c <uart0_puts>:
 8012b1c:	b510      	push	{r4, lr}
 8012b1e:	1e44      	subs	r4, r0, #1
 8012b20:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8012b24:	b903      	cbnz	r3, 8012b28 <uart0_puts+0xc>
 8012b26:	bd10      	pop	{r4, pc}
 8012b28:	2b0a      	cmp	r3, #10
 8012b2a:	d102      	bne.n	8012b32 <uart0_puts+0x16>
 8012b2c:	200d      	movs	r0, #13
 8012b2e:	f7ff ffd5 	bl	8012adc <uart0_putc>
 8012b32:	7820      	ldrb	r0, [r4, #0]
 8012b34:	f7ff ffd2 	bl	8012adc <uart0_putc>
 8012b38:	e7f2      	b.n	8012b20 <uart0_puts+0x4>
	...

08012b3c <systick_config>:
 8012b3c:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8012b40:	4b0b      	ldr	r3, [pc, #44]	; (8012b70 <systick_config+0x34>)
 8012b42:	681b      	ldr	r3, [r3, #0]
 8012b44:	fbb3 f3f2 	udiv	r3, r3, r2
 8012b48:	3b01      	subs	r3, #1
 8012b4a:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8012b4e:	d20d      	bcs.n	8012b6c <systick_config+0x30>
 8012b50:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8012b54:	21f0      	movs	r1, #240	; 0xf0
 8012b56:	6153      	str	r3, [r2, #20]
 8012b58:	4b06      	ldr	r3, [pc, #24]	; (8012b74 <systick_config+0x38>)
 8012b5a:	2007      	movs	r0, #7
 8012b5c:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 8012b60:	2100      	movs	r1, #0
 8012b62:	6191      	str	r1, [r2, #24]
 8012b64:	6110      	str	r0, [r2, #16]
 8012b66:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 8012b6a:	4770      	bx	lr
 8012b6c:	e7fe      	b.n	8012b6c <systick_config+0x30>
 8012b6e:	bf00      	nop
 8012b70:	200000e4 	andcs	r0, r0, r4, ror #1
 8012b74:	e000ed00 	and	lr, r0, r0, lsl #26

08012b78 <SysTick_Handler>:
 8012b78:	4a02      	ldr	r2, [pc, #8]	; (8012b84 <SysTick_Handler+0xc>)
 8012b7a:	6813      	ldr	r3, [r2, #0]
 8012b7c:	3301      	adds	r3, #1
 8012b7e:	6013      	str	r3, [r2, #0]
 8012b80:	4770      	bx	lr
 8012b82:	bf00      	nop
 8012b84:	2001da24 	andcs	sp, r1, r4, lsr #20

08012b88 <SystemInit>:
 8012b88:	4b3a      	ldr	r3, [pc, #232]	; (8012c74 <SystemInit+0xec>)
 8012b8a:	681a      	ldr	r2, [r3, #0]
 8012b8c:	f042 0201 	orr.w	r2, r2, #1
 8012b90:	601a      	str	r2, [r3, #0]
 8012b92:	6859      	ldr	r1, [r3, #4]
 8012b94:	4a38      	ldr	r2, [pc, #224]	; (8012c78 <SystemInit+0xf0>)
 8012b96:	400a      	ands	r2, r1
 8012b98:	605a      	str	r2, [r3, #4]
 8012b9a:	681a      	ldr	r2, [r3, #0]
 8012b9c:	f44f 017f 	mov.w	r1, #16711680	; 0xff0000
 8012ba0:	f022 7284 	bic.w	r2, r2, #17301504	; 0x1080000
 8012ba4:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8012ba8:	601a      	str	r2, [r3, #0]
 8012baa:	681a      	ldr	r2, [r3, #0]
 8012bac:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8012bb0:	601a      	str	r2, [r3, #0]
 8012bb2:	685a      	ldr	r2, [r3, #4]
 8012bb4:	f022 5203 	bic.w	r2, r2, #549453824	; 0x20c00000
 8012bb8:	f422 127c 	bic.w	r2, r2, #4128768	; 0x3f0000
 8012bbc:	605a      	str	r2, [r3, #4]
 8012bbe:	681a      	ldr	r2, [r3, #0]
 8012bc0:	f022 52a0 	bic.w	r2, r2, #335544320	; 0x14000000
 8012bc4:	601a      	str	r2, [r3, #0]
 8012bc6:	2200      	movs	r2, #0
 8012bc8:	62da      	str	r2, [r3, #44]	; 0x2c
 8012bca:	6099      	str	r1, [r3, #8]
 8012bcc:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 8012bd0:	f8d3 2090 	ldr.w	r2, [r3, #144]	; 0x90
 8012bd4:	f022 5280 	bic.w	r2, r2, #268435456	; 0x10000000
 8012bd8:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
 8012bdc:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
 8012be0:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
 8012be4:	4a25      	ldr	r2, [pc, #148]	; (8012c7c <SystemInit+0xf4>)
 8012be6:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
 8012bea:	681a      	ldr	r2, [r3, #0]
 8012bec:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8012bf0:	601a      	str	r2, [r3, #0]
 8012bf2:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8012bf6:	6819      	ldr	r1, [r3, #0]
 8012bf8:	0389      	lsls	r1, r1, #14
 8012bfa:	d401      	bmi.n	8012c00 <SystemInit+0x78>
 8012bfc:	3a01      	subs	r2, #1
 8012bfe:	d1fa      	bne.n	8012bf6 <SystemInit+0x6e>
 8012c00:	681a      	ldr	r2, [r3, #0]
 8012c02:	0392      	lsls	r2, r2, #14
 8012c04:	d400      	bmi.n	8012c08 <SystemInit+0x80>
 8012c06:	e7fe      	b.n	8012c06 <SystemInit+0x7e>
 8012c08:	685a      	ldr	r2, [r3, #4]
 8012c0a:	605a      	str	r2, [r3, #4]
 8012c0c:	685a      	ldr	r2, [r3, #4]
 8012c0e:	605a      	str	r2, [r3, #4]
 8012c10:	685a      	ldr	r2, [r3, #4]
 8012c12:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8012c16:	605a      	str	r2, [r3, #4]
 8012c18:	685a      	ldr	r2, [r3, #4]
 8012c1a:	f022 5200 	bic.w	r2, r2, #536870912	; 0x20000000
 8012c1e:	f422 127c 	bic.w	r2, r2, #4128768	; 0x3f0000
 8012c22:	605a      	str	r2, [r3, #4]
 8012c24:	685a      	ldr	r2, [r3, #4]
 8012c26:	f442 1204 	orr.w	r2, r2, #2162688	; 0x210000
 8012c2a:	605a      	str	r2, [r3, #4]
 8012c2c:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8012c2e:	4a14      	ldr	r2, [pc, #80]	; (8012c80 <SystemInit+0xf8>)
 8012c30:	400a      	ands	r2, r1
 8012c32:	62da      	str	r2, [r3, #44]	; 0x2c
 8012c34:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8012c36:	f442 3285 	orr.w	r2, r2, #68096	; 0x10a00
 8012c3a:	f042 0244 	orr.w	r2, r2, #68	; 0x44
 8012c3e:	62da      	str	r2, [r3, #44]	; 0x2c
 8012c40:	681a      	ldr	r2, [r3, #0]
 8012c42:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8012c46:	601a      	str	r2, [r3, #0]
 8012c48:	681a      	ldr	r2, [r3, #0]
 8012c4a:	0110      	lsls	r0, r2, #4
 8012c4c:	d5fc      	bpl.n	8012c48 <SystemInit+0xc0>
 8012c4e:	681a      	ldr	r2, [r3, #0]
 8012c50:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 8012c54:	601a      	str	r2, [r3, #0]
 8012c56:	681a      	ldr	r2, [r3, #0]
 8012c58:	0191      	lsls	r1, r2, #6
 8012c5a:	d5fc      	bpl.n	8012c56 <SystemInit+0xce>
 8012c5c:	685a      	ldr	r2, [r3, #4]
 8012c5e:	f022 0203 	bic.w	r2, r2, #3
 8012c62:	605a      	str	r2, [r3, #4]
 8012c64:	685a      	ldr	r2, [r3, #4]
 8012c66:	f042 0202 	orr.w	r2, r2, #2
 8012c6a:	605a      	str	r2, [r3, #4]
 8012c6c:	685a      	ldr	r2, [r3, #4]
 8012c6e:	0712      	lsls	r2, r2, #28
 8012c70:	d5fc      	bpl.n	8012c6c <SystemInit+0xe4>
 8012c72:	4770      	bx	lr
 8012c74:	40021000 	andmi	r1, r2, r0
 8012c78:	e0ff000c 	rscs	r0, pc, ip
 8012c7c:	20003010 	andcs	r3, r0, r0, lsl r0
 8012c80:	fffef000 			; <UNDEFINED> instruction: 0xfffef000

08012c84 <bkp_data_write>:
 8012c84:	f1a0 030b 	sub.w	r3, r0, #11
 8012c88:	2b1f      	cmp	r3, #31
 8012c8a:	d804      	bhi.n	8012c96 <bkp_data_write+0x12>
 8012c8c:	4b07      	ldr	r3, [pc, #28]	; (8012cac <bkp_data_write+0x28>)
 8012c8e:	4403      	add	r3, r0
 8012c90:	009b      	lsls	r3, r3, #2
 8012c92:	8019      	strh	r1, [r3, #0]
 8012c94:	4770      	bx	lr
 8012c96:	1e43      	subs	r3, r0, #1
 8012c98:	2b09      	cmp	r3, #9
 8012c9a:	bf9f      	itttt	ls
 8012c9c:	f100 5080 	addls.w	r0, r0, #268435456	; 0x10000000
 8012ca0:	f500 50d8 	addls.w	r0, r0, #6912	; 0x1b00
 8012ca4:	0080      	lslls	r0, r0, #2
 8012ca6:	8001      	strhls	r1, [r0, #0]
 8012ca8:	4770      	bx	lr
 8012caa:	bf00      	nop
 8012cac:	10001b05 	andne	r1, r0, r5, lsl #22

08012cb0 <bkp_data_read>:
 8012cb0:	f1a0 030b 	sub.w	r3, r0, #11
 8012cb4:	2b1f      	cmp	r3, #31
 8012cb6:	d805      	bhi.n	8012cc4 <bkp_data_read+0x14>
 8012cb8:	4b08      	ldr	r3, [pc, #32]	; (8012cdc <bkp_data_read+0x2c>)
 8012cba:	4403      	add	r3, r0
 8012cbc:	009b      	lsls	r3, r3, #2
 8012cbe:	8818      	ldrh	r0, [r3, #0]
 8012cc0:	b280      	uxth	r0, r0
 8012cc2:	4770      	bx	lr
 8012cc4:	1e43      	subs	r3, r0, #1
 8012cc6:	2b09      	cmp	r3, #9
 8012cc8:	d806      	bhi.n	8012cd8 <bkp_data_read+0x28>
 8012cca:	f100 5080 	add.w	r0, r0, #268435456	; 0x10000000
 8012cce:	f500 50d8 	add.w	r0, r0, #6912	; 0x1b00
 8012cd2:	0080      	lsls	r0, r0, #2
 8012cd4:	8800      	ldrh	r0, [r0, #0]
 8012cd6:	e7f3      	b.n	8012cc0 <bkp_data_read+0x10>
 8012cd8:	2000      	movs	r0, #0
 8012cda:	4770      	bx	lr
 8012cdc:	10001b05 	andne	r1, r0, r5, lsl #22

08012ce0 <dma_deinit>:
 8012ce0:	2314      	movs	r3, #20
 8012ce2:	fb03 0301 	mla	r3, r3, r1, r0
 8012ce6:	689a      	ldr	r2, [r3, #8]
 8012ce8:	b530      	push	{r4, r5, lr}
 8012cea:	f022 0201 	bic.w	r2, r2, #1
 8012cee:	609a      	str	r2, [r3, #8]
 8012cf0:	2200      	movs	r2, #0
 8012cf2:	609a      	str	r2, [r3, #8]
 8012cf4:	60da      	str	r2, [r3, #12]
 8012cf6:	611a      	str	r2, [r3, #16]
 8012cf8:	615a      	str	r2, [r3, #20]
 8012cfa:	230f      	movs	r3, #15
 8012cfc:	6844      	ldr	r4, [r0, #4]
 8012cfe:	008d      	lsls	r5, r1, #2
 8012d00:	40ab      	lsls	r3, r5
 8012d02:	4323      	orrs	r3, r4
 8012d04:	6043      	str	r3, [r0, #4]
 8012d06:	4b04      	ldr	r3, [pc, #16]	; (8012d18 <dma_deinit+0x38>)
 8012d08:	4298      	cmp	r0, r3
 8012d0a:	d103      	bne.n	8012d14 <dma_deinit+0x34>
 8012d0c:	2905      	cmp	r1, #5
 8012d0e:	bf08      	it	eq
 8012d10:	f8c3 2300 	streq.w	r2, [r3, #768]	; 0x300
 8012d14:	bd30      	pop	{r4, r5, pc}
 8012d16:	bf00      	nop
 8012d18:	40020400 	andmi	r0, r2, r0, lsl #8

08012d1c <dma_struct_para_init>:
 8012d1c:	2300      	movs	r3, #0
 8012d1e:	e9c0 3300 	strd	r3, r3, [r0]
 8012d22:	e9c0 3302 	strd	r3, r3, [r0, #8]
 8012d26:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8012d2a:	8303      	strh	r3, [r0, #24]
 8012d2c:	7683      	strb	r3, [r0, #26]
 8012d2e:	4770      	bx	lr

08012d30 <dma_init>:
 8012d30:	2314      	movs	r3, #20
 8012d32:	fb03 0101 	mla	r1, r3, r1, r0
 8012d36:	6813      	ldr	r3, [r2, #0]
 8012d38:	b510      	push	{r4, lr}
 8012d3a:	610b      	str	r3, [r1, #16]
 8012d3c:	6893      	ldr	r3, [r2, #8]
 8012d3e:	614b      	str	r3, [r1, #20]
 8012d40:	8a13      	ldrh	r3, [r2, #16]
 8012d42:	60cb      	str	r3, [r1, #12]
 8012d44:	68d4      	ldr	r4, [r2, #12]
 8012d46:	6853      	ldr	r3, [r2, #4]
 8012d48:	6888      	ldr	r0, [r1, #8]
 8012d4a:	4323      	orrs	r3, r4
 8012d4c:	6954      	ldr	r4, [r2, #20]
 8012d4e:	f420 507c 	bic.w	r0, r0, #16128	; 0x3f00
 8012d52:	4323      	orrs	r3, r4
 8012d54:	4303      	orrs	r3, r0
 8012d56:	608b      	str	r3, [r1, #8]
 8012d58:	7e13      	ldrb	r3, [r2, #24]
 8012d5a:	2b01      	cmp	r3, #1
 8012d5c:	688b      	ldr	r3, [r1, #8]
 8012d5e:	bf0c      	ite	eq
 8012d60:	f043 0340 	orreq.w	r3, r3, #64	; 0x40
 8012d64:	f023 0340 	bicne.w	r3, r3, #64	; 0x40
 8012d68:	608b      	str	r3, [r1, #8]
 8012d6a:	7e53      	ldrb	r3, [r2, #25]
 8012d6c:	2b01      	cmp	r3, #1
 8012d6e:	688b      	ldr	r3, [r1, #8]
 8012d70:	bf0c      	ite	eq
 8012d72:	f043 0380 	orreq.w	r3, r3, #128	; 0x80
 8012d76:	f023 0380 	bicne.w	r3, r3, #128	; 0x80
 8012d7a:	608b      	str	r3, [r1, #8]
 8012d7c:	7e93      	ldrb	r3, [r2, #26]
 8012d7e:	b923      	cbnz	r3, 8012d8a <dma_init+0x5a>
 8012d80:	688b      	ldr	r3, [r1, #8]
 8012d82:	f023 0310 	bic.w	r3, r3, #16
 8012d86:	608b      	str	r3, [r1, #8]
 8012d88:	bd10      	pop	{r4, pc}
 8012d8a:	688b      	ldr	r3, [r1, #8]
 8012d8c:	f043 0310 	orr.w	r3, r3, #16
 8012d90:	e7f9      	b.n	8012d86 <dma_init+0x56>

08012d92 <dma_circulation_disable>:
 8012d92:	2314      	movs	r3, #20
 8012d94:	4359      	muls	r1, r3
 8012d96:	3008      	adds	r0, #8
 8012d98:	580b      	ldr	r3, [r1, r0]
 8012d9a:	f023 0320 	bic.w	r3, r3, #32
 8012d9e:	500b      	str	r3, [r1, r0]
 8012da0:	4770      	bx	lr

08012da2 <dma_memory_to_memory_disable>:
 8012da2:	2314      	movs	r3, #20
 8012da4:	4359      	muls	r1, r3
 8012da6:	3008      	adds	r0, #8
 8012da8:	580b      	ldr	r3, [r1, r0]
 8012daa:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8012dae:	500b      	str	r3, [r1, r0]
 8012db0:	4770      	bx	lr
	...

08012db4 <fmc_bank0_unlock>:
 8012db4:	4b04      	ldr	r3, [pc, #16]	; (8012dc8 <fmc_bank0_unlock+0x14>)
 8012db6:	691a      	ldr	r2, [r3, #16]
 8012db8:	0612      	lsls	r2, r2, #24
 8012dba:	bf41      	itttt	mi
 8012dbc:	4a03      	ldrmi	r2, [pc, #12]	; (8012dcc <fmc_bank0_unlock+0x18>)
 8012dbe:	605a      	strmi	r2, [r3, #4]
 8012dc0:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 8012dc4:	605a      	strmi	r2, [r3, #4]
 8012dc6:	4770      	bx	lr
 8012dc8:	40022000 	andmi	r2, r2, r0
 8012dcc:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

08012dd0 <fmc_bank1_unlock>:
 8012dd0:	4b04      	ldr	r3, [pc, #16]	; (8012de4 <fmc_bank1_unlock+0x14>)
 8012dd2:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8012dd4:	0612      	lsls	r2, r2, #24
 8012dd6:	bf41      	itttt	mi
 8012dd8:	4a03      	ldrmi	r2, [pc, #12]	; (8012de8 <fmc_bank1_unlock+0x18>)
 8012dda:	645a      	strmi	r2, [r3, #68]	; 0x44
 8012ddc:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 8012de0:	645a      	strmi	r2, [r3, #68]	; 0x44
 8012de2:	4770      	bx	lr
 8012de4:	40022000 	andmi	r2, r2, r0
 8012de8:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

08012dec <fmc_bank0_lock>:
 8012dec:	4a02      	ldr	r2, [pc, #8]	; (8012df8 <fmc_bank0_lock+0xc>)
 8012dee:	6913      	ldr	r3, [r2, #16]
 8012df0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8012df4:	6113      	str	r3, [r2, #16]
 8012df6:	4770      	bx	lr
 8012df8:	40022000 	andmi	r2, r2, r0

08012dfc <fmc_bank1_lock>:
 8012dfc:	4a02      	ldr	r2, [pc, #8]	; (8012e08 <fmc_bank1_lock+0xc>)
 8012dfe:	6d13      	ldr	r3, [r2, #80]	; 0x50
 8012e00:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8012e04:	6513      	str	r3, [r2, #80]	; 0x50
 8012e06:	4770      	bx	lr
 8012e08:	40022000 	andmi	r2, r2, r0

08012e0c <fmc_bank0_state_get>:
 8012e0c:	4b07      	ldr	r3, [pc, #28]	; (8012e2c <fmc_bank0_state_get+0x20>)
 8012e0e:	68da      	ldr	r2, [r3, #12]
 8012e10:	07d1      	lsls	r1, r2, #31
 8012e12:	d407      	bmi.n	8012e24 <fmc_bank0_state_get+0x18>
 8012e14:	68da      	ldr	r2, [r3, #12]
 8012e16:	06d2      	lsls	r2, r2, #27
 8012e18:	d406      	bmi.n	8012e28 <fmc_bank0_state_get+0x1c>
 8012e1a:	68d8      	ldr	r0, [r3, #12]
 8012e1c:	f3c0 0080 	ubfx	r0, r0, #2, #1
 8012e20:	0040      	lsls	r0, r0, #1
 8012e22:	4770      	bx	lr
 8012e24:	2001      	movs	r0, #1
 8012e26:	4770      	bx	lr
 8012e28:	2003      	movs	r0, #3
 8012e2a:	4770      	bx	lr
 8012e2c:	40022000 	andmi	r2, r2, r0

08012e30 <fmc_bank1_state_get>:
 8012e30:	4b07      	ldr	r3, [pc, #28]	; (8012e50 <fmc_bank1_state_get+0x20>)
 8012e32:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8012e34:	07d1      	lsls	r1, r2, #31
 8012e36:	d407      	bmi.n	8012e48 <fmc_bank1_state_get+0x18>
 8012e38:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8012e3a:	06d2      	lsls	r2, r2, #27
 8012e3c:	d406      	bmi.n	8012e4c <fmc_bank1_state_get+0x1c>
 8012e3e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8012e40:	f3c0 0080 	ubfx	r0, r0, #2, #1
 8012e44:	0040      	lsls	r0, r0, #1
 8012e46:	4770      	bx	lr
 8012e48:	2001      	movs	r0, #1
 8012e4a:	4770      	bx	lr
 8012e4c:	2003      	movs	r0, #3
 8012e4e:	4770      	bx	lr
 8012e50:	40022000 	andmi	r2, r2, r0

08012e54 <fwdgt_enable>:
 8012e54:	f64c 42cc 	movw	r2, #52428	; 0xcccc
 8012e58:	4b01      	ldr	r3, [pc, #4]	; (8012e60 <fwdgt_enable+0xc>)
 8012e5a:	601a      	str	r2, [r3, #0]
 8012e5c:	4770      	bx	lr
 8012e5e:	bf00      	nop
 8012e60:	40003000 	andmi	r3, r0, r0

08012e64 <fwdgt_counter_reload>:
 8012e64:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
 8012e68:	4b01      	ldr	r3, [pc, #4]	; (8012e70 <fwdgt_counter_reload+0xc>)
 8012e6a:	601a      	str	r2, [r3, #0]
 8012e6c:	4770      	bx	lr
 8012e6e:	bf00      	nop
 8012e70:	40003000 	andmi	r3, r0, r0

08012e74 <fwdgt_config>:
 8012e74:	f245 5355 	movw	r3, #21845	; 0x5555
 8012e78:	4a11      	ldr	r2, [pc, #68]	; (8012ec0 <fwdgt_config+0x4c>)
 8012e7a:	b510      	push	{r4, lr}
 8012e7c:	4c11      	ldr	r4, [pc, #68]	; (8012ec4 <fwdgt_config+0x50>)
 8012e7e:	6013      	str	r3, [r2, #0]
 8012e80:	68d3      	ldr	r3, [r2, #12]
 8012e82:	3c01      	subs	r4, #1
 8012e84:	f003 0301 	and.w	r3, r3, #1
 8012e88:	d013      	beq.n	8012eb2 <fwdgt_config+0x3e>
 8012e8a:	2b00      	cmp	r3, #0
 8012e8c:	d1f8      	bne.n	8012e80 <fwdgt_config+0xc>
 8012e8e:	6051      	str	r1, [r2, #4]
 8012e90:	490c      	ldr	r1, [pc, #48]	; (8012ec4 <fwdgt_config+0x50>)
 8012e92:	4a0b      	ldr	r2, [pc, #44]	; (8012ec0 <fwdgt_config+0x4c>)
 8012e94:	68d3      	ldr	r3, [r2, #12]
 8012e96:	3901      	subs	r1, #1
 8012e98:	f003 0302 	and.w	r3, r3, #2
 8012e9c:	d00d      	beq.n	8012eba <fwdgt_config+0x46>
 8012e9e:	2b00      	cmp	r3, #0
 8012ea0:	d1f8      	bne.n	8012e94 <fwdgt_config+0x20>
 8012ea2:	f64a 23aa 	movw	r3, #43690	; 0xaaaa
 8012ea6:	f3c0 000b 	ubfx	r0, r0, #0, #12
 8012eaa:	6090      	str	r0, [r2, #8]
 8012eac:	2001      	movs	r0, #1
 8012eae:	6013      	str	r3, [r2, #0]
 8012eb0:	e002      	b.n	8012eb8 <fwdgt_config+0x44>
 8012eb2:	2b00      	cmp	r3, #0
 8012eb4:	d0eb      	beq.n	8012e8e <fwdgt_config+0x1a>
 8012eb6:	2000      	movs	r0, #0
 8012eb8:	bd10      	pop	{r4, pc}
 8012eba:	2b00      	cmp	r3, #0
 8012ebc:	d1fb      	bne.n	8012eb6 <fwdgt_config+0x42>
 8012ebe:	e7f0      	b.n	8012ea2 <fwdgt_config+0x2e>
 8012ec0:	40003000 	andmi	r3, r0, r0
 8012ec4:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

08012ec8 <gpio_init>:
 8012ec8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012ecc:	f04f 0c0f 	mov.w	ip, #15
 8012ed0:	06cf      	lsls	r7, r1, #27
 8012ed2:	f04f 0400 	mov.w	r4, #0
 8012ed6:	f04f 0701 	mov.w	r7, #1
 8012eda:	f001 050f 	and.w	r5, r1, #15
 8012ede:	bf48      	it	mi
 8012ee0:	4315      	orrmi	r5, r2
 8012ee2:	fa23 f204 	lsr.w	r2, r3, r4
 8012ee6:	07d6      	lsls	r6, r2, #31
 8012ee8:	d510      	bpl.n	8012f0c <gpio_init+0x44>
 8012eea:	00a2      	lsls	r2, r4, #2
 8012eec:	6806      	ldr	r6, [r0, #0]
 8012eee:	fa0c fe02 	lsl.w	lr, ip, r2
 8012ef2:	ea26 060e 	bic.w	r6, r6, lr
 8012ef6:	fa05 f202 	lsl.w	r2, r5, r2
 8012efa:	2928      	cmp	r1, #40	; 0x28
 8012efc:	ea42 0206 	orr.w	r2, r2, r6
 8012f00:	d128      	bne.n	8012f54 <gpio_init+0x8c>
 8012f02:	fa07 f604 	lsl.w	r6, r7, r4
 8012f06:	401e      	ands	r6, r3
 8012f08:	6146      	str	r6, [r0, #20]
 8012f0a:	6002      	str	r2, [r0, #0]
 8012f0c:	3401      	adds	r4, #1
 8012f0e:	2c08      	cmp	r4, #8
 8012f10:	d1e7      	bne.n	8012ee2 <gpio_init+0x1a>
 8012f12:	2600      	movs	r6, #0
 8012f14:	f04f 0c0f 	mov.w	ip, #15
 8012f18:	2701      	movs	r7, #1
 8012f1a:	f106 0208 	add.w	r2, r6, #8
 8012f1e:	fa23 f402 	lsr.w	r4, r3, r2
 8012f22:	07e4      	lsls	r4, r4, #31
 8012f24:	d511      	bpl.n	8012f4a <gpio_init+0x82>
 8012f26:	00b4      	lsls	r4, r6, #2
 8012f28:	f8d0 e004 	ldr.w	lr, [r0, #4]
 8012f2c:	fa0c f804 	lsl.w	r8, ip, r4
 8012f30:	ea2e 0e08 	bic.w	lr, lr, r8
 8012f34:	fa05 f404 	lsl.w	r4, r5, r4
 8012f38:	2928      	cmp	r1, #40	; 0x28
 8012f3a:	ea44 040e 	orr.w	r4, r4, lr
 8012f3e:	d110      	bne.n	8012f62 <gpio_init+0x9a>
 8012f40:	fa07 f202 	lsl.w	r2, r7, r2
 8012f44:	401a      	ands	r2, r3
 8012f46:	6142      	str	r2, [r0, #20]
 8012f48:	6044      	str	r4, [r0, #4]
 8012f4a:	3601      	adds	r6, #1
 8012f4c:	2e08      	cmp	r6, #8
 8012f4e:	d1e4      	bne.n	8012f1a <gpio_init+0x52>
 8012f50:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012f54:	2948      	cmp	r1, #72	; 0x48
 8012f56:	bf02      	ittt	eq
 8012f58:	fa07 f604 	lsleq.w	r6, r7, r4
 8012f5c:	401e      	andeq	r6, r3
 8012f5e:	6106      	streq	r6, [r0, #16]
 8012f60:	e7d3      	b.n	8012f0a <gpio_init+0x42>
 8012f62:	2948      	cmp	r1, #72	; 0x48
 8012f64:	bf02      	ittt	eq
 8012f66:	fa07 f202 	lsleq.w	r2, r7, r2
 8012f6a:	401a      	andeq	r2, r3
 8012f6c:	6102      	streq	r2, [r0, #16]
 8012f6e:	e7eb      	b.n	8012f48 <gpio_init+0x80>

08012f70 <gpio_pin_remap_config>:
 8012f70:	2800      	cmp	r0, #0
 8012f72:	4a16      	ldr	r2, [pc, #88]	; (8012fcc <gpio_pin_remap_config+0x5c>)
 8012f74:	b530      	push	{r4, r5, lr}
 8012f76:	f400 1540 	and.w	r5, r0, #3145728	; 0x300000
 8012f7a:	bfb4      	ite	lt
 8012f7c:	69d3      	ldrlt	r3, [r2, #28]
 8012f7e:	6853      	ldrge	r3, [r2, #4]
 8012f80:	f5b5 1f40 	cmp.w	r5, #3145728	; 0x300000
 8012f84:	b284      	uxth	r4, r0
 8012f86:	d110      	bne.n	8012faa <gpio_pin_remap_config+0x3a>
 8012f88:	6855      	ldr	r5, [r2, #4]
 8012f8a:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 8012f8e:	f025 6570 	bic.w	r5, r5, #251658240	; 0xf000000
 8012f92:	6055      	str	r5, [r2, #4]
 8012f94:	b119      	cbz	r1, 8012f9e <gpio_pin_remap_config+0x2e>
 8012f96:	0d42      	lsrs	r2, r0, #21
 8012f98:	0112      	lsls	r2, r2, #4
 8012f9a:	4094      	lsls	r4, r2
 8012f9c:	4323      	orrs	r3, r4
 8012f9e:	4a0b      	ldr	r2, [pc, #44]	; (8012fcc <gpio_pin_remap_config+0x5c>)
 8012fa0:	2800      	cmp	r0, #0
 8012fa2:	bfb4      	ite	lt
 8012fa4:	61d3      	strlt	r3, [r2, #28]
 8012fa6:	6053      	strge	r3, [r2, #4]
 8012fa8:	bd30      	pop	{r4, r5, pc}
 8012faa:	02c2      	lsls	r2, r0, #11
 8012fac:	bf4d      	iteet	mi
 8012fae:	2203      	movmi	r2, #3
 8012fb0:	0d42      	lsrpl	r2, r0, #21
 8012fb2:	0112      	lslpl	r2, r2, #4
 8012fb4:	f3c0 4503 	ubfxmi	r5, r0, #16, #4
 8012fb8:	bf4c      	ite	mi
 8012fba:	40aa      	lslmi	r2, r5
 8012fbc:	fa04 f202 	lslpl.w	r2, r4, r2
 8012fc0:	ea23 0302 	bic.w	r3, r3, r2
 8012fc4:	f043 6370 	orr.w	r3, r3, #251658240	; 0xf000000
 8012fc8:	e7e4      	b.n	8012f94 <gpio_pin_remap_config+0x24>
 8012fca:	bf00      	nop
 8012fcc:	40010000 	andmi	r0, r1, r0

08012fd0 <gpio_ethernet_phy_select>:
 8012fd0:	4b04      	ldr	r3, [pc, #16]	; (8012fe4 <gpio_ethernet_phy_select+0x14>)
 8012fd2:	685a      	ldr	r2, [r3, #4]
 8012fd4:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8012fd8:	605a      	str	r2, [r3, #4]
 8012fda:	685a      	ldr	r2, [r3, #4]
 8012fdc:	4302      	orrs	r2, r0
 8012fde:	605a      	str	r2, [r3, #4]
 8012fe0:	4770      	bx	lr
 8012fe2:	bf00      	nop
 8012fe4:	40010000 	andmi	r0, r1, r0

08012fe8 <pmu_backup_write_enable>:
 8012fe8:	4a02      	ldr	r2, [pc, #8]	; (8012ff4 <pmu_backup_write_enable+0xc>)
 8012fea:	6813      	ldr	r3, [r2, #0]
 8012fec:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8012ff0:	6013      	str	r3, [r2, #0]
 8012ff2:	4770      	bx	lr
 8012ff4:	40007000 	andmi	r7, r0, r0

08012ff8 <rcu_periph_clock_enable>:
 8012ff8:	2201      	movs	r2, #1
 8012ffa:	0983      	lsrs	r3, r0, #6
 8012ffc:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8013000:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 8013004:	6819      	ldr	r1, [r3, #0]
 8013006:	f000 001f 	and.w	r0, r0, #31
 801300a:	4082      	lsls	r2, r0
 801300c:	430a      	orrs	r2, r1
 801300e:	601a      	str	r2, [r3, #0]
 8013010:	4770      	bx	lr

08013012 <rcu_periph_clock_disable>:
 8013012:	2101      	movs	r1, #1
 8013014:	0983      	lsrs	r3, r0, #6
 8013016:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801301a:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 801301e:	681a      	ldr	r2, [r3, #0]
 8013020:	f000 001f 	and.w	r0, r0, #31
 8013024:	4081      	lsls	r1, r0
 8013026:	ea22 0201 	bic.w	r2, r2, r1
 801302a:	601a      	str	r2, [r3, #0]
 801302c:	4770      	bx	lr

0801302e <rcu_periph_reset_enable>:
 801302e:	f7ff bfe3 	b.w	8012ff8 <rcu_periph_clock_enable>

08013032 <rcu_periph_reset_disable>:
 8013032:	f7ff bfee 	b.w	8013012 <rcu_periph_clock_disable>
	...

08013038 <rcu_ckout0_config>:
 8013038:	4a06      	ldr	r2, [pc, #24]	; (8013054 <rcu_ckout0_config+0x1c>)
 801303a:	6853      	ldr	r3, [r2, #4]
 801303c:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 8013040:	4303      	orrs	r3, r0
 8013042:	6053      	str	r3, [r2, #4]
 8013044:	f8d2 3080 	ldr.w	r3, [r2, #128]	; 0x80
 8013048:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 801304c:	430b      	orrs	r3, r1
 801304e:	f8c2 3080 	str.w	r3, [r2, #128]	; 0x80
 8013052:	4770      	bx	lr
 8013054:	40021000 	andmi	r1, r2, r0

08013058 <rcu_pll2_config>:
 8013058:	4b04      	ldr	r3, [pc, #16]	; (801306c <rcu_pll2_config+0x14>)
 801305a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 801305c:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
 8013060:	62da      	str	r2, [r3, #44]	; 0x2c
 8013062:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8013064:	4302      	orrs	r2, r0
 8013066:	62da      	str	r2, [r3, #44]	; 0x2c
 8013068:	4770      	bx	lr
 801306a:	bf00      	nop
 801306c:	40021000 	andmi	r1, r2, r0

08013070 <rcu_adc_clock_config>:
 8013070:	490c      	ldr	r1, [pc, #48]	; (80130a4 <rcu_adc_clock_config+0x34>)
 8013072:	2805      	cmp	r0, #5
 8013074:	684b      	ldr	r3, [r1, #4]
 8013076:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 801307a:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 801307e:	d006      	beq.n	801308e <rcu_adc_clock_config+0x1e>
 8013080:	d803      	bhi.n	801308a <rcu_adc_clock_config+0x1a>
 8013082:	2804      	cmp	r0, #4
 8013084:	d10a      	bne.n	801309c <rcu_adc_clock_config+0x2c>
 8013086:	604b      	str	r3, [r1, #4]
 8013088:	4770      	bx	lr
 801308a:	2807      	cmp	r0, #7
 801308c:	d1fb      	bne.n	8013086 <rcu_adc_clock_config+0x16>
 801308e:	4a06      	ldr	r2, [pc, #24]	; (80130a8 <rcu_adc_clock_config+0x38>)
 8013090:	ea02 3280 	and.w	r2, r2, r0, lsl #14
 8013094:	4313      	orrs	r3, r2
 8013096:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 801309a:	e7f4      	b.n	8013086 <rcu_adc_clock_config+0x16>
 801309c:	ea43 3380 	orr.w	r3, r3, r0, lsl #14
 80130a0:	e7f1      	b.n	8013086 <rcu_adc_clock_config+0x16>
 80130a2:	bf00      	nop
 80130a4:	40021000 	andmi	r1, r2, r0
 80130a8:	fffec000 			; <UNDEFINED> instruction: 0xfffec000

080130ac <rcu_flag_get>:
 80130ac:	0983      	lsrs	r3, r0, #6
 80130ae:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80130b2:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 80130b6:	681a      	ldr	r2, [r3, #0]
 80130b8:	2301      	movs	r3, #1
 80130ba:	f000 001f 	and.w	r0, r0, #31
 80130be:	4083      	lsls	r3, r0
 80130c0:	4213      	tst	r3, r2
 80130c2:	bf14      	ite	ne
 80130c4:	2001      	movne	r0, #1
 80130c6:	2000      	moveq	r0, #0
 80130c8:	4770      	bx	lr
	...

080130cc <rcu_osci_stab_wait>:
 80130cc:	281c      	cmp	r0, #28
 80130ce:	b508      	push	{r3, lr}
 80130d0:	d056      	beq.n	8013180 <rcu_osci_stab_wait+0xb4>
 80130d2:	d812      	bhi.n	80130fa <rcu_osci_stab_wait+0x2e>
 80130d4:	2818      	cmp	r0, #24
 80130d6:	d04a      	beq.n	801316e <rcu_osci_stab_wait+0xa2>
 80130d8:	d804      	bhi.n	80130e4 <rcu_osci_stab_wait+0x18>
 80130da:	b398      	cbz	r0, 8013144 <rcu_osci_stab_wait+0x78>
 80130dc:	2810      	cmp	r0, #16
 80130de:	d022      	beq.n	8013126 <rcu_osci_stab_wait+0x5a>
 80130e0:	2000      	movs	r0, #0
 80130e2:	bd08      	pop	{r3, pc}
 80130e4:	281a      	cmp	r0, #26
 80130e6:	d1fb      	bne.n	80130e0 <rcu_osci_stab_wait+0x14>
 80130e8:	492f      	ldr	r1, [pc, #188]	; (80131a8 <rcu_osci_stab_wait+0xdc>)
 80130ea:	201b      	movs	r0, #27
 80130ec:	f7ff ffde 	bl	80130ac <rcu_flag_get>
 80130f0:	b908      	cbnz	r0, 80130f6 <rcu_osci_stab_wait+0x2a>
 80130f2:	3901      	subs	r1, #1
 80130f4:	d1f9      	bne.n	80130ea <rcu_osci_stab_wait+0x1e>
 80130f6:	201b      	movs	r0, #27
 80130f8:	e01e      	b.n	8013138 <rcu_osci_stab_wait+0x6c>
 80130fa:	f5b0 6f10 	cmp.w	r0, #2304	; 0x900
 80130fe:	d02b      	beq.n	8013158 <rcu_osci_stab_wait+0x8c>
 8013100:	f242 431c 	movw	r3, #9244	; 0x241c
 8013104:	4298      	cmp	r0, r3
 8013106:	d044      	beq.n	8013192 <rcu_osci_stab_wait+0xc6>
 8013108:	f5b0 6f00 	cmp.w	r0, #2048	; 0x800
 801310c:	d1e8      	bne.n	80130e0 <rcu_osci_stab_wait+0x14>
 801310e:	f06f 417c 	mvn.w	r1, #4227858432	; 0xfc000000
 8013112:	f640 0001 	movw	r0, #2049	; 0x801
 8013116:	f7ff ffc9 	bl	80130ac <rcu_flag_get>
 801311a:	b908      	cbnz	r0, 8013120 <rcu_osci_stab_wait+0x54>
 801311c:	3901      	subs	r1, #1
 801311e:	d1f8      	bne.n	8013112 <rcu_osci_stab_wait+0x46>
 8013120:	f640 0001 	movw	r0, #2049	; 0x801
 8013124:	e008      	b.n	8013138 <rcu_osci_stab_wait+0x6c>
 8013126:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801312a:	2011      	movs	r0, #17
 801312c:	f7ff ffbe 	bl	80130ac <rcu_flag_get>
 8013130:	b908      	cbnz	r0, 8013136 <rcu_osci_stab_wait+0x6a>
 8013132:	3901      	subs	r1, #1
 8013134:	d1f9      	bne.n	801312a <rcu_osci_stab_wait+0x5e>
 8013136:	2011      	movs	r0, #17
 8013138:	f7ff ffb8 	bl	80130ac <rcu_flag_get>
 801313c:	3800      	subs	r0, #0
 801313e:	bf18      	it	ne
 8013140:	2001      	movne	r0, #1
 8013142:	e7ce      	b.n	80130e2 <rcu_osci_stab_wait+0x16>
 8013144:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8013148:	2001      	movs	r0, #1
 801314a:	f7ff ffaf 	bl	80130ac <rcu_flag_get>
 801314e:	b908      	cbnz	r0, 8013154 <rcu_osci_stab_wait+0x88>
 8013150:	3901      	subs	r1, #1
 8013152:	d1f9      	bne.n	8013148 <rcu_osci_stab_wait+0x7c>
 8013154:	2001      	movs	r0, #1
 8013156:	e7ef      	b.n	8013138 <rcu_osci_stab_wait+0x6c>
 8013158:	4913      	ldr	r1, [pc, #76]	; (80131a8 <rcu_osci_stab_wait+0xdc>)
 801315a:	f640 1001 	movw	r0, #2305	; 0x901
 801315e:	f7ff ffa5 	bl	80130ac <rcu_flag_get>
 8013162:	b908      	cbnz	r0, 8013168 <rcu_osci_stab_wait+0x9c>
 8013164:	3901      	subs	r1, #1
 8013166:	d1f8      	bne.n	801315a <rcu_osci_stab_wait+0x8e>
 8013168:	f640 1001 	movw	r0, #2305	; 0x901
 801316c:	e7e4      	b.n	8013138 <rcu_osci_stab_wait+0x6c>
 801316e:	490e      	ldr	r1, [pc, #56]	; (80131a8 <rcu_osci_stab_wait+0xdc>)
 8013170:	2019      	movs	r0, #25
 8013172:	f7ff ff9b 	bl	80130ac <rcu_flag_get>
 8013176:	b908      	cbnz	r0, 801317c <rcu_osci_stab_wait+0xb0>
 8013178:	3901      	subs	r1, #1
 801317a:	d1f9      	bne.n	8013170 <rcu_osci_stab_wait+0xa4>
 801317c:	2019      	movs	r0, #25
 801317e:	e7db      	b.n	8013138 <rcu_osci_stab_wait+0x6c>
 8013180:	4909      	ldr	r1, [pc, #36]	; (80131a8 <rcu_osci_stab_wait+0xdc>)
 8013182:	201d      	movs	r0, #29
 8013184:	f7ff ff92 	bl	80130ac <rcu_flag_get>
 8013188:	b908      	cbnz	r0, 801318e <rcu_osci_stab_wait+0xc2>
 801318a:	3901      	subs	r1, #1
 801318c:	d1f9      	bne.n	8013182 <rcu_osci_stab_wait+0xb6>
 801318e:	201d      	movs	r0, #29
 8013190:	e7d2      	b.n	8013138 <rcu_osci_stab_wait+0x6c>
 8013192:	4905      	ldr	r1, [pc, #20]	; (80131a8 <rcu_osci_stab_wait+0xdc>)
 8013194:	f242 401d 	movw	r0, #9245	; 0x241d
 8013198:	f7ff ff88 	bl	80130ac <rcu_flag_get>
 801319c:	b908      	cbnz	r0, 80131a2 <rcu_osci_stab_wait+0xd6>
 801319e:	3901      	subs	r1, #1
 80131a0:	d1f8      	bne.n	8013194 <rcu_osci_stab_wait+0xc8>
 80131a2:	f242 401d 	movw	r0, #9245	; 0x241d
 80131a6:	e7c7      	b.n	8013138 <rcu_osci_stab_wait+0x6c>
 80131a8:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

080131ac <rcu_osci_on>:
 80131ac:	f7ff bf24 	b.w	8012ff8 <rcu_periph_clock_enable>

080131b0 <rcu_clock_freq_get>:
 80131b0:	4b3e      	ldr	r3, [pc, #248]	; (80132ac <rcu_clock_freq_get+0xfc>)
 80131b2:	b5f0      	push	{r4, r5, r6, r7, lr}
 80131b4:	4604      	mov	r4, r0
 80131b6:	461f      	mov	r7, r3
 80131b8:	b089      	sub	sp, #36	; 0x24
 80131ba:	ad04      	add	r5, sp, #16
 80131bc:	f103 0610 	add.w	r6, r3, #16
 80131c0:	462a      	mov	r2, r5
 80131c2:	6818      	ldr	r0, [r3, #0]
 80131c4:	6859      	ldr	r1, [r3, #4]
 80131c6:	3308      	adds	r3, #8
 80131c8:	c203      	stmia	r2!, {r0, r1}
 80131ca:	42b3      	cmp	r3, r6
 80131cc:	4615      	mov	r5, r2
 80131ce:	d1f7      	bne.n	80131c0 <rcu_clock_freq_get+0x10>
 80131d0:	466b      	mov	r3, sp
 80131d2:	6938      	ldr	r0, [r7, #16]
 80131d4:	6871      	ldr	r1, [r6, #4]
 80131d6:	4a36      	ldr	r2, [pc, #216]	; (80132b0 <rcu_clock_freq_get+0x100>)
 80131d8:	c303      	stmia	r3!, {r0, r1}
 80131da:	c303      	stmia	r3!, {r0, r1}
 80131dc:	6853      	ldr	r3, [r2, #4]
 80131de:	f3c3 0381 	ubfx	r3, r3, #2, #2
 80131e2:	2b01      	cmp	r3, #1
 80131e4:	d053      	beq.n	801328e <rcu_clock_freq_get+0xde>
 80131e6:	2b02      	cmp	r3, #2
 80131e8:	d153      	bne.n	8013292 <rcu_clock_freq_get+0xe2>
 80131ea:	6853      	ldr	r3, [r2, #4]
 80131ec:	03dd      	lsls	r5, r3, #15
 80131ee:	d523      	bpl.n	8013238 <rcu_clock_freq_get+0x88>
 80131f0:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 80131f2:	f413 3f80 	tst.w	r3, #65536	; 0x10000
 80131f6:	4b2f      	ldr	r3, [pc, #188]	; (80132b4 <rcu_clock_freq_get+0x104>)
 80131f8:	d00e      	beq.n	8013218 <rcu_clock_freq_get+0x68>
 80131fa:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 80131fc:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
 80131fe:	f3c1 1103 	ubfx	r1, r1, #4, #4
 8013202:	f3c0 2003 	ubfx	r0, r0, #8, #4
 8013206:	3101      	adds	r1, #1
 8013208:	280f      	cmp	r0, #15
 801320a:	f100 0502 	add.w	r5, r0, #2
 801320e:	fbb3 f3f1 	udiv	r3, r3, r1
 8013212:	bf08      	it	eq
 8013214:	2514      	moveq	r5, #20
 8013216:	436b      	muls	r3, r5
 8013218:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 801321a:	f001 010f 	and.w	r1, r1, #15
 801321e:	3101      	adds	r1, #1
 8013220:	fbb3 f3f1 	udiv	r3, r3, r1
 8013224:	6851      	ldr	r1, [r2, #4]
 8013226:	6850      	ldr	r0, [r2, #4]
 8013228:	f3c1 4183 	ubfx	r1, r1, #18, #4
 801322c:	0080      	lsls	r0, r0, #2
 801322e:	d505      	bpl.n	801323c <rcu_clock_freq_get+0x8c>
 8013230:	f041 0110 	orr.w	r1, r1, #16
 8013234:	3101      	adds	r1, #1
 8013236:	e027      	b.n	8013288 <rcu_clock_freq_get+0xd8>
 8013238:	4b1f      	ldr	r3, [pc, #124]	; (80132b8 <rcu_clock_freq_get+0x108>)
 801323a:	e7f3      	b.n	8013224 <rcu_clock_freq_get+0x74>
 801323c:	290d      	cmp	r1, #13
 801323e:	d120      	bne.n	8013282 <rcu_clock_freq_get+0xd2>
 8013240:	2006      	movs	r0, #6
 8013242:	0859      	lsrs	r1, r3, #1
 8013244:	fb00 1003 	mla	r0, r0, r3, r1
 8013248:	6853      	ldr	r3, [r2, #4]
 801324a:	6851      	ldr	r1, [r2, #4]
 801324c:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8013250:	6852      	ldr	r2, [r2, #4]
 8013252:	3320      	adds	r3, #32
 8013254:	446b      	add	r3, sp
 8013256:	f3c1 2102 	ubfx	r1, r1, #8, #3
 801325a:	f3c2 22c2 	ubfx	r2, r2, #11, #3
 801325e:	f813 3c10 	ldrb.w	r3, [r3, #-16]
 8013262:	3120      	adds	r1, #32
 8013264:	3220      	adds	r2, #32
 8013266:	4469      	add	r1, sp
 8013268:	446a      	add	r2, sp
 801326a:	f811 1c20 	ldrb.w	r1, [r1, #-32]
 801326e:	f812 2c18 	ldrb.w	r2, [r2, #-24]
 8013272:	fa20 f303 	lsr.w	r3, r0, r3
 8013276:	2c03      	cmp	r4, #3
 8013278:	d816      	bhi.n	80132a8 <rcu_clock_freq_get+0xf8>
 801327a:	e8df f004 	tbb	[pc, r4]
 801327e:	120f0c0d 	andne	r0, pc, #3328	; 0xd00
 8013282:	290f      	cmp	r1, #15
 8013284:	d0d6      	beq.n	8013234 <rcu_clock_freq_get+0x84>
 8013286:	3102      	adds	r1, #2
 8013288:	fb03 f001 	mul.w	r0, r3, r1
 801328c:	e7dc      	b.n	8013248 <rcu_clock_freq_get+0x98>
 801328e:	4809      	ldr	r0, [pc, #36]	; (80132b4 <rcu_clock_freq_get+0x104>)
 8013290:	e7da      	b.n	8013248 <rcu_clock_freq_get+0x98>
 8013292:	480a      	ldr	r0, [pc, #40]	; (80132bc <rcu_clock_freq_get+0x10c>)
 8013294:	e7d8      	b.n	8013248 <rcu_clock_freq_get+0x98>
 8013296:	4618      	mov	r0, r3
 8013298:	b009      	add	sp, #36	; 0x24
 801329a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801329c:	fa23 f001 	lsr.w	r0, r3, r1
 80132a0:	e7fa      	b.n	8013298 <rcu_clock_freq_get+0xe8>
 80132a2:	fa23 f002 	lsr.w	r0, r3, r2
 80132a6:	e7f7      	b.n	8013298 <rcu_clock_freq_get+0xe8>
 80132a8:	2000      	movs	r0, #0
 80132aa:	e7f5      	b.n	8013298 <rcu_clock_freq_get+0xe8>
 80132ac:	08014c68 	stmdaeq	r1, {r3, r5, r6, sl, fp, lr}
 80132b0:	40021000 	andmi	r1, r2, r0
 80132b4:	017d7840 	cmneq	sp, r0, asr #16
 80132b8:	003d0900 	eorseq	r0, sp, r0, lsl #18
 80132bc:	007a1200 	rsbseq	r1, sl, r0, lsl #4

080132c0 <timer_deinit>:
 80132c0:	b508      	push	{r3, lr}
 80132c2:	4b4e      	ldr	r3, [pc, #312]	; (80133fc <timer_deinit+0x13c>)
 80132c4:	4298      	cmp	r0, r3
 80132c6:	f000 8092 	beq.w	80133ee <timer_deinit+0x12e>
 80132ca:	d822      	bhi.n	8013312 <timer_deinit+0x52>
 80132cc:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
 80132d0:	4298      	cmp	r0, r3
 80132d2:	d062      	beq.n	801339a <timer_deinit+0xda>
 80132d4:	d80b      	bhi.n	80132ee <timer_deinit+0x2e>
 80132d6:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 80132da:	4298      	cmp	r0, r3
 80132dc:	d04f      	beq.n	801337e <timer_deinit+0xbe>
 80132de:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80132e2:	4298      	cmp	r0, r3
 80132e4:	d052      	beq.n	801338c <timer_deinit+0xcc>
 80132e6:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80132ea:	d041      	beq.n	8013370 <timer_deinit+0xb0>
 80132ec:	bd08      	pop	{r3, pc}
 80132ee:	4b44      	ldr	r3, [pc, #272]	; (8013400 <timer_deinit+0x140>)
 80132f0:	4298      	cmp	r0, r3
 80132f2:	d059      	beq.n	80133a8 <timer_deinit+0xe8>
 80132f4:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80132f8:	4298      	cmp	r0, r3
 80132fa:	d071      	beq.n	80133e0 <timer_deinit+0x120>
 80132fc:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8013300:	4298      	cmp	r0, r3
 8013302:	d1f3      	bne.n	80132ec <timer_deinit+0x2c>
 8013304:	f240 4004 	movw	r0, #1028	; 0x404
 8013308:	f7ff fe91 	bl	801302e <rcu_periph_reset_enable>
 801330c:	f240 4004 	movw	r0, #1028	; 0x404
 8013310:	e02a      	b.n	8013368 <timer_deinit+0xa8>
 8013312:	4b3c      	ldr	r3, [pc, #240]	; (8013404 <timer_deinit+0x144>)
 8013314:	4298      	cmp	r0, r3
 8013316:	d055      	beq.n	80133c4 <timer_deinit+0x104>
 8013318:	d812      	bhi.n	8013340 <timer_deinit+0x80>
 801331a:	f5a3 5300 	sub.w	r3, r3, #8192	; 0x2000
 801331e:	4298      	cmp	r0, r3
 8013320:	d01c      	beq.n	801335c <timer_deinit+0x9c>
 8013322:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8013326:	4298      	cmp	r0, r3
 8013328:	d045      	beq.n	80133b6 <timer_deinit+0xf6>
 801332a:	f5a3 338a 	sub.w	r3, r3, #70656	; 0x11400
 801332e:	4298      	cmp	r0, r3
 8013330:	d1dc      	bne.n	80132ec <timer_deinit+0x2c>
 8013332:	f44f 6081 	mov.w	r0, #1032	; 0x408
 8013336:	f7ff fe7a 	bl	801302e <rcu_periph_reset_enable>
 801333a:	f44f 6081 	mov.w	r0, #1032	; 0x408
 801333e:	e013      	b.n	8013368 <timer_deinit+0xa8>
 8013340:	4b31      	ldr	r3, [pc, #196]	; (8013408 <timer_deinit+0x148>)
 8013342:	4298      	cmp	r0, r3
 8013344:	d045      	beq.n	80133d2 <timer_deinit+0x112>
 8013346:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 801334a:	4298      	cmp	r0, r3
 801334c:	d1ce      	bne.n	80132ec <timer_deinit+0x2c>
 801334e:	f240 3015 	movw	r0, #789	; 0x315
 8013352:	f7ff fe6c 	bl	801302e <rcu_periph_reset_enable>
 8013356:	f240 3015 	movw	r0, #789	; 0x315
 801335a:	e005      	b.n	8013368 <timer_deinit+0xa8>
 801335c:	f240 300b 	movw	r0, #779	; 0x30b
 8013360:	f7ff fe65 	bl	801302e <rcu_periph_reset_enable>
 8013364:	f240 300b 	movw	r0, #779	; 0x30b
 8013368:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801336c:	f7ff be61 	b.w	8013032 <rcu_periph_reset_disable>
 8013370:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8013374:	f7ff fe5b 	bl	801302e <rcu_periph_reset_enable>
 8013378:	f44f 6080 	mov.w	r0, #1024	; 0x400
 801337c:	e7f4      	b.n	8013368 <timer_deinit+0xa8>
 801337e:	f240 4001 	movw	r0, #1025	; 0x401
 8013382:	f7ff fe54 	bl	801302e <rcu_periph_reset_enable>
 8013386:	f240 4001 	movw	r0, #1025	; 0x401
 801338a:	e7ed      	b.n	8013368 <timer_deinit+0xa8>
 801338c:	f240 4002 	movw	r0, #1026	; 0x402
 8013390:	f7ff fe4d 	bl	801302e <rcu_periph_reset_enable>
 8013394:	f240 4002 	movw	r0, #1026	; 0x402
 8013398:	e7e6      	b.n	8013368 <timer_deinit+0xa8>
 801339a:	f240 4003 	movw	r0, #1027	; 0x403
 801339e:	f7ff fe46 	bl	801302e <rcu_periph_reset_enable>
 80133a2:	f240 4003 	movw	r0, #1027	; 0x403
 80133a6:	e7df      	b.n	8013368 <timer_deinit+0xa8>
 80133a8:	f240 4005 	movw	r0, #1029	; 0x405
 80133ac:	f7ff fe3f 	bl	801302e <rcu_periph_reset_enable>
 80133b0:	f240 4005 	movw	r0, #1029	; 0x405
 80133b4:	e7d8      	b.n	8013368 <timer_deinit+0xa8>
 80133b6:	f240 300d 	movw	r0, #781	; 0x30d
 80133ba:	f7ff fe38 	bl	801302e <rcu_periph_reset_enable>
 80133be:	f240 300d 	movw	r0, #781	; 0x30d
 80133c2:	e7d1      	b.n	8013368 <timer_deinit+0xa8>
 80133c4:	f240 3013 	movw	r0, #787	; 0x313
 80133c8:	f7ff fe31 	bl	801302e <rcu_periph_reset_enable>
 80133cc:	f240 3013 	movw	r0, #787	; 0x313
 80133d0:	e7ca      	b.n	8013368 <timer_deinit+0xa8>
 80133d2:	f44f 7045 	mov.w	r0, #788	; 0x314
 80133d6:	f7ff fe2a 	bl	801302e <rcu_periph_reset_enable>
 80133da:	f44f 7045 	mov.w	r0, #788	; 0x314
 80133de:	e7c3      	b.n	8013368 <timer_deinit+0xa8>
 80133e0:	f240 4006 	movw	r0, #1030	; 0x406
 80133e4:	f7ff fe23 	bl	801302e <rcu_periph_reset_enable>
 80133e8:	f240 4006 	movw	r0, #1030	; 0x406
 80133ec:	e7bc      	b.n	8013368 <timer_deinit+0xa8>
 80133ee:	f240 4007 	movw	r0, #1031	; 0x407
 80133f2:	f7ff fe1c 	bl	801302e <rcu_periph_reset_enable>
 80133f6:	f240 4007 	movw	r0, #1031	; 0x407
 80133fa:	e7b5      	b.n	8013368 <timer_deinit+0xa8>
 80133fc:	40001c00 	andmi	r1, r0, r0, lsl #24
 8013400:	40001400 	andmi	r1, r0, r0, lsl #8
 8013404:	40014c00 	andmi	r4, r1, r0, lsl #24
 8013408:	40015000 	andmi	r5, r1, r0

0801340c <timer_init>:
 801340c:	880b      	ldrh	r3, [r1, #0]
 801340e:	6283      	str	r3, [r0, #40]	; 0x28
 8013410:	4b26      	ldr	r3, [pc, #152]	; (80134ac <timer_init+0xa0>)
 8013412:	4298      	cmp	r0, r3
 8013414:	d018      	beq.n	8013448 <timer_init+0x3c>
 8013416:	f420 6240 	bic.w	r2, r0, #3072	; 0xc00
 801341a:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 801341e:	f420 6380 	bic.w	r3, r0, #1024	; 0x400
 8013422:	d011      	beq.n	8013448 <timer_init+0x3c>
 8013424:	4a22      	ldr	r2, [pc, #136]	; (80134b0 <timer_init+0xa4>)
 8013426:	4290      	cmp	r0, r2
 8013428:	d00e      	beq.n	8013448 <timer_init+0x3c>
 801342a:	f502 52c0 	add.w	r2, r2, #6144	; 0x1800
 801342e:	4290      	cmp	r0, r2
 8013430:	d00a      	beq.n	8013448 <timer_init+0x3c>
 8013432:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8013436:	4293      	cmp	r3, r2
 8013438:	d006      	beq.n	8013448 <timer_init+0x3c>
 801343a:	f5a2 329c 	sub.w	r2, r2, #79872	; 0x13800
 801343e:	4293      	cmp	r3, r2
 8013440:	d002      	beq.n	8013448 <timer_init+0x3c>
 8013442:	4b1c      	ldr	r3, [pc, #112]	; (80134b4 <timer_init+0xa8>)
 8013444:	4298      	cmp	r0, r3
 8013446:	d10f      	bne.n	8013468 <timer_init+0x5c>
 8013448:	6803      	ldr	r3, [r0, #0]
 801344a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 801344e:	6003      	str	r3, [r0, #0]
 8013450:	884b      	ldrh	r3, [r1, #2]
 8013452:	6802      	ldr	r2, [r0, #0]
 8013454:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8013458:	4313      	orrs	r3, r2
 801345a:	6003      	str	r3, [r0, #0]
 801345c:	888b      	ldrh	r3, [r1, #4]
 801345e:	6802      	ldr	r2, [r0, #0]
 8013460:	f003 0310 	and.w	r3, r3, #16
 8013464:	4313      	orrs	r3, r2
 8013466:	6003      	str	r3, [r0, #0]
 8013468:	688b      	ldr	r3, [r1, #8]
 801346a:	62c3      	str	r3, [r0, #44]	; 0x2c
 801346c:	4b12      	ldr	r3, [pc, #72]	; (80134b8 <timer_init+0xac>)
 801346e:	4298      	cmp	r0, r3
 8013470:	d003      	beq.n	801347a <timer_init+0x6e>
 8013472:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8013476:	4298      	cmp	r0, r3
 8013478:	d104      	bne.n	8013484 <timer_init+0x78>
 801347a:	6943      	ldr	r3, [r0, #20]
 801347c:	f043 0301 	orr.w	r3, r3, #1
 8013480:	6143      	str	r3, [r0, #20]
 8013482:	4770      	bx	lr
 8013484:	6803      	ldr	r3, [r0, #0]
 8013486:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 801348a:	6003      	str	r3, [r0, #0]
 801348c:	898b      	ldrh	r3, [r1, #12]
 801348e:	6802      	ldr	r2, [r0, #0]
 8013490:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8013494:	4313      	orrs	r3, r2
 8013496:	6003      	str	r3, [r0, #0]
 8013498:	4b04      	ldr	r3, [pc, #16]	; (80134ac <timer_init+0xa0>)
 801349a:	4298      	cmp	r0, r3
 801349c:	d002      	beq.n	80134a4 <timer_init+0x98>
 801349e:	4b04      	ldr	r3, [pc, #16]	; (80134b0 <timer_init+0xa4>)
 80134a0:	4298      	cmp	r0, r3
 80134a2:	d1ea      	bne.n	801347a <timer_init+0x6e>
 80134a4:	7b8b      	ldrb	r3, [r1, #14]
 80134a6:	6303      	str	r3, [r0, #48]	; 0x30
 80134a8:	e7e7      	b.n	801347a <timer_init+0x6e>
 80134aa:	bf00      	nop
 80134ac:	40012c00 	andmi	r2, r1, r0, lsl #24
 80134b0:	40013400 	andmi	r3, r1, r0, lsl #8
 80134b4:	40002000 	andmi	r2, r0, r0
 80134b8:	40001000 	andmi	r1, r0, r0

080134bc <timer_enable>:
 80134bc:	6803      	ldr	r3, [r0, #0]
 80134be:	f043 0301 	orr.w	r3, r3, #1
 80134c2:	6003      	str	r3, [r0, #0]
 80134c4:	4770      	bx	lr

080134c6 <timer_dma_enable>:
 80134c6:	68c3      	ldr	r3, [r0, #12]
 80134c8:	4319      	orrs	r1, r3
 80134ca:	60c1      	str	r1, [r0, #12]
 80134cc:	4770      	bx	lr
	...

080134d0 <timer_channel_output_config>:
 80134d0:	2903      	cmp	r1, #3
 80134d2:	d840      	bhi.n	8013556 <timer_channel_output_config+0x86>
 80134d4:	e8df f011 	tbh	[pc, r1, lsl #1]
 80134d8:	00400004 	subeq	r0, r0, r4
 80134dc:	00c20081 	sbceq	r0, r2, r1, lsl #1
 80134e0:	6a03      	ldr	r3, [r0, #32]
 80134e2:	f023 0301 	bic.w	r3, r3, #1
 80134e6:	6203      	str	r3, [r0, #32]
 80134e8:	6983      	ldr	r3, [r0, #24]
 80134ea:	f023 0303 	bic.w	r3, r3, #3
 80134ee:	6183      	str	r3, [r0, #24]
 80134f0:	6a01      	ldr	r1, [r0, #32]
 80134f2:	8813      	ldrh	r3, [r2, #0]
 80134f4:	430b      	orrs	r3, r1
 80134f6:	6203      	str	r3, [r0, #32]
 80134f8:	6a03      	ldr	r3, [r0, #32]
 80134fa:	f023 0302 	bic.w	r3, r3, #2
 80134fe:	6203      	str	r3, [r0, #32]
 8013500:	6a01      	ldr	r1, [r0, #32]
 8013502:	8893      	ldrh	r3, [r2, #4]
 8013504:	430b      	orrs	r3, r1
 8013506:	6203      	str	r3, [r0, #32]
 8013508:	4b68      	ldr	r3, [pc, #416]	; (80136ac <timer_channel_output_config+0x1dc>)
 801350a:	4298      	cmp	r0, r3
 801350c:	d003      	beq.n	8013516 <timer_channel_output_config+0x46>
 801350e:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8013512:	4298      	cmp	r0, r3
 8013514:	d11f      	bne.n	8013556 <timer_channel_output_config+0x86>
 8013516:	6a03      	ldr	r3, [r0, #32]
 8013518:	f023 0304 	bic.w	r3, r3, #4
 801351c:	6203      	str	r3, [r0, #32]
 801351e:	6a01      	ldr	r1, [r0, #32]
 8013520:	8853      	ldrh	r3, [r2, #2]
 8013522:	430b      	orrs	r3, r1
 8013524:	6203      	str	r3, [r0, #32]
 8013526:	6a03      	ldr	r3, [r0, #32]
 8013528:	f023 0308 	bic.w	r3, r3, #8
 801352c:	6203      	str	r3, [r0, #32]
 801352e:	6a01      	ldr	r1, [r0, #32]
 8013530:	88d3      	ldrh	r3, [r2, #6]
 8013532:	430b      	orrs	r3, r1
 8013534:	6203      	str	r3, [r0, #32]
 8013536:	6843      	ldr	r3, [r0, #4]
 8013538:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 801353c:	6043      	str	r3, [r0, #4]
 801353e:	6841      	ldr	r1, [r0, #4]
 8013540:	8913      	ldrh	r3, [r2, #8]
 8013542:	430b      	orrs	r3, r1
 8013544:	6043      	str	r3, [r0, #4]
 8013546:	6843      	ldr	r3, [r0, #4]
 8013548:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 801354c:	6043      	str	r3, [r0, #4]
 801354e:	6841      	ldr	r1, [r0, #4]
 8013550:	8953      	ldrh	r3, [r2, #10]
 8013552:	430b      	orrs	r3, r1
 8013554:	6043      	str	r3, [r0, #4]
 8013556:	4770      	bx	lr
 8013558:	6a03      	ldr	r3, [r0, #32]
 801355a:	8811      	ldrh	r1, [r2, #0]
 801355c:	f023 0310 	bic.w	r3, r3, #16
 8013560:	6203      	str	r3, [r0, #32]
 8013562:	6983      	ldr	r3, [r0, #24]
 8013564:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8013568:	6183      	str	r3, [r0, #24]
 801356a:	6a03      	ldr	r3, [r0, #32]
 801356c:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
 8013570:	6203      	str	r3, [r0, #32]
 8013572:	6a03      	ldr	r3, [r0, #32]
 8013574:	8891      	ldrh	r1, [r2, #4]
 8013576:	f023 0320 	bic.w	r3, r3, #32
 801357a:	6203      	str	r3, [r0, #32]
 801357c:	6a03      	ldr	r3, [r0, #32]
 801357e:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
 8013582:	6203      	str	r3, [r0, #32]
 8013584:	4b49      	ldr	r3, [pc, #292]	; (80136ac <timer_channel_output_config+0x1dc>)
 8013586:	4298      	cmp	r0, r3
 8013588:	d003      	beq.n	8013592 <timer_channel_output_config+0xc2>
 801358a:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 801358e:	4298      	cmp	r0, r3
 8013590:	d1e1      	bne.n	8013556 <timer_channel_output_config+0x86>
 8013592:	6a03      	ldr	r3, [r0, #32]
 8013594:	8851      	ldrh	r1, [r2, #2]
 8013596:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 801359a:	6203      	str	r3, [r0, #32]
 801359c:	6a03      	ldr	r3, [r0, #32]
 801359e:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
 80135a2:	6203      	str	r3, [r0, #32]
 80135a4:	6a03      	ldr	r3, [r0, #32]
 80135a6:	88d1      	ldrh	r1, [r2, #6]
 80135a8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80135ac:	6203      	str	r3, [r0, #32]
 80135ae:	6a03      	ldr	r3, [r0, #32]
 80135b0:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
 80135b4:	6203      	str	r3, [r0, #32]
 80135b6:	6843      	ldr	r3, [r0, #4]
 80135b8:	8911      	ldrh	r1, [r2, #8]
 80135ba:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80135be:	6043      	str	r3, [r0, #4]
 80135c0:	6843      	ldr	r3, [r0, #4]
 80135c2:	8952      	ldrh	r2, [r2, #10]
 80135c4:	ea43 0381 	orr.w	r3, r3, r1, lsl #2
 80135c8:	6043      	str	r3, [r0, #4]
 80135ca:	6843      	ldr	r3, [r0, #4]
 80135cc:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80135d0:	6043      	str	r3, [r0, #4]
 80135d2:	6843      	ldr	r3, [r0, #4]
 80135d4:	ea43 0382 	orr.w	r3, r3, r2, lsl #2
 80135d8:	e7bc      	b.n	8013554 <timer_channel_output_config+0x84>
 80135da:	6a03      	ldr	r3, [r0, #32]
 80135dc:	8811      	ldrh	r1, [r2, #0]
 80135de:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80135e2:	6203      	str	r3, [r0, #32]
 80135e4:	69c3      	ldr	r3, [r0, #28]
 80135e6:	f023 0303 	bic.w	r3, r3, #3
 80135ea:	61c3      	str	r3, [r0, #28]
 80135ec:	6a03      	ldr	r3, [r0, #32]
 80135ee:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 80135f2:	6203      	str	r3, [r0, #32]
 80135f4:	6a03      	ldr	r3, [r0, #32]
 80135f6:	8891      	ldrh	r1, [r2, #4]
 80135f8:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 80135fc:	6203      	str	r3, [r0, #32]
 80135fe:	6a03      	ldr	r3, [r0, #32]
 8013600:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8013604:	6203      	str	r3, [r0, #32]
 8013606:	4b29      	ldr	r3, [pc, #164]	; (80136ac <timer_channel_output_config+0x1dc>)
 8013608:	4298      	cmp	r0, r3
 801360a:	d003      	beq.n	8013614 <timer_channel_output_config+0x144>
 801360c:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8013610:	4298      	cmp	r0, r3
 8013612:	d1a0      	bne.n	8013556 <timer_channel_output_config+0x86>
 8013614:	6a03      	ldr	r3, [r0, #32]
 8013616:	8851      	ldrh	r1, [r2, #2]
 8013618:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 801361c:	6203      	str	r3, [r0, #32]
 801361e:	6a03      	ldr	r3, [r0, #32]
 8013620:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8013624:	6203      	str	r3, [r0, #32]
 8013626:	6a03      	ldr	r3, [r0, #32]
 8013628:	88d1      	ldrh	r1, [r2, #6]
 801362a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 801362e:	6203      	str	r3, [r0, #32]
 8013630:	6a03      	ldr	r3, [r0, #32]
 8013632:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8013636:	6203      	str	r3, [r0, #32]
 8013638:	6843      	ldr	r3, [r0, #4]
 801363a:	8911      	ldrh	r1, [r2, #8]
 801363c:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8013640:	6043      	str	r3, [r0, #4]
 8013642:	6843      	ldr	r3, [r0, #4]
 8013644:	8952      	ldrh	r2, [r2, #10]
 8013646:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
 801364a:	6043      	str	r3, [r0, #4]
 801364c:	6843      	ldr	r3, [r0, #4]
 801364e:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8013652:	6043      	str	r3, [r0, #4]
 8013654:	6843      	ldr	r3, [r0, #4]
 8013656:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
 801365a:	e77b      	b.n	8013554 <timer_channel_output_config+0x84>
 801365c:	6a03      	ldr	r3, [r0, #32]
 801365e:	8811      	ldrh	r1, [r2, #0]
 8013660:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8013664:	6203      	str	r3, [r0, #32]
 8013666:	69c3      	ldr	r3, [r0, #28]
 8013668:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 801366c:	61c3      	str	r3, [r0, #28]
 801366e:	6a03      	ldr	r3, [r0, #32]
 8013670:	ea43 3301 	orr.w	r3, r3, r1, lsl #12
 8013674:	6203      	str	r3, [r0, #32]
 8013676:	6a03      	ldr	r3, [r0, #32]
 8013678:	8891      	ldrh	r1, [r2, #4]
 801367a:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 801367e:	6203      	str	r3, [r0, #32]
 8013680:	6a03      	ldr	r3, [r0, #32]
 8013682:	ea43 3301 	orr.w	r3, r3, r1, lsl #12
 8013686:	6203      	str	r3, [r0, #32]
 8013688:	4b08      	ldr	r3, [pc, #32]	; (80136ac <timer_channel_output_config+0x1dc>)
 801368a:	4298      	cmp	r0, r3
 801368c:	d004      	beq.n	8013698 <timer_channel_output_config+0x1c8>
 801368e:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8013692:	4298      	cmp	r0, r3
 8013694:	f47f af5f 	bne.w	8013556 <timer_channel_output_config+0x86>
 8013698:	6843      	ldr	r3, [r0, #4]
 801369a:	8912      	ldrh	r2, [r2, #8]
 801369c:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80136a0:	6043      	str	r3, [r0, #4]
 80136a2:	6843      	ldr	r3, [r0, #4]
 80136a4:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 80136a8:	e754      	b.n	8013554 <timer_channel_output_config+0x84>
 80136aa:	bf00      	nop
 80136ac:	40012c00 	andmi	r2, r1, r0, lsl #24

080136b0 <timer_channel_output_mode_config>:
 80136b0:	2903      	cmp	r1, #3
 80136b2:	d81a      	bhi.n	80136ea <timer_channel_output_mode_config+0x3a>
 80136b4:	e8df f001 	tbb	[pc, r1]
 80136b8:	1a120a02 	bne	8495ec8 <__exidx_end+0x47e1fc>
 80136bc:	6983      	ldr	r3, [r0, #24]
 80136be:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80136c2:	6183      	str	r3, [r0, #24]
 80136c4:	6983      	ldr	r3, [r0, #24]
 80136c6:	4313      	orrs	r3, r2
 80136c8:	6183      	str	r3, [r0, #24]
 80136ca:	4770      	bx	lr
 80136cc:	6983      	ldr	r3, [r0, #24]
 80136ce:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80136d2:	6183      	str	r3, [r0, #24]
 80136d4:	6983      	ldr	r3, [r0, #24]
 80136d6:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80136da:	e7f5      	b.n	80136c8 <timer_channel_output_mode_config+0x18>
 80136dc:	69c3      	ldr	r3, [r0, #28]
 80136de:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80136e2:	61c3      	str	r3, [r0, #28]
 80136e4:	69c3      	ldr	r3, [r0, #28]
 80136e6:	4313      	orrs	r3, r2
 80136e8:	61c3      	str	r3, [r0, #28]
 80136ea:	4770      	bx	lr
 80136ec:	69c3      	ldr	r3, [r0, #28]
 80136ee:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80136f2:	61c3      	str	r3, [r0, #28]
 80136f4:	69c3      	ldr	r3, [r0, #28]
 80136f6:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80136fa:	e7f5      	b.n	80136e8 <timer_channel_output_mode_config+0x38>

080136fc <timer_channel_output_pulse_value_config>:
 80136fc:	2903      	cmp	r1, #3
 80136fe:	d80a      	bhi.n	8013716 <timer_channel_output_pulse_value_config+0x1a>
 8013700:	e8df f001 	tbb	[pc, r1]
 8013704:	08060402 	stmdaeq	r6, {r1, sl}
 8013708:	6342      	str	r2, [r0, #52]	; 0x34
 801370a:	4770      	bx	lr
 801370c:	6382      	str	r2, [r0, #56]	; 0x38
 801370e:	4770      	bx	lr
 8013710:	63c2      	str	r2, [r0, #60]	; 0x3c
 8013712:	4770      	bx	lr
 8013714:	6402      	str	r2, [r0, #64]	; 0x40
 8013716:	4770      	bx	lr

08013718 <timer_channel_output_shadow_config>:
 8013718:	2903      	cmp	r1, #3
 801371a:	d81a      	bhi.n	8013752 <timer_channel_output_shadow_config+0x3a>
 801371c:	e8df f001 	tbb	[pc, r1]
 8013720:	1a120a02 	bne	8495f30 <__exidx_end+0x47e264>
 8013724:	6983      	ldr	r3, [r0, #24]
 8013726:	f023 0308 	bic.w	r3, r3, #8
 801372a:	6183      	str	r3, [r0, #24]
 801372c:	6983      	ldr	r3, [r0, #24]
 801372e:	4313      	orrs	r3, r2
 8013730:	6183      	str	r3, [r0, #24]
 8013732:	4770      	bx	lr
 8013734:	6983      	ldr	r3, [r0, #24]
 8013736:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 801373a:	6183      	str	r3, [r0, #24]
 801373c:	6983      	ldr	r3, [r0, #24]
 801373e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8013742:	e7f5      	b.n	8013730 <timer_channel_output_shadow_config+0x18>
 8013744:	69c3      	ldr	r3, [r0, #28]
 8013746:	f023 0308 	bic.w	r3, r3, #8
 801374a:	61c3      	str	r3, [r0, #28]
 801374c:	69c3      	ldr	r3, [r0, #28]
 801374e:	4313      	orrs	r3, r2
 8013750:	61c3      	str	r3, [r0, #28]
 8013752:	4770      	bx	lr
 8013754:	69c3      	ldr	r3, [r0, #28]
 8013756:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 801375a:	61c3      	str	r3, [r0, #28]
 801375c:	69c3      	ldr	r3, [r0, #28]
 801375e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8013762:	e7f5      	b.n	8013750 <timer_channel_output_shadow_config+0x38>

08013764 <timer_input_trigger_source_select>:
 8013764:	6883      	ldr	r3, [r0, #8]
 8013766:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 801376a:	6083      	str	r3, [r0, #8]
 801376c:	6883      	ldr	r3, [r0, #8]
 801376e:	430b      	orrs	r3, r1
 8013770:	6083      	str	r3, [r0, #8]
 8013772:	4770      	bx	lr

08013774 <timer_master_output_trigger_source_select>:
 8013774:	6843      	ldr	r3, [r0, #4]
 8013776:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 801377a:	6043      	str	r3, [r0, #4]
 801377c:	6843      	ldr	r3, [r0, #4]
 801377e:	430b      	orrs	r3, r1
 8013780:	6043      	str	r3, [r0, #4]
 8013782:	4770      	bx	lr

08013784 <timer_slave_mode_select>:
 8013784:	6883      	ldr	r3, [r0, #8]
 8013786:	f023 0307 	bic.w	r3, r3, #7
 801378a:	6083      	str	r3, [r0, #8]
 801378c:	6883      	ldr	r3, [r0, #8]
 801378e:	430b      	orrs	r3, r1
 8013790:	6083      	str	r3, [r0, #8]
 8013792:	4770      	bx	lr

08013794 <timer_master_slave_mode_config>:
 8013794:	2980      	cmp	r1, #128	; 0x80
 8013796:	d104      	bne.n	80137a2 <timer_master_slave_mode_config+0xe>
 8013798:	6883      	ldr	r3, [r0, #8]
 801379a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 801379e:	6083      	str	r3, [r0, #8]
 80137a0:	4770      	bx	lr
 80137a2:	2900      	cmp	r1, #0
 80137a4:	d1fc      	bne.n	80137a0 <timer_master_slave_mode_config+0xc>
 80137a6:	6883      	ldr	r3, [r0, #8]
 80137a8:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80137ac:	e7f7      	b.n	801379e <timer_master_slave_mode_config+0xa>

080137ae <timer_interrupt_enable>:
 80137ae:	68c3      	ldr	r3, [r0, #12]
 80137b0:	430b      	orrs	r3, r1
 80137b2:	60c3      	str	r3, [r0, #12]
 80137b4:	4770      	bx	lr
	...

080137b8 <usart_deinit>:
 80137b8:	b508      	push	{r3, lr}
 80137ba:	4b2d      	ldr	r3, [pc, #180]	; (8013870 <usart_deinit+0xb8>)
 80137bc:	4298      	cmp	r0, r3
 80137be:	d050      	beq.n	8013862 <usart_deinit+0xaa>
 80137c0:	d817      	bhi.n	80137f2 <usart_deinit+0x3a>
 80137c2:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 80137c6:	4298      	cmp	r0, r3
 80137c8:	d044      	beq.n	8013854 <usart_deinit+0x9c>
 80137ca:	d808      	bhi.n	80137de <usart_deinit+0x26>
 80137cc:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 80137d0:	4298      	cmp	r0, r3
 80137d2:	d02a      	beq.n	801382a <usart_deinit+0x72>
 80137d4:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80137d8:	4298      	cmp	r0, r3
 80137da:	d02d      	beq.n	8013838 <usart_deinit+0x80>
 80137dc:	bd08      	pop	{r3, pc}
 80137de:	4b25      	ldr	r3, [pc, #148]	; (8013874 <usart_deinit+0xbc>)
 80137e0:	4298      	cmp	r0, r3
 80137e2:	d1fb      	bne.n	80137dc <usart_deinit+0x24>
 80137e4:	f240 4014 	movw	r0, #1044	; 0x414
 80137e8:	f7ff fc21 	bl	801302e <rcu_periph_reset_enable>
 80137ec:	f240 4014 	movw	r0, #1044	; 0x414
 80137f0:	e017      	b.n	8013822 <usart_deinit+0x6a>
 80137f2:	4b21      	ldr	r3, [pc, #132]	; (8013878 <usart_deinit+0xc0>)
 80137f4:	4298      	cmp	r0, r3
 80137f6:	d00e      	beq.n	8013816 <usart_deinit+0x5e>
 80137f8:	f503 5360 	add.w	r3, r3, #14336	; 0x3800
 80137fc:	4298      	cmp	r0, r3
 80137fe:	d022      	beq.n	8013846 <usart_deinit+0x8e>
 8013800:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
 8013804:	4298      	cmp	r0, r3
 8013806:	d1e9      	bne.n	80137dc <usart_deinit+0x24>
 8013808:	f641 601f 	movw	r0, #7711	; 0x1e1f
 801380c:	f7ff fc0f 	bl	801302e <rcu_periph_reset_enable>
 8013810:	f641 601f 	movw	r0, #7711	; 0x1e1f
 8013814:	e005      	b.n	8013822 <usart_deinit+0x6a>
 8013816:	f240 300e 	movw	r0, #782	; 0x30e
 801381a:	f7ff fc08 	bl	801302e <rcu_periph_reset_enable>
 801381e:	f240 300e 	movw	r0, #782	; 0x30e
 8013822:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8013826:	f7ff bc04 	b.w	8013032 <rcu_periph_reset_disable>
 801382a:	f240 4011 	movw	r0, #1041	; 0x411
 801382e:	f7ff fbfe 	bl	801302e <rcu_periph_reset_enable>
 8013832:	f240 4011 	movw	r0, #1041	; 0x411
 8013836:	e7f4      	b.n	8013822 <usart_deinit+0x6a>
 8013838:	f240 4012 	movw	r0, #1042	; 0x412
 801383c:	f7ff fbf7 	bl	801302e <rcu_periph_reset_enable>
 8013840:	f240 4012 	movw	r0, #1042	; 0x412
 8013844:	e7ed      	b.n	8013822 <usart_deinit+0x6a>
 8013846:	f641 5018 	movw	r0, #7448	; 0x1d18
 801384a:	f7ff fbf0 	bl	801302e <rcu_periph_reset_enable>
 801384e:	f641 5018 	movw	r0, #7448	; 0x1d18
 8013852:	e7e6      	b.n	8013822 <usart_deinit+0x6a>
 8013854:	f240 4013 	movw	r0, #1043	; 0x413
 8013858:	f7ff fbe9 	bl	801302e <rcu_periph_reset_enable>
 801385c:	f240 4013 	movw	r0, #1043	; 0x413
 8013860:	e7df      	b.n	8013822 <usart_deinit+0x6a>
 8013862:	f641 601e 	movw	r0, #7710	; 0x1e1e
 8013866:	f7ff fbe2 	bl	801302e <rcu_periph_reset_enable>
 801386a:	f641 601e 	movw	r0, #7710	; 0x1e1e
 801386e:	e7d8      	b.n	8013822 <usart_deinit+0x6a>
 8013870:	40007800 	andmi	r7, r0, r0, lsl #16
 8013874:	40005000 	andmi	r5, r0, r0
 8013878:	40013800 	andmi	r3, r1, r0, lsl #16

0801387c <usart_baudrate_set>:
 801387c:	b538      	push	{r3, r4, r5, lr}
 801387e:	4b16      	ldr	r3, [pc, #88]	; (80138d8 <usart_baudrate_set+0x5c>)
 8013880:	4604      	mov	r4, r0
 8013882:	4298      	cmp	r0, r3
 8013884:	460d      	mov	r5, r1
 8013886:	d025      	beq.n	80138d4 <usart_baudrate_set+0x58>
 8013888:	d816      	bhi.n	80138b8 <usart_baudrate_set+0x3c>
 801388a:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 801388e:	4298      	cmp	r0, r3
 8013890:	d020      	beq.n	80138d4 <usart_baudrate_set+0x58>
 8013892:	d80f      	bhi.n	80138b4 <usart_baudrate_set+0x38>
 8013894:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8013898:	4298      	cmp	r0, r3
 801389a:	d01b      	beq.n	80138d4 <usart_baudrate_set+0x58>
 801389c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80138a0:	429c      	cmp	r4, r3
 80138a2:	d017      	beq.n	80138d4 <usart_baudrate_set+0x58>
 80138a4:	2000      	movs	r0, #0
 80138a6:	eb00 0155 	add.w	r1, r0, r5, lsr #1
 80138aa:	fbb1 f1f5 	udiv	r1, r1, r5
 80138ae:	b289      	uxth	r1, r1
 80138b0:	60a1      	str	r1, [r4, #8]
 80138b2:	bd38      	pop	{r3, r4, r5, pc}
 80138b4:	4b09      	ldr	r3, [pc, #36]	; (80138dc <usart_baudrate_set+0x60>)
 80138b6:	e7f3      	b.n	80138a0 <usart_baudrate_set+0x24>
 80138b8:	4b09      	ldr	r3, [pc, #36]	; (80138e0 <usart_baudrate_set+0x64>)
 80138ba:	4298      	cmp	r0, r3
 80138bc:	d006      	beq.n	80138cc <usart_baudrate_set+0x50>
 80138be:	f503 5360 	add.w	r3, r3, #14336	; 0x3800
 80138c2:	4298      	cmp	r0, r3
 80138c4:	d002      	beq.n	80138cc <usart_baudrate_set+0x50>
 80138c6:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
 80138ca:	e7e9      	b.n	80138a0 <usart_baudrate_set+0x24>
 80138cc:	2003      	movs	r0, #3
 80138ce:	f7ff fc6f 	bl	80131b0 <rcu_clock_freq_get>
 80138d2:	e7e8      	b.n	80138a6 <usart_baudrate_set+0x2a>
 80138d4:	2002      	movs	r0, #2
 80138d6:	e7fa      	b.n	80138ce <usart_baudrate_set+0x52>
 80138d8:	40007800 	andmi	r7, r0, r0, lsl #16
 80138dc:	40005000 	andmi	r5, r0, r0
 80138e0:	40013800 	andmi	r3, r1, r0, lsl #16

080138e4 <usart_parity_config>:
 80138e4:	68c3      	ldr	r3, [r0, #12]
 80138e6:	f423 63c0 	bic.w	r3, r3, #1536	; 0x600
 80138ea:	60c3      	str	r3, [r0, #12]
 80138ec:	68c3      	ldr	r3, [r0, #12]
 80138ee:	430b      	orrs	r3, r1
 80138f0:	60c3      	str	r3, [r0, #12]
 80138f2:	4770      	bx	lr

080138f4 <usart_word_length_set>:
 80138f4:	68c3      	ldr	r3, [r0, #12]
 80138f6:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80138fa:	60c3      	str	r3, [r0, #12]
 80138fc:	68c3      	ldr	r3, [r0, #12]
 80138fe:	430b      	orrs	r3, r1
 8013900:	60c3      	str	r3, [r0, #12]
 8013902:	4770      	bx	lr

08013904 <usart_stop_bit_set>:
 8013904:	6903      	ldr	r3, [r0, #16]
 8013906:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 801390a:	6103      	str	r3, [r0, #16]
 801390c:	6903      	ldr	r3, [r0, #16]
 801390e:	430b      	orrs	r3, r1
 8013910:	6103      	str	r3, [r0, #16]
 8013912:	4770      	bx	lr

08013914 <usart_transmit_config>:
 8013914:	68c3      	ldr	r3, [r0, #12]
 8013916:	f023 0308 	bic.w	r3, r3, #8
 801391a:	430b      	orrs	r3, r1
 801391c:	60c3      	str	r3, [r0, #12]
 801391e:	4770      	bx	lr

08013920 <usart_receive_config>:
 8013920:	68c3      	ldr	r3, [r0, #12]
 8013922:	f023 0304 	bic.w	r3, r3, #4
 8013926:	430b      	orrs	r3, r1
 8013928:	60c3      	str	r3, [r0, #12]
 801392a:	4770      	bx	lr

0801392c <usart_hardware_flow_rts_config>:
 801392c:	6943      	ldr	r3, [r0, #20]
 801392e:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8013932:	430b      	orrs	r3, r1
 8013934:	6143      	str	r3, [r0, #20]
 8013936:	4770      	bx	lr

08013938 <usart_hardware_flow_cts_config>:
 8013938:	6943      	ldr	r3, [r0, #20]
 801393a:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 801393e:	430b      	orrs	r3, r1
 8013940:	6143      	str	r3, [r0, #20]
 8013942:	4770      	bx	lr

08013944 <usart_flag_get>:
 8013944:	098b      	lsrs	r3, r1, #6
 8013946:	581a      	ldr	r2, [r3, r0]
 8013948:	2301      	movs	r3, #1
 801394a:	f001 011f 	and.w	r1, r1, #31
 801394e:	408b      	lsls	r3, r1
 8013950:	4213      	tst	r3, r2
 8013952:	bf14      	ite	ne
 8013954:	2001      	movne	r0, #1
 8013956:	2000      	moveq	r0, #0
 8013958:	4770      	bx	lr
	...

0801395c <emac_eth_recv>:
 801395c:	b538      	push	{r3, r4, r5, lr}
 801395e:	4605      	mov	r5, r0
 8013960:	f001 f870 	bl	8014a44 <enet_rxframe_size_get>
 8013964:	4604      	mov	r4, r0
 8013966:	b138      	cbz	r0, 8013978 <emac_eth_recv+0x1c>
 8013968:	4b05      	ldr	r3, [pc, #20]	; (8013980 <emac_eth_recv+0x24>)
 801396a:	2105      	movs	r1, #5
 801396c:	6818      	ldr	r0, [r3, #0]
 801396e:	f001 f818 	bl	80149a2 <enet_desc_information_get>
 8013972:	6028      	str	r0, [r5, #0]
 8013974:	4620      	mov	r0, r4
 8013976:	bd38      	pop	{r3, r4, r5, pc}
 8013978:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801397c:	e7fb      	b.n	8013976 <emac_eth_recv+0x1a>
 801397e:	bf00      	nop
 8013980:	2001da34 	andcs	sp, r1, r4, lsr sl

08013984 <emac_free_pkt>:
 8013984:	2100      	movs	r1, #0
 8013986:	4608      	mov	r0, r1
 8013988:	f000 bd46 	b.w	8014418 <enet_frame_receive>

0801398c <emac_eth_send>:
 801398c:	f000 bd84 	b.w	8014498 <enet_frame_transmit>

08013990 <gd32_adc_init()>:
 8013990:	b510      	push	{r4, lr}
 8013992:	f240 6009 	movw	r0, #1545	; 0x609
 8013996:	4c21      	ldr	r4, [pc, #132]	; (8013a1c <gd32_adc_init()+0x8c>)
 8013998:	f7ff fb2e 	bl	8012ff8 <rcu_periph_clock_enable>
 801399c:	2005      	movs	r0, #5
 801399e:	f7ff fb67 	bl	8013070 <rcu_adc_clock_config>
 80139a2:	4620      	mov	r0, r4
 80139a4:	2201      	movs	r2, #1
 80139a6:	f44f 7180 	mov.w	r1, #256	; 0x100
 80139aa:	f000 fbf5 	bl	8014198 <adc_special_function_config>
 80139ae:	f44f 42e0 	mov.w	r2, #28672	; 0x7000
 80139b2:	4620      	mov	r0, r4
 80139b4:	2102      	movs	r1, #2
 80139b6:	f000 fc8e 	bl	80142d6 <adc_external_trigger_source_config>
 80139ba:	2100      	movs	r1, #0
 80139bc:	4620      	mov	r0, r4
 80139be:	f000 fc13 	bl	80141e8 <adc_data_alignment_config>
 80139c2:	2000      	movs	r0, #0
 80139c4:	f000 fbd8 	bl	8014178 <adc_mode_config>
 80139c8:	2202      	movs	r2, #2
 80139ca:	4620      	mov	r0, r4
 80139cc:	4611      	mov	r1, r2
 80139ce:	f000 fc37 	bl	8014240 <adc_channel_length_config>
 80139d2:	4620      	mov	r0, r4
 80139d4:	2307      	movs	r3, #7
 80139d6:	2210      	movs	r2, #16
 80139d8:	2100      	movs	r1, #0
 80139da:	f000 fc4e 	bl	801427a <adc_inserted_channel_config>
 80139de:	2307      	movs	r3, #7
 80139e0:	4620      	mov	r0, r4
 80139e2:	2211      	movs	r2, #17
 80139e4:	2101      	movs	r1, #1
 80139e6:	f000 fc48 	bl	801427a <adc_inserted_channel_config>
 80139ea:	2201      	movs	r2, #1
 80139ec:	2102      	movs	r1, #2
 80139ee:	4620      	mov	r0, r4
 80139f0:	f000 fc82 	bl	80142f8 <adc_external_trigger_config>
 80139f4:	f000 fc1a 	bl	801422c <adc_tempsensor_vrefint_enable>
 80139f8:	4620      	mov	r0, r4
 80139fa:	f000 fbfe 	bl	80141fa <adc_enable>
 80139fe:	2100      	movs	r1, #0
 8013a00:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8013a04:	f000 fae4 	bl	8013fd0 <udelay(unsigned int, unsigned int)>
 8013a08:	4620      	mov	r0, r4
 8013a0a:	f000 fbfe 	bl	801420a <adc_calibration_enable>
 8013a0e:	4620      	mov	r0, r4
 8013a10:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013a14:	2102      	movs	r1, #2
 8013a16:	f000 bc8a 	b.w	801432e <adc_software_trigger_enable>
 8013a1a:	bf00      	nop
 8013a1c:	40012400 	andmi	r2, r1, r0, lsl #8

08013a20 <_stop() [clone .isra.0]>:
 8013a20:	b508      	push	{r3, lr}
 8013a22:	4806      	ldr	r0, [pc, #24]	; (8013a3c <_stop() [clone .isra.0]+0x1c>)
 8013a24:	f001 f8d2 	bl	8014bcc <i2c_stop_on_bus>
 8013a28:	f640 73ff 	movw	r3, #4095	; 0xfff
 8013a2c:	4904      	ldr	r1, [pc, #16]	; (8013a40 <_stop() [clone .isra.0]+0x20>)
 8013a2e:	f8d1 2400 	ldr.w	r2, [r1, #1024]	; 0x400
 8013a32:	0592      	lsls	r2, r2, #22
 8013a34:	d501      	bpl.n	8013a3a <_stop() [clone .isra.0]+0x1a>
 8013a36:	3b01      	subs	r3, #1
 8013a38:	d1f9      	bne.n	8013a2e <_stop() [clone .isra.0]+0xe>
 8013a3a:	bd08      	pop	{r3, pc}
 8013a3c:	40005400 	andmi	r5, r0, r0, lsl #8
 8013a40:	40005000 	andmi	r5, r0, r0

08013a44 <gd32_i2c_begin>:
 8013a44:	b510      	push	{r4, lr}
 8013a46:	f240 7015 	movw	r0, #1813	; 0x715
 8013a4a:	f7ff fad5 	bl	8012ff8 <rcu_periph_clock_enable>
 8013a4e:	4c15      	ldr	r4, [pc, #84]	; (8013aa4 <gd32_i2c_begin+0x60>)
 8013a50:	f240 6003 	movw	r0, #1539	; 0x603
 8013a54:	f7ff fad0 	bl	8012ff8 <rcu_periph_clock_enable>
 8013a58:	f240 6003 	movw	r0, #1539	; 0x603
 8013a5c:	f7ff facc 	bl	8012ff8 <rcu_periph_clock_enable>
 8013a60:	4620      	mov	r0, r4
 8013a62:	f44f 7380 	mov.w	r3, #256	; 0x100
 8013a66:	2203      	movs	r2, #3
 8013a68:	211c      	movs	r1, #28
 8013a6a:	f7ff fa2d 	bl	8012ec8 <gpio_init>
 8013a6e:	f44f 7300 	mov.w	r3, #512	; 0x200
 8013a72:	2203      	movs	r2, #3
 8013a74:	4620      	mov	r0, r4
 8013a76:	211c      	movs	r1, #28
 8013a78:	f7ff fa26 	bl	8012ec8 <gpio_init>
 8013a7c:	f5a4 4438 	sub.w	r4, r4, #47104	; 0xb800
 8013a80:	2101      	movs	r1, #1
 8013a82:	2002      	movs	r0, #2
 8013a84:	f7ff fa74 	bl	8012f70 <gpio_pin_remap_config>
 8013a88:	4620      	mov	r0, r4
 8013a8a:	4907      	ldr	r1, [pc, #28]	; (8013aa8 <gd32_i2c_begin+0x64>)
 8013a8c:	2200      	movs	r2, #0
 8013a8e:	f001 f817 	bl	8014ac0 <i2c_clock_config>
 8013a92:	4620      	mov	r0, r4
 8013a94:	f001 f890 	bl	8014bb8 <i2c_enable>
 8013a98:	4620      	mov	r0, r4
 8013a9a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013a9e:	2101      	movs	r1, #1
 8013aa0:	f001 b870 	b.w	8014b84 <i2c_ack_config>
 8013aa4:	40010c00 	andmi	r0, r1, r0, lsl #24
 8013aa8:	00061a80 	andeq	r1, r6, r0, lsl #21

08013aac <gd32_i2c_set_baudrate>:
 8013aac:	4601      	mov	r1, r0
 8013aae:	2200      	movs	r2, #0
 8013ab0:	4801      	ldr	r0, [pc, #4]	; (8013ab8 <gd32_i2c_set_baudrate+0xc>)
 8013ab2:	f001 b805 	b.w	8014ac0 <i2c_clock_config>
 8013ab6:	bf00      	nop
 8013ab8:	40005400 	andmi	r5, r0, r0, lsl #8

08013abc <gd32_i2c_set_address>:
 8013abc:	4b01      	ldr	r3, [pc, #4]	; (8013ac4 <gd32_i2c_set_address+0x8>)
 8013abe:	0040      	lsls	r0, r0, #1
 8013ac0:	7018      	strb	r0, [r3, #0]
 8013ac2:	4770      	bx	lr
 8013ac4:	2001da28 	andcs	sp, r1, r8, lsr #20

08013ac8 <gd32_i2c_write>:
 8013ac8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8013aca:	4604      	mov	r4, r0
 8013acc:	460f      	mov	r7, r1
 8013ace:	f640 75ff 	movw	r5, #4095	; 0xfff
 8013ad2:	4e2e      	ldr	r6, [pc, #184]	; (8013b8c <gd32_i2c_write+0xc4>)
 8013ad4:	f240 6101 	movw	r1, #1537	; 0x601
 8013ad8:	4630      	mov	r0, r6
 8013ada:	f001 f881 	bl	8014be0 <i2c_flag_get>
 8013ade:	b9b0      	cbnz	r0, 8013b0e <gd32_i2c_write+0x46>
 8013ae0:	482a      	ldr	r0, [pc, #168]	; (8013b8c <gd32_i2c_write+0xc4>)
 8013ae2:	f001 f86e 	bl	8014bc2 <i2c_start_on_bus>
 8013ae6:	f640 75ff 	movw	r5, #4095	; 0xfff
 8013aea:	4e28      	ldr	r6, [pc, #160]	; (8013b8c <gd32_i2c_write+0xc4>)
 8013aec:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8013af0:	4630      	mov	r0, r6
 8013af2:	f001 f875 	bl	8014be0 <i2c_flag_get>
 8013af6:	b190      	cbz	r0, 8013b1e <gd32_i2c_write+0x56>
 8013af8:	4b25      	ldr	r3, [pc, #148]	; (8013b90 <gd32_i2c_write+0xc8>)
 8013afa:	f06f 0201 	mvn.w	r2, #1
 8013afe:	7819      	ldrb	r1, [r3, #0]
 8013b00:	4822      	ldr	r0, [pc, #136]	; (8013b8c <gd32_i2c_write+0xc4>)
 8013b02:	f001 f851 	bl	8014ba8 <i2c_master_addressing>
 8013b06:	f640 75ff 	movw	r5, #4095	; 0xfff
 8013b0a:	4e20      	ldr	r6, [pc, #128]	; (8013b8c <gd32_i2c_write+0xc4>)
 8013b0c:	e00c      	b.n	8013b28 <gd32_i2c_write+0x60>
 8013b0e:	3d01      	subs	r5, #1
 8013b10:	d1e0      	bne.n	8013ad4 <gd32_i2c_write+0xc>
 8013b12:	f7ff ff85 	bl	8013a20 <_stop() [clone .isra.0]>
 8013b16:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8013b1a:	4240      	negs	r0, r0
 8013b1c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8013b1e:	3d01      	subs	r5, #1
 8013b20:	d1e4      	bne.n	8013aec <gd32_i2c_write+0x24>
 8013b22:	e7f6      	b.n	8013b12 <gd32_i2c_write+0x4a>
 8013b24:	3d01      	subs	r5, #1
 8013b26:	d0f4      	beq.n	8013b12 <gd32_i2c_write+0x4a>
 8013b28:	f240 5101 	movw	r1, #1281	; 0x501
 8013b2c:	4630      	mov	r0, r6
 8013b2e:	f001 f857 	bl	8014be0 <i2c_flag_get>
 8013b32:	2800      	cmp	r0, #0
 8013b34:	d0f6      	beq.n	8013b24 <gd32_i2c_write+0x5c>
 8013b36:	f240 5101 	movw	r1, #1281	; 0x501
 8013b3a:	4814      	ldr	r0, [pc, #80]	; (8013b8c <gd32_i2c_write+0xc4>)
 8013b3c:	f001 f85b 	bl	8014bf6 <i2c_flag_clear>
 8013b40:	f640 75ff 	movw	r5, #4095	; 0xfff
 8013b44:	4e11      	ldr	r6, [pc, #68]	; (8013b8c <gd32_i2c_write+0xc4>)
 8013b46:	f240 5107 	movw	r1, #1287	; 0x507
 8013b4a:	4630      	mov	r0, r6
 8013b4c:	f001 f848 	bl	8014be0 <i2c_flag_get>
 8013b50:	2801      	cmp	r0, #1
 8013b52:	d107      	bne.n	8013b64 <gd32_i2c_write+0x9c>
 8013b54:	4e0d      	ldr	r6, [pc, #52]	; (8013b8c <gd32_i2c_write+0xc4>)
 8013b56:	4427      	add	r7, r4
 8013b58:	42a7      	cmp	r7, r4
 8013b5a:	d106      	bne.n	8013b6a <gd32_i2c_write+0xa2>
 8013b5c:	f7ff ff60 	bl	8013a20 <_stop() [clone .isra.0]>
 8013b60:	2000      	movs	r0, #0
 8013b62:	e7da      	b.n	8013b1a <gd32_i2c_write+0x52>
 8013b64:	3d01      	subs	r5, #1
 8013b66:	d1ee      	bne.n	8013b46 <gd32_i2c_write+0x7e>
 8013b68:	e7d3      	b.n	8013b12 <gd32_i2c_write+0x4a>
 8013b6a:	4630      	mov	r0, r6
 8013b6c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8013b70:	f001 f831 	bl	8014bd6 <i2c_data_transmit>
 8013b74:	f640 75ff 	movw	r5, #4095	; 0xfff
 8013b78:	f240 5102 	movw	r1, #1282	; 0x502
 8013b7c:	4630      	mov	r0, r6
 8013b7e:	f001 f82f 	bl	8014be0 <i2c_flag_get>
 8013b82:	2800      	cmp	r0, #0
 8013b84:	d1e8      	bne.n	8013b58 <gd32_i2c_write+0x90>
 8013b86:	3d01      	subs	r5, #1
 8013b88:	d1f6      	bne.n	8013b78 <gd32_i2c_write+0xb0>
 8013b8a:	e7c2      	b.n	8013b12 <gd32_i2c_write+0x4a>
 8013b8c:	40005400 	andmi	r5, r0, r0, lsl #8
 8013b90:	2001da28 	andcs	sp, r1, r8, lsr #20

08013b94 <gd32_i2c_read>:
 8013b94:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8013b98:	4680      	mov	r8, r0
 8013b9a:	460c      	mov	r4, r1
 8013b9c:	f640 76ff 	movw	r6, #4095	; 0xfff
 8013ba0:	4f4b      	ldr	r7, [pc, #300]	; (8013cd0 <gd32_i2c_read+0x13c>)
 8013ba2:	f240 6101 	movw	r1, #1537	; 0x601
 8013ba6:	4638      	mov	r0, r7
 8013ba8:	f001 f81a 	bl	8014be0 <i2c_flag_get>
 8013bac:	4605      	mov	r5, r0
 8013bae:	bb08      	cbnz	r0, 8013bf4 <gd32_i2c_read+0x60>
 8013bb0:	2c02      	cmp	r4, #2
 8013bb2:	d103      	bne.n	8013bbc <gd32_i2c_read+0x28>
 8013bb4:	4601      	mov	r1, r0
 8013bb6:	4846      	ldr	r0, [pc, #280]	; (8013cd0 <gd32_i2c_read+0x13c>)
 8013bb8:	f000 ffed 	bl	8014b96 <i2c_ackpos_config>
 8013bbc:	4844      	ldr	r0, [pc, #272]	; (8013cd0 <gd32_i2c_read+0x13c>)
 8013bbe:	f001 f800 	bl	8014bc2 <i2c_start_on_bus>
 8013bc2:	f640 76ff 	movw	r6, #4095	; 0xfff
 8013bc6:	4f42      	ldr	r7, [pc, #264]	; (8013cd0 <gd32_i2c_read+0x13c>)
 8013bc8:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8013bcc:	4638      	mov	r0, r7
 8013bce:	f001 f807 	bl	8014be0 <i2c_flag_get>
 8013bd2:	b1a8      	cbz	r0, 8013c00 <gd32_i2c_read+0x6c>
 8013bd4:	4b3f      	ldr	r3, [pc, #252]	; (8013cd4 <gd32_i2c_read+0x140>)
 8013bd6:	2201      	movs	r2, #1
 8013bd8:	7819      	ldrb	r1, [r3, #0]
 8013bda:	483d      	ldr	r0, [pc, #244]	; (8013cd0 <gd32_i2c_read+0x13c>)
 8013bdc:	f000 ffe4 	bl	8014ba8 <i2c_master_addressing>
 8013be0:	2c02      	cmp	r4, #2
 8013be2:	d803      	bhi.n	8013bec <gd32_i2c_read+0x58>
 8013be4:	2100      	movs	r1, #0
 8013be6:	483a      	ldr	r0, [pc, #232]	; (8013cd0 <gd32_i2c_read+0x13c>)
 8013be8:	f000 ffcc 	bl	8014b84 <i2c_ack_config>
 8013bec:	f640 76ff 	movw	r6, #4095	; 0xfff
 8013bf0:	4f37      	ldr	r7, [pc, #220]	; (8013cd0 <gd32_i2c_read+0x13c>)
 8013bf2:	e00a      	b.n	8013c0a <gd32_i2c_read+0x76>
 8013bf4:	3e01      	subs	r6, #1
 8013bf6:	d1d4      	bne.n	8013ba2 <gd32_i2c_read+0xe>
 8013bf8:	f7ff ff12 	bl	8013a20 <_stop() [clone .isra.0]>
 8013bfc:	2504      	movs	r5, #4
 8013bfe:	e04d      	b.n	8013c9c <gd32_i2c_read+0x108>
 8013c00:	3e01      	subs	r6, #1
 8013c02:	d1e1      	bne.n	8013bc8 <gd32_i2c_read+0x34>
 8013c04:	e7f8      	b.n	8013bf8 <gd32_i2c_read+0x64>
 8013c06:	3e01      	subs	r6, #1
 8013c08:	d0f6      	beq.n	8013bf8 <gd32_i2c_read+0x64>
 8013c0a:	f240 5101 	movw	r1, #1281	; 0x501
 8013c0e:	4638      	mov	r0, r7
 8013c10:	f000 ffe6 	bl	8014be0 <i2c_flag_get>
 8013c14:	2800      	cmp	r0, #0
 8013c16:	d0f6      	beq.n	8013c06 <gd32_i2c_read+0x72>
 8013c18:	f240 5101 	movw	r1, #1281	; 0x501
 8013c1c:	482c      	ldr	r0, [pc, #176]	; (8013cd0 <gd32_i2c_read+0x13c>)
 8013c1e:	f000 ffea 	bl	8014bf6 <i2c_flag_clear>
 8013c22:	2c01      	cmp	r4, #1
 8013c24:	d102      	bne.n	8013c2c <gd32_i2c_read+0x98>
 8013c26:	482a      	ldr	r0, [pc, #168]	; (8013cd0 <gd32_i2c_read+0x13c>)
 8013c28:	f000 ffd0 	bl	8014bcc <i2c_stop_on_bus>
 8013c2c:	f640 77ff 	movw	r7, #4095	; 0xfff
 8013c30:	4e27      	ldr	r6, [pc, #156]	; (8013cd0 <gd32_i2c_read+0x13c>)
 8013c32:	e022      	b.n	8013c7a <gd32_i2c_read+0xe6>
 8013c34:	2c03      	cmp	r4, #3
 8013c36:	d134      	bne.n	8013ca2 <gd32_i2c_read+0x10e>
 8013c38:	f640 79ff 	movw	r9, #4095	; 0xfff
 8013c3c:	e002      	b.n	8013c44 <gd32_i2c_read+0xb0>
 8013c3e:	f1b9 0901 	subs.w	r9, r9, #1
 8013c42:	d0d9      	beq.n	8013bf8 <gd32_i2c_read+0x64>
 8013c44:	f240 5102 	movw	r1, #1282	; 0x502
 8013c48:	4630      	mov	r0, r6
 8013c4a:	f000 ffc9 	bl	8014be0 <i2c_flag_get>
 8013c4e:	2800      	cmp	r0, #0
 8013c50:	d0f5      	beq.n	8013c3e <gd32_i2c_read+0xaa>
 8013c52:	2100      	movs	r1, #0
 8013c54:	4630      	mov	r0, r6
 8013c56:	f000 ff95 	bl	8014b84 <i2c_ack_config>
 8013c5a:	f240 5106 	movw	r1, #1286	; 0x506
 8013c5e:	4630      	mov	r0, r6
 8013c60:	f000 ffbe 	bl	8014be0 <i2c_flag_get>
 8013c64:	b138      	cbz	r0, 8013c76 <gd32_i2c_read+0xe2>
 8013c66:	4630      	mov	r0, r6
 8013c68:	f000 ffb7 	bl	8014bda <i2c_data_receive>
 8013c6c:	f640 77ff 	movw	r7, #4095	; 0xfff
 8013c70:	f808 0b01 	strb.w	r0, [r8], #1
 8013c74:	3c01      	subs	r4, #1
 8013c76:	3f01      	subs	r7, #1
 8013c78:	d0be      	beq.n	8013bf8 <gd32_i2c_read+0x64>
 8013c7a:	2c00      	cmp	r4, #0
 8013c7c:	d1da      	bne.n	8013c34 <gd32_i2c_read+0xa0>
 8013c7e:	f640 73ff 	movw	r3, #4095	; 0xfff
 8013c82:	4915      	ldr	r1, [pc, #84]	; (8013cd8 <gd32_i2c_read+0x144>)
 8013c84:	f8d1 2400 	ldr.w	r2, [r1, #1024]	; 0x400
 8013c88:	0592      	lsls	r2, r2, #22
 8013c8a:	d41d      	bmi.n	8013cc8 <gd32_i2c_read+0x134>
 8013c8c:	2101      	movs	r1, #1
 8013c8e:	4810      	ldr	r0, [pc, #64]	; (8013cd0 <gd32_i2c_read+0x13c>)
 8013c90:	f000 ff78 	bl	8014b84 <i2c_ack_config>
 8013c94:	2101      	movs	r1, #1
 8013c96:	480e      	ldr	r0, [pc, #56]	; (8013cd0 <gd32_i2c_read+0x13c>)
 8013c98:	f000 ff7d 	bl	8014b96 <i2c_ackpos_config>
 8013c9c:	4628      	mov	r0, r5
 8013c9e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8013ca2:	2c02      	cmp	r4, #2
 8013ca4:	d1d9      	bne.n	8013c5a <gd32_i2c_read+0xc6>
 8013ca6:	f640 79ff 	movw	r9, #4095	; 0xfff
 8013caa:	e002      	b.n	8013cb2 <gd32_i2c_read+0x11e>
 8013cac:	f1b9 0901 	subs.w	r9, r9, #1
 8013cb0:	d0a2      	beq.n	8013bf8 <gd32_i2c_read+0x64>
 8013cb2:	f240 5102 	movw	r1, #1282	; 0x502
 8013cb6:	4630      	mov	r0, r6
 8013cb8:	f000 ff92 	bl	8014be0 <i2c_flag_get>
 8013cbc:	2800      	cmp	r0, #0
 8013cbe:	d0f5      	beq.n	8013cac <gd32_i2c_read+0x118>
 8013cc0:	4630      	mov	r0, r6
 8013cc2:	f000 ff83 	bl	8014bcc <i2c_stop_on_bus>
 8013cc6:	e7c8      	b.n	8013c5a <gd32_i2c_read+0xc6>
 8013cc8:	3b01      	subs	r3, #1
 8013cca:	d1db      	bne.n	8013c84 <gd32_i2c_read+0xf0>
 8013ccc:	e796      	b.n	8013bfc <gd32_i2c_read+0x68>
 8013cce:	bf00      	nop
 8013cd0:	40005400 	andmi	r5, r0, r0, lsl #8
 8013cd4:	2001da28 	andcs	sp, r1, r8, lsr #20
 8013cd8:	40005000 	andmi	r5, r0, r0

08013cdc <gd32_uart_begin>:
 8013cdc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8013cde:	461e      	mov	r6, r3
 8013ce0:	4b82      	ldr	r3, [pc, #520]	; (8013eec <gd32_uart_begin+0x210>)
 8013ce2:	4604      	mov	r4, r0
 8013ce4:	4298      	cmp	r0, r3
 8013ce6:	460f      	mov	r7, r1
 8013ce8:	4615      	mov	r5, r2
 8013cea:	d060      	beq.n	8013dae <gd32_uart_begin+0xd2>
 8013cec:	d80f      	bhi.n	8013d0e <gd32_uart_begin+0x32>
 8013cee:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 8013cf2:	4298      	cmp	r0, r3
 8013cf4:	d04a      	beq.n	8013d8c <gd32_uart_begin+0xb0>
 8013cf6:	d84c      	bhi.n	8013d92 <gd32_uart_begin+0xb6>
 8013cf8:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8013cfc:	4298      	cmp	r0, r3
 8013cfe:	d03e      	beq.n	8013d7e <gd32_uart_begin+0xa2>
 8013d00:	f240 7012 	movw	r0, #1810	; 0x712
 8013d04:	f7ff f978 	bl	8012ff8 <rcu_periph_clock_enable>
 8013d08:	f240 6004 	movw	r0, #1540	; 0x604
 8013d0c:	e00f      	b.n	8013d2e <gd32_uart_begin+0x52>
 8013d0e:	4b78      	ldr	r3, [pc, #480]	; (8013ef0 <gd32_uart_begin+0x214>)
 8013d10:	4298      	cmp	r0, r3
 8013d12:	d006      	beq.n	8013d22 <gd32_uart_begin+0x46>
 8013d14:	f503 5360 	add.w	r3, r3, #14336	; 0x3800
 8013d18:	4298      	cmp	r0, r3
 8013d1a:	d045      	beq.n	8013da8 <gd32_uart_begin+0xcc>
 8013d1c:	f641 201f 	movw	r0, #6687	; 0x1a1f
 8013d20:	e047      	b.n	8013db2 <gd32_uart_begin+0xd6>
 8013d22:	f240 600e 	movw	r0, #1550	; 0x60e
 8013d26:	f7ff f967 	bl	8012ff8 <rcu_periph_clock_enable>
 8013d2a:	f240 6003 	movw	r0, #1539	; 0x603
 8013d2e:	f7ff f963 	bl	8012ff8 <rcu_periph_clock_enable>
 8013d32:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 8013d36:	f7ff f95f 	bl	8012ff8 <rcu_periph_clock_enable>
 8013d3a:	4b6c      	ldr	r3, [pc, #432]	; (8013eec <gd32_uart_begin+0x210>)
 8013d3c:	429c      	cmp	r4, r3
 8013d3e:	f000 80c3 	beq.w	8013ec8 <gd32_uart_begin+0x1ec>
 8013d42:	d83b      	bhi.n	8013dbc <gd32_uart_begin+0xe0>
 8013d44:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 8013d48:	429c      	cmp	r4, r3
 8013d4a:	f000 809c 	beq.w	8013e86 <gd32_uart_begin+0x1aa>
 8013d4e:	f200 80a7 	bhi.w	8013ea0 <gd32_uart_begin+0x1c4>
 8013d52:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8013d56:	429c      	cmp	r4, r3
 8013d58:	f000 8088 	beq.w	8013e6c <gd32_uart_begin+0x190>
 8013d5c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8013d60:	2203      	movs	r2, #3
 8013d62:	2118      	movs	r1, #24
 8013d64:	4863      	ldr	r0, [pc, #396]	; (8013ef4 <gd32_uart_begin+0x218>)
 8013d66:	f7ff f8af 	bl	8012ec8 <gpio_init>
 8013d6a:	2104      	movs	r1, #4
 8013d6c:	4861      	ldr	r0, [pc, #388]	; (8013ef4 <gd32_uart_begin+0x218>)
 8013d6e:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8013d72:	2203      	movs	r2, #3
 8013d74:	f7ff f8a8 	bl	8012ec8 <gpio_init>
 8013d78:	2101      	movs	r1, #1
 8013d7a:	485f      	ldr	r0, [pc, #380]	; (8013ef8 <gd32_uart_begin+0x21c>)
 8013d7c:	e03b      	b.n	8013df6 <gd32_uart_begin+0x11a>
 8013d7e:	f240 7011 	movw	r0, #1809	; 0x711
 8013d82:	f7ff f939 	bl	8012ff8 <rcu_periph_clock_enable>
 8013d86:	f240 6002 	movw	r0, #1538	; 0x602
 8013d8a:	e7d0      	b.n	8013d2e <gd32_uart_begin+0x52>
 8013d8c:	f240 7013 	movw	r0, #1811	; 0x713
 8013d90:	e7b8      	b.n	8013d04 <gd32_uart_begin+0x28>
 8013d92:	f240 7014 	movw	r0, #1812	; 0x714
 8013d96:	f7ff f92f 	bl	8012ff8 <rcu_periph_clock_enable>
 8013d9a:	f240 6004 	movw	r0, #1540	; 0x604
 8013d9e:	f7ff f92b 	bl	8012ff8 <rcu_periph_clock_enable>
 8013da2:	f240 6005 	movw	r0, #1541	; 0x605
 8013da6:	e7c2      	b.n	8013d2e <gd32_uart_begin+0x52>
 8013da8:	f641 1018 	movw	r0, #6424	; 0x1918
 8013dac:	e7aa      	b.n	8013d04 <gd32_uart_begin+0x28>
 8013dae:	f641 201e 	movw	r0, #6686	; 0x1a1e
 8013db2:	f7ff f921 	bl	8012ff8 <rcu_periph_clock_enable>
 8013db6:	f240 6006 	movw	r0, #1542	; 0x606
 8013dba:	e7b8      	b.n	8013d2e <gd32_uart_begin+0x52>
 8013dbc:	4b4c      	ldr	r3, [pc, #304]	; (8013ef0 <gd32_uart_begin+0x214>)
 8013dbe:	429c      	cmp	r4, r3
 8013dc0:	d00b      	beq.n	8013dda <gd32_uart_begin+0xfe>
 8013dc2:	f503 5360 	add.w	r3, r3, #14336	; 0x3800
 8013dc6:	429c      	cmp	r4, r3
 8013dc8:	d076      	beq.n	8013eb8 <gd32_uart_begin+0x1dc>
 8013dca:	2302      	movs	r3, #2
 8013dcc:	2203      	movs	r2, #3
 8013dce:	2118      	movs	r1, #24
 8013dd0:	484a      	ldr	r0, [pc, #296]	; (8013efc <gd32_uart_begin+0x220>)
 8013dd2:	f7ff f879 	bl	8012ec8 <gpio_init>
 8013dd6:	2301      	movs	r3, #1
 8013dd8:	e07e      	b.n	8013ed8 <gd32_uart_begin+0x1fc>
 8013dda:	2340      	movs	r3, #64	; 0x40
 8013ddc:	2203      	movs	r2, #3
 8013dde:	2118      	movs	r1, #24
 8013de0:	4847      	ldr	r0, [pc, #284]	; (8013f00 <gd32_uart_begin+0x224>)
 8013de2:	f7ff f871 	bl	8012ec8 <gpio_init>
 8013de6:	2104      	movs	r1, #4
 8013de8:	4845      	ldr	r0, [pc, #276]	; (8013f00 <gd32_uart_begin+0x224>)
 8013dea:	2380      	movs	r3, #128	; 0x80
 8013dec:	2203      	movs	r2, #3
 8013dee:	f7ff f86b 	bl	8012ec8 <gpio_init>
 8013df2:	2101      	movs	r1, #1
 8013df4:	2004      	movs	r0, #4
 8013df6:	f7ff f8bb 	bl	8012f70 <gpio_pin_remap_config>
 8013dfa:	4620      	mov	r0, r4
 8013dfc:	f7ff fcdc 	bl	80137b8 <usart_deinit>
 8013e00:	68e3      	ldr	r3, [r4, #12]
 8013e02:	4639      	mov	r1, r7
 8013e04:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8013e08:	4620      	mov	r0, r4
 8013e0a:	60e3      	str	r3, [r4, #12]
 8013e0c:	f7ff fd36 	bl	801387c <usart_baudrate_set>
 8013e10:	f1a5 0309 	sub.w	r3, r5, #9
 8013e14:	4259      	negs	r1, r3
 8013e16:	4159      	adcs	r1, r3
 8013e18:	4620      	mov	r0, r4
 8013e1a:	0309      	lsls	r1, r1, #12
 8013e1c:	f7ff fd6a 	bl	80138f4 <usart_word_length_set>
 8013e20:	9906      	ldr	r1, [sp, #24]
 8013e22:	4620      	mov	r0, r4
 8013e24:	1e8a      	subs	r2, r1, #2
 8013e26:	4251      	negs	r1, r2
 8013e28:	4151      	adcs	r1, r2
 8013e2a:	0349      	lsls	r1, r1, #13
 8013e2c:	f7ff fd6a 	bl	8013904 <usart_stop_bit_set>
 8013e30:	2e01      	cmp	r6, #1
 8013e32:	d055      	beq.n	8013ee0 <gd32_uart_begin+0x204>
 8013e34:	2e02      	cmp	r6, #2
 8013e36:	d156      	bne.n	8013ee6 <gd32_uart_begin+0x20a>
 8013e38:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8013e3c:	4620      	mov	r0, r4
 8013e3e:	f7ff fd51 	bl	80138e4 <usart_parity_config>
 8013e42:	2100      	movs	r1, #0
 8013e44:	4620      	mov	r0, r4
 8013e46:	f7ff fd71 	bl	801392c <usart_hardware_flow_rts_config>
 8013e4a:	2100      	movs	r1, #0
 8013e4c:	4620      	mov	r0, r4
 8013e4e:	f7ff fd73 	bl	8013938 <usart_hardware_flow_cts_config>
 8013e52:	2104      	movs	r1, #4
 8013e54:	4620      	mov	r0, r4
 8013e56:	f7ff fd63 	bl	8013920 <usart_receive_config>
 8013e5a:	2108      	movs	r1, #8
 8013e5c:	4620      	mov	r0, r4
 8013e5e:	f7ff fd59 	bl	8013914 <usart_transmit_config>
 8013e62:	68e3      	ldr	r3, [r4, #12]
 8013e64:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8013e68:	60e3      	str	r3, [r4, #12]
 8013e6a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8013e6c:	2304      	movs	r3, #4
 8013e6e:	2203      	movs	r2, #3
 8013e70:	2118      	movs	r1, #24
 8013e72:	4824      	ldr	r0, [pc, #144]	; (8013f04 <gd32_uart_begin+0x228>)
 8013e74:	f7ff f828 	bl	8012ec8 <gpio_init>
 8013e78:	2308      	movs	r3, #8
 8013e7a:	2203      	movs	r2, #3
 8013e7c:	2104      	movs	r1, #4
 8013e7e:	4821      	ldr	r0, [pc, #132]	; (8013f04 <gd32_uart_begin+0x228>)
 8013e80:	f7ff f822 	bl	8012ec8 <gpio_init>
 8013e84:	e7b9      	b.n	8013dfa <gd32_uart_begin+0x11e>
 8013e86:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8013e8a:	2203      	movs	r2, #3
 8013e8c:	2118      	movs	r1, #24
 8013e8e:	4819      	ldr	r0, [pc, #100]	; (8013ef4 <gd32_uart_begin+0x218>)
 8013e90:	f7ff f81a 	bl	8012ec8 <gpio_init>
 8013e94:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8013e98:	2203      	movs	r2, #3
 8013e9a:	2104      	movs	r1, #4
 8013e9c:	4815      	ldr	r0, [pc, #84]	; (8013ef4 <gd32_uart_begin+0x218>)
 8013e9e:	e7ef      	b.n	8013e80 <gd32_uart_begin+0x1a4>
 8013ea0:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8013ea4:	2203      	movs	r2, #3
 8013ea6:	2118      	movs	r1, #24
 8013ea8:	4812      	ldr	r0, [pc, #72]	; (8013ef4 <gd32_uart_begin+0x218>)
 8013eaa:	f7ff f80d 	bl	8012ec8 <gpio_init>
 8013eae:	2304      	movs	r3, #4
 8013eb0:	2203      	movs	r2, #3
 8013eb2:	4619      	mov	r1, r3
 8013eb4:	4814      	ldr	r0, [pc, #80]	; (8013f08 <gd32_uart_begin+0x22c>)
 8013eb6:	e7e3      	b.n	8013e80 <gd32_uart_begin+0x1a4>
 8013eb8:	2340      	movs	r3, #64	; 0x40
 8013eba:	2203      	movs	r2, #3
 8013ebc:	2118      	movs	r1, #24
 8013ebe:	480d      	ldr	r0, [pc, #52]	; (8013ef4 <gd32_uart_begin+0x218>)
 8013ec0:	f7ff f802 	bl	8012ec8 <gpio_init>
 8013ec4:	2380      	movs	r3, #128	; 0x80
 8013ec6:	e7e7      	b.n	8013e98 <gd32_uart_begin+0x1bc>
 8013ec8:	f44f 7380 	mov.w	r3, #256	; 0x100
 8013ecc:	2203      	movs	r2, #3
 8013ece:	2118      	movs	r1, #24
 8013ed0:	480a      	ldr	r0, [pc, #40]	; (8013efc <gd32_uart_begin+0x220>)
 8013ed2:	f7fe fff9 	bl	8012ec8 <gpio_init>
 8013ed6:	2380      	movs	r3, #128	; 0x80
 8013ed8:	2203      	movs	r2, #3
 8013eda:	2104      	movs	r1, #4
 8013edc:	4807      	ldr	r0, [pc, #28]	; (8013efc <gd32_uart_begin+0x220>)
 8013ede:	e7cf      	b.n	8013e80 <gd32_uart_begin+0x1a4>
 8013ee0:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 8013ee4:	e7aa      	b.n	8013e3c <gd32_uart_begin+0x160>
 8013ee6:	2100      	movs	r1, #0
 8013ee8:	e7a8      	b.n	8013e3c <gd32_uart_begin+0x160>
 8013eea:	bf00      	nop
 8013eec:	40007800 	andmi	r7, r0, r0, lsl #16
 8013ef0:	40013800 	andmi	r3, r1, r0, lsl #16
 8013ef4:	40011000 	andmi	r1, r1, r0
 8013ef8:	00140010 	andseq	r0, r4, r0, lsl r0
 8013efc:	40011800 	andmi	r1, r1, r0, lsl #16
 8013f00:	40010c00 	andmi	r0, r1, r0, lsl #24
 8013f04:	40010800 	andmi	r0, r1, r0, lsl #16
 8013f08:	40011400 	andmi	r1, r1, r0, lsl #8

08013f0c <micros_init()>:
 8013f0c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8013f0e:	2400      	movs	r4, #0
 8013f10:	f04f 36ff 	mov.w	r6, #4294967295	; 0xffffffff
 8013f14:	4d22      	ldr	r5, [pc, #136]	; (8013fa0 <micros_init()+0x94>)
 8013f16:	f240 6013 	movw	r0, #1555	; 0x613
 8013f1a:	f7ff f86d 	bl	8012ff8 <rcu_periph_clock_enable>
 8013f1e:	4628      	mov	r0, r5
 8013f20:	f7ff f9ce 	bl	80132c0 <timer_deinit>
 8013f24:	4b1f      	ldr	r3, [pc, #124]	; (8013fa4 <micros_init()+0x98>)
 8013f26:	4628      	mov	r0, r5
 8013f28:	f8c3 4c24 	str.w	r4, [r3, #3108]	; 0xc24
 8013f2c:	4669      	mov	r1, sp
 8013f2e:	9400      	str	r4, [sp, #0]
 8013f30:	f8ad 4004 	strh.w	r4, [sp, #4]
 8013f34:	9602      	str	r6, [sp, #8]
 8013f36:	f8ad 400c 	strh.w	r4, [sp, #12]
 8013f3a:	f7ff fa67 	bl	801340c <timer_init>
 8013f3e:	4628      	mov	r0, r5
 8013f40:	4621      	mov	r1, r4
 8013f42:	f7ff fc27 	bl	8013794 <timer_master_slave_mode_config>
 8013f46:	4628      	mov	r0, r5
 8013f48:	2107      	movs	r1, #7
 8013f4a:	f7ff fc1b 	bl	8013784 <timer_slave_mode_select>
 8013f4e:	2120      	movs	r1, #32
 8013f50:	4628      	mov	r0, r5
 8013f52:	f7ff fc07 	bl	8013764 <timer_input_trigger_source_select>
 8013f56:	4628      	mov	r0, r5
 8013f58:	f7ff fab0 	bl	80134bc <timer_enable>
 8013f5c:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8013f60:	f240 6014 	movw	r0, #1556	; 0x614
 8013f64:	f7ff f848 	bl	8012ff8 <rcu_periph_clock_enable>
 8013f68:	4628      	mov	r0, r5
 8013f6a:	f7ff f9a9 	bl	80132c0 <timer_deinit>
 8013f6e:	2377      	movs	r3, #119	; 0x77
 8013f70:	626c      	str	r4, [r5, #36]	; 0x24
 8013f72:	4669      	mov	r1, sp
 8013f74:	4628      	mov	r0, r5
 8013f76:	9300      	str	r3, [sp, #0]
 8013f78:	f8ad 4004 	strh.w	r4, [sp, #4]
 8013f7c:	9602      	str	r6, [sp, #8]
 8013f7e:	f8ad 400c 	strh.w	r4, [sp, #12]
 8013f82:	f7ff fa43 	bl	801340c <timer_init>
 8013f86:	4621      	mov	r1, r4
 8013f88:	4628      	mov	r0, r5
 8013f8a:	f7ff fc03 	bl	8013794 <timer_master_slave_mode_config>
 8013f8e:	2120      	movs	r1, #32
 8013f90:	4628      	mov	r0, r5
 8013f92:	f7ff fbef 	bl	8013774 <timer_master_output_trigger_source_select>
 8013f96:	4628      	mov	r0, r5
 8013f98:	f7ff fa90 	bl	80134bc <timer_enable>
 8013f9c:	b004      	add	sp, #16
 8013f9e:	bd70      	pop	{r4, r5, r6, pc}
 8013fa0:	40014c00 	andmi	r4, r1, r0, lsl #24
 8013fa4:	40014000 	andmi	r4, r1, r0

08013fa8 <udelay_init()>:
 8013fa8:	4a07      	ldr	r2, [pc, #28]	; (8013fc8 <udelay_init()+0x20>)
 8013faa:	f8d2 30fc 	ldr.w	r3, [r2, #252]	; 0xfc
 8013fae:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8013fb2:	f8c2 30fc 	str.w	r3, [r2, #252]	; 0xfc
 8013fb6:	2200      	movs	r2, #0
 8013fb8:	4b04      	ldr	r3, [pc, #16]	; (8013fcc <udelay_init()+0x24>)
 8013fba:	605a      	str	r2, [r3, #4]
 8013fbc:	681a      	ldr	r2, [r3, #0]
 8013fbe:	f042 0201 	orr.w	r2, r2, #1
 8013fc2:	601a      	str	r2, [r3, #0]
 8013fc4:	4770      	bx	lr
 8013fc6:	bf00      	nop
 8013fc8:	e000ed00 	and	lr, r0, r0, lsl #26
 8013fcc:	e0001000 	and	r1, r0, r0

08013fd0 <udelay(unsigned int, unsigned int)>:
 8013fd0:	2378      	movs	r3, #120	; 0x78
 8013fd2:	b530      	push	{r4, r5, lr}
 8013fd4:	4358      	muls	r0, r3
 8013fd6:	b909      	cbnz	r1, 8013fdc <udelay(unsigned int, unsigned int)+0xc>
 8013fd8:	4b08      	ldr	r3, [pc, #32]	; (8013ffc <udelay(unsigned int, unsigned int)+0x2c>)
 8013fda:	6859      	ldr	r1, [r3, #4]
 8013fdc:	2300      	movs	r3, #0
 8013fde:	4c07      	ldr	r4, [pc, #28]	; (8013ffc <udelay(unsigned int, unsigned int)+0x2c>)
 8013fe0:	6862      	ldr	r2, [r4, #4]
 8013fe2:	4291      	cmp	r1, r2
 8013fe4:	d0fc      	beq.n	8013fe0 <udelay(unsigned int, unsigned int)+0x10>
 8013fe6:	bf2a      	itet	cs
 8013fe8:	f102 35ff 	addcs.w	r5, r2, #4294967295	; 0xffffffff
 8013fec:	189b      	addcc	r3, r3, r2
 8013fee:	195b      	addcs	r3, r3, r5
 8013ff0:	1a5b      	subs	r3, r3, r1
 8013ff2:	4283      	cmp	r3, r0
 8013ff4:	d300      	bcc.n	8013ff8 <udelay(unsigned int, unsigned int)+0x28>
 8013ff6:	bd30      	pop	{r4, r5, pc}
 8013ff8:	4611      	mov	r1, r2
 8013ffa:	e7f1      	b.n	8013fe0 <udelay(unsigned int, unsigned int)+0x10>
 8013ffc:	e0001000 	and	r1, r0, r0

08014000 <emac_start(unsigned char*)>:
 8014000:	b538      	push	{r3, r4, r5, lr}
 8014002:	4605      	mov	r5, r0
 8014004:	f240 6002 	movw	r0, #1538	; 0x602
 8014008:	f7fe fff6 	bl	8012ff8 <rcu_periph_clock_enable>
 801400c:	f240 6003 	movw	r0, #1539	; 0x603
 8014010:	f7fe fff2 	bl	8012ff8 <rcu_periph_clock_enable>
 8014014:	f240 6004 	movw	r0, #1540	; 0x604
 8014018:	f7fe ffee 	bl	8012ff8 <rcu_periph_clock_enable>
 801401c:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 8014020:	f7fe ffea 	bl	8012ff8 <rcu_periph_clock_enable>
 8014024:	f44f 7380 	mov.w	r3, #256	; 0x100
 8014028:	2203      	movs	r2, #3
 801402a:	2118      	movs	r1, #24
 801402c:	4844      	ldr	r0, [pc, #272]	; (8014140 <emac_start(unsigned char*)+0x140>)
 801402e:	f7fe ff4b 	bl	8012ec8 <gpio_init>
 8014032:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 8014036:	f7ff f80f 	bl	8013058 <rcu_pll2_config>
 801403a:	201c      	movs	r0, #28
 801403c:	f7ff f8b6 	bl	80131ac <rcu_osci_on>
 8014040:	201c      	movs	r0, #28
 8014042:	f7ff f843 	bl	80130cc <rcu_osci_stab_wait>
 8014046:	2100      	movs	r1, #0
 8014048:	f04f 6030 	mov.w	r0, #184549376	; 0xb000000
 801404c:	f7fe fff4 	bl	8013038 <rcu_ckout0_config>
 8014050:	f44f 0000 	mov.w	r0, #8388608	; 0x800000
 8014054:	f7fe ffbc 	bl	8012fd0 <gpio_ethernet_phy_select>
 8014058:	2302      	movs	r3, #2
 801405a:	2203      	movs	r2, #3
 801405c:	2104      	movs	r1, #4
 801405e:	4838      	ldr	r0, [pc, #224]	; (8014140 <emac_start(unsigned char*)+0x140>)
 8014060:	f7fe ff32 	bl	8012ec8 <gpio_init>
 8014064:	2304      	movs	r3, #4
 8014066:	2203      	movs	r2, #3
 8014068:	2118      	movs	r1, #24
 801406a:	4835      	ldr	r0, [pc, #212]	; (8014140 <emac_start(unsigned char*)+0x140>)
 801406c:	f7fe ff2c 	bl	8012ec8 <gpio_init>
 8014070:	2380      	movs	r3, #128	; 0x80
 8014072:	2203      	movs	r2, #3
 8014074:	2104      	movs	r1, #4
 8014076:	4832      	ldr	r0, [pc, #200]	; (8014140 <emac_start(unsigned char*)+0x140>)
 8014078:	f7fe ff26 	bl	8012ec8 <gpio_init>
 801407c:	2302      	movs	r3, #2
 801407e:	2203      	movs	r2, #3
 8014080:	2118      	movs	r1, #24
 8014082:	4830      	ldr	r0, [pc, #192]	; (8014144 <emac_start(unsigned char*)+0x144>)
 8014084:	f7fe ff20 	bl	8012ec8 <gpio_init>
 8014088:	2310      	movs	r3, #16
 801408a:	2203      	movs	r2, #3
 801408c:	2104      	movs	r1, #4
 801408e:	482d      	ldr	r0, [pc, #180]	; (8014144 <emac_start(unsigned char*)+0x144>)
 8014090:	f7fe ff1a 	bl	8012ec8 <gpio_init>
 8014094:	2320      	movs	r3, #32
 8014096:	2203      	movs	r2, #3
 8014098:	2104      	movs	r1, #4
 801409a:	482a      	ldr	r0, [pc, #168]	; (8014144 <emac_start(unsigned char*)+0x144>)
 801409c:	f7fe ff14 	bl	8012ec8 <gpio_init>
 80140a0:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80140a4:	2203      	movs	r2, #3
 80140a6:	2118      	movs	r1, #24
 80140a8:	4827      	ldr	r0, [pc, #156]	; (8014148 <emac_start(unsigned char*)+0x148>)
 80140aa:	f7fe ff0d 	bl	8012ec8 <gpio_init>
 80140ae:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80140b2:	2203      	movs	r2, #3
 80140b4:	2118      	movs	r1, #24
 80140b6:	4824      	ldr	r0, [pc, #144]	; (8014148 <emac_start(unsigned char*)+0x148>)
 80140b8:	f7fe ff06 	bl	8012ec8 <gpio_init>
 80140bc:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80140c0:	2203      	movs	r2, #3
 80140c2:	2118      	movs	r1, #24
 80140c4:	4820      	ldr	r0, [pc, #128]	; (8014148 <emac_start(unsigned char*)+0x148>)
 80140c6:	f7fe feff 	bl	8012ec8 <gpio_init>
 80140ca:	f240 500e 	movw	r0, #1294	; 0x50e
 80140ce:	f7fe ff93 	bl	8012ff8 <rcu_periph_clock_enable>
 80140d2:	f240 500f 	movw	r0, #1295	; 0x50f
 80140d6:	f7fe ff8f 	bl	8012ff8 <rcu_periph_clock_enable>
 80140da:	f44f 60a2 	mov.w	r0, #1296	; 0x510
 80140de:	f7fe ff8b 	bl	8012ff8 <rcu_periph_clock_enable>
 80140e2:	f000 fcdf 	bl	8014aa4 <enet_deinit>
 80140e6:	f000 f93b 	bl	8014360 <enet_software_reset>
 80140ea:	4604      	mov	r4, r0
 80140ec:	b138      	cbz	r0, 80140fe <emac_start(unsigned char*)+0xfe>
 80140ee:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 80140f2:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80140f6:	2001      	movs	r0, #1
 80140f8:	f000 fab6 	bl	8014668 <enet_init>
 80140fc:	4604      	mov	r4, r0
 80140fe:	4628      	mov	r0, r5
 8014100:	f000 fd8c 	bl	8014c1c <mac_address_get(unsigned char*)>
 8014104:	4629      	mov	r1, r5
 8014106:	2000      	movs	r0, #0
 8014108:	f000 fa0e 	bl	8014528 <enet_mac_address_set>
 801410c:	f44f 00e0 	mov.w	r0, #7340032	; 0x700000
 8014110:	f000 f93a 	bl	8014388 <enet_descriptors_chain_init>
 8014114:	f44f 2060 	mov.w	r0, #917504	; 0xe0000
 8014118:	f000 f936 	bl	8014388 <enet_descriptors_chain_init>
 801411c:	f44f 0140 	mov.w	r1, #12582912	; 0xc00000
 8014120:	480a      	ldr	r0, [pc, #40]	; (801414c <emac_start(unsigned char*)+0x14c>)
 8014122:	f000 f9fb 	bl	801451c <enet_transmit_checksum_config>
 8014126:	f44f 0140 	mov.w	r1, #12582912	; 0xc00000
 801412a:	4809      	ldr	r0, [pc, #36]	; (8014150 <emac_start(unsigned char*)+0x150>)
 801412c:	f000 f9f6 	bl	801451c <enet_transmit_checksum_config>
 8014130:	f000 fc30 	bl	8014994 <enet_enable>
 8014134:	fab4 f084 	clz	r0, r4
 8014138:	0940      	lsrs	r0, r0, #5
 801413a:	4240      	negs	r0, r0
 801413c:	bd38      	pop	{r3, r4, r5, pc}
 801413e:	bf00      	nop
 8014140:	40010800 	andmi	r0, r1, r0, lsl #16
 8014144:	40011000 	andmi	r1, r1, r0
 8014148:	40010c00 	andmi	r0, r1, r0, lsl #24
 801414c:	2002b2e8 	andcs	fp, r2, r8, ror #5
 8014150:	2002b2f8 	strdcs	fp, [r2], -r8

08014154 <net::link_register_read()>:
 8014154:	b507      	push	{r0, r1, r2, lr}
 8014156:	2201      	movs	r2, #1
 8014158:	f10d 0306 	add.w	r3, sp, #6
 801415c:	4611      	mov	r1, r2
 801415e:	2000      	movs	r0, #0
 8014160:	f000 f9fa 	bl	8014558 <enet_phy_write_read>
 8014164:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8014168:	f080 0004 	eor.w	r0, r0, #4
 801416c:	f3c0 0080 	ubfx	r0, r0, #2, #1
 8014170:	b003      	add	sp, #12
 8014172:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08014178 <adc_mode_config>:
 8014178:	4b06      	ldr	r3, [pc, #24]	; (8014194 <adc_mode_config+0x1c>)
 801417a:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 801417e:	f422 2270 	bic.w	r2, r2, #983040	; 0xf0000
 8014182:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 8014186:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 801418a:	4302      	orrs	r2, r0
 801418c:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 8014190:	4770      	bx	lr
 8014192:	bf00      	nop
 8014194:	40012000 	andmi	r2, r1, r0

08014198 <adc_special_function_config>:
 8014198:	b510      	push	{r4, lr}
 801419a:	f401 7380 	and.w	r3, r1, #256	; 0x100
 801419e:	f401 6480 	and.w	r4, r1, #1024	; 0x400
 80141a2:	f001 0102 	and.w	r1, r1, #2
 80141a6:	b17a      	cbz	r2, 80141c8 <adc_special_function_config+0x30>
 80141a8:	b11b      	cbz	r3, 80141b2 <adc_special_function_config+0x1a>
 80141aa:	6843      	ldr	r3, [r0, #4]
 80141ac:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80141b0:	6043      	str	r3, [r0, #4]
 80141b2:	b11c      	cbz	r4, 80141bc <adc_special_function_config+0x24>
 80141b4:	6843      	ldr	r3, [r0, #4]
 80141b6:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80141ba:	6043      	str	r3, [r0, #4]
 80141bc:	b119      	cbz	r1, 80141c6 <adc_special_function_config+0x2e>
 80141be:	6883      	ldr	r3, [r0, #8]
 80141c0:	f043 0302 	orr.w	r3, r3, #2
 80141c4:	6083      	str	r3, [r0, #8]
 80141c6:	bd10      	pop	{r4, pc}
 80141c8:	b11b      	cbz	r3, 80141d2 <adc_special_function_config+0x3a>
 80141ca:	6843      	ldr	r3, [r0, #4]
 80141cc:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80141d0:	6043      	str	r3, [r0, #4]
 80141d2:	b11c      	cbz	r4, 80141dc <adc_special_function_config+0x44>
 80141d4:	6843      	ldr	r3, [r0, #4]
 80141d6:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80141da:	6043      	str	r3, [r0, #4]
 80141dc:	2900      	cmp	r1, #0
 80141de:	d0f2      	beq.n	80141c6 <adc_special_function_config+0x2e>
 80141e0:	6883      	ldr	r3, [r0, #8]
 80141e2:	f023 0302 	bic.w	r3, r3, #2
 80141e6:	e7ed      	b.n	80141c4 <adc_special_function_config+0x2c>

080141e8 <adc_data_alignment_config>:
 80141e8:	6883      	ldr	r3, [r0, #8]
 80141ea:	b119      	cbz	r1, 80141f4 <adc_data_alignment_config+0xc>
 80141ec:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 80141f0:	6083      	str	r3, [r0, #8]
 80141f2:	4770      	bx	lr
 80141f4:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80141f8:	e7fa      	b.n	80141f0 <adc_data_alignment_config+0x8>

080141fa <adc_enable>:
 80141fa:	6883      	ldr	r3, [r0, #8]
 80141fc:	07db      	lsls	r3, r3, #31
 80141fe:	bf5e      	ittt	pl
 8014200:	6883      	ldrpl	r3, [r0, #8]
 8014202:	f043 0301 	orrpl.w	r3, r3, #1
 8014206:	6083      	strpl	r3, [r0, #8]
 8014208:	4770      	bx	lr

0801420a <adc_calibration_enable>:
 801420a:	6883      	ldr	r3, [r0, #8]
 801420c:	f100 0208 	add.w	r2, r0, #8
 8014210:	f043 0308 	orr.w	r3, r3, #8
 8014214:	6083      	str	r3, [r0, #8]
 8014216:	6813      	ldr	r3, [r2, #0]
 8014218:	0719      	lsls	r1, r3, #28
 801421a:	d4fc      	bmi.n	8014216 <adc_calibration_enable+0xc>
 801421c:	6883      	ldr	r3, [r0, #8]
 801421e:	f043 0304 	orr.w	r3, r3, #4
 8014222:	6083      	str	r3, [r0, #8]
 8014224:	6813      	ldr	r3, [r2, #0]
 8014226:	075b      	lsls	r3, r3, #29
 8014228:	d4fc      	bmi.n	8014224 <adc_calibration_enable+0x1a>
 801422a:	4770      	bx	lr

0801422c <adc_tempsensor_vrefint_enable>:
 801422c:	4a03      	ldr	r2, [pc, #12]	; (801423c <adc_tempsensor_vrefint_enable+0x10>)
 801422e:	f8d2 3408 	ldr.w	r3, [r2, #1032]	; 0x408
 8014232:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8014236:	f8c2 3408 	str.w	r3, [r2, #1032]	; 0x408
 801423a:	4770      	bx	lr
 801423c:	40012000 	andmi	r2, r1, r0

08014240 <adc_channel_length_config>:
 8014240:	2901      	cmp	r1, #1
 8014242:	d002      	beq.n	801424a <adc_channel_length_config+0xa>
 8014244:	2902      	cmp	r1, #2
 8014246:	d00c      	beq.n	8014262 <adc_channel_length_config+0x22>
 8014248:	4770      	bx	lr
 801424a:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 801424c:	3a01      	subs	r2, #1
 801424e:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 8014252:	62c3      	str	r3, [r0, #44]	; 0x2c
 8014254:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8014256:	0512      	lsls	r2, r2, #20
 8014258:	f402 0270 	and.w	r2, r2, #15728640	; 0xf00000
 801425c:	431a      	orrs	r2, r3
 801425e:	62c2      	str	r2, [r0, #44]	; 0x2c
 8014260:	4770      	bx	lr
 8014262:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8014264:	3a01      	subs	r2, #1
 8014266:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 801426a:	6383      	str	r3, [r0, #56]	; 0x38
 801426c:	6b83      	ldr	r3, [r0, #56]	; 0x38
 801426e:	0512      	lsls	r2, r2, #20
 8014270:	f402 1240 	and.w	r2, r2, #3145728	; 0x300000
 8014274:	431a      	orrs	r2, r3
 8014276:	6382      	str	r2, [r0, #56]	; 0x38
 8014278:	4770      	bx	lr

0801427a <adc_inserted_channel_config>:
 801427a:	b530      	push	{r4, r5, lr}
 801427c:	6b84      	ldr	r4, [r0, #56]	; 0x38
 801427e:	6b85      	ldr	r5, [r0, #56]	; 0x38
 8014280:	f3c4 5401 	ubfx	r4, r4, #20, #2
 8014284:	1a61      	subs	r1, r4, r1
 8014286:	f06f 0404 	mvn.w	r4, #4
 801428a:	4361      	muls	r1, r4
 801428c:	241f      	movs	r4, #31
 801428e:	310f      	adds	r1, #15
 8014290:	408c      	lsls	r4, r1
 8014292:	ea25 0504 	bic.w	r5, r5, r4
 8014296:	fa02 f101 	lsl.w	r1, r2, r1
 801429a:	4329      	orrs	r1, r5
 801429c:	2a09      	cmp	r2, #9
 801429e:	6381      	str	r1, [r0, #56]	; 0x38
 80142a0:	d80b      	bhi.n	80142ba <adc_inserted_channel_config+0x40>
 80142a2:	2407      	movs	r4, #7
 80142a4:	6901      	ldr	r1, [r0, #16]
 80142a6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80142aa:	4094      	lsls	r4, r2
 80142ac:	ea21 0104 	bic.w	r1, r1, r4
 80142b0:	fa03 f202 	lsl.w	r2, r3, r2
 80142b4:	430a      	orrs	r2, r1
 80142b6:	6102      	str	r2, [r0, #16]
 80142b8:	bd30      	pop	{r4, r5, pc}
 80142ba:	2a11      	cmp	r2, #17
 80142bc:	d8fc      	bhi.n	80142b8 <adc_inserted_channel_config+0x3e>
 80142be:	2407      	movs	r4, #7
 80142c0:	3a0a      	subs	r2, #10
 80142c2:	68c1      	ldr	r1, [r0, #12]
 80142c4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80142c8:	4094      	lsls	r4, r2
 80142ca:	ea21 0104 	bic.w	r1, r1, r4
 80142ce:	4093      	lsls	r3, r2
 80142d0:	430b      	orrs	r3, r1
 80142d2:	60c3      	str	r3, [r0, #12]
 80142d4:	e7f0      	b.n	80142b8 <adc_inserted_channel_config+0x3e>

080142d6 <adc_external_trigger_source_config>:
 80142d6:	2901      	cmp	r1, #1
 80142d8:	d002      	beq.n	80142e0 <adc_external_trigger_source_config+0xa>
 80142da:	2902      	cmp	r1, #2
 80142dc:	d008      	beq.n	80142f0 <adc_external_trigger_source_config+0x1a>
 80142de:	4770      	bx	lr
 80142e0:	6883      	ldr	r3, [r0, #8]
 80142e2:	f423 2360 	bic.w	r3, r3, #917504	; 0xe0000
 80142e6:	6083      	str	r3, [r0, #8]
 80142e8:	6883      	ldr	r3, [r0, #8]
 80142ea:	4313      	orrs	r3, r2
 80142ec:	6083      	str	r3, [r0, #8]
 80142ee:	4770      	bx	lr
 80142f0:	6883      	ldr	r3, [r0, #8]
 80142f2:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80142f6:	e7f6      	b.n	80142e6 <adc_external_trigger_source_config+0x10>

080142f8 <adc_external_trigger_config>:
 80142f8:	f001 0301 	and.w	r3, r1, #1
 80142fc:	f001 0102 	and.w	r1, r1, #2
 8014300:	b152      	cbz	r2, 8014318 <adc_external_trigger_config+0x20>
 8014302:	b11b      	cbz	r3, 801430c <adc_external_trigger_config+0x14>
 8014304:	6883      	ldr	r3, [r0, #8]
 8014306:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 801430a:	6083      	str	r3, [r0, #8]
 801430c:	b119      	cbz	r1, 8014316 <adc_external_trigger_config+0x1e>
 801430e:	6883      	ldr	r3, [r0, #8]
 8014310:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8014314:	6083      	str	r3, [r0, #8]
 8014316:	4770      	bx	lr
 8014318:	b11b      	cbz	r3, 8014322 <adc_external_trigger_config+0x2a>
 801431a:	6883      	ldr	r3, [r0, #8]
 801431c:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 8014320:	6083      	str	r3, [r0, #8]
 8014322:	2900      	cmp	r1, #0
 8014324:	d0f7      	beq.n	8014316 <adc_external_trigger_config+0x1e>
 8014326:	6883      	ldr	r3, [r0, #8]
 8014328:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 801432c:	e7f2      	b.n	8014314 <adc_external_trigger_config+0x1c>

0801432e <adc_software_trigger_enable>:
 801432e:	07ca      	lsls	r2, r1, #31
 8014330:	bf42      	ittt	mi
 8014332:	6883      	ldrmi	r3, [r0, #8]
 8014334:	f443 0380 	orrmi.w	r3, r3, #4194304	; 0x400000
 8014338:	6083      	strmi	r3, [r0, #8]
 801433a:	078b      	lsls	r3, r1, #30
 801433c:	bf42      	ittt	mi
 801433e:	6883      	ldrmi	r3, [r0, #8]
 8014340:	f443 1300 	orrmi.w	r3, r3, #2097152	; 0x200000
 8014344:	6083      	strmi	r3, [r0, #8]
 8014346:	4770      	bx	lr

08014348 <enet_delay>:
 8014348:	2300      	movs	r3, #0
 801434a:	b082      	sub	sp, #8
 801434c:	9301      	str	r3, [sp, #4]
 801434e:	9001      	str	r0, [sp, #4]
 8014350:	9b01      	ldr	r3, [sp, #4]
 8014352:	b90b      	cbnz	r3, 8014358 <enet_delay+0x10>
 8014354:	b002      	add	sp, #8
 8014356:	4770      	bx	lr
 8014358:	9b01      	ldr	r3, [sp, #4]
 801435a:	3b01      	subs	r3, #1
 801435c:	9301      	str	r3, [sp, #4]
 801435e:	e7f7      	b.n	8014350 <enet_delay+0x8>

08014360 <enet_software_reset>:
 8014360:	4b07      	ldr	r3, [pc, #28]	; (8014380 <enet_software_reset+0x20>)
 8014362:	681a      	ldr	r2, [r3, #0]
 8014364:	f042 0201 	orr.w	r2, r2, #1
 8014368:	601a      	str	r2, [r3, #0]
 801436a:	4a06      	ldr	r2, [pc, #24]	; (8014384 <enet_software_reset+0x24>)
 801436c:	6819      	ldr	r1, [r3, #0]
 801436e:	07c9      	lsls	r1, r1, #31
 8014370:	d501      	bpl.n	8014376 <enet_software_reset+0x16>
 8014372:	3a01      	subs	r2, #1
 8014374:	d1fa      	bne.n	801436c <enet_software_reset+0xc>
 8014376:	6818      	ldr	r0, [r3, #0]
 8014378:	43c0      	mvns	r0, r0
 801437a:	f000 0001 	and.w	r0, r0, #1
 801437e:	4770      	bx	lr
 8014380:	40029000 	andmi	r9, r2, r0
 8014384:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

08014388 <enet_descriptors_chain_init>:
 8014388:	f5b0 0fe0 	cmp.w	r0, #7340032	; 0x700000
 801438c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801438e:	4a19      	ldr	r2, [pc, #100]	; (80143f4 <enet_descriptors_chain_init+0x6c>)
 8014390:	d125      	bne.n	80143de <enet_descriptors_chain_init+0x56>
 8014392:	2500      	movs	r5, #0
 8014394:	f44f 1680 	mov.w	r6, #1048576	; 0x100000
 8014398:	2002      	movs	r0, #2
 801439a:	4b17      	ldr	r3, [pc, #92]	; (80143f8 <enet_descriptors_chain_init+0x70>)
 801439c:	4c17      	ldr	r4, [pc, #92]	; (80143fc <enet_descriptors_chain_init+0x74>)
 801439e:	6113      	str	r3, [r2, #16]
 80143a0:	4a17      	ldr	r2, [pc, #92]	; (8014400 <enet_descriptors_chain_init+0x78>)
 80143a2:	6013      	str	r3, [r2, #0]
 80143a4:	2200      	movs	r2, #0
 80143a6:	f240 5ef4 	movw	lr, #1524	; 0x5f4
 80143aa:	4916      	ldr	r1, [pc, #88]	; (8014404 <enet_descriptors_chain_init+0x7c>)
 80143ac:	f100 3cff 	add.w	ip, r0, #4294967295	; 0xffffffff
 80143b0:	600a      	str	r2, [r1, #0]
 80143b2:	4915      	ldr	r1, [pc, #84]	; (8014408 <enet_descriptors_chain_init+0x80>)
 80143b4:	600a      	str	r2, [r1, #0]
 80143b6:	f103 0110 	add.w	r1, r3, #16
 80143ba:	fb0e 4702 	mla	r7, lr, r2, r4
 80143be:	f841 7c08 	str.w	r7, [r1, #-8]
 80143c2:	4594      	cmp	ip, r2
 80143c4:	bf94      	ite	ls
 80143c6:	461f      	movls	r7, r3
 80143c8:	460f      	movhi	r7, r1
 80143ca:	3201      	adds	r2, #1
 80143cc:	4290      	cmp	r0, r2
 80143ce:	e941 6504 	strd	r6, r5, [r1, #-16]
 80143d2:	f841 7c04 	str.w	r7, [r1, #-4]
 80143d6:	f101 0110 	add.w	r1, r1, #16
 80143da:	d1ee      	bne.n	80143ba <enet_descriptors_chain_init+0x32>
 80143dc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80143de:	4b0b      	ldr	r3, [pc, #44]	; (801440c <enet_descriptors_chain_init+0x84>)
 80143e0:	f244 55f4 	movw	r5, #17908	; 0x45f4
 80143e4:	60d3      	str	r3, [r2, #12]
 80143e6:	4a0a      	ldr	r2, [pc, #40]	; (8014410 <enet_descriptors_chain_init+0x88>)
 80143e8:	f04f 4600 	mov.w	r6, #2147483648	; 0x80000000
 80143ec:	2022      	movs	r0, #34	; 0x22
 80143ee:	4c09      	ldr	r4, [pc, #36]	; (8014414 <enet_descriptors_chain_init+0x8c>)
 80143f0:	6013      	str	r3, [r2, #0]
 80143f2:	e7d7      	b.n	80143a4 <enet_descriptors_chain_init+0x1c>
 80143f4:	40029000 	andmi	r9, r2, r0
 80143f8:	2002b2e8 	andcs	fp, r2, r8, ror #5
 80143fc:	2002a700 	andcs	sl, r2, r0, lsl #14
 8014400:	2001da38 	andcs	sp, r1, r8, lsr sl
 8014404:	2001da2c 	andcs	sp, r1, ip, lsr #20
 8014408:	2001da30 	andcs	sp, r1, r0, lsr sl
 801440c:	2002a4e0 	andcs	sl, r2, r0, ror #9
 8014410:	2001da34 	andcs	sp, r1, r4, lsr sl
 8014414:	2001da78 	andcs	sp, r1, r8, ror sl

08014418 <enet_frame_receive>:
 8014418:	4a1d      	ldr	r2, [pc, #116]	; (8014490 <enet_frame_receive+0x78>)
 801441a:	b510      	push	{r4, lr}
 801441c:	6813      	ldr	r3, [r2, #0]
 801441e:	681b      	ldr	r3, [r3, #0]
 8014420:	2b00      	cmp	r3, #0
 8014422:	db33      	blt.n	801448c <enet_frame_receive+0x74>
 8014424:	b970      	cbnz	r0, 8014444 <enet_frame_receive+0x2c>
 8014426:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
 801442a:	6813      	ldr	r3, [r2, #0]
 801442c:	6019      	str	r1, [r3, #0]
 801442e:	4919      	ldr	r1, [pc, #100]	; (8014494 <enet_frame_receive+0x7c>)
 8014430:	6948      	ldr	r0, [r1, #20]
 8014432:	0604      	lsls	r4, r0, #24
 8014434:	d419      	bmi.n	801446a <enet_frame_receive+0x52>
 8014436:	6859      	ldr	r1, [r3, #4]
 8014438:	0448      	lsls	r0, r1, #17
 801443a:	d51b      	bpl.n	8014474 <enet_frame_receive+0x5c>
 801443c:	68db      	ldr	r3, [r3, #12]
 801443e:	2001      	movs	r0, #1
 8014440:	6013      	str	r3, [r2, #0]
 8014442:	bd10      	pop	{r4, pc}
 8014444:	f403 4403 	and.w	r4, r3, #33536	; 0x8300
 8014448:	f5b4 7f40 	cmp.w	r4, #768	; 0x300
 801444c:	d11e      	bne.n	801448c <enet_frame_receive+0x74>
 801444e:	f3c3 430d 	ubfx	r3, r3, #16, #14
 8014452:	3b04      	subs	r3, #4
 8014454:	428b      	cmp	r3, r1
 8014456:	d819      	bhi.n	801448c <enet_frame_receive+0x74>
 8014458:	2100      	movs	r1, #0
 801445a:	4299      	cmp	r1, r3
 801445c:	6814      	ldr	r4, [r2, #0]
 801445e:	d2e2      	bcs.n	8014426 <enet_frame_receive+0xe>
 8014460:	68a4      	ldr	r4, [r4, #8]
 8014462:	5d0c      	ldrb	r4, [r1, r4]
 8014464:	5444      	strb	r4, [r0, r1]
 8014466:	3101      	adds	r1, #1
 8014468:	e7f7      	b.n	801445a <enet_frame_receive+0x42>
 801446a:	2080      	movs	r0, #128	; 0x80
 801446c:	6148      	str	r0, [r1, #20]
 801446e:	2000      	movs	r0, #0
 8014470:	6088      	str	r0, [r1, #8]
 8014472:	e7e0      	b.n	8014436 <enet_frame_receive+0x1e>
 8014474:	f411 4f00 	tst.w	r1, #32768	; 0x8000
 8014478:	4906      	ldr	r1, [pc, #24]	; (8014494 <enet_frame_receive+0x7c>)
 801447a:	bf05      	ittet	eq
 801447c:	3310      	addeq	r3, #16
 801447e:	6809      	ldreq	r1, [r1, #0]
 8014480:	68cb      	ldrne	r3, [r1, #12]
 8014482:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 8014486:	bf08      	it	eq
 8014488:	185b      	addeq	r3, r3, r1
 801448a:	e7d8      	b.n	801443e <enet_frame_receive+0x26>
 801448c:	2000      	movs	r0, #0
 801448e:	e7d8      	b.n	8014442 <enet_frame_receive+0x2a>
 8014490:	2001da34 	andcs	sp, r1, r4, lsr sl
 8014494:	40029000 	andmi	r9, r2, r0

08014498 <enet_frame_transmit>:
 8014498:	4a1e      	ldr	r2, [pc, #120]	; (8014514 <enet_frame_transmit+0x7c>)
 801449a:	b530      	push	{r4, r5, lr}
 801449c:	6813      	ldr	r3, [r2, #0]
 801449e:	681b      	ldr	r3, [r3, #0]
 80144a0:	2b00      	cmp	r3, #0
 80144a2:	db34      	blt.n	801450e <enet_frame_transmit+0x76>
 80144a4:	f240 53f4 	movw	r3, #1524	; 0x5f4
 80144a8:	4299      	cmp	r1, r3
 80144aa:	d830      	bhi.n	801450e <enet_frame_transmit+0x76>
 80144ac:	b9e8      	cbnz	r0, 80144ea <enet_frame_transmit+0x52>
 80144ae:	6813      	ldr	r3, [r2, #0]
 80144b0:	4819      	ldr	r0, [pc, #100]	; (8014518 <enet_frame_transmit+0x80>)
 80144b2:	6059      	str	r1, [r3, #4]
 80144b4:	6819      	ldr	r1, [r3, #0]
 80144b6:	f041 4130 	orr.w	r1, r1, #2952790016	; 0xb0000000
 80144ba:	6019      	str	r1, [r3, #0]
 80144bc:	6941      	ldr	r1, [r0, #20]
 80144be:	6944      	ldr	r4, [r0, #20]
 80144c0:	f001 0104 	and.w	r1, r1, #4
 80144c4:	f004 0420 	and.w	r4, r4, #32
 80144c8:	4321      	orrs	r1, r4
 80144ca:	d110      	bne.n	80144ee <enet_frame_transmit+0x56>
 80144cc:	6819      	ldr	r1, [r3, #0]
 80144ce:	02c8      	lsls	r0, r1, #11
 80144d0:	d511      	bpl.n	80144f6 <enet_frame_transmit+0x5e>
 80144d2:	68db      	ldr	r3, [r3, #12]
 80144d4:	2001      	movs	r0, #1
 80144d6:	6013      	str	r3, [r2, #0]
 80144d8:	bd30      	pop	{r4, r5, pc}
 80144da:	5cc5      	ldrb	r5, [r0, r3]
 80144dc:	68a4      	ldr	r4, [r4, #8]
 80144de:	551d      	strb	r5, [r3, r4]
 80144e0:	3301      	adds	r3, #1
 80144e2:	428b      	cmp	r3, r1
 80144e4:	6814      	ldr	r4, [r2, #0]
 80144e6:	d1f8      	bne.n	80144da <enet_frame_transmit+0x42>
 80144e8:	e7e1      	b.n	80144ae <enet_frame_transmit+0x16>
 80144ea:	2300      	movs	r3, #0
 80144ec:	e7f9      	b.n	80144e2 <enet_frame_transmit+0x4a>
 80144ee:	6141      	str	r1, [r0, #20]
 80144f0:	2100      	movs	r1, #0
 80144f2:	6041      	str	r1, [r0, #4]
 80144f4:	e7ea      	b.n	80144cc <enet_frame_transmit+0x34>
 80144f6:	f411 1f00 	tst.w	r1, #2097152	; 0x200000
 80144fa:	4907      	ldr	r1, [pc, #28]	; (8014518 <enet_frame_transmit+0x80>)
 80144fc:	bf05      	ittet	eq
 80144fe:	3310      	addeq	r3, #16
 8014500:	6809      	ldreq	r1, [r1, #0]
 8014502:	690b      	ldrne	r3, [r1, #16]
 8014504:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 8014508:	bf08      	it	eq
 801450a:	185b      	addeq	r3, r3, r1
 801450c:	e7e2      	b.n	80144d4 <enet_frame_transmit+0x3c>
 801450e:	2000      	movs	r0, #0
 8014510:	e7e2      	b.n	80144d8 <enet_frame_transmit+0x40>
 8014512:	bf00      	nop
 8014514:	2001da38 	andcs	sp, r1, r8, lsr sl
 8014518:	40029000 	andmi	r9, r2, r0

0801451c <enet_transmit_checksum_config>:
 801451c:	6803      	ldr	r3, [r0, #0]
 801451e:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 8014522:	430b      	orrs	r3, r1
 8014524:	6003      	str	r3, [r0, #0]
 8014526:	4770      	bx	lr

08014528 <enet_mac_address_set>:
 8014528:	888a      	ldrh	r2, [r1, #4]
 801452a:	4b03      	ldr	r3, [pc, #12]	; (8014538 <enet_mac_address_set+0x10>)
 801452c:	50c2      	str	r2, [r0, r3]
 801452e:	680a      	ldr	r2, [r1, #0]
 8014530:	3304      	adds	r3, #4
 8014532:	50c2      	str	r2, [r0, r3]
 8014534:	4770      	bx	lr
 8014536:	bf00      	nop
 8014538:	40028040 	andmi	r8, r2, r0, asr #32

0801453c <enet_rx_enable>:
 801453c:	4a05      	ldr	r2, [pc, #20]	; (8014554 <enet_rx_enable+0x18>)
 801453e:	6813      	ldr	r3, [r2, #0]
 8014540:	f043 0304 	orr.w	r3, r3, #4
 8014544:	6013      	str	r3, [r2, #0]
 8014546:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 801454a:	6993      	ldr	r3, [r2, #24]
 801454c:	f043 0302 	orr.w	r3, r3, #2
 8014550:	6193      	str	r3, [r2, #24]
 8014552:	4770      	bx	lr
 8014554:	40028000 	andmi	r8, r2, r0

08014558 <enet_phy_write_read>:
 8014558:	b530      	push	{r4, r5, lr}
 801455a:	4604      	mov	r4, r0
 801455c:	4d13      	ldr	r5, [pc, #76]	; (80145ac <enet_phy_write_read+0x54>)
 801455e:	0192      	lsls	r2, r2, #6
 8014560:	6928      	ldr	r0, [r5, #16]
 8014562:	f402 62f8 	and.w	r2, r2, #1984	; 0x7c0
 8014566:	f420 407f 	bic.w	r0, r0, #65280	; 0xff00
 801456a:	f020 00c3 	bic.w	r0, r0, #195	; 0xc3
 801456e:	4302      	orrs	r2, r0
 8014570:	02c9      	lsls	r1, r1, #11
 8014572:	b289      	uxth	r1, r1
 8014574:	2c02      	cmp	r4, #2
 8014576:	ea42 0204 	orr.w	r2, r2, r4
 801457a:	ea42 0201 	orr.w	r2, r2, r1
 801457e:	bf08      	it	eq
 8014580:	8819      	ldrheq	r1, [r3, #0]
 8014582:	f042 0201 	orr.w	r2, r2, #1
 8014586:	bf08      	it	eq
 8014588:	6169      	streq	r1, [r5, #20]
 801458a:	612a      	str	r2, [r5, #16]
 801458c:	4907      	ldr	r1, [pc, #28]	; (80145ac <enet_phy_write_read+0x54>)
 801458e:	4a08      	ldr	r2, [pc, #32]	; (80145b0 <enet_phy_write_read+0x58>)
 8014590:	6908      	ldr	r0, [r1, #16]
 8014592:	07c0      	lsls	r0, r0, #31
 8014594:	d501      	bpl.n	801459a <enet_phy_write_read+0x42>
 8014596:	3a01      	subs	r2, #1
 8014598:	d1fa      	bne.n	8014590 <enet_phy_write_read+0x38>
 801459a:	690a      	ldr	r2, [r1, #16]
 801459c:	43d2      	mvns	r2, r2
 801459e:	f002 0001 	and.w	r0, r2, #1
 80145a2:	b90c      	cbnz	r4, 80145a8 <enet_phy_write_read+0x50>
 80145a4:	694a      	ldr	r2, [r1, #20]
 80145a6:	801a      	strh	r2, [r3, #0]
 80145a8:	bd30      	pop	{r4, r5, pc}
 80145aa:	bf00      	nop
 80145ac:	40028000 	andmi	r8, r2, r0
 80145b0:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

080145b4 <enet_phy_config>:
 80145b4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80145b6:	4d22      	ldr	r5, [pc, #136]	; (8014640 <enet_phy_config+0x8c>)
 80145b8:	2001      	movs	r0, #1
 80145ba:	692c      	ldr	r4, [r5, #16]
 80145bc:	f7fe fdf8 	bl	80131b0 <rcu_clock_freq_get>
 80145c0:	4b20      	ldr	r3, [pc, #128]	; (8014644 <enet_phy_config+0x90>)
 80145c2:	4a21      	ldr	r2, [pc, #132]	; (8014648 <enet_phy_config+0x94>)
 80145c4:	4403      	add	r3, r0
 80145c6:	4293      	cmp	r3, r2
 80145c8:	f024 041c 	bic.w	r4, r4, #28
 80145cc:	d21f      	bcs.n	801460e <enet_phy_config+0x5a>
 80145ce:	f044 0408 	orr.w	r4, r4, #8
 80145d2:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80145d6:	612c      	str	r4, [r5, #16]
 80145d8:	2200      	movs	r2, #0
 80145da:	f8ad 3006 	strh.w	r3, [sp, #6]
 80145de:	2101      	movs	r1, #1
 80145e0:	2002      	movs	r0, #2
 80145e2:	f10d 0306 	add.w	r3, sp, #6
 80145e6:	f7ff ffb7 	bl	8014558 <enet_phy_write_read>
 80145ea:	b310      	cbz	r0, 8014632 <enet_phy_config+0x7e>
 80145ec:	2200      	movs	r2, #0
 80145ee:	4817      	ldr	r0, [pc, #92]	; (801464c <enet_phy_config+0x98>)
 80145f0:	f7ff feaa 	bl	8014348 <enet_delay>
 80145f4:	2101      	movs	r1, #1
 80145f6:	4610      	mov	r0, r2
 80145f8:	f10d 0306 	add.w	r3, sp, #6
 80145fc:	f7ff ffac 	bl	8014558 <enet_phy_write_read>
 8014600:	b1b8      	cbz	r0, 8014632 <enet_phy_config+0x7e>
 8014602:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8014606:	43c0      	mvns	r0, r0
 8014608:	f3c0 30c0 	ubfx	r0, r0, #15, #1
 801460c:	e012      	b.n	8014634 <enet_phy_config+0x80>
 801460e:	4b10      	ldr	r3, [pc, #64]	; (8014650 <enet_phy_config+0x9c>)
 8014610:	4a10      	ldr	r2, [pc, #64]	; (8014654 <enet_phy_config+0xa0>)
 8014612:	4403      	add	r3, r0
 8014614:	4293      	cmp	r3, r2
 8014616:	d802      	bhi.n	801461e <enet_phy_config+0x6a>
 8014618:	f044 040c 	orr.w	r4, r4, #12
 801461c:	e7d9      	b.n	80145d2 <enet_phy_config+0x1e>
 801461e:	4b0e      	ldr	r3, [pc, #56]	; (8014658 <enet_phy_config+0xa4>)
 8014620:	4a0e      	ldr	r2, [pc, #56]	; (801465c <enet_phy_config+0xa8>)
 8014622:	4403      	add	r3, r0
 8014624:	4293      	cmp	r3, r2
 8014626:	d3d4      	bcc.n	80145d2 <enet_phy_config+0x1e>
 8014628:	4b0d      	ldr	r3, [pc, #52]	; (8014660 <enet_phy_config+0xac>)
 801462a:	4a0e      	ldr	r2, [pc, #56]	; (8014664 <enet_phy_config+0xb0>)
 801462c:	4403      	add	r3, r0
 801462e:	4293      	cmp	r3, r2
 8014630:	d902      	bls.n	8014638 <enet_phy_config+0x84>
 8014632:	2000      	movs	r0, #0
 8014634:	b003      	add	sp, #12
 8014636:	bd30      	pop	{r4, r5, pc}
 8014638:	f044 0404 	orr.w	r4, r4, #4
 801463c:	e7c9      	b.n	80145d2 <enet_phy_config+0x1e>
 801463e:	bf00      	nop
 8014640:	40028000 	andmi	r8, r2, r0
 8014644:	feced300 	cdp2	3, 12, cr13, cr14, cr0, {0}
 8014648:	00e4e1c0 	rsceq	lr, r4, r0, asr #3
 801464c:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 8014650:	fde9f140 	stc2l	1, cr15, [r9, #256]!	; 0x100
 8014654:	017d783f 	cmneq	sp, pc, lsr r8
 8014658:	fc6c7900 	stc2l	9, cr7, [ip], #-0	; <UNPREDICTABLE>
 801465c:	02625a00 	rsbeq	r5, r2, #0, 20
 8014660:	fa0a1f00 	blx	829c268 <__exidx_end+0x28459c>
 8014664:	01312d00 	teqeq	r1, r0, lsl #26

08014668 <enet_init>:
 8014668:	2300      	movs	r3, #0
 801466a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801466c:	4604      	mov	r4, r0
 801466e:	460d      	mov	r5, r1
 8014670:	4616      	mov	r6, r2
 8014672:	f8ad 3006 	strh.w	r3, [sp, #6]
 8014676:	f7ff ff9d 	bl	80145b4 <enet_phy_config>
 801467a:	2800      	cmp	r0, #0
 801467c:	d039      	beq.n	80146f2 <enet_init+0x8a>
 801467e:	4b3c      	ldr	r3, [pc, #240]	; (8014770 <enet_init+0x108>)
 8014680:	4a3c      	ldr	r2, [pc, #240]	; (8014774 <enet_init+0x10c>)
 8014682:	6819      	ldr	r1, [r3, #0]
 8014684:	f44f 50a8 	mov.w	r0, #5376	; 0x1500
 8014688:	400a      	ands	r2, r1
 801468a:	601a      	str	r2, [r3, #0]
 801468c:	2200      	movs	r2, #0
 801468e:	605a      	str	r2, [r3, #4]
 8014690:	609a      	str	r2, [r3, #8]
 8014692:	60da      	str	r2, [r3, #12]
 8014694:	6999      	ldr	r1, [r3, #24]
 8014696:	2c01      	cmp	r4, #1
 8014698:	f021 01be 	bic.w	r1, r1, #190	; 0xbe
 801469c:	ea4f 4101 	mov.w	r1, r1, lsl #16
 80146a0:	ea4f 4111 	mov.w	r1, r1, lsr #16
 80146a4:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 80146a8:	6199      	str	r1, [r3, #24]
 80146aa:	4933      	ldr	r1, [pc, #204]	; (8014778 <enet_init+0x110>)
 80146ac:	f8c1 0080 	str.w	r0, [r1, #128]	; 0x80
 80146b0:	61da      	str	r2, [r3, #28]
 80146b2:	6988      	ldr	r0, [r1, #24]
 80146b4:	4b31      	ldr	r3, [pc, #196]	; (801477c <enet_init+0x114>)
 80146b6:	ea03 0300 	and.w	r3, r3, r0
 80146ba:	f043 7308 	orr.w	r3, r3, #35651584	; 0x2200000
 80146be:	618b      	str	r3, [r1, #24]
 80146c0:	680b      	ldr	r3, [r1, #0]
 80146c2:	4b2f      	ldr	r3, [pc, #188]	; (8014780 <enet_init+0x118>)
 80146c4:	600b      	str	r3, [r1, #0]
 80146c6:	d01e      	beq.n	8014706 <enet_init+0x9e>
 80146c8:	08e3      	lsrs	r3, r4, #3
 80146ca:	0861      	lsrs	r1, r4, #1
 80146cc:	f401 5100 	and.w	r1, r1, #8192	; 0x2000
 80146d0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80146d4:	430b      	orrs	r3, r1
 80146d6:	f8ad 3006 	strh.w	r3, [sp, #6]
 80146da:	2101      	movs	r1, #1
 80146dc:	2002      	movs	r0, #2
 80146de:	f10d 0306 	add.w	r3, sp, #6
 80146e2:	f7ff ff39 	bl	8014558 <enet_phy_write_read>
 80146e6:	b158      	cbz	r0, 8014700 <enet_init+0x98>
 80146e8:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 80146ec:	f7ff fe2c 	bl	8014348 <enet_delay>
 80146f0:	e05d      	b.n	80147ae <enet_init+0x146>
 80146f2:	4824      	ldr	r0, [pc, #144]	; (8014784 <enet_init+0x11c>)
 80146f4:	f7ff fe28 	bl	8014348 <enet_delay>
 80146f8:	f7ff ff5c 	bl	80145b4 <enet_phy_config>
 80146fc:	2800      	cmp	r0, #0
 80146fe:	d1be      	bne.n	801467e <enet_init+0x16>
 8014700:	2000      	movs	r0, #0
 8014702:	b003      	add	sp, #12
 8014704:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014706:	4614      	mov	r4, r2
 8014708:	4f1f      	ldr	r7, [pc, #124]	; (8014788 <enet_init+0x120>)
 801470a:	2201      	movs	r2, #1
 801470c:	2000      	movs	r0, #0
 801470e:	4611      	mov	r1, r2
 8014710:	f10d 0306 	add.w	r3, sp, #6
 8014714:	f7ff ff20 	bl	8014558 <enet_phy_write_read>
 8014718:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 801471c:	3401      	adds	r4, #1
 801471e:	f002 0204 	and.w	r2, r2, #4
 8014722:	f8ad 2006 	strh.w	r2, [sp, #6]
 8014726:	b912      	cbnz	r2, 801472e <enet_init+0xc6>
 8014728:	42bc      	cmp	r4, r7
 801472a:	d1ee      	bne.n	801470a <enet_init+0xa2>
 801472c:	e7e8      	b.n	8014700 <enet_init+0x98>
 801472e:	42bc      	cmp	r4, r7
 8014730:	d0e6      	beq.n	8014700 <enet_init+0x98>
 8014732:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8014736:	2101      	movs	r1, #1
 8014738:	f8ad 2006 	strh.w	r2, [sp, #6]
 801473c:	2002      	movs	r0, #2
 801473e:	2200      	movs	r2, #0
 8014740:	f7ff ff0a 	bl	8014558 <enet_phy_write_read>
 8014744:	2800      	cmp	r0, #0
 8014746:	d0db      	beq.n	8014700 <enet_init+0x98>
 8014748:	2400      	movs	r4, #0
 801474a:	4f0f      	ldr	r7, [pc, #60]	; (8014788 <enet_init+0x120>)
 801474c:	2201      	movs	r2, #1
 801474e:	2000      	movs	r0, #0
 8014750:	4611      	mov	r1, r2
 8014752:	f10d 0306 	add.w	r3, sp, #6
 8014756:	f7ff feff 	bl	8014558 <enet_phy_write_read>
 801475a:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 801475e:	3401      	adds	r4, #1
 8014760:	f002 0220 	and.w	r2, r2, #32
 8014764:	f8ad 2006 	strh.w	r2, [sp, #6]
 8014768:	b982      	cbnz	r2, 801478c <enet_init+0x124>
 801476a:	42bc      	cmp	r4, r7
 801476c:	d1ee      	bne.n	801474c <enet_init+0xe4>
 801476e:	e7c7      	b.n	8014700 <enet_init+0x98>
 8014770:	40028000 	andmi	r8, r2, r0
 8014774:	fd30810f 	ldc2	1, cr8, [r0, #-60]!	; 0xffffffc4
 8014778:	40029000 	andmi	r9, r2, r0
 801477c:	f8de3f23 			; <UNDEFINED> instruction: 0xf8de3f23
 8014780:	02c16000 	sbceq	r6, r1, #0
 8014784:	008fffff 	strdeq	pc, [pc], pc	; <UNPREDICTABLE>
 8014788:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 801478c:	42bc      	cmp	r4, r7
 801478e:	d0b7      	beq.n	8014700 <enet_init+0x98>
 8014790:	2101      	movs	r1, #1
 8014792:	2210      	movs	r2, #16
 8014794:	2000      	movs	r0, #0
 8014796:	f7ff fedf 	bl	8014558 <enet_phy_write_read>
 801479a:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 801479e:	f3c3 0480 	ubfx	r4, r3, #2, #1
 80147a2:	0799      	lsls	r1, r3, #30
 80147a4:	ea4f 24c4 	mov.w	r4, r4, lsl #11
 80147a8:	d401      	bmi.n	80147ae <enet_init+0x146>
 80147aa:	f444 4480 	orr.w	r4, r4, #16384	; 0x4000
 80147ae:	4b63      	ldr	r3, [pc, #396]	; (801493c <enet_init+0x2d4>)
 80147b0:	681a      	ldr	r2, [r3, #0]
 80147b2:	f422 42b0 	bic.w	r2, r2, #22528	; 0x5800
 80147b6:	4314      	orrs	r4, r2
 80147b8:	056a      	lsls	r2, r5, #21
 80147ba:	601c      	str	r4, [r3, #0]
 80147bc:	d50b      	bpl.n	80147d6 <enet_init+0x16e>
 80147be:	681a      	ldr	r2, [r3, #0]
 80147c0:	f005 6580 	and.w	r5, r5, #67108864	; 0x4000000
 80147c4:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80147c8:	601a      	str	r2, [r3, #0]
 80147ca:	4a5d      	ldr	r2, [pc, #372]	; (8014940 <enet_init+0x2d8>)
 80147cc:	6993      	ldr	r3, [r2, #24]
 80147ce:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 80147d2:	431d      	orrs	r5, r3
 80147d4:	6195      	str	r5, [r2, #24]
 80147d6:	4959      	ldr	r1, [pc, #356]	; (801493c <enet_init+0x2d4>)
 80147d8:	684b      	ldr	r3, [r1, #4]
 80147da:	431e      	orrs	r6, r3
 80147dc:	4b59      	ldr	r3, [pc, #356]	; (8014944 <enet_init+0x2dc>)
 80147de:	604e      	str	r6, [r1, #4]
 80147e0:	681a      	ldr	r2, [r3, #0]
 80147e2:	07d7      	lsls	r7, r2, #31
 80147e4:	d510      	bpl.n	8014808 <enet_init+0x1a0>
 80147e6:	685a      	ldr	r2, [r3, #4]
 80147e8:	680c      	ldr	r4, [r1, #0]
 80147ea:	f002 0080 	and.w	r0, r2, #128	; 0x80
 80147ee:	f024 0480 	bic.w	r4, r4, #128	; 0x80
 80147f2:	4320      	orrs	r0, r4
 80147f4:	6008      	str	r0, [r1, #0]
 80147f6:	4852      	ldr	r0, [pc, #328]	; (8014940 <enet_init+0x2d8>)
 80147f8:	0892      	lsrs	r2, r2, #2
 80147fa:	6981      	ldr	r1, [r0, #24]
 80147fc:	f002 02c0 	and.w	r2, r2, #192	; 0xc0
 8014800:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8014804:	430a      	orrs	r2, r1
 8014806:	6182      	str	r2, [r0, #24]
 8014808:	681a      	ldr	r2, [r3, #0]
 801480a:	0796      	lsls	r6, r2, #30
 801480c:	d508      	bpl.n	8014820 <enet_init+0x1b8>
 801480e:	494c      	ldr	r1, [pc, #304]	; (8014940 <enet_init+0x2d8>)
 8014810:	6898      	ldr	r0, [r3, #8]
 8014812:	680a      	ldr	r2, [r1, #0]
 8014814:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 8014818:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 801481c:	4302      	orrs	r2, r0
 801481e:	600a      	str	r2, [r1, #0]
 8014820:	681a      	ldr	r2, [r3, #0]
 8014822:	0755      	lsls	r5, r2, #29
 8014824:	d508      	bpl.n	8014838 <enet_init+0x1d0>
 8014826:	4946      	ldr	r1, [pc, #280]	; (8014940 <enet_init+0x2d8>)
 8014828:	68d8      	ldr	r0, [r3, #12]
 801482a:	680a      	ldr	r2, [r1, #0]
 801482c:	f422 027e 	bic.w	r2, r2, #16646144	; 0xfe0000
 8014830:	f422 527c 	bic.w	r2, r2, #16128	; 0x3f00
 8014834:	4302      	orrs	r2, r0
 8014836:	600a      	str	r2, [r1, #0]
 8014838:	681a      	ldr	r2, [r3, #0]
 801483a:	0714      	lsls	r4, r2, #28
 801483c:	d508      	bpl.n	8014850 <enet_init+0x1e8>
 801483e:	4940      	ldr	r1, [pc, #256]	; (8014940 <enet_init+0x2d8>)
 8014840:	6918      	ldr	r0, [r3, #16]
 8014842:	680a      	ldr	r2, [r1, #0]
 8014844:	f422 4240 	bic.w	r2, r2, #49152	; 0xc000
 8014848:	f022 0202 	bic.w	r2, r2, #2
 801484c:	4302      	orrs	r2, r0
 801484e:	600a      	str	r2, [r1, #0]
 8014850:	681a      	ldr	r2, [r3, #0]
 8014852:	06d0      	lsls	r0, r2, #27
 8014854:	d506      	bpl.n	8014864 <enet_init+0x1fc>
 8014856:	493a      	ldr	r1, [pc, #232]	; (8014940 <enet_init+0x2d8>)
 8014858:	4a3b      	ldr	r2, [pc, #236]	; (8014948 <enet_init+0x2e0>)
 801485a:	6988      	ldr	r0, [r1, #24]
 801485c:	4002      	ands	r2, r0
 801485e:	6958      	ldr	r0, [r3, #20]
 8014860:	4302      	orrs	r2, r0
 8014862:	618a      	str	r2, [r1, #24]
 8014864:	681a      	ldr	r2, [r3, #0]
 8014866:	0691      	lsls	r1, r2, #26
 8014868:	d508      	bpl.n	801487c <enet_init+0x214>
 801486a:	4935      	ldr	r1, [pc, #212]	; (8014940 <enet_init+0x2d8>)
 801486c:	6998      	ldr	r0, [r3, #24]
 801486e:	698a      	ldr	r2, [r1, #24]
 8014870:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
 8014874:	f022 0204 	bic.w	r2, r2, #4
 8014878:	4302      	orrs	r2, r0
 801487a:	618a      	str	r2, [r1, #24]
 801487c:	681a      	ldr	r2, [r3, #0]
 801487e:	0652      	lsls	r2, r2, #25
 8014880:	d506      	bpl.n	8014890 <enet_init+0x228>
 8014882:	492e      	ldr	r1, [pc, #184]	; (801493c <enet_init+0x2d4>)
 8014884:	69d8      	ldr	r0, [r3, #28]
 8014886:	69ca      	ldr	r2, [r1, #28]
 8014888:	0c52      	lsrs	r2, r2, #17
 801488a:	0452      	lsls	r2, r2, #17
 801488c:	4302      	orrs	r2, r0
 801488e:	61ca      	str	r2, [r1, #28]
 8014890:	681a      	ldr	r2, [r3, #0]
 8014892:	0617      	lsls	r7, r2, #24
 8014894:	d517      	bpl.n	80148c6 <enet_init+0x25e>
 8014896:	4c29      	ldr	r4, [pc, #164]	; (801493c <enet_init+0x2d4>)
 8014898:	6a1a      	ldr	r2, [r3, #32]
 801489a:	69a0      	ldr	r0, [r4, #24]
 801489c:	f422 417f 	bic.w	r1, r2, #65280	; 0xff00
 80148a0:	f020 00be 	bic.w	r0, r0, #190	; 0xbe
 80148a4:	0400      	lsls	r0, r0, #16
 80148a6:	0c00      	lsrs	r0, r0, #16
 80148a8:	f021 0141 	bic.w	r1, r1, #65	; 0x41
 80148ac:	4301      	orrs	r1, r0
 80148ae:	4824      	ldr	r0, [pc, #144]	; (8014940 <enet_init+0x2d8>)
 80148b0:	61a1      	str	r1, [r4, #24]
 80148b2:	f8d0 1080 	ldr.w	r1, [r0, #128]	; 0x80
 80148b6:	0a12      	lsrs	r2, r2, #8
 80148b8:	f021 0177 	bic.w	r1, r1, #119	; 0x77
 80148bc:	f002 0277 	and.w	r2, r2, #119	; 0x77
 80148c0:	430a      	orrs	r2, r1
 80148c2:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 80148c6:	681a      	ldr	r2, [r3, #0]
 80148c8:	05d6      	lsls	r6, r2, #23
 80148ca:	bf42      	ittt	mi
 80148cc:	6a59      	ldrmi	r1, [r3, #36]	; 0x24
 80148ce:	4a1b      	ldrmi	r2, [pc, #108]	; (801493c <enet_init+0x2d4>)
 80148d0:	6091      	strmi	r1, [r2, #8]
 80148d2:	681a      	ldr	r2, [r3, #0]
 80148d4:	0595      	lsls	r5, r2, #22
 80148d6:	bf42      	ittt	mi
 80148d8:	4a18      	ldrmi	r2, [pc, #96]	; (801493c <enet_init+0x2d4>)
 80148da:	6a99      	ldrmi	r1, [r3, #40]	; 0x28
 80148dc:	60d1      	strmi	r1, [r2, #12]
 80148de:	681a      	ldr	r2, [r3, #0]
 80148e0:	0554      	lsls	r4, r2, #21
 80148e2:	d508      	bpl.n	80148f6 <enet_init+0x28e>
 80148e4:	4915      	ldr	r1, [pc, #84]	; (801493c <enet_init+0x2d4>)
 80148e6:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 80148e8:	684a      	ldr	r2, [r1, #4]
 80148ea:	f422 62fb 	bic.w	r2, r2, #2008	; 0x7d8
 80148ee:	f022 0206 	bic.w	r2, r2, #6
 80148f2:	4302      	orrs	r2, r0
 80148f4:	604a      	str	r2, [r1, #4]
 80148f6:	681a      	ldr	r2, [r3, #0]
 80148f8:	0510      	lsls	r0, r2, #20
 80148fa:	d508      	bpl.n	801490e <enet_init+0x2a6>
 80148fc:	490f      	ldr	r1, [pc, #60]	; (801493c <enet_init+0x2d4>)
 80148fe:	6b18      	ldr	r0, [r3, #48]	; 0x30
 8014900:	680a      	ldr	r2, [r1, #0]
 8014902:	f422 3291 	bic.w	r2, r2, #74240	; 0x12200
 8014906:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 801490a:	4302      	orrs	r2, r0
 801490c:	600a      	str	r2, [r1, #0]
 801490e:	681a      	ldr	r2, [r3, #0]
 8014910:	04d1      	lsls	r1, r2, #19
 8014912:	d506      	bpl.n	8014922 <enet_init+0x2ba>
 8014914:	4909      	ldr	r1, [pc, #36]	; (801493c <enet_init+0x2d4>)
 8014916:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8014918:	680a      	ldr	r2, [r1, #0]
 801491a:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 801491e:	4302      	orrs	r2, r0
 8014920:	600a      	str	r2, [r1, #0]
 8014922:	681a      	ldr	r2, [r3, #0]
 8014924:	0492      	lsls	r2, r2, #18
 8014926:	d506      	bpl.n	8014936 <enet_init+0x2ce>
 8014928:	4904      	ldr	r1, [pc, #16]	; (801493c <enet_init+0x2d4>)
 801492a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801492c:	680a      	ldr	r2, [r1, #0]
 801492e:	f422 2260 	bic.w	r2, r2, #917504	; 0xe0000
 8014932:	4313      	orrs	r3, r2
 8014934:	600b      	str	r3, [r1, #0]
 8014936:	2001      	movs	r0, #1
 8014938:	e6e3      	b.n	8014702 <enet_init+0x9a>
 801493a:	bf00      	nop
 801493c:	40028000 	andmi	r8, r2, r0
 8014940:	40029000 	andmi	r9, r2, r0
 8014944:	2001da3c 	andcs	sp, r1, ip, lsr sl
 8014948:	fdde3fe7 	ldc2l	15, cr3, [lr, #924]	; 0x39c

0801494c <enet_txfifo_flush>:
 801494c:	4b06      	ldr	r3, [pc, #24]	; (8014968 <enet_txfifo_flush+0x1c>)
 801494e:	4807      	ldr	r0, [pc, #28]	; (801496c <enet_txfifo_flush+0x20>)
 8014950:	699a      	ldr	r2, [r3, #24]
 8014952:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8014956:	619a      	str	r2, [r3, #24]
 8014958:	699a      	ldr	r2, [r3, #24]
 801495a:	02d2      	lsls	r2, r2, #11
 801495c:	d502      	bpl.n	8014964 <enet_txfifo_flush+0x18>
 801495e:	3801      	subs	r0, #1
 8014960:	d1fa      	bne.n	8014958 <enet_txfifo_flush+0xc>
 8014962:	4770      	bx	lr
 8014964:	2001      	movs	r0, #1
 8014966:	4770      	bx	lr
 8014968:	40029000 	andmi	r9, r2, r0
 801496c:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

08014970 <enet_tx_enable>:
 8014970:	4a06      	ldr	r2, [pc, #24]	; (801498c <enet_tx_enable+0x1c>)
 8014972:	b508      	push	{r3, lr}
 8014974:	6813      	ldr	r3, [r2, #0]
 8014976:	f043 0308 	orr.w	r3, r3, #8
 801497a:	6013      	str	r3, [r2, #0]
 801497c:	f7ff ffe6 	bl	801494c <enet_txfifo_flush>
 8014980:	4a03      	ldr	r2, [pc, #12]	; (8014990 <enet_tx_enable+0x20>)
 8014982:	6993      	ldr	r3, [r2, #24]
 8014984:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8014988:	6193      	str	r3, [r2, #24]
 801498a:	bd08      	pop	{r3, pc}
 801498c:	40028000 	andmi	r8, r2, r0
 8014990:	40029000 	andmi	r9, r2, r0

08014994 <enet_enable>:
 8014994:	b508      	push	{r3, lr}
 8014996:	f7ff ffeb 	bl	8014970 <enet_tx_enable>
 801499a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801499e:	f7ff bdcd 	b.w	801453c <enet_rx_enable>

080149a2 <enet_desc_information_get>:
 80149a2:	2905      	cmp	r1, #5
 80149a4:	d817      	bhi.n	80149d6 <enet_desc_information_get+0x34>
 80149a6:	e8df f001 	tbb	[pc, r1]
 80149aa:	03091012 	movweq	r1, #36882	; 0x9012
 80149ae:	68401007 	stmdavs	r0, {r0, r1, r2, ip}^
 80149b2:	f3c0 000c 	ubfx	r0, r0, #0, #13
 80149b6:	4770      	bx	lr
 80149b8:	88c0      	ldrh	r0, [r0, #6]
 80149ba:	e7fa      	b.n	80149b2 <enet_desc_information_get+0x10>
 80149bc:	8840      	ldrh	r0, [r0, #2]
 80149be:	f3c0 000d 	ubfx	r0, r0, #0, #14
 80149c2:	2804      	cmp	r0, #4
 80149c4:	d90a      	bls.n	80149dc <enet_desc_information_get+0x3a>
 80149c6:	3804      	subs	r0, #4
 80149c8:	4770      	bx	lr
 80149ca:	6880      	ldr	r0, [r0, #8]
 80149cc:	4770      	bx	lr
 80149ce:	6800      	ldr	r0, [r0, #0]
 80149d0:	f3c0 00c3 	ubfx	r0, r0, #3, #4
 80149d4:	4770      	bx	lr
 80149d6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80149da:	4770      	bx	lr
 80149dc:	2000      	movs	r0, #0
 80149de:	4770      	bx	lr

080149e0 <enet_rxframe_drop>:
 80149e0:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 80149e4:	4814      	ldr	r0, [pc, #80]	; (8014a38 <enet_rxframe_drop+0x58>)
 80149e6:	b510      	push	{r4, lr}
 80149e8:	6802      	ldr	r2, [r0, #0]
 80149ea:	4914      	ldr	r1, [pc, #80]	; (8014a3c <enet_rxframe_drop+0x5c>)
 80149ec:	6854      	ldr	r4, [r2, #4]
 80149ee:	6013      	str	r3, [r2, #0]
 80149f0:	f414 4f80 	tst.w	r4, #16384	; 0x4000
 80149f4:	680b      	ldr	r3, [r1, #0]
 80149f6:	d009      	beq.n	8014a0c <enet_rxframe_drop+0x2c>
 80149f8:	b12b      	cbz	r3, 8014a06 <enet_rxframe_drop+0x26>
 80149fa:	68da      	ldr	r2, [r3, #12]
 80149fc:	6002      	str	r2, [r0, #0]
 80149fe:	681a      	ldr	r2, [r3, #0]
 8014a00:	b1ba      	cbz	r2, 8014a32 <enet_rxframe_drop+0x52>
 8014a02:	600a      	str	r2, [r1, #0]
 8014a04:	bd10      	pop	{r4, pc}
 8014a06:	68d3      	ldr	r3, [r2, #12]
 8014a08:	6003      	str	r3, [r0, #0]
 8014a0a:	e7fb      	b.n	8014a04 <enet_rxframe_drop+0x24>
 8014a0c:	f414 4f00 	tst.w	r4, #32768	; 0x8000
 8014a10:	4c0b      	ldr	r4, [pc, #44]	; (8014a40 <enet_rxframe_drop+0x60>)
 8014a12:	d006      	beq.n	8014a22 <enet_rxframe_drop+0x42>
 8014a14:	68e2      	ldr	r2, [r4, #12]
 8014a16:	6002      	str	r2, [r0, #0]
 8014a18:	2b00      	cmp	r3, #0
 8014a1a:	d0f3      	beq.n	8014a04 <enet_rxframe_drop+0x24>
 8014a1c:	681b      	ldr	r3, [r3, #0]
 8014a1e:	600b      	str	r3, [r1, #0]
 8014a20:	e7f0      	b.n	8014a04 <enet_rxframe_drop+0x24>
 8014a22:	6824      	ldr	r4, [r4, #0]
 8014a24:	3210      	adds	r2, #16
 8014a26:	f3c4 0484 	ubfx	r4, r4, #2, #5
 8014a2a:	4422      	add	r2, r4
 8014a2c:	6002      	str	r2, [r0, #0]
 8014a2e:	2b00      	cmp	r3, #0
 8014a30:	d0e8      	beq.n	8014a04 <enet_rxframe_drop+0x24>
 8014a32:	3310      	adds	r3, #16
 8014a34:	e7f3      	b.n	8014a1e <enet_rxframe_drop+0x3e>
 8014a36:	bf00      	nop
 8014a38:	2001da34 	andcs	sp, r1, r4, lsr sl
 8014a3c:	2001da2c 	andcs	sp, r1, ip, lsr #20
 8014a40:	40029000 	andmi	r9, r2, r0

08014a44 <enet_rxframe_size_get>:
 8014a44:	b508      	push	{r3, lr}
 8014a46:	4b0c      	ldr	r3, [pc, #48]	; (8014a78 <enet_rxframe_size_get+0x34>)
 8014a48:	681b      	ldr	r3, [r3, #0]
 8014a4a:	6818      	ldr	r0, [r3, #0]
 8014a4c:	2800      	cmp	r0, #0
 8014a4e:	db10      	blt.n	8014a72 <enet_rxframe_size_get+0x2e>
 8014a50:	f400 4303 	and.w	r3, r0, #33536	; 0x8300
 8014a54:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8014a58:	d003      	beq.n	8014a62 <enet_rxframe_size_get+0x1e>
 8014a5a:	f7ff ffc1 	bl	80149e0 <enet_rxframe_drop>
 8014a5e:	2001      	movs	r0, #1
 8014a60:	bd08      	pop	{r3, pc}
 8014a62:	f000 0321 	and.w	r3, r0, #33	; 0x21
 8014a66:	2b21      	cmp	r3, #33	; 0x21
 8014a68:	d0f7      	beq.n	8014a5a <enet_rxframe_size_get+0x16>
 8014a6a:	f3c0 400d 	ubfx	r0, r0, #16, #14
 8014a6e:	3804      	subs	r0, #4
 8014a70:	e7f6      	b.n	8014a60 <enet_rxframe_size_get+0x1c>
 8014a72:	2000      	movs	r0, #0
 8014a74:	e7f4      	b.n	8014a60 <enet_rxframe_size_get+0x1c>
 8014a76:	bf00      	nop
 8014a78:	2001da34 	andcs	sp, r1, r4, lsr sl

08014a7c <enet_initpara_reset>:
 8014a7c:	2200      	movs	r2, #0
 8014a7e:	4b08      	ldr	r3, [pc, #32]	; (8014aa0 <enet_initpara_reset+0x24>)
 8014a80:	e9c3 2200 	strd	r2, r2, [r3]
 8014a84:	e9c3 2202 	strd	r2, r2, [r3, #8]
 8014a88:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8014a8c:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8014a90:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8014a94:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 8014a98:	e9c3 220c 	strd	r2, r2, [r3, #48]	; 0x30
 8014a9c:	639a      	str	r2, [r3, #56]	; 0x38
 8014a9e:	4770      	bx	lr
 8014aa0:	2001da3c 	andcs	sp, r1, ip, lsr sl

08014aa4 <enet_deinit>:
 8014aa4:	b508      	push	{r3, lr}
 8014aa6:	f640 200e 	movw	r0, #2574	; 0xa0e
 8014aaa:	f7fe fac0 	bl	801302e <rcu_periph_reset_enable>
 8014aae:	f640 200e 	movw	r0, #2574	; 0xa0e
 8014ab2:	f7fe fabe 	bl	8013032 <rcu_periph_reset_disable>
 8014ab6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8014aba:	f7ff bfdf 	b.w	8014a7c <enet_initpara_reset>
	...

08014ac0 <i2c_clock_config>:
 8014ac0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014ac2:	4605      	mov	r5, r0
 8014ac4:	2002      	movs	r0, #2
 8014ac6:	460c      	mov	r4, r1
 8014ac8:	4617      	mov	r7, r2
 8014aca:	f7fe fb71 	bl	80131b0 <rcu_clock_freq_get>
 8014ace:	4603      	mov	r3, r0
 8014ad0:	4828      	ldr	r0, [pc, #160]	; (8014b74 <i2c_clock_config+0xb4>)
 8014ad2:	4a29      	ldr	r2, [pc, #164]	; (8014b78 <i2c_clock_config+0xb8>)
 8014ad4:	fbb3 f0f0 	udiv	r0, r3, r0
 8014ad8:	4293      	cmp	r3, r2
 8014ada:	bf94      	ite	ls
 8014adc:	4601      	movls	r1, r0
 8014ade:	213f      	movhi	r1, #63	; 0x3f
 8014ae0:	686e      	ldr	r6, [r5, #4]
 8014ae2:	4a26      	ldr	r2, [pc, #152]	; (8014b7c <i2c_clock_config+0xbc>)
 8014ae4:	f026 063f 	bic.w	r6, r6, #63	; 0x3f
 8014ae8:	430e      	orrs	r6, r1
 8014aea:	4294      	cmp	r4, r2
 8014aec:	606e      	str	r6, [r5, #4]
 8014aee:	d816      	bhi.n	8014b1e <i2c_clock_config+0x5e>
 8014af0:	3001      	adds	r0, #1
 8014af2:	283e      	cmp	r0, #62	; 0x3e
 8014af4:	d90d      	bls.n	8014b12 <i2c_clock_config+0x52>
 8014af6:	223f      	movs	r2, #63	; 0x3f
 8014af8:	622a      	str	r2, [r5, #32]
 8014afa:	0064      	lsls	r4, r4, #1
 8014afc:	fbb3 f4f4 	udiv	r4, r3, r4
 8014b00:	2c04      	cmp	r4, #4
 8014b02:	bf38      	it	cc
 8014b04:	2404      	movcc	r4, #4
 8014b06:	69ea      	ldr	r2, [r5, #28]
 8014b08:	f3c4 040b 	ubfx	r4, r4, #0, #12
 8014b0c:	4314      	orrs	r4, r2
 8014b0e:	61ec      	str	r4, [r5, #28]
 8014b10:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014b12:	2802      	cmp	r0, #2
 8014b14:	d801      	bhi.n	8014b1a <i2c_clock_config+0x5a>
 8014b16:	2202      	movs	r2, #2
 8014b18:	e7ee      	b.n	8014af8 <i2c_clock_config+0x38>
 8014b1a:	6228      	str	r0, [r5, #32]
 8014b1c:	e7ed      	b.n	8014afa <i2c_clock_config+0x3a>
 8014b1e:	4a18      	ldr	r2, [pc, #96]	; (8014b80 <i2c_clock_config+0xc0>)
 8014b20:	4294      	cmp	r4, r2
 8014b22:	d8f5      	bhi.n	8014b10 <i2c_clock_config+0x50>
 8014b24:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8014b28:	4351      	muls	r1, r2
 8014b2a:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8014b2e:	fbb1 f1f2 	udiv	r1, r1, r2
 8014b32:	3101      	adds	r1, #1
 8014b34:	6229      	str	r1, [r5, #32]
 8014b36:	b9a7      	cbnz	r7, 8014b62 <i2c_clock_config+0xa2>
 8014b38:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8014b3c:	fbb3 f4f4 	udiv	r4, r3, r4
 8014b40:	69eb      	ldr	r3, [r5, #28]
 8014b42:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8014b46:	61eb      	str	r3, [r5, #28]
 8014b48:	f3c4 030b 	ubfx	r3, r4, #0, #12
 8014b4c:	b90b      	cbnz	r3, 8014b52 <i2c_clock_config+0x92>
 8014b4e:	f044 0401 	orr.w	r4, r4, #1
 8014b52:	69eb      	ldr	r3, [r5, #28]
 8014b54:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8014b58:	61eb      	str	r3, [r5, #28]
 8014b5a:	69eb      	ldr	r3, [r5, #28]
 8014b5c:	4323      	orrs	r3, r4
 8014b5e:	61eb      	str	r3, [r5, #28]
 8014b60:	e7d6      	b.n	8014b10 <i2c_clock_config+0x50>
 8014b62:	2219      	movs	r2, #25
 8014b64:	4354      	muls	r4, r2
 8014b66:	fbb3 f4f4 	udiv	r4, r3, r4
 8014b6a:	69eb      	ldr	r3, [r5, #28]
 8014b6c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8014b70:	e7e9      	b.n	8014b46 <i2c_clock_config+0x86>
 8014b72:	bf00      	nop
 8014b74:	000f4240 	andeq	r4, pc, r0, asr #4
 8014b78:	03c14dbf 	biceq	r4, r1, #12224	; 0x2fc0
 8014b7c:	000186a0 	andeq	r8, r1, r0, lsr #13
 8014b80:	00061a80 	andeq	r1, r6, r0, lsl #21

08014b84 <i2c_ack_config>:
 8014b84:	6803      	ldr	r3, [r0, #0]
 8014b86:	2901      	cmp	r1, #1
 8014b88:	bf0c      	ite	eq
 8014b8a:	f443 6380 	orreq.w	r3, r3, #1024	; 0x400
 8014b8e:	f423 6380 	bicne.w	r3, r3, #1024	; 0x400
 8014b92:	6003      	str	r3, [r0, #0]
 8014b94:	4770      	bx	lr

08014b96 <i2c_ackpos_config>:
 8014b96:	6803      	ldr	r3, [r0, #0]
 8014b98:	b919      	cbnz	r1, 8014ba2 <i2c_ackpos_config+0xc>
 8014b9a:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8014b9e:	6003      	str	r3, [r0, #0]
 8014ba0:	4770      	bx	lr
 8014ba2:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8014ba6:	e7fa      	b.n	8014b9e <i2c_ackpos_config+0x8>

08014ba8 <i2c_master_addressing>:
 8014ba8:	3202      	adds	r2, #2
 8014baa:	bf0c      	ite	eq
 8014bac:	f021 0101 	biceq.w	r1, r1, #1
 8014bb0:	f041 0101 	orrne.w	r1, r1, #1
 8014bb4:	6101      	str	r1, [r0, #16]
 8014bb6:	4770      	bx	lr

08014bb8 <i2c_enable>:
 8014bb8:	6803      	ldr	r3, [r0, #0]
 8014bba:	f043 0301 	orr.w	r3, r3, #1
 8014bbe:	6003      	str	r3, [r0, #0]
 8014bc0:	4770      	bx	lr

08014bc2 <i2c_start_on_bus>:
 8014bc2:	6803      	ldr	r3, [r0, #0]
 8014bc4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8014bc8:	6003      	str	r3, [r0, #0]
 8014bca:	4770      	bx	lr

08014bcc <i2c_stop_on_bus>:
 8014bcc:	6803      	ldr	r3, [r0, #0]
 8014bce:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8014bd2:	6003      	str	r3, [r0, #0]
 8014bd4:	4770      	bx	lr

08014bd6 <i2c_data_transmit>:
 8014bd6:	6101      	str	r1, [r0, #16]
 8014bd8:	4770      	bx	lr

08014bda <i2c_data_receive>:
 8014bda:	6900      	ldr	r0, [r0, #16]
 8014bdc:	b2c0      	uxtb	r0, r0
 8014bde:	4770      	bx	lr

08014be0 <i2c_flag_get>:
 8014be0:	098b      	lsrs	r3, r1, #6
 8014be2:	581a      	ldr	r2, [r3, r0]
 8014be4:	2301      	movs	r3, #1
 8014be6:	f001 011f 	and.w	r1, r1, #31
 8014bea:	408b      	lsls	r3, r1
 8014bec:	4213      	tst	r3, r2
 8014bee:	bf14      	ite	ne
 8014bf0:	2001      	movne	r0, #1
 8014bf2:	2000      	moveq	r0, #0
 8014bf4:	4770      	bx	lr

08014bf6 <i2c_flag_clear>:
 8014bf6:	f240 5301 	movw	r3, #1281	; 0x501
 8014bfa:	4299      	cmp	r1, r3
 8014bfc:	b510      	push	{r4, lr}
 8014bfe:	d102      	bne.n	8014c06 <i2c_flag_clear+0x10>
 8014c00:	6943      	ldr	r3, [r0, #20]
 8014c02:	6983      	ldr	r3, [r0, #24]
 8014c04:	bd10      	pop	{r4, pc}
 8014c06:	2201      	movs	r2, #1
 8014c08:	098c      	lsrs	r4, r1, #6
 8014c0a:	5823      	ldr	r3, [r4, r0]
 8014c0c:	f001 011f 	and.w	r1, r1, #31
 8014c10:	408a      	lsls	r2, r1
 8014c12:	ea23 0302 	bic.w	r3, r3, r2
 8014c16:	5023      	str	r3, [r4, r0]
 8014c18:	e7f4      	b.n	8014c04 <i2c_flag_clear+0xe>
	...

08014c1c <mac_address_get(unsigned char*)>:
 8014c1c:	2102      	movs	r1, #2
 8014c1e:	4a07      	ldr	r2, [pc, #28]	; (8014c3c <mac_address_get(unsigned char*)+0x20>)
 8014c20:	f8d2 37e8 	ldr.w	r3, [r2, #2024]	; 0x7e8
 8014c24:	f8d2 27ec 	ldr.w	r2, [r2, #2028]	; 0x7ec
 8014c28:	7001      	strb	r1, [r0, #0]
 8014c2a:	7042      	strb	r2, [r0, #1]
 8014c2c:	0e1a      	lsrs	r2, r3, #24
 8014c2e:	7082      	strb	r2, [r0, #2]
 8014c30:	0c1a      	lsrs	r2, r3, #16
 8014c32:	70c2      	strb	r2, [r0, #3]
 8014c34:	0a1a      	lsrs	r2, r3, #8
 8014c36:	7102      	strb	r2, [r0, #4]
 8014c38:	7143      	strb	r3, [r0, #5]
 8014c3a:	4770      	bx	lr
 8014c3c:	1ffff000 	svcne	0x00fff000

08014c40 <__popcountsi2>:
 8014c40:	0843      	lsrs	r3, r0, #1
 8014c42:	f003 3355 	and.w	r3, r3, #1431655765	; 0x55555555
 8014c46:	1ac0      	subs	r0, r0, r3
 8014c48:	0883      	lsrs	r3, r0, #2
 8014c4a:	f003 3333 	and.w	r3, r3, #858993459	; 0x33333333
 8014c4e:	f000 3033 	and.w	r0, r0, #858993459	; 0x33333333
 8014c52:	4418      	add	r0, r3
 8014c54:	eb00 1010 	add.w	r0, r0, r0, lsr #4
 8014c58:	f000 300f 	and.w	r0, r0, #252645135	; 0xf0f0f0f
 8014c5c:	eb00 2000 	add.w	r0, r0, r0, lsl #8
 8014c60:	eb00 4000 	add.w	r0, r0, r0, lsl #16
 8014c64:	0e00      	lsrs	r0, r0, #24
 8014c66:	4770      	bx	lr

Disassembly of section .rodata:

08014c68 <vtable for DisplayHandler-0xf8>:
	...
 8014c70:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 8014c74:	09080706 	stmdbeq	r8, {r1, r2, r8, r9, sl}
 8014c78:	00000000 	andeq	r0, r0, r0
 8014c7c:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 8014c80:	353a3931 	ldrcc	r3, [sl, #-2353]!	; 0xfffff6cf
 8014c84:	31323a35 	teqcc	r2, r5, lsr sl
 8014c88:	74634f00 	strbtvc	r4, [r3], #-3840	; 0xfffff100
 8014c8c:	20303120 	eorscs	r3, r0, r0, lsr #2
 8014c90:	32323032 	eorscc	r3, r2, #50	; 0x32
 8014c94:	335b1b00 	cmpcc	fp, #0, 22
 8014c98:	44446d32 	strbmi	r6, [r4], #-3378	; 0xfffff2ce
 8014c9c:	69502050 	ldmdbvs	r0, {r4, r6, sp}^
 8014ca0:	206c6578 	rsbcs	r6, ip, r8, ror r5
 8014ca4:	746e6f63 	strbtvc	r6, [lr], #-3939	; 0xfffff09d
 8014ca8:	6c6c6f72 	stclvs	15, cr6, [ip], #-456	; 0xfffffe38
 8014cac:	7b207265 	blvc	8831648 <__exidx_end+0x81997c>
 8014cb0:	34207838 	strtcc	r7, [r0], #-2104	; 0xfffff7c8
 8014cb4:	696e5520 	stmdbvs	lr!, {r5, r8, sl, ip, lr}^
 8014cb8:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8014cbc:	1b7d7365 	blne	9f71a58 <__exidx_end+0x1f59d8c>
 8014cc0:	6d37335b 	ldcvs	3, cr3, [r7, #-364]!	; 0xfffffe94
 8014cc4:	635f2e00 	cmpvs	pc, #0, 28
 8014cc8:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 8014ccc:	5f2e0067 	svcpl	0x002e0067
 8014cd0:	70746674 	rsbsvc	r6, r4, r4, ror r6
 8014cd4:	685f2e00 	ldmdavs	pc, {r9, sl, fp, sp}^	; <UNPREDICTABLE>
 8014cd8:	00707474 	rsbseq	r7, r0, r4, ror r4
 8014cdc:	65646f6e 	strbvs	r6, [r4, #-3950]!	; 0xfffff092
 8014ce0:	5044443d 	subpl	r4, r4, sp, lsr r4
 8014ce4:	78695020 	stmdavc	r9!, {r5, ip, lr}^
 8014ce8:	44006c65 	strmi	r6, [r0], #-3173	; 0xfffff39b
 8014cec:	44205044 	strtmi	r5, [r0], #-68	; 0xffffffbc
 8014cf0:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
 8014cf4:	25207961 	strcs	r7, [r0, #-2401]!	; 0xfffff69f
 8014cf8:	73252d75 			; <UNDEFINED> instruction: 0x73252d75
 8014cfc:	0064253a 	rsbeq	r2, r4, sl, lsr r5
 8014d00:	6e61724f 	cdpvs	2, 6, cr7, cr1, cr15, {2}
 8014d04:	50206567 	eorpl	r6, r0, r7, ror #10
 8014d08:	655a2069 	ldrbvs	r2, [sl, #-105]	; 0xffffff97
 8014d0c:	50206f72 	eorpl	r6, r0, r2, ror pc
 8014d10:	6c657869 	stclvs	8, cr7, [r5], #-420	; 0xfffffe5c
 8014d14:	50444400 	subpl	r4, r4, r0, lsl #8
 8014d18:	78695020 	stmdavc	r9!, {r5, ip, lr}^
 8014d1c:	25206c65 	strcs	r6, [r0, #-3173]!	; 0xfffff39b
 8014d20:	73250064 			; <UNDEFINED> instruction: 0x73250064
 8014d24:	2064253a 	rsbcs	r2, r4, sl, lsr r5
 8014d28:	20642547 	rsbcs	r2, r4, r7, asr #10
 8014d2c:	25007325 	strcs	r7, [r0, #-805]	; 0xfffffcdb
 8014d30:	75253a73 	strvc	r3, [r5, #-2675]!	; 0xfffff58d
 8014d34:	61745300 	cmnvs	r4, r0, lsl #6
 8014d38:	6e697472 	mcrvs	4, 3, r7, cr9, cr2, {3}
 8014d3c:	44442067 	strbmi	r2, [r4], #-103	; 0xffffff99
 8014d40:	69442050 	stmdbvs	r4, {r4, r6, sp}^
 8014d44:	616c7073 	smcvs	50947	; 0xc703
 8014d48:	44440079 	strbmi	r0, [r4], #-121	; 0xffffff87
 8014d4c:	69442050 	stmdbvs	r4, {r4, r6, sp}^
 8014d50:	616c7073 	smcvs	50947	; 0xc703
 8014d54:	74532079 	ldrbvc	r2, [r3], #-121	; 0xffffff87
 8014d58:	65747261 	ldrbvs	r7, [r4, #-609]!	; 0xfffffd9f
 8014d5c:	00000064 	andeq	r0, r0, r4, rrx

08014d60 <vtable for DisplayHandler>:
	...
 8014d68:	08008619 	stmdaeq	r0, {r0, r3, r4, r9, sl, pc}
 8014d6c:	0800866b 	stmdaeq	r0, {r0, r1, r3, r5, r6, r9, sl, pc}
 8014d70:	080086c1 	stmdaeq	r0, {r0, r6, r7, r9, sl, pc}

08014d74 <vtable for PixelDmxStartStop>:
	...
 8014d7c:	0800861b 	stmdaeq	r0, {r0, r1, r3, r4, r9, sl, pc}
 8014d80:	08008677 	stmdaeq	r0, {r0, r1, r2, r4, r5, r6, r9, sl, pc}
 8014d84:	0800861d 	stmdaeq	r0, {r0, r2, r3, r4, r9, sl, pc}
 8014d88:	0800862d 	stmdaeq	r0, {r0, r2, r3, r5, r9, sl, pc}

08014d8c <vtable for RDMNetDevice>:
	...
 8014d94:	08008711 	stmdaeq	r0, {r0, r4, r8, r9, sl, pc}
 8014d98:	08008739 	stmdaeq	r0, {r0, r3, r4, r5, r8, r9, sl, pc}
 8014d9c:	0800b61f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r9, sl, ip, sp, pc}
 8014da0:	0800b621 	stmdaeq	r0, {r0, r5, r9, sl, ip, sp, pc}
 8014da4:	0800863d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r9, sl, pc}
 8014da8:	08008651 	stmdaeq	r0, {r0, r4, r6, r9, sl, pc}
 8014dac:	08008691 	stmdaeq	r0, {r0, r4, r7, r9, sl, pc}
 8014db0:	ffffff34 			; <UNDEFINED> instruction: 0xffffff34
 8014db4:	00000000 	andeq	r0, r0, r0
 8014db8:	08008731 	stmdaeq	r0, {r0, r4, r5, r8, r9, sl, pc}
 8014dbc:	0800874b 	stmdaeq	r0, {r0, r1, r3, r6, r8, r9, sl, pc}
 8014dc0:	08008649 	stmdaeq	r0, {r0, r3, r6, r9, sl, pc}
 8014dc4:	08008661 	stmdaeq	r0, {r0, r5, r6, r9, sl, pc}
 8014dc8:	080086a5 	stmdaeq	r0, {r0, r2, r5, r7, r9, sl, pc}

08014dcc <vtable for FactoryDefaults>:
	...
 8014dd4:	08008669 	stmdaeq	r0, {r0, r3, r5, r6, r9, sl, pc}
 8014dd8:	08008683 	stmdaeq	r0, {r0, r1, r7, r9, sl, pc}
 8014ddc:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}

08014de0 <CSWTCH.81>:
 8014de0:	444e4f4f 	strbmi	r4, [lr], #-3919	; 0xfffff0b1
 8014de4:	 	strtcc	r3, [lr], #-326	; 0xfffffeba

08014de5 <SOFTWARE_VERSION>:
 8014de5:	00342e31 	eorseq	r2, r4, r1, lsr lr

08014de9 <gamma10_0>:
 8014de9:	03020100 	movweq	r0, #8448	; 0x2100
 8014ded:	07060504 	streq	r0, [r6, -r4, lsl #10]
 8014df1:	0b0a0908 	bleq	8297219 <__exidx_end+0x27f54d>
 8014df5:	0f0e0d0c 	svceq	0x000e0d0c
 8014df9:	13121110 	tstne	r2, #16, 2
 8014dfd:	17161514 			; <UNDEFINED> instruction: 0x17161514
 8014e01:	1b1a1918 	blne	869b269 <__exidx_end+0x68359d>
 8014e05:	1f1e1d1c 	svcne	0x001e1d1c
 8014e09:	23222120 			; <UNDEFINED> instruction: 0x23222120
 8014e0d:	27262524 	strcs	r2, [r6, -r4, lsr #10]!
 8014e11:	2b2a2928 	blcs	8a9f2b9 <__exidx_end+0xa875ed>
 8014e15:	2f2e2d2c 	svccs	0x002e2d2c
 8014e19:	33323130 	teqcc	r2, #48, 2
 8014e1d:	37363534 			; <UNDEFINED> instruction: 0x37363534
 8014e21:	3b3a3938 	blcc	8ea3309 <__exidx_end+0xe8b63d>
 8014e25:	3f3e3d3c 	svccc	0x003e3d3c
 8014e29:	43424140 	movtmi	r4, #8512	; 0x2140
 8014e2d:	47464544 	strbmi	r4, [r6, -r4, asr #10]
 8014e31:	4b4a4948 	blmi	92a7359 <__exidx_end+0x128f68d>
 8014e35:	4f4e4d4c 	svcmi	0x004e4d4c
 8014e39:	53525150 	cmppl	r2, #80, 2
 8014e3d:	57565554 			; <UNDEFINED> instruction: 0x57565554
 8014e41:	5b5a5958 	blpl	96ab3a9 <__exidx_end+0x16936dd>
 8014e45:	5f5e5d5c 	svcpl	0x005e5d5c
 8014e49:	63626160 	cmnvs	r2, #96, 2
 8014e4d:	67666564 	strbvs	r6, [r6, -r4, ror #10]!
 8014e51:	6b6a6968 	blvs	9aaf3f9 <__exidx_end+0x1a9772d>
 8014e55:	6f6e6d6c 	svcvs	0x006e6d6c
 8014e59:	73727170 	cmnvc	r2, #112, 2
 8014e5d:	77767574 			; <UNDEFINED> instruction: 0x77767574
 8014e61:	7b7a7978 	blvc	9eb3449 <__exidx_end+0x1e9b77d>
 8014e65:	7f7e7d7c 	svcvc	0x007e7d7c
 8014e69:	83828180 	orrhi	r8, r2, #128, 2
 8014e6d:	87868584 	strhi	r8, [r6, r4, lsl #11]
 8014e71:	8b8a8988 	blhi	62b7499 <__stack_size+0x62b4c99>
 8014e75:	8f8e8d8c 	svchi	0x008e8d8c
 8014e79:	93929190 	orrsls	r9, r2, #144, 2	; 0x24
 8014e7d:	97969594 			; <UNDEFINED> instruction: 0x97969594
 8014e81:	9b9a9998 	blls	66bb4e9 <__stack_size+0x66b8ce9>
 8014e85:	9f9e9d9c 	svcls	0x009e9d9c
 8014e89:	a3a2a1a0 			; <UNDEFINED> instruction: 0xa3a2a1a0
 8014e8d:	a7a6a5a4 	strge	sl, [r6, r4, lsr #11]!
 8014e91:	abaaa9a8 	blge	6abf539 <__stack_size+0x6abcd39>
 8014e95:	afaeadac 	svcge	0x00aeadac
 8014e99:	b3b2b1b0 			; <UNDEFINED> instruction: 0xb3b2b1b0
 8014e9d:	b7b6b5b4 			; <UNDEFINED> instruction: 0xb7b6b5b4
 8014ea1:	bbbab9b8 	bllt	6ec3589 <__stack_size+0x6ec0d89>
 8014ea5:	bfbebdbc 	svclt	0x00bebdbc
 8014ea9:	c3c2c1c0 	bicgt	ip, r2, #192, 2	; 0x30
 8014ead:	c7c6c5c4 	strbgt	ip, [r6, r4, asr #11]
 8014eb1:	cbcac9c8 	blgt	72c75d9 <__stack_size+0x72c4dd9>
 8014eb5:	cfcecdcc 	svcgt	0x00cecdcc
 8014eb9:	d3d2d1d0 	bicsle	sp, r2, #208, 2	; 0x34
 8014ebd:	d7d6d5d4 			; <UNDEFINED> instruction: 0xd7d6d5d4
 8014ec1:	dbdad9d8 	blle	76cb629 <__stack_size+0x76c8e29>
 8014ec5:	dfdedddc 	svcle	0x00dedddc
 8014ec9:	e3e2e1e0 	mvn	lr, #224, 2	; 0x38
 8014ecd:	e7e6e5e4 	strb	lr, [r6, r4, ror #11]!
 8014ed1:	ebeae9e8 	bl	7acf679 <__stack_size+0x7acce79>
 8014ed5:	efeeedec 	svc	0x00eeedec
 8014ed9:	f3f2f1f0 	vsra.u64	<illegal reg q15.5>, q8, #14
 8014edd:	f7f6f5f4 			; <UNDEFINED> instruction: 0xf7f6f5f4
 8014ee1:	fbfaf9f8 	blx	7ed36cb <__stack_size+0x7ed0ecb>
 8014ee5:	fffefdfc 			; <UNDEFINED> instruction: 0xfffefdfc

08014ee9 <SOFTWARE_VERSION>:
 8014ee9:	00342e31 	eorseq	r2, r4, r1, lsr lr
 8014eed:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8014ef1:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8014ef5:	2c64252e 	cfstr64cs	mvdx2, [r4], #-184	; 0xffffff48
 8014ef9:	252c7325 	strcs	r7, [ip, #-805]!	; 0xfffffcdb
 8014efd:	64252c73 	strtvs	r2, [r5], #-3187	; 0xfffff38d
 8014f01:	0a73252c 	beq	9cde3b9 <__exidx_end+0x1cc66ed>
 8014f05:	2e642500 	cdpcs	5, 6, cr2, cr4, cr0, {0}
 8014f09:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8014f0d:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8014f11:	2c73252c 	cfldr64cs	mvdx2, [r3], #-176	; 0xffffff50
 8014f15:	252c7325 	strcs	r7, [ip, #-805]!	; 0xfffffcdb
 8014f19:	4f000a64 	svcmi	0x00000a64
 8014f1d:	664f006e 	strbvs	r0, [pc], -lr, rrx
 8014f21:	69640066 	stmdbvs	r4!, {r1, r2, r5, r6}^
 8014f25:	616c7073 	smcvs	50947	; 0xc703
 8014f29:	73253a79 			; <UNDEFINED> instruction: 0x73253a79
 8014f2d:	6674000a 	ldrbtvs	r0, [r4], -sl
 8014f31:	253a7074 	ldrcs	r7, [sl, #-116]!	; 0xffffff8c
 8014f35:	76000a73 			; <UNDEFINED> instruction: 0x76000a73
 8014f39:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8014f3d:	253a6e6f 	ldrcs	r6, [sl, #-3695]!	; 0xfffff191
 8014f41:	70750073 	rsbsvc	r0, r5, r3, ror r0
 8014f45:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 8014f49:	7525203a 	strvc	r2, [r5, #-58]!	; 0xffffffc6
 8014f4d:	54000a73 	strpl	r0, [r0], #-2675	; 0xfffff58d
 8014f51:	20505446 	subscs	r5, r0, r6, asr #8
 8014f55:	20206e4f 	eorcs	r6, r0, pc, asr #28
 8014f59:	6265525b 	rsbvs	r5, r5, #-1342177275	; 0xb0000005
 8014f5d:	5d746f6f 	ldclpl	15, cr6, [r4, #-444]!	; 0xfffffe44
 8014f61:	54465400 	strbpl	r5, [r6], #-1024	; 0xfffffc00
 8014f65:	664f2050 			; <UNDEFINED> instruction: 0x664f2050
 8014f69:	525b2066 	subspl	r2, fp, #102	; 0x66
 8014f6d:	6f6f6265 	svcvs	0x006f6265
 8014f71:	00205d74 	eoreq	r5, r0, r4, ror sp
 8014f75:	4f525245 	svcmi	0x00525245
 8014f79:	673f2352 			; <UNDEFINED> instruction: 0x673f2352
 8014f7d:	000a7465 	andeq	r7, sl, r5, ror #8
 8014f81:	70746674 	rsbsvc	r6, r4, r4, ror r6
 8014f85:	69640023 	stmdbvs	r4!, {r0, r1, r5}^
 8014f89:	616c7073 	smcvs	50947	; 0xc703
 8014f8d:	45002379 	strmi	r2, [r0, #-889]	; 0xfffffc87
 8014f91:	524f5252 	subpl	r5, pc, #536870917	; 0x20000005
 8014f95:	000a2123 	andeq	r2, sl, r3, lsr #2
 8014f99:	4f525245 	svcmi	0x00525245
 8014f9d:	0a3f2352 	beq	8fddced <__exidx_end+0xfc6021>
 8014fa1:	62657200 	rsbvs	r7, r5, #0, 4
 8014fa5:	23746f6f 	cmncs	r4, #444	; 0x1bc
 8014fa9:	696c0023 	stmdbvs	ip!, {r0, r1, r5}^
 8014fad:	00237473 	eoreq	r7, r3, r3, ror r4
 8014fb1:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8014fb5:	75002a23 	strvc	r2, [r0, #-2595]	; 0xfffff5dd
 8014fb9:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 8014fbd:	76002365 	strvc	r2, [r0], -r5, ror #6
 8014fc1:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8014fc5:	00236e6f 	eoreq	r6, r3, pc, ror #28
 8014fc9:	23746567 	cmncs	r4, #432013312	; 0x19c00000
 8014fcd:	63616600 	cmnvs	r1, #0, 12
 8014fd1:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8014fd5:	 	tstmi	r0, r3, lsr #6

08014fd8 <s_Node>:
 8014fd8:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 8014fdc:	0074654e 	rsbseq	r6, r4, lr, asr #10
	...
 8014fe8:	41730000 	cmnmi	r3, r0
 8014fec:	45204e43 	strmi	r4, [r0, #-3651]!	; 0xfffff1bd
 8014ff0:	31332e31 	teqcc	r3, r1, lsr lr
	...
 8014ffc:	2043534f 	subcs	r5, r3, pc, asr #6
 8015000:	76726553 			; <UNDEFINED> instruction: 0x76726553
 8015004:	00007265 	andeq	r7, r0, r5, ror #4
 8015008:	00000000 	andeq	r0, r0, r0
 801500c:	544c0000 	strbpl	r0, [ip], #-0
 8015010:	00000043 	andeq	r0, r0, r3, asr #32
	...
 8015020:	2043534f 	subcs	r5, r3, pc, asr #6
 8015024:	65696c43 	strbvs	r6, [r9, #-3139]!	; 0xfffff3bd
 8015028:	0000746e 	andeq	r7, r0, lr, ror #8
 801502c:	00000000 	andeq	r0, r0, r0
 8015030:	44520000 	ldrbmi	r0, [r2], #-0
 8015034:	74654e4d 	strbtvc	r4, [r5], #-3661	; 0xfffff1b3
 8015038:	524c4c20 	subpl	r4, ip, #32, 24	; 0x2000
 801503c:	6e4f2050 	mcrvs	0, 2, r2, cr15, cr0, {2}
 8015040:	0000796c 	andeq	r7, r0, ip, ror #18
 8015044:	776f6853 			; <UNDEFINED> instruction: 0x776f6853
 8015048:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
	...
 8015054:	494d0000 	stmdbmi	sp, {}^	; <UNPREDICTABLE>
 8015058:	00004944 	andeq	r4, r0, r4, asr #18
	...
 8015068:	00504444 	subseq	r4, r0, r4, asr #8
	...
 8015078:	69500000 	ldmdbvs	r0, {}^	; <UNPREDICTABLE>
 801507c:	506c6578 	rsbpl	r6, ip, r8, ror r5
 8015080:	65687375 	strbvs	r7, [r8, #-885]!	; 0xfffffc8b
 8015084:	00000072 	andeq	r0, r0, r2, ror r0
 8015088:	00000000 	andeq	r0, r0, r0
 801508c:	65646f4e 	strbvs	r6, [r4, #-3918]!	; 0xfffff0b2
	...

0801509e <s_Output>:
 801509e:	00584d44 	subseq	r4, r8, r4, asr #26
	...
 80150aa:	004d4452 	subeq	r4, sp, r2, asr r4
	...
 80150b6:	696e6f4d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
 80150ba:	00726f74 	rsbseq	r6, r2, r4, ror pc
 80150be:	00000000 	andeq	r0, r0, r0
 80150c2:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
 80150c6:	0000006c 	andeq	r0, r0, ip, rrx
 80150ca:	00000000 	andeq	r0, r0, r0
 80150ce:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
 80150d2:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
 80150d6:	00000000 	andeq	r0, r0, r0
 80150da:	0043534f 	subeq	r5, r3, pc, asr #6
	...
 80150e6:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 80150ea:	00006769 	andeq	r6, r0, r9, ror #14
 80150ee:	00000000 	andeq	r0, r0, r0
 80150f2:	70657453 	rsbvc	r7, r5, r3, asr r4
 80150f6:	00726570 	rsbseq	r6, r2, r0, ror r5
 80150fa:	00000000 	andeq	r0, r0, r0
 80150fe:	79616c50 	stmdbvc	r1!, {r4, r6, sl, fp, sp, lr}^
 8015102:	00007265 	andeq	r7, r0, r5, ror #4
 8015106:	00000000 	andeq	r0, r0, r0
 801510a:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 801510e:	0074654e 	rsbseq	r6, r4, lr, asr #10
 8015112:	00000000 	andeq	r0, r0, r0
 8015116:	69726553 	ldmdbvs	r2!, {r0, r1, r4, r6, r8, sl, sp, lr}^
 801511a:	00006c61 	andeq	r6, r0, r1, ror #24
 801511e:	00000000 	andeq	r0, r0, r0
 8015122:	20424752 	subcs	r4, r2, r2, asr r7
 8015126:	656e6150 	strbvs	r6, [lr, #-336]!	; 0xfffffeb0
 801512a:	0000006c 	andeq	r0, r0, ip, rrx
	...

08015130 <RemoteConfig::s_GET>:
 8015130:	0800a391 	stmdaeq	r0, {r0, r4, r7, r8, r9, sp, pc}
 8015134:	00000000 	andeq	r0, r0, r0
 8015138:	08014fa2 	stmdaeq	r1, {r1, r5, r7, r8, r9, sl, fp, lr}
 801513c:	00000008 	andeq	r0, r0, r8
 8015140:	080098d9 	stmdaeq	r0, {r0, r3, r4, r6, r7, fp, ip, pc}
 8015144:	00000000 	andeq	r0, r0, r0
 8015148:	08014fab 	stmdaeq	r1, {r0, r1, r3, r5, r7, r8, r9, sl, fp, lr}
 801514c:	00000005 	andeq	r0, r0, r5
 8015150:	080098d9 	stmdaeq	r0, {r0, r3, r4, r6, r7, fp, ip, pc}
 8015154:	00000000 	andeq	r0, r0, r0
 8015158:	08014fb1 	stmdaeq	r1, {r0, r4, r5, r7, r8, r9, sl, fp, lr}
 801515c:	00000006 	andeq	r0, r0, r6
 8015160:	08009a8d 	stmdaeq	r0, {r0, r2, r3, r7, r9, fp, ip, pc}
 8015164:	00000000 	andeq	r0, r0, r0
 8015168:	08014fb8 	stmdaeq	r1, {r3, r4, r5, r7, r8, r9, sl, fp, lr}
 801516c:	00000007 	andeq	r0, r0, r7
 8015170:	08009a4d 	stmdaeq	r0, {r0, r2, r3, r6, r9, fp, ip, pc}
 8015174:	00000000 	andeq	r0, r0, r0
 8015178:	08014fc0 	stmdaeq	r1, {r6, r7, r8, r9, sl, fp, lr}
 801517c:	00000008 	andeq	r0, r0, r8
 8015180:	080099a9 	stmdaeq	r0, {r0, r3, r5, r7, r8, fp, ip, pc}
 8015184:	00000000 	andeq	r0, r0, r0
 8015188:	08014f87 	stmdaeq	r1, {r0, r1, r2, r7, r8, r9, sl, fp, lr}
 801518c:	00000008 	andeq	r0, r0, r8
 8015190:	08009d61 	stmdaeq	r0, {r0, r5, r6, r8, sl, fp, ip, pc}
 8015194:	00000000 	andeq	r0, r0, r0
 8015198:	08014fc9 	stmdaeq	r1, {r0, r3, r6, r7, r8, r9, sl, fp, lr}
 801519c:	00010004 	andeq	r0, r1, r4
 80151a0:	080099fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, fp, ip, pc}
 80151a4:	00000000 	andeq	r0, r0, r0
 80151a8:	08014f81 	stmdaeq	r1, {r0, r7, r8, r9, sl, fp, lr}
 80151ac:	00000005 	andeq	r0, r0, r5
 80151b0:	0800a081 	stmdaeq	r0, {r0, r7, sp, pc}
 80151b4:	00000000 	andeq	r0, r0, r0
 80151b8:	08014fce 	stmdaeq	r1, {r1, r2, r3, r6, r7, r8, r9, sl, fp, lr}
 80151bc:	00000009 	andeq	r0, r0, r9

080151c0 <RemoteConfig::s_SET>:
 80151c0:	08009b39 	stmdaeq	r0, {r0, r3, r4, r5, r8, r9, fp, ip, pc}
 80151c4:	00000000 	andeq	r0, r0, r0
 80151c8:	08014f81 	stmdaeq	r1, {r0, r7, r8, r9, sl, fp, lr}
 80151cc:	00010005 	andeq	r0, r1, r5
 80151d0:	08009b11 	stmdaeq	r0, {r0, r4, r8, r9, fp, ip, pc}
 80151d4:	00000000 	andeq	r0, r0, r0
 80151d8:	08014f87 	stmdaeq	r1, {r0, r1, r2, r7, r8, r9, sl, fp, lr}
 80151dc:	00010008 	andeq	r0, r1, r8
 80151e0:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 80151e4:	2c64253a 	cfstr64cs	mvdx2, [r4], #-232	; 0xffffff18
 80151e8:	73252300 			; <UNDEFINED> instruction: 0x73252300
 80151ec:	0a64253d 	beq	991e6e8 <__exidx_end+0x1906a1c>
 80151f0:	73252200 			; <UNDEFINED> instruction: 0x73252200
 80151f4:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 80151f8:	002c2273 	eoreq	r2, ip, r3, ror r2
 80151fc:	3d732523 	cfldr64cc	mvdx2, [r3, #-140]!	; 0xffffff74
 8015200:	000a7325 	andeq	r7, sl, r5, lsr #6
 8015204:	6f626552 	svcvs	0x00626552
 8015208:	6e69746f 	cdpvs	4, 6, cr7, cr9, cr15, {3}
 801520c:	2e2e2067 	cdpcs	0, 2, cr2, cr14, cr7, {3}
 8015210:	52000a2e 	andpl	r0, r0, #188416	; 0x2e000
 8015214:	6f6f6265 	svcvs	0x006f6265
 8015218:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 801521c:	2e2e2e20 	cdpcs	14, 2, cr2, cr14, cr0, {1}
 8015220:	6f637200 	svcvs	0x00637200
 8015224:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 8015228:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 801522c:	74656e00 	strbtvc	r6, [r5], #-3584	; 0xfffff200
 8015230:	6b726f77 	blvs	9cb1014 <__exidx_end+0x1c99348>
 8015234:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8015238:	73696400 	cmnvc	r9, #0, 8
 801523c:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8015240:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8015244:	76656400 	strbtvc	r6, [r5], -r0, lsl #8
 8015248:	73656369 	cmnvc	r5, #-1543503871	; 0xa4000001
 801524c:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8015250:	00000000 	andeq	r0, r0, r0

08015254 <RemoteConfig::s_TXT>:
 8015254:	08009d69 	stmdaeq	r0, {r0, r3, r5, r6, r8, sl, fp, ip, pc}
 8015258:	00000000 	andeq	r0, r0, r0
 801525c:	08009fd9 	stmdaeq	r0, {r0, r3, r4, r6, r7, r8, r9, sl, fp, ip, pc}
 8015260:	00000000 	andeq	r0, r0, r0
 8015264:	08015221 	stmdaeq	r1, {r0, r5, r9, ip, lr}
 8015268:	0000000b 	andeq	r0, r0, fp
 801526c:	0000000c 	andeq	r0, r0, ip
 8015270:	08009d95 	stmdaeq	r0, {r0, r2, r4, r7, r8, sl, fp, ip, pc}
 8015274:	00000000 	andeq	r0, r0, r0
 8015278:	0800a009 	stmdaeq	r0, {r0, r3, sp, pc}
 801527c:	00000000 	andeq	r0, r0, r0
 8015280:	0801522d 	stmdaeq	r1, {r0, r2, r3, r5, r9, ip, lr}
 8015284:	0000000b 	andeq	r0, r0, fp
 8015288:	00000000 	andeq	r0, r0, r0
 801528c:	08009ded 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, r8, sl, fp, ip, pc}
 8015290:	00000000 	andeq	r0, r0, r0
 8015294:	0800a059 	stmdaeq	r0, {r0, r3, r4, r6, sp, pc}
 8015298:	00000000 	andeq	r0, r0, r0
 801529c:	08015239 	stmdaeq	r1, {r0, r3, r4, r5, r9, ip, lr}
 80152a0:	0000000b 	andeq	r0, r0, fp
 80152a4:	0000000f 	andeq	r0, r0, pc
 80152a8:	08009dc1 	stmdaeq	r0, {r0, r6, r7, r8, sl, fp, ip, pc}
 80152ac:	00000000 	andeq	r0, r0, r0
 80152b0:	0800a031 	stmdaeq	r0, {r0, r4, r5, sp, pc}
 80152b4:	00000000 	andeq	r0, r0, r0
 80152b8:	08015245 	stmdaeq	r1, {r0, r2, r6, r9, ip, lr}
 80152bc:	0000000b 	andeq	r0, r0, fp
 80152c0:	00000003 	andeq	r0, r0, r3
 80152c4:	00544547 	subseq	r4, r4, r7, asr #10
 80152c8:	54534f50 	ldrbpl	r4, [r3], #-3920	; 0xfffff0b0
 80152cc:	54544800 	ldrbpl	r4, [r4], #-2048	; 0xfffff800
 80152d0:	0a200050 	beq	8815418 <__exidx_end+0x7fd74c>
 80152d4:	312e3100 			; <UNDEFINED> instruction: 0x312e3100
 80152d8:	6e6f4300 	cdpvs	3, 6, cr4, cr15, cr0, {0}
 80152dc:	746e6574 	strbtvc	r6, [lr], #-1396	; 0xfffffa8c
 80152e0:	7079542d 	rsbsvc	r5, r9, sp, lsr #8
 80152e4:	3b200065 	blcc	8815480 <__exidx_end+0x7fd7b4>
 80152e8:	70706100 	rsbsvc	r6, r0, r0, lsl #2
 80152ec:	6163696c 	cmnvs	r3, ip, ror #18
 80152f0:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 80152f4:	6f736a2f 	svcvs	0x00736a2f
 80152f8:	6f43006e 	svcvs	0x0043006e
 80152fc:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 8015300:	654c2d74 	strbvs	r2, [ip, #-3444]	; 0xfffff28c
 8015304:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
 8015308:	6e692f00 	cdpvs	15, 6, cr2, cr9, cr0, {0}
 801530c:	2e786564 	cdpcs	5, 7, cr6, cr8, cr4, {3}
 8015310:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8015314:	74732f00 	ldrbtvc	r2, [r3], #-3840	; 0xfffff100
 8015318:	73656c79 	cmnvc	r5, #30976	; 0x7900
 801531c:	7373632e 	cmnvc	r3, #-1207959552	; 0xb8000000
 8015320:	6e692f00 	cdpvs	15, 6, cr2, cr9, cr0, {0}
 8015324:	2e786564 	cdpcs	5, 7, cr6, cr8, cr4, {3}
 8015328:	2f00736a 	svccs	0x0000736a
 801532c:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 8015330:	696c002f 	stmdbvs	ip!, {r0, r1, r2, r3, r5}^
 8015334:	76007473 			; <UNDEFINED> instruction: 0x76007473
 8015338:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 801533c:	75006e6f 	strvc	r6, [r0, #-3695]	; 0xfffff191
 8015340:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 8015344:	69640065 	stmdbvs	r4!, {r0, r2, r5, r6}^
 8015348:	616c7073 	smcvs	50947	; 0xc703
 801534c:	69640079 	stmdbvs	r4!, {r0, r3, r4, r5, r6}^
 8015350:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 8015354:	0079726f 	rsbseq	r7, r9, pc, ror #4
 8015358:	6f736a2f 	svcvs	0x00736a2f
 801535c:	63612f6e 	cmnvs	r1, #440	; 0x1b8
 8015360:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8015364:	62657200 	rsbvs	r7, r5, #0, 4
 8015368:	00746f6f 	rsbseq	r6, r4, pc, ror #30
 801536c:	6e656469 	cdpvs	4, 6, cr6, cr5, cr9, {3}
 8015370:	79666974 	stmdbvc	r6!, {r2, r4, r5, r6, r8, fp, sp, lr}^
 8015374:	44213c00 	strtmi	r3, [r1], #-3072	; 0xfffff400
 8015378:	5954434f 	ldmdbpl	r4, {r0, r1, r2, r3, r6, r8, r9, lr}^
 801537c:	68204550 	stmdavs	r0!, {r4, r6, r8, sl, lr}
 8015380:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 8015384:	74683c0a 	strbtvc	r3, [r8], #-3082	; 0xfffff3f6
 8015388:	0a3e6c6d 	beq	8fb0544 <__exidx_end+0xf98878>
 801538c:	6165683c 	cmnvs	r5, ip, lsr r8
 8015390:	743c3e64 	ldrtvc	r3, [ip], #-3684	; 0xfffff19c
 8015394:	656c7469 	strbvs	r7, [ip, #-1129]!	; 0xfffffb97
 8015398:	6275533e 	rsbsvs	r5, r5, #-134217728	; 0xf8000000
 801539c:	3c74696d 			; <UNDEFINED> instruction: 0x3c74696d
 80153a0:	7469742f 	strbtvc	r7, [r9], #-1071	; 0xfffffbd1
 80153a4:	3c3e656c 	cfldr32cc	mvfx6, [lr], #-432	; 0xfffffe50
 80153a8:	6165682f 	cmnvs	r5, pc, lsr #16
 80153ac:	3c0a3e64 	stccc	14, cr3, [sl], {100}	; 0x64
 80153b0:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 80153b4:	31683c3e 	cmncc	r8, lr, lsr ip
 80153b8:	3c4b4f3e 	mcrrcc	15, 3, r4, fp, cr14
 80153bc:	3e31682f 	cdpcc	8, 3, cr6, cr1, cr15, {1}
 80153c0:	6f622f3c 	svcvs	0x00622f3c
 80153c4:	0a3e7964 	beq	8fb395c <__exidx_end+0xf9bc90>
 80153c8:	74682f3c 	strbtvc	r2, [r8], #-3900	; 0xfffff0c4
 80153cc:	0a3e6c6d 	beq	8fb0588 <__exidx_end+0xf988bc>
 80153d0:	64614200 	strbtvs	r4, [r1], #-512	; 0xfffffe00
 80153d4:	71655220 	cmnvc	r5, r0, lsr #4
 80153d8:	74736575 	ldrbtvc	r6, [r3], #-1397	; 0xfffffa8b
 80153dc:	746f4e00 	strbtvc	r4, [pc], #-3584	; 80153e4 <RemoteConfig::s_TXT+0x190>
 80153e0:	756f4620 	strbvc	r4, [pc, #-1568]!	; 8014dc8 <vtable for RDMNetDevice+0x3c>
 80153e4:	5200646e 	andpl	r6, r0, #1845493760	; 0x6e000000
 80153e8:	65757165 	ldrbvs	r7, [r5, #-357]!	; 0xfffffe9b
 80153ec:	45207473 	strmi	r7, [r0, #-1139]!	; 0xfffffb8d
 80153f0:	7469746e 	strbtvc	r7, [r9], #-1134	; 0xfffffb92
 80153f4:	6f542079 	svcvs	0x00542079
 80153f8:	614c206f 	cmpvs	ip, pc, rrx
 80153fc:	00656772 	rsbeq	r6, r5, r2, ror r7
 8015400:	75716552 	ldrbvc	r6, [r1, #-1362]!	; 0xfffffaae
 8015404:	2d747365 	ldclcs	3, cr7, [r4, #-404]!	; 0xfffffe6c
 8015408:	20495255 	subcs	r5, r9, r5, asr r2
 801540c:	206f6f54 	rsbcs	r6, pc, r4, asr pc	; <UNPREDICTABLE>
 8015410:	676e6f4c 	strbvs	r6, [lr, -ip, asr #30]!
 8015414:	746e4900 	strbtvc	r4, [lr], #-2304	; 0xfffff700
 8015418:	616e7265 	cmnvs	lr, r5, ror #4
 801541c:	6553206c 	ldrbvs	r2, [r3, #-108]	; 0xffffff94
 8015420:	72657672 	rsbvc	r7, r5, #119537664	; 0x7200000
 8015424:	72724520 	rsbsvc	r4, r2, #32, 10	; 0x8000000
 8015428:	4d00726f 	sfmmi	f7, 4, [r0, #-444]	; 0xfffffe44
 801542c:	6f687465 	svcvs	0x00687465
 8015430:	6f4e2064 	svcvs	0x004e2064
 8015434:	6d492074 	stclvs	0, cr2, [r9, #-464]	; 0xfffffe30
 8015438:	6d656c70 	stclvs	12, cr6, [r5, #-448]!	; 0xfffffe40
 801543c:	65746e65 	ldrbvs	r6, [r4, #-3685]!	; 0xfffff19b
 8015440:	65560064 	ldrbvs	r0, [r6, #-100]	; 0xffffff9c
 8015444:	6f697372 	svcvs	0x00697372
 8015448:	6f4e206e 	svcvs	0x004e206e
 801544c:	75532074 	ldrbvc	r2, [r3, #-116]	; 0xffffff8c
 8015450:	726f7070 	rsbvc	r7, pc, #112	; 0x70
 8015454:	00646574 	rsbeq	r6, r4, r4, ror r5
 8015458:	6e6b6e55 	mcrvs	14, 3, r6, cr11, cr5, {2}
 801545c:	206e776f 	rsbcs	r7, lr, pc, ror #14
 8015460:	6f727245 	svcvs	0x00727245
 8015464:	4b4f0072 	blmi	93d5634 <__exidx_end+0x13bd968>
 8015468:	44213c00 	strtmi	r3, [r1], #-3072	; 0xfffff400
 801546c:	5954434f 	ldmdbpl	r4, {r0, r1, r2, r3, r6, r8, r9, lr}^
 8015470:	68204550 	stmdavs	r0!, {r4, r6, r8, sl, lr}
 8015474:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 8015478:	74683c0a 	strbtvc	r3, [r8], #-3082	; 0xfffff3f6
 801547c:	0a3e6c6d 	beq	8fb0638 <__exidx_end+0xf9896c>
 8015480:	6165683c 	cmnvs	r5, ip, lsr r8
 8015484:	743c3e64 	ldrtvc	r3, [ip], #-3684	; 0xfffff19c
 8015488:	656c7469 	strbvs	r7, [ip, #-1129]!	; 0xfffffb97
 801548c:	2075253e 	rsbscs	r2, r5, lr, lsr r5
 8015490:	2f3c7325 	svccs	0x003c7325
 8015494:	6c746974 			; <UNDEFINED> instruction: 0x6c746974
 8015498:	2f3c3e65 	svccs	0x003c3e65
 801549c:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
 80154a0:	623c0a3e 	eorsvs	r0, ip, #253952	; 0x3e000
 80154a4:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 80154a8:	3e31683c 	mrccc	8, 1, r6, cr1, cr12, {1}
 80154ac:	2f3c7325 	svccs	0x003c7325
 80154b0:	3c3e3168 	ldfccs	f3, [lr], #-416	; 0xfffffe60
 80154b4:	646f622f 	strbtvs	r6, [pc], #-559	; 80154bc <RemoteConfig::s_TXT+0x268>
 80154b8:	3c0a3e79 	stccc	14, cr3, [sl], {121}	; 0x79
 80154bc:	6d74682f 	ldclvs	8, cr6, [r4, #-188]!	; 0xffffff44
 80154c0:	000a3e6c 	andeq	r3, sl, ip, ror #28
 80154c4:	50545448 	subspl	r5, r4, r8, asr #8
 80154c8:	312e312f 			; <UNDEFINED> instruction: 0x312e312f
 80154cc:	20752520 	rsbscs	r2, r5, r0, lsr #10
 80154d0:	0a0d7325 	beq	837216c <__exidx_end+0x35a4a0>
 80154d4:	76726553 			; <UNDEFINED> instruction: 0x76726553
 80154d8:	203a7265 	eorscs	r7, sl, r5, ror #4
 80154dc:	0a0d7325 	beq	8372178 <__exidx_end+0x35a4ac>
 80154e0:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
 80154e4:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	; 0xfffffe6c
 80154e8:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
 80154ec:	7325203a 			; <UNDEFINED> instruction: 0x7325203a
 80154f0:	6f430a0d 	svcvs	0x00430a0d
 80154f4:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 80154f8:	654c2d74 	strbvs	r2, [ip, #-3444]	; 0xfffff28c
 80154fc:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
 8015500:	7525203a 	strvc	r2, [r5, #-58]!	; 0xffffffc6
 8015504:	6f430a0d 	svcvs	0x00430a0d
 8015508:	63656e6e 	cmnvs	r5, #1760	; 0x6e0
 801550c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8015510:	6c63203a 	stclvs	0, cr2, [r3], #-232	; 0xffffff18
 8015514:	0d65736f 	stcleq	3, cr7, [r5, #-444]!	; 0xfffffe44
 8015518:	000a0d0a 	andeq	r0, sl, sl, lsl #26
 801551c:	32334447 	eorscc	r4, r3, #1191182336	; 0x47000000
 8015520:	37303246 	ldrcc	r3, [r0, -r6, asr #4]!
 8015524:	 	strvc	r4, [r0], #-1874	; 0xfffff8ae

08015527 <contentType>:
 8015527:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 801552b:	6d74682f 	ldclvs	8, cr6, [r4, #-188]!	; 0xffffff44
 801552f:	0000006c 	andeq	r0, r0, ip, rrx
	...
 8015547:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 801554b:	7373632f 	cmnvc	r3, #-1140850688	; 0xbc000000
	...
 8015567:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 801556b:	76616a2f 	strbtvc	r6, [r1], -pc, lsr #20
 801556f:	72637361 	rsbvc	r7, r3, #-2080374783	; 0x84000001
 8015573:	00747069 	rsbseq	r7, r4, r9, rrx
	...
 8015587:	6c707061 	ldclvs	0, cr7, [r0], #-388	; 0xfffffe7c
 801558b:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
 801558f:	2f6e6f69 	svccs	0x006e6f69
 8015593:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
	...

080155a7 <RemoteConfigConst::PARAMS_DISABLE>:
 80155a7:	61736964 	cmnvs	r3, r4, ror #18
 80155ab:	00656c62 	rsbeq	r6, r5, r2, ror #24

080155af <RemoteConfigConst::PARAMS_FILE_NAME>:
 80155af:	6e6f6372 	mcrvs	3, 3, r6, cr15, cr2, {3}
 80155b3:	2e676966 	vnmulcs.f16	s13, s14, s13	; <UNPREDICTABLE>
 80155b7:	00747874 	rsbseq	r7, r4, r4, ror r8

080155bb <RemoteConfigConst::PARAMS_DISPLAY_NAME>:
 80155bb:	70736964 	rsbsvc	r6, r3, r4, ror #18
 80155bf:	5f79616c 	svcpl	0x0079616c
 80155c3:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

080155c8 <RemoteConfigConst::PARAMS_DISABLE_WRITE>:
 80155c8:	61736964 	cmnvs	r3, r4, ror #18
 80155cc:	5f656c62 	svcpl	0x00656c62
 80155d0:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
 80155d4:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

080155d6 <RemoteConfigConst::PARAMS_ENABLE_REBOOT>:
 80155d6:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 80155da:	725f656c 	subsvc	r6, pc, #108, 10	; 0x1b000000
 80155de:	6f6f6265 	svcvs	0x006f6265
 80155e2:	 	mcrvs	0, 3, r0, cr5, cr4, {3}

080155e4 <RemoteConfigConst::PARAMS_ENABLE_UPTIME>:
 80155e4:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 80155e8:	755f656c 	ldrbvc	r6, [pc, #-1388]	; 8015084 <s_Node+0xac>
 80155ec:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 80155f0:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

080155f2 <RemoteConfigConst::PARAMS_ENABLE_FACTORY>:
 80155f2:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 80155f6:	665f656c 	ldrbvs	r6, [pc], -ip, ror #10
 80155fa:	6f746361 	svcvs	0x00746361
 80155fe:	7b007972 	blvc	8033bce <__exidx_end+0x1bf02>
 8015602:	73696c22 	cmnvc	r9, #8704	; 0x2200
 8015606:	7b3a2274 	blvc	8e9dfde <__exidx_end+0xe86312>
 801560a:	22706922 	rsbscs	r6, r0, #557056	; 0x88000
 801560e:	6425223a 	strtvs	r2, [r5], #-570	; 0xfffffdc6
 8015612:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8015616:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801561a:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 801561e:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 8015622:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8015626:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 801562a:	65646f6e 	strbvs	r6, [r4, #-3950]!	; 0xfffff092
 801562e:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 8015632:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 8015636:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 801563a:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 801563e:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8015642:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 8015646:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 801564a:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 801564e:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 8015652:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 8015656:	253a2274 	ldrcs	r2, [sl, #-628]!	; 0xfffffd8c
 801565a:	7d7d7d64 	ldclvc	13, cr7, [sp, #-400]!	; 0xfffffe70
 801565e:	227b007d 	rsbscs	r0, fp, #125	; 0x7d
 8015662:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8015666:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 801566a:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 801566e:	2c22732a 	stccs	3, cr7, [r2], #-168	; 0xffffff58
 8015672:	616f6222 	cmnvs	pc, r2, lsr #4
 8015676:	3a226472 	bcc	88ae846 <__exidx_end+0x896b7a>
 801567a:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 801567e:	7562222c 	strbvc	r2, [r2, #-556]!	; 0xfffffdd4
 8015682:	22646c69 	rsbcs	r6, r4, #26880	; 0x6900
 8015686:	64227b3a 	strtvs	r7, [r2], #-2874	; 0xfffff4c6
 801568a:	22657461 	rsbcs	r7, r5, #1627389952	; 0x61000000
 801568e:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 8015692:	2c22732a 	stccs	3, cr7, [r2], #-168	; 0xffffff58
 8015696:	6d697422 	cfstrdvs	mvd7, [r9, #-136]!	; 0xffffff78
 801569a:	223a2265 	eorscs	r2, sl, #1342177286	; 0x50000006
 801569e:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
 80156a2:	007d7d22 	rsbseq	r7, sp, r2, lsr #26
 80156a6:	7075227b 	rsbsvc	r2, r5, fp, ror r2
 80156aa:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 80156ae:	75253a22 	strvc	r3, [r5, #-2594]!	; 0xfffff5de
 80156b2:	7b000a7d 	blvc	80180ae <__exidx_end+0x3e2>
 80156b6:	73696422 	cmnvc	r9, #570425344	; 0x22000000
 80156ba:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 80156be:	64253a22 	strtvs	r3, [r5], #-2594	; 0xfffff5de
 80156c2:	227b007d 	rsbscs	r0, fp, #125	; 0x7d
 80156c6:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 80156ca:	7b3a2273 	blvc	8e9e09e <__exidx_end+0xe863d2>
 80156ce:	76656422 	strbtvc	r6, [r5], -r2, lsr #8
 80156d2:	73656369 	cmnvc	r5, #-1543503871	; 0xa4000001
 80156d6:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 80156da:	44223a22 	strtmi	r3, [r2], #-2594	; 0xfffff5de
 80156de:	5020584d 	eorpl	r5, r0, sp, asr #16
 80156e2:	6c657869 	stclvs	8, cr7, [r5], #-420	; 0xfffffe5c
 80156e6:	64222c22 	strtvs	r2, [r2], #-3106	; 0xfffff3de
 80156ea:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
 80156ee:	742e7961 	strtvc	r7, [lr], #-2401	; 0xfffff69f
 80156f2:	3a227478 	bcc	88b28da <__exidx_end+0x89ac0e>
 80156f6:	73694422 	cmnvc	r9, #570425344	; 0x22000000
 80156fa:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 80156fe:	46445520 	strbmi	r5, [r4], -r0, lsr #10
 8015702:	6e222c22 	cdpvs	12, 2, cr2, cr2, cr2, {1}
 8015706:	6f777465 	svcvs	0x00777465
 801570a:	742e6b72 	strtvc	r6, [lr], #-2930	; 0xfffff48e
 801570e:	3a227478 	bcc	88b28f6 <__exidx_end+0x89ac2a>
 8015712:	74654e22 	strbtvc	r4, [r5], #-3618	; 0xfffff1de
 8015716:	6b726f77 	blvs	9cb14fa <__exidx_end+0x1c9982e>
 801571a:	72222c22 	eorvc	r2, r2, #8704	; 0x2200
 801571e:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 8015722:	742e6769 	strtvc	r6, [lr], #-1897	; 0xfffff897
 8015726:	3a227478 	bcc	88b290e <__exidx_end+0x89ac42>
 801572a:	6d655222 	sfmvs	f5, 2, [r5, #-136]!	; 0xffffff78
 801572e:	2065746f 	rsbcs	r7, r5, pc, ror #8
 8015732:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 8015736:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 801573a:	6f697461 	svcvs	0x00697461
 801573e:	7d7d226e 	lfmvc	f2, 2, [sp, #-440]!	; 0xfffffe48
	...

08015743 <index_html>:
 8015743:	4f44213c 	svcmi	0x0044213c
 8015747:	50595443 	subspl	r5, r9, r3, asr #8
 801574b:	74682045 	strbtvc	r2, [r8], #-69	; 0xffffffbb
 801574f:	0a3e6c6d 	beq	8fb090b <__exidx_end+0xf98c3f>
 8015753:	6d74683c 	ldclvs	8, cr6, [r4, #-240]!	; 0xffffff10
 8015757:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
 801575b:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
 801575f:	3c090a3e 			; <UNDEFINED> instruction: 0x3c090a3e
 8015763:	6b6e696c 	blvs	9bafd1b <__exidx_end+0x1b9804f>
 8015767:	6c657220 	sfmvs	f7, 2, [r5], #-128	; 0xffffff80
 801576b:	7473223d 	ldrbtvc	r2, [r3], #-573	; 0xfffffdc3
 801576f:	73656c79 	cmnvc	r5, #30976	; 0x7900
 8015773:	74656568 	strbtvc	r6, [r5], #-1384	; 0xfffffa98
 8015777:	72682022 	rsbvc	r2, r8, #34	; 0x22
 801577b:	223d6665 	eorscs	r6, sp, #105906176	; 0x6500000
 801577f:	6c797473 	cfldrdvs	mvd7, [r9], #-460	; 0xfffffe34
 8015783:	632e7365 			; <UNDEFINED> instruction: 0x632e7365
 8015787:	20227373 	eorcs	r7, r2, r3, ror r3
 801578b:	090a3e2f 	stmdbeq	sl, {r0, r1, r2, r3, r5, r9, sl, fp, ip, sp}
 801578f:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
 8015793:	3c3e656c 	cfldr32cc	mvfx6, [lr], #-432	; 0xfffffe50
 8015797:	7469742f 	strbtvc	r7, [r9], #-1071	; 0xfffffbd1
 801579b:	0a3e656c 	beq	8faed53 <__exidx_end+0xf97087>
 801579f:	65682f3c 	strbvs	r2, [r8, #-3900]!	; 0xfffff0c4
 80157a3:	0a3e6461 	beq	8fae92f <__exidx_end+0xf96c63>
 80157a7:	646f623c 	strbtvs	r6, [pc], #-572	; 80157af <index_html+0x6c>
 80157ab:	090a3e79 	stmdbeq	sl, {r0, r3, r4, r5, r6, r9, sl, fp, ip, sp}
 80157af:	6165683c 	cmnvs	r5, ip, lsr r8
 80157b3:	3e726564 	cdpcc	5, 7, cr6, cr2, cr4, {3}
 80157b7:	206c753c 	rsbcs	r7, ip, ip, lsr r5
 80157bb:	223d6469 	eorscs	r6, sp, #1761607680	; 0x69000000
 80157bf:	694c6469 	stmdbvs	ip, {r0, r3, r5, r6, sl, sp, lr}^
 80157c3:	3e227473 	mcrcc	4, 1, r7, cr2, cr3, {3}
 80157c7:	6c752f3c 	ldclvs	15, cr2, [r5], #-240	; 0xffffff10
 80157cb:	682f3c3e 	stmdavs	pc!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}	; <UNPREDICTABLE>
 80157cf:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 80157d3:	090a3e72 	stmdbeq	sl, {r1, r4, r5, r6, r9, sl, fp, ip, sp}
 80157d7:	3c3e703c 	ldccc	0, cr7, [lr], #-240	; 0xffffff10
 80157db:	656c6573 	strbvs	r6, [ip, #-1395]!	; 0xfffffa8d
 80157df:	69207463 	stmdbvs	r0!, {r0, r1, r5, r6, sl, ip, sp, lr}
 80157e3:	69223d64 	stmdbvs	r2!, {r2, r5, r6, r8, sl, fp, ip, sp}
 80157e7:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
 80157eb:	6f746365 	svcvs	0x00746365
 80157ef:	20227972 	eorcs	r7, r2, r2, ror r9
 80157f3:	68636e6f 	stmdavs	r3!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 80157f7:	65676e61 	strbvs	r6, [r7, #-3681]!	; 0xfffff19f
 80157fb:	6567223d 	strbvs	r2, [r7, #-573]!	; 0xfffffdc3
 80157ff:	78745f74 	ldmdavc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 8015803:	68742874 	ldmdavs	r4!, {r2, r4, r5, r6, fp, sp}^
 8015807:	762e7369 	strtvc	r7, [lr], -r9, ror #6
 801580b:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
 801580f:	3c3e2229 	lfmcc	f2, 4, [lr], #-164	; 0xffffff5c
 8015813:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
 8015817:	3e746365 	cdpcc	3, 7, cr6, cr4, cr5, {3}
 801581b:	3e702f3c 	mrccc	15, 3, r2, cr0, cr12, {1}
 801581f:	743c090a 	ldrtvc	r0, [ip], #-2314	; 0xfffff6f6
 8015823:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
 8015827:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
 801582b:	54646922 	strbtpl	r6, [r4], #-2338	; 0xfffff6de
 801582f:	20227478 	eorcs	r7, r2, r8, ror r4
 8015833:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 8015837:	273d7265 	ldrcs	r7, [sp, -r5, ror #4]!
 801583b:	3c3e2731 	ldccc	7, cr2, [lr], #-196	; 0xffffff3c
 801583f:	6261742f 	rsbvs	r7, r1, #788529152	; 0x2f000000
 8015843:	0a3e656c 	beq	8faedfb <__exidx_end+0xf9712f>
 8015847:	6f663c09 	svcvs	0x00663c09
 801584b:	7265746f 	rsbvc	r7, r5, #1862270976	; 0x6f000000
 801584f:	6c753c3e 	ldclvs	12, cr3, [r5], #-248	; 0xffffff08
 8015853:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
 8015857:	56646922 	strbtpl	r6, [r4], -r2, lsr #18
 801585b:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 801585f:	3e226e6f 	cdpcc	14, 2, cr6, cr2, cr15, {3}
 8015863:	6c752f3c 	ldclvs	15, cr2, [r5], #-240	; 0xffffff10
 8015867:	662f3c3e 			; <UNDEFINED> instruction: 0x662f3c3e
 801586b:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
 801586f:	090a3e72 	stmdbeq	sl, {r1, r4, r5, r6, r9, sl, fp, ip, sp}
 8015873:	7263733c 	rsbvc	r7, r3, #60, 6	; 0xf0000000
 8015877:	20747069 	rsbscs	r7, r4, r9, rrx
 801587b:	3d637273 	sfmcc	f7, 2, [r3, #-460]!	; 0xfffffe34
 801587f:	646e6922 	strbtvs	r6, [lr], #-2338	; 0xfffff6de
 8015883:	6a2e7865 	bvs	8bb3a1f <__exidx_end+0xb9bd53>
 8015887:	3c3e2273 	lfmcc	f2, 4, [lr], #-460	; 0xfffffe34
 801588b:	7263732f 	rsbvc	r7, r3, #-1140850688	; 0xbc000000
 801588f:	3e747069 	cdpcc	0, 7, cr7, cr4, cr9, {3}
 8015893:	622f3c0a 	eorvs	r3, pc, #2560	; 0xa00
 8015897:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 801589b:	682f3c0a 	stmdavs	pc!, {r1, r3, sl, fp, ip, sp}	; <UNPREDICTABLE>
 801589f:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 80158a3:	 	strbtvs	r6, [pc], #-522	; 80158ab <styles_css+0x7>

080158a4 <styles_css>:
 80158a4:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 80158a8:	200a7b20 	andcs	r7, sl, r0, lsr #22
 80158ac:	63616220 	cmnvs	r1, #32, 4
 80158b0:	6f72676b 	svcvs	0x0072676b
 80158b4:	2d646e75 	stclcs	14, cr6, [r4, #-468]!	; 0xfffffe2c
 80158b8:	6f6c6f63 	svcvs	0x006c6f63
 80158bc:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
 80158c0:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
 80158c4:	30322c30 	eorscc	r2, r2, r0, lsr ip
 80158c8:	2930322c 	ldmdbcs	r0!, {r2, r3, r5, r9, ip, sp}
 80158cc:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 80158d0:	6f6c6f63 	svcvs	0x006c6f63
 80158d4:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
 80158d8:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
 80158dc:	202c3535 	eorcs	r3, ip, r5, lsr r5
 80158e0:	2c353532 	cfldr32cs	mvfx3, [r5], #-200	; 0xffffff38
 80158e4:	35353220 	ldrcc	r3, [r5, #-544]!	; 0xfffffde0
 80158e8:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
 80158ec:	6c750a0a 			; <UNDEFINED> instruction: 0x6c750a0a
 80158f0:	200a7b20 	andcs	r7, sl, r0, lsr #22
 80158f4:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 80158f8:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 80158fc:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 8015900:	0a3b7865 	beq	8ef3a9c <__exidx_end+0xedbdd0>
 8015904:	6c0a0a7d 			; <UNDEFINED> instruction: 0x6c0a0a7d
 8015908:	0a7b2069 	beq	9eddab4 <__exidx_end+0x1ec5de8>
 801590c:	696c2020 	stmdbvs	ip!, {r5, sp}^
 8015910:	732d7473 			; <UNDEFINED> instruction: 0x732d7473
 8015914:	656c7974 	strbvs	r7, [ip, #-2420]!	; 0xfffff68c
 8015918:	6f6e203a 	svcvs	0x006e203a
 801591c:	0a3b656e 	beq	8eeeedc <__exidx_end+0xed7210>
 8015920:	616d2020 	cmnvs	sp, r0, lsr #32
 8015924:	6e696772 	mcrvs	7, 3, r6, cr9, cr2, {3}
 8015928:	7031203a 	eorsvc	r2, r1, sl, lsr r0
 801592c:	70352078 	eorsvc	r2, r5, r8, ror r0
 8015930:	7d0a3b78 	vstrvc	d3, [sl, #-480]	; 0xfffffe20
 8015934:	65680a0a 	strbvs	r0, [r8, #-2570]!	; 0xfffff5f6
 8015938:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 801593c:	200a7b20 	andcs	r7, sl, r0, lsr #22
 8015940:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 8015944:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8015948:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 801594c:	0a3b7865 	beq	8ef3ae8 <__exidx_end+0xedbe1c>
 8015950:	6f622020 	svcvs	0x00622020
 8015954:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
 8015958:	6461722d 	strbtvs	r7, [r1], #-557	; 0xfffffdd3
 801595c:	3a737569 	bcc	9cf2f08 <__exidx_end+0x1cdb23c>
 8015960:	78703420 	ldmdavc	r0!, {r5, sl, ip, sp}^
 8015964:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 8015968:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 801596c:	203a7265 	eorscs	r7, sl, r5, ror #4
 8015970:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8015974:	72672064 	rsbvc	r2, r7, #100	; 0x64
 8015978:	31207965 			; <UNDEFINED> instruction: 0x31207965
 801597c:	0a3b7870 	beq	8ef3b44 <__exidx_end+0xedbe78>
 8015980:	660a0a7d 			; <UNDEFINED> instruction: 0x660a0a7d
 8015984:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
 8015988:	0a7b2072 	beq	9eddb58 <__exidx_end+0x1ec5e8c>
 801598c:	69642020 	stmdbvs	r4!, {r5, sp}^
 8015990:	616c7073 	smcvs	50947	; 0xc703
 8015994:	66203a79 			; <UNDEFINED> instruction: 0x66203a79
 8015998:	3b78656c 	blcc	9e2ef50 <__exidx_end+0x1e17284>
 801599c:	6a20200a 	bvs	881d9cc <__exidx_end+0x805d00>
 80159a0:	69747375 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r8, r9, ip, sp, lr}^
 80159a4:	632d7966 			; <UNDEFINED> instruction: 0x632d7966
 80159a8:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
 80159ac:	203a746e 	eorscs	r7, sl, lr, ror #8
 80159b0:	746e6563 	strbtvc	r6, [lr], #-1379	; 0xfffffa9d
 80159b4:	0a3b7265 	beq	8ef2350 <__exidx_end+0xeda684>
 80159b8:	6f622020 	svcvs	0x00622020
 80159bc:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
 80159c0:	6461722d 	strbtvs	r7, [r1], #-557	; 0xfffffdd3
 80159c4:	3a737569 	bcc	9cf2f70 <__exidx_end+0x1cdb2a4>
 80159c8:	78703420 	ldmdavc	r0!, {r5, sl, ip, sp}^
 80159cc:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 80159d0:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 80159d4:	203a7265 	eorscs	r7, sl, r5, ror #4
 80159d8:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 80159dc:	72672064 	rsbvc	r2, r7, #100	; 0x64
 80159e0:	31207965 			; <UNDEFINED> instruction: 0x31207965
 80159e4:	0a3b7870 	beq	8ef3bac <__exidx_end+0xedbee0>
 80159e8:	00000a7d 	andeq	r0, r0, sp, ror sl

080159ec <HttpContent>:
 80159ec:	08015316 	stmdaeq	r1, {r1, r2, r4, r8, r9, ip, lr}
 80159f0:	080158a4 	stmdaeq	r1, {r2, r5, r7, fp, ip, lr}
 80159f4:	08015322 	stmdaeq	r1, {r1, r5, r8, r9, ip, lr}
 80159f8:	08015a04 	stmdaeq	r1, {r2, r9, fp, ip, lr}
 80159fc:	0801530a 	stmdaeq	r1, {r1, r3, r8, r9, ip, lr}
 8015a00:	08015743 	stmdaeq	r1, {r0, r1, r6, r8, r9, sl, ip, lr}

08015a04 <index_js>:
 8015a04:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8015a08:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8015a0c:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8015a10:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 8015a14:	534a7465 	movtpl	r7, #42085	; 0xa465
 8015a18:	6a284e4f 	bvs	8a2935c <__exidx_end+0xa11690>
 8015a1c:	296e6f73 	stmdbcs	lr!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8015a20:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 8015a24:	74656c09 	strbtvc	r6, [r5], #-3081	; 0xfffff3f7
 8015a28:	6c727520 	cfldr64vs	mvdx7, [r2], #-128	; 0xffffff80
 8015a2c:	6a2f273d 	bvs	8bdf728 <__exidx_end+0xbc7a5c>
 8015a30:	2f6e6f73 	svccs	0x006e6f73
 8015a34:	202b2027 	eorcs	r2, fp, r7, lsr #32
 8015a38:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 8015a3c:	09090a3b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r9, fp}
 8015a40:	20797274 	rsbscs	r7, r9, r4, ror r2
 8015a44:	09090a7b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r6, r9, fp}
 8015a48:	656c0909 	strbvs	r0, [ip, #-2313]!	; 0xfffff6f7
 8015a4c:	65722074 	ldrbvs	r2, [r2, #-116]!	; 0xffffff8c
 8015a50:	77613d73 			; <UNDEFINED> instruction: 0x77613d73
 8015a54:	20746961 	rsbscs	r6, r4, r1, ror #18
 8015a58:	63746566 	cmnvs	r4, #427819008	; 0x19800000
 8015a5c:	72752868 	rsbsvc	r2, r5, #104, 16	; 0x680000
 8015a60:	0a3b296c 	beq	8ee0018 <__exidx_end+0xec834c>
 8015a64:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 8015a68:	75746572 	ldrbvc	r6, [r4, #-1394]!	; 0xfffffa8e
 8015a6c:	61206e72 			; <UNDEFINED> instruction: 0x61206e72
 8015a70:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 8015a74:	73657220 	cmnvc	r5, #32, 4
 8015a78:	6f736a2e 	svcvs	0x00736a2e
 8015a7c:	3b29286e 	blcc	8a5fc3c <__exidx_end+0xa47f70>
 8015a80:	7d09090a 	vstrvc.16	s0, [r9, #-20]	; 0xffffffec	; <UNPREDICTABLE>
 8015a84:	74616320 	strbtvc	r6, [r1], #-800	; 0xfffffce0
 8015a88:	28206863 	stmdacs	r0!, {r0, r1, r5, r6, fp, sp, lr}
 8015a8c:	6f727265 	svcvs	0x00727265
 8015a90:	7b202972 	blvc	8820060 <__exidx_end+0x808394>
 8015a94:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8015a98:	6e6f6309 	cdpvs	3, 6, cr6, cr15, cr9, {0}
 8015a9c:	656c6f73 	strbvs	r6, [ip, #-3955]!	; 0xfffff08d
 8015aa0:	676f6c2e 	strbvs	r6, [pc, -lr, lsr #24]!
 8015aa4:	72726528 	rsbsvc	r6, r2, #40, 10	; 0xa000000
 8015aa8:	3b29726f 	blcc	8a7246c <__exidx_end+0xa5a7a0>
 8015aac:	7d09090a 	vstrvc.16	s0, [r9, #-20]	; 0xffffffec	; <UNPREDICTABLE>
 8015ab0:	0a0a7d0a 	beq	82b4ee0 <__exidx_end+0x29d214>
 8015ab4:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8015ab8:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8015abc:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8015ac0:	72206e6f 	eorvc	r6, r0, #1776	; 0x6f0
 8015ac4:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 8015ac8:	73694c72 	cmnvc	r9, #29184	; 0x7200
 8015acc:	20292874 	eorcs	r2, r9, r4, ror r8
 8015ad0:	09090a7b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r6, r9, fp}
 8015ad4:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8015ad8:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8015adc:	6177613d 	cmnvs	r7, sp, lsr r1
 8015ae0:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8015ae4:	534a7465 	movtpl	r7, #42085	; 0xa465
 8015ae8:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8015aec:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8015af0:	0a3b2927 	beq	8edff94 <__exidx_end+0xec82c8>
 8015af4:	6f640909 	svcvs	0x00640909
 8015af8:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 8015afc:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 8015b00:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
 8015b04:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 8015b08:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 8015b0c:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 8015b10:	73694c64 	cmnvc	r9, #100, 24	; 0x6400
 8015b14:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 8015b18:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
 8015b1c:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
 8015b20:	3c223d4c 	stccc	13, cr3, [r2], #-304	; 0xfffffed0
 8015b24:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
 8015b28:	73696c2b 	cmnvc	r9, #11008	; 0x2b00
 8015b2c:	696c2e74 	stmdbvs	ip!, {r2, r4, r5, r6, r9, sl, fp, sp}^
 8015b30:	6e2e7473 	mcrvs	4, 1, r7, cr14, cr3, {3}
 8015b34:	2b656d61 	blcs	99710c0 <__exidx_end+0x19593f4>
 8015b38:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8015ab8 <index_js+0xb4>
 8015b3c:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8015b40:	2b223e69 	blcs	88a54ec <__exidx_end+0x88d820>
 8015b44:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8015b48:	73696c2e 	cmnvc	r9, #11776	; 0x2e00
 8015b4c:	6f6e2e74 	svcvs	0x006e2e74
 8015b50:	742e6564 	strtvc	r6, [lr], #-1380	; 0xfffffa9c
 8015b54:	2b657079 	blcs	9971d40 <__exidx_end+0x195a074>
 8015b58:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8015ad8 <index_js+0xd4>
 8015b5c:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8015b60:	2b223e69 	blcs	88a550c <__exidx_end+0x88d840>
 8015b64:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8015b68:	73696c2e 	cmnvc	r9, #11776	; 0x2e00
 8015b6c:	6f6e2e74 	svcvs	0x006e2e74
 8015b70:	702e6564 	eorvc	r6, lr, r4, ror #10
 8015b74:	2e74726f 	cdpcs	2, 7, cr7, cr4, cr15, {3}
 8015b78:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 8015b7c:	2f3c222b 	svccs	0x003c222b
 8015b80:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
 8015b84:	0a7d0a3b 	beq	9f58478 <__exidx_end+0x1f407ac>
 8015b88:	7973610a 	ldmdbvc	r3!, {r1, r3, r8, sp, lr}^
 8015b8c:	6620636e 	strtvs	r6, [r0], -lr, ror #6
 8015b90:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 8015b94:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 8015b98:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 8015b9c:	69447265 	stmdbvs	r4, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8015ba0:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 8015ba4:	2879726f 	ldmdacs	r9!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
 8015ba8:	0a7b2029 	beq	9eddc54 <__exidx_end+0x1ec5f88>
 8015bac:	6c090909 			; <UNDEFINED> instruction: 0x6c090909
 8015bb0:	64207465 	strtvs	r7, [r0], #-1125	; 0xfffffb9b
 8015bb4:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
 8015bb8:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8015bbc:	6177613d 	cmnvs	r7, sp, lsr r1
 8015bc0:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8015bc4:	534a7465 	movtpl	r7, #42085	; 0xa465
 8015bc8:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8015bcc:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8015bd0:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8015bd4:	3b292779 	blcc	8a5f9c0 <__exidx_end+0xa47cf4>
 8015bd8:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8015bdc:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8015be0:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8015be4:	0a22223d 	beq	889e4e0 <__exidx_end+0x886814>
 8015be8:	6c090909 			; <UNDEFINED> instruction: 0x6c090909
 8015bec:	66207465 	strtvs	r7, [r0], -r5, ror #8
 8015bf0:	6e656c69 	cdpvs	12, 6, cr6, cr5, cr9, {3}
 8015bf4:	73656d61 	cmnvc	r5, #6208	; 0x1840
 8015bf8:	6a624f3d 	bvs	98a98f4 <__exidx_end+0x1891c28>
 8015bfc:	2e746365 	cdpcs	3, 7, cr6, cr4, cr5, {3}
 8015c00:	7379656b 	cmnvc	r9, #448790528	; 0x1ac00000
 8015c04:	72696428 	rsbvc	r6, r9, #40, 8	; 0x28000000
 8015c08:	6f746365 	svcvs	0x00746365
 8015c0c:	225b7972 	subscs	r7, fp, #1867776	; 0x1c8000
 8015c10:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8015c14:	295d2273 	ldmdbcs	sp, {r0, r1, r4, r5, r6, r9, sp}^
 8015c18:	09090a3b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r9, fp}
 8015c1c:	6c696609 	stclvs	6, cr6, [r9], #-36	; 0xffffffdc
 8015c20:	6d616e65 	stclvs	14, cr6, [r1, #-404]!	; 0xfffffe6c
 8015c24:	662e7365 	strtvs	r7, [lr], -r5, ror #6
 8015c28:	6145726f 	cmpvs	r5, pc, ror #4
 8015c2c:	66286863 	strtvs	r6, [r8], -r3, ror #16
 8015c30:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 8015c34:	286e6f69 	stmdacs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 8015c38:	2979656b 	ldmdbcs	r9!, {r0, r1, r3, r5, r6, r8, sl, sp, lr}^
 8015c3c:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 8015c40:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 8015c44:	20726176 	rsbscs	r6, r2, r6, ror r1
 8015c48:	756c6176 	strbvc	r6, [ip, #-374]!	; 0xfffffe8a
 8015c4c:	203d2065 	eorscs	r2, sp, r5, rrx
 8015c50:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8015c54:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8015c58:	66225b79 			; <UNDEFINED> instruction: 0x66225b79
 8015c5c:	73656c69 	cmnvc	r5, #26880	; 0x6900
 8015c60:	6b5b5d22 	blvs	96ed0f0 <__exidx_end+0x16d5424>
 8015c64:	3b5d7965 	blcc	9774200 <__exidx_end+0x175c534>
 8015c68:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8015c6c:	74680909 	strbtvc	r0, [r8], #-2313	; 0xfffff6f7
 8015c70:	3d2b6c6d 	stccc	12, cr6, [fp, #-436]!	; 0xfffffe4c
 8015c74:	706f3c22 	rsbvc	r3, pc, r2, lsr #24
 8015c78:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8015c7c:	6c617620 	stclvs	6, cr7, [r1], #-128	; 0xffffff80
 8015c80:	223d6575 	eorscs	r6, sp, #490733568	; 0x1d400000
 8015c84:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 8015c88:	223e222b 	eorscs	r2, lr, #-1342177278	; 0xb0000002
 8015c8c:	6c61762b 	stclvs	6, cr7, [r1], #-172	; 0xffffff54
 8015c90:	222b6575 	eorcs	r6, fp, #490733568	; 0x1d400000
 8015c94:	706f2f3c 	rsbvc	r2, pc, ip, lsr pc	; <UNPREDICTABLE>
 8015c98:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8015c9c:	0a3b223e 	beq	8ede59c <__exidx_end+0xec68d0>
 8015ca0:	7d090909 	vstrvc.16	s0, [r9, #-18]	; 0xffffffee	; <UNPREDICTABLE>
 8015ca4:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 8015ca8:	6f640909 	svcvs	0x00640909
 8015cac:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 8015cb0:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 8015cb4:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
 8015cb8:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 8015cbc:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 8015cc0:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 8015cc4:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
 8015cc8:	6f746365 	svcvs	0x00746365
 8015ccc:	29227972 	stmdbcs	r2!, {r1, r4, r5, r6, r8, fp, ip, sp, lr}
 8015cd0:	6e6e692e 	vmulvs.f16	s13, s28, s29	; <UNPREDICTABLE>
 8015cd4:	54487265 	strbpl	r7, [r8], #-613	; 0xfffffd9b
 8015cd8:	683d4c4d 	ldmdavs	sp!, {r0, r2, r3, r6, sl, fp, lr}
 8015cdc:	3b6c6d74 	blcc	9b312b4 <__exidx_end+0x1b195e8>
 8015ce0:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8015ce4:	5f746567 	svcpl	0x00746567
 8015ce8:	28747874 	ldmdacs	r4!, {r2, r4, r5, r6, fp, ip, sp, lr}^
 8015cec:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8015cf0:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 8015cf4:	5d305b73 	fldmdbxpl	r0!, {d5-d61}	;@ Deprecated
 8015cf8:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
 8015cfc:	73610a0a 	cmnvc	r1, #40960	; 0xa000
 8015d00:	20636e79 	rsbcs	r6, r3, r9, ror lr
 8015d04:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 8015d08:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8015d0c:	6e657220 	cdpvs	2, 6, cr7, cr5, cr0, {1}
 8015d10:	56726564 	ldrbtpl	r6, [r2], -r4, ror #10
 8015d14:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8015d18:	29286e6f 	stmdbcs	r8!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
 8015d1c:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 8015d20:	74656c09 	strbtvc	r6, [r5], #-3081	; 0xfffff3f7
 8015d24:	72657620 	rsbvc	r7, r5, #32, 12	; 0x2000000
 8015d28:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 8015d2c:	6177613d 	cmnvs	r7, sp, lsr r1
 8015d30:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8015d34:	534a7465 	movtpl	r7, #42085	; 0xa465
 8015d38:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8015d3c:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8015d40:	276e6f69 	strbcs	r6, [lr, -r9, ror #30]!
 8015d44:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 8015d48:	636f6409 	cmnvs	pc, #150994944	; 0x9000000
 8015d4c:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
 8015d50:	65672e74 	strbvs	r2, [r7, #-3700]!	; 0xfffff18c
 8015d54:	656c4574 	strbvs	r4, [ip, #-1396]!	; 0xfffffa8c
 8015d58:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
 8015d5c:	64497942 	strbvs	r7, [r9], #-2370	; 0xfffff6be
 8015d60:	64692228 	strbtvs	r2, [r9], #-552	; 0xfffffdd8
 8015d64:	73726556 	cmnvc	r2, #360710144	; 0x15800000
 8015d68:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 8015d6c:	6e692e29 	cdpvs	14, 6, cr2, cr9, cr9, {1}
 8015d70:	4872656e 	ldmdami	r2!, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^
 8015d74:	3d4c4d54 	stclcc	13, cr4, [ip, #-336]	; 0xfffffeb0
 8015d78:	696c3c22 	stmdbvs	ip!, {r1, r5, sl, fp, ip, sp}^
 8015d7c:	2b22563e 	blcs	88ab67c <__exidx_end+0x8939b0>
 8015d80:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8015d84:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 8015d88:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8015d8c:	2b6e6f69 	blcs	9bb1b38 <__exidx_end+0x1b99e6c>
 8015d90:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8015d10 <index_js+0x30c>
 8015d94:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8015d98:	2b223e69 	blcs	88a5744 <__exidx_end+0x88da78>
 8015d9c:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8015da0:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 8015da4:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
 8015da8:	61642e64 	cmnvs	r4, r4, ror #28
 8015dac:	222b6574 	eorcs	r6, fp, #116, 10	; 0x1d000000
 8015db0:	696c2f3c 	stmdbvs	ip!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 8015db4:	696c3c3e 	stmdbvs	ip!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}^
 8015db8:	762b223e 			; <UNDEFINED> instruction: 0x762b223e
 8015dbc:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8015dc0:	622e6e6f 	eorvs	r6, lr, #1776	; 0x6f0
 8015dc4:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
 8015dc8:	6d69742e 	cfstrdvs	mvd7, [r9, #-184]!	; 0xffffff48
 8015dcc:	3c222b65 			; <UNDEFINED> instruction: 0x3c222b65
 8015dd0:	3e696c2f 	cdpcc	12, 6, cr6, cr9, cr15, {1}
 8015dd4:	3e696c3c 	mcrcc	12, 3, r6, cr9, cr12, {1}
 8015dd8:	65762b22 	ldrbvs	r2, [r6, #-2850]!	; 0xfffff4de
 8015ddc:	6f697372 	svcvs	0x00697372
 8015de0:	6f622e6e 	svcvs	0x00622e6e
 8015de4:	2b647261 	blcs	9932770 <__exidx_end+0x191aaa4>
 8015de8:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8015d68 <index_js+0x364>
 8015dec:	3b223e69 	blcc	88a5798 <__exidx_end+0x88dacc>
 8015df0:	0a0a7d0a 	beq	82b5220 <__exidx_end+0x29d554>
 8015df4:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8015df8:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8015dfc:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8015e00:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 8015e04:	745f7465 	ldrbvc	r7, [pc], #-1125	; 8015e0c <index_js+0x408>
 8015e08:	73287478 			; <UNDEFINED> instruction: 0x73287478
 8015e0c:	20296c65 	eorcs	r6, r9, r5, ror #24
 8015e10:	6c090a7b 			; <UNDEFINED> instruction: 0x6c090a7b
 8015e14:	74207465 	strtvc	r7, [r0], #-1125	; 0xfffffb9b
 8015e18:	613d7478 	teqvs	sp, r8, ror r4
 8015e1c:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 8015e20:	74656720 	strbtvc	r6, [r5], #-1824	; 0xfffff8e0
 8015e24:	4e4f534a 	cdpmi	3, 4, cr5, cr15, cr10, {2}
 8015e28:	6c657328 	stclvs	3, cr7, [r5], #-160	; 0xffffff60
 8015e2c:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 8015e30:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8015e34:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8015e38:	3b22223d 	blcc	889e734 <__exidx_end+0x886a68>
 8015e3c:	624f090a 	subvs	r0, pc, #163840	; 0x28000
 8015e40:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
 8015e44:	79656b2e 	stmdbvc	r5!, {r1, r2, r3, r5, r8, r9, fp, sp, lr}^
 8015e48:	78742873 	ldmdavc	r4!, {r0, r1, r4, r5, r6, fp, sp}^
 8015e4c:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
 8015e50:	2e295d6c 	cdpcs	13, 2, cr5, cr9, cr12, {3}
 8015e54:	45726f66 	ldrbmi	r6, [r2, #-3942]!	; 0xfffff09a
 8015e58:	28686361 	stmdacs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
 8015e5c:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 8015e60:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8015e64:	79656b28 	stmdbvc	r5!, {r3, r5, r8, r9, fp, sp, lr}^
 8015e68:	0a7b2029 	beq	9eddf14 <__exidx_end+0x1ec6248>
 8015e6c:	61760909 	cmnvs	r6, r9, lsl #18
 8015e70:	61762072 	cmnvs	r6, r2, ror r0
 8015e74:	2065756c 	rsbcs	r7, r5, ip, ror #10
 8015e78:	7874203d 	ldmdavc	r4!, {r0, r2, r3, r4, r5, sp}^
 8015e7c:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
 8015e80:	6b5b5d6c 	blvs	96ed438 <__exidx_end+0x16d576c>
 8015e84:	3b5d7965 	blcc	9774420 <__exidx_end+0x175c754>
 8015e88:	2009090a 	andcs	r0, r9, sl, lsl #18
 8015e8c:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8015e90:	3c223d2b 	stccc	13, cr3, [r2], #-172	; 0xffffff54
 8015e94:	3c3e7274 	lfmcc	f7, 4, [lr], #-464	; 0xfffffe30
 8015e98:	223e6474 	eorscs	r6, lr, #116, 8	; 0x74000000
 8015e9c:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 8015ea0:	2f3c222b 	svccs	0x003c222b
 8015ea4:	3c3e6474 	cfldrscc	mvf6, [lr], #-464	; 0xfffffe30
 8015ea8:	223e6474 	eorscs	r6, lr, #116, 8	; 0x74000000
 8015eac:	6c61762b 	stclvs	6, cr7, [r1], #-172	; 0xffffff54
 8015eb0:	222b6575 	eorcs	r6, fp, #490733568	; 0x1d400000
 8015eb4:	64742f3c 	ldrbtvs	r2, [r4], #-3900	; 0xfffff0c4
 8015eb8:	742f3c3e 	strtvc	r3, [pc], #-3134	; 8015ec0 <index_js+0x4bc>
 8015ebc:	3b223e72 	blcc	88a588c <__exidx_end+0x88dbc0>
 8015ec0:	297d090a 	ldmdbcs	sp!, {r1, r3, r8, fp}^
 8015ec4:	64090a3b 	strvs	r0, [r9], #-2619	; 0xfffff5c5
 8015ec8:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
 8015ecc:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 8015ed0:	45746567 	ldrbmi	r6, [r4, #-1383]!	; 0xfffffa99
 8015ed4:	656d656c 	strbvs	r6, [sp, #-1388]!	; 0xfffffa94
 8015ed8:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
 8015edc:	22286449 	eorcs	r6, r8, #1224736768	; 0x49000000
 8015ee0:	78546469 	ldmdavc	r4, {r0, r3, r5, r6, sl, sp, lr}^
 8015ee4:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 8015ee8:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
 8015eec:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
 8015ef0:	74683d4c 	strbtvc	r3, [r8], #-3404	; 0xfffff2b4
 8015ef4:	0a3b6c6d 	beq	8ef10b0 <__exidx_end+0xed93e4>
 8015ef8:	720a0a7d 	andvc	r0, sl, #512000	; 0x7d000
 8015efc:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 8015f00:	73694c72 	cmnvc	r9, #29184	; 0x7200
 8015f04:	3b292874 	blcc	8a600dc <__exidx_end+0xa48410>
 8015f08:	6e65720a 	cdpvs	2, 6, cr7, cr5, cr10, {0}
 8015f0c:	44726564 	ldrbtmi	r6, [r2], #-1380	; 0xfffffa9c
 8015f10:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
 8015f14:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8015f18:	0a3b2928 	beq	8ee03c0 <__exidx_end+0xec86f4>
 8015f1c:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 8015f20:	65567265 	ldrbvs	r7, [r6, #-613]	; 0xfffffd9b
 8015f24:	6f697372 	svcvs	0x00697372
 8015f28:	3b29286e 	blcc	8a600e8 <__exidx_end+0xa4841c>
 8015f2c:	7474680a 	ldrbtvc	r6, [r4], #-2058	; 0xfffff7f6
 8015f30:	2f3a7370 	svccs	0x003a7370
 8015f34:	3364672f 	cmncc	r4, #12320768	; 0xbc0000
 8015f38:	6d642d32 	stclvs	13, cr2, [r4, #-200]!	; 0xffffff38
 8015f3c:	726f2e78 	rsbvc	r2, pc, #120, 28	; 0x780
 8015f40:	44440067 	strbmi	r0, [r4], #-103	; 0xffffff99
 8015f44:	69442050 	stmdbvs	r4, {r4, r6, sp}^
 8015f48:	616c7073 	smcvs	50947	; 0xc703
 8015f4c:	20003a79 	andcs	r3, r0, r9, ror sl
 8015f50:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
 8015f54:	20202074 	eorcs	r2, r0, r4, ror r0
 8015f58:	20202020 	eorcs	r2, r0, r0, lsr #32
 8015f5c:	20202020 	eorcs	r2, r0, r0, lsr #32
 8015f60:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8015f64:	000a7525 	andeq	r7, sl, r5, lsr #10
 8015f68:	61684320 	cmnvs	r8, r0, lsr #6
 8015f6c:	6c656e6e 	stclvs	14, cr6, [r5], #-440	; 0xfffffe48
 8015f70:	65702073 	ldrbvs	r2, [r0, #-115]!	; 0xffffff8d
 8015f74:	69702072 	ldmdbvs	r0!, {r1, r4, r5, r6, sp}^
 8015f78:	3a6c6578 	bcc	9b2f560 <__exidx_end+0x1b17894>
 8015f7c:	0a752520 	beq	9d5f404 <__exidx_end+0x1d47738>
 8015f80:	63412000 	movtvs	r2, #4096	; 0x1000
 8015f84:	65766974 	ldrbvs	r6, [r6, #-2420]!	; 0xfffff68c
 8015f88:	726f7020 	rsbvc	r7, pc, #32
 8015f8c:	20207374 	eorcs	r7, r0, r4, ror r3
 8015f90:	20202020 	eorcs	r2, r0, r0, lsr #32
 8015f94:	7525203a 	strvc	r2, [r5, #-58]!	; 0xffffffc6
 8015f98:	 	rsbscs	r0, fp, #10

08015f9a <json::CONFIG_REPLY>:
 8015f9a:	6f63227b 	svcvs	0x0063227b
 8015f9e:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 8015fa2:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 8015fa6:	3a227069 	bcc	88b2152 <__exidx_end+0x89a486>
 8015faa:	2e642522 	cdpcs	5, 6, cr2, cr4, cr2, {1}
 8015fae:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8015fb2:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8015fb6:	6e222c22 	cdpvs	12, 2, cr2, cr2, cr2, {1}
 8015fba:	223a226d 	eorscs	r2, sl, #-805306362	; 0xd0000006
 8015fbe:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8015fc2:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8015fc6:	2264252e 	rsbcs	r2, r4, #192937984	; 0xb800000
 8015fca:	7767222c 	strbvc	r2, [r7, -ip, lsr #4]!
 8015fce:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8015fd2:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8015fd6:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8015fda:	2c226425 	cfstrscs	mvf6, [r2], #-148	; 0xffffff6c
 8015fde:	726f7022 	rsbvc	r7, pc, #34	; 0x22
 8015fe2:	3a227374 	bcc	88b2dba <__exidx_end+0x89b0ee>
 8015fe6:	70227b5b 	eorvc	r7, r2, fp, asr fp
 8015fea:	2274726f 	rsbscs	r7, r4, #-268435450	; 0xf0000006
 8015fee:	2230223a 	eorscs	r2, r0, #-1610612733	; 0xa0000003
 8015ff2:	7374222c 	cmnvc	r4, #44, 4	; 0xc0000002
 8015ff6:	30223a22 	eorcc	r3, r2, r2, lsr #20
 8015ffa:	6c222c22 	stcvs	12, cr2, [r2], #-136	; 0xffffff78
 8015ffe:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8016002:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 8016006:	3a227373 	bcc	88b2dda <__exidx_end+0x89b10e>
 801600a:	7d223022 	stcvc	0, cr3, [r2, #-136]!	; 0xffffff78
 801600e:	70227b2c 	eorvc	r7, r2, ip, lsr #22
 8016012:	2274726f 	rsbscs	r7, r4, #-268435450	; 0xf0000006
 8016016:	2231223a 	eorscs	r2, r1, #-1610612733	; 0xa0000003
 801601a:	7374222c 	cmnvc	r4, #44, 4	; 0xc0000002
 801601e:	30223a22 	eorcc	r3, r2, r2, lsr #20
 8016022:	6c222c22 	stcvs	12, cr2, [r2], #-136	; 0xffffff78
 8016026:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 801602a:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 801602e:	3a227373 	bcc	88b2e02 <__exidx_end+0x89b136>
 8016032:	7d223022 	stcvc	0, cr3, [r2, #-136]!	; 0xffffff78
 8016036:	70227b2c 	eorvc	r7, r2, ip, lsr #22
 801603a:	2274726f 	rsbscs	r7, r4, #-268435450	; 0xf0000006
 801603e:	2232223a 	eorscs	r2, r2, #-1610612733	; 0xa0000003
 8016042:	7374222c 	cmnvc	r4, #44, 4	; 0xc0000002
 8016046:	30223a22 	eorcc	r3, r2, r2, lsr #20
 801604a:	6c222c22 	stcvs	12, cr2, [r2], #-136	; 0xffffff78
 801604e:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8016052:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 8016056:	3a227373 	bcc	88b2e2a <__exidx_end+0x89b15e>
 801605a:	7d223022 	stcvc	0, cr3, [r2, #-136]!	; 0xffffff78
 801605e:	70227b2c 	eorvc	r7, r2, ip, lsr #22
 8016062:	2274726f 	rsbscs	r7, r4, #-268435450	; 0xf0000006
 8016066:	2233223a 	eorscs	r2, r3, #-1610612733	; 0xa0000003
 801606a:	7374222c 	cmnvc	r4, #44, 4	; 0xc0000002
 801606e:	30223a22 	eorcc	r3, r2, r2, lsr #20
 8016072:	6c222c22 	stcvs	12, cr2, [r2], #-136	; 0xffffff78
 8016076:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 801607a:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 801607e:	3a227373 	bcc	88b2e52 <__exidx_end+0x89b186>
 8016082:	7d223022 	stcvc	0, cr3, [r2, #-136]!	; 0xffffff78
 8016086:	70227b2c 	eorvc	r7, r2, ip, lsr #22
 801608a:	2274726f 	rsbscs	r7, r4, #-268435450	; 0xf0000006
 801608e:	2234223a 	eorscs	r2, r4, #-1610612733	; 0xa0000003
 8016092:	7374222c 	cmnvc	r4, #44, 4	; 0xc0000002
 8016096:	30223a22 	eorcc	r3, r2, r2, lsr #20
 801609a:	6c222c22 	stcvs	12, cr2, [r2], #-136	; 0xffffff78
 801609e:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 80160a2:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 80160a6:	3a227373 	bcc	88b2e7a <__exidx_end+0x89b1ae>
 80160aa:	7d223022 	stcvc	0, cr3, [r2, #-136]!	; 0xffffff78
 80160ae:	70227b2c 	eorvc	r7, r2, ip, lsr #22
 80160b2:	2274726f 	rsbscs	r7, r4, #-268435450	; 0xf0000006
 80160b6:	2235223a 	eorscs	r2, r5, #-1610612733	; 0xa0000003
 80160ba:	7374222c 	cmnvc	r4, #44, 4	; 0xc0000002
 80160be:	30223a22 	eorcc	r3, r2, r2, lsr #20
 80160c2:	6c222c22 	stcvs	12, cr2, [r2], #-136	; 0xffffff78
 80160c6:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 80160ca:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 80160ce:	3a227373 	bcc	88b2ea2 <__exidx_end+0x89b1d6>
 80160d2:	7d223022 	stcvc	0, cr3, [r2, #-136]!	; 0xffffff78
 80160d6:	70227b2c 	eorvc	r7, r2, ip, lsr #22
 80160da:	2274726f 	rsbscs	r7, r4, #-268435450	; 0xf0000006
 80160de:	2236223a 	eorscs	r2, r6, #-1610612733	; 0xa0000003
 80160e2:	7374222c 	cmnvc	r4, #44, 4	; 0xc0000002
 80160e6:	30223a22 	eorcc	r3, r2, r2, lsr #20
 80160ea:	6c222c22 	stcvs	12, cr2, [r2], #-136	; 0xffffff78
 80160ee:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 80160f2:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 80160f6:	3a227373 	bcc	88b2eca <__exidx_end+0x89b1fe>
 80160fa:	7d223022 	stcvc	0, cr3, [r2, #-136]!	; 0xffffff78
 80160fe:	70227b2c 	eorvc	r7, r2, ip, lsr #22
 8016102:	2274726f 	rsbscs	r7, r4, #-268435450	; 0xf0000006
 8016106:	2237223a 	eorscs	r2, r7, #-1610612733	; 0xa0000003
 801610a:	7374222c 	cmnvc	r4, #44, 4	; 0xc0000002
 801610e:	30223a22 	eorcc	r3, r2, r2, lsr #20
 8016112:	6c222c22 	stcvs	12, cr2, [r2], #-136	; 0xffffff78
 8016116:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 801611a:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 801611e:	3a227373 	bcc	88b2ef2 <__exidx_end+0x89b226>
 8016122:	7d223022 	stcvc	0, cr3, [r2, #-136]!	; 0xffffff78
 8016126:	70227b2c 	eorvc	r7, r2, ip, lsr #22
 801612a:	2274726f 	rsbscs	r7, r4, #-268435450	; 0xf0000006
 801612e:	2238223a 	eorscs	r2, r8, #-1610612733	; 0xa0000003
 8016132:	7374222c 	cmnvc	r4, #44, 4	; 0xc0000002
 8016136:	30223a22 	eorcc	r3, r2, r2, lsr #20
 801613a:	6c222c22 	stcvs	12, cr2, [r2], #-136	; 0xffffff78
 801613e:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8016142:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 8016146:	3a227373 	bcc	88b2f1a <__exidx_end+0x89b24e>
 801614a:	7d223022 	stcvc	0, cr3, [r2, #-136]!	; 0xffffff78
 801614e:	70227b2c 	eorvc	r7, r2, ip, lsr #22
 8016152:	2274726f 	rsbscs	r7, r4, #-268435450	; 0xf0000006
 8016156:	2239223a 	eorscs	r2, r9, #-1610612733	; 0xa0000003
 801615a:	7374222c 	cmnvc	r4, #44, 4	; 0xc0000002
 801615e:	30223a22 	eorcc	r3, r2, r2, lsr #20
 8016162:	6c222c22 	stcvs	12, cr2, [r2], #-136	; 0xffffff78
 8016166:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 801616a:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 801616e:	3a227373 	bcc	88b2f42 <__exidx_end+0x89b276>
 8016172:	7d223022 	stcvc	0, cr3, [r2, #-136]!	; 0xffffff78
 8016176:	007d7d5d 	rsbseq	r7, sp, sp, asr sp

0801617a <json::DISCOVER_REPLY>:
 801617a:	7473227b 	ldrbtvc	r2, [r3], #-635	; 0xfffffd85
 801617e:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
 8016182:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 8016186:	226e616d 	rsbcs	r6, lr, #1073741851	; 0x4000001b
 801618a:	7325223a 			; <UNDEFINED> instruction: 0x7325223a
 801618e:	6d222c22 	stcvs	12, cr2, [r2, #-136]!	; 0xffffff78
 8016192:	3a22646f 	bcc	88af356 <__exidx_end+0x89768a>
 8016196:	78695022 	stmdavc	r9!, {r1, r5, ip, lr}^
 801619a:	2c226c65 	stccs	12, cr6, [r2], #-404	; 0xfffffe6c
 801619e:	72657622 	rsbvc	r7, r5, #35651584	; 0x2200000
 80161a2:	31223a22 			; <UNDEFINED> instruction: 0x31223a22
 80161a6:	2c22302e 	stccs	0, cr3, [r2], #-184	; 0xffffff48
 80161aa:	63616d22 	cmnvs	r1, #2176	; 0x880
 80161ae:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 80161b2:	3a78322e 	bcc	9e22a72 <__exidx_end+0x1e0ada6>
 80161b6:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 80161ba:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 80161be:	2e253a78 			; <UNDEFINED> instruction: 0x2e253a78
 80161c2:	253a7832 	ldrcs	r7, [sl, #-2098]!	; 0xfffff7ce
 80161c6:	3a78322e 	bcc	9e22a86 <__exidx_end+0x1e0adba>
 80161ca:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 80161ce:	007d7d22 	rsbseq	r7, sp, r2, lsr #26

080161d2 <json::START>:
 80161d2:	7473227b 	ldrbtvc	r2, [r3], #-635	; 0xfffffd85
 80161d6:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
 80161da:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 80161de:	61647075 	smcvs	18181	; 0x4705
 80161e2:	3a226574 	bcc	88af7ba <__exidx_end+0x897aee>
 80161e6:	61686322 	cmnvs	r8, r2, lsr #6
 80161ea:	2265676e 	rsbcs	r6, r5, #28835840	; 0x1b80000
 80161ee:	7473222c 	ldrbtvc	r2, [r3], #-556	; 0xfffffdd4
 80161f2:	22657461 	rsbcs	r7, r5, #1627389952	; 0x61000000
 80161f6:	7075223a 	rsbsvc	r2, r5, sl, lsr r2
 80161fa:	007d7d22 	rsbseq	r7, sp, r2, lsr #26
 80161fe:	2e393332 	mrccs	3, 1, r3, cr9, cr2, {1}
 8016202:	2e353532 	mrccs	5, 1, r3, cr5, cr2, {1}
 8016206:	2e303532 	mrccs	5, 1, r3, cr0, cr2, {1}
 801620a:	00333331 	eorseq	r3, r3, r1, lsr r3
 801620e:	2e393332 	mrccs	3, 1, r3, cr9, cr2, {1}
 8016212:	2e353532 	mrccs	5, 1, r3, cr5, cr2, {1}
 8016216:	2e303532 	mrccs	5, 1, r3, cr0, cr2, {1}
 801621a:	00343331 	eorseq	r3, r4, r1, lsr r3
 801621e:	50524c4c 	subspl	r4, r2, ip, asr #24
 8016222:	76654420 	strbtvc	r4, [r5], -r0, lsr #8
 8016226:	20656369 	rsbcs	r6, r5, r9, ror #6
 801622a:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 801622e:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 8016232:	6f697461 	svcvs	0x00697461
 8016236:	20000a6e 	andcs	r0, r0, lr, ror #20
 801623a:	74726f50 	ldrbtvc	r6, [r2], #-3920	; 0xfffff0b0
 801623e:	50445520 	subpl	r5, r4, r0, lsr #10
 8016242:	20202020 	eorcs	r2, r0, r0, lsr #32
 8016246:	20202020 	eorcs	r2, r0, r0, lsr #32
 801624a:	20202020 	eorcs	r2, r0, r0, lsr #32
 801624e:	3a202020 	bcc	881e2d6 <__exidx_end+0x80660a>
 8016252:	0a642520 	beq	991f6da <__exidx_end+0x1907a0e>
 8016256:	754d2000 	strbvc	r2, [sp, #-0]
 801625a:	6369746c 	cmnvs	r9, #108, 8	; 0x6c000000
 801625e:	20747361 	rsbscs	r7, r4, r1, ror #6
 8016262:	6e696f6a 	cdpvs	15, 6, cr6, cr9, cr10, {3}
 8016266:	71655220 	cmnvc	r5, r0, lsr #4
 801626a:	74736575 	ldrbtvc	r6, [r3], #-1397	; 0xfffffa8b
 801626e:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8016272:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8016276:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801627a:	000a6425 	andeq	r6, sl, r5, lsr #8
 801627e:	6c754d20 	ldclvs	13, cr4, [r5], #-128	; 0xffffff80
 8016282:	61636974 	smcvs	13972	; 0x3694
 8016286:	52207473 	eorpl	r7, r0, #1929379840	; 0x73000000
 801628a:	6f707365 	svcvs	0x00707365
 801628e:	2065736e 	rsbcs	r7, r5, lr, ror #6
 8016292:	20202020 	eorcs	r2, r0, r0, lsr #32
 8016296:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 801629a:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801629e:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80162a2:	00000a64 	andeq	r0, r0, r4, ror #20
	...

080162a8 <vtable for LLRPDevice>:
	...
 80162b0:	0800b131 	stmdaeq	r0, {r0, r4, r5, r8, ip, sp, pc}
 80162b4:	0800b13b 	stmdaeq	r0, {r0, r1, r3, r4, r5, r8, ip, sp, pc}
 80162b8:	0800b133 	stmdaeq	r0, {r0, r1, r4, r5, r8, ip, sp, pc}
 80162bc:	0800b135 	stmdaeq	r0, {r0, r2, r4, r5, r8, ip, sp, pc}
 80162c0:	0800b137 	stmdaeq	r0, {r0, r1, r2, r4, r5, r8, ip, sp, pc}

080162c4 <RDMNetConst::MSG_CONFIG>:
 80162c4:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 80162c8:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 80162cc:	20676e69 	rsbcs	r6, r7, r9, ror #28
 80162d0:	4e4d4452 	mcrmi	4, 2, r4, cr13, cr2, {2}
 80162d4:	 	andpl	r7, r0, #1694498816	; 0x65000000

080162d7 <RDMNetConst::MSG_STARTED>:
 80162d7:	4e4d4452 	mcrmi	4, 2, r4, cr13, cr2, {2}
 80162db:	73207465 			; <UNDEFINED> instruction: 0x73207465
 80162df:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
 80162e3:	 	movwpl	r6, #1125	; 0x465

080162e6 <RDMNetConst::MSG_START>:
 80162e6:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
 80162ea:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 80162ee:	4d445220 	sfmmi	f5, 2, [r4, #-128]	; 0xffffff80
 80162f2:	0074654e 	rsbseq	r6, r4, lr, asr #10
 80162f6:	4e4d4452 	mcrmi	4, 2, r4, cr13, cr2, {2}
 80162fa:	000a7465 	andeq	r7, sl, r5, ror #8
 80162fe:	44494320 	strbmi	r4, [r9], #-800	; 0xfffffce0
 8016302:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8016306:	52000a73 	andpl	r0, r0, #471040	; 0x73000
 801630a:	52204d44 	eorpl	r4, r0, #68, 26	; 0x1100
 801630e:	6f707365 	svcvs	0x00707365
 8016312:	7265646e 	rsbvc	r6, r5, #1845493760	; 0x6e000000
 8016316:	6e6f6320 	cdpvs	3, 6, cr6, cr15, cr0, {1}
 801631a:	75676966 	strbvc	r6, [r7, #-2406]!	; 0xfffff69a
 801631e:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
 8016322:	000a6e6f 	andeq	r6, sl, pc, ror #28
 8016326:	6f725020 	svcvs	0x00725020
 801632a:	6f636f74 	svcvs	0x00636f74
 801632e:	6556206c 	ldrbvs	r2, [r6, #-108]	; 0xffffff94
 8016332:	6f697372 	svcvs	0x00697372
 8016336:	6425206e 	strtvs	r2, [r5], #-110	; 0xffffff92
 801633a:	0a64252e 	beq	991f7fa <__exidx_end+0x1907b2e>
 801633e:	4d442000 	stclmi	0, cr2, [r4, #-0]
 8016342:	64412058 	strbvs	r2, [r1], #-88	; 0xffffffa8
 8016346:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
 801634a:	20202073 	eorcs	r2, r0, r3, ror r0
 801634e:	3a202020 	bcc	881e3d6 <__exidx_end+0x80670a>
 8016352:	0a642520 	beq	991f7da <__exidx_end+0x1907b0e>
 8016356:	4d442000 	stclmi	0, cr2, [r4, #-0]
 801635a:	6f462058 	svcvs	0x00462058
 801635e:	7270746f 	rsbsvc	r7, r0, #1862270976	; 0x6f000000
 8016362:	20746e69 	rsbscs	r6, r4, r9, ror #28
 8016366:	3a202020 	bcc	881e3ee <__exidx_end+0x806722>
 801636a:	0a642520 	beq	991f7f2 <__exidx_end+0x1907b26>
 801636e:	65502000 	ldrbvs	r2, [r0, #-0]
 8016372:	6e6f7372 	mcrvs	3, 3, r7, cr15, cr2, {3}
 8016376:	74696c61 	strbtvc	r6, [r9], #-3169	; 0xfffff39f
 801637a:	64252079 	strtvs	r2, [r5], #-121	; 0xffffff87
 801637e:	20666f20 	rsbcs	r6, r6, r0, lsr #30
 8016382:	5b206425 	blpl	882f41e <__exidx_end+0x817752>
 8016386:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
 801638a:	20000a5d 	andcs	r0, r0, sp, asr sl
 801638e:	20627553 	rsbcs	r7, r2, r3, asr r5
 8016392:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
 8016396:	20736563 	rsbscs	r6, r3, r3, ror #10
 801639a:	20202020 	eorcs	r2, r0, r0, lsr #32
 801639e:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 80163a2:	20000a64 	andcs	r0, r0, r4, ror #20
 80163a6:	736e6553 	cmnvc	lr, #348127232	; 0x14c00000
 80163aa:	2073726f 	rsbscs	r7, r3, pc, ror #4
 80163ae:	20202020 	eorcs	r2, r0, r0, lsr #32
 80163b2:	20202020 	eorcs	r2, r0, r0, lsr #32
 80163b6:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 80163ba:	00000a64 	andeq	r0, r0, r4, ror #20
	...

080163c0 <vtable for RDMDeviceResponder>:
	...
 80163c8:	0800b625 	stmdaeq	r0, {r0, r2, r5, r9, sl, ip, sp, pc}
 80163cc:	0800b645 	stmdaeq	r0, {r0, r2, r6, r9, sl, ip, sp, pc}
 80163d0:	0800b61f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r9, sl, ip, sp, pc}
 80163d4:	0800b621 	stmdaeq	r0, {r0, r5, r9, sl, ip, sp, pc}

080163d8 <UID_ALL>:
 80163d8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 80163dc:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>

080163e0 <RDMHandler::PID_DEFINITIONS>:
 80163e0:	00000060 	andeq	r0, r0, r0, rrx
 80163e4:	0800bb15 	stmdaeq	r0, {r0, r2, r4, r8, r9, fp, ip, sp, pc}
	...
 80163f4:	01010000 	mrseq	r0, (UNDEF: 1)
 80163f8:	00000080 	andeq	r0, r0, r0, lsl #1
 80163fc:	0800bbfd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, r9, fp, ip, sp, pc}
	...
 801640c:	01010100 	mrseq	r0, (UNDEF: 17)
 8016410:	00000081 	andeq	r0, r0, r1, lsl #1
 8016414:	0800bc19 	stmdaeq	r0, {r0, r3, r4, sl, fp, ip, sp, pc}
	...
 8016424:	01010100 	mrseq	r0, (UNDEF: 17)
 8016428:	00000082 	andeq	r0, r0, r2, lsl #1
 801642c:	0800bc39 	stmdaeq	r0, {r0, r3, r4, r5, sl, fp, ip, sp, pc}
 8016430:	00000000 	andeq	r0, r0, r0
 8016434:	0800bd89 	stmdaeq	r0, {r0, r3, r7, r8, sl, fp, ip, sp, pc}
 8016438:	00000000 	andeq	r0, r0, r0
 801643c:	01010100 	mrseq	r0, (UNDEF: 17)
 8016440:	00000090 	muleq	r0, r0, r0
 8016444:	0800bb7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r8, r9, fp, ip, sp, pc}
 8016448:	00000000 	andeq	r0, r0, r0
 801644c:	0800bd55 	stmdaeq	r0, {r0, r2, r4, r6, r8, sl, fp, ip, sp, pc}
 8016450:	00000000 	andeq	r0, r0, r0
 8016454:	01010100 	mrseq	r0, (UNDEF: 17)
 8016458:	00001000 	andeq	r1, r0, r0
 801645c:	0800bc75 	stmdaeq	r0, {r0, r2, r4, r5, r6, sl, fp, ip, sp, pc}
 8016460:	00000000 	andeq	r0, r0, r0
 8016464:	0800bcd9 	stmdaeq	r0, {r0, r3, r4, r6, r7, sl, fp, ip, sp, pc}
 8016468:	00000000 	andeq	r0, r0, r0
 801646c:	01010000 	mrseq	r0, (UNDEF: 1)
 8016470:	00001001 	andeq	r1, r0, r1
	...
 801647c:	0800bc91 	stmdaeq	r0, {r0, r4, r7, sl, fp, ip, sp, pc}
 8016480:	00000000 	andeq	r0, r0, r0
 8016484:	01010100 	mrseq	r0, (UNDEF: 17)
 8016488:	00000700 	andeq	r0, r0, r0, lsl #14
 801648c:	0800c081 	stmdaeq	r0, {r0, r7, lr, pc}
	...
 801649c:	01000000 	mrseq	r0, (UNDEF: 0)
 80164a0:	00000701 	andeq	r0, r0, r1, lsl #14
 80164a4:	0800c0a9 	stmdaeq	r0, {r0, r3, r5, r7, lr, pc}
	...
 80164b4:	01000004 	tsteq	r0, r4
 80164b8:	00000702 	andeq	r0, r0, r2, lsl #14
 80164bc:	0800c0f5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, lr, pc}
	...
 80164cc:	01000004 	tsteq	r0, r4
 80164d0:	00000703 	andeq	r0, r0, r3, lsl #14
 80164d4:	0800c125 	stmdaeq	r0, {r0, r2, r5, r8, lr, pc}
 80164d8:	00000000 	andeq	r0, r0, r0
 80164dc:	0800c151 	stmdaeq	r0, {r0, r4, r6, r8, lr, pc}
 80164e0:	00000000 	andeq	r0, r0, r0
 80164e4:	01000004 	tsteq	r0, r4
 80164e8:	00000704 	andeq	r0, r0, r4, lsl #14
 80164ec:	0800c1bd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, r8, lr, pc}
 80164f0:	00000000 	andeq	r0, r0, r0
 80164f4:	0800c1ed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, r8, lr, pc}
 80164f8:	00000000 	andeq	r0, r0, r0
 80164fc:	01000004 	tsteq	r0, r4
 8016500:	00000705 	andeq	r0, r0, r5, lsl #14
 8016504:	0800c261 	stmdaeq	r0, {r0, r5, r6, r9, lr, pc}
	...
 8016514:	01000004 	tsteq	r0, r4
 8016518:	00000707 	andeq	r0, r0, r7, lsl #14
	...
 8016524:	0800c235 	stmdaeq	r0, {r0, r2, r4, r5, r9, lr, pc}
 8016528:	00000000 	andeq	r0, r0, r0
 801652c:	01000004 	tsteq	r0, r4
 8016530:	00000706 	andeq	r0, r0, r6, lsl #14
 8016534:	0800c2a9 	stmdaeq	r0, {r0, r3, r5, r7, r9, lr, pc}
 8016538:	00000000 	andeq	r0, r0, r0
 801653c:	0800c2ed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, r9, lr, pc}
 8016540:	00000000 	andeq	r0, r0, r0
 8016544:	01000004 	tsteq	r0, r4
 8016548:	00000709 	andeq	r0, r0, r9, lsl #14
	...
 8016554:	0800c339 	stmdaeq	r0, {r0, r3, r4, r5, r8, r9, lr, pc}
 8016558:	00000000 	andeq	r0, r0, r0
 801655c:	01000004 	tsteq	r0, r4
 8016560:	0000070b 	andeq	r0, r0, fp, lsl #14
 8016564:	0800c199 	stmdaeq	r0, {r0, r3, r4, r7, r8, lr, pc}
	...
 8016574:	01000001 	tsteq	r0, r1
 8016578:	0000070a 	andeq	r0, r0, sl, lsl #14
 801657c:	0800c361 	stmdaeq	r0, {r0, r5, r6, r8, r9, lr, pc}
 8016580:	00000000 	andeq	r0, r0, r0
 8016584:	0800c399 	stmdaeq	r0, {r0, r3, r4, r7, r8, r9, lr, pc}
 8016588:	00000000 	andeq	r0, r0, r0
 801658c:	01000004 	tsteq	r0, r4
 8016590:	0000070c 	andeq	r0, r0, ip, lsl #14
 8016594:	0800c3a1 	stmdaeq	r0, {r0, r5, r7, r8, r9, lr, pc}
 8016598:	00000000 	andeq	r0, r0, r0
 801659c:	0800c3d1 	stmdaeq	r0, {r0, r4, r6, r7, r8, r9, lr, pc}
 80165a0:	00000000 	andeq	r0, r0, r0
 80165a4:	01000000 	mrseq	r0, (UNDEF: 0)
 80165a8:	0000070d 	andeq	r0, r0, sp, lsl #14
 80165ac:	0800c405 	stmdaeq	r0, {r0, r2, sl, lr, pc}
 80165b0:	00000000 	andeq	r0, r0, r0
 80165b4:	0800c435 	stmdaeq	r0, {r0, r2, r4, r5, sl, lr, pc}
 80165b8:	00000000 	andeq	r0, r0, r0
 80165bc:	01000000 	mrseq	r0, (UNDEF: 0)
 80165c0:	204d4452 	subcs	r4, sp, r2, asr r4
 80165c4:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
 80165c8:	63206563 			; <UNDEFINED> instruction: 0x63206563
 80165cc:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 80165d0:	61727567 	cmnvs	r2, r7, ror #10
 80165d4:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 80165d8:	4d20000a 	stcmi	0, cr0, [r0, #-40]!	; 0xffffffd8
 80165dc:	66756e61 	ldrbtvs	r6, [r5], -r1, ror #28
 80165e0:	75746361 	ldrbvc	r6, [r4, #-865]!	; 0xfffffc9f
 80165e4:	20726572 	rsbscs	r6, r2, r2, ror r5
 80165e8:	656d614e 	strbvs	r6, [sp, #-334]!	; 0xfffffeb2
 80165ec:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 80165f0:	0a732a2e 	beq	9ce0eb0 <__exidx_end+0x1cc91e4>
 80165f4:	614d2000 	mrsvs	r2, (UNDEF: 77)
 80165f8:	6166756e 	cmnvs	r6, lr, ror #10
 80165fc:	72757463 	rsbsvc	r7, r5, #1660944384	; 0x63000000
 8016600:	49207265 	stmdbmi	r0!, {r0, r2, r5, r6, r9, ip, sp, lr}
 8016604:	20202044 	eorcs	r2, r0, r4, asr #32
 8016608:	2e25203a 	mcrcs	0, 1, r2, cr5, cr10, {1}
 801660c:	2e255832 	mcrcs	8, 1, r5, cr5, cr2, {1}
 8016610:	000a5832 	andeq	r5, sl, r2, lsr r8
 8016614:	72655320 	rsbvc	r5, r5, #32, 6	; 0x80000000
 8016618:	206c6169 	rsbcs	r6, ip, r9, ror #2
 801661c:	626d754e 	rsbvs	r7, sp, #327155712	; 0x13800000
 8016620:	20207265 	eorcs	r7, r0, r5, ror #4
 8016624:	3a202020 	bcc	881e6ac <__exidx_end+0x8069e0>
 8016628:	322e2520 	eorcc	r2, lr, #32, 10	; 0x8000000
 801662c:	322e2558 	eorcc	r2, lr, #88, 10	; 0x16000000
 8016630:	322e2558 	eorcc	r2, lr, #88, 10	; 0x16000000
 8016634:	322e2558 	eorcc	r2, lr, #88, 10	; 0x16000000
 8016638:	20000a58 	andcs	r0, r0, r8, asr sl
 801663c:	746f6f52 	strbtvc	r6, [pc], #-3922	; 8016644 <RDMHandler::PID_DEFINITIONS+0x264>
 8016640:	62616c20 	rsbvs	r6, r1, #32, 24	; 0x2000
 8016644:	20206c65 	eorcs	r6, r0, r5, ror #24
 8016648:	20202020 	eorcs	r2, r0, r0, lsr #32
 801664c:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8016650:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
 8016654:	5020000a 	eorpl	r0, r0, sl
 8016658:	75646f72 	strbvc	r6, [r4, #-3954]!	; 0xfffff08e
 801665c:	43207463 			; <UNDEFINED> instruction: 0x43207463
 8016660:	67657461 	strbvs	r7, [r5, -r1, ror #8]!
 8016664:	2079726f 	rsbscs	r7, r9, pc, ror #4
 8016668:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 801666c:	2558322e 	ldrbcs	r3, [r8, #-558]	; 0xfffffdd2
 8016670:	0a58322e 	beq	9622f30 <__exidx_end+0x160b264>
 8016674:	72502000 	subsvc	r2, r0, #0
 8016678:	6375646f 	cmnvs	r5, #1862270976	; 0x6f000000
 801667c:	65442074 	strbvs	r2, [r4, #-116]	; 0xffffff8c
 8016680:	6c696174 	stfvse	f6, [r9], #-464	; 0xfffffe30
 8016684:	20202020 	eorcs	r2, r0, r0, lsr #32
 8016688:	2e25203a 	mcrcs	0, 1, r2, cr5, cr10, {1}
 801668c:	2e255832 	mcrcs	8, 1, r5, cr5, cr2, {1}
 8016690:	000a5832 	andeq	r5, sl, r2, lsr r8

08016694 <DEVICE_LABEL>:
 8016694:	32334447 	eorscc	r4, r3, #1191182336	; 0x47000000
 8016698:	37303246 	ldrcc	r3, [r0, -r6, asr #4]!
 801669c:	52204752 	eorpl	r4, r0, #21495808	; 0x1480000
 80166a0:	44204d44 	strtmi	r4, [r0], #-3396	; 0xfffff2bc
 80166a4:	63697665 	cmnvs	r9, #105906176	; 0x6500000
 80166a8:	 	subseq	r0, r0, r5, rrx

080166aa <RDMConst::MANUFACTURER_ID>:
 80166aa:	 	strbtvc	r0, [r8], #-80	; 0xffffffb0

080166ac <RDMConst::MANUFACTURER_NAME>:
 80166ac:	70747468 	rsbsvc	r7, r4, r8, ror #8
 80166b0:	772f2f3a 			; <UNDEFINED> instruction: 0x772f2f3a
 80166b4:	6f2e7777 	svcvs	0x002e7777
 80166b8:	676e6172 			; <UNDEFINED> instruction: 0x676e6172
 80166bc:	2d697065 	stclcs	0, cr7, [r9, #-404]!	; 0xfffffe6c
 80166c0:	2e786d64 	cdpcs	13, 7, cr6, cr8, cr4, {3}
 80166c4:	0067726f 	rsbeq	r7, r7, pc, ror #4
 80166c8:	78383025 	ldmdavc	r8!, {r0, r2, r5, ip, sp}
 80166cc:	3430252d 	ldrtcc	r2, [r0], #-1325	; 0xfffffad3
 80166d0:	30252d78 	eorcc	r2, r5, r8, ror sp
 80166d4:	252d7834 	strcs	r7, [sp, #-2100]!	; 0xfffff7cc
 80166d8:	25783230 	ldrbcs	r3, [r8, #-560]!	; 0xfffffdd0
 80166dc:	2d783230 	lfmcs	f3, 2, [r8, #-192]!	; 0xffffff40
 80166e0:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 80166e4:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 80166e8:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 80166ec:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 80166f0:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 80166f4:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 80166f8:	00000000 	andeq	r0, r0, r0

080166fc <vtable for WS28xxDmxMulti>:
	...
 8016704:	0800c669 	stmdaeq	r0, {r0, r3, r5, r6, r9, sl, lr, pc}
 8016708:	0800c689 	stmdaeq	r0, {r0, r3, r7, r9, sl, lr, pc}
 801670c:	0800c647 	stmdaeq	r0, {r0, r1, r2, r6, r9, sl, lr, pc}
 8016710:	0800c7f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, r9, sl, lr, pc}
 8016714:	0800c6c3 	stmdaeq	r0, {r0, r1, r6, r7, r9, sl, lr, pc}
 8016718:	0800c69b 	stmdaeq	r0, {r0, r1, r3, r4, r7, r9, sl, lr, pc}
 801671c:	0800c7d3 	stmdaeq	r0, {r0, r1, r4, r6, r7, r8, r9, sl, lr, pc}
 8016720:	0800c7eb 	stmdaeq	r0, {r0, r1, r3, r5, r6, r7, r8, r9, sl, lr, pc}
 8016724:	0800c639 	stmdaeq	r0, {r0, r3, r4, r5, r9, sl, lr, pc}
 8016728:	0800c63d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r9, sl, lr, pc}
 801672c:	0800c643 	stmdaeq	r0, {r0, r1, r6, r9, sl, lr, pc}
 8016730:	08011e6b 	stmdaeq	r1, {r0, r1, r3, r5, r6, r9, sl, fp, ip}
 8016734:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 8016738:	2a2e253a 	bcs	8b9fc28 <__exidx_end+0xb87f5c>
 801673c:	23002c66 	movwcs	r2, #3174	; 0xc66
 8016740:	253d7325 	ldrcs	r7, [sp, #-805]!	; 0xfffffcdb
 8016744:	0a662a2e 	beq	99a1004 <__exidx_end+0x1989338>
 8016748:	65643c00 	strbvs	r3, [r4, #-3072]!	; 0xfffff400
 801674c:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
 8016750:	4f003e74 	svcmi	0x00003e74
 8016754:	77726576 			; <UNDEFINED> instruction: 0x77726576
 8016758:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
 801675c:	74616420 	strbtvc	r6, [r1], #-1056	; 0xfffffbe0
 8016760:	65687361 	strbvs	r7, [r8, #-865]!	; 0xfffffc9f
 8016764:	4f007465 	svcmi	0x00007465
 8016768:	77726576 			; <UNDEFINED> instruction: 0x77726576
 801676c:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
 8016770:	6d697420 	cfstrdvs	mvd7, [r9, #-128]!	; 0xffffff80
 8016774:	20676e69 	rsbcs	r6, r7, r9, ror #28
 8016778:	29737528 	ldmdbcs	r3!, {r3, r5, r8, sl, ip, sp, lr}^
 801677c:	6f724700 	svcvs	0x00724700
 8016780:	6e697075 	mcrvs	0, 3, r7, cr9, cr5, {3}
 8016784:	6c430067 	mcrrvs	0, 6, r0, r3, cr7
 8016788:	206b636f 	rsbcs	r6, fp, pc, ror #6
 801678c:	65736162 	ldrbvs	r6, [r3, #-354]!	; 0xfffffe9e
 8016790:	68632064 	stmdavs	r3!, {r2, r5, r6, sp}^
 8016794:	00737069 	rsbseq	r7, r3, r9, rrx
 8016798:	31415041 	cmpcc	r1, r1, asr #32
 801679c:	532f3230 			; <UNDEFINED> instruction: 0x532f3230
 80167a0:	3238394b 	eorscc	r3, r8, #1228800	; 0x12c000
 80167a4:	65540032 	ldrbvs	r0, [r4, #-50]	; 0xffffffce
 80167a8:	70207473 	eorvc	r7, r0, r3, ror r4
 80167ac:	65747461 	ldrbvs	r7, [r4, #-1121]!	; 0xfffffb9f
 80167b0:	50006e72 	andpl	r6, r0, r2, ror lr
 80167b4:	6c657869 	stclvs	8, cr7, [r5], #-420	; 0xfffffe5c
 80167b8:	584d4420 	stmdapl	sp, {r5, sl, lr}^
 80167bc:	6e6f6320 	cdpvs	3, 6, cr6, cr15, cr0, {1}
 80167c0:	75676966 	strbvc	r6, [r7, #-2406]!	; 0xfffff69a
 80167c4:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
 80167c8:	000a6e6f 	andeq	r6, sl, pc, ror #28
 80167cc:	74754f20 	ldrbtvc	r4, [r5], #-3872	; 0xfffff0e0
 80167d0:	73747570 	cmnvc	r4, #112, 10	; 0x1c000000
 80167d4:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 80167d8:	20000a64 	andcs	r0, r0, r4, ror #20
 80167dc:	756f7247 	strbvc	r7, [pc, #-583]!	; 801659d <RDMHandler::PID_DEFINITIONS+0x1bd>
 80167e0:	676e6970 			; <UNDEFINED> instruction: 0x676e6970
 80167e4:	756f6320 	strbvc	r6, [pc, #-800]!	; 80164cc <RDMHandler::PID_DEFINITIONS+0xec>
 80167e8:	3a20746e 	bcc	88339a8 <__exidx_end+0x81bcdc>
 80167ec:	20642520 	rsbcs	r2, r4, r0, lsr #10
 80167f0:	6f72475b 	svcvs	0x0072475b
 80167f4:	20737075 	rsbscs	r7, r3, r5, ror r0
 80167f8:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 80167fc:	59000a5d 	stmdbpl	r0, {r0, r2, r3, r4, r6, r9, fp}
 8016800:	4e007365 	cdpmi	3, 0, cr7, cr0, cr5, {3}
 8016804:	6950006f 	ldmdbvs	r0, {r0, r1, r2, r3, r5, r6}^
 8016808:	206c6578 	rsbcs	r6, ip, r8, ror r5
 801680c:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 8016810:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 8016814:	6f697461 	svcvs	0x00697461
 8016818:	20000a6e 	andcs	r0, r0, lr, ror #20
 801681c:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
 8016820:	20202020 	eorcs	r2, r0, r0, lsr #32
 8016824:	7325203a 			; <UNDEFINED> instruction: 0x7325203a
 8016828:	64255b20 	strtvs	r5, [r5], #-2848	; 0xfffff4e0
 801682c:	20000a5d 	andcs	r0, r0, sp, asr sl
 8016830:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
 8016834:	20202074 	eorcs	r2, r0, r4, ror r0
 8016838:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 801683c:	4d20000a 	stcmi	0, cr0, [r0, #-40]!	; 0xffffffd8
 8016840:	69707061 	ldmdbvs	r0!, {r0, r5, r6, ip, sp, lr}^
 8016844:	3a20676e 	bcc	8830604 <__exidx_end+0x818938>
 8016848:	20732520 	rsbscs	r2, r3, r0, lsr #10
 801684c:	5d64255b 	cfstr64pl	mvdx2, [r4, #-364]!	; 0xfffffe94
 8016850:	5420000a 	strtpl	r0, [r0], #-10
 8016854:	20204830 	eorcs	r4, r0, r0, lsr r8
 8016858:	3a202020 	bcc	881e8e0 <__exidx_end+0x806c14>
 801685c:	322e2520 	eorcc	r2, lr, #32, 10	; 0x8000000
 8016860:	305b2066 	subscc	r2, fp, r6, rrx
 8016864:	5d582578 	cfldr64pl	mvdx2, [r8, #-480]	; 0xfffffe20
 8016868:	5420000a 	strtpl	r0, [r0], #-10
 801686c:	20204831 	eorcs	r4, r0, r1, lsr r8
 8016870:	3a202020 	bcc	881e8f8 <__exidx_end+0x806c2c>
 8016874:	322e2520 	eorcc	r2, lr, #32, 10	; 0x8000000
 8016878:	305b2066 	subscc	r2, fp, r6, rrx
 801687c:	5d582578 	cfldr64pl	mvdx2, [r8, #-480]	; 0xfffffe20
 8016880:	4720000a 	strmi	r0, [r0, -sl]!
 8016884:	61626f6c 	cmnvs	r2, ip, ror #30
 8016888:	6972426c 	ldmdbvs	r2!, {r2, r3, r5, r6, r9, lr}^
 801688c:	6e746867 	cdpvs	8, 7, cr6, cr4, cr7, {3}
 8016890:	3a737365 	bcc	9cf362c <__exidx_end+0x1cdb960>
 8016894:	0a752520 	beq	9d5fd1c <__exidx_end+0x1d48050>
 8016898:	61472000 	mrsvs	r2, (UNDEF: 71)
 801689c:	20616d6d 	rsbcs	r6, r1, sp, ror #26
 80168a0:	72726f63 	rsbsvc	r6, r2, #396	; 0x18c
 80168a4:	69746365 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sp, lr}^
 80168a8:	25206e6f 	strcs	r6, [r0, #-3695]!	; 0xfffff191
 80168ac:	20000a73 	andcs	r0, r0, r3, ror sl
 80168b0:	636f6c43 	cmnvs	pc, #17152	; 0x4300
 80168b4:	25203a6b 	strcs	r3, [r0, #-2667]!	; 0xfffff595
 80168b8:	7a482075 	bvc	921ea94 <__exidx_end+0x1206dc8>
 80168bc:	0000000a 	andeq	r0, r0, sl

080168c0 <CSWTCH.9>:
 80168c0:	08016ad4 	stmdaeq	r1, {r2, r4, r6, r7, r9, fp, sp, lr}
 80168c4:	08016bd4 	stmdaeq	r1, {r2, r4, r6, r7, r8, r9, fp, sp, lr}
 80168c8:	08016cd4 	stmdaeq	r1, {r2, r4, r6, r7, sl, fp, sp, lr}
 80168cc:	08016dd4 	stmdaeq	r1, {r2, r4, r6, r7, r8, sl, fp, sp, lr}
 80168d0:	08016ed4 	stmdaeq	r1, {r2, r4, r6, r7, r9, sl, fp, sp, lr}

080168d4 <gamma10_0>:
 80168d4:	03020100 	movweq	r0, #8448	; 0x2100
 80168d8:	07060504 	streq	r0, [r6, -r4, lsl #10]
 80168dc:	0b0a0908 	bleq	8298d04 <__exidx_end+0x281038>
 80168e0:	0f0e0d0c 	svceq	0x000e0d0c
 80168e4:	13121110 	tstne	r2, #16, 2
 80168e8:	17161514 			; <UNDEFINED> instruction: 0x17161514
 80168ec:	1b1a1918 	blne	869cd54 <__exidx_end+0x685088>
 80168f0:	1f1e1d1c 	svcne	0x001e1d1c
 80168f4:	23222120 			; <UNDEFINED> instruction: 0x23222120
 80168f8:	27262524 	strcs	r2, [r6, -r4, lsr #10]!
 80168fc:	2b2a2928 	blcs	8aa0da4 <__exidx_end+0xa890d8>
 8016900:	2f2e2d2c 	svccs	0x002e2d2c
 8016904:	33323130 	teqcc	r2, #48, 2
 8016908:	37363534 			; <UNDEFINED> instruction: 0x37363534
 801690c:	3b3a3938 	blcc	8ea4df4 <__exidx_end+0xe8d128>
 8016910:	3f3e3d3c 	svccc	0x003e3d3c
 8016914:	43424140 	movtmi	r4, #8512	; 0x2140
 8016918:	47464544 	strbmi	r4, [r6, -r4, asr #10]
 801691c:	4b4a4948 	blmi	92a8e44 <__exidx_end+0x1291178>
 8016920:	4f4e4d4c 	svcmi	0x004e4d4c
 8016924:	53525150 	cmppl	r2, #80, 2
 8016928:	57565554 			; <UNDEFINED> instruction: 0x57565554
 801692c:	5b5a5958 	blpl	96ace94 <__exidx_end+0x16951c8>
 8016930:	5f5e5d5c 	svcpl	0x005e5d5c
 8016934:	63626160 	cmnvs	r2, #96, 2
 8016938:	67666564 	strbvs	r6, [r6, -r4, ror #10]!
 801693c:	6b6a6968 	blvs	9ab0ee4 <__exidx_end+0x1a99218>
 8016940:	6f6e6d6c 	svcvs	0x006e6d6c
 8016944:	73727170 	cmnvc	r2, #112, 2
 8016948:	77767574 			; <UNDEFINED> instruction: 0x77767574
 801694c:	7b7a7978 	blvc	9eb4f34 <__exidx_end+0x1e9d268>
 8016950:	7f7e7d7c 	svcvc	0x007e7d7c
 8016954:	83828180 	orrhi	r8, r2, #128, 2
 8016958:	87868584 	strhi	r8, [r6, r4, lsl #11]
 801695c:	8b8a8988 	blhi	62b8f84 <__stack_size+0x62b6784>
 8016960:	8f8e8d8c 	svchi	0x008e8d8c
 8016964:	93929190 	orrsls	r9, r2, #144, 2	; 0x24
 8016968:	97969594 			; <UNDEFINED> instruction: 0x97969594
 801696c:	9b9a9998 	blls	66bcfd4 <__stack_size+0x66ba7d4>
 8016970:	9f9e9d9c 	svcls	0x009e9d9c
 8016974:	a3a2a1a0 			; <UNDEFINED> instruction: 0xa3a2a1a0
 8016978:	a7a6a5a4 	strge	sl, [r6, r4, lsr #11]!
 801697c:	abaaa9a8 	blge	6ac1024 <__stack_size+0x6abe824>
 8016980:	afaeadac 	svcge	0x00aeadac
 8016984:	b3b2b1b0 			; <UNDEFINED> instruction: 0xb3b2b1b0
 8016988:	b7b6b5b4 			; <UNDEFINED> instruction: 0xb7b6b5b4
 801698c:	bbbab9b8 	bllt	6ec5074 <__stack_size+0x6ec2874>
 8016990:	bfbebdbc 	svclt	0x00bebdbc
 8016994:	c3c2c1c0 	bicgt	ip, r2, #192, 2	; 0x30
 8016998:	c7c6c5c4 	strbgt	ip, [r6, r4, asr #11]
 801699c:	cbcac9c8 	blgt	72c90c4 <__stack_size+0x72c68c4>
 80169a0:	cfcecdcc 	svcgt	0x00cecdcc
 80169a4:	d3d2d1d0 	bicsle	sp, r2, #208, 2	; 0x34
 80169a8:	d7d6d5d4 			; <UNDEFINED> instruction: 0xd7d6d5d4
 80169ac:	dbdad9d8 	blle	76cd114 <__stack_size+0x76ca914>
 80169b0:	dfdedddc 	svcle	0x00dedddc
 80169b4:	e3e2e1e0 	mvn	lr, #224, 2	; 0x38
 80169b8:	e7e6e5e4 	strb	lr, [r6, r4, ror #11]!
 80169bc:	ebeae9e8 	bl	7ad1164 <__stack_size+0x7ace964>
 80169c0:	efeeedec 	svc	0x00eeedec
 80169c4:	f3f2f1f0 	vsra.u64	<illegal reg q15.5>, q8, #14
 80169c8:	f7f6f5f4 			; <UNDEFINED> instruction: 0xf7f6f5f4
 80169cc:	fbfaf9f8 	blx	7ed51b6 <__stack_size+0x7ed29b6>
 80169d0:	fffefdfc 			; <UNDEFINED> instruction: 0xfffefdfc

080169d4 <gamma20_0>:
	...
 80169e0:	01010101 	tsteq	r1, r1, lsl #2
 80169e4:	01010101 	tsteq	r1, r1, lsl #2
 80169e8:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 80169ec:	03030202 	movweq	r0, #12802	; 0x3202
 80169f0:	04040303 	streq	r0, [r4], #-771	; 0xfffffcfd
 80169f4:	05050404 	streq	r0, [r5, #-1028]	; 0xfffffbfc
 80169f8:	06060505 	streq	r0, [r6], -r5, lsl #10
 80169fc:	07070706 	streq	r0, [r7, -r6, lsl #14]
 8016a00:	09080808 	stmdbeq	r8, {r3, fp}
 8016a04:	0a0a0909 	beq	8298e30 <__exidx_end+0x281164>
 8016a08:	0c0b0b0b 			; <UNDEFINED> instruction: 0x0c0b0b0b
 8016a0c:	0e0d0d0c 	cdpeq	13, 0, cr0, cr13, cr12, {0}
 8016a10:	100f0f0e 	andne	r0, pc, lr, lsl #30
 8016a14:	12111110 	andsne	r1, r1, #16, 2
 8016a18:	14131312 	ldrne	r1, [r3], #-786	; 0xfffffcee
 8016a1c:	16151514 			; <UNDEFINED> instruction: 0x16151514
 8016a20:	18181717 	ldmdane	r8, {r0, r1, r2, r4, r8, r9, sl, ip}
 8016a24:	1b1a1a19 	blne	869d290 <__exidx_end+0x6855c4>
 8016a28:	1e1d1c1c 	mrcne	12, 0, r1, cr13, cr12, {0}
 8016a2c:	20201f1e 	eorcs	r1, r0, lr, lsl pc
 8016a30:	23232221 			; <UNDEFINED> instruction: 0x23232221
 8016a34:	26262524 	strtcs	r2, [r6], -r4, lsr #10
 8016a38:	2a292827 	bcs	8a60adc <__exidx_end+0xa48e10>
 8016a3c:	2d2c2b2a 	vstmdbcs	ip!, {d2-d22}
 8016a40:	302f2f2e 	eorcc	r2, pc, lr, lsr #30
 8016a44:	34333231 	ldrtcc	r3, [r3], #-561	; 0xfffffdcf
 8016a48:	38373635 	ldmdacc	r7!, {r0, r2, r4, r5, r9, sl, ip, sp}
 8016a4c:	3b3a3938 	blcc	8ea4f34 <__exidx_end+0xe8d268>
 8016a50:	3f3e3d3c 	svccc	0x003e3d3c
 8016a54:	43424140 	movtmi	r4, #8512	; 0x2140
 8016a58:	47464544 	strbmi	r4, [r6, -r4, asr #10]
 8016a5c:	4c4b4a49 	mcrrmi	10, 4, r4, fp, cr9
 8016a60:	504f4e4d 	subpl	r4, pc, sp, asr #28
 8016a64:	55545251 	ldrbpl	r5, [r4, #-593]	; 0xfffffdaf
 8016a68:	59585756 	ldmdbpl	r8, {r1, r2, r4, r6, r8, r9, sl, ip, lr}^
 8016a6c:	5e5d5c5b 	mrcpl	12, 2, r5, cr13, cr11, {2}
 8016a70:	6362615f 	cmnvs	r2, #-1073741801	; 0xc0000017
 8016a74:	68676664 	stmdavs	r7!, {r2, r5, r6, r9, sl, sp, lr}^
 8016a78:	6d6c6b69 	fstmdbxvs	ip!, {d22-d73}	;@ Deprecated
 8016a7c:	7371706f 	cmnvc	r1, #111	; 0x6f
 8016a80:	78777574 	ldmdavc	r7!, {r2, r4, r5, r6, r8, sl, ip, sp, lr}^
 8016a84:	7e7c7b79 	vmovvc.s8	r7, d12[7]
 8016a88:	8382807f 	orrhi	r8, r2, #127	; 0x7f
 8016a8c:	89888685 	stmibhi	r8, {r0, r2, r7, r9, sl, pc}
 8016a90:	8f8e8c8b 	svchi	0x008e8c8b
 8016a94:	95949291 	ldrls	r9, [r4, #657]	; 0x291
 8016a98:	9b9a9897 	blls	66bccfc <__stack_size+0x66ba4fc>
 8016a9c:	a2a09e9d 	adcge	r9, r0, #2512	; 0x9d0
 8016aa0:	a8a6a5a3 	stmiage	r6!, {r0, r1, r5, r7, r8, sl, sp, pc}
 8016aa4:	afadabaa 	svcge	0x00adabaa
 8016aa8:	b5b4b2b0 	ldrlt	fp, [r4, #688]!	; 0x2b0
 8016aac:	bcbab9b7 			; <UNDEFINED> instruction: 0xbcbab9b7
 8016ab0:	c3c1c0be 	bicgt	ip, r1, #190	; 0xbe
 8016ab4:	cac8c7c5 	bgt	72489d0 <__stack_size+0x72461d0>
 8016ab8:	d1cfcecc 	bicle	ip, pc, ip, asr #29
 8016abc:	d9d7d5d3 	ldmible	r7, {r0, r1, r4, r6, r7, r8, sl, ip, lr, pc}^
 8016ac0:	e0dedcda 	ldrsb	sp, [lr], #202	; 0xca
 8016ac4:	e8e6e4e2 	stmia	r6!, {r1, r5, r6, r7, sl, sp, lr, pc}^
 8016ac8:	efedebe9 	svc	0x00edebe9
 8016acc:	f7f5f3f1 			; <UNDEFINED> instruction: 0xf7f5f3f1
 8016ad0:	fffdfbf9 			; <UNDEFINED> instruction: 0xfffdfbf9

08016ad4 <gamma21_0>:
	...
 8016ae0:	01010000 	mrseq	r0, (UNDEF: 1)
 8016ae4:	01010101 	tsteq	r1, r1, lsl #2
 8016ae8:	02010101 	andeq	r0, r1, #1073741824	; 0x40000000
 8016aec:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 8016af0:	03030302 	movweq	r0, #13058	; 0x3302
 8016af4:	04040303 	streq	r0, [r4], #-771	; 0xfffffcfd
 8016af8:	05050404 	streq	r0, [r5, #-1028]	; 0xfffffbfc
 8016afc:	06060505 	streq	r0, [r6], -r5, lsl #10
 8016b00:	07070706 	streq	r0, [r7, -r6, lsl #14]
 8016b04:	09080808 	stmdbeq	r8, {r3, fp}
 8016b08:	0a0a0909 	beq	8298f34 <__exidx_end+0x281268>
 8016b0c:	0c0b0b0b 			; <UNDEFINED> instruction: 0x0c0b0b0b
 8016b10:	0e0d0d0c 	cdpeq	13, 0, cr0, cr13, cr12, {0}
 8016b14:	0f0f0e0e 	svceq	0x000f0e0e
 8016b18:	11111010 	tstne	r1, r0, lsl r0
 8016b1c:	14131212 	ldrne	r1, [r3], #-530	; 0xfffffdee
 8016b20:	16151514 			; <UNDEFINED> instruction: 0x16151514
 8016b24:	18181716 	ldmdane	r8, {r1, r2, r4, r8, r9, sl, ip}
 8016b28:	1b1a1919 	blne	869cf94 <__exidx_end+0x6852c8>
 8016b2c:	1d1d1c1b 	ldcne	12, cr1, [sp, #-108]	; 0xffffff94
 8016b30:	201f1f1e 	andscs	r1, pc, lr, lsl pc	; <UNPREDICTABLE>
 8016b34:	23222121 			; <UNDEFINED> instruction: 0x23222121
 8016b38:	26252424 	strtcs	r2, [r5], -r4, lsr #8
 8016b3c:	29282827 	stmdbcs	r8!, {r0, r1, r2, r5, fp, sp}
 8016b40:	2c2c2b2a 			; <UNDEFINED> instruction: 0x2c2c2b2a
 8016b44:	302f2e2d 	eorcc	r2, pc, sp, lsr #28
 8016b48:	33333231 	teqcc	r3, #268435459	; 0x10000003
 8016b4c:	37363534 			; <UNDEFINED> instruction: 0x37363534
 8016b50:	3b3a3938 	blcc	8ea5038 <__exidx_end+0xe8d36c>
 8016b54:	3f3e3d3c 	svccc	0x003e3d3c
 8016b58:	43424140 	movtmi	r4, #8512	; 0x2140
 8016b5c:	47464544 	strbmi	r4, [r6, -r4, asr #10]
 8016b60:	4c4b4948 	mcrrmi	9, 4, r4, fp, cr8	; <UNPREDICTABLE>
 8016b64:	504f4e4d 	subpl	r4, pc, sp, asr #28
 8016b68:	55545351 	ldrbpl	r5, [r4, #-849]	; 0xfffffcaf
 8016b6c:	5a585756 	bpl	962c8cc <__exidx_end+0x1614c00>
 8016b70:	5f5d5c5b 	svcpl	0x005d5c5b
 8016b74:	64626160 	strbtvs	r6, [r2], #-352	; 0xfffffea0
 8016b78:	69686665 	stmdbvs	r8!, {r0, r2, r5, r6, r9, sl, sp, lr}^
 8016b7c:	6e6d6b6a 	vnmulvs.f64	d22, d13, d26
 8016b80:	74727170 	ldrbtvc	r7, [r2], #-368	; 0xfffffe90
 8016b84:	79787675 	ldmdbvc	r8!, {r0, r2, r4, r5, r6, r9, sl, ip, sp, lr}^
 8016b88:	7f7e7c7b 	svcvc	0x007e7c7b
 8016b8c:	85838281 	strhi	r8, [r3, #641]	; 0x281
 8016b90:	8b898886 	blhi	6278db0 <__stack_size+0x62765b0>
 8016b94:	91908e8d 	orrsls	r8, r0, sp, lsl #29
 8016b98:	97969493 			; <UNDEFINED> instruction: 0x97969493
 8016b9c:	9e9c9b99 	vmovls.32	r9, d28[0]
 8016ba0:	a5a3a1a0 	strge	sl, [r3, #416]!	; 0x1a0
 8016ba4:	abaaa8a6 	blge	6ac0e44 <__stack_size+0x6abe644>
 8016ba8:	b2b0afad 	adcslt	sl, r0, #692	; 0x2b4
 8016bac:	b9b7b6b4 	ldmiblt	r7!, {r2, r4, r5, r7, r9, sl, ip, sp, pc}
 8016bb0:	c0bfbdbb 	ldrhtgt	fp, [pc], fp
 8016bb4:	c8c6c4c2 	stmiagt	r6, {r1, r6, r7, sl, lr, pc}^
 8016bb8:	cfcdcbca 	svcgt	0x00cdcbca
 8016bbc:	d7d5d3d1 			; <UNDEFINED> instruction: 0xd7d5d3d1
 8016bc0:	dfdddbd9 	svcle	0x00dddbd9
 8016bc4:	e6e4e2e1 	strbt	lr, [r4], r1, ror #5
 8016bc8:	eeeceae8 	vfms.f32	s29, s25, s17
 8016bcc:	f7f5f3f1 			; <UNDEFINED> instruction: 0xf7f5f3f1
 8016bd0:	fffdfbf9 			; <UNDEFINED> instruction: 0xfffdfbf9

08016bd4 <gamma22_0>:
	...
 8016be0:	01000000 	mrseq	r0, (UNDEF: 0)
 8016be4:	01010101 	tsteq	r1, r1, lsl #2
 8016be8:	01010101 	tsteq	r1, r1, lsl #2
 8016bec:	02020201 	andeq	r0, r2, #268435456	; 0x10000000
 8016bf0:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 8016bf4:	03030303 	movweq	r0, #13059	; 0x3303
 8016bf8:	04040403 	streq	r0, [r4], #-1027	; 0xfffffbfd
 8016bfc:	05050504 	streq	r0, [r5, #-1284]	; 0xfffffafc
 8016c00:	06060605 	streq	r0, [r6], -r5, lsl #12
 8016c04:	07070706 	streq	r0, [r7, -r6, lsl #14]
 8016c08:	09080808 	stmdbeq	r8, {r3, fp}
 8016c0c:	0a0a0909 	beq	8299038 <__exidx_end+0x28136c>
 8016c10:	0c0b0b0b 			; <UNDEFINED> instruction: 0x0c0b0b0b
 8016c14:	0d0d0d0c 	stceq	13, cr0, [sp, #-48]	; 0xffffffd0
 8016c18:	0f0f0e0e 	svceq	0x000f0e0e
 8016c1c:	11111010 	tstne	r1, r0, lsl r0
 8016c20:	13131212 	tstne	r3, #536870913	; 0x20000001
 8016c24:	16151414 			; <UNDEFINED> instruction: 0x16151414
 8016c28:	18171716 	ldmdane	r7, {r1, r2, r4, r8, r9, sl, ip}
 8016c2c:	1a1a1919 	bne	869d098 <__exidx_end+0x6853cc>
 8016c30:	1d1c1c1b 	ldcne	12, cr1, [ip, #-108]	; 0xffffff94
 8016c34:	201f1e1e 	andscs	r1, pc, lr, lsl lr	; <UNPREDICTABLE>
 8016c38:	23222121 			; <UNDEFINED> instruction: 0x23222121
 8016c3c:	26252423 	strtcs	r2, [r5], -r3, lsr #8
 8016c40:	29282727 	stmdbcs	r8!, {r0, r1, r2, r5, r8, r9, sl, sp}
 8016c44:	2c2b2b2a 			; <UNDEFINED> instruction: 0x2c2b2b2a
 8016c48:	302f2e2d 	eorcc	r2, pc, sp, lsr #28
 8016c4c:	33323131 	teqcc	r2, #1073741836	; 0x4000000c
 8016c50:	37363534 			; <UNDEFINED> instruction: 0x37363534
 8016c54:	3b3a3938 	blcc	8ea513c <__exidx_end+0xe8d470>
 8016c58:	3f3e3d3c 	svccc	0x003e3d3c
 8016c5c:	43424140 	movtmi	r4, #8512	; 0x2140
 8016c60:	47464544 	strbmi	r4, [r6, -r4, asr #10]
 8016c64:	4c4b4a49 	mcrrmi	10, 4, r4, fp, cr9
 8016c68:	514f4e4d 	cmppl	pc, sp, asr #28
 8016c6c:	55545352 	ldrbpl	r5, [r4, #-850]	; 0xfffffcae
 8016c70:	5a595857 	bpl	966cdd4 <__exidx_end+0x1655108>
 8016c74:	5f5e5d5b 	svcpl	0x005e5d5b
 8016c78:	64636261 	strbtvs	r6, [r3], #-609	; 0xfffffd9f
 8016c7c:	6a696766 	bvs	9a70a1c <__exidx_end+0x1a58d50>
 8016c80:	6f6e6d6b 	svcvs	0x006e6d6b
 8016c84:	75747271 	ldrbvc	r7, [r4, #-625]!	; 0xfffffd8f
 8016c88:	7b797877 	blvc	9e74e6c <__exidx_end+0x1e5d1a0>
 8016c8c:	817f7e7c 	cmnhi	pc, ip, ror lr	; <UNPREDICTABLE>
 8016c90:	87858482 	strhi	r8, [r5, r2, lsl #9]
 8016c94:	8d8c8a89 	vstrhi	s16, [ip, #548]	; 0x224
 8016c98:	9492918f 	ldrls	r9, [r2], #399	; 0x18f
 8016c9c:	9a999795 	bls	667caf8 <__stack_size+0x667a2f8>
 8016ca0:	a19f9e9c 			; <UNDEFINED> instruction: 0xa19f9e9c
 8016ca4:	a8a6a5a3 	stmiage	r6!, {r0, r1, r5, r7, r8, sl, sp, pc}
 8016ca8:	afadacaa 	svcge	0x00adacaa
 8016cac:	b6b5b3b1 			; <UNDEFINED> instruction: 0xb6b5b3b1
 8016cb0:	bebcbab8 			; <UNDEFINED> instruction: 0xbebcbab8
 8016cb4:	c5c4c2c0 	strbgt	ip, [r4, #704]	; 0x2c0
 8016cb8:	cdcbc9c7 	vstrgt.16	s25, [fp, #398]	; 0x18e	; <UNPREDICTABLE>
 8016cbc:	d5d3d1cf 	ldrble	sp, [r3, #463]	; 0x1cf
 8016cc0:	dddbd9d7 	vldrle.16	s27, [fp, #430]	; 0x1ae	; <UNPREDICTABLE>
 8016cc4:	e5e3e1df 	strb	lr, [r3, #479]!	; 0x1df
 8016cc8:	eeeceae7 	vfms.f32	s29, s25, s15
 8016ccc:	f6f4f2f0 			; <UNDEFINED> instruction: 0xf6f4f2f0
 8016cd0:	fffdfbf8 			; <UNDEFINED> instruction: 0xfffdfbf8

08016cd4 <gamma23_0>:
	...
 8016ce4:	01010100 	mrseq	r0, (UNDEF: 17)
 8016ce8:	01010101 	tsteq	r1, r1, lsl #2
 8016cec:	01010101 	tsteq	r1, r1, lsl #2
 8016cf0:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 8016cf4:	03020202 	movweq	r0, #8706	; 0x2202
 8016cf8:	03030303 	movweq	r0, #13059	; 0x3303
 8016cfc:	04040404 	streq	r0, [r4], #-1028	; 0xfffffbfc
 8016d00:	05050504 	streq	r0, [r5, #-1284]	; 0xfffffafc
 8016d04:	06060605 	streq	r0, [r6], -r5, lsl #12
 8016d08:	07070707 	streq	r0, [r7, -r7, lsl #14]
 8016d0c:	09080808 	stmdbeq	r8, {r3, fp}
 8016d10:	0a0a0a09 	beq	829953c <__exidx_end+0x281870>
 8016d14:	0c0b0b0b 			; <UNDEFINED> instruction: 0x0c0b0b0b
 8016d18:	0d0d0d0c 	stceq	13, cr0, [sp, #-48]	; 0xffffffd0
 8016d1c:	0f0f0e0e 	svceq	0x000f0e0e
 8016d20:	11111010 	tstne	r1, r0, lsl r0
 8016d24:	13131212 	tstne	r3, #536870913	; 0x20000001
 8016d28:	15151414 	ldrne	r1, [r5, #-1044]	; 0xfffffbec
 8016d2c:	18171716 	ldmdane	r7, {r1, r2, r4, r8, r9, sl, ip}
 8016d30:	1a1a1918 	bne	869d198 <__exidx_end+0x6854cc>
 8016d34:	1d1c1c1b 	ldcne	12, cr1, [ip, #-108]	; 0xffffff94
 8016d38:	201f1e1e 	andscs	r1, pc, lr, lsl lr	; <UNPREDICTABLE>
 8016d3c:	23222120 			; <UNDEFINED> instruction: 0x23222120
 8016d40:	26252423 	strtcs	r2, [r5], -r3, lsr #8
 8016d44:	29282726 	stmdbcs	r8!, {r1, r2, r5, r8, r9, sl, sp}
 8016d48:	2c2b2a2a 			; <UNDEFINED> instruction: 0x2c2b2a2a
 8016d4c:	302f2e2d 	eorcc	r2, pc, sp, lsr #28
 8016d50:	33323131 	teqcc	r2, #1073741836	; 0x4000000c
 8016d54:	37363534 			; <UNDEFINED> instruction: 0x37363534
 8016d58:	3b3a3938 	blcc	8ea5240 <__exidx_end+0xe8d574>
 8016d5c:	3f3e3d3c 	svccc	0x003e3d3c
 8016d60:	43424140 	movtmi	r4, #8512	; 0x2140
 8016d64:	48474645 	stmdami	r7, {r0, r2, r6, r9, sl, lr}^
 8016d68:	4c4b4a49 	mcrrmi	10, 4, r4, fp, cr9
 8016d6c:	51504f4e 	cmppl	r0, lr, asr #30
 8016d70:	56555452 			; <UNDEFINED> instruction: 0x56555452
 8016d74:	5b5a5957 	blpl	96ad2d8 <__exidx_end+0x169560c>
 8016d78:	605f5e5c 	subsvs	r5, pc, ip, asr lr	; <UNPREDICTABLE>
 8016d7c:	66646362 	strbtvs	r6, [r4], -r2, ror #6
 8016d80:	6b6a6867 	blvs	9ab0f24 <__exidx_end+0x1a99258>
 8016d84:	71706e6d 	cmnvc	r0, sp, ror #28
 8016d88:	77757472 			; <UNDEFINED> instruction: 0x77757472
 8016d8c:	7d7b7a78 	vldmdbvc	fp!, {s15-s134}
 8016d90:	8382807e 	orrhi	r8, r2, #126	; 0x7e
 8016d94:	8a888685 	bhi	62387b0 <__stack_size+0x6235fb0>
 8016d98:	908f8d8b 	addls	r8, pc, fp, lsl #27
 8016d9c:	97959492 			; <UNDEFINED> instruction: 0x97959492
 8016da0:	9e9c9a99 			; <UNDEFINED> instruction: 0x9e9c9a99
 8016da4:	a5a3a1a0 	strge	sl, [r3, #416]!	; 0x1a0
 8016da8:	acaaa9a7 			; <UNDEFINED> instruction: 0xacaaa9a7
 8016dac:	b4b2b0ae 	ldrtlt	fp, [r2], #174	; 0xae
 8016db0:	bbb9b7b6 	bllt	6e84c90 <__stack_size+0x6e82490>
 8016db4:	c3c1bfbd 	bicgt	fp, r1, #756	; 0x2f4
 8016db8:	cbc9c7c5 	blgt	7288cd4 <__stack_size+0x72864d4>
 8016dbc:	d3d1cfcd 	bicsle	ip, r1, #820	; 0x334
 8016dc0:	dcdad7d5 	ldclle	7, cr13, [sl], {213}	; 0xd5
 8016dc4:	e4e2e0de 	strbt	lr, [r2], #222	; 0xde
 8016dc8:	edebe9e6 			; <UNDEFINED> instruction: 0xedebe9e6
 8016dcc:	f6f4f1ef 			; <UNDEFINED> instruction: 0xf6f4f1ef
 8016dd0:	fffdfaf8 			; <UNDEFINED> instruction: 0xfffdfaf8

08016dd4 <gamma24_0>:
	...
 8016de4:	01000000 	mrseq	r0, (UNDEF: 0)
 8016de8:	01010101 	tsteq	r1, r1, lsl #2
 8016dec:	01010101 	tsteq	r1, r1, lsl #2
 8016df0:	02010101 	andeq	r0, r1, #1073741824	; 0x40000000
 8016df4:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 8016df8:	03030202 	movweq	r0, #12802	; 0x3202
 8016dfc:	04030303 	streq	r0, [r3], #-771	; 0xfffffcfd
 8016e00:	04040404 	streq	r0, [r4], #-1028	; 0xfffffbfc
 8016e04:	05050505 	streq	r0, [r5, #-1285]	; 0xfffffafb
 8016e08:	06060606 	streq	r0, [r6], -r6, lsl #12
 8016e0c:	08070707 	stmdaeq	r7, {r0, r1, r2, r8, r9, sl}
 8016e10:	09090808 	stmdbeq	r9, {r3, fp}
 8016e14:	0a0a0a09 	beq	8299640 <__exidx_end+0x281974>
 8016e18:	0c0b0b0b 			; <UNDEFINED> instruction: 0x0c0b0b0b
 8016e1c:	0e0d0d0c 	cdpeq	13, 0, cr0, cr13, cr12, {0}
 8016e20:	0f0f0e0e 	svceq	0x000f0e0e
 8016e24:	11111010 	tstne	r1, r0, lsl r0
 8016e28:	13131212 	tstne	r3, #536870913	; 0x20000001
 8016e2c:	16151414 			; <UNDEFINED> instruction: 0x16151414
 8016e30:	18171716 	ldmdane	r7, {r1, r2, r4, r8, r9, sl, ip}
 8016e34:	1a1a1918 	bne	869d29c <__exidx_end+0x6855d0>
 8016e38:	1d1c1c1b 	ldcne	12, cr1, [ip, #-108]	; 0xffffff94
 8016e3c:	201f1e1e 	andscs	r1, pc, lr, lsl lr	; <UNPREDICTABLE>
 8016e40:	23222120 			; <UNDEFINED> instruction: 0x23222120
 8016e44:	26252423 	strtcs	r2, [r5], -r3, lsr #8
 8016e48:	29282727 	stmdbcs	r8!, {r0, r1, r2, r5, r8, r9, sl, sp}
 8016e4c:	2c2b2b2a 			; <UNDEFINED> instruction: 0x2c2b2b2a
 8016e50:	302f2e2d 	eorcc	r2, pc, sp, lsr #28
 8016e54:	34333231 	ldrtcc	r3, [r3], #-561	; 0xfffffdcf
 8016e58:	37363535 			; <UNDEFINED> instruction: 0x37363535
 8016e5c:	3b3a3938 	blcc	8ea5344 <__exidx_end+0xe8d678>
 8016e60:	403f3e3c 	eorsmi	r3, pc, ip, lsr lr	; <UNPREDICTABLE>
 8016e64:	44434241 	strbmi	r4, [r3], #-577	; 0xfffffdbf
 8016e68:	49474645 	stmdbmi	r7, {r0, r2, r6, r9, sl, lr}^
 8016e6c:	4d4c4b4a 	vstrmi	d20, [ip, #-296]	; 0xfffffed8
 8016e70:	5251504e 	subspl	r5, r1, #78	; 0x4e
 8016e74:	57565553 			; <UNDEFINED> instruction: 0x57565553
 8016e78:	5c5b5a58 	mrrcpl	10, 5, r5, fp, cr8
 8016e7c:	62605f5e 	rsbvs	r5, r0, #376	; 0x178
 8016e80:	67666463 	strbvs	r6, [r6, -r3, ror #8]!
 8016e84:	6d6c6a69 	vstmdbvs	ip!, {s13-s117}
 8016e88:	7372706f 	cmnvc	r2, #111	; 0x6f
 8016e8c:	79787675 	ldmdbvc	r8!, {r0, r2, r4, r5, r6, r9, sl, ip, sp, lr}^
 8016e90:	7f7e7c7b 	svcvc	0x007e7c7b
 8016e94:	86848381 	strhi	r8, [r4], r1, lsl #7
 8016e98:	8d8b8988 	vstrhi.16	s16, [fp, #272]	; 0x110	; <UNPREDICTABLE>
 8016e9c:	9492908e 	ldrls	r9, [r2], #142	; 0x8e
 8016ea0:	9b999795 	blls	667ccfc <__stack_size+0x667a4fc>
 8016ea4:	a2a09e9c 	adcge	r9, r0, #156, 28	; 0x9c0
 8016ea8:	a9a7a6a4 	stmibge	r7!, {r2, r5, r7, r9, sl, sp, pc}
 8016eac:	b1afadab 			; <UNDEFINED> instruction: 0xb1afadab
 8016eb0:	b9b7b5b3 	ldmiblt	r7!, {r0, r1, r4, r5, r7, r8, sl, ip, sp, pc}
 8016eb4:	c1bfbdbb 			; <UNDEFINED> instruction: 0xc1bfbdbb
 8016eb8:	c9c7c5c3 	stmibgt	r7, {r0, r1, r6, r7, r8, sl, lr, pc}^
 8016ebc:	d2cfcdcb 	sbcle	ip, pc, #12992	; 0x32c0
 8016ec0:	dad8d6d4 	ble	764ca18 <__stack_size+0x764a218>
 8016ec4:	e3e1dfdc 	mvn	sp, #220, 30	; 0x370
 8016ec8:	eceae8e5 	stcl	8, cr14, [sl], #916	; 0x394
 8016ecc:	f6f3f1ef 			; <UNDEFINED> instruction: 0xf6f3f1ef
 8016ed0:	fffdfaf8 			; <UNDEFINED> instruction: 0xfffdfaf8

08016ed4 <gamma25_0>:
	...
 8016ee8:	01010000 	mrseq	r0, (UNDEF: 1)
 8016eec:	01010101 	tsteq	r1, r1, lsl #2
 8016ef0:	01010101 	tsteq	r1, r1, lsl #2
 8016ef4:	02020201 	andeq	r0, r2, #268435456	; 0x10000000
 8016ef8:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 8016efc:	03030302 	movweq	r0, #13058	; 0x3302
 8016f00:	04040303 	streq	r0, [r4], #-771	; 0xfffffcfd
 8016f04:	05040404 	streq	r0, [r4, #-1028]	; 0xfffffbfc
 8016f08:	06050505 	streq	r0, [r5], -r5, lsl #10
 8016f0c:	07060606 	streq	r0, [r6, -r6, lsl #12]
 8016f10:	08070707 	stmdaeq	r7, {r0, r1, r2, r8, r9, sl}
 8016f14:	09090808 	stmdbeq	r9, {r3, fp}
 8016f18:	0a0a0a09 	beq	8299744 <__exidx_end+0x281a78>
 8016f1c:	0c0c0b0b 			; <UNDEFINED> instruction: 0x0c0c0b0b
 8016f20:	0e0d0d0c 	cdpeq	13, 0, cr0, cr13, cr12, {0}
 8016f24:	0f0f0f0e 	svceq	0x000f0f0e
 8016f28:	11111010 	tstne	r1, r0, lsl r0
 8016f2c:	13131212 	tstne	r3, #536870913	; 0x20000001
 8016f30:	16151414 			; <UNDEFINED> instruction: 0x16151414
 8016f34:	18171716 	ldmdane	r7, {r1, r2, r4, r8, r9, sl, ip}
 8016f38:	1a1a1919 	bne	869d3a4 <__exidx_end+0x6856d8>
 8016f3c:	1d1c1c1b 	ldcne	12, cr1, [ip, #-108]	; 0xffffff94
 8016f40:	201f1e1e 	andscs	r1, pc, lr, lsl lr	; <UNPREDICTABLE>
 8016f44:	23222121 			; <UNDEFINED> instruction: 0x23222121
 8016f48:	26252424 	strtcs	r2, [r5], -r4, lsr #8
 8016f4c:	29282827 	stmdbcs	r8!, {r0, r1, r2, r5, fp, sp}
 8016f50:	2d2c2b2a 	vstmdbcs	ip!, {d2-d22}
 8016f54:	302f2e2e 	eorcc	r2, pc, lr, lsr #28
 8016f58:	34333231 	ldrtcc	r3, [r3], #-561	; 0xfffffdcf
 8016f5c:	38373635 	ldmdacc	r7!, {r0, r2, r4, r5, r9, sl, ip, sp}
 8016f60:	3c3b3a39 			; <UNDEFINED> instruction: 0x3c3b3a39
 8016f64:	403f3e3d 	eorsmi	r3, pc, sp, lsr lr	; <UNPREDICTABLE>
 8016f68:	45444341 	strbmi	r4, [r4, #-833]	; 0xfffffcbf
 8016f6c:	49484746 	stmdbmi	r8, {r1, r2, r6, r8, r9, sl, lr}^
 8016f70:	4e4d4c4b 	cdpmi	12, 4, cr4, cr13, cr11, {2}
 8016f74:	53525150 	cmppl	r2, #80, 2
 8016f78:	59575655 	ldmdbpl	r7, {r0, r2, r4, r6, r9, sl, ip, lr}^
 8016f7c:	5e5d5b5a 	vmovpl.s8	r5, d13[2]
 8016f80:	6362615f 	cmnvs	r2, #-1073741801	; 0xc0000017
 8016f84:	69686665 	stmdbvs	r8!, {r0, r2, r5, r6, r9, sl, sp, lr}^
 8016f88:	6f6e6c6b 	svcvs	0x006e6c6b
 8016f8c:	75747271 	ldrbvc	r7, [r4, #-625]!	; 0xfffffd8f
 8016f90:	7c7a7977 			; <UNDEFINED> instruction: 0x7c7a7977
 8016f94:	82817f7d 	addhi	r7, r1, #500	; 0x1f4
 8016f98:	89878684 	stmibhi	r7, {r2, r7, r9, sl, pc}
 8016f9c:	908e8d8b 	addls	r8, lr, fp, lsl #27
 8016fa0:	97969492 			; <UNDEFINED> instruction: 0x97969492
 8016fa4:	9f9d9b99 	svcls	0x009d9b99
 8016fa8:	a6a5a3a1 	strtge	sl, [r5], r1, lsr #7
 8016fac:	aeacaaa8 	vfmage.f32	s20, s25, s17
 8016fb0:	b6b4b2b0 			; <UNDEFINED> instruction: 0xb6b4b2b0
 8016fb4:	bfbdbab8 	svclt	0x00bdbab8
 8016fb8:	c7c5c3c1 	strbgt	ip, [r5, r1, asr #7]
 8016fbc:	d0ceccc9 	sbcle	ip, lr, r9, asr #25
 8016fc0:	d9d7d4d2 	ldmible	r7, {r1, r4, r6, r7, sl, ip, lr, pc}^
 8016fc4:	e2e0dddb 	rsc	sp, r0, #14016	; 0x36c0
 8016fc8:	ebe9e7e4 	bl	7a90f60 <__stack_size+0x7a8e760>
 8016fcc:	f5f3f0ee 			; <UNDEFINED> instruction: 0xf5f3f0ee
 8016fd0:	fffdfaf8 			; <UNDEFINED> instruction: 0xfffdfaf8

08016fd4 <gamma25_5>:
 8016fd4:	01010100 	mrseq	r0, (UNDEF: 17)
 8016fd8:	01010101 	tsteq	r1, r1, lsl #2
 8016fdc:	01010101 	tsteq	r1, r1, lsl #2
 8016fe0:	01010101 	tsteq	r1, r1, lsl #2
 8016fe4:	01010101 	tsteq	r1, r1, lsl #2
 8016fe8:	01010101 	tsteq	r1, r1, lsl #2
 8016fec:	01010101 	tsteq	r1, r1, lsl #2
 8016ff0:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 8016ff4:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
 8016ff8:	03030302 	movweq	r0, #13058	; 0x3302
 8016ffc:	03030303 	movweq	r0, #13059	; 0x3303
 8017000:	04040404 	streq	r0, [r4], #-1028	; 0xfffffbfc
 8017004:	05050504 	streq	r0, [r5, #-1284]	; 0xfffffafc
 8017008:	06060605 	streq	r0, [r6], -r5, lsl #12
 801700c:	07070706 	streq	r0, [r7, -r6, lsl #14]
 8017010:	08080807 	stmdaeq	r8, {r0, r1, r2, fp}
 8017014:	0a090909 	beq	8259440 <__exidx_end+0x241774>
 8017018:	0b0b0a0a 	bleq	82d9848 <__exidx_end+0x2c1b7c>
 801701c:	0c0c0c0b 	stceq	12, cr0, [ip], {11}
 8017020:	0e0e0d0d 	cdpeq	13, 0, cr0, cr14, cr13, {0}
 8017024:	100f0f0f 	andne	r0, pc, pc, lsl #30
 8017028:	12111110 	andsne	r1, r1, #16, 2
 801702c:	14131312 	ldrne	r1, [r3], #-786	; 0xfffffcee
 8017030:	16161514 			; <UNDEFINED> instruction: 0x16161514
 8017034:	18181717 	ldmdane	r8, {r0, r1, r2, r4, r8, r9, sl, ip}
 8017038:	1b1a1a19 	blne	869d8a4 <__exidx_end+0x685bd8>
 801703c:	1e1d1c1c 	mrcne	12, 0, r1, cr13, cr12, {0}
 8017040:	20201f1e 	eorcs	r1, r0, lr, lsl pc
 8017044:	23232221 			; <UNDEFINED> instruction: 0x23232221
 8017048:	26262524 	strtcs	r2, [r6], -r4, lsr #10
 801704c:	2a292827 	bcs	8a610f0 <__exidx_end+0xa49424>
 8017050:	2d2c2b2b 	fstmdbxcs	ip!, {d2-d22}	;@ Deprecated
 8017054:	31302f2e 	teqcc	r0, lr, lsr #30
 8017058:	35343332 	ldrcc	r3, [r4, #-818]!	; 0xfffffcce
 801705c:	38373635 	ldmdacc	r7!, {r0, r2, r4, r5, r9, sl, ip, sp}
 8017060:	3d3c3a39 	vldmdbcc	ip!, {s6-s62}
 8017064:	41403f3e 	cmpmi	r0, lr, lsr pc
 8017068:	45444342 	strbmi	r4, [r4, #-834]	; 0xfffffcbe
 801706c:	4a494846 	bmi	926918c <__exidx_end+0x12514c0>
 8017070:	4f4e4c4b 	svcmi	0x004e4c4b
 8017074:	54535150 	ldrbpl	r5, [r3], #-336	; 0xfffffeb0
 8017078:	59585655 	ldmdbpl	r8, {r0, r2, r4, r6, r9, sl, ip, lr}^
 801707c:	5e5d5c5a 	mrcpl	12, 2, r5, cr13, cr10, {2}
 8017080:	64636160 	strbtvs	r6, [r3], #-352	; 0xfffffea0
 8017084:	6a686765 	bvs	9a30e20 <__exidx_end+0x1a19154>
 8017088:	706e6d6b 	rsbvc	r6, lr, fp, ror #26
 801708c:	76747371 			; <UNDEFINED> instruction: 0x76747371
 8017090:	7c7b7978 			; <UNDEFINED> instruction: 0x7c7b7978
 8017094:	8381807e 	orrhi	r8, r1, #126	; 0x7e
 8017098:	8a888685 	bhi	6238ab4 <__stack_size+0x62362b4>
 801709c:	918f8d8b 	orrls	r8, pc, fp, lsl #27
 80170a0:	98969492 	ldmls	r6, {r1, r4, r7, sl, ip, pc}
 80170a4:	9f9d9c9a 	svcls	0x009d9c9a
 80170a8:	a7a5a3a1 	strge	sl, [r5, r1, lsr #7]!
 80170ac:	afadaba9 	svcge	0x00adaba9
 80170b0:	b7b5b3b1 			; <UNDEFINED> instruction: 0xb7b5b3b1
 80170b4:	bfbdbbb9 	svclt	0x00bdbbb9
 80170b8:	c8c6c3c1 	stmiagt	r6, {r0, r6, r7, r8, r9, lr, pc}^
 80170bc:	d0ceccca 	sbcle	ip, lr, sl, asr #25
 80170c0:	d9d7d5d3 	ldmible	r7, {r0, r1, r4, r6, r7, r8, sl, ip, lr, pc}^
 80170c4:	e3e0dedc 	mvn	sp, #220, 28	; 0xdc0
 80170c8:	eceae7e5 	stcl	7, cr14, [sl], #916	; 0x394
 80170cc:	f6f3f1ee 			; <UNDEFINED> instruction: 0xf6f3f1ee
 80170d0:	fffdfbf8 			; <UNDEFINED> instruction: 0xfffdfbf8
 80170d4:	6e6b6e55 	mcrvs	14, 3, r6, cr11, cr5, {2}
 80170d8:	006e776f 	rsbeq	r7, lr, pc, ror #14
 80170dc:	65646e55 	strbvs	r6, [r4, #-3669]!	; 0xfffff1ab
 80170e0:	656e6966 	strbvs	r6, [lr, #-2406]!	; 0xfffff69a
 80170e4:	 	andeq	r0, r0, #100	; 0x64

080170e6 <CSWTCH.18>:
 80170e6:	02020200 	andeq	r0, r2, #0, 4
 80170ea:	04020202 	streq	r0, [r2], #-514	; 0xfffffdfe
 80170ee:	 	ldrbmi	r0, [r2, -r0, lsl #10]

080170f0 <PixelType::MAPS>:
 80170f0:	00424752 	subeq	r4, r2, r2, asr r7
 80170f4:	00474252 	subeq	r4, r7, r2, asr r2
 80170f8:	00425247 	subeq	r5, r2, r7, asr #4
 80170fc:	00524247 	subseq	r4, r2, r7, asr #4
 8017100:	00475242 	subeq	r5, r7, r2, asr #4
 8017104:	00524742 	subseq	r4, r2, r2, asr #14

08017108 <PixelType::TYPES>:
 8017108:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 801710c:	00003130 	andeq	r3, r0, r0, lsr r1
 8017110:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 8017114:	00003131 	andeq	r3, r0, r1, lsr r1
 8017118:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 801711c:	00003231 	andeq	r3, r0, r1, lsr r2
 8017120:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 8017124:	00423231 	subeq	r3, r2, r1, lsr r2
 8017128:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 801712c:	00003331 	andeq	r3, r0, r1, lsr r3
 8017130:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 8017134:	00003531 	andeq	r3, r0, r1, lsr r5
 8017138:	38364b53 	ldmdacc	r6!, {r0, r1, r4, r6, r8, r9, fp, lr}
 801713c:	00003231 	andeq	r3, r0, r1, lsr r2
 8017140:	38364b53 	ldmdacc	r6!, {r0, r1, r4, r6, r8, r9, fp, lr}
 8017144:	00573231 	subseq	r3, r7, r1, lsr r2
 8017148:	31534355 	cmpcc	r3, r5, asr r3
 801714c:	00333039 	eorseq	r3, r3, r9, lsr r0
 8017150:	32534355 	subscc	r4, r3, #1409286145	; 0x54000001
 8017154:	00333039 	eorseq	r3, r3, r9, lsr r0
 8017158:	38385343 	ldmdacc	r8!, {r0, r1, r6, r8, r9, ip, lr}
 801715c:	00003231 	andeq	r3, r0, r1, lsr r2
 8017160:	31415041 	cmpcc	r1, r1, asr #32
 8017164:	00003230 	andeq	r3, r0, r0, lsr r2
 8017168:	38394b53 	ldmdacc	r9!, {r0, r1, r4, r6, r8, r9, fp, lr}
 801716c:	00003232 	andeq	r3, r0, r2, lsr r2
 8017170:	31383950 	teqcc	r8, r0, asr r9
 8017174:	00000033 	andeq	r0, r0, r3, lsr r0

08017178 <s_patternName>:
 8017178:	656e6f4e 	strbvs	r6, [lr, #-3918]!	; 0xfffff0b2
	...
 8017184:	61520000 	cmpvs	r2, r0
 8017188:	6f626e69 	svcvs	0x00626e69
 801718c:	79632077 	stmdbvc	r3!, {r0, r1, r2, r4, r5, r6, sp}^
 8017190:	00656c63 	rsbeq	r6, r5, r3, ror #24
 8017194:	61656854 	cmnvs	r5, r4, asr r8
 8017198:	20726574 	rsbscs	r6, r2, r4, ror r5
 801719c:	73616863 	cmnvc	r1, #6488064	; 0x630000
 80171a0:	6f430065 	svcvs	0x00430065
 80171a4:	72756f6c 	rsbsvc	r6, r5, #108, 30	; 0x1b0
 80171a8:	70697720 	rsbvc	r7, r9, r0, lsr #14
 80171ac:	00000065 	andeq	r0, r0, r5, rrx
 80171b0:	6e616353 	mcrvs	3, 3, r6, cr1, cr3, {2}
 80171b4:	0072656e 	rsbseq	r6, r2, lr, ror #10
 80171b8:	00000000 	andeq	r0, r0, r0
 80171bc:	61460000 	mrsvs	r0, (UNDEF: 70)
 80171c0:	00006564 	andeq	r6, r0, r4, ror #10
	...

080171cc <pixel::s_GPIO_PINs>:
 80171cc:	00003fc0 	andeq	r3, r0, r0, asr #31

080171d0 <s_aStorSize>:
 80171d0:	00000060 	andeq	r0, r0, r0, rrx
 80171d4:	00000090 	muleq	r0, r0, r0
 80171d8:	00000020 	andeq	r0, r0, r0, lsr #32
 80171dc:	00000040 	andeq	r0, r0, r0, asr #32
 80171e0:	00000060 	andeq	r0, r0, r0, rrx
 80171e4:	00000040 	andeq	r0, r0, r0, asr #32
 80171e8:	00000020 	andeq	r0, r0, r0, lsr #32
 80171ec:	00000020 	andeq	r0, r0, r0, lsr #32
 80171f0:	000001e0 	andeq	r0, r0, r0, ror #3
 80171f4:	00000040 	andeq	r0, r0, r0, asr #32
 80171f8:	00000020 	andeq	r0, r0, r0, lsr #32
 80171fc:	00000060 	andeq	r0, r0, r0, rrx
 8017200:	00000030 	andeq	r0, r0, r0, lsr r0
 8017204:	00000020 	andeq	r0, r0, r0, lsr #32
 8017208:	000003b0 			; <UNDEFINED> instruction: 0x000003b0
 801720c:	00000030 	andeq	r0, r0, r0, lsr r0
 8017210:	00000040 	andeq	r0, r0, r0, asr #32
 8017214:	00000020 	andeq	r0, r0, r0, lsr #32
 8017218:	00000060 	andeq	r0, r0, r0, rrx
 801721c:	00000020 	andeq	r0, r0, r0, lsr #32
 8017220:	00000400 	andeq	r0, r0, r0, lsl #8
 8017224:	00000020 	andeq	r0, r0, r0, lsr #32
 8017228:	00000020 	andeq	r0, r0, r0, lsr #32
 801722c:	00000040 	andeq	r0, r0, r0, asr #32
 8017230:	00000060 	andeq	r0, r0, r0, rrx
 8017234:	00000020 	andeq	r0, r0, r0, lsr #32
 8017238:	00000020 	andeq	r0, r0, r0, lsr #32
 801723c:	000000c0 	andeq	r0, r0, r0, asr #1

08017240 <vtable for StoreDisplayUdf>:
	...
 8017248:	0800e931 	stmdaeq	r0, {r0, r4, r5, r8, fp, sp, lr, pc}
 801724c:	0800e97d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r8, fp, sp, lr, pc}
 8017250:	0800e959 	stmdaeq	r0, {r0, r3, r4, r6, r8, fp, sp, lr, pc}
 8017254:	0800e935 	stmdaeq	r0, {r0, r2, r4, r5, r8, fp, sp, lr, pc}

08017258 <vtable for StoreNetwork>:
	...
 8017260:	0800e99d 	stmdaeq	r0, {r0, r2, r3, r4, r7, r8, fp, sp, lr, pc}
 8017264:	0800ea81 	stmdaeq	r0, {r0, r7, r9, fp, sp, lr, pc}
 8017268:	0800e9a5 	stmdaeq	r0, {r0, r2, r5, r7, r8, fp, sp, lr, pc}
 801726c:	0800ea95 	stmdaeq	r0, {r0, r2, r4, r7, r9, fp, sp, lr, pc}
 8017270:	0800ea25 	stmdaeq	r0, {r0, r2, r5, r9, fp, sp, lr, pc}
 8017274:	0800e9f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, fp, sp, lr, pc}
 8017278:	0800e9c9 	stmdaeq	r0, {r0, r3, r6, r7, r8, fp, sp, lr, pc}
 801727c:	0800ea51 	stmdaeq	r0, {r0, r4, r6, r9, fp, sp, lr, pc}
 8017280:	08008899 	stmdaeq	r0, {r0, r3, r4, r7, fp, pc}
 8017284:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 8017288:	00000000 	andeq	r0, r0, r0
 801728c:	0800e99f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r7, r8, fp, sp, lr, pc}
 8017290:	0800ea8d 	stmdaeq	r0, {r0, r2, r3, r7, r9, fp, sp, lr, pc}
 8017294:	0800ea49 	stmdaeq	r0, {r0, r3, r6, r9, fp, sp, lr, pc}
 8017298:	0800ea1d 	stmdaeq	r0, {r0, r2, r3, r4, r9, fp, sp, lr, pc}
 801729c:	0800e9f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, fp, sp, lr, pc}
 80172a0:	0800ea79 	stmdaeq	r0, {r0, r3, r4, r5, r6, r9, fp, sp, lr, pc}
 80172a4:	080088c1 	stmdaeq	r0, {r0, r6, r7, fp, pc}

080172a8 <vtable for StoreRDMDevice>:
	...
 80172b0:	0800eacd 	stmdaeq	r0, {r0, r2, r3, r6, r7, r9, fp, sp, lr, pc}
 80172b4:	0800eb3d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r8, r9, fp, sp, lr, pc}
 80172b8:	0800ead5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r9, fp, sp, lr, pc}
 80172bc:	0800eb51 	stmdaeq	r0, {r0, r4, r6, r8, r9, fp, sp, lr, pc}
 80172c0:	0800eaf9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r9, fp, sp, lr, pc}
 80172c4:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 80172c8:	00000000 	andeq	r0, r0, r0
 80172cc:	0800eacf 	stmdaeq	r0, {r0, r1, r2, r3, r6, r7, r9, fp, sp, lr, pc}
 80172d0:	0800eb49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, sp, lr, pc}
 80172d4:	0800eb35 	stmdaeq	r0, {r0, r2, r4, r5, r8, r9, fp, sp, lr, pc}

080172d8 <vtable for StoreRemoteConfig>:
	...
 80172e0:	0800eb8d 	stmdaeq	r0, {r0, r2, r3, r7, r8, r9, fp, sp, lr, pc}
 80172e4:	0800ebd9 	stmdaeq	r0, {r0, r3, r4, r6, r7, r8, r9, fp, sp, lr, pc}
 80172e8:	0800ebb5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8, r9, fp, sp, lr, pc}
 80172ec:	0800eb91 	stmdaeq	r0, {r0, r4, r7, r8, r9, fp, sp, lr, pc}

080172f0 <vtable for StorePixelDmx>:
	...
 80172f8:	0800ebf9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, r9, fp, sp, lr, pc}
 80172fc:	0800ed65 	stmdaeq	r0, {r0, r2, r5, r6, r8, sl, fp, sp, lr, pc}
 8017300:	0800ec01 	stmdaeq	r0, {r0, sl, fp, sp, lr, pc}
 8017304:	0800ed79 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, fp, sp, lr, pc}
 8017308:	0800ed31 	stmdaeq	r0, {r0, r4, r5, r8, sl, fp, sp, lr, pc}
 801730c:	0800ecfd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, sl, fp, sp, lr, pc}
 8017310:	0800ecc5 	stmdaeq	r0, {r0, r2, r6, r7, sl, fp, sp, lr, pc}
 8017314:	0800ec8d 	stmdaeq	r0, {r0, r2, r3, r7, sl, fp, sp, lr, pc}
 8017318:	0800ec59 	stmdaeq	r0, {r0, r3, r4, r6, sl, fp, sp, lr, pc}
 801731c:	0800ec25 	stmdaeq	r0, {r0, r2, r5, sl, fp, sp, lr, pc}
 8017320:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 8017324:	00000000 	andeq	r0, r0, r0
 8017328:	0800ebfb 	stmdaeq	r0, {r0, r1, r3, r4, r5, r6, r7, r8, r9, fp, sp, lr, pc}
 801732c:	0800ed71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp, sp, lr, pc}
 8017330:	0800ed5d 	stmdaeq	r0, {r0, r2, r3, r4, r6, r8, sl, fp, sp, lr, pc}
 8017334:	0800ed29 	stmdaeq	r0, {r0, r3, r5, r8, sl, fp, sp, lr, pc}
 8017338:	0800ecf5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, sl, fp, sp, lr, pc}
 801733c:	0800ecbd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, sl, fp, sp, lr, pc}
 8017340:	0800ec85 	stmdaeq	r0, {r0, r2, r7, sl, fp, sp, lr, pc}
 8017344:	0800ec51 	stmdaeq	r0, {r0, r4, r6, sl, fp, sp, lr, pc}
 8017348:	3a434d46 	bcc	90ea868 <__exidx_end+0x10d2b9c>
 801734c:	74654420 	strbtvc	r4, [r5], #-1056	; 0xfffffbe0
 8017350:	65746365 	ldrbvs	r6, [r4, #-869]!	; 0xfffffc9b
 8017354:	73252064 			; <UNDEFINED> instruction: 0x73252064
 8017358:	74697720 	strbtvc	r7, [r9], #-1824	; 0xfffff8e0
 801735c:	6f742068 	svcvs	0x00742068
 8017360:	206c6174 	rsbcs	r6, ip, r4, ror r1
 8017364:	62206425 	eorvs	r6, r0, #620756992	; 0x25000000
 8017368:	73657479 	cmnvc	r5, #2030043136	; 0x79000000
 801736c:	64255b20 	strtvs	r5, [r5], #-2848	; 0xfffff4e0
 8017370:	5d426b20 	vstrpl	d22, [r2, #-128]	; 0xffffff80
 8017374:	6374000a 	cmnvs	r4, #10
 8017378:	65625f70 	strbvs	r5, [r2, #-3952]!	; 0xfffff090
 801737c:	3a6e6967 	bcc	9bb1920 <__exidx_end+0x1b99c54>
 8017380:	6f6f7420 	svcvs	0x006f7420
 8017384:	6e616d20 	cdpvs	13, 6, cr6, cr1, cr0, {1}
 8017388:	6f632079 	svcvs	0x00632079
 801738c:	63656e6e 	cmnvs	r5, #1760	; 0x6e0
 8017390:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8017394:	69620073 	stmdbvs	r2!, {r0, r1, r4, r5, r6}^
 8017398:	7500646e 	strvc	r6, [r0, #-1134]	; 0xfffffb92
 801739c:	6e69626e 	cdpvs	2, 6, cr6, cr9, cr14, {3}
 80173a0:	41000a64 	tstmi	r0, r4, ror #20
 80173a4:	6c205052 	stcvs	0, cr5, [r0], #-328	; 0xfffffeb8
 80173a8:	756b6f6f 	strbvc	r6, [fp, #-3951]!	; 0xfffff091
 80173ac:	61662070 	smcvs	25088	; 0x6200
 80173b0:	64656c69 	strbtvs	r6, [r5], #-3177	; 0xfffff397
 80173b4:	203e2d20 	eorscs	r2, lr, r0, lsr #26
 80173b8:	61666564 	cmnvs	r6, r4, ror #10
 80173bc:	20746c75 	rsbscs	r6, r4, r5, ror ip
 80173c0:	65746167 	ldrbvs	r6, [r4, #-359]!	; 0xfffffe99
 80173c4:	0a796177 	beq	9e6f9a8 <__exidx_end+0x1e57cdc>
 80173c8:	50524100 	subspl	r4, r2, r0, lsl #2
 80173cc:	6f6f6c20 	svcvs	0x006f6c20
 80173d0:	2070756b 	rsbscs	r7, r0, fp, ror #10
 80173d4:	6c696166 	stfvse	f6, [r9], #-408	; 0xfffffe68
 80173d8:	000a6465 	andeq	r6, sl, r5, ror #8

080173dc <NetworkConst::MSG_NETWORK_INIT>:
 80173dc:	7774654e 	ldrbvc	r6, [r4, -lr, asr #10]!
 80173e0:	206b726f 	rsbcs	r7, fp, pc, ror #4
 80173e4:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
 80173e8:	34323200 	ldrtcc	r3, [r2], #-512	; 0xfffffe00
 80173ec:	302e302e 	eorcc	r3, lr, lr, lsr #32
 80173f0:	3135322e 	teqcc	r5, lr, lsr #4
 80173f4:	63745f00 	cmnvs	r4, #0, 30
 80173f8:	6f6c2e70 	svcvs	0x006c2e70
 80173fc:	006c6163 	rsbeq	r6, ip, r3, ror #2
 8017400:	7265735f 	rsbvc	r7, r5, #2080374785	; 0x7c000001
 8017404:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
 8017408:	645f2e73 	ldrbvs	r2, [pc], #-3699	; 8017410 <NetworkConst::MSG_NETWORK_INIT+0x34>
 801740c:	732d736e 			; <UNDEFINED> instruction: 0x732d736e
 8017410:	755f2e64 	ldrbvc	r2, [pc, #-3684]	; 80165b4 <RDMHandler::PID_DEFINITIONS+0x1d4>
 8017414:	6c2e7064 	stcvs	0, cr7, [lr], #-400	; 0xfffffe70
 8017418:	6c61636f 	stclvs	3, cr6, [r1], #-444	; 0xfffffe44
 801741c:	4e446d00 	cdpmi	13, 4, cr6, cr4, cr0, {0}
 8017420:	20000a53 	andcs	r0, r0, r3, asr sl
 8017424:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 8017428:	6e6e7572 	mcrvs	5, 3, r7, cr14, cr2, {3}
 801742c:	0a676e69 	beq	99f2dd8 <__exidx_end+0x19db10c>
 8017430:	614e2000 	mrsvs	r2, (UNDEF: 78)
 8017434:	3a20656d 	bcc	88309f0 <__exidx_end+0x818d24>
 8017438:	0a732520 	beq	9ce08c0 <__exidx_end+0x1cc8bf4>
 801743c:	73252000 			; <UNDEFINED> instruction: 0x73252000
 8017440:	20642520 	rsbcs	r2, r4, r0, lsr #10
 8017444:	000a7325 	andeq	r7, sl, r5, lsr #6
 8017448:	30687465 	rsbcc	r7, r8, r5, ror #8
 801744c:	67696700 	strbvs	r6, [r9, -r0, lsl #14]!
 8017450:	76656461 	strbtvc	r6, [r5], -r1, ror #8
 8017454:	5f656369 	svcpl	0x00656369
 8017458:	74654e00 	strbtvc	r4, [r5], #-3584	; 0xfffff200
 801745c:	6b726f77 	blvs	9cb3240 <__exidx_end+0x1c9b574>
 8017460:	4820000a 	stmdami	r0!, {r1, r3}
 8017464:	6e74736f 	cdpvs	3, 7, cr7, cr4, cr15, {3}
 8017468:	20656d61 	rsbcs	r6, r5, r1, ror #26
 801746c:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8017470:	20000a73 	andcs	r0, r0, r3, ror sl
 8017474:	614e6649 	cmpvs	lr, r9, asr #12
 8017478:	2020656d 	eorcs	r6, r0, sp, ror #10
 801747c:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8017480:	203a6425 	eorscs	r6, sl, r5, lsr #8
 8017484:	000a7325 	andeq	r7, sl, r5, lsr #6
 8017488:	656e4920 	strbvs	r4, [lr, #-2336]!	; 0xfffff6e0
 801748c:	20202074 	eorcs	r2, r0, r4, ror r0
 8017490:	3a202020 	bcc	881f518 <__exidx_end+0x80784c>
 8017494:	2e642520 	cdpcs	5, 6, cr2, cr4, cr0, {1}
 8017498:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801749c:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80174a0:	0a64252f 	beq	9920964 <__exidx_end+0x1908c98>
 80174a4:	654e2000 	strbvs	r2, [lr, #-0]
 80174a8:	73616d74 	cmnvc	r1, #116, 26	; 0x1d00
 80174ac:	2020206b 	eorcs	r2, r0, fp, rrx
 80174b0:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 80174b4:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 80174b8:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80174bc:	20000a64 	andcs	r0, r0, r4, ror #20
 80174c0:	65746147 	ldrbvs	r6, [r4, #-327]!	; 0xfffffeb9
 80174c4:	20796177 	rsbscs	r6, r9, r7, ror r1
 80174c8:	203a2020 	eorscs	r2, sl, r0, lsr #32
 80174cc:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80174d0:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80174d4:	0a64252e 	beq	9920994 <__exidx_end+0x1908cc8>
 80174d8:	72422000 	subvc	r2, r2, #0
 80174dc:	6364616f 	cmnvs	r4, #-1073741797	; 0xc000001b
 80174e0:	20747361 	rsbscs	r7, r4, r1, ror #6
 80174e4:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 80174e8:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 80174ec:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80174f0:	20000a64 	andcs	r0, r0, r4, ror #20
 80174f4:	2063614d 	rsbcs	r6, r3, sp, asr #2
 80174f8:	20202020 	eorcs	r2, r0, r0, lsr #32
 80174fc:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8017500:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8017504:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 8017508:	2e253a78 			; <UNDEFINED> instruction: 0x2e253a78
 801750c:	253a7832 	ldrcs	r7, [sl, #-2098]!	; 0xfffff7ce
 8017510:	3a78322e 	bcc	9e23dd0 <__exidx_end+0x1e0c104>
 8017514:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8017518:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 801751c:	20000a78 	andcs	r0, r0, r8, ror sl
 8017520:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
 8017524:	20202020 	eorcs	r2, r0, r0, lsr #32
 8017528:	203a2020 	eorscs	r2, sl, r0, lsr #32
 801752c:	000a6325 	andeq	r6, sl, r5, lsr #6
 8017530:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
 8017534:	49206369 	stmdbmi	r0!, {r0, r3, r5, r6, r8, r9, sp, lr}
 8017538:	 	rsbvc	r0, r9, r0, asr r0

0801753a <NetworkParamsConst::IP_ADDRESS>:
 801753a:	615f7069 	cmpvs	pc, r9, rrx
 801753e:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0xfffffb9c
 8017542:	 	strvs	r7, [r0], #-883	; 0xfffffc8d

08017545 <NetworkParamsConst::DEFAULT_GATEWAY>:
 8017545:	61666564 	cmnvs	r6, r4, ror #10
 8017549:	5f746c75 	svcpl	0x00746c75
 801754d:	65746167 	ldrbvs	r6, [r4, #-359]!	; 0xfffffe99
 8017551:	00796177 	rsbseq	r6, r9, r7, ror r1

08017555 <NetworkParamsConst::DHCP_RETRY_TIME>:
 8017555:	70636864 	rsbvc	r6, r3, r4, ror #16
 8017559:	7465725f 	strbtvc	r7, [r5], #-607	; 0xfffffda1
 801755d:	745f7972 	ldrbvc	r7, [pc], #-2418	; 8017565 <NetworkParamsConst::HOSTNAME>
 8017561:	00656d69 	rsbeq	r6, r5, r9, ror #26

08017565 <NetworkParamsConst::HOSTNAME>:
 8017565:	74736f68 	ldrbtvc	r6, [r3], #-3944	; 0xfffff098
 8017569:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

0801756e <NetworkParamsConst::NET_MASK>:
 801756e:	5f74656e 	svcpl	0x0074656e
 8017572:	6b73616d 	blvs	9cefb2e <__exidx_end+0x1cd7e62>
	...

08017577 <NetworkParamsConst::USE_DHCP>:
 8017577:	5f657375 	svcpl	0x00657375
 801757b:	70636864 	rsbvc	r6, r3, r4, ror #16
	...

08017580 <NetworkParamsConst::FILE_NAME>:
 8017580:	7774656e 	ldrbvc	r6, [r4, -lr, ror #10]!
 8017584:	2e6b726f 	cdpcs	2, 6, cr7, cr11, cr15, {3}
 8017588:	00747874 	rsbseq	r7, r4, r4, ror r8
 801758c:	65687445 	strbvs	r7, [r8, #-1093]!	; 0xfffffbbb
 8017590:	74656e72 	strbtvc	r6, [r5], #-3698	; 0xfffff18e
 8017594:	61747320 	cmnvs	r4, r0, lsr #6
 8017598:	25007472 	strcs	r7, [r0, #-1138]	; 0xfffffb8e
 801759c:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80175a0:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 80175a4:	252f6425 	strcs	r6, [pc, #-1061]!	; 8017187 <s_patternName+0xf>
 80175a8:	63252064 			; <UNDEFINED> instruction: 0x63252064
 80175ac:	203a4e00 	eorscs	r4, sl, r0, lsl #28
 80175b0:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80175b4:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80175b8:	0064252e 	rsbeq	r2, r4, lr, lsr #10
 80175bc:	25203a47 	strcs	r3, [r0, #-2631]!	; 0xfffff5b9
 80175c0:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80175c4:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 80175c8:	46006425 	strmi	r6, [r0], -r5, lsr #8
 80175cc:	776d7269 	strbvc	r7, [sp, -r9, ror #4]!
 80175d0:	20657261 	rsbcs	r7, r5, r1, ror #4
 80175d4:	2a2e2556 	bcs	8ba0b34 <__exidx_end+0xb88e68>
 80175d8:	48440073 	stmdami	r4, {r0, r1, r4, r5, r6}^
 80175dc:	72205043 	eorvc	r5, r0, #67	; 0x43
 80175e0:	77656e65 	strbvc	r6, [r5, -r5, ror #28]!
 80175e4:	00676e69 	rsbeq	r6, r7, r9, ror #28
 80175e8:	50434844 	subpl	r4, r3, r4, asr #16
 80175ec:	74657220 	strbtvc	r7, [r5], #-544	; 0xfffffde0
 80175f0:	6e697972 			; <UNDEFINED> instruction: 0x6e697972
 80175f4:	654e0067 	strbvs	r0, [lr, #-103]	; 0xffffff99
 80175f8:	726f7774 	rsbvc	r7, pc, #116, 14	; 0x1d00000
 80175fc:	6873206b 	ldmdavs	r3!, {r0, r1, r3, r5, r6, sp}^
 8017600:	6f647475 	svcvs	0x00647475
 8017604:	00006e77 	andeq	r6, r0, r7, ror lr

08017608 <pArray>:
 8017608:	0801769c 	stmdaeq	r1, {r2, r3, r4, r7, r9, sl, ip, sp, lr}
 801760c:	08017658 	stmdaeq	r1, {r3, r4, r6, r9, sl, ip, sp, lr}
 8017610:	0801753a 	stmdaeq	r1, {r1, r3, r4, r5, r8, sl, ip, sp, lr}
 8017614:	080176a2 	stmdaeq	r1, {r1, r5, r7, r9, sl, ip, sp, lr}
 8017618:	08017884 	stmdaeq	r1, {r2, r7, fp, ip, sp, lr}
 801761c:	08017663 	stmdaeq	r1, {r0, r1, r5, r6, r9, sl, ip, sp, lr}
 8017620:	0801551b 	stmdaeq	r1, {r0, r1, r3, r4, r8, sl, ip, lr}
 8017624:	08017565 	stmdaeq	r1, {r0, r2, r5, r6, r8, sl, ip, sp, lr}
 8017628:	08017792 	stmdaeq	r1, {r1, r4, r7, r8, r9, sl, ip, sp, lr}
 801762c:	080177a2 	stmdaeq	r1, {r1, r5, r7, r8, r9, sl, ip, sp, lr}
 8017630:	080177b2 	stmdaeq	r1, {r1, r4, r5, r7, r8, r9, sl, ip, sp, lr}
 8017634:	080177c2 	stmdaeq	r1, {r1, r6, r7, r8, r9, sl, ip, sp, lr}
 8017638:	0801756e 	stmdaeq	r1, {r1, r2, r3, r5, r6, r8, sl, ip, sp, lr}
 801763c:	08017872 	stmdaeq	r1, {r1, r4, r5, r6, fp, ip, sp, lr}
 8017640:	0801551b 	stmdaeq	r1, {r0, r1, r3, r4, r8, sl, ip, lr}
 8017644:	0801551b 	stmdaeq	r1, {r0, r1, r3, r4, r8, sl, ip, lr}
 8017648:	0801551b 	stmdaeq	r1, {r0, r1, r3, r4, r8, sl, ip, lr}
 801764c:	0801551b 	stmdaeq	r1, {r0, r1, r3, r4, r8, sl, ip, lr}
 8017650:	08017545 	stmdaeq	r1, {r0, r2, r6, r8, sl, ip, sp, lr}
 8017654:	08017670 	stmdaeq	r1, {r4, r5, r6, r9, sl, ip, sp, lr}

08017658 <DisplayUdfParamsConst::BOARD_NAME>:
 8017658:	72616f62 	rsbvc	r6, r1, #392	; 0x188
 801765c:	616e5f64 	cmnvs	lr, r4, ror #30
 8017660:	 	tstvs	r0, sp, ror #10

08017663 <DisplayUdfParamsConst::ACTIVE_PORTS>:
 8017663:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 8017667:	705f6576 	subsvc	r6, pc, r6, ror r5	; <UNPREDICTABLE>
 801766b:	7374726f 	cmnvc	r4, #-268435450	; 0xf0000006
	...

08017670 <DisplayUdfParamsConst::DMX_DIRECTION>:
 8017670:	5f786d64 	svcpl	0x00786d64
 8017674:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8017678:	6f697463 	svcvs	0x00697463
 801767c:	 	ldclvs	0, cr0, [r3], #-440	; 0xfffffe48

0801767e <DisplayUdfParamsConst::SLEEP_TIMEOUT>:
 801767e:	65656c73 	strbvs	r6, [r5, #-3187]!	; 0xfffff38d
 8017682:	69745f70 	ldmdbvs	r4!, {r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 8017686:	756f656d 	strbvc	r6, [pc, #-1389]!	; 8017121 <PixelType::TYPES+0x19>
 801768a:	 	stclvs	0, cr0, [r6], #-464	; 0xfffffe30

0801768c <DisplayUdfParamsConst::FLIP_VERTICALLY>:
 801768c:	70696c66 	rsbvc	r6, r9, r6, ror #24
 8017690:	7265765f 	rsbvc	r7, r5, #99614720	; 0x5f00000
 8017694:	61636974 	smcvs	13972	; 0x3694
 8017698:	00796c6c 	rsbseq	r6, r9, ip, ror #24

0801769c <DisplayUdfParamsConst::TITLE>:
 801769c:	6c746974 			; <UNDEFINED> instruction: 0x6c746974
 80176a0:	 	ldrbvs	r0, [r6, #-101]!	; 0xffffff9b

080176a2 <DisplayUdfParamsConst::VERSION>:
 80176a2:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 80176a6:	006e6f69 	rsbeq	r6, lr, r9, ror #30

080176aa <DisplayUdfParamsConst::FILE_NAME>:
 80176aa:	70736964 	rsbsvc	r6, r3, r4, ror #18
 80176ae:	2e79616c 	rpwcsez	f6, f1, #4.0
 80176b2:	00747874 	rsbseq	r7, r4, r4, ror r8

080176b6 <DisplayUdfParamsConst::INTENSITY>:
 80176b6:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
 80176ba:	7469736e 	strbtvc	r7, [r9], #-878	; 0xfffffc92
 80176be:	 	cmnvs	r1, #121	; 0x79

080176c0 <DevicesParamsConst::ACTIVE_OUT>:
 80176c0:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 80176c4:	6f5f6576 	svcvs	0x005f6576
 80176c8:	 	smlsdxvs	r0, r5, r4, r7

080176cb <DevicesParamsConst::GAMMA_VALUE>:
 80176cb:	6d6d6167 	stfvse	f6, [sp, #-412]!	; 0xfffffe64
 80176cf:	61765f61 	cmnvs	r6, r1, ror #30
 80176d3:	0065756c 	rsbeq	r7, r5, ip, ror #10

080176d7 <DevicesParamsConst::SPI_SPEED_HZ>:
 80176d7:	636f6c63 	cmnvs	pc, #25344	; 0x6300
 80176db:	70735f6b 	rsbsvc	r5, r3, fp, ror #30
 80176df:	5f646565 	svcpl	0x00646565
 80176e3:	 	strvc	r7, [r0], #-2664	; 0xfffff598

080176e6 <DevicesParamsConst::TEST_PATTERN>:
 80176e6:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
 80176ea:	7461705f 	strbtvc	r7, [r1], #-95	; 0xffffffa1
 80176ee:	6e726574 	mrcvs	5, 3, r6, cr2, cr4, {3}
	...

080176f3 <DevicesParamsConst::GROUPING_COUNT>:
 80176f3:	5f64656c 	svcpl	0x0064656c
 80176f7:	756f7267 	strbvc	r7, [pc, #-615]!	; 8017498 <NetworkConst::MSG_NETWORK_INIT+0xbc>
 80176fb:	6f635f70 	svcvs	0x00635f70
 80176ff:	00746e75 	rsbseq	r6, r4, r5, ror lr

08017703 <DevicesParamsConst::GAMMA_CORRECTION>:
 8017703:	6d6d6167 	stfvse	f6, [sp, #-412]!	; 0xfffffe64
 8017707:	6f635f61 	svcvs	0x00635f61
 801770b:	63657272 	cmnvs	r5, #536870919	; 0x20000007
 801770f:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
	...

08017714 <DevicesParamsConst::GLOBAL_BRIGHTNESS>:
 8017714:	626f6c67 	rsbvs	r6, pc, #26368	; 0x6700
 8017718:	625f6c61 	subsvs	r6, pc, #24832	; 0x6100
 801771c:	68676972 	stmdavs	r7!, {r1, r4, r5, r6, r8, fp, sp, lr}^
 8017720:	73656e74 	cmnvc	r5, #116, 28	; 0x740
 8017724:	 	strbvs	r0, [ip, #-115]!	; 0xffffff8d

08017726 <DevicesParamsConst::MAP>:
 8017726:	5f64656c 	svcpl	0x0064656c
 801772a:	5f626772 	svcpl	0x00626772
 801772e:	7070616d 	rsbsvc	r6, r0, sp, ror #2
 8017732:	00676e69 	rsbeq	r6, r7, r9, ror #28

08017736 <DevicesParamsConst::TYPE>:
 8017736:	5f64656c 	svcpl	0x0064656c
 801773a:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
	...

0801773f <DevicesParamsConst::COUNT>:
 801773f:	5f64656c 	svcpl	0x0064656c
 8017743:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 8017747:	 	strbvs	r0, [ip, #-116]!	; 0xffffff8c

08017749 <DevicesParamsConst::LED_T0H>:
 8017749:	5f64656c 	svcpl	0x0064656c
 801774d:	00683074 	rsbeq	r3, r8, r4, ror r0

08017751 <DevicesParamsConst::LED_T1H>:
 8017751:	5f64656c 	svcpl	0x0064656c
 8017755:	00683174 	rsbeq	r3, r8, r4, ror r1

08017759 <DevicesParamsConst::FILE_NAME>:
 8017759:	69766564 	ldmdbvs	r6!, {r2, r5, r6, r8, sl, sp, lr}^
 801775d:	2e736563 	cdpcs	5, 7, cr6, cr3, cr3, {3}
 8017761:	00747874 	rsbseq	r7, r4, r4, ror r8
 8017765:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 8017769:	6425223a 	strtvs	r2, [r5], #-570	; 0xfffffdc6
 801776d:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8017771:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8017775:	002c2264 	eoreq	r2, ip, r4, ror #4
 8017779:	3d732523 	cfldr64cc	mvdx2, [r3, #-140]!	; 0xffffff74
 801777d:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8017781:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8017785:	0a64252e 	beq	9920c45 <__exidx_end+0x1908f79>
 8017789:	25202300 	strcs	r2, [r0, #-768]!	; 0xfffffd00
 801778d:	0a232073 	beq	88df961 <__exidx_end+0x8c7c95>
	...

08017792 <LightSetParamsConst::UNIVERSE_PORT>:
 8017792:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 8017796:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 801779a:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 801779e:	00615f74 	rsbeq	r5, r1, r4, ror pc
 80177a2:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 80177a6:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 80177aa:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 80177ae:	00625f74 	rsbeq	r5, r2, r4, ror pc
 80177b2:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 80177b6:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 80177ba:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 80177be:	00635f74 	rsbeq	r5, r3, r4, ror pc
 80177c2:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 80177c6:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 80177ca:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 80177ce:	00645f74 	rsbeq	r5, r4, r4, ror pc

080177d2 <LightSetParamsConst::START_UNI_PORT>:
 80177d2:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 80177d6:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 80177da:	6f705f69 	svcvs	0x00705f69
 80177de:	315f7472 	cmpcc	pc, r2, ror r4	; <UNPREDICTABLE>
 80177e2:	00000000 	andeq	r0, r0, r0
 80177e6:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 80177ea:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 80177ee:	6f705f69 	svcvs	0x00705f69
 80177f2:	325f7472 	subscc	r7, pc, #1912602624	; 0x72000000
 80177f6:	00000000 	andeq	r0, r0, r0
 80177fa:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 80177fe:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 8017802:	6f705f69 	svcvs	0x00705f69
 8017806:	335f7472 	cmpcc	pc, #1912602624	; 0x72000000
 801780a:	00000000 	andeq	r0, r0, r0
 801780e:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8017812:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 8017816:	6f705f69 	svcvs	0x00705f69
 801781a:	345f7472 	ldrbcc	r7, [pc], #-1138	; 8017822 <LightSetParamsConst::START_UNI_PORT+0x50>
 801781e:	00000000 	andeq	r0, r0, r0
 8017822:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8017826:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801782a:	6f705f69 	svcvs	0x00705f69
 801782e:	355f7472 	ldrbcc	r7, [pc, #-1138]	; 80173c4 <vtable for StorePixelDmx+0xd4>
 8017832:	00000000 	andeq	r0, r0, r0
 8017836:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801783a:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801783e:	6f705f69 	svcvs	0x00705f69
 8017842:	365f7472 			; <UNDEFINED> instruction: 0x365f7472
 8017846:	00000000 	andeq	r0, r0, r0
 801784a:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801784e:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 8017852:	6f705f69 	svcvs	0x00705f69
 8017856:	375f7472 			; <UNDEFINED> instruction: 0x375f7472
 801785a:	00000000 	andeq	r0, r0, r0
 801785e:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8017862:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 8017866:	6f705f69 	svcvs	0x00705f69
 801786a:	385f7472 	ldmdacc	pc, {r1, r4, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
 801786e:	00000000 	andeq	r0, r0, r0

08017872 <LightSetParamsConst::DMX_START_ADDRESS>:
 8017872:	5f786d64 	svcpl	0x00786d64
 8017876:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801787a:	64615f74 	strbtvs	r5, [r1], #-3956	; 0xfffff08c
 801787e:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
 8017882:	 	mrcvs	0, 3, r0, cr5, cr3, {3}

08017884 <LightSetParamsConst::UNIVERSE>:
 8017884:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 8017888:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 801788c:	206f4e00 	rsbcs	r4, pc, r0, lsl #28
 8017890:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8017894:	2079616c 	rsbscs	r6, r9, ip, ror #2
 8017898:	6e756f66 	cdpvs	15, 7, cr6, cr5, cr6, {3}
 801789c:	48530064 	ldmdami	r3, {r2, r5, r6}^
 80178a0:	36303131 			; <UNDEFINED> instruction: 0x36303131
 80178a4:	44535300 	ldrbmi	r5, [r3], #-768	; 0xfffffd00
 80178a8:	36303331 			; <UNDEFINED> instruction: 0x36303331
 80178ac:	20732500 	rsbscs	r2, r3, r0, lsl #10
 80178b0:	2c642528 	cfstr64cs	mvdx2, [r4], #-160	; 0xffffff60
 80178b4:	0a296425 	beq	8a70950 <__exidx_end+0xa58c84>
 80178b8:	eeaa4000 	cdp	0, 10, cr4, cr10, cr0, {0}
 80178bc:	0000eeaa 	andeq	lr, r0, sl, lsr #29

080178c0 <_OledFont8x6>:
 80178c0:	00000040 	andeq	r0, r0, r0, asr #32
 80178c4:	40000000 	andmi	r0, r0, r0
 80178c8:	005f0000 	subseq	r0, pc, r0
 80178cc:	00400000 	subeq	r0, r0, r0
 80178d0:	00070007 	andeq	r0, r7, r7
 80178d4:	7f144000 	svcvc	0x00144000
 80178d8:	00147f14 	andseq	r7, r4, r4, lsl pc
 80178dc:	7f2a2440 	svcvc	0x002a2440
 80178e0:	4000122a 	andmi	r1, r0, sl, lsr #4
 80178e4:	64081323 	strvs	r1, [r8], #-803	; 0xfffffcdd
 80178e8:	36400062 	strbcc	r0, [r0], -r2, rrx
 80178ec:	50205649 	eorpl	r5, r0, r9, asr #12
 80178f0:	08004000 	stmdaeq	r0, {lr}
 80178f4:	00000307 	andeq	r0, r0, r7, lsl #6
 80178f8:	221c0040 	andscs	r0, ip, #64	; 0x40
 80178fc:	40000041 	andmi	r0, r0, r1, asr #32
 8017900:	1c224100 	stfnes	f4, [r2], #-0
 8017904:	2a400000 	bcs	901790c <__exidx_end+0xfffc40>
 8017908:	2a1c7f1c 	bcs	8737580 <__exidx_end+0x71f8b4>
 801790c:	08084000 	stmdaeq	r8, {lr}
 8017910:	0008083e 	andeq	r0, r8, lr, lsr r8
 8017914:	70800040 	addvc	r0, r0, r0, asr #32
 8017918:	40000030 	andmi	r0, r0, r0, lsr r0
 801791c:	08080808 	stmdaeq	r8, {r3, fp}
 8017920:	00400008 	subeq	r0, r0, r8
 8017924:	00606000 	rsbeq	r6, r0, r0
 8017928:	10204000 	eorne	r4, r0, r0
 801792c:	00020408 	andeq	r0, r2, r8, lsl #8
 8017930:	49513e40 	ldmdbmi	r1, {r6, r9, sl, fp, ip, sp}^
 8017934:	40003e45 	andmi	r3, r0, r5, asr #28
 8017938:	407f4200 	rsbsmi	r4, pc, r0, lsl #4
 801793c:	72400000 	subvc	r0, r0, #0
 8017940:	46494949 	strbmi	r4, [r9], -r9, asr #18
 8017944:	41214000 			; <UNDEFINED> instruction: 0x41214000
 8017948:	00334d49 	eorseq	r4, r3, r9, asr #26
 801794c:	12141840 	andsne	r1, r4, #64, 16	; 0x400000
 8017950:	4000107f 	andmi	r1, r0, pc, ror r0
 8017954:	45454527 	strbmi	r4, [r5, #-1319]	; 0xfffffad9
 8017958:	3c400039 	mcrrcc	0, 3, r0, r0, cr9
 801795c:	3149494a 	cmpcc	r9, sl, asr #18
 8017960:	21414000 	mrscs	r4, (UNDEF: 65)
 8017964:	00070911 	andeq	r0, r7, r1, lsl r9
 8017968:	49493640 	stmdbmi	r9, {r6, r9, sl, ip, sp}^
 801796c:	40003649 	andmi	r3, r0, r9, asr #12
 8017970:	29494946 	stmdbcs	r9, {r1, r2, r6, r8, fp, lr}^
 8017974:	0040001e 	subeq	r0, r0, lr, lsl r0
 8017978:	00001400 	andeq	r1, r0, r0, lsl #8
 801797c:	40004000 	andmi	r4, r0, r0
 8017980:	00000034 	andeq	r0, r0, r4, lsr r0
 8017984:	14080040 	strne	r0, [r8], #-64	; 0xffffffc0
 8017988:	40004122 	andmi	r4, r0, r2, lsr #2
 801798c:	14141414 	ldrne	r1, [r4], #-1044	; 0xfffffbec
 8017990:	00400014 	subeq	r0, r0, r4, lsl r0
 8017994:	08142241 	ldmdaeq	r4, {r0, r6, r9, sp}
 8017998:	01024000 	mrseq	r4, (UNDEF: 2)
 801799c:	00060959 	andeq	r0, r6, r9, asr r9
 80179a0:	5d413e40 	stclpl	14, cr3, [r1, #-256]	; 0xffffff00
 80179a4:	40004e59 	andmi	r4, r0, r9, asr lr
 80179a8:	1211127c 	andsne	r1, r1, #124, 4	; 0xc0000007
 80179ac:	7f40007c 	svcvc	0x0040007c
 80179b0:	36494949 	strbcc	r4, [r9], -r9, asr #18
 80179b4:	413e4000 	teqmi	lr, r0
 80179b8:	00224141 	eoreq	r4, r2, r1, asr #2
 80179bc:	41417f40 	cmpmi	r1, r0, asr #30
 80179c0:	40003e41 	andmi	r3, r0, r1, asr #28
 80179c4:	4949497f 	stmdbmi	r9, {r0, r1, r2, r3, r4, r5, r6, r8, fp, lr}^
 80179c8:	7f400041 	svcvc	0x00400041
 80179cc:	01090909 	tsteq	r9, r9, lsl #18
 80179d0:	413e4000 	teqmi	lr, r0
 80179d4:	00735141 	rsbseq	r5, r3, r1, asr #2
 80179d8:	08087f40 	stmdaeq	r8, {r6, r8, r9, sl, fp, ip, sp, lr}
 80179dc:	40007f08 	andmi	r7, r0, r8, lsl #30
 80179e0:	417f4100 	cmnmi	pc, r0, lsl #2
 80179e4:	20400000 	subcs	r0, r0, r0
 80179e8:	013f4140 	teqeq	pc, r0, asr #2
 80179ec:	087f4000 	ldmdaeq	pc!, {lr}^	; <UNPREDICTABLE>
 80179f0:	00412214 	subeq	r2, r1, r4, lsl r2
 80179f4:	40407f40 	submi	r7, r0, r0, asr #30
 80179f8:	40004040 	andmi	r4, r0, r0, asr #32
 80179fc:	021c027f 	andseq	r0, ip, #-268435449	; 0xf0000007
 8017a00:	7f40007f 	svcvc	0x0040007f
 8017a04:	7f100804 	svcvc	0x00100804
 8017a08:	413e4000 	teqmi	lr, r0
 8017a0c:	003e4141 	eorseq	r4, lr, r1, asr #2
 8017a10:	09097f40 	stmdbeq	r9, {r6, r8, r9, sl, fp, ip, sp, lr}
 8017a14:	40000609 	andmi	r0, r0, r9, lsl #12
 8017a18:	2151413e 	cmpcs	r1, lr, lsr r1
 8017a1c:	7f40005e 	svcvc	0x0040005e
 8017a20:	46291909 	strtmi	r1, [r9], -r9, lsl #18
 8017a24:	49264000 	stmdbmi	r6!, {lr}
 8017a28:	00324949 	eorseq	r4, r2, r9, asr #18
 8017a2c:	7f010340 	svcvc	0x00010340
 8017a30:	40000301 	andmi	r0, r0, r1, lsl #6
 8017a34:	4040403f 	submi	r4, r0, pc, lsr r0
 8017a38:	1f40003f 	svcne	0x0040003f
 8017a3c:	1f204020 	svcne	0x00204020
 8017a40:	403f4000 	eorsmi	r4, pc, r0
 8017a44:	003f4038 	eorseq	r4, pc, r8, lsr r0	; <UNPREDICTABLE>
 8017a48:	08146340 	ldmdaeq	r4, {r6, r8, r9, sp, lr}
 8017a4c:	40006314 	andmi	r6, r0, r4, lsl r3
 8017a50:	04780403 	ldrbteq	r0, [r8], #-1027	; 0xfffffbfd
 8017a54:	61400003 	cmpvs	r0, r3
 8017a58:	434d4959 	movtmi	r4, #55641	; 0xd959
 8017a5c:	7f004000 	svcvc	0x00004000
 8017a60:	00414141 	subeq	r4, r1, r1, asr #2
 8017a64:	08040240 	stmdaeq	r4, {r6, r9}
 8017a68:	40002010 	andmi	r2, r0, r0, lsl r0
 8017a6c:	41414100 	mrsmi	r4, (UNDEF: 81)
 8017a70:	0440007f 	strbeq	r0, [r0], #-127	; 0xffffff81
 8017a74:	04020102 	streq	r0, [r2], #-258	; 0xfffffefe
 8017a78:	40404000 	submi	r4, r0, r0
 8017a7c:	00404040 	subeq	r4, r0, r0, asr #32
 8017a80:	07030040 	streq	r0, [r3, -r0, asr #32]
 8017a84:	40000008 	andmi	r0, r0, r8
 8017a88:	78545420 	ldmdavc	r4, {r5, sl, ip, lr}^
 8017a8c:	7f400040 	svcvc	0x00400040
 8017a90:	38444428 	stmdacc	r4, {r3, r5, sl, lr}^
 8017a94:	44384000 	ldrtmi	r4, [r8], #-0
 8017a98:	00284444 	eoreq	r4, r8, r4, asr #8
 8017a9c:	44443840 	strbmi	r3, [r4], #-2112	; 0xfffff7c0
 8017aa0:	40007f28 	andmi	r7, r0, r8, lsr #30
 8017aa4:	54545438 	ldrbpl	r5, [r4], #-1080	; 0xfffffbc8
 8017aa8:	00400018 	subeq	r0, r0, r8, lsl r0
 8017aac:	02097e08 	andeq	r7, r9, #8, 28	; 0x80
 8017ab0:	a4184000 	ldrge	r4, [r8], #-0
 8017ab4:	00789ca4 	rsbseq	r9, r8, r4, lsr #25
 8017ab8:	04087f40 	streq	r7, [r8], #-3904	; 0xfffff0c0
 8017abc:	40007804 	andmi	r7, r0, r4, lsl #16
 8017ac0:	407d4400 	rsbsmi	r4, sp, r0, lsl #8
 8017ac4:	20400000 	subcs	r0, r0, r0
 8017ac8:	003d4040 	eorseq	r4, sp, r0, asr #32
 8017acc:	107f4000 	rsbsne	r4, pc, r0
 8017ad0:	00004428 	andeq	r4, r0, r8, lsr #8
 8017ad4:	7f410040 	svcvc	0x00410040
 8017ad8:	40000040 	andmi	r0, r0, r0, asr #32
 8017adc:	0478047c 	ldrbteq	r0, [r8], #-1148	; 0xfffffb84
 8017ae0:	7c400078 	mcrrvc	0, 7, r0, r0, cr8
 8017ae4:	78040408 	stmdavc	r4, {r3, sl}
 8017ae8:	44384000 	ldrtmi	r4, [r8], #-0
 8017aec:	00384444 	eorseq	r4, r8, r4, asr #8
 8017af0:	2418fc40 	ldrcs	pc, [r8], #-3136	; 0xfffff3c0
 8017af4:	40001824 	andmi	r1, r0, r4, lsr #16
 8017af8:	18242418 	stmdane	r4!, {r3, r4, sl, sp}
 8017afc:	7c4000fc 	mcrrvc	0, 15, r0, r0, cr12
 8017b00:	08040408 	stmdaeq	r4, {r3, sl}
 8017b04:	54484000 	strbpl	r4, [r8], #-0
 8017b08:	00245454 	eoreq	r5, r4, r4, asr r4
 8017b0c:	3f040440 	svccc	0x00040440
 8017b10:	40002444 	andmi	r2, r0, r4, asr #8
 8017b14:	2040403c 	subcs	r4, r0, ip, lsr r0
 8017b18:	1c40007c 	mcrrne	0, 7, r0, r0, cr12
 8017b1c:	1c204020 	stcne	0, cr4, [r0], #-128	; 0xffffff80
 8017b20:	403c4000 	eorsmi	r4, ip, r0
 8017b24:	003c4030 	eorseq	r4, ip, r0, lsr r0
 8017b28:	10284440 	eorne	r4, r8, r0, asr #8
 8017b2c:	40004428 	andmi	r4, r0, r8, lsr #8
 8017b30:	9090904c 	addsls	r9, r0, ip, asr #32
 8017b34:	4440007c 	strbmi	r0, [r0], #-124	; 0xffffff84
 8017b38:	444c5464 	strbmi	r5, [ip], #-1124	; 0xfffffb9c
 8017b3c:	08004000 	stmdaeq	r0, {lr}
 8017b40:	00004136 	andeq	r4, r0, r6, lsr r1
 8017b44:	77000040 	strvc	r0, [r0, -r0, asr #32]
 8017b48:	40000000 	andmi	r0, r0, r0
 8017b4c:	08364100 	ldmdaeq	r6!, {r8, lr}
 8017b50:	02400000 	subeq	r0, r0, #0
 8017b54:	02040201 	andeq	r0, r4, #268435456	; 0x10000000
 8017b58:	263c4000 	ldrtcs	r4, [ip], -r0
 8017b5c:	003c2623 	eorseq	r2, ip, r3, lsr #12

08017b60 <oled_128x32_init>:
 8017b60:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 8017b64:	4000d31f 	andmi	sp, r0, pc, lsl r3
 8017b68:	0020148d 	eoreq	r1, r0, sp, lsl #9
 8017b6c:	02dac8a1 	sbcseq	ip, sl, #10551296	; 0xa10000
 8017b70:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 8017b74:	a6a440db 	ssatge	r4, #5, fp, asr #1

08017b78 <oled_128x64_init>:
 8017b78:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 8017b7c:	4000d33f 	andmi	sp, r0, pc, lsr r3
 8017b80:	0020148d 	eoreq	r1, r0, sp, lsl #9
 8017b84:	12dac8a1 	sbcsne	ip, sl, #10551296	; 0xa10000
 8017b88:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 8017b8c:	a6a440db 	ssatge	r4, #5, fp, asr #1

08017b90 <vtable for Ssd1306>:
	...
 8017b98:	08011fc9 	stmdaeq	r1, {r0, r3, r6, r7, r8, r9, sl, fp, ip}
 8017b9c:	08011ff5 	stmdaeq	r1, {r0, r2, r4, r5, r6, r7, r8, r9, sl, fp, ip}
 8017ba0:	08012305 	stmdaeq	r1, {r0, r2, r8, r9, sp}
 8017ba4:	0801228d 	stmdaeq	r1, {r0, r2, r3, r7, r9, sp}
 8017ba8:	08012159 	stmdaeq	r1, {r0, r3, r4, r6, r8, sp}
 8017bac:	08012015 	stmdaeq	r1, {r0, r2, r4, sp}
 8017bb0:	0801203d 	stmdaeq	r1, {r0, r2, r3, r4, r5, sp}
 8017bb4:	0801212f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r8, sp}
 8017bb8:	080120e9 	stmdaeq	r1, {r0, r3, r5, r6, r7, sp}
 8017bbc:	08011fcb 	stmdaeq	r1, {r0, r1, r3, r6, r7, r8, r9, sl, fp, ip}
 8017bc0:	08012195 	stmdaeq	r1, {r0, r2, r4, r7, r8, sp}
 8017bc4:	080121a1 	stmdaeq	r1, {r0, r5, r7, r8, sp}
 8017bc8:	080121bb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r7, r8, sp}
 8017bcc:	08011fcd 	stmdaeq	r1, {r0, r2, r3, r6, r7, r8, r9, sl, fp, ip}
 8017bd0:	30345b1b 	eorscc	r5, r4, fp, lsl fp
 8017bd4:	5b1b006d 	blpl	86d7d90 <__exidx_end+0x6c00c4>
 8017bd8:	006d3033 	rsbeq	r3, sp, r3, lsr r0
 8017bdc:	31335b1b 	teqcc	r3, fp, lsl fp
 8017be0:	5b1b006d 	blpl	86d7d9c <__exidx_end+0x6c00d0>
 8017be4:	006d3233 	rsbeq	r3, sp, r3, lsr r2
 8017be8:	33335b1b 	teqcc	r3, #27648	; 0x6c00
 8017bec:	5b1b006d 	blpl	86d7da8 <__exidx_end+0x6c00dc>
 8017bf0:	006d3933 	rsbeq	r3, sp, r3, lsr r9
 8017bf4:	2e25565b 	mcrcs	6, 1, r5, cr5, cr11, {2}
 8017bf8:	205d732a 	subscs	r7, sp, sl, lsr #6
 8017bfc:	43207325 			; <UNDEFINED> instruction: 0x43207325
 8017c00:	69706d6f 	ldmdbvs	r0!, {r0, r1, r2, r3, r5, r6, r8, sl, fp, sp, lr}^
 8017c04:	2064656c 	rsbcs	r6, r4, ip, ror #10
 8017c08:	25206e6f 	strcs	r6, [r0, #-3695]!	; 0xfffff191
 8017c0c:	20732a2e 	rsbscs	r2, r3, lr, lsr #20
 8017c10:	25207461 	strcs	r7, [r0, #-1121]!	; 0xfffffb9f
 8017c14:	00732a2e 	rsbseq	r2, r3, lr, lsr #20
 8017c18:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8017c1c:	203a636f 	eorscs	r6, sl, pc, ror #6
 8017c20:	000a7525 	andeq	r7, sl, r5, lsr #10
 8017c24:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8017c28:	203a636f 	eorscs	r6, sl, pc, ror #6
 8017c2c:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
 8017c30:	62203e20 	eorvs	r3, r0, #32, 28	; 0x200
 8017c34:	6b636f6c 	blvs	98f39ec <__exidx_end+0x18dbd20>
 8017c38:	6d696c5f 	stclvs	12, cr6, [r9, #-380]!	; 0xfffffe84
 8017c3c:	000a7469 	andeq	r7, sl, r9, ror #8
 8017c40:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8017c44:	203a636f 	eorscs	r6, sl, pc, ror #6
 8017c48:	6f6c4270 	svcvs	0x006c4270
 8017c4c:	65486b63 	strbvs	r6, [r8, #-2915]	; 0xfffff49d
 8017c50:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 8017c54:	2c70253d 	cfldr64cs	mvdx2, [r0], #-244	; 0xffffff0c
 8017c58:	7a697320 	bvc	9a748e0 <__exidx_end+0x1a5cc14>
 8017c5c:	64253d65 	strtvs	r3, [r5], #-3429	; 0xfffff29b
 8017c60:	6164202c 	cmnvs	r4, ip, lsr #32
 8017c64:	253d6174 	ldrcs	r6, [sp, #-372]!	; 0xfffffe8c
 8017c68:	66000a70 			; <UNDEFINED> instruction: 0x66000a70
 8017c6c:	3a656572 	bcc	997123c <__exidx_end+0x1959570>
 8017c70:	6c427020 	mcrrvs	0, 2, r7, r2, cr0
 8017c74:	486b636f 	stmdami	fp!, {r0, r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8017c78:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 8017c7c:	203d2072 	eorscs	r2, sp, r2, ror r0
 8017c80:	202c7025 	eorcs	r7, ip, r5, lsr #32
 8017c84:	6f6c4270 	svcvs	0x006c4270
 8017c88:	3d206b63 	fstmdbxcc	r0!, {d6-d54}	;@ Deprecated
 8017c8c:	0a702520 	beq	9c21114 <__exidx_end+0x1c09448>
 8017c90:	00000000 	andeq	r0, r0, r0

08017c94 <days_of_month>:
 8017c94:	0000001f 	andeq	r0, r0, pc, lsl r0
 8017c98:	0000001c 	andeq	r0, r0, ip, lsl r0
 8017c9c:	0000001f 	andeq	r0, r0, pc, lsl r0
 8017ca0:	0000001e 	andeq	r0, r0, lr, lsl r0
 8017ca4:	0000001f 	andeq	r0, r0, pc, lsl r0
 8017ca8:	0000001e 	andeq	r0, r0, lr, lsl r0
 8017cac:	0000001f 	andeq	r0, r0, pc, lsl r0
 8017cb0:	0000001f 	andeq	r0, r0, pc, lsl r0
 8017cb4:	0000001e 	andeq	r0, r0, lr, lsl r0
 8017cb8:	0000001f 	andeq	r0, r0, pc, lsl r0
 8017cbc:	0000001e 	andeq	r0, r0, lr, lsl r0
 8017cc0:	0000001f 	andeq	r0, r0, pc, lsl r0

Disassembly of section .ARM:

08017cc4 <__exidx_start>:
 8017cc4:	7fff1948 	svcvc	0x00ff1948
 8017cc8:	00000001 	andeq	r0, r0, r1

Disassembly of section .ARM.attributes:

08017ccc <.ARM.attributes>:
 8017ccc:	00002e41 	andeq	r2, r0, r1, asr #28
 8017cd0:	61656100 	cmnvs	r5, r0, lsl #2
 8017cd4:	01006962 	tsteq	r0, r2, ror #18
 8017cd8:	00000024 	andeq	r0, r0, r4, lsr #32
 8017cdc:	726f4305 	rsbvc	r4, pc, #335544320	; 0x14000000
 8017ce0:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
 8017ce4:	0600334d 	streq	r3, [r0], -sp, asr #6
 8017ce8:	094d070a 	stmdbeq	sp, {r1, r3, r8, r9, sl}^
 8017cec:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
 8017cf0:	17011501 	strne	r1, [r1, -r1, lsl #10]
 8017cf4:	1a011803 	bne	805dd08 <__exidx_end+0x4603c>
 8017cf8:	Address 0x0000000008017cf8 is out of bounds.


Disassembly of section .data:

20000000 <LLRPDevice::m_nHandleLLRP>:
20000000:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

20000004 <s_multicast_mac>:
20000004:	005e0001 	subseq	r0, lr, r1
20000008:	00000000 	andeq	r0, r0, r0

2000000c <MDNS::s_nHandle>:
2000000c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

20000010 <next_block>:
20000010:	2003c000 	andcs	ip, r3, r0

20000014 <s_block_bucket>:
20000014:	00000010 	andeq	r0, r0, r0, lsl r0
	...
20000024:	00000020 	andeq	r0, r0, r0, lsr #32
	...
20000034:	00000040 	andeq	r0, r0, r0, asr #32
	...
20000044:	00000060 	andeq	r0, r0, r0, rrx
	...
20000054:	00000080 	andeq	r0, r0, r0, lsl #1
	...
20000064:	00000100 	andeq	r0, r0, r0, lsl #2
	...
20000074:	00000140 	andeq	r0, r0, r0, asr #2
	...
20000084:	00000180 	andeq	r0, r0, r0, lsl #3
	...
20000094:	00000200 	andeq	r0, r0, r0, lsl #4
	...
200000a4:	00000300 	andeq	r0, r0, r0, lsl #6
	...
200000b4:	00000400 	andeq	r0, r0, r0, lsl #8
	...
200000c4:	00000500 	andeq	r0, r0, r0, lsl #10
	...

200000e4 <SystemCoreClock>:
200000e4:	07270e00 	streq	r0, [r7, -r0, lsl #28]!

Disassembly of section .bss:

200000e8 <outptr>:
200000e8:	00000000 	andeq	r0, r0, r0

200000ec <RemoteConfig::s_pUdpBuffer>:
200000ec:	00000000 	andeq	r0, r0, r0

200000f0 <RemoteConfig::s_RemoteConfigListBin>:
	...

20000114 <RemoteConfig::s_pThis>:
20000114:	00000000 	andeq	r0, r0, r0

20000118 <HttpDaemon::m_Content>:
	...

200006b8 <guard variable for lightset::Data::Get()::instance>:
200006b8:	00000000 	andeq	r0, r0, r0

200006bc <lightset::Data::Get()::instance>:
	...

2000c73c <DdpDisplay::s_nOffsetCompare>:
	...

2000c75c <DdpDisplay::s_nLightsetPortLength>:
	...

2000c7dc <DdpDisplay::s_pThis>:
2000c7dc:	00000000 	andeq	r0, r0, r0

2000c7e0 <LLRPDevice::s_nIpAddressFrom>:
2000c7e0:	00000000 	andeq	r0, r0, r0

2000c7e4 <LLRPDevice::m_nIpAddresLLRPRequest>:
2000c7e4:	00000000 	andeq	r0, r0, r0

2000c7e8 <LLRPDevice::m_nIpAddressLLRPResponse>:
2000c7e8:	00000000 	andeq	r0, r0, r0

2000c7ec <LLRPDevice::m_pLLRP>:
2000c7ec:	00000000 	andeq	r0, r0, r0

2000c7f0 <RDMNetDevice::s_RdmCommand>:
	...

2000c8ef <RDMNetDevice::s_Cid>:
	...

2000c900 <RDMSensors::s_pThis>:
2000c900:	00000000 	andeq	r0, r0, r0

2000c904 <RDMSubDevices::s_pThis>:
2000c904:	00000000 	andeq	r0, r0, r0

2000c908 <RDMDeviceResponder::s_pThis>:
2000c908:	00000000 	andeq	r0, r0, r0

2000c90c <RDMIdentify::m_bIsEnabled>:
	...

2000c90d <RDMIdentify::m_nMode>:
2000c90d:	 	andeq	r0, r0, r0

2000c910 <RDMIdentify::s_pThis>:
2000c910:	00000000 	andeq	r0, r0, r0

2000c914 <PixelPatterns::m_PortConfig>:
	...

2000ca14 <PixelPatterns::m_nActivePorts>:
2000ca14:	00000000 	andeq	r0, r0, r0

2000ca18 <PixelPatterns::m_pScannerColours>:
2000ca18:	00000000 	andeq	r0, r0, r0

2000ca1c <PixelPatterns::m_nCount>:
2000ca1c:	00000000 	andeq	r0, r0, r0

2000ca20 <PixelPatterns::m_pOutput>:
2000ca20:	00000000 	andeq	r0, r0, r0

2000ca24 <PixelTestPattern::s_Pattern>:
2000ca24:	00000000 	andeq	r0, r0, r0

2000ca28 <sv_isRunning>:
2000ca28:	00000000 	andeq	r0, r0, r0

2000ca2c <WS28xxMulti::s_pThis>:
2000ca2c:	00000000 	andeq	r0, r0, r0

2000ca30 <pixel::s_DmaBuffer>:
	...

20014a30 <SpiFlashStore::s_nWaitMillis>:
20014a30:	00000000 	andeq	r0, r0, r0

20014a34 <SpiFlashStore::s_SpiFlashData>:
	...

20015a34 <SpiFlashStore::s_nStartAddress>:
20015a34:	00000000 	andeq	r0, r0, r0

20015a38 <SpiFlashStore::s_bHaveFlashChip>:
20015a38:	00000000 	andeq	r0, r0, r0

20015a3c <SpiFlashStore::s_nSpiFlashStoreSize>:
20015a3c:	00000000 	andeq	r0, r0, r0

20015a40 <SpiFlashStore::s_State>:
20015a40:	00000000 	andeq	r0, r0, r0

20015a44 <SpiFlashStore::s_pThis>:
20015a44:	00000000 	andeq	r0, r0, r0

20015a48 <SpiFlashStore::s_bIsNew>:
20015a48:	00000000 	andeq	r0, r0, r0

20015a4c <StoreDisplayUdf::s_pThis>:
20015a4c:	00000000 	andeq	r0, r0, r0

20015a50 <StoreNetwork::s_pThis>:
20015a50:	00000000 	andeq	r0, r0, r0

20015a54 <StoreRDMDevice::s_pThis>:
20015a54:	00000000 	andeq	r0, r0, r0

20015a58 <StoreRemoteConfig::s_pThis>:
20015a58:	00000000 	andeq	r0, r0, r0

20015a5c <StorePixelDmx::s_pThis>:
20015a5c:	00000000 	andeq	r0, r0, r0

20015a60 <FlashRom::s_pThis>:
20015a60:	00000000 	andeq	r0, r0, r0

20015a64 <flashrom::s_nAddress>:
20015a64:	00000000 	andeq	r0, r0, r0

20015a68 <flashrom::s_State>:
20015a68:	00000000 	andeq	r0, r0, r0

20015a6c <flashrom::s_nPage>:
20015a6c:	00000000 	andeq	r0, r0, r0

20015a70 <flashrom::s_pData>:
20015a70:	00000000 	andeq	r0, r0, r0

20015a74 <flashrom::s_isBank0>:
20015a74:	00000000 	andeq	r0, r0, r0

20015a78 <flashrom::s_nLength>:
20015a78:	00000000 	andeq	r0, r0, r0

20015a7c <g_ip_info>:
	...

20015a88 <g_mac_address>:
20015a88:	00000000 	andeq	r0, r0, r0
	...

20015a8e <s_is_dhcp>:
	...

20015a90 <s_p>:
20015a90:	00000000 	andeq	r0, r0, r0

20015a94 <s_ticker>:
20015a94:	00000000 	andeq	r0, r0, r0

20015a98 <s_mac_address>:
	...

20015aa0 <s_mac_address_arp_reply>:
	...

20015aa8 <s_id>:
20015aa8:	00000000 	andeq	r0, r0, r0

20015aac <s_recv_queue>:
	...

2001661c <s_tcb>:
	...

20016660 <s_tcp>:
	...

20016c4c <broadcast_mask>:
20016c4c:	00000000 	andeq	r0, r0, r0

20016c50 <gw_ip>:
20016c50:	00000000 	andeq	r0, r0, r0

20016c54 <on_network_mask>:
20016c54:	00000000 	andeq	r0, r0, r0

20016c58 <s_id>:
20016c58:	00000000 	andeq	r0, r0, r0

20016c5c <s_ports_allowed>:
	...

20016c7c <s_recv_queue>:
	...

2001c91c <s_send_packet>:
	...

2001cf08 <MDNS::s_nRemoteIp>:
2001cf08:	00000000 	andeq	r0, r0, r0

2001cf0c <MDNS::s_nRemotePort>:
2001cf0c:	00000000 	andeq	r0, r0, r0

2001cf10 <MDNS::s_nMulticastIp>:
2001cf10:	00000000 	andeq	r0, r0, r0

2001cf14 <MDNS::s_AnswerLocalIp>:
	...

2001d118 <MDNS::s_ServiceRecords>:
	...

2001d138 <MDNS::s_nBytesReceived>:
2001d138:	00000000 	andeq	r0, r0, r0

2001d13c <MDNS::s_ServiceRecordsData>:
	...

2001d340 <MDNS::s_pName>:
2001d340:	00000000 	andeq	r0, r0, r0

2001d344 <MDNS::s_pBuffer>:
2001d344:	00000000 	andeq	r0, r0, r0

2001d348 <Network::s_pThis>:
2001d348:	00000000 	andeq	r0, r0, r0

2001d34c <s_arp_announce>:
	...

2001d378 <s_arp_reply>:
	...

2001d3a4 <s_arp_request>:
	...

2001d3d0 <s_arp_records>:
	...

2001d550 <s_entry_current>:
2001d550:	00000000 	andeq	r0, r0, r0

2001d554 <s_dhcp_allocated_gw>:
2001d554:	00000000 	andeq	r0, r0, r0

2001d558 <s_dhcp_allocated_ip>:
2001d558:	00000000 	andeq	r0, r0, r0

2001d55c <s_dhcp_allocated_netmask>:
2001d55c:	00000000 	andeq	r0, r0, r0

2001d560 <s_dhcp_message>:
	...

2001d784 <s_dhcp_server_ip>:
2001d784:	00000000 	andeq	r0, r0, r0

2001d788 <s_groups>:
	...

2001d8a8 <s_id>:
2001d8a8:	00000000 	andeq	r0, r0, r0

2001d8ac <s_joins_allowed_index>:
2001d8ac:	00000000 	andeq	r0, r0, r0

2001d8b0 <s_leave>:
	...

2001d8e0 <s_multicast_mac>:
	...

2001d8e8 <s_report>:
	...

2001d918 <DisplayUdf::s_pThis>:
2001d918:	00000000 	andeq	r0, r0, r0

2001d91c <PropertiesConfig::s_Config>:
2001d91c:	00000000 	andeq	r0, r0, r0

2001d920 <Display::s_pThis>:
2001d920:	00000000 	andeq	r0, r0, r0

2001d924 <_ClearBuffer>:
	...

2001d9ac <Ssd1306::s_pThis>:
2001d9ac:	00000000 	andeq	r0, r0, r0

2001d9b0 <FirmwareVersion::s_FirmwareVersion>:
	...

2001d9c6 <FirmwareVersion::s_Print>:
	...

2001da08 <FirmwareVersion::s_pThis>:
2001da08:	00000000 	andeq	r0, r0, r0

2001da0c <LedBlink::s_pThis>:
2001da0c:	00000000 	andeq	r0, r0, r0

2001da10 <Hardware::s_pThis>:
2001da10:	00000000 	andeq	r0, r0, r0

2001da14 <last.0>:
2001da14:	00000000 	andeq	r0, r0, r0

2001da18 <s_micros>:
	...

2001da20 <set_timer>:
2001da20:	00000000 	andeq	r0, r0, r0

2001da24 <s_nSysTickMillis>:
2001da24:	00000000 	andeq	r0, r0, r0

2001da28 <s_nAddress>:
2001da28:	00000000 	andeq	r0, r0, r0

2001da2c <dma_current_ptp_rxdesc>:
2001da2c:	00000000 	andeq	r0, r0, r0

2001da30 <dma_current_ptp_txdesc>:
2001da30:	00000000 	andeq	r0, r0, r0

2001da34 <dma_current_rxdesc>:
2001da34:	00000000 	andeq	r0, r0, r0

2001da38 <dma_current_txdesc>:
2001da38:	00000000 	andeq	r0, r0, r0

2001da3c <enet_initpara>:
	...

2001da78 <rx_buff>:
	...

2002a4e0 <rxdesc_tab>:
	...

2002a700 <tx_buff>:
	...

2002b2e8 <txdesc_tab>:
	...

Disassembly of section .heap:

2003c000 <heap_low>:
	...

Disassembly of section .stack:

2003d800 <_sp-0x2800>:
	...
