
build_gd32/main.elf:     file format elf32-littlearm


Disassembly of section .vectors:

08007000 <__gVectors>:
 8007000:	20040000 	andcs	r0, r4, r0
 8007004:	0800857d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r8, sl, pc}
 8007008:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 800700c:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007010:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007014:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007018:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
	...
 800702c:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007030:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007034:	00000000 	andeq	r0, r0, r0
 8007038:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 800703c:	08012de9 	stmdaeq	r1, {r0, r3, r5, r6, r7, r8, sl, fp, sp}
 8007040:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007044:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007048:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 800704c:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007050:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007054:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007058:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 800705c:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007060:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007064:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007068:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 800706c:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007070:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007074:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007078:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 800707c:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007080:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007084:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007088:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 800708c:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007090:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007094:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007098:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 800709c:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 80070a0:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 80070a4:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 80070a8:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 80070ac:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 80070b0:	0800cad9 	stmdaeq	r0, {r0, r3, r4, r6, r7, r9, fp, lr, pc}
 80070b4:	0800cbf9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, r9, fp, lr, pc}
 80070b8:	0800cc69 	stmdaeq	r0, {r0, r3, r5, r6, sl, fp, lr, pc}
 80070bc:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 80070c0:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 80070c4:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 80070c8:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 80070cc:	00000000 	andeq	r0, r0, r0
 80070d0:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 80070d4:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 80070d8:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 80070dc:	0800cac1 	stmdaeq	r0, {r0, r6, r7, r9, fp, lr, pc}
 80070e0:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 80070e4:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 80070e8:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 80070ec:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 80070f0:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 80070f4:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 80070f8:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 80070fc:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007100:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007104:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007108:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 800710c:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007110:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007114:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007118:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 800711c:	0800cc89 	stmdaeq	r0, {r0, r3, r7, sl, fp, lr, pc}
 8007120:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007124:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007128:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 800712c:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007130:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007134:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007138:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 800713c:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007140:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007144:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007148:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 800714c:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007150:	00000000 	andeq	r0, r0, r0
 8007154:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007158:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 800715c:	0800cacd 	stmdaeq	r0, {r0, r2, r3, r6, r7, r9, fp, lr, pc}
 8007160:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007164:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
	...
 8007178:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 800717c:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007180:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007184:	00000000 	andeq	r0, r0, r0
 8007188:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 800718c:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
	...
 80071a0:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 80071a4:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}

Disassembly of section .text:

080071a8 <net_init>:
 80071a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80071ac:	460c      	mov	r4, r1
 80071ae:	4616      	mov	r6, r2
 80071b0:	9f06      	ldr	r7, [sp, #24]
 80071b2:	4a22      	ldr	r2, [pc, #136]	; (800723c <net_init+0x94>)
 80071b4:	461d      	mov	r5, r3
 80071b6:	1e43      	subs	r3, r0, #1
 80071b8:	3005      	adds	r0, #5
 80071ba:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 80071be:	4283      	cmp	r3, r0
 80071c0:	f802 1b01 	strb.w	r1, [r2], #1
 80071c4:	d1f9      	bne.n	80071ba <net_init+0x12>
 80071c6:	4623      	mov	r3, r4
 80071c8:	4a1d      	ldr	r2, [pc, #116]	; (8007240 <net_init+0x98>)
 80071ca:	f104 010c 	add.w	r1, r4, #12
 80071ce:	f813 0b01 	ldrb.w	r0, [r3], #1
 80071d2:	428b      	cmp	r3, r1
 80071d4:	f802 0b01 	strb.w	r0, [r2], #1
 80071d8:	d1f9      	bne.n	80071ce <net_init+0x26>
 80071da:	f04f 0800 	mov.w	r8, #0
 80071de:	4918      	ldr	r1, [pc, #96]	; (8007240 <net_init+0x98>)
 80071e0:	4816      	ldr	r0, [pc, #88]	; (800723c <net_init+0x94>)
 80071e2:	f000 f9a7 	bl	8007534 <ip_init>
 80071e6:	4815      	ldr	r0, [pc, #84]	; (800723c <net_init+0x94>)
 80071e8:	f000 f83c 	bl	8007264 <rfc3927_init>
 80071ec:	f887 8000 	strb.w	r8, [r7]
 80071f0:	782b      	ldrb	r3, [r5, #0]
 80071f2:	b163      	cbz	r3, 800720e <net_init+0x66>
 80071f4:	4632      	mov	r2, r6
 80071f6:	4912      	ldr	r1, [pc, #72]	; (8007240 <net_init+0x98>)
 80071f8:	4810      	ldr	r0, [pc, #64]	; (800723c <net_init+0x94>)
 80071fa:	f009 fe81 	bl	8010f00 <dhcp_client>
 80071fe:	4540      	cmp	r0, r8
 8007200:	da05      	bge.n	800720e <net_init+0x66>
 8007202:	480f      	ldr	r0, [pc, #60]	; (8007240 <net_init+0x98>)
 8007204:	f885 8000 	strb.w	r8, [r5]
 8007208:	f007 fffc 	bl	800f204 <rfc3927>
 800720c:	7038      	strb	r0, [r7, #0]
 800720e:	490c      	ldr	r1, [pc, #48]	; (8007240 <net_init+0x98>)
 8007210:	480a      	ldr	r0, [pc, #40]	; (800723c <net_init+0x94>)
 8007212:	f000 f883 	bl	800731c <arp_init>
 8007216:	480a      	ldr	r0, [pc, #40]	; (8007240 <net_init+0x98>)
 8007218:	f00a f892 	bl	8011340 <ip_set_ip>
 800721c:	f000 f82e 	bl	800727c <tcp_init>
 8007220:	4a07      	ldr	r2, [pc, #28]	; (8007240 <net_init+0x98>)
 8007222:	1e63      	subs	r3, r4, #1
 8007224:	340b      	adds	r4, #11
 8007226:	f812 1b01 	ldrb.w	r1, [r2], #1
 800722a:	f803 1f01 	strb.w	r1, [r3, #1]!
 800722e:	429c      	cmp	r4, r3
 8007230:	d1f9      	bne.n	8007226 <net_init+0x7e>
 8007232:	782a      	ldrb	r2, [r5, #0]
 8007234:	4b03      	ldr	r3, [pc, #12]	; (8007244 <net_init+0x9c>)
 8007236:	701a      	strb	r2, [r3, #0]
 8007238:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800723c:	20002748 	andcs	r2, r0, r8, asr #14
 8007240:	2000273c 	andcs	r2, r0, ip, lsr r7
 8007244:	2000274e 	andcs	r2, r0, lr, asr #14

08007248 <net_shutdown>:
 8007248:	b508      	push	{r3, lr}
 800724a:	f000 f97e 	bl	800754a <ip_shutdown>
 800724e:	4b04      	ldr	r3, [pc, #16]	; (8007260 <net_shutdown+0x18>)
 8007250:	781b      	ldrb	r3, [r3, #0]
 8007252:	b11b      	cbz	r3, 800725c <net_shutdown+0x14>
 8007254:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8007258:	f009 bf5a 	b.w	8011110 <dhcp_client_release>
 800725c:	bd08      	pop	{r3, pc}
 800725e:	bf00      	nop
 8007260:	2000274e 	andcs	r2, r0, lr, asr #14

08007264 <rfc3927_init>:
 8007264:	4b04      	ldr	r3, [pc, #16]	; (8007278 <rfc3927_init+0x14>)
 8007266:	1d82      	adds	r2, r0, #6
 8007268:	4290      	cmp	r0, r2
 800726a:	d100      	bne.n	800726e <rfc3927_init+0xa>
 800726c:	4770      	bx	lr
 800726e:	f810 1b01 	ldrb.w	r1, [r0], #1
 8007272:	f803 1b01 	strb.w	r1, [r3], #1
 8007276:	e7f7      	b.n	8007268 <rfc3927_init+0x4>
 8007278:	20002758 	andcs	r2, r0, r8, asr r7

0800727c <tcp_init>:
 800727c:	2206      	movs	r2, #6
 800727e:	b513      	push	{r0, r1, r4, lr}
 8007280:	4c0b      	ldr	r4, [pc, #44]	; (80072b0 <tcp_init+0x34>)
 8007282:	490c      	ldr	r1, [pc, #48]	; (80072b4 <tcp_init+0x38>)
 8007284:	18a0      	adds	r0, r4, r2
 8007286:	f008 f817 	bl	800f2b8 <memcpy.isra.0>
 800728a:	2308      	movs	r3, #8
 800728c:	2204      	movs	r2, #4
 800728e:	81a3      	strh	r3, [r4, #12]
 8007290:	4b09      	ldr	r3, [pc, #36]	; (80072b8 <tcp_init+0x3c>)
 8007292:	eb0d 0102 	add.w	r1, sp, r2
 8007296:	681b      	ldr	r3, [r3, #0]
 8007298:	f104 001a 	add.w	r0, r4, #26
 800729c:	9301      	str	r3, [sp, #4]
 800729e:	f008 f80b 	bl	800f2b8 <memcpy.isra.0>
 80072a2:	2345      	movs	r3, #69	; 0x45
 80072a4:	81e3      	strh	r3, [r4, #14]
 80072a6:	4b05      	ldr	r3, [pc, #20]	; (80072bc <tcp_init+0x40>)
 80072a8:	6163      	str	r3, [r4, #20]
 80072aa:	b002      	add	sp, #8
 80072ac:	bd10      	pop	{r4, pc}
 80072ae:	bf00      	nop
 80072b0:	20003320 	andcs	r3, r0, r0, lsr #6
 80072b4:	20002748 	andcs	r2, r0, r8, asr #14
 80072b8:	2000273c 	andcs	r2, r0, ip, lsr r7
 80072bc:	06400040 	strbeq	r0, [r0], -r0, asr #32

080072c0 <udp_init>:
 80072c0:	b570      	push	{r4, r5, r6, lr}
 80072c2:	2200      	movs	r2, #0
 80072c4:	2408      	movs	r4, #8
 80072c6:	460e      	mov	r6, r1
 80072c8:	4b0d      	ldr	r3, [pc, #52]	; (8007300 <udp_init+0x40>)
 80072ca:	490e      	ldr	r1, [pc, #56]	; (8007304 <udp_init+0x44>)
 80072cc:	3c01      	subs	r4, #1
 80072ce:	801a      	strh	r2, [r3, #0]
 80072d0:	805a      	strh	r2, [r3, #2]
 80072d2:	f841 2b04 	str.w	r2, [r1], #4
 80072d6:	f603 3394 	addw	r3, r3, #2964	; 0xb94
 80072da:	d1f7      	bne.n	80072cc <udp_init+0xc>
 80072dc:	2206      	movs	r2, #6
 80072de:	4d0a      	ldr	r5, [pc, #40]	; (8007308 <udp_init+0x48>)
 80072e0:	4b0a      	ldr	r3, [pc, #40]	; (800730c <udp_init+0x4c>)
 80072e2:	4601      	mov	r1, r0
 80072e4:	18a8      	adds	r0, r5, r2
 80072e6:	801c      	strh	r4, [r3, #0]
 80072e8:	f008 f96a 	bl	800f5c0 <memcpy.isra.0>
 80072ec:	4b08      	ldr	r3, [pc, #32]	; (8007310 <udp_init+0x50>)
 80072ee:	4630      	mov	r0, r6
 80072f0:	60eb      	str	r3, [r5, #12]
 80072f2:	4b08      	ldr	r3, [pc, #32]	; (8007314 <udp_init+0x54>)
 80072f4:	616b      	str	r3, [r5, #20]
 80072f6:	f008 f98b 	bl	800f610 <udp_set_ip>
 80072fa:	852c      	strh	r4, [r5, #40]	; 0x28
 80072fc:	bd70      	pop	{r4, r5, r6, pc}
 80072fe:	bf00      	nop
 8007300:	2000393c 	andcs	r3, r0, ip, lsr r9
 8007304:	2000391c 	andcs	r3, r0, ip, lsl r9
 8007308:	200095dc 	ldrdcs	r9, [r0], -ip
 800730c:	20003918 	andcs	r3, r0, r8, lsl r9
 8007310:	00450008 	subeq	r0, r5, r8
 8007314:	11400040 	cmpne	r0, r0, asr #32

08007318 <udp_shutdown>:
 8007318:	4770      	bx	lr
	...

0800731c <arp_init>:
 800731c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007320:	4604      	mov	r4, r0
 8007322:	460d      	mov	r5, r1
 8007324:	f000 f876 	bl	8007414 <arp_cache_init>
 8007328:	2206      	movs	r2, #6
 800732a:	4621      	mov	r1, r4
 800732c:	482e      	ldr	r0, [pc, #184]	; (80073e8 <arp_init+0xcc>)
 800732e:	682f      	ldr	r7, [r5, #0]
 8007330:	f009 fc6a 	bl	8010c08 <memcpy.isra.0>
 8007334:	4b2d      	ldr	r3, [pc, #180]	; (80073ec <arp_init+0xd0>)
 8007336:	2507      	movs	r5, #7
 8007338:	461e      	mov	r6, r3
 800733a:	22ff      	movs	r2, #255	; 0xff
 800733c:	3d01      	subs	r5, #1
 800733e:	d146      	bne.n	80073ce <arp_init+0xb2>
 8007340:	4b2b      	ldr	r3, [pc, #172]	; (80073f0 <arp_init+0xd4>)
 8007342:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 80073f4 <arp_init+0xd8>
 8007346:	2206      	movs	r2, #6
 8007348:	e9c6 3803 	strd	r3, r8, [r6, #12]
 800734c:	f44f 7380 	mov.w	r3, #256	; 0x100
 8007350:	4621      	mov	r1, r4
 8007352:	4829      	ldr	r0, [pc, #164]	; (80073f8 <arp_init+0xdc>)
 8007354:	82b3      	strh	r3, [r6, #20]
 8007356:	f009 fc57 	bl	8010c08 <memcpy.isra.0>
 800735a:	2307      	movs	r3, #7
 800735c:	4a27      	ldr	r2, [pc, #156]	; (80073fc <arp_init+0xe0>)
 800735e:	61f7      	str	r7, [r6, #28]
 8007360:	3b01      	subs	r3, #1
 8007362:	d137      	bne.n	80073d4 <arp_init+0xb8>
 8007364:	2206      	movs	r2, #6
 8007366:	4621      	mov	r1, r4
 8007368:	4825      	ldr	r0, [pc, #148]	; (8007400 <arp_init+0xe4>)
 800736a:	f8c6 7026 	str.w	r7, [r6, #38]	; 0x26
 800736e:	f009 fc4b 	bl	8010c08 <memcpy.isra.0>
 8007372:	4a24      	ldr	r2, [pc, #144]	; (8007404 <arp_init+0xe8>)
 8007374:	2306      	movs	r3, #6
 8007376:	4615      	mov	r5, r2
 8007378:	21ff      	movs	r1, #255	; 0xff
 800737a:	3b01      	subs	r3, #1
 800737c:	d22d      	bcs.n	80073da <arp_init+0xbe>
 800737e:	4b1c      	ldr	r3, [pc, #112]	; (80073f0 <arp_init+0xd4>)
 8007380:	2206      	movs	r2, #6
 8007382:	e9c5 3803 	strd	r3, r8, [r5, #12]
 8007386:	f44f 7380 	mov.w	r3, #256	; 0x100
 800738a:	4621      	mov	r1, r4
 800738c:	481e      	ldr	r0, [pc, #120]	; (8007408 <arp_init+0xec>)
 800738e:	82ab      	strh	r3, [r5, #20]
 8007390:	f009 fc3a 	bl	8010c08 <memcpy.isra.0>
 8007394:	2307      	movs	r3, #7
 8007396:	2100      	movs	r1, #0
 8007398:	4a1c      	ldr	r2, [pc, #112]	; (800740c <arp_init+0xf0>)
 800739a:	61ef      	str	r7, [r5, #28]
 800739c:	3b01      	subs	r3, #1
 800739e:	d11f      	bne.n	80073e0 <arp_init+0xc4>
 80073a0:	2206      	movs	r2, #6
 80073a2:	4d1b      	ldr	r5, [pc, #108]	; (8007410 <arp_init+0xf4>)
 80073a4:	4621      	mov	r1, r4
 80073a6:	18a8      	adds	r0, r5, r2
 80073a8:	f009 fc2e 	bl	8010c08 <memcpy.isra.0>
 80073ac:	4b10      	ldr	r3, [pc, #64]	; (80073f0 <arp_init+0xd4>)
 80073ae:	4621      	mov	r1, r4
 80073b0:	e9c5 3803 	strd	r3, r8, [r5, #12]
 80073b4:	f44f 7300 	mov.w	r3, #512	; 0x200
 80073b8:	f105 0016 	add.w	r0, r5, #22
 80073bc:	2206      	movs	r2, #6
 80073be:	82ab      	strh	r3, [r5, #20]
 80073c0:	f009 fc22 	bl	8010c08 <memcpy.isra.0>
 80073c4:	61ef      	str	r7, [r5, #28]
 80073c6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80073ca:	f009 bc27 	b.w	8010c1c <arp_announce>
 80073ce:	f803 2b01 	strb.w	r2, [r3], #1
 80073d2:	e7b3      	b.n	800733c <arp_init+0x20>
 80073d4:	f802 5b01 	strb.w	r5, [r2], #1
 80073d8:	e7c2      	b.n	8007360 <arp_init+0x44>
 80073da:	f802 1b01 	strb.w	r1, [r2], #1
 80073de:	e7cc      	b.n	800737a <arp_init+0x5e>
 80073e0:	f802 1b01 	strb.w	r1, [r2], #1
 80073e4:	e7da      	b.n	800739c <arp_init+0x80>
 80073e6:	bf00      	nop
 80073e8:	2000a072 	andcs	sl, r0, r2, ror r0
 80073ec:	2000a06c 	andcs	sl, r0, ip, rrx
 80073f0:	01000608 	tsteq	r0, r8, lsl #12
 80073f4:	04060008 	streq	r0, [r6], #-8
 80073f8:	2000a082 	andcs	sl, r0, r2, lsl #1
 80073fc:	2000a08c 	andcs	sl, r0, ip, lsl #1
 8007400:	2000a0ca 	andcs	sl, r0, sl, asr #1
 8007404:	2000a0c4 	andcs	sl, r0, r4, asr #1
 8007408:	2000a0da 	ldrdcs	sl, [r0], -sl	; <UNPREDICTABLE>
 800740c:	2000a0e4 	andcs	sl, r0, r4, ror #1
 8007410:	2000a098 	mulcs	r0, r8, r0

08007414 <arp_cache_init>:
 8007414:	2300      	movs	r3, #0
 8007416:	4618      	mov	r0, r3
 8007418:	4a09      	ldr	r2, [pc, #36]	; (8007440 <arp_cache_init+0x2c>)
 800741a:	b510      	push	{r4, lr}
 800741c:	8013      	strh	r3, [r2, #0]
 800741e:	4a09      	ldr	r2, [pc, #36]	; (8007444 <arp_cache_init+0x30>)
 8007420:	4611      	mov	r1, r2
 8007422:	f842 0c04 	str.w	r0, [r2, #-4]
 8007426:	1d94      	adds	r4, r2, #6
 8007428:	42a1      	cmp	r1, r4
 800742a:	d105      	bne.n	8007438 <arp_cache_init+0x24>
 800742c:	3303      	adds	r3, #3
 800742e:	2b60      	cmp	r3, #96	; 0x60
 8007430:	f102 020c 	add.w	r2, r2, #12
 8007434:	d1f4      	bne.n	8007420 <arp_cache_init+0xc>
 8007436:	bd10      	pop	{r4, pc}
 8007438:	f801 0b01 	strb.w	r0, [r1], #1
 800743c:	e7f4      	b.n	8007428 <arp_cache_init+0x14>
 800743e:	bf00      	nop
 8007440:	2000a270 	andcs	sl, r0, r0, ror r2
 8007444:	2000a0f4 	strdcs	sl, [r0], -r4

08007448 <igmp_init>:
 8007448:	2200      	movs	r2, #0
 800744a:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800744e:	4605      	mov	r5, r0
 8007450:	4608      	mov	r0, r1
 8007452:	4611      	mov	r1, r2
 8007454:	4b23      	ldr	r3, [pc, #140]	; (80074e4 <igmp_init+0x9c>)
 8007456:	f103 0408 	add.w	r4, r3, #8
 800745a:	42a3      	cmp	r3, r4
 800745c:	d13e      	bne.n	80074dc <igmp_init+0x94>
 800745e:	3201      	adds	r2, #1
 8007460:	2a24      	cmp	r2, #36	; 0x24
 8007462:	d1f8      	bne.n	8007456 <igmp_init+0xe>
 8007464:	2600      	movs	r6, #0
 8007466:	4b20      	ldr	r3, [pc, #128]	; (80074e8 <igmp_init+0xa0>)
 8007468:	4c20      	ldr	r4, [pc, #128]	; (80074ec <igmp_init+0xa4>)
 800746a:	601e      	str	r6, [r3, #0]
 800746c:	4b20      	ldr	r3, [pc, #128]	; (80074f0 <igmp_init+0xa8>)
 800746e:	f44f 5700 	mov.w	r7, #8192	; 0x2000
 8007472:	801e      	strh	r6, [r3, #0]
 8007474:	f009 fec4 	bl	8011200 <igmp_set_ip>
 8007478:	2201      	movs	r2, #1
 800747a:	4b1e      	ldr	r3, [pc, #120]	; (80074f4 <igmp_init+0xac>)
 800747c:	4629      	mov	r1, r5
 800747e:	801a      	strh	r2, [r3, #0]
 8007480:	225e      	movs	r2, #94	; 0x5e
 8007482:	709a      	strb	r2, [r3, #2]
 8007484:	2206      	movs	r2, #6
 8007486:	18a0      	adds	r0, r4, r2
 8007488:	f009 fe70 	bl	801116c <memcpy.isra.0>
 800748c:	f240 4394 	movw	r3, #1172	; 0x494
 8007490:	8463      	strh	r3, [r4, #34]	; 0x22
 8007492:	2316      	movs	r3, #22
 8007494:	f8df 9060 	ldr.w	r9, [pc, #96]	; 80074f8 <igmp_init+0xb0>
 8007498:	f8df 8060 	ldr.w	r8, [pc, #96]	; 80074fc <igmp_init+0xb4>
 800749c:	84e3      	strh	r3, [r4, #38]	; 0x26
 800749e:	f8c4 9014 	str.w	r9, [r4, #20]
 80074a2:	4b17      	ldr	r3, [pc, #92]	; (8007500 <igmp_init+0xb8>)
 80074a4:	f8c4 800c 	str.w	r8, [r4, #12]
 80074a8:	8227      	strh	r7, [r4, #16]
 80074aa:	84a6      	strh	r6, [r4, #36]	; 0x24
 80074ac:	4c15      	ldr	r4, [pc, #84]	; (8007504 <igmp_init+0xbc>)
 80074ae:	2206      	movs	r2, #6
 80074b0:	6023      	str	r3, [r4, #0]
 80074b2:	f44f 7300 	mov.w	r3, #512	; 0x200
 80074b6:	18a0      	adds	r0, r4, r2
 80074b8:	80a3      	strh	r3, [r4, #4]
 80074ba:	4629      	mov	r1, r5
 80074bc:	f009 fe56 	bl	801116c <memcpy.isra.0>
 80074c0:	23e0      	movs	r3, #224	; 0xe0
 80074c2:	83e3      	strh	r3, [r4, #30]
 80074c4:	f44f 13b8 	mov.w	r3, #1507328	; 0x170000
 80074c8:	4a0f      	ldr	r2, [pc, #60]	; (8007508 <igmp_init+0xc0>)
 80074ca:	f8c4 9014 	str.w	r9, [r4, #20]
 80074ce:	e9c4 2308 	strd	r2, r3, [r4, #32]
 80074d2:	f8c4 800c 	str.w	r8, [r4, #12]
 80074d6:	8227      	strh	r7, [r4, #16]
 80074d8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80074dc:	f803 1b01 	strb.w	r1, [r3], #1
 80074e0:	e7bb      	b.n	800745a <igmp_init+0x12>
 80074e2:	bf00      	nop
 80074e4:	2000a4a8 	andcs	sl, r0, r8, lsr #9
 80074e8:	2000a5cc 	andcs	sl, r0, ip, asr #11
 80074ec:	2000a608 	andcs	sl, r0, r8, lsl #12
 80074f0:	2000a5c8 	andcs	sl, r0, r8, asr #11
 80074f4:	2000a600 	andcs	sl, r0, r0, lsl #12
 80074f8:	02010040 	andeq	r0, r1, #64	; 0x40
 80074fc:	00460008 	subeq	r0, r6, r8
 8007500:	005e0001 	subseq	r0, lr, r1
 8007504:	2000a5d0 	ldrdcs	sl, [r0], -r0
 8007508:	04940200 	ldreq	r0, [r4], #512	; 0x200

0800750c <igmp_shutdown>:
 800750c:	b570      	push	{r4, r5, r6, lr}
 800750e:	2500      	movs	r5, #0
 8007510:	462e      	mov	r6, r5
 8007512:	4c07      	ldr	r4, [pc, #28]	; (8007530 <igmp_shutdown+0x24>)
 8007514:	6820      	ldr	r0, [r4, #0]
 8007516:	b120      	cbz	r0, 8007522 <igmp_shutdown+0x16>
 8007518:	f009 fece 	bl	80112b8 <igmp_leave>
 800751c:	6026      	str	r6, [r4, #0]
 800751e:	7166      	strb	r6, [r4, #5]
 8007520:	7126      	strb	r6, [r4, #4]
 8007522:	3501      	adds	r5, #1
 8007524:	2d24      	cmp	r5, #36	; 0x24
 8007526:	f104 0408 	add.w	r4, r4, #8
 800752a:	d1f3      	bne.n	8007514 <igmp_shutdown+0x8>
 800752c:	bd70      	pop	{r4, r5, r6, pc}
 800752e:	bf00      	nop
 8007530:	2000a4a8 	andcs	sl, r0, r8, lsr #9

08007534 <ip_init>:
 8007534:	b538      	push	{r3, r4, r5, lr}
 8007536:	4604      	mov	r4, r0
 8007538:	460d      	mov	r5, r1
 800753a:	f7ff fec1 	bl	80072c0 <udp_init>
 800753e:	4629      	mov	r1, r5
 8007540:	4620      	mov	r0, r4
 8007542:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8007546:	f7ff bf7f 	b.w	8007448 <igmp_init>

0800754a <ip_shutdown>:
 800754a:	b508      	push	{r3, lr}
 800754c:	f7ff ffde 	bl	800750c <igmp_shutdown>
 8007550:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8007554:	f7ff bee0 	b.w	8007318 <udp_shutdown>

08007558 <console_init>:
 8007558:	b508      	push	{r3, lr}
 800755a:	f00b fbe7 	bl	8012d2c <uart0_init>
 800755e:	4804      	ldr	r0, [pc, #16]	; (8007570 <console_init+0x18>)
 8007560:	f00b fc14 	bl	8012d8c <uart0_puts>
 8007564:	4803      	ldr	r0, [pc, #12]	; (8007574 <console_init+0x1c>)
 8007566:	f00b fc11 	bl	8012d8c <uart0_puts>
 800756a:	2000      	movs	r0, #0
 800756c:	bd08      	pop	{r3, pc}
 800756e:	bf00      	nop
 8007570:	08014d38 	stmdaeq	r1, {r3, r4, r5, r8, sl, fp, lr}
 8007574:	08017074 	stmdaeq	r1, {r2, r4, r5, r6, ip, sp, lr}

08007578 <net_handle>:
 8007578:	b510      	push	{r4, lr}
 800757a:	4c0c      	ldr	r4, [pc, #48]	; (80075ac <net_handle+0x34>)
 800757c:	4620      	mov	r0, r4
 800757e:	f00c faf1 	bl	8013b64 <emac_eth_recv>
 8007582:	2800      	cmp	r0, #0
 8007584:	dd07      	ble.n	8007596 <net_handle+0x1e>
 8007586:	6820      	ldr	r0, [r4, #0]
 8007588:	8983      	ldrh	r3, [r0, #12]
 800758a:	2b08      	cmp	r3, #8
 800758c:	d107      	bne.n	800759e <net_handle+0x26>
 800758e:	f000 fa6f 	bl	8007a70 <ip_handle>
 8007592:	f00c fafb 	bl	8013b8c <emac_free_pkt>
 8007596:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800759a:	f007 be23 	b.w	800f1e4 <net_timers_run>
 800759e:	f5b3 6fc1 	cmp.w	r3, #1544	; 0x608
 80075a2:	d1f6      	bne.n	8007592 <net_handle+0x1a>
 80075a4:	f000 fa08 	bl	80079b8 <arp_handle>
 80075a8:	e7f3      	b.n	8007592 <net_handle+0x1a>
 80075aa:	bf00      	nop
 80075ac:	20002750 	andcs	r2, r0, r0, asr r7

080075b0 <tcp_handle>:
 80075b0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80075b4:	4605      	mov	r5, r0
 80075b6:	8c43      	ldrh	r3, [r0, #34]	; 0x22
 80075b8:	f8b0 8010 	ldrh.w	r8, [r0, #16]
 80075bc:	ba5b      	rev16	r3, r3
 80075be:	8443      	strh	r3, [r0, #34]	; 0x22
 80075c0:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 80075c2:	f890 902e 	ldrb.w	r9, [r0, #46]	; 0x2e
 80075c6:	ba5b      	rev16	r3, r3
 80075c8:	8483      	strh	r3, [r0, #36]	; 0x24
 80075ca:	f007 fe7f 	bl	800f2cc <_bswap32>
 80075ce:	8e2b      	ldrh	r3, [r5, #48]	; 0x30
 80075d0:	4ca5      	ldr	r4, [pc, #660]	; (8007868 <tcp_handle+0x2b8>)
 80075d2:	ba5b      	rev16	r3, r3
 80075d4:	862b      	strh	r3, [r5, #48]	; 0x30
 80075d6:	8eab      	ldrh	r3, [r5, #52]	; 0x34
 80075d8:	8822      	ldrh	r2, [r4, #0]
 80075da:	ba5b      	rev16	r3, r3
 80075dc:	86ab      	strh	r3, [r5, #52]	; 0x34
 80075de:	8cab      	ldrh	r3, [r5, #36]	; 0x24
 80075e0:	429a      	cmp	r2, r3
 80075e2:	d14d      	bne.n	8007680 <tcp_handle+0xd0>
 80075e4:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 80075e8:	2b01      	cmp	r3, #1
 80075ea:	d00d      	beq.n	8007608 <tcp_handle+0x58>
 80075ec:	2204      	movs	r2, #4
 80075ee:	4668      	mov	r0, sp
 80075f0:	f105 011a 	add.w	r1, r5, #26
 80075f4:	f007 fe60 	bl	800f2b8 <memcpy.isra.0>
 80075f8:	8862      	ldrh	r2, [r4, #2]
 80075fa:	8c6b      	ldrh	r3, [r5, #34]	; 0x22
 80075fc:	429a      	cmp	r2, r3
 80075fe:	d13f      	bne.n	8007680 <tcp_handle+0xd0>
 8007600:	6862      	ldr	r2, [r4, #4]
 8007602:	9b00      	ldr	r3, [sp, #0]
 8007604:	429a      	cmp	r2, r3
 8007606:	d13b      	bne.n	8007680 <tcp_handle+0xd0>
 8007608:	2204      	movs	r2, #4
 800760a:	f105 012a 	add.w	r1, r5, #42	; 0x2a
 800760e:	eb0d 0002 	add.w	r0, sp, r2
 8007612:	f007 fe51 	bl	800f2b8 <memcpy.isra.0>
 8007616:	2204      	movs	r2, #4
 8007618:	f105 0126 	add.w	r1, r5, #38	; 0x26
 800761c:	eb0d 0002 	add.w	r0, sp, r2
 8007620:	9e01      	ldr	r6, [sp, #4]
 8007622:	f007 fe49 	bl	800f2b8 <memcpy.isra.0>
 8007626:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 800762a:	9f01      	ldr	r7, [sp, #4]
 800762c:	2a01      	cmp	r2, #1
 800762e:	f8b5 a030 	ldrh.w	sl, [r5, #48]	; 0x30
 8007632:	d01b      	beq.n	800766c <tcp_handle+0xbc>
 8007634:	1ed3      	subs	r3, r2, #3
 8007636:	2b07      	cmp	r3, #7
 8007638:	d822      	bhi.n	8007680 <tcp_handle+0xd0>
 800763a:	fa98 f198 	rev16.w	r1, r8
 800763e:	f64f 78ec 	movw	r8, #65516	; 0xffec
 8007642:	ea4f 1319 	mov.w	r3, r9, lsr #4
 8007646:	eba8 0883 	sub.w	r8, r8, r3, lsl #2
 800764a:	4488      	add	r8, r1
 800764c:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 800764e:	f895 002f 	ldrb.w	r0, [r5, #47]	; 0x2f
 8007652:	ea4f 0983 	mov.w	r9, r3, lsl #2
 8007656:	fa1f f888 	uxth.w	r8, r8
 800765a:	2900      	cmp	r1, #0
 800765c:	d142      	bne.n	80076e4 <tcp_handle+0x134>
 800765e:	f1b8 0f00 	cmp.w	r8, #0
 8007662:	d16b      	bne.n	800773c <tcp_handle+0x18c>
 8007664:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007666:	42bb      	cmp	r3, r7
 8007668:	d168      	bne.n	800773c <tcp_handle+0x18c>
 800766a:	e048      	b.n	80076fe <tcp_handle+0x14e>
 800766c:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 8007670:	075a      	lsls	r2, r3, #29
 8007672:	d405      	bmi.n	8007680 <tcp_handle+0xd0>
 8007674:	06d8      	lsls	r0, r3, #27
 8007676:	d506      	bpl.n	8007686 <tcp_handle+0xd6>
 8007678:	4628      	mov	r0, r5
 800767a:	497b      	ldr	r1, [pc, #492]	; (8007868 <tcp_handle+0x2b8>)
 800767c:	f007 fef2 	bl	800f464 <_send_reset>
 8007680:	b004      	add	sp, #16
 8007682:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007686:	0799      	lsls	r1, r3, #30
 8007688:	d5fa      	bpl.n	8007680 <tcp_handle+0xd0>
 800768a:	f895 2023 	ldrb.w	r2, [r5, #35]	; 0x23
 800768e:	f895 3022 	ldrb.w	r3, [r5, #34]	; 0x22
 8007692:	4668      	mov	r0, sp
 8007694:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8007698:	f105 011a 	add.w	r1, r5, #26
 800769c:	2204      	movs	r2, #4
 800769e:	8063      	strh	r3, [r4, #2]
 80076a0:	f007 fe0a 	bl	800f2b8 <memcpy.isra.0>
 80076a4:	2206      	movs	r2, #6
 80076a6:	9b00      	ldr	r3, [sp, #0]
 80076a8:	18a9      	adds	r1, r5, r2
 80076aa:	4870      	ldr	r0, [pc, #448]	; (800786c <tcp_handle+0x2bc>)
 80076ac:	6063      	str	r3, [r4, #4]
 80076ae:	f007 fe03 	bl	800f2b8 <memcpy.isra.0>
 80076b2:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80076b4:	1c7b      	adds	r3, r7, #1
 80076b6:	e9cd 2301 	strd	r2, r3, [sp, #4]
 80076ba:	6363      	str	r3, [r4, #52]	; 0x34
 80076bc:	2312      	movs	r3, #18
 80076be:	486a      	ldr	r0, [pc, #424]	; (8007868 <tcp_handle+0x2b8>)
 80076c0:	a901      	add	r1, sp, #4
 80076c2:	f88d 300c 	strb.w	r3, [sp, #12]
 80076c6:	e9c4 7608 	strd	r7, r6, [r4, #32]
 80076ca:	63e7      	str	r7, [r4, #60]	; 0x3c
 80076cc:	f8c4 a018 	str.w	sl, [r4, #24]
 80076d0:	f007 fe22 	bl	800f318 <_tcp_send_package>
 80076d4:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80076d6:	1c5a      	adds	r2, r3, #1
 80076d8:	e9c4 3204 	strd	r3, r2, [r4, #16]
 80076dc:	2303      	movs	r3, #3
 80076de:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 80076e2:	e7cd      	b.n	8007680 <tcp_handle+0xd0>
 80076e4:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80076e6:	eba3 0c07 	sub.w	ip, r3, r7
 80076ea:	f1b8 0f00 	cmp.w	r8, #0
 80076ee:	d10d      	bne.n	800770c <tcp_handle+0x15c>
 80076f0:	f1bc 0f00 	cmp.w	ip, #0
 80076f4:	dc22      	bgt.n	800773c <tcp_handle+0x18c>
 80076f6:	1afb      	subs	r3, r7, r3
 80076f8:	1a5b      	subs	r3, r3, r1
 80076fa:	2b00      	cmp	r3, #0
 80076fc:	da1e      	bge.n	800773c <tcp_handle+0x18c>
 80076fe:	0743      	lsls	r3, r0, #29
 8007700:	d530      	bpl.n	8007764 <tcp_handle+0x1b4>
 8007702:	8821      	ldrh	r1, [r4, #0]
 8007704:	4858      	ldr	r0, [pc, #352]	; (8007868 <tcp_handle+0x2b8>)
 8007706:	f007 fdbd 	bl	800f284 <_init_tcb>
 800770a:	e7b9      	b.n	8007680 <tcp_handle+0xd0>
 800770c:	f1bc 0f00 	cmp.w	ip, #0
 8007710:	dc06      	bgt.n	8007720 <tcp_handle+0x170>
 8007712:	eba7 0c03 	sub.w	ip, r7, r3
 8007716:	ebac 0c01 	sub.w	ip, ip, r1
 800771a:	f1bc 0f00 	cmp.w	ip, #0
 800771e:	dbee      	blt.n	80076fe <tcp_handle+0x14e>
 8007720:	eb08 0c07 	add.w	ip, r8, r7
 8007724:	f103 0e01 	add.w	lr, r3, #1
 8007728:	ebae 0e0c 	sub.w	lr, lr, ip
 800772c:	f1be 0f00 	cmp.w	lr, #0
 8007730:	dc04      	bgt.n	800773c <tcp_handle+0x18c>
 8007732:	43db      	mvns	r3, r3
 8007734:	1a5b      	subs	r3, r3, r1
 8007736:	eb13 0f0c 	cmn.w	r3, ip
 800773a:	d4e0      	bmi.n	80076fe <tcp_handle+0x14e>
 800773c:	0742      	lsls	r2, r0, #29
 800773e:	d505      	bpl.n	800774c <tcp_handle+0x19c>
 8007740:	8821      	ldrh	r1, [r4, #0]
 8007742:	4849      	ldr	r0, [pc, #292]	; (8007868 <tcp_handle+0x2b8>)
 8007744:	f007 fd9e 	bl	800f284 <_init_tcb>
 8007748:	2301      	movs	r3, #1
 800774a:	e7c8      	b.n	80076de <tcp_handle+0x12e>
 800774c:	6963      	ldr	r3, [r4, #20]
 800774e:	9301      	str	r3, [sp, #4]
 8007750:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007752:	9302      	str	r3, [sp, #8]
 8007754:	2310      	movs	r3, #16
 8007756:	4844      	ldr	r0, [pc, #272]	; (8007868 <tcp_handle+0x2b8>)
 8007758:	a901      	add	r1, sp, #4
 800775a:	f88d 300c 	strb.w	r3, [sp, #12]
 800775e:	f007 fddb 	bl	800f318 <_tcp_send_package>
 8007762:	e78d      	b.n	8007680 <tcp_handle+0xd0>
 8007764:	0781      	lsls	r1, r0, #30
 8007766:	d505      	bpl.n	8007774 <tcp_handle+0x1c4>
 8007768:	2a03      	cmp	r2, #3
 800776a:	d0ed      	beq.n	8007748 <tcp_handle+0x198>
 800776c:	4628      	mov	r0, r5
 800776e:	493e      	ldr	r1, [pc, #248]	; (8007868 <tcp_handle+0x2b8>)
 8007770:	f007 fe78 	bl	800f464 <_send_reset>
 8007774:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 8007778:	06da      	lsls	r2, r3, #27
 800777a:	d581      	bpl.n	8007680 <tcp_handle+0xd0>
 800777c:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8007780:	3b03      	subs	r3, #3
 8007782:	2b07      	cmp	r3, #7
 8007784:	d818      	bhi.n	80077b8 <tcp_handle+0x208>
 8007786:	e8df f003 	tbb	[pc, r3]
 800778a:	75757504 	ldrbvc	r7, [r5, #-1284]!	; 0xfffffafc
 800778e:	a59c7575 	ldrge	r7, [ip, #1397]	; 0x575
 8007792:	6923      	ldr	r3, [r4, #16]
 8007794:	1b9b      	subs	r3, r3, r6
 8007796:	2b00      	cmp	r3, #0
 8007798:	dc0a      	bgt.n	80077b0 <tcp_handle+0x200>
 800779a:	6963      	ldr	r3, [r4, #20]
 800779c:	1af3      	subs	r3, r6, r3
 800779e:	2b00      	cmp	r3, #0
 80077a0:	dc06      	bgt.n	80077b0 <tcp_handle+0x200>
 80077a2:	2304      	movs	r3, #4
 80077a4:	e9c4 7608 	strd	r7, r6, [r4, #32]
 80077a8:	f8c4 a018 	str.w	sl, [r4, #24]
 80077ac:	6126      	str	r6, [r4, #16]
 80077ae:	e796      	b.n	80076de <tcp_handle+0x12e>
 80077b0:	4628      	mov	r0, r5
 80077b2:	492d      	ldr	r1, [pc, #180]	; (8007868 <tcp_handle+0x2b8>)
 80077b4:	f007 fe56 	bl	800f464 <_send_reset>
 80077b8:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 80077bc:	3b04      	subs	r3, #4
 80077be:	2b02      	cmp	r3, #2
 80077c0:	d830      	bhi.n	8007824 <tcp_handle+0x274>
 80077c2:	f1b8 0f00 	cmp.w	r8, #0
 80077c6:	d02d      	beq.n	8007824 <tcp_handle+0x274>
 80077c8:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80077ca:	42bb      	cmp	r3, r7
 80077cc:	f040 8091 	bne.w	80078f2 <tcp_handle+0x342>
 80077d0:	f240 53b6 	movw	r3, #1462	; 0x5b6
 80077d4:	f8df a098 	ldr.w	sl, [pc, #152]	; 8007870 <tcp_handle+0x2c0>
 80077d8:	f105 0122 	add.w	r1, r5, #34	; 0x22
 80077dc:	f8ba 7000 	ldrh.w	r7, [sl]
 80077e0:	4642      	mov	r2, r8
 80077e2:	435f      	muls	r7, r3
 80077e4:	1d38      	adds	r0, r7, #4
 80077e6:	4449      	add	r1, r9
 80077e8:	4450      	add	r0, sl
 80077ea:	f007 fd65 	bl	800f2b8 <memcpy.isra.0>
 80077ee:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 80077f0:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80077f2:	f2a2 52b4 	subw	r2, r2, #1460	; 0x5b4
 80077f6:	8722      	strh	r2, [r4, #56]	; 0x38
 80077f8:	6962      	ldr	r2, [r4, #20]
 80077fa:	4443      	add	r3, r8
 80077fc:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8007800:	6363      	str	r3, [r4, #52]	; 0x34
 8007802:	2310      	movs	r3, #16
 8007804:	4457      	add	r7, sl
 8007806:	4818      	ldr	r0, [pc, #96]	; (8007868 <tcp_handle+0x2b8>)
 8007808:	f8a7 85b8 	strh.w	r8, [r7, #1464]	; 0x5b8
 800780c:	a901      	add	r1, sp, #4
 800780e:	f88d 300c 	strb.w	r3, [sp, #12]
 8007812:	f007 fd81 	bl	800f318 <_tcp_send_package>
 8007816:	f8ba 3000 	ldrh.w	r3, [sl]
 800781a:	3301      	adds	r3, #1
 800781c:	f003 0301 	and.w	r3, r3, #1
 8007820:	f8aa 3000 	strh.w	r3, [sl]
 8007824:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8007828:	2b02      	cmp	r3, #2
 800782a:	f67f af29 	bls.w	8007680 <tcp_handle+0xd0>
 800782e:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 8007832:	07db      	lsls	r3, r3, #31
 8007834:	f57f af24 	bpl.w	8007680 <tcp_handle+0xd0>
 8007838:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800783a:	6962      	ldr	r2, [r4, #20]
 800783c:	3301      	adds	r3, #1
 800783e:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8007842:	6363      	str	r3, [r4, #52]	; 0x34
 8007844:	2310      	movs	r3, #16
 8007846:	4808      	ldr	r0, [pc, #32]	; (8007868 <tcp_handle+0x2b8>)
 8007848:	a901      	add	r1, sp, #4
 800784a:	f88d 300c 	strb.w	r3, [sp, #12]
 800784e:	f007 fd63 	bl	800f318 <_tcp_send_package>
 8007852:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8007856:	2b05      	cmp	r3, #5
 8007858:	d053      	beq.n	8007902 <tcp_handle+0x352>
 800785a:	d84d      	bhi.n	80078f8 <tcp_handle+0x348>
 800785c:	3b03      	subs	r3, #3
 800785e:	2b01      	cmp	r3, #1
 8007860:	f63f af0e 	bhi.w	8007680 <tcp_handle+0xd0>
 8007864:	2307      	movs	r3, #7
 8007866:	e73a      	b.n	80076de <tcp_handle+0x12e>
 8007868:	200032dc 	ldrdcs	r3, [r0], -ip
 800786c:	200032e4 	andcs	r3, r0, r4, ror #5
 8007870:	2000276c 	andcs	r2, r0, ip, ror #14
 8007874:	6923      	ldr	r3, [r4, #16]
 8007876:	1b99      	subs	r1, r3, r6
 8007878:	d513      	bpl.n	80078a2 <tcp_handle+0x2f2>
 800787a:	6962      	ldr	r2, [r4, #20]
 800787c:	1ab2      	subs	r2, r6, r2
 800787e:	2a00      	cmp	r2, #0
 8007880:	dc0f      	bgt.n	80078a2 <tcp_handle+0x2f2>
 8007882:	6126      	str	r6, [r4, #16]
 8007884:	6a23      	ldr	r3, [r4, #32]
 8007886:	1bda      	subs	r2, r3, r7
 8007888:	2a00      	cmp	r2, #0
 800788a:	db05      	blt.n	8007898 <tcp_handle+0x2e8>
 800788c:	42bb      	cmp	r3, r7
 800788e:	d193      	bne.n	80077b8 <tcp_handle+0x208>
 8007890:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007892:	1b9b      	subs	r3, r3, r6
 8007894:	2b00      	cmp	r3, #0
 8007896:	dc8f      	bgt.n	80077b8 <tcp_handle+0x208>
 8007898:	e9c4 7608 	strd	r7, r6, [r4, #32]
 800789c:	f8c4 a018 	str.w	sl, [r4, #24]
 80078a0:	e78a      	b.n	80077b8 <tcp_handle+0x208>
 80078a2:	1af3      	subs	r3, r6, r3
 80078a4:	2b00      	cmp	r3, #0
 80078a6:	dc06      	bgt.n	80078b6 <tcp_handle+0x306>
 80078a8:	2900      	cmp	r1, #0
 80078aa:	dc85      	bgt.n	80077b8 <tcp_handle+0x208>
 80078ac:	6963      	ldr	r3, [r4, #20]
 80078ae:	1af3      	subs	r3, r6, r3
 80078b0:	2b00      	cmp	r3, #0
 80078b2:	dc81      	bgt.n	80077b8 <tcp_handle+0x208>
 80078b4:	e7e6      	b.n	8007884 <tcp_handle+0x2d4>
 80078b6:	6963      	ldr	r3, [r4, #20]
 80078b8:	1b9a      	subs	r2, r3, r6
 80078ba:	2a00      	cmp	r2, #0
 80078bc:	f6bf af7c 	bge.w	80077b8 <tcp_handle+0x208>
 80078c0:	e745      	b.n	800774e <tcp_handle+0x19e>
 80078c2:	6963      	ldr	r3, [r4, #20]
 80078c4:	42b3      	cmp	r3, r6
 80078c6:	f47f af77 	bne.w	80077b8 <tcp_handle+0x208>
 80078ca:	8821      	ldrh	r1, [r4, #0]
 80078cc:	480f      	ldr	r0, [pc, #60]	; (800790c <tcp_handle+0x35c>)
 80078ce:	f007 fcd9 	bl	800f284 <_init_tcb>
 80078d2:	e771      	b.n	80077b8 <tcp_handle+0x208>
 80078d4:	6963      	ldr	r3, [r4, #20]
 80078d6:	42b3      	cmp	r3, r6
 80078d8:	f47f af6e 	bne.w	80077b8 <tcp_handle+0x208>
 80078dc:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80078de:	480b      	ldr	r0, [pc, #44]	; (800790c <tcp_handle+0x35c>)
 80078e0:	9302      	str	r3, [sp, #8]
 80078e2:	2310      	movs	r3, #16
 80078e4:	a901      	add	r1, sp, #4
 80078e6:	9601      	str	r6, [sp, #4]
 80078e8:	f88d 300c 	strb.w	r3, [sp, #12]
 80078ec:	f007 fd14 	bl	800f318 <_tcp_send_package>
 80078f0:	e762      	b.n	80077b8 <tcp_handle+0x208>
 80078f2:	6962      	ldr	r2, [r4, #20]
 80078f4:	9201      	str	r2, [sp, #4]
 80078f6:	e72c      	b.n	8007752 <tcp_handle+0x1a2>
 80078f8:	2b06      	cmp	r3, #6
 80078fa:	f47f aec1 	bne.w	8007680 <tcp_handle+0xd0>
 80078fe:	230a      	movs	r3, #10
 8007900:	e6ed      	b.n	80076de <tcp_handle+0x12e>
 8007902:	6963      	ldr	r3, [r4, #20]
 8007904:	42b3      	cmp	r3, r6
 8007906:	d0fa      	beq.n	80078fe <tcp_handle+0x34e>
 8007908:	2308      	movs	r3, #8
 800790a:	e6e8      	b.n	80076de <tcp_handle+0x12e>
 800790c:	200032dc 	ldrdcs	r3, [r0], -ip

08007910 <udp_handle>:
 8007910:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8007914:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 8007916:	4607      	mov	r7, r0
 8007918:	ba5b      	rev16	r3, r3
 800791a:	b29b      	uxth	r3, r3
 800791c:	f1a3 0244 	sub.w	r2, r3, #68	; 0x44
 8007920:	2a01      	cmp	r2, #1
 8007922:	d904      	bls.n	800792e <udp_handle+0x1e>
 8007924:	2b7b      	cmp	r3, #123	; 0x7b
 8007926:	d002      	beq.n	800792e <udp_handle+0x1e>
 8007928:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800792c:	d308      	bcc.n	8007940 <udp_handle+0x30>
 800792e:	2400      	movs	r4, #0
 8007930:	4a1f      	ldr	r2, [pc, #124]	; (80079b0 <udp_handle+0xa0>)
 8007932:	f852 1b04 	ldr.w	r1, [r2], #4
 8007936:	4299      	cmp	r1, r3
 8007938:	d005      	beq.n	8007946 <udp_handle+0x36>
 800793a:	3401      	adds	r4, #1
 800793c:	2c08      	cmp	r4, #8
 800793e:	d1f8      	bne.n	8007932 <udp_handle+0x22>
 8007940:	b002      	add	sp, #8
 8007942:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007946:	f640 3394 	movw	r3, #2964	; 0xb94
 800794a:	8cfe      	ldrh	r6, [r7, #38]	; 0x26
 800794c:	435c      	muls	r4, r3
 800794e:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 8007952:	ba76      	rev16	r6, r6
 8007954:	3e08      	subs	r6, #8
 8007956:	b2b6      	uxth	r6, r6
 8007958:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 800795c:	bf28      	it	cs
 800795e:	f44f 66b8 	movcs.w	r6, #1472	; 0x5c0
 8007962:	f8df 8050 	ldr.w	r8, [pc, #80]	; 80079b4 <udp_handle+0xa4>
 8007966:	1d20      	adds	r0, r4, #4
 8007968:	f838 5004 	ldrh.w	r5, [r8, r4]
 800796c:	4632      	mov	r2, r6
 800796e:	435d      	muls	r5, r3
 8007970:	4428      	add	r0, r5
 8007972:	f107 012a 	add.w	r1, r7, #42	; 0x2a
 8007976:	4440      	add	r0, r8
 8007978:	f007 fe22 	bl	800f5c0 <memcpy.isra.0>
 800797c:	2204      	movs	r2, #4
 800797e:	f107 011a 	add.w	r1, r7, #26
 8007982:	eb0d 0002 	add.w	r0, sp, r2
 8007986:	f007 fe1b 	bl	800f5c0 <memcpy.isra.0>
 800798a:	9a01      	ldr	r2, [sp, #4]
 800798c:	192b      	adds	r3, r5, r4
 800798e:	4443      	add	r3, r8
 8007990:	f8c3 25c4 	str.w	r2, [r3, #1476]	; 0x5c4
 8007994:	8c7a      	ldrh	r2, [r7, #34]	; 0x22
 8007996:	f8a3 65ca 	strh.w	r6, [r3, #1482]	; 0x5ca
 800799a:	ba52      	rev16	r2, r2
 800799c:	f8a3 25c8 	strh.w	r2, [r3, #1480]	; 0x5c8
 80079a0:	f838 3004 	ldrh.w	r3, [r8, r4]
 80079a4:	3301      	adds	r3, #1
 80079a6:	f003 0301 	and.w	r3, r3, #1
 80079aa:	f828 3004 	strh.w	r3, [r8, r4]
 80079ae:	e7c7      	b.n	8007940 <udp_handle+0x30>
 80079b0:	2000391c 	andcs	r3, r0, ip, lsl r9
 80079b4:	2000393c 	andcs	r3, r0, ip, lsr r9

080079b8 <arp_handle>:
 80079b8:	8a83      	ldrh	r3, [r0, #20]
 80079ba:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80079be:	d003      	beq.n	80079c8 <arp_handle+0x10>
 80079c0:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80079c4:	d002      	beq.n	80079cc <arp_handle+0x14>
 80079c6:	4770      	bx	lr
 80079c8:	f009 b932 	b.w	8010c30 <arp_handle_request>
 80079cc:	f009 b958 	b.w	8010c80 <arp_handle_reply>

080079d0 <igmp_handle>:
 80079d0:	7b83      	ldrb	r3, [r0, #14]
 80079d2:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80079d6:	2b45      	cmp	r3, #69	; 0x45
 80079d8:	d116      	bne.n	8007a08 <igmp_handle+0x38>
 80079da:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 80079de:	2b11      	cmp	r3, #17
 80079e0:	d112      	bne.n	8007a08 <igmp_handle+0x38>
 80079e2:	4b20      	ldr	r3, [pc, #128]	; (8007a64 <igmp_handle+0x94>)
 80079e4:	f100 051e 	add.w	r5, r0, #30
 80079e8:	9300      	str	r3, [sp, #0]
 80079ea:	466a      	mov	r2, sp
 80079ec:	462b      	mov	r3, r5
 80079ee:	f100 0622 	add.w	r6, r0, #34	; 0x22
 80079f2:	42b3      	cmp	r3, r6
 80079f4:	d10b      	bne.n	8007a0e <igmp_handle+0x3e>
 80079f6:	2401      	movs	r4, #1
 80079f8:	2100      	movs	r1, #0
 80079fa:	f04f 0c01 	mov.w	ip, #1
 80079fe:	4b1a      	ldr	r3, [pc, #104]	; (8007a68 <igmp_handle+0x98>)
 8007a00:	4a1a      	ldr	r2, [pc, #104]	; (8007a6c <igmp_handle+0x9c>)
 8007a02:	681f      	ldr	r7, [r3, #0]
 8007a04:	428f      	cmp	r7, r1
 8007a06:	d10a      	bne.n	8007a1e <igmp_handle+0x4e>
 8007a08:	b003      	add	sp, #12
 8007a0a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8007a0e:	f813 4b01 	ldrb.w	r4, [r3], #1
 8007a12:	f812 1b01 	ldrb.w	r1, [r2], #1
 8007a16:	428c      	cmp	r4, r1
 8007a18:	d0eb      	beq.n	80079f2 <igmp_handle+0x22>
 8007a1a:	2400      	movs	r4, #0
 8007a1c:	e7ec      	b.n	80079f8 <igmp_handle+0x28>
 8007a1e:	6813      	ldr	r3, [r2, #0]
 8007a20:	9301      	str	r3, [sp, #4]
 8007a22:	b924      	cbnz	r4, 8007a2e <igmp_handle+0x5e>
 8007a24:	462b      	mov	r3, r5
 8007a26:	f10d 0e04 	add.w	lr, sp, #4
 8007a2a:	42b3      	cmp	r3, r6
 8007a2c:	d10e      	bne.n	8007a4c <igmp_handle+0x7c>
 8007a2e:	f892 e005 	ldrb.w	lr, [r2, #5]
 8007a32:	f890 3023 	ldrb.w	r3, [r0, #35]	; 0x23
 8007a36:	f1be 0f01 	cmp.w	lr, #1
 8007a3a:	d110      	bne.n	8007a5e <igmp_handle+0x8e>
 8007a3c:	f892 e004 	ldrb.w	lr, [r2, #4]
 8007a40:	459e      	cmp	lr, r3
 8007a42:	d909      	bls.n	8007a58 <igmp_handle+0x88>
 8007a44:	085b      	lsrs	r3, r3, #1
 8007a46:	3301      	adds	r3, #1
 8007a48:	7113      	strb	r3, [r2, #4]
 8007a4a:	e005      	b.n	8007a58 <igmp_handle+0x88>
 8007a4c:	f813 9b01 	ldrb.w	r9, [r3], #1
 8007a50:	f81e 8b01 	ldrb.w	r8, [lr], #1
 8007a54:	45c1      	cmp	r9, r8
 8007a56:	d0e8      	beq.n	8007a2a <igmp_handle+0x5a>
 8007a58:	3101      	adds	r1, #1
 8007a5a:	3208      	adds	r2, #8
 8007a5c:	e7d2      	b.n	8007a04 <igmp_handle+0x34>
 8007a5e:	f882 c005 	strb.w	ip, [r2, #5]
 8007a62:	e7ef      	b.n	8007a44 <igmp_handle+0x74>
 8007a64:	010000e0 	smlatteq	r0, r0, r0, r0
 8007a68:	2000a5cc 	andcs	sl, r0, ip, asr #11
 8007a6c:	2000a4a8 	andcs	sl, r0, r8, lsr #9

08007a70 <ip_handle>:
 8007a70:	7b82      	ldrb	r2, [r0, #14]
 8007a72:	7dc3      	ldrb	r3, [r0, #23]
 8007a74:	2a45      	cmp	r2, #69	; 0x45
 8007a76:	d003      	beq.n	8007a80 <ip_handle+0x10>
 8007a78:	2b02      	cmp	r3, #2
 8007a7a:	d111      	bne.n	8007aa0 <ip_handle+0x30>
 8007a7c:	f7ff bfa8 	b.w	80079d0 <igmp_handle>
 8007a80:	2b06      	cmp	r3, #6
 8007a82:	d00b      	beq.n	8007a9c <ip_handle+0x2c>
 8007a84:	d804      	bhi.n	8007a90 <ip_handle+0x20>
 8007a86:	2b01      	cmp	r3, #1
 8007a88:	d006      	beq.n	8007a98 <ip_handle+0x28>
 8007a8a:	2b02      	cmp	r3, #2
 8007a8c:	d0f6      	beq.n	8007a7c <ip_handle+0xc>
 8007a8e:	4770      	bx	lr
 8007a90:	2b11      	cmp	r3, #17
 8007a92:	d105      	bne.n	8007aa0 <ip_handle+0x30>
 8007a94:	f7ff bf3c 	b.w	8007910 <udp_handle>
 8007a98:	f000 b804 	b.w	8007aa4 <icmp_handle>
 8007a9c:	f7ff bd88 	b.w	80075b0 <tcp_handle>
 8007aa0:	4770      	bx	lr
	...

08007aa4 <icmp_handle>:
 8007aa4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007aa6:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 8007aaa:	4604      	mov	r4, r0
 8007aac:	2b08      	cmp	r3, #8
 8007aae:	d13e      	bne.n	8007b2e <icmp_handle+0x8a>
 8007ab0:	f890 5023 	ldrb.w	r5, [r0, #35]	; 0x23
 8007ab4:	2d00      	cmp	r5, #0
 8007ab6:	d13a      	bne.n	8007b2e <icmp_handle+0x8a>
 8007ab8:	1d86      	adds	r6, r0, #6
 8007aba:	4631      	mov	r1, r6
 8007abc:	2206      	movs	r2, #6
 8007abe:	f009 fc61 	bl	8011384 <memcpy.isra.0>
 8007ac2:	4630      	mov	r0, r6
 8007ac4:	2206      	movs	r2, #6
 8007ac6:	491b      	ldr	r1, [pc, #108]	; (8007b34 <icmp_handle+0x90>)
 8007ac8:	f009 fc5c 	bl	8011384 <memcpy.isra.0>
 8007acc:	8a63      	ldrh	r3, [r4, #18]
 8007ace:	f104 061a 	add.w	r6, r4, #26
 8007ad2:	43db      	mvns	r3, r3
 8007ad4:	4631      	mov	r1, r6
 8007ad6:	2204      	movs	r2, #4
 8007ad8:	8263      	strh	r3, [r4, #18]
 8007ada:	f104 001e 	add.w	r0, r4, #30
 8007ade:	f009 fc51 	bl	8011384 <memcpy.isra.0>
 8007ae2:	2204      	movs	r2, #4
 8007ae4:	4b14      	ldr	r3, [pc, #80]	; (8007b38 <icmp_handle+0x94>)
 8007ae6:	eb0d 0102 	add.w	r1, sp, r2
 8007aea:	681b      	ldr	r3, [r3, #0]
 8007aec:	4630      	mov	r0, r6
 8007aee:	f104 060e 	add.w	r6, r4, #14
 8007af2:	9301      	str	r3, [sp, #4]
 8007af4:	f009 fc46 	bl	8011384 <memcpy.isra.0>
 8007af8:	2114      	movs	r1, #20
 8007afa:	4630      	mov	r0, r6
 8007afc:	7625      	strb	r5, [r4, #24]
 8007afe:	7665      	strb	r5, [r4, #25]
 8007b00:	f009 fc27 	bl	8011352 <net_chksum>
 8007b04:	8a21      	ldrh	r1, [r4, #16]
 8007b06:	8320      	strh	r0, [r4, #24]
 8007b08:	ba49      	rev16	r1, r1
 8007b0a:	b289      	uxth	r1, r1
 8007b0c:	4630      	mov	r0, r6
 8007b0e:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8007b12:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8007b16:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 8007b1a:	f009 fc1a 	bl	8011352 <net_chksum>
 8007b1e:	8a21      	ldrh	r1, [r4, #16]
 8007b20:	84a0      	strh	r0, [r4, #36]	; 0x24
 8007b22:	ba49      	rev16	r1, r1
 8007b24:	b289      	uxth	r1, r1
 8007b26:	4620      	mov	r0, r4
 8007b28:	310e      	adds	r1, #14
 8007b2a:	f00c f833 	bl	8013b94 <emac_eth_send>
 8007b2e:	b002      	add	sp, #8
 8007b30:	bd70      	pop	{r4, r5, r6, pc}
 8007b32:	bf00      	nop
 8007b34:	20002748 	andcs	r2, r0, r8, asr #14
 8007b38:	2000273c 	andcs	r2, r0, ip, lsr r7

08007b3c <__aeabi_d2f>:
 8007b3c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8007b40:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8007b44:	bf24      	itt	cs
 8007b46:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8007b4a:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8007b4e:	d90d      	bls.n	8007b6c <__aeabi_d2f+0x30>
 8007b50:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8007b54:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8007b58:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8007b5c:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8007b60:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8007b64:	bf08      	it	eq
 8007b66:	f020 0001 	biceq.w	r0, r0, #1
 8007b6a:	4770      	bx	lr
 8007b6c:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8007b70:	d121      	bne.n	8007bb6 <__aeabi_d2f+0x7a>
 8007b72:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8007b76:	bfbc      	itt	lt
 8007b78:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8007b7c:	4770      	bxlt	lr
 8007b7e:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8007b82:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8007b86:	f1c2 0218 	rsb	r2, r2, #24
 8007b8a:	f1c2 0c20 	rsb	ip, r2, #32
 8007b8e:	fa10 f30c 	lsls.w	r3, r0, ip
 8007b92:	fa20 f002 	lsr.w	r0, r0, r2
 8007b96:	bf18      	it	ne
 8007b98:	f040 0001 	orrne.w	r0, r0, #1
 8007b9c:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8007ba0:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8007ba4:	fa03 fc0c 	lsl.w	ip, r3, ip
 8007ba8:	ea40 000c 	orr.w	r0, r0, ip
 8007bac:	fa23 f302 	lsr.w	r3, r3, r2
 8007bb0:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8007bb4:	e7cc      	b.n	8007b50 <__aeabi_d2f+0x14>
 8007bb6:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8007bba:	d107      	bne.n	8007bcc <__aeabi_d2f+0x90>
 8007bbc:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8007bc0:	bf1e      	ittt	ne
 8007bc2:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8007bc6:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8007bca:	4770      	bxne	lr
 8007bcc:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8007bd0:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8007bd4:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007bd8:	4770      	bx	lr
 8007bda:	bf00      	nop

08007bdc <__aeabi_frsub>:
 8007bdc:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
 8007be0:	e002      	b.n	8007be8 <__addsf3>
 8007be2:	bf00      	nop

08007be4 <__aeabi_fsub>:
 8007be4:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

08007be8 <__addsf3>:
 8007be8:	0042      	lsls	r2, r0, #1
 8007bea:	bf1f      	itttt	ne
 8007bec:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8007bf0:	ea92 0f03 	teqne	r2, r3
 8007bf4:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8007bf8:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8007bfc:	d06a      	beq.n	8007cd4 <__addsf3+0xec>
 8007bfe:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8007c02:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8007c06:	bfc1      	itttt	gt
 8007c08:	18d2      	addgt	r2, r2, r3
 8007c0a:	4041      	eorgt	r1, r0
 8007c0c:	4048      	eorgt	r0, r1
 8007c0e:	4041      	eorgt	r1, r0
 8007c10:	bfb8      	it	lt
 8007c12:	425b      	neglt	r3, r3
 8007c14:	2b19      	cmp	r3, #25
 8007c16:	bf88      	it	hi
 8007c18:	4770      	bxhi	lr
 8007c1a:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8007c1e:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007c22:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 8007c26:	bf18      	it	ne
 8007c28:	4240      	negne	r0, r0
 8007c2a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8007c2e:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8007c32:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 8007c36:	bf18      	it	ne
 8007c38:	4249      	negne	r1, r1
 8007c3a:	ea92 0f03 	teq	r2, r3
 8007c3e:	d03f      	beq.n	8007cc0 <__addsf3+0xd8>
 8007c40:	f1a2 0201 	sub.w	r2, r2, #1
 8007c44:	fa41 fc03 	asr.w	ip, r1, r3
 8007c48:	eb10 000c 	adds.w	r0, r0, ip
 8007c4c:	f1c3 0320 	rsb	r3, r3, #32
 8007c50:	fa01 f103 	lsl.w	r1, r1, r3
 8007c54:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8007c58:	d502      	bpl.n	8007c60 <__addsf3+0x78>
 8007c5a:	4249      	negs	r1, r1
 8007c5c:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8007c60:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
 8007c64:	d313      	bcc.n	8007c8e <__addsf3+0xa6>
 8007c66:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 8007c6a:	d306      	bcc.n	8007c7a <__addsf3+0x92>
 8007c6c:	0840      	lsrs	r0, r0, #1
 8007c6e:	ea4f 0131 	mov.w	r1, r1, rrx
 8007c72:	f102 0201 	add.w	r2, r2, #1
 8007c76:	2afe      	cmp	r2, #254	; 0xfe
 8007c78:	d251      	bcs.n	8007d1e <__addsf3+0x136>
 8007c7a:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
 8007c7e:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8007c82:	bf08      	it	eq
 8007c84:	f020 0001 	biceq.w	r0, r0, #1
 8007c88:	ea40 0003 	orr.w	r0, r0, r3
 8007c8c:	4770      	bx	lr
 8007c8e:	0049      	lsls	r1, r1, #1
 8007c90:	eb40 0000 	adc.w	r0, r0, r0
 8007c94:	3a01      	subs	r2, #1
 8007c96:	bf28      	it	cs
 8007c98:	f5b0 0f00 	cmpcs.w	r0, #8388608	; 0x800000
 8007c9c:	d2ed      	bcs.n	8007c7a <__addsf3+0x92>
 8007c9e:	fab0 fc80 	clz	ip, r0
 8007ca2:	f1ac 0c08 	sub.w	ip, ip, #8
 8007ca6:	ebb2 020c 	subs.w	r2, r2, ip
 8007caa:	fa00 f00c 	lsl.w	r0, r0, ip
 8007cae:	bfaa      	itet	ge
 8007cb0:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8007cb4:	4252      	neglt	r2, r2
 8007cb6:	4318      	orrge	r0, r3
 8007cb8:	bfbc      	itt	lt
 8007cba:	40d0      	lsrlt	r0, r2
 8007cbc:	4318      	orrlt	r0, r3
 8007cbe:	4770      	bx	lr
 8007cc0:	f092 0f00 	teq	r2, #0
 8007cc4:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
 8007cc8:	bf06      	itte	eq
 8007cca:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
 8007cce:	3201      	addeq	r2, #1
 8007cd0:	3b01      	subne	r3, #1
 8007cd2:	e7b5      	b.n	8007c40 <__addsf3+0x58>
 8007cd4:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8007cd8:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8007cdc:	bf18      	it	ne
 8007cde:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8007ce2:	d021      	beq.n	8007d28 <__addsf3+0x140>
 8007ce4:	ea92 0f03 	teq	r2, r3
 8007ce8:	d004      	beq.n	8007cf4 <__addsf3+0x10c>
 8007cea:	f092 0f00 	teq	r2, #0
 8007cee:	bf08      	it	eq
 8007cf0:	4608      	moveq	r0, r1
 8007cf2:	4770      	bx	lr
 8007cf4:	ea90 0f01 	teq	r0, r1
 8007cf8:	bf1c      	itt	ne
 8007cfa:	2000      	movne	r0, #0
 8007cfc:	4770      	bxne	lr
 8007cfe:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
 8007d02:	d104      	bne.n	8007d0e <__addsf3+0x126>
 8007d04:	0040      	lsls	r0, r0, #1
 8007d06:	bf28      	it	cs
 8007d08:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
 8007d0c:	4770      	bx	lr
 8007d0e:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
 8007d12:	bf3c      	itt	cc
 8007d14:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
 8007d18:	4770      	bxcc	lr
 8007d1a:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8007d1e:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
 8007d22:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007d26:	4770      	bx	lr
 8007d28:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8007d2c:	bf16      	itet	ne
 8007d2e:	4608      	movne	r0, r1
 8007d30:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8007d34:	4601      	movne	r1, r0
 8007d36:	0242      	lsls	r2, r0, #9
 8007d38:	bf06      	itte	eq
 8007d3a:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8007d3e:	ea90 0f01 	teqeq	r0, r1
 8007d42:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
 8007d46:	4770      	bx	lr

08007d48 <__aeabi_ui2f>:
 8007d48:	f04f 0300 	mov.w	r3, #0
 8007d4c:	e004      	b.n	8007d58 <__aeabi_i2f+0x8>
 8007d4e:	bf00      	nop

08007d50 <__aeabi_i2f>:
 8007d50:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
 8007d54:	bf48      	it	mi
 8007d56:	4240      	negmi	r0, r0
 8007d58:	ea5f 0c00 	movs.w	ip, r0
 8007d5c:	bf08      	it	eq
 8007d5e:	4770      	bxeq	lr
 8007d60:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
 8007d64:	4601      	mov	r1, r0
 8007d66:	f04f 0000 	mov.w	r0, #0
 8007d6a:	e01c      	b.n	8007da6 <__aeabi_l2f+0x2a>

08007d6c <__aeabi_ul2f>:
 8007d6c:	ea50 0201 	orrs.w	r2, r0, r1
 8007d70:	bf08      	it	eq
 8007d72:	4770      	bxeq	lr
 8007d74:	f04f 0300 	mov.w	r3, #0
 8007d78:	e00a      	b.n	8007d90 <__aeabi_l2f+0x14>
 8007d7a:	bf00      	nop

08007d7c <__aeabi_l2f>:
 8007d7c:	ea50 0201 	orrs.w	r2, r0, r1
 8007d80:	bf08      	it	eq
 8007d82:	4770      	bxeq	lr
 8007d84:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
 8007d88:	d502      	bpl.n	8007d90 <__aeabi_l2f+0x14>
 8007d8a:	4240      	negs	r0, r0
 8007d8c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8007d90:	ea5f 0c01 	movs.w	ip, r1
 8007d94:	bf02      	ittt	eq
 8007d96:	4684      	moveq	ip, r0
 8007d98:	4601      	moveq	r1, r0
 8007d9a:	2000      	moveq	r0, #0
 8007d9c:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
 8007da0:	bf08      	it	eq
 8007da2:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
 8007da6:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
 8007daa:	fabc f28c 	clz	r2, ip
 8007dae:	3a08      	subs	r2, #8
 8007db0:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8007db4:	db10      	blt.n	8007dd8 <__aeabi_l2f+0x5c>
 8007db6:	fa01 fc02 	lsl.w	ip, r1, r2
 8007dba:	4463      	add	r3, ip
 8007dbc:	fa00 fc02 	lsl.w	ip, r0, r2
 8007dc0:	f1c2 0220 	rsb	r2, r2, #32
 8007dc4:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8007dc8:	fa20 f202 	lsr.w	r2, r0, r2
 8007dcc:	eb43 0002 	adc.w	r0, r3, r2
 8007dd0:	bf08      	it	eq
 8007dd2:	f020 0001 	biceq.w	r0, r0, #1
 8007dd6:	4770      	bx	lr
 8007dd8:	f102 0220 	add.w	r2, r2, #32
 8007ddc:	fa01 fc02 	lsl.w	ip, r1, r2
 8007de0:	f1c2 0220 	rsb	r2, r2, #32
 8007de4:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8007de8:	fa21 f202 	lsr.w	r2, r1, r2
 8007dec:	eb43 0002 	adc.w	r0, r3, r2
 8007df0:	bf08      	it	eq
 8007df2:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8007df6:	4770      	bx	lr

08007df8 <__gesf2>:
 8007df8:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
 8007dfc:	e006      	b.n	8007e0c <__cmpsf2+0x4>
 8007dfe:	bf00      	nop

08007e00 <__lesf2>:
 8007e00:	f04f 0c01 	mov.w	ip, #1
 8007e04:	e002      	b.n	8007e0c <__cmpsf2+0x4>
 8007e06:	bf00      	nop

08007e08 <__cmpsf2>:
 8007e08:	f04f 0c01 	mov.w	ip, #1
 8007e0c:	f84d cd04 	str.w	ip, [sp, #-4]!
 8007e10:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8007e14:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8007e18:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8007e1c:	bf18      	it	ne
 8007e1e:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8007e22:	d011      	beq.n	8007e48 <__cmpsf2+0x40>
 8007e24:	b001      	add	sp, #4
 8007e26:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
 8007e2a:	bf18      	it	ne
 8007e2c:	ea90 0f01 	teqne	r0, r1
 8007e30:	bf58      	it	pl
 8007e32:	ebb2 0003 	subspl.w	r0, r2, r3
 8007e36:	bf88      	it	hi
 8007e38:	17c8      	asrhi	r0, r1, #31
 8007e3a:	bf38      	it	cc
 8007e3c:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
 8007e40:	bf18      	it	ne
 8007e42:	f040 0001 	orrne.w	r0, r0, #1
 8007e46:	4770      	bx	lr
 8007e48:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8007e4c:	d102      	bne.n	8007e54 <__cmpsf2+0x4c>
 8007e4e:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 8007e52:	d105      	bne.n	8007e60 <__cmpsf2+0x58>
 8007e54:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 8007e58:	d1e4      	bne.n	8007e24 <__cmpsf2+0x1c>
 8007e5a:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 8007e5e:	d0e1      	beq.n	8007e24 <__cmpsf2+0x1c>
 8007e60:	f85d 0b04 	ldr.w	r0, [sp], #4
 8007e64:	4770      	bx	lr
 8007e66:	bf00      	nop

08007e68 <__aeabi_cfrcmple>:
 8007e68:	4684      	mov	ip, r0
 8007e6a:	4608      	mov	r0, r1
 8007e6c:	4661      	mov	r1, ip
 8007e6e:	e7ff      	b.n	8007e70 <__aeabi_cfcmpeq>

08007e70 <__aeabi_cfcmpeq>:
 8007e70:	b50f      	push	{r0, r1, r2, r3, lr}
 8007e72:	f7ff ffc9 	bl	8007e08 <__cmpsf2>
 8007e76:	2800      	cmp	r0, #0
 8007e78:	bf48      	it	mi
 8007e7a:	f110 0f00 	cmnmi.w	r0, #0
 8007e7e:	bd0f      	pop	{r0, r1, r2, r3, pc}

08007e80 <__aeabi_fcmpeq>:
 8007e80:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007e84:	f7ff fff4 	bl	8007e70 <__aeabi_cfcmpeq>
 8007e88:	bf0c      	ite	eq
 8007e8a:	2001      	moveq	r0, #1
 8007e8c:	2000      	movne	r0, #0
 8007e8e:	f85d fb08 	ldr.w	pc, [sp], #8
 8007e92:	bf00      	nop

08007e94 <__aeabi_fcmplt>:
 8007e94:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007e98:	f7ff ffea 	bl	8007e70 <__aeabi_cfcmpeq>
 8007e9c:	bf34      	ite	cc
 8007e9e:	2001      	movcc	r0, #1
 8007ea0:	2000      	movcs	r0, #0
 8007ea2:	f85d fb08 	ldr.w	pc, [sp], #8
 8007ea6:	bf00      	nop

08007ea8 <__aeabi_fcmple>:
 8007ea8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007eac:	f7ff ffe0 	bl	8007e70 <__aeabi_cfcmpeq>
 8007eb0:	bf94      	ite	ls
 8007eb2:	2001      	movls	r0, #1
 8007eb4:	2000      	movhi	r0, #0
 8007eb6:	f85d fb08 	ldr.w	pc, [sp], #8
 8007eba:	bf00      	nop

08007ebc <__aeabi_fcmpge>:
 8007ebc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007ec0:	f7ff ffd2 	bl	8007e68 <__aeabi_cfrcmple>
 8007ec4:	bf94      	ite	ls
 8007ec6:	2001      	movls	r0, #1
 8007ec8:	2000      	movhi	r0, #0
 8007eca:	f85d fb08 	ldr.w	pc, [sp], #8
 8007ece:	bf00      	nop

08007ed0 <__aeabi_fcmpgt>:
 8007ed0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007ed4:	f7ff ffc8 	bl	8007e68 <__aeabi_cfrcmple>
 8007ed8:	bf34      	ite	cc
 8007eda:	2001      	movcc	r0, #1
 8007edc:	2000      	movcs	r0, #0
 8007ede:	f85d fb08 	ldr.w	pc, [sp], #8
 8007ee2:	bf00      	nop

08007ee4 <__aeabi_f2iz>:
 8007ee4:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8007ee8:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 8007eec:	d30f      	bcc.n	8007f0e <__aeabi_f2iz+0x2a>
 8007eee:	f04f 039e 	mov.w	r3, #158	; 0x9e
 8007ef2:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 8007ef6:	d90d      	bls.n	8007f14 <__aeabi_f2iz+0x30>
 8007ef8:	ea4f 2300 	mov.w	r3, r0, lsl #8
 8007efc:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8007f00:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8007f04:	fa23 f002 	lsr.w	r0, r3, r2
 8007f08:	bf18      	it	ne
 8007f0a:	4240      	negne	r0, r0
 8007f0c:	4770      	bx	lr
 8007f0e:	f04f 0000 	mov.w	r0, #0
 8007f12:	4770      	bx	lr
 8007f14:	f112 0f61 	cmn.w	r2, #97	; 0x61
 8007f18:	d101      	bne.n	8007f1e <__aeabi_f2iz+0x3a>
 8007f1a:	0242      	lsls	r2, r0, #9
 8007f1c:	d105      	bne.n	8007f2a <__aeabi_f2iz+0x46>
 8007f1e:	f010 4000 	ands.w	r0, r0, #2147483648	; 0x80000000
 8007f22:	bf08      	it	eq
 8007f24:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8007f28:	4770      	bx	lr
 8007f2a:	f04f 0000 	mov.w	r0, #0
 8007f2e:	4770      	bx	lr

08007f30 <__aeabi_uldivmod>:
 8007f30:	b953      	cbnz	r3, 8007f48 <__aeabi_uldivmod+0x18>
 8007f32:	b94a      	cbnz	r2, 8007f48 <__aeabi_uldivmod+0x18>
 8007f34:	2900      	cmp	r1, #0
 8007f36:	bf08      	it	eq
 8007f38:	2800      	cmpeq	r0, #0
 8007f3a:	bf1c      	itt	ne
 8007f3c:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 8007f40:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 8007f44:	f000 b80c 	b.w	8007f60 <__aeabi_idiv0>
 8007f48:	f1ad 0c08 	sub.w	ip, sp, #8
 8007f4c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8007f50:	f001 fb84 	bl	800965c <__udivmoddi4>
 8007f54:	f8dd e004 	ldr.w	lr, [sp, #4]
 8007f58:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8007f5c:	b004      	add	sp, #16
 8007f5e:	4770      	bx	lr

08007f60 <__aeabi_idiv0>:
 8007f60:	4770      	bx	lr
 8007f62:	bf00      	nop

08007f64 <__aeabi_drsub>:
 8007f64:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8007f68:	e002      	b.n	8007f70 <__adddf3>
 8007f6a:	bf00      	nop

08007f6c <__aeabi_dsub>:
 8007f6c:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

08007f70 <__adddf3>:
 8007f70:	b530      	push	{r4, r5, lr}
 8007f72:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8007f76:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8007f7a:	ea94 0f05 	teq	r4, r5
 8007f7e:	bf08      	it	eq
 8007f80:	ea90 0f02 	teqeq	r0, r2
 8007f84:	bf1f      	itttt	ne
 8007f86:	ea54 0c00 	orrsne.w	ip, r4, r0
 8007f8a:	ea55 0c02 	orrsne.w	ip, r5, r2
 8007f8e:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8007f92:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8007f96:	f000 80e2 	beq.w	800815e <__adddf3+0x1ee>
 8007f9a:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8007f9e:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8007fa2:	bfb8      	it	lt
 8007fa4:	426d      	neglt	r5, r5
 8007fa6:	dd0c      	ble.n	8007fc2 <__adddf3+0x52>
 8007fa8:	442c      	add	r4, r5
 8007faa:	ea80 0202 	eor.w	r2, r0, r2
 8007fae:	ea81 0303 	eor.w	r3, r1, r3
 8007fb2:	ea82 0000 	eor.w	r0, r2, r0
 8007fb6:	ea83 0101 	eor.w	r1, r3, r1
 8007fba:	ea80 0202 	eor.w	r2, r0, r2
 8007fbe:	ea81 0303 	eor.w	r3, r1, r3
 8007fc2:	2d36      	cmp	r5, #54	; 0x36
 8007fc4:	bf88      	it	hi
 8007fc6:	bd30      	pophi	{r4, r5, pc}
 8007fc8:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8007fcc:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8007fd0:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8007fd4:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8007fd8:	d002      	beq.n	8007fe0 <__adddf3+0x70>
 8007fda:	4240      	negs	r0, r0
 8007fdc:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8007fe0:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8007fe4:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8007fe8:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8007fec:	d002      	beq.n	8007ff4 <__adddf3+0x84>
 8007fee:	4252      	negs	r2, r2
 8007ff0:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8007ff4:	ea94 0f05 	teq	r4, r5
 8007ff8:	f000 80a7 	beq.w	800814a <__adddf3+0x1da>
 8007ffc:	f1a4 0401 	sub.w	r4, r4, #1
 8008000:	f1d5 0e20 	rsbs	lr, r5, #32
 8008004:	db0d      	blt.n	8008022 <__adddf3+0xb2>
 8008006:	fa02 fc0e 	lsl.w	ip, r2, lr
 800800a:	fa22 f205 	lsr.w	r2, r2, r5
 800800e:	1880      	adds	r0, r0, r2
 8008010:	f141 0100 	adc.w	r1, r1, #0
 8008014:	fa03 f20e 	lsl.w	r2, r3, lr
 8008018:	1880      	adds	r0, r0, r2
 800801a:	fa43 f305 	asr.w	r3, r3, r5
 800801e:	4159      	adcs	r1, r3
 8008020:	e00e      	b.n	8008040 <__adddf3+0xd0>
 8008022:	f1a5 0520 	sub.w	r5, r5, #32
 8008026:	f10e 0e20 	add.w	lr, lr, #32
 800802a:	2a01      	cmp	r2, #1
 800802c:	fa03 fc0e 	lsl.w	ip, r3, lr
 8008030:	bf28      	it	cs
 8008032:	f04c 0c02 	orrcs.w	ip, ip, #2
 8008036:	fa43 f305 	asr.w	r3, r3, r5
 800803a:	18c0      	adds	r0, r0, r3
 800803c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8008040:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8008044:	d507      	bpl.n	8008056 <__adddf3+0xe6>
 8008046:	f04f 0e00 	mov.w	lr, #0
 800804a:	f1dc 0c00 	rsbs	ip, ip, #0
 800804e:	eb7e 0000 	sbcs.w	r0, lr, r0
 8008052:	eb6e 0101 	sbc.w	r1, lr, r1
 8008056:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 800805a:	d31b      	bcc.n	8008094 <__adddf3+0x124>
 800805c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 8008060:	d30c      	bcc.n	800807c <__adddf3+0x10c>
 8008062:	0849      	lsrs	r1, r1, #1
 8008064:	ea5f 0030 	movs.w	r0, r0, rrx
 8008068:	ea4f 0c3c 	mov.w	ip, ip, rrx
 800806c:	f104 0401 	add.w	r4, r4, #1
 8008070:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8008074:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8008078:	f080 809a 	bcs.w	80081b0 <__adddf3+0x240>
 800807c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8008080:	bf08      	it	eq
 8008082:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8008086:	f150 0000 	adcs.w	r0, r0, #0
 800808a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800808e:	ea41 0105 	orr.w	r1, r1, r5
 8008092:	bd30      	pop	{r4, r5, pc}
 8008094:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8008098:	4140      	adcs	r0, r0
 800809a:	eb41 0101 	adc.w	r1, r1, r1
 800809e:	3c01      	subs	r4, #1
 80080a0:	bf28      	it	cs
 80080a2:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80080a6:	d2e9      	bcs.n	800807c <__adddf3+0x10c>
 80080a8:	f091 0f00 	teq	r1, #0
 80080ac:	bf04      	itt	eq
 80080ae:	4601      	moveq	r1, r0
 80080b0:	2000      	moveq	r0, #0
 80080b2:	fab1 f381 	clz	r3, r1
 80080b6:	bf08      	it	eq
 80080b8:	3320      	addeq	r3, #32
 80080ba:	f1a3 030b 	sub.w	r3, r3, #11
 80080be:	f1b3 0220 	subs.w	r2, r3, #32
 80080c2:	da0c      	bge.n	80080de <__adddf3+0x16e>
 80080c4:	320c      	adds	r2, #12
 80080c6:	dd08      	ble.n	80080da <__adddf3+0x16a>
 80080c8:	f102 0c14 	add.w	ip, r2, #20
 80080cc:	f1c2 020c 	rsb	r2, r2, #12
 80080d0:	fa01 f00c 	lsl.w	r0, r1, ip
 80080d4:	fa21 f102 	lsr.w	r1, r1, r2
 80080d8:	e00c      	b.n	80080f4 <__adddf3+0x184>
 80080da:	f102 0214 	add.w	r2, r2, #20
 80080de:	bfd8      	it	le
 80080e0:	f1c2 0c20 	rsble	ip, r2, #32
 80080e4:	fa01 f102 	lsl.w	r1, r1, r2
 80080e8:	fa20 fc0c 	lsr.w	ip, r0, ip
 80080ec:	bfdc      	itt	le
 80080ee:	ea41 010c 	orrle.w	r1, r1, ip
 80080f2:	4090      	lslle	r0, r2
 80080f4:	1ae4      	subs	r4, r4, r3
 80080f6:	bfa2      	ittt	ge
 80080f8:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80080fc:	4329      	orrge	r1, r5
 80080fe:	bd30      	popge	{r4, r5, pc}
 8008100:	ea6f 0404 	mvn.w	r4, r4
 8008104:	3c1f      	subs	r4, #31
 8008106:	da1c      	bge.n	8008142 <__adddf3+0x1d2>
 8008108:	340c      	adds	r4, #12
 800810a:	dc0e      	bgt.n	800812a <__adddf3+0x1ba>
 800810c:	f104 0414 	add.w	r4, r4, #20
 8008110:	f1c4 0220 	rsb	r2, r4, #32
 8008114:	fa20 f004 	lsr.w	r0, r0, r4
 8008118:	fa01 f302 	lsl.w	r3, r1, r2
 800811c:	ea40 0003 	orr.w	r0, r0, r3
 8008120:	fa21 f304 	lsr.w	r3, r1, r4
 8008124:	ea45 0103 	orr.w	r1, r5, r3
 8008128:	bd30      	pop	{r4, r5, pc}
 800812a:	f1c4 040c 	rsb	r4, r4, #12
 800812e:	f1c4 0220 	rsb	r2, r4, #32
 8008132:	fa20 f002 	lsr.w	r0, r0, r2
 8008136:	fa01 f304 	lsl.w	r3, r1, r4
 800813a:	ea40 0003 	orr.w	r0, r0, r3
 800813e:	4629      	mov	r1, r5
 8008140:	bd30      	pop	{r4, r5, pc}
 8008142:	fa21 f004 	lsr.w	r0, r1, r4
 8008146:	4629      	mov	r1, r5
 8008148:	bd30      	pop	{r4, r5, pc}
 800814a:	f094 0f00 	teq	r4, #0
 800814e:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 8008152:	bf06      	itte	eq
 8008154:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8008158:	3401      	addeq	r4, #1
 800815a:	3d01      	subne	r5, #1
 800815c:	e74e      	b.n	8007ffc <__adddf3+0x8c>
 800815e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8008162:	bf18      	it	ne
 8008164:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8008168:	d029      	beq.n	80081be <__adddf3+0x24e>
 800816a:	ea94 0f05 	teq	r4, r5
 800816e:	bf08      	it	eq
 8008170:	ea90 0f02 	teqeq	r0, r2
 8008174:	d005      	beq.n	8008182 <__adddf3+0x212>
 8008176:	ea54 0c00 	orrs.w	ip, r4, r0
 800817a:	bf04      	itt	eq
 800817c:	4619      	moveq	r1, r3
 800817e:	4610      	moveq	r0, r2
 8008180:	bd30      	pop	{r4, r5, pc}
 8008182:	ea91 0f03 	teq	r1, r3
 8008186:	bf1e      	ittt	ne
 8008188:	2100      	movne	r1, #0
 800818a:	2000      	movne	r0, #0
 800818c:	bd30      	popne	{r4, r5, pc}
 800818e:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8008192:	d105      	bne.n	80081a0 <__adddf3+0x230>
 8008194:	0040      	lsls	r0, r0, #1
 8008196:	4149      	adcs	r1, r1
 8008198:	bf28      	it	cs
 800819a:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 800819e:	bd30      	pop	{r4, r5, pc}
 80081a0:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80081a4:	bf3c      	itt	cc
 80081a6:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80081aa:	bd30      	popcc	{r4, r5, pc}
 80081ac:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80081b0:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80081b4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80081b8:	f04f 0000 	mov.w	r0, #0
 80081bc:	bd30      	pop	{r4, r5, pc}
 80081be:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80081c2:	bf1a      	itte	ne
 80081c4:	4619      	movne	r1, r3
 80081c6:	4610      	movne	r0, r2
 80081c8:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80081cc:	bf1c      	itt	ne
 80081ce:	460b      	movne	r3, r1
 80081d0:	4602      	movne	r2, r0
 80081d2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80081d6:	bf06      	itte	eq
 80081d8:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80081dc:	ea91 0f03 	teqeq	r1, r3
 80081e0:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 80081e4:	bd30      	pop	{r4, r5, pc}
 80081e6:	bf00      	nop

080081e8 <__aeabi_ui2d>:
 80081e8:	f090 0f00 	teq	r0, #0
 80081ec:	bf04      	itt	eq
 80081ee:	2100      	moveq	r1, #0
 80081f0:	4770      	bxeq	lr
 80081f2:	b530      	push	{r4, r5, lr}
 80081f4:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80081f8:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80081fc:	f04f 0500 	mov.w	r5, #0
 8008200:	f04f 0100 	mov.w	r1, #0
 8008204:	e750      	b.n	80080a8 <__adddf3+0x138>
 8008206:	bf00      	nop

08008208 <__aeabi_i2d>:
 8008208:	f090 0f00 	teq	r0, #0
 800820c:	bf04      	itt	eq
 800820e:	2100      	moveq	r1, #0
 8008210:	4770      	bxeq	lr
 8008212:	b530      	push	{r4, r5, lr}
 8008214:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8008218:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800821c:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8008220:	bf48      	it	mi
 8008222:	4240      	negmi	r0, r0
 8008224:	f04f 0100 	mov.w	r1, #0
 8008228:	e73e      	b.n	80080a8 <__adddf3+0x138>
 800822a:	bf00      	nop

0800822c <__aeabi_f2d>:
 800822c:	0042      	lsls	r2, r0, #1
 800822e:	ea4f 01e2 	mov.w	r1, r2, asr #3
 8008232:	ea4f 0131 	mov.w	r1, r1, rrx
 8008236:	ea4f 7002 	mov.w	r0, r2, lsl #28
 800823a:	bf1f      	itttt	ne
 800823c:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 8008240:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8008244:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8008248:	4770      	bxne	lr
 800824a:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800824e:	bf08      	it	eq
 8008250:	4770      	bxeq	lr
 8008252:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8008256:	bf04      	itt	eq
 8008258:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 800825c:	4770      	bxeq	lr
 800825e:	b530      	push	{r4, r5, lr}
 8008260:	f44f 7460 	mov.w	r4, #896	; 0x380
 8008264:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8008268:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 800826c:	e71c      	b.n	80080a8 <__adddf3+0x138>
 800826e:	bf00      	nop

08008270 <__aeabi_ul2d>:
 8008270:	ea50 0201 	orrs.w	r2, r0, r1
 8008274:	bf08      	it	eq
 8008276:	4770      	bxeq	lr
 8008278:	b530      	push	{r4, r5, lr}
 800827a:	f04f 0500 	mov.w	r5, #0
 800827e:	e00a      	b.n	8008296 <__aeabi_l2d+0x16>

08008280 <__aeabi_l2d>:
 8008280:	ea50 0201 	orrs.w	r2, r0, r1
 8008284:	bf08      	it	eq
 8008286:	4770      	bxeq	lr
 8008288:	b530      	push	{r4, r5, lr}
 800828a:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 800828e:	d502      	bpl.n	8008296 <__aeabi_l2d+0x16>
 8008290:	4240      	negs	r0, r0
 8008292:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8008296:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800829a:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800829e:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80082a2:	f43f aed8 	beq.w	8008056 <__adddf3+0xe6>
 80082a6:	f04f 0203 	mov.w	r2, #3
 80082aa:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80082ae:	bf18      	it	ne
 80082b0:	3203      	addne	r2, #3
 80082b2:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80082b6:	bf18      	it	ne
 80082b8:	3203      	addne	r2, #3
 80082ba:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80082be:	f1c2 0320 	rsb	r3, r2, #32
 80082c2:	fa00 fc03 	lsl.w	ip, r0, r3
 80082c6:	fa20 f002 	lsr.w	r0, r0, r2
 80082ca:	fa01 fe03 	lsl.w	lr, r1, r3
 80082ce:	ea40 000e 	orr.w	r0, r0, lr
 80082d2:	fa21 f102 	lsr.w	r1, r1, r2
 80082d6:	4414      	add	r4, r2
 80082d8:	e6bd      	b.n	8008056 <__adddf3+0xe6>
 80082da:	bf00      	nop

080082dc <__aeabi_fmul>:
 80082dc:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80082e0:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 80082e4:	bf1e      	ittt	ne
 80082e6:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 80082ea:	ea92 0f0c 	teqne	r2, ip
 80082ee:	ea93 0f0c 	teqne	r3, ip
 80082f2:	d06f      	beq.n	80083d4 <__aeabi_fmul+0xf8>
 80082f4:	441a      	add	r2, r3
 80082f6:	ea80 0c01 	eor.w	ip, r0, r1
 80082fa:	0240      	lsls	r0, r0, #9
 80082fc:	bf18      	it	ne
 80082fe:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 8008302:	d01e      	beq.n	8008342 <__aeabi_fmul+0x66>
 8008304:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8008308:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 800830c:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 8008310:	fba0 3101 	umull	r3, r1, r0, r1
 8008314:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8008318:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 800831c:	bf3e      	ittt	cc
 800831e:	0049      	lslcc	r1, r1, #1
 8008320:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 8008324:	005b      	lslcc	r3, r3, #1
 8008326:	ea40 0001 	orr.w	r0, r0, r1
 800832a:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
 800832e:	2afd      	cmp	r2, #253	; 0xfd
 8008330:	d81d      	bhi.n	800836e <__aeabi_fmul+0x92>
 8008332:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8008336:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 800833a:	bf08      	it	eq
 800833c:	f020 0001 	biceq.w	r0, r0, #1
 8008340:	4770      	bx	lr
 8008342:	f090 0f00 	teq	r0, #0
 8008346:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 800834a:	bf08      	it	eq
 800834c:	0249      	lsleq	r1, r1, #9
 800834e:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8008352:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 8008356:	3a7f      	subs	r2, #127	; 0x7f
 8008358:	bfc2      	ittt	gt
 800835a:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 800835e:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8008362:	4770      	bxgt	lr
 8008364:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8008368:	f04f 0300 	mov.w	r3, #0
 800836c:	3a01      	subs	r2, #1
 800836e:	dc5d      	bgt.n	800842c <__aeabi_fmul+0x150>
 8008370:	f112 0f19 	cmn.w	r2, #25
 8008374:	bfdc      	itt	le
 8008376:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
 800837a:	4770      	bxle	lr
 800837c:	f1c2 0200 	rsb	r2, r2, #0
 8008380:	0041      	lsls	r1, r0, #1
 8008382:	fa21 f102 	lsr.w	r1, r1, r2
 8008386:	f1c2 0220 	rsb	r2, r2, #32
 800838a:	fa00 fc02 	lsl.w	ip, r0, r2
 800838e:	ea5f 0031 	movs.w	r0, r1, rrx
 8008392:	f140 0000 	adc.w	r0, r0, #0
 8008396:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 800839a:	bf08      	it	eq
 800839c:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 80083a0:	4770      	bx	lr
 80083a2:	f092 0f00 	teq	r2, #0
 80083a6:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 80083aa:	bf02      	ittt	eq
 80083ac:	0040      	lsleq	r0, r0, #1
 80083ae:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 80083b2:	3a01      	subeq	r2, #1
 80083b4:	d0f9      	beq.n	80083aa <__aeabi_fmul+0xce>
 80083b6:	ea40 000c 	orr.w	r0, r0, ip
 80083ba:	f093 0f00 	teq	r3, #0
 80083be:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 80083c2:	bf02      	ittt	eq
 80083c4:	0049      	lsleq	r1, r1, #1
 80083c6:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 80083ca:	3b01      	subeq	r3, #1
 80083cc:	d0f9      	beq.n	80083c2 <__aeabi_fmul+0xe6>
 80083ce:	ea41 010c 	orr.w	r1, r1, ip
 80083d2:	e78f      	b.n	80082f4 <__aeabi_fmul+0x18>
 80083d4:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 80083d8:	ea92 0f0c 	teq	r2, ip
 80083dc:	bf18      	it	ne
 80083de:	ea93 0f0c 	teqne	r3, ip
 80083e2:	d00a      	beq.n	80083fa <__aeabi_fmul+0x11e>
 80083e4:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 80083e8:	bf18      	it	ne
 80083ea:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 80083ee:	d1d8      	bne.n	80083a2 <__aeabi_fmul+0xc6>
 80083f0:	ea80 0001 	eor.w	r0, r0, r1
 80083f4:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 80083f8:	4770      	bx	lr
 80083fa:	f090 0f00 	teq	r0, #0
 80083fe:	bf17      	itett	ne
 8008400:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
 8008404:	4608      	moveq	r0, r1
 8008406:	f091 0f00 	teqne	r1, #0
 800840a:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
 800840e:	d014      	beq.n	800843a <__aeabi_fmul+0x15e>
 8008410:	ea92 0f0c 	teq	r2, ip
 8008414:	d101      	bne.n	800841a <__aeabi_fmul+0x13e>
 8008416:	0242      	lsls	r2, r0, #9
 8008418:	d10f      	bne.n	800843a <__aeabi_fmul+0x15e>
 800841a:	ea93 0f0c 	teq	r3, ip
 800841e:	d103      	bne.n	8008428 <__aeabi_fmul+0x14c>
 8008420:	024b      	lsls	r3, r1, #9
 8008422:	bf18      	it	ne
 8008424:	4608      	movne	r0, r1
 8008426:	d108      	bne.n	800843a <__aeabi_fmul+0x15e>
 8008428:	ea80 0001 	eor.w	r0, r0, r1
 800842c:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8008430:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8008434:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8008438:	4770      	bx	lr
 800843a:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 800843e:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
 8008442:	4770      	bx	lr

08008444 <__aeabi_fdiv>:
 8008444:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8008448:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 800844c:	bf1e      	ittt	ne
 800844e:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8008452:	ea92 0f0c 	teqne	r2, ip
 8008456:	ea93 0f0c 	teqne	r3, ip
 800845a:	d069      	beq.n	8008530 <__aeabi_fdiv+0xec>
 800845c:	eba2 0203 	sub.w	r2, r2, r3
 8008460:	ea80 0c01 	eor.w	ip, r0, r1
 8008464:	0249      	lsls	r1, r1, #9
 8008466:	ea4f 2040 	mov.w	r0, r0, lsl #9
 800846a:	d037      	beq.n	80084dc <__aeabi_fdiv+0x98>
 800846c:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8008470:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 8008474:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8008478:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 800847c:	428b      	cmp	r3, r1
 800847e:	bf38      	it	cc
 8008480:	005b      	lslcc	r3, r3, #1
 8008482:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
 8008486:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
 800848a:	428b      	cmp	r3, r1
 800848c:	bf24      	itt	cs
 800848e:	1a5b      	subcs	r3, r3, r1
 8008490:	ea40 000c 	orrcs.w	r0, r0, ip
 8008494:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 8008498:	bf24      	itt	cs
 800849a:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 800849e:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80084a2:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 80084a6:	bf24      	itt	cs
 80084a8:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 80084ac:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80084b0:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 80084b4:	bf24      	itt	cs
 80084b6:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 80084ba:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 80084be:	011b      	lsls	r3, r3, #4
 80084c0:	bf18      	it	ne
 80084c2:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 80084c6:	d1e0      	bne.n	800848a <__aeabi_fdiv+0x46>
 80084c8:	2afd      	cmp	r2, #253	; 0xfd
 80084ca:	f63f af50 	bhi.w	800836e <__aeabi_fmul+0x92>
 80084ce:	428b      	cmp	r3, r1
 80084d0:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 80084d4:	bf08      	it	eq
 80084d6:	f020 0001 	biceq.w	r0, r0, #1
 80084da:	4770      	bx	lr
 80084dc:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 80084e0:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 80084e4:	327f      	adds	r2, #127	; 0x7f
 80084e6:	bfc2      	ittt	gt
 80084e8:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 80084ec:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 80084f0:	4770      	bxgt	lr
 80084f2:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80084f6:	f04f 0300 	mov.w	r3, #0
 80084fa:	3a01      	subs	r2, #1
 80084fc:	e737      	b.n	800836e <__aeabi_fmul+0x92>
 80084fe:	f092 0f00 	teq	r2, #0
 8008502:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8008506:	bf02      	ittt	eq
 8008508:	0040      	lsleq	r0, r0, #1
 800850a:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 800850e:	3a01      	subeq	r2, #1
 8008510:	d0f9      	beq.n	8008506 <__aeabi_fdiv+0xc2>
 8008512:	ea40 000c 	orr.w	r0, r0, ip
 8008516:	f093 0f00 	teq	r3, #0
 800851a:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 800851e:	bf02      	ittt	eq
 8008520:	0049      	lsleq	r1, r1, #1
 8008522:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8008526:	3b01      	subeq	r3, #1
 8008528:	d0f9      	beq.n	800851e <__aeabi_fdiv+0xda>
 800852a:	ea41 010c 	orr.w	r1, r1, ip
 800852e:	e795      	b.n	800845c <__aeabi_fdiv+0x18>
 8008530:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8008534:	ea92 0f0c 	teq	r2, ip
 8008538:	d108      	bne.n	800854c <__aeabi_fdiv+0x108>
 800853a:	0242      	lsls	r2, r0, #9
 800853c:	f47f af7d 	bne.w	800843a <__aeabi_fmul+0x15e>
 8008540:	ea93 0f0c 	teq	r3, ip
 8008544:	f47f af70 	bne.w	8008428 <__aeabi_fmul+0x14c>
 8008548:	4608      	mov	r0, r1
 800854a:	e776      	b.n	800843a <__aeabi_fmul+0x15e>
 800854c:	ea93 0f0c 	teq	r3, ip
 8008550:	d104      	bne.n	800855c <__aeabi_fdiv+0x118>
 8008552:	024b      	lsls	r3, r1, #9
 8008554:	f43f af4c 	beq.w	80083f0 <__aeabi_fmul+0x114>
 8008558:	4608      	mov	r0, r1
 800855a:	e76e      	b.n	800843a <__aeabi_fmul+0x15e>
 800855c:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8008560:	bf18      	it	ne
 8008562:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8008566:	d1ca      	bne.n	80084fe <__aeabi_fdiv+0xba>
 8008568:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
 800856c:	f47f af5c 	bne.w	8008428 <__aeabi_fmul+0x14c>
 8008570:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
 8008574:	f47f af3c 	bne.w	80083f0 <__aeabi_fmul+0x114>
 8008578:	e75f      	b.n	800843a <__aeabi_fmul+0x15e>
 800857a:	bf00      	nop

0800857c <Reset_Handler>:
 800857c:	2100      	movs	r1, #0
 800857e:	e003      	b.n	8008588 <DataInit>

08008580 <CopyData>:
 8008580:	4b0a      	ldr	r3, [pc, #40]	; (80085ac <Zerobss+0x10>)
 8008582:	585b      	ldr	r3, [r3, r1]
 8008584:	5043      	str	r3, [r0, r1]
 8008586:	3104      	adds	r1, #4

08008588 <DataInit>:
 8008588:	4809      	ldr	r0, [pc, #36]	; (80085b0 <Zerobss+0x14>)
 800858a:	4b0a      	ldr	r3, [pc, #40]	; (80085b4 <Zerobss+0x18>)
 800858c:	1842      	adds	r2, r0, r1
 800858e:	429a      	cmp	r2, r3
 8008590:	d3f6      	bcc.n	8008580 <CopyData>
 8008592:	4a09      	ldr	r2, [pc, #36]	; (80085b8 <Zerobss+0x1c>)
 8008594:	e002      	b.n	800859c <Zerobss>

08008596 <FillZerobss>:
 8008596:	2300      	movs	r3, #0
 8008598:	f842 3b04 	str.w	r3, [r2], #4

0800859c <Zerobss>:
 800859c:	4b07      	ldr	r3, [pc, #28]	; (80085bc <Zerobss+0x20>)
 800859e:	429a      	cmp	r2, r3
 80085a0:	d3f9      	bcc.n	8008596 <FillZerobss>
 80085a2:	f00a fc29 	bl	8012df8 <SystemInit>
 80085a6:	f000 f98d 	bl	80088c4 <main>
 80085aa:	4770      	bx	lr
 80085ac:	08017170 	stmdaeq	r1, {r4, r5, r6, r8, ip, sp, lr}
 80085b0:	20000000 	andcs	r0, r0, r0
 80085b4:	200000fc 	strdcs	r0, [r0], -ip
 80085b8:	20000100 	andcs	r0, r0, r0, lsl #2
 80085bc:	2000e3c4 	andcs	lr, r0, r4, asr #7

080085c0 <ADC0_1_IRQHandler>:
 80085c0:	e7fe      	b.n	80085c0 <ADC0_1_IRQHandler>

080085c2 <memcmp>:
 80085c2:	b510      	push	{r4, lr}
 80085c4:	3901      	subs	r1, #1
 80085c6:	4402      	add	r2, r0
 80085c8:	4290      	cmp	r0, r2
 80085ca:	d101      	bne.n	80085d0 <memcmp+0xe>
 80085cc:	2000      	movs	r0, #0
 80085ce:	e005      	b.n	80085dc <memcmp+0x1a>
 80085d0:	7803      	ldrb	r3, [r0, #0]
 80085d2:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 80085d6:	42a3      	cmp	r3, r4
 80085d8:	d001      	beq.n	80085de <memcmp+0x1c>
 80085da:	1b18      	subs	r0, r3, r4
 80085dc:	bd10      	pop	{r4, pc}
 80085de:	3001      	adds	r0, #1
 80085e0:	e7f2      	b.n	80085c8 <memcmp+0x6>

080085e2 <memcpy>:
 80085e2:	b510      	push	{r4, lr}
 80085e4:	1e43      	subs	r3, r0, #1
 80085e6:	440a      	add	r2, r1
 80085e8:	4291      	cmp	r1, r2
 80085ea:	d100      	bne.n	80085ee <memcpy+0xc>
 80085ec:	bd10      	pop	{r4, pc}
 80085ee:	f811 4b01 	ldrb.w	r4, [r1], #1
 80085f2:	f803 4f01 	strb.w	r4, [r3, #1]!
 80085f6:	e7f7      	b.n	80085e8 <memcpy+0x6>

080085f8 <DisplayHandler::~DisplayHandler()>:
 80085f8:	4770      	bx	lr

080085fa <E131Reboot::~E131Reboot()>:
 80085fa:	4770      	bx	lr

080085fc <dmxconfigudp::atoi(char const*, unsigned char)>:
 80085fc:	b530      	push	{r4, r5, lr}
 80085fe:	1e42      	subs	r2, r0, #1
 8008600:	250a      	movs	r5, #10
 8008602:	2000      	movs	r0, #0
 8008604:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 8008608:	3b30      	subs	r3, #48	; 0x30
 800860a:	b2dc      	uxtb	r4, r3
 800860c:	2c09      	cmp	r4, #9
 800860e:	d805      	bhi.n	800861c <dmxconfigudp::atoi(char const*, unsigned char)+0x20>
 8008610:	3901      	subs	r1, #1
 8008612:	f011 01ff 	ands.w	r1, r1, #255	; 0xff
 8008616:	fb05 3000 	mla	r0, r5, r0, r3
 800861a:	d1f3      	bne.n	8008604 <dmxconfigudp::atoi(char const*, unsigned char)+0x8>
 800861c:	bd30      	pop	{r4, r5, pc}

0800861e <RDMNetDevice::CopyUID(unsigned char*)>:
 800861e:	460b      	mov	r3, r1
 8008620:	2206      	movs	r2, #6
 8008622:	1d01      	adds	r1, r0, #4
 8008624:	4618      	mov	r0, r3
 8008626:	f7ff bfdc 	b.w	80085e2 <memcpy>

0800862a <non-virtual thunk to RDMNetDevice::CopyUID(unsigned char*)>:
 800862a:	f1a0 00cc 	sub.w	r0, r0, #204	; 0xcc
 800862e:	e7f6      	b.n	800861e <RDMNetDevice::CopyUID(unsigned char*)>

08008630 <RDMNetDevice::CopyCID(unsigned char*)>:
 8008630:	4608      	mov	r0, r1
 8008632:	2210      	movs	r2, #16
 8008634:	4901      	ldr	r1, [pc, #4]	; (800863c <RDMNetDevice::CopyCID(unsigned char*)+0xc>)
 8008636:	f7ff bfd4 	b.w	80085e2 <memcpy>
 800863a:	bf00      	nop
 800863c:	20000e2b 	andcs	r0, r0, fp, lsr #28

08008640 <non-virtual thunk to RDMNetDevice::CopyCID(unsigned char*)>:
 8008640:	f1a0 00cc 	sub.w	r0, r0, #204	; 0xcc
 8008644:	e7f4      	b.n	8008630 <RDMNetDevice::CopyCID(unsigned char*)>
 8008646:	bf00      	nop

08008648 <FactoryDefaults::~FactoryDefaults()>:
 8008648:	4770      	bx	lr
	...

0800864c <E131Reboot::Run()>:
 800864c:	b510      	push	{r4, lr}
 800864e:	4c07      	ldr	r4, [pc, #28]	; (800866c <E131Reboot::Run()+0x20>)
 8008650:	6820      	ldr	r0, [r4, #0]
 8008652:	f001 fa6b 	bl	8009b2c <E131Bridge::Stop()>
 8008656:	6823      	ldr	r3, [r4, #0]
 8008658:	6858      	ldr	r0, [r3, #4]
 800865a:	b128      	cbz	r0, 8008668 <E131Reboot::Run()+0x1c>
 800865c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8008660:	6803      	ldr	r3, [r0, #0]
 8008662:	2101      	movs	r1, #1
 8008664:	695b      	ldr	r3, [r3, #20]
 8008666:	4718      	bx	r3
 8008668:	bd10      	pop	{r4, pc}
 800866a:	bf00      	nop
 800866c:	20000d14 	andcs	r0, r0, r4, lsl sp

08008670 <E131Reboot::~E131Reboot()>:
 8008670:	b510      	push	{r4, lr}
 8008672:	4604      	mov	r4, r0
 8008674:	f00a f96c 	bl	8012950 <operator delete(void*)>
 8008678:	4620      	mov	r0, r4
 800867a:	bd10      	pop	{r4, pc}

0800867c <DisplayHandler::~DisplayHandler()>:
 800867c:	b510      	push	{r4, lr}
 800867e:	4604      	mov	r4, r0
 8008680:	f00a f966 	bl	8012950 <operator delete(void*)>
 8008684:	4620      	mov	r0, r4
 8008686:	bd10      	pop	{r4, pc}

08008688 <FactoryDefaults::~FactoryDefaults()>:
 8008688:	b510      	push	{r4, lr}
 800868a:	4604      	mov	r4, r0
 800868c:	f00a f960 	bl	8012950 <operator delete(void*)>
 8008690:	4620      	mov	r0, r4
 8008692:	bd10      	pop	{r4, pc}

08008694 <RDMNetDevice::LLRPHandleRdmCommand(unsigned char const*)>:
 8008694:	b510      	push	{r4, lr}
 8008696:	4c03      	ldr	r4, [pc, #12]	; (80086a4 <RDMNetDevice::LLRPHandleRdmCommand(unsigned char const*)+0x10>)
 8008698:	30d0      	adds	r0, #208	; 0xd0
 800869a:	4622      	mov	r2, r4
 800869c:	f003 fb46 	bl	800bd2c <RDMHandler::HandleData(unsigned char const*, unsigned char*)>
 80086a0:	4620      	mov	r0, r4
 80086a2:	bd10      	pop	{r4, pc}
 80086a4:	20000d2c 	andcs	r0, r0, ip, lsr #26

080086a8 <non-virtual thunk to RDMNetDevice::LLRPHandleRdmCommand(unsigned char const*)>:
 80086a8:	f1a0 00cc 	sub.w	r0, r0, #204	; 0xcc
 80086ac:	e7f2      	b.n	8008694 <RDMNetDevice::LLRPHandleRdmCommand(unsigned char const*)>
 80086ae:	bf00      	nop

080086b0 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>:
 80086b0:	b110      	cbz	r0, 80086b8 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]+0x8>
 80086b2:	6803      	ldr	r3, [r0, #0]
 80086b4:	6a1b      	ldr	r3, [r3, #32]
 80086b6:	4718      	bx	r3
 80086b8:	4770      	bx	lr

080086ba <Display::PutChar(int) [clone .isra.0]>:
 80086ba:	b110      	cbz	r0, 80086c2 <Display::PutChar(int) [clone .isra.0]+0x8>
 80086bc:	6803      	ldr	r3, [r0, #0]
 80086be:	695b      	ldr	r3, [r3, #20]
 80086c0:	4718      	bx	r3
 80086c2:	4770      	bx	lr

080086c4 <DisplayHandler::Print(unsigned int)>:
 80086c4:	b538      	push	{r3, r4, r5, lr}
 80086c6:	7903      	ldrb	r3, [r0, #4]
 80086c8:	b1f3      	cbz	r3, 8008708 <DisplayHandler::Print(unsigned int)+0x44>
 80086ca:	2904      	cmp	r1, #4
 80086cc:	bf98      	it	ls
 80086ce:	4b0f      	ldrls	r3, [pc, #60]	; (800870c <DisplayHandler::Print(unsigned int)+0x48>)
 80086d0:	4d0f      	ldr	r5, [pc, #60]	; (8008710 <DisplayHandler::Print(unsigned int)+0x4c>)
 80086d2:	bf98      	it	ls
 80086d4:	5c5c      	ldrbls	r4, [r3, r1]
 80086d6:	682b      	ldr	r3, [r5, #0]
 80086d8:	bf88      	it	hi
 80086da:	2455      	movhi	r4, #85	; 0x55
 80086dc:	6998      	ldr	r0, [r3, #24]
 80086de:	b178      	cbz	r0, 8008700 <DisplayHandler::Print(unsigned int)+0x3c>
 80086e0:	7901      	ldrb	r1, [r0, #4]
 80086e2:	3901      	subs	r1, #1
 80086e4:	b2c9      	uxtb	r1, r1
 80086e6:	b168      	cbz	r0, 8008704 <DisplayHandler::Print(unsigned int)+0x40>
 80086e8:	7942      	ldrb	r2, [r0, #5]
 80086ea:	3a01      	subs	r2, #1
 80086ec:	b2d2      	uxtb	r2, r2
 80086ee:	f7ff ffdf 	bl	80086b0 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 80086f2:	682b      	ldr	r3, [r5, #0]
 80086f4:	4621      	mov	r1, r4
 80086f6:	6998      	ldr	r0, [r3, #24]
 80086f8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80086fc:	f7ff bfdd 	b.w	80086ba <Display::PutChar(int) [clone .isra.0]>
 8008700:	4601      	mov	r1, r0
 8008702:	e7ee      	b.n	80086e2 <DisplayHandler::Print(unsigned int)+0x1e>
 8008704:	4602      	mov	r2, r0
 8008706:	e7f0      	b.n	80086ea <DisplayHandler::Print(unsigned int)+0x26>
 8008708:	bd38      	pop	{r3, r4, r5, pc}
 800870a:	bf00      	nop
 800870c:	08014e34 	stmdaeq	r1, {r2, r4, r5, r9, sl, fp, lr}
 8008710:	2000a640 	andcs	sl, r0, r0, asr #12

08008714 <RDMNetDevice::~RDMNetDevice()>:
 8008714:	b510      	push	{r4, lr}
 8008716:	4604      	mov	r4, r0
 8008718:	4b05      	ldr	r3, [pc, #20]	; (8008730 <RDMNetDevice::~RDMNetDevice()+0x1c>)
 800871a:	f840 3b88 	str.w	r3, [r0], #136
 800871e:	f002 fda3 	bl	800b268 <RDMSubDevices::~RDMSubDevices()>
 8008722:	f104 0080 	add.w	r0, r4, #128	; 0x80
 8008726:	f002 fd7f 	bl	800b228 <RDMSensors::~RDMSensors()>
 800872a:	4620      	mov	r0, r4
 800872c:	bd10      	pop	{r4, pc}
 800872e:	bf00      	nop
 8008730:	08015284 	stmdaeq	r1, {r2, r7, r9, ip, lr}

08008734 <non-virtual thunk to RDMNetDevice::~RDMNetDevice()>:
 8008734:	f1a0 00cc 	sub.w	r0, r0, #204	; 0xcc
 8008738:	e7ec      	b.n	8008714 <RDMNetDevice::~RDMNetDevice()>
 800873a:	bf00      	nop

0800873c <RDMNetDevice::~RDMNetDevice()>:
 800873c:	b510      	push	{r4, lr}
 800873e:	4604      	mov	r4, r0
 8008740:	f7ff ffe8 	bl	8008714 <RDMNetDevice::~RDMNetDevice()>
 8008744:	4620      	mov	r0, r4
 8008746:	f00a f903 	bl	8012950 <operator delete(void*)>
 800874a:	4620      	mov	r0, r4
 800874c:	bd10      	pop	{r4, pc}

0800874e <non-virtual thunk to RDMNetDevice::~RDMNetDevice()>:
 800874e:	f1a0 00cc 	sub.w	r0, r0, #204	; 0xcc
 8008752:	e7f3      	b.n	800873c <RDMNetDevice::~RDMNetDevice()>

08008754 <Display::SetSleep(bool)>:
 8008754:	b538      	push	{r3, r4, r5, lr}
 8008756:	4604      	mov	r4, r0
 8008758:	6980      	ldr	r0, [r0, #24]
 800875a:	460d      	mov	r5, r1
 800875c:	b138      	cbz	r0, 800876e <Display::SetSleep(bool)+0x1a>
 800875e:	6803      	ldr	r3, [r0, #0]
 8008760:	7421      	strb	r1, [r4, #16]
 8008762:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008764:	4798      	blx	r3
 8008766:	b915      	cbnz	r5, 800876e <Display::SetSleep(bool)+0x1a>
 8008768:	4b01      	ldr	r3, [pc, #4]	; (8008770 <Display::SetSleep(bool)+0x1c>)
 800876a:	681b      	ldr	r3, [r3, #0]
 800876c:	6063      	str	r3, [r4, #4]
 800876e:	bd38      	pop	{r3, r4, r5, pc}
 8008770:	2000a744 	andcs	sl, r0, r4, asr #14

08008774 <Display::TextStatus(char const*)>:
 8008774:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008778:	4604      	mov	r4, r0
 800877a:	6980      	ldr	r0, [r0, #24]
 800877c:	460d      	mov	r5, r1
 800877e:	b360      	cbz	r0, 80087da <Display::TextStatus(char const*)+0x66>
 8008780:	7947      	ldrb	r7, [r0, #5]
 8008782:	2100      	movs	r1, #0
 8008784:	1e7e      	subs	r6, r7, #1
 8008786:	b2f6      	uxtb	r6, r6
 8008788:	4632      	mov	r2, r6
 800878a:	f890 9004 	ldrb.w	r9, [r0, #4]
 800878e:	f04f 0800 	mov.w	r8, #0
 8008792:	f7ff ff8d 	bl	80086b0 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 8008796:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 800879a:	45c1      	cmp	r9, r8
 800879c:	69a0      	ldr	r0, [r4, #24]
 800879e:	d816      	bhi.n	80087ce <Display::TextStatus(char const*)+0x5a>
 80087a0:	4632      	mov	r2, r6
 80087a2:	2100      	movs	r1, #0
 80087a4:	f7ff ff84 	bl	80086b0 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 80087a8:	69a0      	ldr	r0, [r4, #24]
 80087aa:	b1b0      	cbz	r0, 80087da <Display::TextStatus(char const*)+0x66>
 80087ac:	2300      	movs	r3, #0
 80087ae:	7901      	ldrb	r1, [r0, #4]
 80087b0:	5cea      	ldrb	r2, [r5, r3]
 80087b2:	b11a      	cbz	r2, 80087bc <Display::TextStatus(char const*)+0x48>
 80087b4:	1c5a      	adds	r2, r3, #1
 80087b6:	4299      	cmp	r1, r3
 80087b8:	4613      	mov	r3, r2
 80087ba:	dcf9      	bgt.n	80087b0 <Display::TextStatus(char const*)+0x3c>
 80087bc:	6802      	ldr	r2, [r0, #0]
 80087be:	4639      	mov	r1, r7
 80087c0:	69d4      	ldr	r4, [r2, #28]
 80087c2:	b2db      	uxtb	r3, r3
 80087c4:	462a      	mov	r2, r5
 80087c6:	46a4      	mov	ip, r4
 80087c8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80087cc:	4760      	bx	ip
 80087ce:	2120      	movs	r1, #32
 80087d0:	f7ff ff73 	bl	80086ba <Display::PutChar(int) [clone .isra.0]>
 80087d4:	f108 0801 	add.w	r8, r8, #1
 80087d8:	e7df      	b.n	800879a <Display::TextStatus(char const*)+0x26>
 80087da:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

080087de <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>:
 80087de:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80087e0:	4605      	mov	r5, r0
 80087e2:	461e      	mov	r6, r3
 80087e4:	460f      	mov	r7, r1
 80087e6:	4614      	mov	r4, r2
 80087e8:	f7ff ffc4 	bl	8008774 <Display::TextStatus(char const*)>
 80087ec:	7c6b      	ldrb	r3, [r5, #17]
 80087ee:	b19b      	cbz	r3, 8008818 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x3a>
 80087f0:	43e2      	mvns	r2, r4
 80087f2:	2312      	movs	r3, #18
 80087f4:	7a28      	ldrb	r0, [r5, #8]
 80087f6:	f88d 3004 	strb.w	r3, [sp, #4]
 80087fa:	f3c2 2307 	ubfx	r3, r2, #8, #8
 80087fe:	f88d 3005 	strb.w	r3, [sp, #5]
 8008802:	f88d 2006 	strb.w	r2, [sp, #6]
 8008806:	f00b fa5d 	bl	8013cc4 <gd32_i2c_set_address(unsigned char)>
 800880a:	68e8      	ldr	r0, [r5, #12]
 800880c:	f00b fa52 	bl	8013cb4 <gd32_i2c_set_baudrate(unsigned int)>
 8008810:	2103      	movs	r1, #3
 8008812:	a801      	add	r0, sp, #4
 8008814:	f00b fa5c 	bl	8013cd0 <gd32_i2c_write(char const*, unsigned int)>
 8008818:	1c73      	adds	r3, r6, #1
 800881a:	d006      	beq.n	800882a <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x4c>
 800881c:	4639      	mov	r1, r7
 800881e:	4630      	mov	r0, r6
 8008820:	b003      	add	sp, #12
 8008822:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8008826:	f009 bf31 	b.w	801268c <console_status>
 800882a:	b003      	add	sp, #12
 800882c:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08008830 <display::timeout::gpio_init()>:
 8008830:	b510      	push	{r4, lr}
 8008832:	f240 6003 	movw	r0, #1539	; 0x603
 8008836:	f00a fd15 	bl	8013264 <rcu_periph_clock_enable>
 800883a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800883e:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8008842:	2203      	movs	r2, #3
 8008844:	2148      	movs	r1, #72	; 0x48
 8008846:	4801      	ldr	r0, [pc, #4]	; (800884c <display::timeout::gpio_init()+0x1c>)
 8008848:	f00a bc74 	b.w	8013134 <gpio_init>
 800884c:	40010c00 	andmi	r0, r1, r0, lsl #24

08008850 <display::timeout::gpio_renew()>:
 8008850:	4b03      	ldr	r3, [pc, #12]	; (8008860 <display::timeout::gpio_renew()+0x10>)
 8008852:	f8d3 0c08 	ldr.w	r0, [r3, #3080]	; 0xc08
 8008856:	f480 4080 	eor.w	r0, r0, #16384	; 0x4000
 800885a:	f3c0 3080 	ubfx	r0, r0, #14, #1
 800885e:	4770      	bx	lr
 8008860:	40010000 	andmi	r0, r1, r0

08008864 <StoreNetwork::SaveDhcp(bool)>:
 8008864:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8008866:	2301      	movs	r3, #1
 8008868:	f88d 1017 	strb.w	r1, [sp, #23]
 800886c:	2100      	movs	r1, #0
 800886e:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8008872:	4805      	ldr	r0, [pc, #20]	; (8008888 <StoreNetwork::SaveDhcp(bool)+0x24>)
 8008874:	9300      	str	r3, [sp, #0]
 8008876:	2214      	movs	r2, #20
 8008878:	6800      	ldr	r0, [r0, #0]
 800887a:	f10d 0317 	add.w	r3, sp, #23
 800887e:	f006 f849 	bl	800e914 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8008882:	b007      	add	sp, #28
 8008884:	f85d fb04 	ldr.w	pc, [sp], #4
 8008888:	20002700 	andcs	r2, r0, r0, lsl #14

0800888c <non-virtual thunk to StoreNetwork::SaveDhcp(bool)>:
 800888c:	f1a0 0004 	sub.w	r0, r0, #4
 8008890:	e7e8      	b.n	8008864 <StoreNetwork::SaveDhcp(bool)>
 8008892:	bf00      	nop

08008894 <FactoryDefaults::Set()>:
 8008894:	b508      	push	{r3, lr}
 8008896:	4b08      	ldr	r3, [pc, #32]	; (80088b8 <FactoryDefaults::Set()+0x24>)
 8008898:	2100      	movs	r1, #0
 800889a:	6818      	ldr	r0, [r3, #0]
 800889c:	f004 fea2 	bl	800d5e4 <RemoteConfig::SetDisable(bool)>
 80088a0:	4b06      	ldr	r3, [pc, #24]	; (80088bc <FactoryDefaults::Set()+0x28>)
 80088a2:	210b      	movs	r1, #11
 80088a4:	6818      	ldr	r0, [r3, #0]
 80088a6:	f006 f823 	bl	800e8f0 <SpiFlashStore::ResetSetList(spiflashstore::Store)>
 80088aa:	4b05      	ldr	r3, [pc, #20]	; (80088c0 <FactoryDefaults::Set()+0x2c>)
 80088ac:	2101      	movs	r1, #1
 80088ae:	6818      	ldr	r0, [r3, #0]
 80088b0:	f7ff ffd8 	bl	8008864 <StoreNetwork::SaveDhcp(bool)>
 80088b4:	bd08      	pop	{r3, pc}
 80088b6:	bf00      	nop
 80088b8:	200016e8 	andcs	r1, r0, r8, ror #13
 80088bc:	20002700 	andcs	r2, r0, r0, lsl #14
 80088c0:	20002714 	andcs	r2, r0, r4, lsl r7

080088c4 <main>:
 80088c4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80088c8:	2501      	movs	r5, #1
 80088ca:	f6ad 7d24 	subw	sp, sp, #3876	; 0xf24
 80088ce:	a80e      	add	r0, sp, #56	; 0x38
 80088d0:	f009 ff90 	bl	80127f4 <Hardware::Hardware()>
 80088d4:	a877      	add	r0, sp, #476	; 0x1dc
 80088d6:	f007 fbe7 	bl	80100a8 <Network::Network()>
 80088da:	a818      	add	r0, sp, #96	; 0x60
 80088dc:	f009 ff34 	bl	8012748 <LedBlink::LedBlink()>
 80088e0:	a861      	add	r0, sp, #388	; 0x184
 80088e2:	f008 fda7 	bl	8011434 <DisplayUdf::DisplayUdf()>
 80088e6:	4ab1      	ldr	r2, [pc, #708]	; (8008bac <main+0x2e8>)
 80088e8:	4bb1      	ldr	r3, [pc, #708]	; (8008bb0 <main+0x2ec>)
 80088ea:	49b2      	ldr	r1, [pc, #712]	; (8008bb4 <main+0x2f0>)
 80088ec:	a802      	add	r0, sp, #8
 80088ee:	f009 fee5 	bl	80126bc <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>
 80088f2:	a803      	add	r0, sp, #12
 80088f4:	f006 fa96 	bl	800ee24 <FlashRom::FlashRom()>
 80088f8:	4eaf      	ldr	r6, [pc, #700]	; (8008bb8 <main+0x2f4>)
 80088fa:	a804      	add	r0, sp, #16
 80088fc:	f005 ffd2 	bl	800e8a4 <SpiFlashStore::SpiFlashStore()>
 8008900:	49ae      	ldr	r1, [pc, #696]	; (8008bbc <main+0x2f8>)
 8008902:	a802      	add	r0, sp, #8
 8008904:	f009 ff12 	bl	801272c <FirmwareVersion::Print(char const*)>
 8008908:	2004      	movs	r0, #4
 800890a:	6135      	str	r5, [r6, #16]
 800890c:	f00a f824 	bl	8012958 <operator new(unsigned int)>
 8008910:	4bab      	ldr	r3, [pc, #684]	; (8008bc0 <main+0x2fc>)
 8008912:	900e      	str	r0, [sp, #56]	; 0x38
 8008914:	6003      	str	r3, [r0, #0]
 8008916:	2008      	movs	r0, #8
 8008918:	f00a f81e 	bl	8012958 <operator new(unsigned int)>
 800891c:	4ba9      	ldr	r3, [pc, #676]	; (8008bc4 <main+0x300>)
 800891e:	2400      	movs	r4, #0
 8008920:	6003      	str	r3, [r0, #0]
 8008922:	4ba9      	ldr	r3, [pc, #676]	; (8008bc8 <main+0x304>)
 8008924:	f44f 62c0 	mov.w	r2, #1536	; 0x600
 8008928:	681b      	ldr	r3, [r3, #0]
 800892a:	49a8      	ldr	r1, [pc, #672]	; (8008bcc <main+0x308>)
 800892c:	3b00      	subs	r3, #0
 800892e:	bf18      	it	ne
 8008930:	2301      	movne	r3, #1
 8008932:	901a      	str	r0, [sp, #104]	; 0x68
 8008934:	7103      	strb	r3, [r0, #4]
 8008936:	2303      	movs	r3, #3
 8008938:	a861      	add	r0, sp, #388	; 0x184
 800893a:	f7ff ff50 	bl	80087de <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 800893e:	a810      	add	r0, sp, #64	; 0x40
 8008940:	f006 f9d2 	bl	800ece8 <StoreNetwork::StoreNetwork()>
 8008944:	ab11      	add	r3, sp, #68	; 0x44
 8008946:	a910      	add	r1, sp, #64	; 0x40
 8008948:	a877      	add	r0, sp, #476	; 0x1dc
 800894a:	93a4      	str	r3, [sp, #656]	; 0x290
 800894c:	f007 fc04 	bl	8010158 <Network::Init(NetworkParamsStore*)>
 8008950:	a877      	add	r0, sp, #476	; 0x1dc
 8008952:	f007 fe53 	bl	80105fc <Network::Print()>
 8008956:	2303      	movs	r3, #3
 8008958:	f44f 62e0 	mov.w	r2, #1792	; 0x700
 800895c:	499c      	ldr	r1, [pc, #624]	; (8008bd0 <main+0x30c>)
 800895e:	a861      	add	r0, sp, #388	; 0x184
 8008960:	f7ff ff3d 	bl	80087de <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008964:	a805      	add	r0, sp, #20
 8008966:	f006 ffe1 	bl	800f92c <MDNS::MDNS()>
 800896a:	a805      	add	r0, sp, #20
 800896c:	f007 f89e 	bl	800faac <MDNS::Start()>
 8008970:	f642 1305 	movw	r3, #10501	; 0x2905
 8008974:	4621      	mov	r1, r4
 8008976:	4a97      	ldr	r2, [pc, #604]	; (8008bd4 <main+0x310>)
 8008978:	e9cd 4400 	strd	r4, r4, [sp]
 800897c:	a805      	add	r0, sp, #20
 800897e:	f007 f9ff 	bl	800fd80 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 8008982:	4b95      	ldr	r3, [pc, #596]	; (8008bd8 <main+0x314>)
 8008984:	4621      	mov	r1, r4
 8008986:	4a95      	ldr	r2, [pc, #596]	; (8008bdc <main+0x318>)
 8008988:	e9cd 5300 	strd	r5, r3, [sp]
 800898c:	a805      	add	r0, sp, #20
 800898e:	2350      	movs	r3, #80	; 0x50
 8008990:	f007 f9f6 	bl	800fd80 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 8008994:	a805      	add	r0, sp, #20
 8008996:	f007 fb39 	bl	801000c <MDNS::Print()>
 800899a:	2303      	movs	r3, #3
 800899c:	f44f 42cc 	mov.w	r2, #26112	; 0x6600
 80089a0:	498f      	ldr	r1, [pc, #572]	; (8008be0 <main+0x31c>)
 80089a2:	a861      	add	r0, sp, #388	; 0x184
 80089a4:	f7ff ff1b 	bl	80087de <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 80089a8:	a806      	add	r0, sp, #24
 80089aa:	f006 f909 	bl	800ebc0 <StoreE131::StoreE131()>
 80089ae:	a906      	add	r1, sp, #24
 80089b0:	a830      	add	r0, sp, #192	; 0xc0
 80089b2:	f002 f809 	bl	800a9c8 <E131Params::E131Params(E131ParamsStore*)>
 80089b6:	a8e0      	add	r0, sp, #896	; 0x380
 80089b8:	f001 f906 	bl	8009bc8 <E131Bridge::E131Bridge()>
 80089bc:	a830      	add	r0, sp, #192	; 0xc0
 80089be:	f002 f823 	bl	800aa08 <E131Params::Load()>
 80089c2:	b130      	cbz	r0, 80089d2 <main+0x10e>
 80089c4:	a830      	add	r0, sp, #192	; 0xc0
 80089c6:	a9e0      	add	r1, sp, #896	; 0x380
 80089c8:	f002 fa65 	bl	800ae96 <E131Params::Set(E131Bridge*)>
 80089cc:	a830      	add	r0, sp, #192	; 0xc0
 80089ce:	f002 fa8e 	bl	800aeee <E131Params::Dump()>
 80089d2:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 80089d4:	06da      	lsls	r2, r3, #27
 80089d6:	d509      	bpl.n	80089ec <main+0x128>
 80089d8:	f89d 20de 	ldrb.w	r2, [sp, #222]	; 0xde
 80089dc:	2100      	movs	r1, #0
 80089de:	f8bd 30cb 	ldrh.w	r3, [sp, #203]	; 0xcb
 80089e2:	f002 0201 	and.w	r2, r2, #1
 80089e6:	a8e0      	add	r0, sp, #896	; 0x380
 80089e8:	f001 f98c 	bl	8009d04 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)>
 80089ec:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 80089ee:	069b      	lsls	r3, r3, #26
 80089f0:	d509      	bpl.n	8008a06 <main+0x142>
 80089f2:	f89d 20de 	ldrb.w	r2, [sp, #222]	; 0xde
 80089f6:	2101      	movs	r1, #1
 80089f8:	f8bd 30cd 	ldrh.w	r3, [sp, #205]	; 0xcd
 80089fc:	f3c2 0240 	ubfx	r2, r2, #1, #1
 8008a00:	a8e0      	add	r0, sp, #896	; 0x380
 8008a02:	f001 f97f 	bl	8009d04 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)>
 8008a06:	a807      	add	r0, sp, #28
 8008a08:	f006 f8a6 	bl	800eb58 <StoreDmxSend::StoreDmxSend()>
 8008a0c:	a907      	add	r1, sp, #28
 8008a0e:	a814      	add	r0, sp, #80	; 0x50
 8008a10:	f003 fd96 	bl	800c540 <DmxParams::DmxParams(DmxParamsStore*)>
 8008a14:	a839      	add	r0, sp, #228	; 0xe4
 8008a16:	f004 fa91 	bl	800cf3c <Dmx::Dmx()>
 8008a1a:	a814      	add	r0, sp, #80	; 0x50
 8008a1c:	f003 fd9c 	bl	800c558 <DmxParams::Load()>
 8008a20:	b130      	cbz	r0, 8008a30 <main+0x16c>
 8008a22:	a814      	add	r0, sp, #80	; 0x50
 8008a24:	f003 fee6 	bl	800c7f4 <DmxParams::Dump()>
 8008a28:	a939      	add	r1, sp, #228	; 0xe4
 8008a2a:	a814      	add	r0, sp, #80	; 0x50
 8008a2c:	f003 feb8 	bl	800c7a0 <DmxParams::Set(Dmx*)>
 8008a30:	4b6c      	ldr	r3, [pc, #432]	; (8008be4 <main+0x320>)
 8008a32:	ac08      	add	r4, sp, #32
 8008a34:	4620      	mov	r0, r4
 8008a36:	9308      	str	r3, [sp, #32]
 8008a38:	f003 fd28 	bl	800c48c <DmxSend::Print()>
 8008a3c:	f89d 588b 	ldrb.w	r5, [sp, #2187]	; 0x88b
 8008a40:	b165      	cbz	r5, 8008a5c <main+0x198>
 8008a42:	2001      	movs	r0, #1
 8008a44:	94e1      	str	r4, [sp, #900]	; 0x384
 8008a46:	f009 ff87 	bl	8012958 <operator new(unsigned int)>
 8008a4a:	4b67      	ldr	r3, [pc, #412]	; (8008be8 <main+0x324>)
 8008a4c:	4605      	mov	r5, r0
 8008a4e:	f44f 51a0 	mov.w	r1, #5120	; 0x1400
 8008a52:	6818      	ldr	r0, [r3, #0]
 8008a54:	f007 fb58 	bl	8010108 <Network::Begin(unsigned short)>
 8008a58:	4b64      	ldr	r3, [pc, #400]	; (8008bec <main+0x328>)
 8008a5a:	6018      	str	r0, [r3, #0]
 8008a5c:	ac09      	add	r4, sp, #36	; 0x24
 8008a5e:	4620      	mov	r0, r4
 8008a60:	f000 fa96 	bl	8008f90 <DmxInput::DmxInput()>
 8008a64:	f89d 388a 	ldrb.w	r3, [sp, #2186]	; 0x88a
 8008a68:	b103      	cbz	r3, 8008a6c <main+0x1a8>
 8008a6a:	94e5      	str	r4, [sp, #916]	; 0x394
 8008a6c:	f89d 788b 	ldrb.w	r7, [sp, #2187]	; 0x88b
 8008a70:	f44f 42fe 	mov.w	r2, #32512	; 0x7f00
 8008a74:	495e      	ldr	r1, [pc, #376]	; (8008bf0 <main+0x32c>)
 8008a76:	441f      	add	r7, r3
 8008a78:	a861      	add	r0, sp, #388	; 0x184
 8008a7a:	2303      	movs	r3, #3
 8008a7c:	f7ff feaf 	bl	80087de <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008a80:	463b      	mov	r3, r7
 8008a82:	2120      	movs	r1, #32
 8008a84:	4a5b      	ldr	r2, [pc, #364]	; (8008bf4 <main+0x330>)
 8008a86:	a81e      	add	r0, sp, #120	; 0x78
 8008a88:	f000 fdc0 	bl	800960c <snprintf>
 8008a8c:	4a5a      	ldr	r2, [pc, #360]	; (8008bf8 <main+0x334>)
 8008a8e:	2120      	movs	r1, #32
 8008a90:	a827      	add	r0, sp, #156	; 0x9c
 8008a92:	f000 fdbb 	bl	800960c <snprintf>
 8008a96:	4604      	mov	r4, r0
 8008a98:	202c      	movs	r0, #44	; 0x2c
 8008a9a:	f009 ff5d 	bl	8012958 <operator new(unsigned int)>
 8008a9e:	2200      	movs	r2, #0
 8008aa0:	4603      	mov	r3, r0
 8008aa2:	6042      	str	r2, [r0, #4]
 8008aa4:	6282      	str	r2, [r0, #40]	; 0x28
 8008aa6:	f100 0c28 	add.w	ip, r0, #40	; 0x28
 8008aaa:	f823 2b08 	strh.w	r2, [r3], #8
 8008aae:	aa1e      	add	r2, sp, #120	; 0x78
 8008ab0:	f812 1b01 	ldrb.w	r1, [r2], #1
 8008ab4:	b111      	cbz	r1, 8008abc <main+0x1f8>
 8008ab6:	459c      	cmp	ip, r3
 8008ab8:	f040 8188 	bne.w	8008dcc <main+0x508>
 8008abc:	2201      	movs	r2, #1
 8008abe:	a90a      	add	r1, sp, #40	; 0x28
 8008ac0:	900a      	str	r0, [sp, #40]	; 0x28
 8008ac2:	a8a9      	add	r0, sp, #676	; 0x2a4
 8008ac4:	f002 fd1a 	bl	800b4fc <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)>
 8008ac8:	a8dc      	add	r0, sp, #880	; 0x370
 8008aca:	f002 fa71 	bl	800afb0 <LLRPDevice::LLRPDevice()>
 8008ace:	4b4b      	ldr	r3, [pc, #300]	; (8008bfc <main+0x338>)
 8008ad0:	2100      	movs	r1, #0
 8008ad2:	93a9      	str	r3, [sp, #676]	; 0x2a4
 8008ad4:	a8dd      	add	r0, sp, #884	; 0x374
 8008ad6:	3324      	adds	r3, #36	; 0x24
 8008ad8:	93dc      	str	r3, [sp, #880]	; 0x370
 8008ada:	f002 fee5 	bl	800b8a8 <RDMHandler::RDMHandler(bool)>
 8008ade:	4b48      	ldr	r3, [pc, #288]	; (8008c00 <main+0x33c>)
 8008ae0:	b2e4      	uxtb	r4, r4
 8008ae2:	4948      	ldr	r1, [pc, #288]	; (8008c04 <main+0x340>)
 8008ae4:	6818      	ldr	r0, [r3, #0]
 8008ae6:	f009 fed9 	bl	801289c <Hardware::GetUuid(unsigned char*)>
 8008aea:	2c20      	cmp	r4, #32
 8008aec:	bf28      	it	cs
 8008aee:	2420      	movcs	r4, #32
 8008af0:	f89d 32f8 	ldrb.w	r3, [sp, #760]	; 0x2f8
 8008af4:	4622      	mov	r2, r4
 8008af6:	a927      	add	r1, sp, #156	; 0x9c
 8008af8:	2b00      	cmp	r3, #0
 8008afa:	f000 816d 	beq.w	8008dd8 <main+0x514>
 8008afe:	f20d 20b2 	addw	r0, sp, #690	; 0x2b2
 8008b02:	f7ff fd6e 	bl	80085e2 <memcpy>
 8008b06:	98c7      	ldr	r0, [sp, #796]	; 0x31c
 8008b08:	f88d 42d2 	strb.w	r4, [sp, #722]	; 0x2d2
 8008b0c:	b128      	cbz	r0, 8008b1a <main+0x256>
 8008b0e:	6803      	ldr	r3, [r0, #0]
 8008b10:	4622      	mov	r2, r4
 8008b12:	689b      	ldr	r3, [r3, #8]
 8008b14:	f20d 21b2 	addw	r1, sp, #690	; 0x2b2
 8008b18:	4798      	blx	r3
 8008b1a:	4b3b      	ldr	r3, [pc, #236]	; (8008c08 <main+0x344>)
 8008b1c:	2004      	movs	r0, #4
 8008b1e:	93bd      	str	r3, [sp, #756]	; 0x2f4
 8008b20:	f009 ff1a 	bl	8012958 <operator new(unsigned int)>
 8008b24:	4b39      	ldr	r3, [pc, #228]	; (8008c0c <main+0x348>)
 8008b26:	90db      	str	r0, [sp, #876]	; 0x36c
 8008b28:	6003      	str	r3, [r0, #0]
 8008b2a:	a8a9      	add	r0, sp, #676	; 0x2a4
 8008b2c:	f002 fd44 	bl	800b5b8 <RDMDeviceResponder::Init()>
 8008b30:	a812      	add	r0, sp, #72	; 0x48
 8008b32:	f006 f937 	bl	800eda4 <StoreRDMDevice::StoreRDMDevice()>
 8008b36:	a912      	add	r1, sp, #72	; 0x48
 8008b38:	a855      	add	r0, sp, #340	; 0x154
 8008b3a:	f002 fc47 	bl	800b3cc <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)>
 8008b3e:	a855      	add	r0, sp, #340	; 0x154
 8008b40:	f002 fc56 	bl	800b3f0 <RDMDeviceParams::Load()>
 8008b44:	b130      	cbz	r0, 8008b54 <main+0x290>
 8008b46:	a855      	add	r0, sp, #340	; 0x154
 8008b48:	a9aa      	add	r1, sp, #680	; 0x2a8
 8008b4a:	f002 fc5c 	bl	800b406 <RDMDeviceParams::Set(RDMDevice*)>
 8008b4e:	a855      	add	r0, sp, #340	; 0x154
 8008b50:	f002 fc8e 	bl	800b470 <RDMDeviceParams::Dump()>
 8008b54:	ab13      	add	r3, sp, #76	; 0x4c
 8008b56:	a8a9      	add	r0, sp, #676	; 0x2a4
 8008b58:	93c7      	str	r3, [sp, #796]	; 0x31c
 8008b5a:	f002 fb3d 	bl	800b1d8 <RDMNetDevice::Print()>
 8008b5e:	a8e0      	add	r0, sp, #896	; 0x380
 8008b60:	f001 fe68 	bl	800a834 <E131Bridge::Print()>
 8008b64:	463a      	mov	r2, r7
 8008b66:	492a      	ldr	r1, [pc, #168]	; (8008c10 <main+0x34c>)
 8008b68:	a861      	add	r0, sp, #388	; 0x184
 8008b6a:	f008 fc79 	bl	8011460 <DisplayUdf::SetTitle(char const*, ...)>
 8008b6e:	2202      	movs	r2, #2
 8008b70:	a861      	add	r0, sp, #388	; 0x184
 8008b72:	4611      	mov	r1, r2
 8008b74:	f008 fdca 	bl	801170c <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8008b78:	2207      	movs	r2, #7
 8008b7a:	2103      	movs	r1, #3
 8008b7c:	a861      	add	r0, sp, #388	; 0x184
 8008b7e:	f008 fdc5 	bl	801170c <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8008b82:	2208      	movs	r2, #8
 8008b84:	2104      	movs	r1, #4
 8008b86:	a861      	add	r0, sp, #388	; 0x184
 8008b88:	f008 fdc0 	bl	801170c <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8008b8c:	2209      	movs	r2, #9
 8008b8e:	2105      	movs	r1, #5
 8008b90:	a861      	add	r0, sp, #388	; 0x184
 8008b92:	f008 fdbb 	bl	801170c <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8008b96:	2201      	movs	r2, #1
 8008b98:	2106      	movs	r1, #6
 8008b9a:	a861      	add	r0, sp, #388	; 0x184
 8008b9c:	f008 fdb6 	bl	801170c <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8008ba0:	a80b      	add	r0, sp, #44	; 0x2c
 8008ba2:	f005 ffa5 	bl	800eaf0 <StoreDisplayUdf::StoreDisplayUdf()>
 8008ba6:	a90b      	add	r1, sp, #44	; 0x2c
 8008ba8:	a84b      	add	r0, sp, #300	; 0x12c
 8008baa:	e033      	b.n	8008c14 <main+0x350>
 8008bac:	08014d19 	stmdaeq	r1, {r0, r3, r4, r8, sl, fp, lr}
 8008bb0:	08014d10 	stmdaeq	r1, {r4, r8, sl, fp, lr}
 8008bb4:	08014e39 	stmdaeq	r1, {r0, r3, r4, r5, r9, sl, fp, lr}
 8008bb8:	40011000 	andmi	r1, r1, r0
 8008bbc:	08014d25 	stmdaeq	r1, {r0, r2, r5, r8, sl, fp, lr}
 8008bc0:	08014dd4 	stmdaeq	r1, {r2, r4, r6, r7, r8, sl, fp, lr}
 8008bc4:	08014dc0 	stmdaeq	r1, {r6, r7, r8, sl, fp, lr}
 8008bc8:	2000a640 	andcs	sl, r0, r0, asr #12
 8008bcc:	080168c9 	stmdaeq	r1, {r0, r3, r6, r7, fp, sp, lr}
 8008bd0:	080168b8 	stmdaeq	r1, {r3, r4, r5, r7, fp, sp, lr}
 8008bd4:	08014d3e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r8, sl, fp, lr}
 8008bd8:	08014d4e 	stmdaeq	r1, {r1, r2, r3, r6, r8, sl, fp, lr}
 8008bdc:	08014d47 	stmdaeq	r1, {r0, r1, r2, r6, r8, sl, fp, lr}
 8008be0:	08014f5c 	stmdaeq	r1, {r2, r3, r4, r6, r8, r9, sl, fp, lr}
 8008be4:	080155fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r8, sl, ip, lr}
 8008be8:	2000a008 	andcs	sl, r0, r8
 8008bec:	20000008 	andcs	r0, r0, r8
 8008bf0:	08015168 	stmdaeq	r1, {r3, r5, r6, r8, ip, lr}
 8008bf4:	08014d62 	stmdaeq	r1, {r1, r5, r6, r8, sl, fp, lr}
 8008bf8:	08014d74 	stmdaeq	r1, {r2, r4, r5, r6, r8, sl, fp, lr}
 8008bfc:	08014de8 	stmdaeq	r1, {r3, r5, r6, r7, r8, sl, fp, lr}
 8008c00:	2000a730 	andcs	sl, r0, r0, lsr r7
 8008c04:	20000e2b 	andcs	r0, r0, fp, lsr #28
 8008c08:	06010801 	streq	r0, [r1], -r1, lsl #16
 8008c0c:	08014e28 	stmdaeq	r1, {r3, r5, r9, sl, fp, lr}
 8008c10:	08014d82 	stmdaeq	r1, {r1, r7, r8, sl, fp, lr}
 8008c14:	f008 fdbc 	bl	8011790 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 8008c18:	a84b      	add	r0, sp, #300	; 0x12c
 8008c1a:	f008 fdc6 	bl	80117aa <DisplayUdfParams::Load()>
 8008c1e:	b130      	cbz	r0, 8008c2e <main+0x36a>
 8008c20:	a84b      	add	r0, sp, #300	; 0x12c
 8008c22:	a961      	add	r1, sp, #388	; 0x184
 8008c24:	f008 fef9 	bl	8011a1a <DisplayUdfParams::Set(DisplayUdf*)>
 8008c28:	a84b      	add	r0, sp, #300	; 0x12c
 8008c2a:	f008 ff29 	bl	8011a80 <DisplayUdfParams::Dump()>
 8008c2e:	a9e0      	add	r1, sp, #896	; 0x380
 8008c30:	a861      	add	r0, sp, #388	; 0x184
 8008c32:	f008 ff27 	bl	8011a84 <DisplayUdf::Show(E131Bridge*)>
 8008c36:	463b      	mov	r3, r7
 8008c38:	2200      	movs	r2, #0
 8008c3a:	2101      	movs	r1, #1
 8008c3c:	f50d 6013 	add.w	r0, sp, #2352	; 0x930
 8008c40:	f004 fc74 	bl	800d52c <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>
 8008c44:	a80c      	add	r0, sp, #48	; 0x30
 8008c46:	f006 f8e3 	bl	800ee10 <StoreRemoteConfig::StoreRemoteConfig()>
 8008c4a:	a90c      	add	r1, sp, #48	; 0x30
 8008c4c:	a842      	add	r0, sp, #264	; 0x108
 8008c4e:	f004 ff6b 	bl	800db28 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 8008c52:	a842      	add	r0, sp, #264	; 0x108
 8008c54:	f004 ff72 	bl	800db3c <RemoteConfigParams::Load()>
 8008c58:	b138      	cbz	r0, 8008c6a <main+0x3a6>
 8008c5a:	a842      	add	r0, sp, #264	; 0x108
 8008c5c:	f50d 6113 	add.w	r1, sp, #2352	; 0x930
 8008c60:	f005 f893 	bl	800dd8a <RemoteConfigParams::Set(RemoteConfig*)>
 8008c64:	a842      	add	r0, sp, #264	; 0x108
 8008c66:	f005 f8b4 	bl	800ddd2 <RemoteConfigParams::Dump()>
 8008c6a:	a804      	add	r0, sp, #16
 8008c6c:	f005 febc 	bl	800e9e8 <SpiFlashStore::Flash()>
 8008c70:	2800      	cmp	r0, #0
 8008c72:	d1fa      	bne.n	8008c6a <main+0x3a6>
 8008c74:	4c85      	ldr	r4, [pc, #532]	; (8008e8c <main+0x5c8>)
 8008c76:	2303      	movs	r3, #3
 8008c78:	f44f 42fa 	mov.w	r2, #32000	; 0x7d00
 8008c7c:	4984      	ldr	r1, [pc, #528]	; (8008e90 <main+0x5cc>)
 8008c7e:	a861      	add	r0, sp, #388	; 0x184
 8008c80:	f7ff fdad 	bl	80087de <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008c84:	f241 51c1 	movw	r1, #5569	; 0x15c1
 8008c88:	6820      	ldr	r0, [r4, #0]
 8008c8a:	f007 fa3d 	bl	8010108 <Network::Begin(unsigned short)>
 8008c8e:	4b81      	ldr	r3, [pc, #516]	; (8008e94 <main+0x5d0>)
 8008c90:	4601      	mov	r1, r0
 8008c92:	6018      	str	r0, [r3, #0]
 8008c94:	4b80      	ldr	r3, [pc, #512]	; (8008e98 <main+0x5d4>)
 8008c96:	6820      	ldr	r0, [r4, #0]
 8008c98:	681a      	ldr	r2, [r3, #0]
 8008c9a:	f007 fa46 	bl	801012a <Network::JoinGroup(int, unsigned int)>
 8008c9e:	2302      	movs	r3, #2
 8008ca0:	f248 0280 	movw	r2, #32896	; 0x8080
 8008ca4:	497d      	ldr	r1, [pc, #500]	; (8008e9c <main+0x5d8>)
 8008ca6:	a861      	add	r0, sp, #388	; 0x184
 8008ca8:	f7ff fd99 	bl	80087de <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008cac:	2303      	movs	r3, #3
 8008cae:	f44f 42fa 	mov.w	r2, #32000	; 0x7d00
 8008cb2:	497b      	ldr	r1, [pc, #492]	; (8008ea0 <main+0x5dc>)
 8008cb4:	a861      	add	r0, sp, #388	; 0x184
 8008cb6:	f7ff fd92 	bl	80087de <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008cba:	a8e0      	add	r0, sp, #896	; 0x380
 8008cbc:	f000 fefa 	bl	8009ab4 <E131Bridge::Start()>
 8008cc0:	2302      	movs	r3, #2
 8008cc2:	f248 0280 	movw	r2, #32896	; 0x8080
 8008cc6:	4977      	ldr	r1, [pc, #476]	; (8008ea4 <main+0x5e0>)
 8008cc8:	a861      	add	r0, sp, #388	; 0x184
 8008cca:	f7ff fd88 	bl	80087de <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008cce:	2102      	movs	r1, #2
 8008cd0:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8008cd4:	f00a fa04 	bl	80130e0 <fwdgt_config>
 8008cd8:	2801      	cmp	r0, #1
 8008cda:	bf0c      	ite	eq
 8008cdc:	2301      	moveq	r3, #1
 8008cde:	2300      	movne	r3, #0
 8008ce0:	f88d 303c 	strb.w	r3, [sp, #60]	; 0x3c
 8008ce4:	d101      	bne.n	8008cea <main+0x426>
 8008ce6:	f00a f9eb 	bl	80130c0 <fwdgt_enable>
 8008cea:	f8df 91bc 	ldr.w	r9, [pc, #444]	; 8008ea8 <main+0x5e4>
 8008cee:	f8df 81bc 	ldr.w	r8, [pc, #444]	; 8008eac <main+0x5e8>
 8008cf2:	f00a f9ed 	bl	80130d0 <fwdgt_counter_reload>
 8008cf6:	f7fe fc3f 	bl	8007578 <net_handle>
 8008cfa:	a8e0      	add	r0, sp, #896	; 0x380
 8008cfc:	f001 fb3e 	bl	800a37c <E131Bridge::Run()>
 8008d00:	f50d 6013 	add.w	r0, sp, #2352	; 0x930
 8008d04:	f004 fdc2 	bl	800d88c <RemoteConfig::Run()>
 8008d08:	a8dc      	add	r0, sp, #880	; 0x370
 8008d0a:	f002 fa0f 	bl	800b12c <LLRPDevice::Run()>
 8008d0e:	a804      	add	r0, sp, #16
 8008d10:	f005 fe6a 	bl	800e9e8 <SpiFlashStore::Flash()>
 8008d14:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8008d16:	b192      	cbz	r2, 8008d3e <main+0x47a>
 8008d18:	f8d9 3000 	ldr.w	r3, [r9]
 8008d1c:	991d      	ldr	r1, [sp, #116]	; 0x74
 8008d1e:	1a5b      	subs	r3, r3, r1
 8008d20:	429a      	cmp	r2, r3
 8008d22:	d80c      	bhi.n	8008d3e <main+0x47a>
 8008d24:	f8d9 3000 	ldr.w	r3, [r9]
 8008d28:	931d      	str	r3, [sp, #116]	; 0x74
 8008d2a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8008d2c:	2b01      	cmp	r3, #1
 8008d2e:	f083 0201 	eor.w	r2, r3, #1
 8008d32:	bf18      	it	ne
 8008d34:	2301      	movne	r3, #1
 8008d36:	921c      	str	r2, [sp, #112]	; 0x70
 8008d38:	bf14      	ite	ne
 8008d3a:	6133      	strne	r3, [r6, #16]
 8008d3c:	6173      	streq	r3, [r6, #20]
 8008d3e:	9a66      	ldr	r2, [sp, #408]	; 0x198
 8008d40:	b16a      	cbz	r2, 8008d5e <main+0x49a>
 8008d42:	f89d 3194 	ldrb.w	r3, [sp, #404]	; 0x194
 8008d46:	2b00      	cmp	r3, #0
 8008d48:	d14d      	bne.n	8008de6 <main+0x522>
 8008d4a:	f8d9 3000 	ldr.w	r3, [r9]
 8008d4e:	9962      	ldr	r1, [sp, #392]	; 0x188
 8008d50:	1a5b      	subs	r3, r3, r1
 8008d52:	429a      	cmp	r2, r3
 8008d54:	d203      	bcs.n	8008d5e <main+0x49a>
 8008d56:	2101      	movs	r1, #1
 8008d58:	a861      	add	r0, sp, #388	; 0x184
 8008d5a:	f7ff fcfb 	bl	8008754 <Display::SetSleep(bool)>
 8008d5e:	b38d      	cbz	r5, 8008dc4 <main+0x500>
 8008d60:	f10d 0316 	add.w	r3, sp, #22
 8008d64:	4f52      	ldr	r7, [pc, #328]	; (8008eb0 <main+0x5ec>)
 8008d66:	4853      	ldr	r0, [pc, #332]	; (8008eb4 <main+0x5f0>)
 8008d68:	9300      	str	r3, [sp, #0]
 8008d6a:	2210      	movs	r2, #16
 8008d6c:	4639      	mov	r1, r7
 8008d6e:	7800      	ldrb	r0, [r0, #0]
 8008d70:	ab0d      	add	r3, sp, #52	; 0x34
 8008d72:	f006 fca7 	bl	800f6c4 <udp_recv>
 8008d76:	280a      	cmp	r0, #10
 8008d78:	4604      	mov	r4, r0
 8008d7a:	d923      	bls.n	8008dc4 <main+0x500>
 8008d7c:	2204      	movs	r2, #4
 8008d7e:	4639      	mov	r1, r7
 8008d80:	484d      	ldr	r0, [pc, #308]	; (8008eb8 <main+0x5f4>)
 8008d82:	f7ff fc1e 	bl	80085c2 <memcmp>
 8008d86:	b9e8      	cbnz	r0, 8008dc4 <main+0x500>
 8008d88:	4427      	add	r7, r4
 8008d8a:	f817 3c01 	ldrb.w	r3, [r7, #-1]
 8008d8e:	2b0a      	cmp	r3, #10
 8008d90:	d103      	bne.n	8008d9a <main+0x4d6>
 8008d92:	3c01      	subs	r4, #1
 8008d94:	b2a4      	uxth	r4, r4
 8008d96:	2c0a      	cmp	r4, #10
 8008d98:	d061      	beq.n	8008e5e <main+0x59a>
 8008d9a:	2c0e      	cmp	r4, #14
 8008d9c:	d85d      	bhi.n	8008e5a <main+0x596>
 8008d9e:	2206      	movs	r2, #6
 8008da0:	f8d8 1000 	ldr.w	r1, [r8]
 8008da4:	4845      	ldr	r0, [pc, #276]	; (8008ebc <main+0x5f8>)
 8008da6:	f7ff fc0c 	bl	80085c2 <memcmp>
 8008daa:	2800      	cmp	r0, #0
 8008dac:	d157      	bne.n	8008e5e <main+0x59a>
 8008dae:	2104      	movs	r1, #4
 8008db0:	4843      	ldr	r0, [pc, #268]	; (8008ec0 <main+0x5fc>)
 8008db2:	f7ff fc23 	bl	80085fc <dmxconfigudp::atoi(char const*, unsigned char)>
 8008db6:	285b      	cmp	r0, #91	; 0x5b
 8008db8:	4601      	mov	r1, r0
 8008dba:	d903      	bls.n	8008dc4 <main+0x500>
 8008dbc:	4b41      	ldr	r3, [pc, #260]	; (8008ec4 <main+0x600>)
 8008dbe:	6818      	ldr	r0, [r3, #0]
 8008dc0:	f004 fa02 	bl	800d1c8 <Dmx::SetDmxBreakTime(unsigned int)>
 8008dc4:	a805      	add	r0, sp, #20
 8008dc6:	f007 f8fd 	bl	800ffc4 <MDNS::Run()>
 8008dca:	e792      	b.n	8008cf2 <main+0x42e>
 8008dcc:	f803 1b01 	strb.w	r1, [r3], #1
 8008dd0:	6a81      	ldr	r1, [r0, #40]	; 0x28
 8008dd2:	3101      	adds	r1, #1
 8008dd4:	6281      	str	r1, [r0, #40]	; 0x28
 8008dd6:	e66b      	b.n	8008ab0 <main+0x1ec>
 8008dd8:	f20d 20f9 	addw	r0, sp, #761	; 0x2f9
 8008ddc:	f7ff fc01 	bl	80085e2 <memcpy>
 8008de0:	f88d 4319 	strb.w	r4, [sp, #793]	; 0x319
 8008de4:	e699      	b.n	8008b1a <main+0x256>
 8008de6:	f7ff fd33 	bl	8008850 <display::timeout::gpio_renew()>
 8008dea:	2800      	cmp	r0, #0
 8008dec:	d0b7      	beq.n	8008d5e <main+0x49a>
 8008dee:	2100      	movs	r1, #0
 8008df0:	e7b2      	b.n	8008d58 <main+0x494>
 8008df2:	2c0c      	cmp	r4, #12
 8008df4:	d916      	bls.n	8008e24 <main+0x560>
 8008df6:	2c0e      	cmp	r4, #14
 8008df8:	d82c      	bhi.n	8008e54 <main+0x590>
 8008dfa:	2208      	movs	r2, #8
 8008dfc:	f8d8 1000 	ldr.w	r1, [r8]
 8008e00:	4831      	ldr	r0, [pc, #196]	; (8008ec8 <main+0x604>)
 8008e02:	f7ff fbde 	bl	80085c2 <memcmp>
 8008e06:	bb28      	cbnz	r0, 8008e54 <main+0x590>
 8008e08:	2102      	movs	r1, #2
 8008e0a:	4830      	ldr	r0, [pc, #192]	; (8008ecc <main+0x608>)
 8008e0c:	f7ff fbf6 	bl	80085fc <dmxconfigudp::atoi(char const*, unsigned char)>
 8008e10:	4601      	mov	r1, r0
 8008e12:	b110      	cbz	r0, 8008e1a <main+0x556>
 8008e14:	4b2e      	ldr	r3, [pc, #184]	; (8008ed0 <main+0x60c>)
 8008e16:	fbb3 f1f0 	udiv	r1, r3, r0
 8008e1a:	4b2a      	ldr	r3, [pc, #168]	; (8008ec4 <main+0x600>)
 8008e1c:	6818      	ldr	r0, [r3, #0]
 8008e1e:	f004 f99f 	bl	800d160 <Dmx::SetDmxPeriodTime(unsigned int)>
 8008e22:	e7cf      	b.n	8008dc4 <main+0x500>
 8008e24:	2c0a      	cmp	r4, #10
 8008e26:	d0cd      	beq.n	8008dc4 <main+0x500>
 8008e28:	2206      	movs	r2, #6
 8008e2a:	f8d8 1000 	ldr.w	r1, [r8]
 8008e2e:	4829      	ldr	r0, [pc, #164]	; (8008ed4 <main+0x610>)
 8008e30:	f7ff fbc7 	bl	80085c2 <memcmp>
 8008e34:	2800      	cmp	r0, #0
 8008e36:	d1c5      	bne.n	8008dc4 <main+0x500>
 8008e38:	2103      	movs	r1, #3
 8008e3a:	4821      	ldr	r0, [pc, #132]	; (8008ec0 <main+0x5fc>)
 8008e3c:	f7ff fbde 	bl	80085fc <dmxconfigudp::atoi(char const*, unsigned char)>
 8008e40:	1e83      	subs	r3, r0, #2
 8008e42:	f5b3 7fff 	cmp.w	r3, #510	; 0x1fe
 8008e46:	d8bd      	bhi.n	8008dc4 <main+0x500>
 8008e48:	4b1e      	ldr	r3, [pc, #120]	; (8008ec4 <main+0x600>)
 8008e4a:	b281      	uxth	r1, r0
 8008e4c:	6818      	ldr	r0, [r3, #0]
 8008e4e:	f004 f9cf 	bl	800d1f0 <Dmx::SetDmxSlots(unsigned short)>
 8008e52:	e7b7      	b.n	8008dc4 <main+0x500>
 8008e54:	2c0d      	cmp	r4, #13
 8008e56:	d0e7      	beq.n	8008e28 <main+0x564>
 8008e58:	e7b4      	b.n	8008dc4 <main+0x500>
 8008e5a:	2c10      	cmp	r4, #16
 8008e5c:	d8b2      	bhi.n	8008dc4 <main+0x500>
 8008e5e:	2204      	movs	r2, #4
 8008e60:	f8d8 1000 	ldr.w	r1, [r8]
 8008e64:	481c      	ldr	r0, [pc, #112]	; (8008ed8 <main+0x614>)
 8008e66:	f7ff fbac 	bl	80085c2 <memcmp>
 8008e6a:	2800      	cmp	r0, #0
 8008e6c:	d1c1      	bne.n	8008df2 <main+0x52e>
 8008e6e:	2107      	movs	r1, #7
 8008e70:	481a      	ldr	r0, [pc, #104]	; (8008edc <main+0x618>)
 8008e72:	f7ff fbc3 	bl	80085fc <dmxconfigudp::atoi(char const*, unsigned char)>
 8008e76:	4b1a      	ldr	r3, [pc, #104]	; (8008ee0 <main+0x61c>)
 8008e78:	f1a0 020c 	sub.w	r2, r0, #12
 8008e7c:	429a      	cmp	r2, r3
 8008e7e:	4601      	mov	r1, r0
 8008e80:	d8a0      	bhi.n	8008dc4 <main+0x500>
 8008e82:	4b10      	ldr	r3, [pc, #64]	; (8008ec4 <main+0x600>)
 8008e84:	6818      	ldr	r0, [r3, #0]
 8008e86:	f004 f9a9 	bl	800d1dc <Dmx::SetDmxMabTime(unsigned int)>
 8008e8a:	e79b      	b.n	8008dc4 <main+0x500>
 8008e8c:	2000a008 	andcs	sl, r0, r8
 8008e90:	0801518a 	stmdaeq	r1, {r1, r3, r7, r8, ip, lr}
 8008e94:	20000004 	andcs	r0, r0, r4
 8008e98:	20000d20 	andcs	r0, r0, r0, lsr #26
 8008e9c:	0801517b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r8, ip, lr}
 8008ea0:	08014f48 	stmdaeq	r1, {r3, r6, r8, r9, sl, fp, lr}
 8008ea4:	08014f73 	stmdaeq	r1, {r0, r1, r4, r5, r6, r8, r9, sl, fp, lr}
 8008ea8:	2000a744 	andcs	sl, r0, r4, asr #14
 8008eac:	20000000 	andcs	r0, r0, r0
 8008eb0:	20000e51 	andcs	r0, r0, r1, asr lr
 8008eb4:	20000008 	andcs	r0, r0, r8
 8008eb8:	08014d94 	stmdaeq	r1, {r2, r4, r7, r8, sl, fp, lr}
 8008ebc:	08014d99 	stmdaeq	r1, {r0, r3, r4, r7, r8, sl, fp, lr}
 8008ec0:	20000e5b 	andcs	r0, r0, fp, asr lr
 8008ec4:	200016b8 			; <UNDEFINED> instruction: 0x200016b8
 8008ec8:	08014da5 	stmdaeq	r1, {r0, r2, r5, r7, r8, sl, fp, lr}
 8008ecc:	20000e5d 	andcs	r0, r0, sp, asr lr
 8008ed0:	000f4240 	andeq	r4, pc, r0, asr #4
 8008ed4:	08014dae 	stmdaeq	r1, {r1, r2, r3, r5, r7, r8, sl, fp, lr}
 8008ed8:	08014da0 	stmdaeq	r1, {r5, r7, r8, sl, fp, lr}
 8008edc:	20000e59 	andcs	r0, r0, r9, asr lr
 8008ee0:	000f4234 	andeq	r4, pc, r4, lsr r2	; <UNPREDICTABLE>

08008ee4 <DmxInput::~DmxInput()>:
 8008ee4:	4770      	bx	lr
	...

08008ee8 <DmxInput::Start(unsigned int)>:
 8008ee8:	2301      	movs	r3, #1
 8008eea:	b430      	push	{r4, r5}
 8008eec:	4c08      	ldr	r4, [pc, #32]	; (8008f10 <DmxInput::Start(unsigned int)+0x28>)
 8008eee:	fa03 f001 	lsl.w	r0, r3, r1
 8008ef2:	7822      	ldrb	r2, [r4, #0]
 8008ef4:	ea30 0502 	bics.w	r5, r0, r2
 8008ef8:	d007      	beq.n	8008f0a <DmxInput::Start(unsigned int)+0x22>
 8008efa:	4302      	orrs	r2, r0
 8008efc:	4805      	ldr	r0, [pc, #20]	; (8008f14 <DmxInput::Start(unsigned int)+0x2c>)
 8008efe:	7022      	strb	r2, [r4, #0]
 8008f00:	6800      	ldr	r0, [r0, #0]
 8008f02:	461a      	mov	r2, r3
 8008f04:	bc30      	pop	{r4, r5}
 8008f06:	f003 bfdb 	b.w	800cec0 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8008f0a:	bc30      	pop	{r4, r5}
 8008f0c:	4770      	bx	lr
 8008f0e:	bf00      	nop
 8008f10:	20000100 	andcs	r0, r0, r0, lsl #2
 8008f14:	200016b8 			; <UNDEFINED> instruction: 0x200016b8

08008f18 <DmxInput::Stop(unsigned int)>:
 8008f18:	2201      	movs	r2, #1
 8008f1a:	b430      	push	{r4, r5}
 8008f1c:	4c08      	ldr	r4, [pc, #32]	; (8008f40 <DmxInput::Stop(unsigned int)+0x28>)
 8008f1e:	fa02 f001 	lsl.w	r0, r2, r1
 8008f22:	7823      	ldrb	r3, [r4, #0]
 8008f24:	ea30 0503 	bics.w	r5, r0, r3
 8008f28:	d108      	bne.n	8008f3c <DmxInput::Stop(unsigned int)+0x24>
 8008f2a:	ea23 0300 	bic.w	r3, r3, r0
 8008f2e:	4805      	ldr	r0, [pc, #20]	; (8008f44 <DmxInput::Stop(unsigned int)+0x2c>)
 8008f30:	7023      	strb	r3, [r4, #0]
 8008f32:	6800      	ldr	r0, [r0, #0]
 8008f34:	2300      	movs	r3, #0
 8008f36:	bc30      	pop	{r4, r5}
 8008f38:	f003 bfc2 	b.w	800cec0 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8008f3c:	bc30      	pop	{r4, r5}
 8008f3e:	4770      	bx	lr
 8008f40:	20000100 	andcs	r0, r0, r0, lsl #2
 8008f44:	200016b8 			; <UNDEFINED> instruction: 0x200016b8

08008f48 <DmxInput::Handler(unsigned int, unsigned int&, unsigned int&)>:
 8008f48:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008f4c:	f8df 8030 	ldr.w	r8, [pc, #48]	; 8008f80 <DmxInput::Handler(unsigned int, unsigned int&, unsigned int&)+0x38>
 8008f50:	461e      	mov	r6, r3
 8008f52:	f8d8 0000 	ldr.w	r0, [r8]
 8008f56:	460f      	mov	r7, r1
 8008f58:	4615      	mov	r5, r2
 8008f5a:	f004 f987 	bl	800d26c <Dmx::GetDmxAvailable(unsigned int)>
 8008f5e:	4639      	mov	r1, r7
 8008f60:	4604      	mov	r4, r0
 8008f62:	f8d8 0000 	ldr.w	r0, [r8]
 8008f66:	f004 f995 	bl	800d294 <Dmx::GetUpdatesPerSecond(unsigned int)>
 8008f6a:	6030      	str	r0, [r6, #0]
 8008f6c:	b134      	cbz	r4, 8008f7c <DmxInput::Handler(unsigned int, unsigned int&, unsigned int&)+0x34>
 8008f6e:	f8d4 3204 	ldr.w	r3, [r4, #516]	; 0x204
 8008f72:	3301      	adds	r3, #1
 8008f74:	4620      	mov	r0, r4
 8008f76:	602b      	str	r3, [r5, #0]
 8008f78:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008f7c:	4623      	mov	r3, r4
 8008f7e:	e7f9      	b.n	8008f74 <DmxInput::Handler(unsigned int, unsigned int&, unsigned int&)+0x2c>
 8008f80:	200016b8 			; <UNDEFINED> instruction: 0x200016b8

08008f84 <DmxInput::~DmxInput()>:
 8008f84:	b510      	push	{r4, lr}
 8008f86:	4604      	mov	r4, r0
 8008f88:	f009 fce2 	bl	8012950 <operator delete(void*)>
 8008f8c:	4620      	mov	r0, r4
 8008f8e:	bd10      	pop	{r4, pc}

08008f90 <DmxInput::DmxInput()>:
 8008f90:	b538      	push	{r3, r4, r5, lr}
 8008f92:	4604      	mov	r4, r0
 8008f94:	2500      	movs	r5, #0
 8008f96:	4b05      	ldr	r3, [pc, #20]	; (8008fac <DmxInput::DmxInput()+0x1c>)
 8008f98:	6003      	str	r3, [r0, #0]
 8008f9a:	4629      	mov	r1, r5
 8008f9c:	4620      	mov	r0, r4
 8008f9e:	3501      	adds	r5, #1
 8008fa0:	f7ff ffba 	bl	8008f18 <DmxInput::Stop(unsigned int)>
 8008fa4:	2d08      	cmp	r5, #8
 8008fa6:	d1f8      	bne.n	8008f9a <DmxInput::DmxInput()+0xa>
 8008fa8:	4620      	mov	r0, r4
 8008faa:	bd38      	pop	{r3, r4, r5, pc}
 8008fac:	08014e48 	stmdaeq	r1, {r3, r6, r9, sl, fp, lr}

08008fb0 <RDMSoftwareVersion::GetVersion()>:
 8008fb0:	4800      	ldr	r0, [pc, #0]	; (8008fb4 <RDMSoftwareVersion::GetVersion()+0x4>)
 8008fb2:	4770      	bx	lr
 8008fb4:	08014e5c 	stmdaeq	r1, {r2, r3, r4, r6, r9, sl, fp, lr}

08008fb8 <RDMSoftwareVersion::GetVersionLength()>:
 8008fb8:	2003      	movs	r0, #3
 8008fba:	4770      	bx	lr

08008fbc <RDMSoftwareVersion::GetVersionId()>:
 8008fbc:	4800      	ldr	r0, [pc, #0]	; (8008fc0 <RDMSoftwareVersion::GetVersionId()+0x4>)
 8008fbe:	4770      	bx	lr
 8008fc0:	62360b6d 	eorsvs	r0, r6, #111616	; 0x1b400

08008fc4 <_itostr>:
 8008fc4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008fc6:	0fc7      	lsrs	r7, r0, #31
 8008fc8:	b091      	sub	sp, #68	; 0x44
 8008fca:	bf18      	it	ne
 8008fcc:	4240      	negne	r0, r0
 8008fce:	f10d 043f 	add.w	r4, sp, #63	; 0x3f
 8008fd2:	b9c8      	cbnz	r0, 8009008 <_itostr+0x44>
 8008fd4:	2330      	movs	r3, #48	; 0x30
 8008fd6:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8008fda:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 8008fde:	b132      	cbz	r2, 8008fee <_itostr+0x2a>
 8008fe0:	4668      	mov	r0, sp
 8008fe2:	2530      	movs	r5, #48	; 0x30
 8008fe4:	1ae6      	subs	r6, r4, r3
 8008fe6:	4296      	cmp	r6, r2
 8008fe8:	da01      	bge.n	8008fee <_itostr+0x2a>
 8008fea:	4283      	cmp	r3, r0
 8008fec:	d81c      	bhi.n	8009028 <_itostr+0x64>
 8008fee:	b117      	cbz	r7, 8008ff6 <_itostr+0x32>
 8008ff0:	222d      	movs	r2, #45	; 0x2d
 8008ff2:	f803 2901 	strb.w	r2, [r3], #-1
 8008ff6:	3301      	adds	r3, #1
 8008ff8:	1ae0      	subs	r0, r4, r3
 8008ffa:	3901      	subs	r1, #1
 8008ffc:	aa10      	add	r2, sp, #64	; 0x40
 8008ffe:	4293      	cmp	r3, r2
 8009000:	d315      	bcc.n	800902e <_itostr+0x6a>
 8009002:	3001      	adds	r0, #1
 8009004:	b011      	add	sp, #68	; 0x44
 8009006:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009008:	4623      	mov	r3, r4
 800900a:	250a      	movs	r5, #10
 800900c:	46ec      	mov	ip, sp
 800900e:	fb90 f6f5 	sdiv	r6, r0, r5
 8009012:	fb05 0016 	mls	r0, r5, r6, r0
 8009016:	3030      	adds	r0, #48	; 0x30
 8009018:	f803 0901 	strb.w	r0, [r3], #-1
 800901c:	4630      	mov	r0, r6
 800901e:	2e00      	cmp	r6, #0
 8009020:	d0dd      	beq.n	8008fde <_itostr+0x1a>
 8009022:	4563      	cmp	r3, ip
 8009024:	d1f3      	bne.n	800900e <_itostr+0x4a>
 8009026:	e7da      	b.n	8008fde <_itostr+0x1a>
 8009028:	f803 5901 	strb.w	r5, [r3], #-1
 800902c:	e7da      	b.n	8008fe4 <_itostr+0x20>
 800902e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8009032:	f801 2f01 	strb.w	r2, [r1, #1]!
 8009036:	e7e1      	b.n	8008ffc <_itostr+0x38>

08009038 <_xputch>:
 8009038:	4603      	mov	r3, r0
 800903a:	b410      	push	{r4}
 800903c:	4c08      	ldr	r4, [pc, #32]	; (8009060 <_xputch+0x28>)
 800903e:	68da      	ldr	r2, [r3, #12]
 8009040:	4608      	mov	r0, r1
 8009042:	6821      	ldr	r1, [r4, #0]
 8009044:	3201      	adds	r2, #1
 8009046:	60da      	str	r2, [r3, #12]
 8009048:	b139      	cbz	r1, 800905a <_xputch+0x22>
 800904a:	691b      	ldr	r3, [r3, #16]
 800904c:	429a      	cmp	r2, r3
 800904e:	da02      	bge.n	8009056 <_xputch+0x1e>
 8009050:	1c4b      	adds	r3, r1, #1
 8009052:	6023      	str	r3, [r4, #0]
 8009054:	7008      	strb	r0, [r1, #0]
 8009056:	bc10      	pop	{r4}
 8009058:	4770      	bx	lr
 800905a:	bc10      	pop	{r4}
 800905c:	f009 bade 	b.w	801261c <console_putc>
 8009060:	20000104 	andcs	r0, r0, r4, lsl #2

08009064 <_format_int>:
 8009064:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009068:	4698      	mov	r8, r3
 800906a:	b091      	sub	sp, #68	; 0x44
 800906c:	ea52 0308 	orrs.w	r3, r2, r8
 8009070:	4606      	mov	r6, r0
 8009072:	4617      	mov	r7, r2
 8009074:	f10d 053f 	add.w	r5, sp, #63	; 0x3f
 8009078:	d133      	bne.n	80090e2 <_format_int+0x7e>
 800907a:	2330      	movs	r3, #48	; 0x30
 800907c:	f10d 043e 	add.w	r4, sp, #62	; 0x3e
 8009080:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8009084:	6833      	ldr	r3, [r6, #0]
 8009086:	07d8      	lsls	r0, r3, #31
 8009088:	d507      	bpl.n	800909a <_format_int+0x36>
 800908a:	466a      	mov	r2, sp
 800908c:	2030      	movs	r0, #48	; 0x30
 800908e:	6871      	ldr	r1, [r6, #4]
 8009090:	1b2f      	subs	r7, r5, r4
 8009092:	428f      	cmp	r7, r1
 8009094:	da01      	bge.n	800909a <_format_int+0x36>
 8009096:	4294      	cmp	r4, r2
 8009098:	d839      	bhi.n	800910e <_format_int+0xaa>
 800909a:	0699      	lsls	r1, r3, #26
 800909c:	d507      	bpl.n	80090ae <_format_int+0x4a>
 800909e:	466a      	mov	r2, sp
 80090a0:	2030      	movs	r0, #48	; 0x30
 80090a2:	68b1      	ldr	r1, [r6, #8]
 80090a4:	1b2f      	subs	r7, r5, r4
 80090a6:	428f      	cmp	r7, r1
 80090a8:	da01      	bge.n	80090ae <_format_int+0x4a>
 80090aa:	4294      	cmp	r4, r2
 80090ac:	d832      	bhi.n	8009114 <_format_int+0xb0>
 80090ae:	071a      	lsls	r2, r3, #28
 80090b0:	bf44      	itt	mi
 80090b2:	222d      	movmi	r2, #45	; 0x2d
 80090b4:	f804 2901 	strbmi.w	r2, [r4], #-1
 80090b8:	065b      	lsls	r3, r3, #25
 80090ba:	d407      	bmi.n	80090cc <_format_int+0x68>
 80090bc:	466b      	mov	r3, sp
 80090be:	2120      	movs	r1, #32
 80090c0:	68b2      	ldr	r2, [r6, #8]
 80090c2:	1b28      	subs	r0, r5, r4
 80090c4:	4290      	cmp	r0, r2
 80090c6:	da01      	bge.n	80090cc <_format_int+0x68>
 80090c8:	429c      	cmp	r4, r3
 80090ca:	d826      	bhi.n	800911a <_format_int+0xb6>
 80090cc:	1b2d      	subs	r5, r5, r4
 80090ce:	3401      	adds	r4, #1
 80090d0:	ab10      	add	r3, sp, #64	; 0x40
 80090d2:	429c      	cmp	r4, r3
 80090d4:	d324      	bcc.n	8009120 <_format_int+0xbc>
 80090d6:	68b3      	ldr	r3, [r6, #8]
 80090d8:	42ab      	cmp	r3, r5
 80090da:	dc27      	bgt.n	800912c <_format_int+0xc8>
 80090dc:	b011      	add	sp, #68	; 0x44
 80090de:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80090e2:	462c      	mov	r4, r5
 80090e4:	46e9      	mov	r9, sp
 80090e6:	4638      	mov	r0, r7
 80090e8:	4641      	mov	r1, r8
 80090ea:	220a      	movs	r2, #10
 80090ec:	2300      	movs	r3, #0
 80090ee:	f7fe ff1f 	bl	8007f30 <__aeabi_uldivmod>
 80090f2:	3230      	adds	r2, #48	; 0x30
 80090f4:	f804 2901 	strb.w	r2, [r4], #-1
 80090f8:	463a      	mov	r2, r7
 80090fa:	4643      	mov	r3, r8
 80090fc:	2a0a      	cmp	r2, #10
 80090fe:	f173 0300 	sbcs.w	r3, r3, #0
 8009102:	4607      	mov	r7, r0
 8009104:	4688      	mov	r8, r1
 8009106:	d3bd      	bcc.n	8009084 <_format_int+0x20>
 8009108:	454c      	cmp	r4, r9
 800910a:	d1ec      	bne.n	80090e6 <_format_int+0x82>
 800910c:	e7ba      	b.n	8009084 <_format_int+0x20>
 800910e:	f804 0901 	strb.w	r0, [r4], #-1
 8009112:	e7bd      	b.n	8009090 <_format_int+0x2c>
 8009114:	f804 0901 	strb.w	r0, [r4], #-1
 8009118:	e7c4      	b.n	80090a4 <_format_int+0x40>
 800911a:	f804 1901 	strb.w	r1, [r4], #-1
 800911e:	e7d0      	b.n	80090c2 <_format_int+0x5e>
 8009120:	4630      	mov	r0, r6
 8009122:	f814 1b01 	ldrb.w	r1, [r4], #1
 8009126:	f7ff ff87 	bl	8009038 <_xputch>
 800912a:	e7d1      	b.n	80090d0 <_format_int+0x6c>
 800912c:	2120      	movs	r1, #32
 800912e:	4630      	mov	r0, r6
 8009130:	f7ff ff82 	bl	8009038 <_xputch>
 8009134:	3501      	adds	r5, #1
 8009136:	e7ce      	b.n	80090d6 <_format_int+0x72>

08009138 <_format_hex>:
 8009138:	b5f0      	push	{r4, r5, r6, r7, lr}
 800913a:	b091      	sub	sp, #68	; 0x44
 800913c:	4606      	mov	r6, r0
 800913e:	6804      	ldr	r4, [r0, #0]
 8009140:	f10d 023f 	add.w	r2, sp, #63	; 0x3f
 8009144:	bb61      	cbnz	r1, 80091a0 <_format_hex+0x68>
 8009146:	2330      	movs	r3, #48	; 0x30
 8009148:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 800914c:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 8009150:	07e5      	lsls	r5, r4, #31
 8009152:	d507      	bpl.n	8009164 <_format_hex+0x2c>
 8009154:	4669      	mov	r1, sp
 8009156:	2530      	movs	r5, #48	; 0x30
 8009158:	6870      	ldr	r0, [r6, #4]
 800915a:	1ad7      	subs	r7, r2, r3
 800915c:	4287      	cmp	r7, r0
 800915e:	da01      	bge.n	8009164 <_format_hex+0x2c>
 8009160:	428b      	cmp	r3, r1
 8009162:	d831      	bhi.n	80091c8 <_format_hex+0x90>
 8009164:	06a0      	lsls	r0, r4, #26
 8009166:	d507      	bpl.n	8009178 <_format_hex+0x40>
 8009168:	4669      	mov	r1, sp
 800916a:	2530      	movs	r5, #48	; 0x30
 800916c:	68b0      	ldr	r0, [r6, #8]
 800916e:	1ad7      	subs	r7, r2, r3
 8009170:	4287      	cmp	r7, r0
 8009172:	da01      	bge.n	8009178 <_format_hex+0x40>
 8009174:	428b      	cmp	r3, r1
 8009176:	d82a      	bhi.n	80091ce <_format_hex+0x96>
 8009178:	0661      	lsls	r1, r4, #25
 800917a:	d407      	bmi.n	800918c <_format_hex+0x54>
 800917c:	4669      	mov	r1, sp
 800917e:	2420      	movs	r4, #32
 8009180:	68b0      	ldr	r0, [r6, #8]
 8009182:	1ad5      	subs	r5, r2, r3
 8009184:	4285      	cmp	r5, r0
 8009186:	da01      	bge.n	800918c <_format_hex+0x54>
 8009188:	428b      	cmp	r3, r1
 800918a:	d823      	bhi.n	80091d4 <_format_hex+0x9c>
 800918c:	1ad5      	subs	r5, r2, r3
 800918e:	1c5c      	adds	r4, r3, #1
 8009190:	ab10      	add	r3, sp, #64	; 0x40
 8009192:	429c      	cmp	r4, r3
 8009194:	d321      	bcc.n	80091da <_format_hex+0xa2>
 8009196:	68b3      	ldr	r3, [r6, #8]
 8009198:	429d      	cmp	r5, r3
 800919a:	db24      	blt.n	80091e6 <_format_hex+0xae>
 800919c:	b011      	add	sp, #68	; 0x44
 800919e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80091a0:	f014 0f02 	tst.w	r4, #2
 80091a4:	bf0c      	ite	eq
 80091a6:	2757      	moveq	r7, #87	; 0x57
 80091a8:	2737      	movne	r7, #55	; 0x37
 80091aa:	4613      	mov	r3, r2
 80091ac:	466d      	mov	r5, sp
 80091ae:	f001 000f 	and.w	r0, r1, #15
 80091b2:	2809      	cmp	r0, #9
 80091b4:	bf94      	ite	ls
 80091b6:	3030      	addls	r0, #48	; 0x30
 80091b8:	19c0      	addhi	r0, r0, r7
 80091ba:	0909      	lsrs	r1, r1, #4
 80091bc:	f803 0901 	strb.w	r0, [r3], #-1
 80091c0:	d0c6      	beq.n	8009150 <_format_hex+0x18>
 80091c2:	42ab      	cmp	r3, r5
 80091c4:	d1f3      	bne.n	80091ae <_format_hex+0x76>
 80091c6:	e7c3      	b.n	8009150 <_format_hex+0x18>
 80091c8:	f803 5901 	strb.w	r5, [r3], #-1
 80091cc:	e7c5      	b.n	800915a <_format_hex+0x22>
 80091ce:	f803 5901 	strb.w	r5, [r3], #-1
 80091d2:	e7cc      	b.n	800916e <_format_hex+0x36>
 80091d4:	f803 4901 	strb.w	r4, [r3], #-1
 80091d8:	e7d3      	b.n	8009182 <_format_hex+0x4a>
 80091da:	4630      	mov	r0, r6
 80091dc:	f814 1b01 	ldrb.w	r1, [r4], #1
 80091e0:	f7ff ff2a 	bl	8009038 <_xputch>
 80091e4:	e7d4      	b.n	8009190 <_format_hex+0x58>
 80091e6:	2120      	movs	r1, #32
 80091e8:	4630      	mov	r0, r6
 80091ea:	f7ff ff25 	bl	8009038 <_xputch>
 80091ee:	3501      	adds	r5, #1
 80091f0:	e7d1      	b.n	8009196 <_format_hex+0x5e>
	...

080091f4 <_vprintf>:
 80091f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80091f8:	4614      	mov	r4, r2
 80091fa:	2200      	movs	r2, #0
 80091fc:	460b      	mov	r3, r1
 80091fe:	f04f 0800 	mov.w	r8, #0
 8009202:	b099      	sub	sp, #100	; 0x64
 8009204:	e9cd 2006 	strd	r2, r0, [sp, #24]
 8009208:	af08      	add	r7, sp, #32
 800920a:	7819      	ldrb	r1, [r3, #0]
 800920c:	b919      	cbnz	r1, 8009216 <_vprintf+0x22>
 800920e:	9806      	ldr	r0, [sp, #24]
 8009210:	b019      	add	sp, #100	; 0x64
 8009212:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009216:	2925      	cmp	r1, #37	; 0x25
 8009218:	f103 0601 	add.w	r6, r3, #1
 800921c:	d004      	beq.n	8009228 <_vprintf+0x34>
 800921e:	a803      	add	r0, sp, #12
 8009220:	f7ff ff0a 	bl	8009038 <_xputch>
 8009224:	4633      	mov	r3, r6
 8009226:	e7f0      	b.n	800920a <_vprintf+0x16>
 8009228:	2200      	movs	r2, #0
 800922a:	e9cd 2203 	strd	r2, r2, [sp, #12]
 800922e:	9205      	str	r2, [sp, #20]
 8009230:	785a      	ldrb	r2, [r3, #1]
 8009232:	2a30      	cmp	r2, #48	; 0x30
 8009234:	d129      	bne.n	800928a <_vprintf+0x96>
 8009236:	2220      	movs	r2, #32
 8009238:	9203      	str	r2, [sp, #12]
 800923a:	1c9e      	adds	r6, r3, #2
 800923c:	2200      	movs	r2, #0
 800923e:	4635      	mov	r5, r6
 8009240:	4613      	mov	r3, r2
 8009242:	f04f 0c0a 	mov.w	ip, #10
 8009246:	7829      	ldrb	r1, [r5, #0]
 8009248:	462e      	mov	r6, r5
 800924a:	f1a1 0030 	sub.w	r0, r1, #48	; 0x30
 800924e:	2809      	cmp	r0, #9
 8009250:	f105 0501 	add.w	r5, r5, #1
 8009254:	d91d      	bls.n	8009292 <_vprintf+0x9e>
 8009256:	b12a      	cbz	r2, 8009264 <_vprintf+0x70>
 8009258:	9305      	str	r3, [sp, #20]
 800925a:	b11b      	cbz	r3, 8009264 <_vprintf+0x70>
 800925c:	9b03      	ldr	r3, [sp, #12]
 800925e:	f043 0310 	orr.w	r3, r3, #16
 8009262:	9303      	str	r3, [sp, #12]
 8009264:	292e      	cmp	r1, #46	; 0x2e
 8009266:	d123      	bne.n	80092b0 <_vprintf+0xbc>
 8009268:	7873      	ldrb	r3, [r6, #1]
 800926a:	2b2a      	cmp	r3, #42	; 0x2a
 800926c:	d015      	beq.n	800929a <_vprintf+0xa6>
 800926e:	2100      	movs	r1, #0
 8009270:	250a      	movs	r5, #10
 8009272:	460a      	mov	r2, r1
 8009274:	1c70      	adds	r0, r6, #1
 8009276:	7803      	ldrb	r3, [r0, #0]
 8009278:	4606      	mov	r6, r0
 800927a:	3b30      	subs	r3, #48	; 0x30
 800927c:	2b09      	cmp	r3, #9
 800927e:	f100 0001 	add.w	r0, r0, #1
 8009282:	d959      	bls.n	8009338 <_vprintf+0x144>
 8009284:	b181      	cbz	r1, 80092a8 <_vprintf+0xb4>
 8009286:	9204      	str	r2, [sp, #16]
 8009288:	e00e      	b.n	80092a8 <_vprintf+0xb4>
 800928a:	2a2d      	cmp	r2, #45	; 0x2d
 800928c:	d1d6      	bne.n	800923c <_vprintf+0x48>
 800928e:	2240      	movs	r2, #64	; 0x40
 8009290:	e7d2      	b.n	8009238 <_vprintf+0x44>
 8009292:	2201      	movs	r2, #1
 8009294:	fb0c 0303 	mla	r3, ip, r3, r0
 8009298:	e7d5      	b.n	8009246 <_vprintf+0x52>
 800929a:	f854 3b04 	ldr.w	r3, [r4], #4
 800929e:	3602      	adds	r6, #2
 80092a0:	2b00      	cmp	r3, #0
 80092a2:	bfb8      	it	lt
 80092a4:	425b      	neglt	r3, r3
 80092a6:	9304      	str	r3, [sp, #16]
 80092a8:	9b03      	ldr	r3, [sp, #12]
 80092aa:	f043 0301 	orr.w	r3, r3, #1
 80092ae:	9303      	str	r3, [sp, #12]
 80092b0:	7833      	ldrb	r3, [r6, #0]
 80092b2:	2b6c      	cmp	r3, #108	; 0x6c
 80092b4:	bf04      	itt	eq
 80092b6:	9b03      	ldreq	r3, [sp, #12]
 80092b8:	3601      	addeq	r6, #1
 80092ba:	7831      	ldrb	r1, [r6, #0]
 80092bc:	bf04      	itt	eq
 80092be:	f043 0304 	orreq.w	r3, r3, #4
 80092c2:	9303      	streq	r3, [sp, #12]
 80092c4:	2958      	cmp	r1, #88	; 0x58
 80092c6:	f000 8171 	beq.w	80095ac <_vprintf+0x3b8>
 80092ca:	f1a1 0363 	sub.w	r3, r1, #99	; 0x63
 80092ce:	b2da      	uxtb	r2, r3
 80092d0:	2a15      	cmp	r2, #21
 80092d2:	d8a4      	bhi.n	800921e <_vprintf+0x2a>
 80092d4:	2b15      	cmp	r3, #21
 80092d6:	d8a2      	bhi.n	800921e <_vprintf+0x2a>
 80092d8:	a201      	add	r2, pc, #4	; (adr r2, 80092e0 <_vprintf+0xec>)
 80092da:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80092de:	bf00      	nop
 80092e0:	08009341 	stmdaeq	r0, {r0, r6, r8, r9, ip, pc}
 80092e4:	08009353 	stmdaeq	r0, {r0, r1, r4, r6, r8, r9, ip, pc}
 80092e8:	0800921f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r9, ip, pc}
 80092ec:	08009389 	stmdaeq	r0, {r0, r3, r7, r8, r9, ip, pc}
 80092f0:	0800921f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r9, ip, pc}
 80092f4:	0800921f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r9, ip, pc}
 80092f8:	08009353 	stmdaeq	r0, {r0, r1, r4, r6, r8, r9, ip, pc}
 80092fc:	0800921f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r9, ip, pc}
 8009300:	0800921f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r9, ip, pc}
 8009304:	0800921f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r9, ip, pc}
 8009308:	0800921f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r9, ip, pc}
 800930c:	0800921f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r9, ip, pc}
 8009310:	0800921f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r9, ip, pc}
 8009314:	080094ef 	stmdaeq	r0, {r0, r1, r2, r3, r5, r6, r7, sl, ip, pc}
 8009318:	0800921f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r9, ip, pc}
 800931c:	0800921f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r9, ip, pc}
 8009320:	08009517 	stmdaeq	r0, {r0, r1, r2, r4, r8, sl, ip, pc}
 8009324:	0800921f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r9, ip, pc}
 8009328:	0800958d 	stmdaeq	r0, {r0, r2, r3, r7, r8, sl, ip, pc}
 800932c:	0800921f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r9, ip, pc}
 8009330:	0800921f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r9, ip, pc}
 8009334:	080095b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8, sl, ip, pc}
 8009338:	2101      	movs	r1, #1
 800933a:	fb05 3202 	mla	r2, r5, r2, r3
 800933e:	e79a      	b.n	8009276 <_vprintf+0x82>
 8009340:	4625      	mov	r5, r4
 8009342:	a803      	add	r0, sp, #12
 8009344:	f855 1b04 	ldr.w	r1, [r5], #4
 8009348:	f7ff fe76 	bl	8009038 <_xputch>
 800934c:	462c      	mov	r4, r5
 800934e:	3601      	adds	r6, #1
 8009350:	e768      	b.n	8009224 <_vprintf+0x30>
 8009352:	9903      	ldr	r1, [sp, #12]
 8009354:	074d      	lsls	r5, r1, #29
 8009356:	bf51      	iteee	pl
 8009358:	4625      	movpl	r5, r4
 800935a:	3407      	addmi	r4, #7
 800935c:	f024 0407 	bicmi.w	r4, r4, #7
 8009360:	4625      	movmi	r5, r4
 8009362:	bf55      	itete	pl
 8009364:	f855 2b04 	ldrpl.w	r2, [r5], #4
 8009368:	6863      	ldrmi	r3, [r4, #4]
 800936a:	17d3      	asrpl	r3, r2, #31
 800936c:	f855 2b08 	ldrmi.w	r2, [r5], #8
 8009370:	2b00      	cmp	r3, #0
 8009372:	da05      	bge.n	8009380 <_vprintf+0x18c>
 8009374:	f041 0108 	orr.w	r1, r1, #8
 8009378:	4252      	negs	r2, r2
 800937a:	9103      	str	r1, [sp, #12]
 800937c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8009380:	a803      	add	r0, sp, #12
 8009382:	f7ff fe6f 	bl	8009064 <_format_int>
 8009386:	e7e1      	b.n	800934c <_vprintf+0x158>
 8009388:	3407      	adds	r4, #7
 800938a:	f024 0507 	bic.w	r5, r4, #7
 800938e:	e8f5 0102 	ldrd	r0, r1, [r5], #8
 8009392:	f7fe fbd3 	bl	8007b3c <__aeabi_d2f>
 8009396:	9b03      	ldr	r3, [sp, #12]
 8009398:	4641      	mov	r1, r8
 800939a:	07dc      	lsls	r4, r3, #31
 800939c:	bf54      	ite	pl
 800939e:	f04f 0a06 	movpl.w	sl, #6
 80093a2:	f8dd a010 	ldrmi.w	sl, [sp, #16]
 80093a6:	4681      	mov	r9, r0
 80093a8:	f7fe fd74 	bl	8007e94 <__aeabi_fcmplt>
 80093ac:	2800      	cmp	r0, #0
 80093ae:	d063      	beq.n	8009478 <_vprintf+0x284>
 80093b0:	232d      	movs	r3, #45	; 0x2d
 80093b2:	f109 4900 	add.w	r9, r9, #2147483648	; 0x80000000
 80093b6:	f88d 3020 	strb.w	r3, [sp, #32]
 80093ba:	f10d 0b21 	add.w	fp, sp, #33	; 0x21
 80093be:	4648      	mov	r0, r9
 80093c0:	f7fe fd90 	bl	8007ee4 <__aeabi_f2iz>
 80093c4:	4659      	mov	r1, fp
 80093c6:	2200      	movs	r2, #0
 80093c8:	4604      	mov	r4, r0
 80093ca:	f7ff fdfb 	bl	8008fc4 <_itostr>
 80093ce:	eb0b 0200 	add.w	r2, fp, r0
 80093d2:	e9cd 2000 	strd	r2, r0, [sp]
 80093d6:	4620      	mov	r0, r4
 80093d8:	f7fe fcba 	bl	8007d50 <__aeabi_i2f>
 80093dc:	4601      	mov	r1, r0
 80093de:	4648      	mov	r0, r9
 80093e0:	f7fe fc00 	bl	8007be4 <__aeabi_fsub>
 80093e4:	222e      	movs	r2, #46	; 0x2e
 80093e6:	4601      	mov	r1, r0
 80093e8:	200a      	movs	r0, #10
 80093ea:	9b00      	ldr	r3, [sp, #0]
 80093ec:	f10a 0901 	add.w	r9, sl, #1
 80093f0:	1c5c      	adds	r4, r3, #1
 80093f2:	9b01      	ldr	r3, [sp, #4]
 80093f4:	f80b 2003 	strb.w	r2, [fp, r3]
 80093f8:	4603      	mov	r3, r0
 80093fa:	f1ba 0f00 	cmp.w	sl, #0
 80093fe:	dc3d      	bgt.n	800947c <_vprintf+0x288>
 8009400:	9100      	str	r1, [sp, #0]
 8009402:	f7fe fca5 	bl	8007d50 <__aeabi_i2f>
 8009406:	9900      	ldr	r1, [sp, #0]
 8009408:	f7fe ff68 	bl	80082dc <__aeabi_fmul>
 800940c:	f7fe fd6a 	bl	8007ee4 <__aeabi_f2iz>
 8009410:	464a      	mov	r2, r9
 8009412:	4621      	mov	r1, r4
 8009414:	f7ff fdd6 	bl	8008fc4 <_itostr>
 8009418:	4404      	add	r4, r0
 800941a:	1be0      	subs	r0, r4, r7
 800941c:	1e44      	subs	r4, r0, #1
 800941e:	5d3b      	ldrb	r3, [r7, r4]
 8009420:	193a      	adds	r2, r7, r4
 8009422:	2b34      	cmp	r3, #52	; 0x34
 8009424:	d910      	bls.n	8009448 <_vprintf+0x254>
 8009426:	f812 1c01 	ldrb.w	r1, [r2, #-1]
 800942a:	1e53      	subs	r3, r2, #1
 800942c:	292e      	cmp	r1, #46	; 0x2e
 800942e:	d02c      	beq.n	800948a <_vprintf+0x296>
 8009430:	469c      	mov	ip, r3
 8009432:	f04f 0e30 	mov.w	lr, #48	; 0x30
 8009436:	4663      	mov	r3, ip
 8009438:	f81c 1901 	ldrb.w	r1, [ip], #-1
 800943c:	2939      	cmp	r1, #57	; 0x39
 800943e:	d021      	beq.n	8009484 <_vprintf+0x290>
 8009440:	292e      	cmp	r1, #46	; 0x2e
 8009442:	d022      	beq.n	800948a <_vprintf+0x296>
 8009444:	3101      	adds	r1, #1
 8009446:	7019      	strb	r1, [r3, #0]
 8009448:	f104 0360 	add.w	r3, r4, #96	; 0x60
 800944c:	446b      	add	r3, sp
 800944e:	f813 3c41 	ldrb.w	r3, [r3, #-65]
 8009452:	2b2e      	cmp	r3, #46	; 0x2e
 8009454:	bf08      	it	eq
 8009456:	f104 34ff 	addeq.w	r4, r4, #4294967295	; 0xffffffff
 800945a:	46a1      	mov	r9, r4
 800945c:	9b05      	ldr	r3, [sp, #20]
 800945e:	4599      	cmp	r9, r3
 8009460:	db3e      	blt.n	80094e0 <_vprintf+0x2ec>
 8009462:	46b9      	mov	r9, r7
 8009464:	2c00      	cmp	r4, #0
 8009466:	f77f af71 	ble.w	800934c <_vprintf+0x158>
 800946a:	f819 1b01 	ldrb.w	r1, [r9], #1
 800946e:	a803      	add	r0, sp, #12
 8009470:	f7ff fde2 	bl	8009038 <_xputch>
 8009474:	3c01      	subs	r4, #1
 8009476:	e7f5      	b.n	8009464 <_vprintf+0x270>
 8009478:	46bb      	mov	fp, r7
 800947a:	e7a0      	b.n	80093be <_vprintf+0x1ca>
 800947c:	4358      	muls	r0, r3
 800947e:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
 8009482:	e7ba      	b.n	80093fa <_vprintf+0x206>
 8009484:	f88c e001 	strb.w	lr, [ip, #1]
 8009488:	e7d5      	b.n	8009436 <_vprintf+0x242>
 800948a:	f04f 0c30 	mov.w	ip, #48	; 0x30
 800948e:	3b01      	subs	r3, #1
 8009490:	7819      	ldrb	r1, [r3, #0]
 8009492:	2939      	cmp	r1, #57	; 0x39
 8009494:	d112      	bne.n	80094bc <_vprintf+0x2c8>
 8009496:	42bb      	cmp	r3, r7
 8009498:	d20d      	bcs.n	80094b6 <_vprintf+0x2c2>
 800949a:	1c5c      	adds	r4, r3, #1
 800949c:	1c99      	adds	r1, r3, #2
 800949e:	428c      	cmp	r4, r1
 80094a0:	eba2 0203 	sub.w	r2, r2, r3
 80094a4:	d913      	bls.n	80094ce <_vprintf+0x2da>
 80094a6:	3201      	adds	r2, #1
 80094a8:	441a      	add	r2, r3
 80094aa:	42a2      	cmp	r2, r4
 80094ac:	d10b      	bne.n	80094c6 <_vprintf+0x2d2>
 80094ae:	2231      	movs	r2, #49	; 0x31
 80094b0:	4604      	mov	r4, r0
 80094b2:	705a      	strb	r2, [r3, #1]
 80094b4:	e7c8      	b.n	8009448 <_vprintf+0x254>
 80094b6:	f803 c901 	strb.w	ip, [r3], #-1
 80094ba:	e7e9      	b.n	8009490 <_vprintf+0x29c>
 80094bc:	42bb      	cmp	r3, r7
 80094be:	d3ec      	bcc.n	800949a <_vprintf+0x2a6>
 80094c0:	292d      	cmp	r1, #45	; 0x2d
 80094c2:	d0ea      	beq.n	800949a <_vprintf+0x2a6>
 80094c4:	e7be      	b.n	8009444 <_vprintf+0x250>
 80094c6:	f814 1b01 	ldrb.w	r1, [r4], #1
 80094ca:	7021      	strb	r1, [r4, #0]
 80094cc:	e7ed      	b.n	80094aa <_vprintf+0x2b6>
 80094ce:	4414      	add	r4, r2
 80094d0:	440a      	add	r2, r1
 80094d2:	428a      	cmp	r2, r1
 80094d4:	d0eb      	beq.n	80094ae <_vprintf+0x2ba>
 80094d6:	f814 cd01 	ldrb.w	ip, [r4, #-1]!
 80094da:	f802 cd01 	strb.w	ip, [r2, #-1]!
 80094de:	e7f8      	b.n	80094d2 <_vprintf+0x2de>
 80094e0:	2120      	movs	r1, #32
 80094e2:	a803      	add	r0, sp, #12
 80094e4:	f7ff fda8 	bl	8009038 <_xputch>
 80094e8:	f109 0901 	add.w	r9, r9, #1
 80094ec:	e7b6      	b.n	800945c <_vprintf+0x268>
 80094ee:	2308      	movs	r3, #8
 80094f0:	4625      	mov	r5, r4
 80094f2:	9305      	str	r3, [sp, #20]
 80094f4:	2320      	movs	r3, #32
 80094f6:	2130      	movs	r1, #48	; 0x30
 80094f8:	f855 4b04 	ldr.w	r4, [r5], #4
 80094fc:	a803      	add	r0, sp, #12
 80094fe:	9303      	str	r3, [sp, #12]
 8009500:	f7ff fd9a 	bl	8009038 <_xputch>
 8009504:	2178      	movs	r1, #120	; 0x78
 8009506:	a803      	add	r0, sp, #12
 8009508:	f7ff fd96 	bl	8009038 <_xputch>
 800950c:	4621      	mov	r1, r4
 800950e:	a803      	add	r0, sp, #12
 8009510:	f7ff fe12 	bl	8009138 <_format_hex>
 8009514:	e71a      	b.n	800934c <_vprintf+0x158>
 8009516:	4625      	mov	r5, r4
 8009518:	2400      	movs	r4, #0
 800951a:	f855 9b04 	ldr.w	r9, [r5], #4
 800951e:	f819 3004 	ldrb.w	r3, [r9, r4]
 8009522:	b993      	cbnz	r3, 800954a <_vprintf+0x356>
 8009524:	9b03      	ldr	r3, [sp, #12]
 8009526:	07d9      	lsls	r1, r3, #31
 8009528:	d503      	bpl.n	8009532 <_vprintf+0x33e>
 800952a:	9b04      	ldr	r3, [sp, #16]
 800952c:	429c      	cmp	r4, r3
 800952e:	bfa8      	it	ge
 8009530:	461c      	movge	r4, r3
 8009532:	9b03      	ldr	r3, [sp, #12]
 8009534:	f104 0a01 	add.w	sl, r4, #1
 8009538:	065a      	lsls	r2, r3, #25
 800953a:	d403      	bmi.n	8009544 <_vprintf+0x350>
 800953c:	9b05      	ldr	r3, [sp, #20]
 800953e:	429c      	cmp	r4, r3
 8009540:	db05      	blt.n	800954e <_vprintf+0x35a>
 8009542:	4654      	mov	r4, sl
 8009544:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 8009548:	e00d      	b.n	8009566 <_vprintf+0x372>
 800954a:	3401      	adds	r4, #1
 800954c:	e7e7      	b.n	800951e <_vprintf+0x32a>
 800954e:	2120      	movs	r1, #32
 8009550:	a803      	add	r0, sp, #12
 8009552:	f7ff fd71 	bl	8009038 <_xputch>
 8009556:	4654      	mov	r4, sl
 8009558:	e7eb      	b.n	8009532 <_vprintf+0x33e>
 800955a:	a803      	add	r0, sp, #12
 800955c:	f7ff fd6c 	bl	8009038 <_xputch>
 8009560:	9b04      	ldr	r3, [sp, #16]
 8009562:	3b01      	subs	r3, #1
 8009564:	9304      	str	r3, [sp, #16]
 8009566:	9b03      	ldr	r3, [sp, #12]
 8009568:	07db      	lsls	r3, r3, #31
 800956a:	d501      	bpl.n	8009570 <_vprintf+0x37c>
 800956c:	9b04      	ldr	r3, [sp, #16]
 800956e:	b11b      	cbz	r3, 8009578 <_vprintf+0x384>
 8009570:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 8009574:	2900      	cmp	r1, #0
 8009576:	d1f0      	bne.n	800955a <_vprintf+0x366>
 8009578:	9b05      	ldr	r3, [sp, #20]
 800957a:	429c      	cmp	r4, r3
 800957c:	f6bf aee6 	bge.w	800934c <_vprintf+0x158>
 8009580:	2120      	movs	r1, #32
 8009582:	a803      	add	r0, sp, #12
 8009584:	f7ff fd58 	bl	8009038 <_xputch>
 8009588:	3401      	adds	r4, #1
 800958a:	e7f5      	b.n	8009578 <_vprintf+0x384>
 800958c:	9b03      	ldr	r3, [sp, #12]
 800958e:	f013 0304 	ands.w	r3, r3, #4
 8009592:	bf1d      	ittte	ne
 8009594:	3407      	addne	r4, #7
 8009596:	f024 0407 	bicne.w	r4, r4, #7
 800959a:	4625      	movne	r5, r4
 800959c:	4625      	moveq	r5, r4
 800959e:	bf1a      	itte	ne
 80095a0:	f855 2b08 	ldrne.w	r2, [r5], #8
 80095a4:	6863      	ldrne	r3, [r4, #4]
 80095a6:	f855 2b04 	ldreq.w	r2, [r5], #4
 80095aa:	e6e9      	b.n	8009380 <_vprintf+0x18c>
 80095ac:	9b03      	ldr	r3, [sp, #12]
 80095ae:	f043 0302 	orr.w	r3, r3, #2
 80095b2:	9303      	str	r3, [sp, #12]
 80095b4:	4625      	mov	r5, r4
 80095b6:	f855 1b04 	ldr.w	r1, [r5], #4
 80095ba:	e7a8      	b.n	800950e <_vprintf+0x31a>

080095bc <printf>:
 80095bc:	b40f      	push	{r0, r1, r2, r3}
 80095be:	b507      	push	{r0, r1, r2, lr}
 80095c0:	aa04      	add	r2, sp, #16
 80095c2:	f852 1b04 	ldr.w	r1, [r2], #4
 80095c6:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 80095ca:	9201      	str	r2, [sp, #4]
 80095cc:	f7ff fe12 	bl	80091f4 <_vprintf>
 80095d0:	b003      	add	sp, #12
 80095d2:	f85d eb04 	ldr.w	lr, [sp], #4
 80095d6:	b004      	add	sp, #16
 80095d8:	4770      	bx	lr
	...

080095dc <sprintf>:
 80095dc:	b40e      	push	{r1, r2, r3}
 80095de:	b517      	push	{r0, r1, r2, r4, lr}
 80095e0:	4c09      	ldr	r4, [pc, #36]	; (8009608 <sprintf+0x2c>)
 80095e2:	aa05      	add	r2, sp, #20
 80095e4:	f852 1b04 	ldr.w	r1, [r2], #4
 80095e8:	6020      	str	r0, [r4, #0]
 80095ea:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 80095ee:	9201      	str	r2, [sp, #4]
 80095f0:	f7ff fe00 	bl	80091f4 <_vprintf>
 80095f4:	2300      	movs	r3, #0
 80095f6:	6822      	ldr	r2, [r4, #0]
 80095f8:	6023      	str	r3, [r4, #0]
 80095fa:	7013      	strb	r3, [r2, #0]
 80095fc:	b003      	add	sp, #12
 80095fe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009602:	b003      	add	sp, #12
 8009604:	4770      	bx	lr
 8009606:	bf00      	nop
 8009608:	20000104 	andcs	r0, r0, r4, lsl #2

0800960c <snprintf>:
 800960c:	b40c      	push	{r2, r3}
 800960e:	460b      	mov	r3, r1
 8009610:	b513      	push	{r0, r1, r4, lr}
 8009612:	4c09      	ldr	r4, [pc, #36]	; (8009638 <snprintf+0x2c>)
 8009614:	aa04      	add	r2, sp, #16
 8009616:	f852 1b04 	ldr.w	r1, [r2], #4
 800961a:	6020      	str	r0, [r4, #0]
 800961c:	4618      	mov	r0, r3
 800961e:	9201      	str	r2, [sp, #4]
 8009620:	f7ff fde8 	bl	80091f4 <_vprintf>
 8009624:	2300      	movs	r3, #0
 8009626:	6822      	ldr	r2, [r4, #0]
 8009628:	6023      	str	r3, [r4, #0]
 800962a:	7013      	strb	r3, [r2, #0]
 800962c:	b002      	add	sp, #8
 800962e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009632:	b002      	add	sp, #8
 8009634:	4770      	bx	lr
 8009636:	bf00      	nop
 8009638:	20000104 	andcs	r0, r0, r4, lsl #2

0800963c <vsnprintf>:
 800963c:	b538      	push	{r3, r4, r5, lr}
 800963e:	4605      	mov	r5, r0
 8009640:	4c05      	ldr	r4, [pc, #20]	; (8009658 <vsnprintf+0x1c>)
 8009642:	4608      	mov	r0, r1
 8009644:	4611      	mov	r1, r2
 8009646:	461a      	mov	r2, r3
 8009648:	6025      	str	r5, [r4, #0]
 800964a:	f7ff fdd3 	bl	80091f4 <_vprintf>
 800964e:	2300      	movs	r3, #0
 8009650:	6822      	ldr	r2, [r4, #0]
 8009652:	6023      	str	r3, [r4, #0]
 8009654:	7013      	strb	r3, [r2, #0]
 8009656:	bd38      	pop	{r3, r4, r5, pc}
 8009658:	20000104 	andcs	r0, r0, r4, lsl #2

0800965c <__udivmoddi4>:
 800965c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009660:	9e08      	ldr	r6, [sp, #32]
 8009662:	460d      	mov	r5, r1
 8009664:	4604      	mov	r4, r0
 8009666:	468e      	mov	lr, r1
 8009668:	2b00      	cmp	r3, #0
 800966a:	d14c      	bne.n	8009706 <__udivmoddi4+0xaa>
 800966c:	428a      	cmp	r2, r1
 800966e:	4694      	mov	ip, r2
 8009670:	d967      	bls.n	8009742 <__udivmoddi4+0xe6>
 8009672:	fab2 f382 	clz	r3, r2
 8009676:	b153      	cbz	r3, 800968e <__udivmoddi4+0x32>
 8009678:	fa02 fc03 	lsl.w	ip, r2, r3
 800967c:	f1c3 0220 	rsb	r2, r3, #32
 8009680:	fa01 fe03 	lsl.w	lr, r1, r3
 8009684:	fa20 f202 	lsr.w	r2, r0, r2
 8009688:	ea42 0e0e 	orr.w	lr, r2, lr
 800968c:	409c      	lsls	r4, r3
 800968e:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8009692:	fbbe f1f7 	udiv	r1, lr, r7
 8009696:	fa1f f58c 	uxth.w	r5, ip
 800969a:	fb07 ee11 	mls	lr, r7, r1, lr
 800969e:	fb01 f005 	mul.w	r0, r1, r5
 80096a2:	0c22      	lsrs	r2, r4, #16
 80096a4:	ea42 420e 	orr.w	r2, r2, lr, lsl #16
 80096a8:	4290      	cmp	r0, r2
 80096aa:	d90a      	bls.n	80096c2 <__udivmoddi4+0x66>
 80096ac:	eb1c 0202 	adds.w	r2, ip, r2
 80096b0:	f101 3eff 	add.w	lr, r1, #4294967295	; 0xffffffff
 80096b4:	f080 8119 	bcs.w	80098ea <__udivmoddi4+0x28e>
 80096b8:	4290      	cmp	r0, r2
 80096ba:	f240 8116 	bls.w	80098ea <__udivmoddi4+0x28e>
 80096be:	3902      	subs	r1, #2
 80096c0:	4462      	add	r2, ip
 80096c2:	1a12      	subs	r2, r2, r0
 80096c4:	fbb2 f0f7 	udiv	r0, r2, r7
 80096c8:	fb07 2210 	mls	r2, r7, r0, r2
 80096cc:	fb00 f505 	mul.w	r5, r0, r5
 80096d0:	b2a4      	uxth	r4, r4
 80096d2:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80096d6:	42a5      	cmp	r5, r4
 80096d8:	d90a      	bls.n	80096f0 <__udivmoddi4+0x94>
 80096da:	eb1c 0404 	adds.w	r4, ip, r4
 80096de:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
 80096e2:	f080 8104 	bcs.w	80098ee <__udivmoddi4+0x292>
 80096e6:	42a5      	cmp	r5, r4
 80096e8:	f240 8101 	bls.w	80098ee <__udivmoddi4+0x292>
 80096ec:	4464      	add	r4, ip
 80096ee:	3802      	subs	r0, #2
 80096f0:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 80096f4:	2100      	movs	r1, #0
 80096f6:	1b64      	subs	r4, r4, r5
 80096f8:	b11e      	cbz	r6, 8009702 <__udivmoddi4+0xa6>
 80096fa:	40dc      	lsrs	r4, r3
 80096fc:	2300      	movs	r3, #0
 80096fe:	e9c6 4300 	strd	r4, r3, [r6]
 8009702:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009706:	428b      	cmp	r3, r1
 8009708:	d908      	bls.n	800971c <__udivmoddi4+0xc0>
 800970a:	2e00      	cmp	r6, #0
 800970c:	f000 80ea 	beq.w	80098e4 <__udivmoddi4+0x288>
 8009710:	2100      	movs	r1, #0
 8009712:	e9c6 0500 	strd	r0, r5, [r6]
 8009716:	4608      	mov	r0, r1
 8009718:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800971c:	fab3 f183 	clz	r1, r3
 8009720:	2900      	cmp	r1, #0
 8009722:	d148      	bne.n	80097b6 <__udivmoddi4+0x15a>
 8009724:	42ab      	cmp	r3, r5
 8009726:	d302      	bcc.n	800972e <__udivmoddi4+0xd2>
 8009728:	4282      	cmp	r2, r0
 800972a:	f200 80f8 	bhi.w	800991e <__udivmoddi4+0x2c2>
 800972e:	1a84      	subs	r4, r0, r2
 8009730:	eb65 0203 	sbc.w	r2, r5, r3
 8009734:	2001      	movs	r0, #1
 8009736:	4696      	mov	lr, r2
 8009738:	2e00      	cmp	r6, #0
 800973a:	d0e2      	beq.n	8009702 <__udivmoddi4+0xa6>
 800973c:	e9c6 4e00 	strd	r4, lr, [r6]
 8009740:	e7df      	b.n	8009702 <__udivmoddi4+0xa6>
 8009742:	b902      	cbnz	r2, 8009746 <__udivmoddi4+0xea>
 8009744:	deff      	udf	#255	; 0xff
 8009746:	fab2 f382 	clz	r3, r2
 800974a:	2b00      	cmp	r3, #0
 800974c:	f040 808e 	bne.w	800986c <__udivmoddi4+0x210>
 8009750:	1a88      	subs	r0, r1, r2
 8009752:	2101      	movs	r1, #1
 8009754:	0c17      	lsrs	r7, r2, #16
 8009756:	fa1f fe82 	uxth.w	lr, r2
 800975a:	fbb0 f5f7 	udiv	r5, r0, r7
 800975e:	fb07 0015 	mls	r0, r7, r5, r0
 8009762:	0c22      	lsrs	r2, r4, #16
 8009764:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8009768:	fb0e f005 	mul.w	r0, lr, r5
 800976c:	4290      	cmp	r0, r2
 800976e:	d908      	bls.n	8009782 <__udivmoddi4+0x126>
 8009770:	eb1c 0202 	adds.w	r2, ip, r2
 8009774:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 8009778:	d202      	bcs.n	8009780 <__udivmoddi4+0x124>
 800977a:	4290      	cmp	r0, r2
 800977c:	f200 80cc 	bhi.w	8009918 <__udivmoddi4+0x2bc>
 8009780:	4645      	mov	r5, r8
 8009782:	1a12      	subs	r2, r2, r0
 8009784:	fbb2 f0f7 	udiv	r0, r2, r7
 8009788:	fb07 2210 	mls	r2, r7, r0, r2
 800978c:	fb0e fe00 	mul.w	lr, lr, r0
 8009790:	b2a4      	uxth	r4, r4
 8009792:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8009796:	45a6      	cmp	lr, r4
 8009798:	d908      	bls.n	80097ac <__udivmoddi4+0x150>
 800979a:	eb1c 0404 	adds.w	r4, ip, r4
 800979e:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
 80097a2:	d202      	bcs.n	80097aa <__udivmoddi4+0x14e>
 80097a4:	45a6      	cmp	lr, r4
 80097a6:	f200 80b4 	bhi.w	8009912 <__udivmoddi4+0x2b6>
 80097aa:	4610      	mov	r0, r2
 80097ac:	eba4 040e 	sub.w	r4, r4, lr
 80097b0:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 80097b4:	e7a0      	b.n	80096f8 <__udivmoddi4+0x9c>
 80097b6:	f1c1 0720 	rsb	r7, r1, #32
 80097ba:	408b      	lsls	r3, r1
 80097bc:	fa22 fc07 	lsr.w	ip, r2, r7
 80097c0:	ea4c 0c03 	orr.w	ip, ip, r3
 80097c4:	fa25 fa07 	lsr.w	sl, r5, r7
 80097c8:	ea4f 491c 	mov.w	r9, ip, lsr #16
 80097cc:	fbba f8f9 	udiv	r8, sl, r9
 80097d0:	408d      	lsls	r5, r1
 80097d2:	fa20 f307 	lsr.w	r3, r0, r7
 80097d6:	fb09 aa18 	mls	sl, r9, r8, sl
 80097da:	fa1f fe8c 	uxth.w	lr, ip
 80097de:	432b      	orrs	r3, r5
 80097e0:	fa00 f501 	lsl.w	r5, r0, r1
 80097e4:	fb08 f00e 	mul.w	r0, r8, lr
 80097e8:	0c1c      	lsrs	r4, r3, #16
 80097ea:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
 80097ee:	42a0      	cmp	r0, r4
 80097f0:	fa02 f201 	lsl.w	r2, r2, r1
 80097f4:	d90b      	bls.n	800980e <__udivmoddi4+0x1b2>
 80097f6:	eb1c 0404 	adds.w	r4, ip, r4
 80097fa:	f108 3aff 	add.w	sl, r8, #4294967295	; 0xffffffff
 80097fe:	f080 8086 	bcs.w	800990e <__udivmoddi4+0x2b2>
 8009802:	42a0      	cmp	r0, r4
 8009804:	f240 8083 	bls.w	800990e <__udivmoddi4+0x2b2>
 8009808:	f1a8 0802 	sub.w	r8, r8, #2
 800980c:	4464      	add	r4, ip
 800980e:	1a24      	subs	r4, r4, r0
 8009810:	b298      	uxth	r0, r3
 8009812:	fbb4 f3f9 	udiv	r3, r4, r9
 8009816:	fb09 4413 	mls	r4, r9, r3, r4
 800981a:	fb03 fe0e 	mul.w	lr, r3, lr
 800981e:	ea40 4404 	orr.w	r4, r0, r4, lsl #16
 8009822:	45a6      	cmp	lr, r4
 8009824:	d908      	bls.n	8009838 <__udivmoddi4+0x1dc>
 8009826:	eb1c 0404 	adds.w	r4, ip, r4
 800982a:	f103 30ff 	add.w	r0, r3, #4294967295	; 0xffffffff
 800982e:	d26a      	bcs.n	8009906 <__udivmoddi4+0x2aa>
 8009830:	45a6      	cmp	lr, r4
 8009832:	d968      	bls.n	8009906 <__udivmoddi4+0x2aa>
 8009834:	3b02      	subs	r3, #2
 8009836:	4464      	add	r4, ip
 8009838:	ea43 4008 	orr.w	r0, r3, r8, lsl #16
 800983c:	fba0 9302 	umull	r9, r3, r0, r2
 8009840:	eba4 040e 	sub.w	r4, r4, lr
 8009844:	429c      	cmp	r4, r3
 8009846:	46c8      	mov	r8, r9
 8009848:	469e      	mov	lr, r3
 800984a:	d354      	bcc.n	80098f6 <__udivmoddi4+0x29a>
 800984c:	d051      	beq.n	80098f2 <__udivmoddi4+0x296>
 800984e:	2e00      	cmp	r6, #0
 8009850:	d067      	beq.n	8009922 <__udivmoddi4+0x2c6>
 8009852:	ebb5 0308 	subs.w	r3, r5, r8
 8009856:	eb64 040e 	sbc.w	r4, r4, lr
 800985a:	40cb      	lsrs	r3, r1
 800985c:	fa04 f707 	lsl.w	r7, r4, r7
 8009860:	431f      	orrs	r7, r3
 8009862:	40cc      	lsrs	r4, r1
 8009864:	e9c6 7400 	strd	r7, r4, [r6]
 8009868:	2100      	movs	r1, #0
 800986a:	e74a      	b.n	8009702 <__udivmoddi4+0xa6>
 800986c:	fa02 fc03 	lsl.w	ip, r2, r3
 8009870:	f1c3 0020 	rsb	r0, r3, #32
 8009874:	40c1      	lsrs	r1, r0
 8009876:	409d      	lsls	r5, r3
 8009878:	fa24 f000 	lsr.w	r0, r4, r0
 800987c:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8009880:	4328      	orrs	r0, r5
 8009882:	fbb1 f5f7 	udiv	r5, r1, r7
 8009886:	fb07 1115 	mls	r1, r7, r5, r1
 800988a:	fa1f fe8c 	uxth.w	lr, ip
 800988e:	0c02      	lsrs	r2, r0, #16
 8009890:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8009894:	fb05 f10e 	mul.w	r1, r5, lr
 8009898:	4291      	cmp	r1, r2
 800989a:	fa04 f403 	lsl.w	r4, r4, r3
 800989e:	d908      	bls.n	80098b2 <__udivmoddi4+0x256>
 80098a0:	eb1c 0202 	adds.w	r2, ip, r2
 80098a4:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 80098a8:	d22f      	bcs.n	800990a <__udivmoddi4+0x2ae>
 80098aa:	4291      	cmp	r1, r2
 80098ac:	d92d      	bls.n	800990a <__udivmoddi4+0x2ae>
 80098ae:	3d02      	subs	r5, #2
 80098b0:	4462      	add	r2, ip
 80098b2:	1a52      	subs	r2, r2, r1
 80098b4:	fbb2 f1f7 	udiv	r1, r2, r7
 80098b8:	fb07 2211 	mls	r2, r7, r1, r2
 80098bc:	b280      	uxth	r0, r0
 80098be:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 80098c2:	fb01 f20e 	mul.w	r2, r1, lr
 80098c6:	4282      	cmp	r2, r0
 80098c8:	d908      	bls.n	80098dc <__udivmoddi4+0x280>
 80098ca:	eb1c 0000 	adds.w	r0, ip, r0
 80098ce:	f101 38ff 	add.w	r8, r1, #4294967295	; 0xffffffff
 80098d2:	d216      	bcs.n	8009902 <__udivmoddi4+0x2a6>
 80098d4:	4282      	cmp	r2, r0
 80098d6:	d914      	bls.n	8009902 <__udivmoddi4+0x2a6>
 80098d8:	3902      	subs	r1, #2
 80098da:	4460      	add	r0, ip
 80098dc:	1a80      	subs	r0, r0, r2
 80098de:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 80098e2:	e73a      	b.n	800975a <__udivmoddi4+0xfe>
 80098e4:	4631      	mov	r1, r6
 80098e6:	4630      	mov	r0, r6
 80098e8:	e70b      	b.n	8009702 <__udivmoddi4+0xa6>
 80098ea:	4671      	mov	r1, lr
 80098ec:	e6e9      	b.n	80096c2 <__udivmoddi4+0x66>
 80098ee:	4610      	mov	r0, r2
 80098f0:	e6fe      	b.n	80096f0 <__udivmoddi4+0x94>
 80098f2:	454d      	cmp	r5, r9
 80098f4:	d2ab      	bcs.n	800984e <__udivmoddi4+0x1f2>
 80098f6:	ebb9 0802 	subs.w	r8, r9, r2
 80098fa:	eb63 0e0c 	sbc.w	lr, r3, ip
 80098fe:	3801      	subs	r0, #1
 8009900:	e7a5      	b.n	800984e <__udivmoddi4+0x1f2>
 8009902:	4641      	mov	r1, r8
 8009904:	e7ea      	b.n	80098dc <__udivmoddi4+0x280>
 8009906:	4603      	mov	r3, r0
 8009908:	e796      	b.n	8009838 <__udivmoddi4+0x1dc>
 800990a:	4645      	mov	r5, r8
 800990c:	e7d1      	b.n	80098b2 <__udivmoddi4+0x256>
 800990e:	46d0      	mov	r8, sl
 8009910:	e77d      	b.n	800980e <__udivmoddi4+0x1b2>
 8009912:	4464      	add	r4, ip
 8009914:	3802      	subs	r0, #2
 8009916:	e749      	b.n	80097ac <__udivmoddi4+0x150>
 8009918:	3d02      	subs	r5, #2
 800991a:	4462      	add	r2, ip
 800991c:	e731      	b.n	8009782 <__udivmoddi4+0x126>
 800991e:	4608      	mov	r0, r1
 8009920:	e70a      	b.n	8009738 <__udivmoddi4+0xdc>
 8009922:	4631      	mov	r1, r6
 8009924:	e6ed      	b.n	8009702 <__udivmoddi4+0xa6>
 8009926:	bf00      	nop

08009928 <e131::universe_to_multicast_ip(unsigned short)>:
 8009928:	b513      	push	{r0, r1, r4, lr}
 800992a:	4604      	mov	r4, r0
 800992c:	a901      	add	r1, sp, #4
 800992e:	4806      	ldr	r0, [pc, #24]	; (8009948 <e131::universe_to_multicast_ip(unsigned short)+0x20>)
 8009930:	f009 f816 	bl	8012960 <inet_aton>
 8009934:	9801      	ldr	r0, [sp, #4]
 8009936:	ea40 6004 	orr.w	r0, r0, r4, lsl #24
 800993a:	0224      	lsls	r4, r4, #8
 800993c:	f404 047f 	and.w	r4, r4, #16711680	; 0xff0000
 8009940:	4320      	orrs	r0, r4
 8009942:	b002      	add	sp, #8
 8009944:	bd10      	pop	{r4, pc}
 8009946:	bf00      	nop
 8009948:	08014e60 	stmdaeq	r1, {r5, r6, r9, sl, fp, lr}

0800994c <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]>:
 800994c:	f240 6304 	movw	r3, #1540	; 0x604
 8009950:	fb03 0001 	mla	r0, r3, r1, r0
 8009954:	2300      	movs	r3, #0
 8009956:	b510      	push	{r4, lr}
 8009958:	4293      	cmp	r3, r2
 800995a:	d100      	bne.n	800995e <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]+0x12>
 800995c:	bd10      	pop	{r4, pc}
 800995e:	f810 4b01 	ldrb.w	r4, [r0], #1
 8009962:	3301      	adds	r3, #1
 8009964:	f890 11ff 	ldrb.w	r1, [r0, #511]	; 0x1ff
 8009968:	42a1      	cmp	r1, r4
 800996a:	bf38      	it	cc
 800996c:	4621      	movcc	r1, r4
 800996e:	f880 13ff 	strb.w	r1, [r0, #1023]	; 0x3ff
 8009972:	e7f1      	b.n	8009958 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]+0xc>

08009974 <memset.constprop.0.isra.0>:
 8009974:	2300      	movs	r3, #0
 8009976:	4401      	add	r1, r0
 8009978:	4288      	cmp	r0, r1
 800997a:	d100      	bne.n	800997e <memset.constprop.0.isra.0+0xa>
 800997c:	4770      	bx	lr
 800997e:	f800 3b01 	strb.w	r3, [r0], #1
 8009982:	e7f9      	b.n	8009978 <memset.constprop.0.isra.0+0x4>

08009984 <memcpy.isra.0>:
 8009984:	3801      	subs	r0, #1
 8009986:	440a      	add	r2, r1
 8009988:	4291      	cmp	r1, r2
 800998a:	d100      	bne.n	800998e <memcpy.isra.0+0xa>
 800998c:	4770      	bx	lr
 800998e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8009992:	f800 3f01 	strb.w	r3, [r0, #1]!
 8009996:	e7f7      	b.n	8009988 <memcpy.isra.0+0x4>

08009998 <lightset::Data::Get()>:
 8009998:	4b03      	ldr	r3, [pc, #12]	; (80099a8 <lightset::Data::Get()+0x10>)
 800999a:	4804      	ldr	r0, [pc, #16]	; (80099ac <lightset::Data::Get()+0x14>)
 800999c:	681a      	ldr	r2, [r3, #0]
 800999e:	07d2      	lsls	r2, r2, #31
 80099a0:	bf5c      	itt	pl
 80099a2:	2201      	movpl	r2, #1
 80099a4:	601a      	strpl	r2, [r3, #0]
 80099a6:	4770      	bx	lr
 80099a8:	20000108 	andcs	r0, r0, r8, lsl #2
 80099ac:	2000010c 	andcs	r0, r0, ip, lsl #2

080099b0 <lightset::Data::SetSourceA(unsigned int, unsigned char const*, unsigned int)>:
 80099b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80099b4:	4615      	mov	r5, r2
 80099b6:	460f      	mov	r7, r1
 80099b8:	4604      	mov	r4, r0
 80099ba:	f7ff ffed 	bl	8009998 <lightset::Data::Get()>
 80099be:	f240 6304 	movw	r3, #1540	; 0x604
 80099c2:	4606      	mov	r6, r0
 80099c4:	435c      	muls	r4, r3
 80099c6:	eb00 0804 	add.w	r8, r0, r4
 80099ca:	462a      	mov	r2, r5
 80099cc:	4639      	mov	r1, r7
 80099ce:	4640      	mov	r0, r8
 80099d0:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80099d4:	f7ff ffd6 	bl	8009984 <memcpy.isra.0>
 80099d8:	462a      	mov	r2, r5
 80099da:	4639      	mov	r1, r7
 80099dc:	f8c8 5600 	str.w	r5, [r8, #1536]	; 0x600
 80099e0:	1930      	adds	r0, r6, r4
 80099e2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80099e6:	f7ff bfcd 	b.w	8009984 <memcpy.isra.0>

080099ea <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>:
 80099ea:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80099ee:	4680      	mov	r8, r0
 80099f0:	f240 6404 	movw	r4, #1540	; 0x604
 80099f4:	4615      	mov	r5, r2
 80099f6:	460f      	mov	r7, r1
 80099f8:	4699      	mov	r9, r3
 80099fa:	f7ff ffcd 	bl	8009998 <lightset::Data::Get()>
 80099fe:	fb04 f408 	mul.w	r4, r4, r8
 8009a02:	eb00 0a04 	add.w	sl, r0, r4
 8009a06:	4606      	mov	r6, r0
 8009a08:	462a      	mov	r2, r5
 8009a0a:	4639      	mov	r1, r7
 8009a0c:	4650      	mov	r0, sl
 8009a0e:	f7ff ffb9 	bl	8009984 <memcpy.isra.0>
 8009a12:	f8ca 5600 	str.w	r5, [sl, #1536]	; 0x600
 8009a16:	f1b9 0f00 	cmp.w	r9, #0
 8009a1a:	d106      	bne.n	8009a2a <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)+0x40>
 8009a1c:	462a      	mov	r2, r5
 8009a1e:	4641      	mov	r1, r8
 8009a20:	4630      	mov	r0, r6
 8009a22:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009a26:	f7ff bf91 	b.w	800994c <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]>
 8009a2a:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8009a2e:	462a      	mov	r2, r5
 8009a30:	4639      	mov	r1, r7
 8009a32:	1930      	adds	r0, r6, r4
 8009a34:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009a38:	f7ff bfa4 	b.w	8009984 <memcpy.isra.0>

08009a3c <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>:
 8009a3c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8009a40:	4616      	mov	r6, r2
 8009a42:	4699      	mov	r9, r3
 8009a44:	4680      	mov	r8, r0
 8009a46:	460f      	mov	r7, r1
 8009a48:	f7ff ffa6 	bl	8009998 <lightset::Data::Get()>
 8009a4c:	f240 6404 	movw	r4, #1540	; 0x604
 8009a50:	4605      	mov	r5, r0
 8009a52:	fb04 f408 	mul.w	r4, r4, r8
 8009a56:	f504 7000 	add.w	r0, r4, #512	; 0x200
 8009a5a:	4632      	mov	r2, r6
 8009a5c:	4639      	mov	r1, r7
 8009a5e:	4428      	add	r0, r5
 8009a60:	f7ff ff90 	bl	8009984 <memcpy.isra.0>
 8009a64:	192b      	adds	r3, r5, r4
 8009a66:	f8c3 6600 	str.w	r6, [r3, #1536]	; 0x600
 8009a6a:	f1b9 0f00 	cmp.w	r9, #0
 8009a6e:	d106      	bne.n	8009a7e <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)+0x42>
 8009a70:	4632      	mov	r2, r6
 8009a72:	4641      	mov	r1, r8
 8009a74:	4628      	mov	r0, r5
 8009a76:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8009a7a:	f7ff bf67 	b.w	800994c <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]>
 8009a7e:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8009a82:	4632      	mov	r2, r6
 8009a84:	4639      	mov	r1, r7
 8009a86:	1928      	adds	r0, r5, r4
 8009a88:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8009a8c:	f7ff bf7a 	b.w	8009984 <memcpy.isra.0>

08009a90 <lightset::Data::IOutput(LightSet*, unsigned int) const>:
 8009a90:	f240 6304 	movw	r3, #1540	; 0x604
 8009a94:	b470      	push	{r4, r5, r6}
 8009a96:	4605      	mov	r5, r0
 8009a98:	4608      	mov	r0, r1
 8009a9a:	4353      	muls	r3, r2
 8009a9c:	4611      	mov	r1, r2
 8009a9e:	f503 6480 	add.w	r4, r3, #1024	; 0x400
 8009aa2:	18ea      	adds	r2, r5, r3
 8009aa4:	6803      	ldr	r3, [r0, #0]
 8009aa6:	691e      	ldr	r6, [r3, #16]
 8009aa8:	f8d2 3600 	ldr.w	r3, [r2, #1536]	; 0x600
 8009aac:	46b4      	mov	ip, r6
 8009aae:	192a      	adds	r2, r5, r4
 8009ab0:	bc70      	pop	{r4, r5, r6}
 8009ab2:	4760      	bx	ip

08009ab4 <E131Bridge::Start()>:
 8009ab4:	6943      	ldr	r3, [r0, #20]
 8009ab6:	b513      	push	{r0, r1, r4, lr}
 8009ab8:	4604      	mov	r4, r0
 8009aba:	b35b      	cbz	r3, 8009b14 <E131Bridge::Start()+0x60>
 8009abc:	6983      	ldr	r3, [r0, #24]
 8009abe:	b9cb      	cbnz	r3, 8009af4 <E131Bridge::Start()+0x40>
 8009ac0:	a901      	add	r1, sp, #4
 8009ac2:	4818      	ldr	r0, [pc, #96]	; (8009b24 <E131Bridge::Start()+0x70>)
 8009ac4:	f008 ff4c 	bl	8012960 <inet_aton>
 8009ac8:	9b01      	ldr	r3, [sp, #4]
 8009aca:	f240 207e 	movw	r0, #638	; 0x27e
 8009ace:	f043 4356 	orr.w	r3, r3, #3590324224	; 0xd6000000
 8009ad2:	f443 037a 	orr.w	r3, r3, #16384000	; 0xfa0000
 8009ad6:	6223      	str	r3, [r4, #32]
 8009ad8:	f008 ff3e 	bl	8012958 <operator new(unsigned int)>
 8009adc:	61a0      	str	r0, [r4, #24]
 8009ade:	4620      	mov	r0, r4
 8009ae0:	f000 fd8a 	bl	800a5f8 <E131Bridge::FillDataPacket()>
 8009ae4:	f44f 608f 	mov.w	r0, #1144	; 0x478
 8009ae8:	f008 ff36 	bl	8012958 <operator new(unsigned int)>
 8009aec:	61e0      	str	r0, [r4, #28]
 8009aee:	4620      	mov	r0, r4
 8009af0:	f000 fcd0 	bl	800a494 <E131Bridge::FillDiscoveryPacket()>
 8009af4:	f894 359a 	ldrb.w	r3, [r4, #1434]	; 0x59a
 8009af8:	b123      	cbz	r3, 8009b04 <E131Bridge::Start()+0x50>
 8009afa:	6960      	ldr	r0, [r4, #20]
 8009afc:	2100      	movs	r1, #0
 8009afe:	6803      	ldr	r3, [r0, #0]
 8009b00:	689b      	ldr	r3, [r3, #8]
 8009b02:	4798      	blx	r3
 8009b04:	f894 35a6 	ldrb.w	r3, [r4, #1446]	; 0x5a6
 8009b08:	b123      	cbz	r3, 8009b14 <E131Bridge::Start()+0x60>
 8009b0a:	6960      	ldr	r0, [r4, #20]
 8009b0c:	2101      	movs	r1, #1
 8009b0e:	6803      	ldr	r3, [r0, #0]
 8009b10:	689b      	ldr	r3, [r3, #8]
 8009b12:	4798      	blx	r3
 8009b14:	2102      	movs	r1, #2
 8009b16:	4b04      	ldr	r3, [pc, #16]	; (8009b28 <E131Bridge::Start()+0x74>)
 8009b18:	6818      	ldr	r0, [r3, #0]
 8009b1a:	b002      	add	sp, #8
 8009b1c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009b20:	f008 be34 	b.w	801278c <LedBlink::SetMode(ledblink::Mode)>
 8009b24:	08014e60 	stmdaeq	r1, {r5, r6, r9, sl, fp, lr}
 8009b28:	2000a72c 	andcs	sl, r0, ip, lsr #14

08009b2c <E131Bridge::Stop()>:
 8009b2c:	2301      	movs	r3, #1
 8009b2e:	b510      	push	{r4, lr}
 8009b30:	4604      	mov	r4, r0
 8009b32:	f880 34f4 	strb.w	r3, [r0, #1268]	; 0x4f4
 8009b36:	6840      	ldr	r0, [r0, #4]
 8009b38:	b118      	cbz	r0, 8009b42 <E131Bridge::Stop()+0x16>
 8009b3a:	6803      	ldr	r3, [r0, #0]
 8009b3c:	2100      	movs	r1, #0
 8009b3e:	68db      	ldr	r3, [r3, #12]
 8009b40:	4798      	blx	r3
 8009b42:	f7ff ff29 	bl	8009998 <lightset::Data::Get()>
 8009b46:	2300      	movs	r3, #0
 8009b48:	f8c0 3600 	str.w	r3, [r0, #1536]	; 0x600
 8009b4c:	6860      	ldr	r0, [r4, #4]
 8009b4e:	f884 3550 	strb.w	r3, [r4, #1360]	; 0x550
 8009b52:	b118      	cbz	r0, 8009b5c <E131Bridge::Stop()+0x30>
 8009b54:	6803      	ldr	r3, [r0, #0]
 8009b56:	2101      	movs	r1, #1
 8009b58:	68db      	ldr	r3, [r3, #12]
 8009b5a:	4798      	blx	r3
 8009b5c:	f7ff ff1c 	bl	8009998 <lightset::Data::Get()>
 8009b60:	2100      	movs	r1, #0
 8009b62:	f8c0 1c04 	str.w	r1, [r0, #3076]	; 0xc04
 8009b66:	6960      	ldr	r0, [r4, #20]
 8009b68:	f884 1594 	strb.w	r1, [r4, #1428]	; 0x594
 8009b6c:	b168      	cbz	r0, 8009b8a <E131Bridge::Stop()+0x5e>
 8009b6e:	f894 359a 	ldrb.w	r3, [r4, #1434]	; 0x59a
 8009b72:	b113      	cbz	r3, 8009b7a <E131Bridge::Stop()+0x4e>
 8009b74:	6803      	ldr	r3, [r0, #0]
 8009b76:	68db      	ldr	r3, [r3, #12]
 8009b78:	4798      	blx	r3
 8009b7a:	f894 35a6 	ldrb.w	r3, [r4, #1446]	; 0x5a6
 8009b7e:	b123      	cbz	r3, 8009b8a <E131Bridge::Stop()+0x5e>
 8009b80:	6960      	ldr	r0, [r4, #20]
 8009b82:	2101      	movs	r1, #1
 8009b84:	6803      	ldr	r3, [r0, #0]
 8009b86:	68db      	ldr	r3, [r3, #12]
 8009b88:	4798      	blx	r3
 8009b8a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009b8e:	4b02      	ldr	r3, [pc, #8]	; (8009b98 <E131Bridge::Stop()+0x6c>)
 8009b90:	2100      	movs	r1, #0
 8009b92:	6818      	ldr	r0, [r3, #0]
 8009b94:	f008 bdfa 	b.w	801278c <LedBlink::SetMode(ledblink::Mode)>
 8009b98:	2000a72c 	andcs	sl, r0, ip, lsr #14

08009b9c <E131Bridge::SetSourceName(char const*)>:
 8009b9c:	233f      	movs	r3, #63	; 0x3f
 8009b9e:	b510      	push	{r4, lr}
 8009ba0:	f100 0234 	add.w	r2, r0, #52	; 0x34
 8009ba4:	3901      	subs	r1, #1
 8009ba6:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 8009baa:	b92c      	cbnz	r4, 8009bb8 <E131Bridge::SetSourceName(char const*)+0x1c>
 8009bac:	4413      	add	r3, r2
 8009bae:	429a      	cmp	r2, r3
 8009bb0:	d006      	beq.n	8009bc0 <E131Bridge::SetSourceName(char const*)+0x24>
 8009bb2:	f802 4b01 	strb.w	r4, [r2], #1
 8009bb6:	e7fa      	b.n	8009bae <E131Bridge::SetSourceName(char const*)+0x12>
 8009bb8:	3b01      	subs	r3, #1
 8009bba:	f802 4b01 	strb.w	r4, [r2], #1
 8009bbe:	d1f2      	bne.n	8009ba6 <E131Bridge::SetSourceName(char const*)+0xa>
 8009bc0:	2300      	movs	r3, #0
 8009bc2:	f880 3073 	strb.w	r3, [r0, #115]	; 0x73
 8009bc6:	bd10      	pop	{r4, pc}

08009bc8 <E131Bridge::E131Bridge()>:
 8009bc8:	2300      	movs	r3, #0
 8009bca:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8009bce:	b530      	push	{r4, r5, lr}
 8009bd0:	e9c0 2300 	strd	r2, r3, [r0]
 8009bd4:	2201      	movs	r2, #1
 8009bd6:	4604      	mov	r4, r0
 8009bd8:	2564      	movs	r5, #100	; 0x64
 8009bda:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8009bde:	e9c0 3305 	strd	r3, r3, [r0, #20]
 8009be2:	e9c0 3307 	strd	r3, r3, [r0, #28]
 8009be6:	6743      	str	r3, [r0, #116]	; 0x74
 8009be8:	4b1f      	ldr	r3, [pc, #124]	; (8009c68 <E131Bridge::E131Bridge()+0xa0>)
 8009bea:	b093      	sub	sp, #76	; 0x4c
 8009bec:	6018      	str	r0, [r3, #0]
 8009bee:	7202      	strb	r2, [r0, #8]
 8009bf0:	2144      	movs	r1, #68	; 0x44
 8009bf2:	f500 60a2 	add.w	r0, r0, #1296	; 0x510
 8009bf6:	f7ff febd 	bl	8009974 <memset.constprop.0.isra.0>
 8009bfa:	f504 60b3 	add.w	r0, r4, #1432	; 0x598
 8009bfe:	210c      	movs	r1, #12
 8009c00:	f7ff feb8 	bl	8009974 <memset.constprop.0.isra.0>
 8009c04:	f884 55a1 	strb.w	r5, [r4, #1441]	; 0x5a1
 8009c08:	f204 5054 	addw	r0, r4, #1364	; 0x554
 8009c0c:	2144      	movs	r1, #68	; 0x44
 8009c0e:	f7ff feb1 	bl	8009974 <memset.constprop.0.isra.0>
 8009c12:	f204 50a4 	addw	r0, r4, #1444	; 0x5a4
 8009c16:	210c      	movs	r1, #12
 8009c18:	f7ff feac 	bl	8009974 <memset.constprop.0.isra.0>
 8009c1c:	f884 55ad 	strb.w	r5, [r4, #1453]	; 0x5ad
 8009c20:	4d12      	ldr	r5, [pc, #72]	; (8009c6c <E131Bridge::E131Bridge()+0xa4>)
 8009c22:	f204 40f4 	addw	r0, r4, #1268	; 0x4f4
 8009c26:	211c      	movs	r1, #28
 8009c28:	f7ff fea4 	bl	8009974 <memset.constprop.0.isra.0>
 8009c2c:	682b      	ldr	r3, [r5, #0]
 8009c2e:	f884 250c 	strb.w	r2, [r4, #1292]	; 0x50c
 8009c32:	4a0f      	ldr	r2, [pc, #60]	; (8009c70 <E131Bridge::E131Bridge()+0xa8>)
 8009c34:	331c      	adds	r3, #28
 8009c36:	9200      	str	r2, [sp, #0]
 8009c38:	2140      	movs	r1, #64	; 0x40
 8009c3a:	4a0e      	ldr	r2, [pc, #56]	; (8009c74 <E131Bridge::E131Bridge()+0xac>)
 8009c3c:	a802      	add	r0, sp, #8
 8009c3e:	f7ff fce5 	bl	800960c <snprintf>
 8009c42:	4620      	mov	r0, r4
 8009c44:	a902      	add	r1, sp, #8
 8009c46:	f7ff ffa9 	bl	8009b9c <E131Bridge::SetSourceName(char const*)>
 8009c4a:	f44f 51ae 	mov.w	r1, #5568	; 0x15c0
 8009c4e:	6828      	ldr	r0, [r5, #0]
 8009c50:	f006 fa5a 	bl	8010108 <Network::Begin(unsigned short)>
 8009c54:	4621      	mov	r1, r4
 8009c56:	4b08      	ldr	r3, [pc, #32]	; (8009c78 <E131Bridge::E131Bridge()+0xb0>)
 8009c58:	f841 0b24 	str.w	r0, [r1], #36
 8009c5c:	6818      	ldr	r0, [r3, #0]
 8009c5e:	f008 fe1d 	bl	801289c <Hardware::GetUuid(unsigned char*)>
 8009c62:	4620      	mov	r0, r4
 8009c64:	b013      	add	sp, #76	; 0x4c
 8009c66:	bd30      	pop	{r4, r5, pc}
 8009c68:	20000d14 	andcs	r0, r0, r4, lsl sp
 8009c6c:	2000a008 	andcs	sl, r0, r8
 8009c70:	08014e75 	stmdaeq	r1, {r0, r2, r4, r5, r6, r9, sl, fp, lr}
 8009c74:	08014e6c 	stmdaeq	r1, {r2, r3, r5, r6, r9, sl, fp, lr}
 8009c78:	2000a730 	andcs	sl, r0, r0, lsr r7

08009c7c <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>:
 8009c7c:	b538      	push	{r3, r4, r5, lr}
 8009c7e:	4603      	mov	r3, r0
 8009c80:	4610      	mov	r0, r2
 8009c82:	b129      	cbz	r1, 8009c90 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0x14>
 8009c84:	f8b3 2510 	ldrh.w	r2, [r3, #1296]	; 0x510
 8009c88:	4282      	cmp	r2, r0
 8009c8a:	d011      	beq.n	8009cb0 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0x34>
 8009c8c:	2901      	cmp	r1, #1
 8009c8e:	d003      	beq.n	8009c98 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0x1c>
 8009c90:	f8b3 2554 	ldrh.w	r2, [r3, #1364]	; 0x554
 8009c94:	4282      	cmp	r2, r0
 8009c96:	d00b      	beq.n	8009cb0 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0x34>
 8009c98:	4a06      	ldr	r2, [pc, #24]	; (8009cb4 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0x38>)
 8009c9a:	681d      	ldr	r5, [r3, #0]
 8009c9c:	6814      	ldr	r4, [r2, #0]
 8009c9e:	f7ff fe43 	bl	8009928 <e131::universe_to_multicast_ip(unsigned short)>
 8009ca2:	4629      	mov	r1, r5
 8009ca4:	4602      	mov	r2, r0
 8009ca6:	4620      	mov	r0, r4
 8009ca8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8009cac:	f006 ba40 	b.w	8010130 <Network::LeaveGroup(int, unsigned int)>
 8009cb0:	bd38      	pop	{r3, r4, r5, pc}
 8009cb2:	bf00      	nop
 8009cb4:	2000a008 	andcs	sl, r0, r8

08009cb8 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)>:
 8009cb8:	b570      	push	{r4, r5, r6, lr}
 8009cba:	4604      	mov	r4, r0
 8009cbc:	461d      	mov	r5, r3
 8009cbe:	b1c1      	cbz	r1, 8009cf2 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x3a>
 8009cc0:	f8b0 2506 	ldrh.w	r2, [r0, #1286]	; 0x506
 8009cc4:	f200 5606 	addw	r6, r0, #1286	; 0x506
 8009cc8:	b12a      	cbz	r2, 8009cd6 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x1e>
 8009cca:	42aa      	cmp	r2, r5
 8009ccc:	d017      	beq.n	8009cfe <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x46>
 8009cce:	2102      	movs	r1, #2
 8009cd0:	4620      	mov	r0, r4
 8009cd2:	f7ff ffd3 	bl	8009c7c <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>
 8009cd6:	4b0a      	ldr	r3, [pc, #40]	; (8009d00 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x48>)
 8009cd8:	8035      	strh	r5, [r6, #0]
 8009cda:	4628      	mov	r0, r5
 8009cdc:	6826      	ldr	r6, [r4, #0]
 8009cde:	681c      	ldr	r4, [r3, #0]
 8009ce0:	f7ff fe22 	bl	8009928 <e131::universe_to_multicast_ip(unsigned short)>
 8009ce4:	4631      	mov	r1, r6
 8009ce6:	4602      	mov	r2, r0
 8009ce8:	4620      	mov	r0, r4
 8009cea:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009cee:	f006 ba1c 	b.w	801012a <Network::JoinGroup(int, unsigned int)>
 8009cf2:	b122      	cbz	r2, 8009cfe <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x46>
 8009cf4:	f8b0 2508 	ldrh.w	r2, [r0, #1288]	; 0x508
 8009cf8:	f500 66a1 	add.w	r6, r0, #1288	; 0x508
 8009cfc:	e7e4      	b.n	8009cc8 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x10>
 8009cfe:	bd70      	pop	{r4, r5, r6, pc}
 8009d00:	2000a008 	andcs	sl, r0, r8

08009d04 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)>:
 8009d04:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009d08:	4604      	mov	r4, r0
 8009d0a:	460d      	mov	r5, r1
 8009d0c:	461e      	mov	r6, r3
 8009d0e:	bb02      	cbnz	r2, 8009d52 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x4e>
 8009d10:	2901      	cmp	r1, #1
 8009d12:	d843      	bhi.n	8009d9c <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x98>
 8009d14:	230c      	movs	r3, #12
 8009d16:	fb03 0301 	mla	r3, r3, r1, r0
 8009d1a:	f893 259a 	ldrb.w	r2, [r3, #1434]	; 0x59a
 8009d1e:	b12a      	cbz	r2, 8009d2c <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x28>
 8009d20:	f8b3 3598 	ldrh.w	r3, [r3, #1432]	; 0x598
 8009d24:	42b3      	cmp	r3, r6
 8009d26:	d109      	bne.n	8009d3c <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x38>
 8009d28:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009d2c:	f890 250a 	ldrb.w	r2, [r0, #1290]	; 0x50a
 8009d30:	3201      	adds	r2, #1
 8009d32:	f880 250a 	strb.w	r2, [r0, #1290]	; 0x50a
 8009d36:	2201      	movs	r2, #1
 8009d38:	f883 259a 	strb.w	r2, [r3, #1434]	; 0x59a
 8009d3c:	230c      	movs	r3, #12
 8009d3e:	fb03 4405 	mla	r4, r3, r5, r4
 8009d42:	4630      	mov	r0, r6
 8009d44:	f8a4 6598 	strh.w	r6, [r4, #1432]	; 0x598
 8009d48:	f7ff fdee 	bl	8009928 <e131::universe_to_multicast_ip(unsigned short)>
 8009d4c:	f8c4 059c 	str.w	r0, [r4, #1436]	; 0x59c
 8009d50:	e7ea      	b.n	8009d28 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 8009d52:	2a02      	cmp	r2, #2
 8009d54:	d122      	bne.n	8009d9c <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x98>
 8009d56:	2901      	cmp	r1, #1
 8009d58:	d8e6      	bhi.n	8009d28 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 8009d5a:	2344      	movs	r3, #68	; 0x44
 8009d5c:	fb03 0301 	mla	r3, r3, r1, r0
 8009d60:	f893 2512 	ldrb.w	r2, [r3, #1298]	; 0x512
 8009d64:	b152      	cbz	r2, 8009d7c <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x78>
 8009d66:	2200      	movs	r2, #0
 8009d68:	f883 2512 	strb.w	r2, [r3, #1298]	; 0x512
 8009d6c:	f890 350b 	ldrb.w	r3, [r0, #1291]	; 0x50b
 8009d70:	4632      	mov	r2, r6
 8009d72:	3b01      	subs	r3, #1
 8009d74:	f880 350b 	strb.w	r3, [r0, #1291]	; 0x50b
 8009d78:	f7ff ff80 	bl	8009c7c <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>
 8009d7c:	230c      	movs	r3, #12
 8009d7e:	fb03 4505 	mla	r5, r3, r5, r4
 8009d82:	f895 359a 	ldrb.w	r3, [r5, #1434]	; 0x59a
 8009d86:	2b00      	cmp	r3, #0
 8009d88:	d0ce      	beq.n	8009d28 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 8009d8a:	2300      	movs	r3, #0
 8009d8c:	f885 359a 	strb.w	r3, [r5, #1434]	; 0x59a
 8009d90:	f894 350a 	ldrb.w	r3, [r4, #1290]	; 0x50a
 8009d94:	3b01      	subs	r3, #1
 8009d96:	f884 350a 	strb.w	r3, [r4, #1290]	; 0x50a
 8009d9a:	e7c5      	b.n	8009d28 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 8009d9c:	2344      	movs	r3, #68	; 0x44
 8009d9e:	fb03 4305 	mla	r3, r3, r5, r4
 8009da2:	f893 2512 	ldrb.w	r2, [r3, #1298]	; 0x512
 8009da6:	b1d2      	cbz	r2, 8009dde <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0xda>
 8009da8:	f8b3 3510 	ldrh.w	r3, [r3, #1296]	; 0x510
 8009dac:	42b3      	cmp	r3, r6
 8009dae:	d0bb      	beq.n	8009d28 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 8009db0:	4632      	mov	r2, r6
 8009db2:	4629      	mov	r1, r5
 8009db4:	4620      	mov	r0, r4
 8009db6:	f7ff ff61 	bl	8009c7c <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>
 8009dba:	4b0d      	ldr	r3, [pc, #52]	; (8009df0 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0xec>)
 8009dbc:	4630      	mov	r0, r6
 8009dbe:	681f      	ldr	r7, [r3, #0]
 8009dc0:	f8d4 8000 	ldr.w	r8, [r4]
 8009dc4:	f7ff fdb0 	bl	8009928 <e131::universe_to_multicast_ip(unsigned short)>
 8009dc8:	4641      	mov	r1, r8
 8009dca:	4602      	mov	r2, r0
 8009dcc:	4638      	mov	r0, r7
 8009dce:	f006 f9ac 	bl	801012a <Network::JoinGroup(int, unsigned int)>
 8009dd2:	2344      	movs	r3, #68	; 0x44
 8009dd4:	fb03 4305 	mla	r3, r3, r5, r4
 8009dd8:	f8a3 6510 	strh.w	r6, [r3, #1296]	; 0x510
 8009ddc:	e7a4      	b.n	8009d28 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 8009dde:	f894 250b 	ldrb.w	r2, [r4, #1291]	; 0x50b
 8009de2:	3201      	adds	r2, #1
 8009de4:	f884 250b 	strb.w	r2, [r4, #1291]	; 0x50b
 8009de8:	2201      	movs	r2, #1
 8009dea:	f883 2512 	strb.w	r2, [r3, #1298]	; 0x512
 8009dee:	e7e4      	b.n	8009dba <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0xb6>
 8009df0:	2000a008 	andcs	sl, r0, r8

08009df4 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>:
 8009df4:	b953      	cbnz	r3, 8009e0c <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const+0x18>
 8009df6:	2901      	cmp	r1, #1
 8009df8:	d811      	bhi.n	8009e1e <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const+0x2a>
 8009dfa:	230c      	movs	r3, #12
 8009dfc:	fb03 0001 	mla	r0, r3, r1, r0
 8009e00:	f8b0 3598 	ldrh.w	r3, [r0, #1432]	; 0x598
 8009e04:	f890 059a 	ldrb.w	r0, [r0, #1434]	; 0x59a
 8009e08:	8013      	strh	r3, [r2, #0]
 8009e0a:	4770      	bx	lr
 8009e0c:	2344      	movs	r3, #68	; 0x44
 8009e0e:	fb03 0001 	mla	r0, r3, r1, r0
 8009e12:	f8b0 3510 	ldrh.w	r3, [r0, #1296]	; 0x510
 8009e16:	f890 0512 	ldrb.w	r0, [r0, #1298]	; 0x512
 8009e1a:	8013      	strh	r3, [r2, #0]
 8009e1c:	4770      	bx	lr
 8009e1e:	4618      	mov	r0, r3
 8009e20:	4770      	bx	lr

08009e22 <E131Bridge::UpdateMergeStatus(unsigned int)>:
 8009e22:	f890 34f5 	ldrb.w	r3, [r0, #1269]	; 0x4f5
 8009e26:	b923      	cbnz	r3, 8009e32 <E131Bridge::UpdateMergeStatus(unsigned int)+0x10>
 8009e28:	2301      	movs	r3, #1
 8009e2a:	f880 34f5 	strb.w	r3, [r0, #1269]	; 0x4f5
 8009e2e:	f880 34f8 	strb.w	r3, [r0, #1272]	; 0x4f8
 8009e32:	2344      	movs	r3, #68	; 0x44
 8009e34:	fb03 0001 	mla	r0, r3, r1, r0
 8009e38:	2301      	movs	r3, #1
 8009e3a:	f880 3551 	strb.w	r3, [r0, #1361]	; 0x551
 8009e3e:	4770      	bx	lr

08009e40 <E131Bridge::CheckMergeTimeouts(unsigned int)>:
 8009e40:	4602      	mov	r2, r0
 8009e42:	2044      	movs	r0, #68	; 0x44
 8009e44:	4348      	muls	r0, r1
 8009e46:	b570      	push	{r4, r5, r6, lr}
 8009e48:	1815      	adds	r5, r2, r0
 8009e4a:	460c      	mov	r4, r1
 8009e4c:	68d3      	ldr	r3, [r2, #12]
 8009e4e:	f8d5 1514 	ldr.w	r1, [r5, #1300]	; 0x514
 8009e52:	1a5b      	subs	r3, r3, r1
 8009e54:	f242 7110 	movw	r1, #10000	; 0x2710
 8009e58:	428b      	cmp	r3, r1
 8009e5a:	d90a      	bls.n	8009e72 <E131Bridge::CheckMergeTimeouts(unsigned int)+0x32>
 8009e5c:	2600      	movs	r6, #0
 8009e5e:	f200 501c 	addw	r0, r0, #1308	; 0x51c
 8009e62:	2110      	movs	r1, #16
 8009e64:	f8c5 6518 	str.w	r6, [r5, #1304]	; 0x518
 8009e68:	4410      	add	r0, r2
 8009e6a:	f7ff fd83 	bl	8009974 <memset.constprop.0.isra.0>
 8009e6e:	f885 6551 	strb.w	r6, [r5, #1361]	; 0x551
 8009e72:	2344      	movs	r3, #68	; 0x44
 8009e74:	435c      	muls	r4, r3
 8009e76:	1915      	adds	r5, r2, r4
 8009e78:	f8d5 1530 	ldr.w	r1, [r5, #1328]	; 0x530
 8009e7c:	68d3      	ldr	r3, [r2, #12]
 8009e7e:	1a5b      	subs	r3, r3, r1
 8009e80:	f242 7110 	movw	r1, #10000	; 0x2710
 8009e84:	428b      	cmp	r3, r1
 8009e86:	d90a      	bls.n	8009e9e <E131Bridge::CheckMergeTimeouts(unsigned int)+0x5e>
 8009e88:	2600      	movs	r6, #0
 8009e8a:	f504 64a7 	add.w	r4, r4, #1336	; 0x538
 8009e8e:	2110      	movs	r1, #16
 8009e90:	f8c5 6534 	str.w	r6, [r5, #1332]	; 0x534
 8009e94:	1910      	adds	r0, r2, r4
 8009e96:	f7ff fd6d 	bl	8009974 <memset.constprop.0.isra.0>
 8009e9a:	f885 6551 	strb.w	r6, [r5, #1361]	; 0x551
 8009e9e:	f892 3551 	ldrb.w	r3, [r2, #1361]	; 0x551
 8009ea2:	b93b      	cbnz	r3, 8009eb4 <E131Bridge::CheckMergeTimeouts(unsigned int)+0x74>
 8009ea4:	f892 3595 	ldrb.w	r3, [r2, #1429]	; 0x595
 8009ea8:	b923      	cbnz	r3, 8009eb4 <E131Bridge::CheckMergeTimeouts(unsigned int)+0x74>
 8009eaa:	2101      	movs	r1, #1
 8009eac:	f882 34f5 	strb.w	r3, [r2, #1269]	; 0x4f5
 8009eb0:	f882 14f8 	strb.w	r1, [r2, #1272]	; 0x4f8
 8009eb4:	bd70      	pop	{r4, r5, r6, pc}

08009eb6 <E131Bridge::IsPriorityTimeOut(unsigned int) const>:
 8009eb6:	2244      	movs	r2, #68	; 0x44
 8009eb8:	fb02 0101 	mla	r1, r2, r1, r0
 8009ebc:	68c3      	ldr	r3, [r0, #12]
 8009ebe:	b510      	push	{r4, lr}
 8009ec0:	f8d1 2530 	ldr.w	r2, [r1, #1328]	; 0x530
 8009ec4:	f8d1 4518 	ldr.w	r4, [r1, #1304]	; 0x518
 8009ec8:	f8d1 0534 	ldr.w	r0, [r1, #1332]	; 0x534
 8009ecc:	1a9a      	subs	r2, r3, r2
 8009ece:	b184      	cbz	r4, 8009ef2 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x3c>
 8009ed0:	f8d1 1514 	ldr.w	r1, [r1, #1300]	; 0x514
 8009ed4:	1a5b      	subs	r3, r3, r1
 8009ed6:	b128      	cbz	r0, 8009ee4 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x2e>
 8009ed8:	f242 700f 	movw	r0, #9999	; 0x270f
 8009edc:	4283      	cmp	r3, r0
 8009ede:	d90d      	bls.n	8009efc <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x46>
 8009ee0:	4282      	cmp	r2, r0
 8009ee2:	e002      	b.n	8009eea <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x34>
 8009ee4:	f242 7010 	movw	r0, #10000	; 0x2710
 8009ee8:	4283      	cmp	r3, r0
 8009eea:	bf94      	ite	ls
 8009eec:	2000      	movls	r0, #0
 8009eee:	2001      	movhi	r0, #1
 8009ef0:	bd10      	pop	{r4, pc}
 8009ef2:	2800      	cmp	r0, #0
 8009ef4:	d0fc      	beq.n	8009ef0 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x3a>
 8009ef6:	f242 7010 	movw	r0, #10000	; 0x2710
 8009efa:	e7f1      	b.n	8009ee0 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x2a>
 8009efc:	2000      	movs	r0, #0
 8009efe:	e7f7      	b.n	8009ef0 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x3a>

08009f00 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const>:
 8009f00:	684a      	ldr	r2, [r1, #4]
 8009f02:	6f83      	ldr	r3, [r0, #120]	; 0x78
 8009f04:	b510      	push	{r4, lr}
 8009f06:	429a      	cmp	r2, r3
 8009f08:	d10d      	bne.n	8009f26 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x26>
 8009f0a:	f100 0392 	add.w	r3, r0, #146	; 0x92
 8009f0e:	3108      	adds	r1, #8
 8009f10:	30a2      	adds	r0, #162	; 0xa2
 8009f12:	4283      	cmp	r3, r0
 8009f14:	d101      	bne.n	8009f1a <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x1a>
 8009f16:	2001      	movs	r0, #1
 8009f18:	bd10      	pop	{r4, pc}
 8009f1a:	f811 4b01 	ldrb.w	r4, [r1], #1
 8009f1e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8009f22:	4294      	cmp	r4, r2
 8009f24:	d0f5      	beq.n	8009f12 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x12>
 8009f26:	2000      	movs	r0, #0
 8009f28:	e7f6      	b.n	8009f18 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x18>
	...

08009f2c <E131Bridge::SetNetworkDataLossCondition(bool, bool)>:
 8009f2c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009f30:	2301      	movs	r3, #1
 8009f32:	4605      	mov	r5, r0
 8009f34:	4690      	mov	r8, r2
 8009f36:	460f      	mov	r7, r1
 8009f38:	f880 34f8 	strb.w	r3, [r0, #1272]	; 0x4f8
 8009f3c:	2900      	cmp	r1, #0
 8009f3e:	d03c      	beq.n	8009fba <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x8e>
 8009f40:	2a00      	cmp	r2, #0
 8009f42:	d03a      	beq.n	8009fba <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x8e>
 8009f44:	2700      	movs	r7, #0
 8009f46:	f240 6804 	movw	r8, #1540	; 0x604
 8009f4a:	463e      	mov	r6, r7
 8009f4c:	f8c0 34f4 	str.w	r3, [r0, #1268]	; 0x4f4
 8009f50:	f880 350c 	strb.w	r3, [r0, #1292]	; 0x50c
 8009f54:	f200 541c 	addw	r4, r0, #1308	; 0x51c
 8009f58:	f894 3036 	ldrb.w	r3, [r4, #54]	; 0x36
 8009f5c:	b1e3      	cbz	r3, 8009f98 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x6c>
 8009f5e:	6868      	ldr	r0, [r5, #4]
 8009f60:	4639      	mov	r1, r7
 8009f62:	6803      	ldr	r3, [r0, #0]
 8009f64:	68db      	ldr	r3, [r3, #12]
 8009f66:	4798      	blx	r3
 8009f68:	2110      	movs	r1, #16
 8009f6a:	4620      	mov	r0, r4
 8009f6c:	f844 6c04 	str.w	r6, [r4, #-4]
 8009f70:	f7ff fd00 	bl	8009974 <memset.constprop.0.isra.0>
 8009f74:	2110      	movs	r1, #16
 8009f76:	f104 001c 	add.w	r0, r4, #28
 8009f7a:	61a6      	str	r6, [r4, #24]
 8009f7c:	f7ff fcfa 	bl	8009974 <memset.constprop.0.isra.0>
 8009f80:	f7ff fd0a 	bl	8009998 <lightset::Data::Get()>
 8009f84:	fb08 0007 	mla	r0, r8, r7, r0
 8009f88:	f8c0 6600 	str.w	r6, [r0, #1536]	; 0x600
 8009f8c:	f884 6034 	strb.w	r6, [r4, #52]	; 0x34
 8009f90:	f884 6036 	strb.w	r6, [r4, #54]	; 0x36
 8009f94:	f884 6035 	strb.w	r6, [r4, #53]	; 0x35
 8009f98:	3444      	adds	r4, #68	; 0x44
 8009f9a:	b167      	cbz	r7, 8009fb6 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x8a>
 8009f9c:	4b25      	ldr	r3, [pc, #148]	; (800a034 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x108>)
 8009f9e:	2102      	movs	r1, #2
 8009fa0:	6818      	ldr	r0, [r3, #0]
 8009fa2:	f008 fbf3 	bl	801278c <LedBlink::SetMode(ledblink::Mode)>
 8009fa6:	f895 350d 	ldrb.w	r3, [r5, #1293]	; 0x50d
 8009faa:	f023 0302 	bic.w	r3, r3, #2
 8009fae:	f885 350d 	strb.w	r3, [r5, #1293]	; 0x50d
 8009fb2:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009fb6:	2701      	movs	r7, #1
 8009fb8:	e7ce      	b.n	8009f58 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x2c>
 8009fba:	2600      	movs	r6, #0
 8009fbc:	f240 6b04 	movw	fp, #1540	; 0x604
 8009fc0:	46b1      	mov	r9, r6
 8009fc2:	f505 64a7 	add.w	r4, r5, #1336	; 0x538
 8009fc6:	7ea3      	ldrb	r3, [r4, #26]
 8009fc8:	b373      	cbz	r3, 800a028 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xfc>
 8009fca:	b15f      	cbz	r7, 8009fe4 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xb8>
 8009fcc:	f854 3c20 	ldr.w	r3, [r4, #-32]
 8009fd0:	b143      	cbz	r3, 8009fe4 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xb8>
 8009fd2:	2110      	movs	r1, #16
 8009fd4:	f844 9c20 	str.w	r9, [r4, #-32]
 8009fd8:	f1a4 001c 	sub.w	r0, r4, #28
 8009fdc:	f7ff fcca 	bl	8009974 <memset.constprop.0.isra.0>
 8009fe0:	f884 9019 	strb.w	r9, [r4, #25]
 8009fe4:	f1b8 0f00 	cmp.w	r8, #0
 8009fe8:	d00a      	beq.n	800a000 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xd4>
 8009fea:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8009fee:	b13b      	cbz	r3, 800a000 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xd4>
 8009ff0:	2110      	movs	r1, #16
 8009ff2:	4620      	mov	r0, r4
 8009ff4:	f844 9c04 	str.w	r9, [r4, #-4]
 8009ff8:	f7ff fcbc 	bl	8009974 <memset.constprop.0.isra.0>
 8009ffc:	f884 9019 	strb.w	r9, [r4, #25]
 800a000:	f895 a4f5 	ldrb.w	sl, [r5, #1269]	; 0x4f5
 800a004:	f1ba 0f00 	cmp.w	sl, #0
 800a008:	d10e      	bne.n	800a028 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xfc>
 800a00a:	6868      	ldr	r0, [r5, #4]
 800a00c:	4631      	mov	r1, r6
 800a00e:	6803      	ldr	r3, [r0, #0]
 800a010:	68db      	ldr	r3, [r3, #12]
 800a012:	4798      	blx	r3
 800a014:	f7ff fcc0 	bl	8009998 <lightset::Data::Get()>
 800a018:	fb0b 0006 	mla	r0, fp, r6, r0
 800a01c:	f8c0 a600 	str.w	sl, [r0, #1536]	; 0x600
 800a020:	f884 a018 	strb.w	sl, [r4, #24]
 800a024:	f884 a01a 	strb.w	sl, [r4, #26]
 800a028:	3444      	adds	r4, #68	; 0x44
 800a02a:	2e00      	cmp	r6, #0
 800a02c:	d1b6      	bne.n	8009f9c <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x70>
 800a02e:	2601      	movs	r6, #1
 800a030:	e7c9      	b.n	8009fc6 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x9a>
 800a032:	bf00      	nop
 800a034:	2000a72c 	andcs	sl, r0, ip, lsr #14

0800a038 <E131Bridge::HandleDmx()>:
 800a038:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a03c:	4604      	mov	r4, r0
 800a03e:	2600      	movs	r6, #0
 800a040:	f8b0 70f7 	ldrh.w	r7, [r0, #247]	; 0xf7
 800a044:	f100 09fa 	add.w	r9, r0, #250	; 0xfa
 800a048:	ba7f      	rev16	r7, r7
 800a04a:	b2bf      	uxth	r7, r7
 800a04c:	3f01      	subs	r7, #1
 800a04e:	f200 551c 	addw	r5, r0, #1308	; 0x51c
 800a052:	f815 3c0a 	ldrb.w	r3, [r5, #-10]
 800a056:	b353      	cbz	r3, 800a0ae <E131Bridge::HandleDmx()+0x76>
 800a058:	f835 3c0c 	ldrh.w	r3, [r5, #-12]
 800a05c:	f8b4 20ed 	ldrh.w	r2, [r4, #237]	; 0xed
 800a060:	ba5b      	rev16	r3, r3
 800a062:	b29b      	uxth	r3, r3
 800a064:	429a      	cmp	r2, r3
 800a066:	d122      	bne.n	800a0ae <E131Bridge::HandleDmx()+0x76>
 800a068:	f855 3c04 	ldr.w	r3, [r5, #-4]
 800a06c:	f1a5 0108 	sub.w	r1, r5, #8
 800a070:	4620      	mov	r0, r4
 800a072:	9300      	str	r3, [sp, #0]
 800a074:	f7ff ff44 	bl	8009f00 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const>
 800a078:	f105 0114 	add.w	r1, r5, #20
 800a07c:	4682      	mov	sl, r0
 800a07e:	4620      	mov	r0, r4
 800a080:	f7ff ff3e 	bl	8009f00 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const>
 800a084:	f8d5 b018 	ldr.w	fp, [r5, #24]
 800a088:	4680      	mov	r8, r0
 800a08a:	f1ba 0f00 	cmp.w	sl, #0
 800a08e:	d014      	beq.n	800a0ba <E131Bridge::HandleDmx()+0x82>
 800a090:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800a094:	7c2a      	ldrb	r2, [r5, #16]
 800a096:	742b      	strb	r3, [r5, #16]
 800a098:	3313      	adds	r3, #19
 800a09a:	1a9b      	subs	r3, r3, r2
 800a09c:	b2db      	uxtb	r3, r3
 800a09e:	2b13      	cmp	r3, #19
 800a0a0:	d905      	bls.n	800a0ae <E131Bridge::HandleDmx()+0x76>
 800a0a2:	f994 20ec 	ldrsb.w	r2, [r4, #236]	; 0xec
 800a0a6:	f894 30ec 	ldrb.w	r3, [r4, #236]	; 0xec
 800a0aa:	2a00      	cmp	r2, #0
 800a0ac:	da0e      	bge.n	800a0cc <E131Bridge::HandleDmx()+0x94>
 800a0ae:	3544      	adds	r5, #68	; 0x44
 800a0b0:	2e00      	cmp	r6, #0
 800a0b2:	f040 812c 	bne.w	800a30e <E131Bridge::HandleDmx()+0x2d6>
 800a0b6:	2601      	movs	r6, #1
 800a0b8:	e7cb      	b.n	800a052 <E131Bridge::HandleDmx()+0x1a>
 800a0ba:	2800      	cmp	r0, #0
 800a0bc:	d0f1      	beq.n	800a0a2 <E131Bridge::HandleDmx()+0x6a>
 800a0be:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800a0c2:	f895 202c 	ldrb.w	r2, [r5, #44]	; 0x2c
 800a0c6:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
 800a0ca:	e7e5      	b.n	800a098 <E131Bridge::HandleDmx()+0x60>
 800a0cc:	065a      	lsls	r2, r3, #25
 800a0ce:	d50b      	bpl.n	800a0e8 <E131Bridge::HandleDmx()+0xb0>
 800a0d0:	f1ba 0f00 	cmp.w	sl, #0
 800a0d4:	d102      	bne.n	800a0dc <E131Bridge::HandleDmx()+0xa4>
 800a0d6:	f1b8 0f00 	cmp.w	r8, #0
 800a0da:	d0e8      	beq.n	800a0ae <E131Bridge::HandleDmx()+0x76>
 800a0dc:	4642      	mov	r2, r8
 800a0de:	4651      	mov	r1, sl
 800a0e0:	4620      	mov	r0, r4
 800a0e2:	f7ff ff23 	bl	8009f2c <E131Bridge::SetNetworkDataLossCondition(bool, bool)>
 800a0e6:	e7e2      	b.n	800a0ae <E131Bridge::HandleDmx()+0x76>
 800a0e8:	f894 34f5 	ldrb.w	r3, [r4, #1269]	; 0x4f5
 800a0ec:	b133      	cbz	r3, 800a0fc <E131Bridge::HandleDmx()+0xc4>
 800a0ee:	f894 34fa 	ldrb.w	r3, [r4, #1274]	; 0x4fa
 800a0f2:	b91b      	cbnz	r3, 800a0fc <E131Bridge::HandleDmx()+0xc4>
 800a0f4:	4631      	mov	r1, r6
 800a0f6:	4620      	mov	r0, r4
 800a0f8:	f7ff fea2 	bl	8009e40 <E131Bridge::CheckMergeTimeouts(unsigned int)>
 800a0fc:	f894 30e8 	ldrb.w	r3, [r4, #232]	; 0xe8
 800a100:	f894 250c 	ldrb.w	r2, [r4, #1292]	; 0x50c
 800a104:	4293      	cmp	r3, r2
 800a106:	d259      	bcs.n	800a1bc <E131Bridge::HandleDmx()+0x184>
 800a108:	4631      	mov	r1, r6
 800a10a:	4620      	mov	r0, r4
 800a10c:	9301      	str	r3, [sp, #4]
 800a10e:	f7ff fed2 	bl	8009eb6 <E131Bridge::IsPriorityTimeOut(unsigned int) const>
 800a112:	2800      	cmp	r0, #0
 800a114:	d0cb      	beq.n	800a0ae <E131Bridge::HandleDmx()+0x76>
 800a116:	9b01      	ldr	r3, [sp, #4]
 800a118:	f884 350c 	strb.w	r3, [r4, #1292]	; 0x50c
 800a11c:	9b00      	ldr	r3, [sp, #0]
 800a11e:	2b00      	cmp	r3, #0
 800a120:	d154      	bne.n	800a1cc <E131Bridge::HandleDmx()+0x194>
 800a122:	f1bb 0f00 	cmp.w	fp, #0
 800a126:	d15c      	bne.n	800a1e2 <E131Bridge::HandleDmx()+0x1aa>
 800a128:	6fa3      	ldr	r3, [r4, #120]	; 0x78
 800a12a:	2210      	movs	r2, #16
 800a12c:	f845 3c04 	str.w	r3, [r5, #-4]
 800a130:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800a134:	4628      	mov	r0, r5
 800a136:	742b      	strb	r3, [r5, #16]
 800a138:	f104 0192 	add.w	r1, r4, #146	; 0x92
 800a13c:	f7ff fc22 	bl	8009984 <memcpy.isra.0>
 800a140:	68e3      	ldr	r3, [r4, #12]
 800a142:	463a      	mov	r2, r7
 800a144:	4649      	mov	r1, r9
 800a146:	4630      	mov	r0, r6
 800a148:	f845 3c08 	str.w	r3, [r5, #-8]
 800a14c:	f7ff fc30 	bl	80099b0 <lightset::Data::SetSourceA(unsigned int, unsigned char const*, unsigned int)>
 800a150:	f894 30ec 	ldrb.w	r3, [r4, #236]	; 0xec
 800a154:	069b      	lsls	r3, r3, #26
 800a156:	f100 80ad 	bmi.w	800a2b4 <E131Bridge::HandleDmx()+0x27c>
 800a15a:	f8b4 30e9 	ldrh.w	r3, [r4, #233]	; 0xe9
 800a15e:	b29a      	uxth	r2, r3
 800a160:	2a00      	cmp	r2, #0
 800a162:	f000 80ab 	beq.w	800a2bc <E131Bridge::HandleDmx()+0x284>
 800a166:	f894 24f7 	ldrb.w	r2, [r4, #1271]	; 0x4f7
 800a16a:	2a00      	cmp	r2, #0
 800a16c:	f040 80a6 	bne.w	800a2bc <E131Bridge::HandleDmx()+0x284>
 800a170:	ba5b      	rev16	r3, r3
 800a172:	b29b      	uxth	r3, r3
 800a174:	f1ba 0f00 	cmp.w	sl, #0
 800a178:	f040 8099 	bne.w	800a2ae <E131Bridge::HandleDmx()+0x276>
 800a17c:	f1b8 0f00 	cmp.w	r8, #0
 800a180:	f040 8095 	bne.w	800a2ae <E131Bridge::HandleDmx()+0x276>
 800a184:	69aa      	ldr	r2, [r5, #24]
 800a186:	f855 1c04 	ldr.w	r1, [r5, #-4]
 800a18a:	3a00      	subs	r2, #0
 800a18c:	bf18      	it	ne
 800a18e:	2201      	movne	r2, #1
 800a190:	3900      	subs	r1, #0
 800a192:	bf18      	it	ne
 800a194:	2101      	movne	r1, #1
 800a196:	4620      	mov	r0, r4
 800a198:	f7ff fd8e 	bl	8009cb8 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)>
 800a19c:	f240 1301 	movw	r3, #257	; 0x101
 800a1a0:	f8a4 34f6 	strh.w	r3, [r4, #1270]	; 0x4f6
 800a1a4:	f894 34fb 	ldrb.w	r3, [r4, #1275]	; 0x4fb
 800a1a8:	2b00      	cmp	r3, #0
 800a1aa:	f040 808c 	bne.w	800a2c6 <E131Bridge::HandleDmx()+0x28e>
 800a1ae:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800a1b2:	f043 0302 	orr.w	r3, r3, #2
 800a1b6:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 800a1ba:	e778      	b.n	800a0ae <E131Bridge::HandleDmx()+0x76>
 800a1bc:	d9ae      	bls.n	800a11c <E131Bridge::HandleDmx()+0xe4>
 800a1be:	2200      	movs	r2, #0
 800a1c0:	f845 2c04 	str.w	r2, [r5, #-4]
 800a1c4:	61aa      	str	r2, [r5, #24]
 800a1c6:	f884 24f5 	strb.w	r2, [r4, #1269]	; 0x4f5
 800a1ca:	e7a5      	b.n	800a118 <E131Bridge::HandleDmx()+0xe0>
 800a1cc:	f1ba 0f00 	cmp.w	sl, #0
 800a1d0:	f000 8092 	beq.w	800a2f8 <E131Bridge::HandleDmx()+0x2c0>
 800a1d4:	f1bb 0f00 	cmp.w	fp, #0
 800a1d8:	d15c      	bne.n	800a294 <E131Bridge::HandleDmx()+0x25c>
 800a1da:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800a1de:	742b      	strb	r3, [r5, #16]
 800a1e0:	e7ae      	b.n	800a140 <E131Bridge::HandleDmx()+0x108>
 800a1e2:	f1b8 0f00 	cmp.w	r8, #0
 800a1e6:	d03b      	beq.n	800a260 <E131Bridge::HandleDmx()+0x228>
 800a1e8:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800a1ec:	f240 6b04 	movw	fp, #1540	; 0x604
 800a1f0:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
 800a1f4:	68e3      	ldr	r3, [r4, #12]
 800a1f6:	fb0b fb06 	mul.w	fp, fp, r6
 800a1fa:	616b      	str	r3, [r5, #20]
 800a1fc:	f7ff fbcc 	bl	8009998 <lightset::Data::Get()>
 800a200:	4603      	mov	r3, r0
 800a202:	f50b 7000 	add.w	r0, fp, #512	; 0x200
 800a206:	463a      	mov	r2, r7
 800a208:	4649      	mov	r1, r9
 800a20a:	4418      	add	r0, r3
 800a20c:	9300      	str	r3, [sp, #0]
 800a20e:	f7ff fbb9 	bl	8009984 <memcpy.isra.0>
 800a212:	9b00      	ldr	r3, [sp, #0]
 800a214:	f50b 6080 	add.w	r0, fp, #1024	; 0x400
 800a218:	eb03 020b 	add.w	r2, r3, fp
 800a21c:	f8c2 7600 	str.w	r7, [r2, #1536]	; 0x600
 800a220:	4649      	mov	r1, r9
 800a222:	463a      	mov	r2, r7
 800a224:	4418      	add	r0, r3
 800a226:	f7ff fbad 	bl	8009984 <memcpy.isra.0>
 800a22a:	e791      	b.n	800a150 <E131Bridge::HandleDmx()+0x118>
 800a22c:	6fa3      	ldr	r3, [r4, #120]	; 0x78
 800a22e:	2210      	movs	r2, #16
 800a230:	61ab      	str	r3, [r5, #24]
 800a232:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800a236:	f104 0192 	add.w	r1, r4, #146	; 0x92
 800a23a:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
 800a23e:	f105 001c 	add.w	r0, r5, #28
 800a242:	f7ff fb9f 	bl	8009984 <memcpy.isra.0>
 800a246:	68e3      	ldr	r3, [r4, #12]
 800a248:	4631      	mov	r1, r6
 800a24a:	4620      	mov	r0, r4
 800a24c:	616b      	str	r3, [r5, #20]
 800a24e:	f7ff fde8 	bl	8009e22 <E131Bridge::UpdateMergeStatus(unsigned int)>
 800a252:	463a      	mov	r2, r7
 800a254:	4649      	mov	r1, r9
 800a256:	4630      	mov	r0, r6
 800a258:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 800a25a:	f7ff fbef 	bl	8009a3c <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>
 800a25e:	e777      	b.n	800a150 <E131Bridge::HandleDmx()+0x118>
 800a260:	6fa3      	ldr	r3, [r4, #120]	; 0x78
 800a262:	2210      	movs	r2, #16
 800a264:	f845 3c04 	str.w	r3, [r5, #-4]
 800a268:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800a26c:	4628      	mov	r0, r5
 800a26e:	742b      	strb	r3, [r5, #16]
 800a270:	f104 0192 	add.w	r1, r4, #146	; 0x92
 800a274:	f7ff fb86 	bl	8009984 <memcpy.isra.0>
 800a278:	68e3      	ldr	r3, [r4, #12]
 800a27a:	4631      	mov	r1, r6
 800a27c:	4620      	mov	r0, r4
 800a27e:	f845 3c08 	str.w	r3, [r5, #-8]
 800a282:	f7ff fdce 	bl	8009e22 <E131Bridge::UpdateMergeStatus(unsigned int)>
 800a286:	463a      	mov	r2, r7
 800a288:	4649      	mov	r1, r9
 800a28a:	4630      	mov	r0, r6
 800a28c:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 800a28e:	f7ff fbac 	bl	80099ea <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>
 800a292:	e75d      	b.n	800a150 <E131Bridge::HandleDmx()+0x118>
 800a294:	f1b8 0f00 	cmp.w	r8, #0
 800a298:	d103      	bne.n	800a2a2 <E131Bridge::HandleDmx()+0x26a>
 800a29a:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800a29e:	742b      	strb	r3, [r5, #16]
 800a2a0:	e7ea      	b.n	800a278 <E131Bridge::HandleDmx()+0x240>
 800a2a2:	481c      	ldr	r0, [pc, #112]	; (800a314 <E131Bridge::HandleDmx()+0x2dc>)
 800a2a4:	b003      	add	sp, #12
 800a2a6:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a2aa:	f7ff b987 	b.w	80095bc <printf>
 800a2ae:	4642      	mov	r2, r8
 800a2b0:	4651      	mov	r1, sl
 800a2b2:	e770      	b.n	800a196 <E131Bridge::HandleDmx()+0x15e>
 800a2b4:	f04f 0300 	mov.w	r3, #0
 800a2b8:	f884 34f7 	strb.w	r3, [r4, #1271]	; 0x4f7
 800a2bc:	f894 34f6 	ldrb.w	r3, [r4, #1270]	; 0x4f6
 800a2c0:	2b00      	cmp	r3, #0
 800a2c2:	f47f af6f 	bne.w	800a1a4 <E131Bridge::HandleDmx()+0x16c>
 800a2c6:	f8d4 8004 	ldr.w	r8, [r4, #4]
 800a2ca:	f7ff fb65 	bl	8009998 <lightset::Data::Get()>
 800a2ce:	4632      	mov	r2, r6
 800a2d0:	4641      	mov	r1, r8
 800a2d2:	f7ff fbdd 	bl	8009a90 <lightset::Data::IOutput(LightSet*, unsigned int) const>
 800a2d6:	f895 3036 	ldrb.w	r3, [r5, #54]	; 0x36
 800a2da:	2b00      	cmp	r3, #0
 800a2dc:	f47f af67 	bne.w	800a1ae <E131Bridge::HandleDmx()+0x176>
 800a2e0:	6860      	ldr	r0, [r4, #4]
 800a2e2:	4631      	mov	r1, r6
 800a2e4:	6803      	ldr	r3, [r0, #0]
 800a2e6:	689b      	ldr	r3, [r3, #8]
 800a2e8:	4798      	blx	r3
 800a2ea:	f04f 0301 	mov.w	r3, #1
 800a2ee:	f884 34f8 	strb.w	r3, [r4, #1272]	; 0x4f8
 800a2f2:	f885 3036 	strb.w	r3, [r5, #54]	; 0x36
 800a2f6:	e75a      	b.n	800a1ae <E131Bridge::HandleDmx()+0x176>
 800a2f8:	f1bb 0f00 	cmp.w	fp, #0
 800a2fc:	d096      	beq.n	800a22c <E131Bridge::HandleDmx()+0x1f4>
 800a2fe:	f1b8 0f00 	cmp.w	r8, #0
 800a302:	d0ce      	beq.n	800a2a2 <E131Bridge::HandleDmx()+0x26a>
 800a304:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800a308:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
 800a30c:	e79b      	b.n	800a246 <E131Bridge::HandleDmx()+0x20e>
 800a30e:	b003      	add	sp, #12
 800a310:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a314:	08014e7f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r9, sl, fp, lr}

0800a318 <E131Bridge::IsValidRoot()>:
 800a318:	b530      	push	{r4, r5, lr}
 800a31a:	4a0d      	ldr	r2, [pc, #52]	; (800a350 <E131Bridge::IsValidRoot()+0x38>)
 800a31c:	f100 0380 	add.w	r3, r0, #128	; 0x80
 800a320:	f100 018c 	add.w	r1, r0, #140	; 0x8c
 800a324:	4299      	cmp	r1, r3
 800a326:	d109      	bne.n	800a33c <E131Bridge::IsValidRoot()+0x24>
 800a328:	f8d0 008e 	ldr.w	r0, [r0, #142]	; 0x8e
 800a32c:	f1b0 6f80 	cmp.w	r0, #67108864	; 0x4000000
 800a330:	d00c      	beq.n	800a34c <E131Bridge::IsValidRoot()+0x34>
 800a332:	f100 4378 	add.w	r3, r0, #4160749568	; 0xf8000000
 800a336:	4258      	negs	r0, r3
 800a338:	4158      	adcs	r0, r3
 800a33a:	bd30      	pop	{r4, r5, pc}
 800a33c:	f813 5b01 	ldrb.w	r5, [r3], #1
 800a340:	f812 4b01 	ldrb.w	r4, [r2], #1
 800a344:	42a5      	cmp	r5, r4
 800a346:	d0ed      	beq.n	800a324 <E131Bridge::IsValidRoot()+0xc>
 800a348:	2000      	movs	r0, #0
 800a34a:	e7f6      	b.n	800a33a <E131Bridge::IsValidRoot()+0x22>
 800a34c:	2001      	movs	r0, #1
 800a34e:	e7f4      	b.n	800a33a <E131Bridge::IsValidRoot()+0x22>
 800a350:	08015063 	stmdaeq	r1, {r0, r1, r5, r6, ip, lr}

0800a354 <E131Bridge::IsValidDataPacket()>:
 800a354:	f890 30f1 	ldrb.w	r3, [r0, #241]	; 0xf1
 800a358:	2b02      	cmp	r3, #2
 800a35a:	d10d      	bne.n	800a378 <E131Bridge::IsValidDataPacket()+0x24>
 800a35c:	f890 30f2 	ldrb.w	r3, [r0, #242]	; 0xf2
 800a360:	2ba1      	cmp	r3, #161	; 0xa1
 800a362:	d109      	bne.n	800a378 <E131Bridge::IsValidDataPacket()+0x24>
 800a364:	f8b0 30f3 	ldrh.w	r3, [r0, #243]	; 0xf3
 800a368:	b933      	cbnz	r3, 800a378 <E131Bridge::IsValidDataPacket()+0x24>
 800a36a:	f8b0 00f5 	ldrh.w	r0, [r0, #245]	; 0xf5
 800a36e:	f5a0 7380 	sub.w	r3, r0, #256	; 0x100
 800a372:	4258      	negs	r0, r3
 800a374:	4158      	adcs	r0, r3
 800a376:	4770      	bx	lr
 800a378:	2000      	movs	r0, #0
 800a37a:	4770      	bx	lr

0800a37c <E131Bridge::Run()>:
 800a37c:	b530      	push	{r4, r5, lr}
 800a37e:	4601      	mov	r1, r0
 800a380:	4604      	mov	r4, r0
 800a382:	b085      	sub	sp, #20
 800a384:	f10d 030e 	add.w	r3, sp, #14
 800a388:	f811 0b7c 	ldrb.w	r0, [r1], #124
 800a38c:	f44f 628f 	mov.w	r2, #1144	; 0x478
 800a390:	9300      	str	r3, [sp, #0]
 800a392:	f104 0378 	add.w	r3, r4, #120	; 0x78
 800a396:	f005 f995 	bl	800f6c4 <udp_recv>
 800a39a:	4b3c      	ldr	r3, [pc, #240]	; (800a48c <E131Bridge::Run()+0x110>)
 800a39c:	681d      	ldr	r5, [r3, #0]
 800a39e:	60e5      	str	r5, [r4, #12]
 800a3a0:	2800      	cmp	r0, #0
 800a3a2:	d13b      	bne.n	800a41c <E131Bridge::Run()+0xa0>
 800a3a4:	f894 350b 	ldrb.w	r3, [r4, #1291]	; 0x50b
 800a3a8:	b183      	cbz	r3, 800a3cc <E131Bridge::Run()+0x50>
 800a3aa:	f894 24f9 	ldrb.w	r2, [r4, #1273]	; 0x4f9
 800a3ae:	6923      	ldr	r3, [r4, #16]
 800a3b0:	bb6a      	cbnz	r2, 800a40e <E131Bridge::Run()+0x92>
 800a3b2:	1aed      	subs	r5, r5, r3
 800a3b4:	f640 13c3 	movw	r3, #2499	; 0x9c3
 800a3b8:	429d      	cmp	r5, r3
 800a3ba:	d928      	bls.n	800a40e <E131Bridge::Run()+0x92>
 800a3bc:	6863      	ldr	r3, [r4, #4]
 800a3be:	b9eb      	cbnz	r3, 800a3fc <E131Bridge::Run()+0x80>
 800a3c0:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800a3c4:	f023 0302 	bic.w	r3, r3, #2
 800a3c8:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 800a3cc:	6963      	ldr	r3, [r4, #20]
 800a3ce:	b12b      	cbz	r3, 800a3dc <E131Bridge::Run()+0x60>
 800a3d0:	4620      	mov	r0, r4
 800a3d2:	f000 f957 	bl	800a684 <E131Bridge::HandleDmxIn()>
 800a3d6:	4620      	mov	r0, r4
 800a3d8:	f000 f8ca 	bl	800a570 <E131Bridge::SendDiscoveryPacket()>
 800a3dc:	7a23      	ldrb	r3, [r4, #8]
 800a3de:	b15b      	cbz	r3, 800a3f8 <E131Bridge::Run()+0x7c>
 800a3e0:	4b2b      	ldr	r3, [pc, #172]	; (800a490 <E131Bridge::Run()+0x114>)
 800a3e2:	6818      	ldr	r0, [r3, #0]
 800a3e4:	6843      	ldr	r3, [r0, #4]
 800a3e6:	2b04      	cmp	r3, #4
 800a3e8:	d006      	beq.n	800a3f8 <E131Bridge::Run()+0x7c>
 800a3ea:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800a3ee:	2b00      	cmp	r3, #0
 800a3f0:	d049      	beq.n	800a486 <E131Bridge::Run()+0x10a>
 800a3f2:	2103      	movs	r1, #3
 800a3f4:	f008 f9ca 	bl	801278c <LedBlink::SetMode(ledblink::Mode)>
 800a3f8:	b005      	add	sp, #20
 800a3fa:	bd30      	pop	{r4, r5, pc}
 800a3fc:	f894 34f4 	ldrb.w	r3, [r4, #1268]	; 0x4f4
 800a400:	2b00      	cmp	r3, #0
 800a402:	d1dd      	bne.n	800a3c0 <E131Bridge::Run()+0x44>
 800a404:	2201      	movs	r2, #1
 800a406:	4620      	mov	r0, r4
 800a408:	4611      	mov	r1, r2
 800a40a:	f7ff fd8f 	bl	8009f2c <E131Bridge::SetNetworkDataLossCondition(bool, bool)>
 800a40e:	e9d4 3203 	ldrd	r3, r2, [r4, #12]
 800a412:	1a9b      	subs	r3, r3, r2
 800a414:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800a418:	d3d8      	bcc.n	800a3cc <E131Bridge::Run()+0x50>
 800a41a:	e7d1      	b.n	800a3c0 <E131Bridge::Run()+0x44>
 800a41c:	4620      	mov	r0, r4
 800a41e:	f7ff ff7b 	bl	800a318 <E131Bridge::IsValidRoot()>
 800a422:	2800      	cmp	r0, #0
 800a424:	d0e8      	beq.n	800a3f8 <E131Bridge::Run()+0x7c>
 800a426:	2300      	movs	r3, #0
 800a428:	f884 34f4 	strb.w	r3, [r4, #1268]	; 0x4f4
 800a42c:	f894 34f6 	ldrb.w	r3, [r4, #1270]	; 0x4f6
 800a430:	6125      	str	r5, [r4, #16]
 800a432:	b15b      	cbz	r3, 800a44c <E131Bridge::Run()+0xd0>
 800a434:	f894 34f7 	ldrb.w	r3, [r4, #1271]	; 0x4f7
 800a438:	b943      	cbnz	r3, 800a44c <E131Bridge::Run()+0xd0>
 800a43a:	f8d4 24fc 	ldr.w	r2, [r4, #1276]	; 0x4fc
 800a43e:	1aad      	subs	r5, r5, r2
 800a440:	f640 12c3 	movw	r2, #2499	; 0x9c3
 800a444:	4295      	cmp	r5, r2
 800a446:	bf88      	it	hi
 800a448:	f884 34f6 	strbhi.w	r3, [r4, #1270]	; 0x4f6
 800a44c:	6863      	ldr	r3, [r4, #4]
 800a44e:	2b00      	cmp	r3, #0
 800a450:	d0bc      	beq.n	800a3cc <E131Bridge::Run()+0x50>
 800a452:	f8d4 308e 	ldr.w	r3, [r4, #142]	; 0x8e
 800a456:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 800a45a:	ba1a      	rev	r2, r3
 800a45c:	d108      	bne.n	800a470 <E131Bridge::Run()+0xf4>
 800a45e:	4620      	mov	r0, r4
 800a460:	f7ff ff78 	bl	800a354 <E131Bridge::IsValidDataPacket()>
 800a464:	2800      	cmp	r0, #0
 800a466:	d0b1      	beq.n	800a3cc <E131Bridge::Run()+0x50>
 800a468:	4620      	mov	r0, r4
 800a46a:	f7ff fde5 	bl	800a038 <E131Bridge::HandleDmx()>
 800a46e:	e7ad      	b.n	800a3cc <E131Bridge::Run()+0x50>
 800a470:	2a08      	cmp	r2, #8
 800a472:	d1ab      	bne.n	800a3cc <E131Bridge::Run()+0x50>
 800a474:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800a478:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800a47c:	d1a6      	bne.n	800a3cc <E131Bridge::Run()+0x50>
 800a47e:	4620      	mov	r0, r4
 800a480:	f000 f97c 	bl	800a77c <E131Bridge::HandleSynchronization()>
 800a484:	e7a2      	b.n	800a3cc <E131Bridge::Run()+0x50>
 800a486:	2102      	movs	r1, #2
 800a488:	e7b4      	b.n	800a3f4 <E131Bridge::Run()+0x78>
 800a48a:	bf00      	nop
 800a48c:	2000a744 	andcs	sl, r0, r4, asr #14
 800a490:	2000a72c 	andcs	sl, r0, ip, lsr #14

0800a494 <E131Bridge::FillDiscoveryPacket()>:
 800a494:	2200      	movs	r2, #0
 800a496:	f890 350a 	ldrb.w	r3, [r0, #1290]	; 0x50a
 800a49a:	b510      	push	{r4, lr}
 800a49c:	333c      	adds	r3, #60	; 0x3c
 800a49e:	005b      	lsls	r3, r3, #1
 800a4a0:	f8a0 3504 	strh.w	r3, [r0, #1284]	; 0x504
 800a4a4:	69c3      	ldr	r3, [r0, #28]
 800a4a6:	f503 618f 	add.w	r1, r3, #1144	; 0x478
 800a4aa:	428b      	cmp	r3, r1
 800a4ac:	d14b      	bne.n	800a546 <E131Bridge::FillDiscoveryPacket()+0xb2>
 800a4ae:	69c3      	ldr	r3, [r0, #28]
 800a4b0:	492e      	ldr	r1, [pc, #184]	; (800a56c <E131Bridge::FillDiscoveryPacket()+0xd8>)
 800a4b2:	701a      	strb	r2, [r3, #0]
 800a4b4:	2210      	movs	r2, #16
 800a4b6:	705a      	strb	r2, [r3, #1]
 800a4b8:	1d1a      	adds	r2, r3, #4
 800a4ba:	3310      	adds	r3, #16
 800a4bc:	4293      	cmp	r3, r2
 800a4be:	d145      	bne.n	800a54c <E131Bridge::FillDiscoveryPacket()+0xb8>
 800a4c0:	f890 250a 	ldrb.w	r2, [r0, #1290]	; 0x50a
 800a4c4:	69c3      	ldr	r3, [r0, #28]
 800a4c6:	3234      	adds	r2, #52	; 0x34
 800a4c8:	0052      	lsls	r2, r2, #1
 800a4ca:	f442 42e0 	orr.w	r2, r2, #28672	; 0x7000
 800a4ce:	ba52      	rev16	r2, r2
 800a4d0:	821a      	strh	r2, [r3, #16]
 800a4d2:	2200      	movs	r2, #0
 800a4d4:	749a      	strb	r2, [r3, #18]
 800a4d6:	74da      	strb	r2, [r3, #19]
 800a4d8:	751a      	strb	r2, [r3, #20]
 800a4da:	2208      	movs	r2, #8
 800a4dc:	f100 0124 	add.w	r1, r0, #36	; 0x24
 800a4e0:	755a      	strb	r2, [r3, #21]
 800a4e2:	3316      	adds	r3, #22
 800a4e4:	f100 0234 	add.w	r2, r0, #52	; 0x34
 800a4e8:	4291      	cmp	r1, r2
 800a4ea:	d134      	bne.n	800a556 <E131Bridge::FillDiscoveryPacket()+0xc2>
 800a4ec:	f890 250a 	ldrb.w	r2, [r0, #1290]	; 0x50a
 800a4f0:	69c3      	ldr	r3, [r0, #28]
 800a4f2:	3229      	adds	r2, #41	; 0x29
 800a4f4:	0052      	lsls	r2, r2, #1
 800a4f6:	f442 42e0 	orr.w	r2, r2, #28672	; 0x7000
 800a4fa:	ba52      	rev16	r2, r2
 800a4fc:	84da      	strh	r2, [r3, #38]	; 0x26
 800a4fe:	2200      	movs	r2, #0
 800a500:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 800a504:	f883 2029 	strb.w	r2, [r3, #41]	; 0x29
 800a508:	f883 202a 	strb.w	r2, [r3, #42]	; 0x2a
 800a50c:	2202      	movs	r2, #2
 800a50e:	332c      	adds	r3, #44	; 0x2c
 800a510:	f803 2c01 	strb.w	r2, [r3, #-1]
 800a514:	f100 0274 	add.w	r2, r0, #116	; 0x74
 800a518:	4291      	cmp	r1, r2
 800a51a:	d121      	bne.n	800a560 <E131Bridge::FillDiscoveryPacket()+0xcc>
 800a51c:	f890 350a 	ldrb.w	r3, [r0, #1290]	; 0x50a
 800a520:	69c2      	ldr	r2, [r0, #28]
 800a522:	3304      	adds	r3, #4
 800a524:	005b      	lsls	r3, r3, #1
 800a526:	f443 43e0 	orr.w	r3, r3, #28672	; 0x7000
 800a52a:	ba5b      	rev16	r3, r3
 800a52c:	f8a2 3070 	strh.w	r3, [r2, #112]	; 0x70
 800a530:	2300      	movs	r3, #0
 800a532:	f882 3072 	strb.w	r3, [r2, #114]	; 0x72
 800a536:	f882 3073 	strb.w	r3, [r2, #115]	; 0x73
 800a53a:	f882 3074 	strb.w	r3, [r2, #116]	; 0x74
 800a53e:	2301      	movs	r3, #1
 800a540:	f882 3075 	strb.w	r3, [r2, #117]	; 0x75
 800a544:	bd10      	pop	{r4, pc}
 800a546:	f803 2b01 	strb.w	r2, [r3], #1
 800a54a:	e7ae      	b.n	800a4aa <E131Bridge::FillDiscoveryPacket()+0x16>
 800a54c:	f811 4b01 	ldrb.w	r4, [r1], #1
 800a550:	f802 4b01 	strb.w	r4, [r2], #1
 800a554:	e7b2      	b.n	800a4bc <E131Bridge::FillDiscoveryPacket()+0x28>
 800a556:	f811 4b01 	ldrb.w	r4, [r1], #1
 800a55a:	f803 4b01 	strb.w	r4, [r3], #1
 800a55e:	e7c3      	b.n	800a4e8 <E131Bridge::FillDiscoveryPacket()+0x54>
 800a560:	f811 4b01 	ldrb.w	r4, [r1], #1
 800a564:	f803 4b01 	strb.w	r4, [r3], #1
 800a568:	e7d6      	b.n	800a518 <E131Bridge::FillDiscoveryPacket()+0x84>
 800a56a:	bf00      	nop
 800a56c:	08015063 	stmdaeq	r1, {r0, r1, r5, r6, ip, lr}

0800a570 <E131Bridge::SendDiscoveryPacket()>:
 800a570:	f242 710f 	movw	r1, #9999	; 0x270f
 800a574:	b530      	push	{r4, r5, lr}
 800a576:	68c2      	ldr	r2, [r0, #12]
 800a578:	f8d0 3500 	ldr.w	r3, [r0, #1280]	; 0x500
 800a57c:	4604      	mov	r4, r0
 800a57e:	1ad3      	subs	r3, r2, r3
 800a580:	428b      	cmp	r3, r1
 800a582:	b085      	sub	sp, #20
 800a584:	d92c      	bls.n	800a5e0 <E131Bridge::SendDiscoveryPacket()+0x70>
 800a586:	f890 350a 	ldrb.w	r3, [r0, #1290]	; 0x50a
 800a58a:	f8c0 2500 	str.w	r2, [r0, #1280]	; 0x500
 800a58e:	b1eb      	cbz	r3, 800a5cc <E131Bridge::SendDiscoveryPacket()+0x5c>
 800a590:	2300      	movs	r3, #0
 800a592:	f10d 020e 	add.w	r2, sp, #14
 800a596:	4619      	mov	r1, r3
 800a598:	f7ff fc2c 	bl	8009df4 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 800a59c:	4605      	mov	r5, r0
 800a59e:	b130      	cbz	r0, 800a5ae <E131Bridge::SendDiscoveryPacket()+0x3e>
 800a5a0:	2501      	movs	r5, #1
 800a5a2:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800a5a6:	69e2      	ldr	r2, [r4, #28]
 800a5a8:	ba5b      	rev16	r3, r3
 800a5aa:	f8a2 3078 	strh.w	r3, [r2, #120]	; 0x78
 800a5ae:	2300      	movs	r3, #0
 800a5b0:	2101      	movs	r1, #1
 800a5b2:	4620      	mov	r0, r4
 800a5b4:	f10d 020e 	add.w	r2, sp, #14
 800a5b8:	f7ff fc1c 	bl	8009df4 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 800a5bc:	b130      	cbz	r0, 800a5cc <E131Bridge::SendDiscoveryPacket()+0x5c>
 800a5be:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800a5c2:	69e2      	ldr	r2, [r4, #28]
 800a5c4:	ba5b      	rev16	r3, r3
 800a5c6:	353c      	adds	r5, #60	; 0x3c
 800a5c8:	f822 3015 	strh.w	r3, [r2, r5, lsl #1]
 800a5cc:	f44f 53ae 	mov.w	r3, #5568	; 0x15c0
 800a5d0:	f8b4 2504 	ldrh.w	r2, [r4, #1284]	; 0x504
 800a5d4:	9300      	str	r3, [sp, #0]
 800a5d6:	69e1      	ldr	r1, [r4, #28]
 800a5d8:	6a23      	ldr	r3, [r4, #32]
 800a5da:	7820      	ldrb	r0, [r4, #0]
 800a5dc:	f005 f8ce 	bl	800f77c <udp_send>
 800a5e0:	b005      	add	sp, #20
 800a5e2:	bd30      	pop	{r4, r5, pc}

0800a5e4 <memcpy.isra.0>:
 800a5e4:	3801      	subs	r0, #1
 800a5e6:	440a      	add	r2, r1
 800a5e8:	4291      	cmp	r1, r2
 800a5ea:	d100      	bne.n	800a5ee <memcpy.isra.0+0xa>
 800a5ec:	4770      	bx	lr
 800a5ee:	f811 3b01 	ldrb.w	r3, [r1], #1
 800a5f2:	f800 3f01 	strb.w	r3, [r0, #1]!
 800a5f6:	e7f7      	b.n	800a5e8 <memcpy.isra.0+0x4>

0800a5f8 <E131Bridge::FillDataPacket()>:
 800a5f8:	b570      	push	{r4, r5, r6, lr}
 800a5fa:	2400      	movs	r4, #0
 800a5fc:	2610      	movs	r6, #16
 800a5fe:	4605      	mov	r5, r0
 800a600:	6980      	ldr	r0, [r0, #24]
 800a602:	220c      	movs	r2, #12
 800a604:	7046      	strb	r6, [r0, #1]
 800a606:	7004      	strb	r4, [r0, #0]
 800a608:	7084      	strb	r4, [r0, #2]
 800a60a:	70c4      	strb	r4, [r0, #3]
 800a60c:	491c      	ldr	r1, [pc, #112]	; (800a680 <E131Bridge::FillDataPacket()+0x88>)
 800a60e:	3004      	adds	r0, #4
 800a610:	f7ff ffe8 	bl	800a5e4 <memcpy.isra.0>
 800a614:	2304      	movs	r3, #4
 800a616:	4632      	mov	r2, r6
 800a618:	2602      	movs	r6, #2
 800a61a:	69a8      	ldr	r0, [r5, #24]
 800a61c:	f105 0124 	add.w	r1, r5, #36	; 0x24
 800a620:	7543      	strb	r3, [r0, #21]
 800a622:	7484      	strb	r4, [r0, #18]
 800a624:	74c4      	strb	r4, [r0, #19]
 800a626:	7504      	strb	r4, [r0, #20]
 800a628:	3016      	adds	r0, #22
 800a62a:	f7ff ffdb 	bl	800a5e4 <memcpy.isra.0>
 800a62e:	69a8      	ldr	r0, [r5, #24]
 800a630:	2240      	movs	r2, #64	; 0x40
 800a632:	f880 4028 	strb.w	r4, [r0, #40]	; 0x28
 800a636:	f880 4029 	strb.w	r4, [r0, #41]	; 0x29
 800a63a:	f880 402a 	strb.w	r4, [r0, #42]	; 0x2a
 800a63e:	f880 602b 	strb.w	r6, [r0, #43]	; 0x2b
 800a642:	f105 0134 	add.w	r1, r5, #52	; 0x34
 800a646:	302c      	adds	r0, #44	; 0x2c
 800a648:	f7ff ffcc 	bl	800a5e4 <memcpy.isra.0>
 800a64c:	22a1      	movs	r2, #161	; 0xa1
 800a64e:	69ab      	ldr	r3, [r5, #24]
 800a650:	f883 4070 	strb.w	r4, [r3, #112]	; 0x70
 800a654:	f883 406d 	strb.w	r4, [r3, #109]	; 0x6d
 800a658:	f883 406e 	strb.w	r4, [r3, #110]	; 0x6e
 800a65c:	69ab      	ldr	r3, [r5, #24]
 800a65e:	f883 6075 	strb.w	r6, [r3, #117]	; 0x75
 800a662:	69ab      	ldr	r3, [r5, #24]
 800a664:	f883 2076 	strb.w	r2, [r3, #118]	; 0x76
 800a668:	2201      	movs	r2, #1
 800a66a:	69ab      	ldr	r3, [r5, #24]
 800a66c:	f883 4077 	strb.w	r4, [r3, #119]	; 0x77
 800a670:	f883 4078 	strb.w	r4, [r3, #120]	; 0x78
 800a674:	f883 4079 	strb.w	r4, [r3, #121]	; 0x79
 800a678:	f883 207a 	strb.w	r2, [r3, #122]	; 0x7a
 800a67c:	bd70      	pop	{r4, r5, r6, pc}
 800a67e:	bf00      	nop
 800a680:	08015063 	stmdaeq	r1, {r0, r1, r5, r6, ip, lr}

0800a684 <E131Bridge::HandleDmxIn()>:
 800a684:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800a688:	4604      	mov	r4, r0
 800a68a:	4605      	mov	r5, r0
 800a68c:	2600      	movs	r6, #0
 800a68e:	4f3a      	ldr	r7, [pc, #232]	; (800a778 <E131Bridge::HandleDmxIn()+0xf4>)
 800a690:	f895 359a 	ldrb.w	r3, [r5, #1434]	; 0x59a
 800a694:	2b00      	cmp	r3, #0
 800a696:	d058      	beq.n	800a74a <E131Bridge::HandleDmxIn()+0xc6>
 800a698:	6960      	ldr	r0, [r4, #20]
 800a69a:	4631      	mov	r1, r6
 800a69c:	6803      	ldr	r3, [r0, #0]
 800a69e:	aa02      	add	r2, sp, #8
 800a6a0:	f8d3 8010 	ldr.w	r8, [r3, #16]
 800a6a4:	ab03      	add	r3, sp, #12
 800a6a6:	47c0      	blx	r8
 800a6a8:	4601      	mov	r1, r0
 800a6aa:	2800      	cmp	r0, #0
 800a6ac:	d054      	beq.n	800a758 <E131Bridge::HandleDmxIn()+0xd4>
 800a6ae:	9a02      	ldr	r2, [sp, #8]
 800a6b0:	69a0      	ldr	r0, [r4, #24]
 800a6b2:	b293      	uxth	r3, r2
 800a6b4:	f103 0c6d 	add.w	ip, r3, #109	; 0x6d
 800a6b8:	f44c 4ce0 	orr.w	ip, ip, #28672	; 0x7000
 800a6bc:	fa9c fc9c 	rev16.w	ip, ip
 800a6c0:	f8a0 c010 	strh.w	ip, [r0, #16]
 800a6c4:	f103 0c57 	add.w	ip, r3, #87	; 0x57
 800a6c8:	f44c 4ce0 	orr.w	ip, ip, #28672	; 0x7000
 800a6cc:	fa9c fc9c 	rev16.w	ip, ip
 800a6d0:	f8a0 c026 	strh.w	ip, [r0, #38]	; 0x26
 800a6d4:	f895 c5a1 	ldrb.w	ip, [r5, #1441]	; 0x5a1
 800a6d8:	330a      	adds	r3, #10
 800a6da:	f880 c06c 	strb.w	ip, [r0, #108]	; 0x6c
 800a6de:	f895 c5a0 	ldrb.w	ip, [r5, #1440]	; 0x5a0
 800a6e2:	f443 43e0 	orr.w	r3, r3, #28672	; 0x7000
 800a6e6:	f10c 0001 	add.w	r0, ip, #1
 800a6ea:	f885 05a0 	strb.w	r0, [r5, #1440]	; 0x5a0
 800a6ee:	69a0      	ldr	r0, [r4, #24]
 800a6f0:	ba5b      	rev16	r3, r3
 800a6f2:	f880 c06f 	strb.w	ip, [r0, #111]	; 0x6f
 800a6f6:	f8b5 c598 	ldrh.w	ip, [r5, #1432]	; 0x598
 800a6fa:	69a0      	ldr	r0, [r4, #24]
 800a6fc:	fa9c fc9c 	rev16.w	ip, ip
 800a700:	f8a0 c071 	strh.w	ip, [r0, #113]	; 0x71
 800a704:	f8a0 3073 	strh.w	r3, [r0, #115]	; 0x73
 800a708:	307d      	adds	r0, #125	; 0x7d
 800a70a:	f7ff ff6b 	bl	800a5e4 <memcpy.isra.0>
 800a70e:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800a712:	69a1      	ldr	r1, [r4, #24]
 800a714:	ba53      	rev16	r3, r2
 800a716:	f8a1 307b 	strh.w	r3, [r1, #123]	; 0x7b
 800a71a:	f44f 53ae 	mov.w	r3, #5568	; 0x15c0
 800a71e:	327d      	adds	r2, #125	; 0x7d
 800a720:	9300      	str	r3, [sp, #0]
 800a722:	f8d5 359c 	ldr.w	r3, [r5, #1436]	; 0x59c
 800a726:	b292      	uxth	r2, r2
 800a728:	7820      	ldrb	r0, [r4, #0]
 800a72a:	f005 f827 	bl	800f77c <udp_send>
 800a72e:	2301      	movs	r3, #1
 800a730:	683a      	ldr	r2, [r7, #0]
 800a732:	40b3      	lsls	r3, r6
 800a734:	ea33 0102 	bics.w	r1, r3, r2
 800a738:	d007      	beq.n	800a74a <E131Bridge::HandleDmxIn()+0xc6>
 800a73a:	4313      	orrs	r3, r2
 800a73c:	603b      	str	r3, [r7, #0]
 800a73e:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800a742:	f043 0301 	orr.w	r3, r3, #1
 800a746:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 800a74a:	350c      	adds	r5, #12
 800a74c:	b116      	cbz	r6, 800a754 <E131Bridge::HandleDmxIn()+0xd0>
 800a74e:	b004      	add	sp, #16
 800a750:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a754:	2601      	movs	r6, #1
 800a756:	e79b      	b.n	800a690 <E131Bridge::HandleDmxIn()+0xc>
 800a758:	9b03      	ldr	r3, [sp, #12]
 800a75a:	2b00      	cmp	r3, #0
 800a75c:	d1f5      	bne.n	800a74a <E131Bridge::HandleDmxIn()+0xc6>
 800a75e:	2201      	movs	r2, #1
 800a760:	683b      	ldr	r3, [r7, #0]
 800a762:	40b2      	lsls	r2, r6
 800a764:	ea23 0302 	bic.w	r3, r3, r2
 800a768:	603b      	str	r3, [r7, #0]
 800a76a:	2b00      	cmp	r3, #0
 800a76c:	d1ed      	bne.n	800a74a <E131Bridge::HandleDmxIn()+0xc6>
 800a76e:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800a772:	f023 0301 	bic.w	r3, r3, #1
 800a776:	e7e6      	b.n	800a746 <E131Bridge::HandleDmxIn()+0xc2>
 800a778:	20000d18 	andcs	r0, r0, r8, lsl sp

0800a77c <E131Bridge::HandleSynchronization()>:
 800a77c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a780:	f8b0 30a9 	ldrh.w	r3, [r0, #169]	; 0xa9
 800a784:	f8b0 2506 	ldrh.w	r2, [r0, #1286]	; 0x506
 800a788:	ba5b      	rev16	r3, r3
 800a78a:	b29b      	uxth	r3, r3
 800a78c:	429a      	cmp	r2, r3
 800a78e:	4604      	mov	r4, r0
 800a790:	d00a      	beq.n	800a7a8 <E131Bridge::HandleSynchronization()+0x2c>
 800a792:	f8b0 2508 	ldrh.w	r2, [r0, #1288]	; 0x508
 800a796:	429a      	cmp	r2, r3
 800a798:	d006      	beq.n	800a7a8 <E131Bridge::HandleSynchronization()+0x2c>
 800a79a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a79e:	4b22      	ldr	r3, [pc, #136]	; (800a828 <E131Bridge::HandleSynchronization()+0xac>)
 800a7a0:	2102      	movs	r1, #2
 800a7a2:	6818      	ldr	r0, [r3, #0]
 800a7a4:	f007 bff2 	b.w	801278c <LedBlink::SetMode(ledblink::Mode)>
 800a7a8:	2500      	movs	r5, #0
 800a7aa:	4627      	mov	r7, r4
 800a7ac:	46a9      	mov	r9, r5
 800a7ae:	68e3      	ldr	r3, [r4, #12]
 800a7b0:	4e1e      	ldr	r6, [pc, #120]	; (800a82c <E131Bridge::HandleSynchronization()+0xb0>)
 800a7b2:	f8df 807c 	ldr.w	r8, [pc, #124]	; 800a830 <E131Bridge::HandleSynchronization()+0xb4>
 800a7b6:	f8c4 34fc 	str.w	r3, [r4, #1276]	; 0x4fc
 800a7ba:	f897 3512 	ldrb.w	r3, [r7, #1298]	; 0x512
 800a7be:	b323      	cbz	r3, 800a80a <E131Bridge::HandleSynchronization()+0x8e>
 800a7c0:	f8d8 3000 	ldr.w	r3, [r8]
 800a7c4:	6860      	ldr	r0, [r4, #4]
 800a7c6:	07da      	lsls	r2, r3, #31
 800a7c8:	bf5c      	itt	pl
 800a7ca:	2301      	movpl	r3, #1
 800a7cc:	f8c8 3000 	strpl.w	r3, [r8]
 800a7d0:	6803      	ldr	r3, [r0, #0]
 800a7d2:	4629      	mov	r1, r5
 800a7d4:	f8d3 a010 	ldr.w	sl, [r3, #16]
 800a7d8:	f506 6280 	add.w	r2, r6, #1024	; 0x400
 800a7dc:	f8d6 3600 	ldr.w	r3, [r6, #1536]	; 0x600
 800a7e0:	47d0      	blx	sl
 800a7e2:	f897 3552 	ldrb.w	r3, [r7, #1362]	; 0x552
 800a7e6:	b93b      	cbnz	r3, 800a7f8 <E131Bridge::HandleSynchronization()+0x7c>
 800a7e8:	6860      	ldr	r0, [r4, #4]
 800a7ea:	4629      	mov	r1, r5
 800a7ec:	6803      	ldr	r3, [r0, #0]
 800a7ee:	689b      	ldr	r3, [r3, #8]
 800a7f0:	4798      	blx	r3
 800a7f2:	2301      	movs	r3, #1
 800a7f4:	f887 3552 	strb.w	r3, [r7, #1362]	; 0x552
 800a7f8:	f8d8 3000 	ldr.w	r3, [r8]
 800a7fc:	f8c6 9600 	str.w	r9, [r6, #1536]	; 0x600
 800a800:	07db      	lsls	r3, r3, #31
 800a802:	bf5c      	itt	pl
 800a804:	2301      	movpl	r3, #1
 800a806:	f8c8 3000 	strpl.w	r3, [r8]
 800a80a:	3744      	adds	r7, #68	; 0x44
 800a80c:	f206 6604 	addw	r6, r6, #1540	; 0x604
 800a810:	b135      	cbz	r5, 800a820 <E131Bridge::HandleSynchronization()+0xa4>
 800a812:	6f60      	ldr	r0, [r4, #116]	; 0x74
 800a814:	b130      	cbz	r0, 800a824 <E131Bridge::HandleSynchronization()+0xa8>
 800a816:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a81a:	6803      	ldr	r3, [r0, #0]
 800a81c:	689b      	ldr	r3, [r3, #8]
 800a81e:	4718      	bx	r3
 800a820:	2501      	movs	r5, #1
 800a822:	e7ca      	b.n	800a7ba <E131Bridge::HandleSynchronization()+0x3e>
 800a824:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a828:	2000a72c 	andcs	sl, r0, ip, lsr #14
 800a82c:	2000010c 	andcs	r0, r0, ip, lsl #2
 800a830:	20000108 	andcs	r0, r0, r8, lsl #2

0800a834 <E131Bridge::Print()>:
 800a834:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a838:	2500      	movs	r5, #0
 800a83a:	4604      	mov	r4, r0
 800a83c:	b08c      	sub	sp, #48	; 0x30
 800a83e:	a902      	add	r1, sp, #8
 800a840:	3024      	adds	r0, #36	; 0x24
 800a842:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800a846:	f000 fb97 	bl	800af78 <uuid_unparse>
 800a84a:	482c      	ldr	r0, [pc, #176]	; (800a8fc <E131Bridge::Print()+0xc8>)
 800a84c:	f7fe feb6 	bl	80095bc <printf>
 800a850:	4b2b      	ldr	r3, [pc, #172]	; (800a900 <E131Bridge::Print()+0xcc>)
 800a852:	482c      	ldr	r0, [pc, #176]	; (800a904 <E131Bridge::Print()+0xd0>)
 800a854:	7819      	ldrb	r1, [r3, #0]
 800a856:	785a      	ldrb	r2, [r3, #1]
 800a858:	f7fe feb0 	bl	80095bc <printf>
 800a85c:	482a      	ldr	r0, [pc, #168]	; (800a908 <E131Bridge::Print()+0xd4>)
 800a85e:	a902      	add	r1, sp, #8
 800a860:	f7fe feac 	bl	80095bc <printf>
 800a864:	f894 350b 	ldrb.w	r3, [r4, #1291]	; 0x50b
 800a868:	b1f3      	cbz	r3, 800a8a8 <E131Bridge::Print()+0x74>
 800a86a:	4828      	ldr	r0, [pc, #160]	; (800a90c <E131Bridge::Print()+0xd8>)
 800a86c:	f7fe fea6 	bl	80095bc <printf>
 800a870:	4e27      	ldr	r6, [pc, #156]	; (800a910 <E131Bridge::Print()+0xdc>)
 800a872:	4f28      	ldr	r7, [pc, #160]	; (800a914 <E131Bridge::Print()+0xe0>)
 800a874:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 800a918 <E131Bridge::Print()+0xe4>
 800a878:	2301      	movs	r3, #1
 800a87a:	4629      	mov	r1, r5
 800a87c:	4620      	mov	r0, r4
 800a87e:	f10d 0206 	add.w	r2, sp, #6
 800a882:	f7ff fab7 	bl	8009df4 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 800a886:	b170      	cbz	r0, 800a8a6 <E131Bridge::Print()+0x72>
 800a888:	2344      	movs	r3, #68	; 0x44
 800a88a:	436b      	muls	r3, r5
 800a88c:	f204 524c 	addw	r2, r4, #1356	; 0x54c
 800a890:	58d3      	ldr	r3, [r2, r3]
 800a892:	4629      	mov	r1, r5
 800a894:	2b00      	cmp	r3, #0
 800a896:	bf0c      	ite	eq
 800a898:	4633      	moveq	r3, r6
 800a89a:	463b      	movne	r3, r7
 800a89c:	4640      	mov	r0, r8
 800a89e:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800a8a2:	f7fe fe8b 	bl	80095bc <printf>
 800a8a6:	b325      	cbz	r5, 800a8f2 <E131Bridge::Print()+0xbe>
 800a8a8:	f894 350a 	ldrb.w	r3, [r4, #1290]	; 0x50a
 800a8ac:	b1c3      	cbz	r3, 800a8e0 <E131Bridge::Print()+0xac>
 800a8ae:	481b      	ldr	r0, [pc, #108]	; (800a91c <E131Bridge::Print()+0xe8>)
 800a8b0:	f7fe fe84 	bl	80095bc <printf>
 800a8b4:	2500      	movs	r5, #0
 800a8b6:	4e1a      	ldr	r6, [pc, #104]	; (800a920 <E131Bridge::Print()+0xec>)
 800a8b8:	2300      	movs	r3, #0
 800a8ba:	4629      	mov	r1, r5
 800a8bc:	4620      	mov	r0, r4
 800a8be:	f10d 0206 	add.w	r2, sp, #6
 800a8c2:	f7ff fa97 	bl	8009df4 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 800a8c6:	b150      	cbz	r0, 800a8de <E131Bridge::Print()+0xaa>
 800a8c8:	230c      	movs	r3, #12
 800a8ca:	436b      	muls	r3, r5
 800a8cc:	f204 52a1 	addw	r2, r4, #1441	; 0x5a1
 800a8d0:	5cd3      	ldrb	r3, [r2, r3]
 800a8d2:	4629      	mov	r1, r5
 800a8d4:	4630      	mov	r0, r6
 800a8d6:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800a8da:	f7fe fe6f 	bl	80095bc <printf>
 800a8de:	b155      	cbz	r5, 800a8f6 <E131Bridge::Print()+0xc2>
 800a8e0:	f894 34fb 	ldrb.w	r3, [r4, #1275]	; 0x4fb
 800a8e4:	b113      	cbz	r3, 800a8ec <E131Bridge::Print()+0xb8>
 800a8e6:	480f      	ldr	r0, [pc, #60]	; (800a924 <E131Bridge::Print()+0xf0>)
 800a8e8:	f7fe fe68 	bl	80095bc <printf>
 800a8ec:	b00c      	add	sp, #48	; 0x30
 800a8ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a8f2:	2501      	movs	r5, #1
 800a8f4:	e7c0      	b.n	800a878 <E131Bridge::Print()+0x44>
 800a8f6:	2501      	movs	r5, #1
 800a8f8:	e7de      	b.n	800a8b8 <E131Bridge::Print()+0x84>
 800a8fa:	bf00      	nop
 800a8fc:	08014eb4 	stmdaeq	r1, {r2, r4, r5, r7, r9, sl, fp, lr}
 800a900:	0801506f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, ip, lr}
 800a904:	08014ebc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r9, sl, fp, lr}
 800a908:	08014ecf 	stmdaeq	r1, {r0, r1, r2, r3, r6, r7, r9, sl, fp, lr}
 800a90c:	08014edf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r7, r9, sl, fp, lr}
 800a910:	08014eac 	stmdaeq	r1, {r2, r3, r5, r7, r9, sl, fp, lr}
 800a914:	08014eb0 	stmdaeq	r1, {r4, r5, r7, r9, sl, fp, lr}
 800a918:	08014ee8 	stmdaeq	r1, {r3, r5, r6, r7, r9, sl, fp, lr}
 800a91c:	08014f07 	stmdaeq	r1, {r0, r1, r2, r8, r9, sl, fp, lr}
 800a920:	08014f0f 	stmdaeq	r1, {r0, r1, r2, r3, r8, r9, sl, fp, lr}
 800a924:	08014f2e 	stmdaeq	r1, {r1, r2, r3, r5, r8, r9, sl, fp, lr}

0800a928 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>:
 800a928:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a92a:	88c6      	ldrh	r6, [r0, #6]
 800a92c:	8885      	ldrh	r5, [r0, #4]
 800a92e:	42ae      	cmp	r6, r5
 800a930:	d216      	bcs.n	800a960 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x38>
 800a932:	4604      	mov	r4, r0
 800a934:	6800      	ldr	r0, [r0, #0]
 800a936:	1bad      	subs	r5, r5, r6
 800a938:	4430      	add	r0, r6
 800a93a:	7a26      	ldrb	r6, [r4, #8]
 800a93c:	b923      	cbnz	r3, 800a948 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x20>
 800a93e:	b926      	cbnz	r6, 800a94a <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x22>
 800a940:	9200      	str	r2, [sp, #0]
 800a942:	460b      	mov	r3, r1
 800a944:	4a09      	ldr	r2, [pc, #36]	; (800a96c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x44>)
 800a946:	e003      	b.n	800a950 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800a948:	b166      	cbz	r6, 800a964 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x3c>
 800a94a:	460b      	mov	r3, r1
 800a94c:	9200      	str	r2, [sp, #0]
 800a94e:	4a08      	ldr	r2, [pc, #32]	; (800a970 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x48>)
 800a950:	4629      	mov	r1, r5
 800a952:	f7fe fe5b 	bl	800960c <snprintf>
 800a956:	4285      	cmp	r5, r0
 800a958:	bfa2      	ittt	ge
 800a95a:	88e3      	ldrhge	r3, [r4, #6]
 800a95c:	181b      	addge	r3, r3, r0
 800a95e:	80e3      	strhge	r3, [r4, #6]
 800a960:	b002      	add	sp, #8
 800a962:	bd70      	pop	{r4, r5, r6, pc}
 800a964:	9200      	str	r2, [sp, #0]
 800a966:	460b      	mov	r3, r1
 800a968:	4a02      	ldr	r2, [pc, #8]	; (800a974 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x4c>)
 800a96a:	e7f1      	b.n	800a950 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800a96c:	08014f91 	stmdaeq	r1, {r0, r4, r7, r8, r9, sl, fp, lr}
 800a970:	08014f86 	stmdaeq	r1, {r1, r2, r7, r8, r9, sl, fp, lr}
 800a974:	08014f92 	stmdaeq	r1, {r1, r4, r7, r8, r9, sl, fp, lr}

0800a978 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>:
 800a978:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a97a:	460b      	mov	r3, r1
 800a97c:	8885      	ldrh	r5, [r0, #4]
 800a97e:	88c1      	ldrh	r1, [r0, #6]
 800a980:	42a9      	cmp	r1, r5
 800a982:	d214      	bcs.n	800a9ae <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x36>
 800a984:	4604      	mov	r4, r0
 800a986:	6800      	ldr	r0, [r0, #0]
 800a988:	1a6d      	subs	r5, r5, r1
 800a98a:	4408      	add	r0, r1
 800a98c:	7a21      	ldrb	r1, [r4, #8]
 800a98e:	b91a      	cbnz	r2, 800a998 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x20>
 800a990:	b919      	cbnz	r1, 800a99a <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x22>
 800a992:	4a0a      	ldr	r2, [pc, #40]	; (800a9bc <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x44>)
 800a994:	9100      	str	r1, [sp, #0]
 800a996:	e002      	b.n	800a99e <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 800a998:	b159      	cbz	r1, 800a9b2 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x3a>
 800a99a:	9200      	str	r2, [sp, #0]
 800a99c:	4a08      	ldr	r2, [pc, #32]	; (800a9c0 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x48>)
 800a99e:	4629      	mov	r1, r5
 800a9a0:	f7fe fe34 	bl	800960c <snprintf>
 800a9a4:	4285      	cmp	r5, r0
 800a9a6:	bfa2      	ittt	ge
 800a9a8:	88e3      	ldrhge	r3, [r4, #6]
 800a9aa:	181b      	addge	r3, r3, r0
 800a9ac:	80e3      	strhge	r3, [r4, #6]
 800a9ae:	b003      	add	sp, #12
 800a9b0:	bd30      	pop	{r4, r5, pc}
 800a9b2:	2201      	movs	r2, #1
 800a9b4:	9200      	str	r2, [sp, #0]
 800a9b6:	4a03      	ldr	r2, [pc, #12]	; (800a9c4 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x4c>)
 800a9b8:	e7f1      	b.n	800a99e <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 800a9ba:	bf00      	nop
 800a9bc:	08014fa2 	stmdaeq	r1, {r1, r5, r7, r8, r9, sl, fp, lr}
 800a9c0:	08014f99 	stmdaeq	r1, {r0, r3, r4, r7, r8, r9, sl, fp, lr}
 800a9c4:	08014fa3 	stmdaeq	r1, {r0, r1, r5, r7, r8, r9, sl, fp, lr}

0800a9c8 <E131Params::E131Params(E131ParamsStore*)>:
 800a9c8:	b510      	push	{r4, lr}
 800a9ca:	221a      	movs	r2, #26
 800a9cc:	4604      	mov	r4, r0
 800a9ce:	f840 1b04 	str.w	r1, [r0], #4
 800a9d2:	2100      	movs	r1, #0
 800a9d4:	f008 f896 	bl	8012b04 <memset>
 800a9d8:	2300      	movs	r3, #0
 800a9da:	2201      	movs	r2, #1
 800a9dc:	7323      	strb	r3, [r4, #12]
 800a9de:	72e2      	strb	r2, [r4, #11]
 800a9e0:	73a3      	strb	r3, [r4, #14]
 800a9e2:	2202      	movs	r2, #2
 800a9e4:	7423      	strb	r3, [r4, #16]
 800a9e6:	74a3      	strb	r3, [r4, #18]
 800a9e8:	f246 43ff 	movw	r3, #25855	; 0x64ff
 800a9ec:	7362      	strb	r2, [r4, #13]
 800a9ee:	83e3      	strh	r3, [r4, #30]
 800a9f0:	2203      	movs	r2, #3
 800a9f2:	f246 4364 	movw	r3, #25700	; 0x6464
 800a9f6:	73e2      	strb	r2, [r4, #15]
 800a9f8:	8423      	strh	r3, [r4, #32]
 800a9fa:	2204      	movs	r2, #4
 800a9fc:	2364      	movs	r3, #100	; 0x64
 800a9fe:	4620      	mov	r0, r4
 800aa00:	7462      	strb	r2, [r4, #17]
 800aa02:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 800aa06:	bd10      	pop	{r4, pc}

0800aa08 <E131Params::Load()>:
 800aa08:	b508      	push	{r3, lr}
 800aa0a:	2300      	movs	r3, #0
 800aa0c:	4601      	mov	r1, r0
 800aa0e:	6043      	str	r3, [r0, #4]
 800aa10:	6800      	ldr	r0, [r0, #0]
 800aa12:	b120      	cbz	r0, 800aa1e <E131Params::Load()+0x16>
 800aa14:	6803      	ldr	r3, [r0, #0]
 800aa16:	3104      	adds	r1, #4
 800aa18:	68db      	ldr	r3, [r3, #12]
 800aa1a:	4798      	blx	r3
 800aa1c:	2001      	movs	r0, #1
 800aa1e:	bd08      	pop	{r3, pc}

0800aa20 <E131Params::Load(char const*, unsigned int)>:
 800aa20:	6803      	ldr	r3, [r0, #0]
 800aa22:	b1d3      	cbz	r3, 800aa5a <E131Params::Load(char const*, unsigned int)+0x3a>
 800aa24:	2300      	movs	r3, #0
 800aa26:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800aa28:	460d      	mov	r5, r1
 800aa2a:	4616      	mov	r6, r2
 800aa2c:	4604      	mov	r4, r0
 800aa2e:	6043      	str	r3, [r0, #4]
 800aa30:	4602      	mov	r2, r0
 800aa32:	490a      	ldr	r1, [pc, #40]	; (800aa5c <E131Params::Load(char const*, unsigned int)+0x3c>)
 800aa34:	4668      	mov	r0, sp
 800aa36:	f007 f9fd 	bl	8011e34 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800aa3a:	4632      	mov	r2, r6
 800aa3c:	4629      	mov	r1, r5
 800aa3e:	4668      	mov	r0, sp
 800aa40:	f007 f9fc 	bl	8011e3c <ReadConfigFile::Read(char const*, unsigned int)>
 800aa44:	4621      	mov	r1, r4
 800aa46:	f851 0b04 	ldr.w	r0, [r1], #4
 800aa4a:	6803      	ldr	r3, [r0, #0]
 800aa4c:	689b      	ldr	r3, [r3, #8]
 800aa4e:	4798      	blx	r3
 800aa50:	4668      	mov	r0, sp
 800aa52:	f007 f9f2 	bl	8011e3a <ReadConfigFile::~ReadConfigFile()>
 800aa56:	b002      	add	sp, #8
 800aa58:	bd70      	pop	{r4, r5, r6, pc}
 800aa5a:	4770      	bx	lr
 800aa5c:	0800ac29 	stmdaeq	r0, {r0, r3, r5, sl, fp, sp, pc}

0800aa60 <E131Params::callbackFunction(char const*)>:
 800aa60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800aa64:	4604      	mov	r4, r0
 800aa66:	460e      	mov	r6, r1
 800aa68:	2500      	movs	r5, #0
 800aa6a:	f8df 91a4 	ldr.w	r9, [pc, #420]	; 800ac10 <E131Params::callbackFunction(char const*)+0x1b0>
 800aa6e:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 800ac14 <E131Params::callbackFunction(char const*)+0x1b4>
 800aa72:	f8df a1a4 	ldr.w	sl, [pc, #420]	; 800ac18 <E131Params::callbackFunction(char const*)+0x1b8>
 800aa76:	f8df b1a4 	ldr.w	fp, [pc, #420]	; 800ac1c <E131Params::callbackFunction(char const*)+0x1bc>
 800aa7a:	b087      	sub	sp, #28
 800aa7c:	4649      	mov	r1, r9
 800aa7e:	4630      	mov	r0, r6
 800aa80:	f10d 0202 	add.w	r2, sp, #2
 800aa84:	f007 facb 	bl	801201e <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800aa88:	b9d8      	cbnz	r0, 800aac2 <E131Params::callbackFunction(char const*)+0x62>
 800aa8a:	f64f 16fe 	movw	r6, #63998	; 0xf9fe
 800aa8e:	2110      	movs	r1, #16
 800aa90:	f8bd 0002 	ldrh.w	r0, [sp, #2]
 800aa94:	6863      	ldr	r3, [r4, #4]
 800aa96:	1e42      	subs	r2, r0, #1
 800aa98:	b292      	uxth	r2, r2
 800aa9a:	42b2      	cmp	r2, r6
 800aa9c:	ea4f 0245 	mov.w	r2, r5, lsl #1
 800aaa0:	fa01 f105 	lsl.w	r1, r1, r5
 800aaa4:	bf85      	ittet	hi
 800aaa6:	1912      	addhi	r2, r2, r4
 800aaa8:	3501      	addhi	r5, #1
 800aaaa:	1912      	addls	r2, r2, r4
 800aaac:	f8a2 500b 	strhhi.w	r5, [r2, #11]
 800aab0:	bf8e      	itee	hi
 800aab2:	438b      	bichi	r3, r1
 800aab4:	f8a2 000b 	strhls.w	r0, [r2, #11]
 800aab8:	430b      	orrls	r3, r1
 800aaba:	6063      	str	r3, [r4, #4]
 800aabc:	e02d      	b.n	800ab1a <E131Params::callbackFunction(char const*)+0xba>
 800aabe:	2501      	movs	r5, #1
 800aac0:	e7dc      	b.n	800aa7c <E131Params::callbackFunction(char const*)+0x1c>
 800aac2:	2712      	movs	r7, #18
 800aac4:	2303      	movs	r3, #3
 800aac6:	436f      	muls	r7, r5
 800aac8:	9301      	str	r3, [sp, #4]
 800aaca:	4630      	mov	r0, r6
 800aacc:	ab01      	add	r3, sp, #4
 800aace:	aa02      	add	r2, sp, #8
 800aad0:	eb0a 0107 	add.w	r1, sl, r7
 800aad4:	f007 f9e6 	bl	8011ea4 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800aad8:	bb10      	cbnz	r0, 800ab20 <E131Params::callbackFunction(char const*)+0xc0>
 800aada:	f44f 7380 	mov.w	r3, #256	; 0x100
 800aade:	f89d 1008 	ldrb.w	r1, [sp, #8]
 800aae2:	40ab      	lsls	r3, r5
 800aae4:	f041 0120 	orr.w	r1, r1, #32
 800aae8:	296c      	cmp	r1, #108	; 0x6c
 800aaea:	6862      	ldr	r2, [r4, #4]
 800aaec:	4425      	add	r5, r4
 800aaee:	d10f      	bne.n	800ab10 <E131Params::callbackFunction(char const*)+0xb0>
 800aaf0:	f89d 1009 	ldrb.w	r1, [sp, #9]
 800aaf4:	f041 0120 	orr.w	r1, r1, #32
 800aaf8:	2974      	cmp	r1, #116	; 0x74
 800aafa:	d109      	bne.n	800ab10 <E131Params::callbackFunction(char const*)+0xb0>
 800aafc:	f89d 100a 	ldrb.w	r1, [sp, #10]
 800ab00:	f041 0120 	orr.w	r1, r1, #32
 800ab04:	2970      	cmp	r1, #112	; 0x70
 800ab06:	d103      	bne.n	800ab10 <E131Params::callbackFunction(char const*)+0xb0>
 800ab08:	2101      	movs	r1, #1
 800ab0a:	7529      	strb	r1, [r5, #20]
 800ab0c:	4313      	orrs	r3, r2
 800ab0e:	e7d4      	b.n	800aaba <E131Params::callbackFunction(char const*)+0x5a>
 800ab10:	2100      	movs	r1, #0
 800ab12:	ea22 0203 	bic.w	r2, r2, r3
 800ab16:	7529      	strb	r1, [r5, #20]
 800ab18:	6062      	str	r2, [r4, #4]
 800ab1a:	b007      	add	sp, #28
 800ab1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ab20:	2305      	movs	r3, #5
 800ab22:	4630      	mov	r0, r6
 800ab24:	9301      	str	r3, [sp, #4]
 800ab26:	aa02      	add	r2, sp, #8
 800ab28:	ab01      	add	r3, sp, #4
 800ab2a:	eb0b 0107 	add.w	r1, fp, r7
 800ab2e:	f007 f9b9 	bl	8011ea4 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800ab32:	bb40      	cbnz	r0, 800ab86 <E131Params::callbackFunction(char const*)+0x126>
 800ab34:	2201      	movs	r2, #1
 800ab36:	7fa3      	ldrb	r3, [r4, #30]
 800ab38:	40aa      	lsls	r2, r5
 800ab3a:	ea23 0302 	bic.w	r3, r3, r2
 800ab3e:	f89d 2008 	ldrb.w	r2, [sp, #8]
 800ab42:	77a3      	strb	r3, [r4, #30]
 800ab44:	f042 0220 	orr.w	r2, r2, #32
 800ab48:	2a69      	cmp	r2, #105	; 0x69
 800ab4a:	d117      	bne.n	800ab7c <E131Params::callbackFunction(char const*)+0x11c>
 800ab4c:	f89d 2009 	ldrb.w	r2, [sp, #9]
 800ab50:	f042 0220 	orr.w	r2, r2, #32
 800ab54:	2a6e      	cmp	r2, #110	; 0x6e
 800ab56:	d111      	bne.n	800ab7c <E131Params::callbackFunction(char const*)+0x11c>
 800ab58:	f89d 200a 	ldrb.w	r2, [sp, #10]
 800ab5c:	f042 0220 	orr.w	r2, r2, #32
 800ab60:	2a70      	cmp	r2, #112	; 0x70
 800ab62:	d10b      	bne.n	800ab7c <E131Params::callbackFunction(char const*)+0x11c>
 800ab64:	f89d 200b 	ldrb.w	r2, [sp, #11]
 800ab68:	f042 0220 	orr.w	r2, r2, #32
 800ab6c:	2a75      	cmp	r2, #117	; 0x75
 800ab6e:	d105      	bne.n	800ab7c <E131Params::callbackFunction(char const*)+0x11c>
 800ab70:	f89d 200c 	ldrb.w	r2, [sp, #12]
 800ab74:	f042 0220 	orr.w	r2, r2, #32
 800ab78:	2a74      	cmp	r2, #116	; 0x74
 800ab7a:	d0ce      	beq.n	800ab1a <E131Params::callbackFunction(char const*)+0xba>
 800ab7c:	2201      	movs	r2, #1
 800ab7e:	40aa      	lsls	r2, r5
 800ab80:	4313      	orrs	r3, r2
 800ab82:	77a3      	strb	r3, [r4, #30]
 800ab84:	e7c9      	b.n	800ab1a <E131Params::callbackFunction(char const*)+0xba>
 800ab86:	4641      	mov	r1, r8
 800ab88:	4630      	mov	r0, r6
 800ab8a:	f10d 0201 	add.w	r2, sp, #1
 800ab8e:	f007 fa64 	bl	801205a <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800ab92:	b998      	cbnz	r0, 800abbc <E131Params::callbackFunction(char const*)+0x15c>
 800ab94:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 800ab98:	f89d 1001 	ldrb.w	r1, [sp, #1]
 800ab9c:	40aa      	lsls	r2, r5
 800ab9e:	1e48      	subs	r0, r1, #1
 800aba0:	b2c0      	uxtb	r0, r0
 800aba2:	28c7      	cmp	r0, #199	; 0xc7
 800aba4:	6863      	ldr	r3, [r4, #4]
 800aba6:	4425      	add	r5, r4
 800aba8:	d803      	bhi.n	800abb2 <E131Params::callbackFunction(char const*)+0x152>
 800abaa:	2964      	cmp	r1, #100	; 0x64
 800abac:	d001      	beq.n	800abb2 <E131Params::callbackFunction(char const*)+0x152>
 800abae:	77e9      	strb	r1, [r5, #31]
 800abb0:	e7ac      	b.n	800ab0c <E131Params::callbackFunction(char const*)+0xac>
 800abb2:	2164      	movs	r1, #100	; 0x64
 800abb4:	ea23 0302 	bic.w	r3, r3, r2
 800abb8:	77e9      	strb	r1, [r5, #31]
 800abba:	e77e      	b.n	800aaba <E131Params::callbackFunction(char const*)+0x5a>
 800abbc:	f109 0910 	add.w	r9, r9, #16
 800abc0:	f108 0812 	add.w	r8, r8, #18
 800abc4:	2d00      	cmp	r5, #0
 800abc6:	f43f af7a 	beq.w	800aabe <E131Params::callbackFunction(char const*)+0x5e>
 800abca:	4630      	mov	r0, r6
 800abcc:	4914      	ldr	r1, [pc, #80]	; (800ac20 <E131Params::callbackFunction(char const*)+0x1c0>)
 800abce:	f10d 0201 	add.w	r2, sp, #1
 800abd2:	f007 fa42 	bl	801205a <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800abd6:	b948      	cbnz	r0, 800abec <E131Params::callbackFunction(char const*)+0x18c>
 800abd8:	f89d 2001 	ldrb.w	r2, [sp, #1]
 800abdc:	6863      	ldr	r3, [r4, #4]
 800abde:	b112      	cbz	r2, 800abe6 <E131Params::callbackFunction(char const*)+0x186>
 800abe0:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 800abe4:	e769      	b.n	800aaba <E131Params::callbackFunction(char const*)+0x5a>
 800abe6:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800abea:	e766      	b.n	800aaba <E131Params::callbackFunction(char const*)+0x5a>
 800abec:	4630      	mov	r0, r6
 800abee:	490d      	ldr	r1, [pc, #52]	; (800ac24 <E131Params::callbackFunction(char const*)+0x1c4>)
 800abf0:	f10d 0201 	add.w	r2, sp, #1
 800abf4:	f007 fa31 	bl	801205a <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800abf8:	2800      	cmp	r0, #0
 800abfa:	d18e      	bne.n	800ab1a <E131Params::callbackFunction(char const*)+0xba>
 800abfc:	f89d 2001 	ldrb.w	r2, [sp, #1]
 800ac00:	6863      	ldr	r3, [r4, #4]
 800ac02:	b112      	cbz	r2, 800ac0a <E131Params::callbackFunction(char const*)+0x1aa>
 800ac04:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800ac08:	e757      	b.n	800aaba <E131Params::callbackFunction(char const*)+0x5a>
 800ac0a:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800ac0e:	e754      	b.n	800aaba <E131Params::callbackFunction(char const*)+0x5a>
 800ac10:	08016c44 	stmdaeq	r1, {r2, r6, sl, fp, sp, lr}
 800ac14:	08015012 	stmdaeq	r1, {r1, r4, ip, lr}
 800ac18:	08016c84 	stmdaeq	r1, {r2, r7, sl, fp, sp, lr}
 800ac1c:	08016ce7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, sl, fp, sp, lr}
 800ac20:	08014ff0 	stmdaeq	r1, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ac24:	08014fda 	stmdaeq	r1, {r1, r3, r4, r6, r7, r8, r9, sl, fp, lr}

0800ac28 <E131Params::staticCallbackFunction(void*, char const*)>:
 800ac28:	f7ff bf1a 	b.w	800aa60 <E131Params::callbackFunction(char const*)>

0800ac2c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)>:
 800ac2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ac30:	4604      	mov	r4, r0
 800ac32:	4615      	mov	r5, r2
 800ac34:	461e      	mov	r6, r3
 800ac36:	b087      	sub	sp, #28
 800ac38:	3004      	adds	r0, #4
 800ac3a:	2900      	cmp	r1, #0
 800ac3c:	d04a      	beq.n	800acd4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xa8>
 800ac3e:	221f      	movs	r2, #31
 800ac40:	f007 ff49 	bl	8012ad6 <memmove>
 800ac44:	462a      	mov	r2, r5
 800ac46:	4633      	mov	r3, r6
 800ac48:	4979      	ldr	r1, [pc, #484]	; (800ae30 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x204>)
 800ac4a:	a803      	add	r0, sp, #12
 800ac4c:	f007 f852 	bl	8011cf4 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800ac50:	7fa3      	ldrb	r3, [r4, #30]
 800ac52:	4e78      	ldr	r6, [pc, #480]	; (800ae34 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x208>)
 800ac54:	f013 0f01 	tst.w	r3, #1
 800ac58:	ea6f 0303 	mvn.w	r3, r3
 800ac5c:	4d76      	ldr	r5, [pc, #472]	; (800ae38 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x20c>)
 800ac5e:	bf0c      	ite	eq
 800ac60:	4632      	moveq	r2, r6
 800ac62:	462a      	movne	r2, r5
 800ac64:	4975      	ldr	r1, [pc, #468]	; (800ae3c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x210>)
 800ac66:	f003 0301 	and.w	r3, r3, #1
 800ac6a:	a803      	add	r0, sp, #12
 800ac6c:	f7ff fe5c 	bl	800a928 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800ac70:	7fa3      	ldrb	r3, [r4, #30]
 800ac72:	4973      	ldr	r1, [pc, #460]	; (800ae40 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x214>)
 800ac74:	f013 0f02 	tst.w	r3, #2
 800ac78:	ea6f 0353 	mvn.w	r3, r3, lsr #1
 800ac7c:	bf0c      	ite	eq
 800ac7e:	4632      	moveq	r2, r6
 800ac80:	462a      	movne	r2, r5
 800ac82:	f003 0301 	and.w	r3, r3, #1
 800ac86:	a803      	add	r0, sp, #12
 800ac88:	f7ff fe4e 	bl	800a928 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800ac8c:	2600      	movs	r6, #0
 800ac8e:	f8df a1b4 	ldr.w	sl, [pc, #436]	; 800ae44 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x218>
 800ac92:	4f6d      	ldr	r7, [pc, #436]	; (800ae48 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x21c>)
 800ac94:	f8df 81b4 	ldr.w	r8, [pc, #436]	; 800ae4c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x220>
 800ac98:	f8df 91b4 	ldr.w	r9, [pc, #436]	; 800ae50 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x224>
 800ac9c:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 800aca0:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800aca4:	eb04 0346 	add.w	r3, r4, r6, lsl #1
 800aca8:	42a9      	cmp	r1, r5
 800acaa:	f8b3 300b 	ldrh.w	r3, [r3, #11]
 800acae:	f8d4 c004 	ldr.w	ip, [r4, #4]
 800acb2:	d227      	bcs.n	800ad04 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xd8>
 800acb4:	2210      	movs	r2, #16
 800acb6:	9803      	ldr	r0, [sp, #12]
 800acb8:	40b2      	lsls	r2, r6
 800acba:	ea32 0c0c 	bics.w	ip, r2, ip
 800acbe:	4408      	add	r0, r1
 800acc0:	eba5 0501 	sub.w	r5, r5, r1
 800acc4:	f89d 1014 	ldrb.w	r1, [sp, #20]
 800acc8:	d00d      	beq.n	800ace6 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xba>
 800acca:	b971      	cbnz	r1, 800acea <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xbe>
 800accc:	9300      	str	r3, [sp, #0]
 800acce:	464a      	mov	r2, r9
 800acd0:	4653      	mov	r3, sl
 800acd2:	e00d      	b.n	800acf0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xc4>
 800acd4:	6823      	ldr	r3, [r4, #0]
 800acd6:	4601      	mov	r1, r0
 800acd8:	681a      	ldr	r2, [r3, #0]
 800acda:	4618      	mov	r0, r3
 800acdc:	68d2      	ldr	r2, [r2, #12]
 800acde:	4790      	blx	r2
 800ace0:	e7b0      	b.n	800ac44 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x18>
 800ace2:	2601      	movs	r6, #1
 800ace4:	e7da      	b.n	800ac9c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x70>
 800ace6:	2900      	cmp	r1, #0
 800ace8:	d058      	beq.n	800ad9c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x170>
 800acea:	9300      	str	r3, [sp, #0]
 800acec:	463a      	mov	r2, r7
 800acee:	4653      	mov	r3, sl
 800acf0:	4629      	mov	r1, r5
 800acf2:	f7fe fc8b 	bl	800960c <snprintf>
 800acf6:	4285      	cmp	r5, r0
 800acf8:	bfa2      	ittt	ge
 800acfa:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800acfe:	18c0      	addge	r0, r0, r3
 800ad00:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800ad04:	f10a 0a10 	add.w	sl, sl, #16
 800ad08:	2e00      	cmp	r6, #0
 800ad0a:	d0ea      	beq.n	800ace2 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xb6>
 800ad0c:	4951      	ldr	r1, [pc, #324]	; (800ae54 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x228>)
 800ad0e:	a803      	add	r0, sp, #12
 800ad10:	f007 f876 	bl	8011e00 <PropertiesBuilder::AddComment(char const*)>
 800ad14:	4e50      	ldr	r6, [pc, #320]	; (800ae58 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x22c>)
 800ad16:	7d22      	ldrb	r2, [r4, #20]
 800ad18:	4d50      	ldr	r5, [pc, #320]	; (800ae5c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x230>)
 800ad1a:	6863      	ldr	r3, [r4, #4]
 800ad1c:	2a00      	cmp	r2, #0
 800ad1e:	bf0c      	ite	eq
 800ad20:	4632      	moveq	r2, r6
 800ad22:	462a      	movne	r2, r5
 800ad24:	494e      	ldr	r1, [pc, #312]	; (800ae60 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x234>)
 800ad26:	f3c3 2300 	ubfx	r3, r3, #8, #1
 800ad2a:	a803      	add	r0, sp, #12
 800ad2c:	f7ff fdfc 	bl	800a928 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800ad30:	7d62      	ldrb	r2, [r4, #21]
 800ad32:	6863      	ldr	r3, [r4, #4]
 800ad34:	2a00      	cmp	r2, #0
 800ad36:	bf0c      	ite	eq
 800ad38:	4632      	moveq	r2, r6
 800ad3a:	462a      	movne	r2, r5
 800ad3c:	4949      	ldr	r1, [pc, #292]	; (800ae64 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x238>)
 800ad3e:	f3c3 2340 	ubfx	r3, r3, #9, #1
 800ad42:	a803      	add	r0, sp, #12
 800ad44:	f7ff fdf0 	bl	800a928 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800ad48:	4947      	ldr	r1, [pc, #284]	; (800ae68 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x23c>)
 800ad4a:	a803      	add	r0, sp, #12
 800ad4c:	f007 f858 	bl	8011e00 <PropertiesBuilder::AddComment(char const*)>
 800ad50:	2600      	movs	r6, #0
 800ad52:	f8df b118 	ldr.w	fp, [pc, #280]	; 800ae6c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x240>
 800ad56:	f8df 80f0 	ldr.w	r8, [pc, #240]	; 800ae48 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x21c>
 800ad5a:	f8df 90f0 	ldr.w	r9, [pc, #240]	; 800ae4c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x220>
 800ad5e:	f8df a0f0 	ldr.w	sl, [pc, #240]	; 800ae50 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x224>
 800ad62:	f104 071f 	add.w	r7, r4, #31
 800ad66:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 800ad6a:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800ad6e:	f817 3b01 	ldrb.w	r3, [r7], #1
 800ad72:	42a9      	cmp	r1, r5
 800ad74:	f8d4 c004 	ldr.w	ip, [r4, #4]
 800ad78:	d225      	bcs.n	800adc6 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x19a>
 800ad7a:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 800ad7e:	9803      	ldr	r0, [sp, #12]
 800ad80:	40b2      	lsls	r2, r6
 800ad82:	ea32 0c0c 	bics.w	ip, r2, ip
 800ad86:	4408      	add	r0, r1
 800ad88:	eba5 0501 	sub.w	r5, r5, r1
 800ad8c:	f89d 1014 	ldrb.w	r1, [sp, #20]
 800ad90:	d00a      	beq.n	800ada8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x17c>
 800ad92:	b959      	cbnz	r1, 800adac <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x180>
 800ad94:	9300      	str	r3, [sp, #0]
 800ad96:	4652      	mov	r2, sl
 800ad98:	465b      	mov	r3, fp
 800ad9a:	e00a      	b.n	800adb2 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x186>
 800ad9c:	9300      	str	r3, [sp, #0]
 800ad9e:	4642      	mov	r2, r8
 800ada0:	4653      	mov	r3, sl
 800ada2:	e7a5      	b.n	800acf0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xc4>
 800ada4:	2601      	movs	r6, #1
 800ada6:	e7de      	b.n	800ad66 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x13a>
 800ada8:	2900      	cmp	r1, #0
 800adaa:	d03c      	beq.n	800ae26 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1fa>
 800adac:	9300      	str	r3, [sp, #0]
 800adae:	4642      	mov	r2, r8
 800adb0:	465b      	mov	r3, fp
 800adb2:	4629      	mov	r1, r5
 800adb4:	f7fe fc2a 	bl	800960c <snprintf>
 800adb8:	4285      	cmp	r5, r0
 800adba:	bfa2      	ittt	ge
 800adbc:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800adc0:	18c0      	addge	r0, r0, r3
 800adc2:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800adc6:	f10b 0b12 	add.w	fp, fp, #18
 800adca:	2e00      	cmp	r6, #0
 800adcc:	d0ea      	beq.n	800ada4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x178>
 800adce:	4928      	ldr	r1, [pc, #160]	; (800ae70 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x244>)
 800add0:	a803      	add	r0, sp, #12
 800add2:	f007 f815 	bl	8011e00 <PropertiesBuilder::AddComment(char const*)>
 800add6:	6862      	ldr	r2, [r4, #4]
 800add8:	4926      	ldr	r1, [pc, #152]	; (800ae74 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x248>)
 800adda:	f3c2 3200 	ubfx	r2, r2, #12, #1
 800adde:	a803      	add	r0, sp, #12
 800ade0:	f7ff fdca 	bl	800a978 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800ade4:	6862      	ldr	r2, [r4, #4]
 800ade6:	4924      	ldr	r1, [pc, #144]	; (800ae78 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x24c>)
 800ade8:	f3c2 3240 	ubfx	r2, r2, #13, #1
 800adec:	a803      	add	r0, sp, #12
 800adee:	f7ff fdc3 	bl	800a978 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800adf2:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800adf6:	b17b      	cbz	r3, 800ae18 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1ec>
 800adf8:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800adfc:	9b03      	ldr	r3, [sp, #12]
 800adfe:	4413      	add	r3, r2
 800ae00:	227d      	movs	r2, #125	; 0x7d
 800ae02:	f803 2c01 	strb.w	r2, [r3, #-1]
 800ae06:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800ae0a:	9903      	ldr	r1, [sp, #12]
 800ae0c:	54ca      	strb	r2, [r1, r3]
 800ae0e:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800ae12:	3301      	adds	r3, #1
 800ae14:	f8ad 3012 	strh.w	r3, [sp, #18]
 800ae18:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800ae1c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800ae1e:	601a      	str	r2, [r3, #0]
 800ae20:	b007      	add	sp, #28
 800ae22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ae26:	9300      	str	r3, [sp, #0]
 800ae28:	464a      	mov	r2, r9
 800ae2a:	465b      	mov	r3, fp
 800ae2c:	e7c1      	b.n	800adb2 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x186>
 800ae2e:	bf00      	nop
 800ae30:	0801505a 	stmdaeq	r1, {r1, r3, r4, r6, ip, lr}
 800ae34:	08014faa 	stmdaeq	r1, {r1, r3, r5, r7, r8, r9, sl, fp, lr}
 800ae38:	08014fb0 	stmdaeq	r1, {r4, r5, r7, r8, r9, sl, fp, lr}
 800ae3c:	08016ce7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, sl, fp, sp, lr}
 800ae40:	08016cf9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, sl, fp, sp, lr}
 800ae44:	08016c44 	stmdaeq	r1, {r2, r6, sl, fp, sp, lr}
 800ae48:	08014f99 	stmdaeq	r1, {r0, r3, r4, r7, r8, r9, sl, fp, lr}
 800ae4c:	08014fa3 	stmdaeq	r1, {r0, r1, r5, r7, r8, r9, sl, fp, lr}
 800ae50:	08014fa2 	stmdaeq	r1, {r1, r5, r7, r8, r9, sl, fp, lr}
 800ae54:	08014fbf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r7, r8, r9, sl, fp, lr}
 800ae58:	08014fb7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r7, r8, r9, sl, fp, lr}
 800ae5c:	08014fbb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r7, r8, r9, sl, fp, lr}
 800ae60:	08016c84 	stmdaeq	r1, {r2, r7, sl, fp, sp, lr}
 800ae64:	08016c96 	stmdaeq	r1, {r1, r2, r4, r7, sl, fp, sp, lr}
 800ae68:	08014fca 	stmdaeq	r1, {r1, r3, r6, r7, r8, r9, sl, fp, lr}
 800ae6c:	08015012 	stmdaeq	r1, {r1, r4, ip, lr}
 800ae70:	08014fd4 	stmdaeq	r1, {r2, r4, r6, r7, r8, r9, sl, fp, lr}
 800ae74:	08014ff0 	stmdaeq	r1, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ae78:	08014fda 	stmdaeq	r1, {r1, r3, r4, r6, r7, r8, r9, sl, fp, lr}

0800ae7c <E131Params::Save(char*, unsigned int, unsigned int&)>:
 800ae7c:	b513      	push	{r0, r1, r4, lr}
 800ae7e:	6804      	ldr	r4, [r0, #0]
 800ae80:	b914      	cbnz	r4, 800ae88 <E131Params::Save(char*, unsigned int, unsigned int&)+0xc>
 800ae82:	601c      	str	r4, [r3, #0]
 800ae84:	b002      	add	sp, #8
 800ae86:	bd10      	pop	{r4, pc}
 800ae88:	9300      	str	r3, [sp, #0]
 800ae8a:	4613      	mov	r3, r2
 800ae8c:	460a      	mov	r2, r1
 800ae8e:	2100      	movs	r1, #0
 800ae90:	f7ff fecc 	bl	800ac2c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)>
 800ae94:	e7f6      	b.n	800ae84 <E131Params::Save(char*, unsigned int, unsigned int&)+0x8>

0800ae96 <E131Params::Set(E131Bridge*)>:
 800ae96:	6843      	ldr	r3, [r0, #4]
 800ae98:	b343      	cbz	r3, 800aeec <E131Params::Set(E131Bridge*)+0x56>
 800ae9a:	05da      	lsls	r2, r3, #23
 800ae9c:	bf44      	itt	mi
 800ae9e:	7d02      	ldrbmi	r2, [r0, #20]
 800aea0:	f8c1 254c 	strmi.w	r2, [r1, #1356]	; 0x54c
 800aea4:	03db      	lsls	r3, r3, #15
 800aea6:	d506      	bpl.n	800aeb6 <E131Params::Set(E131Bridge*)+0x20>
 800aea8:	7fc2      	ldrb	r2, [r0, #31]
 800aeaa:	1e53      	subs	r3, r2, #1
 800aeac:	b2db      	uxtb	r3, r3
 800aeae:	2bc7      	cmp	r3, #199	; 0xc7
 800aeb0:	bf98      	it	ls
 800aeb2:	f881 25a1 	strbls.w	r2, [r1, #1441]	; 0x5a1
 800aeb6:	6843      	ldr	r3, [r0, #4]
 800aeb8:	059a      	lsls	r2, r3, #22
 800aeba:	bf44      	itt	mi
 800aebc:	7d42      	ldrbmi	r2, [r0, #21]
 800aebe:	f8c1 2590 	strmi.w	r2, [r1, #1424]	; 0x590
 800aec2:	039b      	lsls	r3, r3, #14
 800aec4:	d507      	bpl.n	800aed6 <E131Params::Set(E131Bridge*)+0x40>
 800aec6:	f890 2020 	ldrb.w	r2, [r0, #32]
 800aeca:	1e53      	subs	r3, r2, #1
 800aecc:	b2db      	uxtb	r3, r3
 800aece:	2bc7      	cmp	r3, #199	; 0xc7
 800aed0:	bf98      	it	ls
 800aed2:	f881 25a1 	strbls.w	r2, [r1, #1441]	; 0x5a1
 800aed6:	6843      	ldr	r3, [r0, #4]
 800aed8:	04da      	lsls	r2, r3, #19
 800aeda:	bf44      	itt	mi
 800aedc:	2201      	movmi	r2, #1
 800aede:	f881 24f9 	strbmi.w	r2, [r1, #1273]	; 0x4f9
 800aee2:	049b      	lsls	r3, r3, #18
 800aee4:	bf44      	itt	mi
 800aee6:	2301      	movmi	r3, #1
 800aee8:	f881 34fa 	strbmi.w	r3, [r1, #1274]	; 0x4fa
 800aeec:	4770      	bx	lr

0800aeee <E131Params::Dump()>:
 800aeee:	4770      	bx	lr

0800aef0 <uuid_unparse_x>:
 800aef0:	4603      	mov	r3, r0
 800aef2:	b530      	push	{r4, r5, lr}
 800aef4:	4608      	mov	r0, r1
 800aef6:	4611      	mov	r1, r2
 800aef8:	681a      	ldr	r2, [r3, #0]
 800aefa:	b08f      	sub	sp, #60	; 0x3c
 800aefc:	ba12      	rev	r2, r2
 800aefe:	920a      	str	r2, [sp, #40]	; 0x28
 800af00:	889a      	ldrh	r2, [r3, #4]
 800af02:	891c      	ldrh	r4, [r3, #8]
 800af04:	ba52      	rev16	r2, r2
 800af06:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800af0a:	88da      	ldrh	r2, [r3, #6]
 800af0c:	ba64      	rev16	r4, r4
 800af0e:	ba52      	rev16	r2, r2
 800af10:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 800af14:	f8ad 4030 	strh.w	r4, [sp, #48]	; 0x30
 800af18:	f103 020a 	add.w	r2, r3, #10
 800af1c:	f10d 0432 	add.w	r4, sp, #50	; 0x32
 800af20:	3310      	adds	r3, #16
 800af22:	4293      	cmp	r3, r2
 800af24:	d122      	bne.n	800af6c <uuid_unparse_x+0x7c>
 800af26:	f89d 2037 	ldrb.w	r2, [sp, #55]	; 0x37
 800af2a:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 800af2e:	9208      	str	r2, [sp, #32]
 800af30:	f89d 2036 	ldrb.w	r2, [sp, #54]	; 0x36
 800af34:	0a1b      	lsrs	r3, r3, #8
 800af36:	9207      	str	r2, [sp, #28]
 800af38:	f89d 2035 	ldrb.w	r2, [sp, #53]	; 0x35
 800af3c:	9301      	str	r3, [sp, #4]
 800af3e:	9206      	str	r2, [sp, #24]
 800af40:	f89d 2034 	ldrb.w	r2, [sp, #52]	; 0x34
 800af44:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 800af48:	9205      	str	r2, [sp, #20]
 800af4a:	f89d 2033 	ldrb.w	r2, [sp, #51]	; 0x33
 800af4e:	9300      	str	r3, [sp, #0]
 800af50:	9204      	str	r2, [sp, #16]
 800af52:	f89d 2032 	ldrb.w	r2, [sp, #50]	; 0x32
 800af56:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 800af5a:	9203      	str	r2, [sp, #12]
 800af5c:	f89d 2030 	ldrb.w	r2, [sp, #48]	; 0x30
 800af60:	9202      	str	r2, [sp, #8]
 800af62:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800af64:	f7fe fb3a 	bl	80095dc <sprintf>
 800af68:	b00f      	add	sp, #60	; 0x3c
 800af6a:	bd30      	pop	{r4, r5, pc}
 800af6c:	f812 5b01 	ldrb.w	r5, [r2], #1
 800af70:	f804 5b01 	strb.w	r5, [r4], #1
 800af74:	e7d5      	b.n	800af22 <uuid_unparse_x+0x32>
	...

0800af78 <uuid_unparse>:
 800af78:	4a01      	ldr	r2, [pc, #4]	; (800af80 <uuid_unparse+0x8>)
 800af7a:	f7ff bfb9 	b.w	800aef0 <uuid_unparse_x>
 800af7e:	bf00      	nop
 800af80:	08015071 	stmdaeq	r1, {r0, r4, r5, r6, ip, lr}

0800af84 <LLRPDevice::~LLRPDevice()>:
 800af84:	4770      	bx	lr

0800af86 <LLRPDevice::CopyUID(unsigned char*)>:
 800af86:	4770      	bx	lr

0800af88 <LLRPDevice::CopyCID(unsigned char*)>:
 800af88:	4770      	bx	lr

0800af8a <LLRPDevice::LLRPHandleRdmCommand(unsigned char const*)>:
 800af8a:	2000      	movs	r0, #0
 800af8c:	4770      	bx	lr

0800af8e <LLRPDevice::~LLRPDevice()>:
 800af8e:	b510      	push	{r4, lr}
 800af90:	4604      	mov	r4, r0
 800af92:	f007 fcdd 	bl	8012950 <operator delete(void*)>
 800af96:	4620      	mov	r0, r4
 800af98:	bd10      	pop	{r4, pc}

0800af9a <memcpy.isra.0>:
 800af9a:	3801      	subs	r0, #1
 800af9c:	440a      	add	r2, r1
 800af9e:	4291      	cmp	r1, r2
 800afa0:	d100      	bne.n	800afa4 <memcpy.isra.0+0xa>
 800afa2:	4770      	bx	lr
 800afa4:	f811 3b01 	ldrb.w	r3, [r1], #1
 800afa8:	f800 3f01 	strb.w	r3, [r0, #1]!
 800afac:	e7f7      	b.n	800af9e <memcpy.isra.0+0x4>
	...

0800afb0 <LLRPDevice::LLRPDevice()>:
 800afb0:	b513      	push	{r0, r1, r4, lr}
 800afb2:	4604      	mov	r4, r0
 800afb4:	4b09      	ldr	r3, [pc, #36]	; (800afdc <LLRPDevice::LLRPDevice()+0x2c>)
 800afb6:	a901      	add	r1, sp, #4
 800afb8:	6003      	str	r3, [r0, #0]
 800afba:	4809      	ldr	r0, [pc, #36]	; (800afe0 <LLRPDevice::LLRPDevice()+0x30>)
 800afbc:	f007 fcd0 	bl	8012960 <inet_aton>
 800afc0:	9a01      	ldr	r2, [sp, #4]
 800afc2:	4b08      	ldr	r3, [pc, #32]	; (800afe4 <LLRPDevice::LLRPDevice()+0x34>)
 800afc4:	a901      	add	r1, sp, #4
 800afc6:	4808      	ldr	r0, [pc, #32]	; (800afe8 <LLRPDevice::LLRPDevice()+0x38>)
 800afc8:	601a      	str	r2, [r3, #0]
 800afca:	f007 fcc9 	bl	8012960 <inet_aton>
 800afce:	4620      	mov	r0, r4
 800afd0:	4b06      	ldr	r3, [pc, #24]	; (800afec <LLRPDevice::LLRPDevice()+0x3c>)
 800afd2:	9a01      	ldr	r2, [sp, #4]
 800afd4:	601a      	str	r2, [r3, #0]
 800afd6:	b002      	add	sp, #8
 800afd8:	bd10      	pop	{r4, pc}
 800afda:	bf00      	nop
 800afdc:	08015154 	stmdaeq	r1, {r2, r4, r6, r8, ip, lr}
 800afe0:	080150a2 	stmdaeq	r1, {r1, r5, r7, ip, lr}
 800afe4:	20000d20 	andcs	r0, r0, r0, lsr #26
 800afe8:	080150b2 	stmdaeq	r1, {r1, r4, r5, r7, ip, lr}
 800afec:	20000d24 	andcs	r0, r0, r4, lsr #26

0800aff0 <LLRPDevice::HandleRequestMessage()>:
 800aff0:	b570      	push	{r4, r5, r6, lr}
 800aff2:	4b23      	ldr	r3, [pc, #140]	; (800b080 <LLRPDevice::HandleRequestMessage()+0x90>)
 800aff4:	b086      	sub	sp, #24
 800aff6:	681c      	ldr	r4, [r3, #0]
 800aff8:	4605      	mov	r5, r0
 800affa:	f104 0617 	add.w	r6, r4, #23
 800affe:	2210      	movs	r2, #16
 800b000:	4631      	mov	r1, r6
 800b002:	a802      	add	r0, sp, #8
 800b004:	f7ff ffc9 	bl	800af9a <memcpy.isra.0>
 800b008:	2343      	movs	r3, #67	; 0x43
 800b00a:	74a3      	strb	r3, [r4, #18]
 800b00c:	682b      	ldr	r3, [r5, #0]
 800b00e:	4631      	mov	r1, r6
 800b010:	4628      	mov	r0, r5
 800b012:	68db      	ldr	r3, [r3, #12]
 800b014:	4798      	blx	r3
 800b016:	232c      	movs	r3, #44	; 0x2c
 800b018:	f884 3029 	strb.w	r3, [r4, #41]	; 0x29
 800b01c:	2300      	movs	r3, #0
 800b01e:	f884 302a 	strb.w	r3, [r4, #42]	; 0x2a
 800b022:	f884 302b 	strb.w	r3, [r4, #43]	; 0x2b
 800b026:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 800b02a:	2302      	movs	r3, #2
 800b02c:	2210      	movs	r2, #16
 800b02e:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 800b032:	a902      	add	r1, sp, #8
 800b034:	f104 002e 	add.w	r0, r4, #46	; 0x2e
 800b038:	f7ff ffaf 	bl	800af9a <memcpy.isra.0>
 800b03c:	2311      	movs	r3, #17
 800b03e:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800b042:	2301      	movs	r3, #1
 800b044:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800b048:	682b      	ldr	r3, [r5, #0]
 800b04a:	4628      	mov	r0, r5
 800b04c:	f104 0146 	add.w	r1, r4, #70	; 0x46
 800b050:	689b      	ldr	r3, [r3, #8]
 800b052:	4798      	blx	r3
 800b054:	4b0b      	ldr	r3, [pc, #44]	; (800b084 <LLRPDevice::HandleRequestMessage()+0x94>)
 800b056:	f104 014c 	add.w	r1, r4, #76	; 0x4c
 800b05a:	6818      	ldr	r0, [r3, #0]
 800b05c:	f005 f85a 	bl	8010114 <Network::MacAddressCopyTo(unsigned char*)>
 800b060:	23ff      	movs	r3, #255	; 0xff
 800b062:	f884 3052 	strb.w	r3, [r4, #82]	; 0x52
 800b066:	f241 53c1 	movw	r3, #5569	; 0x15c1
 800b06a:	4807      	ldr	r0, [pc, #28]	; (800b088 <LLRPDevice::HandleRequestMessage()+0x98>)
 800b06c:	9300      	str	r3, [sp, #0]
 800b06e:	4b07      	ldr	r3, [pc, #28]	; (800b08c <LLRPDevice::HandleRequestMessage()+0x9c>)
 800b070:	2253      	movs	r2, #83	; 0x53
 800b072:	4621      	mov	r1, r4
 800b074:	681b      	ldr	r3, [r3, #0]
 800b076:	7800      	ldrb	r0, [r0, #0]
 800b078:	f004 fb80 	bl	800f77c <udp_send>
 800b07c:	b006      	add	sp, #24
 800b07e:	bd70      	pop	{r4, r5, r6, pc}
 800b080:	20000d28 	andcs	r0, r0, r8, lsr #26
 800b084:	2000a008 	andcs	sl, r0, r8
 800b088:	20000004 	andcs	r0, r0, r4
 800b08c:	20000d24 	andcs	r0, r0, r4, lsr #26

0800b090 <LLRPDevice::HandleRdmCommand()>:
 800b090:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b094:	4b22      	ldr	r3, [pc, #136]	; (800b120 <LLRPDevice::HandleRdmCommand()+0x90>)
 800b096:	b086      	sub	sp, #24
 800b098:	681c      	ldr	r4, [r3, #0]
 800b09a:	6803      	ldr	r3, [r0, #0]
 800b09c:	f104 0946 	add.w	r9, r4, #70	; 0x46
 800b0a0:	4649      	mov	r1, r9
 800b0a2:	691b      	ldr	r3, [r3, #16]
 800b0a4:	4607      	mov	r7, r0
 800b0a6:	4798      	blx	r3
 800b0a8:	4605      	mov	r5, r0
 800b0aa:	2800      	cmp	r0, #0
 800b0ac:	d034      	beq.n	800b118 <LLRPDevice::HandleRdmCommand()+0x88>
 800b0ae:	7803      	ldrb	r3, [r0, #0]
 800b0b0:	2bcc      	cmp	r3, #204	; 0xcc
 800b0b2:	d131      	bne.n	800b118 <LLRPDevice::HandleRdmCommand()+0x88>
 800b0b4:	f104 0a17 	add.w	sl, r4, #23
 800b0b8:	2210      	movs	r2, #16
 800b0ba:	4651      	mov	r1, sl
 800b0bc:	a802      	add	r0, sp, #8
 800b0be:	f7ff ff6c 	bl	800af9a <memcpy.isra.0>
 800b0c2:	78ae      	ldrb	r6, [r5, #2]
 800b0c4:	4651      	mov	r1, sl
 800b0c6:	f106 0837 	add.w	r8, r6, #55	; 0x37
 800b0ca:	fa5f f888 	uxtb.w	r8, r8
 800b0ce:	f884 8012 	strb.w	r8, [r4, #18]
 800b0d2:	683b      	ldr	r3, [r7, #0]
 800b0d4:	4638      	mov	r0, r7
 800b0d6:	68db      	ldr	r3, [r3, #12]
 800b0d8:	4798      	blx	r3
 800b0da:	f106 0320 	add.w	r3, r6, #32
 800b0de:	2210      	movs	r2, #16
 800b0e0:	f884 3029 	strb.w	r3, [r4, #41]	; 0x29
 800b0e4:	a902      	add	r1, sp, #8
 800b0e6:	f104 002e 	add.w	r0, r4, #46	; 0x2e
 800b0ea:	f7ff ff56 	bl	800af9a <memcpy.isra.0>
 800b0ee:	1d73      	adds	r3, r6, #5
 800b0f0:	1c72      	adds	r2, r6, #1
 800b0f2:	4648      	mov	r0, r9
 800b0f4:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800b0f8:	b2d2      	uxtb	r2, r2
 800b0fa:	1c69      	adds	r1, r5, #1
 800b0fc:	f7ff ff4d 	bl	800af9a <memcpy.isra.0>
 800b100:	f241 53c1 	movw	r3, #5569	; 0x15c1
 800b104:	4807      	ldr	r0, [pc, #28]	; (800b124 <LLRPDevice::HandleRdmCommand()+0x94>)
 800b106:	9300      	str	r3, [sp, #0]
 800b108:	4b07      	ldr	r3, [pc, #28]	; (800b128 <LLRPDevice::HandleRdmCommand()+0x98>)
 800b10a:	4621      	mov	r1, r4
 800b10c:	681b      	ldr	r3, [r3, #0]
 800b10e:	7800      	ldrb	r0, [r0, #0]
 800b110:	f108 0210 	add.w	r2, r8, #16
 800b114:	f004 fb32 	bl	800f77c <udp_send>
 800b118:	b006      	add	sp, #24
 800b11a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800b11e:	bf00      	nop
 800b120:	20000d28 	andcs	r0, r0, r8, lsr #26
 800b124:	20000004 	andcs	r0, r0, r4
 800b128:	20000d24 	andcs	r0, r0, r4, lsr #26

0800b12c <LLRPDevice::Run()>:
 800b12c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b12e:	4604      	mov	r4, r0
 800b130:	4d0e      	ldr	r5, [pc, #56]	; (800b16c <LLRPDevice::Run()+0x40>)
 800b132:	480f      	ldr	r0, [pc, #60]	; (800b170 <LLRPDevice::Run()+0x44>)
 800b134:	4629      	mov	r1, r5
 800b136:	4a0f      	ldr	r2, [pc, #60]	; (800b174 <LLRPDevice::Run()+0x48>)
 800b138:	7800      	ldrb	r0, [r0, #0]
 800b13a:	f10d 0306 	add.w	r3, sp, #6
 800b13e:	f004 faf7 	bl	800f730 <udp_recv2>
 800b142:	2841      	cmp	r0, #65	; 0x41
 800b144:	d908      	bls.n	800b158 <LLRPDevice::Run()+0x2c>
 800b146:	682b      	ldr	r3, [r5, #0]
 800b148:	f8d3 302a 	ldr.w	r3, [r3, #42]	; 0x2a
 800b14c:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800b150:	ba1a      	rev	r2, r3
 800b152:	d003      	beq.n	800b15c <LLRPDevice::Run()+0x30>
 800b154:	2a03      	cmp	r2, #3
 800b156:	d005      	beq.n	800b164 <LLRPDevice::Run()+0x38>
 800b158:	b003      	add	sp, #12
 800b15a:	bd30      	pop	{r4, r5, pc}
 800b15c:	4620      	mov	r0, r4
 800b15e:	f7ff ff47 	bl	800aff0 <LLRPDevice::HandleRequestMessage()>
 800b162:	e7f9      	b.n	800b158 <LLRPDevice::Run()+0x2c>
 800b164:	4620      	mov	r0, r4
 800b166:	f7ff ff93 	bl	800b090 <LLRPDevice::HandleRdmCommand()>
 800b16a:	e7f5      	b.n	800b158 <LLRPDevice::Run()+0x2c>
 800b16c:	20000d28 	andcs	r0, r0, r8, lsr #26
 800b170:	20000004 	andcs	r0, r0, r4
 800b174:	20000d1c 	andcs	r0, r0, ip, lsl sp

0800b178 <LLRPDevice::Print()>:
 800b178:	b507      	push	{r0, r1, r2, lr}
 800b17a:	4811      	ldr	r0, [pc, #68]	; (800b1c0 <LLRPDevice::Print()+0x48>)
 800b17c:	f7fe fa1e 	bl	80095bc <printf>
 800b180:	f241 51c1 	movw	r1, #5569	; 0x15c1
 800b184:	480f      	ldr	r0, [pc, #60]	; (800b1c4 <LLRPDevice::Print()+0x4c>)
 800b186:	f7fe fa19 	bl	80095bc <printf>
 800b18a:	4b0f      	ldr	r3, [pc, #60]	; (800b1c8 <LLRPDevice::Print()+0x50>)
 800b18c:	480f      	ldr	r0, [pc, #60]	; (800b1cc <LLRPDevice::Print()+0x54>)
 800b18e:	6819      	ldr	r1, [r3, #0]
 800b190:	0e0b      	lsrs	r3, r1, #24
 800b192:	9300      	str	r3, [sp, #0]
 800b194:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800b198:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800b19c:	b2c9      	uxtb	r1, r1
 800b19e:	f7fe fa0d 	bl	80095bc <printf>
 800b1a2:	4b0b      	ldr	r3, [pc, #44]	; (800b1d0 <LLRPDevice::Print()+0x58>)
 800b1a4:	480b      	ldr	r0, [pc, #44]	; (800b1d4 <LLRPDevice::Print()+0x5c>)
 800b1a6:	6819      	ldr	r1, [r3, #0]
 800b1a8:	0e0b      	lsrs	r3, r1, #24
 800b1aa:	9300      	str	r3, [sp, #0]
 800b1ac:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800b1b0:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800b1b4:	b2c9      	uxtb	r1, r1
 800b1b6:	f7fe fa01 	bl	80095bc <printf>
 800b1ba:	b003      	add	sp, #12
 800b1bc:	f85d fb04 	ldr.w	pc, [sp], #4
 800b1c0:	080150c2 	stmdaeq	r1, {r1, r6, r7, ip, lr}
 800b1c4:	080150dd 	stmdaeq	r1, {r0, r2, r3, r4, r6, r7, ip, lr}
 800b1c8:	20000d20 	andcs	r0, r0, r0, lsr #26
 800b1cc:	080150fb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r7, ip, lr}
 800b1d0:	20000d24 	andcs	r0, r0, r4, lsr #26
 800b1d4:	08015122 	stmdaeq	r1, {r1, r5, r8, ip, lr}

0800b1d8 <RDMNetDevice::Print()>:
 800b1d8:	2300      	movs	r3, #0
 800b1da:	b510      	push	{r4, lr}
 800b1dc:	4604      	mov	r4, r0
 800b1de:	b08a      	sub	sp, #40	; 0x28
 800b1e0:	4669      	mov	r1, sp
 800b1e2:	480a      	ldr	r0, [pc, #40]	; (800b20c <RDMNetDevice::Print()+0x34>)
 800b1e4:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800b1e8:	f7ff fec6 	bl	800af78 <uuid_unparse>
 800b1ec:	4808      	ldr	r0, [pc, #32]	; (800b210 <RDMNetDevice::Print()+0x38>)
 800b1ee:	f7fe f9e5 	bl	80095bc <printf>
 800b1f2:	4669      	mov	r1, sp
 800b1f4:	4807      	ldr	r0, [pc, #28]	; (800b214 <RDMNetDevice::Print()+0x3c>)
 800b1f6:	f7fe f9e1 	bl	80095bc <printf>
 800b1fa:	f104 00cc 	add.w	r0, r4, #204	; 0xcc
 800b1fe:	f7ff ffbb 	bl	800b178 <LLRPDevice::Print()>
 800b202:	4620      	mov	r0, r4
 800b204:	f000 fa62 	bl	800b6cc <RDMDeviceResponder::Print()>
 800b208:	b00a      	add	sp, #40	; 0x28
 800b20a:	bd10      	pop	{r4, pc}
 800b20c:	20000e2b 	andcs	r0, r0, fp, lsr #28
 800b210:	0801519a 	stmdaeq	r1, {r1, r3, r4, r7, r8, ip, lr}
 800b214:	080151a2 	stmdaeq	r1, {r1, r5, r7, r8, ip, lr}

0800b218 <RDMSensors::RDMSensors()>:
 800b218:	2200      	movs	r2, #0
 800b21a:	6002      	str	r2, [r0, #0]
 800b21c:	7102      	strb	r2, [r0, #4]
 800b21e:	4a01      	ldr	r2, [pc, #4]	; (800b224 <RDMSensors::RDMSensors()+0xc>)
 800b220:	6010      	str	r0, [r2, #0]
 800b222:	4770      	bx	lr
 800b224:	20000e3c 	andcs	r0, r0, ip, lsr lr

0800b228 <RDMSensors::~RDMSensors()>:
 800b228:	b570      	push	{r4, r5, r6, lr}
 800b22a:	2500      	movs	r5, #0
 800b22c:	4604      	mov	r4, r0
 800b22e:	462e      	mov	r6, r5
 800b230:	7923      	ldrb	r3, [r4, #4]
 800b232:	6820      	ldr	r0, [r4, #0]
 800b234:	42ab      	cmp	r3, r5
 800b236:	d804      	bhi.n	800b242 <RDMSensors::~RDMSensors()+0x1a>
 800b238:	b108      	cbz	r0, 800b23e <RDMSensors::~RDMSensors()+0x16>
 800b23a:	f007 fb8b 	bl	8012954 <operator delete[](void*)>
 800b23e:	4620      	mov	r0, r4
 800b240:	bd70      	pop	{r4, r5, r6, pc}
 800b242:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 800b246:	b128      	cbz	r0, 800b254 <RDMSensors::~RDMSensors()+0x2c>
 800b248:	6803      	ldr	r3, [r0, #0]
 800b24a:	685b      	ldr	r3, [r3, #4]
 800b24c:	4798      	blx	r3
 800b24e:	6823      	ldr	r3, [r4, #0]
 800b250:	f843 6025 	str.w	r6, [r3, r5, lsl #2]
 800b254:	3501      	adds	r5, #1
 800b256:	e7eb      	b.n	800b230 <RDMSensors::~RDMSensors()+0x8>

0800b258 <RDMSubDevices::RDMSubDevices()>:
 800b258:	2200      	movs	r2, #0
 800b25a:	6002      	str	r2, [r0, #0]
 800b25c:	8082      	strh	r2, [r0, #4]
 800b25e:	4a01      	ldr	r2, [pc, #4]	; (800b264 <RDMSubDevices::RDMSubDevices()+0xc>)
 800b260:	6010      	str	r0, [r2, #0]
 800b262:	4770      	bx	lr
 800b264:	20000e40 	andcs	r0, r0, r0, asr #28

0800b268 <RDMSubDevices::~RDMSubDevices()>:
 800b268:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b26a:	2500      	movs	r5, #0
 800b26c:	4604      	mov	r4, r0
 800b26e:	462e      	mov	r6, r5
 800b270:	88a3      	ldrh	r3, [r4, #4]
 800b272:	6820      	ldr	r0, [r4, #0]
 800b274:	42ab      	cmp	r3, r5
 800b276:	d804      	bhi.n	800b282 <RDMSubDevices::~RDMSubDevices()+0x1a>
 800b278:	b108      	cbz	r0, 800b27e <RDMSubDevices::~RDMSubDevices()+0x16>
 800b27a:	f007 fb6b 	bl	8012954 <operator delete[](void*)>
 800b27e:	4620      	mov	r0, r4
 800b280:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b282:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 800b286:	00af      	lsls	r7, r5, #2
 800b288:	b110      	cbz	r0, 800b290 <RDMSubDevices::~RDMSubDevices()+0x28>
 800b28a:	6803      	ldr	r3, [r0, #0]
 800b28c:	685b      	ldr	r3, [r3, #4]
 800b28e:	4798      	blx	r3
 800b290:	6823      	ldr	r3, [r4, #0]
 800b292:	3501      	adds	r5, #1
 800b294:	51de      	str	r6, [r3, r7]
 800b296:	e7eb      	b.n	800b270 <RDMSubDevices::~RDMSubDevices()+0x8>

0800b298 <RDMSubDevices::GetInfo(unsigned short)>:
 800b298:	6803      	ldr	r3, [r0, #0]
 800b29a:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 800b29e:	3901      	subs	r1, #1
 800b2a0:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800b2a4:	3010      	adds	r0, #16
 800b2a6:	4770      	bx	lr

0800b2a8 <RDMSubDevices::GetLabel(unsigned short, TRDMDeviceInfoData*)>:
 800b2a8:	f101 4380 	add.w	r3, r1, #1073741824	; 0x40000000
 800b2ac:	6800      	ldr	r0, [r0, #0]
 800b2ae:	3b01      	subs	r3, #1
 800b2b0:	4611      	mov	r1, r2
 800b2b2:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 800b2b6:	f000 b82f 	b.w	800b318 <RDMSubDevice::GetLabel(TRDMDeviceInfoData*)>

0800b2ba <RDMSubDevices::SetLabel(unsigned short, char const*, unsigned char)>:
 800b2ba:	b410      	push	{r4}
 800b2bc:	460c      	mov	r4, r1
 800b2be:	6800      	ldr	r0, [r0, #0]
 800b2c0:	f104 4480 	add.w	r4, r4, #1073741824	; 0x40000000
 800b2c4:	3c01      	subs	r4, #1
 800b2c6:	4611      	mov	r1, r2
 800b2c8:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
 800b2cc:	461a      	mov	r2, r3
 800b2ce:	bc10      	pop	{r4}
 800b2d0:	f000 b837 	b.w	800b342 <RDMSubDevice::SetLabel(char const*, unsigned char)>

0800b2d4 <RDMSubDevices::GetFactoryDefaults()>:
 800b2d4:	b538      	push	{r3, r4, r5, lr}
 800b2d6:	4605      	mov	r5, r0
 800b2d8:	2400      	movs	r4, #0
 800b2da:	88ab      	ldrh	r3, [r5, #4]
 800b2dc:	42a3      	cmp	r3, r4
 800b2de:	d801      	bhi.n	800b2e4 <RDMSubDevices::GetFactoryDefaults()+0x10>
 800b2e0:	2001      	movs	r0, #1
 800b2e2:	e009      	b.n	800b2f8 <RDMSubDevices::GetFactoryDefaults()+0x24>
 800b2e4:	682b      	ldr	r3, [r5, #0]
 800b2e6:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 800b2ea:	b908      	cbnz	r0, 800b2f0 <RDMSubDevices::GetFactoryDefaults()+0x1c>
 800b2ec:	3401      	adds	r4, #1
 800b2ee:	e7f4      	b.n	800b2da <RDMSubDevices::GetFactoryDefaults()+0x6>
 800b2f0:	f000 f85c 	bl	800b3ac <RDMSubDevice::GetFactoryDefaults()>
 800b2f4:	2800      	cmp	r0, #0
 800b2f6:	d1f9      	bne.n	800b2ec <RDMSubDevices::GetFactoryDefaults()+0x18>
 800b2f8:	bd38      	pop	{r3, r4, r5, pc}

0800b2fa <RDMSubDevices::SetFactoryDefaults()>:
 800b2fa:	b538      	push	{r3, r4, r5, lr}
 800b2fc:	4605      	mov	r5, r0
 800b2fe:	2400      	movs	r4, #0
 800b300:	88ab      	ldrh	r3, [r5, #4]
 800b302:	42a3      	cmp	r3, r4
 800b304:	d800      	bhi.n	800b308 <RDMSubDevices::SetFactoryDefaults()+0xe>
 800b306:	bd38      	pop	{r3, r4, r5, pc}
 800b308:	682b      	ldr	r3, [r5, #0]
 800b30a:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 800b30e:	b108      	cbz	r0, 800b314 <RDMSubDevices::SetFactoryDefaults()+0x1a>
 800b310:	f000 f826 	bl	800b360 <RDMSubDevice::SetFactoryDefaults()>
 800b314:	3401      	adds	r4, #1
 800b316:	e7f3      	b.n	800b300 <RDMSubDevices::SetFactoryDefaults()+0x6>

0800b318 <RDMSubDevice::GetLabel(TRDMDeviceInfoData*)>:
 800b318:	f100 0316 	add.w	r3, r0, #22
 800b31c:	600b      	str	r3, [r1, #0]
 800b31e:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800b322:	710b      	strb	r3, [r1, #4]
 800b324:	4770      	bx	lr

0800b326 <RDMSubDevice::SetLabel(char const*)>:
 800b326:	2300      	movs	r3, #0
 800b328:	b510      	push	{r4, lr}
 800b32a:	f100 0416 	add.w	r4, r0, #22
 800b32e:	5cca      	ldrb	r2, [r1, r3]
 800b330:	b122      	cbz	r2, 800b33c <RDMSubDevice::SetLabel(char const*)+0x16>
 800b332:	3301      	adds	r3, #1
 800b334:	2b20      	cmp	r3, #32
 800b336:	f804 2b01 	strb.w	r2, [r4], #1
 800b33a:	d1f8      	bne.n	800b32e <RDMSubDevice::SetLabel(char const*)+0x8>
 800b33c:	f880 3036 	strb.w	r3, [r0, #54]	; 0x36
 800b340:	bd10      	pop	{r4, pc}

0800b342 <RDMSubDevice::SetLabel(char const*, unsigned char)>:
 800b342:	2300      	movs	r3, #0
 800b344:	b530      	push	{r4, r5, lr}
 800b346:	f100 0416 	add.w	r4, r0, #22
 800b34a:	429a      	cmp	r2, r3
 800b34c:	d905      	bls.n	800b35a <RDMSubDevice::SetLabel(char const*, unsigned char)+0x18>
 800b34e:	5ccd      	ldrb	r5, [r1, r3]
 800b350:	3301      	adds	r3, #1
 800b352:	2b20      	cmp	r3, #32
 800b354:	f804 5b01 	strb.w	r5, [r4], #1
 800b358:	d1f7      	bne.n	800b34a <RDMSubDevice::SetLabel(char const*, unsigned char)+0x8>
 800b35a:	f880 3036 	strb.w	r3, [r0, #54]	; 0x36
 800b35e:	bd30      	pop	{r4, r5, pc}

0800b360 <RDMSubDevice::SetFactoryDefaults()>:
 800b360:	7a03      	ldrb	r3, [r0, #8]
 800b362:	b510      	push	{r4, lr}
 800b364:	b94b      	cbnz	r3, 800b37a <RDMSubDevice::SetFactoryDefaults()+0x1a>
 800b366:	f100 0138 	add.w	r1, r0, #56	; 0x38
 800b36a:	f7ff ffdc 	bl	800b326 <RDMSubDevice::SetLabel(char const*)>
 800b36e:	8983      	ldrh	r3, [r0, #12]
 800b370:	8243      	strh	r3, [r0, #18]
 800b372:	7b83      	ldrb	r3, [r0, #14]
 800b374:	7503      	strb	r3, [r0, #20]
 800b376:	2301      	movs	r3, #1
 800b378:	7203      	strb	r3, [r0, #8]
 800b37a:	bd10      	pop	{r4, pc}

0800b37c <RDMSubDevice::CalculateChecksum()>:
 800b37c:	4602      	mov	r2, r0
 800b37e:	b510      	push	{r4, lr}
 800b380:	8a43      	ldrh	r3, [r0, #18]
 800b382:	7d01      	ldrb	r1, [r0, #20]
 800b384:	f892 4036 	ldrb.w	r4, [r2, #54]	; 0x36
 800b388:	440b      	add	r3, r1
 800b38a:	b298      	uxth	r0, r3
 800b38c:	f102 0316 	add.w	r3, r2, #22
 800b390:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
 800b394:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
 800b398:	32ea      	adds	r2, #234	; 0xea
 800b39a:	18d1      	adds	r1, r2, r3
 800b39c:	428c      	cmp	r4, r1
 800b39e:	d800      	bhi.n	800b3a2 <RDMSubDevice::CalculateChecksum()+0x26>
 800b3a0:	bd10      	pop	{r4, pc}
 800b3a2:	f813 1b01 	ldrb.w	r1, [r3], #1
 800b3a6:	4408      	add	r0, r1
 800b3a8:	b280      	uxth	r0, r0
 800b3aa:	e7f6      	b.n	800b39a <RDMSubDevice::CalculateChecksum()+0x1e>

0800b3ac <RDMSubDevice::GetFactoryDefaults()>:
 800b3ac:	7a03      	ldrb	r3, [r0, #8]
 800b3ae:	b510      	push	{r4, lr}
 800b3b0:	4604      	mov	r4, r0
 800b3b2:	b133      	cbz	r3, 800b3c2 <RDMSubDevice::GetFactoryDefaults()+0x16>
 800b3b4:	f7ff ffe2 	bl	800b37c <RDMSubDevice::CalculateChecksum()>
 800b3b8:	8963      	ldrh	r3, [r4, #10]
 800b3ba:	4283      	cmp	r3, r0
 800b3bc:	bf1c      	itt	ne
 800b3be:	2300      	movne	r3, #0
 800b3c0:	7223      	strbne	r3, [r4, #8]
 800b3c2:	7a20      	ldrb	r0, [r4, #8]
 800b3c4:	bd10      	pop	{r4, pc}

0800b3c6 <memcpy.isra.0>:
 800b3c6:	f007 bb7b 	b.w	8012ac0 <memcpy>
	...

0800b3cc <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)>:
 800b3cc:	b510      	push	{r4, lr}
 800b3ce:	6001      	str	r1, [r0, #0]
 800b3d0:	2100      	movs	r1, #0
 800b3d2:	4604      	mov	r4, r0
 800b3d4:	6041      	str	r1, [r0, #4]
 800b3d6:	2220      	movs	r2, #32
 800b3d8:	3008      	adds	r0, #8
 800b3da:	f007 fb93 	bl	8012b04 <memset>
 800b3de:	4b03      	ldr	r3, [pc, #12]	; (800b3ec <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)+0x20>)
 800b3e0:	4620      	mov	r0, r4
 800b3e2:	62a3      	str	r3, [r4, #40]	; 0x28
 800b3e4:	237f      	movs	r3, #127	; 0x7f
 800b3e6:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 800b3ea:	bd10      	pop	{r4, pc}
 800b3ec:	ff7fff00 			; <UNDEFINED> instruction: 0xff7fff00

0800b3f0 <RDMDeviceParams::Load()>:
 800b3f0:	4601      	mov	r1, r0
 800b3f2:	6800      	ldr	r0, [r0, #0]
 800b3f4:	b130      	cbz	r0, 800b404 <RDMDeviceParams::Load()+0x14>
 800b3f6:	b508      	push	{r3, lr}
 800b3f8:	6803      	ldr	r3, [r0, #0]
 800b3fa:	3104      	adds	r1, #4
 800b3fc:	68db      	ldr	r3, [r3, #12]
 800b3fe:	4798      	blx	r3
 800b400:	2001      	movs	r0, #1
 800b402:	bd08      	pop	{r3, pc}
 800b404:	4770      	bx	lr

0800b406 <RDMDeviceParams::Set(RDMDevice*)>:
 800b406:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b408:	6843      	ldr	r3, [r0, #4]
 800b40a:	460c      	mov	r4, r1
 800b40c:	07d9      	lsls	r1, r3, #31
 800b40e:	4605      	mov	r5, r0
 800b410:	d518      	bpl.n	800b444 <RDMDeviceParams::Set(RDMDevice*)+0x3e>
 800b412:	f890 6028 	ldrb.w	r6, [r0, #40]	; 0x28
 800b416:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 800b41a:	2e20      	cmp	r6, #32
 800b41c:	bf28      	it	cs
 800b41e:	2620      	movcs	r6, #32
 800b420:	f100 0108 	add.w	r1, r0, #8
 800b424:	b1e3      	cbz	r3, 800b460 <RDMDeviceParams::Set(RDMDevice*)+0x5a>
 800b426:	f104 070a 	add.w	r7, r4, #10
 800b42a:	4638      	mov	r0, r7
 800b42c:	4632      	mov	r2, r6
 800b42e:	f7ff ffca 	bl	800b3c6 <memcpy.isra.0>
 800b432:	6f60      	ldr	r0, [r4, #116]	; 0x74
 800b434:	f884 602a 	strb.w	r6, [r4, #42]	; 0x2a
 800b438:	b120      	cbz	r0, 800b444 <RDMDeviceParams::Set(RDMDevice*)+0x3e>
 800b43a:	6803      	ldr	r3, [r0, #0]
 800b43c:	4632      	mov	r2, r6
 800b43e:	4639      	mov	r1, r7
 800b440:	689b      	ldr	r3, [r3, #8]
 800b442:	4798      	blx	r3
 800b444:	686b      	ldr	r3, [r5, #4]
 800b446:	079a      	lsls	r2, r3, #30
 800b448:	bf44      	itt	mi
 800b44a:	f8b5 2029 	ldrhmi.w	r2, [r5, #41]	; 0x29
 800b44e:	f8a4 204c 	strhmi.w	r2, [r4, #76]	; 0x4c
 800b452:	075b      	lsls	r3, r3, #29
 800b454:	bf44      	itt	mi
 800b456:	f8b5 302b 	ldrhmi.w	r3, [r5, #43]	; 0x2b
 800b45a:	f8a4 304e 	strhmi.w	r3, [r4, #78]	; 0x4e
 800b45e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b460:	4632      	mov	r2, r6
 800b462:	f104 0051 	add.w	r0, r4, #81	; 0x51
 800b466:	f7ff ffae 	bl	800b3c6 <memcpy.isra.0>
 800b46a:	f884 6071 	strb.w	r6, [r4, #113]	; 0x71
 800b46e:	e7e9      	b.n	800b444 <RDMDeviceParams::Set(RDMDevice*)+0x3e>

0800b470 <RDMDeviceParams::Dump()>:
 800b470:	4770      	bx	lr

0800b472 <RDMDeviceResponder::PersonalityUpdate(LightSet*)>:
 800b472:	4770      	bx	lr

0800b474 <RDMDeviceResponder::DmxStartAddressUpdate()>:
 800b474:	4770      	bx	lr
	...

0800b478 <RDMDeviceResponder::~RDMDeviceResponder()>:
 800b478:	b510      	push	{r4, lr}
 800b47a:	4604      	mov	r4, r0
 800b47c:	4b05      	ldr	r3, [pc, #20]	; (800b494 <RDMDeviceResponder::~RDMDeviceResponder()+0x1c>)
 800b47e:	f840 3b88 	str.w	r3, [r0], #136
 800b482:	f7ff fef1 	bl	800b268 <RDMSubDevices::~RDMSubDevices()>
 800b486:	f104 0080 	add.w	r0, r4, #128	; 0x80
 800b48a:	f7ff fecd 	bl	800b228 <RDMSensors::~RDMSensors()>
 800b48e:	4620      	mov	r0, r4
 800b490:	bd10      	pop	{r4, pc}
 800b492:	bf00      	nop
 800b494:	08015284 	stmdaeq	r1, {r2, r7, r9, ip, lr}

0800b498 <RDMDeviceResponder::~RDMDeviceResponder()>:
 800b498:	b510      	push	{r4, lr}
 800b49a:	4604      	mov	r4, r0
 800b49c:	f7ff ffec 	bl	800b478 <RDMDeviceResponder::~RDMDeviceResponder()>
 800b4a0:	4620      	mov	r0, r4
 800b4a2:	f007 fa55 	bl	8012950 <operator delete(void*)>
 800b4a6:	4620      	mov	r0, r4
 800b4a8:	bd10      	pop	{r4, pc}

0800b4aa <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>:
 800b4aa:	b470      	push	{r4, r5, r6}
 800b4ac:	790a      	ldrb	r2, [r1, #4]
 800b4ae:	680b      	ldr	r3, [r1, #0]
 800b4b0:	2a20      	cmp	r2, #32
 800b4b2:	bf28      	it	cs
 800b4b4:	2220      	movcs	r2, #32
 800b4b6:	f890 1050 	ldrb.w	r1, [r0, #80]	; 0x50
 800b4ba:	189c      	adds	r4, r3, r2
 800b4bc:	b189      	cbz	r1, 800b4e2 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x38>
 800b4be:	f100 010a 	add.w	r1, r0, #10
 800b4c2:	460d      	mov	r5, r1
 800b4c4:	42a3      	cmp	r3, r4
 800b4c6:	d107      	bne.n	800b4d8 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x2e>
 800b4c8:	f880 202a 	strb.w	r2, [r0, #42]	; 0x2a
 800b4cc:	6f40      	ldr	r0, [r0, #116]	; 0x74
 800b4ce:	b170      	cbz	r0, 800b4ee <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x44>
 800b4d0:	bc70      	pop	{r4, r5, r6}
 800b4d2:	6803      	ldr	r3, [r0, #0]
 800b4d4:	689b      	ldr	r3, [r3, #8]
 800b4d6:	4718      	bx	r3
 800b4d8:	f813 6b01 	ldrb.w	r6, [r3], #1
 800b4dc:	f805 6b01 	strb.w	r6, [r5], #1
 800b4e0:	e7f0      	b.n	800b4c4 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x1a>
 800b4e2:	f100 0151 	add.w	r1, r0, #81	; 0x51
 800b4e6:	42a3      	cmp	r3, r4
 800b4e8:	d103      	bne.n	800b4f2 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x48>
 800b4ea:	f880 2071 	strb.w	r2, [r0, #113]	; 0x71
 800b4ee:	bc70      	pop	{r4, r5, r6}
 800b4f0:	4770      	bx	lr
 800b4f2:	f813 5b01 	ldrb.w	r5, [r3], #1
 800b4f6:	f801 5b01 	strb.w	r5, [r1], #1
 800b4fa:	e7f4      	b.n	800b4e6 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x3c>

0800b4fc <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)>:
 800b4fc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800b4fe:	4604      	mov	r4, r0
 800b500:	1d07      	adds	r7, r0, #4
 800b502:	4638      	mov	r0, r7
 800b504:	460e      	mov	r6, r1
 800b506:	4615      	mov	r5, r2
 800b508:	f000 fed0 	bl	800c2ac <RDMDevice::RDMDevice()>
 800b50c:	4620      	mov	r0, r4
 800b50e:	4b27      	ldr	r3, [pc, #156]	; (800b5ac <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0xb0>)
 800b510:	f840 3b7c 	str.w	r3, [r0], #124
 800b514:	f000 fcda 	bl	800becc <RDMIdentify::RDMIdentify()>
 800b518:	f104 0080 	add.w	r0, r4, #128	; 0x80
 800b51c:	f7ff fe7c 	bl	800b218 <RDMSensors::RDMSensors()>
 800b520:	f104 0088 	add.w	r0, r4, #136	; 0x88
 800b524:	f7ff fe98 	bl	800b258 <RDMSubDevices::RDMSubDevices()>
 800b528:	4b21      	ldr	r3, [pc, #132]	; (800b5b0 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0xb4>)
 800b52a:	2200      	movs	r2, #0
 800b52c:	601c      	str	r4, [r3, #0]
 800b52e:	2365      	movs	r3, #101	; 0x65
 800b530:	f884 30bf 	strb.w	r3, [r4, #191]	; 0xbf
 800b534:	f44f 73b7 	mov.w	r3, #366	; 0x16e
 800b538:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 800b53c:	2301      	movs	r3, #1
 800b53e:	f8c4 6090 	str.w	r6, [r4, #144]	; 0x90
 800b542:	f8a4 30c4 	strh.w	r3, [r4, #196]	; 0xc4
 800b546:	f8c4 20c8 	str.w	r2, [r4, #200]	; 0xc8
 800b54a:	f104 0399 	add.w	r3, r4, #153	; 0x99
 800b54e:	f104 01ac 	add.w	r1, r4, #172	; 0xac
 800b552:	428b      	cmp	r3, r1
 800b554:	d123      	bne.n	800b59e <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0xa2>
 800b556:	2100      	movs	r1, #0
 800b558:	f104 02bf 	add.w	r2, r4, #191	; 0xbf
 800b55c:	4293      	cmp	r3, r2
 800b55e:	d121      	bne.n	800b5a4 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0xa8>
 800b560:	f884 50a6 	strb.w	r5, [r4, #166]	; 0xa6
 800b564:	f7fd fd24 	bl	8008fb0 <RDMSoftwareVersion::GetVersion()>
 800b568:	f8c4 0094 	str.w	r0, [r4, #148]	; 0x94
 800b56c:	f7fd fd24 	bl	8008fb8 <RDMSoftwareVersion::GetVersionLength()>
 800b570:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800b574:	f884 0098 	strb.w	r0, [r4, #152]	; 0x98
 800b578:	681b      	ldr	r3, [r3, #0]
 800b57a:	685b      	ldr	r3, [r3, #4]
 800b57c:	b91b      	cbnz	r3, 800b586 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x8a>
 800b57e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800b582:	f8a4 30c4 	strh.w	r3, [r4, #196]	; 0xc4
 800b586:	4b0b      	ldr	r3, [pc, #44]	; (800b5b4 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0xb8>)
 800b588:	4638      	mov	r0, r7
 800b58a:	9300      	str	r3, [sp, #0]
 800b58c:	2317      	movs	r3, #23
 800b58e:	4669      	mov	r1, sp
 800b590:	f88d 3004 	strb.w	r3, [sp, #4]
 800b594:	f7ff ff89 	bl	800b4aa <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>
 800b598:	4620      	mov	r0, r4
 800b59a:	b003      	add	sp, #12
 800b59c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b59e:	f803 2b01 	strb.w	r2, [r3], #1
 800b5a2:	e7d6      	b.n	800b552 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x56>
 800b5a4:	f803 1b01 	strb.w	r1, [r3], #1
 800b5a8:	e7d8      	b.n	800b55c <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x60>
 800b5aa:	bf00      	nop
 800b5ac:	08015284 	stmdaeq	r1, {r2, r7, r9, ip, lr}
 800b5b0:	20000e44 	andcs	r0, r0, r4, asr #28
 800b5b4:	08015261 	stmdaeq	r1, {r0, r5, r6, r9, ip, lr}

0800b5b8 <RDMDeviceResponder::Init()>:
 800b5b8:	2301      	movs	r3, #1
 800b5ba:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b5bc:	4604      	mov	r4, r0
 800b5be:	f06f 050d 	mvn.w	r5, #13
 800b5c2:	f880 3054 	strb.w	r3, [r0, #84]	; 0x54
 800b5c6:	f100 0355 	add.w	r3, r0, #85	; 0x55
 800b5ca:	9300      	str	r3, [sp, #0]
 800b5cc:	f890 3075 	ldrb.w	r3, [r0, #117]	; 0x75
 800b5d0:	4669      	mov	r1, sp
 800b5d2:	3004      	adds	r0, #4
 800b5d4:	f88d 3004 	strb.w	r3, [sp, #4]
 800b5d8:	f7ff ff67 	bl	800b4aa <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>
 800b5dc:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800b5e0:	f894 002e 	ldrb.w	r0, [r4, #46]	; 0x2e
 800b5e4:	f104 020e 	add.w	r2, r4, #14
 800b5e8:	1b2d      	subs	r5, r5, r4
 800b5ea:	18a9      	adds	r1, r5, r2
 800b5ec:	4288      	cmp	r0, r1
 800b5ee:	d84b      	bhi.n	800b688 <RDMDeviceResponder::Init()+0xd0>
 800b5f0:	f8a4 3076 	strh.w	r3, [r4, #118]	; 0x76
 800b5f4:	f7fd fce2 	bl	8008fbc <RDMSoftwareVersion::GetVersionId()>
 800b5f8:	2201      	movs	r2, #1
 800b5fa:	f884 2099 	strb.w	r2, [r4, #153]	; 0x99
 800b5fe:	2200      	movs	r2, #0
 800b600:	f8b4 3050 	ldrh.w	r3, [r4, #80]	; 0x50
 800b604:	f8a4 209a 	strh.w	r2, [r4, #154]	; 0x9a
 800b608:	f884 209c 	strb.w	r2, [r4, #156]	; 0x9c
 800b60c:	f884 309e 	strb.w	r3, [r4, #158]	; 0x9e
 800b610:	0a1a      	lsrs	r2, r3, #8
 800b612:	0e03      	lsrs	r3, r0, #24
 800b614:	f884 309f 	strb.w	r3, [r4, #159]	; 0x9f
 800b618:	0c03      	lsrs	r3, r0, #16
 800b61a:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
 800b61e:	0a03      	lsrs	r3, r0, #8
 800b620:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
 800b624:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800b628:	f884 209d 	strb.w	r2, [r4, #157]	; 0x9d
 800b62c:	f884 00a2 	strb.w	r0, [r4, #162]	; 0xa2
 800b630:	681b      	ldr	r3, [r3, #0]
 800b632:	f8b4 608c 	ldrh.w	r6, [r4, #140]	; 0x8c
 800b636:	685d      	ldr	r5, [r3, #4]
 800b638:	bb5d      	cbnz	r5, 800b692 <RDMDeviceResponder::Init()+0xda>
 800b63a:	f8b4 00c4 	ldrh.w	r0, [r4, #196]	; 0xc4
 800b63e:	f884 50a3 	strb.w	r5, [r4, #163]	; 0xa3
 800b642:	0a03      	lsrs	r3, r0, #8
 800b644:	f884 50a4 	strb.w	r5, [r4, #164]	; 0xa4
 800b648:	f884 30a7 	strb.w	r3, [r4, #167]	; 0xa7
 800b64c:	2301      	movs	r3, #1
 800b64e:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 800b652:	0a33      	lsrs	r3, r6, #8
 800b654:	f884 30a9 	strb.w	r3, [r4, #169]	; 0xa9
 800b658:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 800b65c:	b2c0      	uxtb	r0, r0
 800b65e:	f884 30ab 	strb.w	r3, [r4, #171]	; 0xab
 800b662:	f884 00a8 	strb.w	r0, [r4, #168]	; 0xa8
 800b666:	f884 60aa 	strb.w	r6, [r4, #170]	; 0xaa
 800b66a:	f104 0399 	add.w	r3, r4, #153	; 0x99
 800b66e:	f104 02ac 	add.w	r2, r4, #172	; 0xac
 800b672:	4293      	cmp	r3, r2
 800b674:	d126      	bne.n	800b6c4 <RDMDeviceResponder::Init()+0x10c>
 800b676:	f894 30a8 	ldrb.w	r3, [r4, #168]	; 0xa8
 800b67a:	f894 20a5 	ldrb.w	r2, [r4, #165]	; 0xa5
 800b67e:	4413      	add	r3, r2
 800b680:	f8a4 30c2 	strh.w	r3, [r4, #194]	; 0xc2
 800b684:	b002      	add	sp, #8
 800b686:	bd70      	pop	{r4, r5, r6, pc}
 800b688:	f812 1b01 	ldrb.w	r1, [r2], #1
 800b68c:	440b      	add	r3, r1
 800b68e:	b29b      	uxth	r3, r3
 800b690:	e7ab      	b.n	800b5ea <RDMDeviceResponder::Init()+0x32>
 800b692:	682b      	ldr	r3, [r5, #0]
 800b694:	4628      	mov	r0, r5
 800b696:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b698:	4798      	blx	r3
 800b69a:	0a00      	lsrs	r0, r0, #8
 800b69c:	f884 00a3 	strb.w	r0, [r4, #163]	; 0xa3
 800b6a0:	682b      	ldr	r3, [r5, #0]
 800b6a2:	4628      	mov	r0, r5
 800b6a4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b6a6:	4798      	blx	r3
 800b6a8:	f884 00a4 	strb.w	r0, [r4, #164]	; 0xa4
 800b6ac:	682b      	ldr	r3, [r5, #0]
 800b6ae:	4628      	mov	r0, r5
 800b6b0:	6a1b      	ldr	r3, [r3, #32]
 800b6b2:	4798      	blx	r3
 800b6b4:	0a00      	lsrs	r0, r0, #8
 800b6b6:	f884 00a7 	strb.w	r0, [r4, #167]	; 0xa7
 800b6ba:	682b      	ldr	r3, [r5, #0]
 800b6bc:	4628      	mov	r0, r5
 800b6be:	6a1b      	ldr	r3, [r3, #32]
 800b6c0:	4798      	blx	r3
 800b6c2:	e7c3      	b.n	800b64c <RDMDeviceResponder::Init()+0x94>
 800b6c4:	f813 1b01 	ldrb.w	r1, [r3], #1
 800b6c8:	7499      	strb	r1, [r3, #18]
 800b6ca:	e7d2      	b.n	800b672 <RDMDeviceResponder::Init()+0xba>

0800b6cc <RDMDeviceResponder::Print()>:
 800b6cc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b6ce:	4604      	mov	r4, r0
 800b6d0:	3004      	adds	r0, #4
 800b6d2:	f000 fe5d 	bl	800c390 <RDMDevice::Print()>
 800b6d6:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800b6da:	481c      	ldr	r0, [pc, #112]	; (800b74c <RDMDeviceResponder::Print()+0x80>)
 800b6dc:	681d      	ldr	r5, [r3, #0]
 800b6de:	6aae      	ldr	r6, [r5, #40]	; 0x28
 800b6e0:	f7fd ff6c 	bl	80095bc <printf>
 800b6e4:	f894 209a 	ldrb.w	r2, [r4, #154]	; 0x9a
 800b6e8:	f894 1099 	ldrb.w	r1, [r4, #153]	; 0x99
 800b6ec:	4818      	ldr	r0, [pc, #96]	; (800b750 <RDMDeviceResponder::Print()+0x84>)
 800b6ee:	f7fd ff65 	bl	80095bc <printf>
 800b6f2:	f894 30a8 	ldrb.w	r3, [r4, #168]	; 0xa8
 800b6f6:	f894 10a7 	ldrb.w	r1, [r4, #167]	; 0xa7
 800b6fa:	4816      	ldr	r0, [pc, #88]	; (800b754 <RDMDeviceResponder::Print()+0x88>)
 800b6fc:	eb03 2101 	add.w	r1, r3, r1, lsl #8
 800b700:	f7fd ff5c 	bl	80095bc <printf>
 800b704:	f894 30a4 	ldrb.w	r3, [r4, #164]	; 0xa4
 800b708:	f894 10a3 	ldrb.w	r1, [r4, #163]	; 0xa3
 800b70c:	3508      	adds	r5, #8
 800b70e:	eb03 2101 	add.w	r1, r3, r1, lsl #8
 800b712:	4811      	ldr	r0, [pc, #68]	; (800b758 <RDMDeviceResponder::Print()+0x8c>)
 800b714:	f7fd ff52 	bl	80095bc <printf>
 800b718:	f894 20a6 	ldrb.w	r2, [r4, #166]	; 0xa6
 800b71c:	f894 10a5 	ldrb.w	r1, [r4, #165]	; 0xa5
 800b720:	b2f3      	uxtb	r3, r6
 800b722:	9500      	str	r5, [sp, #0]
 800b724:	480d      	ldr	r0, [pc, #52]	; (800b75c <RDMDeviceResponder::Print()+0x90>)
 800b726:	f7fd ff49 	bl	80095bc <printf>
 800b72a:	f894 10a9 	ldrb.w	r1, [r4, #169]	; 0xa9
 800b72e:	f894 30aa 	ldrb.w	r3, [r4, #170]	; 0xaa
 800b732:	480b      	ldr	r0, [pc, #44]	; (800b760 <RDMDeviceResponder::Print()+0x94>)
 800b734:	eb03 2101 	add.w	r1, r3, r1, lsl #8
 800b738:	f7fd ff40 	bl	80095bc <printf>
 800b73c:	f894 10ab 	ldrb.w	r1, [r4, #171]	; 0xab
 800b740:	4808      	ldr	r0, [pc, #32]	; (800b764 <RDMDeviceResponder::Print()+0x98>)
 800b742:	b002      	add	sp, #8
 800b744:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b748:	f7fd bf38 	b.w	80095bc <printf>
 800b74c:	080151ad 	stmdaeq	r1, {r0, r2, r3, r5, r7, r8, ip, lr}
 800b750:	080151ca 	stmdaeq	r1, {r1, r3, r6, r7, r8, ip, lr}
 800b754:	080151e3 	stmdaeq	r1, {r0, r1, r5, r6, r7, r8, ip, lr}
 800b758:	080151fb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r7, r8, ip, lr}
 800b75c:	08015213 	stmdaeq	r1, {r0, r1, r4, r9, ip, lr}
 800b760:	08015231 	stmdaeq	r1, {r0, r4, r5, r9, ip, lr}
 800b764:	08015249 	stmdaeq	r1, {r0, r3, r6, r9, ip, lr}

0800b768 <memcmp>:
 800b768:	b510      	push	{r4, lr}
 800b76a:	3901      	subs	r1, #1
 800b76c:	4402      	add	r2, r0
 800b76e:	4290      	cmp	r0, r2
 800b770:	d101      	bne.n	800b776 <memcmp+0xe>
 800b772:	2000      	movs	r0, #0
 800b774:	e005      	b.n	800b782 <memcmp+0x1a>
 800b776:	7803      	ldrb	r3, [r0, #0]
 800b778:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800b77c:	42a3      	cmp	r3, r4
 800b77e:	d001      	beq.n	800b784 <memcmp+0x1c>
 800b780:	1b18      	subs	r0, r3, r4
 800b782:	bd10      	pop	{r4, pc}
 800b784:	3001      	adds	r0, #1
 800b786:	e7f2      	b.n	800b76e <memcmp+0x6>

0800b788 <memcpy.isra.0>:
 800b788:	3801      	subs	r0, #1
 800b78a:	440a      	add	r2, r1
 800b78c:	4291      	cmp	r1, r2
 800b78e:	d100      	bne.n	800b792 <memcpy.isra.0+0xa>
 800b790:	4770      	bx	lr
 800b792:	f811 3b01 	ldrb.w	r3, [r1], #1
 800b796:	f800 3f01 	strb.w	r3, [r0, #1]!
 800b79a:	e7f7      	b.n	800b78c <memcpy.isra.0+0x4>

0800b79c <RDMDeviceResponder::SetFactoryDefaults()>:
 800b79c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b79e:	4604      	mov	r4, r0
 800b7a0:	f06f 050d 	mvn.w	r5, #13
 800b7a4:	f100 0355 	add.w	r3, r0, #85	; 0x55
 800b7a8:	9300      	str	r3, [sp, #0]
 800b7aa:	f890 3075 	ldrb.w	r3, [r0, #117]	; 0x75
 800b7ae:	4669      	mov	r1, sp
 800b7b0:	3004      	adds	r0, #4
 800b7b2:	f88d 3004 	strb.w	r3, [sp, #4]
 800b7b6:	f7ff fe78 	bl	800b4aa <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>
 800b7ba:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800b7be:	f894 002e 	ldrb.w	r0, [r4, #46]	; 0x2e
 800b7c2:	f104 020e 	add.w	r2, r4, #14
 800b7c6:	1b2d      	subs	r5, r5, r4
 800b7c8:	18a9      	adds	r1, r5, r2
 800b7ca:	4288      	cmp	r0, r1
 800b7cc:	d865      	bhi.n	800b89a <RDMDeviceResponder::SetFactoryDefaults()+0xfe>
 800b7ce:	f8a4 3076 	strh.w	r3, [r4, #118]	; 0x76
 800b7d2:	2301      	movs	r3, #1
 800b7d4:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 800b7d8:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800b7dc:	681b      	ldr	r3, [r3, #0]
 800b7de:	685d      	ldr	r5, [r3, #4]
 800b7e0:	b1f5      	cbz	r5, 800b820 <RDMDeviceResponder::SetFactoryDefaults()+0x84>
 800b7e2:	682b      	ldr	r3, [r5, #0]
 800b7e4:	4628      	mov	r0, r5
 800b7e6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b7e8:	4798      	blx	r3
 800b7ea:	0a00      	lsrs	r0, r0, #8
 800b7ec:	f884 00a3 	strb.w	r0, [r4, #163]	; 0xa3
 800b7f0:	682b      	ldr	r3, [r5, #0]
 800b7f2:	4628      	mov	r0, r5
 800b7f4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b7f6:	4798      	blx	r3
 800b7f8:	f884 00a4 	strb.w	r0, [r4, #164]	; 0xa4
 800b7fc:	682b      	ldr	r3, [r5, #0]
 800b7fe:	4628      	mov	r0, r5
 800b800:	6a1b      	ldr	r3, [r3, #32]
 800b802:	4798      	blx	r3
 800b804:	0a00      	lsrs	r0, r0, #8
 800b806:	f884 00a7 	strb.w	r0, [r4, #167]	; 0xa7
 800b80a:	682b      	ldr	r3, [r5, #0]
 800b80c:	4628      	mov	r0, r5
 800b80e:	6a1b      	ldr	r3, [r3, #32]
 800b810:	4798      	blx	r3
 800b812:	6823      	ldr	r3, [r4, #0]
 800b814:	f884 00a8 	strb.w	r0, [r4, #168]	; 0xa8
 800b818:	4629      	mov	r1, r5
 800b81a:	4620      	mov	r0, r4
 800b81c:	689b      	ldr	r3, [r3, #8]
 800b81e:	4798      	blx	r3
 800b820:	f8b4 50c4 	ldrh.w	r5, [r4, #196]	; 0xc4
 800b824:	1e6b      	subs	r3, r5, #1
 800b826:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800b82a:	d218      	bcs.n	800b85e <RDMDeviceResponder::SetFactoryDefaults()+0xc2>
 800b82c:	f894 30a5 	ldrb.w	r3, [r4, #165]	; 0xa5
 800b830:	f8d4 2090 	ldr.w	r2, [r4, #144]	; 0x90
 800b834:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800b838:	3b01      	subs	r3, #1
 800b83a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800b83e:	6858      	ldr	r0, [r3, #4]
 800b840:	b168      	cbz	r0, 800b85e <RDMDeviceResponder::SetFactoryDefaults()+0xc2>
 800b842:	6803      	ldr	r3, [r0, #0]
 800b844:	4629      	mov	r1, r5
 800b846:	69db      	ldr	r3, [r3, #28]
 800b848:	4798      	blx	r3
 800b84a:	b120      	cbz	r0, 800b856 <RDMDeviceResponder::SetFactoryDefaults()+0xba>
 800b84c:	0a2b      	lsrs	r3, r5, #8
 800b84e:	f884 30a7 	strb.w	r3, [r4, #167]	; 0xa7
 800b852:	f884 50a8 	strb.w	r5, [r4, #168]	; 0xa8
 800b856:	6823      	ldr	r3, [r4, #0]
 800b858:	4620      	mov	r0, r4
 800b85a:	68db      	ldr	r3, [r3, #12]
 800b85c:	4798      	blx	r3
 800b85e:	2213      	movs	r2, #19
 800b860:	f104 0199 	add.w	r1, r4, #153	; 0x99
 800b864:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 800b868:	f7ff ff8e 	bl	800b788 <memcpy.isra.0>
 800b86c:	f104 0088 	add.w	r0, r4, #136	; 0x88
 800b870:	f7ff fd43 	bl	800b2fa <RDMSubDevices::SetFactoryDefaults()>
 800b874:	f894 30a8 	ldrb.w	r3, [r4, #168]	; 0xa8
 800b878:	f894 20a5 	ldrb.w	r2, [r4, #165]	; 0xa5
 800b87c:	f8d4 00c8 	ldr.w	r0, [r4, #200]	; 0xc8
 800b880:	4413      	add	r3, r2
 800b882:	f8a4 30c2 	strh.w	r3, [r4, #194]	; 0xc2
 800b886:	2301      	movs	r3, #1
 800b888:	f884 30c1 	strb.w	r3, [r4, #193]	; 0xc1
 800b88c:	b150      	cbz	r0, 800b8a4 <RDMDeviceResponder::SetFactoryDefaults()+0x108>
 800b88e:	6803      	ldr	r3, [r0, #0]
 800b890:	689b      	ldr	r3, [r3, #8]
 800b892:	b003      	add	sp, #12
 800b894:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800b898:	4718      	bx	r3
 800b89a:	f812 1b01 	ldrb.w	r1, [r2], #1
 800b89e:	440b      	add	r3, r1
 800b8a0:	b29b      	uxth	r3, r3
 800b8a2:	e791      	b.n	800b7c8 <RDMDeviceResponder::SetFactoryDefaults()+0x2c>
 800b8a4:	b003      	add	sp, #12
 800b8a6:	bd30      	pop	{r4, r5, pc}

0800b8a8 <RDMHandler::RDMHandler(bool)>:
 800b8a8:	2200      	movs	r2, #0
 800b8aa:	7001      	strb	r1, [r0, #0]
 800b8ac:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800b8b0:	7042      	strb	r2, [r0, #1]
 800b8b2:	4770      	bx	lr

0800b8b4 <RDMHandler::HandleString(char const*, unsigned int)>:
 800b8b4:	6883      	ldr	r3, [r0, #8]
 800b8b6:	75da      	strb	r2, [r3, #23]
 800b8b8:	3318      	adds	r3, #24
 800b8ba:	440a      	add	r2, r1
 800b8bc:	4291      	cmp	r1, r2
 800b8be:	d100      	bne.n	800b8c2 <RDMHandler::HandleString(char const*, unsigned int)+0xe>
 800b8c0:	4770      	bx	lr
 800b8c2:	f811 0b01 	ldrb.w	r0, [r1], #1
 800b8c6:	f803 0b01 	strb.w	r0, [r3], #1
 800b8ca:	e7f7      	b.n	800b8bc <RDMHandler::HandleString(char const*, unsigned int)+0x8>

0800b8cc <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)>:
 800b8cc:	b570      	push	{r4, r5, r6, lr}
 800b8ce:	e9d0 4301 	ldrd	r4, r3, [r0, #4]
 800b8d2:	25cc      	movs	r5, #204	; 0xcc
 800b8d4:	701d      	strb	r5, [r3, #0]
 800b8d6:	7825      	ldrb	r5, [r4, #0]
 800b8d8:	705d      	strb	r5, [r3, #1]
 800b8da:	7ba5      	ldrb	r5, [r4, #14]
 800b8dc:	73dd      	strb	r5, [r3, #15]
 800b8de:	2500      	movs	r5, #0
 800b8e0:	745d      	strb	r5, [r3, #17]
 800b8e2:	7c65      	ldrb	r5, [r4, #17]
 800b8e4:	749d      	strb	r5, [r3, #18]
 800b8e6:	7ca5      	ldrb	r5, [r4, #18]
 800b8e8:	74dd      	strb	r5, [r3, #19]
 800b8ea:	7ce5      	ldrb	r5, [r4, #19]
 800b8ec:	3501      	adds	r5, #1
 800b8ee:	751d      	strb	r5, [r3, #20]
 800b8f0:	7d25      	ldrb	r5, [r4, #20]
 800b8f2:	755d      	strb	r5, [r3, #21]
 800b8f4:	7d65      	ldrb	r5, [r4, #21]
 800b8f6:	759d      	strb	r5, [r3, #22]
 800b8f8:	b119      	cbz	r1, 800b902 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x36>
 800b8fa:	1e4d      	subs	r5, r1, #1
 800b8fc:	2d01      	cmp	r5, #1
 800b8fe:	d922      	bls.n	800b946 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x7a>
 800b900:	bd70      	pop	{r4, r5, r6, pc}
 800b902:	7dda      	ldrb	r2, [r3, #23]
 800b904:	7419      	strb	r1, [r3, #16]
 800b906:	3218      	adds	r2, #24
 800b908:	709a      	strb	r2, [r3, #2]
 800b90a:	4a16      	ldr	r2, [pc, #88]	; (800b964 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x98>)
 800b90c:	f104 0108 	add.w	r1, r4, #8
 800b910:	6812      	ldr	r2, [r2, #0]
 800b912:	1cdd      	adds	r5, r3, #3
 800b914:	3204      	adds	r2, #4
 800b916:	340e      	adds	r4, #14
 800b918:	f811 6b01 	ldrb.w	r6, [r1], #1
 800b91c:	f805 6b01 	strb.w	r6, [r5], #1
 800b920:	f812 6b01 	ldrb.w	r6, [r2], #1
 800b924:	42a1      	cmp	r1, r4
 800b926:	716e      	strb	r6, [r5, #5]
 800b928:	d1f6      	bne.n	800b918 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x4c>
 800b92a:	2200      	movs	r2, #0
 800b92c:	7899      	ldrb	r1, [r3, #2]
 800b92e:	4613      	mov	r3, r2
 800b930:	6884      	ldr	r4, [r0, #8]
 800b932:	428a      	cmp	r2, r1
 800b934:	eb04 0502 	add.w	r5, r4, r2
 800b938:	d30e      	bcc.n	800b958 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x8c>
 800b93a:	0a1a      	lsrs	r2, r3, #8
 800b93c:	702a      	strb	r2, [r5, #0]
 800b93e:	6882      	ldr	r2, [r0, #8]
 800b940:	440a      	add	r2, r1
 800b942:	7053      	strb	r3, [r2, #1]
 800b944:	e7dc      	b.n	800b900 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x34>
 800b946:	7419      	strb	r1, [r3, #16]
 800b948:	2102      	movs	r1, #2
 800b94a:	251a      	movs	r5, #26
 800b94c:	75d9      	strb	r1, [r3, #23]
 800b94e:	0a11      	lsrs	r1, r2, #8
 800b950:	709d      	strb	r5, [r3, #2]
 800b952:	7619      	strb	r1, [r3, #24]
 800b954:	765a      	strb	r2, [r3, #25]
 800b956:	e7d8      	b.n	800b90a <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x3e>
 800b958:	5ca5      	ldrb	r5, [r4, r2]
 800b95a:	3201      	adds	r2, #1
 800b95c:	442b      	add	r3, r5
 800b95e:	b29b      	uxth	r3, r3
 800b960:	e7e7      	b.n	800b932 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x66>
 800b962:	bf00      	nop
 800b964:	20000e44 	andcs	r0, r0, r4, asr #28

0800b968 <RDMHandler::RespondMessageAck()>:
 800b968:	6843      	ldr	r3, [r0, #4]
 800b96a:	7d9a      	ldrb	r2, [r3, #22]
 800b96c:	b90a      	cbnz	r2, 800b972 <RDMHandler::RespondMessageAck()+0xa>
 800b96e:	2218      	movs	r2, #24
 800b970:	705a      	strb	r2, [r3, #1]
 800b972:	2200      	movs	r2, #0
 800b974:	4611      	mov	r1, r2
 800b976:	f7ff bfa9 	b.w	800b8cc <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)>
	...

0800b97c <RDMHandler::GetDeviceInfo(unsigned short)>:
 800b97c:	b538      	push	{r3, r4, r5, lr}
 800b97e:	4b18      	ldr	r3, [pc, #96]	; (800b9e0 <RDMHandler::GetDeviceInfo(unsigned short)+0x64>)
 800b980:	4605      	mov	r5, r0
 800b982:	681c      	ldr	r4, [r3, #0]
 800b984:	b349      	cbz	r1, 800b9da <RDMHandler::GetDeviceInfo(unsigned short)+0x5e>
 800b986:	f104 0088 	add.w	r0, r4, #136	; 0x88
 800b98a:	f7ff fc85 	bl	800b298 <RDMSubDevices::GetInfo(unsigned short)>
 800b98e:	b1b8      	cbz	r0, 800b9c0 <RDMHandler::GetDeviceInfo(unsigned short)+0x44>
 800b990:	8803      	ldrh	r3, [r0, #0]
 800b992:	0a1b      	lsrs	r3, r3, #8
 800b994:	f884 30b6 	strb.w	r3, [r4, #182]	; 0xb6
 800b998:	8803      	ldrh	r3, [r0, #0]
 800b99a:	f884 30b7 	strb.w	r3, [r4, #183]	; 0xb7
 800b99e:	7903      	ldrb	r3, [r0, #4]
 800b9a0:	f884 30b8 	strb.w	r3, [r4, #184]	; 0xb8
 800b9a4:	7943      	ldrb	r3, [r0, #5]
 800b9a6:	f884 30b9 	strb.w	r3, [r4, #185]	; 0xb9
 800b9aa:	8843      	ldrh	r3, [r0, #2]
 800b9ac:	0a1b      	lsrs	r3, r3, #8
 800b9ae:	f884 30ba 	strb.w	r3, [r4, #186]	; 0xba
 800b9b2:	8843      	ldrh	r3, [r0, #2]
 800b9b4:	f884 30bb 	strb.w	r3, [r4, #187]	; 0xbb
 800b9b8:	f890 3027 	ldrb.w	r3, [r0, #39]	; 0x27
 800b9bc:	f884 30be 	strb.w	r3, [r4, #190]	; 0xbe
 800b9c0:	f104 01ac 	add.w	r1, r4, #172	; 0xac
 800b9c4:	2213      	movs	r2, #19
 800b9c6:	68a8      	ldr	r0, [r5, #8]
 800b9c8:	75c2      	strb	r2, [r0, #23]
 800b9ca:	3018      	adds	r0, #24
 800b9cc:	f7ff fedc 	bl	800b788 <memcpy.isra.0>
 800b9d0:	4628      	mov	r0, r5
 800b9d2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800b9d6:	f7ff bfc7 	b.w	800b968 <RDMHandler::RespondMessageAck()>
 800b9da:	f104 0199 	add.w	r1, r4, #153	; 0x99
 800b9de:	e7f1      	b.n	800b9c4 <RDMHandler::GetDeviceInfo(unsigned short)+0x48>
 800b9e0:	20000e44 	andcs	r0, r0, r4, asr #28

0800b9e4 <RDMHandler::GetFactoryDefaults(unsigned short)>:
 800b9e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b9e6:	2301      	movs	r3, #1
 800b9e8:	6886      	ldr	r6, [r0, #8]
 800b9ea:	4605      	mov	r5, r0
 800b9ec:	75f3      	strb	r3, [r6, #23]
 800b9ee:	4b1c      	ldr	r3, [pc, #112]	; (800ba60 <RDMHandler::GetFactoryDefaults(unsigned short)+0x7c>)
 800b9f0:	681c      	ldr	r4, [r3, #0]
 800b9f2:	f894 30c1 	ldrb.w	r3, [r4, #193]	; 0xc1
 800b9f6:	b37b      	cbz	r3, 800ba58 <RDMHandler::GetFactoryDefaults(unsigned short)+0x74>
 800b9f8:	f06f 0c0d 	mvn.w	ip, #13
 800b9fc:	f8b4 1076 	ldrh.w	r1, [r4, #118]	; 0x76
 800ba00:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800ba04:	f894 002e 	ldrb.w	r0, [r4, #46]	; 0x2e
 800ba08:	f104 020e 	add.w	r2, r4, #14
 800ba0c:	ebac 0c04 	sub.w	ip, ip, r4
 800ba10:	eb0c 0702 	add.w	r7, ip, r2
 800ba14:	4287      	cmp	r7, r0
 800ba16:	d30a      	bcc.n	800ba2e <RDMHandler::GetFactoryDefaults(unsigned short)+0x4a>
 800ba18:	4299      	cmp	r1, r3
 800ba1a:	d00d      	beq.n	800ba38 <RDMHandler::GetFactoryDefaults(unsigned short)+0x54>
 800ba1c:	2300      	movs	r3, #0
 800ba1e:	f884 30c1 	strb.w	r3, [r4, #193]	; 0xc1
 800ba22:	7633      	strb	r3, [r6, #24]
 800ba24:	4628      	mov	r0, r5
 800ba26:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800ba2a:	f7ff bf9d 	b.w	800b968 <RDMHandler::RespondMessageAck()>
 800ba2e:	f812 7b01 	ldrb.w	r7, [r2], #1
 800ba32:	443b      	add	r3, r7
 800ba34:	b29b      	uxth	r3, r3
 800ba36:	e7eb      	b.n	800ba10 <RDMHandler::GetFactoryDefaults(unsigned short)+0x2c>
 800ba38:	f894 30a8 	ldrb.w	r3, [r4, #168]	; 0xa8
 800ba3c:	f894 10a5 	ldrb.w	r1, [r4, #165]	; 0xa5
 800ba40:	f8b4 20c2 	ldrh.w	r2, [r4, #194]	; 0xc2
 800ba44:	440b      	add	r3, r1
 800ba46:	429a      	cmp	r2, r3
 800ba48:	d1e8      	bne.n	800ba1c <RDMHandler::GetFactoryDefaults(unsigned short)+0x38>
 800ba4a:	f104 0088 	add.w	r0, r4, #136	; 0x88
 800ba4e:	f7ff fc41 	bl	800b2d4 <RDMSubDevices::GetFactoryDefaults()>
 800ba52:	4603      	mov	r3, r0
 800ba54:	2800      	cmp	r0, #0
 800ba56:	d0e2      	beq.n	800ba1e <RDMHandler::GetFactoryDefaults(unsigned short)+0x3a>
 800ba58:	f894 30c1 	ldrb.w	r3, [r4, #193]	; 0xc1
 800ba5c:	e7e1      	b.n	800ba22 <RDMHandler::GetFactoryDefaults(unsigned short)+0x3e>
 800ba5e:	bf00      	nop
 800ba60:	20000e44 	andcs	r0, r0, r4, asr #28

0800ba64 <RDMHandler::GetDeviceModelDescription(unsigned short)>:
 800ba64:	b510      	push	{r4, lr}
 800ba66:	4604      	mov	r4, r0
 800ba68:	2209      	movs	r2, #9
 800ba6a:	4904      	ldr	r1, [pc, #16]	; (800ba7c <RDMHandler::GetDeviceModelDescription(unsigned short)+0x18>)
 800ba6c:	f7ff ff22 	bl	800b8b4 <RDMHandler::HandleString(char const*, unsigned int)>
 800ba70:	4620      	mov	r0, r4
 800ba72:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ba76:	f7ff bf77 	b.w	800b968 <RDMHandler::RespondMessageAck()>
 800ba7a:	bf00      	nop
 800ba7c:	08014e75 	stmdaeq	r1, {r0, r2, r4, r5, r6, r9, sl, fp, lr}

0800ba80 <RDMHandler::GetManufacturerLabel(unsigned short)>:
 800ba80:	b510      	push	{r4, lr}
 800ba82:	4604      	mov	r4, r0
 800ba84:	4b05      	ldr	r3, [pc, #20]	; (800ba9c <RDMHandler::GetManufacturerLabel(unsigned short)+0x1c>)
 800ba86:	6819      	ldr	r1, [r3, #0]
 800ba88:	f891 204f 	ldrb.w	r2, [r1, #79]	; 0x4f
 800ba8c:	312f      	adds	r1, #47	; 0x2f
 800ba8e:	f7ff ff11 	bl	800b8b4 <RDMHandler::HandleString(char const*, unsigned int)>
 800ba92:	4620      	mov	r0, r4
 800ba94:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ba98:	f7ff bf66 	b.w	800b968 <RDMHandler::RespondMessageAck()>
 800ba9c:	20000e44 	andcs	r0, r0, r4, asr #28

0800baa0 <RDMHandler::GetDeviceLabel(unsigned short)>:
 800baa0:	4b0d      	ldr	r3, [pc, #52]	; (800bad8 <RDMHandler::GetDeviceLabel(unsigned short)+0x38>)
 800baa2:	b513      	push	{r0, r1, r4, lr}
 800baa4:	4604      	mov	r4, r0
 800baa6:	6818      	ldr	r0, [r3, #0]
 800baa8:	b171      	cbz	r1, 800bac8 <RDMHandler::GetDeviceLabel(unsigned short)+0x28>
 800baaa:	466a      	mov	r2, sp
 800baac:	3088      	adds	r0, #136	; 0x88
 800baae:	f7ff fbfb 	bl	800b2a8 <RDMSubDevices::GetLabel(unsigned short, TRDMDeviceInfoData*)>
 800bab2:	4620      	mov	r0, r4
 800bab4:	f89d 2004 	ldrb.w	r2, [sp, #4]
 800bab8:	9900      	ldr	r1, [sp, #0]
 800baba:	f7ff fefb 	bl	800b8b4 <RDMHandler::HandleString(char const*, unsigned int)>
 800babe:	4620      	mov	r0, r4
 800bac0:	f7ff ff52 	bl	800b968 <RDMHandler::RespondMessageAck()>
 800bac4:	b002      	add	sp, #8
 800bac6:	bd10      	pop	{r4, pc}
 800bac8:	f100 030e 	add.w	r3, r0, #14
 800bacc:	9300      	str	r3, [sp, #0]
 800bace:	f890 302e 	ldrb.w	r3, [r0, #46]	; 0x2e
 800bad2:	f88d 3004 	strb.w	r3, [sp, #4]
 800bad6:	e7ec      	b.n	800bab2 <RDMHandler::GetDeviceLabel(unsigned short)+0x12>
 800bad8:	20000e44 	andcs	r0, r0, r4, asr #28

0800badc <RDMHandler::GetIdentifyDevice(unsigned short)>:
 800badc:	2201      	movs	r2, #1
 800bade:	6883      	ldr	r3, [r0, #8]
 800bae0:	75da      	strb	r2, [r3, #23]
 800bae2:	4a02      	ldr	r2, [pc, #8]	; (800baec <RDMHandler::GetIdentifyDevice(unsigned short)+0x10>)
 800bae4:	7812      	ldrb	r2, [r2, #0]
 800bae6:	761a      	strb	r2, [r3, #24]
 800bae8:	f7ff bf3e 	b.w	800b968 <RDMHandler::RespondMessageAck()>
 800baec:	20000e48 	andcs	r0, r0, r8, asr #28

0800baf0 <RDMHandler::RespondMessageNack(unsigned short)>:
 800baf0:	460a      	mov	r2, r1
 800baf2:	2102      	movs	r1, #2
 800baf4:	f7ff beea 	b.w	800b8cc <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)>

0800baf8 <RDMHandler::SetResetDevice(bool, unsigned short)>:
 800baf8:	b510      	push	{r4, lr}
 800bafa:	6843      	ldr	r3, [r0, #4]
 800bafc:	4604      	mov	r4, r0
 800bafe:	7d9a      	ldrb	r2, [r3, #22]
 800bb00:	2a01      	cmp	r2, #1
 800bb02:	d004      	beq.n	800bb0e <RDMHandler::SetResetDevice(bool, unsigned short)+0x16>
 800bb04:	2101      	movs	r1, #1
 800bb06:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bb0a:	f7ff bff1 	b.w	800baf0 <RDMHandler::RespondMessageNack(unsigned short)>
 800bb0e:	7ddb      	ldrb	r3, [r3, #23]
 800bb10:	2b01      	cmp	r3, #1
 800bb12:	d003      	beq.n	800bb1c <RDMHandler::SetResetDevice(bool, unsigned short)+0x24>
 800bb14:	2bff      	cmp	r3, #255	; 0xff
 800bb16:	d001      	beq.n	800bb1c <RDMHandler::SetResetDevice(bool, unsigned short)+0x24>
 800bb18:	2106      	movs	r1, #6
 800bb1a:	e7f4      	b.n	800bb06 <RDMHandler::SetResetDevice(bool, unsigned short)+0xe>
 800bb1c:	2100      	movs	r1, #0
 800bb1e:	68a2      	ldr	r2, [r4, #8]
 800bb20:	2bff      	cmp	r3, #255	; 0xff
 800bb22:	75d1      	strb	r1, [r2, #23]
 800bb24:	d102      	bne.n	800bb2c <RDMHandler::SetResetDevice(bool, unsigned short)+0x34>
 800bb26:	2104      	movs	r1, #4
 800bb28:	4620      	mov	r0, r4
 800bb2a:	e7ec      	b.n	800bb06 <RDMHandler::SetResetDevice(bool, unsigned short)+0xe>
 800bb2c:	4b03      	ldr	r3, [pc, #12]	; (800bb3c <RDMHandler::SetResetDevice(bool, unsigned short)+0x44>)
 800bb2e:	6818      	ldr	r0, [r3, #0]
 800bb30:	f006 fed0 	bl	80128d4 <Hardware::Reboot()>
 800bb34:	2800      	cmp	r0, #0
 800bb36:	d0f6      	beq.n	800bb26 <RDMHandler::SetResetDevice(bool, unsigned short)+0x2e>
 800bb38:	bd10      	pop	{r4, pc}
 800bb3a:	bf00      	nop
 800bb3c:	2000a730 	andcs	sl, r0, r0, lsr r7

0800bb40 <RDMHandler::SetIdentifyDevice(bool, unsigned short)>:
 800bb40:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800bb42:	6843      	ldr	r3, [r0, #4]
 800bb44:	460d      	mov	r5, r1
 800bb46:	7d99      	ldrb	r1, [r3, #22]
 800bb48:	4604      	mov	r4, r0
 800bb4a:	2901      	cmp	r1, #1
 800bb4c:	d004      	beq.n	800bb58 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x18>
 800bb4e:	2101      	movs	r1, #1
 800bb50:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800bb54:	f7ff bfcc 	b.w	800baf0 <RDMHandler::RespondMessageNack(unsigned short)>
 800bb58:	7ddb      	ldrb	r3, [r3, #23]
 800bb5a:	2b01      	cmp	r3, #1
 800bb5c:	d901      	bls.n	800bb62 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x22>
 800bb5e:	2106      	movs	r1, #6
 800bb60:	e7f6      	b.n	800bb50 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x10>
 800bb62:	4a12      	ldr	r2, [pc, #72]	; (800bbac <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x6c>)
 800bb64:	4f12      	ldr	r7, [pc, #72]	; (800bbb0 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x70>)
 800bb66:	6816      	ldr	r6, [r2, #0]
 800bb68:	4a12      	ldr	r2, [pc, #72]	; (800bbb4 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x74>)
 800bb6a:	6810      	ldr	r0, [r2, #0]
 800bb6c:	4a12      	ldr	r2, [pc, #72]	; (800bbb8 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x78>)
 800bb6e:	b983      	cbnz	r3, 800bb92 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x52>
 800bb70:	2102      	movs	r1, #2
 800bb72:	7013      	strb	r3, [r2, #0]
 800bb74:	f006 fe0a 	bl	801278c <LedBlink::SetMode(ledblink::Mode)>
 800bb78:	7839      	ldrb	r1, [r7, #0]
 800bb7a:	b111      	cbz	r1, 800bb82 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x42>
 800bb7c:	4630      	mov	r0, r6
 800bb7e:	f000 f9ac 	bl	800beda <RDMIdentify::Off(rdm::identify::Mode)>
 800bb82:	b98d      	cbnz	r5, 800bba8 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x68>
 800bb84:	68a3      	ldr	r3, [r4, #8]
 800bb86:	4620      	mov	r0, r4
 800bb88:	75dd      	strb	r5, [r3, #23]
 800bb8a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800bb8e:	f7ff beeb 	b.w	800b968 <RDMHandler::RespondMessageAck()>
 800bb92:	7011      	strb	r1, [r2, #0]
 800bb94:	2104      	movs	r1, #4
 800bb96:	f006 fdf9 	bl	801278c <LedBlink::SetMode(ledblink::Mode)>
 800bb9a:	7839      	ldrb	r1, [r7, #0]
 800bb9c:	2900      	cmp	r1, #0
 800bb9e:	d0f0      	beq.n	800bb82 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x42>
 800bba0:	4630      	mov	r0, r6
 800bba2:	f000 f999 	bl	800bed8 <RDMIdentify::On(rdm::identify::Mode)>
 800bba6:	e7ec      	b.n	800bb82 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x42>
 800bba8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800bbaa:	bf00      	nop
 800bbac:	20000e4c 	andcs	r0, r0, ip, asr #28
 800bbb0:	20000e49 	andcs	r0, r0, r9, asr #28
 800bbb4:	2000a72c 	andcs	sl, r0, ip, lsr #14
 800bbb8:	20000e48 	andcs	r0, r0, r8, asr #28

0800bbbc <RDMHandler::SetFactoryDefaults(bool, unsigned short)>:
 800bbbc:	b538      	push	{r3, r4, r5, lr}
 800bbbe:	6843      	ldr	r3, [r0, #4]
 800bbc0:	4604      	mov	r4, r0
 800bbc2:	7d9b      	ldrb	r3, [r3, #22]
 800bbc4:	460d      	mov	r5, r1
 800bbc6:	b123      	cbz	r3, 800bbd2 <RDMHandler::SetFactoryDefaults(bool, unsigned short)+0x16>
 800bbc8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800bbcc:	2101      	movs	r1, #1
 800bbce:	f7ff bf8f 	b.w	800baf0 <RDMHandler::RespondMessageNack(unsigned short)>
 800bbd2:	4b06      	ldr	r3, [pc, #24]	; (800bbec <RDMHandler::SetFactoryDefaults(bool, unsigned short)+0x30>)
 800bbd4:	6818      	ldr	r0, [r3, #0]
 800bbd6:	f7ff fde1 	bl	800b79c <RDMDeviceResponder::SetFactoryDefaults()>
 800bbda:	b935      	cbnz	r5, 800bbea <RDMHandler::SetFactoryDefaults(bool, unsigned short)+0x2e>
 800bbdc:	68a3      	ldr	r3, [r4, #8]
 800bbde:	4620      	mov	r0, r4
 800bbe0:	75dd      	strb	r5, [r3, #23]
 800bbe2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800bbe6:	f7ff bebf 	b.w	800b968 <RDMHandler::RespondMessageAck()>
 800bbea:	bd38      	pop	{r3, r4, r5, pc}
 800bbec:	20000e44 	andcs	r0, r0, r4, asr #28

0800bbf0 <RDMHandler::SetDeviceLabel(bool, unsigned short)>:
 800bbf0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800bbf2:	6845      	ldr	r5, [r0, #4]
 800bbf4:	460e      	mov	r6, r1
 800bbf6:	7dab      	ldrb	r3, [r5, #22]
 800bbf8:	4604      	mov	r4, r0
 800bbfa:	2b20      	cmp	r3, #32
 800bbfc:	4611      	mov	r1, r2
 800bbfe:	d905      	bls.n	800bc0c <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x1c>
 800bc00:	2101      	movs	r1, #1
 800bc02:	b002      	add	sp, #8
 800bc04:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bc08:	f7ff bf72 	b.w	800baf0 <RDMHandler::RespondMessageNack(unsigned short)>
 800bc0c:	4a0d      	ldr	r2, [pc, #52]	; (800bc44 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x54>)
 800bc0e:	6810      	ldr	r0, [r2, #0]
 800bc10:	f105 0217 	add.w	r2, r5, #23
 800bc14:	b159      	cbz	r1, 800bc2e <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x3e>
 800bc16:	3088      	adds	r0, #136	; 0x88
 800bc18:	f7ff fb4f 	bl	800b2ba <RDMSubDevices::SetLabel(unsigned short, char const*, unsigned char)>
 800bc1c:	b97e      	cbnz	r6, 800bc3e <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x4e>
 800bc1e:	4620      	mov	r0, r4
 800bc20:	68a3      	ldr	r3, [r4, #8]
 800bc22:	75de      	strb	r6, [r3, #23]
 800bc24:	b002      	add	sp, #8
 800bc26:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bc2a:	f7ff be9d 	b.w	800b968 <RDMHandler::RespondMessageAck()>
 800bc2e:	4669      	mov	r1, sp
 800bc30:	3004      	adds	r0, #4
 800bc32:	9200      	str	r2, [sp, #0]
 800bc34:	f88d 3004 	strb.w	r3, [sp, #4]
 800bc38:	f7ff fc37 	bl	800b4aa <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>
 800bc3c:	e7ee      	b.n	800bc1c <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x2c>
 800bc3e:	b002      	add	sp, #8
 800bc40:	bd70      	pop	{r4, r5, r6, pc}
 800bc42:	bf00      	nop
 800bc44:	20000e44 	andcs	r0, r0, r4, asr #28

0800bc48 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)>:
 800bc48:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800bc4c:	4616      	mov	r6, r2
 800bc4e:	2700      	movs	r7, #0
 800bc50:	f006 04ef 	and.w	r4, r6, #239	; 0xef
 800bc54:	2c20      	cmp	r4, #32
 800bc56:	46be      	mov	lr, r7
 800bc58:	f89d 801c 	ldrb.w	r8, [sp, #28]
 800bc5c:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 800bc60:	d004      	beq.n	800bc6c <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x24>
 800bc62:	2105      	movs	r1, #5
 800bc64:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800bc68:	f7ff bf42 	b.w	800baf0 <RDMHandler::RespondMessageNack(unsigned short)>
 800bc6c:	4c2d      	ldr	r4, [pc, #180]	; (800bd24 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xdc>)
 800bc6e:	6824      	ldr	r4, [r4, #0]
 800bc70:	88a4      	ldrh	r4, [r4, #4]
 800bc72:	4294      	cmp	r4, r2
 800bc74:	d205      	bcs.n	800bc82 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x3a>
 800bc76:	f64f 74ff 	movw	r4, #65535	; 0xffff
 800bc7a:	42a2      	cmp	r2, r4
 800bc7c:	d001      	beq.n	800bc82 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x3a>
 800bc7e:	2109      	movs	r1, #9
 800bc80:	e7f0      	b.n	800bc64 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1c>
 800bc82:	f04f 0c14 	mov.w	ip, #20
 800bc86:	2400      	movs	r4, #0
 800bc88:	4d27      	ldr	r5, [pc, #156]	; (800bd28 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xe0>)
 800bc8a:	f8b5 9000 	ldrh.w	r9, [r5]
 800bc8e:	4599      	cmp	r9, r3
 800bc90:	bf02      	ittt	eq
 800bc92:	462c      	moveq	r4, r5
 800bc94:	7daf      	ldrbeq	r7, [r5, #22]
 800bc96:	f895 e017 	ldrbeq.w	lr, [r5, #23]
 800bc9a:	f1bc 0c01 	subs.w	ip, ip, #1
 800bc9e:	f105 0518 	add.w	r5, r5, #24
 800bca2:	d1f2      	bne.n	800bc8a <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x42>
 800bca4:	b90c      	cbnz	r4, 800bcaa <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x62>
 800bca6:	2100      	movs	r1, #0
 800bca8:	e7dc      	b.n	800bc64 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1c>
 800bcaa:	7803      	ldrb	r3, [r0, #0]
 800bcac:	b19b      	cbz	r3, 800bcd6 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x8e>
 800bcae:	2f00      	cmp	r7, #0
 800bcb0:	d0f9      	beq.n	800bca6 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x5e>
 800bcb2:	2e20      	cmp	r6, #32
 800bcb4:	d121      	bne.n	800bcfa <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xb2>
 800bcb6:	2900      	cmp	r1, #0
 800bcb8:	d131      	bne.n	800bd1e <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xd6>
 800bcba:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800bcbe:	429a      	cmp	r2, r3
 800bcc0:	d0dd      	beq.n	800bc7e <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x36>
 800bcc2:	6863      	ldr	r3, [r4, #4]
 800bcc4:	b913      	cbnz	r3, 800bccc <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x84>
 800bcc6:	68a1      	ldr	r1, [r4, #8]
 800bcc8:	07cd      	lsls	r5, r1, #31
 800bcca:	d5ca      	bpl.n	800bc62 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1a>
 800bccc:	7d21      	ldrb	r1, [r4, #20]
 800bcce:	4541      	cmp	r1, r8
 800bcd0:	d005      	beq.n	800bcde <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x96>
 800bcd2:	2101      	movs	r1, #1
 800bcd4:	e7c6      	b.n	800bc64 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1c>
 800bcd6:	f1be 0f00 	cmp.w	lr, #0
 800bcda:	d1ea      	bne.n	800bcb2 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x6a>
 800bcdc:	e7e3      	b.n	800bca6 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x5e>
 800bcde:	68a1      	ldr	r1, [r4, #8]
 800bce0:	eb00 0461 	add.w	r4, r0, r1, asr #1
 800bce4:	104d      	asrs	r5, r1, #1
 800bce6:	07c9      	lsls	r1, r1, #31
 800bce8:	bf48      	it	mi
 800bcea:	5941      	ldrmi	r1, [r0, r5]
 800bcec:	4620      	mov	r0, r4
 800bcee:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800bcf2:	bf48      	it	mi
 800bcf4:	58cb      	ldrmi	r3, [r1, r3]
 800bcf6:	4611      	mov	r1, r2
 800bcf8:	4718      	bx	r3
 800bcfa:	e9d4 5303 	ldrd	r5, r3, [r4, #12]
 800bcfe:	f003 0401 	and.w	r4, r3, #1
 800bd02:	b90d      	cbnz	r5, 800bd08 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xc0>
 800bd04:	2c00      	cmp	r4, #0
 800bd06:	d0ac      	beq.n	800bc62 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1a>
 800bd08:	105e      	asrs	r6, r3, #1
 800bd0a:	eb00 0363 	add.w	r3, r0, r3, asr #1
 800bd0e:	b10c      	cbz	r4, 800bd14 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xcc>
 800bd10:	5980      	ldr	r0, [r0, r6]
 800bd12:	5945      	ldr	r5, [r0, r5]
 800bd14:	4618      	mov	r0, r3
 800bd16:	462b      	mov	r3, r5
 800bd18:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800bd1c:	4718      	bx	r3
 800bd1e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800bd22:	bf00      	nop
 800bd24:	20000e40 	andcs	r0, r0, r0, asr #28
 800bd28:	0801529c 	stmdaeq	r1, {r2, r3, r4, r7, r9, ip, lr}

0800bd2c <RDMHandler::HandleData(unsigned char const*, unsigned char*)>:
 800bd2c:	23ff      	movs	r3, #255	; 0xff
 800bd2e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bd32:	7013      	strb	r3, [r2, #0]
 800bd34:	e9c0 1201 	strd	r1, r2, [r0, #4]
 800bd38:	7d0b      	ldrb	r3, [r1, #20]
 800bd3a:	f891 8015 	ldrb.w	r8, [r1, #21]
 800bd3e:	f101 0902 	add.w	r9, r1, #2
 800bd42:	eb08 2803 	add.w	r8, r8, r3, lsl #8
 800bd46:	4b5e      	ldr	r3, [pc, #376]	; (800bec0 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x194>)
 800bd48:	b085      	sub	sp, #20
 800bd4a:	681b      	ldr	r3, [r3, #0]
 800bd4c:	4607      	mov	r7, r0
 800bd4e:	460d      	mov	r5, r1
 800bd50:	4614      	mov	r4, r2
 800bd52:	4648      	mov	r0, r9
 800bd54:	2206      	movs	r2, #6
 800bd56:	f891 a013 	ldrb.w	sl, [r1, #19]
 800bd5a:	495a      	ldr	r1, [pc, #360]	; (800bec4 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x198>)
 800bd5c:	1d1e      	adds	r6, r3, #4
 800bd5e:	9303      	str	r3, [sp, #12]
 800bd60:	f7ff fd02 	bl	800b768 <memcmp>
 800bd64:	2202      	movs	r2, #2
 800bd66:	4683      	mov	fp, r0
 800bd68:	4631      	mov	r1, r6
 800bd6a:	4648      	mov	r0, r9
 800bd6c:	fa1f f888 	uxth.w	r8, r8
 800bd70:	f7ff fcfa 	bl	800b768 <memcmp>
 800bd74:	b928      	cbnz	r0, 800bd82 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x56>
 800bd76:	2204      	movs	r2, #4
 800bd78:	4952      	ldr	r1, [pc, #328]	; (800bec4 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x198>)
 800bd7a:	18a8      	adds	r0, r5, r2
 800bd7c:	f7ff fcf4 	bl	800b768 <memcmp>
 800bd80:	b160      	cbz	r0, 800bd9c <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x70>
 800bd82:	4631      	mov	r1, r6
 800bd84:	2206      	movs	r2, #6
 800bd86:	4648      	mov	r0, r9
 800bd88:	f7ff fcee 	bl	800b768 <memcmp>
 800bd8c:	4601      	mov	r1, r0
 800bd8e:	b130      	cbz	r0, 800bd9e <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x72>
 800bd90:	f1bb 0f00 	cmp.w	fp, #0
 800bd94:	d04b      	beq.n	800be2e <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x102>
 800bd96:	b005      	add	sp, #20
 800bd98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bd9c:	2101      	movs	r1, #1
 800bd9e:	2301      	movs	r3, #1
 800bda0:	f1ba 0f10 	cmp.w	sl, #16
 800bda4:	d17a      	bne.n	800be9c <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x170>
 800bda6:	f1b8 0f01 	cmp.w	r8, #1
 800bdaa:	d143      	bne.n	800be34 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x108>
 800bdac:	787b      	ldrb	r3, [r7, #1]
 800bdae:	2b00      	cmp	r3, #0
 800bdb0:	d1f1      	bne.n	800bd96 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x6a>
 800bdb2:	2206      	movs	r2, #6
 800bdb4:	4631      	mov	r1, r6
 800bdb6:	f105 0017 	add.w	r0, r5, #23
 800bdba:	f7ff fcd5 	bl	800b768 <memcmp>
 800bdbe:	2800      	cmp	r0, #0
 800bdc0:	dce9      	bgt.n	800bd96 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x6a>
 800bdc2:	2206      	movs	r2, #6
 800bdc4:	4630      	mov	r0, r6
 800bdc6:	f105 011d 	add.w	r1, r5, #29
 800bdca:	f7ff fccd 	bl	800b768 <memcmp>
 800bdce:	2800      	cmp	r0, #0
 800bdd0:	dce1      	bgt.n	800bd96 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x6a>
 800bdd2:	23fe      	movs	r3, #254	; 0xfe
 800bdd4:	7023      	strb	r3, [r4, #0]
 800bdd6:	7063      	strb	r3, [r4, #1]
 800bdd8:	70a3      	strb	r3, [r4, #2]
 800bdda:	70e3      	strb	r3, [r4, #3]
 800bddc:	7123      	strb	r3, [r4, #4]
 800bdde:	7163      	strb	r3, [r4, #5]
 800bde0:	71a3      	strb	r3, [r4, #6]
 800bde2:	23aa      	movs	r3, #170	; 0xaa
 800bde4:	71e3      	strb	r3, [r4, #7]
 800bde6:	9b03      	ldr	r3, [sp, #12]
 800bde8:	4622      	mov	r2, r4
 800bdea:	f103 090a 	add.w	r9, r3, #10
 800bdee:	f240 53fa 	movw	r3, #1530	; 0x5fa
 800bdf2:	7831      	ldrb	r1, [r6, #0]
 800bdf4:	3202      	adds	r2, #2
 800bdf6:	f061 0155 	orn	r1, r1, #85	; 0x55
 800bdfa:	7191      	strb	r1, [r2, #6]
 800bdfc:	f816 1b01 	ldrb.w	r1, [r6], #1
 800be00:	f041 0155 	orr.w	r1, r1, #85	; 0x55
 800be04:	71d1      	strb	r1, [r2, #7]
 800be06:	f816 1c01 	ldrb.w	r1, [r6, #-1]
 800be0a:	454e      	cmp	r6, r9
 800be0c:	440b      	add	r3, r1
 800be0e:	b29b      	uxth	r3, r3
 800be10:	d1ef      	bne.n	800bdf2 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0xc6>
 800be12:	0a1a      	lsrs	r2, r3, #8
 800be14:	f062 0155 	orn	r1, r2, #85	; 0x55
 800be18:	f042 0255 	orr.w	r2, r2, #85	; 0x55
 800be1c:	7562      	strb	r2, [r4, #21]
 800be1e:	f063 0255 	orn	r2, r3, #85	; 0x55
 800be22:	f043 0355 	orr.w	r3, r3, #85	; 0x55
 800be26:	7521      	strb	r1, [r4, #20]
 800be28:	75a2      	strb	r2, [r4, #22]
 800be2a:	75e3      	strb	r3, [r4, #23]
 800be2c:	e7b3      	b.n	800bd96 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x6a>
 800be2e:	4659      	mov	r1, fp
 800be30:	465b      	mov	r3, fp
 800be32:	e7b5      	b.n	800bda0 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x74>
 800be34:	f1b8 0f03 	cmp.w	r8, #3
 800be38:	d11a      	bne.n	800be70 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x144>
 800be3a:	7daa      	ldrb	r2, [r5, #22]
 800be3c:	2a00      	cmp	r2, #0
 800be3e:	d1aa      	bne.n	800bd96 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x6a>
 800be40:	707a      	strb	r2, [r7, #1]
 800be42:	f1bb 0f00 	cmp.w	fp, #0
 800be46:	d0a6      	beq.n	800bd96 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x6a>
 800be48:	2b00      	cmp	r3, #0
 800be4a:	d0a4      	beq.n	800bd96 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x6a>
 800be4c:	2302      	movs	r3, #2
 800be4e:	75e3      	strb	r3, [r4, #23]
 800be50:	4b1d      	ldr	r3, [pc, #116]	; (800bec8 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x19c>)
 800be52:	7622      	strb	r2, [r4, #24]
 800be54:	681b      	ldr	r3, [r3, #0]
 800be56:	7662      	strb	r2, [r4, #25]
 800be58:	889b      	ldrh	r3, [r3, #4]
 800be5a:	3b00      	subs	r3, #0
 800be5c:	bf18      	it	ne
 800be5e:	2301      	movne	r3, #1
 800be60:	005b      	lsls	r3, r3, #1
 800be62:	4638      	mov	r0, r7
 800be64:	7663      	strb	r3, [r4, #25]
 800be66:	b005      	add	sp, #20
 800be68:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800be6c:	f7ff bd7c 	b.w	800b968 <RDMHandler::RespondMessageAck()>
 800be70:	f1b8 0f02 	cmp.w	r8, #2
 800be74:	d18f      	bne.n	800bd96 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x6a>
 800be76:	7daa      	ldrb	r2, [r5, #22]
 800be78:	2a00      	cmp	r2, #0
 800be7a:	d18c      	bne.n	800bd96 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x6a>
 800be7c:	2101      	movs	r1, #1
 800be7e:	7079      	strb	r1, [r7, #1]
 800be80:	2b00      	cmp	r3, #0
 800be82:	d088      	beq.n	800bd96 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x6a>
 800be84:	4b10      	ldr	r3, [pc, #64]	; (800bec8 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x19c>)
 800be86:	f884 8017 	strb.w	r8, [r4, #23]
 800be8a:	681b      	ldr	r3, [r3, #0]
 800be8c:	7622      	strb	r2, [r4, #24]
 800be8e:	7662      	strb	r2, [r4, #25]
 800be90:	889b      	ldrh	r3, [r3, #4]
 800be92:	3b00      	subs	r3, #0
 800be94:	bf18      	it	ne
 800be96:	2301      	movne	r3, #1
 800be98:	408b      	lsls	r3, r1
 800be9a:	e7e2      	b.n	800be62 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x136>
 800be9c:	7c6a      	ldrb	r2, [r5, #17]
 800be9e:	7cab      	ldrb	r3, [r5, #18]
 800bea0:	f1bb 0f00 	cmp.w	fp, #0
 800bea4:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 800bea8:	b29b      	uxth	r3, r3
 800beaa:	9301      	str	r3, [sp, #4]
 800beac:	7dab      	ldrb	r3, [r5, #22]
 800beae:	4652      	mov	r2, sl
 800beb0:	9300      	str	r3, [sp, #0]
 800beb2:	bf08      	it	eq
 800beb4:	2101      	moveq	r1, #1
 800beb6:	4643      	mov	r3, r8
 800beb8:	4638      	mov	r0, r7
 800beba:	f7ff fec5 	bl	800bc48 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)>
 800bebe:	e76a      	b.n	800bd96 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x6a>
 800bec0:	20000e44 	andcs	r0, r0, r4, asr #28
 800bec4:	08015294 	stmdaeq	r1, {r2, r4, r7, r9, ip, lr}
 800bec8:	20000e40 	andcs	r0, r0, r0, asr #28

0800becc <RDMIdentify::RDMIdentify()>:
 800becc:	4b01      	ldr	r3, [pc, #4]	; (800bed4 <RDMIdentify::RDMIdentify()+0x8>)
 800bece:	6018      	str	r0, [r3, #0]
 800bed0:	4770      	bx	lr
 800bed2:	bf00      	nop
 800bed4:	20000e4c 	andcs	r0, r0, ip, asr #28

0800bed8 <RDMIdentify::On(rdm::identify::Mode)>:
 800bed8:	4770      	bx	lr

0800beda <RDMIdentify::Off(rdm::identify::Mode)>:
 800beda:	4770      	bx	lr

0800bedc <memcpy.constprop.0.isra.0>:
 800bedc:	3801      	subs	r0, #1
 800bede:	1d0b      	adds	r3, r1, #4
 800bee0:	4299      	cmp	r1, r3
 800bee2:	d100      	bne.n	800bee6 <memcpy.constprop.0.isra.0+0xa>
 800bee4:	4770      	bx	lr
 800bee6:	f811 2b01 	ldrb.w	r2, [r1], #1
 800beea:	f800 2f01 	strb.w	r2, [r0, #1]!
 800beee:	e7f7      	b.n	800bee0 <memcpy.constprop.0.isra.0+0x4>

0800bef0 <RDMHandler::GetInterfaceList(unsigned short)>:
 800bef0:	4a08      	ldr	r2, [pc, #32]	; (800bf14 <RDMHandler::GetInterfaceList(unsigned short)+0x24>)
 800bef2:	6883      	ldr	r3, [r0, #8]
 800bef4:	6812      	ldr	r2, [r2, #0]
 800bef6:	6852      	ldr	r2, [r2, #4]
 800bef8:	0e11      	lsrs	r1, r2, #24
 800befa:	7619      	strb	r1, [r3, #24]
 800befc:	0c11      	lsrs	r1, r2, #16
 800befe:	7659      	strb	r1, [r3, #25]
 800bf00:	76da      	strb	r2, [r3, #27]
 800bf02:	0a11      	lsrs	r1, r2, #8
 800bf04:	2200      	movs	r2, #0
 800bf06:	771a      	strb	r2, [r3, #28]
 800bf08:	2206      	movs	r2, #6
 800bf0a:	7699      	strb	r1, [r3, #26]
 800bf0c:	775a      	strb	r2, [r3, #29]
 800bf0e:	75da      	strb	r2, [r3, #23]
 800bf10:	f7ff bd2a 	b.w	800b968 <RDMHandler::RespondMessageAck()>
 800bf14:	2000a008 	andcs	sl, r0, r8

0800bf18 <RDMHandler::GetInterfaceName(unsigned short)>:
 800bf18:	b538      	push	{r3, r4, r5, lr}
 800bf1a:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800bf1e:	4604      	mov	r4, r0
 800bf20:	3117      	adds	r1, #23
 800bf22:	f105 0018 	add.w	r0, r5, #24
 800bf26:	f7ff ffd9 	bl	800bedc <memcpy.constprop.0.isra.0>
 800bf2a:	4a0d      	ldr	r2, [pc, #52]	; (800bf60 <RDMHandler::GetInterfaceName(unsigned short)+0x48>)
 800bf2c:	f105 001c 	add.w	r0, r5, #28
 800bf30:	6813      	ldr	r3, [r2, #0]
 800bf32:	33a2      	adds	r3, #162	; 0xa2
 800bf34:	f813 1b01 	ldrb.w	r1, [r3], #1
 800bf38:	f800 1b01 	strb.w	r1, [r0], #1
 800bf3c:	2900      	cmp	r1, #0
 800bf3e:	d1f9      	bne.n	800bf34 <RDMHandler::GetInterfaceName(unsigned short)+0x1c>
 800bf40:	6812      	ldr	r2, [r2, #0]
 800bf42:	32a2      	adds	r2, #162	; 0xa2
 800bf44:	4611      	mov	r1, r2
 800bf46:	460b      	mov	r3, r1
 800bf48:	7818      	ldrb	r0, [r3, #0]
 800bf4a:	3101      	adds	r1, #1
 800bf4c:	2800      	cmp	r0, #0
 800bf4e:	d1fa      	bne.n	800bf46 <RDMHandler::GetInterfaceName(unsigned short)+0x2e>
 800bf50:	1a9b      	subs	r3, r3, r2
 800bf52:	3304      	adds	r3, #4
 800bf54:	75eb      	strb	r3, [r5, #23]
 800bf56:	4620      	mov	r0, r4
 800bf58:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800bf5c:	f7ff bd04 	b.w	800b968 <RDMHandler::RespondMessageAck()>
 800bf60:	2000a008 	andcs	sl, r0, r8

0800bf64 <RDMHandler::GetHardwareAddress(unsigned short)>:
 800bf64:	b538      	push	{r3, r4, r5, lr}
 800bf66:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800bf6a:	4604      	mov	r4, r0
 800bf6c:	3117      	adds	r1, #23
 800bf6e:	f105 0018 	add.w	r0, r5, #24
 800bf72:	f7ff ffb3 	bl	800bedc <memcpy.constprop.0.isra.0>
 800bf76:	4b06      	ldr	r3, [pc, #24]	; (800bf90 <RDMHandler::GetHardwareAddress(unsigned short)+0x2c>)
 800bf78:	f105 011c 	add.w	r1, r5, #28
 800bf7c:	6818      	ldr	r0, [r3, #0]
 800bf7e:	f004 f8c9 	bl	8010114 <Network::MacAddressCopyTo(unsigned char*)>
 800bf82:	230a      	movs	r3, #10
 800bf84:	75eb      	strb	r3, [r5, #23]
 800bf86:	4620      	mov	r0, r4
 800bf88:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800bf8c:	f7ff bcec 	b.w	800b968 <RDMHandler::RespondMessageAck()>
 800bf90:	2000a008 	andcs	sl, r0, r8

0800bf94 <RDMHandler::GetDHCPMode(unsigned short)>:
 800bf94:	b538      	push	{r3, r4, r5, lr}
 800bf96:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800bf9a:	4604      	mov	r4, r0
 800bf9c:	3117      	adds	r1, #23
 800bf9e:	f105 0018 	add.w	r0, r5, #24
 800bfa2:	f7ff ff9b 	bl	800bedc <memcpy.constprop.0.isra.0>
 800bfa6:	4b05      	ldr	r3, [pc, #20]	; (800bfbc <RDMHandler::GetDHCPMode(unsigned short)+0x28>)
 800bfa8:	4620      	mov	r0, r4
 800bfaa:	681b      	ldr	r3, [r3, #0]
 800bfac:	785b      	ldrb	r3, [r3, #1]
 800bfae:	772b      	strb	r3, [r5, #28]
 800bfb0:	2305      	movs	r3, #5
 800bfb2:	75eb      	strb	r3, [r5, #23]
 800bfb4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800bfb8:	f7ff bcd6 	b.w	800b968 <RDMHandler::RespondMessageAck()>
 800bfbc:	2000a008 	andcs	sl, r0, r8

0800bfc0 <RDMHandler::SetDHCPMode(bool, unsigned short)>:
 800bfc0:	4b10      	ldr	r3, [pc, #64]	; (800c004 <RDMHandler::SetDHCPMode(bool, unsigned short)+0x44>)
 800bfc2:	b510      	push	{r4, lr}
 800bfc4:	681b      	ldr	r3, [r3, #0]
 800bfc6:	4604      	mov	r4, r0
 800bfc8:	7819      	ldrb	r1, [r3, #0]
 800bfca:	6842      	ldr	r2, [r0, #4]
 800bfcc:	b921      	cbnz	r1, 800bfd8 <RDMHandler::SetDHCPMode(bool, unsigned short)+0x18>
 800bfce:	210b      	movs	r1, #11
 800bfd0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bfd4:	f7ff bd8c 	b.w	800baf0 <RDMHandler::RespondMessageNack(unsigned short)>
 800bfd8:	7ed2      	ldrb	r2, [r2, #27]
 800bfda:	2a01      	cmp	r2, #1
 800bfdc:	d109      	bne.n	800bff2 <RDMHandler::SetDHCPMode(bool, unsigned short)+0x32>
 800bfde:	f8d3 20bc 	ldr.w	r2, [r3, #188]	; 0xbc
 800bfe2:	f042 0204 	orr.w	r2, r2, #4
 800bfe6:	f8c3 20bc 	str.w	r2, [r3, #188]	; 0xbc
 800bfea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bfee:	f7ff bcbb 	b.w	800b968 <RDMHandler::RespondMessageAck()>
 800bff2:	b92a      	cbnz	r2, 800c000 <RDMHandler::SetDHCPMode(bool, unsigned short)+0x40>
 800bff4:	4618      	mov	r0, r3
 800bff6:	4611      	mov	r1, r2
 800bff8:	f004 fab2 	bl	8010560 <Network::SetQueuedStaticIp(unsigned int, unsigned int)>
 800bffc:	4620      	mov	r0, r4
 800bffe:	e7f4      	b.n	800bfea <RDMHandler::SetDHCPMode(bool, unsigned short)+0x2a>
 800c000:	2106      	movs	r1, #6
 800c002:	e7e5      	b.n	800bfd0 <RDMHandler::SetDHCPMode(bool, unsigned short)+0x10>
 800c004:	2000a008 	andcs	sl, r0, r8

0800c008 <RDMHandler::GetNameServers(unsigned short)>:
 800c008:	6842      	ldr	r2, [r0, #4]
 800c00a:	7dd2      	ldrb	r2, [r2, #23]
 800c00c:	2a02      	cmp	r2, #2
 800c00e:	d902      	bls.n	800c016 <RDMHandler::GetNameServers(unsigned short)+0xe>
 800c010:	2106      	movs	r1, #6
 800c012:	f7ff bd6d 	b.w	800baf0 <RDMHandler::RespondMessageNack(unsigned short)>
 800c016:	2200      	movs	r2, #0
 800c018:	6883      	ldr	r3, [r0, #8]
 800c01a:	765a      	strb	r2, [r3, #25]
 800c01c:	769a      	strb	r2, [r3, #26]
 800c01e:	76da      	strb	r2, [r3, #27]
 800c020:	771a      	strb	r2, [r3, #28]
 800c022:	2205      	movs	r2, #5
 800c024:	75da      	strb	r2, [r3, #23]
 800c026:	f7ff bc9f 	b.w	800b968 <RDMHandler::RespondMessageAck()>
	...

0800c02c <RDMHandler::GetZeroconf(unsigned short)>:
 800c02c:	b538      	push	{r3, r4, r5, lr}
 800c02e:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800c032:	4604      	mov	r4, r0
 800c034:	3117      	adds	r1, #23
 800c036:	f105 0018 	add.w	r0, r5, #24
 800c03a:	f7ff ff4f 	bl	800bedc <memcpy.constprop.0.isra.0>
 800c03e:	4b06      	ldr	r3, [pc, #24]	; (800c058 <RDMHandler::GetZeroconf(unsigned short)+0x2c>)
 800c040:	681a      	ldr	r2, [r3, #0]
 800c042:	7893      	ldrb	r3, [r2, #2]
 800c044:	b103      	cbz	r3, 800c048 <RDMHandler::GetZeroconf(unsigned short)+0x1c>
 800c046:	78d3      	ldrb	r3, [r2, #3]
 800c048:	772b      	strb	r3, [r5, #28]
 800c04a:	2305      	movs	r3, #5
 800c04c:	75eb      	strb	r3, [r5, #23]
 800c04e:	4620      	mov	r0, r4
 800c050:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c054:	f7ff bc88 	b.w	800b968 <RDMHandler::RespondMessageAck()>
 800c058:	2000a008 	andcs	sl, r0, r8

0800c05c <RDMHandler::SetZeroconf(bool, unsigned short)>:
 800c05c:	4b10      	ldr	r3, [pc, #64]	; (800c0a0 <RDMHandler::SetZeroconf(bool, unsigned short)+0x44>)
 800c05e:	b510      	push	{r4, lr}
 800c060:	681b      	ldr	r3, [r3, #0]
 800c062:	4604      	mov	r4, r0
 800c064:	7899      	ldrb	r1, [r3, #2]
 800c066:	6842      	ldr	r2, [r0, #4]
 800c068:	b921      	cbnz	r1, 800c074 <RDMHandler::SetZeroconf(bool, unsigned short)+0x18>
 800c06a:	210b      	movs	r1, #11
 800c06c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c070:	f7ff bd3e 	b.w	800baf0 <RDMHandler::RespondMessageNack(unsigned short)>
 800c074:	7ed2      	ldrb	r2, [r2, #27]
 800c076:	2a01      	cmp	r2, #1
 800c078:	d109      	bne.n	800c08e <RDMHandler::SetZeroconf(bool, unsigned short)+0x32>
 800c07a:	f8d3 20bc 	ldr.w	r2, [r3, #188]	; 0xbc
 800c07e:	f042 0208 	orr.w	r2, r2, #8
 800c082:	f8c3 20bc 	str.w	r2, [r3, #188]	; 0xbc
 800c086:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c08a:	f7ff bc6d 	b.w	800b968 <RDMHandler::RespondMessageAck()>
 800c08e:	b92a      	cbnz	r2, 800c09c <RDMHandler::SetZeroconf(bool, unsigned short)+0x40>
 800c090:	4618      	mov	r0, r3
 800c092:	4611      	mov	r1, r2
 800c094:	f004 fa64 	bl	8010560 <Network::SetQueuedStaticIp(unsigned int, unsigned int)>
 800c098:	4620      	mov	r0, r4
 800c09a:	e7f4      	b.n	800c086 <RDMHandler::SetZeroconf(bool, unsigned short)+0x2a>
 800c09c:	2106      	movs	r1, #6
 800c09e:	e7e5      	b.n	800c06c <RDMHandler::SetZeroconf(bool, unsigned short)+0x10>
 800c0a0:	2000a008 	andcs	sl, r0, r8

0800c0a4 <RDMHandler::RenewDhcp(bool, unsigned short)>:
 800c0a4:	4b09      	ldr	r3, [pc, #36]	; (800c0cc <RDMHandler::RenewDhcp(bool, unsigned short)+0x28>)
 800c0a6:	b510      	push	{r4, lr}
 800c0a8:	681b      	ldr	r3, [r3, #0]
 800c0aa:	4604      	mov	r4, r0
 800c0ac:	785a      	ldrb	r2, [r3, #1]
 800c0ae:	b922      	cbnz	r2, 800c0ba <RDMHandler::RenewDhcp(bool, unsigned short)+0x16>
 800c0b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c0b4:	210b      	movs	r1, #11
 800c0b6:	f7ff bd1b 	b.w	800baf0 <RDMHandler::RespondMessageNack(unsigned short)>
 800c0ba:	4618      	mov	r0, r3
 800c0bc:	f004 fa06 	bl	80104cc <Network::EnableDhcp()>
 800c0c0:	4620      	mov	r0, r4
 800c0c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c0c6:	f7ff bc4f 	b.w	800b968 <RDMHandler::RespondMessageAck()>
 800c0ca:	bf00      	nop
 800c0cc:	2000a008 	andcs	sl, r0, r8

0800c0d0 <RDMHandler::GetAddressNetmask(unsigned short)>:
 800c0d0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c0d2:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800c0d6:	4e0f      	ldr	r6, [pc, #60]	; (800c114 <RDMHandler::GetAddressNetmask(unsigned short)+0x44>)
 800c0d8:	4604      	mov	r4, r0
 800c0da:	6833      	ldr	r3, [r6, #0]
 800c0dc:	f105 0018 	add.w	r0, r5, #24
 800c0e0:	691b      	ldr	r3, [r3, #16]
 800c0e2:	3117      	adds	r1, #23
 800c0e4:	9301      	str	r3, [sp, #4]
 800c0e6:	f7ff fef9 	bl	800bedc <memcpy.constprop.0.isra.0>
 800c0ea:	a901      	add	r1, sp, #4
 800c0ec:	f105 001c 	add.w	r0, r5, #28
 800c0f0:	f7ff fef4 	bl	800bedc <memcpy.constprop.0.isra.0>
 800c0f4:	6836      	ldr	r6, [r6, #0]
 800c0f6:	69b0      	ldr	r0, [r6, #24]
 800c0f8:	f008 fdea 	bl	8014cd0 <__popcountsi2>
 800c0fc:	f885 0020 	strb.w	r0, [r5, #32]
 800c100:	7873      	ldrb	r3, [r6, #1]
 800c102:	4620      	mov	r0, r4
 800c104:	f885 3021 	strb.w	r3, [r5, #33]	; 0x21
 800c108:	230a      	movs	r3, #10
 800c10a:	75eb      	strb	r3, [r5, #23]
 800c10c:	f7ff fc2c 	bl	800b968 <RDMHandler::RespondMessageAck()>
 800c110:	b002      	add	sp, #8
 800c112:	bd70      	pop	{r4, r5, r6, pc}
 800c114:	2000a008 	andcs	sl, r0, r8

0800c118 <RDMHandler::GetStaticAddress(unsigned short)>:
 800c118:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c11a:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800c11e:	4e0e      	ldr	r6, [pc, #56]	; (800c158 <RDMHandler::GetStaticAddress(unsigned short)+0x40>)
 800c120:	4604      	mov	r4, r0
 800c122:	6833      	ldr	r3, [r6, #0]
 800c124:	f105 0018 	add.w	r0, r5, #24
 800c128:	691b      	ldr	r3, [r3, #16]
 800c12a:	3117      	adds	r1, #23
 800c12c:	9301      	str	r3, [sp, #4]
 800c12e:	f7ff fed5 	bl	800bedc <memcpy.constprop.0.isra.0>
 800c132:	a901      	add	r1, sp, #4
 800c134:	f105 001c 	add.w	r0, r5, #28
 800c138:	f7ff fed0 	bl	800bedc <memcpy.constprop.0.isra.0>
 800c13c:	6833      	ldr	r3, [r6, #0]
 800c13e:	6998      	ldr	r0, [r3, #24]
 800c140:	f008 fdc6 	bl	8014cd0 <__popcountsi2>
 800c144:	2309      	movs	r3, #9
 800c146:	f885 0020 	strb.w	r0, [r5, #32]
 800c14a:	75eb      	strb	r3, [r5, #23]
 800c14c:	4620      	mov	r0, r4
 800c14e:	f7ff fc0b 	bl	800b968 <RDMHandler::RespondMessageAck()>
 800c152:	b002      	add	sp, #8
 800c154:	bd70      	pop	{r4, r5, r6, pc}
 800c156:	bf00      	nop
 800c158:	2000a008 	andcs	sl, r0, r8

0800c15c <RDMHandler::SetStaticAddress(bool, unsigned short)>:
 800c15c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c15e:	6845      	ldr	r5, [r0, #4]
 800c160:	4604      	mov	r4, r0
 800c162:	7dab      	ldrb	r3, [r5, #22]
 800c164:	2b09      	cmp	r3, #9
 800c166:	d005      	beq.n	800c174 <RDMHandler::SetStaticAddress(bool, unsigned short)+0x18>
 800c168:	2101      	movs	r1, #1
 800c16a:	b003      	add	sp, #12
 800c16c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800c170:	f7ff bcbe 	b.w	800baf0 <RDMHandler::RespondMessageNack(unsigned short)>
 800c174:	f105 011b 	add.w	r1, r5, #27
 800c178:	a801      	add	r0, sp, #4
 800c17a:	f7ff feaf 	bl	800bedc <memcpy.constprop.0.isra.0>
 800c17e:	4b09      	ldr	r3, [pc, #36]	; (800c1a4 <RDMHandler::SetStaticAddress(bool, unsigned short)+0x48>)
 800c180:	7fea      	ldrb	r2, [r5, #31]
 800c182:	6818      	ldr	r0, [r3, #0]
 800c184:	9901      	ldr	r1, [sp, #4]
 800c186:	b12a      	cbz	r2, 800c194 <RDMHandler::SetStaticAddress(bool, unsigned short)+0x38>
 800c188:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800c18c:	f1c2 0220 	rsb	r2, r2, #32
 800c190:	4093      	lsls	r3, r2
 800c192:	ba1a      	rev	r2, r3
 800c194:	f004 f9e4 	bl	8010560 <Network::SetQueuedStaticIp(unsigned int, unsigned int)>
 800c198:	4620      	mov	r0, r4
 800c19a:	f7ff fbe5 	bl	800b968 <RDMHandler::RespondMessageAck()>
 800c19e:	b003      	add	sp, #12
 800c1a0:	bd30      	pop	{r4, r5, pc}
 800c1a2:	bf00      	nop
 800c1a4:	2000a008 	andcs	sl, r0, r8

0800c1a8 <RDMHandler::ApplyConfiguration(bool, unsigned short)>:
 800c1a8:	4b08      	ldr	r3, [pc, #32]	; (800c1cc <RDMHandler::ApplyConfiguration(bool, unsigned short)+0x24>)
 800c1aa:	b510      	push	{r4, lr}
 800c1ac:	4604      	mov	r4, r0
 800c1ae:	6818      	ldr	r0, [r3, #0]
 800c1b0:	f004 f9e3 	bl	801057a <Network::ApplyQueuedConfig()>
 800c1b4:	b120      	cbz	r0, 800c1c0 <RDMHandler::ApplyConfiguration(bool, unsigned short)+0x18>
 800c1b6:	4620      	mov	r0, r4
 800c1b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c1bc:	f7ff bbd4 	b.w	800b968 <RDMHandler::RespondMessageAck()>
 800c1c0:	4620      	mov	r0, r4
 800c1c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c1c6:	2101      	movs	r1, #1
 800c1c8:	f7ff bc92 	b.w	800baf0 <RDMHandler::RespondMessageNack(unsigned short)>
 800c1cc:	2000a008 	andcs	sl, r0, r8

0800c1d0 <RDMHandler::GetDefaultRoute(unsigned short)>:
 800c1d0:	4b0c      	ldr	r3, [pc, #48]	; (800c204 <RDMHandler::GetDefaultRoute(unsigned short)+0x34>)
 800c1d2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c1d4:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800c1d8:	681b      	ldr	r3, [r3, #0]
 800c1da:	4604      	mov	r4, r0
 800c1dc:	695b      	ldr	r3, [r3, #20]
 800c1de:	f105 0018 	add.w	r0, r5, #24
 800c1e2:	3117      	adds	r1, #23
 800c1e4:	9301      	str	r3, [sp, #4]
 800c1e6:	f7ff fe79 	bl	800bedc <memcpy.constprop.0.isra.0>
 800c1ea:	a901      	add	r1, sp, #4
 800c1ec:	f105 001c 	add.w	r0, r5, #28
 800c1f0:	f7ff fe74 	bl	800bedc <memcpy.constprop.0.isra.0>
 800c1f4:	2308      	movs	r3, #8
 800c1f6:	4620      	mov	r0, r4
 800c1f8:	75eb      	strb	r3, [r5, #23]
 800c1fa:	f7ff fbb5 	bl	800b968 <RDMHandler::RespondMessageAck()>
 800c1fe:	b003      	add	sp, #12
 800c200:	bd30      	pop	{r4, r5, pc}
 800c202:	bf00      	nop
 800c204:	2000a008 	andcs	sl, r0, r8

0800c208 <RDMHandler::SetDefaultRoute(bool, unsigned short)>:
 800c208:	210b      	movs	r1, #11
 800c20a:	f7ff bc71 	b.w	800baf0 <RDMHandler::RespondMessageNack(unsigned short)>
	...

0800c210 <RDMHandler::GetHostName(unsigned short)>:
 800c210:	4b0a      	ldr	r3, [pc, #40]	; (800c23c <RDMHandler::GetHostName(unsigned short)+0x2c>)
 800c212:	b510      	push	{r4, lr}
 800c214:	6819      	ldr	r1, [r3, #0]
 800c216:	4604      	mov	r4, r0
 800c218:	311c      	adds	r1, #28
 800c21a:	460b      	mov	r3, r1
 800c21c:	461a      	mov	r2, r3
 800c21e:	7810      	ldrb	r0, [r2, #0]
 800c220:	3301      	adds	r3, #1
 800c222:	2800      	cmp	r0, #0
 800c224:	d1fa      	bne.n	800c21c <RDMHandler::GetHostName(unsigned short)+0xc>
 800c226:	1a52      	subs	r2, r2, r1
 800c228:	4620      	mov	r0, r4
 800c22a:	b292      	uxth	r2, r2
 800c22c:	f7ff fb42 	bl	800b8b4 <RDMHandler::HandleString(char const*, unsigned int)>
 800c230:	4620      	mov	r0, r4
 800c232:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c236:	f7ff bb97 	b.w	800b968 <RDMHandler::RespondMessageAck()>
 800c23a:	bf00      	nop
 800c23c:	2000a008 	andcs	sl, r0, r8

0800c240 <RDMHandler::SetHostName(bool, unsigned short)>:
 800c240:	b510      	push	{r4, lr}
 800c242:	6841      	ldr	r1, [r0, #4]
 800c244:	4604      	mov	r4, r0
 800c246:	7d8b      	ldrb	r3, [r1, #22]
 800c248:	2b3f      	cmp	r3, #63	; 0x3f
 800c24a:	d904      	bls.n	800c256 <RDMHandler::SetHostName(bool, unsigned short)+0x16>
 800c24c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c250:	2102      	movs	r1, #2
 800c252:	f7ff bc4d 	b.w	800baf0 <RDMHandler::RespondMessageNack(unsigned short)>
 800c256:	2200      	movs	r2, #0
 800c258:	440b      	add	r3, r1
 800c25a:	75da      	strb	r2, [r3, #23]
 800c25c:	4b04      	ldr	r3, [pc, #16]	; (800c270 <RDMHandler::SetHostName(bool, unsigned short)+0x30>)
 800c25e:	3117      	adds	r1, #23
 800c260:	6818      	ldr	r0, [r3, #0]
 800c262:	f004 f8f1 	bl	8010448 <Network::SetHostName(char const*)>
 800c266:	4620      	mov	r0, r4
 800c268:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c26c:	f7ff bb7c 	b.w	800b968 <RDMHandler::RespondMessageAck()>
 800c270:	2000a008 	andcs	sl, r0, r8

0800c274 <RDMHandler::GetDomainName(unsigned short)>:
 800c274:	4b0a      	ldr	r3, [pc, #40]	; (800c2a0 <RDMHandler::GetDomainName(unsigned short)+0x2c>)
 800c276:	b510      	push	{r4, lr}
 800c278:	6819      	ldr	r1, [r3, #0]
 800c27a:	4604      	mov	r4, r0
 800c27c:	315c      	adds	r1, #92	; 0x5c
 800c27e:	460b      	mov	r3, r1
 800c280:	461a      	mov	r2, r3
 800c282:	7810      	ldrb	r0, [r2, #0]
 800c284:	3301      	adds	r3, #1
 800c286:	2800      	cmp	r0, #0
 800c288:	d1fa      	bne.n	800c280 <RDMHandler::GetDomainName(unsigned short)+0xc>
 800c28a:	1a52      	subs	r2, r2, r1
 800c28c:	4620      	mov	r0, r4
 800c28e:	b292      	uxth	r2, r2
 800c290:	f7ff fb10 	bl	800b8b4 <RDMHandler::HandleString(char const*, unsigned int)>
 800c294:	4620      	mov	r0, r4
 800c296:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c29a:	f7ff bb65 	b.w	800b968 <RDMHandler::RespondMessageAck()>
 800c29e:	bf00      	nop
 800c2a0:	2000a008 	andcs	sl, r0, r8

0800c2a4 <RDMHandler::SetDomainName(bool, unsigned short)>:
 800c2a4:	210b      	movs	r1, #11
 800c2a6:	f7ff bc23 	b.w	800baf0 <RDMHandler::RespondMessageNack(unsigned short)>
	...

0800c2ac <RDMDevice::RDMDevice()>:
 800c2ac:	4a33      	ldr	r2, [pc, #204]	; (800c37c <RDMDevice::RDMDevice()+0xd0>)
 800c2ae:	2300      	movs	r3, #0
 800c2b0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c2b2:	4604      	mov	r4, r0
 800c2b4:	4611      	mov	r1, r2
 800c2b6:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
 800c2ba:	f880 3071 	strb.w	r3, [r0, #113]	; 0x71
 800c2be:	f8a0 3072 	strh.w	r3, [r0, #114]	; 0x72
 800c2c2:	6743      	str	r3, [r0, #116]	; 0x74
 800c2c4:	4613      	mov	r3, r2
 800c2c6:	7818      	ldrb	r0, [r3, #0]
 800c2c8:	3201      	adds	r2, #1
 800c2ca:	2800      	cmp	r0, #0
 800c2cc:	d1fa      	bne.n	800c2c4 <RDMDevice::RDMDevice()+0x18>
 800c2ce:	1a5b      	subs	r3, r3, r1
 800c2d0:	2b20      	cmp	r3, #32
 800c2d2:	bf28      	it	cs
 800c2d4:	2320      	movcs	r3, #32
 800c2d6:	f104 052b 	add.w	r5, r4, #43	; 0x2b
 800c2da:	4629      	mov	r1, r5
 800c2dc:	461a      	mov	r2, r3
 800c2de:	4827      	ldr	r0, [pc, #156]	; (800c37c <RDMDevice::RDMDevice()+0xd0>)
 800c2e0:	3a01      	subs	r2, #1
 800c2e2:	d23b      	bcs.n	800c35c <RDMDevice::RDMDevice()+0xb0>
 800c2e4:	f884 304b 	strb.w	r3, [r4, #75]	; 0x4b
 800c2e8:	4b25      	ldr	r3, [pc, #148]	; (800c380 <RDMDevice::RDMDevice()+0xd4>)
 800c2ea:	4669      	mov	r1, sp
 800c2ec:	781a      	ldrb	r2, [r3, #0]
 800c2ee:	7022      	strb	r2, [r4, #0]
 800c2f0:	785b      	ldrb	r3, [r3, #1]
 800c2f2:	7063      	strb	r3, [r4, #1]
 800c2f4:	4b23      	ldr	r3, [pc, #140]	; (800c384 <RDMDevice::RDMDevice()+0xd8>)
 800c2f6:	6818      	ldr	r0, [r3, #0]
 800c2f8:	f003 ff0c 	bl	8010114 <Network::MacAddressCopyTo(unsigned char*)>
 800c2fc:	f89d 3002 	ldrb.w	r3, [sp, #2]
 800c300:	f89d 2003 	ldrb.w	r2, [sp, #3]
 800c304:	70a3      	strb	r3, [r4, #2]
 800c306:	7263      	strb	r3, [r4, #9]
 800c308:	4b1f      	ldr	r3, [pc, #124]	; (800c388 <RDMDevice::RDMDevice()+0xdc>)
 800c30a:	70e2      	strb	r2, [r4, #3]
 800c30c:	7222      	strb	r2, [r4, #8]
 800c30e:	461a      	mov	r2, r3
 800c310:	f89d 1004 	ldrb.w	r1, [sp, #4]
 800c314:	f89d 0005 	ldrb.w	r0, [sp, #5]
 800c318:	7121      	strb	r1, [r4, #4]
 800c31a:	7160      	strb	r0, [r4, #5]
 800c31c:	71a0      	strb	r0, [r4, #6]
 800c31e:	71e1      	strb	r1, [r4, #7]
 800c320:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800c324:	2900      	cmp	r1, #0
 800c326:	d1fb      	bne.n	800c320 <RDMDevice::RDMDevice()+0x74>
 800c328:	1a9b      	subs	r3, r3, r2
 800c32a:	2b20      	cmp	r3, #32
 800c32c:	bf28      	it	cs
 800c32e:	2320      	movcs	r3, #32
 800c330:	461a      	mov	r2, r3
 800c332:	4915      	ldr	r1, [pc, #84]	; (800c388 <RDMDevice::RDMDevice()+0xdc>)
 800c334:	3a01      	subs	r2, #1
 800c336:	d216      	bcs.n	800c366 <RDMDevice::RDMDevice()+0xba>
 800c338:	f884 304b 	strb.w	r3, [r4, #75]	; 0x4b
 800c33c:	f06f 2380 	mvn.w	r3, #2147516416	; 0x80008000
 800c340:	64e3      	str	r3, [r4, #76]	; 0x4c
 800c342:	2314      	movs	r3, #20
 800c344:	4a11      	ldr	r2, [pc, #68]	; (800c38c <RDMDevice::RDMDevice()+0xe0>)
 800c346:	f884 3071 	strb.w	r3, [r4, #113]	; 0x71
 800c34a:	f104 0165 	add.w	r1, r4, #101	; 0x65
 800c34e:	f104 0351 	add.w	r3, r4, #81	; 0x51
 800c352:	4299      	cmp	r1, r3
 800c354:	d10c      	bne.n	800c370 <RDMDevice::RDMDevice()+0xc4>
 800c356:	4620      	mov	r0, r4
 800c358:	b002      	add	sp, #8
 800c35a:	bd70      	pop	{r4, r5, r6, pc}
 800c35c:	f810 6b01 	ldrb.w	r6, [r0], #1
 800c360:	f801 6b01 	strb.w	r6, [r1], #1
 800c364:	e7bc      	b.n	800c2e0 <RDMDevice::RDMDevice()+0x34>
 800c366:	f811 0b01 	ldrb.w	r0, [r1], #1
 800c36a:	f805 0b01 	strb.w	r0, [r5], #1
 800c36e:	e7e1      	b.n	800c334 <RDMDevice::RDMDevice()+0x88>
 800c370:	f812 0b01 	ldrb.w	r0, [r2], #1
 800c374:	f803 0b01 	strb.w	r0, [r3], #1
 800c378:	e7eb      	b.n	800c352 <RDMDevice::RDMDevice()+0xa6>
 800c37a:	bf00      	nop
 800c37c:	0801557b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r8, sl, ip, lr}
 800c380:	08015579 	stmdaeq	r1, {r0, r3, r4, r5, r6, r8, sl, ip, lr}
 800c384:	2000a008 	andcs	sl, r0, r8
 800c388:	0801547c 	stmdaeq	r1, {r2, r3, r4, r5, r6, sl, ip, lr}
 800c38c:	08015564 	stmdaeq	r1, {r2, r5, r6, r8, sl, ip, lr}

0800c390 <RDMDevice::Print()>:
 800c390:	b513      	push	{r0, r1, r4, lr}
 800c392:	4604      	mov	r4, r0
 800c394:	4818      	ldr	r0, [pc, #96]	; (800c3f8 <RDMDevice::Print()+0x68>)
 800c396:	f7fd f911 	bl	80095bc <printf>
 800c39a:	f894 104b 	ldrb.w	r1, [r4, #75]	; 0x4b
 800c39e:	f104 022b 	add.w	r2, r4, #43	; 0x2b
 800c3a2:	4816      	ldr	r0, [pc, #88]	; (800c3fc <RDMDevice::Print()+0x6c>)
 800c3a4:	f7fd f90a 	bl	80095bc <printf>
 800c3a8:	7862      	ldrb	r2, [r4, #1]
 800c3aa:	7821      	ldrb	r1, [r4, #0]
 800c3ac:	4814      	ldr	r0, [pc, #80]	; (800c400 <RDMDevice::Print()+0x70>)
 800c3ae:	f7fd f905 	bl	80095bc <printf>
 800c3b2:	79a3      	ldrb	r3, [r4, #6]
 800c3b4:	7a22      	ldrb	r2, [r4, #8]
 800c3b6:	7a61      	ldrb	r1, [r4, #9]
 800c3b8:	9300      	str	r3, [sp, #0]
 800c3ba:	4812      	ldr	r0, [pc, #72]	; (800c404 <RDMDevice::Print()+0x74>)
 800c3bc:	79e3      	ldrb	r3, [r4, #7]
 800c3be:	f7fd f8fd 	bl	80095bc <printf>
 800c3c2:	f894 102a 	ldrb.w	r1, [r4, #42]	; 0x2a
 800c3c6:	f104 020a 	add.w	r2, r4, #10
 800c3ca:	480f      	ldr	r0, [pc, #60]	; (800c408 <RDMDevice::Print()+0x78>)
 800c3cc:	f7fd f8f6 	bl	80095bc <printf>
 800c3d0:	f8b4 104c 	ldrh.w	r1, [r4, #76]	; 0x4c
 800c3d4:	f894 204c 	ldrb.w	r2, [r4, #76]	; 0x4c
 800c3d8:	0a09      	lsrs	r1, r1, #8
 800c3da:	480c      	ldr	r0, [pc, #48]	; (800c40c <RDMDevice::Print()+0x7c>)
 800c3dc:	f7fd f8ee 	bl	80095bc <printf>
 800c3e0:	f8b4 104e 	ldrh.w	r1, [r4, #78]	; 0x4e
 800c3e4:	f894 204e 	ldrb.w	r2, [r4, #78]	; 0x4e
 800c3e8:	4809      	ldr	r0, [pc, #36]	; (800c410 <RDMDevice::Print()+0x80>)
 800c3ea:	0a09      	lsrs	r1, r1, #8
 800c3ec:	b002      	add	sp, #8
 800c3ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c3f2:	f7fd b8e3 	b.w	80095bc <printf>
 800c3f6:	bf00      	nop
 800c3f8:	08015490 	stmdaeq	r1, {r4, r7, sl, ip, lr}
 800c3fc:	080154aa 	stmdaeq	r1, {r1, r3, r5, r7, sl, ip, lr}
 800c400:	080154c5 	stmdaeq	r1, {r0, r2, r6, r7, sl, ip, lr}
 800c404:	080154e4 	stmdaeq	r1, {r2, r5, r6, r7, sl, ip, lr}
 800c408:	0801550b 	stmdaeq	r1, {r0, r1, r3, r8, sl, ip, lr}
 800c40c:	08015526 	stmdaeq	r1, {r1, r2, r5, r8, sl, ip, lr}
 800c410:	08015545 	stmdaeq	r1, {r0, r2, r6, r8, sl, ip, lr}

0800c414 <LightSet::Blackout(bool)>:
 800c414:	4770      	bx	lr

0800c416 <DmxSend::~DmxSend()>:
 800c416:	4770      	bx	lr

0800c418 <DmxSend::Start(unsigned int)>:
 800c418:	2301      	movs	r3, #1
 800c41a:	b430      	push	{r4, r5}
 800c41c:	4c08      	ldr	r4, [pc, #32]	; (800c440 <DmxSend::Start(unsigned int)+0x28>)
 800c41e:	fa03 f001 	lsl.w	r0, r3, r1
 800c422:	7822      	ldrb	r2, [r4, #0]
 800c424:	ea30 0502 	bics.w	r5, r0, r2
 800c428:	d007      	beq.n	800c43a <DmxSend::Start(unsigned int)+0x22>
 800c42a:	4302      	orrs	r2, r0
 800c42c:	4805      	ldr	r0, [pc, #20]	; (800c444 <DmxSend::Start(unsigned int)+0x2c>)
 800c42e:	7022      	strb	r2, [r4, #0]
 800c430:	6800      	ldr	r0, [r0, #0]
 800c432:	2200      	movs	r2, #0
 800c434:	bc30      	pop	{r4, r5}
 800c436:	f000 bd43 	b.w	800cec0 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 800c43a:	bc30      	pop	{r4, r5}
 800c43c:	4770      	bx	lr
 800c43e:	bf00      	nop
 800c440:	20000e50 	andcs	r0, r0, r0, asr lr
 800c444:	200016b8 			; <UNDEFINED> instruction: 0x200016b8

0800c448 <DmxSend::Stop(unsigned int)>:
 800c448:	2201      	movs	r2, #1
 800c44a:	b410      	push	{r4}
 800c44c:	4809      	ldr	r0, [pc, #36]	; (800c474 <DmxSend::Stop(unsigned int)+0x2c>)
 800c44e:	408a      	lsls	r2, r1
 800c450:	7803      	ldrb	r3, [r0, #0]
 800c452:	ea03 0402 	and.w	r4, r3, r2
 800c456:	439a      	bics	r2, r3
 800c458:	d109      	bne.n	800c46e <DmxSend::Stop(unsigned int)+0x26>
 800c45a:	ea23 0304 	bic.w	r3, r3, r4
 800c45e:	7003      	strb	r3, [r0, #0]
 800c460:	2300      	movs	r3, #0
 800c462:	4805      	ldr	r0, [pc, #20]	; (800c478 <DmxSend::Stop(unsigned int)+0x30>)
 800c464:	461a      	mov	r2, r3
 800c466:	6800      	ldr	r0, [r0, #0]
 800c468:	bc10      	pop	{r4}
 800c46a:	f000 bd29 	b.w	800cec0 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 800c46e:	bc10      	pop	{r4}
 800c470:	4770      	bx	lr
 800c472:	bf00      	nop
 800c474:	20000e50 	andcs	r0, r0, r0, asr lr
 800c478:	200016b8 			; <UNDEFINED> instruction: 0x200016b8

0800c47c <DmxSend::SetData(unsigned int, unsigned char const*, unsigned int)>:
 800c47c:	b11b      	cbz	r3, 800c486 <DmxSend::SetData(unsigned int, unsigned char const*, unsigned int)+0xa>
 800c47e:	4802      	ldr	r0, [pc, #8]	; (800c488 <DmxSend::SetData(unsigned int, unsigned char const*, unsigned int)+0xc>)
 800c480:	6800      	ldr	r0, [r0, #0]
 800c482:	f000 becb 	b.w	800d21c <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)>
 800c486:	4770      	bx	lr
 800c488:	200016b8 			; <UNDEFINED> instruction: 0x200016b8

0800c48c <DmxSend::Print()>:
 800c48c:	b510      	push	{r4, lr}
 800c48e:	4c0e      	ldr	r4, [pc, #56]	; (800c4c8 <DmxSend::Print()+0x3c>)
 800c490:	480e      	ldr	r0, [pc, #56]	; (800c4cc <DmxSend::Print()+0x40>)
 800c492:	f7fd f893 	bl	80095bc <printf>
 800c496:	6823      	ldr	r3, [r4, #0]
 800c498:	480d      	ldr	r0, [pc, #52]	; (800c4d0 <DmxSend::Print()+0x44>)
 800c49a:	6819      	ldr	r1, [r3, #0]
 800c49c:	f7fd f88e 	bl	80095bc <printf>
 800c4a0:	6823      	ldr	r3, [r4, #0]
 800c4a2:	480c      	ldr	r0, [pc, #48]	; (800c4d4 <DmxSend::Print()+0x48>)
 800c4a4:	6859      	ldr	r1, [r3, #4]
 800c4a6:	f7fd f889 	bl	80095bc <printf>
 800c4aa:	6823      	ldr	r3, [r4, #0]
 800c4ac:	490a      	ldr	r1, [pc, #40]	; (800c4d8 <DmxSend::Print()+0x4c>)
 800c4ae:	689b      	ldr	r3, [r3, #8]
 800c4b0:	480a      	ldr	r0, [pc, #40]	; (800c4dc <DmxSend::Print()+0x50>)
 800c4b2:	fbb1 f1f3 	udiv	r1, r1, r3
 800c4b6:	f7fd f881 	bl	80095bc <printf>
 800c4ba:	6823      	ldr	r3, [r4, #0]
 800c4bc:	4808      	ldr	r0, [pc, #32]	; (800c4e0 <DmxSend::Print()+0x54>)
 800c4be:	8a19      	ldrh	r1, [r3, #16]
 800c4c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c4c4:	f7fd b87a 	b.w	80095bc <printf>
 800c4c8:	200016b8 			; <UNDEFINED> instruction: 0x200016b8
 800c4cc:	08015597 	stmdaeq	r1, {r0, r1, r2, r4, r7, r8, sl, ip, lr}
 800c4d0:	080155a1 	stmdaeq	r1, {r0, r5, r7, r8, sl, ip, lr}
 800c4d4:	080155b5 	stmdaeq	r1, {r0, r2, r4, r5, r7, r8, sl, ip, lr}
 800c4d8:	000f4240 	andeq	r4, pc, r0, asr #4
 800c4dc:	080155c9 	stmdaeq	r1, {r0, r3, r6, r7, r8, sl, ip, lr}
 800c4e0:	080155dd 	stmdaeq	r1, {r0, r2, r3, r4, r6, r7, r8, sl, ip, lr}

0800c4e4 <DmxSend::~DmxSend()>:
 800c4e4:	b510      	push	{r4, lr}
 800c4e6:	4604      	mov	r4, r0
 800c4e8:	f006 fa32 	bl	8012950 <operator delete(void*)>
 800c4ec:	4620      	mov	r0, r4
 800c4ee:	bd10      	pop	{r4, pc}

0800c4f0 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>:
 800c4f0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c4f2:	88c6      	ldrh	r6, [r0, #6]
 800c4f4:	8885      	ldrh	r5, [r0, #4]
 800c4f6:	42ae      	cmp	r6, r5
 800c4f8:	d216      	bcs.n	800c528 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x38>
 800c4fa:	4604      	mov	r4, r0
 800c4fc:	6800      	ldr	r0, [r0, #0]
 800c4fe:	1bad      	subs	r5, r5, r6
 800c500:	4430      	add	r0, r6
 800c502:	7a26      	ldrb	r6, [r4, #8]
 800c504:	b923      	cbnz	r3, 800c510 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x20>
 800c506:	b926      	cbnz	r6, 800c512 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x22>
 800c508:	9200      	str	r2, [sp, #0]
 800c50a:	460b      	mov	r3, r1
 800c50c:	4a09      	ldr	r2, [pc, #36]	; (800c534 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x44>)
 800c50e:	e003      	b.n	800c518 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800c510:	b166      	cbz	r6, 800c52c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x3c>
 800c512:	460b      	mov	r3, r1
 800c514:	9200      	str	r2, [sp, #0]
 800c516:	4a08      	ldr	r2, [pc, #32]	; (800c538 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x48>)
 800c518:	4629      	mov	r1, r5
 800c51a:	f7fd f877 	bl	800960c <snprintf>
 800c51e:	4285      	cmp	r5, r0
 800c520:	bfa2      	ittt	ge
 800c522:	88e3      	ldrhge	r3, [r4, #6]
 800c524:	181b      	addge	r3, r3, r0
 800c526:	80e3      	strhge	r3, [r4, #6]
 800c528:	b002      	add	sp, #8
 800c52a:	bd70      	pop	{r4, r5, r6, pc}
 800c52c:	9200      	str	r2, [sp, #0]
 800c52e:	460b      	mov	r3, r1
 800c530:	4a02      	ldr	r2, [pc, #8]	; (800c53c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x4c>)
 800c532:	e7f1      	b.n	800c518 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800c534:	08014fa2 	stmdaeq	r1, {r1, r5, r7, r8, r9, sl, fp, lr}
 800c538:	08014f99 	stmdaeq	r1, {r0, r3, r4, r7, r8, r9, sl, fp, lr}
 800c53c:	08014fa3 	stmdaeq	r1, {r0, r1, r5, r7, r8, r9, sl, fp, lr}

0800c540 <DmxParams::DmxParams(DmxParamsStore*)>:
 800c540:	6001      	str	r1, [r0, #0]
 800c542:	2100      	movs	r1, #0
 800c544:	4a03      	ldr	r2, [pc, #12]	; (800c554 <DmxParams::DmxParams(DmxParamsStore*)+0x14>)
 800c546:	e9c0 1201 	strd	r1, r2, [r0, #4]
 800c54a:	f64f 7228 	movw	r2, #65320	; 0xff28
 800c54e:	8182      	strh	r2, [r0, #12]
 800c550:	4770      	bx	lr
 800c552:	bf00      	nop
 800c554:	000c00b0 	strheq	r0, [ip], -r0	; <UNPREDICTABLE>

0800c558 <DmxParams::Load()>:
 800c558:	b508      	push	{r3, lr}
 800c55a:	2300      	movs	r3, #0
 800c55c:	4601      	mov	r1, r0
 800c55e:	6043      	str	r3, [r0, #4]
 800c560:	6800      	ldr	r0, [r0, #0]
 800c562:	b120      	cbz	r0, 800c56e <DmxParams::Load()+0x16>
 800c564:	6803      	ldr	r3, [r0, #0]
 800c566:	3104      	adds	r1, #4
 800c568:	68db      	ldr	r3, [r3, #12]
 800c56a:	4798      	blx	r3
 800c56c:	2001      	movs	r0, #1
 800c56e:	bd08      	pop	{r3, pc}

0800c570 <DmxParams::Load(char const*, unsigned int)>:
 800c570:	6803      	ldr	r3, [r0, #0]
 800c572:	b1d3      	cbz	r3, 800c5aa <DmxParams::Load(char const*, unsigned int)+0x3a>
 800c574:	2300      	movs	r3, #0
 800c576:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c578:	460d      	mov	r5, r1
 800c57a:	4616      	mov	r6, r2
 800c57c:	4604      	mov	r4, r0
 800c57e:	6043      	str	r3, [r0, #4]
 800c580:	4602      	mov	r2, r0
 800c582:	490a      	ldr	r1, [pc, #40]	; (800c5ac <DmxParams::Load(char const*, unsigned int)+0x3c>)
 800c584:	4668      	mov	r0, sp
 800c586:	f005 fc55 	bl	8011e34 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800c58a:	4632      	mov	r2, r6
 800c58c:	4629      	mov	r1, r5
 800c58e:	4668      	mov	r0, sp
 800c590:	f005 fc54 	bl	8011e3c <ReadConfigFile::Read(char const*, unsigned int)>
 800c594:	4621      	mov	r1, r4
 800c596:	f851 0b04 	ldr.w	r0, [r1], #4
 800c59a:	6803      	ldr	r3, [r0, #0]
 800c59c:	689b      	ldr	r3, [r3, #8]
 800c59e:	4798      	blx	r3
 800c5a0:	4668      	mov	r0, sp
 800c5a2:	f005 fc4a 	bl	8011e3a <ReadConfigFile::~ReadConfigFile()>
 800c5a6:	b002      	add	sp, #8
 800c5a8:	bd70      	pop	{r4, r5, r6, pc}
 800c5aa:	4770      	bx	lr
 800c5ac:	0800c67d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sl, lr, pc}

0800c5b0 <DmxParams::callbackFunction(char const*)>:
 800c5b0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c5b2:	460d      	mov	r5, r1
 800c5b4:	4604      	mov	r4, r0
 800c5b6:	492d      	ldr	r1, [pc, #180]	; (800c66c <DmxParams::callbackFunction(char const*)+0xbc>)
 800c5b8:	4628      	mov	r0, r5
 800c5ba:	f10d 0206 	add.w	r2, sp, #6
 800c5be:	f005 fd2e 	bl	801201e <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800c5c2:	b988      	cbnz	r0, 800c5e8 <DmxParams::callbackFunction(char const*)+0x38>
 800c5c4:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800c5c8:	6863      	ldr	r3, [r4, #4]
 800c5ca:	2a5b      	cmp	r2, #91	; 0x5b
 800c5cc:	d907      	bls.n	800c5de <DmxParams::callbackFunction(char const*)+0x2e>
 800c5ce:	2ab0      	cmp	r2, #176	; 0xb0
 800c5d0:	d005      	beq.n	800c5de <DmxParams::callbackFunction(char const*)+0x2e>
 800c5d2:	8122      	strh	r2, [r4, #8]
 800c5d4:	f043 0301 	orr.w	r3, r3, #1
 800c5d8:	6063      	str	r3, [r4, #4]
 800c5da:	b003      	add	sp, #12
 800c5dc:	bd30      	pop	{r4, r5, pc}
 800c5de:	22b0      	movs	r2, #176	; 0xb0
 800c5e0:	f023 0301 	bic.w	r3, r3, #1
 800c5e4:	8122      	strh	r2, [r4, #8]
 800c5e6:	e7f7      	b.n	800c5d8 <DmxParams::callbackFunction(char const*)+0x28>
 800c5e8:	4628      	mov	r0, r5
 800c5ea:	4921      	ldr	r1, [pc, #132]	; (800c670 <DmxParams::callbackFunction(char const*)+0xc0>)
 800c5ec:	f10d 0206 	add.w	r2, sp, #6
 800c5f0:	f005 fd15 	bl	801201e <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800c5f4:	b968      	cbnz	r0, 800c612 <DmxParams::callbackFunction(char const*)+0x62>
 800c5f6:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800c5fa:	6863      	ldr	r3, [r4, #4]
 800c5fc:	2a0c      	cmp	r2, #12
 800c5fe:	bf93      	iteet	ls
 800c600:	220c      	movls	r2, #12
 800c602:	8162      	strhhi	r2, [r4, #10]
 800c604:	f043 0302 	orrhi.w	r3, r3, #2
 800c608:	8162      	strhls	r2, [r4, #10]
 800c60a:	bf98      	it	ls
 800c60c:	f023 0302 	bicls.w	r3, r3, #2
 800c610:	e7e2      	b.n	800c5d8 <DmxParams::callbackFunction(char const*)+0x28>
 800c612:	4628      	mov	r0, r5
 800c614:	4917      	ldr	r1, [pc, #92]	; (800c674 <DmxParams::callbackFunction(char const*)+0xc4>)
 800c616:	f10d 0205 	add.w	r2, sp, #5
 800c61a:	f005 fd1e 	bl	801205a <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800c61e:	b950      	cbnz	r0, 800c636 <DmxParams::callbackFunction(char const*)+0x86>
 800c620:	f89d 2005 	ldrb.w	r2, [sp, #5]
 800c624:	6863      	ldr	r3, [r4, #4]
 800c626:	2a28      	cmp	r2, #40	; 0x28
 800c628:	7322      	strb	r2, [r4, #12]
 800c62a:	bf14      	ite	ne
 800c62c:	f043 0304 	orrne.w	r3, r3, #4
 800c630:	f023 0304 	biceq.w	r3, r3, #4
 800c634:	e7d0      	b.n	800c5d8 <DmxParams::callbackFunction(char const*)+0x28>
 800c636:	4628      	mov	r0, r5
 800c638:	490f      	ldr	r1, [pc, #60]	; (800c678 <DmxParams::callbackFunction(char const*)+0xc8>)
 800c63a:	f10d 0206 	add.w	r2, sp, #6
 800c63e:	f005 fcee 	bl	801201e <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800c642:	2800      	cmp	r0, #0
 800c644:	d1c9      	bne.n	800c5da <DmxParams::callbackFunction(char const*)+0x2a>
 800c646:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800c64a:	6863      	ldr	r3, [r4, #4]
 800c64c:	1e91      	subs	r1, r2, #2
 800c64e:	f5b1 7fff 	cmp.w	r1, #510	; 0x1fe
 800c652:	bf2f      	iteee	cs
 800c654:	22ff      	movcs	r2, #255	; 0xff
 800c656:	0852      	lsrcc	r2, r2, #1
 800c658:	f102 32ff 	addcc.w	r2, r2, #4294967295	; 0xffffffff
 800c65c:	7362      	strbcc	r2, [r4, #13]
 800c65e:	bf32      	itee	cc
 800c660:	f043 0308 	orrcc.w	r3, r3, #8
 800c664:	7362      	strbcs	r2, [r4, #13]
 800c666:	f023 0308 	biccs.w	r3, r3, #8
 800c66a:	e7b5      	b.n	800c5d8 <DmxParams::callbackFunction(char const*)+0x28>
 800c66c:	08015628 	stmdaeq	r1, {r3, r5, r9, sl, ip, lr}
 800c670:	0801564c 	stmdaeq	r1, {r2, r3, r6, r9, sl, ip, lr}
 800c674:	0801563f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r9, sl, ip, lr}
 800c678:	08015633 	stmdaeq	r1, {r0, r1, r4, r5, r9, sl, ip, lr}

0800c67c <DmxParams::staticCallbackFunction(void*, char const*)>:
 800c67c:	f7ff bf98 	b.w	800c5b0 <DmxParams::callbackFunction(char const*)>

0800c680 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)>:
 800c680:	b570      	push	{r4, r5, r6, lr}
 800c682:	4604      	mov	r4, r0
 800c684:	4615      	mov	r5, r2
 800c686:	461e      	mov	r6, r3
 800c688:	b086      	sub	sp, #24
 800c68a:	3004      	adds	r0, #4
 800c68c:	b369      	cbz	r1, 800c6ea <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x6a>
 800c68e:	220a      	movs	r2, #10
 800c690:	f006 fa21 	bl	8012ad6 <memmove>
 800c694:	462a      	mov	r2, r5
 800c696:	4633      	mov	r3, r6
 800c698:	4932      	ldr	r1, [pc, #200]	; (800c764 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xe4>)
 800c69a:	a803      	add	r0, sp, #12
 800c69c:	f005 fb2a 	bl	8011cf4 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800c6a0:	6863      	ldr	r3, [r4, #4]
 800c6a2:	8922      	ldrh	r2, [r4, #8]
 800c6a4:	4930      	ldr	r1, [pc, #192]	; (800c768 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xe8>)
 800c6a6:	f003 0301 	and.w	r3, r3, #1
 800c6aa:	a803      	add	r0, sp, #12
 800c6ac:	f7ff ff20 	bl	800c4f0 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800c6b0:	6863      	ldr	r3, [r4, #4]
 800c6b2:	8962      	ldrh	r2, [r4, #10]
 800c6b4:	492d      	ldr	r1, [pc, #180]	; (800c76c <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xec>)
 800c6b6:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800c6ba:	a803      	add	r0, sp, #12
 800c6bc:	f7ff ff18 	bl	800c4f0 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800c6c0:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800c6c4:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800c6c8:	7b23      	ldrb	r3, [r4, #12]
 800c6ca:	42aa      	cmp	r2, r5
 800c6cc:	6861      	ldr	r1, [r4, #4]
 800c6ce:	d221      	bcs.n	800c714 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x94>
 800c6d0:	9803      	ldr	r0, [sp, #12]
 800c6d2:	0749      	lsls	r1, r1, #29
 800c6d4:	4410      	add	r0, r2
 800c6d6:	eba5 0502 	sub.w	r5, r5, r2
 800c6da:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800c6de:	d40b      	bmi.n	800c6f8 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x78>
 800c6e0:	b95a      	cbnz	r2, 800c6fa <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x7a>
 800c6e2:	9300      	str	r3, [sp, #0]
 800c6e4:	4a22      	ldr	r2, [pc, #136]	; (800c770 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf0>)
 800c6e6:	4b23      	ldr	r3, [pc, #140]	; (800c774 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf4>)
 800c6e8:	e00a      	b.n	800c700 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x80>
 800c6ea:	6823      	ldr	r3, [r4, #0]
 800c6ec:	4601      	mov	r1, r0
 800c6ee:	681a      	ldr	r2, [r3, #0]
 800c6f0:	4618      	mov	r0, r3
 800c6f2:	68d2      	ldr	r2, [r2, #12]
 800c6f4:	4790      	blx	r2
 800c6f6:	e7cd      	b.n	800c694 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x14>
 800c6f8:	b37a      	cbz	r2, 800c75a <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xda>
 800c6fa:	9300      	str	r3, [sp, #0]
 800c6fc:	4a1e      	ldr	r2, [pc, #120]	; (800c778 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf8>)
 800c6fe:	4b1d      	ldr	r3, [pc, #116]	; (800c774 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf4>)
 800c700:	4629      	mov	r1, r5
 800c702:	f7fc ff83 	bl	800960c <snprintf>
 800c706:	4285      	cmp	r5, r0
 800c708:	bfa2      	ittt	ge
 800c70a:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800c70e:	18c0      	addge	r0, r0, r3
 800c710:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800c714:	7b62      	ldrb	r2, [r4, #13]
 800c716:	6863      	ldr	r3, [r4, #4]
 800c718:	3201      	adds	r2, #1
 800c71a:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 800c71e:	4917      	ldr	r1, [pc, #92]	; (800c77c <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xfc>)
 800c720:	0052      	lsls	r2, r2, #1
 800c722:	a803      	add	r0, sp, #12
 800c724:	f7ff fee4 	bl	800c4f0 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800c728:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800c72c:	b17b      	cbz	r3, 800c74e <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xce>
 800c72e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800c732:	9b03      	ldr	r3, [sp, #12]
 800c734:	4413      	add	r3, r2
 800c736:	227d      	movs	r2, #125	; 0x7d
 800c738:	f803 2c01 	strb.w	r2, [r3, #-1]
 800c73c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800c740:	9903      	ldr	r1, [sp, #12]
 800c742:	54ca      	strb	r2, [r1, r3]
 800c744:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800c748:	3301      	adds	r3, #1
 800c74a:	f8ad 3012 	strh.w	r3, [sp, #18]
 800c74e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800c752:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800c754:	601a      	str	r2, [r3, #0]
 800c756:	b006      	add	sp, #24
 800c758:	bd70      	pop	{r4, r5, r6, pc}
 800c75a:	9300      	str	r3, [sp, #0]
 800c75c:	4a08      	ldr	r2, [pc, #32]	; (800c780 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x100>)
 800c75e:	4b05      	ldr	r3, [pc, #20]	; (800c774 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf4>)
 800c760:	e7ce      	b.n	800c700 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x80>
 800c762:	bf00      	nop
 800c764:	08015655 	stmdaeq	r1, {r0, r2, r4, r6, r9, sl, ip, lr}
 800c768:	08015628 	stmdaeq	r1, {r3, r5, r9, sl, ip, lr}
 800c76c:	0801564c 	stmdaeq	r1, {r2, r3, r6, r9, sl, ip, lr}
 800c770:	08014fa2 	stmdaeq	r1, {r1, r5, r7, r8, r9, sl, fp, lr}
 800c774:	0801563f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r9, sl, ip, lr}
 800c778:	08014f99 	stmdaeq	r1, {r0, r3, r4, r7, r8, r9, sl, fp, lr}
 800c77c:	08015633 	stmdaeq	r1, {r0, r1, r4, r5, r9, sl, ip, lr}
 800c780:	08014fa3 	stmdaeq	r1, {r0, r1, r5, r7, r8, r9, sl, fp, lr}

0800c784 <DmxParams::Save(char*, unsigned int, unsigned int&)>:
 800c784:	b513      	push	{r0, r1, r4, lr}
 800c786:	6804      	ldr	r4, [r0, #0]
 800c788:	b914      	cbnz	r4, 800c790 <DmxParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800c78a:	601c      	str	r4, [r3, #0]
 800c78c:	b002      	add	sp, #8
 800c78e:	bd10      	pop	{r4, pc}
 800c790:	9300      	str	r3, [sp, #0]
 800c792:	4613      	mov	r3, r2
 800c794:	460a      	mov	r2, r1
 800c796:	2100      	movs	r1, #0
 800c798:	f7ff ff72 	bl	800c680 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)>
 800c79c:	e7f6      	b.n	800c78c <DmxParams::Save(char*, unsigned int, unsigned int&)+0x8>
	...

0800c7a0 <DmxParams::Set(Dmx*)>:
 800c7a0:	b538      	push	{r3, r4, r5, lr}
 800c7a2:	6843      	ldr	r3, [r0, #4]
 800c7a4:	4604      	mov	r4, r0
 800c7a6:	07d8      	lsls	r0, r3, #31
 800c7a8:	460d      	mov	r5, r1
 800c7aa:	d503      	bpl.n	800c7b4 <DmxParams::Set(Dmx*)+0x14>
 800c7ac:	4628      	mov	r0, r5
 800c7ae:	8921      	ldrh	r1, [r4, #8]
 800c7b0:	f000 fd0a 	bl	800d1c8 <Dmx::SetDmxBreakTime(unsigned int)>
 800c7b4:	6863      	ldr	r3, [r4, #4]
 800c7b6:	0799      	lsls	r1, r3, #30
 800c7b8:	d503      	bpl.n	800c7c2 <DmxParams::Set(Dmx*)+0x22>
 800c7ba:	4628      	mov	r0, r5
 800c7bc:	8961      	ldrh	r1, [r4, #10]
 800c7be:	f000 fd0d 	bl	800d1dc <Dmx::SetDmxMabTime(unsigned int)>
 800c7c2:	6863      	ldr	r3, [r4, #4]
 800c7c4:	075a      	lsls	r2, r3, #29
 800c7c6:	d507      	bpl.n	800c7d8 <DmxParams::Set(Dmx*)+0x38>
 800c7c8:	7b21      	ldrb	r1, [r4, #12]
 800c7ca:	b111      	cbz	r1, 800c7d2 <DmxParams::Set(Dmx*)+0x32>
 800c7cc:	4b08      	ldr	r3, [pc, #32]	; (800c7f0 <DmxParams::Set(Dmx*)+0x50>)
 800c7ce:	fbb3 f1f1 	udiv	r1, r3, r1
 800c7d2:	4628      	mov	r0, r5
 800c7d4:	f000 fcc4 	bl	800d160 <Dmx::SetDmxPeriodTime(unsigned int)>
 800c7d8:	6863      	ldr	r3, [r4, #4]
 800c7da:	071b      	lsls	r3, r3, #28
 800c7dc:	d507      	bpl.n	800c7ee <DmxParams::Set(Dmx*)+0x4e>
 800c7de:	7b61      	ldrb	r1, [r4, #13]
 800c7e0:	4628      	mov	r0, r5
 800c7e2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c7e6:	3101      	adds	r1, #1
 800c7e8:	0049      	lsls	r1, r1, #1
 800c7ea:	f000 bd01 	b.w	800d1f0 <Dmx::SetDmxSlots(unsigned short)>
 800c7ee:	bd38      	pop	{r3, r4, r5, pc}
 800c7f0:	000f4240 	andeq	r4, pc, r0, asr #4

0800c7f4 <DmxParams::Dump()>:
 800c7f4:	4770      	bx	lr
	...

0800c7f8 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)>:
 800c7f8:	b570      	push	{r4, r5, r6, lr}
 800c7fa:	f3bf 8f5f 	dmb	sy
 800c7fe:	2508      	movs	r5, #8
 800c800:	4ba9      	ldr	r3, [pc, #676]	; (800caa8 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x2b0>)
 800c802:	f8c3 5c10 	str.w	r5, [r3, #3088]	; 0xc10
 800c806:	6802      	ldr	r2, [r0, #0]
 800c808:	f012 0f02 	tst.w	r2, #2
 800c80c:	4aa7      	ldr	r2, [pc, #668]	; (800caac <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x2b4>)
 800c80e:	d017      	beq.n	800c840 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x48>
 800c810:	6804      	ldr	r4, [r0, #0]
 800c812:	f024 0402 	bic.w	r4, r4, #2
 800c816:	6004      	str	r4, [r0, #0]
 800c818:	6840      	ldr	r0, [r0, #4]
 800c81a:	f44f 7004 	mov.w	r0, #528	; 0x210
 800c81e:	fb00 2201 	mla	r2, r0, r1, r2
 800c822:	2100      	movs	r1, #0
 800c824:	f8c2 1204 	str.w	r1, [r2, #516]	; 0x204
 800c828:	2102      	movs	r1, #2
 800c82a:	f8c2 120c 	str.w	r1, [r2, #524]	; 0x20c
 800c82e:	2210      	movs	r2, #16
 800c830:	f8c3 5c14 	str.w	r5, [r3, #3092]	; 0xc14
 800c834:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 800c838:	2220      	movs	r2, #32
 800c83a:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 800c83e:	bd70      	pop	{r4, r5, r6, pc}
 800c840:	f44f 7304 	mov.w	r3, #528	; 0x210
 800c844:	fb03 2401 	mla	r4, r3, r1, r2
 800c848:	6840      	ldr	r0, [r0, #4]
 800c84a:	f8d4 420c 	ldr.w	r4, [r4, #524]	; 0x20c
 800c84e:	f3c0 0008 	ubfx	r0, r0, #0, #9
 800c852:	2c0a      	cmp	r4, #10
 800c854:	f200 811f 	bhi.w	800ca96 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x29e>
 800c858:	e8df f014 	tbh	[pc, r4, lsl #1]
 800c85c:	011d000b 	tsteq	sp, fp
 800c860:	011d001b 	tsteq	sp, fp, lsl r0
 800c864:	00750049 	rsbseq	r0, r5, r9, asr #32
 800c868:	00a40094 	umlaleq	r0, r4, r4, r0
 800c86c:	00e900d1 	ldrdeq	r0, [r9], #1	; <UNPREDICTABLE>
 800c870:	434b00ff 	movtmi	r0, #45311	; 0xb0ff
 800c874:	2408      	movs	r4, #8
 800c876:	18d1      	adds	r1, r2, r3
 800c878:	54d0      	strb	r0, [r2, r3]
 800c87a:	2301      	movs	r3, #1
 800c87c:	f8c1 420c 	str.w	r4, [r1, #524]	; 0x20c
 800c880:	f8a1 3204 	strh.w	r3, [r1, #516]	; 0x204
 800c884:	2208      	movs	r2, #8
 800c886:	4b88      	ldr	r3, [pc, #544]	; (800caa8 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x2b0>)
 800c888:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 800c88c:	f3bf 8f5f 	dmb	sy
 800c890:	e7d5      	b.n	800c83e <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x46>
 800c892:	b148      	cbz	r0, 800c8a8 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0xb0>
 800c894:	28cc      	cmp	r0, #204	; 0xcc
 800c896:	f44f 7304 	mov.w	r3, #528	; 0x210
 800c89a:	d01e      	beq.n	800c8da <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0xe2>
 800c89c:	fb03 2301 	mla	r3, r3, r1, r2
 800c8a0:	2200      	movs	r2, #0
 800c8a2:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800c8a6:	e7ed      	b.n	800c884 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x8c>
 800c8a8:	434b      	muls	r3, r1
 800c8aa:	18d4      	adds	r4, r2, r3
 800c8ac:	54d0      	strb	r0, [r2, r3]
 800c8ae:	2301      	movs	r3, #1
 800c8b0:	f8c4 3204 	str.w	r3, [r4, #516]	; 0x204
 800c8b4:	4b7e      	ldr	r3, [pc, #504]	; (800cab0 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x2b8>)
 800c8b6:	eb03 1301 	add.w	r3, r3, r1, lsl #4
 800c8ba:	685a      	ldr	r2, [r3, #4]
 800c8bc:	3201      	adds	r2, #1
 800c8be:	605a      	str	r2, [r3, #4]
 800c8c0:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800c8c4:	f8d2 2424 	ldr.w	r2, [r2, #1060]	; 0x424
 800c8c8:	60da      	str	r2, [r3, #12]
 800c8ca:	2304      	movs	r3, #4
 800c8cc:	f8c4 320c 	str.w	r3, [r4, #524]	; 0x20c
 800c8d0:	2210      	movs	r2, #16
 800c8d2:	4b75      	ldr	r3, [pc, #468]	; (800caa8 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x2b0>)
 800c8d4:	f8c3 2c10 	str.w	r2, [r3, #3088]	; 0xc10
 800c8d8:	e7d4      	b.n	800c884 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x8c>
 800c8da:	434b      	muls	r3, r1
 800c8dc:	18d1      	adds	r1, r2, r3
 800c8de:	54d0      	strb	r0, [r2, r3]
 800c8e0:	4b74      	ldr	r3, [pc, #464]	; (800cab4 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x2bc>)
 800c8e2:	f8c1 3204 	str.w	r3, [r1, #516]	; 0x204
 800c8e6:	2305      	movs	r3, #5
 800c8e8:	f8c1 320c 	str.w	r3, [r1, #524]	; 0x20c
 800c8ec:	e7f0      	b.n	800c8d0 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0xd8>
 800c8ee:	fb03 2301 	mla	r3, r3, r1, r2
 800c8f2:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 800c8f6:	b294      	uxth	r4, r2
 800c8f8:	3201      	adds	r2, #1
 800c8fa:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 800c8fe:	5518      	strb	r0, [r3, r4]
 800c900:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800c904:	d90b      	bls.n	800c91e <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x126>
 800c906:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800c90a:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800c90e:	2200      	movs	r2, #0
 800c910:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800c914:	2210      	movs	r2, #16
 800c916:	4b64      	ldr	r3, [pc, #400]	; (800caa8 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x2b0>)
 800c918:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 800c91c:	e7b2      	b.n	800c884 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x8c>
 800c91e:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800c922:	4a63      	ldr	r2, [pc, #396]	; (800cab0 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x2b8>)
 800c924:	f8d0 4424 	ldr.w	r4, [r0, #1060]	; 0x424
 800c928:	eb02 1201 	add.w	r2, r2, r1, lsl #4
 800c92c:	68d3      	ldr	r3, [r2, #12]
 800c92e:	2901      	cmp	r1, #1
 800c930:	ebc3 0344 	rsb	r3, r3, r4, lsl #1
 800c934:	f103 0304 	add.w	r3, r3, #4
 800c938:	60d4      	str	r4, [r2, #12]
 800c93a:	bf14      	ite	ne
 800c93c:	f8c0 3434 	strne.w	r3, [r0, #1076]	; 0x434
 800c940:	f8c0 3438 	streq.w	r3, [r0, #1080]	; 0x438
 800c944:	e79e      	b.n	800c884 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x8c>
 800c946:	fb03 2301 	mla	r3, r3, r1, r2
 800c94a:	f8b3 5204 	ldrh.w	r5, [r3, #516]	; 0x204
 800c94e:	f8b3 6206 	ldrh.w	r6, [r3, #518]	; 0x206
 800c952:	5558      	strb	r0, [r3, r5]
 800c954:	1c6c      	adds	r4, r5, #1
 800c956:	3d17      	subs	r5, #23
 800c958:	b2a4      	uxth	r4, r4
 800c95a:	4430      	add	r0, r6
 800c95c:	2de7      	cmp	r5, #231	; 0xe7
 800c95e:	f8a3 4204 	strh.w	r4, [r3, #516]	; 0x204
 800c962:	f8a3 0206 	strh.w	r0, [r3, #518]	; 0x206
 800c966:	d808      	bhi.n	800c97a <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x182>
 800c968:	7898      	ldrb	r0, [r3, #2]
 800c96a:	42a0      	cmp	r0, r4
 800c96c:	d105      	bne.n	800c97a <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x182>
 800c96e:	2206      	movs	r2, #6
 800c970:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800c974:	2220      	movs	r2, #32
 800c976:	4b4c      	ldr	r3, [pc, #304]	; (800caa8 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x2b0>)
 800c978:	e7ac      	b.n	800c8d4 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0xdc>
 800c97a:	2cff      	cmp	r4, #255	; 0xff
 800c97c:	d982      	bls.n	800c884 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x8c>
 800c97e:	f44f 7304 	mov.w	r3, #528	; 0x210
 800c982:	e78b      	b.n	800c89c <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0xa4>
 800c984:	fb03 2301 	mla	r3, r3, r1, r2
 800c988:	f8b3 2204 	ldrh.w	r2, [r3, #516]	; 0x204
 800c98c:	5498      	strb	r0, [r3, r2]
 800c98e:	3201      	adds	r2, #1
 800c990:	f8a3 2204 	strh.w	r2, [r3, #516]	; 0x204
 800c994:	f8b3 2206 	ldrh.w	r2, [r3, #518]	; 0x206
 800c998:	eba2 2200 	sub.w	r2, r2, r0, lsl #8
 800c99c:	f8a3 2206 	strh.w	r2, [r3, #518]	; 0x206
 800c9a0:	2207      	movs	r2, #7
 800c9a2:	e77e      	b.n	800c8a2 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0xaa>
 800c9a4:	2320      	movs	r3, #32
 800c9a6:	4e40      	ldr	r6, [pc, #256]	; (800caa8 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x2b0>)
 800c9a8:	f8c6 3c14 	str.w	r3, [r6, #3092]	; 0xc14
 800c9ac:	f44f 7304 	mov.w	r3, #528	; 0x210
 800c9b0:	fb03 2301 	mla	r3, r3, r1, r2
 800c9b4:	f8b3 4204 	ldrh.w	r4, [r3, #516]	; 0x204
 800c9b8:	f8b3 5206 	ldrh.w	r5, [r3, #518]	; 0x206
 800c9bc:	5518      	strb	r0, [r3, r4]
 800c9be:	3401      	adds	r4, #1
 800c9c0:	1a28      	subs	r0, r5, r0
 800c9c2:	b2a4      	uxth	r4, r4
 800c9c4:	b280      	uxth	r0, r0
 800c9c6:	f8a3 4204 	strh.w	r4, [r3, #516]	; 0x204
 800c9ca:	f8a3 0206 	strh.w	r0, [r3, #518]	; 0x206
 800c9ce:	b910      	cbnz	r0, 800c9d6 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x1de>
 800c9d0:	7858      	ldrb	r0, [r3, #1]
 800c9d2:	2801      	cmp	r0, #1
 800c9d4:	d007      	beq.n	800c9e6 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x1ee>
 800c9d6:	f44f 7304 	mov.w	r3, #528	; 0x210
 800c9da:	2000      	movs	r0, #0
 800c9dc:	fb03 2301 	mla	r3, r3, r1, r2
 800c9e0:	f8c3 0204 	str.w	r0, [r3, #516]	; 0x204
 800c9e4:	e7cb      	b.n	800c97e <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x186>
 800c9e6:	f444 4480 	orr.w	r4, r4, #16384	; 0x4000
 800c9ea:	f8a3 4204 	strh.w	r4, [r3, #516]	; 0x204
 800c9ee:	4b32      	ldr	r3, [pc, #200]	; (800cab8 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x2c0>)
 800c9f0:	6858      	ldr	r0, [r3, #4]
 800c9f2:	4b32      	ldr	r3, [pc, #200]	; (800cabc <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x2c4>)
 800c9f4:	6018      	str	r0, [r3, #0]
 800c9f6:	2310      	movs	r3, #16
 800c9f8:	f8c6 3c14 	str.w	r3, [r6, #3092]	; 0xc14
 800c9fc:	e7bf      	b.n	800c97e <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x186>
 800c9fe:	fb03 2301 	mla	r3, r3, r1, r2
 800ca02:	f8b3 4204 	ldrh.w	r4, [r3, #516]	; 0x204
 800ca06:	28aa      	cmp	r0, #170	; 0xaa
 800ca08:	5518      	strb	r0, [r3, r4]
 800ca0a:	f104 0401 	add.w	r4, r4, #1
 800ca0e:	b2a4      	uxth	r4, r4
 800ca10:	f8a3 4204 	strh.w	r4, [r3, #516]	; 0x204
 800ca14:	d002      	beq.n	800ca1c <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x224>
 800ca16:	2c09      	cmp	r4, #9
 800ca18:	f47f af34 	bne.w	800c884 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x8c>
 800ca1c:	f44f 7304 	mov.w	r3, #528	; 0x210
 800ca20:	fb03 2301 	mla	r3, r3, r1, r2
 800ca24:	2200      	movs	r2, #0
 800ca26:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 800ca2a:	2209      	movs	r2, #9
 800ca2c:	e739      	b.n	800c8a2 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0xaa>
 800ca2e:	fb03 2301 	mla	r3, r3, r1, r2
 800ca32:	f8b3 2204 	ldrh.w	r2, [r3, #516]	; 0x204
 800ca36:	5498      	strb	r0, [r3, r2]
 800ca38:	3201      	adds	r2, #1
 800ca3a:	f8a3 2204 	strh.w	r2, [r3, #516]	; 0x204
 800ca3e:	f8b3 2208 	ldrh.w	r2, [r3, #520]	; 0x208
 800ca42:	3201      	adds	r2, #1
 800ca44:	b292      	uxth	r2, r2
 800ca46:	2a0c      	cmp	r2, #12
 800ca48:	d002      	beq.n	800ca50 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x258>
 800ca4a:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 800ca4e:	e719      	b.n	800c884 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x8c>
 800ca50:	2200      	movs	r2, #0
 800ca52:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 800ca56:	220a      	movs	r2, #10
 800ca58:	e723      	b.n	800c8a2 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0xaa>
 800ca5a:	fb03 2301 	mla	r3, r3, r1, r2
 800ca5e:	f8b3 1208 	ldrh.w	r1, [r3, #520]	; 0x208
 800ca62:	f8b3 2204 	ldrh.w	r2, [r3, #516]	; 0x204
 800ca66:	3101      	adds	r1, #1
 800ca68:	b289      	uxth	r1, r1
 800ca6a:	5498      	strb	r0, [r3, r2]
 800ca6c:	3201      	adds	r2, #1
 800ca6e:	b292      	uxth	r2, r2
 800ca70:	2904      	cmp	r1, #4
 800ca72:	f8a3 2204 	strh.w	r2, [r3, #516]	; 0x204
 800ca76:	f8a3 1208 	strh.w	r1, [r3, #520]	; 0x208
 800ca7a:	f47f af03 	bne.w	800c884 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x8c>
 800ca7e:	2100      	movs	r1, #0
 800ca80:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800ca84:	f8c3 120c 	str.w	r1, [r3, #524]	; 0x20c
 800ca88:	f8a3 2204 	strh.w	r2, [r3, #516]	; 0x204
 800ca8c:	4b0a      	ldr	r3, [pc, #40]	; (800cab8 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x2c0>)
 800ca8e:	685a      	ldr	r2, [r3, #4]
 800ca90:	4b0a      	ldr	r3, [pc, #40]	; (800cabc <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x2c4>)
 800ca92:	601a      	str	r2, [r3, #0]
 800ca94:	e6f6      	b.n	800c884 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x8c>
 800ca96:	fb03 2201 	mla	r2, r3, r1, r2
 800ca9a:	2300      	movs	r3, #0
 800ca9c:	f8c2 3204 	str.w	r3, [r2, #516]	; 0x204
 800caa0:	f8c2 320c 	str.w	r3, [r2, #524]	; 0x20c
 800caa4:	e6ee      	b.n	800c884 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x8c>
 800caa6:	bf00      	nop
 800caa8:	40010000 	andmi	r0, r1, r0
 800caac:	20000e64 	andcs	r0, r0, r4, ror #28
 800cab0:	20001698 	mulcs	r0, r8, r6
 800cab4:	00cc0001 	sbceq	r0, ip, r1
 800cab8:	e0001000 	and	r1, r0, r0
 800cabc:	200016bc 			; <UNDEFINED> instruction: 0x200016bc

0800cac0 <USART2_IRQHandler>:
 800cac0:	2100      	movs	r1, #0
 800cac2:	4801      	ldr	r0, [pc, #4]	; (800cac8 <USART2_IRQHandler+0x8>)
 800cac4:	f7ff be98 	b.w	800c7f8 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)>
 800cac8:	40004800 	andmi	r4, r0, r0, lsl #16

0800cacc <USART5_IRQHandler>:
 800cacc:	2101      	movs	r1, #1
 800cace:	4801      	ldr	r0, [pc, #4]	; (800cad4 <USART5_IRQHandler+0x8>)
 800cad0:	f7ff be92 	b.w	800c7f8 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)>
 800cad4:	40017000 	andmi	r7, r1, r0

0800cad8 <TIMER1_IRQHandler>:
 800cad8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cada:	f3bf 8f5f 	dmb	sy
 800cade:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800cae2:	2208      	movs	r2, #8
 800cae4:	691d      	ldr	r5, [r3, #16]
 800cae6:	4e3d      	ldr	r6, [pc, #244]	; (800cbdc <TIMER1_IRQHandler+0x104>)
 800cae8:	f503 3380 	add.w	r3, r3, #65536	; 0x10000
 800caec:	07a9      	lsls	r1, r5, #30
 800caee:	8834      	ldrh	r4, [r6, #0]
 800caf0:	f8c3 2c10 	str.w	r2, [r3, #3088]	; 0xc10
 800caf4:	d52a      	bpl.n	800cb4c <TIMER1_IRQHandler+0x74>
 800caf6:	07e2      	lsls	r2, r4, #31
 800caf8:	d50d      	bpl.n	800cb16 <TIMER1_IRQHandler+0x3e>
 800cafa:	4f39      	ldr	r7, [pc, #228]	; (800cbe0 <TIMER1_IRQHandler+0x108>)
 800cafc:	f444 7380 	orr.w	r3, r4, #256	; 0x100
 800cb00:	8033      	strh	r3, [r6, #0]
 800cb02:	2203      	movs	r2, #3
 800cb04:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800cb08:	2110      	movs	r1, #16
 800cb0a:	4638      	mov	r0, r7
 800cb0c:	f006 fb12 	bl	8013134 <gpio_init>
 800cb10:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800cb14:	617b      	str	r3, [r7, #20]
 800cb16:	07a3      	lsls	r3, r4, #30
 800cb18:	d50c      	bpl.n	800cb34 <TIMER1_IRQHandler+0x5c>
 800cb1a:	8833      	ldrh	r3, [r6, #0]
 800cb1c:	4c30      	ldr	r4, [pc, #192]	; (800cbe0 <TIMER1_IRQHandler+0x108>)
 800cb1e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800cb22:	8033      	strh	r3, [r6, #0]
 800cb24:	2203      	movs	r2, #3
 800cb26:	2340      	movs	r3, #64	; 0x40
 800cb28:	2110      	movs	r1, #16
 800cb2a:	4620      	mov	r0, r4
 800cb2c:	f006 fb02 	bl	8013134 <gpio_init>
 800cb30:	2340      	movs	r3, #64	; 0x40
 800cb32:	6163      	str	r3, [r4, #20]
 800cb34:	4629      	mov	r1, r5
 800cb36:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800cb3a:	f006 fe67 	bl	801380c <timer_interrupt_flag_clear>
 800cb3e:	2208      	movs	r2, #8
 800cb40:	4b28      	ldr	r3, [pc, #160]	; (800cbe4 <TIMER1_IRQHandler+0x10c>)
 800cb42:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 800cb46:	f3bf 8f5f 	dmb	sy
 800cb4a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800cb4c:	076f      	lsls	r7, r5, #29
 800cb4e:	d511      	bpl.n	800cb74 <TIMER1_IRQHandler+0x9c>
 800cb50:	05e6      	lsls	r6, r4, #23
 800cb52:	d506      	bpl.n	800cb62 <TIMER1_IRQHandler+0x8a>
 800cb54:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800cb58:	2203      	movs	r2, #3
 800cb5a:	2118      	movs	r1, #24
 800cb5c:	4820      	ldr	r0, [pc, #128]	; (800cbe0 <TIMER1_IRQHandler+0x108>)
 800cb5e:	f006 fae9 	bl	8013134 <gpio_init>
 800cb62:	05a0      	lsls	r0, r4, #22
 800cb64:	d5e6      	bpl.n	800cb34 <TIMER1_IRQHandler+0x5c>
 800cb66:	2340      	movs	r3, #64	; 0x40
 800cb68:	2203      	movs	r2, #3
 800cb6a:	2118      	movs	r1, #24
 800cb6c:	481c      	ldr	r0, [pc, #112]	; (800cbe0 <TIMER1_IRQHandler+0x108>)
 800cb6e:	f006 fae1 	bl	8013134 <gpio_init>
 800cb72:	e7df      	b.n	800cb34 <TIMER1_IRQHandler+0x5c>
 800cb74:	0729      	lsls	r1, r5, #28
 800cb76:	d5dd      	bpl.n	800cb34 <TIMER1_IRQHandler+0x5c>
 800cb78:	05e2      	lsls	r2, r4, #23
 800cb7a:	d511      	bpl.n	800cba0 <TIMER1_IRQHandler+0xc8>
 800cb7c:	4b1a      	ldr	r3, [pc, #104]	; (800cbe8 <TIMER1_IRQHandler+0x110>)
 800cb7e:	2180      	movs	r1, #128	; 0x80
 800cb80:	69da      	ldr	r2, [r3, #28]
 800cb82:	481a      	ldr	r0, [pc, #104]	; (800cbec <TIMER1_IRQHandler+0x114>)
 800cb84:	f022 0201 	bic.w	r2, r2, #1
 800cb88:	61da      	str	r2, [r3, #28]
 800cb8a:	4a19      	ldr	r2, [pc, #100]	; (800cbf0 <TIMER1_IRQHandler+0x118>)
 800cb8c:	629a      	str	r2, [r3, #40]	; 0x28
 800cb8e:	f8b2 2202 	ldrh.w	r2, [r2, #514]	; 0x202
 800cb92:	621a      	str	r2, [r3, #32]
 800cb94:	69da      	ldr	r2, [r3, #28]
 800cb96:	f042 0201 	orr.w	r2, r2, #1
 800cb9a:	61da      	str	r2, [r3, #28]
 800cb9c:	f006 ff02 	bl	80139a4 <usart_dma_transmit_config>
 800cba0:	05a3      	lsls	r3, r4, #22
 800cba2:	d5c7      	bpl.n	800cb34 <TIMER1_IRQHandler+0x5c>
 800cba4:	4b10      	ldr	r3, [pc, #64]	; (800cbe8 <TIMER1_IRQHandler+0x110>)
 800cba6:	4813      	ldr	r0, [pc, #76]	; (800cbf4 <TIMER1_IRQHandler+0x11c>)
 800cba8:	f8d3 2480 	ldr.w	r2, [r3, #1152]	; 0x480
 800cbac:	f022 0201 	bic.w	r2, r2, #1
 800cbb0:	f8c3 2480 	str.w	r2, [r3, #1152]	; 0x480
 800cbb4:	4a0e      	ldr	r2, [pc, #56]	; (800cbf0 <TIMER1_IRQHandler+0x118>)
 800cbb6:	f502 7101 	add.w	r1, r2, #516	; 0x204
 800cbba:	f8b2 2406 	ldrh.w	r2, [r2, #1030]	; 0x406
 800cbbe:	f8c3 148c 	str.w	r1, [r3, #1164]	; 0x48c
 800cbc2:	f8c3 2484 	str.w	r2, [r3, #1156]	; 0x484
 800cbc6:	f8d3 2480 	ldr.w	r2, [r3, #1152]	; 0x480
 800cbca:	2180      	movs	r1, #128	; 0x80
 800cbcc:	f042 0201 	orr.w	r2, r2, #1
 800cbd0:	f8c3 2480 	str.w	r2, [r3, #1152]	; 0x480
 800cbd4:	f006 fee6 	bl	80139a4 <usart_dma_transmit_config>
 800cbd8:	e7ac      	b.n	800cb34 <TIMER1_IRQHandler+0x5c>
 800cbda:	bf00      	nop
 800cbdc:	20001694 	mulcs	r0, r4, r6
 800cbe0:	40011000 	andmi	r1, r1, r0
 800cbe4:	40010000 	andmi	r0, r1, r0
 800cbe8:	40020000 	andmi	r0, r2, r0
 800cbec:	40004800 	andmi	r4, r0, r0, lsl #16
 800cbf0:	20001284 	andcs	r1, r0, r4, lsl #5
 800cbf4:	40017000 	andmi	r7, r1, r0

0800cbf8 <TIMER2_IRQHandler>:
 800cbf8:	b508      	push	{r3, lr}
 800cbfa:	f3bf 8f5f 	dmb	sy
 800cbfe:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800cc02:	f8d3 1410 	ldr.w	r1, [r3, #1040]	; 0x410
 800cc06:	f011 0202 	ands.w	r2, r1, #2
 800cc0a:	d017      	beq.n	800cc3c <TIMER2_IRQHandler+0x44>
 800cc0c:	4b13      	ldr	r3, [pc, #76]	; (800cc5c <TIMER2_IRQHandler+0x64>)
 800cc0e:	f8d3 220c 	ldr.w	r2, [r3, #524]	; 0x20c
 800cc12:	2a04      	cmp	r2, #4
 800cc14:	d10c      	bne.n	800cc30 <TIMER2_IRQHandler+0x38>
 800cc16:	2200      	movs	r2, #0
 800cc18:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800cc1c:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 800cc20:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800cc24:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800cc28:	2210      	movs	r2, #16
 800cc2a:	4b0d      	ldr	r3, [pc, #52]	; (800cc60 <TIMER2_IRQHandler+0x68>)
 800cc2c:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 800cc30:	480c      	ldr	r0, [pc, #48]	; (800cc64 <TIMER2_IRQHandler+0x6c>)
 800cc32:	f006 fdeb 	bl	801380c <timer_interrupt_flag_clear>
 800cc36:	f3bf 8f5f 	dmb	sy
 800cc3a:	bd08      	pop	{r3, pc}
 800cc3c:	074b      	lsls	r3, r1, #29
 800cc3e:	d5f7      	bpl.n	800cc30 <TIMER2_IRQHandler+0x38>
 800cc40:	4b06      	ldr	r3, [pc, #24]	; (800cc5c <TIMER2_IRQHandler+0x64>)
 800cc42:	f8d3 041c 	ldr.w	r0, [r3, #1052]	; 0x41c
 800cc46:	2804      	cmp	r0, #4
 800cc48:	bf01      	itttt	eq
 800cc4a:	f8c3 241c 	streq.w	r2, [r3, #1052]	; 0x41c
 800cc4e:	f8d3 2414 	ldreq.w	r2, [r3, #1044]	; 0x414
 800cc52:	f442 4200 	orreq.w	r2, r2, #32768	; 0x8000
 800cc56:	f8c3 2414 	streq.w	r2, [r3, #1044]	; 0x414
 800cc5a:	e7e9      	b.n	800cc30 <TIMER2_IRQHandler+0x38>
 800cc5c:	20000e64 	andcs	r0, r0, r4, ror #28
 800cc60:	40010000 	andmi	r0, r1, r0
 800cc64:	40000400 	andmi	r0, r0, r0, lsl #8

0800cc68 <TIMER3_IRQHandler>:
 800cc68:	b508      	push	{r3, lr}
 800cc6a:	f3bf 8f5f 	dmb	sy
 800cc6e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800cc72:	4804      	ldr	r0, [pc, #16]	; (800cc84 <TIMER3_IRQHandler+0x1c>)
 800cc74:	f8d3 1810 	ldr.w	r1, [r3, #2064]	; 0x810
 800cc78:	f006 fdc8 	bl	801380c <timer_interrupt_flag_clear>
 800cc7c:	f3bf 8f5f 	dmb	sy
 800cc80:	bd08      	pop	{r3, pc}
 800cc82:	bf00      	nop
 800cc84:	40000800 	andmi	r0, r0, r0, lsl #16

0800cc88 <TIMER6_IRQHandler>:
 800cc88:	b508      	push	{r3, lr}
 800cc8a:	f3bf 8f5f 	dmb	sy
 800cc8e:	4b0a      	ldr	r3, [pc, #40]	; (800ccb8 <TIMER6_IRQHandler+0x30>)
 800cc90:	480a      	ldr	r0, [pc, #40]	; (800ccbc <TIMER6_IRQHandler+0x34>)
 800cc92:	685a      	ldr	r2, [r3, #4]
 800cc94:	6899      	ldr	r1, [r3, #8]
 800cc96:	1a52      	subs	r2, r2, r1
 800cc98:	601a      	str	r2, [r3, #0]
 800cc9a:	685a      	ldr	r2, [r3, #4]
 800cc9c:	609a      	str	r2, [r3, #8]
 800cc9e:	695a      	ldr	r2, [r3, #20]
 800cca0:	6999      	ldr	r1, [r3, #24]
 800cca2:	1a52      	subs	r2, r2, r1
 800cca4:	611a      	str	r2, [r3, #16]
 800cca6:	695a      	ldr	r2, [r3, #20]
 800cca8:	2101      	movs	r1, #1
 800ccaa:	619a      	str	r2, [r3, #24]
 800ccac:	f006 fdae 	bl	801380c <timer_interrupt_flag_clear>
 800ccb0:	f3bf 8f5f 	dmb	sy
 800ccb4:	bd08      	pop	{r3, pc}
 800ccb6:	bf00      	nop
 800ccb8:	20001698 	mulcs	r0, r8, r6
 800ccbc:	40001400 	andmi	r1, r0, r0, lsl #8

0800ccc0 <Dmx::ClearData(unsigned int)>:
 800ccc0:	f44f 7301 	mov.w	r3, #516	; 0x204
 800ccc4:	b510      	push	{r4, lr}
 800ccc6:	2400      	movs	r4, #0
 800ccc8:	4a08      	ldr	r2, [pc, #32]	; (800ccec <Dmx::ClearData(unsigned int)+0x2c>)
 800ccca:	fb03 2301 	mla	r3, r3, r1, r2
 800ccce:	f203 2002 	addw	r0, r3, #514	; 0x202
 800ccd2:	f823 4b02 	strh.w	r4, [r3], #2
 800ccd6:	4283      	cmp	r3, r0
 800ccd8:	d1fb      	bne.n	800ccd2 <Dmx::ClearData(unsigned int)+0x12>
 800ccda:	f44f 7301 	mov.w	r3, #516	; 0x204
 800ccde:	fb03 2201 	mla	r2, r3, r1, r2
 800cce2:	f240 2301 	movw	r3, #513	; 0x201
 800cce6:	f8a2 3202 	strh.w	r3, [r2, #514]	; 0x202
 800ccea:	bd10      	pop	{r4, pc}
 800ccec:	20001284 	andcs	r1, r0, r4, lsl #5

0800ccf0 <Dmx::StartData(unsigned int, unsigned int)>:
 800ccf0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ccf2:	eb00 0082 	add.w	r0, r0, r2, lsl #2
 800ccf6:	6943      	ldr	r3, [r0, #20]
 800ccf8:	460d      	mov	r5, r1
 800ccfa:	4614      	mov	r4, r2
 800ccfc:	b085      	sub	sp, #20
 800ccfe:	2b00      	cmp	r3, #0
 800cd00:	d16a      	bne.n	800cdd8 <Dmx::StartData(unsigned int, unsigned int)+0xe8>
 800cd02:	4e49      	ldr	r6, [pc, #292]	; (800ce28 <Dmx::StartData(unsigned int, unsigned int)+0x138>)
 800cd04:	8835      	ldrh	r5, [r6, #0]
 800cd06:	2d00      	cmp	r5, #0
 800cd08:	d15b      	bne.n	800cdc2 <Dmx::StartData(unsigned int, unsigned int)+0xd2>
 800cd0a:	f44f 60e0 	mov.w	r0, #1792	; 0x700
 800cd0e:	f006 faa9 	bl	8013264 <rcu_periph_clock_enable>
 800cd12:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800cd16:	f006 fc19 	bl	801354c <timer_deinit>
 800cd1a:	2377      	movs	r3, #119	; 0x77
 800cd1c:	9300      	str	r3, [sp, #0]
 800cd1e:	4b43      	ldr	r3, [pc, #268]	; (800ce2c <Dmx::StartData(unsigned int, unsigned int)+0x13c>)
 800cd20:	4669      	mov	r1, sp
 800cd22:	681b      	ldr	r3, [r3, #0]
 800cd24:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800cd28:	9302      	str	r3, [sp, #8]
 800cd2a:	f8ad 5004 	strh.w	r5, [sp, #4]
 800cd2e:	f8ad 500c 	strh.w	r5, [sp, #12]
 800cd32:	f88d 500e 	strb.w	r5, [sp, #14]
 800cd36:	f006 fcaf 	bl	8013698 <timer_init>
 800cd3a:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800cd3e:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800cd42:	f006 fd66 	bl	8013812 <timer_flag_clear>
 800cd46:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800cd4a:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800cd4e:	f006 fd5d 	bl	801380c <timer_interrupt_flag_clear>
 800cd52:	2210      	movs	r2, #16
 800cd54:	4629      	mov	r1, r5
 800cd56:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800cd5a:	f006 fcfa 	bl	8013752 <timer_channel_output_mode_config>
 800cd5e:	2210      	movs	r2, #16
 800cd60:	2101      	movs	r1, #1
 800cd62:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800cd66:	f006 fcf4 	bl	8013752 <timer_channel_output_mode_config>
 800cd6a:	4f31      	ldr	r7, [pc, #196]	; (800ce30 <Dmx::StartData(unsigned int, unsigned int)+0x140>)
 800cd6c:	2210      	movs	r2, #16
 800cd6e:	2102      	movs	r1, #2
 800cd70:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800cd74:	f006 fced 	bl	8013752 <timer_channel_output_mode_config>
 800cd78:	462a      	mov	r2, r5
 800cd7a:	4629      	mov	r1, r5
 800cd7c:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800cd80:	f006 fd0d 	bl	801379e <timer_channel_output_pulse_value_config>
 800cd84:	2101      	movs	r1, #1
 800cd86:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800cd8a:	883a      	ldrh	r2, [r7, #0]
 800cd8c:	f006 fd07 	bl	801379e <timer_channel_output_pulse_value_config>
 800cd90:	4b28      	ldr	r3, [pc, #160]	; (800ce34 <Dmx::StartData(unsigned int, unsigned int)+0x144>)
 800cd92:	683a      	ldr	r2, [r7, #0]
 800cd94:	681b      	ldr	r3, [r3, #0]
 800cd96:	2102      	movs	r1, #2
 800cd98:	441a      	add	r2, r3
 800cd9a:	b292      	uxth	r2, r2
 800cd9c:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800cda0:	f006 fcfd 	bl	801379e <timer_channel_output_pulse_value_config>
 800cda4:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800cda8:	210e      	movs	r1, #14
 800cdaa:	f006 fd2b 	bl	8013804 <timer_interrupt_enable>
 800cdae:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800cdb2:	4b21      	ldr	r3, [pc, #132]	; (800ce38 <Dmx::StartData(unsigned int, unsigned int)+0x148>)
 800cdb4:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800cdb8:	f883 531c 	strb.w	r5, [r3, #796]	; 0x31c
 800cdbc:	601a      	str	r2, [r3, #0]
 800cdbe:	f006 fcc3 	bl	8013748 <timer_enable>
 800cdc2:	2201      	movs	r2, #1
 800cdc4:	8831      	ldrh	r1, [r6, #0]
 800cdc6:	fa02 f304 	lsl.w	r3, r2, r4
 800cdca:	430b      	orrs	r3, r1
 800cdcc:	8033      	strh	r3, [r6, #0]
 800cdce:	4b1b      	ldr	r3, [pc, #108]	; (800ce3c <Dmx::StartData(unsigned int, unsigned int)+0x14c>)
 800cdd0:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
 800cdd4:	b005      	add	sp, #20
 800cdd6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cdd8:	f44f 7204 	mov.w	r2, #528	; 0x210
 800cddc:	4b18      	ldr	r3, [pc, #96]	; (800ce40 <Dmx::StartData(unsigned int, unsigned int)+0x150>)
 800cdde:	fb02 3304 	mla	r3, r2, r4, r3
 800cde2:	2200      	movs	r2, #0
 800cde4:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800cde8:	2107      	movs	r1, #7
 800cdea:	4628      	mov	r0, r5
 800cdec:	f006 fde0 	bl	80139b0 <usart_flag_get>
 800cdf0:	2800      	cmp	r0, #0
 800cdf2:	d0f9      	beq.n	800cde8 <Dmx::StartData(unsigned int, unsigned int)+0xf8>
 800cdf4:	4628      	mov	r0, r5
 800cdf6:	4913      	ldr	r1, [pc, #76]	; (800ce44 <Dmx::StartData(unsigned int, unsigned int)+0x154>)
 800cdf8:	f006 fdfc 	bl	80139f4 <usart_interrupt_flag_clear>
 800cdfc:	f240 3105 	movw	r1, #773	; 0x305
 800ce00:	4628      	mov	r0, r5
 800ce02:	f006 fde0 	bl	80139c6 <usart_interrupt_enable>
 800ce06:	2202      	movs	r2, #2
 800ce08:	4b0c      	ldr	r3, [pc, #48]	; (800ce3c <Dmx::StartData(unsigned int, unsigned int)+0x14c>)
 800ce0a:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
 800ce0e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800ce12:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 800ce16:	b924      	cbnz	r4, 800ce22 <Dmx::StartData(unsigned int, unsigned int)+0x132>
 800ce18:	f042 0202 	orr.w	r2, r2, #2
 800ce1c:	f8c3 240c 	str.w	r2, [r3, #1036]	; 0x40c
 800ce20:	e7d8      	b.n	800cdd4 <Dmx::StartData(unsigned int, unsigned int)+0xe4>
 800ce22:	f042 0204 	orr.w	r2, r2, #4
 800ce26:	e7f9      	b.n	800ce1c <Dmx::StartData(unsigned int, unsigned int)+0x12c>
 800ce28:	20001694 	mulcs	r0, r4, r6
 800ce2c:	2000000c 	andcs	r0, r0, ip
 800ce30:	20000014 	andcs	r0, r0, r4, lsl r0
 800ce34:	20000010 	andcs	r0, r0, r0, lsl r0
 800ce38:	e000e100 	and	lr, r0, r0, lsl #2
 800ce3c:	2000168c 	andcs	r1, r0, ip, lsl #13
 800ce40:	20000e64 	andcs	r0, r0, r4, ror #28
 800ce44:	00050305 	andeq	r0, r5, r5, lsl #6

0800ce48 <Dmx::StopData(unsigned int, unsigned int)>:
 800ce48:	b538      	push	{r3, r4, r5, lr}
 800ce4a:	4d1a      	ldr	r5, [pc, #104]	; (800ceb4 <Dmx::StopData(unsigned int, unsigned int)+0x6c>)
 800ce4c:	4614      	mov	r4, r2
 800ce4e:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 800ce52:	4603      	mov	r3, r0
 800ce54:	4608      	mov	r0, r1
 800ce56:	b192      	cbz	r2, 800ce7e <Dmx::StopData(unsigned int, unsigned int)+0x36>
 800ce58:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 800ce5c:	695b      	ldr	r3, [r3, #20]
 800ce5e:	b97b      	cbnz	r3, 800ce80 <Dmx::StopData(unsigned int, unsigned int)+0x38>
 800ce60:	2201      	movs	r2, #1
 800ce62:	4915      	ldr	r1, [pc, #84]	; (800ceb8 <Dmx::StopData(unsigned int, unsigned int)+0x70>)
 800ce64:	f104 0308 	add.w	r3, r4, #8
 800ce68:	fa02 f303 	lsl.w	r3, r2, r3
 800ce6c:	40a2      	lsls	r2, r4
 800ce6e:	4313      	orrs	r3, r2
 800ce70:	880a      	ldrh	r2, [r1, #0]
 800ce72:	ea22 0303 	bic.w	r3, r2, r3
 800ce76:	800b      	strh	r3, [r1, #0]
 800ce78:	2300      	movs	r3, #0
 800ce7a:	f845 3024 	str.w	r3, [r5, r4, lsl #2]
 800ce7e:	bd38      	pop	{r3, r4, r5, pc}
 800ce80:	f240 3105 	movw	r1, #773	; 0x305
 800ce84:	f006 fdaa 	bl	80139dc <usart_interrupt_disable>
 800ce88:	f44f 7204 	mov.w	r2, #528	; 0x210
 800ce8c:	4b0b      	ldr	r3, [pc, #44]	; (800cebc <Dmx::StopData(unsigned int, unsigned int)+0x74>)
 800ce8e:	fb02 3304 	mla	r3, r2, r4, r3
 800ce92:	2200      	movs	r2, #0
 800ce94:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800ce98:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800ce9c:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 800cea0:	b924      	cbnz	r4, 800ceac <Dmx::StopData(unsigned int, unsigned int)+0x64>
 800cea2:	f022 0202 	bic.w	r2, r2, #2
 800cea6:	f8c3 240c 	str.w	r2, [r3, #1036]	; 0x40c
 800ceaa:	e7e5      	b.n	800ce78 <Dmx::StopData(unsigned int, unsigned int)+0x30>
 800ceac:	f022 0204 	bic.w	r2, r2, #4
 800ceb0:	e7f9      	b.n	800cea6 <Dmx::StopData(unsigned int, unsigned int)+0x5e>
 800ceb2:	bf00      	nop
 800ceb4:	2000168c 	andcs	r1, r0, ip, lsl #13
 800ceb8:	20001694 	mulcs	r0, r4, r6
 800cebc:	20000e64 	andcs	r0, r0, r4, ror #28

0800cec0 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>:
 800cec0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cec4:	4615      	mov	r5, r2
 800cec6:	461f      	mov	r7, r3
 800cec8:	4b19      	ldr	r3, [pc, #100]	; (800cf30 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x70>)
 800ceca:	1e0c      	subs	r4, r1, #0
 800cecc:	4e19      	ldr	r6, [pc, #100]	; (800cf34 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x74>)
 800cece:	bf08      	it	eq
 800ced0:	461e      	moveq	r6, r3
 800ced2:	eb00 0384 	add.w	r3, r0, r4, lsl #2
 800ced6:	695a      	ldr	r2, [r3, #20]
 800ced8:	4680      	mov	r8, r0
 800ceda:	42aa      	cmp	r2, r5
 800cedc:	d019      	beq.n	800cf12 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x52>
 800cede:	4622      	mov	r2, r4
 800cee0:	4631      	mov	r1, r6
 800cee2:	615d      	str	r5, [r3, #20]
 800cee4:	f7ff ffb0 	bl	800ce48 <Dmx::StopData(unsigned int, unsigned int)>
 800cee8:	b94d      	cbnz	r5, 800cefe <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x3e>
 800ceea:	4b13      	ldr	r3, [pc, #76]	; (800cf38 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x78>)
 800ceec:	f853 2034 	ldr.w	r2, [r3, r4, lsl #3]
 800cef0:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800cef4:	685b      	ldr	r3, [r3, #4]
 800cef6:	6113      	str	r3, [r2, #16]
 800cef8:	b967      	cbnz	r7, 800cf14 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x54>
 800cefa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cefe:	2d01      	cmp	r5, #1
 800cf00:	d1fa      	bne.n	800cef8 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x38>
 800cf02:	4b0d      	ldr	r3, [pc, #52]	; (800cf38 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x78>)
 800cf04:	f853 2034 	ldr.w	r2, [r3, r4, lsl #3]
 800cf08:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800cf0c:	685b      	ldr	r3, [r3, #4]
 800cf0e:	6153      	str	r3, [r2, #20]
 800cf10:	e7f2      	b.n	800cef8 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x38>
 800cf12:	b137      	cbz	r7, 800cf22 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x62>
 800cf14:	4622      	mov	r2, r4
 800cf16:	4631      	mov	r1, r6
 800cf18:	4640      	mov	r0, r8
 800cf1a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800cf1e:	f7ff bee7 	b.w	800ccf0 <Dmx::StartData(unsigned int, unsigned int)>
 800cf22:	4622      	mov	r2, r4
 800cf24:	4631      	mov	r1, r6
 800cf26:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800cf2a:	f7ff bf8d 	b.w	800ce48 <Dmx::StopData(unsigned int, unsigned int)>
 800cf2e:	bf00      	nop
 800cf30:	40004800 	andmi	r4, r0, r0, lsl #16
 800cf34:	40017000 	andmi	r7, r1, r0
 800cf38:	08015660 	stmdaeq	r1, {r5, r6, r9, sl, ip, lr}

0800cf3c <Dmx::Dmx()>:
 800cf3c:	230c      	movs	r3, #12
 800cf3e:	225c      	movs	r2, #92	; 0x5c
 800cf40:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800cf44:	e9c0 2300 	strd	r2, r3, [r0]
 800cf48:	f246 13a8 	movw	r3, #25000	; 0x61a8
 800cf4c:	e9c0 3302 	strd	r3, r3, [r0, #8]
 800cf50:	f44f 7300 	mov.w	r3, #512	; 0x200
 800cf54:	2400      	movs	r4, #0
 800cf56:	4606      	mov	r6, r0
 800cf58:	8203      	strh	r3, [r0, #16]
 800cf5a:	4b73      	ldr	r3, [pc, #460]	; (800d128 <Dmx::Dmx()+0x1ec>)
 800cf5c:	4f73      	ldr	r7, [pc, #460]	; (800d12c <Dmx::Dmx()+0x1f0>)
 800cf5e:	6018      	str	r0, [r3, #0]
 800cf60:	4b73      	ldr	r3, [pc, #460]	; (800d130 <Dmx::Dmx()+0x1f4>)
 800cf62:	f8df 91d0 	ldr.w	r9, [pc, #464]	; 800d134 <Dmx::Dmx()+0x1f8>
 800cf66:	f8df 81d0 	ldr.w	r8, [pc, #464]	; 800d138 <Dmx::Dmx()+0x1fc>
 800cf6a:	b08b      	sub	sp, #44	; 0x2c
 800cf6c:	801c      	strh	r4, [r3, #0]
 800cf6e:	2500      	movs	r5, #0
 800cf70:	687b      	ldr	r3, [r7, #4]
 800cf72:	2203      	movs	r2, #3
 800cf74:	2110      	movs	r1, #16
 800cf76:	f857 0b08 	ldr.w	r0, [r7], #8
 800cf7a:	f006 f8db 	bl	8013134 <gpio_init>
 800cf7e:	4621      	mov	r1, r4
 800cf80:	4630      	mov	r0, r6
 800cf82:	f7ff fe9d 	bl	800ccc0 <Dmx::ClearData(unsigned int)>
 800cf86:	462b      	mov	r3, r5
 800cf88:	2201      	movs	r2, #1
 800cf8a:	4630      	mov	r0, r6
 800cf8c:	f849 5024 	str.w	r5, [r9, r4, lsl #2]
 800cf90:	f7ff ff96 	bl	800cec0 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 800cf94:	f44f 7304 	mov.w	r3, #528	; 0x210
 800cf98:	fb03 8304 	mla	r3, r3, r4, r8
 800cf9c:	f8c3 520c 	str.w	r5, [r3, #524]	; 0x20c
 800cfa0:	2c00      	cmp	r4, #0
 800cfa2:	f000 80be 	beq.w	800d122 <Dmx::Dmx()+0x1e6>
 800cfa6:	f44f 5800 	mov.w	r8, #8192	; 0x2000
 800cfaa:	f44f 7780 	mov.w	r7, #256	; 0x100
 800cfae:	f44f 60a0 	mov.w	r0, #1280	; 0x500
 800cfb2:	f006 f957 	bl	8013264 <rcu_periph_clock_enable>
 800cfb6:	f240 5001 	movw	r0, #1281	; 0x501
 800cfba:	f006 f953 	bl	8013264 <rcu_periph_clock_enable>
 800cfbe:	4621      	mov	r1, r4
 800cfc0:	485e      	ldr	r0, [pc, #376]	; (800d13c <Dmx::Dmx()+0x200>)
 800cfc2:	f005 ffcd 	bl	8012f60 <dma_deinit>
 800cfc6:	4b5e      	ldr	r3, [pc, #376]	; (800d140 <Dmx::Dmx()+0x204>)
 800cfc8:	aa03      	add	r2, sp, #12
 800cfca:	4621      	mov	r1, r4
 800cfcc:	485b      	ldr	r0, [pc, #364]	; (800d13c <Dmx::Dmx()+0x200>)
 800cfce:	e9cd 3503 	strd	r3, r5, [sp, #12]
 800cfd2:	f8cd 8020 	str.w	r8, [sp, #32]
 800cfd6:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 800cfda:	f88d 4026 	strb.w	r4, [sp, #38]	; 0x26
 800cfde:	9506      	str	r5, [sp, #24]
 800cfe0:	f005 ffdc 	bl	8012f9c <dma_init>
 800cfe4:	4621      	mov	r1, r4
 800cfe6:	4855      	ldr	r0, [pc, #340]	; (800d13c <Dmx::Dmx()+0x200>)
 800cfe8:	f006 f809 	bl	8012ffe <dma_circulation_disable>
 800cfec:	4621      	mov	r1, r4
 800cfee:	4853      	ldr	r0, [pc, #332]	; (800d13c <Dmx::Dmx()+0x200>)
 800cff0:	f006 f80d 	bl	801300e <dma_memory_to_memory_disable>
 800cff4:	2106      	movs	r1, #6
 800cff6:	4853      	ldr	r0, [pc, #332]	; (800d144 <Dmx::Dmx()+0x208>)
 800cff8:	f005 ffb2 	bl	8012f60 <dma_deinit>
 800cffc:	4b52      	ldr	r3, [pc, #328]	; (800d148 <Dmx::Dmx()+0x20c>)
 800cffe:	aa03      	add	r2, sp, #12
 800d000:	2106      	movs	r1, #6
 800d002:	4850      	ldr	r0, [pc, #320]	; (800d144 <Dmx::Dmx()+0x208>)
 800d004:	e9cd 3503 	strd	r3, r5, [sp, #12]
 800d008:	f8cd 8020 	str.w	r8, [sp, #32]
 800d00c:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 800d010:	f88d 4026 	strb.w	r4, [sp, #38]	; 0x26
 800d014:	9506      	str	r5, [sp, #24]
 800d016:	f005 ffc1 	bl	8012f9c <dma_init>
 800d01a:	2106      	movs	r1, #6
 800d01c:	4849      	ldr	r0, [pc, #292]	; (800d144 <Dmx::Dmx()+0x208>)
 800d01e:	f005 ffee 	bl	8012ffe <dma_circulation_disable>
 800d022:	2106      	movs	r1, #6
 800d024:	4847      	ldr	r0, [pc, #284]	; (800d144 <Dmx::Dmx()+0x208>)
 800d026:	f005 fff2 	bl	801300e <dma_memory_to_memory_disable>
 800d02a:	f240 7001 	movw	r0, #1793	; 0x701
 800d02e:	f006 f919 	bl	8013264 <rcu_periph_clock_enable>
 800d032:	4846      	ldr	r0, [pc, #280]	; (800d14c <Dmx::Dmx()+0x210>)
 800d034:	f006 fa8a 	bl	801354c <timer_deinit>
 800d038:	f04f 38ff 	mov.w	r8, #4294967295	; 0xffffffff
 800d03c:	2377      	movs	r3, #119	; 0x77
 800d03e:	a903      	add	r1, sp, #12
 800d040:	4842      	ldr	r0, [pc, #264]	; (800d14c <Dmx::Dmx()+0x210>)
 800d042:	9303      	str	r3, [sp, #12]
 800d044:	f8cd 8014 	str.w	r8, [sp, #20]
 800d048:	f8ad 5010 	strh.w	r5, [sp, #16]
 800d04c:	f8ad 5018 	strh.w	r5, [sp, #24]
 800d050:	f88d 501a 	strb.w	r5, [sp, #26]
 800d054:	f006 fb20 	bl	8013698 <timer_init>
 800d058:	4641      	mov	r1, r8
 800d05a:	483c      	ldr	r0, [pc, #240]	; (800d14c <Dmx::Dmx()+0x210>)
 800d05c:	f006 fbd9 	bl	8013812 <timer_flag_clear>
 800d060:	4641      	mov	r1, r8
 800d062:	483a      	ldr	r0, [pc, #232]	; (800d14c <Dmx::Dmx()+0x210>)
 800d064:	f006 fbd2 	bl	801380c <timer_interrupt_flag_clear>
 800d068:	4629      	mov	r1, r5
 800d06a:	2210      	movs	r2, #16
 800d06c:	4837      	ldr	r0, [pc, #220]	; (800d14c <Dmx::Dmx()+0x210>)
 800d06e:	f006 fb70 	bl	8013752 <timer_channel_output_mode_config>
 800d072:	4621      	mov	r1, r4
 800d074:	2210      	movs	r2, #16
 800d076:	4835      	ldr	r0, [pc, #212]	; (800d14c <Dmx::Dmx()+0x210>)
 800d078:	f006 fb6b 	bl	8013752 <timer_channel_output_mode_config>
 800d07c:	2210      	movs	r2, #16
 800d07e:	2102      	movs	r1, #2
 800d080:	4832      	ldr	r0, [pc, #200]	; (800d14c <Dmx::Dmx()+0x210>)
 800d082:	f006 fb66 	bl	8013752 <timer_channel_output_mode_config>
 800d086:	2210      	movs	r2, #16
 800d088:	2103      	movs	r1, #3
 800d08a:	4830      	ldr	r0, [pc, #192]	; (800d14c <Dmx::Dmx()+0x210>)
 800d08c:	f006 fb61 	bl	8013752 <timer_channel_output_mode_config>
 800d090:	f04f 5300 	mov.w	r3, #536870912	; 0x20000000
 800d094:	f107 27e0 	add.w	r7, r7, #3758153728	; 0xe000e000
 800d098:	f887 531d 	strb.w	r5, [r7, #797]	; 0x31d
 800d09c:	482b      	ldr	r0, [pc, #172]	; (800d14c <Dmx::Dmx()+0x210>)
 800d09e:	603b      	str	r3, [r7, #0]
 800d0a0:	f006 fb52 	bl	8013748 <timer_enable>
 800d0a4:	f240 7005 	movw	r0, #1797	; 0x705
 800d0a8:	f006 f8dc 	bl	8013264 <rcu_periph_clock_enable>
 800d0ac:	4828      	ldr	r0, [pc, #160]	; (800d150 <Dmx::Dmx()+0x214>)
 800d0ae:	f006 fa4d 	bl	801354c <timer_deinit>
 800d0b2:	f642 63df 	movw	r3, #11999	; 0x2edf
 800d0b6:	f8ad 300c 	strh.w	r3, [sp, #12]
 800d0ba:	f242 7310 	movw	r3, #10000	; 0x2710
 800d0be:	a903      	add	r1, sp, #12
 800d0c0:	4823      	ldr	r0, [pc, #140]	; (800d150 <Dmx::Dmx()+0x214>)
 800d0c2:	9305      	str	r3, [sp, #20]
 800d0c4:	f006 fae8 	bl	8013698 <timer_init>
 800d0c8:	4641      	mov	r1, r8
 800d0ca:	4821      	ldr	r0, [pc, #132]	; (800d150 <Dmx::Dmx()+0x214>)
 800d0cc:	f006 fba1 	bl	8013812 <timer_flag_clear>
 800d0d0:	4641      	mov	r1, r8
 800d0d2:	481f      	ldr	r0, [pc, #124]	; (800d150 <Dmx::Dmx()+0x214>)
 800d0d4:	f006 fb9a 	bl	801380c <timer_interrupt_flag_clear>
 800d0d8:	4621      	mov	r1, r4
 800d0da:	481d      	ldr	r0, [pc, #116]	; (800d150 <Dmx::Dmx()+0x214>)
 800d0dc:	f006 fb92 	bl	8013804 <timer_interrupt_enable>
 800d0e0:	f44f 0300 	mov.w	r3, #8388608	; 0x800000
 800d0e4:	f04f 0802 	mov.w	r8, #2
 800d0e8:	2480      	movs	r4, #128	; 0x80
 800d0ea:	f887 5337 	strb.w	r5, [r7, #823]	; 0x337
 800d0ee:	4818      	ldr	r0, [pc, #96]	; (800d150 <Dmx::Dmx()+0x214>)
 800d0f0:	607b      	str	r3, [r7, #4]
 800d0f2:	f006 fb29 	bl	8013748 <timer_enable>
 800d0f6:	462b      	mov	r3, r5
 800d0f8:	2208      	movs	r2, #8
 800d0fa:	4916      	ldr	r1, [pc, #88]	; (800d154 <Dmx::Dmx()+0x218>)
 800d0fc:	4816      	ldr	r0, [pc, #88]	; (800d158 <Dmx::Dmx()+0x21c>)
 800d0fe:	f8cd 8000 	str.w	r8, [sp]
 800d102:	f006 feef 	bl	8013ee4 <gd32_uart_begin>
 800d106:	607c      	str	r4, [r7, #4]
 800d108:	462b      	mov	r3, r5
 800d10a:	2208      	movs	r2, #8
 800d10c:	4911      	ldr	r1, [pc, #68]	; (800d154 <Dmx::Dmx()+0x218>)
 800d10e:	4813      	ldr	r0, [pc, #76]	; (800d15c <Dmx::Dmx()+0x220>)
 800d110:	f8cd 8000 	str.w	r8, [sp]
 800d114:	f006 fee6 	bl	8013ee4 <gd32_uart_begin>
 800d118:	4630      	mov	r0, r6
 800d11a:	60bc      	str	r4, [r7, #8]
 800d11c:	b00b      	add	sp, #44	; 0x2c
 800d11e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d122:	2401      	movs	r4, #1
 800d124:	e723      	b.n	800cf6e <Dmx::Dmx()+0x32>
 800d126:	bf00      	nop
 800d128:	200016b8 			; <UNDEFINED> instruction: 0x200016b8
 800d12c:	08015660 	stmdaeq	r1, {r5, r6, r9, sl, ip, lr}
 800d130:	20001694 	mulcs	r0, r4, r6
 800d134:	2000168c 	andcs	r1, r0, ip, lsl #13
 800d138:	20000e64 	andcs	r0, r0, r4, ror #28
 800d13c:	40020000 	andmi	r0, r2, r0
 800d140:	40004804 	andmi	r4, r0, r4, lsl #16
 800d144:	40020400 	andmi	r0, r2, r0, lsl #8
 800d148:	40017004 	andmi	r7, r1, r4
 800d14c:	40000400 	andmi	r0, r0, r0, lsl #8
 800d150:	40001400 	andmi	r1, r0, r0, lsl #8
 800d154:	0003d090 	muleq	r3, r0, r0
 800d158:	40004800 	andmi	r4, r0, r0, lsl #16
 800d15c:	40017000 	andmi	r7, r1, r0

0800d160 <Dmx::SetDmxPeriodTime(unsigned int)>:
 800d160:	4b15      	ldr	r3, [pc, #84]	; (800d1b8 <Dmx::SetDmxPeriodTime(unsigned int)+0x58>)
 800d162:	b570      	push	{r4, r5, r6, lr}
 800d164:	60c1      	str	r1, [r0, #12]
 800d166:	f8b3 0406 	ldrh.w	r0, [r3, #1030]	; 0x406
 800d16a:	f8b3 3202 	ldrh.w	r3, [r3, #514]	; 0x202
 800d16e:	f64f 76d3 	movw	r6, #65491	; 0xffd3
 800d172:	4298      	cmp	r0, r3
 800d174:	bf38      	it	cc
 800d176:	4618      	movcc	r0, r3
 800d178:	232c      	movs	r3, #44	; 0x2c
 800d17a:	4d10      	ldr	r5, [pc, #64]	; (800d1bc <Dmx::SetDmxPeriodTime(unsigned int)+0x5c>)
 800d17c:	4c10      	ldr	r4, [pc, #64]	; (800d1c0 <Dmx::SetDmxPeriodTime(unsigned int)+0x60>)
 800d17e:	4358      	muls	r0, r3
 800d180:	682a      	ldr	r2, [r5, #0]
 800d182:	6823      	ldr	r3, [r4, #0]
 800d184:	4413      	add	r3, r2
 800d186:	4403      	add	r3, r0
 800d188:	42b3      	cmp	r3, r6
 800d18a:	d908      	bls.n	800d19e <Dmx::SetDmxPeriodTime(unsigned int)+0x3e>
 800d18c:	2ab0      	cmp	r2, #176	; 0xb0
 800d18e:	4613      	mov	r3, r2
 800d190:	bf28      	it	cs
 800d192:	23b0      	movcs	r3, #176	; 0xb0
 800d194:	220c      	movs	r2, #12
 800d196:	602b      	str	r3, [r5, #0]
 800d198:	4413      	add	r3, r2
 800d19a:	6022      	str	r2, [r4, #0]
 800d19c:	4403      	add	r3, r0
 800d19e:	b109      	cbz	r1, 800d1a4 <Dmx::SetDmxPeriodTime(unsigned int)+0x44>
 800d1a0:	428b      	cmp	r3, r1
 800d1a2:	d906      	bls.n	800d1b2 <Dmx::SetDmxPeriodTime(unsigned int)+0x52>
 800d1a4:	f103 012c 	add.w	r1, r3, #44	; 0x2c
 800d1a8:	f240 43b4 	movw	r3, #1204	; 0x4b4
 800d1ac:	4299      	cmp	r1, r3
 800d1ae:	bf38      	it	cc
 800d1b0:	4619      	movcc	r1, r3
 800d1b2:	4b04      	ldr	r3, [pc, #16]	; (800d1c4 <Dmx::SetDmxPeriodTime(unsigned int)+0x64>)
 800d1b4:	6019      	str	r1, [r3, #0]
 800d1b6:	bd70      	pop	{r4, r5, r6, pc}
 800d1b8:	20001284 	andcs	r1, r0, r4, lsl #5
 800d1bc:	20000014 	andcs	r0, r0, r4, lsl r0
 800d1c0:	20000010 	andcs	r0, r0, r0, lsl r0
 800d1c4:	2000000c 	andcs	r0, r0, ip

0800d1c8 <Dmx::SetDmxBreakTime(unsigned int)>:
 800d1c8:	295c      	cmp	r1, #92	; 0x5c
 800d1ca:	bf38      	it	cc
 800d1cc:	215c      	movcc	r1, #92	; 0x5c
 800d1ce:	4b02      	ldr	r3, [pc, #8]	; (800d1d8 <Dmx::SetDmxBreakTime(unsigned int)+0x10>)
 800d1d0:	6019      	str	r1, [r3, #0]
 800d1d2:	68c1      	ldr	r1, [r0, #12]
 800d1d4:	f7ff bfc4 	b.w	800d160 <Dmx::SetDmxPeriodTime(unsigned int)>
 800d1d8:	20000014 	andcs	r0, r0, r4, lsl r0

0800d1dc <Dmx::SetDmxMabTime(unsigned int)>:
 800d1dc:	290c      	cmp	r1, #12
 800d1de:	bf38      	it	cc
 800d1e0:	210c      	movcc	r1, #12
 800d1e2:	4b02      	ldr	r3, [pc, #8]	; (800d1ec <Dmx::SetDmxMabTime(unsigned int)+0x10>)
 800d1e4:	6019      	str	r1, [r3, #0]
 800d1e6:	68c1      	ldr	r1, [r0, #12]
 800d1e8:	f7ff bfba 	b.w	800d160 <Dmx::SetDmxPeriodTime(unsigned int)>
 800d1ec:	20000010 	andcs	r0, r0, r0, lsl r0

0800d1f0 <Dmx::SetDmxSlots(unsigned short)>:
 800d1f0:	1e8b      	subs	r3, r1, #2
 800d1f2:	f5b3 7fff 	cmp.w	r3, #510	; 0x1fe
 800d1f6:	d80f      	bhi.n	800d218 <Dmx::SetDmxSlots(unsigned short)+0x28>
 800d1f8:	69c3      	ldr	r3, [r0, #28]
 800d1fa:	8201      	strh	r1, [r0, #16]
 800d1fc:	b11b      	cbz	r3, 800d206 <Dmx::SetDmxSlots(unsigned short)+0x16>
 800d1fe:	4299      	cmp	r1, r3
 800d200:	bf94      	ite	ls
 800d202:	61c1      	strls	r1, [r0, #28]
 800d204:	61c3      	strhi	r3, [r0, #28]
 800d206:	6a03      	ldr	r3, [r0, #32]
 800d208:	b11b      	cbz	r3, 800d212 <Dmx::SetDmxSlots(unsigned short)+0x22>
 800d20a:	4299      	cmp	r1, r3
 800d20c:	bf94      	ite	ls
 800d20e:	6201      	strls	r1, [r0, #32]
 800d210:	6203      	strhi	r3, [r0, #32]
 800d212:	68c1      	ldr	r1, [r0, #12]
 800d214:	f7ff bfa4 	b.w	800d160 <Dmx::SetDmxPeriodTime(unsigned int)>
 800d218:	4770      	bx	lr
	...

0800d21c <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)>:
 800d21c:	b4f0      	push	{r4, r5, r6, r7}
 800d21e:	8a04      	ldrh	r4, [r0, #16]
 800d220:	4d11      	ldr	r5, [pc, #68]	; (800d268 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x4c>)
 800d222:	42a3      	cmp	r3, r4
 800d224:	bf28      	it	cs
 800d226:	4623      	movcs	r3, r4
 800d228:	f44f 7401 	mov.w	r4, #516	; 0x204
 800d22c:	434c      	muls	r4, r1
 800d22e:	1c5f      	adds	r7, r3, #1
 800d230:	192e      	adds	r6, r5, r4
 800d232:	f892 f000 	pld	[r2]
 800d236:	3401      	adds	r4, #1
 800d238:	442c      	add	r4, r5
 800d23a:	f8a6 7202 	strh.w	r7, [r6, #514]	; 0x202
 800d23e:	18d5      	adds	r5, r2, r3
 800d240:	4295      	cmp	r5, r2
 800d242:	d109      	bne.n	800d258 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x3c>
 800d244:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 800d248:	69ca      	ldr	r2, [r1, #28]
 800d24a:	429a      	cmp	r2, r3
 800d24c:	d009      	beq.n	800d262 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x46>
 800d24e:	bcf0      	pop	{r4, r5, r6, r7}
 800d250:	61cb      	str	r3, [r1, #28]
 800d252:	68c1      	ldr	r1, [r0, #12]
 800d254:	f7ff bf84 	b.w	800d160 <Dmx::SetDmxPeriodTime(unsigned int)>
 800d258:	f812 6b01 	ldrb.w	r6, [r2], #1
 800d25c:	f804 6b01 	strb.w	r6, [r4], #1
 800d260:	e7ee      	b.n	800d240 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x24>
 800d262:	bcf0      	pop	{r4, r5, r6, r7}
 800d264:	4770      	bx	lr
 800d266:	bf00      	nop
 800d268:	20001284 	andcs	r1, r0, r4, lsl #5

0800d26c <Dmx::GetDmxAvailable(unsigned int)>:
 800d26c:	f44f 7204 	mov.w	r2, #528	; 0x210
 800d270:	4b07      	ldr	r3, [pc, #28]	; (800d290 <Dmx::GetDmxAvailable(unsigned int)+0x24>)
 800d272:	fb02 3101 	mla	r1, r2, r1, r3
 800d276:	f8d1 3204 	ldr.w	r3, [r1, #516]	; 0x204
 800d27a:	f413 4000 	ands.w	r0, r3, #32768	; 0x8000
 800d27e:	bf1f      	itttt	ne
 800d280:	f423 4300 	bicne.w	r3, r3, #32768	; 0x8000
 800d284:	f103 33ff 	addne.w	r3, r3, #4294967295	; 0xffffffff
 800d288:	4608      	movne	r0, r1
 800d28a:	f8c1 3204 	strne.w	r3, [r1, #516]	; 0x204
 800d28e:	4770      	bx	lr
 800d290:	20000e64 	andcs	r0, r0, r4, ror #28

0800d294 <Dmx::GetUpdatesPerSecond(unsigned int)>:
 800d294:	f3bf 8f5f 	dmb	sy
 800d298:	4b01      	ldr	r3, [pc, #4]	; (800d2a0 <Dmx::GetUpdatesPerSecond(unsigned int)+0xc>)
 800d29a:	0109      	lsls	r1, r1, #4
 800d29c:	5858      	ldr	r0, [r3, r1]
 800d29e:	4770      	bx	lr
 800d2a0:	20001698 	mulcs	r0, r8, r6

0800d2a4 <RemoteConfig::HandleList()>:
 800d2a4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d2a8:	6801      	ldr	r1, [r0, #0]
 800d2aa:	4604      	mov	r4, r0
 800d2ac:	2012      	movs	r0, #18
 800d2ae:	f04f 080c 	mov.w	r8, #12
 800d2b2:	4a2b      	ldr	r2, [pc, #172]	; (800d360 <RemoteConfig::HandleList()+0xbc>)
 800d2b4:	4b2b      	ldr	r3, [pc, #172]	; (800d364 <RemoteConfig::HandleList()+0xc0>)
 800d2b6:	fb00 2201 	mla	r2, r0, r1, r2
 800d2ba:	6860      	ldr	r0, [r4, #4]
 800d2bc:	492a      	ldr	r1, [pc, #168]	; (800d368 <RemoteConfig::HandleList()+0xc4>)
 800d2be:	681b      	ldr	r3, [r3, #0]
 800d2c0:	fb08 1100 	mla	r1, r8, r0, r1
 800d2c4:	4e29      	ldr	r6, [pc, #164]	; (800d36c <RemoteConfig::HandleList()+0xc8>)
 800d2c6:	482a      	ldr	r0, [pc, #168]	; (800d370 <RemoteConfig::HandleList()+0xcc>)
 800d2c8:	691f      	ldr	r7, [r3, #16]
 800d2ca:	6835      	ldr	r5, [r6, #0]
 800d2cc:	f890 9009 	ldrb.w	r9, [r0, #9]
 800d2d0:	b2fb      	uxtb	r3, r7
 800d2d2:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 800d2d6:	f3c7 4e07 	ubfx	lr, r7, #16, #8
 800d2da:	f8d4 8008 	ldr.w	r8, [r4, #8]
 800d2de:	b089      	sub	sp, #36	; 0x24
 800d2e0:	3507      	adds	r5, #7
 800d2e2:	0e3f      	lsrs	r7, r7, #24
 800d2e4:	f1b9 0f00 	cmp.w	r9, #0
 800d2e8:	d020      	beq.n	800d32c <RemoteConfig::HandleList()+0x88>
 800d2ea:	3009      	adds	r0, #9
 800d2ec:	e9cd 2103 	strd	r2, r1, [sp, #12]
 800d2f0:	e9cd 8005 	strd	r8, r0, [sp, #20]
 800d2f4:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 800d2f8:	4628      	mov	r0, r5
 800d2fa:	e9cd e701 	strd	lr, r7, [sp, #4]
 800d2fe:	4a1d      	ldr	r2, [pc, #116]	; (800d374 <RemoteConfig::HandleList()+0xd0>)
 800d300:	f8cd c000 	str.w	ip, [sp]
 800d304:	f7fc f982 	bl	800960c <snprintf>
 800d308:	f8d4 35e4 	ldr.w	r3, [r4, #1508]	; 0x5e4
 800d30c:	2b05      	cmp	r3, #5
 800d30e:	d11a      	bne.n	800d346 <RemoteConfig::HandleList()+0xa2>
 800d310:	f642 1305 	movw	r3, #10501	; 0x2905
 800d314:	9300      	str	r3, [sp, #0]
 800d316:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800d31a:	b282      	uxth	r2, r0
 800d31c:	4629      	mov	r1, r5
 800d31e:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800d322:	f002 fa2b 	bl	800f77c <udp_send>
 800d326:	b009      	add	sp, #36	; 0x24
 800d328:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d32c:	e9cd 1804 	strd	r1, r8, [sp, #16]
 800d330:	e9cd 7202 	strd	r7, r2, [sp, #8]
 800d334:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 800d338:	4628      	mov	r0, r5
 800d33a:	e9cd ce00 	strd	ip, lr, [sp]
 800d33e:	4a0e      	ldr	r2, [pc, #56]	; (800d378 <RemoteConfig::HandleList()+0xd4>)
 800d340:	f7fc f964 	bl	800960c <snprintf>
 800d344:	e7e0      	b.n	800d308 <RemoteConfig::HandleList()+0x64>
 800d346:	2b06      	cmp	r3, #6
 800d348:	d1ed      	bne.n	800d326 <RemoteConfig::HandleList()+0x82>
 800d34a:	6833      	ldr	r3, [r6, #0]
 800d34c:	799b      	ldrb	r3, [r3, #6]
 800d34e:	2b2a      	cmp	r3, #42	; 0x2a
 800d350:	d1e9      	bne.n	800d326 <RemoteConfig::HandleList()+0x82>
 800d352:	f642 1305 	movw	r3, #10501	; 0x2905
 800d356:	9300      	str	r3, [sp, #0]
 800d358:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800d35c:	e7dd      	b.n	800d31a <RemoteConfig::HandleList()+0x76>
 800d35e:	bf00      	nop
 800d360:	08015736 	stmdaeq	r1, {r1, r2, r4, r5, r8, r9, sl, ip, lr}
 800d364:	2000a008 	andcs	sl, r0, r8
 800d368:	080157d8 	stmdaeq	r1, {r3, r4, r6, r7, r8, r9, sl, ip, lr}
 800d36c:	200016c0 	andcs	r1, r0, r0, asr #13
 800d370:	200016c4 	andcs	r1, r0, r4, asr #13
 800d374:	08015670 	stmdaeq	r1, {r4, r5, r6, r9, sl, ip, lr}
 800d378:	08015689 	stmdaeq	r1, {r0, r3, r7, r9, sl, ip, lr}

0800d37c <RemoteConfig::HandleDisplayGet()>:
 800d37c:	f8d0 35e4 	ldr.w	r3, [r0, #1508]	; 0x5e4
 800d380:	2b08      	cmp	r3, #8
 800d382:	d11d      	bne.n	800d3c0 <RemoteConfig::HandleDisplayGet()+0x44>
 800d384:	4b0f      	ldr	r3, [pc, #60]	; (800d3c4 <RemoteConfig::HandleDisplayGet()+0x48>)
 800d386:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d388:	681b      	ldr	r3, [r3, #0]
 800d38a:	4d0f      	ldr	r5, [pc, #60]	; (800d3c8 <RemoteConfig::HandleDisplayGet()+0x4c>)
 800d38c:	7c19      	ldrb	r1, [r3, #16]
 800d38e:	4a0f      	ldr	r2, [pc, #60]	; (800d3cc <RemoteConfig::HandleDisplayGet()+0x50>)
 800d390:	4b0f      	ldr	r3, [pc, #60]	; (800d3d0 <RemoteConfig::HandleDisplayGet()+0x54>)
 800d392:	4604      	mov	r4, r0
 800d394:	2900      	cmp	r1, #0
 800d396:	bf18      	it	ne
 800d398:	4613      	movne	r3, r2
 800d39a:	6828      	ldr	r0, [r5, #0]
 800d39c:	f240 31ff 	movw	r1, #1023	; 0x3ff
 800d3a0:	4a0c      	ldr	r2, [pc, #48]	; (800d3d4 <RemoteConfig::HandleDisplayGet()+0x58>)
 800d3a2:	f7fc f933 	bl	800960c <snprintf>
 800d3a6:	f642 1305 	movw	r3, #10501	; 0x2905
 800d3aa:	9300      	str	r3, [sp, #0]
 800d3ac:	b282      	uxth	r2, r0
 800d3ae:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800d3b2:	6829      	ldr	r1, [r5, #0]
 800d3b4:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800d3b8:	f002 f9e0 	bl	800f77c <udp_send>
 800d3bc:	b003      	add	sp, #12
 800d3be:	bd30      	pop	{r4, r5, pc}
 800d3c0:	4770      	bx	lr
 800d3c2:	bf00      	nop
 800d3c4:	2000a640 	andcs	sl, r0, r0, asr #12
 800d3c8:	200016c0 	andcs	r1, r0, r0, asr #13
 800d3cc:	080156a2 	stmdaeq	r1, {r1, r5, r7, r9, sl, ip, lr}
 800d3d0:	0801569f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r7, r9, sl, ip, lr}
 800d3d4:	080156a6 	stmdaeq	r1, {r1, r2, r5, r7, r9, sl, ip, lr}

0800d3d8 <RemoteConfig::HandleTftpSet()>:
 800d3d8:	f8d0 25e4 	ldr.w	r2, [r0, #1508]	; 0x5e4
 800d3dc:	2a06      	cmp	r2, #6
 800d3de:	d109      	bne.n	800d3f4 <RemoteConfig::HandleTftpSet()+0x1c>
 800d3e0:	4a05      	ldr	r2, [pc, #20]	; (800d3f8 <RemoteConfig::HandleTftpSet()+0x20>)
 800d3e2:	6812      	ldr	r2, [r2, #0]
 800d3e4:	7992      	ldrb	r2, [r2, #6]
 800d3e6:	3a30      	subs	r2, #48	; 0x30
 800d3e8:	bf18      	it	ne
 800d3ea:	2201      	movne	r2, #1
 800d3ec:	f880 25ec 	strb.w	r2, [r0, #1516]	; 0x5ec
 800d3f0:	f000 bd6e 	b.w	800ded0 <RemoteConfig::PlatformHandleTftpSet()>
 800d3f4:	4770      	bx	lr
 800d3f6:	bf00      	nop
 800d3f8:	200016c0 	andcs	r1, r0, r0, asr #13

0800d3fc <RemoteConfig::HandleTftpGet()>:
 800d3fc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d3fe:	4604      	mov	r4, r0
 800d400:	f000 fd6e 	bl	800dee0 <RemoteConfig::PlatformHandleTftpGet()>
 800d404:	f8d4 35e4 	ldr.w	r3, [r4, #1508]	; 0x5e4
 800d408:	2b05      	cmp	r3, #5
 800d40a:	d118      	bne.n	800d43e <RemoteConfig::HandleTftpGet()+0x42>
 800d40c:	f894 15ec 	ldrb.w	r1, [r4, #1516]	; 0x5ec
 800d410:	4d0c      	ldr	r5, [pc, #48]	; (800d444 <RemoteConfig::HandleTftpGet()+0x48>)
 800d412:	4a0d      	ldr	r2, [pc, #52]	; (800d448 <RemoteConfig::HandleTftpGet()+0x4c>)
 800d414:	4b0d      	ldr	r3, [pc, #52]	; (800d44c <RemoteConfig::HandleTftpGet()+0x50>)
 800d416:	6828      	ldr	r0, [r5, #0]
 800d418:	2900      	cmp	r1, #0
 800d41a:	bf08      	it	eq
 800d41c:	4613      	moveq	r3, r2
 800d41e:	f240 31ff 	movw	r1, #1023	; 0x3ff
 800d422:	4a0b      	ldr	r2, [pc, #44]	; (800d450 <RemoteConfig::HandleTftpGet()+0x54>)
 800d424:	f7fc f8f2 	bl	800960c <snprintf>
 800d428:	f642 1305 	movw	r3, #10501	; 0x2905
 800d42c:	b282      	uxth	r2, r0
 800d42e:	9300      	str	r3, [sp, #0]
 800d430:	6829      	ldr	r1, [r5, #0]
 800d432:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800d436:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800d43a:	f002 f99f 	bl	800f77c <udp_send>
 800d43e:	b003      	add	sp, #12
 800d440:	bd30      	pop	{r4, r5, pc}
 800d442:	bf00      	nop
 800d444:	200016c0 	andcs	r1, r0, r0, asr #13
 800d448:	080156a2 	stmdaeq	r1, {r1, r5, r7, r9, sl, ip, lr}
 800d44c:	0801569f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r7, r9, sl, ip, lr}
 800d450:	080156b2 	stmdaeq	r1, {r1, r4, r5, r7, r9, sl, ip, lr}

0800d454 <RemoteConfig::HandleVersion()>:
 800d454:	f8d0 35e4 	ldr.w	r3, [r0, #1508]	; 0x5e4
 800d458:	2b08      	cmp	r3, #8
 800d45a:	d116      	bne.n	800d48a <RemoteConfig::HandleVersion()+0x36>
 800d45c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d45e:	4d0b      	ldr	r5, [pc, #44]	; (800d48c <RemoteConfig::HandleVersion()+0x38>)
 800d460:	4604      	mov	r4, r0
 800d462:	f240 31ff 	movw	r1, #1023	; 0x3ff
 800d466:	4b0a      	ldr	r3, [pc, #40]	; (800d490 <RemoteConfig::HandleVersion()+0x3c>)
 800d468:	4a0a      	ldr	r2, [pc, #40]	; (800d494 <RemoteConfig::HandleVersion()+0x40>)
 800d46a:	6828      	ldr	r0, [r5, #0]
 800d46c:	f7fc f8ce 	bl	800960c <snprintf>
 800d470:	f642 1305 	movw	r3, #10501	; 0x2905
 800d474:	9300      	str	r3, [sp, #0]
 800d476:	b282      	uxth	r2, r0
 800d478:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800d47c:	6829      	ldr	r1, [r5, #0]
 800d47e:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800d482:	f002 f97b 	bl	800f77c <udp_send>
 800d486:	b003      	add	sp, #12
 800d488:	bd30      	pop	{r4, r5, pc}
 800d48a:	4770      	bx	lr
 800d48c:	200016c0 	andcs	r1, r0, r0, asr #13
 800d490:	2000a6e6 	andcs	sl, r0, r6, ror #13
 800d494:	080156bb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r7, r9, sl, ip, lr}

0800d498 <RemoteConfig::HandleUptime()>:
 800d498:	f890 35d7 	ldrb.w	r3, [r0, #1495]	; 0x5d7
 800d49c:	b1fb      	cbz	r3, 800d4de <RemoteConfig::HandleUptime()+0x46>
 800d49e:	4b10      	ldr	r3, [pc, #64]	; (800d4e0 <RemoteConfig::HandleUptime()+0x48>)
 800d4a0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d4a2:	681a      	ldr	r2, [r3, #0]
 800d4a4:	f8d0 35e4 	ldr.w	r3, [r0, #1508]	; 0x5e4
 800d4a8:	4604      	mov	r4, r0
 800d4aa:	2b07      	cmp	r3, #7
 800d4ac:	d115      	bne.n	800d4da <RemoteConfig::HandleUptime()+0x42>
 800d4ae:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800d4b2:	4d0c      	ldr	r5, [pc, #48]	; (800d4e4 <RemoteConfig::HandleUptime()+0x4c>)
 800d4b4:	fbb2 f3f3 	udiv	r3, r2, r3
 800d4b8:	f240 31ff 	movw	r1, #1023	; 0x3ff
 800d4bc:	4a0a      	ldr	r2, [pc, #40]	; (800d4e8 <RemoteConfig::HandleUptime()+0x50>)
 800d4be:	6828      	ldr	r0, [r5, #0]
 800d4c0:	f7fc f8a4 	bl	800960c <snprintf>
 800d4c4:	f642 1305 	movw	r3, #10501	; 0x2905
 800d4c8:	9300      	str	r3, [sp, #0]
 800d4ca:	b282      	uxth	r2, r0
 800d4cc:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800d4d0:	6829      	ldr	r1, [r5, #0]
 800d4d2:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800d4d6:	f002 f951 	bl	800f77c <udp_send>
 800d4da:	b003      	add	sp, #12
 800d4dc:	bd30      	pop	{r4, r5, pc}
 800d4de:	4770      	bx	lr
 800d4e0:	2000a744 	andcs	sl, r0, r4, asr #14
 800d4e4:	200016c0 	andcs	r1, r0, r0, asr #13
 800d4e8:	080156c6 	stmdaeq	r1, {r1, r2, r6, r7, r9, sl, ip, lr}

0800d4ec <RemoteConfig::HandleDisplaySet()>:
 800d4ec:	b538      	push	{r3, r4, r5, lr}
 800d4ee:	f8d0 35e4 	ldr.w	r3, [r0, #1508]	; 0x5e4
 800d4f2:	2b09      	cmp	r3, #9
 800d4f4:	d113      	bne.n	800d51e <RemoteConfig::HandleDisplaySet()+0x32>
 800d4f6:	4b0a      	ldr	r3, [pc, #40]	; (800d520 <RemoteConfig::HandleDisplaySet()+0x34>)
 800d4f8:	681c      	ldr	r4, [r3, #0]
 800d4fa:	4b0a      	ldr	r3, [pc, #40]	; (800d524 <RemoteConfig::HandleDisplaySet()+0x38>)
 800d4fc:	69a0      	ldr	r0, [r4, #24]
 800d4fe:	681b      	ldr	r3, [r3, #0]
 800d500:	7a5d      	ldrb	r5, [r3, #9]
 800d502:	f1a5 0330 	sub.w	r3, r5, #48	; 0x30
 800d506:	4259      	negs	r1, r3
 800d508:	4159      	adcs	r1, r3
 800d50a:	b140      	cbz	r0, 800d51e <RemoteConfig::HandleDisplaySet()+0x32>
 800d50c:	6803      	ldr	r3, [r0, #0]
 800d50e:	7421      	strb	r1, [r4, #16]
 800d510:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d512:	4798      	blx	r3
 800d514:	2d30      	cmp	r5, #48	; 0x30
 800d516:	bf1e      	ittt	ne
 800d518:	4b03      	ldrne	r3, [pc, #12]	; (800d528 <RemoteConfig::HandleDisplaySet()+0x3c>)
 800d51a:	681b      	ldrne	r3, [r3, #0]
 800d51c:	6063      	strne	r3, [r4, #4]
 800d51e:	bd38      	pop	{r3, r4, r5, pc}
 800d520:	2000a640 	andcs	sl, r0, r0, asr #12
 800d524:	200016c0 	andcs	r1, r0, r0, asr #13
 800d528:	2000a744 	andcs	sl, r0, r4, asr #14

0800d52c <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>:
 800d52c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d530:	f100 0a0c 	add.w	sl, r0, #12
 800d534:	4604      	mov	r4, r0
 800d536:	e9c0 1200 	strd	r1, r2, [r0]
 800d53a:	6083      	str	r3, [r0, #8]
 800d53c:	4650      	mov	r0, sl
 800d53e:	4690      	mov	r8, r2
 800d540:	4689      	mov	r9, r1
 800d542:	461f      	mov	r7, r3
 800d544:	f000 fd0c 	bl	800df60 <HttpDaemon::HttpDaemon()>
 800d548:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800d54c:	2500      	movs	r5, #0
 800d54e:	4e16      	ldr	r6, [pc, #88]	; (800d5a8 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x7c>)
 800d550:	f8df b058 	ldr.w	fp, [pc, #88]	; 800d5ac <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x80>
 800d554:	f8c4 35dc 	str.w	r3, [r4, #1500]	; 0x5dc
 800d558:	4b15      	ldr	r3, [pc, #84]	; (800d5b0 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x84>)
 800d55a:	4631      	mov	r1, r6
 800d55c:	f8db 0000 	ldr.w	r0, [fp]
 800d560:	f8c4 55d4 	str.w	r5, [r4, #1492]	; 0x5d4
 800d564:	f8a4 55d8 	strh.w	r5, [r4, #1496]	; 0x5d8
 800d568:	f8c4 55e0 	str.w	r5, [r4, #1504]	; 0x5e0
 800d56c:	f8c4 55e4 	str.w	r5, [r4, #1508]	; 0x5e4
 800d570:	f8c4 55e8 	str.w	r5, [r4, #1512]	; 0x5e8
 800d574:	f884 55ec 	strb.w	r5, [r4, #1516]	; 0x5ec
 800d578:	601c      	str	r4, [r3, #0]
 800d57a:	f002 fdcb 	bl	8010114 <Network::MacAddressCopyTo(unsigned char*)>
 800d57e:	f642 1105 	movw	r1, #10501	; 0x2905
 800d582:	f8db 0000 	ldr.w	r0, [fp]
 800d586:	f886 9006 	strb.w	r9, [r6, #6]
 800d58a:	f886 8007 	strb.w	r8, [r6, #7]
 800d58e:	7237      	strb	r7, [r6, #8]
 800d590:	7275      	strb	r5, [r6, #9]
 800d592:	f002 fdb9 	bl	8010108 <Network::Begin(unsigned short)>
 800d596:	f8c4 05dc 	str.w	r0, [r4, #1500]	; 0x5dc
 800d59a:	4650      	mov	r0, sl
 800d59c:	f000 fcf8 	bl	800df90 <HttpDaemon::Start()>
 800d5a0:	4620      	mov	r0, r4
 800d5a2:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d5a6:	bf00      	nop
 800d5a8:	200016c4 	andcs	r1, r0, r4, asr #13
 800d5ac:	2000a008 	andcs	sl, r0, r8
 800d5b0:	200016e8 	andcs	r1, r0, r8, ror #13

0800d5b4 <RemoteConfig::GetStringNode() const>:
 800d5b4:	2012      	movs	r0, #18
 800d5b6:	4b03      	ldr	r3, [pc, #12]	; (800d5c4 <RemoteConfig::GetStringNode() const+0x10>)
 800d5b8:	799a      	ldrb	r2, [r3, #6]
 800d5ba:	4b03      	ldr	r3, [pc, #12]	; (800d5c8 <RemoteConfig::GetStringNode() const+0x14>)
 800d5bc:	fb00 3002 	mla	r0, r0, r2, r3
 800d5c0:	4770      	bx	lr
 800d5c2:	bf00      	nop
 800d5c4:	200016c4 	andcs	r1, r0, r4, asr #13
 800d5c8:	08015736 	stmdaeq	r1, {r1, r2, r4, r5, r8, r9, sl, ip, lr}

0800d5cc <RemoteConfig::GetStringOutput() const>:
 800d5cc:	200c      	movs	r0, #12
 800d5ce:	4b03      	ldr	r3, [pc, #12]	; (800d5dc <RemoteConfig::GetStringOutput() const+0x10>)
 800d5d0:	79da      	ldrb	r2, [r3, #7]
 800d5d2:	4b03      	ldr	r3, [pc, #12]	; (800d5e0 <RemoteConfig::GetStringOutput() const+0x14>)
 800d5d4:	fb00 3002 	mla	r0, r0, r2, r3
 800d5d8:	4770      	bx	lr
 800d5da:	bf00      	nop
 800d5dc:	200016c4 	andcs	r1, r0, r4, asr #13
 800d5e0:	080157d8 	stmdaeq	r1, {r3, r4, r6, r7, r8, r9, sl, ip, lr}

0800d5e4 <RemoteConfig::SetDisable(bool)>:
 800d5e4:	b538      	push	{r3, r4, r5, lr}
 800d5e6:	4604      	mov	r4, r0
 800d5e8:	f890 35d4 	ldrb.w	r3, [r0, #1492]	; 0x5d4
 800d5ec:	b171      	cbz	r1, 800d60c <RemoteConfig::SetDisable(bool)+0x28>
 800d5ee:	b963      	cbnz	r3, 800d60a <RemoteConfig::SetDisable(bool)+0x26>
 800d5f0:	4b0d      	ldr	r3, [pc, #52]	; (800d628 <RemoteConfig::SetDisable(bool)+0x44>)
 800d5f2:	f642 1105 	movw	r1, #10501	; 0x2905
 800d5f6:	6818      	ldr	r0, [r3, #0]
 800d5f8:	f002 fd89 	bl	801010e <Network::End(unsigned short)>
 800d5fc:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800d600:	f8c4 35dc 	str.w	r3, [r4, #1500]	; 0x5dc
 800d604:	2301      	movs	r3, #1
 800d606:	f884 35d4 	strb.w	r3, [r4, #1492]	; 0x5d4
 800d60a:	bd38      	pop	{r3, r4, r5, pc}
 800d60c:	2b00      	cmp	r3, #0
 800d60e:	d0fc      	beq.n	800d60a <RemoteConfig::SetDisable(bool)+0x26>
 800d610:	4b05      	ldr	r3, [pc, #20]	; (800d628 <RemoteConfig::SetDisable(bool)+0x44>)
 800d612:	460d      	mov	r5, r1
 800d614:	6818      	ldr	r0, [r3, #0]
 800d616:	f642 1105 	movw	r1, #10501	; 0x2905
 800d61a:	f002 fd75 	bl	8010108 <Network::Begin(unsigned short)>
 800d61e:	f884 55d4 	strb.w	r5, [r4, #1492]	; 0x5d4
 800d622:	f8c4 05dc 	str.w	r0, [r4, #1500]	; 0x5dc
 800d626:	e7f0      	b.n	800d60a <RemoteConfig::SetDisable(bool)+0x26>
 800d628:	2000a008 	andcs	sl, r0, r8

0800d62c <RemoteConfig::SetDisplayName(char const*)>:
 800d62c:	2217      	movs	r2, #23
 800d62e:	4809      	ldr	r0, [pc, #36]	; (800d654 <RemoteConfig::SetDisplayName(char const*)+0x28>)
 800d630:	b508      	push	{r3, lr}
 800d632:	1e4b      	subs	r3, r1, #1
 800d634:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800d638:	b911      	cbnz	r1, 800d640 <RemoteConfig::SetDisplayName(char const*)+0x14>
 800d63a:	f005 fa63 	bl	8012b04 <memset>
 800d63e:	e003      	b.n	800d648 <RemoteConfig::SetDisplayName(char const*)+0x1c>
 800d640:	3a01      	subs	r2, #1
 800d642:	f800 1b01 	strb.w	r1, [r0], #1
 800d646:	d1f5      	bne.n	800d634 <RemoteConfig::SetDisplayName(char const*)+0x8>
 800d648:	2200      	movs	r2, #0
 800d64a:	4b03      	ldr	r3, [pc, #12]	; (800d658 <RemoteConfig::SetDisplayName(char const*)+0x2c>)
 800d64c:	f883 2020 	strb.w	r2, [r3, #32]
 800d650:	bd08      	pop	{r3, pc}
 800d652:	bf00      	nop
 800d654:	200016cd 	andcs	r1, r0, sp, asr #13
 800d658:	200016c4 	andcs	r1, r0, r4, asr #13

0800d65c <RemoteConfig::HandleGet(void*, unsigned int)>:
 800d65c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d65e:	4604      	mov	r4, r0
 800d660:	4616      	mov	r6, r2
 800d662:	460d      	mov	r5, r1
 800d664:	4f2a      	ldr	r7, [pc, #168]	; (800d710 <RemoteConfig::HandleGet(void*, unsigned int)+0xb4>)
 800d666:	b085      	sub	sp, #20
 800d668:	b9b9      	cbnz	r1, 800d69a <RemoteConfig::HandleGet(void*, unsigned int)+0x3e>
 800d66a:	f44f 737f 	mov.w	r3, #1020	; 0x3fc
 800d66e:	6839      	ldr	r1, [r7, #0]
 800d670:	aa03      	add	r2, sp, #12
 800d672:	3105      	adds	r1, #5
 800d674:	9303      	str	r3, [sp, #12]
 800d676:	f000 fc01 	bl	800de7c <RemoteConfig::GetIndex(void const*, unsigned int&)>
 800d67a:	1e03      	subs	r3, r0, #0
 800d67c:	da1d      	bge.n	800d6ba <RemoteConfig::HandleGet(void*, unsigned int)+0x5e>
 800d67e:	f642 1305 	movw	r3, #10501	; 0x2905
 800d682:	220b      	movs	r2, #11
 800d684:	9300      	str	r3, [sp, #0]
 800d686:	4923      	ldr	r1, [pc, #140]	; (800d714 <RemoteConfig::HandleGet(void*, unsigned int)+0xb8>)
 800d688:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800d68c:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800d690:	f002 f874 	bl	800f77c <udp_send>
 800d694:	200c      	movs	r0, #12
 800d696:	b005      	add	sp, #20
 800d698:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d69a:	9203      	str	r2, [sp, #12]
 800d69c:	aa03      	add	r2, sp, #12
 800d69e:	6039      	str	r1, [r7, #0]
 800d6a0:	f000 fbec 	bl	800de7c <RemoteConfig::GetIndex(void const*, unsigned int&)>
 800d6a4:	1e03      	subs	r3, r0, #0
 800d6a6:	da08      	bge.n	800d6ba <RemoteConfig::HandleGet(void*, unsigned int)+0x5e>
 800d6a8:	2e0b      	cmp	r6, #11
 800d6aa:	4632      	mov	r2, r6
 800d6ac:	4628      	mov	r0, r5
 800d6ae:	bf28      	it	cs
 800d6b0:	220b      	movcs	r2, #11
 800d6b2:	4918      	ldr	r1, [pc, #96]	; (800d714 <RemoteConfig::HandleGet(void*, unsigned int)+0xb8>)
 800d6b4:	f005 fa04 	bl	8012ac0 <memcpy>
 800d6b8:	e7ec      	b.n	800d694 <RemoteConfig::HandleGet(void*, unsigned int)+0x38>
 800d6ba:	221c      	movs	r2, #28
 800d6bc:	4353      	muls	r3, r2
 800d6be:	4916      	ldr	r1, [pc, #88]	; (800d718 <RemoteConfig::HandleGet(void*, unsigned int)+0xbc>)
 800d6c0:	18ca      	adds	r2, r1, r3
 800d6c2:	6852      	ldr	r2, [r2, #4]
 800d6c4:	58cb      	ldr	r3, [r1, r3]
 800d6c6:	ea4f 0c62 	mov.w	ip, r2, asr #1
 800d6ca:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800d6ce:	07d2      	lsls	r2, r2, #31
 800d6d0:	bf48      	it	mi
 800d6d2:	f854 200c 	ldrmi.w	r2, [r4, ip]
 800d6d6:	a903      	add	r1, sp, #12
 800d6d8:	bf48      	it	mi
 800d6da:	58d3      	ldrmi	r3, [r2, r3]
 800d6dc:	4798      	blx	r3
 800d6de:	b96d      	cbnz	r5, 800d6fc <RemoteConfig::HandleGet(void*, unsigned int)+0xa0>
 800d6e0:	f642 1305 	movw	r3, #10501	; 0x2905
 800d6e4:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800d6e8:	9300      	str	r3, [sp, #0]
 800d6ea:	6839      	ldr	r1, [r7, #0]
 800d6ec:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800d6f0:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800d6f4:	f002 f842 	bl	800f77c <udp_send>
 800d6f8:	9803      	ldr	r0, [sp, #12]
 800d6fa:	e7cc      	b.n	800d696 <RemoteConfig::HandleGet(void*, unsigned int)+0x3a>
 800d6fc:	9a03      	ldr	r2, [sp, #12]
 800d6fe:	4628      	mov	r0, r5
 800d700:	42b2      	cmp	r2, r6
 800d702:	bf28      	it	cs
 800d704:	4632      	movcs	r2, r6
 800d706:	6839      	ldr	r1, [r7, #0]
 800d708:	f005 f9e5 	bl	8012ad6 <memmove>
 800d70c:	e7f4      	b.n	800d6f8 <RemoteConfig::HandleGet(void*, unsigned int)+0x9c>
 800d70e:	bf00      	nop
 800d710:	200016c0 	andcs	r1, r0, r0, asr #13
 800d714:	080156d3 	stmdaeq	r1, {r0, r1, r4, r6, r7, r9, sl, ip, lr}
 800d718:	08015970 	stmdaeq	r1, {r4, r5, r6, r8, fp, ip, lr}

0800d71c <RemoteConfig::HandleGetNoParams()>:
 800d71c:	2200      	movs	r2, #0
 800d71e:	4611      	mov	r1, r2
 800d720:	f7ff bf9c 	b.w	800d65c <RemoteConfig::HandleGet(void*, unsigned int)>

0800d724 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)>:
 800d724:	b510      	push	{r4, lr}
 800d726:	460c      	mov	r4, r1
 800d728:	4b07      	ldr	r3, [pc, #28]	; (800d748 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x24>)
 800d72a:	b08a      	sub	sp, #40	; 0x28
 800d72c:	6819      	ldr	r1, [r3, #0]
 800d72e:	a801      	add	r0, sp, #4
 800d730:	f000 f9fa 	bl	800db28 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 800d734:	4905      	ldr	r1, [pc, #20]	; (800d74c <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x28>)
 800d736:	4623      	mov	r3, r4
 800d738:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800d73c:	6809      	ldr	r1, [r1, #0]
 800d73e:	a801      	add	r0, sp, #4
 800d740:	f000 fb16 	bl	800dd70 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>
 800d744:	b00a      	add	sp, #40	; 0x28
 800d746:	bd10      	pop	{r4, pc}
 800d748:	2000271c 	andcs	r2, r0, ip, lsl r7
 800d74c:	200016c0 	andcs	r1, r0, r0, asr #13

0800d750 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)>:
 800d750:	b513      	push	{r0, r1, r4, lr}
 800d752:	460c      	mov	r4, r1
 800d754:	4b07      	ldr	r3, [pc, #28]	; (800d774 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x24>)
 800d756:	a801      	add	r0, sp, #4
 800d758:	6819      	ldr	r1, [r3, #0]
 800d75a:	f002 ffd7 	bl	801070c <NetworkParams::NetworkParams(NetworkParamsStore*)>
 800d75e:	4906      	ldr	r1, [pc, #24]	; (800d778 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x28>)
 800d760:	4623      	mov	r3, r4
 800d762:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800d766:	6809      	ldr	r1, [r1, #0]
 800d768:	a801      	add	r0, sp, #4
 800d76a:	f003 fa3f 	bl	8010bec <NetworkParams::Save(char*, unsigned int, unsigned int&)>
 800d76e:	b002      	add	sp, #8
 800d770:	bd10      	pop	{r4, pc}
 800d772:	bf00      	nop
 800d774:	20002714 	andcs	r2, r0, r4, lsl r7
 800d778:	200016c0 	andcs	r1, r0, r0, asr #13

0800d77c <RemoteConfig::HandleGetE131Txt(unsigned int&)>:
 800d77c:	b510      	push	{r4, lr}
 800d77e:	460c      	mov	r4, r1
 800d780:	4b07      	ldr	r3, [pc, #28]	; (800d7a0 <RemoteConfig::HandleGetE131Txt(unsigned int&)+0x24>)
 800d782:	b08a      	sub	sp, #40	; 0x28
 800d784:	6819      	ldr	r1, [r3, #0]
 800d786:	a801      	add	r0, sp, #4
 800d788:	f7fd f91e 	bl	800a9c8 <E131Params::E131Params(E131ParamsStore*)>
 800d78c:	4905      	ldr	r1, [pc, #20]	; (800d7a4 <RemoteConfig::HandleGetE131Txt(unsigned int&)+0x28>)
 800d78e:	4623      	mov	r3, r4
 800d790:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800d794:	6809      	ldr	r1, [r1, #0]
 800d796:	a801      	add	r0, sp, #4
 800d798:	f7fd fb70 	bl	800ae7c <E131Params::Save(char*, unsigned int, unsigned int&)>
 800d79c:	b00a      	add	sp, #40	; 0x28
 800d79e:	bd10      	pop	{r4, pc}
 800d7a0:	20002710 	andcs	r2, r0, r0, lsl r7
 800d7a4:	200016c0 	andcs	r1, r0, r0, asr #13

0800d7a8 <RemoteConfig::HandleGetParamsTxt(unsigned int&)>:
 800d7a8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800d7aa:	460c      	mov	r4, r1
 800d7ac:	4b07      	ldr	r3, [pc, #28]	; (800d7cc <RemoteConfig::HandleGetParamsTxt(unsigned int&)+0x24>)
 800d7ae:	4668      	mov	r0, sp
 800d7b0:	6819      	ldr	r1, [r3, #0]
 800d7b2:	f7fe fec5 	bl	800c540 <DmxParams::DmxParams(DmxParamsStore*)>
 800d7b6:	4906      	ldr	r1, [pc, #24]	; (800d7d0 <RemoteConfig::HandleGetParamsTxt(unsigned int&)+0x28>)
 800d7b8:	4623      	mov	r3, r4
 800d7ba:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800d7be:	4668      	mov	r0, sp
 800d7c0:	6809      	ldr	r1, [r1, #0]
 800d7c2:	f7fe ffdf 	bl	800c784 <DmxParams::Save(char*, unsigned int, unsigned int&)>
 800d7c6:	b004      	add	sp, #16
 800d7c8:	bd10      	pop	{r4, pc}
 800d7ca:	bf00      	nop
 800d7cc:	2000270c 	andcs	r2, r0, ip, lsl #14
 800d7d0:	200016c0 	andcs	r1, r0, r0, asr #13

0800d7d4 <RemoteConfig::HandleGetDisplayTxt(unsigned int&)>:
 800d7d4:	b510      	push	{r4, lr}
 800d7d6:	460c      	mov	r4, r1
 800d7d8:	4b07      	ldr	r3, [pc, #28]	; (800d7f8 <RemoteConfig::HandleGetDisplayTxt(unsigned int&)+0x24>)
 800d7da:	b08a      	sub	sp, #40	; 0x28
 800d7dc:	6819      	ldr	r1, [r3, #0]
 800d7de:	4668      	mov	r0, sp
 800d7e0:	f003 ffd6 	bl	8011790 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 800d7e4:	4905      	ldr	r1, [pc, #20]	; (800d7fc <RemoteConfig::HandleGetDisplayTxt(unsigned int&)+0x28>)
 800d7e6:	4623      	mov	r3, r4
 800d7e8:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800d7ec:	4668      	mov	r0, sp
 800d7ee:	6809      	ldr	r1, [r1, #0]
 800d7f0:	f004 f906 	bl	8011a00 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)>
 800d7f4:	b00a      	add	sp, #40	; 0x28
 800d7f6:	bd10      	pop	{r4, pc}
 800d7f8:	20002708 	andcs	r2, r0, r8, lsl #14
 800d7fc:	200016c0 	andcs	r1, r0, r0, asr #13

0800d800 <RemoteConfig::HandleSet(void*, unsigned int)>:
 800d800:	b530      	push	{r4, r5, lr}
 800d802:	b085      	sub	sp, #20
 800d804:	4604      	mov	r4, r0
 800d806:	9201      	str	r2, [sp, #4]
 800d808:	b9d1      	cbnz	r1, 800d840 <RemoteConfig::HandleSet(void*, unsigned int)+0x40>
 800d80a:	f240 33ff 	movw	r3, #1023	; 0x3ff
 800d80e:	9303      	str	r3, [sp, #12]
 800d810:	4b1b      	ldr	r3, [pc, #108]	; (800d880 <RemoteConfig::HandleSet(void*, unsigned int)+0x80>)
 800d812:	aa03      	add	r2, sp, #12
 800d814:	6819      	ldr	r1, [r3, #0]
 800d816:	3101      	adds	r1, #1
 800d818:	f000 fb30 	bl	800de7c <RemoteConfig::GetIndex(void const*, unsigned int&)>
 800d81c:	2800      	cmp	r0, #0
 800d81e:	db0d      	blt.n	800d83c <RemoteConfig::HandleSet(void*, unsigned int)+0x3c>
 800d820:	221c      	movs	r2, #28
 800d822:	4b18      	ldr	r3, [pc, #96]	; (800d884 <RemoteConfig::HandleSet(void*, unsigned int)+0x84>)
 800d824:	fb02 3300 	mla	r3, r2, r0, r3
 800d828:	68da      	ldr	r2, [r3, #12]
 800d82a:	689b      	ldr	r3, [r3, #8]
 800d82c:	1051      	asrs	r1, r2, #1
 800d82e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800d832:	07d2      	lsls	r2, r2, #31
 800d834:	bf44      	itt	mi
 800d836:	5862      	ldrmi	r2, [r4, r1]
 800d838:	58d3      	ldrmi	r3, [r2, r3]
 800d83a:	4798      	blx	r3
 800d83c:	b005      	add	sp, #20
 800d83e:	bd30      	pop	{r4, r5, pc}
 800d840:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800d844:	4613      	mov	r3, r2
 800d846:	d8f9      	bhi.n	800d83c <RemoteConfig::HandleSet(void*, unsigned int)+0x3c>
 800d848:	2200      	movs	r2, #0
 800d84a:	460d      	mov	r5, r1
 800d84c:	490e      	ldr	r1, [pc, #56]	; (800d888 <RemoteConfig::HandleSet(void*, unsigned int)+0x88>)
 800d84e:	f8c0 25e8 	str.w	r2, [r0, #1512]	; 0x5e8
 800d852:	7809      	ldrb	r1, [r1, #0]
 800d854:	07c9      	lsls	r1, r1, #31
 800d856:	d50a      	bpl.n	800d86e <RemoteConfig::HandleSet(void*, unsigned int)+0x6e>
 800d858:	7829      	ldrb	r1, [r5, #0]
 800d85a:	297b      	cmp	r1, #123	; 0x7b
 800d85c:	d107      	bne.n	800d86e <RemoteConfig::HandleSet(void*, unsigned int)+0x6e>
 800d85e:	3b01      	subs	r3, #1
 800d860:	b299      	uxth	r1, r3
 800d862:	4628      	mov	r0, r5
 800d864:	f004 f994 	bl	8011b90 <properties::convert_json_file(char*, unsigned short, bool)>
 800d868:	1e03      	subs	r3, r0, #0
 800d86a:	dde7      	ble.n	800d83c <RemoteConfig::HandleSet(void*, unsigned int)+0x3c>
 800d86c:	b29b      	uxth	r3, r3
 800d86e:	f8c4 35e4 	str.w	r3, [r4, #1508]	; 0x5e4
 800d872:	4b03      	ldr	r3, [pc, #12]	; (800d880 <RemoteConfig::HandleSet(void*, unsigned int)+0x80>)
 800d874:	4620      	mov	r0, r4
 800d876:	601d      	str	r5, [r3, #0]
 800d878:	aa01      	add	r2, sp, #4
 800d87a:	1c69      	adds	r1, r5, #1
 800d87c:	e7cc      	b.n	800d818 <RemoteConfig::HandleSet(void*, unsigned int)+0x18>
 800d87e:	bf00      	nop
 800d880:	200016c0 	andcs	r1, r0, r0, asr #13
 800d884:	08015970 	stmdaeq	r1, {r4, r5, r6, r8, fp, ip, lr}
 800d888:	2000a63c 	andcs	sl, r0, ip, lsr r6

0800d88c <RemoteConfig::Run()>:
 800d88c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800d890:	f890 55d4 	ldrb.w	r5, [r0, #1492]	; 0x5d4
 800d894:	2d00      	cmp	r5, #0
 800d896:	d15d      	bne.n	800d954 <RemoteConfig::Run()+0xc8>
 800d898:	4604      	mov	r4, r0
 800d89a:	4e4a      	ldr	r6, [pc, #296]	; (800d9c4 <RemoteConfig::Run()+0x138>)
 800d89c:	300c      	adds	r0, #12
 800d89e:	f000 fdf1 	bl	800e484 <HttpDaemon::Run()>
 800d8a2:	4631      	mov	r1, r6
 800d8a4:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800d8a8:	f10d 030e 	add.w	r3, sp, #14
 800d8ac:	f504 62bc 	add.w	r2, r4, #1504	; 0x5e0
 800d8b0:	f001 ff3e 	bl	800f730 <udp_recv2>
 800d8b4:	2803      	cmp	r0, #3
 800d8b6:	f8c4 05e4 	str.w	r0, [r4, #1508]	; 0x5e4
 800d8ba:	d94b      	bls.n	800d954 <RemoteConfig::Run()+0xc8>
 800d8bc:	6831      	ldr	r1, [r6, #0]
 800d8be:	1e43      	subs	r3, r0, #1
 800d8c0:	5cca      	ldrb	r2, [r1, r3]
 800d8c2:	2a0a      	cmp	r2, #10
 800d8c4:	bf18      	it	ne
 800d8c6:	4603      	movne	r3, r0
 800d8c8:	f8c4 35e4 	str.w	r3, [r4, #1508]	; 0x5e4
 800d8cc:	7808      	ldrb	r0, [r1, #0]
 800d8ce:	283f      	cmp	r0, #63	; 0x3f
 800d8d0:	d135      	bne.n	800d93e <RemoteConfig::Run()+0xb2>
 800d8d2:	483d      	ldr	r0, [pc, #244]	; (800d9c8 <RemoteConfig::Run()+0x13c>)
 800d8d4:	462a      	mov	r2, r5
 800d8d6:	4607      	mov	r7, r0
 800d8d8:	3b01      	subs	r3, #1
 800d8da:	f8c4 35e4 	str.w	r3, [r4, #1508]	; 0x5e4
 800d8de:	7b86      	ldrb	r6, [r0, #14]
 800d8e0:	8985      	ldrh	r5, [r0, #12]
 800d8e2:	b176      	cbz	r6, 800d902 <RemoteConfig::Run()+0x76>
 800d8e4:	42ab      	cmp	r3, r5
 800d8e6:	d80e      	bhi.n	800d906 <RemoteConfig::Run()+0x7a>
 800d8e8:	3201      	adds	r2, #1
 800d8ea:	2a09      	cmp	r2, #9
 800d8ec:	f100 0010 	add.w	r0, r0, #16
 800d8f0:	d1f5      	bne.n	800d8de <RemoteConfig::Run()+0x52>
 800d8f2:	f642 1305 	movw	r3, #10501	; 0x2905
 800d8f6:	9300      	str	r3, [sp, #0]
 800d8f8:	2208      	movs	r2, #8
 800d8fa:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800d8fe:	4933      	ldr	r1, [pc, #204]	; (800d9cc <RemoteConfig::Run()+0x140>)
 800d900:	e052      	b.n	800d9a8 <RemoteConfig::Run()+0x11c>
 800d902:	42ab      	cmp	r3, r5
 800d904:	d1f0      	bne.n	800d8e8 <RemoteConfig::Run()+0x5c>
 800d906:	6886      	ldr	r6, [r0, #8]
 800d908:	f101 0c01 	add.w	ip, r1, #1
 800d90c:	4435      	add	r5, r6
 800d90e:	42b5      	cmp	r5, r6
 800d910:	d10b      	bne.n	800d92a <RemoteConfig::Run()+0x9e>
 800d912:	0113      	lsls	r3, r2, #4
 800d914:	eb07 1202 	add.w	r2, r7, r2, lsl #4
 800d918:	6852      	ldr	r2, [r2, #4]
 800d91a:	58fb      	ldr	r3, [r7, r3]
 800d91c:	1051      	asrs	r1, r2, #1
 800d91e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800d922:	07d2      	lsls	r2, r2, #31
 800d924:	d408      	bmi.n	800d938 <RemoteConfig::Run()+0xac>
 800d926:	4798      	blx	r3
 800d928:	e014      	b.n	800d954 <RemoteConfig::Run()+0xc8>
 800d92a:	f81c 8b01 	ldrb.w	r8, [ip], #1
 800d92e:	f816 eb01 	ldrb.w	lr, [r6], #1
 800d932:	45f0      	cmp	r8, lr
 800d934:	d0eb      	beq.n	800d90e <RemoteConfig::Run()+0x82>
 800d936:	e7d7      	b.n	800d8e8 <RemoteConfig::Run()+0x5c>
 800d938:	5862      	ldr	r2, [r4, r1]
 800d93a:	58d3      	ldr	r3, [r2, r3]
 800d93c:	e7f3      	b.n	800d926 <RemoteConfig::Run()+0x9a>
 800d93e:	f894 25d5 	ldrb.w	r2, [r4, #1493]	; 0x5d5
 800d942:	b93a      	cbnz	r2, 800d954 <RemoteConfig::Run()+0xc8>
 800d944:	2823      	cmp	r0, #35	; 0x23
 800d946:	d108      	bne.n	800d95a <RemoteConfig::Run()+0xce>
 800d948:	4611      	mov	r1, r2
 800d94a:	4620      	mov	r0, r4
 800d94c:	f8c4 25e8 	str.w	r2, [r4, #1512]	; 0x5e8
 800d950:	f7ff ff56 	bl	800d800 <RemoteConfig::HandleSet(void*, unsigned int)>
 800d954:	b004      	add	sp, #16
 800d956:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d95a:	2821      	cmp	r0, #33	; 0x21
 800d95c:	d1fa      	bne.n	800d954 <RemoteConfig::Run()+0xc8>
 800d95e:	3b01      	subs	r3, #1
 800d960:	2b05      	cmp	r3, #5
 800d962:	f8c4 35e4 	str.w	r3, [r4, #1508]	; 0x5e4
 800d966:	d918      	bls.n	800d99a <RemoteConfig::Run()+0x10e>
 800d968:	1c4a      	adds	r2, r1, #1
 800d96a:	4610      	mov	r0, r2
 800d96c:	4d18      	ldr	r5, [pc, #96]	; (800d9d0 <RemoteConfig::Run()+0x144>)
 800d96e:	f101 0c06 	add.w	ip, r1, #6
 800d972:	4560      	cmp	r0, ip
 800d974:	d01d      	beq.n	800d9b2 <RemoteConfig::Run()+0x126>
 800d976:	f810 7b01 	ldrb.w	r7, [r0], #1
 800d97a:	f815 6b01 	ldrb.w	r6, [r5], #1
 800d97e:	42b7      	cmp	r7, r6
 800d980:	d0f7      	beq.n	800d972 <RemoteConfig::Run()+0xe6>
 800d982:	2b08      	cmp	r3, #8
 800d984:	d909      	bls.n	800d99a <RemoteConfig::Run()+0x10e>
 800d986:	4b13      	ldr	r3, [pc, #76]	; (800d9d4 <RemoteConfig::Run()+0x148>)
 800d988:	3109      	adds	r1, #9
 800d98a:	428a      	cmp	r2, r1
 800d98c:	d017      	beq.n	800d9be <RemoteConfig::Run()+0x132>
 800d98e:	f812 5b01 	ldrb.w	r5, [r2], #1
 800d992:	f813 0b01 	ldrb.w	r0, [r3], #1
 800d996:	4285      	cmp	r5, r0
 800d998:	d0f7      	beq.n	800d98a <RemoteConfig::Run()+0xfe>
 800d99a:	f642 1305 	movw	r3, #10501	; 0x2905
 800d99e:	2208      	movs	r2, #8
 800d9a0:	9300      	str	r3, [sp, #0]
 800d9a2:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800d9a6:	490c      	ldr	r1, [pc, #48]	; (800d9d8 <RemoteConfig::Run()+0x14c>)
 800d9a8:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800d9ac:	f001 fee6 	bl	800f77c <udp_send>
 800d9b0:	e7d0      	b.n	800d954 <RemoteConfig::Run()+0xc8>
 800d9b2:	2300      	movs	r3, #0
 800d9b4:	4a09      	ldr	r2, [pc, #36]	; (800d9dc <RemoteConfig::Run()+0x150>)
 800d9b6:	011b      	lsls	r3, r3, #4
 800d9b8:	4620      	mov	r0, r4
 800d9ba:	58d3      	ldr	r3, [r2, r3]
 800d9bc:	e7b3      	b.n	800d926 <RemoteConfig::Run()+0x9a>
 800d9be:	2301      	movs	r3, #1
 800d9c0:	e7f8      	b.n	800d9b4 <RemoteConfig::Run()+0x128>
 800d9c2:	bf00      	nop
 800d9c4:	200016c0 	andcs	r1, r0, r0, asr #13
 800d9c8:	08015868 	stmdaeq	r1, {r3, r5, r6, fp, ip, lr}
 800d9cc:	080156f7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, r7, r9, sl, ip, lr}
 800d9d0:	080156df 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r7, r9, sl, ip, lr}
 800d9d4:	080156e5 	stmdaeq	r1, {r0, r2, r5, r6, r7, r9, sl, ip, lr}
 800d9d8:	080156ee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, r9, sl, ip, lr}
 800d9dc:	080158f8 	stmdaeq	r1, {r3, r4, r5, r6, r7, fp, ip, lr}

0800d9e0 <RemoteConfig::HandleSetRconfig()>:
 800d9e0:	b510      	push	{r4, lr}
 800d9e2:	4604      	mov	r4, r0
 800d9e4:	4b09      	ldr	r3, [pc, #36]	; (800da0c <RemoteConfig::HandleSetRconfig()+0x2c>)
 800d9e6:	b08a      	sub	sp, #40	; 0x28
 800d9e8:	6819      	ldr	r1, [r3, #0]
 800d9ea:	a801      	add	r0, sp, #4
 800d9ec:	f000 f89c 	bl	800db28 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 800d9f0:	4b07      	ldr	r3, [pc, #28]	; (800da10 <RemoteConfig::HandleSetRconfig()+0x30>)
 800d9f2:	f8d4 25e4 	ldr.w	r2, [r4, #1508]	; 0x5e4
 800d9f6:	6819      	ldr	r1, [r3, #0]
 800d9f8:	a801      	add	r0, sp, #4
 800d9fa:	f000 f8ab 	bl	800db54 <RemoteConfigParams::Load(char const*, unsigned int)>
 800d9fe:	4621      	mov	r1, r4
 800da00:	a801      	add	r0, sp, #4
 800da02:	f000 f9c2 	bl	800dd8a <RemoteConfigParams::Set(RemoteConfig*)>
 800da06:	b00a      	add	sp, #40	; 0x28
 800da08:	bd10      	pop	{r4, pc}
 800da0a:	bf00      	nop
 800da0c:	2000271c 	andcs	r2, r0, ip, lsl r7
 800da10:	200016c0 	andcs	r1, r0, r0, asr #13

0800da14 <RemoteConfig::HandleSetNetworkTxt()>:
 800da14:	b513      	push	{r0, r1, r4, lr}
 800da16:	4604      	mov	r4, r0
 800da18:	4b06      	ldr	r3, [pc, #24]	; (800da34 <RemoteConfig::HandleSetNetworkTxt()+0x20>)
 800da1a:	a801      	add	r0, sp, #4
 800da1c:	6819      	ldr	r1, [r3, #0]
 800da1e:	f002 fe75 	bl	801070c <NetworkParams::NetworkParams(NetworkParamsStore*)>
 800da22:	4b05      	ldr	r3, [pc, #20]	; (800da38 <RemoteConfig::HandleSetNetworkTxt()+0x24>)
 800da24:	f8d4 25e4 	ldr.w	r2, [r4, #1508]	; 0x5e4
 800da28:	6819      	ldr	r1, [r3, #0]
 800da2a:	a801      	add	r0, sp, #4
 800da2c:	f002 fe8e 	bl	801074c <NetworkParams::Load(char const*, unsigned int)>
 800da30:	b002      	add	sp, #8
 800da32:	bd10      	pop	{r4, pc}
 800da34:	20002714 	andcs	r2, r0, r4, lsl r7
 800da38:	200016c0 	andcs	r1, r0, r0, asr #13

0800da3c <RemoteConfig::HandleSetE131Txt()>:
 800da3c:	b510      	push	{r4, lr}
 800da3e:	4604      	mov	r4, r0
 800da40:	4b07      	ldr	r3, [pc, #28]	; (800da60 <RemoteConfig::HandleSetE131Txt()+0x24>)
 800da42:	b08a      	sub	sp, #40	; 0x28
 800da44:	6819      	ldr	r1, [r3, #0]
 800da46:	a801      	add	r0, sp, #4
 800da48:	f7fc ffbe 	bl	800a9c8 <E131Params::E131Params(E131ParamsStore*)>
 800da4c:	4b05      	ldr	r3, [pc, #20]	; (800da64 <RemoteConfig::HandleSetE131Txt()+0x28>)
 800da4e:	f8d4 25e4 	ldr.w	r2, [r4, #1508]	; 0x5e4
 800da52:	6819      	ldr	r1, [r3, #0]
 800da54:	a801      	add	r0, sp, #4
 800da56:	f7fc ffe3 	bl	800aa20 <E131Params::Load(char const*, unsigned int)>
 800da5a:	b00a      	add	sp, #40	; 0x28
 800da5c:	bd10      	pop	{r4, pc}
 800da5e:	bf00      	nop
 800da60:	20002710 	andcs	r2, r0, r0, lsl r7
 800da64:	200016c0 	andcs	r1, r0, r0, asr #13

0800da68 <RemoteConfig::HandleSetParamsTxt()>:
 800da68:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800da6a:	4604      	mov	r4, r0
 800da6c:	4b06      	ldr	r3, [pc, #24]	; (800da88 <RemoteConfig::HandleSetParamsTxt()+0x20>)
 800da6e:	4668      	mov	r0, sp
 800da70:	6819      	ldr	r1, [r3, #0]
 800da72:	f7fe fd65 	bl	800c540 <DmxParams::DmxParams(DmxParamsStore*)>
 800da76:	4b05      	ldr	r3, [pc, #20]	; (800da8c <RemoteConfig::HandleSetParamsTxt()+0x24>)
 800da78:	4668      	mov	r0, sp
 800da7a:	f8d4 25e4 	ldr.w	r2, [r4, #1508]	; 0x5e4
 800da7e:	6819      	ldr	r1, [r3, #0]
 800da80:	f7fe fd76 	bl	800c570 <DmxParams::Load(char const*, unsigned int)>
 800da84:	b004      	add	sp, #16
 800da86:	bd10      	pop	{r4, pc}
 800da88:	2000270c 	andcs	r2, r0, ip, lsl #14
 800da8c:	200016c0 	andcs	r1, r0, r0, asr #13

0800da90 <RemoteConfig::HandleSetDisplayTxt()>:
 800da90:	b510      	push	{r4, lr}
 800da92:	4604      	mov	r4, r0
 800da94:	4b07      	ldr	r3, [pc, #28]	; (800dab4 <RemoteConfig::HandleSetDisplayTxt()+0x24>)
 800da96:	b08a      	sub	sp, #40	; 0x28
 800da98:	6819      	ldr	r1, [r3, #0]
 800da9a:	4668      	mov	r0, sp
 800da9c:	f003 fe78 	bl	8011790 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 800daa0:	4b05      	ldr	r3, [pc, #20]	; (800dab8 <RemoteConfig::HandleSetDisplayTxt()+0x28>)
 800daa2:	4668      	mov	r0, sp
 800daa4:	f8d4 25e4 	ldr.w	r2, [r4, #1508]	; 0x5e4
 800daa8:	6819      	ldr	r1, [r3, #0]
 800daaa:	f003 fe8b 	bl	80117c4 <DisplayUdfParams::Load(char const*, unsigned int)>
 800daae:	b00a      	add	sp, #40	; 0x28
 800dab0:	bd10      	pop	{r4, pc}
 800dab2:	bf00      	nop
 800dab4:	20002708 	andcs	r2, r0, r8, lsl #14
 800dab8:	200016c0 	andcs	r1, r0, r0, asr #13

0800dabc <RemoteConfig::HandleFactory()>:
 800dabc:	b538      	push	{r3, r4, r5, lr}
 800dabe:	2400      	movs	r4, #0
 800dac0:	4d04      	ldr	r5, [pc, #16]	; (800dad4 <RemoteConfig::HandleFactory()+0x18>)
 800dac2:	4621      	mov	r1, r4
 800dac4:	6828      	ldr	r0, [r5, #0]
 800dac6:	3401      	adds	r4, #1
 800dac8:	f000 ff12 	bl	800e8f0 <SpiFlashStore::ResetSetList(spiflashstore::Store)>
 800dacc:	2c1c      	cmp	r4, #28
 800dace:	d1f8      	bne.n	800dac2 <RemoteConfig::HandleFactory()+0x6>
 800dad0:	bd38      	pop	{r3, r4, r5, pc}
 800dad2:	bf00      	nop
 800dad4:	20002700 	andcs	r2, r0, r0, lsl #14

0800dad8 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>:
 800dad8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800dada:	460b      	mov	r3, r1
 800dadc:	8885      	ldrh	r5, [r0, #4]
 800dade:	88c1      	ldrh	r1, [r0, #6]
 800dae0:	42a9      	cmp	r1, r5
 800dae2:	d214      	bcs.n	800db0e <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x36>
 800dae4:	4604      	mov	r4, r0
 800dae6:	6800      	ldr	r0, [r0, #0]
 800dae8:	1a6d      	subs	r5, r5, r1
 800daea:	4408      	add	r0, r1
 800daec:	7a21      	ldrb	r1, [r4, #8]
 800daee:	b91a      	cbnz	r2, 800daf8 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x20>
 800daf0:	b919      	cbnz	r1, 800dafa <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x22>
 800daf2:	4a0a      	ldr	r2, [pc, #40]	; (800db1c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x44>)
 800daf4:	9100      	str	r1, [sp, #0]
 800daf6:	e002      	b.n	800dafe <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 800daf8:	b159      	cbz	r1, 800db12 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x3a>
 800dafa:	9200      	str	r2, [sp, #0]
 800dafc:	4a08      	ldr	r2, [pc, #32]	; (800db20 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x48>)
 800dafe:	4629      	mov	r1, r5
 800db00:	f7fb fd84 	bl	800960c <snprintf>
 800db04:	4285      	cmp	r5, r0
 800db06:	bfa2      	ittt	ge
 800db08:	88e3      	ldrhge	r3, [r4, #6]
 800db0a:	181b      	addge	r3, r3, r0
 800db0c:	80e3      	strhge	r3, [r4, #6]
 800db0e:	b003      	add	sp, #12
 800db10:	bd30      	pop	{r4, r5, pc}
 800db12:	2201      	movs	r2, #1
 800db14:	9200      	str	r2, [sp, #0]
 800db16:	4a03      	ldr	r2, [pc, #12]	; (800db24 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x4c>)
 800db18:	e7f1      	b.n	800dafe <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 800db1a:	bf00      	nop
 800db1c:	08014fa2 	stmdaeq	r1, {r1, r5, r7, r8, r9, sl, fp, lr}
 800db20:	08014f99 	stmdaeq	r1, {r0, r3, r4, r7, r8, r9, sl, fp, lr}
 800db24:	08014fa3 	stmdaeq	r1, {r0, r1, r5, r7, r8, r9, sl, fp, lr}

0800db28 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>:
 800db28:	b510      	push	{r4, lr}
 800db2a:	4604      	mov	r4, r0
 800db2c:	2220      	movs	r2, #32
 800db2e:	f840 1b04 	str.w	r1, [r0], #4
 800db32:	2100      	movs	r1, #0
 800db34:	f004 ffe6 	bl	8012b04 <memset>
 800db38:	4620      	mov	r0, r4
 800db3a:	bd10      	pop	{r4, pc}

0800db3c <RemoteConfigParams::Load()>:
 800db3c:	b508      	push	{r3, lr}
 800db3e:	2300      	movs	r3, #0
 800db40:	4601      	mov	r1, r0
 800db42:	6043      	str	r3, [r0, #4]
 800db44:	6800      	ldr	r0, [r0, #0]
 800db46:	b120      	cbz	r0, 800db52 <RemoteConfigParams::Load()+0x16>
 800db48:	6803      	ldr	r3, [r0, #0]
 800db4a:	3104      	adds	r1, #4
 800db4c:	68db      	ldr	r3, [r3, #12]
 800db4e:	4798      	blx	r3
 800db50:	2001      	movs	r0, #1
 800db52:	bd08      	pop	{r3, pc}

0800db54 <RemoteConfigParams::Load(char const*, unsigned int)>:
 800db54:	2300      	movs	r3, #0
 800db56:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800db58:	460d      	mov	r5, r1
 800db5a:	4616      	mov	r6, r2
 800db5c:	4604      	mov	r4, r0
 800db5e:	6043      	str	r3, [r0, #4]
 800db60:	4602      	mov	r2, r0
 800db62:	490a      	ldr	r1, [pc, #40]	; (800db8c <RemoteConfigParams::Load(char const*, unsigned int)+0x38>)
 800db64:	4668      	mov	r0, sp
 800db66:	f004 f965 	bl	8011e34 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800db6a:	4632      	mov	r2, r6
 800db6c:	4629      	mov	r1, r5
 800db6e:	4668      	mov	r0, sp
 800db70:	f004 f964 	bl	8011e3c <ReadConfigFile::Read(char const*, unsigned int)>
 800db74:	4621      	mov	r1, r4
 800db76:	f851 0b04 	ldr.w	r0, [r1], #4
 800db7a:	6803      	ldr	r3, [r0, #0]
 800db7c:	689b      	ldr	r3, [r3, #8]
 800db7e:	4798      	blx	r3
 800db80:	4668      	mov	r0, sp
 800db82:	f004 f95a 	bl	8011e3a <ReadConfigFile::~ReadConfigFile()>
 800db86:	b002      	add	sp, #8
 800db88:	bd70      	pop	{r4, r5, r6, pc}
 800db8a:	bf00      	nop
 800db8c:	0800dc4d 	stmdaeq	r0, {r0, r2, r3, r6, sl, fp, ip, lr, pc}

0800db90 <RemoteConfigParams::SetBool(unsigned char, unsigned int)>:
 800db90:	6843      	ldr	r3, [r0, #4]
 800db92:	b111      	cbz	r1, 800db9a <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0xa>
 800db94:	4313      	orrs	r3, r2
 800db96:	6043      	str	r3, [r0, #4]
 800db98:	4770      	bx	lr
 800db9a:	ea23 0302 	bic.w	r3, r3, r2
 800db9e:	e7fa      	b.n	800db96 <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0x6>

0800dba0 <RemoteConfigParams::callbackFunction(char const*)>:
 800dba0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800dba2:	460d      	mov	r5, r1
 800dba4:	4604      	mov	r4, r0
 800dba6:	4923      	ldr	r1, [pc, #140]	; (800dc34 <RemoteConfigParams::callbackFunction(char const*)+0x94>)
 800dba8:	4628      	mov	r0, r5
 800dbaa:	f10d 0203 	add.w	r2, sp, #3
 800dbae:	f004 fa54 	bl	801205a <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800dbb2:	b940      	cbnz	r0, 800dbc6 <RemoteConfigParams::callbackFunction(char const*)+0x26>
 800dbb4:	2201      	movs	r2, #1
 800dbb6:	4620      	mov	r0, r4
 800dbb8:	f89d 1003 	ldrb.w	r1, [sp, #3]
 800dbbc:	b003      	add	sp, #12
 800dbbe:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800dbc2:	f7ff bfe5 	b.w	800db90 <RemoteConfigParams::SetBool(unsigned char, unsigned int)>
 800dbc6:	4628      	mov	r0, r5
 800dbc8:	491b      	ldr	r1, [pc, #108]	; (800dc38 <RemoteConfigParams::callbackFunction(char const*)+0x98>)
 800dbca:	f10d 0203 	add.w	r2, sp, #3
 800dbce:	f004 fa44 	bl	801205a <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800dbd2:	b908      	cbnz	r0, 800dbd8 <RemoteConfigParams::callbackFunction(char const*)+0x38>
 800dbd4:	2202      	movs	r2, #2
 800dbd6:	e7ee      	b.n	800dbb6 <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800dbd8:	4628      	mov	r0, r5
 800dbda:	4918      	ldr	r1, [pc, #96]	; (800dc3c <RemoteConfigParams::callbackFunction(char const*)+0x9c>)
 800dbdc:	f10d 0203 	add.w	r2, sp, #3
 800dbe0:	f004 fa3b 	bl	801205a <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800dbe4:	b908      	cbnz	r0, 800dbea <RemoteConfigParams::callbackFunction(char const*)+0x4a>
 800dbe6:	2204      	movs	r2, #4
 800dbe8:	e7e5      	b.n	800dbb6 <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800dbea:	4628      	mov	r0, r5
 800dbec:	4914      	ldr	r1, [pc, #80]	; (800dc40 <RemoteConfigParams::callbackFunction(char const*)+0xa0>)
 800dbee:	f10d 0203 	add.w	r2, sp, #3
 800dbf2:	f004 fa32 	bl	801205a <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800dbf6:	b908      	cbnz	r0, 800dbfc <RemoteConfigParams::callbackFunction(char const*)+0x5c>
 800dbf8:	2208      	movs	r2, #8
 800dbfa:	e7dc      	b.n	800dbb6 <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800dbfc:	4628      	mov	r0, r5
 800dbfe:	4911      	ldr	r1, [pc, #68]	; (800dc44 <RemoteConfigParams::callbackFunction(char const*)+0xa4>)
 800dc00:	f10d 0203 	add.w	r2, sp, #3
 800dc04:	f004 fa29 	bl	801205a <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800dc08:	b908      	cbnz	r0, 800dc0e <RemoteConfigParams::callbackFunction(char const*)+0x6e>
 800dc0a:	2220      	movs	r2, #32
 800dc0c:	e7d3      	b.n	800dbb6 <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800dc0e:	2317      	movs	r3, #23
 800dc10:	4628      	mov	r0, r5
 800dc12:	9301      	str	r3, [sp, #4]
 800dc14:	490c      	ldr	r1, [pc, #48]	; (800dc48 <RemoteConfigParams::callbackFunction(char const*)+0xa8>)
 800dc16:	ab01      	add	r3, sp, #4
 800dc18:	f104 020c 	add.w	r2, r4, #12
 800dc1c:	f004 f942 	bl	8011ea4 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800dc20:	b930      	cbnz	r0, 800dc30 <RemoteConfigParams::callbackFunction(char const*)+0x90>
 800dc22:	9b01      	ldr	r3, [sp, #4]
 800dc24:	4423      	add	r3, r4
 800dc26:	7318      	strb	r0, [r3, #12]
 800dc28:	6863      	ldr	r3, [r4, #4]
 800dc2a:	f043 0310 	orr.w	r3, r3, #16
 800dc2e:	6063      	str	r3, [r4, #4]
 800dc30:	b003      	add	sp, #12
 800dc32:	bd30      	pop	{r4, r5, pc}
 800dc34:	08015cd8 	stmdaeq	r1, {r3, r4, r6, r7, sl, fp, ip, lr}
 800dc38:	08015cf9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, sl, fp, ip, lr}
 800dc3c:	08015d07 	stmdaeq	r1, {r0, r1, r2, r8, sl, fp, ip, lr}
 800dc40:	08015d15 	stmdaeq	r1, {r0, r2, r4, r8, sl, fp, ip, lr}
 800dc44:	08015d23 	stmdaeq	r1, {r0, r1, r5, r8, sl, fp, ip, lr}
 800dc48:	08015cec 	stmdaeq	r1, {r2, r3, r5, r6, r7, sl, fp, ip, lr}

0800dc4c <RemoteConfigParams::staticCallbackFunction(void*, char const*)>:
 800dc4c:	f7ff bfa8 	b.w	800dba0 <RemoteConfigParams::callbackFunction(char const*)>

0800dc50 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>:
 800dc50:	b570      	push	{r4, r5, r6, lr}
 800dc52:	4604      	mov	r4, r0
 800dc54:	4615      	mov	r5, r2
 800dc56:	461e      	mov	r6, r3
 800dc58:	b086      	sub	sp, #24
 800dc5a:	3004      	adds	r0, #4
 800dc5c:	2900      	cmp	r1, #0
 800dc5e:	d041      	beq.n	800dce4 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x94>
 800dc60:	2220      	movs	r2, #32
 800dc62:	f004 ff38 	bl	8012ad6 <memmove>
 800dc66:	4633      	mov	r3, r6
 800dc68:	462a      	mov	r2, r5
 800dc6a:	4937      	ldr	r1, [pc, #220]	; (800dd48 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xf8>)
 800dc6c:	a803      	add	r0, sp, #12
 800dc6e:	f004 f841 	bl	8011cf4 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800dc72:	6862      	ldr	r2, [r4, #4]
 800dc74:	4935      	ldr	r1, [pc, #212]	; (800dd4c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xfc>)
 800dc76:	f002 0201 	and.w	r2, r2, #1
 800dc7a:	a803      	add	r0, sp, #12
 800dc7c:	f7ff ff2c 	bl	800dad8 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800dc80:	6862      	ldr	r2, [r4, #4]
 800dc82:	4933      	ldr	r1, [pc, #204]	; (800dd50 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x100>)
 800dc84:	f3c2 0240 	ubfx	r2, r2, #1, #1
 800dc88:	a803      	add	r0, sp, #12
 800dc8a:	f7ff ff25 	bl	800dad8 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800dc8e:	6862      	ldr	r2, [r4, #4]
 800dc90:	4930      	ldr	r1, [pc, #192]	; (800dd54 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x104>)
 800dc92:	f3c2 0280 	ubfx	r2, r2, #2, #1
 800dc96:	a803      	add	r0, sp, #12
 800dc98:	f7ff ff1e 	bl	800dad8 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800dc9c:	6862      	ldr	r2, [r4, #4]
 800dc9e:	492e      	ldr	r1, [pc, #184]	; (800dd58 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x108>)
 800dca0:	f3c2 02c0 	ubfx	r2, r2, #3, #1
 800dca4:	a803      	add	r0, sp, #12
 800dca6:	f7ff ff17 	bl	800dad8 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800dcaa:	6862      	ldr	r2, [r4, #4]
 800dcac:	492b      	ldr	r1, [pc, #172]	; (800dd5c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x10c>)
 800dcae:	f3c2 1240 	ubfx	r2, r2, #5, #1
 800dcb2:	a803      	add	r0, sp, #12
 800dcb4:	f7ff ff10 	bl	800dad8 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800dcb8:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800dcbc:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800dcc0:	6862      	ldr	r2, [r4, #4]
 800dcc2:	42ab      	cmp	r3, r5
 800dcc4:	d223      	bcs.n	800dd0e <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xbe>
 800dcc6:	9803      	ldr	r0, [sp, #12]
 800dcc8:	06d2      	lsls	r2, r2, #27
 800dcca:	4418      	add	r0, r3
 800dccc:	eba5 0503 	sub.w	r5, r5, r3
 800dcd0:	f104 040c 	add.w	r4, r4, #12
 800dcd4:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800dcd8:	d40b      	bmi.n	800dcf2 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa2>
 800dcda:	b95b      	cbnz	r3, 800dcf4 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa4>
 800dcdc:	4b20      	ldr	r3, [pc, #128]	; (800dd60 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 800dcde:	4a21      	ldr	r2, [pc, #132]	; (800dd64 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x114>)
 800dce0:	9400      	str	r4, [sp, #0]
 800dce2:	e00a      	b.n	800dcfa <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xaa>
 800dce4:	6823      	ldr	r3, [r4, #0]
 800dce6:	4601      	mov	r1, r0
 800dce8:	681a      	ldr	r2, [r3, #0]
 800dcea:	4618      	mov	r0, r3
 800dcec:	68d2      	ldr	r2, [r2, #12]
 800dcee:	4790      	blx	r2
 800dcf0:	e7b9      	b.n	800dc66 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x16>
 800dcf2:	b32b      	cbz	r3, 800dd40 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xf0>
 800dcf4:	4b1a      	ldr	r3, [pc, #104]	; (800dd60 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 800dcf6:	4a1c      	ldr	r2, [pc, #112]	; (800dd68 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x118>)
 800dcf8:	9400      	str	r4, [sp, #0]
 800dcfa:	4629      	mov	r1, r5
 800dcfc:	f7fb fc86 	bl	800960c <snprintf>
 800dd00:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800dd04:	4285      	cmp	r5, r0
 800dd06:	bfa4      	itt	ge
 800dd08:	181b      	addge	r3, r3, r0
 800dd0a:	f8ad 3012 	strhge.w	r3, [sp, #18]
 800dd0e:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800dd12:	b17b      	cbz	r3, 800dd34 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xe4>
 800dd14:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800dd18:	9b03      	ldr	r3, [sp, #12]
 800dd1a:	4413      	add	r3, r2
 800dd1c:	227d      	movs	r2, #125	; 0x7d
 800dd1e:	f803 2c01 	strb.w	r2, [r3, #-1]
 800dd22:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800dd26:	9903      	ldr	r1, [sp, #12]
 800dd28:	54ca      	strb	r2, [r1, r3]
 800dd2a:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800dd2e:	3301      	adds	r3, #1
 800dd30:	f8ad 3012 	strh.w	r3, [sp, #18]
 800dd34:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800dd38:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800dd3a:	601a      	str	r2, [r3, #0]
 800dd3c:	b006      	add	sp, #24
 800dd3e:	bd70      	pop	{r4, r5, r6, pc}
 800dd40:	4b07      	ldr	r3, [pc, #28]	; (800dd60 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 800dd42:	4a0a      	ldr	r2, [pc, #40]	; (800dd6c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x11c>)
 800dd44:	9400      	str	r4, [sp, #0]
 800dd46:	e7d8      	b.n	800dcfa <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xaa>
 800dd48:	08015ce0 	stmdaeq	r1, {r5, r6, r7, sl, fp, ip, lr}
 800dd4c:	08015cd8 	stmdaeq	r1, {r3, r4, r6, r7, sl, fp, ip, lr}
 800dd50:	08015cf9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, sl, fp, ip, lr}
 800dd54:	08015d07 	stmdaeq	r1, {r0, r1, r2, r8, sl, fp, ip, lr}
 800dd58:	08015d15 	stmdaeq	r1, {r0, r2, r4, r8, sl, fp, ip, lr}
 800dd5c:	08015d23 	stmdaeq	r1, {r0, r1, r5, r8, sl, fp, ip, lr}
 800dd60:	08015cec 	stmdaeq	r1, {r2, r3, r5, r6, r7, sl, fp, ip, lr}
 800dd64:	08014f91 	stmdaeq	r1, {r0, r4, r7, r8, r9, sl, fp, lr}
 800dd68:	08014f86 	stmdaeq	r1, {r1, r2, r7, r8, r9, sl, fp, lr}
 800dd6c:	08014f92 	stmdaeq	r1, {r1, r4, r7, r8, r9, sl, fp, lr}

0800dd70 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>:
 800dd70:	b513      	push	{r0, r1, r4, lr}
 800dd72:	6804      	ldr	r4, [r0, #0]
 800dd74:	b914      	cbnz	r4, 800dd7c <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800dd76:	601c      	str	r4, [r3, #0]
 800dd78:	b002      	add	sp, #8
 800dd7a:	bd10      	pop	{r4, pc}
 800dd7c:	9300      	str	r3, [sp, #0]
 800dd7e:	4613      	mov	r3, r2
 800dd80:	460a      	mov	r2, r1
 800dd82:	2100      	movs	r1, #0
 800dd84:	f7ff ff64 	bl	800dc50 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>
 800dd88:	e7f6      	b.n	800dd78 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800dd8a <RemoteConfigParams::Set(RemoteConfig*)>:
 800dd8a:	b538      	push	{r3, r4, r5, lr}
 800dd8c:	460c      	mov	r4, r1
 800dd8e:	4605      	mov	r5, r0
 800dd90:	6841      	ldr	r1, [r0, #4]
 800dd92:	4620      	mov	r0, r4
 800dd94:	f001 0101 	and.w	r1, r1, #1
 800dd98:	f7ff fc24 	bl	800d5e4 <RemoteConfig::SetDisable(bool)>
 800dd9c:	686b      	ldr	r3, [r5, #4]
 800dd9e:	f3c3 0240 	ubfx	r2, r3, #1, #1
 800dda2:	f884 25d5 	strb.w	r2, [r4, #1493]	; 0x5d5
 800dda6:	f3c3 0280 	ubfx	r2, r3, #2, #1
 800ddaa:	f884 25d6 	strb.w	r2, [r4, #1494]	; 0x5d6
 800ddae:	f3c3 02c0 	ubfx	r2, r3, #3, #1
 800ddb2:	f884 25d7 	strb.w	r2, [r4, #1495]	; 0x5d7
 800ddb6:	f3c3 1240 	ubfx	r2, r3, #5, #1
 800ddba:	06db      	lsls	r3, r3, #27
 800ddbc:	f884 25d8 	strb.w	r2, [r4, #1496]	; 0x5d8
 800ddc0:	d506      	bpl.n	800ddd0 <RemoteConfigParams::Set(RemoteConfig*)+0x46>
 800ddc2:	4620      	mov	r0, r4
 800ddc4:	f105 010c 	add.w	r1, r5, #12
 800ddc8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800ddcc:	f7ff bc2e 	b.w	800d62c <RemoteConfig::SetDisplayName(char const*)>
 800ddd0:	bd38      	pop	{r3, r4, r5, pc}

0800ddd2 <RemoteConfigParams::Dump()>:
 800ddd2:	4770      	bx	lr

0800ddd4 <RemoteConfig::HandleReboot()>:
 800ddd4:	f890 35d6 	ldrb.w	r3, [r0, #1494]	; 0x5d6
 800ddd8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ddda:	2b00      	cmp	r3, #0
 800dddc:	d03d      	beq.n	800de5a <RemoteConfig::HandleReboot()+0x86>
 800ddde:	2301      	movs	r3, #1
 800dde0:	4c1f      	ldr	r4, [pc, #124]	; (800de60 <RemoteConfig::HandleReboot()+0x8c>)
 800dde2:	f880 35d9 	strb.w	r3, [r0, #1497]	; 0x5d9
 800dde6:	6825      	ldr	r5, [r4, #0]
 800dde8:	69a8      	ldr	r0, [r5, #24]
 800ddea:	b138      	cbz	r0, 800ddfc <RemoteConfig::HandleReboot()+0x28>
 800ddec:	2100      	movs	r1, #0
 800ddee:	6803      	ldr	r3, [r0, #0]
 800ddf0:	7429      	strb	r1, [r5, #16]
 800ddf2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ddf4:	4798      	blx	r3
 800ddf6:	4b1b      	ldr	r3, [pc, #108]	; (800de64 <RemoteConfig::HandleReboot()+0x90>)
 800ddf8:	681b      	ldr	r3, [r3, #0]
 800ddfa:	606b      	str	r3, [r5, #4]
 800ddfc:	4d1a      	ldr	r5, [pc, #104]	; (800de68 <RemoteConfig::HandleReboot()+0x94>)
 800ddfe:	6828      	ldr	r0, [r5, #0]
 800de00:	f000 fdf2 	bl	800e9e8 <SpiFlashStore::Flash()>
 800de04:	2800      	cmp	r0, #0
 800de06:	d1fa      	bne.n	800ddfe <RemoteConfig::HandleReboot()+0x2a>
 800de08:	4b18      	ldr	r3, [pc, #96]	; (800de6c <RemoteConfig::HandleReboot()+0x98>)
 800de0a:	6818      	ldr	r0, [r3, #0]
 800de0c:	f002 f974 	bl	80100f8 <Network::Shutdown()>
 800de10:	4817      	ldr	r0, [pc, #92]	; (800de70 <RemoteConfig::HandleReboot()+0x9c>)
 800de12:	f7fb fbd3 	bl	80095bc <printf>
 800de16:	6823      	ldr	r3, [r4, #0]
 800de18:	6998      	ldr	r0, [r3, #24]
 800de1a:	b110      	cbz	r0, 800de22 <RemoteConfig::HandleReboot()+0x4e>
 800de1c:	6803      	ldr	r3, [r0, #0]
 800de1e:	68db      	ldr	r3, [r3, #12]
 800de20:	4798      	blx	r3
 800de22:	6824      	ldr	r4, [r4, #0]
 800de24:	4913      	ldr	r1, [pc, #76]	; (800de74 <RemoteConfig::HandleReboot()+0xa0>)
 800de26:	4620      	mov	r0, r4
 800de28:	f7fa fca4 	bl	8008774 <Display::TextStatus(char const*)>
 800de2c:	7c63      	ldrb	r3, [r4, #17]
 800de2e:	b183      	cbz	r3, 800de52 <RemoteConfig::HandleReboot()+0x7e>
 800de30:	f64b 7312 	movw	r3, #48914	; 0xbf12
 800de34:	f8ad 3004 	strh.w	r3, [sp, #4]
 800de38:	23bf      	movs	r3, #191	; 0xbf
 800de3a:	7a20      	ldrb	r0, [r4, #8]
 800de3c:	f88d 3006 	strb.w	r3, [sp, #6]
 800de40:	f005 ff40 	bl	8013cc4 <gd32_i2c_set_address(unsigned char)>
 800de44:	68e0      	ldr	r0, [r4, #12]
 800de46:	f005 ff35 	bl	8013cb4 <gd32_i2c_set_baudrate(unsigned int)>
 800de4a:	2103      	movs	r1, #3
 800de4c:	a801      	add	r0, sp, #4
 800de4e:	f005 ff3f 	bl	8013cd0 <gd32_i2c_write(char const*, unsigned int)>
 800de52:	4b09      	ldr	r3, [pc, #36]	; (800de78 <RemoteConfig::HandleReboot()+0xa4>)
 800de54:	6818      	ldr	r0, [r3, #0]
 800de56:	f004 fd3d 	bl	80128d4 <Hardware::Reboot()>
 800de5a:	b003      	add	sp, #12
 800de5c:	bd30      	pop	{r4, r5, pc}
 800de5e:	bf00      	nop
 800de60:	2000a640 	andcs	sl, r0, r0, asr #12
 800de64:	2000a744 	andcs	sl, r0, r4, asr #14
 800de68:	20002700 	andcs	r2, r0, r0, lsl #14
 800de6c:	2000a008 	andcs	sl, r0, r8
 800de70:	08015918 	stmdaeq	r1, {r3, r4, r8, fp, ip, lr}
 800de74:	08015927 	stmdaeq	r1, {r0, r1, r2, r5, r8, fp, ip, lr}
 800de78:	2000a730 	andcs	sl, r0, r0, lsr r7

0800de7c <RemoteConfig::GetIndex(void const*, unsigned int&)>:
 800de7c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800de80:	2000      	movs	r0, #0
 800de82:	4d12      	ldr	r5, [pc, #72]	; (800decc <RemoteConfig::GetIndex(void const*, unsigned int&)+0x50>)
 800de84:	f10d 0c04 	add.w	ip, sp, #4
 800de88:	6814      	ldr	r4, [r2, #0]
 800de8a:	7d2b      	ldrb	r3, [r5, #20]
 800de8c:	692e      	ldr	r6, [r5, #16]
 800de8e:	42a3      	cmp	r3, r4
 800de90:	bf34      	ite	cc
 800de92:	4664      	movcc	r4, ip
 800de94:	4614      	movcs	r4, r2
 800de96:	9301      	str	r3, [sp, #4]
 800de98:	6827      	ldr	r7, [r4, #0]
 800de9a:	460c      	mov	r4, r1
 800de9c:	3e01      	subs	r6, #1
 800de9e:	440f      	add	r7, r1
 800dea0:	42bc      	cmp	r4, r7
 800dea2:	d101      	bne.n	800dea8 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x2c>
 800dea4:	6013      	str	r3, [r2, #0]
 800dea6:	e00c      	b.n	800dec2 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x46>
 800dea8:	f894 8000 	ldrb.w	r8, [r4]
 800deac:	f816 ef01 	ldrb.w	lr, [r6, #1]!
 800deb0:	45f0      	cmp	r8, lr
 800deb2:	d009      	beq.n	800dec8 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x4c>
 800deb4:	3001      	adds	r0, #1
 800deb6:	2805      	cmp	r0, #5
 800deb8:	f105 051c 	add.w	r5, r5, #28
 800debc:	d1e4      	bne.n	800de88 <RemoteConfig::GetIndex(void const*, unsigned int&)+0xc>
 800debe:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800dec2:	b002      	add	sp, #8
 800dec4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800dec8:	3401      	adds	r4, #1
 800deca:	e7e9      	b.n	800dea0 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x24>
 800decc:	08015970 	stmdaeq	r1, {r4, r5, r6, r8, fp, ip, lr}

0800ded0 <RemoteConfig::PlatformHandleTftpSet()>:
 800ded0:	f890 15ec 	ldrb.w	r1, [r0, #1516]	; 0x5ec
 800ded4:	b109      	cbz	r1, 800deda <RemoteConfig::PlatformHandleTftpSet()+0xa>
 800ded6:	f24a 51a5 	movw	r1, #42405	; 0xa5a5
 800deda:	2002      	movs	r0, #2
 800dedc:	f005 b812 	b.w	8012f04 <bkp_data_write>

0800dee0 <RemoteConfig::PlatformHandleTftpGet()>:
 800dee0:	b510      	push	{r4, lr}
 800dee2:	4604      	mov	r4, r0
 800dee4:	2002      	movs	r0, #2
 800dee6:	f005 f823 	bl	8012f30 <bkp_data_read>
 800deea:	f24a 53a5 	movw	r3, #42405	; 0xa5a5
 800deee:	1ac3      	subs	r3, r0, r3
 800def0:	4258      	negs	r0, r3
 800def2:	4158      	adcs	r0, r3
 800def4:	f884 05ec 	strb.w	r0, [r4, #1516]	; 0x5ec
 800def8:	bd10      	pop	{r4, pc}

0800defa <strcmp>:
 800defa:	1e43      	subs	r3, r0, #1
 800defc:	3901      	subs	r1, #1
 800defe:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800df02:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800df06:	4290      	cmp	r0, r2
 800df08:	d001      	beq.n	800df0e <strcmp+0x14>
 800df0a:	1a80      	subs	r0, r0, r2
 800df0c:	e001      	b.n	800df12 <strcmp+0x18>
 800df0e:	2800      	cmp	r0, #0
 800df10:	d1f5      	bne.n	800defe <strcmp+0x4>
 800df12:	4770      	bx	lr

0800df14 <strcasecmp>:
 800df14:	b530      	push	{r4, r5, lr}
 800df16:	1e42      	subs	r2, r0, #1
 800df18:	3901      	subs	r1, #1
 800df1a:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800df1e:	4604      	mov	r4, r0
 800df20:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 800df24:	2b19      	cmp	r3, #25
 800df26:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800df2a:	bf98      	it	ls
 800df2c:	f100 0420 	addls.w	r4, r0, #32
 800df30:	f1a3 0541 	sub.w	r5, r3, #65	; 0x41
 800df34:	2d19      	cmp	r5, #25
 800df36:	bf98      	it	ls
 800df38:	3320      	addls	r3, #32
 800df3a:	42a3      	cmp	r3, r4
 800df3c:	d001      	beq.n	800df42 <strcasecmp+0x2e>
 800df3e:	1ae0      	subs	r0, r4, r3
 800df40:	e001      	b.n	800df46 <strcasecmp+0x32>
 800df42:	2800      	cmp	r0, #0
 800df44:	d1e9      	bne.n	800df1a <strcasecmp+0x6>
 800df46:	bd30      	pop	{r4, r5, pc}

0800df48 <PropertiesConfig::EnableJSON(bool)>:
 800df48:	4a04      	ldr	r2, [pc, #16]	; (800df5c <PropertiesConfig::EnableJSON(bool)+0x14>)
 800df4a:	7813      	ldrb	r3, [r2, #0]
 800df4c:	b118      	cbz	r0, 800df56 <PropertiesConfig::EnableJSON(bool)+0xe>
 800df4e:	f043 0301 	orr.w	r3, r3, #1
 800df52:	7013      	strb	r3, [r2, #0]
 800df54:	4770      	bx	lr
 800df56:	f003 03fe 	and.w	r3, r3, #254	; 0xfe
 800df5a:	e7fa      	b.n	800df52 <PropertiesConfig::EnableJSON(bool)+0xa>
 800df5c:	2000a63c 	andcs	sl, r0, ip, lsr r6

0800df60 <HttpDaemon::HttpDaemon()>:
 800df60:	4a0a      	ldr	r2, [pc, #40]	; (800df8c <HttpDaemon::HttpDaemon()+0x2c>)
 800df62:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800df66:	6002      	str	r2, [r0, #0]
 800df68:	2200      	movs	r2, #0
 800df6a:	f44f 7c02 	mov.w	ip, #520	; 0x208
 800df6e:	e9c0 1204 	strd	r1, r2, [r0, #16]
 800df72:	2102      	movs	r1, #2
 800df74:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800df78:	e9c0 c106 	strd	ip, r1, [r0, #24]
 800df7c:	60c2      	str	r2, [r0, #12]
 800df7e:	8402      	strh	r2, [r0, #32]
 800df80:	f8a0 25c2 	strh.w	r2, [r0, #1474]	; 0x5c2
 800df84:	f8c0 25c4 	str.w	r2, [r0, #1476]	; 0x5c4
 800df88:	4770      	bx	lr
 800df8a:	bf00      	nop
 800df8c:	08015c58 	stmdaeq	r1, {r3, r4, r6, sl, fp, ip, lr}

0800df90 <HttpDaemon::Start()>:
 800df90:	4b04      	ldr	r3, [pc, #16]	; (800dfa4 <HttpDaemon::Start()+0x14>)
 800df92:	b510      	push	{r4, lr}
 800df94:	2150      	movs	r1, #80	; 0x50
 800df96:	4604      	mov	r4, r0
 800df98:	6818      	ldr	r0, [r3, #0]
 800df9a:	f002 fbab 	bl	80106f4 <Network::TcpBegin(unsigned short)>
 800df9e:	6120      	str	r0, [r4, #16]
 800dfa0:	bd10      	pop	{r4, pc}
 800dfa2:	bf00      	nop
 800dfa4:	2000a008 	andcs	sl, r0, r8

0800dfa8 <HttpDaemon::ParseMethod(char*)>:
 800dfa8:	b538      	push	{r3, r4, r5, lr}
 800dfaa:	4604      	mov	r4, r0
 800dfac:	4608      	mov	r0, r1
 800dfae:	491a      	ldr	r1, [pc, #104]	; (800e018 <HttpDaemon::ParseMethod(char*)+0x70>)
 800dfb0:	f004 fdd2 	bl	8012b58 <strtok>
 800dfb4:	4605      	mov	r5, r0
 800dfb6:	b360      	cbz	r0, 800e012 <HttpDaemon::ParseMethod(char*)+0x6a>
 800dfb8:	4918      	ldr	r1, [pc, #96]	; (800e01c <HttpDaemon::ParseMethod(char*)+0x74>)
 800dfba:	f7ff ff9e 	bl	800defa <strcmp>
 800dfbe:	b128      	cbz	r0, 800dfcc <HttpDaemon::ParseMethod(char*)+0x24>
 800dfc0:	4628      	mov	r0, r5
 800dfc2:	4917      	ldr	r1, [pc, #92]	; (800e020 <HttpDaemon::ParseMethod(char*)+0x78>)
 800dfc4:	f7ff ff99 	bl	800defa <strcmp>
 800dfc8:	bb18      	cbnz	r0, 800e012 <HttpDaemon::ParseMethod(char*)+0x6a>
 800dfca:	2001      	movs	r0, #1
 800dfcc:	61e0      	str	r0, [r4, #28]
 800dfce:	4912      	ldr	r1, [pc, #72]	; (800e018 <HttpDaemon::ParseMethod(char*)+0x70>)
 800dfd0:	2000      	movs	r0, #0
 800dfd2:	f004 fdc1 	bl	8012b58 <strtok>
 800dfd6:	b910      	cbnz	r0, 800dfde <HttpDaemon::ParseMethod(char*)+0x36>
 800dfd8:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800dfdc:	bd38      	pop	{r3, r4, r5, pc}
 800dfde:	6060      	str	r0, [r4, #4]
 800dfe0:	4910      	ldr	r1, [pc, #64]	; (800e024 <HttpDaemon::ParseMethod(char*)+0x7c>)
 800dfe2:	2000      	movs	r0, #0
 800dfe4:	f004 fdb8 	bl	8012b58 <strtok>
 800dfe8:	2800      	cmp	r0, #0
 800dfea:	d0f5      	beq.n	800dfd8 <HttpDaemon::ParseMethod(char*)+0x30>
 800dfec:	490e      	ldr	r1, [pc, #56]	; (800e028 <HttpDaemon::ParseMethod(char*)+0x80>)
 800dfee:	f7ff ff84 	bl	800defa <strcmp>
 800dff2:	2800      	cmp	r0, #0
 800dff4:	d1f0      	bne.n	800dfd8 <HttpDaemon::ParseMethod(char*)+0x30>
 800dff6:	490d      	ldr	r1, [pc, #52]	; (800e02c <HttpDaemon::ParseMethod(char*)+0x84>)
 800dff8:	f004 fdae 	bl	8012b58 <strtok>
 800dffc:	2800      	cmp	r0, #0
 800dffe:	d0eb      	beq.n	800dfd8 <HttpDaemon::ParseMethod(char*)+0x30>
 800e000:	490b      	ldr	r1, [pc, #44]	; (800e030 <HttpDaemon::ParseMethod(char*)+0x88>)
 800e002:	f7ff ff7a 	bl	800defa <strcmp>
 800e006:	2800      	cmp	r0, #0
 800e008:	f240 10f9 	movw	r0, #505	; 0x1f9
 800e00c:	bf08      	it	eq
 800e00e:	20c8      	moveq	r0, #200	; 0xc8
 800e010:	e7e4      	b.n	800dfdc <HttpDaemon::ParseMethod(char*)+0x34>
 800e012:	f240 10f5 	movw	r0, #501	; 0x1f5
 800e016:	e7e1      	b.n	800dfdc <HttpDaemon::ParseMethod(char*)+0x34>
 800e018:	080159fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r8, fp, ip, lr}
 800e01c:	080159fe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r7, r8, fp, ip, lr}
 800e020:	08015a02 	stmdaeq	r1, {r1, r9, fp, ip, lr}
 800e024:	08015a6c 	stmdaeq	r1, {r2, r3, r5, r6, r9, fp, ip, lr}
 800e028:	08015a07 	stmdaeq	r1, {r0, r1, r2, r9, fp, ip, lr}
 800e02c:	08015a0c 	stmdaeq	r1, {r2, r3, r9, fp, ip, lr}
 800e030:	08015a0f 	stmdaeq	r1, {r0, r1, r2, r3, r9, fp, ip, lr}

0800e034 <HttpDaemon::ParseHeaderField(char*)>:
 800e034:	b538      	push	{r3, r4, r5, lr}
 800e036:	4605      	mov	r5, r0
 800e038:	4608      	mov	r0, r1
 800e03a:	491d      	ldr	r1, [pc, #116]	; (800e0b0 <HttpDaemon::ParseHeaderField(char*)+0x7c>)
 800e03c:	f004 fd8c 	bl	8012b58 <strtok>
 800e040:	4604      	mov	r4, r0
 800e042:	b910      	cbnz	r0, 800e04a <HttpDaemon::ParseHeaderField(char*)+0x16>
 800e044:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800e048:	bd38      	pop	{r3, r4, r5, pc}
 800e04a:	491a      	ldr	r1, [pc, #104]	; (800e0b4 <HttpDaemon::ParseHeaderField(char*)+0x80>)
 800e04c:	f7ff ff62 	bl	800df14 <strcasecmp>
 800e050:	b970      	cbnz	r0, 800e070 <HttpDaemon::ParseHeaderField(char*)+0x3c>
 800e052:	4919      	ldr	r1, [pc, #100]	; (800e0b8 <HttpDaemon::ParseHeaderField(char*)+0x84>)
 800e054:	f004 fd80 	bl	8012b58 <strtok>
 800e058:	2800      	cmp	r0, #0
 800e05a:	d0f3      	beq.n	800e044 <HttpDaemon::ParseHeaderField(char*)+0x10>
 800e05c:	4917      	ldr	r1, [pc, #92]	; (800e0bc <HttpDaemon::ParseHeaderField(char*)+0x88>)
 800e05e:	f7ff ff4c 	bl	800defa <strcmp>
 800e062:	b108      	cbz	r0, 800e068 <HttpDaemon::ParseHeaderField(char*)+0x34>
 800e064:	20c8      	movs	r0, #200	; 0xc8
 800e066:	e7ef      	b.n	800e048 <HttpDaemon::ParseHeaderField(char*)+0x14>
 800e068:	2301      	movs	r3, #1
 800e06a:	f885 3020 	strb.w	r3, [r5, #32]
 800e06e:	e7f9      	b.n	800e064 <HttpDaemon::ParseHeaderField(char*)+0x30>
 800e070:	4620      	mov	r0, r4
 800e072:	4913      	ldr	r1, [pc, #76]	; (800e0c0 <HttpDaemon::ParseHeaderField(char*)+0x8c>)
 800e074:	f7ff ff4e 	bl	800df14 <strcasecmp>
 800e078:	4604      	mov	r4, r0
 800e07a:	2800      	cmp	r0, #0
 800e07c:	d1f2      	bne.n	800e064 <HttpDaemon::ParseHeaderField(char*)+0x30>
 800e07e:	4911      	ldr	r1, [pc, #68]	; (800e0c4 <HttpDaemon::ParseHeaderField(char*)+0x90>)
 800e080:	f004 fd6a 	bl	8012b58 <strtok>
 800e084:	2800      	cmp	r0, #0
 800e086:	d0dd      	beq.n	800e044 <HttpDaemon::ParseHeaderField(char*)+0x10>
 800e088:	1e42      	subs	r2, r0, #1
 800e08a:	4623      	mov	r3, r4
 800e08c:	200a      	movs	r0, #10
 800e08e:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800e092:	b911      	cbnz	r1, 800e09a <HttpDaemon::ParseHeaderField(char*)+0x66>
 800e094:	f8a5 35c6 	strh.w	r3, [r5, #1478]	; 0x5c6
 800e098:	e7e4      	b.n	800e064 <HttpDaemon::ParseHeaderField(char*)+0x30>
 800e09a:	3930      	subs	r1, #48	; 0x30
 800e09c:	2909      	cmp	r1, #9
 800e09e:	d8d1      	bhi.n	800e044 <HttpDaemon::ParseHeaderField(char*)+0x10>
 800e0a0:	fb00 1303 	mla	r3, r0, r3, r1
 800e0a4:	f5b3 6fb4 	cmp.w	r3, #1440	; 0x5a0
 800e0a8:	d9f1      	bls.n	800e08e <HttpDaemon::ParseHeaderField(char*)+0x5a>
 800e0aa:	f240 109d 	movw	r0, #413	; 0x19d
 800e0ae:	e7cb      	b.n	800e048 <HttpDaemon::ParseHeaderField(char*)+0x14>
 800e0b0:	08015a13 	stmdaeq	r1, {r0, r1, r4, r9, fp, ip, lr}
 800e0b4:	08015a15 	stmdaeq	r1, {r0, r2, r4, r9, fp, ip, lr}
 800e0b8:	08015a22 	stmdaeq	r1, {r1, r5, r9, fp, ip, lr}
 800e0bc:	08015a25 	stmdaeq	r1, {r0, r2, r5, r9, fp, ip, lr}
 800e0c0:	08015a36 	stmdaeq	r1, {r1, r2, r4, r5, r9, fp, ip, lr}
 800e0c4:	080159fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r8, fp, ip, lr}

0800e0c8 <HttpDaemon::ParseRequest()>:
 800e0c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e0ca:	2400      	movs	r4, #0
 800e0cc:	4605      	mov	r5, r0
 800e0ce:	4622      	mov	r2, r4
 800e0d0:	4626      	mov	r6, r4
 800e0d2:	68c1      	ldr	r1, [r0, #12]
 800e0d4:	f880 4020 	strb.w	r4, [r0, #32]
 800e0d8:	f8c0 45c4 	str.w	r4, [r0, #1476]	; 0x5c4
 800e0dc:	8aab      	ldrh	r3, [r5, #20]
 800e0de:	42a3      	cmp	r3, r4
 800e0e0:	d91e      	bls.n	800e120 <HttpDaemon::ParseRequest()+0x58>
 800e0e2:	68eb      	ldr	r3, [r5, #12]
 800e0e4:	5d18      	ldrb	r0, [r3, r4]
 800e0e6:	280a      	cmp	r0, #10
 800e0e8:	d10e      	bne.n	800e108 <HttpDaemon::ParseRequest()+0x40>
 800e0ea:	4423      	add	r3, r4
 800e0ec:	f803 6c01 	strb.w	r6, [r3, #-1]
 800e0f0:	1c57      	adds	r7, r2, #1
 800e0f2:	b962      	cbnz	r2, 800e10e <HttpDaemon::ParseRequest()+0x46>
 800e0f4:	4628      	mov	r0, r5
 800e0f6:	f7ff ff57 	bl	800dfa8 <HttpDaemon::ParseMethod(char*)>
 800e0fa:	28c8      	cmp	r0, #200	; 0xc8
 800e0fc:	d111      	bne.n	800e122 <HttpDaemon::ParseRequest()+0x5a>
 800e0fe:	463a      	mov	r2, r7
 800e100:	68e9      	ldr	r1, [r5, #12]
 800e102:	3401      	adds	r4, #1
 800e104:	b2a4      	uxth	r4, r4
 800e106:	4421      	add	r1, r4
 800e108:	3401      	adds	r4, #1
 800e10a:	b2a4      	uxth	r4, r4
 800e10c:	e7e6      	b.n	800e0dc <HttpDaemon::ParseRequest()+0x14>
 800e10e:	7808      	ldrb	r0, [r1, #0]
 800e110:	b970      	cbnz	r0, 800e130 <HttpDaemon::ParseRequest()+0x68>
 800e112:	696b      	ldr	r3, [r5, #20]
 800e114:	3b01      	subs	r3, #1
 800e116:	1b1b      	subs	r3, r3, r4
 800e118:	b29b      	uxth	r3, r3
 800e11a:	f8a5 35c4 	strh.w	r3, [r5, #1476]	; 0x5c4
 800e11e:	b90b      	cbnz	r3, 800e124 <HttpDaemon::ParseRequest()+0x5c>
 800e120:	20c8      	movs	r0, #200	; 0xc8
 800e122:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e124:	68ea      	ldr	r2, [r5, #12]
 800e126:	3401      	adds	r4, #1
 800e128:	4414      	add	r4, r2
 800e12a:	60ac      	str	r4, [r5, #8]
 800e12c:	54e0      	strb	r0, [r4, r3]
 800e12e:	e7f7      	b.n	800e120 <HttpDaemon::ParseRequest()+0x58>
 800e130:	4628      	mov	r0, r5
 800e132:	f7ff ff7f 	bl	800e034 <HttpDaemon::ParseHeaderField(char*)>
 800e136:	e7e0      	b.n	800e0fa <HttpDaemon::ParseRequest()+0x32>

0800e138 <HttpDaemon::HandleGetTxt()>:
 800e138:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e13c:	6847      	ldr	r7, [r0, #4]
 800e13e:	4604      	mov	r4, r0
 800e140:	1dbd      	adds	r5, r7, #6
 800e142:	462b      	mov	r3, r5
 800e144:	4618      	mov	r0, r3
 800e146:	7802      	ldrb	r2, [r0, #0]
 800e148:	3301      	adds	r3, #1
 800e14a:	2a00      	cmp	r2, #0
 800e14c:	d1fa      	bne.n	800e144 <HttpDaemon::HandleGetTxt()+0xc>
 800e14e:	1b40      	subs	r0, r0, r5
 800e150:	2804      	cmp	r0, #4
 800e152:	d803      	bhi.n	800e15c <HttpDaemon::HandleGetTxt()+0x24>
 800e154:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800e158:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e15c:	3804      	subs	r0, #4
 800e15e:	4914      	ldr	r1, [pc, #80]	; (800e1b0 <HttpDaemon::HandleGetTxt()+0x78>)
 800e160:	4428      	add	r0, r5
 800e162:	f7ff feca 	bl	800defa <strcmp>
 800e166:	2800      	cmp	r0, #0
 800e168:	d1f4      	bne.n	800e154 <HttpDaemon::HandleGetTxt()+0x1c>
 800e16a:	4b12      	ldr	r3, [pc, #72]	; (800e1b4 <HttpDaemon::HandleGetTxt()+0x7c>)
 800e16c:	2001      	movs	r0, #1
 800e16e:	f893 8000 	ldrb.w	r8, [r3]
 800e172:	f7ff fee9 	bl	800df48 <PropertiesConfig::EnableJSON(bool)>
 800e176:	4b10      	ldr	r3, [pc, #64]	; (800e1b8 <HttpDaemon::HandleGetTxt()+0x80>)
 800e178:	f240 529b 	movw	r2, #1435	; 0x59b
 800e17c:	4629      	mov	r1, r5
 800e17e:	6818      	ldr	r0, [r3, #0]
 800e180:	f7ff fa6c 	bl	800d65c <RemoteConfig::HandleGet(void*, unsigned int)>
 800e184:	4606      	mov	r6, r0
 800e186:	f008 0801 	and.w	r8, r8, #1
 800e18a:	4640      	mov	r0, r8
 800e18c:	f7ff fedc 	bl	800df48 <PropertiesConfig::EnableJSON(bool)>
 800e190:	2e00      	cmp	r6, #0
 800e192:	d0df      	beq.n	800e154 <HttpDaemon::HandleGetTxt()+0x1c>
 800e194:	f8a4 65c2 	strh.w	r6, [r4, #1474]	; 0x5c2
 800e198:	3606      	adds	r6, #6
 800e19a:	3422      	adds	r4, #34	; 0x22
 800e19c:	4437      	add	r7, r6
 800e19e:	42bd      	cmp	r5, r7
 800e1a0:	d101      	bne.n	800e1a6 <HttpDaemon::HandleGetTxt()+0x6e>
 800e1a2:	20c8      	movs	r0, #200	; 0xc8
 800e1a4:	e7d8      	b.n	800e158 <HttpDaemon::HandleGetTxt()+0x20>
 800e1a6:	f815 3b01 	ldrb.w	r3, [r5], #1
 800e1aa:	f804 3b01 	strb.w	r3, [r4], #1
 800e1ae:	e7f6      	b.n	800e19e <HttpDaemon::HandleGetTxt()+0x66>
 800e1b0:	0801595d 	stmdaeq	r1, {r0, r2, r3, r4, r6, r8, fp, ip, lr}
 800e1b4:	2000a63c 	andcs	sl, r0, ip, lsr r6
 800e1b8:	200016e8 	andcs	r1, r0, r8, ror #13

0800e1bc <HttpDaemon::HandleGet()>:
 800e1bc:	b570      	push	{r4, r5, r6, lr}
 800e1be:	6845      	ldr	r5, [r0, #4]
 800e1c0:	4604      	mov	r4, r0
 800e1c2:	4943      	ldr	r1, [pc, #268]	; (800e2d0 <HttpDaemon::HandleGet()+0x114>)
 800e1c4:	4628      	mov	r0, r5
 800e1c6:	f7ff fe98 	bl	800defa <strcmp>
 800e1ca:	b120      	cbz	r0, 800e1d6 <HttpDaemon::HandleGet()+0x1a>
 800e1cc:	4628      	mov	r0, r5
 800e1ce:	4941      	ldr	r1, [pc, #260]	; (800e2d4 <HttpDaemon::HandleGet()+0x118>)
 800e1d0:	f7ff fe93 	bl	800defa <strcmp>
 800e1d4:	b960      	cbnz	r0, 800e1f0 <HttpDaemon::HandleGet()+0x34>
 800e1d6:	4621      	mov	r1, r4
 800e1d8:	4b3f      	ldr	r3, [pc, #252]	; (800e2d8 <HttpDaemon::HandleGet()+0x11c>)
 800e1da:	4840      	ldr	r0, [pc, #256]	; (800e2dc <HttpDaemon::HandleGet()+0x120>)
 800e1dc:	f841 3b22 	str.w	r3, [r1], #34
 800e1e0:	f000 fa7a 	bl	800e6d8 <get_file_content(char const*, char*)>
 800e1e4:	2800      	cmp	r0, #0
 800e1e6:	dd33      	ble.n	800e250 <HttpDaemon::HandleGet()+0x94>
 800e1e8:	f8a4 05c2 	strh.w	r0, [r4, #1474]	; 0x5c2
 800e1ec:	20c8      	movs	r0, #200	; 0xc8
 800e1ee:	bd70      	pop	{r4, r5, r6, pc}
 800e1f0:	4628      	mov	r0, r5
 800e1f2:	493b      	ldr	r1, [pc, #236]	; (800e2e0 <HttpDaemon::HandleGet()+0x124>)
 800e1f4:	f7ff fe81 	bl	800defa <strcmp>
 800e1f8:	b928      	cbnz	r0, 800e206 <HttpDaemon::HandleGet()+0x4a>
 800e1fa:	4621      	mov	r1, r4
 800e1fc:	4b39      	ldr	r3, [pc, #228]	; (800e2e4 <HttpDaemon::HandleGet()+0x128>)
 800e1fe:	483a      	ldr	r0, [pc, #232]	; (800e2e8 <HttpDaemon::HandleGet()+0x12c>)
 800e200:	f841 3b22 	str.w	r3, [r1], #34
 800e204:	e7ec      	b.n	800e1e0 <HttpDaemon::HandleGet()+0x24>
 800e206:	4628      	mov	r0, r5
 800e208:	4938      	ldr	r1, [pc, #224]	; (800e2ec <HttpDaemon::HandleGet()+0x130>)
 800e20a:	f7ff fe76 	bl	800defa <strcmp>
 800e20e:	b198      	cbz	r0, 800e238 <HttpDaemon::HandleGet()+0x7c>
 800e210:	4a37      	ldr	r2, [pc, #220]	; (800e2f0 <HttpDaemon::HandleGet()+0x134>)
 800e212:	1e6b      	subs	r3, r5, #1
 800e214:	1d69      	adds	r1, r5, #5
 800e216:	428b      	cmp	r3, r1
 800e218:	d114      	bne.n	800e244 <HttpDaemon::HandleGet()+0x88>
 800e21a:	4b36      	ldr	r3, [pc, #216]	; (800e2f4 <HttpDaemon::HandleGet()+0x138>)
 800e21c:	3506      	adds	r5, #6
 800e21e:	4628      	mov	r0, r5
 800e220:	4935      	ldr	r1, [pc, #212]	; (800e2f8 <HttpDaemon::HandleGet()+0x13c>)
 800e222:	6023      	str	r3, [r4, #0]
 800e224:	f7ff fe69 	bl	800defa <strcmp>
 800e228:	b9a8      	cbnz	r0, 800e256 <HttpDaemon::HandleGet()+0x9a>
 800e22a:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800e22e:	f104 0022 	add.w	r0, r4, #34	; 0x22
 800e232:	f000 f9d9 	bl	800e5e8 <remoteconfig::json_get_list(char*, unsigned short)>
 800e236:	e7d5      	b.n	800e1e4 <HttpDaemon::HandleGet()+0x28>
 800e238:	4621      	mov	r1, r4
 800e23a:	4b30      	ldr	r3, [pc, #192]	; (800e2fc <HttpDaemon::HandleGet()+0x140>)
 800e23c:	4830      	ldr	r0, [pc, #192]	; (800e300 <HttpDaemon::HandleGet()+0x144>)
 800e23e:	f841 3b22 	str.w	r3, [r1], #34
 800e242:	e7cd      	b.n	800e1e0 <HttpDaemon::HandleGet()+0x24>
 800e244:	f812 0b01 	ldrb.w	r0, [r2], #1
 800e248:	f813 6f01 	ldrb.w	r6, [r3, #1]!
 800e24c:	4286      	cmp	r6, r0
 800e24e:	d0e2      	beq.n	800e216 <HttpDaemon::HandleGet()+0x5a>
 800e250:	f44f 70ca 	mov.w	r0, #404	; 0x194
 800e254:	e7cb      	b.n	800e1ee <HttpDaemon::HandleGet()+0x32>
 800e256:	4628      	mov	r0, r5
 800e258:	492a      	ldr	r1, [pc, #168]	; (800e304 <HttpDaemon::HandleGet()+0x148>)
 800e25a:	f7ff fe4e 	bl	800defa <strcmp>
 800e25e:	b930      	cbnz	r0, 800e26e <HttpDaemon::HandleGet()+0xb2>
 800e260:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800e264:	f104 0022 	add.w	r0, r4, #34	; 0x22
 800e268:	f000 f9f2 	bl	800e650 <remoteconfig::json_get_version(char*, unsigned short)>
 800e26c:	e7ba      	b.n	800e1e4 <HttpDaemon::HandleGet()+0x28>
 800e26e:	4628      	mov	r0, r5
 800e270:	4925      	ldr	r1, [pc, #148]	; (800e308 <HttpDaemon::HandleGet()+0x14c>)
 800e272:	f7ff fe42 	bl	800defa <strcmp>
 800e276:	b958      	cbnz	r0, 800e290 <HttpDaemon::HandleGet()+0xd4>
 800e278:	4b24      	ldr	r3, [pc, #144]	; (800e30c <HttpDaemon::HandleGet()+0x150>)
 800e27a:	681b      	ldr	r3, [r3, #0]
 800e27c:	f893 35d7 	ldrb.w	r3, [r3, #1495]	; 0x5d7
 800e280:	b31b      	cbz	r3, 800e2ca <HttpDaemon::HandleGet()+0x10e>
 800e282:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800e286:	f104 0022 	add.w	r0, r4, #34	; 0x22
 800e28a:	f000 f9fd 	bl	800e688 <remoteconfig::json_get_uptime(char*, unsigned short)>
 800e28e:	e7a9      	b.n	800e1e4 <HttpDaemon::HandleGet()+0x28>
 800e290:	4628      	mov	r0, r5
 800e292:	491f      	ldr	r1, [pc, #124]	; (800e310 <HttpDaemon::HandleGet()+0x154>)
 800e294:	f7ff fe31 	bl	800defa <strcmp>
 800e298:	b930      	cbnz	r0, 800e2a8 <HttpDaemon::HandleGet()+0xec>
 800e29a:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800e29e:	f104 0022 	add.w	r0, r4, #34	; 0x22
 800e2a2:	f000 fa01 	bl	800e6a8 <remoteconfig::json_get_display(char*, unsigned short)>
 800e2a6:	e79d      	b.n	800e1e4 <HttpDaemon::HandleGet()+0x28>
 800e2a8:	4628      	mov	r0, r5
 800e2aa:	491a      	ldr	r1, [pc, #104]	; (800e314 <HttpDaemon::HandleGet()+0x158>)
 800e2ac:	f7ff fe25 	bl	800defa <strcmp>
 800e2b0:	b930      	cbnz	r0, 800e2c0 <HttpDaemon::HandleGet()+0x104>
 800e2b2:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800e2b6:	f104 0022 	add.w	r0, r4, #34	; 0x22
 800e2ba:	f000 fa05 	bl	800e6c8 <remoteconfig::json_get_directory(char*, unsigned short)>
 800e2be:	e791      	b.n	800e1e4 <HttpDaemon::HandleGet()+0x28>
 800e2c0:	4620      	mov	r0, r4
 800e2c2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e2c6:	f7ff bf37 	b.w	800e138 <HttpDaemon::HandleGetTxt()>
 800e2ca:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800e2ce:	e78e      	b.n	800e1ee <HttpDaemon::HandleGet()+0x32>
 800e2d0:	08015a6c 	stmdaeq	r1, {r2, r3, r5, r6, r9, fp, ip, lr}
 800e2d4:	08015a45 	stmdaeq	r1, {r0, r2, r6, r9, fp, ip, lr}
 800e2d8:	08015c58 	stmdaeq	r1, {r3, r4, r6, sl, fp, ip, lr}
 800e2dc:	08015a46 	stmdaeq	r1, {r1, r2, r6, r9, fp, ip, lr}
 800e2e0:	08015a51 	stmdaeq	r1, {r0, r4, r6, r9, fp, ip, lr}
 800e2e4:	08015c78 	stmdaeq	r1, {r3, r4, r5, r6, sl, fp, ip, lr}
 800e2e8:	08015a52 	stmdaeq	r1, {r1, r4, r6, r9, fp, ip, lr}
 800e2ec:	08015a5d 	stmdaeq	r1, {r0, r2, r3, r4, r6, r9, fp, ip, lr}
 800e2f0:	08015a67 	stmdaeq	r1, {r0, r1, r2, r5, r6, r9, fp, ip, lr}
 800e2f4:	08015cb8 	stmdaeq	r1, {r3, r4, r5, r7, sl, fp, ip, lr}
 800e2f8:	08015a6e 	stmdaeq	r1, {r1, r2, r3, r5, r6, r9, fp, ip, lr}
 800e2fc:	08015c98 	stmdaeq	r1, {r3, r4, r7, sl, fp, ip, lr}
 800e300:	08015a5e 	stmdaeq	r1, {r1, r2, r3, r4, r6, r9, fp, ip, lr}
 800e304:	08015a73 	stmdaeq	r1, {r0, r1, r4, r5, r6, r9, fp, ip, lr}
 800e308:	08015a7b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r9, fp, ip, lr}
 800e30c:	200016e8 	andcs	r1, r0, r8, ror #13
 800e310:	08015a82 	stmdaeq	r1, {r1, r7, r9, fp, ip, lr}
 800e314:	08015a8a 	stmdaeq	r1, {r1, r3, r7, r9, fp, ip, lr}

0800e318 <HttpDaemon::HandlePost(bool)>:
 800e318:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800e31a:	4604      	mov	r4, r0
 800e31c:	2900      	cmp	r1, #0
 800e31e:	f040 8091 	bne.w	800e444 <HttpDaemon::HandlePost(bool)+0x12c>
 800e322:	f890 3020 	ldrb.w	r3, [r0, #32]
 800e326:	2b00      	cmp	r3, #0
 800e328:	d05d      	beq.n	800e3e6 <HttpDaemon::HandlePost(bool)+0xce>
 800e32a:	6845      	ldr	r5, [r0, #4]
 800e32c:	4948      	ldr	r1, [pc, #288]	; (800e450 <HttpDaemon::HandlePost(bool)+0x138>)
 800e32e:	4628      	mov	r0, r5
 800e330:	f7ff fde3 	bl	800defa <strcmp>
 800e334:	2800      	cmp	r0, #0
 800e336:	bf0c      	ite	eq
 800e338:	2301      	moveq	r3, #1
 800e33a:	2300      	movne	r3, #0
 800e33c:	f884 3021 	strb.w	r3, [r4, #33]	; 0x21
 800e340:	d055      	beq.n	800e3ee <HttpDaemon::HandlePost(bool)+0xd6>
 800e342:	4628      	mov	r0, r5
 800e344:	4943      	ldr	r1, [pc, #268]	; (800e454 <HttpDaemon::HandlePost(bool)+0x13c>)
 800e346:	f7ff fdd8 	bl	800defa <strcmp>
 800e34a:	2800      	cmp	r0, #0
 800e34c:	d04f      	beq.n	800e3ee <HttpDaemon::HandlePost(bool)+0xd6>
 800e34e:	f44f 70ca 	mov.w	r0, #404	; 0x194
 800e352:	e04a      	b.n	800e3ea <HttpDaemon::HandlePost(bool)+0xd2>
 800e354:	4940      	ldr	r1, [pc, #256]	; (800e458 <HttpDaemon::HandlePost(bool)+0x140>)
 800e356:	68a0      	ldr	r0, [r4, #8]
 800e358:	f10d 0207 	add.w	r2, sp, #7
 800e35c:	f003 fe7d 	bl	801205a <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800e360:	b9e8      	cbnz	r0, 800e39e <HttpDaemon::HandlePost(bool)+0x86>
 800e362:	f89d 6007 	ldrb.w	r6, [sp, #7]
 800e366:	4b3d      	ldr	r3, [pc, #244]	; (800e45c <HttpDaemon::HandlePost(bool)+0x144>)
 800e368:	fab6 f186 	clz	r1, r6
 800e36c:	681d      	ldr	r5, [r3, #0]
 800e36e:	0949      	lsrs	r1, r1, #5
 800e370:	69a8      	ldr	r0, [r5, #24]
 800e372:	b138      	cbz	r0, 800e384 <HttpDaemon::HandlePost(bool)+0x6c>
 800e374:	6803      	ldr	r3, [r0, #0]
 800e376:	7429      	strb	r1, [r5, #16]
 800e378:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800e37a:	4798      	blx	r3
 800e37c:	b116      	cbz	r6, 800e384 <HttpDaemon::HandlePost(bool)+0x6c>
 800e37e:	4b38      	ldr	r3, [pc, #224]	; (800e460 <HttpDaemon::HandlePost(bool)+0x148>)
 800e380:	681b      	ldr	r3, [r3, #0]
 800e382:	606b      	str	r3, [r5, #4]
 800e384:	4620      	mov	r0, r4
 800e386:	4b37      	ldr	r3, [pc, #220]	; (800e464 <HttpDaemon::HandlePost(bool)+0x14c>)
 800e388:	f240 519f 	movw	r1, #1439	; 0x59f
 800e38c:	4a36      	ldr	r2, [pc, #216]	; (800e468 <HttpDaemon::HandlePost(bool)+0x150>)
 800e38e:	f840 3b22 	str.w	r3, [r0], #34
 800e392:	f7fb f93b 	bl	800960c <snprintf>
 800e396:	f8a4 05c2 	strh.w	r0, [r4, #1474]	; 0x5c2
 800e39a:	20c8      	movs	r0, #200	; 0xc8
 800e39c:	e025      	b.n	800e3ea <HttpDaemon::HandlePost(bool)+0xd2>
 800e39e:	4933      	ldr	r1, [pc, #204]	; (800e46c <HttpDaemon::HandlePost(bool)+0x154>)
 800e3a0:	68a0      	ldr	r0, [r4, #8]
 800e3a2:	f10d 0207 	add.w	r2, sp, #7
 800e3a6:	f003 fe58 	bl	801205a <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800e3aa:	b9e0      	cbnz	r0, 800e3e6 <HttpDaemon::HandlePost(bool)+0xce>
 800e3ac:	4b30      	ldr	r3, [pc, #192]	; (800e470 <HttpDaemon::HandlePost(bool)+0x158>)
 800e3ae:	6818      	ldr	r0, [r3, #0]
 800e3b0:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800e3b4:	b11b      	cbz	r3, 800e3be <HttpDaemon::HandlePost(bool)+0xa6>
 800e3b6:	2104      	movs	r1, #4
 800e3b8:	f004 f9e8 	bl	801278c <LedBlink::SetMode(ledblink::Mode)>
 800e3bc:	e7e2      	b.n	800e384 <HttpDaemon::HandlePost(bool)+0x6c>
 800e3be:	2102      	movs	r1, #2
 800e3c0:	e7fa      	b.n	800e3b8 <HttpDaemon::HandlePost(bool)+0xa0>
 800e3c2:	4b2c      	ldr	r3, [pc, #176]	; (800e474 <HttpDaemon::HandlePost(bool)+0x15c>)
 800e3c4:	2001      	movs	r0, #1
 800e3c6:	781d      	ldrb	r5, [r3, #0]
 800e3c8:	f7ff fdbe 	bl	800df48 <PropertiesConfig::EnableJSON(bool)>
 800e3cc:	4b2a      	ldr	r3, [pc, #168]	; (800e478 <HttpDaemon::HandlePost(bool)+0x160>)
 800e3ce:	f8b4 25c4 	ldrh.w	r2, [r4, #1476]	; 0x5c4
 800e3d2:	6818      	ldr	r0, [r3, #0]
 800e3d4:	68a1      	ldr	r1, [r4, #8]
 800e3d6:	f005 0501 	and.w	r5, r5, #1
 800e3da:	f7ff fa11 	bl	800d800 <RemoteConfig::HandleSet(void*, unsigned int)>
 800e3de:	4628      	mov	r0, r5
 800e3e0:	f7ff fdb2 	bl	800df48 <PropertiesConfig::EnableJSON(bool)>
 800e3e4:	e7ce      	b.n	800e384 <HttpDaemon::HandlePost(bool)+0x6c>
 800e3e6:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800e3ea:	b002      	add	sp, #8
 800e3ec:	bd70      	pop	{r4, r5, r6, pc}
 800e3ee:	f8b4 35c6 	ldrh.w	r3, [r4, #1478]	; 0x5c6
 800e3f2:	6962      	ldr	r2, [r4, #20]
 800e3f4:	429a      	cmp	r2, r3
 800e3f6:	dbd0      	blt.n	800e39a <HttpDaemon::HandlePost(bool)+0x82>
 800e3f8:	f8b4 35c4 	ldrh.w	r3, [r4, #1476]	; 0x5c4
 800e3fc:	2b00      	cmp	r3, #0
 800e3fe:	d0cc      	beq.n	800e39a <HttpDaemon::HandlePost(bool)+0x82>
 800e400:	f894 3021 	ldrb.w	r3, [r4, #33]	; 0x21
 800e404:	2b00      	cmp	r3, #0
 800e406:	d0dc      	beq.n	800e3c2 <HttpDaemon::HandlePost(bool)+0xaa>
 800e408:	2201      	movs	r2, #1
 800e40a:	f8b4 15c4 	ldrh.w	r1, [r4, #1476]	; 0x5c4
 800e40e:	68a0      	ldr	r0, [r4, #8]
 800e410:	f003 fbbe 	bl	8011b90 <properties::convert_json_file(char*, unsigned short, bool)>
 800e414:	2800      	cmp	r0, #0
 800e416:	dde6      	ble.n	800e3e6 <HttpDaemon::HandlePost(bool)+0xce>
 800e418:	4918      	ldr	r1, [pc, #96]	; (800e47c <HttpDaemon::HandlePost(bool)+0x164>)
 800e41a:	68a0      	ldr	r0, [r4, #8]
 800e41c:	f10d 0207 	add.w	r2, sp, #7
 800e420:	f003 fe1b 	bl	801205a <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800e424:	2800      	cmp	r0, #0
 800e426:	d195      	bne.n	800e354 <HttpDaemon::HandlePost(bool)+0x3c>
 800e428:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800e42c:	2b00      	cmp	r3, #0
 800e42e:	d0a9      	beq.n	800e384 <HttpDaemon::HandlePost(bool)+0x6c>
 800e430:	4b11      	ldr	r3, [pc, #68]	; (800e478 <HttpDaemon::HandlePost(bool)+0x160>)
 800e432:	681b      	ldr	r3, [r3, #0]
 800e434:	f893 35d6 	ldrb.w	r3, [r3, #1494]	; 0x5d6
 800e438:	2b00      	cmp	r3, #0
 800e43a:	d0d4      	beq.n	800e3e6 <HttpDaemon::HandlePost(bool)+0xce>
 800e43c:	4b10      	ldr	r3, [pc, #64]	; (800e480 <HttpDaemon::HandlePost(bool)+0x168>)
 800e43e:	6818      	ldr	r0, [r3, #0]
 800e440:	f004 fa48 	bl	80128d4 <Hardware::Reboot()>
 800e444:	68c3      	ldr	r3, [r0, #12]
 800e446:	6083      	str	r3, [r0, #8]
 800e448:	6943      	ldr	r3, [r0, #20]
 800e44a:	f8a0 35c4 	strh.w	r3, [r0, #1476]	; 0x5c4
 800e44e:	e7d7      	b.n	800e400 <HttpDaemon::HandlePost(bool)+0xe8>
 800e450:	08015a94 	stmdaeq	r1, {r2, r4, r7, r9, fp, ip, lr}
 800e454:	08015a30 	stmdaeq	r1, {r4, r5, r9, fp, ip, lr}
 800e458:	08015a82 	stmdaeq	r1, {r1, r7, r9, fp, ip, lr}
 800e45c:	2000a640 	andcs	sl, r0, r0, asr #12
 800e460:	2000a744 	andcs	sl, r0, r4, asr #14
 800e464:	08015c58 	stmdaeq	r1, {r3, r4, r6, sl, fp, ip, lr}
 800e468:	08015ab1 	stmdaeq	r1, {r0, r4, r5, r7, r9, fp, ip, lr}
 800e46c:	08015aa8 	stmdaeq	r1, {r3, r5, r7, r9, fp, ip, lr}
 800e470:	2000a72c 	andcs	sl, r0, ip, lsr #14
 800e474:	2000a63c 	andcs	sl, r0, ip, lsr r6
 800e478:	200016e8 	andcs	r1, r0, r8, ror #13
 800e47c:	08015aa1 	stmdaeq	r1, {r0, r5, r7, r9, fp, ip, lr}
 800e480:	2000a730 	andcs	sl, r0, r0, lsr r7

0800e484 <HttpDaemon::Run()>:
 800e484:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e486:	4e4a      	ldr	r6, [pc, #296]	; (800e5b0 <HttpDaemon::Run()+0x12c>)
 800e488:	4604      	mov	r4, r0
 800e48a:	6901      	ldr	r1, [r0, #16]
 800e48c:	f100 020c 	add.w	r2, r0, #12
 800e490:	b085      	sub	sp, #20
 800e492:	6830      	ldr	r0, [r6, #0]
 800e494:	f002 f931 	bl	80106fa <Network::TcpRead(int, unsigned char const**)>
 800e498:	6160      	str	r0, [r4, #20]
 800e49a:	2800      	cmp	r0, #0
 800e49c:	d061      	beq.n	800e562 <HttpDaemon::Run()+0xde>
 800e49e:	69a3      	ldr	r3, [r4, #24]
 800e4a0:	f5b3 7f02 	cmp.w	r3, #520	; 0x208
 800e4a4:	d15f      	bne.n	800e566 <HttpDaemon::Run()+0xe2>
 800e4a6:	4620      	mov	r0, r4
 800e4a8:	f7ff fe0e 	bl	800e0c8 <HttpDaemon::ParseRequest()>
 800e4ac:	28c8      	cmp	r0, #200	; 0xc8
 800e4ae:	61a0      	str	r0, [r4, #24]
 800e4b0:	d106      	bne.n	800e4c0 <HttpDaemon::Run()+0x3c>
 800e4b2:	69e3      	ldr	r3, [r4, #28]
 800e4b4:	2b00      	cmp	r3, #0
 800e4b6:	d147      	bne.n	800e548 <HttpDaemon::Run()+0xc4>
 800e4b8:	4620      	mov	r0, r4
 800e4ba:	f7ff fe7f 	bl	800e1bc <HttpDaemon::HandleGet()>
 800e4be:	61a0      	str	r0, [r4, #24]
 800e4c0:	69a3      	ldr	r3, [r4, #24]
 800e4c2:	f104 0722 	add.w	r7, r4, #34	; 0x22
 800e4c6:	2bc8      	cmp	r3, #200	; 0xc8
 800e4c8:	d06f      	beq.n	800e5aa <HttpDaemon::Run()+0x126>
 800e4ca:	f5b3 7fcf 	cmp.w	r3, #414	; 0x19e
 800e4ce:	d062      	beq.n	800e596 <HttpDaemon::Run()+0x112>
 800e4d0:	dc52      	bgt.n	800e578 <HttpDaemon::Run()+0xf4>
 800e4d2:	f5b3 7fca 	cmp.w	r3, #404	; 0x194
 800e4d6:	d060      	beq.n	800e59a <HttpDaemon::Run()+0x116>
 800e4d8:	f240 129d 	movw	r2, #413	; 0x19d
 800e4dc:	4293      	cmp	r3, r2
 800e4de:	d05e      	beq.n	800e59e <HttpDaemon::Run()+0x11a>
 800e4e0:	4d34      	ldr	r5, [pc, #208]	; (800e5b4 <HttpDaemon::Run()+0x130>)
 800e4e2:	4a35      	ldr	r2, [pc, #212]	; (800e5b8 <HttpDaemon::Run()+0x134>)
 800e4e4:	f5b3 7fc8 	cmp.w	r3, #400	; 0x190
 800e4e8:	bf18      	it	ne
 800e4ea:	4615      	movne	r5, r2
 800e4ec:	4a33      	ldr	r2, [pc, #204]	; (800e5bc <HttpDaemon::Run()+0x138>)
 800e4ee:	f240 519f 	movw	r1, #1439	; 0x59f
 800e4f2:	6022      	str	r2, [r4, #0]
 800e4f4:	4638      	mov	r0, r7
 800e4f6:	e9cd 5500 	strd	r5, r5, [sp]
 800e4fa:	4a31      	ldr	r2, [pc, #196]	; (800e5c0 <HttpDaemon::Run()+0x13c>)
 800e4fc:	f7fb f886 	bl	800960c <snprintf>
 800e500:	f8a4 05c2 	strh.w	r0, [r4, #1474]	; 0x5c2
 800e504:	f8b4 35c2 	ldrh.w	r3, [r4, #1474]	; 0x5c2
 800e508:	f240 519f 	movw	r1, #1439	; 0x59f
 800e50c:	9303      	str	r3, [sp, #12]
 800e50e:	6823      	ldr	r3, [r4, #0]
 800e510:	4a2c      	ldr	r2, [pc, #176]	; (800e5c4 <HttpDaemon::Run()+0x140>)
 800e512:	9302      	str	r3, [sp, #8]
 800e514:	4b2c      	ldr	r3, [pc, #176]	; (800e5c8 <HttpDaemon::Run()+0x144>)
 800e516:	68e0      	ldr	r0, [r4, #12]
 800e518:	e9cd 5300 	strd	r5, r3, [sp]
 800e51c:	69a3      	ldr	r3, [r4, #24]
 800e51e:	f7fb f875 	bl	800960c <snprintf>
 800e522:	e9d4 2103 	ldrd	r2, r1, [r4, #12]
 800e526:	b283      	uxth	r3, r0
 800e528:	6830      	ldr	r0, [r6, #0]
 800e52a:	f002 f8ea 	bl	8010702 <Network::TcpWrite(int, unsigned char const*, unsigned short)>
 800e52e:	463a      	mov	r2, r7
 800e530:	f8b4 35c2 	ldrh.w	r3, [r4, #1474]	; 0x5c2
 800e534:	6921      	ldr	r1, [r4, #16]
 800e536:	6830      	ldr	r0, [r6, #0]
 800e538:	f002 f8e3 	bl	8010702 <Network::TcpWrite(int, unsigned char const*, unsigned short)>
 800e53c:	f44f 7202 	mov.w	r2, #520	; 0x208
 800e540:	2302      	movs	r3, #2
 800e542:	e9c4 2306 	strd	r2, r3, [r4, #24]
 800e546:	e00c      	b.n	800e562 <HttpDaemon::Run()+0xde>
 800e548:	2b01      	cmp	r3, #1
 800e54a:	d1b9      	bne.n	800e4c0 <HttpDaemon::Run()+0x3c>
 800e54c:	2100      	movs	r1, #0
 800e54e:	4620      	mov	r0, r4
 800e550:	f7ff fee2 	bl	800e318 <HttpDaemon::HandlePost(bool)>
 800e554:	28c8      	cmp	r0, #200	; 0xc8
 800e556:	61a0      	str	r0, [r4, #24]
 800e558:	d1b2      	bne.n	800e4c0 <HttpDaemon::Run()+0x3c>
 800e55a:	f8b4 35c4 	ldrh.w	r3, [r4, #1476]	; 0x5c4
 800e55e:	2b00      	cmp	r3, #0
 800e560:	d1ae      	bne.n	800e4c0 <HttpDaemon::Run()+0x3c>
 800e562:	b005      	add	sp, #20
 800e564:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e566:	2bc8      	cmp	r3, #200	; 0xc8
 800e568:	d1aa      	bne.n	800e4c0 <HttpDaemon::Run()+0x3c>
 800e56a:	69e1      	ldr	r1, [r4, #28]
 800e56c:	2901      	cmp	r1, #1
 800e56e:	d1a7      	bne.n	800e4c0 <HttpDaemon::Run()+0x3c>
 800e570:	4620      	mov	r0, r4
 800e572:	f7ff fed1 	bl	800e318 <HttpDaemon::HandlePost(bool)>
 800e576:	e7a2      	b.n	800e4be <HttpDaemon::Run()+0x3a>
 800e578:	f240 12f5 	movw	r2, #501	; 0x1f5
 800e57c:	4293      	cmp	r3, r2
 800e57e:	d010      	beq.n	800e5a2 <HttpDaemon::Run()+0x11e>
 800e580:	f240 12f9 	movw	r2, #505	; 0x1f9
 800e584:	4293      	cmp	r3, r2
 800e586:	d00e      	beq.n	800e5a6 <HttpDaemon::Run()+0x122>
 800e588:	4d10      	ldr	r5, [pc, #64]	; (800e5cc <HttpDaemon::Run()+0x148>)
 800e58a:	4a0b      	ldr	r2, [pc, #44]	; (800e5b8 <HttpDaemon::Run()+0x134>)
 800e58c:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800e590:	bf18      	it	ne
 800e592:	4615      	movne	r5, r2
 800e594:	e7aa      	b.n	800e4ec <HttpDaemon::Run()+0x68>
 800e596:	4d0e      	ldr	r5, [pc, #56]	; (800e5d0 <HttpDaemon::Run()+0x14c>)
 800e598:	e7a8      	b.n	800e4ec <HttpDaemon::Run()+0x68>
 800e59a:	4d0e      	ldr	r5, [pc, #56]	; (800e5d4 <HttpDaemon::Run()+0x150>)
 800e59c:	e7a6      	b.n	800e4ec <HttpDaemon::Run()+0x68>
 800e59e:	4d0e      	ldr	r5, [pc, #56]	; (800e5d8 <HttpDaemon::Run()+0x154>)
 800e5a0:	e7a4      	b.n	800e4ec <HttpDaemon::Run()+0x68>
 800e5a2:	4d0e      	ldr	r5, [pc, #56]	; (800e5dc <HttpDaemon::Run()+0x158>)
 800e5a4:	e7a2      	b.n	800e4ec <HttpDaemon::Run()+0x68>
 800e5a6:	4d0e      	ldr	r5, [pc, #56]	; (800e5e0 <HttpDaemon::Run()+0x15c>)
 800e5a8:	e7a0      	b.n	800e4ec <HttpDaemon::Run()+0x68>
 800e5aa:	4d0e      	ldr	r5, [pc, #56]	; (800e5e4 <HttpDaemon::Run()+0x160>)
 800e5ac:	e7aa      	b.n	800e504 <HttpDaemon::Run()+0x80>
 800e5ae:	bf00      	nop
 800e5b0:	2000a008 	andcs	sl, r0, r8
 800e5b4:	08015b0d 	stmdaeq	r1, {r0, r2, r3, r8, r9, fp, ip, lr}
 800e5b8:	08015b94 	stmdaeq	r1, {r2, r4, r7, r8, r9, fp, ip, lr}
 800e5bc:	08015c58 	stmdaeq	r1, {r3, r4, r6, sl, fp, ip, lr}
 800e5c0:	08015ba5 	stmdaeq	r1, {r0, r2, r5, r7, r8, r9, fp, ip, lr}
 800e5c4:	08015c00 	stmdaeq	r1, {sl, fp, ip, lr}
 800e5c8:	08014e75 	stmdaeq	r1, {r0, r2, r4, r5, r6, r9, sl, fp, lr}
 800e5cc:	08015b51 	stmdaeq	r1, {r0, r4, r6, r8, r9, fp, ip, lr}
 800e5d0:	08015b3c 	stmdaeq	r1, {r2, r3, r4, r5, r8, r9, fp, ip, lr}
 800e5d4:	08015b19 	stmdaeq	r1, {r0, r3, r4, r8, r9, fp, ip, lr}
 800e5d8:	08015b23 	stmdaeq	r1, {r0, r1, r5, r8, r9, fp, ip, lr}
 800e5dc:	08015b67 	stmdaeq	r1, {r0, r1, r2, r5, r6, r8, r9, fp, ip, lr}
 800e5e0:	08015b7e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r8, r9, fp, ip, lr}
 800e5e4:	08015ba2 	stmdaeq	r1, {r1, r5, r7, r8, r9, fp, ip, lr}

0800e5e8 <remoteconfig::json_get_list(char*, unsigned short)>:
 800e5e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e5ec:	4b14      	ldr	r3, [pc, #80]	; (800e640 <remoteconfig::json_get_list(char*, unsigned short)+0x58>)
 800e5ee:	f8df 8054 	ldr.w	r8, [pc, #84]	; 800e644 <remoteconfig::json_get_list(char*, unsigned short)+0x5c>
 800e5f2:	681b      	ldr	r3, [r3, #0]
 800e5f4:	b088      	sub	sp, #32
 800e5f6:	4605      	mov	r5, r0
 800e5f8:	f8d8 0000 	ldr.w	r0, [r8]
 800e5fc:	691c      	ldr	r4, [r3, #16]
 800e5fe:	460e      	mov	r6, r1
 800e600:	f7fe ffd8 	bl	800d5b4 <RemoteConfig::GetStringNode() const>
 800e604:	4607      	mov	r7, r0
 800e606:	f8d8 0000 	ldr.w	r0, [r8]
 800e60a:	f7fe ffdf 	bl	800d5cc <RemoteConfig::GetStringOutput() const>
 800e60e:	4b0e      	ldr	r3, [pc, #56]	; (800e648 <remoteconfig::json_get_list(char*, unsigned short)+0x60>)
 800e610:	4631      	mov	r1, r6
 800e612:	7a1a      	ldrb	r2, [r3, #8]
 800e614:	3309      	adds	r3, #9
 800e616:	9303      	str	r3, [sp, #12]
 800e618:	0e23      	lsrs	r3, r4, #24
 800e61a:	9302      	str	r3, [sp, #8]
 800e61c:	f3c4 4307 	ubfx	r3, r4, #16, #8
 800e620:	9301      	str	r3, [sp, #4]
 800e622:	f3c4 2307 	ubfx	r3, r4, #8, #8
 800e626:	e9cd 0205 	strd	r0, r2, [sp, #20]
 800e62a:	9300      	str	r3, [sp, #0]
 800e62c:	4628      	mov	r0, r5
 800e62e:	4a07      	ldr	r2, [pc, #28]	; (800e64c <remoteconfig::json_get_list(char*, unsigned short)+0x64>)
 800e630:	9704      	str	r7, [sp, #16]
 800e632:	b2e3      	uxtb	r3, r4
 800e634:	f7fa ffea 	bl	800960c <snprintf>
 800e638:	b280      	uxth	r0, r0
 800e63a:	b008      	add	sp, #32
 800e63c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e640:	2000a008 	andcs	sl, r0, r8
 800e644:	200016e8 	andcs	r1, r0, r8, ror #13
 800e648:	200016c4 	andcs	r1, r0, r4, asr #13
 800e64c:	08015d32 	stmdaeq	r1, {r1, r4, r5, r8, sl, fp, ip, lr}

0800e650 <remoteconfig::json_get_version(char*, unsigned short)>:
 800e650:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800e652:	2208      	movs	r2, #8
 800e654:	4b09      	ldr	r3, [pc, #36]	; (800e67c <remoteconfig::json_get_version(char*, unsigned short)+0x2c>)
 800e656:	9204      	str	r2, [sp, #16]
 800e658:	f1a3 020b 	sub.w	r2, r3, #11
 800e65c:	9203      	str	r2, [sp, #12]
 800e65e:	220b      	movs	r2, #11
 800e660:	9202      	str	r2, [sp, #8]
 800e662:	4a07      	ldr	r2, [pc, #28]	; (800e680 <remoteconfig::json_get_version(char*, unsigned short)+0x30>)
 800e664:	9305      	str	r3, [sp, #20]
 800e666:	3b0e      	subs	r3, #14
 800e668:	9201      	str	r2, [sp, #4]
 800e66a:	9300      	str	r3, [sp, #0]
 800e66c:	4a05      	ldr	r2, [pc, #20]	; (800e684 <remoteconfig::json_get_version(char*, unsigned short)+0x34>)
 800e66e:	2303      	movs	r3, #3
 800e670:	f7fa ffcc 	bl	800960c <snprintf>
 800e674:	b280      	uxth	r0, r0
 800e676:	b007      	add	sp, #28
 800e678:	f85d fb04 	ldr.w	pc, [sp], #4
 800e67c:	2000a6de 	ldrdcs	sl, [r0], -lr
 800e680:	08014e75 	stmdaeq	r1, {r0, r2, r4, r5, r6, r9, sl, fp, lr}
 800e684:	08015d91 	stmdaeq	r1, {r0, r4, r7, r8, sl, fp, ip, lr}

0800e688 <remoteconfig::json_get_uptime(char*, unsigned short)>:
 800e688:	b508      	push	{r3, lr}
 800e68a:	4b05      	ldr	r3, [pc, #20]	; (800e6a0 <remoteconfig::json_get_uptime(char*, unsigned short)+0x18>)
 800e68c:	681a      	ldr	r2, [r3, #0]
 800e68e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800e692:	fbb2 f3f3 	udiv	r3, r2, r3
 800e696:	4a03      	ldr	r2, [pc, #12]	; (800e6a4 <remoteconfig::json_get_uptime(char*, unsigned short)+0x1c>)
 800e698:	f7fa ffb8 	bl	800960c <snprintf>
 800e69c:	b280      	uxth	r0, r0
 800e69e:	bd08      	pop	{r3, pc}
 800e6a0:	2000a744 	andcs	sl, r0, r4, asr #14
 800e6a4:	08015dd7 	stmdaeq	r1, {r0, r1, r2, r4, r6, r7, r8, sl, fp, ip, lr}

0800e6a8 <remoteconfig::json_get_display(char*, unsigned short)>:
 800e6a8:	b508      	push	{r3, lr}
 800e6aa:	4b05      	ldr	r3, [pc, #20]	; (800e6c0 <remoteconfig::json_get_display(char*, unsigned short)+0x18>)
 800e6ac:	4a05      	ldr	r2, [pc, #20]	; (800e6c4 <remoteconfig::json_get_display(char*, unsigned short)+0x1c>)
 800e6ae:	681b      	ldr	r3, [r3, #0]
 800e6b0:	7c1b      	ldrb	r3, [r3, #16]
 800e6b2:	f083 0301 	eor.w	r3, r3, #1
 800e6b6:	f7fa ffa9 	bl	800960c <snprintf>
 800e6ba:	b280      	uxth	r0, r0
 800e6bc:	bd08      	pop	{r3, pc}
 800e6be:	bf00      	nop
 800e6c0:	2000a640 	andcs	sl, r0, r0, asr #12
 800e6c4:	08015de6 	stmdaeq	r1, {r1, r2, r5, r6, r7, r8, sl, fp, ip, lr}

0800e6c8 <remoteconfig::json_get_directory(char*, unsigned short)>:
 800e6c8:	b508      	push	{r3, lr}
 800e6ca:	4a02      	ldr	r2, [pc, #8]	; (800e6d4 <remoteconfig::json_get_directory(char*, unsigned short)+0xc>)
 800e6cc:	f7fa ff9e 	bl	800960c <snprintf>
 800e6d0:	b280      	uxth	r0, r0
 800e6d2:	bd08      	pop	{r3, pc}
 800e6d4:	08015df5 	stmdaeq	r1, {r0, r2, r4, r5, r6, r7, r8, sl, fp, ip, lr}

0800e6d8 <get_file_content(char const*, char*)>:
 800e6d8:	2300      	movs	r3, #0
 800e6da:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800e6dc:	4a18      	ldr	r2, [pc, #96]	; (800e740 <get_file_content(char const*, char*)+0x68>)
 800e6de:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 800e6e2:	1e47      	subs	r7, r0, #1
 800e6e4:	1e6e      	subs	r6, r5, #1
 800e6e6:	f817 cf01 	ldrb.w	ip, [r7, #1]!
 800e6ea:	f816 4f01 	ldrb.w	r4, [r6, #1]!
 800e6ee:	4564      	cmp	r4, ip
 800e6f0:	d00b      	beq.n	800e70a <get_file_content(char const*, char*)+0x32>
 800e6f2:	3301      	adds	r3, #1
 800e6f4:	2b03      	cmp	r3, #3
 800e6f6:	d1f2      	bne.n	800e6de <get_file_content(char const*, char*)+0x6>
 800e6f8:	2333      	movs	r3, #51	; 0x33
 800e6fa:	4a12      	ldr	r2, [pc, #72]	; (800e744 <get_file_content(char const*, char*)+0x6c>)
 800e6fc:	4912      	ldr	r1, [pc, #72]	; (800e748 <get_file_content(char const*, char*)+0x70>)
 800e6fe:	4813      	ldr	r0, [pc, #76]	; (800e74c <get_file_content(char const*, char*)+0x74>)
 800e700:	f7fa ff5c 	bl	80095bc <printf>
 800e704:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 800e708:	e016      	b.n	800e738 <get_file_content(char const*, char*)+0x60>
 800e70a:	2c00      	cmp	r4, #0
 800e70c:	d1eb      	bne.n	800e6e6 <get_file_content(char const*, char*)+0xe>
 800e70e:	460c      	mov	r4, r1
 800e710:	eb02 02c3 	add.w	r2, r2, r3, lsl #3
 800e714:	6853      	ldr	r3, [r2, #4]
 800e716:	3b01      	subs	r3, #1
 800e718:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800e71c:	f804 2b01 	strb.w	r2, [r4], #1
 800e720:	2a00      	cmp	r2, #0
 800e722:	d1f9      	bne.n	800e718 <get_file_content(char const*, char*)+0x40>
 800e724:	1a64      	subs	r4, r4, r1
 800e726:	3c01      	subs	r4, #1
 800e728:	232e      	movs	r3, #46	; 0x2e
 800e72a:	e9cd 5400 	strd	r5, r4, [sp]
 800e72e:	4a06      	ldr	r2, [pc, #24]	; (800e748 <get_file_content(char const*, char*)+0x70>)
 800e730:	4904      	ldr	r1, [pc, #16]	; (800e744 <get_file_content(char const*, char*)+0x6c>)
 800e732:	4807      	ldr	r0, [pc, #28]	; (800e750 <get_file_content(char const*, char*)+0x78>)
 800e734:	f7fa ff42 	bl	80095bc <printf>
 800e738:	4620      	mov	r0, r4
 800e73a:	b003      	add	sp, #12
 800e73c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e73e:	bf00      	nop
 800e740:	08016190 	stmdaeq	r1, {r4, r7, r8, sp, lr}
 800e744:	08015ead 	stmdaeq	r1, {r0, r2, r3, r5, r7, r9, sl, fp, ip, lr}
 800e748:	08015e8e 	stmdaeq	r1, {r1, r2, r3, r7, r9, sl, fp, ip, lr}
 800e74c:	08015eda 	stmdaeq	r1, {r1, r3, r4, r6, r7, r9, sl, fp, ip, lr}
 800e750:	08015ebe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r7, r9, sl, fp, ip, lr}

0800e754 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>:
 800e754:	2300      	movs	r3, #0
 800e756:	2020      	movs	r0, #32
 800e758:	b510      	push	{r4, lr}
 800e75a:	4a04      	ldr	r2, [pc, #16]	; (800e76c <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x18>)
 800e75c:	428b      	cmp	r3, r1
 800e75e:	d100      	bne.n	800e762 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0xe>
 800e760:	bd10      	pop	{r4, pc}
 800e762:	f852 4b04 	ldr.w	r4, [r2], #4
 800e766:	3301      	adds	r3, #1
 800e768:	4420      	add	r0, r4
 800e76a:	e7f7      	b.n	800e75c <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x8>
 800e76c:	080166d4 	stmdaeq	r1, {r2, r4, r6, r7, r9, sl, sp, lr}

0800e770 <SpiFlashStore::Init()>:
 800e770:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e774:	f8df 8114 	ldr.w	r8, [pc, #276]	; 800e88c <SpiFlashStore::Init()+0x11c>
 800e778:	4607      	mov	r7, r0
 800e77a:	b085      	sub	sp, #20
 800e77c:	f8d8 0000 	ldr.w	r0, [r8]
 800e780:	f000 fb70 	bl	800ee64 <FlashRom::GetSectorSize() const>
 800e784:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
 800e788:	4605      	mov	r5, r0
 800e78a:	d17d      	bne.n	800e888 <SpiFlashStore::Init()+0x118>
 800e78c:	f8d8 0000 	ldr.w	r0, [r8]
 800e790:	f000 fb60 	bl	800ee54 <FlashRom::GetSize() const>
 800e794:	4b3e      	ldr	r3, [pc, #248]	; (800e890 <SpiFlashStore::Init()+0x120>)
 800e796:	f5a0 5180 	sub.w	r1, r0, #4096	; 0x1000
 800e79a:	f3c1 060b 	ubfx	r6, r1, #0, #12
 800e79e:	6019      	str	r1, [r3, #0]
 800e7a0:	2e00      	cmp	r6, #0
 800e7a2:	d171      	bne.n	800e888 <SpiFlashStore::Init()+0x118>
 800e7a4:	4c3b      	ldr	r4, [pc, #236]	; (800e894 <SpiFlashStore::Init()+0x124>)
 800e7a6:	ab03      	add	r3, sp, #12
 800e7a8:	9300      	str	r3, [sp, #0]
 800e7aa:	462a      	mov	r2, r5
 800e7ac:	4623      	mov	r3, r4
 800e7ae:	f8d8 0000 	ldr.w	r0, [r8]
 800e7b2:	f000 fb5a 	bl	800ee6a <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)>
 800e7b6:	7823      	ldrb	r3, [r4, #0]
 800e7b8:	2b41      	cmp	r3, #65	; 0x41
 800e7ba:	bf1c      	itt	ne
 800e7bc:	2341      	movne	r3, #65	; 0x41
 800e7be:	7023      	strbne	r3, [r4, #0]
 800e7c0:	7863      	ldrb	r3, [r4, #1]
 800e7c2:	bf14      	ite	ne
 800e7c4:	4635      	movne	r5, r6
 800e7c6:	2501      	moveq	r5, #1
 800e7c8:	2b76      	cmp	r3, #118	; 0x76
 800e7ca:	bf1c      	itt	ne
 800e7cc:	2376      	movne	r3, #118	; 0x76
 800e7ce:	7063      	strbne	r3, [r4, #1]
 800e7d0:	78a3      	ldrb	r3, [r4, #2]
 800e7d2:	bf18      	it	ne
 800e7d4:	2500      	movne	r5, #0
 800e7d6:	2b56      	cmp	r3, #86	; 0x56
 800e7d8:	bf1c      	itt	ne
 800e7da:	2356      	movne	r3, #86	; 0x56
 800e7dc:	70a3      	strbne	r3, [r4, #2]
 800e7de:	78e3      	ldrb	r3, [r4, #3]
 800e7e0:	bf18      	it	ne
 800e7e2:	2500      	movne	r5, #0
 800e7e4:	2b10      	cmp	r3, #16
 800e7e6:	d022      	beq.n	800e82e <SpiFlashStore::Init()+0xbe>
 800e7e8:	2310      	movs	r3, #16
 800e7ea:	70e3      	strb	r3, [r4, #3]
 800e7ec:	2201      	movs	r2, #1
 800e7ee:	2500      	movs	r5, #0
 800e7f0:	f04f 09ff 	mov.w	r9, #255	; 0xff
 800e7f4:	4b28      	ldr	r3, [pc, #160]	; (800e898 <SpiFlashStore::Init()+0x128>)
 800e7f6:	f8df 80a4 	ldr.w	r8, [pc, #164]	; 800e89c <SpiFlashStore::Init()+0x12c>
 800e7fa:	701a      	strb	r2, [r3, #0]
 800e7fc:	4631      	mov	r1, r6
 800e7fe:	4638      	mov	r0, r7
 800e800:	f7ff ffa8 	bl	800e754 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800e804:	1823      	adds	r3, r4, r0
 800e806:	5425      	strb	r5, [r4, r0]
 800e808:	705d      	strb	r5, [r3, #1]
 800e80a:	709d      	strb	r5, [r3, #2]
 800e80c:	70dd      	strb	r5, [r3, #3]
 800e80e:	f858 3b04 	ldr.w	r3, [r8], #4
 800e812:	1d02      	adds	r2, r0, #4
 800e814:	4403      	add	r3, r0
 800e816:	429a      	cmp	r2, r3
 800e818:	d332      	bcc.n	800e880 <SpiFlashStore::Init()+0x110>
 800e81a:	3601      	adds	r6, #1
 800e81c:	2e1c      	cmp	r6, #28
 800e81e:	d1ed      	bne.n	800e7fc <SpiFlashStore::Init()+0x8c>
 800e820:	2501      	movs	r5, #1
 800e822:	4b1f      	ldr	r3, [pc, #124]	; (800e8a0 <SpiFlashStore::Init()+0x130>)
 800e824:	601d      	str	r5, [r3, #0]
 800e826:	4628      	mov	r0, r5
 800e828:	b005      	add	sp, #20
 800e82a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e82e:	2d00      	cmp	r5, #0
 800e830:	d0dc      	beq.n	800e7ec <SpiFlashStore::Init()+0x7c>
 800e832:	f04f 0900 	mov.w	r9, #0
 800e836:	46c8      	mov	r8, r9
 800e838:	4631      	mov	r1, r6
 800e83a:	4638      	mov	r0, r7
 800e83c:	f7ff ff8a 	bl	800e754 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800e840:	5c23      	ldrb	r3, [r4, r0]
 800e842:	2bff      	cmp	r3, #255	; 0xff
 800e844:	d112      	bne.n	800e86c <SpiFlashStore::Init()+0xfc>
 800e846:	1823      	adds	r3, r4, r0
 800e848:	785a      	ldrb	r2, [r3, #1]
 800e84a:	2aff      	cmp	r2, #255	; 0xff
 800e84c:	d10e      	bne.n	800e86c <SpiFlashStore::Init()+0xfc>
 800e84e:	789a      	ldrb	r2, [r3, #2]
 800e850:	2aff      	cmp	r2, #255	; 0xff
 800e852:	d10b      	bne.n	800e86c <SpiFlashStore::Init()+0xfc>
 800e854:	78da      	ldrb	r2, [r3, #3]
 800e856:	2aff      	cmp	r2, #255	; 0xff
 800e858:	d108      	bne.n	800e86c <SpiFlashStore::Init()+0xfc>
 800e85a:	46a9      	mov	r9, r5
 800e85c:	f804 8000 	strb.w	r8, [r4, r0]
 800e860:	f883 8001 	strb.w	r8, [r3, #1]
 800e864:	f883 8002 	strb.w	r8, [r3, #2]
 800e868:	f883 8003 	strb.w	r8, [r3, #3]
 800e86c:	3601      	adds	r6, #1
 800e86e:	2e1c      	cmp	r6, #28
 800e870:	d1e2      	bne.n	800e838 <SpiFlashStore::Init()+0xc8>
 800e872:	f1b9 0f00 	cmp.w	r9, #0
 800e876:	d0d6      	beq.n	800e826 <SpiFlashStore::Init()+0xb6>
 800e878:	2201      	movs	r2, #1
 800e87a:	4b09      	ldr	r3, [pc, #36]	; (800e8a0 <SpiFlashStore::Init()+0x130>)
 800e87c:	601a      	str	r2, [r3, #0]
 800e87e:	e7d2      	b.n	800e826 <SpiFlashStore::Init()+0xb6>
 800e880:	f804 9002 	strb.w	r9, [r4, r2]
 800e884:	3201      	adds	r2, #1
 800e886:	e7c6      	b.n	800e816 <SpiFlashStore::Init()+0xa6>
 800e888:	2500      	movs	r5, #0
 800e88a:	e7cc      	b.n	800e826 <SpiFlashStore::Init()+0xb6>
 800e88c:	20002720 	andcs	r2, r0, r0, lsr #14
 800e890:	200026f0 	strdcs	r2, [r0], -r0
 800e894:	200016f0 	strdcs	r1, [r0], -r0
 800e898:	20002704 	andcs	r2, r0, r4, lsl #14
 800e89c:	080166d4 	stmdaeq	r1, {r2, r4, r6, r7, r9, sl, sp, lr}
 800e8a0:	200026fc 	strdcs	r2, [r0], -ip

0800e8a4 <SpiFlashStore::SpiFlashStore()>:
 800e8a4:	b538      	push	{r3, r4, r5, lr}
 800e8a6:	4b0d      	ldr	r3, [pc, #52]	; (800e8dc <SpiFlashStore::SpiFlashStore()+0x38>)
 800e8a8:	4604      	mov	r4, r0
 800e8aa:	6018      	str	r0, [r3, #0]
 800e8ac:	4b0c      	ldr	r3, [pc, #48]	; (800e8e0 <SpiFlashStore::SpiFlashStore()+0x3c>)
 800e8ae:	4d0d      	ldr	r5, [pc, #52]	; (800e8e4 <SpiFlashStore::SpiFlashStore()+0x40>)
 800e8b0:	681b      	ldr	r3, [r3, #0]
 800e8b2:	781b      	ldrb	r3, [r3, #0]
 800e8b4:	b113      	cbz	r3, 800e8bc <SpiFlashStore::SpiFlashStore()+0x18>
 800e8b6:	f7ff ff5b 	bl	800e770 <SpiFlashStore::Init()>
 800e8ba:	7028      	strb	r0, [r5, #0]
 800e8bc:	782b      	ldrb	r3, [r5, #0]
 800e8be:	b153      	cbz	r3, 800e8d6 <SpiFlashStore::SpiFlashStore()+0x32>
 800e8c0:	2320      	movs	r3, #32
 800e8c2:	2200      	movs	r2, #0
 800e8c4:	4908      	ldr	r1, [pc, #32]	; (800e8e8 <SpiFlashStore::SpiFlashStore()+0x44>)
 800e8c6:	f851 0b04 	ldr.w	r0, [r1], #4
 800e8ca:	3201      	adds	r2, #1
 800e8cc:	2a1c      	cmp	r2, #28
 800e8ce:	4403      	add	r3, r0
 800e8d0:	d1f9      	bne.n	800e8c6 <SpiFlashStore::SpiFlashStore()+0x22>
 800e8d2:	4a06      	ldr	r2, [pc, #24]	; (800e8ec <SpiFlashStore::SpiFlashStore()+0x48>)
 800e8d4:	6013      	str	r3, [r2, #0]
 800e8d6:	4620      	mov	r0, r4
 800e8d8:	bd38      	pop	{r3, r4, r5, pc}
 800e8da:	bf00      	nop
 800e8dc:	20002700 	andcs	r2, r0, r0, lsl #14
 800e8e0:	20002720 	andcs	r2, r0, r0, lsr #14
 800e8e4:	200026f4 	strdcs	r2, [r0], -r4
 800e8e8:	080166d4 	stmdaeq	r1, {r2, r4, r6, r7, r9, sl, sp, lr}
 800e8ec:	200026f8 	strdcs	r2, [r0], -r8

0800e8f0 <SpiFlashStore::ResetSetList(spiflashstore::Store)>:
 800e8f0:	b508      	push	{r3, lr}
 800e8f2:	f7ff ff2f 	bl	800e754 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800e8f6:	2300      	movs	r3, #0
 800e8f8:	4904      	ldr	r1, [pc, #16]	; (800e90c <SpiFlashStore::ResetSetList(spiflashstore::Store)+0x1c>)
 800e8fa:	1842      	adds	r2, r0, r1
 800e8fc:	540b      	strb	r3, [r1, r0]
 800e8fe:	7053      	strb	r3, [r2, #1]
 800e900:	7093      	strb	r3, [r2, #2]
 800e902:	70d3      	strb	r3, [r2, #3]
 800e904:	2201      	movs	r2, #1
 800e906:	4b02      	ldr	r3, [pc, #8]	; (800e910 <SpiFlashStore::ResetSetList(spiflashstore::Store)+0x20>)
 800e908:	601a      	str	r2, [r3, #0]
 800e90a:	bd08      	pop	{r3, pc}
 800e90c:	200016f0 	strdcs	r1, [r0], -r0
 800e910:	200026fc 	strdcs	r2, [r0], -ip

0800e914 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>:
 800e914:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e918:	461c      	mov	r4, r3
 800e91a:	4b19      	ldr	r3, [pc, #100]	; (800e980 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x6c>)
 800e91c:	4615      	mov	r5, r2
 800e91e:	781f      	ldrb	r7, [r3, #0]
 800e920:	9e07      	ldr	r6, [sp, #28]
 800e922:	b307      	cbz	r7, 800e966 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800e924:	f7ff ff16 	bl	800e754 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800e928:	f04f 0c00 	mov.w	ip, #0
 800e92c:	4a15      	ldr	r2, [pc, #84]	; (800e984 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x70>)
 800e92e:	1941      	adds	r1, r0, r5
 800e930:	1e63      	subs	r3, r4, #1
 800e932:	9c06      	ldr	r4, [sp, #24]
 800e934:	4411      	add	r1, r2
 800e936:	440c      	add	r4, r1
 800e938:	42a1      	cmp	r1, r4
 800e93a:	d116      	bne.n	800e96a <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x56>
 800e93c:	f1bc 0f00 	cmp.w	ip, #0
 800e940:	d011      	beq.n	800e966 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800e942:	4b11      	ldr	r3, [pc, #68]	; (800e988 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x74>)
 800e944:	6819      	ldr	r1, [r3, #0]
 800e946:	b109      	cbz	r1, 800e94c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x38>
 800e948:	2906      	cmp	r1, #6
 800e94a:	d101      	bne.n	800e950 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x3c>
 800e94c:	2101      	movs	r1, #1
 800e94e:	6019      	str	r1, [r3, #0]
 800e950:	4b0e      	ldr	r3, [pc, #56]	; (800e98c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x78>)
 800e952:	6819      	ldr	r1, [r3, #0]
 800e954:	4b0e      	ldr	r3, [pc, #56]	; (800e990 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x7c>)
 800e956:	6019      	str	r1, [r3, #0]
 800e958:	b12d      	cbz	r5, 800e966 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800e95a:	b126      	cbz	r6, 800e966 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800e95c:	9b08      	ldr	r3, [sp, #32]
 800e95e:	4418      	add	r0, r3
 800e960:	5813      	ldr	r3, [r2, r0]
 800e962:	4333      	orrs	r3, r6
 800e964:	5013      	str	r3, [r2, r0]
 800e966:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e96a:	f891 8000 	ldrb.w	r8, [r1]
 800e96e:	f813 ef01 	ldrb.w	lr, [r3, #1]!
 800e972:	3101      	adds	r1, #1
 800e974:	45f0      	cmp	r8, lr
 800e976:	bf1c      	itt	ne
 800e978:	f801 ec01 	strbne.w	lr, [r1, #-1]
 800e97c:	46bc      	movne	ip, r7
 800e97e:	e7db      	b.n	800e938 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x24>
 800e980:	200026f4 	strdcs	r2, [r0], -r4
 800e984:	200016f0 	strdcs	r1, [r0], -r0
 800e988:	200026fc 	strdcs	r2, [r0], -ip
 800e98c:	2000a744 	andcs	sl, r0, r4, asr #14
 800e990:	200016ec 	andcs	r1, r0, ip, ror #13

0800e994 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>:
 800e994:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800e998:	461d      	mov	r5, r3
 800e99a:	4b11      	ldr	r3, [pc, #68]	; (800e9e0 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x4c>)
 800e99c:	4607      	mov	r7, r0
 800e99e:	781b      	ldrb	r3, [r3, #0]
 800e9a0:	4614      	mov	r4, r2
 800e9a2:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 800e9a6:	b1c3      	cbz	r3, 800e9da <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x46>
 800e9a8:	f7ff fed4 	bl	800e754 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800e9ac:	4a0d      	ldr	r2, [pc, #52]	; (800e9e4 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x50>)
 800e9ae:	eb00 0608 	add.w	r6, r0, r8
 800e9b2:	5990      	ldr	r0, [r2, r6]
 800e9b4:	18b3      	adds	r3, r6, r2
 800e9b6:	b140      	cbz	r0, 800e9ca <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x36>
 800e9b8:	3c01      	subs	r4, #1
 800e9ba:	441d      	add	r5, r3
 800e9bc:	429d      	cmp	r5, r3
 800e9be:	d00c      	beq.n	800e9da <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x46>
 800e9c0:	f813 2b01 	ldrb.w	r2, [r3], #1
 800e9c4:	f804 2f01 	strb.w	r2, [r4, #1]!
 800e9c8:	e7f8      	b.n	800e9bc <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x28>
 800e9ca:	e9cd 0001 	strd	r0, r0, [sp, #4]
 800e9ce:	4623      	mov	r3, r4
 800e9d0:	4642      	mov	r2, r8
 800e9d2:	4638      	mov	r0, r7
 800e9d4:	9500      	str	r5, [sp, #0]
 800e9d6:	f7ff ff9d 	bl	800e914 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e9da:	b004      	add	sp, #16
 800e9dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e9e0:	200026f4 	strdcs	r2, [r0], -r4
 800e9e4:	200016f0 	strdcs	r1, [r0], -r0

0800e9e8 <SpiFlashStore::Flash()>:
 800e9e8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e9ea:	4c25      	ldr	r4, [pc, #148]	; (800ea80 <SpiFlashStore::Flash()+0x98>)
 800e9ec:	6820      	ldr	r0, [r4, #0]
 800e9ee:	2800      	cmp	r0, #0
 800e9f0:	d043      	beq.n	800ea7a <SpiFlashStore::Flash()+0x92>
 800e9f2:	3801      	subs	r0, #1
 800e9f4:	2805      	cmp	r0, #5
 800e9f6:	d831      	bhi.n	800ea5c <SpiFlashStore::Flash()+0x74>
 800e9f8:	e8df f000 	tbb	[pc, r0]
 800e9fc:	2e140b03 	vnmlscs.f64	d0, d4, d3
 800ea00:	4b203025 	blmi	881aa9c <__exidx_end+0x80392c>
 800ea04:	681a      	ldr	r2, [r3, #0]
 800ea06:	4b20      	ldr	r3, [pc, #128]	; (800ea88 <SpiFlashStore::Flash()+0xa0>)
 800ea08:	601a      	str	r2, [r3, #0]
 800ea0a:	2302      	movs	r3, #2
 800ea0c:	6023      	str	r3, [r4, #0]
 800ea0e:	2001      	movs	r0, #1
 800ea10:	e033      	b.n	800ea7a <SpiFlashStore::Flash()+0x92>
 800ea12:	4b1c      	ldr	r3, [pc, #112]	; (800ea84 <SpiFlashStore::Flash()+0x9c>)
 800ea14:	4a1c      	ldr	r2, [pc, #112]	; (800ea88 <SpiFlashStore::Flash()+0xa0>)
 800ea16:	681b      	ldr	r3, [r3, #0]
 800ea18:	6812      	ldr	r2, [r2, #0]
 800ea1a:	1a9b      	subs	r3, r3, r2
 800ea1c:	2b63      	cmp	r3, #99	; 0x63
 800ea1e:	d9f6      	bls.n	800ea0e <SpiFlashStore::Flash()+0x26>
 800ea20:	2303      	movs	r3, #3
 800ea22:	e7f3      	b.n	800ea0c <SpiFlashStore::Flash()+0x24>
 800ea24:	4919      	ldr	r1, [pc, #100]	; (800ea8c <SpiFlashStore::Flash()+0xa4>)
 800ea26:	481a      	ldr	r0, [pc, #104]	; (800ea90 <SpiFlashStore::Flash()+0xa8>)
 800ea28:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 800ea2c:	6809      	ldr	r1, [r1, #0]
 800ea2e:	6800      	ldr	r0, [r0, #0]
 800ea30:	ab03      	add	r3, sp, #12
 800ea32:	f000 fa29 	bl	800ee88 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)>
 800ea36:	2800      	cmp	r0, #0
 800ea38:	d0e9      	beq.n	800ea0e <SpiFlashStore::Flash()+0x26>
 800ea3a:	4b12      	ldr	r3, [pc, #72]	; (800ea84 <SpiFlashStore::Flash()+0x9c>)
 800ea3c:	681a      	ldr	r2, [r3, #0]
 800ea3e:	4b12      	ldr	r3, [pc, #72]	; (800ea88 <SpiFlashStore::Flash()+0xa0>)
 800ea40:	601a      	str	r2, [r3, #0]
 800ea42:	2305      	movs	r3, #5
 800ea44:	e7e2      	b.n	800ea0c <SpiFlashStore::Flash()+0x24>
 800ea46:	4b0f      	ldr	r3, [pc, #60]	; (800ea84 <SpiFlashStore::Flash()+0x9c>)
 800ea48:	4a0f      	ldr	r2, [pc, #60]	; (800ea88 <SpiFlashStore::Flash()+0xa0>)
 800ea4a:	681b      	ldr	r3, [r3, #0]
 800ea4c:	6812      	ldr	r2, [r2, #0]
 800ea4e:	1a9b      	subs	r3, r3, r2
 800ea50:	2b63      	cmp	r3, #99	; 0x63
 800ea52:	d9dc      	bls.n	800ea0e <SpiFlashStore::Flash()+0x26>
 800ea54:	2304      	movs	r3, #4
 800ea56:	e7d9      	b.n	800ea0c <SpiFlashStore::Flash()+0x24>
 800ea58:	2306      	movs	r3, #6
 800ea5a:	e7d7      	b.n	800ea0c <SpiFlashStore::Flash()+0x24>
 800ea5c:	ab03      	add	r3, sp, #12
 800ea5e:	4a0d      	ldr	r2, [pc, #52]	; (800ea94 <SpiFlashStore::Flash()+0xac>)
 800ea60:	490a      	ldr	r1, [pc, #40]	; (800ea8c <SpiFlashStore::Flash()+0xa4>)
 800ea62:	480b      	ldr	r0, [pc, #44]	; (800ea90 <SpiFlashStore::Flash()+0xa8>)
 800ea64:	9300      	str	r3, [sp, #0]
 800ea66:	6812      	ldr	r2, [r2, #0]
 800ea68:	4b0b      	ldr	r3, [pc, #44]	; (800ea98 <SpiFlashStore::Flash()+0xb0>)
 800ea6a:	6809      	ldr	r1, [r1, #0]
 800ea6c:	6800      	ldr	r0, [r0, #0]
 800ea6e:	f000 faab 	bl	800efc8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)>
 800ea72:	2800      	cmp	r0, #0
 800ea74:	d0cb      	beq.n	800ea0e <SpiFlashStore::Flash()+0x26>
 800ea76:	2000      	movs	r0, #0
 800ea78:	6020      	str	r0, [r4, #0]
 800ea7a:	b004      	add	sp, #16
 800ea7c:	bd10      	pop	{r4, pc}
 800ea7e:	bf00      	nop
 800ea80:	200026fc 	strdcs	r2, [r0], -ip
 800ea84:	2000a744 	andcs	sl, r0, r4, asr #14
 800ea88:	200016ec 	andcs	r1, r0, ip, ror #13
 800ea8c:	200026f0 	strdcs	r2, [r0], -r0
 800ea90:	20002720 	andcs	r2, r0, r0, lsr #14
 800ea94:	200026f8 	strdcs	r2, [r0], -r8
 800ea98:	200016f0 	strdcs	r1, [r0], -r0

0800ea9c <StoreDisplayUdf::~StoreDisplayUdf()>:
 800ea9c:	4770      	bx	lr
	...

0800eaa0 <StoreDisplayUdf::Copy(displayudfparams::Params*)>:
 800eaa0:	2300      	movs	r3, #0
 800eaa2:	b507      	push	{r0, r1, r2, lr}
 800eaa4:	4805      	ldr	r0, [pc, #20]	; (800eabc <StoreDisplayUdf::Copy(displayudfparams::Params*)+0x1c>)
 800eaa6:	9300      	str	r3, [sp, #0]
 800eaa8:	460a      	mov	r2, r1
 800eaaa:	2322      	movs	r3, #34	; 0x22
 800eaac:	210f      	movs	r1, #15
 800eaae:	6800      	ldr	r0, [r0, #0]
 800eab0:	f7ff ff70 	bl	800e994 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800eab4:	b003      	add	sp, #12
 800eab6:	f85d fb04 	ldr.w	pc, [sp], #4
 800eaba:	bf00      	nop
 800eabc:	20002700 	andcs	r2, r0, r0, lsl #14

0800eac0 <StoreDisplayUdf::Update(displayudfparams::Params const*)>:
 800eac0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800eac2:	2200      	movs	r2, #0
 800eac4:	460b      	mov	r3, r1
 800eac6:	2122      	movs	r1, #34	; 0x22
 800eac8:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800eacc:	4804      	ldr	r0, [pc, #16]	; (800eae0 <StoreDisplayUdf::Update(displayudfparams::Params const*)+0x20>)
 800eace:	9100      	str	r1, [sp, #0]
 800ead0:	6800      	ldr	r0, [r0, #0]
 800ead2:	210f      	movs	r1, #15
 800ead4:	f7ff ff1e 	bl	800e914 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800ead8:	b005      	add	sp, #20
 800eada:	f85d fb04 	ldr.w	pc, [sp], #4
 800eade:	bf00      	nop
 800eae0:	20002700 	andcs	r2, r0, r0, lsl #14

0800eae4 <StoreDisplayUdf::~StoreDisplayUdf()>:
 800eae4:	b510      	push	{r4, lr}
 800eae6:	4604      	mov	r4, r0
 800eae8:	f003 ff32 	bl	8012950 <operator delete(void*)>
 800eaec:	4620      	mov	r0, r4
 800eaee:	bd10      	pop	{r4, pc}

0800eaf0 <StoreDisplayUdf::StoreDisplayUdf()>:
 800eaf0:	4a02      	ldr	r2, [pc, #8]	; (800eafc <StoreDisplayUdf::StoreDisplayUdf()+0xc>)
 800eaf2:	6002      	str	r2, [r0, #0]
 800eaf4:	4a02      	ldr	r2, [pc, #8]	; (800eb00 <StoreDisplayUdf::StoreDisplayUdf()+0x10>)
 800eaf6:	6010      	str	r0, [r2, #0]
 800eaf8:	4770      	bx	lr
 800eafa:	bf00      	nop
 800eafc:	0801674c 	stmdaeq	r1, {r2, r3, r6, r8, r9, sl, sp, lr}
 800eb00:	20002708 	andcs	r2, r0, r8, lsl #14

0800eb04 <StoreDmxSend::~StoreDmxSend()>:
 800eb04:	4770      	bx	lr
	...

0800eb08 <StoreDmxSend::Copy(TDmxParams*)>:
 800eb08:	2300      	movs	r3, #0
 800eb0a:	b507      	push	{r0, r1, r2, lr}
 800eb0c:	4805      	ldr	r0, [pc, #20]	; (800eb24 <StoreDmxSend::Copy(TDmxParams*)+0x1c>)
 800eb0e:	9300      	str	r3, [sp, #0]
 800eb10:	460a      	mov	r2, r1
 800eb12:	230a      	movs	r3, #10
 800eb14:	2102      	movs	r1, #2
 800eb16:	6800      	ldr	r0, [r0, #0]
 800eb18:	f7ff ff3c 	bl	800e994 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800eb1c:	b003      	add	sp, #12
 800eb1e:	f85d fb04 	ldr.w	pc, [sp], #4
 800eb22:	bf00      	nop
 800eb24:	20002700 	andcs	r2, r0, r0, lsl #14

0800eb28 <StoreDmxSend::Update(TDmxParams const*)>:
 800eb28:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800eb2a:	2200      	movs	r2, #0
 800eb2c:	460b      	mov	r3, r1
 800eb2e:	210a      	movs	r1, #10
 800eb30:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800eb34:	4804      	ldr	r0, [pc, #16]	; (800eb48 <StoreDmxSend::Update(TDmxParams const*)+0x20>)
 800eb36:	9100      	str	r1, [sp, #0]
 800eb38:	6800      	ldr	r0, [r0, #0]
 800eb3a:	2102      	movs	r1, #2
 800eb3c:	f7ff feea 	bl	800e914 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800eb40:	b005      	add	sp, #20
 800eb42:	f85d fb04 	ldr.w	pc, [sp], #4
 800eb46:	bf00      	nop
 800eb48:	20002700 	andcs	r2, r0, r0, lsl #14

0800eb4c <StoreDmxSend::~StoreDmxSend()>:
 800eb4c:	b510      	push	{r4, lr}
 800eb4e:	4604      	mov	r4, r0
 800eb50:	f003 fefe 	bl	8012950 <operator delete(void*)>
 800eb54:	4620      	mov	r0, r4
 800eb56:	bd10      	pop	{r4, pc}

0800eb58 <StoreDmxSend::StoreDmxSend()>:
 800eb58:	4a02      	ldr	r2, [pc, #8]	; (800eb64 <StoreDmxSend::StoreDmxSend()+0xc>)
 800eb5a:	6002      	str	r2, [r0, #0]
 800eb5c:	4a02      	ldr	r2, [pc, #8]	; (800eb68 <StoreDmxSend::StoreDmxSend()+0x10>)
 800eb5e:	6010      	str	r0, [r2, #0]
 800eb60:	4770      	bx	lr
 800eb62:	bf00      	nop
 800eb64:	08016764 	stmdaeq	r1, {r2, r5, r6, r8, r9, sl, sp, lr}
 800eb68:	2000270c 	andcs	r2, r0, ip, lsl #14

0800eb6c <StoreE131::~StoreE131()>:
 800eb6c:	4770      	bx	lr
	...

0800eb70 <StoreE131::Copy(e131params::Params*)>:
 800eb70:	2300      	movs	r3, #0
 800eb72:	b507      	push	{r0, r1, r2, lr}
 800eb74:	4805      	ldr	r0, [pc, #20]	; (800eb8c <StoreE131::Copy(e131params::Params*)+0x1c>)
 800eb76:	9300      	str	r3, [sp, #0]
 800eb78:	460a      	mov	r2, r1
 800eb7a:	231f      	movs	r3, #31
 800eb7c:	2104      	movs	r1, #4
 800eb7e:	6800      	ldr	r0, [r0, #0]
 800eb80:	f7ff ff08 	bl	800e994 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800eb84:	b003      	add	sp, #12
 800eb86:	f85d fb04 	ldr.w	pc, [sp], #4
 800eb8a:	bf00      	nop
 800eb8c:	20002700 	andcs	r2, r0, r0, lsl #14

0800eb90 <StoreE131::Update(e131params::Params const*)>:
 800eb90:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800eb92:	2200      	movs	r2, #0
 800eb94:	460b      	mov	r3, r1
 800eb96:	211f      	movs	r1, #31
 800eb98:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800eb9c:	4804      	ldr	r0, [pc, #16]	; (800ebb0 <StoreE131::Update(e131params::Params const*)+0x20>)
 800eb9e:	9100      	str	r1, [sp, #0]
 800eba0:	6800      	ldr	r0, [r0, #0]
 800eba2:	2104      	movs	r1, #4
 800eba4:	f7ff feb6 	bl	800e914 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800eba8:	b005      	add	sp, #20
 800ebaa:	f85d fb04 	ldr.w	pc, [sp], #4
 800ebae:	bf00      	nop
 800ebb0:	20002700 	andcs	r2, r0, r0, lsl #14

0800ebb4 <StoreE131::~StoreE131()>:
 800ebb4:	b510      	push	{r4, lr}
 800ebb6:	4604      	mov	r4, r0
 800ebb8:	f003 feca 	bl	8012950 <operator delete(void*)>
 800ebbc:	4620      	mov	r0, r4
 800ebbe:	bd10      	pop	{r4, pc}

0800ebc0 <StoreE131::StoreE131()>:
 800ebc0:	4a02      	ldr	r2, [pc, #8]	; (800ebcc <StoreE131::StoreE131()+0xc>)
 800ebc2:	6002      	str	r2, [r0, #0]
 800ebc4:	4a02      	ldr	r2, [pc, #8]	; (800ebd0 <StoreE131::StoreE131()+0x10>)
 800ebc6:	6010      	str	r0, [r2, #0]
 800ebc8:	4770      	bx	lr
 800ebca:	bf00      	nop
 800ebcc:	0801677c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r8, r9, sl, sp, lr}
 800ebd0:	20002710 	andcs	r2, r0, r0, lsl r7

0800ebd4 <StoreNetwork::~StoreNetwork()>:
 800ebd4:	4770      	bx	lr

0800ebd6 <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 800ebd6:	3804      	subs	r0, #4
 800ebd8:	4770      	bx	lr
	...

0800ebdc <StoreNetwork::Update(TNetworkParams const*)>:
 800ebdc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800ebde:	2200      	movs	r2, #0
 800ebe0:	460b      	mov	r3, r1
 800ebe2:	215e      	movs	r1, #94	; 0x5e
 800ebe4:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800ebe8:	4804      	ldr	r0, [pc, #16]	; (800ebfc <StoreNetwork::Update(TNetworkParams const*)+0x20>)
 800ebea:	9100      	str	r1, [sp, #0]
 800ebec:	6800      	ldr	r0, [r0, #0]
 800ebee:	4611      	mov	r1, r2
 800ebf0:	f7ff fe90 	bl	800e914 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800ebf4:	b005      	add	sp, #20
 800ebf6:	f85d fb04 	ldr.w	pc, [sp], #4
 800ebfa:	bf00      	nop
 800ebfc:	20002700 	andcs	r2, r0, r0, lsl #14

0800ec00 <StoreNetwork::SaveGatewayIp(unsigned int)>:
 800ec00:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800ec02:	2308      	movs	r3, #8
 800ec04:	9105      	str	r1, [sp, #20]
 800ec06:	2100      	movs	r1, #0
 800ec08:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800ec0c:	2304      	movs	r3, #4
 800ec0e:	4805      	ldr	r0, [pc, #20]	; (800ec24 <StoreNetwork::SaveGatewayIp(unsigned int)+0x24>)
 800ec10:	9300      	str	r3, [sp, #0]
 800ec12:	220c      	movs	r2, #12
 800ec14:	6800      	ldr	r0, [r0, #0]
 800ec16:	ab05      	add	r3, sp, #20
 800ec18:	f7ff fe7c 	bl	800e914 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800ec1c:	b007      	add	sp, #28
 800ec1e:	f85d fb04 	ldr.w	pc, [sp], #4
 800ec22:	bf00      	nop
 800ec24:	20002700 	andcs	r2, r0, r0, lsl #14

0800ec28 <non-virtual thunk to StoreNetwork::SaveGatewayIp(unsigned int)>:
 800ec28:	f1a0 0004 	sub.w	r0, r0, #4
 800ec2c:	e7e8      	b.n	800ec00 <StoreNetwork::SaveGatewayIp(unsigned int)>
 800ec2e:	bf00      	nop

0800ec30 <StoreNetwork::SaveNetMask(unsigned int)>:
 800ec30:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800ec32:	2304      	movs	r3, #4
 800ec34:	9105      	str	r1, [sp, #20]
 800ec36:	2100      	movs	r1, #0
 800ec38:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800ec3c:	4804      	ldr	r0, [pc, #16]	; (800ec50 <StoreNetwork::SaveNetMask(unsigned int)+0x20>)
 800ec3e:	9300      	str	r3, [sp, #0]
 800ec40:	2208      	movs	r2, #8
 800ec42:	6800      	ldr	r0, [r0, #0]
 800ec44:	ab05      	add	r3, sp, #20
 800ec46:	f7ff fe65 	bl	800e914 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800ec4a:	b007      	add	sp, #28
 800ec4c:	f85d fb04 	ldr.w	pc, [sp], #4
 800ec50:	20002700 	andcs	r2, r0, r0, lsl #14

0800ec54 <non-virtual thunk to StoreNetwork::SaveNetMask(unsigned int)>:
 800ec54:	f1a0 0004 	sub.w	r0, r0, #4
 800ec58:	e7ea      	b.n	800ec30 <StoreNetwork::SaveNetMask(unsigned int)>
 800ec5a:	bf00      	nop

0800ec5c <StoreNetwork::SaveIp(unsigned int)>:
 800ec5c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800ec5e:	2302      	movs	r3, #2
 800ec60:	9105      	str	r1, [sp, #20]
 800ec62:	2100      	movs	r1, #0
 800ec64:	2204      	movs	r2, #4
 800ec66:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800ec6a:	4804      	ldr	r0, [pc, #16]	; (800ec7c <StoreNetwork::SaveIp(unsigned int)+0x20>)
 800ec6c:	9200      	str	r2, [sp, #0]
 800ec6e:	6800      	ldr	r0, [r0, #0]
 800ec70:	ab05      	add	r3, sp, #20
 800ec72:	f7ff fe4f 	bl	800e914 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800ec76:	b007      	add	sp, #28
 800ec78:	f85d fb04 	ldr.w	pc, [sp], #4
 800ec7c:	20002700 	andcs	r2, r0, r0, lsl #14

0800ec80 <non-virtual thunk to StoreNetwork::SaveIp(unsigned int)>:
 800ec80:	f1a0 0004 	sub.w	r0, r0, #4
 800ec84:	e7ea      	b.n	800ec5c <StoreNetwork::SaveIp(unsigned int)>
 800ec86:	bf00      	nop

0800ec88 <StoreNetwork::SaveHostName(char const*, unsigned int)>:
 800ec88:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800ec8a:	460b      	mov	r3, r1
 800ec8c:	2020      	movs	r0, #32
 800ec8e:	2100      	movs	r1, #0
 800ec90:	2a40      	cmp	r2, #64	; 0x40
 800ec92:	bf28      	it	cs
 800ec94:	2240      	movcs	r2, #64	; 0x40
 800ec96:	e9cd 0101 	strd	r0, r1, [sp, #4]
 800ec9a:	4804      	ldr	r0, [pc, #16]	; (800ecac <StoreNetwork::SaveHostName(char const*, unsigned int)+0x24>)
 800ec9c:	9200      	str	r2, [sp, #0]
 800ec9e:	6800      	ldr	r0, [r0, #0]
 800eca0:	2215      	movs	r2, #21
 800eca2:	f7ff fe37 	bl	800e914 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800eca6:	b005      	add	sp, #20
 800eca8:	f85d fb04 	ldr.w	pc, [sp], #4
 800ecac:	20002700 	andcs	r2, r0, r0, lsl #14

0800ecb0 <non-virtual thunk to StoreNetwork::SaveHostName(char const*, unsigned int)>:
 800ecb0:	f1a0 0004 	sub.w	r0, r0, #4
 800ecb4:	e7e8      	b.n	800ec88 <StoreNetwork::SaveHostName(char const*, unsigned int)>
 800ecb6:	bf00      	nop

0800ecb8 <StoreNetwork::~StoreNetwork()>:
 800ecb8:	b510      	push	{r4, lr}
 800ecba:	4604      	mov	r4, r0
 800ecbc:	f003 fe48 	bl	8012950 <operator delete(void*)>
 800ecc0:	4620      	mov	r0, r4
 800ecc2:	bd10      	pop	{r4, pc}

0800ecc4 <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 800ecc4:	f1a0 0004 	sub.w	r0, r0, #4
 800ecc8:	e7f6      	b.n	800ecb8 <StoreNetwork::~StoreNetwork()>
	...

0800eccc <StoreNetwork::Copy(TNetworkParams*)>:
 800eccc:	b507      	push	{r0, r1, r2, lr}
 800ecce:	460a      	mov	r2, r1
 800ecd0:	2100      	movs	r1, #0
 800ecd2:	4804      	ldr	r0, [pc, #16]	; (800ece4 <StoreNetwork::Copy(TNetworkParams*)+0x18>)
 800ecd4:	9100      	str	r1, [sp, #0]
 800ecd6:	235e      	movs	r3, #94	; 0x5e
 800ecd8:	6800      	ldr	r0, [r0, #0]
 800ecda:	f7ff fe5b 	bl	800e994 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800ecde:	b003      	add	sp, #12
 800ece0:	f85d fb04 	ldr.w	pc, [sp], #4
 800ece4:	20002700 	andcs	r2, r0, r0, lsl #14

0800ece8 <StoreNetwork::StoreNetwork()>:
 800ece8:	4a03      	ldr	r2, [pc, #12]	; (800ecf8 <StoreNetwork::StoreNetwork()+0x10>)
 800ecea:	6002      	str	r2, [r0, #0]
 800ecec:	322c      	adds	r2, #44	; 0x2c
 800ecee:	6042      	str	r2, [r0, #4]
 800ecf0:	4a02      	ldr	r2, [pc, #8]	; (800ecfc <StoreNetwork::StoreNetwork()+0x14>)
 800ecf2:	6010      	str	r0, [r2, #0]
 800ecf4:	4770      	bx	lr
 800ecf6:	bf00      	nop
 800ecf8:	08016794 	stmdaeq	r1, {r2, r4, r7, r8, r9, sl, sp, lr}
 800ecfc:	20002714 	andcs	r2, r0, r4, lsl r7

0800ed00 <StoreRDMDevice::~StoreRDMDevice()>:
 800ed00:	4770      	bx	lr

0800ed02 <non-virtual thunk to StoreRDMDevice::~StoreRDMDevice()>:
 800ed02:	3804      	subs	r0, #4
 800ed04:	4770      	bx	lr
	...

0800ed08 <StoreRDMDevice::Update(TRDMDeviceParams const*)>:
 800ed08:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800ed0a:	2200      	movs	r2, #0
 800ed0c:	460b      	mov	r3, r1
 800ed0e:	2129      	movs	r1, #41	; 0x29
 800ed10:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800ed14:	4804      	ldr	r0, [pc, #16]	; (800ed28 <StoreRDMDevice::Update(TRDMDeviceParams const*)+0x20>)
 800ed16:	9100      	str	r1, [sp, #0]
 800ed18:	6800      	ldr	r0, [r0, #0]
 800ed1a:	210b      	movs	r1, #11
 800ed1c:	f7ff fdfa 	bl	800e914 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800ed20:	b005      	add	sp, #20
 800ed22:	f85d fb04 	ldr.w	pc, [sp], #4
 800ed26:	bf00      	nop
 800ed28:	20002700 	andcs	r2, r0, r0, lsl #14

0800ed2c <StoreRDMDevice::SaveLabel(char const*, unsigned char)>:
 800ed2c:	b570      	push	{r4, r5, r6, lr}
 800ed2e:	2401      	movs	r4, #1
 800ed30:	2600      	movs	r6, #0
 800ed32:	4d0c      	ldr	r5, [pc, #48]	; (800ed64 <StoreRDMDevice::SaveLabel(char const*, unsigned char)+0x38>)
 800ed34:	b086      	sub	sp, #24
 800ed36:	460b      	mov	r3, r1
 800ed38:	6828      	ldr	r0, [r5, #0]
 800ed3a:	f88d 2017 	strb.w	r2, [sp, #23]
 800ed3e:	9200      	str	r2, [sp, #0]
 800ed40:	210b      	movs	r1, #11
 800ed42:	2204      	movs	r2, #4
 800ed44:	e9cd 4601 	strd	r4, r6, [sp, #4]
 800ed48:	f7ff fde4 	bl	800e914 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800ed4c:	2224      	movs	r2, #36	; 0x24
 800ed4e:	210b      	movs	r1, #11
 800ed50:	e9cd 4601 	strd	r4, r6, [sp, #4]
 800ed54:	6828      	ldr	r0, [r5, #0]
 800ed56:	9400      	str	r4, [sp, #0]
 800ed58:	f10d 0317 	add.w	r3, sp, #23
 800ed5c:	f7ff fdda 	bl	800e914 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800ed60:	b006      	add	sp, #24
 800ed62:	bd70      	pop	{r4, r5, r6, pc}
 800ed64:	20002700 	andcs	r2, r0, r0, lsl #14

0800ed68 <non-virtual thunk to StoreRDMDevice::SaveLabel(char const*, unsigned char)>:
 800ed68:	f1a0 0004 	sub.w	r0, r0, #4
 800ed6c:	e7de      	b.n	800ed2c <StoreRDMDevice::SaveLabel(char const*, unsigned char)>
 800ed6e:	bf00      	nop

0800ed70 <StoreRDMDevice::~StoreRDMDevice()>:
 800ed70:	b510      	push	{r4, lr}
 800ed72:	4604      	mov	r4, r0
 800ed74:	f003 fdec 	bl	8012950 <operator delete(void*)>
 800ed78:	4620      	mov	r0, r4
 800ed7a:	bd10      	pop	{r4, pc}

0800ed7c <non-virtual thunk to StoreRDMDevice::~StoreRDMDevice()>:
 800ed7c:	f1a0 0004 	sub.w	r0, r0, #4
 800ed80:	e7f6      	b.n	800ed70 <StoreRDMDevice::~StoreRDMDevice()>
	...

0800ed84 <StoreRDMDevice::Copy(TRDMDeviceParams*)>:
 800ed84:	2300      	movs	r3, #0
 800ed86:	b507      	push	{r0, r1, r2, lr}
 800ed88:	4805      	ldr	r0, [pc, #20]	; (800eda0 <StoreRDMDevice::Copy(TRDMDeviceParams*)+0x1c>)
 800ed8a:	9300      	str	r3, [sp, #0]
 800ed8c:	460a      	mov	r2, r1
 800ed8e:	2329      	movs	r3, #41	; 0x29
 800ed90:	210b      	movs	r1, #11
 800ed92:	6800      	ldr	r0, [r0, #0]
 800ed94:	f7ff fdfe 	bl	800e994 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800ed98:	b003      	add	sp, #12
 800ed9a:	f85d fb04 	ldr.w	pc, [sp], #4
 800ed9e:	bf00      	nop
 800eda0:	20002700 	andcs	r2, r0, r0, lsl #14

0800eda4 <StoreRDMDevice::StoreRDMDevice()>:
 800eda4:	4a03      	ldr	r2, [pc, #12]	; (800edb4 <StoreRDMDevice::StoreRDMDevice()+0x10>)
 800eda6:	6002      	str	r2, [r0, #0]
 800eda8:	321c      	adds	r2, #28
 800edaa:	6042      	str	r2, [r0, #4]
 800edac:	4a02      	ldr	r2, [pc, #8]	; (800edb8 <StoreRDMDevice::StoreRDMDevice()+0x14>)
 800edae:	6010      	str	r0, [r2, #0]
 800edb0:	4770      	bx	lr
 800edb2:	bf00      	nop
 800edb4:	080167e4 	stmdaeq	r1, {r2, r5, r6, r7, r8, r9, sl, sp, lr}
 800edb8:	20002718 	andcs	r2, r0, r8, lsl r7

0800edbc <StoreRemoteConfig::~StoreRemoteConfig()>:
 800edbc:	4770      	bx	lr
	...

0800edc0 <StoreRemoteConfig::Copy(TRemoteConfigParams*)>:
 800edc0:	2300      	movs	r3, #0
 800edc2:	b507      	push	{r0, r1, r2, lr}
 800edc4:	4805      	ldr	r0, [pc, #20]	; (800eddc <StoreRemoteConfig::Copy(TRemoteConfigParams*)+0x1c>)
 800edc6:	9300      	str	r3, [sp, #0]
 800edc8:	460a      	mov	r2, r1
 800edca:	2320      	movs	r3, #32
 800edcc:	210c      	movs	r1, #12
 800edce:	6800      	ldr	r0, [r0, #0]
 800edd0:	f7ff fde0 	bl	800e994 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800edd4:	b003      	add	sp, #12
 800edd6:	f85d fb04 	ldr.w	pc, [sp], #4
 800edda:	bf00      	nop
 800eddc:	20002700 	andcs	r2, r0, r0, lsl #14

0800ede0 <StoreRemoteConfig::Update(TRemoteConfigParams const*)>:
 800ede0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800ede2:	2200      	movs	r2, #0
 800ede4:	460b      	mov	r3, r1
 800ede6:	2120      	movs	r1, #32
 800ede8:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800edec:	4804      	ldr	r0, [pc, #16]	; (800ee00 <StoreRemoteConfig::Update(TRemoteConfigParams const*)+0x20>)
 800edee:	9100      	str	r1, [sp, #0]
 800edf0:	6800      	ldr	r0, [r0, #0]
 800edf2:	210c      	movs	r1, #12
 800edf4:	f7ff fd8e 	bl	800e914 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800edf8:	b005      	add	sp, #20
 800edfa:	f85d fb04 	ldr.w	pc, [sp], #4
 800edfe:	bf00      	nop
 800ee00:	20002700 	andcs	r2, r0, r0, lsl #14

0800ee04 <StoreRemoteConfig::~StoreRemoteConfig()>:
 800ee04:	b510      	push	{r4, lr}
 800ee06:	4604      	mov	r4, r0
 800ee08:	f003 fda2 	bl	8012950 <operator delete(void*)>
 800ee0c:	4620      	mov	r0, r4
 800ee0e:	bd10      	pop	{r4, pc}

0800ee10 <StoreRemoteConfig::StoreRemoteConfig()>:
 800ee10:	4a02      	ldr	r2, [pc, #8]	; (800ee1c <StoreRemoteConfig::StoreRemoteConfig()+0xc>)
 800ee12:	6002      	str	r2, [r0, #0]
 800ee14:	4a02      	ldr	r2, [pc, #8]	; (800ee20 <StoreRemoteConfig::StoreRemoteConfig()+0x10>)
 800ee16:	6010      	str	r0, [r2, #0]
 800ee18:	4770      	bx	lr
 800ee1a:	bf00      	nop
 800ee1c:	08016814 	stmdaeq	r1, {r2, r4, fp, sp, lr}
 800ee20:	2000271c 	andcs	r2, r0, ip, lsl r7

0800ee24 <FlashRom::FlashRom()>:
 800ee24:	4b07      	ldr	r3, [pc, #28]	; (800ee44 <FlashRom::FlashRom()+0x20>)
 800ee26:	b510      	push	{r4, lr}
 800ee28:	6018      	str	r0, [r3, #0]
 800ee2a:	2301      	movs	r3, #1
 800ee2c:	4604      	mov	r4, r0
 800ee2e:	7003      	strb	r3, [r0, #0]
 800ee30:	4b05      	ldr	r3, [pc, #20]	; (800ee48 <FlashRom::FlashRom()+0x24>)
 800ee32:	4906      	ldr	r1, [pc, #24]	; (800ee4c <FlashRom::FlashRom()+0x28>)
 800ee34:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800ee38:	4805      	ldr	r0, [pc, #20]	; (800ee50 <FlashRom::FlashRom()+0x2c>)
 800ee3a:	029a      	lsls	r2, r3, #10
 800ee3c:	f7fa fbbe 	bl	80095bc <printf>
 800ee40:	4620      	mov	r0, r4
 800ee42:	bd10      	pop	{r4, pc}
 800ee44:	20002720 	andcs	r2, r0, r0, lsr #14
 800ee48:	1ffff700 	svcne	0x00fff700
 800ee4c:	08014e75 	stmdaeq	r1, {r0, r2, r4, r5, r6, r9, sl, fp, lr}
 800ee50:	08016824 	stmdaeq	r1, {r2, r5, fp, sp, lr}

0800ee54 <FlashRom::GetSize() const>:
 800ee54:	4b02      	ldr	r3, [pc, #8]	; (800ee60 <FlashRom::GetSize() const+0xc>)
 800ee56:	f8b3 00e0 	ldrh.w	r0, [r3, #224]	; 0xe0
 800ee5a:	0280      	lsls	r0, r0, #10
 800ee5c:	4770      	bx	lr
 800ee5e:	bf00      	nop
 800ee60:	1ffff700 	svcne	0x00fff700

0800ee64 <FlashRom::GetSectorSize() const>:
 800ee64:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 800ee68:	4770      	bx	lr

0800ee6a <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)>:
 800ee6a:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800ee6e:	441a      	add	r2, r3
 800ee70:	4293      	cmp	r3, r2
 800ee72:	d104      	bne.n	800ee7e <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)+0x14>
 800ee74:	2200      	movs	r2, #0
 800ee76:	9b00      	ldr	r3, [sp, #0]
 800ee78:	2001      	movs	r0, #1
 800ee7a:	601a      	str	r2, [r3, #0]
 800ee7c:	4770      	bx	lr
 800ee7e:	f851 0b04 	ldr.w	r0, [r1], #4
 800ee82:	f843 0b04 	str.w	r0, [r3], #4
 800ee86:	e7f3      	b.n	800ee70 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)+0x6>

0800ee88 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)>:
 800ee88:	2000      	movs	r0, #0
 800ee8a:	b538      	push	{r3, r4, r5, lr}
 800ee8c:	4c47      	ldr	r4, [pc, #284]	; (800efac <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x124>)
 800ee8e:	6018      	str	r0, [r3, #0]
 800ee90:	6823      	ldr	r3, [r4, #0]
 800ee92:	2b04      	cmp	r3, #4
 800ee94:	f200 8082 	bhi.w	800ef9c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x114>
 800ee98:	e8df f003 	tbb	[pc, r3]
 800ee9c:	78452003 	stmdavc	r5, {r0, r1, sp}^
 800eea0:	4b430080 	blmi	90cf0a8 <__exidx_end+0x10b7f38>
 800eea4:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800eea8:	6019      	str	r1, [r3, #0]
 800eeaa:	4b42      	ldr	r3, [pc, #264]	; (800efb4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800eeac:	601a      	str	r2, [r3, #0]
 800eeae:	4b42      	ldr	r3, [pc, #264]	; (800efb8 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x130>)
 800eeb0:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800eeb4:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800eeb8:	4b40      	ldr	r3, [pc, #256]	; (800efbc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800eeba:	d807      	bhi.n	800eecc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x44>
 800eebc:	2201      	movs	r2, #1
 800eebe:	701a      	strb	r2, [r3, #0]
 800eec0:	f004 f8ae 	bl	8013020 <fmc_bank0_unlock>
 800eec4:	2301      	movs	r3, #1
 800eec6:	6023      	str	r3, [r4, #0]
 800eec8:	2000      	movs	r0, #0
 800eeca:	e026      	b.n	800ef1a <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x92>
 800eecc:	4a3c      	ldr	r2, [pc, #240]	; (800efc0 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x138>)
 800eece:	4291      	cmp	r1, r2
 800eed0:	d3f4      	bcc.n	800eebc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x34>
 800eed2:	2200      	movs	r2, #0
 800eed4:	701a      	strb	r2, [r3, #0]
 800eed6:	f004 f8b1 	bl	801303c <fmc_bank1_unlock>
 800eeda:	e7f3      	b.n	800eec4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 800eedc:	4d37      	ldr	r5, [pc, #220]	; (800efbc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800eede:	782b      	ldrb	r3, [r5, #0]
 800eee0:	b15b      	cbz	r3, 800eefa <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x72>
 800eee2:	f004 f8c9 	bl	8013078 <fmc_bank0_state_get>
 800eee6:	2801      	cmp	r0, #1
 800eee8:	d0ee      	beq.n	800eec8 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x40>
 800eeea:	7829      	ldrb	r1, [r5, #0]
 800eeec:	4b35      	ldr	r3, [pc, #212]	; (800efc4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800eeee:	b939      	cbnz	r1, 800ef00 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x78>
 800eef0:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800eef2:	f022 0202 	bic.w	r2, r2, #2
 800eef6:	651a      	str	r2, [r3, #80]	; 0x50
 800eef8:	e006      	b.n	800ef08 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x80>
 800eefa:	f004 f8cf 	bl	801309c <fmc_bank1_state_get>
 800eefe:	e7f2      	b.n	800eee6 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x5e>
 800ef00:	691a      	ldr	r2, [r3, #16]
 800ef02:	f022 0202 	bic.w	r2, r2, #2
 800ef06:	611a      	str	r2, [r3, #16]
 800ef08:	4b2a      	ldr	r3, [pc, #168]	; (800efb4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800ef0a:	681b      	ldr	r3, [r3, #0]
 800ef0c:	b94b      	cbnz	r3, 800ef22 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x9a>
 800ef0e:	b129      	cbz	r1, 800ef1c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x94>
 800ef10:	f004 f8a2 	bl	8013058 <fmc_bank0_lock>
 800ef14:	2300      	movs	r3, #0
 800ef16:	2001      	movs	r0, #1
 800ef18:	6023      	str	r3, [r4, #0]
 800ef1a:	bd38      	pop	{r3, r4, r5, pc}
 800ef1c:	f004 f8a4 	bl	8013068 <fmc_bank1_lock>
 800ef20:	e7f8      	b.n	800ef14 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x8c>
 800ef22:	2302      	movs	r3, #2
 800ef24:	e7cf      	b.n	800eec6 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3e>
 800ef26:	4923      	ldr	r1, [pc, #140]	; (800efb4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800ef28:	680b      	ldr	r3, [r1, #0]
 800ef2a:	2b00      	cmp	r3, #0
 800ef2c:	d0ca      	beq.n	800eec4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 800ef2e:	4b23      	ldr	r3, [pc, #140]	; (800efbc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800ef30:	4a1f      	ldr	r2, [pc, #124]	; (800efb0 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x128>)
 800ef32:	7818      	ldrb	r0, [r3, #0]
 800ef34:	4b23      	ldr	r3, [pc, #140]	; (800efc4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800ef36:	b190      	cbz	r0, 800ef5e <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0xd6>
 800ef38:	6918      	ldr	r0, [r3, #16]
 800ef3a:	f040 0002 	orr.w	r0, r0, #2
 800ef3e:	6118      	str	r0, [r3, #16]
 800ef40:	6810      	ldr	r0, [r2, #0]
 800ef42:	6158      	str	r0, [r3, #20]
 800ef44:	6918      	ldr	r0, [r3, #16]
 800ef46:	f040 0040 	orr.w	r0, r0, #64	; 0x40
 800ef4a:	6118      	str	r0, [r3, #16]
 800ef4c:	680b      	ldr	r3, [r1, #0]
 800ef4e:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 800ef52:	600b      	str	r3, [r1, #0]
 800ef54:	6813      	ldr	r3, [r2, #0]
 800ef56:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800ef5a:	6013      	str	r3, [r2, #0]
 800ef5c:	e7b2      	b.n	800eec4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 800ef5e:	6d18      	ldr	r0, [r3, #80]	; 0x50
 800ef60:	f040 0002 	orr.w	r0, r0, #2
 800ef64:	6518      	str	r0, [r3, #80]	; 0x50
 800ef66:	6810      	ldr	r0, [r2, #0]
 800ef68:	6558      	str	r0, [r3, #84]	; 0x54
 800ef6a:	69dd      	ldr	r5, [r3, #28]
 800ef6c:	07ad      	lsls	r5, r5, #30
 800ef6e:	bf48      	it	mi
 800ef70:	6158      	strmi	r0, [r3, #20]
 800ef72:	4814      	ldr	r0, [pc, #80]	; (800efc4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800ef74:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800ef76:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800ef7a:	6503      	str	r3, [r0, #80]	; 0x50
 800ef7c:	680b      	ldr	r3, [r1, #0]
 800ef7e:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
 800ef82:	600b      	str	r3, [r1, #0]
 800ef84:	6813      	ldr	r3, [r2, #0]
 800ef86:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800ef8a:	e7e6      	b.n	800ef5a <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0xd2>
 800ef8c:	4b0b      	ldr	r3, [pc, #44]	; (800efbc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800ef8e:	781a      	ldrb	r2, [r3, #0]
 800ef90:	4b0c      	ldr	r3, [pc, #48]	; (800efc4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800ef92:	b132      	cbz	r2, 800efa2 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x11a>
 800ef94:	691a      	ldr	r2, [r3, #16]
 800ef96:	f022 0201 	bic.w	r2, r2, #1
 800ef9a:	611a      	str	r2, [r3, #16]
 800ef9c:	2000      	movs	r0, #0
 800ef9e:	6020      	str	r0, [r4, #0]
 800efa0:	e7bb      	b.n	800ef1a <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x92>
 800efa2:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800efa4:	f022 0201 	bic.w	r2, r2, #1
 800efa8:	651a      	str	r2, [r3, #80]	; 0x50
 800efaa:	e7f7      	b.n	800ef9c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x114>
 800efac:	20002728 	andcs	r2, r0, r8, lsr #14
 800efb0:	2000272c 	andcs	r2, r0, ip, lsr #14
 800efb4:	20002738 	andcs	r2, r0, r8, lsr r7
 800efb8:	1ffff700 	svcne	0x00fff700
 800efbc:	20002734 	andcs	r2, r0, r4, lsr r7
 800efc0:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 800efc4:	40022000 	andmi	r2, r2, r0

0800efc8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)>:
 800efc8:	b570      	push	{r4, r5, r6, lr}
 800efca:	2400      	movs	r4, #0
 800efcc:	9804      	ldr	r0, [sp, #16]
 800efce:	6004      	str	r4, [r0, #0]
 800efd0:	4c48      	ldr	r4, [pc, #288]	; (800f0f4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x12c>)
 800efd2:	6820      	ldr	r0, [r4, #0]
 800efd4:	2804      	cmp	r0, #4
 800efd6:	d848      	bhi.n	800f06a <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xa2>
 800efd8:	e8df f000 	tbb	[pc, r0]
 800efdc:	22847c03 	addcs	r7, r4, #768	; 0x300
 800efe0:	48450047 	stmdami	r5, {r0, r1, r2, r6}^
 800efe4:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800efe8:	6001      	str	r1, [r0, #0]
 800efea:	4844      	ldr	r0, [pc, #272]	; (800f0fc <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 800efec:	6003      	str	r3, [r0, #0]
 800efee:	4b44      	ldr	r3, [pc, #272]	; (800f100 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 800eff0:	601a      	str	r2, [r3, #0]
 800eff2:	4b44      	ldr	r3, [pc, #272]	; (800f104 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x13c>)
 800eff4:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800eff8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800effc:	4b42      	ldr	r3, [pc, #264]	; (800f108 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800effe:	d807      	bhi.n	800f010 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x48>
 800f000:	2201      	movs	r2, #1
 800f002:	701a      	strb	r2, [r3, #0]
 800f004:	f004 f80c 	bl	8013020 <fmc_bank0_unlock>
 800f008:	2303      	movs	r3, #3
 800f00a:	6023      	str	r3, [r4, #0]
 800f00c:	2000      	movs	r0, #0
 800f00e:	e026      	b.n	800f05e <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x96>
 800f010:	4a3e      	ldr	r2, [pc, #248]	; (800f10c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x144>)
 800f012:	4291      	cmp	r1, r2
 800f014:	d3f4      	bcc.n	800f000 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x38>
 800f016:	2200      	movs	r2, #0
 800f018:	701a      	strb	r2, [r3, #0]
 800f01a:	f004 f80f 	bl	801303c <fmc_bank1_unlock>
 800f01e:	e7f3      	b.n	800f008 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800f020:	4d39      	ldr	r5, [pc, #228]	; (800f108 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800f022:	782b      	ldrb	r3, [r5, #0]
 800f024:	b15b      	cbz	r3, 800f03e <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x76>
 800f026:	f004 f827 	bl	8013078 <fmc_bank0_state_get>
 800f02a:	2801      	cmp	r0, #1
 800f02c:	d0ee      	beq.n	800f00c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x44>
 800f02e:	7829      	ldrb	r1, [r5, #0]
 800f030:	4b37      	ldr	r3, [pc, #220]	; (800f110 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800f032:	b939      	cbnz	r1, 800f044 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x7c>
 800f034:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800f036:	f022 0201 	bic.w	r2, r2, #1
 800f03a:	651a      	str	r2, [r3, #80]	; 0x50
 800f03c:	e006      	b.n	800f04c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x84>
 800f03e:	f004 f82d 	bl	801309c <fmc_bank1_state_get>
 800f042:	e7f2      	b.n	800f02a <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x62>
 800f044:	691a      	ldr	r2, [r3, #16]
 800f046:	f022 0201 	bic.w	r2, r2, #1
 800f04a:	611a      	str	r2, [r3, #16]
 800f04c:	4b2c      	ldr	r3, [pc, #176]	; (800f100 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 800f04e:	681b      	ldr	r3, [r3, #0]
 800f050:	b94b      	cbnz	r3, 800f066 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x9e>
 800f052:	b129      	cbz	r1, 800f060 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x98>
 800f054:	f004 f800 	bl	8013058 <fmc_bank0_lock>
 800f058:	2300      	movs	r3, #0
 800f05a:	2001      	movs	r0, #1
 800f05c:	6023      	str	r3, [r4, #0]
 800f05e:	bd70      	pop	{r4, r5, r6, pc}
 800f060:	f004 f802 	bl	8013068 <fmc_bank1_lock>
 800f064:	e7f8      	b.n	800f058 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x90>
 800f066:	2304      	movs	r3, #4
 800f068:	e7cf      	b.n	800f00a <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x42>
 800f06a:	4a25      	ldr	r2, [pc, #148]	; (800f100 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 800f06c:	6813      	ldr	r3, [r2, #0]
 800f06e:	2b03      	cmp	r3, #3
 800f070:	d91a      	bls.n	800f0a8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xe0>
 800f072:	4b25      	ldr	r3, [pc, #148]	; (800f108 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800f074:	7819      	ldrb	r1, [r3, #0]
 800f076:	4b26      	ldr	r3, [pc, #152]	; (800f110 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800f078:	b189      	cbz	r1, 800f09e <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xd6>
 800f07a:	6919      	ldr	r1, [r3, #16]
 800f07c:	f041 0101 	orr.w	r1, r1, #1
 800f080:	6119      	str	r1, [r3, #16]
 800f082:	4d1e      	ldr	r5, [pc, #120]	; (800f0fc <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 800f084:	481c      	ldr	r0, [pc, #112]	; (800f0f8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x130>)
 800f086:	6829      	ldr	r1, [r5, #0]
 800f088:	6803      	ldr	r3, [r0, #0]
 800f08a:	f851 6b04 	ldr.w	r6, [r1], #4
 800f08e:	f843 6b04 	str.w	r6, [r3], #4
 800f092:	6003      	str	r3, [r0, #0]
 800f094:	6813      	ldr	r3, [r2, #0]
 800f096:	6029      	str	r1, [r5, #0]
 800f098:	3b04      	subs	r3, #4
 800f09a:	6013      	str	r3, [r2, #0]
 800f09c:	e7b4      	b.n	800f008 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800f09e:	6d19      	ldr	r1, [r3, #80]	; 0x50
 800f0a0:	f041 0101 	orr.w	r1, r1, #1
 800f0a4:	6519      	str	r1, [r3, #80]	; 0x50
 800f0a6:	e7ec      	b.n	800f082 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xba>
 800f0a8:	2b00      	cmp	r3, #0
 800f0aa:	d0ad      	beq.n	800f008 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800f0ac:	4b16      	ldr	r3, [pc, #88]	; (800f108 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800f0ae:	781a      	ldrb	r2, [r3, #0]
 800f0b0:	4b17      	ldr	r3, [pc, #92]	; (800f110 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800f0b2:	b152      	cbz	r2, 800f0ca <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x102>
 800f0b4:	691a      	ldr	r2, [r3, #16]
 800f0b6:	f042 0201 	orr.w	r2, r2, #1
 800f0ba:	611a      	str	r2, [r3, #16]
 800f0bc:	4a0f      	ldr	r2, [pc, #60]	; (800f0fc <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 800f0be:	4b0e      	ldr	r3, [pc, #56]	; (800f0f8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x130>)
 800f0c0:	6812      	ldr	r2, [r2, #0]
 800f0c2:	681b      	ldr	r3, [r3, #0]
 800f0c4:	6812      	ldr	r2, [r2, #0]
 800f0c6:	601a      	str	r2, [r3, #0]
 800f0c8:	e79e      	b.n	800f008 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800f0ca:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800f0cc:	f042 0201 	orr.w	r2, r2, #1
 800f0d0:	651a      	str	r2, [r3, #80]	; 0x50
 800f0d2:	e7f3      	b.n	800f0bc <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xf4>
 800f0d4:	4b0c      	ldr	r3, [pc, #48]	; (800f108 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800f0d6:	781a      	ldrb	r2, [r3, #0]
 800f0d8:	4b0d      	ldr	r3, [pc, #52]	; (800f110 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800f0da:	b132      	cbz	r2, 800f0ea <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x122>
 800f0dc:	691a      	ldr	r2, [r3, #16]
 800f0de:	f022 0202 	bic.w	r2, r2, #2
 800f0e2:	611a      	str	r2, [r3, #16]
 800f0e4:	2000      	movs	r0, #0
 800f0e6:	6020      	str	r0, [r4, #0]
 800f0e8:	e7b9      	b.n	800f05e <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x96>
 800f0ea:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800f0ec:	f022 0202 	bic.w	r2, r2, #2
 800f0f0:	651a      	str	r2, [r3, #80]	; 0x50
 800f0f2:	e7f7      	b.n	800f0e4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x11c>
 800f0f4:	20002728 	andcs	r2, r0, r8, lsr #14
 800f0f8:	20002724 	andcs	r2, r0, r4, lsr #14
 800f0fc:	20002730 	andcs	r2, r0, r0, lsr r7
 800f100:	20002738 	andcs	r2, r0, r8, lsr r7
 800f104:	1ffff700 	svcne	0x00fff700
 800f108:	20002734 	andcs	r2, r0, r4, lsr r7
 800f10c:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 800f110:	40022000 	andmi	r2, r2, r0

0800f114 <net_set_ip>:
 800f114:	b510      	push	{r4, lr}
 800f116:	4c05      	ldr	r4, [pc, #20]	; (800f12c <net_set_ip+0x18>)
 800f118:	6020      	str	r0, [r4, #0]
 800f11a:	4621      	mov	r1, r4
 800f11c:	4804      	ldr	r0, [pc, #16]	; (800f130 <net_set_ip+0x1c>)
 800f11e:	f7f8 f8fd 	bl	800731c <arp_init>
 800f122:	4620      	mov	r0, r4
 800f124:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f128:	f002 b90a 	b.w	8011340 <ip_set_ip>
 800f12c:	2000273c 	andcs	r2, r0, ip, lsr r7
 800f130:	20002748 	andcs	r2, r0, r8, asr #14

0800f134 <net_set_dhcp>:
 800f134:	b570      	push	{r4, r5, r6, lr}
 800f136:	2400      	movs	r4, #0
 800f138:	4605      	mov	r5, r0
 800f13a:	7014      	strb	r4, [r2, #0]
 800f13c:	4616      	mov	r6, r2
 800f13e:	4810      	ldr	r0, [pc, #64]	; (800f180 <net_set_dhcp+0x4c>)
 800f140:	460a      	mov	r2, r1
 800f142:	4910      	ldr	r1, [pc, #64]	; (800f184 <net_set_dhcp+0x50>)
 800f144:	f001 fedc 	bl	8010f00 <dhcp_client>
 800f148:	42a0      	cmp	r0, r4
 800f14a:	da17      	bge.n	800f17c <net_set_dhcp+0x48>
 800f14c:	480d      	ldr	r0, [pc, #52]	; (800f184 <net_set_dhcp+0x50>)
 800f14e:	f000 f859 	bl	800f204 <rfc3927>
 800f152:	7030      	strb	r0, [r6, #0]
 800f154:	490b      	ldr	r1, [pc, #44]	; (800f184 <net_set_dhcp+0x50>)
 800f156:	480a      	ldr	r0, [pc, #40]	; (800f180 <net_set_dhcp+0x4c>)
 800f158:	f7f8 f8e0 	bl	800731c <arp_init>
 800f15c:	4809      	ldr	r0, [pc, #36]	; (800f184 <net_set_dhcp+0x50>)
 800f15e:	f002 f8ef 	bl	8011340 <ip_set_ip>
 800f162:	4a08      	ldr	r2, [pc, #32]	; (800f184 <net_set_dhcp+0x50>)
 800f164:	1e6b      	subs	r3, r5, #1
 800f166:	350b      	adds	r5, #11
 800f168:	f812 1b01 	ldrb.w	r1, [r2], #1
 800f16c:	f803 1f01 	strb.w	r1, [r3, #1]!
 800f170:	42ab      	cmp	r3, r5
 800f172:	d1f9      	bne.n	800f168 <net_set_dhcp+0x34>
 800f174:	4b04      	ldr	r3, [pc, #16]	; (800f188 <net_set_dhcp+0x54>)
 800f176:	4620      	mov	r0, r4
 800f178:	701c      	strb	r4, [r3, #0]
 800f17a:	bd70      	pop	{r4, r5, r6, pc}
 800f17c:	2401      	movs	r4, #1
 800f17e:	e7e9      	b.n	800f154 <net_set_dhcp+0x20>
 800f180:	20002748 	andcs	r2, r0, r8, asr #14
 800f184:	2000273c 	andcs	r2, r0, ip, lsr r7
 800f188:	2000274e 	andcs	r2, r0, lr, asr #14

0800f18c <net_dhcp_release>:
 800f18c:	b508      	push	{r3, lr}
 800f18e:	f001 ffbf 	bl	8011110 <dhcp_client_release>
 800f192:	2200      	movs	r2, #0
 800f194:	4b01      	ldr	r3, [pc, #4]	; (800f19c <net_dhcp_release+0x10>)
 800f196:	701a      	strb	r2, [r3, #0]
 800f198:	bd08      	pop	{r3, pc}
 800f19a:	bf00      	nop
 800f19c:	2000274e 	andcs	r2, r0, lr, asr #14

0800f1a0 <net_set_zeroconf>:
 800f1a0:	b538      	push	{r3, r4, r5, lr}
 800f1a2:	4604      	mov	r4, r0
 800f1a4:	480c      	ldr	r0, [pc, #48]	; (800f1d8 <net_set_zeroconf+0x38>)
 800f1a6:	f000 f82d 	bl	800f204 <rfc3927>
 800f1aa:	4605      	mov	r5, r0
 800f1ac:	b190      	cbz	r0, 800f1d4 <net_set_zeroconf+0x34>
 800f1ae:	490a      	ldr	r1, [pc, #40]	; (800f1d8 <net_set_zeroconf+0x38>)
 800f1b0:	480a      	ldr	r0, [pc, #40]	; (800f1dc <net_set_zeroconf+0x3c>)
 800f1b2:	f7f8 f8b3 	bl	800731c <arp_init>
 800f1b6:	4808      	ldr	r0, [pc, #32]	; (800f1d8 <net_set_zeroconf+0x38>)
 800f1b8:	f002 f8c2 	bl	8011340 <ip_set_ip>
 800f1bc:	4a06      	ldr	r2, [pc, #24]	; (800f1d8 <net_set_zeroconf+0x38>)
 800f1be:	1e63      	subs	r3, r4, #1
 800f1c0:	340b      	adds	r4, #11
 800f1c2:	f812 1b01 	ldrb.w	r1, [r2], #1
 800f1c6:	f803 1f01 	strb.w	r1, [r3, #1]!
 800f1ca:	42a3      	cmp	r3, r4
 800f1cc:	d1f9      	bne.n	800f1c2 <net_set_zeroconf+0x22>
 800f1ce:	2200      	movs	r2, #0
 800f1d0:	4b03      	ldr	r3, [pc, #12]	; (800f1e0 <net_set_zeroconf+0x40>)
 800f1d2:	701a      	strb	r2, [r3, #0]
 800f1d4:	4628      	mov	r0, r5
 800f1d6:	bd38      	pop	{r3, r4, r5, pc}
 800f1d8:	2000273c 	andcs	r2, r0, ip, lsr r7
 800f1dc:	20002748 	andcs	r2, r0, r8, asr #14
 800f1e0:	2000274e 	andcs	r2, r0, lr, asr #14

0800f1e4 <net_timers_run>:
 800f1e4:	4b05      	ldr	r3, [pc, #20]	; (800f1fc <net_timers_run+0x18>)
 800f1e6:	4a06      	ldr	r2, [pc, #24]	; (800f200 <net_timers_run+0x1c>)
 800f1e8:	681b      	ldr	r3, [r3, #0]
 800f1ea:	6811      	ldr	r1, [r2, #0]
 800f1ec:	4299      	cmp	r1, r3
 800f1ee:	d803      	bhi.n	800f1f8 <net_timers_run+0x14>
 800f1f0:	3364      	adds	r3, #100	; 0x64
 800f1f2:	6013      	str	r3, [r2, #0]
 800f1f4:	f002 b81a 	b.w	801122c <igmp_timer>
 800f1f8:	4770      	bx	lr
 800f1fa:	bf00      	nop
 800f1fc:	2000a744 	andcs	sl, r0, r4, asr #14
 800f200:	20002754 	andcs	r2, r0, r4, asr r7

0800f204 <rfc3927>:
 800f204:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f208:	4606      	mov	r6, r0
 800f20a:	25ff      	movs	r5, #255	; 0xff
 800f20c:	4b18      	ldr	r3, [pc, #96]	; (800f270 <rfc3927+0x6c>)
 800f20e:	4f19      	ldr	r7, [pc, #100]	; (800f274 <rfc3927+0x70>)
 800f210:	791a      	ldrb	r2, [r3, #4]
 800f212:	78dc      	ldrb	r4, [r3, #3]
 800f214:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800f278 <rfc3927+0x74>
 800f218:	eb04 2402 	add.w	r4, r4, r2, lsl #8
 800f21c:	f8d7 9000 	ldr.w	r9, [r7]
 800f220:	f8df b058 	ldr.w	fp, [pc, #88]	; 800f27c <rfc3927+0x78>
 800f224:	f8df a058 	ldr.w	sl, [pc, #88]	; 800f280 <rfc3927+0x7c>
 800f228:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
 800f22c:	4659      	mov	r1, fp
 800f22e:	4620      	mov	r0, r4
 800f230:	f001 fd5c 	bl	8010cec <arp_cache_lookup>
 800f234:	b190      	cbz	r0, 800f25c <rfc3927+0x58>
 800f236:	ba24      	rev	r4, r4
 800f238:	3401      	adds	r4, #1
 800f23a:	3d01      	subs	r5, #1
 800f23c:	ba24      	rev	r4, r4
 800f23e:	b2ad      	uxth	r5, r5
 800f240:	4554      	cmp	r4, sl
 800f242:	bf08      	it	eq
 800f244:	4644      	moveq	r4, r8
 800f246:	b18d      	cbz	r5, 800f26c <rfc3927+0x68>
 800f248:	683b      	ldr	r3, [r7, #0]
 800f24a:	eba3 0309 	sub.w	r3, r3, r9
 800f24e:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800f252:	d3eb      	bcc.n	800f22c <rfc3927+0x28>
 800f254:	2400      	movs	r4, #0
 800f256:	4623      	mov	r3, r4
 800f258:	4620      	mov	r0, r4
 800f25a:	e002      	b.n	800f262 <rfc3927+0x5e>
 800f25c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800f260:	2001      	movs	r0, #1
 800f262:	e9c6 3401 	strd	r3, r4, [r6, #4]
 800f266:	6034      	str	r4, [r6, #0]
 800f268:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f26c:	462c      	mov	r4, r5
 800f26e:	e7f2      	b.n	800f256 <rfc3927+0x52>
 800f270:	20002758 	andcs	r2, r0, r8, asr r7
 800f274:	2000a744 	andcs	sl, r0, r4, asr #14
 800f278:	0100fea9 	smlatbeq	r0, r9, lr, pc	; <UNPREDICTABLE>
 800f27c:	20002760 	andcs	r2, r0, r0, ror #14
 800f280:	fffefea9 			; <UNDEFINED> instruction: 0xfffefea9

0800f284 <_init_tcb>:
 800f284:	b510      	push	{r4, lr}
 800f286:	4603      	mov	r3, r0
 800f288:	2400      	movs	r4, #0
 800f28a:	f100 0244 	add.w	r2, r0, #68	; 0x44
 800f28e:	4293      	cmp	r3, r2
 800f290:	d10d      	bne.n	800f2ae <_init_tcb+0x2a>
 800f292:	4b08      	ldr	r3, [pc, #32]	; (800f2b4 <_init_tcb+0x30>)
 800f294:	f640 3268 	movw	r2, #2920	; 0xb68
 800f298:	681b      	ldr	r3, [r3, #0]
 800f29a:	8702      	strh	r2, [r0, #56]	; 0x38
 800f29c:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800f2a0:	6283      	str	r3, [r0, #40]	; 0x28
 800f2a2:	6243      	str	r3, [r0, #36]	; 0x24
 800f2a4:	2301      	movs	r3, #1
 800f2a6:	8001      	strh	r1, [r0, #0]
 800f2a8:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
 800f2ac:	bd10      	pop	{r4, pc}
 800f2ae:	f803 4b01 	strb.w	r4, [r3], #1
 800f2b2:	e7ec      	b.n	800f28e <_init_tcb+0xa>
 800f2b4:	2000a744 	andcs	sl, r0, r4, asr #14

0800f2b8 <memcpy.isra.0>:
 800f2b8:	3801      	subs	r0, #1
 800f2ba:	440a      	add	r2, r1
 800f2bc:	4291      	cmp	r1, r2
 800f2be:	d100      	bne.n	800f2c2 <memcpy.isra.0+0xa>
 800f2c0:	4770      	bx	lr
 800f2c2:	f811 3b01 	ldrb.w	r3, [r1], #1
 800f2c6:	f800 3f01 	strb.w	r3, [r0, #1]!
 800f2ca:	e7f7      	b.n	800f2bc <memcpy.isra.0+0x4>

0800f2cc <_bswap32>:
 800f2cc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f2ce:	2204      	movs	r2, #4
 800f2d0:	f100 052a 	add.w	r5, r0, #42	; 0x2a
 800f2d4:	4629      	mov	r1, r5
 800f2d6:	4604      	mov	r4, r0
 800f2d8:	eb0d 0002 	add.w	r0, sp, r2
 800f2dc:	f7ff ffec 	bl	800f2b8 <memcpy.isra.0>
 800f2e0:	2204      	movs	r2, #4
 800f2e2:	9b01      	ldr	r3, [sp, #4]
 800f2e4:	eb0d 0102 	add.w	r1, sp, r2
 800f2e8:	ba1b      	rev	r3, r3
 800f2ea:	4628      	mov	r0, r5
 800f2ec:	9301      	str	r3, [sp, #4]
 800f2ee:	f7ff ffe3 	bl	800f2b8 <memcpy.isra.0>
 800f2f2:	2204      	movs	r2, #4
 800f2f4:	3426      	adds	r4, #38	; 0x26
 800f2f6:	eb0d 0002 	add.w	r0, sp, r2
 800f2fa:	4621      	mov	r1, r4
 800f2fc:	f7ff ffdc 	bl	800f2b8 <memcpy.isra.0>
 800f300:	2204      	movs	r2, #4
 800f302:	9b01      	ldr	r3, [sp, #4]
 800f304:	4620      	mov	r0, r4
 800f306:	ba1b      	rev	r3, r3
 800f308:	eb0d 0102 	add.w	r1, sp, r2
 800f30c:	9301      	str	r3, [sp, #4]
 800f30e:	f7ff ffd3 	bl	800f2b8 <memcpy.isra.0>
 800f312:	b003      	add	sp, #12
 800f314:	bd30      	pop	{r4, r5, pc}
	...

0800f318 <_tcp_send_package>:
 800f318:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800f31c:	7a0b      	ldrb	r3, [r1, #8]
 800f31e:	4605      	mov	r5, r0
 800f320:	f013 0f02 	tst.w	r3, #2
 800f324:	bf0c      	ite	eq
 800f326:	f04f 0805 	moveq.w	r8, #5
 800f32a:	f04f 0806 	movne.w	r8, #6
 800f32e:	f04f 0a00 	mov.w	sl, #0
 800f332:	4c47      	ldr	r4, [pc, #284]	; (800f450 <_tcp_send_package+0x138>)
 800f334:	460f      	mov	r7, r1
 800f336:	8e06      	ldrh	r6, [r0, #48]	; 0x30
 800f338:	f100 0108 	add.w	r1, r0, #8
 800f33c:	2206      	movs	r2, #6
 800f33e:	4620      	mov	r0, r4
 800f340:	f7ff ffba 	bl	800f2b8 <memcpy.isra.0>
 800f344:	4a43      	ldr	r2, [pc, #268]	; (800f454 <_tcp_send_package+0x13c>)
 800f346:	eb06 0688 	add.w	r6, r6, r8, lsl #2
 800f34a:	8813      	ldrh	r3, [r2, #0]
 800f34c:	b2b6      	uxth	r6, r6
 800f34e:	1c59      	adds	r1, r3, #1
 800f350:	8263      	strh	r3, [r4, #18]
 800f352:	f105 0904 	add.w	r9, r5, #4
 800f356:	f106 0314 	add.w	r3, r6, #20
 800f35a:	ba5b      	rev16	r3, r3
 800f35c:	8011      	strh	r1, [r2, #0]
 800f35e:	f104 001e 	add.w	r0, r4, #30
 800f362:	2204      	movs	r2, #4
 800f364:	4649      	mov	r1, r9
 800f366:	8223      	strh	r3, [r4, #16]
 800f368:	f7ff ffa6 	bl	800f2b8 <memcpy.isra.0>
 800f36c:	2114      	movs	r1, #20
 800f36e:	f104 000e 	add.w	r0, r4, #14
 800f372:	f8a4 a018 	strh.w	sl, [r4, #24]
 800f376:	f001 ffec 	bl	8011352 <net_chksum>
 800f37a:	882b      	ldrh	r3, [r5, #0]
 800f37c:	ea4f 1808 	mov.w	r8, r8, lsl #4
 800f380:	8463      	strh	r3, [r4, #34]	; 0x22
 800f382:	886b      	ldrh	r3, [r5, #2]
 800f384:	8320      	strh	r0, [r4, #24]
 800f386:	84a3      	strh	r3, [r4, #36]	; 0x24
 800f388:	683b      	ldr	r3, [r7, #0]
 800f38a:	8f2a      	ldrh	r2, [r5, #56]	; 0x38
 800f38c:	f8c4 3026 	str.w	r3, [r4, #38]	; 0x26
 800f390:	687b      	ldr	r3, [r7, #4]
 800f392:	f884 802e 	strb.w	r8, [r4, #46]	; 0x2e
 800f396:	f8c4 302a 	str.w	r3, [r4, #42]	; 0x2a
 800f39a:	7a3b      	ldrb	r3, [r7, #8]
 800f39c:	8622      	strh	r2, [r4, #48]	; 0x30
 800f39e:	f884 302f 	strb.w	r3, [r4, #47]	; 0x2f
 800f3a2:	079b      	lsls	r3, r3, #30
 800f3a4:	bf48      	it	mi
 800f3a6:	f240 4302 	movwmi	r3, #1026	; 0x402
 800f3aa:	8baa      	ldrh	r2, [r5, #28]
 800f3ac:	bf48      	it	mi
 800f3ae:	86e3      	strhmi	r3, [r4, #54]	; 0x36
 800f3b0:	86a2      	strh	r2, [r4, #52]	; 0x34
 800f3b2:	bf42      	ittt	mi
 800f3b4:	f24b 4305 	movwmi	r3, #46085	; 0xb405
 800f3b8:	4622      	movmi	r2, r4
 800f3ba:	f822 3f38 	strhmi.w	r3, [r2, #56]!
 800f3be:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800f3c0:	f8a4 a032 	strh.w	sl, [r4, #50]	; 0x32
 800f3c4:	bf58      	it	pl
 800f3c6:	f104 0236 	addpl.w	r2, r4, #54	; 0x36
 800f3ca:	2b00      	cmp	r3, #0
 800f3cc:	d13e      	bne.n	800f44c <_tcp_send_package+0x134>
 800f3ce:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 800f3d0:	481f      	ldr	r0, [pc, #124]	; (800f450 <_tcp_send_package+0x138>)
 800f3d2:	ba5b      	rev16	r3, r3
 800f3d4:	8463      	strh	r3, [r4, #34]	; 0x22
 800f3d6:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 800f3d8:	ba5b      	rev16	r3, r3
 800f3da:	84a3      	strh	r3, [r4, #36]	; 0x24
 800f3dc:	f7ff ff76 	bl	800f2cc <_bswap32>
 800f3e0:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800f3e2:	a801      	add	r0, sp, #4
 800f3e4:	ba5b      	rev16	r3, r3
 800f3e6:	8623      	strh	r3, [r4, #48]	; 0x30
 800f3e8:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800f3ea:	220c      	movs	r2, #12
 800f3ec:	ba5b      	rev16	r3, r3
 800f3ee:	491a      	ldr	r1, [pc, #104]	; (800f458 <_tcp_send_package+0x140>)
 800f3f0:	86a3      	strh	r3, [r4, #52]	; 0x34
 800f3f2:	f7ff ff61 	bl	800f2b8 <memcpy.isra.0>
 800f3f6:	2204      	movs	r2, #4
 800f3f8:	4918      	ldr	r1, [pc, #96]	; (800f45c <_tcp_send_package+0x144>)
 800f3fa:	4817      	ldr	r0, [pc, #92]	; (800f458 <_tcp_send_package+0x140>)
 800f3fc:	f7ff ff5c 	bl	800f2b8 <memcpy.isra.0>
 800f400:	2204      	movs	r2, #4
 800f402:	4649      	mov	r1, r9
 800f404:	4816      	ldr	r0, [pc, #88]	; (800f460 <_tcp_send_package+0x148>)
 800f406:	f7ff ff57 	bl	800f2b8 <memcpy.isra.0>
 800f40a:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 800f40e:	f106 010c 	add.w	r1, r6, #12
 800f412:	83e3      	strh	r3, [r4, #30]
 800f414:	4810      	ldr	r0, [pc, #64]	; (800f458 <_tcp_send_package+0x140>)
 800f416:	ba73      	rev16	r3, r6
 800f418:	8423      	strh	r3, [r4, #32]
 800f41a:	f001 ff9a 	bl	8011352 <net_chksum>
 800f41e:	a901      	add	r1, sp, #4
 800f420:	4605      	mov	r5, r0
 800f422:	220c      	movs	r2, #12
 800f424:	480c      	ldr	r0, [pc, #48]	; (800f458 <_tcp_send_package+0x140>)
 800f426:	f7ff ff47 	bl	800f2b8 <memcpy.isra.0>
 800f42a:	4809      	ldr	r0, [pc, #36]	; (800f450 <_tcp_send_package+0x138>)
 800f42c:	f106 0122 	add.w	r1, r6, #34	; 0x22
 800f430:	8665      	strh	r5, [r4, #50]	; 0x32
 800f432:	b004      	add	sp, #16
 800f434:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f438:	f004 bbac 	b.w	8013b94 <emac_eth_send>
 800f43c:	6ae9      	ldr	r1, [r5, #44]	; 0x2c
 800f43e:	5cc9      	ldrb	r1, [r1, r3]
 800f440:	54d1      	strb	r1, [r2, r3]
 800f442:	3301      	adds	r3, #1
 800f444:	8e29      	ldrh	r1, [r5, #48]	; 0x30
 800f446:	4299      	cmp	r1, r3
 800f448:	d8f8      	bhi.n	800f43c <_tcp_send_package+0x124>
 800f44a:	e7c0      	b.n	800f3ce <_tcp_send_package+0xb6>
 800f44c:	2300      	movs	r3, #0
 800f44e:	e7f9      	b.n	800f444 <_tcp_send_package+0x12c>
 800f450:	20003320 	andcs	r3, r0, r0, lsr #6
 800f454:	20002768 	andcs	r2, r0, r8, ror #14
 800f458:	20003336 	andcs	r3, r0, r6, lsr r3
 800f45c:	2000273c 	andcs	r2, r0, ip, lsr r7
 800f460:	2000333a 	andcs	r3, r0, sl, lsr r3

0800f464 <_send_reset>:
 800f464:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800f466:	f890 302f 	ldrb.w	r3, [r0, #47]	; 0x2f
 800f46a:	4604      	mov	r4, r0
 800f46c:	075a      	lsls	r2, r3, #29
 800f46e:	460e      	mov	r6, r1
 800f470:	d421      	bmi.n	800f4b6 <_send_reset+0x52>
 800f472:	2204      	movs	r2, #4
 800f474:	f013 0310 	ands.w	r3, r3, #16
 800f478:	f88d 200c 	strb.w	r2, [sp, #12]
 800f47c:	d01d      	beq.n	800f4ba <_send_reset+0x56>
 800f47e:	f100 012a 	add.w	r1, r0, #42	; 0x2a
 800f482:	4668      	mov	r0, sp
 800f484:	f7ff ff18 	bl	800f2b8 <memcpy.isra.0>
 800f488:	9b00      	ldr	r3, [sp, #0]
 800f48a:	9301      	str	r3, [sp, #4]
 800f48c:	f894 302f 	ldrb.w	r3, [r4, #47]	; 0x2f
 800f490:	4668      	mov	r0, sp
 800f492:	f3c3 0540 	ubfx	r5, r3, #1, #1
 800f496:	f104 0126 	add.w	r1, r4, #38	; 0x26
 800f49a:	07db      	lsls	r3, r3, #31
 800f49c:	f04f 0204 	mov.w	r2, #4
 800f4a0:	bf48      	it	mi
 800f4a2:	3501      	addmi	r5, #1
 800f4a4:	f7ff ff08 	bl	800f2b8 <memcpy.isra.0>
 800f4a8:	9b00      	ldr	r3, [sp, #0]
 800f4aa:	4630      	mov	r0, r6
 800f4ac:	441d      	add	r5, r3
 800f4ae:	a901      	add	r1, sp, #4
 800f4b0:	9502      	str	r5, [sp, #8]
 800f4b2:	f7ff ff31 	bl	800f318 <_tcp_send_package>
 800f4b6:	b004      	add	sp, #16
 800f4b8:	bd70      	pop	{r4, r5, r6, pc}
 800f4ba:	9301      	str	r3, [sp, #4]
 800f4bc:	2314      	movs	r3, #20
 800f4be:	f88d 300c 	strb.w	r3, [sp, #12]
 800f4c2:	e7e3      	b.n	800f48c <_send_reset+0x28>

0800f4c4 <tcp_begin>:
 800f4c4:	b508      	push	{r3, lr}
 800f4c6:	4b0a      	ldr	r3, [pc, #40]	; (800f4f0 <tcp_begin+0x2c>)
 800f4c8:	4601      	mov	r1, r0
 800f4ca:	881a      	ldrh	r2, [r3, #0]
 800f4cc:	4282      	cmp	r2, r0
 800f4ce:	d102      	bne.n	800f4d6 <tcp_begin+0x12>
 800f4d0:	f893 0040 	ldrb.w	r0, [r3, #64]	; 0x40
 800f4d4:	b130      	cbz	r0, 800f4e4 <tcp_begin+0x20>
 800f4d6:	b12a      	cbz	r2, 800f4e4 <tcp_begin+0x20>
 800f4d8:	4806      	ldr	r0, [pc, #24]	; (800f4f4 <tcp_begin+0x30>)
 800f4da:	f003 f8c5 	bl	8012668 <console_error>
 800f4de:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800f4e2:	bd08      	pop	{r3, pc}
 800f4e4:	4802      	ldr	r0, [pc, #8]	; (800f4f0 <tcp_begin+0x2c>)
 800f4e6:	8019      	strh	r1, [r3, #0]
 800f4e8:	f7ff fecc 	bl	800f284 <_init_tcb>
 800f4ec:	2000      	movs	r0, #0
 800f4ee:	e7f8      	b.n	800f4e2 <tcp_begin+0x1e>
 800f4f0:	200032dc 	ldrdcs	r3, [r0], -ip
 800f4f4:	08016852 	stmdaeq	r1, {r1, r4, r6, fp, sp, lr}

0800f4f8 <tcp_write>:
 800f4f8:	f240 53b4 	movw	r3, #1460	; 0x5b4
 800f4fc:	429a      	cmp	r2, r3
 800f4fe:	bf28      	it	cs
 800f500:	461a      	movcs	r2, r3
 800f502:	2344      	movs	r3, #68	; 0x44
 800f504:	b530      	push	{r4, r5, lr}
 800f506:	4c0d      	ldr	r4, [pc, #52]	; (800f53c <tcp_write+0x44>)
 800f508:	b085      	sub	sp, #20
 800f50a:	fb03 4400 	mla	r4, r3, r0, r4
 800f50e:	6963      	ldr	r3, [r4, #20]
 800f510:	62e1      	str	r1, [r4, #44]	; 0x2c
 800f512:	9301      	str	r3, [sp, #4]
 800f514:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800f516:	4620      	mov	r0, r4
 800f518:	9302      	str	r3, [sp, #8]
 800f51a:	2318      	movs	r3, #24
 800f51c:	8622      	strh	r2, [r4, #48]	; 0x30
 800f51e:	a901      	add	r1, sp, #4
 800f520:	4615      	mov	r5, r2
 800f522:	f88d 300c 	strb.w	r3, [sp, #12]
 800f526:	f7ff fef7 	bl	800f318 <_tcp_send_package>
 800f52a:	2300      	movs	r3, #0
 800f52c:	62e3      	str	r3, [r4, #44]	; 0x2c
 800f52e:	8623      	strh	r3, [r4, #48]	; 0x30
 800f530:	6963      	ldr	r3, [r4, #20]
 800f532:	442b      	add	r3, r5
 800f534:	6163      	str	r3, [r4, #20]
 800f536:	b005      	add	sp, #20
 800f538:	bd30      	pop	{r4, r5, pc}
 800f53a:	bf00      	nop
 800f53c:	200032dc 	ldrdcs	r3, [r0], -ip

0800f540 <tcp_read>:
 800f540:	2344      	movs	r3, #68	; 0x44
 800f542:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f544:	4c1c      	ldr	r4, [pc, #112]	; (800f5b8 <tcp_read+0x78>)
 800f546:	b085      	sub	sp, #20
 800f548:	fb03 4400 	mla	r4, r3, r0, r4
 800f54c:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800f550:	2b07      	cmp	r3, #7
 800f552:	d112      	bne.n	800f57a <tcp_read+0x3a>
 800f554:	6963      	ldr	r3, [r4, #20]
 800f556:	4620      	mov	r0, r4
 800f558:	9301      	str	r3, [sp, #4]
 800f55a:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800f55c:	a901      	add	r1, sp, #4
 800f55e:	9302      	str	r3, [sp, #8]
 800f560:	2311      	movs	r3, #17
 800f562:	f88d 300c 	strb.w	r3, [sp, #12]
 800f566:	f7ff fed7 	bl	800f318 <_tcp_send_package>
 800f56a:	2309      	movs	r3, #9
 800f56c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800f570:	6963      	ldr	r3, [r4, #20]
 800f572:	3301      	adds	r3, #1
 800f574:	6163      	str	r3, [r4, #20]
 800f576:	2000      	movs	r0, #0
 800f578:	e01b      	b.n	800f5b2 <tcp_read+0x72>
 800f57a:	f44f 6337 	mov.w	r3, #2928	; 0xb70
 800f57e:	4358      	muls	r0, r3
 800f580:	4a0e      	ldr	r2, [pc, #56]	; (800f5bc <tcp_read+0x7c>)
 800f582:	1817      	adds	r7, r2, r0
 800f584:	887b      	ldrh	r3, [r7, #2]
 800f586:	5a15      	ldrh	r5, [r2, r0]
 800f588:	429d      	cmp	r5, r3
 800f58a:	d0f4      	beq.n	800f576 <tcp_read+0x36>
 800f58c:	f240 55b6 	movw	r5, #1462	; 0x5b6
 800f590:	435d      	muls	r5, r3
 800f592:	1d06      	adds	r6, r0, #4
 800f594:	442e      	add	r6, r5
 800f596:	4416      	add	r6, r2
 800f598:	4405      	add	r5, r0
 800f59a:	600e      	str	r6, [r1, #0]
 800f59c:	442a      	add	r2, r5
 800f59e:	f8b2 05b8 	ldrh.w	r0, [r2, #1464]	; 0x5b8
 800f5a2:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 800f5a4:	3301      	adds	r3, #1
 800f5a6:	f202 52b4 	addw	r2, r2, #1460	; 0x5b4
 800f5aa:	f003 0301 	and.w	r3, r3, #1
 800f5ae:	8722      	strh	r2, [r4, #56]	; 0x38
 800f5b0:	807b      	strh	r3, [r7, #2]
 800f5b2:	b005      	add	sp, #20
 800f5b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f5b6:	bf00      	nop
 800f5b8:	200032dc 	ldrdcs	r3, [r0], -ip
 800f5bc:	2000276c 	andcs	r2, r0, ip, ror #14

0800f5c0 <memcpy.isra.0>:
 800f5c0:	3801      	subs	r0, #1
 800f5c2:	440a      	add	r2, r1
 800f5c4:	4291      	cmp	r1, r2
 800f5c6:	d100      	bne.n	800f5ca <memcpy.isra.0+0xa>
 800f5c8:	4770      	bx	lr
 800f5ca:	f811 3b01 	ldrb.w	r3, [r1], #1
 800f5ce:	f800 3f01 	strb.w	r3, [r0, #1]!
 800f5d2:	e7f7      	b.n	800f5c4 <memcpy.isra.0+0x4>

0800f5d4 <net_memcpy>:
 800f5d4:	ea40 0301 	orr.w	r3, r0, r1
 800f5d8:	079b      	lsls	r3, r3, #30
 800f5da:	b570      	push	{r4, r5, r6, lr}
 800f5dc:	d108      	bne.n	800f5f0 <net_memcpy+0x1c>
 800f5de:	f022 0303 	bic.w	r3, r2, #3
 800f5e2:	1f04      	subs	r4, r0, #4
 800f5e4:	18cd      	adds	r5, r1, r3
 800f5e6:	42a9      	cmp	r1, r5
 800f5e8:	d108      	bne.n	800f5fc <net_memcpy+0x28>
 800f5ea:	1ad2      	subs	r2, r2, r3
 800f5ec:	4403      	add	r3, r0
 800f5ee:	e000      	b.n	800f5f2 <net_memcpy+0x1e>
 800f5f0:	4603      	mov	r3, r0
 800f5f2:	3b01      	subs	r3, #1
 800f5f4:	440a      	add	r2, r1
 800f5f6:	4291      	cmp	r1, r2
 800f5f8:	d105      	bne.n	800f606 <net_memcpy+0x32>
 800f5fa:	bd70      	pop	{r4, r5, r6, pc}
 800f5fc:	f851 6b04 	ldr.w	r6, [r1], #4
 800f600:	f844 6f04 	str.w	r6, [r4, #4]!
 800f604:	e7ef      	b.n	800f5e6 <net_memcpy+0x12>
 800f606:	f811 4b01 	ldrb.w	r4, [r1], #1
 800f60a:	f803 4f01 	strb.w	r4, [r3, #1]!
 800f60e:	e7f2      	b.n	800f5f6 <net_memcpy+0x22>

0800f610 <udp_set_ip>:
 800f610:	2204      	movs	r2, #4
 800f612:	b513      	push	{r0, r1, r4, lr}
 800f614:	4604      	mov	r4, r0
 800f616:	6803      	ldr	r3, [r0, #0]
 800f618:	eb0d 0102 	add.w	r1, sp, r2
 800f61c:	4808      	ldr	r0, [pc, #32]	; (800f640 <udp_set_ip+0x30>)
 800f61e:	9301      	str	r3, [sp, #4]
 800f620:	f7ff ffce 	bl	800f5c0 <memcpy.isra.0>
 800f624:	6862      	ldr	r2, [r4, #4]
 800f626:	4b07      	ldr	r3, [pc, #28]	; (800f644 <udp_set_ip+0x34>)
 800f628:	43d1      	mvns	r1, r2
 800f62a:	6019      	str	r1, [r3, #0]
 800f62c:	6823      	ldr	r3, [r4, #0]
 800f62e:	4013      	ands	r3, r2
 800f630:	4a05      	ldr	r2, [pc, #20]	; (800f648 <udp_set_ip+0x38>)
 800f632:	6013      	str	r3, [r2, #0]
 800f634:	68a2      	ldr	r2, [r4, #8]
 800f636:	4b05      	ldr	r3, [pc, #20]	; (800f64c <udp_set_ip+0x3c>)
 800f638:	601a      	str	r2, [r3, #0]
 800f63a:	b002      	add	sp, #8
 800f63c:	bd10      	pop	{r4, pc}
 800f63e:	bf00      	nop
 800f640:	200095f6 	strdcs	r9, [r0], -r6
 800f644:	2000390c 	andcs	r3, r0, ip, lsl #18
 800f648:	20003914 	andcs	r3, r0, r4, lsl r9
 800f64c:	20003910 	andcs	r3, r0, r0, lsl r9

0800f650 <udp_bind>:
 800f650:	4a0a      	ldr	r2, [pc, #40]	; (800f67c <udp_bind+0x2c>)
 800f652:	4603      	mov	r3, r0
 800f654:	b510      	push	{r4, lr}
 800f656:	2000      	movs	r0, #0
 800f658:	4614      	mov	r4, r2
 800f65a:	f852 1b04 	ldr.w	r1, [r2], #4
 800f65e:	4299      	cmp	r1, r3
 800f660:	d008      	beq.n	800f674 <udp_bind+0x24>
 800f662:	b141      	cbz	r1, 800f676 <udp_bind+0x26>
 800f664:	3001      	adds	r0, #1
 800f666:	2808      	cmp	r0, #8
 800f668:	d1f7      	bne.n	800f65a <udp_bind+0xa>
 800f66a:	4805      	ldr	r0, [pc, #20]	; (800f680 <udp_bind+0x30>)
 800f66c:	f002 fffc 	bl	8012668 <console_error>
 800f670:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800f674:	bd10      	pop	{r4, pc}
 800f676:	f844 3020 	str.w	r3, [r4, r0, lsl #2]
 800f67a:	e7fb      	b.n	800f674 <udp_bind+0x24>
 800f67c:	2000391c 	andcs	r3, r0, ip, lsl r9
 800f680:	08016872 	stmdaeq	r1, {r1, r4, r5, r6, fp, sp, lr}

0800f684 <udp_unbind>:
 800f684:	4a0c      	ldr	r2, [pc, #48]	; (800f6b8 <udp_unbind+0x34>)
 800f686:	2300      	movs	r3, #0
 800f688:	4611      	mov	r1, r2
 800f68a:	b510      	push	{r4, lr}
 800f68c:	f852 4b04 	ldr.w	r4, [r2], #4
 800f690:	4284      	cmp	r4, r0
 800f692:	d108      	bne.n	800f6a6 <udp_unbind+0x22>
 800f694:	2000      	movs	r0, #0
 800f696:	f640 3294 	movw	r2, #2964	; 0xb94
 800f69a:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 800f69e:	4353      	muls	r3, r2
 800f6a0:	4a06      	ldr	r2, [pc, #24]	; (800f6bc <udp_unbind+0x38>)
 800f6a2:	50d0      	str	r0, [r2, r3]
 800f6a4:	bd10      	pop	{r4, pc}
 800f6a6:	3301      	adds	r3, #1
 800f6a8:	2b08      	cmp	r3, #8
 800f6aa:	d1ef      	bne.n	800f68c <udp_unbind+0x8>
 800f6ac:	4804      	ldr	r0, [pc, #16]	; (800f6c0 <udp_unbind+0x3c>)
 800f6ae:	f002 ffdb 	bl	8012668 <console_error>
 800f6b2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800f6b6:	e7f5      	b.n	800f6a4 <udp_unbind+0x20>
 800f6b8:	2000391c 	andcs	r3, r0, ip, lsl r9
 800f6bc:	2000393c 	andcs	r3, r0, ip, lsr r9
 800f6c0:	08016877 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, fp, sp, lr}

0800f6c4 <udp_recv>:
 800f6c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f6c8:	4604      	mov	r4, r0
 800f6ca:	4698      	mov	r8, r3
 800f6cc:	f640 3394 	movw	r3, #2964	; 0xb94
 800f6d0:	435c      	muls	r4, r3
 800f6d2:	4608      	mov	r0, r1
 800f6d4:	4915      	ldr	r1, [pc, #84]	; (800f72c <udp_recv+0x68>)
 800f6d6:	190f      	adds	r7, r1, r4
 800f6d8:	f8b7 c002 	ldrh.w	ip, [r7, #2]
 800f6dc:	5b0b      	ldrh	r3, [r1, r4]
 800f6de:	4563      	cmp	r3, ip
 800f6e0:	d021      	beq.n	800f726 <udp_recv+0x62>
 800f6e2:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 800f6e6:	fb03 fc0c 	mul.w	ip, r3, ip
 800f6ea:	eb0c 0604 	add.w	r6, ip, r4
 800f6ee:	440e      	add	r6, r1
 800f6f0:	f8b6 55ca 	ldrh.w	r5, [r6, #1482]	; 0x5ca
 800f6f4:	3404      	adds	r4, #4
 800f6f6:	4295      	cmp	r5, r2
 800f6f8:	bf28      	it	cs
 800f6fa:	4615      	movcs	r5, r2
 800f6fc:	4464      	add	r4, ip
 800f6fe:	462a      	mov	r2, r5
 800f700:	4421      	add	r1, r4
 800f702:	f7ff ff67 	bl	800f5d4 <net_memcpy>
 800f706:	f8d6 35c4 	ldr.w	r3, [r6, #1476]	; 0x5c4
 800f70a:	f8c8 3000 	str.w	r3, [r8]
 800f70e:	f8b6 25c8 	ldrh.w	r2, [r6, #1480]	; 0x5c8
 800f712:	9b06      	ldr	r3, [sp, #24]
 800f714:	801a      	strh	r2, [r3, #0]
 800f716:	887b      	ldrh	r3, [r7, #2]
 800f718:	3301      	adds	r3, #1
 800f71a:	f003 0301 	and.w	r3, r3, #1
 800f71e:	807b      	strh	r3, [r7, #2]
 800f720:	4628      	mov	r0, r5
 800f722:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f726:	2500      	movs	r5, #0
 800f728:	e7fa      	b.n	800f720 <udp_recv+0x5c>
 800f72a:	bf00      	nop
 800f72c:	2000393c 	andcs	r3, r0, ip, lsr r9

0800f730 <udp_recv2>:
 800f730:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f732:	f640 3594 	movw	r5, #2964	; 0xb94
 800f736:	4368      	muls	r0, r5
 800f738:	4c0f      	ldr	r4, [pc, #60]	; (800f778 <udp_recv2+0x48>)
 800f73a:	1827      	adds	r7, r4, r0
 800f73c:	887d      	ldrh	r5, [r7, #2]
 800f73e:	5a26      	ldrh	r6, [r4, r0]
 800f740:	42ae      	cmp	r6, r5
 800f742:	d017      	beq.n	800f774 <udp_recv2+0x44>
 800f744:	f44f 6cb9 	mov.w	ip, #1480	; 0x5c8
 800f748:	fb0c f505 	mul.w	r5, ip, r5
 800f74c:	1d06      	adds	r6, r0, #4
 800f74e:	442e      	add	r6, r5
 800f750:	4405      	add	r5, r0
 800f752:	4426      	add	r6, r4
 800f754:	442c      	add	r4, r5
 800f756:	600e      	str	r6, [r1, #0]
 800f758:	f8d4 15c4 	ldr.w	r1, [r4, #1476]	; 0x5c4
 800f75c:	6011      	str	r1, [r2, #0]
 800f75e:	f8b4 25c8 	ldrh.w	r2, [r4, #1480]	; 0x5c8
 800f762:	801a      	strh	r2, [r3, #0]
 800f764:	887b      	ldrh	r3, [r7, #2]
 800f766:	f8b4 05ca 	ldrh.w	r0, [r4, #1482]	; 0x5ca
 800f76a:	3301      	adds	r3, #1
 800f76c:	f003 0301 	and.w	r3, r3, #1
 800f770:	807b      	strh	r3, [r7, #2]
 800f772:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f774:	2000      	movs	r0, #0
 800f776:	e7fc      	b.n	800f772 <udp_recv2+0x42>
 800f778:	2000393c 	andcs	r3, r0, ip, lsr r9

0800f77c <udp_send>:
 800f77c:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800f780:	f8df 9130 	ldr.w	r9, [pc, #304]	; 800f8b4 <udp_send+0x138>
 800f784:	461c      	mov	r4, r3
 800f786:	f859 3020 	ldr.w	r3, [r9, r0, lsl #2]
 800f78a:	4607      	mov	r7, r0
 800f78c:	4688      	mov	r8, r1
 800f78e:	4616      	mov	r6, r2
 800f790:	2b00      	cmp	r3, #0
 800f792:	f000 808b 	beq.w	800f8ac <udp_send+0x130>
 800f796:	1c63      	adds	r3, r4, #1
 800f798:	d141      	bne.n	800f81e <udp_send+0xa2>
 800f79a:	4a47      	ldr	r2, [pc, #284]	; (800f8b8 <udp_send+0x13c>)
 800f79c:	2307      	movs	r3, #7
 800f79e:	4611      	mov	r1, r2
 800f7a0:	20ff      	movs	r0, #255	; 0xff
 800f7a2:	e001      	b.n	800f7a8 <udp_send+0x2c>
 800f7a4:	f802 0b01 	strb.w	r0, [r2], #1
 800f7a8:	3b01      	subs	r3, #1
 800f7aa:	d1fb      	bne.n	800f7a4 <udp_send+0x28>
 800f7ac:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800f7b0:	83cb      	strh	r3, [r1, #30]
 800f7b2:	840b      	strh	r3, [r1, #32]
 800f7b4:	2500      	movs	r5, #0
 800f7b6:	f8df a104 	ldr.w	sl, [pc, #260]	; 800f8bc <udp_send+0x140>
 800f7ba:	4c3f      	ldr	r4, [pc, #252]	; (800f8b8 <udp_send+0x13c>)
 800f7bc:	f8ba 3000 	ldrh.w	r3, [sl]
 800f7c0:	2114      	movs	r1, #20
 800f7c2:	8263      	strh	r3, [r4, #18]
 800f7c4:	f106 031c 	add.w	r3, r6, #28
 800f7c8:	ba5b      	rev16	r3, r3
 800f7ca:	f104 000e 	add.w	r0, r4, #14
 800f7ce:	8223      	strh	r3, [r4, #16]
 800f7d0:	8325      	strh	r5, [r4, #24]
 800f7d2:	f001 fdbe 	bl	8011352 <net_chksum>
 800f7d6:	f859 3027 	ldr.w	r3, [r9, r7, lsl #2]
 800f7da:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 800f7de:	ba5b      	rev16	r3, r3
 800f7e0:	8463      	strh	r3, [r4, #34]	; 0x22
 800f7e2:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800f7e6:	4632      	mov	r2, r6
 800f7e8:	ba5b      	rev16	r3, r3
 800f7ea:	84a3      	strh	r3, [r4, #36]	; 0x24
 800f7ec:	f106 0308 	add.w	r3, r6, #8
 800f7f0:	ba5b      	rev16	r3, r3
 800f7f2:	bf28      	it	cs
 800f7f4:	f44f 62b8 	movcs.w	r2, #1472	; 0x5c0
 800f7f8:	4641      	mov	r1, r8
 800f7fa:	8320      	strh	r0, [r4, #24]
 800f7fc:	f104 002a 	add.w	r0, r4, #42	; 0x2a
 800f800:	84e3      	strh	r3, [r4, #38]	; 0x26
 800f802:	f7ff fee7 	bl	800f5d4 <net_memcpy>
 800f806:	4620      	mov	r0, r4
 800f808:	f106 012a 	add.w	r1, r6, #42	; 0x2a
 800f80c:	f004 f9c2 	bl	8013b94 <emac_eth_send>
 800f810:	f8ba 3000 	ldrh.w	r3, [sl]
 800f814:	4628      	mov	r0, r5
 800f816:	3301      	adds	r3, #1
 800f818:	f8aa 3000 	strh.w	r3, [sl]
 800f81c:	e037      	b.n	800f88e <udp_send+0x112>
 800f81e:	4b28      	ldr	r3, [pc, #160]	; (800f8c0 <udp_send+0x144>)
 800f820:	681b      	ldr	r3, [r3, #0]
 800f822:	43a3      	bics	r3, r4
 800f824:	d10f      	bne.n	800f846 <udp_send+0xca>
 800f826:	2307      	movs	r3, #7
 800f828:	21ff      	movs	r1, #255	; 0xff
 800f82a:	4a23      	ldr	r2, [pc, #140]	; (800f8b8 <udp_send+0x13c>)
 800f82c:	e001      	b.n	800f832 <udp_send+0xb6>
 800f82e:	f802 1b01 	strb.w	r1, [r2], #1
 800f832:	3b01      	subs	r3, #1
 800f834:	d1fb      	bne.n	800f82e <udp_send+0xb2>
 800f836:	2204      	movs	r2, #4
 800f838:	4822      	ldr	r0, [pc, #136]	; (800f8c4 <udp_send+0x148>)
 800f83a:	eb0d 0102 	add.w	r1, sp, r2
 800f83e:	9401      	str	r4, [sp, #4]
 800f840:	f7ff febe 	bl	800f5c0 <memcpy.isra.0>
 800f844:	e7b6      	b.n	800f7b4 <udp_send+0x38>
 800f846:	f004 03e0 	and.w	r3, r4, #224	; 0xe0
 800f84a:	2be0      	cmp	r3, #224	; 0xe0
 800f84c:	d10e      	bne.n	800f86c <udp_send+0xf0>
 800f84e:	491e      	ldr	r1, [pc, #120]	; (800f8c8 <udp_send+0x14c>)
 800f850:	f3c4 2306 	ubfx	r3, r4, #8, #7
 800f854:	70cb      	strb	r3, [r1, #3]
 800f856:	f3c4 4307 	ubfx	r3, r4, #16, #8
 800f85a:	710b      	strb	r3, [r1, #4]
 800f85c:	f3c4 6307 	ubfx	r3, r4, #24, #8
 800f860:	2206      	movs	r2, #6
 800f862:	4815      	ldr	r0, [pc, #84]	; (800f8b8 <udp_send+0x13c>)
 800f864:	714b      	strb	r3, [r1, #5]
 800f866:	f7ff feab 	bl	800f5c0 <memcpy.isra.0>
 800f86a:	e7e4      	b.n	800f836 <udp_send+0xba>
 800f86c:	4b17      	ldr	r3, [pc, #92]	; (800f8cc <udp_send+0x150>)
 800f86e:	681b      	ldr	r3, [r3, #0]
 800f870:	43a3      	bics	r3, r4
 800f872:	d00f      	beq.n	800f894 <udp_send+0x118>
 800f874:	4d16      	ldr	r5, [pc, #88]	; (800f8d0 <udp_send+0x154>)
 800f876:	4910      	ldr	r1, [pc, #64]	; (800f8b8 <udp_send+0x13c>)
 800f878:	6828      	ldr	r0, [r5, #0]
 800f87a:	f001 fa37 	bl	8010cec <arp_cache_lookup>
 800f87e:	682b      	ldr	r3, [r5, #0]
 800f880:	4298      	cmp	r0, r3
 800f882:	d0d8      	beq.n	800f836 <udp_send+0xba>
 800f884:	4813      	ldr	r0, [pc, #76]	; (800f8d4 <udp_send+0x158>)
 800f886:	f002 feef 	bl	8012668 <console_error>
 800f88a:	f06f 0002 	mvn.w	r0, #2
 800f88e:	b002      	add	sp, #8
 800f890:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f894:	4620      	mov	r0, r4
 800f896:	4908      	ldr	r1, [pc, #32]	; (800f8b8 <udp_send+0x13c>)
 800f898:	f001 fa28 	bl	8010cec <arp_cache_lookup>
 800f89c:	42a0      	cmp	r0, r4
 800f89e:	d0ca      	beq.n	800f836 <udp_send+0xba>
 800f8a0:	480d      	ldr	r0, [pc, #52]	; (800f8d8 <udp_send+0x15c>)
 800f8a2:	f002 fee1 	bl	8012668 <console_error>
 800f8a6:	f06f 0001 	mvn.w	r0, #1
 800f8aa:	e7f0      	b.n	800f88e <udp_send+0x112>
 800f8ac:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800f8b0:	e7ed      	b.n	800f88e <udp_send+0x112>
 800f8b2:	bf00      	nop
 800f8b4:	2000391c 	andcs	r3, r0, ip, lsl r9
 800f8b8:	200095dc 	ldrdcs	r9, [r0], -ip
 800f8bc:	20003918 	andcs	r3, r0, r8, lsl r9
 800f8c0:	2000390c 	andcs	r3, r0, ip, lsl #18
 800f8c4:	200095fa 	strdcs	r9, [r0], -sl
 800f8c8:	20000018 	andcs	r0, r0, r8, lsl r0
 800f8cc:	20003914 	andcs	r3, r0, r4, lsl r9
 800f8d0:	20003910 	andcs	r3, r0, r0, lsl r9
 800f8d4:	0801687f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, fp, sp, lr}
 800f8d8:	080168a5 	stmdaeq	r1, {r0, r2, r5, r7, fp, sp, lr}

0800f8dc <strlen>:
 800f8dc:	4603      	mov	r3, r0
 800f8de:	461a      	mov	r2, r3
 800f8e0:	7811      	ldrb	r1, [r2, #0]
 800f8e2:	3301      	adds	r3, #1
 800f8e4:	2900      	cmp	r1, #0
 800f8e6:	d1fa      	bne.n	800f8de <strlen+0x2>
 800f8e8:	1a10      	subs	r0, r2, r0
 800f8ea:	4770      	bx	lr

0800f8ec <strcmp>:
 800f8ec:	1e43      	subs	r3, r0, #1
 800f8ee:	3901      	subs	r1, #1
 800f8f0:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800f8f4:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800f8f8:	4290      	cmp	r0, r2
 800f8fa:	d001      	beq.n	800f900 <strcmp+0x14>
 800f8fc:	1a80      	subs	r0, r0, r2
 800f8fe:	e001      	b.n	800f904 <strcmp+0x18>
 800f900:	2800      	cmp	r0, #0
 800f902:	d1f5      	bne.n	800f8f0 <strcmp+0x4>
 800f904:	4770      	bx	lr

0800f906 <strcpy.isra.0>:
 800f906:	3801      	subs	r0, #1
 800f908:	f811 3b01 	ldrb.w	r3, [r1], #1
 800f90c:	f800 3f01 	strb.w	r3, [r0, #1]!
 800f910:	2b00      	cmp	r3, #0
 800f912:	d1f9      	bne.n	800f908 <strcpy.isra.0+0x2>
 800f914:	4770      	bx	lr

0800f916 <strcat.isra.0>:
 800f916:	b538      	push	{r3, r4, r5, lr}
 800f918:	4604      	mov	r4, r0
 800f91a:	460d      	mov	r5, r1
 800f91c:	f7ff ffde 	bl	800f8dc <strlen>
 800f920:	4629      	mov	r1, r5
 800f922:	4420      	add	r0, r4
 800f924:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800f928:	f7ff bfed 	b.w	800f906 <strcpy.isra.0>

0800f92c <MDNS::MDNS()>:
 800f92c:	b513      	push	{r0, r1, r4, lr}
 800f92e:	4604      	mov	r4, r0
 800f930:	a901      	add	r1, sp, #4
 800f932:	4804      	ldr	r0, [pc, #16]	; (800f944 <MDNS::MDNS()+0x18>)
 800f934:	f003 f814 	bl	8012960 <inet_aton>
 800f938:	4620      	mov	r0, r4
 800f93a:	4b03      	ldr	r3, [pc, #12]	; (800f948 <MDNS::MDNS()+0x1c>)
 800f93c:	9a01      	ldr	r2, [sp, #4]
 800f93e:	601a      	str	r2, [r3, #0]
 800f940:	b002      	add	sp, #8
 800f942:	bd10      	pop	{r4, pc}
 800f944:	080168e0 	stmdaeq	r1, {r5, r6, r7, fp, sp, lr}
 800f948:	20009bd0 	ldrdcs	r9, [r0], -r0

0800f94c <MDNS::SetName(char const*)>:
 800f94c:	b538      	push	{r3, r4, r5, lr}
 800f94e:	4d0b      	ldr	r5, [pc, #44]	; (800f97c <MDNS::SetName(char const*)+0x30>)
 800f950:	460c      	mov	r4, r1
 800f952:	6828      	ldr	r0, [r5, #0]
 800f954:	b108      	cbz	r0, 800f95a <MDNS::SetName(char const*)+0xe>
 800f956:	f002 fffd 	bl	8012954 <operator delete[](void*)>
 800f95a:	4620      	mov	r0, r4
 800f95c:	f7ff ffbe 	bl	800f8dc <strlen>
 800f960:	3007      	adds	r0, #7
 800f962:	f002 fffb 	bl	801295c <operator new[](unsigned int)>
 800f966:	4621      	mov	r1, r4
 800f968:	6028      	str	r0, [r5, #0]
 800f96a:	f7ff ffcc 	bl	800f906 <strcpy.isra.0>
 800f96e:	6828      	ldr	r0, [r5, #0]
 800f970:	4903      	ldr	r1, [pc, #12]	; (800f980 <MDNS::SetName(char const*)+0x34>)
 800f972:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800f976:	f7ff bfce 	b.w	800f916 <strcat.isra.0>
 800f97a:	bf00      	nop
 800f97c:	2000a000 	andcs	sl, r0, r0
 800f980:	080168f0 	stmdaeq	r1, {r4, r5, r6, r7, fp, sp, lr}

0800f984 <MDNS::DecodeDNSNameNotation(char const*, char*)>:
 800f984:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f988:	f04f 0e00 	mov.w	lr, #0
 800f98c:	f04f 0c2e 	mov.w	ip, #46	; 0x2e
 800f990:	4675      	mov	r5, lr
 800f992:	4e1b      	ldr	r6, [pc, #108]	; (800fa00 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x7c>)
 800f994:	4f1b      	ldr	r7, [pc, #108]	; (800fa04 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x80>)
 800f996:	780b      	ldrb	r3, [r1, #0]
 800f998:	1c68      	adds	r0, r5, #1
 800f99a:	b913      	cbnz	r3, 800f9a2 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x1e>
 800f99c:	7013      	strb	r3, [r2, #0]
 800f99e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f9a2:	2b3f      	cmp	r3, #63	; 0x3f
 800f9a4:	d91c      	bls.n	800f9e0 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x5c>
 800f9a6:	7849      	ldrb	r1, [r1, #1]
 800f9a8:	ea06 2303 	and.w	r3, r6, r3, lsl #8
 800f9ac:	430b      	orrs	r3, r1
 800f9ae:	6839      	ldr	r1, [r7, #0]
 800f9b0:	f1be 0f00 	cmp.w	lr, #0
 800f9b4:	bf08      	it	eq
 800f9b6:	4605      	moveq	r5, r0
 800f9b8:	5ccc      	ldrb	r4, [r1, r3]
 800f9ba:	3301      	adds	r3, #1
 800f9bc:	4419      	add	r1, r3
 800f9be:	2300      	movs	r3, #0
 800f9c0:	42a3      	cmp	r3, r4
 800f9c2:	5cc8      	ldrb	r0, [r1, r3]
 800f9c4:	d309      	bcc.n	800f9da <MDNS::DecodeDNSNameNotation(char const*, char*)+0x56>
 800f9c6:	f04f 0e01 	mov.w	lr, #1
 800f9ca:	4421      	add	r1, r4
 800f9cc:	4414      	add	r4, r2
 800f9ce:	780b      	ldrb	r3, [r1, #0]
 800f9d0:	b10b      	cbz	r3, 800f9d6 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x52>
 800f9d2:	f804 cb01 	strb.w	ip, [r4], #1
 800f9d6:	4622      	mov	r2, r4
 800f9d8:	e7dd      	b.n	800f996 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x12>
 800f9da:	54d0      	strb	r0, [r2, r3]
 800f9dc:	3301      	adds	r3, #1
 800f9de:	e7ef      	b.n	800f9c0 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x3c>
 800f9e0:	4688      	mov	r8, r1
 800f9e2:	18d4      	adds	r4, r2, r3
 800f9e4:	f818 9f01 	ldrb.w	r9, [r8, #1]!
 800f9e8:	f802 9b01 	strb.w	r9, [r2], #1
 800f9ec:	4294      	cmp	r4, r2
 800f9ee:	d1f9      	bne.n	800f9e4 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x60>
 800f9f0:	1c5a      	adds	r2, r3, #1
 800f9f2:	4411      	add	r1, r2
 800f9f4:	f1be 0f00 	cmp.w	lr, #0
 800f9f8:	d1e9      	bne.n	800f9ce <MDNS::DecodeDNSNameNotation(char const*, char*)+0x4a>
 800f9fa:	181d      	adds	r5, r3, r0
 800f9fc:	e7e7      	b.n	800f9ce <MDNS::DecodeDNSNameNotation(char const*, char*)+0x4a>
 800f9fe:	bf00      	nop
 800fa00:	ffff3f00 			; <UNDEFINED> instruction: 0xffff3f00
 800fa04:	2000a004 	andcs	sl, r0, r4

0800fa08 <MDNS::FindFirstDotFromRight(char const*) const>:
 800fa08:	b510      	push	{r4, lr}
 800fa0a:	4608      	mov	r0, r1
 800fa0c:	460c      	mov	r4, r1
 800fa0e:	f7ff ff65 	bl	800f8dc <strlen>
 800fa12:	4420      	add	r0, r4
 800fa14:	42a0      	cmp	r0, r4
 800fa16:	d903      	bls.n	800fa20 <MDNS::FindFirstDotFromRight(char const*) const+0x18>
 800fa18:	f810 3901 	ldrb.w	r3, [r0], #-1
 800fa1c:	2b2e      	cmp	r3, #46	; 0x2e
 800fa1e:	d1f9      	bne.n	800fa14 <MDNS::FindFirstDotFromRight(char const*) const+0xc>
 800fa20:	3001      	adds	r0, #1
 800fa22:	bd10      	pop	{r4, pc}

0800fa24 <MDNS::WriteDnsName(char const*, char*, bool)>:
 800fa24:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fa26:	4614      	mov	r4, r2
 800fa28:	460f      	mov	r7, r1
 800fa2a:	1c60      	adds	r0, r4, #1
 800fa2c:	463d      	mov	r5, r7
 800fa2e:	f817 6b01 	ldrb.w	r6, [r7], #1
 800fa32:	b946      	cbnz	r6, 800fa46 <MDNS::WriteDnsName(char const*, char*, bool)+0x22>
 800fa34:	1a69      	subs	r1, r5, r1
 800fa36:	7021      	strb	r1, [r4, #0]
 800fa38:	7829      	ldrb	r1, [r5, #0]
 800fa3a:	b949      	cbnz	r1, 800fa50 <MDNS::WriteDnsName(char const*, char*, bool)+0x2c>
 800fa3c:	b10b      	cbz	r3, 800fa42 <MDNS::WriteDnsName(char const*, char*, bool)+0x1e>
 800fa3e:	f800 1b01 	strb.w	r1, [r0], #1
 800fa42:	1a80      	subs	r0, r0, r2
 800fa44:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800fa46:	2e2e      	cmp	r6, #46	; 0x2e
 800fa48:	d0f4      	beq.n	800fa34 <MDNS::WriteDnsName(char const*, char*, bool)+0x10>
 800fa4a:	f800 6b01 	strb.w	r6, [r0], #1
 800fa4e:	e7ed      	b.n	800fa2c <MDNS::WriteDnsName(char const*, char*, bool)+0x8>
 800fa50:	4604      	mov	r4, r0
 800fa52:	1c69      	adds	r1, r5, #1
 800fa54:	e7e8      	b.n	800fa28 <MDNS::WriteDnsName(char const*, char*, bool)+0x4>
	...

0800fa58 <MDNS::CreateAnswerLocalIpAddress()>:
 800fa58:	2384      	movs	r3, #132	; 0x84
 800fa5a:	b510      	push	{r4, lr}
 800fa5c:	4c0f      	ldr	r4, [pc, #60]	; (800fa9c <MDNS::CreateAnswerLocalIpAddress()+0x44>)
 800fa5e:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 800fa62:	80e3      	strh	r3, [r4, #6]
 800fa64:	2300      	movs	r3, #0
 800fa66:	490e      	ldr	r1, [pc, #56]	; (800faa0 <MDNS::CreateAnswerLocalIpAddress()+0x48>)
 800fa68:	e9c4 2302 	strd	r2, r3, [r4, #8]
 800fa6c:	6809      	ldr	r1, [r1, #0]
 800fa6e:	f104 0210 	add.w	r2, r4, #16
 800fa72:	2301      	movs	r3, #1
 800fa74:	f7ff ffd6 	bl	800fa24 <MDNS::WriteDnsName(char const*, char*, bool)>
 800fa78:	490a      	ldr	r1, [pc, #40]	; (800faa4 <MDNS::CreateAnswerLocalIpAddress()+0x4c>)
 800fa7a:	1813      	adds	r3, r2, r0
 800fa7c:	5011      	str	r1, [r2, r0]
 800fa7e:	f04f 42f0 	mov.w	r2, #2013265920	; 0x78000000
 800fa82:	605a      	str	r2, [r3, #4]
 800fa84:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800fa88:	811a      	strh	r2, [r3, #8]
 800fa8a:	4a07      	ldr	r2, [pc, #28]	; (800faa8 <MDNS::CreateAnswerLocalIpAddress()+0x50>)
 800fa8c:	6812      	ldr	r2, [r2, #0]
 800fa8e:	6912      	ldr	r2, [r2, #16]
 800fa90:	f8c3 200a 	str.w	r2, [r3, #10]
 800fa94:	1b1b      	subs	r3, r3, r4
 800fa96:	330a      	adds	r3, #10
 800fa98:	6023      	str	r3, [r4, #0]
 800fa9a:	bd10      	pop	{r4, pc}
 800fa9c:	20009bd4 	ldrdcs	r9, [r0], -r4
 800faa0:	2000a000 	andcs	sl, r0, r0
 800faa4:	01800100 	orreq	r0, r0, r0, lsl #2
 800faa8:	2000a008 	andcs	sl, r0, r8

0800faac <MDNS::Start()>:
 800faac:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800faae:	4c1d      	ldr	r4, [pc, #116]	; (800fb24 <MDNS::Start()+0x78>)
 800fab0:	f241 41e9 	movw	r1, #5353	; 0x14e9
 800fab4:	4605      	mov	r5, r0
 800fab6:	6820      	ldr	r0, [r4, #0]
 800fab8:	f000 fb26 	bl	8010108 <Network::Begin(unsigned short)>
 800fabc:	4e1a      	ldr	r6, [pc, #104]	; (800fb28 <MDNS::Start()+0x7c>)
 800fabe:	4f1b      	ldr	r7, [pc, #108]	; (800fb2c <MDNS::Start()+0x80>)
 800fac0:	4601      	mov	r1, r0
 800fac2:	6030      	str	r0, [r6, #0]
 800fac4:	683a      	ldr	r2, [r7, #0]
 800fac6:	6820      	ldr	r0, [r4, #0]
 800fac8:	f000 fb2f 	bl	801012a <Network::JoinGroup(int, unsigned int)>
 800facc:	4b18      	ldr	r3, [pc, #96]	; (800fb30 <MDNS::Start()+0x84>)
 800face:	681b      	ldr	r3, [r3, #0]
 800fad0:	b923      	cbnz	r3, 800fadc <MDNS::Start()+0x30>
 800fad2:	6821      	ldr	r1, [r4, #0]
 800fad4:	4628      	mov	r0, r5
 800fad6:	311c      	adds	r1, #28
 800fad8:	f7ff ff38 	bl	800f94c <MDNS::SetName(char const*)>
 800fadc:	4628      	mov	r0, r5
 800fade:	f7ff ffbb 	bl	800fa58 <MDNS::CreateAnswerLocalIpAddress()>
 800fae2:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800fae6:	4913      	ldr	r1, [pc, #76]	; (800fb34 <MDNS::Start()+0x88>)
 800fae8:	7830      	ldrb	r0, [r6, #0]
 800faea:	f831 2b04 	ldrh.w	r2, [r1], #4
 800faee:	9300      	str	r3, [sp, #0]
 800faf0:	683b      	ldr	r3, [r7, #0]
 800faf2:	f7ff fe43 	bl	800f77c <udp_send>
 800faf6:	233f      	movs	r3, #63	; 0x3f
 800faf8:	6820      	ldr	r0, [r4, #0]
 800fafa:	4c0f      	ldr	r4, [pc, #60]	; (800fb38 <MDNS::Start()+0x8c>)
 800fafc:	f100 025c 	add.w	r2, r0, #92	; 0x5c
 800fb00:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 800fb04:	b929      	cbnz	r1, 800fb12 <MDNS::Start()+0x66>
 800fb06:	4413      	add	r3, r2
 800fb08:	429a      	cmp	r2, r3
 800fb0a:	d006      	beq.n	800fb1a <MDNS::Start()+0x6e>
 800fb0c:	f802 1b01 	strb.w	r1, [r2], #1
 800fb10:	e7fa      	b.n	800fb08 <MDNS::Start()+0x5c>
 800fb12:	3b01      	subs	r3, #1
 800fb14:	f802 1b01 	strb.w	r1, [r2], #1
 800fb18:	d1f2      	bne.n	800fb00 <MDNS::Start()+0x54>
 800fb1a:	2300      	movs	r3, #0
 800fb1c:	f880 309b 	strb.w	r3, [r0, #155]	; 0x9b
 800fb20:	b003      	add	sp, #12
 800fb22:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800fb24:	2000a008 	andcs	sl, r0, r8
 800fb28:	20000020 	andcs	r0, r0, r0, lsr #32
 800fb2c:	20009bd0 	ldrdcs	r9, [r0], -r0
 800fb30:	2000a000 	andcs	sl, r0, r0
 800fb34:	20009bd4 	ldrdcs	r9, [r0], -r4
 800fb38:	080168f0 	stmdaeq	r1, {r4, r5, r6, r7, fp, sp, lr}

0800fb3c <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)>:
 800fb3c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fb40:	4c1b      	ldr	r4, [pc, #108]	; (800fbb0 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x74>)
 800fb42:	ea4f 1c01 	mov.w	ip, r1, lsl #4
 800fb46:	eb04 1501 	add.w	r5, r4, r1, lsl #4
 800fb4a:	2300      	movs	r3, #0
 800fb4c:	f854 100c 	ldr.w	r1, [r4, ip]
 800fb50:	4607      	mov	r7, r0
 800fb52:	f7ff ff67 	bl	800fa24 <MDNS::WriteDnsName(char const*, char*, bool)>
 800fb56:	2301      	movs	r3, #1
 800fb58:	7bac      	ldrb	r4, [r5, #14]
 800fb5a:	4616      	mov	r6, r2
 800fb5c:	4915      	ldr	r1, [pc, #84]	; (800fbb4 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x78>)
 800fb5e:	4402      	add	r2, r0
 800fb60:	4815      	ldr	r0, [pc, #84]	; (800fbb8 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x7c>)
 800fb62:	429c      	cmp	r4, r3
 800fb64:	bf18      	it	ne
 800fb66:	4601      	movne	r1, r0
 800fb68:	4638      	mov	r0, r7
 800fb6a:	f7ff ff5b 	bl	800fa24 <MDNS::WriteDnsName(char const*, char*, bool)>
 800fb6e:	4b13      	ldr	r3, [pc, #76]	; (800fbbc <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x80>)
 800fb70:	1814      	adds	r4, r2, r0
 800fb72:	5013      	str	r3, [r2, r0]
 800fb74:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800fb78:	6063      	str	r3, [r4, #4]
 800fb7a:	4b11      	ldr	r3, [pc, #68]	; (800fbc0 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x84>)
 800fb7c:	f8d3 8000 	ldr.w	r8, [r3]
 800fb80:	4640      	mov	r0, r8
 800fb82:	f7ff feab 	bl	800f8dc <strlen>
 800fb86:	f100 0308 	add.w	r3, r0, #8
 800fb8a:	ba5b      	rev16	r3, r3
 800fb8c:	8123      	strh	r3, [r4, #8]
 800fb8e:	2300      	movs	r3, #0
 800fb90:	f8c4 300a 	str.w	r3, [r4, #10]
 800fb94:	89ab      	ldrh	r3, [r5, #12]
 800fb96:	f104 0210 	add.w	r2, r4, #16
 800fb9a:	ba5b      	rev16	r3, r3
 800fb9c:	81e3      	strh	r3, [r4, #14]
 800fb9e:	4641      	mov	r1, r8
 800fba0:	2301      	movs	r3, #1
 800fba2:	4638      	mov	r0, r7
 800fba4:	f7ff ff3e 	bl	800fa24 <MDNS::WriteDnsName(char const*, char*, bool)>
 800fba8:	4410      	add	r0, r2
 800fbaa:	1b80      	subs	r0, r0, r6
 800fbac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800fbb0:	20009dd8 	ldrdcs	r9, [r0], -r8
 800fbb4:	080168ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, fp, sp, lr}
 800fbb8:	08016909 	stmdaeq	r1, {r0, r3, r8, fp, sp, lr}
 800fbbc:	01802100 	orreq	r2, r0, r0, lsl #2
 800fbc0:	2000a000 	andcs	sl, r0, r0

0800fbc4 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)>:
 800fbc4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fbc8:	4e19      	ldr	r6, [pc, #100]	; (800fc30 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x6c>)
 800fbca:	010f      	lsls	r7, r1, #4
 800fbcc:	eb06 1501 	add.w	r5, r6, r1, lsl #4
 800fbd0:	2300      	movs	r3, #0
 800fbd2:	59f1      	ldr	r1, [r6, r7]
 800fbd4:	4604      	mov	r4, r0
 800fbd6:	f7ff ff25 	bl	800fa24 <MDNS::WriteDnsName(char const*, char*, bool)>
 800fbda:	2301      	movs	r3, #1
 800fbdc:	7bae      	ldrb	r6, [r5, #14]
 800fbde:	4690      	mov	r8, r2
 800fbe0:	4914      	ldr	r1, [pc, #80]	; (800fc34 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x70>)
 800fbe2:	4402      	add	r2, r0
 800fbe4:	4814      	ldr	r0, [pc, #80]	; (800fc38 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x74>)
 800fbe6:	429e      	cmp	r6, r3
 800fbe8:	bf18      	it	ne
 800fbea:	4601      	movne	r1, r0
 800fbec:	4620      	mov	r0, r4
 800fbee:	f7ff ff19 	bl	800fa24 <MDNS::WriteDnsName(char const*, char*, bool)>
 800fbf2:	4b12      	ldr	r3, [pc, #72]	; (800fc3c <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x78>)
 800fbf4:	1816      	adds	r6, r2, r0
 800fbf6:	5013      	str	r3, [r2, r0]
 800fbf8:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800fbfc:	68a8      	ldr	r0, [r5, #8]
 800fbfe:	6073      	str	r3, [r6, #4]
 800fc00:	f106 040b 	add.w	r4, r6, #11
 800fc04:	b938      	cbnz	r0, 800fc16 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x52>
 800fc06:	f44f 7380 	mov.w	r3, #256	; 0x100
 800fc0a:	72b0      	strb	r0, [r6, #10]
 800fc0c:	8133      	strh	r3, [r6, #8]
 800fc0e:	eba4 0008 	sub.w	r0, r4, r8
 800fc12:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800fc16:	f7ff fe61 	bl	800f8dc <strlen>
 800fc1a:	4607      	mov	r7, r0
 800fc1c:	1c43      	adds	r3, r0, #1
 800fc1e:	72b0      	strb	r0, [r6, #10]
 800fc20:	ba5b      	rev16	r3, r3
 800fc22:	4620      	mov	r0, r4
 800fc24:	68a9      	ldr	r1, [r5, #8]
 800fc26:	8133      	strh	r3, [r6, #8]
 800fc28:	f7ff fe6d 	bl	800f906 <strcpy.isra.0>
 800fc2c:	443c      	add	r4, r7
 800fc2e:	e7ee      	b.n	800fc0e <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x4a>
 800fc30:	20009dd8 	ldrdcs	r9, [r0], -r8
 800fc34:	080168ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, fp, sp, lr}
 800fc38:	08016909 	stmdaeq	r1, {r0, r3, r8, fp, sp, lr}
 800fc3c:	01801000 	orreq	r1, r0, r0

0800fc40 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)>:
 800fc40:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800fc44:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800fca8 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x68>
 800fc48:	ea4f 1901 	mov.w	r9, r1, lsl #4
 800fc4c:	eb08 1501 	add.w	r5, r8, r1, lsl #4
 800fc50:	6869      	ldr	r1, [r5, #4]
 800fc52:	2301      	movs	r3, #1
 800fc54:	4607      	mov	r7, r0
 800fc56:	f7ff fee5 	bl	800fa24 <MDNS::WriteDnsName(char const*, char*, bool)>
 800fc5a:	4b14      	ldr	r3, [pc, #80]	; (800fcac <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x6c>)
 800fc5c:	f858 8009 	ldr.w	r8, [r8, r9]
 800fc60:	5013      	str	r3, [r2, r0]
 800fc62:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800fc66:	1816      	adds	r6, r2, r0
 800fc68:	6073      	str	r3, [r6, #4]
 800fc6a:	4640      	mov	r0, r8
 800fc6c:	4614      	mov	r4, r2
 800fc6e:	f7ff fe35 	bl	800f8dc <strlen>
 800fc72:	f100 030d 	add.w	r3, r0, #13
 800fc76:	ba5b      	rev16	r3, r3
 800fc78:	4641      	mov	r1, r8
 800fc7a:	8133      	strh	r3, [r6, #8]
 800fc7c:	f106 020a 	add.w	r2, r6, #10
 800fc80:	2300      	movs	r3, #0
 800fc82:	4638      	mov	r0, r7
 800fc84:	f7ff fece 	bl	800fa24 <MDNS::WriteDnsName(char const*, char*, bool)>
 800fc88:	2301      	movs	r3, #1
 800fc8a:	4402      	add	r2, r0
 800fc8c:	7bad      	ldrb	r5, [r5, #14]
 800fc8e:	4808      	ldr	r0, [pc, #32]	; (800fcb0 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x70>)
 800fc90:	4908      	ldr	r1, [pc, #32]	; (800fcb4 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x74>)
 800fc92:	429d      	cmp	r5, r3
 800fc94:	bf18      	it	ne
 800fc96:	4601      	movne	r1, r0
 800fc98:	4638      	mov	r0, r7
 800fc9a:	f7ff fec3 	bl	800fa24 <MDNS::WriteDnsName(char const*, char*, bool)>
 800fc9e:	4410      	add	r0, r2
 800fca0:	1b00      	subs	r0, r0, r4
 800fca2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800fca6:	bf00      	nop
 800fca8:	20009dd8 	ldrdcs	r9, [r0], -r8
 800fcac:	01000c00 	tsteq	r0, r0, lsl #24
 800fcb0:	08016909 	stmdaeq	r1, {r0, r3, r8, fp, sp, lr}
 800fcb4:	080168ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, fp, sp, lr}

0800fcb8 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)>:
 800fcb8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fcba:	460f      	mov	r7, r1
 800fcbc:	2301      	movs	r3, #1
 800fcbe:	490f      	ldr	r1, [pc, #60]	; (800fcfc <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x44>)
 800fcc0:	4606      	mov	r6, r0
 800fcc2:	f7ff feaf 	bl	800fa24 <MDNS::WriteDnsName(char const*, char*, bool)>
 800fcc6:	4b0e      	ldr	r3, [pc, #56]	; (800fd00 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x48>)
 800fcc8:	490e      	ldr	r1, [pc, #56]	; (800fd04 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x4c>)
 800fcca:	5013      	str	r3, [r2, r0]
 800fccc:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800fcd0:	eb01 1107 	add.w	r1, r1, r7, lsl #4
 800fcd4:	684f      	ldr	r7, [r1, #4]
 800fcd6:	1815      	adds	r5, r2, r0
 800fcd8:	606b      	str	r3, [r5, #4]
 800fcda:	4638      	mov	r0, r7
 800fcdc:	4614      	mov	r4, r2
 800fcde:	f7ff fdfd 	bl	800f8dc <strlen>
 800fce2:	1c83      	adds	r3, r0, #2
 800fce4:	ba5b      	rev16	r3, r3
 800fce6:	812b      	strh	r3, [r5, #8]
 800fce8:	f105 020a 	add.w	r2, r5, #10
 800fcec:	2301      	movs	r3, #1
 800fcee:	4639      	mov	r1, r7
 800fcf0:	4630      	mov	r0, r6
 800fcf2:	f7ff fe97 	bl	800fa24 <MDNS::WriteDnsName(char const*, char*, bool)>
 800fcf6:	4410      	add	r0, r2
 800fcf8:	1b00      	subs	r0, r0, r4
 800fcfa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800fcfc:	080168f7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, r7, fp, sp, lr}
 800fd00:	01000c00 	tsteq	r0, r0, lsl #24
 800fd04:	20009dd8 	ldrdcs	r9, [r0], -r8

0800fd08 <MDNS::CreateMDNSMessage(unsigned int)>:
 800fd08:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fd0a:	2384      	movs	r3, #132	; 0x84
 800fd0c:	4d19      	ldr	r5, [pc, #100]	; (800fd74 <MDNS::CreateMDNSMessage(unsigned int)+0x6c>)
 800fd0e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800fd12:	80eb      	strh	r3, [r5, #6]
 800fd14:	f44f 7380 	mov.w	r3, #256	; 0x100
 800fd18:	f105 0410 	add.w	r4, r5, #16
 800fd1c:	e9c5 2302 	strd	r2, r3, [r5, #8]
 800fd20:	4622      	mov	r2, r4
 800fd22:	4606      	mov	r6, r0
 800fd24:	460f      	mov	r7, r1
 800fd26:	f7ff ff09 	bl	800fb3c <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)>
 800fd2a:	4404      	add	r4, r0
 800fd2c:	4622      	mov	r2, r4
 800fd2e:	4639      	mov	r1, r7
 800fd30:	4630      	mov	r0, r6
 800fd32:	f7ff ff47 	bl	800fbc4 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)>
 800fd36:	4404      	add	r4, r0
 800fd38:	4622      	mov	r2, r4
 800fd3a:	4639      	mov	r1, r7
 800fd3c:	4630      	mov	r0, r6
 800fd3e:	f7ff ffbb 	bl	800fcb8 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)>
 800fd42:	4404      	add	r4, r0
 800fd44:	4622      	mov	r2, r4
 800fd46:	4639      	mov	r1, r7
 800fd48:	4630      	mov	r0, r6
 800fd4a:	f7ff ff79 	bl	800fc40 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)>
 800fd4e:	4a0a      	ldr	r2, [pc, #40]	; (800fd78 <MDNS::CreateMDNSMessage(unsigned int)+0x70>)
 800fd50:	4404      	add	r4, r0
 800fd52:	f852 3b10 	ldr.w	r3, [r2], #16
 800fd56:	1e60      	subs	r0, r4, #1
 800fd58:	3b0c      	subs	r3, #12
 800fd5a:	4619      	mov	r1, r3
 800fd5c:	3901      	subs	r1, #1
 800fd5e:	d204      	bcs.n	800fd6a <MDNS::CreateMDNSMessage(unsigned int)+0x62>
 800fd60:	441c      	add	r4, r3
 800fd62:	4b06      	ldr	r3, [pc, #24]	; (800fd7c <MDNS::CreateMDNSMessage(unsigned int)+0x74>)
 800fd64:	1ae4      	subs	r4, r4, r3
 800fd66:	602c      	str	r4, [r5, #0]
 800fd68:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800fd6a:	f812 6b01 	ldrb.w	r6, [r2], #1
 800fd6e:	f800 6f01 	strb.w	r6, [r0, #1]!
 800fd72:	e7f3      	b.n	800fd5c <MDNS::CreateMDNSMessage(unsigned int)+0x54>
 800fd74:	20009dfc 	strdcs	r9, [r0], -ip
 800fd78:	20009bd4 	ldrdcs	r9, [r0], -r4
 800fd7c:	20009e00 	andcs	r9, r0, r0, lsl #28

0800fd80 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>:
 800fd80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fd84:	4d40      	ldr	r5, [pc, #256]	; (800fe88 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x108>)
 800fd86:	b085      	sub	sp, #20
 800fd88:	682c      	ldr	r4, [r5, #0]
 800fd8a:	4680      	mov	r8, r0
 800fd8c:	460f      	mov	r7, r1
 800fd8e:	4616      	mov	r6, r2
 800fd90:	f89d b038 	ldrb.w	fp, [sp, #56]	; 0x38
 800fd94:	f8dd a03c 	ldr.w	sl, [sp, #60]	; 0x3c
 800fd98:	b11c      	cbz	r4, 800fda2 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x22>
 800fd9a:	692a      	ldr	r2, [r5, #16]
 800fd9c:	2a00      	cmp	r2, #0
 800fd9e:	d16e      	bne.n	800fe7e <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xfe>
 800fda0:	2401      	movs	r4, #1
 800fda2:	eb05 1204 	add.w	r2, r5, r4, lsl #4
 800fda6:	ea4f 1904 	mov.w	r9, r4, lsl #4
 800fdaa:	8193      	strh	r3, [r2, #12]
 800fdac:	f882 b00e 	strb.w	fp, [r2, #14]
 800fdb0:	2f00      	cmp	r7, #0
 800fdb2:	d154      	bne.n	800fe5e <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xde>
 800fdb4:	4b35      	ldr	r3, [pc, #212]	; (800fe8c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x10c>)
 800fdb6:	6818      	ldr	r0, [r3, #0]
 800fdb8:	301c      	adds	r0, #28
 800fdba:	f7ff fd8f 	bl	800f8dc <strlen>
 800fdbe:	4607      	mov	r7, r0
 800fdc0:	4630      	mov	r0, r6
 800fdc2:	f7ff fd8b 	bl	800f8dc <strlen>
 800fdc6:	4438      	add	r0, r7
 800fdc8:	3001      	adds	r0, #1
 800fdca:	f002 fdc7 	bl	801295c <operator new[](unsigned int)>
 800fdce:	4b2f      	ldr	r3, [pc, #188]	; (800fe8c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x10c>)
 800fdd0:	f845 0009 	str.w	r0, [r5, r9]
 800fdd4:	6819      	ldr	r1, [r3, #0]
 800fdd6:	311c      	adds	r1, #28
 800fdd8:	f7ff fd95 	bl	800f906 <strcpy.isra.0>
 800fddc:	f855 0009 	ldr.w	r0, [r5, r9]
 800fde0:	4631      	mov	r1, r6
 800fde2:	f7ff fd98 	bl	800f916 <strcat.isra.0>
 800fde6:	4631      	mov	r1, r6
 800fde8:	4640      	mov	r0, r8
 800fdea:	f7ff fe0d 	bl	800fa08 <MDNS::FindFirstDotFromRight(char const*) const>
 800fdee:	eb05 0709 	add.w	r7, r5, r9
 800fdf2:	4605      	mov	r5, r0
 800fdf4:	f7ff fd72 	bl	800f8dc <strlen>
 800fdf8:	300d      	adds	r0, #13
 800fdfa:	f002 fdaf 	bl	801295c <operator new[](unsigned int)>
 800fdfe:	4629      	mov	r1, r5
 800fe00:	6078      	str	r0, [r7, #4]
 800fe02:	f7ff fd80 	bl	800f906 <strcpy.isra.0>
 800fe06:	4922      	ldr	r1, [pc, #136]	; (800fe90 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x110>)
 800fe08:	6878      	ldr	r0, [r7, #4]
 800fe0a:	f7ff fd84 	bl	800f916 <strcat.isra.0>
 800fe0e:	4921      	ldr	r1, [pc, #132]	; (800fe94 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x114>)
 800fe10:	4b21      	ldr	r3, [pc, #132]	; (800fe98 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x118>)
 800fe12:	6878      	ldr	r0, [r7, #4]
 800fe14:	f1bb 0f01 	cmp.w	fp, #1
 800fe18:	bf18      	it	ne
 800fe1a:	4619      	movne	r1, r3
 800fe1c:	f7ff fd7b 	bl	800f916 <strcat.isra.0>
 800fe20:	f1ba 0f00 	cmp.w	sl, #0
 800fe24:	d009      	beq.n	800fe3a <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xba>
 800fe26:	4650      	mov	r0, sl
 800fe28:	f7ff fd58 	bl	800f8dc <strlen>
 800fe2c:	3001      	adds	r0, #1
 800fe2e:	f002 fd95 	bl	801295c <operator new[](unsigned int)>
 800fe32:	4651      	mov	r1, sl
 800fe34:	60b8      	str	r0, [r7, #8]
 800fe36:	f7ff fd66 	bl	800f906 <strcpy.isra.0>
 800fe3a:	4621      	mov	r1, r4
 800fe3c:	4640      	mov	r0, r8
 800fe3e:	f7ff ff63 	bl	800fd08 <MDNS::CreateMDNSMessage(unsigned int)>
 800fe42:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800fe46:	4915      	ldr	r1, [pc, #84]	; (800fe9c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x11c>)
 800fe48:	4815      	ldr	r0, [pc, #84]	; (800fea0 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x120>)
 800fe4a:	f831 2b04 	ldrh.w	r2, [r1], #4
 800fe4e:	9300      	str	r3, [sp, #0]
 800fe50:	4b14      	ldr	r3, [pc, #80]	; (800fea4 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x124>)
 800fe52:	7800      	ldrb	r0, [r0, #0]
 800fe54:	681b      	ldr	r3, [r3, #0]
 800fe56:	f7ff fc91 	bl	800f77c <udp_send>
 800fe5a:	2001      	movs	r0, #1
 800fe5c:	e010      	b.n	800fe80 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x100>
 800fe5e:	4638      	mov	r0, r7
 800fe60:	f7ff fd3c 	bl	800f8dc <strlen>
 800fe64:	9003      	str	r0, [sp, #12]
 800fe66:	4630      	mov	r0, r6
 800fe68:	f7ff fd38 	bl	800f8dc <strlen>
 800fe6c:	9b03      	ldr	r3, [sp, #12]
 800fe6e:	4418      	add	r0, r3
 800fe70:	3001      	adds	r0, #1
 800fe72:	f002 fd73 	bl	801295c <operator new[](unsigned int)>
 800fe76:	4639      	mov	r1, r7
 800fe78:	f845 0009 	str.w	r0, [r5, r9]
 800fe7c:	e7ac      	b.n	800fdd8 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x58>
 800fe7e:	2000      	movs	r0, #0
 800fe80:	b005      	add	sp, #20
 800fe82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fe86:	bf00      	nop
 800fe88:	20009dd8 	ldrdcs	r9, [r0], -r8
 800fe8c:	2000a008 	andcs	sl, r0, r8
 800fe90:	08015933 	stmdaeq	r1, {r0, r1, r4, r5, r8, fp, ip, lr}
 800fe94:	080168ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, fp, sp, lr}
 800fe98:	08016909 	stmdaeq	r1, {r0, r3, r8, fp, sp, lr}
 800fe9c:	20009dfc 	strdcs	r9, [r0], -ip
 800fea0:	20000020 	andcs	r0, r0, r0, lsr #32
 800fea4:	20009bd0 	ldrdcs	r9, [r0], -r0

0800fea8 <MDNS::HandleRequest(unsigned short)>:
 800fea8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800feac:	4605      	mov	r5, r0
 800feae:	2700      	movs	r7, #0
 800feb0:	f04f 080c 	mov.w	r8, #12
 800feb4:	b0c5      	sub	sp, #276	; 0x114
 800feb6:	f8df a0c0 	ldr.w	sl, [pc, #192]	; 800ff78 <MDNS::HandleRequest(unsigned short)+0xd0>
 800feba:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 800ff7c <MDNS::HandleRequest(unsigned short)+0xd4>
 800febe:	9103      	str	r1, [sp, #12]
 800fec0:	9b03      	ldr	r3, [sp, #12]
 800fec2:	42bb      	cmp	r3, r7
 800fec4:	d802      	bhi.n	800fecc <MDNS::HandleRequest(unsigned short)+0x24>
 800fec6:	b045      	add	sp, #276	; 0x114
 800fec8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fecc:	f8da 1000 	ldr.w	r1, [sl]
 800fed0:	aa04      	add	r2, sp, #16
 800fed2:	4441      	add	r1, r8
 800fed4:	4628      	mov	r0, r5
 800fed6:	f7ff fd55 	bl	800f984 <MDNS::DecodeDNSNameNotation(char const*, char*)>
 800feda:	f8da 2000 	ldr.w	r2, [sl]
 800fede:	4440      	add	r0, r8
 800fee0:	1813      	adds	r3, r2, r0
 800fee2:	885b      	ldrh	r3, [r3, #2]
 800fee4:	f100 0804 	add.w	r8, r0, #4
 800fee8:	ba5b      	rev16	r3, r3
 800feea:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800feee:	2b01      	cmp	r3, #1
 800fef0:	d13d      	bne.n	800ff6e <MDNS::HandleRequest(unsigned short)+0xc6>
 800fef2:	5a14      	ldrh	r4, [r2, r0]
 800fef4:	4b22      	ldr	r3, [pc, #136]	; (800ff80 <MDNS::HandleRequest(unsigned short)+0xd8>)
 800fef6:	ba64      	rev16	r4, r4
 800fef8:	6818      	ldr	r0, [r3, #0]
 800fefa:	a904      	add	r1, sp, #16
 800fefc:	b2a4      	uxth	r4, r4
 800fefe:	f7ff fcf5 	bl	800f8ec <strcmp>
 800ff02:	b968      	cbnz	r0, 800ff20 <MDNS::HandleRequest(unsigned short)+0x78>
 800ff04:	2c01      	cmp	r4, #1
 800ff06:	d10b      	bne.n	800ff20 <MDNS::HandleRequest(unsigned short)+0x78>
 800ff08:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800ff0c:	491d      	ldr	r1, [pc, #116]	; (800ff84 <MDNS::HandleRequest(unsigned short)+0xdc>)
 800ff0e:	481e      	ldr	r0, [pc, #120]	; (800ff88 <MDNS::HandleRequest(unsigned short)+0xe0>)
 800ff10:	f831 2b04 	ldrh.w	r2, [r1], #4
 800ff14:	9300      	str	r3, [sp, #0]
 800ff16:	4b1d      	ldr	r3, [pc, #116]	; (800ff8c <MDNS::HandleRequest(unsigned short)+0xe4>)
 800ff18:	7800      	ldrb	r0, [r0, #0]
 800ff1a:	681b      	ldr	r3, [r3, #0]
 800ff1c:	f7ff fc2e 	bl	800f77c <udp_send>
 800ff20:	481b      	ldr	r0, [pc, #108]	; (800ff90 <MDNS::HandleRequest(unsigned short)+0xe8>)
 800ff22:	a904      	add	r1, sp, #16
 800ff24:	f7ff fce2 	bl	800f8ec <strcmp>
 800ff28:	f04f 0900 	mov.w	r9, #0
 800ff2c:	4e19      	ldr	r6, [pc, #100]	; (800ff94 <MDNS::HandleRequest(unsigned short)+0xec>)
 800ff2e:	9002      	str	r0, [sp, #8]
 800ff30:	6833      	ldr	r3, [r6, #0]
 800ff32:	b1c3      	cbz	r3, 800ff66 <MDNS::HandleRequest(unsigned short)+0xbe>
 800ff34:	9b02      	ldr	r3, [sp, #8]
 800ff36:	b123      	cbz	r3, 800ff42 <MDNS::HandleRequest(unsigned short)+0x9a>
 800ff38:	6870      	ldr	r0, [r6, #4]
 800ff3a:	a904      	add	r1, sp, #16
 800ff3c:	f7ff fcd6 	bl	800f8ec <strcmp>
 800ff40:	b988      	cbnz	r0, 800ff66 <MDNS::HandleRequest(unsigned short)+0xbe>
 800ff42:	2c0c      	cmp	r4, #12
 800ff44:	d10f      	bne.n	800ff66 <MDNS::HandleRequest(unsigned short)+0xbe>
 800ff46:	4649      	mov	r1, r9
 800ff48:	4628      	mov	r0, r5
 800ff4a:	f7ff fedd 	bl	800fd08 <MDNS::CreateMDNSMessage(unsigned int)>
 800ff4e:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800ff52:	480d      	ldr	r0, [pc, #52]	; (800ff88 <MDNS::HandleRequest(unsigned short)+0xe0>)
 800ff54:	9300      	str	r3, [sp, #0]
 800ff56:	4b0d      	ldr	r3, [pc, #52]	; (800ff8c <MDNS::HandleRequest(unsigned short)+0xe4>)
 800ff58:	f8bb 2000 	ldrh.w	r2, [fp]
 800ff5c:	681b      	ldr	r3, [r3, #0]
 800ff5e:	490e      	ldr	r1, [pc, #56]	; (800ff98 <MDNS::HandleRequest(unsigned short)+0xf0>)
 800ff60:	7800      	ldrb	r0, [r0, #0]
 800ff62:	f7ff fc0b 	bl	800f77c <udp_send>
 800ff66:	3610      	adds	r6, #16
 800ff68:	f1b9 0f00 	cmp.w	r9, #0
 800ff6c:	d001      	beq.n	800ff72 <MDNS::HandleRequest(unsigned short)+0xca>
 800ff6e:	3701      	adds	r7, #1
 800ff70:	e7a6      	b.n	800fec0 <MDNS::HandleRequest(unsigned short)+0x18>
 800ff72:	f04f 0901 	mov.w	r9, #1
 800ff76:	e7db      	b.n	800ff30 <MDNS::HandleRequest(unsigned short)+0x88>
 800ff78:	2000a004 	andcs	sl, r0, r4
 800ff7c:	20009dfc 	strdcs	r9, [r0], -ip
 800ff80:	2000a000 	andcs	sl, r0, r0
 800ff84:	20009bd4 	ldrdcs	r9, [r0], -r4
 800ff88:	20000020 	andcs	r0, r0, r0, lsr #32
 800ff8c:	20009bd0 	ldrdcs	r9, [r0], -r0
 800ff90:	080168f7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, r7, fp, sp, lr}
 800ff94:	20009dd8 	ldrdcs	r9, [r0], -r8
 800ff98:	20009e00 	andcs	r9, r0, r0, lsl #28

0800ff9c <MDNS::Parse()>:
 800ff9c:	4b08      	ldr	r3, [pc, #32]	; (800ffc0 <MDNS::Parse()+0x24>)
 800ff9e:	681a      	ldr	r2, [r3, #0]
 800ffa0:	8853      	ldrh	r3, [r2, #2]
 800ffa2:	ba5b      	rev16	r3, r3
 800ffa4:	b299      	uxth	r1, r3
 800ffa6:	041b      	lsls	r3, r3, #16
 800ffa8:	d408      	bmi.n	800ffbc <MDNS::Parse()+0x20>
 800ffaa:	0b89      	lsrs	r1, r1, #14
 800ffac:	d106      	bne.n	800ffbc <MDNS::Parse()+0x20>
 800ffae:	8891      	ldrh	r1, [r2, #4]
 800ffb0:	b28b      	uxth	r3, r1
 800ffb2:	b11b      	cbz	r3, 800ffbc <MDNS::Parse()+0x20>
 800ffb4:	ba49      	rev16	r1, r1
 800ffb6:	b289      	uxth	r1, r1
 800ffb8:	f7ff bf76 	b.w	800fea8 <MDNS::HandleRequest(unsigned short)>
 800ffbc:	4770      	bx	lr
 800ffbe:	bf00      	nop
 800ffc0:	2000a004 	andcs	sl, r0, r4

0800ffc4 <MDNS::Run()>:
 800ffc4:	b538      	push	{r3, r4, r5, lr}
 800ffc6:	4d0c      	ldr	r5, [pc, #48]	; (800fff8 <MDNS::Run()+0x34>)
 800ffc8:	4604      	mov	r4, r0
 800ffca:	480c      	ldr	r0, [pc, #48]	; (800fffc <MDNS::Run()+0x38>)
 800ffcc:	462b      	mov	r3, r5
 800ffce:	4a0c      	ldr	r2, [pc, #48]	; (8010000 <MDNS::Run()+0x3c>)
 800ffd0:	490c      	ldr	r1, [pc, #48]	; (8010004 <MDNS::Run()+0x40>)
 800ffd2:	7800      	ldrb	r0, [r0, #0]
 800ffd4:	f7ff fbac 	bl	800f730 <udp_recv2>
 800ffd8:	4b0b      	ldr	r3, [pc, #44]	; (8010008 <MDNS::Run()+0x44>)
 800ffda:	882a      	ldrh	r2, [r5, #0]
 800ffdc:	8018      	strh	r0, [r3, #0]
 800ffde:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800ffe2:	429a      	cmp	r2, r3
 800ffe4:	d106      	bne.n	800fff4 <MDNS::Run()+0x30>
 800ffe6:	280c      	cmp	r0, #12
 800ffe8:	d904      	bls.n	800fff4 <MDNS::Run()+0x30>
 800ffea:	4620      	mov	r0, r4
 800ffec:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800fff0:	f7ff bfd4 	b.w	800ff9c <MDNS::Parse()>
 800fff4:	bd38      	pop	{r3, r4, r5, pc}
 800fff6:	bf00      	nop
 800fff8:	20009bcc 	andcs	r9, r0, ip, asr #23
 800fffc:	20000020 	andcs	r0, r0, r0, lsr #32
 8010000:	20009bc8 	andcs	r9, r0, r8, asr #23
 8010004:	2000a004 	andcs	sl, r0, r4
 8010008:	20009df8 	strdcs	r9, [r0], -r8

0801000c <MDNS::Print()>:
 801000c:	b510      	push	{r4, lr}
 801000e:	4816      	ldr	r0, [pc, #88]	; (8010068 <MDNS::Print()+0x5c>)
 8010010:	f7f9 fad4 	bl	80095bc <printf>
 8010014:	4b15      	ldr	r3, [pc, #84]	; (801006c <MDNS::Print()+0x60>)
 8010016:	681b      	ldr	r3, [r3, #0]
 8010018:	3301      	adds	r3, #1
 801001a:	d104      	bne.n	8010026 <MDNS::Print()+0x1a>
 801001c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010020:	4813      	ldr	r0, [pc, #76]	; (8010070 <MDNS::Print()+0x64>)
 8010022:	f7f9 bacb 	b.w	80095bc <printf>
 8010026:	4b13      	ldr	r3, [pc, #76]	; (8010074 <MDNS::Print()+0x68>)
 8010028:	4c13      	ldr	r4, [pc, #76]	; (8010078 <MDNS::Print()+0x6c>)
 801002a:	6819      	ldr	r1, [r3, #0]
 801002c:	4813      	ldr	r0, [pc, #76]	; (801007c <MDNS::Print()+0x70>)
 801002e:	f7f9 fac5 	bl	80095bc <printf>
 8010032:	6823      	ldr	r3, [r4, #0]
 8010034:	b14b      	cbz	r3, 801004a <MDNS::Print()+0x3e>
 8010036:	4a12      	ldr	r2, [pc, #72]	; (8010080 <MDNS::Print()+0x74>)
 8010038:	68a3      	ldr	r3, [r4, #8]
 801003a:	6861      	ldr	r1, [r4, #4]
 801003c:	2b00      	cmp	r3, #0
 801003e:	bf08      	it	eq
 8010040:	4613      	moveq	r3, r2
 8010042:	4810      	ldr	r0, [pc, #64]	; (8010084 <MDNS::Print()+0x78>)
 8010044:	89a2      	ldrh	r2, [r4, #12]
 8010046:	f7f9 fab9 	bl	80095bc <printf>
 801004a:	6923      	ldr	r3, [r4, #16]
 801004c:	b15b      	cbz	r3, 8010066 <MDNS::Print()+0x5a>
 801004e:	69a3      	ldr	r3, [r4, #24]
 8010050:	4a0b      	ldr	r2, [pc, #44]	; (8010080 <MDNS::Print()+0x74>)
 8010052:	6961      	ldr	r1, [r4, #20]
 8010054:	2b00      	cmp	r3, #0
 8010056:	bf08      	it	eq
 8010058:	4613      	moveq	r3, r2
 801005a:	480a      	ldr	r0, [pc, #40]	; (8010084 <MDNS::Print()+0x78>)
 801005c:	8ba2      	ldrh	r2, [r4, #28]
 801005e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010062:	f7f9 baab 	b.w	80095bc <printf>
 8010066:	bd10      	pop	{r4, pc}
 8010068:	08016914 	stmdaeq	r1, {r2, r4, r8, fp, sp, lr}
 801006c:	20000020 	andcs	r0, r0, r0, lsr #32
 8010070:	0801691a 	stmdaeq	r1, {r1, r3, r4, r8, fp, sp, lr}
 8010074:	2000a000 	andcs	sl, r0, r0
 8010078:	20009dd8 	ldrdcs	r9, [r0], -r8
 801007c:	08016928 	stmdaeq	r1, {r3, r5, r8, fp, sp, lr}
 8010080:	08015c57 	stmdaeq	r1, {r0, r1, r2, r4, r6, sl, fp, ip, lr}
 8010084:	08016934 	stmdaeq	r1, {r2, r4, r5, r8, fp, sp, lr}

08010088 <strncpy.constprop.0.isra.0>:
 8010088:	233f      	movs	r3, #63	; 0x3f
 801008a:	3901      	subs	r1, #1
 801008c:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 8010090:	b92a      	cbnz	r2, 801009e <strncpy.constprop.0.isra.0+0x16>
 8010092:	4403      	add	r3, r0
 8010094:	4298      	cmp	r0, r3
 8010096:	d006      	beq.n	80100a6 <strncpy.constprop.0.isra.0+0x1e>
 8010098:	f800 2b01 	strb.w	r2, [r0], #1
 801009c:	e7fa      	b.n	8010094 <strncpy.constprop.0.isra.0+0xc>
 801009e:	3b01      	subs	r3, #1
 80100a0:	f800 2b01 	strb.w	r2, [r0], #1
 80100a4:	d1f2      	bne.n	801008c <strncpy.constprop.0.isra.0+0x4>
 80100a6:	4770      	bx	lr

080100a8 <Network::Network()>:
 80100a8:	4a11      	ldr	r2, [pc, #68]	; (80100f0 <Network::Network()+0x48>)
 80100aa:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 80100ae:	6010      	str	r0, [r2, #0]
 80100b0:	2201      	movs	r2, #1
 80100b2:	2300      	movs	r3, #0
 80100b4:	e9c0 1200 	strd	r1, r2, [r0]
 80100b8:	2200      	movs	r2, #0
 80100ba:	e9c0 332f 	strd	r3, r3, [r0, #188]	; 0xbc
 80100be:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80100c2:	490c      	ldr	r1, [pc, #48]	; (80100f4 <Network::Network()+0x4c>)
 80100c4:	60c2      	str	r2, [r0, #12]
 80100c6:	f8c0 30b4 	str.w	r3, [r0, #180]	; 0xb4
 80100ca:	f8c0 30c4 	str.w	r3, [r0, #196]	; 0xc4
 80100ce:	f880 309c 	strb.w	r3, [r0, #156]	; 0x9c
 80100d2:	6083      	str	r3, [r0, #8]
 80100d4:	6183      	str	r3, [r0, #24]
 80100d6:	7703      	strb	r3, [r0, #28]
 80100d8:	f880 305c 	strb.w	r3, [r0, #92]	; 0x5c
 80100dc:	f100 02a2 	add.w	r2, r0, #162	; 0xa2
 80100e0:	f811 3b01 	ldrb.w	r3, [r1], #1
 80100e4:	f802 3b01 	strb.w	r3, [r2], #1
 80100e8:	2b00      	cmp	r3, #0
 80100ea:	d1f9      	bne.n	80100e0 <Network::Network()+0x38>
 80100ec:	4770      	bx	lr
 80100ee:	bf00      	nop
 80100f0:	2000a008 	andcs	sl, r0, r8
 80100f4:	0801693f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r8, fp, sp, lr}

080100f8 <Network::Shutdown()>:
 80100f8:	b508      	push	{r3, lr}
 80100fa:	30b8      	adds	r0, #184	; 0xb8
 80100fc:	f001 fd3c 	bl	8011b78 <NetworkDisplay::ShowShutdown()>
 8010100:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8010104:	f7f7 b8a0 	b.w	8007248 <net_shutdown>

08010108 <Network::Begin(unsigned short)>:
 8010108:	4608      	mov	r0, r1
 801010a:	f7ff baa1 	b.w	800f650 <udp_bind>

0801010e <Network::End(unsigned short)>:
 801010e:	4608      	mov	r0, r1
 8010110:	f7ff bab8 	b.w	800f684 <udp_unbind>

08010114 <Network::MacAddressCopyTo(unsigned char*)>:
 8010114:	f100 039c 	add.w	r3, r0, #156	; 0x9c
 8010118:	3901      	subs	r1, #1
 801011a:	30a2      	adds	r0, #162	; 0xa2
 801011c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8010120:	4283      	cmp	r3, r0
 8010122:	f801 2f01 	strb.w	r2, [r1, #1]!
 8010126:	d1f9      	bne.n	801011c <Network::MacAddressCopyTo(unsigned char*)+0x8>
 8010128:	4770      	bx	lr

0801012a <Network::JoinGroup(int, unsigned int)>:
 801012a:	4610      	mov	r0, r2
 801012c:	f001 b898 	b.w	8011260 <igmp_join>

08010130 <Network::LeaveGroup(int, unsigned int)>:
 8010130:	4610      	mov	r0, r2
 8010132:	f001 b8c1 	b.w	80112b8 <igmp_leave>

08010136 <Network::SetDefaultIp()>:
 8010136:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 801013a:	f890 209f 	ldrb.w	r2, [r0, #159]	; 0x9f
 801013e:	041b      	lsls	r3, r3, #16
 8010140:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 8010144:	f890 20a1 	ldrb.w	r2, [r0, #161]	; 0xa1
 8010148:	3302      	adds	r3, #2
 801014a:	eb03 6302 	add.w	r3, r3, r2, lsl #24
 801014e:	22ff      	movs	r2, #255	; 0xff
 8010150:	6103      	str	r3, [r0, #16]
 8010152:	e9c0 3205 	strd	r3, r2, [r0, #20]
 8010156:	4770      	bx	lr

08010158 <Network::Init(NetworkParamsStore*)>:
 8010158:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801015c:	b08b      	sub	sp, #44	; 0x2c
 801015e:	4604      	mov	r4, r0
 8010160:	a806      	add	r0, sp, #24
 8010162:	f000 fad3 	bl	801070c <NetworkParams::NetworkParams(NetworkParamsStore*)>
 8010166:	a806      	add	r0, sp, #24
 8010168:	f000 fae0 	bl	801072c <NetworkParams::Load()>
 801016c:	b110      	cbz	r0, 8010174 <Network::Init(NetworkParamsStore*)+0x1c>
 801016e:	a806      	add	r0, sp, #24
 8010170:	f000 fd49 	bl	8010c06 <NetworkParams::Dump()>
 8010174:	f104 05b8 	add.w	r5, r4, #184	; 0xb8
 8010178:	f8df 822c 	ldr.w	r8, [pc, #556]	; 80103a8 <Network::Init(NetworkParamsStore*)+0x250>
 801017c:	4628      	mov	r0, r5
 801017e:	f104 079c 	add.w	r7, r4, #156	; 0x9c
 8010182:	f001 fce1 	bl	8011b48 <NetworkDisplay::ShowEmacStart()>
 8010186:	4638      	mov	r0, r7
 8010188:	f003 fc40 	bl	8013a0c <emac_start>
 801018c:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8010190:	f104 061c 	add.w	r6, r4, #28
 8010194:	9307      	str	r3, [sp, #28]
 8010196:	f8d8 3008 	ldr.w	r3, [r8, #8]
 801019a:	9308      	str	r3, [sp, #32]
 801019c:	f8d8 300c 	ldr.w	r3, [r8, #12]
 80101a0:	9309      	str	r3, [sp, #36]	; 0x24
 80101a2:	f898 3014 	ldrb.w	r3, [r8, #20]
 80101a6:	7063      	strb	r3, [r4, #1]
 80101a8:	f8d8 3000 	ldr.w	r3, [r8]
 80101ac:	f013 0240 	ands.w	r2, r3, #64	; 0x40
 80101b0:	bf18      	it	ne
 80101b2:	f8d8 2055 	ldrne.w	r2, [r8, #85]	; 0x55
 80101b6:	061b      	lsls	r3, r3, #24
 80101b8:	bf58      	it	pl
 80101ba:	2300      	movpl	r3, #0
 80101bc:	60a2      	str	r2, [r4, #8]
 80101be:	bf48      	it	mi
 80101c0:	f8d8 3059 	ldrmi.w	r3, [r8, #89]	; 0x59
 80101c4:	60e3      	str	r3, [r4, #12]
 80101c6:	f898 3015 	ldrb.w	r3, [r8, #21]
 80101ca:	2b00      	cmp	r3, #0
 80101cc:	f040 80bc 	bne.w	8010348 <Network::Init(NetworkParamsStore*)+0x1f0>
 80101d0:	4630      	mov	r0, r6
 80101d2:	4976      	ldr	r1, [pc, #472]	; (80103ac <Network::Init(NetworkParamsStore*)+0x254>)
 80101d4:	f811 2b01 	ldrb.w	r2, [r1], #1
 80101d8:	f103 0c01 	add.w	ip, r3, #1
 80101dc:	2a00      	cmp	r2, #0
 80101de:	f040 80af 	bne.w	8010340 <Network::Init(NetworkParamsStore*)+0x1e8>
 80101e2:	f894 209f 	ldrb.w	r2, [r4, #159]	; 0x9f
 80101e6:	18e1      	adds	r1, r4, r3
 80101e8:	0910      	lsrs	r0, r2, #4
 80101ea:	2a9f      	cmp	r2, #159	; 0x9f
 80101ec:	f002 020f 	and.w	r2, r2, #15
 80101f0:	bf94      	ite	ls
 80101f2:	3030      	addls	r0, #48	; 0x30
 80101f4:	3037      	addhi	r0, #55	; 0x37
 80101f6:	2a09      	cmp	r2, #9
 80101f8:	bf94      	ite	ls
 80101fa:	3230      	addls	r2, #48	; 0x30
 80101fc:	3237      	addhi	r2, #55	; 0x37
 80101fe:	44a4      	add	ip, r4
 8010200:	7708      	strb	r0, [r1, #28]
 8010202:	f88c 201c 	strb.w	r2, [ip, #28]
 8010206:	f894 20a0 	ldrb.w	r2, [r4, #160]	; 0xa0
 801020a:	f103 0e02 	add.w	lr, r3, #2
 801020e:	0910      	lsrs	r0, r2, #4
 8010210:	2a9f      	cmp	r2, #159	; 0x9f
 8010212:	f002 020f 	and.w	r2, r2, #15
 8010216:	bf94      	ite	ls
 8010218:	3030      	addls	r0, #48	; 0x30
 801021a:	3037      	addhi	r0, #55	; 0x37
 801021c:	f103 0903 	add.w	r9, r3, #3
 8010220:	2a09      	cmp	r2, #9
 8010222:	44a6      	add	lr, r4
 8010224:	f88e 001c 	strb.w	r0, [lr, #28]
 8010228:	bf94      	ite	ls
 801022a:	3230      	addls	r2, #48	; 0x30
 801022c:	3237      	addhi	r2, #55	; 0x37
 801022e:	eb04 0009 	add.w	r0, r4, r9
 8010232:	7702      	strb	r2, [r0, #28]
 8010234:	f894 20a1 	ldrb.w	r2, [r4, #161]	; 0xa1
 8010238:	f103 0c04 	add.w	ip, r3, #4
 801023c:	0910      	lsrs	r0, r2, #4
 801023e:	2a9f      	cmp	r2, #159	; 0x9f
 8010240:	f002 020f 	and.w	r2, r2, #15
 8010244:	bf94      	ite	ls
 8010246:	3030      	addls	r0, #48	; 0x30
 8010248:	3037      	addhi	r0, #55	; 0x37
 801024a:	3305      	adds	r3, #5
 801024c:	2a09      	cmp	r2, #9
 801024e:	4423      	add	r3, r4
 8010250:	44a4      	add	ip, r4
 8010252:	bf94      	ite	ls
 8010254:	3230      	addls	r2, #48	; 0x30
 8010256:	3237      	addhi	r2, #55	; 0x37
 8010258:	f88c 001c 	strb.w	r0, [ip, #28]
 801025c:	771a      	strb	r2, [r3, #28]
 801025e:	2300      	movs	r3, #0
 8010260:	f881 3022 	strb.w	r3, [r1, #34]	; 0x22
 8010264:	7863      	ldrb	r3, [r4, #1]
 8010266:	2b00      	cmp	r3, #0
 8010268:	f040 8098 	bne.w	801039c <Network::Init(NetworkParamsStore*)+0x244>
 801026c:	9b07      	ldr	r3, [sp, #28]
 801026e:	2b00      	cmp	r3, #0
 8010270:	d172      	bne.n	8010358 <Network::Init(NetworkParamsStore*)+0x200>
 8010272:	4620      	mov	r0, r4
 8010274:	f7ff ff5f 	bl	8010136 <Network::SetDefaultIp()>
 8010278:	6923      	ldr	r3, [r4, #16]
 801027a:	69a2      	ldr	r2, [r4, #24]
 801027c:	9307      	str	r3, [sp, #28]
 801027e:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8010282:	1ce3      	adds	r3, r4, #3
 8010284:	f104 0901 	add.w	r9, r4, #1
 8010288:	9302      	str	r3, [sp, #8]
 801028a:	9300      	str	r3, [sp, #0]
 801028c:	4632      	mov	r2, r6
 801028e:	464b      	mov	r3, r9
 8010290:	4638      	mov	r0, r7
 8010292:	a907      	add	r1, sp, #28
 8010294:	f7f6 ff88 	bl	80071a8 <net_init>
 8010298:	78e3      	ldrb	r3, [r4, #3]
 801029a:	b11b      	cbz	r3, 80102a4 <Network::Init(NetworkParamsStore*)+0x14c>
 801029c:	2104      	movs	r1, #4
 801029e:	4628      	mov	r0, r5
 80102a0:	f001 fc70 	bl	8011b84 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 80102a4:	f898 3014 	ldrb.w	r3, [r8, #20]
 80102a8:	f898 a05d 	ldrb.w	sl, [r8, #93]	; 0x5d
 80102ac:	9304      	str	r3, [sp, #16]
 80102ae:	233c      	movs	r3, #60	; 0x3c
 80102b0:	fb03 f30a 	mul.w	r3, r3, sl
 80102b4:	f8df 80f8 	ldr.w	r8, [pc, #248]	; 80103b0 <Network::Init(NetworkParamsStore*)+0x258>
 80102b8:	f8df b0f8 	ldr.w	fp, [pc, #248]	; 80103b4 <Network::Init(NetworkParamsStore*)+0x25c>
 80102bc:	9303      	str	r3, [sp, #12]
 80102be:	78e3      	ldrb	r3, [r4, #3]
 80102c0:	b393      	cbz	r3, 8010328 <Network::Init(NetworkParamsStore*)+0x1d0>
 80102c2:	f1ba 0f00 	cmp.w	sl, #0
 80102c6:	d02f      	beq.n	8010328 <Network::Init(NetworkParamsStore*)+0x1d0>
 80102c8:	9b04      	ldr	r3, [sp, #16]
 80102ca:	b36b      	cbz	r3, 8010328 <Network::Init(NetworkParamsStore*)+0x1d0>
 80102cc:	2104      	movs	r1, #4
 80102ce:	f8d8 0000 	ldr.w	r0, [r8]
 80102d2:	f002 fa5b 	bl	801278c <LedBlink::SetMode(ledblink::Mode)>
 80102d6:	2103      	movs	r1, #3
 80102d8:	4628      	mov	r0, r5
 80102da:	f001 fc53 	bl	8011b84 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 80102de:	2000      	movs	r0, #0
 80102e0:	f002 fd18 	bl	8012d14 <time>
 80102e4:	9005      	str	r0, [sp, #20]
 80102e6:	2000      	movs	r0, #0
 80102e8:	f002 fd14 	bl	8012d14 <time>
 80102ec:	9b05      	ldr	r3, [sp, #20]
 80102ee:	4932      	ldr	r1, [pc, #200]	; (80103b8 <Network::Init(NetworkParamsStore*)+0x260>)
 80102f0:	1ac0      	subs	r0, r0, r3
 80102f2:	9b03      	ldr	r3, [sp, #12]
 80102f4:	4298      	cmp	r0, r3
 80102f6:	db37      	blt.n	8010368 <Network::Init(NetworkParamsStore*)+0x210>
 80102f8:	2101      	movs	r1, #1
 80102fa:	4628      	mov	r0, r5
 80102fc:	f001 fc42 	bl	8011b84 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 8010300:	2101      	movs	r1, #1
 8010302:	f8d8 0000 	ldr.w	r0, [r8]
 8010306:	f002 fa41 	bl	801278c <LedBlink::SetMode(ledblink::Mode)>
 801030a:	2301      	movs	r3, #1
 801030c:	7063      	strb	r3, [r4, #1]
 801030e:	2300      	movs	r3, #0
 8010310:	70e3      	strb	r3, [r4, #3]
 8010312:	9b02      	ldr	r3, [sp, #8]
 8010314:	4632      	mov	r2, r6
 8010316:	9300      	str	r3, [sp, #0]
 8010318:	4638      	mov	r0, r7
 801031a:	464b      	mov	r3, r9
 801031c:	a907      	add	r1, sp, #28
 801031e:	f7f6 ff43 	bl	80071a8 <net_init>
 8010322:	7863      	ldrb	r3, [r4, #1]
 8010324:	2b00      	cmp	r3, #0
 8010326:	d0ca      	beq.n	80102be <Network::Init(NetworkParamsStore*)+0x166>
 8010328:	9b07      	ldr	r3, [sp, #28]
 801032a:	4628      	mov	r0, r5
 801032c:	6123      	str	r3, [r4, #16]
 801032e:	9b08      	ldr	r3, [sp, #32]
 8010330:	61a3      	str	r3, [r4, #24]
 8010332:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8010334:	6163      	str	r3, [r4, #20]
 8010336:	f001 fc0d 	bl	8011b54 <NetworkDisplay::ShowIp()>
 801033a:	b00b      	add	sp, #44	; 0x2c
 801033c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010340:	4663      	mov	r3, ip
 8010342:	f800 2b01 	strb.w	r2, [r0], #1
 8010346:	e745      	b.n	80101d4 <Network::Init(NetworkParamsStore*)+0x7c>
 8010348:	4630      	mov	r0, r6
 801034a:	491c      	ldr	r1, [pc, #112]	; (80103bc <Network::Init(NetworkParamsStore*)+0x264>)
 801034c:	f7ff fe9c 	bl	8010088 <strncpy.constprop.0.isra.0>
 8010350:	2300      	movs	r3, #0
 8010352:	f884 305b 	strb.w	r3, [r4, #91]	; 0x5b
 8010356:	e785      	b.n	8010264 <Network::Init(NetworkParamsStore*)+0x10c>
 8010358:	69a1      	ldr	r1, [r4, #24]
 801035a:	e9d4 2304 	ldrd	r2, r3, [r4, #16]
 801035e:	4053      	eors	r3, r2
 8010360:	420b      	tst	r3, r1
 8010362:	bf18      	it	ne
 8010364:	9209      	strne	r2, [sp, #36]	; 0x24
 8010366:	e78c      	b.n	8010282 <Network::Init(NetworkParamsStore*)+0x12a>
 8010368:	f8d8 3000 	ldr.w	r3, [r8]
 801036c:	f8d3 c00c 	ldr.w	ip, [r3, #12]
 8010370:	f1bc 0f00 	cmp.w	ip, #0
 8010374:	d0b7      	beq.n	80102e6 <Network::Init(NetworkParamsStore*)+0x18e>
 8010376:	6808      	ldr	r0, [r1, #0]
 8010378:	695a      	ldr	r2, [r3, #20]
 801037a:	1a80      	subs	r0, r0, r2
 801037c:	4584      	cmp	ip, r0
 801037e:	d8b2      	bhi.n	80102e6 <Network::Init(NetworkParamsStore*)+0x18e>
 8010380:	6808      	ldr	r0, [r1, #0]
 8010382:	6158      	str	r0, [r3, #20]
 8010384:	6918      	ldr	r0, [r3, #16]
 8010386:	2801      	cmp	r0, #1
 8010388:	f080 0201 	eor.w	r2, r0, #1
 801038c:	611a      	str	r2, [r3, #16]
 801038e:	bf16      	itet	ne
 8010390:	2301      	movne	r3, #1
 8010392:	f8cb 0014 	streq.w	r0, [fp, #20]
 8010396:	f8cb 3010 	strne.w	r3, [fp, #16]
 801039a:	e7a4      	b.n	80102e6 <Network::Init(NetworkParamsStore*)+0x18e>
 801039c:	2101      	movs	r1, #1
 801039e:	4628      	mov	r0, r5
 80103a0:	f001 fbf0 	bl	8011b84 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 80103a4:	e76d      	b.n	8010282 <Network::Init(NetworkParamsStore*)+0x12a>
 80103a6:	bf00      	nop
 80103a8:	2000a00c 	andcs	sl, r0, ip
 80103ac:	08016944 	stmdaeq	r1, {r2, r6, r8, fp, sp, lr}
 80103b0:	2000a72c 	andcs	sl, r0, ip, lsr #14
 80103b4:	40011000 	andmi	r1, r1, r0
 80103b8:	2000a744 	andcs	sl, r0, r4, asr #14
 80103bc:	2000a021 	andcs	sl, r0, r1, lsr #32

080103c0 <Network::SetIp(unsigned int)>:
 80103c0:	7843      	ldrb	r3, [r0, #1]
 80103c2:	b570      	push	{r4, r5, r6, lr}
 80103c4:	4604      	mov	r4, r0
 80103c6:	460d      	mov	r5, r1
 80103c8:	2600      	movs	r6, #0
 80103ca:	b113      	cbz	r3, 80103d2 <Network::SetIp(unsigned int)+0x12>
 80103cc:	7046      	strb	r6, [r0, #1]
 80103ce:	f7fe fedd 	bl	800f18c <net_dhcp_release>
 80103d2:	70e6      	strb	r6, [r4, #3]
 80103d4:	b975      	cbnz	r5, 80103f4 <Network::SetIp(unsigned int)+0x34>
 80103d6:	4620      	mov	r0, r4
 80103d8:	f7ff fead 	bl	8010136 <Network::SetDefaultIp()>
 80103dc:	6920      	ldr	r0, [r4, #16]
 80103de:	f7fe fe99 	bl	800f114 <net_set_ip>
 80103e2:	34b8      	adds	r4, #184	; 0xb8
 80103e4:	4620      	mov	r0, r4
 80103e6:	f001 fbb5 	bl	8011b54 <NetworkDisplay::ShowIp()>
 80103ea:	4620      	mov	r0, r4
 80103ec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80103f0:	f001 bbb6 	b.w	8011b60 <NetworkDisplay::ShowNetMask()>
 80103f4:	4628      	mov	r0, r5
 80103f6:	f7fe fe8d 	bl	800f114 <net_set_ip>
 80103fa:	f8d4 00b4 	ldr.w	r0, [r4, #180]	; 0xb4
 80103fe:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8010402:	2800      	cmp	r0, #0
 8010404:	d0ed      	beq.n	80103e2 <Network::SetIp(unsigned int)+0x22>
 8010406:	6803      	ldr	r3, [r0, #0]
 8010408:	4629      	mov	r1, r5
 801040a:	689b      	ldr	r3, [r3, #8]
 801040c:	4798      	blx	r3
 801040e:	f8d4 00b4 	ldr.w	r0, [r4, #180]	; 0xb4
 8010412:	2100      	movs	r1, #0
 8010414:	6803      	ldr	r3, [r0, #0]
 8010416:	699b      	ldr	r3, [r3, #24]
 8010418:	4798      	blx	r3
 801041a:	e7e2      	b.n	80103e2 <Network::SetIp(unsigned int)+0x22>

0801041c <Network::SetNetmask(unsigned int)>:
 801041c:	6982      	ldr	r2, [r0, #24]
 801041e:	b510      	push	{r4, lr}
 8010420:	428a      	cmp	r2, r1
 8010422:	4604      	mov	r4, r0
 8010424:	d00f      	beq.n	8010446 <Network::SetNetmask(unsigned int)+0x2a>
 8010426:	6181      	str	r1, [r0, #24]
 8010428:	f8d0 00b4 	ldr.w	r0, [r0, #180]	; 0xb4
 801042c:	b110      	cbz	r0, 8010434 <Network::SetNetmask(unsigned int)+0x18>
 801042e:	6803      	ldr	r3, [r0, #0]
 8010430:	68db      	ldr	r3, [r3, #12]
 8010432:	4798      	blx	r3
 8010434:	34b8      	adds	r4, #184	; 0xb8
 8010436:	4620      	mov	r0, r4
 8010438:	f001 fb8c 	bl	8011b54 <NetworkDisplay::ShowIp()>
 801043c:	4620      	mov	r0, r4
 801043e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010442:	f001 bb8d 	b.w	8011b60 <NetworkDisplay::ShowNetMask()>
 8010446:	bd10      	pop	{r4, pc}

08010448 <Network::SetHostName(char const*)>:
 8010448:	b570      	push	{r4, r5, r6, lr}
 801044a:	4604      	mov	r4, r0
 801044c:	f100 051c 	add.w	r5, r0, #28
 8010450:	4628      	mov	r0, r5
 8010452:	f7ff fe19 	bl	8010088 <strncpy.constprop.0.isra.0>
 8010456:	2300      	movs	r3, #0
 8010458:	f8d4 00b4 	ldr.w	r0, [r4, #180]	; 0xb4
 801045c:	f884 305b 	strb.w	r3, [r4, #91]	; 0x5b
 8010460:	b158      	cbz	r0, 801047a <Network::SetHostName(char const*)+0x32>
 8010462:	6803      	ldr	r3, [r0, #0]
 8010464:	695e      	ldr	r6, [r3, #20]
 8010466:	462b      	mov	r3, r5
 8010468:	461a      	mov	r2, r3
 801046a:	7811      	ldrb	r1, [r2, #0]
 801046c:	3301      	adds	r3, #1
 801046e:	2900      	cmp	r1, #0
 8010470:	d1fa      	bne.n	8010468 <Network::SetHostName(char const*)+0x20>
 8010472:	1b52      	subs	r2, r2, r5
 8010474:	4629      	mov	r1, r5
 8010476:	b292      	uxth	r2, r2
 8010478:	47b0      	blx	r6
 801047a:	f104 00b8 	add.w	r0, r4, #184	; 0xb8
 801047e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010482:	f001 bb73 	b.w	8011b6c <NetworkDisplay::ShowHostName()>

08010486 <Network::SetZeroconf()>:
 8010486:	b530      	push	{r4, r5, lr}
 8010488:	b085      	sub	sp, #20
 801048a:	4604      	mov	r4, r0
 801048c:	a801      	add	r0, sp, #4
 801048e:	f7fe fe87 	bl	800f1a0 <net_set_zeroconf>
 8010492:	70e0      	strb	r0, [r4, #3]
 8010494:	b170      	cbz	r0, 80104b4 <Network::SetZeroconf()+0x2e>
 8010496:	9b01      	ldr	r3, [sp, #4]
 8010498:	f8d4 00b4 	ldr.w	r0, [r4, #180]	; 0xb4
 801049c:	6123      	str	r3, [r4, #16]
 801049e:	9b02      	ldr	r3, [sp, #8]
 80104a0:	61a3      	str	r3, [r4, #24]
 80104a2:	9b03      	ldr	r3, [sp, #12]
 80104a4:	6163      	str	r3, [r4, #20]
 80104a6:	2300      	movs	r3, #0
 80104a8:	7063      	strb	r3, [r4, #1]
 80104aa:	b118      	cbz	r0, 80104b4 <Network::SetZeroconf()+0x2e>
 80104ac:	6803      	ldr	r3, [r0, #0]
 80104ae:	2101      	movs	r1, #1
 80104b0:	699b      	ldr	r3, [r3, #24]
 80104b2:	4798      	blx	r3
 80104b4:	f104 05b8 	add.w	r5, r4, #184	; 0xb8
 80104b8:	4628      	mov	r0, r5
 80104ba:	f001 fb4b 	bl	8011b54 <NetworkDisplay::ShowIp()>
 80104be:	4628      	mov	r0, r5
 80104c0:	f001 fb4e 	bl	8011b60 <NetworkDisplay::ShowNetMask()>
 80104c4:	78e0      	ldrb	r0, [r4, #3]
 80104c6:	b005      	add	sp, #20
 80104c8:	bd30      	pop	{r4, r5, pc}
	...

080104cc <Network::EnableDhcp()>:
 80104cc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80104ce:	4e23      	ldr	r6, [pc, #140]	; (801055c <Network::EnableDhcp()+0x90>)
 80104d0:	4604      	mov	r4, r0
 80104d2:	6833      	ldr	r3, [r6, #0]
 80104d4:	b085      	sub	sp, #20
 80104d6:	791f      	ldrb	r7, [r3, #4]
 80104d8:	b137      	cbz	r7, 80104e8 <Network::EnableDhcp()+0x1c>
 80104da:	2200      	movs	r2, #0
 80104dc:	2104      	movs	r1, #4
 80104de:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80104e2:	711a      	strb	r2, [r3, #4]
 80104e4:	f002 fdfc 	bl	80130e0 <fwdgt_config>
 80104e8:	f104 05b8 	add.w	r5, r4, #184	; 0xb8
 80104ec:	2101      	movs	r1, #1
 80104ee:	4628      	mov	r0, r5
 80104f0:	f001 fb48 	bl	8011b84 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 80104f4:	1ce2      	adds	r2, r4, #3
 80104f6:	f104 011c 	add.w	r1, r4, #28
 80104fa:	a801      	add	r0, sp, #4
 80104fc:	f7fe fe1a 	bl	800f134 <net_set_dhcp>
 8010500:	78e3      	ldrb	r3, [r4, #3]
 8010502:	7060      	strb	r0, [r4, #1]
 8010504:	b343      	cbz	r3, 8010558 <Network::EnableDhcp()+0x8c>
 8010506:	2104      	movs	r1, #4
 8010508:	4628      	mov	r0, r5
 801050a:	f001 fb3b 	bl	8011b84 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 801050e:	b16f      	cbz	r7, 801052c <Network::EnableDhcp()+0x60>
 8010510:	2102      	movs	r1, #2
 8010512:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8010516:	6836      	ldr	r6, [r6, #0]
 8010518:	f002 fde2 	bl	80130e0 <fwdgt_config>
 801051c:	2801      	cmp	r0, #1
 801051e:	bf0c      	ite	eq
 8010520:	2301      	moveq	r3, #1
 8010522:	2300      	movne	r3, #0
 8010524:	7133      	strb	r3, [r6, #4]
 8010526:	d101      	bne.n	801052c <Network::EnableDhcp()+0x60>
 8010528:	f002 fdca 	bl	80130c0 <fwdgt_enable>
 801052c:	9b01      	ldr	r3, [sp, #4]
 801052e:	f8d4 00b4 	ldr.w	r0, [r4, #180]	; 0xb4
 8010532:	6123      	str	r3, [r4, #16]
 8010534:	9b02      	ldr	r3, [sp, #8]
 8010536:	61a3      	str	r3, [r4, #24]
 8010538:	9b03      	ldr	r3, [sp, #12]
 801053a:	6163      	str	r3, [r4, #20]
 801053c:	b118      	cbz	r0, 8010546 <Network::EnableDhcp()+0x7a>
 801053e:	6803      	ldr	r3, [r0, #0]
 8010540:	7861      	ldrb	r1, [r4, #1]
 8010542:	699b      	ldr	r3, [r3, #24]
 8010544:	4798      	blx	r3
 8010546:	4628      	mov	r0, r5
 8010548:	f001 fb04 	bl	8011b54 <NetworkDisplay::ShowIp()>
 801054c:	4628      	mov	r0, r5
 801054e:	f001 fb07 	bl	8011b60 <NetworkDisplay::ShowNetMask()>
 8010552:	7860      	ldrb	r0, [r4, #1]
 8010554:	b005      	add	sp, #20
 8010556:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010558:	2102      	movs	r1, #2
 801055a:	e7d5      	b.n	8010508 <Network::EnableDhcp()+0x3c>
 801055c:	2000a730 	andcs	sl, r0, r0, lsr r7

08010560 <Network::SetQueuedStaticIp(unsigned int, unsigned int)>:
 8010560:	b109      	cbz	r1, 8010566 <Network::SetQueuedStaticIp(unsigned int, unsigned int)+0x6>
 8010562:	f8c0 10c0 	str.w	r1, [r0, #192]	; 0xc0
 8010566:	b10a      	cbz	r2, 801056c <Network::SetQueuedStaticIp(unsigned int, unsigned int)+0xc>
 8010568:	f8c0 20c4 	str.w	r2, [r0, #196]	; 0xc4
 801056c:	f8d0 30bc 	ldr.w	r3, [r0, #188]	; 0xbc
 8010570:	f043 0303 	orr.w	r3, r3, #3
 8010574:	f8c0 30bc 	str.w	r3, [r0, #188]	; 0xbc
 8010578:	4770      	bx	lr

0801057a <Network::ApplyQueuedConfig()>:
 801057a:	f8d0 30bc 	ldr.w	r3, [r0, #188]	; 0xbc
 801057e:	b510      	push	{r4, lr}
 8010580:	4604      	mov	r4, r0
 8010582:	b3c3      	cbz	r3, 80105f6 <Network::ApplyQueuedConfig()+0x7c>
 8010584:	079a      	lsls	r2, r3, #30
 8010586:	d01a      	beq.n	80105be <Network::ApplyQueuedConfig()+0x44>
 8010588:	079b      	lsls	r3, r3, #30
 801058a:	d509      	bpl.n	80105a0 <Network::ApplyQueuedConfig()+0x26>
 801058c:	f8d0 10c4 	ldr.w	r1, [r0, #196]	; 0xc4
 8010590:	f7ff ff44 	bl	801041c <Network::SetNetmask(unsigned int)>
 8010594:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 8010598:	f023 0302 	bic.w	r3, r3, #2
 801059c:	f8c4 30bc 	str.w	r3, [r4, #188]	; 0xbc
 80105a0:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 80105a4:	07d9      	lsls	r1, r3, #31
 80105a6:	d50a      	bpl.n	80105be <Network::ApplyQueuedConfig()+0x44>
 80105a8:	4620      	mov	r0, r4
 80105aa:	f8d4 10c0 	ldr.w	r1, [r4, #192]	; 0xc0
 80105ae:	f7ff ff07 	bl	80103c0 <Network::SetIp(unsigned int)>
 80105b2:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 80105b6:	f023 0301 	bic.w	r3, r3, #1
 80105ba:	f8c4 30bc 	str.w	r3, [r4, #188]	; 0xbc
 80105be:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 80105c2:	075a      	lsls	r2, r3, #29
 80105c4:	d508      	bpl.n	80105d8 <Network::ApplyQueuedConfig()+0x5e>
 80105c6:	4620      	mov	r0, r4
 80105c8:	f7ff ff80 	bl	80104cc <Network::EnableDhcp()>
 80105cc:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 80105d0:	f023 0304 	bic.w	r3, r3, #4
 80105d4:	f8c4 30bc 	str.w	r3, [r4, #188]	; 0xbc
 80105d8:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 80105dc:	071b      	lsls	r3, r3, #28
 80105de:	d508      	bpl.n	80105f2 <Network::ApplyQueuedConfig()+0x78>
 80105e0:	4620      	mov	r0, r4
 80105e2:	f7ff ff50 	bl	8010486 <Network::SetZeroconf()>
 80105e6:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 80105ea:	f023 0308 	bic.w	r3, r3, #8
 80105ee:	f8c4 30bc 	str.w	r3, [r4, #188]	; 0xbc
 80105f2:	2001      	movs	r0, #1
 80105f4:	e000      	b.n	80105f8 <Network::ApplyQueuedConfig()+0x7e>
 80105f6:	4618      	mov	r0, r3
 80105f8:	bd10      	pop	{r4, pc}
	...

080105fc <Network::Print()>:
 80105fc:	b530      	push	{r4, r5, lr}
 80105fe:	4604      	mov	r4, r0
 8010600:	b085      	sub	sp, #20
 8010602:	4832      	ldr	r0, [pc, #200]	; (80106cc <Network::Print()+0xd0>)
 8010604:	f7f8 ffda 	bl	80095bc <printf>
 8010608:	f104 011c 	add.w	r1, r4, #28
 801060c:	4830      	ldr	r0, [pc, #192]	; (80106d0 <Network::Print()+0xd4>)
 801060e:	f7f8 ffd5 	bl	80095bc <printf>
 8010612:	6861      	ldr	r1, [r4, #4]
 8010614:	f104 02a2 	add.w	r2, r4, #162	; 0xa2
 8010618:	482e      	ldr	r0, [pc, #184]	; (80106d4 <Network::Print()+0xd8>)
 801061a:	f7f8 ffcf 	bl	80095bc <printf>
 801061e:	69a0      	ldr	r0, [r4, #24]
 8010620:	f004 fb56 	bl	8014cd0 <__popcountsi2>
 8010624:	6925      	ldr	r5, [r4, #16]
 8010626:	9001      	str	r0, [sp, #4]
 8010628:	0e2b      	lsrs	r3, r5, #24
 801062a:	9300      	str	r3, [sp, #0]
 801062c:	f3c5 2207 	ubfx	r2, r5, #8, #8
 8010630:	f3c5 4307 	ubfx	r3, r5, #16, #8
 8010634:	b2e9      	uxtb	r1, r5
 8010636:	4828      	ldr	r0, [pc, #160]	; (80106d8 <Network::Print()+0xdc>)
 8010638:	f7f8 ffc0 	bl	80095bc <printf>
 801063c:	69a1      	ldr	r1, [r4, #24]
 801063e:	4827      	ldr	r0, [pc, #156]	; (80106dc <Network::Print()+0xe0>)
 8010640:	0e0b      	lsrs	r3, r1, #24
 8010642:	f3c1 2207 	ubfx	r2, r1, #8, #8
 8010646:	9300      	str	r3, [sp, #0]
 8010648:	f3c1 4307 	ubfx	r3, r1, #16, #8
 801064c:	b2c9      	uxtb	r1, r1
 801064e:	f7f8 ffb5 	bl	80095bc <printf>
 8010652:	6961      	ldr	r1, [r4, #20]
 8010654:	4822      	ldr	r0, [pc, #136]	; (80106e0 <Network::Print()+0xe4>)
 8010656:	0e0b      	lsrs	r3, r1, #24
 8010658:	f3c1 2207 	ubfx	r2, r1, #8, #8
 801065c:	9300      	str	r3, [sp, #0]
 801065e:	f3c1 4307 	ubfx	r3, r1, #16, #8
 8010662:	b2c9      	uxtb	r1, r1
 8010664:	f7f8 ffaa 	bl	80095bc <printf>
 8010668:	69a3      	ldr	r3, [r4, #24]
 801066a:	6921      	ldr	r1, [r4, #16]
 801066c:	481d      	ldr	r0, [pc, #116]	; (80106e4 <Network::Print()+0xe8>)
 801066e:	ea61 0103 	orn	r1, r1, r3
 8010672:	0e0b      	lsrs	r3, r1, #24
 8010674:	f3c1 2207 	ubfx	r2, r1, #8, #8
 8010678:	9300      	str	r3, [sp, #0]
 801067a:	f3c1 4307 	ubfx	r3, r1, #16, #8
 801067e:	b2c9      	uxtb	r1, r1
 8010680:	f7f8 ff9c 	bl	80095bc <printf>
 8010684:	f894 30a1 	ldrb.w	r3, [r4, #161]	; 0xa1
 8010688:	f894 209d 	ldrb.w	r2, [r4, #157]	; 0x9d
 801068c:	9302      	str	r3, [sp, #8]
 801068e:	f894 30a0 	ldrb.w	r3, [r4, #160]	; 0xa0
 8010692:	f894 109c 	ldrb.w	r1, [r4, #156]	; 0x9c
 8010696:	9301      	str	r3, [sp, #4]
 8010698:	f894 309f 	ldrb.w	r3, [r4, #159]	; 0x9f
 801069c:	4812      	ldr	r0, [pc, #72]	; (80106e8 <Network::Print()+0xec>)
 801069e:	9300      	str	r3, [sp, #0]
 80106a0:	f894 309e 	ldrb.w	r3, [r4, #158]	; 0x9e
 80106a4:	f7f8 ff8a 	bl	80095bc <printf>
 80106a8:	4b10      	ldr	r3, [pc, #64]	; (80106ec <Network::Print()+0xf0>)
 80106aa:	681b      	ldr	r3, [r3, #0]
 80106ac:	78da      	ldrb	r2, [r3, #3]
 80106ae:	b952      	cbnz	r2, 80106c6 <Network::Print()+0xca>
 80106b0:	785b      	ldrb	r3, [r3, #1]
 80106b2:	2b00      	cmp	r3, #0
 80106b4:	bf14      	ite	ne
 80106b6:	2144      	movne	r1, #68	; 0x44
 80106b8:	2153      	moveq	r1, #83	; 0x53
 80106ba:	480d      	ldr	r0, [pc, #52]	; (80106f0 <Network::Print()+0xf4>)
 80106bc:	b005      	add	sp, #20
 80106be:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80106c2:	f7f8 bf7b 	b.w	80095bc <printf>
 80106c6:	215a      	movs	r1, #90	; 0x5a
 80106c8:	e7f7      	b.n	80106ba <Network::Print()+0xbe>
 80106ca:	bf00      	nop
 80106cc:	08016950 	stmdaeq	r1, {r4, r6, r8, fp, sp, lr}
 80106d0:	08016959 	stmdaeq	r1, {r0, r3, r4, r6, r8, fp, sp, lr}
 80106d4:	0801696a 	stmdaeq	r1, {r1, r3, r5, r6, r8, fp, sp, lr}
 80106d8:	0801697f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r8, fp, sp, lr}
 80106dc:	0801699c 	stmdaeq	r1, {r2, r3, r4, r7, r8, fp, sp, lr}
 80106e0:	080169b6 	stmdaeq	r1, {r1, r2, r4, r5, r7, r8, fp, sp, lr}
 80106e4:	080169d0 	stmdaeq	r1, {r4, r6, r7, r8, fp, sp, lr}
 80106e8:	080169ea 	stmdaeq	r1, {r1, r3, r5, r6, r7, r8, fp, sp, lr}
 80106ec:	2000a008 	andcs	sl, r0, r8
 80106f0:	08016a16 	stmdaeq	r1, {r1, r2, r4, r9, fp, sp, lr}

080106f4 <Network::TcpBegin(unsigned short)>:
 80106f4:	4608      	mov	r0, r1
 80106f6:	f7fe bee5 	b.w	800f4c4 <tcp_begin>

080106fa <Network::TcpRead(int, unsigned char const**)>:
 80106fa:	4608      	mov	r0, r1
 80106fc:	4611      	mov	r1, r2
 80106fe:	f7fe bf1f 	b.w	800f540 <tcp_read>

08010702 <Network::TcpWrite(int, unsigned char const*, unsigned short)>:
 8010702:	4608      	mov	r0, r1
 8010704:	4611      	mov	r1, r2
 8010706:	461a      	mov	r2, r3
 8010708:	f7fe bef6 	b.w	800f4f8 <tcp_write>

0801070c <NetworkParams::NetworkParams(NetworkParamsStore*)>:
 801070c:	4b06      	ldr	r3, [pc, #24]	; (8010728 <NetworkParams::NetworkParams(NetworkParamsStore*)+0x1c>)
 801070e:	b510      	push	{r4, lr}
 8010710:	225e      	movs	r2, #94	; 0x5e
 8010712:	4604      	mov	r4, r0
 8010714:	6001      	str	r1, [r0, #0]
 8010716:	2100      	movs	r1, #0
 8010718:	4618      	mov	r0, r3
 801071a:	f002 f9f3 	bl	8012b04 <memset>
 801071e:	2201      	movs	r2, #1
 8010720:	7502      	strb	r2, [r0, #20]
 8010722:	4620      	mov	r0, r4
 8010724:	bd10      	pop	{r4, pc}
 8010726:	bf00      	nop
 8010728:	2000a00c 	andcs	sl, r0, ip

0801072c <NetworkParams::Load()>:
 801072c:	b508      	push	{r3, lr}
 801072e:	2300      	movs	r3, #0
 8010730:	4905      	ldr	r1, [pc, #20]	; (8010748 <NetworkParams::Load()+0x1c>)
 8010732:	6800      	ldr	r0, [r0, #0]
 8010734:	700b      	strb	r3, [r1, #0]
 8010736:	704b      	strb	r3, [r1, #1]
 8010738:	708b      	strb	r3, [r1, #2]
 801073a:	70cb      	strb	r3, [r1, #3]
 801073c:	b118      	cbz	r0, 8010746 <NetworkParams::Load()+0x1a>
 801073e:	6803      	ldr	r3, [r0, #0]
 8010740:	68db      	ldr	r3, [r3, #12]
 8010742:	4798      	blx	r3
 8010744:	2001      	movs	r0, #1
 8010746:	bd08      	pop	{r3, pc}
 8010748:	2000a00c 	andcs	sl, r0, ip

0801074c <NetworkParams::Load(char const*, unsigned int)>:
 801074c:	6803      	ldr	r3, [r0, #0]
 801074e:	b1eb      	cbz	r3, 801078c <NetworkParams::Load(char const*, unsigned int)+0x40>
 8010750:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8010752:	2300      	movs	r3, #0
 8010754:	460e      	mov	r6, r1
 8010756:	4617      	mov	r7, r2
 8010758:	4605      	mov	r5, r0
 801075a:	4c0d      	ldr	r4, [pc, #52]	; (8010790 <NetworkParams::Load(char const*, unsigned int)+0x44>)
 801075c:	4602      	mov	r2, r0
 801075e:	490d      	ldr	r1, [pc, #52]	; (8010794 <NetworkParams::Load(char const*, unsigned int)+0x48>)
 8010760:	4668      	mov	r0, sp
 8010762:	7023      	strb	r3, [r4, #0]
 8010764:	7063      	strb	r3, [r4, #1]
 8010766:	70a3      	strb	r3, [r4, #2]
 8010768:	70e3      	strb	r3, [r4, #3]
 801076a:	f001 fb63 	bl	8011e34 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 801076e:	463a      	mov	r2, r7
 8010770:	4631      	mov	r1, r6
 8010772:	4668      	mov	r0, sp
 8010774:	f001 fb62 	bl	8011e3c <ReadConfigFile::Read(char const*, unsigned int)>
 8010778:	6828      	ldr	r0, [r5, #0]
 801077a:	4621      	mov	r1, r4
 801077c:	6803      	ldr	r3, [r0, #0]
 801077e:	689b      	ldr	r3, [r3, #8]
 8010780:	4798      	blx	r3
 8010782:	4668      	mov	r0, sp
 8010784:	f001 fb59 	bl	8011e3a <ReadConfigFile::~ReadConfigFile()>
 8010788:	b003      	add	sp, #12
 801078a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801078c:	4770      	bx	lr
 801078e:	bf00      	nop
 8010790:	2000a00c 	andcs	sl, r0, ip
 8010794:	08010935 	stmdaeq	r1, {r0, r2, r4, r5, r8, fp}

08010798 <NetworkParams::callbackFunction(char const*)>:
 8010798:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 801079a:	460d      	mov	r5, r1
 801079c:	f10d 0203 	add.w	r2, sp, #3
 80107a0:	4628      	mov	r0, r5
 80107a2:	495b      	ldr	r1, [pc, #364]	; (8010910 <NetworkParams::callbackFunction(char const*)+0x178>)
 80107a4:	f001 fc59 	bl	801205a <Sscan::Uint8(char const*, char const*, unsigned char&)>
 80107a8:	b980      	cbnz	r0, 80107cc <NetworkParams::callbackFunction(char const*)+0x34>
 80107aa:	495a      	ldr	r1, [pc, #360]	; (8010914 <NetworkParams::callbackFunction(char const*)+0x17c>)
 80107ac:	f89d 2003 	ldrb.w	r2, [sp, #3]
 80107b0:	680b      	ldr	r3, [r1, #0]
 80107b2:	b142      	cbz	r2, 80107c6 <NetworkParams::callbackFunction(char const*)+0x2e>
 80107b4:	f023 0301 	bic.w	r3, r3, #1
 80107b8:	3a00      	subs	r2, #0
 80107ba:	bf18      	it	ne
 80107bc:	2201      	movne	r2, #1
 80107be:	600b      	str	r3, [r1, #0]
 80107c0:	750a      	strb	r2, [r1, #20]
 80107c2:	b004      	add	sp, #16
 80107c4:	bd70      	pop	{r4, r5, r6, pc}
 80107c6:	f043 0301 	orr.w	r3, r3, #1
 80107ca:	e7f5      	b.n	80107b8 <NetworkParams::callbackFunction(char const*)+0x20>
 80107cc:	4628      	mov	r0, r5
 80107ce:	4952      	ldr	r1, [pc, #328]	; (8010918 <NetworkParams::callbackFunction(char const*)+0x180>)
 80107d0:	f10d 0203 	add.w	r2, sp, #3
 80107d4:	f001 fc41 	bl	801205a <Sscan::Uint8(char const*, char const*, unsigned char&)>
 80107d8:	b988      	cbnz	r0, 80107fe <NetworkParams::callbackFunction(char const*)+0x66>
 80107da:	4a4e      	ldr	r2, [pc, #312]	; (8010914 <NetworkParams::callbackFunction(char const*)+0x17c>)
 80107dc:	f89d 1003 	ldrb.w	r1, [sp, #3]
 80107e0:	6813      	ldr	r3, [r2, #0]
 80107e2:	1e4c      	subs	r4, r1, #1
 80107e4:	2c04      	cmp	r4, #4
 80107e6:	bf97      	itett	ls
 80107e8:	f443 7380 	orrls.w	r3, r3, #256	; 0x100
 80107ec:	f423 7380 	bichi.w	r3, r3, #256	; 0x100
 80107f0:	6013      	strls	r3, [r2, #0]
 80107f2:	f882 105d 	strbls.w	r1, [r2, #93]	; 0x5d
 80107f6:	bf84      	itt	hi
 80107f8:	6013      	strhi	r3, [r2, #0]
 80107fa:	f882 005d 	strbhi.w	r0, [r2, #93]	; 0x5d
 80107fe:	4628      	mov	r0, r5
 8010800:	4946      	ldr	r1, [pc, #280]	; (801091c <NetworkParams::callbackFunction(char const*)+0x184>)
 8010802:	aa01      	add	r2, sp, #4
 8010804:	f001 fbca 	bl	8011f9c <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 8010808:	b9d0      	cbnz	r0, 8010840 <NetworkParams::callbackFunction(char const*)+0xa8>
 801080a:	9b01      	ldr	r3, [sp, #4]
 801080c:	b2d9      	uxtb	r1, r3
 801080e:	29ac      	cmp	r1, #172	; 0xac
 8010810:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8010814:	d00a      	beq.n	801082c <NetworkParams::callbackFunction(char const*)+0x94>
 8010816:	29c0      	cmp	r1, #192	; 0xc0
 8010818:	d00c      	beq.n	8010834 <NetworkParams::callbackFunction(char const*)+0x9c>
 801081a:	290a      	cmp	r1, #10
 801081c:	d10d      	bne.n	801083a <NetworkParams::callbackFunction(char const*)+0xa2>
 801081e:	4a3d      	ldr	r2, [pc, #244]	; (8010914 <NetworkParams::callbackFunction(char const*)+0x17c>)
 8010820:	6053      	str	r3, [r2, #4]
 8010822:	6813      	ldr	r3, [r2, #0]
 8010824:	f043 0302 	orr.w	r3, r3, #2
 8010828:	6013      	str	r3, [r2, #0]
 801082a:	e7ca      	b.n	80107c2 <NetworkParams::callbackFunction(char const*)+0x2a>
 801082c:	3a10      	subs	r2, #16
 801082e:	2a0f      	cmp	r2, #15
 8010830:	d8c7      	bhi.n	80107c2 <NetworkParams::callbackFunction(char const*)+0x2a>
 8010832:	e7f4      	b.n	801081e <NetworkParams::callbackFunction(char const*)+0x86>
 8010834:	2aa8      	cmp	r2, #168	; 0xa8
 8010836:	d1c4      	bne.n	80107c2 <NetworkParams::callbackFunction(char const*)+0x2a>
 8010838:	e7f1      	b.n	801081e <NetworkParams::callbackFunction(char const*)+0x86>
 801083a:	2b00      	cmp	r3, #0
 801083c:	d0ef      	beq.n	801081e <NetworkParams::callbackFunction(char const*)+0x86>
 801083e:	e7c0      	b.n	80107c2 <NetworkParams::callbackFunction(char const*)+0x2a>
 8010840:	4628      	mov	r0, r5
 8010842:	4937      	ldr	r1, [pc, #220]	; (8010920 <NetworkParams::callbackFunction(char const*)+0x188>)
 8010844:	aa01      	add	r2, sp, #4
 8010846:	f001 fba9 	bl	8011f9c <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 801084a:	b970      	cbnz	r0, 801086a <NetworkParams::callbackFunction(char const*)+0xd2>
 801084c:	9a01      	ldr	r2, [sp, #4]
 801084e:	2a00      	cmp	r2, #0
 8010850:	d0b7      	beq.n	80107c2 <NetworkParams::callbackFunction(char const*)+0x2a>
 8010852:	ba13      	rev	r3, r2
 8010854:	43d9      	mvns	r1, r3
 8010856:	ea13 0351 	ands.w	r3, r3, r1, lsr #1
 801085a:	d1b2      	bne.n	80107c2 <NetworkParams::callbackFunction(char const*)+0x2a>
 801085c:	4b2d      	ldr	r3, [pc, #180]	; (8010914 <NetworkParams::callbackFunction(char const*)+0x17c>)
 801085e:	609a      	str	r2, [r3, #8]
 8010860:	681a      	ldr	r2, [r3, #0]
 8010862:	f042 0204 	orr.w	r2, r2, #4
 8010866:	601a      	str	r2, [r3, #0]
 8010868:	e7ab      	b.n	80107c2 <NetworkParams::callbackFunction(char const*)+0x2a>
 801086a:	4628      	mov	r0, r5
 801086c:	492d      	ldr	r1, [pc, #180]	; (8010924 <NetworkParams::callbackFunction(char const*)+0x18c>)
 801086e:	aa01      	add	r2, sp, #4
 8010870:	f001 fb94 	bl	8011f9c <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 8010874:	4c27      	ldr	r4, [pc, #156]	; (8010914 <NetworkParams::callbackFunction(char const*)+0x17c>)
 8010876:	b930      	cbnz	r0, 8010886 <NetworkParams::callbackFunction(char const*)+0xee>
 8010878:	9b01      	ldr	r3, [sp, #4]
 801087a:	60e3      	str	r3, [r4, #12]
 801087c:	6823      	ldr	r3, [r4, #0]
 801087e:	f043 0308 	orr.w	r3, r3, #8
 8010882:	6023      	str	r3, [r4, #0]
 8010884:	e79d      	b.n	80107c2 <NetworkParams::callbackFunction(char const*)+0x2a>
 8010886:	233f      	movs	r3, #63	; 0x3f
 8010888:	4628      	mov	r0, r5
 801088a:	9302      	str	r3, [sp, #8]
 801088c:	4926      	ldr	r1, [pc, #152]	; (8010928 <NetworkParams::callbackFunction(char const*)+0x190>)
 801088e:	ab02      	add	r3, sp, #8
 8010890:	f104 0215 	add.w	r2, r4, #21
 8010894:	f001 fb06 	bl	8011ea4 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 8010898:	b930      	cbnz	r0, 80108a8 <NetworkParams::callbackFunction(char const*)+0x110>
 801089a:	9b02      	ldr	r3, [sp, #8]
 801089c:	4423      	add	r3, r4
 801089e:	7558      	strb	r0, [r3, #21]
 80108a0:	6823      	ldr	r3, [r4, #0]
 80108a2:	f043 0320 	orr.w	r3, r3, #32
 80108a6:	e7ec      	b.n	8010882 <NetworkParams::callbackFunction(char const*)+0xea>
 80108a8:	4628      	mov	r0, r5
 80108aa:	4920      	ldr	r1, [pc, #128]	; (801092c <NetworkParams::callbackFunction(char const*)+0x194>)
 80108ac:	aa01      	add	r2, sp, #4
 80108ae:	f001 fb75 	bl	8011f9c <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 80108b2:	b958      	cbnz	r0, 80108cc <NetworkParams::callbackFunction(char const*)+0x134>
 80108b4:	9a01      	ldr	r2, [sp, #4]
 80108b6:	6823      	ldr	r3, [r4, #0]
 80108b8:	b12a      	cbz	r2, 80108c6 <NetworkParams::callbackFunction(char const*)+0x12e>
 80108ba:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80108be:	6023      	str	r3, [r4, #0]
 80108c0:	f8c4 2055 	str.w	r2, [r4, #85]	; 0x55
 80108c4:	e77d      	b.n	80107c2 <NetworkParams::callbackFunction(char const*)+0x2a>
 80108c6:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80108ca:	e7f8      	b.n	80108be <NetworkParams::callbackFunction(char const*)+0x126>
 80108cc:	4628      	mov	r0, r5
 80108ce:	4918      	ldr	r1, [pc, #96]	; (8010930 <NetworkParams::callbackFunction(char const*)+0x198>)
 80108d0:	aa03      	add	r2, sp, #12
 80108d2:	f001 fb00 	bl	8011ed6 <Sscan::Float(char const*, char const*, float&)>
 80108d6:	2800      	cmp	r0, #0
 80108d8:	f47f af73 	bne.w	80107c2 <NetworkParams::callbackFunction(char const*)+0x2a>
 80108dc:	9e03      	ldr	r6, [sp, #12]
 80108de:	6825      	ldr	r5, [r4, #0]
 80108e0:	4630      	mov	r0, r6
 80108e2:	f7f7 faff 	bl	8007ee4 <__aeabi_f2iz>
 80108e6:	300c      	adds	r0, #12
 80108e8:	281a      	cmp	r0, #26
 80108ea:	d80a      	bhi.n	8010902 <NetworkParams::callbackFunction(char const*)+0x16a>
 80108ec:	2100      	movs	r1, #0
 80108ee:	4630      	mov	r0, r6
 80108f0:	f7f7 fac6 	bl	8007e80 <__aeabi_fcmpeq>
 80108f4:	b928      	cbnz	r0, 8010902 <NetworkParams::callbackFunction(char const*)+0x16a>
 80108f6:	f8c4 6059 	str.w	r6, [r4, #89]	; 0x59
 80108fa:	f045 0580 	orr.w	r5, r5, #128	; 0x80
 80108fe:	6025      	str	r5, [r4, #0]
 8010900:	e75f      	b.n	80107c2 <NetworkParams::callbackFunction(char const*)+0x2a>
 8010902:	2300      	movs	r3, #0
 8010904:	f025 0580 	bic.w	r5, r5, #128	; 0x80
 8010908:	f8c4 3059 	str.w	r3, [r4, #89]	; 0x59
 801090c:	e7f7      	b.n	80108fe <NetworkParams::callbackFunction(char const*)+0x166>
 801090e:	bf00      	nop
 8010910:	08016aa8 	stmdaeq	r1, {r3, r5, r7, r9, fp, sp, lr}
 8010914:	2000a00c 	andcs	sl, r0, ip
 8010918:	08016a86 	stmdaeq	r1, {r1, r2, r7, r9, fp, sp, lr}
 801091c:	08016a51 	stmdaeq	r1, {r0, r4, r6, r9, fp, sp, lr}
 8010920:	08016a9f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r7, r9, fp, sp, lr}
 8010924:	08016a76 	stmdaeq	r1, {r1, r2, r4, r5, r6, r9, fp, sp, lr}
 8010928:	08016a96 	stmdaeq	r1, {r1, r2, r4, r7, r9, fp, sp, lr}
 801092c:	08016a5c 	stmdaeq	r1, {r2, r3, r4, r6, r9, fp, sp, lr}
 8010930:	08016a67 	stmdaeq	r1, {r0, r1, r2, r5, r6, r9, fp, sp, lr}

08010934 <NetworkParams::staticCallbackFunction(void*, char const*)>:
 8010934:	f7ff bf30 	b.w	8010798 <NetworkParams::callbackFunction(char const*)>

08010938 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)>:
 8010938:	b5f0      	push	{r4, r5, r6, r7, lr}
 801093a:	4614      	mov	r4, r2
 801093c:	461d      	mov	r5, r3
 801093e:	b089      	sub	sp, #36	; 0x24
 8010940:	2900      	cmp	r1, #0
 8010942:	d02a      	beq.n	801099a <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x62>
 8010944:	225e      	movs	r2, #94	; 0x5e
 8010946:	4892      	ldr	r0, [pc, #584]	; (8010b90 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x258>)
 8010948:	f002 f8c5 	bl	8012ad6 <memmove>
 801094c:	4622      	mov	r2, r4
 801094e:	462b      	mov	r3, r5
 8010950:	4990      	ldr	r1, [pc, #576]	; (8010b94 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x25c>)
 8010952:	a805      	add	r0, sp, #20
 8010954:	f001 f9ce 	bl	8011cf4 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 8010958:	4c8d      	ldr	r4, [pc, #564]	; (8010b90 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x258>)
 801095a:	6823      	ldr	r3, [r4, #0]
 801095c:	0798      	lsls	r0, r3, #30
 801095e:	bf5f      	itttt	pl
 8010960:	4a8d      	ldrpl	r2, [pc, #564]	; (8010b98 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x260>)
 8010962:	6812      	ldrpl	r2, [r2, #0]
 8010964:	6912      	ldrpl	r2, [r2, #16]
 8010966:	6062      	strpl	r2, [r4, #4]
 8010968:	0759      	lsls	r1, r3, #29
 801096a:	bf5f      	itttt	pl
 801096c:	4a8a      	ldrpl	r2, [pc, #552]	; (8010b98 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x260>)
 801096e:	6812      	ldrpl	r2, [r2, #0]
 8010970:	6992      	ldrpl	r2, [r2, #24]
 8010972:	60a2      	strpl	r2, [r4, #8]
 8010974:	071a      	lsls	r2, r3, #28
 8010976:	bf5f      	itttt	pl
 8010978:	4a87      	ldrpl	r2, [pc, #540]	; (8010b98 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x260>)
 801097a:	6812      	ldrpl	r2, [r2, #0]
 801097c:	6952      	ldrpl	r2, [r2, #20]
 801097e:	60e2      	strpl	r2, [r4, #12]
 8010980:	069f      	lsls	r7, r3, #26
 8010982:	d417      	bmi.n	80109b4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x7c>
 8010984:	223f      	movs	r2, #63	; 0x3f
 8010986:	4b84      	ldr	r3, [pc, #528]	; (8010b98 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x260>)
 8010988:	4884      	ldr	r0, [pc, #528]	; (8010b9c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x264>)
 801098a:	681b      	ldr	r3, [r3, #0]
 801098c:	331b      	adds	r3, #27
 801098e:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8010992:	b941      	cbnz	r1, 80109a6 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x6e>
 8010994:	f002 f8b6 	bl	8012b04 <memset>
 8010998:	e009      	b.n	80109ae <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x76>
 801099a:	6800      	ldr	r0, [r0, #0]
 801099c:	497c      	ldr	r1, [pc, #496]	; (8010b90 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x258>)
 801099e:	6803      	ldr	r3, [r0, #0]
 80109a0:	68db      	ldr	r3, [r3, #12]
 80109a2:	4798      	blx	r3
 80109a4:	e7d2      	b.n	801094c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x14>
 80109a6:	3a01      	subs	r2, #1
 80109a8:	f800 1b01 	strb.w	r1, [r0], #1
 80109ac:	d1ef      	bne.n	801098e <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x56>
 80109ae:	2300      	movs	r3, #0
 80109b0:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 80109b4:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 80109b8:	f8bd 5018 	ldrh.w	r5, [sp, #24]
 80109bc:	7d23      	ldrb	r3, [r4, #20]
 80109be:	42aa      	cmp	r2, r5
 80109c0:	6821      	ldr	r1, [r4, #0]
 80109c2:	d21a      	bcs.n	80109fa <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xc2>
 80109c4:	9805      	ldr	r0, [sp, #20]
 80109c6:	07ce      	lsls	r6, r1, #31
 80109c8:	4410      	add	r0, r2
 80109ca:	eba5 0502 	sub.w	r5, r5, r2
 80109ce:	f89d 201c 	ldrb.w	r2, [sp, #28]
 80109d2:	d404      	bmi.n	80109de <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xa6>
 80109d4:	b922      	cbnz	r2, 80109e0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xa8>
 80109d6:	9300      	str	r3, [sp, #0]
 80109d8:	4a71      	ldr	r2, [pc, #452]	; (8010ba0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x268>)
 80109da:	4b72      	ldr	r3, [pc, #456]	; (8010ba4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x26c>)
 80109dc:	e003      	b.n	80109e6 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xae>
 80109de:	b312      	cbz	r2, 8010a26 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xee>
 80109e0:	9300      	str	r3, [sp, #0]
 80109e2:	4a71      	ldr	r2, [pc, #452]	; (8010ba8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x270>)
 80109e4:	4b6f      	ldr	r3, [pc, #444]	; (8010ba4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x26c>)
 80109e6:	4629      	mov	r1, r5
 80109e8:	f7f8 fe10 	bl	800960c <snprintf>
 80109ec:	f8bd 301a 	ldrh.w	r3, [sp, #26]
 80109f0:	4285      	cmp	r5, r0
 80109f2:	bfa4      	itt	ge
 80109f4:	181b      	addge	r3, r3, r0
 80109f6:	f8ad 301a 	strhge.w	r3, [sp, #26]
 80109fa:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 80109fe:	f8bd 5018 	ldrh.w	r5, [sp, #24]
 8010a02:	f894 305d 	ldrb.w	r3, [r4, #93]	; 0x5d
 8010a06:	42aa      	cmp	r2, r5
 8010a08:	6821      	ldr	r1, [r4, #0]
 8010a0a:	d21f      	bcs.n	8010a4c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x114>
 8010a0c:	9805      	ldr	r0, [sp, #20]
 8010a0e:	05c9      	lsls	r1, r1, #23
 8010a10:	4410      	add	r0, r2
 8010a12:	eba5 0502 	sub.w	r5, r5, r2
 8010a16:	f89d 201c 	ldrb.w	r2, [sp, #28]
 8010a1a:	d408      	bmi.n	8010a2e <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xf6>
 8010a1c:	b94a      	cbnz	r2, 8010a32 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xfa>
 8010a1e:	9300      	str	r3, [sp, #0]
 8010a20:	4a5f      	ldr	r2, [pc, #380]	; (8010ba0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x268>)
 8010a22:	4b62      	ldr	r3, [pc, #392]	; (8010bac <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x274>)
 8010a24:	e008      	b.n	8010a38 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x100>
 8010a26:	9300      	str	r3, [sp, #0]
 8010a28:	4a61      	ldr	r2, [pc, #388]	; (8010bb0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x278>)
 8010a2a:	4b5e      	ldr	r3, [pc, #376]	; (8010ba4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x26c>)
 8010a2c:	e7db      	b.n	80109e6 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xae>
 8010a2e:	2a00      	cmp	r2, #0
 8010a30:	d03e      	beq.n	8010ab0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x178>
 8010a32:	9300      	str	r3, [sp, #0]
 8010a34:	4a5c      	ldr	r2, [pc, #368]	; (8010ba8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x270>)
 8010a36:	4b5d      	ldr	r3, [pc, #372]	; (8010bac <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x274>)
 8010a38:	4629      	mov	r1, r5
 8010a3a:	f7f8 fde7 	bl	800960c <snprintf>
 8010a3e:	4285      	cmp	r5, r0
 8010a40:	bfa2      	ittt	ge
 8010a42:	f8bd 301a 	ldrhge.w	r3, [sp, #26]
 8010a46:	18c0      	addge	r0, r0, r3
 8010a48:	f8ad 001a 	strhge.w	r0, [sp, #26]
 8010a4c:	4959      	ldr	r1, [pc, #356]	; (8010bb4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x27c>)
 8010a4e:	a805      	add	r0, sp, #20
 8010a50:	f001 f9d6 	bl	8011e00 <PropertiesBuilder::AddComment(char const*)>
 8010a54:	6823      	ldr	r3, [r4, #0]
 8010a56:	6862      	ldr	r2, [r4, #4]
 8010a58:	4957      	ldr	r1, [pc, #348]	; (8010bb8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x280>)
 8010a5a:	f3c3 0340 	ubfx	r3, r3, #1, #1
 8010a5e:	a805      	add	r0, sp, #20
 8010a60:	f001 f98a 	bl	8011d78 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 8010a64:	6823      	ldr	r3, [r4, #0]
 8010a66:	68a2      	ldr	r2, [r4, #8]
 8010a68:	4954      	ldr	r1, [pc, #336]	; (8010bbc <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x284>)
 8010a6a:	f3c3 0380 	ubfx	r3, r3, #2, #1
 8010a6e:	a805      	add	r0, sp, #20
 8010a70:	f001 f982 	bl	8011d78 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 8010a74:	6823      	ldr	r3, [r4, #0]
 8010a76:	4952      	ldr	r1, [pc, #328]	; (8010bc0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x288>)
 8010a78:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 8010a7c:	68e2      	ldr	r2, [r4, #12]
 8010a7e:	a805      	add	r0, sp, #20
 8010a80:	f001 f97a 	bl	8011d78 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 8010a84:	f8bd 301a 	ldrh.w	r3, [sp, #26]
 8010a88:	f8bd 5018 	ldrh.w	r5, [sp, #24]
 8010a8c:	6821      	ldr	r1, [r4, #0]
 8010a8e:	42ab      	cmp	r3, r5
 8010a90:	d221      	bcs.n	8010ad6 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x19e>
 8010a92:	9805      	ldr	r0, [sp, #20]
 8010a94:	f011 0f20 	tst.w	r1, #32
 8010a98:	4418      	add	r0, r3
 8010a9a:	eba5 0503 	sub.w	r5, r5, r3
 8010a9e:	f89d 201c 	ldrb.w	r2, [sp, #28]
 8010aa2:	4b3e      	ldr	r3, [pc, #248]	; (8010b9c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x264>)
 8010aa4:	d108      	bne.n	8010ab8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x180>
 8010aa6:	b94a      	cbnz	r2, 8010abc <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x184>
 8010aa8:	9300      	str	r3, [sp, #0]
 8010aaa:	4a46      	ldr	r2, [pc, #280]	; (8010bc4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x28c>)
 8010aac:	4b46      	ldr	r3, [pc, #280]	; (8010bc8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x290>)
 8010aae:	e008      	b.n	8010ac2 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x18a>
 8010ab0:	9300      	str	r3, [sp, #0]
 8010ab2:	4a3f      	ldr	r2, [pc, #252]	; (8010bb0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x278>)
 8010ab4:	4b3d      	ldr	r3, [pc, #244]	; (8010bac <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x274>)
 8010ab6:	e7bf      	b.n	8010a38 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x100>
 8010ab8:	2a00      	cmp	r2, #0
 8010aba:	d035      	beq.n	8010b28 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f0>
 8010abc:	9300      	str	r3, [sp, #0]
 8010abe:	4a43      	ldr	r2, [pc, #268]	; (8010bcc <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x294>)
 8010ac0:	4b41      	ldr	r3, [pc, #260]	; (8010bc8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x290>)
 8010ac2:	4629      	mov	r1, r5
 8010ac4:	f7f8 fda2 	bl	800960c <snprintf>
 8010ac8:	4285      	cmp	r5, r0
 8010aca:	bfa2      	ittt	ge
 8010acc:	f8bd 301a 	ldrhge.w	r3, [sp, #26]
 8010ad0:	18c0      	addge	r0, r0, r3
 8010ad2:	f8ad 001a 	strhge.w	r0, [sp, #26]
 8010ad6:	493e      	ldr	r1, [pc, #248]	; (8010bd0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x298>)
 8010ad8:	a805      	add	r0, sp, #20
 8010ada:	f001 f991 	bl	8011e00 <PropertiesBuilder::AddComment(char const*)>
 8010ade:	6823      	ldr	r3, [r4, #0]
 8010ae0:	f8d4 2055 	ldr.w	r2, [r4, #85]	; 0x55
 8010ae4:	f3c3 1380 	ubfx	r3, r3, #6, #1
 8010ae8:	493a      	ldr	r1, [pc, #232]	; (8010bd4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x29c>)
 8010aea:	a805      	add	r0, sp, #20
 8010aec:	f001 f944 	bl	8011d78 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 8010af0:	f8d4 0059 	ldr.w	r0, [r4, #89]	; 0x59
 8010af4:	6827      	ldr	r7, [r4, #0]
 8010af6:	f8bd 301a 	ldrh.w	r3, [sp, #26]
 8010afa:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 8010afe:	42a3      	cmp	r3, r4
 8010b00:	d227      	bcs.n	8010b52 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x21a>
 8010b02:	9d05      	ldr	r5, [sp, #20]
 8010b04:	1ae4      	subs	r4, r4, r3
 8010b06:	441d      	add	r5, r3
 8010b08:	f7f7 fb90 	bl	800822c <__aeabi_f2d>
 8010b0c:	f017 0f80 	tst.w	r7, #128	; 0x80
 8010b10:	f04f 0301 	mov.w	r3, #1
 8010b14:	f89d 601c 	ldrb.w	r6, [sp, #28]
 8010b18:	d10a      	bne.n	8010b30 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f8>
 8010b1a:	b956      	cbnz	r6, 8010b32 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1fa>
 8010b1c:	9300      	str	r3, [sp, #0]
 8010b1e:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8010b22:	4b2d      	ldr	r3, [pc, #180]	; (8010bd8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x2a0>)
 8010b24:	4a2d      	ldr	r2, [pc, #180]	; (8010bdc <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x2a4>)
 8010b26:	e009      	b.n	8010b3c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x204>
 8010b28:	9300      	str	r3, [sp, #0]
 8010b2a:	4a2d      	ldr	r2, [pc, #180]	; (8010be0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x2a8>)
 8010b2c:	4b26      	ldr	r3, [pc, #152]	; (8010bc8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x290>)
 8010b2e:	e7c8      	b.n	8010ac2 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x18a>
 8010b30:	b346      	cbz	r6, 8010b84 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x24c>
 8010b32:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8010b36:	9300      	str	r3, [sp, #0]
 8010b38:	4a2a      	ldr	r2, [pc, #168]	; (8010be4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x2ac>)
 8010b3a:	4b27      	ldr	r3, [pc, #156]	; (8010bd8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x2a0>)
 8010b3c:	4621      	mov	r1, r4
 8010b3e:	4628      	mov	r0, r5
 8010b40:	f7f8 fd64 	bl	800960c <snprintf>
 8010b44:	f8bd 301a 	ldrh.w	r3, [sp, #26]
 8010b48:	4284      	cmp	r4, r0
 8010b4a:	bfa4      	itt	ge
 8010b4c:	181b      	addge	r3, r3, r0
 8010b4e:	f8ad 301a 	strhge.w	r3, [sp, #26]
 8010b52:	f89d 301c 	ldrb.w	r3, [sp, #28]
 8010b56:	b17b      	cbz	r3, 8010b78 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x240>
 8010b58:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8010b5c:	9b05      	ldr	r3, [sp, #20]
 8010b5e:	4413      	add	r3, r2
 8010b60:	227d      	movs	r2, #125	; 0x7d
 8010b62:	f803 2c01 	strb.w	r2, [r3, #-1]
 8010b66:	f8bd 301a 	ldrh.w	r3, [sp, #26]
 8010b6a:	9905      	ldr	r1, [sp, #20]
 8010b6c:	54ca      	strb	r2, [r1, r3]
 8010b6e:	f8bd 301a 	ldrh.w	r3, [sp, #26]
 8010b72:	3301      	adds	r3, #1
 8010b74:	f8ad 301a 	strh.w	r3, [sp, #26]
 8010b78:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8010b7c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010b7e:	601a      	str	r2, [r3, #0]
 8010b80:	b009      	add	sp, #36	; 0x24
 8010b82:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010b84:	9300      	str	r3, [sp, #0]
 8010b86:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8010b8a:	4b13      	ldr	r3, [pc, #76]	; (8010bd8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x2a0>)
 8010b8c:	4a16      	ldr	r2, [pc, #88]	; (8010be8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x2b0>)
 8010b8e:	e7d5      	b.n	8010b3c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x204>
 8010b90:	2000a00c 	andcs	sl, r0, ip
 8010b94:	08016ab1 	stmdaeq	r1, {r0, r4, r5, r7, r9, fp, sp, lr}
 8010b98:	2000a008 	andcs	sl, r0, r8
 8010b9c:	2000a021 	andcs	sl, r0, r1, lsr #32
 8010ba0:	08014fa2 	stmdaeq	r1, {r1, r5, r7, r8, r9, sl, fp, lr}
 8010ba4:	08016aa8 	stmdaeq	r1, {r3, r5, r7, r9, fp, sp, lr}
 8010ba8:	08014f99 	stmdaeq	r1, {r0, r3, r4, r7, r8, r9, sl, fp, lr}
 8010bac:	08016a86 	stmdaeq	r1, {r1, r2, r7, r9, fp, sp, lr}
 8010bb0:	08014fa3 	stmdaeq	r1, {r0, r1, r5, r7, r8, r9, sl, fp, lr}
 8010bb4:	08016a27 	stmdaeq	r1, {r0, r1, r2, r5, r9, fp, sp, lr}
 8010bb8:	08016a51 	stmdaeq	r1, {r0, r4, r6, r9, fp, sp, lr}
 8010bbc:	08016a9f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r7, r9, fp, sp, lr}
 8010bc0:	08016a76 	stmdaeq	r1, {r1, r2, r4, r5, r6, r9, fp, sp, lr}
 8010bc4:	08014f91 	stmdaeq	r1, {r0, r4, r7, r8, r9, sl, fp, lr}
 8010bc8:	08016a96 	stmdaeq	r1, {r1, r2, r4, r7, r9, fp, sp, lr}
 8010bcc:	08014f86 	stmdaeq	r1, {r1, r2, r7, r8, r9, sl, fp, lr}
 8010bd0:	08016a31 	stmdaeq	r1, {r0, r4, r5, r9, fp, sp, lr}
 8010bd4:	08016a5c 	stmdaeq	r1, {r2, r3, r4, r6, r9, fp, sp, lr}
 8010bd8:	08016a67 	stmdaeq	r1, {r0, r1, r2, r5, r6, r9, fp, sp, lr}
 8010bdc:	08016a47 	stmdaeq	r1, {r0, r1, r2, r6, r9, fp, sp, lr}
 8010be0:	08014f92 	stmdaeq	r1, {r1, r4, r7, r8, r9, sl, fp, lr}
 8010be4:	08016a3c 	stmdaeq	r1, {r2, r3, r4, r5, r9, fp, sp, lr}
 8010be8:	08016a48 	stmdaeq	r1, {r3, r6, r9, fp, sp, lr}

08010bec <NetworkParams::Save(char*, unsigned int, unsigned int&)>:
 8010bec:	b513      	push	{r0, r1, r4, lr}
 8010bee:	6804      	ldr	r4, [r0, #0]
 8010bf0:	b914      	cbnz	r4, 8010bf8 <NetworkParams::Save(char*, unsigned int, unsigned int&)+0xc>
 8010bf2:	601c      	str	r4, [r3, #0]
 8010bf4:	b002      	add	sp, #8
 8010bf6:	bd10      	pop	{r4, pc}
 8010bf8:	9300      	str	r3, [sp, #0]
 8010bfa:	4613      	mov	r3, r2
 8010bfc:	460a      	mov	r2, r1
 8010bfe:	2100      	movs	r1, #0
 8010c00:	f7ff fe9a 	bl	8010938 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)>
 8010c04:	e7f6      	b.n	8010bf4 <NetworkParams::Save(char*, unsigned int, unsigned int&)+0x8>

08010c06 <NetworkParams::Dump()>:
 8010c06:	4770      	bx	lr

08010c08 <memcpy.isra.0>:
 8010c08:	3801      	subs	r0, #1
 8010c0a:	440a      	add	r2, r1
 8010c0c:	4291      	cmp	r1, r2
 8010c0e:	d100      	bne.n	8010c12 <memcpy.isra.0+0xa>
 8010c10:	4770      	bx	lr
 8010c12:	f811 3b01 	ldrb.w	r3, [r1], #1
 8010c16:	f800 3f01 	strb.w	r3, [r0, #1]!
 8010c1a:	e7f7      	b.n	8010c0c <memcpy.isra.0+0x4>

08010c1c <arp_announce>:
 8010c1c:	4803      	ldr	r0, [pc, #12]	; (8010c2c <arp_announce+0x10>)
 8010c1e:	69c3      	ldr	r3, [r0, #28]
 8010c20:	b113      	cbz	r3, 8010c28 <arp_announce+0xc>
 8010c22:	212a      	movs	r1, #42	; 0x2a
 8010c24:	f002 bfb6 	b.w	8013b94 <emac_eth_send>
 8010c28:	4770      	bx	lr
 8010c2a:	bf00      	nop
 8010c2c:	2000a06c 	andcs	sl, r0, ip, rrx

08010c30 <arp_handle_request>:
 8010c30:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010c32:	2204      	movs	r2, #4
 8010c34:	f100 0126 	add.w	r1, r0, #38	; 0x26
 8010c38:	4604      	mov	r4, r0
 8010c3a:	eb0d 0002 	add.w	r0, sp, r2
 8010c3e:	f7ff ffe3 	bl	8010c08 <memcpy.isra.0>
 8010c42:	4b0d      	ldr	r3, [pc, #52]	; (8010c78 <arp_handle_request+0x48>)
 8010c44:	9a01      	ldr	r2, [sp, #4]
 8010c46:	69db      	ldr	r3, [r3, #28]
 8010c48:	429a      	cmp	r2, r3
 8010c4a:	d113      	bne.n	8010c74 <arp_handle_request+0x44>
 8010c4c:	2206      	movs	r2, #6
 8010c4e:	4d0b      	ldr	r5, [pc, #44]	; (8010c7c <arp_handle_request+0x4c>)
 8010c50:	18a1      	adds	r1, r4, r2
 8010c52:	4628      	mov	r0, r5
 8010c54:	f7ff ffd8 	bl	8010c08 <memcpy.isra.0>
 8010c58:	f104 0116 	add.w	r1, r4, #22
 8010c5c:	f105 0020 	add.w	r0, r5, #32
 8010c60:	2206      	movs	r2, #6
 8010c62:	f7ff ffd1 	bl	8010c08 <memcpy.isra.0>
 8010c66:	69e3      	ldr	r3, [r4, #28]
 8010c68:	212a      	movs	r1, #42	; 0x2a
 8010c6a:	4628      	mov	r0, r5
 8010c6c:	f8c5 3026 	str.w	r3, [r5, #38]	; 0x26
 8010c70:	f002 ff90 	bl	8013b94 <emac_eth_send>
 8010c74:	b003      	add	sp, #12
 8010c76:	bd30      	pop	{r4, r5, pc}
 8010c78:	2000a06c 	andcs	sl, r0, ip, rrx
 8010c7c:	2000a098 	mulcs	r0, r8, r0

08010c80 <arp_handle_reply>:
 8010c80:	69c1      	ldr	r1, [r0, #28]
 8010c82:	3016      	adds	r0, #22
 8010c84:	f000 b80a 	b.w	8010c9c <arp_cache_update>

08010c88 <arp_send_request>:
 8010c88:	4b03      	ldr	r3, [pc, #12]	; (8010c98 <arp_send_request+0x10>)
 8010c8a:	212a      	movs	r1, #42	; 0x2a
 8010c8c:	f8c3 0026 	str.w	r0, [r3, #38]	; 0x26
 8010c90:	4618      	mov	r0, r3
 8010c92:	f002 bf7f 	b.w	8013b94 <emac_eth_send>
 8010c96:	bf00      	nop
 8010c98:	2000a0c4 	andcs	sl, r0, r4, asr #1

08010c9c <arp_cache_update>:
 8010c9c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010c9e:	4e11      	ldr	r6, [pc, #68]	; (8010ce4 <arp_cache_update+0x48>)
 8010ca0:	8833      	ldrh	r3, [r6, #0]
 8010ca2:	2b20      	cmp	r3, #32
 8010ca4:	d018      	beq.n	8010cd8 <arp_cache_update+0x3c>
 8010ca6:	2400      	movs	r4, #0
 8010ca8:	220c      	movs	r2, #12
 8010caa:	4d0f      	ldr	r5, [pc, #60]	; (8010ce8 <arp_cache_update+0x4c>)
 8010cac:	b2a7      	uxth	r7, r4
 8010cae:	42bb      	cmp	r3, r7
 8010cb0:	d80b      	bhi.n	8010cca <arp_cache_update+0x2e>
 8010cb2:	fb02 5203 	mla	r2, r2, r3, r5
 8010cb6:	1d84      	adds	r4, r0, #6
 8010cb8:	3203      	adds	r2, #3
 8010cba:	42a0      	cmp	r0, r4
 8010cbc:	d10d      	bne.n	8010cda <arp_cache_update+0x3e>
 8010cbe:	220c      	movs	r2, #12
 8010cc0:	435a      	muls	r2, r3
 8010cc2:	3301      	adds	r3, #1
 8010cc4:	50a9      	str	r1, [r5, r2]
 8010cc6:	8033      	strh	r3, [r6, #0]
 8010cc8:	e006      	b.n	8010cd8 <arp_cache_update+0x3c>
 8010cca:	3401      	adds	r4, #1
 8010ccc:	fb02 5704 	mla	r7, r2, r4, r5
 8010cd0:	f857 7c0c 	ldr.w	r7, [r7, #-12]
 8010cd4:	428f      	cmp	r7, r1
 8010cd6:	d1e9      	bne.n	8010cac <arp_cache_update+0x10>
 8010cd8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010cda:	f810 7b01 	ldrb.w	r7, [r0], #1
 8010cde:	f802 7f01 	strb.w	r7, [r2, #1]!
 8010ce2:	e7ea      	b.n	8010cba <arp_cache_update+0x1e>
 8010ce4:	2000a270 	andcs	sl, r0, r0, ror r2
 8010ce8:	2000a0f0 	strdcs	sl, [r0], -r0

08010cec <arp_cache_lookup>:
 8010cec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8010cf0:	2200      	movs	r2, #0
 8010cf2:	4606      	mov	r6, r0
 8010cf4:	460c      	mov	r4, r1
 8010cf6:	200c      	movs	r0, #12
 8010cf8:	f8df 8084 	ldr.w	r8, [pc, #132]	; 8010d80 <arp_cache_lookup+0x94>
 8010cfc:	fb00 f302 	mul.w	r3, r0, r2
 8010d00:	f853 1008 	ldr.w	r1, [r3, r8]
 8010d04:	42b1      	cmp	r1, r6
 8010d06:	d10d      	bne.n	8010d24 <arp_cache_lookup+0x38>
 8010d08:	3304      	adds	r3, #4
 8010d0a:	4443      	add	r3, r8
 8010d0c:	3c01      	subs	r4, #1
 8010d0e:	1d9a      	adds	r2, r3, #6
 8010d10:	4293      	cmp	r3, r2
 8010d12:	d102      	bne.n	8010d1a <arp_cache_lookup+0x2e>
 8010d14:	4630      	mov	r0, r6
 8010d16:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8010d1a:	f813 1b01 	ldrb.w	r1, [r3], #1
 8010d1e:	f804 1f01 	strb.w	r1, [r4, #1]!
 8010d22:	e7f5      	b.n	8010d10 <arp_cache_lookup+0x24>
 8010d24:	b111      	cbz	r1, 8010d2c <arp_cache_lookup+0x40>
 8010d26:	3201      	adds	r2, #1
 8010d28:	2a20      	cmp	r2, #32
 8010d2a:	d1e7      	bne.n	8010cfc <arp_cache_lookup+0x10>
 8010d2c:	2704      	movs	r7, #4
 8010d2e:	f8df a054 	ldr.w	sl, [pc, #84]	; 8010d84 <arp_cache_lookup+0x98>
 8010d32:	f8ba 5000 	ldrh.w	r5, [sl]
 8010d36:	3f01      	subs	r7, #1
 8010d38:	f017 07ff 	ands.w	r7, r7, #255	; 0xff
 8010d3c:	d101      	bne.n	8010d42 <arp_cache_lookup+0x56>
 8010d3e:	463e      	mov	r6, r7
 8010d40:	e7e8      	b.n	8010d14 <arp_cache_lookup+0x28>
 8010d42:	4630      	mov	r0, r6
 8010d44:	f7ff ffa0 	bl	8010c88 <arp_send_request>
 8010d48:	f44f 3900 	mov.w	r9, #131072	; 0x20000
 8010d4c:	f1b9 0901 	subs.w	r9, r9, #1
 8010d50:	f8ba 3000 	ldrh.w	r3, [sl]
 8010d54:	d011      	beq.n	8010d7a <arp_cache_lookup+0x8e>
 8010d56:	429d      	cmp	r5, r3
 8010d58:	d00c      	beq.n	8010d74 <arp_cache_lookup+0x88>
 8010d5a:	230c      	movs	r3, #12
 8010d5c:	fb03 8505 	mla	r5, r3, r5, r8
 8010d60:	3c01      	subs	r4, #1
 8010d62:	1d2b      	adds	r3, r5, #4
 8010d64:	350a      	adds	r5, #10
 8010d66:	42ab      	cmp	r3, r5
 8010d68:	d0d4      	beq.n	8010d14 <arp_cache_lookup+0x28>
 8010d6a:	f813 2b01 	ldrb.w	r2, [r3], #1
 8010d6e:	f804 2f01 	strb.w	r2, [r4, #1]!
 8010d72:	e7f8      	b.n	8010d66 <arp_cache_lookup+0x7a>
 8010d74:	f7f6 fc00 	bl	8007578 <net_handle>
 8010d78:	e7e8      	b.n	8010d4c <arp_cache_lookup+0x60>
 8010d7a:	429d      	cmp	r5, r3
 8010d7c:	d0db      	beq.n	8010d36 <arp_cache_lookup+0x4a>
 8010d7e:	e7ec      	b.n	8010d5a <arp_cache_lookup+0x6e>
 8010d80:	2000a0f0 	strdcs	sl, [r0], -r0
 8010d84:	2000a270 	andcs	sl, r0, r0, ror r2

08010d88 <_parse_response>:
 8010d88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010d8c:	2400      	movs	r4, #0
 8010d8e:	460d      	mov	r5, r1
 8010d90:	46a3      	mov	fp, r4
 8010d92:	4627      	mov	r7, r4
 8010d94:	46a2      	mov	sl, r4
 8010d96:	46a1      	mov	r9, r4
 8010d98:	46a0      	mov	r8, r4
 8010d9a:	4e4f      	ldr	r6, [pc, #316]	; (8010ed8 <_parse_response+0x150>)
 8010d9c:	f5ad 7d17 	sub.w	sp, sp, #604	; 0x25c
 8010da0:	6833      	ldr	r3, [r6, #0]
 8010da2:	e9cd 4403 	strd	r4, r4, [sp, #12]
 8010da6:	e9cd 4405 	strd	r4, r4, [sp, #20]
 8010daa:	9009      	str	r0, [sp, #36]	; 0x24
 8010dac:	9402      	str	r4, [sp, #8]
 8010dae:	9407      	str	r4, [sp, #28]
 8010db0:	9308      	str	r3, [sp, #32]
 8010db2:	f7f6 fbe1 	bl	8007578 <net_handle>
 8010db6:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8010dba:	9300      	str	r3, [sp, #0]
 8010dbc:	f44f 7209 	mov.w	r2, #548	; 0x224
 8010dc0:	f89d 0024 	ldrb.w	r0, [sp, #36]	; 0x24
 8010dc4:	ab0c      	add	r3, sp, #48	; 0x30
 8010dc6:	a90d      	add	r1, sp, #52	; 0x34
 8010dc8:	f7fe fc7c 	bl	800f6c4 <udp_recv>
 8010dcc:	2800      	cmp	r0, #0
 8010dce:	d03e      	beq.n	8010e4e <_parse_response+0xc6>
 8010dd0:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 8010dd4:	2b43      	cmp	r3, #67	; 0x43
 8010dd6:	d13a      	bne.n	8010e4e <_parse_response+0xc6>
 8010dd8:	aa14      	add	r2, sp, #80	; 0x50
 8010dda:	1e6b      	subs	r3, r5, #1
 8010ddc:	1d69      	adds	r1, r5, #5
 8010dde:	4299      	cmp	r1, r3
 8010de0:	d12f      	bne.n	8010e42 <_parse_response+0xba>
 8010de2:	2100      	movs	r1, #0
 8010de4:	ab0d      	add	r3, sp, #52	; 0x34
 8010de6:	181d      	adds	r5, r3, r0
 8010de8:	468c      	mov	ip, r1
 8010dea:	460e      	mov	r6, r1
 8010dec:	4608      	mov	r0, r1
 8010dee:	ab49      	add	r3, sp, #292	; 0x124
 8010df0:	42ab      	cmp	r3, r5
 8010df2:	d337      	bcc.n	8010e64 <_parse_response+0xdc>
 8010df4:	b141      	cbz	r1, 8010e08 <_parse_response+0x80>
 8010df6:	4b39      	ldr	r3, [pc, #228]	; (8010edc <_parse_response+0x154>)
 8010df8:	9a07      	ldr	r2, [sp, #28]
 8010dfa:	f883 8003 	strb.w	r8, [r3, #3]
 8010dfe:	709a      	strb	r2, [r3, #2]
 8010e00:	9a06      	ldr	r2, [sp, #24]
 8010e02:	705a      	strb	r2, [r3, #1]
 8010e04:	9a05      	ldr	r2, [sp, #20]
 8010e06:	701a      	strb	r2, [r3, #0]
 8010e08:	f1bc 0f00 	cmp.w	ip, #0
 8010e0c:	d007      	beq.n	8010e1e <_parse_response+0x96>
 8010e0e:	4b34      	ldr	r3, [pc, #208]	; (8010ee0 <_parse_response+0x158>)
 8010e10:	9a04      	ldr	r2, [sp, #16]
 8010e12:	705c      	strb	r4, [r3, #1]
 8010e14:	70da      	strb	r2, [r3, #3]
 8010e16:	9a03      	ldr	r2, [sp, #12]
 8010e18:	709a      	strb	r2, [r3, #2]
 8010e1a:	9a02      	ldr	r2, [sp, #8]
 8010e1c:	701a      	strb	r2, [r3, #0]
 8010e1e:	b13e      	cbz	r6, 8010e30 <_parse_response+0xa8>
 8010e20:	4b30      	ldr	r3, [pc, #192]	; (8010ee4 <_parse_response+0x15c>)
 8010e22:	70df      	strb	r7, [r3, #3]
 8010e24:	f883 a002 	strb.w	sl, [r3, #2]
 8010e28:	f883 9001 	strb.w	r9, [r3, #1]
 8010e2c:	f883 b000 	strb.w	fp, [r3]
 8010e30:	2802      	cmp	r0, #2
 8010e32:	d102      	bne.n	8010e3a <_parse_response+0xb2>
 8010e34:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8010e36:	4b2c      	ldr	r3, [pc, #176]	; (8010ee8 <_parse_response+0x160>)
 8010e38:	601a      	str	r2, [r3, #0]
 8010e3a:	f50d 7d17 	add.w	sp, sp, #604	; 0x25c
 8010e3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010e42:	f812 cb01 	ldrb.w	ip, [r2], #1
 8010e46:	f813 ef01 	ldrb.w	lr, [r3, #1]!
 8010e4a:	45e6      	cmp	lr, ip
 8010e4c:	d0c7      	beq.n	8010dde <_parse_response+0x56>
 8010e4e:	6833      	ldr	r3, [r6, #0]
 8010e50:	9a08      	ldr	r2, [sp, #32]
 8010e52:	1a9b      	subs	r3, r3, r2
 8010e54:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 8010e58:	d3ab      	bcc.n	8010db2 <_parse_response+0x2a>
 8010e5a:	2800      	cmp	r0, #0
 8010e5c:	d1c1      	bne.n	8010de2 <_parse_response+0x5a>
 8010e5e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8010e62:	e7ea      	b.n	8010e3a <_parse_response+0xb2>
 8010e64:	781a      	ldrb	r2, [r3, #0]
 8010e66:	2a35      	cmp	r2, #53	; 0x35
 8010e68:	d011      	beq.n	8010e8e <_parse_response+0x106>
 8010e6a:	d808      	bhi.n	8010e7e <_parse_response+0xf6>
 8010e6c:	2a01      	cmp	r2, #1
 8010e6e:	d011      	beq.n	8010e94 <_parse_response+0x10c>
 8010e70:	2a03      	cmp	r2, #3
 8010e72:	d019      	beq.n	8010ea8 <_parse_response+0x120>
 8010e74:	b14a      	cbz	r2, 8010e8a <_parse_response+0x102>
 8010e76:	1c9a      	adds	r2, r3, #2
 8010e78:	785b      	ldrb	r3, [r3, #1]
 8010e7a:	4413      	add	r3, r2
 8010e7c:	e7b8      	b.n	8010df0 <_parse_response+0x68>
 8010e7e:	2a36      	cmp	r2, #54	; 0x36
 8010e80:	d01f      	beq.n	8010ec2 <_parse_response+0x13a>
 8010e82:	2aff      	cmp	r2, #255	; 0xff
 8010e84:	d1f7      	bne.n	8010e76 <_parse_response+0xee>
 8010e86:	462b      	mov	r3, r5
 8010e88:	e7b2      	b.n	8010df0 <_parse_response+0x68>
 8010e8a:	3301      	adds	r3, #1
 8010e8c:	e7b0      	b.n	8010df0 <_parse_response+0x68>
 8010e8e:	7898      	ldrb	r0, [r3, #2]
 8010e90:	3303      	adds	r3, #3
 8010e92:	e7ad      	b.n	8010df0 <_parse_response+0x68>
 8010e94:	f893 b002 	ldrb.w	fp, [r3, #2]
 8010e98:	f893 9003 	ldrb.w	r9, [r3, #3]
 8010e9c:	f893 a004 	ldrb.w	sl, [r3, #4]
 8010ea0:	795f      	ldrb	r7, [r3, #5]
 8010ea2:	4616      	mov	r6, r2
 8010ea4:	3306      	adds	r3, #6
 8010ea6:	e7a3      	b.n	8010df0 <_parse_response+0x68>
 8010ea8:	789a      	ldrb	r2, [r3, #2]
 8010eaa:	78dc      	ldrb	r4, [r3, #3]
 8010eac:	9202      	str	r2, [sp, #8]
 8010eae:	791a      	ldrb	r2, [r3, #4]
 8010eb0:	f04f 0c01 	mov.w	ip, #1
 8010eb4:	9203      	str	r2, [sp, #12]
 8010eb6:	795a      	ldrb	r2, [r3, #5]
 8010eb8:	9204      	str	r2, [sp, #16]
 8010eba:	785a      	ldrb	r2, [r3, #1]
 8010ebc:	4413      	add	r3, r2
 8010ebe:	3302      	adds	r3, #2
 8010ec0:	e796      	b.n	8010df0 <_parse_response+0x68>
 8010ec2:	789a      	ldrb	r2, [r3, #2]
 8010ec4:	f893 8005 	ldrb.w	r8, [r3, #5]
 8010ec8:	9205      	str	r2, [sp, #20]
 8010eca:	78da      	ldrb	r2, [r3, #3]
 8010ecc:	2101      	movs	r1, #1
 8010ece:	9206      	str	r2, [sp, #24]
 8010ed0:	791a      	ldrb	r2, [r3, #4]
 8010ed2:	3306      	adds	r3, #6
 8010ed4:	9207      	str	r2, [sp, #28]
 8010ed6:	e78b      	b.n	8010df0 <_parse_response+0x68>
 8010ed8:	2000a744 	andcs	sl, r0, r4, asr #14
 8010edc:	2000a4a4 	andcs	sl, r0, r4, lsr #9
 8010ee0:	2000a274 	andcs	sl, r0, r4, ror r2
 8010ee4:	2000a27c 	andcs	sl, r0, ip, ror r2
 8010ee8:	2000a278 	andcs	sl, r0, r8, ror r2

08010eec <memcpy.isra.0>:
 8010eec:	3801      	subs	r0, #1
 8010eee:	440a      	add	r2, r1
 8010ef0:	4291      	cmp	r1, r2
 8010ef2:	d100      	bne.n	8010ef6 <memcpy.isra.0+0xa>
 8010ef4:	4770      	bx	lr
 8010ef6:	f811 3b01 	ldrb.w	r3, [r1], #1
 8010efa:	f800 3f01 	strb.w	r3, [r0, #1]!
 8010efe:	e7f7      	b.n	8010ef0 <memcpy.isra.0+0x4>

08010f00 <dhcp_client>:
 8010f00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010f04:	b087      	sub	sp, #28
 8010f06:	9203      	str	r2, [sp, #12]
 8010f08:	4a77      	ldr	r2, [pc, #476]	; (80110e8 <dhcp_client+0x1e8>)
 8010f0a:	460f      	mov	r7, r1
 8010f0c:	4605      	mov	r5, r0
 8010f0e:	f44f 7309 	mov.w	r3, #548	; 0x224
 8010f12:	4614      	mov	r4, r2
 8010f14:	2100      	movs	r1, #0
 8010f16:	3b01      	subs	r3, #1
 8010f18:	f802 1b01 	strb.w	r1, [r2], #1
 8010f1c:	d1fb      	bne.n	8010f16 <dhcp_client+0x16>
 8010f1e:	f240 1301 	movw	r3, #257	; 0x101
 8010f22:	2206      	movs	r2, #6
 8010f24:	4629      	mov	r1, r5
 8010f26:	4871      	ldr	r0, [pc, #452]	; (80110ec <dhcp_client+0x1ec>)
 8010f28:	8023      	strh	r3, [r4, #0]
 8010f2a:	70a2      	strb	r2, [r4, #2]
 8010f2c:	f7ff ffde 	bl	8010eec <memcpy.isra.0>
 8010f30:	4b6f      	ldr	r3, [pc, #444]	; (80110f0 <dhcp_client+0x1f0>)
 8010f32:	2044      	movs	r0, #68	; 0x44
 8010f34:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
 8010f38:	f240 1335 	movw	r3, #309	; 0x135
 8010f3c:	f8a4 30f0 	strh.w	r3, [r4, #240]	; 0xf0
 8010f40:	f7fe fb86 	bl	800f650 <udp_bind>
 8010f44:	1e06      	subs	r6, r0, #0
 8010f46:	f2c0 80c9 	blt.w	80110dc <dhcp_client+0x1dc>
 8010f4a:	f04f 0915 	mov.w	r9, #21
 8010f4e:	f8df a198 	ldr.w	sl, [pc, #408]	; 80110e8 <dhcp_client+0x1e8>
 8010f52:	f1b9 0901 	subs.w	r9, r9, #1
 8010f56:	d11f      	bne.n	8010f98 <dhcp_client+0x98>
 8010f58:	464c      	mov	r4, r9
 8010f5a:	2044      	movs	r0, #68	; 0x44
 8010f5c:	f7fe fb92 	bl	800f684 <udp_unbind>
 8010f60:	2c00      	cmp	r4, #0
 8010f62:	f000 80be 	beq.w	80110e2 <dhcp_client+0x1e2>
 8010f66:	2204      	movs	r2, #4
 8010f68:	4962      	ldr	r1, [pc, #392]	; (80110f4 <dhcp_client+0x1f4>)
 8010f6a:	a805      	add	r0, sp, #20
 8010f6c:	f7ff ffbe 	bl	8010eec <memcpy.isra.0>
 8010f70:	9b05      	ldr	r3, [sp, #20]
 8010f72:	2204      	movs	r2, #4
 8010f74:	4960      	ldr	r1, [pc, #384]	; (80110f8 <dhcp_client+0x1f8>)
 8010f76:	603b      	str	r3, [r7, #0]
 8010f78:	a805      	add	r0, sp, #20
 8010f7a:	f7ff ffb7 	bl	8010eec <memcpy.isra.0>
 8010f7e:	9b05      	ldr	r3, [sp, #20]
 8010f80:	a805      	add	r0, sp, #20
 8010f82:	60bb      	str	r3, [r7, #8]
 8010f84:	2204      	movs	r2, #4
 8010f86:	495d      	ldr	r1, [pc, #372]	; (80110fc <dhcp_client+0x1fc>)
 8010f88:	f7ff ffb0 	bl	8010eec <memcpy.isra.0>
 8010f8c:	2000      	movs	r0, #0
 8010f8e:	9b05      	ldr	r3, [sp, #20]
 8010f90:	607b      	str	r3, [r7, #4]
 8010f92:	b007      	add	sp, #28
 8010f94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010f98:	f643 5301 	movw	r3, #15617	; 0x3d01
 8010f9c:	f240 1807 	movw	r8, #263	; 0x107
 8010fa0:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 8010fa4:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 8010fa8:	782b      	ldrb	r3, [r5, #0]
 8010faa:	4a55      	ldr	r2, [pc, #340]	; (8011100 <dhcp_client+0x200>)
 8010fac:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 8010fb0:	786b      	ldrb	r3, [r5, #1]
 8010fb2:	fa5f fb86 	uxtb.w	fp, r6
 8010fb6:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 8010fba:	78ab      	ldrb	r3, [r5, #2]
 8010fbc:	4651      	mov	r1, sl
 8010fbe:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 8010fc2:	78eb      	ldrb	r3, [r5, #3]
 8010fc4:	4658      	mov	r0, fp
 8010fc6:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 8010fca:	792b      	ldrb	r3, [r5, #4]
 8010fcc:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 8010fd0:	796b      	ldrb	r3, [r5, #5]
 8010fd2:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 8010fd6:	4b4b      	ldr	r3, [pc, #300]	; (8011104 <dhcp_client+0x204>)
 8010fd8:	e9c4 233f 	strd	r2, r3, [r4, #252]	; 0xfc
 8010fdc:	23ff      	movs	r3, #255	; 0xff
 8010fde:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8010fe2:	2343      	movs	r3, #67	; 0x43
 8010fe4:	f240 1205 	movw	r2, #261	; 0x105
 8010fe8:	9300      	str	r3, [sp, #0]
 8010fea:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8010fee:	f7fe fbc5 	bl	800f77c <udp_send>
 8010ff2:	4629      	mov	r1, r5
 8010ff4:	4630      	mov	r0, r6
 8010ff6:	f7ff fec7 	bl	8010d88 <_parse_response>
 8010ffa:	2802      	cmp	r0, #2
 8010ffc:	d1a9      	bne.n	8010f52 <dhcp_client+0x52>
 8010ffe:	f643 5303 	movw	r3, #15619	; 0x3d03
 8011002:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 8011006:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 801100a:	782b      	ldrb	r3, [r5, #0]
 801100c:	f8df c0f8 	ldr.w	ip, [pc, #248]	; 8011108 <dhcp_client+0x208>
 8011010:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 8011014:	786b      	ldrb	r3, [r5, #1]
 8011016:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 801101a:	78ab      	ldrb	r3, [r5, #2]
 801101c:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 8011020:	78eb      	ldrb	r3, [r5, #3]
 8011022:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 8011026:	792b      	ldrb	r3, [r5, #4]
 8011028:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 801102c:	796b      	ldrb	r3, [r5, #5]
 801102e:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 8011032:	f240 4332 	movw	r3, #1074	; 0x432
 8011036:	f8a4 30fc 	strh.w	r3, [r4, #252]	; 0xfc
 801103a:	4b2e      	ldr	r3, [pc, #184]	; (80110f4 <dhcp_client+0x1f4>)
 801103c:	881a      	ldrh	r2, [r3, #0]
 801103e:	885b      	ldrh	r3, [r3, #2]
 8011040:	f8a4 20fe 	strh.w	r2, [r4, #254]	; 0xfe
 8011044:	f8a4 3100 	strh.w	r3, [r4, #256]	; 0x100
 8011048:	f240 4336 	movw	r3, #1078	; 0x436
 801104c:	f8a4 3102 	strh.w	r3, [r4, #258]	; 0x102
 8011050:	4b2e      	ldr	r3, [pc, #184]	; (801110c <dhcp_client+0x20c>)
 8011052:	221e      	movs	r2, #30
 8011054:	681b      	ldr	r3, [r3, #0]
 8011056:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
 801105a:	230c      	movs	r3, #12
 801105c:	f8a4 3108 	strh.w	r3, [r4, #264]	; 0x108
 8011060:	9b03      	ldr	r3, [sp, #12]
 8011062:	1e58      	subs	r0, r3, #1
 8011064:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 8011068:	f1a2 0e1e 	sub.w	lr, r2, #30
 801106c:	1c51      	adds	r1, r2, #1
 801106e:	bb8b      	cbnz	r3, 80110d4 <dhcp_client+0x1d4>
 8011070:	2037      	movs	r0, #55	; 0x37
 8011072:	18a3      	adds	r3, r4, r2
 8011074:	f883 00ec 	strb.w	r0, [r3, #236]	; 0xec
 8011078:	2006      	movs	r0, #6
 801107a:	4421      	add	r1, r4
 801107c:	f881 00ec 	strb.w	r0, [r1, #236]	; 0xec
 8011080:	2103      	movs	r1, #3
 8011082:	f883 10ef 	strb.w	r1, [r3, #239]	; 0xef
 8011086:	210f      	movs	r1, #15
 8011088:	f883 10f1 	strb.w	r1, [r3, #241]	; 0xf1
 801108c:	213a      	movs	r1, #58	; 0x3a
 801108e:	f883 10f2 	strb.w	r1, [r3, #242]	; 0xf2
 8011092:	213b      	movs	r1, #59	; 0x3b
 8011094:	f04f 0801 	mov.w	r8, #1
 8011098:	f883 10f3 	strb.w	r1, [r3, #243]	; 0xf3
 801109c:	21ff      	movs	r1, #255	; 0xff
 801109e:	f883 00f0 	strb.w	r0, [r3, #240]	; 0xf0
 80110a2:	f883 10f4 	strb.w	r1, [r3, #244]	; 0xf4
 80110a6:	f883 80ee 	strb.w	r8, [r3, #238]	; 0xee
 80110aa:	2343      	movs	r3, #67	; 0x43
 80110ac:	32f5      	adds	r2, #245	; 0xf5
 80110ae:	f884 e109 	strb.w	lr, [r4, #265]	; 0x109
 80110b2:	4651      	mov	r1, sl
 80110b4:	9300      	str	r3, [sp, #0]
 80110b6:	b292      	uxth	r2, r2
 80110b8:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80110bc:	4658      	mov	r0, fp
 80110be:	f7fe fb5d 	bl	800f77c <udp_send>
 80110c2:	4629      	mov	r1, r5
 80110c4:	4630      	mov	r0, r6
 80110c6:	f7ff fe5f 	bl	8010d88 <_parse_response>
 80110ca:	2805      	cmp	r0, #5
 80110cc:	f47f af41 	bne.w	8010f52 <dhcp_client+0x52>
 80110d0:	4644      	mov	r4, r8
 80110d2:	e742      	b.n	8010f5a <dhcp_client+0x5a>
 80110d4:	460a      	mov	r2, r1
 80110d6:	f80c 3b01 	strb.w	r3, [ip], #1
 80110da:	e7c3      	b.n	8011064 <dhcp_client+0x164>
 80110dc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80110e0:	e757      	b.n	8010f92 <dhcp_client+0x92>
 80110e2:	f06f 0001 	mvn.w	r0, #1
 80110e6:	e754      	b.n	8010f92 <dhcp_client+0x92>
 80110e8:	2000a280 	andcs	sl, r0, r0, lsl #5
 80110ec:	2000a29c 	mulcs	r0, ip, r2
 80110f0:	63538263 	cmpvs	r3, #805306374	; 0x30000006
 80110f4:	2000a278 	andcs	sl, r0, r8, ror r2
 80110f8:	2000a274 	andcs	sl, r0, r4, ror r2
 80110fc:	2000a27c 	andcs	sl, r0, ip, ror r2
 8011100:	03010637 	movweq	r0, #5687	; 0x1637
 8011104:	3b3a0f06 	blcc	8e94d24 <__exidx_end+0xe7dbb4>
 8011108:	2000a38a 	andcs	sl, r0, sl, lsl #7
 801110c:	2000a4a4 	andcs	sl, r0, r4, lsr #9

08011110 <dhcp_client_release>:
 8011110:	b507      	push	{r0, r1, r2, lr}
 8011112:	2044      	movs	r0, #68	; 0x44
 8011114:	f7fe fa9c 	bl	800f650 <udp_bind>
 8011118:	f243 6307 	movw	r3, #13831	; 0x3607
 801111c:	4911      	ldr	r1, [pc, #68]	; (8011164 <dhcp_client_release+0x54>)
 801111e:	b2c0      	uxtb	r0, r0
 8011120:	f8a1 30f2 	strh.w	r3, [r1, #242]	; 0xf2
 8011124:	2304      	movs	r3, #4
 8011126:	f881 30f4 	strb.w	r3, [r1, #244]	; 0xf4
 801112a:	4b0f      	ldr	r3, [pc, #60]	; (8011168 <dhcp_client_release+0x58>)
 801112c:	781a      	ldrb	r2, [r3, #0]
 801112e:	f881 20f5 	strb.w	r2, [r1, #245]	; 0xf5
 8011132:	785a      	ldrb	r2, [r3, #1]
 8011134:	f881 20f6 	strb.w	r2, [r1, #246]	; 0xf6
 8011138:	789a      	ldrb	r2, [r3, #2]
 801113a:	78db      	ldrb	r3, [r3, #3]
 801113c:	f881 20f7 	strb.w	r2, [r1, #247]	; 0xf7
 8011140:	f881 30f8 	strb.w	r3, [r1, #248]	; 0xf8
 8011144:	23ff      	movs	r3, #255	; 0xff
 8011146:	f881 30f9 	strb.w	r3, [r1, #249]	; 0xf9
 801114a:	2343      	movs	r3, #67	; 0x43
 801114c:	22fa      	movs	r2, #250	; 0xfa
 801114e:	9300      	str	r3, [sp, #0]
 8011150:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8011154:	f7fe fb12 	bl	800f77c <udp_send>
 8011158:	2044      	movs	r0, #68	; 0x44
 801115a:	b003      	add	sp, #12
 801115c:	f85d eb04 	ldr.w	lr, [sp], #4
 8011160:	f7fe ba90 	b.w	800f684 <udp_unbind>
 8011164:	2000a280 	andcs	sl, r0, r0, lsl #5
 8011168:	2000a4a4 	andcs	sl, r0, r4, lsr #9

0801116c <memcpy.isra.0>:
 801116c:	3801      	subs	r0, #1
 801116e:	440a      	add	r2, r1
 8011170:	4291      	cmp	r1, r2
 8011172:	d100      	bne.n	8011176 <memcpy.isra.0+0xa>
 8011174:	4770      	bx	lr
 8011176:	f811 3b01 	ldrb.w	r3, [r1], #1
 801117a:	f800 3f01 	strb.w	r3, [r0, #1]!
 801117e:	e7f7      	b.n	8011170 <memcpy.isra.0+0x4>

08011180 <_send_report>:
 8011180:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8011182:	491c      	ldr	r1, [pc, #112]	; (80111f4 <_send_report+0x74>)
 8011184:	4c1c      	ldr	r4, [pc, #112]	; (80111f8 <_send_report+0x78>)
 8011186:	f3c0 2306 	ubfx	r3, r0, #8, #7
 801118a:	9001      	str	r0, [sp, #4]
 801118c:	70cb      	strb	r3, [r1, #3]
 801118e:	f3c0 4307 	ubfx	r3, r0, #16, #8
 8011192:	f3c0 6007 	ubfx	r0, r0, #24, #8
 8011196:	710b      	strb	r3, [r1, #4]
 8011198:	7148      	strb	r0, [r1, #5]
 801119a:	2206      	movs	r2, #6
 801119c:	4620      	mov	r0, r4
 801119e:	f7ff ffe5 	bl	801116c <memcpy.isra.0>
 80111a2:	2204      	movs	r2, #4
 80111a4:	2700      	movs	r7, #0
 80111a6:	4d15      	ldr	r5, [pc, #84]	; (80111fc <_send_report+0x7c>)
 80111a8:	eb0d 0102 	add.w	r1, sp, r2
 80111ac:	882b      	ldrh	r3, [r5, #0]
 80111ae:	f104 001e 	add.w	r0, r4, #30
 80111b2:	f104 060e 	add.w	r6, r4, #14
 80111b6:	8263      	strh	r3, [r4, #18]
 80111b8:	f7ff ffd8 	bl	801116c <memcpy.isra.0>
 80111bc:	2118      	movs	r1, #24
 80111be:	4630      	mov	r0, r6
 80111c0:	8327      	strh	r7, [r4, #24]
 80111c2:	f000 f8c6 	bl	8011352 <net_chksum>
 80111c6:	2204      	movs	r2, #4
 80111c8:	8320      	strh	r0, [r4, #24]
 80111ca:	eb0d 0102 	add.w	r1, sp, r2
 80111ce:	f104 002a 	add.w	r0, r4, #42	; 0x2a
 80111d2:	f7ff ffcb 	bl	801116c <memcpy.isra.0>
 80111d6:	2120      	movs	r1, #32
 80111d8:	4630      	mov	r0, r6
 80111da:	8527      	strh	r7, [r4, #40]	; 0x28
 80111dc:	f000 f8b9 	bl	8011352 <net_chksum>
 80111e0:	212e      	movs	r1, #46	; 0x2e
 80111e2:	8520      	strh	r0, [r4, #40]	; 0x28
 80111e4:	4620      	mov	r0, r4
 80111e6:	f002 fcd5 	bl	8013b94 <emac_eth_send>
 80111ea:	882b      	ldrh	r3, [r5, #0]
 80111ec:	3301      	adds	r3, #1
 80111ee:	802b      	strh	r3, [r5, #0]
 80111f0:	b003      	add	sp, #12
 80111f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80111f4:	2000a600 	andcs	sl, r0, r0, lsl #12
 80111f8:	2000a608 	andcs	sl, r0, r8, lsl #12
 80111fc:	2000a5c8 	andcs	sl, r0, r8, asr #11

08011200 <igmp_set_ip>:
 8011200:	b507      	push	{r0, r1, r2, lr}
 8011202:	2204      	movs	r2, #4
 8011204:	6803      	ldr	r3, [r0, #0]
 8011206:	eb0d 0102 	add.w	r1, sp, r2
 801120a:	4806      	ldr	r0, [pc, #24]	; (8011224 <igmp_set_ip+0x24>)
 801120c:	9301      	str	r3, [sp, #4]
 801120e:	f7ff ffad 	bl	801116c <memcpy.isra.0>
 8011212:	2204      	movs	r2, #4
 8011214:	4804      	ldr	r0, [pc, #16]	; (8011228 <igmp_set_ip+0x28>)
 8011216:	eb0d 0102 	add.w	r1, sp, r2
 801121a:	f7ff ffa7 	bl	801116c <memcpy.isra.0>
 801121e:	b003      	add	sp, #12
 8011220:	f85d fb04 	ldr.w	pc, [sp], #4
 8011224:	2000a622 	andcs	sl, r0, r2, lsr #12
 8011228:	2000a5ea 	andcs	sl, r0, sl, ror #11

0801122c <igmp_timer>:
 801122c:	b570      	push	{r4, r5, r6, lr}
 801122e:	2500      	movs	r5, #0
 8011230:	2602      	movs	r6, #2
 8011232:	4c0a      	ldr	r4, [pc, #40]	; (801125c <igmp_timer+0x30>)
 8011234:	7963      	ldrb	r3, [r4, #5]
 8011236:	2b01      	cmp	r3, #1
 8011238:	d109      	bne.n	801124e <igmp_timer+0x22>
 801123a:	7923      	ldrb	r3, [r4, #4]
 801123c:	b13b      	cbz	r3, 801124e <igmp_timer+0x22>
 801123e:	3b01      	subs	r3, #1
 8011240:	b2db      	uxtb	r3, r3
 8011242:	7123      	strb	r3, [r4, #4]
 8011244:	b91b      	cbnz	r3, 801124e <igmp_timer+0x22>
 8011246:	6820      	ldr	r0, [r4, #0]
 8011248:	f7ff ff9a 	bl	8011180 <_send_report>
 801124c:	7166      	strb	r6, [r4, #5]
 801124e:	3501      	adds	r5, #1
 8011250:	2d24      	cmp	r5, #36	; 0x24
 8011252:	f104 0408 	add.w	r4, r4, #8
 8011256:	d1ed      	bne.n	8011234 <igmp_timer+0x8>
 8011258:	bd70      	pop	{r4, r5, r6, pc}
 801125a:	bf00      	nop
 801125c:	2000a4a8 	andcs	sl, r0, r8, lsr #9

08011260 <igmp_join>:
 8011260:	b538      	push	{r3, r4, r5, lr}
 8011262:	f000 03e0 	and.w	r3, r0, #224	; 0xe0
 8011266:	2be0      	cmp	r3, #224	; 0xe0
 8011268:	d11b      	bne.n	80112a2 <igmp_join+0x42>
 801126a:	4911      	ldr	r1, [pc, #68]	; (80112b0 <igmp_join+0x50>)
 801126c:	680c      	ldr	r4, [r1, #0]
 801126e:	2c24      	cmp	r4, #36	; 0x24
 8011270:	d01a      	beq.n	80112a8 <igmp_join+0x48>
 8011272:	2300      	movs	r3, #0
 8011274:	4a0f      	ldr	r2, [pc, #60]	; (80112b4 <igmp_join+0x54>)
 8011276:	429c      	cmp	r4, r3
 8011278:	dc0d      	bgt.n	8011296 <igmp_join+0x36>
 801127a:	f44f 7381 	mov.w	r3, #258	; 0x102
 801127e:	f842 0034 	str.w	r0, [r2, r4, lsl #3]
 8011282:	eb02 02c4 	add.w	r2, r2, r4, lsl #3
 8011286:	8093      	strh	r3, [r2, #4]
 8011288:	1c63      	adds	r3, r4, #1
 801128a:	600b      	str	r3, [r1, #0]
 801128c:	f7ff ff78 	bl	8011180 <_send_report>
 8011290:	4623      	mov	r3, r4
 8011292:	4618      	mov	r0, r3
 8011294:	bd38      	pop	{r3, r4, r5, pc}
 8011296:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 801129a:	4285      	cmp	r5, r0
 801129c:	d0f9      	beq.n	8011292 <igmp_join+0x32>
 801129e:	3301      	adds	r3, #1
 80112a0:	e7e9      	b.n	8011276 <igmp_join+0x16>
 80112a2:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80112a6:	e7f4      	b.n	8011292 <igmp_join+0x32>
 80112a8:	f06f 0301 	mvn.w	r3, #1
 80112ac:	e7f1      	b.n	8011292 <igmp_join+0x32>
 80112ae:	bf00      	nop
 80112b0:	2000a5cc 	andcs	sl, r0, ip, asr #11
 80112b4:	2000a4a8 	andcs	sl, r0, r8, lsr #9

080112b8 <igmp_leave>:
 80112b8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80112bc:	2600      	movs	r6, #0
 80112be:	4f1c      	ldr	r7, [pc, #112]	; (8011330 <igmp_leave+0x78>)
 80112c0:	f857 3036 	ldr.w	r3, [r7, r6, lsl #3]
 80112c4:	4283      	cmp	r3, r0
 80112c6:	d007      	beq.n	80112d8 <igmp_leave+0x20>
 80112c8:	3601      	adds	r6, #1
 80112ca:	2e24      	cmp	r6, #36	; 0x24
 80112cc:	d1f8      	bne.n	80112c0 <igmp_leave+0x8>
 80112ce:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80112d2:	b002      	add	sp, #8
 80112d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80112d8:	2400      	movs	r4, #0
 80112da:	f8df 8058 	ldr.w	r8, [pc, #88]	; 8011334 <igmp_leave+0x7c>
 80112de:	4d16      	ldr	r5, [pc, #88]	; (8011338 <igmp_leave+0x80>)
 80112e0:	f8b8 3000 	ldrh.w	r3, [r8]
 80112e4:	2118      	movs	r1, #24
 80112e6:	9001      	str	r0, [sp, #4]
 80112e8:	4814      	ldr	r0, [pc, #80]	; (801133c <igmp_leave+0x84>)
 80112ea:	826b      	strh	r3, [r5, #18]
 80112ec:	832c      	strh	r4, [r5, #24]
 80112ee:	f000 f830 	bl	8011352 <net_chksum>
 80112f2:	2204      	movs	r2, #4
 80112f4:	8328      	strh	r0, [r5, #24]
 80112f6:	eb0d 0102 	add.w	r1, sp, r2
 80112fa:	f105 002a 	add.w	r0, r5, #42	; 0x2a
 80112fe:	f7ff ff35 	bl	801116c <memcpy.isra.0>
 8011302:	2120      	movs	r1, #32
 8011304:	f105 000e 	add.w	r0, r5, #14
 8011308:	852c      	strh	r4, [r5, #40]	; 0x28
 801130a:	f000 f822 	bl	8011352 <net_chksum>
 801130e:	212e      	movs	r1, #46	; 0x2e
 8011310:	8528      	strh	r0, [r5, #40]	; 0x28
 8011312:	4628      	mov	r0, r5
 8011314:	f002 fc3e 	bl	8013b94 <emac_eth_send>
 8011318:	f8b8 3000 	ldrh.w	r3, [r8]
 801131c:	f847 4036 	str.w	r4, [r7, r6, lsl #3]
 8011320:	3301      	adds	r3, #1
 8011322:	eb07 07c6 	add.w	r7, r7, r6, lsl #3
 8011326:	4620      	mov	r0, r4
 8011328:	f8a8 3000 	strh.w	r3, [r8]
 801132c:	80bc      	strh	r4, [r7, #4]
 801132e:	e7d0      	b.n	80112d2 <igmp_leave+0x1a>
 8011330:	2000a4a8 	andcs	sl, r0, r8, lsr #9
 8011334:	2000a5c8 	andcs	sl, r0, r8, asr #11
 8011338:	2000a5d0 	ldrdcs	sl, [r0], -r0
 801133c:	2000a616 	andcs	sl, r0, r6, lsl r6

08011340 <ip_set_ip>:
 8011340:	b510      	push	{r4, lr}
 8011342:	4604      	mov	r4, r0
 8011344:	f7fe f964 	bl	800f610 <udp_set_ip>
 8011348:	4620      	mov	r0, r4
 801134a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801134e:	f7ff bf57 	b.w	8011200 <igmp_set_ip>

08011352 <net_chksum>:
 8011352:	2300      	movs	r3, #0
 8011354:	f021 0201 	bic.w	r2, r1, #1
 8011358:	b530      	push	{r4, r5, lr}
 801135a:	1884      	adds	r4, r0, r2
 801135c:	42a0      	cmp	r0, r4
 801135e:	d10b      	bne.n	8011378 <net_chksum+0x26>
 8011360:	4291      	cmp	r1, r2
 8011362:	d004      	beq.n	801136e <net_chksum+0x1c>
 8011364:	7802      	ldrb	r2, [r0, #0]
 8011366:	0212      	lsls	r2, r2, #8
 8011368:	ba52      	rev16	r2, r2
 801136a:	b292      	uxth	r2, r2
 801136c:	4413      	add	r3, r2
 801136e:	0c1a      	lsrs	r2, r3, #16
 8011370:	d106      	bne.n	8011380 <net_chksum+0x2e>
 8011372:	43d8      	mvns	r0, r3
 8011374:	b280      	uxth	r0, r0
 8011376:	bd30      	pop	{r4, r5, pc}
 8011378:	f830 5b02 	ldrh.w	r5, [r0], #2
 801137c:	442b      	add	r3, r5
 801137e:	e7ed      	b.n	801135c <net_chksum+0xa>
 8011380:	b29b      	uxth	r3, r3
 8011382:	e7f3      	b.n	801136c <net_chksum+0x1a>

08011384 <memcpy.isra.0>:
 8011384:	3801      	subs	r0, #1
 8011386:	440a      	add	r2, r1
 8011388:	4291      	cmp	r1, r2
 801138a:	d100      	bne.n	801138e <memcpy.isra.0+0xa>
 801138c:	4770      	bx	lr
 801138e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8011392:	f800 3f01 	strb.w	r3, [r0, #1]!
 8011396:	e7f7      	b.n	8011388 <memcpy.isra.0+0x4>

08011398 <Display::Write(unsigned char, char const*) [clone .isra.0]>:
 8011398:	b430      	push	{r4, r5}
 801139a:	b168      	cbz	r0, 80113b8 <Display::Write(unsigned char, char const*) [clone .isra.0]+0x20>
 801139c:	2300      	movs	r3, #0
 801139e:	7905      	ldrb	r5, [r0, #4]
 80113a0:	5cd4      	ldrb	r4, [r2, r3]
 80113a2:	b11c      	cbz	r4, 80113ac <Display::Write(unsigned char, char const*) [clone .isra.0]+0x14>
 80113a4:	1c5c      	adds	r4, r3, #1
 80113a6:	429d      	cmp	r5, r3
 80113a8:	4623      	mov	r3, r4
 80113aa:	dcf9      	bgt.n	80113a0 <Display::Write(unsigned char, char const*) [clone .isra.0]+0x8>
 80113ac:	6804      	ldr	r4, [r0, #0]
 80113ae:	b2db      	uxtb	r3, r3
 80113b0:	69e4      	ldr	r4, [r4, #28]
 80113b2:	46a4      	mov	ip, r4
 80113b4:	bc30      	pop	{r4, r5}
 80113b6:	4760      	bx	ip
 80113b8:	bc30      	pop	{r4, r5}
 80113ba:	4770      	bx	lr

080113bc <Display::ClearLine(unsigned char) [clone .isra.0]>:
 80113bc:	b110      	cbz	r0, 80113c4 <Display::ClearLine(unsigned char) [clone .isra.0]+0x8>
 80113be:	6803      	ldr	r3, [r0, #0]
 80113c0:	691b      	ldr	r3, [r3, #16]
 80113c2:	4718      	bx	r3
 80113c4:	4770      	bx	lr

080113c6 <Display::Printf(unsigned char, char const*, ...)>:
 80113c6:	b40c      	push	{r2, r3}
 80113c8:	b570      	push	{r4, r5, r6, lr}
 80113ca:	6984      	ldr	r4, [r0, #24]
 80113cc:	4605      	mov	r5, r0
 80113ce:	460e      	mov	r6, r1
 80113d0:	b08a      	sub	sp, #40	; 0x28
 80113d2:	b174      	cbz	r4, 80113f2 <Display::Printf(unsigned char, char const*, ...)+0x2c>
 80113d4:	ab0f      	add	r3, sp, #60	; 0x3c
 80113d6:	2120      	movs	r1, #32
 80113d8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80113da:	a802      	add	r0, sp, #8
 80113dc:	9301      	str	r3, [sp, #4]
 80113de:	f7f8 f92d 	bl	800963c <vsnprintf>
 80113e2:	4604      	mov	r4, r0
 80113e4:	69a8      	ldr	r0, [r5, #24]
 80113e6:	4631      	mov	r1, r6
 80113e8:	6803      	ldr	r3, [r0, #0]
 80113ea:	aa02      	add	r2, sp, #8
 80113ec:	69dd      	ldr	r5, [r3, #28]
 80113ee:	b2a3      	uxth	r3, r4
 80113f0:	47a8      	blx	r5
 80113f2:	4620      	mov	r0, r4
 80113f4:	b00a      	add	sp, #40	; 0x28
 80113f6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80113fa:	b002      	add	sp, #8
 80113fc:	4770      	bx	lr

080113fe <Display::Status(Display7SegmentMessage)>:
 80113fe:	7c43      	ldrb	r3, [r0, #17]
 8011400:	b513      	push	{r0, r1, r4, lr}
 8011402:	4604      	mov	r4, r0
 8011404:	b19b      	cbz	r3, 801142e <Display::Status(Display7SegmentMessage)+0x30>
 8011406:	43c9      	mvns	r1, r1
 8011408:	2312      	movs	r3, #18
 801140a:	7a00      	ldrb	r0, [r0, #8]
 801140c:	f88d 3004 	strb.w	r3, [sp, #4]
 8011410:	f3c1 2307 	ubfx	r3, r1, #8, #8
 8011414:	f88d 1006 	strb.w	r1, [sp, #6]
 8011418:	f88d 3005 	strb.w	r3, [sp, #5]
 801141c:	f002 fc52 	bl	8013cc4 <gd32_i2c_set_address(unsigned char)>
 8011420:	68e0      	ldr	r0, [r4, #12]
 8011422:	f002 fc47 	bl	8013cb4 <gd32_i2c_set_baudrate(unsigned int)>
 8011426:	2103      	movs	r1, #3
 8011428:	a801      	add	r0, sp, #4
 801142a:	f002 fc51 	bl	8013cd0 <gd32_i2c_write(char const*, unsigned int)>
 801142e:	b002      	add	sp, #8
 8011430:	bd10      	pop	{r4, pc}
	...

08011434 <DisplayUdf::DisplayUdf()>:
 8011434:	b510      	push	{r4, lr}
 8011436:	4604      	mov	r4, r0
 8011438:	f000 fece 	bl	80121d8 <Display::Display()>
 801143c:	2202      	movs	r2, #2
 801143e:	2300      	movs	r3, #0
 8011440:	e9c4 2314 	strd	r2, r3, [r4, #80]	; 0x50
 8011444:	4b05      	ldr	r3, [pc, #20]	; (801145c <DisplayUdf::DisplayUdf()+0x28>)
 8011446:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 801144a:	601c      	str	r4, [r3, #0]
 801144c:	2301      	movs	r3, #1
 801144e:	f802 3b01 	strb.w	r3, [r2], #1
 8011452:	3301      	adds	r3, #1
 8011454:	2b15      	cmp	r3, #21
 8011456:	d1fa      	bne.n	801144e <DisplayUdf::DisplayUdf()+0x1a>
 8011458:	4620      	mov	r0, r4
 801145a:	bd10      	pop	{r4, pc}
 801145c:	2000a638 	andcs	sl, r0, r8, lsr r6

08011460 <DisplayUdf::SetTitle(char const*, ...)>:
 8011460:	b40e      	push	{r1, r2, r3}
 8011462:	b517      	push	{r0, r1, r2, r4, lr}
 8011464:	ab05      	add	r3, sp, #20
 8011466:	f853 2b04 	ldr.w	r2, [r3], #4
 801146a:	4604      	mov	r4, r0
 801146c:	211f      	movs	r1, #31
 801146e:	301c      	adds	r0, #28
 8011470:	9301      	str	r3, [sp, #4]
 8011472:	f7f8 f8e3 	bl	800963c <vsnprintf>
 8011476:	2300      	movs	r3, #0
 8011478:	4404      	add	r4, r0
 801147a:	7723      	strb	r3, [r4, #28]
 801147c:	b003      	add	sp, #12
 801147e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011482:	b003      	add	sp, #12
 8011484:	4770      	bx	lr
	...

08011488 <DisplayUdf::ShowEmacStart()>:
 8011488:	b510      	push	{r4, lr}
 801148a:	4604      	mov	r4, r0
 801148c:	f890 103e 	ldrb.w	r1, [r0, #62]	; 0x3e
 8011490:	6980      	ldr	r0, [r0, #24]
 8011492:	f7ff ff93 	bl	80113bc <Display::ClearLine(unsigned char) [clone .isra.0]>
 8011496:	4620      	mov	r0, r4
 8011498:	4a02      	ldr	r2, [pc, #8]	; (80114a4 <DisplayUdf::ShowEmacStart()+0x1c>)
 801149a:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 801149e:	f7ff ff92 	bl	80113c6 <Display::Printf(unsigned char, char const*, ...)>
 80114a2:	bd10      	pop	{r4, pc}
 80114a4:	08016abd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r7, r9, fp, sp, lr}

080114a8 <DisplayUdf::ShowIpAddress()>:
 80114a8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80114ac:	4604      	mov	r4, r0
 80114ae:	f890 103e 	ldrb.w	r1, [r0, #62]	; 0x3e
 80114b2:	b086      	sub	sp, #24
 80114b4:	6980      	ldr	r0, [r0, #24]
 80114b6:	f7ff ff81 	bl	80113bc <Display::ClearLine(unsigned char) [clone .isra.0]>
 80114ba:	4b13      	ldr	r3, [pc, #76]	; (8011508 <DisplayUdf::ShowIpAddress()+0x60>)
 80114bc:	f894 703e 	ldrb.w	r7, [r4, #62]	; 0x3e
 80114c0:	681d      	ldr	r5, [r3, #0]
 80114c2:	69a8      	ldr	r0, [r5, #24]
 80114c4:	692e      	ldr	r6, [r5, #16]
 80114c6:	f003 fc03 	bl	8014cd0 <__popcountsi2>
 80114ca:	78eb      	ldrb	r3, [r5, #3]
 80114cc:	fa5f f886 	uxtb.w	r8, r6
 80114d0:	f3c6 2907 	ubfx	r9, r6, #8, #8
 80114d4:	f3c6 4a07 	ubfx	sl, r6, #16, #8
 80114d8:	0e36      	lsrs	r6, r6, #24
 80114da:	b99b      	cbnz	r3, 8011504 <DisplayUdf::ShowIpAddress()+0x5c>
 80114dc:	786b      	ldrb	r3, [r5, #1]
 80114de:	2b00      	cmp	r3, #0
 80114e0:	bf14      	ite	ne
 80114e2:	2244      	movne	r2, #68	; 0x44
 80114e4:	2253      	moveq	r2, #83	; 0x53
 80114e6:	e9cd 0203 	strd	r0, r2, [sp, #12]
 80114ea:	4643      	mov	r3, r8
 80114ec:	4639      	mov	r1, r7
 80114ee:	4620      	mov	r0, r4
 80114f0:	e9cd a601 	strd	sl, r6, [sp, #4]
 80114f4:	4a05      	ldr	r2, [pc, #20]	; (801150c <DisplayUdf::ShowIpAddress()+0x64>)
 80114f6:	f8cd 9000 	str.w	r9, [sp]
 80114fa:	f7ff ff64 	bl	80113c6 <Display::Printf(unsigned char, char const*, ...)>
 80114fe:	b006      	add	sp, #24
 8011500:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011504:	225a      	movs	r2, #90	; 0x5a
 8011506:	e7ee      	b.n	80114e6 <DisplayUdf::ShowIpAddress()+0x3e>
 8011508:	2000a008 	andcs	sl, r0, r8
 801150c:	08016acc 	stmdaeq	r1, {r2, r3, r6, r7, r9, fp, sp, lr}

08011510 <DisplayUdf::ShowNetmask()>:
 8011510:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8011512:	4604      	mov	r4, r0
 8011514:	4b0b      	ldr	r3, [pc, #44]	; (8011544 <DisplayUdf::ShowNetmask()+0x34>)
 8011516:	681b      	ldr	r3, [r3, #0]
 8011518:	699b      	ldr	r3, [r3, #24]
 801151a:	0e1a      	lsrs	r2, r3, #24
 801151c:	9202      	str	r2, [sp, #8]
 801151e:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8011522:	9201      	str	r2, [sp, #4]
 8011524:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8011528:	9200      	str	r2, [sp, #0]
 801152a:	f890 1048 	ldrb.w	r1, [r0, #72]	; 0x48
 801152e:	4a06      	ldr	r2, [pc, #24]	; (8011548 <DisplayUdf::ShowNetmask()+0x38>)
 8011530:	b2db      	uxtb	r3, r3
 8011532:	f7ff ff48 	bl	80113c6 <Display::Printf(unsigned char, char const*, ...)>
 8011536:	4620      	mov	r0, r4
 8011538:	b004      	add	sp, #16
 801153a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801153e:	f7ff bfb3 	b.w	80114a8 <DisplayUdf::ShowIpAddress()>
 8011542:	bf00      	nop
 8011544:	2000a008 	andcs	sl, r0, r8
 8011548:	08016ade 	stmdaeq	r1, {r1, r2, r3, r4, r6, r7, r9, fp, sp, lr}

0801154c <DisplayUdf::ShowGatewayIp()>:
 801154c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801154e:	4604      	mov	r4, r0
 8011550:	f890 104e 	ldrb.w	r1, [r0, #78]	; 0x4e
 8011554:	6980      	ldr	r0, [r0, #24]
 8011556:	f7ff ff31 	bl	80113bc <Display::ClearLine(unsigned char) [clone .isra.0]>
 801155a:	4b0a      	ldr	r3, [pc, #40]	; (8011584 <DisplayUdf::ShowGatewayIp()+0x38>)
 801155c:	4620      	mov	r0, r4
 801155e:	681b      	ldr	r3, [r3, #0]
 8011560:	f894 104e 	ldrb.w	r1, [r4, #78]	; 0x4e
 8011564:	695b      	ldr	r3, [r3, #20]
 8011566:	0e1a      	lsrs	r2, r3, #24
 8011568:	9202      	str	r2, [sp, #8]
 801156a:	f3c3 4207 	ubfx	r2, r3, #16, #8
 801156e:	9201      	str	r2, [sp, #4]
 8011570:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8011574:	9200      	str	r2, [sp, #0]
 8011576:	b2db      	uxtb	r3, r3
 8011578:	4a03      	ldr	r2, [pc, #12]	; (8011588 <DisplayUdf::ShowGatewayIp()+0x3c>)
 801157a:	f7ff ff24 	bl	80113c6 <Display::Printf(unsigned char, char const*, ...)>
 801157e:	b004      	add	sp, #16
 8011580:	bd10      	pop	{r4, pc}
 8011582:	bf00      	nop
 8011584:	2000a008 	andcs	sl, r0, r8
 8011588:	08016aed 	stmdaeq	r1, {r0, r2, r3, r5, r6, r7, r9, fp, sp, lr}

0801158c <DisplayUdf::ShowHostName()>:
 801158c:	b510      	push	{r4, lr}
 801158e:	4604      	mov	r4, r0
 8011590:	f890 1043 	ldrb.w	r1, [r0, #67]	; 0x43
 8011594:	6980      	ldr	r0, [r0, #24]
 8011596:	f7ff ff11 	bl	80113bc <Display::ClearLine(unsigned char) [clone .isra.0]>
 801159a:	4b05      	ldr	r3, [pc, #20]	; (80115b0 <DisplayUdf::ShowHostName()+0x24>)
 801159c:	f894 1043 	ldrb.w	r1, [r4, #67]	; 0x43
 80115a0:	681a      	ldr	r2, [r3, #0]
 80115a2:	69a0      	ldr	r0, [r4, #24]
 80115a4:	321c      	adds	r2, #28
 80115a6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80115aa:	f7ff bef5 	b.w	8011398 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 80115ae:	bf00      	nop
 80115b0:	2000a008 	andcs	sl, r0, r8

080115b4 <DisplayUdf::Show()>:
 80115b4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80115b6:	4604      	mov	r4, r0
 80115b8:	21ff      	movs	r1, #255	; 0xff
 80115ba:	f100 033c 	add.w	r3, r0, #60	; 0x3c
 80115be:	f100 0250 	add.w	r2, r0, #80	; 0x50
 80115c2:	f813 0b01 	ldrb.w	r0, [r3], #1
 80115c6:	2806      	cmp	r0, #6
 80115c8:	bf88      	it	hi
 80115ca:	f803 1c01 	strbhi.w	r1, [r3, #-1]
 80115ce:	429a      	cmp	r2, r3
 80115d0:	d1f7      	bne.n	80115c2 <DisplayUdf::Show()+0xe>
 80115d2:	2501      	movs	r5, #1
 80115d4:	4629      	mov	r1, r5
 80115d6:	3501      	adds	r5, #1
 80115d8:	69a0      	ldr	r0, [r4, #24]
 80115da:	b2ed      	uxtb	r5, r5
 80115dc:	f7ff feee 	bl	80113bc <Display::ClearLine(unsigned char) [clone .isra.0]>
 80115e0:	2d06      	cmp	r5, #6
 80115e2:	d1f7      	bne.n	80115d4 <DisplayUdf::Show()+0x20>
 80115e4:	f894 103c 	ldrb.w	r1, [r4, #60]	; 0x3c
 80115e8:	69a0      	ldr	r0, [r4, #24]
 80115ea:	f104 021c 	add.w	r2, r4, #28
 80115ee:	f7ff fed3 	bl	8011398 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 80115f2:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 80115f6:	69a0      	ldr	r0, [r4, #24]
 80115f8:	4a0d      	ldr	r2, [pc, #52]	; (8011630 <DisplayUdf::Show()+0x7c>)
 80115fa:	f7ff fecd 	bl	8011398 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 80115fe:	4b0d      	ldr	r3, [pc, #52]	; (8011634 <DisplayUdf::Show()+0x80>)
 8011600:	4a0d      	ldr	r2, [pc, #52]	; (8011638 <DisplayUdf::Show()+0x84>)
 8011602:	f894 103f 	ldrb.w	r1, [r4, #63]	; 0x3f
 8011606:	9300      	str	r3, [sp, #0]
 8011608:	4620      	mov	r0, r4
 801160a:	2303      	movs	r3, #3
 801160c:	f7ff fedb 	bl	80113c6 <Display::Printf(unsigned char, char const*, ...)>
 8011610:	4620      	mov	r0, r4
 8011612:	f7ff ff49 	bl	80114a8 <DisplayUdf::ShowIpAddress()>
 8011616:	4620      	mov	r0, r4
 8011618:	f7ff ff98 	bl	801154c <DisplayUdf::ShowGatewayIp()>
 801161c:	4620      	mov	r0, r4
 801161e:	f7ff ff77 	bl	8011510 <DisplayUdf::ShowNetmask()>
 8011622:	4620      	mov	r0, r4
 8011624:	b003      	add	sp, #12
 8011626:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801162a:	f7ff bfaf 	b.w	801158c <DisplayUdf::ShowHostName()>
 801162e:	bf00      	nop
 8011630:	08014e75 	stmdaeq	r1, {r0, r2, r4, r5, r6, r9, sl, fp, lr}
 8011634:	2000a6d0 	ldrdcs	sl, [r0], -r0
 8011638:	08016afc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r9, fp, sp, lr}

0801163c <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)>:
 801163c:	3901      	subs	r1, #1
 801163e:	b510      	push	{r4, lr}
 8011640:	4604      	mov	r4, r0
 8011642:	2903      	cmp	r1, #3
 8011644:	d814      	bhi.n	8011670 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x34>
 8011646:	e8df f001 	tbb	[pc, r1]
 801164a:	281b1402 	ldmdacs	fp, {r1, sl, ip}
 801164e:	4b14      	ldr	r3, [pc, #80]	; (80116a0 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 8011650:	f44f 41b6 	mov.w	r1, #23296	; 0x5b00
 8011654:	6818      	ldr	r0, [r3, #0]
 8011656:	f7ff fed2 	bl	80113fe <Display::Status(Display7SegmentMessage)>
 801165a:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 801165e:	69a0      	ldr	r0, [r4, #24]
 8011660:	f7ff feac 	bl	80113bc <Display::ClearLine(unsigned char) [clone .isra.0]>
 8011664:	4a0f      	ldr	r2, [pc, #60]	; (80116a4 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x68>)
 8011666:	4620      	mov	r0, r4
 8011668:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 801166c:	f7ff feab 	bl	80113c6 <Display::Printf(unsigned char, char const*, ...)>
 8011670:	bd10      	pop	{r4, pc}
 8011672:	f248 0180 	movw	r1, #32896	; 0x8080
 8011676:	4b0a      	ldr	r3, [pc, #40]	; (80116a0 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 8011678:	6818      	ldr	r0, [r3, #0]
 801167a:	f7ff fec0 	bl	80113fe <Display::Status(Display7SegmentMessage)>
 801167e:	e7f7      	b.n	8011670 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x34>
 8011680:	4b07      	ldr	r3, [pc, #28]	; (80116a0 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 8011682:	f44f 41b6 	mov.w	r1, #23296	; 0x5b00
 8011686:	6818      	ldr	r0, [r3, #0]
 8011688:	f7ff feb9 	bl	80113fe <Display::Status(Display7SegmentMessage)>
 801168c:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 8011690:	69a0      	ldr	r0, [r4, #24]
 8011692:	f7ff fe93 	bl	80113bc <Display::ClearLine(unsigned char) [clone .isra.0]>
 8011696:	4a04      	ldr	r2, [pc, #16]	; (80116a8 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x6c>)
 8011698:	e7e5      	b.n	8011666 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x2a>
 801169a:	f645 3179 	movw	r1, #23417	; 0x5b79
 801169e:	e7ea      	b.n	8011676 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x3a>
 80116a0:	2000a640 	andcs	sl, r0, r0, asr #12
 80116a4:	08016b0b 	stmdaeq	r1, {r0, r1, r3, r8, r9, fp, sp, lr}
 80116a8:	08016b19 	stmdaeq	r1, {r0, r3, r4, r8, r9, fp, sp, lr}

080116ac <DisplayUdf::ShowShutdown()>:
 80116ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80116b0:	4604      	mov	r4, r0
 80116b2:	6980      	ldr	r0, [r0, #24]
 80116b4:	b1d0      	cbz	r0, 80116ec <DisplayUdf::ShowShutdown()+0x40>
 80116b6:	f890 8005 	ldrb.w	r8, [r0, #5]
 80116ba:	6803      	ldr	r3, [r0, #0]
 80116bc:	f108 35ff 	add.w	r5, r8, #4294967295	; 0xffffffff
 80116c0:	b2ed      	uxtb	r5, r5
 80116c2:	462a      	mov	r2, r5
 80116c4:	2100      	movs	r1, #0
 80116c6:	6a1b      	ldr	r3, [r3, #32]
 80116c8:	7906      	ldrb	r6, [r0, #4]
 80116ca:	2700      	movs	r7, #0
 80116cc:	4798      	blx	r3
 80116ce:	3e01      	subs	r6, #1
 80116d0:	42b7      	cmp	r7, r6
 80116d2:	69a0      	ldr	r0, [r4, #24]
 80116d4:	d311      	bcc.n	80116fa <DisplayUdf::ShowShutdown()+0x4e>
 80116d6:	b120      	cbz	r0, 80116e2 <DisplayUdf::ShowShutdown()+0x36>
 80116d8:	6803      	ldr	r3, [r0, #0]
 80116da:	462a      	mov	r2, r5
 80116dc:	2100      	movs	r1, #0
 80116de:	6a1b      	ldr	r3, [r3, #32]
 80116e0:	4798      	blx	r3
 80116e2:	4641      	mov	r1, r8
 80116e4:	4a08      	ldr	r2, [pc, #32]	; (8011708 <DisplayUdf::ShowShutdown()+0x5c>)
 80116e6:	69a0      	ldr	r0, [r4, #24]
 80116e8:	f7ff fe56 	bl	8011398 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 80116ec:	f44f 41de 	mov.w	r1, #28416	; 0x6f00
 80116f0:	4620      	mov	r0, r4
 80116f2:	f7ff fe84 	bl	80113fe <Display::Status(Display7SegmentMessage)>
 80116f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80116fa:	b118      	cbz	r0, 8011704 <DisplayUdf::ShowShutdown()+0x58>
 80116fc:	6803      	ldr	r3, [r0, #0]
 80116fe:	2120      	movs	r1, #32
 8011700:	695b      	ldr	r3, [r3, #20]
 8011702:	4798      	blx	r3
 8011704:	3701      	adds	r7, #1
 8011706:	e7e3      	b.n	80116d0 <DisplayUdf::ShowShutdown()+0x24>
 8011708:	08016b27 	stmdaeq	r1, {r0, r1, r2, r5, r8, r9, fp, sp, lr}

0801170c <DisplayUdf::Set(unsigned char, displayudf::Labels)>:
 801170c:	1e4b      	subs	r3, r1, #1
 801170e:	2b05      	cmp	r3, #5
 8011710:	b530      	push	{r4, r5, lr}
 8011712:	d80f      	bhi.n	8011734 <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x28>
 8011714:	2300      	movs	r3, #0
 8011716:	f100 043c 	add.w	r4, r0, #60	; 0x3c
 801171a:	f814 5b01 	ldrb.w	r5, [r4], #1
 801171e:	428d      	cmp	r5, r1
 8011720:	d109      	bne.n	8011736 <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x2a>
 8011722:	1884      	adds	r4, r0, r2
 8011724:	f894 403c 	ldrb.w	r4, [r4, #60]	; 0x3c
 8011728:	4403      	add	r3, r0
 801172a:	f883 403c 	strb.w	r4, [r3, #60]	; 0x3c
 801172e:	4410      	add	r0, r2
 8011730:	f880 103c 	strb.w	r1, [r0, #60]	; 0x3c
 8011734:	bd30      	pop	{r4, r5, pc}
 8011736:	3301      	adds	r3, #1
 8011738:	2b14      	cmp	r3, #20
 801173a:	d1ee      	bne.n	801171a <DisplayUdf::Set(unsigned char, displayudf::Labels)+0xe>
 801173c:	e7f7      	b.n	801172e <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x22>
	...

08011740 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>:
 8011740:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8011742:	88c6      	ldrh	r6, [r0, #6]
 8011744:	8885      	ldrh	r5, [r0, #4]
 8011746:	42ae      	cmp	r6, r5
 8011748:	d216      	bcs.n	8011778 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x38>
 801174a:	4604      	mov	r4, r0
 801174c:	6800      	ldr	r0, [r0, #0]
 801174e:	1bad      	subs	r5, r5, r6
 8011750:	4430      	add	r0, r6
 8011752:	7a26      	ldrb	r6, [r4, #8]
 8011754:	b923      	cbnz	r3, 8011760 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x20>
 8011756:	b926      	cbnz	r6, 8011762 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x22>
 8011758:	9200      	str	r2, [sp, #0]
 801175a:	460b      	mov	r3, r1
 801175c:	4a09      	ldr	r2, [pc, #36]	; (8011784 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x44>)
 801175e:	e003      	b.n	8011768 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 8011760:	b166      	cbz	r6, 801177c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x3c>
 8011762:	460b      	mov	r3, r1
 8011764:	9200      	str	r2, [sp, #0]
 8011766:	4a08      	ldr	r2, [pc, #32]	; (8011788 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x48>)
 8011768:	4629      	mov	r1, r5
 801176a:	f7f7 ff4f 	bl	800960c <snprintf>
 801176e:	4285      	cmp	r5, r0
 8011770:	bfa2      	ittt	ge
 8011772:	88e3      	ldrhge	r3, [r4, #6]
 8011774:	181b      	addge	r3, r3, r0
 8011776:	80e3      	strhge	r3, [r4, #6]
 8011778:	b002      	add	sp, #8
 801177a:	bd70      	pop	{r4, r5, r6, pc}
 801177c:	9200      	str	r2, [sp, #0]
 801177e:	460b      	mov	r3, r1
 8011780:	4a02      	ldr	r2, [pc, #8]	; (801178c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x4c>)
 8011782:	e7f1      	b.n	8011768 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 8011784:	08014fa2 	stmdaeq	r1, {r1, r5, r7, r8, r9, sl, fp, lr}
 8011788:	08014f99 	stmdaeq	r1, {r0, r3, r4, r7, r8, r9, sl, fp, lr}
 801178c:	08014fa3 	stmdaeq	r1, {r0, r1, r5, r7, r8, r9, sl, fp, lr}

08011790 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>:
 8011790:	b510      	push	{r4, lr}
 8011792:	2220      	movs	r2, #32
 8011794:	4604      	mov	r4, r0
 8011796:	f840 1b04 	str.w	r1, [r0], #4
 801179a:	2100      	movs	r1, #0
 801179c:	f001 f9b2 	bl	8012b04 <memset>
 80117a0:	f647 7305 	movw	r3, #32517	; 0x7f05
 80117a4:	4620      	mov	r0, r4
 80117a6:	84a3      	strh	r3, [r4, #36]	; 0x24
 80117a8:	bd10      	pop	{r4, pc}

080117aa <DisplayUdfParams::Load()>:
 80117aa:	b508      	push	{r3, lr}
 80117ac:	2300      	movs	r3, #0
 80117ae:	4601      	mov	r1, r0
 80117b0:	6043      	str	r3, [r0, #4]
 80117b2:	6800      	ldr	r0, [r0, #0]
 80117b4:	b120      	cbz	r0, 80117c0 <DisplayUdfParams::Load()+0x16>
 80117b6:	6803      	ldr	r3, [r0, #0]
 80117b8:	3104      	adds	r1, #4
 80117ba:	68db      	ldr	r3, [r3, #12]
 80117bc:	4798      	blx	r3
 80117be:	2001      	movs	r0, #1
 80117c0:	bd08      	pop	{r3, pc}
	...

080117c4 <DisplayUdfParams::Load(char const*, unsigned int)>:
 80117c4:	6803      	ldr	r3, [r0, #0]
 80117c6:	b1d3      	cbz	r3, 80117fe <DisplayUdfParams::Load(char const*, unsigned int)+0x3a>
 80117c8:	2300      	movs	r3, #0
 80117ca:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80117cc:	460d      	mov	r5, r1
 80117ce:	4616      	mov	r6, r2
 80117d0:	4604      	mov	r4, r0
 80117d2:	6043      	str	r3, [r0, #4]
 80117d4:	4602      	mov	r2, r0
 80117d6:	490a      	ldr	r1, [pc, #40]	; (8011800 <DisplayUdfParams::Load(char const*, unsigned int)+0x3c>)
 80117d8:	4668      	mov	r0, sp
 80117da:	f000 fb2b 	bl	8011e34 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 80117de:	4632      	mov	r2, r6
 80117e0:	4629      	mov	r1, r5
 80117e2:	4668      	mov	r0, sp
 80117e4:	f000 fb2a 	bl	8011e3c <ReadConfigFile::Read(char const*, unsigned int)>
 80117e8:	4621      	mov	r1, r4
 80117ea:	f851 0b04 	ldr.w	r0, [r1], #4
 80117ee:	6803      	ldr	r3, [r0, #0]
 80117f0:	689b      	ldr	r3, [r3, #8]
 80117f2:	4798      	blx	r3
 80117f4:	4668      	mov	r0, sp
 80117f6:	f000 fb20 	bl	8011e3a <ReadConfigFile::~ReadConfigFile()>
 80117fa:	b002      	add	sp, #8
 80117fc:	bd70      	pop	{r4, r5, r6, pc}
 80117fe:	4770      	bx	lr
 8011800:	080118cd 	stmdaeq	r1, {r0, r2, r3, r6, r7, fp, ip}

08011804 <DisplayUdfParams::callbackFunction(char const*)>:
 8011804:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8011806:	460e      	mov	r6, r1
 8011808:	4604      	mov	r4, r0
 801180a:	492c      	ldr	r1, [pc, #176]	; (80118bc <DisplayUdfParams::callbackFunction(char const*)+0xb8>)
 801180c:	4630      	mov	r0, r6
 801180e:	f10d 0207 	add.w	r2, sp, #7
 8011812:	f000 fc22 	bl	801205a <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8011816:	b968      	cbnz	r0, 8011834 <DisplayUdfParams::callbackFunction(char const*)+0x30>
 8011818:	f89d 2007 	ldrb.w	r2, [sp, #7]
 801181c:	6863      	ldr	r3, [r4, #4]
 801181e:	2a7f      	cmp	r2, #127	; 0x7f
 8011820:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
 8011824:	bf14      	ite	ne
 8011826:	f043 5300 	orrne.w	r3, r3, #536870912	; 0x20000000
 801182a:	f023 5300 	biceq.w	r3, r3, #536870912	; 0x20000000
 801182e:	6063      	str	r3, [r4, #4]
 8011830:	b003      	add	sp, #12
 8011832:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011834:	4630      	mov	r0, r6
 8011836:	4922      	ldr	r1, [pc, #136]	; (80118c0 <DisplayUdfParams::callbackFunction(char const*)+0xbc>)
 8011838:	f10d 0207 	add.w	r2, sp, #7
 801183c:	f000 fc0d 	bl	801205a <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8011840:	b958      	cbnz	r0, 801185a <DisplayUdfParams::callbackFunction(char const*)+0x56>
 8011842:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8011846:	6863      	ldr	r3, [r4, #4]
 8011848:	2a05      	cmp	r2, #5
 801184a:	f884 2024 	strb.w	r2, [r4, #36]	; 0x24
 801184e:	bf14      	ite	ne
 8011850:	f043 5380 	orrne.w	r3, r3, #268435456	; 0x10000000
 8011854:	f023 5380 	biceq.w	r3, r3, #268435456	; 0x10000000
 8011858:	e7e9      	b.n	801182e <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 801185a:	4630      	mov	r0, r6
 801185c:	4919      	ldr	r1, [pc, #100]	; (80118c4 <DisplayUdfParams::callbackFunction(char const*)+0xc0>)
 801185e:	f10d 0207 	add.w	r2, sp, #7
 8011862:	f000 fbfa 	bl	801205a <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8011866:	b948      	cbnz	r0, 801187c <DisplayUdfParams::callbackFunction(char const*)+0x78>
 8011868:	f89d 2007 	ldrb.w	r2, [sp, #7]
 801186c:	6863      	ldr	r3, [r4, #4]
 801186e:	b112      	cbz	r2, 8011876 <DisplayUdfParams::callbackFunction(char const*)+0x72>
 8011870:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8011874:	e7db      	b.n	801182e <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 8011876:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 801187a:	e7d8      	b.n	801182e <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 801187c:	2500      	movs	r5, #0
 801187e:	4f12      	ldr	r7, [pc, #72]	; (80118c8 <DisplayUdfParams::callbackFunction(char const*)+0xc4>)
 8011880:	4630      	mov	r0, r6
 8011882:	f857 1b04 	ldr.w	r1, [r7], #4
 8011886:	f10d 0207 	add.w	r2, sp, #7
 801188a:	f000 fbe6 	bl	801205a <Sscan::Uint8(char const*, char const*, unsigned char&)>
 801188e:	b980      	cbnz	r0, 80118b2 <DisplayUdfParams::callbackFunction(char const*)+0xae>
 8011890:	2301      	movs	r3, #1
 8011892:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8011896:	40ab      	lsls	r3, r5
 8011898:	1e4e      	subs	r6, r1, #1
 801189a:	2e05      	cmp	r6, #5
 801189c:	6862      	ldr	r2, [r4, #4]
 801189e:	4425      	add	r5, r4
 80118a0:	d802      	bhi.n	80118a8 <DisplayUdfParams::callbackFunction(char const*)+0xa4>
 80118a2:	7229      	strb	r1, [r5, #8]
 80118a4:	4313      	orrs	r3, r2
 80118a6:	e7c2      	b.n	801182e <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 80118a8:	ea22 0203 	bic.w	r2, r2, r3
 80118ac:	7228      	strb	r0, [r5, #8]
 80118ae:	6062      	str	r2, [r4, #4]
 80118b0:	e7be      	b.n	8011830 <DisplayUdfParams::callbackFunction(char const*)+0x2c>
 80118b2:	3501      	adds	r5, #1
 80118b4:	2d14      	cmp	r5, #20
 80118b6:	d1e3      	bne.n	8011880 <DisplayUdfParams::callbackFunction(char const*)+0x7c>
 80118b8:	e7ba      	b.n	8011830 <DisplayUdfParams::callbackFunction(char const*)+0x2c>
 80118ba:	bf00      	nop
 80118bc:	08016be6 	stmdaeq	r1, {r1, r2, r5, r6, r7, r8, r9, fp, sp, lr}
 80118c0:	08016bae 	stmdaeq	r1, {r1, r2, r3, r5, r7, r8, r9, fp, sp, lr}
 80118c4:	08016bbc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r8, r9, fp, sp, lr}
 80118c8:	08016b38 	stmdaeq	r1, {r3, r4, r5, r8, r9, fp, sp, lr}

080118cc <DisplayUdfParams::staticCallbackFunction(void*, char const*)>:
 80118cc:	f7ff bf9a 	b.w	8011804 <DisplayUdfParams::callbackFunction(char const*)>

080118d0 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)>:
 80118d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80118d4:	4604      	mov	r4, r0
 80118d6:	4615      	mov	r5, r2
 80118d8:	461e      	mov	r6, r3
 80118da:	b086      	sub	sp, #24
 80118dc:	3004      	adds	r0, #4
 80118de:	b379      	cbz	r1, 8011940 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x70>
 80118e0:	2222      	movs	r2, #34	; 0x22
 80118e2:	f001 f8f8 	bl	8012ad6 <memmove>
 80118e6:	462a      	mov	r2, r5
 80118e8:	4633      	mov	r3, r6
 80118ea:	493d      	ldr	r1, [pc, #244]	; (80119e0 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x110>)
 80118ec:	a803      	add	r0, sp, #12
 80118ee:	f000 fa01 	bl	8011cf4 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 80118f2:	6863      	ldr	r3, [r4, #4]
 80118f4:	f894 2025 	ldrb.w	r2, [r4, #37]	; 0x25
 80118f8:	493a      	ldr	r1, [pc, #232]	; (80119e4 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x114>)
 80118fa:	f3c3 7340 	ubfx	r3, r3, #29, #1
 80118fe:	a803      	add	r0, sp, #12
 8011900:	f7ff ff1e 	bl	8011740 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 8011904:	6863      	ldr	r3, [r4, #4]
 8011906:	f894 2024 	ldrb.w	r2, [r4, #36]	; 0x24
 801190a:	f3c3 7300 	ubfx	r3, r3, #28, #1
 801190e:	4936      	ldr	r1, [pc, #216]	; (80119e8 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x118>)
 8011910:	a803      	add	r0, sp, #12
 8011912:	f7ff ff15 	bl	8011740 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 8011916:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801191a:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 801191e:	6863      	ldr	r3, [r4, #4]
 8011920:	42aa      	cmp	r2, r5
 8011922:	d226      	bcs.n	8011972 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xa2>
 8011924:	9803      	ldr	r0, [sp, #12]
 8011926:	f013 4380 	ands.w	r3, r3, #1073741824	; 0x40000000
 801192a:	4410      	add	r0, r2
 801192c:	eba5 0502 	sub.w	r5, r5, r2
 8011930:	f89d 2014 	ldrb.w	r2, [sp, #20]
 8011934:	d10b      	bne.n	801194e <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x7e>
 8011936:	b962      	cbnz	r2, 8011952 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x82>
 8011938:	9200      	str	r2, [sp, #0]
 801193a:	4b2c      	ldr	r3, [pc, #176]	; (80119ec <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>)
 801193c:	4a2c      	ldr	r2, [pc, #176]	; (80119f0 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x120>)
 801193e:	e00e      	b.n	801195e <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x8e>
 8011940:	6823      	ldr	r3, [r4, #0]
 8011942:	4601      	mov	r1, r0
 8011944:	681a      	ldr	r2, [r3, #0]
 8011946:	4618      	mov	r0, r3
 8011948:	68d2      	ldr	r2, [r2, #12]
 801194a:	4790      	blx	r2
 801194c:	e7cb      	b.n	80118e6 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x16>
 801194e:	2a00      	cmp	r2, #0
 8011950:	d041      	beq.n	80119d6 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x106>
 8011952:	3b00      	subs	r3, #0
 8011954:	bf18      	it	ne
 8011956:	2301      	movne	r3, #1
 8011958:	4a26      	ldr	r2, [pc, #152]	; (80119f4 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x124>)
 801195a:	9300      	str	r3, [sp, #0]
 801195c:	4b23      	ldr	r3, [pc, #140]	; (80119ec <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>)
 801195e:	4629      	mov	r1, r5
 8011960:	f7f7 fe54 	bl	800960c <snprintf>
 8011964:	4285      	cmp	r5, r0
 8011966:	bfa2      	ittt	ge
 8011968:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 801196c:	181b      	addge	r3, r3, r0
 801196e:	f8ad 3012 	strhge.w	r3, [sp, #18]
 8011972:	2500      	movs	r5, #0
 8011974:	2701      	movs	r7, #1
 8011976:	4e20      	ldr	r6, [pc, #128]	; (80119f8 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x128>)
 8011978:	f104 0808 	add.w	r8, r4, #8
 801197c:	f856 1b04 	ldr.w	r1, [r6], #4
 8011980:	780b      	ldrb	r3, [r1, #0]
 8011982:	b15b      	cbz	r3, 801199c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xcc>
 8011984:	6862      	ldr	r2, [r4, #4]
 8011986:	fa07 f305 	lsl.w	r3, r7, r5
 801198a:	4393      	bics	r3, r2
 801198c:	bf0c      	ite	eq
 801198e:	2301      	moveq	r3, #1
 8011990:	2300      	movne	r3, #0
 8011992:	f818 2005 	ldrb.w	r2, [r8, r5]
 8011996:	a803      	add	r0, sp, #12
 8011998:	f7ff fed2 	bl	8011740 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 801199c:	3501      	adds	r5, #1
 801199e:	2d14      	cmp	r5, #20
 80119a0:	d1ec      	bne.n	801197c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xac>
 80119a2:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80119a6:	b17b      	cbz	r3, 80119c8 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xf8>
 80119a8:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80119ac:	9b03      	ldr	r3, [sp, #12]
 80119ae:	4413      	add	r3, r2
 80119b0:	227d      	movs	r2, #125	; 0x7d
 80119b2:	f803 2c01 	strb.w	r2, [r3, #-1]
 80119b6:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80119ba:	9903      	ldr	r1, [sp, #12]
 80119bc:	54ca      	strb	r2, [r1, r3]
 80119be:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80119c2:	3301      	adds	r3, #1
 80119c4:	f8ad 3012 	strh.w	r3, [sp, #18]
 80119c8:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80119cc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80119ce:	601a      	str	r2, [r3, #0]
 80119d0:	b006      	add	sp, #24
 80119d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80119d6:	2301      	movs	r3, #1
 80119d8:	4a08      	ldr	r2, [pc, #32]	; (80119fc <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x12c>)
 80119da:	9300      	str	r3, [sp, #0]
 80119dc:	4b03      	ldr	r3, [pc, #12]	; (80119ec <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>)
 80119de:	e7be      	b.n	801195e <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x8e>
 80119e0:	08016bda 	stmdaeq	r1, {r1, r3, r4, r6, r7, r8, r9, fp, sp, lr}
 80119e4:	08016be6 	stmdaeq	r1, {r1, r2, r5, r6, r7, r8, r9, fp, sp, lr}
 80119e8:	08016bae 	stmdaeq	r1, {r1, r2, r3, r5, r7, r8, r9, fp, sp, lr}
 80119ec:	08016bbc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r8, r9, fp, sp, lr}
 80119f0:	08014fa2 	stmdaeq	r1, {r1, r5, r7, r8, r9, sl, fp, lr}
 80119f4:	08014f99 	stmdaeq	r1, {r0, r3, r4, r7, r8, r9, sl, fp, lr}
 80119f8:	08016b38 	stmdaeq	r1, {r3, r4, r5, r8, r9, fp, sp, lr}
 80119fc:	08014fa3 	stmdaeq	r1, {r0, r1, r5, r7, r8, r9, sl, fp, lr}

08011a00 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)>:
 8011a00:	b513      	push	{r0, r1, r4, lr}
 8011a02:	6804      	ldr	r4, [r0, #0]
 8011a04:	b914      	cbnz	r4, 8011a0c <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)+0xc>
 8011a06:	601c      	str	r4, [r3, #0]
 8011a08:	b002      	add	sp, #8
 8011a0a:	bd10      	pop	{r4, pc}
 8011a0c:	9300      	str	r3, [sp, #0]
 8011a0e:	4613      	mov	r3, r2
 8011a10:	460a      	mov	r2, r1
 8011a12:	2100      	movs	r1, #0
 8011a14:	f7ff ff5c 	bl	80118d0 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)>
 8011a18:	e7f6      	b.n	8011a08 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)+0x8>

08011a1a <DisplayUdfParams::Set(DisplayUdf*)>:
 8011a1a:	6843      	ldr	r3, [r0, #4]
 8011a1c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011a20:	009a      	lsls	r2, r3, #2
 8011a22:	4604      	mov	r4, r0
 8011a24:	460e      	mov	r6, r1
 8011a26:	d506      	bpl.n	8011a36 <DisplayUdfParams::Set(DisplayUdf*)+0x1c>
 8011a28:	6988      	ldr	r0, [r1, #24]
 8011a2a:	b120      	cbz	r0, 8011a36 <DisplayUdfParams::Set(DisplayUdf*)+0x1c>
 8011a2c:	6803      	ldr	r3, [r0, #0]
 8011a2e:	f894 1025 	ldrb.w	r1, [r4, #37]	; 0x25
 8011a32:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011a34:	4798      	blx	r3
 8011a36:	6863      	ldr	r3, [r4, #4]
 8011a38:	69b0      	ldr	r0, [r6, #24]
 8011a3a:	00db      	lsls	r3, r3, #3
 8011a3c:	bf41      	itttt	mi
 8011a3e:	f64e 2260 	movwmi	r2, #60000	; 0xea60
 8011a42:	f894 3024 	ldrbmi.w	r3, [r4, #36]	; 0x24
 8011a46:	4353      	mulmi	r3, r2
 8011a48:	6173      	strmi	r3, [r6, #20]
 8011a4a:	6861      	ldr	r1, [r4, #4]
 8011a4c:	f3c1 7180 	ubfx	r1, r1, #30, #1
 8011a50:	b110      	cbz	r0, 8011a58 <DisplayUdfParams::Set(DisplayUdf*)+0x3e>
 8011a52:	6803      	ldr	r3, [r0, #0]
 8011a54:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011a56:	4798      	blx	r3
 8011a58:	2500      	movs	r5, #0
 8011a5a:	2701      	movs	r7, #1
 8011a5c:	f104 0808 	add.w	r8, r4, #8
 8011a60:	6862      	ldr	r2, [r4, #4]
 8011a62:	fa07 f305 	lsl.w	r3, r7, r5
 8011a66:	4393      	bics	r3, r2
 8011a68:	d105      	bne.n	8011a76 <DisplayUdfParams::Set(DisplayUdf*)+0x5c>
 8011a6a:	462a      	mov	r2, r5
 8011a6c:	4630      	mov	r0, r6
 8011a6e:	f818 1005 	ldrb.w	r1, [r8, r5]
 8011a72:	f7ff fe4b 	bl	801170c <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8011a76:	3501      	adds	r5, #1
 8011a78:	2d14      	cmp	r5, #20
 8011a7a:	d1f1      	bne.n	8011a60 <DisplayUdfParams::Set(DisplayUdf*)+0x46>
 8011a7c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08011a80 <DisplayUdfParams::Dump()>:
 8011a80:	4770      	bx	lr
	...

08011a84 <DisplayUdf::Show(E131Bridge*)>:
 8011a84:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011a88:	460e      	mov	r6, r1
 8011a8a:	4604      	mov	r4, r0
 8011a8c:	b085      	sub	sp, #20
 8011a8e:	f7ff fd91 	bl	80115b4 <DisplayUdf::Show()>
 8011a92:	f896 250b 	ldrb.w	r2, [r6, #1291]	; 0x50b
 8011a96:	f896 350a 	ldrb.w	r3, [r6, #1290]	; 0x50a
 8011a9a:	4620      	mov	r0, r4
 8011a9c:	4413      	add	r3, r2
 8011a9e:	f894 1041 	ldrb.w	r1, [r4, #65]	; 0x41
 8011aa2:	4a21      	ldr	r2, [pc, #132]	; (8011b28 <DisplayUdf::Show(E131Bridge*)+0xa4>)
 8011aa4:	f7ff fc8f 	bl	80113c6 <Display::Printf(unsigned char, char const*, ...)>
 8011aa8:	2500      	movs	r5, #0
 8011aaa:	4f20      	ldr	r7, [pc, #128]	; (8011b2c <DisplayUdf::Show(E131Bridge*)+0xa8>)
 8011aac:	f8df 8080 	ldr.w	r8, [pc, #128]	; 8011b30 <DisplayUdf::Show(E131Bridge*)+0xac>
 8011ab0:	f8df 9080 	ldr.w	r9, [pc, #128]	; 8011b34 <DisplayUdf::Show(E131Bridge*)+0xb0>
 8011ab4:	2301      	movs	r3, #1
 8011ab6:	4629      	mov	r1, r5
 8011ab8:	4630      	mov	r0, r6
 8011aba:	f10d 020e 	add.w	r2, sp, #14
 8011abe:	f7f8 f999 	bl	8009df4 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 8011ac2:	b1a8      	cbz	r0, 8011af0 <DisplayUdf::Show(E131Bridge*)+0x6c>
 8011ac4:	2344      	movs	r3, #68	; 0x44
 8011ac6:	436b      	muls	r3, r5
 8011ac8:	f206 524c 	addw	r2, r6, #1356	; 0x54c
 8011acc:	58d2      	ldr	r2, [r2, r3]
 8011ace:	f8bd 000e 	ldrh.w	r0, [sp, #14]
 8011ad2:	2a00      	cmp	r2, #0
 8011ad4:	bf0c      	ite	eq
 8011ad6:	463b      	moveq	r3, r7
 8011ad8:	4643      	movne	r3, r8
 8011ada:	e9cd 0300 	strd	r0, r3, [sp]
 8011ade:	f104 0144 	add.w	r1, r4, #68	; 0x44
 8011ae2:	464a      	mov	r2, r9
 8011ae4:	4620      	mov	r0, r4
 8011ae6:	5d49      	ldrb	r1, [r1, r5]
 8011ae8:	f105 0341 	add.w	r3, r5, #65	; 0x41
 8011aec:	f7ff fc6b 	bl	80113c6 <Display::Printf(unsigned char, char const*, ...)>
 8011af0:	3501      	adds	r5, #1
 8011af2:	2d04      	cmp	r5, #4
 8011af4:	d1de      	bne.n	8011ab4 <DisplayUdf::Show(E131Bridge*)+0x30>
 8011af6:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8011af8:	f894 104f 	ldrb.w	r1, [r4, #79]	; 0x4f
 8011afc:	2a02      	cmp	r2, #2
 8011afe:	d001      	beq.n	8011b04 <DisplayUdf::Show(E131Bridge*)+0x80>
 8011b00:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8011b02:	b933      	cbnz	r3, 8011b12 <DisplayUdf::Show(E131Bridge*)+0x8e>
 8011b04:	4620      	mov	r0, r4
 8011b06:	4a0c      	ldr	r2, [pc, #48]	; (8011b38 <DisplayUdf::Show(E131Bridge*)+0xb4>)
 8011b08:	f7ff fc5d 	bl	80113c6 <Display::Printf(unsigned char, char const*, ...)>
 8011b0c:	b005      	add	sp, #20
 8011b0e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011b12:	480a      	ldr	r0, [pc, #40]	; (8011b3c <DisplayUdf::Show(E131Bridge*)+0xb8>)
 8011b14:	9300      	str	r3, [sp, #0]
 8011b16:	4b0a      	ldr	r3, [pc, #40]	; (8011b40 <DisplayUdf::Show(E131Bridge*)+0xbc>)
 8011b18:	2a00      	cmp	r2, #0
 8011b1a:	bf08      	it	eq
 8011b1c:	4603      	moveq	r3, r0
 8011b1e:	4620      	mov	r0, r4
 8011b20:	4a08      	ldr	r2, [pc, #32]	; (8011b44 <DisplayUdf::Show(E131Bridge*)+0xc0>)
 8011b22:	f7ff fc50 	bl	80113c6 <Display::Printf(unsigned char, char const*, ...)>
 8011b26:	e7f1      	b.n	8011b0c <DisplayUdf::Show(E131Bridge*)+0x88>
 8011b28:	08016bf0 	stmdaeq	r1, {r4, r5, r6, r7, r8, r9, fp, sp, lr}
 8011b2c:	08014eac 	stmdaeq	r1, {r2, r3, r5, r7, r9, sl, fp, lr}
 8011b30:	08014eb0 	stmdaeq	r1, {r4, r5, r7, r9, sl, fp, lr}
 8011b34:	08016bf7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, r7, r8, r9, fp, sp, lr}
 8011b38:	08016c06 	stmdaeq	r1, {r1, r2, sl, fp, sp, lr}
 8011b3c:	08014fce 	stmdaeq	r1, {r1, r2, r3, r6, r7, r8, r9, sl, fp, lr}
 8011b40:	08014fc3 	stmdaeq	r1, {r0, r1, r6, r7, r8, r9, sl, fp, lr}
 8011b44:	08016c0d 	stmdaeq	r1, {r0, r2, r3, sl, fp, sp, lr}

08011b48 <NetworkDisplay::ShowEmacStart()>:
 8011b48:	4b01      	ldr	r3, [pc, #4]	; (8011b50 <NetworkDisplay::ShowEmacStart()+0x8>)
 8011b4a:	6818      	ldr	r0, [r3, #0]
 8011b4c:	f7ff bc9c 	b.w	8011488 <DisplayUdf::ShowEmacStart()>
 8011b50:	2000a638 	andcs	sl, r0, r8, lsr r6

08011b54 <NetworkDisplay::ShowIp()>:
 8011b54:	4b01      	ldr	r3, [pc, #4]	; (8011b5c <NetworkDisplay::ShowIp()+0x8>)
 8011b56:	6818      	ldr	r0, [r3, #0]
 8011b58:	f7ff bca6 	b.w	80114a8 <DisplayUdf::ShowIpAddress()>
 8011b5c:	2000a638 	andcs	sl, r0, r8, lsr r6

08011b60 <NetworkDisplay::ShowNetMask()>:
 8011b60:	4b01      	ldr	r3, [pc, #4]	; (8011b68 <NetworkDisplay::ShowNetMask()+0x8>)
 8011b62:	6818      	ldr	r0, [r3, #0]
 8011b64:	f7ff bcd4 	b.w	8011510 <DisplayUdf::ShowNetmask()>
 8011b68:	2000a638 	andcs	sl, r0, r8, lsr r6

08011b6c <NetworkDisplay::ShowHostName()>:
 8011b6c:	4b01      	ldr	r3, [pc, #4]	; (8011b74 <NetworkDisplay::ShowHostName()+0x8>)
 8011b6e:	6818      	ldr	r0, [r3, #0]
 8011b70:	f7ff bd0c 	b.w	801158c <DisplayUdf::ShowHostName()>
 8011b74:	2000a638 	andcs	sl, r0, r8, lsr r6

08011b78 <NetworkDisplay::ShowShutdown()>:
 8011b78:	4b01      	ldr	r3, [pc, #4]	; (8011b80 <NetworkDisplay::ShowShutdown()+0x8>)
 8011b7a:	6818      	ldr	r0, [r3, #0]
 8011b7c:	f7ff bd96 	b.w	80116ac <DisplayUdf::ShowShutdown()>
 8011b80:	2000a638 	andcs	sl, r0, r8, lsr r6

08011b84 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>:
 8011b84:	4b01      	ldr	r3, [pc, #4]	; (8011b8c <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)+0x8>)
 8011b86:	6818      	ldr	r0, [r3, #0]
 8011b88:	f7ff bd58 	b.w	801163c <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)>
 8011b8c:	2000a638 	andcs	sl, r0, r8, lsr r6

08011b90 <properties::convert_json_file(char*, unsigned short, bool)>:
 8011b90:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011b94:	4603      	mov	r3, r0
 8011b96:	7800      	ldrb	r0, [r0, #0]
 8011b98:	287b      	cmp	r0, #123	; 0x7b
 8011b9a:	f040 80a2 	bne.w	8011ce2 <properties::convert_json_file(char*, unsigned short, bool)+0x152>
 8011b9e:	b17a      	cbz	r2, 8011bc0 <properties::convert_json_file(char*, unsigned short, bool)+0x30>
 8011ba0:	2401      	movs	r4, #1
 8011ba2:	461e      	mov	r6, r3
 8011ba4:	4620      	mov	r0, r4
 8011ba6:	2a00      	cmp	r2, #0
 8011ba8:	bf0c      	ite	eq
 8011baa:	f04f 0c0a 	moveq.w	ip, #10
 8011bae:	f04f 0c00 	movne.w	ip, #0
 8011bb2:	273d      	movs	r7, #61	; 0x3d
 8011bb4:	42a1      	cmp	r1, r4
 8011bb6:	d850      	bhi.n	8011c5a <properties::convert_json_file(char*, unsigned short, bool)+0xca>
 8011bb8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011bbc:	463c      	mov	r4, r7
 8011bbe:	e7f2      	b.n	8011ba6 <properties::convert_json_file(char*, unsigned short, bool)+0x16>
 8011bc0:	2023      	movs	r0, #35	; 0x23
 8011bc2:	f803 0b01 	strb.w	r0, [r3], #1
 8011bc6:	461c      	mov	r4, r3
 8011bc8:	2701      	movs	r7, #1
 8011bca:	42b9      	cmp	r1, r7
 8011bcc:	d811      	bhi.n	8011bf2 <properties::convert_json_file(char*, unsigned short, bool)+0x62>
 8011bce:	2001      	movs	r0, #1
 8011bd0:	461e      	mov	r6, r3
 8011bd2:	230a      	movs	r3, #10
 8011bd4:	4625      	mov	r5, r4
 8011bd6:	f806 3b01 	strb.w	r3, [r6], #1
 8011bda:	3001      	adds	r0, #1
 8011bdc:	462b      	mov	r3, r5
 8011bde:	781c      	ldrb	r4, [r3, #0]
 8011be0:	3501      	adds	r5, #1
 8011be2:	2c7b      	cmp	r4, #123	; 0x7b
 8011be4:	d0ea      	beq.n	8011bbc <properties::convert_json_file(char*, unsigned short, bool)+0x2c>
 8011be6:	42b9      	cmp	r1, r7
 8011be8:	f107 0401 	add.w	r4, r7, #1
 8011bec:	d9db      	bls.n	8011ba6 <properties::convert_json_file(char*, unsigned short, bool)+0x16>
 8011bee:	4627      	mov	r7, r4
 8011bf0:	e7f4      	b.n	8011bdc <properties::convert_json_file(char*, unsigned short, bool)+0x4c>
 8011bf2:	f814 0b01 	ldrb.w	r0, [r4], #1
 8011bf6:	2822      	cmp	r0, #34	; 0x22
 8011bf8:	d119      	bne.n	8011c2e <properties::convert_json_file(char*, unsigned short, bool)+0x9e>
 8011bfa:	46a4      	mov	ip, r4
 8011bfc:	461d      	mov	r5, r3
 8011bfe:	2601      	movs	r6, #1
 8011c00:	f89c e000 	ldrb.w	lr, [ip]
 8011c04:	4664      	mov	r4, ip
 8011c06:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 8011c0a:	462b      	mov	r3, r5
 8011c0c:	4630      	mov	r0, r6
 8011c0e:	f10c 0c01 	add.w	ip, ip, #1
 8011c12:	f105 0501 	add.w	r5, r5, #1
 8011c16:	f106 0601 	add.w	r6, r6, #1
 8011c1a:	d0d9      	beq.n	8011bd0 <properties::convert_json_file(char*, unsigned short, bool)+0x40>
 8011c1c:	3701      	adds	r7, #1
 8011c1e:	42b9      	cmp	r1, r7
 8011c20:	4664      	mov	r4, ip
 8011c22:	f805 ec01 	strb.w	lr, [r5, #-1]
 8011c26:	d8eb      	bhi.n	8011c00 <properties::convert_json_file(char*, unsigned short, bool)+0x70>
 8011c28:	4630      	mov	r0, r6
 8011c2a:	462b      	mov	r3, r5
 8011c2c:	e7d0      	b.n	8011bd0 <properties::convert_json_file(char*, unsigned short, bool)+0x40>
 8011c2e:	3701      	adds	r7, #1
 8011c30:	e7cb      	b.n	8011bca <properties::convert_json_file(char*, unsigned short, bool)+0x3a>
 8011c32:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 8011c36:	d110      	bne.n	8011c5a <properties::convert_json_file(char*, unsigned short, bool)+0xca>
 8011c38:	eba0 0803 	sub.w	r8, r0, r3
 8011c3c:	461a      	mov	r2, r3
 8011c3e:	eb08 0003 	add.w	r0, r8, r3
 8011c42:	f813 eb01 	ldrb.w	lr, [r3], #1
 8011c46:	1c65      	adds	r5, r4, #1
 8011c48:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 8011c4c:	d04c      	beq.n	8011ce8 <properties::convert_json_file(char*, unsigned short, bool)+0x158>
 8011c4e:	42a1      	cmp	r1, r4
 8011c50:	d911      	bls.n	8011c76 <properties::convert_json_file(char*, unsigned short, bool)+0xe6>
 8011c52:	462c      	mov	r4, r5
 8011c54:	f806 eb01 	strb.w	lr, [r6], #1
 8011c58:	e7f0      	b.n	8011c3c <properties::convert_json_file(char*, unsigned short, bool)+0xac>
 8011c5a:	42a1      	cmp	r1, r4
 8011c5c:	461d      	mov	r5, r3
 8011c5e:	f893 e000 	ldrb.w	lr, [r3]
 8011c62:	f104 0401 	add.w	r4, r4, #1
 8011c66:	f103 0301 	add.w	r3, r3, #1
 8011c6a:	d8e2      	bhi.n	8011c32 <properties::convert_json_file(char*, unsigned short, bool)+0xa2>
 8011c6c:	462b      	mov	r3, r5
 8011c6e:	e7e3      	b.n	8011c38 <properties::convert_json_file(char*, unsigned short, bool)+0xa8>
 8011c70:	f1be 0f3a 	cmp.w	lr, #58	; 0x3a
 8011c74:	d009      	beq.n	8011c8a <properties::convert_json_file(char*, unsigned short, bool)+0xfa>
 8011c76:	42a9      	cmp	r1, r5
 8011c78:	4614      	mov	r4, r2
 8011c7a:	f892 e000 	ldrb.w	lr, [r2]
 8011c7e:	f105 0501 	add.w	r5, r5, #1
 8011c82:	f102 0201 	add.w	r2, r2, #1
 8011c86:	d8f3      	bhi.n	8011c70 <properties::convert_json_file(char*, unsigned short, bool)+0xe0>
 8011c88:	4622      	mov	r2, r4
 8011c8a:	7814      	ldrb	r4, [r2, #0]
 8011c8c:	4696      	mov	lr, r2
 8011c8e:	2c2f      	cmp	r4, #47	; 0x2f
 8011c90:	462b      	mov	r3, r5
 8011c92:	f102 0201 	add.w	r2, r2, #1
 8011c96:	f105 0501 	add.w	r5, r5, #1
 8011c9a:	d81a      	bhi.n	8011cd2 <properties::convert_json_file(char*, unsigned short, bool)+0x142>
 8011c9c:	4299      	cmp	r1, r3
 8011c9e:	d8f4      	bhi.n	8011c8a <properties::convert_json_file(char*, unsigned short, bool)+0xfa>
 8011ca0:	2c22      	cmp	r4, #34	; 0x22
 8011ca2:	bf08      	it	eq
 8011ca4:	4696      	moveq	lr, r2
 8011ca6:	4673      	mov	r3, lr
 8011ca8:	f813 2b01 	ldrb.w	r2, [r3], #1
 8011cac:	1c6c      	adds	r4, r5, #1
 8011cae:	2a22      	cmp	r2, #34	; 0x22
 8011cb0:	d011      	beq.n	8011cd6 <properties::convert_json_file(char*, unsigned short, bool)+0x146>
 8011cb2:	2a2c      	cmp	r2, #44	; 0x2c
 8011cb4:	d00f      	beq.n	8011cd6 <properties::convert_json_file(char*, unsigned short, bool)+0x146>
 8011cb6:	2a7d      	cmp	r2, #125	; 0x7d
 8011cb8:	d00d      	beq.n	8011cd6 <properties::convert_json_file(char*, unsigned short, bool)+0x146>
 8011cba:	42a9      	cmp	r1, r5
 8011cbc:	d90f      	bls.n	8011cde <properties::convert_json_file(char*, unsigned short, bool)+0x14e>
 8011cbe:	f1a2 0520 	sub.w	r5, r2, #32
 8011cc2:	2d5a      	cmp	r5, #90	; 0x5a
 8011cc4:	d803      	bhi.n	8011cce <properties::convert_json_file(char*, unsigned short, bool)+0x13e>
 8011cc6:	469e      	mov	lr, r3
 8011cc8:	f806 2b01 	strb.w	r2, [r6], #1
 8011ccc:	3001      	adds	r0, #1
 8011cce:	4625      	mov	r5, r4
 8011cd0:	e7e9      	b.n	8011ca6 <properties::convert_json_file(char*, unsigned short, bool)+0x116>
 8011cd2:	461d      	mov	r5, r3
 8011cd4:	e7e7      	b.n	8011ca6 <properties::convert_json_file(char*, unsigned short, bool)+0x116>
 8011cd6:	462c      	mov	r4, r5
 8011cd8:	f806 cb01 	strb.w	ip, [r6], #1
 8011cdc:	3001      	adds	r0, #1
 8011cde:	3401      	adds	r4, #1
 8011ce0:	e768      	b.n	8011bb4 <properties::convert_json_file(char*, unsigned short, bool)+0x24>
 8011ce2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8011ce6:	e767      	b.n	8011bb8 <properties::convert_json_file(char*, unsigned short, bool)+0x28>
 8011ce8:	4625      	mov	r5, r4
 8011cea:	f806 7b01 	strb.w	r7, [r6], #1
 8011cee:	3001      	adds	r0, #1
 8011cf0:	e7c1      	b.n	8011c76 <properties::convert_json_file(char*, unsigned short, bool)+0xe6>
	...

08011cf4 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>:
 8011cf4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8011cf8:	6002      	str	r2, [r0, #0]
 8011cfa:	4614      	mov	r4, r2
 8011cfc:	2200      	movs	r2, #0
 8011cfe:	80c2      	strh	r2, [r0, #6]
 8011d00:	4a1c      	ldr	r2, [pc, #112]	; (8011d74 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x80>)
 8011d02:	4606      	mov	r6, r0
 8011d04:	7812      	ldrb	r2, [r2, #0]
 8011d06:	8083      	strh	r3, [r0, #4]
 8011d08:	f002 0201 	and.w	r2, r2, #1
 8011d0c:	7202      	strb	r2, [r0, #8]
 8011d0e:	4608      	mov	r0, r1
 8011d10:	4605      	mov	r5, r0
 8011d12:	782f      	ldrb	r7, [r5, #0]
 8011d14:	3001      	adds	r0, #1
 8011d16:	2f00      	cmp	r7, #0
 8011d18:	d1fa      	bne.n	8011d10 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x1c>
 8011d1a:	1a6d      	subs	r5, r5, r1
 8011d1c:	b29b      	uxth	r3, r3
 8011d1e:	b1d2      	cbz	r2, 8011d56 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x62>
 8011d20:	1d2f      	adds	r7, r5, #4
 8011d22:	429f      	cmp	r7, r3
 8011d24:	d814      	bhi.n	8011d50 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 8011d26:	f04f 087b 	mov.w	r8, #123	; 0x7b
 8011d2a:	f04f 0922 	mov.w	r9, #34	; 0x22
 8011d2e:	462a      	mov	r2, r5
 8011d30:	f884 8000 	strb.w	r8, [r4]
 8011d34:	f884 9001 	strb.w	r9, [r4, #1]
 8011d38:	1ca0      	adds	r0, r4, #2
 8011d3a:	f000 fecc 	bl	8012ad6 <memmove>
 8011d3e:	223a      	movs	r2, #58	; 0x3a
 8011d40:	1963      	adds	r3, r4, r5
 8011d42:	3505      	adds	r5, #5
 8011d44:	f883 9002 	strb.w	r9, [r3, #2]
 8011d48:	70da      	strb	r2, [r3, #3]
 8011d4a:	80f5      	strh	r5, [r6, #6]
 8011d4c:	f804 8007 	strb.w	r8, [r4, r7]
 8011d50:	4630      	mov	r0, r6
 8011d52:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8011d56:	1caf      	adds	r7, r5, #2
 8011d58:	429f      	cmp	r7, r3
 8011d5a:	d8f9      	bhi.n	8011d50 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 8011d5c:	4620      	mov	r0, r4
 8011d5e:	2323      	movs	r3, #35	; 0x23
 8011d60:	462a      	mov	r2, r5
 8011d62:	f800 3b01 	strb.w	r3, [r0], #1
 8011d66:	f000 feb6 	bl	8012ad6 <memmove>
 8011d6a:	230a      	movs	r3, #10
 8011d6c:	442c      	add	r4, r5
 8011d6e:	7063      	strb	r3, [r4, #1]
 8011d70:	80f7      	strh	r7, [r6, #6]
 8011d72:	e7ed      	b.n	8011d50 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 8011d74:	2000a63c 	andcs	sl, r0, ip, lsr r6

08011d78 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>:
 8011d78:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011d7a:	469c      	mov	ip, r3
 8011d7c:	8885      	ldrh	r5, [r0, #4]
 8011d7e:	88c3      	ldrh	r3, [r0, #6]
 8011d80:	b085      	sub	sp, #20
 8011d82:	42ab      	cmp	r3, r5
 8011d84:	d302      	bcc.n	8011d8c <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x14>
 8011d86:	2000      	movs	r0, #0
 8011d88:	b005      	add	sp, #20
 8011d8a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011d8c:	4604      	mov	r4, r0
 8011d8e:	6800      	ldr	r0, [r0, #0]
 8011d90:	1aed      	subs	r5, r5, r3
 8011d92:	4418      	add	r0, r3
 8011d94:	b2d6      	uxtb	r6, r2
 8011d96:	f3c2 2707 	ubfx	r7, r2, #8, #8
 8011d9a:	f3c2 4307 	ubfx	r3, r2, #16, #8
 8011d9e:	f894 e008 	ldrb.w	lr, [r4, #8]
 8011da2:	0e12      	lsrs	r2, r2, #24
 8011da4:	f1bc 0f00 	cmp.w	ip, #0
 8011da8:	d109      	bne.n	8011dbe <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x46>
 8011daa:	f1be 0f00 	cmp.w	lr, #0
 8011dae:	d109      	bne.n	8011dc4 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x4c>
 8011db0:	e9cd 3202 	strd	r3, r2, [sp, #8]
 8011db4:	e9cd 6700 	strd	r6, r7, [sp]
 8011db8:	460b      	mov	r3, r1
 8011dba:	4a0e      	ldr	r2, [pc, #56]	; (8011df4 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x7c>)
 8011dbc:	e008      	b.n	8011dd0 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x58>
 8011dbe:	f1be 0f00 	cmp.w	lr, #0
 8011dc2:	d00f      	beq.n	8011de4 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x6c>
 8011dc4:	e9cd 3202 	strd	r3, r2, [sp, #8]
 8011dc8:	460b      	mov	r3, r1
 8011dca:	e9cd 6700 	strd	r6, r7, [sp]
 8011dce:	4a0a      	ldr	r2, [pc, #40]	; (8011df8 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x80>)
 8011dd0:	4629      	mov	r1, r5
 8011dd2:	f7f7 fc1b 	bl	800960c <snprintf>
 8011dd6:	4285      	cmp	r5, r0
 8011dd8:	dbd5      	blt.n	8011d86 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0xe>
 8011dda:	88e3      	ldrh	r3, [r4, #6]
 8011ddc:	4403      	add	r3, r0
 8011dde:	80e3      	strh	r3, [r4, #6]
 8011de0:	2001      	movs	r0, #1
 8011de2:	e7d1      	b.n	8011d88 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x10>
 8011de4:	e9cd 3202 	strd	r3, r2, [sp, #8]
 8011de8:	e9cd 6700 	strd	r6, r7, [sp]
 8011dec:	460b      	mov	r3, r1
 8011dee:	4a03      	ldr	r2, [pc, #12]	; (8011dfc <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x84>)
 8011df0:	e7ee      	b.n	8011dd0 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x58>
 8011df2:	bf00      	nop
 8011df4:	08016c2b 	stmdaeq	r1, {r0, r1, r3, r5, sl, fp, sp, lr}
 8011df8:	08016c17 	stmdaeq	r1, {r0, r1, r2, r4, sl, fp, sp, lr}
 8011dfc:	08016c2c 	stmdaeq	r1, {r2, r3, r5, sl, fp, sp, lr}

08011e00 <PropertiesBuilder::AddComment(char const*)>:
 8011e00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011e02:	7a06      	ldrb	r6, [r0, #8]
 8011e04:	b996      	cbnz	r6, 8011e2c <PropertiesBuilder::AddComment(char const*)+0x2c>
 8011e06:	4604      	mov	r4, r0
 8011e08:	88c0      	ldrh	r0, [r0, #6]
 8011e0a:	88a5      	ldrh	r5, [r4, #4]
 8011e0c:	42a8      	cmp	r0, r5
 8011e0e:	d20d      	bcs.n	8011e2c <PropertiesBuilder::AddComment(char const*)+0x2c>
 8011e10:	6827      	ldr	r7, [r4, #0]
 8011e12:	1a2d      	subs	r5, r5, r0
 8011e14:	460b      	mov	r3, r1
 8011e16:	4a06      	ldr	r2, [pc, #24]	; (8011e30 <PropertiesBuilder::AddComment(char const*)+0x30>)
 8011e18:	4629      	mov	r1, r5
 8011e1a:	4438      	add	r0, r7
 8011e1c:	f7f7 fbf6 	bl	800960c <snprintf>
 8011e20:	4285      	cmp	r5, r0
 8011e22:	bfa1      	itttt	ge
 8011e24:	2601      	movge	r6, #1
 8011e26:	88e3      	ldrhge	r3, [r4, #6]
 8011e28:	18c0      	addge	r0, r0, r3
 8011e2a:	80e0      	strhge	r0, [r4, #6]
 8011e2c:	4630      	mov	r0, r6
 8011e2e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011e30:	08016c3c 	stmdaeq	r1, {r2, r3, r4, r5, sl, fp, sp, lr}

08011e34 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>:
 8011e34:	e9c0 1200 	strd	r1, r2, [r0]
 8011e38:	4770      	bx	lr

08011e3a <ReadConfigFile::~ReadConfigFile()>:
 8011e3a:	4770      	bx	lr

08011e3c <ReadConfigFile::Read(char const*, unsigned int)>:
 8011e3c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011e40:	4606      	mov	r6, r0
 8011e42:	460d      	mov	r5, r1
 8011e44:	4614      	mov	r4, r2
 8011e46:	f04f 0800 	mov.w	r8, #0
 8011e4a:	b090      	sub	sp, #64	; 0x40
 8011e4c:	b33c      	cbz	r4, 8011e9e <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 8011e4e:	466b      	mov	r3, sp
 8011e50:	462a      	mov	r2, r5
 8011e52:	4619      	mov	r1, r3
 8011e54:	e007      	b.n	8011e66 <ReadConfigFile::Read(char const*, unsigned int)+0x2a>
 8011e56:	f803 7b01 	strb.w	r7, [r3], #1
 8011e5a:	1a58      	subs	r0, r3, r1
 8011e5c:	283f      	cmp	r0, #63	; 0x3f
 8011e5e:	4615      	mov	r5, r2
 8011e60:	dc1d      	bgt.n	8011e9e <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 8011e62:	3c01      	subs	r4, #1
 8011e64:	d00f      	beq.n	8011e86 <ReadConfigFile::Read(char const*, unsigned int)+0x4a>
 8011e66:	7817      	ldrb	r7, [r2, #0]
 8011e68:	4610      	mov	r0, r2
 8011e6a:	2f0d      	cmp	r7, #13
 8011e6c:	f102 0201 	add.w	r2, r2, #1
 8011e70:	d001      	beq.n	8011e76 <ReadConfigFile::Read(char const*, unsigned int)+0x3a>
 8011e72:	2f0a      	cmp	r7, #10
 8011e74:	d1ef      	bne.n	8011e56 <ReadConfigFile::Read(char const*, unsigned int)+0x1a>
 8011e76:	4605      	mov	r5, r0
 8011e78:	b12c      	cbz	r4, 8011e86 <ReadConfigFile::Read(char const*, unsigned int)+0x4a>
 8011e7a:	f810 2b01 	ldrb.w	r2, [r0], #1
 8011e7e:	2a0d      	cmp	r2, #13
 8011e80:	d00b      	beq.n	8011e9a <ReadConfigFile::Read(char const*, unsigned int)+0x5e>
 8011e82:	2a0a      	cmp	r2, #10
 8011e84:	d009      	beq.n	8011e9a <ReadConfigFile::Read(char const*, unsigned int)+0x5e>
 8011e86:	f89d 2000 	ldrb.w	r2, [sp]
 8011e8a:	2a60      	cmp	r2, #96	; 0x60
 8011e8c:	d9de      	bls.n	8011e4c <ReadConfigFile::Read(char const*, unsigned int)+0x10>
 8011e8e:	f883 8000 	strb.w	r8, [r3]
 8011e92:	e9d6 3000 	ldrd	r3, r0, [r6]
 8011e96:	4798      	blx	r3
 8011e98:	e7d8      	b.n	8011e4c <ReadConfigFile::Read(char const*, unsigned int)+0x10>
 8011e9a:	3c01      	subs	r4, #1
 8011e9c:	e7eb      	b.n	8011e76 <ReadConfigFile::Read(char const*, unsigned int)+0x3a>
 8011e9e:	b010      	add	sp, #64	; 0x40
 8011ea0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08011ea4 <Sscan::Char(char const*, char const*, char*, unsigned int&)>:
 8011ea4:	b570      	push	{r4, r5, r6, lr}
 8011ea6:	4615      	mov	r5, r2
 8011ea8:	461c      	mov	r4, r3
 8011eaa:	f000 f8f3 	bl	8012094 <Sscan::checkName(char const*, char const*)>
 8011eae:	b180      	cbz	r0, 8011ed2 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2e>
 8011eb0:	2100      	movs	r1, #0
 8011eb2:	5c43      	ldrb	r3, [r0, r1]
 8011eb4:	6826      	ldr	r6, [r4, #0]
 8011eb6:	b28a      	uxth	r2, r1
 8011eb8:	b143      	cbz	r3, 8011ecc <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x28>
 8011eba:	42b2      	cmp	r2, r6
 8011ebc:	d303      	bcc.n	8011ec6 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x22>
 8011ebe:	2b0a      	cmp	r3, #10
 8011ec0:	d004      	beq.n	8011ecc <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x28>
 8011ec2:	2002      	movs	r0, #2
 8011ec4:	e004      	b.n	8011ed0 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2c>
 8011ec6:	546b      	strb	r3, [r5, r1]
 8011ec8:	3101      	adds	r1, #1
 8011eca:	e7f2      	b.n	8011eb2 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0xe>
 8011ecc:	2000      	movs	r0, #0
 8011ece:	6022      	str	r2, [r4, #0]
 8011ed0:	bd70      	pop	{r4, r5, r6, pc}
 8011ed2:	2001      	movs	r0, #1
 8011ed4:	e7fc      	b.n	8011ed0 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2c>

08011ed6 <Sscan::Float(char const*, char const*, float&)>:
 8011ed6:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8011eda:	4616      	mov	r6, r2
 8011edc:	f000 f8da 	bl	8012094 <Sscan::checkName(char const*, char const*)>
 8011ee0:	2800      	cmp	r0, #0
 8011ee2:	d059      	beq.n	8011f98 <Sscan::Float(char const*, char const*, float&)+0xc2>
 8011ee4:	4604      	mov	r4, r0
 8011ee6:	7803      	ldrb	r3, [r0, #0]
 8011ee8:	2b2d      	cmp	r3, #45	; 0x2d
 8011eea:	bf08      	it	eq
 8011eec:	3401      	addeq	r4, #1
 8011eee:	7823      	ldrb	r3, [r4, #0]
 8011ef0:	bf0c      	ite	eq
 8011ef2:	f04f 0801 	moveq.w	r8, #1
 8011ef6:	f04f 0800 	movne.w	r8, #0
 8011efa:	f013 0fdf 	tst.w	r3, #223	; 0xdf
 8011efe:	d103      	bne.n	8011f08 <Sscan::Float(char const*, char const*, float&)+0x32>
 8011f00:	2702      	movs	r7, #2
 8011f02:	4638      	mov	r0, r7
 8011f04:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8011f08:	2000      	movs	r0, #0
 8011f0a:	220a      	movs	r2, #10
 8011f0c:	7823      	ldrb	r3, [r4, #0]
 8011f0e:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 8011f12:	2909      	cmp	r1, #9
 8011f14:	d8f4      	bhi.n	8011f00 <Sscan::Float(char const*, char const*, float&)+0x2a>
 8011f16:	fb02 3000 	mla	r0, r2, r0, r3
 8011f1a:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8011f1e:	3830      	subs	r0, #48	; 0x30
 8011f20:	2b2e      	cmp	r3, #46	; 0x2e
 8011f22:	d002      	beq.n	8011f2a <Sscan::Float(char const*, char const*, float&)+0x54>
 8011f24:	f013 0fdf 	tst.w	r3, #223	; 0xdf
 8011f28:	d1f0      	bne.n	8011f0c <Sscan::Float(char const*, char const*, float&)+0x36>
 8011f2a:	f7f5 ff0d 	bl	8007d48 <__aeabi_ui2f>
 8011f2e:	6030      	str	r0, [r6, #0]
 8011f30:	7823      	ldrb	r3, [r4, #0]
 8011f32:	4605      	mov	r5, r0
 8011f34:	2b2e      	cmp	r3, #46	; 0x2e
 8011f36:	d008      	beq.n	8011f4a <Sscan::Float(char const*, char const*, float&)+0x74>
 8011f38:	f1b8 0f00 	cmp.w	r8, #0
 8011f3c:	d101      	bne.n	8011f42 <Sscan::Float(char const*, char const*, float&)+0x6c>
 8011f3e:	2700      	movs	r7, #0
 8011f40:	e7df      	b.n	8011f02 <Sscan::Float(char const*, char const*, float&)+0x2c>
 8011f42:	f100 4500 	add.w	r5, r0, #2147483648	; 0x80000000
 8011f46:	6035      	str	r5, [r6, #0]
 8011f48:	e7f9      	b.n	8011f3e <Sscan::Float(char const*, char const*, float&)+0x68>
 8011f4a:	f04f 0901 	mov.w	r9, #1
 8011f4e:	2000      	movs	r0, #0
 8011f50:	220a      	movs	r2, #10
 8011f52:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8011f56:	f013 07df 	ands.w	r7, r3, #223	; 0xdf
 8011f5a:	d111      	bne.n	8011f80 <Sscan::Float(char const*, char const*, float&)+0xaa>
 8011f5c:	f7f5 fef4 	bl	8007d48 <__aeabi_ui2f>
 8011f60:	4604      	mov	r4, r0
 8011f62:	4648      	mov	r0, r9
 8011f64:	f7f5 fef0 	bl	8007d48 <__aeabi_ui2f>
 8011f68:	4601      	mov	r1, r0
 8011f6a:	4620      	mov	r0, r4
 8011f6c:	f7f6 fa6a 	bl	8008444 <__aeabi_fdiv>
 8011f70:	4629      	mov	r1, r5
 8011f72:	f7f5 fe39 	bl	8007be8 <__addsf3>
 8011f76:	f1b8 0f00 	cmp.w	r8, #0
 8011f7a:	d109      	bne.n	8011f90 <Sscan::Float(char const*, char const*, float&)+0xba>
 8011f7c:	6030      	str	r0, [r6, #0]
 8011f7e:	e7de      	b.n	8011f3e <Sscan::Float(char const*, char const*, float&)+0x68>
 8011f80:	3b30      	subs	r3, #48	; 0x30
 8011f82:	2b09      	cmp	r3, #9
 8011f84:	d8bc      	bhi.n	8011f00 <Sscan::Float(char const*, char const*, float&)+0x2a>
 8011f86:	fb02 3000 	mla	r0, r2, r0, r3
 8011f8a:	fb02 f909 	mul.w	r9, r2, r9
 8011f8e:	e7e0      	b.n	8011f52 <Sscan::Float(char const*, char const*, float&)+0x7c>
 8011f90:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
 8011f94:	6030      	str	r0, [r6, #0]
 8011f96:	e7b4      	b.n	8011f02 <Sscan::Float(char const*, char const*, float&)+0x2c>
 8011f98:	2701      	movs	r7, #1
 8011f9a:	e7b2      	b.n	8011f02 <Sscan::Float(char const*, char const*, float&)+0x2c>

08011f9c <Sscan::IpAddress(char const*, char const*, unsigned int&)>:
 8011f9c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8011f9e:	4615      	mov	r5, r2
 8011fa0:	f000 f878 	bl	8012094 <Sscan::checkName(char const*, char const*)>
 8011fa4:	bb58      	cbnz	r0, 8011ffe <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x62>
 8011fa6:	2001      	movs	r0, #1
 8011fa8:	e027      	b.n	8011ffa <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5e>
 8011faa:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 8011fae:	2b09      	cmp	r3, #9
 8011fb0:	d822      	bhi.n	8011ff8 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 8011fb2:	4603      	mov	r3, r0
 8011fb4:	fb0c 2101 	mla	r1, ip, r1, r2
 8011fb8:	3930      	subs	r1, #48	; 0x30
 8011fba:	4618      	mov	r0, r3
 8011fbc:	f810 2b01 	ldrb.w	r2, [r0], #1
 8011fc0:	2a2e      	cmp	r2, #46	; 0x2e
 8011fc2:	d115      	bne.n	8011ff0 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x54>
 8011fc4:	29ff      	cmp	r1, #255	; 0xff
 8011fc6:	d817      	bhi.n	8011ff8 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 8011fc8:	3401      	adds	r4, #1
 8011fca:	2c03      	cmp	r4, #3
 8011fcc:	f806 1b01 	strb.w	r1, [r6], #1
 8011fd0:	d119      	bne.n	8012006 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x6a>
 8011fd2:	2400      	movs	r4, #0
 8011fd4:	260a      	movs	r6, #10
 8011fd6:	1d1a      	adds	r2, r3, #4
 8011fd8:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8011fdc:	f011 00df 	ands.w	r0, r1, #223	; 0xdf
 8011fe0:	d115      	bne.n	801200e <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x72>
 8011fe2:	2cff      	cmp	r4, #255	; 0xff
 8011fe4:	d808      	bhi.n	8011ff8 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 8011fe6:	f88d 4007 	strb.w	r4, [sp, #7]
 8011fea:	9b01      	ldr	r3, [sp, #4]
 8011fec:	602b      	str	r3, [r5, #0]
 8011fee:	e004      	b.n	8011ffa <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5e>
 8011ff0:	2a00      	cmp	r2, #0
 8011ff2:	d0e7      	beq.n	8011fc4 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 8011ff4:	42b8      	cmp	r0, r7
 8011ff6:	d1d8      	bne.n	8011faa <Sscan::IpAddress(char const*, char const*, unsigned int&)+0xe>
 8011ff8:	2002      	movs	r0, #2
 8011ffa:	b003      	add	sp, #12
 8011ffc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011ffe:	2400      	movs	r4, #0
 8012000:	f04f 0c0a 	mov.w	ip, #10
 8012004:	ae01      	add	r6, sp, #4
 8012006:	4603      	mov	r3, r0
 8012008:	2100      	movs	r1, #0
 801200a:	1d07      	adds	r7, r0, #4
 801200c:	e7d5      	b.n	8011fba <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x1e>
 801200e:	4293      	cmp	r3, r2
 8012010:	d0f2      	beq.n	8011ff8 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 8012012:	3930      	subs	r1, #48	; 0x30
 8012014:	2909      	cmp	r1, #9
 8012016:	d8ef      	bhi.n	8011ff8 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 8012018:	fb06 1404 	mla	r4, r6, r4, r1
 801201c:	e7dc      	b.n	8011fd8 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x3c>

0801201e <Sscan::Uint16(char const*, char const*, unsigned short&)>:
 801201e:	b538      	push	{r3, r4, r5, lr}
 8012020:	4615      	mov	r5, r2
 8012022:	f000 f837 	bl	8012094 <Sscan::checkName(char const*, char const*)>
 8012026:	b1a0      	cbz	r0, 8012052 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x34>
 8012028:	4604      	mov	r4, r0
 801202a:	2100      	movs	r1, #0
 801202c:	220a      	movs	r2, #10
 801202e:	7823      	ldrb	r3, [r4, #0]
 8012030:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
 8012034:	2809      	cmp	r0, #9
 8012036:	d80e      	bhi.n	8012056 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x38>
 8012038:	fb02 3101 	mla	r1, r2, r1, r3
 801203c:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8012040:	3930      	subs	r1, #48	; 0x30
 8012042:	f013 00df 	ands.w	r0, r3, #223	; 0xdf
 8012046:	d1f2      	bne.n	801202e <Sscan::Uint16(char const*, char const*, unsigned short&)+0x10>
 8012048:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
 801204c:	d203      	bcs.n	8012056 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x38>
 801204e:	8029      	strh	r1, [r5, #0]
 8012050:	bd38      	pop	{r3, r4, r5, pc}
 8012052:	2001      	movs	r0, #1
 8012054:	e7fc      	b.n	8012050 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x32>
 8012056:	2002      	movs	r0, #2
 8012058:	e7fa      	b.n	8012050 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x32>

0801205a <Sscan::Uint8(char const*, char const*, unsigned char&)>:
 801205a:	b538      	push	{r3, r4, r5, lr}
 801205c:	4615      	mov	r5, r2
 801205e:	f000 f819 	bl	8012094 <Sscan::checkName(char const*, char const*)>
 8012062:	b198      	cbz	r0, 801208c <Sscan::Uint8(char const*, char const*, unsigned char&)+0x32>
 8012064:	4604      	mov	r4, r0
 8012066:	2100      	movs	r1, #0
 8012068:	220a      	movs	r2, #10
 801206a:	7823      	ldrb	r3, [r4, #0]
 801206c:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
 8012070:	2809      	cmp	r0, #9
 8012072:	d80d      	bhi.n	8012090 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x36>
 8012074:	fb02 3101 	mla	r1, r2, r1, r3
 8012078:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 801207c:	3930      	subs	r1, #48	; 0x30
 801207e:	f013 00df 	ands.w	r0, r3, #223	; 0xdf
 8012082:	d1f2      	bne.n	801206a <Sscan::Uint8(char const*, char const*, unsigned char&)+0x10>
 8012084:	29ff      	cmp	r1, #255	; 0xff
 8012086:	d803      	bhi.n	8012090 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x36>
 8012088:	7029      	strb	r1, [r5, #0]
 801208a:	bd38      	pop	{r3, r4, r5, pc}
 801208c:	2001      	movs	r0, #1
 801208e:	e7fc      	b.n	801208a <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>
 8012090:	2002      	movs	r0, #2
 8012092:	e7fa      	b.n	801208a <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>

08012094 <Sscan::checkName(char const*, char const*)>:
 8012094:	4603      	mov	r3, r0
 8012096:	b510      	push	{r4, lr}
 8012098:	3901      	subs	r1, #1
 801209a:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 801209e:	461c      	mov	r4, r3
 80120a0:	f813 2b01 	ldrb.w	r2, [r3], #1
 80120a4:	b120      	cbz	r0, 80120b0 <Sscan::checkName(char const*, char const*)+0x1c>
 80120a6:	b10a      	cbz	r2, 80120ac <Sscan::checkName(char const*, char const*)+0x18>
 80120a8:	4290      	cmp	r0, r2
 80120aa:	d0f6      	beq.n	801209a <Sscan::checkName(char const*, char const*)+0x6>
 80120ac:	2000      	movs	r0, #0
 80120ae:	e006      	b.n	80120be <Sscan::checkName(char const*, char const*)+0x2a>
 80120b0:	2a3d      	cmp	r2, #61	; 0x3d
 80120b2:	d104      	bne.n	80120be <Sscan::checkName(char const*, char const*)+0x2a>
 80120b4:	7860      	ldrb	r0, [r4, #1]
 80120b6:	f010 00df 	ands.w	r0, r0, #223	; 0xdf
 80120ba:	d000      	beq.n	80120be <Sscan::checkName(char const*, char const*)+0x2a>
 80120bc:	1c60      	adds	r0, r4, #1
 80120be:	bd10      	pop	{r4, pc}

080120c0 <LightSet::GetDmxStartAddress()>:
 80120c0:	2001      	movs	r0, #1
 80120c2:	4770      	bx	lr

080120c4 <LightSet::GetDmxFootprint()>:
 80120c4:	f44f 7000 	mov.w	r0, #512	; 0x200
 80120c8:	4770      	bx	lr

080120ca <LightSet::SetDmxStartAddress(unsigned short)>:
 80120ca:	2000      	movs	r0, #0
 80120cc:	4770      	bx	lr

080120ce <LightSet::GetSlotInfo(unsigned short, lightset::SlotInfo&)>:
 80120ce:	2300      	movs	r3, #0
 80120d0:	2001      	movs	r0, #1
 80120d2:	7093      	strb	r3, [r2, #2]
 80120d4:	8010      	strh	r0, [r2, #0]
 80120d6:	4770      	bx	lr

080120d8 <Display::PrintInfo() [clone .isra.0]>:
 80120d8:	b910      	cbnz	r0, 80120e0 <Display::PrintInfo() [clone .isra.0]+0x8>
 80120da:	4803      	ldr	r0, [pc, #12]	; (80120e8 <Display::PrintInfo() [clone .isra.0]+0x10>)
 80120dc:	f000 bd33 	b.w	8012b46 <puts>
 80120e0:	6803      	ldr	r3, [r0, #0]
 80120e2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80120e4:	4718      	bx	r3
 80120e6:	bf00      	nop
 80120e8:	08016d2f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r8, sl, fp, sp, lr}

080120ec <HAL_I2C::WriteRegister(unsigned char, unsigned short)>:
 80120ec:	b513      	push	{r0, r1, r4, lr}
 80120ee:	4604      	mov	r4, r0
 80120f0:	0a13      	lsrs	r3, r2, #8
 80120f2:	7800      	ldrb	r0, [r0, #0]
 80120f4:	f88d 1004 	strb.w	r1, [sp, #4]
 80120f8:	f88d 3005 	strb.w	r3, [sp, #5]
 80120fc:	f88d 2006 	strb.w	r2, [sp, #6]
 8012100:	f001 fde0 	bl	8013cc4 <gd32_i2c_set_address(unsigned char)>
 8012104:	6860      	ldr	r0, [r4, #4]
 8012106:	f001 fdd5 	bl	8013cb4 <gd32_i2c_set_baudrate(unsigned int)>
 801210a:	2103      	movs	r1, #3
 801210c:	a801      	add	r0, sp, #4
 801210e:	f001 fddf 	bl	8013cd0 <gd32_i2c_write(char const*, unsigned int)>
 8012112:	b002      	add	sp, #8
 8012114:	bd10      	pop	{r4, pc}

08012116 <HAL_I2C::IsConnected_(unsigned char, unsigned int)>:
 8012116:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012118:	460d      	mov	r5, r1
 801211a:	4604      	mov	r4, r0
 801211c:	f001 fdd2 	bl	8013cc4 <gd32_i2c_set_address(unsigned char)>
 8012120:	4628      	mov	r0, r5
 8012122:	f001 fdc7 	bl	8013cb4 <gd32_i2c_set_baudrate(unsigned int)>
 8012126:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 801212a:	2b07      	cmp	r3, #7
 801212c:	d902      	bls.n	8012134 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x1e>
 801212e:	3c50      	subs	r4, #80	; 0x50
 8012130:	2c0f      	cmp	r4, #15
 8012132:	d809      	bhi.n	8012148 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x32>
 8012134:	2101      	movs	r1, #1
 8012136:	f10d 0007 	add.w	r0, sp, #7
 801213a:	f001 fe2f 	bl	8013d9c <gd32_i2c_read(char*, unsigned int)>
 801213e:	fab0 f080 	clz	r0, r0
 8012142:	0940      	lsrs	r0, r0, #5
 8012144:	b003      	add	sp, #12
 8012146:	bd30      	pop	{r4, r5, pc}
 8012148:	2100      	movs	r1, #0
 801214a:	4608      	mov	r0, r1
 801214c:	f001 fdc0 	bl	8013cd0 <gd32_i2c_write(char const*, unsigned int)>
 8012150:	e7f5      	b.n	801213e <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x28>

08012152 <Display::Detect7Segment()>:
 8012152:	b538      	push	{r3, r4, r5, lr}
 8012154:	68c1      	ldr	r1, [r0, #12]
 8012156:	4604      	mov	r4, r0
 8012158:	7a00      	ldrb	r0, [r0, #8]
 801215a:	f7ff ffdc 	bl	8012116 <HAL_I2C::IsConnected_(unsigned char, unsigned int)>
 801215e:	7460      	strb	r0, [r4, #17]
 8012160:	b170      	cbz	r0, 8012180 <Display::Detect7Segment()+0x2e>
 8012162:	2200      	movs	r2, #0
 8012164:	f104 0508 	add.w	r5, r4, #8
 8012168:	4611      	mov	r1, r2
 801216a:	4628      	mov	r0, r5
 801216c:	f7ff ffbe 	bl	80120ec <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 8012170:	7c63      	ldrb	r3, [r4, #17]
 8012172:	b12b      	cbz	r3, 8012180 <Display::Detect7Segment()+0x2e>
 8012174:	f24c 02ff 	movw	r2, #49407	; 0xc0ff
 8012178:	2112      	movs	r1, #18
 801217a:	4628      	mov	r0, r5
 801217c:	f7ff ffb6 	bl	80120ec <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 8012180:	bd38      	pop	{r3, r4, r5, pc}

08012182 <Display::Detect(display::Type)>:
 8012182:	2902      	cmp	r1, #2
 8012184:	b538      	push	{r3, r4, r5, lr}
 8012186:	4604      	mov	r4, r0
 8012188:	d014      	beq.n	80121b4 <Display::Detect(display::Type)+0x32>
 801218a:	2904      	cmp	r1, #4
 801218c:	d01b      	beq.n	80121c6 <Display::Detect(display::Type)+0x44>
 801218e:	69a0      	ldr	r0, [r4, #24]
 8012190:	b168      	cbz	r0, 80121ae <Display::Detect(display::Type)+0x2c>
 8012192:	6803      	ldr	r3, [r0, #0]
 8012194:	689b      	ldr	r3, [r3, #8]
 8012196:	4798      	blx	r3
 8012198:	4603      	mov	r3, r0
 801219a:	69a0      	ldr	r0, [r4, #24]
 801219c:	b9ab      	cbnz	r3, 80121ca <Display::Detect(display::Type)+0x48>
 801219e:	b110      	cbz	r0, 80121a6 <Display::Detect(display::Type)+0x24>
 80121a0:	6803      	ldr	r3, [r0, #0]
 80121a2:	685b      	ldr	r3, [r3, #4]
 80121a4:	4798      	blx	r3
 80121a6:	2300      	movs	r3, #0
 80121a8:	61a3      	str	r3, [r4, #24]
 80121aa:	2304      	movs	r3, #4
 80121ac:	6023      	str	r3, [r4, #0]
 80121ae:	2300      	movs	r3, #0
 80121b0:	6163      	str	r3, [r4, #20]
 80121b2:	e010      	b.n	80121d6 <Display::Detect(display::Type)+0x54>
 80121b4:	2018      	movs	r0, #24
 80121b6:	f000 fbcf 	bl	8012958 <operator new(unsigned int)>
 80121ba:	4605      	mov	r5, r0
 80121bc:	2100      	movs	r1, #0
 80121be:	f000 f89d 	bl	80122fc <Ssd1306::Ssd1306(TOledPanel)>
 80121c2:	61a5      	str	r5, [r4, #24]
 80121c4:	e7e3      	b.n	801218e <Display::Detect(display::Type)+0xc>
 80121c6:	6001      	str	r1, [r0, #0]
 80121c8:	e7e1      	b.n	801218e <Display::Detect(display::Type)+0xc>
 80121ca:	6803      	ldr	r3, [r0, #0]
 80121cc:	68db      	ldr	r3, [r3, #12]
 80121ce:	4798      	blx	r3
 80121d0:	69a3      	ldr	r3, [r4, #24]
 80121d2:	2b00      	cmp	r3, #0
 80121d4:	d0eb      	beq.n	80121ae <Display::Detect(display::Type)+0x2c>
 80121d6:	bd38      	pop	{r3, r4, r5, pc}

080121d8 <Display::Display()>:
 80121d8:	2304      	movs	r3, #4
 80121da:	b510      	push	{r4, lr}
 80121dc:	6003      	str	r3, [r0, #0]
 80121de:	4b0f      	ldr	r3, [pc, #60]	; (801221c <Display::Display()+0x44>)
 80121e0:	4604      	mov	r4, r0
 80121e2:	681b      	ldr	r3, [r3, #0]
 80121e4:	4a0e      	ldr	r2, [pc, #56]	; (8012220 <Display::Display()+0x48>)
 80121e6:	6043      	str	r3, [r0, #4]
 80121e8:	2321      	movs	r3, #33	; 0x21
 80121ea:	7203      	strb	r3, [r0, #8]
 80121ec:	4b0d      	ldr	r3, [pc, #52]	; (8012224 <Display::Display()+0x4c>)
 80121ee:	2102      	movs	r1, #2
 80121f0:	60c3      	str	r3, [r0, #12]
 80121f2:	2300      	movs	r3, #0
 80121f4:	e9c0 2305 	strd	r2, r3, [r0, #20]
 80121f8:	8203      	strh	r3, [r0, #16]
 80121fa:	4b0b      	ldr	r3, [pc, #44]	; (8012228 <Display::Display()+0x50>)
 80121fc:	6018      	str	r0, [r3, #0]
 80121fe:	f7ff ffc0 	bl	8012182 <Display::Detect(display::Type)>
 8012202:	4620      	mov	r0, r4
 8012204:	f7ff ffa5 	bl	8012152 <Display::Detect7Segment()>
 8012208:	69a3      	ldr	r3, [r4, #24]
 801220a:	b10b      	cbz	r3, 8012210 <Display::Display()+0x38>
 801220c:	f7f6 fb10 	bl	8008830 <display::timeout::gpio_init()>
 8012210:	69a0      	ldr	r0, [r4, #24]
 8012212:	f7ff ff61 	bl	80120d8 <Display::PrintInfo() [clone .isra.0]>
 8012216:	4620      	mov	r0, r4
 8012218:	bd10      	pop	{r4, pc}
 801221a:	bf00      	nop
 801221c:	2000a744 	andcs	sl, r0, r4, asr #14
 8012220:	000493e0 	andeq	r9, r4, r0, ror #7
 8012224:	00061a80 	andeq	r1, r6, r0, lsl #21
 8012228:	2000a640 	andcs	sl, r0, r0, asr #12

0801222c <Ssd1306::~Ssd1306()>:
 801222c:	4770      	bx	lr

0801222e <Ssd1306::SetCursor(unsigned int)>:
 801222e:	4770      	bx	lr

08012230 <Ssd1306::PrintInfo()>:
 8012230:	b410      	push	{r4}
 8012232:	4906      	ldr	r1, [pc, #24]	; (801224c <Ssd1306::PrintInfo()+0x1c>)
 8012234:	7c44      	ldrb	r4, [r0, #17]
 8012236:	7903      	ldrb	r3, [r0, #4]
 8012238:	7942      	ldrb	r2, [r0, #5]
 801223a:	4805      	ldr	r0, [pc, #20]	; (8012250 <Ssd1306::PrintInfo()+0x20>)
 801223c:	2c00      	cmp	r4, #0
 801223e:	bf08      	it	eq
 8012240:	4601      	moveq	r1, r0
 8012242:	4804      	ldr	r0, [pc, #16]	; (8012254 <Ssd1306::PrintInfo()+0x24>)
 8012244:	bc10      	pop	{r4}
 8012246:	f7f7 b9b9 	b.w	80095bc <printf>
 801224a:	bf00      	nop
 801224c:	08016d40 	stmdaeq	r1, {r6, r8, sl, fp, sp, lr}
 8012250:	08016d47 	stmdaeq	r1, {r0, r1, r2, r6, r8, sl, fp, sp, lr}
 8012254:	08016d4f 	stmdaeq	r1, {r0, r1, r2, r3, r6, r8, sl, fp, sp, lr}

08012258 <Ssd1306::~Ssd1306()>:
 8012258:	b510      	push	{r4, lr}
 801225a:	4604      	mov	r4, r0
 801225c:	f000 fb78 	bl	8012950 <operator delete(void*)>
 8012260:	4620      	mov	r0, r4
 8012262:	bd10      	pop	{r4, pc}

08012264 <HAL_I2C::Setup()>:
 8012264:	b510      	push	{r4, lr}
 8012266:	4604      	mov	r4, r0
 8012268:	7800      	ldrb	r0, [r0, #0]
 801226a:	f001 fd2b 	bl	8013cc4 <gd32_i2c_set_address(unsigned char)>
 801226e:	6860      	ldr	r0, [r4, #4]
 8012270:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012274:	f001 bd1e 	b.w	8013cb4 <gd32_i2c_set_baudrate(unsigned int)>

08012278 <Ssd1306::PutChar(int)>:
 8012278:	b510      	push	{r4, lr}
 801227a:	f1a1 0420 	sub.w	r4, r1, #32
 801227e:	2c5f      	cmp	r4, #95	; 0x5f
 8012280:	bf88      	it	hi
 8012282:	2400      	movhi	r4, #0
 8012284:	3008      	adds	r0, #8
 8012286:	f7ff ffed 	bl	8012264 <HAL_I2C::Setup()>
 801228a:	4804      	ldr	r0, [pc, #16]	; (801229c <Ssd1306::PutChar(int)+0x24>)
 801228c:	ebc4 04c4 	rsb	r4, r4, r4, lsl #3
 8012290:	4420      	add	r0, r4
 8012292:	2107      	movs	r1, #7
 8012294:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012298:	f001 bd1a 	b.w	8013cd0 <gd32_i2c_write(char const*, unsigned int)>
 801229c:	08016d64 	stmdaeq	r1, {r2, r5, r6, r8, sl, fp, sp, lr}

080122a0 <Ssd1306::PutString(char const*)>:
 80122a0:	b538      	push	{r3, r4, r5, lr}
 80122a2:	4605      	mov	r5, r0
 80122a4:	1e4c      	subs	r4, r1, #1
 80122a6:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 80122aa:	b901      	cbnz	r1, 80122ae <Ssd1306::PutString(char const*)+0xe>
 80122ac:	bd38      	pop	{r3, r4, r5, pc}
 80122ae:	4628      	mov	r0, r5
 80122b0:	f7ff ffe2 	bl	8012278 <Ssd1306::PutChar(int)>
 80122b4:	e7f7      	b.n	80122a6 <Ssd1306::PutString(char const*)+0x6>

080122b6 <Ssd1306::Text(char const*, unsigned int)>:
 80122b6:	b570      	push	{r4, r5, r6, lr}
 80122b8:	7903      	ldrb	r3, [r0, #4]
 80122ba:	4605      	mov	r5, r0
 80122bc:	460c      	mov	r4, r1
 80122be:	4293      	cmp	r3, r2
 80122c0:	bf94      	ite	ls
 80122c2:	18ce      	addls	r6, r1, r3
 80122c4:	188e      	addhi	r6, r1, r2
 80122c6:	42b4      	cmp	r4, r6
 80122c8:	d100      	bne.n	80122cc <Ssd1306::Text(char const*, unsigned int)+0x16>
 80122ca:	bd70      	pop	{r4, r5, r6, pc}
 80122cc:	4628      	mov	r0, r5
 80122ce:	f814 1b01 	ldrb.w	r1, [r4], #1
 80122d2:	f7ff ffd1 	bl	8012278 <Ssd1306::PutChar(int)>
 80122d6:	e7f6      	b.n	80122c6 <Ssd1306::Text(char const*, unsigned int)+0x10>

080122d8 <Ssd1306::InitMembers()>:
 80122d8:	7c03      	ldrb	r3, [r0, #16]
 80122da:	b14b      	cbz	r3, 80122f0 <Ssd1306::InitMembers()+0x18>
 80122dc:	3b01      	subs	r3, #1
 80122de:	2b01      	cmp	r3, #1
 80122e0:	d909      	bls.n	80122f6 <Ssd1306::InitMembers()+0x1e>
 80122e2:	2308      	movs	r3, #8
 80122e4:	2204      	movs	r2, #4
 80122e6:	2115      	movs	r1, #21
 80122e8:	7143      	strb	r3, [r0, #5]
 80122ea:	7101      	strb	r1, [r0, #4]
 80122ec:	6142      	str	r2, [r0, #20]
 80122ee:	4770      	bx	lr
 80122f0:	2308      	movs	r3, #8
 80122f2:	461a      	mov	r2, r3
 80122f4:	e7f7      	b.n	80122e6 <Ssd1306::InitMembers()+0xe>
 80122f6:	2304      	movs	r3, #4
 80122f8:	e7fb      	b.n	80122f2 <Ssd1306::InitMembers()+0x1a>
	...

080122fc <Ssd1306::Ssd1306(TOledPanel)>:
 80122fc:	4a08      	ldr	r2, [pc, #32]	; (8012320 <Ssd1306::Ssd1306(TOledPanel)+0x24>)
 80122fe:	b508      	push	{r3, lr}
 8012300:	6002      	str	r2, [r0, #0]
 8012302:	227f      	movs	r2, #127	; 0x7f
 8012304:	80c2      	strh	r2, [r0, #6]
 8012306:	223c      	movs	r2, #60	; 0x3c
 8012308:	7202      	strb	r2, [r0, #8]
 801230a:	4a06      	ldr	r2, [pc, #24]	; (8012324 <Ssd1306::Ssd1306(TOledPanel)+0x28>)
 801230c:	7401      	strb	r1, [r0, #16]
 801230e:	60c2      	str	r2, [r0, #12]
 8012310:	2200      	movs	r2, #0
 8012312:	7442      	strb	r2, [r0, #17]
 8012314:	4a04      	ldr	r2, [pc, #16]	; (8012328 <Ssd1306::Ssd1306(TOledPanel)+0x2c>)
 8012316:	6010      	str	r0, [r2, #0]
 8012318:	f7ff ffde 	bl	80122d8 <Ssd1306::InitMembers()>
 801231c:	bd08      	pop	{r3, pc}
 801231e:	bf00      	nop
 8012320:	0801703c 	stmdaeq	r1, {r2, r3, r4, r5, ip, sp, lr}
 8012324:	00061a80 	andeq	r1, r6, r0, lsl #21
 8012328:	2000a6cc 	andcs	sl, r0, ip, asr #13

0801232c <Ssd1306::SendCommand(unsigned char)>:
 801232c:	2300      	movs	r3, #0
 801232e:	b507      	push	{r0, r1, r2, lr}
 8012330:	3008      	adds	r0, #8
 8012332:	f88d 3004 	strb.w	r3, [sp, #4]
 8012336:	f88d 1005 	strb.w	r1, [sp, #5]
 801233a:	f7ff ff93 	bl	8012264 <HAL_I2C::Setup()>
 801233e:	2102      	movs	r1, #2
 8012340:	a801      	add	r0, sp, #4
 8012342:	f001 fcc5 	bl	8013cd0 <gd32_i2c_write(char const*, unsigned int)>
 8012346:	b003      	add	sp, #12
 8012348:	f85d fb04 	ldr.w	pc, [sp], #4

0801234c <Ssd1306::SetCursorPos(unsigned char, unsigned char)>:
 801234c:	2914      	cmp	r1, #20
 801234e:	b570      	push	{r4, r5, r6, lr}
 8012350:	4605      	mov	r5, r0
 8012352:	4616      	mov	r6, r2
 8012354:	d81c      	bhi.n	8012390 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 8012356:	7943      	ldrb	r3, [r0, #5]
 8012358:	4293      	cmp	r3, r2
 801235a:	d919      	bls.n	8012390 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 801235c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8012360:	7c43      	ldrb	r3, [r0, #17]
 8012362:	004c      	lsls	r4, r1, #1
 8012364:	b2e4      	uxtb	r4, r4
 8012366:	b10b      	cbz	r3, 801236c <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x20>
 8012368:	3404      	adds	r4, #4
 801236a:	b2e4      	uxtb	r4, r4
 801236c:	4628      	mov	r0, r5
 801236e:	f004 010e 	and.w	r1, r4, #14
 8012372:	f7ff ffdb 	bl	801232c <Ssd1306::SendCommand(unsigned char)>
 8012376:	0921      	lsrs	r1, r4, #4
 8012378:	4628      	mov	r0, r5
 801237a:	f041 0110 	orr.w	r1, r1, #16
 801237e:	f7ff ffd5 	bl	801232c <Ssd1306::SendCommand(unsigned char)>
 8012382:	4628      	mov	r0, r5
 8012384:	f046 01b0 	orr.w	r1, r6, #176	; 0xb0
 8012388:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801238c:	f7ff bfce 	b.w	801232c <Ssd1306::SendCommand(unsigned char)>
 8012390:	bd70      	pop	{r4, r5, r6, pc}

08012392 <Ssd1306::TextLine(unsigned char, char const*, unsigned int)>:
 8012392:	b570      	push	{r4, r5, r6, lr}
 8012394:	4604      	mov	r4, r0
 8012396:	4615      	mov	r5, r2
 8012398:	461e      	mov	r6, r3
 801239a:	b171      	cbz	r1, 80123ba <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x28>
 801239c:	7943      	ldrb	r3, [r0, #5]
 801239e:	428b      	cmp	r3, r1
 80123a0:	d30b      	bcc.n	80123ba <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x28>
 80123a2:	3901      	subs	r1, #1
 80123a4:	b2ca      	uxtb	r2, r1
 80123a6:	2100      	movs	r1, #0
 80123a8:	f7ff ffd0 	bl	801234c <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 80123ac:	4632      	mov	r2, r6
 80123ae:	4629      	mov	r1, r5
 80123b0:	4620      	mov	r0, r4
 80123b2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80123b6:	f7ff bf7e 	b.w	80122b6 <Ssd1306::Text(char const*, unsigned int)>
 80123ba:	bd70      	pop	{r4, r5, r6, pc}

080123bc <Ssd1306::ClearLine(unsigned char)>:
 80123bc:	b538      	push	{r3, r4, r5, lr}
 80123be:	4605      	mov	r5, r0
 80123c0:	b1b9      	cbz	r1, 80123f2 <Ssd1306::ClearLine(unsigned char)+0x36>
 80123c2:	7943      	ldrb	r3, [r0, #5]
 80123c4:	428b      	cmp	r3, r1
 80123c6:	d314      	bcc.n	80123f2 <Ssd1306::ClearLine(unsigned char)+0x36>
 80123c8:	3901      	subs	r1, #1
 80123ca:	b2cc      	uxtb	r4, r1
 80123cc:	4622      	mov	r2, r4
 80123ce:	2100      	movs	r1, #0
 80123d0:	f7ff ffbc 	bl	801234c <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 80123d4:	f105 0008 	add.w	r0, r5, #8
 80123d8:	f7ff ff44 	bl	8012264 <HAL_I2C::Setup()>
 80123dc:	2181      	movs	r1, #129	; 0x81
 80123de:	4805      	ldr	r0, [pc, #20]	; (80123f4 <Ssd1306::ClearLine(unsigned char)+0x38>)
 80123e0:	f001 fc76 	bl	8013cd0 <gd32_i2c_write(char const*, unsigned int)>
 80123e4:	4622      	mov	r2, r4
 80123e6:	4628      	mov	r0, r5
 80123e8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80123ec:	2100      	movs	r1, #0
 80123ee:	f7ff bfad 	b.w	801234c <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 80123f2:	bd38      	pop	{r3, r4, r5, pc}
 80123f4:	2000a644 	andcs	sl, r0, r4, asr #12

080123f8 <Ssd1306::SetSleep(bool)>:
 80123f8:	b111      	cbz	r1, 8012400 <Ssd1306::SetSleep(bool)+0x8>
 80123fa:	21ae      	movs	r1, #174	; 0xae
 80123fc:	f7ff bf96 	b.w	801232c <Ssd1306::SendCommand(unsigned char)>
 8012400:	21af      	movs	r1, #175	; 0xaf
 8012402:	e7fb      	b.n	80123fc <Ssd1306::SetSleep(bool)+0x4>

08012404 <Ssd1306::SetContrast(unsigned char)>:
 8012404:	b538      	push	{r3, r4, r5, lr}
 8012406:	4604      	mov	r4, r0
 8012408:	460d      	mov	r5, r1
 801240a:	7181      	strb	r1, [r0, #6]
 801240c:	2181      	movs	r1, #129	; 0x81
 801240e:	f7ff ff8d 	bl	801232c <Ssd1306::SendCommand(unsigned char)>
 8012412:	4629      	mov	r1, r5
 8012414:	4620      	mov	r0, r4
 8012416:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801241a:	f7ff bf87 	b.w	801232c <Ssd1306::SendCommand(unsigned char)>

0801241e <Ssd1306::SetFlipVertically(bool)>:
 801241e:	b510      	push	{r4, lr}
 8012420:	4604      	mov	r4, r0
 8012422:	71c1      	strb	r1, [r0, #7]
 8012424:	b141      	cbz	r1, 8012438 <Ssd1306::SetFlipVertically(bool)+0x1a>
 8012426:	21c0      	movs	r1, #192	; 0xc0
 8012428:	f7ff ff80 	bl	801232c <Ssd1306::SendCommand(unsigned char)>
 801242c:	21a0      	movs	r1, #160	; 0xa0
 801242e:	4620      	mov	r0, r4
 8012430:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012434:	f7ff bf7a 	b.w	801232c <Ssd1306::SendCommand(unsigned char)>
 8012438:	21c8      	movs	r1, #200	; 0xc8
 801243a:	f7ff ff77 	bl	801232c <Ssd1306::SendCommand(unsigned char)>
 801243e:	21a1      	movs	r1, #161	; 0xa1
 8012440:	e7f5      	b.n	801242e <Ssd1306::SetFlipVertically(bool)+0x10>
	...

08012444 <Ssd1306::CheckSH1106()>:
 8012444:	b570      	push	{r4, r5, r6, lr}
 8012446:	4604      	mov	r4, r0
 8012448:	b086      	sub	sp, #24
 801244a:	2100      	movs	r1, #0
 801244c:	f7ff ff6e 	bl	801232c <Ssd1306::SendCommand(unsigned char)>
 8012450:	2190      	movs	r1, #144	; 0x90
 8012452:	4620      	mov	r0, r4
 8012454:	f7ff ff6a 	bl	801232c <Ssd1306::SendCommand(unsigned char)>
 8012458:	21b0      	movs	r1, #176	; 0xb0
 801245a:	4620      	mov	r0, r4
 801245c:	f7ff ff66 	bl	801232c <Ssd1306::SendCommand(unsigned char)>
 8012460:	4b22      	ldr	r3, [pc, #136]	; (80124ec <Ssd1306::CheckSH1106()+0xa8>)
 8012462:	f104 0608 	add.w	r6, r4, #8
 8012466:	6818      	ldr	r0, [r3, #0]
 8012468:	791b      	ldrb	r3, [r3, #4]
 801246a:	ad02      	add	r5, sp, #8
 801246c:	9002      	str	r0, [sp, #8]
 801246e:	4630      	mov	r0, r6
 8012470:	712b      	strb	r3, [r5, #4]
 8012472:	f7ff fef7 	bl	8012264 <HAL_I2C::Setup()>
 8012476:	2105      	movs	r1, #5
 8012478:	4628      	mov	r0, r5
 801247a:	f001 fc29 	bl	8013cd0 <gd32_i2c_write(char const*, unsigned int)>
 801247e:	2100      	movs	r1, #0
 8012480:	4620      	mov	r0, r4
 8012482:	f7ff ff53 	bl	801232c <Ssd1306::SendCommand(unsigned char)>
 8012486:	2190      	movs	r1, #144	; 0x90
 8012488:	4620      	mov	r0, r4
 801248a:	f7ff ff4f 	bl	801232c <Ssd1306::SendCommand(unsigned char)>
 801248e:	21b0      	movs	r1, #176	; 0xb0
 8012490:	4620      	mov	r0, r4
 8012492:	f7ff ff4b 	bl	801232c <Ssd1306::SendCommand(unsigned char)>
 8012496:	2300      	movs	r3, #0
 8012498:	9304      	str	r3, [sp, #16]
 801249a:	f88d 3014 	strb.w	r3, [sp, #20]
 801249e:	2340      	movs	r3, #64	; 0x40
 80124a0:	4630      	mov	r0, r6
 80124a2:	f88d 3007 	strb.w	r3, [sp, #7]
 80124a6:	f7ff fedd 	bl	8012264 <HAL_I2C::Setup()>
 80124aa:	2101      	movs	r1, #1
 80124ac:	f10d 0007 	add.w	r0, sp, #7
 80124b0:	f001 fc0e 	bl	8013cd0 <gd32_i2c_write(char const*, unsigned int)>
 80124b4:	4630      	mov	r0, r6
 80124b6:	f7ff fed5 	bl	8012264 <HAL_I2C::Setup()>
 80124ba:	2105      	movs	r1, #5
 80124bc:	a804      	add	r0, sp, #16
 80124be:	f001 fc6d 	bl	8013d9c <gd32_i2c_read(char*, unsigned int)>
 80124c2:	2201      	movs	r2, #1
 80124c4:	5cab      	ldrb	r3, [r5, r2]
 80124c6:	a904      	add	r1, sp, #16
 80124c8:	3201      	adds	r2, #1
 80124ca:	4411      	add	r1, r2
 80124cc:	f811 1c01 	ldrb.w	r1, [r1, #-1]
 80124d0:	428b      	cmp	r3, r1
 80124d2:	d006      	beq.n	80124e2 <Ssd1306::CheckSH1106()+0x9e>
 80124d4:	1a5b      	subs	r3, r3, r1
 80124d6:	fab3 f383 	clz	r3, r3
 80124da:	095b      	lsrs	r3, r3, #5
 80124dc:	7463      	strb	r3, [r4, #17]
 80124de:	b006      	add	sp, #24
 80124e0:	bd70      	pop	{r4, r5, r6, pc}
 80124e2:	2a05      	cmp	r2, #5
 80124e4:	d1ee      	bne.n	80124c4 <Ssd1306::CheckSH1106()+0x80>
 80124e6:	2300      	movs	r3, #0
 80124e8:	e7f5      	b.n	80124d6 <Ssd1306::CheckSH1106()+0x92>
 80124ea:	bf00      	nop
 80124ec:	08016d5b 	stmdaeq	r1, {r0, r1, r3, r4, r6, r8, sl, fp, sp, lr}

080124f0 <Ssd1306::Cls()>:
 80124f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80124f4:	4604      	mov	r4, r0
 80124f6:	2600      	movs	r6, #0
 80124f8:	7c45      	ldrb	r5, [r0, #17]
 80124fa:	00ad      	lsls	r5, r5, #2
 80124fc:	b2ed      	uxtb	r5, r5
 80124fe:	f1a5 077f 	sub.w	r7, r5, #127	; 0x7f
 8012502:	f045 0810 	orr.w	r8, r5, #16
 8012506:	b2ff      	uxtb	r7, r7
 8012508:	6963      	ldr	r3, [r4, #20]
 801250a:	4629      	mov	r1, r5
 801250c:	42b3      	cmp	r3, r6
 801250e:	4620      	mov	r0, r4
 8012510:	d80b      	bhi.n	801252a <Ssd1306::Cls()+0x3a>
 8012512:	f7ff ff0b 	bl	801232c <Ssd1306::SendCommand(unsigned char)>
 8012516:	4641      	mov	r1, r8
 8012518:	4620      	mov	r0, r4
 801251a:	f7ff ff07 	bl	801232c <Ssd1306::SendCommand(unsigned char)>
 801251e:	4620      	mov	r0, r4
 8012520:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8012524:	21b0      	movs	r1, #176	; 0xb0
 8012526:	f7ff bf01 	b.w	801232c <Ssd1306::SendCommand(unsigned char)>
 801252a:	f7ff feff 	bl	801232c <Ssd1306::SendCommand(unsigned char)>
 801252e:	4641      	mov	r1, r8
 8012530:	4620      	mov	r0, r4
 8012532:	f7ff fefb 	bl	801232c <Ssd1306::SendCommand(unsigned char)>
 8012536:	f066 014f 	orn	r1, r6, #79	; 0x4f
 801253a:	4620      	mov	r0, r4
 801253c:	b2c9      	uxtb	r1, r1
 801253e:	f7ff fef5 	bl	801232c <Ssd1306::SendCommand(unsigned char)>
 8012542:	7c23      	ldrb	r3, [r4, #16]
 8012544:	b123      	cbz	r3, 8012550 <Ssd1306::Cls()+0x60>
 8012546:	3b01      	subs	r3, #1
 8012548:	2b01      	cmp	r3, #1
 801254a:	d901      	bls.n	8012550 <Ssd1306::Cls()+0x60>
 801254c:	3601      	adds	r6, #1
 801254e:	e7db      	b.n	8012508 <Ssd1306::Cls()+0x18>
 8012550:	f104 0008 	add.w	r0, r4, #8
 8012554:	f7ff fe86 	bl	8012264 <HAL_I2C::Setup()>
 8012558:	4639      	mov	r1, r7
 801255a:	4802      	ldr	r0, [pc, #8]	; (8012564 <Ssd1306::Cls()+0x74>)
 801255c:	f001 fbb8 	bl	8013cd0 <gd32_i2c_write(char const*, unsigned int)>
 8012560:	e7f4      	b.n	801254c <Ssd1306::Cls()+0x5c>
 8012562:	bf00      	nop
 8012564:	2000a644 	andcs	sl, r0, r4, asr #12

08012568 <Ssd1306::Start()>:
 8012568:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801256a:	7a04      	ldrb	r4, [r0, #8]
 801256c:	68c6      	ldr	r6, [r0, #12]
 801256e:	4605      	mov	r5, r0
 8012570:	4620      	mov	r0, r4
 8012572:	f001 fba7 	bl	8013cc4 <gd32_i2c_set_address(unsigned char)>
 8012576:	4630      	mov	r0, r6
 8012578:	f001 fb9c 	bl	8013cb4 <gd32_i2c_set_baudrate(unsigned int)>
 801257c:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8012580:	2b07      	cmp	r3, #7
 8012582:	d902      	bls.n	801258a <Ssd1306::Start()+0x22>
 8012584:	3c50      	subs	r4, #80	; 0x50
 8012586:	2c0f      	cmp	r4, #15
 8012588:	d80f      	bhi.n	80125aa <Ssd1306::Start()+0x42>
 801258a:	2101      	movs	r1, #1
 801258c:	f10d 0007 	add.w	r0, sp, #7
 8012590:	f001 fc04 	bl	8013d9c <gd32_i2c_read(char*, unsigned int)>
 8012594:	fab0 f480 	clz	r4, r0
 8012598:	0964      	lsrs	r4, r4, #5
 801259a:	b35c      	cbz	r4, 80125f4 <Ssd1306::Start()+0x8c>
 801259c:	7c2e      	ldrb	r6, [r5, #16]
 801259e:	b14e      	cbz	r6, 80125b4 <Ssd1306::Start()+0x4c>
 80125a0:	3e01      	subs	r6, #1
 80125a2:	2e01      	cmp	r6, #1
 80125a4:	d929      	bls.n	80125fa <Ssd1306::Start()+0x92>
 80125a6:	2400      	movs	r4, #0
 80125a8:	e024      	b.n	80125f4 <Ssd1306::Start()+0x8c>
 80125aa:	2100      	movs	r1, #0
 80125ac:	4608      	mov	r0, r1
 80125ae:	f001 fb8f 	bl	8013cd0 <gd32_i2c_write(char const*, unsigned int)>
 80125b2:	e7ef      	b.n	8012594 <Ssd1306::Start()+0x2c>
 80125b4:	4f16      	ldr	r7, [pc, #88]	; (8012610 <Ssd1306::Start()+0xa8>)
 80125b6:	4628      	mov	r0, r5
 80125b8:	f817 1b01 	ldrb.w	r1, [r7], #1
 80125bc:	3601      	adds	r6, #1
 80125be:	f7ff feb5 	bl	801232c <Ssd1306::SendCommand(unsigned char)>
 80125c2:	2e18      	cmp	r6, #24
 80125c4:	d1f7      	bne.n	80125b6 <Ssd1306::Start()+0x4e>
 80125c6:	2300      	movs	r3, #0
 80125c8:	4a12      	ldr	r2, [pc, #72]	; (8012614 <Ssd1306::Start()+0xac>)
 80125ca:	4618      	mov	r0, r3
 80125cc:	4611      	mov	r1, r2
 80125ce:	3301      	adds	r3, #1
 80125d0:	2b86      	cmp	r3, #134	; 0x86
 80125d2:	f802 0b01 	strb.w	r0, [r2], #1
 80125d6:	d1fa      	bne.n	80125ce <Ssd1306::Start()+0x66>
 80125d8:	2340      	movs	r3, #64	; 0x40
 80125da:	4628      	mov	r0, r5
 80125dc:	700b      	strb	r3, [r1, #0]
 80125de:	f7ff ff31 	bl	8012444 <Ssd1306::CheckSH1106()>
 80125e2:	4628      	mov	r0, r5
 80125e4:	f7ff ff84 	bl	80124f0 <Ssd1306::Cls()>
 80125e8:	21af      	movs	r1, #175	; 0xaf
 80125ea:	4628      	mov	r0, r5
 80125ec:	f7ff fe9e 	bl	801232c <Ssd1306::SendCommand(unsigned char)>
 80125f0:	2301      	movs	r3, #1
 80125f2:	71eb      	strb	r3, [r5, #7]
 80125f4:	4620      	mov	r0, r4
 80125f6:	b003      	add	sp, #12
 80125f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80125fa:	2600      	movs	r6, #0
 80125fc:	4f06      	ldr	r7, [pc, #24]	; (8012618 <Ssd1306::Start()+0xb0>)
 80125fe:	4628      	mov	r0, r5
 8012600:	f817 1b01 	ldrb.w	r1, [r7], #1
 8012604:	3601      	adds	r6, #1
 8012606:	f7ff fe91 	bl	801232c <Ssd1306::SendCommand(unsigned char)>
 801260a:	2e18      	cmp	r6, #24
 801260c:	d1f7      	bne.n	80125fe <Ssd1306::Start()+0x96>
 801260e:	e7da      	b.n	80125c6 <Ssd1306::Start()+0x5e>
 8012610:	0801701c 	stmdaeq	r1, {r2, r3, r4, ip, sp, lr}
 8012614:	2000a644 	andcs	sl, r0, r4, asr #12
 8012618:	08017004 	stmdaeq	r1, {r2, ip, sp, lr}

0801261c <console_putc>:
 801261c:	f000 bb96 	b.w	8012d4c <uart0_putc>

08012620 <console_puts>:
 8012620:	f000 bbb4 	b.w	8012d8c <uart0_puts>

08012624 <console_set_fg_color>:
 8012624:	2807      	cmp	r0, #7
 8012626:	d810      	bhi.n	801264a <console_set_fg_color+0x26>
 8012628:	e8df f000 	tbb	[pc, r0]
 801262c:	0b090704 	bleq	8254244 <__exidx_end+0x23d0d4>
 8012630:	0d0f0f0f 	stceq	15, cr0, [pc, #-60]	; 80125fc <Ssd1306::Start()+0x94>
 8012634:	4806      	ldr	r0, [pc, #24]	; (8012650 <console_set_fg_color+0x2c>)
 8012636:	f000 bba9 	b.w	8012d8c <uart0_puts>
 801263a:	4806      	ldr	r0, [pc, #24]	; (8012654 <console_set_fg_color+0x30>)
 801263c:	e7fb      	b.n	8012636 <console_set_fg_color+0x12>
 801263e:	4806      	ldr	r0, [pc, #24]	; (8012658 <console_set_fg_color+0x34>)
 8012640:	e7f9      	b.n	8012636 <console_set_fg_color+0x12>
 8012642:	4806      	ldr	r0, [pc, #24]	; (801265c <console_set_fg_color+0x38>)
 8012644:	e7f7      	b.n	8012636 <console_set_fg_color+0x12>
 8012646:	4806      	ldr	r0, [pc, #24]	; (8012660 <console_set_fg_color+0x3c>)
 8012648:	e7f5      	b.n	8012636 <console_set_fg_color+0x12>
 801264a:	4806      	ldr	r0, [pc, #24]	; (8012664 <console_set_fg_color+0x40>)
 801264c:	e7f3      	b.n	8012636 <console_set_fg_color+0x12>
 801264e:	bf00      	nop
 8012650:	0801707a 	stmdaeq	r1, {r1, r3, r4, r5, r6, ip, sp, lr}
 8012654:	08017080 	stmdaeq	r1, {r7, ip, sp, lr}
 8012658:	08017086 	stmdaeq	r1, {r1, r2, r7, ip, sp, lr}
 801265c:	0801708c 	stmdaeq	r1, {r2, r3, r7, ip, sp, lr}
 8012660:	08014d38 	stmdaeq	r1, {r3, r4, r5, r8, sl, fp, lr}
 8012664:	08017092 	stmdaeq	r1, {r1, r4, r7, ip, sp, lr}

08012668 <console_error>:
 8012668:	b510      	push	{r4, lr}
 801266a:	4604      	mov	r4, r0
 801266c:	4805      	ldr	r0, [pc, #20]	; (8012684 <console_error+0x1c>)
 801266e:	f000 fb8d 	bl	8012d8c <uart0_puts>
 8012672:	4620      	mov	r0, r4
 8012674:	f000 fb8a 	bl	8012d8c <uart0_puts>
 8012678:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801267c:	4802      	ldr	r0, [pc, #8]	; (8012688 <console_error+0x20>)
 801267e:	f000 bb85 	b.w	8012d8c <uart0_puts>
 8012682:	bf00      	nop
 8012684:	08017080 	stmdaeq	r1, {r7, ip, sp, lr}
 8012688:	08014d38 	stmdaeq	r1, {r3, r4, r5, r8, sl, fp, lr}

0801268c <console_status>:
 801268c:	b510      	push	{r4, lr}
 801268e:	460c      	mov	r4, r1
 8012690:	b280      	uxth	r0, r0
 8012692:	f7ff ffc7 	bl	8012624 <console_set_fg_color>
 8012696:	4807      	ldr	r0, [pc, #28]	; (80126b4 <console_status+0x28>)
 8012698:	f000 fb78 	bl	8012d8c <uart0_puts>
 801269c:	4620      	mov	r0, r4
 801269e:	f000 fb75 	bl	8012d8c <uart0_puts>
 80126a2:	200a      	movs	r0, #10
 80126a4:	f000 fb52 	bl	8012d4c <uart0_putc>
 80126a8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80126ac:	4802      	ldr	r0, [pc, #8]	; (80126b8 <console_status+0x2c>)
 80126ae:	f000 bb6d 	b.w	8012d8c <uart0_puts>
 80126b2:	bf00      	nop
 80126b4:	08017074 	stmdaeq	r1, {r2, r4, r5, r6, ip, sp, lr}
 80126b8:	08014d38 	stmdaeq	r1, {r3, r4, r5, r8, sl, fp, lr}

080126bc <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>:
 80126bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80126c0:	4617      	mov	r7, r2
 80126c2:	461e      	mov	r6, r3
 80126c4:	4d14      	ldr	r5, [pc, #80]	; (8012718 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x5c>)
 80126c6:	4b15      	ldr	r3, [pc, #84]	; (801271c <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x60>)
 80126c8:	b086      	sub	sp, #24
 80126ca:	6018      	str	r0, [r3, #0]
 80126cc:	4604      	mov	r4, r0
 80126ce:	f105 0803 	add.w	r8, r5, #3
 80126d2:	2203      	movs	r2, #3
 80126d4:	4628      	mov	r0, r5
 80126d6:	f000 f9fe 	bl	8012ad6 <memmove>
 80126da:	4639      	mov	r1, r7
 80126dc:	220b      	movs	r2, #11
 80126de:	4640      	mov	r0, r8
 80126e0:	f000 f9f9 	bl	8012ad6 <memmove>
 80126e4:	f105 030e 	add.w	r3, r5, #14
 80126e8:	4631      	mov	r1, r6
 80126ea:	2208      	movs	r2, #8
 80126ec:	4618      	mov	r0, r3
 80126ee:	f000 f9f2 	bl	8012ad6 <memmove>
 80126f2:	2308      	movs	r3, #8
 80126f4:	e9cd 8303 	strd	r8, r3, [sp, #12]
 80126f8:	230b      	movs	r3, #11
 80126fa:	9302      	str	r3, [sp, #8]
 80126fc:	4b08      	ldr	r3, [pc, #32]	; (8012720 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x64>)
 80126fe:	9005      	str	r0, [sp, #20]
 8012700:	e9cd 5300 	strd	r5, r3, [sp]
 8012704:	213f      	movs	r1, #63	; 0x3f
 8012706:	2303      	movs	r3, #3
 8012708:	4a06      	ldr	r2, [pc, #24]	; (8012724 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x68>)
 801270a:	4807      	ldr	r0, [pc, #28]	; (8012728 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x6c>)
 801270c:	f7f6 ff7e 	bl	800960c <snprintf>
 8012710:	4620      	mov	r0, r4
 8012712:	b006      	add	sp, #24
 8012714:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012718:	2000a6d0 	ldrdcs	sl, [r0], -r0
 801271c:	2000a728 	andcs	sl, r0, r8, lsr #14
 8012720:	08014e75 	stmdaeq	r1, {r0, r2, r4, r5, r6, r9, sl, fp, lr}
 8012724:	08017098 	stmdaeq	r1, {r3, r4, r7, ip, sp, lr}
 8012728:	2000a6e6 	andcs	sl, r0, r6, ror #13

0801272c <FirmwareVersion::Print(char const*)>:
 801272c:	b510      	push	{r4, lr}
 801272e:	460c      	mov	r4, r1
 8012730:	4804      	ldr	r0, [pc, #16]	; (8012744 <FirmwareVersion::Print(char const*)+0x18>)
 8012732:	f000 fa08 	bl	8012b46 <puts>
 8012736:	b124      	cbz	r4, 8012742 <FirmwareVersion::Print(char const*)+0x16>
 8012738:	4620      	mov	r0, r4
 801273a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801273e:	f000 ba02 	b.w	8012b46 <puts>
 8012742:	bd10      	pop	{r4, pc}
 8012744:	2000a6e6 	andcs	sl, r0, r6, ror #13

08012748 <LedBlink::LedBlink()>:
 8012748:	b538      	push	{r3, r4, r5, lr}
 801274a:	2205      	movs	r2, #5
 801274c:	2300      	movs	r3, #0
 801274e:	e9c0 3200 	strd	r3, r2, [r0]
 8012752:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 8012756:	6083      	str	r3, [r0, #8]
 8012758:	e9c0 2303 	strd	r2, r3, [r0, #12]
 801275c:	6143      	str	r3, [r0, #20]
 801275e:	4b09      	ldr	r3, [pc, #36]	; (8012784 <LedBlink::LedBlink()+0x3c>)
 8012760:	4d09      	ldr	r5, [pc, #36]	; (8012788 <LedBlink::LedBlink()+0x40>)
 8012762:	4604      	mov	r4, r0
 8012764:	6018      	str	r0, [r3, #0]
 8012766:	f240 6004 	movw	r0, #1540	; 0x604
 801276a:	f000 fd7b 	bl	8013264 <rcu_periph_clock_enable>
 801276e:	4628      	mov	r0, r5
 8012770:	2301      	movs	r3, #1
 8012772:	2203      	movs	r2, #3
 8012774:	2110      	movs	r1, #16
 8012776:	f000 fcdd 	bl	8013134 <gpio_init>
 801277a:	2301      	movs	r3, #1
 801277c:	4620      	mov	r0, r4
 801277e:	616b      	str	r3, [r5, #20]
 8012780:	bd38      	pop	{r3, r4, r5, pc}
 8012782:	bf00      	nop
 8012784:	2000a72c 	andcs	sl, r0, ip, lsr #14
 8012788:	40011000 	andmi	r1, r1, r0

0801278c <LedBlink::SetMode(ledblink::Mode)>:
 801278c:	6843      	ldr	r3, [r0, #4]
 801278e:	428b      	cmp	r3, r1
 8012790:	d02f      	beq.n	80127f2 <LedBlink::SetMode(ledblink::Mode)+0x66>
 8012792:	6041      	str	r1, [r0, #4]
 8012794:	2904      	cmp	r1, #4
 8012796:	d822      	bhi.n	80127de <LedBlink::SetMode(ledblink::Mode)+0x52>
 8012798:	e8df f001 	tbb	[pc, r1]
 801279c:	18120321 	ldmdane	r2, {r0, r5, r8, r9}
 80127a0:	23ff001d 	mvnscs	r0, #29
 80127a4:	6003      	str	r3, [r0, #0]
 80127a6:	2300      	movs	r3, #0
 80127a8:	2201      	movs	r2, #1
 80127aa:	60c3      	str	r3, [r0, #12]
 80127ac:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80127b0:	f503 3388 	add.w	r3, r3, #69632	; 0x11000
 80127b4:	611a      	str	r2, [r3, #16]
 80127b6:	6880      	ldr	r0, [r0, #8]
 80127b8:	b1d8      	cbz	r0, 80127f2 <LedBlink::SetMode(ledblink::Mode)+0x66>
 80127ba:	6803      	ldr	r3, [r0, #0]
 80127bc:	689b      	ldr	r3, [r3, #8]
 80127be:	4718      	bx	r3
 80127c0:	2301      	movs	r3, #1
 80127c2:	6003      	str	r3, [r0, #0]
 80127c4:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80127c8:	60c3      	str	r3, [r0, #12]
 80127ca:	e7f4      	b.n	80127b6 <LedBlink::SetMode(ledblink::Mode)+0x2a>
 80127cc:	2303      	movs	r3, #3
 80127ce:	6003      	str	r3, [r0, #0]
 80127d0:	f240 134d 	movw	r3, #333	; 0x14d
 80127d4:	e7f8      	b.n	80127c8 <LedBlink::SetMode(ledblink::Mode)+0x3c>
 80127d6:	2305      	movs	r3, #5
 80127d8:	6003      	str	r3, [r0, #0]
 80127da:	23c8      	movs	r3, #200	; 0xc8
 80127dc:	e7f4      	b.n	80127c8 <LedBlink::SetMode(ledblink::Mode)+0x3c>
 80127de:	2300      	movs	r3, #0
 80127e0:	2201      	movs	r2, #1
 80127e2:	6003      	str	r3, [r0, #0]
 80127e4:	60c3      	str	r3, [r0, #12]
 80127e6:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80127ea:	f503 3388 	add.w	r3, r3, #69632	; 0x11000
 80127ee:	615a      	str	r2, [r3, #20]
 80127f0:	e7e1      	b.n	80127b6 <LedBlink::SetMode(ledblink::Mode)+0x2a>
 80127f2:	4770      	bx	lr

080127f4 <Hardware::Hardware()>:
 80127f4:	b570      	push	{r4, r5, r6, lr}
 80127f6:	2400      	movs	r4, #0
 80127f8:	4b26      	ldr	r3, [pc, #152]	; (8012894 <Hardware::Hardware()+0xa0>)
 80127fa:	b090      	sub	sp, #64	; 0x40
 80127fc:	6004      	str	r4, [r0, #0]
 80127fe:	7104      	strb	r4, [r0, #4]
 8012800:	6018      	str	r0, [r3, #0]
 8012802:	4605      	mov	r5, r0
 8012804:	f7f4 fea8 	bl	8007558 <console_init>
 8012808:	f000 fad0 	bl	8012dac <systick_config>
 801280c:	f001 fcd0 	bl	80141b0 <udelay_init()>
 8012810:	f001 fc80 	bl	8014114 <micros_init()>
 8012814:	f240 701b 	movw	r0, #1819	; 0x71b
 8012818:	f000 fd24 	bl	8013264 <rcu_periph_clock_enable>
 801281c:	f240 701c 	movw	r0, #1820	; 0x71c
 8012820:	f000 fd20 	bl	8013264 <rcu_periph_clock_enable>
 8012824:	4e1c      	ldr	r6, [pc, #112]	; (8012898 <Hardware::Hardware()+0xa4>)
 8012826:	f000 fd15 	bl	8013254 <pmu_backup_write_enable>
 801282a:	f000 fb63 	bl	8012ef4 <bkp_deinit>
 801282e:	4621      	mov	r1, r4
 8012830:	2002      	movs	r0, #2
 8012832:	f000 fb67 	bl	8012f04 <bkp_data_write>
 8012836:	f240 7004 	movw	r0, #1796	; 0x704
 801283a:	f000 fd13 	bl	8013264 <rcu_periph_clock_enable>
 801283e:	4630      	mov	r0, r6
 8012840:	f000 fe84 	bl	801354c <timer_deinit>
 8012844:	2377      	movs	r3, #119	; 0x77
 8012846:	f8ad 300c 	strh.w	r3, [sp, #12]
 801284a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 801284e:	a903      	add	r1, sp, #12
 8012850:	4630      	mov	r0, r6
 8012852:	9305      	str	r3, [sp, #20]
 8012854:	f000 ff20 	bl	8013698 <timer_init>
 8012858:	4630      	mov	r0, r6
 801285a:	f000 ff75 	bl	8013748 <timer_enable>
 801285e:	f001 f99b 	bl	8013b98 <gd32_adc_init()>
 8012862:	2213      	movs	r2, #19
 8012864:	2302      	movs	r3, #2
 8012866:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 801286a:	237a      	movs	r3, #122	; 0x7a
 801286c:	a807      	add	r0, sp, #28
 801286e:	930c      	str	r3, [sp, #48]	; 0x30
 8012870:	e9cd 4408 	strd	r4, r4, [sp, #32]
 8012874:	9407      	str	r4, [sp, #28]
 8012876:	940f      	str	r4, [sp, #60]	; 0x3c
 8012878:	f000 f9be 	bl	8012bf8 <mktime>
 801287c:	4621      	mov	r1, r4
 801287e:	e9cd 0401 	strd	r0, r4, [sp, #4]
 8012882:	a801      	add	r0, sp, #4
 8012884:	f000 fa2e 	bl	8012ce4 <settimeofday>
 8012888:	f001 f9e0 	bl	8013c4c <gd32_i2c_begin()>
 801288c:	4628      	mov	r0, r5
 801288e:	b010      	add	sp, #64	; 0x40
 8012890:	bd70      	pop	{r4, r5, r6, pc}
 8012892:	bf00      	nop
 8012894:	2000a730 	andcs	sl, r0, r0, lsr r7
 8012898:	40001000 	andmi	r1, r0, r0

0801289c <Hardware::GetUuid(unsigned char*)>:
 801289c:	4a0c      	ldr	r2, [pc, #48]	; (80128d0 <Hardware::GetUuid(unsigned char*)+0x34>)
 801289e:	b084      	sub	sp, #16
 80128a0:	f8d2 37e8 	ldr.w	r3, [r2, #2024]	; 0x7e8
 80128a4:	9300      	str	r3, [sp, #0]
 80128a6:	f8d2 07ec 	ldr.w	r0, [r2, #2028]	; 0x7ec
 80128aa:	9001      	str	r0, [sp, #4]
 80128ac:	f8d2 27f0 	ldr.w	r2, [r2, #2032]	; 0x7f0
 80128b0:	4403      	add	r3, r0
 80128b2:	4413      	add	r3, r2
 80128b4:	9202      	str	r2, [sp, #8]
 80128b6:	466a      	mov	r2, sp
 80128b8:	9303      	str	r3, [sp, #12]
 80128ba:	1e4b      	subs	r3, r1, #1
 80128bc:	310f      	adds	r1, #15
 80128be:	428b      	cmp	r3, r1
 80128c0:	d101      	bne.n	80128c6 <Hardware::GetUuid(unsigned char*)+0x2a>
 80128c2:	b004      	add	sp, #16
 80128c4:	4770      	bx	lr
 80128c6:	f812 0b01 	ldrb.w	r0, [r2], #1
 80128ca:	f803 0f01 	strb.w	r0, [r3, #1]!
 80128ce:	e7f6      	b.n	80128be <Hardware::GetUuid(unsigned char*)+0x22>
 80128d0:	1ffff000 	svcne	0x00fff000

080128d4 <Hardware::Reboot()>:
 80128d4:	b508      	push	{r3, lr}
 80128d6:	6803      	ldr	r3, [r0, #0]
 80128d8:	4604      	mov	r4, r0
 80128da:	b153      	cbz	r3, 80128f2 <Hardware::Reboot()+0x1e>
 80128dc:	2300      	movs	r3, #0
 80128de:	2104      	movs	r1, #4
 80128e0:	7103      	strb	r3, [r0, #4]
 80128e2:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80128e6:	f000 fbfb 	bl	80130e0 <fwdgt_config>
 80128ea:	6820      	ldr	r0, [r4, #0]
 80128ec:	6803      	ldr	r3, [r0, #0]
 80128ee:	689b      	ldr	r3, [r3, #8]
 80128f0:	4798      	blx	r3
 80128f2:	2102      	movs	r1, #2
 80128f4:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80128f8:	f000 fbf2 	bl	80130e0 <fwdgt_config>
 80128fc:	2801      	cmp	r0, #1
 80128fe:	bf0c      	ite	eq
 8012900:	2301      	moveq	r3, #1
 8012902:	2300      	movne	r3, #0
 8012904:	7123      	strb	r3, [r4, #4]
 8012906:	d101      	bne.n	801290c <Hardware::Reboot()+0x38>
 8012908:	f000 fbda 	bl	80130c0 <fwdgt_enable>
 801290c:	2208      	movs	r2, #8
 801290e:	4b0d      	ldr	r3, [pc, #52]	; (8012944 <Hardware::Reboot()+0x70>)
 8012910:	2501      	movs	r5, #1
 8012912:	681b      	ldr	r3, [r3, #0]
 8012914:	480c      	ldr	r0, [pc, #48]	; (8012948 <Hardware::Reboot()+0x74>)
 8012916:	601a      	str	r2, [r3, #0]
 8012918:	227d      	movs	r2, #125	; 0x7d
 801291a:	490c      	ldr	r1, [pc, #48]	; (801294c <Hardware::Reboot()+0x78>)
 801291c:	60da      	str	r2, [r3, #12]
 801291e:	68dc      	ldr	r4, [r3, #12]
 8012920:	b904      	cbnz	r4, 8012924 <Hardware::Reboot()+0x50>
 8012922:	e7fe      	b.n	8012922 <Hardware::Reboot()+0x4e>
 8012924:	6802      	ldr	r2, [r0, #0]
 8012926:	695e      	ldr	r6, [r3, #20]
 8012928:	1b92      	subs	r2, r2, r6
 801292a:	4294      	cmp	r4, r2
 801292c:	d8f8      	bhi.n	8012920 <Hardware::Reboot()+0x4c>
 801292e:	6802      	ldr	r2, [r0, #0]
 8012930:	615a      	str	r2, [r3, #20]
 8012932:	691a      	ldr	r2, [r3, #16]
 8012934:	2a01      	cmp	r2, #1
 8012936:	f082 0401 	eor.w	r4, r2, #1
 801293a:	611c      	str	r4, [r3, #16]
 801293c:	bf14      	ite	ne
 801293e:	610d      	strne	r5, [r1, #16]
 8012940:	614a      	streq	r2, [r1, #20]
 8012942:	e7ec      	b.n	801291e <Hardware::Reboot()+0x4a>
 8012944:	2000a72c 	andcs	sl, r0, ip, lsr #14
 8012948:	2000a744 	andcs	sl, r0, r4, asr #14
 801294c:	40011000 	andmi	r1, r1, r0

08012950 <operator delete(void*)>:
 8012950:	f000 b890 	b.w	8012a74 <free>

08012954 <operator delete[](void*)>:
 8012954:	f000 b88e 	b.w	8012a74 <free>

08012958 <operator new(unsigned int)>:
 8012958:	f000 b842 	b.w	80129e0 <malloc>

0801295c <operator new[](unsigned int)>:
 801295c:	f000 b840 	b.w	80129e0 <malloc>

08012960 <inet_aton>:
 8012960:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8012962:	f04f 0c0a 	mov.w	ip, #10
 8012966:	2500      	movs	r5, #0
 8012968:	ae01      	add	r6, sp, #4
 801296a:	4603      	mov	r3, r0
 801296c:	2200      	movs	r2, #0
 801296e:	1d07      	adds	r7, r0, #4
 8012970:	e007      	b.n	8012982 <inet_aton+0x22>
 8012972:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8012976:	2b09      	cmp	r3, #9
 8012978:	d820      	bhi.n	80129bc <inet_aton+0x5c>
 801297a:	4603      	mov	r3, r0
 801297c:	fb0c 4202 	mla	r2, ip, r2, r4
 8012980:	3a30      	subs	r2, #48	; 0x30
 8012982:	4618      	mov	r0, r3
 8012984:	f810 4b01 	ldrb.w	r4, [r0], #1
 8012988:	2c2e      	cmp	r4, #46	; 0x2e
 801298a:	d111      	bne.n	80129b0 <inet_aton+0x50>
 801298c:	3501      	adds	r5, #1
 801298e:	2d03      	cmp	r5, #3
 8012990:	f806 2b01 	strb.w	r2, [r6], #1
 8012994:	d1e9      	bne.n	801296a <inet_aton+0xa>
 8012996:	2200      	movs	r2, #0
 8012998:	250a      	movs	r5, #10
 801299a:	1d1c      	adds	r4, r3, #4
 801299c:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 80129a0:	f010 0fdf 	tst.w	r0, #223	; 0xdf
 80129a4:	d10d      	bne.n	80129c2 <inet_aton+0x62>
 80129a6:	f88d 2007 	strb.w	r2, [sp, #7]
 80129aa:	b9b1      	cbnz	r1, 80129da <inet_aton+0x7a>
 80129ac:	2001      	movs	r0, #1
 80129ae:	e006      	b.n	80129be <inet_aton+0x5e>
 80129b0:	2c00      	cmp	r4, #0
 80129b2:	d0eb      	beq.n	801298c <inet_aton+0x2c>
 80129b4:	2c0a      	cmp	r4, #10
 80129b6:	d0e9      	beq.n	801298c <inet_aton+0x2c>
 80129b8:	42b8      	cmp	r0, r7
 80129ba:	d1da      	bne.n	8012972 <inet_aton+0x12>
 80129bc:	2000      	movs	r0, #0
 80129be:	b003      	add	sp, #12
 80129c0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80129c2:	280a      	cmp	r0, #10
 80129c4:	d0ef      	beq.n	80129a6 <inet_aton+0x46>
 80129c6:	42a3      	cmp	r3, r4
 80129c8:	d0f8      	beq.n	80129bc <inet_aton+0x5c>
 80129ca:	f1a0 0630 	sub.w	r6, r0, #48	; 0x30
 80129ce:	2e09      	cmp	r6, #9
 80129d0:	d8f4      	bhi.n	80129bc <inet_aton+0x5c>
 80129d2:	fb05 0202 	mla	r2, r5, r2, r0
 80129d6:	3a30      	subs	r2, #48	; 0x30
 80129d8:	e7e0      	b.n	801299c <inet_aton+0x3c>
 80129da:	9b01      	ldr	r3, [sp, #4]
 80129dc:	600b      	str	r3, [r1, #0]
 80129de:	e7e5      	b.n	80129ac <inet_aton+0x4c>

080129e0 <malloc>:
 80129e0:	b538      	push	{r3, r4, r5, lr}
 80129e2:	4604      	mov	r4, r0
 80129e4:	4601      	mov	r1, r0
 80129e6:	481c      	ldr	r0, [pc, #112]	; (8012a58 <malloc+0x78>)
 80129e8:	f7f6 fde8 	bl	80095bc <printf>
 80129ec:	b17c      	cbz	r4, 8012a0e <malloc+0x2e>
 80129ee:	4b1b      	ldr	r3, [pc, #108]	; (8012a5c <malloc+0x7c>)
 80129f0:	6818      	ldr	r0, [r3, #0]
 80129f2:	b978      	cbnz	r0, 8012a14 <malloc+0x34>
 80129f4:	4a1a      	ldr	r2, [pc, #104]	; (8012a60 <malloc+0x80>)
 80129f6:	f104 031b 	add.w	r3, r4, #27
 80129fa:	6811      	ldr	r1, [r2, #0]
 80129fc:	4819      	ldr	r0, [pc, #100]	; (8012a64 <malloc+0x84>)
 80129fe:	f023 030f 	bic.w	r3, r3, #15
 8012a02:	440b      	add	r3, r1
 8012a04:	4283      	cmp	r3, r0
 8012a06:	d921      	bls.n	8012a4c <malloc+0x6c>
 8012a08:	4817      	ldr	r0, [pc, #92]	; (8012a68 <malloc+0x88>)
 8012a0a:	f7f6 fdd7 	bl	80095bc <printf>
 8012a0e:	2500      	movs	r5, #0
 8012a10:	4628      	mov	r0, r5
 8012a12:	bd38      	pop	{r3, r4, r5, pc}
 8012a14:	4284      	cmp	r4, r0
 8012a16:	d80a      	bhi.n	8012a2e <malloc+0x4e>
 8012a18:	685a      	ldr	r2, [r3, #4]
 8012a1a:	6899      	ldr	r1, [r3, #8]
 8012a1c:	3201      	adds	r2, #1
 8012a1e:	428a      	cmp	r2, r1
 8012a20:	605a      	str	r2, [r3, #4]
 8012a22:	d900      	bls.n	8012a26 <malloc+0x46>
 8012a24:	609a      	str	r2, [r3, #8]
 8012a26:	68d9      	ldr	r1, [r3, #12]
 8012a28:	b919      	cbnz	r1, 8012a32 <malloc+0x52>
 8012a2a:	4604      	mov	r4, r0
 8012a2c:	e7e2      	b.n	80129f4 <malloc+0x14>
 8012a2e:	3310      	adds	r3, #16
 8012a30:	e7de      	b.n	80129f0 <malloc+0x10>
 8012a32:	4604      	mov	r4, r0
 8012a34:	688a      	ldr	r2, [r1, #8]
 8012a36:	60da      	str	r2, [r3, #12]
 8012a38:	2300      	movs	r3, #0
 8012a3a:	f101 050c 	add.w	r5, r1, #12
 8012a3e:	608b      	str	r3, [r1, #8]
 8012a40:	4622      	mov	r2, r4
 8012a42:	462b      	mov	r3, r5
 8012a44:	4809      	ldr	r0, [pc, #36]	; (8012a6c <malloc+0x8c>)
 8012a46:	f7f6 fdb9 	bl	80095bc <printf>
 8012a4a:	e7e1      	b.n	8012a10 <malloc+0x30>
 8012a4c:	6013      	str	r3, [r2, #0]
 8012a4e:	4b08      	ldr	r3, [pc, #32]	; (8012a70 <malloc+0x90>)
 8012a50:	e9c1 3400 	strd	r3, r4, [r1]
 8012a54:	e7f0      	b.n	8012a38 <malloc+0x58>
 8012a56:	bf00      	nop
 8012a58:	080170bc 	stmdaeq	r1, {r2, r3, r4, r5, r7, ip, sp, lr}
 8012a5c:	20000028 	andcs	r0, r0, r8, lsr #32
 8012a60:	20000024 	andcs	r0, r0, r4, lsr #32
 8012a64:	2003d800 	andcs	sp, r3, r0, lsl #16
 8012a68:	080170c8 	stmdaeq	r1, {r3, r6, r7, ip, sp, lr}
 8012a6c:	080170e4 	stmdaeq	r1, {r2, r5, r6, r7, ip, sp, lr}
 8012a70:	424c4d43 	submi	r4, ip, #4288	; 0x10c0

08012a74 <free>:
 8012a74:	b538      	push	{r3, r4, r5, lr}
 8012a76:	4604      	mov	r4, r0
 8012a78:	b1c8      	cbz	r0, 8012aae <free+0x3a>
 8012a7a:	f1a0 050c 	sub.w	r5, r0, #12
 8012a7e:	4602      	mov	r2, r0
 8012a80:	4629      	mov	r1, r5
 8012a82:	480c      	ldr	r0, [pc, #48]	; (8012ab4 <free+0x40>)
 8012a84:	f7f6 fd9a 	bl	80095bc <printf>
 8012a88:	f854 2c0c 	ldr.w	r2, [r4, #-12]
 8012a8c:	4b0a      	ldr	r3, [pc, #40]	; (8012ab8 <free+0x44>)
 8012a8e:	429a      	cmp	r2, r3
 8012a90:	d10d      	bne.n	8012aae <free+0x3a>
 8012a92:	4b0a      	ldr	r3, [pc, #40]	; (8012abc <free+0x48>)
 8012a94:	681a      	ldr	r2, [r3, #0]
 8012a96:	b152      	cbz	r2, 8012aae <free+0x3a>
 8012a98:	f854 1c08 	ldr.w	r1, [r4, #-8]
 8012a9c:	4291      	cmp	r1, r2
 8012a9e:	d107      	bne.n	8012ab0 <free+0x3c>
 8012aa0:	68da      	ldr	r2, [r3, #12]
 8012aa2:	f844 2c04 	str.w	r2, [r4, #-4]
 8012aa6:	685a      	ldr	r2, [r3, #4]
 8012aa8:	60dd      	str	r5, [r3, #12]
 8012aaa:	3a01      	subs	r2, #1
 8012aac:	605a      	str	r2, [r3, #4]
 8012aae:	bd38      	pop	{r3, r4, r5, pc}
 8012ab0:	3310      	adds	r3, #16
 8012ab2:	e7ef      	b.n	8012a94 <free+0x20>
 8012ab4:	0801710f 	stmdaeq	r1, {r0, r1, r2, r3, r8, ip, sp, lr}
 8012ab8:	424c4d43 	submi	r4, ip, #4288	; 0x10c0
 8012abc:	20000028 	andcs	r0, r0, r8, lsr #32

08012ac0 <memcpy>:
 8012ac0:	b510      	push	{r4, lr}
 8012ac2:	1e43      	subs	r3, r0, #1
 8012ac4:	440a      	add	r2, r1
 8012ac6:	4291      	cmp	r1, r2
 8012ac8:	d100      	bne.n	8012acc <memcpy+0xc>
 8012aca:	bd10      	pop	{r4, pc}
 8012acc:	f811 4b01 	ldrb.w	r4, [r1], #1
 8012ad0:	f803 4f01 	strb.w	r4, [r3, #1]!
 8012ad4:	e7f7      	b.n	8012ac6 <memcpy+0x6>

08012ad6 <memmove>:
 8012ad6:	4288      	cmp	r0, r1
 8012ad8:	b510      	push	{r4, lr}
 8012ada:	eb01 0302 	add.w	r3, r1, r2
 8012ade:	d208      	bcs.n	8012af2 <memmove+0x1c>
 8012ae0:	1e42      	subs	r2, r0, #1
 8012ae2:	4299      	cmp	r1, r3
 8012ae4:	d100      	bne.n	8012ae8 <memmove+0x12>
 8012ae6:	bd10      	pop	{r4, pc}
 8012ae8:	f811 4b01 	ldrb.w	r4, [r1], #1
 8012aec:	f802 4f01 	strb.w	r4, [r2, #1]!
 8012af0:	e7f7      	b.n	8012ae2 <memmove+0xc>
 8012af2:	4601      	mov	r1, r0
 8012af4:	4402      	add	r2, r0
 8012af6:	428a      	cmp	r2, r1
 8012af8:	d0f5      	beq.n	8012ae6 <memmove+0x10>
 8012afa:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8012afe:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8012b02:	e7f8      	b.n	8012af6 <memmove+0x20>

08012b04 <memset>:
 8012b04:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012b06:	b1c2      	cbz	r2, 8012b3a <memset+0x36>
 8012b08:	4603      	mov	r3, r0
 8012b0a:	b2c9      	uxtb	r1, r1
 8012b0c:	075c      	lsls	r4, r3, #29
 8012b0e:	d110      	bne.n	8012b32 <memset+0x2e>
 8012b10:	ea41 2401 	orr.w	r4, r1, r1, lsl #8
 8012b14:	ea44 4704 	orr.w	r7, r4, r4, lsl #16
 8012b18:	463d      	mov	r5, r7
 8012b1a:	461e      	mov	r6, r3
 8012b1c:	f022 0407 	bic.w	r4, r2, #7
 8012b20:	441c      	add	r4, r3
 8012b22:	42a6      	cmp	r6, r4
 8012b24:	d10a      	bne.n	8012b3c <memset+0x38>
 8012b26:	4413      	add	r3, r2
 8012b28:	429c      	cmp	r4, r3
 8012b2a:	d006      	beq.n	8012b3a <memset+0x36>
 8012b2c:	f804 1b01 	strb.w	r1, [r4], #1
 8012b30:	e7fa      	b.n	8012b28 <memset+0x24>
 8012b32:	3a01      	subs	r2, #1
 8012b34:	f803 1b01 	strb.w	r1, [r3], #1
 8012b38:	d1e8      	bne.n	8012b0c <memset+0x8>
 8012b3a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012b3c:	f846 7b08 	str.w	r7, [r6], #8
 8012b40:	f846 5c04 	str.w	r5, [r6, #-4]
 8012b44:	e7ed      	b.n	8012b22 <memset+0x1e>

08012b46 <puts>:
 8012b46:	b508      	push	{r3, lr}
 8012b48:	f7ff fd6a 	bl	8012620 <console_puts>
 8012b4c:	200a      	movs	r0, #10
 8012b4e:	f7ff fd65 	bl	801261c <console_putc>
 8012b52:	2001      	movs	r0, #1
 8012b54:	bd08      	pop	{r3, pc}
	...

08012b58 <strtok>:
 8012b58:	b530      	push	{r4, r5, lr}
 8012b5a:	b910      	cbnz	r0, 8012b62 <strtok+0xa>
 8012b5c:	4b12      	ldr	r3, [pc, #72]	; (8012ba8 <strtok+0x50>)
 8012b5e:	6818      	ldr	r0, [r3, #0]
 8012b60:	b158      	cbz	r0, 8012b7a <strtok+0x22>
 8012b62:	4603      	mov	r3, r0
 8012b64:	460d      	mov	r5, r1
 8012b66:	4618      	mov	r0, r3
 8012b68:	f813 2b01 	ldrb.w	r2, [r3], #1
 8012b6c:	f815 4b01 	ldrb.w	r4, [r5], #1
 8012b70:	b924      	cbnz	r4, 8012b7c <strtok+0x24>
 8012b72:	b94a      	cbnz	r2, 8012b88 <strtok+0x30>
 8012b74:	4610      	mov	r0, r2
 8012b76:	4b0c      	ldr	r3, [pc, #48]	; (8012ba8 <strtok+0x50>)
 8012b78:	601a      	str	r2, [r3, #0]
 8012b7a:	bd30      	pop	{r4, r5, pc}
 8012b7c:	42a2      	cmp	r2, r4
 8012b7e:	d1f5      	bne.n	8012b6c <strtok+0x14>
 8012b80:	e7f0      	b.n	8012b64 <strtok+0xc>
 8012b82:	4613      	mov	r3, r2
 8012b84:	e00c      	b.n	8012ba0 <strtok+0x48>
 8012b86:	b914      	cbnz	r4, 8012b8e <strtok+0x36>
 8012b88:	460d      	mov	r5, r1
 8012b8a:	f813 2b01 	ldrb.w	r2, [r3], #1
 8012b8e:	f815 4b01 	ldrb.w	r4, [r5], #1
 8012b92:	42a2      	cmp	r2, r4
 8012b94:	d1f7      	bne.n	8012b86 <strtok+0x2e>
 8012b96:	2a00      	cmp	r2, #0
 8012b98:	d0f3      	beq.n	8012b82 <strtok+0x2a>
 8012b9a:	2200      	movs	r2, #0
 8012b9c:	f803 2c01 	strb.w	r2, [r3, #-1]
 8012ba0:	4a01      	ldr	r2, [pc, #4]	; (8012ba8 <strtok+0x50>)
 8012ba2:	6013      	str	r3, [r2, #0]
 8012ba4:	e7e9      	b.n	8012b7a <strtok+0x22>
 8012ba6:	bf00      	nop
 8012ba8:	2000a734 	andcs	sl, r0, r4, lsr r7

08012bac <isleapyear>:
 8012bac:	2264      	movs	r2, #100	; 0x64
 8012bae:	fb90 f3f2 	sdiv	r3, r0, r2
 8012bb2:	fb02 0313 	mls	r3, r2, r3, r0
 8012bb6:	b94b      	cbnz	r3, 8012bcc <isleapyear+0x20>
 8012bb8:	f44f 73c8 	mov.w	r3, #400	; 0x190
 8012bbc:	fb90 f2f3 	sdiv	r2, r0, r3
 8012bc0:	fb03 0012 	mls	r0, r3, r2, r0
 8012bc4:	fab0 f080 	clz	r0, r0
 8012bc8:	0940      	lsrs	r0, r0, #5
 8012bca:	4770      	bx	lr
 8012bcc:	f010 0f03 	tst.w	r0, #3
 8012bd0:	bf0c      	ite	eq
 8012bd2:	2001      	moveq	r0, #1
 8012bd4:	2000      	movne	r0, #0
 8012bd6:	4770      	bx	lr

08012bd8 <getdaysofmonth>:
 8012bd8:	b510      	push	{r4, lr}
 8012bda:	4604      	mov	r4, r0
 8012bdc:	2c01      	cmp	r4, #1
 8012bde:	4608      	mov	r0, r1
 8012be0:	d102      	bne.n	8012be8 <getdaysofmonth+0x10>
 8012be2:	f7ff ffe3 	bl	8012bac <isleapyear>
 8012be6:	b918      	cbnz	r0, 8012bf0 <getdaysofmonth+0x18>
 8012be8:	4b02      	ldr	r3, [pc, #8]	; (8012bf4 <getdaysofmonth+0x1c>)
 8012bea:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8012bee:	bd10      	pop	{r4, pc}
 8012bf0:	201d      	movs	r0, #29
 8012bf2:	e7fc      	b.n	8012bee <getdaysofmonth+0x16>
 8012bf4:	08017138 	stmdaeq	r1, {r3, r4, r5, r8, ip, sp, lr}

08012bf8 <mktime>:
 8012bf8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012bfc:	4604      	mov	r4, r0
 8012bfe:	2800      	cmp	r0, #0
 8012c00:	d043      	beq.n	8012c8a <mktime+0x92>
 8012c02:	6941      	ldr	r1, [r0, #20]
 8012c04:	f1a1 0346 	sub.w	r3, r1, #70	; 0x46
 8012c08:	2b45      	cmp	r3, #69	; 0x45
 8012c0a:	d83e      	bhi.n	8012c8a <mktime+0x92>
 8012c0c:	2600      	movs	r6, #0
 8012c0e:	f240 75b2 	movw	r5, #1970	; 0x7b2
 8012c12:	f240 186d 	movw	r8, #365	; 0x16d
 8012c16:	f201 776b 	addw	r7, r1, #1899	; 0x76b
 8012c1a:	42af      	cmp	r7, r5
 8012c1c:	da24      	bge.n	8012c68 <mktime+0x70>
 8012c1e:	6927      	ldr	r7, [r4, #16]
 8012c20:	2f0b      	cmp	r7, #11
 8012c22:	d832      	bhi.n	8012c8a <mktime+0x92>
 8012c24:	2500      	movs	r5, #0
 8012c26:	42af      	cmp	r7, r5
 8012c28:	d129      	bne.n	8012c7e <mktime+0x86>
 8012c2a:	68e5      	ldr	r5, [r4, #12]
 8012c2c:	2d00      	cmp	r5, #0
 8012c2e:	dd2c      	ble.n	8012c8a <mktime+0x92>
 8012c30:	4638      	mov	r0, r7
 8012c32:	f7ff ffd1 	bl	8012bd8 <getdaysofmonth>
 8012c36:	4285      	cmp	r5, r0
 8012c38:	dc27      	bgt.n	8012c8a <mktime+0x92>
 8012c3a:	2318      	movs	r3, #24
 8012c3c:	3d01      	subs	r5, #1
 8012c3e:	4435      	add	r5, r6
 8012c40:	435d      	muls	r5, r3
 8012c42:	68a3      	ldr	r3, [r4, #8]
 8012c44:	2b17      	cmp	r3, #23
 8012c46:	d820      	bhi.n	8012c8a <mktime+0x92>
 8012c48:	213c      	movs	r1, #60	; 0x3c
 8012c4a:	442b      	add	r3, r5
 8012c4c:	fb01 f203 	mul.w	r2, r1, r3
 8012c50:	6863      	ldr	r3, [r4, #4]
 8012c52:	2b3b      	cmp	r3, #59	; 0x3b
 8012c54:	d819      	bhi.n	8012c8a <mktime+0x92>
 8012c56:	6820      	ldr	r0, [r4, #0]
 8012c58:	4413      	add	r3, r2
 8012c5a:	283b      	cmp	r0, #59	; 0x3b
 8012c5c:	fb01 f303 	mul.w	r3, r1, r3
 8012c60:	d813      	bhi.n	8012c8a <mktime+0x92>
 8012c62:	4418      	add	r0, r3
 8012c64:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012c68:	4628      	mov	r0, r5
 8012c6a:	f7ff ff9f 	bl	8012bac <isleapyear>
 8012c6e:	2800      	cmp	r0, #0
 8012c70:	bf14      	ite	ne
 8012c72:	f44f 73b7 	movne.w	r3, #366	; 0x16e
 8012c76:	4643      	moveq	r3, r8
 8012c78:	3501      	adds	r5, #1
 8012c7a:	441e      	add	r6, r3
 8012c7c:	e7cd      	b.n	8012c1a <mktime+0x22>
 8012c7e:	4628      	mov	r0, r5
 8012c80:	f7ff ffaa 	bl	8012bd8 <getdaysofmonth>
 8012c84:	3501      	adds	r5, #1
 8012c86:	4406      	add	r6, r0
 8012c88:	e7cd      	b.n	8012c26 <mktime+0x2e>
 8012c8a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8012c8e:	e7e9      	b.n	8012c64 <mktime+0x6c>

08012c90 <gettimeofday>:
 8012c90:	b538      	push	{r3, r4, r5, lr}
 8012c92:	4b10      	ldr	r3, [pc, #64]	; (8012cd4 <gettimeofday+0x44>)
 8012c94:	4a10      	ldr	r2, [pc, #64]	; (8012cd8 <gettimeofday+0x48>)
 8012c96:	681b      	ldr	r3, [r3, #0]
 8012c98:	6814      	ldr	r4, [r2, #0]
 8012c9a:	6013      	str	r3, [r2, #0]
 8012c9c:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8012ca0:	429c      	cmp	r4, r3
 8012ca2:	bf2c      	ite	cs
 8012ca4:	1ae4      	subcs	r4, r4, r3
 8012ca6:	1b1c      	subcc	r4, r3, r4
 8012ca8:	4354      	muls	r4, r2
 8012caa:	4b0c      	ldr	r3, [pc, #48]	; (8012cdc <gettimeofday+0x4c>)
 8012cac:	4605      	mov	r5, r0
 8012cae:	e9d3 2100 	ldrd	r2, r1, [r3]
 8012cb2:	18a4      	adds	r4, r4, r2
 8012cb4:	f141 0100 	adc.w	r1, r1, #0
 8012cb8:	e9c3 4100 	strd	r4, r1, [r3]
 8012cbc:	4620      	mov	r0, r4
 8012cbe:	2300      	movs	r3, #0
 8012cc0:	4a07      	ldr	r2, [pc, #28]	; (8012ce0 <gettimeofday+0x50>)
 8012cc2:	f7f5 f935 	bl	8007f30 <__aeabi_uldivmod>
 8012cc6:	4b06      	ldr	r3, [pc, #24]	; (8012ce0 <gettimeofday+0x50>)
 8012cc8:	6028      	str	r0, [r5, #0]
 8012cca:	fb03 4410 	mls	r4, r3, r0, r4
 8012cce:	2000      	movs	r0, #0
 8012cd0:	606c      	str	r4, [r5, #4]
 8012cd2:	bd38      	pop	{r3, r4, r5, pc}
 8012cd4:	2000a744 	andcs	sl, r0, r4, asr #14
 8012cd8:	2000a740 	andcs	sl, r0, r0, asr #14
 8012cdc:	2000a738 	andcs	sl, r0, r8, lsr r7
 8012ce0:	000f4240 	andeq	r4, pc, r0, asr #4

08012ce4 <settimeofday>:
 8012ce4:	4b07      	ldr	r3, [pc, #28]	; (8012d04 <settimeofday+0x20>)
 8012ce6:	b510      	push	{r4, lr}
 8012ce8:	681a      	ldr	r2, [r3, #0]
 8012cea:	4b07      	ldr	r3, [pc, #28]	; (8012d08 <settimeofday+0x24>)
 8012cec:	6804      	ldr	r4, [r0, #0]
 8012cee:	601a      	str	r2, [r3, #0]
 8012cf0:	6843      	ldr	r3, [r0, #4]
 8012cf2:	4806      	ldr	r0, [pc, #24]	; (8012d0c <settimeofday+0x28>)
 8012cf4:	17da      	asrs	r2, r3, #31
 8012cf6:	fbc4 3200 	smlal	r3, r2, r4, r0
 8012cfa:	4905      	ldr	r1, [pc, #20]	; (8012d10 <settimeofday+0x2c>)
 8012cfc:	2000      	movs	r0, #0
 8012cfe:	e9c1 3200 	strd	r3, r2, [r1]
 8012d02:	bd10      	pop	{r4, pc}
 8012d04:	2000a744 	andcs	sl, r0, r4, asr #14
 8012d08:	2000a740 	andcs	sl, r0, r0, asr #14
 8012d0c:	000f4240 	andeq	r4, pc, r0, asr #4
 8012d10:	2000a738 	andcs	sl, r0, r8, lsr r7

08012d14 <time>:
 8012d14:	b513      	push	{r0, r1, r4, lr}
 8012d16:	4604      	mov	r4, r0
 8012d18:	2100      	movs	r1, #0
 8012d1a:	4668      	mov	r0, sp
 8012d1c:	f7ff ffb8 	bl	8012c90 <gettimeofday>
 8012d20:	9800      	ldr	r0, [sp, #0]
 8012d22:	b104      	cbz	r4, 8012d26 <time+0x12>
 8012d24:	6020      	str	r0, [r4, #0]
 8012d26:	b002      	add	sp, #8
 8012d28:	bd10      	pop	{r4, pc}
	...

08012d2c <uart0_init>:
 8012d2c:	2301      	movs	r3, #1
 8012d2e:	b507      	push	{r0, r1, r2, lr}
 8012d30:	2208      	movs	r2, #8
 8012d32:	9300      	str	r3, [sp, #0]
 8012d34:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
 8012d38:	2300      	movs	r3, #0
 8012d3a:	4803      	ldr	r0, [pc, #12]	; (8012d48 <uart0_init+0x1c>)
 8012d3c:	f001 f8d2 	bl	8013ee4 <gd32_uart_begin>
 8012d40:	b003      	add	sp, #12
 8012d42:	f85d fb04 	ldr.w	pc, [sp], #4
 8012d46:	bf00      	nop
 8012d48:	40013800 	andmi	r3, r1, r0, lsl #16

08012d4c <uart0_putc>:
 8012d4c:	280a      	cmp	r0, #10
 8012d4e:	b538      	push	{r3, r4, r5, lr}
 8012d50:	4604      	mov	r4, r0
 8012d52:	d10a      	bne.n	8012d6a <uart0_putc+0x1e>
 8012d54:	4d0b      	ldr	r5, [pc, #44]	; (8012d84 <uart0_putc+0x38>)
 8012d56:	2107      	movs	r1, #7
 8012d58:	4628      	mov	r0, r5
 8012d5a:	f000 fe29 	bl	80139b0 <usart_flag_get>
 8012d5e:	2800      	cmp	r0, #0
 8012d60:	d0f9      	beq.n	8012d56 <uart0_putc+0xa>
 8012d62:	220d      	movs	r2, #13
 8012d64:	4b08      	ldr	r3, [pc, #32]	; (8012d88 <uart0_putc+0x3c>)
 8012d66:	f8c3 2804 	str.w	r2, [r3, #2052]	; 0x804
 8012d6a:	4d06      	ldr	r5, [pc, #24]	; (8012d84 <uart0_putc+0x38>)
 8012d6c:	2107      	movs	r1, #7
 8012d6e:	4628      	mov	r0, r5
 8012d70:	f000 fe1e 	bl	80139b0 <usart_flag_get>
 8012d74:	2800      	cmp	r0, #0
 8012d76:	d0f9      	beq.n	8012d6c <uart0_putc+0x20>
 8012d78:	4b03      	ldr	r3, [pc, #12]	; (8012d88 <uart0_putc+0x3c>)
 8012d7a:	b2e4      	uxtb	r4, r4
 8012d7c:	f8c3 4804 	str.w	r4, [r3, #2052]	; 0x804
 8012d80:	bd38      	pop	{r3, r4, r5, pc}
 8012d82:	bf00      	nop
 8012d84:	40013800 	andmi	r3, r1, r0, lsl #16
 8012d88:	40013000 	andmi	r3, r1, r0

08012d8c <uart0_puts>:
 8012d8c:	b510      	push	{r4, lr}
 8012d8e:	1e44      	subs	r4, r0, #1
 8012d90:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8012d94:	b903      	cbnz	r3, 8012d98 <uart0_puts+0xc>
 8012d96:	bd10      	pop	{r4, pc}
 8012d98:	2b0a      	cmp	r3, #10
 8012d9a:	d102      	bne.n	8012da2 <uart0_puts+0x16>
 8012d9c:	200d      	movs	r0, #13
 8012d9e:	f7ff ffd5 	bl	8012d4c <uart0_putc>
 8012da2:	7820      	ldrb	r0, [r4, #0]
 8012da4:	f7ff ffd2 	bl	8012d4c <uart0_putc>
 8012da8:	e7f2      	b.n	8012d90 <uart0_puts+0x4>
	...

08012dac <systick_config>:
 8012dac:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8012db0:	4b0b      	ldr	r3, [pc, #44]	; (8012de0 <systick_config+0x34>)
 8012db2:	681b      	ldr	r3, [r3, #0]
 8012db4:	fbb3 f3f2 	udiv	r3, r3, r2
 8012db8:	3b01      	subs	r3, #1
 8012dba:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8012dbe:	d20d      	bcs.n	8012ddc <systick_config+0x30>
 8012dc0:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8012dc4:	21f0      	movs	r1, #240	; 0xf0
 8012dc6:	6153      	str	r3, [r2, #20]
 8012dc8:	4b06      	ldr	r3, [pc, #24]	; (8012de4 <systick_config+0x38>)
 8012dca:	2007      	movs	r0, #7
 8012dcc:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 8012dd0:	2100      	movs	r1, #0
 8012dd2:	6191      	str	r1, [r2, #24]
 8012dd4:	6110      	str	r0, [r2, #16]
 8012dd6:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 8012dda:	4770      	bx	lr
 8012ddc:	e7fe      	b.n	8012ddc <systick_config+0x30>
 8012dde:	bf00      	nop
 8012de0:	200000f8 	strdcs	r0, [r0], -r8
 8012de4:	e000ed00 	and	lr, r0, r0, lsl #26

08012de8 <SysTick_Handler>:
 8012de8:	4a02      	ldr	r2, [pc, #8]	; (8012df4 <SysTick_Handler+0xc>)
 8012dea:	6813      	ldr	r3, [r2, #0]
 8012dec:	3301      	adds	r3, #1
 8012dee:	6013      	str	r3, [r2, #0]
 8012df0:	4770      	bx	lr
 8012df2:	bf00      	nop
 8012df4:	2000a744 	andcs	sl, r0, r4, asr #14

08012df8 <SystemInit>:
 8012df8:	4b3a      	ldr	r3, [pc, #232]	; (8012ee4 <SystemInit+0xec>)
 8012dfa:	681a      	ldr	r2, [r3, #0]
 8012dfc:	f042 0201 	orr.w	r2, r2, #1
 8012e00:	601a      	str	r2, [r3, #0]
 8012e02:	6859      	ldr	r1, [r3, #4]
 8012e04:	4a38      	ldr	r2, [pc, #224]	; (8012ee8 <SystemInit+0xf0>)
 8012e06:	400a      	ands	r2, r1
 8012e08:	605a      	str	r2, [r3, #4]
 8012e0a:	681a      	ldr	r2, [r3, #0]
 8012e0c:	f44f 017f 	mov.w	r1, #16711680	; 0xff0000
 8012e10:	f022 7284 	bic.w	r2, r2, #17301504	; 0x1080000
 8012e14:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8012e18:	601a      	str	r2, [r3, #0]
 8012e1a:	681a      	ldr	r2, [r3, #0]
 8012e1c:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8012e20:	601a      	str	r2, [r3, #0]
 8012e22:	685a      	ldr	r2, [r3, #4]
 8012e24:	f022 5203 	bic.w	r2, r2, #549453824	; 0x20c00000
 8012e28:	f422 127c 	bic.w	r2, r2, #4128768	; 0x3f0000
 8012e2c:	605a      	str	r2, [r3, #4]
 8012e2e:	681a      	ldr	r2, [r3, #0]
 8012e30:	f022 52a0 	bic.w	r2, r2, #335544320	; 0x14000000
 8012e34:	601a      	str	r2, [r3, #0]
 8012e36:	2200      	movs	r2, #0
 8012e38:	62da      	str	r2, [r3, #44]	; 0x2c
 8012e3a:	6099      	str	r1, [r3, #8]
 8012e3c:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 8012e40:	f8d3 2090 	ldr.w	r2, [r3, #144]	; 0x90
 8012e44:	f022 5280 	bic.w	r2, r2, #268435456	; 0x10000000
 8012e48:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
 8012e4c:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
 8012e50:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
 8012e54:	4a25      	ldr	r2, [pc, #148]	; (8012eec <SystemInit+0xf4>)
 8012e56:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
 8012e5a:	681a      	ldr	r2, [r3, #0]
 8012e5c:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8012e60:	601a      	str	r2, [r3, #0]
 8012e62:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8012e66:	6819      	ldr	r1, [r3, #0]
 8012e68:	0389      	lsls	r1, r1, #14
 8012e6a:	d401      	bmi.n	8012e70 <SystemInit+0x78>
 8012e6c:	3a01      	subs	r2, #1
 8012e6e:	d1fa      	bne.n	8012e66 <SystemInit+0x6e>
 8012e70:	681a      	ldr	r2, [r3, #0]
 8012e72:	0392      	lsls	r2, r2, #14
 8012e74:	d400      	bmi.n	8012e78 <SystemInit+0x80>
 8012e76:	e7fe      	b.n	8012e76 <SystemInit+0x7e>
 8012e78:	685a      	ldr	r2, [r3, #4]
 8012e7a:	605a      	str	r2, [r3, #4]
 8012e7c:	685a      	ldr	r2, [r3, #4]
 8012e7e:	605a      	str	r2, [r3, #4]
 8012e80:	685a      	ldr	r2, [r3, #4]
 8012e82:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8012e86:	605a      	str	r2, [r3, #4]
 8012e88:	685a      	ldr	r2, [r3, #4]
 8012e8a:	f022 5200 	bic.w	r2, r2, #536870912	; 0x20000000
 8012e8e:	f422 127c 	bic.w	r2, r2, #4128768	; 0x3f0000
 8012e92:	605a      	str	r2, [r3, #4]
 8012e94:	685a      	ldr	r2, [r3, #4]
 8012e96:	f442 1204 	orr.w	r2, r2, #2162688	; 0x210000
 8012e9a:	605a      	str	r2, [r3, #4]
 8012e9c:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8012e9e:	4a14      	ldr	r2, [pc, #80]	; (8012ef0 <SystemInit+0xf8>)
 8012ea0:	400a      	ands	r2, r1
 8012ea2:	62da      	str	r2, [r3, #44]	; 0x2c
 8012ea4:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8012ea6:	f442 3285 	orr.w	r2, r2, #68096	; 0x10a00
 8012eaa:	f042 0244 	orr.w	r2, r2, #68	; 0x44
 8012eae:	62da      	str	r2, [r3, #44]	; 0x2c
 8012eb0:	681a      	ldr	r2, [r3, #0]
 8012eb2:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8012eb6:	601a      	str	r2, [r3, #0]
 8012eb8:	681a      	ldr	r2, [r3, #0]
 8012eba:	0110      	lsls	r0, r2, #4
 8012ebc:	d5fc      	bpl.n	8012eb8 <SystemInit+0xc0>
 8012ebe:	681a      	ldr	r2, [r3, #0]
 8012ec0:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 8012ec4:	601a      	str	r2, [r3, #0]
 8012ec6:	681a      	ldr	r2, [r3, #0]
 8012ec8:	0191      	lsls	r1, r2, #6
 8012eca:	d5fc      	bpl.n	8012ec6 <SystemInit+0xce>
 8012ecc:	685a      	ldr	r2, [r3, #4]
 8012ece:	f022 0203 	bic.w	r2, r2, #3
 8012ed2:	605a      	str	r2, [r3, #4]
 8012ed4:	685a      	ldr	r2, [r3, #4]
 8012ed6:	f042 0202 	orr.w	r2, r2, #2
 8012eda:	605a      	str	r2, [r3, #4]
 8012edc:	685a      	ldr	r2, [r3, #4]
 8012ede:	0712      	lsls	r2, r2, #28
 8012ee0:	d5fc      	bpl.n	8012edc <SystemInit+0xe4>
 8012ee2:	4770      	bx	lr
 8012ee4:	40021000 	andmi	r1, r2, r0
 8012ee8:	e0ff000c 	rscs	r0, pc, ip
 8012eec:	20003010 	andcs	r3, r0, r0, lsl r0
 8012ef0:	fffef000 			; <UNDEFINED> instruction: 0xfffef000

08012ef4 <bkp_deinit>:
 8012ef4:	b508      	push	{r3, lr}
 8012ef6:	f000 f9d5 	bl	80132a4 <rcu_bkp_reset_enable>
 8012efa:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8012efe:	f000 b9d9 	b.w	80132b4 <rcu_bkp_reset_disable>
	...

08012f04 <bkp_data_write>:
 8012f04:	f1a0 030b 	sub.w	r3, r0, #11
 8012f08:	2b1f      	cmp	r3, #31
 8012f0a:	d804      	bhi.n	8012f16 <bkp_data_write+0x12>
 8012f0c:	4b07      	ldr	r3, [pc, #28]	; (8012f2c <bkp_data_write+0x28>)
 8012f0e:	4403      	add	r3, r0
 8012f10:	009b      	lsls	r3, r3, #2
 8012f12:	8019      	strh	r1, [r3, #0]
 8012f14:	4770      	bx	lr
 8012f16:	1e43      	subs	r3, r0, #1
 8012f18:	2b09      	cmp	r3, #9
 8012f1a:	bf9f      	itttt	ls
 8012f1c:	f100 5080 	addls.w	r0, r0, #268435456	; 0x10000000
 8012f20:	f500 50d8 	addls.w	r0, r0, #6912	; 0x1b00
 8012f24:	0080      	lslls	r0, r0, #2
 8012f26:	8001      	strhls	r1, [r0, #0]
 8012f28:	4770      	bx	lr
 8012f2a:	bf00      	nop
 8012f2c:	10001b05 	andne	r1, r0, r5, lsl #22

08012f30 <bkp_data_read>:
 8012f30:	f1a0 030b 	sub.w	r3, r0, #11
 8012f34:	2b1f      	cmp	r3, #31
 8012f36:	d805      	bhi.n	8012f44 <bkp_data_read+0x14>
 8012f38:	4b08      	ldr	r3, [pc, #32]	; (8012f5c <bkp_data_read+0x2c>)
 8012f3a:	4403      	add	r3, r0
 8012f3c:	009b      	lsls	r3, r3, #2
 8012f3e:	8818      	ldrh	r0, [r3, #0]
 8012f40:	b280      	uxth	r0, r0
 8012f42:	4770      	bx	lr
 8012f44:	1e43      	subs	r3, r0, #1
 8012f46:	2b09      	cmp	r3, #9
 8012f48:	d806      	bhi.n	8012f58 <bkp_data_read+0x28>
 8012f4a:	f100 5080 	add.w	r0, r0, #268435456	; 0x10000000
 8012f4e:	f500 50d8 	add.w	r0, r0, #6912	; 0x1b00
 8012f52:	0080      	lsls	r0, r0, #2
 8012f54:	8800      	ldrh	r0, [r0, #0]
 8012f56:	e7f3      	b.n	8012f40 <bkp_data_read+0x10>
 8012f58:	2000      	movs	r0, #0
 8012f5a:	4770      	bx	lr
 8012f5c:	10001b05 	andne	r1, r0, r5, lsl #22

08012f60 <dma_deinit>:
 8012f60:	2314      	movs	r3, #20
 8012f62:	fb03 0301 	mla	r3, r3, r1, r0
 8012f66:	689a      	ldr	r2, [r3, #8]
 8012f68:	b530      	push	{r4, r5, lr}
 8012f6a:	f022 0201 	bic.w	r2, r2, #1
 8012f6e:	609a      	str	r2, [r3, #8]
 8012f70:	2200      	movs	r2, #0
 8012f72:	609a      	str	r2, [r3, #8]
 8012f74:	60da      	str	r2, [r3, #12]
 8012f76:	611a      	str	r2, [r3, #16]
 8012f78:	615a      	str	r2, [r3, #20]
 8012f7a:	230f      	movs	r3, #15
 8012f7c:	6844      	ldr	r4, [r0, #4]
 8012f7e:	008d      	lsls	r5, r1, #2
 8012f80:	40ab      	lsls	r3, r5
 8012f82:	4323      	orrs	r3, r4
 8012f84:	6043      	str	r3, [r0, #4]
 8012f86:	4b04      	ldr	r3, [pc, #16]	; (8012f98 <dma_deinit+0x38>)
 8012f88:	4298      	cmp	r0, r3
 8012f8a:	d103      	bne.n	8012f94 <dma_deinit+0x34>
 8012f8c:	2905      	cmp	r1, #5
 8012f8e:	bf08      	it	eq
 8012f90:	f8c3 2300 	streq.w	r2, [r3, #768]	; 0x300
 8012f94:	bd30      	pop	{r4, r5, pc}
 8012f96:	bf00      	nop
 8012f98:	40020400 	andmi	r0, r2, r0, lsl #8

08012f9c <dma_init>:
 8012f9c:	2314      	movs	r3, #20
 8012f9e:	fb03 0101 	mla	r1, r3, r1, r0
 8012fa2:	6813      	ldr	r3, [r2, #0]
 8012fa4:	b510      	push	{r4, lr}
 8012fa6:	610b      	str	r3, [r1, #16]
 8012fa8:	6893      	ldr	r3, [r2, #8]
 8012faa:	614b      	str	r3, [r1, #20]
 8012fac:	8a13      	ldrh	r3, [r2, #16]
 8012fae:	60cb      	str	r3, [r1, #12]
 8012fb0:	68d4      	ldr	r4, [r2, #12]
 8012fb2:	6853      	ldr	r3, [r2, #4]
 8012fb4:	6888      	ldr	r0, [r1, #8]
 8012fb6:	4323      	orrs	r3, r4
 8012fb8:	6954      	ldr	r4, [r2, #20]
 8012fba:	f420 507c 	bic.w	r0, r0, #16128	; 0x3f00
 8012fbe:	4323      	orrs	r3, r4
 8012fc0:	4303      	orrs	r3, r0
 8012fc2:	608b      	str	r3, [r1, #8]
 8012fc4:	7e13      	ldrb	r3, [r2, #24]
 8012fc6:	2b01      	cmp	r3, #1
 8012fc8:	688b      	ldr	r3, [r1, #8]
 8012fca:	bf0c      	ite	eq
 8012fcc:	f043 0340 	orreq.w	r3, r3, #64	; 0x40
 8012fd0:	f023 0340 	bicne.w	r3, r3, #64	; 0x40
 8012fd4:	608b      	str	r3, [r1, #8]
 8012fd6:	7e53      	ldrb	r3, [r2, #25]
 8012fd8:	2b01      	cmp	r3, #1
 8012fda:	688b      	ldr	r3, [r1, #8]
 8012fdc:	bf0c      	ite	eq
 8012fde:	f043 0380 	orreq.w	r3, r3, #128	; 0x80
 8012fe2:	f023 0380 	bicne.w	r3, r3, #128	; 0x80
 8012fe6:	608b      	str	r3, [r1, #8]
 8012fe8:	7e93      	ldrb	r3, [r2, #26]
 8012fea:	b923      	cbnz	r3, 8012ff6 <dma_init+0x5a>
 8012fec:	688b      	ldr	r3, [r1, #8]
 8012fee:	f023 0310 	bic.w	r3, r3, #16
 8012ff2:	608b      	str	r3, [r1, #8]
 8012ff4:	bd10      	pop	{r4, pc}
 8012ff6:	688b      	ldr	r3, [r1, #8]
 8012ff8:	f043 0310 	orr.w	r3, r3, #16
 8012ffc:	e7f9      	b.n	8012ff2 <dma_init+0x56>

08012ffe <dma_circulation_disable>:
 8012ffe:	2314      	movs	r3, #20
 8013000:	4359      	muls	r1, r3
 8013002:	3008      	adds	r0, #8
 8013004:	580b      	ldr	r3, [r1, r0]
 8013006:	f023 0320 	bic.w	r3, r3, #32
 801300a:	500b      	str	r3, [r1, r0]
 801300c:	4770      	bx	lr

0801300e <dma_memory_to_memory_disable>:
 801300e:	2314      	movs	r3, #20
 8013010:	4359      	muls	r1, r3
 8013012:	3008      	adds	r0, #8
 8013014:	580b      	ldr	r3, [r1, r0]
 8013016:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 801301a:	500b      	str	r3, [r1, r0]
 801301c:	4770      	bx	lr
	...

08013020 <fmc_bank0_unlock>:
 8013020:	4b04      	ldr	r3, [pc, #16]	; (8013034 <fmc_bank0_unlock+0x14>)
 8013022:	691a      	ldr	r2, [r3, #16]
 8013024:	0612      	lsls	r2, r2, #24
 8013026:	bf41      	itttt	mi
 8013028:	4a03      	ldrmi	r2, [pc, #12]	; (8013038 <fmc_bank0_unlock+0x18>)
 801302a:	605a      	strmi	r2, [r3, #4]
 801302c:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 8013030:	605a      	strmi	r2, [r3, #4]
 8013032:	4770      	bx	lr
 8013034:	40022000 	andmi	r2, r2, r0
 8013038:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

0801303c <fmc_bank1_unlock>:
 801303c:	4b04      	ldr	r3, [pc, #16]	; (8013050 <fmc_bank1_unlock+0x14>)
 801303e:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8013040:	0612      	lsls	r2, r2, #24
 8013042:	bf41      	itttt	mi
 8013044:	4a03      	ldrmi	r2, [pc, #12]	; (8013054 <fmc_bank1_unlock+0x18>)
 8013046:	645a      	strmi	r2, [r3, #68]	; 0x44
 8013048:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 801304c:	645a      	strmi	r2, [r3, #68]	; 0x44
 801304e:	4770      	bx	lr
 8013050:	40022000 	andmi	r2, r2, r0
 8013054:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

08013058 <fmc_bank0_lock>:
 8013058:	4a02      	ldr	r2, [pc, #8]	; (8013064 <fmc_bank0_lock+0xc>)
 801305a:	6913      	ldr	r3, [r2, #16]
 801305c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8013060:	6113      	str	r3, [r2, #16]
 8013062:	4770      	bx	lr
 8013064:	40022000 	andmi	r2, r2, r0

08013068 <fmc_bank1_lock>:
 8013068:	4a02      	ldr	r2, [pc, #8]	; (8013074 <fmc_bank1_lock+0xc>)
 801306a:	6d13      	ldr	r3, [r2, #80]	; 0x50
 801306c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8013070:	6513      	str	r3, [r2, #80]	; 0x50
 8013072:	4770      	bx	lr
 8013074:	40022000 	andmi	r2, r2, r0

08013078 <fmc_bank0_state_get>:
 8013078:	4b07      	ldr	r3, [pc, #28]	; (8013098 <fmc_bank0_state_get+0x20>)
 801307a:	68da      	ldr	r2, [r3, #12]
 801307c:	07d1      	lsls	r1, r2, #31
 801307e:	d407      	bmi.n	8013090 <fmc_bank0_state_get+0x18>
 8013080:	68da      	ldr	r2, [r3, #12]
 8013082:	06d2      	lsls	r2, r2, #27
 8013084:	d406      	bmi.n	8013094 <fmc_bank0_state_get+0x1c>
 8013086:	68d8      	ldr	r0, [r3, #12]
 8013088:	f3c0 0080 	ubfx	r0, r0, #2, #1
 801308c:	0040      	lsls	r0, r0, #1
 801308e:	4770      	bx	lr
 8013090:	2001      	movs	r0, #1
 8013092:	4770      	bx	lr
 8013094:	2003      	movs	r0, #3
 8013096:	4770      	bx	lr
 8013098:	40022000 	andmi	r2, r2, r0

0801309c <fmc_bank1_state_get>:
 801309c:	4b07      	ldr	r3, [pc, #28]	; (80130bc <fmc_bank1_state_get+0x20>)
 801309e:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 80130a0:	07d1      	lsls	r1, r2, #31
 80130a2:	d407      	bmi.n	80130b4 <fmc_bank1_state_get+0x18>
 80130a4:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 80130a6:	06d2      	lsls	r2, r2, #27
 80130a8:	d406      	bmi.n	80130b8 <fmc_bank1_state_get+0x1c>
 80130aa:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80130ac:	f3c0 0080 	ubfx	r0, r0, #2, #1
 80130b0:	0040      	lsls	r0, r0, #1
 80130b2:	4770      	bx	lr
 80130b4:	2001      	movs	r0, #1
 80130b6:	4770      	bx	lr
 80130b8:	2003      	movs	r0, #3
 80130ba:	4770      	bx	lr
 80130bc:	40022000 	andmi	r2, r2, r0

080130c0 <fwdgt_enable>:
 80130c0:	f64c 42cc 	movw	r2, #52428	; 0xcccc
 80130c4:	4b01      	ldr	r3, [pc, #4]	; (80130cc <fwdgt_enable+0xc>)
 80130c6:	601a      	str	r2, [r3, #0]
 80130c8:	4770      	bx	lr
 80130ca:	bf00      	nop
 80130cc:	40003000 	andmi	r3, r0, r0

080130d0 <fwdgt_counter_reload>:
 80130d0:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
 80130d4:	4b01      	ldr	r3, [pc, #4]	; (80130dc <fwdgt_counter_reload+0xc>)
 80130d6:	601a      	str	r2, [r3, #0]
 80130d8:	4770      	bx	lr
 80130da:	bf00      	nop
 80130dc:	40003000 	andmi	r3, r0, r0

080130e0 <fwdgt_config>:
 80130e0:	f245 5355 	movw	r3, #21845	; 0x5555
 80130e4:	4a11      	ldr	r2, [pc, #68]	; (801312c <fwdgt_config+0x4c>)
 80130e6:	b510      	push	{r4, lr}
 80130e8:	4c11      	ldr	r4, [pc, #68]	; (8013130 <fwdgt_config+0x50>)
 80130ea:	6013      	str	r3, [r2, #0]
 80130ec:	68d3      	ldr	r3, [r2, #12]
 80130ee:	3c01      	subs	r4, #1
 80130f0:	f003 0301 	and.w	r3, r3, #1
 80130f4:	d013      	beq.n	801311e <fwdgt_config+0x3e>
 80130f6:	2b00      	cmp	r3, #0
 80130f8:	d1f8      	bne.n	80130ec <fwdgt_config+0xc>
 80130fa:	6051      	str	r1, [r2, #4]
 80130fc:	490c      	ldr	r1, [pc, #48]	; (8013130 <fwdgt_config+0x50>)
 80130fe:	4a0b      	ldr	r2, [pc, #44]	; (801312c <fwdgt_config+0x4c>)
 8013100:	68d3      	ldr	r3, [r2, #12]
 8013102:	3901      	subs	r1, #1
 8013104:	f003 0302 	and.w	r3, r3, #2
 8013108:	d00d      	beq.n	8013126 <fwdgt_config+0x46>
 801310a:	2b00      	cmp	r3, #0
 801310c:	d1f8      	bne.n	8013100 <fwdgt_config+0x20>
 801310e:	f64a 23aa 	movw	r3, #43690	; 0xaaaa
 8013112:	f3c0 000b 	ubfx	r0, r0, #0, #12
 8013116:	6090      	str	r0, [r2, #8]
 8013118:	2001      	movs	r0, #1
 801311a:	6013      	str	r3, [r2, #0]
 801311c:	e002      	b.n	8013124 <fwdgt_config+0x44>
 801311e:	2b00      	cmp	r3, #0
 8013120:	d0eb      	beq.n	80130fa <fwdgt_config+0x1a>
 8013122:	2000      	movs	r0, #0
 8013124:	bd10      	pop	{r4, pc}
 8013126:	2b00      	cmp	r3, #0
 8013128:	d1fb      	bne.n	8013122 <fwdgt_config+0x42>
 801312a:	e7f0      	b.n	801310e <fwdgt_config+0x2e>
 801312c:	40003000 	andmi	r3, r0, r0
 8013130:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

08013134 <gpio_init>:
 8013134:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013138:	f04f 0c0f 	mov.w	ip, #15
 801313c:	06cf      	lsls	r7, r1, #27
 801313e:	f04f 0400 	mov.w	r4, #0
 8013142:	f04f 0701 	mov.w	r7, #1
 8013146:	f001 050f 	and.w	r5, r1, #15
 801314a:	bf48      	it	mi
 801314c:	4315      	orrmi	r5, r2
 801314e:	fa23 f204 	lsr.w	r2, r3, r4
 8013152:	07d6      	lsls	r6, r2, #31
 8013154:	d510      	bpl.n	8013178 <gpio_init+0x44>
 8013156:	00a2      	lsls	r2, r4, #2
 8013158:	6806      	ldr	r6, [r0, #0]
 801315a:	fa0c fe02 	lsl.w	lr, ip, r2
 801315e:	ea26 060e 	bic.w	r6, r6, lr
 8013162:	fa05 f202 	lsl.w	r2, r5, r2
 8013166:	2928      	cmp	r1, #40	; 0x28
 8013168:	ea42 0206 	orr.w	r2, r2, r6
 801316c:	d128      	bne.n	80131c0 <gpio_init+0x8c>
 801316e:	fa07 f604 	lsl.w	r6, r7, r4
 8013172:	401e      	ands	r6, r3
 8013174:	6146      	str	r6, [r0, #20]
 8013176:	6002      	str	r2, [r0, #0]
 8013178:	3401      	adds	r4, #1
 801317a:	2c08      	cmp	r4, #8
 801317c:	d1e7      	bne.n	801314e <gpio_init+0x1a>
 801317e:	2600      	movs	r6, #0
 8013180:	f04f 0c0f 	mov.w	ip, #15
 8013184:	2701      	movs	r7, #1
 8013186:	f106 0208 	add.w	r2, r6, #8
 801318a:	fa23 f402 	lsr.w	r4, r3, r2
 801318e:	07e4      	lsls	r4, r4, #31
 8013190:	d511      	bpl.n	80131b6 <gpio_init+0x82>
 8013192:	00b4      	lsls	r4, r6, #2
 8013194:	f8d0 e004 	ldr.w	lr, [r0, #4]
 8013198:	fa0c f804 	lsl.w	r8, ip, r4
 801319c:	ea2e 0e08 	bic.w	lr, lr, r8
 80131a0:	fa05 f404 	lsl.w	r4, r5, r4
 80131a4:	2928      	cmp	r1, #40	; 0x28
 80131a6:	ea44 040e 	orr.w	r4, r4, lr
 80131aa:	d110      	bne.n	80131ce <gpio_init+0x9a>
 80131ac:	fa07 f202 	lsl.w	r2, r7, r2
 80131b0:	401a      	ands	r2, r3
 80131b2:	6142      	str	r2, [r0, #20]
 80131b4:	6044      	str	r4, [r0, #4]
 80131b6:	3601      	adds	r6, #1
 80131b8:	2e08      	cmp	r6, #8
 80131ba:	d1e4      	bne.n	8013186 <gpio_init+0x52>
 80131bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80131c0:	2948      	cmp	r1, #72	; 0x48
 80131c2:	bf02      	ittt	eq
 80131c4:	fa07 f604 	lsleq.w	r6, r7, r4
 80131c8:	401e      	andeq	r6, r3
 80131ca:	6106      	streq	r6, [r0, #16]
 80131cc:	e7d3      	b.n	8013176 <gpio_init+0x42>
 80131ce:	2948      	cmp	r1, #72	; 0x48
 80131d0:	bf02      	ittt	eq
 80131d2:	fa07 f202 	lsleq.w	r2, r7, r2
 80131d6:	401a      	andeq	r2, r3
 80131d8:	6102      	streq	r2, [r0, #16]
 80131da:	e7eb      	b.n	80131b4 <gpio_init+0x80>

080131dc <gpio_pin_remap_config>:
 80131dc:	2800      	cmp	r0, #0
 80131de:	4a16      	ldr	r2, [pc, #88]	; (8013238 <gpio_pin_remap_config+0x5c>)
 80131e0:	b530      	push	{r4, r5, lr}
 80131e2:	f400 1540 	and.w	r5, r0, #3145728	; 0x300000
 80131e6:	bfb4      	ite	lt
 80131e8:	69d3      	ldrlt	r3, [r2, #28]
 80131ea:	6853      	ldrge	r3, [r2, #4]
 80131ec:	f5b5 1f40 	cmp.w	r5, #3145728	; 0x300000
 80131f0:	b284      	uxth	r4, r0
 80131f2:	d110      	bne.n	8013216 <gpio_pin_remap_config+0x3a>
 80131f4:	6855      	ldr	r5, [r2, #4]
 80131f6:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 80131fa:	f025 6570 	bic.w	r5, r5, #251658240	; 0xf000000
 80131fe:	6055      	str	r5, [r2, #4]
 8013200:	b119      	cbz	r1, 801320a <gpio_pin_remap_config+0x2e>
 8013202:	0d42      	lsrs	r2, r0, #21
 8013204:	0112      	lsls	r2, r2, #4
 8013206:	4094      	lsls	r4, r2
 8013208:	4323      	orrs	r3, r4
 801320a:	4a0b      	ldr	r2, [pc, #44]	; (8013238 <gpio_pin_remap_config+0x5c>)
 801320c:	2800      	cmp	r0, #0
 801320e:	bfb4      	ite	lt
 8013210:	61d3      	strlt	r3, [r2, #28]
 8013212:	6053      	strge	r3, [r2, #4]
 8013214:	bd30      	pop	{r4, r5, pc}
 8013216:	02c2      	lsls	r2, r0, #11
 8013218:	bf4d      	iteet	mi
 801321a:	2203      	movmi	r2, #3
 801321c:	0d42      	lsrpl	r2, r0, #21
 801321e:	0112      	lslpl	r2, r2, #4
 8013220:	f3c0 4503 	ubfxmi	r5, r0, #16, #4
 8013224:	bf4c      	ite	mi
 8013226:	40aa      	lslmi	r2, r5
 8013228:	fa04 f202 	lslpl.w	r2, r4, r2
 801322c:	ea23 0302 	bic.w	r3, r3, r2
 8013230:	f043 6370 	orr.w	r3, r3, #251658240	; 0xf000000
 8013234:	e7e4      	b.n	8013200 <gpio_pin_remap_config+0x24>
 8013236:	bf00      	nop
 8013238:	40010000 	andmi	r0, r1, r0

0801323c <gpio_ethernet_phy_select>:
 801323c:	4b04      	ldr	r3, [pc, #16]	; (8013250 <gpio_ethernet_phy_select+0x14>)
 801323e:	685a      	ldr	r2, [r3, #4]
 8013240:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8013244:	605a      	str	r2, [r3, #4]
 8013246:	685a      	ldr	r2, [r3, #4]
 8013248:	4302      	orrs	r2, r0
 801324a:	605a      	str	r2, [r3, #4]
 801324c:	4770      	bx	lr
 801324e:	bf00      	nop
 8013250:	40010000 	andmi	r0, r1, r0

08013254 <pmu_backup_write_enable>:
 8013254:	4a02      	ldr	r2, [pc, #8]	; (8013260 <pmu_backup_write_enable+0xc>)
 8013256:	6813      	ldr	r3, [r2, #0]
 8013258:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 801325c:	6013      	str	r3, [r2, #0]
 801325e:	4770      	bx	lr
 8013260:	40007000 	andmi	r7, r0, r0

08013264 <rcu_periph_clock_enable>:
 8013264:	2201      	movs	r2, #1
 8013266:	0983      	lsrs	r3, r0, #6
 8013268:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801326c:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 8013270:	6819      	ldr	r1, [r3, #0]
 8013272:	f000 001f 	and.w	r0, r0, #31
 8013276:	4082      	lsls	r2, r0
 8013278:	430a      	orrs	r2, r1
 801327a:	601a      	str	r2, [r3, #0]
 801327c:	4770      	bx	lr

0801327e <rcu_periph_clock_disable>:
 801327e:	2101      	movs	r1, #1
 8013280:	0983      	lsrs	r3, r0, #6
 8013282:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8013286:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 801328a:	681a      	ldr	r2, [r3, #0]
 801328c:	f000 001f 	and.w	r0, r0, #31
 8013290:	4081      	lsls	r1, r0
 8013292:	ea22 0201 	bic.w	r2, r2, r1
 8013296:	601a      	str	r2, [r3, #0]
 8013298:	4770      	bx	lr

0801329a <rcu_periph_reset_enable>:
 801329a:	f7ff bfe3 	b.w	8013264 <rcu_periph_clock_enable>

0801329e <rcu_periph_reset_disable>:
 801329e:	f7ff bfee 	b.w	801327e <rcu_periph_clock_disable>
	...

080132a4 <rcu_bkp_reset_enable>:
 80132a4:	4a02      	ldr	r2, [pc, #8]	; (80132b0 <rcu_bkp_reset_enable+0xc>)
 80132a6:	6a13      	ldr	r3, [r2, #32]
 80132a8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80132ac:	6213      	str	r3, [r2, #32]
 80132ae:	4770      	bx	lr
 80132b0:	40021000 	andmi	r1, r2, r0

080132b4 <rcu_bkp_reset_disable>:
 80132b4:	4a02      	ldr	r2, [pc, #8]	; (80132c0 <rcu_bkp_reset_disable+0xc>)
 80132b6:	6a13      	ldr	r3, [r2, #32]
 80132b8:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80132bc:	6213      	str	r3, [r2, #32]
 80132be:	4770      	bx	lr
 80132c0:	40021000 	andmi	r1, r2, r0

080132c4 <rcu_ckout0_config>:
 80132c4:	4a06      	ldr	r2, [pc, #24]	; (80132e0 <rcu_ckout0_config+0x1c>)
 80132c6:	6853      	ldr	r3, [r2, #4]
 80132c8:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 80132cc:	4303      	orrs	r3, r0
 80132ce:	6053      	str	r3, [r2, #4]
 80132d0:	f8d2 3080 	ldr.w	r3, [r2, #128]	; 0x80
 80132d4:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 80132d8:	430b      	orrs	r3, r1
 80132da:	f8c2 3080 	str.w	r3, [r2, #128]	; 0x80
 80132de:	4770      	bx	lr
 80132e0:	40021000 	andmi	r1, r2, r0

080132e4 <rcu_pll2_config>:
 80132e4:	4b04      	ldr	r3, [pc, #16]	; (80132f8 <rcu_pll2_config+0x14>)
 80132e6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80132e8:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
 80132ec:	62da      	str	r2, [r3, #44]	; 0x2c
 80132ee:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80132f0:	4302      	orrs	r2, r0
 80132f2:	62da      	str	r2, [r3, #44]	; 0x2c
 80132f4:	4770      	bx	lr
 80132f6:	bf00      	nop
 80132f8:	40021000 	andmi	r1, r2, r0

080132fc <rcu_adc_clock_config>:
 80132fc:	490c      	ldr	r1, [pc, #48]	; (8013330 <rcu_adc_clock_config+0x34>)
 80132fe:	2805      	cmp	r0, #5
 8013300:	684b      	ldr	r3, [r1, #4]
 8013302:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8013306:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 801330a:	d006      	beq.n	801331a <rcu_adc_clock_config+0x1e>
 801330c:	d803      	bhi.n	8013316 <rcu_adc_clock_config+0x1a>
 801330e:	2804      	cmp	r0, #4
 8013310:	d10a      	bne.n	8013328 <rcu_adc_clock_config+0x2c>
 8013312:	604b      	str	r3, [r1, #4]
 8013314:	4770      	bx	lr
 8013316:	2807      	cmp	r0, #7
 8013318:	d1fb      	bne.n	8013312 <rcu_adc_clock_config+0x16>
 801331a:	4a06      	ldr	r2, [pc, #24]	; (8013334 <rcu_adc_clock_config+0x38>)
 801331c:	ea02 3280 	and.w	r2, r2, r0, lsl #14
 8013320:	4313      	orrs	r3, r2
 8013322:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8013326:	e7f4      	b.n	8013312 <rcu_adc_clock_config+0x16>
 8013328:	ea43 3380 	orr.w	r3, r3, r0, lsl #14
 801332c:	e7f1      	b.n	8013312 <rcu_adc_clock_config+0x16>
 801332e:	bf00      	nop
 8013330:	40021000 	andmi	r1, r2, r0
 8013334:	fffec000 			; <UNDEFINED> instruction: 0xfffec000

08013338 <rcu_flag_get>:
 8013338:	0983      	lsrs	r3, r0, #6
 801333a:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801333e:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 8013342:	681a      	ldr	r2, [r3, #0]
 8013344:	2301      	movs	r3, #1
 8013346:	f000 001f 	and.w	r0, r0, #31
 801334a:	4083      	lsls	r3, r0
 801334c:	4213      	tst	r3, r2
 801334e:	bf14      	ite	ne
 8013350:	2001      	movne	r0, #1
 8013352:	2000      	moveq	r0, #0
 8013354:	4770      	bx	lr
	...

08013358 <rcu_osci_stab_wait>:
 8013358:	281c      	cmp	r0, #28
 801335a:	b508      	push	{r3, lr}
 801335c:	d056      	beq.n	801340c <rcu_osci_stab_wait+0xb4>
 801335e:	d812      	bhi.n	8013386 <rcu_osci_stab_wait+0x2e>
 8013360:	2818      	cmp	r0, #24
 8013362:	d04a      	beq.n	80133fa <rcu_osci_stab_wait+0xa2>
 8013364:	d804      	bhi.n	8013370 <rcu_osci_stab_wait+0x18>
 8013366:	b398      	cbz	r0, 80133d0 <rcu_osci_stab_wait+0x78>
 8013368:	2810      	cmp	r0, #16
 801336a:	d022      	beq.n	80133b2 <rcu_osci_stab_wait+0x5a>
 801336c:	2000      	movs	r0, #0
 801336e:	bd08      	pop	{r3, pc}
 8013370:	281a      	cmp	r0, #26
 8013372:	d1fb      	bne.n	801336c <rcu_osci_stab_wait+0x14>
 8013374:	492f      	ldr	r1, [pc, #188]	; (8013434 <rcu_osci_stab_wait+0xdc>)
 8013376:	201b      	movs	r0, #27
 8013378:	f7ff ffde 	bl	8013338 <rcu_flag_get>
 801337c:	b908      	cbnz	r0, 8013382 <rcu_osci_stab_wait+0x2a>
 801337e:	3901      	subs	r1, #1
 8013380:	d1f9      	bne.n	8013376 <rcu_osci_stab_wait+0x1e>
 8013382:	201b      	movs	r0, #27
 8013384:	e01e      	b.n	80133c4 <rcu_osci_stab_wait+0x6c>
 8013386:	f5b0 6f10 	cmp.w	r0, #2304	; 0x900
 801338a:	d02b      	beq.n	80133e4 <rcu_osci_stab_wait+0x8c>
 801338c:	f242 431c 	movw	r3, #9244	; 0x241c
 8013390:	4298      	cmp	r0, r3
 8013392:	d044      	beq.n	801341e <rcu_osci_stab_wait+0xc6>
 8013394:	f5b0 6f00 	cmp.w	r0, #2048	; 0x800
 8013398:	d1e8      	bne.n	801336c <rcu_osci_stab_wait+0x14>
 801339a:	f06f 417c 	mvn.w	r1, #4227858432	; 0xfc000000
 801339e:	f640 0001 	movw	r0, #2049	; 0x801
 80133a2:	f7ff ffc9 	bl	8013338 <rcu_flag_get>
 80133a6:	b908      	cbnz	r0, 80133ac <rcu_osci_stab_wait+0x54>
 80133a8:	3901      	subs	r1, #1
 80133aa:	d1f8      	bne.n	801339e <rcu_osci_stab_wait+0x46>
 80133ac:	f640 0001 	movw	r0, #2049	; 0x801
 80133b0:	e008      	b.n	80133c4 <rcu_osci_stab_wait+0x6c>
 80133b2:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80133b6:	2011      	movs	r0, #17
 80133b8:	f7ff ffbe 	bl	8013338 <rcu_flag_get>
 80133bc:	b908      	cbnz	r0, 80133c2 <rcu_osci_stab_wait+0x6a>
 80133be:	3901      	subs	r1, #1
 80133c0:	d1f9      	bne.n	80133b6 <rcu_osci_stab_wait+0x5e>
 80133c2:	2011      	movs	r0, #17
 80133c4:	f7ff ffb8 	bl	8013338 <rcu_flag_get>
 80133c8:	3800      	subs	r0, #0
 80133ca:	bf18      	it	ne
 80133cc:	2001      	movne	r0, #1
 80133ce:	e7ce      	b.n	801336e <rcu_osci_stab_wait+0x16>
 80133d0:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 80133d4:	2001      	movs	r0, #1
 80133d6:	f7ff ffaf 	bl	8013338 <rcu_flag_get>
 80133da:	b908      	cbnz	r0, 80133e0 <rcu_osci_stab_wait+0x88>
 80133dc:	3901      	subs	r1, #1
 80133de:	d1f9      	bne.n	80133d4 <rcu_osci_stab_wait+0x7c>
 80133e0:	2001      	movs	r0, #1
 80133e2:	e7ef      	b.n	80133c4 <rcu_osci_stab_wait+0x6c>
 80133e4:	4913      	ldr	r1, [pc, #76]	; (8013434 <rcu_osci_stab_wait+0xdc>)
 80133e6:	f640 1001 	movw	r0, #2305	; 0x901
 80133ea:	f7ff ffa5 	bl	8013338 <rcu_flag_get>
 80133ee:	b908      	cbnz	r0, 80133f4 <rcu_osci_stab_wait+0x9c>
 80133f0:	3901      	subs	r1, #1
 80133f2:	d1f8      	bne.n	80133e6 <rcu_osci_stab_wait+0x8e>
 80133f4:	f640 1001 	movw	r0, #2305	; 0x901
 80133f8:	e7e4      	b.n	80133c4 <rcu_osci_stab_wait+0x6c>
 80133fa:	490e      	ldr	r1, [pc, #56]	; (8013434 <rcu_osci_stab_wait+0xdc>)
 80133fc:	2019      	movs	r0, #25
 80133fe:	f7ff ff9b 	bl	8013338 <rcu_flag_get>
 8013402:	b908      	cbnz	r0, 8013408 <rcu_osci_stab_wait+0xb0>
 8013404:	3901      	subs	r1, #1
 8013406:	d1f9      	bne.n	80133fc <rcu_osci_stab_wait+0xa4>
 8013408:	2019      	movs	r0, #25
 801340a:	e7db      	b.n	80133c4 <rcu_osci_stab_wait+0x6c>
 801340c:	4909      	ldr	r1, [pc, #36]	; (8013434 <rcu_osci_stab_wait+0xdc>)
 801340e:	201d      	movs	r0, #29
 8013410:	f7ff ff92 	bl	8013338 <rcu_flag_get>
 8013414:	b908      	cbnz	r0, 801341a <rcu_osci_stab_wait+0xc2>
 8013416:	3901      	subs	r1, #1
 8013418:	d1f9      	bne.n	801340e <rcu_osci_stab_wait+0xb6>
 801341a:	201d      	movs	r0, #29
 801341c:	e7d2      	b.n	80133c4 <rcu_osci_stab_wait+0x6c>
 801341e:	4905      	ldr	r1, [pc, #20]	; (8013434 <rcu_osci_stab_wait+0xdc>)
 8013420:	f242 401d 	movw	r0, #9245	; 0x241d
 8013424:	f7ff ff88 	bl	8013338 <rcu_flag_get>
 8013428:	b908      	cbnz	r0, 801342e <rcu_osci_stab_wait+0xd6>
 801342a:	3901      	subs	r1, #1
 801342c:	d1f8      	bne.n	8013420 <rcu_osci_stab_wait+0xc8>
 801342e:	f242 401d 	movw	r0, #9245	; 0x241d
 8013432:	e7c7      	b.n	80133c4 <rcu_osci_stab_wait+0x6c>
 8013434:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

08013438 <rcu_osci_on>:
 8013438:	f7ff bf14 	b.w	8013264 <rcu_periph_clock_enable>

0801343c <rcu_clock_freq_get>:
 801343c:	4b3e      	ldr	r3, [pc, #248]	; (8013538 <rcu_clock_freq_get+0xfc>)
 801343e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013440:	4604      	mov	r4, r0
 8013442:	461f      	mov	r7, r3
 8013444:	b089      	sub	sp, #36	; 0x24
 8013446:	ad04      	add	r5, sp, #16
 8013448:	f103 0610 	add.w	r6, r3, #16
 801344c:	462a      	mov	r2, r5
 801344e:	6818      	ldr	r0, [r3, #0]
 8013450:	6859      	ldr	r1, [r3, #4]
 8013452:	3308      	adds	r3, #8
 8013454:	c203      	stmia	r2!, {r0, r1}
 8013456:	42b3      	cmp	r3, r6
 8013458:	4615      	mov	r5, r2
 801345a:	d1f7      	bne.n	801344c <rcu_clock_freq_get+0x10>
 801345c:	466b      	mov	r3, sp
 801345e:	6938      	ldr	r0, [r7, #16]
 8013460:	6871      	ldr	r1, [r6, #4]
 8013462:	4a36      	ldr	r2, [pc, #216]	; (801353c <rcu_clock_freq_get+0x100>)
 8013464:	c303      	stmia	r3!, {r0, r1}
 8013466:	c303      	stmia	r3!, {r0, r1}
 8013468:	6853      	ldr	r3, [r2, #4]
 801346a:	f3c3 0381 	ubfx	r3, r3, #2, #2
 801346e:	2b01      	cmp	r3, #1
 8013470:	d053      	beq.n	801351a <rcu_clock_freq_get+0xde>
 8013472:	2b02      	cmp	r3, #2
 8013474:	d153      	bne.n	801351e <rcu_clock_freq_get+0xe2>
 8013476:	6853      	ldr	r3, [r2, #4]
 8013478:	03dd      	lsls	r5, r3, #15
 801347a:	d523      	bpl.n	80134c4 <rcu_clock_freq_get+0x88>
 801347c:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 801347e:	f413 3f80 	tst.w	r3, #65536	; 0x10000
 8013482:	4b2f      	ldr	r3, [pc, #188]	; (8013540 <rcu_clock_freq_get+0x104>)
 8013484:	d00e      	beq.n	80134a4 <rcu_clock_freq_get+0x68>
 8013486:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 8013488:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
 801348a:	f3c1 1103 	ubfx	r1, r1, #4, #4
 801348e:	f3c0 2003 	ubfx	r0, r0, #8, #4
 8013492:	3101      	adds	r1, #1
 8013494:	280f      	cmp	r0, #15
 8013496:	f100 0502 	add.w	r5, r0, #2
 801349a:	fbb3 f3f1 	udiv	r3, r3, r1
 801349e:	bf08      	it	eq
 80134a0:	2514      	moveq	r5, #20
 80134a2:	436b      	muls	r3, r5
 80134a4:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 80134a6:	f001 010f 	and.w	r1, r1, #15
 80134aa:	3101      	adds	r1, #1
 80134ac:	fbb3 f3f1 	udiv	r3, r3, r1
 80134b0:	6851      	ldr	r1, [r2, #4]
 80134b2:	6850      	ldr	r0, [r2, #4]
 80134b4:	f3c1 4183 	ubfx	r1, r1, #18, #4
 80134b8:	0080      	lsls	r0, r0, #2
 80134ba:	d505      	bpl.n	80134c8 <rcu_clock_freq_get+0x8c>
 80134bc:	f041 0110 	orr.w	r1, r1, #16
 80134c0:	3101      	adds	r1, #1
 80134c2:	e027      	b.n	8013514 <rcu_clock_freq_get+0xd8>
 80134c4:	4b1f      	ldr	r3, [pc, #124]	; (8013544 <rcu_clock_freq_get+0x108>)
 80134c6:	e7f3      	b.n	80134b0 <rcu_clock_freq_get+0x74>
 80134c8:	290d      	cmp	r1, #13
 80134ca:	d120      	bne.n	801350e <rcu_clock_freq_get+0xd2>
 80134cc:	2006      	movs	r0, #6
 80134ce:	0859      	lsrs	r1, r3, #1
 80134d0:	fb00 1003 	mla	r0, r0, r3, r1
 80134d4:	6853      	ldr	r3, [r2, #4]
 80134d6:	6851      	ldr	r1, [r2, #4]
 80134d8:	f3c3 1303 	ubfx	r3, r3, #4, #4
 80134dc:	6852      	ldr	r2, [r2, #4]
 80134de:	3320      	adds	r3, #32
 80134e0:	446b      	add	r3, sp
 80134e2:	f3c1 2102 	ubfx	r1, r1, #8, #3
 80134e6:	f3c2 22c2 	ubfx	r2, r2, #11, #3
 80134ea:	f813 3c10 	ldrb.w	r3, [r3, #-16]
 80134ee:	3120      	adds	r1, #32
 80134f0:	3220      	adds	r2, #32
 80134f2:	4469      	add	r1, sp
 80134f4:	446a      	add	r2, sp
 80134f6:	f811 1c20 	ldrb.w	r1, [r1, #-32]
 80134fa:	f812 2c18 	ldrb.w	r2, [r2, #-24]
 80134fe:	fa20 f303 	lsr.w	r3, r0, r3
 8013502:	2c03      	cmp	r4, #3
 8013504:	d816      	bhi.n	8013534 <rcu_clock_freq_get+0xf8>
 8013506:	e8df f004 	tbb	[pc, r4]
 801350a:	120f0c0d 	andne	r0, pc, #3328	; 0xd00
 801350e:	290f      	cmp	r1, #15
 8013510:	d0d6      	beq.n	80134c0 <rcu_clock_freq_get+0x84>
 8013512:	3102      	adds	r1, #2
 8013514:	fb03 f001 	mul.w	r0, r3, r1
 8013518:	e7dc      	b.n	80134d4 <rcu_clock_freq_get+0x98>
 801351a:	4809      	ldr	r0, [pc, #36]	; (8013540 <rcu_clock_freq_get+0x104>)
 801351c:	e7da      	b.n	80134d4 <rcu_clock_freq_get+0x98>
 801351e:	480a      	ldr	r0, [pc, #40]	; (8013548 <rcu_clock_freq_get+0x10c>)
 8013520:	e7d8      	b.n	80134d4 <rcu_clock_freq_get+0x98>
 8013522:	4618      	mov	r0, r3
 8013524:	b009      	add	sp, #36	; 0x24
 8013526:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013528:	fa23 f001 	lsr.w	r0, r3, r1
 801352c:	e7fa      	b.n	8013524 <rcu_clock_freq_get+0xe8>
 801352e:	fa23 f002 	lsr.w	r0, r3, r2
 8013532:	e7f7      	b.n	8013524 <rcu_clock_freq_get+0xe8>
 8013534:	2000      	movs	r0, #0
 8013536:	e7f5      	b.n	8013524 <rcu_clock_freq_get+0xe8>
 8013538:	08014cf8 	stmdaeq	r1, {r3, r4, r5, r6, r7, sl, fp, lr}
 801353c:	40021000 	andmi	r1, r2, r0
 8013540:	017d7840 	cmneq	sp, r0, asr #16
 8013544:	003d0900 	eorseq	r0, sp, r0, lsl #18
 8013548:	007a1200 	rsbseq	r1, sl, r0, lsl #4

0801354c <timer_deinit>:
 801354c:	b508      	push	{r3, lr}
 801354e:	4b4e      	ldr	r3, [pc, #312]	; (8013688 <timer_deinit+0x13c>)
 8013550:	4298      	cmp	r0, r3
 8013552:	f000 8092 	beq.w	801367a <timer_deinit+0x12e>
 8013556:	d822      	bhi.n	801359e <timer_deinit+0x52>
 8013558:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
 801355c:	4298      	cmp	r0, r3
 801355e:	d062      	beq.n	8013626 <timer_deinit+0xda>
 8013560:	d80b      	bhi.n	801357a <timer_deinit+0x2e>
 8013562:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8013566:	4298      	cmp	r0, r3
 8013568:	d04f      	beq.n	801360a <timer_deinit+0xbe>
 801356a:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 801356e:	4298      	cmp	r0, r3
 8013570:	d052      	beq.n	8013618 <timer_deinit+0xcc>
 8013572:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8013576:	d041      	beq.n	80135fc <timer_deinit+0xb0>
 8013578:	bd08      	pop	{r3, pc}
 801357a:	4b44      	ldr	r3, [pc, #272]	; (801368c <timer_deinit+0x140>)
 801357c:	4298      	cmp	r0, r3
 801357e:	d059      	beq.n	8013634 <timer_deinit+0xe8>
 8013580:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8013584:	4298      	cmp	r0, r3
 8013586:	d071      	beq.n	801366c <timer_deinit+0x120>
 8013588:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 801358c:	4298      	cmp	r0, r3
 801358e:	d1f3      	bne.n	8013578 <timer_deinit+0x2c>
 8013590:	f240 4004 	movw	r0, #1028	; 0x404
 8013594:	f7ff fe81 	bl	801329a <rcu_periph_reset_enable>
 8013598:	f240 4004 	movw	r0, #1028	; 0x404
 801359c:	e02a      	b.n	80135f4 <timer_deinit+0xa8>
 801359e:	4b3c      	ldr	r3, [pc, #240]	; (8013690 <timer_deinit+0x144>)
 80135a0:	4298      	cmp	r0, r3
 80135a2:	d055      	beq.n	8013650 <timer_deinit+0x104>
 80135a4:	d812      	bhi.n	80135cc <timer_deinit+0x80>
 80135a6:	f5a3 5300 	sub.w	r3, r3, #8192	; 0x2000
 80135aa:	4298      	cmp	r0, r3
 80135ac:	d01c      	beq.n	80135e8 <timer_deinit+0x9c>
 80135ae:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80135b2:	4298      	cmp	r0, r3
 80135b4:	d045      	beq.n	8013642 <timer_deinit+0xf6>
 80135b6:	f5a3 338a 	sub.w	r3, r3, #70656	; 0x11400
 80135ba:	4298      	cmp	r0, r3
 80135bc:	d1dc      	bne.n	8013578 <timer_deinit+0x2c>
 80135be:	f44f 6081 	mov.w	r0, #1032	; 0x408
 80135c2:	f7ff fe6a 	bl	801329a <rcu_periph_reset_enable>
 80135c6:	f44f 6081 	mov.w	r0, #1032	; 0x408
 80135ca:	e013      	b.n	80135f4 <timer_deinit+0xa8>
 80135cc:	4b31      	ldr	r3, [pc, #196]	; (8013694 <timer_deinit+0x148>)
 80135ce:	4298      	cmp	r0, r3
 80135d0:	d045      	beq.n	801365e <timer_deinit+0x112>
 80135d2:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80135d6:	4298      	cmp	r0, r3
 80135d8:	d1ce      	bne.n	8013578 <timer_deinit+0x2c>
 80135da:	f240 3015 	movw	r0, #789	; 0x315
 80135de:	f7ff fe5c 	bl	801329a <rcu_periph_reset_enable>
 80135e2:	f240 3015 	movw	r0, #789	; 0x315
 80135e6:	e005      	b.n	80135f4 <timer_deinit+0xa8>
 80135e8:	f240 300b 	movw	r0, #779	; 0x30b
 80135ec:	f7ff fe55 	bl	801329a <rcu_periph_reset_enable>
 80135f0:	f240 300b 	movw	r0, #779	; 0x30b
 80135f4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80135f8:	f7ff be51 	b.w	801329e <rcu_periph_reset_disable>
 80135fc:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8013600:	f7ff fe4b 	bl	801329a <rcu_periph_reset_enable>
 8013604:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8013608:	e7f4      	b.n	80135f4 <timer_deinit+0xa8>
 801360a:	f240 4001 	movw	r0, #1025	; 0x401
 801360e:	f7ff fe44 	bl	801329a <rcu_periph_reset_enable>
 8013612:	f240 4001 	movw	r0, #1025	; 0x401
 8013616:	e7ed      	b.n	80135f4 <timer_deinit+0xa8>
 8013618:	f240 4002 	movw	r0, #1026	; 0x402
 801361c:	f7ff fe3d 	bl	801329a <rcu_periph_reset_enable>
 8013620:	f240 4002 	movw	r0, #1026	; 0x402
 8013624:	e7e6      	b.n	80135f4 <timer_deinit+0xa8>
 8013626:	f240 4003 	movw	r0, #1027	; 0x403
 801362a:	f7ff fe36 	bl	801329a <rcu_periph_reset_enable>
 801362e:	f240 4003 	movw	r0, #1027	; 0x403
 8013632:	e7df      	b.n	80135f4 <timer_deinit+0xa8>
 8013634:	f240 4005 	movw	r0, #1029	; 0x405
 8013638:	f7ff fe2f 	bl	801329a <rcu_periph_reset_enable>
 801363c:	f240 4005 	movw	r0, #1029	; 0x405
 8013640:	e7d8      	b.n	80135f4 <timer_deinit+0xa8>
 8013642:	f240 300d 	movw	r0, #781	; 0x30d
 8013646:	f7ff fe28 	bl	801329a <rcu_periph_reset_enable>
 801364a:	f240 300d 	movw	r0, #781	; 0x30d
 801364e:	e7d1      	b.n	80135f4 <timer_deinit+0xa8>
 8013650:	f240 3013 	movw	r0, #787	; 0x313
 8013654:	f7ff fe21 	bl	801329a <rcu_periph_reset_enable>
 8013658:	f240 3013 	movw	r0, #787	; 0x313
 801365c:	e7ca      	b.n	80135f4 <timer_deinit+0xa8>
 801365e:	f44f 7045 	mov.w	r0, #788	; 0x314
 8013662:	f7ff fe1a 	bl	801329a <rcu_periph_reset_enable>
 8013666:	f44f 7045 	mov.w	r0, #788	; 0x314
 801366a:	e7c3      	b.n	80135f4 <timer_deinit+0xa8>
 801366c:	f240 4006 	movw	r0, #1030	; 0x406
 8013670:	f7ff fe13 	bl	801329a <rcu_periph_reset_enable>
 8013674:	f240 4006 	movw	r0, #1030	; 0x406
 8013678:	e7bc      	b.n	80135f4 <timer_deinit+0xa8>
 801367a:	f240 4007 	movw	r0, #1031	; 0x407
 801367e:	f7ff fe0c 	bl	801329a <rcu_periph_reset_enable>
 8013682:	f240 4007 	movw	r0, #1031	; 0x407
 8013686:	e7b5      	b.n	80135f4 <timer_deinit+0xa8>
 8013688:	40001c00 	andmi	r1, r0, r0, lsl #24
 801368c:	40001400 	andmi	r1, r0, r0, lsl #8
 8013690:	40014c00 	andmi	r4, r1, r0, lsl #24
 8013694:	40015000 	andmi	r5, r1, r0

08013698 <timer_init>:
 8013698:	880b      	ldrh	r3, [r1, #0]
 801369a:	6283      	str	r3, [r0, #40]	; 0x28
 801369c:	4b26      	ldr	r3, [pc, #152]	; (8013738 <timer_init+0xa0>)
 801369e:	4298      	cmp	r0, r3
 80136a0:	d018      	beq.n	80136d4 <timer_init+0x3c>
 80136a2:	f420 6240 	bic.w	r2, r0, #3072	; 0xc00
 80136a6:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 80136aa:	f420 6380 	bic.w	r3, r0, #1024	; 0x400
 80136ae:	d011      	beq.n	80136d4 <timer_init+0x3c>
 80136b0:	4a22      	ldr	r2, [pc, #136]	; (801373c <timer_init+0xa4>)
 80136b2:	4290      	cmp	r0, r2
 80136b4:	d00e      	beq.n	80136d4 <timer_init+0x3c>
 80136b6:	f502 52c0 	add.w	r2, r2, #6144	; 0x1800
 80136ba:	4290      	cmp	r0, r2
 80136bc:	d00a      	beq.n	80136d4 <timer_init+0x3c>
 80136be:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80136c2:	4293      	cmp	r3, r2
 80136c4:	d006      	beq.n	80136d4 <timer_init+0x3c>
 80136c6:	f5a2 329c 	sub.w	r2, r2, #79872	; 0x13800
 80136ca:	4293      	cmp	r3, r2
 80136cc:	d002      	beq.n	80136d4 <timer_init+0x3c>
 80136ce:	4b1c      	ldr	r3, [pc, #112]	; (8013740 <timer_init+0xa8>)
 80136d0:	4298      	cmp	r0, r3
 80136d2:	d10f      	bne.n	80136f4 <timer_init+0x5c>
 80136d4:	6803      	ldr	r3, [r0, #0]
 80136d6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80136da:	6003      	str	r3, [r0, #0]
 80136dc:	884b      	ldrh	r3, [r1, #2]
 80136de:	6802      	ldr	r2, [r0, #0]
 80136e0:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80136e4:	4313      	orrs	r3, r2
 80136e6:	6003      	str	r3, [r0, #0]
 80136e8:	888b      	ldrh	r3, [r1, #4]
 80136ea:	6802      	ldr	r2, [r0, #0]
 80136ec:	f003 0310 	and.w	r3, r3, #16
 80136f0:	4313      	orrs	r3, r2
 80136f2:	6003      	str	r3, [r0, #0]
 80136f4:	688b      	ldr	r3, [r1, #8]
 80136f6:	62c3      	str	r3, [r0, #44]	; 0x2c
 80136f8:	4b12      	ldr	r3, [pc, #72]	; (8013744 <timer_init+0xac>)
 80136fa:	4298      	cmp	r0, r3
 80136fc:	d003      	beq.n	8013706 <timer_init+0x6e>
 80136fe:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8013702:	4298      	cmp	r0, r3
 8013704:	d104      	bne.n	8013710 <timer_init+0x78>
 8013706:	6943      	ldr	r3, [r0, #20]
 8013708:	f043 0301 	orr.w	r3, r3, #1
 801370c:	6143      	str	r3, [r0, #20]
 801370e:	4770      	bx	lr
 8013710:	6803      	ldr	r3, [r0, #0]
 8013712:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8013716:	6003      	str	r3, [r0, #0]
 8013718:	898b      	ldrh	r3, [r1, #12]
 801371a:	6802      	ldr	r2, [r0, #0]
 801371c:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8013720:	4313      	orrs	r3, r2
 8013722:	6003      	str	r3, [r0, #0]
 8013724:	4b04      	ldr	r3, [pc, #16]	; (8013738 <timer_init+0xa0>)
 8013726:	4298      	cmp	r0, r3
 8013728:	d002      	beq.n	8013730 <timer_init+0x98>
 801372a:	4b04      	ldr	r3, [pc, #16]	; (801373c <timer_init+0xa4>)
 801372c:	4298      	cmp	r0, r3
 801372e:	d1ea      	bne.n	8013706 <timer_init+0x6e>
 8013730:	7b8b      	ldrb	r3, [r1, #14]
 8013732:	6303      	str	r3, [r0, #48]	; 0x30
 8013734:	e7e7      	b.n	8013706 <timer_init+0x6e>
 8013736:	bf00      	nop
 8013738:	40012c00 	andmi	r2, r1, r0, lsl #24
 801373c:	40013400 	andmi	r3, r1, r0, lsl #8
 8013740:	40002000 	andmi	r2, r0, r0
 8013744:	40001000 	andmi	r1, r0, r0

08013748 <timer_enable>:
 8013748:	6803      	ldr	r3, [r0, #0]
 801374a:	f043 0301 	orr.w	r3, r3, #1
 801374e:	6003      	str	r3, [r0, #0]
 8013750:	4770      	bx	lr

08013752 <timer_channel_output_mode_config>:
 8013752:	2903      	cmp	r1, #3
 8013754:	d81a      	bhi.n	801378c <timer_channel_output_mode_config+0x3a>
 8013756:	e8df f001 	tbb	[pc, r1]
 801375a:	1a120a02 	bne	8495f6a <__exidx_end+0x47edfa>
 801375e:	6983      	ldr	r3, [r0, #24]
 8013760:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8013764:	6183      	str	r3, [r0, #24]
 8013766:	6983      	ldr	r3, [r0, #24]
 8013768:	4313      	orrs	r3, r2
 801376a:	6183      	str	r3, [r0, #24]
 801376c:	4770      	bx	lr
 801376e:	6983      	ldr	r3, [r0, #24]
 8013770:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8013774:	6183      	str	r3, [r0, #24]
 8013776:	6983      	ldr	r3, [r0, #24]
 8013778:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 801377c:	e7f5      	b.n	801376a <timer_channel_output_mode_config+0x18>
 801377e:	69c3      	ldr	r3, [r0, #28]
 8013780:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8013784:	61c3      	str	r3, [r0, #28]
 8013786:	69c3      	ldr	r3, [r0, #28]
 8013788:	4313      	orrs	r3, r2
 801378a:	61c3      	str	r3, [r0, #28]
 801378c:	4770      	bx	lr
 801378e:	69c3      	ldr	r3, [r0, #28]
 8013790:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8013794:	61c3      	str	r3, [r0, #28]
 8013796:	69c3      	ldr	r3, [r0, #28]
 8013798:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 801379c:	e7f5      	b.n	801378a <timer_channel_output_mode_config+0x38>

0801379e <timer_channel_output_pulse_value_config>:
 801379e:	2903      	cmp	r1, #3
 80137a0:	d80a      	bhi.n	80137b8 <timer_channel_output_pulse_value_config+0x1a>
 80137a2:	e8df f001 	tbb	[pc, r1]
 80137a6:	08060402 	stmdaeq	r6, {r1, sl}
 80137aa:	6342      	str	r2, [r0, #52]	; 0x34
 80137ac:	4770      	bx	lr
 80137ae:	6382      	str	r2, [r0, #56]	; 0x38
 80137b0:	4770      	bx	lr
 80137b2:	63c2      	str	r2, [r0, #60]	; 0x3c
 80137b4:	4770      	bx	lr
 80137b6:	6402      	str	r2, [r0, #64]	; 0x40
 80137b8:	4770      	bx	lr

080137ba <timer_input_trigger_source_select>:
 80137ba:	6883      	ldr	r3, [r0, #8]
 80137bc:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80137c0:	6083      	str	r3, [r0, #8]
 80137c2:	6883      	ldr	r3, [r0, #8]
 80137c4:	430b      	orrs	r3, r1
 80137c6:	6083      	str	r3, [r0, #8]
 80137c8:	4770      	bx	lr

080137ca <timer_master_output_trigger_source_select>:
 80137ca:	6843      	ldr	r3, [r0, #4]
 80137cc:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80137d0:	6043      	str	r3, [r0, #4]
 80137d2:	6843      	ldr	r3, [r0, #4]
 80137d4:	430b      	orrs	r3, r1
 80137d6:	6043      	str	r3, [r0, #4]
 80137d8:	4770      	bx	lr

080137da <timer_slave_mode_select>:
 80137da:	6883      	ldr	r3, [r0, #8]
 80137dc:	f023 0307 	bic.w	r3, r3, #7
 80137e0:	6083      	str	r3, [r0, #8]
 80137e2:	6883      	ldr	r3, [r0, #8]
 80137e4:	430b      	orrs	r3, r1
 80137e6:	6083      	str	r3, [r0, #8]
 80137e8:	4770      	bx	lr

080137ea <timer_master_slave_mode_config>:
 80137ea:	2980      	cmp	r1, #128	; 0x80
 80137ec:	d104      	bne.n	80137f8 <timer_master_slave_mode_config+0xe>
 80137ee:	6883      	ldr	r3, [r0, #8]
 80137f0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80137f4:	6083      	str	r3, [r0, #8]
 80137f6:	4770      	bx	lr
 80137f8:	2900      	cmp	r1, #0
 80137fa:	d1fc      	bne.n	80137f6 <timer_master_slave_mode_config+0xc>
 80137fc:	6883      	ldr	r3, [r0, #8]
 80137fe:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8013802:	e7f7      	b.n	80137f4 <timer_master_slave_mode_config+0xa>

08013804 <timer_interrupt_enable>:
 8013804:	68c3      	ldr	r3, [r0, #12]
 8013806:	430b      	orrs	r3, r1
 8013808:	60c3      	str	r3, [r0, #12]
 801380a:	4770      	bx	lr

0801380c <timer_interrupt_flag_clear>:
 801380c:	43c9      	mvns	r1, r1
 801380e:	6101      	str	r1, [r0, #16]
 8013810:	4770      	bx	lr

08013812 <timer_flag_clear>:
 8013812:	43c9      	mvns	r1, r1
 8013814:	6101      	str	r1, [r0, #16]
 8013816:	4770      	bx	lr

08013818 <usart_deinit>:
 8013818:	b508      	push	{r3, lr}
 801381a:	4b2d      	ldr	r3, [pc, #180]	; (80138d0 <usart_deinit+0xb8>)
 801381c:	4298      	cmp	r0, r3
 801381e:	d050      	beq.n	80138c2 <usart_deinit+0xaa>
 8013820:	d817      	bhi.n	8013852 <usart_deinit+0x3a>
 8013822:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 8013826:	4298      	cmp	r0, r3
 8013828:	d044      	beq.n	80138b4 <usart_deinit+0x9c>
 801382a:	d808      	bhi.n	801383e <usart_deinit+0x26>
 801382c:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8013830:	4298      	cmp	r0, r3
 8013832:	d02a      	beq.n	801388a <usart_deinit+0x72>
 8013834:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8013838:	4298      	cmp	r0, r3
 801383a:	d02d      	beq.n	8013898 <usart_deinit+0x80>
 801383c:	bd08      	pop	{r3, pc}
 801383e:	4b25      	ldr	r3, [pc, #148]	; (80138d4 <usart_deinit+0xbc>)
 8013840:	4298      	cmp	r0, r3
 8013842:	d1fb      	bne.n	801383c <usart_deinit+0x24>
 8013844:	f240 4014 	movw	r0, #1044	; 0x414
 8013848:	f7ff fd27 	bl	801329a <rcu_periph_reset_enable>
 801384c:	f240 4014 	movw	r0, #1044	; 0x414
 8013850:	e017      	b.n	8013882 <usart_deinit+0x6a>
 8013852:	4b21      	ldr	r3, [pc, #132]	; (80138d8 <usart_deinit+0xc0>)
 8013854:	4298      	cmp	r0, r3
 8013856:	d00e      	beq.n	8013876 <usart_deinit+0x5e>
 8013858:	f503 5360 	add.w	r3, r3, #14336	; 0x3800
 801385c:	4298      	cmp	r0, r3
 801385e:	d022      	beq.n	80138a6 <usart_deinit+0x8e>
 8013860:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
 8013864:	4298      	cmp	r0, r3
 8013866:	d1e9      	bne.n	801383c <usart_deinit+0x24>
 8013868:	f641 601f 	movw	r0, #7711	; 0x1e1f
 801386c:	f7ff fd15 	bl	801329a <rcu_periph_reset_enable>
 8013870:	f641 601f 	movw	r0, #7711	; 0x1e1f
 8013874:	e005      	b.n	8013882 <usart_deinit+0x6a>
 8013876:	f240 300e 	movw	r0, #782	; 0x30e
 801387a:	f7ff fd0e 	bl	801329a <rcu_periph_reset_enable>
 801387e:	f240 300e 	movw	r0, #782	; 0x30e
 8013882:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8013886:	f7ff bd0a 	b.w	801329e <rcu_periph_reset_disable>
 801388a:	f240 4011 	movw	r0, #1041	; 0x411
 801388e:	f7ff fd04 	bl	801329a <rcu_periph_reset_enable>
 8013892:	f240 4011 	movw	r0, #1041	; 0x411
 8013896:	e7f4      	b.n	8013882 <usart_deinit+0x6a>
 8013898:	f240 4012 	movw	r0, #1042	; 0x412
 801389c:	f7ff fcfd 	bl	801329a <rcu_periph_reset_enable>
 80138a0:	f240 4012 	movw	r0, #1042	; 0x412
 80138a4:	e7ed      	b.n	8013882 <usart_deinit+0x6a>
 80138a6:	f641 5018 	movw	r0, #7448	; 0x1d18
 80138aa:	f7ff fcf6 	bl	801329a <rcu_periph_reset_enable>
 80138ae:	f641 5018 	movw	r0, #7448	; 0x1d18
 80138b2:	e7e6      	b.n	8013882 <usart_deinit+0x6a>
 80138b4:	f240 4013 	movw	r0, #1043	; 0x413
 80138b8:	f7ff fcef 	bl	801329a <rcu_periph_reset_enable>
 80138bc:	f240 4013 	movw	r0, #1043	; 0x413
 80138c0:	e7df      	b.n	8013882 <usart_deinit+0x6a>
 80138c2:	f641 601e 	movw	r0, #7710	; 0x1e1e
 80138c6:	f7ff fce8 	bl	801329a <rcu_periph_reset_enable>
 80138ca:	f641 601e 	movw	r0, #7710	; 0x1e1e
 80138ce:	e7d8      	b.n	8013882 <usart_deinit+0x6a>
 80138d0:	40007800 	andmi	r7, r0, r0, lsl #16
 80138d4:	40005000 	andmi	r5, r0, r0
 80138d8:	40013800 	andmi	r3, r1, r0, lsl #16

080138dc <usart_baudrate_set>:
 80138dc:	b538      	push	{r3, r4, r5, lr}
 80138de:	4b16      	ldr	r3, [pc, #88]	; (8013938 <usart_baudrate_set+0x5c>)
 80138e0:	4604      	mov	r4, r0
 80138e2:	4298      	cmp	r0, r3
 80138e4:	460d      	mov	r5, r1
 80138e6:	d025      	beq.n	8013934 <usart_baudrate_set+0x58>
 80138e8:	d816      	bhi.n	8013918 <usart_baudrate_set+0x3c>
 80138ea:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 80138ee:	4298      	cmp	r0, r3
 80138f0:	d020      	beq.n	8013934 <usart_baudrate_set+0x58>
 80138f2:	d80f      	bhi.n	8013914 <usart_baudrate_set+0x38>
 80138f4:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 80138f8:	4298      	cmp	r0, r3
 80138fa:	d01b      	beq.n	8013934 <usart_baudrate_set+0x58>
 80138fc:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8013900:	429c      	cmp	r4, r3
 8013902:	d017      	beq.n	8013934 <usart_baudrate_set+0x58>
 8013904:	2000      	movs	r0, #0
 8013906:	eb00 0155 	add.w	r1, r0, r5, lsr #1
 801390a:	fbb1 f1f5 	udiv	r1, r1, r5
 801390e:	b289      	uxth	r1, r1
 8013910:	60a1      	str	r1, [r4, #8]
 8013912:	bd38      	pop	{r3, r4, r5, pc}
 8013914:	4b09      	ldr	r3, [pc, #36]	; (801393c <usart_baudrate_set+0x60>)
 8013916:	e7f3      	b.n	8013900 <usart_baudrate_set+0x24>
 8013918:	4b09      	ldr	r3, [pc, #36]	; (8013940 <usart_baudrate_set+0x64>)
 801391a:	4298      	cmp	r0, r3
 801391c:	d006      	beq.n	801392c <usart_baudrate_set+0x50>
 801391e:	f503 5360 	add.w	r3, r3, #14336	; 0x3800
 8013922:	4298      	cmp	r0, r3
 8013924:	d002      	beq.n	801392c <usart_baudrate_set+0x50>
 8013926:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
 801392a:	e7e9      	b.n	8013900 <usart_baudrate_set+0x24>
 801392c:	2003      	movs	r0, #3
 801392e:	f7ff fd85 	bl	801343c <rcu_clock_freq_get>
 8013932:	e7e8      	b.n	8013906 <usart_baudrate_set+0x2a>
 8013934:	2002      	movs	r0, #2
 8013936:	e7fa      	b.n	801392e <usart_baudrate_set+0x52>
 8013938:	40007800 	andmi	r7, r0, r0, lsl #16
 801393c:	40005000 	andmi	r5, r0, r0
 8013940:	40013800 	andmi	r3, r1, r0, lsl #16

08013944 <usart_parity_config>:
 8013944:	68c3      	ldr	r3, [r0, #12]
 8013946:	f423 63c0 	bic.w	r3, r3, #1536	; 0x600
 801394a:	60c3      	str	r3, [r0, #12]
 801394c:	68c3      	ldr	r3, [r0, #12]
 801394e:	430b      	orrs	r3, r1
 8013950:	60c3      	str	r3, [r0, #12]
 8013952:	4770      	bx	lr

08013954 <usart_word_length_set>:
 8013954:	68c3      	ldr	r3, [r0, #12]
 8013956:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 801395a:	60c3      	str	r3, [r0, #12]
 801395c:	68c3      	ldr	r3, [r0, #12]
 801395e:	430b      	orrs	r3, r1
 8013960:	60c3      	str	r3, [r0, #12]
 8013962:	4770      	bx	lr

08013964 <usart_stop_bit_set>:
 8013964:	6903      	ldr	r3, [r0, #16]
 8013966:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 801396a:	6103      	str	r3, [r0, #16]
 801396c:	6903      	ldr	r3, [r0, #16]
 801396e:	430b      	orrs	r3, r1
 8013970:	6103      	str	r3, [r0, #16]
 8013972:	4770      	bx	lr

08013974 <usart_transmit_config>:
 8013974:	68c3      	ldr	r3, [r0, #12]
 8013976:	f023 0308 	bic.w	r3, r3, #8
 801397a:	430b      	orrs	r3, r1
 801397c:	60c3      	str	r3, [r0, #12]
 801397e:	4770      	bx	lr

08013980 <usart_receive_config>:
 8013980:	68c3      	ldr	r3, [r0, #12]
 8013982:	f023 0304 	bic.w	r3, r3, #4
 8013986:	430b      	orrs	r3, r1
 8013988:	60c3      	str	r3, [r0, #12]
 801398a:	4770      	bx	lr

0801398c <usart_hardware_flow_rts_config>:
 801398c:	6943      	ldr	r3, [r0, #20]
 801398e:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8013992:	430b      	orrs	r3, r1
 8013994:	6143      	str	r3, [r0, #20]
 8013996:	4770      	bx	lr

08013998 <usart_hardware_flow_cts_config>:
 8013998:	6943      	ldr	r3, [r0, #20]
 801399a:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 801399e:	430b      	orrs	r3, r1
 80139a0:	6143      	str	r3, [r0, #20]
 80139a2:	4770      	bx	lr

080139a4 <usart_dma_transmit_config>:
 80139a4:	6943      	ldr	r3, [r0, #20]
 80139a6:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80139aa:	430b      	orrs	r3, r1
 80139ac:	6143      	str	r3, [r0, #20]
 80139ae:	4770      	bx	lr

080139b0 <usart_flag_get>:
 80139b0:	098b      	lsrs	r3, r1, #6
 80139b2:	581a      	ldr	r2, [r3, r0]
 80139b4:	2301      	movs	r3, #1
 80139b6:	f001 011f 	and.w	r1, r1, #31
 80139ba:	408b      	lsls	r3, r1
 80139bc:	4213      	tst	r3, r2
 80139be:	bf14      	ite	ne
 80139c0:	2001      	movne	r0, #1
 80139c2:	2000      	moveq	r0, #0
 80139c4:	4770      	bx	lr

080139c6 <usart_interrupt_enable>:
 80139c6:	2301      	movs	r3, #1
 80139c8:	b510      	push	{r4, lr}
 80139ca:	f3c1 1289 	ubfx	r2, r1, #6, #10
 80139ce:	5814      	ldr	r4, [r2, r0]
 80139d0:	f001 011f 	and.w	r1, r1, #31
 80139d4:	408b      	lsls	r3, r1
 80139d6:	4323      	orrs	r3, r4
 80139d8:	5013      	str	r3, [r2, r0]
 80139da:	bd10      	pop	{r4, pc}

080139dc <usart_interrupt_disable>:
 80139dc:	2201      	movs	r2, #1
 80139de:	b510      	push	{r4, lr}
 80139e0:	f3c1 1489 	ubfx	r4, r1, #6, #10
 80139e4:	5823      	ldr	r3, [r4, r0]
 80139e6:	f001 011f 	and.w	r1, r1, #31
 80139ea:	408a      	lsls	r2, r1
 80139ec:	ea23 0302 	bic.w	r3, r3, r2
 80139f0:	5023      	str	r3, [r4, r0]
 80139f2:	bd10      	pop	{r4, pc}

080139f4 <usart_interrupt_flag_clear>:
 80139f4:	2201      	movs	r2, #1
 80139f6:	b510      	push	{r4, lr}
 80139f8:	0d8c      	lsrs	r4, r1, #22
 80139fa:	5823      	ldr	r3, [r4, r0]
 80139fc:	f3c1 4104 	ubfx	r1, r1, #16, #5
 8013a00:	408a      	lsls	r2, r1
 8013a02:	ea23 0302 	bic.w	r3, r3, r2
 8013a06:	5023      	str	r3, [r4, r0]
 8013a08:	bd10      	pop	{r4, pc}
	...

08013a0c <emac_start>:
 8013a0c:	b510      	push	{r4, lr}
 8013a0e:	4604      	mov	r4, r0
 8013a10:	f240 6002 	movw	r0, #1538	; 0x602
 8013a14:	f7ff fc26 	bl	8013264 <rcu_periph_clock_enable>
 8013a18:	f240 6003 	movw	r0, #1539	; 0x603
 8013a1c:	f7ff fc22 	bl	8013264 <rcu_periph_clock_enable>
 8013a20:	f240 6004 	movw	r0, #1540	; 0x604
 8013a24:	f7ff fc1e 	bl	8013264 <rcu_periph_clock_enable>
 8013a28:	f44f 7380 	mov.w	r3, #256	; 0x100
 8013a2c:	2203      	movs	r2, #3
 8013a2e:	2118      	movs	r1, #24
 8013a30:	4846      	ldr	r0, [pc, #280]	; (8013b4c <emac_start+0x140>)
 8013a32:	f7ff fb7f 	bl	8013134 <gpio_init>
 8013a36:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 8013a3a:	f7ff fc13 	bl	8013264 <rcu_periph_clock_enable>
 8013a3e:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 8013a42:	f7ff fc4f 	bl	80132e4 <rcu_pll2_config>
 8013a46:	201c      	movs	r0, #28
 8013a48:	f7ff fcf6 	bl	8013438 <rcu_osci_on>
 8013a4c:	201c      	movs	r0, #28
 8013a4e:	f7ff fc83 	bl	8013358 <rcu_osci_stab_wait>
 8013a52:	2100      	movs	r1, #0
 8013a54:	f04f 6030 	mov.w	r0, #184549376	; 0xb000000
 8013a58:	f7ff fc34 	bl	80132c4 <rcu_ckout0_config>
 8013a5c:	f44f 0000 	mov.w	r0, #8388608	; 0x800000
 8013a60:	f7ff fbec 	bl	801323c <gpio_ethernet_phy_select>
 8013a64:	2302      	movs	r3, #2
 8013a66:	2203      	movs	r2, #3
 8013a68:	2104      	movs	r1, #4
 8013a6a:	4838      	ldr	r0, [pc, #224]	; (8013b4c <emac_start+0x140>)
 8013a6c:	f7ff fb62 	bl	8013134 <gpio_init>
 8013a70:	2304      	movs	r3, #4
 8013a72:	2203      	movs	r2, #3
 8013a74:	2118      	movs	r1, #24
 8013a76:	4835      	ldr	r0, [pc, #212]	; (8013b4c <emac_start+0x140>)
 8013a78:	f7ff fb5c 	bl	8013134 <gpio_init>
 8013a7c:	2380      	movs	r3, #128	; 0x80
 8013a7e:	2203      	movs	r2, #3
 8013a80:	2104      	movs	r1, #4
 8013a82:	4832      	ldr	r0, [pc, #200]	; (8013b4c <emac_start+0x140>)
 8013a84:	f7ff fb56 	bl	8013134 <gpio_init>
 8013a88:	2302      	movs	r3, #2
 8013a8a:	2203      	movs	r2, #3
 8013a8c:	2118      	movs	r1, #24
 8013a8e:	4830      	ldr	r0, [pc, #192]	; (8013b50 <emac_start+0x144>)
 8013a90:	f7ff fb50 	bl	8013134 <gpio_init>
 8013a94:	2310      	movs	r3, #16
 8013a96:	2203      	movs	r2, #3
 8013a98:	2104      	movs	r1, #4
 8013a9a:	482d      	ldr	r0, [pc, #180]	; (8013b50 <emac_start+0x144>)
 8013a9c:	f7ff fb4a 	bl	8013134 <gpio_init>
 8013aa0:	2320      	movs	r3, #32
 8013aa2:	2203      	movs	r2, #3
 8013aa4:	2104      	movs	r1, #4
 8013aa6:	482a      	ldr	r0, [pc, #168]	; (8013b50 <emac_start+0x144>)
 8013aa8:	f7ff fb44 	bl	8013134 <gpio_init>
 8013aac:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8013ab0:	2203      	movs	r2, #3
 8013ab2:	2118      	movs	r1, #24
 8013ab4:	4827      	ldr	r0, [pc, #156]	; (8013b54 <emac_start+0x148>)
 8013ab6:	f7ff fb3d 	bl	8013134 <gpio_init>
 8013aba:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8013abe:	2203      	movs	r2, #3
 8013ac0:	2118      	movs	r1, #24
 8013ac2:	4824      	ldr	r0, [pc, #144]	; (8013b54 <emac_start+0x148>)
 8013ac4:	f7ff fb36 	bl	8013134 <gpio_init>
 8013ac8:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8013acc:	2203      	movs	r2, #3
 8013ace:	2118      	movs	r1, #24
 8013ad0:	4820      	ldr	r0, [pc, #128]	; (8013b54 <emac_start+0x148>)
 8013ad2:	f7ff fb2f 	bl	8013134 <gpio_init>
 8013ad6:	f240 500e 	movw	r0, #1294	; 0x50e
 8013ada:	f7ff fbc3 	bl	8013264 <rcu_periph_clock_enable>
 8013ade:	f240 500f 	movw	r0, #1295	; 0x50f
 8013ae2:	f7ff fbbf 	bl	8013264 <rcu_periph_clock_enable>
 8013ae6:	f44f 60a2 	mov.w	r0, #1296	; 0x510
 8013aea:	f7ff fbbb 	bl	8013264 <rcu_periph_clock_enable>
 8013aee:	f001 f833 	bl	8014b58 <enet_deinit>
 8013af2:	f000 fc8f 	bl	8014414 <enet_software_reset>
 8013af6:	b900      	cbnz	r0, 8013afa <emac_start+0xee>
 8013af8:	e7fe      	b.n	8013af8 <emac_start+0xec>
 8013afa:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 8013afe:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8013b02:	2001      	movs	r0, #1
 8013b04:	f000 fe0a 	bl	801471c <enet_init>
 8013b08:	4b13      	ldr	r3, [pc, #76]	; (8013b58 <emac_start+0x14c>)
 8013b0a:	6018      	str	r0, [r3, #0]
 8013b0c:	681b      	ldr	r3, [r3, #0]
 8013b0e:	b903      	cbnz	r3, 8013b12 <emac_start+0x106>
 8013b10:	e7fe      	b.n	8013b10 <emac_start+0x104>
 8013b12:	4620      	mov	r0, r4
 8013b14:	f000 fb78 	bl	8014208 <mac_address_get>
 8013b18:	4621      	mov	r1, r4
 8013b1a:	2000      	movs	r0, #0
 8013b1c:	f000 fd5e 	bl	80145dc <enet_mac_address_set>
 8013b20:	f44f 00e0 	mov.w	r0, #7340032	; 0x700000
 8013b24:	f000 fc8a 	bl	801443c <enet_descriptors_chain_init>
 8013b28:	f44f 2060 	mov.w	r0, #917504	; 0xe0000
 8013b2c:	f000 fc86 	bl	801443c <enet_descriptors_chain_init>
 8013b30:	f44f 0140 	mov.w	r1, #12582912	; 0xc00000
 8013b34:	4809      	ldr	r0, [pc, #36]	; (8013b5c <emac_start+0x150>)
 8013b36:	f000 fd4b 	bl	80145d0 <enet_transmit_checksum_config>
 8013b3a:	f44f 0140 	mov.w	r1, #12582912	; 0xc00000
 8013b3e:	4808      	ldr	r0, [pc, #32]	; (8013b60 <emac_start+0x154>)
 8013b40:	f000 fd46 	bl	80145d0 <enet_transmit_checksum_config>
 8013b44:	f000 ff80 	bl	8014a48 <enet_enable>
 8013b48:	2001      	movs	r0, #1
 8013b4a:	bd10      	pop	{r4, pc}
 8013b4c:	40010800 	andmi	r0, r1, r0, lsl #16
 8013b50:	40011000 	andmi	r1, r1, r0
 8013b54:	40010c00 	andmi	r0, r1, r0, lsl #24
 8013b58:	2000a748 	andcs	sl, r0, r8, asr #14
 8013b5c:	2000e3a4 	andcs	lr, r0, r4, lsr #7
 8013b60:	2000e3b4 			; <UNDEFINED> instruction: 0x2000e3b4

08013b64 <emac_eth_recv>:
 8013b64:	b538      	push	{r3, r4, r5, lr}
 8013b66:	4605      	mov	r5, r0
 8013b68:	f000 ffc6 	bl	8014af8 <enet_rxframe_size_get>
 8013b6c:	4604      	mov	r4, r0
 8013b6e:	b138      	cbz	r0, 8013b80 <emac_eth_recv+0x1c>
 8013b70:	4b05      	ldr	r3, [pc, #20]	; (8013b88 <emac_eth_recv+0x24>)
 8013b72:	2105      	movs	r1, #5
 8013b74:	6818      	ldr	r0, [r3, #0]
 8013b76:	f000 ff6e 	bl	8014a56 <enet_desc_information_get>
 8013b7a:	6028      	str	r0, [r5, #0]
 8013b7c:	4620      	mov	r0, r4
 8013b7e:	bd38      	pop	{r3, r4, r5, pc}
 8013b80:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8013b84:	e7fb      	b.n	8013b7e <emac_eth_recv+0x1a>
 8013b86:	bf00      	nop
 8013b88:	2000a758 	andcs	sl, r0, r8, asr r7

08013b8c <emac_free_pkt>:
 8013b8c:	2100      	movs	r1, #0
 8013b8e:	4608      	mov	r0, r1
 8013b90:	f000 bc9c 	b.w	80144cc <enet_frame_receive>

08013b94 <emac_eth_send>:
 8013b94:	f000 bcda 	b.w	801454c <enet_frame_transmit>

08013b98 <gd32_adc_init()>:
 8013b98:	b510      	push	{r4, lr}
 8013b9a:	f240 6009 	movw	r0, #1545	; 0x609
 8013b9e:	4c21      	ldr	r4, [pc, #132]	; (8013c24 <gd32_adc_init()+0x8c>)
 8013ba0:	f7ff fb60 	bl	8013264 <rcu_periph_clock_enable>
 8013ba4:	2005      	movs	r0, #5
 8013ba6:	f7ff fba9 	bl	80132fc <rcu_adc_clock_config>
 8013baa:	4620      	mov	r0, r4
 8013bac:	2201      	movs	r2, #1
 8013bae:	f44f 7180 	mov.w	r1, #256	; 0x100
 8013bb2:	f000 fb4b 	bl	801424c <adc_special_function_config>
 8013bb6:	f44f 42e0 	mov.w	r2, #28672	; 0x7000
 8013bba:	4620      	mov	r0, r4
 8013bbc:	2102      	movs	r1, #2
 8013bbe:	f000 fbe4 	bl	801438a <adc_external_trigger_source_config>
 8013bc2:	2100      	movs	r1, #0
 8013bc4:	4620      	mov	r0, r4
 8013bc6:	f000 fb69 	bl	801429c <adc_data_alignment_config>
 8013bca:	2000      	movs	r0, #0
 8013bcc:	f000 fb2e 	bl	801422c <adc_mode_config>
 8013bd0:	2202      	movs	r2, #2
 8013bd2:	4620      	mov	r0, r4
 8013bd4:	4611      	mov	r1, r2
 8013bd6:	f000 fb8d 	bl	80142f4 <adc_channel_length_config>
 8013bda:	4620      	mov	r0, r4
 8013bdc:	2307      	movs	r3, #7
 8013bde:	2210      	movs	r2, #16
 8013be0:	2100      	movs	r1, #0
 8013be2:	f000 fba4 	bl	801432e <adc_inserted_channel_config>
 8013be6:	2307      	movs	r3, #7
 8013be8:	4620      	mov	r0, r4
 8013bea:	2211      	movs	r2, #17
 8013bec:	2101      	movs	r1, #1
 8013bee:	f000 fb9e 	bl	801432e <adc_inserted_channel_config>
 8013bf2:	2201      	movs	r2, #1
 8013bf4:	2102      	movs	r1, #2
 8013bf6:	4620      	mov	r0, r4
 8013bf8:	f000 fbd8 	bl	80143ac <adc_external_trigger_config>
 8013bfc:	f000 fb70 	bl	80142e0 <adc_tempsensor_vrefint_enable>
 8013c00:	4620      	mov	r0, r4
 8013c02:	f000 fb54 	bl	80142ae <adc_enable>
 8013c06:	2100      	movs	r1, #0
 8013c08:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8013c0c:	f000 fae4 	bl	80141d8 <udelay(unsigned int, unsigned int)>
 8013c10:	4620      	mov	r0, r4
 8013c12:	f000 fb54 	bl	80142be <adc_calibration_enable>
 8013c16:	4620      	mov	r0, r4
 8013c18:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013c1c:	2102      	movs	r1, #2
 8013c1e:	f000 bbe0 	b.w	80143e2 <adc_software_trigger_enable>
 8013c22:	bf00      	nop
 8013c24:	40012400 	andmi	r2, r1, r0, lsl #8

08013c28 <_stop() [clone .isra.0]>:
 8013c28:	b508      	push	{r3, lr}
 8013c2a:	4806      	ldr	r0, [pc, #24]	; (8013c44 <_stop() [clone .isra.0]+0x1c>)
 8013c2c:	f001 f828 	bl	8014c80 <i2c_stop_on_bus>
 8013c30:	f640 73ff 	movw	r3, #4095	; 0xfff
 8013c34:	4904      	ldr	r1, [pc, #16]	; (8013c48 <_stop() [clone .isra.0]+0x20>)
 8013c36:	f8d1 2400 	ldr.w	r2, [r1, #1024]	; 0x400
 8013c3a:	0592      	lsls	r2, r2, #22
 8013c3c:	d501      	bpl.n	8013c42 <_stop() [clone .isra.0]+0x1a>
 8013c3e:	3b01      	subs	r3, #1
 8013c40:	d1f9      	bne.n	8013c36 <_stop() [clone .isra.0]+0xe>
 8013c42:	bd08      	pop	{r3, pc}
 8013c44:	40005400 	andmi	r5, r0, r0, lsl #8
 8013c48:	40005000 	andmi	r5, r0, r0

08013c4c <gd32_i2c_begin()>:
 8013c4c:	b510      	push	{r4, lr}
 8013c4e:	f240 7015 	movw	r0, #1813	; 0x715
 8013c52:	f7ff fb07 	bl	8013264 <rcu_periph_clock_enable>
 8013c56:	4c15      	ldr	r4, [pc, #84]	; (8013cac <gd32_i2c_begin()+0x60>)
 8013c58:	f240 6003 	movw	r0, #1539	; 0x603
 8013c5c:	f7ff fb02 	bl	8013264 <rcu_periph_clock_enable>
 8013c60:	f240 6003 	movw	r0, #1539	; 0x603
 8013c64:	f7ff fafe 	bl	8013264 <rcu_periph_clock_enable>
 8013c68:	4620      	mov	r0, r4
 8013c6a:	f44f 7380 	mov.w	r3, #256	; 0x100
 8013c6e:	2203      	movs	r2, #3
 8013c70:	211c      	movs	r1, #28
 8013c72:	f7ff fa5f 	bl	8013134 <gpio_init>
 8013c76:	f44f 7300 	mov.w	r3, #512	; 0x200
 8013c7a:	2203      	movs	r2, #3
 8013c7c:	4620      	mov	r0, r4
 8013c7e:	211c      	movs	r1, #28
 8013c80:	f7ff fa58 	bl	8013134 <gpio_init>
 8013c84:	f5a4 4438 	sub.w	r4, r4, #47104	; 0xb800
 8013c88:	2101      	movs	r1, #1
 8013c8a:	2002      	movs	r0, #2
 8013c8c:	f7ff faa6 	bl	80131dc <gpio_pin_remap_config>
 8013c90:	4620      	mov	r0, r4
 8013c92:	4907      	ldr	r1, [pc, #28]	; (8013cb0 <gd32_i2c_begin()+0x64>)
 8013c94:	2200      	movs	r2, #0
 8013c96:	f000 ff6d 	bl	8014b74 <i2c_clock_config>
 8013c9a:	4620      	mov	r0, r4
 8013c9c:	f000 ffe6 	bl	8014c6c <i2c_enable>
 8013ca0:	4620      	mov	r0, r4
 8013ca2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013ca6:	2101      	movs	r1, #1
 8013ca8:	f000 bfc6 	b.w	8014c38 <i2c_ack_config>
 8013cac:	40010c00 	andmi	r0, r1, r0, lsl #24
 8013cb0:	00061a80 	andeq	r1, r6, r0, lsl #21

08013cb4 <gd32_i2c_set_baudrate(unsigned int)>:
 8013cb4:	4601      	mov	r1, r0
 8013cb6:	2200      	movs	r2, #0
 8013cb8:	4801      	ldr	r0, [pc, #4]	; (8013cc0 <gd32_i2c_set_baudrate(unsigned int)+0xc>)
 8013cba:	f000 bf5b 	b.w	8014b74 <i2c_clock_config>
 8013cbe:	bf00      	nop
 8013cc0:	40005400 	andmi	r5, r0, r0, lsl #8

08013cc4 <gd32_i2c_set_address(unsigned char)>:
 8013cc4:	4b01      	ldr	r3, [pc, #4]	; (8013ccc <gd32_i2c_set_address(unsigned char)+0x8>)
 8013cc6:	0040      	lsls	r0, r0, #1
 8013cc8:	7018      	strb	r0, [r3, #0]
 8013cca:	4770      	bx	lr
 8013ccc:	2000a74c 	andcs	sl, r0, ip, asr #14

08013cd0 <gd32_i2c_write(char const*, unsigned int)>:
 8013cd0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8013cd2:	4604      	mov	r4, r0
 8013cd4:	460f      	mov	r7, r1
 8013cd6:	f640 75ff 	movw	r5, #4095	; 0xfff
 8013cda:	4e2e      	ldr	r6, [pc, #184]	; (8013d94 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8013cdc:	f240 6101 	movw	r1, #1537	; 0x601
 8013ce0:	4630      	mov	r0, r6
 8013ce2:	f000 ffd7 	bl	8014c94 <i2c_flag_get>
 8013ce6:	b9b0      	cbnz	r0, 8013d16 <gd32_i2c_write(char const*, unsigned int)+0x46>
 8013ce8:	482a      	ldr	r0, [pc, #168]	; (8013d94 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8013cea:	f000 ffc4 	bl	8014c76 <i2c_start_on_bus>
 8013cee:	f640 75ff 	movw	r5, #4095	; 0xfff
 8013cf2:	4e28      	ldr	r6, [pc, #160]	; (8013d94 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8013cf4:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8013cf8:	4630      	mov	r0, r6
 8013cfa:	f000 ffcb 	bl	8014c94 <i2c_flag_get>
 8013cfe:	b190      	cbz	r0, 8013d26 <gd32_i2c_write(char const*, unsigned int)+0x56>
 8013d00:	4b25      	ldr	r3, [pc, #148]	; (8013d98 <gd32_i2c_write(char const*, unsigned int)+0xc8>)
 8013d02:	f06f 0201 	mvn.w	r2, #1
 8013d06:	7819      	ldrb	r1, [r3, #0]
 8013d08:	4822      	ldr	r0, [pc, #136]	; (8013d94 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8013d0a:	f000 ffa7 	bl	8014c5c <i2c_master_addressing>
 8013d0e:	f640 75ff 	movw	r5, #4095	; 0xfff
 8013d12:	4e20      	ldr	r6, [pc, #128]	; (8013d94 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8013d14:	e00c      	b.n	8013d30 <gd32_i2c_write(char const*, unsigned int)+0x60>
 8013d16:	3d01      	subs	r5, #1
 8013d18:	d1e0      	bne.n	8013cdc <gd32_i2c_write(char const*, unsigned int)+0xc>
 8013d1a:	f7ff ff85 	bl	8013c28 <_stop() [clone .isra.0]>
 8013d1e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8013d22:	4240      	negs	r0, r0
 8013d24:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8013d26:	3d01      	subs	r5, #1
 8013d28:	d1e4      	bne.n	8013cf4 <gd32_i2c_write(char const*, unsigned int)+0x24>
 8013d2a:	e7f6      	b.n	8013d1a <gd32_i2c_write(char const*, unsigned int)+0x4a>
 8013d2c:	3d01      	subs	r5, #1
 8013d2e:	d0f4      	beq.n	8013d1a <gd32_i2c_write(char const*, unsigned int)+0x4a>
 8013d30:	f240 5101 	movw	r1, #1281	; 0x501
 8013d34:	4630      	mov	r0, r6
 8013d36:	f000 ffad 	bl	8014c94 <i2c_flag_get>
 8013d3a:	2800      	cmp	r0, #0
 8013d3c:	d0f6      	beq.n	8013d2c <gd32_i2c_write(char const*, unsigned int)+0x5c>
 8013d3e:	f240 5101 	movw	r1, #1281	; 0x501
 8013d42:	4814      	ldr	r0, [pc, #80]	; (8013d94 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8013d44:	f000 ffb1 	bl	8014caa <i2c_flag_clear>
 8013d48:	f640 75ff 	movw	r5, #4095	; 0xfff
 8013d4c:	4e11      	ldr	r6, [pc, #68]	; (8013d94 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8013d4e:	f240 5107 	movw	r1, #1287	; 0x507
 8013d52:	4630      	mov	r0, r6
 8013d54:	f000 ff9e 	bl	8014c94 <i2c_flag_get>
 8013d58:	2801      	cmp	r0, #1
 8013d5a:	d107      	bne.n	8013d6c <gd32_i2c_write(char const*, unsigned int)+0x9c>
 8013d5c:	4e0d      	ldr	r6, [pc, #52]	; (8013d94 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8013d5e:	4427      	add	r7, r4
 8013d60:	42a7      	cmp	r7, r4
 8013d62:	d106      	bne.n	8013d72 <gd32_i2c_write(char const*, unsigned int)+0xa2>
 8013d64:	f7ff ff60 	bl	8013c28 <_stop() [clone .isra.0]>
 8013d68:	2000      	movs	r0, #0
 8013d6a:	e7da      	b.n	8013d22 <gd32_i2c_write(char const*, unsigned int)+0x52>
 8013d6c:	3d01      	subs	r5, #1
 8013d6e:	d1ee      	bne.n	8013d4e <gd32_i2c_write(char const*, unsigned int)+0x7e>
 8013d70:	e7d3      	b.n	8013d1a <gd32_i2c_write(char const*, unsigned int)+0x4a>
 8013d72:	4630      	mov	r0, r6
 8013d74:	f814 1b01 	ldrb.w	r1, [r4], #1
 8013d78:	f000 ff87 	bl	8014c8a <i2c_data_transmit>
 8013d7c:	f640 75ff 	movw	r5, #4095	; 0xfff
 8013d80:	f240 5102 	movw	r1, #1282	; 0x502
 8013d84:	4630      	mov	r0, r6
 8013d86:	f000 ff85 	bl	8014c94 <i2c_flag_get>
 8013d8a:	2800      	cmp	r0, #0
 8013d8c:	d1e8      	bne.n	8013d60 <gd32_i2c_write(char const*, unsigned int)+0x90>
 8013d8e:	3d01      	subs	r5, #1
 8013d90:	d1f6      	bne.n	8013d80 <gd32_i2c_write(char const*, unsigned int)+0xb0>
 8013d92:	e7c2      	b.n	8013d1a <gd32_i2c_write(char const*, unsigned int)+0x4a>
 8013d94:	40005400 	andmi	r5, r0, r0, lsl #8
 8013d98:	2000a74c 	andcs	sl, r0, ip, asr #14

08013d9c <gd32_i2c_read(char*, unsigned int)>:
 8013d9c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8013da0:	4680      	mov	r8, r0
 8013da2:	460c      	mov	r4, r1
 8013da4:	f640 76ff 	movw	r6, #4095	; 0xfff
 8013da8:	4f4b      	ldr	r7, [pc, #300]	; (8013ed8 <gd32_i2c_read(char*, unsigned int)+0x13c>)
 8013daa:	f240 6101 	movw	r1, #1537	; 0x601
 8013dae:	4638      	mov	r0, r7
 8013db0:	f000 ff70 	bl	8014c94 <i2c_flag_get>
 8013db4:	4605      	mov	r5, r0
 8013db6:	bb08      	cbnz	r0, 8013dfc <gd32_i2c_read(char*, unsigned int)+0x60>
 8013db8:	2c02      	cmp	r4, #2
 8013dba:	d103      	bne.n	8013dc4 <gd32_i2c_read(char*, unsigned int)+0x28>
 8013dbc:	4601      	mov	r1, r0
 8013dbe:	4846      	ldr	r0, [pc, #280]	; (8013ed8 <gd32_i2c_read(char*, unsigned int)+0x13c>)
 8013dc0:	f000 ff43 	bl	8014c4a <i2c_ackpos_config>
 8013dc4:	4844      	ldr	r0, [pc, #272]	; (8013ed8 <gd32_i2c_read(char*, unsigned int)+0x13c>)
 8013dc6:	f000 ff56 	bl	8014c76 <i2c_start_on_bus>
 8013dca:	f640 76ff 	movw	r6, #4095	; 0xfff
 8013dce:	4f42      	ldr	r7, [pc, #264]	; (8013ed8 <gd32_i2c_read(char*, unsigned int)+0x13c>)
 8013dd0:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8013dd4:	4638      	mov	r0, r7
 8013dd6:	f000 ff5d 	bl	8014c94 <i2c_flag_get>
 8013dda:	b1a8      	cbz	r0, 8013e08 <gd32_i2c_read(char*, unsigned int)+0x6c>
 8013ddc:	4b3f      	ldr	r3, [pc, #252]	; (8013edc <gd32_i2c_read(char*, unsigned int)+0x140>)
 8013dde:	2201      	movs	r2, #1
 8013de0:	7819      	ldrb	r1, [r3, #0]
 8013de2:	483d      	ldr	r0, [pc, #244]	; (8013ed8 <gd32_i2c_read(char*, unsigned int)+0x13c>)
 8013de4:	f000 ff3a 	bl	8014c5c <i2c_master_addressing>
 8013de8:	2c02      	cmp	r4, #2
 8013dea:	d803      	bhi.n	8013df4 <gd32_i2c_read(char*, unsigned int)+0x58>
 8013dec:	2100      	movs	r1, #0
 8013dee:	483a      	ldr	r0, [pc, #232]	; (8013ed8 <gd32_i2c_read(char*, unsigned int)+0x13c>)
 8013df0:	f000 ff22 	bl	8014c38 <i2c_ack_config>
 8013df4:	f640 76ff 	movw	r6, #4095	; 0xfff
 8013df8:	4f37      	ldr	r7, [pc, #220]	; (8013ed8 <gd32_i2c_read(char*, unsigned int)+0x13c>)
 8013dfa:	e00a      	b.n	8013e12 <gd32_i2c_read(char*, unsigned int)+0x76>
 8013dfc:	3e01      	subs	r6, #1
 8013dfe:	d1d4      	bne.n	8013daa <gd32_i2c_read(char*, unsigned int)+0xe>
 8013e00:	f7ff ff12 	bl	8013c28 <_stop() [clone .isra.0]>
 8013e04:	2504      	movs	r5, #4
 8013e06:	e04d      	b.n	8013ea4 <gd32_i2c_read(char*, unsigned int)+0x108>
 8013e08:	3e01      	subs	r6, #1
 8013e0a:	d1e1      	bne.n	8013dd0 <gd32_i2c_read(char*, unsigned int)+0x34>
 8013e0c:	e7f8      	b.n	8013e00 <gd32_i2c_read(char*, unsigned int)+0x64>
 8013e0e:	3e01      	subs	r6, #1
 8013e10:	d0f6      	beq.n	8013e00 <gd32_i2c_read(char*, unsigned int)+0x64>
 8013e12:	f240 5101 	movw	r1, #1281	; 0x501
 8013e16:	4638      	mov	r0, r7
 8013e18:	f000 ff3c 	bl	8014c94 <i2c_flag_get>
 8013e1c:	2800      	cmp	r0, #0
 8013e1e:	d0f6      	beq.n	8013e0e <gd32_i2c_read(char*, unsigned int)+0x72>
 8013e20:	f240 5101 	movw	r1, #1281	; 0x501
 8013e24:	482c      	ldr	r0, [pc, #176]	; (8013ed8 <gd32_i2c_read(char*, unsigned int)+0x13c>)
 8013e26:	f000 ff40 	bl	8014caa <i2c_flag_clear>
 8013e2a:	2c01      	cmp	r4, #1
 8013e2c:	d102      	bne.n	8013e34 <gd32_i2c_read(char*, unsigned int)+0x98>
 8013e2e:	482a      	ldr	r0, [pc, #168]	; (8013ed8 <gd32_i2c_read(char*, unsigned int)+0x13c>)
 8013e30:	f000 ff26 	bl	8014c80 <i2c_stop_on_bus>
 8013e34:	f640 77ff 	movw	r7, #4095	; 0xfff
 8013e38:	4e27      	ldr	r6, [pc, #156]	; (8013ed8 <gd32_i2c_read(char*, unsigned int)+0x13c>)
 8013e3a:	e022      	b.n	8013e82 <gd32_i2c_read(char*, unsigned int)+0xe6>
 8013e3c:	2c03      	cmp	r4, #3
 8013e3e:	d134      	bne.n	8013eaa <gd32_i2c_read(char*, unsigned int)+0x10e>
 8013e40:	f640 79ff 	movw	r9, #4095	; 0xfff
 8013e44:	e002      	b.n	8013e4c <gd32_i2c_read(char*, unsigned int)+0xb0>
 8013e46:	f1b9 0901 	subs.w	r9, r9, #1
 8013e4a:	d0d9      	beq.n	8013e00 <gd32_i2c_read(char*, unsigned int)+0x64>
 8013e4c:	f240 5102 	movw	r1, #1282	; 0x502
 8013e50:	4630      	mov	r0, r6
 8013e52:	f000 ff1f 	bl	8014c94 <i2c_flag_get>
 8013e56:	2800      	cmp	r0, #0
 8013e58:	d0f5      	beq.n	8013e46 <gd32_i2c_read(char*, unsigned int)+0xaa>
 8013e5a:	2100      	movs	r1, #0
 8013e5c:	4630      	mov	r0, r6
 8013e5e:	f000 feeb 	bl	8014c38 <i2c_ack_config>
 8013e62:	f240 5106 	movw	r1, #1286	; 0x506
 8013e66:	4630      	mov	r0, r6
 8013e68:	f000 ff14 	bl	8014c94 <i2c_flag_get>
 8013e6c:	b138      	cbz	r0, 8013e7e <gd32_i2c_read(char*, unsigned int)+0xe2>
 8013e6e:	4630      	mov	r0, r6
 8013e70:	f000 ff0d 	bl	8014c8e <i2c_data_receive>
 8013e74:	f640 77ff 	movw	r7, #4095	; 0xfff
 8013e78:	f808 0b01 	strb.w	r0, [r8], #1
 8013e7c:	3c01      	subs	r4, #1
 8013e7e:	3f01      	subs	r7, #1
 8013e80:	d0be      	beq.n	8013e00 <gd32_i2c_read(char*, unsigned int)+0x64>
 8013e82:	2c00      	cmp	r4, #0
 8013e84:	d1da      	bne.n	8013e3c <gd32_i2c_read(char*, unsigned int)+0xa0>
 8013e86:	f640 73ff 	movw	r3, #4095	; 0xfff
 8013e8a:	4915      	ldr	r1, [pc, #84]	; (8013ee0 <gd32_i2c_read(char*, unsigned int)+0x144>)
 8013e8c:	f8d1 2400 	ldr.w	r2, [r1, #1024]	; 0x400
 8013e90:	0592      	lsls	r2, r2, #22
 8013e92:	d41d      	bmi.n	8013ed0 <gd32_i2c_read(char*, unsigned int)+0x134>
 8013e94:	2101      	movs	r1, #1
 8013e96:	4810      	ldr	r0, [pc, #64]	; (8013ed8 <gd32_i2c_read(char*, unsigned int)+0x13c>)
 8013e98:	f000 fece 	bl	8014c38 <i2c_ack_config>
 8013e9c:	2101      	movs	r1, #1
 8013e9e:	480e      	ldr	r0, [pc, #56]	; (8013ed8 <gd32_i2c_read(char*, unsigned int)+0x13c>)
 8013ea0:	f000 fed3 	bl	8014c4a <i2c_ackpos_config>
 8013ea4:	4628      	mov	r0, r5
 8013ea6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8013eaa:	2c02      	cmp	r4, #2
 8013eac:	d1d9      	bne.n	8013e62 <gd32_i2c_read(char*, unsigned int)+0xc6>
 8013eae:	f640 79ff 	movw	r9, #4095	; 0xfff
 8013eb2:	e002      	b.n	8013eba <gd32_i2c_read(char*, unsigned int)+0x11e>
 8013eb4:	f1b9 0901 	subs.w	r9, r9, #1
 8013eb8:	d0a2      	beq.n	8013e00 <gd32_i2c_read(char*, unsigned int)+0x64>
 8013eba:	f240 5102 	movw	r1, #1282	; 0x502
 8013ebe:	4630      	mov	r0, r6
 8013ec0:	f000 fee8 	bl	8014c94 <i2c_flag_get>
 8013ec4:	2800      	cmp	r0, #0
 8013ec6:	d0f5      	beq.n	8013eb4 <gd32_i2c_read(char*, unsigned int)+0x118>
 8013ec8:	4630      	mov	r0, r6
 8013eca:	f000 fed9 	bl	8014c80 <i2c_stop_on_bus>
 8013ece:	e7c8      	b.n	8013e62 <gd32_i2c_read(char*, unsigned int)+0xc6>
 8013ed0:	3b01      	subs	r3, #1
 8013ed2:	d1db      	bne.n	8013e8c <gd32_i2c_read(char*, unsigned int)+0xf0>
 8013ed4:	e796      	b.n	8013e04 <gd32_i2c_read(char*, unsigned int)+0x68>
 8013ed6:	bf00      	nop
 8013ed8:	40005400 	andmi	r5, r0, r0, lsl #8
 8013edc:	2000a74c 	andcs	sl, r0, ip, asr #14
 8013ee0:	40005000 	andmi	r5, r0, r0

08013ee4 <gd32_uart_begin>:
 8013ee4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8013ee6:	461e      	mov	r6, r3
 8013ee8:	4b82      	ldr	r3, [pc, #520]	; (80140f4 <gd32_uart_begin+0x210>)
 8013eea:	4604      	mov	r4, r0
 8013eec:	4298      	cmp	r0, r3
 8013eee:	460f      	mov	r7, r1
 8013ef0:	4615      	mov	r5, r2
 8013ef2:	d060      	beq.n	8013fb6 <gd32_uart_begin+0xd2>
 8013ef4:	d80f      	bhi.n	8013f16 <gd32_uart_begin+0x32>
 8013ef6:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 8013efa:	4298      	cmp	r0, r3
 8013efc:	d04a      	beq.n	8013f94 <gd32_uart_begin+0xb0>
 8013efe:	d84c      	bhi.n	8013f9a <gd32_uart_begin+0xb6>
 8013f00:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8013f04:	4298      	cmp	r0, r3
 8013f06:	d03e      	beq.n	8013f86 <gd32_uart_begin+0xa2>
 8013f08:	f240 7012 	movw	r0, #1810	; 0x712
 8013f0c:	f7ff f9aa 	bl	8013264 <rcu_periph_clock_enable>
 8013f10:	f240 6004 	movw	r0, #1540	; 0x604
 8013f14:	e00f      	b.n	8013f36 <gd32_uart_begin+0x52>
 8013f16:	4b78      	ldr	r3, [pc, #480]	; (80140f8 <gd32_uart_begin+0x214>)
 8013f18:	4298      	cmp	r0, r3
 8013f1a:	d006      	beq.n	8013f2a <gd32_uart_begin+0x46>
 8013f1c:	f503 5360 	add.w	r3, r3, #14336	; 0x3800
 8013f20:	4298      	cmp	r0, r3
 8013f22:	d045      	beq.n	8013fb0 <gd32_uart_begin+0xcc>
 8013f24:	f641 201f 	movw	r0, #6687	; 0x1a1f
 8013f28:	e047      	b.n	8013fba <gd32_uart_begin+0xd6>
 8013f2a:	f240 600e 	movw	r0, #1550	; 0x60e
 8013f2e:	f7ff f999 	bl	8013264 <rcu_periph_clock_enable>
 8013f32:	f240 6003 	movw	r0, #1539	; 0x603
 8013f36:	f7ff f995 	bl	8013264 <rcu_periph_clock_enable>
 8013f3a:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 8013f3e:	f7ff f991 	bl	8013264 <rcu_periph_clock_enable>
 8013f42:	4b6c      	ldr	r3, [pc, #432]	; (80140f4 <gd32_uart_begin+0x210>)
 8013f44:	429c      	cmp	r4, r3
 8013f46:	f000 80c3 	beq.w	80140d0 <gd32_uart_begin+0x1ec>
 8013f4a:	d83b      	bhi.n	8013fc4 <gd32_uart_begin+0xe0>
 8013f4c:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 8013f50:	429c      	cmp	r4, r3
 8013f52:	f000 809c 	beq.w	801408e <gd32_uart_begin+0x1aa>
 8013f56:	f200 80a7 	bhi.w	80140a8 <gd32_uart_begin+0x1c4>
 8013f5a:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8013f5e:	429c      	cmp	r4, r3
 8013f60:	f000 8088 	beq.w	8014074 <gd32_uart_begin+0x190>
 8013f64:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8013f68:	2203      	movs	r2, #3
 8013f6a:	2118      	movs	r1, #24
 8013f6c:	4863      	ldr	r0, [pc, #396]	; (80140fc <gd32_uart_begin+0x218>)
 8013f6e:	f7ff f8e1 	bl	8013134 <gpio_init>
 8013f72:	2104      	movs	r1, #4
 8013f74:	4861      	ldr	r0, [pc, #388]	; (80140fc <gd32_uart_begin+0x218>)
 8013f76:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8013f7a:	2203      	movs	r2, #3
 8013f7c:	f7ff f8da 	bl	8013134 <gpio_init>
 8013f80:	2101      	movs	r1, #1
 8013f82:	485f      	ldr	r0, [pc, #380]	; (8014100 <gd32_uart_begin+0x21c>)
 8013f84:	e03b      	b.n	8013ffe <gd32_uart_begin+0x11a>
 8013f86:	f240 7011 	movw	r0, #1809	; 0x711
 8013f8a:	f7ff f96b 	bl	8013264 <rcu_periph_clock_enable>
 8013f8e:	f240 6002 	movw	r0, #1538	; 0x602
 8013f92:	e7d0      	b.n	8013f36 <gd32_uart_begin+0x52>
 8013f94:	f240 7013 	movw	r0, #1811	; 0x713
 8013f98:	e7b8      	b.n	8013f0c <gd32_uart_begin+0x28>
 8013f9a:	f240 7014 	movw	r0, #1812	; 0x714
 8013f9e:	f7ff f961 	bl	8013264 <rcu_periph_clock_enable>
 8013fa2:	f240 6004 	movw	r0, #1540	; 0x604
 8013fa6:	f7ff f95d 	bl	8013264 <rcu_periph_clock_enable>
 8013faa:	f240 6005 	movw	r0, #1541	; 0x605
 8013fae:	e7c2      	b.n	8013f36 <gd32_uart_begin+0x52>
 8013fb0:	f641 1018 	movw	r0, #6424	; 0x1918
 8013fb4:	e7aa      	b.n	8013f0c <gd32_uart_begin+0x28>
 8013fb6:	f641 201e 	movw	r0, #6686	; 0x1a1e
 8013fba:	f7ff f953 	bl	8013264 <rcu_periph_clock_enable>
 8013fbe:	f240 6006 	movw	r0, #1542	; 0x606
 8013fc2:	e7b8      	b.n	8013f36 <gd32_uart_begin+0x52>
 8013fc4:	4b4c      	ldr	r3, [pc, #304]	; (80140f8 <gd32_uart_begin+0x214>)
 8013fc6:	429c      	cmp	r4, r3
 8013fc8:	d00b      	beq.n	8013fe2 <gd32_uart_begin+0xfe>
 8013fca:	f503 5360 	add.w	r3, r3, #14336	; 0x3800
 8013fce:	429c      	cmp	r4, r3
 8013fd0:	d076      	beq.n	80140c0 <gd32_uart_begin+0x1dc>
 8013fd2:	2302      	movs	r3, #2
 8013fd4:	2203      	movs	r2, #3
 8013fd6:	2118      	movs	r1, #24
 8013fd8:	484a      	ldr	r0, [pc, #296]	; (8014104 <gd32_uart_begin+0x220>)
 8013fda:	f7ff f8ab 	bl	8013134 <gpio_init>
 8013fde:	2301      	movs	r3, #1
 8013fe0:	e07e      	b.n	80140e0 <gd32_uart_begin+0x1fc>
 8013fe2:	2340      	movs	r3, #64	; 0x40
 8013fe4:	2203      	movs	r2, #3
 8013fe6:	2118      	movs	r1, #24
 8013fe8:	4847      	ldr	r0, [pc, #284]	; (8014108 <gd32_uart_begin+0x224>)
 8013fea:	f7ff f8a3 	bl	8013134 <gpio_init>
 8013fee:	2104      	movs	r1, #4
 8013ff0:	4845      	ldr	r0, [pc, #276]	; (8014108 <gd32_uart_begin+0x224>)
 8013ff2:	2380      	movs	r3, #128	; 0x80
 8013ff4:	2203      	movs	r2, #3
 8013ff6:	f7ff f89d 	bl	8013134 <gpio_init>
 8013ffa:	2101      	movs	r1, #1
 8013ffc:	2004      	movs	r0, #4
 8013ffe:	f7ff f8ed 	bl	80131dc <gpio_pin_remap_config>
 8014002:	4620      	mov	r0, r4
 8014004:	f7ff fc08 	bl	8013818 <usart_deinit>
 8014008:	68e3      	ldr	r3, [r4, #12]
 801400a:	4639      	mov	r1, r7
 801400c:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8014010:	4620      	mov	r0, r4
 8014012:	60e3      	str	r3, [r4, #12]
 8014014:	f7ff fc62 	bl	80138dc <usart_baudrate_set>
 8014018:	f1a5 0309 	sub.w	r3, r5, #9
 801401c:	4259      	negs	r1, r3
 801401e:	4159      	adcs	r1, r3
 8014020:	4620      	mov	r0, r4
 8014022:	0309      	lsls	r1, r1, #12
 8014024:	f7ff fc96 	bl	8013954 <usart_word_length_set>
 8014028:	9906      	ldr	r1, [sp, #24]
 801402a:	4620      	mov	r0, r4
 801402c:	1e8a      	subs	r2, r1, #2
 801402e:	4251      	negs	r1, r2
 8014030:	4151      	adcs	r1, r2
 8014032:	0349      	lsls	r1, r1, #13
 8014034:	f7ff fc96 	bl	8013964 <usart_stop_bit_set>
 8014038:	2e01      	cmp	r6, #1
 801403a:	d055      	beq.n	80140e8 <gd32_uart_begin+0x204>
 801403c:	2e02      	cmp	r6, #2
 801403e:	d156      	bne.n	80140ee <gd32_uart_begin+0x20a>
 8014040:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8014044:	4620      	mov	r0, r4
 8014046:	f7ff fc7d 	bl	8013944 <usart_parity_config>
 801404a:	2100      	movs	r1, #0
 801404c:	4620      	mov	r0, r4
 801404e:	f7ff fc9d 	bl	801398c <usart_hardware_flow_rts_config>
 8014052:	2100      	movs	r1, #0
 8014054:	4620      	mov	r0, r4
 8014056:	f7ff fc9f 	bl	8013998 <usart_hardware_flow_cts_config>
 801405a:	2104      	movs	r1, #4
 801405c:	4620      	mov	r0, r4
 801405e:	f7ff fc8f 	bl	8013980 <usart_receive_config>
 8014062:	2108      	movs	r1, #8
 8014064:	4620      	mov	r0, r4
 8014066:	f7ff fc85 	bl	8013974 <usart_transmit_config>
 801406a:	68e3      	ldr	r3, [r4, #12]
 801406c:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8014070:	60e3      	str	r3, [r4, #12]
 8014072:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014074:	2304      	movs	r3, #4
 8014076:	2203      	movs	r2, #3
 8014078:	2118      	movs	r1, #24
 801407a:	4824      	ldr	r0, [pc, #144]	; (801410c <gd32_uart_begin+0x228>)
 801407c:	f7ff f85a 	bl	8013134 <gpio_init>
 8014080:	2308      	movs	r3, #8
 8014082:	2203      	movs	r2, #3
 8014084:	2104      	movs	r1, #4
 8014086:	4821      	ldr	r0, [pc, #132]	; (801410c <gd32_uart_begin+0x228>)
 8014088:	f7ff f854 	bl	8013134 <gpio_init>
 801408c:	e7b9      	b.n	8014002 <gd32_uart_begin+0x11e>
 801408e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8014092:	2203      	movs	r2, #3
 8014094:	2118      	movs	r1, #24
 8014096:	4819      	ldr	r0, [pc, #100]	; (80140fc <gd32_uart_begin+0x218>)
 8014098:	f7ff f84c 	bl	8013134 <gpio_init>
 801409c:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80140a0:	2203      	movs	r2, #3
 80140a2:	2104      	movs	r1, #4
 80140a4:	4815      	ldr	r0, [pc, #84]	; (80140fc <gd32_uart_begin+0x218>)
 80140a6:	e7ef      	b.n	8014088 <gd32_uart_begin+0x1a4>
 80140a8:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80140ac:	2203      	movs	r2, #3
 80140ae:	2118      	movs	r1, #24
 80140b0:	4812      	ldr	r0, [pc, #72]	; (80140fc <gd32_uart_begin+0x218>)
 80140b2:	f7ff f83f 	bl	8013134 <gpio_init>
 80140b6:	2304      	movs	r3, #4
 80140b8:	2203      	movs	r2, #3
 80140ba:	4619      	mov	r1, r3
 80140bc:	4814      	ldr	r0, [pc, #80]	; (8014110 <gd32_uart_begin+0x22c>)
 80140be:	e7e3      	b.n	8014088 <gd32_uart_begin+0x1a4>
 80140c0:	2340      	movs	r3, #64	; 0x40
 80140c2:	2203      	movs	r2, #3
 80140c4:	2118      	movs	r1, #24
 80140c6:	480d      	ldr	r0, [pc, #52]	; (80140fc <gd32_uart_begin+0x218>)
 80140c8:	f7ff f834 	bl	8013134 <gpio_init>
 80140cc:	2380      	movs	r3, #128	; 0x80
 80140ce:	e7e7      	b.n	80140a0 <gd32_uart_begin+0x1bc>
 80140d0:	f44f 7380 	mov.w	r3, #256	; 0x100
 80140d4:	2203      	movs	r2, #3
 80140d6:	2118      	movs	r1, #24
 80140d8:	480a      	ldr	r0, [pc, #40]	; (8014104 <gd32_uart_begin+0x220>)
 80140da:	f7ff f82b 	bl	8013134 <gpio_init>
 80140de:	2380      	movs	r3, #128	; 0x80
 80140e0:	2203      	movs	r2, #3
 80140e2:	2104      	movs	r1, #4
 80140e4:	4807      	ldr	r0, [pc, #28]	; (8014104 <gd32_uart_begin+0x220>)
 80140e6:	e7cf      	b.n	8014088 <gd32_uart_begin+0x1a4>
 80140e8:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 80140ec:	e7aa      	b.n	8014044 <gd32_uart_begin+0x160>
 80140ee:	2100      	movs	r1, #0
 80140f0:	e7a8      	b.n	8014044 <gd32_uart_begin+0x160>
 80140f2:	bf00      	nop
 80140f4:	40007800 	andmi	r7, r0, r0, lsl #16
 80140f8:	40013800 	andmi	r3, r1, r0, lsl #16
 80140fc:	40011000 	andmi	r1, r1, r0
 8014100:	00140010 	andseq	r0, r4, r0, lsl r0
 8014104:	40011800 	andmi	r1, r1, r0, lsl #16
 8014108:	40010c00 	andmi	r0, r1, r0, lsl #24
 801410c:	40010800 	andmi	r0, r1, r0, lsl #16
 8014110:	40011400 	andmi	r1, r1, r0, lsl #8

08014114 <micros_init()>:
 8014114:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8014116:	2400      	movs	r4, #0
 8014118:	f04f 36ff 	mov.w	r6, #4294967295	; 0xffffffff
 801411c:	4d22      	ldr	r5, [pc, #136]	; (80141a8 <micros_init()+0x94>)
 801411e:	f240 6013 	movw	r0, #1555	; 0x613
 8014122:	f7ff f89f 	bl	8013264 <rcu_periph_clock_enable>
 8014126:	4628      	mov	r0, r5
 8014128:	f7ff fa10 	bl	801354c <timer_deinit>
 801412c:	4b1f      	ldr	r3, [pc, #124]	; (80141ac <micros_init()+0x98>)
 801412e:	4628      	mov	r0, r5
 8014130:	f8c3 4c24 	str.w	r4, [r3, #3108]	; 0xc24
 8014134:	4669      	mov	r1, sp
 8014136:	9400      	str	r4, [sp, #0]
 8014138:	f8ad 4004 	strh.w	r4, [sp, #4]
 801413c:	9602      	str	r6, [sp, #8]
 801413e:	f8ad 400c 	strh.w	r4, [sp, #12]
 8014142:	f7ff faa9 	bl	8013698 <timer_init>
 8014146:	4628      	mov	r0, r5
 8014148:	4621      	mov	r1, r4
 801414a:	f7ff fb4e 	bl	80137ea <timer_master_slave_mode_config>
 801414e:	4628      	mov	r0, r5
 8014150:	2107      	movs	r1, #7
 8014152:	f7ff fb42 	bl	80137da <timer_slave_mode_select>
 8014156:	2120      	movs	r1, #32
 8014158:	4628      	mov	r0, r5
 801415a:	f7ff fb2e 	bl	80137ba <timer_input_trigger_source_select>
 801415e:	4628      	mov	r0, r5
 8014160:	f7ff faf2 	bl	8013748 <timer_enable>
 8014164:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8014168:	f240 6014 	movw	r0, #1556	; 0x614
 801416c:	f7ff f87a 	bl	8013264 <rcu_periph_clock_enable>
 8014170:	4628      	mov	r0, r5
 8014172:	f7ff f9eb 	bl	801354c <timer_deinit>
 8014176:	2377      	movs	r3, #119	; 0x77
 8014178:	626c      	str	r4, [r5, #36]	; 0x24
 801417a:	4669      	mov	r1, sp
 801417c:	4628      	mov	r0, r5
 801417e:	9300      	str	r3, [sp, #0]
 8014180:	f8ad 4004 	strh.w	r4, [sp, #4]
 8014184:	9602      	str	r6, [sp, #8]
 8014186:	f8ad 400c 	strh.w	r4, [sp, #12]
 801418a:	f7ff fa85 	bl	8013698 <timer_init>
 801418e:	4621      	mov	r1, r4
 8014190:	4628      	mov	r0, r5
 8014192:	f7ff fb2a 	bl	80137ea <timer_master_slave_mode_config>
 8014196:	2120      	movs	r1, #32
 8014198:	4628      	mov	r0, r5
 801419a:	f7ff fb16 	bl	80137ca <timer_master_output_trigger_source_select>
 801419e:	4628      	mov	r0, r5
 80141a0:	f7ff fad2 	bl	8013748 <timer_enable>
 80141a4:	b004      	add	sp, #16
 80141a6:	bd70      	pop	{r4, r5, r6, pc}
 80141a8:	40014c00 	andmi	r4, r1, r0, lsl #24
 80141ac:	40014000 	andmi	r4, r1, r0

080141b0 <udelay_init()>:
 80141b0:	4a07      	ldr	r2, [pc, #28]	; (80141d0 <udelay_init()+0x20>)
 80141b2:	f8d2 30fc 	ldr.w	r3, [r2, #252]	; 0xfc
 80141b6:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80141ba:	f8c2 30fc 	str.w	r3, [r2, #252]	; 0xfc
 80141be:	2200      	movs	r2, #0
 80141c0:	4b04      	ldr	r3, [pc, #16]	; (80141d4 <udelay_init()+0x24>)
 80141c2:	605a      	str	r2, [r3, #4]
 80141c4:	681a      	ldr	r2, [r3, #0]
 80141c6:	f042 0201 	orr.w	r2, r2, #1
 80141ca:	601a      	str	r2, [r3, #0]
 80141cc:	4770      	bx	lr
 80141ce:	bf00      	nop
 80141d0:	e000ed00 	and	lr, r0, r0, lsl #26
 80141d4:	e0001000 	and	r1, r0, r0

080141d8 <udelay(unsigned int, unsigned int)>:
 80141d8:	2378      	movs	r3, #120	; 0x78
 80141da:	b530      	push	{r4, r5, lr}
 80141dc:	4358      	muls	r0, r3
 80141de:	b909      	cbnz	r1, 80141e4 <udelay(unsigned int, unsigned int)+0xc>
 80141e0:	4b08      	ldr	r3, [pc, #32]	; (8014204 <udelay(unsigned int, unsigned int)+0x2c>)
 80141e2:	6859      	ldr	r1, [r3, #4]
 80141e4:	2300      	movs	r3, #0
 80141e6:	4c07      	ldr	r4, [pc, #28]	; (8014204 <udelay(unsigned int, unsigned int)+0x2c>)
 80141e8:	6862      	ldr	r2, [r4, #4]
 80141ea:	4291      	cmp	r1, r2
 80141ec:	d0fc      	beq.n	80141e8 <udelay(unsigned int, unsigned int)+0x10>
 80141ee:	bf2a      	itet	cs
 80141f0:	f102 35ff 	addcs.w	r5, r2, #4294967295	; 0xffffffff
 80141f4:	189b      	addcc	r3, r3, r2
 80141f6:	195b      	addcs	r3, r3, r5
 80141f8:	1a5b      	subs	r3, r3, r1
 80141fa:	4283      	cmp	r3, r0
 80141fc:	d300      	bcc.n	8014200 <udelay(unsigned int, unsigned int)+0x28>
 80141fe:	bd30      	pop	{r4, r5, pc}
 8014200:	4611      	mov	r1, r2
 8014202:	e7f1      	b.n	80141e8 <udelay(unsigned int, unsigned int)+0x10>
 8014204:	e0001000 	and	r1, r0, r0

08014208 <mac_address_get>:
 8014208:	2102      	movs	r1, #2
 801420a:	4a07      	ldr	r2, [pc, #28]	; (8014228 <mac_address_get+0x20>)
 801420c:	f8d2 37e8 	ldr.w	r3, [r2, #2024]	; 0x7e8
 8014210:	f8d2 27ec 	ldr.w	r2, [r2, #2028]	; 0x7ec
 8014214:	7001      	strb	r1, [r0, #0]
 8014216:	7042      	strb	r2, [r0, #1]
 8014218:	0e1a      	lsrs	r2, r3, #24
 801421a:	7082      	strb	r2, [r0, #2]
 801421c:	0c1a      	lsrs	r2, r3, #16
 801421e:	70c2      	strb	r2, [r0, #3]
 8014220:	0a1a      	lsrs	r2, r3, #8
 8014222:	7102      	strb	r2, [r0, #4]
 8014224:	7143      	strb	r3, [r0, #5]
 8014226:	4770      	bx	lr
 8014228:	1ffff000 	svcne	0x00fff000

0801422c <adc_mode_config>:
 801422c:	4b06      	ldr	r3, [pc, #24]	; (8014248 <adc_mode_config+0x1c>)
 801422e:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 8014232:	f422 2270 	bic.w	r2, r2, #983040	; 0xf0000
 8014236:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 801423a:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 801423e:	4302      	orrs	r2, r0
 8014240:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 8014244:	4770      	bx	lr
 8014246:	bf00      	nop
 8014248:	40012000 	andmi	r2, r1, r0

0801424c <adc_special_function_config>:
 801424c:	b510      	push	{r4, lr}
 801424e:	f401 7380 	and.w	r3, r1, #256	; 0x100
 8014252:	f401 6480 	and.w	r4, r1, #1024	; 0x400
 8014256:	f001 0102 	and.w	r1, r1, #2
 801425a:	b17a      	cbz	r2, 801427c <adc_special_function_config+0x30>
 801425c:	b11b      	cbz	r3, 8014266 <adc_special_function_config+0x1a>
 801425e:	6843      	ldr	r3, [r0, #4]
 8014260:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8014264:	6043      	str	r3, [r0, #4]
 8014266:	b11c      	cbz	r4, 8014270 <adc_special_function_config+0x24>
 8014268:	6843      	ldr	r3, [r0, #4]
 801426a:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 801426e:	6043      	str	r3, [r0, #4]
 8014270:	b119      	cbz	r1, 801427a <adc_special_function_config+0x2e>
 8014272:	6883      	ldr	r3, [r0, #8]
 8014274:	f043 0302 	orr.w	r3, r3, #2
 8014278:	6083      	str	r3, [r0, #8]
 801427a:	bd10      	pop	{r4, pc}
 801427c:	b11b      	cbz	r3, 8014286 <adc_special_function_config+0x3a>
 801427e:	6843      	ldr	r3, [r0, #4]
 8014280:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8014284:	6043      	str	r3, [r0, #4]
 8014286:	b11c      	cbz	r4, 8014290 <adc_special_function_config+0x44>
 8014288:	6843      	ldr	r3, [r0, #4]
 801428a:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 801428e:	6043      	str	r3, [r0, #4]
 8014290:	2900      	cmp	r1, #0
 8014292:	d0f2      	beq.n	801427a <adc_special_function_config+0x2e>
 8014294:	6883      	ldr	r3, [r0, #8]
 8014296:	f023 0302 	bic.w	r3, r3, #2
 801429a:	e7ed      	b.n	8014278 <adc_special_function_config+0x2c>

0801429c <adc_data_alignment_config>:
 801429c:	6883      	ldr	r3, [r0, #8]
 801429e:	b119      	cbz	r1, 80142a8 <adc_data_alignment_config+0xc>
 80142a0:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 80142a4:	6083      	str	r3, [r0, #8]
 80142a6:	4770      	bx	lr
 80142a8:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80142ac:	e7fa      	b.n	80142a4 <adc_data_alignment_config+0x8>

080142ae <adc_enable>:
 80142ae:	6883      	ldr	r3, [r0, #8]
 80142b0:	07db      	lsls	r3, r3, #31
 80142b2:	bf5e      	ittt	pl
 80142b4:	6883      	ldrpl	r3, [r0, #8]
 80142b6:	f043 0301 	orrpl.w	r3, r3, #1
 80142ba:	6083      	strpl	r3, [r0, #8]
 80142bc:	4770      	bx	lr

080142be <adc_calibration_enable>:
 80142be:	6883      	ldr	r3, [r0, #8]
 80142c0:	f100 0208 	add.w	r2, r0, #8
 80142c4:	f043 0308 	orr.w	r3, r3, #8
 80142c8:	6083      	str	r3, [r0, #8]
 80142ca:	6813      	ldr	r3, [r2, #0]
 80142cc:	0719      	lsls	r1, r3, #28
 80142ce:	d4fc      	bmi.n	80142ca <adc_calibration_enable+0xc>
 80142d0:	6883      	ldr	r3, [r0, #8]
 80142d2:	f043 0304 	orr.w	r3, r3, #4
 80142d6:	6083      	str	r3, [r0, #8]
 80142d8:	6813      	ldr	r3, [r2, #0]
 80142da:	075b      	lsls	r3, r3, #29
 80142dc:	d4fc      	bmi.n	80142d8 <adc_calibration_enable+0x1a>
 80142de:	4770      	bx	lr

080142e0 <adc_tempsensor_vrefint_enable>:
 80142e0:	4a03      	ldr	r2, [pc, #12]	; (80142f0 <adc_tempsensor_vrefint_enable+0x10>)
 80142e2:	f8d2 3408 	ldr.w	r3, [r2, #1032]	; 0x408
 80142e6:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 80142ea:	f8c2 3408 	str.w	r3, [r2, #1032]	; 0x408
 80142ee:	4770      	bx	lr
 80142f0:	40012000 	andmi	r2, r1, r0

080142f4 <adc_channel_length_config>:
 80142f4:	2901      	cmp	r1, #1
 80142f6:	d002      	beq.n	80142fe <adc_channel_length_config+0xa>
 80142f8:	2902      	cmp	r1, #2
 80142fa:	d00c      	beq.n	8014316 <adc_channel_length_config+0x22>
 80142fc:	4770      	bx	lr
 80142fe:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8014300:	3a01      	subs	r2, #1
 8014302:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 8014306:	62c3      	str	r3, [r0, #44]	; 0x2c
 8014308:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 801430a:	0512      	lsls	r2, r2, #20
 801430c:	f402 0270 	and.w	r2, r2, #15728640	; 0xf00000
 8014310:	431a      	orrs	r2, r3
 8014312:	62c2      	str	r2, [r0, #44]	; 0x2c
 8014314:	4770      	bx	lr
 8014316:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8014318:	3a01      	subs	r2, #1
 801431a:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 801431e:	6383      	str	r3, [r0, #56]	; 0x38
 8014320:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8014322:	0512      	lsls	r2, r2, #20
 8014324:	f402 1240 	and.w	r2, r2, #3145728	; 0x300000
 8014328:	431a      	orrs	r2, r3
 801432a:	6382      	str	r2, [r0, #56]	; 0x38
 801432c:	4770      	bx	lr

0801432e <adc_inserted_channel_config>:
 801432e:	b530      	push	{r4, r5, lr}
 8014330:	6b84      	ldr	r4, [r0, #56]	; 0x38
 8014332:	6b85      	ldr	r5, [r0, #56]	; 0x38
 8014334:	f3c4 5401 	ubfx	r4, r4, #20, #2
 8014338:	1a61      	subs	r1, r4, r1
 801433a:	f06f 0404 	mvn.w	r4, #4
 801433e:	4361      	muls	r1, r4
 8014340:	241f      	movs	r4, #31
 8014342:	310f      	adds	r1, #15
 8014344:	408c      	lsls	r4, r1
 8014346:	ea25 0504 	bic.w	r5, r5, r4
 801434a:	fa02 f101 	lsl.w	r1, r2, r1
 801434e:	4329      	orrs	r1, r5
 8014350:	2a09      	cmp	r2, #9
 8014352:	6381      	str	r1, [r0, #56]	; 0x38
 8014354:	d80b      	bhi.n	801436e <adc_inserted_channel_config+0x40>
 8014356:	2407      	movs	r4, #7
 8014358:	6901      	ldr	r1, [r0, #16]
 801435a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801435e:	4094      	lsls	r4, r2
 8014360:	ea21 0104 	bic.w	r1, r1, r4
 8014364:	fa03 f202 	lsl.w	r2, r3, r2
 8014368:	430a      	orrs	r2, r1
 801436a:	6102      	str	r2, [r0, #16]
 801436c:	bd30      	pop	{r4, r5, pc}
 801436e:	2a11      	cmp	r2, #17
 8014370:	d8fc      	bhi.n	801436c <adc_inserted_channel_config+0x3e>
 8014372:	2407      	movs	r4, #7
 8014374:	3a0a      	subs	r2, #10
 8014376:	68c1      	ldr	r1, [r0, #12]
 8014378:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801437c:	4094      	lsls	r4, r2
 801437e:	ea21 0104 	bic.w	r1, r1, r4
 8014382:	4093      	lsls	r3, r2
 8014384:	430b      	orrs	r3, r1
 8014386:	60c3      	str	r3, [r0, #12]
 8014388:	e7f0      	b.n	801436c <adc_inserted_channel_config+0x3e>

0801438a <adc_external_trigger_source_config>:
 801438a:	2901      	cmp	r1, #1
 801438c:	d002      	beq.n	8014394 <adc_external_trigger_source_config+0xa>
 801438e:	2902      	cmp	r1, #2
 8014390:	d008      	beq.n	80143a4 <adc_external_trigger_source_config+0x1a>
 8014392:	4770      	bx	lr
 8014394:	6883      	ldr	r3, [r0, #8]
 8014396:	f423 2360 	bic.w	r3, r3, #917504	; 0xe0000
 801439a:	6083      	str	r3, [r0, #8]
 801439c:	6883      	ldr	r3, [r0, #8]
 801439e:	4313      	orrs	r3, r2
 80143a0:	6083      	str	r3, [r0, #8]
 80143a2:	4770      	bx	lr
 80143a4:	6883      	ldr	r3, [r0, #8]
 80143a6:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80143aa:	e7f6      	b.n	801439a <adc_external_trigger_source_config+0x10>

080143ac <adc_external_trigger_config>:
 80143ac:	f001 0301 	and.w	r3, r1, #1
 80143b0:	f001 0102 	and.w	r1, r1, #2
 80143b4:	b152      	cbz	r2, 80143cc <adc_external_trigger_config+0x20>
 80143b6:	b11b      	cbz	r3, 80143c0 <adc_external_trigger_config+0x14>
 80143b8:	6883      	ldr	r3, [r0, #8]
 80143ba:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80143be:	6083      	str	r3, [r0, #8]
 80143c0:	b119      	cbz	r1, 80143ca <adc_external_trigger_config+0x1e>
 80143c2:	6883      	ldr	r3, [r0, #8]
 80143c4:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80143c8:	6083      	str	r3, [r0, #8]
 80143ca:	4770      	bx	lr
 80143cc:	b11b      	cbz	r3, 80143d6 <adc_external_trigger_config+0x2a>
 80143ce:	6883      	ldr	r3, [r0, #8]
 80143d0:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 80143d4:	6083      	str	r3, [r0, #8]
 80143d6:	2900      	cmp	r1, #0
 80143d8:	d0f7      	beq.n	80143ca <adc_external_trigger_config+0x1e>
 80143da:	6883      	ldr	r3, [r0, #8]
 80143dc:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 80143e0:	e7f2      	b.n	80143c8 <adc_external_trigger_config+0x1c>

080143e2 <adc_software_trigger_enable>:
 80143e2:	07ca      	lsls	r2, r1, #31
 80143e4:	bf42      	ittt	mi
 80143e6:	6883      	ldrmi	r3, [r0, #8]
 80143e8:	f443 0380 	orrmi.w	r3, r3, #4194304	; 0x400000
 80143ec:	6083      	strmi	r3, [r0, #8]
 80143ee:	078b      	lsls	r3, r1, #30
 80143f0:	bf42      	ittt	mi
 80143f2:	6883      	ldrmi	r3, [r0, #8]
 80143f4:	f443 1300 	orrmi.w	r3, r3, #2097152	; 0x200000
 80143f8:	6083      	strmi	r3, [r0, #8]
 80143fa:	4770      	bx	lr

080143fc <enet_delay>:
 80143fc:	2300      	movs	r3, #0
 80143fe:	b082      	sub	sp, #8
 8014400:	9301      	str	r3, [sp, #4]
 8014402:	9001      	str	r0, [sp, #4]
 8014404:	9b01      	ldr	r3, [sp, #4]
 8014406:	b90b      	cbnz	r3, 801440c <enet_delay+0x10>
 8014408:	b002      	add	sp, #8
 801440a:	4770      	bx	lr
 801440c:	9b01      	ldr	r3, [sp, #4]
 801440e:	3b01      	subs	r3, #1
 8014410:	9301      	str	r3, [sp, #4]
 8014412:	e7f7      	b.n	8014404 <enet_delay+0x8>

08014414 <enet_software_reset>:
 8014414:	4b07      	ldr	r3, [pc, #28]	; (8014434 <enet_software_reset+0x20>)
 8014416:	681a      	ldr	r2, [r3, #0]
 8014418:	f042 0201 	orr.w	r2, r2, #1
 801441c:	601a      	str	r2, [r3, #0]
 801441e:	4a06      	ldr	r2, [pc, #24]	; (8014438 <enet_software_reset+0x24>)
 8014420:	6819      	ldr	r1, [r3, #0]
 8014422:	07c9      	lsls	r1, r1, #31
 8014424:	d501      	bpl.n	801442a <enet_software_reset+0x16>
 8014426:	3a01      	subs	r2, #1
 8014428:	d1fa      	bne.n	8014420 <enet_software_reset+0xc>
 801442a:	6818      	ldr	r0, [r3, #0]
 801442c:	43c0      	mvns	r0, r0
 801442e:	f000 0001 	and.w	r0, r0, #1
 8014432:	4770      	bx	lr
 8014434:	40029000 	andmi	r9, r2, r0
 8014438:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

0801443c <enet_descriptors_chain_init>:
 801443c:	f5b0 0fe0 	cmp.w	r0, #7340032	; 0x700000
 8014440:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014442:	4a19      	ldr	r2, [pc, #100]	; (80144a8 <enet_descriptors_chain_init+0x6c>)
 8014444:	d125      	bne.n	8014492 <enet_descriptors_chain_init+0x56>
 8014446:	2500      	movs	r5, #0
 8014448:	f44f 1680 	mov.w	r6, #1048576	; 0x100000
 801444c:	2002      	movs	r0, #2
 801444e:	4b17      	ldr	r3, [pc, #92]	; (80144ac <enet_descriptors_chain_init+0x70>)
 8014450:	4c17      	ldr	r4, [pc, #92]	; (80144b0 <enet_descriptors_chain_init+0x74>)
 8014452:	6113      	str	r3, [r2, #16]
 8014454:	4a17      	ldr	r2, [pc, #92]	; (80144b4 <enet_descriptors_chain_init+0x78>)
 8014456:	6013      	str	r3, [r2, #0]
 8014458:	2200      	movs	r2, #0
 801445a:	f240 5ef4 	movw	lr, #1524	; 0x5f4
 801445e:	4916      	ldr	r1, [pc, #88]	; (80144b8 <enet_descriptors_chain_init+0x7c>)
 8014460:	f100 3cff 	add.w	ip, r0, #4294967295	; 0xffffffff
 8014464:	600a      	str	r2, [r1, #0]
 8014466:	4915      	ldr	r1, [pc, #84]	; (80144bc <enet_descriptors_chain_init+0x80>)
 8014468:	600a      	str	r2, [r1, #0]
 801446a:	f103 0110 	add.w	r1, r3, #16
 801446e:	fb0e 4702 	mla	r7, lr, r2, r4
 8014472:	f841 7c08 	str.w	r7, [r1, #-8]
 8014476:	4594      	cmp	ip, r2
 8014478:	bf94      	ite	ls
 801447a:	461f      	movls	r7, r3
 801447c:	460f      	movhi	r7, r1
 801447e:	3201      	adds	r2, #1
 8014480:	4290      	cmp	r0, r2
 8014482:	e941 6504 	strd	r6, r5, [r1, #-16]
 8014486:	f841 7c04 	str.w	r7, [r1, #-4]
 801448a:	f101 0110 	add.w	r1, r1, #16
 801448e:	d1ee      	bne.n	801446e <enet_descriptors_chain_init+0x32>
 8014490:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014492:	4b0b      	ldr	r3, [pc, #44]	; (80144c0 <enet_descriptors_chain_init+0x84>)
 8014494:	f244 55f4 	movw	r5, #17908	; 0x45f4
 8014498:	60d3      	str	r3, [r2, #12]
 801449a:	4a0a      	ldr	r2, [pc, #40]	; (80144c4 <enet_descriptors_chain_init+0x88>)
 801449c:	f04f 4600 	mov.w	r6, #2147483648	; 0x80000000
 80144a0:	2008      	movs	r0, #8
 80144a2:	4c09      	ldr	r4, [pc, #36]	; (80144c8 <enet_descriptors_chain_init+0x8c>)
 80144a4:	6013      	str	r3, [r2, #0]
 80144a6:	e7d7      	b.n	8014458 <enet_descriptors_chain_init+0x1c>
 80144a8:	40029000 	andmi	r9, r2, r0
 80144ac:	2000e3a4 	andcs	lr, r0, r4, lsr #7
 80144b0:	2000d7bc 			; <UNDEFINED> instruction: 0x2000d7bc
 80144b4:	2000a75c 	andcs	sl, r0, ip, asr r7
 80144b8:	2000a750 	andcs	sl, r0, r0, asr r7
 80144bc:	2000a754 	andcs	sl, r0, r4, asr r7
 80144c0:	2000d73c 	andcs	sp, r0, ip, lsr r7
 80144c4:	2000a758 	andcs	sl, r0, r8, asr r7
 80144c8:	2000a79c 	mulcs	r0, ip, r7

080144cc <enet_frame_receive>:
 80144cc:	4a1d      	ldr	r2, [pc, #116]	; (8014544 <enet_frame_receive+0x78>)
 80144ce:	b510      	push	{r4, lr}
 80144d0:	6813      	ldr	r3, [r2, #0]
 80144d2:	681b      	ldr	r3, [r3, #0]
 80144d4:	2b00      	cmp	r3, #0
 80144d6:	db33      	blt.n	8014540 <enet_frame_receive+0x74>
 80144d8:	b970      	cbnz	r0, 80144f8 <enet_frame_receive+0x2c>
 80144da:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
 80144de:	6813      	ldr	r3, [r2, #0]
 80144e0:	6019      	str	r1, [r3, #0]
 80144e2:	4919      	ldr	r1, [pc, #100]	; (8014548 <enet_frame_receive+0x7c>)
 80144e4:	6948      	ldr	r0, [r1, #20]
 80144e6:	0604      	lsls	r4, r0, #24
 80144e8:	d419      	bmi.n	801451e <enet_frame_receive+0x52>
 80144ea:	6859      	ldr	r1, [r3, #4]
 80144ec:	0448      	lsls	r0, r1, #17
 80144ee:	d51b      	bpl.n	8014528 <enet_frame_receive+0x5c>
 80144f0:	68db      	ldr	r3, [r3, #12]
 80144f2:	2001      	movs	r0, #1
 80144f4:	6013      	str	r3, [r2, #0]
 80144f6:	bd10      	pop	{r4, pc}
 80144f8:	f403 4403 	and.w	r4, r3, #33536	; 0x8300
 80144fc:	f5b4 7f40 	cmp.w	r4, #768	; 0x300
 8014500:	d11e      	bne.n	8014540 <enet_frame_receive+0x74>
 8014502:	f3c3 430d 	ubfx	r3, r3, #16, #14
 8014506:	3b04      	subs	r3, #4
 8014508:	428b      	cmp	r3, r1
 801450a:	d819      	bhi.n	8014540 <enet_frame_receive+0x74>
 801450c:	2100      	movs	r1, #0
 801450e:	4299      	cmp	r1, r3
 8014510:	6814      	ldr	r4, [r2, #0]
 8014512:	d2e2      	bcs.n	80144da <enet_frame_receive+0xe>
 8014514:	68a4      	ldr	r4, [r4, #8]
 8014516:	5d0c      	ldrb	r4, [r1, r4]
 8014518:	5444      	strb	r4, [r0, r1]
 801451a:	3101      	adds	r1, #1
 801451c:	e7f7      	b.n	801450e <enet_frame_receive+0x42>
 801451e:	2080      	movs	r0, #128	; 0x80
 8014520:	6148      	str	r0, [r1, #20]
 8014522:	2000      	movs	r0, #0
 8014524:	6088      	str	r0, [r1, #8]
 8014526:	e7e0      	b.n	80144ea <enet_frame_receive+0x1e>
 8014528:	f411 4f00 	tst.w	r1, #32768	; 0x8000
 801452c:	4906      	ldr	r1, [pc, #24]	; (8014548 <enet_frame_receive+0x7c>)
 801452e:	bf05      	ittet	eq
 8014530:	3310      	addeq	r3, #16
 8014532:	6809      	ldreq	r1, [r1, #0]
 8014534:	68cb      	ldrne	r3, [r1, #12]
 8014536:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 801453a:	bf08      	it	eq
 801453c:	185b      	addeq	r3, r3, r1
 801453e:	e7d8      	b.n	80144f2 <enet_frame_receive+0x26>
 8014540:	2000      	movs	r0, #0
 8014542:	e7d8      	b.n	80144f6 <enet_frame_receive+0x2a>
 8014544:	2000a758 	andcs	sl, r0, r8, asr r7
 8014548:	40029000 	andmi	r9, r2, r0

0801454c <enet_frame_transmit>:
 801454c:	4a1e      	ldr	r2, [pc, #120]	; (80145c8 <enet_frame_transmit+0x7c>)
 801454e:	b530      	push	{r4, r5, lr}
 8014550:	6813      	ldr	r3, [r2, #0]
 8014552:	681b      	ldr	r3, [r3, #0]
 8014554:	2b00      	cmp	r3, #0
 8014556:	db34      	blt.n	80145c2 <enet_frame_transmit+0x76>
 8014558:	f240 53f4 	movw	r3, #1524	; 0x5f4
 801455c:	4299      	cmp	r1, r3
 801455e:	d830      	bhi.n	80145c2 <enet_frame_transmit+0x76>
 8014560:	b9e8      	cbnz	r0, 801459e <enet_frame_transmit+0x52>
 8014562:	6813      	ldr	r3, [r2, #0]
 8014564:	4819      	ldr	r0, [pc, #100]	; (80145cc <enet_frame_transmit+0x80>)
 8014566:	6059      	str	r1, [r3, #4]
 8014568:	6819      	ldr	r1, [r3, #0]
 801456a:	f041 4130 	orr.w	r1, r1, #2952790016	; 0xb0000000
 801456e:	6019      	str	r1, [r3, #0]
 8014570:	6941      	ldr	r1, [r0, #20]
 8014572:	6944      	ldr	r4, [r0, #20]
 8014574:	f001 0104 	and.w	r1, r1, #4
 8014578:	f004 0420 	and.w	r4, r4, #32
 801457c:	4321      	orrs	r1, r4
 801457e:	d110      	bne.n	80145a2 <enet_frame_transmit+0x56>
 8014580:	6819      	ldr	r1, [r3, #0]
 8014582:	02c8      	lsls	r0, r1, #11
 8014584:	d511      	bpl.n	80145aa <enet_frame_transmit+0x5e>
 8014586:	68db      	ldr	r3, [r3, #12]
 8014588:	2001      	movs	r0, #1
 801458a:	6013      	str	r3, [r2, #0]
 801458c:	bd30      	pop	{r4, r5, pc}
 801458e:	5cc5      	ldrb	r5, [r0, r3]
 8014590:	68a4      	ldr	r4, [r4, #8]
 8014592:	551d      	strb	r5, [r3, r4]
 8014594:	3301      	adds	r3, #1
 8014596:	428b      	cmp	r3, r1
 8014598:	6814      	ldr	r4, [r2, #0]
 801459a:	d1f8      	bne.n	801458e <enet_frame_transmit+0x42>
 801459c:	e7e1      	b.n	8014562 <enet_frame_transmit+0x16>
 801459e:	2300      	movs	r3, #0
 80145a0:	e7f9      	b.n	8014596 <enet_frame_transmit+0x4a>
 80145a2:	6141      	str	r1, [r0, #20]
 80145a4:	2100      	movs	r1, #0
 80145a6:	6041      	str	r1, [r0, #4]
 80145a8:	e7ea      	b.n	8014580 <enet_frame_transmit+0x34>
 80145aa:	f411 1f00 	tst.w	r1, #2097152	; 0x200000
 80145ae:	4907      	ldr	r1, [pc, #28]	; (80145cc <enet_frame_transmit+0x80>)
 80145b0:	bf05      	ittet	eq
 80145b2:	3310      	addeq	r3, #16
 80145b4:	6809      	ldreq	r1, [r1, #0]
 80145b6:	690b      	ldrne	r3, [r1, #16]
 80145b8:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 80145bc:	bf08      	it	eq
 80145be:	185b      	addeq	r3, r3, r1
 80145c0:	e7e2      	b.n	8014588 <enet_frame_transmit+0x3c>
 80145c2:	2000      	movs	r0, #0
 80145c4:	e7e2      	b.n	801458c <enet_frame_transmit+0x40>
 80145c6:	bf00      	nop
 80145c8:	2000a75c 	andcs	sl, r0, ip, asr r7
 80145cc:	40029000 	andmi	r9, r2, r0

080145d0 <enet_transmit_checksum_config>:
 80145d0:	6803      	ldr	r3, [r0, #0]
 80145d2:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 80145d6:	430b      	orrs	r3, r1
 80145d8:	6003      	str	r3, [r0, #0]
 80145da:	4770      	bx	lr

080145dc <enet_mac_address_set>:
 80145dc:	888a      	ldrh	r2, [r1, #4]
 80145de:	4b03      	ldr	r3, [pc, #12]	; (80145ec <enet_mac_address_set+0x10>)
 80145e0:	50c2      	str	r2, [r0, r3]
 80145e2:	680a      	ldr	r2, [r1, #0]
 80145e4:	3304      	adds	r3, #4
 80145e6:	50c2      	str	r2, [r0, r3]
 80145e8:	4770      	bx	lr
 80145ea:	bf00      	nop
 80145ec:	40028040 	andmi	r8, r2, r0, asr #32

080145f0 <enet_rx_enable>:
 80145f0:	4a05      	ldr	r2, [pc, #20]	; (8014608 <enet_rx_enable+0x18>)
 80145f2:	6813      	ldr	r3, [r2, #0]
 80145f4:	f043 0304 	orr.w	r3, r3, #4
 80145f8:	6013      	str	r3, [r2, #0]
 80145fa:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 80145fe:	6993      	ldr	r3, [r2, #24]
 8014600:	f043 0302 	orr.w	r3, r3, #2
 8014604:	6193      	str	r3, [r2, #24]
 8014606:	4770      	bx	lr
 8014608:	40028000 	andmi	r8, r2, r0

0801460c <enet_phy_write_read>:
 801460c:	b530      	push	{r4, r5, lr}
 801460e:	4604      	mov	r4, r0
 8014610:	4d13      	ldr	r5, [pc, #76]	; (8014660 <enet_phy_write_read+0x54>)
 8014612:	0192      	lsls	r2, r2, #6
 8014614:	6928      	ldr	r0, [r5, #16]
 8014616:	f402 62f8 	and.w	r2, r2, #1984	; 0x7c0
 801461a:	f420 407f 	bic.w	r0, r0, #65280	; 0xff00
 801461e:	f020 00c3 	bic.w	r0, r0, #195	; 0xc3
 8014622:	4302      	orrs	r2, r0
 8014624:	02c9      	lsls	r1, r1, #11
 8014626:	b289      	uxth	r1, r1
 8014628:	2c02      	cmp	r4, #2
 801462a:	ea42 0204 	orr.w	r2, r2, r4
 801462e:	ea42 0201 	orr.w	r2, r2, r1
 8014632:	bf08      	it	eq
 8014634:	8819      	ldrheq	r1, [r3, #0]
 8014636:	f042 0201 	orr.w	r2, r2, #1
 801463a:	bf08      	it	eq
 801463c:	6169      	streq	r1, [r5, #20]
 801463e:	612a      	str	r2, [r5, #16]
 8014640:	4907      	ldr	r1, [pc, #28]	; (8014660 <enet_phy_write_read+0x54>)
 8014642:	4a08      	ldr	r2, [pc, #32]	; (8014664 <enet_phy_write_read+0x58>)
 8014644:	6908      	ldr	r0, [r1, #16]
 8014646:	07c0      	lsls	r0, r0, #31
 8014648:	d501      	bpl.n	801464e <enet_phy_write_read+0x42>
 801464a:	3a01      	subs	r2, #1
 801464c:	d1fa      	bne.n	8014644 <enet_phy_write_read+0x38>
 801464e:	690a      	ldr	r2, [r1, #16]
 8014650:	43d2      	mvns	r2, r2
 8014652:	f002 0001 	and.w	r0, r2, #1
 8014656:	b90c      	cbnz	r4, 801465c <enet_phy_write_read+0x50>
 8014658:	694a      	ldr	r2, [r1, #20]
 801465a:	801a      	strh	r2, [r3, #0]
 801465c:	bd30      	pop	{r4, r5, pc}
 801465e:	bf00      	nop
 8014660:	40028000 	andmi	r8, r2, r0
 8014664:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

08014668 <enet_phy_config>:
 8014668:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801466a:	4d22      	ldr	r5, [pc, #136]	; (80146f4 <enet_phy_config+0x8c>)
 801466c:	2001      	movs	r0, #1
 801466e:	692c      	ldr	r4, [r5, #16]
 8014670:	f7fe fee4 	bl	801343c <rcu_clock_freq_get>
 8014674:	4b20      	ldr	r3, [pc, #128]	; (80146f8 <enet_phy_config+0x90>)
 8014676:	4a21      	ldr	r2, [pc, #132]	; (80146fc <enet_phy_config+0x94>)
 8014678:	4403      	add	r3, r0
 801467a:	4293      	cmp	r3, r2
 801467c:	f024 041c 	bic.w	r4, r4, #28
 8014680:	d21f      	bcs.n	80146c2 <enet_phy_config+0x5a>
 8014682:	f044 0408 	orr.w	r4, r4, #8
 8014686:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801468a:	612c      	str	r4, [r5, #16]
 801468c:	2200      	movs	r2, #0
 801468e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8014692:	2101      	movs	r1, #1
 8014694:	2002      	movs	r0, #2
 8014696:	f10d 0306 	add.w	r3, sp, #6
 801469a:	f7ff ffb7 	bl	801460c <enet_phy_write_read>
 801469e:	b310      	cbz	r0, 80146e6 <enet_phy_config+0x7e>
 80146a0:	2200      	movs	r2, #0
 80146a2:	4817      	ldr	r0, [pc, #92]	; (8014700 <enet_phy_config+0x98>)
 80146a4:	f7ff feaa 	bl	80143fc <enet_delay>
 80146a8:	2101      	movs	r1, #1
 80146aa:	4610      	mov	r0, r2
 80146ac:	f10d 0306 	add.w	r3, sp, #6
 80146b0:	f7ff ffac 	bl	801460c <enet_phy_write_read>
 80146b4:	b1b8      	cbz	r0, 80146e6 <enet_phy_config+0x7e>
 80146b6:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 80146ba:	43c0      	mvns	r0, r0
 80146bc:	f3c0 30c0 	ubfx	r0, r0, #15, #1
 80146c0:	e012      	b.n	80146e8 <enet_phy_config+0x80>
 80146c2:	4b10      	ldr	r3, [pc, #64]	; (8014704 <enet_phy_config+0x9c>)
 80146c4:	4a10      	ldr	r2, [pc, #64]	; (8014708 <enet_phy_config+0xa0>)
 80146c6:	4403      	add	r3, r0
 80146c8:	4293      	cmp	r3, r2
 80146ca:	d802      	bhi.n	80146d2 <enet_phy_config+0x6a>
 80146cc:	f044 040c 	orr.w	r4, r4, #12
 80146d0:	e7d9      	b.n	8014686 <enet_phy_config+0x1e>
 80146d2:	4b0e      	ldr	r3, [pc, #56]	; (801470c <enet_phy_config+0xa4>)
 80146d4:	4a0e      	ldr	r2, [pc, #56]	; (8014710 <enet_phy_config+0xa8>)
 80146d6:	4403      	add	r3, r0
 80146d8:	4293      	cmp	r3, r2
 80146da:	d3d4      	bcc.n	8014686 <enet_phy_config+0x1e>
 80146dc:	4b0d      	ldr	r3, [pc, #52]	; (8014714 <enet_phy_config+0xac>)
 80146de:	4a0e      	ldr	r2, [pc, #56]	; (8014718 <enet_phy_config+0xb0>)
 80146e0:	4403      	add	r3, r0
 80146e2:	4293      	cmp	r3, r2
 80146e4:	d902      	bls.n	80146ec <enet_phy_config+0x84>
 80146e6:	2000      	movs	r0, #0
 80146e8:	b003      	add	sp, #12
 80146ea:	bd30      	pop	{r4, r5, pc}
 80146ec:	f044 0404 	orr.w	r4, r4, #4
 80146f0:	e7c9      	b.n	8014686 <enet_phy_config+0x1e>
 80146f2:	bf00      	nop
 80146f4:	40028000 	andmi	r8, r2, r0
 80146f8:	feced300 	cdp2	3, 12, cr13, cr14, cr0, {0}
 80146fc:	00e4e1c0 	rsceq	lr, r4, r0, asr #3
 8014700:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 8014704:	fde9f140 	stc2l	1, cr15, [r9, #256]!	; 0x100
 8014708:	017d783f 	cmneq	sp, pc, lsr r8
 801470c:	fc6c7900 	stc2l	9, cr7, [ip], #-0	; <UNPREDICTABLE>
 8014710:	02625a00 	rsbeq	r5, r2, #0, 20
 8014714:	fa0a1f00 	blx	829c31c <__exidx_end+0x2851ac>
 8014718:	01312d00 	teqeq	r1, r0, lsl #26

0801471c <enet_init>:
 801471c:	2300      	movs	r3, #0
 801471e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8014720:	4604      	mov	r4, r0
 8014722:	460d      	mov	r5, r1
 8014724:	4616      	mov	r6, r2
 8014726:	f8ad 3006 	strh.w	r3, [sp, #6]
 801472a:	f7ff ff9d 	bl	8014668 <enet_phy_config>
 801472e:	2800      	cmp	r0, #0
 8014730:	d039      	beq.n	80147a6 <enet_init+0x8a>
 8014732:	4b3c      	ldr	r3, [pc, #240]	; (8014824 <enet_init+0x108>)
 8014734:	4a3c      	ldr	r2, [pc, #240]	; (8014828 <enet_init+0x10c>)
 8014736:	6819      	ldr	r1, [r3, #0]
 8014738:	f44f 50a8 	mov.w	r0, #5376	; 0x1500
 801473c:	400a      	ands	r2, r1
 801473e:	601a      	str	r2, [r3, #0]
 8014740:	2200      	movs	r2, #0
 8014742:	605a      	str	r2, [r3, #4]
 8014744:	609a      	str	r2, [r3, #8]
 8014746:	60da      	str	r2, [r3, #12]
 8014748:	6999      	ldr	r1, [r3, #24]
 801474a:	2c01      	cmp	r4, #1
 801474c:	f021 01be 	bic.w	r1, r1, #190	; 0xbe
 8014750:	ea4f 4101 	mov.w	r1, r1, lsl #16
 8014754:	ea4f 4111 	mov.w	r1, r1, lsr #16
 8014758:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 801475c:	6199      	str	r1, [r3, #24]
 801475e:	4933      	ldr	r1, [pc, #204]	; (801482c <enet_init+0x110>)
 8014760:	f8c1 0080 	str.w	r0, [r1, #128]	; 0x80
 8014764:	61da      	str	r2, [r3, #28]
 8014766:	6988      	ldr	r0, [r1, #24]
 8014768:	4b31      	ldr	r3, [pc, #196]	; (8014830 <enet_init+0x114>)
 801476a:	ea03 0300 	and.w	r3, r3, r0
 801476e:	f043 7308 	orr.w	r3, r3, #35651584	; 0x2200000
 8014772:	618b      	str	r3, [r1, #24]
 8014774:	680b      	ldr	r3, [r1, #0]
 8014776:	4b2f      	ldr	r3, [pc, #188]	; (8014834 <enet_init+0x118>)
 8014778:	600b      	str	r3, [r1, #0]
 801477a:	d01e      	beq.n	80147ba <enet_init+0x9e>
 801477c:	08e3      	lsrs	r3, r4, #3
 801477e:	0861      	lsrs	r1, r4, #1
 8014780:	f401 5100 	and.w	r1, r1, #8192	; 0x2000
 8014784:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8014788:	430b      	orrs	r3, r1
 801478a:	f8ad 3006 	strh.w	r3, [sp, #6]
 801478e:	2101      	movs	r1, #1
 8014790:	2002      	movs	r0, #2
 8014792:	f10d 0306 	add.w	r3, sp, #6
 8014796:	f7ff ff39 	bl	801460c <enet_phy_write_read>
 801479a:	b158      	cbz	r0, 80147b4 <enet_init+0x98>
 801479c:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 80147a0:	f7ff fe2c 	bl	80143fc <enet_delay>
 80147a4:	e05d      	b.n	8014862 <enet_init+0x146>
 80147a6:	4824      	ldr	r0, [pc, #144]	; (8014838 <enet_init+0x11c>)
 80147a8:	f7ff fe28 	bl	80143fc <enet_delay>
 80147ac:	f7ff ff5c 	bl	8014668 <enet_phy_config>
 80147b0:	2800      	cmp	r0, #0
 80147b2:	d1be      	bne.n	8014732 <enet_init+0x16>
 80147b4:	2000      	movs	r0, #0
 80147b6:	b003      	add	sp, #12
 80147b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80147ba:	4614      	mov	r4, r2
 80147bc:	4f1f      	ldr	r7, [pc, #124]	; (801483c <enet_init+0x120>)
 80147be:	2201      	movs	r2, #1
 80147c0:	2000      	movs	r0, #0
 80147c2:	4611      	mov	r1, r2
 80147c4:	f10d 0306 	add.w	r3, sp, #6
 80147c8:	f7ff ff20 	bl	801460c <enet_phy_write_read>
 80147cc:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 80147d0:	3401      	adds	r4, #1
 80147d2:	f002 0204 	and.w	r2, r2, #4
 80147d6:	f8ad 2006 	strh.w	r2, [sp, #6]
 80147da:	b912      	cbnz	r2, 80147e2 <enet_init+0xc6>
 80147dc:	42bc      	cmp	r4, r7
 80147de:	d1ee      	bne.n	80147be <enet_init+0xa2>
 80147e0:	e7e8      	b.n	80147b4 <enet_init+0x98>
 80147e2:	42bc      	cmp	r4, r7
 80147e4:	d0e6      	beq.n	80147b4 <enet_init+0x98>
 80147e6:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 80147ea:	2101      	movs	r1, #1
 80147ec:	f8ad 2006 	strh.w	r2, [sp, #6]
 80147f0:	2002      	movs	r0, #2
 80147f2:	2200      	movs	r2, #0
 80147f4:	f7ff ff0a 	bl	801460c <enet_phy_write_read>
 80147f8:	2800      	cmp	r0, #0
 80147fa:	d0db      	beq.n	80147b4 <enet_init+0x98>
 80147fc:	2400      	movs	r4, #0
 80147fe:	4f0f      	ldr	r7, [pc, #60]	; (801483c <enet_init+0x120>)
 8014800:	2201      	movs	r2, #1
 8014802:	2000      	movs	r0, #0
 8014804:	4611      	mov	r1, r2
 8014806:	f10d 0306 	add.w	r3, sp, #6
 801480a:	f7ff feff 	bl	801460c <enet_phy_write_read>
 801480e:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8014812:	3401      	adds	r4, #1
 8014814:	f002 0220 	and.w	r2, r2, #32
 8014818:	f8ad 2006 	strh.w	r2, [sp, #6]
 801481c:	b982      	cbnz	r2, 8014840 <enet_init+0x124>
 801481e:	42bc      	cmp	r4, r7
 8014820:	d1ee      	bne.n	8014800 <enet_init+0xe4>
 8014822:	e7c7      	b.n	80147b4 <enet_init+0x98>
 8014824:	40028000 	andmi	r8, r2, r0
 8014828:	fd30810f 	ldc2	1, cr8, [r0, #-60]!	; 0xffffffc4
 801482c:	40029000 	andmi	r9, r2, r0
 8014830:	f8de3f23 			; <UNDEFINED> instruction: 0xf8de3f23
 8014834:	02c16000 	sbceq	r6, r1, #0
 8014838:	008fffff 	strdeq	pc, [pc], pc	; <UNPREDICTABLE>
 801483c:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 8014840:	42bc      	cmp	r4, r7
 8014842:	d0b7      	beq.n	80147b4 <enet_init+0x98>
 8014844:	2101      	movs	r1, #1
 8014846:	2210      	movs	r2, #16
 8014848:	2000      	movs	r0, #0
 801484a:	f7ff fedf 	bl	801460c <enet_phy_write_read>
 801484e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8014852:	f3c3 0480 	ubfx	r4, r3, #2, #1
 8014856:	0799      	lsls	r1, r3, #30
 8014858:	ea4f 24c4 	mov.w	r4, r4, lsl #11
 801485c:	d401      	bmi.n	8014862 <enet_init+0x146>
 801485e:	f444 4480 	orr.w	r4, r4, #16384	; 0x4000
 8014862:	4b63      	ldr	r3, [pc, #396]	; (80149f0 <enet_init+0x2d4>)
 8014864:	681a      	ldr	r2, [r3, #0]
 8014866:	f422 42b0 	bic.w	r2, r2, #22528	; 0x5800
 801486a:	4314      	orrs	r4, r2
 801486c:	056a      	lsls	r2, r5, #21
 801486e:	601c      	str	r4, [r3, #0]
 8014870:	d50b      	bpl.n	801488a <enet_init+0x16e>
 8014872:	681a      	ldr	r2, [r3, #0]
 8014874:	f005 6580 	and.w	r5, r5, #67108864	; 0x4000000
 8014878:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 801487c:	601a      	str	r2, [r3, #0]
 801487e:	4a5d      	ldr	r2, [pc, #372]	; (80149f4 <enet_init+0x2d8>)
 8014880:	6993      	ldr	r3, [r2, #24]
 8014882:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 8014886:	431d      	orrs	r5, r3
 8014888:	6195      	str	r5, [r2, #24]
 801488a:	4959      	ldr	r1, [pc, #356]	; (80149f0 <enet_init+0x2d4>)
 801488c:	684b      	ldr	r3, [r1, #4]
 801488e:	431e      	orrs	r6, r3
 8014890:	4b59      	ldr	r3, [pc, #356]	; (80149f8 <enet_init+0x2dc>)
 8014892:	604e      	str	r6, [r1, #4]
 8014894:	681a      	ldr	r2, [r3, #0]
 8014896:	07d7      	lsls	r7, r2, #31
 8014898:	d510      	bpl.n	80148bc <enet_init+0x1a0>
 801489a:	685a      	ldr	r2, [r3, #4]
 801489c:	680c      	ldr	r4, [r1, #0]
 801489e:	f002 0080 	and.w	r0, r2, #128	; 0x80
 80148a2:	f024 0480 	bic.w	r4, r4, #128	; 0x80
 80148a6:	4320      	orrs	r0, r4
 80148a8:	6008      	str	r0, [r1, #0]
 80148aa:	4852      	ldr	r0, [pc, #328]	; (80149f4 <enet_init+0x2d8>)
 80148ac:	0892      	lsrs	r2, r2, #2
 80148ae:	6981      	ldr	r1, [r0, #24]
 80148b0:	f002 02c0 	and.w	r2, r2, #192	; 0xc0
 80148b4:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 80148b8:	430a      	orrs	r2, r1
 80148ba:	6182      	str	r2, [r0, #24]
 80148bc:	681a      	ldr	r2, [r3, #0]
 80148be:	0796      	lsls	r6, r2, #30
 80148c0:	d508      	bpl.n	80148d4 <enet_init+0x1b8>
 80148c2:	494c      	ldr	r1, [pc, #304]	; (80149f4 <enet_init+0x2d8>)
 80148c4:	6898      	ldr	r0, [r3, #8]
 80148c6:	680a      	ldr	r2, [r1, #0]
 80148c8:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 80148cc:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 80148d0:	4302      	orrs	r2, r0
 80148d2:	600a      	str	r2, [r1, #0]
 80148d4:	681a      	ldr	r2, [r3, #0]
 80148d6:	0755      	lsls	r5, r2, #29
 80148d8:	d508      	bpl.n	80148ec <enet_init+0x1d0>
 80148da:	4946      	ldr	r1, [pc, #280]	; (80149f4 <enet_init+0x2d8>)
 80148dc:	68d8      	ldr	r0, [r3, #12]
 80148de:	680a      	ldr	r2, [r1, #0]
 80148e0:	f422 027e 	bic.w	r2, r2, #16646144	; 0xfe0000
 80148e4:	f422 527c 	bic.w	r2, r2, #16128	; 0x3f00
 80148e8:	4302      	orrs	r2, r0
 80148ea:	600a      	str	r2, [r1, #0]
 80148ec:	681a      	ldr	r2, [r3, #0]
 80148ee:	0714      	lsls	r4, r2, #28
 80148f0:	d508      	bpl.n	8014904 <enet_init+0x1e8>
 80148f2:	4940      	ldr	r1, [pc, #256]	; (80149f4 <enet_init+0x2d8>)
 80148f4:	6918      	ldr	r0, [r3, #16]
 80148f6:	680a      	ldr	r2, [r1, #0]
 80148f8:	f422 4240 	bic.w	r2, r2, #49152	; 0xc000
 80148fc:	f022 0202 	bic.w	r2, r2, #2
 8014900:	4302      	orrs	r2, r0
 8014902:	600a      	str	r2, [r1, #0]
 8014904:	681a      	ldr	r2, [r3, #0]
 8014906:	06d0      	lsls	r0, r2, #27
 8014908:	d506      	bpl.n	8014918 <enet_init+0x1fc>
 801490a:	493a      	ldr	r1, [pc, #232]	; (80149f4 <enet_init+0x2d8>)
 801490c:	4a3b      	ldr	r2, [pc, #236]	; (80149fc <enet_init+0x2e0>)
 801490e:	6988      	ldr	r0, [r1, #24]
 8014910:	4002      	ands	r2, r0
 8014912:	6958      	ldr	r0, [r3, #20]
 8014914:	4302      	orrs	r2, r0
 8014916:	618a      	str	r2, [r1, #24]
 8014918:	681a      	ldr	r2, [r3, #0]
 801491a:	0691      	lsls	r1, r2, #26
 801491c:	d508      	bpl.n	8014930 <enet_init+0x214>
 801491e:	4935      	ldr	r1, [pc, #212]	; (80149f4 <enet_init+0x2d8>)
 8014920:	6998      	ldr	r0, [r3, #24]
 8014922:	698a      	ldr	r2, [r1, #24]
 8014924:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
 8014928:	f022 0204 	bic.w	r2, r2, #4
 801492c:	4302      	orrs	r2, r0
 801492e:	618a      	str	r2, [r1, #24]
 8014930:	681a      	ldr	r2, [r3, #0]
 8014932:	0652      	lsls	r2, r2, #25
 8014934:	d506      	bpl.n	8014944 <enet_init+0x228>
 8014936:	492e      	ldr	r1, [pc, #184]	; (80149f0 <enet_init+0x2d4>)
 8014938:	69d8      	ldr	r0, [r3, #28]
 801493a:	69ca      	ldr	r2, [r1, #28]
 801493c:	0c52      	lsrs	r2, r2, #17
 801493e:	0452      	lsls	r2, r2, #17
 8014940:	4302      	orrs	r2, r0
 8014942:	61ca      	str	r2, [r1, #28]
 8014944:	681a      	ldr	r2, [r3, #0]
 8014946:	0617      	lsls	r7, r2, #24
 8014948:	d517      	bpl.n	801497a <enet_init+0x25e>
 801494a:	4c29      	ldr	r4, [pc, #164]	; (80149f0 <enet_init+0x2d4>)
 801494c:	6a1a      	ldr	r2, [r3, #32]
 801494e:	69a0      	ldr	r0, [r4, #24]
 8014950:	f422 417f 	bic.w	r1, r2, #65280	; 0xff00
 8014954:	f020 00be 	bic.w	r0, r0, #190	; 0xbe
 8014958:	0400      	lsls	r0, r0, #16
 801495a:	0c00      	lsrs	r0, r0, #16
 801495c:	f021 0141 	bic.w	r1, r1, #65	; 0x41
 8014960:	4301      	orrs	r1, r0
 8014962:	4824      	ldr	r0, [pc, #144]	; (80149f4 <enet_init+0x2d8>)
 8014964:	61a1      	str	r1, [r4, #24]
 8014966:	f8d0 1080 	ldr.w	r1, [r0, #128]	; 0x80
 801496a:	0a12      	lsrs	r2, r2, #8
 801496c:	f021 0177 	bic.w	r1, r1, #119	; 0x77
 8014970:	f002 0277 	and.w	r2, r2, #119	; 0x77
 8014974:	430a      	orrs	r2, r1
 8014976:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 801497a:	681a      	ldr	r2, [r3, #0]
 801497c:	05d6      	lsls	r6, r2, #23
 801497e:	bf42      	ittt	mi
 8014980:	6a59      	ldrmi	r1, [r3, #36]	; 0x24
 8014982:	4a1b      	ldrmi	r2, [pc, #108]	; (80149f0 <enet_init+0x2d4>)
 8014984:	6091      	strmi	r1, [r2, #8]
 8014986:	681a      	ldr	r2, [r3, #0]
 8014988:	0595      	lsls	r5, r2, #22
 801498a:	bf42      	ittt	mi
 801498c:	4a18      	ldrmi	r2, [pc, #96]	; (80149f0 <enet_init+0x2d4>)
 801498e:	6a99      	ldrmi	r1, [r3, #40]	; 0x28
 8014990:	60d1      	strmi	r1, [r2, #12]
 8014992:	681a      	ldr	r2, [r3, #0]
 8014994:	0554      	lsls	r4, r2, #21
 8014996:	d508      	bpl.n	80149aa <enet_init+0x28e>
 8014998:	4915      	ldr	r1, [pc, #84]	; (80149f0 <enet_init+0x2d4>)
 801499a:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 801499c:	684a      	ldr	r2, [r1, #4]
 801499e:	f422 62fb 	bic.w	r2, r2, #2008	; 0x7d8
 80149a2:	f022 0206 	bic.w	r2, r2, #6
 80149a6:	4302      	orrs	r2, r0
 80149a8:	604a      	str	r2, [r1, #4]
 80149aa:	681a      	ldr	r2, [r3, #0]
 80149ac:	0510      	lsls	r0, r2, #20
 80149ae:	d508      	bpl.n	80149c2 <enet_init+0x2a6>
 80149b0:	490f      	ldr	r1, [pc, #60]	; (80149f0 <enet_init+0x2d4>)
 80149b2:	6b18      	ldr	r0, [r3, #48]	; 0x30
 80149b4:	680a      	ldr	r2, [r1, #0]
 80149b6:	f422 3291 	bic.w	r2, r2, #74240	; 0x12200
 80149ba:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 80149be:	4302      	orrs	r2, r0
 80149c0:	600a      	str	r2, [r1, #0]
 80149c2:	681a      	ldr	r2, [r3, #0]
 80149c4:	04d1      	lsls	r1, r2, #19
 80149c6:	d506      	bpl.n	80149d6 <enet_init+0x2ba>
 80149c8:	4909      	ldr	r1, [pc, #36]	; (80149f0 <enet_init+0x2d4>)
 80149ca:	6b58      	ldr	r0, [r3, #52]	; 0x34
 80149cc:	680a      	ldr	r2, [r1, #0]
 80149ce:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 80149d2:	4302      	orrs	r2, r0
 80149d4:	600a      	str	r2, [r1, #0]
 80149d6:	681a      	ldr	r2, [r3, #0]
 80149d8:	0492      	lsls	r2, r2, #18
 80149da:	d506      	bpl.n	80149ea <enet_init+0x2ce>
 80149dc:	4904      	ldr	r1, [pc, #16]	; (80149f0 <enet_init+0x2d4>)
 80149de:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80149e0:	680a      	ldr	r2, [r1, #0]
 80149e2:	f422 2260 	bic.w	r2, r2, #917504	; 0xe0000
 80149e6:	4313      	orrs	r3, r2
 80149e8:	600b      	str	r3, [r1, #0]
 80149ea:	2001      	movs	r0, #1
 80149ec:	e6e3      	b.n	80147b6 <enet_init+0x9a>
 80149ee:	bf00      	nop
 80149f0:	40028000 	andmi	r8, r2, r0
 80149f4:	40029000 	andmi	r9, r2, r0
 80149f8:	2000a760 	andcs	sl, r0, r0, ror #14
 80149fc:	fdde3fe7 	ldc2l	15, cr3, [lr, #924]	; 0x39c

08014a00 <enet_txfifo_flush>:
 8014a00:	4b06      	ldr	r3, [pc, #24]	; (8014a1c <enet_txfifo_flush+0x1c>)
 8014a02:	4807      	ldr	r0, [pc, #28]	; (8014a20 <enet_txfifo_flush+0x20>)
 8014a04:	699a      	ldr	r2, [r3, #24]
 8014a06:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8014a0a:	619a      	str	r2, [r3, #24]
 8014a0c:	699a      	ldr	r2, [r3, #24]
 8014a0e:	02d2      	lsls	r2, r2, #11
 8014a10:	d502      	bpl.n	8014a18 <enet_txfifo_flush+0x18>
 8014a12:	3801      	subs	r0, #1
 8014a14:	d1fa      	bne.n	8014a0c <enet_txfifo_flush+0xc>
 8014a16:	4770      	bx	lr
 8014a18:	2001      	movs	r0, #1
 8014a1a:	4770      	bx	lr
 8014a1c:	40029000 	andmi	r9, r2, r0
 8014a20:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

08014a24 <enet_tx_enable>:
 8014a24:	4a06      	ldr	r2, [pc, #24]	; (8014a40 <enet_tx_enable+0x1c>)
 8014a26:	b508      	push	{r3, lr}
 8014a28:	6813      	ldr	r3, [r2, #0]
 8014a2a:	f043 0308 	orr.w	r3, r3, #8
 8014a2e:	6013      	str	r3, [r2, #0]
 8014a30:	f7ff ffe6 	bl	8014a00 <enet_txfifo_flush>
 8014a34:	4a03      	ldr	r2, [pc, #12]	; (8014a44 <enet_tx_enable+0x20>)
 8014a36:	6993      	ldr	r3, [r2, #24]
 8014a38:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8014a3c:	6193      	str	r3, [r2, #24]
 8014a3e:	bd08      	pop	{r3, pc}
 8014a40:	40028000 	andmi	r8, r2, r0
 8014a44:	40029000 	andmi	r9, r2, r0

08014a48 <enet_enable>:
 8014a48:	b508      	push	{r3, lr}
 8014a4a:	f7ff ffeb 	bl	8014a24 <enet_tx_enable>
 8014a4e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8014a52:	f7ff bdcd 	b.w	80145f0 <enet_rx_enable>

08014a56 <enet_desc_information_get>:
 8014a56:	2905      	cmp	r1, #5
 8014a58:	d817      	bhi.n	8014a8a <enet_desc_information_get+0x34>
 8014a5a:	e8df f001 	tbb	[pc, r1]
 8014a5e:	03091012 	movweq	r1, #36882	; 0x9012
 8014a62:	68401007 	stmdavs	r0, {r0, r1, r2, ip}^
 8014a66:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8014a6a:	4770      	bx	lr
 8014a6c:	88c0      	ldrh	r0, [r0, #6]
 8014a6e:	e7fa      	b.n	8014a66 <enet_desc_information_get+0x10>
 8014a70:	8840      	ldrh	r0, [r0, #2]
 8014a72:	f3c0 000d 	ubfx	r0, r0, #0, #14
 8014a76:	2804      	cmp	r0, #4
 8014a78:	d90a      	bls.n	8014a90 <enet_desc_information_get+0x3a>
 8014a7a:	3804      	subs	r0, #4
 8014a7c:	4770      	bx	lr
 8014a7e:	6880      	ldr	r0, [r0, #8]
 8014a80:	4770      	bx	lr
 8014a82:	6800      	ldr	r0, [r0, #0]
 8014a84:	f3c0 00c3 	ubfx	r0, r0, #3, #4
 8014a88:	4770      	bx	lr
 8014a8a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8014a8e:	4770      	bx	lr
 8014a90:	2000      	movs	r0, #0
 8014a92:	4770      	bx	lr

08014a94 <enet_rxframe_drop>:
 8014a94:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8014a98:	4814      	ldr	r0, [pc, #80]	; (8014aec <enet_rxframe_drop+0x58>)
 8014a9a:	b510      	push	{r4, lr}
 8014a9c:	6802      	ldr	r2, [r0, #0]
 8014a9e:	4914      	ldr	r1, [pc, #80]	; (8014af0 <enet_rxframe_drop+0x5c>)
 8014aa0:	6854      	ldr	r4, [r2, #4]
 8014aa2:	6013      	str	r3, [r2, #0]
 8014aa4:	f414 4f80 	tst.w	r4, #16384	; 0x4000
 8014aa8:	680b      	ldr	r3, [r1, #0]
 8014aaa:	d009      	beq.n	8014ac0 <enet_rxframe_drop+0x2c>
 8014aac:	b12b      	cbz	r3, 8014aba <enet_rxframe_drop+0x26>
 8014aae:	68da      	ldr	r2, [r3, #12]
 8014ab0:	6002      	str	r2, [r0, #0]
 8014ab2:	681a      	ldr	r2, [r3, #0]
 8014ab4:	b1ba      	cbz	r2, 8014ae6 <enet_rxframe_drop+0x52>
 8014ab6:	600a      	str	r2, [r1, #0]
 8014ab8:	bd10      	pop	{r4, pc}
 8014aba:	68d3      	ldr	r3, [r2, #12]
 8014abc:	6003      	str	r3, [r0, #0]
 8014abe:	e7fb      	b.n	8014ab8 <enet_rxframe_drop+0x24>
 8014ac0:	f414 4f00 	tst.w	r4, #32768	; 0x8000
 8014ac4:	4c0b      	ldr	r4, [pc, #44]	; (8014af4 <enet_rxframe_drop+0x60>)
 8014ac6:	d006      	beq.n	8014ad6 <enet_rxframe_drop+0x42>
 8014ac8:	68e2      	ldr	r2, [r4, #12]
 8014aca:	6002      	str	r2, [r0, #0]
 8014acc:	2b00      	cmp	r3, #0
 8014ace:	d0f3      	beq.n	8014ab8 <enet_rxframe_drop+0x24>
 8014ad0:	681b      	ldr	r3, [r3, #0]
 8014ad2:	600b      	str	r3, [r1, #0]
 8014ad4:	e7f0      	b.n	8014ab8 <enet_rxframe_drop+0x24>
 8014ad6:	6824      	ldr	r4, [r4, #0]
 8014ad8:	3210      	adds	r2, #16
 8014ada:	f3c4 0484 	ubfx	r4, r4, #2, #5
 8014ade:	4422      	add	r2, r4
 8014ae0:	6002      	str	r2, [r0, #0]
 8014ae2:	2b00      	cmp	r3, #0
 8014ae4:	d0e8      	beq.n	8014ab8 <enet_rxframe_drop+0x24>
 8014ae6:	3310      	adds	r3, #16
 8014ae8:	e7f3      	b.n	8014ad2 <enet_rxframe_drop+0x3e>
 8014aea:	bf00      	nop
 8014aec:	2000a758 	andcs	sl, r0, r8, asr r7
 8014af0:	2000a750 	andcs	sl, r0, r0, asr r7
 8014af4:	40029000 	andmi	r9, r2, r0

08014af8 <enet_rxframe_size_get>:
 8014af8:	b508      	push	{r3, lr}
 8014afa:	4b0c      	ldr	r3, [pc, #48]	; (8014b2c <enet_rxframe_size_get+0x34>)
 8014afc:	681b      	ldr	r3, [r3, #0]
 8014afe:	6818      	ldr	r0, [r3, #0]
 8014b00:	2800      	cmp	r0, #0
 8014b02:	db10      	blt.n	8014b26 <enet_rxframe_size_get+0x2e>
 8014b04:	f400 4303 	and.w	r3, r0, #33536	; 0x8300
 8014b08:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8014b0c:	d003      	beq.n	8014b16 <enet_rxframe_size_get+0x1e>
 8014b0e:	f7ff ffc1 	bl	8014a94 <enet_rxframe_drop>
 8014b12:	2001      	movs	r0, #1
 8014b14:	bd08      	pop	{r3, pc}
 8014b16:	f000 0321 	and.w	r3, r0, #33	; 0x21
 8014b1a:	2b21      	cmp	r3, #33	; 0x21
 8014b1c:	d0f7      	beq.n	8014b0e <enet_rxframe_size_get+0x16>
 8014b1e:	f3c0 400d 	ubfx	r0, r0, #16, #14
 8014b22:	3804      	subs	r0, #4
 8014b24:	e7f6      	b.n	8014b14 <enet_rxframe_size_get+0x1c>
 8014b26:	2000      	movs	r0, #0
 8014b28:	e7f4      	b.n	8014b14 <enet_rxframe_size_get+0x1c>
 8014b2a:	bf00      	nop
 8014b2c:	2000a758 	andcs	sl, r0, r8, asr r7

08014b30 <enet_initpara_reset>:
 8014b30:	2200      	movs	r2, #0
 8014b32:	4b08      	ldr	r3, [pc, #32]	; (8014b54 <enet_initpara_reset+0x24>)
 8014b34:	e9c3 2200 	strd	r2, r2, [r3]
 8014b38:	e9c3 2202 	strd	r2, r2, [r3, #8]
 8014b3c:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8014b40:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8014b44:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8014b48:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 8014b4c:	e9c3 220c 	strd	r2, r2, [r3, #48]	; 0x30
 8014b50:	639a      	str	r2, [r3, #56]	; 0x38
 8014b52:	4770      	bx	lr
 8014b54:	2000a760 	andcs	sl, r0, r0, ror #14

08014b58 <enet_deinit>:
 8014b58:	b508      	push	{r3, lr}
 8014b5a:	f640 200e 	movw	r0, #2574	; 0xa0e
 8014b5e:	f7fe fb9c 	bl	801329a <rcu_periph_reset_enable>
 8014b62:	f640 200e 	movw	r0, #2574	; 0xa0e
 8014b66:	f7fe fb9a 	bl	801329e <rcu_periph_reset_disable>
 8014b6a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8014b6e:	f7ff bfdf 	b.w	8014b30 <enet_initpara_reset>
	...

08014b74 <i2c_clock_config>:
 8014b74:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014b76:	4605      	mov	r5, r0
 8014b78:	2002      	movs	r0, #2
 8014b7a:	460c      	mov	r4, r1
 8014b7c:	4617      	mov	r7, r2
 8014b7e:	f7fe fc5d 	bl	801343c <rcu_clock_freq_get>
 8014b82:	4603      	mov	r3, r0
 8014b84:	4828      	ldr	r0, [pc, #160]	; (8014c28 <i2c_clock_config+0xb4>)
 8014b86:	4a29      	ldr	r2, [pc, #164]	; (8014c2c <i2c_clock_config+0xb8>)
 8014b88:	fbb3 f0f0 	udiv	r0, r3, r0
 8014b8c:	4293      	cmp	r3, r2
 8014b8e:	bf94      	ite	ls
 8014b90:	4601      	movls	r1, r0
 8014b92:	213f      	movhi	r1, #63	; 0x3f
 8014b94:	686e      	ldr	r6, [r5, #4]
 8014b96:	4a26      	ldr	r2, [pc, #152]	; (8014c30 <i2c_clock_config+0xbc>)
 8014b98:	f026 063f 	bic.w	r6, r6, #63	; 0x3f
 8014b9c:	430e      	orrs	r6, r1
 8014b9e:	4294      	cmp	r4, r2
 8014ba0:	606e      	str	r6, [r5, #4]
 8014ba2:	d816      	bhi.n	8014bd2 <i2c_clock_config+0x5e>
 8014ba4:	3001      	adds	r0, #1
 8014ba6:	283e      	cmp	r0, #62	; 0x3e
 8014ba8:	d90d      	bls.n	8014bc6 <i2c_clock_config+0x52>
 8014baa:	223f      	movs	r2, #63	; 0x3f
 8014bac:	622a      	str	r2, [r5, #32]
 8014bae:	0064      	lsls	r4, r4, #1
 8014bb0:	fbb3 f4f4 	udiv	r4, r3, r4
 8014bb4:	2c04      	cmp	r4, #4
 8014bb6:	bf38      	it	cc
 8014bb8:	2404      	movcc	r4, #4
 8014bba:	69ea      	ldr	r2, [r5, #28]
 8014bbc:	f3c4 040b 	ubfx	r4, r4, #0, #12
 8014bc0:	4314      	orrs	r4, r2
 8014bc2:	61ec      	str	r4, [r5, #28]
 8014bc4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014bc6:	2802      	cmp	r0, #2
 8014bc8:	d801      	bhi.n	8014bce <i2c_clock_config+0x5a>
 8014bca:	2202      	movs	r2, #2
 8014bcc:	e7ee      	b.n	8014bac <i2c_clock_config+0x38>
 8014bce:	6228      	str	r0, [r5, #32]
 8014bd0:	e7ed      	b.n	8014bae <i2c_clock_config+0x3a>
 8014bd2:	4a18      	ldr	r2, [pc, #96]	; (8014c34 <i2c_clock_config+0xc0>)
 8014bd4:	4294      	cmp	r4, r2
 8014bd6:	d8f5      	bhi.n	8014bc4 <i2c_clock_config+0x50>
 8014bd8:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8014bdc:	4351      	muls	r1, r2
 8014bde:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8014be2:	fbb1 f1f2 	udiv	r1, r1, r2
 8014be6:	3101      	adds	r1, #1
 8014be8:	6229      	str	r1, [r5, #32]
 8014bea:	b9a7      	cbnz	r7, 8014c16 <i2c_clock_config+0xa2>
 8014bec:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8014bf0:	fbb3 f4f4 	udiv	r4, r3, r4
 8014bf4:	69eb      	ldr	r3, [r5, #28]
 8014bf6:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8014bfa:	61eb      	str	r3, [r5, #28]
 8014bfc:	f3c4 030b 	ubfx	r3, r4, #0, #12
 8014c00:	b90b      	cbnz	r3, 8014c06 <i2c_clock_config+0x92>
 8014c02:	f044 0401 	orr.w	r4, r4, #1
 8014c06:	69eb      	ldr	r3, [r5, #28]
 8014c08:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8014c0c:	61eb      	str	r3, [r5, #28]
 8014c0e:	69eb      	ldr	r3, [r5, #28]
 8014c10:	4323      	orrs	r3, r4
 8014c12:	61eb      	str	r3, [r5, #28]
 8014c14:	e7d6      	b.n	8014bc4 <i2c_clock_config+0x50>
 8014c16:	2219      	movs	r2, #25
 8014c18:	4354      	muls	r4, r2
 8014c1a:	fbb3 f4f4 	udiv	r4, r3, r4
 8014c1e:	69eb      	ldr	r3, [r5, #28]
 8014c20:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8014c24:	e7e9      	b.n	8014bfa <i2c_clock_config+0x86>
 8014c26:	bf00      	nop
 8014c28:	000f4240 	andeq	r4, pc, r0, asr #4
 8014c2c:	03c14dbf 	biceq	r4, r1, #12224	; 0x2fc0
 8014c30:	000186a0 	andeq	r8, r1, r0, lsr #13
 8014c34:	00061a80 	andeq	r1, r6, r0, lsl #21

08014c38 <i2c_ack_config>:
 8014c38:	6803      	ldr	r3, [r0, #0]
 8014c3a:	2901      	cmp	r1, #1
 8014c3c:	bf0c      	ite	eq
 8014c3e:	f443 6380 	orreq.w	r3, r3, #1024	; 0x400
 8014c42:	f423 6380 	bicne.w	r3, r3, #1024	; 0x400
 8014c46:	6003      	str	r3, [r0, #0]
 8014c48:	4770      	bx	lr

08014c4a <i2c_ackpos_config>:
 8014c4a:	6803      	ldr	r3, [r0, #0]
 8014c4c:	b919      	cbnz	r1, 8014c56 <i2c_ackpos_config+0xc>
 8014c4e:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8014c52:	6003      	str	r3, [r0, #0]
 8014c54:	4770      	bx	lr
 8014c56:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8014c5a:	e7fa      	b.n	8014c52 <i2c_ackpos_config+0x8>

08014c5c <i2c_master_addressing>:
 8014c5c:	3202      	adds	r2, #2
 8014c5e:	bf0c      	ite	eq
 8014c60:	f021 0101 	biceq.w	r1, r1, #1
 8014c64:	f041 0101 	orrne.w	r1, r1, #1
 8014c68:	6101      	str	r1, [r0, #16]
 8014c6a:	4770      	bx	lr

08014c6c <i2c_enable>:
 8014c6c:	6803      	ldr	r3, [r0, #0]
 8014c6e:	f043 0301 	orr.w	r3, r3, #1
 8014c72:	6003      	str	r3, [r0, #0]
 8014c74:	4770      	bx	lr

08014c76 <i2c_start_on_bus>:
 8014c76:	6803      	ldr	r3, [r0, #0]
 8014c78:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8014c7c:	6003      	str	r3, [r0, #0]
 8014c7e:	4770      	bx	lr

08014c80 <i2c_stop_on_bus>:
 8014c80:	6803      	ldr	r3, [r0, #0]
 8014c82:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8014c86:	6003      	str	r3, [r0, #0]
 8014c88:	4770      	bx	lr

08014c8a <i2c_data_transmit>:
 8014c8a:	6101      	str	r1, [r0, #16]
 8014c8c:	4770      	bx	lr

08014c8e <i2c_data_receive>:
 8014c8e:	6900      	ldr	r0, [r0, #16]
 8014c90:	b2c0      	uxtb	r0, r0
 8014c92:	4770      	bx	lr

08014c94 <i2c_flag_get>:
 8014c94:	098b      	lsrs	r3, r1, #6
 8014c96:	581a      	ldr	r2, [r3, r0]
 8014c98:	2301      	movs	r3, #1
 8014c9a:	f001 011f 	and.w	r1, r1, #31
 8014c9e:	408b      	lsls	r3, r1
 8014ca0:	4213      	tst	r3, r2
 8014ca2:	bf14      	ite	ne
 8014ca4:	2001      	movne	r0, #1
 8014ca6:	2000      	moveq	r0, #0
 8014ca8:	4770      	bx	lr

08014caa <i2c_flag_clear>:
 8014caa:	f240 5301 	movw	r3, #1281	; 0x501
 8014cae:	4299      	cmp	r1, r3
 8014cb0:	b510      	push	{r4, lr}
 8014cb2:	d102      	bne.n	8014cba <i2c_flag_clear+0x10>
 8014cb4:	6943      	ldr	r3, [r0, #20]
 8014cb6:	6983      	ldr	r3, [r0, #24]
 8014cb8:	bd10      	pop	{r4, pc}
 8014cba:	2201      	movs	r2, #1
 8014cbc:	098c      	lsrs	r4, r1, #6
 8014cbe:	5823      	ldr	r3, [r4, r0]
 8014cc0:	f001 011f 	and.w	r1, r1, #31
 8014cc4:	408a      	lsls	r2, r1
 8014cc6:	ea23 0302 	bic.w	r3, r3, r2
 8014cca:	5023      	str	r3, [r4, r0]
 8014ccc:	e7f4      	b.n	8014cb8 <i2c_flag_clear+0xe>
	...

08014cd0 <__popcountsi2>:
 8014cd0:	0843      	lsrs	r3, r0, #1
 8014cd2:	f003 3355 	and.w	r3, r3, #1431655765	; 0x55555555
 8014cd6:	1ac0      	subs	r0, r0, r3
 8014cd8:	0883      	lsrs	r3, r0, #2
 8014cda:	f003 3333 	and.w	r3, r3, #858993459	; 0x33333333
 8014cde:	f000 3033 	and.w	r0, r0, #858993459	; 0x33333333
 8014ce2:	4418      	add	r0, r3
 8014ce4:	eb00 1010 	add.w	r0, r0, r0, lsr #4
 8014ce8:	f000 300f 	and.w	r0, r0, #252645135	; 0xf0f0f0f
 8014cec:	eb00 2000 	add.w	r0, r0, r0, lsl #8
 8014cf0:	eb00 4000 	add.w	r0, r0, r0, lsl #16
 8014cf4:	0e00      	lsrs	r0, r0, #24
 8014cf6:	4770      	bx	lr

Disassembly of section .rodata:

08014cf8 <vtable for DisplayHandler-0xc0>:
	...
 8014d00:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 8014d04:	09080706 	stmdbeq	r8, {r1, r2, r8, r9, sl}
 8014d08:	00000000 	andeq	r0, r0, r0
 8014d0c:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 8014d10:	353a3731 	ldrcc	r3, [sl, #-1841]!	; 0xfffff8cf
 8014d14:	37313a37 			; <UNDEFINED> instruction: 0x37313a37
 8014d18:	72614d00 	rsbvc	r4, r1, #0, 26
 8014d1c:	20393120 	eorscs	r3, r9, r0, lsr #2
 8014d20:	32323032 	eorscc	r3, r2, #50	; 0x32
 8014d24:	43417300 	movtmi	r7, #4864	; 0x1300
 8014d28:	3145204e 	cmpcc	r5, lr, asr #32
 8014d2c:	2031332e 	eorscs	r3, r1, lr, lsr #6
 8014d30:	32335b1b 	eorscc	r5, r3, #27648	; 0x6c00
 8014d34:	584d446d 	stmdapl	sp, {r0, r2, r3, r5, r6, sl, lr}^
 8014d38:	37335b1b 			; <UNDEFINED> instruction: 0x37335b1b
 8014d3c:	5f2e006d 	svcpl	0x002e006d
 8014d40:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 8014d44:	2e006769 	cdpcs	7, 0, cr6, cr0, cr9, {3}
 8014d48:	7474685f 	ldrbtvc	r6, [r4], #-2143	; 0xfffff7a1
 8014d4c:	6f6e0070 	svcvs	0x006e0070
 8014d50:	733d6564 	teqvc	sp, #100, 10	; 0x19000000
 8014d54:	204e4341 	subcs	r4, lr, r1, asr #6
 8014d58:	332e3145 			; <UNDEFINED> instruction: 0x332e3145
 8014d5c:	4d442031 	stclmi	0, cr2, [r4, #-196]	; 0xffffff3c
 8014d60:	41730058 	cmnmi	r3, r8, asr r0
 8014d64:	45204e43 	strmi	r4, [r0, #-3651]!	; 0xfffff1bd
 8014d68:	31332e31 	teqcc	r3, r1, lsr lr
 8014d6c:	584d4420 	stmdapl	sp, {r5, sl, lr}^
 8014d70:	00642520 	rsbeq	r2, r4, r0, lsr #10
 8014d74:	32334447 	eorscc	r4, r3, #1191182336	; 0x47000000
 8014d78:	37303246 	ldrcc	r3, [r0, -r6, asr #4]!
 8014d7c:	4d442052 	stclmi	0, cr2, [r4, #-328]	; 0xfffffeb8
 8014d80:	41730058 	cmnmi	r3, r8, asr r0
 8014d84:	45204e43 	strmi	r4, [r0, #-3651]!	; 0xfffff1bd
 8014d88:	31332e31 	teqcc	r3, r1, lsr lr
 8014d8c:	584d4420 	stmdapl	sp, {r5, sl, lr}^
 8014d90:	00752520 	rsbseq	r2, r5, r0, lsr #10
 8014d94:	21786d64 	cmncs	r8, r4, ror #26
 8014d98:	65726200 	ldrbvs	r6, [r2, #-512]!	; 0xfffffe00
 8014d9c:	00236b61 	eoreq	r6, r3, r1, ror #22
 8014da0:	2362616d 	cmncs	r2, #1073741851	; 0x4000001b
 8014da4:	66657200 	strbtvs	r7, [r5], -r0, lsl #4
 8014da8:	68736572 	ldmdavs	r3!, {r1, r4, r5, r6, r8, sl, sp, lr}^
 8014dac:	6c730023 	ldclvs	0, cr0, [r3], #-140	; 0xffffff74
 8014db0:	2373746f 	cmncs	r3, #1862270976	; 0x6f000000
 8014db4:	00000000 	andeq	r0, r0, r0

08014db8 <vtable for DisplayHandler>:
	...
 8014dc0:	080085f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, pc}
 8014dc4:	0800867d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sl, pc}
 8014dc8:	080086c5 	stmdaeq	r0, {r0, r2, r6, r7, r9, sl, pc}

08014dcc <vtable for E131Reboot>:
	...
 8014dd4:	080085fb 	stmdaeq	r0, {r0, r1, r3, r4, r5, r6, r7, r8, sl, pc}
 8014dd8:	08008671 	stmdaeq	r0, {r0, r4, r5, r6, r9, sl, pc}
 8014ddc:	0800864d 	stmdaeq	r0, {r0, r2, r3, r6, r9, sl, pc}

08014de0 <vtable for RDMNetDevice>:
	...
 8014de8:	08008715 	stmdaeq	r0, {r0, r2, r4, r8, r9, sl, pc}
 8014dec:	0800873d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r8, r9, sl, pc}
 8014df0:	0800b473 	stmdaeq	r0, {r0, r1, r4, r5, r6, sl, ip, sp, pc}
 8014df4:	0800b475 	stmdaeq	r0, {r0, r2, r4, r5, r6, sl, ip, sp, pc}
 8014df8:	0800861f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r9, sl, pc}
 8014dfc:	08008631 	stmdaeq	r0, {r0, r4, r5, r9, sl, pc}
 8014e00:	08008695 	stmdaeq	r0, {r0, r2, r4, r7, r9, sl, pc}
 8014e04:	ffffff34 			; <UNDEFINED> instruction: 0xffffff34
 8014e08:	00000000 	andeq	r0, r0, r0
 8014e0c:	08008735 	stmdaeq	r0, {r0, r2, r4, r5, r8, r9, sl, pc}
 8014e10:	0800874f 	stmdaeq	r0, {r0, r1, r2, r3, r6, r8, r9, sl, pc}
 8014e14:	0800862b 	stmdaeq	r0, {r0, r1, r3, r5, r9, sl, pc}
 8014e18:	08008641 	stmdaeq	r0, {r0, r6, r9, sl, pc}
 8014e1c:	080086a9 	stmdaeq	r0, {r0, r3, r5, r7, r9, sl, pc}

08014e20 <vtable for FactoryDefaults>:
	...
 8014e28:	08008649 	stmdaeq	r0, {r0, r3, r6, r9, sl, pc}
 8014e2c:	08008689 	stmdaeq	r0, {r0, r3, r7, r9, sl, pc}
 8014e30:	08008895 	stmdaeq	r0, {r0, r2, r4, r7, fp, pc}

08014e34 <CSWTCH.101>:
 8014e34:	444e4f4f 	strbmi	r4, [lr], #-3919	; 0xfffff0b1
 8014e38:	 			; <UNDEFINED> instruction: 0x312e3146

08014e39 <SOFTWARE_VERSION>:
 8014e39:	00312e31 	eorseq	r2, r1, r1, lsr lr
 8014e3d:	 	andeq	r0, r0, r0

08014e40 <vtable for DmxInput>:
	...
 8014e48:	08008ee5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r9, sl, fp, pc}
 8014e4c:	08008f85 	stmdaeq	r0, {r0, r2, r7, r8, r9, sl, fp, pc}
 8014e50:	08008ee9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r9, sl, fp, pc}
 8014e54:	08008f19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, pc}
 8014e58:	08008f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp, pc}

08014e5c <SOFTWARE_VERSION>:
 8014e5c:	00312e31 	eorseq	r2, r1, r1, lsr lr
 8014e60:	2e393332 	mrccs	3, 1, r3, cr9, cr2, {1}
 8014e64:	2e353532 	mrccs	5, 1, r3, cr5, cr2, {1}
 8014e68:	00302e30 	eorseq	r2, r0, r0, lsr lr
 8014e6c:	38342e25 	ldmdacc	r4!, {r0, r2, r5, r9, sl, fp, sp}
 8014e70:	73252073 			; <UNDEFINED> instruction: 0x73252073
 8014e74:	33444700 	movtcc	r4, #18176	; 0x4700
 8014e78:	30324632 	eorscc	r4, r2, r2, lsr r6
 8014e7c:	30005237 	andcc	r5, r0, r7, lsr r2
 8014e80:	6f4e202e 	svcvs	0x004e202e
 8014e84:	73616320 	cmnvc	r1, #32, 6	; 0x80000000
 8014e88:	6d207365 	stcvs	3, cr7, [r0, #-404]!	; 0xfffffe6c
 8014e8c:	68637461 	stmdavs	r3!, {r0, r5, r6, sl, ip, sp, lr}^
 8014e90:	202c6465 	eorcs	r6, ip, r5, ror #8
 8014e94:	73696874 	cmnvc	r9, #116, 16	; 0x740000
 8014e98:	6f687320 	svcvs	0x00687320
 8014e9c:	6e646c75 	mcrvs	12, 3, r6, cr4, cr5, {3}
 8014ea0:	68207427 	stmdavs	r0!, {r0, r1, r2, r5, sl, ip, sp, lr}
 8014ea4:	65707061 	ldrbvs	r7, [r0, #-97]!	; 0xffffff9f
 8014ea8:	000a216e 	andeq	r2, sl, lr, ror #2
 8014eac:	00505448 	subseq	r5, r0, r8, asr #8
 8014eb0:	0050544c 	subseq	r5, r0, ip, asr #8
 8014eb4:	64697242 	strbtvs	r7, [r9], #-578	; 0xfffffdbe
 8014eb8:	000a6567 	andeq	r6, sl, r7, ror #10
 8014ebc:	72694620 	rsbvc	r4, r9, #32, 12	; 0x2000000
 8014ec0:	7261776d 	rsbvc	r7, r1, #28573696	; 0x1b40000
 8014ec4:	203a2065 	eorscs	r2, sl, r5, rrx
 8014ec8:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8014ecc:	20000a64 	andcs	r0, r0, r4, ror #20
 8014ed0:	20444943 	subcs	r4, r4, r3, asr #18
 8014ed4:	20202020 	eorcs	r2, r0, r0, lsr #32
 8014ed8:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8014edc:	20000a73 	andcs	r0, r0, r3, ror sl
 8014ee0:	7074754f 	rsbsvc	r7, r4, pc, asr #10
 8014ee4:	000a7475 	andeq	r7, sl, r5, ror r4
 8014ee8:	6f502020 	svcvs	0x00502020
 8014eec:	25207472 	strcs	r7, [r0, #-1138]!	; 0xfffffb8e
 8014ef0:	55206432 	strpl	r6, [r0, #-1074]!	; 0xfffffbce
 8014ef4:	6576696e 	ldrbvs	r6, [r6, #-2414]!	; 0xfffff692
 8014ef8:	20657372 	rsbcs	r7, r5, r2, ror r3
 8014efc:	64332d25 	ldrtvs	r2, [r3], #-3365	; 0xfffff2db
 8014f00:	73255b20 			; <UNDEFINED> instruction: 0x73255b20
 8014f04:	20000a5d 	andcs	r0, r0, sp, asr sl
 8014f08:	75706e49 	ldrbvc	r6, [r0, #-3657]!	; 0xfffff1b7
 8014f0c:	20000a74 	andcs	r0, r0, r4, ror sl
 8014f10:	726f5020 	rsbvc	r5, pc, #32
 8014f14:	32252074 	eorcc	r2, r5, #116	; 0x74
 8014f18:	6e552064 	cdpvs	0, 5, cr2, cr5, cr4, {3}
 8014f1c:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
 8014f20:	25206573 	strcs	r6, [r0, #-1395]!	; 0xfffffa8d
 8014f24:	2064332d 	rsbcs	r3, r4, sp, lsr #6
 8014f28:	5d64255b 	cfstr64pl	mvdx2, [r4, #-364]!	; 0xfffffe94
 8014f2c:	5320000a 			; <UNDEFINED> instruction: 0x5320000a
 8014f30:	68636e79 	stmdavs	r3!, {r0, r3, r4, r5, r6, r9, sl, fp, sp, lr}^
 8014f34:	696e6f72 	stmdbvs	lr!, {r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8014f38:	6920657a 	stmdbvs	r0!, {r1, r3, r4, r5, r6, r8, sl, sp, lr}
 8014f3c:	69642073 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sp}^
 8014f40:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
 8014f44:	000a6465 	andeq	r6, sl, r5, ror #8

08014f48 <E131MsgConst::START>:
 8014f48:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
 8014f4c:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 8014f50:	43417320 	movtmi	r7, #4896	; 0x1320
 8014f54:	3145204e 	cmpcc	r5, lr, asr #32
 8014f58:	0031332e 	eorseq	r3, r1, lr, lsr #6

08014f5c <E131MsgConst::PARAMS>:
 8014f5c:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 8014f60:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 8014f64:	20676e69 	rsbcs	r6, r7, r9, ror #28
 8014f68:	4e434173 	mcrmi	1, 2, r4, cr3, cr3, {3}
 8014f6c:	2e314520 	cfabs64cs	mvdx4, mvdx1
 8014f70:	 	movwvc	r3, #307	; 0x133

08014f73 <E131MsgConst::STARTED>:
 8014f73:	4e434173 	mcrmi	1, 2, r4, cr3, cr3, {3}
 8014f77:	2e314520 	cfabs64cs	mvdx4, mvdx1
 8014f7b:	73203133 			; <UNDEFINED> instruction: 0x73203133
 8014f7f:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
 8014f83:	22006465 	andcs	r6, r0, #1694498816	; 0x65000000
 8014f87:	3a227325 	bcc	88b1c23 <__exidx_end+0x89aab3>
 8014f8b:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 8014f8f:	2523002c 	strcs	r0, [r3, #-44]!	; 0xffffffd4
 8014f93:	73253d73 			; <UNDEFINED> instruction: 0x73253d73
 8014f97:	2522000a 	strcs	r0, [r2, #-10]!
 8014f9b:	253a2273 	ldrcs	r2, [sl, #-627]!	; 0xfffffd8d
 8014f9f:	23002c64 	movwcs	r2, #3172	; 0xc64
 8014fa3:	253d7325 	ldrcs	r7, [sp, #-805]!	; 0xfffffcdb
 8014fa7:	69000a64 	stmdbvs	r0, {r2, r5, r6, r9, fp}
 8014fab:	7475706e 	ldrbtvc	r7, [r5], #-110	; 0xffffff92
 8014faf:	74756f00 	ldrbtvc	r6, [r5], #-3840	; 0xfffff100
 8014fb3:	00747570 	rsbseq	r7, r4, r0, ror r5
 8014fb7:	00707468 	rsbseq	r7, r0, r8, ror #8
 8014fbb:	0070746c 	rsbseq	r7, r0, ip, ror #8
 8014fbf:	20584d44 	subscs	r4, r8, r4, asr #26
 8014fc3:	7074754f 	rsbsvc	r7, r4, pc, asr #10
 8014fc7:	44007475 	strmi	r7, [r0], #-1141	; 0xfffffb8b
 8014fcb:	4920584d 	stmdbmi	r0!, {r0, r2, r3, r6, fp, ip, lr}
 8014fcf:	7475706e 	ldrbtvc	r7, [r5], #-110	; 0xffffff92
 8014fd3:	68744f00 	ldmdavs	r4!, {r8, r9, sl, fp, lr}^
 8014fd7:	 	strvs	r7, [r0], #-613	; 0xfffffd9b

08014fda <E131ParamsConst::DISABLE_MERGE_TIMEOUT>:
 8014fda:	61736964 	cmnvs	r3, r4, ror #18
 8014fde:	5f656c62 	svcpl	0x00656c62
 8014fe2:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 8014fe6:	69745f65 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
 8014fea:	756f656d 	strbvc	r6, [pc, #-1389]!	; 8014a85 <enet_desc_information_get+0x2f>
 8014fee:	 	stmdbvs	r4!, {r2, r4, r5, r6}^

08014ff0 <E131ParamsConst::DISABLE_NETWORK_DATA_LOSS_TIMEOUT>:
 8014ff0:	61736964 	cmnvs	r3, r4, ror #18
 8014ff4:	5f656c62 	svcpl	0x00656c62
 8014ff8:	7774656e 	ldrbvc	r6, [r4, -lr, ror #10]!
 8014ffc:	5f6b726f 	svcpl	0x006b726f
 8015000:	61746164 	cmnvs	r4, r4, ror #2
 8015004:	736f6c5f 	cmnvc	pc, #24320	; 0x5f00
 8015008:	69745f73 	ldmdbvs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 801500c:	756f656d 	strbvc	r6, [pc, #-1389]!	; 8014aa7 <enet_rxframe_drop+0x13>
 8015010:	 	rsbsvc	r0, r0, #116	; 0x74

08015012 <E131ParamsConst::PRIORITY>:
 8015012:	6f697270 	svcvs	0x00697270
 8015016:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
 801501a:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 801501e:	00615f74 	rsbeq	r5, r1, r4, ror pc
 8015022:	72700000 	rsbsvc	r0, r0, #0
 8015026:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 801502a:	705f7974 	subsvc	r7, pc, r4, ror r9	; <UNPREDICTABLE>
 801502e:	5f74726f 	svcpl	0x0074726f
 8015032:	00000062 	andeq	r0, r0, r2, rrx
 8015036:	6f697270 	svcvs	0x00697270
 801503a:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
 801503e:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8015042:	00635f74 	rsbeq	r5, r3, r4, ror pc
 8015046:	72700000 	rsbsvc	r0, r0, #0
 801504a:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 801504e:	705f7974 	subsvc	r7, pc, r4, ror r9	; <UNPREDICTABLE>
 8015052:	5f74726f 	svcpl	0x0074726f
 8015056:	00000064 	andeq	r0, r0, r4, rrx

0801505a <E131ParamsConst::FILE_NAME>:
 801505a:	31333165 	teqcc	r3, r5, ror #2
 801505e:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
	...

08015063 <E117Const::ACN_PACKET_IDENTIFIER>:
 8015063:	2d435341 	stclcs	3, cr5, [r3, #-260]	; 0xfffffefc
 8015067:	312e3145 			; <UNDEFINED> instruction: 0x312e3145
 801506b:	00000037 	andeq	r0, r0, r7, lsr r0

0801506f <E131BridgeConst::VERSION>:
 801506f:	30251801 	eorcc	r1, r5, r1, lsl #16
 8015073:	252d7838 	strcs	r7, [sp, #-2104]!	; 0xfffff7c8
 8015077:	2d783430 	cfldrdcs	mvd3, [r8, #-192]!	; 0xffffff40
 801507b:	78343025 	ldmdavc	r4!, {r0, r2, r5, ip, sp}
 801507f:	3230252d 	eorscc	r2, r0, #188743680	; 0xb400000
 8015083:	32302578 	eorscc	r2, r0, #120, 10	; 0x1e000000
 8015087:	30252d78 	eorcc	r2, r5, r8, ror sp
 801508b:	30257832 	eorcc	r7, r5, r2, lsr r8
 801508f:	30257832 	eorcc	r7, r5, r2, lsr r8
 8015093:	30257832 	eorcc	r7, r5, r2, lsr r8
 8015097:	30257832 	eorcc	r7, r5, r2, lsr r8
 801509b:	30257832 	eorcc	r7, r5, r2, lsr r8
 801509f:	32007832 	andcc	r7, r0, #3276800	; 0x320000
 80150a3:	322e3933 	eorcc	r3, lr, #835584	; 0xcc000
 80150a7:	322e3535 	eorcc	r3, lr, #222298112	; 0xd400000
 80150ab:	312e3035 			; <UNDEFINED> instruction: 0x312e3035
 80150af:	32003333 	andcc	r3, r0, #-872415232	; 0xcc000000
 80150b3:	322e3933 	eorcc	r3, lr, #835584	; 0xcc000
 80150b7:	322e3535 	eorcc	r3, lr, #222298112	; 0xd400000
 80150bb:	312e3035 			; <UNDEFINED> instruction: 0x312e3035
 80150bf:	4c003433 	cfstrsmi	mvf3, [r0], {51}	; 0x33
 80150c3:	2050524c 	subscs	r5, r0, ip, asr #4
 80150c7:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
 80150cb:	63206563 			; <UNDEFINED> instruction: 0x63206563
 80150cf:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 80150d3:	61727567 	cmnvs	r2, r7, ror #10
 80150d7:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 80150db:	5020000a 	eorpl	r0, r0, sl
 80150df:	2074726f 	rsbscs	r7, r4, pc, ror #4
 80150e3:	20504455 	subscs	r4, r0, r5, asr r4
 80150e7:	20202020 	eorcs	r2, r0, r0, lsr #32
 80150eb:	20202020 	eorcs	r2, r0, r0, lsr #32
 80150ef:	20202020 	eorcs	r2, r0, r0, lsr #32
 80150f3:	203a2020 	eorscs	r2, sl, r0, lsr #32
 80150f7:	000a6425 	andeq	r6, sl, r5, lsr #8
 80150fb:	6c754d20 	ldclvs	13, cr4, [r5], #-128	; 0xffffff80
 80150ff:	61636974 	smcvs	13972	; 0x3694
 8015103:	6a207473 	bvs	88322d7 <__exidx_end+0x81b167>
 8015107:	206e696f 	rsbcs	r6, lr, pc, ror #18
 801510b:	75716552 	ldrbvc	r6, [r1, #-1362]!	; 0xfffffaae
 801510f:	20747365 	rsbscs	r7, r4, r5, ror #6
 8015113:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8015117:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801511b:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801511f:	20000a64 	andcs	r0, r0, r4, ror #20
 8015123:	746c754d 	strbtvc	r7, [ip], #-1357	; 0xfffffab3
 8015127:	73616369 	cmnvc	r1, #-1543503871	; 0xa4000001
 801512b:	65522074 	ldrbvs	r2, [r2, #-116]	; 0xffffff8c
 801512f:	6e6f7073 	mcrvs	0, 3, r7, cr15, cr3, {3}
 8015133:	20206573 	eorcs	r6, r0, r3, ror r5
 8015137:	3a202020 	bcc	881d1bf <__exidx_end+0x80604f>
 801513b:	2e642520 	cdpcs	5, 6, cr2, cr4, cr0, {1}
 801513f:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8015143:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8015147:	0000000a 	andeq	r0, r0, sl
	...

0801514c <vtable for LLRPDevice>:
	...
 8015154:	0800af85 	stmdaeq	r0, {r0, r2, r7, r8, r9, sl, fp, sp, pc}
 8015158:	0800af8f 	stmdaeq	r0, {r0, r1, r2, r3, r7, r8, r9, sl, fp, sp, pc}
 801515c:	0800af87 	stmdaeq	r0, {r0, r1, r2, r7, r8, r9, sl, fp, sp, pc}
 8015160:	0800af89 	stmdaeq	r0, {r0, r3, r7, r8, r9, sl, fp, sp, pc}
 8015164:	0800af8b 	stmdaeq	r0, {r0, r1, r3, r7, r8, r9, sl, fp, sp, pc}

08015168 <RDMNetConst::MSG_CONFIG>:
 8015168:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 801516c:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 8015170:	20676e69 	rsbcs	r6, r7, r9, ror #28
 8015174:	4e4d4452 	mcrmi	4, 2, r4, cr13, cr2, {2}
 8015178:	 	andpl	r7, r0, #1694498816	; 0x65000000

0801517b <RDMNetConst::MSG_STARTED>:
 801517b:	4e4d4452 	mcrmi	4, 2, r4, cr13, cr2, {2}
 801517f:	73207465 			; <UNDEFINED> instruction: 0x73207465
 8015183:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
 8015187:	 	movwpl	r6, #1125	; 0x465

0801518a <RDMNetConst::MSG_START>:
 801518a:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
 801518e:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 8015192:	4d445220 	sfmmi	f5, 2, [r4, #-128]	; 0xffffff80
 8015196:	0074654e 	rsbseq	r6, r4, lr, asr #10
 801519a:	4e4d4452 	mcrmi	4, 2, r4, cr13, cr2, {2}
 801519e:	000a7465 	andeq	r7, sl, r5, ror #8
 80151a2:	44494320 	strbmi	r4, [r9], #-800	; 0xfffffce0
 80151a6:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 80151aa:	52000a73 	andpl	r0, r0, #471040	; 0x73000
 80151ae:	52204d44 	eorpl	r4, r0, #68, 26	; 0x1100
 80151b2:	6f707365 	svcvs	0x00707365
 80151b6:	7265646e 	rsbvc	r6, r5, #1845493760	; 0x6e000000
 80151ba:	6e6f6320 	cdpvs	3, 6, cr6, cr15, cr0, {1}
 80151be:	75676966 	strbvc	r6, [r7, #-2406]!	; 0xfffff69a
 80151c2:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
 80151c6:	000a6e6f 	andeq	r6, sl, pc, ror #28
 80151ca:	6f725020 	svcvs	0x00725020
 80151ce:	6f636f74 	svcvs	0x00636f74
 80151d2:	6556206c 	ldrbvs	r2, [r6, #-108]	; 0xffffff94
 80151d6:	6f697372 	svcvs	0x00697372
 80151da:	6425206e 	strtvs	r2, [r5], #-110	; 0xffffff92
 80151de:	0a64252e 	beq	991e69e <__exidx_end+0x190752e>
 80151e2:	4d442000 	stclmi	0, cr2, [r4, #-0]
 80151e6:	64412058 	strbvs	r2, [r1], #-88	; 0xffffffa8
 80151ea:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
 80151ee:	20202073 	eorcs	r2, r0, r3, ror r0
 80151f2:	3a202020 	bcc	881d27a <__exidx_end+0x80610a>
 80151f6:	0a642520 	beq	991e67e <__exidx_end+0x190750e>
 80151fa:	4d442000 	stclmi	0, cr2, [r4, #-0]
 80151fe:	6f462058 	svcvs	0x00462058
 8015202:	7270746f 	rsbsvc	r7, r0, #1862270976	; 0x6f000000
 8015206:	20746e69 	rsbscs	r6, r4, r9, ror #28
 801520a:	3a202020 	bcc	881d292 <__exidx_end+0x806122>
 801520e:	0a642520 	beq	991e696 <__exidx_end+0x1907526>
 8015212:	65502000 	ldrbvs	r2, [r0, #-0]
 8015216:	6e6f7372 	mcrvs	3, 3, r7, cr15, cr2, {3}
 801521a:	74696c61 	strbtvc	r6, [r9], #-3169	; 0xfffff39f
 801521e:	64252079 	strtvs	r2, [r5], #-121	; 0xffffff87
 8015222:	20666f20 	rsbcs	r6, r6, r0, lsr #30
 8015226:	5b206425 	blpl	882e2c2 <__exidx_end+0x817152>
 801522a:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
 801522e:	20000a5d 	andcs	r0, r0, sp, asr sl
 8015232:	20627553 	rsbcs	r7, r2, r3, asr r5
 8015236:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
 801523a:	20736563 	rsbscs	r6, r3, r3, ror #10
 801523e:	20202020 	eorcs	r2, r0, r0, lsr #32
 8015242:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8015246:	20000a64 	andcs	r0, r0, r4, ror #20
 801524a:	736e6553 	cmnvc	lr, #348127232	; 0x14c00000
 801524e:	2073726f 	rsbscs	r7, r3, pc, ror #4
 8015252:	20202020 	eorcs	r2, r0, r0, lsr #32
 8015256:	20202020 	eorcs	r2, r0, r0, lsr #32
 801525a:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 801525e:	 	strmi	r0, [r0, -r4, ror #20]

08015261 <DEVICE_LABEL>:
 8015261:	32334447 	eorscc	r4, r3, #1191182336	; 0x47000000
 8015265:	37303246 	ldrcc	r3, [r0, -r6, asr #4]!
 8015269:	44522052 	ldrbmi	r2, [r2], #-82	; 0xffffffae
 801526d:	6552204d 	ldrbvs	r2, [r2, #-77]	; 0xffffffb3
 8015271:	6e6f7073 	mcrvs	0, 3, r7, cr15, cr3, {3}
 8015275:	00726564 	rsbseq	r6, r2, r4, ror #10
 8015279:	 	andeq	r0, r0, r0

0801527c <vtable for RDMDeviceResponder>:
	...
 8015284:	0800b479 	stmdaeq	r0, {r0, r3, r4, r5, r6, sl, ip, sp, pc}
 8015288:	0800b499 	stmdaeq	r0, {r0, r3, r4, r7, sl, ip, sp, pc}
 801528c:	0800b473 	stmdaeq	r0, {r0, r1, r4, r5, r6, sl, ip, sp, pc}
 8015290:	0800b475 	stmdaeq	r0, {r0, r2, r4, r5, r6, sl, ip, sp, pc}

08015294 <UID_ALL>:
 8015294:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 8015298:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>

0801529c <RDMHandler::PID_DEFINITIONS>:
 801529c:	00000060 	andeq	r0, r0, r0, rrx
 80152a0:	0800b97d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r8, fp, ip, sp, pc}
	...
 80152b0:	01010000 	mrseq	r0, (UNDEF: 1)
 80152b4:	00000080 	andeq	r0, r0, r0, lsl #1
 80152b8:	0800ba65 	stmdaeq	r0, {r0, r2, r5, r6, r9, fp, ip, sp, pc}
	...
 80152c8:	01010100 	mrseq	r0, (UNDEF: 17)
 80152cc:	00000081 	andeq	r0, r0, r1, lsl #1
 80152d0:	0800ba81 	stmdaeq	r0, {r0, r7, r9, fp, ip, sp, pc}
	...
 80152e0:	01010100 	mrseq	r0, (UNDEF: 17)
 80152e4:	00000082 	andeq	r0, r0, r2, lsl #1
 80152e8:	0800baa1 	stmdaeq	r0, {r0, r5, r7, r9, fp, ip, sp, pc}
 80152ec:	00000000 	andeq	r0, r0, r0
 80152f0:	0800bbf1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, r9, fp, ip, sp, pc}
 80152f4:	00000000 	andeq	r0, r0, r0
 80152f8:	01010100 	mrseq	r0, (UNDEF: 17)
 80152fc:	00000090 	muleq	r0, r0, r0
 8015300:	0800b9e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8, fp, ip, sp, pc}
 8015304:	00000000 	andeq	r0, r0, r0
 8015308:	0800bbbd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, r8, r9, fp, ip, sp, pc}
 801530c:	00000000 	andeq	r0, r0, r0
 8015310:	01010100 	mrseq	r0, (UNDEF: 17)
 8015314:	00001000 	andeq	r1, r0, r0
 8015318:	0800badd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r9, fp, ip, sp, pc}
 801531c:	00000000 	andeq	r0, r0, r0
 8015320:	0800bb41 	stmdaeq	r0, {r0, r6, r8, r9, fp, ip, sp, pc}
 8015324:	00000000 	andeq	r0, r0, r0
 8015328:	01010000 	mrseq	r0, (UNDEF: 1)
 801532c:	00001001 	andeq	r1, r0, r1
	...
 8015338:	0800baf9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r9, fp, ip, sp, pc}
 801533c:	00000000 	andeq	r0, r0, r0
 8015340:	01010100 	mrseq	r0, (UNDEF: 17)
 8015344:	00000700 	andeq	r0, r0, r0, lsl #14
 8015348:	0800bef1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r9, sl, fp, ip, sp, pc}
	...
 8015358:	01000000 	mrseq	r0, (UNDEF: 0)
 801535c:	00000701 	andeq	r0, r0, r1, lsl #14
 8015360:	0800bf19 	stmdaeq	r0, {r0, r3, r4, r8, r9, sl, fp, ip, sp, pc}
	...
 8015370:	01000004 	tsteq	r0, r4
 8015374:	00000702 	andeq	r0, r0, r2, lsl #14
 8015378:	0800bf65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, sl, fp, ip, sp, pc}
	...
 8015388:	01000004 	tsteq	r0, r4
 801538c:	00000703 	andeq	r0, r0, r3, lsl #14
 8015390:	0800bf95 	stmdaeq	r0, {r0, r2, r4, r7, r8, r9, sl, fp, ip, sp, pc}
 8015394:	00000000 	andeq	r0, r0, r0
 8015398:	0800bfc1 	stmdaeq	r0, {r0, r6, r7, r8, r9, sl, fp, ip, sp, pc}
 801539c:	00000000 	andeq	r0, r0, r0
 80153a0:	01000004 	tsteq	r0, r4
 80153a4:	00000704 	andeq	r0, r0, r4, lsl #14
 80153a8:	0800c02d 	stmdaeq	r0, {r0, r2, r3, r5, lr, pc}
 80153ac:	00000000 	andeq	r0, r0, r0
 80153b0:	0800c05d 	stmdaeq	r0, {r0, r2, r3, r4, r6, lr, pc}
 80153b4:	00000000 	andeq	r0, r0, r0
 80153b8:	01000004 	tsteq	r0, r4
 80153bc:	00000705 	andeq	r0, r0, r5, lsl #14
 80153c0:	0800c0d1 	stmdaeq	r0, {r0, r4, r6, r7, lr, pc}
	...
 80153d0:	01000004 	tsteq	r0, r4
 80153d4:	00000707 	andeq	r0, r0, r7, lsl #14
	...
 80153e0:	0800c0a5 	stmdaeq	r0, {r0, r2, r5, r7, lr, pc}
 80153e4:	00000000 	andeq	r0, r0, r0
 80153e8:	01000004 	tsteq	r0, r4
 80153ec:	00000706 	andeq	r0, r0, r6, lsl #14
 80153f0:	0800c119 	stmdaeq	r0, {r0, r3, r4, r8, lr, pc}
 80153f4:	00000000 	andeq	r0, r0, r0
 80153f8:	0800c15d 	stmdaeq	r0, {r0, r2, r3, r4, r6, r8, lr, pc}
 80153fc:	00000000 	andeq	r0, r0, r0
 8015400:	01000004 	tsteq	r0, r4
 8015404:	00000709 	andeq	r0, r0, r9, lsl #14
	...
 8015410:	0800c1a9 	stmdaeq	r0, {r0, r3, r5, r7, r8, lr, pc}
 8015414:	00000000 	andeq	r0, r0, r0
 8015418:	01000004 	tsteq	r0, r4
 801541c:	0000070b 	andeq	r0, r0, fp, lsl #14
 8015420:	0800c009 	stmdaeq	r0, {r0, r3, lr, pc}
	...
 8015430:	01000001 	tsteq	r0, r1
 8015434:	0000070a 	andeq	r0, r0, sl, lsl #14
 8015438:	0800c1d1 	stmdaeq	r0, {r0, r4, r6, r7, r8, lr, pc}
 801543c:	00000000 	andeq	r0, r0, r0
 8015440:	0800c209 	stmdaeq	r0, {r0, r3, r9, lr, pc}
 8015444:	00000000 	andeq	r0, r0, r0
 8015448:	01000004 	tsteq	r0, r4
 801544c:	0000070c 	andeq	r0, r0, ip, lsl #14
 8015450:	0800c211 	stmdaeq	r0, {r0, r4, r9, lr, pc}
 8015454:	00000000 	andeq	r0, r0, r0
 8015458:	0800c241 	stmdaeq	r0, {r0, r6, r9, lr, pc}
 801545c:	00000000 	andeq	r0, r0, r0
 8015460:	01000000 	mrseq	r0, (UNDEF: 0)
 8015464:	0000070d 	andeq	r0, r0, sp, lsl #14
 8015468:	0800c275 	stmdaeq	r0, {r0, r2, r4, r5, r6, r9, lr, pc}
 801546c:	00000000 	andeq	r0, r0, r0
 8015470:	0800c2a5 	stmdaeq	r0, {r0, r2, r5, r7, r9, lr, pc}
 8015474:	00000000 	andeq	r0, r0, r0
 8015478:	01000000 	mrseq	r0, (UNDEF: 0)
 801547c:	70747468 	rsbsvc	r7, r4, r8, ror #8
 8015480:	672f2f3a 			; <UNDEFINED> instruction: 0x672f2f3a
 8015484:	2d323364 	ldccs	3, cr3, [r2, #-400]!	; 0xfffffe70
 8015488:	2e786d64 	cdpcs	13, 7, cr6, cr8, cr4, {3}
 801548c:	0067726f 	rsbeq	r7, r7, pc, ror #4
 8015490:	204d4452 	subcs	r4, sp, r2, asr r4
 8015494:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
 8015498:	63206563 			; <UNDEFINED> instruction: 0x63206563
 801549c:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 80154a0:	61727567 	cmnvs	r2, r7, ror #10
 80154a4:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 80154a8:	4d20000a 	stcmi	0, cr0, [r0, #-40]!	; 0xffffffd8
 80154ac:	66756e61 	ldrbtvs	r6, [r5], -r1, ror #28
 80154b0:	75746361 	ldrbvc	r6, [r4, #-865]!	; 0xfffffc9f
 80154b4:	20726572 	rsbscs	r6, r2, r2, ror r5
 80154b8:	656d614e 	strbvs	r6, [sp, #-334]!	; 0xfffffeb2
 80154bc:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 80154c0:	0a732a2e 	beq	9cdfd80 <__exidx_end+0x1cc8c10>
 80154c4:	614d2000 	mrsvs	r2, (UNDEF: 77)
 80154c8:	6166756e 	cmnvs	r6, lr, ror #10
 80154cc:	72757463 	rsbsvc	r7, r5, #1660944384	; 0x63000000
 80154d0:	49207265 	stmdbmi	r0!, {r0, r2, r5, r6, r9, ip, sp, lr}
 80154d4:	20202044 	eorcs	r2, r0, r4, asr #32
 80154d8:	2e25203a 	mcrcs	0, 1, r2, cr5, cr10, {1}
 80154dc:	2e255832 	mcrcs	8, 1, r5, cr5, cr2, {1}
 80154e0:	000a5832 	andeq	r5, sl, r2, lsr r8
 80154e4:	72655320 	rsbvc	r5, r5, #32, 6	; 0x80000000
 80154e8:	206c6169 	rsbcs	r6, ip, r9, ror #2
 80154ec:	626d754e 	rsbvs	r7, sp, #327155712	; 0x13800000
 80154f0:	20207265 	eorcs	r7, r0, r5, ror #4
 80154f4:	3a202020 	bcc	881d57c <__exidx_end+0x80640c>
 80154f8:	322e2520 	eorcc	r2, lr, #32, 10	; 0x8000000
 80154fc:	322e2558 	eorcc	r2, lr, #88, 10	; 0x16000000
 8015500:	322e2558 	eorcc	r2, lr, #88, 10	; 0x16000000
 8015504:	322e2558 	eorcc	r2, lr, #88, 10	; 0x16000000
 8015508:	20000a58 	andcs	r0, r0, r8, asr sl
 801550c:	746f6f52 	strbtvc	r6, [pc], #-3922	; 8015514 <RDMHandler::PID_DEFINITIONS+0x278>
 8015510:	62616c20 	rsbvs	r6, r1, #32, 24	; 0x2000
 8015514:	20206c65 	eorcs	r6, r0, r5, ror #24
 8015518:	20202020 	eorcs	r2, r0, r0, lsr #32
 801551c:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8015520:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
 8015524:	5020000a 	eorpl	r0, r0, sl
 8015528:	75646f72 	strbvc	r6, [r4, #-3954]!	; 0xfffff08e
 801552c:	43207463 			; <UNDEFINED> instruction: 0x43207463
 8015530:	67657461 	strbvs	r7, [r5, -r1, ror #8]!
 8015534:	2079726f 	rsbscs	r7, r9, pc, ror #4
 8015538:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 801553c:	2558322e 	ldrbcs	r3, [r8, #-558]	; 0xfffffdd2
 8015540:	0a58322e 	beq	9621e00 <__exidx_end+0x160ac90>
 8015544:	72502000 	subsvc	r2, r0, #0
 8015548:	6375646f 	cmnvs	r5, #1862270976	; 0x6f000000
 801554c:	65442074 	strbvs	r2, [r4, #-116]	; 0xffffff8c
 8015550:	6c696174 	stfvse	f6, [r9], #-464	; 0xfffffe30
 8015554:	20202020 	eorcs	r2, r0, r0, lsr #32
 8015558:	2e25203a 	mcrcs	0, 1, r2, cr5, cr10, {1}
 801555c:	2e255832 	mcrcs	8, 1, r5, cr5, cr2, {1}
 8015560:	000a5832 	andeq	r5, sl, r2, lsr r8

08015564 <DEVICE_LABEL>:
 8015564:	32334447 	eorscc	r4, r3, #1191182336	; 0x47000000
 8015568:	37303246 	ldrcc	r3, [r0, -r6, asr #4]!
 801556c:	44522052 	ldrbmi	r2, [r2], #-82	; 0xffffffae
 8015570:	6544204d 	strbvs	r2, [r4, #-77]	; 0xffffffb3
 8015574:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
	...

08015579 <RDMConst::MANUFACTURER_ID>:
 8015579:	 	strbtvc	r0, [r8], #-80	; 0xffffffb0

0801557b <RDMConst::MANUFACTURER_NAME>:
 801557b:	70747468 	rsbsvc	r7, r4, r8, ror #8
 801557f:	772f2f3a 			; <UNDEFINED> instruction: 0x772f2f3a
 8015583:	6f2e7777 	svcvs	0x002e7777
 8015587:	676e6172 			; <UNDEFINED> instruction: 0x676e6172
 801558b:	2d697065 	stclcs	0, cr7, [r9, #-404]!	; 0xfffffe6c
 801558f:	2e786d64 	cdpcs	13, 7, cr6, cr8, cr4, {3}
 8015593:	0067726f 	rsbeq	r7, r7, pc, ror #4
 8015597:	20584d44 	subscs	r4, r8, r4, asr #26
 801559b:	646e6553 	strbtvs	r6, [lr], #-1363	; 0xfffffaad
 801559f:	4220000a 	eormi	r0, r0, #10
 80155a3:	6b616572 	blvs	986eb73 <__exidx_end+0x1857a03>
 80155a7:	6d697420 	cfstrdvs	mvd7, [r9, #-128]!	; 0xffffff80
 80155ab:	20202065 	eorcs	r2, r0, r5, rrx
 80155af:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 80155b3:	4d20000a 	stcmi	0, cr0, [r0, #-40]!	; 0xffffffd8
 80155b7:	74204241 	strtvc	r4, [r0], #-577	; 0xfffffdbf
 80155bb:	20656d69 	rsbcs	r6, r5, r9, ror #26
 80155bf:	20202020 	eorcs	r2, r0, r0, lsr #32
 80155c3:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 80155c7:	5220000a 	eorpl	r0, r0, #10
 80155cb:	65726665 	ldrbvs	r6, [r2, #-1637]!	; 0xfffff99b
 80155cf:	72206873 	eorvc	r6, r0, #7536640	; 0x730000
 80155d3:	20657461 	rsbcs	r7, r5, r1, ror #8
 80155d7:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 80155db:	5320000a 			; <UNDEFINED> instruction: 0x5320000a
 80155df:	73746f6c 	cmnvc	r4, #108, 30	; 0x1b0
 80155e3:	20202020 	eorcs	r2, r0, r0, lsr #32
 80155e7:	20202020 	eorcs	r2, r0, r0, lsr #32
 80155eb:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 80155ef:	0000000a 	andeq	r0, r0, sl
	...

080155f4 <vtable for DmxSend>:
	...
 80155fc:	0800c417 	stmdaeq	r0, {r0, r1, r2, r4, sl, lr, pc}
 8015600:	0800c4e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, sl, lr, pc}
 8015604:	0800c419 	stmdaeq	r0, {r0, r3, r4, sl, lr, pc}
 8015608:	0800c449 	stmdaeq	r0, {r0, r3, r6, sl, lr, pc}
 801560c:	0800c47d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, sl, lr, pc}
 8015610:	0800c415 	stmdaeq	r0, {r0, r2, r4, sl, lr, pc}
 8015614:	0800c48d 	stmdaeq	r0, {r0, r2, r3, r7, sl, lr, pc}
 8015618:	080120cb 	stmdaeq	r1, {r0, r1, r3, r6, r7, sp}
 801561c:	080120c1 	stmdaeq	r1, {r0, r6, r7, sp}
 8015620:	080120c5 	stmdaeq	r1, {r0, r2, r6, r7, sp}
 8015624:	080120cf 	stmdaeq	r1, {r0, r1, r2, r3, r6, r7, sp}

08015628 <DmxParamsConst::BREAK_TIME>:
 8015628:	61657262 	cmnvs	r5, r2, ror #4
 801562c:	69745f6b 	ldmdbvs	r4!, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
 8015630:	 	movwvc	r6, #1389	; 0x56d

08015633 <DmxParamsConst::SLOTS_COUNT>:
 8015633:	746f6c73 	strbtvc	r6, [pc], #-3187	; 801563b <DmxParamsConst::SLOTS_COUNT+0x8>
 8015637:	6f635f73 	svcvs	0x00635f73
 801563b:	00746e75 	rsbseq	r6, r4, r5, ror lr

0801563f <DmxParamsConst::REFRESH_RATE>:
 801563f:	72666572 	rsbvc	r6, r6, #478150656	; 0x1c800000
 8015643:	5f687365 	svcpl	0x00687365
 8015647:	65746172 	ldrbvs	r6, [r4, #-370]!	; 0xfffffe8e
	...

0801564c <DmxParamsConst::MAB_TIME>:
 801564c:	5f62616d 	svcpl	0x0062616d
 8015650:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
	...

08015655 <DmxParamsConst::FILE_NAME>:
 8015655:	61726170 	cmnvs	r2, r0, ror r1
 8015659:	742e736d 	strtvc	r7, [lr], #-877	; 0xfffffc93
 801565d:	 	andeq	r7, r0, r8, ror r4

08015660 <s_DirGpio>:
 8015660:	40010c00 	andmi	r0, r1, r0, lsl #24
 8015664:	00000400 	andeq	r0, r0, r0, lsl #8
 8015668:	40010800 	andmi	r0, r1, r0, lsl #16
 801566c:	00000800 	andeq	r0, r0, r0, lsl #16
 8015670:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8015674:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8015678:	2c64252e 	cfstr64cs	mvdx2, [r4], #-184	; 0xffffff48
 801567c:	252c7325 	strcs	r7, [ip, #-805]!	; 0xfffffcdb
 8015680:	64252c73 	strtvs	r2, [r5], #-3187	; 0xfffff38d
 8015684:	0a73252c 	beq	9cdeb3c <__exidx_end+0x1cc79cc>
 8015688:	2e642500 	cdpcs	5, 6, cr2, cr4, cr0, {0}
 801568c:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8015690:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8015694:	2c73252c 	cfldr64cs	mvdx2, [r3], #-176	; 0xffffff50
 8015698:	252c7325 	strcs	r7, [ip, #-805]!	; 0xfffffcdb
 801569c:	4f000a64 	svcmi	0x00000a64
 80156a0:	664f006e 	strbvs	r0, [pc], -lr, rrx
 80156a4:	69640066 	stmdbvs	r4!, {r1, r2, r5, r6}^
 80156a8:	616c7073 	smcvs	50947	; 0xc703
 80156ac:	73253a79 			; <UNDEFINED> instruction: 0x73253a79
 80156b0:	6674000a 	ldrbtvs	r0, [r4], -sl
 80156b4:	253a7074 	ldrcs	r7, [sl, #-116]!	; 0xffffff8c
 80156b8:	76000a73 			; <UNDEFINED> instruction: 0x76000a73
 80156bc:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 80156c0:	253a6e6f 	ldrcs	r6, [sl, #-3695]!	; 0xfffff191
 80156c4:	70750073 	rsbsvc	r0, r5, r3, ror r0
 80156c8:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 80156cc:	7525203a 	strvc	r2, [r5, #-58]!	; 0xffffffc6
 80156d0:	45000a73 	strmi	r0, [r0, #-2675]	; 0xfffff58d
 80156d4:	524f5252 	subpl	r5, pc, #536870917	; 0x20000005
 80156d8:	65673f23 	strbvs	r3, [r7, #-3875]!	; 0xfffff0dd
 80156dc:	74000a74 	strvc	r0, [r0], #-2676	; 0xfffff58c
 80156e0:	23707466 	cmncs	r0, #1711276032	; 0x66000000
 80156e4:	73696400 	cmnvc	r9, #0, 8
 80156e8:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 80156ec:	52450023 	subpl	r0, r5, #35	; 0x23
 80156f0:	23524f52 	cmpcs	r2, #328	; 0x148
 80156f4:	45000a21 	strmi	r0, [r0, #-2593]	; 0xfffff5df
 80156f8:	524f5252 	subpl	r5, pc, #536870917	; 0x20000005
 80156fc:	000a3f23 	andeq	r3, sl, r3, lsr #30
 8015700:	6f626572 	svcvs	0x00626572
 8015704:	2323746f 			; <UNDEFINED> instruction: 0x2323746f
 8015708:	73696c00 	cmnvc	r9, #0, 24
 801570c:	6c002374 	stcvs	3, cr2, [r0], {116}	; 0x74
 8015710:	23747369 	cmncs	r4, #-1543503871	; 0xa4000001
 8015714:	7075002a 	rsbsvc	r0, r5, sl, lsr #32
 8015718:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 801571c:	65760023 	ldrbvs	r0, [r6, #-35]!	; 0xffffffdd
 8015720:	6f697372 	svcvs	0x00697372
 8015724:	6700236e 	strvs	r2, [r0, -lr, ror #6]
 8015728:	00237465 	eoreq	r7, r3, r5, ror #8
 801572c:	74636166 	strbtvc	r6, [r3], #-358	; 0xfffffe9a
 8015730:	2379726f 	cmncs	r9, #-268435450	; 0xf0000006
 8015734:	 	subvc	r0, r1, #35	; 0x23

08015736 <s_Node>:
 8015736:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 801573a:	0074654e 	rsbseq	r6, r4, lr, asr #10
	...
 8015746:	41730000 	cmnmi	r3, r0
 801574a:	45204e43 	strmi	r4, [r0, #-3651]!	; 0xfffff1bd
 801574e:	31332e31 	teqcc	r3, r1, lsr lr
	...
 801575a:	2043534f 	subcs	r5, r3, pc, asr #6
 801575e:	76726553 			; <UNDEFINED> instruction: 0x76726553
 8015762:	00007265 	andeq	r7, r0, r5, ror #4
 8015766:	00000000 	andeq	r0, r0, r0
 801576a:	544c0000 	strbpl	r0, [ip], #-0
 801576e:	00000043 	andeq	r0, r0, r3, asr #32
	...
 801577e:	2043534f 	subcs	r5, r3, pc, asr #6
 8015782:	65696c43 	strbvs	r6, [r9, #-3139]!	; 0xfffff3bd
 8015786:	0000746e 	andeq	r7, r0, lr, ror #8
 801578a:	00000000 	andeq	r0, r0, r0
 801578e:	44520000 	ldrbmi	r0, [r2], #-0
 8015792:	74654e4d 	strbtvc	r4, [r5], #-3661	; 0xfffff1b3
 8015796:	524c4c20 	subpl	r4, ip, #32, 24	; 0x2000
 801579a:	6e4f2050 	mcrvs	0, 2, r2, cr15, cr0, {2}
 801579e:	0000796c 	andeq	r7, r0, ip, ror #18
 80157a2:	776f6853 			; <UNDEFINED> instruction: 0x776f6853
 80157a6:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
	...
 80157b2:	494d0000 	stmdbmi	sp, {}^	; <UNPREDICTABLE>
 80157b6:	00004944 	andeq	r4, r0, r4, asr #18
	...
 80157c6:	00504444 	subseq	r4, r0, r4, asr #8
	...

080157d8 <s_Output>:
 80157d8:	00584d44 	subseq	r4, r8, r4, asr #26
	...
 80157e4:	004d4452 	subeq	r4, sp, r2, asr r4
	...
 80157f0:	696e6f4d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
 80157f4:	00726f74 	rsbseq	r6, r2, r4, ror pc
 80157f8:	00000000 	andeq	r0, r0, r0
 80157fc:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
 8015800:	0000006c 	andeq	r0, r0, ip, rrx
 8015804:	00000000 	andeq	r0, r0, r0
 8015808:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
 801580c:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
 8015810:	00000000 	andeq	r0, r0, r0
 8015814:	0043534f 	subeq	r5, r3, pc, asr #6
	...
 8015820:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 8015824:	00006769 	andeq	r6, r0, r9, ror #14
 8015828:	00000000 	andeq	r0, r0, r0
 801582c:	70657453 	rsbvc	r7, r5, r3, asr r4
 8015830:	00726570 	rsbseq	r6, r2, r0, ror r5
 8015834:	00000000 	andeq	r0, r0, r0
 8015838:	79616c50 	stmdbvc	r1!, {r4, r6, sl, fp, sp, lr}^
 801583c:	00007265 	andeq	r7, r0, r5, ror #4
 8015840:	00000000 	andeq	r0, r0, r0
 8015844:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 8015848:	0074654e 	rsbseq	r6, r4, lr, asr #10
 801584c:	00000000 	andeq	r0, r0, r0
 8015850:	69726553 	ldmdbvs	r2!, {r0, r1, r4, r6, r8, sl, sp, lr}^
 8015854:	00006c61 	andeq	r6, r0, r1, ror #24
 8015858:	00000000 	andeq	r0, r0, r0
 801585c:	20424752 	subcs	r4, r2, r2, asr r7
 8015860:	656e6150 	strbvs	r6, [lr, #-336]!	; 0xfffffeb0
 8015864:	0000006c 	andeq	r0, r0, ip, rrx

08015868 <RemoteConfig::s_GET>:
 8015868:	0800ddd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, sl, fp, ip, lr, pc}
 801586c:	00000000 	andeq	r0, r0, r0
 8015870:	08015700 	stmdaeq	r1, {r8, r9, sl, ip, lr}
 8015874:	00000008 	andeq	r0, r0, r8
 8015878:	0800d2a5 	stmdaeq	r0, {r0, r2, r5, r7, r9, ip, lr, pc}
 801587c:	00000000 	andeq	r0, r0, r0
 8015880:	08015709 	stmdaeq	r1, {r0, r3, r8, r9, sl, ip, lr}
 8015884:	00000005 	andeq	r0, r0, r5
 8015888:	0800d2a5 	stmdaeq	r0, {r0, r2, r5, r7, r9, ip, lr, pc}
 801588c:	00000000 	andeq	r0, r0, r0
 8015890:	0801570f 	stmdaeq	r1, {r0, r1, r2, r3, r8, r9, sl, ip, lr}
 8015894:	00000006 	andeq	r0, r0, r6
 8015898:	0800d499 	stmdaeq	r0, {r0, r3, r4, r7, sl, ip, lr, pc}
 801589c:	00000000 	andeq	r0, r0, r0
 80158a0:	08015716 	stmdaeq	r1, {r1, r2, r4, r8, r9, sl, ip, lr}
 80158a4:	00000007 	andeq	r0, r0, r7
 80158a8:	0800d455 	stmdaeq	r0, {r0, r2, r4, r6, sl, ip, lr, pc}
 80158ac:	00000000 	andeq	r0, r0, r0
 80158b0:	0801571e 	stmdaeq	r1, {r1, r2, r3, r4, r8, r9, sl, ip, lr}
 80158b4:	00000008 	andeq	r0, r0, r8
 80158b8:	0800d37d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r8, r9, ip, lr, pc}
 80158bc:	00000000 	andeq	r0, r0, r0
 80158c0:	080156e5 	stmdaeq	r1, {r0, r2, r5, r6, r7, r9, sl, ip, lr}
 80158c4:	00000008 	andeq	r0, r0, r8
 80158c8:	0800d71d 	stmdaeq	r0, {r0, r2, r3, r4, r8, r9, sl, ip, lr, pc}
 80158cc:	00000000 	andeq	r0, r0, r0
 80158d0:	08015727 	stmdaeq	r1, {r0, r1, r2, r5, r8, r9, sl, ip, lr}
 80158d4:	00010004 	andeq	r0, r1, r4
 80158d8:	0800d3fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, r9, ip, lr, pc}
 80158dc:	00000000 	andeq	r0, r0, r0
 80158e0:	080156df 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r7, r9, sl, ip, lr}
 80158e4:	00000005 	andeq	r0, r0, r5
 80158e8:	0800dabd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, r9, fp, ip, lr, pc}
 80158ec:	00000000 	andeq	r0, r0, r0
 80158f0:	0801572c 	stmdaeq	r1, {r2, r3, r5, r8, r9, sl, ip, lr}
 80158f4:	00000009 	andeq	r0, r0, r9

080158f8 <RemoteConfig::s_SET>:
 80158f8:	0800d3d9 	stmdaeq	r0, {r0, r3, r4, r6, r7, r8, r9, ip, lr, pc}
 80158fc:	00000000 	andeq	r0, r0, r0
 8015900:	080156df 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r7, r9, sl, ip, lr}
 8015904:	00010005 	andeq	r0, r1, r5
 8015908:	0800d4ed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, sl, ip, lr, pc}
 801590c:	00000000 	andeq	r0, r0, r0
 8015910:	080156e5 	stmdaeq	r1, {r0, r2, r5, r6, r7, r9, sl, ip, lr}
 8015914:	00010008 	andeq	r0, r1, r8
 8015918:	6f626552 	svcvs	0x00626552
 801591c:	6e69746f 	cdpvs	4, 6, cr7, cr9, cr15, {3}
 8015920:	2e2e2067 	cdpcs	0, 2, cr2, cr14, cr7, {3}
 8015924:	52000a2e 	andpl	r0, r0, #188416	; 0x2e000
 8015928:	6f6f6265 	svcvs	0x006f6265
 801592c:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 8015930:	2e2e2e20 	cdpcs	14, 2, cr2, cr14, cr0, {1}
 8015934:	6f637200 	svcvs	0x00637200
 8015938:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 801593c:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8015940:	74656e00 	strbtvc	r6, [r5], #-3584	; 0xfffff200
 8015944:	6b726f77 	blvs	9cb1728 <__exidx_end+0x1c9a5b8>
 8015948:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 801594c:	73696400 	cmnvc	r9, #0, 8
 8015950:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8015954:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8015958:	33316500 	teqcc	r1, #0, 10
 801595c:	78742e31 	ldmdavc	r4!, {r0, r4, r5, r9, sl, fp, sp}^
 8015960:	61700074 	cmnvs	r0, r4, ror r0
 8015964:	736d6172 	cmnvc	sp, #-2147483620	; 0x8000001c
 8015968:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 801596c:	00000000 	andeq	r0, r0, r0

08015970 <RemoteConfig::s_TXT>:
 8015970:	0800d725 	stmdaeq	r0, {r0, r2, r5, r8, r9, sl, ip, lr, pc}
 8015974:	00000000 	andeq	r0, r0, r0
 8015978:	0800d9e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, fp, ip, lr, pc}
 801597c:	00000000 	andeq	r0, r0, r0
 8015980:	08015935 	stmdaeq	r1, {r0, r2, r4, r5, r8, fp, ip, lr}
 8015984:	0000000b 	andeq	r0, r0, fp
 8015988:	0000000c 	andeq	r0, r0, ip
 801598c:	0800d751 	stmdaeq	r0, {r0, r4, r6, r8, r9, sl, ip, lr, pc}
 8015990:	00000000 	andeq	r0, r0, r0
 8015994:	0800da15 	stmdaeq	r0, {r0, r2, r4, r9, fp, ip, lr, pc}
 8015998:	00000000 	andeq	r0, r0, r0
 801599c:	08015941 	stmdaeq	r1, {r0, r6, r8, fp, ip, lr}
 80159a0:	0000000b 	andeq	r0, r0, fp
 80159a4:	00000000 	andeq	r0, r0, r0
 80159a8:	0800d7d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sl, ip, lr, pc}
 80159ac:	00000000 	andeq	r0, r0, r0
 80159b0:	0800da91 	stmdaeq	r0, {r0, r4, r7, r9, fp, ip, lr, pc}
 80159b4:	00000000 	andeq	r0, r0, r0
 80159b8:	0801594d 	stmdaeq	r1, {r0, r2, r3, r6, r8, fp, ip, lr}
 80159bc:	0000000b 	andeq	r0, r0, fp
 80159c0:	0000000f 	andeq	r0, r0, pc
 80159c4:	0800d77d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r8, r9, sl, ip, lr, pc}
 80159c8:	00000000 	andeq	r0, r0, r0
 80159cc:	0800da3d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r9, fp, ip, lr, pc}
 80159d0:	00000000 	andeq	r0, r0, r0
 80159d4:	08015959 	stmdaeq	r1, {r0, r3, r4, r6, r8, fp, ip, lr}
 80159d8:	00000008 	andeq	r0, r0, r8
 80159dc:	00000004 	andeq	r0, r0, r4
 80159e0:	0800d7a9 	stmdaeq	r0, {r0, r3, r5, r7, r8, r9, sl, ip, lr, pc}
 80159e4:	00000000 	andeq	r0, r0, r0
 80159e8:	0800da69 	stmdaeq	r0, {r0, r3, r5, r6, r9, fp, ip, lr, pc}
 80159ec:	00000000 	andeq	r0, r0, r0
 80159f0:	08015962 	stmdaeq	r1, {r1, r5, r6, r8, fp, ip, lr}
 80159f4:	0000000a 	andeq	r0, r0, sl
 80159f8:	00000002 	andeq	r0, r0, r2
 80159fc:	45470020 	strbmi	r0, [r7, #-32]	; 0xffffffe0
 8015a00:	4f500054 	svcmi	0x00500054
 8015a04:	48005453 	stmdami	r0, {r0, r1, r4, r6, sl, ip, lr}
 8015a08:	00505454 	subseq	r5, r0, r4, asr r4
 8015a0c:	31000a20 	tstcc	r0, r0, lsr #20
 8015a10:	3a00312e 	bcc	8021ed0 <__exidx_end+0xad60>
 8015a14:	6e6f4300 	cdpvs	3, 6, cr4, cr15, cr0, {0}
 8015a18:	746e6574 	strbtvc	r6, [lr], #-1396	; 0xfffffa8c
 8015a1c:	7079542d 	rsbsvc	r5, r9, sp, lsr #8
 8015a20:	3b200065 	blcc	8815bbc <__exidx_end+0x7fea4c>
 8015a24:	70706100 	rsbsvc	r6, r0, r0, lsl #2
 8015a28:	6163696c 	cmnvs	r3, ip, ror #18
 8015a2c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8015a30:	6f736a2f 	svcvs	0x00736a2f
 8015a34:	6f43006e 	svcvs	0x0043006e
 8015a38:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 8015a3c:	654c2d74 	strbvs	r2, [ip, #-3444]	; 0xfffff28c
 8015a40:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
 8015a44:	6e692f00 	cdpvs	15, 6, cr2, cr9, cr0, {0}
 8015a48:	2e786564 	cdpcs	5, 7, cr6, cr8, cr4, {3}
 8015a4c:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8015a50:	74732f00 	ldrbtvc	r2, [r3], #-3840	; 0xfffff100
 8015a54:	73656c79 	cmnvc	r5, #30976	; 0x7900
 8015a58:	7373632e 	cmnvc	r3, #-1207959552	; 0xb8000000
 8015a5c:	6e692f00 	cdpvs	15, 6, cr2, cr9, cr0, {0}
 8015a60:	2e786564 	cdpcs	5, 7, cr6, cr8, cr4, {3}
 8015a64:	2f00736a 	svccs	0x0000736a
 8015a68:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 8015a6c:	696c002f 	stmdbvs	ip!, {r0, r1, r2, r3, r5}^
 8015a70:	76007473 			; <UNDEFINED> instruction: 0x76007473
 8015a74:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8015a78:	75006e6f 	strvc	r6, [r0, #-3695]	; 0xfffff191
 8015a7c:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 8015a80:	69640065 	stmdbvs	r4!, {r0, r2, r5, r6}^
 8015a84:	616c7073 	smcvs	50947	; 0xc703
 8015a88:	69640079 	stmdbvs	r4!, {r0, r3, r4, r5, r6}^
 8015a8c:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 8015a90:	0079726f 	rsbseq	r7, r9, pc, ror #4
 8015a94:	6f736a2f 	svcvs	0x00736a2f
 8015a98:	63612f6e 	cmnvs	r1, #440	; 0x1b8
 8015a9c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8015aa0:	62657200 	rsbvs	r7, r5, #0, 4
 8015aa4:	00746f6f 	rsbseq	r6, r4, pc, ror #30
 8015aa8:	6e656469 	cdpvs	4, 6, cr6, cr5, cr9, {3}
 8015aac:	79666974 	stmdbvc	r6!, {r2, r4, r5, r6, r8, fp, sp, lr}^
 8015ab0:	44213c00 	strtmi	r3, [r1], #-3072	; 0xfffff400
 8015ab4:	5954434f 	ldmdbpl	r4, {r0, r1, r2, r3, r6, r8, r9, lr}^
 8015ab8:	68204550 	stmdavs	r0!, {r4, r6, r8, sl, lr}
 8015abc:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 8015ac0:	74683c0a 	strbtvc	r3, [r8], #-3082	; 0xfffff3f6
 8015ac4:	0a3e6c6d 	beq	8fb0c80 <__exidx_end+0xf99b10>
 8015ac8:	6165683c 	cmnvs	r5, ip, lsr r8
 8015acc:	743c3e64 	ldrtvc	r3, [ip], #-3684	; 0xfffff19c
 8015ad0:	656c7469 	strbvs	r7, [ip, #-1129]!	; 0xfffffb97
 8015ad4:	6275533e 	rsbsvs	r5, r5, #-134217728	; 0xf8000000
 8015ad8:	3c74696d 			; <UNDEFINED> instruction: 0x3c74696d
 8015adc:	7469742f 	strbtvc	r7, [r9], #-1071	; 0xfffffbd1
 8015ae0:	3c3e656c 	cfldr32cc	mvfx6, [lr], #-432	; 0xfffffe50
 8015ae4:	6165682f 	cmnvs	r5, pc, lsr #16
 8015ae8:	3c0a3e64 	stccc	14, cr3, [sl], {100}	; 0x64
 8015aec:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 8015af0:	31683c3e 	cmncc	r8, lr, lsr ip
 8015af4:	3c4b4f3e 	mcrrcc	15, 3, r4, fp, cr14
 8015af8:	3e31682f 	cdpcc	8, 3, cr6, cr1, cr15, {1}
 8015afc:	6f622f3c 	svcvs	0x00622f3c
 8015b00:	0a3e7964 	beq	8fb4098 <__exidx_end+0xf9cf28>
 8015b04:	74682f3c 	strbtvc	r2, [r8], #-3900	; 0xfffff0c4
 8015b08:	0a3e6c6d 	beq	8fb0cc4 <__exidx_end+0xf99b54>
 8015b0c:	64614200 	strbtvs	r4, [r1], #-512	; 0xfffffe00
 8015b10:	71655220 	cmnvc	r5, r0, lsr #4
 8015b14:	74736575 	ldrbtvc	r6, [r3], #-1397	; 0xfffffa8b
 8015b18:	746f4e00 	strbtvc	r4, [pc], #-3584	; 8015b20 <RemoteConfig::s_TXT+0x1b0>
 8015b1c:	756f4620 	strbvc	r4, [pc, #-1568]!	; 8015504 <RDMHandler::PID_DEFINITIONS+0x268>
 8015b20:	5200646e 	andpl	r6, r0, #1845493760	; 0x6e000000
 8015b24:	65757165 	ldrbvs	r7, [r5, #-357]!	; 0xfffffe9b
 8015b28:	45207473 	strmi	r7, [r0, #-1139]!	; 0xfffffb8d
 8015b2c:	7469746e 	strbtvc	r7, [r9], #-1134	; 0xfffffb92
 8015b30:	6f542079 	svcvs	0x00542079
 8015b34:	614c206f 	cmpvs	ip, pc, rrx
 8015b38:	00656772 	rsbeq	r6, r5, r2, ror r7
 8015b3c:	75716552 	ldrbvc	r6, [r1, #-1362]!	; 0xfffffaae
 8015b40:	2d747365 	ldclcs	3, cr7, [r4, #-404]!	; 0xfffffe6c
 8015b44:	20495255 	subcs	r5, r9, r5, asr r2
 8015b48:	206f6f54 	rsbcs	r6, pc, r4, asr pc	; <UNPREDICTABLE>
 8015b4c:	676e6f4c 	strbvs	r6, [lr, -ip, asr #30]!
 8015b50:	746e4900 	strbtvc	r4, [lr], #-2304	; 0xfffff700
 8015b54:	616e7265 	cmnvs	lr, r5, ror #4
 8015b58:	6553206c 	ldrbvs	r2, [r3, #-108]	; 0xffffff94
 8015b5c:	72657672 	rsbvc	r7, r5, #119537664	; 0x7200000
 8015b60:	72724520 	rsbsvc	r4, r2, #32, 10	; 0x8000000
 8015b64:	4d00726f 	sfmmi	f7, 4, [r0, #-444]	; 0xfffffe44
 8015b68:	6f687465 	svcvs	0x00687465
 8015b6c:	6f4e2064 	svcvs	0x004e2064
 8015b70:	6d492074 	stclvs	0, cr2, [r9, #-464]	; 0xfffffe30
 8015b74:	6d656c70 	stclvs	12, cr6, [r5, #-448]!	; 0xfffffe40
 8015b78:	65746e65 	ldrbvs	r6, [r4, #-3685]!	; 0xfffff19b
 8015b7c:	65560064 	ldrbvs	r0, [r6, #-100]	; 0xffffff9c
 8015b80:	6f697372 	svcvs	0x00697372
 8015b84:	6f4e206e 	svcvs	0x004e206e
 8015b88:	75532074 	ldrbvc	r2, [r3, #-116]	; 0xffffff8c
 8015b8c:	726f7070 	rsbvc	r7, pc, #112	; 0x70
 8015b90:	00646574 	rsbeq	r6, r4, r4, ror r5
 8015b94:	6e6b6e55 	mcrvs	14, 3, r6, cr11, cr5, {2}
 8015b98:	206e776f 	rsbcs	r7, lr, pc, ror #14
 8015b9c:	6f727245 	svcvs	0x00727245
 8015ba0:	4b4f0072 	blmi	93d5d70 <__exidx_end+0x13bec00>
 8015ba4:	44213c00 	strtmi	r3, [r1], #-3072	; 0xfffff400
 8015ba8:	5954434f 	ldmdbpl	r4, {r0, r1, r2, r3, r6, r8, r9, lr}^
 8015bac:	68204550 	stmdavs	r0!, {r4, r6, r8, sl, lr}
 8015bb0:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 8015bb4:	74683c0a 	strbtvc	r3, [r8], #-3082	; 0xfffff3f6
 8015bb8:	0a3e6c6d 	beq	8fb0d74 <__exidx_end+0xf99c04>
 8015bbc:	6165683c 	cmnvs	r5, ip, lsr r8
 8015bc0:	743c3e64 	ldrtvc	r3, [ip], #-3684	; 0xfffff19c
 8015bc4:	656c7469 	strbvs	r7, [ip, #-1129]!	; 0xfffffb97
 8015bc8:	2075253e 	rsbscs	r2, r5, lr, lsr r5
 8015bcc:	2f3c7325 	svccs	0x003c7325
 8015bd0:	6c746974 			; <UNDEFINED> instruction: 0x6c746974
 8015bd4:	2f3c3e65 	svccs	0x003c3e65
 8015bd8:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
 8015bdc:	623c0a3e 	eorsvs	r0, ip, #253952	; 0x3e000
 8015be0:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 8015be4:	3e31683c 	mrccc	8, 1, r6, cr1, cr12, {1}
 8015be8:	2f3c7325 	svccs	0x003c7325
 8015bec:	3c3e3168 	ldfccs	f3, [lr], #-416	; 0xfffffe60
 8015bf0:	646f622f 	strbtvs	r6, [pc], #-559	; 8015bf8 <RemoteConfig::s_TXT+0x288>
 8015bf4:	3c0a3e79 	stccc	14, cr3, [sl], {121}	; 0x79
 8015bf8:	6d74682f 	ldclvs	8, cr6, [r4, #-188]!	; 0xffffff44
 8015bfc:	000a3e6c 	andeq	r3, sl, ip, ror #28
 8015c00:	50545448 	subspl	r5, r4, r8, asr #8
 8015c04:	312e312f 			; <UNDEFINED> instruction: 0x312e312f
 8015c08:	20752520 	rsbscs	r2, r5, r0, lsr #10
 8015c0c:	0a0d7325 	beq	83728a8 <__exidx_end+0x35b738>
 8015c10:	76726553 			; <UNDEFINED> instruction: 0x76726553
 8015c14:	203a7265 	eorscs	r7, sl, r5, ror #4
 8015c18:	0a0d7325 	beq	83728b4 <__exidx_end+0x35b744>
 8015c1c:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
 8015c20:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	; 0xfffffe6c
 8015c24:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
 8015c28:	7325203a 			; <UNDEFINED> instruction: 0x7325203a
 8015c2c:	6f430a0d 	svcvs	0x00430a0d
 8015c30:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 8015c34:	654c2d74 	strbvs	r2, [ip, #-3444]	; 0xfffff28c
 8015c38:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
 8015c3c:	7525203a 	strvc	r2, [r5, #-58]!	; 0xffffffc6
 8015c40:	6f430a0d 	svcvs	0x00430a0d
 8015c44:	63656e6e 	cmnvs	r5, #1760	; 0x6e0
 8015c48:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8015c4c:	6c63203a 	stclvs	0, cr2, [r3], #-232	; 0xffffff18
 8015c50:	0d65736f 	stcleq	3, cr7, [r5, #-444]!	; 0xfffffe44
 8015c54:	000a0d0a 	andeq	r0, sl, sl, lsl #26

08015c58 <contentType>:
 8015c58:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 8015c5c:	6d74682f 	ldclvs	8, cr6, [r4, #-188]!	; 0xffffff44
 8015c60:	0000006c 	andeq	r0, r0, ip, rrx
	...
 8015c78:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 8015c7c:	7373632f 	cmnvc	r3, #-1140850688	; 0xbc000000
	...
 8015c98:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 8015c9c:	76616a2f 	strbtvc	r6, [r1], -pc, lsr #20
 8015ca0:	72637361 	rsbvc	r7, r3, #-2080374783	; 0x84000001
 8015ca4:	00747069 	rsbseq	r7, r4, r9, rrx
	...
 8015cb8:	6c707061 	ldclvs	0, cr7, [r0], #-388	; 0xfffffe7c
 8015cbc:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
 8015cc0:	2f6e6f69 	svccs	0x006e6f69
 8015cc4:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
	...

08015cd8 <RemoteConfigConst::PARAMS_DISABLE>:
 8015cd8:	61736964 	cmnvs	r3, r4, ror #18
 8015cdc:	00656c62 	rsbeq	r6, r5, r2, ror #24

08015ce0 <RemoteConfigConst::PARAMS_FILE_NAME>:
 8015ce0:	6e6f6372 	mcrvs	3, 3, r6, cr15, cr2, {3}
 8015ce4:	2e676966 	vnmulcs.f16	s13, s14, s13	; <UNPREDICTABLE>
 8015ce8:	00747874 	rsbseq	r7, r4, r4, ror r8

08015cec <RemoteConfigConst::PARAMS_DISPLAY_NAME>:
 8015cec:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8015cf0:	5f79616c 	svcpl	0x0079616c
 8015cf4:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

08015cf9 <RemoteConfigConst::PARAMS_DISABLE_WRITE>:
 8015cf9:	61736964 	cmnvs	r3, r4, ror #18
 8015cfd:	5f656c62 	svcpl	0x00656c62
 8015d01:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
 8015d05:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

08015d07 <RemoteConfigConst::PARAMS_ENABLE_REBOOT>:
 8015d07:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 8015d0b:	725f656c 	subsvc	r6, pc, #108, 10	; 0x1b000000
 8015d0f:	6f6f6265 	svcvs	0x006f6265
 8015d13:	 	mcrvs	0, 3, r0, cr5, cr4, {3}

08015d15 <RemoteConfigConst::PARAMS_ENABLE_UPTIME>:
 8015d15:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 8015d19:	755f656c 	ldrbvc	r6, [pc, #-1388]	; 80157b5 <s_Node+0x7f>
 8015d1d:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 8015d21:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

08015d23 <RemoteConfigConst::PARAMS_ENABLE_FACTORY>:
 8015d23:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 8015d27:	665f656c 	ldrbvs	r6, [pc], -ip, ror #10
 8015d2b:	6f746361 	svcvs	0x00746361
 8015d2f:	7b007972 	blvc	80342ff <__exidx_end+0x1d18f>
 8015d33:	73696c22 	cmnvc	r9, #8704	; 0x2200
 8015d37:	7b3a2274 	blvc	8e9e70f <__exidx_end+0xe8759f>
 8015d3b:	22706922 	rsbscs	r6, r0, #557056	; 0x88000
 8015d3f:	6425223a 	strtvs	r2, [r5], #-570	; 0xfffffdc6
 8015d43:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8015d47:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8015d4b:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 8015d4f:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 8015d53:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8015d57:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 8015d5b:	65646f6e 	strbvs	r6, [r4, #-3950]!	; 0xfffff092
 8015d5f:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 8015d63:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 8015d67:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8015d6b:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 8015d6f:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8015d73:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 8015d77:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 8015d7b:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8015d7f:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 8015d83:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 8015d87:	253a2274 	ldrcs	r2, [sl, #-628]!	; 0xfffffd8c
 8015d8b:	7d7d7d64 	ldclvc	13, cr7, [sp, #-400]!	; 0xfffffe70
 8015d8f:	227b007d 	rsbscs	r0, fp, #125	; 0x7d
 8015d93:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8015d97:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 8015d9b:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 8015d9f:	2c22732a 	stccs	3, cr7, [r2], #-168	; 0xffffff58
 8015da3:	616f6222 	cmnvs	pc, r2, lsr #4
 8015da7:	3a226472 	bcc	88aef77 <__exidx_end+0x897e07>
 8015dab:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 8015daf:	7562222c 	strbvc	r2, [r2, #-556]!	; 0xfffffdd4
 8015db3:	22646c69 	rsbcs	r6, r4, #26880	; 0x6900
 8015db7:	64227b3a 	strtvs	r7, [r2], #-2874	; 0xfffff4c6
 8015dbb:	22657461 	rsbcs	r7, r5, #1627389952	; 0x61000000
 8015dbf:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 8015dc3:	2c22732a 	stccs	3, cr7, [r2], #-168	; 0xffffff58
 8015dc7:	6d697422 	cfstrdvs	mvd7, [r9, #-136]!	; 0xffffff78
 8015dcb:	223a2265 	eorscs	r2, sl, #1342177286	; 0x50000006
 8015dcf:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
 8015dd3:	007d7d22 	rsbseq	r7, sp, r2, lsr #26
 8015dd7:	7075227b 	rsbsvc	r2, r5, fp, ror r2
 8015ddb:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 8015ddf:	75253a22 	strvc	r3, [r5, #-2594]!	; 0xfffff5de
 8015de3:	7b000a7d 	blvc	80187df <__exidx_end+0x166f>
 8015de7:	73696422 	cmnvc	r9, #570425344	; 0x22000000
 8015deb:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8015def:	64253a22 	strtvs	r3, [r5], #-2594	; 0xfffff5de
 8015df3:	227b007d 	rsbscs	r0, fp, #125	; 0x7d
 8015df7:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8015dfb:	7b3a2273 	blvc	8e9e7cf <__exidx_end+0xe8765f>
 8015dff:	33316522 	teqcc	r1, #142606336	; 0x8800000
 8015e03:	78742e31 	ldmdavc	r4!, {r0, r4, r5, r9, sl, fp, sp}^
 8015e07:	223a2274 	eorscs	r2, sl, #116, 4	; 0x40000007
 8015e0b:	4e434173 	mcrmi	1, 2, r4, cr3, cr3, {3}
 8015e0f:	2e314520 	cfabs64cs	mvdx4, mvdx1
 8015e13:	2c223133 	stfcss	f3, [r2], #-204	; 0xffffff34
 8015e17:	72617022 	rsbvc	r7, r1, #34	; 0x22
 8015e1b:	2e736d61 	cdpcs	13, 7, cr6, cr3, cr1, {3}
 8015e1f:	22747874 	rsbscs	r7, r4, #116, 16	; 0x740000
 8015e23:	4d44223a 	sfmmi	f2, 2, [r4, #-232]	; 0xffffff18
 8015e27:	72542058 	subsvc	r2, r4, #88	; 0x58
 8015e2b:	6d736e61 	ldclvs	14, cr6, [r3, #-388]!	; 0xfffffe7c
 8015e2f:	2c227469 	cfstrscs	mvf7, [r2], #-420	; 0xfffffe5c
 8015e33:	73696422 	cmnvc	r9, #570425344	; 0x22000000
 8015e37:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8015e3b:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8015e3f:	44223a22 	strtmi	r3, [r2], #-2594	; 0xfffff5de
 8015e43:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
 8015e47:	55207961 	strpl	r7, [r0, #-2401]!	; 0xfffff69f
 8015e4b:	2c224644 	stccs	6, cr4, [r2], #-272	; 0xfffffef0
 8015e4f:	74656e22 	strbtvc	r6, [r5], #-3618	; 0xfffff1de
 8015e53:	6b726f77 	blvs	9cb1c37 <__exidx_end+0x1c9aac7>
 8015e57:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8015e5b:	4e223a22 	vmulmi.f32	s6, s4, s5
 8015e5f:	6f777465 	svcvs	0x00777465
 8015e63:	2c226b72 			; <UNDEFINED> instruction: 0x2c226b72
 8015e67:	6f637222 	svcvs	0x00637222
 8015e6b:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 8015e6f:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8015e73:	52223a22 	eorpl	r3, r2, #139264	; 0x22000
 8015e77:	746f6d65 	strbtvc	r6, [pc], #-3429	; 8015e7f <RemoteConfigConst::PARAMS_ENABLE_FACTORY+0x15c>
 8015e7b:	6f632065 	svcvs	0x00632065
 8015e7f:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 8015e83:	74617275 	strbtvc	r7, [r1], #-629	; 0xfffffd8b
 8015e87:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 8015e8b:	73007d7d 	movwvc	r7, #3453	; 0xd7d
 8015e8f:	682f6372 	stmdavs	pc!, {r1, r4, r5, r6, r8, r9, sp, lr}	; <UNPREDICTABLE>
 8015e93:	64707474 	ldrbtvs	r7, [r0], #-1140	; 0xfffffb8c
 8015e97:	7465672f 	strbtvc	r6, [r5], #-1839	; 0xfffff8d1
 8015e9b:	6c69665f 	stclvs	6, cr6, [r9], #-380	; 0xfffffe84
 8015e9f:	6f635f65 	svcvs	0x00635f65
 8015ea3:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 8015ea7:	70632e74 	rsbvc	r2, r3, r4, ror lr
 8015eab:	65670070 	strbvs	r0, [r7, #-112]!	; 0xffffff90
 8015eaf:	69665f74 	stmdbvs	r6!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 8015eb3:	635f656c 	cmpvs	pc, #108, 10	; 0x1b000000
 8015eb7:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
 8015ebb:	2500746e 	strcs	r7, [r0, #-1134]	; 0xfffffb92
 8015ebf:	20292873 	eorcs	r2, r9, r3, ror r8
 8015ec3:	202c7325 	eorcs	r7, ip, r5, lsr #6
 8015ec7:	656e696c 	strbvs	r6, [lr, #-2412]!	; 0xfffff694
 8015ecb:	3a692520 	bcc	9a5f353 <__exidx_end+0x1a481e3>
 8015ecf:	20732520 	rsbscs	r2, r3, r0, lsr #10
 8015ed3:	25203e2d 	strcs	r3, [r0, #-3629]!	; 0xfffff1d3
 8015ed7:	3c000a64 			; <UNDEFINED> instruction: 0x3c000a64
 8015edb:	25202d2d 	strcs	r2, [r0, #-3373]!	; 0xfffff2d3
 8015edf:	73253a73 			; <UNDEFINED> instruction: 0x73253a73
 8015ee3:	0a64253a 	beq	991f3d3 <__exidx_end+0x1908263>
	...

08015ee8 <index_html>:
 8015ee8:	4f44213c 	svcmi	0x0044213c
 8015eec:	50595443 	subspl	r5, r9, r3, asr #8
 8015ef0:	74682045 	strbtvc	r2, [r8], #-69	; 0xffffffbb
 8015ef4:	0a3e6c6d 	beq	8fb10b0 <__exidx_end+0xf99f40>
 8015ef8:	6d74683c 	ldclvs	8, cr6, [r4, #-240]!	; 0xffffff10
 8015efc:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
 8015f00:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
 8015f04:	3c090a3e 			; <UNDEFINED> instruction: 0x3c090a3e
 8015f08:	6b6e696c 	blvs	9bb04c0 <__exidx_end+0x1b99350>
 8015f0c:	6c657220 	sfmvs	f7, 2, [r5], #-128	; 0xffffff80
 8015f10:	7473223d 	ldrbtvc	r2, [r3], #-573	; 0xfffffdc3
 8015f14:	73656c79 	cmnvc	r5, #30976	; 0x7900
 8015f18:	74656568 	strbtvc	r6, [r5], #-1384	; 0xfffffa98
 8015f1c:	72682022 	rsbvc	r2, r8, #34	; 0x22
 8015f20:	223d6665 	eorscs	r6, sp, #105906176	; 0x6500000
 8015f24:	6c797473 	cfldrdvs	mvd7, [r9], #-460	; 0xfffffe34
 8015f28:	632e7365 			; <UNDEFINED> instruction: 0x632e7365
 8015f2c:	20227373 	eorcs	r7, r2, r3, ror r3
 8015f30:	090a3e2f 	stmdbeq	sl, {r0, r1, r2, r3, r5, r9, sl, fp, ip, sp}
 8015f34:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
 8015f38:	3c3e656c 	cfldr32cc	mvfx6, [lr], #-432	; 0xfffffe50
 8015f3c:	7469742f 	strbtvc	r7, [r9], #-1071	; 0xfffffbd1
 8015f40:	0a3e656c 	beq	8faf4f8 <__exidx_end+0xf98388>
 8015f44:	65682f3c 	strbvs	r2, [r8, #-3900]!	; 0xfffff0c4
 8015f48:	0a3e6461 	beq	8faf0d4 <__exidx_end+0xf97f64>
 8015f4c:	646f623c 	strbtvs	r6, [pc], #-572	; 8015f54 <index_html+0x6c>
 8015f50:	090a3e79 	stmdbeq	sl, {r0, r3, r4, r5, r6, r9, sl, fp, ip, sp}
 8015f54:	6165683c 	cmnvs	r5, ip, lsr r8
 8015f58:	3e726564 	cdpcc	5, 7, cr6, cr2, cr4, {3}
 8015f5c:	206c753c 	rsbcs	r7, ip, ip, lsr r5
 8015f60:	223d6469 	eorscs	r6, sp, #1761607680	; 0x69000000
 8015f64:	694c6469 	stmdbvs	ip, {r0, r3, r5, r6, sl, sp, lr}^
 8015f68:	3e227473 	mcrcc	4, 1, r7, cr2, cr3, {3}
 8015f6c:	6c752f3c 	ldclvs	15, cr2, [r5], #-240	; 0xffffff10
 8015f70:	682f3c3e 	stmdavs	pc!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8015f74:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 8015f78:	090a3e72 	stmdbeq	sl, {r1, r4, r5, r6, r9, sl, fp, ip, sp}
 8015f7c:	3c3e703c 	ldccc	0, cr7, [lr], #-240	; 0xffffff10
 8015f80:	656c6573 	strbvs	r6, [ip, #-1395]!	; 0xfffffa8d
 8015f84:	69207463 	stmdbvs	r0!, {r0, r1, r5, r6, sl, ip, sp, lr}
 8015f88:	69223d64 	stmdbvs	r2!, {r2, r5, r6, r8, sl, fp, ip, sp}
 8015f8c:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
 8015f90:	6f746365 	svcvs	0x00746365
 8015f94:	20227972 	eorcs	r7, r2, r2, ror r9
 8015f98:	68636e6f 	stmdavs	r3!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 8015f9c:	65676e61 	strbvs	r6, [r7, #-3681]!	; 0xfffff19f
 8015fa0:	6567223d 	strbvs	r2, [r7, #-573]!	; 0xfffffdc3
 8015fa4:	78745f74 	ldmdavc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 8015fa8:	68742874 	ldmdavs	r4!, {r2, r4, r5, r6, fp, sp}^
 8015fac:	762e7369 	strtvc	r7, [lr], -r9, ror #6
 8015fb0:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
 8015fb4:	3c3e2229 	lfmcc	f2, 4, [lr], #-164	; 0xffffff5c
 8015fb8:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
 8015fbc:	3e746365 	cdpcc	3, 7, cr6, cr4, cr5, {3}
 8015fc0:	3e702f3c 	mrccc	15, 3, r2, cr0, cr12, {1}
 8015fc4:	743c090a 	ldrtvc	r0, [ip], #-2314	; 0xfffff6f6
 8015fc8:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
 8015fcc:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
 8015fd0:	54646922 	strbtpl	r6, [r4], #-2338	; 0xfffff6de
 8015fd4:	20227478 	eorcs	r7, r2, r8, ror r4
 8015fd8:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 8015fdc:	273d7265 	ldrcs	r7, [sp, -r5, ror #4]!
 8015fe0:	3c3e2731 	ldccc	7, cr2, [lr], #-196	; 0xffffff3c
 8015fe4:	6261742f 	rsbvs	r7, r1, #788529152	; 0x2f000000
 8015fe8:	0a3e656c 	beq	8faf5a0 <__exidx_end+0xf98430>
 8015fec:	6f663c09 	svcvs	0x00663c09
 8015ff0:	7265746f 	rsbvc	r7, r5, #1862270976	; 0x6f000000
 8015ff4:	6c753c3e 	ldclvs	12, cr3, [r5], #-248	; 0xffffff08
 8015ff8:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
 8015ffc:	56646922 	strbtpl	r6, [r4], -r2, lsr #18
 8016000:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8016004:	3e226e6f 	cdpcc	14, 2, cr6, cr2, cr15, {3}
 8016008:	6c752f3c 	ldclvs	15, cr2, [r5], #-240	; 0xffffff10
 801600c:	662f3c3e 			; <UNDEFINED> instruction: 0x662f3c3e
 8016010:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
 8016014:	090a3e72 	stmdbeq	sl, {r1, r4, r5, r6, r9, sl, fp, ip, sp}
 8016018:	7263733c 	rsbvc	r7, r3, #60, 6	; 0xf0000000
 801601c:	20747069 	rsbscs	r7, r4, r9, rrx
 8016020:	3d637273 	sfmcc	f7, 2, [r3, #-460]!	; 0xfffffe34
 8016024:	646e6922 	strbtvs	r6, [lr], #-2338	; 0xfffff6de
 8016028:	6a2e7865 	bvs	8bb41c4 <__exidx_end+0xb9d054>
 801602c:	3c3e2273 	lfmcc	f2, 4, [lr], #-460	; 0xfffffe34
 8016030:	7263732f 	rsbvc	r7, r3, #-1140850688	; 0xbc000000
 8016034:	3e747069 	cdpcc	0, 7, cr7, cr4, cr9, {3}
 8016038:	622f3c0a 	eorvs	r3, pc, #2560	; 0xa00
 801603c:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 8016040:	682f3c0a 	stmdavs	pc!, {r1, r3, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8016044:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 8016048:	 	strbtvs	r6, [pc], #-522	; 8016050 <styles_css+0x7>

08016049 <styles_css>:
 8016049:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 801604d:	200a7b20 	andcs	r7, sl, r0, lsr #22
 8016051:	63616220 	cmnvs	r1, #32, 4
 8016055:	6f72676b 	svcvs	0x0072676b
 8016059:	2d646e75 	stclcs	14, cr6, [r4, #-468]!	; 0xfffffe2c
 801605d:	6f6c6f63 	svcvs	0x006c6f63
 8016061:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
 8016065:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
 8016069:	30322c30 	eorscc	r2, r2, r0, lsr ip
 801606d:	2930322c 	ldmdbcs	r0!, {r2, r3, r5, r9, ip, sp}
 8016071:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 8016075:	6f6c6f63 	svcvs	0x006c6f63
 8016079:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
 801607d:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
 8016081:	202c3535 	eorcs	r3, ip, r5, lsr r5
 8016085:	2c353532 	cfldr32cs	mvfx3, [r5], #-200	; 0xffffff38
 8016089:	35353220 	ldrcc	r3, [r5, #-544]!	; 0xfffffde0
 801608d:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
 8016091:	6c750a0a 			; <UNDEFINED> instruction: 0x6c750a0a
 8016095:	200a7b20 	andcs	r7, sl, r0, lsr #22
 8016099:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 801609d:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 80160a1:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 80160a5:	0a3b7865 	beq	8ef4241 <__exidx_end+0xedd0d1>
 80160a9:	6c0a0a7d 			; <UNDEFINED> instruction: 0x6c0a0a7d
 80160ad:	0a7b2069 	beq	9ede259 <__exidx_end+0x1ec70e9>
 80160b1:	696c2020 	stmdbvs	ip!, {r5, sp}^
 80160b5:	732d7473 			; <UNDEFINED> instruction: 0x732d7473
 80160b9:	656c7974 	strbvs	r7, [ip, #-2420]!	; 0xfffff68c
 80160bd:	6f6e203a 	svcvs	0x006e203a
 80160c1:	0a3b656e 	beq	8eef681 <__exidx_end+0xed8511>
 80160c5:	616d2020 	cmnvs	sp, r0, lsr #32
 80160c9:	6e696772 	mcrvs	7, 3, r6, cr9, cr2, {3}
 80160cd:	7031203a 	eorsvc	r2, r1, sl, lsr r0
 80160d1:	70352078 	eorsvc	r2, r5, r8, ror r0
 80160d5:	7d0a3b78 	vstrvc	d3, [sl, #-480]	; 0xfffffe20
 80160d9:	65680a0a 	strbvs	r0, [r8, #-2570]!	; 0xfffff5f6
 80160dd:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 80160e1:	200a7b20 	andcs	r7, sl, r0, lsr #22
 80160e5:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 80160e9:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 80160ed:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 80160f1:	0a3b7865 	beq	8ef428d <__exidx_end+0xedd11d>
 80160f5:	6f622020 	svcvs	0x00622020
 80160f9:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
 80160fd:	6461722d 	strbtvs	r7, [r1], #-557	; 0xfffffdd3
 8016101:	3a737569 	bcc	9cf36ad <__exidx_end+0x1cdc53d>
 8016105:	78703420 	ldmdavc	r0!, {r5, sl, ip, sp}^
 8016109:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 801610d:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 8016111:	203a7265 	eorscs	r7, sl, r5, ror #4
 8016115:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8016119:	72672064 	rsbvc	r2, r7, #100	; 0x64
 801611d:	31207965 			; <UNDEFINED> instruction: 0x31207965
 8016121:	0a3b7870 	beq	8ef42e9 <__exidx_end+0xedd179>
 8016125:	660a0a7d 			; <UNDEFINED> instruction: 0x660a0a7d
 8016129:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
 801612d:	0a7b2072 	beq	9ede2fd <__exidx_end+0x1ec718d>
 8016131:	69642020 	stmdbvs	r4!, {r5, sp}^
 8016135:	616c7073 	smcvs	50947	; 0xc703
 8016139:	66203a79 			; <UNDEFINED> instruction: 0x66203a79
 801613d:	3b78656c 	blcc	9e2f6f5 <__exidx_end+0x1e18585>
 8016141:	6a20200a 	bvs	881e171 <__exidx_end+0x807001>
 8016145:	69747375 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r8, r9, ip, sp, lr}^
 8016149:	632d7966 			; <UNDEFINED> instruction: 0x632d7966
 801614d:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
 8016151:	203a746e 	eorscs	r7, sl, lr, ror #8
 8016155:	746e6563 	strbtvc	r6, [lr], #-1379	; 0xfffffa9d
 8016159:	0a3b7265 	beq	8ef2af5 <__exidx_end+0xedb985>
 801615d:	6f622020 	svcvs	0x00622020
 8016161:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
 8016165:	6461722d 	strbtvs	r7, [r1], #-557	; 0xfffffdd3
 8016169:	3a737569 	bcc	9cf3715 <__exidx_end+0x1cdc5a5>
 801616d:	78703420 	ldmdavc	r0!, {r5, sl, ip, sp}^
 8016171:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 8016175:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 8016179:	203a7265 	eorscs	r7, sl, r5, ror #4
 801617d:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8016181:	72672064 	rsbvc	r2, r7, #100	; 0x64
 8016185:	31207965 			; <UNDEFINED> instruction: 0x31207965
 8016189:	0a3b7870 	beq	8ef4351 <__exidx_end+0xedd1e1>
 801618d:	 	andpl	r0, r0, #512000	; 0x7d000

08016190 <HttpContent>:
 8016190:	08015a52 	stmdaeq	r1, {r1, r4, r6, r9, fp, ip, lr}
 8016194:	08016049 	stmdaeq	r1, {r0, r3, r6, sp, lr}
 8016198:	08015a5e 	stmdaeq	r1, {r1, r2, r3, r4, r6, r9, fp, ip, lr}
 801619c:	080161a8 	stmdaeq	r1, {r3, r5, r7, r8, sp, lr}
 80161a0:	08015a46 	stmdaeq	r1, {r1, r2, r6, r9, fp, ip, lr}
 80161a4:	08015ee8 	stmdaeq	r1, {r3, r5, r6, r7, r9, sl, fp, ip, lr}

080161a8 <index_js>:
 80161a8:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 80161ac:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 80161b0:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 80161b4:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 80161b8:	534a7465 	movtpl	r7, #42085	; 0xa465
 80161bc:	6a284e4f 	bvs	8a29b00 <__exidx_end+0xa12990>
 80161c0:	296e6f73 	stmdbcs	lr!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 80161c4:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 80161c8:	74656c09 	strbtvc	r6, [r5], #-3081	; 0xfffff3f7
 80161cc:	6c727520 	cfldr64vs	mvdx7, [r2], #-128	; 0xffffff80
 80161d0:	6a2f273d 	bvs	8bdfecc <__exidx_end+0xbc8d5c>
 80161d4:	2f6e6f73 	svccs	0x006e6f73
 80161d8:	202b2027 	eorcs	r2, fp, r7, lsr #32
 80161dc:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 80161e0:	09090a3b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r9, fp}
 80161e4:	20797274 	rsbscs	r7, r9, r4, ror r2
 80161e8:	09090a7b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r6, r9, fp}
 80161ec:	656c0909 	strbvs	r0, [ip, #-2313]!	; 0xfffff6f7
 80161f0:	65722074 	ldrbvs	r2, [r2, #-116]!	; 0xffffff8c
 80161f4:	77613d73 			; <UNDEFINED> instruction: 0x77613d73
 80161f8:	20746961 	rsbscs	r6, r4, r1, ror #18
 80161fc:	63746566 	cmnvs	r4, #427819008	; 0x19800000
 8016200:	72752868 	rsbsvc	r2, r5, #104, 16	; 0x680000
 8016204:	0a3b296c 	beq	8ee07bc <__exidx_end+0xec964c>
 8016208:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 801620c:	75746572 	ldrbvc	r6, [r4, #-1394]!	; 0xfffffa8e
 8016210:	61206e72 			; <UNDEFINED> instruction: 0x61206e72
 8016214:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 8016218:	73657220 	cmnvc	r5, #32, 4
 801621c:	6f736a2e 	svcvs	0x00736a2e
 8016220:	3b29286e 	blcc	8a603e0 <__exidx_end+0xa49270>
 8016224:	7d09090a 	vstrvc.16	s0, [r9, #-20]	; 0xffffffec	; <UNPREDICTABLE>
 8016228:	74616320 	strbtvc	r6, [r1], #-800	; 0xfffffce0
 801622c:	28206863 	stmdacs	r0!, {r0, r1, r5, r6, fp, sp, lr}
 8016230:	6f727265 	svcvs	0x00727265
 8016234:	7b202972 	blvc	8820804 <__exidx_end+0x809694>
 8016238:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 801623c:	6e6f6309 	cdpvs	3, 6, cr6, cr15, cr9, {0}
 8016240:	656c6f73 	strbvs	r6, [ip, #-3955]!	; 0xfffff08d
 8016244:	676f6c2e 	strbvs	r6, [pc, -lr, lsr #24]!
 8016248:	72726528 	rsbsvc	r6, r2, #40, 10	; 0xa000000
 801624c:	3b29726f 	blcc	8a72c10 <__exidx_end+0xa5baa0>
 8016250:	7d09090a 	vstrvc.16	s0, [r9, #-20]	; 0xffffffec	; <UNPREDICTABLE>
 8016254:	0a0a7d0a 	beq	82b5684 <__exidx_end+0x29e514>
 8016258:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 801625c:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8016260:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8016264:	72206e6f 	eorvc	r6, r0, #1776	; 0x6f0
 8016268:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 801626c:	73694c72 	cmnvc	r9, #29184	; 0x7200
 8016270:	20292874 	eorcs	r2, r9, r4, ror r8
 8016274:	09090a7b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r6, r9, fp}
 8016278:	2074656c 	rsbscs	r6, r4, ip, ror #10
 801627c:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8016280:	6177613d 	cmnvs	r7, sp, lsr r1
 8016284:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8016288:	534a7465 	movtpl	r7, #42085	; 0xa465
 801628c:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8016290:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8016294:	0a3b2927 	beq	8ee0738 <__exidx_end+0xec95c8>
 8016298:	6f640909 	svcvs	0x00640909
 801629c:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 80162a0:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 80162a4:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
 80162a8:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 80162ac:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 80162b0:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 80162b4:	73694c64 	cmnvc	r9, #100, 24	; 0x6400
 80162b8:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 80162bc:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
 80162c0:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
 80162c4:	3c223d4c 	stccc	13, cr3, [r2], #-304	; 0xfffffed0
 80162c8:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
 80162cc:	73696c2b 	cmnvc	r9, #11008	; 0x2b00
 80162d0:	696c2e74 	stmdbvs	ip!, {r2, r4, r5, r6, r9, sl, fp, sp}^
 80162d4:	6e2e7473 	mcrvs	4, 1, r7, cr14, cr3, {3}
 80162d8:	2b656d61 	blcs	9971864 <__exidx_end+0x195a6f4>
 80162dc:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 801625c <index_js+0xb4>
 80162e0:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 80162e4:	2b223e69 	blcs	88a5c90 <__exidx_end+0x88eb20>
 80162e8:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 80162ec:	73696c2e 	cmnvc	r9, #11776	; 0x2e00
 80162f0:	6f6e2e74 	svcvs	0x006e2e74
 80162f4:	742e6564 	strtvc	r6, [lr], #-1380	; 0xfffffa9c
 80162f8:	2b657079 	blcs	99724e4 <__exidx_end+0x195b374>
 80162fc:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 801627c <index_js+0xd4>
 8016300:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8016304:	2b223e69 	blcs	88a5cb0 <__exidx_end+0x88eb40>
 8016308:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 801630c:	73696c2e 	cmnvc	r9, #11776	; 0x2e00
 8016310:	6f6e2e74 	svcvs	0x006e2e74
 8016314:	702e6564 	eorvc	r6, lr, r4, ror #10
 8016318:	2e74726f 	cdpcs	2, 7, cr7, cr4, cr15, {3}
 801631c:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 8016320:	2f3c222b 	svccs	0x003c222b
 8016324:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
 8016328:	0a7d0a3b 	beq	9f58c1c <__exidx_end+0x1f41aac>
 801632c:	7973610a 	ldmdbvc	r3!, {r1, r3, r8, sp, lr}^
 8016330:	6620636e 	strtvs	r6, [r0], -lr, ror #6
 8016334:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 8016338:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 801633c:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 8016340:	69447265 	stmdbvs	r4, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8016344:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 8016348:	2879726f 	ldmdacs	r9!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
 801634c:	0a7b2029 	beq	9ede3f8 <__exidx_end+0x1ec7288>
 8016350:	6c090909 			; <UNDEFINED> instruction: 0x6c090909
 8016354:	64207465 	strtvs	r7, [r0], #-1125	; 0xfffffb9b
 8016358:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
 801635c:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8016360:	6177613d 	cmnvs	r7, sp, lsr r1
 8016364:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8016368:	534a7465 	movtpl	r7, #42085	; 0xa465
 801636c:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8016370:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8016374:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8016378:	3b292779 	blcc	8a60164 <__exidx_end+0xa48ff4>
 801637c:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8016380:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8016384:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8016388:	0a22223d 	beq	889ec84 <__exidx_end+0x887b14>
 801638c:	6c090909 			; <UNDEFINED> instruction: 0x6c090909
 8016390:	66207465 	strtvs	r7, [r0], -r5, ror #8
 8016394:	6e656c69 	cdpvs	12, 6, cr6, cr5, cr9, {3}
 8016398:	73656d61 	cmnvc	r5, #6208	; 0x1840
 801639c:	6a624f3d 	bvs	98aa098 <__exidx_end+0x1892f28>
 80163a0:	2e746365 	cdpcs	3, 7, cr6, cr4, cr5, {3}
 80163a4:	7379656b 	cmnvc	r9, #448790528	; 0x1ac00000
 80163a8:	72696428 	rsbvc	r6, r9, #40, 8	; 0x28000000
 80163ac:	6f746365 	svcvs	0x00746365
 80163b0:	225b7972 	subscs	r7, fp, #1867776	; 0x1c8000
 80163b4:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 80163b8:	295d2273 	ldmdbcs	sp, {r0, r1, r4, r5, r6, r9, sp}^
 80163bc:	09090a3b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r9, fp}
 80163c0:	6c696609 	stclvs	6, cr6, [r9], #-36	; 0xffffffdc
 80163c4:	6d616e65 	stclvs	14, cr6, [r1, #-404]!	; 0xfffffe6c
 80163c8:	662e7365 	strtvs	r7, [lr], -r5, ror #6
 80163cc:	6145726f 	cmpvs	r5, pc, ror #4
 80163d0:	66286863 	strtvs	r6, [r8], -r3, ror #16
 80163d4:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 80163d8:	286e6f69 	stmdacs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 80163dc:	2979656b 	ldmdbcs	r9!, {r0, r1, r3, r5, r6, r8, sl, sp, lr}^
 80163e0:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 80163e4:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 80163e8:	20726176 	rsbscs	r6, r2, r6, ror r1
 80163ec:	756c6176 	strbvc	r6, [ip, #-374]!	; 0xfffffe8a
 80163f0:	203d2065 	eorscs	r2, sp, r5, rrx
 80163f4:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 80163f8:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 80163fc:	66225b79 			; <UNDEFINED> instruction: 0x66225b79
 8016400:	73656c69 	cmnvc	r5, #26880	; 0x6900
 8016404:	6b5b5d22 	blvs	96ed894 <__exidx_end+0x16d6724>
 8016408:	3b5d7965 	blcc	97749a4 <__exidx_end+0x175d834>
 801640c:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8016410:	74680909 	strbtvc	r0, [r8], #-2313	; 0xfffff6f7
 8016414:	3d2b6c6d 	stccc	12, cr6, [fp, #-436]!	; 0xfffffe4c
 8016418:	706f3c22 	rsbvc	r3, pc, r2, lsr #24
 801641c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8016420:	6c617620 	stclvs	6, cr7, [r1], #-128	; 0xffffff80
 8016424:	223d6575 	eorscs	r6, sp, #490733568	; 0x1d400000
 8016428:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 801642c:	223e222b 	eorscs	r2, lr, #-1342177278	; 0xb0000002
 8016430:	6c61762b 	stclvs	6, cr7, [r1], #-172	; 0xffffff54
 8016434:	222b6575 	eorcs	r6, fp, #490733568	; 0x1d400000
 8016438:	706f2f3c 	rsbvc	r2, pc, ip, lsr pc	; <UNPREDICTABLE>
 801643c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8016440:	0a3b223e 	beq	8eded40 <__exidx_end+0xec7bd0>
 8016444:	7d090909 	vstrvc.16	s0, [r9, #-18]	; 0xffffffee	; <UNPREDICTABLE>
 8016448:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 801644c:	6f640909 	svcvs	0x00640909
 8016450:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 8016454:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 8016458:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
 801645c:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 8016460:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 8016464:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 8016468:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
 801646c:	6f746365 	svcvs	0x00746365
 8016470:	29227972 	stmdbcs	r2!, {r1, r4, r5, r6, r8, fp, ip, sp, lr}
 8016474:	6e6e692e 	vmulvs.f16	s13, s28, s29	; <UNPREDICTABLE>
 8016478:	54487265 	strbpl	r7, [r8], #-613	; 0xfffffd9b
 801647c:	683d4c4d 	ldmdavs	sp!, {r0, r2, r3, r6, sl, fp, lr}
 8016480:	3b6c6d74 	blcc	9b31a58 <__exidx_end+0x1b1a8e8>
 8016484:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8016488:	5f746567 	svcpl	0x00746567
 801648c:	28747874 	ldmdacs	r4!, {r2, r4, r5, r6, fp, ip, sp, lr}^
 8016490:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8016494:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 8016498:	5d305b73 	fldmdbxpl	r0!, {d5-d61}	;@ Deprecated
 801649c:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
 80164a0:	73610a0a 	cmnvc	r1, #40960	; 0xa000
 80164a4:	20636e79 	rsbcs	r6, r3, r9, ror lr
 80164a8:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 80164ac:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 80164b0:	6e657220 	cdpvs	2, 6, cr7, cr5, cr0, {1}
 80164b4:	56726564 	ldrbtpl	r6, [r2], -r4, ror #10
 80164b8:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 80164bc:	29286e6f 	stmdbcs	r8!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
 80164c0:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 80164c4:	74656c09 	strbtvc	r6, [r5], #-3081	; 0xfffff3f7
 80164c8:	72657620 	rsbvc	r7, r5, #32, 12	; 0x2000000
 80164cc:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 80164d0:	6177613d 	cmnvs	r7, sp, lsr r1
 80164d4:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 80164d8:	534a7465 	movtpl	r7, #42085	; 0xa465
 80164dc:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 80164e0:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 80164e4:	276e6f69 	strbcs	r6, [lr, -r9, ror #30]!
 80164e8:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 80164ec:	636f6409 	cmnvs	pc, #150994944	; 0x9000000
 80164f0:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
 80164f4:	65672e74 	strbvs	r2, [r7, #-3700]!	; 0xfffff18c
 80164f8:	656c4574 	strbvs	r4, [ip, #-1396]!	; 0xfffffa8c
 80164fc:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
 8016500:	64497942 	strbvs	r7, [r9], #-2370	; 0xfffff6be
 8016504:	64692228 	strbtvs	r2, [r9], #-552	; 0xfffffdd8
 8016508:	73726556 	cmnvc	r2, #360710144	; 0x15800000
 801650c:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 8016510:	6e692e29 	cdpvs	14, 6, cr2, cr9, cr9, {1}
 8016514:	4872656e 	ldmdami	r2!, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^
 8016518:	3d4c4d54 	stclcc	13, cr4, [ip, #-336]	; 0xfffffeb0
 801651c:	696c3c22 	stmdbvs	ip!, {r1, r5, sl, fp, ip, sp}^
 8016520:	2b22563e 	blcs	88abe20 <__exidx_end+0x894cb0>
 8016524:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8016528:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 801652c:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8016530:	2b6e6f69 	blcs	9bb22dc <__exidx_end+0x1b9b16c>
 8016534:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 80164b4 <index_js+0x30c>
 8016538:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 801653c:	2b223e69 	blcs	88a5ee8 <__exidx_end+0x88ed78>
 8016540:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8016544:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 8016548:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
 801654c:	61642e64 	cmnvs	r4, r4, ror #28
 8016550:	222b6574 	eorcs	r6, fp, #116, 10	; 0x1d000000
 8016554:	696c2f3c 	stmdbvs	ip!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 8016558:	696c3c3e 	stmdbvs	ip!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}^
 801655c:	762b223e 			; <UNDEFINED> instruction: 0x762b223e
 8016560:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8016564:	622e6e6f 	eorvs	r6, lr, #1776	; 0x6f0
 8016568:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
 801656c:	6d69742e 	cfstrdvs	mvd7, [r9, #-184]!	; 0xffffff48
 8016570:	3c222b65 			; <UNDEFINED> instruction: 0x3c222b65
 8016574:	3e696c2f 	cdpcc	12, 6, cr6, cr9, cr15, {1}
 8016578:	3e696c3c 	mcrcc	12, 3, r6, cr9, cr12, {1}
 801657c:	65762b22 	ldrbvs	r2, [r6, #-2850]!	; 0xfffff4de
 8016580:	6f697372 	svcvs	0x00697372
 8016584:	6f622e6e 	svcvs	0x00622e6e
 8016588:	2b647261 	blcs	9932f14 <__exidx_end+0x191bda4>
 801658c:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 801650c <index_js+0x364>
 8016590:	3b223e69 	blcc	88a5f3c <__exidx_end+0x88edcc>
 8016594:	0a0a7d0a 	beq	82b59c4 <__exidx_end+0x29e854>
 8016598:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 801659c:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 80165a0:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 80165a4:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 80165a8:	745f7465 	ldrbvc	r7, [pc], #-1125	; 80165b0 <index_js+0x408>
 80165ac:	73287478 			; <UNDEFINED> instruction: 0x73287478
 80165b0:	20296c65 	eorcs	r6, r9, r5, ror #24
 80165b4:	6c090a7b 			; <UNDEFINED> instruction: 0x6c090a7b
 80165b8:	74207465 	strtvc	r7, [r0], #-1125	; 0xfffffb9b
 80165bc:	613d7478 	teqvs	sp, r8, ror r4
 80165c0:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 80165c4:	74656720 	strbtvc	r6, [r5], #-1824	; 0xfffff8e0
 80165c8:	4e4f534a 	cdpmi	3, 4, cr5, cr15, cr10, {2}
 80165cc:	6c657328 	stclvs	3, cr7, [r5], #-160	; 0xffffff60
 80165d0:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 80165d4:	2074656c 	rsbscs	r6, r4, ip, ror #10
 80165d8:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 80165dc:	3b22223d 	blcc	889eed8 <__exidx_end+0x887d68>
 80165e0:	624f090a 	subvs	r0, pc, #163840	; 0x28000
 80165e4:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
 80165e8:	79656b2e 	stmdbvc	r5!, {r1, r2, r3, r5, r8, r9, fp, sp, lr}^
 80165ec:	78742873 	ldmdavc	r4!, {r0, r1, r4, r5, r6, fp, sp}^
 80165f0:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
 80165f4:	2e295d6c 	cdpcs	13, 2, cr5, cr9, cr12, {3}
 80165f8:	45726f66 	ldrbmi	r6, [r2, #-3942]!	; 0xfffff09a
 80165fc:	28686361 	stmdacs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
 8016600:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 8016604:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8016608:	79656b28 	stmdbvc	r5!, {r3, r5, r8, r9, fp, sp, lr}^
 801660c:	0a7b2029 	beq	9ede6b8 <__exidx_end+0x1ec7548>
 8016610:	61760909 	cmnvs	r6, r9, lsl #18
 8016614:	61762072 	cmnvs	r6, r2, ror r0
 8016618:	2065756c 	rsbcs	r7, r5, ip, ror #10
 801661c:	7874203d 	ldmdavc	r4!, {r0, r2, r3, r4, r5, sp}^
 8016620:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
 8016624:	6b5b5d6c 	blvs	96edbdc <__exidx_end+0x16d6a6c>
 8016628:	3b5d7965 	blcc	9774bc4 <__exidx_end+0x175da54>
 801662c:	2009090a 	andcs	r0, r9, sl, lsl #18
 8016630:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8016634:	3c223d2b 	stccc	13, cr3, [r2], #-172	; 0xffffff54
 8016638:	3c3e7274 	lfmcc	f7, 4, [lr], #-464	; 0xfffffe30
 801663c:	223e6474 	eorscs	r6, lr, #116, 8	; 0x74000000
 8016640:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 8016644:	2f3c222b 	svccs	0x003c222b
 8016648:	3c3e6474 	cfldrscc	mvf6, [lr], #-464	; 0xfffffe30
 801664c:	223e6474 	eorscs	r6, lr, #116, 8	; 0x74000000
 8016650:	6c61762b 	stclvs	6, cr7, [r1], #-172	; 0xffffff54
 8016654:	222b6575 	eorcs	r6, fp, #490733568	; 0x1d400000
 8016658:	64742f3c 	ldrbtvs	r2, [r4], #-3900	; 0xfffff0c4
 801665c:	742f3c3e 	strtvc	r3, [pc], #-3134	; 8016664 <index_js+0x4bc>
 8016660:	3b223e72 	blcc	88a6030 <__exidx_end+0x88eec0>
 8016664:	297d090a 	ldmdbcs	sp!, {r1, r3, r8, fp}^
 8016668:	64090a3b 	strvs	r0, [r9], #-2619	; 0xfffff5c5
 801666c:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
 8016670:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 8016674:	45746567 	ldrbmi	r6, [r4, #-1383]!	; 0xfffffa99
 8016678:	656d656c 	strbvs	r6, [sp, #-1388]!	; 0xfffffa94
 801667c:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
 8016680:	22286449 	eorcs	r6, r8, #1224736768	; 0x49000000
 8016684:	78546469 	ldmdavc	r4, {r0, r3, r5, r6, sl, sp, lr}^
 8016688:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 801668c:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
 8016690:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
 8016694:	74683d4c 	strbtvc	r3, [r8], #-3404	; 0xfffff2b4
 8016698:	0a3b6c6d 	beq	8ef1854 <__exidx_end+0xeda6e4>
 801669c:	720a0a7d 	andvc	r0, sl, #512000	; 0x7d000
 80166a0:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 80166a4:	73694c72 	cmnvc	r9, #29184	; 0x7200
 80166a8:	3b292874 	blcc	8a60880 <__exidx_end+0xa49710>
 80166ac:	6e65720a 	cdpvs	2, 6, cr7, cr5, cr10, {0}
 80166b0:	44726564 	ldrbtmi	r6, [r2], #-1380	; 0xfffffa9c
 80166b4:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
 80166b8:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 80166bc:	0a3b2928 	beq	8ee0b64 <__exidx_end+0xec99f4>
 80166c0:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 80166c4:	65567265 	ldrbvs	r7, [r6, #-613]	; 0xfffffd9b
 80166c8:	6f697372 	svcvs	0x00697372
 80166cc:	3b29286e 	blcc	8a6088c <__exidx_end+0xa4971c>
 80166d0:	0000000a 	andeq	r0, r0, sl

080166d4 <s_aStorSize>:
 80166d4:	00000060 	andeq	r0, r0, r0, rrx
 80166d8:	00000090 	muleq	r0, r0, r0
 80166dc:	00000020 	andeq	r0, r0, r0, lsr #32
 80166e0:	00000040 	andeq	r0, r0, r0, asr #32
 80166e4:	00000060 	andeq	r0, r0, r0, rrx
 80166e8:	00000040 	andeq	r0, r0, r0, asr #32
 80166ec:	00000020 	andeq	r0, r0, r0, lsr #32
 80166f0:	00000020 	andeq	r0, r0, r0, lsr #32
 80166f4:	000001e0 	andeq	r0, r0, r0, ror #3
 80166f8:	00000040 	andeq	r0, r0, r0, asr #32
 80166fc:	00000020 	andeq	r0, r0, r0, lsr #32
 8016700:	00000060 	andeq	r0, r0, r0, rrx
 8016704:	00000030 	andeq	r0, r0, r0, lsr r0
 8016708:	00000020 	andeq	r0, r0, r0, lsr #32
 801670c:	000003b0 			; <UNDEFINED> instruction: 0x000003b0
 8016710:	00000030 	andeq	r0, r0, r0, lsr r0
 8016714:	00000040 	andeq	r0, r0, r0, asr #32
 8016718:	00000020 	andeq	r0, r0, r0, lsr #32
 801671c:	00000060 	andeq	r0, r0, r0, rrx
 8016720:	00000020 	andeq	r0, r0, r0, lsr #32
 8016724:	00000400 	andeq	r0, r0, r0, lsl #8
 8016728:	00000020 	andeq	r0, r0, r0, lsr #32
 801672c:	00000020 	andeq	r0, r0, r0, lsr #32
 8016730:	00000040 	andeq	r0, r0, r0, asr #32
 8016734:	00000060 	andeq	r0, r0, r0, rrx
 8016738:	00000020 	andeq	r0, r0, r0, lsr #32
 801673c:	00000020 	andeq	r0, r0, r0, lsr #32
 8016740:	00000020 	andeq	r0, r0, r0, lsr #32

08016744 <vtable for StoreDisplayUdf>:
	...
 801674c:	0800ea9d 	stmdaeq	r0, {r0, r2, r3, r4, r7, r9, fp, sp, lr, pc}
 8016750:	0800eae5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r9, fp, sp, lr, pc}
 8016754:	0800eac1 	stmdaeq	r0, {r0, r6, r7, r9, fp, sp, lr, pc}
 8016758:	0800eaa1 	stmdaeq	r0, {r0, r5, r7, r9, fp, sp, lr, pc}

0801675c <vtable for StoreDmxSend>:
	...
 8016764:	0800eb05 	stmdaeq	r0, {r0, r2, r8, r9, fp, sp, lr, pc}
 8016768:	0800eb4d 	stmdaeq	r0, {r0, r2, r3, r6, r8, r9, fp, sp, lr, pc}
 801676c:	0800eb29 	stmdaeq	r0, {r0, r3, r5, r8, r9, fp, sp, lr, pc}
 8016770:	0800eb09 	stmdaeq	r0, {r0, r3, r8, r9, fp, sp, lr, pc}

08016774 <vtable for StoreE131>:
	...
 801677c:	0800eb6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r8, r9, fp, sp, lr, pc}
 8016780:	0800ebb5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8, r9, fp, sp, lr, pc}
 8016784:	0800eb91 	stmdaeq	r0, {r0, r4, r7, r8, r9, fp, sp, lr, pc}
 8016788:	0800eb71 	stmdaeq	r0, {r0, r4, r5, r6, r8, r9, fp, sp, lr, pc}

0801678c <vtable for StoreNetwork>:
	...
 8016794:	0800ebd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp, sp, lr, pc}
 8016798:	0800ecb9 	stmdaeq	r0, {r0, r3, r4, r5, r7, sl, fp, sp, lr, pc}
 801679c:	0800ebdd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, fp, sp, lr, pc}
 80167a0:	0800eccd 	stmdaeq	r0, {r0, r2, r3, r6, r7, sl, fp, sp, lr, pc}
 80167a4:	0800ec5d 	stmdaeq	r0, {r0, r2, r3, r4, r6, sl, fp, sp, lr, pc}
 80167a8:	0800ec31 	stmdaeq	r0, {r0, r4, r5, sl, fp, sp, lr, pc}
 80167ac:	0800ec01 	stmdaeq	r0, {r0, sl, fp, sp, lr, pc}
 80167b0:	0800ec89 	stmdaeq	r0, {r0, r3, r7, sl, fp, sp, lr, pc}
 80167b4:	08008865 	stmdaeq	r0, {r0, r2, r5, r6, fp, pc}
 80167b8:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 80167bc:	00000000 	andeq	r0, r0, r0
 80167c0:	0800ebd7 	stmdaeq	r0, {r0, r1, r2, r4, r6, r7, r8, r9, fp, sp, lr, pc}
 80167c4:	0800ecc5 	stmdaeq	r0, {r0, r2, r6, r7, sl, fp, sp, lr, pc}
 80167c8:	0800ec81 	stmdaeq	r0, {r0, r7, sl, fp, sp, lr, pc}
 80167cc:	0800ec55 	stmdaeq	r0, {r0, r2, r4, r6, sl, fp, sp, lr, pc}
 80167d0:	0800ec29 	stmdaeq	r0, {r0, r3, r5, sl, fp, sp, lr, pc}
 80167d4:	0800ecb1 	stmdaeq	r0, {r0, r4, r5, r7, sl, fp, sp, lr, pc}
 80167d8:	0800888d 	stmdaeq	r0, {r0, r2, r3, r7, fp, pc}

080167dc <vtable for StoreRDMDevice>:
	...
 80167e4:	0800ed01 	stmdaeq	r0, {r0, r8, sl, fp, sp, lr, pc}
 80167e8:	0800ed71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp, sp, lr, pc}
 80167ec:	0800ed09 	stmdaeq	r0, {r0, r3, r8, sl, fp, sp, lr, pc}
 80167f0:	0800ed85 	stmdaeq	r0, {r0, r2, r7, r8, sl, fp, sp, lr, pc}
 80167f4:	0800ed2d 	stmdaeq	r0, {r0, r2, r3, r5, r8, sl, fp, sp, lr, pc}
 80167f8:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 80167fc:	00000000 	andeq	r0, r0, r0
 8016800:	0800ed03 	stmdaeq	r0, {r0, r1, r8, sl, fp, sp, lr, pc}
 8016804:	0800ed7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r8, sl, fp, sp, lr, pc}
 8016808:	0800ed69 	stmdaeq	r0, {r0, r3, r5, r6, r8, sl, fp, sp, lr, pc}

0801680c <vtable for StoreRemoteConfig>:
	...
 8016814:	0800edbd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, r8, sl, fp, sp, lr, pc}
 8016818:	0800ee05 	stmdaeq	r0, {r0, r2, r9, sl, fp, sp, lr, pc}
 801681c:	0800ede1 	stmdaeq	r0, {r0, r5, r6, r7, r8, sl, fp, sp, lr, pc}
 8016820:	0800edc1 	stmdaeq	r0, {r0, r6, r7, r8, sl, fp, sp, lr, pc}
 8016824:	3a434d46 	bcc	90e9d44 <__exidx_end+0x10d2bd4>
 8016828:	74654420 	strbtvc	r4, [r5], #-1056	; 0xfffffbe0
 801682c:	65746365 	ldrbvs	r6, [r4, #-869]!	; 0xfffffc9b
 8016830:	73252064 			; <UNDEFINED> instruction: 0x73252064
 8016834:	74697720 	strbtvc	r7, [r9], #-1824	; 0xfffff8e0
 8016838:	6f742068 	svcvs	0x00742068
 801683c:	206c6174 	rsbcs	r6, ip, r4, ror r1
 8016840:	62206425 	eorvs	r6, r0, #620756992	; 0x25000000
 8016844:	73657479 	cmnvc	r5, #2030043136	; 0x79000000
 8016848:	64255b20 	strtvs	r5, [r5], #-2848	; 0xfffff4e0
 801684c:	5d426b20 	vstrpl	d22, [r2, #-128]	; 0xffffff80
 8016850:	6374000a 	cmnvs	r4, #10
 8016854:	65625f70 	strbvs	r5, [r2, #-3952]!	; 0xfffff090
 8016858:	3a6e6967 	bcc	9bb0dfc <__exidx_end+0x1b99c8c>
 801685c:	6f6f7420 	svcvs	0x006f7420
 8016860:	6e616d20 	cdpvs	13, 6, cr6, cr1, cr0, {1}
 8016864:	6f632079 	svcvs	0x00632079
 8016868:	63656e6e 	cmnvs	r5, #1760	; 0x6e0
 801686c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8016870:	69620073 	stmdbvs	r2!, {r0, r1, r4, r5, r6}^
 8016874:	7500646e 	strvc	r6, [r0, #-1134]	; 0xfffffb92
 8016878:	6e69626e 	cdpvs	2, 6, cr6, cr9, cr14, {3}
 801687c:	41000a64 	tstmi	r0, r4, ror #20
 8016880:	6c205052 	stcvs	0, cr5, [r0], #-328	; 0xfffffeb8
 8016884:	756b6f6f 	strbvc	r6, [fp, #-3951]!	; 0xfffff091
 8016888:	61662070 	smcvs	25088	; 0x6200
 801688c:	64656c69 	strbtvs	r6, [r5], #-3177	; 0xfffff397
 8016890:	203e2d20 	eorscs	r2, lr, r0, lsr #26
 8016894:	61666564 	cmnvs	r6, r4, ror #10
 8016898:	20746c75 	rsbscs	r6, r4, r5, ror ip
 801689c:	65746167 	ldrbvs	r6, [r4, #-359]!	; 0xfffffe99
 80168a0:	0a796177 	beq	9e6ee84 <__exidx_end+0x1e57d14>
 80168a4:	50524100 	subspl	r4, r2, r0, lsl #2
 80168a8:	6f6f6c20 	svcvs	0x006f6c20
 80168ac:	2070756b 	rsbscs	r7, r0, fp, ror #10
 80168b0:	6c696166 	stfvse	f6, [r9], #-408	; 0xfffffe68
 80168b4:	000a6465 	andeq	r6, sl, r5, ror #8

080168b8 <NetworkConst::MSG_MDNS_CONFIG>:
 80168b8:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 80168bc:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 80168c0:	20676e69 	rsbcs	r6, r7, r9, ror #28
 80168c4:	534e444d 	movtpl	r4, #58445	; 0xe44d
	...

080168c9 <NetworkConst::MSG_NETWORK_INIT>:
 80168c9:	7774654e 	ldrbvc	r6, [r4, -lr, asr #10]!
 80168cd:	206b726f 	rsbcs	r7, fp, pc, ror #4
 80168d1:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
 80168d5:	696c6169 	stmdbvs	ip!, {r0, r3, r5, r6, r8, sp, lr}^
 80168d9:	6974617a 	ldmdbvs	r4!, {r1, r3, r4, r5, r6, r8, sp, lr}^
 80168dd:	32006e6f 	andcc	r6, r0, #1776	; 0x6f0
 80168e1:	302e3432 	eorcc	r3, lr, r2, lsr r4
 80168e5:	322e302e 	eorcc	r3, lr, #46	; 0x2e
 80168e9:	5f003135 	svcpl	0x00003135
 80168ed:	2e706374 	mrccs	3, 3, r6, cr0, cr4, {3}
 80168f1:	61636f6c 	cmnvs	r3, ip, ror #30
 80168f5:	735f006c 	cmpvc	pc, #108	; 0x6c
 80168f9:	69767265 	ldmdbvs	r6!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 80168fd:	2e736563 	cdpcs	5, 7, cr6, cr3, cr3, {3}
 8016901:	736e645f 	cmnvc	lr, #1593835520	; 0x5f000000
 8016905:	2e64732d 	cdpcs	3, 6, cr7, cr4, cr13, {1}
 8016909:	7064755f 	rsbvc	r7, r4, pc, asr r5
 801690d:	636f6c2e 	cmnvs	pc, #11776	; 0x2e00
 8016911:	6d006c61 	stcvs	12, cr6, [r0, #-388]	; 0xfffffe7c
 8016915:	0a534e44 	beq	94ea22d <__exidx_end+0x14d30bd>
 8016919:	6f4e2000 	svcvs	0x004e2000
 801691d:	75722074 	ldrbvc	r2, [r2, #-116]!	; 0xffffff8c
 8016921:	6e696e6e 	cdpvs	14, 6, cr6, cr9, cr14, {3}
 8016925:	20000a67 	andcs	r0, r0, r7, ror #20
 8016929:	656d614e 	strbvs	r6, [sp, #-334]!	; 0xfffffeb2
 801692d:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8016931:	20000a73 	andcs	r0, r0, r3, ror sl
 8016935:	25207325 	strcs	r7, [r0, #-805]!	; 0xfffffcdb
 8016939:	73252064 			; <UNDEFINED> instruction: 0x73252064
 801693d:	7465000a 	strbtvc	r0, [r5], #-10
 8016941:	67003068 	strvs	r3, [r0, -r8, rrx]
 8016945:	64616769 	strbtvs	r6, [r1], #-1897	; 0xfffff897
 8016949:	63697665 	cmnvs	r9, #105906176	; 0x6500000
 801694d:	4e005f65 	cdpmi	15, 0, cr5, cr0, cr5, {3}
 8016951:	6f777465 	svcvs	0x00777465
 8016955:	000a6b72 	andeq	r6, sl, r2, ror fp
 8016959:	736f4820 	cmnvc	pc, #32, 16	; 0x200000
 801695d:	6d616e74 	stclvs	14, cr6, [r1, #-464]!	; 0xfffffe30
 8016961:	3a202065 	bcc	881eafd <__exidx_end+0x80798d>
 8016965:	0a732520 	beq	9cdfded <__exidx_end+0x1cc8c7d>
 8016969:	66492000 	strbvs	r2, [r9], -r0
 801696d:	656d614e 	strbvs	r6, [sp, #-334]!	; 0xfffffeb2
 8016971:	20202020 	eorcs	r2, r0, r0, lsr #32
 8016975:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8016979:	7325203a 			; <UNDEFINED> instruction: 0x7325203a
 801697d:	4920000a 	stmdbmi	r0!, {r1, r3}
 8016981:	2074656e 	rsbscs	r6, r4, lr, ror #10
 8016985:	20202020 	eorcs	r2, r0, r0, lsr #32
 8016989:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 801698d:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8016991:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8016995:	252f6425 	strcs	r6, [pc, #-1061]!	; 8016578 <index_js+0x3d0>
 8016999:	20000a64 	andcs	r0, r0, r4, ror #20
 801699d:	6d74654e 	cfldr64vs	mvdx6, [r4, #-312]!	; 0xfffffec8
 80169a1:	206b7361 	rsbcs	r7, fp, r1, ror #6
 80169a5:	203a2020 	eorscs	r2, sl, r0, lsr #32
 80169a9:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80169ad:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80169b1:	0a64252e 	beq	991fe71 <__exidx_end+0x1908d01>
 80169b5:	61472000 	mrsvs	r2, (UNDEF: 71)
 80169b9:	61776574 	cmnvs	r7, r4, ror r5
 80169bd:	20202079 	eorcs	r2, r0, r9, ror r0
 80169c1:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 80169c5:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 80169c9:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80169cd:	20000a64 	andcs	r0, r0, r4, ror #20
 80169d1:	616f7242 	cmnvs	pc, r2, asr #4
 80169d5:	73616364 	cmnvc	r1, #100, 6	; 0x90000001
 80169d9:	203a2074 	eorscs	r2, sl, r4, ror r0
 80169dd:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80169e1:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80169e5:	0a64252e 	beq	991fea5 <__exidx_end+0x1908d35>
 80169e9:	614d2000 	mrsvs	r2, (UNDEF: 77)
 80169ed:	20202063 	eorcs	r2, r0, r3, rrx
 80169f1:	20202020 	eorcs	r2, r0, r0, lsr #32
 80169f5:	2e25203a 	mcrcs	0, 1, r2, cr5, cr10, {1}
 80169f9:	253a7832 	ldrcs	r7, [sl, #-2098]!	; 0xfffff7ce
 80169fd:	3a78322e 	bcc	9e232bd <__exidx_end+0x1e0c14d>
 8016a01:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8016a05:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 8016a09:	2e253a78 			; <UNDEFINED> instruction: 0x2e253a78
 8016a0d:	253a7832 	ldrcs	r7, [sl, #-2098]!	; 0xfffff7ce
 8016a11:	0a78322e 	beq	9e232d1 <__exidx_end+0x1e0c161>
 8016a15:	6f4d2000 	svcvs	0x004d2000
 8016a19:	20206564 	eorcs	r6, r0, r4, ror #10
 8016a1d:	20202020 	eorcs	r2, r0, r0, lsr #32
 8016a21:	6325203a 			; <UNDEFINED> instruction: 0x6325203a
 8016a25:	7453000a 	ldrbvc	r0, [r3], #-10
 8016a29:	63697461 	cmnvs	r9, #1627389952	; 0x61000000
 8016a2d:	00504920 	subseq	r4, r0, r0, lsr #18
 8016a31:	2050544e 	subscs	r5, r0, lr, asr #8
 8016a35:	76726553 			; <UNDEFINED> instruction: 0x76726553
 8016a39:	22007265 	andcs	r7, r0, #1342177286	; 0x50000006
 8016a3d:	3a227325 	bcc	88b36d9 <__exidx_end+0x89c569>
 8016a41:	662a2e25 	strtvs	r2, [sl], -r5, lsr #28
 8016a45:	2523002c 	strcs	r0, [r3, #-44]!	; 0xffffffd4
 8016a49:	2e253d73 	mcrcs	13, 1, r3, cr5, cr3, {3}
 8016a4d:	000a662a 	andeq	r6, sl, sl, lsr #12

08016a51 <NetworkParamsConst::IP_ADDRESS>:
 8016a51:	615f7069 	cmpvs	pc, r9, rrx
 8016a55:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0xfffffb9c
 8016a59:	 	mcrvs	3, 0, r7, cr0, cr3, {3}

08016a5c <NetworkParamsConst::NTP_SERVER>:
 8016a5c:	5f70746e 	svcpl	0x0070746e
 8016a60:	76726573 			; <UNDEFINED> instruction: 0x76726573
 8016a64:	 	cdpvs	2, 0, cr7, cr0, cr5, {3}

08016a67 <NetworkParamsConst::NTP_UTC_OFFSET>:
 8016a67:	5f70746e 	svcpl	0x0070746e
 8016a6b:	5f637475 	svcpl	0x00637475
 8016a6f:	7366666f 	cmnvc	r6, #116391936	; 0x6f00000
 8016a73:	 	strvs	r7, [r0], #-1125	; 0xfffffb9b

08016a76 <NetworkParamsConst::DEFAULT_GATEWAY>:
 8016a76:	61666564 	cmnvs	r6, r4, ror #10
 8016a7a:	5f746c75 	svcpl	0x00746c75
 8016a7e:	65746167 	ldrbvs	r6, [r4, #-359]!	; 0xfffffe99
 8016a82:	00796177 	rsbseq	r6, r9, r7, ror r1

08016a86 <NetworkParamsConst::DHCP_RETRY_TIME>:
 8016a86:	70636864 	rsbvc	r6, r3, r4, ror #16
 8016a8a:	7465725f 	strbtvc	r7, [r5], #-607	; 0xfffffda1
 8016a8e:	745f7972 	ldrbvc	r7, [pc], #-2418	; 8016a96 <NetworkParamsConst::HOSTNAME>
 8016a92:	00656d69 	rsbeq	r6, r5, r9, ror #26

08016a96 <NetworkParamsConst::HOSTNAME>:
 8016a96:	74736f68 	ldrbtvc	r6, [r3], #-3944	; 0xfffff098
 8016a9a:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

08016a9f <NetworkParamsConst::NET_MASK>:
 8016a9f:	5f74656e 	svcpl	0x0074656e
 8016aa3:	6b73616d 	blvs	9cef05f <__exidx_end+0x1cd7eef>
	...

08016aa8 <NetworkParamsConst::USE_DHCP>:
 8016aa8:	5f657375 	svcpl	0x00657375
 8016aac:	70636864 	rsbvc	r6, r3, r4, ror #16
	...

08016ab1 <NetworkParamsConst::FILE_NAME>:
 8016ab1:	7774656e 	ldrbvc	r6, [r4, -lr, ror #10]!
 8016ab5:	2e6b726f 	cdpcs	2, 6, cr7, cr11, cr15, {3}
 8016ab9:	00747874 	rsbseq	r7, r4, r4, ror r8
 8016abd:	65687445 	strbvs	r7, [r8, #-1093]!	; 0xfffffbbb
 8016ac1:	74656e72 	strbtvc	r6, [r5], #-3698	; 0xfffff18e
 8016ac5:	61747320 	cmnvs	r4, r0, lsr #6
 8016ac9:	25007472 	strcs	r7, [r0, #-1138]	; 0xfffffb8e
 8016acd:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8016ad1:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8016ad5:	252f6425 	strcs	r6, [pc, #-1061]!	; 80166b8 <index_js+0x510>
 8016ad9:	63252064 			; <UNDEFINED> instruction: 0x63252064
 8016add:	203a4e00 	eorscs	r4, sl, r0, lsl #28
 8016ae1:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8016ae5:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8016ae9:	0064252e 	rsbeq	r2, r4, lr, lsr #10
 8016aed:	25203a47 	strcs	r3, [r0, #-2631]!	; 0xfffff5b9
 8016af1:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8016af5:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8016af9:	46006425 	strmi	r6, [r0], -r5, lsr #8
 8016afd:	776d7269 	strbvc	r7, [sp, -r9, ror #4]!
 8016b01:	20657261 	rsbcs	r7, r5, r1, ror #4
 8016b05:	2a2e2556 	bcs	8ba0065 <__exidx_end+0xb88ef5>
 8016b09:	48440073 	stmdami	r4, {r0, r1, r4, r5, r6}^
 8016b0d:	72205043 	eorvc	r5, r0, #67	; 0x43
 8016b11:	77656e65 	strbvc	r6, [r5, -r5, ror #28]!
 8016b15:	00676e69 	rsbeq	r6, r7, r9, ror #28
 8016b19:	50434844 	subpl	r4, r3, r4, asr #16
 8016b1d:	74657220 	strbtvc	r7, [r5], #-544	; 0xfffffde0
 8016b21:	6e697972 			; <UNDEFINED> instruction: 0x6e697972
 8016b25:	654e0067 	strbvs	r0, [lr, #-103]	; 0xffffff99
 8016b29:	726f7774 	rsbvc	r7, pc, #116, 14	; 0x1d00000
 8016b2d:	6873206b 	ldmdavs	r3!, {r0, r1, r3, r5, r6, sp}^
 8016b31:	6f647475 	svcvs	0x00647475
 8016b35:	 	stcgt	14, cr6, [r0], {119}	; 0x77

08016b38 <pArray>:
 8016b38:	08016bcc 	stmdaeq	r1, {r2, r3, r6, r7, r8, r9, fp, sp, lr}
 8016b3c:	08016b88 	stmdaeq	r1, {r3, r7, r8, r9, fp, sp, lr}
 8016b40:	08016a51 	stmdaeq	r1, {r0, r4, r6, r9, fp, sp, lr}
 8016b44:	08016bd2 	stmdaeq	r1, {r1, r4, r6, r7, r8, r9, fp, sp, lr}
 8016b48:	08016cde 	stmdaeq	r1, {r1, r2, r3, r4, r6, r7, sl, fp, sp, lr}
 8016b4c:	08016b93 	stmdaeq	r1, {r0, r1, r4, r7, r8, r9, fp, sp, lr}
 8016b50:	08015c57 	stmdaeq	r1, {r0, r1, r2, r4, r6, sl, fp, ip, lr}
 8016b54:	08016a96 	stmdaeq	r1, {r1, r2, r4, r7, r9, fp, sp, lr}
 8016b58:	08016c44 	stmdaeq	r1, {r2, r6, sl, fp, sp, lr}
 8016b5c:	08016c54 	stmdaeq	r1, {r2, r4, r6, sl, fp, sp, lr}
 8016b60:	08016c64 	stmdaeq	r1, {r2, r5, r6, sl, fp, sp, lr}
 8016b64:	08016c74 	stmdaeq	r1, {r2, r4, r5, r6, sl, fp, sp, lr}
 8016b68:	08016a9f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r7, r9, fp, sp, lr}
 8016b6c:	08016ccc 	stmdaeq	r1, {r2, r3, r6, r7, sl, fp, sp, lr}
 8016b70:	08015c57 	stmdaeq	r1, {r0, r1, r2, r4, r6, sl, fp, ip, lr}
 8016b74:	08015c57 	stmdaeq	r1, {r0, r1, r2, r4, r6, sl, fp, ip, lr}
 8016b78:	08015c57 	stmdaeq	r1, {r0, r1, r2, r4, r6, sl, fp, ip, lr}
 8016b7c:	08015c57 	stmdaeq	r1, {r0, r1, r2, r4, r6, sl, fp, ip, lr}
 8016b80:	08016a76 	stmdaeq	r1, {r1, r2, r4, r5, r6, r9, fp, sp, lr}
 8016b84:	08016ba0 	stmdaeq	r1, {r5, r7, r8, r9, fp, sp, lr}

08016b88 <DisplayUdfParamsConst::BOARD_NAME>:
 8016b88:	72616f62 	rsbvc	r6, r1, #392	; 0x188
 8016b8c:	616e5f64 	cmnvs	lr, r4, ror #30
 8016b90:	 	tstvs	r0, sp, ror #10

08016b93 <DisplayUdfParamsConst::ACTIVE_PORTS>:
 8016b93:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 8016b97:	705f6576 	subsvc	r6, pc, r6, ror r5	; <UNPREDICTABLE>
 8016b9b:	7374726f 	cmnvc	r4, #-268435450	; 0xf0000006
	...

08016ba0 <DisplayUdfParamsConst::DMX_DIRECTION>:
 8016ba0:	5f786d64 	svcpl	0x00786d64
 8016ba4:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8016ba8:	6f697463 	svcvs	0x00697463
 8016bac:	 	ldclvs	0, cr0, [r3], #-440	; 0xfffffe48

08016bae <DisplayUdfParamsConst::SLEEP_TIMEOUT>:
 8016bae:	65656c73 	strbvs	r6, [r5, #-3187]!	; 0xfffff38d
 8016bb2:	69745f70 	ldmdbvs	r4!, {r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 8016bb6:	756f656d 	strbvc	r6, [pc, #-1389]!	; 8016651 <index_js+0x4a9>
 8016bba:	 	stclvs	0, cr0, [r6], #-464	; 0xfffffe30

08016bbc <DisplayUdfParamsConst::FLIP_VERTICALLY>:
 8016bbc:	70696c66 	rsbvc	r6, r9, r6, ror #24
 8016bc0:	7265765f 	rsbvc	r7, r5, #99614720	; 0x5f00000
 8016bc4:	61636974 	smcvs	13972	; 0x3694
 8016bc8:	00796c6c 	rsbseq	r6, r9, ip, ror #24

08016bcc <DisplayUdfParamsConst::TITLE>:
 8016bcc:	6c746974 			; <UNDEFINED> instruction: 0x6c746974
 8016bd0:	 	ldrbvs	r0, [r6, #-101]!	; 0xffffff9b

08016bd2 <DisplayUdfParamsConst::VERSION>:
 8016bd2:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8016bd6:	006e6f69 	rsbeq	r6, lr, r9, ror #30

08016bda <DisplayUdfParamsConst::FILE_NAME>:
 8016bda:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8016bde:	2e79616c 	rpwcsez	f6, f1, #4.0
 8016be2:	00747874 	rsbseq	r7, r4, r4, ror r8

08016be6 <DisplayUdfParamsConst::INTENSITY>:
 8016be6:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
 8016bea:	7469736e 	strbtvc	r7, [r9], #-878	; 0xfffffc92
 8016bee:	50410079 	subpl	r0, r1, r9, ror r0
 8016bf2:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8016bf6:	726f5000 	rsbvc	r5, pc, #0
 8016bfa:	63252074 			; <UNDEFINED> instruction: 0x63252074
 8016bfe:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8016c02:	00732520 	rsbseq	r2, r3, r0, lsr #10
 8016c06:	44206f4e 	strtmi	r6, [r0], #-3918	; 0xfffff0b2
 8016c0a:	4400584d 	strmi	r5, [r0], #-2125	; 0xfffff7b3
 8016c0e:	2520584d 	strcs	r5, [r0, #-2125]!	; 0xfffff7b3
 8016c12:	64252073 	strtvs	r2, [r5], #-115	; 0xffffff8d
 8016c16:	73252200 			; <UNDEFINED> instruction: 0x73252200
 8016c1a:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8016c1e:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8016c22:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8016c26:	2c226425 	cfstrscs	mvf6, [r2], #-148	; 0xffffff6c
 8016c2a:	73252300 			; <UNDEFINED> instruction: 0x73252300
 8016c2e:	2e64253d 	mcrcs	5, 3, r2, cr4, cr13, {1}
 8016c32:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8016c36:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8016c3a:	2023000a 	eorcs	r0, r3, sl
 8016c3e:	23207325 			; <UNDEFINED> instruction: 0x23207325
 8016c42:	 	cdpvs	0, 7, cr0, cr5, cr10, {0}

08016c44 <LightSetParamsConst::UNIVERSE_PORT>:
 8016c44:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 8016c48:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8016c4c:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8016c50:	00615f74 	rsbeq	r5, r1, r4, ror pc
 8016c54:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 8016c58:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8016c5c:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8016c60:	00625f74 	rsbeq	r5, r2, r4, ror pc
 8016c64:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 8016c68:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8016c6c:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8016c70:	00635f74 	rsbeq	r5, r3, r4, ror pc
 8016c74:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 8016c78:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8016c7c:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8016c80:	00645f74 	rsbeq	r5, r4, r4, ror pc

08016c84 <LightSetParamsConst::MERGE_MODE_PORT>:
 8016c84:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 8016c88:	6f6d5f65 	svcvs	0x006d5f65
 8016c8c:	705f6564 	subsvc	r6, pc, r4, ror #10
 8016c90:	5f74726f 	svcpl	0x0074726f
 8016c94:	656d0061 	strbvs	r0, [sp, #-97]!	; 0xffffff9f
 8016c98:	5f656772 	svcpl	0x00656772
 8016c9c:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
 8016ca0:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8016ca4:	00625f74 	rsbeq	r5, r2, r4, ror pc
 8016ca8:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 8016cac:	6f6d5f65 	svcvs	0x006d5f65
 8016cb0:	705f6564 	subsvc	r6, pc, r4, ror #10
 8016cb4:	5f74726f 	svcpl	0x0074726f
 8016cb8:	656d0063 	strbvs	r0, [sp, #-99]!	; 0xffffff9d
 8016cbc:	5f656772 	svcpl	0x00656772
 8016cc0:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
 8016cc4:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8016cc8:	00645f74 	rsbeq	r5, r4, r4, ror pc

08016ccc <LightSetParamsConst::DMX_START_ADDRESS>:
 8016ccc:	5f786d64 	svcpl	0x00786d64
 8016cd0:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8016cd4:	64615f74 	strbtvs	r5, [r1], #-3956	; 0xfffff08c
 8016cd8:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
 8016cdc:	 	mrcvs	0, 3, r0, cr5, cr3, {3}

08016cde <LightSetParamsConst::UNIVERSE>:
 8016cde:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 8016ce2:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
	...

08016ce7 <LightSetParamsConst::DIRECTION>:
 8016ce7:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8016ceb:	6f697463 	svcvs	0x00697463
 8016cef:	6f705f6e 	svcvs	0x00705f6e
 8016cf3:	615f7472 	cmpvs	pc, r2, ror r4	; <UNPREDICTABLE>
 8016cf7:	69640000 	stmdbvs	r4!, {}^	; <UNPREDICTABLE>
 8016cfb:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 8016cff:	5f6e6f69 	svcpl	0x006e6f69
 8016d03:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8016d07:	0000625f 	andeq	r6, r0, pc, asr r2
 8016d0b:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8016d0f:	6f697463 	svcvs	0x00697463
 8016d13:	6f705f6e 	svcvs	0x00705f6e
 8016d17:	635f7472 	cmpvs	pc, #1912602624	; 0x72000000
 8016d1b:	69640000 	stmdbvs	r4!, {}^	; <UNPREDICTABLE>
 8016d1f:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 8016d23:	5f6e6f69 	svcpl	0x006e6f69
 8016d27:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8016d2b:	0000645f 	andeq	r6, r0, pc, asr r4
 8016d2f:	64206f4e 	strtvs	r6, [r0], #-3918	; 0xfffff0b2
 8016d33:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
 8016d37:	66207961 	strtvs	r7, [r0], -r1, ror #18
 8016d3b:	646e756f 	strbtvs	r7, [lr], #-1391	; 0xfffffa91
 8016d3f:	31485300 	mrscc	r5, (UNDEF: 120)
 8016d43:	00363031 	eorseq	r3, r6, r1, lsr r0
 8016d47:	31445353 	cmpcc	r4, r3, asr r3
 8016d4b:	00363033 	eorseq	r3, r6, r3, lsr r0
 8016d4f:	28207325 	stmdacs	r0!, {r0, r2, r5, r8, r9, ip, sp, lr}
 8016d53:	252c6425 	strcs	r6, [ip, #-1061]!	; 0xfffffbdb
 8016d57:	000a2964 	andeq	r2, sl, r4, ror #18
 8016d5b:	aaeeaa40 	bge	7bc1663 <__stack_size+0x7bbee63>
 8016d5f:	000000ee 	andeq	r0, r0, lr, ror #1
	...

08016d64 <_OledFont8x6>:
 8016d64:	00000040 	andeq	r0, r0, r0, asr #32
 8016d68:	40000000 	andmi	r0, r0, r0
 8016d6c:	005f0000 	subseq	r0, pc, r0
 8016d70:	00400000 	subeq	r0, r0, r0
 8016d74:	00070007 	andeq	r0, r7, r7
 8016d78:	7f144000 	svcvc	0x00144000
 8016d7c:	00147f14 	andseq	r7, r4, r4, lsl pc
 8016d80:	7f2a2440 	svcvc	0x002a2440
 8016d84:	4000122a 	andmi	r1, r0, sl, lsr #4
 8016d88:	64081323 	strvs	r1, [r8], #-803	; 0xfffffcdd
 8016d8c:	36400062 	strbcc	r0, [r0], -r2, rrx
 8016d90:	50205649 	eorpl	r5, r0, r9, asr #12
 8016d94:	08004000 	stmdaeq	r0, {lr}
 8016d98:	00000307 	andeq	r0, r0, r7, lsl #6
 8016d9c:	221c0040 	andscs	r0, ip, #64	; 0x40
 8016da0:	40000041 	andmi	r0, r0, r1, asr #32
 8016da4:	1c224100 	stfnes	f4, [r2], #-0
 8016da8:	2a400000 	bcs	9016db0 <__exidx_end+0xfffc40>
 8016dac:	2a1c7f1c 	bcs	8736a24 <__exidx_end+0x71f8b4>
 8016db0:	08084000 	stmdaeq	r8, {lr}
 8016db4:	0008083e 	andeq	r0, r8, lr, lsr r8
 8016db8:	70800040 	addvc	r0, r0, r0, asr #32
 8016dbc:	40000030 	andmi	r0, r0, r0, lsr r0
 8016dc0:	08080808 	stmdaeq	r8, {r3, fp}
 8016dc4:	00400008 	subeq	r0, r0, r8
 8016dc8:	00606000 	rsbeq	r6, r0, r0
 8016dcc:	10204000 	eorne	r4, r0, r0
 8016dd0:	00020408 	andeq	r0, r2, r8, lsl #8
 8016dd4:	49513e40 	ldmdbmi	r1, {r6, r9, sl, fp, ip, sp}^
 8016dd8:	40003e45 	andmi	r3, r0, r5, asr #28
 8016ddc:	407f4200 	rsbsmi	r4, pc, r0, lsl #4
 8016de0:	72400000 	subvc	r0, r0, #0
 8016de4:	46494949 	strbmi	r4, [r9], -r9, asr #18
 8016de8:	41214000 			; <UNDEFINED> instruction: 0x41214000
 8016dec:	00334d49 	eorseq	r4, r3, r9, asr #26
 8016df0:	12141840 	andsne	r1, r4, #64, 16	; 0x400000
 8016df4:	4000107f 	andmi	r1, r0, pc, ror r0
 8016df8:	45454527 	strbmi	r4, [r5, #-1319]	; 0xfffffad9
 8016dfc:	3c400039 	mcrrcc	0, 3, r0, r0, cr9
 8016e00:	3149494a 	cmpcc	r9, sl, asr #18
 8016e04:	21414000 	mrscs	r4, (UNDEF: 65)
 8016e08:	00070911 	andeq	r0, r7, r1, lsl r9
 8016e0c:	49493640 	stmdbmi	r9, {r6, r9, sl, ip, sp}^
 8016e10:	40003649 	andmi	r3, r0, r9, asr #12
 8016e14:	29494946 	stmdbcs	r9, {r1, r2, r6, r8, fp, lr}^
 8016e18:	0040001e 	subeq	r0, r0, lr, lsl r0
 8016e1c:	00001400 	andeq	r1, r0, r0, lsl #8
 8016e20:	40004000 	andmi	r4, r0, r0
 8016e24:	00000034 	andeq	r0, r0, r4, lsr r0
 8016e28:	14080040 	strne	r0, [r8], #-64	; 0xffffffc0
 8016e2c:	40004122 	andmi	r4, r0, r2, lsr #2
 8016e30:	14141414 	ldrne	r1, [r4], #-1044	; 0xfffffbec
 8016e34:	00400014 	subeq	r0, r0, r4, lsl r0
 8016e38:	08142241 	ldmdaeq	r4, {r0, r6, r9, sp}
 8016e3c:	01024000 	mrseq	r4, (UNDEF: 2)
 8016e40:	00060959 	andeq	r0, r6, r9, asr r9
 8016e44:	5d413e40 	stclpl	14, cr3, [r1, #-256]	; 0xffffff00
 8016e48:	40004e59 	andmi	r4, r0, r9, asr lr
 8016e4c:	1211127c 	andsne	r1, r1, #124, 4	; 0xc0000007
 8016e50:	7f40007c 	svcvc	0x0040007c
 8016e54:	36494949 	strbcc	r4, [r9], -r9, asr #18
 8016e58:	413e4000 	teqmi	lr, r0
 8016e5c:	00224141 	eoreq	r4, r2, r1, asr #2
 8016e60:	41417f40 	cmpmi	r1, r0, asr #30
 8016e64:	40003e41 	andmi	r3, r0, r1, asr #28
 8016e68:	4949497f 	stmdbmi	r9, {r0, r1, r2, r3, r4, r5, r6, r8, fp, lr}^
 8016e6c:	7f400041 	svcvc	0x00400041
 8016e70:	01090909 	tsteq	r9, r9, lsl #18
 8016e74:	413e4000 	teqmi	lr, r0
 8016e78:	00735141 	rsbseq	r5, r3, r1, asr #2
 8016e7c:	08087f40 	stmdaeq	r8, {r6, r8, r9, sl, fp, ip, sp, lr}
 8016e80:	40007f08 	andmi	r7, r0, r8, lsl #30
 8016e84:	417f4100 	cmnmi	pc, r0, lsl #2
 8016e88:	20400000 	subcs	r0, r0, r0
 8016e8c:	013f4140 	teqeq	pc, r0, asr #2
 8016e90:	087f4000 	ldmdaeq	pc!, {lr}^	; <UNPREDICTABLE>
 8016e94:	00412214 	subeq	r2, r1, r4, lsl r2
 8016e98:	40407f40 	submi	r7, r0, r0, asr #30
 8016e9c:	40004040 	andmi	r4, r0, r0, asr #32
 8016ea0:	021c027f 	andseq	r0, ip, #-268435449	; 0xf0000007
 8016ea4:	7f40007f 	svcvc	0x0040007f
 8016ea8:	7f100804 	svcvc	0x00100804
 8016eac:	413e4000 	teqmi	lr, r0
 8016eb0:	003e4141 	eorseq	r4, lr, r1, asr #2
 8016eb4:	09097f40 	stmdbeq	r9, {r6, r8, r9, sl, fp, ip, sp, lr}
 8016eb8:	40000609 	andmi	r0, r0, r9, lsl #12
 8016ebc:	2151413e 	cmpcs	r1, lr, lsr r1
 8016ec0:	7f40005e 	svcvc	0x0040005e
 8016ec4:	46291909 	strtmi	r1, [r9], -r9, lsl #18
 8016ec8:	49264000 	stmdbmi	r6!, {lr}
 8016ecc:	00324949 	eorseq	r4, r2, r9, asr #18
 8016ed0:	7f010340 	svcvc	0x00010340
 8016ed4:	40000301 	andmi	r0, r0, r1, lsl #6
 8016ed8:	4040403f 	submi	r4, r0, pc, lsr r0
 8016edc:	1f40003f 	svcne	0x0040003f
 8016ee0:	1f204020 	svcne	0x00204020
 8016ee4:	403f4000 	eorsmi	r4, pc, r0
 8016ee8:	003f4038 	eorseq	r4, pc, r8, lsr r0	; <UNPREDICTABLE>
 8016eec:	08146340 	ldmdaeq	r4, {r6, r8, r9, sp, lr}
 8016ef0:	40006314 	andmi	r6, r0, r4, lsl r3
 8016ef4:	04780403 	ldrbteq	r0, [r8], #-1027	; 0xfffffbfd
 8016ef8:	61400003 	cmpvs	r0, r3
 8016efc:	434d4959 	movtmi	r4, #55641	; 0xd959
 8016f00:	7f004000 	svcvc	0x00004000
 8016f04:	00414141 	subeq	r4, r1, r1, asr #2
 8016f08:	08040240 	stmdaeq	r4, {r6, r9}
 8016f0c:	40002010 	andmi	r2, r0, r0, lsl r0
 8016f10:	41414100 	mrsmi	r4, (UNDEF: 81)
 8016f14:	0440007f 	strbeq	r0, [r0], #-127	; 0xffffff81
 8016f18:	04020102 	streq	r0, [r2], #-258	; 0xfffffefe
 8016f1c:	40404000 	submi	r4, r0, r0
 8016f20:	00404040 	subeq	r4, r0, r0, asr #32
 8016f24:	07030040 	streq	r0, [r3, -r0, asr #32]
 8016f28:	40000008 	andmi	r0, r0, r8
 8016f2c:	78545420 	ldmdavc	r4, {r5, sl, ip, lr}^
 8016f30:	7f400040 	svcvc	0x00400040
 8016f34:	38444428 	stmdacc	r4, {r3, r5, sl, lr}^
 8016f38:	44384000 	ldrtmi	r4, [r8], #-0
 8016f3c:	00284444 	eoreq	r4, r8, r4, asr #8
 8016f40:	44443840 	strbmi	r3, [r4], #-2112	; 0xfffff7c0
 8016f44:	40007f28 	andmi	r7, r0, r8, lsr #30
 8016f48:	54545438 	ldrbpl	r5, [r4], #-1080	; 0xfffffbc8
 8016f4c:	00400018 	subeq	r0, r0, r8, lsl r0
 8016f50:	02097e08 	andeq	r7, r9, #8, 28	; 0x80
 8016f54:	a4184000 	ldrge	r4, [r8], #-0
 8016f58:	00789ca4 	rsbseq	r9, r8, r4, lsr #25
 8016f5c:	04087f40 	streq	r7, [r8], #-3904	; 0xfffff0c0
 8016f60:	40007804 	andmi	r7, r0, r4, lsl #16
 8016f64:	407d4400 	rsbsmi	r4, sp, r0, lsl #8
 8016f68:	20400000 	subcs	r0, r0, r0
 8016f6c:	003d4040 	eorseq	r4, sp, r0, asr #32
 8016f70:	107f4000 	rsbsne	r4, pc, r0
 8016f74:	00004428 	andeq	r4, r0, r8, lsr #8
 8016f78:	7f410040 	svcvc	0x00410040
 8016f7c:	40000040 	andmi	r0, r0, r0, asr #32
 8016f80:	0478047c 	ldrbteq	r0, [r8], #-1148	; 0xfffffb84
 8016f84:	7c400078 	mcrrvc	0, 7, r0, r0, cr8
 8016f88:	78040408 	stmdavc	r4, {r3, sl}
 8016f8c:	44384000 	ldrtmi	r4, [r8], #-0
 8016f90:	00384444 	eorseq	r4, r8, r4, asr #8
 8016f94:	2418fc40 	ldrcs	pc, [r8], #-3136	; 0xfffff3c0
 8016f98:	40001824 	andmi	r1, r0, r4, lsr #16
 8016f9c:	18242418 	stmdane	r4!, {r3, r4, sl, sp}
 8016fa0:	7c4000fc 	mcrrvc	0, 15, r0, r0, cr12
 8016fa4:	08040408 	stmdaeq	r4, {r3, sl}
 8016fa8:	54484000 	strbpl	r4, [r8], #-0
 8016fac:	00245454 	eoreq	r5, r4, r4, asr r4
 8016fb0:	3f040440 	svccc	0x00040440
 8016fb4:	40002444 	andmi	r2, r0, r4, asr #8
 8016fb8:	2040403c 	subcs	r4, r0, ip, lsr r0
 8016fbc:	1c40007c 	mcrrne	0, 7, r0, r0, cr12
 8016fc0:	1c204020 	stcne	0, cr4, [r0], #-128	; 0xffffff80
 8016fc4:	403c4000 	eorsmi	r4, ip, r0
 8016fc8:	003c4030 	eorseq	r4, ip, r0, lsr r0
 8016fcc:	10284440 	eorne	r4, r8, r0, asr #8
 8016fd0:	40004428 	andmi	r4, r0, r8, lsr #8
 8016fd4:	9090904c 	addsls	r9, r0, ip, asr #32
 8016fd8:	4440007c 	strbmi	r0, [r0], #-124	; 0xffffff84
 8016fdc:	444c5464 	strbmi	r5, [ip], #-1124	; 0xfffffb9c
 8016fe0:	08004000 	stmdaeq	r0, {lr}
 8016fe4:	00004136 	andeq	r4, r0, r6, lsr r1
 8016fe8:	77000040 	strvc	r0, [r0, -r0, asr #32]
 8016fec:	40000000 	andmi	r0, r0, r0
 8016ff0:	08364100 	ldmdaeq	r6!, {r8, lr}
 8016ff4:	02400000 	subeq	r0, r0, #0
 8016ff8:	02040201 	andeq	r0, r4, #268435456	; 0x10000000
 8016ffc:	263c4000 	ldrtcs	r4, [ip], -r0
 8017000:	003c2623 	eorseq	r2, ip, r3, lsr #12

08017004 <oled_128x32_init>:
 8017004:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 8017008:	4000d31f 	andmi	sp, r0, pc, lsl r3
 801700c:	0020148d 	eoreq	r1, r0, sp, lsl #9
 8017010:	02dac8a1 	sbcseq	ip, sl, #10551296	; 0xa10000
 8017014:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 8017018:	a6a440db 	ssatge	r4, #5, fp, asr #1

0801701c <oled_128x64_init>:
 801701c:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 8017020:	4000d33f 	andmi	sp, r0, pc, lsr r3
 8017024:	0020148d 	eoreq	r1, r0, sp, lsl #9
 8017028:	12dac8a1 	sbcsne	ip, sl, #10551296	; 0xa10000
 801702c:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 8017030:	a6a440db 	ssatge	r4, #5, fp, asr #1

08017034 <vtable for Ssd1306>:
	...
 801703c:	0801222d 	stmdaeq	r1, {r0, r2, r3, r5, r9, sp}
 8017040:	08012259 	stmdaeq	r1, {r0, r3, r4, r6, r9, sp}
 8017044:	08012569 	stmdaeq	r1, {r0, r3, r5, r6, r8, sl, sp}
 8017048:	080124f1 	stmdaeq	r1, {r0, r4, r5, r6, r7, sl, sp}
 801704c:	080123bd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r7, r8, r9, sp}
 8017050:	08012279 	stmdaeq	r1, {r0, r3, r4, r5, r6, r9, sp}
 8017054:	080122a1 	stmdaeq	r1, {r0, r5, r7, r9, sp}
 8017058:	08012393 	stmdaeq	r1, {r0, r1, r4, r7, r8, r9, sp}
 801705c:	0801234d 	stmdaeq	r1, {r0, r2, r3, r6, r8, r9, sp}
 8017060:	0801222f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r9, sp}
 8017064:	080123f9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, r8, r9, sp}
 8017068:	08012405 	stmdaeq	r1, {r0, r2, sl, sp}
 801706c:	0801241f 	stmdaeq	r1, {r0, r1, r2, r3, r4, sl, sp}
 8017070:	08012231 	stmdaeq	r1, {r0, r4, r5, r9, sp}
 8017074:	30345b1b 	eorscc	r5, r4, fp, lsl fp
 8017078:	5b1b006d 	blpl	86d7234 <__exidx_end+0x6c00c4>
 801707c:	006d3033 	rsbeq	r3, sp, r3, lsr r0
 8017080:	31335b1b 	teqcc	r3, fp, lsl fp
 8017084:	5b1b006d 	blpl	86d7240 <__exidx_end+0x6c00d0>
 8017088:	006d3233 	rsbeq	r3, sp, r3, lsr r2
 801708c:	33335b1b 	teqcc	r3, #27648	; 0x6c00
 8017090:	5b1b006d 	blpl	86d724c <__exidx_end+0x6c00dc>
 8017094:	006d3933 	rsbeq	r3, sp, r3, lsr r9
 8017098:	2e25565b 	mcrcs	6, 1, r5, cr5, cr11, {2}
 801709c:	205d732a 	subscs	r7, sp, sl, lsr #6
 80170a0:	43207325 			; <UNDEFINED> instruction: 0x43207325
 80170a4:	69706d6f 	ldmdbvs	r0!, {r0, r1, r2, r3, r5, r6, r8, sl, fp, sp, lr}^
 80170a8:	2064656c 	rsbcs	r6, r4, ip, ror #10
 80170ac:	25206e6f 	strcs	r6, [r0, #-3695]!	; 0xfffff191
 80170b0:	20732a2e 	rsbscs	r2, r3, lr, lsr #20
 80170b4:	25207461 	strcs	r7, [r0, #-1121]!	; 0xfffffb9f
 80170b8:	00732a2e 	rsbseq	r2, r3, lr, lsr #20
 80170bc:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 80170c0:	203a636f 	eorscs	r6, sl, pc, ror #6
 80170c4:	000a7525 	andeq	r7, sl, r5, lsr #10
 80170c8:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 80170cc:	203a636f 	eorscs	r6, sl, pc, ror #6
 80170d0:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
 80170d4:	62203e20 	eorvs	r3, r0, #32, 28	; 0x200
 80170d8:	6b636f6c 	blvs	98f2e90 <__exidx_end+0x18dbd20>
 80170dc:	6d696c5f 	stclvs	12, cr6, [r9, #-380]!	; 0xfffffe84
 80170e0:	000a7469 	andeq	r7, sl, r9, ror #8
 80170e4:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 80170e8:	203a636f 	eorscs	r6, sl, pc, ror #6
 80170ec:	6f6c4270 	svcvs	0x006c4270
 80170f0:	65486b63 	strbvs	r6, [r8, #-2915]	; 0xfffff49d
 80170f4:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 80170f8:	2c70253d 	cfldr64cs	mvdx2, [r0], #-244	; 0xffffff0c
 80170fc:	7a697320 	bvc	9a73d84 <__exidx_end+0x1a5cc14>
 8017100:	64253d65 	strtvs	r3, [r5], #-3429	; 0xfffff29b
 8017104:	6164202c 	cmnvs	r4, ip, lsr #32
 8017108:	253d6174 	ldrcs	r6, [sp, #-372]!	; 0xfffffe8c
 801710c:	66000a70 			; <UNDEFINED> instruction: 0x66000a70
 8017110:	3a656572 	bcc	99706e0 <__exidx_end+0x1959570>
 8017114:	6c427020 	mcrrvs	0, 2, r7, r2, cr0
 8017118:	486b636f 	stmdami	fp!, {r0, r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 801711c:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 8017120:	203d2072 	eorscs	r2, sp, r2, ror r0
 8017124:	202c7025 	eorcs	r7, ip, r5, lsr #32
 8017128:	6f6c4270 	svcvs	0x006c4270
 801712c:	3d206b63 	fstmdbxcc	r0!, {d6-d54}	;@ Deprecated
 8017130:	0a702520 	beq	9c205b8 <__exidx_end+0x1c09448>
 8017134:	00000000 	andeq	r0, r0, r0

08017138 <days_of_month>:
 8017138:	0000001f 	andeq	r0, r0, pc, lsl r0
 801713c:	0000001c 	andeq	r0, r0, ip, lsl r0
 8017140:	0000001f 	andeq	r0, r0, pc, lsl r0
 8017144:	0000001e 	andeq	r0, r0, lr, lsl r0
 8017148:	0000001f 	andeq	r0, r0, pc, lsl r0
 801714c:	0000001e 	andeq	r0, r0, lr, lsl r0
 8017150:	0000001f 	andeq	r0, r0, pc, lsl r0
 8017154:	0000001f 	andeq	r0, r0, pc, lsl r0
 8017158:	0000001e 	andeq	r0, r0, lr, lsl r0
 801715c:	0000001f 	andeq	r0, r0, pc, lsl r0
 8017160:	0000001e 	andeq	r0, r0, lr, lsl r0
 8017164:	0000001f 	andeq	r0, r0, pc, lsl r0

Disassembly of section .ARM:

08017168 <__exidx_start>:
 8017168:	7fff24f4 	svcvc	0x00ff24f4
 801716c:	00000001 	andeq	r0, r0, r1

Disassembly of section .ARM.attributes:

08017170 <.ARM.attributes>:
 8017170:	00002e41 	andeq	r2, r0, r1, asr #28
 8017174:	61656100 	cmnvs	r5, r0, lsl #2
 8017178:	01006962 	tsteq	r0, r2, ror #18
 801717c:	00000024 	andeq	r0, r0, r4, lsr #32
 8017180:	726f4305 	rsbvc	r4, pc, #335544320	; 0x14000000
 8017184:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
 8017188:	0600334d 	streq	r3, [r0], -sp, asr #6
 801718c:	094d070a 	stmdbeq	sp, {r1, r3, r8, r9, sl}^
 8017190:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
 8017194:	17011501 	strne	r1, [r1, -r1, lsl #10]
 8017198:	1a011803 	bne	805d1ac <__exidx_end+0x4603c>
 801719c:	Address 0x000000000801719c is out of bounds.


Disassembly of section .data:

20000000 <DmxConfigUdp::Run()::pCmd>:
20000000:	20000e55 	andcs	r0, r0, r5, asr lr

20000004 <LLRPDevice::m_nHandleLLRP>:
20000004:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

20000008 <DmxConfigUdp::s_nHandle>:
20000008:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

2000000c <s_nDmxTransmitPeriod>:
2000000c:	000061a8 	andeq	r6, r0, r8, lsr #3

20000010 <s_nDmxTransmitMabTime>:
20000010:	0000000c 	andeq	r0, r0, ip

20000014 <s_nDmxTransmitBreakTime>:
20000014:	0000005c 	andeq	r0, r0, ip, asr r0

20000018 <s_multicast_mac>:
20000018:	005e0001 	subseq	r0, lr, r1
2000001c:	00000000 	andeq	r0, r0, r0

20000020 <MDNS::s_nHandle>:
20000020:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

20000024 <next_block>:
20000024:	2003c000 	andcs	ip, r3, r0

20000028 <s_block_bucket>:
20000028:	00000010 	andeq	r0, r0, r0, lsl r0
	...
20000038:	00000020 	andeq	r0, r0, r0, lsr #32
	...
20000048:	00000040 	andeq	r0, r0, r0, asr #32
	...
20000058:	00000060 	andeq	r0, r0, r0, rrx
	...
20000068:	00000080 	andeq	r0, r0, r0, lsl #1
	...
20000078:	00000100 	andeq	r0, r0, r0, lsl #2
	...
20000088:	00000140 	andeq	r0, r0, r0, asr #2
	...
20000098:	00000180 	andeq	r0, r0, r0, lsl #3
	...
200000a8:	00000200 	andeq	r0, r0, r0, lsl #4
	...
200000b8:	00000300 	andeq	r0, r0, r0, lsl #6
	...
200000c8:	00000400 	andeq	r0, r0, r0, lsl #8
	...
200000d8:	00000500 	andeq	r0, r0, r0, lsl #10
	...

200000f8 <SystemCoreClock>:
200000f8:	07270e00 	streq	r0, [r7, -r0, lsl #28]!

Disassembly of section .bss:

20000100 <DmxInput::s_nStarted>:
20000100:	00000000 	andeq	r0, r0, r0

20000104 <outptr>:
20000104:	00000000 	andeq	r0, r0, r0

20000108 <guard variable for lightset::Data::Get()::instance>:
20000108:	00000000 	andeq	r0, r0, r0

2000010c <lightset::Data::Get()::instance>:
	...

20000d14 <E131Bridge::s_pThis>:
20000d14:	00000000 	andeq	r0, r0, r0

20000d18 <s_ReceivingMask>:
20000d18:	00000000 	andeq	r0, r0, r0

20000d1c <LLRPDevice::s_nIpAddressFrom>:
20000d1c:	00000000 	andeq	r0, r0, r0

20000d20 <LLRPDevice::m_nIpAddresLLRPRequest>:
20000d20:	00000000 	andeq	r0, r0, r0

20000d24 <LLRPDevice::m_nIpAddressLLRPResponse>:
20000d24:	00000000 	andeq	r0, r0, r0

20000d28 <LLRPDevice::m_pLLRP>:
20000d28:	00000000 	andeq	r0, r0, r0

20000d2c <RDMNetDevice::s_RdmCommand>:
	...

20000e2b <RDMNetDevice::s_Cid>:
	...

20000e3c <RDMSensors::s_pThis>:
20000e3c:	00000000 	andeq	r0, r0, r0

20000e40 <RDMSubDevices::s_pThis>:
20000e40:	00000000 	andeq	r0, r0, r0

20000e44 <RDMDeviceResponder::s_pThis>:
20000e44:	00000000 	andeq	r0, r0, r0

20000e48 <RDMIdentify::m_bIsEnabled>:
	...

20000e49 <RDMIdentify::m_nMode>:
20000e49:	 	andeq	r0, r0, r0

20000e4c <RDMIdentify::s_pThis>:
20000e4c:	00000000 	andeq	r0, r0, r0

20000e50 <DmxSend::s_nStarted>:
	...

20000e51 <DmxConfigUdp::s_Buffer>:
	...

20000e64 <s_RxBuffer>:
	...

20001284 <s_TxBuffer>:
	...

2000168c <sv_PortState>:
	...

20001694 <s_nUartsSending>:
20001694:	00000000 	andeq	r0, r0, r0

20001698 <sv_nRxDmxPackets>:
	...

200016b8 <Dmx::s_pThis>:
200016b8:	00000000 	andeq	r0, r0, r0

200016bc <gv_RdmDataReceiveEnd>:
200016bc:	00000000 	andeq	r0, r0, r0

200016c0 <RemoteConfig::s_pUdpBuffer>:
200016c0:	00000000 	andeq	r0, r0, r0

200016c4 <RemoteConfig::s_RemoteConfigListBin>:
	...

200016e8 <RemoteConfig::s_pThis>:
200016e8:	00000000 	andeq	r0, r0, r0

200016ec <SpiFlashStore::s_nWaitMillis>:
200016ec:	00000000 	andeq	r0, r0, r0

200016f0 <SpiFlashStore::s_SpiFlashData>:
	...

200026f0 <SpiFlashStore::s_nStartAddress>:
200026f0:	00000000 	andeq	r0, r0, r0

200026f4 <SpiFlashStore::s_bHaveFlashChip>:
200026f4:	00000000 	andeq	r0, r0, r0

200026f8 <SpiFlashStore::s_nSpiFlashStoreSize>:
200026f8:	00000000 	andeq	r0, r0, r0

200026fc <SpiFlashStore::s_State>:
200026fc:	00000000 	andeq	r0, r0, r0

20002700 <SpiFlashStore::s_pThis>:
20002700:	00000000 	andeq	r0, r0, r0

20002704 <SpiFlashStore::s_bIsNew>:
20002704:	00000000 	andeq	r0, r0, r0

20002708 <StoreDisplayUdf::s_pThis>:
20002708:	00000000 	andeq	r0, r0, r0

2000270c <StoreDmxSend::s_pThis>:
2000270c:	00000000 	andeq	r0, r0, r0

20002710 <StoreE131::s_pThis>:
20002710:	00000000 	andeq	r0, r0, r0

20002714 <StoreNetwork::s_pThis>:
20002714:	00000000 	andeq	r0, r0, r0

20002718 <StoreRDMDevice::s_pThis>:
20002718:	00000000 	andeq	r0, r0, r0

2000271c <StoreRemoteConfig::s_pThis>:
2000271c:	00000000 	andeq	r0, r0, r0

20002720 <FlashRom::s_pThis>:
20002720:	00000000 	andeq	r0, r0, r0

20002724 <flashrom::s_nAddress>:
20002724:	00000000 	andeq	r0, r0, r0

20002728 <flashrom::s_State>:
20002728:	00000000 	andeq	r0, r0, r0

2000272c <flashrom::s_nPage>:
2000272c:	00000000 	andeq	r0, r0, r0

20002730 <flashrom::s_pData>:
20002730:	00000000 	andeq	r0, r0, r0

20002734 <flashrom::s_isBank0>:
20002734:	00000000 	andeq	r0, r0, r0

20002738 <flashrom::s_nLength>:
20002738:	00000000 	andeq	r0, r0, r0

2000273c <g_ip_info>:
	...

20002748 <g_mac_address>:
20002748:	00000000 	andeq	r0, r0, r0
	...

2000274e <s_is_dhcp>:
	...

20002750 <s_p>:
20002750:	00000000 	andeq	r0, r0, r0

20002754 <s_ticker>:
20002754:	00000000 	andeq	r0, r0, r0

20002758 <s_mac_address>:
	...

20002760 <s_mac_address_arp_reply>:
	...

20002768 <s_id>:
20002768:	00000000 	andeq	r0, r0, r0

2000276c <s_recv_queue>:
	...

200032dc <s_tcb>:
	...

20003320 <s_tcp>:
	...

2000390c <broadcast_mask>:
2000390c:	00000000 	andeq	r0, r0, r0

20003910 <gw_ip>:
20003910:	00000000 	andeq	r0, r0, r0

20003914 <on_network_mask>:
20003914:	00000000 	andeq	r0, r0, r0

20003918 <s_id>:
20003918:	00000000 	andeq	r0, r0, r0

2000391c <s_ports_allowed>:
	...

2000393c <s_recv_queue>:
	...

200095dc <s_send_packet>:
	...

20009bc8 <MDNS::s_nRemoteIp>:
20009bc8:	00000000 	andeq	r0, r0, r0

20009bcc <MDNS::s_nRemotePort>:
20009bcc:	00000000 	andeq	r0, r0, r0

20009bd0 <MDNS::s_nMulticastIp>:
20009bd0:	00000000 	andeq	r0, r0, r0

20009bd4 <MDNS::s_AnswerLocalIp>:
	...

20009dd8 <MDNS::s_ServiceRecords>:
	...

20009df8 <MDNS::s_nBytesReceived>:
20009df8:	00000000 	andeq	r0, r0, r0

20009dfc <MDNS::s_ServiceRecordsData>:
	...

2000a000 <MDNS::s_pName>:
2000a000:	00000000 	andeq	r0, r0, r0

2000a004 <MDNS::s_pBuffer>:
2000a004:	00000000 	andeq	r0, r0, r0

2000a008 <Network::s_pThis>:
2000a008:	00000000 	andeq	r0, r0, r0

2000a00c <NetworkParams::m_tNetworkParams>:
	...

2000a06c <s_arp_announce>:
	...

2000a098 <s_arp_reply>:
	...

2000a0c4 <s_arp_request>:
	...

2000a0f0 <s_arp_records>:
	...

2000a270 <s_entry_current>:
2000a270:	00000000 	andeq	r0, r0, r0

2000a274 <s_dhcp_allocated_gw>:
2000a274:	00000000 	andeq	r0, r0, r0

2000a278 <s_dhcp_allocated_ip>:
2000a278:	00000000 	andeq	r0, r0, r0

2000a27c <s_dhcp_allocated_netmask>:
2000a27c:	00000000 	andeq	r0, r0, r0

2000a280 <s_dhcp_message>:
	...

2000a4a4 <s_dhcp_server_ip>:
2000a4a4:	00000000 	andeq	r0, r0, r0

2000a4a8 <s_groups>:
	...

2000a5c8 <s_id>:
2000a5c8:	00000000 	andeq	r0, r0, r0

2000a5cc <s_joins_allowed_index>:
2000a5cc:	00000000 	andeq	r0, r0, r0

2000a5d0 <s_leave>:
	...

2000a600 <s_multicast_mac>:
	...

2000a608 <s_report>:
	...

2000a638 <DisplayUdf::s_pThis>:
2000a638:	00000000 	andeq	r0, r0, r0

2000a63c <PropertiesConfig::s_Config>:
2000a63c:	00000000 	andeq	r0, r0, r0

2000a640 <Display::s_pThis>:
2000a640:	00000000 	andeq	r0, r0, r0

2000a644 <_ClearBuffer>:
	...

2000a6cc <Ssd1306::s_pThis>:
2000a6cc:	00000000 	andeq	r0, r0, r0

2000a6d0 <FirmwareVersion::s_FirmwareVersion>:
	...

2000a6e6 <FirmwareVersion::s_Print>:
	...

2000a728 <FirmwareVersion::s_pThis>:
2000a728:	00000000 	andeq	r0, r0, r0

2000a72c <LedBlink::s_pThis>:
2000a72c:	00000000 	andeq	r0, r0, r0

2000a730 <Hardware::s_pThis>:
2000a730:	00000000 	andeq	r0, r0, r0

2000a734 <last.0>:
2000a734:	00000000 	andeq	r0, r0, r0

2000a738 <s_micros>:
	...

2000a740 <set_timer>:
2000a740:	00000000 	andeq	r0, r0, r0

2000a744 <s_nSysTickMillis>:
2000a744:	00000000 	andeq	r0, r0, r0

2000a748 <enet_init_status>:
2000a748:	00000000 	andeq	r0, r0, r0

2000a74c <s_nAddress>:
2000a74c:	00000000 	andeq	r0, r0, r0

2000a750 <dma_current_ptp_rxdesc>:
2000a750:	00000000 	andeq	r0, r0, r0

2000a754 <dma_current_ptp_txdesc>:
2000a754:	00000000 	andeq	r0, r0, r0

2000a758 <dma_current_rxdesc>:
2000a758:	00000000 	andeq	r0, r0, r0

2000a75c <dma_current_txdesc>:
2000a75c:	00000000 	andeq	r0, r0, r0

2000a760 <enet_initpara>:
	...

2000a79c <rx_buff>:
	...

2000d73c <rxdesc_tab>:
	...

2000d7bc <tx_buff>:
	...

2000e3a4 <txdesc_tab>:
	...

Disassembly of section .heap:

2003c000 <heap_low>:
	...

Disassembly of section .stack:

2003d800 <_sp-0x2800>:
	...
