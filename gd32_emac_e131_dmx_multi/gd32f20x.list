
build_gd32/main.elf:     file format elf32-littlearm


Disassembly of section .vectors:

08007000 <__gVectors>:
 8007000:	20020000 	andcs	r0, r2, r0
 8007004:	08008885 	stmdaeq	r0, {r0, r2, r7, fp, pc}
 8007008:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 800700c:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007010:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007014:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007018:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
	...
 800702c:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007030:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007034:	00000000 	andeq	r0, r0, r0
 8007038:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 800703c:	0801158d 	stmdaeq	r1, {r0, r2, r3, r7, r8, sl, ip}
 8007040:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007044:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007048:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 800704c:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007050:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007054:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007058:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 800705c:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007060:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007064:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007068:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 800706c:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007070:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007074:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007078:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 800707c:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007080:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007084:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007088:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 800708c:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007090:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007094:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007098:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 800709c:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 80070a0:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 80070a4:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 80070a8:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 80070ac:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 80070b0:	0800c201 	stmdaeq	r0, {r0, r9, lr, pc}
 80070b4:	0800c3c5 	stmdaeq	r0, {r0, r2, r6, r7, r8, r9, lr, pc}
 80070b8:	0800c46d 	stmdaeq	r0, {r0, r2, r3, r5, r6, sl, lr, pc}
 80070bc:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 80070c0:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 80070c4:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 80070c8:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 80070cc:	00000000 	andeq	r0, r0, r0
 80070d0:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 80070d4:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 80070d8:	0800c1d1 	stmdaeq	r0, {r0, r4, r6, r7, r8, lr, pc}
 80070dc:	0800c1dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, lr, pc}
 80070e0:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 80070e4:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 80070e8:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 80070ec:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 80070f0:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 80070f4:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 80070f8:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 80070fc:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007100:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007104:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007108:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 800710c:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007110:	0800c1e9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r8, lr, pc}
 8007114:	0800c1f5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r8, lr, pc}
 8007118:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 800711c:	0800c48d 	stmdaeq	r0, {r0, r2, r3, r7, sl, lr, pc}
 8007120:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007124:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007128:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 800712c:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007130:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007134:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007138:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 800713c:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007140:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007144:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007148:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 800714c:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007150:	00000000 	andeq	r0, r0, r0
 8007154:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007158:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 800715c:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007160:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007164:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
	...
 8007178:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 800717c:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007180:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 8007184:	00000000 	andeq	r0, r0, r0
 8007188:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 800718c:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
	...
 80071a0:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}
 80071a4:	080088c9 	stmdaeq	r0, {r0, r3, r6, r7, fp, pc}

Disassembly of section .text:

080071a8 <net_init>:
 80071a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80071ac:	460c      	mov	r4, r1
 80071ae:	4616      	mov	r6, r2
 80071b0:	9f06      	ldr	r7, [sp, #24]
 80071b2:	4a22      	ldr	r2, [pc, #136]	; (800723c <net_init+0x94>)
 80071b4:	461d      	mov	r5, r3
 80071b6:	1e43      	subs	r3, r0, #1
 80071b8:	3005      	adds	r0, #5
 80071ba:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 80071be:	4283      	cmp	r3, r0
 80071c0:	f802 1b01 	strb.w	r1, [r2], #1
 80071c4:	d1f9      	bne.n	80071ba <net_init+0x12>
 80071c6:	4623      	mov	r3, r4
 80071c8:	4a1d      	ldr	r2, [pc, #116]	; (8007240 <net_init+0x98>)
 80071ca:	f104 010c 	add.w	r1, r4, #12
 80071ce:	f813 0b01 	ldrb.w	r0, [r3], #1
 80071d2:	428b      	cmp	r3, r1
 80071d4:	f802 0b01 	strb.w	r0, [r2], #1
 80071d8:	d1f9      	bne.n	80071ce <net_init+0x26>
 80071da:	f04f 0800 	mov.w	r8, #0
 80071de:	4918      	ldr	r1, [pc, #96]	; (8007240 <net_init+0x98>)
 80071e0:	4816      	ldr	r0, [pc, #88]	; (800723c <net_init+0x94>)
 80071e2:	f000 f9ab 	bl	800753c <ip_init>
 80071e6:	4815      	ldr	r0, [pc, #84]	; (800723c <net_init+0x94>)
 80071e8:	f000 f83c 	bl	8007264 <rfc3927_init>
 80071ec:	f887 8000 	strb.w	r8, [r7]
 80071f0:	782b      	ldrb	r3, [r5, #0]
 80071f2:	b163      	cbz	r3, 800720e <net_init+0x66>
 80071f4:	4632      	mov	r2, r6
 80071f6:	4912      	ldr	r1, [pc, #72]	; (8007240 <net_init+0x98>)
 80071f8:	4810      	ldr	r0, [pc, #64]	; (800723c <net_init+0x94>)
 80071fa:	f007 fefd 	bl	800eff8 <dhcp_client>
 80071fe:	4540      	cmp	r0, r8
 8007200:	da05      	bge.n	800720e <net_init+0x66>
 8007202:	480f      	ldr	r0, [pc, #60]	; (8007240 <net_init+0x98>)
 8007204:	f885 8000 	strb.w	r8, [r5]
 8007208:	f006 f974 	bl	800d4f4 <rfc3927>
 800720c:	7038      	strb	r0, [r7, #0]
 800720e:	490c      	ldr	r1, [pc, #48]	; (8007240 <net_init+0x98>)
 8007210:	480a      	ldr	r0, [pc, #40]	; (800723c <net_init+0x94>)
 8007212:	f000 f887 	bl	8007324 <arp_init>
 8007216:	480a      	ldr	r0, [pc, #40]	; (8007240 <net_init+0x98>)
 8007218:	f008 f90e 	bl	800f438 <ip_set_ip>
 800721c:	f000 f82e 	bl	800727c <tcp_init>
 8007220:	4a07      	ldr	r2, [pc, #28]	; (8007240 <net_init+0x98>)
 8007222:	1e63      	subs	r3, r4, #1
 8007224:	340b      	adds	r4, #11
 8007226:	f812 1b01 	ldrb.w	r1, [r2], #1
 800722a:	f803 1f01 	strb.w	r1, [r3, #1]!
 800722e:	429c      	cmp	r4, r3
 8007230:	d1f9      	bne.n	8007226 <net_init+0x7e>
 8007232:	782a      	ldrb	r2, [r5, #0]
 8007234:	4b03      	ldr	r3, [pc, #12]	; (8007244 <net_init+0x9c>)
 8007236:	701a      	strb	r2, [r3, #0]
 8007238:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800723c:	2000526c 	andcs	r5, r0, ip, ror #4
 8007240:	20005260 	andcs	r5, r0, r0, ror #4
 8007244:	20005272 	andcs	r5, r0, r2, ror r2

08007248 <net_shutdown>:
 8007248:	b508      	push	{r3, lr}
 800724a:	f000 f982 	bl	8007552 <ip_shutdown>
 800724e:	4b04      	ldr	r3, [pc, #16]	; (8007260 <net_shutdown+0x18>)
 8007250:	781b      	ldrb	r3, [r3, #0]
 8007252:	b11b      	cbz	r3, 800725c <net_shutdown+0x14>
 8007254:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8007258:	f007 bfd6 	b.w	800f208 <dhcp_client_release>
 800725c:	bd08      	pop	{r3, pc}
 800725e:	bf00      	nop
 8007260:	20005272 	andcs	r5, r0, r2, ror r2

08007264 <rfc3927_init>:
 8007264:	4b04      	ldr	r3, [pc, #16]	; (8007278 <rfc3927_init+0x14>)
 8007266:	1d82      	adds	r2, r0, #6
 8007268:	4290      	cmp	r0, r2
 800726a:	d100      	bne.n	800726e <rfc3927_init+0xa>
 800726c:	4770      	bx	lr
 800726e:	f810 1b01 	ldrb.w	r1, [r0], #1
 8007272:	f803 1b01 	strb.w	r1, [r3], #1
 8007276:	e7f7      	b.n	8007268 <rfc3927_init+0x4>
 8007278:	2000527c 	andcs	r5, r0, ip, ror r2

0800727c <tcp_init>:
 800727c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800727e:	2206      	movs	r2, #6
 8007280:	4c0e      	ldr	r4, [pc, #56]	; (80072bc <tcp_init+0x40>)
 8007282:	490f      	ldr	r1, [pc, #60]	; (80072c0 <tcp_init+0x44>)
 8007284:	18a0      	adds	r0, r4, r2
 8007286:	f006 f98f 	bl	800d5a8 <memcpy.isra.0>
 800728a:	2308      	movs	r3, #8
 800728c:	2204      	movs	r2, #4
 800728e:	2500      	movs	r5, #0
 8007290:	7323      	strb	r3, [r4, #12]
 8007292:	4b0c      	ldr	r3, [pc, #48]	; (80072c4 <tcp_init+0x48>)
 8007294:	eb0d 0102 	add.w	r1, sp, r2
 8007298:	681b      	ldr	r3, [r3, #0]
 800729a:	f104 001a 	add.w	r0, r4, #26
 800729e:	9301      	str	r3, [sp, #4]
 80072a0:	7365      	strb	r5, [r4, #13]
 80072a2:	f006 f981 	bl	800d5a8 <memcpy.isra.0>
 80072a6:	2345      	movs	r3, #69	; 0x45
 80072a8:	73a3      	strb	r3, [r4, #14]
 80072aa:	2340      	movs	r3, #64	; 0x40
 80072ac:	7523      	strb	r3, [r4, #20]
 80072ae:	75a3      	strb	r3, [r4, #22]
 80072b0:	2306      	movs	r3, #6
 80072b2:	73e5      	strb	r5, [r4, #15]
 80072b4:	7565      	strb	r5, [r4, #21]
 80072b6:	75e3      	strb	r3, [r4, #23]
 80072b8:	b003      	add	sp, #12
 80072ba:	bd30      	pop	{r4, r5, pc}
 80072bc:	20005e40 	andcs	r5, r0, r0, asr #28
 80072c0:	2000526c 	andcs	r5, r0, ip, ror #4
 80072c4:	20005260 	andcs	r5, r0, r0, ror #4

080072c8 <udp_init>:
 80072c8:	b570      	push	{r4, r5, r6, lr}
 80072ca:	2200      	movs	r2, #0
 80072cc:	2408      	movs	r4, #8
 80072ce:	460e      	mov	r6, r1
 80072d0:	4b0d      	ldr	r3, [pc, #52]	; (8007308 <udp_init+0x40>)
 80072d2:	490e      	ldr	r1, [pc, #56]	; (800730c <udp_init+0x44>)
 80072d4:	3c01      	subs	r4, #1
 80072d6:	801a      	strh	r2, [r3, #0]
 80072d8:	805a      	strh	r2, [r3, #2]
 80072da:	f841 2b04 	str.w	r2, [r1], #4
 80072de:	f603 3394 	addw	r3, r3, #2964	; 0xb94
 80072e2:	d1f7      	bne.n	80072d4 <udp_init+0xc>
 80072e4:	2206      	movs	r2, #6
 80072e6:	4d0a      	ldr	r5, [pc, #40]	; (8007310 <udp_init+0x48>)
 80072e8:	4b0a      	ldr	r3, [pc, #40]	; (8007314 <udp_init+0x4c>)
 80072ea:	4601      	mov	r1, r0
 80072ec:	18a8      	adds	r0, r5, r2
 80072ee:	801c      	strh	r4, [r3, #0]
 80072f0:	f006 fae6 	bl	800d8c0 <memcpy.isra.0>
 80072f4:	4b08      	ldr	r3, [pc, #32]	; (8007318 <udp_init+0x50>)
 80072f6:	4630      	mov	r0, r6
 80072f8:	60eb      	str	r3, [r5, #12]
 80072fa:	4b08      	ldr	r3, [pc, #32]	; (800731c <udp_init+0x54>)
 80072fc:	616b      	str	r3, [r5, #20]
 80072fe:	f006 fb0b 	bl	800d918 <udp_set_ip>
 8007302:	852c      	strh	r4, [r5, #40]	; 0x28
 8007304:	bd70      	pop	{r4, r5, r6, pc}
 8007306:	bf00      	nop
 8007308:	2000645c 	andcs	r6, r0, ip, asr r4
 800730c:	2000643c 	andcs	r6, r0, ip, lsr r4
 8007310:	2000c0fc 	strdcs	ip, [r0], -ip	; <UNPREDICTABLE>
 8007314:	20006438 	andcs	r6, r0, r8, lsr r4
 8007318:	00450008 	subeq	r0, r5, r8
 800731c:	11400040 	cmpne	r0, r0, asr #32

08007320 <udp_shutdown>:
 8007320:	4770      	bx	lr
	...

08007324 <arp_init>:
 8007324:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007328:	4604      	mov	r4, r0
 800732a:	460d      	mov	r5, r1
 800732c:	f000 f876 	bl	800741c <arp_cache_init>
 8007330:	2206      	movs	r2, #6
 8007332:	4621      	mov	r1, r4
 8007334:	482e      	ldr	r0, [pc, #184]	; (80073f0 <arp_init+0xcc>)
 8007336:	682f      	ldr	r7, [r5, #0]
 8007338:	f007 fcd0 	bl	800ecdc <memcpy.isra.0>
 800733c:	4b2d      	ldr	r3, [pc, #180]	; (80073f4 <arp_init+0xd0>)
 800733e:	2507      	movs	r5, #7
 8007340:	461e      	mov	r6, r3
 8007342:	22ff      	movs	r2, #255	; 0xff
 8007344:	3d01      	subs	r5, #1
 8007346:	d146      	bne.n	80073d6 <arp_init+0xb2>
 8007348:	4b2b      	ldr	r3, [pc, #172]	; (80073f8 <arp_init+0xd4>)
 800734a:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 80073fc <arp_init+0xd8>
 800734e:	2206      	movs	r2, #6
 8007350:	e9c6 3803 	strd	r3, r8, [r6, #12]
 8007354:	f44f 7380 	mov.w	r3, #256	; 0x100
 8007358:	4621      	mov	r1, r4
 800735a:	4829      	ldr	r0, [pc, #164]	; (8007400 <arp_init+0xdc>)
 800735c:	82b3      	strh	r3, [r6, #20]
 800735e:	f007 fcbd 	bl	800ecdc <memcpy.isra.0>
 8007362:	2307      	movs	r3, #7
 8007364:	4a27      	ldr	r2, [pc, #156]	; (8007404 <arp_init+0xe0>)
 8007366:	61f7      	str	r7, [r6, #28]
 8007368:	3b01      	subs	r3, #1
 800736a:	d137      	bne.n	80073dc <arp_init+0xb8>
 800736c:	2206      	movs	r2, #6
 800736e:	4621      	mov	r1, r4
 8007370:	4825      	ldr	r0, [pc, #148]	; (8007408 <arp_init+0xe4>)
 8007372:	f8c6 7026 	str.w	r7, [r6, #38]	; 0x26
 8007376:	f007 fcb1 	bl	800ecdc <memcpy.isra.0>
 800737a:	4a24      	ldr	r2, [pc, #144]	; (800740c <arp_init+0xe8>)
 800737c:	2306      	movs	r3, #6
 800737e:	4615      	mov	r5, r2
 8007380:	21ff      	movs	r1, #255	; 0xff
 8007382:	3b01      	subs	r3, #1
 8007384:	d22d      	bcs.n	80073e2 <arp_init+0xbe>
 8007386:	4b1c      	ldr	r3, [pc, #112]	; (80073f8 <arp_init+0xd4>)
 8007388:	2206      	movs	r2, #6
 800738a:	e9c5 3803 	strd	r3, r8, [r5, #12]
 800738e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8007392:	4621      	mov	r1, r4
 8007394:	481e      	ldr	r0, [pc, #120]	; (8007410 <arp_init+0xec>)
 8007396:	82ab      	strh	r3, [r5, #20]
 8007398:	f007 fca0 	bl	800ecdc <memcpy.isra.0>
 800739c:	2307      	movs	r3, #7
 800739e:	2100      	movs	r1, #0
 80073a0:	4a1c      	ldr	r2, [pc, #112]	; (8007414 <arp_init+0xf0>)
 80073a2:	61ef      	str	r7, [r5, #28]
 80073a4:	3b01      	subs	r3, #1
 80073a6:	d11f      	bne.n	80073e8 <arp_init+0xc4>
 80073a8:	2206      	movs	r2, #6
 80073aa:	4d1b      	ldr	r5, [pc, #108]	; (8007418 <arp_init+0xf4>)
 80073ac:	4621      	mov	r1, r4
 80073ae:	18a8      	adds	r0, r5, r2
 80073b0:	f007 fc94 	bl	800ecdc <memcpy.isra.0>
 80073b4:	4b10      	ldr	r3, [pc, #64]	; (80073f8 <arp_init+0xd4>)
 80073b6:	4621      	mov	r1, r4
 80073b8:	e9c5 3803 	strd	r3, r8, [r5, #12]
 80073bc:	f44f 7300 	mov.w	r3, #512	; 0x200
 80073c0:	f105 0016 	add.w	r0, r5, #22
 80073c4:	2206      	movs	r2, #6
 80073c6:	82ab      	strh	r3, [r5, #20]
 80073c8:	f007 fc88 	bl	800ecdc <memcpy.isra.0>
 80073cc:	61ef      	str	r7, [r5, #28]
 80073ce:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80073d2:	f007 bc8d 	b.w	800ecf0 <arp_announce>
 80073d6:	f803 2b01 	strb.w	r2, [r3], #1
 80073da:	e7b3      	b.n	8007344 <arp_init+0x20>
 80073dc:	f802 5b01 	strb.w	r5, [r2], #1
 80073e0:	e7c2      	b.n	8007368 <arp_init+0x44>
 80073e2:	f802 1b01 	strb.w	r1, [r2], #1
 80073e6:	e7cc      	b.n	8007382 <arp_init+0x5e>
 80073e8:	f802 1b01 	strb.w	r1, [r2], #1
 80073ec:	e7da      	b.n	80073a4 <arp_init+0x80>
 80073ee:	bf00      	nop
 80073f0:	2000cb92 	mulcs	r0, r2, fp
 80073f4:	2000cb8c 	andcs	ip, r0, ip, lsl #23
 80073f8:	01000608 	tsteq	r0, r8, lsl #12
 80073fc:	04060008 	streq	r0, [r6], #-8
 8007400:	2000cba2 	andcs	ip, r0, r2, lsr #23
 8007404:	2000cbac 	andcs	ip, r0, ip, lsr #23
 8007408:	2000cbea 	andcs	ip, r0, sl, ror #23
 800740c:	2000cbe4 	andcs	ip, r0, r4, ror #23
 8007410:	2000cbfa 	strdcs	ip, [r0], -sl
 8007414:	2000cc04 	andcs	ip, r0, r4, lsl #24
 8007418:	2000cbb8 			; <UNDEFINED> instruction: 0x2000cbb8

0800741c <arp_cache_init>:
 800741c:	2300      	movs	r3, #0
 800741e:	4618      	mov	r0, r3
 8007420:	4a09      	ldr	r2, [pc, #36]	; (8007448 <arp_cache_init+0x2c>)
 8007422:	b510      	push	{r4, lr}
 8007424:	8013      	strh	r3, [r2, #0]
 8007426:	4a09      	ldr	r2, [pc, #36]	; (800744c <arp_cache_init+0x30>)
 8007428:	4611      	mov	r1, r2
 800742a:	f842 0c04 	str.w	r0, [r2, #-4]
 800742e:	1d94      	adds	r4, r2, #6
 8007430:	42a1      	cmp	r1, r4
 8007432:	d105      	bne.n	8007440 <arp_cache_init+0x24>
 8007434:	3303      	adds	r3, #3
 8007436:	2b60      	cmp	r3, #96	; 0x60
 8007438:	f102 020c 	add.w	r2, r2, #12
 800743c:	d1f4      	bne.n	8007428 <arp_cache_init+0xc>
 800743e:	bd10      	pop	{r4, pc}
 8007440:	f801 0b01 	strb.w	r0, [r1], #1
 8007444:	e7f4      	b.n	8007430 <arp_cache_init+0x14>
 8007446:	bf00      	nop
 8007448:	2000cd90 	mulcs	r0, r0, sp
 800744c:	2000cc14 	andcs	ip, r0, r4, lsl ip

08007450 <igmp_init>:
 8007450:	2200      	movs	r2, #0
 8007452:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007456:	4605      	mov	r5, r0
 8007458:	4608      	mov	r0, r1
 800745a:	4611      	mov	r1, r2
 800745c:	4b23      	ldr	r3, [pc, #140]	; (80074ec <igmp_init+0x9c>)
 800745e:	f103 0408 	add.w	r4, r3, #8
 8007462:	42a3      	cmp	r3, r4
 8007464:	d13e      	bne.n	80074e4 <igmp_init+0x94>
 8007466:	3201      	adds	r2, #1
 8007468:	2a24      	cmp	r2, #36	; 0x24
 800746a:	d1f8      	bne.n	800745e <igmp_init+0xe>
 800746c:	2600      	movs	r6, #0
 800746e:	4b20      	ldr	r3, [pc, #128]	; (80074f0 <igmp_init+0xa0>)
 8007470:	4c20      	ldr	r4, [pc, #128]	; (80074f4 <igmp_init+0xa4>)
 8007472:	601e      	str	r6, [r3, #0]
 8007474:	4b20      	ldr	r3, [pc, #128]	; (80074f8 <igmp_init+0xa8>)
 8007476:	f44f 5700 	mov.w	r7, #8192	; 0x2000
 800747a:	801e      	strh	r6, [r3, #0]
 800747c:	f007 ff3c 	bl	800f2f8 <igmp_set_ip>
 8007480:	2201      	movs	r2, #1
 8007482:	4b1e      	ldr	r3, [pc, #120]	; (80074fc <igmp_init+0xac>)
 8007484:	4629      	mov	r1, r5
 8007486:	801a      	strh	r2, [r3, #0]
 8007488:	225e      	movs	r2, #94	; 0x5e
 800748a:	709a      	strb	r2, [r3, #2]
 800748c:	2206      	movs	r2, #6
 800748e:	18a0      	adds	r0, r4, r2
 8007490:	f007 fee8 	bl	800f264 <memcpy.isra.0>
 8007494:	f240 4394 	movw	r3, #1172	; 0x494
 8007498:	8463      	strh	r3, [r4, #34]	; 0x22
 800749a:	2316      	movs	r3, #22
 800749c:	f8df 9060 	ldr.w	r9, [pc, #96]	; 8007500 <igmp_init+0xb0>
 80074a0:	f8df 8060 	ldr.w	r8, [pc, #96]	; 8007504 <igmp_init+0xb4>
 80074a4:	84e3      	strh	r3, [r4, #38]	; 0x26
 80074a6:	f8c4 9014 	str.w	r9, [r4, #20]
 80074aa:	4b17      	ldr	r3, [pc, #92]	; (8007508 <igmp_init+0xb8>)
 80074ac:	f8c4 800c 	str.w	r8, [r4, #12]
 80074b0:	8227      	strh	r7, [r4, #16]
 80074b2:	84a6      	strh	r6, [r4, #36]	; 0x24
 80074b4:	4c15      	ldr	r4, [pc, #84]	; (800750c <igmp_init+0xbc>)
 80074b6:	2206      	movs	r2, #6
 80074b8:	6023      	str	r3, [r4, #0]
 80074ba:	f44f 7300 	mov.w	r3, #512	; 0x200
 80074be:	18a0      	adds	r0, r4, r2
 80074c0:	80a3      	strh	r3, [r4, #4]
 80074c2:	4629      	mov	r1, r5
 80074c4:	f007 fece 	bl	800f264 <memcpy.isra.0>
 80074c8:	23e0      	movs	r3, #224	; 0xe0
 80074ca:	83e3      	strh	r3, [r4, #30]
 80074cc:	f44f 13b8 	mov.w	r3, #1507328	; 0x170000
 80074d0:	4a0f      	ldr	r2, [pc, #60]	; (8007510 <igmp_init+0xc0>)
 80074d2:	f8c4 9014 	str.w	r9, [r4, #20]
 80074d6:	e9c4 2308 	strd	r2, r3, [r4, #32]
 80074da:	f8c4 800c 	str.w	r8, [r4, #12]
 80074de:	8227      	strh	r7, [r4, #16]
 80074e0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80074e4:	f803 1b01 	strb.w	r1, [r3], #1
 80074e8:	e7bb      	b.n	8007462 <igmp_init+0x12>
 80074ea:	bf00      	nop
 80074ec:	2000cfc8 	andcs	ip, r0, r8, asr #31
 80074f0:	2000d0ec 	andcs	sp, r0, ip, ror #1
 80074f4:	2000d128 	andcs	sp, r0, r8, lsr #2
 80074f8:	2000d0e8 	andcs	sp, r0, r8, ror #1
 80074fc:	2000d120 	andcs	sp, r0, r0, lsr #2
 8007500:	02010040 	andeq	r0, r1, #64	; 0x40
 8007504:	00460008 	subeq	r0, r6, r8
 8007508:	005e0001 	subseq	r0, lr, r1
 800750c:	2000d0f0 	strdcs	sp, [r0], -r0
 8007510:	04940200 	ldreq	r0, [r4], #512	; 0x200

08007514 <igmp_shutdown>:
 8007514:	b570      	push	{r4, r5, r6, lr}
 8007516:	2500      	movs	r5, #0
 8007518:	462e      	mov	r6, r5
 800751a:	4c07      	ldr	r4, [pc, #28]	; (8007538 <igmp_shutdown+0x24>)
 800751c:	6820      	ldr	r0, [r4, #0]
 800751e:	b120      	cbz	r0, 800752a <igmp_shutdown+0x16>
 8007520:	f007 ff46 	bl	800f3b0 <igmp_leave>
 8007524:	6026      	str	r6, [r4, #0]
 8007526:	7166      	strb	r6, [r4, #5]
 8007528:	7126      	strb	r6, [r4, #4]
 800752a:	3501      	adds	r5, #1
 800752c:	2d24      	cmp	r5, #36	; 0x24
 800752e:	f104 0408 	add.w	r4, r4, #8
 8007532:	d1f3      	bne.n	800751c <igmp_shutdown+0x8>
 8007534:	bd70      	pop	{r4, r5, r6, pc}
 8007536:	bf00      	nop
 8007538:	2000cfc8 	andcs	ip, r0, r8, asr #31

0800753c <ip_init>:
 800753c:	b538      	push	{r3, r4, r5, lr}
 800753e:	4604      	mov	r4, r0
 8007540:	460d      	mov	r5, r1
 8007542:	f7ff fec1 	bl	80072c8 <udp_init>
 8007546:	4629      	mov	r1, r5
 8007548:	4620      	mov	r0, r4
 800754a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800754e:	f7ff bf7f 	b.w	8007450 <igmp_init>

08007552 <ip_shutdown>:
 8007552:	b508      	push	{r3, lr}
 8007554:	f7ff ffde 	bl	8007514 <igmp_shutdown>
 8007558:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800755c:	f7ff bee0 	b.w	8007320 <udp_shutdown>

08007560 <console_init>:
 8007560:	b508      	push	{r3, lr}
 8007562:	f009 ffb5 	bl	80114d0 <uart0_init>
 8007566:	4804      	ldr	r0, [pc, #16]	; (8007578 <console_init+0x18>)
 8007568:	f009 ffe2 	bl	8011530 <uart0_puts>
 800756c:	4803      	ldr	r0, [pc, #12]	; (800757c <console_init+0x1c>)
 800756e:	f009 ffdf 	bl	8011530 <uart0_puts>
 8007572:	2000      	movs	r0, #0
 8007574:	bd08      	pop	{r3, pc}
 8007576:	bf00      	nop
 8007578:	080134df 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r7, sl, ip, sp}
 800757c:	08015278 	stmdaeq	r1, {r3, r4, r5, r6, r9, ip, lr}

08007580 <net_handle>:
 8007580:	b510      	push	{r4, lr}
 8007582:	4c0c      	ldr	r4, [pc, #48]	; (80075b4 <net_handle+0x34>)
 8007584:	4620      	mov	r0, r4
 8007586:	f00a fed3 	bl	8012330 <emac_eth_recv>
 800758a:	2800      	cmp	r0, #0
 800758c:	dd07      	ble.n	800759e <net_handle+0x1e>
 800758e:	6820      	ldr	r0, [r4, #0]
 8007590:	8983      	ldrh	r3, [r0, #12]
 8007592:	2b08      	cmp	r3, #8
 8007594:	d107      	bne.n	80075a6 <net_handle+0x26>
 8007596:	f000 fa71 	bl	8007a7c <ip_handle>
 800759a:	f00a fedd 	bl	8012358 <emac_free_pkt>
 800759e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80075a2:	f005 bf97 	b.w	800d4d4 <net_timers_run>
 80075a6:	f5b3 6fc1 	cmp.w	r3, #1544	; 0x608
 80075aa:	d1f6      	bne.n	800759a <net_handle+0x1a>
 80075ac:	f000 fa0a 	bl	80079c4 <arp_handle>
 80075b0:	e7f3      	b.n	800759a <net_handle+0x1a>
 80075b2:	bf00      	nop
 80075b4:	20005274 	andcs	r5, r0, r4, ror r2

080075b8 <tcp_handle>:
 80075b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80075bc:	4605      	mov	r5, r0
 80075be:	8c43      	ldrh	r3, [r0, #34]	; 0x22
 80075c0:	b085      	sub	sp, #20
 80075c2:	ba5b      	rev16	r3, r3
 80075c4:	8443      	strh	r3, [r0, #34]	; 0x22
 80075c6:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 80075c8:	f8b0 b010 	ldrh.w	fp, [r0, #16]
 80075cc:	ba5b      	rev16	r3, r3
 80075ce:	8483      	strh	r3, [r0, #36]	; 0x24
 80075d0:	f890 802e 	ldrb.w	r8, [r0, #46]	; 0x2e
 80075d4:	f005 fff2 	bl	800d5bc <_bswap32>
 80075d8:	8e2b      	ldrh	r3, [r5, #48]	; 0x30
 80075da:	4ca6      	ldr	r4, [pc, #664]	; (8007874 <tcp_handle+0x2bc>)
 80075dc:	ba5b      	rev16	r3, r3
 80075de:	862b      	strh	r3, [r5, #48]	; 0x30
 80075e0:	8eab      	ldrh	r3, [r5, #52]	; 0x34
 80075e2:	8822      	ldrh	r2, [r4, #0]
 80075e4:	ba5b      	rev16	r3, r3
 80075e6:	86ab      	strh	r3, [r5, #52]	; 0x34
 80075e8:	8cab      	ldrh	r3, [r5, #36]	; 0x24
 80075ea:	429a      	cmp	r2, r3
 80075ec:	d14d      	bne.n	800768a <tcp_handle+0xd2>
 80075ee:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 80075f2:	2b01      	cmp	r3, #1
 80075f4:	d00d      	beq.n	8007612 <tcp_handle+0x5a>
 80075f6:	2204      	movs	r2, #4
 80075f8:	4668      	mov	r0, sp
 80075fa:	f105 011a 	add.w	r1, r5, #26
 80075fe:	f005 ffd3 	bl	800d5a8 <memcpy.isra.0>
 8007602:	8862      	ldrh	r2, [r4, #2]
 8007604:	8c6b      	ldrh	r3, [r5, #34]	; 0x22
 8007606:	429a      	cmp	r2, r3
 8007608:	d13f      	bne.n	800768a <tcp_handle+0xd2>
 800760a:	6862      	ldr	r2, [r4, #4]
 800760c:	9b00      	ldr	r3, [sp, #0]
 800760e:	429a      	cmp	r2, r3
 8007610:	d13b      	bne.n	800768a <tcp_handle+0xd2>
 8007612:	2204      	movs	r2, #4
 8007614:	f105 012a 	add.w	r1, r5, #42	; 0x2a
 8007618:	eb0d 0002 	add.w	r0, sp, r2
 800761c:	f005 ffc4 	bl	800d5a8 <memcpy.isra.0>
 8007620:	2204      	movs	r2, #4
 8007622:	f105 0126 	add.w	r1, r5, #38	; 0x26
 8007626:	eb0d 0002 	add.w	r0, sp, r2
 800762a:	9e01      	ldr	r6, [sp, #4]
 800762c:	f005 ffbc 	bl	800d5a8 <memcpy.isra.0>
 8007630:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 8007634:	9f01      	ldr	r7, [sp, #4]
 8007636:	2a01      	cmp	r2, #1
 8007638:	f8b5 a030 	ldrh.w	sl, [r5, #48]	; 0x30
 800763c:	d01b      	beq.n	8007676 <tcp_handle+0xbe>
 800763e:	1ed3      	subs	r3, r2, #3
 8007640:	2b07      	cmp	r3, #7
 8007642:	d822      	bhi.n	800768a <tcp_handle+0xd2>
 8007644:	ea4f 1318 	mov.w	r3, r8, lsr #4
 8007648:	f64f 78ec 	movw	r8, #65516	; 0xffec
 800764c:	fa9b fb9b 	rev16.w	fp, fp
 8007650:	eba8 0883 	sub.w	r8, r8, r3, lsl #2
 8007654:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 8007656:	44d8      	add	r8, fp
 8007658:	f895 002f 	ldrb.w	r0, [r5, #47]	; 0x2f
 800765c:	ea4f 0983 	mov.w	r9, r3, lsl #2
 8007660:	fa1f f888 	uxth.w	r8, r8
 8007664:	2900      	cmp	r1, #0
 8007666:	d142      	bne.n	80076ee <tcp_handle+0x136>
 8007668:	f1b8 0f00 	cmp.w	r8, #0
 800766c:	d16b      	bne.n	8007746 <tcp_handle+0x18e>
 800766e:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007670:	42bb      	cmp	r3, r7
 8007672:	d168      	bne.n	8007746 <tcp_handle+0x18e>
 8007674:	e048      	b.n	8007708 <tcp_handle+0x150>
 8007676:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 800767a:	075a      	lsls	r2, r3, #29
 800767c:	d405      	bmi.n	800768a <tcp_handle+0xd2>
 800767e:	06d8      	lsls	r0, r3, #27
 8007680:	d506      	bpl.n	8007690 <tcp_handle+0xd8>
 8007682:	4628      	mov	r0, r5
 8007684:	497b      	ldr	r1, [pc, #492]	; (8007874 <tcp_handle+0x2bc>)
 8007686:	f006 f86d 	bl	800d764 <_send_reset>
 800768a:	b005      	add	sp, #20
 800768c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007690:	0799      	lsls	r1, r3, #30
 8007692:	d5fa      	bpl.n	800768a <tcp_handle+0xd2>
 8007694:	f895 2023 	ldrb.w	r2, [r5, #35]	; 0x23
 8007698:	f895 3022 	ldrb.w	r3, [r5, #34]	; 0x22
 800769c:	4668      	mov	r0, sp
 800769e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80076a2:	f105 011a 	add.w	r1, r5, #26
 80076a6:	2204      	movs	r2, #4
 80076a8:	8063      	strh	r3, [r4, #2]
 80076aa:	f005 ff7d 	bl	800d5a8 <memcpy.isra.0>
 80076ae:	2206      	movs	r2, #6
 80076b0:	9b00      	ldr	r3, [sp, #0]
 80076b2:	18a9      	adds	r1, r5, r2
 80076b4:	4870      	ldr	r0, [pc, #448]	; (8007878 <tcp_handle+0x2c0>)
 80076b6:	6063      	str	r3, [r4, #4]
 80076b8:	f005 ff76 	bl	800d5a8 <memcpy.isra.0>
 80076bc:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80076be:	1c7b      	adds	r3, r7, #1
 80076c0:	e9cd 2301 	strd	r2, r3, [sp, #4]
 80076c4:	6363      	str	r3, [r4, #52]	; 0x34
 80076c6:	2312      	movs	r3, #18
 80076c8:	486a      	ldr	r0, [pc, #424]	; (8007874 <tcp_handle+0x2bc>)
 80076ca:	a901      	add	r1, sp, #4
 80076cc:	f88d 300c 	strb.w	r3, [sp, #12]
 80076d0:	e9c4 7608 	strd	r7, r6, [r4, #32]
 80076d4:	63e7      	str	r7, [r4, #60]	; 0x3c
 80076d6:	f8c4 a018 	str.w	sl, [r4, #24]
 80076da:	f005 ff95 	bl	800d608 <_tcp_send_package>
 80076de:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80076e0:	1c5a      	adds	r2, r3, #1
 80076e2:	e9c4 3204 	strd	r3, r2, [r4, #16]
 80076e6:	2303      	movs	r3, #3
 80076e8:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 80076ec:	e7cd      	b.n	800768a <tcp_handle+0xd2>
 80076ee:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80076f0:	eba3 0c07 	sub.w	ip, r3, r7
 80076f4:	f1b8 0f00 	cmp.w	r8, #0
 80076f8:	d10d      	bne.n	8007716 <tcp_handle+0x15e>
 80076fa:	f1bc 0f00 	cmp.w	ip, #0
 80076fe:	dc22      	bgt.n	8007746 <tcp_handle+0x18e>
 8007700:	1afb      	subs	r3, r7, r3
 8007702:	1a5b      	subs	r3, r3, r1
 8007704:	2b00      	cmp	r3, #0
 8007706:	da1e      	bge.n	8007746 <tcp_handle+0x18e>
 8007708:	0743      	lsls	r3, r0, #29
 800770a:	d530      	bpl.n	800776e <tcp_handle+0x1b6>
 800770c:	8821      	ldrh	r1, [r4, #0]
 800770e:	4859      	ldr	r0, [pc, #356]	; (8007874 <tcp_handle+0x2bc>)
 8007710:	f005 ff30 	bl	800d574 <_init_tcb>
 8007714:	e7b9      	b.n	800768a <tcp_handle+0xd2>
 8007716:	f1bc 0f00 	cmp.w	ip, #0
 800771a:	dc06      	bgt.n	800772a <tcp_handle+0x172>
 800771c:	eba7 0c03 	sub.w	ip, r7, r3
 8007720:	ebac 0c01 	sub.w	ip, ip, r1
 8007724:	f1bc 0f00 	cmp.w	ip, #0
 8007728:	dbee      	blt.n	8007708 <tcp_handle+0x150>
 800772a:	eb08 0c07 	add.w	ip, r8, r7
 800772e:	f103 0e01 	add.w	lr, r3, #1
 8007732:	ebae 0e0c 	sub.w	lr, lr, ip
 8007736:	f1be 0f00 	cmp.w	lr, #0
 800773a:	dc04      	bgt.n	8007746 <tcp_handle+0x18e>
 800773c:	43db      	mvns	r3, r3
 800773e:	1a5b      	subs	r3, r3, r1
 8007740:	eb13 0f0c 	cmn.w	r3, ip
 8007744:	d4e0      	bmi.n	8007708 <tcp_handle+0x150>
 8007746:	0742      	lsls	r2, r0, #29
 8007748:	d505      	bpl.n	8007756 <tcp_handle+0x19e>
 800774a:	8821      	ldrh	r1, [r4, #0]
 800774c:	4849      	ldr	r0, [pc, #292]	; (8007874 <tcp_handle+0x2bc>)
 800774e:	f005 ff11 	bl	800d574 <_init_tcb>
 8007752:	2301      	movs	r3, #1
 8007754:	e7c8      	b.n	80076e8 <tcp_handle+0x130>
 8007756:	6963      	ldr	r3, [r4, #20]
 8007758:	9301      	str	r3, [sp, #4]
 800775a:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800775c:	9302      	str	r3, [sp, #8]
 800775e:	2310      	movs	r3, #16
 8007760:	4844      	ldr	r0, [pc, #272]	; (8007874 <tcp_handle+0x2bc>)
 8007762:	a901      	add	r1, sp, #4
 8007764:	f88d 300c 	strb.w	r3, [sp, #12]
 8007768:	f005 ff4e 	bl	800d608 <_tcp_send_package>
 800776c:	e78d      	b.n	800768a <tcp_handle+0xd2>
 800776e:	0781      	lsls	r1, r0, #30
 8007770:	d505      	bpl.n	800777e <tcp_handle+0x1c6>
 8007772:	2a03      	cmp	r2, #3
 8007774:	d0ed      	beq.n	8007752 <tcp_handle+0x19a>
 8007776:	4628      	mov	r0, r5
 8007778:	493e      	ldr	r1, [pc, #248]	; (8007874 <tcp_handle+0x2bc>)
 800777a:	f005 fff3 	bl	800d764 <_send_reset>
 800777e:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 8007782:	06da      	lsls	r2, r3, #27
 8007784:	d581      	bpl.n	800768a <tcp_handle+0xd2>
 8007786:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800778a:	3b03      	subs	r3, #3
 800778c:	2b07      	cmp	r3, #7
 800778e:	d818      	bhi.n	80077c2 <tcp_handle+0x20a>
 8007790:	e8df f003 	tbb	[pc, r3]
 8007794:	76767604 	ldrbtvc	r7, [r6], -r4, lsl #12
 8007798:	a69d7676 			; <UNDEFINED> instruction: 0xa69d7676
 800779c:	6923      	ldr	r3, [r4, #16]
 800779e:	1b9b      	subs	r3, r3, r6
 80077a0:	2b00      	cmp	r3, #0
 80077a2:	dc0a      	bgt.n	80077ba <tcp_handle+0x202>
 80077a4:	6963      	ldr	r3, [r4, #20]
 80077a6:	1af3      	subs	r3, r6, r3
 80077a8:	2b00      	cmp	r3, #0
 80077aa:	dc06      	bgt.n	80077ba <tcp_handle+0x202>
 80077ac:	2304      	movs	r3, #4
 80077ae:	e9c4 7608 	strd	r7, r6, [r4, #32]
 80077b2:	f8c4 a018 	str.w	sl, [r4, #24]
 80077b6:	6126      	str	r6, [r4, #16]
 80077b8:	e796      	b.n	80076e8 <tcp_handle+0x130>
 80077ba:	4628      	mov	r0, r5
 80077bc:	492d      	ldr	r1, [pc, #180]	; (8007874 <tcp_handle+0x2bc>)
 80077be:	f005 ffd1 	bl	800d764 <_send_reset>
 80077c2:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 80077c6:	3b04      	subs	r3, #4
 80077c8:	2b02      	cmp	r3, #2
 80077ca:	d830      	bhi.n	800782e <tcp_handle+0x276>
 80077cc:	f1b8 0f00 	cmp.w	r8, #0
 80077d0:	d02d      	beq.n	800782e <tcp_handle+0x276>
 80077d2:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80077d4:	42bb      	cmp	r3, r7
 80077d6:	f040 8092 	bne.w	80078fe <tcp_handle+0x346>
 80077da:	f240 53b6 	movw	r3, #1462	; 0x5b6
 80077de:	f8df a09c 	ldr.w	sl, [pc, #156]	; 800787c <tcp_handle+0x2c4>
 80077e2:	f105 0122 	add.w	r1, r5, #34	; 0x22
 80077e6:	f8ba 7000 	ldrh.w	r7, [sl]
 80077ea:	4642      	mov	r2, r8
 80077ec:	435f      	muls	r7, r3
 80077ee:	1d38      	adds	r0, r7, #4
 80077f0:	4449      	add	r1, r9
 80077f2:	4450      	add	r0, sl
 80077f4:	f005 fed8 	bl	800d5a8 <memcpy.isra.0>
 80077f8:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 80077fa:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80077fc:	f2a2 52b4 	subw	r2, r2, #1460	; 0x5b4
 8007800:	8722      	strh	r2, [r4, #56]	; 0x38
 8007802:	6962      	ldr	r2, [r4, #20]
 8007804:	4443      	add	r3, r8
 8007806:	e9cd 2301 	strd	r2, r3, [sp, #4]
 800780a:	6363      	str	r3, [r4, #52]	; 0x34
 800780c:	2310      	movs	r3, #16
 800780e:	4457      	add	r7, sl
 8007810:	4818      	ldr	r0, [pc, #96]	; (8007874 <tcp_handle+0x2bc>)
 8007812:	f8a7 85b8 	strh.w	r8, [r7, #1464]	; 0x5b8
 8007816:	a901      	add	r1, sp, #4
 8007818:	f88d 300c 	strb.w	r3, [sp, #12]
 800781c:	f005 fef4 	bl	800d608 <_tcp_send_package>
 8007820:	f8ba 3000 	ldrh.w	r3, [sl]
 8007824:	3301      	adds	r3, #1
 8007826:	f003 0301 	and.w	r3, r3, #1
 800782a:	f8aa 3000 	strh.w	r3, [sl]
 800782e:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8007832:	2b02      	cmp	r3, #2
 8007834:	f67f af29 	bls.w	800768a <tcp_handle+0xd2>
 8007838:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 800783c:	07db      	lsls	r3, r3, #31
 800783e:	f57f af24 	bpl.w	800768a <tcp_handle+0xd2>
 8007842:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007844:	6962      	ldr	r2, [r4, #20]
 8007846:	3301      	adds	r3, #1
 8007848:	e9cd 2301 	strd	r2, r3, [sp, #4]
 800784c:	6363      	str	r3, [r4, #52]	; 0x34
 800784e:	2310      	movs	r3, #16
 8007850:	4808      	ldr	r0, [pc, #32]	; (8007874 <tcp_handle+0x2bc>)
 8007852:	a901      	add	r1, sp, #4
 8007854:	f88d 300c 	strb.w	r3, [sp, #12]
 8007858:	f005 fed6 	bl	800d608 <_tcp_send_package>
 800785c:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8007860:	2b05      	cmp	r3, #5
 8007862:	d054      	beq.n	800790e <tcp_handle+0x356>
 8007864:	d84e      	bhi.n	8007904 <tcp_handle+0x34c>
 8007866:	3b03      	subs	r3, #3
 8007868:	2b01      	cmp	r3, #1
 800786a:	f63f af0e 	bhi.w	800768a <tcp_handle+0xd2>
 800786e:	2307      	movs	r3, #7
 8007870:	e73a      	b.n	80076e8 <tcp_handle+0x130>
 8007872:	bf00      	nop
 8007874:	20005dfc 	strdcs	r5, [r0], -ip
 8007878:	20005e04 	andcs	r5, r0, r4, lsl #28
 800787c:	2000528c 	andcs	r5, r0, ip, lsl #5
 8007880:	6923      	ldr	r3, [r4, #16]
 8007882:	1b99      	subs	r1, r3, r6
 8007884:	d513      	bpl.n	80078ae <tcp_handle+0x2f6>
 8007886:	6962      	ldr	r2, [r4, #20]
 8007888:	1ab2      	subs	r2, r6, r2
 800788a:	2a00      	cmp	r2, #0
 800788c:	dc0f      	bgt.n	80078ae <tcp_handle+0x2f6>
 800788e:	6126      	str	r6, [r4, #16]
 8007890:	6a23      	ldr	r3, [r4, #32]
 8007892:	1bda      	subs	r2, r3, r7
 8007894:	2a00      	cmp	r2, #0
 8007896:	db05      	blt.n	80078a4 <tcp_handle+0x2ec>
 8007898:	42bb      	cmp	r3, r7
 800789a:	d192      	bne.n	80077c2 <tcp_handle+0x20a>
 800789c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800789e:	1b9b      	subs	r3, r3, r6
 80078a0:	2b00      	cmp	r3, #0
 80078a2:	dc8e      	bgt.n	80077c2 <tcp_handle+0x20a>
 80078a4:	e9c4 7608 	strd	r7, r6, [r4, #32]
 80078a8:	f8c4 a018 	str.w	sl, [r4, #24]
 80078ac:	e789      	b.n	80077c2 <tcp_handle+0x20a>
 80078ae:	1af3      	subs	r3, r6, r3
 80078b0:	2b00      	cmp	r3, #0
 80078b2:	dc06      	bgt.n	80078c2 <tcp_handle+0x30a>
 80078b4:	2900      	cmp	r1, #0
 80078b6:	dc84      	bgt.n	80077c2 <tcp_handle+0x20a>
 80078b8:	6963      	ldr	r3, [r4, #20]
 80078ba:	1af3      	subs	r3, r6, r3
 80078bc:	2b00      	cmp	r3, #0
 80078be:	dc80      	bgt.n	80077c2 <tcp_handle+0x20a>
 80078c0:	e7e6      	b.n	8007890 <tcp_handle+0x2d8>
 80078c2:	6963      	ldr	r3, [r4, #20]
 80078c4:	1b9a      	subs	r2, r3, r6
 80078c6:	2a00      	cmp	r2, #0
 80078c8:	f6bf af7b 	bge.w	80077c2 <tcp_handle+0x20a>
 80078cc:	e744      	b.n	8007758 <tcp_handle+0x1a0>
 80078ce:	6963      	ldr	r3, [r4, #20]
 80078d0:	42b3      	cmp	r3, r6
 80078d2:	f47f af76 	bne.w	80077c2 <tcp_handle+0x20a>
 80078d6:	8821      	ldrh	r1, [r4, #0]
 80078d8:	480f      	ldr	r0, [pc, #60]	; (8007918 <tcp_handle+0x360>)
 80078da:	f005 fe4b 	bl	800d574 <_init_tcb>
 80078de:	e770      	b.n	80077c2 <tcp_handle+0x20a>
 80078e0:	6963      	ldr	r3, [r4, #20]
 80078e2:	42b3      	cmp	r3, r6
 80078e4:	f47f af6d 	bne.w	80077c2 <tcp_handle+0x20a>
 80078e8:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80078ea:	480b      	ldr	r0, [pc, #44]	; (8007918 <tcp_handle+0x360>)
 80078ec:	9302      	str	r3, [sp, #8]
 80078ee:	2310      	movs	r3, #16
 80078f0:	a901      	add	r1, sp, #4
 80078f2:	9601      	str	r6, [sp, #4]
 80078f4:	f88d 300c 	strb.w	r3, [sp, #12]
 80078f8:	f005 fe86 	bl	800d608 <_tcp_send_package>
 80078fc:	e761      	b.n	80077c2 <tcp_handle+0x20a>
 80078fe:	6962      	ldr	r2, [r4, #20]
 8007900:	9201      	str	r2, [sp, #4]
 8007902:	e72b      	b.n	800775c <tcp_handle+0x1a4>
 8007904:	2b06      	cmp	r3, #6
 8007906:	f47f aec0 	bne.w	800768a <tcp_handle+0xd2>
 800790a:	230a      	movs	r3, #10
 800790c:	e6ec      	b.n	80076e8 <tcp_handle+0x130>
 800790e:	6963      	ldr	r3, [r4, #20]
 8007910:	42b3      	cmp	r3, r6
 8007912:	d0fa      	beq.n	800790a <tcp_handle+0x352>
 8007914:	2308      	movs	r3, #8
 8007916:	e6e7      	b.n	80076e8 <tcp_handle+0x130>
 8007918:	20005dfc 	strdcs	r5, [r0], -ip

0800791c <udp_handle>:
 800791c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8007920:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 8007922:	4607      	mov	r7, r0
 8007924:	ba5b      	rev16	r3, r3
 8007926:	b29b      	uxth	r3, r3
 8007928:	f1a3 0244 	sub.w	r2, r3, #68	; 0x44
 800792c:	2a01      	cmp	r2, #1
 800792e:	d904      	bls.n	800793a <udp_handle+0x1e>
 8007930:	2b7b      	cmp	r3, #123	; 0x7b
 8007932:	d002      	beq.n	800793a <udp_handle+0x1e>
 8007934:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8007938:	d308      	bcc.n	800794c <udp_handle+0x30>
 800793a:	2400      	movs	r4, #0
 800793c:	4a1f      	ldr	r2, [pc, #124]	; (80079bc <udp_handle+0xa0>)
 800793e:	f852 1b04 	ldr.w	r1, [r2], #4
 8007942:	4299      	cmp	r1, r3
 8007944:	d005      	beq.n	8007952 <udp_handle+0x36>
 8007946:	3401      	adds	r4, #1
 8007948:	2c08      	cmp	r4, #8
 800794a:	d1f8      	bne.n	800793e <udp_handle+0x22>
 800794c:	b002      	add	sp, #8
 800794e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007952:	f640 3394 	movw	r3, #2964	; 0xb94
 8007956:	8cfe      	ldrh	r6, [r7, #38]	; 0x26
 8007958:	435c      	muls	r4, r3
 800795a:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 800795e:	ba76      	rev16	r6, r6
 8007960:	3e08      	subs	r6, #8
 8007962:	b2b6      	uxth	r6, r6
 8007964:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 8007968:	bf28      	it	cs
 800796a:	f44f 66b8 	movcs.w	r6, #1472	; 0x5c0
 800796e:	f8df 8050 	ldr.w	r8, [pc, #80]	; 80079c0 <udp_handle+0xa4>
 8007972:	1d20      	adds	r0, r4, #4
 8007974:	f838 5004 	ldrh.w	r5, [r8, r4]
 8007978:	4632      	mov	r2, r6
 800797a:	435d      	muls	r5, r3
 800797c:	4428      	add	r0, r5
 800797e:	f107 012a 	add.w	r1, r7, #42	; 0x2a
 8007982:	4440      	add	r0, r8
 8007984:	f005 ff9c 	bl	800d8c0 <memcpy.isra.0>
 8007988:	2204      	movs	r2, #4
 800798a:	f107 011a 	add.w	r1, r7, #26
 800798e:	eb0d 0002 	add.w	r0, sp, r2
 8007992:	f005 ff95 	bl	800d8c0 <memcpy.isra.0>
 8007996:	9a01      	ldr	r2, [sp, #4]
 8007998:	192b      	adds	r3, r5, r4
 800799a:	4443      	add	r3, r8
 800799c:	f8c3 25c4 	str.w	r2, [r3, #1476]	; 0x5c4
 80079a0:	8c7a      	ldrh	r2, [r7, #34]	; 0x22
 80079a2:	f8a3 65ca 	strh.w	r6, [r3, #1482]	; 0x5ca
 80079a6:	ba52      	rev16	r2, r2
 80079a8:	f8a3 25c8 	strh.w	r2, [r3, #1480]	; 0x5c8
 80079ac:	f838 3004 	ldrh.w	r3, [r8, r4]
 80079b0:	3301      	adds	r3, #1
 80079b2:	f003 0301 	and.w	r3, r3, #1
 80079b6:	f828 3004 	strh.w	r3, [r8, r4]
 80079ba:	e7c7      	b.n	800794c <udp_handle+0x30>
 80079bc:	2000643c 	andcs	r6, r0, ip, lsr r4
 80079c0:	2000645c 	andcs	r6, r0, ip, asr r4

080079c4 <arp_handle>:
 80079c4:	8a83      	ldrh	r3, [r0, #20]
 80079c6:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80079ca:	d003      	beq.n	80079d4 <arp_handle+0x10>
 80079cc:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80079d0:	d002      	beq.n	80079d8 <arp_handle+0x14>
 80079d2:	4770      	bx	lr
 80079d4:	f007 b996 	b.w	800ed04 <arp_handle_request>
 80079d8:	f007 b9bc 	b.w	800ed54 <arp_handle_reply>

080079dc <igmp_handle>:
 80079dc:	7b83      	ldrb	r3, [r0, #14]
 80079de:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80079e2:	2b45      	cmp	r3, #69	; 0x45
 80079e4:	d116      	bne.n	8007a14 <igmp_handle+0x38>
 80079e6:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 80079ea:	2b11      	cmp	r3, #17
 80079ec:	d112      	bne.n	8007a14 <igmp_handle+0x38>
 80079ee:	4b20      	ldr	r3, [pc, #128]	; (8007a70 <igmp_handle+0x94>)
 80079f0:	f100 051e 	add.w	r5, r0, #30
 80079f4:	9300      	str	r3, [sp, #0]
 80079f6:	466a      	mov	r2, sp
 80079f8:	462b      	mov	r3, r5
 80079fa:	f100 0622 	add.w	r6, r0, #34	; 0x22
 80079fe:	42b3      	cmp	r3, r6
 8007a00:	d10b      	bne.n	8007a1a <igmp_handle+0x3e>
 8007a02:	2401      	movs	r4, #1
 8007a04:	2100      	movs	r1, #0
 8007a06:	f04f 0c01 	mov.w	ip, #1
 8007a0a:	4b1a      	ldr	r3, [pc, #104]	; (8007a74 <igmp_handle+0x98>)
 8007a0c:	4a1a      	ldr	r2, [pc, #104]	; (8007a78 <igmp_handle+0x9c>)
 8007a0e:	681f      	ldr	r7, [r3, #0]
 8007a10:	428f      	cmp	r7, r1
 8007a12:	d10a      	bne.n	8007a2a <igmp_handle+0x4e>
 8007a14:	b003      	add	sp, #12
 8007a16:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8007a1a:	f813 4b01 	ldrb.w	r4, [r3], #1
 8007a1e:	f812 1b01 	ldrb.w	r1, [r2], #1
 8007a22:	428c      	cmp	r4, r1
 8007a24:	d0eb      	beq.n	80079fe <igmp_handle+0x22>
 8007a26:	2400      	movs	r4, #0
 8007a28:	e7ec      	b.n	8007a04 <igmp_handle+0x28>
 8007a2a:	6813      	ldr	r3, [r2, #0]
 8007a2c:	9301      	str	r3, [sp, #4]
 8007a2e:	b924      	cbnz	r4, 8007a3a <igmp_handle+0x5e>
 8007a30:	462b      	mov	r3, r5
 8007a32:	f10d 0e04 	add.w	lr, sp, #4
 8007a36:	42b3      	cmp	r3, r6
 8007a38:	d10e      	bne.n	8007a58 <igmp_handle+0x7c>
 8007a3a:	f892 e005 	ldrb.w	lr, [r2, #5]
 8007a3e:	f890 3023 	ldrb.w	r3, [r0, #35]	; 0x23
 8007a42:	f1be 0f01 	cmp.w	lr, #1
 8007a46:	d110      	bne.n	8007a6a <igmp_handle+0x8e>
 8007a48:	f892 e004 	ldrb.w	lr, [r2, #4]
 8007a4c:	459e      	cmp	lr, r3
 8007a4e:	d909      	bls.n	8007a64 <igmp_handle+0x88>
 8007a50:	085b      	lsrs	r3, r3, #1
 8007a52:	3301      	adds	r3, #1
 8007a54:	7113      	strb	r3, [r2, #4]
 8007a56:	e005      	b.n	8007a64 <igmp_handle+0x88>
 8007a58:	f813 9b01 	ldrb.w	r9, [r3], #1
 8007a5c:	f81e 8b01 	ldrb.w	r8, [lr], #1
 8007a60:	45c1      	cmp	r9, r8
 8007a62:	d0e8      	beq.n	8007a36 <igmp_handle+0x5a>
 8007a64:	3101      	adds	r1, #1
 8007a66:	3208      	adds	r2, #8
 8007a68:	e7d2      	b.n	8007a10 <igmp_handle+0x34>
 8007a6a:	f882 c005 	strb.w	ip, [r2, #5]
 8007a6e:	e7ef      	b.n	8007a50 <igmp_handle+0x74>
 8007a70:	010000e0 	smlatteq	r0, r0, r0, r0
 8007a74:	2000d0ec 	andcs	sp, r0, ip, ror #1
 8007a78:	2000cfc8 	andcs	ip, r0, r8, asr #31

08007a7c <ip_handle>:
 8007a7c:	7b82      	ldrb	r2, [r0, #14]
 8007a7e:	7dc3      	ldrb	r3, [r0, #23]
 8007a80:	2a45      	cmp	r2, #69	; 0x45
 8007a82:	d003      	beq.n	8007a8c <ip_handle+0x10>
 8007a84:	2b02      	cmp	r3, #2
 8007a86:	d111      	bne.n	8007aac <ip_handle+0x30>
 8007a88:	f7ff bfa8 	b.w	80079dc <igmp_handle>
 8007a8c:	2b06      	cmp	r3, #6
 8007a8e:	d00b      	beq.n	8007aa8 <ip_handle+0x2c>
 8007a90:	d804      	bhi.n	8007a9c <ip_handle+0x20>
 8007a92:	2b01      	cmp	r3, #1
 8007a94:	d006      	beq.n	8007aa4 <ip_handle+0x28>
 8007a96:	2b02      	cmp	r3, #2
 8007a98:	d0f6      	beq.n	8007a88 <ip_handle+0xc>
 8007a9a:	4770      	bx	lr
 8007a9c:	2b11      	cmp	r3, #17
 8007a9e:	d105      	bne.n	8007aac <ip_handle+0x30>
 8007aa0:	f7ff bf3c 	b.w	800791c <udp_handle>
 8007aa4:	f000 b804 	b.w	8007ab0 <icmp_handle>
 8007aa8:	f7ff bd86 	b.w	80075b8 <tcp_handle>
 8007aac:	4770      	bx	lr
	...

08007ab0 <icmp_handle>:
 8007ab0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007ab2:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 8007ab6:	4604      	mov	r4, r0
 8007ab8:	2b08      	cmp	r3, #8
 8007aba:	d13e      	bne.n	8007b3a <icmp_handle+0x8a>
 8007abc:	f890 5023 	ldrb.w	r5, [r0, #35]	; 0x23
 8007ac0:	2d00      	cmp	r5, #0
 8007ac2:	d13a      	bne.n	8007b3a <icmp_handle+0x8a>
 8007ac4:	1d86      	adds	r6, r0, #6
 8007ac6:	4631      	mov	r1, r6
 8007ac8:	2206      	movs	r2, #6
 8007aca:	f007 fcdb 	bl	800f484 <memcpy.isra.0>
 8007ace:	4630      	mov	r0, r6
 8007ad0:	2206      	movs	r2, #6
 8007ad2:	491b      	ldr	r1, [pc, #108]	; (8007b40 <icmp_handle+0x90>)
 8007ad4:	f007 fcd6 	bl	800f484 <memcpy.isra.0>
 8007ad8:	8a63      	ldrh	r3, [r4, #18]
 8007ada:	f104 061a 	add.w	r6, r4, #26
 8007ade:	43db      	mvns	r3, r3
 8007ae0:	4631      	mov	r1, r6
 8007ae2:	2204      	movs	r2, #4
 8007ae4:	8263      	strh	r3, [r4, #18]
 8007ae6:	f104 001e 	add.w	r0, r4, #30
 8007aea:	f007 fccb 	bl	800f484 <memcpy.isra.0>
 8007aee:	2204      	movs	r2, #4
 8007af0:	4b14      	ldr	r3, [pc, #80]	; (8007b44 <icmp_handle+0x94>)
 8007af2:	eb0d 0102 	add.w	r1, sp, r2
 8007af6:	681b      	ldr	r3, [r3, #0]
 8007af8:	4630      	mov	r0, r6
 8007afa:	f104 060e 	add.w	r6, r4, #14
 8007afe:	9301      	str	r3, [sp, #4]
 8007b00:	f007 fcc0 	bl	800f484 <memcpy.isra.0>
 8007b04:	2114      	movs	r1, #20
 8007b06:	4630      	mov	r0, r6
 8007b08:	7625      	strb	r5, [r4, #24]
 8007b0a:	7665      	strb	r5, [r4, #25]
 8007b0c:	f007 fc9d 	bl	800f44a <net_chksum>
 8007b10:	8a21      	ldrh	r1, [r4, #16]
 8007b12:	8320      	strh	r0, [r4, #24]
 8007b14:	ba49      	rev16	r1, r1
 8007b16:	b289      	uxth	r1, r1
 8007b18:	4630      	mov	r0, r6
 8007b1a:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8007b1e:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8007b22:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 8007b26:	f007 fc90 	bl	800f44a <net_chksum>
 8007b2a:	8a21      	ldrh	r1, [r4, #16]
 8007b2c:	84a0      	strh	r0, [r4, #36]	; 0x24
 8007b2e:	ba49      	rev16	r1, r1
 8007b30:	b289      	uxth	r1, r1
 8007b32:	4620      	mov	r0, r4
 8007b34:	310e      	adds	r1, #14
 8007b36:	f00a fc13 	bl	8012360 <emac_eth_send>
 8007b3a:	b002      	add	sp, #8
 8007b3c:	bd70      	pop	{r4, r5, r6, pc}
 8007b3e:	bf00      	nop
 8007b40:	2000526c 	andcs	r5, r0, ip, ror #4
 8007b44:	20005260 	andcs	r5, r0, r0, ror #4

08007b48 <__aeabi_drsub>:
 8007b48:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8007b4c:	e002      	b.n	8007b54 <__adddf3>
 8007b4e:	bf00      	nop

08007b50 <__aeabi_dsub>:
 8007b50:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

08007b54 <__adddf3>:
 8007b54:	b530      	push	{r4, r5, lr}
 8007b56:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8007b5a:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8007b5e:	ea94 0f05 	teq	r4, r5
 8007b62:	bf08      	it	eq
 8007b64:	ea90 0f02 	teqeq	r0, r2
 8007b68:	bf1f      	itttt	ne
 8007b6a:	ea54 0c00 	orrsne.w	ip, r4, r0
 8007b6e:	ea55 0c02 	orrsne.w	ip, r5, r2
 8007b72:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8007b76:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8007b7a:	f000 80e2 	beq.w	8007d42 <__adddf3+0x1ee>
 8007b7e:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8007b82:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8007b86:	bfb8      	it	lt
 8007b88:	426d      	neglt	r5, r5
 8007b8a:	dd0c      	ble.n	8007ba6 <__adddf3+0x52>
 8007b8c:	442c      	add	r4, r5
 8007b8e:	ea80 0202 	eor.w	r2, r0, r2
 8007b92:	ea81 0303 	eor.w	r3, r1, r3
 8007b96:	ea82 0000 	eor.w	r0, r2, r0
 8007b9a:	ea83 0101 	eor.w	r1, r3, r1
 8007b9e:	ea80 0202 	eor.w	r2, r0, r2
 8007ba2:	ea81 0303 	eor.w	r3, r1, r3
 8007ba6:	2d36      	cmp	r5, #54	; 0x36
 8007ba8:	bf88      	it	hi
 8007baa:	bd30      	pophi	{r4, r5, pc}
 8007bac:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8007bb0:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8007bb4:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8007bb8:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8007bbc:	d002      	beq.n	8007bc4 <__adddf3+0x70>
 8007bbe:	4240      	negs	r0, r0
 8007bc0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8007bc4:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8007bc8:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8007bcc:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8007bd0:	d002      	beq.n	8007bd8 <__adddf3+0x84>
 8007bd2:	4252      	negs	r2, r2
 8007bd4:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8007bd8:	ea94 0f05 	teq	r4, r5
 8007bdc:	f000 80a7 	beq.w	8007d2e <__adddf3+0x1da>
 8007be0:	f1a4 0401 	sub.w	r4, r4, #1
 8007be4:	f1d5 0e20 	rsbs	lr, r5, #32
 8007be8:	db0d      	blt.n	8007c06 <__adddf3+0xb2>
 8007bea:	fa02 fc0e 	lsl.w	ip, r2, lr
 8007bee:	fa22 f205 	lsr.w	r2, r2, r5
 8007bf2:	1880      	adds	r0, r0, r2
 8007bf4:	f141 0100 	adc.w	r1, r1, #0
 8007bf8:	fa03 f20e 	lsl.w	r2, r3, lr
 8007bfc:	1880      	adds	r0, r0, r2
 8007bfe:	fa43 f305 	asr.w	r3, r3, r5
 8007c02:	4159      	adcs	r1, r3
 8007c04:	e00e      	b.n	8007c24 <__adddf3+0xd0>
 8007c06:	f1a5 0520 	sub.w	r5, r5, #32
 8007c0a:	f10e 0e20 	add.w	lr, lr, #32
 8007c0e:	2a01      	cmp	r2, #1
 8007c10:	fa03 fc0e 	lsl.w	ip, r3, lr
 8007c14:	bf28      	it	cs
 8007c16:	f04c 0c02 	orrcs.w	ip, ip, #2
 8007c1a:	fa43 f305 	asr.w	r3, r3, r5
 8007c1e:	18c0      	adds	r0, r0, r3
 8007c20:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8007c24:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8007c28:	d507      	bpl.n	8007c3a <__adddf3+0xe6>
 8007c2a:	f04f 0e00 	mov.w	lr, #0
 8007c2e:	f1dc 0c00 	rsbs	ip, ip, #0
 8007c32:	eb7e 0000 	sbcs.w	r0, lr, r0
 8007c36:	eb6e 0101 	sbc.w	r1, lr, r1
 8007c3a:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8007c3e:	d31b      	bcc.n	8007c78 <__adddf3+0x124>
 8007c40:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 8007c44:	d30c      	bcc.n	8007c60 <__adddf3+0x10c>
 8007c46:	0849      	lsrs	r1, r1, #1
 8007c48:	ea5f 0030 	movs.w	r0, r0, rrx
 8007c4c:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8007c50:	f104 0401 	add.w	r4, r4, #1
 8007c54:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8007c58:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8007c5c:	f080 809a 	bcs.w	8007d94 <__adddf3+0x240>
 8007c60:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8007c64:	bf08      	it	eq
 8007c66:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8007c6a:	f150 0000 	adcs.w	r0, r0, #0
 8007c6e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8007c72:	ea41 0105 	orr.w	r1, r1, r5
 8007c76:	bd30      	pop	{r4, r5, pc}
 8007c78:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8007c7c:	4140      	adcs	r0, r0
 8007c7e:	eb41 0101 	adc.w	r1, r1, r1
 8007c82:	3c01      	subs	r4, #1
 8007c84:	bf28      	it	cs
 8007c86:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 8007c8a:	d2e9      	bcs.n	8007c60 <__adddf3+0x10c>
 8007c8c:	f091 0f00 	teq	r1, #0
 8007c90:	bf04      	itt	eq
 8007c92:	4601      	moveq	r1, r0
 8007c94:	2000      	moveq	r0, #0
 8007c96:	fab1 f381 	clz	r3, r1
 8007c9a:	bf08      	it	eq
 8007c9c:	3320      	addeq	r3, #32
 8007c9e:	f1a3 030b 	sub.w	r3, r3, #11
 8007ca2:	f1b3 0220 	subs.w	r2, r3, #32
 8007ca6:	da0c      	bge.n	8007cc2 <__adddf3+0x16e>
 8007ca8:	320c      	adds	r2, #12
 8007caa:	dd08      	ble.n	8007cbe <__adddf3+0x16a>
 8007cac:	f102 0c14 	add.w	ip, r2, #20
 8007cb0:	f1c2 020c 	rsb	r2, r2, #12
 8007cb4:	fa01 f00c 	lsl.w	r0, r1, ip
 8007cb8:	fa21 f102 	lsr.w	r1, r1, r2
 8007cbc:	e00c      	b.n	8007cd8 <__adddf3+0x184>
 8007cbe:	f102 0214 	add.w	r2, r2, #20
 8007cc2:	bfd8      	it	le
 8007cc4:	f1c2 0c20 	rsble	ip, r2, #32
 8007cc8:	fa01 f102 	lsl.w	r1, r1, r2
 8007ccc:	fa20 fc0c 	lsr.w	ip, r0, ip
 8007cd0:	bfdc      	itt	le
 8007cd2:	ea41 010c 	orrle.w	r1, r1, ip
 8007cd6:	4090      	lslle	r0, r2
 8007cd8:	1ae4      	subs	r4, r4, r3
 8007cda:	bfa2      	ittt	ge
 8007cdc:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8007ce0:	4329      	orrge	r1, r5
 8007ce2:	bd30      	popge	{r4, r5, pc}
 8007ce4:	ea6f 0404 	mvn.w	r4, r4
 8007ce8:	3c1f      	subs	r4, #31
 8007cea:	da1c      	bge.n	8007d26 <__adddf3+0x1d2>
 8007cec:	340c      	adds	r4, #12
 8007cee:	dc0e      	bgt.n	8007d0e <__adddf3+0x1ba>
 8007cf0:	f104 0414 	add.w	r4, r4, #20
 8007cf4:	f1c4 0220 	rsb	r2, r4, #32
 8007cf8:	fa20 f004 	lsr.w	r0, r0, r4
 8007cfc:	fa01 f302 	lsl.w	r3, r1, r2
 8007d00:	ea40 0003 	orr.w	r0, r0, r3
 8007d04:	fa21 f304 	lsr.w	r3, r1, r4
 8007d08:	ea45 0103 	orr.w	r1, r5, r3
 8007d0c:	bd30      	pop	{r4, r5, pc}
 8007d0e:	f1c4 040c 	rsb	r4, r4, #12
 8007d12:	f1c4 0220 	rsb	r2, r4, #32
 8007d16:	fa20 f002 	lsr.w	r0, r0, r2
 8007d1a:	fa01 f304 	lsl.w	r3, r1, r4
 8007d1e:	ea40 0003 	orr.w	r0, r0, r3
 8007d22:	4629      	mov	r1, r5
 8007d24:	bd30      	pop	{r4, r5, pc}
 8007d26:	fa21 f004 	lsr.w	r0, r1, r4
 8007d2a:	4629      	mov	r1, r5
 8007d2c:	bd30      	pop	{r4, r5, pc}
 8007d2e:	f094 0f00 	teq	r4, #0
 8007d32:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 8007d36:	bf06      	itte	eq
 8007d38:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8007d3c:	3401      	addeq	r4, #1
 8007d3e:	3d01      	subne	r5, #1
 8007d40:	e74e      	b.n	8007be0 <__adddf3+0x8c>
 8007d42:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8007d46:	bf18      	it	ne
 8007d48:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8007d4c:	d029      	beq.n	8007da2 <__adddf3+0x24e>
 8007d4e:	ea94 0f05 	teq	r4, r5
 8007d52:	bf08      	it	eq
 8007d54:	ea90 0f02 	teqeq	r0, r2
 8007d58:	d005      	beq.n	8007d66 <__adddf3+0x212>
 8007d5a:	ea54 0c00 	orrs.w	ip, r4, r0
 8007d5e:	bf04      	itt	eq
 8007d60:	4619      	moveq	r1, r3
 8007d62:	4610      	moveq	r0, r2
 8007d64:	bd30      	pop	{r4, r5, pc}
 8007d66:	ea91 0f03 	teq	r1, r3
 8007d6a:	bf1e      	ittt	ne
 8007d6c:	2100      	movne	r1, #0
 8007d6e:	2000      	movne	r0, #0
 8007d70:	bd30      	popne	{r4, r5, pc}
 8007d72:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8007d76:	d105      	bne.n	8007d84 <__adddf3+0x230>
 8007d78:	0040      	lsls	r0, r0, #1
 8007d7a:	4149      	adcs	r1, r1
 8007d7c:	bf28      	it	cs
 8007d7e:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 8007d82:	bd30      	pop	{r4, r5, pc}
 8007d84:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8007d88:	bf3c      	itt	cc
 8007d8a:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8007d8e:	bd30      	popcc	{r4, r5, pc}
 8007d90:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8007d94:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8007d98:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8007d9c:	f04f 0000 	mov.w	r0, #0
 8007da0:	bd30      	pop	{r4, r5, pc}
 8007da2:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8007da6:	bf1a      	itte	ne
 8007da8:	4619      	movne	r1, r3
 8007daa:	4610      	movne	r0, r2
 8007dac:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8007db0:	bf1c      	itt	ne
 8007db2:	460b      	movne	r3, r1
 8007db4:	4602      	movne	r2, r0
 8007db6:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8007dba:	bf06      	itte	eq
 8007dbc:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8007dc0:	ea91 0f03 	teqeq	r1, r3
 8007dc4:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8007dc8:	bd30      	pop	{r4, r5, pc}
 8007dca:	bf00      	nop

08007dcc <__aeabi_ui2d>:
 8007dcc:	f090 0f00 	teq	r0, #0
 8007dd0:	bf04      	itt	eq
 8007dd2:	2100      	moveq	r1, #0
 8007dd4:	4770      	bxeq	lr
 8007dd6:	b530      	push	{r4, r5, lr}
 8007dd8:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8007ddc:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8007de0:	f04f 0500 	mov.w	r5, #0
 8007de4:	f04f 0100 	mov.w	r1, #0
 8007de8:	e750      	b.n	8007c8c <__adddf3+0x138>
 8007dea:	bf00      	nop

08007dec <__aeabi_i2d>:
 8007dec:	f090 0f00 	teq	r0, #0
 8007df0:	bf04      	itt	eq
 8007df2:	2100      	moveq	r1, #0
 8007df4:	4770      	bxeq	lr
 8007df6:	b530      	push	{r4, r5, lr}
 8007df8:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8007dfc:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8007e00:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8007e04:	bf48      	it	mi
 8007e06:	4240      	negmi	r0, r0
 8007e08:	f04f 0100 	mov.w	r1, #0
 8007e0c:	e73e      	b.n	8007c8c <__adddf3+0x138>
 8007e0e:	bf00      	nop

08007e10 <__aeabi_f2d>:
 8007e10:	0042      	lsls	r2, r0, #1
 8007e12:	ea4f 01e2 	mov.w	r1, r2, asr #3
 8007e16:	ea4f 0131 	mov.w	r1, r1, rrx
 8007e1a:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8007e1e:	bf1f      	itttt	ne
 8007e20:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 8007e24:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8007e28:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8007e2c:	4770      	bxne	lr
 8007e2e:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 8007e32:	bf08      	it	eq
 8007e34:	4770      	bxeq	lr
 8007e36:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8007e3a:	bf04      	itt	eq
 8007e3c:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8007e40:	4770      	bxeq	lr
 8007e42:	b530      	push	{r4, r5, lr}
 8007e44:	f44f 7460 	mov.w	r4, #896	; 0x380
 8007e48:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8007e4c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8007e50:	e71c      	b.n	8007c8c <__adddf3+0x138>
 8007e52:	bf00      	nop

08007e54 <__aeabi_ul2d>:
 8007e54:	ea50 0201 	orrs.w	r2, r0, r1
 8007e58:	bf08      	it	eq
 8007e5a:	4770      	bxeq	lr
 8007e5c:	b530      	push	{r4, r5, lr}
 8007e5e:	f04f 0500 	mov.w	r5, #0
 8007e62:	e00a      	b.n	8007e7a <__aeabi_l2d+0x16>

08007e64 <__aeabi_l2d>:
 8007e64:	ea50 0201 	orrs.w	r2, r0, r1
 8007e68:	bf08      	it	eq
 8007e6a:	4770      	bxeq	lr
 8007e6c:	b530      	push	{r4, r5, lr}
 8007e6e:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 8007e72:	d502      	bpl.n	8007e7a <__aeabi_l2d+0x16>
 8007e74:	4240      	negs	r0, r0
 8007e76:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8007e7a:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8007e7e:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8007e82:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 8007e86:	f43f aed8 	beq.w	8007c3a <__adddf3+0xe6>
 8007e8a:	f04f 0203 	mov.w	r2, #3
 8007e8e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8007e92:	bf18      	it	ne
 8007e94:	3203      	addne	r2, #3
 8007e96:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8007e9a:	bf18      	it	ne
 8007e9c:	3203      	addne	r2, #3
 8007e9e:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 8007ea2:	f1c2 0320 	rsb	r3, r2, #32
 8007ea6:	fa00 fc03 	lsl.w	ip, r0, r3
 8007eaa:	fa20 f002 	lsr.w	r0, r0, r2
 8007eae:	fa01 fe03 	lsl.w	lr, r1, r3
 8007eb2:	ea40 000e 	orr.w	r0, r0, lr
 8007eb6:	fa21 f102 	lsr.w	r1, r1, r2
 8007eba:	4414      	add	r4, r2
 8007ebc:	e6bd      	b.n	8007c3a <__adddf3+0xe6>
 8007ebe:	bf00      	nop

08007ec0 <__aeabi_d2f>:
 8007ec0:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8007ec4:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8007ec8:	bf24      	itt	cs
 8007eca:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8007ece:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8007ed2:	d90d      	bls.n	8007ef0 <__aeabi_d2f+0x30>
 8007ed4:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8007ed8:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8007edc:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8007ee0:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8007ee4:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8007ee8:	bf08      	it	eq
 8007eea:	f020 0001 	biceq.w	r0, r0, #1
 8007eee:	4770      	bx	lr
 8007ef0:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8007ef4:	d121      	bne.n	8007f3a <__aeabi_d2f+0x7a>
 8007ef6:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8007efa:	bfbc      	itt	lt
 8007efc:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8007f00:	4770      	bxlt	lr
 8007f02:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8007f06:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8007f0a:	f1c2 0218 	rsb	r2, r2, #24
 8007f0e:	f1c2 0c20 	rsb	ip, r2, #32
 8007f12:	fa10 f30c 	lsls.w	r3, r0, ip
 8007f16:	fa20 f002 	lsr.w	r0, r0, r2
 8007f1a:	bf18      	it	ne
 8007f1c:	f040 0001 	orrne.w	r0, r0, #1
 8007f20:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8007f24:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8007f28:	fa03 fc0c 	lsl.w	ip, r3, ip
 8007f2c:	ea40 000c 	orr.w	r0, r0, ip
 8007f30:	fa23 f302 	lsr.w	r3, r3, r2
 8007f34:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8007f38:	e7cc      	b.n	8007ed4 <__aeabi_d2f+0x14>
 8007f3a:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8007f3e:	d107      	bne.n	8007f50 <__aeabi_d2f+0x90>
 8007f40:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8007f44:	bf1e      	ittt	ne
 8007f46:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8007f4a:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8007f4e:	4770      	bxne	lr
 8007f50:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8007f54:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8007f58:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007f5c:	4770      	bx	lr
 8007f5e:	bf00      	nop

08007f60 <__aeabi_frsub>:
 8007f60:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
 8007f64:	e002      	b.n	8007f6c <__addsf3>
 8007f66:	bf00      	nop

08007f68 <__aeabi_fsub>:
 8007f68:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

08007f6c <__addsf3>:
 8007f6c:	0042      	lsls	r2, r0, #1
 8007f6e:	bf1f      	itttt	ne
 8007f70:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8007f74:	ea92 0f03 	teqne	r2, r3
 8007f78:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8007f7c:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8007f80:	d06a      	beq.n	8008058 <__addsf3+0xec>
 8007f82:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8007f86:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8007f8a:	bfc1      	itttt	gt
 8007f8c:	18d2      	addgt	r2, r2, r3
 8007f8e:	4041      	eorgt	r1, r0
 8007f90:	4048      	eorgt	r0, r1
 8007f92:	4041      	eorgt	r1, r0
 8007f94:	bfb8      	it	lt
 8007f96:	425b      	neglt	r3, r3
 8007f98:	2b19      	cmp	r3, #25
 8007f9a:	bf88      	it	hi
 8007f9c:	4770      	bxhi	lr
 8007f9e:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8007fa2:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007fa6:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 8007faa:	bf18      	it	ne
 8007fac:	4240      	negne	r0, r0
 8007fae:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8007fb2:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8007fb6:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 8007fba:	bf18      	it	ne
 8007fbc:	4249      	negne	r1, r1
 8007fbe:	ea92 0f03 	teq	r2, r3
 8007fc2:	d03f      	beq.n	8008044 <__addsf3+0xd8>
 8007fc4:	f1a2 0201 	sub.w	r2, r2, #1
 8007fc8:	fa41 fc03 	asr.w	ip, r1, r3
 8007fcc:	eb10 000c 	adds.w	r0, r0, ip
 8007fd0:	f1c3 0320 	rsb	r3, r3, #32
 8007fd4:	fa01 f103 	lsl.w	r1, r1, r3
 8007fd8:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8007fdc:	d502      	bpl.n	8007fe4 <__addsf3+0x78>
 8007fde:	4249      	negs	r1, r1
 8007fe0:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8007fe4:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
 8007fe8:	d313      	bcc.n	8008012 <__addsf3+0xa6>
 8007fea:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 8007fee:	d306      	bcc.n	8007ffe <__addsf3+0x92>
 8007ff0:	0840      	lsrs	r0, r0, #1
 8007ff2:	ea4f 0131 	mov.w	r1, r1, rrx
 8007ff6:	f102 0201 	add.w	r2, r2, #1
 8007ffa:	2afe      	cmp	r2, #254	; 0xfe
 8007ffc:	d251      	bcs.n	80080a2 <__addsf3+0x136>
 8007ffe:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
 8008002:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8008006:	bf08      	it	eq
 8008008:	f020 0001 	biceq.w	r0, r0, #1
 800800c:	ea40 0003 	orr.w	r0, r0, r3
 8008010:	4770      	bx	lr
 8008012:	0049      	lsls	r1, r1, #1
 8008014:	eb40 0000 	adc.w	r0, r0, r0
 8008018:	3a01      	subs	r2, #1
 800801a:	bf28      	it	cs
 800801c:	f5b0 0f00 	cmpcs.w	r0, #8388608	; 0x800000
 8008020:	d2ed      	bcs.n	8007ffe <__addsf3+0x92>
 8008022:	fab0 fc80 	clz	ip, r0
 8008026:	f1ac 0c08 	sub.w	ip, ip, #8
 800802a:	ebb2 020c 	subs.w	r2, r2, ip
 800802e:	fa00 f00c 	lsl.w	r0, r0, ip
 8008032:	bfaa      	itet	ge
 8008034:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8008038:	4252      	neglt	r2, r2
 800803a:	4318      	orrge	r0, r3
 800803c:	bfbc      	itt	lt
 800803e:	40d0      	lsrlt	r0, r2
 8008040:	4318      	orrlt	r0, r3
 8008042:	4770      	bx	lr
 8008044:	f092 0f00 	teq	r2, #0
 8008048:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
 800804c:	bf06      	itte	eq
 800804e:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
 8008052:	3201      	addeq	r2, #1
 8008054:	3b01      	subne	r3, #1
 8008056:	e7b5      	b.n	8007fc4 <__addsf3+0x58>
 8008058:	ea4f 0341 	mov.w	r3, r1, lsl #1
 800805c:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8008060:	bf18      	it	ne
 8008062:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8008066:	d021      	beq.n	80080ac <__addsf3+0x140>
 8008068:	ea92 0f03 	teq	r2, r3
 800806c:	d004      	beq.n	8008078 <__addsf3+0x10c>
 800806e:	f092 0f00 	teq	r2, #0
 8008072:	bf08      	it	eq
 8008074:	4608      	moveq	r0, r1
 8008076:	4770      	bx	lr
 8008078:	ea90 0f01 	teq	r0, r1
 800807c:	bf1c      	itt	ne
 800807e:	2000      	movne	r0, #0
 8008080:	4770      	bxne	lr
 8008082:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
 8008086:	d104      	bne.n	8008092 <__addsf3+0x126>
 8008088:	0040      	lsls	r0, r0, #1
 800808a:	bf28      	it	cs
 800808c:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
 8008090:	4770      	bx	lr
 8008092:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
 8008096:	bf3c      	itt	cc
 8008098:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
 800809c:	4770      	bxcc	lr
 800809e:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 80080a2:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
 80080a6:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80080aa:	4770      	bx	lr
 80080ac:	ea7f 6222 	mvns.w	r2, r2, asr #24
 80080b0:	bf16      	itet	ne
 80080b2:	4608      	movne	r0, r1
 80080b4:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 80080b8:	4601      	movne	r1, r0
 80080ba:	0242      	lsls	r2, r0, #9
 80080bc:	bf06      	itte	eq
 80080be:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 80080c2:	ea90 0f01 	teqeq	r0, r1
 80080c6:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
 80080ca:	4770      	bx	lr

080080cc <__aeabi_ui2f>:
 80080cc:	f04f 0300 	mov.w	r3, #0
 80080d0:	e004      	b.n	80080dc <__aeabi_i2f+0x8>
 80080d2:	bf00      	nop

080080d4 <__aeabi_i2f>:
 80080d4:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
 80080d8:	bf48      	it	mi
 80080da:	4240      	negmi	r0, r0
 80080dc:	ea5f 0c00 	movs.w	ip, r0
 80080e0:	bf08      	it	eq
 80080e2:	4770      	bxeq	lr
 80080e4:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
 80080e8:	4601      	mov	r1, r0
 80080ea:	f04f 0000 	mov.w	r0, #0
 80080ee:	e01c      	b.n	800812a <__aeabi_l2f+0x2a>

080080f0 <__aeabi_ul2f>:
 80080f0:	ea50 0201 	orrs.w	r2, r0, r1
 80080f4:	bf08      	it	eq
 80080f6:	4770      	bxeq	lr
 80080f8:	f04f 0300 	mov.w	r3, #0
 80080fc:	e00a      	b.n	8008114 <__aeabi_l2f+0x14>
 80080fe:	bf00      	nop

08008100 <__aeabi_l2f>:
 8008100:	ea50 0201 	orrs.w	r2, r0, r1
 8008104:	bf08      	it	eq
 8008106:	4770      	bxeq	lr
 8008108:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
 800810c:	d502      	bpl.n	8008114 <__aeabi_l2f+0x14>
 800810e:	4240      	negs	r0, r0
 8008110:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8008114:	ea5f 0c01 	movs.w	ip, r1
 8008118:	bf02      	ittt	eq
 800811a:	4684      	moveq	ip, r0
 800811c:	4601      	moveq	r1, r0
 800811e:	2000      	moveq	r0, #0
 8008120:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
 8008124:	bf08      	it	eq
 8008126:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
 800812a:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
 800812e:	fabc f28c 	clz	r2, ip
 8008132:	3a08      	subs	r2, #8
 8008134:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8008138:	db10      	blt.n	800815c <__aeabi_l2f+0x5c>
 800813a:	fa01 fc02 	lsl.w	ip, r1, r2
 800813e:	4463      	add	r3, ip
 8008140:	fa00 fc02 	lsl.w	ip, r0, r2
 8008144:	f1c2 0220 	rsb	r2, r2, #32
 8008148:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800814c:	fa20 f202 	lsr.w	r2, r0, r2
 8008150:	eb43 0002 	adc.w	r0, r3, r2
 8008154:	bf08      	it	eq
 8008156:	f020 0001 	biceq.w	r0, r0, #1
 800815a:	4770      	bx	lr
 800815c:	f102 0220 	add.w	r2, r2, #32
 8008160:	fa01 fc02 	lsl.w	ip, r1, r2
 8008164:	f1c2 0220 	rsb	r2, r2, #32
 8008168:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 800816c:	fa21 f202 	lsr.w	r2, r1, r2
 8008170:	eb43 0002 	adc.w	r0, r3, r2
 8008174:	bf08      	it	eq
 8008176:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 800817a:	4770      	bx	lr

0800817c <__aeabi_fmul>:
 800817c:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8008180:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8008184:	bf1e      	ittt	ne
 8008186:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 800818a:	ea92 0f0c 	teqne	r2, ip
 800818e:	ea93 0f0c 	teqne	r3, ip
 8008192:	d06f      	beq.n	8008274 <__aeabi_fmul+0xf8>
 8008194:	441a      	add	r2, r3
 8008196:	ea80 0c01 	eor.w	ip, r0, r1
 800819a:	0240      	lsls	r0, r0, #9
 800819c:	bf18      	it	ne
 800819e:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 80081a2:	d01e      	beq.n	80081e2 <__aeabi_fmul+0x66>
 80081a4:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 80081a8:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 80081ac:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 80081b0:	fba0 3101 	umull	r3, r1, r0, r1
 80081b4:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 80081b8:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 80081bc:	bf3e      	ittt	cc
 80081be:	0049      	lslcc	r1, r1, #1
 80081c0:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 80081c4:	005b      	lslcc	r3, r3, #1
 80081c6:	ea40 0001 	orr.w	r0, r0, r1
 80081ca:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
 80081ce:	2afd      	cmp	r2, #253	; 0xfd
 80081d0:	d81d      	bhi.n	800820e <__aeabi_fmul+0x92>
 80081d2:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 80081d6:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 80081da:	bf08      	it	eq
 80081dc:	f020 0001 	biceq.w	r0, r0, #1
 80081e0:	4770      	bx	lr
 80081e2:	f090 0f00 	teq	r0, #0
 80081e6:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 80081ea:	bf08      	it	eq
 80081ec:	0249      	lsleq	r1, r1, #9
 80081ee:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 80081f2:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 80081f6:	3a7f      	subs	r2, #127	; 0x7f
 80081f8:	bfc2      	ittt	gt
 80081fa:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 80081fe:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8008202:	4770      	bxgt	lr
 8008204:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8008208:	f04f 0300 	mov.w	r3, #0
 800820c:	3a01      	subs	r2, #1
 800820e:	dc5d      	bgt.n	80082cc <__aeabi_fmul+0x150>
 8008210:	f112 0f19 	cmn.w	r2, #25
 8008214:	bfdc      	itt	le
 8008216:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
 800821a:	4770      	bxle	lr
 800821c:	f1c2 0200 	rsb	r2, r2, #0
 8008220:	0041      	lsls	r1, r0, #1
 8008222:	fa21 f102 	lsr.w	r1, r1, r2
 8008226:	f1c2 0220 	rsb	r2, r2, #32
 800822a:	fa00 fc02 	lsl.w	ip, r0, r2
 800822e:	ea5f 0031 	movs.w	r0, r1, rrx
 8008232:	f140 0000 	adc.w	r0, r0, #0
 8008236:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 800823a:	bf08      	it	eq
 800823c:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8008240:	4770      	bx	lr
 8008242:	f092 0f00 	teq	r2, #0
 8008246:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 800824a:	bf02      	ittt	eq
 800824c:	0040      	lsleq	r0, r0, #1
 800824e:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8008252:	3a01      	subeq	r2, #1
 8008254:	d0f9      	beq.n	800824a <__aeabi_fmul+0xce>
 8008256:	ea40 000c 	orr.w	r0, r0, ip
 800825a:	f093 0f00 	teq	r3, #0
 800825e:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8008262:	bf02      	ittt	eq
 8008264:	0049      	lsleq	r1, r1, #1
 8008266:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 800826a:	3b01      	subeq	r3, #1
 800826c:	d0f9      	beq.n	8008262 <__aeabi_fmul+0xe6>
 800826e:	ea41 010c 	orr.w	r1, r1, ip
 8008272:	e78f      	b.n	8008194 <__aeabi_fmul+0x18>
 8008274:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8008278:	ea92 0f0c 	teq	r2, ip
 800827c:	bf18      	it	ne
 800827e:	ea93 0f0c 	teqne	r3, ip
 8008282:	d00a      	beq.n	800829a <__aeabi_fmul+0x11e>
 8008284:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8008288:	bf18      	it	ne
 800828a:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 800828e:	d1d8      	bne.n	8008242 <__aeabi_fmul+0xc6>
 8008290:	ea80 0001 	eor.w	r0, r0, r1
 8008294:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8008298:	4770      	bx	lr
 800829a:	f090 0f00 	teq	r0, #0
 800829e:	bf17      	itett	ne
 80082a0:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
 80082a4:	4608      	moveq	r0, r1
 80082a6:	f091 0f00 	teqne	r1, #0
 80082aa:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
 80082ae:	d014      	beq.n	80082da <__aeabi_fmul+0x15e>
 80082b0:	ea92 0f0c 	teq	r2, ip
 80082b4:	d101      	bne.n	80082ba <__aeabi_fmul+0x13e>
 80082b6:	0242      	lsls	r2, r0, #9
 80082b8:	d10f      	bne.n	80082da <__aeabi_fmul+0x15e>
 80082ba:	ea93 0f0c 	teq	r3, ip
 80082be:	d103      	bne.n	80082c8 <__aeabi_fmul+0x14c>
 80082c0:	024b      	lsls	r3, r1, #9
 80082c2:	bf18      	it	ne
 80082c4:	4608      	movne	r0, r1
 80082c6:	d108      	bne.n	80082da <__aeabi_fmul+0x15e>
 80082c8:	ea80 0001 	eor.w	r0, r0, r1
 80082cc:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 80082d0:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 80082d4:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80082d8:	4770      	bx	lr
 80082da:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 80082de:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
 80082e2:	4770      	bx	lr

080082e4 <__aeabi_fdiv>:
 80082e4:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80082e8:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 80082ec:	bf1e      	ittt	ne
 80082ee:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 80082f2:	ea92 0f0c 	teqne	r2, ip
 80082f6:	ea93 0f0c 	teqne	r3, ip
 80082fa:	d069      	beq.n	80083d0 <__aeabi_fdiv+0xec>
 80082fc:	eba2 0203 	sub.w	r2, r2, r3
 8008300:	ea80 0c01 	eor.w	ip, r0, r1
 8008304:	0249      	lsls	r1, r1, #9
 8008306:	ea4f 2040 	mov.w	r0, r0, lsl #9
 800830a:	d037      	beq.n	800837c <__aeabi_fdiv+0x98>
 800830c:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8008310:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 8008314:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8008318:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 800831c:	428b      	cmp	r3, r1
 800831e:	bf38      	it	cc
 8008320:	005b      	lslcc	r3, r3, #1
 8008322:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
 8008326:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
 800832a:	428b      	cmp	r3, r1
 800832c:	bf24      	itt	cs
 800832e:	1a5b      	subcs	r3, r3, r1
 8008330:	ea40 000c 	orrcs.w	r0, r0, ip
 8008334:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 8008338:	bf24      	itt	cs
 800833a:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 800833e:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8008342:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 8008346:	bf24      	itt	cs
 8008348:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 800834c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8008350:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 8008354:	bf24      	itt	cs
 8008356:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 800835a:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 800835e:	011b      	lsls	r3, r3, #4
 8008360:	bf18      	it	ne
 8008362:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 8008366:	d1e0      	bne.n	800832a <__aeabi_fdiv+0x46>
 8008368:	2afd      	cmp	r2, #253	; 0xfd
 800836a:	f63f af50 	bhi.w	800820e <__aeabi_fmul+0x92>
 800836e:	428b      	cmp	r3, r1
 8008370:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8008374:	bf08      	it	eq
 8008376:	f020 0001 	biceq.w	r0, r0, #1
 800837a:	4770      	bx	lr
 800837c:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8008380:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8008384:	327f      	adds	r2, #127	; 0x7f
 8008386:	bfc2      	ittt	gt
 8008388:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 800838c:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8008390:	4770      	bxgt	lr
 8008392:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8008396:	f04f 0300 	mov.w	r3, #0
 800839a:	3a01      	subs	r2, #1
 800839c:	e737      	b.n	800820e <__aeabi_fmul+0x92>
 800839e:	f092 0f00 	teq	r2, #0
 80083a2:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 80083a6:	bf02      	ittt	eq
 80083a8:	0040      	lsleq	r0, r0, #1
 80083aa:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 80083ae:	3a01      	subeq	r2, #1
 80083b0:	d0f9      	beq.n	80083a6 <__aeabi_fdiv+0xc2>
 80083b2:	ea40 000c 	orr.w	r0, r0, ip
 80083b6:	f093 0f00 	teq	r3, #0
 80083ba:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 80083be:	bf02      	ittt	eq
 80083c0:	0049      	lsleq	r1, r1, #1
 80083c2:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 80083c6:	3b01      	subeq	r3, #1
 80083c8:	d0f9      	beq.n	80083be <__aeabi_fdiv+0xda>
 80083ca:	ea41 010c 	orr.w	r1, r1, ip
 80083ce:	e795      	b.n	80082fc <__aeabi_fdiv+0x18>
 80083d0:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 80083d4:	ea92 0f0c 	teq	r2, ip
 80083d8:	d108      	bne.n	80083ec <__aeabi_fdiv+0x108>
 80083da:	0242      	lsls	r2, r0, #9
 80083dc:	f47f af7d 	bne.w	80082da <__aeabi_fmul+0x15e>
 80083e0:	ea93 0f0c 	teq	r3, ip
 80083e4:	f47f af70 	bne.w	80082c8 <__aeabi_fmul+0x14c>
 80083e8:	4608      	mov	r0, r1
 80083ea:	e776      	b.n	80082da <__aeabi_fmul+0x15e>
 80083ec:	ea93 0f0c 	teq	r3, ip
 80083f0:	d104      	bne.n	80083fc <__aeabi_fdiv+0x118>
 80083f2:	024b      	lsls	r3, r1, #9
 80083f4:	f43f af4c 	beq.w	8008290 <__aeabi_fmul+0x114>
 80083f8:	4608      	mov	r0, r1
 80083fa:	e76e      	b.n	80082da <__aeabi_fmul+0x15e>
 80083fc:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8008400:	bf18      	it	ne
 8008402:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8008406:	d1ca      	bne.n	800839e <__aeabi_fdiv+0xba>
 8008408:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
 800840c:	f47f af5c 	bne.w	80082c8 <__aeabi_fmul+0x14c>
 8008410:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
 8008414:	f47f af3c 	bne.w	8008290 <__aeabi_fmul+0x114>
 8008418:	e75f      	b.n	80082da <__aeabi_fmul+0x15e>
 800841a:	bf00      	nop

0800841c <__gesf2>:
 800841c:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
 8008420:	e006      	b.n	8008430 <__cmpsf2+0x4>
 8008422:	bf00      	nop

08008424 <__lesf2>:
 8008424:	f04f 0c01 	mov.w	ip, #1
 8008428:	e002      	b.n	8008430 <__cmpsf2+0x4>
 800842a:	bf00      	nop

0800842c <__cmpsf2>:
 800842c:	f04f 0c01 	mov.w	ip, #1
 8008430:	f84d cd04 	str.w	ip, [sp, #-4]!
 8008434:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8008438:	ea4f 0341 	mov.w	r3, r1, lsl #1
 800843c:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8008440:	bf18      	it	ne
 8008442:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8008446:	d011      	beq.n	800846c <__cmpsf2+0x40>
 8008448:	b001      	add	sp, #4
 800844a:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
 800844e:	bf18      	it	ne
 8008450:	ea90 0f01 	teqne	r0, r1
 8008454:	bf58      	it	pl
 8008456:	ebb2 0003 	subspl.w	r0, r2, r3
 800845a:	bf88      	it	hi
 800845c:	17c8      	asrhi	r0, r1, #31
 800845e:	bf38      	it	cc
 8008460:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
 8008464:	bf18      	it	ne
 8008466:	f040 0001 	orrne.w	r0, r0, #1
 800846a:	4770      	bx	lr
 800846c:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8008470:	d102      	bne.n	8008478 <__cmpsf2+0x4c>
 8008472:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 8008476:	d105      	bne.n	8008484 <__cmpsf2+0x58>
 8008478:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 800847c:	d1e4      	bne.n	8008448 <__cmpsf2+0x1c>
 800847e:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 8008482:	d0e1      	beq.n	8008448 <__cmpsf2+0x1c>
 8008484:	f85d 0b04 	ldr.w	r0, [sp], #4
 8008488:	4770      	bx	lr
 800848a:	bf00      	nop

0800848c <__aeabi_cfrcmple>:
 800848c:	4684      	mov	ip, r0
 800848e:	4608      	mov	r0, r1
 8008490:	4661      	mov	r1, ip
 8008492:	e7ff      	b.n	8008494 <__aeabi_cfcmpeq>

08008494 <__aeabi_cfcmpeq>:
 8008494:	b50f      	push	{r0, r1, r2, r3, lr}
 8008496:	f7ff ffc9 	bl	800842c <__cmpsf2>
 800849a:	2800      	cmp	r0, #0
 800849c:	bf48      	it	mi
 800849e:	f110 0f00 	cmnmi.w	r0, #0
 80084a2:	bd0f      	pop	{r0, r1, r2, r3, pc}

080084a4 <__aeabi_fcmpeq>:
 80084a4:	f84d ed08 	str.w	lr, [sp, #-8]!
 80084a8:	f7ff fff4 	bl	8008494 <__aeabi_cfcmpeq>
 80084ac:	bf0c      	ite	eq
 80084ae:	2001      	moveq	r0, #1
 80084b0:	2000      	movne	r0, #0
 80084b2:	f85d fb08 	ldr.w	pc, [sp], #8
 80084b6:	bf00      	nop

080084b8 <__aeabi_fcmplt>:
 80084b8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80084bc:	f7ff ffea 	bl	8008494 <__aeabi_cfcmpeq>
 80084c0:	bf34      	ite	cc
 80084c2:	2001      	movcc	r0, #1
 80084c4:	2000      	movcs	r0, #0
 80084c6:	f85d fb08 	ldr.w	pc, [sp], #8
 80084ca:	bf00      	nop

080084cc <__aeabi_fcmple>:
 80084cc:	f84d ed08 	str.w	lr, [sp, #-8]!
 80084d0:	f7ff ffe0 	bl	8008494 <__aeabi_cfcmpeq>
 80084d4:	bf94      	ite	ls
 80084d6:	2001      	movls	r0, #1
 80084d8:	2000      	movhi	r0, #0
 80084da:	f85d fb08 	ldr.w	pc, [sp], #8
 80084de:	bf00      	nop

080084e0 <__aeabi_fcmpge>:
 80084e0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80084e4:	f7ff ffd2 	bl	800848c <__aeabi_cfrcmple>
 80084e8:	bf94      	ite	ls
 80084ea:	2001      	movls	r0, #1
 80084ec:	2000      	movhi	r0, #0
 80084ee:	f85d fb08 	ldr.w	pc, [sp], #8
 80084f2:	bf00      	nop

080084f4 <__aeabi_fcmpgt>:
 80084f4:	f84d ed08 	str.w	lr, [sp, #-8]!
 80084f8:	f7ff ffc8 	bl	800848c <__aeabi_cfrcmple>
 80084fc:	bf34      	ite	cc
 80084fe:	2001      	movcc	r0, #1
 8008500:	2000      	movcs	r0, #0
 8008502:	f85d fb08 	ldr.w	pc, [sp], #8
 8008506:	bf00      	nop

08008508 <__aeabi_f2iz>:
 8008508:	ea4f 0240 	mov.w	r2, r0, lsl #1
 800850c:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 8008510:	d30f      	bcc.n	8008532 <__aeabi_f2iz+0x2a>
 8008512:	f04f 039e 	mov.w	r3, #158	; 0x9e
 8008516:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 800851a:	d90d      	bls.n	8008538 <__aeabi_f2iz+0x30>
 800851c:	ea4f 2300 	mov.w	r3, r0, lsl #8
 8008520:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8008524:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8008528:	fa23 f002 	lsr.w	r0, r3, r2
 800852c:	bf18      	it	ne
 800852e:	4240      	negne	r0, r0
 8008530:	4770      	bx	lr
 8008532:	f04f 0000 	mov.w	r0, #0
 8008536:	4770      	bx	lr
 8008538:	f112 0f61 	cmn.w	r2, #97	; 0x61
 800853c:	d101      	bne.n	8008542 <__aeabi_f2iz+0x3a>
 800853e:	0242      	lsls	r2, r0, #9
 8008540:	d105      	bne.n	800854e <__aeabi_f2iz+0x46>
 8008542:	f010 4000 	ands.w	r0, r0, #2147483648	; 0x80000000
 8008546:	bf08      	it	eq
 8008548:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 800854c:	4770      	bx	lr
 800854e:	f04f 0000 	mov.w	r0, #0
 8008552:	4770      	bx	lr

08008554 <__aeabi_uldivmod>:
 8008554:	b953      	cbnz	r3, 800856c <__aeabi_uldivmod+0x18>
 8008556:	b94a      	cbnz	r2, 800856c <__aeabi_uldivmod+0x18>
 8008558:	2900      	cmp	r1, #0
 800855a:	bf08      	it	eq
 800855c:	2800      	cmpeq	r0, #0
 800855e:	bf1c      	itt	ne
 8008560:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 8008564:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 8008568:	f000 b98a 	b.w	8008880 <__aeabi_idiv0>
 800856c:	f1ad 0c08 	sub.w	ip, sp, #8
 8008570:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8008574:	f000 f81a 	bl	80085ac <__udivmoddi4>
 8008578:	f8dd e004 	ldr.w	lr, [sp, #4]
 800857c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8008580:	b004      	add	sp, #16
 8008582:	4770      	bx	lr

08008584 <__popcountsi2>:
 8008584:	0843      	lsrs	r3, r0, #1
 8008586:	f003 3355 	and.w	r3, r3, #1431655765	; 0x55555555
 800858a:	1ac0      	subs	r0, r0, r3
 800858c:	0883      	lsrs	r3, r0, #2
 800858e:	f003 3333 	and.w	r3, r3, #858993459	; 0x33333333
 8008592:	f000 3033 	and.w	r0, r0, #858993459	; 0x33333333
 8008596:	4418      	add	r0, r3
 8008598:	eb00 1010 	add.w	r0, r0, r0, lsr #4
 800859c:	f000 300f 	and.w	r0, r0, #252645135	; 0xf0f0f0f
 80085a0:	eb00 2000 	add.w	r0, r0, r0, lsl #8
 80085a4:	eb00 4000 	add.w	r0, r0, r0, lsl #16
 80085a8:	0e00      	lsrs	r0, r0, #24
 80085aa:	4770      	bx	lr

080085ac <__udivmoddi4>:
 80085ac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80085b0:	9e08      	ldr	r6, [sp, #32]
 80085b2:	460d      	mov	r5, r1
 80085b4:	4604      	mov	r4, r0
 80085b6:	4688      	mov	r8, r1
 80085b8:	2b00      	cmp	r3, #0
 80085ba:	d14d      	bne.n	8008658 <__udivmoddi4+0xac>
 80085bc:	428a      	cmp	r2, r1
 80085be:	4694      	mov	ip, r2
 80085c0:	d968      	bls.n	8008694 <__udivmoddi4+0xe8>
 80085c2:	fab2 f282 	clz	r2, r2
 80085c6:	b152      	cbz	r2, 80085de <__udivmoddi4+0x32>
 80085c8:	fa01 f302 	lsl.w	r3, r1, r2
 80085cc:	f1c2 0120 	rsb	r1, r2, #32
 80085d0:	fa20 f101 	lsr.w	r1, r0, r1
 80085d4:	fa0c fc02 	lsl.w	ip, ip, r2
 80085d8:	ea41 0803 	orr.w	r8, r1, r3
 80085dc:	4094      	lsls	r4, r2
 80085de:	ea4f 411c 	mov.w	r1, ip, lsr #16
 80085e2:	fbb8 f7f1 	udiv	r7, r8, r1
 80085e6:	fa1f fe8c 	uxth.w	lr, ip
 80085ea:	fb01 8817 	mls	r8, r1, r7, r8
 80085ee:	fb07 f00e 	mul.w	r0, r7, lr
 80085f2:	0c23      	lsrs	r3, r4, #16
 80085f4:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 80085f8:	4298      	cmp	r0, r3
 80085fa:	d90a      	bls.n	8008612 <__udivmoddi4+0x66>
 80085fc:	eb1c 0303 	adds.w	r3, ip, r3
 8008600:	f107 35ff 	add.w	r5, r7, #4294967295	; 0xffffffff
 8008604:	f080 811e 	bcs.w	8008844 <__udivmoddi4+0x298>
 8008608:	4298      	cmp	r0, r3
 800860a:	f240 811b 	bls.w	8008844 <__udivmoddi4+0x298>
 800860e:	3f02      	subs	r7, #2
 8008610:	4463      	add	r3, ip
 8008612:	1a1b      	subs	r3, r3, r0
 8008614:	fbb3 f0f1 	udiv	r0, r3, r1
 8008618:	fb01 3310 	mls	r3, r1, r0, r3
 800861c:	fb00 fe0e 	mul.w	lr, r0, lr
 8008620:	b2a4      	uxth	r4, r4
 8008622:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8008626:	45a6      	cmp	lr, r4
 8008628:	d90a      	bls.n	8008640 <__udivmoddi4+0x94>
 800862a:	eb1c 0404 	adds.w	r4, ip, r4
 800862e:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8008632:	f080 8109 	bcs.w	8008848 <__udivmoddi4+0x29c>
 8008636:	45a6      	cmp	lr, r4
 8008638:	f240 8106 	bls.w	8008848 <__udivmoddi4+0x29c>
 800863c:	4464      	add	r4, ip
 800863e:	3802      	subs	r0, #2
 8008640:	2100      	movs	r1, #0
 8008642:	eba4 040e 	sub.w	r4, r4, lr
 8008646:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
 800864a:	b11e      	cbz	r6, 8008654 <__udivmoddi4+0xa8>
 800864c:	2300      	movs	r3, #0
 800864e:	40d4      	lsrs	r4, r2
 8008650:	e9c6 4300 	strd	r4, r3, [r6]
 8008654:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8008658:	428b      	cmp	r3, r1
 800865a:	d908      	bls.n	800866e <__udivmoddi4+0xc2>
 800865c:	2e00      	cmp	r6, #0
 800865e:	f000 80ee 	beq.w	800883e <__udivmoddi4+0x292>
 8008662:	2100      	movs	r1, #0
 8008664:	e9c6 0500 	strd	r0, r5, [r6]
 8008668:	4608      	mov	r0, r1
 800866a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800866e:	fab3 f183 	clz	r1, r3
 8008672:	2900      	cmp	r1, #0
 8008674:	d14a      	bne.n	800870c <__udivmoddi4+0x160>
 8008676:	42ab      	cmp	r3, r5
 8008678:	d302      	bcc.n	8008680 <__udivmoddi4+0xd4>
 800867a:	4282      	cmp	r2, r0
 800867c:	f200 80fc 	bhi.w	8008878 <__udivmoddi4+0x2cc>
 8008680:	1a84      	subs	r4, r0, r2
 8008682:	eb65 0303 	sbc.w	r3, r5, r3
 8008686:	2001      	movs	r0, #1
 8008688:	4698      	mov	r8, r3
 800868a:	2e00      	cmp	r6, #0
 800868c:	d0e2      	beq.n	8008654 <__udivmoddi4+0xa8>
 800868e:	e9c6 4800 	strd	r4, r8, [r6]
 8008692:	e7df      	b.n	8008654 <__udivmoddi4+0xa8>
 8008694:	b902      	cbnz	r2, 8008698 <__udivmoddi4+0xec>
 8008696:	deff      	udf	#255	; 0xff
 8008698:	fab2 f282 	clz	r2, r2
 800869c:	2a00      	cmp	r2, #0
 800869e:	f040 8091 	bne.w	80087c4 <__udivmoddi4+0x218>
 80086a2:	eba1 000c 	sub.w	r0, r1, ip
 80086a6:	2101      	movs	r1, #1
 80086a8:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80086ac:	fa1f fe8c 	uxth.w	lr, ip
 80086b0:	fbb0 f3f7 	udiv	r3, r0, r7
 80086b4:	fb07 0013 	mls	r0, r7, r3, r0
 80086b8:	0c25      	lsrs	r5, r4, #16
 80086ba:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
 80086be:	fb0e f003 	mul.w	r0, lr, r3
 80086c2:	42a8      	cmp	r0, r5
 80086c4:	d908      	bls.n	80086d8 <__udivmoddi4+0x12c>
 80086c6:	eb1c 0505 	adds.w	r5, ip, r5
 80086ca:	f103 38ff 	add.w	r8, r3, #4294967295	; 0xffffffff
 80086ce:	d202      	bcs.n	80086d6 <__udivmoddi4+0x12a>
 80086d0:	42a8      	cmp	r0, r5
 80086d2:	f200 80ce 	bhi.w	8008872 <__udivmoddi4+0x2c6>
 80086d6:	4643      	mov	r3, r8
 80086d8:	1a2d      	subs	r5, r5, r0
 80086da:	fbb5 f0f7 	udiv	r0, r5, r7
 80086de:	fb07 5510 	mls	r5, r7, r0, r5
 80086e2:	fb0e fe00 	mul.w	lr, lr, r0
 80086e6:	b2a4      	uxth	r4, r4
 80086e8:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 80086ec:	45a6      	cmp	lr, r4
 80086ee:	d908      	bls.n	8008702 <__udivmoddi4+0x156>
 80086f0:	eb1c 0404 	adds.w	r4, ip, r4
 80086f4:	f100 35ff 	add.w	r5, r0, #4294967295	; 0xffffffff
 80086f8:	d202      	bcs.n	8008700 <__udivmoddi4+0x154>
 80086fa:	45a6      	cmp	lr, r4
 80086fc:	f200 80b6 	bhi.w	800886c <__udivmoddi4+0x2c0>
 8008700:	4628      	mov	r0, r5
 8008702:	eba4 040e 	sub.w	r4, r4, lr
 8008706:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 800870a:	e79e      	b.n	800864a <__udivmoddi4+0x9e>
 800870c:	f1c1 0720 	rsb	r7, r1, #32
 8008710:	408b      	lsls	r3, r1
 8008712:	fa22 fc07 	lsr.w	ip, r2, r7
 8008716:	ea4c 0c03 	orr.w	ip, ip, r3
 800871a:	fa25 fa07 	lsr.w	sl, r5, r7
 800871e:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8008722:	fbba f8f9 	udiv	r8, sl, r9
 8008726:	fa20 f307 	lsr.w	r3, r0, r7
 800872a:	fb09 aa18 	mls	sl, r9, r8, sl
 800872e:	408d      	lsls	r5, r1
 8008730:	fa1f fe8c 	uxth.w	lr, ip
 8008734:	431d      	orrs	r5, r3
 8008736:	fa00 f301 	lsl.w	r3, r0, r1
 800873a:	fb08 f00e 	mul.w	r0, r8, lr
 800873e:	0c2c      	lsrs	r4, r5, #16
 8008740:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
 8008744:	42a0      	cmp	r0, r4
 8008746:	fa02 f201 	lsl.w	r2, r2, r1
 800874a:	d90b      	bls.n	8008764 <__udivmoddi4+0x1b8>
 800874c:	eb1c 0404 	adds.w	r4, ip, r4
 8008750:	f108 3aff 	add.w	sl, r8, #4294967295	; 0xffffffff
 8008754:	f080 8088 	bcs.w	8008868 <__udivmoddi4+0x2bc>
 8008758:	42a0      	cmp	r0, r4
 800875a:	f240 8085 	bls.w	8008868 <__udivmoddi4+0x2bc>
 800875e:	f1a8 0802 	sub.w	r8, r8, #2
 8008762:	4464      	add	r4, ip
 8008764:	1a24      	subs	r4, r4, r0
 8008766:	fbb4 f0f9 	udiv	r0, r4, r9
 800876a:	fb09 4410 	mls	r4, r9, r0, r4
 800876e:	fb00 fe0e 	mul.w	lr, r0, lr
 8008772:	b2ad      	uxth	r5, r5
 8008774:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8008778:	45a6      	cmp	lr, r4
 800877a:	d908      	bls.n	800878e <__udivmoddi4+0x1e2>
 800877c:	eb1c 0404 	adds.w	r4, ip, r4
 8008780:	f100 35ff 	add.w	r5, r0, #4294967295	; 0xffffffff
 8008784:	d26c      	bcs.n	8008860 <__udivmoddi4+0x2b4>
 8008786:	45a6      	cmp	lr, r4
 8008788:	d96a      	bls.n	8008860 <__udivmoddi4+0x2b4>
 800878a:	3802      	subs	r0, #2
 800878c:	4464      	add	r4, ip
 800878e:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 8008792:	fba0 9502 	umull	r9, r5, r0, r2
 8008796:	eba4 040e 	sub.w	r4, r4, lr
 800879a:	42ac      	cmp	r4, r5
 800879c:	46c8      	mov	r8, r9
 800879e:	46ae      	mov	lr, r5
 80087a0:	d356      	bcc.n	8008850 <__udivmoddi4+0x2a4>
 80087a2:	d053      	beq.n	800884c <__udivmoddi4+0x2a0>
 80087a4:	2e00      	cmp	r6, #0
 80087a6:	d069      	beq.n	800887c <__udivmoddi4+0x2d0>
 80087a8:	ebb3 0208 	subs.w	r2, r3, r8
 80087ac:	eb64 040e 	sbc.w	r4, r4, lr
 80087b0:	fa22 f301 	lsr.w	r3, r2, r1
 80087b4:	fa04 f707 	lsl.w	r7, r4, r7
 80087b8:	431f      	orrs	r7, r3
 80087ba:	40cc      	lsrs	r4, r1
 80087bc:	e9c6 7400 	strd	r7, r4, [r6]
 80087c0:	2100      	movs	r1, #0
 80087c2:	e747      	b.n	8008654 <__udivmoddi4+0xa8>
 80087c4:	fa0c fc02 	lsl.w	ip, ip, r2
 80087c8:	f1c2 0120 	rsb	r1, r2, #32
 80087cc:	fa25 f301 	lsr.w	r3, r5, r1
 80087d0:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80087d4:	fa20 f101 	lsr.w	r1, r0, r1
 80087d8:	4095      	lsls	r5, r2
 80087da:	430d      	orrs	r5, r1
 80087dc:	fbb3 f1f7 	udiv	r1, r3, r7
 80087e0:	fb07 3311 	mls	r3, r7, r1, r3
 80087e4:	fa1f fe8c 	uxth.w	lr, ip
 80087e8:	0c28      	lsrs	r0, r5, #16
 80087ea:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 80087ee:	fb01 f30e 	mul.w	r3, r1, lr
 80087f2:	4283      	cmp	r3, r0
 80087f4:	fa04 f402 	lsl.w	r4, r4, r2
 80087f8:	d908      	bls.n	800880c <__udivmoddi4+0x260>
 80087fa:	eb1c 0000 	adds.w	r0, ip, r0
 80087fe:	f101 38ff 	add.w	r8, r1, #4294967295	; 0xffffffff
 8008802:	d22f      	bcs.n	8008864 <__udivmoddi4+0x2b8>
 8008804:	4283      	cmp	r3, r0
 8008806:	d92d      	bls.n	8008864 <__udivmoddi4+0x2b8>
 8008808:	3902      	subs	r1, #2
 800880a:	4460      	add	r0, ip
 800880c:	1ac0      	subs	r0, r0, r3
 800880e:	fbb0 f3f7 	udiv	r3, r0, r7
 8008812:	fb07 0013 	mls	r0, r7, r3, r0
 8008816:	b2ad      	uxth	r5, r5
 8008818:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
 800881c:	fb03 f00e 	mul.w	r0, r3, lr
 8008820:	42a8      	cmp	r0, r5
 8008822:	d908      	bls.n	8008836 <__udivmoddi4+0x28a>
 8008824:	eb1c 0505 	adds.w	r5, ip, r5
 8008828:	f103 38ff 	add.w	r8, r3, #4294967295	; 0xffffffff
 800882c:	d216      	bcs.n	800885c <__udivmoddi4+0x2b0>
 800882e:	42a8      	cmp	r0, r5
 8008830:	d914      	bls.n	800885c <__udivmoddi4+0x2b0>
 8008832:	3b02      	subs	r3, #2
 8008834:	4465      	add	r5, ip
 8008836:	1a28      	subs	r0, r5, r0
 8008838:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 800883c:	e738      	b.n	80086b0 <__udivmoddi4+0x104>
 800883e:	4631      	mov	r1, r6
 8008840:	4630      	mov	r0, r6
 8008842:	e707      	b.n	8008654 <__udivmoddi4+0xa8>
 8008844:	462f      	mov	r7, r5
 8008846:	e6e4      	b.n	8008612 <__udivmoddi4+0x66>
 8008848:	4618      	mov	r0, r3
 800884a:	e6f9      	b.n	8008640 <__udivmoddi4+0x94>
 800884c:	454b      	cmp	r3, r9
 800884e:	d2a9      	bcs.n	80087a4 <__udivmoddi4+0x1f8>
 8008850:	ebb9 0802 	subs.w	r8, r9, r2
 8008854:	eb65 0e0c 	sbc.w	lr, r5, ip
 8008858:	3801      	subs	r0, #1
 800885a:	e7a3      	b.n	80087a4 <__udivmoddi4+0x1f8>
 800885c:	4643      	mov	r3, r8
 800885e:	e7ea      	b.n	8008836 <__udivmoddi4+0x28a>
 8008860:	4628      	mov	r0, r5
 8008862:	e794      	b.n	800878e <__udivmoddi4+0x1e2>
 8008864:	4641      	mov	r1, r8
 8008866:	e7d1      	b.n	800880c <__udivmoddi4+0x260>
 8008868:	46d0      	mov	r8, sl
 800886a:	e77b      	b.n	8008764 <__udivmoddi4+0x1b8>
 800886c:	4464      	add	r4, ip
 800886e:	3802      	subs	r0, #2
 8008870:	e747      	b.n	8008702 <__udivmoddi4+0x156>
 8008872:	3b02      	subs	r3, #2
 8008874:	4465      	add	r5, ip
 8008876:	e72f      	b.n	80086d8 <__udivmoddi4+0x12c>
 8008878:	4608      	mov	r0, r1
 800887a:	e706      	b.n	800868a <__udivmoddi4+0xde>
 800887c:	4631      	mov	r1, r6
 800887e:	e6e9      	b.n	8008654 <__udivmoddi4+0xa8>

08008880 <__aeabi_idiv0>:
 8008880:	4770      	bx	lr
 8008882:	bf00      	nop

08008884 <Reset_Handler>:
 8008884:	2100      	movs	r1, #0
 8008886:	e003      	b.n	8008890 <DataInit>

08008888 <CopyData>:
 8008888:	4b0a      	ldr	r3, [pc, #40]	; (80088b4 <Zerobss+0x10>)
 800888a:	585b      	ldr	r3, [r3, r1]
 800888c:	5043      	str	r3, [r0, r1]
 800888e:	3104      	adds	r1, #4

08008890 <DataInit>:
 8008890:	4809      	ldr	r0, [pc, #36]	; (80088b8 <Zerobss+0x14>)
 8008892:	4b0a      	ldr	r3, [pc, #40]	; (80088bc <Zerobss+0x18>)
 8008894:	1842      	adds	r2, r0, r1
 8008896:	429a      	cmp	r2, r3
 8008898:	d3f6      	bcc.n	8008888 <CopyData>
 800889a:	4a09      	ldr	r2, [pc, #36]	; (80088c0 <Zerobss+0x1c>)
 800889c:	e002      	b.n	80088a4 <Zerobss>

0800889e <FillZerobss>:
 800889e:	2300      	movs	r3, #0
 80088a0:	f842 3b04 	str.w	r3, [r2], #4

080088a4 <Zerobss>:
 80088a4:	4b07      	ldr	r3, [pc, #28]	; (80088c4 <Zerobss+0x20>)
 80088a6:	429a      	cmp	r2, r3
 80088a8:	d3f9      	bcc.n	800889e <FillZerobss>
 80088aa:	f008 fe77 	bl	801159c <SystemInit>
 80088ae:	f000 f8ed 	bl	8008a8c <main>
 80088b2:	4770      	bx	lr
 80088b4:	08015374 	stmdaeq	r1, {r2, r4, r5, r6, r8, r9, ip, lr}
 80088b8:	20000000 	andcs	r0, r0, r0
 80088bc:	200000f8 	strdcs	r0, [r0], -r8
 80088c0:	200000f8 	strdcs	r0, [r0], -r8
 80088c4:	20011af4 	strdcs	r1, [r1], -r4

080088c8 <ADC0_1_IRQHandler>:
 80088c8:	e7fe      	b.n	80088c8 <ADC0_1_IRQHandler>

080088ca <memcmp>:
 80088ca:	b510      	push	{r4, lr}
 80088cc:	3901      	subs	r1, #1
 80088ce:	4402      	add	r2, r0
 80088d0:	4290      	cmp	r0, r2
 80088d2:	d008      	beq.n	80088e6 <memcmp+0x1c>
 80088d4:	7803      	ldrb	r3, [r0, #0]
 80088d6:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 80088da:	42a3      	cmp	r3, r4
 80088dc:	d001      	beq.n	80088e2 <memcmp+0x18>
 80088de:	1b18      	subs	r0, r3, r4
 80088e0:	bd10      	pop	{r4, pc}
 80088e2:	3001      	adds	r0, #1
 80088e4:	e7f4      	b.n	80088d0 <memcmp+0x6>
 80088e6:	2000      	movs	r0, #0
 80088e8:	e7fa      	b.n	80088e0 <memcmp+0x16>

080088ea <DisplayHandler::~DisplayHandler()>:
 80088ea:	4770      	bx	lr

080088ec <E131Reboot::~E131Reboot()>:
 80088ec:	4770      	bx	lr

080088ee <dmxconfigudp::atoi(char const*, unsigned char)>:
 80088ee:	b530      	push	{r4, r5, lr}
 80088f0:	1e42      	subs	r2, r0, #1
 80088f2:	240a      	movs	r4, #10
 80088f4:	2000      	movs	r0, #0
 80088f6:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 80088fa:	3b30      	subs	r3, #48	; 0x30
 80088fc:	b2dd      	uxtb	r5, r3
 80088fe:	2d09      	cmp	r5, #9
 8008900:	d805      	bhi.n	800890e <dmxconfigudp::atoi(char const*, unsigned char)+0x20>
 8008902:	3901      	subs	r1, #1
 8008904:	f011 01ff 	ands.w	r1, r1, #255	; 0xff
 8008908:	fb04 3000 	mla	r0, r4, r0, r3
 800890c:	d1f3      	bne.n	80088f6 <dmxconfigudp::atoi(char const*, unsigned char)+0x8>
 800890e:	bd30      	pop	{r4, r5, pc}

08008910 <E131Reboot::Run()>:
 8008910:	b510      	push	{r4, lr}
 8008912:	4c07      	ldr	r4, [pc, #28]	; (8008930 <E131Reboot::Run()+0x20>)
 8008914:	6820      	ldr	r0, [r4, #0]
 8008916:	f001 fed9 	bl	800a6cc <E131Bridge::Stop()>
 800891a:	6823      	ldr	r3, [r4, #0]
 800891c:	6858      	ldr	r0, [r3, #4]
 800891e:	b128      	cbz	r0, 800892c <E131Reboot::Run()+0x1c>
 8008920:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8008924:	6803      	ldr	r3, [r0, #0]
 8008926:	2101      	movs	r1, #1
 8008928:	695b      	ldr	r3, [r3, #20]
 800892a:	4718      	bx	r3
 800892c:	bd10      	pop	{r4, pc}
 800892e:	bf00      	nop
 8008930:	2000314c 	andcs	r3, r0, ip, asr #2

08008934 <E131Reboot::~E131Reboot()>:
 8008934:	b510      	push	{r4, lr}
 8008936:	4604      	mov	r4, r0
 8008938:	f008 f87e 	bl	8010a38 <operator delete(void*)>
 800893c:	4620      	mov	r0, r4
 800893e:	bd10      	pop	{r4, pc}

08008940 <DisplayHandler::~DisplayHandler()>:
 8008940:	b510      	push	{r4, lr}
 8008942:	4604      	mov	r4, r0
 8008944:	f008 f878 	bl	8010a38 <operator delete(void*)>
 8008948:	4620      	mov	r0, r4
 800894a:	bd10      	pop	{r4, pc}

0800894c <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>:
 800894c:	b110      	cbz	r0, 8008954 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]+0x8>
 800894e:	6803      	ldr	r3, [r0, #0]
 8008950:	6a1b      	ldr	r3, [r3, #32]
 8008952:	4718      	bx	r3
 8008954:	4770      	bx	lr

08008956 <Display::PutChar(int) [clone .isra.0]>:
 8008956:	b110      	cbz	r0, 800895e <Display::PutChar(int) [clone .isra.0]+0x8>
 8008958:	6803      	ldr	r3, [r0, #0]
 800895a:	695b      	ldr	r3, [r3, #20]
 800895c:	4718      	bx	r3
 800895e:	4770      	bx	lr

08008960 <DisplayHandler::Print(unsigned int)>:
 8008960:	b538      	push	{r3, r4, r5, lr}
 8008962:	7903      	ldrb	r3, [r0, #4]
 8008964:	b1f3      	cbz	r3, 80089a4 <DisplayHandler::Print(unsigned int)+0x44>
 8008966:	2904      	cmp	r1, #4
 8008968:	bf98      	it	ls
 800896a:	4b0f      	ldrls	r3, [pc, #60]	; (80089a8 <DisplayHandler::Print(unsigned int)+0x48>)
 800896c:	4d0f      	ldr	r5, [pc, #60]	; (80089ac <DisplayHandler::Print(unsigned int)+0x4c>)
 800896e:	bf98      	it	ls
 8008970:	5c5c      	ldrbls	r4, [r3, r1]
 8008972:	682b      	ldr	r3, [r5, #0]
 8008974:	bf88      	it	hi
 8008976:	2455      	movhi	r4, #85	; 0x55
 8008978:	6998      	ldr	r0, [r3, #24]
 800897a:	b178      	cbz	r0, 800899c <DisplayHandler::Print(unsigned int)+0x3c>
 800897c:	7901      	ldrb	r1, [r0, #4]
 800897e:	3901      	subs	r1, #1
 8008980:	b2c9      	uxtb	r1, r1
 8008982:	b168      	cbz	r0, 80089a0 <DisplayHandler::Print(unsigned int)+0x40>
 8008984:	7942      	ldrb	r2, [r0, #5]
 8008986:	3a01      	subs	r2, #1
 8008988:	b2d2      	uxtb	r2, r2
 800898a:	f7ff ffdf 	bl	800894c <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 800898e:	682b      	ldr	r3, [r5, #0]
 8008990:	4621      	mov	r1, r4
 8008992:	6998      	ldr	r0, [r3, #24]
 8008994:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8008998:	f7ff bfdd 	b.w	8008956 <Display::PutChar(int) [clone .isra.0]>
 800899c:	4601      	mov	r1, r0
 800899e:	e7ee      	b.n	800897e <DisplayHandler::Print(unsigned int)+0x1e>
 80089a0:	4602      	mov	r2, r0
 80089a2:	e7f0      	b.n	8008986 <DisplayHandler::Print(unsigned int)+0x26>
 80089a4:	bd38      	pop	{r3, r4, r5, pc}
 80089a6:	bf00      	nop
 80089a8:	08013564 	stmdaeq	r1, {r2, r5, r6, r8, sl, ip, sp}
 80089ac:	2000d160 	andcs	sp, r0, r0, ror #2

080089b0 <Display::SetSleep(bool)>:
 80089b0:	b538      	push	{r3, r4, r5, lr}
 80089b2:	4604      	mov	r4, r0
 80089b4:	6980      	ldr	r0, [r0, #24]
 80089b6:	460d      	mov	r5, r1
 80089b8:	b138      	cbz	r0, 80089ca <Display::SetSleep(bool)+0x1a>
 80089ba:	6803      	ldr	r3, [r0, #0]
 80089bc:	7421      	strb	r1, [r4, #16]
 80089be:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80089c0:	4798      	blx	r3
 80089c2:	b915      	cbnz	r5, 80089ca <Display::SetSleep(bool)+0x1a>
 80089c4:	4b01      	ldr	r3, [pc, #4]	; (80089cc <Display::SetSleep(bool)+0x1c>)
 80089c6:	681b      	ldr	r3, [r3, #0]
 80089c8:	6063      	str	r3, [r4, #4]
 80089ca:	bd38      	pop	{r3, r4, r5, pc}
 80089cc:	2000d26c 	andcs	sp, r0, ip, ror #4

080089d0 <Display::TextStatus(char const*)>:
 80089d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80089d4:	4604      	mov	r4, r0
 80089d6:	6980      	ldr	r0, [r0, #24]
 80089d8:	460d      	mov	r5, r1
 80089da:	b360      	cbz	r0, 8008a36 <Display::TextStatus(char const*)+0x66>
 80089dc:	7947      	ldrb	r7, [r0, #5]
 80089de:	2100      	movs	r1, #0
 80089e0:	1e7e      	subs	r6, r7, #1
 80089e2:	b2f6      	uxtb	r6, r6
 80089e4:	4632      	mov	r2, r6
 80089e6:	f890 9004 	ldrb.w	r9, [r0, #4]
 80089ea:	f04f 0800 	mov.w	r8, #0
 80089ee:	f7ff ffad 	bl	800894c <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 80089f2:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 80089f6:	45c1      	cmp	r9, r8
 80089f8:	69a0      	ldr	r0, [r4, #24]
 80089fa:	d905      	bls.n	8008a08 <Display::TextStatus(char const*)+0x38>
 80089fc:	2120      	movs	r1, #32
 80089fe:	f7ff ffaa 	bl	8008956 <Display::PutChar(int) [clone .isra.0]>
 8008a02:	f108 0801 	add.w	r8, r8, #1
 8008a06:	e7f6      	b.n	80089f6 <Display::TextStatus(char const*)+0x26>
 8008a08:	4632      	mov	r2, r6
 8008a0a:	2100      	movs	r1, #0
 8008a0c:	f7ff ff9e 	bl	800894c <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 8008a10:	69a0      	ldr	r0, [r4, #24]
 8008a12:	b180      	cbz	r0, 8008a36 <Display::TextStatus(char const*)+0x66>
 8008a14:	2300      	movs	r3, #0
 8008a16:	7901      	ldrb	r1, [r0, #4]
 8008a18:	5cea      	ldrb	r2, [r5, r3]
 8008a1a:	b11a      	cbz	r2, 8008a24 <Display::TextStatus(char const*)+0x54>
 8008a1c:	1c5a      	adds	r2, r3, #1
 8008a1e:	4299      	cmp	r1, r3
 8008a20:	4613      	mov	r3, r2
 8008a22:	dcf9      	bgt.n	8008a18 <Display::TextStatus(char const*)+0x48>
 8008a24:	6802      	ldr	r2, [r0, #0]
 8008a26:	4639      	mov	r1, r7
 8008a28:	69d4      	ldr	r4, [r2, #28]
 8008a2a:	b2db      	uxtb	r3, r3
 8008a2c:	462a      	mov	r2, r5
 8008a2e:	46a4      	mov	ip, r4
 8008a30:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008a34:	4760      	bx	ip
 8008a36:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08008a3a <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>:
 8008a3a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008a3c:	4605      	mov	r5, r0
 8008a3e:	461e      	mov	r6, r3
 8008a40:	460f      	mov	r7, r1
 8008a42:	4614      	mov	r4, r2
 8008a44:	f7ff ffc4 	bl	80089d0 <Display::TextStatus(char const*)>
 8008a48:	7c6b      	ldrb	r3, [r5, #17]
 8008a4a:	b19b      	cbz	r3, 8008a74 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x3a>
 8008a4c:	43e2      	mvns	r2, r4
 8008a4e:	2312      	movs	r3, #18
 8008a50:	7a28      	ldrb	r0, [r5, #8]
 8008a52:	f88d 3004 	strb.w	r3, [sp, #4]
 8008a56:	f3c2 2307 	ubfx	r3, r2, #8, #8
 8008a5a:	f88d 3005 	strb.w	r3, [sp, #5]
 8008a5e:	f88d 2006 	strb.w	r2, [sp, #6]
 8008a62:	f009 fd15 	bl	8012490 <gd32_i2c_set_address(unsigned char)>
 8008a66:	68e8      	ldr	r0, [r5, #12]
 8008a68:	f009 fd0a 	bl	8012480 <gd32_i2c_set_baudrate(unsigned int)>
 8008a6c:	2103      	movs	r1, #3
 8008a6e:	a801      	add	r0, sp, #4
 8008a70:	f009 fd14 	bl	801249c <gd32_i2c_write(char const*, unsigned int)>
 8008a74:	1c73      	adds	r3, r6, #1
 8008a76:	d006      	beq.n	8008a86 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x4c>
 8008a78:	4639      	mov	r1, r7
 8008a7a:	4630      	mov	r0, r6
 8008a7c:	b003      	add	sp, #12
 8008a7e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8008a82:	f007 be79 	b.w	8010778 <console_status>
 8008a86:	b003      	add	sp, #12
 8008a88:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08008a8c <main>:
 8008a8c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008a90:	2501      	movs	r5, #1
 8008a92:	f6ad 7db4 	subw	sp, sp, #4020	; 0xfb4
 8008a96:	a80d      	add	r0, sp, #52	; 0x34
 8008a98:	f007 ff22 	bl	80108e0 <Hardware::Hardware()>
 8008a9c:	a85a      	add	r0, sp, #360	; 0x168
 8008a9e:	f005 fc91 	bl	800e3c4 <Network::Network()>
 8008aa2:	a815      	add	r0, sp, #84	; 0x54
 8008aa4:	f007 fec6 	bl	8010834 <LedBlink::LedBlink()>
 8008aa8:	a844      	add	r0, sp, #272	; 0x110
 8008aaa:	f006 fd43 	bl	800f534 <DisplayUdf::DisplayUdf()>
 8008aae:	4ab4      	ldr	r2, [pc, #720]	; (8008d80 <main+0x2f4>)
 8008ab0:	4bb4      	ldr	r3, [pc, #720]	; (8008d84 <main+0x2f8>)
 8008ab2:	49b5      	ldr	r1, [pc, #724]	; (8008d88 <main+0x2fc>)
 8008ab4:	a802      	add	r0, sp, #8
 8008ab6:	f007 fe77 	bl	80107a8 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>
 8008aba:	a803      	add	r0, sp, #12
 8008abc:	f004 fb92 	bl	800d1e4 <FlashRom::FlashRom()>
 8008ac0:	f8df 82c8 	ldr.w	r8, [pc, #712]	; 8008d8c <main+0x300>
 8008ac4:	a804      	add	r0, sp, #16
 8008ac6:	f004 f909 	bl	800ccdc <SpiFlashStore::SpiFlashStore()>
 8008aca:	49b1      	ldr	r1, [pc, #708]	; (8008d90 <main+0x304>)
 8008acc:	a802      	add	r0, sp, #8
 8008ace:	f007 fea3 	bl	8010818 <FirmwareVersion::Print(char const*)>
 8008ad2:	2004      	movs	r0, #4
 8008ad4:	f8c8 5010 	str.w	r5, [r8, #16]
 8008ad8:	f007 ffb2 	bl	8010a40 <operator new(unsigned int)>
 8008adc:	4bad      	ldr	r3, [pc, #692]	; (8008d94 <main+0x308>)
 8008ade:	900d      	str	r0, [sp, #52]	; 0x34
 8008ae0:	6003      	str	r3, [r0, #0]
 8008ae2:	2008      	movs	r0, #8
 8008ae4:	f007 ffac 	bl	8010a40 <operator new(unsigned int)>
 8008ae8:	4bab      	ldr	r3, [pc, #684]	; (8008d98 <main+0x30c>)
 8008aea:	2400      	movs	r4, #0
 8008aec:	6003      	str	r3, [r0, #0]
 8008aee:	4bab      	ldr	r3, [pc, #684]	; (8008d9c <main+0x310>)
 8008af0:	f44f 62c0 	mov.w	r2, #1536	; 0x600
 8008af4:	681b      	ldr	r3, [r3, #0]
 8008af6:	49aa      	ldr	r1, [pc, #680]	; (8008da0 <main+0x314>)
 8008af8:	3b00      	subs	r3, #0
 8008afa:	bf18      	it	ne
 8008afc:	2301      	movne	r3, #1
 8008afe:	9017      	str	r0, [sp, #92]	; 0x5c
 8008b00:	7103      	strb	r3, [r0, #4]
 8008b02:	2303      	movs	r3, #3
 8008b04:	a844      	add	r0, sp, #272	; 0x110
 8008b06:	f7ff ff98 	bl	8008a3a <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008b0a:	a80f      	add	r0, sp, #60	; 0x3c
 8008b0c:	f004 fb2a 	bl	800d164 <StoreNetwork::StoreNetwork()>
 8008b10:	ab10      	add	r3, sp, #64	; 0x40
 8008b12:	a90f      	add	r1, sp, #60	; 0x3c
 8008b14:	a85a      	add	r0, sp, #360	; 0x168
 8008b16:	9387      	str	r3, [sp, #540]	; 0x21c
 8008b18:	f005 fcac 	bl	800e474 <Network::Init(NetworkParamsStore*)>
 8008b1c:	a85a      	add	r0, sp, #360	; 0x168
 8008b1e:	f005 fdd9 	bl	800e6d4 <Network::Print()>
 8008b22:	a805      	add	r0, sp, #20
 8008b24:	f005 f886 	bl	800dc34 <MDNS::MDNS()>
 8008b28:	a805      	add	r0, sp, #20
 8008b2a:	f005 f947 	bl	800ddbc <MDNS::Start()>
 8008b2e:	f642 1305 	movw	r3, #10501	; 0x2905
 8008b32:	4621      	mov	r1, r4
 8008b34:	4a9b      	ldr	r2, [pc, #620]	; (8008da4 <main+0x318>)
 8008b36:	e9cd 4400 	strd	r4, r4, [sp]
 8008b3a:	a805      	add	r0, sp, #20
 8008b3c:	f005 faaa 	bl	800e094 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 8008b40:	4b99      	ldr	r3, [pc, #612]	; (8008da8 <main+0x31c>)
 8008b42:	4621      	mov	r1, r4
 8008b44:	4a99      	ldr	r2, [pc, #612]	; (8008dac <main+0x320>)
 8008b46:	e9cd 5300 	strd	r5, r3, [sp]
 8008b4a:	a805      	add	r0, sp, #20
 8008b4c:	2350      	movs	r3, #80	; 0x50
 8008b4e:	f005 faa1 	bl	800e094 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 8008b52:	a805      	add	r0, sp, #20
 8008b54:	f005 fbe6 	bl	800e324 <MDNS::Print()>
 8008b58:	2303      	movs	r3, #3
 8008b5a:	f44f 42cc 	mov.w	r2, #26112	; 0x6600
 8008b5e:	4994      	ldr	r1, [pc, #592]	; (8008db0 <main+0x324>)
 8008b60:	a844      	add	r0, sp, #272	; 0x110
 8008b62:	f7ff ff6a 	bl	8008a3a <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008b66:	a806      	add	r0, sp, #24
 8008b68:	f004 fa50 	bl	800d00c <StoreE131::StoreE131()>
 8008b6c:	a906      	add	r1, sp, #24
 8008b6e:	a81b      	add	r0, sp, #108	; 0x6c
 8008b70:	f002 fcfe 	bl	800b570 <E131Params::E131Params(E131ParamsStore*)>
 8008b74:	f50d 6002 	add.w	r0, sp, #2080	; 0x820
 8008b78:	f001 fdf8 	bl	800a76c <E131Bridge::E131Bridge()>
 8008b7c:	a81b      	add	r0, sp, #108	; 0x6c
 8008b7e:	f002 fd17 	bl	800b5b0 <E131Params::Load()>
 8008b82:	b138      	cbz	r0, 8008b94 <main+0x108>
 8008b84:	a81b      	add	r0, sp, #108	; 0x6c
 8008b86:	f50d 6102 	add.w	r1, sp, #2080	; 0x820
 8008b8a:	f002 ff52 	bl	800ba32 <E131Params::Set(E131Bridge*)>
 8008b8e:	a81b      	add	r0, sp, #108	; 0x6c
 8008b90:	f002 ff88 	bl	800baa4 <E131Params::Dump()>
 8008b94:	2400      	movs	r4, #0
 8008b96:	2510      	movs	r5, #16
 8008b98:	2c03      	cmp	r4, #3
 8008b9a:	d813      	bhi.n	8008bc4 <main+0x138>
 8008b9c:	991c      	ldr	r1, [sp, #112]	; 0x70
 8008b9e:	fa05 f204 	lsl.w	r2, r5, r4
 8008ba2:	ab1b      	add	r3, sp, #108	; 0x6c
 8008ba4:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8008ba8:	438a      	bics	r2, r1
 8008baa:	f8b3 300b 	ldrh.w	r3, [r3, #11]
 8008bae:	d109      	bne.n	8008bc4 <main+0x138>
 8008bb0:	f89d 208a 	ldrb.w	r2, [sp, #138]	; 0x8a
 8008bb4:	4621      	mov	r1, r4
 8008bb6:	4122      	asrs	r2, r4
 8008bb8:	f002 0201 	and.w	r2, r2, #1
 8008bbc:	f50d 6002 	add.w	r0, sp, #2080	; 0x820
 8008bc0:	f001 fe74 	bl	800a8ac <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)>
 8008bc4:	3401      	adds	r4, #1
 8008bc6:	2c08      	cmp	r4, #8
 8008bc8:	d1e6      	bne.n	8008b98 <main+0x10c>
 8008bca:	a807      	add	r0, sp, #28
 8008bcc:	f004 f9ea 	bl	800cfa4 <StoreDmxSend::StoreDmxSend()>
 8008bd0:	a907      	add	r1, sp, #28
 8008bd2:	a811      	add	r0, sp, #68	; 0x44
 8008bd4:	f003 f846 	bl	800bc64 <DmxParams::DmxParams(DmxParamsStore*)>
 8008bd8:	a837      	add	r0, sp, #220	; 0xdc
 8008bda:	f003 fdcf 	bl	800c77c <Dmx::Dmx()>
 8008bde:	a811      	add	r0, sp, #68	; 0x44
 8008be0:	f003 f84c 	bl	800bc7c <DmxParams::Load()>
 8008be4:	b130      	cbz	r0, 8008bf4 <main+0x168>
 8008be6:	a811      	add	r0, sp, #68	; 0x44
 8008be8:	f003 f994 	bl	800bf14 <DmxParams::Dump()>
 8008bec:	a937      	add	r1, sp, #220	; 0xdc
 8008bee:	a811      	add	r0, sp, #68	; 0x44
 8008bf0:	f003 f966 	bl	800bec0 <DmxParams::Set(Dmx*)>
 8008bf4:	4b6f      	ldr	r3, [pc, #444]	; (8008db4 <main+0x328>)
 8008bf6:	ac08      	add	r4, sp, #32
 8008bf8:	4620      	mov	r0, r4
 8008bfa:	9308      	str	r3, [sp, #32]
 8008bfc:	f002 ffd8 	bl	800bbb0 <DmxSend::Print()>
 8008c00:	f89d 5d2b 	ldrb.w	r5, [sp, #3371]	; 0xd2b
 8008c04:	b16d      	cbz	r5, 8008c22 <main+0x196>
 8008c06:	2001      	movs	r0, #1
 8008c08:	f8cd 4824 	str.w	r4, [sp, #2084]	; 0x824
 8008c0c:	f007 ff18 	bl	8010a40 <operator new(unsigned int)>
 8008c10:	4b69      	ldr	r3, [pc, #420]	; (8008db8 <main+0x32c>)
 8008c12:	4605      	mov	r5, r0
 8008c14:	f44f 51a0 	mov.w	r1, #5120	; 0x1400
 8008c18:	6818      	ldr	r0, [r3, #0]
 8008c1a:	f005 fc03 	bl	800e424 <Network::Begin(unsigned short)>
 8008c1e:	4b67      	ldr	r3, [pc, #412]	; (8008dbc <main+0x330>)
 8008c20:	6018      	str	r0, [r3, #0]
 8008c22:	ac09      	add	r4, sp, #36	; 0x24
 8008c24:	4620      	mov	r0, r4
 8008c26:	f000 f9db 	bl	8008fe0 <DmxInput::DmxInput()>
 8008c2a:	f89d 3d2a 	ldrb.w	r3, [sp, #3370]	; 0xd2a
 8008c2e:	b10b      	cbz	r3, 8008c34 <main+0x1a8>
 8008c30:	f8cd 4834 	str.w	r4, [sp, #2100]	; 0x834
 8008c34:	f50d 6002 	add.w	r0, sp, #2080	; 0x820
 8008c38:	f002 fbd0 	bl	800b3dc <E131Bridge::Print()>
 8008c3c:	f89d 3d2b 	ldrb.w	r3, [sp, #3371]	; 0xd2b
 8008c40:	f89d 4d2a 	ldrb.w	r4, [sp, #3370]	; 0xd2a
 8008c44:	495e      	ldr	r1, [pc, #376]	; (8008dc0 <main+0x334>)
 8008c46:	441c      	add	r4, r3
 8008c48:	4622      	mov	r2, r4
 8008c4a:	a844      	add	r0, sp, #272	; 0x110
 8008c4c:	f006 fc88 	bl	800f560 <DisplayUdf::SetTitle(char const*, ...)>
 8008c50:	2202      	movs	r2, #2
 8008c52:	a844      	add	r0, sp, #272	; 0x110
 8008c54:	4611      	mov	r1, r2
 8008c56:	f006 fdd9 	bl	800f80c <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8008c5a:	220c      	movs	r2, #12
 8008c5c:	2103      	movs	r1, #3
 8008c5e:	a844      	add	r0, sp, #272	; 0x110
 8008c60:	f006 fdd4 	bl	800f80c <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8008c64:	2208      	movs	r2, #8
 8008c66:	2104      	movs	r1, #4
 8008c68:	a844      	add	r0, sp, #272	; 0x110
 8008c6a:	f006 fdcf 	bl	800f80c <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8008c6e:	2209      	movs	r2, #9
 8008c70:	2105      	movs	r1, #5
 8008c72:	a844      	add	r0, sp, #272	; 0x110
 8008c74:	f006 fdca 	bl	800f80c <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8008c78:	2201      	movs	r2, #1
 8008c7a:	2106      	movs	r1, #6
 8008c7c:	a844      	add	r0, sp, #272	; 0x110
 8008c7e:	f006 fdc5 	bl	800f80c <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8008c82:	a80a      	add	r0, sp, #40	; 0x28
 8008c84:	f004 f95a 	bl	800cf3c <StoreDisplayUdf::StoreDisplayUdf()>
 8008c88:	a90a      	add	r1, sp, #40	; 0x28
 8008c8a:	a82d      	add	r0, sp, #180	; 0xb4
 8008c8c:	f006 fe00 	bl	800f890 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 8008c90:	a82d      	add	r0, sp, #180	; 0xb4
 8008c92:	f006 fe0a 	bl	800f8aa <DisplayUdfParams::Load()>
 8008c96:	b130      	cbz	r0, 8008ca6 <main+0x21a>
 8008c98:	a82d      	add	r0, sp, #180	; 0xb4
 8008c9a:	a944      	add	r1, sp, #272	; 0x110
 8008c9c:	f006 ff3b 	bl	800fb16 <DisplayUdfParams::Set(DisplayUdf*)>
 8008ca0:	a82d      	add	r0, sp, #180	; 0xb4
 8008ca2:	f006 ff6b 	bl	800fb7c <DisplayUdfParams::Dump()>
 8008ca6:	f50d 6102 	add.w	r1, sp, #2080	; 0x820
 8008caa:	a844      	add	r0, sp, #272	; 0x110
 8008cac:	f006 ff68 	bl	800fb80 <DisplayUdf::Show(E131Bridge*)>
 8008cb0:	4623      	mov	r3, r4
 8008cb2:	2200      	movs	r2, #0
 8008cb4:	2101      	movs	r1, #1
 8008cb6:	a88c      	add	r0, sp, #560	; 0x230
 8008cb8:	f000 faee 	bl	8009298 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>
 8008cbc:	a80b      	add	r0, sp, #44	; 0x2c
 8008cbe:	f004 fa87 	bl	800d1d0 <StoreRemoteConfig::StoreRemoteConfig()>
 8008cc2:	a90b      	add	r1, sp, #44	; 0x2c
 8008cc4:	a824      	add	r0, sp, #144	; 0x90
 8008cc6:	f000 fde9 	bl	800989c <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 8008cca:	a824      	add	r0, sp, #144	; 0x90
 8008ccc:	f000 fdf0 	bl	80098b0 <RemoteConfigParams::Load()>
 8008cd0:	b130      	cbz	r0, 8008ce0 <main+0x254>
 8008cd2:	a824      	add	r0, sp, #144	; 0x90
 8008cd4:	a98c      	add	r1, sp, #560	; 0x230
 8008cd6:	f000 ff12 	bl	8009afe <RemoteConfigParams::Set(RemoteConfig*)>
 8008cda:	a824      	add	r0, sp, #144	; 0x90
 8008cdc:	f000 ff33 	bl	8009b46 <RemoteConfigParams::Dump()>
 8008ce0:	a804      	add	r0, sp, #16
 8008ce2:	f004 f8a7 	bl	800ce34 <SpiFlashStore::Flash()>
 8008ce6:	2800      	cmp	r0, #0
 8008ce8:	d1fa      	bne.n	8008ce0 <main+0x254>
 8008cea:	2303      	movs	r3, #3
 8008cec:	f44f 42fa 	mov.w	r2, #32000	; 0x7d00
 8008cf0:	4934      	ldr	r1, [pc, #208]	; (8008dc4 <main+0x338>)
 8008cf2:	a844      	add	r0, sp, #272	; 0x110
 8008cf4:	f7ff fea1 	bl	8008a3a <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008cf8:	f50d 6002 	add.w	r0, sp, #2080	; 0x820
 8008cfc:	f001 fcaa 	bl	800a654 <E131Bridge::Start()>
 8008d00:	2302      	movs	r3, #2
 8008d02:	f248 0280 	movw	r2, #32896	; 0x8080
 8008d06:	4930      	ldr	r1, [pc, #192]	; (8008dc8 <main+0x33c>)
 8008d08:	a844      	add	r0, sp, #272	; 0x110
 8008d0a:	f7ff fe96 	bl	8008a3a <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008d0e:	2102      	movs	r1, #2
 8008d10:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8008d14:	f008 fdca 	bl	80118ac <fwdgt_config>
 8008d18:	2801      	cmp	r0, #1
 8008d1a:	bf0c      	ite	eq
 8008d1c:	2301      	moveq	r3, #1
 8008d1e:	2300      	movne	r3, #0
 8008d20:	f88d 3038 	strb.w	r3, [sp, #56]	; 0x38
 8008d24:	d101      	bne.n	8008d2a <main+0x29e>
 8008d26:	f008 fdb1 	bl	801188c <fwdgt_enable>
 8008d2a:	f8df 90a0 	ldr.w	r9, [pc, #160]	; 8008dcc <main+0x340>
 8008d2e:	4f28      	ldr	r7, [pc, #160]	; (8008dd0 <main+0x344>)
 8008d30:	f008 fdb4 	bl	801189c <fwdgt_counter_reload>
 8008d34:	f7fe fc24 	bl	8007580 <net_handle>
 8008d38:	f50d 6002 	add.w	r0, sp, #2080	; 0x820
 8008d3c:	f002 f8fa 	bl	800af34 <E131Bridge::Run()>
 8008d40:	a88c      	add	r0, sp, #560	; 0x230
 8008d42:	f000 fc5b 	bl	80095fc <RemoteConfig::Run()>
 8008d46:	a804      	add	r0, sp, #16
 8008d48:	f004 f874 	bl	800ce34 <SpiFlashStore::Flash()>
 8008d4c:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8008d4e:	2a00      	cmp	r2, #0
 8008d50:	d040      	beq.n	8008dd4 <main+0x348>
 8008d52:	f8d9 3000 	ldr.w	r3, [r9]
 8008d56:	991a      	ldr	r1, [sp, #104]	; 0x68
 8008d58:	1a5b      	subs	r3, r3, r1
 8008d5a:	429a      	cmp	r2, r3
 8008d5c:	d83a      	bhi.n	8008dd4 <main+0x348>
 8008d5e:	f8d9 3000 	ldr.w	r3, [r9]
 8008d62:	931a      	str	r3, [sp, #104]	; 0x68
 8008d64:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8008d66:	2b01      	cmp	r3, #1
 8008d68:	f083 0201 	eor.w	r2, r3, #1
 8008d6c:	bf18      	it	ne
 8008d6e:	2301      	movne	r3, #1
 8008d70:	9219      	str	r2, [sp, #100]	; 0x64
 8008d72:	bf14      	ite	ne
 8008d74:	f8c8 3010 	strne.w	r3, [r8, #16]
 8008d78:	f8c8 3014 	streq.w	r3, [r8, #20]
 8008d7c:	e02a      	b.n	8008dd4 <main+0x348>
 8008d7e:	bf00      	nop
 8008d80:	080134ad 	stmdaeq	r1, {r0, r2, r3, r5, r7, sl, ip, sp}
 8008d84:	080134a4 	stmdaeq	r1, {r2, r5, r7, sl, ip, sp}
 8008d88:	08013569 	stmdaeq	r1, {r0, r3, r5, r6, r8, sl, ip, sp}
 8008d8c:	40011000 	andmi	r1, r1, r0
 8008d90:	080134b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, sl, ip, sp}
 8008d94:	08013558 	stmdaeq	r1, {r3, r4, r6, r8, sl, ip, sp}
 8008d98:	08013544 	stmdaeq	r1, {r2, r6, r8, sl, ip, sp}
 8008d9c:	2000d160 	andcs	sp, r0, r0, ror #2
 8008da0:	08014ad4 	stmdaeq	r1, {r2, r4, r6, r7, r9, fp, lr}
 8008da4:	080134e5 	stmdaeq	r1, {r0, r2, r5, r6, r7, sl, ip, sp}
 8008da8:	080134f5 	stmdaeq	r1, {r0, r2, r4, r5, r6, r7, sl, ip, sp}
 8008dac:	080134ee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, sl, ip, sp}
 8008db0:	08014714 	stmdaeq	r1, {r2, r4, r8, r9, sl, lr}
 8008db4:	08014898 	stmdaeq	r1, {r3, r4, r7, fp, lr}
 8008db8:	2000cb28 	andcs	ip, r0, r8, lsr #22
 8008dbc:	20000004 	andcs	r0, r0, r4
 8008dc0:	08013509 	stmdaeq	r1, {r0, r3, r8, sl, ip, sp}
 8008dc4:	08014700 	stmdaeq	r1, {r8, r9, sl, lr}
 8008dc8:	0801472b 	stmdaeq	r1, {r0, r1, r3, r5, r8, r9, sl, lr}
 8008dcc:	2000d26c 	andcs	sp, r0, ip, ror #4
 8008dd0:	20000000 	andcs	r0, r0, r0
 8008dd4:	9a49      	ldr	r2, [sp, #292]	; 0x124
 8008dd6:	b16a      	cbz	r2, 8008df4 <main+0x368>
 8008dd8:	f89d 3120 	ldrb.w	r3, [sp, #288]	; 0x120
 8008ddc:	2b00      	cmp	r3, #0
 8008dde:	d13f      	bne.n	8008e60 <main+0x3d4>
 8008de0:	f8d9 3000 	ldr.w	r3, [r9]
 8008de4:	9945      	ldr	r1, [sp, #276]	; 0x114
 8008de6:	1a5b      	subs	r3, r3, r1
 8008de8:	429a      	cmp	r2, r3
 8008dea:	d203      	bcs.n	8008df4 <main+0x368>
 8008dec:	2101      	movs	r1, #1
 8008dee:	a844      	add	r0, sp, #272	; 0x110
 8008df0:	f7ff fdde 	bl	80089b0 <Display::SetSleep(bool)>
 8008df4:	b385      	cbz	r5, 8008e58 <main+0x3cc>
 8008df6:	f10d 0316 	add.w	r3, sp, #22
 8008dfa:	4e41      	ldr	r6, [pc, #260]	; (8008f00 <main+0x474>)
 8008dfc:	4841      	ldr	r0, [pc, #260]	; (8008f04 <main+0x478>)
 8008dfe:	9300      	str	r3, [sp, #0]
 8008e00:	2210      	movs	r2, #16
 8008e02:	4631      	mov	r1, r6
 8008e04:	7800      	ldrb	r0, [r0, #0]
 8008e06:	ab0c      	add	r3, sp, #48	; 0x30
 8008e08:	f004 fde0 	bl	800d9cc <udp_recv>
 8008e0c:	280a      	cmp	r0, #10
 8008e0e:	4604      	mov	r4, r0
 8008e10:	d922      	bls.n	8008e58 <main+0x3cc>
 8008e12:	2204      	movs	r2, #4
 8008e14:	4631      	mov	r1, r6
 8008e16:	483c      	ldr	r0, [pc, #240]	; (8008f08 <main+0x47c>)
 8008e18:	f7ff fd57 	bl	80088ca <memcmp>
 8008e1c:	b9e0      	cbnz	r0, 8008e58 <main+0x3cc>
 8008e1e:	4426      	add	r6, r4
 8008e20:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8008e24:	2b0a      	cmp	r3, #10
 8008e26:	d103      	bne.n	8008e30 <main+0x3a4>
 8008e28:	3c01      	subs	r4, #1
 8008e2a:	b2a4      	uxth	r4, r4
 8008e2c:	2c0a      	cmp	r4, #10
 8008e2e:	d051      	beq.n	8008ed4 <main+0x448>
 8008e30:	2c0e      	cmp	r4, #14
 8008e32:	d84d      	bhi.n	8008ed0 <main+0x444>
 8008e34:	2206      	movs	r2, #6
 8008e36:	6839      	ldr	r1, [r7, #0]
 8008e38:	4834      	ldr	r0, [pc, #208]	; (8008f0c <main+0x480>)
 8008e3a:	f7ff fd46 	bl	80088ca <memcmp>
 8008e3e:	2800      	cmp	r0, #0
 8008e40:	d148      	bne.n	8008ed4 <main+0x448>
 8008e42:	2104      	movs	r1, #4
 8008e44:	4832      	ldr	r0, [pc, #200]	; (8008f10 <main+0x484>)
 8008e46:	f7ff fd52 	bl	80088ee <dmxconfigudp::atoi(char const*, unsigned char)>
 8008e4a:	285b      	cmp	r0, #91	; 0x5b
 8008e4c:	4601      	mov	r1, r0
 8008e4e:	d903      	bls.n	8008e58 <main+0x3cc>
 8008e50:	4b30      	ldr	r3, [pc, #192]	; (8008f14 <main+0x488>)
 8008e52:	6818      	ldr	r0, [r3, #0]
 8008e54:	f003 fe20 	bl	800ca98 <Dmx::SetDmxBreakTime(unsigned int)>
 8008e58:	a805      	add	r0, sp, #20
 8008e5a:	f005 fa3f 	bl	800e2dc <MDNS::Run()>
 8008e5e:	e767      	b.n	8008d30 <main+0x2a4>
 8008e60:	f007 fa53 	bl	801030a <display::timeout::gpio_renew()>
 8008e64:	2800      	cmp	r0, #0
 8008e66:	d0c5      	beq.n	8008df4 <main+0x368>
 8008e68:	2100      	movs	r1, #0
 8008e6a:	e7c0      	b.n	8008dee <main+0x362>
 8008e6c:	2c0c      	cmp	r4, #12
 8008e6e:	d915      	bls.n	8008e9c <main+0x410>
 8008e70:	2c0e      	cmp	r4, #14
 8008e72:	d82a      	bhi.n	8008eca <main+0x43e>
 8008e74:	2208      	movs	r2, #8
 8008e76:	6839      	ldr	r1, [r7, #0]
 8008e78:	4827      	ldr	r0, [pc, #156]	; (8008f18 <main+0x48c>)
 8008e7a:	f7ff fd26 	bl	80088ca <memcmp>
 8008e7e:	bb20      	cbnz	r0, 8008eca <main+0x43e>
 8008e80:	2102      	movs	r1, #2
 8008e82:	4826      	ldr	r0, [pc, #152]	; (8008f1c <main+0x490>)
 8008e84:	f7ff fd33 	bl	80088ee <dmxconfigudp::atoi(char const*, unsigned char)>
 8008e88:	4601      	mov	r1, r0
 8008e8a:	b110      	cbz	r0, 8008e92 <main+0x406>
 8008e8c:	4b24      	ldr	r3, [pc, #144]	; (8008f20 <main+0x494>)
 8008e8e:	fbb3 f1f0 	udiv	r1, r3, r0
 8008e92:	4b20      	ldr	r3, [pc, #128]	; (8008f14 <main+0x488>)
 8008e94:	6818      	ldr	r0, [r3, #0]
 8008e96:	f003 fdbf 	bl	800ca18 <Dmx::SetDmxPeriodTime(unsigned int)>
 8008e9a:	e7dd      	b.n	8008e58 <main+0x3cc>
 8008e9c:	2c0a      	cmp	r4, #10
 8008e9e:	d0db      	beq.n	8008e58 <main+0x3cc>
 8008ea0:	2206      	movs	r2, #6
 8008ea2:	6839      	ldr	r1, [r7, #0]
 8008ea4:	481f      	ldr	r0, [pc, #124]	; (8008f24 <main+0x498>)
 8008ea6:	f7ff fd10 	bl	80088ca <memcmp>
 8008eaa:	2800      	cmp	r0, #0
 8008eac:	d1d4      	bne.n	8008e58 <main+0x3cc>
 8008eae:	2103      	movs	r1, #3
 8008eb0:	4817      	ldr	r0, [pc, #92]	; (8008f10 <main+0x484>)
 8008eb2:	f7ff fd1c 	bl	80088ee <dmxconfigudp::atoi(char const*, unsigned char)>
 8008eb6:	1e83      	subs	r3, r0, #2
 8008eb8:	f5b3 7fff 	cmp.w	r3, #510	; 0x1fe
 8008ebc:	d8cc      	bhi.n	8008e58 <main+0x3cc>
 8008ebe:	4b15      	ldr	r3, [pc, #84]	; (8008f14 <main+0x488>)
 8008ec0:	b281      	uxth	r1, r0
 8008ec2:	6818      	ldr	r0, [r3, #0]
 8008ec4:	f003 fdfc 	bl	800cac0 <Dmx::SetDmxSlots(unsigned short)>
 8008ec8:	e7c6      	b.n	8008e58 <main+0x3cc>
 8008eca:	2c0d      	cmp	r4, #13
 8008ecc:	d0e8      	beq.n	8008ea0 <main+0x414>
 8008ece:	e7c3      	b.n	8008e58 <main+0x3cc>
 8008ed0:	2c10      	cmp	r4, #16
 8008ed2:	d8c1      	bhi.n	8008e58 <main+0x3cc>
 8008ed4:	2204      	movs	r2, #4
 8008ed6:	6839      	ldr	r1, [r7, #0]
 8008ed8:	4813      	ldr	r0, [pc, #76]	; (8008f28 <main+0x49c>)
 8008eda:	f7ff fcf6 	bl	80088ca <memcmp>
 8008ede:	2800      	cmp	r0, #0
 8008ee0:	d1c4      	bne.n	8008e6c <main+0x3e0>
 8008ee2:	2107      	movs	r1, #7
 8008ee4:	4811      	ldr	r0, [pc, #68]	; (8008f2c <main+0x4a0>)
 8008ee6:	f7ff fd02 	bl	80088ee <dmxconfigudp::atoi(char const*, unsigned char)>
 8008eea:	4b11      	ldr	r3, [pc, #68]	; (8008f30 <main+0x4a4>)
 8008eec:	f1a0 020c 	sub.w	r2, r0, #12
 8008ef0:	429a      	cmp	r2, r3
 8008ef2:	4601      	mov	r1, r0
 8008ef4:	d8b0      	bhi.n	8008e58 <main+0x3cc>
 8008ef6:	4b07      	ldr	r3, [pc, #28]	; (8008f14 <main+0x488>)
 8008ef8:	6818      	ldr	r0, [r3, #0]
 8008efa:	f003 fdd7 	bl	800caac <Dmx::SetDmxMabTime(unsigned int)>
 8008efe:	e7ab      	b.n	8008e58 <main+0x3cc>
 8008f00:	20003155 	andcs	r3, r0, r5, asr r1
 8008f04:	20000004 	andcs	r0, r0, r4
 8008f08:	0801351b 	stmdaeq	r1, {r0, r1, r3, r4, r8, sl, ip, sp}
 8008f0c:	08013520 	stmdaeq	r1, {r5, r8, sl, ip, sp}
 8008f10:	2000315f 	andcs	r3, r0, pc, asr r1
 8008f14:	2000420c 	andcs	r4, r0, ip, lsl #4
 8008f18:	0801352c 	stmdaeq	r1, {r2, r3, r5, r8, sl, ip, sp}
 8008f1c:	20003161 	andcs	r3, r0, r1, ror #2
 8008f20:	000f4240 	andeq	r4, pc, r0, asr #4
 8008f24:	08013535 	stmdaeq	r1, {r0, r2, r4, r5, r8, sl, ip, sp}
 8008f28:	08013527 	stmdaeq	r1, {r0, r1, r2, r5, r8, sl, ip, sp}
 8008f2c:	2000315d 	andcs	r3, r0, sp, asr r1
 8008f30:	000f4234 	andeq	r4, pc, r4, lsr r2	; <UNPREDICTABLE>

08008f34 <DmxInput::~DmxInput()>:
 8008f34:	4770      	bx	lr
	...

08008f38 <DmxInput::Start(unsigned int)>:
 8008f38:	2301      	movs	r3, #1
 8008f3a:	b410      	push	{r4}
 8008f3c:	4c08      	ldr	r4, [pc, #32]	; (8008f60 <DmxInput::Start(unsigned int)+0x28>)
 8008f3e:	fa03 f001 	lsl.w	r0, r3, r1
 8008f42:	7822      	ldrb	r2, [r4, #0]
 8008f44:	ea30 0c02 	bics.w	ip, r0, r2
 8008f48:	d007      	beq.n	8008f5a <DmxInput::Start(unsigned int)+0x22>
 8008f4a:	4302      	orrs	r2, r0
 8008f4c:	4805      	ldr	r0, [pc, #20]	; (8008f64 <DmxInput::Start(unsigned int)+0x2c>)
 8008f4e:	7022      	strb	r2, [r4, #0]
 8008f50:	6800      	ldr	r0, [r0, #0]
 8008f52:	461a      	mov	r2, r3
 8008f54:	bc10      	pop	{r4}
 8008f56:	f003 bbd7 	b.w	800c708 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8008f5a:	bc10      	pop	{r4}
 8008f5c:	4770      	bx	lr
 8008f5e:	bf00      	nop
 8008f60:	200000f8 	strdcs	r0, [r0], -r8
 8008f64:	2000420c 	andcs	r4, r0, ip, lsl #4

08008f68 <DmxInput::Stop(unsigned int)>:
 8008f68:	2201      	movs	r2, #1
 8008f6a:	b410      	push	{r4}
 8008f6c:	4c08      	ldr	r4, [pc, #32]	; (8008f90 <DmxInput::Stop(unsigned int)+0x28>)
 8008f6e:	fa02 f001 	lsl.w	r0, r2, r1
 8008f72:	7823      	ldrb	r3, [r4, #0]
 8008f74:	ea30 0c03 	bics.w	ip, r0, r3
 8008f78:	d108      	bne.n	8008f8c <DmxInput::Stop(unsigned int)+0x24>
 8008f7a:	ea23 0300 	bic.w	r3, r3, r0
 8008f7e:	4805      	ldr	r0, [pc, #20]	; (8008f94 <DmxInput::Stop(unsigned int)+0x2c>)
 8008f80:	7023      	strb	r3, [r4, #0]
 8008f82:	6800      	ldr	r0, [r0, #0]
 8008f84:	2300      	movs	r3, #0
 8008f86:	bc10      	pop	{r4}
 8008f88:	f003 bbbe 	b.w	800c708 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8008f8c:	bc10      	pop	{r4}
 8008f8e:	4770      	bx	lr
 8008f90:	200000f8 	strdcs	r0, [r0], -r8
 8008f94:	2000420c 	andcs	r4, r0, ip, lsl #4

08008f98 <DmxInput::Handler(unsigned int, unsigned int&, unsigned int&)>:
 8008f98:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008f9c:	f8df 8030 	ldr.w	r8, [pc, #48]	; 8008fd0 <DmxInput::Handler(unsigned int, unsigned int&, unsigned int&)+0x38>
 8008fa0:	461e      	mov	r6, r3
 8008fa2:	f8d8 0000 	ldr.w	r0, [r8]
 8008fa6:	460f      	mov	r7, r1
 8008fa8:	4615      	mov	r5, r2
 8008faa:	f003 fdcd 	bl	800cb48 <Dmx::GetDmxAvailable(unsigned int)>
 8008fae:	4639      	mov	r1, r7
 8008fb0:	4604      	mov	r4, r0
 8008fb2:	f8d8 0000 	ldr.w	r0, [r8]
 8008fb6:	f003 fddb 	bl	800cb70 <Dmx::GetUpdatesPerSecond(unsigned int)>
 8008fba:	6030      	str	r0, [r6, #0]
 8008fbc:	b134      	cbz	r4, 8008fcc <DmxInput::Handler(unsigned int, unsigned int&, unsigned int&)+0x34>
 8008fbe:	f8d4 3204 	ldr.w	r3, [r4, #516]	; 0x204
 8008fc2:	3301      	adds	r3, #1
 8008fc4:	4620      	mov	r0, r4
 8008fc6:	602b      	str	r3, [r5, #0]
 8008fc8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008fcc:	4623      	mov	r3, r4
 8008fce:	e7f9      	b.n	8008fc4 <DmxInput::Handler(unsigned int, unsigned int&, unsigned int&)+0x2c>
 8008fd0:	2000420c 	andcs	r4, r0, ip, lsl #4

08008fd4 <DmxInput::~DmxInput()>:
 8008fd4:	b510      	push	{r4, lr}
 8008fd6:	4604      	mov	r4, r0
 8008fd8:	f007 fd2e 	bl	8010a38 <operator delete(void*)>
 8008fdc:	4620      	mov	r0, r4
 8008fde:	bd10      	pop	{r4, pc}

08008fe0 <DmxInput::DmxInput()>:
 8008fe0:	b538      	push	{r3, r4, r5, lr}
 8008fe2:	4604      	mov	r4, r0
 8008fe4:	2500      	movs	r5, #0
 8008fe6:	4b05      	ldr	r3, [pc, #20]	; (8008ffc <DmxInput::DmxInput()+0x1c>)
 8008fe8:	6003      	str	r3, [r0, #0]
 8008fea:	4629      	mov	r1, r5
 8008fec:	4620      	mov	r0, r4
 8008fee:	3501      	adds	r5, #1
 8008ff0:	f7ff ffba 	bl	8008f68 <DmxInput::Stop(unsigned int)>
 8008ff4:	2d08      	cmp	r5, #8
 8008ff6:	d1f8      	bne.n	8008fea <DmxInput::DmxInput()+0xa>
 8008ff8:	4620      	mov	r0, r4
 8008ffa:	bd38      	pop	{r3, r4, r5, pc}
 8008ffc:	08013578 	stmdaeq	r1, {r3, r4, r5, r6, r8, sl, ip, sp}

08009000 <RemoteConfig::HandleList()>:
 8009000:	2212      	movs	r2, #18
 8009002:	6803      	ldr	r3, [r0, #0]
 8009004:	4931      	ldr	r1, [pc, #196]	; (80090cc <RemoteConfig::HandleList()+0xcc>)
 8009006:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800900a:	fb02 1103 	mla	r1, r2, r3, r1
 800900e:	220c      	movs	r2, #12
 8009010:	4604      	mov	r4, r0
 8009012:	6843      	ldr	r3, [r0, #4]
 8009014:	482e      	ldr	r0, [pc, #184]	; (80090d0 <RemoteConfig::HandleList()+0xd0>)
 8009016:	4e2f      	ldr	r6, [pc, #188]	; (80090d4 <RemoteConfig::HandleList()+0xd4>)
 8009018:	fb02 0003 	mla	r0, r2, r3, r0
 800901c:	4b2e      	ldr	r3, [pc, #184]	; (80090d8 <RemoteConfig::HandleList()+0xd8>)
 800901e:	4f2f      	ldr	r7, [pc, #188]	; (80090dc <RemoteConfig::HandleList()+0xdc>)
 8009020:	681b      	ldr	r3, [r3, #0]
 8009022:	6835      	ldr	r5, [r6, #0]
 8009024:	f8d3 c010 	ldr.w	ip, [r3, #16]
 8009028:	f897 9009 	ldrb.w	r9, [r7, #9]
 800902c:	fa5f f38c 	uxtb.w	r3, ip
 8009030:	ea4f 6e1c 	mov.w	lr, ip, lsr #24
 8009034:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8009038:	f8d4 8008 	ldr.w	r8, [r4, #8]
 800903c:	b089      	sub	sp, #36	; 0x24
 800903e:	3507      	adds	r5, #7
 8009040:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8009044:	f1b9 0f00 	cmp.w	r9, #0
 8009048:	d023      	beq.n	8009092 <RemoteConfig::HandleList()+0x92>
 800904a:	b2d2      	uxtb	r2, r2
 800904c:	3709      	adds	r7, #9
 800904e:	9201      	str	r2, [sp, #4]
 8009050:	fa5f f28c 	uxtb.w	r2, ip
 8009054:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8009058:	9200      	str	r2, [sp, #0]
 800905a:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 800905e:	4628      	mov	r0, r5
 8009060:	e9cd 8705 	strd	r8, r7, [sp, #20]
 8009064:	4a1e      	ldr	r2, [pc, #120]	; (80090e0 <RemoteConfig::HandleList()+0xe0>)
 8009066:	f8cd e008 	str.w	lr, [sp, #8]
 800906a:	f008 f917 	bl	801129c <snprintf>
 800906e:	f8d4 35e4 	ldr.w	r3, [r4, #1508]	; 0x5e4
 8009072:	2b05      	cmp	r3, #5
 8009074:	d11d      	bne.n	80090b2 <RemoteConfig::HandleList()+0xb2>
 8009076:	f642 1305 	movw	r3, #10501	; 0x2905
 800907a:	9300      	str	r3, [sp, #0]
 800907c:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 8009080:	b282      	uxth	r2, r0
 8009082:	4629      	mov	r1, r5
 8009084:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 8009088:	f004 fcfc 	bl	800da84 <udp_send>
 800908c:	b009      	add	sp, #36	; 0x24
 800908e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8009092:	b2d2      	uxtb	r2, r2
 8009094:	9201      	str	r2, [sp, #4]
 8009096:	fa5f f28c 	uxtb.w	r2, ip
 800909a:	e9cd 0804 	strd	r0, r8, [sp, #16]
 800909e:	e9cd e102 	strd	lr, r1, [sp, #8]
 80090a2:	9200      	str	r2, [sp, #0]
 80090a4:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 80090a8:	4628      	mov	r0, r5
 80090aa:	4a0e      	ldr	r2, [pc, #56]	; (80090e4 <RemoteConfig::HandleList()+0xe4>)
 80090ac:	f008 f8f6 	bl	801129c <snprintf>
 80090b0:	e7dd      	b.n	800906e <RemoteConfig::HandleList()+0x6e>
 80090b2:	2b06      	cmp	r3, #6
 80090b4:	d1ea      	bne.n	800908c <RemoteConfig::HandleList()+0x8c>
 80090b6:	6833      	ldr	r3, [r6, #0]
 80090b8:	799b      	ldrb	r3, [r3, #6]
 80090ba:	2b2a      	cmp	r3, #42	; 0x2a
 80090bc:	d1e6      	bne.n	800908c <RemoteConfig::HandleList()+0x8c>
 80090be:	f642 1305 	movw	r3, #10501	; 0x2905
 80090c2:	9300      	str	r3, [sp, #0]
 80090c4:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80090c8:	e7da      	b.n	8009080 <RemoteConfig::HandleList()+0x80>
 80090ca:	bf00      	nop
 80090cc:	08013652 	stmdaeq	r1, {r1, r4, r6, r9, sl, ip, sp}
 80090d0:	080136f4 	stmdaeq	r1, {r2, r4, r5, r6, r7, r9, sl, ip, sp}
 80090d4:	200000fc 	strdcs	r0, [r0], -ip
 80090d8:	2000cb28 	andcs	ip, r0, r8, lsr #22
 80090dc:	20000100 	andcs	r0, r0, r0, lsl #2
 80090e0:	0801358c 	stmdaeq	r1, {r2, r3, r7, r8, sl, ip, sp}
 80090e4:	080135a5 	stmdaeq	r1, {r0, r2, r5, r7, r8, sl, ip, sp}

080090e8 <RemoteConfig::HandleDisplayGet()>:
 80090e8:	f8d0 35e4 	ldr.w	r3, [r0, #1508]	; 0x5e4
 80090ec:	2b08      	cmp	r3, #8
 80090ee:	d11d      	bne.n	800912c <RemoteConfig::HandleDisplayGet()+0x44>
 80090f0:	4b0f      	ldr	r3, [pc, #60]	; (8009130 <RemoteConfig::HandleDisplayGet()+0x48>)
 80090f2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80090f4:	681b      	ldr	r3, [r3, #0]
 80090f6:	4d0f      	ldr	r5, [pc, #60]	; (8009134 <RemoteConfig::HandleDisplayGet()+0x4c>)
 80090f8:	7c19      	ldrb	r1, [r3, #16]
 80090fa:	4a0f      	ldr	r2, [pc, #60]	; (8009138 <RemoteConfig::HandleDisplayGet()+0x50>)
 80090fc:	4b0f      	ldr	r3, [pc, #60]	; (800913c <RemoteConfig::HandleDisplayGet()+0x54>)
 80090fe:	4604      	mov	r4, r0
 8009100:	2900      	cmp	r1, #0
 8009102:	bf18      	it	ne
 8009104:	4613      	movne	r3, r2
 8009106:	6828      	ldr	r0, [r5, #0]
 8009108:	f240 31ff 	movw	r1, #1023	; 0x3ff
 800910c:	4a0c      	ldr	r2, [pc, #48]	; (8009140 <RemoteConfig::HandleDisplayGet()+0x58>)
 800910e:	f008 f8c5 	bl	801129c <snprintf>
 8009112:	f642 1305 	movw	r3, #10501	; 0x2905
 8009116:	9300      	str	r3, [sp, #0]
 8009118:	b282      	uxth	r2, r0
 800911a:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800911e:	6829      	ldr	r1, [r5, #0]
 8009120:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 8009124:	f004 fcae 	bl	800da84 <udp_send>
 8009128:	b003      	add	sp, #12
 800912a:	bd30      	pop	{r4, r5, pc}
 800912c:	4770      	bx	lr
 800912e:	bf00      	nop
 8009130:	2000d160 	andcs	sp, r0, r0, ror #2
 8009134:	200000fc 	strdcs	r0, [r0], -ip
 8009138:	080135be 	stmdaeq	r1, {r1, r2, r3, r4, r5, r7, r8, sl, ip, sp}
 800913c:	080135bb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r7, r8, sl, ip, sp}
 8009140:	080135c2 	stmdaeq	r1, {r1, r6, r7, r8, sl, ip, sp}

08009144 <RemoteConfig::HandleTftpSet()>:
 8009144:	f8d0 25e4 	ldr.w	r2, [r0, #1508]	; 0x5e4
 8009148:	2a06      	cmp	r2, #6
 800914a:	d109      	bne.n	8009160 <RemoteConfig::HandleTftpSet()+0x1c>
 800914c:	4a05      	ldr	r2, [pc, #20]	; (8009164 <RemoteConfig::HandleTftpSet()+0x20>)
 800914e:	6812      	ldr	r2, [r2, #0]
 8009150:	7992      	ldrb	r2, [r2, #6]
 8009152:	3a30      	subs	r2, #48	; 0x30
 8009154:	bf18      	it	ne
 8009156:	2201      	movne	r2, #1
 8009158:	f880 25ec 	strb.w	r2, [r0, #1516]	; 0x5ec
 800915c:	f000 bd72 	b.w	8009c44 <RemoteConfig::PlatformHandleTftpSet()>
 8009160:	4770      	bx	lr
 8009162:	bf00      	nop
 8009164:	200000fc 	strdcs	r0, [r0], -ip

08009168 <RemoteConfig::HandleTftpGet()>:
 8009168:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800916a:	4604      	mov	r4, r0
 800916c:	f000 fd72 	bl	8009c54 <RemoteConfig::PlatformHandleTftpGet()>
 8009170:	f8d4 35e4 	ldr.w	r3, [r4, #1508]	; 0x5e4
 8009174:	2b05      	cmp	r3, #5
 8009176:	d118      	bne.n	80091aa <RemoteConfig::HandleTftpGet()+0x42>
 8009178:	f894 15ec 	ldrb.w	r1, [r4, #1516]	; 0x5ec
 800917c:	4d0c      	ldr	r5, [pc, #48]	; (80091b0 <RemoteConfig::HandleTftpGet()+0x48>)
 800917e:	4a0d      	ldr	r2, [pc, #52]	; (80091b4 <RemoteConfig::HandleTftpGet()+0x4c>)
 8009180:	4b0d      	ldr	r3, [pc, #52]	; (80091b8 <RemoteConfig::HandleTftpGet()+0x50>)
 8009182:	6828      	ldr	r0, [r5, #0]
 8009184:	2900      	cmp	r1, #0
 8009186:	bf08      	it	eq
 8009188:	4613      	moveq	r3, r2
 800918a:	f240 31ff 	movw	r1, #1023	; 0x3ff
 800918e:	4a0b      	ldr	r2, [pc, #44]	; (80091bc <RemoteConfig::HandleTftpGet()+0x54>)
 8009190:	f008 f884 	bl	801129c <snprintf>
 8009194:	f642 1305 	movw	r3, #10501	; 0x2905
 8009198:	b282      	uxth	r2, r0
 800919a:	9300      	str	r3, [sp, #0]
 800919c:	6829      	ldr	r1, [r5, #0]
 800919e:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 80091a2:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 80091a6:	f004 fc6d 	bl	800da84 <udp_send>
 80091aa:	b003      	add	sp, #12
 80091ac:	bd30      	pop	{r4, r5, pc}
 80091ae:	bf00      	nop
 80091b0:	200000fc 	strdcs	r0, [r0], -ip
 80091b4:	080135be 	stmdaeq	r1, {r1, r2, r3, r4, r5, r7, r8, sl, ip, sp}
 80091b8:	080135bb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r7, r8, sl, ip, sp}
 80091bc:	080135ce 	stmdaeq	r1, {r1, r2, r3, r6, r7, r8, sl, ip, sp}

080091c0 <RemoteConfig::HandleVersion()>:
 80091c0:	f8d0 35e4 	ldr.w	r3, [r0, #1508]	; 0x5e4
 80091c4:	2b08      	cmp	r3, #8
 80091c6:	d116      	bne.n	80091f6 <RemoteConfig::HandleVersion()+0x36>
 80091c8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80091ca:	4d0b      	ldr	r5, [pc, #44]	; (80091f8 <RemoteConfig::HandleVersion()+0x38>)
 80091cc:	4604      	mov	r4, r0
 80091ce:	f240 31ff 	movw	r1, #1023	; 0x3ff
 80091d2:	4b0a      	ldr	r3, [pc, #40]	; (80091fc <RemoteConfig::HandleVersion()+0x3c>)
 80091d4:	4a0a      	ldr	r2, [pc, #40]	; (8009200 <RemoteConfig::HandleVersion()+0x40>)
 80091d6:	6828      	ldr	r0, [r5, #0]
 80091d8:	f008 f860 	bl	801129c <snprintf>
 80091dc:	f642 1305 	movw	r3, #10501	; 0x2905
 80091e0:	9300      	str	r3, [sp, #0]
 80091e2:	b282      	uxth	r2, r0
 80091e4:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 80091e8:	6829      	ldr	r1, [r5, #0]
 80091ea:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 80091ee:	f004 fc49 	bl	800da84 <udp_send>
 80091f2:	b003      	add	sp, #12
 80091f4:	bd30      	pop	{r4, r5, pc}
 80091f6:	4770      	bx	lr
 80091f8:	200000fc 	strdcs	r0, [r0], -ip
 80091fc:	2000d206 	andcs	sp, r0, r6, lsl #4
 8009200:	080135d7 	stmdaeq	r1, {r0, r1, r2, r4, r6, r7, r8, sl, ip, sp}

08009204 <RemoteConfig::HandleUptime()>:
 8009204:	f890 35d7 	ldrb.w	r3, [r0, #1495]	; 0x5d7
 8009208:	b1fb      	cbz	r3, 800924a <RemoteConfig::HandleUptime()+0x46>
 800920a:	4b10      	ldr	r3, [pc, #64]	; (800924c <RemoteConfig::HandleUptime()+0x48>)
 800920c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800920e:	681a      	ldr	r2, [r3, #0]
 8009210:	f8d0 35e4 	ldr.w	r3, [r0, #1508]	; 0x5e4
 8009214:	4604      	mov	r4, r0
 8009216:	2b07      	cmp	r3, #7
 8009218:	d115      	bne.n	8009246 <RemoteConfig::HandleUptime()+0x42>
 800921a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800921e:	4d0c      	ldr	r5, [pc, #48]	; (8009250 <RemoteConfig::HandleUptime()+0x4c>)
 8009220:	fbb2 f3f3 	udiv	r3, r2, r3
 8009224:	f240 31ff 	movw	r1, #1023	; 0x3ff
 8009228:	4a0a      	ldr	r2, [pc, #40]	; (8009254 <RemoteConfig::HandleUptime()+0x50>)
 800922a:	6828      	ldr	r0, [r5, #0]
 800922c:	f008 f836 	bl	801129c <snprintf>
 8009230:	f642 1305 	movw	r3, #10501	; 0x2905
 8009234:	9300      	str	r3, [sp, #0]
 8009236:	b282      	uxth	r2, r0
 8009238:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800923c:	6829      	ldr	r1, [r5, #0]
 800923e:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 8009242:	f004 fc1f 	bl	800da84 <udp_send>
 8009246:	b003      	add	sp, #12
 8009248:	bd30      	pop	{r4, r5, pc}
 800924a:	4770      	bx	lr
 800924c:	2000d26c 	andcs	sp, r0, ip, ror #4
 8009250:	200000fc 	strdcs	r0, [r0], -ip
 8009254:	080135e2 	stmdaeq	r1, {r1, r5, r6, r7, r8, sl, ip, sp}

08009258 <RemoteConfig::HandleDisplaySet()>:
 8009258:	b538      	push	{r3, r4, r5, lr}
 800925a:	f8d0 35e4 	ldr.w	r3, [r0, #1508]	; 0x5e4
 800925e:	2b09      	cmp	r3, #9
 8009260:	d113      	bne.n	800928a <RemoteConfig::HandleDisplaySet()+0x32>
 8009262:	4b0a      	ldr	r3, [pc, #40]	; (800928c <RemoteConfig::HandleDisplaySet()+0x34>)
 8009264:	681c      	ldr	r4, [r3, #0]
 8009266:	4b0a      	ldr	r3, [pc, #40]	; (8009290 <RemoteConfig::HandleDisplaySet()+0x38>)
 8009268:	69a0      	ldr	r0, [r4, #24]
 800926a:	681b      	ldr	r3, [r3, #0]
 800926c:	7a5d      	ldrb	r5, [r3, #9]
 800926e:	f1a5 0330 	sub.w	r3, r5, #48	; 0x30
 8009272:	4259      	negs	r1, r3
 8009274:	4159      	adcs	r1, r3
 8009276:	b140      	cbz	r0, 800928a <RemoteConfig::HandleDisplaySet()+0x32>
 8009278:	6803      	ldr	r3, [r0, #0]
 800927a:	7421      	strb	r1, [r4, #16]
 800927c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800927e:	4798      	blx	r3
 8009280:	2d30      	cmp	r5, #48	; 0x30
 8009282:	bf1e      	ittt	ne
 8009284:	4b03      	ldrne	r3, [pc, #12]	; (8009294 <RemoteConfig::HandleDisplaySet()+0x3c>)
 8009286:	681b      	ldrne	r3, [r3, #0]
 8009288:	6063      	strne	r3, [r4, #4]
 800928a:	bd38      	pop	{r3, r4, r5, pc}
 800928c:	2000d160 	andcs	sp, r0, r0, ror #2
 8009290:	200000fc 	strdcs	r0, [r0], -ip
 8009294:	2000d26c 	andcs	sp, r0, ip, ror #4

08009298 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>:
 8009298:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800929c:	f100 0a0c 	add.w	sl, r0, #12
 80092a0:	4604      	mov	r4, r0
 80092a2:	e9c0 1200 	strd	r1, r2, [r0]
 80092a6:	6083      	str	r3, [r0, #8]
 80092a8:	4650      	mov	r0, sl
 80092aa:	4690      	mov	r8, r2
 80092ac:	4689      	mov	r9, r1
 80092ae:	461f      	mov	r7, r3
 80092b0:	f000 fd10 	bl	8009cd4 <HttpDaemon::HttpDaemon()>
 80092b4:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80092b8:	2500      	movs	r5, #0
 80092ba:	4e16      	ldr	r6, [pc, #88]	; (8009314 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x7c>)
 80092bc:	f8df b058 	ldr.w	fp, [pc, #88]	; 8009318 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x80>
 80092c0:	f8c4 35dc 	str.w	r3, [r4, #1500]	; 0x5dc
 80092c4:	4b15      	ldr	r3, [pc, #84]	; (800931c <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x84>)
 80092c6:	4631      	mov	r1, r6
 80092c8:	f8db 0000 	ldr.w	r0, [fp]
 80092cc:	f8c4 55d4 	str.w	r5, [r4, #1492]	; 0x5d4
 80092d0:	f8a4 55d8 	strh.w	r5, [r4, #1496]	; 0x5d8
 80092d4:	f8c4 55e0 	str.w	r5, [r4, #1504]	; 0x5e0
 80092d8:	f8c4 55e4 	str.w	r5, [r4, #1508]	; 0x5e4
 80092dc:	f8c4 55e8 	str.w	r5, [r4, #1512]	; 0x5e8
 80092e0:	f884 55ec 	strb.w	r5, [r4, #1516]	; 0x5ec
 80092e4:	601c      	str	r4, [r3, #0]
 80092e6:	f005 f8a3 	bl	800e430 <Network::MacAddressCopyTo(unsigned char*)>
 80092ea:	f642 1105 	movw	r1, #10501	; 0x2905
 80092ee:	f8db 0000 	ldr.w	r0, [fp]
 80092f2:	f886 9006 	strb.w	r9, [r6, #6]
 80092f6:	f886 8007 	strb.w	r8, [r6, #7]
 80092fa:	7237      	strb	r7, [r6, #8]
 80092fc:	7275      	strb	r5, [r6, #9]
 80092fe:	f005 f891 	bl	800e424 <Network::Begin(unsigned short)>
 8009302:	f8c4 05dc 	str.w	r0, [r4, #1500]	; 0x5dc
 8009306:	4650      	mov	r0, sl
 8009308:	f000 fcfc 	bl	8009d04 <HttpDaemon::Start()>
 800930c:	4620      	mov	r0, r4
 800930e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009312:	bf00      	nop
 8009314:	20000100 	andcs	r0, r0, r0, lsl #2
 8009318:	2000cb28 	andcs	ip, r0, r8, lsr #22
 800931c:	20000124 	andcs	r0, r0, r4, lsr #2

08009320 <RemoteConfig::GetStringNode() const>:
 8009320:	2012      	movs	r0, #18
 8009322:	4b03      	ldr	r3, [pc, #12]	; (8009330 <RemoteConfig::GetStringNode() const+0x10>)
 8009324:	799a      	ldrb	r2, [r3, #6]
 8009326:	4b03      	ldr	r3, [pc, #12]	; (8009334 <RemoteConfig::GetStringNode() const+0x14>)
 8009328:	fb00 3002 	mla	r0, r0, r2, r3
 800932c:	4770      	bx	lr
 800932e:	bf00      	nop
 8009330:	20000100 	andcs	r0, r0, r0, lsl #2
 8009334:	08013652 	stmdaeq	r1, {r1, r4, r6, r9, sl, ip, sp}

08009338 <RemoteConfig::GetStringOutput() const>:
 8009338:	200c      	movs	r0, #12
 800933a:	4b03      	ldr	r3, [pc, #12]	; (8009348 <RemoteConfig::GetStringOutput() const+0x10>)
 800933c:	79da      	ldrb	r2, [r3, #7]
 800933e:	4b03      	ldr	r3, [pc, #12]	; (800934c <RemoteConfig::GetStringOutput() const+0x14>)
 8009340:	fb00 3002 	mla	r0, r0, r2, r3
 8009344:	4770      	bx	lr
 8009346:	bf00      	nop
 8009348:	20000100 	andcs	r0, r0, r0, lsl #2
 800934c:	080136f4 	stmdaeq	r1, {r2, r4, r5, r6, r7, r9, sl, ip, sp}

08009350 <RemoteConfig::SetDisable(bool)>:
 8009350:	b538      	push	{r3, r4, r5, lr}
 8009352:	4604      	mov	r4, r0
 8009354:	f890 35d4 	ldrb.w	r3, [r0, #1492]	; 0x5d4
 8009358:	b171      	cbz	r1, 8009378 <RemoteConfig::SetDisable(bool)+0x28>
 800935a:	b963      	cbnz	r3, 8009376 <RemoteConfig::SetDisable(bool)+0x26>
 800935c:	4b0d      	ldr	r3, [pc, #52]	; (8009394 <RemoteConfig::SetDisable(bool)+0x44>)
 800935e:	f642 1105 	movw	r1, #10501	; 0x2905
 8009362:	6818      	ldr	r0, [r3, #0]
 8009364:	f005 f861 	bl	800e42a <Network::End(unsigned short)>
 8009368:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800936c:	f8c4 35dc 	str.w	r3, [r4, #1500]	; 0x5dc
 8009370:	2301      	movs	r3, #1
 8009372:	f884 35d4 	strb.w	r3, [r4, #1492]	; 0x5d4
 8009376:	bd38      	pop	{r3, r4, r5, pc}
 8009378:	2b00      	cmp	r3, #0
 800937a:	d0fc      	beq.n	8009376 <RemoteConfig::SetDisable(bool)+0x26>
 800937c:	4b05      	ldr	r3, [pc, #20]	; (8009394 <RemoteConfig::SetDisable(bool)+0x44>)
 800937e:	460d      	mov	r5, r1
 8009380:	6818      	ldr	r0, [r3, #0]
 8009382:	f642 1105 	movw	r1, #10501	; 0x2905
 8009386:	f005 f84d 	bl	800e424 <Network::Begin(unsigned short)>
 800938a:	f884 55d4 	strb.w	r5, [r4, #1492]	; 0x5d4
 800938e:	f8c4 05dc 	str.w	r0, [r4, #1500]	; 0x5dc
 8009392:	e7f0      	b.n	8009376 <RemoteConfig::SetDisable(bool)+0x26>
 8009394:	2000cb28 	andcs	ip, r0, r8, lsr #22

08009398 <RemoteConfig::SetDisplayName(char const*)>:
 8009398:	2217      	movs	r2, #23
 800939a:	4809      	ldr	r0, [pc, #36]	; (80093c0 <RemoteConfig::SetDisplayName(char const*)+0x28>)
 800939c:	b508      	push	{r3, lr}
 800939e:	1e4b      	subs	r3, r1, #1
 80093a0:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 80093a4:	b931      	cbnz	r1, 80093b4 <RemoteConfig::SetDisplayName(char const*)+0x1c>
 80093a6:	f007 fc21 	bl	8010bec <memset>
 80093aa:	2200      	movs	r2, #0
 80093ac:	4b05      	ldr	r3, [pc, #20]	; (80093c4 <RemoteConfig::SetDisplayName(char const*)+0x2c>)
 80093ae:	f883 2020 	strb.w	r2, [r3, #32]
 80093b2:	bd08      	pop	{r3, pc}
 80093b4:	3a01      	subs	r2, #1
 80093b6:	f800 1b01 	strb.w	r1, [r0], #1
 80093ba:	d1f1      	bne.n	80093a0 <RemoteConfig::SetDisplayName(char const*)+0x8>
 80093bc:	e7f5      	b.n	80093aa <RemoteConfig::SetDisplayName(char const*)+0x12>
 80093be:	bf00      	nop
 80093c0:	20000109 	andcs	r0, r0, r9, lsl #2
 80093c4:	20000100 	andcs	r0, r0, r0, lsl #2

080093c8 <RemoteConfig::HandleGet(void*, unsigned int)>:
 80093c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80093ca:	4604      	mov	r4, r0
 80093cc:	4616      	mov	r6, r2
 80093ce:	460d      	mov	r5, r1
 80093d0:	4f29      	ldr	r7, [pc, #164]	; (8009478 <RemoteConfig::HandleGet(void*, unsigned int)+0xb0>)
 80093d2:	b085      	sub	sp, #20
 80093d4:	b9b9      	cbnz	r1, 8009406 <RemoteConfig::HandleGet(void*, unsigned int)+0x3e>
 80093d6:	f44f 737f 	mov.w	r3, #1020	; 0x3fc
 80093da:	6839      	ldr	r1, [r7, #0]
 80093dc:	aa03      	add	r2, sp, #12
 80093de:	3105      	adds	r1, #5
 80093e0:	9303      	str	r3, [sp, #12]
 80093e2:	f000 fc05 	bl	8009bf0 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 80093e6:	1e03      	subs	r3, r0, #0
 80093e8:	da1d      	bge.n	8009426 <RemoteConfig::HandleGet(void*, unsigned int)+0x5e>
 80093ea:	f642 1305 	movw	r3, #10501	; 0x2905
 80093ee:	220b      	movs	r2, #11
 80093f0:	9300      	str	r3, [sp, #0]
 80093f2:	4922      	ldr	r1, [pc, #136]	; (800947c <RemoteConfig::HandleGet(void*, unsigned int)+0xb4>)
 80093f4:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 80093f8:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 80093fc:	f004 fb42 	bl	800da84 <udp_send>
 8009400:	200c      	movs	r0, #12
 8009402:	b005      	add	sp, #20
 8009404:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009406:	9203      	str	r2, [sp, #12]
 8009408:	aa03      	add	r2, sp, #12
 800940a:	6039      	str	r1, [r7, #0]
 800940c:	f000 fbf0 	bl	8009bf0 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 8009410:	1e03      	subs	r3, r0, #0
 8009412:	da08      	bge.n	8009426 <RemoteConfig::HandleGet(void*, unsigned int)+0x5e>
 8009414:	2e0b      	cmp	r6, #11
 8009416:	4632      	mov	r2, r6
 8009418:	4628      	mov	r0, r5
 800941a:	bf28      	it	cs
 800941c:	220b      	movcs	r2, #11
 800941e:	4917      	ldr	r1, [pc, #92]	; (800947c <RemoteConfig::HandleGet(void*, unsigned int)+0xb4>)
 8009420:	f007 fbc2 	bl	8010ba8 <memcpy>
 8009424:	e7ec      	b.n	8009400 <RemoteConfig::HandleGet(void*, unsigned int)+0x38>
 8009426:	201c      	movs	r0, #28
 8009428:	4343      	muls	r3, r0
 800942a:	4915      	ldr	r1, [pc, #84]	; (8009480 <RemoteConfig::HandleGet(void*, unsigned int)+0xb8>)
 800942c:	18ca      	adds	r2, r1, r3
 800942e:	6852      	ldr	r2, [r2, #4]
 8009430:	58cb      	ldr	r3, [r1, r3]
 8009432:	ea4f 0c62 	mov.w	ip, r2, asr #1
 8009436:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800943a:	07d2      	lsls	r2, r2, #31
 800943c:	bf48      	it	mi
 800943e:	f854 200c 	ldrmi.w	r2, [r4, ip]
 8009442:	a903      	add	r1, sp, #12
 8009444:	bf48      	it	mi
 8009446:	58d3      	ldrmi	r3, [r2, r3]
 8009448:	4798      	blx	r3
 800944a:	9a03      	ldr	r2, [sp, #12]
 800944c:	b965      	cbnz	r5, 8009468 <RemoteConfig::HandleGet(void*, unsigned int)+0xa0>
 800944e:	f642 1305 	movw	r3, #10501	; 0x2905
 8009452:	6839      	ldr	r1, [r7, #0]
 8009454:	9300      	str	r3, [sp, #0]
 8009456:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800945a:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800945e:	b292      	uxth	r2, r2
 8009460:	f004 fb10 	bl	800da84 <udp_send>
 8009464:	9803      	ldr	r0, [sp, #12]
 8009466:	e7cc      	b.n	8009402 <RemoteConfig::HandleGet(void*, unsigned int)+0x3a>
 8009468:	42b2      	cmp	r2, r6
 800946a:	bf28      	it	cs
 800946c:	4632      	movcs	r2, r6
 800946e:	4628      	mov	r0, r5
 8009470:	6839      	ldr	r1, [r7, #0]
 8009472:	f007 fba4 	bl	8010bbe <memmove>
 8009476:	e7f5      	b.n	8009464 <RemoteConfig::HandleGet(void*, unsigned int)+0x9c>
 8009478:	200000fc 	strdcs	r0, [r0], -ip
 800947c:	080135ef 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r7, r8, sl, ip, sp}
 8009480:	080138b0 	stmdaeq	r1, {r4, r5, r7, fp, ip, sp}

08009484 <RemoteConfig::HandleGetNoParams()>:
 8009484:	2200      	movs	r2, #0
 8009486:	4611      	mov	r1, r2
 8009488:	f7ff bf9e 	b.w	80093c8 <RemoteConfig::HandleGet(void*, unsigned int)>

0800948c <RemoteConfig::HandleGetRconfigTxt(unsigned int&)>:
 800948c:	b510      	push	{r4, lr}
 800948e:	460c      	mov	r4, r1
 8009490:	4b07      	ldr	r3, [pc, #28]	; (80094b0 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x24>)
 8009492:	b08a      	sub	sp, #40	; 0x28
 8009494:	6819      	ldr	r1, [r3, #0]
 8009496:	a801      	add	r0, sp, #4
 8009498:	f000 fa00 	bl	800989c <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 800949c:	4905      	ldr	r1, [pc, #20]	; (80094b4 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x28>)
 800949e:	4623      	mov	r3, r4
 80094a0:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80094a4:	6809      	ldr	r1, [r1, #0]
 80094a6:	a801      	add	r0, sp, #4
 80094a8:	f000 fb1c 	bl	8009ae4 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>
 80094ac:	b00a      	add	sp, #40	; 0x28
 80094ae:	bd10      	pop	{r4, pc}
 80094b0:	20005240 	andcs	r5, r0, r0, asr #4
 80094b4:	200000fc 	strdcs	r0, [r0], -ip

080094b8 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)>:
 80094b8:	b513      	push	{r0, r1, r4, lr}
 80094ba:	460c      	mov	r4, r1
 80094bc:	4b07      	ldr	r3, [pc, #28]	; (80094dc <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x24>)
 80094be:	a801      	add	r0, sp, #4
 80094c0:	6819      	ldr	r1, [r3, #0]
 80094c2:	f005 f98f 	bl	800e7e4 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 80094c6:	4906      	ldr	r1, [pc, #24]	; (80094e0 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x28>)
 80094c8:	4623      	mov	r3, r4
 80094ca:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80094ce:	6809      	ldr	r1, [r1, #0]
 80094d0:	a801      	add	r0, sp, #4
 80094d2:	f005 fbf5 	bl	800ecc0 <NetworkParams::Save(char*, unsigned int, unsigned int&)>
 80094d6:	b002      	add	sp, #8
 80094d8:	bd10      	pop	{r4, pc}
 80094da:	bf00      	nop
 80094dc:	2000523c 	andcs	r5, r0, ip, lsr r2
 80094e0:	200000fc 	strdcs	r0, [r0], -ip

080094e4 <RemoteConfig::HandleGetE131Txt(unsigned int&)>:
 80094e4:	b510      	push	{r4, lr}
 80094e6:	460c      	mov	r4, r1
 80094e8:	4b07      	ldr	r3, [pc, #28]	; (8009508 <RemoteConfig::HandleGetE131Txt(unsigned int&)+0x24>)
 80094ea:	b08a      	sub	sp, #40	; 0x28
 80094ec:	6819      	ldr	r1, [r3, #0]
 80094ee:	a801      	add	r0, sp, #4
 80094f0:	f002 f83e 	bl	800b570 <E131Params::E131Params(E131ParamsStore*)>
 80094f4:	4905      	ldr	r1, [pc, #20]	; (800950c <RemoteConfig::HandleGetE131Txt(unsigned int&)+0x28>)
 80094f6:	4623      	mov	r3, r4
 80094f8:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80094fc:	6809      	ldr	r1, [r1, #0]
 80094fe:	a801      	add	r0, sp, #4
 8009500:	f002 fa8a 	bl	800ba18 <E131Params::Save(char*, unsigned int, unsigned int&)>
 8009504:	b00a      	add	sp, #40	; 0x28
 8009506:	bd10      	pop	{r4, pc}
 8009508:	20005238 	andcs	r5, r0, r8, lsr r2
 800950c:	200000fc 	strdcs	r0, [r0], -ip

08009510 <RemoteConfig::HandleGetParamsTxt(unsigned int&)>:
 8009510:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8009512:	460c      	mov	r4, r1
 8009514:	4b07      	ldr	r3, [pc, #28]	; (8009534 <RemoteConfig::HandleGetParamsTxt(unsigned int&)+0x24>)
 8009516:	4668      	mov	r0, sp
 8009518:	6819      	ldr	r1, [r3, #0]
 800951a:	f002 fba3 	bl	800bc64 <DmxParams::DmxParams(DmxParamsStore*)>
 800951e:	4906      	ldr	r1, [pc, #24]	; (8009538 <RemoteConfig::HandleGetParamsTxt(unsigned int&)+0x28>)
 8009520:	4623      	mov	r3, r4
 8009522:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8009526:	4668      	mov	r0, sp
 8009528:	6809      	ldr	r1, [r1, #0]
 800952a:	f002 fcbb 	bl	800bea4 <DmxParams::Save(char*, unsigned int, unsigned int&)>
 800952e:	b004      	add	sp, #16
 8009530:	bd10      	pop	{r4, pc}
 8009532:	bf00      	nop
 8009534:	20005234 	andcs	r5, r0, r4, lsr r2
 8009538:	200000fc 	strdcs	r0, [r0], -ip

0800953c <RemoteConfig::HandleGetDisplayTxt(unsigned int&)>:
 800953c:	b510      	push	{r4, lr}
 800953e:	460c      	mov	r4, r1
 8009540:	4b07      	ldr	r3, [pc, #28]	; (8009560 <RemoteConfig::HandleGetDisplayTxt(unsigned int&)+0x24>)
 8009542:	b08a      	sub	sp, #40	; 0x28
 8009544:	6819      	ldr	r1, [r3, #0]
 8009546:	4668      	mov	r0, sp
 8009548:	f006 f9a2 	bl	800f890 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 800954c:	4905      	ldr	r1, [pc, #20]	; (8009564 <RemoteConfig::HandleGetDisplayTxt(unsigned int&)+0x28>)
 800954e:	4623      	mov	r3, r4
 8009550:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8009554:	4668      	mov	r0, sp
 8009556:	6809      	ldr	r1, [r1, #0]
 8009558:	f006 fad0 	bl	800fafc <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)>
 800955c:	b00a      	add	sp, #40	; 0x28
 800955e:	bd10      	pop	{r4, pc}
 8009560:	20005230 	andcs	r5, r0, r0, lsr r2
 8009564:	200000fc 	strdcs	r0, [r0], -ip

08009568 <RemoteConfig::HandleSet(void*, unsigned int)>:
 8009568:	b530      	push	{r4, r5, lr}
 800956a:	b085      	sub	sp, #20
 800956c:	4604      	mov	r4, r0
 800956e:	9201      	str	r2, [sp, #4]
 8009570:	b9c9      	cbnz	r1, 80095a6 <RemoteConfig::HandleSet(void*, unsigned int)+0x3e>
 8009572:	f240 33ff 	movw	r3, #1023	; 0x3ff
 8009576:	9303      	str	r3, [sp, #12]
 8009578:	4b1d      	ldr	r3, [pc, #116]	; (80095f0 <RemoteConfig::HandleSet(void*, unsigned int)+0x88>)
 800957a:	aa03      	add	r2, sp, #12
 800957c:	6819      	ldr	r1, [r3, #0]
 800957e:	3101      	adds	r1, #1
 8009580:	f000 fb36 	bl	8009bf0 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 8009584:	2800      	cmp	r0, #0
 8009586:	db24      	blt.n	80095d2 <RemoteConfig::HandleSet(void*, unsigned int)+0x6a>
 8009588:	221c      	movs	r2, #28
 800958a:	4b1a      	ldr	r3, [pc, #104]	; (80095f4 <RemoteConfig::HandleSet(void*, unsigned int)+0x8c>)
 800958c:	fb02 3300 	mla	r3, r2, r0, r3
 8009590:	68da      	ldr	r2, [r3, #12]
 8009592:	689b      	ldr	r3, [r3, #8]
 8009594:	1051      	asrs	r1, r2, #1
 8009596:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800959a:	07d2      	lsls	r2, r2, #31
 800959c:	bf44      	itt	mi
 800959e:	5862      	ldrmi	r2, [r4, r1]
 80095a0:	58d3      	ldrmi	r3, [r2, r3]
 80095a2:	4798      	blx	r3
 80095a4:	e015      	b.n	80095d2 <RemoteConfig::HandleSet(void*, unsigned int)+0x6a>
 80095a6:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 80095aa:	460d      	mov	r5, r1
 80095ac:	4611      	mov	r1, r2
 80095ae:	d810      	bhi.n	80095d2 <RemoteConfig::HandleSet(void*, unsigned int)+0x6a>
 80095b0:	2200      	movs	r2, #0
 80095b2:	4b11      	ldr	r3, [pc, #68]	; (80095f8 <RemoteConfig::HandleSet(void*, unsigned int)+0x90>)
 80095b4:	f8c0 25e8 	str.w	r2, [r0, #1512]	; 0x5e8
 80095b8:	781b      	ldrb	r3, [r3, #0]
 80095ba:	07d8      	lsls	r0, r3, #31
 80095bc:	d50b      	bpl.n	80095d6 <RemoteConfig::HandleSet(void*, unsigned int)+0x6e>
 80095be:	782b      	ldrb	r3, [r5, #0]
 80095c0:	2b7b      	cmp	r3, #123	; 0x7b
 80095c2:	d108      	bne.n	80095d6 <RemoteConfig::HandleSet(void*, unsigned int)+0x6e>
 80095c4:	3901      	subs	r1, #1
 80095c6:	4628      	mov	r0, r5
 80095c8:	b289      	uxth	r1, r1
 80095ca:	f006 fb53 	bl	800fc74 <properties::convert_json_file(char*, unsigned short, bool)>
 80095ce:	2800      	cmp	r0, #0
 80095d0:	dc09      	bgt.n	80095e6 <RemoteConfig::HandleSet(void*, unsigned int)+0x7e>
 80095d2:	b005      	add	sp, #20
 80095d4:	bd30      	pop	{r4, r5, pc}
 80095d6:	f8c4 15e4 	str.w	r1, [r4, #1508]	; 0x5e4
 80095da:	4b05      	ldr	r3, [pc, #20]	; (80095f0 <RemoteConfig::HandleSet(void*, unsigned int)+0x88>)
 80095dc:	4620      	mov	r0, r4
 80095de:	601d      	str	r5, [r3, #0]
 80095e0:	aa01      	add	r2, sp, #4
 80095e2:	1c69      	adds	r1, r5, #1
 80095e4:	e7cc      	b.n	8009580 <RemoteConfig::HandleSet(void*, unsigned int)+0x18>
 80095e6:	b280      	uxth	r0, r0
 80095e8:	f8c4 05e4 	str.w	r0, [r4, #1508]	; 0x5e4
 80095ec:	e7f5      	b.n	80095da <RemoteConfig::HandleSet(void*, unsigned int)+0x72>
 80095ee:	bf00      	nop
 80095f0:	200000fc 	strdcs	r0, [r0], -ip
 80095f4:	080138b0 	stmdaeq	r1, {r4, r5, r7, fp, ip, sp}
 80095f8:	2000d15c 	andcs	sp, r0, ip, asr r1

080095fc <RemoteConfig::Run()>:
 80095fc:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8009600:	f890 35d4 	ldrb.w	r3, [r0, #1492]	; 0x5d4
 8009604:	2b00      	cmp	r3, #0
 8009606:	d15e      	bne.n	80096c6 <RemoteConfig::Run()+0xca>
 8009608:	4604      	mov	r4, r0
 800960a:	4d4b      	ldr	r5, [pc, #300]	; (8009738 <RemoteConfig::Run()+0x13c>)
 800960c:	300c      	adds	r0, #12
 800960e:	f000 fdf3 	bl	800a1f8 <HttpDaemon::Run()>
 8009612:	4629      	mov	r1, r5
 8009614:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 8009618:	f10d 030e 	add.w	r3, sp, #14
 800961c:	f504 62bc 	add.w	r2, r4, #1504	; 0x5e0
 8009620:	f004 fa0a 	bl	800da38 <udp_recv2>
 8009624:	2803      	cmp	r0, #3
 8009626:	f8c4 05e4 	str.w	r0, [r4, #1508]	; 0x5e4
 800962a:	d94c      	bls.n	80096c6 <RemoteConfig::Run()+0xca>
 800962c:	682b      	ldr	r3, [r5, #0]
 800962e:	3801      	subs	r0, #1
 8009630:	5c1a      	ldrb	r2, [r3, r0]
 8009632:	2a0a      	cmp	r2, #10
 8009634:	bf08      	it	eq
 8009636:	f8c4 05e4 	streq.w	r0, [r4, #1508]	; 0x5e4
 800963a:	7819      	ldrb	r1, [r3, #0]
 800963c:	293f      	cmp	r1, #63	; 0x3f
 800963e:	d137      	bne.n	80096b0 <RemoteConfig::Run()+0xb4>
 8009640:	493e      	ldr	r1, [pc, #248]	; (800973c <RemoteConfig::Run()+0x140>)
 8009642:	2200      	movs	r2, #0
 8009644:	460f      	mov	r7, r1
 8009646:	f8d4 05e4 	ldr.w	r0, [r4, #1508]	; 0x5e4
 800964a:	3801      	subs	r0, #1
 800964c:	f8c4 05e4 	str.w	r0, [r4, #1508]	; 0x5e4
 8009650:	7b8e      	ldrb	r6, [r1, #14]
 8009652:	898d      	ldrh	r5, [r1, #12]
 8009654:	b176      	cbz	r6, 8009674 <RemoteConfig::Run()+0x78>
 8009656:	4285      	cmp	r5, r0
 8009658:	d30e      	bcc.n	8009678 <RemoteConfig::Run()+0x7c>
 800965a:	3201      	adds	r2, #1
 800965c:	2a09      	cmp	r2, #9
 800965e:	f101 0110 	add.w	r1, r1, #16
 8009662:	d1f5      	bne.n	8009650 <RemoteConfig::Run()+0x54>
 8009664:	f642 1305 	movw	r3, #10501	; 0x2905
 8009668:	9300      	str	r3, [sp, #0]
 800966a:	2208      	movs	r2, #8
 800966c:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 8009670:	4933      	ldr	r1, [pc, #204]	; (8009740 <RemoteConfig::Run()+0x144>)
 8009672:	e054      	b.n	800971e <RemoteConfig::Run()+0x122>
 8009674:	4285      	cmp	r5, r0
 8009676:	d1f0      	bne.n	800965a <RemoteConfig::Run()+0x5e>
 8009678:	688e      	ldr	r6, [r1, #8]
 800967a:	f103 0c01 	add.w	ip, r3, #1
 800967e:	4435      	add	r5, r6
 8009680:	42b5      	cmp	r5, r6
 8009682:	d006      	beq.n	8009692 <RemoteConfig::Run()+0x96>
 8009684:	f81c 8b01 	ldrb.w	r8, [ip], #1
 8009688:	f816 eb01 	ldrb.w	lr, [r6], #1
 800968c:	45f0      	cmp	r8, lr
 800968e:	d0f7      	beq.n	8009680 <RemoteConfig::Run()+0x84>
 8009690:	e7e3      	b.n	800965a <RemoteConfig::Run()+0x5e>
 8009692:	0113      	lsls	r3, r2, #4
 8009694:	eb07 1202 	add.w	r2, r7, r2, lsl #4
 8009698:	6852      	ldr	r2, [r2, #4]
 800969a:	58fb      	ldr	r3, [r7, r3]
 800969c:	1051      	asrs	r1, r2, #1
 800969e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80096a2:	07d2      	lsls	r2, r2, #31
 80096a4:	d401      	bmi.n	80096aa <RemoteConfig::Run()+0xae>
 80096a6:	4798      	blx	r3
 80096a8:	e00d      	b.n	80096c6 <RemoteConfig::Run()+0xca>
 80096aa:	5862      	ldr	r2, [r4, r1]
 80096ac:	58d3      	ldr	r3, [r2, r3]
 80096ae:	e7fa      	b.n	80096a6 <RemoteConfig::Run()+0xaa>
 80096b0:	f894 25d5 	ldrb.w	r2, [r4, #1493]	; 0x5d5
 80096b4:	b93a      	cbnz	r2, 80096c6 <RemoteConfig::Run()+0xca>
 80096b6:	2923      	cmp	r1, #35	; 0x23
 80096b8:	d108      	bne.n	80096cc <RemoteConfig::Run()+0xd0>
 80096ba:	4611      	mov	r1, r2
 80096bc:	4620      	mov	r0, r4
 80096be:	f8c4 25e8 	str.w	r2, [r4, #1512]	; 0x5e8
 80096c2:	f7ff ff51 	bl	8009568 <RemoteConfig::HandleSet(void*, unsigned int)>
 80096c6:	b004      	add	sp, #16
 80096c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80096cc:	2921      	cmp	r1, #33	; 0x21
 80096ce:	d1fa      	bne.n	80096c6 <RemoteConfig::Run()+0xca>
 80096d0:	f8d4 25e4 	ldr.w	r2, [r4, #1508]	; 0x5e4
 80096d4:	3a01      	subs	r2, #1
 80096d6:	2a05      	cmp	r2, #5
 80096d8:	f8c4 25e4 	str.w	r2, [r4, #1508]	; 0x5e4
 80096dc:	d918      	bls.n	8009710 <RemoteConfig::Run()+0x114>
 80096de:	1c59      	adds	r1, r3, #1
 80096e0:	4608      	mov	r0, r1
 80096e2:	4d18      	ldr	r5, [pc, #96]	; (8009744 <RemoteConfig::Run()+0x148>)
 80096e4:	f103 0c06 	add.w	ip, r3, #6
 80096e8:	4560      	cmp	r0, ip
 80096ea:	d01d      	beq.n	8009728 <RemoteConfig::Run()+0x12c>
 80096ec:	f810 7b01 	ldrb.w	r7, [r0], #1
 80096f0:	f815 6b01 	ldrb.w	r6, [r5], #1
 80096f4:	42b7      	cmp	r7, r6
 80096f6:	d0f7      	beq.n	80096e8 <RemoteConfig::Run()+0xec>
 80096f8:	2a08      	cmp	r2, #8
 80096fa:	d909      	bls.n	8009710 <RemoteConfig::Run()+0x114>
 80096fc:	4a12      	ldr	r2, [pc, #72]	; (8009748 <RemoteConfig::Run()+0x14c>)
 80096fe:	3309      	adds	r3, #9
 8009700:	428b      	cmp	r3, r1
 8009702:	d017      	beq.n	8009734 <RemoteConfig::Run()+0x138>
 8009704:	f811 5b01 	ldrb.w	r5, [r1], #1
 8009708:	f812 0b01 	ldrb.w	r0, [r2], #1
 800970c:	4285      	cmp	r5, r0
 800970e:	d0f7      	beq.n	8009700 <RemoteConfig::Run()+0x104>
 8009710:	f642 1305 	movw	r3, #10501	; 0x2905
 8009714:	2208      	movs	r2, #8
 8009716:	9300      	str	r3, [sp, #0]
 8009718:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800971c:	490b      	ldr	r1, [pc, #44]	; (800974c <RemoteConfig::Run()+0x150>)
 800971e:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 8009722:	f004 f9af 	bl	800da84 <udp_send>
 8009726:	e7ce      	b.n	80096c6 <RemoteConfig::Run()+0xca>
 8009728:	2300      	movs	r3, #0
 800972a:	4a09      	ldr	r2, [pc, #36]	; (8009750 <RemoteConfig::Run()+0x154>)
 800972c:	011b      	lsls	r3, r3, #4
 800972e:	4620      	mov	r0, r4
 8009730:	58d3      	ldr	r3, [r2, r3]
 8009732:	e7b8      	b.n	80096a6 <RemoteConfig::Run()+0xaa>
 8009734:	2301      	movs	r3, #1
 8009736:	e7f8      	b.n	800972a <RemoteConfig::Run()+0x12e>
 8009738:	200000fc 	strdcs	r0, [r0], -ip
 800973c:	08013784 	stmdaeq	r1, {r2, r7, r8, r9, sl, ip, sp}
 8009740:	08013613 	stmdaeq	r1, {r0, r1, r4, r9, sl, ip, sp}
 8009744:	080135fb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r7, r8, sl, ip, sp}
 8009748:	08013601 	stmdaeq	r1, {r0, r9, sl, ip, sp}
 800974c:	0801360a 	stmdaeq	r1, {r1, r3, r9, sl, ip, sp}
 8009750:	08013814 	stmdaeq	r1, {r2, r4, fp, ip, sp}

08009754 <RemoteConfig::HandleSetRconfig()>:
 8009754:	b510      	push	{r4, lr}
 8009756:	4604      	mov	r4, r0
 8009758:	4b09      	ldr	r3, [pc, #36]	; (8009780 <RemoteConfig::HandleSetRconfig()+0x2c>)
 800975a:	b08a      	sub	sp, #40	; 0x28
 800975c:	6819      	ldr	r1, [r3, #0]
 800975e:	a801      	add	r0, sp, #4
 8009760:	f000 f89c 	bl	800989c <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 8009764:	4b07      	ldr	r3, [pc, #28]	; (8009784 <RemoteConfig::HandleSetRconfig()+0x30>)
 8009766:	f8d4 25e4 	ldr.w	r2, [r4, #1508]	; 0x5e4
 800976a:	6819      	ldr	r1, [r3, #0]
 800976c:	a801      	add	r0, sp, #4
 800976e:	f000 f8ab 	bl	80098c8 <RemoteConfigParams::Load(char const*, unsigned int)>
 8009772:	4621      	mov	r1, r4
 8009774:	a801      	add	r0, sp, #4
 8009776:	f000 f9c2 	bl	8009afe <RemoteConfigParams::Set(RemoteConfig*)>
 800977a:	b00a      	add	sp, #40	; 0x28
 800977c:	bd10      	pop	{r4, pc}
 800977e:	bf00      	nop
 8009780:	20005240 	andcs	r5, r0, r0, asr #4
 8009784:	200000fc 	strdcs	r0, [r0], -ip

08009788 <RemoteConfig::HandleSetNetworkTxt()>:
 8009788:	b513      	push	{r0, r1, r4, lr}
 800978a:	4604      	mov	r4, r0
 800978c:	4b06      	ldr	r3, [pc, #24]	; (80097a8 <RemoteConfig::HandleSetNetworkTxt()+0x20>)
 800978e:	a801      	add	r0, sp, #4
 8009790:	6819      	ldr	r1, [r3, #0]
 8009792:	f005 f827 	bl	800e7e4 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 8009796:	4b05      	ldr	r3, [pc, #20]	; (80097ac <RemoteConfig::HandleSetNetworkTxt()+0x24>)
 8009798:	f8d4 25e4 	ldr.w	r2, [r4, #1508]	; 0x5e4
 800979c:	6819      	ldr	r1, [r3, #0]
 800979e:	a801      	add	r0, sp, #4
 80097a0:	f005 f840 	bl	800e824 <NetworkParams::Load(char const*, unsigned int)>
 80097a4:	b002      	add	sp, #8
 80097a6:	bd10      	pop	{r4, pc}
 80097a8:	2000523c 	andcs	r5, r0, ip, lsr r2
 80097ac:	200000fc 	strdcs	r0, [r0], -ip

080097b0 <RemoteConfig::HandleSetE131Txt()>:
 80097b0:	b510      	push	{r4, lr}
 80097b2:	4604      	mov	r4, r0
 80097b4:	4b07      	ldr	r3, [pc, #28]	; (80097d4 <RemoteConfig::HandleSetE131Txt()+0x24>)
 80097b6:	b08a      	sub	sp, #40	; 0x28
 80097b8:	6819      	ldr	r1, [r3, #0]
 80097ba:	a801      	add	r0, sp, #4
 80097bc:	f001 fed8 	bl	800b570 <E131Params::E131Params(E131ParamsStore*)>
 80097c0:	4b05      	ldr	r3, [pc, #20]	; (80097d8 <RemoteConfig::HandleSetE131Txt()+0x28>)
 80097c2:	f8d4 25e4 	ldr.w	r2, [r4, #1508]	; 0x5e4
 80097c6:	6819      	ldr	r1, [r3, #0]
 80097c8:	a801      	add	r0, sp, #4
 80097ca:	f001 fefd 	bl	800b5c8 <E131Params::Load(char const*, unsigned int)>
 80097ce:	b00a      	add	sp, #40	; 0x28
 80097d0:	bd10      	pop	{r4, pc}
 80097d2:	bf00      	nop
 80097d4:	20005238 	andcs	r5, r0, r8, lsr r2
 80097d8:	200000fc 	strdcs	r0, [r0], -ip

080097dc <RemoteConfig::HandleSetParamsTxt()>:
 80097dc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80097de:	4604      	mov	r4, r0
 80097e0:	4b06      	ldr	r3, [pc, #24]	; (80097fc <RemoteConfig::HandleSetParamsTxt()+0x20>)
 80097e2:	4668      	mov	r0, sp
 80097e4:	6819      	ldr	r1, [r3, #0]
 80097e6:	f002 fa3d 	bl	800bc64 <DmxParams::DmxParams(DmxParamsStore*)>
 80097ea:	4b05      	ldr	r3, [pc, #20]	; (8009800 <RemoteConfig::HandleSetParamsTxt()+0x24>)
 80097ec:	4668      	mov	r0, sp
 80097ee:	f8d4 25e4 	ldr.w	r2, [r4, #1508]	; 0x5e4
 80097f2:	6819      	ldr	r1, [r3, #0]
 80097f4:	f002 fa4e 	bl	800bc94 <DmxParams::Load(char const*, unsigned int)>
 80097f8:	b004      	add	sp, #16
 80097fa:	bd10      	pop	{r4, pc}
 80097fc:	20005234 	andcs	r5, r0, r4, lsr r2
 8009800:	200000fc 	strdcs	r0, [r0], -ip

08009804 <RemoteConfig::HandleSetDisplayTxt()>:
 8009804:	b510      	push	{r4, lr}
 8009806:	4604      	mov	r4, r0
 8009808:	4b07      	ldr	r3, [pc, #28]	; (8009828 <RemoteConfig::HandleSetDisplayTxt()+0x24>)
 800980a:	b08a      	sub	sp, #40	; 0x28
 800980c:	6819      	ldr	r1, [r3, #0]
 800980e:	4668      	mov	r0, sp
 8009810:	f006 f83e 	bl	800f890 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 8009814:	4b05      	ldr	r3, [pc, #20]	; (800982c <RemoteConfig::HandleSetDisplayTxt()+0x28>)
 8009816:	4668      	mov	r0, sp
 8009818:	f8d4 25e4 	ldr.w	r2, [r4, #1508]	; 0x5e4
 800981c:	6819      	ldr	r1, [r3, #0]
 800981e:	f006 f851 	bl	800f8c4 <DisplayUdfParams::Load(char const*, unsigned int)>
 8009822:	b00a      	add	sp, #40	; 0x28
 8009824:	bd10      	pop	{r4, pc}
 8009826:	bf00      	nop
 8009828:	20005230 	andcs	r5, r0, r0, lsr r2
 800982c:	200000fc 	strdcs	r0, [r0], -ip

08009830 <RemoteConfig::HandleFactory()>:
 8009830:	b538      	push	{r3, r4, r5, lr}
 8009832:	2400      	movs	r4, #0
 8009834:	4d04      	ldr	r5, [pc, #16]	; (8009848 <RemoteConfig::HandleFactory()+0x18>)
 8009836:	4621      	mov	r1, r4
 8009838:	6828      	ldr	r0, [r5, #0]
 800983a:	3401      	adds	r4, #1
 800983c:	f003 fa74 	bl	800cd28 <SpiFlashStore::ResetSetList(spiflashstore::Store)>
 8009840:	2c1c      	cmp	r4, #28
 8009842:	d1f8      	bne.n	8009836 <RemoteConfig::HandleFactory()+0x6>
 8009844:	bd38      	pop	{r3, r4, r5, pc}
 8009846:	bf00      	nop
 8009848:	20005228 	andcs	r5, r0, r8, lsr #4

0800984c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>:
 800984c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800984e:	460b      	mov	r3, r1
 8009850:	8885      	ldrh	r5, [r0, #4]
 8009852:	88c1      	ldrh	r1, [r0, #6]
 8009854:	42a9      	cmp	r1, r5
 8009856:	d214      	bcs.n	8009882 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x36>
 8009858:	4604      	mov	r4, r0
 800985a:	6800      	ldr	r0, [r0, #0]
 800985c:	1a6d      	subs	r5, r5, r1
 800985e:	4408      	add	r0, r1
 8009860:	7a21      	ldrb	r1, [r4, #8]
 8009862:	b91a      	cbnz	r2, 800986c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x20>
 8009864:	b919      	cbnz	r1, 800986e <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x22>
 8009866:	4a0a      	ldr	r2, [pc, #40]	; (8009890 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x44>)
 8009868:	9100      	str	r1, [sp, #0]
 800986a:	e002      	b.n	8009872 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 800986c:	b159      	cbz	r1, 8009886 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x3a>
 800986e:	9200      	str	r2, [sp, #0]
 8009870:	4a08      	ldr	r2, [pc, #32]	; (8009894 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x48>)
 8009872:	4629      	mov	r1, r5
 8009874:	f007 fd12 	bl	801129c <snprintf>
 8009878:	4285      	cmp	r5, r0
 800987a:	bfa2      	ittt	ge
 800987c:	88e3      	ldrhge	r3, [r4, #6]
 800987e:	181b      	addge	r3, r3, r0
 8009880:	80e3      	strhge	r3, [r4, #6]
 8009882:	b003      	add	sp, #12
 8009884:	bd30      	pop	{r4, r5, pc}
 8009886:	2201      	movs	r2, #1
 8009888:	9200      	str	r2, [sp, #0]
 800988a:	4a03      	ldr	r2, [pc, #12]	; (8009898 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x4c>)
 800988c:	e7f1      	b.n	8009872 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 800988e:	bf00      	nop
 8009890:	0801383d 	stmdaeq	r1, {r0, r2, r3, r4, r5, fp, ip, sp}
 8009894:	08013834 	stmdaeq	r1, {r2, r4, r5, fp, ip, sp}
 8009898:	0801383e 	stmdaeq	r1, {r1, r2, r3, r4, r5, fp, ip, sp}

0800989c <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>:
 800989c:	b510      	push	{r4, lr}
 800989e:	4604      	mov	r4, r0
 80098a0:	2220      	movs	r2, #32
 80098a2:	f840 1b04 	str.w	r1, [r0], #4
 80098a6:	2100      	movs	r1, #0
 80098a8:	f007 f9a0 	bl	8010bec <memset>
 80098ac:	4620      	mov	r0, r4
 80098ae:	bd10      	pop	{r4, pc}

080098b0 <RemoteConfigParams::Load()>:
 80098b0:	b508      	push	{r3, lr}
 80098b2:	2300      	movs	r3, #0
 80098b4:	4601      	mov	r1, r0
 80098b6:	6043      	str	r3, [r0, #4]
 80098b8:	6800      	ldr	r0, [r0, #0]
 80098ba:	b120      	cbz	r0, 80098c6 <RemoteConfigParams::Load()+0x16>
 80098bc:	6803      	ldr	r3, [r0, #0]
 80098be:	3104      	adds	r1, #4
 80098c0:	68db      	ldr	r3, [r3, #12]
 80098c2:	4798      	blx	r3
 80098c4:	2001      	movs	r0, #1
 80098c6:	bd08      	pop	{r3, pc}

080098c8 <RemoteConfigParams::Load(char const*, unsigned int)>:
 80098c8:	2300      	movs	r3, #0
 80098ca:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80098cc:	460d      	mov	r5, r1
 80098ce:	4616      	mov	r6, r2
 80098d0:	4604      	mov	r4, r0
 80098d2:	6043      	str	r3, [r0, #4]
 80098d4:	4602      	mov	r2, r0
 80098d6:	490a      	ldr	r1, [pc, #40]	; (8009900 <RemoteConfigParams::Load(char const*, unsigned int)+0x38>)
 80098d8:	4668      	mov	r0, sp
 80098da:	f006 fb19 	bl	800ff10 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 80098de:	4632      	mov	r2, r6
 80098e0:	4629      	mov	r1, r5
 80098e2:	4668      	mov	r0, sp
 80098e4:	f006 fb18 	bl	800ff18 <ReadConfigFile::Read(char const*, unsigned int)>
 80098e8:	4621      	mov	r1, r4
 80098ea:	f851 0b04 	ldr.w	r0, [r1], #4
 80098ee:	6803      	ldr	r3, [r0, #0]
 80098f0:	689b      	ldr	r3, [r3, #8]
 80098f2:	4798      	blx	r3
 80098f4:	4668      	mov	r0, sp
 80098f6:	f006 fb0e 	bl	800ff16 <ReadConfigFile::~ReadConfigFile()>
 80098fa:	b002      	add	sp, #8
 80098fc:	bd70      	pop	{r4, r5, r6, pc}
 80098fe:	bf00      	nop
 8009900:	080099c1 	stmdaeq	r0, {r0, r6, r7, r8, fp, ip, pc}

08009904 <RemoteConfigParams::SetBool(unsigned char, unsigned int)>:
 8009904:	6843      	ldr	r3, [r0, #4]
 8009906:	b111      	cbz	r1, 800990e <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0xa>
 8009908:	4313      	orrs	r3, r2
 800990a:	6043      	str	r3, [r0, #4]
 800990c:	4770      	bx	lr
 800990e:	ea23 0302 	bic.w	r3, r3, r2
 8009912:	e7fa      	b.n	800990a <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0x6>

08009914 <RemoteConfigParams::callbackFunction(char const*)>:
 8009914:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009916:	460d      	mov	r5, r1
 8009918:	4604      	mov	r4, r0
 800991a:	4923      	ldr	r1, [pc, #140]	; (80099a8 <RemoteConfigParams::callbackFunction(char const*)+0x94>)
 800991c:	4628      	mov	r0, r5
 800991e:	f10d 0203 	add.w	r2, sp, #3
 8009922:	f006 fc07 	bl	8010134 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8009926:	b938      	cbnz	r0, 8009938 <RemoteConfigParams::callbackFunction(char const*)+0x24>
 8009928:	2201      	movs	r2, #1
 800992a:	4620      	mov	r0, r4
 800992c:	f89d 1003 	ldrb.w	r1, [sp, #3]
 8009930:	f7ff ffe8 	bl	8009904 <RemoteConfigParams::SetBool(unsigned char, unsigned int)>
 8009934:	b003      	add	sp, #12
 8009936:	bd30      	pop	{r4, r5, pc}
 8009938:	4628      	mov	r0, r5
 800993a:	491c      	ldr	r1, [pc, #112]	; (80099ac <RemoteConfigParams::callbackFunction(char const*)+0x98>)
 800993c:	f10d 0203 	add.w	r2, sp, #3
 8009940:	f006 fbf8 	bl	8010134 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8009944:	b908      	cbnz	r0, 800994a <RemoteConfigParams::callbackFunction(char const*)+0x36>
 8009946:	2202      	movs	r2, #2
 8009948:	e7ef      	b.n	800992a <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800994a:	4628      	mov	r0, r5
 800994c:	4918      	ldr	r1, [pc, #96]	; (80099b0 <RemoteConfigParams::callbackFunction(char const*)+0x9c>)
 800994e:	f10d 0203 	add.w	r2, sp, #3
 8009952:	f006 fbef 	bl	8010134 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8009956:	b908      	cbnz	r0, 800995c <RemoteConfigParams::callbackFunction(char const*)+0x48>
 8009958:	2204      	movs	r2, #4
 800995a:	e7e6      	b.n	800992a <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800995c:	4628      	mov	r0, r5
 800995e:	4915      	ldr	r1, [pc, #84]	; (80099b4 <RemoteConfigParams::callbackFunction(char const*)+0xa0>)
 8009960:	f10d 0203 	add.w	r2, sp, #3
 8009964:	f006 fbe6 	bl	8010134 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8009968:	b908      	cbnz	r0, 800996e <RemoteConfigParams::callbackFunction(char const*)+0x5a>
 800996a:	2208      	movs	r2, #8
 800996c:	e7dd      	b.n	800992a <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800996e:	4628      	mov	r0, r5
 8009970:	4911      	ldr	r1, [pc, #68]	; (80099b8 <RemoteConfigParams::callbackFunction(char const*)+0xa4>)
 8009972:	f10d 0203 	add.w	r2, sp, #3
 8009976:	f006 fbdd 	bl	8010134 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800997a:	b908      	cbnz	r0, 8009980 <RemoteConfigParams::callbackFunction(char const*)+0x6c>
 800997c:	2220      	movs	r2, #32
 800997e:	e7d4      	b.n	800992a <RemoteConfigParams::callbackFunction(char const*)+0x16>
 8009980:	2317      	movs	r3, #23
 8009982:	4628      	mov	r0, r5
 8009984:	9301      	str	r3, [sp, #4]
 8009986:	490d      	ldr	r1, [pc, #52]	; (80099bc <RemoteConfigParams::callbackFunction(char const*)+0xa8>)
 8009988:	ab01      	add	r3, sp, #4
 800998a:	f104 020c 	add.w	r2, r4, #12
 800998e:	f006 faf7 	bl	800ff80 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 8009992:	2800      	cmp	r0, #0
 8009994:	d1ce      	bne.n	8009934 <RemoteConfigParams::callbackFunction(char const*)+0x20>
 8009996:	9b01      	ldr	r3, [sp, #4]
 8009998:	4423      	add	r3, r4
 800999a:	7318      	strb	r0, [r3, #12]
 800999c:	6863      	ldr	r3, [r4, #4]
 800999e:	f043 0310 	orr.w	r3, r3, #16
 80099a2:	6063      	str	r3, [r4, #4]
 80099a4:	e7c6      	b.n	8009934 <RemoteConfigParams::callbackFunction(char const*)+0x20>
 80099a6:	bf00      	nop
 80099a8:	08013c27 	stmdaeq	r1, {r0, r1, r2, r5, sl, fp, ip, sp}
 80099ac:	08013c48 	stmdaeq	r1, {r3, r6, sl, fp, ip, sp}
 80099b0:	08013c56 	stmdaeq	r1, {r1, r2, r4, r6, sl, fp, ip, sp}
 80099b4:	08013c64 	stmdaeq	r1, {r2, r5, r6, sl, fp, ip, sp}
 80099b8:	08013c72 	stmdaeq	r1, {r1, r4, r5, r6, sl, fp, ip, sp}
 80099bc:	08013c3b 	stmdaeq	r1, {r0, r1, r3, r4, r5, sl, fp, ip, sp}

080099c0 <RemoteConfigParams::staticCallbackFunction(void*, char const*)>:
 80099c0:	f7ff bfa8 	b.w	8009914 <RemoteConfigParams::callbackFunction(char const*)>

080099c4 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>:
 80099c4:	b570      	push	{r4, r5, r6, lr}
 80099c6:	4604      	mov	r4, r0
 80099c8:	4615      	mov	r5, r2
 80099ca:	461e      	mov	r6, r3
 80099cc:	b086      	sub	sp, #24
 80099ce:	3004      	adds	r0, #4
 80099d0:	2900      	cmp	r1, #0
 80099d2:	d040      	beq.n	8009a56 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x92>
 80099d4:	2220      	movs	r2, #32
 80099d6:	f007 f8f2 	bl	8010bbe <memmove>
 80099da:	4633      	mov	r3, r6
 80099dc:	462a      	mov	r2, r5
 80099de:	4937      	ldr	r1, [pc, #220]	; (8009abc <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xf8>)
 80099e0:	a803      	add	r0, sp, #12
 80099e2:	f006 f9f5 	bl	800fdd0 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 80099e6:	6862      	ldr	r2, [r4, #4]
 80099e8:	4935      	ldr	r1, [pc, #212]	; (8009ac0 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xfc>)
 80099ea:	f002 0201 	and.w	r2, r2, #1
 80099ee:	a803      	add	r0, sp, #12
 80099f0:	f7ff ff2c 	bl	800984c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 80099f4:	6862      	ldr	r2, [r4, #4]
 80099f6:	4933      	ldr	r1, [pc, #204]	; (8009ac4 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x100>)
 80099f8:	f3c2 0240 	ubfx	r2, r2, #1, #1
 80099fc:	a803      	add	r0, sp, #12
 80099fe:	f7ff ff25 	bl	800984c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 8009a02:	6862      	ldr	r2, [r4, #4]
 8009a04:	4930      	ldr	r1, [pc, #192]	; (8009ac8 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x104>)
 8009a06:	f3c2 0280 	ubfx	r2, r2, #2, #1
 8009a0a:	a803      	add	r0, sp, #12
 8009a0c:	f7ff ff1e 	bl	800984c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 8009a10:	6862      	ldr	r2, [r4, #4]
 8009a12:	492e      	ldr	r1, [pc, #184]	; (8009acc <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x108>)
 8009a14:	f3c2 02c0 	ubfx	r2, r2, #3, #1
 8009a18:	a803      	add	r0, sp, #12
 8009a1a:	f7ff ff17 	bl	800984c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 8009a1e:	6862      	ldr	r2, [r4, #4]
 8009a20:	492b      	ldr	r1, [pc, #172]	; (8009ad0 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x10c>)
 8009a22:	f3c2 1240 	ubfx	r2, r2, #5, #1
 8009a26:	a803      	add	r0, sp, #12
 8009a28:	f7ff ff10 	bl	800984c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 8009a2c:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 8009a30:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8009a34:	42a9      	cmp	r1, r5
 8009a36:	d223      	bcs.n	8009a80 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xbc>
 8009a38:	9803      	ldr	r0, [sp, #12]
 8009a3a:	1a6d      	subs	r5, r5, r1
 8009a3c:	4408      	add	r0, r1
 8009a3e:	6861      	ldr	r1, [r4, #4]
 8009a40:	f89d 2014 	ldrb.w	r2, [sp, #20]
 8009a44:	06c9      	lsls	r1, r1, #27
 8009a46:	f104 030c 	add.w	r3, r4, #12
 8009a4a:	d40b      	bmi.n	8009a64 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa0>
 8009a4c:	b95a      	cbnz	r2, 8009a66 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa2>
 8009a4e:	9300      	str	r3, [sp, #0]
 8009a50:	4a20      	ldr	r2, [pc, #128]	; (8009ad4 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 8009a52:	4b21      	ldr	r3, [pc, #132]	; (8009ad8 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x114>)
 8009a54:	e00a      	b.n	8009a6c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa8>
 8009a56:	6823      	ldr	r3, [r4, #0]
 8009a58:	4601      	mov	r1, r0
 8009a5a:	681a      	ldr	r2, [r3, #0]
 8009a5c:	4618      	mov	r0, r3
 8009a5e:	68d2      	ldr	r2, [r2, #12]
 8009a60:	4790      	blx	r2
 8009a62:	e7ba      	b.n	80099da <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x16>
 8009a64:	b32a      	cbz	r2, 8009ab2 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xee>
 8009a66:	9300      	str	r3, [sp, #0]
 8009a68:	4a1c      	ldr	r2, [pc, #112]	; (8009adc <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x118>)
 8009a6a:	4b1b      	ldr	r3, [pc, #108]	; (8009ad8 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x114>)
 8009a6c:	4629      	mov	r1, r5
 8009a6e:	f007 fc15 	bl	801129c <snprintf>
 8009a72:	4285      	cmp	r5, r0
 8009a74:	bfa2      	ittt	ge
 8009a76:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 8009a7a:	18c0      	addge	r0, r0, r3
 8009a7c:	f8ad 0012 	strhge.w	r0, [sp, #18]
 8009a80:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8009a84:	b17b      	cbz	r3, 8009aa6 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xe2>
 8009a86:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8009a8a:	9b03      	ldr	r3, [sp, #12]
 8009a8c:	4413      	add	r3, r2
 8009a8e:	227d      	movs	r2, #125	; 0x7d
 8009a90:	f803 2c01 	strb.w	r2, [r3, #-1]
 8009a94:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8009a98:	9903      	ldr	r1, [sp, #12]
 8009a9a:	54ca      	strb	r2, [r1, r3]
 8009a9c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8009aa0:	3301      	adds	r3, #1
 8009aa2:	f8ad 3012 	strh.w	r3, [sp, #18]
 8009aa6:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8009aaa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8009aac:	601a      	str	r2, [r3, #0]
 8009aae:	b006      	add	sp, #24
 8009ab0:	bd70      	pop	{r4, r5, r6, pc}
 8009ab2:	9300      	str	r3, [sp, #0]
 8009ab4:	4a0a      	ldr	r2, [pc, #40]	; (8009ae0 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x11c>)
 8009ab6:	4b08      	ldr	r3, [pc, #32]	; (8009ad8 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x114>)
 8009ab8:	e7d8      	b.n	8009a6c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa8>
 8009aba:	bf00      	nop
 8009abc:	08013c2f 	stmdaeq	r1, {r0, r1, r2, r3, r5, sl, fp, ip, sp}
 8009ac0:	08013c27 	stmdaeq	r1, {r0, r1, r2, r5, sl, fp, ip, sp}
 8009ac4:	08013c48 	stmdaeq	r1, {r3, r6, sl, fp, ip, sp}
 8009ac8:	08013c56 	stmdaeq	r1, {r1, r2, r4, r6, sl, fp, ip, sp}
 8009acc:	08013c64 	stmdaeq	r1, {r2, r5, r6, sl, fp, ip, sp}
 8009ad0:	08013c72 	stmdaeq	r1, {r1, r4, r5, r6, sl, fp, ip, sp}
 8009ad4:	08013850 	stmdaeq	r1, {r4, r6, fp, ip, sp}
 8009ad8:	08013c3b 	stmdaeq	r1, {r0, r1, r3, r4, r5, sl, fp, ip, sp}
 8009adc:	08013845 	stmdaeq	r1, {r0, r2, r6, fp, ip, sp}
 8009ae0:	08013851 	stmdaeq	r1, {r0, r4, r6, fp, ip, sp}

08009ae4 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>:
 8009ae4:	b513      	push	{r0, r1, r4, lr}
 8009ae6:	6804      	ldr	r4, [r0, #0]
 8009ae8:	b914      	cbnz	r4, 8009af0 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0xc>
 8009aea:	601c      	str	r4, [r3, #0]
 8009aec:	b002      	add	sp, #8
 8009aee:	bd10      	pop	{r4, pc}
 8009af0:	9300      	str	r3, [sp, #0]
 8009af2:	4613      	mov	r3, r2
 8009af4:	460a      	mov	r2, r1
 8009af6:	2100      	movs	r1, #0
 8009af8:	f7ff ff64 	bl	80099c4 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>
 8009afc:	e7f6      	b.n	8009aec <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0x8>

08009afe <RemoteConfigParams::Set(RemoteConfig*)>:
 8009afe:	b538      	push	{r3, r4, r5, lr}
 8009b00:	460c      	mov	r4, r1
 8009b02:	4605      	mov	r5, r0
 8009b04:	6841      	ldr	r1, [r0, #4]
 8009b06:	4620      	mov	r0, r4
 8009b08:	f001 0101 	and.w	r1, r1, #1
 8009b0c:	f7ff fc20 	bl	8009350 <RemoteConfig::SetDisable(bool)>
 8009b10:	686b      	ldr	r3, [r5, #4]
 8009b12:	f3c3 0240 	ubfx	r2, r3, #1, #1
 8009b16:	f884 25d5 	strb.w	r2, [r4, #1493]	; 0x5d5
 8009b1a:	f3c3 0280 	ubfx	r2, r3, #2, #1
 8009b1e:	f884 25d6 	strb.w	r2, [r4, #1494]	; 0x5d6
 8009b22:	f3c3 02c0 	ubfx	r2, r3, #3, #1
 8009b26:	f884 25d7 	strb.w	r2, [r4, #1495]	; 0x5d7
 8009b2a:	f3c3 1240 	ubfx	r2, r3, #5, #1
 8009b2e:	06db      	lsls	r3, r3, #27
 8009b30:	f884 25d8 	strb.w	r2, [r4, #1496]	; 0x5d8
 8009b34:	d506      	bpl.n	8009b44 <RemoteConfigParams::Set(RemoteConfig*)+0x46>
 8009b36:	4620      	mov	r0, r4
 8009b38:	f105 010c 	add.w	r1, r5, #12
 8009b3c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8009b40:	f7ff bc2a 	b.w	8009398 <RemoteConfig::SetDisplayName(char const*)>
 8009b44:	bd38      	pop	{r3, r4, r5, pc}

08009b46 <RemoteConfigParams::Dump()>:
 8009b46:	4770      	bx	lr

08009b48 <RemoteConfig::HandleReboot()>:
 8009b48:	f890 35d6 	ldrb.w	r3, [r0, #1494]	; 0x5d6
 8009b4c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009b4e:	2b00      	cmp	r3, #0
 8009b50:	d03e      	beq.n	8009bd0 <RemoteConfig::HandleReboot()+0x88>
 8009b52:	2301      	movs	r3, #1
 8009b54:	4c1f      	ldr	r4, [pc, #124]	; (8009bd4 <RemoteConfig::HandleReboot()+0x8c>)
 8009b56:	f880 35d9 	strb.w	r3, [r0, #1497]	; 0x5d9
 8009b5a:	6825      	ldr	r5, [r4, #0]
 8009b5c:	69a8      	ldr	r0, [r5, #24]
 8009b5e:	b138      	cbz	r0, 8009b70 <RemoteConfig::HandleReboot()+0x28>
 8009b60:	2100      	movs	r1, #0
 8009b62:	6803      	ldr	r3, [r0, #0]
 8009b64:	7429      	strb	r1, [r5, #16]
 8009b66:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009b68:	4798      	blx	r3
 8009b6a:	4b1b      	ldr	r3, [pc, #108]	; (8009bd8 <RemoteConfig::HandleReboot()+0x90>)
 8009b6c:	681b      	ldr	r3, [r3, #0]
 8009b6e:	606b      	str	r3, [r5, #4]
 8009b70:	4d1a      	ldr	r5, [pc, #104]	; (8009bdc <RemoteConfig::HandleReboot()+0x94>)
 8009b72:	6828      	ldr	r0, [r5, #0]
 8009b74:	f003 f95e 	bl	800ce34 <SpiFlashStore::Flash()>
 8009b78:	2800      	cmp	r0, #0
 8009b7a:	d1fa      	bne.n	8009b72 <RemoteConfig::HandleReboot()+0x2a>
 8009b7c:	4b18      	ldr	r3, [pc, #96]	; (8009be0 <RemoteConfig::HandleReboot()+0x98>)
 8009b7e:	6818      	ldr	r0, [r3, #0]
 8009b80:	f004 fc48 	bl	800e414 <Network::Shutdown()>
 8009b84:	4817      	ldr	r0, [pc, #92]	; (8009be4 <RemoteConfig::HandleReboot()+0x9c>)
 8009b86:	f007 fb61 	bl	801124c <printf>
 8009b8a:	6823      	ldr	r3, [r4, #0]
 8009b8c:	6998      	ldr	r0, [r3, #24]
 8009b8e:	b110      	cbz	r0, 8009b96 <RemoteConfig::HandleReboot()+0x4e>
 8009b90:	6803      	ldr	r3, [r0, #0]
 8009b92:	68db      	ldr	r3, [r3, #12]
 8009b94:	4798      	blx	r3
 8009b96:	6824      	ldr	r4, [r4, #0]
 8009b98:	4913      	ldr	r1, [pc, #76]	; (8009be8 <RemoteConfig::HandleReboot()+0xa0>)
 8009b9a:	4620      	mov	r0, r4
 8009b9c:	f7fe ff18 	bl	80089d0 <Display::TextStatus(char const*)>
 8009ba0:	7c63      	ldrb	r3, [r4, #17]
 8009ba2:	b18b      	cbz	r3, 8009bc8 <RemoteConfig::HandleReboot()+0x80>
 8009ba4:	2312      	movs	r3, #18
 8009ba6:	f88d 3004 	strb.w	r3, [sp, #4]
 8009baa:	23bf      	movs	r3, #191	; 0xbf
 8009bac:	7a20      	ldrb	r0, [r4, #8]
 8009bae:	f88d 3005 	strb.w	r3, [sp, #5]
 8009bb2:	f88d 3006 	strb.w	r3, [sp, #6]
 8009bb6:	f008 fc6b 	bl	8012490 <gd32_i2c_set_address(unsigned char)>
 8009bba:	68e0      	ldr	r0, [r4, #12]
 8009bbc:	f008 fc60 	bl	8012480 <gd32_i2c_set_baudrate(unsigned int)>
 8009bc0:	2103      	movs	r1, #3
 8009bc2:	a801      	add	r0, sp, #4
 8009bc4:	f008 fc6a 	bl	801249c <gd32_i2c_write(char const*, unsigned int)>
 8009bc8:	4b08      	ldr	r3, [pc, #32]	; (8009bec <RemoteConfig::HandleReboot()+0xa4>)
 8009bca:	6818      	ldr	r0, [r3, #0]
 8009bcc:	f006 fef6 	bl	80109bc <Hardware::Reboot()>
 8009bd0:	b003      	add	sp, #12
 8009bd2:	bd30      	pop	{r4, r5, pc}
 8009bd4:	2000d160 	andcs	sp, r0, r0, ror #2
 8009bd8:	2000d26c 	andcs	sp, r0, ip, ror #4
 8009bdc:	20005228 	andcs	r5, r0, r8, lsr #4
 8009be0:	2000cb28 	andcs	ip, r0, r8, lsr #22
 8009be4:	08013858 	stmdaeq	r1, {r3, r4, r6, fp, ip, sp}
 8009be8:	08013867 	stmdaeq	r1, {r0, r1, r2, r5, r6, fp, ip, sp}
 8009bec:	2000d250 	andcs	sp, r0, r0, asr r2

08009bf0 <RemoteConfig::GetIndex(void const*, unsigned int&)>:
 8009bf0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8009bf4:	2000      	movs	r0, #0
 8009bf6:	4d12      	ldr	r5, [pc, #72]	; (8009c40 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x50>)
 8009bf8:	f10d 0c04 	add.w	ip, sp, #4
 8009bfc:	6814      	ldr	r4, [r2, #0]
 8009bfe:	7d2b      	ldrb	r3, [r5, #20]
 8009c00:	692e      	ldr	r6, [r5, #16]
 8009c02:	42a3      	cmp	r3, r4
 8009c04:	bf34      	ite	cc
 8009c06:	4664      	movcc	r4, ip
 8009c08:	4614      	movcs	r4, r2
 8009c0a:	9301      	str	r3, [sp, #4]
 8009c0c:	6827      	ldr	r7, [r4, #0]
 8009c0e:	460c      	mov	r4, r1
 8009c10:	3e01      	subs	r6, #1
 8009c12:	440f      	add	r7, r1
 8009c14:	42bc      	cmp	r4, r7
 8009c16:	d011      	beq.n	8009c3c <RemoteConfig::GetIndex(void const*, unsigned int&)+0x4c>
 8009c18:	f894 8000 	ldrb.w	r8, [r4]
 8009c1c:	f816 ef01 	ldrb.w	lr, [r6, #1]!
 8009c20:	45f0      	cmp	r8, lr
 8009c22:	d009      	beq.n	8009c38 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x48>
 8009c24:	3001      	adds	r0, #1
 8009c26:	2805      	cmp	r0, #5
 8009c28:	f105 051c 	add.w	r5, r5, #28
 8009c2c:	d1e6      	bne.n	8009bfc <RemoteConfig::GetIndex(void const*, unsigned int&)+0xc>
 8009c2e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8009c32:	b002      	add	sp, #8
 8009c34:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009c38:	3401      	adds	r4, #1
 8009c3a:	e7eb      	b.n	8009c14 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x24>
 8009c3c:	6013      	str	r3, [r2, #0]
 8009c3e:	e7f8      	b.n	8009c32 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x42>
 8009c40:	080138b0 	stmdaeq	r1, {r4, r5, r7, fp, ip, sp}

08009c44 <RemoteConfig::PlatformHandleTftpSet()>:
 8009c44:	f890 15ec 	ldrb.w	r1, [r0, #1516]	; 0x5ec
 8009c48:	b109      	cbz	r1, 8009c4e <RemoteConfig::PlatformHandleTftpSet()+0xa>
 8009c4a:	f24a 51a5 	movw	r1, #42405	; 0xa5a5
 8009c4e:	2002      	movs	r0, #2
 8009c50:	f007 bd2a 	b.w	80116a8 <bkp_data_write>

08009c54 <RemoteConfig::PlatformHandleTftpGet()>:
 8009c54:	b510      	push	{r4, lr}
 8009c56:	4604      	mov	r4, r0
 8009c58:	2002      	movs	r0, #2
 8009c5a:	f007 fd3b 	bl	80116d4 <bkp_data_read>
 8009c5e:	f24a 53a5 	movw	r3, #42405	; 0xa5a5
 8009c62:	1ac3      	subs	r3, r0, r3
 8009c64:	4258      	negs	r0, r3
 8009c66:	4158      	adcs	r0, r3
 8009c68:	f884 05ec 	strb.w	r0, [r4, #1516]	; 0x5ec
 8009c6c:	bd10      	pop	{r4, pc}

08009c6e <strcmp>:
 8009c6e:	1e43      	subs	r3, r0, #1
 8009c70:	3901      	subs	r1, #1
 8009c72:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8009c76:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 8009c7a:	4290      	cmp	r0, r2
 8009c7c:	d102      	bne.n	8009c84 <strcmp+0x16>
 8009c7e:	2800      	cmp	r0, #0
 8009c80:	d1f7      	bne.n	8009c72 <strcmp+0x4>
 8009c82:	4770      	bx	lr
 8009c84:	1a80      	subs	r0, r0, r2
 8009c86:	4770      	bx	lr

08009c88 <strcasecmp>:
 8009c88:	b530      	push	{r4, r5, lr}
 8009c8a:	1e42      	subs	r2, r0, #1
 8009c8c:	3901      	subs	r1, #1
 8009c8e:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8009c92:	4604      	mov	r4, r0
 8009c94:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 8009c98:	2b19      	cmp	r3, #25
 8009c9a:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 8009c9e:	bf98      	it	ls
 8009ca0:	f100 0420 	addls.w	r4, r0, #32
 8009ca4:	f1a3 0541 	sub.w	r5, r3, #65	; 0x41
 8009ca8:	2d19      	cmp	r5, #25
 8009caa:	bf98      	it	ls
 8009cac:	3320      	addls	r3, #32
 8009cae:	42a3      	cmp	r3, r4
 8009cb0:	d102      	bne.n	8009cb8 <strcasecmp+0x30>
 8009cb2:	2800      	cmp	r0, #0
 8009cb4:	d1eb      	bne.n	8009c8e <strcasecmp+0x6>
 8009cb6:	bd30      	pop	{r4, r5, pc}
 8009cb8:	1ae0      	subs	r0, r4, r3
 8009cba:	e7fc      	b.n	8009cb6 <strcasecmp+0x2e>

08009cbc <PropertiesConfig::EnableJSON(bool)>:
 8009cbc:	4a04      	ldr	r2, [pc, #16]	; (8009cd0 <PropertiesConfig::EnableJSON(bool)+0x14>)
 8009cbe:	7813      	ldrb	r3, [r2, #0]
 8009cc0:	b118      	cbz	r0, 8009cca <PropertiesConfig::EnableJSON(bool)+0xe>
 8009cc2:	f043 0301 	orr.w	r3, r3, #1
 8009cc6:	7013      	strb	r3, [r2, #0]
 8009cc8:	4770      	bx	lr
 8009cca:	f003 03fe 	and.w	r3, r3, #254	; 0xfe
 8009cce:	e7fa      	b.n	8009cc6 <PropertiesConfig::EnableJSON(bool)+0xa>
 8009cd0:	2000d15c 	andcs	sp, r0, ip, asr r1

08009cd4 <HttpDaemon::HttpDaemon()>:
 8009cd4:	4a0a      	ldr	r2, [pc, #40]	; (8009d00 <HttpDaemon::HttpDaemon()+0x2c>)
 8009cd6:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8009cda:	6002      	str	r2, [r0, #0]
 8009cdc:	2200      	movs	r2, #0
 8009cde:	f44f 7c02 	mov.w	ip, #520	; 0x208
 8009ce2:	e9c0 1204 	strd	r1, r2, [r0, #16]
 8009ce6:	2102      	movs	r1, #2
 8009ce8:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8009cec:	e9c0 c106 	strd	ip, r1, [r0, #24]
 8009cf0:	60c2      	str	r2, [r0, #12]
 8009cf2:	8402      	strh	r2, [r0, #32]
 8009cf4:	f8a0 25c2 	strh.w	r2, [r0, #1474]	; 0x5c2
 8009cf8:	f8c0 25c4 	str.w	r2, [r0, #1476]	; 0x5c4
 8009cfc:	4770      	bx	lr
 8009cfe:	bf00      	nop
 8009d00:	08013ba7 	stmdaeq	r1, {r0, r1, r2, r5, r7, r8, r9, fp, ip, sp}

08009d04 <HttpDaemon::Start()>:
 8009d04:	4b04      	ldr	r3, [pc, #16]	; (8009d18 <HttpDaemon::Start()+0x14>)
 8009d06:	b510      	push	{r4, lr}
 8009d08:	2150      	movs	r1, #80	; 0x50
 8009d0a:	4604      	mov	r4, r0
 8009d0c:	6818      	ldr	r0, [r3, #0]
 8009d0e:	f004 fd5d 	bl	800e7cc <Network::TcpBegin(unsigned short)>
 8009d12:	6120      	str	r0, [r4, #16]
 8009d14:	bd10      	pop	{r4, pc}
 8009d16:	bf00      	nop
 8009d18:	2000cb28 	andcs	ip, r0, r8, lsr #22

08009d1c <HttpDaemon::ParseMethod(char*)>:
 8009d1c:	b538      	push	{r3, r4, r5, lr}
 8009d1e:	4604      	mov	r4, r0
 8009d20:	4608      	mov	r0, r1
 8009d22:	491b      	ldr	r1, [pc, #108]	; (8009d90 <HttpDaemon::ParseMethod(char*)+0x74>)
 8009d24:	f007 faea 	bl	80112fc <strtok>
 8009d28:	4605      	mov	r5, r0
 8009d2a:	b370      	cbz	r0, 8009d8a <HttpDaemon::ParseMethod(char*)+0x6e>
 8009d2c:	4919      	ldr	r1, [pc, #100]	; (8009d94 <HttpDaemon::ParseMethod(char*)+0x78>)
 8009d2e:	f7ff ff9e 	bl	8009c6e <strcmp>
 8009d32:	b940      	cbnz	r0, 8009d46 <HttpDaemon::ParseMethod(char*)+0x2a>
 8009d34:	61e0      	str	r0, [r4, #28]
 8009d36:	2000      	movs	r0, #0
 8009d38:	4915      	ldr	r1, [pc, #84]	; (8009d90 <HttpDaemon::ParseMethod(char*)+0x74>)
 8009d3a:	f007 fadf 	bl	80112fc <strtok>
 8009d3e:	b950      	cbnz	r0, 8009d56 <HttpDaemon::ParseMethod(char*)+0x3a>
 8009d40:	f44f 70c8 	mov.w	r0, #400	; 0x190
 8009d44:	bd38      	pop	{r3, r4, r5, pc}
 8009d46:	4628      	mov	r0, r5
 8009d48:	4913      	ldr	r1, [pc, #76]	; (8009d98 <HttpDaemon::ParseMethod(char*)+0x7c>)
 8009d4a:	f7ff ff90 	bl	8009c6e <strcmp>
 8009d4e:	b9e0      	cbnz	r0, 8009d8a <HttpDaemon::ParseMethod(char*)+0x6e>
 8009d50:	2301      	movs	r3, #1
 8009d52:	61e3      	str	r3, [r4, #28]
 8009d54:	e7ef      	b.n	8009d36 <HttpDaemon::ParseMethod(char*)+0x1a>
 8009d56:	6060      	str	r0, [r4, #4]
 8009d58:	4910      	ldr	r1, [pc, #64]	; (8009d9c <HttpDaemon::ParseMethod(char*)+0x80>)
 8009d5a:	2000      	movs	r0, #0
 8009d5c:	f007 face 	bl	80112fc <strtok>
 8009d60:	2800      	cmp	r0, #0
 8009d62:	d0ed      	beq.n	8009d40 <HttpDaemon::ParseMethod(char*)+0x24>
 8009d64:	490e      	ldr	r1, [pc, #56]	; (8009da0 <HttpDaemon::ParseMethod(char*)+0x84>)
 8009d66:	f7ff ff82 	bl	8009c6e <strcmp>
 8009d6a:	2800      	cmp	r0, #0
 8009d6c:	d1e8      	bne.n	8009d40 <HttpDaemon::ParseMethod(char*)+0x24>
 8009d6e:	490d      	ldr	r1, [pc, #52]	; (8009da4 <HttpDaemon::ParseMethod(char*)+0x88>)
 8009d70:	f007 fac4 	bl	80112fc <strtok>
 8009d74:	2800      	cmp	r0, #0
 8009d76:	d0e3      	beq.n	8009d40 <HttpDaemon::ParseMethod(char*)+0x24>
 8009d78:	490b      	ldr	r1, [pc, #44]	; (8009da8 <HttpDaemon::ParseMethod(char*)+0x8c>)
 8009d7a:	f7ff ff78 	bl	8009c6e <strcmp>
 8009d7e:	2800      	cmp	r0, #0
 8009d80:	f240 10f9 	movw	r0, #505	; 0x1f9
 8009d84:	bf08      	it	eq
 8009d86:	20c8      	moveq	r0, #200	; 0xc8
 8009d88:	e7dc      	b.n	8009d44 <HttpDaemon::ParseMethod(char*)+0x28>
 8009d8a:	f240 10f5 	movw	r0, #501	; 0x1f5
 8009d8e:	e7d9      	b.n	8009d44 <HttpDaemon::ParseMethod(char*)+0x28>
 8009d90:	0801393c 	stmdaeq	r1, {r2, r3, r4, r5, r8, fp, ip, sp}
 8009d94:	0801393e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r8, fp, ip, sp}
 8009d98:	08013942 	stmdaeq	r1, {r1, r6, r8, fp, ip, sp}
 8009d9c:	080139ac 	stmdaeq	r1, {r2, r3, r5, r7, r8, fp, ip, sp}
 8009da0:	08013947 	stmdaeq	r1, {r0, r1, r2, r6, r8, fp, ip, sp}
 8009da4:	0801394c 	stmdaeq	r1, {r2, r3, r6, r8, fp, ip, sp}
 8009da8:	0801394f 	stmdaeq	r1, {r0, r1, r2, r3, r6, r8, fp, ip, sp}

08009dac <HttpDaemon::ParseHeaderField(char*)>:
 8009dac:	b538      	push	{r3, r4, r5, lr}
 8009dae:	4605      	mov	r5, r0
 8009db0:	4608      	mov	r0, r1
 8009db2:	491d      	ldr	r1, [pc, #116]	; (8009e28 <HttpDaemon::ParseHeaderField(char*)+0x7c>)
 8009db4:	f007 faa2 	bl	80112fc <strtok>
 8009db8:	4604      	mov	r4, r0
 8009dba:	b910      	cbnz	r0, 8009dc2 <HttpDaemon::ParseHeaderField(char*)+0x16>
 8009dbc:	f44f 70c8 	mov.w	r0, #400	; 0x190
 8009dc0:	bd38      	pop	{r3, r4, r5, pc}
 8009dc2:	491a      	ldr	r1, [pc, #104]	; (8009e2c <HttpDaemon::ParseHeaderField(char*)+0x80>)
 8009dc4:	f7ff ff60 	bl	8009c88 <strcasecmp>
 8009dc8:	b970      	cbnz	r0, 8009de8 <HttpDaemon::ParseHeaderField(char*)+0x3c>
 8009dca:	4919      	ldr	r1, [pc, #100]	; (8009e30 <HttpDaemon::ParseHeaderField(char*)+0x84>)
 8009dcc:	f007 fa96 	bl	80112fc <strtok>
 8009dd0:	2800      	cmp	r0, #0
 8009dd2:	d0f3      	beq.n	8009dbc <HttpDaemon::ParseHeaderField(char*)+0x10>
 8009dd4:	4917      	ldr	r1, [pc, #92]	; (8009e34 <HttpDaemon::ParseHeaderField(char*)+0x88>)
 8009dd6:	f7ff ff4a 	bl	8009c6e <strcmp>
 8009dda:	b108      	cbz	r0, 8009de0 <HttpDaemon::ParseHeaderField(char*)+0x34>
 8009ddc:	20c8      	movs	r0, #200	; 0xc8
 8009dde:	e7ef      	b.n	8009dc0 <HttpDaemon::ParseHeaderField(char*)+0x14>
 8009de0:	2301      	movs	r3, #1
 8009de2:	f885 3020 	strb.w	r3, [r5, #32]
 8009de6:	e7f9      	b.n	8009ddc <HttpDaemon::ParseHeaderField(char*)+0x30>
 8009de8:	4620      	mov	r0, r4
 8009dea:	4913      	ldr	r1, [pc, #76]	; (8009e38 <HttpDaemon::ParseHeaderField(char*)+0x8c>)
 8009dec:	f7ff ff4c 	bl	8009c88 <strcasecmp>
 8009df0:	4604      	mov	r4, r0
 8009df2:	2800      	cmp	r0, #0
 8009df4:	d1f2      	bne.n	8009ddc <HttpDaemon::ParseHeaderField(char*)+0x30>
 8009df6:	4911      	ldr	r1, [pc, #68]	; (8009e3c <HttpDaemon::ParseHeaderField(char*)+0x90>)
 8009df8:	f007 fa80 	bl	80112fc <strtok>
 8009dfc:	2800      	cmp	r0, #0
 8009dfe:	d0dd      	beq.n	8009dbc <HttpDaemon::ParseHeaderField(char*)+0x10>
 8009e00:	1e42      	subs	r2, r0, #1
 8009e02:	4623      	mov	r3, r4
 8009e04:	200a      	movs	r0, #10
 8009e06:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 8009e0a:	b151      	cbz	r1, 8009e22 <HttpDaemon::ParseHeaderField(char*)+0x76>
 8009e0c:	3930      	subs	r1, #48	; 0x30
 8009e0e:	2909      	cmp	r1, #9
 8009e10:	d8d4      	bhi.n	8009dbc <HttpDaemon::ParseHeaderField(char*)+0x10>
 8009e12:	fb00 1303 	mla	r3, r0, r3, r1
 8009e16:	f5b3 6fb4 	cmp.w	r3, #1440	; 0x5a0
 8009e1a:	d9f4      	bls.n	8009e06 <HttpDaemon::ParseHeaderField(char*)+0x5a>
 8009e1c:	f240 109d 	movw	r0, #413	; 0x19d
 8009e20:	e7ce      	b.n	8009dc0 <HttpDaemon::ParseHeaderField(char*)+0x14>
 8009e22:	f8a5 35c6 	strh.w	r3, [r5, #1478]	; 0x5c6
 8009e26:	e7d9      	b.n	8009ddc <HttpDaemon::ParseHeaderField(char*)+0x30>
 8009e28:	08013953 	stmdaeq	r1, {r0, r1, r4, r6, r8, fp, ip, sp}
 8009e2c:	08013955 	stmdaeq	r1, {r0, r2, r4, r6, r8, fp, ip, sp}
 8009e30:	08013962 	stmdaeq	r1, {r1, r5, r6, r8, fp, ip, sp}
 8009e34:	08013965 	stmdaeq	r1, {r0, r2, r5, r6, r8, fp, ip, sp}
 8009e38:	08013976 	stmdaeq	r1, {r1, r2, r4, r5, r6, r8, fp, ip, sp}
 8009e3c:	0801393c 	stmdaeq	r1, {r2, r3, r4, r5, r8, fp, ip, sp}

08009e40 <HttpDaemon::ParseRequest()>:
 8009e40:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009e42:	2400      	movs	r4, #0
 8009e44:	4605      	mov	r5, r0
 8009e46:	4622      	mov	r2, r4
 8009e48:	4626      	mov	r6, r4
 8009e4a:	68c1      	ldr	r1, [r0, #12]
 8009e4c:	f880 4020 	strb.w	r4, [r0, #32]
 8009e50:	f8c0 45c4 	str.w	r4, [r0, #1476]	; 0x5c4
 8009e54:	8aab      	ldrh	r3, [r5, #20]
 8009e56:	42a3      	cmp	r3, r4
 8009e58:	d923      	bls.n	8009ea2 <HttpDaemon::ParseRequest()+0x62>
 8009e5a:	68eb      	ldr	r3, [r5, #12]
 8009e5c:	5d18      	ldrb	r0, [r3, r4]
 8009e5e:	280a      	cmp	r0, #10
 8009e60:	d10e      	bne.n	8009e80 <HttpDaemon::ParseRequest()+0x40>
 8009e62:	4423      	add	r3, r4
 8009e64:	f803 6c01 	strb.w	r6, [r3, #-1]
 8009e68:	1c57      	adds	r7, r2, #1
 8009e6a:	b962      	cbnz	r2, 8009e86 <HttpDaemon::ParseRequest()+0x46>
 8009e6c:	4628      	mov	r0, r5
 8009e6e:	f7ff ff55 	bl	8009d1c <HttpDaemon::ParseMethod(char*)>
 8009e72:	28c8      	cmp	r0, #200	; 0xc8
 8009e74:	d116      	bne.n	8009ea4 <HttpDaemon::ParseRequest()+0x64>
 8009e76:	463a      	mov	r2, r7
 8009e78:	68e9      	ldr	r1, [r5, #12]
 8009e7a:	3401      	adds	r4, #1
 8009e7c:	b2a4      	uxth	r4, r4
 8009e7e:	4421      	add	r1, r4
 8009e80:	3401      	adds	r4, #1
 8009e82:	b2a4      	uxth	r4, r4
 8009e84:	e7e6      	b.n	8009e54 <HttpDaemon::ParseRequest()+0x14>
 8009e86:	7808      	ldrb	r0, [r1, #0]
 8009e88:	b968      	cbnz	r0, 8009ea6 <HttpDaemon::ParseRequest()+0x66>
 8009e8a:	696b      	ldr	r3, [r5, #20]
 8009e8c:	3b01      	subs	r3, #1
 8009e8e:	1b1b      	subs	r3, r3, r4
 8009e90:	b29b      	uxth	r3, r3
 8009e92:	f8a5 35c4 	strh.w	r3, [r5, #1476]	; 0x5c4
 8009e96:	b123      	cbz	r3, 8009ea2 <HttpDaemon::ParseRequest()+0x62>
 8009e98:	68ea      	ldr	r2, [r5, #12]
 8009e9a:	3401      	adds	r4, #1
 8009e9c:	4414      	add	r4, r2
 8009e9e:	60ac      	str	r4, [r5, #8]
 8009ea0:	54e0      	strb	r0, [r4, r3]
 8009ea2:	20c8      	movs	r0, #200	; 0xc8
 8009ea4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009ea6:	4628      	mov	r0, r5
 8009ea8:	f7ff ff80 	bl	8009dac <HttpDaemon::ParseHeaderField(char*)>
 8009eac:	e7e1      	b.n	8009e72 <HttpDaemon::ParseRequest()+0x32>
	...

08009eb0 <HttpDaemon::HandleGetTxt()>:
 8009eb0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009eb4:	6847      	ldr	r7, [r0, #4]
 8009eb6:	4604      	mov	r4, r0
 8009eb8:	1dbd      	adds	r5, r7, #6
 8009eba:	462b      	mov	r3, r5
 8009ebc:	4618      	mov	r0, r3
 8009ebe:	7802      	ldrb	r2, [r0, #0]
 8009ec0:	3301      	adds	r3, #1
 8009ec2:	2a00      	cmp	r2, #0
 8009ec4:	d1fa      	bne.n	8009ebc <HttpDaemon::HandleGetTxt()+0xc>
 8009ec6:	1b40      	subs	r0, r0, r5
 8009ec8:	2804      	cmp	r0, #4
 8009eca:	d925      	bls.n	8009f18 <HttpDaemon::HandleGetTxt()+0x68>
 8009ecc:	3804      	subs	r0, #4
 8009ece:	4915      	ldr	r1, [pc, #84]	; (8009f24 <HttpDaemon::HandleGetTxt()+0x74>)
 8009ed0:	4428      	add	r0, r5
 8009ed2:	f7ff fecc 	bl	8009c6e <strcmp>
 8009ed6:	b9f8      	cbnz	r0, 8009f18 <HttpDaemon::HandleGetTxt()+0x68>
 8009ed8:	4b13      	ldr	r3, [pc, #76]	; (8009f28 <HttpDaemon::HandleGetTxt()+0x78>)
 8009eda:	2001      	movs	r0, #1
 8009edc:	f893 8000 	ldrb.w	r8, [r3]
 8009ee0:	f7ff feec 	bl	8009cbc <PropertiesConfig::EnableJSON(bool)>
 8009ee4:	4b11      	ldr	r3, [pc, #68]	; (8009f2c <HttpDaemon::HandleGetTxt()+0x7c>)
 8009ee6:	f240 529b 	movw	r2, #1435	; 0x59b
 8009eea:	4629      	mov	r1, r5
 8009eec:	6818      	ldr	r0, [r3, #0]
 8009eee:	f7ff fa6b 	bl	80093c8 <RemoteConfig::HandleGet(void*, unsigned int)>
 8009ef2:	4606      	mov	r6, r0
 8009ef4:	f008 0801 	and.w	r8, r8, #1
 8009ef8:	4640      	mov	r0, r8
 8009efa:	f7ff fedf 	bl	8009cbc <PropertiesConfig::EnableJSON(bool)>
 8009efe:	b15e      	cbz	r6, 8009f18 <HttpDaemon::HandleGetTxt()+0x68>
 8009f00:	f8a4 65c2 	strh.w	r6, [r4, #1474]	; 0x5c2
 8009f04:	3606      	adds	r6, #6
 8009f06:	3422      	adds	r4, #34	; 0x22
 8009f08:	443e      	add	r6, r7
 8009f0a:	42b5      	cmp	r5, r6
 8009f0c:	d008      	beq.n	8009f20 <HttpDaemon::HandleGetTxt()+0x70>
 8009f0e:	f815 3b01 	ldrb.w	r3, [r5], #1
 8009f12:	f804 3b01 	strb.w	r3, [r4], #1
 8009f16:	e7f8      	b.n	8009f0a <HttpDaemon::HandleGetTxt()+0x5a>
 8009f18:	f44f 70c8 	mov.w	r0, #400	; 0x190
 8009f1c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009f20:	20c8      	movs	r0, #200	; 0xc8
 8009f22:	e7fb      	b.n	8009f1c <HttpDaemon::HandleGetTxt()+0x6c>
 8009f24:	0801389d 	stmdaeq	r1, {r0, r2, r3, r4, r7, fp, ip, sp}
 8009f28:	2000d15c 	andcs	sp, r0, ip, asr r1
 8009f2c:	20000124 	andcs	r0, r0, r4, lsr #2

08009f30 <HttpDaemon::HandleGet()>:
 8009f30:	b570      	push	{r4, r5, r6, lr}
 8009f32:	6845      	ldr	r5, [r0, #4]
 8009f34:	4604      	mov	r4, r0
 8009f36:	4943      	ldr	r1, [pc, #268]	; (800a044 <HttpDaemon::HandleGet()+0x114>)
 8009f38:	4628      	mov	r0, r5
 8009f3a:	f7ff fe98 	bl	8009c6e <strcmp>
 8009f3e:	b120      	cbz	r0, 8009f4a <HttpDaemon::HandleGet()+0x1a>
 8009f40:	4628      	mov	r0, r5
 8009f42:	4941      	ldr	r1, [pc, #260]	; (800a048 <HttpDaemon::HandleGet()+0x118>)
 8009f44:	f7ff fe93 	bl	8009c6e <strcmp>
 8009f48:	b960      	cbnz	r0, 8009f64 <HttpDaemon::HandleGet()+0x34>
 8009f4a:	4621      	mov	r1, r4
 8009f4c:	4b3f      	ldr	r3, [pc, #252]	; (800a04c <HttpDaemon::HandleGet()+0x11c>)
 8009f4e:	4840      	ldr	r0, [pc, #256]	; (800a050 <HttpDaemon::HandleGet()+0x120>)
 8009f50:	f841 3b22 	str.w	r3, [r1], #34
 8009f54:	f000 fa7a 	bl	800a44c <get_file_content(char const*, char*)>
 8009f58:	2800      	cmp	r0, #0
 8009f5a:	dd1e      	ble.n	8009f9a <HttpDaemon::HandleGet()+0x6a>
 8009f5c:	f8a4 05c2 	strh.w	r0, [r4, #1474]	; 0x5c2
 8009f60:	20c8      	movs	r0, #200	; 0xc8
 8009f62:	bd70      	pop	{r4, r5, r6, pc}
 8009f64:	4628      	mov	r0, r5
 8009f66:	493b      	ldr	r1, [pc, #236]	; (800a054 <HttpDaemon::HandleGet()+0x124>)
 8009f68:	f7ff fe81 	bl	8009c6e <strcmp>
 8009f6c:	b928      	cbnz	r0, 8009f7a <HttpDaemon::HandleGet()+0x4a>
 8009f6e:	4621      	mov	r1, r4
 8009f70:	4b39      	ldr	r3, [pc, #228]	; (800a058 <HttpDaemon::HandleGet()+0x128>)
 8009f72:	483a      	ldr	r0, [pc, #232]	; (800a05c <HttpDaemon::HandleGet()+0x12c>)
 8009f74:	f841 3b22 	str.w	r3, [r1], #34
 8009f78:	e7ec      	b.n	8009f54 <HttpDaemon::HandleGet()+0x24>
 8009f7a:	4628      	mov	r0, r5
 8009f7c:	4938      	ldr	r1, [pc, #224]	; (800a060 <HttpDaemon::HandleGet()+0x130>)
 8009f7e:	f7ff fe76 	bl	8009c6e <strcmp>
 8009f82:	b168      	cbz	r0, 8009fa0 <HttpDaemon::HandleGet()+0x70>
 8009f84:	4a37      	ldr	r2, [pc, #220]	; (800a064 <HttpDaemon::HandleGet()+0x134>)
 8009f86:	1e6b      	subs	r3, r5, #1
 8009f88:	1d6e      	adds	r6, r5, #5
 8009f8a:	42b3      	cmp	r3, r6
 8009f8c:	d00e      	beq.n	8009fac <HttpDaemon::HandleGet()+0x7c>
 8009f8e:	f812 1b01 	ldrb.w	r1, [r2], #1
 8009f92:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8009f96:	4288      	cmp	r0, r1
 8009f98:	d0f7      	beq.n	8009f8a <HttpDaemon::HandleGet()+0x5a>
 8009f9a:	f44f 70ca 	mov.w	r0, #404	; 0x194
 8009f9e:	e7e0      	b.n	8009f62 <HttpDaemon::HandleGet()+0x32>
 8009fa0:	4621      	mov	r1, r4
 8009fa2:	4b31      	ldr	r3, [pc, #196]	; (800a068 <HttpDaemon::HandleGet()+0x138>)
 8009fa4:	4831      	ldr	r0, [pc, #196]	; (800a06c <HttpDaemon::HandleGet()+0x13c>)
 8009fa6:	f841 3b22 	str.w	r3, [r1], #34
 8009faa:	e7d3      	b.n	8009f54 <HttpDaemon::HandleGet()+0x24>
 8009fac:	4b30      	ldr	r3, [pc, #192]	; (800a070 <HttpDaemon::HandleGet()+0x140>)
 8009fae:	3506      	adds	r5, #6
 8009fb0:	4628      	mov	r0, r5
 8009fb2:	4930      	ldr	r1, [pc, #192]	; (800a074 <HttpDaemon::HandleGet()+0x144>)
 8009fb4:	6023      	str	r3, [r4, #0]
 8009fb6:	f7ff fe5a 	bl	8009c6e <strcmp>
 8009fba:	b930      	cbnz	r0, 8009fca <HttpDaemon::HandleGet()+0x9a>
 8009fbc:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 8009fc0:	f104 0022 	add.w	r0, r4, #34	; 0x22
 8009fc4:	f000 f9ca 	bl	800a35c <remoteconfig::json_get_list(char*, unsigned short)>
 8009fc8:	e7c6      	b.n	8009f58 <HttpDaemon::HandleGet()+0x28>
 8009fca:	4628      	mov	r0, r5
 8009fcc:	492a      	ldr	r1, [pc, #168]	; (800a078 <HttpDaemon::HandleGet()+0x148>)
 8009fce:	f7ff fe4e 	bl	8009c6e <strcmp>
 8009fd2:	b930      	cbnz	r0, 8009fe2 <HttpDaemon::HandleGet()+0xb2>
 8009fd4:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 8009fd8:	f104 0022 	add.w	r0, r4, #34	; 0x22
 8009fdc:	f000 f9f2 	bl	800a3c4 <remoteconfig::json_get_version(char*, unsigned short)>
 8009fe0:	e7ba      	b.n	8009f58 <HttpDaemon::HandleGet()+0x28>
 8009fe2:	4628      	mov	r0, r5
 8009fe4:	4925      	ldr	r1, [pc, #148]	; (800a07c <HttpDaemon::HandleGet()+0x14c>)
 8009fe6:	f7ff fe42 	bl	8009c6e <strcmp>
 8009fea:	b958      	cbnz	r0, 800a004 <HttpDaemon::HandleGet()+0xd4>
 8009fec:	4b24      	ldr	r3, [pc, #144]	; (800a080 <HttpDaemon::HandleGet()+0x150>)
 8009fee:	681b      	ldr	r3, [r3, #0]
 8009ff0:	f893 35d7 	ldrb.w	r3, [r3, #1495]	; 0x5d7
 8009ff4:	b31b      	cbz	r3, 800a03e <HttpDaemon::HandleGet()+0x10e>
 8009ff6:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 8009ffa:	f104 0022 	add.w	r0, r4, #34	; 0x22
 8009ffe:	f000 f9fd 	bl	800a3fc <remoteconfig::json_get_uptime(char*, unsigned short)>
 800a002:	e7a9      	b.n	8009f58 <HttpDaemon::HandleGet()+0x28>
 800a004:	4628      	mov	r0, r5
 800a006:	491f      	ldr	r1, [pc, #124]	; (800a084 <HttpDaemon::HandleGet()+0x154>)
 800a008:	f7ff fe31 	bl	8009c6e <strcmp>
 800a00c:	b930      	cbnz	r0, 800a01c <HttpDaemon::HandleGet()+0xec>
 800a00e:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800a012:	f104 0022 	add.w	r0, r4, #34	; 0x22
 800a016:	f000 fa01 	bl	800a41c <remoteconfig::json_get_display(char*, unsigned short)>
 800a01a:	e79d      	b.n	8009f58 <HttpDaemon::HandleGet()+0x28>
 800a01c:	4628      	mov	r0, r5
 800a01e:	491a      	ldr	r1, [pc, #104]	; (800a088 <HttpDaemon::HandleGet()+0x158>)
 800a020:	f7ff fe25 	bl	8009c6e <strcmp>
 800a024:	b930      	cbnz	r0, 800a034 <HttpDaemon::HandleGet()+0x104>
 800a026:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800a02a:	f104 0022 	add.w	r0, r4, #34	; 0x22
 800a02e:	f000 fa05 	bl	800a43c <remoteconfig::json_get_directory(char*, unsigned short)>
 800a032:	e791      	b.n	8009f58 <HttpDaemon::HandleGet()+0x28>
 800a034:	4620      	mov	r0, r4
 800a036:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a03a:	f7ff bf39 	b.w	8009eb0 <HttpDaemon::HandleGetTxt()>
 800a03e:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800a042:	e78e      	b.n	8009f62 <HttpDaemon::HandleGet()+0x32>
 800a044:	080139ac 	stmdaeq	r1, {r2, r3, r5, r7, r8, fp, ip, sp}
 800a048:	08013985 	stmdaeq	r1, {r0, r2, r7, r8, fp, ip, sp}
 800a04c:	08013ba7 	stmdaeq	r1, {r0, r1, r2, r5, r7, r8, r9, fp, ip, sp}
 800a050:	08013986 	stmdaeq	r1, {r1, r2, r7, r8, fp, ip, sp}
 800a054:	08013991 	stmdaeq	r1, {r0, r4, r7, r8, fp, ip, sp}
 800a058:	08013bc7 	stmdaeq	r1, {r0, r1, r2, r6, r7, r8, r9, fp, ip, sp}
 800a05c:	08013992 	stmdaeq	r1, {r1, r4, r7, r8, fp, ip, sp}
 800a060:	0801399d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r8, fp, ip, sp}
 800a064:	080139a7 	stmdaeq	r1, {r0, r1, r2, r5, r7, r8, fp, ip, sp}
 800a068:	08013be7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, r8, r9, fp, ip, sp}
 800a06c:	0801399e 	stmdaeq	r1, {r1, r2, r3, r4, r7, r8, fp, ip, sp}
 800a070:	08013c07 	stmdaeq	r1, {r0, r1, r2, sl, fp, ip, sp}
 800a074:	080139ae 	stmdaeq	r1, {r1, r2, r3, r5, r7, r8, fp, ip, sp}
 800a078:	080139b3 	stmdaeq	r1, {r0, r1, r4, r5, r7, r8, fp, ip, sp}
 800a07c:	080139bb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r7, r8, fp, ip, sp}
 800a080:	20000124 	andcs	r0, r0, r4, lsr #2
 800a084:	080139c2 	stmdaeq	r1, {r1, r6, r7, r8, fp, ip, sp}
 800a088:	080139ca 	stmdaeq	r1, {r1, r3, r6, r7, r8, fp, ip, sp}

0800a08c <HttpDaemon::HandlePost(bool)>:
 800a08c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a08e:	4604      	mov	r4, r0
 800a090:	2900      	cmp	r1, #0
 800a092:	f040 8091 	bne.w	800a1b8 <HttpDaemon::HandlePost(bool)+0x12c>
 800a096:	f890 3020 	ldrb.w	r3, [r0, #32]
 800a09a:	2b00      	cmp	r3, #0
 800a09c:	d05d      	beq.n	800a15a <HttpDaemon::HandlePost(bool)+0xce>
 800a09e:	6845      	ldr	r5, [r0, #4]
 800a0a0:	4948      	ldr	r1, [pc, #288]	; (800a1c4 <HttpDaemon::HandlePost(bool)+0x138>)
 800a0a2:	4628      	mov	r0, r5
 800a0a4:	f7ff fde3 	bl	8009c6e <strcmp>
 800a0a8:	2800      	cmp	r0, #0
 800a0aa:	bf0c      	ite	eq
 800a0ac:	2301      	moveq	r3, #1
 800a0ae:	2300      	movne	r3, #0
 800a0b0:	f884 3021 	strb.w	r3, [r4, #33]	; 0x21
 800a0b4:	d055      	beq.n	800a162 <HttpDaemon::HandlePost(bool)+0xd6>
 800a0b6:	4628      	mov	r0, r5
 800a0b8:	4943      	ldr	r1, [pc, #268]	; (800a1c8 <HttpDaemon::HandlePost(bool)+0x13c>)
 800a0ba:	f7ff fdd8 	bl	8009c6e <strcmp>
 800a0be:	2800      	cmp	r0, #0
 800a0c0:	d04f      	beq.n	800a162 <HttpDaemon::HandlePost(bool)+0xd6>
 800a0c2:	f44f 70ca 	mov.w	r0, #404	; 0x194
 800a0c6:	e04a      	b.n	800a15e <HttpDaemon::HandlePost(bool)+0xd2>
 800a0c8:	4940      	ldr	r1, [pc, #256]	; (800a1cc <HttpDaemon::HandlePost(bool)+0x140>)
 800a0ca:	68a0      	ldr	r0, [r4, #8]
 800a0cc:	f10d 0207 	add.w	r2, sp, #7
 800a0d0:	f006 f830 	bl	8010134 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a0d4:	b9e8      	cbnz	r0, 800a112 <HttpDaemon::HandlePost(bool)+0x86>
 800a0d6:	f89d 6007 	ldrb.w	r6, [sp, #7]
 800a0da:	4b3d      	ldr	r3, [pc, #244]	; (800a1d0 <HttpDaemon::HandlePost(bool)+0x144>)
 800a0dc:	fab6 f186 	clz	r1, r6
 800a0e0:	681d      	ldr	r5, [r3, #0]
 800a0e2:	0949      	lsrs	r1, r1, #5
 800a0e4:	69a8      	ldr	r0, [r5, #24]
 800a0e6:	b138      	cbz	r0, 800a0f8 <HttpDaemon::HandlePost(bool)+0x6c>
 800a0e8:	6803      	ldr	r3, [r0, #0]
 800a0ea:	7429      	strb	r1, [r5, #16]
 800a0ec:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a0ee:	4798      	blx	r3
 800a0f0:	b116      	cbz	r6, 800a0f8 <HttpDaemon::HandlePost(bool)+0x6c>
 800a0f2:	4b38      	ldr	r3, [pc, #224]	; (800a1d4 <HttpDaemon::HandlePost(bool)+0x148>)
 800a0f4:	681b      	ldr	r3, [r3, #0]
 800a0f6:	606b      	str	r3, [r5, #4]
 800a0f8:	4620      	mov	r0, r4
 800a0fa:	4b37      	ldr	r3, [pc, #220]	; (800a1d8 <HttpDaemon::HandlePost(bool)+0x14c>)
 800a0fc:	f240 519f 	movw	r1, #1439	; 0x59f
 800a100:	4a36      	ldr	r2, [pc, #216]	; (800a1dc <HttpDaemon::HandlePost(bool)+0x150>)
 800a102:	f840 3b22 	str.w	r3, [r0], #34
 800a106:	f007 f8c9 	bl	801129c <snprintf>
 800a10a:	f8a4 05c2 	strh.w	r0, [r4, #1474]	; 0x5c2
 800a10e:	20c8      	movs	r0, #200	; 0xc8
 800a110:	e025      	b.n	800a15e <HttpDaemon::HandlePost(bool)+0xd2>
 800a112:	4933      	ldr	r1, [pc, #204]	; (800a1e0 <HttpDaemon::HandlePost(bool)+0x154>)
 800a114:	68a0      	ldr	r0, [r4, #8]
 800a116:	f10d 0207 	add.w	r2, sp, #7
 800a11a:	f006 f80b 	bl	8010134 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a11e:	b9e0      	cbnz	r0, 800a15a <HttpDaemon::HandlePost(bool)+0xce>
 800a120:	4b30      	ldr	r3, [pc, #192]	; (800a1e4 <HttpDaemon::HandlePost(bool)+0x158>)
 800a122:	6818      	ldr	r0, [r3, #0]
 800a124:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800a128:	b11b      	cbz	r3, 800a132 <HttpDaemon::HandlePost(bool)+0xa6>
 800a12a:	2104      	movs	r1, #4
 800a12c:	f006 fba4 	bl	8010878 <LedBlink::SetMode(ledblink::Mode)>
 800a130:	e7e2      	b.n	800a0f8 <HttpDaemon::HandlePost(bool)+0x6c>
 800a132:	2102      	movs	r1, #2
 800a134:	e7fa      	b.n	800a12c <HttpDaemon::HandlePost(bool)+0xa0>
 800a136:	4b2c      	ldr	r3, [pc, #176]	; (800a1e8 <HttpDaemon::HandlePost(bool)+0x15c>)
 800a138:	2001      	movs	r0, #1
 800a13a:	781d      	ldrb	r5, [r3, #0]
 800a13c:	f7ff fdbe 	bl	8009cbc <PropertiesConfig::EnableJSON(bool)>
 800a140:	4b2a      	ldr	r3, [pc, #168]	; (800a1ec <HttpDaemon::HandlePost(bool)+0x160>)
 800a142:	f8b4 25c4 	ldrh.w	r2, [r4, #1476]	; 0x5c4
 800a146:	6818      	ldr	r0, [r3, #0]
 800a148:	68a1      	ldr	r1, [r4, #8]
 800a14a:	f005 0501 	and.w	r5, r5, #1
 800a14e:	f7ff fa0b 	bl	8009568 <RemoteConfig::HandleSet(void*, unsigned int)>
 800a152:	4628      	mov	r0, r5
 800a154:	f7ff fdb2 	bl	8009cbc <PropertiesConfig::EnableJSON(bool)>
 800a158:	e7ce      	b.n	800a0f8 <HttpDaemon::HandlePost(bool)+0x6c>
 800a15a:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800a15e:	b002      	add	sp, #8
 800a160:	bd70      	pop	{r4, r5, r6, pc}
 800a162:	f8b4 35c6 	ldrh.w	r3, [r4, #1478]	; 0x5c6
 800a166:	6962      	ldr	r2, [r4, #20]
 800a168:	429a      	cmp	r2, r3
 800a16a:	dbd0      	blt.n	800a10e <HttpDaemon::HandlePost(bool)+0x82>
 800a16c:	f8b4 35c4 	ldrh.w	r3, [r4, #1476]	; 0x5c4
 800a170:	2b00      	cmp	r3, #0
 800a172:	d0cc      	beq.n	800a10e <HttpDaemon::HandlePost(bool)+0x82>
 800a174:	f894 3021 	ldrb.w	r3, [r4, #33]	; 0x21
 800a178:	2b00      	cmp	r3, #0
 800a17a:	d0dc      	beq.n	800a136 <HttpDaemon::HandlePost(bool)+0xaa>
 800a17c:	2201      	movs	r2, #1
 800a17e:	f8b4 15c4 	ldrh.w	r1, [r4, #1476]	; 0x5c4
 800a182:	68a0      	ldr	r0, [r4, #8]
 800a184:	f005 fd76 	bl	800fc74 <properties::convert_json_file(char*, unsigned short, bool)>
 800a188:	2800      	cmp	r0, #0
 800a18a:	dde6      	ble.n	800a15a <HttpDaemon::HandlePost(bool)+0xce>
 800a18c:	4918      	ldr	r1, [pc, #96]	; (800a1f0 <HttpDaemon::HandlePost(bool)+0x164>)
 800a18e:	68a0      	ldr	r0, [r4, #8]
 800a190:	f10d 0207 	add.w	r2, sp, #7
 800a194:	f005 ffce 	bl	8010134 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a198:	2800      	cmp	r0, #0
 800a19a:	d195      	bne.n	800a0c8 <HttpDaemon::HandlePost(bool)+0x3c>
 800a19c:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800a1a0:	2b00      	cmp	r3, #0
 800a1a2:	d0a9      	beq.n	800a0f8 <HttpDaemon::HandlePost(bool)+0x6c>
 800a1a4:	4b11      	ldr	r3, [pc, #68]	; (800a1ec <HttpDaemon::HandlePost(bool)+0x160>)
 800a1a6:	681b      	ldr	r3, [r3, #0]
 800a1a8:	f893 35d6 	ldrb.w	r3, [r3, #1494]	; 0x5d6
 800a1ac:	2b00      	cmp	r3, #0
 800a1ae:	d0d4      	beq.n	800a15a <HttpDaemon::HandlePost(bool)+0xce>
 800a1b0:	4b10      	ldr	r3, [pc, #64]	; (800a1f4 <HttpDaemon::HandlePost(bool)+0x168>)
 800a1b2:	6818      	ldr	r0, [r3, #0]
 800a1b4:	f006 fc02 	bl	80109bc <Hardware::Reboot()>
 800a1b8:	68c3      	ldr	r3, [r0, #12]
 800a1ba:	6083      	str	r3, [r0, #8]
 800a1bc:	6943      	ldr	r3, [r0, #20]
 800a1be:	f8a0 35c4 	strh.w	r3, [r0, #1476]	; 0x5c4
 800a1c2:	e7d7      	b.n	800a174 <HttpDaemon::HandlePost(bool)+0xe8>
 800a1c4:	080139d4 	stmdaeq	r1, {r2, r4, r6, r7, r8, fp, ip, sp}
 800a1c8:	08013970 	stmdaeq	r1, {r4, r5, r6, r8, fp, ip, sp}
 800a1cc:	080139c2 	stmdaeq	r1, {r1, r6, r7, r8, fp, ip, sp}
 800a1d0:	2000d160 	andcs	sp, r0, r0, ror #2
 800a1d4:	2000d26c 	andcs	sp, r0, ip, ror #4
 800a1d8:	08013ba7 	stmdaeq	r1, {r0, r1, r2, r5, r7, r8, r9, fp, ip, sp}
 800a1dc:	080139f1 	stmdaeq	r1, {r0, r4, r5, r6, r7, r8, fp, ip, sp}
 800a1e0:	080139e8 	stmdaeq	r1, {r3, r5, r6, r7, r8, fp, ip, sp}
 800a1e4:	2000d24c 	andcs	sp, r0, ip, asr #4
 800a1e8:	2000d15c 	andcs	sp, r0, ip, asr r1
 800a1ec:	20000124 	andcs	r0, r0, r4, lsr #2
 800a1f0:	080139e1 	stmdaeq	r1, {r0, r5, r6, r7, r8, fp, ip, sp}
 800a1f4:	2000d250 	andcs	sp, r0, r0, asr r2

0800a1f8 <HttpDaemon::Run()>:
 800a1f8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a1fa:	4e4a      	ldr	r6, [pc, #296]	; (800a324 <HttpDaemon::Run()+0x12c>)
 800a1fc:	4604      	mov	r4, r0
 800a1fe:	6901      	ldr	r1, [r0, #16]
 800a200:	f100 020c 	add.w	r2, r0, #12
 800a204:	b085      	sub	sp, #20
 800a206:	6830      	ldr	r0, [r6, #0]
 800a208:	f004 fae3 	bl	800e7d2 <Network::TcpRead(int, unsigned char const**)>
 800a20c:	6160      	str	r0, [r4, #20]
 800a20e:	2800      	cmp	r0, #0
 800a210:	d061      	beq.n	800a2d6 <HttpDaemon::Run()+0xde>
 800a212:	69a3      	ldr	r3, [r4, #24]
 800a214:	f5b3 7f02 	cmp.w	r3, #520	; 0x208
 800a218:	d15f      	bne.n	800a2da <HttpDaemon::Run()+0xe2>
 800a21a:	4620      	mov	r0, r4
 800a21c:	f7ff fe10 	bl	8009e40 <HttpDaemon::ParseRequest()>
 800a220:	28c8      	cmp	r0, #200	; 0xc8
 800a222:	61a0      	str	r0, [r4, #24]
 800a224:	d106      	bne.n	800a234 <HttpDaemon::Run()+0x3c>
 800a226:	69e3      	ldr	r3, [r4, #28]
 800a228:	2b00      	cmp	r3, #0
 800a22a:	d147      	bne.n	800a2bc <HttpDaemon::Run()+0xc4>
 800a22c:	4620      	mov	r0, r4
 800a22e:	f7ff fe7f 	bl	8009f30 <HttpDaemon::HandleGet()>
 800a232:	61a0      	str	r0, [r4, #24]
 800a234:	69a3      	ldr	r3, [r4, #24]
 800a236:	f104 0722 	add.w	r7, r4, #34	; 0x22
 800a23a:	2bc8      	cmp	r3, #200	; 0xc8
 800a23c:	d06f      	beq.n	800a31e <HttpDaemon::Run()+0x126>
 800a23e:	f5b3 7fcf 	cmp.w	r3, #414	; 0x19e
 800a242:	d062      	beq.n	800a30a <HttpDaemon::Run()+0x112>
 800a244:	dc52      	bgt.n	800a2ec <HttpDaemon::Run()+0xf4>
 800a246:	f5b3 7fca 	cmp.w	r3, #404	; 0x194
 800a24a:	d060      	beq.n	800a30e <HttpDaemon::Run()+0x116>
 800a24c:	f240 129d 	movw	r2, #413	; 0x19d
 800a250:	4293      	cmp	r3, r2
 800a252:	d05e      	beq.n	800a312 <HttpDaemon::Run()+0x11a>
 800a254:	4d34      	ldr	r5, [pc, #208]	; (800a328 <HttpDaemon::Run()+0x130>)
 800a256:	4a35      	ldr	r2, [pc, #212]	; (800a32c <HttpDaemon::Run()+0x134>)
 800a258:	f5b3 7fc8 	cmp.w	r3, #400	; 0x190
 800a25c:	bf18      	it	ne
 800a25e:	4615      	movne	r5, r2
 800a260:	4a33      	ldr	r2, [pc, #204]	; (800a330 <HttpDaemon::Run()+0x138>)
 800a262:	f240 519f 	movw	r1, #1439	; 0x59f
 800a266:	6022      	str	r2, [r4, #0]
 800a268:	4638      	mov	r0, r7
 800a26a:	e9cd 5500 	strd	r5, r5, [sp]
 800a26e:	4a31      	ldr	r2, [pc, #196]	; (800a334 <HttpDaemon::Run()+0x13c>)
 800a270:	f007 f814 	bl	801129c <snprintf>
 800a274:	f8a4 05c2 	strh.w	r0, [r4, #1474]	; 0x5c2
 800a278:	f8b4 35c2 	ldrh.w	r3, [r4, #1474]	; 0x5c2
 800a27c:	f240 519f 	movw	r1, #1439	; 0x59f
 800a280:	9303      	str	r3, [sp, #12]
 800a282:	6823      	ldr	r3, [r4, #0]
 800a284:	4a2c      	ldr	r2, [pc, #176]	; (800a338 <HttpDaemon::Run()+0x140>)
 800a286:	9302      	str	r3, [sp, #8]
 800a288:	4b2c      	ldr	r3, [pc, #176]	; (800a33c <HttpDaemon::Run()+0x144>)
 800a28a:	68e0      	ldr	r0, [r4, #12]
 800a28c:	e9cd 5300 	strd	r5, r3, [sp]
 800a290:	69a3      	ldr	r3, [r4, #24]
 800a292:	f007 f803 	bl	801129c <snprintf>
 800a296:	e9d4 2103 	ldrd	r2, r1, [r4, #12]
 800a29a:	b283      	uxth	r3, r0
 800a29c:	6830      	ldr	r0, [r6, #0]
 800a29e:	f004 fa9c 	bl	800e7da <Network::TcpWrite(int, unsigned char const*, unsigned short)>
 800a2a2:	463a      	mov	r2, r7
 800a2a4:	f8b4 35c2 	ldrh.w	r3, [r4, #1474]	; 0x5c2
 800a2a8:	6921      	ldr	r1, [r4, #16]
 800a2aa:	6830      	ldr	r0, [r6, #0]
 800a2ac:	f004 fa95 	bl	800e7da <Network::TcpWrite(int, unsigned char const*, unsigned short)>
 800a2b0:	f44f 7202 	mov.w	r2, #520	; 0x208
 800a2b4:	2302      	movs	r3, #2
 800a2b6:	e9c4 2306 	strd	r2, r3, [r4, #24]
 800a2ba:	e00c      	b.n	800a2d6 <HttpDaemon::Run()+0xde>
 800a2bc:	2b01      	cmp	r3, #1
 800a2be:	d1b9      	bne.n	800a234 <HttpDaemon::Run()+0x3c>
 800a2c0:	2100      	movs	r1, #0
 800a2c2:	4620      	mov	r0, r4
 800a2c4:	f7ff fee2 	bl	800a08c <HttpDaemon::HandlePost(bool)>
 800a2c8:	28c8      	cmp	r0, #200	; 0xc8
 800a2ca:	61a0      	str	r0, [r4, #24]
 800a2cc:	d1b2      	bne.n	800a234 <HttpDaemon::Run()+0x3c>
 800a2ce:	f8b4 35c4 	ldrh.w	r3, [r4, #1476]	; 0x5c4
 800a2d2:	2b00      	cmp	r3, #0
 800a2d4:	d1ae      	bne.n	800a234 <HttpDaemon::Run()+0x3c>
 800a2d6:	b005      	add	sp, #20
 800a2d8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a2da:	2bc8      	cmp	r3, #200	; 0xc8
 800a2dc:	d1aa      	bne.n	800a234 <HttpDaemon::Run()+0x3c>
 800a2de:	69e1      	ldr	r1, [r4, #28]
 800a2e0:	2901      	cmp	r1, #1
 800a2e2:	d1a7      	bne.n	800a234 <HttpDaemon::Run()+0x3c>
 800a2e4:	4620      	mov	r0, r4
 800a2e6:	f7ff fed1 	bl	800a08c <HttpDaemon::HandlePost(bool)>
 800a2ea:	e7a2      	b.n	800a232 <HttpDaemon::Run()+0x3a>
 800a2ec:	f240 12f5 	movw	r2, #501	; 0x1f5
 800a2f0:	4293      	cmp	r3, r2
 800a2f2:	d010      	beq.n	800a316 <HttpDaemon::Run()+0x11e>
 800a2f4:	f240 12f9 	movw	r2, #505	; 0x1f9
 800a2f8:	4293      	cmp	r3, r2
 800a2fa:	d00e      	beq.n	800a31a <HttpDaemon::Run()+0x122>
 800a2fc:	4d10      	ldr	r5, [pc, #64]	; (800a340 <HttpDaemon::Run()+0x148>)
 800a2fe:	4a0b      	ldr	r2, [pc, #44]	; (800a32c <HttpDaemon::Run()+0x134>)
 800a300:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800a304:	bf18      	it	ne
 800a306:	4615      	movne	r5, r2
 800a308:	e7aa      	b.n	800a260 <HttpDaemon::Run()+0x68>
 800a30a:	4d0e      	ldr	r5, [pc, #56]	; (800a344 <HttpDaemon::Run()+0x14c>)
 800a30c:	e7a8      	b.n	800a260 <HttpDaemon::Run()+0x68>
 800a30e:	4d0e      	ldr	r5, [pc, #56]	; (800a348 <HttpDaemon::Run()+0x150>)
 800a310:	e7a6      	b.n	800a260 <HttpDaemon::Run()+0x68>
 800a312:	4d0e      	ldr	r5, [pc, #56]	; (800a34c <HttpDaemon::Run()+0x154>)
 800a314:	e7a4      	b.n	800a260 <HttpDaemon::Run()+0x68>
 800a316:	4d0e      	ldr	r5, [pc, #56]	; (800a350 <HttpDaemon::Run()+0x158>)
 800a318:	e7a2      	b.n	800a260 <HttpDaemon::Run()+0x68>
 800a31a:	4d0e      	ldr	r5, [pc, #56]	; (800a354 <HttpDaemon::Run()+0x15c>)
 800a31c:	e7a0      	b.n	800a260 <HttpDaemon::Run()+0x68>
 800a31e:	4d0e      	ldr	r5, [pc, #56]	; (800a358 <HttpDaemon::Run()+0x160>)
 800a320:	e7aa      	b.n	800a278 <HttpDaemon::Run()+0x80>
 800a322:	bf00      	nop
 800a324:	2000cb28 	andcs	ip, r0, r8, lsr #22
 800a328:	08013ab2 	stmdaeq	r1, {r1, r4, r5, r7, r9, fp, ip, sp}
 800a32c:	08013abe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r7, r9, fp, ip, sp}
 800a330:	08013ba7 	stmdaeq	r1, {r0, r1, r2, r5, r7, r8, r9, fp, ip, sp}
 800a334:	08013ae5 	stmdaeq	r1, {r0, r2, r5, r6, r7, r9, fp, ip, sp}
 800a338:	08013b40 	stmdaeq	r1, {r6, r8, r9, fp, ip, sp}
 800a33c:	08013b98 	stmdaeq	r1, {r3, r4, r7, r8, r9, fp, ip, sp}
 800a340:	08013acc 	stmdaeq	r1, {r2, r3, r6, r7, r9, fp, ip, sp}
 800a344:	08013a70 	stmdaeq	r1, {r4, r5, r6, r9, fp, ip, sp}
 800a348:	08013a66 	stmdaeq	r1, {r1, r2, r5, r6, r9, fp, ip, sp}
 800a34c:	08013a4d 	stmdaeq	r1, {r0, r2, r3, r6, r9, fp, ip, sp}
 800a350:	08013a9b 	stmdaeq	r1, {r0, r1, r3, r4, r7, r9, fp, ip, sp}
 800a354:	08013a85 	stmdaeq	r1, {r0, r2, r7, r9, fp, ip, sp}
 800a358:	08013ae2 	stmdaeq	r1, {r1, r5, r6, r7, r9, fp, ip, sp}

0800a35c <remoteconfig::json_get_list(char*, unsigned short)>:
 800a35c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a360:	4b14      	ldr	r3, [pc, #80]	; (800a3b4 <remoteconfig::json_get_list(char*, unsigned short)+0x58>)
 800a362:	f8df 8054 	ldr.w	r8, [pc, #84]	; 800a3b8 <remoteconfig::json_get_list(char*, unsigned short)+0x5c>
 800a366:	681b      	ldr	r3, [r3, #0]
 800a368:	b088      	sub	sp, #32
 800a36a:	4605      	mov	r5, r0
 800a36c:	f8d8 0000 	ldr.w	r0, [r8]
 800a370:	691c      	ldr	r4, [r3, #16]
 800a372:	460e      	mov	r6, r1
 800a374:	f7fe ffd4 	bl	8009320 <RemoteConfig::GetStringNode() const>
 800a378:	4607      	mov	r7, r0
 800a37a:	f8d8 0000 	ldr.w	r0, [r8]
 800a37e:	f7fe ffdb 	bl	8009338 <RemoteConfig::GetStringOutput() const>
 800a382:	4b0e      	ldr	r3, [pc, #56]	; (800a3bc <remoteconfig::json_get_list(char*, unsigned short)+0x60>)
 800a384:	4631      	mov	r1, r6
 800a386:	7a1a      	ldrb	r2, [r3, #8]
 800a388:	3309      	adds	r3, #9
 800a38a:	9303      	str	r3, [sp, #12]
 800a38c:	0e23      	lsrs	r3, r4, #24
 800a38e:	9302      	str	r3, [sp, #8]
 800a390:	f3c4 4307 	ubfx	r3, r4, #16, #8
 800a394:	9301      	str	r3, [sp, #4]
 800a396:	f3c4 2307 	ubfx	r3, r4, #8, #8
 800a39a:	e9cd 0205 	strd	r0, r2, [sp, #20]
 800a39e:	9300      	str	r3, [sp, #0]
 800a3a0:	4628      	mov	r0, r5
 800a3a2:	4a07      	ldr	r2, [pc, #28]	; (800a3c0 <remoteconfig::json_get_list(char*, unsigned short)+0x64>)
 800a3a4:	9704      	str	r7, [sp, #16]
 800a3a6:	b2e3      	uxtb	r3, r4
 800a3a8:	f006 ff78 	bl	801129c <snprintf>
 800a3ac:	b280      	uxth	r0, r0
 800a3ae:	b008      	add	sp, #32
 800a3b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a3b4:	2000cb28 	andcs	ip, r0, r8, lsr #22
 800a3b8:	20000124 	andcs	r0, r0, r4, lsr #2
 800a3bc:	20000100 	andcs	r0, r0, r0, lsl #2
 800a3c0:	08013c81 	stmdaeq	r1, {r0, r7, sl, fp, ip, sp}

0800a3c4 <remoteconfig::json_get_version(char*, unsigned short)>:
 800a3c4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800a3c6:	2208      	movs	r2, #8
 800a3c8:	4b09      	ldr	r3, [pc, #36]	; (800a3f0 <remoteconfig::json_get_version(char*, unsigned short)+0x2c>)
 800a3ca:	9204      	str	r2, [sp, #16]
 800a3cc:	f1a3 020b 	sub.w	r2, r3, #11
 800a3d0:	9203      	str	r2, [sp, #12]
 800a3d2:	220b      	movs	r2, #11
 800a3d4:	9202      	str	r2, [sp, #8]
 800a3d6:	4a07      	ldr	r2, [pc, #28]	; (800a3f4 <remoteconfig::json_get_version(char*, unsigned short)+0x30>)
 800a3d8:	9305      	str	r3, [sp, #20]
 800a3da:	3b0e      	subs	r3, #14
 800a3dc:	9201      	str	r2, [sp, #4]
 800a3de:	9300      	str	r3, [sp, #0]
 800a3e0:	4a05      	ldr	r2, [pc, #20]	; (800a3f8 <remoteconfig::json_get_version(char*, unsigned short)+0x34>)
 800a3e2:	2303      	movs	r3, #3
 800a3e4:	f006 ff5a 	bl	801129c <snprintf>
 800a3e8:	b280      	uxth	r0, r0
 800a3ea:	b007      	add	sp, #28
 800a3ec:	f85d fb04 	ldr.w	pc, [sp], #4
 800a3f0:	2000d1fe 	strdcs	sp, [r0], -lr
 800a3f4:	08013b98 	stmdaeq	r1, {r3, r4, r7, r8, r9, fp, ip, sp}
 800a3f8:	08013ce0 	stmdaeq	r1, {r5, r6, r7, sl, fp, ip, sp}

0800a3fc <remoteconfig::json_get_uptime(char*, unsigned short)>:
 800a3fc:	b508      	push	{r3, lr}
 800a3fe:	4b05      	ldr	r3, [pc, #20]	; (800a414 <remoteconfig::json_get_uptime(char*, unsigned short)+0x18>)
 800a400:	681a      	ldr	r2, [r3, #0]
 800a402:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800a406:	fbb2 f3f3 	udiv	r3, r2, r3
 800a40a:	4a03      	ldr	r2, [pc, #12]	; (800a418 <remoteconfig::json_get_uptime(char*, unsigned short)+0x1c>)
 800a40c:	f006 ff46 	bl	801129c <snprintf>
 800a410:	b280      	uxth	r0, r0
 800a412:	bd08      	pop	{r3, pc}
 800a414:	2000d26c 	andcs	sp, r0, ip, ror #4
 800a418:	08013d26 	stmdaeq	r1, {r1, r2, r5, r8, sl, fp, ip, sp}

0800a41c <remoteconfig::json_get_display(char*, unsigned short)>:
 800a41c:	b508      	push	{r3, lr}
 800a41e:	4b05      	ldr	r3, [pc, #20]	; (800a434 <remoteconfig::json_get_display(char*, unsigned short)+0x18>)
 800a420:	4a05      	ldr	r2, [pc, #20]	; (800a438 <remoteconfig::json_get_display(char*, unsigned short)+0x1c>)
 800a422:	681b      	ldr	r3, [r3, #0]
 800a424:	7c1b      	ldrb	r3, [r3, #16]
 800a426:	f083 0301 	eor.w	r3, r3, #1
 800a42a:	f006 ff37 	bl	801129c <snprintf>
 800a42e:	b280      	uxth	r0, r0
 800a430:	bd08      	pop	{r3, pc}
 800a432:	bf00      	nop
 800a434:	2000d160 	andcs	sp, r0, r0, ror #2
 800a438:	08013d35 	stmdaeq	r1, {r0, r2, r4, r5, r8, sl, fp, ip, sp}

0800a43c <remoteconfig::json_get_directory(char*, unsigned short)>:
 800a43c:	b508      	push	{r3, lr}
 800a43e:	4a02      	ldr	r2, [pc, #8]	; (800a448 <remoteconfig::json_get_directory(char*, unsigned short)+0xc>)
 800a440:	f006 ff2c 	bl	801129c <snprintf>
 800a444:	b280      	uxth	r0, r0
 800a446:	bd08      	pop	{r3, pc}
 800a448:	08013d44 	stmdaeq	r1, {r2, r6, r8, sl, fp, ip, sp}

0800a44c <get_file_content(char const*, char*)>:
 800a44c:	2300      	movs	r3, #0
 800a44e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800a450:	4a18      	ldr	r2, [pc, #96]	; (800a4b4 <get_file_content(char const*, char*)+0x68>)
 800a452:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 800a456:	1e46      	subs	r6, r0, #1
 800a458:	1e6f      	subs	r7, r5, #1
 800a45a:	f816 cf01 	ldrb.w	ip, [r6, #1]!
 800a45e:	f817 4f01 	ldrb.w	r4, [r7, #1]!
 800a462:	4564      	cmp	r4, ip
 800a464:	d119      	bne.n	800a49a <get_file_content(char const*, char*)+0x4e>
 800a466:	2c00      	cmp	r4, #0
 800a468:	d1f7      	bne.n	800a45a <get_file_content(char const*, char*)+0xe>
 800a46a:	460c      	mov	r4, r1
 800a46c:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800a470:	685b      	ldr	r3, [r3, #4]
 800a472:	3b01      	subs	r3, #1
 800a474:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800a478:	f804 2b01 	strb.w	r2, [r4], #1
 800a47c:	2a00      	cmp	r2, #0
 800a47e:	d1f9      	bne.n	800a474 <get_file_content(char const*, char*)+0x28>
 800a480:	1a64      	subs	r4, r4, r1
 800a482:	3c01      	subs	r4, #1
 800a484:	232e      	movs	r3, #46	; 0x2e
 800a486:	e9cd 5400 	strd	r5, r4, [sp]
 800a48a:	4a0b      	ldr	r2, [pc, #44]	; (800a4b8 <get_file_content(char const*, char*)+0x6c>)
 800a48c:	490b      	ldr	r1, [pc, #44]	; (800a4bc <get_file_content(char const*, char*)+0x70>)
 800a48e:	480c      	ldr	r0, [pc, #48]	; (800a4c0 <get_file_content(char const*, char*)+0x74>)
 800a490:	f006 fedc 	bl	801124c <printf>
 800a494:	4620      	mov	r0, r4
 800a496:	b003      	add	sp, #12
 800a498:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a49a:	3301      	adds	r3, #1
 800a49c:	2b03      	cmp	r3, #3
 800a49e:	d1d8      	bne.n	800a452 <get_file_content(char const*, char*)+0x6>
 800a4a0:	2333      	movs	r3, #51	; 0x33
 800a4a2:	4a06      	ldr	r2, [pc, #24]	; (800a4bc <get_file_content(char const*, char*)+0x70>)
 800a4a4:	4904      	ldr	r1, [pc, #16]	; (800a4b8 <get_file_content(char const*, char*)+0x6c>)
 800a4a6:	4807      	ldr	r0, [pc, #28]	; (800a4c4 <get_file_content(char const*, char*)+0x78>)
 800a4a8:	f006 fed0 	bl	801124c <printf>
 800a4ac:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 800a4b0:	e7f0      	b.n	800a494 <get_file_content(char const*, char*)+0x48>
 800a4b2:	bf00      	nop
 800a4b4:	080140e0 	stmdaeq	r1, {r5, r6, r7, lr}
 800a4b8:	08013ddd 	stmdaeq	r1, {r0, r2, r3, r4, r6, r7, r8, sl, fp, ip, sp}
 800a4bc:	08013dfc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 800a4c0:	08013e0d 	stmdaeq	r1, {r0, r2, r3, r9, sl, fp, ip, sp}
 800a4c4:	08013e29 	stmdaeq	r1, {r0, r3, r5, r9, sl, fp, ip, sp}

0800a4c8 <e131::universe_to_multicast_ip(unsigned short)>:
 800a4c8:	b513      	push	{r0, r1, r4, lr}
 800a4ca:	4604      	mov	r4, r0
 800a4cc:	a901      	add	r1, sp, #4
 800a4ce:	4806      	ldr	r0, [pc, #24]	; (800a4e8 <e131::universe_to_multicast_ip(unsigned short)+0x20>)
 800a4d0:	f006 faba 	bl	8010a48 <inet_aton>
 800a4d4:	9801      	ldr	r0, [sp, #4]
 800a4d6:	ea40 6004 	orr.w	r0, r0, r4, lsl #24
 800a4da:	0224      	lsls	r4, r4, #8
 800a4dc:	f404 047f 	and.w	r4, r4, #16711680	; 0xff0000
 800a4e0:	4320      	orrs	r0, r4
 800a4e2:	b002      	add	sp, #8
 800a4e4:	bd10      	pop	{r4, pc}
 800a4e6:	bf00      	nop
 800a4e8:	08014622 	stmdaeq	r1, {r1, r5, r9, sl, lr}

0800a4ec <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]>:
 800a4ec:	f240 6304 	movw	r3, #1540	; 0x604
 800a4f0:	fb03 0101 	mla	r1, r3, r1, r0
 800a4f4:	2300      	movs	r3, #0
 800a4f6:	b510      	push	{r4, lr}
 800a4f8:	4293      	cmp	r3, r2
 800a4fa:	d00a      	beq.n	800a512 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]+0x26>
 800a4fc:	f811 4b01 	ldrb.w	r4, [r1], #1
 800a500:	3301      	adds	r3, #1
 800a502:	f891 01ff 	ldrb.w	r0, [r1, #511]	; 0x1ff
 800a506:	42a0      	cmp	r0, r4
 800a508:	bf38      	it	cc
 800a50a:	4620      	movcc	r0, r4
 800a50c:	f881 03ff 	strb.w	r0, [r1, #1023]	; 0x3ff
 800a510:	e7f2      	b.n	800a4f8 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]+0xc>
 800a512:	bd10      	pop	{r4, pc}

0800a514 <memset.constprop.0.isra.0>:
 800a514:	2300      	movs	r3, #0
 800a516:	4401      	add	r1, r0
 800a518:	4288      	cmp	r0, r1
 800a51a:	d002      	beq.n	800a522 <memset.constprop.0.isra.0+0xe>
 800a51c:	f800 3b01 	strb.w	r3, [r0], #1
 800a520:	e7fa      	b.n	800a518 <memset.constprop.0.isra.0+0x4>
 800a522:	4770      	bx	lr

0800a524 <memcpy.isra.0>:
 800a524:	3801      	subs	r0, #1
 800a526:	440a      	add	r2, r1
 800a528:	4291      	cmp	r1, r2
 800a52a:	d004      	beq.n	800a536 <memcpy.isra.0+0x12>
 800a52c:	f811 3b01 	ldrb.w	r3, [r1], #1
 800a530:	f800 3f01 	strb.w	r3, [r0, #1]!
 800a534:	e7f8      	b.n	800a528 <memcpy.isra.0+0x4>
 800a536:	4770      	bx	lr

0800a538 <lightset::Data::Get()>:
 800a538:	4b03      	ldr	r3, [pc, #12]	; (800a548 <lightset::Data::Get()+0x10>)
 800a53a:	4804      	ldr	r0, [pc, #16]	; (800a54c <lightset::Data::Get()+0x14>)
 800a53c:	681a      	ldr	r2, [r3, #0]
 800a53e:	07d2      	lsls	r2, r2, #31
 800a540:	bf5c      	itt	pl
 800a542:	2201      	movpl	r2, #1
 800a544:	601a      	strpl	r2, [r3, #0]
 800a546:	4770      	bx	lr
 800a548:	20000128 	andcs	r0, r0, r8, lsr #2
 800a54c:	2000012c 	andcs	r0, r0, ip, lsr #2

0800a550 <lightset::Data::SetSourceA(unsigned int, unsigned char const*, unsigned int)>:
 800a550:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a554:	4615      	mov	r5, r2
 800a556:	460f      	mov	r7, r1
 800a558:	4604      	mov	r4, r0
 800a55a:	f7ff ffed 	bl	800a538 <lightset::Data::Get()>
 800a55e:	4606      	mov	r6, r0
 800a560:	f240 6004 	movw	r0, #1540	; 0x604
 800a564:	4344      	muls	r4, r0
 800a566:	eb06 0804 	add.w	r8, r6, r4
 800a56a:	462a      	mov	r2, r5
 800a56c:	4639      	mov	r1, r7
 800a56e:	4640      	mov	r0, r8
 800a570:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800a574:	f7ff ffd6 	bl	800a524 <memcpy.isra.0>
 800a578:	462a      	mov	r2, r5
 800a57a:	4639      	mov	r1, r7
 800a57c:	f8c8 5600 	str.w	r5, [r8, #1536]	; 0x600
 800a580:	1930      	adds	r0, r6, r4
 800a582:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800a586:	f7ff bfcd 	b.w	800a524 <memcpy.isra.0>

0800a58a <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>:
 800a58a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a58e:	4680      	mov	r8, r0
 800a590:	f240 6404 	movw	r4, #1540	; 0x604
 800a594:	4615      	mov	r5, r2
 800a596:	460f      	mov	r7, r1
 800a598:	4699      	mov	r9, r3
 800a59a:	f7ff ffcd 	bl	800a538 <lightset::Data::Get()>
 800a59e:	fb04 f408 	mul.w	r4, r4, r8
 800a5a2:	eb00 0a04 	add.w	sl, r0, r4
 800a5a6:	4606      	mov	r6, r0
 800a5a8:	462a      	mov	r2, r5
 800a5aa:	4639      	mov	r1, r7
 800a5ac:	4650      	mov	r0, sl
 800a5ae:	f7ff ffb9 	bl	800a524 <memcpy.isra.0>
 800a5b2:	f8ca 5600 	str.w	r5, [sl, #1536]	; 0x600
 800a5b6:	f1b9 0f00 	cmp.w	r9, #0
 800a5ba:	d106      	bne.n	800a5ca <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)+0x40>
 800a5bc:	462a      	mov	r2, r5
 800a5be:	4641      	mov	r1, r8
 800a5c0:	4630      	mov	r0, r6
 800a5c2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a5c6:	f7ff bf91 	b.w	800a4ec <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]>
 800a5ca:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800a5ce:	462a      	mov	r2, r5
 800a5d0:	4639      	mov	r1, r7
 800a5d2:	1930      	adds	r0, r6, r4
 800a5d4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a5d8:	f7ff bfa4 	b.w	800a524 <memcpy.isra.0>

0800a5dc <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>:
 800a5dc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800a5e0:	4616      	mov	r6, r2
 800a5e2:	4699      	mov	r9, r3
 800a5e4:	4680      	mov	r8, r0
 800a5e6:	460f      	mov	r7, r1
 800a5e8:	f7ff ffa6 	bl	800a538 <lightset::Data::Get()>
 800a5ec:	f240 6404 	movw	r4, #1540	; 0x604
 800a5f0:	4605      	mov	r5, r0
 800a5f2:	fb04 f408 	mul.w	r4, r4, r8
 800a5f6:	f504 7000 	add.w	r0, r4, #512	; 0x200
 800a5fa:	4632      	mov	r2, r6
 800a5fc:	4639      	mov	r1, r7
 800a5fe:	4428      	add	r0, r5
 800a600:	f7ff ff90 	bl	800a524 <memcpy.isra.0>
 800a604:	192b      	adds	r3, r5, r4
 800a606:	f8c3 6600 	str.w	r6, [r3, #1536]	; 0x600
 800a60a:	f1b9 0f00 	cmp.w	r9, #0
 800a60e:	d106      	bne.n	800a61e <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)+0x42>
 800a610:	4632      	mov	r2, r6
 800a612:	4641      	mov	r1, r8
 800a614:	4628      	mov	r0, r5
 800a616:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800a61a:	f7ff bf67 	b.w	800a4ec <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]>
 800a61e:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800a622:	4632      	mov	r2, r6
 800a624:	4639      	mov	r1, r7
 800a626:	1928      	adds	r0, r5, r4
 800a628:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800a62c:	f7ff bf7a 	b.w	800a524 <memcpy.isra.0>

0800a630 <lightset::Data::IOutput(LightSet*, unsigned int) const>:
 800a630:	f240 6304 	movw	r3, #1540	; 0x604
 800a634:	b470      	push	{r4, r5, r6}
 800a636:	4605      	mov	r5, r0
 800a638:	4608      	mov	r0, r1
 800a63a:	4353      	muls	r3, r2
 800a63c:	4611      	mov	r1, r2
 800a63e:	f503 6480 	add.w	r4, r3, #1024	; 0x400
 800a642:	18ea      	adds	r2, r5, r3
 800a644:	6803      	ldr	r3, [r0, #0]
 800a646:	691e      	ldr	r6, [r3, #16]
 800a648:	f8d2 3600 	ldr.w	r3, [r2, #1536]	; 0x600
 800a64c:	46b4      	mov	ip, r6
 800a64e:	192a      	adds	r2, r5, r4
 800a650:	bc70      	pop	{r4, r5, r6}
 800a652:	4760      	bx	ip

0800a654 <E131Bridge::Start()>:
 800a654:	6943      	ldr	r3, [r0, #20]
 800a656:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800a658:	4604      	mov	r4, r0
 800a65a:	b35b      	cbz	r3, 800a6b4 <E131Bridge::Start()+0x60>
 800a65c:	6983      	ldr	r3, [r0, #24]
 800a65e:	b9cb      	cbnz	r3, 800a694 <E131Bridge::Start()+0x40>
 800a660:	a901      	add	r1, sp, #4
 800a662:	4818      	ldr	r0, [pc, #96]	; (800a6c4 <E131Bridge::Start()+0x70>)
 800a664:	f006 f9f0 	bl	8010a48 <inet_aton>
 800a668:	9b01      	ldr	r3, [sp, #4]
 800a66a:	f240 207e 	movw	r0, #638	; 0x27e
 800a66e:	f043 4356 	orr.w	r3, r3, #3590324224	; 0xd6000000
 800a672:	f443 037a 	orr.w	r3, r3, #16384000	; 0xfa0000
 800a676:	6223      	str	r3, [r4, #32]
 800a678:	f006 f9e2 	bl	8010a40 <operator new(unsigned int)>
 800a67c:	61a0      	str	r0, [r4, #24]
 800a67e:	4620      	mov	r0, r4
 800a680:	f000 fd8e 	bl	800b1a0 <E131Bridge::FillDataPacket()>
 800a684:	f44f 608f 	mov.w	r0, #1144	; 0x478
 800a688:	f006 f9da 	bl	8010a40 <operator new(unsigned int)>
 800a68c:	61e0      	str	r0, [r4, #28]
 800a68e:	4620      	mov	r0, r4
 800a690:	f000 fcdc 	bl	800b04c <E131Bridge::FillDiscoveryPacket()>
 800a694:	2500      	movs	r5, #0
 800a696:	270c      	movs	r7, #12
 800a698:	f204 7632 	addw	r6, r4, #1842	; 0x732
 800a69c:	fb07 f305 	mul.w	r3, r7, r5
 800a6a0:	5cf3      	ldrb	r3, [r6, r3]
 800a6a2:	b123      	cbz	r3, 800a6ae <E131Bridge::Start()+0x5a>
 800a6a4:	6960      	ldr	r0, [r4, #20]
 800a6a6:	4629      	mov	r1, r5
 800a6a8:	6803      	ldr	r3, [r0, #0]
 800a6aa:	689b      	ldr	r3, [r3, #8]
 800a6ac:	4798      	blx	r3
 800a6ae:	3501      	adds	r5, #1
 800a6b0:	2d08      	cmp	r5, #8
 800a6b2:	d1f3      	bne.n	800a69c <E131Bridge::Start()+0x48>
 800a6b4:	2102      	movs	r1, #2
 800a6b6:	4b04      	ldr	r3, [pc, #16]	; (800a6c8 <E131Bridge::Start()+0x74>)
 800a6b8:	6818      	ldr	r0, [r3, #0]
 800a6ba:	b003      	add	sp, #12
 800a6bc:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800a6c0:	f006 b8da 	b.w	8010878 <LedBlink::SetMode(ledblink::Mode)>
 800a6c4:	08014622 	stmdaeq	r1, {r1, r5, r9, sl, lr}
 800a6c8:	2000d24c 	andcs	sp, r0, ip, asr #4

0800a6cc <E131Bridge::Stop()>:
 800a6cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a6d0:	2500      	movs	r5, #0
 800a6d2:	2301      	movs	r3, #1
 800a6d4:	4604      	mov	r4, r0
 800a6d6:	f240 6804 	movw	r8, #1540	; 0x604
 800a6da:	462e      	mov	r6, r5
 800a6dc:	f880 34f4 	strb.w	r3, [r0, #1268]	; 0x4f4
 800a6e0:	f500 67aa 	add.w	r7, r0, #1360	; 0x550
 800a6e4:	6860      	ldr	r0, [r4, #4]
 800a6e6:	b118      	cbz	r0, 800a6f0 <E131Bridge::Stop()+0x24>
 800a6e8:	6803      	ldr	r3, [r0, #0]
 800a6ea:	4629      	mov	r1, r5
 800a6ec:	68db      	ldr	r3, [r3, #12]
 800a6ee:	4798      	blx	r3
 800a6f0:	f7ff ff22 	bl	800a538 <lightset::Data::Get()>
 800a6f4:	2344      	movs	r3, #68	; 0x44
 800a6f6:	fb08 0005 	mla	r0, r8, r5, r0
 800a6fa:	436b      	muls	r3, r5
 800a6fc:	3501      	adds	r5, #1
 800a6fe:	2d08      	cmp	r5, #8
 800a700:	f8c0 6600 	str.w	r6, [r0, #1536]	; 0x600
 800a704:	54fe      	strb	r6, [r7, r3]
 800a706:	d1ed      	bne.n	800a6e4 <E131Bridge::Stop()+0x18>
 800a708:	6963      	ldr	r3, [r4, #20]
 800a70a:	b17b      	cbz	r3, 800a72c <E131Bridge::Stop()+0x60>
 800a70c:	2500      	movs	r5, #0
 800a70e:	270c      	movs	r7, #12
 800a710:	f204 7632 	addw	r6, r4, #1842	; 0x732
 800a714:	fb07 f305 	mul.w	r3, r7, r5
 800a718:	5cf3      	ldrb	r3, [r6, r3]
 800a71a:	b123      	cbz	r3, 800a726 <E131Bridge::Stop()+0x5a>
 800a71c:	6960      	ldr	r0, [r4, #20]
 800a71e:	4629      	mov	r1, r5
 800a720:	6803      	ldr	r3, [r0, #0]
 800a722:	68db      	ldr	r3, [r3, #12]
 800a724:	4798      	blx	r3
 800a726:	3501      	adds	r5, #1
 800a728:	2d08      	cmp	r5, #8
 800a72a:	d1f3      	bne.n	800a714 <E131Bridge::Stop()+0x48>
 800a72c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800a730:	4b02      	ldr	r3, [pc, #8]	; (800a73c <E131Bridge::Stop()+0x70>)
 800a732:	2100      	movs	r1, #0
 800a734:	6818      	ldr	r0, [r3, #0]
 800a736:	f006 b89f 	b.w	8010878 <LedBlink::SetMode(ledblink::Mode)>
 800a73a:	bf00      	nop
 800a73c:	2000d24c 	andcs	sp, r0, ip, asr #4

0800a740 <E131Bridge::SetSourceName(char const*)>:
 800a740:	223f      	movs	r2, #63	; 0x3f
 800a742:	b510      	push	{r4, lr}
 800a744:	f100 0334 	add.w	r3, r0, #52	; 0x34
 800a748:	3901      	subs	r1, #1
 800a74a:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800a74e:	b92c      	cbnz	r4, 800a75c <E131Bridge::SetSourceName(char const*)+0x1c>
 800a750:	441a      	add	r2, r3
 800a752:	4293      	cmp	r3, r2
 800a754:	d006      	beq.n	800a764 <E131Bridge::SetSourceName(char const*)+0x24>
 800a756:	f803 4b01 	strb.w	r4, [r3], #1
 800a75a:	e7fa      	b.n	800a752 <E131Bridge::SetSourceName(char const*)+0x12>
 800a75c:	3a01      	subs	r2, #1
 800a75e:	f803 4b01 	strb.w	r4, [r3], #1
 800a762:	d1f2      	bne.n	800a74a <E131Bridge::SetSourceName(char const*)+0xa>
 800a764:	2300      	movs	r3, #0
 800a766:	f880 3073 	strb.w	r3, [r0, #115]	; 0x73
 800a76a:	bd10      	pop	{r4, pc}

0800a76c <E131Bridge::E131Bridge()>:
 800a76c:	2300      	movs	r3, #0
 800a76e:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800a772:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a774:	e9c0 2300 	strd	r2, r3, [r0]
 800a778:	2201      	movs	r2, #1
 800a77a:	4604      	mov	r4, r0
 800a77c:	2764      	movs	r7, #100	; 0x64
 800a77e:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800a782:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800a786:	e9c0 3307 	strd	r3, r3, [r0, #28]
 800a78a:	6743      	str	r3, [r0, #116]	; 0x74
 800a78c:	4b1e      	ldr	r3, [pc, #120]	; (800a808 <E131Bridge::E131Bridge()+0x9c>)
 800a78e:	7202      	strb	r2, [r0, #8]
 800a790:	b093      	sub	sp, #76	; 0x4c
 800a792:	6018      	str	r0, [r3, #0]
 800a794:	f500 65a2 	add.w	r5, r0, #1296	; 0x510
 800a798:	f500 62e6 	add.w	r2, r0, #1840	; 0x730
 800a79c:	f500 66f2 	add.w	r6, r0, #1936	; 0x790
 800a7a0:	4628      	mov	r0, r5
 800a7a2:	2144      	movs	r1, #68	; 0x44
 800a7a4:	f7ff feb6 	bl	800a514 <memset.constprop.0.isra.0>
 800a7a8:	4610      	mov	r0, r2
 800a7aa:	210c      	movs	r1, #12
 800a7ac:	f7ff feb2 	bl	800a514 <memset.constprop.0.isra.0>
 800a7b0:	320c      	adds	r2, #12
 800a7b2:	f802 7c03 	strb.w	r7, [r2, #-3]
 800a7b6:	42b2      	cmp	r2, r6
 800a7b8:	f105 0544 	add.w	r5, r5, #68	; 0x44
 800a7bc:	d1f0      	bne.n	800a7a0 <E131Bridge::E131Bridge()+0x34>
 800a7be:	f204 40f4 	addw	r0, r4, #1268	; 0x4f4
 800a7c2:	211c      	movs	r1, #28
 800a7c4:	f7ff fea6 	bl	800a514 <memset.constprop.0.isra.0>
 800a7c8:	2301      	movs	r3, #1
 800a7ca:	4d10      	ldr	r5, [pc, #64]	; (800a80c <E131Bridge::E131Bridge()+0xa0>)
 800a7cc:	f884 350c 	strb.w	r3, [r4, #1292]	; 0x50c
 800a7d0:	4a0f      	ldr	r2, [pc, #60]	; (800a810 <E131Bridge::E131Bridge()+0xa4>)
 800a7d2:	682b      	ldr	r3, [r5, #0]
 800a7d4:	2140      	movs	r1, #64	; 0x40
 800a7d6:	331c      	adds	r3, #28
 800a7d8:	9200      	str	r2, [sp, #0]
 800a7da:	a802      	add	r0, sp, #8
 800a7dc:	4a0d      	ldr	r2, [pc, #52]	; (800a814 <E131Bridge::E131Bridge()+0xa8>)
 800a7de:	f006 fd5d 	bl	801129c <snprintf>
 800a7e2:	4620      	mov	r0, r4
 800a7e4:	a902      	add	r1, sp, #8
 800a7e6:	f7ff ffab 	bl	800a740 <E131Bridge::SetSourceName(char const*)>
 800a7ea:	f44f 51ae 	mov.w	r1, #5568	; 0x15c0
 800a7ee:	6828      	ldr	r0, [r5, #0]
 800a7f0:	f003 fe18 	bl	800e424 <Network::Begin(unsigned short)>
 800a7f4:	4621      	mov	r1, r4
 800a7f6:	4b08      	ldr	r3, [pc, #32]	; (800a818 <E131Bridge::E131Bridge()+0xac>)
 800a7f8:	f841 0b24 	str.w	r0, [r1], #36
 800a7fc:	6818      	ldr	r0, [r3, #0]
 800a7fe:	f006 f8c1 	bl	8010984 <Hardware::GetUuid(unsigned char*)>
 800a802:	4620      	mov	r0, r4
 800a804:	b013      	add	sp, #76	; 0x4c
 800a806:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a808:	2000314c 	andcs	r3, r0, ip, asr #2
 800a80c:	2000cb28 	andcs	ip, r0, r8, lsr #22
 800a810:	08013b98 	stmdaeq	r1, {r3, r4, r7, r8, r9, fp, ip, sp}
 800a814:	0801462e 	stmdaeq	r1, {r1, r2, r3, r5, r9, sl, lr}
 800a818:	2000d250 	andcs	sp, r0, r0, asr r2

0800a81c <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>:
 800a81c:	b570      	push	{r4, r5, r6, lr}
 800a81e:	4604      	mov	r4, r0
 800a820:	2300      	movs	r3, #0
 800a822:	2544      	movs	r5, #68	; 0x44
 800a824:	4610      	mov	r0, r2
 800a826:	f504 62a2 	add.w	r2, r4, #1296	; 0x510
 800a82a:	4299      	cmp	r1, r3
 800a82c:	d004      	beq.n	800a838 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0x1c>
 800a82e:	fb05 f603 	mul.w	r6, r5, r3
 800a832:	5b96      	ldrh	r6, [r2, r6]
 800a834:	4286      	cmp	r6, r0
 800a836:	d00e      	beq.n	800a856 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0x3a>
 800a838:	3301      	adds	r3, #1
 800a83a:	2b08      	cmp	r3, #8
 800a83c:	d1f5      	bne.n	800a82a <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0xe>
 800a83e:	4b06      	ldr	r3, [pc, #24]	; (800a858 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0x3c>)
 800a840:	6824      	ldr	r4, [r4, #0]
 800a842:	681d      	ldr	r5, [r3, #0]
 800a844:	f7ff fe40 	bl	800a4c8 <e131::universe_to_multicast_ip(unsigned short)>
 800a848:	4621      	mov	r1, r4
 800a84a:	4602      	mov	r2, r0
 800a84c:	4628      	mov	r0, r5
 800a84e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a852:	f003 bdfb 	b.w	800e44c <Network::LeaveGroup(int, unsigned int)>
 800a856:	bd70      	pop	{r4, r5, r6, pc}
 800a858:	2000cb28 	andcs	ip, r0, r8, lsr #22

0800a85c <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)>:
 800a85c:	b570      	push	{r4, r5, r6, lr}
 800a85e:	4604      	mov	r4, r0
 800a860:	461d      	mov	r5, r3
 800a862:	b191      	cbz	r1, 800a88a <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x2e>
 800a864:	f8b0 2506 	ldrh.w	r2, [r0, #1286]	; 0x506
 800a868:	f200 5606 	addw	r6, r0, #1286	; 0x506
 800a86c:	b99a      	cbnz	r2, 800a896 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x3a>
 800a86e:	4b0e      	ldr	r3, [pc, #56]	; (800a8a8 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x4c>)
 800a870:	8035      	strh	r5, [r6, #0]
 800a872:	4628      	mov	r0, r5
 800a874:	6826      	ldr	r6, [r4, #0]
 800a876:	681c      	ldr	r4, [r3, #0]
 800a878:	f7ff fe26 	bl	800a4c8 <e131::universe_to_multicast_ip(unsigned short)>
 800a87c:	4631      	mov	r1, r6
 800a87e:	4602      	mov	r2, r0
 800a880:	4620      	mov	r0, r4
 800a882:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a886:	f003 bdde 	b.w	800e446 <Network::JoinGroup(int, unsigned int)>
 800a88a:	b15a      	cbz	r2, 800a8a4 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x48>
 800a88c:	f8b0 2508 	ldrh.w	r2, [r0, #1288]	; 0x508
 800a890:	f500 66a1 	add.w	r6, r0, #1288	; 0x508
 800a894:	e7ea      	b.n	800a86c <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x10>
 800a896:	42aa      	cmp	r2, r5
 800a898:	d004      	beq.n	800a8a4 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x48>
 800a89a:	2108      	movs	r1, #8
 800a89c:	4620      	mov	r0, r4
 800a89e:	f7ff ffbd 	bl	800a81c <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>
 800a8a2:	e7e4      	b.n	800a86e <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x12>
 800a8a4:	bd70      	pop	{r4, r5, r6, pc}
 800a8a6:	bf00      	nop
 800a8a8:	2000cb28 	andcs	ip, r0, r8, lsr #22

0800a8ac <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)>:
 800a8ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a8b0:	4604      	mov	r4, r0
 800a8b2:	460d      	mov	r5, r1
 800a8b4:	461e      	mov	r6, r3
 800a8b6:	bb02      	cbnz	r2, 800a8fa <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x4e>
 800a8b8:	2907      	cmp	r1, #7
 800a8ba:	d843      	bhi.n	800a944 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x98>
 800a8bc:	230c      	movs	r3, #12
 800a8be:	fb03 0301 	mla	r3, r3, r1, r0
 800a8c2:	f893 2732 	ldrb.w	r2, [r3, #1842]	; 0x732
 800a8c6:	b12a      	cbz	r2, 800a8d4 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x28>
 800a8c8:	f8b3 3730 	ldrh.w	r3, [r3, #1840]	; 0x730
 800a8cc:	42b3      	cmp	r3, r6
 800a8ce:	d109      	bne.n	800a8e4 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x38>
 800a8d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a8d4:	f890 250a 	ldrb.w	r2, [r0, #1290]	; 0x50a
 800a8d8:	3201      	adds	r2, #1
 800a8da:	f880 250a 	strb.w	r2, [r0, #1290]	; 0x50a
 800a8de:	2201      	movs	r2, #1
 800a8e0:	f883 2732 	strb.w	r2, [r3, #1842]	; 0x732
 800a8e4:	210c      	movs	r1, #12
 800a8e6:	fb01 4405 	mla	r4, r1, r5, r4
 800a8ea:	4630      	mov	r0, r6
 800a8ec:	f8a4 6730 	strh.w	r6, [r4, #1840]	; 0x730
 800a8f0:	f7ff fdea 	bl	800a4c8 <e131::universe_to_multicast_ip(unsigned short)>
 800a8f4:	f8c4 0734 	str.w	r0, [r4, #1844]	; 0x734
 800a8f8:	e7ea      	b.n	800a8d0 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 800a8fa:	2a02      	cmp	r2, #2
 800a8fc:	d122      	bne.n	800a944 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x98>
 800a8fe:	2907      	cmp	r1, #7
 800a900:	d8e6      	bhi.n	800a8d0 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 800a902:	2344      	movs	r3, #68	; 0x44
 800a904:	fb03 0301 	mla	r3, r3, r1, r0
 800a908:	f893 2512 	ldrb.w	r2, [r3, #1298]	; 0x512
 800a90c:	b152      	cbz	r2, 800a924 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x78>
 800a90e:	2200      	movs	r2, #0
 800a910:	f883 2512 	strb.w	r2, [r3, #1298]	; 0x512
 800a914:	f890 350b 	ldrb.w	r3, [r0, #1291]	; 0x50b
 800a918:	4632      	mov	r2, r6
 800a91a:	3b01      	subs	r3, #1
 800a91c:	f880 350b 	strb.w	r3, [r0, #1291]	; 0x50b
 800a920:	f7ff ff7c 	bl	800a81c <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>
 800a924:	210c      	movs	r1, #12
 800a926:	fb01 4505 	mla	r5, r1, r5, r4
 800a92a:	f895 3732 	ldrb.w	r3, [r5, #1842]	; 0x732
 800a92e:	2b00      	cmp	r3, #0
 800a930:	d0ce      	beq.n	800a8d0 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 800a932:	2300      	movs	r3, #0
 800a934:	f885 3732 	strb.w	r3, [r5, #1842]	; 0x732
 800a938:	f894 350a 	ldrb.w	r3, [r4, #1290]	; 0x50a
 800a93c:	3b01      	subs	r3, #1
 800a93e:	f884 350a 	strb.w	r3, [r4, #1290]	; 0x50a
 800a942:	e7c5      	b.n	800a8d0 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 800a944:	2344      	movs	r3, #68	; 0x44
 800a946:	fb03 4305 	mla	r3, r3, r5, r4
 800a94a:	f893 2512 	ldrb.w	r2, [r3, #1298]	; 0x512
 800a94e:	b1d2      	cbz	r2, 800a986 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0xda>
 800a950:	f8b3 3510 	ldrh.w	r3, [r3, #1296]	; 0x510
 800a954:	42b3      	cmp	r3, r6
 800a956:	d0bb      	beq.n	800a8d0 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 800a958:	4632      	mov	r2, r6
 800a95a:	4629      	mov	r1, r5
 800a95c:	4620      	mov	r0, r4
 800a95e:	f7ff ff5d 	bl	800a81c <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>
 800a962:	4b0d      	ldr	r3, [pc, #52]	; (800a998 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0xec>)
 800a964:	4630      	mov	r0, r6
 800a966:	681f      	ldr	r7, [r3, #0]
 800a968:	f8d4 8000 	ldr.w	r8, [r4]
 800a96c:	f7ff fdac 	bl	800a4c8 <e131::universe_to_multicast_ip(unsigned short)>
 800a970:	4641      	mov	r1, r8
 800a972:	4602      	mov	r2, r0
 800a974:	4638      	mov	r0, r7
 800a976:	f003 fd66 	bl	800e446 <Network::JoinGroup(int, unsigned int)>
 800a97a:	2144      	movs	r1, #68	; 0x44
 800a97c:	fb01 4405 	mla	r4, r1, r5, r4
 800a980:	f8a4 6510 	strh.w	r6, [r4, #1296]	; 0x510
 800a984:	e7a4      	b.n	800a8d0 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 800a986:	f894 250b 	ldrb.w	r2, [r4, #1291]	; 0x50b
 800a98a:	3201      	adds	r2, #1
 800a98c:	f884 250b 	strb.w	r2, [r4, #1291]	; 0x50b
 800a990:	2201      	movs	r2, #1
 800a992:	f883 2512 	strb.w	r2, [r3, #1298]	; 0x512
 800a996:	e7e4      	b.n	800a962 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0xb6>
 800a998:	2000cb28 	andcs	ip, r0, r8, lsr #22

0800a99c <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>:
 800a99c:	b953      	cbnz	r3, 800a9b4 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const+0x18>
 800a99e:	2907      	cmp	r1, #7
 800a9a0:	d811      	bhi.n	800a9c6 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const+0x2a>
 800a9a2:	230c      	movs	r3, #12
 800a9a4:	fb03 0001 	mla	r0, r3, r1, r0
 800a9a8:	f8b0 3730 	ldrh.w	r3, [r0, #1840]	; 0x730
 800a9ac:	f890 0732 	ldrb.w	r0, [r0, #1842]	; 0x732
 800a9b0:	8013      	strh	r3, [r2, #0]
 800a9b2:	4770      	bx	lr
 800a9b4:	2344      	movs	r3, #68	; 0x44
 800a9b6:	fb03 0001 	mla	r0, r3, r1, r0
 800a9ba:	f8b0 3510 	ldrh.w	r3, [r0, #1296]	; 0x510
 800a9be:	f890 0512 	ldrb.w	r0, [r0, #1298]	; 0x512
 800a9c2:	8013      	strh	r3, [r2, #0]
 800a9c4:	4770      	bx	lr
 800a9c6:	4618      	mov	r0, r3
 800a9c8:	4770      	bx	lr

0800a9ca <E131Bridge::UpdateMergeStatus(unsigned int)>:
 800a9ca:	f890 34f5 	ldrb.w	r3, [r0, #1269]	; 0x4f5
 800a9ce:	b923      	cbnz	r3, 800a9da <E131Bridge::UpdateMergeStatus(unsigned int)+0x10>
 800a9d0:	2301      	movs	r3, #1
 800a9d2:	f880 34f5 	strb.w	r3, [r0, #1269]	; 0x4f5
 800a9d6:	f880 34f8 	strb.w	r3, [r0, #1272]	; 0x4f8
 800a9da:	2344      	movs	r3, #68	; 0x44
 800a9dc:	fb03 0001 	mla	r0, r3, r1, r0
 800a9e0:	2301      	movs	r3, #1
 800a9e2:	f880 3551 	strb.w	r3, [r0, #1361]	; 0x551
 800a9e6:	4770      	bx	lr

0800a9e8 <E131Bridge::CheckMergeTimeouts(unsigned int)>:
 800a9e8:	4602      	mov	r2, r0
 800a9ea:	2044      	movs	r0, #68	; 0x44
 800a9ec:	4348      	muls	r0, r1
 800a9ee:	b570      	push	{r4, r5, r6, lr}
 800a9f0:	1815      	adds	r5, r2, r0
 800a9f2:	460c      	mov	r4, r1
 800a9f4:	68d3      	ldr	r3, [r2, #12]
 800a9f6:	f8d5 1514 	ldr.w	r1, [r5, #1300]	; 0x514
 800a9fa:	1a5b      	subs	r3, r3, r1
 800a9fc:	f242 7110 	movw	r1, #10000	; 0x2710
 800aa00:	428b      	cmp	r3, r1
 800aa02:	d90a      	bls.n	800aa1a <E131Bridge::CheckMergeTimeouts(unsigned int)+0x32>
 800aa04:	2600      	movs	r6, #0
 800aa06:	f200 501c 	addw	r0, r0, #1308	; 0x51c
 800aa0a:	2110      	movs	r1, #16
 800aa0c:	f8c5 6518 	str.w	r6, [r5, #1304]	; 0x518
 800aa10:	4410      	add	r0, r2
 800aa12:	f7ff fd7f 	bl	800a514 <memset.constprop.0.isra.0>
 800aa16:	f885 6551 	strb.w	r6, [r5, #1361]	; 0x551
 800aa1a:	2044      	movs	r0, #68	; 0x44
 800aa1c:	4344      	muls	r4, r0
 800aa1e:	1915      	adds	r5, r2, r4
 800aa20:	f8d5 1530 	ldr.w	r1, [r5, #1328]	; 0x530
 800aa24:	68d3      	ldr	r3, [r2, #12]
 800aa26:	1a5b      	subs	r3, r3, r1
 800aa28:	f242 7110 	movw	r1, #10000	; 0x2710
 800aa2c:	428b      	cmp	r3, r1
 800aa2e:	d90a      	bls.n	800aa46 <E131Bridge::CheckMergeTimeouts(unsigned int)+0x5e>
 800aa30:	2600      	movs	r6, #0
 800aa32:	f504 64a7 	add.w	r4, r4, #1336	; 0x538
 800aa36:	2110      	movs	r1, #16
 800aa38:	f8c5 6534 	str.w	r6, [r5, #1332]	; 0x534
 800aa3c:	1910      	adds	r0, r2, r4
 800aa3e:	f7ff fd69 	bl	800a514 <memset.constprop.0.isra.0>
 800aa42:	f885 6551 	strb.w	r6, [r5, #1361]	; 0x551
 800aa46:	4611      	mov	r1, r2
 800aa48:	2300      	movs	r3, #0
 800aa4a:	f502 7008 	add.w	r0, r2, #544	; 0x220
 800aa4e:	f891 4551 	ldrb.w	r4, [r1, #1361]	; 0x551
 800aa52:	3144      	adds	r1, #68	; 0x44
 800aa54:	4281      	cmp	r1, r0
 800aa56:	ea43 0304 	orr.w	r3, r3, r4
 800aa5a:	d1f8      	bne.n	800aa4e <E131Bridge::CheckMergeTimeouts(unsigned int)+0x66>
 800aa5c:	b923      	cbnz	r3, 800aa68 <E131Bridge::CheckMergeTimeouts(unsigned int)+0x80>
 800aa5e:	2101      	movs	r1, #1
 800aa60:	f882 34f5 	strb.w	r3, [r2, #1269]	; 0x4f5
 800aa64:	f882 14f8 	strb.w	r1, [r2, #1272]	; 0x4f8
 800aa68:	bd70      	pop	{r4, r5, r6, pc}

0800aa6a <E131Bridge::IsPriorityTimeOut(unsigned int) const>:
 800aa6a:	2244      	movs	r2, #68	; 0x44
 800aa6c:	fb02 0101 	mla	r1, r2, r1, r0
 800aa70:	68c3      	ldr	r3, [r0, #12]
 800aa72:	f8d1 0530 	ldr.w	r0, [r1, #1328]	; 0x530
 800aa76:	b510      	push	{r4, lr}
 800aa78:	1a1a      	subs	r2, r3, r0
 800aa7a:	f8d1 4514 	ldr.w	r4, [r1, #1300]	; 0x514
 800aa7e:	f8d1 0534 	ldr.w	r0, [r1, #1332]	; 0x534
 800aa82:	f8d1 1518 	ldr.w	r1, [r1, #1304]	; 0x518
 800aa86:	b171      	cbz	r1, 800aaa6 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x3c>
 800aa88:	1b1b      	subs	r3, r3, r4
 800aa8a:	b128      	cbz	r0, 800aa98 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x2e>
 800aa8c:	f242 700f 	movw	r0, #9999	; 0x270f
 800aa90:	4283      	cmp	r3, r0
 800aa92:	d90d      	bls.n	800aab0 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x46>
 800aa94:	4282      	cmp	r2, r0
 800aa96:	e002      	b.n	800aa9e <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x34>
 800aa98:	f242 7010 	movw	r0, #10000	; 0x2710
 800aa9c:	4283      	cmp	r3, r0
 800aa9e:	bf94      	ite	ls
 800aaa0:	2000      	movls	r0, #0
 800aaa2:	2001      	movhi	r0, #1
 800aaa4:	bd10      	pop	{r4, pc}
 800aaa6:	2800      	cmp	r0, #0
 800aaa8:	d0fc      	beq.n	800aaa4 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x3a>
 800aaaa:	f242 7010 	movw	r0, #10000	; 0x2710
 800aaae:	e7f1      	b.n	800aa94 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x2a>
 800aab0:	2000      	movs	r0, #0
 800aab2:	e7f7      	b.n	800aaa4 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x3a>

0800aab4 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const>:
 800aab4:	684a      	ldr	r2, [r1, #4]
 800aab6:	6f83      	ldr	r3, [r0, #120]	; 0x78
 800aab8:	b510      	push	{r4, lr}
 800aaba:	429a      	cmp	r2, r3
 800aabc:	d10b      	bne.n	800aad6 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x22>
 800aabe:	f100 0392 	add.w	r3, r0, #146	; 0x92
 800aac2:	3108      	adds	r1, #8
 800aac4:	30a2      	adds	r0, #162	; 0xa2
 800aac6:	4298      	cmp	r0, r3
 800aac8:	d007      	beq.n	800aada <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x26>
 800aaca:	f811 4b01 	ldrb.w	r4, [r1], #1
 800aace:	f813 2b01 	ldrb.w	r2, [r3], #1
 800aad2:	4294      	cmp	r4, r2
 800aad4:	d0f7      	beq.n	800aac6 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x12>
 800aad6:	2000      	movs	r0, #0
 800aad8:	bd10      	pop	{r4, pc}
 800aada:	2001      	movs	r0, #1
 800aadc:	e7fc      	b.n	800aad8 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x24>
	...

0800aae0 <E131Bridge::SetNetworkDataLossCondition(bool, bool)>:
 800aae0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800aae4:	2301      	movs	r3, #1
 800aae6:	4605      	mov	r5, r0
 800aae8:	4690      	mov	r8, r2
 800aaea:	460f      	mov	r7, r1
 800aaec:	f880 34f8 	strb.w	r3, [r0, #1272]	; 0x4f8
 800aaf0:	2900      	cmp	r1, #0
 800aaf2:	d03d      	beq.n	800ab70 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x90>
 800aaf4:	2a00      	cmp	r2, #0
 800aaf6:	d03b      	beq.n	800ab70 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x90>
 800aaf8:	2600      	movs	r6, #0
 800aafa:	f240 6804 	movw	r8, #1540	; 0x604
 800aafe:	4637      	mov	r7, r6
 800ab00:	f8c0 34f4 	str.w	r3, [r0, #1268]	; 0x4f4
 800ab04:	f880 350c 	strb.w	r3, [r0, #1292]	; 0x50c
 800ab08:	f200 541c 	addw	r4, r0, #1308	; 0x51c
 800ab0c:	f894 3036 	ldrb.w	r3, [r4, #54]	; 0x36
 800ab10:	b1e3      	cbz	r3, 800ab4c <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x6c>
 800ab12:	6868      	ldr	r0, [r5, #4]
 800ab14:	4631      	mov	r1, r6
 800ab16:	6803      	ldr	r3, [r0, #0]
 800ab18:	68db      	ldr	r3, [r3, #12]
 800ab1a:	4798      	blx	r3
 800ab1c:	2110      	movs	r1, #16
 800ab1e:	4620      	mov	r0, r4
 800ab20:	f844 7c04 	str.w	r7, [r4, #-4]
 800ab24:	f7ff fcf6 	bl	800a514 <memset.constprop.0.isra.0>
 800ab28:	2110      	movs	r1, #16
 800ab2a:	f104 001c 	add.w	r0, r4, #28
 800ab2e:	61a7      	str	r7, [r4, #24]
 800ab30:	f7ff fcf0 	bl	800a514 <memset.constprop.0.isra.0>
 800ab34:	f7ff fd00 	bl	800a538 <lightset::Data::Get()>
 800ab38:	fb08 0006 	mla	r0, r8, r6, r0
 800ab3c:	f8c0 7600 	str.w	r7, [r0, #1536]	; 0x600
 800ab40:	f884 7034 	strb.w	r7, [r4, #52]	; 0x34
 800ab44:	f884 7036 	strb.w	r7, [r4, #54]	; 0x36
 800ab48:	f884 7035 	strb.w	r7, [r4, #53]	; 0x35
 800ab4c:	3601      	adds	r6, #1
 800ab4e:	2e08      	cmp	r6, #8
 800ab50:	f104 0444 	add.w	r4, r4, #68	; 0x44
 800ab54:	d1da      	bne.n	800ab0c <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x2c>
 800ab56:	4b25      	ldr	r3, [pc, #148]	; (800abec <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x10c>)
 800ab58:	2102      	movs	r1, #2
 800ab5a:	6818      	ldr	r0, [r3, #0]
 800ab5c:	f005 fe8c 	bl	8010878 <LedBlink::SetMode(ledblink::Mode)>
 800ab60:	f895 350d 	ldrb.w	r3, [r5, #1293]	; 0x50d
 800ab64:	f023 0302 	bic.w	r3, r3, #2
 800ab68:	f885 350d 	strb.w	r3, [r5, #1293]	; 0x50d
 800ab6c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ab70:	2600      	movs	r6, #0
 800ab72:	f240 6b04 	movw	fp, #1540	; 0x604
 800ab76:	46b1      	mov	r9, r6
 800ab78:	f505 64a7 	add.w	r4, r5, #1336	; 0x538
 800ab7c:	7ea3      	ldrb	r3, [r4, #26]
 800ab7e:	b373      	cbz	r3, 800abde <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xfe>
 800ab80:	b15f      	cbz	r7, 800ab9a <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xba>
 800ab82:	f854 3c20 	ldr.w	r3, [r4, #-32]
 800ab86:	b143      	cbz	r3, 800ab9a <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xba>
 800ab88:	2110      	movs	r1, #16
 800ab8a:	f844 9c20 	str.w	r9, [r4, #-32]
 800ab8e:	f1a4 001c 	sub.w	r0, r4, #28
 800ab92:	f7ff fcbf 	bl	800a514 <memset.constprop.0.isra.0>
 800ab96:	f884 9019 	strb.w	r9, [r4, #25]
 800ab9a:	f1b8 0f00 	cmp.w	r8, #0
 800ab9e:	d00a      	beq.n	800abb6 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xd6>
 800aba0:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800aba4:	b13b      	cbz	r3, 800abb6 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xd6>
 800aba6:	2110      	movs	r1, #16
 800aba8:	4620      	mov	r0, r4
 800abaa:	f844 9c04 	str.w	r9, [r4, #-4]
 800abae:	f7ff fcb1 	bl	800a514 <memset.constprop.0.isra.0>
 800abb2:	f884 9019 	strb.w	r9, [r4, #25]
 800abb6:	f895 a4f5 	ldrb.w	sl, [r5, #1269]	; 0x4f5
 800abba:	f1ba 0f00 	cmp.w	sl, #0
 800abbe:	d10e      	bne.n	800abde <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xfe>
 800abc0:	6868      	ldr	r0, [r5, #4]
 800abc2:	4631      	mov	r1, r6
 800abc4:	6803      	ldr	r3, [r0, #0]
 800abc6:	68db      	ldr	r3, [r3, #12]
 800abc8:	4798      	blx	r3
 800abca:	f7ff fcb5 	bl	800a538 <lightset::Data::Get()>
 800abce:	fb0b 0006 	mla	r0, fp, r6, r0
 800abd2:	f8c0 a600 	str.w	sl, [r0, #1536]	; 0x600
 800abd6:	f884 a018 	strb.w	sl, [r4, #24]
 800abda:	f884 a01a 	strb.w	sl, [r4, #26]
 800abde:	3601      	adds	r6, #1
 800abe0:	2e08      	cmp	r6, #8
 800abe2:	f104 0444 	add.w	r4, r4, #68	; 0x44
 800abe6:	d1c9      	bne.n	800ab7c <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x9c>
 800abe8:	e7b5      	b.n	800ab56 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x76>
 800abea:	bf00      	nop
 800abec:	2000d24c 	andcs	sp, r0, ip, asr #4

0800abf0 <E131Bridge::HandleDmx()>:
 800abf0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800abf4:	4604      	mov	r4, r0
 800abf6:	2600      	movs	r6, #0
 800abf8:	f8b0 70f7 	ldrh.w	r7, [r0, #247]	; 0xf7
 800abfc:	f100 09fa 	add.w	r9, r0, #250	; 0xfa
 800ac00:	ba7f      	rev16	r7, r7
 800ac02:	b2bf      	uxth	r7, r7
 800ac04:	3f01      	subs	r7, #1
 800ac06:	f200 551c 	addw	r5, r0, #1308	; 0x51c
 800ac0a:	f815 3c0a 	ldrb.w	r3, [r5, #-10]
 800ac0e:	b353      	cbz	r3, 800ac66 <E131Bridge::HandleDmx()+0x76>
 800ac10:	f835 3c0c 	ldrh.w	r3, [r5, #-12]
 800ac14:	f8b4 20ed 	ldrh.w	r2, [r4, #237]	; 0xed
 800ac18:	ba5b      	rev16	r3, r3
 800ac1a:	b29b      	uxth	r3, r3
 800ac1c:	429a      	cmp	r2, r3
 800ac1e:	d122      	bne.n	800ac66 <E131Bridge::HandleDmx()+0x76>
 800ac20:	f855 3c04 	ldr.w	r3, [r5, #-4]
 800ac24:	f1a5 0108 	sub.w	r1, r5, #8
 800ac28:	4620      	mov	r0, r4
 800ac2a:	9300      	str	r3, [sp, #0]
 800ac2c:	f7ff ff42 	bl	800aab4 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const>
 800ac30:	f105 0114 	add.w	r1, r5, #20
 800ac34:	4682      	mov	sl, r0
 800ac36:	4620      	mov	r0, r4
 800ac38:	f7ff ff3c 	bl	800aab4 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const>
 800ac3c:	f8d5 b018 	ldr.w	fp, [r5, #24]
 800ac40:	4680      	mov	r8, r0
 800ac42:	f1ba 0f00 	cmp.w	sl, #0
 800ac46:	d016      	beq.n	800ac76 <E131Bridge::HandleDmx()+0x86>
 800ac48:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800ac4c:	7c2a      	ldrb	r2, [r5, #16]
 800ac4e:	742b      	strb	r3, [r5, #16]
 800ac50:	3313      	adds	r3, #19
 800ac52:	1a9b      	subs	r3, r3, r2
 800ac54:	b2db      	uxtb	r3, r3
 800ac56:	2b13      	cmp	r3, #19
 800ac58:	d905      	bls.n	800ac66 <E131Bridge::HandleDmx()+0x76>
 800ac5a:	f994 20ec 	ldrsb.w	r2, [r4, #236]	; 0xec
 800ac5e:	f894 30ec 	ldrb.w	r3, [r4, #236]	; 0xec
 800ac62:	2a00      	cmp	r2, #0
 800ac64:	da10      	bge.n	800ac88 <E131Bridge::HandleDmx()+0x98>
 800ac66:	3601      	adds	r6, #1
 800ac68:	2e08      	cmp	r6, #8
 800ac6a:	f105 0544 	add.w	r5, r5, #68	; 0x44
 800ac6e:	d1cc      	bne.n	800ac0a <E131Bridge::HandleDmx()+0x1a>
 800ac70:	b003      	add	sp, #12
 800ac72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ac76:	2800      	cmp	r0, #0
 800ac78:	d0ef      	beq.n	800ac5a <E131Bridge::HandleDmx()+0x6a>
 800ac7a:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800ac7e:	f895 202c 	ldrb.w	r2, [r5, #44]	; 0x2c
 800ac82:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
 800ac86:	e7e3      	b.n	800ac50 <E131Bridge::HandleDmx()+0x60>
 800ac88:	065a      	lsls	r2, r3, #25
 800ac8a:	d50b      	bpl.n	800aca4 <E131Bridge::HandleDmx()+0xb4>
 800ac8c:	f1ba 0f00 	cmp.w	sl, #0
 800ac90:	d102      	bne.n	800ac98 <E131Bridge::HandleDmx()+0xa8>
 800ac92:	f1b8 0f00 	cmp.w	r8, #0
 800ac96:	d0e6      	beq.n	800ac66 <E131Bridge::HandleDmx()+0x76>
 800ac98:	4642      	mov	r2, r8
 800ac9a:	4651      	mov	r1, sl
 800ac9c:	4620      	mov	r0, r4
 800ac9e:	f7ff ff1f 	bl	800aae0 <E131Bridge::SetNetworkDataLossCondition(bool, bool)>
 800aca2:	e7e0      	b.n	800ac66 <E131Bridge::HandleDmx()+0x76>
 800aca4:	f894 34f5 	ldrb.w	r3, [r4, #1269]	; 0x4f5
 800aca8:	b133      	cbz	r3, 800acb8 <E131Bridge::HandleDmx()+0xc8>
 800acaa:	f894 34fa 	ldrb.w	r3, [r4, #1274]	; 0x4fa
 800acae:	b91b      	cbnz	r3, 800acb8 <E131Bridge::HandleDmx()+0xc8>
 800acb0:	4631      	mov	r1, r6
 800acb2:	4620      	mov	r0, r4
 800acb4:	f7ff fe98 	bl	800a9e8 <E131Bridge::CheckMergeTimeouts(unsigned int)>
 800acb8:	f894 30e8 	ldrb.w	r3, [r4, #232]	; 0xe8
 800acbc:	f894 250c 	ldrb.w	r2, [r4, #1292]	; 0x50c
 800acc0:	4293      	cmp	r3, r2
 800acc2:	d259      	bcs.n	800ad78 <E131Bridge::HandleDmx()+0x188>
 800acc4:	4631      	mov	r1, r6
 800acc6:	4620      	mov	r0, r4
 800acc8:	9301      	str	r3, [sp, #4]
 800acca:	f7ff fece 	bl	800aa6a <E131Bridge::IsPriorityTimeOut(unsigned int) const>
 800acce:	2800      	cmp	r0, #0
 800acd0:	d0c9      	beq.n	800ac66 <E131Bridge::HandleDmx()+0x76>
 800acd2:	9b01      	ldr	r3, [sp, #4]
 800acd4:	f884 350c 	strb.w	r3, [r4, #1292]	; 0x50c
 800acd8:	9b00      	ldr	r3, [sp, #0]
 800acda:	2b00      	cmp	r3, #0
 800acdc:	d154      	bne.n	800ad88 <E131Bridge::HandleDmx()+0x198>
 800acde:	f1bb 0f00 	cmp.w	fp, #0
 800ace2:	d15c      	bne.n	800ad9e <E131Bridge::HandleDmx()+0x1ae>
 800ace4:	6fa3      	ldr	r3, [r4, #120]	; 0x78
 800ace6:	2210      	movs	r2, #16
 800ace8:	f845 3c04 	str.w	r3, [r5, #-4]
 800acec:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800acf0:	4628      	mov	r0, r5
 800acf2:	742b      	strb	r3, [r5, #16]
 800acf4:	f104 0192 	add.w	r1, r4, #146	; 0x92
 800acf8:	f7ff fc14 	bl	800a524 <memcpy.isra.0>
 800acfc:	68e3      	ldr	r3, [r4, #12]
 800acfe:	463a      	mov	r2, r7
 800ad00:	4649      	mov	r1, r9
 800ad02:	4630      	mov	r0, r6
 800ad04:	f845 3c08 	str.w	r3, [r5, #-8]
 800ad08:	f7ff fc22 	bl	800a550 <lightset::Data::SetSourceA(unsigned int, unsigned char const*, unsigned int)>
 800ad0c:	f894 30ec 	ldrb.w	r3, [r4, #236]	; 0xec
 800ad10:	069b      	lsls	r3, r3, #26
 800ad12:	f100 80ad 	bmi.w	800ae70 <E131Bridge::HandleDmx()+0x280>
 800ad16:	f8b4 30e9 	ldrh.w	r3, [r4, #233]	; 0xe9
 800ad1a:	b29a      	uxth	r2, r3
 800ad1c:	2a00      	cmp	r2, #0
 800ad1e:	f000 80ab 	beq.w	800ae78 <E131Bridge::HandleDmx()+0x288>
 800ad22:	f894 24f7 	ldrb.w	r2, [r4, #1271]	; 0x4f7
 800ad26:	2a00      	cmp	r2, #0
 800ad28:	f040 80a6 	bne.w	800ae78 <E131Bridge::HandleDmx()+0x288>
 800ad2c:	ba5b      	rev16	r3, r3
 800ad2e:	b29b      	uxth	r3, r3
 800ad30:	f1ba 0f00 	cmp.w	sl, #0
 800ad34:	f040 8099 	bne.w	800ae6a <E131Bridge::HandleDmx()+0x27a>
 800ad38:	f1b8 0f00 	cmp.w	r8, #0
 800ad3c:	f040 8095 	bne.w	800ae6a <E131Bridge::HandleDmx()+0x27a>
 800ad40:	69aa      	ldr	r2, [r5, #24]
 800ad42:	f855 1c04 	ldr.w	r1, [r5, #-4]
 800ad46:	3a00      	subs	r2, #0
 800ad48:	bf18      	it	ne
 800ad4a:	2201      	movne	r2, #1
 800ad4c:	3900      	subs	r1, #0
 800ad4e:	bf18      	it	ne
 800ad50:	2101      	movne	r1, #1
 800ad52:	4620      	mov	r0, r4
 800ad54:	f7ff fd82 	bl	800a85c <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)>
 800ad58:	f240 1301 	movw	r3, #257	; 0x101
 800ad5c:	f8a4 34f6 	strh.w	r3, [r4, #1270]	; 0x4f6
 800ad60:	f894 34fb 	ldrb.w	r3, [r4, #1275]	; 0x4fb
 800ad64:	2b00      	cmp	r3, #0
 800ad66:	f040 808c 	bne.w	800ae82 <E131Bridge::HandleDmx()+0x292>
 800ad6a:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800ad6e:	f043 0302 	orr.w	r3, r3, #2
 800ad72:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 800ad76:	e776      	b.n	800ac66 <E131Bridge::HandleDmx()+0x76>
 800ad78:	d9ae      	bls.n	800acd8 <E131Bridge::HandleDmx()+0xe8>
 800ad7a:	2200      	movs	r2, #0
 800ad7c:	f845 2c04 	str.w	r2, [r5, #-4]
 800ad80:	61aa      	str	r2, [r5, #24]
 800ad82:	f884 24f5 	strb.w	r2, [r4, #1269]	; 0x4f5
 800ad86:	e7a5      	b.n	800acd4 <E131Bridge::HandleDmx()+0xe4>
 800ad88:	f1ba 0f00 	cmp.w	sl, #0
 800ad8c:	f000 8092 	beq.w	800aeb4 <E131Bridge::HandleDmx()+0x2c4>
 800ad90:	f1bb 0f00 	cmp.w	fp, #0
 800ad94:	d15c      	bne.n	800ae50 <E131Bridge::HandleDmx()+0x260>
 800ad96:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800ad9a:	742b      	strb	r3, [r5, #16]
 800ad9c:	e7ae      	b.n	800acfc <E131Bridge::HandleDmx()+0x10c>
 800ad9e:	f1b8 0f00 	cmp.w	r8, #0
 800ada2:	d03b      	beq.n	800ae1c <E131Bridge::HandleDmx()+0x22c>
 800ada4:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800ada8:	f240 6b04 	movw	fp, #1540	; 0x604
 800adac:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
 800adb0:	68e3      	ldr	r3, [r4, #12]
 800adb2:	fb0b fb06 	mul.w	fp, fp, r6
 800adb6:	616b      	str	r3, [r5, #20]
 800adb8:	f7ff fbbe 	bl	800a538 <lightset::Data::Get()>
 800adbc:	4603      	mov	r3, r0
 800adbe:	f50b 7000 	add.w	r0, fp, #512	; 0x200
 800adc2:	463a      	mov	r2, r7
 800adc4:	4649      	mov	r1, r9
 800adc6:	4418      	add	r0, r3
 800adc8:	9300      	str	r3, [sp, #0]
 800adca:	f7ff fbab 	bl	800a524 <memcpy.isra.0>
 800adce:	9b00      	ldr	r3, [sp, #0]
 800add0:	f50b 6080 	add.w	r0, fp, #1024	; 0x400
 800add4:	eb03 020b 	add.w	r2, r3, fp
 800add8:	f8c2 7600 	str.w	r7, [r2, #1536]	; 0x600
 800addc:	4649      	mov	r1, r9
 800adde:	463a      	mov	r2, r7
 800ade0:	4418      	add	r0, r3
 800ade2:	f7ff fb9f 	bl	800a524 <memcpy.isra.0>
 800ade6:	e791      	b.n	800ad0c <E131Bridge::HandleDmx()+0x11c>
 800ade8:	6fa3      	ldr	r3, [r4, #120]	; 0x78
 800adea:	2210      	movs	r2, #16
 800adec:	61ab      	str	r3, [r5, #24]
 800adee:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800adf2:	f104 0192 	add.w	r1, r4, #146	; 0x92
 800adf6:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
 800adfa:	f105 001c 	add.w	r0, r5, #28
 800adfe:	f7ff fb91 	bl	800a524 <memcpy.isra.0>
 800ae02:	68e3      	ldr	r3, [r4, #12]
 800ae04:	4631      	mov	r1, r6
 800ae06:	4620      	mov	r0, r4
 800ae08:	616b      	str	r3, [r5, #20]
 800ae0a:	f7ff fdde 	bl	800a9ca <E131Bridge::UpdateMergeStatus(unsigned int)>
 800ae0e:	463a      	mov	r2, r7
 800ae10:	4649      	mov	r1, r9
 800ae12:	4630      	mov	r0, r6
 800ae14:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 800ae16:	f7ff fbe1 	bl	800a5dc <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>
 800ae1a:	e777      	b.n	800ad0c <E131Bridge::HandleDmx()+0x11c>
 800ae1c:	6fa3      	ldr	r3, [r4, #120]	; 0x78
 800ae1e:	2210      	movs	r2, #16
 800ae20:	f845 3c04 	str.w	r3, [r5, #-4]
 800ae24:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800ae28:	4628      	mov	r0, r5
 800ae2a:	742b      	strb	r3, [r5, #16]
 800ae2c:	f104 0192 	add.w	r1, r4, #146	; 0x92
 800ae30:	f7ff fb78 	bl	800a524 <memcpy.isra.0>
 800ae34:	68e3      	ldr	r3, [r4, #12]
 800ae36:	4631      	mov	r1, r6
 800ae38:	4620      	mov	r0, r4
 800ae3a:	f845 3c08 	str.w	r3, [r5, #-8]
 800ae3e:	f7ff fdc4 	bl	800a9ca <E131Bridge::UpdateMergeStatus(unsigned int)>
 800ae42:	463a      	mov	r2, r7
 800ae44:	4649      	mov	r1, r9
 800ae46:	4630      	mov	r0, r6
 800ae48:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 800ae4a:	f7ff fb9e 	bl	800a58a <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>
 800ae4e:	e75d      	b.n	800ad0c <E131Bridge::HandleDmx()+0x11c>
 800ae50:	f1b8 0f00 	cmp.w	r8, #0
 800ae54:	d103      	bne.n	800ae5e <E131Bridge::HandleDmx()+0x26e>
 800ae56:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800ae5a:	742b      	strb	r3, [r5, #16]
 800ae5c:	e7ea      	b.n	800ae34 <E131Bridge::HandleDmx()+0x244>
 800ae5e:	481b      	ldr	r0, [pc, #108]	; (800aecc <E131Bridge::HandleDmx()+0x2dc>)
 800ae60:	b003      	add	sp, #12
 800ae62:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ae66:	f006 b9f1 	b.w	801124c <printf>
 800ae6a:	4642      	mov	r2, r8
 800ae6c:	4651      	mov	r1, sl
 800ae6e:	e770      	b.n	800ad52 <E131Bridge::HandleDmx()+0x162>
 800ae70:	f04f 0300 	mov.w	r3, #0
 800ae74:	f884 34f7 	strb.w	r3, [r4, #1271]	; 0x4f7
 800ae78:	f894 34f6 	ldrb.w	r3, [r4, #1270]	; 0x4f6
 800ae7c:	2b00      	cmp	r3, #0
 800ae7e:	f47f af6f 	bne.w	800ad60 <E131Bridge::HandleDmx()+0x170>
 800ae82:	f8d4 8004 	ldr.w	r8, [r4, #4]
 800ae86:	f7ff fb57 	bl	800a538 <lightset::Data::Get()>
 800ae8a:	4632      	mov	r2, r6
 800ae8c:	4641      	mov	r1, r8
 800ae8e:	f7ff fbcf 	bl	800a630 <lightset::Data::IOutput(LightSet*, unsigned int) const>
 800ae92:	f895 3036 	ldrb.w	r3, [r5, #54]	; 0x36
 800ae96:	2b00      	cmp	r3, #0
 800ae98:	f47f af67 	bne.w	800ad6a <E131Bridge::HandleDmx()+0x17a>
 800ae9c:	6860      	ldr	r0, [r4, #4]
 800ae9e:	4631      	mov	r1, r6
 800aea0:	6803      	ldr	r3, [r0, #0]
 800aea2:	689b      	ldr	r3, [r3, #8]
 800aea4:	4798      	blx	r3
 800aea6:	f04f 0301 	mov.w	r3, #1
 800aeaa:	f884 34f8 	strb.w	r3, [r4, #1272]	; 0x4f8
 800aeae:	f885 3036 	strb.w	r3, [r5, #54]	; 0x36
 800aeb2:	e75a      	b.n	800ad6a <E131Bridge::HandleDmx()+0x17a>
 800aeb4:	f1bb 0f00 	cmp.w	fp, #0
 800aeb8:	d096      	beq.n	800ade8 <E131Bridge::HandleDmx()+0x1f8>
 800aeba:	f1b8 0f00 	cmp.w	r8, #0
 800aebe:	d0ce      	beq.n	800ae5e <E131Bridge::HandleDmx()+0x26e>
 800aec0:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800aec4:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
 800aec8:	e79b      	b.n	800ae02 <E131Bridge::HandleDmx()+0x212>
 800aeca:	bf00      	nop
 800aecc:	08014637 	stmdaeq	r1, {r0, r1, r2, r4, r5, r9, sl, lr}

0800aed0 <E131Bridge::IsValidRoot()>:
 800aed0:	4a0d      	ldr	r2, [pc, #52]	; (800af08 <E131Bridge::IsValidRoot()+0x38>)
 800aed2:	b530      	push	{r4, r5, lr}
 800aed4:	f100 0380 	add.w	r3, r0, #128	; 0x80
 800aed8:	f100 058c 	add.w	r5, r0, #140	; 0x8c
 800aedc:	42ab      	cmp	r3, r5
 800aede:	d007      	beq.n	800aef0 <E131Bridge::IsValidRoot()+0x20>
 800aee0:	f813 4b01 	ldrb.w	r4, [r3], #1
 800aee4:	f812 1b01 	ldrb.w	r1, [r2], #1
 800aee8:	428c      	cmp	r4, r1
 800aeea:	d0f7      	beq.n	800aedc <E131Bridge::IsValidRoot()+0xc>
 800aeec:	2000      	movs	r0, #0
 800aeee:	e008      	b.n	800af02 <E131Bridge::IsValidRoot()+0x32>
 800aef0:	f8d0 008e 	ldr.w	r0, [r0, #142]	; 0x8e
 800aef4:	f1b0 6f80 	cmp.w	r0, #67108864	; 0x4000000
 800aef8:	d004      	beq.n	800af04 <E131Bridge::IsValidRoot()+0x34>
 800aefa:	f100 4378 	add.w	r3, r0, #4160749568	; 0xf8000000
 800aefe:	4258      	negs	r0, r3
 800af00:	4158      	adcs	r0, r3
 800af02:	bd30      	pop	{r4, r5, pc}
 800af04:	2001      	movs	r0, #1
 800af06:	e7fc      	b.n	800af02 <E131Bridge::IsValidRoot()+0x32>
 800af08:	080147f7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, lr}

0800af0c <E131Bridge::IsValidDataPacket()>:
 800af0c:	f890 30f1 	ldrb.w	r3, [r0, #241]	; 0xf1
 800af10:	2b02      	cmp	r3, #2
 800af12:	d10d      	bne.n	800af30 <E131Bridge::IsValidDataPacket()+0x24>
 800af14:	f890 30f2 	ldrb.w	r3, [r0, #242]	; 0xf2
 800af18:	2ba1      	cmp	r3, #161	; 0xa1
 800af1a:	d109      	bne.n	800af30 <E131Bridge::IsValidDataPacket()+0x24>
 800af1c:	f8b0 30f3 	ldrh.w	r3, [r0, #243]	; 0xf3
 800af20:	b933      	cbnz	r3, 800af30 <E131Bridge::IsValidDataPacket()+0x24>
 800af22:	f8b0 00f5 	ldrh.w	r0, [r0, #245]	; 0xf5
 800af26:	f5a0 7380 	sub.w	r3, r0, #256	; 0x100
 800af2a:	4258      	negs	r0, r3
 800af2c:	4158      	adcs	r0, r3
 800af2e:	4770      	bx	lr
 800af30:	2000      	movs	r0, #0
 800af32:	4770      	bx	lr

0800af34 <E131Bridge::Run()>:
 800af34:	b530      	push	{r4, r5, lr}
 800af36:	4601      	mov	r1, r0
 800af38:	4604      	mov	r4, r0
 800af3a:	b085      	sub	sp, #20
 800af3c:	f10d 030e 	add.w	r3, sp, #14
 800af40:	f811 0b7c 	ldrb.w	r0, [r1], #124
 800af44:	f44f 628f 	mov.w	r2, #1144	; 0x478
 800af48:	9300      	str	r3, [sp, #0]
 800af4a:	f104 0378 	add.w	r3, r4, #120	; 0x78
 800af4e:	f002 fd3d 	bl	800d9cc <udp_recv>
 800af52:	4b3c      	ldr	r3, [pc, #240]	; (800b044 <E131Bridge::Run()+0x110>)
 800af54:	681d      	ldr	r5, [r3, #0]
 800af56:	60e5      	str	r5, [r4, #12]
 800af58:	2800      	cmp	r0, #0
 800af5a:	d13b      	bne.n	800afd4 <E131Bridge::Run()+0xa0>
 800af5c:	f894 350b 	ldrb.w	r3, [r4, #1291]	; 0x50b
 800af60:	b183      	cbz	r3, 800af84 <E131Bridge::Run()+0x50>
 800af62:	f894 34f9 	ldrb.w	r3, [r4, #1273]	; 0x4f9
 800af66:	bb73      	cbnz	r3, 800afc6 <E131Bridge::Run()+0x92>
 800af68:	6923      	ldr	r3, [r4, #16]
 800af6a:	1aed      	subs	r5, r5, r3
 800af6c:	f640 13c3 	movw	r3, #2499	; 0x9c3
 800af70:	429d      	cmp	r5, r3
 800af72:	d928      	bls.n	800afc6 <E131Bridge::Run()+0x92>
 800af74:	6863      	ldr	r3, [r4, #4]
 800af76:	b9eb      	cbnz	r3, 800afb4 <E131Bridge::Run()+0x80>
 800af78:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800af7c:	f023 0302 	bic.w	r3, r3, #2
 800af80:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 800af84:	6963      	ldr	r3, [r4, #20]
 800af86:	b12b      	cbz	r3, 800af94 <E131Bridge::Run()+0x60>
 800af88:	4620      	mov	r0, r4
 800af8a:	f000 f94f 	bl	800b22c <E131Bridge::HandleDmxIn()>
 800af8e:	4620      	mov	r0, r4
 800af90:	f000 f8ca 	bl	800b128 <E131Bridge::SendDiscoveryPacket()>
 800af94:	7a23      	ldrb	r3, [r4, #8]
 800af96:	b15b      	cbz	r3, 800afb0 <E131Bridge::Run()+0x7c>
 800af98:	4b2b      	ldr	r3, [pc, #172]	; (800b048 <E131Bridge::Run()+0x114>)
 800af9a:	6818      	ldr	r0, [r3, #0]
 800af9c:	6843      	ldr	r3, [r0, #4]
 800af9e:	2b04      	cmp	r3, #4
 800afa0:	d006      	beq.n	800afb0 <E131Bridge::Run()+0x7c>
 800afa2:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800afa6:	2b00      	cmp	r3, #0
 800afa8:	d049      	beq.n	800b03e <E131Bridge::Run()+0x10a>
 800afaa:	2103      	movs	r1, #3
 800afac:	f005 fc64 	bl	8010878 <LedBlink::SetMode(ledblink::Mode)>
 800afb0:	b005      	add	sp, #20
 800afb2:	bd30      	pop	{r4, r5, pc}
 800afb4:	f894 34f4 	ldrb.w	r3, [r4, #1268]	; 0x4f4
 800afb8:	2b00      	cmp	r3, #0
 800afba:	d1dd      	bne.n	800af78 <E131Bridge::Run()+0x44>
 800afbc:	2201      	movs	r2, #1
 800afbe:	4620      	mov	r0, r4
 800afc0:	4611      	mov	r1, r2
 800afc2:	f7ff fd8d 	bl	800aae0 <E131Bridge::SetNetworkDataLossCondition(bool, bool)>
 800afc6:	e9d4 3203 	ldrd	r3, r2, [r4, #12]
 800afca:	1a9b      	subs	r3, r3, r2
 800afcc:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800afd0:	d3d8      	bcc.n	800af84 <E131Bridge::Run()+0x50>
 800afd2:	e7d1      	b.n	800af78 <E131Bridge::Run()+0x44>
 800afd4:	4620      	mov	r0, r4
 800afd6:	f7ff ff7b 	bl	800aed0 <E131Bridge::IsValidRoot()>
 800afda:	2800      	cmp	r0, #0
 800afdc:	d0e8      	beq.n	800afb0 <E131Bridge::Run()+0x7c>
 800afde:	2300      	movs	r3, #0
 800afe0:	f884 34f4 	strb.w	r3, [r4, #1268]	; 0x4f4
 800afe4:	f894 34f6 	ldrb.w	r3, [r4, #1270]	; 0x4f6
 800afe8:	6125      	str	r5, [r4, #16]
 800afea:	b15b      	cbz	r3, 800b004 <E131Bridge::Run()+0xd0>
 800afec:	f894 34f7 	ldrb.w	r3, [r4, #1271]	; 0x4f7
 800aff0:	b943      	cbnz	r3, 800b004 <E131Bridge::Run()+0xd0>
 800aff2:	f8d4 24fc 	ldr.w	r2, [r4, #1276]	; 0x4fc
 800aff6:	1aad      	subs	r5, r5, r2
 800aff8:	f640 12c3 	movw	r2, #2499	; 0x9c3
 800affc:	4295      	cmp	r5, r2
 800affe:	bf88      	it	hi
 800b000:	f884 34f6 	strbhi.w	r3, [r4, #1270]	; 0x4f6
 800b004:	6863      	ldr	r3, [r4, #4]
 800b006:	2b00      	cmp	r3, #0
 800b008:	d0bc      	beq.n	800af84 <E131Bridge::Run()+0x50>
 800b00a:	f8d4 308e 	ldr.w	r3, [r4, #142]	; 0x8e
 800b00e:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 800b012:	ba1a      	rev	r2, r3
 800b014:	d108      	bne.n	800b028 <E131Bridge::Run()+0xf4>
 800b016:	4620      	mov	r0, r4
 800b018:	f7ff ff78 	bl	800af0c <E131Bridge::IsValidDataPacket()>
 800b01c:	2800      	cmp	r0, #0
 800b01e:	d0b1      	beq.n	800af84 <E131Bridge::Run()+0x50>
 800b020:	4620      	mov	r0, r4
 800b022:	f7ff fde5 	bl	800abf0 <E131Bridge::HandleDmx()>
 800b026:	e7ad      	b.n	800af84 <E131Bridge::Run()+0x50>
 800b028:	2a08      	cmp	r2, #8
 800b02a:	d1ab      	bne.n	800af84 <E131Bridge::Run()+0x50>
 800b02c:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800b030:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800b034:	d1a6      	bne.n	800af84 <E131Bridge::Run()+0x50>
 800b036:	4620      	mov	r0, r4
 800b038:	f000 f972 	bl	800b320 <E131Bridge::HandleSynchronization()>
 800b03c:	e7a2      	b.n	800af84 <E131Bridge::Run()+0x50>
 800b03e:	2102      	movs	r1, #2
 800b040:	e7b4      	b.n	800afac <E131Bridge::Run()+0x78>
 800b042:	bf00      	nop
 800b044:	2000d26c 	andcs	sp, r0, ip, ror #4
 800b048:	2000d24c 	andcs	sp, r0, ip, asr #4

0800b04c <E131Bridge::FillDiscoveryPacket()>:
 800b04c:	2200      	movs	r2, #0
 800b04e:	f890 350a 	ldrb.w	r3, [r0, #1290]	; 0x50a
 800b052:	b510      	push	{r4, lr}
 800b054:	333c      	adds	r3, #60	; 0x3c
 800b056:	005b      	lsls	r3, r3, #1
 800b058:	f8a0 3504 	strh.w	r3, [r0, #1284]	; 0x504
 800b05c:	69c3      	ldr	r3, [r0, #28]
 800b05e:	f503 618f 	add.w	r1, r3, #1144	; 0x478
 800b062:	428b      	cmp	r3, r1
 800b064:	d002      	beq.n	800b06c <E131Bridge::FillDiscoveryPacket()+0x20>
 800b066:	f803 2b01 	strb.w	r2, [r3], #1
 800b06a:	e7fa      	b.n	800b062 <E131Bridge::FillDiscoveryPacket()+0x16>
 800b06c:	69c3      	ldr	r3, [r0, #28]
 800b06e:	492d      	ldr	r1, [pc, #180]	; (800b124 <E131Bridge::FillDiscoveryPacket()+0xd8>)
 800b070:	701a      	strb	r2, [r3, #0]
 800b072:	2210      	movs	r2, #16
 800b074:	705a      	strb	r2, [r3, #1]
 800b076:	1d1a      	adds	r2, r3, #4
 800b078:	3310      	adds	r3, #16
 800b07a:	4293      	cmp	r3, r2
 800b07c:	d004      	beq.n	800b088 <E131Bridge::FillDiscoveryPacket()+0x3c>
 800b07e:	f811 4b01 	ldrb.w	r4, [r1], #1
 800b082:	f802 4b01 	strb.w	r4, [r2], #1
 800b086:	e7f8      	b.n	800b07a <E131Bridge::FillDiscoveryPacket()+0x2e>
 800b088:	f890 250a 	ldrb.w	r2, [r0, #1290]	; 0x50a
 800b08c:	69c3      	ldr	r3, [r0, #28]
 800b08e:	3234      	adds	r2, #52	; 0x34
 800b090:	0052      	lsls	r2, r2, #1
 800b092:	f442 42e0 	orr.w	r2, r2, #28672	; 0x7000
 800b096:	ba52      	rev16	r2, r2
 800b098:	821a      	strh	r2, [r3, #16]
 800b09a:	2200      	movs	r2, #0
 800b09c:	749a      	strb	r2, [r3, #18]
 800b09e:	74da      	strb	r2, [r3, #19]
 800b0a0:	751a      	strb	r2, [r3, #20]
 800b0a2:	2208      	movs	r2, #8
 800b0a4:	f100 0124 	add.w	r1, r0, #36	; 0x24
 800b0a8:	755a      	strb	r2, [r3, #21]
 800b0aa:	f100 0434 	add.w	r4, r0, #52	; 0x34
 800b0ae:	3316      	adds	r3, #22
 800b0b0:	42a1      	cmp	r1, r4
 800b0b2:	d004      	beq.n	800b0be <E131Bridge::FillDiscoveryPacket()+0x72>
 800b0b4:	f811 2b01 	ldrb.w	r2, [r1], #1
 800b0b8:	f803 2b01 	strb.w	r2, [r3], #1
 800b0bc:	e7f8      	b.n	800b0b0 <E131Bridge::FillDiscoveryPacket()+0x64>
 800b0be:	f890 250a 	ldrb.w	r2, [r0, #1290]	; 0x50a
 800b0c2:	69c3      	ldr	r3, [r0, #28]
 800b0c4:	3229      	adds	r2, #41	; 0x29
 800b0c6:	0052      	lsls	r2, r2, #1
 800b0c8:	f442 42e0 	orr.w	r2, r2, #28672	; 0x7000
 800b0cc:	ba52      	rev16	r2, r2
 800b0ce:	84da      	strh	r2, [r3, #38]	; 0x26
 800b0d0:	2200      	movs	r2, #0
 800b0d2:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 800b0d6:	f883 2029 	strb.w	r2, [r3, #41]	; 0x29
 800b0da:	f883 202a 	strb.w	r2, [r3, #42]	; 0x2a
 800b0de:	2202      	movs	r2, #2
 800b0e0:	332c      	adds	r3, #44	; 0x2c
 800b0e2:	f803 2c01 	strb.w	r2, [r3, #-1]
 800b0e6:	f100 0474 	add.w	r4, r0, #116	; 0x74
 800b0ea:	42a1      	cmp	r1, r4
 800b0ec:	d004      	beq.n	800b0f8 <E131Bridge::FillDiscoveryPacket()+0xac>
 800b0ee:	f811 2b01 	ldrb.w	r2, [r1], #1
 800b0f2:	f803 2b01 	strb.w	r2, [r3], #1
 800b0f6:	e7f8      	b.n	800b0ea <E131Bridge::FillDiscoveryPacket()+0x9e>
 800b0f8:	f890 350a 	ldrb.w	r3, [r0, #1290]	; 0x50a
 800b0fc:	69c2      	ldr	r2, [r0, #28]
 800b0fe:	3304      	adds	r3, #4
 800b100:	005b      	lsls	r3, r3, #1
 800b102:	f443 43e0 	orr.w	r3, r3, #28672	; 0x7000
 800b106:	ba5b      	rev16	r3, r3
 800b108:	f8a2 3070 	strh.w	r3, [r2, #112]	; 0x70
 800b10c:	2300      	movs	r3, #0
 800b10e:	f882 3072 	strb.w	r3, [r2, #114]	; 0x72
 800b112:	f882 3073 	strb.w	r3, [r2, #115]	; 0x73
 800b116:	f882 3074 	strb.w	r3, [r2, #116]	; 0x74
 800b11a:	2301      	movs	r3, #1
 800b11c:	f882 3075 	strb.w	r3, [r2, #117]	; 0x75
 800b120:	bd10      	pop	{r4, pc}
 800b122:	bf00      	nop
 800b124:	080147f7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, lr}

0800b128 <E131Bridge::SendDiscoveryPacket()>:
 800b128:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800b12a:	f242 710f 	movw	r1, #9999	; 0x270f
 800b12e:	68c2      	ldr	r2, [r0, #12]
 800b130:	f8d0 3500 	ldr.w	r3, [r0, #1280]	; 0x500
 800b134:	4604      	mov	r4, r0
 800b136:	1ad3      	subs	r3, r2, r3
 800b138:	428b      	cmp	r3, r1
 800b13a:	d924      	bls.n	800b186 <E131Bridge::SendDiscoveryPacket()+0x5e>
 800b13c:	f890 350a 	ldrb.w	r3, [r0, #1290]	; 0x50a
 800b140:	f8c0 2500 	str.w	r2, [r0, #1280]	; 0x500
 800b144:	b1ab      	cbz	r3, 800b172 <E131Bridge::SendDiscoveryPacket()+0x4a>
 800b146:	2500      	movs	r5, #0
 800b148:	462e      	mov	r6, r5
 800b14a:	2300      	movs	r3, #0
 800b14c:	4629      	mov	r1, r5
 800b14e:	4620      	mov	r0, r4
 800b150:	f10d 020e 	add.w	r2, sp, #14
 800b154:	f7ff fc22 	bl	800a99c <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 800b158:	b140      	cbz	r0, 800b16c <E131Bridge::SendDiscoveryPacket()+0x44>
 800b15a:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800b15e:	69e2      	ldr	r2, [r4, #28]
 800b160:	f106 013c 	add.w	r1, r6, #60	; 0x3c
 800b164:	ba5b      	rev16	r3, r3
 800b166:	f822 3011 	strh.w	r3, [r2, r1, lsl #1]
 800b16a:	3601      	adds	r6, #1
 800b16c:	3501      	adds	r5, #1
 800b16e:	2d08      	cmp	r5, #8
 800b170:	d1eb      	bne.n	800b14a <E131Bridge::SendDiscoveryPacket()+0x22>
 800b172:	f44f 53ae 	mov.w	r3, #5568	; 0x15c0
 800b176:	f8b4 2504 	ldrh.w	r2, [r4, #1284]	; 0x504
 800b17a:	9300      	str	r3, [sp, #0]
 800b17c:	69e1      	ldr	r1, [r4, #28]
 800b17e:	6a23      	ldr	r3, [r4, #32]
 800b180:	7820      	ldrb	r0, [r4, #0]
 800b182:	f002 fc7f 	bl	800da84 <udp_send>
 800b186:	b004      	add	sp, #16
 800b188:	bd70      	pop	{r4, r5, r6, pc}

0800b18a <memcpy.isra.0>:
 800b18a:	3801      	subs	r0, #1
 800b18c:	440a      	add	r2, r1
 800b18e:	4291      	cmp	r1, r2
 800b190:	d004      	beq.n	800b19c <memcpy.isra.0+0x12>
 800b192:	f811 3b01 	ldrb.w	r3, [r1], #1
 800b196:	f800 3f01 	strb.w	r3, [r0, #1]!
 800b19a:	e7f8      	b.n	800b18e <memcpy.isra.0+0x4>
 800b19c:	4770      	bx	lr
	...

0800b1a0 <E131Bridge::FillDataPacket()>:
 800b1a0:	b570      	push	{r4, r5, r6, lr}
 800b1a2:	2400      	movs	r4, #0
 800b1a4:	2610      	movs	r6, #16
 800b1a6:	4605      	mov	r5, r0
 800b1a8:	6980      	ldr	r0, [r0, #24]
 800b1aa:	220c      	movs	r2, #12
 800b1ac:	7046      	strb	r6, [r0, #1]
 800b1ae:	7004      	strb	r4, [r0, #0]
 800b1b0:	7084      	strb	r4, [r0, #2]
 800b1b2:	70c4      	strb	r4, [r0, #3]
 800b1b4:	491c      	ldr	r1, [pc, #112]	; (800b228 <E131Bridge::FillDataPacket()+0x88>)
 800b1b6:	3004      	adds	r0, #4
 800b1b8:	f7ff ffe7 	bl	800b18a <memcpy.isra.0>
 800b1bc:	2304      	movs	r3, #4
 800b1be:	4632      	mov	r2, r6
 800b1c0:	2602      	movs	r6, #2
 800b1c2:	69a8      	ldr	r0, [r5, #24]
 800b1c4:	f105 0124 	add.w	r1, r5, #36	; 0x24
 800b1c8:	7543      	strb	r3, [r0, #21]
 800b1ca:	7484      	strb	r4, [r0, #18]
 800b1cc:	74c4      	strb	r4, [r0, #19]
 800b1ce:	7504      	strb	r4, [r0, #20]
 800b1d0:	3016      	adds	r0, #22
 800b1d2:	f7ff ffda 	bl	800b18a <memcpy.isra.0>
 800b1d6:	69a8      	ldr	r0, [r5, #24]
 800b1d8:	2240      	movs	r2, #64	; 0x40
 800b1da:	f880 4028 	strb.w	r4, [r0, #40]	; 0x28
 800b1de:	f880 4029 	strb.w	r4, [r0, #41]	; 0x29
 800b1e2:	f880 402a 	strb.w	r4, [r0, #42]	; 0x2a
 800b1e6:	f880 602b 	strb.w	r6, [r0, #43]	; 0x2b
 800b1ea:	f105 0134 	add.w	r1, r5, #52	; 0x34
 800b1ee:	302c      	adds	r0, #44	; 0x2c
 800b1f0:	f7ff ffcb 	bl	800b18a <memcpy.isra.0>
 800b1f4:	22a1      	movs	r2, #161	; 0xa1
 800b1f6:	69ab      	ldr	r3, [r5, #24]
 800b1f8:	f883 4070 	strb.w	r4, [r3, #112]	; 0x70
 800b1fc:	f883 406d 	strb.w	r4, [r3, #109]	; 0x6d
 800b200:	f883 406e 	strb.w	r4, [r3, #110]	; 0x6e
 800b204:	69ab      	ldr	r3, [r5, #24]
 800b206:	f883 6075 	strb.w	r6, [r3, #117]	; 0x75
 800b20a:	69ab      	ldr	r3, [r5, #24]
 800b20c:	f883 2076 	strb.w	r2, [r3, #118]	; 0x76
 800b210:	2201      	movs	r2, #1
 800b212:	69ab      	ldr	r3, [r5, #24]
 800b214:	f883 4077 	strb.w	r4, [r3, #119]	; 0x77
 800b218:	f883 4078 	strb.w	r4, [r3, #120]	; 0x78
 800b21c:	f883 4079 	strb.w	r4, [r3, #121]	; 0x79
 800b220:	f883 207a 	strb.w	r2, [r3, #122]	; 0x7a
 800b224:	bd70      	pop	{r4, r5, r6, pc}
 800b226:	bf00      	nop
 800b228:	080147f7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, lr}

0800b22c <E131Bridge::HandleDmxIn()>:
 800b22c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800b230:	4604      	mov	r4, r0
 800b232:	4605      	mov	r5, r0
 800b234:	2600      	movs	r6, #0
 800b236:	4f39      	ldr	r7, [pc, #228]	; (800b31c <E131Bridge::HandleDmxIn()+0xf0>)
 800b238:	f895 3732 	ldrb.w	r3, [r5, #1842]	; 0x732
 800b23c:	2b00      	cmp	r3, #0
 800b23e:	d053      	beq.n	800b2e8 <E131Bridge::HandleDmxIn()+0xbc>
 800b240:	6960      	ldr	r0, [r4, #20]
 800b242:	4631      	mov	r1, r6
 800b244:	6803      	ldr	r3, [r0, #0]
 800b246:	aa02      	add	r2, sp, #8
 800b248:	f8d3 8010 	ldr.w	r8, [r3, #16]
 800b24c:	ab03      	add	r3, sp, #12
 800b24e:	47c0      	blx	r8
 800b250:	4601      	mov	r1, r0
 800b252:	2800      	cmp	r0, #0
 800b254:	d050      	beq.n	800b2f8 <E131Bridge::HandleDmxIn()+0xcc>
 800b256:	9b02      	ldr	r3, [sp, #8]
 800b258:	69a0      	ldr	r0, [r4, #24]
 800b25a:	b29b      	uxth	r3, r3
 800b25c:	f103 026d 	add.w	r2, r3, #109	; 0x6d
 800b260:	f442 42e0 	orr.w	r2, r2, #28672	; 0x7000
 800b264:	ba52      	rev16	r2, r2
 800b266:	8202      	strh	r2, [r0, #16]
 800b268:	f103 0257 	add.w	r2, r3, #87	; 0x57
 800b26c:	f442 42e0 	orr.w	r2, r2, #28672	; 0x7000
 800b270:	ba52      	rev16	r2, r2
 800b272:	84c2      	strh	r2, [r0, #38]	; 0x26
 800b274:	f895 2739 	ldrb.w	r2, [r5, #1849]	; 0x739
 800b278:	330a      	adds	r3, #10
 800b27a:	f880 206c 	strb.w	r2, [r0, #108]	; 0x6c
 800b27e:	f895 2738 	ldrb.w	r2, [r5, #1848]	; 0x738
 800b282:	f443 43e0 	orr.w	r3, r3, #28672	; 0x7000
 800b286:	1c50      	adds	r0, r2, #1
 800b288:	f885 0738 	strb.w	r0, [r5, #1848]	; 0x738
 800b28c:	69a0      	ldr	r0, [r4, #24]
 800b28e:	ba5b      	rev16	r3, r3
 800b290:	f880 206f 	strb.w	r2, [r0, #111]	; 0x6f
 800b294:	f8b5 2730 	ldrh.w	r2, [r5, #1840]	; 0x730
 800b298:	69a0      	ldr	r0, [r4, #24]
 800b29a:	ba52      	rev16	r2, r2
 800b29c:	f8a0 2071 	strh.w	r2, [r0, #113]	; 0x71
 800b2a0:	f8a0 3073 	strh.w	r3, [r0, #115]	; 0x73
 800b2a4:	9a02      	ldr	r2, [sp, #8]
 800b2a6:	307d      	adds	r0, #125	; 0x7d
 800b2a8:	f7ff ff6f 	bl	800b18a <memcpy.isra.0>
 800b2ac:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800b2b0:	69a1      	ldr	r1, [r4, #24]
 800b2b2:	ba53      	rev16	r3, r2
 800b2b4:	f8a1 307b 	strh.w	r3, [r1, #123]	; 0x7b
 800b2b8:	f44f 53ae 	mov.w	r3, #5568	; 0x15c0
 800b2bc:	327d      	adds	r2, #125	; 0x7d
 800b2be:	9300      	str	r3, [sp, #0]
 800b2c0:	f8d5 3734 	ldr.w	r3, [r5, #1844]	; 0x734
 800b2c4:	b292      	uxth	r2, r2
 800b2c6:	7820      	ldrb	r0, [r4, #0]
 800b2c8:	f002 fbdc 	bl	800da84 <udp_send>
 800b2cc:	2301      	movs	r3, #1
 800b2ce:	683a      	ldr	r2, [r7, #0]
 800b2d0:	40b3      	lsls	r3, r6
 800b2d2:	ea33 0102 	bics.w	r1, r3, r2
 800b2d6:	d007      	beq.n	800b2e8 <E131Bridge::HandleDmxIn()+0xbc>
 800b2d8:	4313      	orrs	r3, r2
 800b2da:	603b      	str	r3, [r7, #0]
 800b2dc:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800b2e0:	f043 0301 	orr.w	r3, r3, #1
 800b2e4:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 800b2e8:	3601      	adds	r6, #1
 800b2ea:	2e08      	cmp	r6, #8
 800b2ec:	f105 050c 	add.w	r5, r5, #12
 800b2f0:	d1a2      	bne.n	800b238 <E131Bridge::HandleDmxIn()+0xc>
 800b2f2:	b004      	add	sp, #16
 800b2f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b2f8:	9b03      	ldr	r3, [sp, #12]
 800b2fa:	2b00      	cmp	r3, #0
 800b2fc:	d1f4      	bne.n	800b2e8 <E131Bridge::HandleDmxIn()+0xbc>
 800b2fe:	2301      	movs	r3, #1
 800b300:	fa03 f206 	lsl.w	r2, r3, r6
 800b304:	683b      	ldr	r3, [r7, #0]
 800b306:	ea23 0302 	bic.w	r3, r3, r2
 800b30a:	603b      	str	r3, [r7, #0]
 800b30c:	2b00      	cmp	r3, #0
 800b30e:	d1eb      	bne.n	800b2e8 <E131Bridge::HandleDmxIn()+0xbc>
 800b310:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800b314:	f023 0301 	bic.w	r3, r3, #1
 800b318:	e7e4      	b.n	800b2e4 <E131Bridge::HandleDmxIn()+0xb8>
 800b31a:	bf00      	nop
 800b31c:	20003150 	andcs	r3, r0, r0, asr r1

0800b320 <E131Bridge::HandleSynchronization()>:
 800b320:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b324:	f8b0 30a9 	ldrh.w	r3, [r0, #169]	; 0xa9
 800b328:	f8b0 2506 	ldrh.w	r2, [r0, #1286]	; 0x506
 800b32c:	ba5b      	rev16	r3, r3
 800b32e:	b29b      	uxth	r3, r3
 800b330:	429a      	cmp	r2, r3
 800b332:	4604      	mov	r4, r0
 800b334:	d00a      	beq.n	800b34c <E131Bridge::HandleSynchronization()+0x2c>
 800b336:	f8b0 2508 	ldrh.w	r2, [r0, #1288]	; 0x508
 800b33a:	429a      	cmp	r2, r3
 800b33c:	d006      	beq.n	800b34c <E131Bridge::HandleSynchronization()+0x2c>
 800b33e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b342:	4b23      	ldr	r3, [pc, #140]	; (800b3d0 <E131Bridge::HandleSynchronization()+0xb0>)
 800b344:	2102      	movs	r1, #2
 800b346:	6818      	ldr	r0, [r3, #0]
 800b348:	f005 ba96 	b.w	8010878 <LedBlink::SetMode(ledblink::Mode)>
 800b34c:	2500      	movs	r5, #0
 800b34e:	4627      	mov	r7, r4
 800b350:	46a9      	mov	r9, r5
 800b352:	68e3      	ldr	r3, [r4, #12]
 800b354:	4e1f      	ldr	r6, [pc, #124]	; (800b3d4 <E131Bridge::HandleSynchronization()+0xb4>)
 800b356:	f8df 8080 	ldr.w	r8, [pc, #128]	; 800b3d8 <E131Bridge::HandleSynchronization()+0xb8>
 800b35a:	f8c4 34fc 	str.w	r3, [r4, #1276]	; 0x4fc
 800b35e:	f897 3512 	ldrb.w	r3, [r7, #1298]	; 0x512
 800b362:	b323      	cbz	r3, 800b3ae <E131Bridge::HandleSynchronization()+0x8e>
 800b364:	f8d8 3000 	ldr.w	r3, [r8]
 800b368:	6860      	ldr	r0, [r4, #4]
 800b36a:	07da      	lsls	r2, r3, #31
 800b36c:	bf5c      	itt	pl
 800b36e:	2301      	movpl	r3, #1
 800b370:	f8c8 3000 	strpl.w	r3, [r8]
 800b374:	6803      	ldr	r3, [r0, #0]
 800b376:	4629      	mov	r1, r5
 800b378:	f8d3 a010 	ldr.w	sl, [r3, #16]
 800b37c:	f506 6280 	add.w	r2, r6, #1024	; 0x400
 800b380:	f8d6 3600 	ldr.w	r3, [r6, #1536]	; 0x600
 800b384:	47d0      	blx	sl
 800b386:	f897 3552 	ldrb.w	r3, [r7, #1362]	; 0x552
 800b38a:	b93b      	cbnz	r3, 800b39c <E131Bridge::HandleSynchronization()+0x7c>
 800b38c:	6860      	ldr	r0, [r4, #4]
 800b38e:	4629      	mov	r1, r5
 800b390:	6803      	ldr	r3, [r0, #0]
 800b392:	689b      	ldr	r3, [r3, #8]
 800b394:	4798      	blx	r3
 800b396:	2301      	movs	r3, #1
 800b398:	f887 3552 	strb.w	r3, [r7, #1362]	; 0x552
 800b39c:	f8d8 3000 	ldr.w	r3, [r8]
 800b3a0:	f8c6 9600 	str.w	r9, [r6, #1536]	; 0x600
 800b3a4:	07db      	lsls	r3, r3, #31
 800b3a6:	bf5c      	itt	pl
 800b3a8:	2301      	movpl	r3, #1
 800b3aa:	f8c8 3000 	strpl.w	r3, [r8]
 800b3ae:	3501      	adds	r5, #1
 800b3b0:	2d08      	cmp	r5, #8
 800b3b2:	f107 0744 	add.w	r7, r7, #68	; 0x44
 800b3b6:	f206 6604 	addw	r6, r6, #1540	; 0x604
 800b3ba:	d1d0      	bne.n	800b35e <E131Bridge::HandleSynchronization()+0x3e>
 800b3bc:	6f60      	ldr	r0, [r4, #116]	; 0x74
 800b3be:	b120      	cbz	r0, 800b3ca <E131Bridge::HandleSynchronization()+0xaa>
 800b3c0:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b3c4:	6803      	ldr	r3, [r0, #0]
 800b3c6:	689b      	ldr	r3, [r3, #8]
 800b3c8:	4718      	bx	r3
 800b3ca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800b3ce:	bf00      	nop
 800b3d0:	2000d24c 	andcs	sp, r0, ip, asr #4
 800b3d4:	2000012c 	andcs	r0, r0, ip, lsr #2
 800b3d8:	20000128 	andcs	r0, r0, r8, lsr #2

0800b3dc <E131Bridge::Print()>:
 800b3dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b3e0:	2500      	movs	r5, #0
 800b3e2:	4604      	mov	r4, r0
 800b3e4:	b08c      	sub	sp, #48	; 0x30
 800b3e6:	a902      	add	r1, sp, #8
 800b3e8:	3024      	adds	r0, #36	; 0x24
 800b3ea:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800b3ee:	f000 fb9d 	bl	800bb2c <uuid_unparse>
 800b3f2:	482c      	ldr	r0, [pc, #176]	; (800b4a4 <E131Bridge::Print()+0xc8>)
 800b3f4:	f005 ff2a 	bl	801124c <printf>
 800b3f8:	4b2b      	ldr	r3, [pc, #172]	; (800b4a8 <E131Bridge::Print()+0xcc>)
 800b3fa:	482c      	ldr	r0, [pc, #176]	; (800b4ac <E131Bridge::Print()+0xd0>)
 800b3fc:	7819      	ldrb	r1, [r3, #0]
 800b3fe:	785a      	ldrb	r2, [r3, #1]
 800b400:	f005 ff24 	bl	801124c <printf>
 800b404:	482a      	ldr	r0, [pc, #168]	; (800b4b0 <E131Bridge::Print()+0xd4>)
 800b406:	a902      	add	r1, sp, #8
 800b408:	f005 ff20 	bl	801124c <printf>
 800b40c:	f894 350b 	ldrb.w	r3, [r4, #1291]	; 0x50b
 800b410:	b303      	cbz	r3, 800b454 <E131Bridge::Print()+0x78>
 800b412:	4828      	ldr	r0, [pc, #160]	; (800b4b4 <E131Bridge::Print()+0xd8>)
 800b414:	f005 ff1a 	bl	801124c <printf>
 800b418:	4e27      	ldr	r6, [pc, #156]	; (800b4b8 <E131Bridge::Print()+0xdc>)
 800b41a:	4f28      	ldr	r7, [pc, #160]	; (800b4bc <E131Bridge::Print()+0xe0>)
 800b41c:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 800b4c0 <E131Bridge::Print()+0xe4>
 800b420:	2301      	movs	r3, #1
 800b422:	4629      	mov	r1, r5
 800b424:	4620      	mov	r0, r4
 800b426:	f10d 0206 	add.w	r2, sp, #6
 800b42a:	f7ff fab7 	bl	800a99c <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 800b42e:	b170      	cbz	r0, 800b44e <E131Bridge::Print()+0x72>
 800b430:	2344      	movs	r3, #68	; 0x44
 800b432:	436b      	muls	r3, r5
 800b434:	f204 524c 	addw	r2, r4, #1356	; 0x54c
 800b438:	58d3      	ldr	r3, [r2, r3]
 800b43a:	4629      	mov	r1, r5
 800b43c:	2b00      	cmp	r3, #0
 800b43e:	bf0c      	ite	eq
 800b440:	4633      	moveq	r3, r6
 800b442:	463b      	movne	r3, r7
 800b444:	4640      	mov	r0, r8
 800b446:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800b44a:	f005 feff 	bl	801124c <printf>
 800b44e:	3501      	adds	r5, #1
 800b450:	2d08      	cmp	r5, #8
 800b452:	d1e5      	bne.n	800b420 <E131Bridge::Print()+0x44>
 800b454:	f894 350a 	ldrb.w	r3, [r4, #1290]	; 0x50a
 800b458:	b1d3      	cbz	r3, 800b490 <E131Bridge::Print()+0xb4>
 800b45a:	481a      	ldr	r0, [pc, #104]	; (800b4c4 <E131Bridge::Print()+0xe8>)
 800b45c:	f005 fef6 	bl	801124c <printf>
 800b460:	2500      	movs	r5, #0
 800b462:	4e19      	ldr	r6, [pc, #100]	; (800b4c8 <E131Bridge::Print()+0xec>)
 800b464:	2300      	movs	r3, #0
 800b466:	4629      	mov	r1, r5
 800b468:	4620      	mov	r0, r4
 800b46a:	f10d 0206 	add.w	r2, sp, #6
 800b46e:	f7ff fa95 	bl	800a99c <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 800b472:	b150      	cbz	r0, 800b48a <E131Bridge::Print()+0xae>
 800b474:	230c      	movs	r3, #12
 800b476:	436b      	muls	r3, r5
 800b478:	f204 7239 	addw	r2, r4, #1849	; 0x739
 800b47c:	5cd3      	ldrb	r3, [r2, r3]
 800b47e:	4629      	mov	r1, r5
 800b480:	4630      	mov	r0, r6
 800b482:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800b486:	f005 fee1 	bl	801124c <printf>
 800b48a:	3501      	adds	r5, #1
 800b48c:	2d08      	cmp	r5, #8
 800b48e:	d1e9      	bne.n	800b464 <E131Bridge::Print()+0x88>
 800b490:	f894 34fb 	ldrb.w	r3, [r4, #1275]	; 0x4fb
 800b494:	b113      	cbz	r3, 800b49c <E131Bridge::Print()+0xc0>
 800b496:	480d      	ldr	r0, [pc, #52]	; (800b4cc <E131Bridge::Print()+0xf0>)
 800b498:	f005 fed8 	bl	801124c <printf>
 800b49c:	b00c      	add	sp, #48	; 0x30
 800b49e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b4a2:	bf00      	nop
 800b4a4:	0801466c 	stmdaeq	r1, {r2, r3, r5, r6, r9, sl, lr}
 800b4a8:	08014803 	stmdaeq	r1, {r0, r1, fp, lr}
 800b4ac:	08014674 	stmdaeq	r1, {r2, r4, r5, r6, r9, sl, lr}
 800b4b0:	08014687 	stmdaeq	r1, {r0, r1, r2, r7, r9, sl, lr}
 800b4b4:	08014697 	stmdaeq	r1, {r0, r1, r2, r4, r7, r9, sl, lr}
 800b4b8:	08014664 	stmdaeq	r1, {r2, r5, r6, r9, sl, lr}
 800b4bc:	08014668 	stmdaeq	r1, {r3, r5, r6, r9, sl, lr}
 800b4c0:	080146a0 	stmdaeq	r1, {r5, r7, r9, sl, lr}
 800b4c4:	080146bf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r7, r9, sl, lr}
 800b4c8:	080146c7 	stmdaeq	r1, {r0, r1, r2, r6, r7, r9, sl, lr}
 800b4cc:	080146e6 	stmdaeq	r1, {r1, r2, r5, r6, r7, r9, sl, lr}

0800b4d0 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>:
 800b4d0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b4d2:	88c5      	ldrh	r5, [r0, #6]
 800b4d4:	8886      	ldrh	r6, [r0, #4]
 800b4d6:	42b5      	cmp	r5, r6
 800b4d8:	d216      	bcs.n	800b508 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x38>
 800b4da:	4604      	mov	r4, r0
 800b4dc:	6800      	ldr	r0, [r0, #0]
 800b4de:	4428      	add	r0, r5
 800b4e0:	1b75      	subs	r5, r6, r5
 800b4e2:	7a26      	ldrb	r6, [r4, #8]
 800b4e4:	b923      	cbnz	r3, 800b4f0 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x20>
 800b4e6:	b926      	cbnz	r6, 800b4f2 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x22>
 800b4e8:	9200      	str	r2, [sp, #0]
 800b4ea:	460b      	mov	r3, r1
 800b4ec:	4a09      	ldr	r2, [pc, #36]	; (800b514 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x44>)
 800b4ee:	e003      	b.n	800b4f8 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800b4f0:	b166      	cbz	r6, 800b50c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x3c>
 800b4f2:	460b      	mov	r3, r1
 800b4f4:	9200      	str	r2, [sp, #0]
 800b4f6:	4a08      	ldr	r2, [pc, #32]	; (800b518 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x48>)
 800b4f8:	4629      	mov	r1, r5
 800b4fa:	f005 fecf 	bl	801129c <snprintf>
 800b4fe:	4285      	cmp	r5, r0
 800b500:	bfa2      	ittt	ge
 800b502:	88e3      	ldrhge	r3, [r4, #6]
 800b504:	181b      	addge	r3, r3, r0
 800b506:	80e3      	strhge	r3, [r4, #6]
 800b508:	b002      	add	sp, #8
 800b50a:	bd70      	pop	{r4, r5, r6, pc}
 800b50c:	9200      	str	r2, [sp, #0]
 800b50e:	460b      	mov	r3, r1
 800b510:	4a02      	ldr	r2, [pc, #8]	; (800b51c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x4c>)
 800b512:	e7f1      	b.n	800b4f8 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800b514:	08013850 	stmdaeq	r1, {r4, r6, fp, ip, sp}
 800b518:	08013845 	stmdaeq	r1, {r0, r2, r6, fp, ip, sp}
 800b51c:	08013851 	stmdaeq	r1, {r0, r4, r6, fp, ip, sp}

0800b520 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>:
 800b520:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b522:	460b      	mov	r3, r1
 800b524:	8885      	ldrh	r5, [r0, #4]
 800b526:	88c1      	ldrh	r1, [r0, #6]
 800b528:	42a9      	cmp	r1, r5
 800b52a:	d214      	bcs.n	800b556 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x36>
 800b52c:	4604      	mov	r4, r0
 800b52e:	6800      	ldr	r0, [r0, #0]
 800b530:	1a6d      	subs	r5, r5, r1
 800b532:	4408      	add	r0, r1
 800b534:	7a21      	ldrb	r1, [r4, #8]
 800b536:	b91a      	cbnz	r2, 800b540 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x20>
 800b538:	b919      	cbnz	r1, 800b542 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x22>
 800b53a:	4a0a      	ldr	r2, [pc, #40]	; (800b564 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x44>)
 800b53c:	9100      	str	r1, [sp, #0]
 800b53e:	e002      	b.n	800b546 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 800b540:	b159      	cbz	r1, 800b55a <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x3a>
 800b542:	9200      	str	r2, [sp, #0]
 800b544:	4a08      	ldr	r2, [pc, #32]	; (800b568 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x48>)
 800b546:	4629      	mov	r1, r5
 800b548:	f005 fea8 	bl	801129c <snprintf>
 800b54c:	4285      	cmp	r5, r0
 800b54e:	bfa2      	ittt	ge
 800b550:	88e3      	ldrhge	r3, [r4, #6]
 800b552:	181b      	addge	r3, r3, r0
 800b554:	80e3      	strhge	r3, [r4, #6]
 800b556:	b003      	add	sp, #12
 800b558:	bd30      	pop	{r4, r5, pc}
 800b55a:	2201      	movs	r2, #1
 800b55c:	9200      	str	r2, [sp, #0]
 800b55e:	4a03      	ldr	r2, [pc, #12]	; (800b56c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x4c>)
 800b560:	e7f1      	b.n	800b546 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 800b562:	bf00      	nop
 800b564:	0801383d 	stmdaeq	r1, {r0, r2, r3, r4, r5, fp, ip, sp}
 800b568:	08013834 	stmdaeq	r1, {r2, r4, r5, fp, ip, sp}
 800b56c:	0801383e 	stmdaeq	r1, {r1, r2, r3, r4, r5, fp, ip, sp}

0800b570 <E131Params::E131Params(E131ParamsStore*)>:
 800b570:	b510      	push	{r4, lr}
 800b572:	221a      	movs	r2, #26
 800b574:	4604      	mov	r4, r0
 800b576:	f840 1b04 	str.w	r1, [r0], #4
 800b57a:	2100      	movs	r1, #0
 800b57c:	f005 fb36 	bl	8010bec <memset>
 800b580:	2300      	movs	r3, #0
 800b582:	2201      	movs	r2, #1
 800b584:	7323      	strb	r3, [r4, #12]
 800b586:	72e2      	strb	r2, [r4, #11]
 800b588:	73a3      	strb	r3, [r4, #14]
 800b58a:	2202      	movs	r2, #2
 800b58c:	7423      	strb	r3, [r4, #16]
 800b58e:	74a3      	strb	r3, [r4, #18]
 800b590:	f246 43ff 	movw	r3, #25855	; 0x64ff
 800b594:	7362      	strb	r2, [r4, #13]
 800b596:	83e3      	strh	r3, [r4, #30]
 800b598:	2203      	movs	r2, #3
 800b59a:	f246 4364 	movw	r3, #25700	; 0x6464
 800b59e:	73e2      	strb	r2, [r4, #15]
 800b5a0:	8423      	strh	r3, [r4, #32]
 800b5a2:	2204      	movs	r2, #4
 800b5a4:	2364      	movs	r3, #100	; 0x64
 800b5a6:	4620      	mov	r0, r4
 800b5a8:	7462      	strb	r2, [r4, #17]
 800b5aa:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 800b5ae:	bd10      	pop	{r4, pc}

0800b5b0 <E131Params::Load()>:
 800b5b0:	b508      	push	{r3, lr}
 800b5b2:	2300      	movs	r3, #0
 800b5b4:	4601      	mov	r1, r0
 800b5b6:	6043      	str	r3, [r0, #4]
 800b5b8:	6800      	ldr	r0, [r0, #0]
 800b5ba:	b120      	cbz	r0, 800b5c6 <E131Params::Load()+0x16>
 800b5bc:	6803      	ldr	r3, [r0, #0]
 800b5be:	3104      	adds	r1, #4
 800b5c0:	68db      	ldr	r3, [r3, #12]
 800b5c2:	4798      	blx	r3
 800b5c4:	2001      	movs	r0, #1
 800b5c6:	bd08      	pop	{r3, pc}

0800b5c8 <E131Params::Load(char const*, unsigned int)>:
 800b5c8:	6803      	ldr	r3, [r0, #0]
 800b5ca:	b1d3      	cbz	r3, 800b602 <E131Params::Load(char const*, unsigned int)+0x3a>
 800b5cc:	2300      	movs	r3, #0
 800b5ce:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b5d0:	460d      	mov	r5, r1
 800b5d2:	4616      	mov	r6, r2
 800b5d4:	4604      	mov	r4, r0
 800b5d6:	6043      	str	r3, [r0, #4]
 800b5d8:	4602      	mov	r2, r0
 800b5da:	490a      	ldr	r1, [pc, #40]	; (800b604 <E131Params::Load(char const*, unsigned int)+0x3c>)
 800b5dc:	4668      	mov	r0, sp
 800b5de:	f004 fc97 	bl	800ff10 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800b5e2:	4632      	mov	r2, r6
 800b5e4:	4629      	mov	r1, r5
 800b5e6:	4668      	mov	r0, sp
 800b5e8:	f004 fc96 	bl	800ff18 <ReadConfigFile::Read(char const*, unsigned int)>
 800b5ec:	4621      	mov	r1, r4
 800b5ee:	f851 0b04 	ldr.w	r0, [r1], #4
 800b5f2:	6803      	ldr	r3, [r0, #0]
 800b5f4:	689b      	ldr	r3, [r3, #8]
 800b5f6:	4798      	blx	r3
 800b5f8:	4668      	mov	r0, sp
 800b5fa:	f004 fc8c 	bl	800ff16 <ReadConfigFile::~ReadConfigFile()>
 800b5fe:	b002      	add	sp, #8
 800b600:	bd70      	pop	{r4, r5, r6, pc}
 800b602:	4770      	bx	lr
 800b604:	0800b7d1 	stmdaeq	r0, {r0, r4, r6, r7, r8, r9, sl, ip, sp, pc}

0800b608 <E131Params::callbackFunction(char const*)>:
 800b608:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b60c:	4604      	mov	r4, r0
 800b60e:	460e      	mov	r6, r1
 800b610:	2500      	movs	r5, #0
 800b612:	f8df 91a4 	ldr.w	r9, [pc, #420]	; 800b7b8 <E131Params::callbackFunction(char const*)+0x1b0>
 800b616:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 800b7bc <E131Params::callbackFunction(char const*)+0x1b4>
 800b61a:	f8df a1a4 	ldr.w	sl, [pc, #420]	; 800b7c0 <E131Params::callbackFunction(char const*)+0x1b8>
 800b61e:	f8df b1a4 	ldr.w	fp, [pc, #420]	; 800b7c4 <E131Params::callbackFunction(char const*)+0x1bc>
 800b622:	b087      	sub	sp, #28
 800b624:	4649      	mov	r1, r9
 800b626:	4630      	mov	r0, r6
 800b628:	f10d 0202 	add.w	r2, sp, #2
 800b62c:	f004 fd64 	bl	80100f8 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800b630:	b9c8      	cbnz	r0, 800b666 <E131Params::callbackFunction(char const*)+0x5e>
 800b632:	f64f 16fe 	movw	r6, #63998	; 0xf9fe
 800b636:	2110      	movs	r1, #16
 800b638:	f8bd 0002 	ldrh.w	r0, [sp, #2]
 800b63c:	6863      	ldr	r3, [r4, #4]
 800b63e:	1e42      	subs	r2, r0, #1
 800b640:	b292      	uxth	r2, r2
 800b642:	42b2      	cmp	r2, r6
 800b644:	ea4f 0245 	mov.w	r2, r5, lsl #1
 800b648:	fa01 f105 	lsl.w	r1, r1, r5
 800b64c:	bf85      	ittet	hi
 800b64e:	1912      	addhi	r2, r2, r4
 800b650:	3501      	addhi	r5, #1
 800b652:	1912      	addls	r2, r2, r4
 800b654:	f8a2 500b 	strhhi.w	r5, [r2, #11]
 800b658:	bf8e      	itee	hi
 800b65a:	438b      	bichi	r3, r1
 800b65c:	f8a2 000b 	strhls.w	r0, [r2, #11]
 800b660:	430b      	orrls	r3, r1
 800b662:	6063      	str	r3, [r4, #4]
 800b664:	e05e      	b.n	800b724 <E131Params::callbackFunction(char const*)+0x11c>
 800b666:	2712      	movs	r7, #18
 800b668:	2303      	movs	r3, #3
 800b66a:	436f      	muls	r7, r5
 800b66c:	9301      	str	r3, [sp, #4]
 800b66e:	4630      	mov	r0, r6
 800b670:	ab01      	add	r3, sp, #4
 800b672:	aa02      	add	r2, sp, #8
 800b674:	eb0a 0107 	add.w	r1, sl, r7
 800b678:	f004 fc82 	bl	800ff80 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800b67c:	b9f8      	cbnz	r0, 800b6be <E131Params::callbackFunction(char const*)+0xb6>
 800b67e:	f44f 7380 	mov.w	r3, #256	; 0x100
 800b682:	f89d 1008 	ldrb.w	r1, [sp, #8]
 800b686:	40ab      	lsls	r3, r5
 800b688:	f041 0120 	orr.w	r1, r1, #32
 800b68c:	296c      	cmp	r1, #108	; 0x6c
 800b68e:	6862      	ldr	r2, [r4, #4]
 800b690:	4425      	add	r5, r4
 800b692:	d10f      	bne.n	800b6b4 <E131Params::callbackFunction(char const*)+0xac>
 800b694:	f89d 1009 	ldrb.w	r1, [sp, #9]
 800b698:	f041 0120 	orr.w	r1, r1, #32
 800b69c:	2974      	cmp	r1, #116	; 0x74
 800b69e:	d109      	bne.n	800b6b4 <E131Params::callbackFunction(char const*)+0xac>
 800b6a0:	f89d 100a 	ldrb.w	r1, [sp, #10]
 800b6a4:	f041 0120 	orr.w	r1, r1, #32
 800b6a8:	2970      	cmp	r1, #112	; 0x70
 800b6aa:	d103      	bne.n	800b6b4 <E131Params::callbackFunction(char const*)+0xac>
 800b6ac:	2101      	movs	r1, #1
 800b6ae:	7529      	strb	r1, [r5, #20]
 800b6b0:	4313      	orrs	r3, r2
 800b6b2:	e7d6      	b.n	800b662 <E131Params::callbackFunction(char const*)+0x5a>
 800b6b4:	2100      	movs	r1, #0
 800b6b6:	ea22 0303 	bic.w	r3, r2, r3
 800b6ba:	7529      	strb	r1, [r5, #20]
 800b6bc:	e7d1      	b.n	800b662 <E131Params::callbackFunction(char const*)+0x5a>
 800b6be:	2305      	movs	r3, #5
 800b6c0:	4630      	mov	r0, r6
 800b6c2:	9301      	str	r3, [sp, #4]
 800b6c4:	aa02      	add	r2, sp, #8
 800b6c6:	ab01      	add	r3, sp, #4
 800b6c8:	eb0b 0107 	add.w	r1, fp, r7
 800b6cc:	f004 fc58 	bl	800ff80 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800b6d0:	bb58      	cbnz	r0, 800b72a <E131Params::callbackFunction(char const*)+0x122>
 800b6d2:	2301      	movs	r3, #1
 800b6d4:	7fa2      	ldrb	r2, [r4, #30]
 800b6d6:	40ab      	lsls	r3, r5
 800b6d8:	ea22 0303 	bic.w	r3, r2, r3
 800b6dc:	f89d 2008 	ldrb.w	r2, [sp, #8]
 800b6e0:	77a3      	strb	r3, [r4, #30]
 800b6e2:	f042 0220 	orr.w	r2, r2, #32
 800b6e6:	2a69      	cmp	r2, #105	; 0x69
 800b6e8:	d117      	bne.n	800b71a <E131Params::callbackFunction(char const*)+0x112>
 800b6ea:	f89d 2009 	ldrb.w	r2, [sp, #9]
 800b6ee:	f042 0220 	orr.w	r2, r2, #32
 800b6f2:	2a6e      	cmp	r2, #110	; 0x6e
 800b6f4:	d111      	bne.n	800b71a <E131Params::callbackFunction(char const*)+0x112>
 800b6f6:	f89d 200a 	ldrb.w	r2, [sp, #10]
 800b6fa:	f042 0220 	orr.w	r2, r2, #32
 800b6fe:	2a70      	cmp	r2, #112	; 0x70
 800b700:	d10b      	bne.n	800b71a <E131Params::callbackFunction(char const*)+0x112>
 800b702:	f89d 200b 	ldrb.w	r2, [sp, #11]
 800b706:	f042 0220 	orr.w	r2, r2, #32
 800b70a:	2a75      	cmp	r2, #117	; 0x75
 800b70c:	d105      	bne.n	800b71a <E131Params::callbackFunction(char const*)+0x112>
 800b70e:	f89d 200c 	ldrb.w	r2, [sp, #12]
 800b712:	f042 0220 	orr.w	r2, r2, #32
 800b716:	2a74      	cmp	r2, #116	; 0x74
 800b718:	d004      	beq.n	800b724 <E131Params::callbackFunction(char const*)+0x11c>
 800b71a:	2201      	movs	r2, #1
 800b71c:	fa02 f505 	lsl.w	r5, r2, r5
 800b720:	432b      	orrs	r3, r5
 800b722:	77a3      	strb	r3, [r4, #30]
 800b724:	b007      	add	sp, #28
 800b726:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b72a:	4641      	mov	r1, r8
 800b72c:	4630      	mov	r0, r6
 800b72e:	f10d 0201 	add.w	r2, sp, #1
 800b732:	f004 fcff 	bl	8010134 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800b736:	b998      	cbnz	r0, 800b760 <E131Params::callbackFunction(char const*)+0x158>
 800b738:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 800b73c:	f89d 1001 	ldrb.w	r1, [sp, #1]
 800b740:	40aa      	lsls	r2, r5
 800b742:	1e48      	subs	r0, r1, #1
 800b744:	b2c0      	uxtb	r0, r0
 800b746:	28c7      	cmp	r0, #199	; 0xc7
 800b748:	6863      	ldr	r3, [r4, #4]
 800b74a:	4425      	add	r5, r4
 800b74c:	d803      	bhi.n	800b756 <E131Params::callbackFunction(char const*)+0x14e>
 800b74e:	2964      	cmp	r1, #100	; 0x64
 800b750:	d001      	beq.n	800b756 <E131Params::callbackFunction(char const*)+0x14e>
 800b752:	77e9      	strb	r1, [r5, #31]
 800b754:	e7ac      	b.n	800b6b0 <E131Params::callbackFunction(char const*)+0xa8>
 800b756:	2164      	movs	r1, #100	; 0x64
 800b758:	ea23 0302 	bic.w	r3, r3, r2
 800b75c:	77e9      	strb	r1, [r5, #31]
 800b75e:	e780      	b.n	800b662 <E131Params::callbackFunction(char const*)+0x5a>
 800b760:	3501      	adds	r5, #1
 800b762:	2d04      	cmp	r5, #4
 800b764:	f109 0910 	add.w	r9, r9, #16
 800b768:	f108 0812 	add.w	r8, r8, #18
 800b76c:	f47f af5a 	bne.w	800b624 <E131Params::callbackFunction(char const*)+0x1c>
 800b770:	4630      	mov	r0, r6
 800b772:	4915      	ldr	r1, [pc, #84]	; (800b7c8 <E131Params::callbackFunction(char const*)+0x1c0>)
 800b774:	f10d 0201 	add.w	r2, sp, #1
 800b778:	f004 fcdc 	bl	8010134 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800b77c:	b948      	cbnz	r0, 800b792 <E131Params::callbackFunction(char const*)+0x18a>
 800b77e:	f89d 2001 	ldrb.w	r2, [sp, #1]
 800b782:	6863      	ldr	r3, [r4, #4]
 800b784:	b112      	cbz	r2, 800b78c <E131Params::callbackFunction(char const*)+0x184>
 800b786:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 800b78a:	e76a      	b.n	800b662 <E131Params::callbackFunction(char const*)+0x5a>
 800b78c:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800b790:	e767      	b.n	800b662 <E131Params::callbackFunction(char const*)+0x5a>
 800b792:	4630      	mov	r0, r6
 800b794:	490d      	ldr	r1, [pc, #52]	; (800b7cc <E131Params::callbackFunction(char const*)+0x1c4>)
 800b796:	f10d 0201 	add.w	r2, sp, #1
 800b79a:	f004 fccb 	bl	8010134 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800b79e:	2800      	cmp	r0, #0
 800b7a0:	d1c0      	bne.n	800b724 <E131Params::callbackFunction(char const*)+0x11c>
 800b7a2:	f89d 2001 	ldrb.w	r2, [sp, #1]
 800b7a6:	6863      	ldr	r3, [r4, #4]
 800b7a8:	b112      	cbz	r2, 800b7b0 <E131Params::callbackFunction(char const*)+0x1a8>
 800b7aa:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800b7ae:	e758      	b.n	800b662 <E131Params::callbackFunction(char const*)+0x5a>
 800b7b0:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800b7b4:	e755      	b.n	800b662 <E131Params::callbackFunction(char const*)+0x5a>
 800b7b6:	bf00      	nop
 800b7b8:	08014e48 	stmdaeq	r1, {r3, r6, r9, sl, fp, lr}
 800b7bc:	080147a6 	stmdaeq	r1, {r1, r2, r5, r7, r8, r9, sl, lr}
 800b7c0:	08014e88 	stmdaeq	r1, {r3, r7, r9, sl, fp, lr}
 800b7c4:	08014eeb 	stmdaeq	r1, {r0, r1, r3, r5, r6, r7, r9, sl, fp, lr}
 800b7c8:	08014784 	stmdaeq	r1, {r2, r7, r8, r9, sl, lr}
 800b7cc:	0801476e 	stmdaeq	r1, {r1, r2, r3, r5, r6, r8, r9, sl, lr}

0800b7d0 <E131Params::staticCallbackFunction(void*, char const*)>:
 800b7d0:	f7ff bf1a 	b.w	800b608 <E131Params::callbackFunction(char const*)>

0800b7d4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)>:
 800b7d4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b7d8:	4604      	mov	r4, r0
 800b7da:	4615      	mov	r5, r2
 800b7dc:	461e      	mov	r6, r3
 800b7de:	b086      	sub	sp, #24
 800b7e0:	3004      	adds	r0, #4
 800b7e2:	2900      	cmp	r1, #0
 800b7e4:	d045      	beq.n	800b872 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x9e>
 800b7e6:	221f      	movs	r2, #31
 800b7e8:	f005 f9e9 	bl	8010bbe <memmove>
 800b7ec:	4633      	mov	r3, r6
 800b7ee:	462a      	mov	r2, r5
 800b7f0:	4978      	ldr	r1, [pc, #480]	; (800b9d4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x200>)
 800b7f2:	a803      	add	r0, sp, #12
 800b7f4:	f004 faec 	bl	800fdd0 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800b7f8:	2500      	movs	r5, #0
 800b7fa:	4e77      	ldr	r6, [pc, #476]	; (800b9d8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x204>)
 800b7fc:	f8df 81dc 	ldr.w	r8, [pc, #476]	; 800b9dc <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x208>
 800b800:	4f77      	ldr	r7, [pc, #476]	; (800b9e0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x20c>)
 800b802:	7fa3      	ldrb	r3, [r4, #30]
 800b804:	4631      	mov	r1, r6
 800b806:	412b      	asrs	r3, r5
 800b808:	f013 0f01 	tst.w	r3, #1
 800b80c:	ea6f 0303 	mvn.w	r3, r3
 800b810:	bf0c      	ite	eq
 800b812:	4642      	moveq	r2, r8
 800b814:	463a      	movne	r2, r7
 800b816:	f003 0301 	and.w	r3, r3, #1
 800b81a:	a803      	add	r0, sp, #12
 800b81c:	3501      	adds	r5, #1
 800b81e:	f7ff fe57 	bl	800b4d0 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800b822:	2d04      	cmp	r5, #4
 800b824:	f106 0612 	add.w	r6, r6, #18
 800b828:	d1eb      	bne.n	800b802 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x2e>
 800b82a:	2600      	movs	r6, #0
 800b82c:	f8df a1b4 	ldr.w	sl, [pc, #436]	; 800b9e4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x210>
 800b830:	4f6d      	ldr	r7, [pc, #436]	; (800b9e8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x214>)
 800b832:	f8df 81b8 	ldr.w	r8, [pc, #440]	; 800b9ec <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x218>
 800b836:	f8df 91b8 	ldr.w	r9, [pc, #440]	; 800b9f0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x21c>
 800b83a:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800b83e:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800b842:	42ab      	cmp	r3, r5
 800b844:	d22c      	bcs.n	800b8a0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xcc>
 800b846:	2110      	movs	r1, #16
 800b848:	9803      	ldr	r0, [sp, #12]
 800b84a:	1aed      	subs	r5, r5, r3
 800b84c:	4418      	add	r0, r3
 800b84e:	eb04 0346 	add.w	r3, r4, r6, lsl #1
 800b852:	f8b3 200b 	ldrh.w	r2, [r3, #11]
 800b856:	6863      	ldr	r3, [r4, #4]
 800b858:	40b1      	lsls	r1, r6
 800b85a:	ea31 0303 	bics.w	r3, r1, r3
 800b85e:	f89d c014 	ldrb.w	ip, [sp, #20]
 800b862:	d00d      	beq.n	800b880 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xac>
 800b864:	f1bc 0f00 	cmp.w	ip, #0
 800b868:	d10d      	bne.n	800b886 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xb2>
 800b86a:	9200      	str	r2, [sp, #0]
 800b86c:	4653      	mov	r3, sl
 800b86e:	464a      	mov	r2, r9
 800b870:	e00c      	b.n	800b88c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xb8>
 800b872:	6823      	ldr	r3, [r4, #0]
 800b874:	4601      	mov	r1, r0
 800b876:	681a      	ldr	r2, [r3, #0]
 800b878:	4618      	mov	r0, r3
 800b87a:	68d2      	ldr	r2, [r2, #12]
 800b87c:	4790      	blx	r2
 800b87e:	e7b5      	b.n	800b7ec <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x18>
 800b880:	f1bc 0f00 	cmp.w	ip, #0
 800b884:	d05d      	beq.n	800b942 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x16e>
 800b886:	9200      	str	r2, [sp, #0]
 800b888:	4653      	mov	r3, sl
 800b88a:	463a      	mov	r2, r7
 800b88c:	4629      	mov	r1, r5
 800b88e:	f005 fd05 	bl	801129c <snprintf>
 800b892:	4285      	cmp	r5, r0
 800b894:	bfa2      	ittt	ge
 800b896:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800b89a:	18c0      	addge	r0, r0, r3
 800b89c:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800b8a0:	3601      	adds	r6, #1
 800b8a2:	2e04      	cmp	r6, #4
 800b8a4:	f10a 0a10 	add.w	sl, sl, #16
 800b8a8:	d1c7      	bne.n	800b83a <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x66>
 800b8aa:	4952      	ldr	r1, [pc, #328]	; (800b9f4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x220>)
 800b8ac:	a803      	add	r0, sp, #12
 800b8ae:	f004 fb15 	bl	800fedc <PropertiesBuilder::AddComment(char const*)>
 800b8b2:	2500      	movs	r5, #0
 800b8b4:	f44f 7a80 	mov.w	sl, #256	; 0x100
 800b8b8:	4e4f      	ldr	r6, [pc, #316]	; (800b9f8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x224>)
 800b8ba:	f8df 9140 	ldr.w	r9, [pc, #320]	; 800b9fc <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x228>
 800b8be:	f8df 8140 	ldr.w	r8, [pc, #320]	; 800ba00 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x22c>
 800b8c2:	f104 0714 	add.w	r7, r4, #20
 800b8c6:	6861      	ldr	r1, [r4, #4]
 800b8c8:	fa0a f305 	lsl.w	r3, sl, r5
 800b8cc:	f817 2b01 	ldrb.w	r2, [r7], #1
 800b8d0:	438b      	bics	r3, r1
 800b8d2:	bf0c      	ite	eq
 800b8d4:	2301      	moveq	r3, #1
 800b8d6:	2300      	movne	r3, #0
 800b8d8:	4631      	mov	r1, r6
 800b8da:	2a00      	cmp	r2, #0
 800b8dc:	bf0c      	ite	eq
 800b8de:	464a      	moveq	r2, r9
 800b8e0:	4642      	movne	r2, r8
 800b8e2:	a803      	add	r0, sp, #12
 800b8e4:	3501      	adds	r5, #1
 800b8e6:	f7ff fdf3 	bl	800b4d0 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800b8ea:	2d04      	cmp	r5, #4
 800b8ec:	f106 0612 	add.w	r6, r6, #18
 800b8f0:	d1e9      	bne.n	800b8c6 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xf2>
 800b8f2:	4944      	ldr	r1, [pc, #272]	; (800ba04 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x230>)
 800b8f4:	a803      	add	r0, sp, #12
 800b8f6:	f004 faf1 	bl	800fedc <PropertiesBuilder::AddComment(char const*)>
 800b8fa:	2600      	movs	r6, #0
 800b8fc:	f8df a108 	ldr.w	sl, [pc, #264]	; 800ba08 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x234>
 800b900:	4f39      	ldr	r7, [pc, #228]	; (800b9e8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x214>)
 800b902:	f8df 80e8 	ldr.w	r8, [pc, #232]	; 800b9ec <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x218>
 800b906:	f8df 90e8 	ldr.w	r9, [pc, #232]	; 800b9f0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x21c>
 800b90a:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800b90e:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800b912:	42ab      	cmp	r3, r5
 800b914:	d229      	bcs.n	800b96a <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x196>
 800b916:	f44f 3180 	mov.w	r1, #65536	; 0x10000
 800b91a:	9803      	ldr	r0, [sp, #12]
 800b91c:	1aed      	subs	r5, r5, r3
 800b91e:	4418      	add	r0, r3
 800b920:	f104 031f 	add.w	r3, r4, #31
 800b924:	5d9a      	ldrb	r2, [r3, r6]
 800b926:	6863      	ldr	r3, [r4, #4]
 800b928:	40b1      	lsls	r1, r6
 800b92a:	ea31 0303 	bics.w	r3, r1, r3
 800b92e:	f89d c014 	ldrb.w	ip, [sp, #20]
 800b932:	d00a      	beq.n	800b94a <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x176>
 800b934:	f1bc 0f00 	cmp.w	ip, #0
 800b938:	d10a      	bne.n	800b950 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x17c>
 800b93a:	9200      	str	r2, [sp, #0]
 800b93c:	4653      	mov	r3, sl
 800b93e:	464a      	mov	r2, r9
 800b940:	e009      	b.n	800b956 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x182>
 800b942:	9200      	str	r2, [sp, #0]
 800b944:	4653      	mov	r3, sl
 800b946:	4642      	mov	r2, r8
 800b948:	e7a0      	b.n	800b88c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xb8>
 800b94a:	f1bc 0f00 	cmp.w	ip, #0
 800b94e:	d03d      	beq.n	800b9cc <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1f8>
 800b950:	9200      	str	r2, [sp, #0]
 800b952:	4653      	mov	r3, sl
 800b954:	463a      	mov	r2, r7
 800b956:	4629      	mov	r1, r5
 800b958:	f005 fca0 	bl	801129c <snprintf>
 800b95c:	4285      	cmp	r5, r0
 800b95e:	bfa2      	ittt	ge
 800b960:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800b964:	18c0      	addge	r0, r0, r3
 800b966:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800b96a:	3601      	adds	r6, #1
 800b96c:	2e04      	cmp	r6, #4
 800b96e:	f10a 0a12 	add.w	sl, sl, #18
 800b972:	d1ca      	bne.n	800b90a <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x136>
 800b974:	4925      	ldr	r1, [pc, #148]	; (800ba0c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x238>)
 800b976:	a803      	add	r0, sp, #12
 800b978:	f004 fab0 	bl	800fedc <PropertiesBuilder::AddComment(char const*)>
 800b97c:	6862      	ldr	r2, [r4, #4]
 800b97e:	4924      	ldr	r1, [pc, #144]	; (800ba10 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x23c>)
 800b980:	f3c2 3200 	ubfx	r2, r2, #12, #1
 800b984:	a803      	add	r0, sp, #12
 800b986:	f7ff fdcb 	bl	800b520 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800b98a:	6862      	ldr	r2, [r4, #4]
 800b98c:	4921      	ldr	r1, [pc, #132]	; (800ba14 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x240>)
 800b98e:	f3c2 3240 	ubfx	r2, r2, #13, #1
 800b992:	a803      	add	r0, sp, #12
 800b994:	f7ff fdc4 	bl	800b520 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800b998:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800b99c:	b17b      	cbz	r3, 800b9be <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1ea>
 800b99e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800b9a2:	9b03      	ldr	r3, [sp, #12]
 800b9a4:	4413      	add	r3, r2
 800b9a6:	227d      	movs	r2, #125	; 0x7d
 800b9a8:	f803 2c01 	strb.w	r2, [r3, #-1]
 800b9ac:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800b9b0:	9903      	ldr	r1, [sp, #12]
 800b9b2:	54ca      	strb	r2, [r1, r3]
 800b9b4:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800b9b8:	3301      	adds	r3, #1
 800b9ba:	f8ad 3012 	strh.w	r3, [sp, #18]
 800b9be:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800b9c2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800b9c4:	601a      	str	r2, [r3, #0]
 800b9c6:	b006      	add	sp, #24
 800b9c8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800b9cc:	9200      	str	r2, [sp, #0]
 800b9ce:	4653      	mov	r3, sl
 800b9d0:	4642      	mov	r2, r8
 800b9d2:	e7c0      	b.n	800b956 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x182>
 800b9d4:	080147ee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, r8, r9, sl, lr}
 800b9d8:	08014eeb 	stmdaeq	r1, {r0, r1, r3, r5, r6, r7, r9, sl, fp, lr}
 800b9dc:	0801473e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r8, r9, sl, lr}
 800b9e0:	08014744 	stmdaeq	r1, {r2, r6, r8, r9, sl, lr}
 800b9e4:	08014e48 	stmdaeq	r1, {r3, r6, r9, sl, fp, lr}
 800b9e8:	08013834 	stmdaeq	r1, {r2, r4, r5, fp, ip, sp}
 800b9ec:	0801383e 	stmdaeq	r1, {r1, r2, r3, r4, r5, fp, ip, sp}
 800b9f0:	0801383d 	stmdaeq	r1, {r0, r2, r3, r4, r5, fp, ip, sp}
 800b9f4:	08014753 	stmdaeq	r1, {r0, r1, r4, r6, r8, r9, sl, lr}
 800b9f8:	08014e88 	stmdaeq	r1, {r3, r7, r9, sl, fp, lr}
 800b9fc:	0801474b 	stmdaeq	r1, {r0, r1, r3, r6, r8, r9, sl, lr}
 800ba00:	0801474f 	stmdaeq	r1, {r0, r1, r2, r3, r6, r8, r9, sl, lr}
 800ba04:	0801475e 	stmdaeq	r1, {r1, r2, r3, r4, r6, r8, r9, sl, lr}
 800ba08:	080147a6 	stmdaeq	r1, {r1, r2, r5, r7, r8, r9, sl, lr}
 800ba0c:	08014768 	stmdaeq	r1, {r3, r5, r6, r8, r9, sl, lr}
 800ba10:	08014784 	stmdaeq	r1, {r2, r7, r8, r9, sl, lr}
 800ba14:	0801476e 	stmdaeq	r1, {r1, r2, r3, r5, r6, r8, r9, sl, lr}

0800ba18 <E131Params::Save(char*, unsigned int, unsigned int&)>:
 800ba18:	b513      	push	{r0, r1, r4, lr}
 800ba1a:	6804      	ldr	r4, [r0, #0]
 800ba1c:	b914      	cbnz	r4, 800ba24 <E131Params::Save(char*, unsigned int, unsigned int&)+0xc>
 800ba1e:	601c      	str	r4, [r3, #0]
 800ba20:	b002      	add	sp, #8
 800ba22:	bd10      	pop	{r4, pc}
 800ba24:	9300      	str	r3, [sp, #0]
 800ba26:	4613      	mov	r3, r2
 800ba28:	460a      	mov	r2, r1
 800ba2a:	2100      	movs	r1, #0
 800ba2c:	f7ff fed2 	bl	800b7d4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)>
 800ba30:	e7f6      	b.n	800ba20 <E131Params::Save(char*, unsigned int, unsigned int&)+0x8>

0800ba32 <E131Params::Set(E131Bridge*)>:
 800ba32:	6843      	ldr	r3, [r0, #4]
 800ba34:	2b00      	cmp	r3, #0
 800ba36:	d034      	beq.n	800baa2 <E131Params::Set(E131Bridge*)+0x70>
 800ba38:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ba3c:	2300      	movs	r3, #0
 800ba3e:	f44f 7680 	mov.w	r6, #256	; 0x100
 800ba42:	f04f 0e44 	mov.w	lr, #68	; 0x44
 800ba46:	f44f 3780 	mov.w	r7, #65536	; 0x10000
 800ba4a:	f100 0214 	add.w	r2, r0, #20
 800ba4e:	f201 5c4c 	addw	ip, r1, #1356	; 0x54c
 800ba52:	6845      	ldr	r5, [r0, #4]
 800ba54:	fa06 f403 	lsl.w	r4, r6, r3
 800ba58:	43ac      	bics	r4, r5
 800ba5a:	bf02      	ittt	eq
 800ba5c:	fb0e f403 	muleq.w	r4, lr, r3
 800ba60:	f892 8000 	ldrbeq.w	r8, [r2]
 800ba64:	f84c 8004 	streq.w	r8, [ip, r4]
 800ba68:	fa07 f403 	lsl.w	r4, r7, r3
 800ba6c:	43ac      	bics	r4, r5
 800ba6e:	d106      	bne.n	800ba7e <E131Params::Set(E131Bridge*)+0x4c>
 800ba70:	7ad5      	ldrb	r5, [r2, #11]
 800ba72:	1e6c      	subs	r4, r5, #1
 800ba74:	b2e4      	uxtb	r4, r4
 800ba76:	2cc7      	cmp	r4, #199	; 0xc7
 800ba78:	bf98      	it	ls
 800ba7a:	f881 5739 	strbls.w	r5, [r1, #1849]	; 0x739
 800ba7e:	3301      	adds	r3, #1
 800ba80:	2b04      	cmp	r3, #4
 800ba82:	f102 0201 	add.w	r2, r2, #1
 800ba86:	d1e4      	bne.n	800ba52 <E131Params::Set(E131Bridge*)+0x20>
 800ba88:	6843      	ldr	r3, [r0, #4]
 800ba8a:	04da      	lsls	r2, r3, #19
 800ba8c:	bf44      	itt	mi
 800ba8e:	2201      	movmi	r2, #1
 800ba90:	f881 24f9 	strbmi.w	r2, [r1, #1273]	; 0x4f9
 800ba94:	049b      	lsls	r3, r3, #18
 800ba96:	bf44      	itt	mi
 800ba98:	2301      	movmi	r3, #1
 800ba9a:	f881 34fa 	strbmi.w	r3, [r1, #1274]	; 0x4fa
 800ba9e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800baa2:	4770      	bx	lr

0800baa4 <E131Params::Dump()>:
 800baa4:	4770      	bx	lr

0800baa6 <uuid_unparse_x>:
 800baa6:	4603      	mov	r3, r0
 800baa8:	b530      	push	{r4, r5, lr}
 800baaa:	4608      	mov	r0, r1
 800baac:	4611      	mov	r1, r2
 800baae:	681a      	ldr	r2, [r3, #0]
 800bab0:	b08f      	sub	sp, #60	; 0x3c
 800bab2:	ba12      	rev	r2, r2
 800bab4:	920a      	str	r2, [sp, #40]	; 0x28
 800bab6:	889a      	ldrh	r2, [r3, #4]
 800bab8:	891c      	ldrh	r4, [r3, #8]
 800baba:	ba52      	rev16	r2, r2
 800babc:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800bac0:	88da      	ldrh	r2, [r3, #6]
 800bac2:	ba64      	rev16	r4, r4
 800bac4:	ba52      	rev16	r2, r2
 800bac6:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 800baca:	f8ad 4030 	strh.w	r4, [sp, #48]	; 0x30
 800bace:	f103 020a 	add.w	r2, r3, #10
 800bad2:	f10d 0432 	add.w	r4, sp, #50	; 0x32
 800bad6:	3310      	adds	r3, #16
 800bad8:	4293      	cmp	r3, r2
 800bada:	d122      	bne.n	800bb22 <uuid_unparse_x+0x7c>
 800badc:	f89d 2037 	ldrb.w	r2, [sp, #55]	; 0x37
 800bae0:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 800bae4:	9208      	str	r2, [sp, #32]
 800bae6:	f89d 2036 	ldrb.w	r2, [sp, #54]	; 0x36
 800baea:	0a1b      	lsrs	r3, r3, #8
 800baec:	9207      	str	r2, [sp, #28]
 800baee:	f89d 2035 	ldrb.w	r2, [sp, #53]	; 0x35
 800baf2:	9301      	str	r3, [sp, #4]
 800baf4:	9206      	str	r2, [sp, #24]
 800baf6:	f89d 2034 	ldrb.w	r2, [sp, #52]	; 0x34
 800bafa:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 800bafe:	9205      	str	r2, [sp, #20]
 800bb00:	f89d 2033 	ldrb.w	r2, [sp, #51]	; 0x33
 800bb04:	9300      	str	r3, [sp, #0]
 800bb06:	9204      	str	r2, [sp, #16]
 800bb08:	f89d 2032 	ldrb.w	r2, [sp, #50]	; 0x32
 800bb0c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 800bb10:	9203      	str	r2, [sp, #12]
 800bb12:	f89d 2030 	ldrb.w	r2, [sp, #48]	; 0x30
 800bb16:	9202      	str	r2, [sp, #8]
 800bb18:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800bb1a:	f005 fba7 	bl	801126c <sprintf>
 800bb1e:	b00f      	add	sp, #60	; 0x3c
 800bb20:	bd30      	pop	{r4, r5, pc}
 800bb22:	f812 5b01 	ldrb.w	r5, [r2], #1
 800bb26:	f804 5b01 	strb.w	r5, [r4], #1
 800bb2a:	e7d5      	b.n	800bad8 <uuid_unparse_x+0x32>

0800bb2c <uuid_unparse>:
 800bb2c:	4a01      	ldr	r2, [pc, #4]	; (800bb34 <uuid_unparse+0x8>)
 800bb2e:	f7ff bfba 	b.w	800baa6 <uuid_unparse_x>
 800bb32:	bf00      	nop
 800bb34:	08014805 	stmdaeq	r1, {r0, r2, fp, lr}

0800bb38 <LightSet::Blackout(bool)>:
 800bb38:	4770      	bx	lr

0800bb3a <DmxSend::~DmxSend()>:
 800bb3a:	4770      	bx	lr

0800bb3c <DmxSend::Start(unsigned int)>:
 800bb3c:	2301      	movs	r3, #1
 800bb3e:	b410      	push	{r4}
 800bb40:	4c08      	ldr	r4, [pc, #32]	; (800bb64 <DmxSend::Start(unsigned int)+0x28>)
 800bb42:	fa03 f001 	lsl.w	r0, r3, r1
 800bb46:	7822      	ldrb	r2, [r4, #0]
 800bb48:	ea30 0c02 	bics.w	ip, r0, r2
 800bb4c:	d007      	beq.n	800bb5e <DmxSend::Start(unsigned int)+0x22>
 800bb4e:	4302      	orrs	r2, r0
 800bb50:	4805      	ldr	r0, [pc, #20]	; (800bb68 <DmxSend::Start(unsigned int)+0x2c>)
 800bb52:	7022      	strb	r2, [r4, #0]
 800bb54:	6800      	ldr	r0, [r0, #0]
 800bb56:	2200      	movs	r2, #0
 800bb58:	bc10      	pop	{r4}
 800bb5a:	f000 bdd5 	b.w	800c708 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 800bb5e:	bc10      	pop	{r4}
 800bb60:	4770      	bx	lr
 800bb62:	bf00      	nop
 800bb64:	20003154 	andcs	r3, r0, r4, asr r1
 800bb68:	2000420c 	andcs	r4, r0, ip, lsl #4

0800bb6c <DmxSend::Stop(unsigned int)>:
 800bb6c:	2201      	movs	r2, #1
 800bb6e:	b410      	push	{r4}
 800bb70:	4809      	ldr	r0, [pc, #36]	; (800bb98 <DmxSend::Stop(unsigned int)+0x2c>)
 800bb72:	408a      	lsls	r2, r1
 800bb74:	7803      	ldrb	r3, [r0, #0]
 800bb76:	ea03 0402 	and.w	r4, r3, r2
 800bb7a:	439a      	bics	r2, r3
 800bb7c:	d109      	bne.n	800bb92 <DmxSend::Stop(unsigned int)+0x26>
 800bb7e:	ea23 0304 	bic.w	r3, r3, r4
 800bb82:	7003      	strb	r3, [r0, #0]
 800bb84:	2300      	movs	r3, #0
 800bb86:	4805      	ldr	r0, [pc, #20]	; (800bb9c <DmxSend::Stop(unsigned int)+0x30>)
 800bb88:	461a      	mov	r2, r3
 800bb8a:	6800      	ldr	r0, [r0, #0]
 800bb8c:	bc10      	pop	{r4}
 800bb8e:	f000 bdbb 	b.w	800c708 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 800bb92:	bc10      	pop	{r4}
 800bb94:	4770      	bx	lr
 800bb96:	bf00      	nop
 800bb98:	20003154 	andcs	r3, r0, r4, asr r1
 800bb9c:	2000420c 	andcs	r4, r0, ip, lsl #4

0800bba0 <DmxSend::SetData(unsigned int, unsigned char const*, unsigned int)>:
 800bba0:	b11b      	cbz	r3, 800bbaa <DmxSend::SetData(unsigned int, unsigned char const*, unsigned int)+0xa>
 800bba2:	4802      	ldr	r0, [pc, #8]	; (800bbac <DmxSend::SetData(unsigned int, unsigned char const*, unsigned int)+0xc>)
 800bba4:	6800      	ldr	r0, [r0, #0]
 800bba6:	f000 bfa7 	b.w	800caf8 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)>
 800bbaa:	4770      	bx	lr
 800bbac:	2000420c 	andcs	r4, r0, ip, lsl #4

0800bbb0 <DmxSend::Print()>:
 800bbb0:	b510      	push	{r4, lr}
 800bbb2:	4c0e      	ldr	r4, [pc, #56]	; (800bbec <DmxSend::Print()+0x3c>)
 800bbb4:	480e      	ldr	r0, [pc, #56]	; (800bbf0 <DmxSend::Print()+0x40>)
 800bbb6:	f005 fb49 	bl	801124c <printf>
 800bbba:	6823      	ldr	r3, [r4, #0]
 800bbbc:	480d      	ldr	r0, [pc, #52]	; (800bbf4 <DmxSend::Print()+0x44>)
 800bbbe:	6819      	ldr	r1, [r3, #0]
 800bbc0:	f005 fb44 	bl	801124c <printf>
 800bbc4:	6823      	ldr	r3, [r4, #0]
 800bbc6:	480c      	ldr	r0, [pc, #48]	; (800bbf8 <DmxSend::Print()+0x48>)
 800bbc8:	6859      	ldr	r1, [r3, #4]
 800bbca:	f005 fb3f 	bl	801124c <printf>
 800bbce:	6823      	ldr	r3, [r4, #0]
 800bbd0:	490a      	ldr	r1, [pc, #40]	; (800bbfc <DmxSend::Print()+0x4c>)
 800bbd2:	689b      	ldr	r3, [r3, #8]
 800bbd4:	480a      	ldr	r0, [pc, #40]	; (800bc00 <DmxSend::Print()+0x50>)
 800bbd6:	fbb1 f1f3 	udiv	r1, r1, r3
 800bbda:	f005 fb37 	bl	801124c <printf>
 800bbde:	6823      	ldr	r3, [r4, #0]
 800bbe0:	4808      	ldr	r0, [pc, #32]	; (800bc04 <DmxSend::Print()+0x54>)
 800bbe2:	8a19      	ldrh	r1, [r3, #16]
 800bbe4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bbe8:	f005 bb30 	b.w	801124c <printf>
 800bbec:	2000420c 	andcs	r4, r0, ip, lsl #4
 800bbf0:	08014836 	stmdaeq	r1, {r1, r2, r4, r5, fp, lr}
 800bbf4:	08014840 	stmdaeq	r1, {r6, fp, lr}
 800bbf8:	08014854 	stmdaeq	r1, {r2, r4, r6, fp, lr}
 800bbfc:	000f4240 	andeq	r4, pc, r0, asr #4
 800bc00:	08014868 	stmdaeq	r1, {r3, r5, r6, fp, lr}
 800bc04:	0801487c 	stmdaeq	r1, {r2, r3, r4, r5, r6, fp, lr}

0800bc08 <DmxSend::~DmxSend()>:
 800bc08:	b510      	push	{r4, lr}
 800bc0a:	4604      	mov	r4, r0
 800bc0c:	f004 ff14 	bl	8010a38 <operator delete(void*)>
 800bc10:	4620      	mov	r0, r4
 800bc12:	bd10      	pop	{r4, pc}

0800bc14 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>:
 800bc14:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800bc16:	88c5      	ldrh	r5, [r0, #6]
 800bc18:	8886      	ldrh	r6, [r0, #4]
 800bc1a:	42b5      	cmp	r5, r6
 800bc1c:	d216      	bcs.n	800bc4c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x38>
 800bc1e:	4604      	mov	r4, r0
 800bc20:	6800      	ldr	r0, [r0, #0]
 800bc22:	4428      	add	r0, r5
 800bc24:	1b75      	subs	r5, r6, r5
 800bc26:	7a26      	ldrb	r6, [r4, #8]
 800bc28:	b923      	cbnz	r3, 800bc34 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x20>
 800bc2a:	b926      	cbnz	r6, 800bc36 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x22>
 800bc2c:	9200      	str	r2, [sp, #0]
 800bc2e:	460b      	mov	r3, r1
 800bc30:	4a09      	ldr	r2, [pc, #36]	; (800bc58 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x44>)
 800bc32:	e003      	b.n	800bc3c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800bc34:	b166      	cbz	r6, 800bc50 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x3c>
 800bc36:	460b      	mov	r3, r1
 800bc38:	9200      	str	r2, [sp, #0]
 800bc3a:	4a08      	ldr	r2, [pc, #32]	; (800bc5c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x48>)
 800bc3c:	4629      	mov	r1, r5
 800bc3e:	f005 fb2d 	bl	801129c <snprintf>
 800bc42:	4285      	cmp	r5, r0
 800bc44:	bfa2      	ittt	ge
 800bc46:	88e3      	ldrhge	r3, [r4, #6]
 800bc48:	181b      	addge	r3, r3, r0
 800bc4a:	80e3      	strhge	r3, [r4, #6]
 800bc4c:	b002      	add	sp, #8
 800bc4e:	bd70      	pop	{r4, r5, r6, pc}
 800bc50:	9200      	str	r2, [sp, #0]
 800bc52:	460b      	mov	r3, r1
 800bc54:	4a02      	ldr	r2, [pc, #8]	; (800bc60 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x4c>)
 800bc56:	e7f1      	b.n	800bc3c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800bc58:	0801383d 	stmdaeq	r1, {r0, r2, r3, r4, r5, fp, ip, sp}
 800bc5c:	08013834 	stmdaeq	r1, {r2, r4, r5, fp, ip, sp}
 800bc60:	0801383e 	stmdaeq	r1, {r1, r2, r3, r4, r5, fp, ip, sp}

0800bc64 <DmxParams::DmxParams(DmxParamsStore*)>:
 800bc64:	6001      	str	r1, [r0, #0]
 800bc66:	2100      	movs	r1, #0
 800bc68:	4a03      	ldr	r2, [pc, #12]	; (800bc78 <DmxParams::DmxParams(DmxParamsStore*)+0x14>)
 800bc6a:	e9c0 1201 	strd	r1, r2, [r0, #4]
 800bc6e:	f64f 7228 	movw	r2, #65320	; 0xff28
 800bc72:	8182      	strh	r2, [r0, #12]
 800bc74:	4770      	bx	lr
 800bc76:	bf00      	nop
 800bc78:	000c00b0 	strheq	r0, [ip], -r0	; <UNPREDICTABLE>

0800bc7c <DmxParams::Load()>:
 800bc7c:	b508      	push	{r3, lr}
 800bc7e:	2300      	movs	r3, #0
 800bc80:	4601      	mov	r1, r0
 800bc82:	6043      	str	r3, [r0, #4]
 800bc84:	6800      	ldr	r0, [r0, #0]
 800bc86:	b120      	cbz	r0, 800bc92 <DmxParams::Load()+0x16>
 800bc88:	6803      	ldr	r3, [r0, #0]
 800bc8a:	3104      	adds	r1, #4
 800bc8c:	68db      	ldr	r3, [r3, #12]
 800bc8e:	4798      	blx	r3
 800bc90:	2001      	movs	r0, #1
 800bc92:	bd08      	pop	{r3, pc}

0800bc94 <DmxParams::Load(char const*, unsigned int)>:
 800bc94:	6803      	ldr	r3, [r0, #0]
 800bc96:	b1d3      	cbz	r3, 800bcce <DmxParams::Load(char const*, unsigned int)+0x3a>
 800bc98:	2300      	movs	r3, #0
 800bc9a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800bc9c:	460d      	mov	r5, r1
 800bc9e:	4616      	mov	r6, r2
 800bca0:	4604      	mov	r4, r0
 800bca2:	6043      	str	r3, [r0, #4]
 800bca4:	4602      	mov	r2, r0
 800bca6:	490a      	ldr	r1, [pc, #40]	; (800bcd0 <DmxParams::Load(char const*, unsigned int)+0x3c>)
 800bca8:	4668      	mov	r0, sp
 800bcaa:	f004 f931 	bl	800ff10 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800bcae:	4632      	mov	r2, r6
 800bcb0:	4629      	mov	r1, r5
 800bcb2:	4668      	mov	r0, sp
 800bcb4:	f004 f930 	bl	800ff18 <ReadConfigFile::Read(char const*, unsigned int)>
 800bcb8:	4621      	mov	r1, r4
 800bcba:	f851 0b04 	ldr.w	r0, [r1], #4
 800bcbe:	6803      	ldr	r3, [r0, #0]
 800bcc0:	689b      	ldr	r3, [r3, #8]
 800bcc2:	4798      	blx	r3
 800bcc4:	4668      	mov	r0, sp
 800bcc6:	f004 f926 	bl	800ff16 <ReadConfigFile::~ReadConfigFile()>
 800bcca:	b002      	add	sp, #8
 800bccc:	bd70      	pop	{r4, r5, r6, pc}
 800bcce:	4770      	bx	lr
 800bcd0:	0800bda1 	stmdaeq	r0, {r0, r5, r7, r8, sl, fp, ip, sp, pc}

0800bcd4 <DmxParams::callbackFunction(char const*)>:
 800bcd4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bcd6:	460d      	mov	r5, r1
 800bcd8:	4604      	mov	r4, r0
 800bcda:	492d      	ldr	r1, [pc, #180]	; (800bd90 <DmxParams::callbackFunction(char const*)+0xbc>)
 800bcdc:	4628      	mov	r0, r5
 800bcde:	f10d 0206 	add.w	r2, sp, #6
 800bce2:	f004 fa09 	bl	80100f8 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800bce6:	b988      	cbnz	r0, 800bd0c <DmxParams::callbackFunction(char const*)+0x38>
 800bce8:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800bcec:	6863      	ldr	r3, [r4, #4]
 800bcee:	2a5b      	cmp	r2, #91	; 0x5b
 800bcf0:	d907      	bls.n	800bd02 <DmxParams::callbackFunction(char const*)+0x2e>
 800bcf2:	2ab0      	cmp	r2, #176	; 0xb0
 800bcf4:	d005      	beq.n	800bd02 <DmxParams::callbackFunction(char const*)+0x2e>
 800bcf6:	8122      	strh	r2, [r4, #8]
 800bcf8:	f043 0301 	orr.w	r3, r3, #1
 800bcfc:	6063      	str	r3, [r4, #4]
 800bcfe:	b003      	add	sp, #12
 800bd00:	bd30      	pop	{r4, r5, pc}
 800bd02:	22b0      	movs	r2, #176	; 0xb0
 800bd04:	f023 0301 	bic.w	r3, r3, #1
 800bd08:	8122      	strh	r2, [r4, #8]
 800bd0a:	e7f7      	b.n	800bcfc <DmxParams::callbackFunction(char const*)+0x28>
 800bd0c:	4628      	mov	r0, r5
 800bd0e:	4921      	ldr	r1, [pc, #132]	; (800bd94 <DmxParams::callbackFunction(char const*)+0xc0>)
 800bd10:	f10d 0206 	add.w	r2, sp, #6
 800bd14:	f004 f9f0 	bl	80100f8 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800bd18:	b968      	cbnz	r0, 800bd36 <DmxParams::callbackFunction(char const*)+0x62>
 800bd1a:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800bd1e:	6863      	ldr	r3, [r4, #4]
 800bd20:	2a0c      	cmp	r2, #12
 800bd22:	bf93      	iteet	ls
 800bd24:	220c      	movls	r2, #12
 800bd26:	8162      	strhhi	r2, [r4, #10]
 800bd28:	f043 0302 	orrhi.w	r3, r3, #2
 800bd2c:	8162      	strhls	r2, [r4, #10]
 800bd2e:	bf98      	it	ls
 800bd30:	f023 0302 	bicls.w	r3, r3, #2
 800bd34:	e7e2      	b.n	800bcfc <DmxParams::callbackFunction(char const*)+0x28>
 800bd36:	4628      	mov	r0, r5
 800bd38:	4917      	ldr	r1, [pc, #92]	; (800bd98 <DmxParams::callbackFunction(char const*)+0xc4>)
 800bd3a:	f10d 0205 	add.w	r2, sp, #5
 800bd3e:	f004 f9f9 	bl	8010134 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800bd42:	b950      	cbnz	r0, 800bd5a <DmxParams::callbackFunction(char const*)+0x86>
 800bd44:	f89d 2005 	ldrb.w	r2, [sp, #5]
 800bd48:	6863      	ldr	r3, [r4, #4]
 800bd4a:	2a28      	cmp	r2, #40	; 0x28
 800bd4c:	7322      	strb	r2, [r4, #12]
 800bd4e:	bf14      	ite	ne
 800bd50:	f043 0304 	orrne.w	r3, r3, #4
 800bd54:	f023 0304 	biceq.w	r3, r3, #4
 800bd58:	e7d0      	b.n	800bcfc <DmxParams::callbackFunction(char const*)+0x28>
 800bd5a:	4628      	mov	r0, r5
 800bd5c:	490f      	ldr	r1, [pc, #60]	; (800bd9c <DmxParams::callbackFunction(char const*)+0xc8>)
 800bd5e:	f10d 0206 	add.w	r2, sp, #6
 800bd62:	f004 f9c9 	bl	80100f8 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800bd66:	2800      	cmp	r0, #0
 800bd68:	d1c9      	bne.n	800bcfe <DmxParams::callbackFunction(char const*)+0x2a>
 800bd6a:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800bd6e:	6863      	ldr	r3, [r4, #4]
 800bd70:	1e91      	subs	r1, r2, #2
 800bd72:	f5b1 7fff 	cmp.w	r1, #510	; 0x1fe
 800bd76:	bf2f      	iteee	cs
 800bd78:	22ff      	movcs	r2, #255	; 0xff
 800bd7a:	0852      	lsrcc	r2, r2, #1
 800bd7c:	f102 32ff 	addcc.w	r2, r2, #4294967295	; 0xffffffff
 800bd80:	7362      	strbcc	r2, [r4, #13]
 800bd82:	bf32      	itee	cc
 800bd84:	f043 0308 	orrcc.w	r3, r3, #8
 800bd88:	7362      	strbcs	r2, [r4, #13]
 800bd8a:	f023 0308 	biccs.w	r3, r3, #8
 800bd8e:	e7b5      	b.n	800bcfc <DmxParams::callbackFunction(char const*)+0x28>
 800bd90:	080148c4 	stmdaeq	r1, {r2, r6, r7, fp, lr}
 800bd94:	080148e8 	stmdaeq	r1, {r3, r5, r6, r7, fp, lr}
 800bd98:	080148db 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, fp, lr}
 800bd9c:	080148cf 	stmdaeq	r1, {r0, r1, r2, r3, r6, r7, fp, lr}

0800bda0 <DmxParams::staticCallbackFunction(void*, char const*)>:
 800bda0:	f7ff bf98 	b.w	800bcd4 <DmxParams::callbackFunction(char const*)>

0800bda4 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)>:
 800bda4:	b570      	push	{r4, r5, r6, lr}
 800bda6:	4604      	mov	r4, r0
 800bda8:	4615      	mov	r5, r2
 800bdaa:	461e      	mov	r6, r3
 800bdac:	b086      	sub	sp, #24
 800bdae:	3004      	adds	r0, #4
 800bdb0:	b361      	cbz	r1, 800be0c <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x68>
 800bdb2:	220a      	movs	r2, #10
 800bdb4:	f004 ff03 	bl	8010bbe <memmove>
 800bdb8:	462a      	mov	r2, r5
 800bdba:	4633      	mov	r3, r6
 800bdbc:	4931      	ldr	r1, [pc, #196]	; (800be84 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xe0>)
 800bdbe:	a803      	add	r0, sp, #12
 800bdc0:	f004 f806 	bl	800fdd0 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800bdc4:	6863      	ldr	r3, [r4, #4]
 800bdc6:	8922      	ldrh	r2, [r4, #8]
 800bdc8:	492f      	ldr	r1, [pc, #188]	; (800be88 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xe4>)
 800bdca:	f003 0301 	and.w	r3, r3, #1
 800bdce:	a803      	add	r0, sp, #12
 800bdd0:	f7ff ff20 	bl	800bc14 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800bdd4:	6863      	ldr	r3, [r4, #4]
 800bdd6:	492d      	ldr	r1, [pc, #180]	; (800be8c <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xe8>)
 800bdd8:	8962      	ldrh	r2, [r4, #10]
 800bdda:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800bdde:	a803      	add	r0, sp, #12
 800bde0:	f7ff ff18 	bl	800bc14 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800bde4:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 800bde8:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800bdec:	42a9      	cmp	r1, r5
 800bdee:	d222      	bcs.n	800be36 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x92>
 800bdf0:	9803      	ldr	r0, [sp, #12]
 800bdf2:	1a6d      	subs	r5, r5, r1
 800bdf4:	4408      	add	r0, r1
 800bdf6:	6861      	ldr	r1, [r4, #4]
 800bdf8:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800bdfc:	0749      	lsls	r1, r1, #29
 800bdfe:	7b23      	ldrb	r3, [r4, #12]
 800be00:	d40b      	bmi.n	800be1a <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x76>
 800be02:	b95a      	cbnz	r2, 800be1c <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x78>
 800be04:	9300      	str	r3, [sp, #0]
 800be06:	4a22      	ldr	r2, [pc, #136]	; (800be90 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xec>)
 800be08:	4b22      	ldr	r3, [pc, #136]	; (800be94 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf0>)
 800be0a:	e00a      	b.n	800be22 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x7e>
 800be0c:	6823      	ldr	r3, [r4, #0]
 800be0e:	4601      	mov	r1, r0
 800be10:	681a      	ldr	r2, [r3, #0]
 800be12:	4618      	mov	r0, r3
 800be14:	68d2      	ldr	r2, [r2, #12]
 800be16:	4790      	blx	r2
 800be18:	e7ce      	b.n	800bdb8 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x14>
 800be1a:	b37a      	cbz	r2, 800be7c <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xd8>
 800be1c:	9300      	str	r3, [sp, #0]
 800be1e:	4a1e      	ldr	r2, [pc, #120]	; (800be98 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf4>)
 800be20:	4b1c      	ldr	r3, [pc, #112]	; (800be94 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf0>)
 800be22:	4629      	mov	r1, r5
 800be24:	f005 fa3a 	bl	801129c <snprintf>
 800be28:	4285      	cmp	r5, r0
 800be2a:	bfa2      	ittt	ge
 800be2c:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800be30:	18c0      	addge	r0, r0, r3
 800be32:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800be36:	7b62      	ldrb	r2, [r4, #13]
 800be38:	6863      	ldr	r3, [r4, #4]
 800be3a:	3201      	adds	r2, #1
 800be3c:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 800be40:	4916      	ldr	r1, [pc, #88]	; (800be9c <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf8>)
 800be42:	0052      	lsls	r2, r2, #1
 800be44:	a803      	add	r0, sp, #12
 800be46:	f7ff fee5 	bl	800bc14 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800be4a:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800be4e:	b17b      	cbz	r3, 800be70 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xcc>
 800be50:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800be54:	9b03      	ldr	r3, [sp, #12]
 800be56:	4413      	add	r3, r2
 800be58:	227d      	movs	r2, #125	; 0x7d
 800be5a:	f803 2c01 	strb.w	r2, [r3, #-1]
 800be5e:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800be62:	9903      	ldr	r1, [sp, #12]
 800be64:	54ca      	strb	r2, [r1, r3]
 800be66:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800be6a:	3301      	adds	r3, #1
 800be6c:	f8ad 3012 	strh.w	r3, [sp, #18]
 800be70:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800be74:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800be76:	601a      	str	r2, [r3, #0]
 800be78:	b006      	add	sp, #24
 800be7a:	bd70      	pop	{r4, r5, r6, pc}
 800be7c:	9300      	str	r3, [sp, #0]
 800be7e:	4a08      	ldr	r2, [pc, #32]	; (800bea0 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xfc>)
 800be80:	4b04      	ldr	r3, [pc, #16]	; (800be94 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf0>)
 800be82:	e7ce      	b.n	800be22 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x7e>
 800be84:	080148f1 	stmdaeq	r1, {r0, r4, r5, r6, r7, fp, lr}
 800be88:	080148c4 	stmdaeq	r1, {r2, r6, r7, fp, lr}
 800be8c:	080148e8 	stmdaeq	r1, {r3, r5, r6, r7, fp, lr}
 800be90:	0801383d 	stmdaeq	r1, {r0, r2, r3, r4, r5, fp, ip, sp}
 800be94:	080148db 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, fp, lr}
 800be98:	08013834 	stmdaeq	r1, {r2, r4, r5, fp, ip, sp}
 800be9c:	080148cf 	stmdaeq	r1, {r0, r1, r2, r3, r6, r7, fp, lr}
 800bea0:	0801383e 	stmdaeq	r1, {r1, r2, r3, r4, r5, fp, ip, sp}

0800bea4 <DmxParams::Save(char*, unsigned int, unsigned int&)>:
 800bea4:	b513      	push	{r0, r1, r4, lr}
 800bea6:	6804      	ldr	r4, [r0, #0]
 800bea8:	b914      	cbnz	r4, 800beb0 <DmxParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800beaa:	601c      	str	r4, [r3, #0]
 800beac:	b002      	add	sp, #8
 800beae:	bd10      	pop	{r4, pc}
 800beb0:	9300      	str	r3, [sp, #0]
 800beb2:	4613      	mov	r3, r2
 800beb4:	460a      	mov	r2, r1
 800beb6:	2100      	movs	r1, #0
 800beb8:	f7ff ff74 	bl	800bda4 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)>
 800bebc:	e7f6      	b.n	800beac <DmxParams::Save(char*, unsigned int, unsigned int&)+0x8>
	...

0800bec0 <DmxParams::Set(Dmx*)>:
 800bec0:	b538      	push	{r3, r4, r5, lr}
 800bec2:	6843      	ldr	r3, [r0, #4]
 800bec4:	4604      	mov	r4, r0
 800bec6:	07d8      	lsls	r0, r3, #31
 800bec8:	460d      	mov	r5, r1
 800beca:	d503      	bpl.n	800bed4 <DmxParams::Set(Dmx*)+0x14>
 800becc:	4628      	mov	r0, r5
 800bece:	8921      	ldrh	r1, [r4, #8]
 800bed0:	f000 fde2 	bl	800ca98 <Dmx::SetDmxBreakTime(unsigned int)>
 800bed4:	6863      	ldr	r3, [r4, #4]
 800bed6:	0799      	lsls	r1, r3, #30
 800bed8:	d503      	bpl.n	800bee2 <DmxParams::Set(Dmx*)+0x22>
 800beda:	4628      	mov	r0, r5
 800bedc:	8961      	ldrh	r1, [r4, #10]
 800bede:	f000 fde5 	bl	800caac <Dmx::SetDmxMabTime(unsigned int)>
 800bee2:	6863      	ldr	r3, [r4, #4]
 800bee4:	075a      	lsls	r2, r3, #29
 800bee6:	d507      	bpl.n	800bef8 <DmxParams::Set(Dmx*)+0x38>
 800bee8:	7b21      	ldrb	r1, [r4, #12]
 800beea:	b111      	cbz	r1, 800bef2 <DmxParams::Set(Dmx*)+0x32>
 800beec:	4b08      	ldr	r3, [pc, #32]	; (800bf10 <DmxParams::Set(Dmx*)+0x50>)
 800beee:	fbb3 f1f1 	udiv	r1, r3, r1
 800bef2:	4628      	mov	r0, r5
 800bef4:	f000 fd90 	bl	800ca18 <Dmx::SetDmxPeriodTime(unsigned int)>
 800bef8:	6863      	ldr	r3, [r4, #4]
 800befa:	071b      	lsls	r3, r3, #28
 800befc:	d507      	bpl.n	800bf0e <DmxParams::Set(Dmx*)+0x4e>
 800befe:	7b61      	ldrb	r1, [r4, #13]
 800bf00:	4628      	mov	r0, r5
 800bf02:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800bf06:	3101      	adds	r1, #1
 800bf08:	0049      	lsls	r1, r1, #1
 800bf0a:	f000 bdd9 	b.w	800cac0 <Dmx::SetDmxSlots(unsigned short)>
 800bf0e:	bd38      	pop	{r3, r4, r5, pc}
 800bf10:	000f4240 	andeq	r4, pc, r0, asr #4

0800bf14 <DmxParams::Dump()>:
 800bf14:	4770      	bx	lr

0800bf16 <gpio_mode_output(unsigned int, unsigned int)>:
 800bf16:	460b      	mov	r3, r1
 800bf18:	2203      	movs	r2, #3
 800bf1a:	2110      	movs	r1, #16
 800bf1c:	f005 bcf0 	b.w	8011900 <gpio_init>

0800bf20 <gpio_mode_af(unsigned int, unsigned int)>:
 800bf20:	460b      	mov	r3, r1
 800bf22:	2203      	movs	r2, #3
 800bf24:	2118      	movs	r1, #24
 800bf26:	f005 bceb 	b.w	8011900 <gpio_init>
	...

0800bf2c <uart_dmx_config(unsigned int)>:
 800bf2c:	2302      	movs	r3, #2
 800bf2e:	b507      	push	{r0, r1, r2, lr}
 800bf30:	2208      	movs	r2, #8
 800bf32:	9300      	str	r3, [sp, #0]
 800bf34:	4903      	ldr	r1, [pc, #12]	; (800bf44 <uart_dmx_config(unsigned int)+0x18>)
 800bf36:	2300      	movs	r3, #0
 800bf38:	f006 fbb6 	bl	80126a8 <gd32_uart_begin>
 800bf3c:	b003      	add	sp, #12
 800bf3e:	f85d fb04 	ldr.w	pc, [sp], #4
 800bf42:	bf00      	nop
 800bf44:	0003d090 	muleq	r3, r0, r0

0800bf48 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)>:
 800bf48:	b570      	push	{r4, r5, r6, lr}
 800bf4a:	f3bf 8f5f 	dmb	sy
 800bf4e:	6803      	ldr	r3, [r0, #0]
 800bf50:	4c9a      	ldr	r4, [pc, #616]	; (800c1bc <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x274>)
 800bf52:	f013 0f02 	tst.w	r3, #2
 800bf56:	d00f      	beq.n	800bf78 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x30>
 800bf58:	6803      	ldr	r3, [r0, #0]
 800bf5a:	2200      	movs	r2, #0
 800bf5c:	f023 0302 	bic.w	r3, r3, #2
 800bf60:	6003      	str	r3, [r0, #0]
 800bf62:	6843      	ldr	r3, [r0, #4]
 800bf64:	f44f 7304 	mov.w	r3, #528	; 0x210
 800bf68:	fb03 4301 	mla	r3, r3, r1, r4
 800bf6c:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800bf70:	2202      	movs	r2, #2
 800bf72:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800bf76:	bd70      	pop	{r4, r5, r6, pc}
 800bf78:	f44f 7304 	mov.w	r3, #528	; 0x210
 800bf7c:	fb03 4201 	mla	r2, r3, r1, r4
 800bf80:	6845      	ldr	r5, [r0, #4]
 800bf82:	f8d2 220c 	ldr.w	r2, [r2, #524]	; 0x20c
 800bf86:	f3c5 0508 	ubfx	r5, r5, #0, #9
 800bf8a:	2a0a      	cmp	r2, #10
 800bf8c:	f200 810f 	bhi.w	800c1ae <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x266>
 800bf90:	e8df f012 	tbh	[pc, r2, lsl #1]
 800bf94:	010d000b 	tsteq	sp, fp
 800bf98:	010d0017 	tsteq	sp, r7, lsl r0
 800bf9c:	00720042 	rsbseq	r0, r2, r2, asr #32
 800bfa0:	009d008d 	addseq	r0, sp, sp, lsl #1
 800bfa4:	00d900c1 	sbcseq	r0, r9, r1, asr #1
 800bfa8:	220800ef 	andcs	r0, r8, #239	; 0xef
 800bfac:	4359      	muls	r1, r3
 800bfae:	1863      	adds	r3, r4, r1
 800bfb0:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800bfb4:	2201      	movs	r2, #1
 800bfb6:	5465      	strb	r5, [r4, r1]
 800bfb8:	f8a3 2204 	strh.w	r2, [r3, #516]	; 0x204
 800bfbc:	f3bf 8f5f 	dmb	sy
 800bfc0:	e7d9      	b.n	800bf76 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x2e>
 800bfc2:	b14d      	cbz	r5, 800bfd8 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x90>
 800bfc4:	2dcc      	cmp	r5, #204	; 0xcc
 800bfc6:	f44f 7304 	mov.w	r3, #528	; 0x210
 800bfca:	d01b      	beq.n	800c004 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0xbc>
 800bfcc:	2200      	movs	r2, #0
 800bfce:	fb03 4301 	mla	r3, r3, r1, r4
 800bfd2:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800bfd6:	e7f1      	b.n	800bfbc <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x74>
 800bfd8:	fb03 f001 	mul.w	r0, r3, r1
 800bfdc:	2301      	movs	r3, #1
 800bfde:	1826      	adds	r6, r4, r0
 800bfe0:	f8c6 3204 	str.w	r3, [r6, #516]	; 0x204
 800bfe4:	4b76      	ldr	r3, [pc, #472]	; (800c1c0 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x278>)
 800bfe6:	5425      	strb	r5, [r4, r0]
 800bfe8:	eb03 1301 	add.w	r3, r3, r1, lsl #4
 800bfec:	685a      	ldr	r2, [r3, #4]
 800bfee:	3201      	adds	r2, #1
 800bff0:	605a      	str	r2, [r3, #4]
 800bff2:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800bff6:	f8d2 2424 	ldr.w	r2, [r2, #1060]	; 0x424
 800bffa:	60da      	str	r2, [r3, #12]
 800bffc:	2304      	movs	r3, #4
 800bffe:	f8c6 320c 	str.w	r3, [r6, #524]	; 0x20c
 800c002:	e7db      	b.n	800bfbc <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x74>
 800c004:	434b      	muls	r3, r1
 800c006:	18e2      	adds	r2, r4, r3
 800c008:	54e5      	strb	r5, [r4, r3]
 800c00a:	4b6e      	ldr	r3, [pc, #440]	; (800c1c4 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x27c>)
 800c00c:	f8c2 3204 	str.w	r3, [r2, #516]	; 0x204
 800c010:	2305      	movs	r3, #5
 800c012:	f8c2 320c 	str.w	r3, [r2, #524]	; 0x20c
 800c016:	e7d1      	b.n	800bfbc <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x74>
 800c018:	fb03 4201 	mla	r2, r3, r1, r4
 800c01c:	f8d2 3204 	ldr.w	r3, [r2, #516]	; 0x204
 800c020:	b298      	uxth	r0, r3
 800c022:	3301      	adds	r3, #1
 800c024:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800c028:	5415      	strb	r5, [r2, r0]
 800c02a:	f8c2 3204 	str.w	r3, [r2, #516]	; 0x204
 800c02e:	d905      	bls.n	800c03c <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0xf4>
 800c030:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800c034:	f8c2 3204 	str.w	r3, [r2, #516]	; 0x204
 800c038:	2300      	movs	r3, #0
 800c03a:	e7ea      	b.n	800c012 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0xca>
 800c03c:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800c040:	485f      	ldr	r0, [pc, #380]	; (800c1c0 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x278>)
 800c042:	f8d2 4424 	ldr.w	r4, [r2, #1060]	; 0x424
 800c046:	eb00 1001 	add.w	r0, r0, r1, lsl #4
 800c04a:	68c3      	ldr	r3, [r0, #12]
 800c04c:	2902      	cmp	r1, #2
 800c04e:	ebc3 0344 	rsb	r3, r3, r4, lsl #1
 800c052:	60c4      	str	r4, [r0, #12]
 800c054:	f103 0304 	add.w	r3, r3, #4
 800c058:	d008      	beq.n	800c06c <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x124>
 800c05a:	2903      	cmp	r1, #3
 800c05c:	d009      	beq.n	800c072 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x12a>
 800c05e:	2901      	cmp	r1, #1
 800c060:	bf14      	ite	ne
 800c062:	f8c2 3434 	strne.w	r3, [r2, #1076]	; 0x434
 800c066:	f8c2 3438 	streq.w	r3, [r2, #1080]	; 0x438
 800c06a:	e7a7      	b.n	800bfbc <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x74>
 800c06c:	f8c2 343c 	str.w	r3, [r2, #1084]	; 0x43c
 800c070:	e7a4      	b.n	800bfbc <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x74>
 800c072:	f8c2 3440 	str.w	r3, [r2, #1088]	; 0x440
 800c076:	e7a1      	b.n	800bfbc <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x74>
 800c078:	fb03 4201 	mla	r2, r3, r1, r4
 800c07c:	f8b2 0204 	ldrh.w	r0, [r2, #516]	; 0x204
 800c080:	f8b2 6206 	ldrh.w	r6, [r2, #518]	; 0x206
 800c084:	5415      	strb	r5, [r2, r0]
 800c086:	1c43      	adds	r3, r0, #1
 800c088:	3817      	subs	r0, #23
 800c08a:	b29b      	uxth	r3, r3
 800c08c:	4435      	add	r5, r6
 800c08e:	28e7      	cmp	r0, #231	; 0xe7
 800c090:	f8a2 3204 	strh.w	r3, [r2, #516]	; 0x204
 800c094:	f8a2 5206 	strh.w	r5, [r2, #518]	; 0x206
 800c098:	d804      	bhi.n	800c0a4 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x15c>
 800c09a:	7890      	ldrb	r0, [r2, #2]
 800c09c:	4298      	cmp	r0, r3
 800c09e:	d101      	bne.n	800c0a4 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x15c>
 800c0a0:	2306      	movs	r3, #6
 800c0a2:	e7b6      	b.n	800c012 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0xca>
 800c0a4:	2bff      	cmp	r3, #255	; 0xff
 800c0a6:	d989      	bls.n	800bfbc <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x74>
 800c0a8:	f44f 7304 	mov.w	r3, #528	; 0x210
 800c0ac:	e78e      	b.n	800bfcc <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x84>
 800c0ae:	fb03 4301 	mla	r3, r3, r1, r4
 800c0b2:	f8b3 2204 	ldrh.w	r2, [r3, #516]	; 0x204
 800c0b6:	549d      	strb	r5, [r3, r2]
 800c0b8:	3201      	adds	r2, #1
 800c0ba:	f8a3 2204 	strh.w	r2, [r3, #516]	; 0x204
 800c0be:	f8b3 2206 	ldrh.w	r2, [r3, #518]	; 0x206
 800c0c2:	eba2 2505 	sub.w	r5, r2, r5, lsl #8
 800c0c6:	f8a3 5206 	strh.w	r5, [r3, #518]	; 0x206
 800c0ca:	2207      	movs	r2, #7
 800c0cc:	e781      	b.n	800bfd2 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x8a>
 800c0ce:	fb03 4201 	mla	r2, r3, r1, r4
 800c0d2:	f8b2 3204 	ldrh.w	r3, [r2, #516]	; 0x204
 800c0d6:	f8b2 0206 	ldrh.w	r0, [r2, #518]	; 0x206
 800c0da:	54d5      	strb	r5, [r2, r3]
 800c0dc:	3301      	adds	r3, #1
 800c0de:	1b45      	subs	r5, r0, r5
 800c0e0:	b29b      	uxth	r3, r3
 800c0e2:	b2ad      	uxth	r5, r5
 800c0e4:	f8a2 3204 	strh.w	r3, [r2, #516]	; 0x204
 800c0e8:	f8a2 5206 	strh.w	r5, [r2, #518]	; 0x206
 800c0ec:	b915      	cbnz	r5, 800c0f4 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x1ac>
 800c0ee:	7850      	ldrb	r0, [r2, #1]
 800c0f0:	2801      	cmp	r0, #1
 800c0f2:	d007      	beq.n	800c104 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x1bc>
 800c0f4:	f44f 7304 	mov.w	r3, #528	; 0x210
 800c0f8:	2200      	movs	r2, #0
 800c0fa:	fb03 4301 	mla	r3, r3, r1, r4
 800c0fe:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800c102:	e7d1      	b.n	800c0a8 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x160>
 800c104:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800c108:	f8a2 3204 	strh.w	r3, [r2, #516]	; 0x204
 800c10c:	4b2e      	ldr	r3, [pc, #184]	; (800c1c8 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x280>)
 800c10e:	685a      	ldr	r2, [r3, #4]
 800c110:	4b2e      	ldr	r3, [pc, #184]	; (800c1cc <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x284>)
 800c112:	601a      	str	r2, [r3, #0]
 800c114:	e7c8      	b.n	800c0a8 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x160>
 800c116:	fb03 4001 	mla	r0, r3, r1, r4
 800c11a:	f8b0 3204 	ldrh.w	r3, [r0, #516]	; 0x204
 800c11e:	2daa      	cmp	r5, #170	; 0xaa
 800c120:	54c5      	strb	r5, [r0, r3]
 800c122:	f103 0301 	add.w	r3, r3, #1
 800c126:	b29b      	uxth	r3, r3
 800c128:	f8a0 3204 	strh.w	r3, [r0, #516]	; 0x204
 800c12c:	d002      	beq.n	800c134 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x1ec>
 800c12e:	2b09      	cmp	r3, #9
 800c130:	f47f af44 	bne.w	800bfbc <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x74>
 800c134:	f44f 7304 	mov.w	r3, #528	; 0x210
 800c138:	2200      	movs	r2, #0
 800c13a:	fb03 4301 	mla	r3, r3, r1, r4
 800c13e:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 800c142:	2209      	movs	r2, #9
 800c144:	e745      	b.n	800bfd2 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x8a>
 800c146:	fb03 4301 	mla	r3, r3, r1, r4
 800c14a:	f8b3 2204 	ldrh.w	r2, [r3, #516]	; 0x204
 800c14e:	549d      	strb	r5, [r3, r2]
 800c150:	3201      	adds	r2, #1
 800c152:	f8a3 2204 	strh.w	r2, [r3, #516]	; 0x204
 800c156:	f8b3 2208 	ldrh.w	r2, [r3, #520]	; 0x208
 800c15a:	3201      	adds	r2, #1
 800c15c:	b292      	uxth	r2, r2
 800c15e:	2a0c      	cmp	r2, #12
 800c160:	d002      	beq.n	800c168 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x220>
 800c162:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 800c166:	e729      	b.n	800bfbc <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x74>
 800c168:	2200      	movs	r2, #0
 800c16a:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 800c16e:	220a      	movs	r2, #10
 800c170:	e72f      	b.n	800bfd2 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x8a>
 800c172:	fb03 4301 	mla	r3, r3, r1, r4
 800c176:	f8b3 1208 	ldrh.w	r1, [r3, #520]	; 0x208
 800c17a:	f8b3 2204 	ldrh.w	r2, [r3, #516]	; 0x204
 800c17e:	3101      	adds	r1, #1
 800c180:	b289      	uxth	r1, r1
 800c182:	549d      	strb	r5, [r3, r2]
 800c184:	3201      	adds	r2, #1
 800c186:	b292      	uxth	r2, r2
 800c188:	2904      	cmp	r1, #4
 800c18a:	f8a3 2204 	strh.w	r2, [r3, #516]	; 0x204
 800c18e:	f8a3 1208 	strh.w	r1, [r3, #520]	; 0x208
 800c192:	f47f af13 	bne.w	800bfbc <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x74>
 800c196:	2100      	movs	r1, #0
 800c198:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800c19c:	f8c3 120c 	str.w	r1, [r3, #524]	; 0x20c
 800c1a0:	f8a3 2204 	strh.w	r2, [r3, #516]	; 0x204
 800c1a4:	4b08      	ldr	r3, [pc, #32]	; (800c1c8 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x280>)
 800c1a6:	685a      	ldr	r2, [r3, #4]
 800c1a8:	4b08      	ldr	r3, [pc, #32]	; (800c1cc <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x284>)
 800c1aa:	601a      	str	r2, [r3, #0]
 800c1ac:	e706      	b.n	800bfbc <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x74>
 800c1ae:	2200      	movs	r2, #0
 800c1b0:	fb03 4301 	mla	r3, r3, r1, r4
 800c1b4:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800c1b8:	e70b      	b.n	800bfd2 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x8a>
 800c1ba:	bf00      	nop
 800c1bc:	20003168 	andcs	r3, r0, r8, ror #2
 800c1c0:	200041cc 	andcs	r4, r0, ip, asr #3
 800c1c4:	00cc0001 	sbceq	r0, ip, r1
 800c1c8:	e0001000 	and	r1, r0, r0
 800c1cc:	20004210 	andcs	r4, r0, r0, lsl r2

0800c1d0 <USART1_IRQHandler>:
 800c1d0:	2100      	movs	r1, #0
 800c1d2:	4801      	ldr	r0, [pc, #4]	; (800c1d8 <USART1_IRQHandler+0x8>)
 800c1d4:	f7ff beb8 	b.w	800bf48 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)>
 800c1d8:	40004400 	andmi	r4, r0, r0, lsl #8

0800c1dc <USART2_IRQHandler>:
 800c1dc:	2101      	movs	r1, #1
 800c1de:	4801      	ldr	r0, [pc, #4]	; (800c1e4 <USART2_IRQHandler+0x8>)
 800c1e0:	f7ff beb2 	b.w	800bf48 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)>
 800c1e4:	40004800 	andmi	r4, r0, r0, lsl #16

0800c1e8 <UART3_IRQHandler>:
 800c1e8:	2102      	movs	r1, #2
 800c1ea:	4801      	ldr	r0, [pc, #4]	; (800c1f0 <UART3_IRQHandler+0x8>)
 800c1ec:	f7ff beac 	b.w	800bf48 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)>
 800c1f0:	40004c00 	andmi	r4, r0, r0, lsl #24

0800c1f4 <UART4_IRQHandler>:
 800c1f4:	2103      	movs	r1, #3
 800c1f6:	4801      	ldr	r0, [pc, #4]	; (800c1fc <UART4_IRQHandler+0x8>)
 800c1f8:	f7ff bea6 	b.w	800bf48 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)>
 800c1fc:	40005000 	andmi	r5, r0, r0

0800c200 <TIMER1_IRQHandler>:
 800c200:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c202:	f3bf 8f5f 	dmb	sy
 800c206:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800c20a:	691e      	ldr	r6, [r3, #16]
 800c20c:	4d63      	ldr	r5, [pc, #396]	; (800c39c <TIMER1_IRQHandler+0x19c>)
 800c20e:	07b1      	lsls	r1, r6, #30
 800c210:	882c      	ldrh	r4, [r5, #0]
 800c212:	d541      	bpl.n	800c298 <TIMER1_IRQHandler+0x98>
 800c214:	2120      	movs	r1, #32
 800c216:	4862      	ldr	r0, [pc, #392]	; (800c3a0 <TIMER1_IRQHandler+0x1a0>)
 800c218:	f7ff fe7d 	bl	800bf16 <gpio_mode_output(unsigned int, unsigned int)>
 800c21c:	f014 0f01 	tst.w	r4, #1
 800c220:	4f60      	ldr	r7, [pc, #384]	; (800c3a4 <TIMER1_IRQHandler+0x1a4>)
 800c222:	d006      	beq.n	800c232 <TIMER1_IRQHandler+0x32>
 800c224:	882b      	ldrh	r3, [r5, #0]
 800c226:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800c22a:	802b      	strh	r3, [r5, #0]
 800c22c:	2320      	movs	r3, #32
 800c22e:	f8c7 3414 	str.w	r3, [r7, #1044]	; 0x414
 800c232:	f44f 7180 	mov.w	r1, #256	; 0x100
 800c236:	485a      	ldr	r0, [pc, #360]	; (800c3a0 <TIMER1_IRQHandler+0x1a0>)
 800c238:	f7ff fe6d 	bl	800bf16 <gpio_mode_output(unsigned int, unsigned int)>
 800c23c:	07a2      	lsls	r2, r4, #30
 800c23e:	d507      	bpl.n	800c250 <TIMER1_IRQHandler+0x50>
 800c240:	882b      	ldrh	r3, [r5, #0]
 800c242:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800c246:	802b      	strh	r3, [r5, #0]
 800c248:	f44f 7380 	mov.w	r3, #256	; 0x100
 800c24c:	f8c7 3414 	str.w	r3, [r7, #1044]	; 0x414
 800c250:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800c254:	4853      	ldr	r0, [pc, #332]	; (800c3a4 <TIMER1_IRQHandler+0x1a4>)
 800c256:	f7ff fe5e 	bl	800bf16 <gpio_mode_output(unsigned int, unsigned int)>
 800c25a:	0763      	lsls	r3, r4, #29
 800c25c:	d506      	bpl.n	800c26c <TIMER1_IRQHandler+0x6c>
 800c25e:	882b      	ldrh	r3, [r5, #0]
 800c260:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800c264:	802b      	strh	r3, [r5, #0]
 800c266:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800c26a:	617b      	str	r3, [r7, #20]
 800c26c:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 800c270:	484c      	ldr	r0, [pc, #304]	; (800c3a4 <TIMER1_IRQHandler+0x1a4>)
 800c272:	f7ff fe50 	bl	800bf16 <gpio_mode_output(unsigned int, unsigned int)>
 800c276:	0724      	lsls	r4, r4, #28
 800c278:	d506      	bpl.n	800c288 <TIMER1_IRQHandler+0x88>
 800c27a:	882b      	ldrh	r3, [r5, #0]
 800c27c:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 800c280:	802b      	strh	r3, [r5, #0]
 800c282:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800c286:	617b      	str	r3, [r7, #20]
 800c288:	4631      	mov	r1, r6
 800c28a:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800c28e:	f005 fea3 	bl	8011fd8 <timer_interrupt_flag_clear>
 800c292:	f3bf 8f5f 	dmb	sy
 800c296:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c298:	0770      	lsls	r0, r6, #29
 800c29a:	d51b      	bpl.n	800c2d4 <TIMER1_IRQHandler+0xd4>
 800c29c:	05e1      	lsls	r1, r4, #23
 800c29e:	d503      	bpl.n	800c2a8 <TIMER1_IRQHandler+0xa8>
 800c2a0:	2120      	movs	r1, #32
 800c2a2:	483f      	ldr	r0, [pc, #252]	; (800c3a0 <TIMER1_IRQHandler+0x1a0>)
 800c2a4:	f7ff fe3c 	bl	800bf20 <gpio_mode_af(unsigned int, unsigned int)>
 800c2a8:	05a2      	lsls	r2, r4, #22
 800c2aa:	d504      	bpl.n	800c2b6 <TIMER1_IRQHandler+0xb6>
 800c2ac:	f44f 7180 	mov.w	r1, #256	; 0x100
 800c2b0:	483b      	ldr	r0, [pc, #236]	; (800c3a0 <TIMER1_IRQHandler+0x1a0>)
 800c2b2:	f7ff fe35 	bl	800bf20 <gpio_mode_af(unsigned int, unsigned int)>
 800c2b6:	0563      	lsls	r3, r4, #21
 800c2b8:	d504      	bpl.n	800c2c4 <TIMER1_IRQHandler+0xc4>
 800c2ba:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800c2be:	4839      	ldr	r0, [pc, #228]	; (800c3a4 <TIMER1_IRQHandler+0x1a4>)
 800c2c0:	f7ff fe2e 	bl	800bf20 <gpio_mode_af(unsigned int, unsigned int)>
 800c2c4:	0527      	lsls	r7, r4, #20
 800c2c6:	d5df      	bpl.n	800c288 <TIMER1_IRQHandler+0x88>
 800c2c8:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 800c2cc:	4835      	ldr	r0, [pc, #212]	; (800c3a4 <TIMER1_IRQHandler+0x1a4>)
 800c2ce:	f7ff fe27 	bl	800bf20 <gpio_mode_af(unsigned int, unsigned int)>
 800c2d2:	e7d9      	b.n	800c288 <TIMER1_IRQHandler+0x88>
 800c2d4:	0735      	lsls	r5, r6, #28
 800c2d6:	d5d7      	bpl.n	800c288 <TIMER1_IRQHandler+0x88>
 800c2d8:	05e0      	lsls	r0, r4, #23
 800c2da:	d517      	bpl.n	800c30c <TIMER1_IRQHandler+0x10c>
 800c2dc:	4b32      	ldr	r3, [pc, #200]	; (800c3a8 <TIMER1_IRQHandler+0x1a8>)
 800c2de:	2180      	movs	r1, #128	; 0x80
 800c2e0:	f8d3 2080 	ldr.w	r2, [r3, #128]	; 0x80
 800c2e4:	4831      	ldr	r0, [pc, #196]	; (800c3ac <TIMER1_IRQHandler+0x1ac>)
 800c2e6:	f022 0201 	bic.w	r2, r2, #1
 800c2ea:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 800c2ee:	4a30      	ldr	r2, [pc, #192]	; (800c3b0 <TIMER1_IRQHandler+0x1b0>)
 800c2f0:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800c2f4:	f8b2 2202 	ldrh.w	r2, [r2, #514]	; 0x202
 800c2f8:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800c2fc:	f8d3 2080 	ldr.w	r2, [r3, #128]	; 0x80
 800c300:	f042 0201 	orr.w	r2, r2, #1
 800c304:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 800c308:	f005 ff32 	bl	8012170 <usart_dma_transmit_config>
 800c30c:	05a1      	lsls	r1, r4, #22
 800c30e:	d513      	bpl.n	800c338 <TIMER1_IRQHandler+0x138>
 800c310:	4b25      	ldr	r3, [pc, #148]	; (800c3a8 <TIMER1_IRQHandler+0x1a8>)
 800c312:	4828      	ldr	r0, [pc, #160]	; (800c3b4 <TIMER1_IRQHandler+0x1b4>)
 800c314:	69da      	ldr	r2, [r3, #28]
 800c316:	f022 0201 	bic.w	r2, r2, #1
 800c31a:	61da      	str	r2, [r3, #28]
 800c31c:	4a24      	ldr	r2, [pc, #144]	; (800c3b0 <TIMER1_IRQHandler+0x1b0>)
 800c31e:	f502 7101 	add.w	r1, r2, #516	; 0x204
 800c322:	f8b2 2406 	ldrh.w	r2, [r2, #1030]	; 0x406
 800c326:	6299      	str	r1, [r3, #40]	; 0x28
 800c328:	621a      	str	r2, [r3, #32]
 800c32a:	69da      	ldr	r2, [r3, #28]
 800c32c:	2180      	movs	r1, #128	; 0x80
 800c32e:	f042 0201 	orr.w	r2, r2, #1
 800c332:	61da      	str	r2, [r3, #28]
 800c334:	f005 ff1c 	bl	8012170 <usart_dma_transmit_config>
 800c338:	0562      	lsls	r2, r4, #21
 800c33a:	d515      	bpl.n	800c368 <TIMER1_IRQHandler+0x168>
 800c33c:	2104      	movs	r1, #4
 800c33e:	481e      	ldr	r0, [pc, #120]	; (800c3b8 <TIMER1_IRQHandler+0x1b8>)
 800c340:	f005 fa47 	bl	80117d2 <dma_channel_disable>
 800c344:	4a1a      	ldr	r2, [pc, #104]	; (800c3b0 <TIMER1_IRQHandler+0x1b0>)
 800c346:	4b18      	ldr	r3, [pc, #96]	; (800c3a8 <TIMER1_IRQHandler+0x1a8>)
 800c348:	f502 6181 	add.w	r1, r2, #1032	; 0x408
 800c34c:	f8b2 260a 	ldrh.w	r2, [r2, #1546]	; 0x60a
 800c350:	f8c3 1464 	str.w	r1, [r3, #1124]	; 0x464
 800c354:	4818      	ldr	r0, [pc, #96]	; (800c3b8 <TIMER1_IRQHandler+0x1b8>)
 800c356:	2104      	movs	r1, #4
 800c358:	f8c3 245c 	str.w	r2, [r3, #1116]	; 0x45c
 800c35c:	f005 fa31 	bl	80117c2 <dma_channel_enable>
 800c360:	2180      	movs	r1, #128	; 0x80
 800c362:	4816      	ldr	r0, [pc, #88]	; (800c3bc <TIMER1_IRQHandler+0x1bc>)
 800c364:	f005 ff04 	bl	8012170 <usart_dma_transmit_config>
 800c368:	0523      	lsls	r3, r4, #20
 800c36a:	d58d      	bpl.n	800c288 <TIMER1_IRQHandler+0x88>
 800c36c:	2103      	movs	r1, #3
 800c36e:	4812      	ldr	r0, [pc, #72]	; (800c3b8 <TIMER1_IRQHandler+0x1b8>)
 800c370:	f005 fa2f 	bl	80117d2 <dma_channel_disable>
 800c374:	4a0e      	ldr	r2, [pc, #56]	; (800c3b0 <TIMER1_IRQHandler+0x1b0>)
 800c376:	4b0c      	ldr	r3, [pc, #48]	; (800c3a8 <TIMER1_IRQHandler+0x1a8>)
 800c378:	f202 610c 	addw	r1, r2, #1548	; 0x60c
 800c37c:	f8b2 280e 	ldrh.w	r2, [r2, #2062]	; 0x80e
 800c380:	f8c3 1450 	str.w	r1, [r3, #1104]	; 0x450
 800c384:	480c      	ldr	r0, [pc, #48]	; (800c3b8 <TIMER1_IRQHandler+0x1b8>)
 800c386:	2103      	movs	r1, #3
 800c388:	f8c3 2448 	str.w	r2, [r3, #1096]	; 0x448
 800c38c:	f005 fa19 	bl	80117c2 <dma_channel_enable>
 800c390:	2180      	movs	r1, #128	; 0x80
 800c392:	480b      	ldr	r0, [pc, #44]	; (800c3c0 <TIMER1_IRQHandler+0x1c0>)
 800c394:	f005 feec 	bl	8012170 <usart_dma_transmit_config>
 800c398:	e776      	b.n	800c288 <TIMER1_IRQHandler+0x88>
 800c39a:	bf00      	nop
 800c39c:	200041c8 	andcs	r4, r0, r8, asr #3
 800c3a0:	40011400 	andmi	r1, r1, r0, lsl #8
 800c3a4:	40011000 	andmi	r1, r1, r0
 800c3a8:	40020000 	andmi	r0, r2, r0
 800c3ac:	40004400 	andmi	r4, r0, r0, lsl #8
 800c3b0:	200039a8 	andcs	r3, r0, r8, lsr #19
 800c3b4:	40004800 	andmi	r4, r0, r0, lsl #16
 800c3b8:	40020400 	andmi	r0, r2, r0, lsl #8
 800c3bc:	40004c00 	andmi	r4, r0, r0, lsl #24
 800c3c0:	40005000 	andmi	r5, r0, r0

0800c3c4 <TIMER2_IRQHandler>:
 800c3c4:	b508      	push	{r3, lr}
 800c3c6:	f3bf 8f5f 	dmb	sy
 800c3ca:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800c3ce:	f8d3 1410 	ldr.w	r1, [r3, #1040]	; 0x410
 800c3d2:	f011 0202 	ands.w	r2, r1, #2
 800c3d6:	d013      	beq.n	800c400 <TIMER2_IRQHandler+0x3c>
 800c3d8:	4b22      	ldr	r3, [pc, #136]	; (800c464 <TIMER2_IRQHandler+0xa0>)
 800c3da:	f8d3 220c 	ldr.w	r2, [r3, #524]	; 0x20c
 800c3de:	2a04      	cmp	r2, #4
 800c3e0:	d108      	bne.n	800c3f4 <TIMER2_IRQHandler+0x30>
 800c3e2:	2200      	movs	r2, #0
 800c3e4:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800c3e8:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 800c3ec:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800c3f0:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800c3f4:	481c      	ldr	r0, [pc, #112]	; (800c468 <TIMER2_IRQHandler+0xa4>)
 800c3f6:	f005 fdef 	bl	8011fd8 <timer_interrupt_flag_clear>
 800c3fa:	f3bf 8f5f 	dmb	sy
 800c3fe:	bd08      	pop	{r3, pc}
 800c400:	f011 0004 	ands.w	r0, r1, #4
 800c404:	d00d      	beq.n	800c422 <TIMER2_IRQHandler+0x5e>
 800c406:	4b17      	ldr	r3, [pc, #92]	; (800c464 <TIMER2_IRQHandler+0xa0>)
 800c408:	f8d3 041c 	ldr.w	r0, [r3, #1052]	; 0x41c
 800c40c:	2804      	cmp	r0, #4
 800c40e:	d1f1      	bne.n	800c3f4 <TIMER2_IRQHandler+0x30>
 800c410:	f8c3 241c 	str.w	r2, [r3, #1052]	; 0x41c
 800c414:	f8d3 2414 	ldr.w	r2, [r3, #1044]	; 0x414
 800c418:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800c41c:	f8c3 2414 	str.w	r2, [r3, #1044]	; 0x414
 800c420:	e7e8      	b.n	800c3f4 <TIMER2_IRQHandler+0x30>
 800c422:	f011 0208 	ands.w	r2, r1, #8
 800c426:	d00d      	beq.n	800c444 <TIMER2_IRQHandler+0x80>
 800c428:	4b0e      	ldr	r3, [pc, #56]	; (800c464 <TIMER2_IRQHandler+0xa0>)
 800c42a:	f8d3 262c 	ldr.w	r2, [r3, #1580]	; 0x62c
 800c42e:	2a04      	cmp	r2, #4
 800c430:	d1e0      	bne.n	800c3f4 <TIMER2_IRQHandler+0x30>
 800c432:	f8d3 2624 	ldr.w	r2, [r3, #1572]	; 0x624
 800c436:	f8c3 062c 	str.w	r0, [r3, #1580]	; 0x62c
 800c43a:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800c43e:	f8c3 2624 	str.w	r2, [r3, #1572]	; 0x624
 800c442:	e7d7      	b.n	800c3f4 <TIMER2_IRQHandler+0x30>
 800c444:	06cb      	lsls	r3, r1, #27
 800c446:	d5d5      	bpl.n	800c3f4 <TIMER2_IRQHandler+0x30>
 800c448:	4b06      	ldr	r3, [pc, #24]	; (800c464 <TIMER2_IRQHandler+0xa0>)
 800c44a:	f8d3 083c 	ldr.w	r0, [r3, #2108]	; 0x83c
 800c44e:	2804      	cmp	r0, #4
 800c450:	bf01      	itttt	eq
 800c452:	f8c3 283c 	streq.w	r2, [r3, #2108]	; 0x83c
 800c456:	f8d3 2834 	ldreq.w	r2, [r3, #2100]	; 0x834
 800c45a:	f442 4200 	orreq.w	r2, r2, #32768	; 0x8000
 800c45e:	f8c3 2834 	streq.w	r2, [r3, #2100]	; 0x834
 800c462:	e7c7      	b.n	800c3f4 <TIMER2_IRQHandler+0x30>
 800c464:	20003168 	andcs	r3, r0, r8, ror #2
 800c468:	40000400 	andmi	r0, r0, r0, lsl #8

0800c46c <TIMER3_IRQHandler>:
 800c46c:	b508      	push	{r3, lr}
 800c46e:	f3bf 8f5f 	dmb	sy
 800c472:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800c476:	4804      	ldr	r0, [pc, #16]	; (800c488 <TIMER3_IRQHandler+0x1c>)
 800c478:	f8d3 1810 	ldr.w	r1, [r3, #2064]	; 0x810
 800c47c:	f005 fdac 	bl	8011fd8 <timer_interrupt_flag_clear>
 800c480:	f3bf 8f5f 	dmb	sy
 800c484:	bd08      	pop	{r3, pc}
 800c486:	bf00      	nop
 800c488:	40000800 	andmi	r0, r0, r0, lsl #16

0800c48c <TIMER6_IRQHandler>:
 800c48c:	b538      	push	{r3, r4, r5, lr}
 800c48e:	f3bf 8f5f 	dmb	sy
 800c492:	2300      	movs	r3, #0
 800c494:	4809      	ldr	r0, [pc, #36]	; (800c4bc <TIMER6_IRQHandler+0x30>)
 800c496:	eb00 1203 	add.w	r2, r0, r3, lsl #4
 800c49a:	6851      	ldr	r1, [r2, #4]
 800c49c:	6895      	ldr	r5, [r2, #8]
 800c49e:	011c      	lsls	r4, r3, #4
 800c4a0:	1b49      	subs	r1, r1, r5
 800c4a2:	5101      	str	r1, [r0, r4]
 800c4a4:	6851      	ldr	r1, [r2, #4]
 800c4a6:	3301      	adds	r3, #1
 800c4a8:	2b04      	cmp	r3, #4
 800c4aa:	6091      	str	r1, [r2, #8]
 800c4ac:	d1f3      	bne.n	800c496 <TIMER6_IRQHandler+0xa>
 800c4ae:	2101      	movs	r1, #1
 800c4b0:	4803      	ldr	r0, [pc, #12]	; (800c4c0 <TIMER6_IRQHandler+0x34>)
 800c4b2:	f005 fd91 	bl	8011fd8 <timer_interrupt_flag_clear>
 800c4b6:	f3bf 8f5f 	dmb	sy
 800c4ba:	bd38      	pop	{r3, r4, r5, pc}
 800c4bc:	200041cc 	andcs	r4, r0, ip, asr #3
 800c4c0:	40001400 	andmi	r1, r0, r0, lsl #8

0800c4c4 <Dmx::ClearData(unsigned int)>:
 800c4c4:	f44f 7301 	mov.w	r3, #516	; 0x204
 800c4c8:	b510      	push	{r4, lr}
 800c4ca:	2400      	movs	r4, #0
 800c4cc:	4a08      	ldr	r2, [pc, #32]	; (800c4f0 <Dmx::ClearData(unsigned int)+0x2c>)
 800c4ce:	fb03 2301 	mla	r3, r3, r1, r2
 800c4d2:	f203 2002 	addw	r0, r3, #514	; 0x202
 800c4d6:	f823 4b02 	strh.w	r4, [r3], #2
 800c4da:	4283      	cmp	r3, r0
 800c4dc:	d1fb      	bne.n	800c4d6 <Dmx::ClearData(unsigned int)+0x12>
 800c4de:	f44f 7301 	mov.w	r3, #516	; 0x204
 800c4e2:	fb03 2201 	mla	r2, r3, r1, r2
 800c4e6:	f240 2301 	movw	r3, #513	; 0x201
 800c4ea:	f8a2 3202 	strh.w	r3, [r2, #514]	; 0x202
 800c4ee:	bd10      	pop	{r4, pc}
 800c4f0:	200039a8 	andcs	r3, r0, r8, lsr #19

0800c4f4 <Dmx::StartData(unsigned int, unsigned int)>:
 800c4f4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c4f6:	eb00 0082 	add.w	r0, r0, r2, lsl #2
 800c4fa:	6943      	ldr	r3, [r0, #20]
 800c4fc:	460d      	mov	r5, r1
 800c4fe:	4614      	mov	r4, r2
 800c500:	b085      	sub	sp, #20
 800c502:	2b00      	cmp	r3, #0
 800c504:	d16a      	bne.n	800c5dc <Dmx::StartData(unsigned int, unsigned int)+0xe8>
 800c506:	4e52      	ldr	r6, [pc, #328]	; (800c650 <Dmx::StartData(unsigned int, unsigned int)+0x15c>)
 800c508:	8835      	ldrh	r5, [r6, #0]
 800c50a:	2d00      	cmp	r5, #0
 800c50c:	d15b      	bne.n	800c5c6 <Dmx::StartData(unsigned int, unsigned int)+0xd2>
 800c50e:	f44f 60e0 	mov.w	r0, #1792	; 0x700
 800c512:	f005 fa8d 	bl	8011a30 <rcu_periph_clock_enable>
 800c516:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800c51a:	f005 fbfd 	bl	8011d18 <timer_deinit>
 800c51e:	2377      	movs	r3, #119	; 0x77
 800c520:	9300      	str	r3, [sp, #0]
 800c522:	4b4c      	ldr	r3, [pc, #304]	; (800c654 <Dmx::StartData(unsigned int, unsigned int)+0x160>)
 800c524:	4669      	mov	r1, sp
 800c526:	681b      	ldr	r3, [r3, #0]
 800c528:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800c52c:	9302      	str	r3, [sp, #8]
 800c52e:	f8ad 5004 	strh.w	r5, [sp, #4]
 800c532:	f8ad 500c 	strh.w	r5, [sp, #12]
 800c536:	f88d 500e 	strb.w	r5, [sp, #14]
 800c53a:	f005 fc93 	bl	8011e64 <timer_init>
 800c53e:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800c542:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800c546:	f005 fd4a 	bl	8011fde <timer_flag_clear>
 800c54a:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800c54e:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800c552:	f005 fd41 	bl	8011fd8 <timer_interrupt_flag_clear>
 800c556:	2210      	movs	r2, #16
 800c558:	4629      	mov	r1, r5
 800c55a:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800c55e:	f005 fcde 	bl	8011f1e <timer_channel_output_mode_config>
 800c562:	2210      	movs	r2, #16
 800c564:	2101      	movs	r1, #1
 800c566:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800c56a:	f005 fcd8 	bl	8011f1e <timer_channel_output_mode_config>
 800c56e:	4f3a      	ldr	r7, [pc, #232]	; (800c658 <Dmx::StartData(unsigned int, unsigned int)+0x164>)
 800c570:	2210      	movs	r2, #16
 800c572:	2102      	movs	r1, #2
 800c574:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800c578:	f005 fcd1 	bl	8011f1e <timer_channel_output_mode_config>
 800c57c:	462a      	mov	r2, r5
 800c57e:	4629      	mov	r1, r5
 800c580:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800c584:	f005 fcf1 	bl	8011f6a <timer_channel_output_pulse_value_config>
 800c588:	2101      	movs	r1, #1
 800c58a:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800c58e:	883a      	ldrh	r2, [r7, #0]
 800c590:	f005 fceb 	bl	8011f6a <timer_channel_output_pulse_value_config>
 800c594:	4b31      	ldr	r3, [pc, #196]	; (800c65c <Dmx::StartData(unsigned int, unsigned int)+0x168>)
 800c596:	683a      	ldr	r2, [r7, #0]
 800c598:	681b      	ldr	r3, [r3, #0]
 800c59a:	2102      	movs	r1, #2
 800c59c:	441a      	add	r2, r3
 800c59e:	b292      	uxth	r2, r2
 800c5a0:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800c5a4:	f005 fce1 	bl	8011f6a <timer_channel_output_pulse_value_config>
 800c5a8:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800c5ac:	210e      	movs	r1, #14
 800c5ae:	f005 fd0f 	bl	8011fd0 <timer_interrupt_enable>
 800c5b2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800c5b6:	4b2a      	ldr	r3, [pc, #168]	; (800c660 <Dmx::StartData(unsigned int, unsigned int)+0x16c>)
 800c5b8:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800c5bc:	f883 531c 	strb.w	r5, [r3, #796]	; 0x31c
 800c5c0:	601a      	str	r2, [r3, #0]
 800c5c2:	f005 fca7 	bl	8011f14 <timer_enable>
 800c5c6:	2201      	movs	r2, #1
 800c5c8:	8831      	ldrh	r1, [r6, #0]
 800c5ca:	fa02 f304 	lsl.w	r3, r2, r4
 800c5ce:	430b      	orrs	r3, r1
 800c5d0:	8033      	strh	r3, [r6, #0]
 800c5d2:	4b24      	ldr	r3, [pc, #144]	; (800c664 <Dmx::StartData(unsigned int, unsigned int)+0x170>)
 800c5d4:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
 800c5d8:	b005      	add	sp, #20
 800c5da:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c5dc:	f44f 7204 	mov.w	r2, #528	; 0x210
 800c5e0:	4b21      	ldr	r3, [pc, #132]	; (800c668 <Dmx::StartData(unsigned int, unsigned int)+0x174>)
 800c5e2:	fb02 3304 	mla	r3, r2, r4, r3
 800c5e6:	2200      	movs	r2, #0
 800c5e8:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800c5ec:	2107      	movs	r1, #7
 800c5ee:	4628      	mov	r0, r5
 800c5f0:	f005 fdc4 	bl	801217c <usart_flag_get>
 800c5f4:	2800      	cmp	r0, #0
 800c5f6:	d0f9      	beq.n	800c5ec <Dmx::StartData(unsigned int, unsigned int)+0xf8>
 800c5f8:	4628      	mov	r0, r5
 800c5fa:	491c      	ldr	r1, [pc, #112]	; (800c66c <Dmx::StartData(unsigned int, unsigned int)+0x178>)
 800c5fc:	f005 fddf 	bl	80121be <usart_interrupt_flag_clear>
 800c600:	f240 3105 	movw	r1, #773	; 0x305
 800c604:	4628      	mov	r0, r5
 800c606:	f005 fdc1 	bl	801218c <usart_interrupt_enable>
 800c60a:	2202      	movs	r2, #2
 800c60c:	4b15      	ldr	r3, [pc, #84]	; (800c664 <Dmx::StartData(unsigned int, unsigned int)+0x170>)
 800c60e:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
 800c612:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800c616:	2c03      	cmp	r4, #3
 800c618:	d814      	bhi.n	800c644 <Dmx::StartData(unsigned int, unsigned int)+0x150>
 800c61a:	e8df f004 	tbb	[pc, r4]
 800c61e:	130e0902 	movwne	r0, #59650	; 0xe902
 800c622:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 800c626:	f042 0202 	orr.w	r2, r2, #2
 800c62a:	f8c3 240c 	str.w	r2, [r3, #1036]	; 0x40c
 800c62e:	e7d3      	b.n	800c5d8 <Dmx::StartData(unsigned int, unsigned int)+0xe4>
 800c630:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 800c634:	f042 0204 	orr.w	r2, r2, #4
 800c638:	e7f7      	b.n	800c62a <Dmx::StartData(unsigned int, unsigned int)+0x136>
 800c63a:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 800c63e:	f042 0208 	orr.w	r2, r2, #8
 800c642:	e7f2      	b.n	800c62a <Dmx::StartData(unsigned int, unsigned int)+0x136>
 800c644:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 800c648:	f042 0210 	orr.w	r2, r2, #16
 800c64c:	e7ed      	b.n	800c62a <Dmx::StartData(unsigned int, unsigned int)+0x136>
 800c64e:	bf00      	nop
 800c650:	200041c8 	andcs	r4, r0, r8, asr #3
 800c654:	20000008 	andcs	r0, r0, r8
 800c658:	20000010 	andcs	r0, r0, r0, lsl r0
 800c65c:	2000000c 	andcs	r0, r0, ip
 800c660:	e000e100 	and	lr, r0, r0, lsl #2
 800c664:	200041b8 			; <UNDEFINED> instruction: 0x200041b8
 800c668:	20003168 	andcs	r3, r0, r8, ror #2
 800c66c:	00050305 	andeq	r0, r5, r5, lsl #6

0800c670 <Dmx::StopData(unsigned int, unsigned int)>:
 800c670:	b538      	push	{r3, r4, r5, lr}
 800c672:	4d22      	ldr	r5, [pc, #136]	; (800c6fc <Dmx::StopData(unsigned int, unsigned int)+0x8c>)
 800c674:	4614      	mov	r4, r2
 800c676:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 800c67a:	4603      	mov	r3, r0
 800c67c:	4608      	mov	r0, r1
 800c67e:	b18a      	cbz	r2, 800c6a4 <Dmx::StopData(unsigned int, unsigned int)+0x34>
 800c680:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 800c684:	695b      	ldr	r3, [r3, #20]
 800c686:	b973      	cbnz	r3, 800c6a6 <Dmx::StopData(unsigned int, unsigned int)+0x36>
 800c688:	2201      	movs	r2, #1
 800c68a:	491d      	ldr	r1, [pc, #116]	; (800c700 <Dmx::StopData(unsigned int, unsigned int)+0x90>)
 800c68c:	f104 0308 	add.w	r3, r4, #8
 800c690:	fa02 f303 	lsl.w	r3, r2, r3
 800c694:	40a2      	lsls	r2, r4
 800c696:	4313      	orrs	r3, r2
 800c698:	880a      	ldrh	r2, [r1, #0]
 800c69a:	4013      	ands	r3, r2
 800c69c:	800b      	strh	r3, [r1, #0]
 800c69e:	2300      	movs	r3, #0
 800c6a0:	f845 3024 	str.w	r3, [r5, r4, lsl #2]
 800c6a4:	bd38      	pop	{r3, r4, r5, pc}
 800c6a6:	f240 3105 	movw	r1, #773	; 0x305
 800c6aa:	f005 fd7b 	bl	80121a4 <usart_interrupt_disable>
 800c6ae:	f44f 7204 	mov.w	r2, #528	; 0x210
 800c6b2:	4b14      	ldr	r3, [pc, #80]	; (800c704 <Dmx::StopData(unsigned int, unsigned int)+0x94>)
 800c6b4:	fb02 3304 	mla	r3, r2, r4, r3
 800c6b8:	2200      	movs	r2, #0
 800c6ba:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800c6be:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800c6c2:	2c03      	cmp	r4, #3
 800c6c4:	d814      	bhi.n	800c6f0 <Dmx::StopData(unsigned int, unsigned int)+0x80>
 800c6c6:	e8df f004 	tbb	[pc, r4]
 800c6ca:	130e0902 	movwne	r0, #59650	; 0xe902
 800c6ce:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 800c6d2:	f022 0202 	bic.w	r2, r2, #2
 800c6d6:	f8c3 240c 	str.w	r2, [r3, #1036]	; 0x40c
 800c6da:	e7e0      	b.n	800c69e <Dmx::StopData(unsigned int, unsigned int)+0x2e>
 800c6dc:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 800c6e0:	f022 0204 	bic.w	r2, r2, #4
 800c6e4:	e7f7      	b.n	800c6d6 <Dmx::StopData(unsigned int, unsigned int)+0x66>
 800c6e6:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 800c6ea:	f022 0208 	bic.w	r2, r2, #8
 800c6ee:	e7f2      	b.n	800c6d6 <Dmx::StopData(unsigned int, unsigned int)+0x66>
 800c6f0:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 800c6f4:	f022 0210 	bic.w	r2, r2, #16
 800c6f8:	e7ed      	b.n	800c6d6 <Dmx::StopData(unsigned int, unsigned int)+0x66>
 800c6fa:	bf00      	nop
 800c6fc:	200041b8 			; <UNDEFINED> instruction: 0x200041b8
 800c700:	200041c8 	andcs	r4, r0, r8, asr #3
 800c704:	20003168 	andcs	r3, r0, r8, ror #2

0800c708 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>:
 800c708:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c70c:	4616      	mov	r6, r2
 800c70e:	461f      	mov	r7, r3
 800c710:	eb00 0381 	add.w	r3, r0, r1, lsl #2
 800c714:	695a      	ldr	r2, [r3, #20]
 800c716:	028d      	lsls	r5, r1, #10
 800c718:	f105 4580 	add.w	r5, r5, #1073741824	; 0x40000000
 800c71c:	42b2      	cmp	r2, r6
 800c71e:	4680      	mov	r8, r0
 800c720:	460c      	mov	r4, r1
 800c722:	f505 4588 	add.w	r5, r5, #17408	; 0x4400
 800c726:	d019      	beq.n	800c75c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x54>
 800c728:	460a      	mov	r2, r1
 800c72a:	615e      	str	r6, [r3, #20]
 800c72c:	4629      	mov	r1, r5
 800c72e:	f7ff ff9f 	bl	800c670 <Dmx::StopData(unsigned int, unsigned int)>
 800c732:	b94e      	cbnz	r6, 800c748 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x40>
 800c734:	4b10      	ldr	r3, [pc, #64]	; (800c778 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x70>)
 800c736:	f853 2034 	ldr.w	r2, [r3, r4, lsl #3]
 800c73a:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800c73e:	685b      	ldr	r3, [r3, #4]
 800c740:	6113      	str	r3, [r2, #16]
 800c742:	b967      	cbnz	r7, 800c75e <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x56>
 800c744:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c748:	2e01      	cmp	r6, #1
 800c74a:	d1fa      	bne.n	800c742 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x3a>
 800c74c:	4b0a      	ldr	r3, [pc, #40]	; (800c778 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x70>)
 800c74e:	f853 2034 	ldr.w	r2, [r3, r4, lsl #3]
 800c752:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800c756:	685b      	ldr	r3, [r3, #4]
 800c758:	6153      	str	r3, [r2, #20]
 800c75a:	e7f2      	b.n	800c742 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x3a>
 800c75c:	b137      	cbz	r7, 800c76c <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x64>
 800c75e:	4622      	mov	r2, r4
 800c760:	4629      	mov	r1, r5
 800c762:	4640      	mov	r0, r8
 800c764:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800c768:	f7ff bec4 	b.w	800c4f4 <Dmx::StartData(unsigned int, unsigned int)>
 800c76c:	460a      	mov	r2, r1
 800c76e:	4629      	mov	r1, r5
 800c770:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800c774:	f7ff bf7c 	b.w	800c670 <Dmx::StopData(unsigned int, unsigned int)>
 800c778:	080148fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, fp, lr}

0800c77c <Dmx::Dmx()>:
 800c77c:	230c      	movs	r3, #12
 800c77e:	225c      	movs	r2, #92	; 0x5c
 800c780:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c784:	e9c0 2300 	strd	r2, r3, [r0]
 800c788:	f246 13a8 	movw	r3, #25000	; 0x61a8
 800c78c:	e9c0 3302 	strd	r3, r3, [r0, #8]
 800c790:	f44f 7300 	mov.w	r3, #512	; 0x200
 800c794:	2500      	movs	r5, #0
 800c796:	4606      	mov	r6, r0
 800c798:	8203      	strh	r3, [r0, #16]
 800c79a:	4b8d      	ldr	r3, [pc, #564]	; (800c9d0 <Dmx::Dmx()+0x254>)
 800c79c:	4f8d      	ldr	r7, [pc, #564]	; (800c9d4 <Dmx::Dmx()+0x258>)
 800c79e:	6018      	str	r0, [r3, #0]
 800c7a0:	4b8d      	ldr	r3, [pc, #564]	; (800c9d8 <Dmx::Dmx()+0x25c>)
 800c7a2:	f8df 9238 	ldr.w	r9, [pc, #568]	; 800c9dc <Dmx::Dmx()+0x260>
 800c7a6:	f8df 8238 	ldr.w	r8, [pc, #568]	; 800c9e0 <Dmx::Dmx()+0x264>
 800c7aa:	b089      	sub	sp, #36	; 0x24
 800c7ac:	801d      	strh	r5, [r3, #0]
 800c7ae:	2400      	movs	r4, #0
 800c7b0:	687b      	ldr	r3, [r7, #4]
 800c7b2:	2203      	movs	r2, #3
 800c7b4:	2110      	movs	r1, #16
 800c7b6:	f857 0b08 	ldr.w	r0, [r7], #8
 800c7ba:	f005 f8a1 	bl	8011900 <gpio_init>
 800c7be:	4629      	mov	r1, r5
 800c7c0:	4630      	mov	r0, r6
 800c7c2:	f7ff fe7f 	bl	800c4c4 <Dmx::ClearData(unsigned int)>
 800c7c6:	4623      	mov	r3, r4
 800c7c8:	f849 4025 	str.w	r4, [r9, r5, lsl #2]
 800c7cc:	2201      	movs	r2, #1
 800c7ce:	4630      	mov	r0, r6
 800c7d0:	f7ff ff9a 	bl	800c708 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 800c7d4:	f44f 7304 	mov.w	r3, #528	; 0x210
 800c7d8:	fb03 8305 	mla	r3, r3, r5, r8
 800c7dc:	3501      	adds	r5, #1
 800c7de:	2d04      	cmp	r5, #4
 800c7e0:	f8c3 420c 	str.w	r4, [r3, #524]	; 0x20c
 800c7e4:	d1e3      	bne.n	800c7ae <Dmx::Dmx()+0x32>
 800c7e6:	2701      	movs	r7, #1
 800c7e8:	f44f 5900 	mov.w	r9, #8192	; 0x2000
 800c7ec:	f44f 7880 	mov.w	r8, #256	; 0x100
 800c7f0:	f44f 60a0 	mov.w	r0, #1280	; 0x500
 800c7f4:	f005 f91c 	bl	8011a30 <rcu_periph_clock_enable>
 800c7f8:	f240 5001 	movw	r0, #1281	; 0x501
 800c7fc:	f005 f918 	bl	8011a30 <rcu_periph_clock_enable>
 800c800:	2106      	movs	r1, #6
 800c802:	4878      	ldr	r0, [pc, #480]	; (800c9e4 <Dmx::Dmx()+0x268>)
 800c804:	f004 ff7e 	bl	8011704 <dma_deinit>
 800c808:	4b77      	ldr	r3, [pc, #476]	; (800c9e8 <Dmx::Dmx()+0x26c>)
 800c80a:	aa01      	add	r2, sp, #4
 800c80c:	2106      	movs	r1, #6
 800c80e:	4875      	ldr	r0, [pc, #468]	; (800c9e4 <Dmx::Dmx()+0x268>)
 800c810:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800c814:	f8ad 801c 	strh.w	r8, [sp, #28]
 800c818:	9404      	str	r4, [sp, #16]
 800c81a:	f8cd 9018 	str.w	r9, [sp, #24]
 800c81e:	f88d 701e 	strb.w	r7, [sp, #30]
 800c822:	f004 ff8d 	bl	8011740 <dma_init>
 800c826:	2106      	movs	r1, #6
 800c828:	486e      	ldr	r0, [pc, #440]	; (800c9e4 <Dmx::Dmx()+0x268>)
 800c82a:	f004 ffba 	bl	80117a2 <dma_circulation_disable>
 800c82e:	2106      	movs	r1, #6
 800c830:	486c      	ldr	r0, [pc, #432]	; (800c9e4 <Dmx::Dmx()+0x268>)
 800c832:	f004 ffbe 	bl	80117b2 <dma_memory_to_memory_disable>
 800c836:	4639      	mov	r1, r7
 800c838:	486a      	ldr	r0, [pc, #424]	; (800c9e4 <Dmx::Dmx()+0x268>)
 800c83a:	f004 ff63 	bl	8011704 <dma_deinit>
 800c83e:	4b6b      	ldr	r3, [pc, #428]	; (800c9ec <Dmx::Dmx()+0x270>)
 800c840:	aa01      	add	r2, sp, #4
 800c842:	4639      	mov	r1, r7
 800c844:	4867      	ldr	r0, [pc, #412]	; (800c9e4 <Dmx::Dmx()+0x268>)
 800c846:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800c84a:	f8ad 801c 	strh.w	r8, [sp, #28]
 800c84e:	9404      	str	r4, [sp, #16]
 800c850:	f8cd 9018 	str.w	r9, [sp, #24]
 800c854:	f88d 701e 	strb.w	r7, [sp, #30]
 800c858:	f004 ff72 	bl	8011740 <dma_init>
 800c85c:	4639      	mov	r1, r7
 800c85e:	4861      	ldr	r0, [pc, #388]	; (800c9e4 <Dmx::Dmx()+0x268>)
 800c860:	f004 ff9f 	bl	80117a2 <dma_circulation_disable>
 800c864:	4639      	mov	r1, r7
 800c866:	485f      	ldr	r0, [pc, #380]	; (800c9e4 <Dmx::Dmx()+0x268>)
 800c868:	f004 ffa3 	bl	80117b2 <dma_memory_to_memory_disable>
 800c86c:	4629      	mov	r1, r5
 800c86e:	4860      	ldr	r0, [pc, #384]	; (800c9f0 <Dmx::Dmx()+0x274>)
 800c870:	f004 ff48 	bl	8011704 <dma_deinit>
 800c874:	4b5f      	ldr	r3, [pc, #380]	; (800c9f4 <Dmx::Dmx()+0x278>)
 800c876:	aa01      	add	r2, sp, #4
 800c878:	4629      	mov	r1, r5
 800c87a:	485d      	ldr	r0, [pc, #372]	; (800c9f0 <Dmx::Dmx()+0x274>)
 800c87c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800c880:	f8ad 801c 	strh.w	r8, [sp, #28]
 800c884:	9404      	str	r4, [sp, #16]
 800c886:	f8cd 9018 	str.w	r9, [sp, #24]
 800c88a:	f88d 701e 	strb.w	r7, [sp, #30]
 800c88e:	f004 ff57 	bl	8011740 <dma_init>
 800c892:	4629      	mov	r1, r5
 800c894:	4856      	ldr	r0, [pc, #344]	; (800c9f0 <Dmx::Dmx()+0x274>)
 800c896:	f004 ff84 	bl	80117a2 <dma_circulation_disable>
 800c89a:	4629      	mov	r1, r5
 800c89c:	4854      	ldr	r0, [pc, #336]	; (800c9f0 <Dmx::Dmx()+0x274>)
 800c89e:	f004 ff88 	bl	80117b2 <dma_memory_to_memory_disable>
 800c8a2:	2103      	movs	r1, #3
 800c8a4:	4852      	ldr	r0, [pc, #328]	; (800c9f0 <Dmx::Dmx()+0x274>)
 800c8a6:	f004 ff2d 	bl	8011704 <dma_deinit>
 800c8aa:	4b53      	ldr	r3, [pc, #332]	; (800c9f8 <Dmx::Dmx()+0x27c>)
 800c8ac:	aa01      	add	r2, sp, #4
 800c8ae:	2103      	movs	r1, #3
 800c8b0:	484f      	ldr	r0, [pc, #316]	; (800c9f0 <Dmx::Dmx()+0x274>)
 800c8b2:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800c8b6:	f8ad 801c 	strh.w	r8, [sp, #28]
 800c8ba:	9404      	str	r4, [sp, #16]
 800c8bc:	f8cd 9018 	str.w	r9, [sp, #24]
 800c8c0:	f88d 701e 	strb.w	r7, [sp, #30]
 800c8c4:	f004 ff3c 	bl	8011740 <dma_init>
 800c8c8:	2103      	movs	r1, #3
 800c8ca:	4849      	ldr	r0, [pc, #292]	; (800c9f0 <Dmx::Dmx()+0x274>)
 800c8cc:	f004 ff69 	bl	80117a2 <dma_circulation_disable>
 800c8d0:	2103      	movs	r1, #3
 800c8d2:	4847      	ldr	r0, [pc, #284]	; (800c9f0 <Dmx::Dmx()+0x274>)
 800c8d4:	f004 ff6d 	bl	80117b2 <dma_memory_to_memory_disable>
 800c8d8:	f240 7001 	movw	r0, #1793	; 0x701
 800c8dc:	f005 f8a8 	bl	8011a30 <rcu_periph_clock_enable>
 800c8e0:	4846      	ldr	r0, [pc, #280]	; (800c9fc <Dmx::Dmx()+0x280>)
 800c8e2:	f005 fa19 	bl	8011d18 <timer_deinit>
 800c8e6:	f04f 38ff 	mov.w	r8, #4294967295	; 0xffffffff
 800c8ea:	2377      	movs	r3, #119	; 0x77
 800c8ec:	a901      	add	r1, sp, #4
 800c8ee:	4843      	ldr	r0, [pc, #268]	; (800c9fc <Dmx::Dmx()+0x280>)
 800c8f0:	9301      	str	r3, [sp, #4]
 800c8f2:	f8ad 4008 	strh.w	r4, [sp, #8]
 800c8f6:	f8cd 800c 	str.w	r8, [sp, #12]
 800c8fa:	f8ad 4010 	strh.w	r4, [sp, #16]
 800c8fe:	f88d 4012 	strb.w	r4, [sp, #18]
 800c902:	f005 faaf 	bl	8011e64 <timer_init>
 800c906:	4641      	mov	r1, r8
 800c908:	483c      	ldr	r0, [pc, #240]	; (800c9fc <Dmx::Dmx()+0x280>)
 800c90a:	f005 fb68 	bl	8011fde <timer_flag_clear>
 800c90e:	4641      	mov	r1, r8
 800c910:	483a      	ldr	r0, [pc, #232]	; (800c9fc <Dmx::Dmx()+0x280>)
 800c912:	f005 fb61 	bl	8011fd8 <timer_interrupt_flag_clear>
 800c916:	4621      	mov	r1, r4
 800c918:	2210      	movs	r2, #16
 800c91a:	4838      	ldr	r0, [pc, #224]	; (800c9fc <Dmx::Dmx()+0x280>)
 800c91c:	f005 faff 	bl	8011f1e <timer_channel_output_mode_config>
 800c920:	4639      	mov	r1, r7
 800c922:	2210      	movs	r2, #16
 800c924:	4835      	ldr	r0, [pc, #212]	; (800c9fc <Dmx::Dmx()+0x280>)
 800c926:	f005 fafa 	bl	8011f1e <timer_channel_output_mode_config>
 800c92a:	2210      	movs	r2, #16
 800c92c:	2102      	movs	r1, #2
 800c92e:	4833      	ldr	r0, [pc, #204]	; (800c9fc <Dmx::Dmx()+0x280>)
 800c930:	f005 faf5 	bl	8011f1e <timer_channel_output_mode_config>
 800c934:	2210      	movs	r2, #16
 800c936:	2103      	movs	r1, #3
 800c938:	4830      	ldr	r0, [pc, #192]	; (800c9fc <Dmx::Dmx()+0x280>)
 800c93a:	f005 faf0 	bl	8011f1e <timer_channel_output_mode_config>
 800c93e:	f04f 5300 	mov.w	r3, #536870912	; 0x20000000
 800c942:	4d2f      	ldr	r5, [pc, #188]	; (800ca00 <Dmx::Dmx()+0x284>)
 800c944:	482d      	ldr	r0, [pc, #180]	; (800c9fc <Dmx::Dmx()+0x280>)
 800c946:	f885 431d 	strb.w	r4, [r5, #797]	; 0x31d
 800c94a:	602b      	str	r3, [r5, #0]
 800c94c:	f005 fae2 	bl	8011f14 <timer_enable>
 800c950:	f240 7005 	movw	r0, #1797	; 0x705
 800c954:	f005 f86c 	bl	8011a30 <rcu_periph_clock_enable>
 800c958:	482a      	ldr	r0, [pc, #168]	; (800ca04 <Dmx::Dmx()+0x288>)
 800c95a:	f005 f9dd 	bl	8011d18 <timer_deinit>
 800c95e:	f642 63df 	movw	r3, #11999	; 0x2edf
 800c962:	f8ad 3004 	strh.w	r3, [sp, #4]
 800c966:	f242 7310 	movw	r3, #10000	; 0x2710
 800c96a:	a901      	add	r1, sp, #4
 800c96c:	4825      	ldr	r0, [pc, #148]	; (800ca04 <Dmx::Dmx()+0x288>)
 800c96e:	9303      	str	r3, [sp, #12]
 800c970:	f005 fa78 	bl	8011e64 <timer_init>
 800c974:	4641      	mov	r1, r8
 800c976:	4823      	ldr	r0, [pc, #140]	; (800ca04 <Dmx::Dmx()+0x288>)
 800c978:	f005 fb31 	bl	8011fde <timer_flag_clear>
 800c97c:	4641      	mov	r1, r8
 800c97e:	4821      	ldr	r0, [pc, #132]	; (800ca04 <Dmx::Dmx()+0x288>)
 800c980:	f005 fb2a 	bl	8011fd8 <timer_interrupt_flag_clear>
 800c984:	4639      	mov	r1, r7
 800c986:	481f      	ldr	r0, [pc, #124]	; (800ca04 <Dmx::Dmx()+0x288>)
 800c988:	f005 fb22 	bl	8011fd0 <timer_interrupt_enable>
 800c98c:	f44f 0300 	mov.w	r3, #8388608	; 0x800000
 800c990:	f885 4337 	strb.w	r4, [r5, #823]	; 0x337
 800c994:	481b      	ldr	r0, [pc, #108]	; (800ca04 <Dmx::Dmx()+0x288>)
 800c996:	606b      	str	r3, [r5, #4]
 800c998:	f005 fabc 	bl	8011f14 <timer_enable>
 800c99c:	481a      	ldr	r0, [pc, #104]	; (800ca08 <Dmx::Dmx()+0x28c>)
 800c99e:	f7ff fac5 	bl	800bf2c <uart_dmx_config(unsigned int)>
 800c9a2:	2340      	movs	r3, #64	; 0x40
 800c9a4:	4819      	ldr	r0, [pc, #100]	; (800ca0c <Dmx::Dmx()+0x290>)
 800c9a6:	606b      	str	r3, [r5, #4]
 800c9a8:	f7ff fac0 	bl	800bf2c <uart_dmx_config(unsigned int)>
 800c9ac:	2380      	movs	r3, #128	; 0x80
 800c9ae:	4818      	ldr	r0, [pc, #96]	; (800ca10 <Dmx::Dmx()+0x294>)
 800c9b0:	606b      	str	r3, [r5, #4]
 800c9b2:	f7ff fabb 	bl	800bf2c <uart_dmx_config(unsigned int)>
 800c9b6:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
 800c9ba:	4816      	ldr	r0, [pc, #88]	; (800ca14 <Dmx::Dmx()+0x298>)
 800c9bc:	606b      	str	r3, [r5, #4]
 800c9be:	f7ff fab5 	bl	800bf2c <uart_dmx_config(unsigned int)>
 800c9c2:	f44f 1300 	mov.w	r3, #2097152	; 0x200000
 800c9c6:	4630      	mov	r0, r6
 800c9c8:	606b      	str	r3, [r5, #4]
 800c9ca:	b009      	add	sp, #36	; 0x24
 800c9cc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c9d0:	2000420c 	andcs	r4, r0, ip, lsl #4
 800c9d4:	080148fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, fp, lr}
 800c9d8:	200041c8 	andcs	r4, r0, r8, asr #3
 800c9dc:	200041b8 			; <UNDEFINED> instruction: 0x200041b8
 800c9e0:	20003168 	andcs	r3, r0, r8, ror #2
 800c9e4:	40020000 	andmi	r0, r2, r0
 800c9e8:	40004404 	andmi	r4, r0, r4, lsl #8
 800c9ec:	40004804 	andmi	r4, r0, r4, lsl #16
 800c9f0:	40020400 	andmi	r0, r2, r0, lsl #8
 800c9f4:	40004c04 	andmi	r4, r0, r4, lsl #24
 800c9f8:	40005004 	andmi	r5, r0, r4
 800c9fc:	40000400 	andmi	r0, r0, r0, lsl #8
 800ca00:	e000e100 	and	lr, r0, r0, lsl #2
 800ca04:	40001400 	andmi	r1, r0, r0, lsl #8
 800ca08:	40004400 	andmi	r4, r0, r0, lsl #8
 800ca0c:	40004800 	andmi	r4, r0, r0, lsl #16
 800ca10:	40004c00 	andmi	r4, r0, r0, lsl #24
 800ca14:	40005000 	andmi	r5, r0, r0

0800ca18 <Dmx::SetDmxPeriodTime(unsigned int)>:
 800ca18:	4b1b      	ldr	r3, [pc, #108]	; (800ca88 <Dmx::SetDmxPeriodTime(unsigned int)+0x70>)
 800ca1a:	b570      	push	{r4, r5, r6, lr}
 800ca1c:	f8b3 4406 	ldrh.w	r4, [r3, #1030]	; 0x406
 800ca20:	60c1      	str	r1, [r0, #12]
 800ca22:	f8b3 0202 	ldrh.w	r0, [r3, #514]	; 0x202
 800ca26:	f64f 76d3 	movw	r6, #65491	; 0xffd3
 800ca2a:	4284      	cmp	r4, r0
 800ca2c:	bf38      	it	cc
 800ca2e:	4604      	movcc	r4, r0
 800ca30:	f8b3 060a 	ldrh.w	r0, [r3, #1546]	; 0x60a
 800ca34:	4d15      	ldr	r5, [pc, #84]	; (800ca8c <Dmx::SetDmxPeriodTime(unsigned int)+0x74>)
 800ca36:	4284      	cmp	r4, r0
 800ca38:	bf38      	it	cc
 800ca3a:	4604      	movcc	r4, r0
 800ca3c:	f8b3 080e 	ldrh.w	r0, [r3, #2062]	; 0x80e
 800ca40:	232c      	movs	r3, #44	; 0x2c
 800ca42:	42a0      	cmp	r0, r4
 800ca44:	bf38      	it	cc
 800ca46:	4620      	movcc	r0, r4
 800ca48:	4c11      	ldr	r4, [pc, #68]	; (800ca90 <Dmx::SetDmxPeriodTime(unsigned int)+0x78>)
 800ca4a:	4358      	muls	r0, r3
 800ca4c:	682a      	ldr	r2, [r5, #0]
 800ca4e:	6823      	ldr	r3, [r4, #0]
 800ca50:	4413      	add	r3, r2
 800ca52:	4403      	add	r3, r0
 800ca54:	42b3      	cmp	r3, r6
 800ca56:	d908      	bls.n	800ca6a <Dmx::SetDmxPeriodTime(unsigned int)+0x52>
 800ca58:	2ab0      	cmp	r2, #176	; 0xb0
 800ca5a:	4613      	mov	r3, r2
 800ca5c:	bf28      	it	cs
 800ca5e:	23b0      	movcs	r3, #176	; 0xb0
 800ca60:	220c      	movs	r2, #12
 800ca62:	602b      	str	r3, [r5, #0]
 800ca64:	4413      	add	r3, r2
 800ca66:	6022      	str	r2, [r4, #0]
 800ca68:	4403      	add	r3, r0
 800ca6a:	4a0a      	ldr	r2, [pc, #40]	; (800ca94 <Dmx::SetDmxPeriodTime(unsigned int)+0x7c>)
 800ca6c:	b109      	cbz	r1, 800ca72 <Dmx::SetDmxPeriodTime(unsigned int)+0x5a>
 800ca6e:	428b      	cmp	r3, r1
 800ca70:	d907      	bls.n	800ca82 <Dmx::SetDmxPeriodTime(unsigned int)+0x6a>
 800ca72:	f240 41b4 	movw	r1, #1204	; 0x4b4
 800ca76:	332c      	adds	r3, #44	; 0x2c
 800ca78:	428b      	cmp	r3, r1
 800ca7a:	bf2c      	ite	cs
 800ca7c:	6013      	strcs	r3, [r2, #0]
 800ca7e:	6011      	strcc	r1, [r2, #0]
 800ca80:	e000      	b.n	800ca84 <Dmx::SetDmxPeriodTime(unsigned int)+0x6c>
 800ca82:	6011      	str	r1, [r2, #0]
 800ca84:	bd70      	pop	{r4, r5, r6, pc}
 800ca86:	bf00      	nop
 800ca88:	200039a8 	andcs	r3, r0, r8, lsr #19
 800ca8c:	20000010 	andcs	r0, r0, r0, lsl r0
 800ca90:	2000000c 	andcs	r0, r0, ip
 800ca94:	20000008 	andcs	r0, r0, r8

0800ca98 <Dmx::SetDmxBreakTime(unsigned int)>:
 800ca98:	295c      	cmp	r1, #92	; 0x5c
 800ca9a:	bf38      	it	cc
 800ca9c:	215c      	movcc	r1, #92	; 0x5c
 800ca9e:	4b02      	ldr	r3, [pc, #8]	; (800caa8 <Dmx::SetDmxBreakTime(unsigned int)+0x10>)
 800caa0:	6019      	str	r1, [r3, #0]
 800caa2:	68c1      	ldr	r1, [r0, #12]
 800caa4:	f7ff bfb8 	b.w	800ca18 <Dmx::SetDmxPeriodTime(unsigned int)>
 800caa8:	20000010 	andcs	r0, r0, r0, lsl r0

0800caac <Dmx::SetDmxMabTime(unsigned int)>:
 800caac:	290c      	cmp	r1, #12
 800caae:	bf38      	it	cc
 800cab0:	210c      	movcc	r1, #12
 800cab2:	4b02      	ldr	r3, [pc, #8]	; (800cabc <Dmx::SetDmxMabTime(unsigned int)+0x10>)
 800cab4:	6019      	str	r1, [r3, #0]
 800cab6:	68c1      	ldr	r1, [r0, #12]
 800cab8:	f7ff bfae 	b.w	800ca18 <Dmx::SetDmxPeriodTime(unsigned int)>
 800cabc:	2000000c 	andcs	r0, r0, ip

0800cac0 <Dmx::SetDmxSlots(unsigned short)>:
 800cac0:	1e8b      	subs	r3, r1, #2
 800cac2:	f5b3 7fff 	cmp.w	r3, #510	; 0x1fe
 800cac6:	b410      	push	{r4}
 800cac8:	d813      	bhi.n	800caf2 <Dmx::SetDmxSlots(unsigned short)+0x32>
 800caca:	8201      	strh	r1, [r0, #16]
 800cacc:	f100 0324 	add.w	r3, r0, #36	; 0x24
 800cad0:	f100 0434 	add.w	r4, r0, #52	; 0x34
 800cad4:	f853 2b04 	ldr.w	r2, [r3], #4
 800cad8:	b12a      	cbz	r2, 800cae6 <Dmx::SetDmxSlots(unsigned short)+0x26>
 800cada:	4291      	cmp	r1, r2
 800cadc:	bf94      	ite	ls
 800cade:	f843 1c04 	strls.w	r1, [r3, #-4]
 800cae2:	f843 2c04 	strhi.w	r2, [r3, #-4]
 800cae6:	42a3      	cmp	r3, r4
 800cae8:	d1f4      	bne.n	800cad4 <Dmx::SetDmxSlots(unsigned short)+0x14>
 800caea:	68c1      	ldr	r1, [r0, #12]
 800caec:	bc10      	pop	{r4}
 800caee:	f7ff bf93 	b.w	800ca18 <Dmx::SetDmxPeriodTime(unsigned int)>
 800caf2:	bc10      	pop	{r4}
 800caf4:	4770      	bx	lr
	...

0800caf8 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)>:
 800caf8:	b4f0      	push	{r4, r5, r6, r7}
 800cafa:	8a04      	ldrh	r4, [r0, #16]
 800cafc:	4d11      	ldr	r5, [pc, #68]	; (800cb44 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x4c>)
 800cafe:	42a3      	cmp	r3, r4
 800cb00:	bf28      	it	cs
 800cb02:	4623      	movcs	r3, r4
 800cb04:	f44f 7401 	mov.w	r4, #516	; 0x204
 800cb08:	434c      	muls	r4, r1
 800cb0a:	1c5f      	adds	r7, r3, #1
 800cb0c:	192e      	adds	r6, r5, r4
 800cb0e:	f892 f000 	pld	[r2]
 800cb12:	3401      	adds	r4, #1
 800cb14:	f8a6 7202 	strh.w	r7, [r6, #514]	; 0x202
 800cb18:	442c      	add	r4, r5
 800cb1a:	18d6      	adds	r6, r2, r3
 800cb1c:	4296      	cmp	r6, r2
 800cb1e:	d004      	beq.n	800cb2a <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x32>
 800cb20:	f812 5b01 	ldrb.w	r5, [r2], #1
 800cb24:	f804 5b01 	strb.w	r5, [r4], #1
 800cb28:	e7f8      	b.n	800cb1c <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x24>
 800cb2a:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 800cb2e:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 800cb30:	429a      	cmp	r2, r3
 800cb32:	d004      	beq.n	800cb3e <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x46>
 800cb34:	bcf0      	pop	{r4, r5, r6, r7}
 800cb36:	624b      	str	r3, [r1, #36]	; 0x24
 800cb38:	68c1      	ldr	r1, [r0, #12]
 800cb3a:	f7ff bf6d 	b.w	800ca18 <Dmx::SetDmxPeriodTime(unsigned int)>
 800cb3e:	bcf0      	pop	{r4, r5, r6, r7}
 800cb40:	4770      	bx	lr
 800cb42:	bf00      	nop
 800cb44:	200039a8 	andcs	r3, r0, r8, lsr #19

0800cb48 <Dmx::GetDmxAvailable(unsigned int)>:
 800cb48:	f44f 7304 	mov.w	r3, #528	; 0x210
 800cb4c:	4807      	ldr	r0, [pc, #28]	; (800cb6c <Dmx::GetDmxAvailable(unsigned int)+0x24>)
 800cb4e:	fb03 0001 	mla	r0, r3, r1, r0
 800cb52:	f8d0 3204 	ldr.w	r3, [r0, #516]	; 0x204
 800cb56:	f413 4100 	ands.w	r1, r3, #32768	; 0x8000
 800cb5a:	bf1b      	ittet	ne
 800cb5c:	f423 4300 	bicne.w	r3, r3, #32768	; 0x8000
 800cb60:	f103 33ff 	addne.w	r3, r3, #4294967295	; 0xffffffff
 800cb64:	4608      	moveq	r0, r1
 800cb66:	f8c0 3204 	strne.w	r3, [r0, #516]	; 0x204
 800cb6a:	4770      	bx	lr
 800cb6c:	20003168 	andcs	r3, r0, r8, ror #2

0800cb70 <Dmx::GetUpdatesPerSecond(unsigned int)>:
 800cb70:	f3bf 8f5f 	dmb	sy
 800cb74:	4b01      	ldr	r3, [pc, #4]	; (800cb7c <Dmx::GetUpdatesPerSecond(unsigned int)+0xc>)
 800cb76:	0109      	lsls	r1, r1, #4
 800cb78:	5858      	ldr	r0, [r3, r1]
 800cb7a:	4770      	bx	lr
 800cb7c:	200041cc 	andcs	r4, r0, ip, asr #3

0800cb80 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>:
 800cb80:	2300      	movs	r3, #0
 800cb82:	2020      	movs	r0, #32
 800cb84:	b510      	push	{r4, lr}
 800cb86:	4a04      	ldr	r2, [pc, #16]	; (800cb98 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x18>)
 800cb88:	428b      	cmp	r3, r1
 800cb8a:	d004      	beq.n	800cb96 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x16>
 800cb8c:	f852 4b04 	ldr.w	r4, [r2], #4
 800cb90:	3301      	adds	r3, #1
 800cb92:	4420      	add	r0, r4
 800cb94:	e7f8      	b.n	800cb88 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x8>
 800cb96:	bd10      	pop	{r4, pc}
 800cb98:	0801491c 	stmdaeq	r1, {r2, r3, r4, r8, fp, lr}

0800cb9c <SpiFlashStore::Init()>:
 800cb9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cba0:	f8df 8120 	ldr.w	r8, [pc, #288]	; 800ccc4 <SpiFlashStore::Init()+0x128>
 800cba4:	4607      	mov	r7, r0
 800cba6:	b085      	sub	sp, #20
 800cba8:	f8d8 0000 	ldr.w	r0, [r8]
 800cbac:	f000 fb3a 	bl	800d224 <FlashRom::GetSectorSize() const>
 800cbb0:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
 800cbb4:	4605      	mov	r5, r0
 800cbb6:	f040 8083 	bne.w	800ccc0 <SpiFlashStore::Init()+0x124>
 800cbba:	f8d8 0000 	ldr.w	r0, [r8]
 800cbbe:	f000 fb29 	bl	800d214 <FlashRom::GetSize() const>
 800cbc2:	4b41      	ldr	r3, [pc, #260]	; (800ccc8 <SpiFlashStore::Init()+0x12c>)
 800cbc4:	f5a0 5180 	sub.w	r1, r0, #4096	; 0x1000
 800cbc8:	f3c1 060b 	ubfx	r6, r1, #0, #12
 800cbcc:	6019      	str	r1, [r3, #0]
 800cbce:	2e00      	cmp	r6, #0
 800cbd0:	d176      	bne.n	800ccc0 <SpiFlashStore::Init()+0x124>
 800cbd2:	4c3e      	ldr	r4, [pc, #248]	; (800cccc <SpiFlashStore::Init()+0x130>)
 800cbd4:	ab03      	add	r3, sp, #12
 800cbd6:	9300      	str	r3, [sp, #0]
 800cbd8:	462a      	mov	r2, r5
 800cbda:	4623      	mov	r3, r4
 800cbdc:	f8d8 0000 	ldr.w	r0, [r8]
 800cbe0:	f000 fb23 	bl	800d22a <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)>
 800cbe4:	7823      	ldrb	r3, [r4, #0]
 800cbe6:	2b41      	cmp	r3, #65	; 0x41
 800cbe8:	bf1c      	itt	ne
 800cbea:	2341      	movne	r3, #65	; 0x41
 800cbec:	7023      	strbne	r3, [r4, #0]
 800cbee:	7863      	ldrb	r3, [r4, #1]
 800cbf0:	bf14      	ite	ne
 800cbf2:	4635      	movne	r5, r6
 800cbf4:	2501      	moveq	r5, #1
 800cbf6:	2b76      	cmp	r3, #118	; 0x76
 800cbf8:	bf1c      	itt	ne
 800cbfa:	2376      	movne	r3, #118	; 0x76
 800cbfc:	7063      	strbne	r3, [r4, #1]
 800cbfe:	78a3      	ldrb	r3, [r4, #2]
 800cc00:	bf18      	it	ne
 800cc02:	2500      	movne	r5, #0
 800cc04:	2b56      	cmp	r3, #86	; 0x56
 800cc06:	bf1c      	itt	ne
 800cc08:	2356      	movne	r3, #86	; 0x56
 800cc0a:	70a3      	strbne	r3, [r4, #2]
 800cc0c:	78e3      	ldrb	r3, [r4, #3]
 800cc0e:	bf18      	it	ne
 800cc10:	2500      	movne	r5, #0
 800cc12:	2b10      	cmp	r3, #16
 800cc14:	d01c      	beq.n	800cc50 <SpiFlashStore::Init()+0xb4>
 800cc16:	2310      	movs	r3, #16
 800cc18:	70e3      	strb	r3, [r4, #3]
 800cc1a:	2201      	movs	r2, #1
 800cc1c:	2500      	movs	r5, #0
 800cc1e:	f04f 09ff 	mov.w	r9, #255	; 0xff
 800cc22:	4b2b      	ldr	r3, [pc, #172]	; (800ccd0 <SpiFlashStore::Init()+0x134>)
 800cc24:	f8df 80ac 	ldr.w	r8, [pc, #172]	; 800ccd4 <SpiFlashStore::Init()+0x138>
 800cc28:	701a      	strb	r2, [r3, #0]
 800cc2a:	4631      	mov	r1, r6
 800cc2c:	4638      	mov	r0, r7
 800cc2e:	f7ff ffa7 	bl	800cb80 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800cc32:	1823      	adds	r3, r4, r0
 800cc34:	5425      	strb	r5, [r4, r0]
 800cc36:	705d      	strb	r5, [r3, #1]
 800cc38:	709d      	strb	r5, [r3, #2]
 800cc3a:	70dd      	strb	r5, [r3, #3]
 800cc3c:	f858 3b04 	ldr.w	r3, [r8], #4
 800cc40:	1d02      	adds	r2, r0, #4
 800cc42:	4403      	add	r3, r0
 800cc44:	4293      	cmp	r3, r2
 800cc46:	d931      	bls.n	800ccac <SpiFlashStore::Init()+0x110>
 800cc48:	f804 9002 	strb.w	r9, [r4, r2]
 800cc4c:	3201      	adds	r2, #1
 800cc4e:	e7f9      	b.n	800cc44 <SpiFlashStore::Init()+0xa8>
 800cc50:	2d00      	cmp	r5, #0
 800cc52:	d0e2      	beq.n	800cc1a <SpiFlashStore::Init()+0x7e>
 800cc54:	f04f 0900 	mov.w	r9, #0
 800cc58:	46c8      	mov	r8, r9
 800cc5a:	f8df a07c 	ldr.w	sl, [pc, #124]	; 800ccd8 <SpiFlashStore::Init()+0x13c>
 800cc5e:	f8da b000 	ldr.w	fp, [sl]
 800cc62:	4631      	mov	r1, r6
 800cc64:	4638      	mov	r0, r7
 800cc66:	f7ff ff8b 	bl	800cb80 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800cc6a:	5c23      	ldrb	r3, [r4, r0]
 800cc6c:	2bff      	cmp	r3, #255	; 0xff
 800cc6e:	d114      	bne.n	800cc9a <SpiFlashStore::Init()+0xfe>
 800cc70:	1823      	adds	r3, r4, r0
 800cc72:	785a      	ldrb	r2, [r3, #1]
 800cc74:	2aff      	cmp	r2, #255	; 0xff
 800cc76:	d110      	bne.n	800cc9a <SpiFlashStore::Init()+0xfe>
 800cc78:	789a      	ldrb	r2, [r3, #2]
 800cc7a:	2aff      	cmp	r2, #255	; 0xff
 800cc7c:	d10d      	bne.n	800cc9a <SpiFlashStore::Init()+0xfe>
 800cc7e:	78da      	ldrb	r2, [r3, #3]
 800cc80:	2aff      	cmp	r2, #255	; 0xff
 800cc82:	d10a      	bne.n	800cc9a <SpiFlashStore::Init()+0xfe>
 800cc84:	46a9      	mov	r9, r5
 800cc86:	f04f 0b01 	mov.w	fp, #1
 800cc8a:	f804 8000 	strb.w	r8, [r4, r0]
 800cc8e:	f883 8001 	strb.w	r8, [r3, #1]
 800cc92:	f883 8002 	strb.w	r8, [r3, #2]
 800cc96:	f883 8003 	strb.w	r8, [r3, #3]
 800cc9a:	3601      	adds	r6, #1
 800cc9c:	2e1c      	cmp	r6, #28
 800cc9e:	d1e0      	bne.n	800cc62 <SpiFlashStore::Init()+0xc6>
 800cca0:	f1b9 0f00 	cmp.w	r9, #0
 800cca4:	d008      	beq.n	800ccb8 <SpiFlashStore::Init()+0x11c>
 800cca6:	f8ca b000 	str.w	fp, [sl]
 800ccaa:	e005      	b.n	800ccb8 <SpiFlashStore::Init()+0x11c>
 800ccac:	3601      	adds	r6, #1
 800ccae:	2e1c      	cmp	r6, #28
 800ccb0:	d1bb      	bne.n	800cc2a <SpiFlashStore::Init()+0x8e>
 800ccb2:	2501      	movs	r5, #1
 800ccb4:	4b08      	ldr	r3, [pc, #32]	; (800ccd8 <SpiFlashStore::Init()+0x13c>)
 800ccb6:	601d      	str	r5, [r3, #0]
 800ccb8:	4628      	mov	r0, r5
 800ccba:	b005      	add	sp, #20
 800ccbc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ccc0:	2500      	movs	r5, #0
 800ccc2:	e7f9      	b.n	800ccb8 <SpiFlashStore::Init()+0x11c>
 800ccc4:	20005244 	andcs	r5, r0, r4, asr #4
 800ccc8:	20005218 	andcs	r5, r0, r8, lsl r2
 800cccc:	20004218 	andcs	r4, r0, r8, lsl r2
 800ccd0:	2000522c 	andcs	r5, r0, ip, lsr #4
 800ccd4:	0801491c 	stmdaeq	r1, {r2, r3, r4, r8, fp, lr}
 800ccd8:	20005224 	andcs	r5, r0, r4, lsr #4

0800ccdc <SpiFlashStore::SpiFlashStore()>:
 800ccdc:	b538      	push	{r3, r4, r5, lr}
 800ccde:	4b0d      	ldr	r3, [pc, #52]	; (800cd14 <SpiFlashStore::SpiFlashStore()+0x38>)
 800cce0:	4604      	mov	r4, r0
 800cce2:	6018      	str	r0, [r3, #0]
 800cce4:	4b0c      	ldr	r3, [pc, #48]	; (800cd18 <SpiFlashStore::SpiFlashStore()+0x3c>)
 800cce6:	4d0d      	ldr	r5, [pc, #52]	; (800cd1c <SpiFlashStore::SpiFlashStore()+0x40>)
 800cce8:	681b      	ldr	r3, [r3, #0]
 800ccea:	781b      	ldrb	r3, [r3, #0]
 800ccec:	b113      	cbz	r3, 800ccf4 <SpiFlashStore::SpiFlashStore()+0x18>
 800ccee:	f7ff ff55 	bl	800cb9c <SpiFlashStore::Init()>
 800ccf2:	7028      	strb	r0, [r5, #0]
 800ccf4:	782b      	ldrb	r3, [r5, #0]
 800ccf6:	b153      	cbz	r3, 800cd0e <SpiFlashStore::SpiFlashStore()+0x32>
 800ccf8:	2320      	movs	r3, #32
 800ccfa:	2200      	movs	r2, #0
 800ccfc:	4908      	ldr	r1, [pc, #32]	; (800cd20 <SpiFlashStore::SpiFlashStore()+0x44>)
 800ccfe:	f851 0b04 	ldr.w	r0, [r1], #4
 800cd02:	3201      	adds	r2, #1
 800cd04:	2a1c      	cmp	r2, #28
 800cd06:	4403      	add	r3, r0
 800cd08:	d1f9      	bne.n	800ccfe <SpiFlashStore::SpiFlashStore()+0x22>
 800cd0a:	4a06      	ldr	r2, [pc, #24]	; (800cd24 <SpiFlashStore::SpiFlashStore()+0x48>)
 800cd0c:	6013      	str	r3, [r2, #0]
 800cd0e:	4620      	mov	r0, r4
 800cd10:	bd38      	pop	{r3, r4, r5, pc}
 800cd12:	bf00      	nop
 800cd14:	20005228 	andcs	r5, r0, r8, lsr #4
 800cd18:	20005244 	andcs	r5, r0, r4, asr #4
 800cd1c:	2000521c 	andcs	r5, r0, ip, lsl r2
 800cd20:	0801491c 	stmdaeq	r1, {r2, r3, r4, r8, fp, lr}
 800cd24:	20005220 	andcs	r5, r0, r0, lsr #4

0800cd28 <SpiFlashStore::ResetSetList(spiflashstore::Store)>:
 800cd28:	b508      	push	{r3, lr}
 800cd2a:	f7ff ff29 	bl	800cb80 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800cd2e:	2300      	movs	r3, #0
 800cd30:	4904      	ldr	r1, [pc, #16]	; (800cd44 <SpiFlashStore::ResetSetList(spiflashstore::Store)+0x1c>)
 800cd32:	1842      	adds	r2, r0, r1
 800cd34:	540b      	strb	r3, [r1, r0]
 800cd36:	7053      	strb	r3, [r2, #1]
 800cd38:	7093      	strb	r3, [r2, #2]
 800cd3a:	70d3      	strb	r3, [r2, #3]
 800cd3c:	2201      	movs	r2, #1
 800cd3e:	4b02      	ldr	r3, [pc, #8]	; (800cd48 <SpiFlashStore::ResetSetList(spiflashstore::Store)+0x20>)
 800cd40:	601a      	str	r2, [r3, #0]
 800cd42:	bd08      	pop	{r3, pc}
 800cd44:	20004218 	andcs	r4, r0, r8, lsl r2
 800cd48:	20005224 	andcs	r5, r0, r4, lsr #4

0800cd4c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>:
 800cd4c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cd50:	461c      	mov	r4, r3
 800cd52:	4b19      	ldr	r3, [pc, #100]	; (800cdb8 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x6c>)
 800cd54:	4615      	mov	r5, r2
 800cd56:	781f      	ldrb	r7, [r3, #0]
 800cd58:	9e07      	ldr	r6, [sp, #28]
 800cd5a:	b35f      	cbz	r7, 800cdb4 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x68>
 800cd5c:	f7ff ff10 	bl	800cb80 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800cd60:	f04f 0c00 	mov.w	ip, #0
 800cd64:	4a15      	ldr	r2, [pc, #84]	; (800cdbc <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x70>)
 800cd66:	1941      	adds	r1, r0, r5
 800cd68:	1e63      	subs	r3, r4, #1
 800cd6a:	9c06      	ldr	r4, [sp, #24]
 800cd6c:	4411      	add	r1, r2
 800cd6e:	440c      	add	r4, r1
 800cd70:	42a1      	cmp	r1, r4
 800cd72:	d00a      	beq.n	800cd8a <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x3e>
 800cd74:	f891 8000 	ldrb.w	r8, [r1]
 800cd78:	f813 ef01 	ldrb.w	lr, [r3, #1]!
 800cd7c:	3101      	adds	r1, #1
 800cd7e:	45f0      	cmp	r8, lr
 800cd80:	bf1c      	itt	ne
 800cd82:	f801 ec01 	strbne.w	lr, [r1, #-1]
 800cd86:	46bc      	movne	ip, r7
 800cd88:	e7f2      	b.n	800cd70 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x24>
 800cd8a:	f1bc 0f00 	cmp.w	ip, #0
 800cd8e:	d011      	beq.n	800cdb4 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x68>
 800cd90:	4b0b      	ldr	r3, [pc, #44]	; (800cdc0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x74>)
 800cd92:	6819      	ldr	r1, [r3, #0]
 800cd94:	b109      	cbz	r1, 800cd9a <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x4e>
 800cd96:	2906      	cmp	r1, #6
 800cd98:	d101      	bne.n	800cd9e <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800cd9a:	2101      	movs	r1, #1
 800cd9c:	6019      	str	r1, [r3, #0]
 800cd9e:	4b09      	ldr	r3, [pc, #36]	; (800cdc4 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x78>)
 800cda0:	6819      	ldr	r1, [r3, #0]
 800cda2:	4b09      	ldr	r3, [pc, #36]	; (800cdc8 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x7c>)
 800cda4:	6019      	str	r1, [r3, #0]
 800cda6:	b12d      	cbz	r5, 800cdb4 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x68>
 800cda8:	b126      	cbz	r6, 800cdb4 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x68>
 800cdaa:	9b08      	ldr	r3, [sp, #32]
 800cdac:	4418      	add	r0, r3
 800cdae:	5813      	ldr	r3, [r2, r0]
 800cdb0:	4333      	orrs	r3, r6
 800cdb2:	5013      	str	r3, [r2, r0]
 800cdb4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cdb8:	2000521c 	andcs	r5, r0, ip, lsl r2
 800cdbc:	20004218 	andcs	r4, r0, r8, lsl r2
 800cdc0:	20005224 	andcs	r5, r0, r4, lsr #4
 800cdc4:	2000d26c 	andcs	sp, r0, ip, ror #4
 800cdc8:	20004214 	andcs	r4, r0, r4, lsl r2

0800cdcc <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>:
 800cdcc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800cdd0:	461d      	mov	r5, r3
 800cdd2:	4b15      	ldr	r3, [pc, #84]	; (800ce28 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x5c>)
 800cdd4:	b085      	sub	sp, #20
 800cdd6:	781b      	ldrb	r3, [r3, #0]
 800cdd8:	4607      	mov	r7, r0
 800cdda:	4688      	mov	r8, r1
 800cddc:	4614      	mov	r4, r2
 800cdde:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 800cde2:	b1eb      	cbz	r3, 800ce20 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x54>
 800cde4:	f7ff fecc 	bl	800cb80 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800cde8:	4910      	ldr	r1, [pc, #64]	; (800ce2c <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x60>)
 800cdea:	4a11      	ldr	r2, [pc, #68]	; (800ce30 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x64>)
 800cdec:	7809      	ldrb	r1, [r1, #0]
 800cdee:	eb00 0309 	add.w	r3, r0, r9
 800cdf2:	189e      	adds	r6, r3, r2
 800cdf4:	b951      	cbnz	r1, 800ce0c <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x40>
 800cdf6:	589b      	ldr	r3, [r3, r2]
 800cdf8:	b143      	cbz	r3, 800ce0c <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x40>
 800cdfa:	3c01      	subs	r4, #1
 800cdfc:	4435      	add	r5, r6
 800cdfe:	42b5      	cmp	r5, r6
 800ce00:	d00e      	beq.n	800ce20 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x54>
 800ce02:	f816 3b01 	ldrb.w	r3, [r6], #1
 800ce06:	f804 3f01 	strb.w	r3, [r4, #1]!
 800ce0a:	e7f8      	b.n	800cdfe <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x32>
 800ce0c:	2300      	movs	r3, #0
 800ce0e:	464a      	mov	r2, r9
 800ce10:	e9cd 3301 	strd	r3, r3, [sp, #4]
 800ce14:	4641      	mov	r1, r8
 800ce16:	4623      	mov	r3, r4
 800ce18:	4638      	mov	r0, r7
 800ce1a:	9500      	str	r5, [sp, #0]
 800ce1c:	f7ff ff96 	bl	800cd4c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800ce20:	b005      	add	sp, #20
 800ce22:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ce26:	bf00      	nop
 800ce28:	2000521c 	andcs	r5, r0, ip, lsl r2
 800ce2c:	2000522c 	andcs	r5, r0, ip, lsr #4
 800ce30:	20004218 	andcs	r4, r0, r8, lsl r2

0800ce34 <SpiFlashStore::Flash()>:
 800ce34:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800ce36:	4c25      	ldr	r4, [pc, #148]	; (800cecc <SpiFlashStore::Flash()+0x98>)
 800ce38:	6820      	ldr	r0, [r4, #0]
 800ce3a:	2800      	cmp	r0, #0
 800ce3c:	d043      	beq.n	800cec6 <SpiFlashStore::Flash()+0x92>
 800ce3e:	3801      	subs	r0, #1
 800ce40:	2805      	cmp	r0, #5
 800ce42:	d831      	bhi.n	800cea8 <SpiFlashStore::Flash()+0x74>
 800ce44:	e8df f000 	tbb	[pc, r0]
 800ce48:	2e140b03 	vnmlscs.f64	d0, d4, d3
 800ce4c:	4b203025 	blmi	8818ee8 <__exidx_end+0x803b74>
 800ce50:	681a      	ldr	r2, [r3, #0]
 800ce52:	4b20      	ldr	r3, [pc, #128]	; (800ced4 <SpiFlashStore::Flash()+0xa0>)
 800ce54:	601a      	str	r2, [r3, #0]
 800ce56:	2302      	movs	r3, #2
 800ce58:	6023      	str	r3, [r4, #0]
 800ce5a:	2001      	movs	r0, #1
 800ce5c:	e033      	b.n	800cec6 <SpiFlashStore::Flash()+0x92>
 800ce5e:	4b1c      	ldr	r3, [pc, #112]	; (800ced0 <SpiFlashStore::Flash()+0x9c>)
 800ce60:	4a1c      	ldr	r2, [pc, #112]	; (800ced4 <SpiFlashStore::Flash()+0xa0>)
 800ce62:	681b      	ldr	r3, [r3, #0]
 800ce64:	6812      	ldr	r2, [r2, #0]
 800ce66:	1a9b      	subs	r3, r3, r2
 800ce68:	2b63      	cmp	r3, #99	; 0x63
 800ce6a:	d9f6      	bls.n	800ce5a <SpiFlashStore::Flash()+0x26>
 800ce6c:	2303      	movs	r3, #3
 800ce6e:	e7f3      	b.n	800ce58 <SpiFlashStore::Flash()+0x24>
 800ce70:	4919      	ldr	r1, [pc, #100]	; (800ced8 <SpiFlashStore::Flash()+0xa4>)
 800ce72:	481a      	ldr	r0, [pc, #104]	; (800cedc <SpiFlashStore::Flash()+0xa8>)
 800ce74:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 800ce78:	6809      	ldr	r1, [r1, #0]
 800ce7a:	6800      	ldr	r0, [r0, #0]
 800ce7c:	ab03      	add	r3, sp, #12
 800ce7e:	f000 f9e3 	bl	800d248 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)>
 800ce82:	2800      	cmp	r0, #0
 800ce84:	d0e9      	beq.n	800ce5a <SpiFlashStore::Flash()+0x26>
 800ce86:	4b12      	ldr	r3, [pc, #72]	; (800ced0 <SpiFlashStore::Flash()+0x9c>)
 800ce88:	681a      	ldr	r2, [r3, #0]
 800ce8a:	4b12      	ldr	r3, [pc, #72]	; (800ced4 <SpiFlashStore::Flash()+0xa0>)
 800ce8c:	601a      	str	r2, [r3, #0]
 800ce8e:	2305      	movs	r3, #5
 800ce90:	e7e2      	b.n	800ce58 <SpiFlashStore::Flash()+0x24>
 800ce92:	4b0f      	ldr	r3, [pc, #60]	; (800ced0 <SpiFlashStore::Flash()+0x9c>)
 800ce94:	4a0f      	ldr	r2, [pc, #60]	; (800ced4 <SpiFlashStore::Flash()+0xa0>)
 800ce96:	681b      	ldr	r3, [r3, #0]
 800ce98:	6812      	ldr	r2, [r2, #0]
 800ce9a:	1a9b      	subs	r3, r3, r2
 800ce9c:	2b63      	cmp	r3, #99	; 0x63
 800ce9e:	d9dc      	bls.n	800ce5a <SpiFlashStore::Flash()+0x26>
 800cea0:	2304      	movs	r3, #4
 800cea2:	e7d9      	b.n	800ce58 <SpiFlashStore::Flash()+0x24>
 800cea4:	2306      	movs	r3, #6
 800cea6:	e7d7      	b.n	800ce58 <SpiFlashStore::Flash()+0x24>
 800cea8:	ab03      	add	r3, sp, #12
 800ceaa:	4a0d      	ldr	r2, [pc, #52]	; (800cee0 <SpiFlashStore::Flash()+0xac>)
 800ceac:	490a      	ldr	r1, [pc, #40]	; (800ced8 <SpiFlashStore::Flash()+0xa4>)
 800ceae:	480b      	ldr	r0, [pc, #44]	; (800cedc <SpiFlashStore::Flash()+0xa8>)
 800ceb0:	9300      	str	r3, [sp, #0]
 800ceb2:	6812      	ldr	r2, [r2, #0]
 800ceb4:	4b0b      	ldr	r3, [pc, #44]	; (800cee4 <SpiFlashStore::Flash()+0xb0>)
 800ceb6:	6809      	ldr	r1, [r1, #0]
 800ceb8:	6800      	ldr	r0, [r0, #0]
 800ceba:	f000 fa65 	bl	800d388 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)>
 800cebe:	2800      	cmp	r0, #0
 800cec0:	d0cb      	beq.n	800ce5a <SpiFlashStore::Flash()+0x26>
 800cec2:	2000      	movs	r0, #0
 800cec4:	6020      	str	r0, [r4, #0]
 800cec6:	b004      	add	sp, #16
 800cec8:	bd10      	pop	{r4, pc}
 800ceca:	bf00      	nop
 800cecc:	20005224 	andcs	r5, r0, r4, lsr #4
 800ced0:	2000d26c 	andcs	sp, r0, ip, ror #4
 800ced4:	20004214 	andcs	r4, r0, r4, lsl r2
 800ced8:	20005218 	andcs	r5, r0, r8, lsl r2
 800cedc:	20005244 	andcs	r5, r0, r4, asr #4
 800cee0:	20005220 	andcs	r5, r0, r0, lsr #4
 800cee4:	20004218 	andcs	r4, r0, r8, lsl r2

0800cee8 <StoreDisplayUdf::~StoreDisplayUdf()>:
 800cee8:	4770      	bx	lr
	...

0800ceec <StoreDisplayUdf::Copy(displayudfparams::Params*)>:
 800ceec:	2300      	movs	r3, #0
 800ceee:	b507      	push	{r0, r1, r2, lr}
 800cef0:	4805      	ldr	r0, [pc, #20]	; (800cf08 <StoreDisplayUdf::Copy(displayudfparams::Params*)+0x1c>)
 800cef2:	9300      	str	r3, [sp, #0]
 800cef4:	460a      	mov	r2, r1
 800cef6:	2322      	movs	r3, #34	; 0x22
 800cef8:	210f      	movs	r1, #15
 800cefa:	6800      	ldr	r0, [r0, #0]
 800cefc:	f7ff ff66 	bl	800cdcc <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800cf00:	b003      	add	sp, #12
 800cf02:	f85d fb04 	ldr.w	pc, [sp], #4
 800cf06:	bf00      	nop
 800cf08:	20005228 	andcs	r5, r0, r8, lsr #4

0800cf0c <StoreDisplayUdf::Update(displayudfparams::Params const*)>:
 800cf0c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800cf0e:	2200      	movs	r2, #0
 800cf10:	460b      	mov	r3, r1
 800cf12:	2122      	movs	r1, #34	; 0x22
 800cf14:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800cf18:	4804      	ldr	r0, [pc, #16]	; (800cf2c <StoreDisplayUdf::Update(displayudfparams::Params const*)+0x20>)
 800cf1a:	9100      	str	r1, [sp, #0]
 800cf1c:	6800      	ldr	r0, [r0, #0]
 800cf1e:	210f      	movs	r1, #15
 800cf20:	f7ff ff14 	bl	800cd4c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800cf24:	b005      	add	sp, #20
 800cf26:	f85d fb04 	ldr.w	pc, [sp], #4
 800cf2a:	bf00      	nop
 800cf2c:	20005228 	andcs	r5, r0, r8, lsr #4

0800cf30 <StoreDisplayUdf::~StoreDisplayUdf()>:
 800cf30:	b510      	push	{r4, lr}
 800cf32:	4604      	mov	r4, r0
 800cf34:	f003 fd80 	bl	8010a38 <operator delete(void*)>
 800cf38:	4620      	mov	r0, r4
 800cf3a:	bd10      	pop	{r4, pc}

0800cf3c <StoreDisplayUdf::StoreDisplayUdf()>:
 800cf3c:	4a02      	ldr	r2, [pc, #8]	; (800cf48 <StoreDisplayUdf::StoreDisplayUdf()+0xc>)
 800cf3e:	6002      	str	r2, [r0, #0]
 800cf40:	4a02      	ldr	r2, [pc, #8]	; (800cf4c <StoreDisplayUdf::StoreDisplayUdf()+0x10>)
 800cf42:	6010      	str	r0, [r2, #0]
 800cf44:	4770      	bx	lr
 800cf46:	bf00      	nop
 800cf48:	08014994 	stmdaeq	r1, {r2, r4, r7, r8, fp, lr}
 800cf4c:	20005230 	andcs	r5, r0, r0, lsr r2

0800cf50 <StoreDmxSend::~StoreDmxSend()>:
 800cf50:	4770      	bx	lr
	...

0800cf54 <StoreDmxSend::Copy(TDmxParams*)>:
 800cf54:	2300      	movs	r3, #0
 800cf56:	b507      	push	{r0, r1, r2, lr}
 800cf58:	4805      	ldr	r0, [pc, #20]	; (800cf70 <StoreDmxSend::Copy(TDmxParams*)+0x1c>)
 800cf5a:	9300      	str	r3, [sp, #0]
 800cf5c:	460a      	mov	r2, r1
 800cf5e:	230a      	movs	r3, #10
 800cf60:	2102      	movs	r1, #2
 800cf62:	6800      	ldr	r0, [r0, #0]
 800cf64:	f7ff ff32 	bl	800cdcc <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800cf68:	b003      	add	sp, #12
 800cf6a:	f85d fb04 	ldr.w	pc, [sp], #4
 800cf6e:	bf00      	nop
 800cf70:	20005228 	andcs	r5, r0, r8, lsr #4

0800cf74 <StoreDmxSend::Update(TDmxParams const*)>:
 800cf74:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800cf76:	2200      	movs	r2, #0
 800cf78:	460b      	mov	r3, r1
 800cf7a:	210a      	movs	r1, #10
 800cf7c:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800cf80:	4804      	ldr	r0, [pc, #16]	; (800cf94 <StoreDmxSend::Update(TDmxParams const*)+0x20>)
 800cf82:	9100      	str	r1, [sp, #0]
 800cf84:	6800      	ldr	r0, [r0, #0]
 800cf86:	2102      	movs	r1, #2
 800cf88:	f7ff fee0 	bl	800cd4c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800cf8c:	b005      	add	sp, #20
 800cf8e:	f85d fb04 	ldr.w	pc, [sp], #4
 800cf92:	bf00      	nop
 800cf94:	20005228 	andcs	r5, r0, r8, lsr #4

0800cf98 <StoreDmxSend::~StoreDmxSend()>:
 800cf98:	b510      	push	{r4, lr}
 800cf9a:	4604      	mov	r4, r0
 800cf9c:	f003 fd4c 	bl	8010a38 <operator delete(void*)>
 800cfa0:	4620      	mov	r0, r4
 800cfa2:	bd10      	pop	{r4, pc}

0800cfa4 <StoreDmxSend::StoreDmxSend()>:
 800cfa4:	4a02      	ldr	r2, [pc, #8]	; (800cfb0 <StoreDmxSend::StoreDmxSend()+0xc>)
 800cfa6:	6002      	str	r2, [r0, #0]
 800cfa8:	4a02      	ldr	r2, [pc, #8]	; (800cfb4 <StoreDmxSend::StoreDmxSend()+0x10>)
 800cfaa:	6010      	str	r0, [r2, #0]
 800cfac:	4770      	bx	lr
 800cfae:	bf00      	nop
 800cfb0:	080149ac 	stmdaeq	r1, {r2, r3, r5, r7, r8, fp, lr}
 800cfb4:	20005234 	andcs	r5, r0, r4, lsr r2

0800cfb8 <StoreE131::~StoreE131()>:
 800cfb8:	4770      	bx	lr
	...

0800cfbc <StoreE131::Copy(e131params::Params*)>:
 800cfbc:	2300      	movs	r3, #0
 800cfbe:	b507      	push	{r0, r1, r2, lr}
 800cfc0:	4805      	ldr	r0, [pc, #20]	; (800cfd8 <StoreE131::Copy(e131params::Params*)+0x1c>)
 800cfc2:	9300      	str	r3, [sp, #0]
 800cfc4:	460a      	mov	r2, r1
 800cfc6:	231f      	movs	r3, #31
 800cfc8:	2104      	movs	r1, #4
 800cfca:	6800      	ldr	r0, [r0, #0]
 800cfcc:	f7ff fefe 	bl	800cdcc <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800cfd0:	b003      	add	sp, #12
 800cfd2:	f85d fb04 	ldr.w	pc, [sp], #4
 800cfd6:	bf00      	nop
 800cfd8:	20005228 	andcs	r5, r0, r8, lsr #4

0800cfdc <StoreE131::Update(e131params::Params const*)>:
 800cfdc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800cfde:	2200      	movs	r2, #0
 800cfe0:	460b      	mov	r3, r1
 800cfe2:	211f      	movs	r1, #31
 800cfe4:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800cfe8:	4804      	ldr	r0, [pc, #16]	; (800cffc <StoreE131::Update(e131params::Params const*)+0x20>)
 800cfea:	9100      	str	r1, [sp, #0]
 800cfec:	6800      	ldr	r0, [r0, #0]
 800cfee:	2104      	movs	r1, #4
 800cff0:	f7ff feac 	bl	800cd4c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800cff4:	b005      	add	sp, #20
 800cff6:	f85d fb04 	ldr.w	pc, [sp], #4
 800cffa:	bf00      	nop
 800cffc:	20005228 	andcs	r5, r0, r8, lsr #4

0800d000 <StoreE131::~StoreE131()>:
 800d000:	b510      	push	{r4, lr}
 800d002:	4604      	mov	r4, r0
 800d004:	f003 fd18 	bl	8010a38 <operator delete(void*)>
 800d008:	4620      	mov	r0, r4
 800d00a:	bd10      	pop	{r4, pc}

0800d00c <StoreE131::StoreE131()>:
 800d00c:	4a02      	ldr	r2, [pc, #8]	; (800d018 <StoreE131::StoreE131()+0xc>)
 800d00e:	6002      	str	r2, [r0, #0]
 800d010:	4a02      	ldr	r2, [pc, #8]	; (800d01c <StoreE131::StoreE131()+0x10>)
 800d012:	6010      	str	r0, [r2, #0]
 800d014:	4770      	bx	lr
 800d016:	bf00      	nop
 800d018:	080149c4 	stmdaeq	r1, {r2, r6, r7, r8, fp, lr}
 800d01c:	20005238 	andcs	r5, r0, r8, lsr r2

0800d020 <StoreNetwork::~StoreNetwork()>:
 800d020:	4770      	bx	lr

0800d022 <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 800d022:	3804      	subs	r0, #4
 800d024:	4770      	bx	lr
	...

0800d028 <StoreNetwork::Update(TNetworkParams const*)>:
 800d028:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800d02a:	2200      	movs	r2, #0
 800d02c:	460b      	mov	r3, r1
 800d02e:	215e      	movs	r1, #94	; 0x5e
 800d030:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800d034:	4804      	ldr	r0, [pc, #16]	; (800d048 <StoreNetwork::Update(TNetworkParams const*)+0x20>)
 800d036:	9100      	str	r1, [sp, #0]
 800d038:	6800      	ldr	r0, [r0, #0]
 800d03a:	4611      	mov	r1, r2
 800d03c:	f7ff fe86 	bl	800cd4c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800d040:	b005      	add	sp, #20
 800d042:	f85d fb04 	ldr.w	pc, [sp], #4
 800d046:	bf00      	nop
 800d048:	20005228 	andcs	r5, r0, r8, lsr #4

0800d04c <StoreNetwork::SaveDhcp(bool)>:
 800d04c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800d04e:	2301      	movs	r3, #1
 800d050:	f88d 1017 	strb.w	r1, [sp, #23]
 800d054:	2100      	movs	r1, #0
 800d056:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800d05a:	4805      	ldr	r0, [pc, #20]	; (800d070 <StoreNetwork::SaveDhcp(bool)+0x24>)
 800d05c:	9300      	str	r3, [sp, #0]
 800d05e:	2214      	movs	r2, #20
 800d060:	6800      	ldr	r0, [r0, #0]
 800d062:	f10d 0317 	add.w	r3, sp, #23
 800d066:	f7ff fe71 	bl	800cd4c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800d06a:	b007      	add	sp, #28
 800d06c:	f85d fb04 	ldr.w	pc, [sp], #4
 800d070:	20005228 	andcs	r5, r0, r8, lsr #4

0800d074 <non-virtual thunk to StoreNetwork::SaveDhcp(bool)>:
 800d074:	f1a0 0004 	sub.w	r0, r0, #4
 800d078:	e7e8      	b.n	800d04c <StoreNetwork::SaveDhcp(bool)>
 800d07a:	bf00      	nop

0800d07c <StoreNetwork::SaveGatewayIp(unsigned int)>:
 800d07c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800d07e:	2308      	movs	r3, #8
 800d080:	9105      	str	r1, [sp, #20]
 800d082:	2100      	movs	r1, #0
 800d084:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800d088:	2304      	movs	r3, #4
 800d08a:	4805      	ldr	r0, [pc, #20]	; (800d0a0 <StoreNetwork::SaveGatewayIp(unsigned int)+0x24>)
 800d08c:	9300      	str	r3, [sp, #0]
 800d08e:	220c      	movs	r2, #12
 800d090:	6800      	ldr	r0, [r0, #0]
 800d092:	ab05      	add	r3, sp, #20
 800d094:	f7ff fe5a 	bl	800cd4c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800d098:	b007      	add	sp, #28
 800d09a:	f85d fb04 	ldr.w	pc, [sp], #4
 800d09e:	bf00      	nop
 800d0a0:	20005228 	andcs	r5, r0, r8, lsr #4

0800d0a4 <non-virtual thunk to StoreNetwork::SaveGatewayIp(unsigned int)>:
 800d0a4:	f1a0 0004 	sub.w	r0, r0, #4
 800d0a8:	e7e8      	b.n	800d07c <StoreNetwork::SaveGatewayIp(unsigned int)>
 800d0aa:	bf00      	nop

0800d0ac <StoreNetwork::SaveNetMask(unsigned int)>:
 800d0ac:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800d0ae:	2304      	movs	r3, #4
 800d0b0:	9105      	str	r1, [sp, #20]
 800d0b2:	2100      	movs	r1, #0
 800d0b4:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800d0b8:	4804      	ldr	r0, [pc, #16]	; (800d0cc <StoreNetwork::SaveNetMask(unsigned int)+0x20>)
 800d0ba:	9300      	str	r3, [sp, #0]
 800d0bc:	2208      	movs	r2, #8
 800d0be:	6800      	ldr	r0, [r0, #0]
 800d0c0:	ab05      	add	r3, sp, #20
 800d0c2:	f7ff fe43 	bl	800cd4c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800d0c6:	b007      	add	sp, #28
 800d0c8:	f85d fb04 	ldr.w	pc, [sp], #4
 800d0cc:	20005228 	andcs	r5, r0, r8, lsr #4

0800d0d0 <non-virtual thunk to StoreNetwork::SaveNetMask(unsigned int)>:
 800d0d0:	f1a0 0004 	sub.w	r0, r0, #4
 800d0d4:	e7ea      	b.n	800d0ac <StoreNetwork::SaveNetMask(unsigned int)>
 800d0d6:	bf00      	nop

0800d0d8 <StoreNetwork::SaveIp(unsigned int)>:
 800d0d8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800d0da:	2302      	movs	r3, #2
 800d0dc:	9105      	str	r1, [sp, #20]
 800d0de:	2100      	movs	r1, #0
 800d0e0:	2204      	movs	r2, #4
 800d0e2:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800d0e6:	4804      	ldr	r0, [pc, #16]	; (800d0f8 <StoreNetwork::SaveIp(unsigned int)+0x20>)
 800d0e8:	9200      	str	r2, [sp, #0]
 800d0ea:	6800      	ldr	r0, [r0, #0]
 800d0ec:	ab05      	add	r3, sp, #20
 800d0ee:	f7ff fe2d 	bl	800cd4c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800d0f2:	b007      	add	sp, #28
 800d0f4:	f85d fb04 	ldr.w	pc, [sp], #4
 800d0f8:	20005228 	andcs	r5, r0, r8, lsr #4

0800d0fc <non-virtual thunk to StoreNetwork::SaveIp(unsigned int)>:
 800d0fc:	f1a0 0004 	sub.w	r0, r0, #4
 800d100:	e7ea      	b.n	800d0d8 <StoreNetwork::SaveIp(unsigned int)>
 800d102:	bf00      	nop

0800d104 <StoreNetwork::SaveHostName(char const*, unsigned int)>:
 800d104:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800d106:	460b      	mov	r3, r1
 800d108:	2020      	movs	r0, #32
 800d10a:	2100      	movs	r1, #0
 800d10c:	2a40      	cmp	r2, #64	; 0x40
 800d10e:	bf28      	it	cs
 800d110:	2240      	movcs	r2, #64	; 0x40
 800d112:	e9cd 0101 	strd	r0, r1, [sp, #4]
 800d116:	4804      	ldr	r0, [pc, #16]	; (800d128 <StoreNetwork::SaveHostName(char const*, unsigned int)+0x24>)
 800d118:	9200      	str	r2, [sp, #0]
 800d11a:	6800      	ldr	r0, [r0, #0]
 800d11c:	2215      	movs	r2, #21
 800d11e:	f7ff fe15 	bl	800cd4c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800d122:	b005      	add	sp, #20
 800d124:	f85d fb04 	ldr.w	pc, [sp], #4
 800d128:	20005228 	andcs	r5, r0, r8, lsr #4

0800d12c <non-virtual thunk to StoreNetwork::SaveHostName(char const*, unsigned int)>:
 800d12c:	f1a0 0004 	sub.w	r0, r0, #4
 800d130:	e7e8      	b.n	800d104 <StoreNetwork::SaveHostName(char const*, unsigned int)>
 800d132:	bf00      	nop

0800d134 <StoreNetwork::~StoreNetwork()>:
 800d134:	b510      	push	{r4, lr}
 800d136:	4604      	mov	r4, r0
 800d138:	f003 fc7e 	bl	8010a38 <operator delete(void*)>
 800d13c:	4620      	mov	r0, r4
 800d13e:	bd10      	pop	{r4, pc}

0800d140 <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 800d140:	f1a0 0004 	sub.w	r0, r0, #4
 800d144:	e7f6      	b.n	800d134 <StoreNetwork::~StoreNetwork()>
	...

0800d148 <StoreNetwork::Copy(TNetworkParams*)>:
 800d148:	b507      	push	{r0, r1, r2, lr}
 800d14a:	460a      	mov	r2, r1
 800d14c:	2100      	movs	r1, #0
 800d14e:	4804      	ldr	r0, [pc, #16]	; (800d160 <StoreNetwork::Copy(TNetworkParams*)+0x18>)
 800d150:	9100      	str	r1, [sp, #0]
 800d152:	235e      	movs	r3, #94	; 0x5e
 800d154:	6800      	ldr	r0, [r0, #0]
 800d156:	f7ff fe39 	bl	800cdcc <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800d15a:	b003      	add	sp, #12
 800d15c:	f85d fb04 	ldr.w	pc, [sp], #4
 800d160:	20005228 	andcs	r5, r0, r8, lsr #4

0800d164 <StoreNetwork::StoreNetwork()>:
 800d164:	4a03      	ldr	r2, [pc, #12]	; (800d174 <StoreNetwork::StoreNetwork()+0x10>)
 800d166:	6002      	str	r2, [r0, #0]
 800d168:	322c      	adds	r2, #44	; 0x2c
 800d16a:	6042      	str	r2, [r0, #4]
 800d16c:	4a02      	ldr	r2, [pc, #8]	; (800d178 <StoreNetwork::StoreNetwork()+0x14>)
 800d16e:	6010      	str	r0, [r2, #0]
 800d170:	4770      	bx	lr
 800d172:	bf00      	nop
 800d174:	080149dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r8, fp, lr}
 800d178:	2000523c 	andcs	r5, r0, ip, lsr r2

0800d17c <StoreRemoteConfig::~StoreRemoteConfig()>:
 800d17c:	4770      	bx	lr
	...

0800d180 <StoreRemoteConfig::Copy(TRemoteConfigParams*)>:
 800d180:	2300      	movs	r3, #0
 800d182:	b507      	push	{r0, r1, r2, lr}
 800d184:	4805      	ldr	r0, [pc, #20]	; (800d19c <StoreRemoteConfig::Copy(TRemoteConfigParams*)+0x1c>)
 800d186:	9300      	str	r3, [sp, #0]
 800d188:	460a      	mov	r2, r1
 800d18a:	2320      	movs	r3, #32
 800d18c:	210c      	movs	r1, #12
 800d18e:	6800      	ldr	r0, [r0, #0]
 800d190:	f7ff fe1c 	bl	800cdcc <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800d194:	b003      	add	sp, #12
 800d196:	f85d fb04 	ldr.w	pc, [sp], #4
 800d19a:	bf00      	nop
 800d19c:	20005228 	andcs	r5, r0, r8, lsr #4

0800d1a0 <StoreRemoteConfig::Update(TRemoteConfigParams const*)>:
 800d1a0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800d1a2:	2200      	movs	r2, #0
 800d1a4:	460b      	mov	r3, r1
 800d1a6:	2120      	movs	r1, #32
 800d1a8:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800d1ac:	4804      	ldr	r0, [pc, #16]	; (800d1c0 <StoreRemoteConfig::Update(TRemoteConfigParams const*)+0x20>)
 800d1ae:	9100      	str	r1, [sp, #0]
 800d1b0:	6800      	ldr	r0, [r0, #0]
 800d1b2:	210c      	movs	r1, #12
 800d1b4:	f7ff fdca 	bl	800cd4c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800d1b8:	b005      	add	sp, #20
 800d1ba:	f85d fb04 	ldr.w	pc, [sp], #4
 800d1be:	bf00      	nop
 800d1c0:	20005228 	andcs	r5, r0, r8, lsr #4

0800d1c4 <StoreRemoteConfig::~StoreRemoteConfig()>:
 800d1c4:	b510      	push	{r4, lr}
 800d1c6:	4604      	mov	r4, r0
 800d1c8:	f003 fc36 	bl	8010a38 <operator delete(void*)>
 800d1cc:	4620      	mov	r0, r4
 800d1ce:	bd10      	pop	{r4, pc}

0800d1d0 <StoreRemoteConfig::StoreRemoteConfig()>:
 800d1d0:	4a02      	ldr	r2, [pc, #8]	; (800d1dc <StoreRemoteConfig::StoreRemoteConfig()+0xc>)
 800d1d2:	6002      	str	r2, [r0, #0]
 800d1d4:	4a02      	ldr	r2, [pc, #8]	; (800d1e0 <StoreRemoteConfig::StoreRemoteConfig()+0x10>)
 800d1d6:	6010      	str	r0, [r2, #0]
 800d1d8:	4770      	bx	lr
 800d1da:	bf00      	nop
 800d1dc:	08014a2c 	stmdaeq	r1, {r2, r3, r5, r9, fp, lr}
 800d1e0:	20005240 	andcs	r5, r0, r0, asr #4

0800d1e4 <FlashRom::FlashRom()>:
 800d1e4:	4b07      	ldr	r3, [pc, #28]	; (800d204 <FlashRom::FlashRom()+0x20>)
 800d1e6:	b510      	push	{r4, lr}
 800d1e8:	6018      	str	r0, [r3, #0]
 800d1ea:	2301      	movs	r3, #1
 800d1ec:	4604      	mov	r4, r0
 800d1ee:	7003      	strb	r3, [r0, #0]
 800d1f0:	4b05      	ldr	r3, [pc, #20]	; (800d208 <FlashRom::FlashRom()+0x24>)
 800d1f2:	4906      	ldr	r1, [pc, #24]	; (800d20c <FlashRom::FlashRom()+0x28>)
 800d1f4:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800d1f8:	4805      	ldr	r0, [pc, #20]	; (800d210 <FlashRom::FlashRom()+0x2c>)
 800d1fa:	029a      	lsls	r2, r3, #10
 800d1fc:	f004 f826 	bl	801124c <printf>
 800d200:	4620      	mov	r0, r4
 800d202:	bd10      	pop	{r4, pc}
 800d204:	20005244 	andcs	r5, r0, r4, asr #4
 800d208:	1ffff700 	svcne	0x00fff700
 800d20c:	08014a3c 	stmdaeq	r1, {r2, r3, r4, r5, r9, fp, lr}
 800d210:	08014a45 	stmdaeq	r1, {r0, r2, r6, r9, fp, lr}

0800d214 <FlashRom::GetSize() const>:
 800d214:	4b02      	ldr	r3, [pc, #8]	; (800d220 <FlashRom::GetSize() const+0xc>)
 800d216:	f8b3 00e0 	ldrh.w	r0, [r3, #224]	; 0xe0
 800d21a:	0280      	lsls	r0, r0, #10
 800d21c:	4770      	bx	lr
 800d21e:	bf00      	nop
 800d220:	1ffff700 	svcne	0x00fff700

0800d224 <FlashRom::GetSectorSize() const>:
 800d224:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 800d228:	4770      	bx	lr

0800d22a <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)>:
 800d22a:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800d22e:	441a      	add	r2, r3
 800d230:	4293      	cmp	r3, r2
 800d232:	d004      	beq.n	800d23e <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)+0x14>
 800d234:	f851 0b04 	ldr.w	r0, [r1], #4
 800d238:	f843 0b04 	str.w	r0, [r3], #4
 800d23c:	e7f8      	b.n	800d230 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)+0x6>
 800d23e:	2200      	movs	r2, #0
 800d240:	9b00      	ldr	r3, [sp, #0]
 800d242:	2001      	movs	r0, #1
 800d244:	601a      	str	r2, [r3, #0]
 800d246:	4770      	bx	lr

0800d248 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)>:
 800d248:	2000      	movs	r0, #0
 800d24a:	b538      	push	{r3, r4, r5, lr}
 800d24c:	4c47      	ldr	r4, [pc, #284]	; (800d36c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x124>)
 800d24e:	6018      	str	r0, [r3, #0]
 800d250:	6823      	ldr	r3, [r4, #0]
 800d252:	2b04      	cmp	r3, #4
 800d254:	f200 8082 	bhi.w	800d35c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x114>
 800d258:	e8df f003 	tbb	[pc, r3]
 800d25c:	78452003 	stmdavc	r5, {r0, r1, sp}^
 800d260:	4b430080 	blmi	90cd468 <__exidx_end+0x10b80f4>
 800d264:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800d268:	6019      	str	r1, [r3, #0]
 800d26a:	4b42      	ldr	r3, [pc, #264]	; (800d374 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800d26c:	601a      	str	r2, [r3, #0]
 800d26e:	4b42      	ldr	r3, [pc, #264]	; (800d378 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x130>)
 800d270:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800d274:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800d278:	4b40      	ldr	r3, [pc, #256]	; (800d37c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800d27a:	d807      	bhi.n	800d28c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x44>
 800d27c:	2201      	movs	r2, #1
 800d27e:	701a      	strb	r2, [r3, #0]
 800d280:	f004 fab0 	bl	80117e4 <fmc_bank0_unlock>
 800d284:	2301      	movs	r3, #1
 800d286:	6023      	str	r3, [r4, #0]
 800d288:	2000      	movs	r0, #0
 800d28a:	e026      	b.n	800d2da <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x92>
 800d28c:	4a3c      	ldr	r2, [pc, #240]	; (800d380 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x138>)
 800d28e:	4291      	cmp	r1, r2
 800d290:	d3f4      	bcc.n	800d27c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x34>
 800d292:	2200      	movs	r2, #0
 800d294:	701a      	strb	r2, [r3, #0]
 800d296:	f004 fab3 	bl	8011800 <fmc_bank1_unlock>
 800d29a:	e7f3      	b.n	800d284 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 800d29c:	4d37      	ldr	r5, [pc, #220]	; (800d37c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800d29e:	782b      	ldrb	r3, [r5, #0]
 800d2a0:	b15b      	cbz	r3, 800d2ba <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x72>
 800d2a2:	f004 facb 	bl	801183c <fmc_bank0_state_get>
 800d2a6:	2801      	cmp	r0, #1
 800d2a8:	d0ee      	beq.n	800d288 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x40>
 800d2aa:	7829      	ldrb	r1, [r5, #0]
 800d2ac:	4b35      	ldr	r3, [pc, #212]	; (800d384 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800d2ae:	b939      	cbnz	r1, 800d2c0 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x78>
 800d2b0:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800d2b2:	f022 0202 	bic.w	r2, r2, #2
 800d2b6:	651a      	str	r2, [r3, #80]	; 0x50
 800d2b8:	e006      	b.n	800d2c8 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x80>
 800d2ba:	f004 fad3 	bl	8011864 <fmc_bank1_state_get>
 800d2be:	e7f2      	b.n	800d2a6 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x5e>
 800d2c0:	691a      	ldr	r2, [r3, #16]
 800d2c2:	f022 0202 	bic.w	r2, r2, #2
 800d2c6:	611a      	str	r2, [r3, #16]
 800d2c8:	4b2a      	ldr	r3, [pc, #168]	; (800d374 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800d2ca:	681b      	ldr	r3, [r3, #0]
 800d2cc:	b94b      	cbnz	r3, 800d2e2 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x9a>
 800d2ce:	b129      	cbz	r1, 800d2dc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x94>
 800d2d0:	f004 faa4 	bl	801181c <fmc_bank0_lock>
 800d2d4:	2300      	movs	r3, #0
 800d2d6:	2001      	movs	r0, #1
 800d2d8:	6023      	str	r3, [r4, #0]
 800d2da:	bd38      	pop	{r3, r4, r5, pc}
 800d2dc:	f004 faa6 	bl	801182c <fmc_bank1_lock>
 800d2e0:	e7f8      	b.n	800d2d4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x8c>
 800d2e2:	2302      	movs	r3, #2
 800d2e4:	e7cf      	b.n	800d286 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3e>
 800d2e6:	4923      	ldr	r1, [pc, #140]	; (800d374 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800d2e8:	680b      	ldr	r3, [r1, #0]
 800d2ea:	2b00      	cmp	r3, #0
 800d2ec:	d0ca      	beq.n	800d284 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 800d2ee:	4b23      	ldr	r3, [pc, #140]	; (800d37c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800d2f0:	4a1f      	ldr	r2, [pc, #124]	; (800d370 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x128>)
 800d2f2:	7818      	ldrb	r0, [r3, #0]
 800d2f4:	4b23      	ldr	r3, [pc, #140]	; (800d384 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800d2f6:	b190      	cbz	r0, 800d31e <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0xd6>
 800d2f8:	6918      	ldr	r0, [r3, #16]
 800d2fa:	f040 0002 	orr.w	r0, r0, #2
 800d2fe:	6118      	str	r0, [r3, #16]
 800d300:	6810      	ldr	r0, [r2, #0]
 800d302:	6158      	str	r0, [r3, #20]
 800d304:	6918      	ldr	r0, [r3, #16]
 800d306:	f040 0040 	orr.w	r0, r0, #64	; 0x40
 800d30a:	6118      	str	r0, [r3, #16]
 800d30c:	680b      	ldr	r3, [r1, #0]
 800d30e:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 800d312:	600b      	str	r3, [r1, #0]
 800d314:	6813      	ldr	r3, [r2, #0]
 800d316:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800d31a:	6013      	str	r3, [r2, #0]
 800d31c:	e7b2      	b.n	800d284 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 800d31e:	6d18      	ldr	r0, [r3, #80]	; 0x50
 800d320:	f040 0002 	orr.w	r0, r0, #2
 800d324:	6518      	str	r0, [r3, #80]	; 0x50
 800d326:	6810      	ldr	r0, [r2, #0]
 800d328:	6558      	str	r0, [r3, #84]	; 0x54
 800d32a:	69dd      	ldr	r5, [r3, #28]
 800d32c:	07ad      	lsls	r5, r5, #30
 800d32e:	bf48      	it	mi
 800d330:	6158      	strmi	r0, [r3, #20]
 800d332:	4814      	ldr	r0, [pc, #80]	; (800d384 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800d334:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800d336:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800d33a:	6503      	str	r3, [r0, #80]	; 0x50
 800d33c:	680b      	ldr	r3, [r1, #0]
 800d33e:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
 800d342:	600b      	str	r3, [r1, #0]
 800d344:	6813      	ldr	r3, [r2, #0]
 800d346:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800d34a:	e7e6      	b.n	800d31a <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0xd2>
 800d34c:	4b0b      	ldr	r3, [pc, #44]	; (800d37c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800d34e:	781a      	ldrb	r2, [r3, #0]
 800d350:	4b0c      	ldr	r3, [pc, #48]	; (800d384 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800d352:	b132      	cbz	r2, 800d362 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x11a>
 800d354:	691a      	ldr	r2, [r3, #16]
 800d356:	f022 0201 	bic.w	r2, r2, #1
 800d35a:	611a      	str	r2, [r3, #16]
 800d35c:	2000      	movs	r0, #0
 800d35e:	6020      	str	r0, [r4, #0]
 800d360:	e7bb      	b.n	800d2da <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x92>
 800d362:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800d364:	f022 0201 	bic.w	r2, r2, #1
 800d368:	651a      	str	r2, [r3, #80]	; 0x50
 800d36a:	e7f7      	b.n	800d35c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x114>
 800d36c:	2000524c 	andcs	r5, r0, ip, asr #4
 800d370:	20005250 	andcs	r5, r0, r0, asr r2
 800d374:	2000525c 	andcs	r5, r0, ip, asr r2
 800d378:	1ffff700 	svcne	0x00fff700
 800d37c:	20005258 	andcs	r5, r0, r8, asr r2
 800d380:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 800d384:	40022000 	andmi	r2, r2, r0

0800d388 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)>:
 800d388:	b570      	push	{r4, r5, r6, lr}
 800d38a:	2400      	movs	r4, #0
 800d38c:	9804      	ldr	r0, [sp, #16]
 800d38e:	6004      	str	r4, [r0, #0]
 800d390:	4c48      	ldr	r4, [pc, #288]	; (800d4b4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x12c>)
 800d392:	6820      	ldr	r0, [r4, #0]
 800d394:	2804      	cmp	r0, #4
 800d396:	d848      	bhi.n	800d42a <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xa2>
 800d398:	e8df f000 	tbb	[pc, r0]
 800d39c:	22847c03 	addcs	r7, r4, #768	; 0x300
 800d3a0:	48450047 	stmdami	r5, {r0, r1, r2, r6}^
 800d3a4:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800d3a8:	6001      	str	r1, [r0, #0]
 800d3aa:	4844      	ldr	r0, [pc, #272]	; (800d4bc <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 800d3ac:	6003      	str	r3, [r0, #0]
 800d3ae:	4b44      	ldr	r3, [pc, #272]	; (800d4c0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 800d3b0:	601a      	str	r2, [r3, #0]
 800d3b2:	4b44      	ldr	r3, [pc, #272]	; (800d4c4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x13c>)
 800d3b4:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800d3b8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800d3bc:	4b42      	ldr	r3, [pc, #264]	; (800d4c8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800d3be:	d807      	bhi.n	800d3d0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x48>
 800d3c0:	2201      	movs	r2, #1
 800d3c2:	701a      	strb	r2, [r3, #0]
 800d3c4:	f004 fa0e 	bl	80117e4 <fmc_bank0_unlock>
 800d3c8:	2303      	movs	r3, #3
 800d3ca:	6023      	str	r3, [r4, #0]
 800d3cc:	2000      	movs	r0, #0
 800d3ce:	e026      	b.n	800d41e <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x96>
 800d3d0:	4a3e      	ldr	r2, [pc, #248]	; (800d4cc <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x144>)
 800d3d2:	4291      	cmp	r1, r2
 800d3d4:	d3f4      	bcc.n	800d3c0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x38>
 800d3d6:	2200      	movs	r2, #0
 800d3d8:	701a      	strb	r2, [r3, #0]
 800d3da:	f004 fa11 	bl	8011800 <fmc_bank1_unlock>
 800d3de:	e7f3      	b.n	800d3c8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800d3e0:	4d39      	ldr	r5, [pc, #228]	; (800d4c8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800d3e2:	782b      	ldrb	r3, [r5, #0]
 800d3e4:	b15b      	cbz	r3, 800d3fe <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x76>
 800d3e6:	f004 fa29 	bl	801183c <fmc_bank0_state_get>
 800d3ea:	2801      	cmp	r0, #1
 800d3ec:	d0ee      	beq.n	800d3cc <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x44>
 800d3ee:	7829      	ldrb	r1, [r5, #0]
 800d3f0:	4b37      	ldr	r3, [pc, #220]	; (800d4d0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800d3f2:	b939      	cbnz	r1, 800d404 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x7c>
 800d3f4:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800d3f6:	f022 0201 	bic.w	r2, r2, #1
 800d3fa:	651a      	str	r2, [r3, #80]	; 0x50
 800d3fc:	e006      	b.n	800d40c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x84>
 800d3fe:	f004 fa31 	bl	8011864 <fmc_bank1_state_get>
 800d402:	e7f2      	b.n	800d3ea <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x62>
 800d404:	691a      	ldr	r2, [r3, #16]
 800d406:	f022 0201 	bic.w	r2, r2, #1
 800d40a:	611a      	str	r2, [r3, #16]
 800d40c:	4b2c      	ldr	r3, [pc, #176]	; (800d4c0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 800d40e:	681b      	ldr	r3, [r3, #0]
 800d410:	b94b      	cbnz	r3, 800d426 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x9e>
 800d412:	b129      	cbz	r1, 800d420 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x98>
 800d414:	f004 fa02 	bl	801181c <fmc_bank0_lock>
 800d418:	2300      	movs	r3, #0
 800d41a:	2001      	movs	r0, #1
 800d41c:	6023      	str	r3, [r4, #0]
 800d41e:	bd70      	pop	{r4, r5, r6, pc}
 800d420:	f004 fa04 	bl	801182c <fmc_bank1_lock>
 800d424:	e7f8      	b.n	800d418 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x90>
 800d426:	2304      	movs	r3, #4
 800d428:	e7cf      	b.n	800d3ca <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x42>
 800d42a:	4a25      	ldr	r2, [pc, #148]	; (800d4c0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 800d42c:	6813      	ldr	r3, [r2, #0]
 800d42e:	2b03      	cmp	r3, #3
 800d430:	d91a      	bls.n	800d468 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xe0>
 800d432:	4b25      	ldr	r3, [pc, #148]	; (800d4c8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800d434:	7819      	ldrb	r1, [r3, #0]
 800d436:	4b26      	ldr	r3, [pc, #152]	; (800d4d0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800d438:	b189      	cbz	r1, 800d45e <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xd6>
 800d43a:	6919      	ldr	r1, [r3, #16]
 800d43c:	f041 0101 	orr.w	r1, r1, #1
 800d440:	6119      	str	r1, [r3, #16]
 800d442:	4d1e      	ldr	r5, [pc, #120]	; (800d4bc <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 800d444:	481c      	ldr	r0, [pc, #112]	; (800d4b8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x130>)
 800d446:	6829      	ldr	r1, [r5, #0]
 800d448:	6803      	ldr	r3, [r0, #0]
 800d44a:	f851 6b04 	ldr.w	r6, [r1], #4
 800d44e:	f843 6b04 	str.w	r6, [r3], #4
 800d452:	6003      	str	r3, [r0, #0]
 800d454:	6813      	ldr	r3, [r2, #0]
 800d456:	6029      	str	r1, [r5, #0]
 800d458:	3b04      	subs	r3, #4
 800d45a:	6013      	str	r3, [r2, #0]
 800d45c:	e7b4      	b.n	800d3c8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800d45e:	6d19      	ldr	r1, [r3, #80]	; 0x50
 800d460:	f041 0101 	orr.w	r1, r1, #1
 800d464:	6519      	str	r1, [r3, #80]	; 0x50
 800d466:	e7ec      	b.n	800d442 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xba>
 800d468:	2b00      	cmp	r3, #0
 800d46a:	d0ad      	beq.n	800d3c8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800d46c:	4b16      	ldr	r3, [pc, #88]	; (800d4c8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800d46e:	781a      	ldrb	r2, [r3, #0]
 800d470:	4b17      	ldr	r3, [pc, #92]	; (800d4d0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800d472:	b152      	cbz	r2, 800d48a <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x102>
 800d474:	691a      	ldr	r2, [r3, #16]
 800d476:	f042 0201 	orr.w	r2, r2, #1
 800d47a:	611a      	str	r2, [r3, #16]
 800d47c:	4a0f      	ldr	r2, [pc, #60]	; (800d4bc <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 800d47e:	4b0e      	ldr	r3, [pc, #56]	; (800d4b8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x130>)
 800d480:	6812      	ldr	r2, [r2, #0]
 800d482:	681b      	ldr	r3, [r3, #0]
 800d484:	6812      	ldr	r2, [r2, #0]
 800d486:	601a      	str	r2, [r3, #0]
 800d488:	e79e      	b.n	800d3c8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800d48a:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800d48c:	f042 0201 	orr.w	r2, r2, #1
 800d490:	651a      	str	r2, [r3, #80]	; 0x50
 800d492:	e7f3      	b.n	800d47c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xf4>
 800d494:	4b0c      	ldr	r3, [pc, #48]	; (800d4c8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800d496:	781a      	ldrb	r2, [r3, #0]
 800d498:	4b0d      	ldr	r3, [pc, #52]	; (800d4d0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800d49a:	b132      	cbz	r2, 800d4aa <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x122>
 800d49c:	691a      	ldr	r2, [r3, #16]
 800d49e:	f022 0202 	bic.w	r2, r2, #2
 800d4a2:	611a      	str	r2, [r3, #16]
 800d4a4:	2000      	movs	r0, #0
 800d4a6:	6020      	str	r0, [r4, #0]
 800d4a8:	e7b9      	b.n	800d41e <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x96>
 800d4aa:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800d4ac:	f022 0202 	bic.w	r2, r2, #2
 800d4b0:	651a      	str	r2, [r3, #80]	; 0x50
 800d4b2:	e7f7      	b.n	800d4a4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x11c>
 800d4b4:	2000524c 	andcs	r5, r0, ip, asr #4
 800d4b8:	20005248 	andcs	r5, r0, r8, asr #4
 800d4bc:	20005254 	andcs	r5, r0, r4, asr r2
 800d4c0:	2000525c 	andcs	r5, r0, ip, asr r2
 800d4c4:	1ffff700 	svcne	0x00fff700
 800d4c8:	20005258 	andcs	r5, r0, r8, asr r2
 800d4cc:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 800d4d0:	40022000 	andmi	r2, r2, r0

0800d4d4 <net_timers_run>:
 800d4d4:	4b05      	ldr	r3, [pc, #20]	; (800d4ec <net_timers_run+0x18>)
 800d4d6:	4a06      	ldr	r2, [pc, #24]	; (800d4f0 <net_timers_run+0x1c>)
 800d4d8:	681b      	ldr	r3, [r3, #0]
 800d4da:	6811      	ldr	r1, [r2, #0]
 800d4dc:	4299      	cmp	r1, r3
 800d4de:	d803      	bhi.n	800d4e8 <net_timers_run+0x14>
 800d4e0:	3364      	adds	r3, #100	; 0x64
 800d4e2:	6013      	str	r3, [r2, #0]
 800d4e4:	f001 bf1e 	b.w	800f324 <igmp_timer>
 800d4e8:	4770      	bx	lr
 800d4ea:	bf00      	nop
 800d4ec:	2000d26c 	andcs	sp, r0, ip, ror #4
 800d4f0:	20005278 	andcs	r5, r0, r8, ror r2

0800d4f4 <rfc3927>:
 800d4f4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d4f8:	4605      	mov	r5, r0
 800d4fa:	26ff      	movs	r6, #255	; 0xff
 800d4fc:	4b18      	ldr	r3, [pc, #96]	; (800d560 <rfc3927+0x6c>)
 800d4fe:	4f19      	ldr	r7, [pc, #100]	; (800d564 <rfc3927+0x70>)
 800d500:	791a      	ldrb	r2, [r3, #4]
 800d502:	78dc      	ldrb	r4, [r3, #3]
 800d504:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800d568 <rfc3927+0x74>
 800d508:	eb04 2402 	add.w	r4, r4, r2, lsl #8
 800d50c:	f8d7 9000 	ldr.w	r9, [r7]
 800d510:	f8df b058 	ldr.w	fp, [pc, #88]	; 800d56c <rfc3927+0x78>
 800d514:	f8df a058 	ldr.w	sl, [pc, #88]	; 800d570 <rfc3927+0x7c>
 800d518:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
 800d51c:	4659      	mov	r1, fp
 800d51e:	4620      	mov	r0, r4
 800d520:	f001 fc4e 	bl	800edc0 <arp_cache_lookup>
 800d524:	b938      	cbnz	r0, 800d536 <rfc3927+0x42>
 800d526:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800d52a:	2001      	movs	r0, #1
 800d52c:	602c      	str	r4, [r5, #0]
 800d52e:	60ac      	str	r4, [r5, #8]
 800d530:	606b      	str	r3, [r5, #4]
 800d532:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d536:	ba24      	rev	r4, r4
 800d538:	3401      	adds	r4, #1
 800d53a:	3e01      	subs	r6, #1
 800d53c:	ba24      	rev	r4, r4
 800d53e:	b2b6      	uxth	r6, r6
 800d540:	4554      	cmp	r4, sl
 800d542:	bf08      	it	eq
 800d544:	4644      	moveq	r4, r8
 800d546:	b12e      	cbz	r6, 800d554 <rfc3927+0x60>
 800d548:	683b      	ldr	r3, [r7, #0]
 800d54a:	eba3 0309 	sub.w	r3, r3, r9
 800d54e:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800d552:	d3e3      	bcc.n	800d51c <rfc3927+0x28>
 800d554:	2000      	movs	r0, #0
 800d556:	e9c5 0001 	strd	r0, r0, [r5, #4]
 800d55a:	6028      	str	r0, [r5, #0]
 800d55c:	e7e9      	b.n	800d532 <rfc3927+0x3e>
 800d55e:	bf00      	nop
 800d560:	2000527c 	andcs	r5, r0, ip, ror r2
 800d564:	2000d26c 	andcs	sp, r0, ip, ror #4
 800d568:	0100fea9 	smlatbeq	r0, r9, lr, pc	; <UNPREDICTABLE>
 800d56c:	20005284 	andcs	r5, r0, r4, lsl #5
 800d570:	fffefea9 			; <UNDEFINED> instruction: 0xfffefea9

0800d574 <_init_tcb>:
 800d574:	b510      	push	{r4, lr}
 800d576:	4603      	mov	r3, r0
 800d578:	2400      	movs	r4, #0
 800d57a:	f100 0244 	add.w	r2, r0, #68	; 0x44
 800d57e:	4293      	cmp	r3, r2
 800d580:	d10d      	bne.n	800d59e <_init_tcb+0x2a>
 800d582:	4b08      	ldr	r3, [pc, #32]	; (800d5a4 <_init_tcb+0x30>)
 800d584:	f640 3268 	movw	r2, #2920	; 0xb68
 800d588:	681b      	ldr	r3, [r3, #0]
 800d58a:	8702      	strh	r2, [r0, #56]	; 0x38
 800d58c:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800d590:	6283      	str	r3, [r0, #40]	; 0x28
 800d592:	6243      	str	r3, [r0, #36]	; 0x24
 800d594:	2301      	movs	r3, #1
 800d596:	8001      	strh	r1, [r0, #0]
 800d598:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
 800d59c:	bd10      	pop	{r4, pc}
 800d59e:	f803 4b01 	strb.w	r4, [r3], #1
 800d5a2:	e7ec      	b.n	800d57e <_init_tcb+0xa>
 800d5a4:	2000d26c 	andcs	sp, r0, ip, ror #4

0800d5a8 <memcpy.isra.0>:
 800d5a8:	3801      	subs	r0, #1
 800d5aa:	440a      	add	r2, r1
 800d5ac:	4291      	cmp	r1, r2
 800d5ae:	d100      	bne.n	800d5b2 <memcpy.isra.0+0xa>
 800d5b0:	4770      	bx	lr
 800d5b2:	f811 3b01 	ldrb.w	r3, [r1], #1
 800d5b6:	f800 3f01 	strb.w	r3, [r0, #1]!
 800d5ba:	e7f7      	b.n	800d5ac <memcpy.isra.0+0x4>

0800d5bc <_bswap32>:
 800d5bc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d5be:	2204      	movs	r2, #4
 800d5c0:	f100 052a 	add.w	r5, r0, #42	; 0x2a
 800d5c4:	4629      	mov	r1, r5
 800d5c6:	4604      	mov	r4, r0
 800d5c8:	eb0d 0002 	add.w	r0, sp, r2
 800d5cc:	f7ff ffec 	bl	800d5a8 <memcpy.isra.0>
 800d5d0:	2204      	movs	r2, #4
 800d5d2:	9b01      	ldr	r3, [sp, #4]
 800d5d4:	eb0d 0102 	add.w	r1, sp, r2
 800d5d8:	ba1b      	rev	r3, r3
 800d5da:	4628      	mov	r0, r5
 800d5dc:	9301      	str	r3, [sp, #4]
 800d5de:	f7ff ffe3 	bl	800d5a8 <memcpy.isra.0>
 800d5e2:	2204      	movs	r2, #4
 800d5e4:	3426      	adds	r4, #38	; 0x26
 800d5e6:	eb0d 0002 	add.w	r0, sp, r2
 800d5ea:	4621      	mov	r1, r4
 800d5ec:	f7ff ffdc 	bl	800d5a8 <memcpy.isra.0>
 800d5f0:	2204      	movs	r2, #4
 800d5f2:	9b01      	ldr	r3, [sp, #4]
 800d5f4:	4620      	mov	r0, r4
 800d5f6:	ba1b      	rev	r3, r3
 800d5f8:	eb0d 0102 	add.w	r1, sp, r2
 800d5fc:	9301      	str	r3, [sp, #4]
 800d5fe:	f7ff ffd3 	bl	800d5a8 <memcpy.isra.0>
 800d602:	b003      	add	sp, #12
 800d604:	bd30      	pop	{r4, r5, pc}
	...

0800d608 <_tcp_send_package>:
 800d608:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800d60c:	7a0b      	ldrb	r3, [r1, #8]
 800d60e:	4605      	mov	r5, r0
 800d610:	f013 0f02 	tst.w	r3, #2
 800d614:	bf0c      	ite	eq
 800d616:	f04f 0905 	moveq.w	r9, #5
 800d61a:	f04f 0906 	movne.w	r9, #6
 800d61e:	f04f 0800 	mov.w	r8, #0
 800d622:	4c4b      	ldr	r4, [pc, #300]	; (800d750 <_tcp_send_package+0x148>)
 800d624:	460f      	mov	r7, r1
 800d626:	8e06      	ldrh	r6, [r0, #48]	; 0x30
 800d628:	f100 0108 	add.w	r1, r0, #8
 800d62c:	2206      	movs	r2, #6
 800d62e:	4620      	mov	r0, r4
 800d630:	f7ff ffba 	bl	800d5a8 <memcpy.isra.0>
 800d634:	4a47      	ldr	r2, [pc, #284]	; (800d754 <_tcp_send_package+0x14c>)
 800d636:	eb06 0689 	add.w	r6, r6, r9, lsl #2
 800d63a:	8813      	ldrh	r3, [r2, #0]
 800d63c:	b2b6      	uxth	r6, r6
 800d63e:	1c59      	adds	r1, r3, #1
 800d640:	8263      	strh	r3, [r4, #18]
 800d642:	f105 0a04 	add.w	sl, r5, #4
 800d646:	f106 0314 	add.w	r3, r6, #20
 800d64a:	ba5b      	rev16	r3, r3
 800d64c:	8011      	strh	r1, [r2, #0]
 800d64e:	f104 001e 	add.w	r0, r4, #30
 800d652:	2204      	movs	r2, #4
 800d654:	4651      	mov	r1, sl
 800d656:	8223      	strh	r3, [r4, #16]
 800d658:	f7ff ffa6 	bl	800d5a8 <memcpy.isra.0>
 800d65c:	2114      	movs	r1, #20
 800d65e:	f104 000e 	add.w	r0, r4, #14
 800d662:	f884 8018 	strb.w	r8, [r4, #24]
 800d666:	f884 8019 	strb.w	r8, [r4, #25]
 800d66a:	f001 feee 	bl	800f44a <net_chksum>
 800d66e:	882b      	ldrh	r3, [r5, #0]
 800d670:	ea4f 1909 	mov.w	r9, r9, lsl #4
 800d674:	8463      	strh	r3, [r4, #34]	; 0x22
 800d676:	886b      	ldrh	r3, [r5, #2]
 800d678:	8320      	strh	r0, [r4, #24]
 800d67a:	84a3      	strh	r3, [r4, #36]	; 0x24
 800d67c:	683b      	ldr	r3, [r7, #0]
 800d67e:	8f2a      	ldrh	r2, [r5, #56]	; 0x38
 800d680:	f8c4 3026 	str.w	r3, [r4, #38]	; 0x26
 800d684:	687b      	ldr	r3, [r7, #4]
 800d686:	f884 902e 	strb.w	r9, [r4, #46]	; 0x2e
 800d68a:	f8c4 302a 	str.w	r3, [r4, #42]	; 0x2a
 800d68e:	7a3b      	ldrb	r3, [r7, #8]
 800d690:	8622      	strh	r2, [r4, #48]	; 0x30
 800d692:	f884 302f 	strb.w	r3, [r4, #47]	; 0x2f
 800d696:	079b      	lsls	r3, r3, #30
 800d698:	bf48      	it	mi
 800d69a:	2302      	movmi	r3, #2
 800d69c:	8baa      	ldrh	r2, [r5, #28]
 800d69e:	bf44      	itt	mi
 800d6a0:	f884 3036 	strbmi.w	r3, [r4, #54]	; 0x36
 800d6a4:	2304      	movmi	r3, #4
 800d6a6:	86a2      	strh	r2, [r4, #52]	; 0x34
 800d6a8:	bf41      	itttt	mi
 800d6aa:	f884 3037 	strbmi.w	r3, [r4, #55]	; 0x37
 800d6ae:	4622      	movmi	r2, r4
 800d6b0:	f24b 4305 	movwmi	r3, #46085	; 0xb405
 800d6b4:	f822 3f38 	strhmi.w	r3, [r2, #56]!
 800d6b8:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800d6ba:	f884 8032 	strb.w	r8, [r4, #50]	; 0x32
 800d6be:	f884 8033 	strb.w	r8, [r4, #51]	; 0x33
 800d6c2:	bf58      	it	pl
 800d6c4:	f104 0236 	addpl.w	r2, r4, #54	; 0x36
 800d6c8:	2b00      	cmp	r3, #0
 800d6ca:	d13f      	bne.n	800d74c <_tcp_send_package+0x144>
 800d6cc:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 800d6ce:	4820      	ldr	r0, [pc, #128]	; (800d750 <_tcp_send_package+0x148>)
 800d6d0:	ba5b      	rev16	r3, r3
 800d6d2:	8463      	strh	r3, [r4, #34]	; 0x22
 800d6d4:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 800d6d6:	ba5b      	rev16	r3, r3
 800d6d8:	84a3      	strh	r3, [r4, #36]	; 0x24
 800d6da:	f7ff ff6f 	bl	800d5bc <_bswap32>
 800d6de:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800d6e0:	a801      	add	r0, sp, #4
 800d6e2:	ba5b      	rev16	r3, r3
 800d6e4:	8623      	strh	r3, [r4, #48]	; 0x30
 800d6e6:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800d6e8:	220c      	movs	r2, #12
 800d6ea:	ba5b      	rev16	r3, r3
 800d6ec:	491a      	ldr	r1, [pc, #104]	; (800d758 <_tcp_send_package+0x150>)
 800d6ee:	86a3      	strh	r3, [r4, #52]	; 0x34
 800d6f0:	f7ff ff5a 	bl	800d5a8 <memcpy.isra.0>
 800d6f4:	2204      	movs	r2, #4
 800d6f6:	4919      	ldr	r1, [pc, #100]	; (800d75c <_tcp_send_package+0x154>)
 800d6f8:	4817      	ldr	r0, [pc, #92]	; (800d758 <_tcp_send_package+0x150>)
 800d6fa:	f7ff ff55 	bl	800d5a8 <memcpy.isra.0>
 800d6fe:	2204      	movs	r2, #4
 800d700:	4651      	mov	r1, sl
 800d702:	4817      	ldr	r0, [pc, #92]	; (800d760 <_tcp_send_package+0x158>)
 800d704:	f7ff ff50 	bl	800d5a8 <memcpy.isra.0>
 800d708:	2300      	movs	r3, #0
 800d70a:	77a3      	strb	r3, [r4, #30]
 800d70c:	2306      	movs	r3, #6
 800d70e:	f106 010c 	add.w	r1, r6, #12
 800d712:	77e3      	strb	r3, [r4, #31]
 800d714:	4810      	ldr	r0, [pc, #64]	; (800d758 <_tcp_send_package+0x150>)
 800d716:	ba73      	rev16	r3, r6
 800d718:	8423      	strh	r3, [r4, #32]
 800d71a:	f001 fe96 	bl	800f44a <net_chksum>
 800d71e:	a901      	add	r1, sp, #4
 800d720:	4605      	mov	r5, r0
 800d722:	220c      	movs	r2, #12
 800d724:	480c      	ldr	r0, [pc, #48]	; (800d758 <_tcp_send_package+0x150>)
 800d726:	f7ff ff3f 	bl	800d5a8 <memcpy.isra.0>
 800d72a:	4809      	ldr	r0, [pc, #36]	; (800d750 <_tcp_send_package+0x148>)
 800d72c:	f106 0122 	add.w	r1, r6, #34	; 0x22
 800d730:	8665      	strh	r5, [r4, #50]	; 0x32
 800d732:	b004      	add	sp, #16
 800d734:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d738:	f004 be12 	b.w	8012360 <emac_eth_send>
 800d73c:	6ae9      	ldr	r1, [r5, #44]	; 0x2c
 800d73e:	5cc9      	ldrb	r1, [r1, r3]
 800d740:	54d1      	strb	r1, [r2, r3]
 800d742:	3301      	adds	r3, #1
 800d744:	8e29      	ldrh	r1, [r5, #48]	; 0x30
 800d746:	4299      	cmp	r1, r3
 800d748:	d8f8      	bhi.n	800d73c <_tcp_send_package+0x134>
 800d74a:	e7bf      	b.n	800d6cc <_tcp_send_package+0xc4>
 800d74c:	2300      	movs	r3, #0
 800d74e:	e7f9      	b.n	800d744 <_tcp_send_package+0x13c>
 800d750:	20005e40 	andcs	r5, r0, r0, asr #28
 800d754:	2000528a 	andcs	r5, r0, sl, lsl #5
 800d758:	20005e56 	andcs	r5, r0, r6, asr lr
 800d75c:	20005260 	andcs	r5, r0, r0, ror #4
 800d760:	20005e5a 	andcs	r5, r0, sl, asr lr

0800d764 <_send_reset>:
 800d764:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800d766:	f890 302f 	ldrb.w	r3, [r0, #47]	; 0x2f
 800d76a:	4604      	mov	r4, r0
 800d76c:	075a      	lsls	r2, r3, #29
 800d76e:	460e      	mov	r6, r1
 800d770:	d421      	bmi.n	800d7b6 <_send_reset+0x52>
 800d772:	2204      	movs	r2, #4
 800d774:	f013 0310 	ands.w	r3, r3, #16
 800d778:	f88d 200c 	strb.w	r2, [sp, #12]
 800d77c:	d01d      	beq.n	800d7ba <_send_reset+0x56>
 800d77e:	f100 012a 	add.w	r1, r0, #42	; 0x2a
 800d782:	4668      	mov	r0, sp
 800d784:	f7ff ff10 	bl	800d5a8 <memcpy.isra.0>
 800d788:	9b00      	ldr	r3, [sp, #0]
 800d78a:	9301      	str	r3, [sp, #4]
 800d78c:	f894 302f 	ldrb.w	r3, [r4, #47]	; 0x2f
 800d790:	4668      	mov	r0, sp
 800d792:	f3c3 0540 	ubfx	r5, r3, #1, #1
 800d796:	f104 0126 	add.w	r1, r4, #38	; 0x26
 800d79a:	07db      	lsls	r3, r3, #31
 800d79c:	f04f 0204 	mov.w	r2, #4
 800d7a0:	bf48      	it	mi
 800d7a2:	3501      	addmi	r5, #1
 800d7a4:	f7ff ff00 	bl	800d5a8 <memcpy.isra.0>
 800d7a8:	9b00      	ldr	r3, [sp, #0]
 800d7aa:	4630      	mov	r0, r6
 800d7ac:	441d      	add	r5, r3
 800d7ae:	a901      	add	r1, sp, #4
 800d7b0:	9502      	str	r5, [sp, #8]
 800d7b2:	f7ff ff29 	bl	800d608 <_tcp_send_package>
 800d7b6:	b004      	add	sp, #16
 800d7b8:	bd70      	pop	{r4, r5, r6, pc}
 800d7ba:	9301      	str	r3, [sp, #4]
 800d7bc:	2314      	movs	r3, #20
 800d7be:	f88d 300c 	strb.w	r3, [sp, #12]
 800d7c2:	e7e3      	b.n	800d78c <_send_reset+0x28>

0800d7c4 <tcp_begin>:
 800d7c4:	b508      	push	{r3, lr}
 800d7c6:	4b0a      	ldr	r3, [pc, #40]	; (800d7f0 <tcp_begin+0x2c>)
 800d7c8:	4601      	mov	r1, r0
 800d7ca:	881a      	ldrh	r2, [r3, #0]
 800d7cc:	4282      	cmp	r2, r0
 800d7ce:	d102      	bne.n	800d7d6 <tcp_begin+0x12>
 800d7d0:	f893 0040 	ldrb.w	r0, [r3, #64]	; 0x40
 800d7d4:	b130      	cbz	r0, 800d7e4 <tcp_begin+0x20>
 800d7d6:	b12a      	cbz	r2, 800d7e4 <tcp_begin+0x20>
 800d7d8:	4806      	ldr	r0, [pc, #24]	; (800d7f4 <tcp_begin+0x30>)
 800d7da:	f002 ffbb 	bl	8010754 <console_error>
 800d7de:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800d7e2:	bd08      	pop	{r3, pc}
 800d7e4:	4802      	ldr	r0, [pc, #8]	; (800d7f0 <tcp_begin+0x2c>)
 800d7e6:	8019      	strh	r1, [r3, #0]
 800d7e8:	f7ff fec4 	bl	800d574 <_init_tcb>
 800d7ec:	2000      	movs	r0, #0
 800d7ee:	e7f8      	b.n	800d7e2 <tcp_begin+0x1e>
 800d7f0:	20005dfc 	strdcs	r5, [r0], -ip
 800d7f4:	08014a6e 	stmdaeq	r1, {r1, r2, r3, r5, r6, r9, fp, lr}

0800d7f8 <tcp_write>:
 800d7f8:	f240 53b4 	movw	r3, #1460	; 0x5b4
 800d7fc:	429a      	cmp	r2, r3
 800d7fe:	bf28      	it	cs
 800d800:	461a      	movcs	r2, r3
 800d802:	2344      	movs	r3, #68	; 0x44
 800d804:	b530      	push	{r4, r5, lr}
 800d806:	4c0d      	ldr	r4, [pc, #52]	; (800d83c <tcp_write+0x44>)
 800d808:	b085      	sub	sp, #20
 800d80a:	fb03 4400 	mla	r4, r3, r0, r4
 800d80e:	6963      	ldr	r3, [r4, #20]
 800d810:	4615      	mov	r5, r2
 800d812:	9301      	str	r3, [sp, #4]
 800d814:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800d816:	62e1      	str	r1, [r4, #44]	; 0x2c
 800d818:	9302      	str	r3, [sp, #8]
 800d81a:	2318      	movs	r3, #24
 800d81c:	8622      	strh	r2, [r4, #48]	; 0x30
 800d81e:	4620      	mov	r0, r4
 800d820:	a901      	add	r1, sp, #4
 800d822:	f88d 300c 	strb.w	r3, [sp, #12]
 800d826:	f7ff feef 	bl	800d608 <_tcp_send_package>
 800d82a:	2300      	movs	r3, #0
 800d82c:	6962      	ldr	r2, [r4, #20]
 800d82e:	62e3      	str	r3, [r4, #44]	; 0x2c
 800d830:	442a      	add	r2, r5
 800d832:	8623      	strh	r3, [r4, #48]	; 0x30
 800d834:	6162      	str	r2, [r4, #20]
 800d836:	b005      	add	sp, #20
 800d838:	bd30      	pop	{r4, r5, pc}
 800d83a:	bf00      	nop
 800d83c:	20005dfc 	strdcs	r5, [r0], -ip

0800d840 <tcp_read>:
 800d840:	2344      	movs	r3, #68	; 0x44
 800d842:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d844:	4c1c      	ldr	r4, [pc, #112]	; (800d8b8 <tcp_read+0x78>)
 800d846:	b085      	sub	sp, #20
 800d848:	fb03 4400 	mla	r4, r3, r0, r4
 800d84c:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800d850:	2b07      	cmp	r3, #7
 800d852:	d112      	bne.n	800d87a <tcp_read+0x3a>
 800d854:	6963      	ldr	r3, [r4, #20]
 800d856:	4620      	mov	r0, r4
 800d858:	9301      	str	r3, [sp, #4]
 800d85a:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800d85c:	a901      	add	r1, sp, #4
 800d85e:	9302      	str	r3, [sp, #8]
 800d860:	2311      	movs	r3, #17
 800d862:	f88d 300c 	strb.w	r3, [sp, #12]
 800d866:	f7ff fecf 	bl	800d608 <_tcp_send_package>
 800d86a:	2309      	movs	r3, #9
 800d86c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800d870:	6963      	ldr	r3, [r4, #20]
 800d872:	3301      	adds	r3, #1
 800d874:	6163      	str	r3, [r4, #20]
 800d876:	2000      	movs	r0, #0
 800d878:	e01b      	b.n	800d8b2 <tcp_read+0x72>
 800d87a:	f44f 6337 	mov.w	r3, #2928	; 0xb70
 800d87e:	4358      	muls	r0, r3
 800d880:	4a0e      	ldr	r2, [pc, #56]	; (800d8bc <tcp_read+0x7c>)
 800d882:	1817      	adds	r7, r2, r0
 800d884:	887b      	ldrh	r3, [r7, #2]
 800d886:	5a15      	ldrh	r5, [r2, r0]
 800d888:	429d      	cmp	r5, r3
 800d88a:	d0f4      	beq.n	800d876 <tcp_read+0x36>
 800d88c:	f240 55b6 	movw	r5, #1462	; 0x5b6
 800d890:	435d      	muls	r5, r3
 800d892:	1d06      	adds	r6, r0, #4
 800d894:	442e      	add	r6, r5
 800d896:	4416      	add	r6, r2
 800d898:	4428      	add	r0, r5
 800d89a:	600e      	str	r6, [r1, #0]
 800d89c:	4402      	add	r2, r0
 800d89e:	f8b2 05b8 	ldrh.w	r0, [r2, #1464]	; 0x5b8
 800d8a2:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 800d8a4:	3301      	adds	r3, #1
 800d8a6:	f202 52b4 	addw	r2, r2, #1460	; 0x5b4
 800d8aa:	f003 0301 	and.w	r3, r3, #1
 800d8ae:	8722      	strh	r2, [r4, #56]	; 0x38
 800d8b0:	807b      	strh	r3, [r7, #2]
 800d8b2:	b005      	add	sp, #20
 800d8b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d8b6:	bf00      	nop
 800d8b8:	20005dfc 	strdcs	r5, [r0], -ip
 800d8bc:	2000528c 	andcs	r5, r0, ip, lsl #5

0800d8c0 <memcpy.isra.0>:
 800d8c0:	3801      	subs	r0, #1
 800d8c2:	440a      	add	r2, r1
 800d8c4:	4291      	cmp	r1, r2
 800d8c6:	d100      	bne.n	800d8ca <memcpy.isra.0+0xa>
 800d8c8:	4770      	bx	lr
 800d8ca:	f811 3b01 	ldrb.w	r3, [r1], #1
 800d8ce:	f800 3f01 	strb.w	r3, [r0, #1]!
 800d8d2:	e7f7      	b.n	800d8c4 <memcpy.isra.0+0x4>

0800d8d4 <net_memcpy>:
 800d8d4:	ea41 0300 	orr.w	r3, r1, r0
 800d8d8:	079b      	lsls	r3, r3, #30
 800d8da:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d8dc:	d115      	bne.n	800d90a <net_memcpy+0x36>
 800d8de:	f022 0303 	bic.w	r3, r2, #3
 800d8e2:	1f04      	subs	r4, r0, #4
 800d8e4:	0895      	lsrs	r5, r2, #2
 800d8e6:	18ce      	adds	r6, r1, r3
 800d8e8:	42b1      	cmp	r1, r6
 800d8ea:	d109      	bne.n	800d900 <net_memcpy+0x2c>
 800d8ec:	f06f 0403 	mvn.w	r4, #3
 800d8f0:	fb04 2205 	mla	r2, r4, r5, r2
 800d8f4:	4403      	add	r3, r0
 800d8f6:	3b01      	subs	r3, #1
 800d8f8:	440a      	add	r2, r1
 800d8fa:	4291      	cmp	r1, r2
 800d8fc:	d107      	bne.n	800d90e <net_memcpy+0x3a>
 800d8fe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d900:	f851 7b04 	ldr.w	r7, [r1], #4
 800d904:	f844 7f04 	str.w	r7, [r4, #4]!
 800d908:	e7ee      	b.n	800d8e8 <net_memcpy+0x14>
 800d90a:	4603      	mov	r3, r0
 800d90c:	e7f3      	b.n	800d8f6 <net_memcpy+0x22>
 800d90e:	f811 4b01 	ldrb.w	r4, [r1], #1
 800d912:	f803 4f01 	strb.w	r4, [r3, #1]!
 800d916:	e7f0      	b.n	800d8fa <net_memcpy+0x26>

0800d918 <udp_set_ip>:
 800d918:	2204      	movs	r2, #4
 800d91a:	b513      	push	{r0, r1, r4, lr}
 800d91c:	4604      	mov	r4, r0
 800d91e:	6803      	ldr	r3, [r0, #0]
 800d920:	eb0d 0102 	add.w	r1, sp, r2
 800d924:	4808      	ldr	r0, [pc, #32]	; (800d948 <udp_set_ip+0x30>)
 800d926:	9301      	str	r3, [sp, #4]
 800d928:	f7ff ffca 	bl	800d8c0 <memcpy.isra.0>
 800d92c:	6862      	ldr	r2, [r4, #4]
 800d92e:	4b07      	ldr	r3, [pc, #28]	; (800d94c <udp_set_ip+0x34>)
 800d930:	43d1      	mvns	r1, r2
 800d932:	6019      	str	r1, [r3, #0]
 800d934:	6823      	ldr	r3, [r4, #0]
 800d936:	4013      	ands	r3, r2
 800d938:	4a05      	ldr	r2, [pc, #20]	; (800d950 <udp_set_ip+0x38>)
 800d93a:	6013      	str	r3, [r2, #0]
 800d93c:	68a2      	ldr	r2, [r4, #8]
 800d93e:	4b05      	ldr	r3, [pc, #20]	; (800d954 <udp_set_ip+0x3c>)
 800d940:	601a      	str	r2, [r3, #0]
 800d942:	b002      	add	sp, #8
 800d944:	bd10      	pop	{r4, pc}
 800d946:	bf00      	nop
 800d948:	2000c116 	andcs	ip, r0, r6, lsl r1
 800d94c:	2000642c 	andcs	r6, r0, ip, lsr #8
 800d950:	20006434 	andcs	r6, r0, r4, lsr r4
 800d954:	20006430 	andcs	r6, r0, r0, lsr r4

0800d958 <udp_bind>:
 800d958:	4a0a      	ldr	r2, [pc, #40]	; (800d984 <udp_bind+0x2c>)
 800d95a:	4603      	mov	r3, r0
 800d95c:	b510      	push	{r4, lr}
 800d95e:	2000      	movs	r0, #0
 800d960:	4614      	mov	r4, r2
 800d962:	f852 1b04 	ldr.w	r1, [r2], #4
 800d966:	4299      	cmp	r1, r3
 800d968:	d008      	beq.n	800d97c <udp_bind+0x24>
 800d96a:	b141      	cbz	r1, 800d97e <udp_bind+0x26>
 800d96c:	3001      	adds	r0, #1
 800d96e:	2808      	cmp	r0, #8
 800d970:	d1f7      	bne.n	800d962 <udp_bind+0xa>
 800d972:	4805      	ldr	r0, [pc, #20]	; (800d988 <udp_bind+0x30>)
 800d974:	f002 feee 	bl	8010754 <console_error>
 800d978:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800d97c:	bd10      	pop	{r4, pc}
 800d97e:	f844 3020 	str.w	r3, [r4, r0, lsl #2]
 800d982:	e7fb      	b.n	800d97c <udp_bind+0x24>
 800d984:	2000643c 	andcs	r6, r0, ip, lsr r4
 800d988:	08014a8e 	stmdaeq	r1, {r1, r2, r3, r7, r9, fp, lr}

0800d98c <udp_unbind>:
 800d98c:	4a0c      	ldr	r2, [pc, #48]	; (800d9c0 <udp_unbind+0x34>)
 800d98e:	2300      	movs	r3, #0
 800d990:	4611      	mov	r1, r2
 800d992:	b510      	push	{r4, lr}
 800d994:	f852 4b04 	ldr.w	r4, [r2], #4
 800d998:	4284      	cmp	r4, r0
 800d99a:	d108      	bne.n	800d9ae <udp_unbind+0x22>
 800d99c:	2000      	movs	r0, #0
 800d99e:	f640 3294 	movw	r2, #2964	; 0xb94
 800d9a2:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 800d9a6:	4353      	muls	r3, r2
 800d9a8:	4a06      	ldr	r2, [pc, #24]	; (800d9c4 <udp_unbind+0x38>)
 800d9aa:	5098      	str	r0, [r3, r2]
 800d9ac:	bd10      	pop	{r4, pc}
 800d9ae:	3301      	adds	r3, #1
 800d9b0:	2b08      	cmp	r3, #8
 800d9b2:	d1ef      	bne.n	800d994 <udp_unbind+0x8>
 800d9b4:	4804      	ldr	r0, [pc, #16]	; (800d9c8 <udp_unbind+0x3c>)
 800d9b6:	f002 fecd 	bl	8010754 <console_error>
 800d9ba:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800d9be:	e7f5      	b.n	800d9ac <udp_unbind+0x20>
 800d9c0:	2000643c 	andcs	r6, r0, ip, lsr r4
 800d9c4:	2000645c 	andcs	r6, r0, ip, asr r4
 800d9c8:	08014a93 	stmdaeq	r1, {r0, r1, r4, r7, r9, fp, lr}

0800d9cc <udp_recv>:
 800d9cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d9d0:	4604      	mov	r4, r0
 800d9d2:	4698      	mov	r8, r3
 800d9d4:	f640 3394 	movw	r3, #2964	; 0xb94
 800d9d8:	435c      	muls	r4, r3
 800d9da:	4608      	mov	r0, r1
 800d9dc:	4915      	ldr	r1, [pc, #84]	; (800da34 <udp_recv+0x68>)
 800d9de:	190f      	adds	r7, r1, r4
 800d9e0:	f8b7 c002 	ldrh.w	ip, [r7, #2]
 800d9e4:	5b0b      	ldrh	r3, [r1, r4]
 800d9e6:	4563      	cmp	r3, ip
 800d9e8:	d021      	beq.n	800da2e <udp_recv+0x62>
 800d9ea:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 800d9ee:	fb03 fc0c 	mul.w	ip, r3, ip
 800d9f2:	eb0c 0604 	add.w	r6, ip, r4
 800d9f6:	440e      	add	r6, r1
 800d9f8:	f8b6 55ca 	ldrh.w	r5, [r6, #1482]	; 0x5ca
 800d9fc:	3404      	adds	r4, #4
 800d9fe:	4295      	cmp	r5, r2
 800da00:	bf28      	it	cs
 800da02:	4615      	movcs	r5, r2
 800da04:	4464      	add	r4, ip
 800da06:	462a      	mov	r2, r5
 800da08:	4421      	add	r1, r4
 800da0a:	f7ff ff63 	bl	800d8d4 <net_memcpy>
 800da0e:	f8d6 35c4 	ldr.w	r3, [r6, #1476]	; 0x5c4
 800da12:	f8c8 3000 	str.w	r3, [r8]
 800da16:	f8b6 25c8 	ldrh.w	r2, [r6, #1480]	; 0x5c8
 800da1a:	9b06      	ldr	r3, [sp, #24]
 800da1c:	801a      	strh	r2, [r3, #0]
 800da1e:	887b      	ldrh	r3, [r7, #2]
 800da20:	3301      	adds	r3, #1
 800da22:	f003 0301 	and.w	r3, r3, #1
 800da26:	807b      	strh	r3, [r7, #2]
 800da28:	4628      	mov	r0, r5
 800da2a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800da2e:	2500      	movs	r5, #0
 800da30:	e7fa      	b.n	800da28 <udp_recv+0x5c>
 800da32:	bf00      	nop
 800da34:	2000645c 	andcs	r6, r0, ip, asr r4

0800da38 <udp_recv2>:
 800da38:	b5f0      	push	{r4, r5, r6, r7, lr}
 800da3a:	f640 3594 	movw	r5, #2964	; 0xb94
 800da3e:	4368      	muls	r0, r5
 800da40:	4c0f      	ldr	r4, [pc, #60]	; (800da80 <udp_recv2+0x48>)
 800da42:	1827      	adds	r7, r4, r0
 800da44:	887d      	ldrh	r5, [r7, #2]
 800da46:	5a26      	ldrh	r6, [r4, r0]
 800da48:	42ae      	cmp	r6, r5
 800da4a:	d017      	beq.n	800da7c <udp_recv2+0x44>
 800da4c:	f44f 6cb9 	mov.w	ip, #1480	; 0x5c8
 800da50:	fb0c f505 	mul.w	r5, ip, r5
 800da54:	1d06      	adds	r6, r0, #4
 800da56:	442e      	add	r6, r5
 800da58:	4405      	add	r5, r0
 800da5a:	4426      	add	r6, r4
 800da5c:	442c      	add	r4, r5
 800da5e:	600e      	str	r6, [r1, #0]
 800da60:	f8d4 15c4 	ldr.w	r1, [r4, #1476]	; 0x5c4
 800da64:	6011      	str	r1, [r2, #0]
 800da66:	f8b4 25c8 	ldrh.w	r2, [r4, #1480]	; 0x5c8
 800da6a:	801a      	strh	r2, [r3, #0]
 800da6c:	887b      	ldrh	r3, [r7, #2]
 800da6e:	f8b4 05ca 	ldrh.w	r0, [r4, #1482]	; 0x5ca
 800da72:	3301      	adds	r3, #1
 800da74:	f003 0301 	and.w	r3, r3, #1
 800da78:	807b      	strh	r3, [r7, #2]
 800da7a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800da7c:	2000      	movs	r0, #0
 800da7e:	e7fc      	b.n	800da7a <udp_recv2+0x42>
 800da80:	2000645c 	andcs	r6, r0, ip, asr r4

0800da84 <udp_send>:
 800da84:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800da88:	f8df 9130 	ldr.w	r9, [pc, #304]	; 800dbbc <udp_send+0x138>
 800da8c:	461c      	mov	r4, r3
 800da8e:	f859 3020 	ldr.w	r3, [r9, r0, lsl #2]
 800da92:	4607      	mov	r7, r0
 800da94:	4688      	mov	r8, r1
 800da96:	4616      	mov	r6, r2
 800da98:	2b00      	cmp	r3, #0
 800da9a:	f000 808b 	beq.w	800dbb4 <udp_send+0x130>
 800da9e:	1c63      	adds	r3, r4, #1
 800daa0:	d141      	bne.n	800db26 <udp_send+0xa2>
 800daa2:	4a47      	ldr	r2, [pc, #284]	; (800dbc0 <udp_send+0x13c>)
 800daa4:	2307      	movs	r3, #7
 800daa6:	4611      	mov	r1, r2
 800daa8:	20ff      	movs	r0, #255	; 0xff
 800daaa:	e001      	b.n	800dab0 <udp_send+0x2c>
 800daac:	f802 0b01 	strb.w	r0, [r2], #1
 800dab0:	3b01      	subs	r3, #1
 800dab2:	d1fb      	bne.n	800daac <udp_send+0x28>
 800dab4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800dab8:	83cb      	strh	r3, [r1, #30]
 800daba:	840b      	strh	r3, [r1, #32]
 800dabc:	2500      	movs	r5, #0
 800dabe:	f8df a104 	ldr.w	sl, [pc, #260]	; 800dbc4 <udp_send+0x140>
 800dac2:	4c3f      	ldr	r4, [pc, #252]	; (800dbc0 <udp_send+0x13c>)
 800dac4:	f8ba 3000 	ldrh.w	r3, [sl]
 800dac8:	2114      	movs	r1, #20
 800daca:	8263      	strh	r3, [r4, #18]
 800dacc:	f106 031c 	add.w	r3, r6, #28
 800dad0:	ba5b      	rev16	r3, r3
 800dad2:	f104 000e 	add.w	r0, r4, #14
 800dad6:	8223      	strh	r3, [r4, #16]
 800dad8:	8325      	strh	r5, [r4, #24]
 800dada:	f001 fcb6 	bl	800f44a <net_chksum>
 800dade:	f859 3027 	ldr.w	r3, [r9, r7, lsl #2]
 800dae2:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 800dae6:	ba5b      	rev16	r3, r3
 800dae8:	8463      	strh	r3, [r4, #34]	; 0x22
 800daea:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800daee:	4632      	mov	r2, r6
 800daf0:	ba5b      	rev16	r3, r3
 800daf2:	84a3      	strh	r3, [r4, #36]	; 0x24
 800daf4:	f106 0308 	add.w	r3, r6, #8
 800daf8:	ba5b      	rev16	r3, r3
 800dafa:	bf28      	it	cs
 800dafc:	f44f 62b8 	movcs.w	r2, #1472	; 0x5c0
 800db00:	4641      	mov	r1, r8
 800db02:	8320      	strh	r0, [r4, #24]
 800db04:	f104 002a 	add.w	r0, r4, #42	; 0x2a
 800db08:	84e3      	strh	r3, [r4, #38]	; 0x26
 800db0a:	f7ff fee3 	bl	800d8d4 <net_memcpy>
 800db0e:	4620      	mov	r0, r4
 800db10:	f106 012a 	add.w	r1, r6, #42	; 0x2a
 800db14:	f004 fc24 	bl	8012360 <emac_eth_send>
 800db18:	f8ba 3000 	ldrh.w	r3, [sl]
 800db1c:	4628      	mov	r0, r5
 800db1e:	3301      	adds	r3, #1
 800db20:	f8aa 3000 	strh.w	r3, [sl]
 800db24:	e037      	b.n	800db96 <udp_send+0x112>
 800db26:	4b28      	ldr	r3, [pc, #160]	; (800dbc8 <udp_send+0x144>)
 800db28:	681b      	ldr	r3, [r3, #0]
 800db2a:	43a3      	bics	r3, r4
 800db2c:	d10f      	bne.n	800db4e <udp_send+0xca>
 800db2e:	2307      	movs	r3, #7
 800db30:	21ff      	movs	r1, #255	; 0xff
 800db32:	4a23      	ldr	r2, [pc, #140]	; (800dbc0 <udp_send+0x13c>)
 800db34:	e001      	b.n	800db3a <udp_send+0xb6>
 800db36:	f802 1b01 	strb.w	r1, [r2], #1
 800db3a:	3b01      	subs	r3, #1
 800db3c:	d1fb      	bne.n	800db36 <udp_send+0xb2>
 800db3e:	2204      	movs	r2, #4
 800db40:	4822      	ldr	r0, [pc, #136]	; (800dbcc <udp_send+0x148>)
 800db42:	eb0d 0102 	add.w	r1, sp, r2
 800db46:	9401      	str	r4, [sp, #4]
 800db48:	f7ff feba 	bl	800d8c0 <memcpy.isra.0>
 800db4c:	e7b6      	b.n	800dabc <udp_send+0x38>
 800db4e:	f004 03e0 	and.w	r3, r4, #224	; 0xe0
 800db52:	2be0      	cmp	r3, #224	; 0xe0
 800db54:	d10e      	bne.n	800db74 <udp_send+0xf0>
 800db56:	491e      	ldr	r1, [pc, #120]	; (800dbd0 <udp_send+0x14c>)
 800db58:	f3c4 2306 	ubfx	r3, r4, #8, #7
 800db5c:	70cb      	strb	r3, [r1, #3]
 800db5e:	f3c4 4307 	ubfx	r3, r4, #16, #8
 800db62:	710b      	strb	r3, [r1, #4]
 800db64:	f3c4 6307 	ubfx	r3, r4, #24, #8
 800db68:	2206      	movs	r2, #6
 800db6a:	4815      	ldr	r0, [pc, #84]	; (800dbc0 <udp_send+0x13c>)
 800db6c:	714b      	strb	r3, [r1, #5]
 800db6e:	f7ff fea7 	bl	800d8c0 <memcpy.isra.0>
 800db72:	e7e4      	b.n	800db3e <udp_send+0xba>
 800db74:	4b17      	ldr	r3, [pc, #92]	; (800dbd4 <udp_send+0x150>)
 800db76:	681b      	ldr	r3, [r3, #0]
 800db78:	43a3      	bics	r3, r4
 800db7a:	d00f      	beq.n	800db9c <udp_send+0x118>
 800db7c:	4d16      	ldr	r5, [pc, #88]	; (800dbd8 <udp_send+0x154>)
 800db7e:	4910      	ldr	r1, [pc, #64]	; (800dbc0 <udp_send+0x13c>)
 800db80:	6828      	ldr	r0, [r5, #0]
 800db82:	f001 f91d 	bl	800edc0 <arp_cache_lookup>
 800db86:	682b      	ldr	r3, [r5, #0]
 800db88:	4298      	cmp	r0, r3
 800db8a:	d0d8      	beq.n	800db3e <udp_send+0xba>
 800db8c:	4813      	ldr	r0, [pc, #76]	; (800dbdc <udp_send+0x158>)
 800db8e:	f002 fde1 	bl	8010754 <console_error>
 800db92:	f06f 0002 	mvn.w	r0, #2
 800db96:	b002      	add	sp, #8
 800db98:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800db9c:	4620      	mov	r0, r4
 800db9e:	4908      	ldr	r1, [pc, #32]	; (800dbc0 <udp_send+0x13c>)
 800dba0:	f001 f90e 	bl	800edc0 <arp_cache_lookup>
 800dba4:	42a0      	cmp	r0, r4
 800dba6:	d0ca      	beq.n	800db3e <udp_send+0xba>
 800dba8:	480d      	ldr	r0, [pc, #52]	; (800dbe0 <udp_send+0x15c>)
 800dbaa:	f002 fdd3 	bl	8010754 <console_error>
 800dbae:	f06f 0001 	mvn.w	r0, #1
 800dbb2:	e7f0      	b.n	800db96 <udp_send+0x112>
 800dbb4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800dbb8:	e7ed      	b.n	800db96 <udp_send+0x112>
 800dbba:	bf00      	nop
 800dbbc:	2000643c 	andcs	r6, r0, ip, lsr r4
 800dbc0:	2000c0fc 	strdcs	ip, [r0], -ip	; <UNPREDICTABLE>
 800dbc4:	20006438 	andcs	r6, r0, r8, lsr r4
 800dbc8:	2000642c 	andcs	r6, r0, ip, lsr #8
 800dbcc:	2000c11a 	andcs	ip, r0, sl, lsl r1
 800dbd0:	20000014 	andcs	r0, r0, r4, lsl r0
 800dbd4:	20006434 	andcs	r6, r0, r4, lsr r4
 800dbd8:	20006430 	andcs	r6, r0, r0, lsr r4
 800dbdc:	08014a9b 	stmdaeq	r1, {r0, r1, r3, r4, r7, r9, fp, lr}
 800dbe0:	08014ac1 	stmdaeq	r1, {r0, r6, r7, r9, fp, lr}

0800dbe4 <strlen>:
 800dbe4:	4603      	mov	r3, r0
 800dbe6:	461a      	mov	r2, r3
 800dbe8:	7811      	ldrb	r1, [r2, #0]
 800dbea:	3301      	adds	r3, #1
 800dbec:	2900      	cmp	r1, #0
 800dbee:	d1fa      	bne.n	800dbe6 <strlen+0x2>
 800dbf0:	1a10      	subs	r0, r2, r0
 800dbf2:	4770      	bx	lr

0800dbf4 <strcmp>:
 800dbf4:	1e43      	subs	r3, r0, #1
 800dbf6:	3901      	subs	r1, #1
 800dbf8:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800dbfc:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800dc00:	4290      	cmp	r0, r2
 800dc02:	d102      	bne.n	800dc0a <strcmp+0x16>
 800dc04:	2800      	cmp	r0, #0
 800dc06:	d1f7      	bne.n	800dbf8 <strcmp+0x4>
 800dc08:	4770      	bx	lr
 800dc0a:	1a80      	subs	r0, r0, r2
 800dc0c:	4770      	bx	lr

0800dc0e <strcpy.isra.0>:
 800dc0e:	3801      	subs	r0, #1
 800dc10:	f811 3b01 	ldrb.w	r3, [r1], #1
 800dc14:	f800 3f01 	strb.w	r3, [r0, #1]!
 800dc18:	2b00      	cmp	r3, #0
 800dc1a:	d1f9      	bne.n	800dc10 <strcpy.isra.0+0x2>
 800dc1c:	4770      	bx	lr

0800dc1e <strcat.isra.0>:
 800dc1e:	b538      	push	{r3, r4, r5, lr}
 800dc20:	4604      	mov	r4, r0
 800dc22:	460d      	mov	r5, r1
 800dc24:	f7ff ffde 	bl	800dbe4 <strlen>
 800dc28:	4629      	mov	r1, r5
 800dc2a:	4420      	add	r0, r4
 800dc2c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800dc30:	f7ff bfed 	b.w	800dc0e <strcpy.isra.0>

0800dc34 <MDNS::MDNS()>:
 800dc34:	b513      	push	{r0, r1, r4, lr}
 800dc36:	4604      	mov	r4, r0
 800dc38:	a901      	add	r1, sp, #4
 800dc3a:	4804      	ldr	r0, [pc, #16]	; (800dc4c <MDNS::MDNS()+0x18>)
 800dc3c:	f002 ff04 	bl	8010a48 <inet_aton>
 800dc40:	4620      	mov	r0, r4
 800dc42:	4b03      	ldr	r3, [pc, #12]	; (800dc50 <MDNS::MDNS()+0x1c>)
 800dc44:	9a01      	ldr	r2, [sp, #4]
 800dc46:	601a      	str	r2, [r3, #0]
 800dc48:	b002      	add	sp, #8
 800dc4a:	bd10      	pop	{r4, pc}
 800dc4c:	08014ae1 	stmdaeq	r1, {r0, r5, r6, r7, r9, fp, lr}
 800dc50:	2000c6f0 	strdcs	ip, [r0], -r0

0800dc54 <MDNS::SetName(char const*)>:
 800dc54:	b538      	push	{r3, r4, r5, lr}
 800dc56:	4d0b      	ldr	r5, [pc, #44]	; (800dc84 <MDNS::SetName(char const*)+0x30>)
 800dc58:	460c      	mov	r4, r1
 800dc5a:	6828      	ldr	r0, [r5, #0]
 800dc5c:	b108      	cbz	r0, 800dc62 <MDNS::SetName(char const*)+0xe>
 800dc5e:	f002 feed 	bl	8010a3c <operator delete[](void*)>
 800dc62:	4620      	mov	r0, r4
 800dc64:	f7ff ffbe 	bl	800dbe4 <strlen>
 800dc68:	3007      	adds	r0, #7
 800dc6a:	f002 feeb 	bl	8010a44 <operator new[](unsigned int)>
 800dc6e:	4621      	mov	r1, r4
 800dc70:	6028      	str	r0, [r5, #0]
 800dc72:	f7ff ffcc 	bl	800dc0e <strcpy.isra.0>
 800dc76:	6828      	ldr	r0, [r5, #0]
 800dc78:	4903      	ldr	r1, [pc, #12]	; (800dc88 <MDNS::SetName(char const*)+0x34>)
 800dc7a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800dc7e:	f7ff bfce 	b.w	800dc1e <strcat.isra.0>
 800dc82:	bf00      	nop
 800dc84:	2000cb20 	andcs	ip, r0, r0, lsr #22
 800dc88:	08014af1 	stmdaeq	r1, {r0, r4, r5, r6, r7, r9, fp, lr}

0800dc8c <MDNS::DecodeDNSNameNotation(char const*, char*)>:
 800dc8c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800dc90:	f04f 0e00 	mov.w	lr, #0
 800dc94:	262e      	movs	r6, #46	; 0x2e
 800dc96:	4675      	mov	r5, lr
 800dc98:	4694      	mov	ip, r2
 800dc9a:	4f1d      	ldr	r7, [pc, #116]	; (800dd10 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x84>)
 800dc9c:	4a1d      	ldr	r2, [pc, #116]	; (800dd14 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x88>)
 800dc9e:	780b      	ldrb	r3, [r1, #0]
 800dca0:	1c68      	adds	r0, r5, #1
 800dca2:	b383      	cbz	r3, 800dd06 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x7a>
 800dca4:	2b3f      	cmp	r3, #63	; 0x3f
 800dca6:	d91d      	bls.n	800dce4 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x58>
 800dca8:	f1be 0f00 	cmp.w	lr, #0
 800dcac:	bf08      	it	eq
 800dcae:	4605      	moveq	r5, r0
 800dcb0:	2000      	movs	r0, #0
 800dcb2:	7849      	ldrb	r1, [r1, #1]
 800dcb4:	ea07 2303 	and.w	r3, r7, r3, lsl #8
 800dcb8:	430b      	orrs	r3, r1
 800dcba:	6811      	ldr	r1, [r2, #0]
 800dcbc:	5ccc      	ldrb	r4, [r1, r3]
 800dcbe:	3301      	adds	r3, #1
 800dcc0:	440b      	add	r3, r1
 800dcc2:	42a0      	cmp	r0, r4
 800dcc4:	5c19      	ldrb	r1, [r3, r0]
 800dcc6:	d309      	bcc.n	800dcdc <MDNS::DecodeDNSNameNotation(char const*, char*)+0x50>
 800dcc8:	f04f 0e01 	mov.w	lr, #1
 800dccc:	1919      	adds	r1, r3, r4
 800dcce:	4464      	add	r4, ip
 800dcd0:	780b      	ldrb	r3, [r1, #0]
 800dcd2:	b10b      	cbz	r3, 800dcd8 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x4c>
 800dcd4:	f804 6b01 	strb.w	r6, [r4], #1
 800dcd8:	46a4      	mov	ip, r4
 800dcda:	e7e0      	b.n	800dc9e <MDNS::DecodeDNSNameNotation(char const*, char*)+0x12>
 800dcdc:	f80c 1000 	strb.w	r1, [ip, r0]
 800dce0:	3001      	adds	r0, #1
 800dce2:	e7ee      	b.n	800dcc2 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x36>
 800dce4:	4688      	mov	r8, r1
 800dce6:	eb0c 0403 	add.w	r4, ip, r3
 800dcea:	f818 9f01 	ldrb.w	r9, [r8, #1]!
 800dcee:	f80c 9b01 	strb.w	r9, [ip], #1
 800dcf2:	4564      	cmp	r4, ip
 800dcf4:	d1f9      	bne.n	800dcea <MDNS::DecodeDNSNameNotation(char const*, char*)+0x5e>
 800dcf6:	f103 0c01 	add.w	ip, r3, #1
 800dcfa:	4461      	add	r1, ip
 800dcfc:	f1be 0f00 	cmp.w	lr, #0
 800dd00:	d1e6      	bne.n	800dcd0 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x44>
 800dd02:	18c5      	adds	r5, r0, r3
 800dd04:	e7e4      	b.n	800dcd0 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x44>
 800dd06:	f88c 3000 	strb.w	r3, [ip]
 800dd0a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800dd0e:	bf00      	nop
 800dd10:	ffff3f00 			; <UNDEFINED> instruction: 0xffff3f00
 800dd14:	2000cb24 	andcs	ip, r0, r4, lsr #22

0800dd18 <MDNS::FindFirstDotFromRight(char const*) const>:
 800dd18:	b510      	push	{r4, lr}
 800dd1a:	4608      	mov	r0, r1
 800dd1c:	460c      	mov	r4, r1
 800dd1e:	f7ff ff61 	bl	800dbe4 <strlen>
 800dd22:	4420      	add	r0, r4
 800dd24:	42a0      	cmp	r0, r4
 800dd26:	d903      	bls.n	800dd30 <MDNS::FindFirstDotFromRight(char const*) const+0x18>
 800dd28:	f810 3901 	ldrb.w	r3, [r0], #-1
 800dd2c:	2b2e      	cmp	r3, #46	; 0x2e
 800dd2e:	d1f9      	bne.n	800dd24 <MDNS::FindFirstDotFromRight(char const*) const+0xc>
 800dd30:	3001      	adds	r0, #1
 800dd32:	bd10      	pop	{r4, pc}

0800dd34 <MDNS::WriteDnsName(char const*, char*, bool)>:
 800dd34:	4610      	mov	r0, r2
 800dd36:	b5f0      	push	{r4, r5, r6, r7, lr}
 800dd38:	460f      	mov	r7, r1
 800dd3a:	1c44      	adds	r4, r0, #1
 800dd3c:	463d      	mov	r5, r7
 800dd3e:	f817 6b01 	ldrb.w	r6, [r7], #1
 800dd42:	b126      	cbz	r6, 800dd4e <MDNS::WriteDnsName(char const*, char*, bool)+0x1a>
 800dd44:	2e2e      	cmp	r6, #46	; 0x2e
 800dd46:	d002      	beq.n	800dd4e <MDNS::WriteDnsName(char const*, char*, bool)+0x1a>
 800dd48:	f804 6b01 	strb.w	r6, [r4], #1
 800dd4c:	e7f6      	b.n	800dd3c <MDNS::WriteDnsName(char const*, char*, bool)+0x8>
 800dd4e:	1a69      	subs	r1, r5, r1
 800dd50:	7001      	strb	r1, [r0, #0]
 800dd52:	7829      	ldrb	r1, [r5, #0]
 800dd54:	b921      	cbnz	r1, 800dd60 <MDNS::WriteDnsName(char const*, char*, bool)+0x2c>
 800dd56:	b10b      	cbz	r3, 800dd5c <MDNS::WriteDnsName(char const*, char*, bool)+0x28>
 800dd58:	f804 1b01 	strb.w	r1, [r4], #1
 800dd5c:	1aa0      	subs	r0, r4, r2
 800dd5e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800dd60:	4620      	mov	r0, r4
 800dd62:	1c69      	adds	r1, r5, #1
 800dd64:	e7e8      	b.n	800dd38 <MDNS::WriteDnsName(char const*, char*, bool)+0x4>
	...

0800dd68 <MDNS::CreateAnswerLocalIpAddress()>:
 800dd68:	2384      	movs	r3, #132	; 0x84
 800dd6a:	b510      	push	{r4, lr}
 800dd6c:	4c0f      	ldr	r4, [pc, #60]	; (800ddac <MDNS::CreateAnswerLocalIpAddress()+0x44>)
 800dd6e:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 800dd72:	80e3      	strh	r3, [r4, #6]
 800dd74:	2300      	movs	r3, #0
 800dd76:	490e      	ldr	r1, [pc, #56]	; (800ddb0 <MDNS::CreateAnswerLocalIpAddress()+0x48>)
 800dd78:	e9c4 2302 	strd	r2, r3, [r4, #8]
 800dd7c:	6809      	ldr	r1, [r1, #0]
 800dd7e:	f104 0210 	add.w	r2, r4, #16
 800dd82:	2301      	movs	r3, #1
 800dd84:	f7ff ffd6 	bl	800dd34 <MDNS::WriteDnsName(char const*, char*, bool)>
 800dd88:	490a      	ldr	r1, [pc, #40]	; (800ddb4 <MDNS::CreateAnswerLocalIpAddress()+0x4c>)
 800dd8a:	1813      	adds	r3, r2, r0
 800dd8c:	5011      	str	r1, [r2, r0]
 800dd8e:	f04f 42f0 	mov.w	r2, #2013265920	; 0x78000000
 800dd92:	605a      	str	r2, [r3, #4]
 800dd94:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800dd98:	811a      	strh	r2, [r3, #8]
 800dd9a:	4a07      	ldr	r2, [pc, #28]	; (800ddb8 <MDNS::CreateAnswerLocalIpAddress()+0x50>)
 800dd9c:	6812      	ldr	r2, [r2, #0]
 800dd9e:	6912      	ldr	r2, [r2, #16]
 800dda0:	f8c3 200a 	str.w	r2, [r3, #10]
 800dda4:	1b1b      	subs	r3, r3, r4
 800dda6:	330a      	adds	r3, #10
 800dda8:	6023      	str	r3, [r4, #0]
 800ddaa:	bd10      	pop	{r4, pc}
 800ddac:	2000c6f4 	strdcs	ip, [r0], -r4
 800ddb0:	2000cb20 	andcs	ip, r0, r0, lsr #22
 800ddb4:	01800100 	orreq	r0, r0, r0, lsl #2
 800ddb8:	2000cb28 	andcs	ip, r0, r8, lsr #22

0800ddbc <MDNS::Start()>:
 800ddbc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ddbe:	4c1e      	ldr	r4, [pc, #120]	; (800de38 <MDNS::Start()+0x7c>)
 800ddc0:	f241 41e9 	movw	r1, #5353	; 0x14e9
 800ddc4:	4605      	mov	r5, r0
 800ddc6:	6820      	ldr	r0, [r4, #0]
 800ddc8:	f000 fb2c 	bl	800e424 <Network::Begin(unsigned short)>
 800ddcc:	4e1b      	ldr	r6, [pc, #108]	; (800de3c <MDNS::Start()+0x80>)
 800ddce:	4f1c      	ldr	r7, [pc, #112]	; (800de40 <MDNS::Start()+0x84>)
 800ddd0:	4601      	mov	r1, r0
 800ddd2:	6030      	str	r0, [r6, #0]
 800ddd4:	683a      	ldr	r2, [r7, #0]
 800ddd6:	6820      	ldr	r0, [r4, #0]
 800ddd8:	f000 fb35 	bl	800e446 <Network::JoinGroup(int, unsigned int)>
 800dddc:	4b19      	ldr	r3, [pc, #100]	; (800de44 <MDNS::Start()+0x88>)
 800ddde:	681b      	ldr	r3, [r3, #0]
 800dde0:	b923      	cbnz	r3, 800ddec <MDNS::Start()+0x30>
 800dde2:	6821      	ldr	r1, [r4, #0]
 800dde4:	4628      	mov	r0, r5
 800dde6:	311c      	adds	r1, #28
 800dde8:	f7ff ff34 	bl	800dc54 <MDNS::SetName(char const*)>
 800ddec:	4628      	mov	r0, r5
 800ddee:	f7ff ffbb 	bl	800dd68 <MDNS::CreateAnswerLocalIpAddress()>
 800ddf2:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800ddf6:	4914      	ldr	r1, [pc, #80]	; (800de48 <MDNS::Start()+0x8c>)
 800ddf8:	7830      	ldrb	r0, [r6, #0]
 800ddfa:	f851 2b04 	ldr.w	r2, [r1], #4
 800ddfe:	9300      	str	r3, [sp, #0]
 800de00:	b292      	uxth	r2, r2
 800de02:	683b      	ldr	r3, [r7, #0]
 800de04:	f7ff fe3e 	bl	800da84 <udp_send>
 800de08:	223f      	movs	r2, #63	; 0x3f
 800de0a:	6820      	ldr	r0, [r4, #0]
 800de0c:	4c0f      	ldr	r4, [pc, #60]	; (800de4c <MDNS::Start()+0x90>)
 800de0e:	f100 035c 	add.w	r3, r0, #92	; 0x5c
 800de12:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 800de16:	b929      	cbnz	r1, 800de24 <MDNS::Start()+0x68>
 800de18:	441a      	add	r2, r3
 800de1a:	4293      	cmp	r3, r2
 800de1c:	d006      	beq.n	800de2c <MDNS::Start()+0x70>
 800de1e:	f803 1b01 	strb.w	r1, [r3], #1
 800de22:	e7fa      	b.n	800de1a <MDNS::Start()+0x5e>
 800de24:	3a01      	subs	r2, #1
 800de26:	f803 1b01 	strb.w	r1, [r3], #1
 800de2a:	d1f2      	bne.n	800de12 <MDNS::Start()+0x56>
 800de2c:	2300      	movs	r3, #0
 800de2e:	f880 309b 	strb.w	r3, [r0, #155]	; 0x9b
 800de32:	b003      	add	sp, #12
 800de34:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800de36:	bf00      	nop
 800de38:	2000cb28 	andcs	ip, r0, r8, lsr #22
 800de3c:	2000001c 	andcs	r0, r0, ip, lsl r0
 800de40:	2000c6f0 	strdcs	ip, [r0], -r0
 800de44:	2000cb20 	andcs	ip, r0, r0, lsr #22
 800de48:	2000c6f4 	strdcs	ip, [r0], -r4
 800de4c:	08014af1 	stmdaeq	r1, {r0, r4, r5, r6, r7, r9, fp, lr}

0800de50 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)>:
 800de50:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800de54:	4c1b      	ldr	r4, [pc, #108]	; (800dec4 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x74>)
 800de56:	ea4f 1c01 	mov.w	ip, r1, lsl #4
 800de5a:	eb04 1501 	add.w	r5, r4, r1, lsl #4
 800de5e:	2300      	movs	r3, #0
 800de60:	f854 100c 	ldr.w	r1, [r4, ip]
 800de64:	4607      	mov	r7, r0
 800de66:	f7ff ff65 	bl	800dd34 <MDNS::WriteDnsName(char const*, char*, bool)>
 800de6a:	2301      	movs	r3, #1
 800de6c:	7bac      	ldrb	r4, [r5, #14]
 800de6e:	4616      	mov	r6, r2
 800de70:	4915      	ldr	r1, [pc, #84]	; (800dec8 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x78>)
 800de72:	4402      	add	r2, r0
 800de74:	4815      	ldr	r0, [pc, #84]	; (800decc <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x7c>)
 800de76:	429c      	cmp	r4, r3
 800de78:	bf18      	it	ne
 800de7a:	4601      	movne	r1, r0
 800de7c:	4638      	mov	r0, r7
 800de7e:	f7ff ff59 	bl	800dd34 <MDNS::WriteDnsName(char const*, char*, bool)>
 800de82:	4b13      	ldr	r3, [pc, #76]	; (800ded0 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x80>)
 800de84:	1814      	adds	r4, r2, r0
 800de86:	5013      	str	r3, [r2, r0]
 800de88:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800de8c:	6063      	str	r3, [r4, #4]
 800de8e:	4b11      	ldr	r3, [pc, #68]	; (800ded4 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x84>)
 800de90:	f8d3 8000 	ldr.w	r8, [r3]
 800de94:	4640      	mov	r0, r8
 800de96:	f7ff fea5 	bl	800dbe4 <strlen>
 800de9a:	f100 0308 	add.w	r3, r0, #8
 800de9e:	ba5b      	rev16	r3, r3
 800dea0:	8123      	strh	r3, [r4, #8]
 800dea2:	2300      	movs	r3, #0
 800dea4:	f8c4 300a 	str.w	r3, [r4, #10]
 800dea8:	89ab      	ldrh	r3, [r5, #12]
 800deaa:	f104 0210 	add.w	r2, r4, #16
 800deae:	ba5b      	rev16	r3, r3
 800deb0:	81e3      	strh	r3, [r4, #14]
 800deb2:	4641      	mov	r1, r8
 800deb4:	2301      	movs	r3, #1
 800deb6:	4638      	mov	r0, r7
 800deb8:	f7ff ff3c 	bl	800dd34 <MDNS::WriteDnsName(char const*, char*, bool)>
 800debc:	4410      	add	r0, r2
 800debe:	1b80      	subs	r0, r0, r6
 800dec0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800dec4:	2000c8f8 	strdcs	ip, [r0], -r8
 800dec8:	08014aed 	stmdaeq	r1, {r0, r2, r3, r5, r6, r7, r9, fp, lr}
 800decc:	08014b0a 	stmdaeq	r1, {r1, r3, r8, r9, fp, lr}
 800ded0:	01802100 	orreq	r2, r0, r0, lsl #2
 800ded4:	2000cb20 	andcs	ip, r0, r0, lsr #22

0800ded8 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)>:
 800ded8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dedc:	4e19      	ldr	r6, [pc, #100]	; (800df44 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x6c>)
 800dede:	010f      	lsls	r7, r1, #4
 800dee0:	eb06 1501 	add.w	r5, r6, r1, lsl #4
 800dee4:	2300      	movs	r3, #0
 800dee6:	59f1      	ldr	r1, [r6, r7]
 800dee8:	4604      	mov	r4, r0
 800deea:	f7ff ff23 	bl	800dd34 <MDNS::WriteDnsName(char const*, char*, bool)>
 800deee:	2301      	movs	r3, #1
 800def0:	7bae      	ldrb	r6, [r5, #14]
 800def2:	4690      	mov	r8, r2
 800def4:	4914      	ldr	r1, [pc, #80]	; (800df48 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x70>)
 800def6:	4402      	add	r2, r0
 800def8:	4814      	ldr	r0, [pc, #80]	; (800df4c <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x74>)
 800defa:	429e      	cmp	r6, r3
 800defc:	bf18      	it	ne
 800defe:	4601      	movne	r1, r0
 800df00:	4620      	mov	r0, r4
 800df02:	f7ff ff17 	bl	800dd34 <MDNS::WriteDnsName(char const*, char*, bool)>
 800df06:	4b12      	ldr	r3, [pc, #72]	; (800df50 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x78>)
 800df08:	1816      	adds	r6, r2, r0
 800df0a:	5013      	str	r3, [r2, r0]
 800df0c:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800df10:	68a8      	ldr	r0, [r5, #8]
 800df12:	6073      	str	r3, [r6, #4]
 800df14:	f106 040b 	add.w	r4, r6, #11
 800df18:	b938      	cbnz	r0, 800df2a <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x52>
 800df1a:	f44f 7380 	mov.w	r3, #256	; 0x100
 800df1e:	72b0      	strb	r0, [r6, #10]
 800df20:	8133      	strh	r3, [r6, #8]
 800df22:	eba4 0008 	sub.w	r0, r4, r8
 800df26:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800df2a:	f7ff fe5b 	bl	800dbe4 <strlen>
 800df2e:	4607      	mov	r7, r0
 800df30:	1c43      	adds	r3, r0, #1
 800df32:	72b0      	strb	r0, [r6, #10]
 800df34:	ba5b      	rev16	r3, r3
 800df36:	4620      	mov	r0, r4
 800df38:	68a9      	ldr	r1, [r5, #8]
 800df3a:	8133      	strh	r3, [r6, #8]
 800df3c:	f7ff fe67 	bl	800dc0e <strcpy.isra.0>
 800df40:	443c      	add	r4, r7
 800df42:	e7ee      	b.n	800df22 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x4a>
 800df44:	2000c8f8 	strdcs	ip, [r0], -r8
 800df48:	08014aed 	stmdaeq	r1, {r0, r2, r3, r5, r6, r7, r9, fp, lr}
 800df4c:	08014b0a 	stmdaeq	r1, {r1, r3, r8, r9, fp, lr}
 800df50:	01801000 	orreq	r1, r0, r0

0800df54 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)>:
 800df54:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800df58:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800dfbc <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x68>
 800df5c:	ea4f 1901 	mov.w	r9, r1, lsl #4
 800df60:	eb08 1501 	add.w	r5, r8, r1, lsl #4
 800df64:	6869      	ldr	r1, [r5, #4]
 800df66:	2301      	movs	r3, #1
 800df68:	4607      	mov	r7, r0
 800df6a:	f7ff fee3 	bl	800dd34 <MDNS::WriteDnsName(char const*, char*, bool)>
 800df6e:	4b14      	ldr	r3, [pc, #80]	; (800dfc0 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x6c>)
 800df70:	f858 8009 	ldr.w	r8, [r8, r9]
 800df74:	5013      	str	r3, [r2, r0]
 800df76:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800df7a:	1816      	adds	r6, r2, r0
 800df7c:	6073      	str	r3, [r6, #4]
 800df7e:	4640      	mov	r0, r8
 800df80:	4614      	mov	r4, r2
 800df82:	f7ff fe2f 	bl	800dbe4 <strlen>
 800df86:	f100 030d 	add.w	r3, r0, #13
 800df8a:	ba5b      	rev16	r3, r3
 800df8c:	4641      	mov	r1, r8
 800df8e:	8133      	strh	r3, [r6, #8]
 800df90:	f106 020a 	add.w	r2, r6, #10
 800df94:	2300      	movs	r3, #0
 800df96:	4638      	mov	r0, r7
 800df98:	f7ff fecc 	bl	800dd34 <MDNS::WriteDnsName(char const*, char*, bool)>
 800df9c:	2301      	movs	r3, #1
 800df9e:	4402      	add	r2, r0
 800dfa0:	7bad      	ldrb	r5, [r5, #14]
 800dfa2:	4808      	ldr	r0, [pc, #32]	; (800dfc4 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x70>)
 800dfa4:	4908      	ldr	r1, [pc, #32]	; (800dfc8 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x74>)
 800dfa6:	429d      	cmp	r5, r3
 800dfa8:	bf18      	it	ne
 800dfaa:	4601      	movne	r1, r0
 800dfac:	4638      	mov	r0, r7
 800dfae:	f7ff fec1 	bl	800dd34 <MDNS::WriteDnsName(char const*, char*, bool)>
 800dfb2:	4410      	add	r0, r2
 800dfb4:	1b00      	subs	r0, r0, r4
 800dfb6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800dfba:	bf00      	nop
 800dfbc:	2000c8f8 	strdcs	ip, [r0], -r8
 800dfc0:	01000c00 	tsteq	r0, r0, lsl #24
 800dfc4:	08014b0a 	stmdaeq	r1, {r1, r3, r8, r9, fp, lr}
 800dfc8:	08014aed 	stmdaeq	r1, {r0, r2, r3, r5, r6, r7, r9, fp, lr}

0800dfcc <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)>:
 800dfcc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800dfce:	460f      	mov	r7, r1
 800dfd0:	2301      	movs	r3, #1
 800dfd2:	490f      	ldr	r1, [pc, #60]	; (800e010 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x44>)
 800dfd4:	4606      	mov	r6, r0
 800dfd6:	f7ff fead 	bl	800dd34 <MDNS::WriteDnsName(char const*, char*, bool)>
 800dfda:	4b0e      	ldr	r3, [pc, #56]	; (800e014 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x48>)
 800dfdc:	490e      	ldr	r1, [pc, #56]	; (800e018 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x4c>)
 800dfde:	5013      	str	r3, [r2, r0]
 800dfe0:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800dfe4:	eb01 1107 	add.w	r1, r1, r7, lsl #4
 800dfe8:	684f      	ldr	r7, [r1, #4]
 800dfea:	1815      	adds	r5, r2, r0
 800dfec:	606b      	str	r3, [r5, #4]
 800dfee:	4638      	mov	r0, r7
 800dff0:	4614      	mov	r4, r2
 800dff2:	f7ff fdf7 	bl	800dbe4 <strlen>
 800dff6:	1c83      	adds	r3, r0, #2
 800dff8:	ba5b      	rev16	r3, r3
 800dffa:	812b      	strh	r3, [r5, #8]
 800dffc:	f105 020a 	add.w	r2, r5, #10
 800e000:	2301      	movs	r3, #1
 800e002:	4639      	mov	r1, r7
 800e004:	4630      	mov	r0, r6
 800e006:	f7ff fe95 	bl	800dd34 <MDNS::WriteDnsName(char const*, char*, bool)>
 800e00a:	4410      	add	r0, r2
 800e00c:	1b00      	subs	r0, r0, r4
 800e00e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e010:	08014af8 	stmdaeq	r1, {r3, r4, r5, r6, r7, r9, fp, lr}
 800e014:	01000c00 	tsteq	r0, r0, lsl #24
 800e018:	2000c8f8 	strdcs	ip, [r0], -r8

0800e01c <MDNS::CreateMDNSMessage(unsigned int)>:
 800e01c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e01e:	2384      	movs	r3, #132	; 0x84
 800e020:	4d19      	ldr	r5, [pc, #100]	; (800e088 <MDNS::CreateMDNSMessage(unsigned int)+0x6c>)
 800e022:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800e026:	80eb      	strh	r3, [r5, #6]
 800e028:	f44f 7380 	mov.w	r3, #256	; 0x100
 800e02c:	f105 0410 	add.w	r4, r5, #16
 800e030:	e9c5 2302 	strd	r2, r3, [r5, #8]
 800e034:	4622      	mov	r2, r4
 800e036:	4606      	mov	r6, r0
 800e038:	460f      	mov	r7, r1
 800e03a:	f7ff ff09 	bl	800de50 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)>
 800e03e:	4404      	add	r4, r0
 800e040:	4622      	mov	r2, r4
 800e042:	4639      	mov	r1, r7
 800e044:	4630      	mov	r0, r6
 800e046:	f7ff ff47 	bl	800ded8 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)>
 800e04a:	4404      	add	r4, r0
 800e04c:	4622      	mov	r2, r4
 800e04e:	4639      	mov	r1, r7
 800e050:	4630      	mov	r0, r6
 800e052:	f7ff ffbb 	bl	800dfcc <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)>
 800e056:	4404      	add	r4, r0
 800e058:	4622      	mov	r2, r4
 800e05a:	4639      	mov	r1, r7
 800e05c:	4630      	mov	r0, r6
 800e05e:	f7ff ff79 	bl	800df54 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)>
 800e062:	4b0a      	ldr	r3, [pc, #40]	; (800e08c <MDNS::CreateMDNSMessage(unsigned int)+0x70>)
 800e064:	4404      	add	r4, r0
 800e066:	f853 2b10 	ldr.w	r2, [r3], #16
 800e06a:	1e60      	subs	r0, r4, #1
 800e06c:	3a0c      	subs	r2, #12
 800e06e:	4611      	mov	r1, r2
 800e070:	3901      	subs	r1, #1
 800e072:	d304      	bcc.n	800e07e <MDNS::CreateMDNSMessage(unsigned int)+0x62>
 800e074:	f813 6b01 	ldrb.w	r6, [r3], #1
 800e078:	f800 6f01 	strb.w	r6, [r0, #1]!
 800e07c:	e7f8      	b.n	800e070 <MDNS::CreateMDNSMessage(unsigned int)+0x54>
 800e07e:	4414      	add	r4, r2
 800e080:	4a03      	ldr	r2, [pc, #12]	; (800e090 <MDNS::CreateMDNSMessage(unsigned int)+0x74>)
 800e082:	1aa4      	subs	r4, r4, r2
 800e084:	602c      	str	r4, [r5, #0]
 800e086:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e088:	2000c91c 	andcs	ip, r0, ip, lsl r9
 800e08c:	2000c6f4 	strdcs	ip, [r0], -r4
 800e090:	2000c920 	andcs	ip, r0, r0, lsr #18

0800e094 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>:
 800e094:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e098:	4d40      	ldr	r5, [pc, #256]	; (800e19c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x108>)
 800e09a:	b085      	sub	sp, #20
 800e09c:	682c      	ldr	r4, [r5, #0]
 800e09e:	4680      	mov	r8, r0
 800e0a0:	460f      	mov	r7, r1
 800e0a2:	4616      	mov	r6, r2
 800e0a4:	f89d b038 	ldrb.w	fp, [sp, #56]	; 0x38
 800e0a8:	f8dd a03c 	ldr.w	sl, [sp, #60]	; 0x3c
 800e0ac:	b11c      	cbz	r4, 800e0b6 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x22>
 800e0ae:	692a      	ldr	r2, [r5, #16]
 800e0b0:	2a00      	cmp	r2, #0
 800e0b2:	d16f      	bne.n	800e194 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x100>
 800e0b4:	2401      	movs	r4, #1
 800e0b6:	eb05 1204 	add.w	r2, r5, r4, lsl #4
 800e0ba:	ea4f 1904 	mov.w	r9, r4, lsl #4
 800e0be:	8193      	strh	r3, [r2, #12]
 800e0c0:	f882 b00e 	strb.w	fp, [r2, #14]
 800e0c4:	2f00      	cmp	r7, #0
 800e0c6:	d155      	bne.n	800e174 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xe0>
 800e0c8:	4b35      	ldr	r3, [pc, #212]	; (800e1a0 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x10c>)
 800e0ca:	6818      	ldr	r0, [r3, #0]
 800e0cc:	301c      	adds	r0, #28
 800e0ce:	f7ff fd89 	bl	800dbe4 <strlen>
 800e0d2:	4607      	mov	r7, r0
 800e0d4:	4630      	mov	r0, r6
 800e0d6:	f7ff fd85 	bl	800dbe4 <strlen>
 800e0da:	4438      	add	r0, r7
 800e0dc:	3001      	adds	r0, #1
 800e0de:	f002 fcb1 	bl	8010a44 <operator new[](unsigned int)>
 800e0e2:	4b2f      	ldr	r3, [pc, #188]	; (800e1a0 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x10c>)
 800e0e4:	f845 0009 	str.w	r0, [r5, r9]
 800e0e8:	6819      	ldr	r1, [r3, #0]
 800e0ea:	311c      	adds	r1, #28
 800e0ec:	f7ff fd8f 	bl	800dc0e <strcpy.isra.0>
 800e0f0:	f855 0009 	ldr.w	r0, [r5, r9]
 800e0f4:	4631      	mov	r1, r6
 800e0f6:	f7ff fd92 	bl	800dc1e <strcat.isra.0>
 800e0fa:	4631      	mov	r1, r6
 800e0fc:	4640      	mov	r0, r8
 800e0fe:	f7ff fe0b 	bl	800dd18 <MDNS::FindFirstDotFromRight(char const*) const>
 800e102:	eb05 0709 	add.w	r7, r5, r9
 800e106:	4605      	mov	r5, r0
 800e108:	f7ff fd6c 	bl	800dbe4 <strlen>
 800e10c:	300d      	adds	r0, #13
 800e10e:	f002 fc99 	bl	8010a44 <operator new[](unsigned int)>
 800e112:	4629      	mov	r1, r5
 800e114:	6078      	str	r0, [r7, #4]
 800e116:	f7ff fd7a 	bl	800dc0e <strcpy.isra.0>
 800e11a:	4922      	ldr	r1, [pc, #136]	; (800e1a4 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x110>)
 800e11c:	6878      	ldr	r0, [r7, #4]
 800e11e:	f7ff fd7e 	bl	800dc1e <strcat.isra.0>
 800e122:	4921      	ldr	r1, [pc, #132]	; (800e1a8 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x114>)
 800e124:	4b21      	ldr	r3, [pc, #132]	; (800e1ac <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x118>)
 800e126:	6878      	ldr	r0, [r7, #4]
 800e128:	f1bb 0f01 	cmp.w	fp, #1
 800e12c:	bf18      	it	ne
 800e12e:	4619      	movne	r1, r3
 800e130:	f7ff fd75 	bl	800dc1e <strcat.isra.0>
 800e134:	f1ba 0f00 	cmp.w	sl, #0
 800e138:	d009      	beq.n	800e14e <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xba>
 800e13a:	4650      	mov	r0, sl
 800e13c:	f7ff fd52 	bl	800dbe4 <strlen>
 800e140:	3001      	adds	r0, #1
 800e142:	f002 fc7f 	bl	8010a44 <operator new[](unsigned int)>
 800e146:	4651      	mov	r1, sl
 800e148:	60b8      	str	r0, [r7, #8]
 800e14a:	f7ff fd60 	bl	800dc0e <strcpy.isra.0>
 800e14e:	4621      	mov	r1, r4
 800e150:	4640      	mov	r0, r8
 800e152:	f7ff ff63 	bl	800e01c <MDNS::CreateMDNSMessage(unsigned int)>
 800e156:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800e15a:	4915      	ldr	r1, [pc, #84]	; (800e1b0 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x11c>)
 800e15c:	4815      	ldr	r0, [pc, #84]	; (800e1b4 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x120>)
 800e15e:	f851 2b04 	ldr.w	r2, [r1], #4
 800e162:	9300      	str	r3, [sp, #0]
 800e164:	4b14      	ldr	r3, [pc, #80]	; (800e1b8 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x124>)
 800e166:	7800      	ldrb	r0, [r0, #0]
 800e168:	681b      	ldr	r3, [r3, #0]
 800e16a:	b292      	uxth	r2, r2
 800e16c:	f7ff fc8a 	bl	800da84 <udp_send>
 800e170:	2001      	movs	r0, #1
 800e172:	e010      	b.n	800e196 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x102>
 800e174:	4638      	mov	r0, r7
 800e176:	f7ff fd35 	bl	800dbe4 <strlen>
 800e17a:	9003      	str	r0, [sp, #12]
 800e17c:	4630      	mov	r0, r6
 800e17e:	f7ff fd31 	bl	800dbe4 <strlen>
 800e182:	9b03      	ldr	r3, [sp, #12]
 800e184:	4418      	add	r0, r3
 800e186:	3001      	adds	r0, #1
 800e188:	f002 fc5c 	bl	8010a44 <operator new[](unsigned int)>
 800e18c:	4639      	mov	r1, r7
 800e18e:	f845 0009 	str.w	r0, [r5, r9]
 800e192:	e7ab      	b.n	800e0ec <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x58>
 800e194:	2000      	movs	r0, #0
 800e196:	b005      	add	sp, #20
 800e198:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e19c:	2000c8f8 	strdcs	ip, [r0], -r8
 800e1a0:	2000cb28 	andcs	ip, r0, r8, lsr #22
 800e1a4:	08013873 	stmdaeq	r1, {r0, r1, r4, r5, r6, fp, ip, sp}
 800e1a8:	08014aed 	stmdaeq	r1, {r0, r2, r3, r5, r6, r7, r9, fp, lr}
 800e1ac:	08014b0a 	stmdaeq	r1, {r1, r3, r8, r9, fp, lr}
 800e1b0:	2000c91c 	andcs	ip, r0, ip, lsl r9
 800e1b4:	2000001c 	andcs	r0, r0, ip, lsl r0
 800e1b8:	2000c6f0 	strdcs	ip, [r0], -r0

0800e1bc <MDNS::HandleRequest(unsigned short)>:
 800e1bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e1c0:	4605      	mov	r5, r0
 800e1c2:	2700      	movs	r7, #0
 800e1c4:	f04f 080c 	mov.w	r8, #12
 800e1c8:	b0c5      	sub	sp, #276	; 0x114
 800e1ca:	f8df a0c4 	ldr.w	sl, [pc, #196]	; 800e290 <MDNS::HandleRequest(unsigned short)+0xd4>
 800e1ce:	f8df b0c4 	ldr.w	fp, [pc, #196]	; 800e294 <MDNS::HandleRequest(unsigned short)+0xd8>
 800e1d2:	9103      	str	r1, [sp, #12]
 800e1d4:	9b03      	ldr	r3, [sp, #12]
 800e1d6:	42bb      	cmp	r3, r7
 800e1d8:	d956      	bls.n	800e288 <MDNS::HandleRequest(unsigned short)+0xcc>
 800e1da:	f8da 1000 	ldr.w	r1, [sl]
 800e1de:	aa04      	add	r2, sp, #16
 800e1e0:	4441      	add	r1, r8
 800e1e2:	4628      	mov	r0, r5
 800e1e4:	f7ff fd52 	bl	800dc8c <MDNS::DecodeDNSNameNotation(char const*, char*)>
 800e1e8:	f8da 2000 	ldr.w	r2, [sl]
 800e1ec:	4440      	add	r0, r8
 800e1ee:	1813      	adds	r3, r2, r0
 800e1f0:	885b      	ldrh	r3, [r3, #2]
 800e1f2:	f100 0804 	add.w	r8, r0, #4
 800e1f6:	ba5b      	rev16	r3, r3
 800e1f8:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800e1fc:	2b01      	cmp	r3, #1
 800e1fe:	d13e      	bne.n	800e27e <MDNS::HandleRequest(unsigned short)+0xc2>
 800e200:	5a14      	ldrh	r4, [r2, r0]
 800e202:	4b25      	ldr	r3, [pc, #148]	; (800e298 <MDNS::HandleRequest(unsigned short)+0xdc>)
 800e204:	ba64      	rev16	r4, r4
 800e206:	6818      	ldr	r0, [r3, #0]
 800e208:	a904      	add	r1, sp, #16
 800e20a:	b2a4      	uxth	r4, r4
 800e20c:	f7ff fcf2 	bl	800dbf4 <strcmp>
 800e210:	b970      	cbnz	r0, 800e230 <MDNS::HandleRequest(unsigned short)+0x74>
 800e212:	2c01      	cmp	r4, #1
 800e214:	d10c      	bne.n	800e230 <MDNS::HandleRequest(unsigned short)+0x74>
 800e216:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800e21a:	4920      	ldr	r1, [pc, #128]	; (800e29c <MDNS::HandleRequest(unsigned short)+0xe0>)
 800e21c:	4820      	ldr	r0, [pc, #128]	; (800e2a0 <MDNS::HandleRequest(unsigned short)+0xe4>)
 800e21e:	f851 2b04 	ldr.w	r2, [r1], #4
 800e222:	9300      	str	r3, [sp, #0]
 800e224:	4b1f      	ldr	r3, [pc, #124]	; (800e2a4 <MDNS::HandleRequest(unsigned short)+0xe8>)
 800e226:	7800      	ldrb	r0, [r0, #0]
 800e228:	681b      	ldr	r3, [r3, #0]
 800e22a:	b292      	uxth	r2, r2
 800e22c:	f7ff fc2a 	bl	800da84 <udp_send>
 800e230:	481d      	ldr	r0, [pc, #116]	; (800e2a8 <MDNS::HandleRequest(unsigned short)+0xec>)
 800e232:	a904      	add	r1, sp, #16
 800e234:	f7ff fcde 	bl	800dbf4 <strcmp>
 800e238:	f04f 0900 	mov.w	r9, #0
 800e23c:	4e1b      	ldr	r6, [pc, #108]	; (800e2ac <MDNS::HandleRequest(unsigned short)+0xf0>)
 800e23e:	9002      	str	r0, [sp, #8]
 800e240:	6833      	ldr	r3, [r6, #0]
 800e242:	b1c3      	cbz	r3, 800e276 <MDNS::HandleRequest(unsigned short)+0xba>
 800e244:	9b02      	ldr	r3, [sp, #8]
 800e246:	b123      	cbz	r3, 800e252 <MDNS::HandleRequest(unsigned short)+0x96>
 800e248:	6870      	ldr	r0, [r6, #4]
 800e24a:	a904      	add	r1, sp, #16
 800e24c:	f7ff fcd2 	bl	800dbf4 <strcmp>
 800e250:	b988      	cbnz	r0, 800e276 <MDNS::HandleRequest(unsigned short)+0xba>
 800e252:	2c0c      	cmp	r4, #12
 800e254:	d10f      	bne.n	800e276 <MDNS::HandleRequest(unsigned short)+0xba>
 800e256:	4649      	mov	r1, r9
 800e258:	4628      	mov	r0, r5
 800e25a:	f7ff fedf 	bl	800e01c <MDNS::CreateMDNSMessage(unsigned int)>
 800e25e:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800e262:	480f      	ldr	r0, [pc, #60]	; (800e2a0 <MDNS::HandleRequest(unsigned short)+0xe4>)
 800e264:	9300      	str	r3, [sp, #0]
 800e266:	4b0f      	ldr	r3, [pc, #60]	; (800e2a4 <MDNS::HandleRequest(unsigned short)+0xe8>)
 800e268:	f8bb 2000 	ldrh.w	r2, [fp]
 800e26c:	681b      	ldr	r3, [r3, #0]
 800e26e:	4910      	ldr	r1, [pc, #64]	; (800e2b0 <MDNS::HandleRequest(unsigned short)+0xf4>)
 800e270:	7800      	ldrb	r0, [r0, #0]
 800e272:	f7ff fc07 	bl	800da84 <udp_send>
 800e276:	3610      	adds	r6, #16
 800e278:	f1b9 0f00 	cmp.w	r9, #0
 800e27c:	d001      	beq.n	800e282 <MDNS::HandleRequest(unsigned short)+0xc6>
 800e27e:	3701      	adds	r7, #1
 800e280:	e7a8      	b.n	800e1d4 <MDNS::HandleRequest(unsigned short)+0x18>
 800e282:	f04f 0901 	mov.w	r9, #1
 800e286:	e7db      	b.n	800e240 <MDNS::HandleRequest(unsigned short)+0x84>
 800e288:	b045      	add	sp, #276	; 0x114
 800e28a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e28e:	bf00      	nop
 800e290:	2000cb24 	andcs	ip, r0, r4, lsr #22
 800e294:	2000c91c 	andcs	ip, r0, ip, lsl r9
 800e298:	2000cb20 	andcs	ip, r0, r0, lsr #22
 800e29c:	2000c6f4 	strdcs	ip, [r0], -r4
 800e2a0:	2000001c 	andcs	r0, r0, ip, lsl r0
 800e2a4:	2000c6f0 	strdcs	ip, [r0], -r0
 800e2a8:	08014af8 	stmdaeq	r1, {r3, r4, r5, r6, r7, r9, fp, lr}
 800e2ac:	2000c8f8 	strdcs	ip, [r0], -r8
 800e2b0:	2000c920 	andcs	ip, r0, r0, lsr #18

0800e2b4 <MDNS::Parse()>:
 800e2b4:	4b08      	ldr	r3, [pc, #32]	; (800e2d8 <MDNS::Parse()+0x24>)
 800e2b6:	681a      	ldr	r2, [r3, #0]
 800e2b8:	8853      	ldrh	r3, [r2, #2]
 800e2ba:	ba5b      	rev16	r3, r3
 800e2bc:	b299      	uxth	r1, r3
 800e2be:	041b      	lsls	r3, r3, #16
 800e2c0:	d408      	bmi.n	800e2d4 <MDNS::Parse()+0x20>
 800e2c2:	0b8b      	lsrs	r3, r1, #14
 800e2c4:	d106      	bne.n	800e2d4 <MDNS::Parse()+0x20>
 800e2c6:	8891      	ldrh	r1, [r2, #4]
 800e2c8:	b28b      	uxth	r3, r1
 800e2ca:	b11b      	cbz	r3, 800e2d4 <MDNS::Parse()+0x20>
 800e2cc:	ba49      	rev16	r1, r1
 800e2ce:	b289      	uxth	r1, r1
 800e2d0:	f7ff bf74 	b.w	800e1bc <MDNS::HandleRequest(unsigned short)>
 800e2d4:	4770      	bx	lr
 800e2d6:	bf00      	nop
 800e2d8:	2000cb24 	andcs	ip, r0, r4, lsr #22

0800e2dc <MDNS::Run()>:
 800e2dc:	b538      	push	{r3, r4, r5, lr}
 800e2de:	4d0c      	ldr	r5, [pc, #48]	; (800e310 <MDNS::Run()+0x34>)
 800e2e0:	4604      	mov	r4, r0
 800e2e2:	480c      	ldr	r0, [pc, #48]	; (800e314 <MDNS::Run()+0x38>)
 800e2e4:	462b      	mov	r3, r5
 800e2e6:	4a0c      	ldr	r2, [pc, #48]	; (800e318 <MDNS::Run()+0x3c>)
 800e2e8:	490c      	ldr	r1, [pc, #48]	; (800e31c <MDNS::Run()+0x40>)
 800e2ea:	7800      	ldrb	r0, [r0, #0]
 800e2ec:	f7ff fba4 	bl	800da38 <udp_recv2>
 800e2f0:	4b0b      	ldr	r3, [pc, #44]	; (800e320 <MDNS::Run()+0x44>)
 800e2f2:	882a      	ldrh	r2, [r5, #0]
 800e2f4:	8018      	strh	r0, [r3, #0]
 800e2f6:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800e2fa:	429a      	cmp	r2, r3
 800e2fc:	d106      	bne.n	800e30c <MDNS::Run()+0x30>
 800e2fe:	280c      	cmp	r0, #12
 800e300:	d904      	bls.n	800e30c <MDNS::Run()+0x30>
 800e302:	4620      	mov	r0, r4
 800e304:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800e308:	f7ff bfd4 	b.w	800e2b4 <MDNS::Parse()>
 800e30c:	bd38      	pop	{r3, r4, r5, pc}
 800e30e:	bf00      	nop
 800e310:	2000c6ec 	andcs	ip, r0, ip, ror #13
 800e314:	2000001c 	andcs	r0, r0, ip, lsl r0
 800e318:	2000c6e8 	andcs	ip, r0, r8, ror #13
 800e31c:	2000cb24 	andcs	ip, r0, r4, lsr #22
 800e320:	2000c918 	andcs	ip, r0, r8, lsl r9

0800e324 <MDNS::Print()>:
 800e324:	b510      	push	{r4, lr}
 800e326:	4816      	ldr	r0, [pc, #88]	; (800e380 <MDNS::Print()+0x5c>)
 800e328:	f002 ff90 	bl	801124c <printf>
 800e32c:	4b15      	ldr	r3, [pc, #84]	; (800e384 <MDNS::Print()+0x60>)
 800e32e:	681b      	ldr	r3, [r3, #0]
 800e330:	3301      	adds	r3, #1
 800e332:	d104      	bne.n	800e33e <MDNS::Print()+0x1a>
 800e334:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e338:	4813      	ldr	r0, [pc, #76]	; (800e388 <MDNS::Print()+0x64>)
 800e33a:	f002 bf87 	b.w	801124c <printf>
 800e33e:	4b13      	ldr	r3, [pc, #76]	; (800e38c <MDNS::Print()+0x68>)
 800e340:	4c13      	ldr	r4, [pc, #76]	; (800e390 <MDNS::Print()+0x6c>)
 800e342:	6819      	ldr	r1, [r3, #0]
 800e344:	4813      	ldr	r0, [pc, #76]	; (800e394 <MDNS::Print()+0x70>)
 800e346:	f002 ff81 	bl	801124c <printf>
 800e34a:	6823      	ldr	r3, [r4, #0]
 800e34c:	b14b      	cbz	r3, 800e362 <MDNS::Print()+0x3e>
 800e34e:	4a12      	ldr	r2, [pc, #72]	; (800e398 <MDNS::Print()+0x74>)
 800e350:	68a3      	ldr	r3, [r4, #8]
 800e352:	6861      	ldr	r1, [r4, #4]
 800e354:	2b00      	cmp	r3, #0
 800e356:	bf08      	it	eq
 800e358:	4613      	moveq	r3, r2
 800e35a:	4810      	ldr	r0, [pc, #64]	; (800e39c <MDNS::Print()+0x78>)
 800e35c:	89a2      	ldrh	r2, [r4, #12]
 800e35e:	f002 ff75 	bl	801124c <printf>
 800e362:	6923      	ldr	r3, [r4, #16]
 800e364:	b15b      	cbz	r3, 800e37e <MDNS::Print()+0x5a>
 800e366:	69a3      	ldr	r3, [r4, #24]
 800e368:	4a0b      	ldr	r2, [pc, #44]	; (800e398 <MDNS::Print()+0x74>)
 800e36a:	6961      	ldr	r1, [r4, #20]
 800e36c:	2b00      	cmp	r3, #0
 800e36e:	bf08      	it	eq
 800e370:	4613      	moveq	r3, r2
 800e372:	480a      	ldr	r0, [pc, #40]	; (800e39c <MDNS::Print()+0x78>)
 800e374:	8ba2      	ldrh	r2, [r4, #28]
 800e376:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e37a:	f002 bf67 	b.w	801124c <printf>
 800e37e:	bd10      	pop	{r4, pc}
 800e380:	08014b15 	stmdaeq	r1, {r0, r2, r4, r8, r9, fp, lr}
 800e384:	2000001c 	andcs	r0, r0, ip, lsl r0
 800e388:	08014b1b 	stmdaeq	r1, {r0, r1, r3, r4, r8, r9, fp, lr}
 800e38c:	2000cb20 	andcs	ip, r0, r0, lsr #22
 800e390:	2000c8f8 	strdcs	ip, [r0], -r8
 800e394:	08014b29 	stmdaeq	r1, {r0, r3, r5, r8, r9, fp, lr}
 800e398:	08013b97 	stmdaeq	r1, {r0, r1, r2, r4, r7, r8, r9, fp, ip, sp}
 800e39c:	08014b35 	stmdaeq	r1, {r0, r2, r4, r5, r8, r9, fp, lr}

0800e3a0 <strncpy.constprop.0.isra.0>:
 800e3a0:	233f      	movs	r3, #63	; 0x3f
 800e3a2:	3901      	subs	r1, #1
 800e3a4:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800e3a8:	b92a      	cbnz	r2, 800e3b6 <strncpy.constprop.0.isra.0+0x16>
 800e3aa:	4403      	add	r3, r0
 800e3ac:	4298      	cmp	r0, r3
 800e3ae:	d007      	beq.n	800e3c0 <strncpy.constprop.0.isra.0+0x20>
 800e3b0:	f800 2b01 	strb.w	r2, [r0], #1
 800e3b4:	e7fa      	b.n	800e3ac <strncpy.constprop.0.isra.0+0xc>
 800e3b6:	3b01      	subs	r3, #1
 800e3b8:	f800 2b01 	strb.w	r2, [r0], #1
 800e3bc:	d1f2      	bne.n	800e3a4 <strncpy.constprop.0.isra.0+0x4>
 800e3be:	4770      	bx	lr
 800e3c0:	4770      	bx	lr
	...

0800e3c4 <Network::Network()>:
 800e3c4:	4a11      	ldr	r2, [pc, #68]	; (800e40c <Network::Network()+0x48>)
 800e3c6:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 800e3ca:	6010      	str	r0, [r2, #0]
 800e3cc:	2201      	movs	r2, #1
 800e3ce:	2300      	movs	r3, #0
 800e3d0:	e9c0 1200 	strd	r1, r2, [r0]
 800e3d4:	2200      	movs	r2, #0
 800e3d6:	e9c0 332f 	strd	r3, r3, [r0, #188]	; 0xbc
 800e3da:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800e3de:	490c      	ldr	r1, [pc, #48]	; (800e410 <Network::Network()+0x4c>)
 800e3e0:	60c2      	str	r2, [r0, #12]
 800e3e2:	f8c0 30b4 	str.w	r3, [r0, #180]	; 0xb4
 800e3e6:	f8c0 30c4 	str.w	r3, [r0, #196]	; 0xc4
 800e3ea:	f880 309c 	strb.w	r3, [r0, #156]	; 0x9c
 800e3ee:	6083      	str	r3, [r0, #8]
 800e3f0:	6183      	str	r3, [r0, #24]
 800e3f2:	7703      	strb	r3, [r0, #28]
 800e3f4:	f880 305c 	strb.w	r3, [r0, #92]	; 0x5c
 800e3f8:	f100 02a2 	add.w	r2, r0, #162	; 0xa2
 800e3fc:	f811 3b01 	ldrb.w	r3, [r1], #1
 800e400:	f802 3b01 	strb.w	r3, [r2], #1
 800e404:	2b00      	cmp	r3, #0
 800e406:	d1f9      	bne.n	800e3fc <Network::Network()+0x38>
 800e408:	4770      	bx	lr
 800e40a:	bf00      	nop
 800e40c:	2000cb28 	andcs	ip, r0, r8, lsr #22
 800e410:	08014b40 	stmdaeq	r1, {r6, r8, r9, fp, lr}

0800e414 <Network::Shutdown()>:
 800e414:	b508      	push	{r3, lr}
 800e416:	30b8      	adds	r0, #184	; 0xb8
 800e418:	f001 fc20 	bl	800fc5c <NetworkDisplay::ShowShutdown()>
 800e41c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800e420:	f7f8 bf12 	b.w	8007248 <net_shutdown>

0800e424 <Network::Begin(unsigned short)>:
 800e424:	4608      	mov	r0, r1
 800e426:	f7ff ba97 	b.w	800d958 <udp_bind>

0800e42a <Network::End(unsigned short)>:
 800e42a:	4608      	mov	r0, r1
 800e42c:	f7ff baae 	b.w	800d98c <udp_unbind>

0800e430 <Network::MacAddressCopyTo(unsigned char*)>:
 800e430:	f100 039c 	add.w	r3, r0, #156	; 0x9c
 800e434:	3901      	subs	r1, #1
 800e436:	30a2      	adds	r0, #162	; 0xa2
 800e438:	f813 2b01 	ldrb.w	r2, [r3], #1
 800e43c:	4283      	cmp	r3, r0
 800e43e:	f801 2f01 	strb.w	r2, [r1, #1]!
 800e442:	d1f9      	bne.n	800e438 <Network::MacAddressCopyTo(unsigned char*)+0x8>
 800e444:	4770      	bx	lr

0800e446 <Network::JoinGroup(int, unsigned int)>:
 800e446:	4610      	mov	r0, r2
 800e448:	f000 bf86 	b.w	800f358 <igmp_join>

0800e44c <Network::LeaveGroup(int, unsigned int)>:
 800e44c:	4610      	mov	r0, r2
 800e44e:	f000 bfaf 	b.w	800f3b0 <igmp_leave>

0800e452 <Network::SetDefaultIp()>:
 800e452:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800e456:	f890 209f 	ldrb.w	r2, [r0, #159]	; 0x9f
 800e45a:	041b      	lsls	r3, r3, #16
 800e45c:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 800e460:	f890 20a1 	ldrb.w	r2, [r0, #161]	; 0xa1
 800e464:	3302      	adds	r3, #2
 800e466:	eb03 6302 	add.w	r3, r3, r2, lsl #24
 800e46a:	22ff      	movs	r2, #255	; 0xff
 800e46c:	6103      	str	r3, [r0, #16]
 800e46e:	e9c0 3205 	strd	r3, r2, [r0, #20]
 800e472:	4770      	bx	lr

0800e474 <Network::Init(NetworkParamsStore*)>:
 800e474:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e478:	b08b      	sub	sp, #44	; 0x2c
 800e47a:	4604      	mov	r4, r0
 800e47c:	a806      	add	r0, sp, #24
 800e47e:	f000 f9b1 	bl	800e7e4 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 800e482:	a806      	add	r0, sp, #24
 800e484:	f000 f9be 	bl	800e804 <NetworkParams::Load()>
 800e488:	b110      	cbz	r0, 800e490 <Network::Init(NetworkParamsStore*)+0x1c>
 800e48a:	a806      	add	r0, sp, #24
 800e48c:	f000 fc25 	bl	800ecda <NetworkParams::Dump()>
 800e490:	f104 05b8 	add.w	r5, r4, #184	; 0xb8
 800e494:	f8df 8224 	ldr.w	r8, [pc, #548]	; 800e6bc <Network::Init(NetworkParamsStore*)+0x248>
 800e498:	4628      	mov	r0, r5
 800e49a:	f104 079c 	add.w	r7, r4, #156	; 0x9c
 800e49e:	f001 fbd1 	bl	800fc44 <NetworkDisplay::ShowEmacStart()>
 800e4a2:	4638      	mov	r0, r7
 800e4a4:	f003 fe98 	bl	80121d8 <emac_start>
 800e4a8:	f8d8 3004 	ldr.w	r3, [r8, #4]
 800e4ac:	f104 061c 	add.w	r6, r4, #28
 800e4b0:	9307      	str	r3, [sp, #28]
 800e4b2:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800e4b6:	9308      	str	r3, [sp, #32]
 800e4b8:	f8d8 300c 	ldr.w	r3, [r8, #12]
 800e4bc:	9309      	str	r3, [sp, #36]	; 0x24
 800e4be:	f898 3014 	ldrb.w	r3, [r8, #20]
 800e4c2:	7063      	strb	r3, [r4, #1]
 800e4c4:	f8d8 3000 	ldr.w	r3, [r8]
 800e4c8:	f013 0240 	ands.w	r2, r3, #64	; 0x40
 800e4cc:	bf18      	it	ne
 800e4ce:	f8d8 2055 	ldrne.w	r2, [r8, #85]	; 0x55
 800e4d2:	061b      	lsls	r3, r3, #24
 800e4d4:	bf58      	it	pl
 800e4d6:	2300      	movpl	r3, #0
 800e4d8:	60a2      	str	r2, [r4, #8]
 800e4da:	bf48      	it	mi
 800e4dc:	f8d8 3059 	ldrmi.w	r3, [r8, #89]	; 0x59
 800e4e0:	60e3      	str	r3, [r4, #12]
 800e4e2:	f898 3015 	ldrb.w	r3, [r8, #21]
 800e4e6:	2b00      	cmp	r3, #0
 800e4e8:	d15e      	bne.n	800e5a8 <Network::Init(NetworkParamsStore*)+0x134>
 800e4ea:	4632      	mov	r2, r6
 800e4ec:	4874      	ldr	r0, [pc, #464]	; (800e6c0 <Network::Init(NetworkParamsStore*)+0x24c>)
 800e4ee:	f810 1b01 	ldrb.w	r1, [r0], #1
 800e4f2:	f103 0c01 	add.w	ip, r3, #1
 800e4f6:	b119      	cbz	r1, 800e500 <Network::Init(NetworkParamsStore*)+0x8c>
 800e4f8:	4663      	mov	r3, ip
 800e4fa:	f802 1b01 	strb.w	r1, [r2], #1
 800e4fe:	e7f6      	b.n	800e4ee <Network::Init(NetworkParamsStore*)+0x7a>
 800e500:	f894 209f 	ldrb.w	r2, [r4, #159]	; 0x9f
 800e504:	18e1      	adds	r1, r4, r3
 800e506:	0910      	lsrs	r0, r2, #4
 800e508:	2a9f      	cmp	r2, #159	; 0x9f
 800e50a:	f002 020f 	and.w	r2, r2, #15
 800e50e:	bf94      	ite	ls
 800e510:	3030      	addls	r0, #48	; 0x30
 800e512:	3037      	addhi	r0, #55	; 0x37
 800e514:	2a09      	cmp	r2, #9
 800e516:	bf94      	ite	ls
 800e518:	3230      	addls	r2, #48	; 0x30
 800e51a:	3237      	addhi	r2, #55	; 0x37
 800e51c:	44a4      	add	ip, r4
 800e51e:	7708      	strb	r0, [r1, #28]
 800e520:	f88c 201c 	strb.w	r2, [ip, #28]
 800e524:	f894 20a0 	ldrb.w	r2, [r4, #160]	; 0xa0
 800e528:	f103 0e02 	add.w	lr, r3, #2
 800e52c:	0910      	lsrs	r0, r2, #4
 800e52e:	2a9f      	cmp	r2, #159	; 0x9f
 800e530:	f002 020f 	and.w	r2, r2, #15
 800e534:	bf94      	ite	ls
 800e536:	3030      	addls	r0, #48	; 0x30
 800e538:	3037      	addhi	r0, #55	; 0x37
 800e53a:	f103 0903 	add.w	r9, r3, #3
 800e53e:	2a09      	cmp	r2, #9
 800e540:	44a6      	add	lr, r4
 800e542:	f88e 001c 	strb.w	r0, [lr, #28]
 800e546:	bf94      	ite	ls
 800e548:	3230      	addls	r2, #48	; 0x30
 800e54a:	3237      	addhi	r2, #55	; 0x37
 800e54c:	eb04 0009 	add.w	r0, r4, r9
 800e550:	7702      	strb	r2, [r0, #28]
 800e552:	f894 20a1 	ldrb.w	r2, [r4, #161]	; 0xa1
 800e556:	f103 0c04 	add.w	ip, r3, #4
 800e55a:	0910      	lsrs	r0, r2, #4
 800e55c:	2a9f      	cmp	r2, #159	; 0x9f
 800e55e:	f002 020f 	and.w	r2, r2, #15
 800e562:	bf94      	ite	ls
 800e564:	3030      	addls	r0, #48	; 0x30
 800e566:	3037      	addhi	r0, #55	; 0x37
 800e568:	3305      	adds	r3, #5
 800e56a:	2a09      	cmp	r2, #9
 800e56c:	4423      	add	r3, r4
 800e56e:	44a4      	add	ip, r4
 800e570:	bf94      	ite	ls
 800e572:	3230      	addls	r2, #48	; 0x30
 800e574:	3237      	addhi	r2, #55	; 0x37
 800e576:	f88c 001c 	strb.w	r0, [ip, #28]
 800e57a:	771a      	strb	r2, [r3, #28]
 800e57c:	2300      	movs	r3, #0
 800e57e:	f881 3022 	strb.w	r3, [r1, #34]	; 0x22
 800e582:	7863      	ldrb	r3, [r4, #1]
 800e584:	b95b      	cbnz	r3, 800e59e <Network::Init(NetworkParamsStore*)+0x12a>
 800e586:	9b07      	ldr	r3, [sp, #28]
 800e588:	b9b3      	cbnz	r3, 800e5b8 <Network::Init(NetworkParamsStore*)+0x144>
 800e58a:	4620      	mov	r0, r4
 800e58c:	f7ff ff61 	bl	800e452 <Network::SetDefaultIp()>
 800e590:	6923      	ldr	r3, [r4, #16]
 800e592:	69a2      	ldr	r2, [r4, #24]
 800e594:	9307      	str	r3, [sp, #28]
 800e596:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800e59a:	7863      	ldrb	r3, [r4, #1]
 800e59c:	b19b      	cbz	r3, 800e5c6 <Network::Init(NetworkParamsStore*)+0x152>
 800e59e:	2101      	movs	r1, #1
 800e5a0:	4628      	mov	r0, r5
 800e5a2:	f001 fb61 	bl	800fc68 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 800e5a6:	e00e      	b.n	800e5c6 <Network::Init(NetworkParamsStore*)+0x152>
 800e5a8:	4630      	mov	r0, r6
 800e5aa:	4946      	ldr	r1, [pc, #280]	; (800e6c4 <Network::Init(NetworkParamsStore*)+0x250>)
 800e5ac:	f7ff fef8 	bl	800e3a0 <strncpy.constprop.0.isra.0>
 800e5b0:	2300      	movs	r3, #0
 800e5b2:	f884 305b 	strb.w	r3, [r4, #91]	; 0x5b
 800e5b6:	e7e4      	b.n	800e582 <Network::Init(NetworkParamsStore*)+0x10e>
 800e5b8:	69a1      	ldr	r1, [r4, #24]
 800e5ba:	e9d4 2304 	ldrd	r2, r3, [r4, #16]
 800e5be:	4053      	eors	r3, r2
 800e5c0:	420b      	tst	r3, r1
 800e5c2:	d000      	beq.n	800e5c6 <Network::Init(NetworkParamsStore*)+0x152>
 800e5c4:	9209      	str	r2, [sp, #36]	; 0x24
 800e5c6:	1ce3      	adds	r3, r4, #3
 800e5c8:	f104 0901 	add.w	r9, r4, #1
 800e5cc:	9302      	str	r3, [sp, #8]
 800e5ce:	9300      	str	r3, [sp, #0]
 800e5d0:	4632      	mov	r2, r6
 800e5d2:	464b      	mov	r3, r9
 800e5d4:	4638      	mov	r0, r7
 800e5d6:	a907      	add	r1, sp, #28
 800e5d8:	f7f8 fde6 	bl	80071a8 <net_init>
 800e5dc:	78e3      	ldrb	r3, [r4, #3]
 800e5de:	b11b      	cbz	r3, 800e5e8 <Network::Init(NetworkParamsStore*)+0x174>
 800e5e0:	2104      	movs	r1, #4
 800e5e2:	4628      	mov	r0, r5
 800e5e4:	f001 fb40 	bl	800fc68 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 800e5e8:	f898 3014 	ldrb.w	r3, [r8, #20]
 800e5ec:	f898 a05d 	ldrb.w	sl, [r8, #93]	; 0x5d
 800e5f0:	9304      	str	r3, [sp, #16]
 800e5f2:	233c      	movs	r3, #60	; 0x3c
 800e5f4:	fb03 f30a 	mul.w	r3, r3, sl
 800e5f8:	f8df 80cc 	ldr.w	r8, [pc, #204]	; 800e6c8 <Network::Init(NetworkParamsStore*)+0x254>
 800e5fc:	f8df b0cc 	ldr.w	fp, [pc, #204]	; 800e6cc <Network::Init(NetworkParamsStore*)+0x258>
 800e600:	9303      	str	r3, [sp, #12]
 800e602:	78e3      	ldrb	r3, [r4, #3]
 800e604:	b95b      	cbnz	r3, 800e61e <Network::Init(NetworkParamsStore*)+0x1aa>
 800e606:	9b07      	ldr	r3, [sp, #28]
 800e608:	4628      	mov	r0, r5
 800e60a:	6123      	str	r3, [r4, #16]
 800e60c:	9b08      	ldr	r3, [sp, #32]
 800e60e:	61a3      	str	r3, [r4, #24]
 800e610:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e612:	6163      	str	r3, [r4, #20]
 800e614:	f001 fb1c 	bl	800fc50 <NetworkDisplay::ShowIp()>
 800e618:	b00b      	add	sp, #44	; 0x2c
 800e61a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e61e:	f1ba 0f00 	cmp.w	sl, #0
 800e622:	d0f0      	beq.n	800e606 <Network::Init(NetworkParamsStore*)+0x192>
 800e624:	9b04      	ldr	r3, [sp, #16]
 800e626:	2b00      	cmp	r3, #0
 800e628:	d0ed      	beq.n	800e606 <Network::Init(NetworkParamsStore*)+0x192>
 800e62a:	2104      	movs	r1, #4
 800e62c:	f8d8 0000 	ldr.w	r0, [r8]
 800e630:	f002 f922 	bl	8010878 <LedBlink::SetMode(ledblink::Mode)>
 800e634:	2103      	movs	r1, #3
 800e636:	4628      	mov	r0, r5
 800e638:	f001 fb16 	bl	800fc68 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 800e63c:	2000      	movs	r0, #0
 800e63e:	f002 ff3b 	bl	80114b8 <time>
 800e642:	9005      	str	r0, [sp, #20]
 800e644:	2000      	movs	r0, #0
 800e646:	f002 ff37 	bl	80114b8 <time>
 800e64a:	9b05      	ldr	r3, [sp, #20]
 800e64c:	1ac0      	subs	r0, r0, r3
 800e64e:	9b03      	ldr	r3, [sp, #12]
 800e650:	4298      	cmp	r0, r3
 800e652:	da1a      	bge.n	800e68a <Network::Init(NetworkParamsStore*)+0x216>
 800e654:	f8d8 3000 	ldr.w	r3, [r8]
 800e658:	491d      	ldr	r1, [pc, #116]	; (800e6d0 <Network::Init(NetworkParamsStore*)+0x25c>)
 800e65a:	f8d3 c00c 	ldr.w	ip, [r3, #12]
 800e65e:	f1bc 0f00 	cmp.w	ip, #0
 800e662:	d0ef      	beq.n	800e644 <Network::Init(NetworkParamsStore*)+0x1d0>
 800e664:	6808      	ldr	r0, [r1, #0]
 800e666:	695a      	ldr	r2, [r3, #20]
 800e668:	1a80      	subs	r0, r0, r2
 800e66a:	4584      	cmp	ip, r0
 800e66c:	d8ea      	bhi.n	800e644 <Network::Init(NetworkParamsStore*)+0x1d0>
 800e66e:	6808      	ldr	r0, [r1, #0]
 800e670:	6158      	str	r0, [r3, #20]
 800e672:	6918      	ldr	r0, [r3, #16]
 800e674:	2801      	cmp	r0, #1
 800e676:	f080 0201 	eor.w	r2, r0, #1
 800e67a:	611a      	str	r2, [r3, #16]
 800e67c:	bf16      	itet	ne
 800e67e:	2301      	movne	r3, #1
 800e680:	f8cb 0014 	streq.w	r0, [fp, #20]
 800e684:	f8cb 3010 	strne.w	r3, [fp, #16]
 800e688:	e7dc      	b.n	800e644 <Network::Init(NetworkParamsStore*)+0x1d0>
 800e68a:	2101      	movs	r1, #1
 800e68c:	4628      	mov	r0, r5
 800e68e:	f001 faeb 	bl	800fc68 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 800e692:	2101      	movs	r1, #1
 800e694:	f8d8 0000 	ldr.w	r0, [r8]
 800e698:	f002 f8ee 	bl	8010878 <LedBlink::SetMode(ledblink::Mode)>
 800e69c:	2301      	movs	r3, #1
 800e69e:	7063      	strb	r3, [r4, #1]
 800e6a0:	2300      	movs	r3, #0
 800e6a2:	70e3      	strb	r3, [r4, #3]
 800e6a4:	9b02      	ldr	r3, [sp, #8]
 800e6a6:	4632      	mov	r2, r6
 800e6a8:	9300      	str	r3, [sp, #0]
 800e6aa:	4638      	mov	r0, r7
 800e6ac:	464b      	mov	r3, r9
 800e6ae:	a907      	add	r1, sp, #28
 800e6b0:	f7f8 fd7a 	bl	80071a8 <net_init>
 800e6b4:	7863      	ldrb	r3, [r4, #1]
 800e6b6:	2b00      	cmp	r3, #0
 800e6b8:	d0a3      	beq.n	800e602 <Network::Init(NetworkParamsStore*)+0x18e>
 800e6ba:	e7a4      	b.n	800e606 <Network::Init(NetworkParamsStore*)+0x192>
 800e6bc:	2000cb2c 	andcs	ip, r0, ip, lsr #22
 800e6c0:	08014b45 	stmdaeq	r1, {r0, r2, r6, r8, r9, fp, lr}
 800e6c4:	2000cb41 	andcs	ip, r0, r1, asr #22
 800e6c8:	2000d24c 	andcs	sp, r0, ip, asr #4
 800e6cc:	40011000 	andmi	r1, r1, r0
 800e6d0:	2000d26c 	andcs	sp, r0, ip, ror #4

0800e6d4 <Network::Print()>:
 800e6d4:	b530      	push	{r4, r5, lr}
 800e6d6:	4604      	mov	r4, r0
 800e6d8:	b085      	sub	sp, #20
 800e6da:	4832      	ldr	r0, [pc, #200]	; (800e7a4 <Network::Print()+0xd0>)
 800e6dc:	f002 fdb6 	bl	801124c <printf>
 800e6e0:	f104 011c 	add.w	r1, r4, #28
 800e6e4:	4830      	ldr	r0, [pc, #192]	; (800e7a8 <Network::Print()+0xd4>)
 800e6e6:	f002 fdb1 	bl	801124c <printf>
 800e6ea:	6861      	ldr	r1, [r4, #4]
 800e6ec:	f104 02a2 	add.w	r2, r4, #162	; 0xa2
 800e6f0:	482e      	ldr	r0, [pc, #184]	; (800e7ac <Network::Print()+0xd8>)
 800e6f2:	f002 fdab 	bl	801124c <printf>
 800e6f6:	69a0      	ldr	r0, [r4, #24]
 800e6f8:	f7f9 ff44 	bl	8008584 <__popcountsi2>
 800e6fc:	6925      	ldr	r5, [r4, #16]
 800e6fe:	9001      	str	r0, [sp, #4]
 800e700:	0e2b      	lsrs	r3, r5, #24
 800e702:	9300      	str	r3, [sp, #0]
 800e704:	f3c5 2207 	ubfx	r2, r5, #8, #8
 800e708:	f3c5 4307 	ubfx	r3, r5, #16, #8
 800e70c:	b2e9      	uxtb	r1, r5
 800e70e:	4828      	ldr	r0, [pc, #160]	; (800e7b0 <Network::Print()+0xdc>)
 800e710:	f002 fd9c 	bl	801124c <printf>
 800e714:	69a1      	ldr	r1, [r4, #24]
 800e716:	4827      	ldr	r0, [pc, #156]	; (800e7b4 <Network::Print()+0xe0>)
 800e718:	0e0b      	lsrs	r3, r1, #24
 800e71a:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800e71e:	9300      	str	r3, [sp, #0]
 800e720:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800e724:	b2c9      	uxtb	r1, r1
 800e726:	f002 fd91 	bl	801124c <printf>
 800e72a:	6961      	ldr	r1, [r4, #20]
 800e72c:	4822      	ldr	r0, [pc, #136]	; (800e7b8 <Network::Print()+0xe4>)
 800e72e:	0e0b      	lsrs	r3, r1, #24
 800e730:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800e734:	9300      	str	r3, [sp, #0]
 800e736:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800e73a:	b2c9      	uxtb	r1, r1
 800e73c:	f002 fd86 	bl	801124c <printf>
 800e740:	69a3      	ldr	r3, [r4, #24]
 800e742:	6921      	ldr	r1, [r4, #16]
 800e744:	481d      	ldr	r0, [pc, #116]	; (800e7bc <Network::Print()+0xe8>)
 800e746:	ea61 0103 	orn	r1, r1, r3
 800e74a:	0e0b      	lsrs	r3, r1, #24
 800e74c:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800e750:	9300      	str	r3, [sp, #0]
 800e752:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800e756:	b2c9      	uxtb	r1, r1
 800e758:	f002 fd78 	bl	801124c <printf>
 800e75c:	f894 30a1 	ldrb.w	r3, [r4, #161]	; 0xa1
 800e760:	f894 209d 	ldrb.w	r2, [r4, #157]	; 0x9d
 800e764:	9302      	str	r3, [sp, #8]
 800e766:	f894 30a0 	ldrb.w	r3, [r4, #160]	; 0xa0
 800e76a:	f894 109c 	ldrb.w	r1, [r4, #156]	; 0x9c
 800e76e:	9301      	str	r3, [sp, #4]
 800e770:	f894 309f 	ldrb.w	r3, [r4, #159]	; 0x9f
 800e774:	4812      	ldr	r0, [pc, #72]	; (800e7c0 <Network::Print()+0xec>)
 800e776:	9300      	str	r3, [sp, #0]
 800e778:	f894 309e 	ldrb.w	r3, [r4, #158]	; 0x9e
 800e77c:	f002 fd66 	bl	801124c <printf>
 800e780:	4b10      	ldr	r3, [pc, #64]	; (800e7c4 <Network::Print()+0xf0>)
 800e782:	681b      	ldr	r3, [r3, #0]
 800e784:	78da      	ldrb	r2, [r3, #3]
 800e786:	b952      	cbnz	r2, 800e79e <Network::Print()+0xca>
 800e788:	785b      	ldrb	r3, [r3, #1]
 800e78a:	2b00      	cmp	r3, #0
 800e78c:	bf14      	ite	ne
 800e78e:	2144      	movne	r1, #68	; 0x44
 800e790:	2153      	moveq	r1, #83	; 0x53
 800e792:	480d      	ldr	r0, [pc, #52]	; (800e7c8 <Network::Print()+0xf4>)
 800e794:	b005      	add	sp, #20
 800e796:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800e79a:	f002 bd57 	b.w	801124c <printf>
 800e79e:	215a      	movs	r1, #90	; 0x5a
 800e7a0:	e7f7      	b.n	800e792 <Network::Print()+0xbe>
 800e7a2:	bf00      	nop
 800e7a4:	08014b51 	stmdaeq	r1, {r0, r4, r6, r8, r9, fp, lr}
 800e7a8:	08014b5a 	stmdaeq	r1, {r1, r3, r4, r6, r8, r9, fp, lr}
 800e7ac:	08014b6b 	stmdaeq	r1, {r0, r1, r3, r5, r6, r8, r9, fp, lr}
 800e7b0:	08014b80 	stmdaeq	r1, {r7, r8, r9, fp, lr}
 800e7b4:	08014b9d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r8, r9, fp, lr}
 800e7b8:	08014bb7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r7, r8, r9, fp, lr}
 800e7bc:	08014bd1 	stmdaeq	r1, {r0, r4, r6, r7, r8, r9, fp, lr}
 800e7c0:	08014beb 	stmdaeq	r1, {r0, r1, r3, r5, r6, r7, r8, r9, fp, lr}
 800e7c4:	2000cb28 	andcs	ip, r0, r8, lsr #22
 800e7c8:	08014c17 	stmdaeq	r1, {r0, r1, r2, r4, sl, fp, lr}

0800e7cc <Network::TcpBegin(unsigned short)>:
 800e7cc:	4608      	mov	r0, r1
 800e7ce:	f7fe bff9 	b.w	800d7c4 <tcp_begin>

0800e7d2 <Network::TcpRead(int, unsigned char const**)>:
 800e7d2:	4608      	mov	r0, r1
 800e7d4:	4611      	mov	r1, r2
 800e7d6:	f7ff b833 	b.w	800d840 <tcp_read>

0800e7da <Network::TcpWrite(int, unsigned char const*, unsigned short)>:
 800e7da:	4608      	mov	r0, r1
 800e7dc:	4611      	mov	r1, r2
 800e7de:	461a      	mov	r2, r3
 800e7e0:	f7ff b80a 	b.w	800d7f8 <tcp_write>

0800e7e4 <NetworkParams::NetworkParams(NetworkParamsStore*)>:
 800e7e4:	4b06      	ldr	r3, [pc, #24]	; (800e800 <NetworkParams::NetworkParams(NetworkParamsStore*)+0x1c>)
 800e7e6:	b510      	push	{r4, lr}
 800e7e8:	225e      	movs	r2, #94	; 0x5e
 800e7ea:	4604      	mov	r4, r0
 800e7ec:	6001      	str	r1, [r0, #0]
 800e7ee:	2100      	movs	r1, #0
 800e7f0:	4618      	mov	r0, r3
 800e7f2:	f002 f9fb 	bl	8010bec <memset>
 800e7f6:	2201      	movs	r2, #1
 800e7f8:	7502      	strb	r2, [r0, #20]
 800e7fa:	4620      	mov	r0, r4
 800e7fc:	bd10      	pop	{r4, pc}
 800e7fe:	bf00      	nop
 800e800:	2000cb2c 	andcs	ip, r0, ip, lsr #22

0800e804 <NetworkParams::Load()>:
 800e804:	b508      	push	{r3, lr}
 800e806:	2300      	movs	r3, #0
 800e808:	4905      	ldr	r1, [pc, #20]	; (800e820 <NetworkParams::Load()+0x1c>)
 800e80a:	6800      	ldr	r0, [r0, #0]
 800e80c:	700b      	strb	r3, [r1, #0]
 800e80e:	704b      	strb	r3, [r1, #1]
 800e810:	708b      	strb	r3, [r1, #2]
 800e812:	70cb      	strb	r3, [r1, #3]
 800e814:	b118      	cbz	r0, 800e81e <NetworkParams::Load()+0x1a>
 800e816:	6803      	ldr	r3, [r0, #0]
 800e818:	68db      	ldr	r3, [r3, #12]
 800e81a:	4798      	blx	r3
 800e81c:	2001      	movs	r0, #1
 800e81e:	bd08      	pop	{r3, pc}
 800e820:	2000cb2c 	andcs	ip, r0, ip, lsr #22

0800e824 <NetworkParams::Load(char const*, unsigned int)>:
 800e824:	6803      	ldr	r3, [r0, #0]
 800e826:	b1eb      	cbz	r3, 800e864 <NetworkParams::Load(char const*, unsigned int)+0x40>
 800e828:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800e82a:	2300      	movs	r3, #0
 800e82c:	460e      	mov	r6, r1
 800e82e:	4617      	mov	r7, r2
 800e830:	4605      	mov	r5, r0
 800e832:	4c0d      	ldr	r4, [pc, #52]	; (800e868 <NetworkParams::Load(char const*, unsigned int)+0x44>)
 800e834:	4602      	mov	r2, r0
 800e836:	490d      	ldr	r1, [pc, #52]	; (800e86c <NetworkParams::Load(char const*, unsigned int)+0x48>)
 800e838:	4668      	mov	r0, sp
 800e83a:	7023      	strb	r3, [r4, #0]
 800e83c:	7063      	strb	r3, [r4, #1]
 800e83e:	70a3      	strb	r3, [r4, #2]
 800e840:	70e3      	strb	r3, [r4, #3]
 800e842:	f001 fb65 	bl	800ff10 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800e846:	463a      	mov	r2, r7
 800e848:	4631      	mov	r1, r6
 800e84a:	4668      	mov	r0, sp
 800e84c:	f001 fb64 	bl	800ff18 <ReadConfigFile::Read(char const*, unsigned int)>
 800e850:	6828      	ldr	r0, [r5, #0]
 800e852:	4621      	mov	r1, r4
 800e854:	6803      	ldr	r3, [r0, #0]
 800e856:	689b      	ldr	r3, [r3, #8]
 800e858:	4798      	blx	r3
 800e85a:	4668      	mov	r0, sp
 800e85c:	f001 fb5b 	bl	800ff16 <ReadConfigFile::~ReadConfigFile()>
 800e860:	b003      	add	sp, #12
 800e862:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e864:	4770      	bx	lr
 800e866:	bf00      	nop
 800e868:	2000cb2c 	andcs	ip, r0, ip, lsr #22
 800e86c:	0800ea0d 	stmdaeq	r0, {r0, r2, r3, r9, fp, sp, lr, pc}

0800e870 <NetworkParams::callbackFunction(char const*)>:
 800e870:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800e872:	460d      	mov	r5, r1
 800e874:	f10d 0203 	add.w	r2, sp, #3
 800e878:	4628      	mov	r0, r5
 800e87a:	495b      	ldr	r1, [pc, #364]	; (800e9e8 <NetworkParams::callbackFunction(char const*)+0x178>)
 800e87c:	f001 fc5a 	bl	8010134 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800e880:	b980      	cbnz	r0, 800e8a4 <NetworkParams::callbackFunction(char const*)+0x34>
 800e882:	495a      	ldr	r1, [pc, #360]	; (800e9ec <NetworkParams::callbackFunction(char const*)+0x17c>)
 800e884:	f89d 2003 	ldrb.w	r2, [sp, #3]
 800e888:	680b      	ldr	r3, [r1, #0]
 800e88a:	b142      	cbz	r2, 800e89e <NetworkParams::callbackFunction(char const*)+0x2e>
 800e88c:	f023 0301 	bic.w	r3, r3, #1
 800e890:	3a00      	subs	r2, #0
 800e892:	bf18      	it	ne
 800e894:	2201      	movne	r2, #1
 800e896:	600b      	str	r3, [r1, #0]
 800e898:	750a      	strb	r2, [r1, #20]
 800e89a:	b004      	add	sp, #16
 800e89c:	bd70      	pop	{r4, r5, r6, pc}
 800e89e:	f043 0301 	orr.w	r3, r3, #1
 800e8a2:	e7f5      	b.n	800e890 <NetworkParams::callbackFunction(char const*)+0x20>
 800e8a4:	4628      	mov	r0, r5
 800e8a6:	4952      	ldr	r1, [pc, #328]	; (800e9f0 <NetworkParams::callbackFunction(char const*)+0x180>)
 800e8a8:	f10d 0203 	add.w	r2, sp, #3
 800e8ac:	f001 fc42 	bl	8010134 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800e8b0:	b988      	cbnz	r0, 800e8d6 <NetworkParams::callbackFunction(char const*)+0x66>
 800e8b2:	4a4e      	ldr	r2, [pc, #312]	; (800e9ec <NetworkParams::callbackFunction(char const*)+0x17c>)
 800e8b4:	f89d 1003 	ldrb.w	r1, [sp, #3]
 800e8b8:	6813      	ldr	r3, [r2, #0]
 800e8ba:	1e4c      	subs	r4, r1, #1
 800e8bc:	2c04      	cmp	r4, #4
 800e8be:	bf97      	itett	ls
 800e8c0:	f443 7380 	orrls.w	r3, r3, #256	; 0x100
 800e8c4:	f423 7380 	bichi.w	r3, r3, #256	; 0x100
 800e8c8:	6013      	strls	r3, [r2, #0]
 800e8ca:	f882 105d 	strbls.w	r1, [r2, #93]	; 0x5d
 800e8ce:	bf84      	itt	hi
 800e8d0:	6013      	strhi	r3, [r2, #0]
 800e8d2:	f882 005d 	strbhi.w	r0, [r2, #93]	; 0x5d
 800e8d6:	4628      	mov	r0, r5
 800e8d8:	4946      	ldr	r1, [pc, #280]	; (800e9f4 <NetworkParams::callbackFunction(char const*)+0x184>)
 800e8da:	aa01      	add	r2, sp, #4
 800e8dc:	f001 fbcc 	bl	8010078 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 800e8e0:	b9d0      	cbnz	r0, 800e918 <NetworkParams::callbackFunction(char const*)+0xa8>
 800e8e2:	9b01      	ldr	r3, [sp, #4]
 800e8e4:	b2d9      	uxtb	r1, r3
 800e8e6:	29ac      	cmp	r1, #172	; 0xac
 800e8e8:	f3c3 2207 	ubfx	r2, r3, #8, #8
 800e8ec:	d00a      	beq.n	800e904 <NetworkParams::callbackFunction(char const*)+0x94>
 800e8ee:	29c0      	cmp	r1, #192	; 0xc0
 800e8f0:	d00c      	beq.n	800e90c <NetworkParams::callbackFunction(char const*)+0x9c>
 800e8f2:	290a      	cmp	r1, #10
 800e8f4:	d10d      	bne.n	800e912 <NetworkParams::callbackFunction(char const*)+0xa2>
 800e8f6:	4a3d      	ldr	r2, [pc, #244]	; (800e9ec <NetworkParams::callbackFunction(char const*)+0x17c>)
 800e8f8:	6053      	str	r3, [r2, #4]
 800e8fa:	6813      	ldr	r3, [r2, #0]
 800e8fc:	f043 0302 	orr.w	r3, r3, #2
 800e900:	6013      	str	r3, [r2, #0]
 800e902:	e7ca      	b.n	800e89a <NetworkParams::callbackFunction(char const*)+0x2a>
 800e904:	3a10      	subs	r2, #16
 800e906:	2a0f      	cmp	r2, #15
 800e908:	d8c7      	bhi.n	800e89a <NetworkParams::callbackFunction(char const*)+0x2a>
 800e90a:	e7f4      	b.n	800e8f6 <NetworkParams::callbackFunction(char const*)+0x86>
 800e90c:	2aa8      	cmp	r2, #168	; 0xa8
 800e90e:	d1c4      	bne.n	800e89a <NetworkParams::callbackFunction(char const*)+0x2a>
 800e910:	e7f1      	b.n	800e8f6 <NetworkParams::callbackFunction(char const*)+0x86>
 800e912:	2b00      	cmp	r3, #0
 800e914:	d0ef      	beq.n	800e8f6 <NetworkParams::callbackFunction(char const*)+0x86>
 800e916:	e7c0      	b.n	800e89a <NetworkParams::callbackFunction(char const*)+0x2a>
 800e918:	4628      	mov	r0, r5
 800e91a:	4937      	ldr	r1, [pc, #220]	; (800e9f8 <NetworkParams::callbackFunction(char const*)+0x188>)
 800e91c:	aa01      	add	r2, sp, #4
 800e91e:	f001 fbab 	bl	8010078 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 800e922:	b970      	cbnz	r0, 800e942 <NetworkParams::callbackFunction(char const*)+0xd2>
 800e924:	9a01      	ldr	r2, [sp, #4]
 800e926:	2a00      	cmp	r2, #0
 800e928:	d0b7      	beq.n	800e89a <NetworkParams::callbackFunction(char const*)+0x2a>
 800e92a:	ba13      	rev	r3, r2
 800e92c:	43d9      	mvns	r1, r3
 800e92e:	ea13 0351 	ands.w	r3, r3, r1, lsr #1
 800e932:	d1b2      	bne.n	800e89a <NetworkParams::callbackFunction(char const*)+0x2a>
 800e934:	4b2d      	ldr	r3, [pc, #180]	; (800e9ec <NetworkParams::callbackFunction(char const*)+0x17c>)
 800e936:	609a      	str	r2, [r3, #8]
 800e938:	681a      	ldr	r2, [r3, #0]
 800e93a:	f042 0204 	orr.w	r2, r2, #4
 800e93e:	601a      	str	r2, [r3, #0]
 800e940:	e7ab      	b.n	800e89a <NetworkParams::callbackFunction(char const*)+0x2a>
 800e942:	4628      	mov	r0, r5
 800e944:	492d      	ldr	r1, [pc, #180]	; (800e9fc <NetworkParams::callbackFunction(char const*)+0x18c>)
 800e946:	aa01      	add	r2, sp, #4
 800e948:	f001 fb96 	bl	8010078 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 800e94c:	4c27      	ldr	r4, [pc, #156]	; (800e9ec <NetworkParams::callbackFunction(char const*)+0x17c>)
 800e94e:	b930      	cbnz	r0, 800e95e <NetworkParams::callbackFunction(char const*)+0xee>
 800e950:	9b01      	ldr	r3, [sp, #4]
 800e952:	60e3      	str	r3, [r4, #12]
 800e954:	6823      	ldr	r3, [r4, #0]
 800e956:	f043 0308 	orr.w	r3, r3, #8
 800e95a:	6023      	str	r3, [r4, #0]
 800e95c:	e79d      	b.n	800e89a <NetworkParams::callbackFunction(char const*)+0x2a>
 800e95e:	233f      	movs	r3, #63	; 0x3f
 800e960:	4628      	mov	r0, r5
 800e962:	9302      	str	r3, [sp, #8]
 800e964:	4926      	ldr	r1, [pc, #152]	; (800ea00 <NetworkParams::callbackFunction(char const*)+0x190>)
 800e966:	ab02      	add	r3, sp, #8
 800e968:	f104 0215 	add.w	r2, r4, #21
 800e96c:	f001 fb08 	bl	800ff80 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800e970:	b930      	cbnz	r0, 800e980 <NetworkParams::callbackFunction(char const*)+0x110>
 800e972:	9b02      	ldr	r3, [sp, #8]
 800e974:	4423      	add	r3, r4
 800e976:	7558      	strb	r0, [r3, #21]
 800e978:	6823      	ldr	r3, [r4, #0]
 800e97a:	f043 0320 	orr.w	r3, r3, #32
 800e97e:	e7ec      	b.n	800e95a <NetworkParams::callbackFunction(char const*)+0xea>
 800e980:	4628      	mov	r0, r5
 800e982:	4920      	ldr	r1, [pc, #128]	; (800ea04 <NetworkParams::callbackFunction(char const*)+0x194>)
 800e984:	aa01      	add	r2, sp, #4
 800e986:	f001 fb77 	bl	8010078 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 800e98a:	b958      	cbnz	r0, 800e9a4 <NetworkParams::callbackFunction(char const*)+0x134>
 800e98c:	9a01      	ldr	r2, [sp, #4]
 800e98e:	6823      	ldr	r3, [r4, #0]
 800e990:	b12a      	cbz	r2, 800e99e <NetworkParams::callbackFunction(char const*)+0x12e>
 800e992:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800e996:	6023      	str	r3, [r4, #0]
 800e998:	f8c4 2055 	str.w	r2, [r4, #85]	; 0x55
 800e99c:	e77d      	b.n	800e89a <NetworkParams::callbackFunction(char const*)+0x2a>
 800e99e:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800e9a2:	e7f8      	b.n	800e996 <NetworkParams::callbackFunction(char const*)+0x126>
 800e9a4:	4628      	mov	r0, r5
 800e9a6:	4918      	ldr	r1, [pc, #96]	; (800ea08 <NetworkParams::callbackFunction(char const*)+0x198>)
 800e9a8:	aa03      	add	r2, sp, #12
 800e9aa:	f001 fb02 	bl	800ffb2 <Sscan::Float(char const*, char const*, float&)>
 800e9ae:	2800      	cmp	r0, #0
 800e9b0:	f47f af73 	bne.w	800e89a <NetworkParams::callbackFunction(char const*)+0x2a>
 800e9b4:	9e03      	ldr	r6, [sp, #12]
 800e9b6:	6825      	ldr	r5, [r4, #0]
 800e9b8:	4630      	mov	r0, r6
 800e9ba:	f7f9 fda5 	bl	8008508 <__aeabi_f2iz>
 800e9be:	300c      	adds	r0, #12
 800e9c0:	281a      	cmp	r0, #26
 800e9c2:	d80a      	bhi.n	800e9da <NetworkParams::callbackFunction(char const*)+0x16a>
 800e9c4:	2100      	movs	r1, #0
 800e9c6:	4630      	mov	r0, r6
 800e9c8:	f7f9 fd6c 	bl	80084a4 <__aeabi_fcmpeq>
 800e9cc:	b928      	cbnz	r0, 800e9da <NetworkParams::callbackFunction(char const*)+0x16a>
 800e9ce:	f8c4 6059 	str.w	r6, [r4, #89]	; 0x59
 800e9d2:	f045 0580 	orr.w	r5, r5, #128	; 0x80
 800e9d6:	6025      	str	r5, [r4, #0]
 800e9d8:	e75f      	b.n	800e89a <NetworkParams::callbackFunction(char const*)+0x2a>
 800e9da:	2300      	movs	r3, #0
 800e9dc:	f025 0580 	bic.w	r5, r5, #128	; 0x80
 800e9e0:	f8c4 3059 	str.w	r3, [r4, #89]	; 0x59
 800e9e4:	e7f7      	b.n	800e9d6 <NetworkParams::callbackFunction(char const*)+0x166>
 800e9e6:	bf00      	nop
 800e9e8:	08014ca9 	stmdaeq	r1, {r0, r3, r5, r7, sl, fp, lr}
 800e9ec:	2000cb2c 	andcs	ip, r0, ip, lsr #22
 800e9f0:	08014c87 	stmdaeq	r1, {r0, r1, r2, r7, sl, fp, lr}
 800e9f4:	08014c52 	stmdaeq	r1, {r1, r4, r6, sl, fp, lr}
 800e9f8:	08014ca0 	stmdaeq	r1, {r5, r7, sl, fp, lr}
 800e9fc:	08014c77 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, sl, fp, lr}
 800ea00:	08014c97 	stmdaeq	r1, {r0, r1, r2, r4, r7, sl, fp, lr}
 800ea04:	08014c5d 	stmdaeq	r1, {r0, r2, r3, r4, r6, sl, fp, lr}
 800ea08:	08014c68 	stmdaeq	r1, {r3, r5, r6, sl, fp, lr}

0800ea0c <NetworkParams::staticCallbackFunction(void*, char const*)>:
 800ea0c:	f7ff bf30 	b.w	800e870 <NetworkParams::callbackFunction(char const*)>

0800ea10 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)>:
 800ea10:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ea12:	4614      	mov	r4, r2
 800ea14:	461d      	mov	r5, r3
 800ea16:	b089      	sub	sp, #36	; 0x24
 800ea18:	2900      	cmp	r1, #0
 800ea1a:	d040      	beq.n	800ea9e <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x8e>
 800ea1c:	225e      	movs	r2, #94	; 0x5e
 800ea1e:	4891      	ldr	r0, [pc, #580]	; (800ec64 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x254>)
 800ea20:	f002 f8cd 	bl	8010bbe <memmove>
 800ea24:	4622      	mov	r2, r4
 800ea26:	462b      	mov	r3, r5
 800ea28:	498f      	ldr	r1, [pc, #572]	; (800ec68 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x258>)
 800ea2a:	a805      	add	r0, sp, #20
 800ea2c:	f001 f9d0 	bl	800fdd0 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800ea30:	4c8c      	ldr	r4, [pc, #560]	; (800ec64 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x254>)
 800ea32:	6823      	ldr	r3, [r4, #0]
 800ea34:	0798      	lsls	r0, r3, #30
 800ea36:	bf5f      	itttt	pl
 800ea38:	4a8c      	ldrpl	r2, [pc, #560]	; (800ec6c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x25c>)
 800ea3a:	6812      	ldrpl	r2, [r2, #0]
 800ea3c:	6912      	ldrpl	r2, [r2, #16]
 800ea3e:	6062      	strpl	r2, [r4, #4]
 800ea40:	0759      	lsls	r1, r3, #29
 800ea42:	bf5f      	itttt	pl
 800ea44:	4a89      	ldrpl	r2, [pc, #548]	; (800ec6c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x25c>)
 800ea46:	6812      	ldrpl	r2, [r2, #0]
 800ea48:	6992      	ldrpl	r2, [r2, #24]
 800ea4a:	60a2      	strpl	r2, [r4, #8]
 800ea4c:	071a      	lsls	r2, r3, #28
 800ea4e:	bf5f      	itttt	pl
 800ea50:	4a86      	ldrpl	r2, [pc, #536]	; (800ec6c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x25c>)
 800ea52:	6812      	ldrpl	r2, [r2, #0]
 800ea54:	6952      	ldrpl	r2, [r2, #20]
 800ea56:	60e2      	strpl	r2, [r4, #12]
 800ea58:	069f      	lsls	r7, r3, #26
 800ea5a:	d40c      	bmi.n	800ea76 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x66>
 800ea5c:	223f      	movs	r2, #63	; 0x3f
 800ea5e:	4b83      	ldr	r3, [pc, #524]	; (800ec6c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x25c>)
 800ea60:	4883      	ldr	r0, [pc, #524]	; (800ec70 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x260>)
 800ea62:	681b      	ldr	r3, [r3, #0]
 800ea64:	331b      	adds	r3, #27
 800ea66:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800ea6a:	b9f1      	cbnz	r1, 800eaaa <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x9a>
 800ea6c:	f002 f8be 	bl	8010bec <memset>
 800ea70:	2300      	movs	r3, #0
 800ea72:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 800ea76:	f8bd 101a 	ldrh.w	r1, [sp, #26]
 800ea7a:	f8bd 5018 	ldrh.w	r5, [sp, #24]
 800ea7e:	42a9      	cmp	r1, r5
 800ea80:	d226      	bcs.n	800ead0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xc0>
 800ea82:	9805      	ldr	r0, [sp, #20]
 800ea84:	1a6d      	subs	r5, r5, r1
 800ea86:	4408      	add	r0, r1
 800ea88:	6821      	ldr	r1, [r4, #0]
 800ea8a:	f89d 201c 	ldrb.w	r2, [sp, #28]
 800ea8e:	07ce      	lsls	r6, r1, #31
 800ea90:	7d23      	ldrb	r3, [r4, #20]
 800ea92:	d40f      	bmi.n	800eab4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xa4>
 800ea94:	b97a      	cbnz	r2, 800eab6 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xa6>
 800ea96:	9300      	str	r3, [sp, #0]
 800ea98:	4a76      	ldr	r2, [pc, #472]	; (800ec74 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x264>)
 800ea9a:	4b77      	ldr	r3, [pc, #476]	; (800ec78 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x268>)
 800ea9c:	e00e      	b.n	800eabc <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xac>
 800ea9e:	6800      	ldr	r0, [r0, #0]
 800eaa0:	4970      	ldr	r1, [pc, #448]	; (800ec64 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x254>)
 800eaa2:	6803      	ldr	r3, [r0, #0]
 800eaa4:	68db      	ldr	r3, [r3, #12]
 800eaa6:	4798      	blx	r3
 800eaa8:	e7bc      	b.n	800ea24 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x14>
 800eaaa:	3a01      	subs	r2, #1
 800eaac:	f800 1b01 	strb.w	r1, [r0], #1
 800eab0:	d1d9      	bne.n	800ea66 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x56>
 800eab2:	e7dd      	b.n	800ea70 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x60>
 800eab4:	b30a      	cbz	r2, 800eafa <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xea>
 800eab6:	9300      	str	r3, [sp, #0]
 800eab8:	4a70      	ldr	r2, [pc, #448]	; (800ec7c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x26c>)
 800eaba:	4b6f      	ldr	r3, [pc, #444]	; (800ec78 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x268>)
 800eabc:	4629      	mov	r1, r5
 800eabe:	f002 fbed 	bl	801129c <snprintf>
 800eac2:	4285      	cmp	r5, r0
 800eac4:	bfa2      	ittt	ge
 800eac6:	f8bd 301a 	ldrhge.w	r3, [sp, #26]
 800eaca:	18c0      	addge	r0, r0, r3
 800eacc:	f8ad 001a 	strhge.w	r0, [sp, #26]
 800ead0:	f8bd 101a 	ldrh.w	r1, [sp, #26]
 800ead4:	f8bd 5018 	ldrh.w	r5, [sp, #24]
 800ead8:	42a9      	cmp	r1, r5
 800eada:	d221      	bcs.n	800eb20 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x110>
 800eadc:	9805      	ldr	r0, [sp, #20]
 800eade:	1a6d      	subs	r5, r5, r1
 800eae0:	4408      	add	r0, r1
 800eae2:	6821      	ldr	r1, [r4, #0]
 800eae4:	f89d 201c 	ldrb.w	r2, [sp, #28]
 800eae8:	05c9      	lsls	r1, r1, #23
 800eaea:	f894 305d 	ldrb.w	r3, [r4, #93]	; 0x5d
 800eaee:	d408      	bmi.n	800eb02 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xf2>
 800eaf0:	b94a      	cbnz	r2, 800eb06 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xf6>
 800eaf2:	9300      	str	r3, [sp, #0]
 800eaf4:	4a5f      	ldr	r2, [pc, #380]	; (800ec74 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x264>)
 800eaf6:	4b62      	ldr	r3, [pc, #392]	; (800ec80 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x270>)
 800eaf8:	e008      	b.n	800eb0c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xfc>
 800eafa:	9300      	str	r3, [sp, #0]
 800eafc:	4a61      	ldr	r2, [pc, #388]	; (800ec84 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x274>)
 800eafe:	4b5e      	ldr	r3, [pc, #376]	; (800ec78 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x268>)
 800eb00:	e7dc      	b.n	800eabc <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xac>
 800eb02:	2a00      	cmp	r2, #0
 800eb04:	d03e      	beq.n	800eb84 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x174>
 800eb06:	9300      	str	r3, [sp, #0]
 800eb08:	4a5c      	ldr	r2, [pc, #368]	; (800ec7c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x26c>)
 800eb0a:	4b5d      	ldr	r3, [pc, #372]	; (800ec80 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x270>)
 800eb0c:	4629      	mov	r1, r5
 800eb0e:	f002 fbc5 	bl	801129c <snprintf>
 800eb12:	4285      	cmp	r5, r0
 800eb14:	bfa2      	ittt	ge
 800eb16:	f8bd 301a 	ldrhge.w	r3, [sp, #26]
 800eb1a:	18c0      	addge	r0, r0, r3
 800eb1c:	f8ad 001a 	strhge.w	r0, [sp, #26]
 800eb20:	4959      	ldr	r1, [pc, #356]	; (800ec88 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x278>)
 800eb22:	a805      	add	r0, sp, #20
 800eb24:	f001 f9da 	bl	800fedc <PropertiesBuilder::AddComment(char const*)>
 800eb28:	6823      	ldr	r3, [r4, #0]
 800eb2a:	6862      	ldr	r2, [r4, #4]
 800eb2c:	4957      	ldr	r1, [pc, #348]	; (800ec8c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x27c>)
 800eb2e:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800eb32:	a805      	add	r0, sp, #20
 800eb34:	f001 f98e 	bl	800fe54 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 800eb38:	6823      	ldr	r3, [r4, #0]
 800eb3a:	68a2      	ldr	r2, [r4, #8]
 800eb3c:	4954      	ldr	r1, [pc, #336]	; (800ec90 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x280>)
 800eb3e:	f3c3 0380 	ubfx	r3, r3, #2, #1
 800eb42:	a805      	add	r0, sp, #20
 800eb44:	f001 f986 	bl	800fe54 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 800eb48:	6823      	ldr	r3, [r4, #0]
 800eb4a:	4952      	ldr	r1, [pc, #328]	; (800ec94 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x284>)
 800eb4c:	68e2      	ldr	r2, [r4, #12]
 800eb4e:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 800eb52:	a805      	add	r0, sp, #20
 800eb54:	f001 f97e 	bl	800fe54 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 800eb58:	f8bd 101a 	ldrh.w	r1, [sp, #26]
 800eb5c:	f8bd 5018 	ldrh.w	r5, [sp, #24]
 800eb60:	42a9      	cmp	r1, r5
 800eb62:	d222      	bcs.n	800ebaa <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x19a>
 800eb64:	6823      	ldr	r3, [r4, #0]
 800eb66:	9805      	ldr	r0, [sp, #20]
 800eb68:	f013 0f20 	tst.w	r3, #32
 800eb6c:	f89d 201c 	ldrb.w	r2, [sp, #28]
 800eb70:	4b3f      	ldr	r3, [pc, #252]	; (800ec70 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x260>)
 800eb72:	4408      	add	r0, r1
 800eb74:	eba5 0501 	sub.w	r5, r5, r1
 800eb78:	d108      	bne.n	800eb8c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x17c>
 800eb7a:	b94a      	cbnz	r2, 800eb90 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x180>
 800eb7c:	9300      	str	r3, [sp, #0]
 800eb7e:	4a46      	ldr	r2, [pc, #280]	; (800ec98 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x288>)
 800eb80:	4b46      	ldr	r3, [pc, #280]	; (800ec9c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x28c>)
 800eb82:	e008      	b.n	800eb96 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x186>
 800eb84:	9300      	str	r3, [sp, #0]
 800eb86:	4a3f      	ldr	r2, [pc, #252]	; (800ec84 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x274>)
 800eb88:	4b3d      	ldr	r3, [pc, #244]	; (800ec80 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x270>)
 800eb8a:	e7bf      	b.n	800eb0c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xfc>
 800eb8c:	2a00      	cmp	r2, #0
 800eb8e:	d035      	beq.n	800ebfc <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1ec>
 800eb90:	9300      	str	r3, [sp, #0]
 800eb92:	4a43      	ldr	r2, [pc, #268]	; (800eca0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x290>)
 800eb94:	4b41      	ldr	r3, [pc, #260]	; (800ec9c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x28c>)
 800eb96:	4629      	mov	r1, r5
 800eb98:	f002 fb80 	bl	801129c <snprintf>
 800eb9c:	4285      	cmp	r5, r0
 800eb9e:	bfa2      	ittt	ge
 800eba0:	f8bd 301a 	ldrhge.w	r3, [sp, #26]
 800eba4:	18c0      	addge	r0, r0, r3
 800eba6:	f8ad 001a 	strhge.w	r0, [sp, #26]
 800ebaa:	493e      	ldr	r1, [pc, #248]	; (800eca4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x294>)
 800ebac:	a805      	add	r0, sp, #20
 800ebae:	f001 f995 	bl	800fedc <PropertiesBuilder::AddComment(char const*)>
 800ebb2:	6823      	ldr	r3, [r4, #0]
 800ebb4:	f8d4 2055 	ldr.w	r2, [r4, #85]	; 0x55
 800ebb8:	f3c3 1380 	ubfx	r3, r3, #6, #1
 800ebbc:	493a      	ldr	r1, [pc, #232]	; (800eca8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x298>)
 800ebbe:	a805      	add	r0, sp, #20
 800ebc0:	f001 f948 	bl	800fe54 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 800ebc4:	f8bd 301a 	ldrh.w	r3, [sp, #26]
 800ebc8:	f8bd 5018 	ldrh.w	r5, [sp, #24]
 800ebcc:	42ab      	cmp	r3, r5
 800ebce:	d22a      	bcs.n	800ec26 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x216>
 800ebd0:	9f05      	ldr	r7, [sp, #20]
 800ebd2:	f8d4 0059 	ldr.w	r0, [r4, #89]	; 0x59
 800ebd6:	441f      	add	r7, r3
 800ebd8:	1aed      	subs	r5, r5, r3
 800ebda:	f7f9 f919 	bl	8007e10 <__aeabi_f2d>
 800ebde:	6823      	ldr	r3, [r4, #0]
 800ebe0:	f89d 601c 	ldrb.w	r6, [sp, #28]
 800ebe4:	f013 0f80 	tst.w	r3, #128	; 0x80
 800ebe8:	f04f 0301 	mov.w	r3, #1
 800ebec:	d10a      	bne.n	800ec04 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f4>
 800ebee:	b956      	cbnz	r6, 800ec06 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f6>
 800ebf0:	9300      	str	r3, [sp, #0]
 800ebf2:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800ebf6:	4b2d      	ldr	r3, [pc, #180]	; (800ecac <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x29c>)
 800ebf8:	4a2d      	ldr	r2, [pc, #180]	; (800ecb0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x2a0>)
 800ebfa:	e009      	b.n	800ec10 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x200>
 800ebfc:	9300      	str	r3, [sp, #0]
 800ebfe:	4a2d      	ldr	r2, [pc, #180]	; (800ecb4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x2a4>)
 800ec00:	4b26      	ldr	r3, [pc, #152]	; (800ec9c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x28c>)
 800ec02:	e7c8      	b.n	800eb96 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x186>
 800ec04:	b346      	cbz	r6, 800ec58 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x248>
 800ec06:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800ec0a:	9300      	str	r3, [sp, #0]
 800ec0c:	4a2a      	ldr	r2, [pc, #168]	; (800ecb8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x2a8>)
 800ec0e:	4b27      	ldr	r3, [pc, #156]	; (800ecac <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x29c>)
 800ec10:	4629      	mov	r1, r5
 800ec12:	4638      	mov	r0, r7
 800ec14:	f002 fb42 	bl	801129c <snprintf>
 800ec18:	4285      	cmp	r5, r0
 800ec1a:	bfa2      	ittt	ge
 800ec1c:	f8bd 301a 	ldrhge.w	r3, [sp, #26]
 800ec20:	18c0      	addge	r0, r0, r3
 800ec22:	f8ad 001a 	strhge.w	r0, [sp, #26]
 800ec26:	f89d 301c 	ldrb.w	r3, [sp, #28]
 800ec2a:	b17b      	cbz	r3, 800ec4c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x23c>
 800ec2c:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800ec30:	9b05      	ldr	r3, [sp, #20]
 800ec32:	4413      	add	r3, r2
 800ec34:	227d      	movs	r2, #125	; 0x7d
 800ec36:	f803 2c01 	strb.w	r2, [r3, #-1]
 800ec3a:	f8bd 301a 	ldrh.w	r3, [sp, #26]
 800ec3e:	9905      	ldr	r1, [sp, #20]
 800ec40:	54ca      	strb	r2, [r1, r3]
 800ec42:	f8bd 301a 	ldrh.w	r3, [sp, #26]
 800ec46:	3301      	adds	r3, #1
 800ec48:	f8ad 301a 	strh.w	r3, [sp, #26]
 800ec4c:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800ec50:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800ec52:	601a      	str	r2, [r3, #0]
 800ec54:	b009      	add	sp, #36	; 0x24
 800ec56:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ec58:	9300      	str	r3, [sp, #0]
 800ec5a:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800ec5e:	4b13      	ldr	r3, [pc, #76]	; (800ecac <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x29c>)
 800ec60:	4a16      	ldr	r2, [pc, #88]	; (800ecbc <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x2ac>)
 800ec62:	e7d5      	b.n	800ec10 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x200>
 800ec64:	2000cb2c 	andcs	ip, r0, ip, lsr #22
 800ec68:	08014cb2 	stmdaeq	r1, {r1, r4, r5, r7, sl, fp, lr}
 800ec6c:	2000cb28 	andcs	ip, r0, r8, lsr #22
 800ec70:	2000cb41 	andcs	ip, r0, r1, asr #22
 800ec74:	0801383d 	stmdaeq	r1, {r0, r2, r3, r4, r5, fp, ip, sp}
 800ec78:	08014ca9 	stmdaeq	r1, {r0, r3, r5, r7, sl, fp, lr}
 800ec7c:	08013834 	stmdaeq	r1, {r2, r4, r5, fp, ip, sp}
 800ec80:	08014c87 	stmdaeq	r1, {r0, r1, r2, r7, sl, fp, lr}
 800ec84:	0801383e 	stmdaeq	r1, {r1, r2, r3, r4, r5, fp, ip, sp}
 800ec88:	08014c28 	stmdaeq	r1, {r3, r5, sl, fp, lr}
 800ec8c:	08014c52 	stmdaeq	r1, {r1, r4, r6, sl, fp, lr}
 800ec90:	08014ca0 	stmdaeq	r1, {r5, r7, sl, fp, lr}
 800ec94:	08014c77 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, sl, fp, lr}
 800ec98:	08013850 	stmdaeq	r1, {r4, r6, fp, ip, sp}
 800ec9c:	08014c97 	stmdaeq	r1, {r0, r1, r2, r4, r7, sl, fp, lr}
 800eca0:	08013845 	stmdaeq	r1, {r0, r2, r6, fp, ip, sp}
 800eca4:	08014c32 	stmdaeq	r1, {r1, r4, r5, sl, fp, lr}
 800eca8:	08014c5d 	stmdaeq	r1, {r0, r2, r3, r4, r6, sl, fp, lr}
 800ecac:	08014c68 	stmdaeq	r1, {r3, r5, r6, sl, fp, lr}
 800ecb0:	08014c48 	stmdaeq	r1, {r3, r6, sl, fp, lr}
 800ecb4:	08013851 	stmdaeq	r1, {r0, r4, r6, fp, ip, sp}
 800ecb8:	08014c3d 	stmdaeq	r1, {r0, r2, r3, r4, r5, sl, fp, lr}
 800ecbc:	08014c49 	stmdaeq	r1, {r0, r3, r6, sl, fp, lr}

0800ecc0 <NetworkParams::Save(char*, unsigned int, unsigned int&)>:
 800ecc0:	b513      	push	{r0, r1, r4, lr}
 800ecc2:	6804      	ldr	r4, [r0, #0]
 800ecc4:	b914      	cbnz	r4, 800eccc <NetworkParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800ecc6:	601c      	str	r4, [r3, #0]
 800ecc8:	b002      	add	sp, #8
 800ecca:	bd10      	pop	{r4, pc}
 800eccc:	9300      	str	r3, [sp, #0]
 800ecce:	4613      	mov	r3, r2
 800ecd0:	460a      	mov	r2, r1
 800ecd2:	2100      	movs	r1, #0
 800ecd4:	f7ff fe9c 	bl	800ea10 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)>
 800ecd8:	e7f6      	b.n	800ecc8 <NetworkParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800ecda <NetworkParams::Dump()>:
 800ecda:	4770      	bx	lr

0800ecdc <memcpy.isra.0>:
 800ecdc:	3801      	subs	r0, #1
 800ecde:	440a      	add	r2, r1
 800ece0:	4291      	cmp	r1, r2
 800ece2:	d100      	bne.n	800ece6 <memcpy.isra.0+0xa>
 800ece4:	4770      	bx	lr
 800ece6:	f811 3b01 	ldrb.w	r3, [r1], #1
 800ecea:	f800 3f01 	strb.w	r3, [r0, #1]!
 800ecee:	e7f7      	b.n	800ece0 <memcpy.isra.0+0x4>

0800ecf0 <arp_announce>:
 800ecf0:	4803      	ldr	r0, [pc, #12]	; (800ed00 <arp_announce+0x10>)
 800ecf2:	69c3      	ldr	r3, [r0, #28]
 800ecf4:	b113      	cbz	r3, 800ecfc <arp_announce+0xc>
 800ecf6:	212a      	movs	r1, #42	; 0x2a
 800ecf8:	f003 bb32 	b.w	8012360 <emac_eth_send>
 800ecfc:	4770      	bx	lr
 800ecfe:	bf00      	nop
 800ed00:	2000cb8c 	andcs	ip, r0, ip, lsl #23

0800ed04 <arp_handle_request>:
 800ed04:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ed06:	2204      	movs	r2, #4
 800ed08:	f100 0126 	add.w	r1, r0, #38	; 0x26
 800ed0c:	4604      	mov	r4, r0
 800ed0e:	eb0d 0002 	add.w	r0, sp, r2
 800ed12:	f7ff ffe3 	bl	800ecdc <memcpy.isra.0>
 800ed16:	4b0d      	ldr	r3, [pc, #52]	; (800ed4c <arp_handle_request+0x48>)
 800ed18:	9a01      	ldr	r2, [sp, #4]
 800ed1a:	69db      	ldr	r3, [r3, #28]
 800ed1c:	429a      	cmp	r2, r3
 800ed1e:	d113      	bne.n	800ed48 <arp_handle_request+0x44>
 800ed20:	2206      	movs	r2, #6
 800ed22:	4d0b      	ldr	r5, [pc, #44]	; (800ed50 <arp_handle_request+0x4c>)
 800ed24:	18a1      	adds	r1, r4, r2
 800ed26:	4628      	mov	r0, r5
 800ed28:	f7ff ffd8 	bl	800ecdc <memcpy.isra.0>
 800ed2c:	f104 0116 	add.w	r1, r4, #22
 800ed30:	f105 0020 	add.w	r0, r5, #32
 800ed34:	2206      	movs	r2, #6
 800ed36:	f7ff ffd1 	bl	800ecdc <memcpy.isra.0>
 800ed3a:	69e3      	ldr	r3, [r4, #28]
 800ed3c:	212a      	movs	r1, #42	; 0x2a
 800ed3e:	4628      	mov	r0, r5
 800ed40:	f8c5 3026 	str.w	r3, [r5, #38]	; 0x26
 800ed44:	f003 fb0c 	bl	8012360 <emac_eth_send>
 800ed48:	b003      	add	sp, #12
 800ed4a:	bd30      	pop	{r4, r5, pc}
 800ed4c:	2000cb8c 	andcs	ip, r0, ip, lsl #23
 800ed50:	2000cbb8 			; <UNDEFINED> instruction: 0x2000cbb8

0800ed54 <arp_handle_reply>:
 800ed54:	69c1      	ldr	r1, [r0, #28]
 800ed56:	3016      	adds	r0, #22
 800ed58:	f000 b80a 	b.w	800ed70 <arp_cache_update>

0800ed5c <arp_send_request>:
 800ed5c:	4b03      	ldr	r3, [pc, #12]	; (800ed6c <arp_send_request+0x10>)
 800ed5e:	212a      	movs	r1, #42	; 0x2a
 800ed60:	f8c3 0026 	str.w	r0, [r3, #38]	; 0x26
 800ed64:	4618      	mov	r0, r3
 800ed66:	f003 bafb 	b.w	8012360 <emac_eth_send>
 800ed6a:	bf00      	nop
 800ed6c:	2000cbe4 	andcs	ip, r0, r4, ror #23

0800ed70 <arp_cache_update>:
 800ed70:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ed72:	4e11      	ldr	r6, [pc, #68]	; (800edb8 <arp_cache_update+0x48>)
 800ed74:	8833      	ldrh	r3, [r6, #0]
 800ed76:	2b20      	cmp	r3, #32
 800ed78:	d018      	beq.n	800edac <arp_cache_update+0x3c>
 800ed7a:	2400      	movs	r4, #0
 800ed7c:	220c      	movs	r2, #12
 800ed7e:	4d0f      	ldr	r5, [pc, #60]	; (800edbc <arp_cache_update+0x4c>)
 800ed80:	b2a7      	uxth	r7, r4
 800ed82:	42bb      	cmp	r3, r7
 800ed84:	d80b      	bhi.n	800ed9e <arp_cache_update+0x2e>
 800ed86:	fb02 5203 	mla	r2, r2, r3, r5
 800ed8a:	1d84      	adds	r4, r0, #6
 800ed8c:	3203      	adds	r2, #3
 800ed8e:	42a0      	cmp	r0, r4
 800ed90:	d10d      	bne.n	800edae <arp_cache_update+0x3e>
 800ed92:	220c      	movs	r2, #12
 800ed94:	435a      	muls	r2, r3
 800ed96:	3301      	adds	r3, #1
 800ed98:	50a9      	str	r1, [r5, r2]
 800ed9a:	8033      	strh	r3, [r6, #0]
 800ed9c:	e006      	b.n	800edac <arp_cache_update+0x3c>
 800ed9e:	3401      	adds	r4, #1
 800eda0:	fb02 5704 	mla	r7, r2, r4, r5
 800eda4:	f857 7c0c 	ldr.w	r7, [r7, #-12]
 800eda8:	428f      	cmp	r7, r1
 800edaa:	d1e9      	bne.n	800ed80 <arp_cache_update+0x10>
 800edac:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800edae:	f810 7b01 	ldrb.w	r7, [r0], #1
 800edb2:	f802 7f01 	strb.w	r7, [r2, #1]!
 800edb6:	e7ea      	b.n	800ed8e <arp_cache_update+0x1e>
 800edb8:	2000cd90 	mulcs	r0, r0, sp
 800edbc:	2000cc10 	andcs	ip, r0, r0, lsl ip

0800edc0 <arp_cache_lookup>:
 800edc0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800edc4:	2200      	movs	r2, #0
 800edc6:	4606      	mov	r6, r0
 800edc8:	460c      	mov	r4, r1
 800edca:	200c      	movs	r0, #12
 800edcc:	f8df 8084 	ldr.w	r8, [pc, #132]	; 800ee54 <arp_cache_lookup+0x94>
 800edd0:	fb00 f302 	mul.w	r3, r0, r2
 800edd4:	f853 1008 	ldr.w	r1, [r3, r8]
 800edd8:	42b1      	cmp	r1, r6
 800edda:	d10d      	bne.n	800edf8 <arp_cache_lookup+0x38>
 800eddc:	3304      	adds	r3, #4
 800edde:	4443      	add	r3, r8
 800ede0:	3c01      	subs	r4, #1
 800ede2:	1d9a      	adds	r2, r3, #6
 800ede4:	4293      	cmp	r3, r2
 800ede6:	d102      	bne.n	800edee <arp_cache_lookup+0x2e>
 800ede8:	4630      	mov	r0, r6
 800edea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800edee:	f813 1b01 	ldrb.w	r1, [r3], #1
 800edf2:	f804 1f01 	strb.w	r1, [r4, #1]!
 800edf6:	e7f5      	b.n	800ede4 <arp_cache_lookup+0x24>
 800edf8:	b111      	cbz	r1, 800ee00 <arp_cache_lookup+0x40>
 800edfa:	3201      	adds	r2, #1
 800edfc:	2a20      	cmp	r2, #32
 800edfe:	d1e7      	bne.n	800edd0 <arp_cache_lookup+0x10>
 800ee00:	2704      	movs	r7, #4
 800ee02:	f8df a054 	ldr.w	sl, [pc, #84]	; 800ee58 <arp_cache_lookup+0x98>
 800ee06:	f8ba 5000 	ldrh.w	r5, [sl]
 800ee0a:	3f01      	subs	r7, #1
 800ee0c:	f017 07ff 	ands.w	r7, r7, #255	; 0xff
 800ee10:	d101      	bne.n	800ee16 <arp_cache_lookup+0x56>
 800ee12:	463e      	mov	r6, r7
 800ee14:	e7e8      	b.n	800ede8 <arp_cache_lookup+0x28>
 800ee16:	4630      	mov	r0, r6
 800ee18:	f7ff ffa0 	bl	800ed5c <arp_send_request>
 800ee1c:	f44f 3900 	mov.w	r9, #131072	; 0x20000
 800ee20:	f1b9 0901 	subs.w	r9, r9, #1
 800ee24:	f8ba 3000 	ldrh.w	r3, [sl]
 800ee28:	d011      	beq.n	800ee4e <arp_cache_lookup+0x8e>
 800ee2a:	429d      	cmp	r5, r3
 800ee2c:	d00c      	beq.n	800ee48 <arp_cache_lookup+0x88>
 800ee2e:	230c      	movs	r3, #12
 800ee30:	fb03 8505 	mla	r5, r3, r5, r8
 800ee34:	3c01      	subs	r4, #1
 800ee36:	1d2b      	adds	r3, r5, #4
 800ee38:	350a      	adds	r5, #10
 800ee3a:	42ab      	cmp	r3, r5
 800ee3c:	d0d4      	beq.n	800ede8 <arp_cache_lookup+0x28>
 800ee3e:	f813 2b01 	ldrb.w	r2, [r3], #1
 800ee42:	f804 2f01 	strb.w	r2, [r4, #1]!
 800ee46:	e7f8      	b.n	800ee3a <arp_cache_lookup+0x7a>
 800ee48:	f7f8 fb9a 	bl	8007580 <net_handle>
 800ee4c:	e7e8      	b.n	800ee20 <arp_cache_lookup+0x60>
 800ee4e:	429d      	cmp	r5, r3
 800ee50:	d0db      	beq.n	800ee0a <arp_cache_lookup+0x4a>
 800ee52:	e7ec      	b.n	800ee2e <arp_cache_lookup+0x6e>
 800ee54:	2000cc10 	andcs	ip, r0, r0, lsl ip
 800ee58:	2000cd90 	mulcs	r0, r0, sp

0800ee5c <_parse_response>:
 800ee5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ee60:	460c      	mov	r4, r1
 800ee62:	4e5b      	ldr	r6, [pc, #364]	; (800efd0 <_parse_response+0x174>)
 800ee64:	f5ad 7d15 	sub.w	sp, sp, #596	; 0x254
 800ee68:	6837      	ldr	r7, [r6, #0]
 800ee6a:	b2c5      	uxtb	r5, r0
 800ee6c:	f10d 0826 	add.w	r8, sp, #38	; 0x26
 800ee70:	f7f8 fb86 	bl	8007580 <net_handle>
 800ee74:	f44f 7209 	mov.w	r2, #548	; 0x224
 800ee78:	4628      	mov	r0, r5
 800ee7a:	f8cd 8000 	str.w	r8, [sp]
 800ee7e:	ab0a      	add	r3, sp, #40	; 0x28
 800ee80:	a90b      	add	r1, sp, #44	; 0x2c
 800ee82:	f7fe fda3 	bl	800d9cc <udp_recv>
 800ee86:	2800      	cmp	r0, #0
 800ee88:	d05f      	beq.n	800ef4a <_parse_response+0xee>
 800ee8a:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
 800ee8e:	2b43      	cmp	r3, #67	; 0x43
 800ee90:	d15b      	bne.n	800ef4a <_parse_response+0xee>
 800ee92:	aa12      	add	r2, sp, #72	; 0x48
 800ee94:	1e63      	subs	r3, r4, #1
 800ee96:	1d61      	adds	r1, r4, #5
 800ee98:	428b      	cmp	r3, r1
 800ee9a:	d150      	bne.n	800ef3e <_parse_response+0xe2>
 800ee9c:	2100      	movs	r1, #0
 800ee9e:	ab0b      	add	r3, sp, #44	; 0x2c
 800eea0:	181c      	adds	r4, r3, r0
 800eea2:	4608      	mov	r0, r1
 800eea4:	4b4b      	ldr	r3, [pc, #300]	; (800efd4 <_parse_response+0x178>)
 800eea6:	e9cd 1104 	strd	r1, r1, [sp, #16]
 800eeaa:	781a      	ldrb	r2, [r3, #0]
 800eeac:	f893 b001 	ldrb.w	fp, [r3, #1]
 800eeb0:	f893 c002 	ldrb.w	ip, [r3, #2]
 800eeb4:	78dd      	ldrb	r5, [r3, #3]
 800eeb6:	4b48      	ldr	r3, [pc, #288]	; (800efd8 <_parse_response+0x17c>)
 800eeb8:	9207      	str	r2, [sp, #28]
 800eeba:	781a      	ldrb	r2, [r3, #0]
 800eebc:	789f      	ldrb	r7, [r3, #2]
 800eebe:	78de      	ldrb	r6, [r3, #3]
 800eec0:	9206      	str	r2, [sp, #24]
 800eec2:	785a      	ldrb	r2, [r3, #1]
 800eec4:	4b45      	ldr	r3, [pc, #276]	; (800efdc <_parse_response+0x180>)
 800eec6:	9203      	str	r2, [sp, #12]
 800eec8:	f893 a000 	ldrb.w	sl, [r3]
 800eecc:	f893 9001 	ldrb.w	r9, [r3, #1]
 800eed0:	f893 8002 	ldrb.w	r8, [r3, #2]
 800eed4:	f893 e003 	ldrb.w	lr, [r3, #3]
 800eed8:	ab47      	add	r3, sp, #284	; 0x11c
 800eeda:	42a3      	cmp	r3, r4
 800eedc:	d33f      	bcc.n	800ef5e <_parse_response+0x102>
 800eede:	9b04      	ldr	r3, [sp, #16]
 800eee0:	b143      	cbz	r3, 800eef4 <_parse_response+0x98>
 800eee2:	4b3e      	ldr	r3, [pc, #248]	; (800efdc <_parse_response+0x180>)
 800eee4:	f883 a000 	strb.w	sl, [r3]
 800eee8:	f883 9001 	strb.w	r9, [r3, #1]
 800eeec:	f883 8002 	strb.w	r8, [r3, #2]
 800eef0:	f883 e003 	strb.w	lr, [r3, #3]
 800eef4:	9b05      	ldr	r3, [sp, #20]
 800eef6:	b133      	cbz	r3, 800ef06 <_parse_response+0xaa>
 800eef8:	4b37      	ldr	r3, [pc, #220]	; (800efd8 <_parse_response+0x17c>)
 800eefa:	9a06      	ldr	r2, [sp, #24]
 800eefc:	709f      	strb	r7, [r3, #2]
 800eefe:	701a      	strb	r2, [r3, #0]
 800ef00:	9a03      	ldr	r2, [sp, #12]
 800ef02:	70de      	strb	r6, [r3, #3]
 800ef04:	705a      	strb	r2, [r3, #1]
 800ef06:	b139      	cbz	r1, 800ef18 <_parse_response+0xbc>
 800ef08:	4b32      	ldr	r3, [pc, #200]	; (800efd4 <_parse_response+0x178>)
 800ef0a:	9a07      	ldr	r2, [sp, #28]
 800ef0c:	f883 b001 	strb.w	fp, [r3, #1]
 800ef10:	701a      	strb	r2, [r3, #0]
 800ef12:	f883 c002 	strb.w	ip, [r3, #2]
 800ef16:	70dd      	strb	r5, [r3, #3]
 800ef18:	2802      	cmp	r0, #2
 800ef1a:	d10c      	bne.n	800ef36 <_parse_response+0xda>
 800ef1c:	4b30      	ldr	r3, [pc, #192]	; (800efe0 <_parse_response+0x184>)
 800ef1e:	f89d 203c 	ldrb.w	r2, [sp, #60]	; 0x3c
 800ef22:	701a      	strb	r2, [r3, #0]
 800ef24:	f89d 203d 	ldrb.w	r2, [sp, #61]	; 0x3d
 800ef28:	705a      	strb	r2, [r3, #1]
 800ef2a:	f89d 203e 	ldrb.w	r2, [sp, #62]	; 0x3e
 800ef2e:	709a      	strb	r2, [r3, #2]
 800ef30:	f89d 203f 	ldrb.w	r2, [sp, #63]	; 0x3f
 800ef34:	70da      	strb	r2, [r3, #3]
 800ef36:	f50d 7d15 	add.w	sp, sp, #596	; 0x254
 800ef3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ef3e:	f812 cb01 	ldrb.w	ip, [r2], #1
 800ef42:	f813 ef01 	ldrb.w	lr, [r3, #1]!
 800ef46:	45e6      	cmp	lr, ip
 800ef48:	d0a6      	beq.n	800ee98 <_parse_response+0x3c>
 800ef4a:	6833      	ldr	r3, [r6, #0]
 800ef4c:	1bdb      	subs	r3, r3, r7
 800ef4e:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800ef52:	d38b      	bcc.n	800ee6c <_parse_response+0x10>
 800ef54:	2800      	cmp	r0, #0
 800ef56:	d1a1      	bne.n	800ee9c <_parse_response+0x40>
 800ef58:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800ef5c:	e7eb      	b.n	800ef36 <_parse_response+0xda>
 800ef5e:	781a      	ldrb	r2, [r3, #0]
 800ef60:	2a35      	cmp	r2, #53	; 0x35
 800ef62:	d011      	beq.n	800ef88 <_parse_response+0x12c>
 800ef64:	d808      	bhi.n	800ef78 <_parse_response+0x11c>
 800ef66:	2a01      	cmp	r2, #1
 800ef68:	d011      	beq.n	800ef8e <_parse_response+0x132>
 800ef6a:	2a03      	cmp	r2, #3
 800ef6c:	d01a      	beq.n	800efa4 <_parse_response+0x148>
 800ef6e:	b14a      	cbz	r2, 800ef84 <_parse_response+0x128>
 800ef70:	1c9a      	adds	r2, r3, #2
 800ef72:	785b      	ldrb	r3, [r3, #1]
 800ef74:	4413      	add	r3, r2
 800ef76:	e7b0      	b.n	800eeda <_parse_response+0x7e>
 800ef78:	2a36      	cmp	r2, #54	; 0x36
 800ef7a:	d01f      	beq.n	800efbc <_parse_response+0x160>
 800ef7c:	2aff      	cmp	r2, #255	; 0xff
 800ef7e:	d1f7      	bne.n	800ef70 <_parse_response+0x114>
 800ef80:	4623      	mov	r3, r4
 800ef82:	e7aa      	b.n	800eeda <_parse_response+0x7e>
 800ef84:	3301      	adds	r3, #1
 800ef86:	e7a8      	b.n	800eeda <_parse_response+0x7e>
 800ef88:	7898      	ldrb	r0, [r3, #2]
 800ef8a:	3303      	adds	r3, #3
 800ef8c:	e7a5      	b.n	800eeda <_parse_response+0x7e>
 800ef8e:	f893 a002 	ldrb.w	sl, [r3, #2]
 800ef92:	f893 9003 	ldrb.w	r9, [r3, #3]
 800ef96:	f893 8004 	ldrb.w	r8, [r3, #4]
 800ef9a:	f893 e005 	ldrb.w	lr, [r3, #5]
 800ef9e:	9204      	str	r2, [sp, #16]
 800efa0:	3306      	adds	r3, #6
 800efa2:	e79a      	b.n	800eeda <_parse_response+0x7e>
 800efa4:	789a      	ldrb	r2, [r3, #2]
 800efa6:	791f      	ldrb	r7, [r3, #4]
 800efa8:	9206      	str	r2, [sp, #24]
 800efaa:	78da      	ldrb	r2, [r3, #3]
 800efac:	795e      	ldrb	r6, [r3, #5]
 800efae:	9203      	str	r2, [sp, #12]
 800efb0:	785a      	ldrb	r2, [r3, #1]
 800efb2:	4413      	add	r3, r2
 800efb4:	2201      	movs	r2, #1
 800efb6:	3302      	adds	r3, #2
 800efb8:	9205      	str	r2, [sp, #20]
 800efba:	e78e      	b.n	800eeda <_parse_response+0x7e>
 800efbc:	789a      	ldrb	r2, [r3, #2]
 800efbe:	f893 b003 	ldrb.w	fp, [r3, #3]
 800efc2:	f893 c004 	ldrb.w	ip, [r3, #4]
 800efc6:	795d      	ldrb	r5, [r3, #5]
 800efc8:	2101      	movs	r1, #1
 800efca:	9207      	str	r2, [sp, #28]
 800efcc:	3306      	adds	r3, #6
 800efce:	e784      	b.n	800eeda <_parse_response+0x7e>
 800efd0:	2000d26c 	andcs	sp, r0, ip, ror #4
 800efd4:	2000cfc4 	andcs	ip, r0, r4, asr #31
 800efd8:	2000cd94 	mulcs	r0, r4, sp
 800efdc:	2000cd9c 	mulcs	r0, ip, sp
 800efe0:	2000cd98 	mulcs	r0, r8, sp

0800efe4 <memcpy.isra.0>:
 800efe4:	3801      	subs	r0, #1
 800efe6:	440a      	add	r2, r1
 800efe8:	4291      	cmp	r1, r2
 800efea:	d100      	bne.n	800efee <memcpy.isra.0+0xa>
 800efec:	4770      	bx	lr
 800efee:	f811 3b01 	ldrb.w	r3, [r1], #1
 800eff2:	f800 3f01 	strb.w	r3, [r0, #1]!
 800eff6:	e7f7      	b.n	800efe8 <memcpy.isra.0+0x4>

0800eff8 <dhcp_client>:
 800eff8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800effc:	b087      	sub	sp, #28
 800effe:	9203      	str	r2, [sp, #12]
 800f000:	4a77      	ldr	r2, [pc, #476]	; (800f1e0 <dhcp_client+0x1e8>)
 800f002:	460f      	mov	r7, r1
 800f004:	4605      	mov	r5, r0
 800f006:	f44f 7309 	mov.w	r3, #548	; 0x224
 800f00a:	4614      	mov	r4, r2
 800f00c:	2100      	movs	r1, #0
 800f00e:	3b01      	subs	r3, #1
 800f010:	f802 1b01 	strb.w	r1, [r2], #1
 800f014:	d1fb      	bne.n	800f00e <dhcp_client+0x16>
 800f016:	f240 1301 	movw	r3, #257	; 0x101
 800f01a:	2206      	movs	r2, #6
 800f01c:	4629      	mov	r1, r5
 800f01e:	4871      	ldr	r0, [pc, #452]	; (800f1e4 <dhcp_client+0x1ec>)
 800f020:	8023      	strh	r3, [r4, #0]
 800f022:	70a2      	strb	r2, [r4, #2]
 800f024:	f7ff ffde 	bl	800efe4 <memcpy.isra.0>
 800f028:	4b6f      	ldr	r3, [pc, #444]	; (800f1e8 <dhcp_client+0x1f0>)
 800f02a:	2044      	movs	r0, #68	; 0x44
 800f02c:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
 800f030:	f240 1335 	movw	r3, #309	; 0x135
 800f034:	f8a4 30f0 	strh.w	r3, [r4, #240]	; 0xf0
 800f038:	f7fe fc8e 	bl	800d958 <udp_bind>
 800f03c:	1e06      	subs	r6, r0, #0
 800f03e:	f2c0 80c9 	blt.w	800f1d4 <dhcp_client+0x1dc>
 800f042:	f04f 0915 	mov.w	r9, #21
 800f046:	f8df a198 	ldr.w	sl, [pc, #408]	; 800f1e0 <dhcp_client+0x1e8>
 800f04a:	f1b9 0901 	subs.w	r9, r9, #1
 800f04e:	d11f      	bne.n	800f090 <dhcp_client+0x98>
 800f050:	464c      	mov	r4, r9
 800f052:	2044      	movs	r0, #68	; 0x44
 800f054:	f7fe fc9a 	bl	800d98c <udp_unbind>
 800f058:	2c00      	cmp	r4, #0
 800f05a:	f000 80be 	beq.w	800f1da <dhcp_client+0x1e2>
 800f05e:	2204      	movs	r2, #4
 800f060:	4962      	ldr	r1, [pc, #392]	; (800f1ec <dhcp_client+0x1f4>)
 800f062:	a805      	add	r0, sp, #20
 800f064:	f7ff ffbe 	bl	800efe4 <memcpy.isra.0>
 800f068:	9b05      	ldr	r3, [sp, #20]
 800f06a:	2204      	movs	r2, #4
 800f06c:	4960      	ldr	r1, [pc, #384]	; (800f1f0 <dhcp_client+0x1f8>)
 800f06e:	603b      	str	r3, [r7, #0]
 800f070:	a805      	add	r0, sp, #20
 800f072:	f7ff ffb7 	bl	800efe4 <memcpy.isra.0>
 800f076:	9b05      	ldr	r3, [sp, #20]
 800f078:	a805      	add	r0, sp, #20
 800f07a:	60bb      	str	r3, [r7, #8]
 800f07c:	2204      	movs	r2, #4
 800f07e:	495d      	ldr	r1, [pc, #372]	; (800f1f4 <dhcp_client+0x1fc>)
 800f080:	f7ff ffb0 	bl	800efe4 <memcpy.isra.0>
 800f084:	2000      	movs	r0, #0
 800f086:	9b05      	ldr	r3, [sp, #20]
 800f088:	607b      	str	r3, [r7, #4]
 800f08a:	b007      	add	sp, #28
 800f08c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f090:	f643 5301 	movw	r3, #15617	; 0x3d01
 800f094:	f240 1807 	movw	r8, #263	; 0x107
 800f098:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 800f09c:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 800f0a0:	782b      	ldrb	r3, [r5, #0]
 800f0a2:	4a55      	ldr	r2, [pc, #340]	; (800f1f8 <dhcp_client+0x200>)
 800f0a4:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 800f0a8:	786b      	ldrb	r3, [r5, #1]
 800f0aa:	fa5f fb86 	uxtb.w	fp, r6
 800f0ae:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 800f0b2:	78ab      	ldrb	r3, [r5, #2]
 800f0b4:	4651      	mov	r1, sl
 800f0b6:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 800f0ba:	78eb      	ldrb	r3, [r5, #3]
 800f0bc:	4658      	mov	r0, fp
 800f0be:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 800f0c2:	792b      	ldrb	r3, [r5, #4]
 800f0c4:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 800f0c8:	796b      	ldrb	r3, [r5, #5]
 800f0ca:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 800f0ce:	4b4b      	ldr	r3, [pc, #300]	; (800f1fc <dhcp_client+0x204>)
 800f0d0:	e9c4 233f 	strd	r2, r3, [r4, #252]	; 0xfc
 800f0d4:	23ff      	movs	r3, #255	; 0xff
 800f0d6:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 800f0da:	2343      	movs	r3, #67	; 0x43
 800f0dc:	f240 1205 	movw	r2, #261	; 0x105
 800f0e0:	9300      	str	r3, [sp, #0]
 800f0e2:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800f0e6:	f7fe fccd 	bl	800da84 <udp_send>
 800f0ea:	4629      	mov	r1, r5
 800f0ec:	4630      	mov	r0, r6
 800f0ee:	f7ff feb5 	bl	800ee5c <_parse_response>
 800f0f2:	2802      	cmp	r0, #2
 800f0f4:	d1a9      	bne.n	800f04a <dhcp_client+0x52>
 800f0f6:	f643 5303 	movw	r3, #15619	; 0x3d03
 800f0fa:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 800f0fe:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 800f102:	782b      	ldrb	r3, [r5, #0]
 800f104:	f8df c0f8 	ldr.w	ip, [pc, #248]	; 800f200 <dhcp_client+0x208>
 800f108:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 800f10c:	786b      	ldrb	r3, [r5, #1]
 800f10e:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 800f112:	78ab      	ldrb	r3, [r5, #2]
 800f114:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 800f118:	78eb      	ldrb	r3, [r5, #3]
 800f11a:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 800f11e:	792b      	ldrb	r3, [r5, #4]
 800f120:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 800f124:	796b      	ldrb	r3, [r5, #5]
 800f126:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 800f12a:	f240 4332 	movw	r3, #1074	; 0x432
 800f12e:	f8a4 30fc 	strh.w	r3, [r4, #252]	; 0xfc
 800f132:	4b2e      	ldr	r3, [pc, #184]	; (800f1ec <dhcp_client+0x1f4>)
 800f134:	881a      	ldrh	r2, [r3, #0]
 800f136:	885b      	ldrh	r3, [r3, #2]
 800f138:	f8a4 20fe 	strh.w	r2, [r4, #254]	; 0xfe
 800f13c:	f8a4 3100 	strh.w	r3, [r4, #256]	; 0x100
 800f140:	f240 4336 	movw	r3, #1078	; 0x436
 800f144:	f8a4 3102 	strh.w	r3, [r4, #258]	; 0x102
 800f148:	4b2e      	ldr	r3, [pc, #184]	; (800f204 <dhcp_client+0x20c>)
 800f14a:	221e      	movs	r2, #30
 800f14c:	681b      	ldr	r3, [r3, #0]
 800f14e:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
 800f152:	230c      	movs	r3, #12
 800f154:	f8a4 3108 	strh.w	r3, [r4, #264]	; 0x108
 800f158:	9b03      	ldr	r3, [sp, #12]
 800f15a:	1e58      	subs	r0, r3, #1
 800f15c:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 800f160:	f1a2 0e1e 	sub.w	lr, r2, #30
 800f164:	1c51      	adds	r1, r2, #1
 800f166:	bb8b      	cbnz	r3, 800f1cc <dhcp_client+0x1d4>
 800f168:	2037      	movs	r0, #55	; 0x37
 800f16a:	18a3      	adds	r3, r4, r2
 800f16c:	f883 00ec 	strb.w	r0, [r3, #236]	; 0xec
 800f170:	2006      	movs	r0, #6
 800f172:	4421      	add	r1, r4
 800f174:	f881 00ec 	strb.w	r0, [r1, #236]	; 0xec
 800f178:	2103      	movs	r1, #3
 800f17a:	f883 10ef 	strb.w	r1, [r3, #239]	; 0xef
 800f17e:	210f      	movs	r1, #15
 800f180:	f883 10f1 	strb.w	r1, [r3, #241]	; 0xf1
 800f184:	213a      	movs	r1, #58	; 0x3a
 800f186:	f883 10f2 	strb.w	r1, [r3, #242]	; 0xf2
 800f18a:	213b      	movs	r1, #59	; 0x3b
 800f18c:	f04f 0801 	mov.w	r8, #1
 800f190:	f883 10f3 	strb.w	r1, [r3, #243]	; 0xf3
 800f194:	21ff      	movs	r1, #255	; 0xff
 800f196:	f883 00f0 	strb.w	r0, [r3, #240]	; 0xf0
 800f19a:	f883 10f4 	strb.w	r1, [r3, #244]	; 0xf4
 800f19e:	f883 80ee 	strb.w	r8, [r3, #238]	; 0xee
 800f1a2:	2343      	movs	r3, #67	; 0x43
 800f1a4:	32f5      	adds	r2, #245	; 0xf5
 800f1a6:	f884 e109 	strb.w	lr, [r4, #265]	; 0x109
 800f1aa:	4651      	mov	r1, sl
 800f1ac:	9300      	str	r3, [sp, #0]
 800f1ae:	b292      	uxth	r2, r2
 800f1b0:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800f1b4:	4658      	mov	r0, fp
 800f1b6:	f7fe fc65 	bl	800da84 <udp_send>
 800f1ba:	4629      	mov	r1, r5
 800f1bc:	4630      	mov	r0, r6
 800f1be:	f7ff fe4d 	bl	800ee5c <_parse_response>
 800f1c2:	2805      	cmp	r0, #5
 800f1c4:	f47f af41 	bne.w	800f04a <dhcp_client+0x52>
 800f1c8:	4644      	mov	r4, r8
 800f1ca:	e742      	b.n	800f052 <dhcp_client+0x5a>
 800f1cc:	460a      	mov	r2, r1
 800f1ce:	f80c 3b01 	strb.w	r3, [ip], #1
 800f1d2:	e7c3      	b.n	800f15c <dhcp_client+0x164>
 800f1d4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800f1d8:	e757      	b.n	800f08a <dhcp_client+0x92>
 800f1da:	f06f 0001 	mvn.w	r0, #1
 800f1de:	e754      	b.n	800f08a <dhcp_client+0x92>
 800f1e0:	2000cda0 	andcs	ip, r0, r0, lsr #27
 800f1e4:	2000cdbc 			; <UNDEFINED> instruction: 0x2000cdbc
 800f1e8:	63538263 	cmpvs	r3, #805306374	; 0x30000006
 800f1ec:	2000cd98 	mulcs	r0, r8, sp
 800f1f0:	2000cd94 	mulcs	r0, r4, sp
 800f1f4:	2000cd9c 	mulcs	r0, ip, sp
 800f1f8:	03010637 	movweq	r0, #5687	; 0x1637
 800f1fc:	3b3a0f06 	blcc	8e92e1c <__exidx_end+0xe7daa8>
 800f200:	2000ceaa 	andcs	ip, r0, sl, lsr #29
 800f204:	2000cfc4 	andcs	ip, r0, r4, asr #31

0800f208 <dhcp_client_release>:
 800f208:	b507      	push	{r0, r1, r2, lr}
 800f20a:	2044      	movs	r0, #68	; 0x44
 800f20c:	f7fe fba4 	bl	800d958 <udp_bind>
 800f210:	f243 6307 	movw	r3, #13831	; 0x3607
 800f214:	4911      	ldr	r1, [pc, #68]	; (800f25c <dhcp_client_release+0x54>)
 800f216:	b2c0      	uxtb	r0, r0
 800f218:	f8a1 30f2 	strh.w	r3, [r1, #242]	; 0xf2
 800f21c:	2304      	movs	r3, #4
 800f21e:	f881 30f4 	strb.w	r3, [r1, #244]	; 0xf4
 800f222:	4b0f      	ldr	r3, [pc, #60]	; (800f260 <dhcp_client_release+0x58>)
 800f224:	781a      	ldrb	r2, [r3, #0]
 800f226:	f881 20f5 	strb.w	r2, [r1, #245]	; 0xf5
 800f22a:	785a      	ldrb	r2, [r3, #1]
 800f22c:	f881 20f6 	strb.w	r2, [r1, #246]	; 0xf6
 800f230:	789a      	ldrb	r2, [r3, #2]
 800f232:	78db      	ldrb	r3, [r3, #3]
 800f234:	f881 20f7 	strb.w	r2, [r1, #247]	; 0xf7
 800f238:	f881 30f8 	strb.w	r3, [r1, #248]	; 0xf8
 800f23c:	23ff      	movs	r3, #255	; 0xff
 800f23e:	f881 30f9 	strb.w	r3, [r1, #249]	; 0xf9
 800f242:	2343      	movs	r3, #67	; 0x43
 800f244:	22fa      	movs	r2, #250	; 0xfa
 800f246:	9300      	str	r3, [sp, #0]
 800f248:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800f24c:	f7fe fc1a 	bl	800da84 <udp_send>
 800f250:	2044      	movs	r0, #68	; 0x44
 800f252:	b003      	add	sp, #12
 800f254:	f85d eb04 	ldr.w	lr, [sp], #4
 800f258:	f7fe bb98 	b.w	800d98c <udp_unbind>
 800f25c:	2000cda0 	andcs	ip, r0, r0, lsr #27
 800f260:	2000cfc4 	andcs	ip, r0, r4, asr #31

0800f264 <memcpy.isra.0>:
 800f264:	3801      	subs	r0, #1
 800f266:	440a      	add	r2, r1
 800f268:	4291      	cmp	r1, r2
 800f26a:	d100      	bne.n	800f26e <memcpy.isra.0+0xa>
 800f26c:	4770      	bx	lr
 800f26e:	f811 3b01 	ldrb.w	r3, [r1], #1
 800f272:	f800 3f01 	strb.w	r3, [r0, #1]!
 800f276:	e7f7      	b.n	800f268 <memcpy.isra.0+0x4>

0800f278 <_send_report>:
 800f278:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f27a:	491c      	ldr	r1, [pc, #112]	; (800f2ec <_send_report+0x74>)
 800f27c:	4c1c      	ldr	r4, [pc, #112]	; (800f2f0 <_send_report+0x78>)
 800f27e:	f3c0 2306 	ubfx	r3, r0, #8, #7
 800f282:	9001      	str	r0, [sp, #4]
 800f284:	70cb      	strb	r3, [r1, #3]
 800f286:	f3c0 4307 	ubfx	r3, r0, #16, #8
 800f28a:	f3c0 6007 	ubfx	r0, r0, #24, #8
 800f28e:	710b      	strb	r3, [r1, #4]
 800f290:	7148      	strb	r0, [r1, #5]
 800f292:	2206      	movs	r2, #6
 800f294:	4620      	mov	r0, r4
 800f296:	f7ff ffe5 	bl	800f264 <memcpy.isra.0>
 800f29a:	2204      	movs	r2, #4
 800f29c:	2700      	movs	r7, #0
 800f29e:	4d15      	ldr	r5, [pc, #84]	; (800f2f4 <_send_report+0x7c>)
 800f2a0:	eb0d 0102 	add.w	r1, sp, r2
 800f2a4:	882b      	ldrh	r3, [r5, #0]
 800f2a6:	f104 001e 	add.w	r0, r4, #30
 800f2aa:	f104 060e 	add.w	r6, r4, #14
 800f2ae:	8263      	strh	r3, [r4, #18]
 800f2b0:	f7ff ffd8 	bl	800f264 <memcpy.isra.0>
 800f2b4:	2118      	movs	r1, #24
 800f2b6:	4630      	mov	r0, r6
 800f2b8:	8327      	strh	r7, [r4, #24]
 800f2ba:	f000 f8c6 	bl	800f44a <net_chksum>
 800f2be:	2204      	movs	r2, #4
 800f2c0:	8320      	strh	r0, [r4, #24]
 800f2c2:	eb0d 0102 	add.w	r1, sp, r2
 800f2c6:	f104 002a 	add.w	r0, r4, #42	; 0x2a
 800f2ca:	f7ff ffcb 	bl	800f264 <memcpy.isra.0>
 800f2ce:	2120      	movs	r1, #32
 800f2d0:	4630      	mov	r0, r6
 800f2d2:	8527      	strh	r7, [r4, #40]	; 0x28
 800f2d4:	f000 f8b9 	bl	800f44a <net_chksum>
 800f2d8:	212e      	movs	r1, #46	; 0x2e
 800f2da:	8520      	strh	r0, [r4, #40]	; 0x28
 800f2dc:	4620      	mov	r0, r4
 800f2de:	f003 f83f 	bl	8012360 <emac_eth_send>
 800f2e2:	882b      	ldrh	r3, [r5, #0]
 800f2e4:	3301      	adds	r3, #1
 800f2e6:	802b      	strh	r3, [r5, #0]
 800f2e8:	b003      	add	sp, #12
 800f2ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f2ec:	2000d120 	andcs	sp, r0, r0, lsr #2
 800f2f0:	2000d128 	andcs	sp, r0, r8, lsr #2
 800f2f4:	2000d0e8 	andcs	sp, r0, r8, ror #1

0800f2f8 <igmp_set_ip>:
 800f2f8:	b507      	push	{r0, r1, r2, lr}
 800f2fa:	2204      	movs	r2, #4
 800f2fc:	6803      	ldr	r3, [r0, #0]
 800f2fe:	eb0d 0102 	add.w	r1, sp, r2
 800f302:	4806      	ldr	r0, [pc, #24]	; (800f31c <igmp_set_ip+0x24>)
 800f304:	9301      	str	r3, [sp, #4]
 800f306:	f7ff ffad 	bl	800f264 <memcpy.isra.0>
 800f30a:	2204      	movs	r2, #4
 800f30c:	4804      	ldr	r0, [pc, #16]	; (800f320 <igmp_set_ip+0x28>)
 800f30e:	eb0d 0102 	add.w	r1, sp, r2
 800f312:	f7ff ffa7 	bl	800f264 <memcpy.isra.0>
 800f316:	b003      	add	sp, #12
 800f318:	f85d fb04 	ldr.w	pc, [sp], #4
 800f31c:	2000d142 	andcs	sp, r0, r2, asr #2
 800f320:	2000d10a 	andcs	sp, r0, sl, lsl #2

0800f324 <igmp_timer>:
 800f324:	b570      	push	{r4, r5, r6, lr}
 800f326:	2500      	movs	r5, #0
 800f328:	2602      	movs	r6, #2
 800f32a:	4c0a      	ldr	r4, [pc, #40]	; (800f354 <igmp_timer+0x30>)
 800f32c:	7963      	ldrb	r3, [r4, #5]
 800f32e:	2b01      	cmp	r3, #1
 800f330:	d109      	bne.n	800f346 <igmp_timer+0x22>
 800f332:	7923      	ldrb	r3, [r4, #4]
 800f334:	b13b      	cbz	r3, 800f346 <igmp_timer+0x22>
 800f336:	3b01      	subs	r3, #1
 800f338:	b2db      	uxtb	r3, r3
 800f33a:	7123      	strb	r3, [r4, #4]
 800f33c:	b91b      	cbnz	r3, 800f346 <igmp_timer+0x22>
 800f33e:	6820      	ldr	r0, [r4, #0]
 800f340:	f7ff ff9a 	bl	800f278 <_send_report>
 800f344:	7166      	strb	r6, [r4, #5]
 800f346:	3501      	adds	r5, #1
 800f348:	2d24      	cmp	r5, #36	; 0x24
 800f34a:	f104 0408 	add.w	r4, r4, #8
 800f34e:	d1ed      	bne.n	800f32c <igmp_timer+0x8>
 800f350:	bd70      	pop	{r4, r5, r6, pc}
 800f352:	bf00      	nop
 800f354:	2000cfc8 	andcs	ip, r0, r8, asr #31

0800f358 <igmp_join>:
 800f358:	b538      	push	{r3, r4, r5, lr}
 800f35a:	f000 03e0 	and.w	r3, r0, #224	; 0xe0
 800f35e:	2be0      	cmp	r3, #224	; 0xe0
 800f360:	d11b      	bne.n	800f39a <igmp_join+0x42>
 800f362:	4911      	ldr	r1, [pc, #68]	; (800f3a8 <igmp_join+0x50>)
 800f364:	680c      	ldr	r4, [r1, #0]
 800f366:	2c24      	cmp	r4, #36	; 0x24
 800f368:	d01a      	beq.n	800f3a0 <igmp_join+0x48>
 800f36a:	2300      	movs	r3, #0
 800f36c:	4a0f      	ldr	r2, [pc, #60]	; (800f3ac <igmp_join+0x54>)
 800f36e:	429c      	cmp	r4, r3
 800f370:	dc0d      	bgt.n	800f38e <igmp_join+0x36>
 800f372:	f44f 7381 	mov.w	r3, #258	; 0x102
 800f376:	f842 0034 	str.w	r0, [r2, r4, lsl #3]
 800f37a:	eb02 02c4 	add.w	r2, r2, r4, lsl #3
 800f37e:	8093      	strh	r3, [r2, #4]
 800f380:	1c63      	adds	r3, r4, #1
 800f382:	600b      	str	r3, [r1, #0]
 800f384:	f7ff ff78 	bl	800f278 <_send_report>
 800f388:	4623      	mov	r3, r4
 800f38a:	4618      	mov	r0, r3
 800f38c:	bd38      	pop	{r3, r4, r5, pc}
 800f38e:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 800f392:	4285      	cmp	r5, r0
 800f394:	d0f9      	beq.n	800f38a <igmp_join+0x32>
 800f396:	3301      	adds	r3, #1
 800f398:	e7e9      	b.n	800f36e <igmp_join+0x16>
 800f39a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800f39e:	e7f4      	b.n	800f38a <igmp_join+0x32>
 800f3a0:	f06f 0301 	mvn.w	r3, #1
 800f3a4:	e7f1      	b.n	800f38a <igmp_join+0x32>
 800f3a6:	bf00      	nop
 800f3a8:	2000d0ec 	andcs	sp, r0, ip, ror #1
 800f3ac:	2000cfc8 	andcs	ip, r0, r8, asr #31

0800f3b0 <igmp_leave>:
 800f3b0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800f3b4:	2600      	movs	r6, #0
 800f3b6:	4f1c      	ldr	r7, [pc, #112]	; (800f428 <igmp_leave+0x78>)
 800f3b8:	f857 3036 	ldr.w	r3, [r7, r6, lsl #3]
 800f3bc:	4283      	cmp	r3, r0
 800f3be:	d007      	beq.n	800f3d0 <igmp_leave+0x20>
 800f3c0:	3601      	adds	r6, #1
 800f3c2:	2e24      	cmp	r6, #36	; 0x24
 800f3c4:	d1f8      	bne.n	800f3b8 <igmp_leave+0x8>
 800f3c6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800f3ca:	b002      	add	sp, #8
 800f3cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f3d0:	2400      	movs	r4, #0
 800f3d2:	f8df 8058 	ldr.w	r8, [pc, #88]	; 800f42c <igmp_leave+0x7c>
 800f3d6:	4d16      	ldr	r5, [pc, #88]	; (800f430 <igmp_leave+0x80>)
 800f3d8:	f8b8 3000 	ldrh.w	r3, [r8]
 800f3dc:	2118      	movs	r1, #24
 800f3de:	9001      	str	r0, [sp, #4]
 800f3e0:	4814      	ldr	r0, [pc, #80]	; (800f434 <igmp_leave+0x84>)
 800f3e2:	826b      	strh	r3, [r5, #18]
 800f3e4:	832c      	strh	r4, [r5, #24]
 800f3e6:	f000 f830 	bl	800f44a <net_chksum>
 800f3ea:	2204      	movs	r2, #4
 800f3ec:	8328      	strh	r0, [r5, #24]
 800f3ee:	eb0d 0102 	add.w	r1, sp, r2
 800f3f2:	f105 002a 	add.w	r0, r5, #42	; 0x2a
 800f3f6:	f7ff ff35 	bl	800f264 <memcpy.isra.0>
 800f3fa:	2120      	movs	r1, #32
 800f3fc:	f105 000e 	add.w	r0, r5, #14
 800f400:	852c      	strh	r4, [r5, #40]	; 0x28
 800f402:	f000 f822 	bl	800f44a <net_chksum>
 800f406:	212e      	movs	r1, #46	; 0x2e
 800f408:	8528      	strh	r0, [r5, #40]	; 0x28
 800f40a:	4628      	mov	r0, r5
 800f40c:	f002 ffa8 	bl	8012360 <emac_eth_send>
 800f410:	f8b8 3000 	ldrh.w	r3, [r8]
 800f414:	f847 4036 	str.w	r4, [r7, r6, lsl #3]
 800f418:	3301      	adds	r3, #1
 800f41a:	eb07 06c6 	add.w	r6, r7, r6, lsl #3
 800f41e:	4620      	mov	r0, r4
 800f420:	f8a8 3000 	strh.w	r3, [r8]
 800f424:	80b4      	strh	r4, [r6, #4]
 800f426:	e7d0      	b.n	800f3ca <igmp_leave+0x1a>
 800f428:	2000cfc8 	andcs	ip, r0, r8, asr #31
 800f42c:	2000d0e8 	andcs	sp, r0, r8, ror #1
 800f430:	2000d0f0 	strdcs	sp, [r0], -r0
 800f434:	2000d136 	andcs	sp, r0, r6, lsr r1

0800f438 <ip_set_ip>:
 800f438:	b510      	push	{r4, lr}
 800f43a:	4604      	mov	r4, r0
 800f43c:	f7fe fa6c 	bl	800d918 <udp_set_ip>
 800f440:	4620      	mov	r0, r4
 800f442:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f446:	f7ff bf57 	b.w	800f2f8 <igmp_set_ip>

0800f44a <net_chksum>:
 800f44a:	2300      	movs	r3, #0
 800f44c:	f021 0201 	bic.w	r2, r1, #1
 800f450:	b530      	push	{r4, r5, lr}
 800f452:	4402      	add	r2, r0
 800f454:	084c      	lsrs	r4, r1, #1
 800f456:	4290      	cmp	r0, r2
 800f458:	d10e      	bne.n	800f478 <net_chksum+0x2e>
 800f45a:	f06f 0201 	mvn.w	r2, #1
 800f45e:	fb02 1104 	mla	r1, r2, r4, r1
 800f462:	b121      	cbz	r1, 800f46e <net_chksum+0x24>
 800f464:	7802      	ldrb	r2, [r0, #0]
 800f466:	0212      	lsls	r2, r2, #8
 800f468:	ba52      	rev16	r2, r2
 800f46a:	b292      	uxth	r2, r2
 800f46c:	4413      	add	r3, r2
 800f46e:	0c1a      	lsrs	r2, r3, #16
 800f470:	d106      	bne.n	800f480 <net_chksum+0x36>
 800f472:	43d8      	mvns	r0, r3
 800f474:	b280      	uxth	r0, r0
 800f476:	bd30      	pop	{r4, r5, pc}
 800f478:	f830 5b02 	ldrh.w	r5, [r0], #2
 800f47c:	442b      	add	r3, r5
 800f47e:	e7ea      	b.n	800f456 <net_chksum+0xc>
 800f480:	b29b      	uxth	r3, r3
 800f482:	e7f3      	b.n	800f46c <net_chksum+0x22>

0800f484 <memcpy.isra.0>:
 800f484:	3801      	subs	r0, #1
 800f486:	440a      	add	r2, r1
 800f488:	4291      	cmp	r1, r2
 800f48a:	d100      	bne.n	800f48e <memcpy.isra.0+0xa>
 800f48c:	4770      	bx	lr
 800f48e:	f811 3b01 	ldrb.w	r3, [r1], #1
 800f492:	f800 3f01 	strb.w	r3, [r0, #1]!
 800f496:	e7f7      	b.n	800f488 <memcpy.isra.0+0x4>

0800f498 <Display::Write(unsigned char, char const*) [clone .isra.0]>:
 800f498:	b430      	push	{r4, r5}
 800f49a:	b168      	cbz	r0, 800f4b8 <Display::Write(unsigned char, char const*) [clone .isra.0]+0x20>
 800f49c:	2300      	movs	r3, #0
 800f49e:	7905      	ldrb	r5, [r0, #4]
 800f4a0:	5cd4      	ldrb	r4, [r2, r3]
 800f4a2:	b11c      	cbz	r4, 800f4ac <Display::Write(unsigned char, char const*) [clone .isra.0]+0x14>
 800f4a4:	1c5c      	adds	r4, r3, #1
 800f4a6:	429d      	cmp	r5, r3
 800f4a8:	4623      	mov	r3, r4
 800f4aa:	dcf9      	bgt.n	800f4a0 <Display::Write(unsigned char, char const*) [clone .isra.0]+0x8>
 800f4ac:	6804      	ldr	r4, [r0, #0]
 800f4ae:	b2db      	uxtb	r3, r3
 800f4b0:	69e4      	ldr	r4, [r4, #28]
 800f4b2:	46a4      	mov	ip, r4
 800f4b4:	bc30      	pop	{r4, r5}
 800f4b6:	4760      	bx	ip
 800f4b8:	bc30      	pop	{r4, r5}
 800f4ba:	4770      	bx	lr

0800f4bc <Display::ClearLine(unsigned char) [clone .isra.0]>:
 800f4bc:	b110      	cbz	r0, 800f4c4 <Display::ClearLine(unsigned char) [clone .isra.0]+0x8>
 800f4be:	6803      	ldr	r3, [r0, #0]
 800f4c0:	691b      	ldr	r3, [r3, #16]
 800f4c2:	4718      	bx	r3
 800f4c4:	4770      	bx	lr

0800f4c6 <Display::Printf(unsigned char, char const*, ...)>:
 800f4c6:	b40c      	push	{r2, r3}
 800f4c8:	b570      	push	{r4, r5, r6, lr}
 800f4ca:	6984      	ldr	r4, [r0, #24]
 800f4cc:	4605      	mov	r5, r0
 800f4ce:	460e      	mov	r6, r1
 800f4d0:	b08a      	sub	sp, #40	; 0x28
 800f4d2:	b174      	cbz	r4, 800f4f2 <Display::Printf(unsigned char, char const*, ...)+0x2c>
 800f4d4:	ab0f      	add	r3, sp, #60	; 0x3c
 800f4d6:	2120      	movs	r1, #32
 800f4d8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800f4da:	a802      	add	r0, sp, #8
 800f4dc:	9301      	str	r3, [sp, #4]
 800f4de:	f001 fef5 	bl	80112cc <vsnprintf>
 800f4e2:	4604      	mov	r4, r0
 800f4e4:	69a8      	ldr	r0, [r5, #24]
 800f4e6:	4631      	mov	r1, r6
 800f4e8:	6803      	ldr	r3, [r0, #0]
 800f4ea:	aa02      	add	r2, sp, #8
 800f4ec:	69dd      	ldr	r5, [r3, #28]
 800f4ee:	b2a3      	uxth	r3, r4
 800f4f0:	47a8      	blx	r5
 800f4f2:	4620      	mov	r0, r4
 800f4f4:	b00a      	add	sp, #40	; 0x28
 800f4f6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f4fa:	b002      	add	sp, #8
 800f4fc:	4770      	bx	lr

0800f4fe <Display::Status(Display7SegmentMessage)>:
 800f4fe:	7c43      	ldrb	r3, [r0, #17]
 800f500:	b513      	push	{r0, r1, r4, lr}
 800f502:	4604      	mov	r4, r0
 800f504:	b19b      	cbz	r3, 800f52e <Display::Status(Display7SegmentMessage)+0x30>
 800f506:	43c9      	mvns	r1, r1
 800f508:	2312      	movs	r3, #18
 800f50a:	7a00      	ldrb	r0, [r0, #8]
 800f50c:	f88d 3004 	strb.w	r3, [sp, #4]
 800f510:	f3c1 2307 	ubfx	r3, r1, #8, #8
 800f514:	f88d 1006 	strb.w	r1, [sp, #6]
 800f518:	f88d 3005 	strb.w	r3, [sp, #5]
 800f51c:	f002 ffb8 	bl	8012490 <gd32_i2c_set_address(unsigned char)>
 800f520:	68e0      	ldr	r0, [r4, #12]
 800f522:	f002 ffad 	bl	8012480 <gd32_i2c_set_baudrate(unsigned int)>
 800f526:	2103      	movs	r1, #3
 800f528:	a801      	add	r0, sp, #4
 800f52a:	f002 ffb7 	bl	801249c <gd32_i2c_write(char const*, unsigned int)>
 800f52e:	b002      	add	sp, #8
 800f530:	bd10      	pop	{r4, pc}
	...

0800f534 <DisplayUdf::DisplayUdf()>:
 800f534:	b510      	push	{r4, lr}
 800f536:	4604      	mov	r4, r0
 800f538:	f000 febc 	bl	80102b4 <Display::Display()>
 800f53c:	2202      	movs	r2, #2
 800f53e:	2300      	movs	r3, #0
 800f540:	e9c4 2314 	strd	r2, r3, [r4, #80]	; 0x50
 800f544:	4b05      	ldr	r3, [pc, #20]	; (800f55c <DisplayUdf::DisplayUdf()+0x28>)
 800f546:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 800f54a:	601c      	str	r4, [r3, #0]
 800f54c:	2301      	movs	r3, #1
 800f54e:	f802 3b01 	strb.w	r3, [r2], #1
 800f552:	3301      	adds	r3, #1
 800f554:	2b15      	cmp	r3, #21
 800f556:	d1fa      	bne.n	800f54e <DisplayUdf::DisplayUdf()+0x1a>
 800f558:	4620      	mov	r0, r4
 800f55a:	bd10      	pop	{r4, pc}
 800f55c:	2000d158 	andcs	sp, r0, r8, asr r1

0800f560 <DisplayUdf::SetTitle(char const*, ...)>:
 800f560:	b40e      	push	{r1, r2, r3}
 800f562:	b517      	push	{r0, r1, r2, r4, lr}
 800f564:	ab05      	add	r3, sp, #20
 800f566:	f853 2b04 	ldr.w	r2, [r3], #4
 800f56a:	4604      	mov	r4, r0
 800f56c:	211f      	movs	r1, #31
 800f56e:	301c      	adds	r0, #28
 800f570:	9301      	str	r3, [sp, #4]
 800f572:	f001 feab 	bl	80112cc <vsnprintf>
 800f576:	2300      	movs	r3, #0
 800f578:	4404      	add	r4, r0
 800f57a:	7723      	strb	r3, [r4, #28]
 800f57c:	b003      	add	sp, #12
 800f57e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f582:	b003      	add	sp, #12
 800f584:	4770      	bx	lr
	...

0800f588 <DisplayUdf::ShowEmacStart()>:
 800f588:	b510      	push	{r4, lr}
 800f58a:	4604      	mov	r4, r0
 800f58c:	f890 103e 	ldrb.w	r1, [r0, #62]	; 0x3e
 800f590:	6980      	ldr	r0, [r0, #24]
 800f592:	f7ff ff93 	bl	800f4bc <Display::ClearLine(unsigned char) [clone .isra.0]>
 800f596:	4620      	mov	r0, r4
 800f598:	4a02      	ldr	r2, [pc, #8]	; (800f5a4 <DisplayUdf::ShowEmacStart()+0x1c>)
 800f59a:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 800f59e:	f7ff ff92 	bl	800f4c6 <Display::Printf(unsigned char, char const*, ...)>
 800f5a2:	bd10      	pop	{r4, pc}
 800f5a4:	08014cbe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r7, sl, fp, lr}

0800f5a8 <DisplayUdf::ShowIpAddress()>:
 800f5a8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f5ac:	4604      	mov	r4, r0
 800f5ae:	f890 103e 	ldrb.w	r1, [r0, #62]	; 0x3e
 800f5b2:	b086      	sub	sp, #24
 800f5b4:	6980      	ldr	r0, [r0, #24]
 800f5b6:	f7ff ff81 	bl	800f4bc <Display::ClearLine(unsigned char) [clone .isra.0]>
 800f5ba:	4b13      	ldr	r3, [pc, #76]	; (800f608 <DisplayUdf::ShowIpAddress()+0x60>)
 800f5bc:	f894 703e 	ldrb.w	r7, [r4, #62]	; 0x3e
 800f5c0:	681d      	ldr	r5, [r3, #0]
 800f5c2:	69a8      	ldr	r0, [r5, #24]
 800f5c4:	692e      	ldr	r6, [r5, #16]
 800f5c6:	f7f8 ffdd 	bl	8008584 <__popcountsi2>
 800f5ca:	78eb      	ldrb	r3, [r5, #3]
 800f5cc:	fa5f f886 	uxtb.w	r8, r6
 800f5d0:	f3c6 2907 	ubfx	r9, r6, #8, #8
 800f5d4:	f3c6 4a07 	ubfx	sl, r6, #16, #8
 800f5d8:	0e36      	lsrs	r6, r6, #24
 800f5da:	b99b      	cbnz	r3, 800f604 <DisplayUdf::ShowIpAddress()+0x5c>
 800f5dc:	786b      	ldrb	r3, [r5, #1]
 800f5de:	2b00      	cmp	r3, #0
 800f5e0:	bf14      	ite	ne
 800f5e2:	2244      	movne	r2, #68	; 0x44
 800f5e4:	2253      	moveq	r2, #83	; 0x53
 800f5e6:	e9cd 0203 	strd	r0, r2, [sp, #12]
 800f5ea:	4643      	mov	r3, r8
 800f5ec:	4639      	mov	r1, r7
 800f5ee:	4620      	mov	r0, r4
 800f5f0:	e9cd a601 	strd	sl, r6, [sp, #4]
 800f5f4:	4a05      	ldr	r2, [pc, #20]	; (800f60c <DisplayUdf::ShowIpAddress()+0x64>)
 800f5f6:	f8cd 9000 	str.w	r9, [sp]
 800f5fa:	f7ff ff64 	bl	800f4c6 <Display::Printf(unsigned char, char const*, ...)>
 800f5fe:	b006      	add	sp, #24
 800f600:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f604:	225a      	movs	r2, #90	; 0x5a
 800f606:	e7ee      	b.n	800f5e6 <DisplayUdf::ShowIpAddress()+0x3e>
 800f608:	2000cb28 	andcs	ip, r0, r8, lsr #22
 800f60c:	08014ccd 	stmdaeq	r1, {r0, r2, r3, r6, r7, sl, fp, lr}

0800f610 <DisplayUdf::ShowNetmask()>:
 800f610:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800f612:	4604      	mov	r4, r0
 800f614:	4b0b      	ldr	r3, [pc, #44]	; (800f644 <DisplayUdf::ShowNetmask()+0x34>)
 800f616:	681b      	ldr	r3, [r3, #0]
 800f618:	699b      	ldr	r3, [r3, #24]
 800f61a:	0e1a      	lsrs	r2, r3, #24
 800f61c:	9202      	str	r2, [sp, #8]
 800f61e:	f3c3 4207 	ubfx	r2, r3, #16, #8
 800f622:	9201      	str	r2, [sp, #4]
 800f624:	f3c3 2207 	ubfx	r2, r3, #8, #8
 800f628:	9200      	str	r2, [sp, #0]
 800f62a:	f890 1048 	ldrb.w	r1, [r0, #72]	; 0x48
 800f62e:	4a06      	ldr	r2, [pc, #24]	; (800f648 <DisplayUdf::ShowNetmask()+0x38>)
 800f630:	b2db      	uxtb	r3, r3
 800f632:	f7ff ff48 	bl	800f4c6 <Display::Printf(unsigned char, char const*, ...)>
 800f636:	4620      	mov	r0, r4
 800f638:	b004      	add	sp, #16
 800f63a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f63e:	f7ff bfb3 	b.w	800f5a8 <DisplayUdf::ShowIpAddress()>
 800f642:	bf00      	nop
 800f644:	2000cb28 	andcs	ip, r0, r8, lsr #22
 800f648:	08014cdf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r7, sl, fp, lr}

0800f64c <DisplayUdf::ShowGatewayIp()>:
 800f64c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800f64e:	4604      	mov	r4, r0
 800f650:	f890 104e 	ldrb.w	r1, [r0, #78]	; 0x4e
 800f654:	6980      	ldr	r0, [r0, #24]
 800f656:	f7ff ff31 	bl	800f4bc <Display::ClearLine(unsigned char) [clone .isra.0]>
 800f65a:	4b0a      	ldr	r3, [pc, #40]	; (800f684 <DisplayUdf::ShowGatewayIp()+0x38>)
 800f65c:	4620      	mov	r0, r4
 800f65e:	681b      	ldr	r3, [r3, #0]
 800f660:	f894 104e 	ldrb.w	r1, [r4, #78]	; 0x4e
 800f664:	695b      	ldr	r3, [r3, #20]
 800f666:	0e1a      	lsrs	r2, r3, #24
 800f668:	9202      	str	r2, [sp, #8]
 800f66a:	f3c3 4207 	ubfx	r2, r3, #16, #8
 800f66e:	9201      	str	r2, [sp, #4]
 800f670:	f3c3 2207 	ubfx	r2, r3, #8, #8
 800f674:	9200      	str	r2, [sp, #0]
 800f676:	b2db      	uxtb	r3, r3
 800f678:	4a03      	ldr	r2, [pc, #12]	; (800f688 <DisplayUdf::ShowGatewayIp()+0x3c>)
 800f67a:	f7ff ff24 	bl	800f4c6 <Display::Printf(unsigned char, char const*, ...)>
 800f67e:	b004      	add	sp, #16
 800f680:	bd10      	pop	{r4, pc}
 800f682:	bf00      	nop
 800f684:	2000cb28 	andcs	ip, r0, r8, lsr #22
 800f688:	08014cee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, sl, fp, lr}

0800f68c <DisplayUdf::ShowHostName()>:
 800f68c:	b510      	push	{r4, lr}
 800f68e:	4604      	mov	r4, r0
 800f690:	f890 1043 	ldrb.w	r1, [r0, #67]	; 0x43
 800f694:	6980      	ldr	r0, [r0, #24]
 800f696:	f7ff ff11 	bl	800f4bc <Display::ClearLine(unsigned char) [clone .isra.0]>
 800f69a:	4b05      	ldr	r3, [pc, #20]	; (800f6b0 <DisplayUdf::ShowHostName()+0x24>)
 800f69c:	f894 1043 	ldrb.w	r1, [r4, #67]	; 0x43
 800f6a0:	681a      	ldr	r2, [r3, #0]
 800f6a2:	69a0      	ldr	r0, [r4, #24]
 800f6a4:	321c      	adds	r2, #28
 800f6a6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f6aa:	f7ff bef5 	b.w	800f498 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 800f6ae:	bf00      	nop
 800f6b0:	2000cb28 	andcs	ip, r0, r8, lsr #22

0800f6b4 <DisplayUdf::Show()>:
 800f6b4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f6b6:	4604      	mov	r4, r0
 800f6b8:	21ff      	movs	r1, #255	; 0xff
 800f6ba:	f100 033c 	add.w	r3, r0, #60	; 0x3c
 800f6be:	f100 0250 	add.w	r2, r0, #80	; 0x50
 800f6c2:	f813 0b01 	ldrb.w	r0, [r3], #1
 800f6c6:	2806      	cmp	r0, #6
 800f6c8:	bf88      	it	hi
 800f6ca:	f803 1c01 	strbhi.w	r1, [r3, #-1]
 800f6ce:	429a      	cmp	r2, r3
 800f6d0:	d1f7      	bne.n	800f6c2 <DisplayUdf::Show()+0xe>
 800f6d2:	2501      	movs	r5, #1
 800f6d4:	4629      	mov	r1, r5
 800f6d6:	3501      	adds	r5, #1
 800f6d8:	69a0      	ldr	r0, [r4, #24]
 800f6da:	b2ed      	uxtb	r5, r5
 800f6dc:	f7ff feee 	bl	800f4bc <Display::ClearLine(unsigned char) [clone .isra.0]>
 800f6e0:	2d06      	cmp	r5, #6
 800f6e2:	d1f7      	bne.n	800f6d4 <DisplayUdf::Show()+0x20>
 800f6e4:	f894 103c 	ldrb.w	r1, [r4, #60]	; 0x3c
 800f6e8:	69a0      	ldr	r0, [r4, #24]
 800f6ea:	f104 021c 	add.w	r2, r4, #28
 800f6ee:	f7ff fed3 	bl	800f498 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 800f6f2:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 800f6f6:	69a0      	ldr	r0, [r4, #24]
 800f6f8:	4a0d      	ldr	r2, [pc, #52]	; (800f730 <DisplayUdf::Show()+0x7c>)
 800f6fa:	f7ff fecd 	bl	800f498 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 800f6fe:	4b0d      	ldr	r3, [pc, #52]	; (800f734 <DisplayUdf::Show()+0x80>)
 800f700:	4a0d      	ldr	r2, [pc, #52]	; (800f738 <DisplayUdf::Show()+0x84>)
 800f702:	f894 103f 	ldrb.w	r1, [r4, #63]	; 0x3f
 800f706:	9300      	str	r3, [sp, #0]
 800f708:	4620      	mov	r0, r4
 800f70a:	2303      	movs	r3, #3
 800f70c:	f7ff fedb 	bl	800f4c6 <Display::Printf(unsigned char, char const*, ...)>
 800f710:	4620      	mov	r0, r4
 800f712:	f7ff ff49 	bl	800f5a8 <DisplayUdf::ShowIpAddress()>
 800f716:	4620      	mov	r0, r4
 800f718:	f7ff ff98 	bl	800f64c <DisplayUdf::ShowGatewayIp()>
 800f71c:	4620      	mov	r0, r4
 800f71e:	f7ff ff77 	bl	800f610 <DisplayUdf::ShowNetmask()>
 800f722:	4620      	mov	r0, r4
 800f724:	b003      	add	sp, #12
 800f726:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800f72a:	f7ff bfaf 	b.w	800f68c <DisplayUdf::ShowHostName()>
 800f72e:	bf00      	nop
 800f730:	08013b98 	stmdaeq	r1, {r3, r4, r7, r8, r9, fp, ip, sp}
 800f734:	2000d1f0 	strdcs	sp, [r0], -r0
 800f738:	08014cfd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, sl, fp, lr}

0800f73c <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)>:
 800f73c:	3901      	subs	r1, #1
 800f73e:	b510      	push	{r4, lr}
 800f740:	4604      	mov	r4, r0
 800f742:	2903      	cmp	r1, #3
 800f744:	d814      	bhi.n	800f770 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x34>
 800f746:	e8df f001 	tbb	[pc, r1]
 800f74a:	281b1402 	ldmdacs	fp, {r1, sl, ip}
 800f74e:	4b14      	ldr	r3, [pc, #80]	; (800f7a0 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 800f750:	f44f 41b6 	mov.w	r1, #23296	; 0x5b00
 800f754:	6818      	ldr	r0, [r3, #0]
 800f756:	f7ff fed2 	bl	800f4fe <Display::Status(Display7SegmentMessage)>
 800f75a:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 800f75e:	69a0      	ldr	r0, [r4, #24]
 800f760:	f7ff feac 	bl	800f4bc <Display::ClearLine(unsigned char) [clone .isra.0]>
 800f764:	4a0f      	ldr	r2, [pc, #60]	; (800f7a4 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x68>)
 800f766:	4620      	mov	r0, r4
 800f768:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 800f76c:	f7ff feab 	bl	800f4c6 <Display::Printf(unsigned char, char const*, ...)>
 800f770:	bd10      	pop	{r4, pc}
 800f772:	f248 0180 	movw	r1, #32896	; 0x8080
 800f776:	4b0a      	ldr	r3, [pc, #40]	; (800f7a0 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 800f778:	6818      	ldr	r0, [r3, #0]
 800f77a:	f7ff fec0 	bl	800f4fe <Display::Status(Display7SegmentMessage)>
 800f77e:	e7f7      	b.n	800f770 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x34>
 800f780:	4b07      	ldr	r3, [pc, #28]	; (800f7a0 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 800f782:	f44f 41b6 	mov.w	r1, #23296	; 0x5b00
 800f786:	6818      	ldr	r0, [r3, #0]
 800f788:	f7ff feb9 	bl	800f4fe <Display::Status(Display7SegmentMessage)>
 800f78c:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 800f790:	69a0      	ldr	r0, [r4, #24]
 800f792:	f7ff fe93 	bl	800f4bc <Display::ClearLine(unsigned char) [clone .isra.0]>
 800f796:	4a04      	ldr	r2, [pc, #16]	; (800f7a8 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x6c>)
 800f798:	e7e5      	b.n	800f766 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x2a>
 800f79a:	f645 3179 	movw	r1, #23417	; 0x5b79
 800f79e:	e7ea      	b.n	800f776 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x3a>
 800f7a0:	2000d160 	andcs	sp, r0, r0, ror #2
 800f7a4:	08014d0c 	stmdaeq	r1, {r2, r3, r8, sl, fp, lr}
 800f7a8:	08014d1a 	stmdaeq	r1, {r1, r3, r4, r8, sl, fp, lr}

0800f7ac <DisplayUdf::ShowShutdown()>:
 800f7ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f7b0:	4604      	mov	r4, r0
 800f7b2:	6980      	ldr	r0, [r0, #24]
 800f7b4:	b308      	cbz	r0, 800f7fa <DisplayUdf::ShowShutdown()+0x4e>
 800f7b6:	f890 8005 	ldrb.w	r8, [r0, #5]
 800f7ba:	6803      	ldr	r3, [r0, #0]
 800f7bc:	f108 35ff 	add.w	r5, r8, #4294967295	; 0xffffffff
 800f7c0:	b2ed      	uxtb	r5, r5
 800f7c2:	462a      	mov	r2, r5
 800f7c4:	2100      	movs	r1, #0
 800f7c6:	6a1b      	ldr	r3, [r3, #32]
 800f7c8:	7907      	ldrb	r7, [r0, #4]
 800f7ca:	2600      	movs	r6, #0
 800f7cc:	4798      	blx	r3
 800f7ce:	3f01      	subs	r7, #1
 800f7d0:	42b7      	cmp	r7, r6
 800f7d2:	69a0      	ldr	r0, [r4, #24]
 800f7d4:	d906      	bls.n	800f7e4 <DisplayUdf::ShowShutdown()+0x38>
 800f7d6:	b118      	cbz	r0, 800f7e0 <DisplayUdf::ShowShutdown()+0x34>
 800f7d8:	6803      	ldr	r3, [r0, #0]
 800f7da:	2120      	movs	r1, #32
 800f7dc:	695b      	ldr	r3, [r3, #20]
 800f7de:	4798      	blx	r3
 800f7e0:	3601      	adds	r6, #1
 800f7e2:	e7f5      	b.n	800f7d0 <DisplayUdf::ShowShutdown()+0x24>
 800f7e4:	b120      	cbz	r0, 800f7f0 <DisplayUdf::ShowShutdown()+0x44>
 800f7e6:	6803      	ldr	r3, [r0, #0]
 800f7e8:	462a      	mov	r2, r5
 800f7ea:	2100      	movs	r1, #0
 800f7ec:	6a1b      	ldr	r3, [r3, #32]
 800f7ee:	4798      	blx	r3
 800f7f0:	4641      	mov	r1, r8
 800f7f2:	4a05      	ldr	r2, [pc, #20]	; (800f808 <DisplayUdf::ShowShutdown()+0x5c>)
 800f7f4:	69a0      	ldr	r0, [r4, #24]
 800f7f6:	f7ff fe4f 	bl	800f498 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 800f7fa:	f44f 41de 	mov.w	r1, #28416	; 0x6f00
 800f7fe:	4620      	mov	r0, r4
 800f800:	f7ff fe7d 	bl	800f4fe <Display::Status(Display7SegmentMessage)>
 800f804:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f808:	08014d28 	stmdaeq	r1, {r3, r5, r8, sl, fp, lr}

0800f80c <DisplayUdf::Set(unsigned char, displayudf::Labels)>:
 800f80c:	1e4b      	subs	r3, r1, #1
 800f80e:	2b05      	cmp	r3, #5
 800f810:	b530      	push	{r4, r5, lr}
 800f812:	d80f      	bhi.n	800f834 <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x28>
 800f814:	2300      	movs	r3, #0
 800f816:	f100 043c 	add.w	r4, r0, #60	; 0x3c
 800f81a:	f814 5b01 	ldrb.w	r5, [r4], #1
 800f81e:	428d      	cmp	r5, r1
 800f820:	d109      	bne.n	800f836 <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x2a>
 800f822:	1884      	adds	r4, r0, r2
 800f824:	f894 403c 	ldrb.w	r4, [r4, #60]	; 0x3c
 800f828:	4403      	add	r3, r0
 800f82a:	f883 403c 	strb.w	r4, [r3, #60]	; 0x3c
 800f82e:	4410      	add	r0, r2
 800f830:	f880 103c 	strb.w	r1, [r0, #60]	; 0x3c
 800f834:	bd30      	pop	{r4, r5, pc}
 800f836:	3301      	adds	r3, #1
 800f838:	2b14      	cmp	r3, #20
 800f83a:	d1ee      	bne.n	800f81a <DisplayUdf::Set(unsigned char, displayudf::Labels)+0xe>
 800f83c:	e7f7      	b.n	800f82e <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x22>
	...

0800f840 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>:
 800f840:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800f842:	88c5      	ldrh	r5, [r0, #6]
 800f844:	8886      	ldrh	r6, [r0, #4]
 800f846:	42b5      	cmp	r5, r6
 800f848:	d216      	bcs.n	800f878 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x38>
 800f84a:	4604      	mov	r4, r0
 800f84c:	6800      	ldr	r0, [r0, #0]
 800f84e:	4428      	add	r0, r5
 800f850:	1b75      	subs	r5, r6, r5
 800f852:	7a26      	ldrb	r6, [r4, #8]
 800f854:	b923      	cbnz	r3, 800f860 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x20>
 800f856:	b926      	cbnz	r6, 800f862 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x22>
 800f858:	9200      	str	r2, [sp, #0]
 800f85a:	460b      	mov	r3, r1
 800f85c:	4a09      	ldr	r2, [pc, #36]	; (800f884 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x44>)
 800f85e:	e003      	b.n	800f868 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 800f860:	b166      	cbz	r6, 800f87c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x3c>
 800f862:	460b      	mov	r3, r1
 800f864:	9200      	str	r2, [sp, #0]
 800f866:	4a08      	ldr	r2, [pc, #32]	; (800f888 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x48>)
 800f868:	4629      	mov	r1, r5
 800f86a:	f001 fd17 	bl	801129c <snprintf>
 800f86e:	4285      	cmp	r5, r0
 800f870:	bfa2      	ittt	ge
 800f872:	88e3      	ldrhge	r3, [r4, #6]
 800f874:	181b      	addge	r3, r3, r0
 800f876:	80e3      	strhge	r3, [r4, #6]
 800f878:	b002      	add	sp, #8
 800f87a:	bd70      	pop	{r4, r5, r6, pc}
 800f87c:	9200      	str	r2, [sp, #0]
 800f87e:	460b      	mov	r3, r1
 800f880:	4a02      	ldr	r2, [pc, #8]	; (800f88c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x4c>)
 800f882:	e7f1      	b.n	800f868 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 800f884:	0801383d 	stmdaeq	r1, {r0, r2, r3, r4, r5, fp, ip, sp}
 800f888:	08013834 	stmdaeq	r1, {r2, r4, r5, fp, ip, sp}
 800f88c:	0801383e 	stmdaeq	r1, {r1, r2, r3, r4, r5, fp, ip, sp}

0800f890 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>:
 800f890:	b510      	push	{r4, lr}
 800f892:	2220      	movs	r2, #32
 800f894:	4604      	mov	r4, r0
 800f896:	f840 1b04 	str.w	r1, [r0], #4
 800f89a:	2100      	movs	r1, #0
 800f89c:	f001 f9a6 	bl	8010bec <memset>
 800f8a0:	f647 7305 	movw	r3, #32517	; 0x7f05
 800f8a4:	4620      	mov	r0, r4
 800f8a6:	84a3      	strh	r3, [r4, #36]	; 0x24
 800f8a8:	bd10      	pop	{r4, pc}

0800f8aa <DisplayUdfParams::Load()>:
 800f8aa:	b508      	push	{r3, lr}
 800f8ac:	2300      	movs	r3, #0
 800f8ae:	4601      	mov	r1, r0
 800f8b0:	6043      	str	r3, [r0, #4]
 800f8b2:	6800      	ldr	r0, [r0, #0]
 800f8b4:	b120      	cbz	r0, 800f8c0 <DisplayUdfParams::Load()+0x16>
 800f8b6:	6803      	ldr	r3, [r0, #0]
 800f8b8:	3104      	adds	r1, #4
 800f8ba:	68db      	ldr	r3, [r3, #12]
 800f8bc:	4798      	blx	r3
 800f8be:	2001      	movs	r0, #1
 800f8c0:	bd08      	pop	{r3, pc}
	...

0800f8c4 <DisplayUdfParams::Load(char const*, unsigned int)>:
 800f8c4:	6803      	ldr	r3, [r0, #0]
 800f8c6:	b1d3      	cbz	r3, 800f8fe <DisplayUdfParams::Load(char const*, unsigned int)+0x3a>
 800f8c8:	2300      	movs	r3, #0
 800f8ca:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800f8cc:	460d      	mov	r5, r1
 800f8ce:	4616      	mov	r6, r2
 800f8d0:	4604      	mov	r4, r0
 800f8d2:	6043      	str	r3, [r0, #4]
 800f8d4:	4602      	mov	r2, r0
 800f8d6:	490a      	ldr	r1, [pc, #40]	; (800f900 <DisplayUdfParams::Load(char const*, unsigned int)+0x3c>)
 800f8d8:	4668      	mov	r0, sp
 800f8da:	f000 fb19 	bl	800ff10 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800f8de:	4632      	mov	r2, r6
 800f8e0:	4629      	mov	r1, r5
 800f8e2:	4668      	mov	r0, sp
 800f8e4:	f000 fb18 	bl	800ff18 <ReadConfigFile::Read(char const*, unsigned int)>
 800f8e8:	4621      	mov	r1, r4
 800f8ea:	f851 0b04 	ldr.w	r0, [r1], #4
 800f8ee:	6803      	ldr	r3, [r0, #0]
 800f8f0:	689b      	ldr	r3, [r3, #8]
 800f8f2:	4798      	blx	r3
 800f8f4:	4668      	mov	r0, sp
 800f8f6:	f000 fb0e 	bl	800ff16 <ReadConfigFile::~ReadConfigFile()>
 800f8fa:	b002      	add	sp, #8
 800f8fc:	bd70      	pop	{r4, r5, r6, pc}
 800f8fe:	4770      	bx	lr
 800f900:	0800f9c9 	stmdaeq	r0, {r0, r3, r6, r7, r8, fp, ip, sp, lr, pc}

0800f904 <DisplayUdfParams::callbackFunction(char const*)>:
 800f904:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f906:	460e      	mov	r6, r1
 800f908:	4604      	mov	r4, r0
 800f90a:	492b      	ldr	r1, [pc, #172]	; (800f9b8 <DisplayUdfParams::callbackFunction(char const*)+0xb4>)
 800f90c:	4630      	mov	r0, r6
 800f90e:	f10d 0207 	add.w	r2, sp, #7
 800f912:	f000 fc0f 	bl	8010134 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800f916:	b968      	cbnz	r0, 800f934 <DisplayUdfParams::callbackFunction(char const*)+0x30>
 800f918:	f89d 2007 	ldrb.w	r2, [sp, #7]
 800f91c:	6863      	ldr	r3, [r4, #4]
 800f91e:	2a7f      	cmp	r2, #127	; 0x7f
 800f920:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
 800f924:	bf14      	ite	ne
 800f926:	f043 5300 	orrne.w	r3, r3, #536870912	; 0x20000000
 800f92a:	f023 5300 	biceq.w	r3, r3, #536870912	; 0x20000000
 800f92e:	6063      	str	r3, [r4, #4]
 800f930:	b003      	add	sp, #12
 800f932:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f934:	4630      	mov	r0, r6
 800f936:	4921      	ldr	r1, [pc, #132]	; (800f9bc <DisplayUdfParams::callbackFunction(char const*)+0xb8>)
 800f938:	f10d 0207 	add.w	r2, sp, #7
 800f93c:	f000 fbfa 	bl	8010134 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800f940:	b958      	cbnz	r0, 800f95a <DisplayUdfParams::callbackFunction(char const*)+0x56>
 800f942:	f89d 2007 	ldrb.w	r2, [sp, #7]
 800f946:	6863      	ldr	r3, [r4, #4]
 800f948:	2a05      	cmp	r2, #5
 800f94a:	f884 2024 	strb.w	r2, [r4, #36]	; 0x24
 800f94e:	bf14      	ite	ne
 800f950:	f043 5380 	orrne.w	r3, r3, #268435456	; 0x10000000
 800f954:	f023 5380 	biceq.w	r3, r3, #268435456	; 0x10000000
 800f958:	e7e9      	b.n	800f92e <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 800f95a:	4630      	mov	r0, r6
 800f95c:	4918      	ldr	r1, [pc, #96]	; (800f9c0 <DisplayUdfParams::callbackFunction(char const*)+0xbc>)
 800f95e:	f10d 0207 	add.w	r2, sp, #7
 800f962:	f000 fbe7 	bl	8010134 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800f966:	b948      	cbnz	r0, 800f97c <DisplayUdfParams::callbackFunction(char const*)+0x78>
 800f968:	f89d 2007 	ldrb.w	r2, [sp, #7]
 800f96c:	6863      	ldr	r3, [r4, #4]
 800f96e:	b112      	cbz	r2, 800f976 <DisplayUdfParams::callbackFunction(char const*)+0x72>
 800f970:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 800f974:	e7db      	b.n	800f92e <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 800f976:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 800f97a:	e7d8      	b.n	800f92e <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 800f97c:	2500      	movs	r5, #0
 800f97e:	4f11      	ldr	r7, [pc, #68]	; (800f9c4 <DisplayUdfParams::callbackFunction(char const*)+0xc0>)
 800f980:	4630      	mov	r0, r6
 800f982:	f857 1b04 	ldr.w	r1, [r7], #4
 800f986:	f10d 0207 	add.w	r2, sp, #7
 800f98a:	f000 fbd3 	bl	8010134 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800f98e:	b978      	cbnz	r0, 800f9b0 <DisplayUdfParams::callbackFunction(char const*)+0xac>
 800f990:	2301      	movs	r3, #1
 800f992:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800f996:	6862      	ldr	r2, [r4, #4]
 800f998:	1e4e      	subs	r6, r1, #1
 800f99a:	2e05      	cmp	r6, #5
 800f99c:	fa03 f305 	lsl.w	r3, r3, r5
 800f9a0:	4425      	add	r5, r4
 800f9a2:	bf99      	ittee	ls
 800f9a4:	7229      	strbls	r1, [r5, #8]
 800f9a6:	4313      	orrls	r3, r2
 800f9a8:	7228      	strbhi	r0, [r5, #8]
 800f9aa:	ea22 0303 	bichi.w	r3, r2, r3
 800f9ae:	e7be      	b.n	800f92e <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 800f9b0:	3501      	adds	r5, #1
 800f9b2:	2d14      	cmp	r5, #20
 800f9b4:	d1e4      	bne.n	800f980 <DisplayUdfParams::callbackFunction(char const*)+0x7c>
 800f9b6:	e7bb      	b.n	800f930 <DisplayUdfParams::callbackFunction(char const*)+0x2c>
 800f9b8:	08014dea 	stmdaeq	r1, {r1, r3, r5, r6, r7, r8, sl, fp, lr}
 800f9bc:	08014db2 	stmdaeq	r1, {r1, r4, r5, r7, r8, sl, fp, lr}
 800f9c0:	08014dc0 	stmdaeq	r1, {r6, r7, r8, sl, fp, lr}
 800f9c4:	08014d3c 	stmdaeq	r1, {r2, r3, r4, r5, r8, sl, fp, lr}

0800f9c8 <DisplayUdfParams::staticCallbackFunction(void*, char const*)>:
 800f9c8:	f7ff bf9c 	b.w	800f904 <DisplayUdfParams::callbackFunction(char const*)>

0800f9cc <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)>:
 800f9cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f9d0:	4604      	mov	r4, r0
 800f9d2:	4615      	mov	r5, r2
 800f9d4:	461e      	mov	r6, r3
 800f9d6:	b086      	sub	sp, #24
 800f9d8:	3004      	adds	r0, #4
 800f9da:	b379      	cbz	r1, 800fa3c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x70>
 800f9dc:	2222      	movs	r2, #34	; 0x22
 800f9de:	f001 f8ee 	bl	8010bbe <memmove>
 800f9e2:	462a      	mov	r2, r5
 800f9e4:	4633      	mov	r3, r6
 800f9e6:	493d      	ldr	r1, [pc, #244]	; (800fadc <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x110>)
 800f9e8:	a803      	add	r0, sp, #12
 800f9ea:	f000 f9f1 	bl	800fdd0 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800f9ee:	6863      	ldr	r3, [r4, #4]
 800f9f0:	f894 2025 	ldrb.w	r2, [r4, #37]	; 0x25
 800f9f4:	493a      	ldr	r1, [pc, #232]	; (800fae0 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x114>)
 800f9f6:	f3c3 7340 	ubfx	r3, r3, #29, #1
 800f9fa:	a803      	add	r0, sp, #12
 800f9fc:	f7ff ff20 	bl	800f840 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800fa00:	6863      	ldr	r3, [r4, #4]
 800fa02:	4938      	ldr	r1, [pc, #224]	; (800fae4 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x118>)
 800fa04:	f894 2024 	ldrb.w	r2, [r4, #36]	; 0x24
 800fa08:	f3c3 7300 	ubfx	r3, r3, #28, #1
 800fa0c:	a803      	add	r0, sp, #12
 800fa0e:	f7ff ff17 	bl	800f840 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800fa12:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 800fa16:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800fa1a:	42a9      	cmp	r1, r5
 800fa1c:	d227      	bcs.n	800fa6e <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xa2>
 800fa1e:	6863      	ldr	r3, [r4, #4]
 800fa20:	9803      	ldr	r0, [sp, #12]
 800fa22:	f013 4380 	ands.w	r3, r3, #1073741824	; 0x40000000
 800fa26:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800fa2a:	4408      	add	r0, r1
 800fa2c:	eba5 0501 	sub.w	r5, r5, r1
 800fa30:	d10b      	bne.n	800fa4a <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x7e>
 800fa32:	b962      	cbnz	r2, 800fa4e <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x82>
 800fa34:	9200      	str	r2, [sp, #0]
 800fa36:	4b2c      	ldr	r3, [pc, #176]	; (800fae8 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>)
 800fa38:	4a2c      	ldr	r2, [pc, #176]	; (800faec <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x120>)
 800fa3a:	e00e      	b.n	800fa5a <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x8e>
 800fa3c:	6823      	ldr	r3, [r4, #0]
 800fa3e:	4601      	mov	r1, r0
 800fa40:	681a      	ldr	r2, [r3, #0]
 800fa42:	4618      	mov	r0, r3
 800fa44:	68d2      	ldr	r2, [r2, #12]
 800fa46:	4790      	blx	r2
 800fa48:	e7cb      	b.n	800f9e2 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x16>
 800fa4a:	2a00      	cmp	r2, #0
 800fa4c:	d041      	beq.n	800fad2 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x106>
 800fa4e:	3b00      	subs	r3, #0
 800fa50:	bf18      	it	ne
 800fa52:	2301      	movne	r3, #1
 800fa54:	4a26      	ldr	r2, [pc, #152]	; (800faf0 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x124>)
 800fa56:	9300      	str	r3, [sp, #0]
 800fa58:	4b23      	ldr	r3, [pc, #140]	; (800fae8 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>)
 800fa5a:	4629      	mov	r1, r5
 800fa5c:	f001 fc1e 	bl	801129c <snprintf>
 800fa60:	4285      	cmp	r5, r0
 800fa62:	bfa2      	ittt	ge
 800fa64:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800fa68:	181b      	addge	r3, r3, r0
 800fa6a:	f8ad 3012 	strhge.w	r3, [sp, #18]
 800fa6e:	2500      	movs	r5, #0
 800fa70:	2701      	movs	r7, #1
 800fa72:	4e20      	ldr	r6, [pc, #128]	; (800faf4 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x128>)
 800fa74:	f104 0808 	add.w	r8, r4, #8
 800fa78:	f856 1b04 	ldr.w	r1, [r6], #4
 800fa7c:	780b      	ldrb	r3, [r1, #0]
 800fa7e:	b15b      	cbz	r3, 800fa98 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xcc>
 800fa80:	6862      	ldr	r2, [r4, #4]
 800fa82:	fa07 f305 	lsl.w	r3, r7, r5
 800fa86:	4393      	bics	r3, r2
 800fa88:	bf0c      	ite	eq
 800fa8a:	2301      	moveq	r3, #1
 800fa8c:	2300      	movne	r3, #0
 800fa8e:	f818 2005 	ldrb.w	r2, [r8, r5]
 800fa92:	a803      	add	r0, sp, #12
 800fa94:	f7ff fed4 	bl	800f840 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800fa98:	3501      	adds	r5, #1
 800fa9a:	2d14      	cmp	r5, #20
 800fa9c:	d1ec      	bne.n	800fa78 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xac>
 800fa9e:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800faa2:	b17b      	cbz	r3, 800fac4 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xf8>
 800faa4:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800faa8:	9b03      	ldr	r3, [sp, #12]
 800faaa:	4413      	add	r3, r2
 800faac:	227d      	movs	r2, #125	; 0x7d
 800faae:	f803 2c01 	strb.w	r2, [r3, #-1]
 800fab2:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800fab6:	9903      	ldr	r1, [sp, #12]
 800fab8:	54ca      	strb	r2, [r1, r3]
 800faba:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800fabe:	3301      	adds	r3, #1
 800fac0:	f8ad 3012 	strh.w	r3, [sp, #18]
 800fac4:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800fac8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800faca:	601a      	str	r2, [r3, #0]
 800facc:	b006      	add	sp, #24
 800face:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800fad2:	2301      	movs	r3, #1
 800fad4:	4a08      	ldr	r2, [pc, #32]	; (800faf8 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x12c>)
 800fad6:	9300      	str	r3, [sp, #0]
 800fad8:	4b03      	ldr	r3, [pc, #12]	; (800fae8 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>)
 800fada:	e7be      	b.n	800fa5a <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x8e>
 800fadc:	08014dde 	stmdaeq	r1, {r1, r2, r3, r4, r6, r7, r8, sl, fp, lr}
 800fae0:	08014dea 	stmdaeq	r1, {r1, r3, r5, r6, r7, r8, sl, fp, lr}
 800fae4:	08014db2 	stmdaeq	r1, {r1, r4, r5, r7, r8, sl, fp, lr}
 800fae8:	08014dc0 	stmdaeq	r1, {r6, r7, r8, sl, fp, lr}
 800faec:	0801383d 	stmdaeq	r1, {r0, r2, r3, r4, r5, fp, ip, sp}
 800faf0:	08013834 	stmdaeq	r1, {r2, r4, r5, fp, ip, sp}
 800faf4:	08014d3c 	stmdaeq	r1, {r2, r3, r4, r5, r8, sl, fp, lr}
 800faf8:	0801383e 	stmdaeq	r1, {r1, r2, r3, r4, r5, fp, ip, sp}

0800fafc <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)>:
 800fafc:	b513      	push	{r0, r1, r4, lr}
 800fafe:	6804      	ldr	r4, [r0, #0]
 800fb00:	b914      	cbnz	r4, 800fb08 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800fb02:	601c      	str	r4, [r3, #0]
 800fb04:	b002      	add	sp, #8
 800fb06:	bd10      	pop	{r4, pc}
 800fb08:	9300      	str	r3, [sp, #0]
 800fb0a:	4613      	mov	r3, r2
 800fb0c:	460a      	mov	r2, r1
 800fb0e:	2100      	movs	r1, #0
 800fb10:	f7ff ff5c 	bl	800f9cc <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)>
 800fb14:	e7f6      	b.n	800fb04 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800fb16 <DisplayUdfParams::Set(DisplayUdf*)>:
 800fb16:	6843      	ldr	r3, [r0, #4]
 800fb18:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fb1c:	009a      	lsls	r2, r3, #2
 800fb1e:	4604      	mov	r4, r0
 800fb20:	460e      	mov	r6, r1
 800fb22:	d506      	bpl.n	800fb32 <DisplayUdfParams::Set(DisplayUdf*)+0x1c>
 800fb24:	6988      	ldr	r0, [r1, #24]
 800fb26:	b120      	cbz	r0, 800fb32 <DisplayUdfParams::Set(DisplayUdf*)+0x1c>
 800fb28:	6803      	ldr	r3, [r0, #0]
 800fb2a:	f894 1025 	ldrb.w	r1, [r4, #37]	; 0x25
 800fb2e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fb30:	4798      	blx	r3
 800fb32:	6863      	ldr	r3, [r4, #4]
 800fb34:	69b0      	ldr	r0, [r6, #24]
 800fb36:	00db      	lsls	r3, r3, #3
 800fb38:	bf41      	itttt	mi
 800fb3a:	f64e 2260 	movwmi	r2, #60000	; 0xea60
 800fb3e:	f894 3024 	ldrbmi.w	r3, [r4, #36]	; 0x24
 800fb42:	4353      	mulmi	r3, r2
 800fb44:	6173      	strmi	r3, [r6, #20]
 800fb46:	6861      	ldr	r1, [r4, #4]
 800fb48:	f3c1 7180 	ubfx	r1, r1, #30, #1
 800fb4c:	b110      	cbz	r0, 800fb54 <DisplayUdfParams::Set(DisplayUdf*)+0x3e>
 800fb4e:	6803      	ldr	r3, [r0, #0]
 800fb50:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800fb52:	4798      	blx	r3
 800fb54:	2500      	movs	r5, #0
 800fb56:	2701      	movs	r7, #1
 800fb58:	f104 0808 	add.w	r8, r4, #8
 800fb5c:	6862      	ldr	r2, [r4, #4]
 800fb5e:	fa07 f305 	lsl.w	r3, r7, r5
 800fb62:	4393      	bics	r3, r2
 800fb64:	d105      	bne.n	800fb72 <DisplayUdfParams::Set(DisplayUdf*)+0x5c>
 800fb66:	462a      	mov	r2, r5
 800fb68:	4630      	mov	r0, r6
 800fb6a:	f818 1005 	ldrb.w	r1, [r8, r5]
 800fb6e:	f7ff fe4d 	bl	800f80c <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 800fb72:	3501      	adds	r5, #1
 800fb74:	2d14      	cmp	r5, #20
 800fb76:	d1f1      	bne.n	800fb5c <DisplayUdfParams::Set(DisplayUdf*)+0x46>
 800fb78:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800fb7c <DisplayUdfParams::Dump()>:
 800fb7c:	4770      	bx	lr
	...

0800fb80 <DisplayUdf::Show(E131Bridge*)>:
 800fb80:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fb84:	460e      	mov	r6, r1
 800fb86:	4604      	mov	r4, r0
 800fb88:	b085      	sub	sp, #20
 800fb8a:	f7ff fd93 	bl	800f6b4 <DisplayUdf::Show()>
 800fb8e:	f896 250b 	ldrb.w	r2, [r6, #1291]	; 0x50b
 800fb92:	f896 350a 	ldrb.w	r3, [r6, #1290]	; 0x50a
 800fb96:	4620      	mov	r0, r4
 800fb98:	4413      	add	r3, r2
 800fb9a:	f894 1041 	ldrb.w	r1, [r4, #65]	; 0x41
 800fb9e:	4a21      	ldr	r2, [pc, #132]	; (800fc24 <DisplayUdf::Show(E131Bridge*)+0xa4>)
 800fba0:	f7ff fc91 	bl	800f4c6 <Display::Printf(unsigned char, char const*, ...)>
 800fba4:	2500      	movs	r5, #0
 800fba6:	4f20      	ldr	r7, [pc, #128]	; (800fc28 <DisplayUdf::Show(E131Bridge*)+0xa8>)
 800fba8:	f8df 8080 	ldr.w	r8, [pc, #128]	; 800fc2c <DisplayUdf::Show(E131Bridge*)+0xac>
 800fbac:	f8df 9080 	ldr.w	r9, [pc, #128]	; 800fc30 <DisplayUdf::Show(E131Bridge*)+0xb0>
 800fbb0:	2301      	movs	r3, #1
 800fbb2:	4629      	mov	r1, r5
 800fbb4:	4630      	mov	r0, r6
 800fbb6:	f10d 020e 	add.w	r2, sp, #14
 800fbba:	f7fa feef 	bl	800a99c <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 800fbbe:	b1a8      	cbz	r0, 800fbec <DisplayUdf::Show(E131Bridge*)+0x6c>
 800fbc0:	2344      	movs	r3, #68	; 0x44
 800fbc2:	436b      	muls	r3, r5
 800fbc4:	f206 524c 	addw	r2, r6, #1356	; 0x54c
 800fbc8:	58d2      	ldr	r2, [r2, r3]
 800fbca:	f8bd 000e 	ldrh.w	r0, [sp, #14]
 800fbce:	2a00      	cmp	r2, #0
 800fbd0:	bf0c      	ite	eq
 800fbd2:	463b      	moveq	r3, r7
 800fbd4:	4643      	movne	r3, r8
 800fbd6:	e9cd 0300 	strd	r0, r3, [sp]
 800fbda:	f104 0144 	add.w	r1, r4, #68	; 0x44
 800fbde:	464a      	mov	r2, r9
 800fbe0:	4620      	mov	r0, r4
 800fbe2:	5d49      	ldrb	r1, [r1, r5]
 800fbe4:	f105 0341 	add.w	r3, r5, #65	; 0x41
 800fbe8:	f7ff fc6d 	bl	800f4c6 <Display::Printf(unsigned char, char const*, ...)>
 800fbec:	3501      	adds	r5, #1
 800fbee:	2d04      	cmp	r5, #4
 800fbf0:	d1de      	bne.n	800fbb0 <DisplayUdf::Show(E131Bridge*)+0x30>
 800fbf2:	6d22      	ldr	r2, [r4, #80]	; 0x50
 800fbf4:	f894 104f 	ldrb.w	r1, [r4, #79]	; 0x4f
 800fbf8:	2a02      	cmp	r2, #2
 800fbfa:	d001      	beq.n	800fc00 <DisplayUdf::Show(E131Bridge*)+0x80>
 800fbfc:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800fbfe:	b933      	cbnz	r3, 800fc0e <DisplayUdf::Show(E131Bridge*)+0x8e>
 800fc00:	4620      	mov	r0, r4
 800fc02:	4a0c      	ldr	r2, [pc, #48]	; (800fc34 <DisplayUdf::Show(E131Bridge*)+0xb4>)
 800fc04:	f7ff fc5f 	bl	800f4c6 <Display::Printf(unsigned char, char const*, ...)>
 800fc08:	b005      	add	sp, #20
 800fc0a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800fc0e:	480a      	ldr	r0, [pc, #40]	; (800fc38 <DisplayUdf::Show(E131Bridge*)+0xb8>)
 800fc10:	9300      	str	r3, [sp, #0]
 800fc12:	4b0a      	ldr	r3, [pc, #40]	; (800fc3c <DisplayUdf::Show(E131Bridge*)+0xbc>)
 800fc14:	2a00      	cmp	r2, #0
 800fc16:	bf08      	it	eq
 800fc18:	4603      	moveq	r3, r0
 800fc1a:	4620      	mov	r0, r4
 800fc1c:	4a08      	ldr	r2, [pc, #32]	; (800fc40 <DisplayUdf::Show(E131Bridge*)+0xc0>)
 800fc1e:	f7ff fc52 	bl	800f4c6 <Display::Printf(unsigned char, char const*, ...)>
 800fc22:	e7f1      	b.n	800fc08 <DisplayUdf::Show(E131Bridge*)+0x88>
 800fc24:	08014df4 	stmdaeq	r1, {r2, r4, r5, r6, r7, r8, sl, fp, lr}
 800fc28:	08014664 	stmdaeq	r1, {r2, r5, r6, r9, sl, lr}
 800fc2c:	08014668 	stmdaeq	r1, {r3, r5, r6, r9, sl, lr}
 800fc30:	08014dfb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r7, r8, sl, fp, lr}
 800fc34:	08014e0a 	stmdaeq	r1, {r1, r3, r9, sl, fp, lr}
 800fc38:	08014762 	stmdaeq	r1, {r1, r5, r6, r8, r9, sl, lr}
 800fc3c:	08014757 	stmdaeq	r1, {r0, r1, r2, r4, r6, r8, r9, sl, lr}
 800fc40:	08014e11 	stmdaeq	r1, {r0, r4, r9, sl, fp, lr}

0800fc44 <NetworkDisplay::ShowEmacStart()>:
 800fc44:	4b01      	ldr	r3, [pc, #4]	; (800fc4c <NetworkDisplay::ShowEmacStart()+0x8>)
 800fc46:	6818      	ldr	r0, [r3, #0]
 800fc48:	f7ff bc9e 	b.w	800f588 <DisplayUdf::ShowEmacStart()>
 800fc4c:	2000d158 	andcs	sp, r0, r8, asr r1

0800fc50 <NetworkDisplay::ShowIp()>:
 800fc50:	4b01      	ldr	r3, [pc, #4]	; (800fc58 <NetworkDisplay::ShowIp()+0x8>)
 800fc52:	6818      	ldr	r0, [r3, #0]
 800fc54:	f7ff bca8 	b.w	800f5a8 <DisplayUdf::ShowIpAddress()>
 800fc58:	2000d158 	andcs	sp, r0, r8, asr r1

0800fc5c <NetworkDisplay::ShowShutdown()>:
 800fc5c:	4b01      	ldr	r3, [pc, #4]	; (800fc64 <NetworkDisplay::ShowShutdown()+0x8>)
 800fc5e:	6818      	ldr	r0, [r3, #0]
 800fc60:	f7ff bda4 	b.w	800f7ac <DisplayUdf::ShowShutdown()>
 800fc64:	2000d158 	andcs	sp, r0, r8, asr r1

0800fc68 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>:
 800fc68:	4b01      	ldr	r3, [pc, #4]	; (800fc70 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)+0x8>)
 800fc6a:	6818      	ldr	r0, [r3, #0]
 800fc6c:	f7ff bd66 	b.w	800f73c <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)>
 800fc70:	2000d158 	andcs	sp, r0, r8, asr r1

0800fc74 <properties::convert_json_file(char*, unsigned short, bool)>:
 800fc74:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fc78:	7803      	ldrb	r3, [r0, #0]
 800fc7a:	2b7b      	cmp	r3, #123	; 0x7b
 800fc7c:	d170      	bne.n	800fd60 <properties::convert_json_file(char*, unsigned short, bool)+0xec>
 800fc7e:	b322      	cbz	r2, 800fcca <properties::convert_json_file(char*, unsigned short, bool)+0x56>
 800fc80:	2301      	movs	r3, #1
 800fc82:	4606      	mov	r6, r0
 800fc84:	461c      	mov	r4, r3
 800fc86:	2a00      	cmp	r2, #0
 800fc88:	bf0c      	ite	eq
 800fc8a:	f04f 0c0a 	moveq.w	ip, #10
 800fc8e:	f04f 0c00 	movne.w	ip, #0
 800fc92:	273d      	movs	r7, #61	; 0x3d
 800fc94:	4299      	cmp	r1, r3
 800fc96:	d960      	bls.n	800fd5a <properties::convert_json_file(char*, unsigned short, bool)+0xe6>
 800fc98:	4299      	cmp	r1, r3
 800fc9a:	4602      	mov	r2, r0
 800fc9c:	f890 e000 	ldrb.w	lr, [r0]
 800fca0:	f103 0301 	add.w	r3, r3, #1
 800fca4:	f100 0001 	add.w	r0, r0, #1
 800fca8:	d846      	bhi.n	800fd38 <properties::convert_json_file(char*, unsigned short, bool)+0xc4>
 800fcaa:	1aa0      	subs	r0, r4, r2
 800fcac:	4615      	mov	r5, r2
 800fcae:	1884      	adds	r4, r0, r2
 800fcb0:	f812 8b01 	ldrb.w	r8, [r2], #1
 800fcb4:	f103 0e01 	add.w	lr, r3, #1
 800fcb8:	f1b8 0f22 	cmp.w	r8, #34	; 0x22
 800fcbc:	d053      	beq.n	800fd66 <properties::convert_json_file(char*, unsigned short, bool)+0xf2>
 800fcbe:	4299      	cmp	r1, r3
 800fcc0:	d957      	bls.n	800fd72 <properties::convert_json_file(char*, unsigned short, bool)+0xfe>
 800fcc2:	4673      	mov	r3, lr
 800fcc4:	f806 8b01 	strb.w	r8, [r6], #1
 800fcc8:	e7f0      	b.n	800fcac <properties::convert_json_file(char*, unsigned short, bool)+0x38>
 800fcca:	2323      	movs	r3, #35	; 0x23
 800fccc:	f800 3b01 	strb.w	r3, [r0], #1
 800fcd0:	4605      	mov	r5, r0
 800fcd2:	2301      	movs	r3, #1
 800fcd4:	4299      	cmp	r1, r3
 800fcd6:	d92d      	bls.n	800fd34 <properties::convert_json_file(char*, unsigned short, bool)+0xc0>
 800fcd8:	f815 4b01 	ldrb.w	r4, [r5], #1
 800fcdc:	2c22      	cmp	r4, #34	; 0x22
 800fcde:	d001      	beq.n	800fce4 <properties::convert_json_file(char*, unsigned short, bool)+0x70>
 800fce0:	3301      	adds	r3, #1
 800fce2:	e7f7      	b.n	800fcd4 <properties::convert_json_file(char*, unsigned short, bool)+0x60>
 800fce4:	46ac      	mov	ip, r5
 800fce6:	4606      	mov	r6, r0
 800fce8:	2701      	movs	r7, #1
 800fcea:	f89c e000 	ldrb.w	lr, [ip]
 800fcee:	4665      	mov	r5, ip
 800fcf0:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 800fcf4:	4630      	mov	r0, r6
 800fcf6:	463c      	mov	r4, r7
 800fcf8:	f10c 0c01 	add.w	ip, ip, #1
 800fcfc:	f106 0601 	add.w	r6, r6, #1
 800fd00:	f107 0701 	add.w	r7, r7, #1
 800fd04:	d007      	beq.n	800fd16 <properties::convert_json_file(char*, unsigned short, bool)+0xa2>
 800fd06:	3301      	adds	r3, #1
 800fd08:	4299      	cmp	r1, r3
 800fd0a:	4665      	mov	r5, ip
 800fd0c:	f806 ec01 	strb.w	lr, [r6, #-1]
 800fd10:	d8eb      	bhi.n	800fcea <properties::convert_json_file(char*, unsigned short, bool)+0x76>
 800fd12:	463c      	mov	r4, r7
 800fd14:	4630      	mov	r0, r6
 800fd16:	4606      	mov	r6, r0
 800fd18:	200a      	movs	r0, #10
 800fd1a:	3401      	adds	r4, #1
 800fd1c:	f806 0b01 	strb.w	r0, [r6], #1
 800fd20:	4628      	mov	r0, r5
 800fd22:	f815 7b01 	ldrb.w	r7, [r5], #1
 800fd26:	2f7b      	cmp	r7, #123	; 0x7b
 800fd28:	d0ad      	beq.n	800fc86 <properties::convert_json_file(char*, unsigned short, bool)+0x12>
 800fd2a:	1c5f      	adds	r7, r3, #1
 800fd2c:	4299      	cmp	r1, r3
 800fd2e:	463b      	mov	r3, r7
 800fd30:	d8f6      	bhi.n	800fd20 <properties::convert_json_file(char*, unsigned short, bool)+0xac>
 800fd32:	e7a8      	b.n	800fc86 <properties::convert_json_file(char*, unsigned short, bool)+0x12>
 800fd34:	2401      	movs	r4, #1
 800fd36:	e7ee      	b.n	800fd16 <properties::convert_json_file(char*, unsigned short, bool)+0xa2>
 800fd38:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 800fd3c:	d1ac      	bne.n	800fc98 <properties::convert_json_file(char*, unsigned short, bool)+0x24>
 800fd3e:	4602      	mov	r2, r0
 800fd40:	e7b3      	b.n	800fcaa <properties::convert_json_file(char*, unsigned short, bool)+0x36>
 800fd42:	283a      	cmp	r0, #58	; 0x3a
 800fd44:	d115      	bne.n	800fd72 <properties::convert_json_file(char*, unsigned short, bool)+0xfe>
 800fd46:	462b      	mov	r3, r5
 800fd48:	e01b      	b.n	800fd82 <properties::convert_json_file(char*, unsigned short, bool)+0x10e>
 800fd4a:	4686      	mov	lr, r0
 800fd4c:	e027      	b.n	800fd9e <properties::convert_json_file(char*, unsigned short, bool)+0x12a>
 800fd4e:	4673      	mov	r3, lr
 800fd50:	f806 cb01 	strb.w	ip, [r6], #1
 800fd54:	3401      	adds	r4, #1
 800fd56:	3301      	adds	r3, #1
 800fd58:	e79c      	b.n	800fc94 <properties::convert_json_file(char*, unsigned short, bool)+0x20>
 800fd5a:	4620      	mov	r0, r4
 800fd5c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800fd60:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800fd64:	e7fa      	b.n	800fd5c <properties::convert_json_file(char*, unsigned short, bool)+0xe8>
 800fd66:	4630      	mov	r0, r6
 800fd68:	f800 7b01 	strb.w	r7, [r0], #1
 800fd6c:	469e      	mov	lr, r3
 800fd6e:	4606      	mov	r6, r0
 800fd70:	3401      	adds	r4, #1
 800fd72:	4571      	cmp	r1, lr
 800fd74:	462b      	mov	r3, r5
 800fd76:	7828      	ldrb	r0, [r5, #0]
 800fd78:	f10e 0e01 	add.w	lr, lr, #1
 800fd7c:	f105 0501 	add.w	r5, r5, #1
 800fd80:	d8df      	bhi.n	800fd42 <properties::convert_json_file(char*, unsigned short, bool)+0xce>
 800fd82:	781d      	ldrb	r5, [r3, #0]
 800fd84:	461a      	mov	r2, r3
 800fd86:	2d2f      	cmp	r5, #47	; 0x2f
 800fd88:	4670      	mov	r0, lr
 800fd8a:	f103 0301 	add.w	r3, r3, #1
 800fd8e:	f10e 0e01 	add.w	lr, lr, #1
 800fd92:	d8da      	bhi.n	800fd4a <properties::convert_json_file(char*, unsigned short, bool)+0xd6>
 800fd94:	4281      	cmp	r1, r0
 800fd96:	d8f4      	bhi.n	800fd82 <properties::convert_json_file(char*, unsigned short, bool)+0x10e>
 800fd98:	2d22      	cmp	r5, #34	; 0x22
 800fd9a:	bf08      	it	eq
 800fd9c:	461a      	moveq	r2, r3
 800fd9e:	4610      	mov	r0, r2
 800fda0:	f810 5b01 	ldrb.w	r5, [r0], #1
 800fda4:	f10e 0301 	add.w	r3, lr, #1
 800fda8:	2d22      	cmp	r5, #34	; 0x22
 800fdaa:	d0d0      	beq.n	800fd4e <properties::convert_json_file(char*, unsigned short, bool)+0xda>
 800fdac:	2d2c      	cmp	r5, #44	; 0x2c
 800fdae:	d0ce      	beq.n	800fd4e <properties::convert_json_file(char*, unsigned short, bool)+0xda>
 800fdb0:	2d7d      	cmp	r5, #125	; 0x7d
 800fdb2:	d0cc      	beq.n	800fd4e <properties::convert_json_file(char*, unsigned short, bool)+0xda>
 800fdb4:	4571      	cmp	r1, lr
 800fdb6:	d9ce      	bls.n	800fd56 <properties::convert_json_file(char*, unsigned short, bool)+0xe2>
 800fdb8:	f1a5 0e20 	sub.w	lr, r5, #32
 800fdbc:	f1be 0f5a 	cmp.w	lr, #90	; 0x5a
 800fdc0:	d803      	bhi.n	800fdca <properties::convert_json_file(char*, unsigned short, bool)+0x156>
 800fdc2:	4602      	mov	r2, r0
 800fdc4:	f806 5b01 	strb.w	r5, [r6], #1
 800fdc8:	3401      	adds	r4, #1
 800fdca:	469e      	mov	lr, r3
 800fdcc:	e7e7      	b.n	800fd9e <properties::convert_json_file(char*, unsigned short, bool)+0x12a>
	...

0800fdd0 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>:
 800fdd0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800fdd4:	6002      	str	r2, [r0, #0]
 800fdd6:	4614      	mov	r4, r2
 800fdd8:	2200      	movs	r2, #0
 800fdda:	4606      	mov	r6, r0
 800fddc:	460f      	mov	r7, r1
 800fdde:	80c2      	strh	r2, [r0, #6]
 800fde0:	4a1b      	ldr	r2, [pc, #108]	; (800fe50 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x80>)
 800fde2:	8083      	strh	r3, [r0, #4]
 800fde4:	7810      	ldrb	r0, [r2, #0]
 800fde6:	f000 0001 	and.w	r0, r0, #1
 800fdea:	7230      	strb	r0, [r6, #8]
 800fdec:	463d      	mov	r5, r7
 800fdee:	782a      	ldrb	r2, [r5, #0]
 800fdf0:	3701      	adds	r7, #1
 800fdf2:	2a00      	cmp	r2, #0
 800fdf4:	d1fa      	bne.n	800fdec <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x1c>
 800fdf6:	1a6d      	subs	r5, r5, r1
 800fdf8:	b29b      	uxth	r3, r3
 800fdfa:	b1d0      	cbz	r0, 800fe32 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x62>
 800fdfc:	1d2f      	adds	r7, r5, #4
 800fdfe:	429f      	cmp	r7, r3
 800fe00:	d814      	bhi.n	800fe2c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 800fe02:	f04f 087b 	mov.w	r8, #123	; 0x7b
 800fe06:	f04f 0922 	mov.w	r9, #34	; 0x22
 800fe0a:	462a      	mov	r2, r5
 800fe0c:	f884 8000 	strb.w	r8, [r4]
 800fe10:	f884 9001 	strb.w	r9, [r4, #1]
 800fe14:	1ca0      	adds	r0, r4, #2
 800fe16:	f000 fed2 	bl	8010bbe <memmove>
 800fe1a:	223a      	movs	r2, #58	; 0x3a
 800fe1c:	1963      	adds	r3, r4, r5
 800fe1e:	3505      	adds	r5, #5
 800fe20:	f883 9002 	strb.w	r9, [r3, #2]
 800fe24:	70da      	strb	r2, [r3, #3]
 800fe26:	80f5      	strh	r5, [r6, #6]
 800fe28:	f804 8007 	strb.w	r8, [r4, r7]
 800fe2c:	4630      	mov	r0, r6
 800fe2e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800fe32:	1caf      	adds	r7, r5, #2
 800fe34:	429f      	cmp	r7, r3
 800fe36:	d8f9      	bhi.n	800fe2c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 800fe38:	4620      	mov	r0, r4
 800fe3a:	2323      	movs	r3, #35	; 0x23
 800fe3c:	462a      	mov	r2, r5
 800fe3e:	f800 3b01 	strb.w	r3, [r0], #1
 800fe42:	f000 febc 	bl	8010bbe <memmove>
 800fe46:	230a      	movs	r3, #10
 800fe48:	442c      	add	r4, r5
 800fe4a:	7063      	strb	r3, [r4, #1]
 800fe4c:	80f7      	strh	r7, [r6, #6]
 800fe4e:	e7ed      	b.n	800fe2c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 800fe50:	2000d15c 	andcs	sp, r0, ip, asr r1

0800fe54 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>:
 800fe54:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fe56:	469c      	mov	ip, r3
 800fe58:	8885      	ldrh	r5, [r0, #4]
 800fe5a:	88c3      	ldrh	r3, [r0, #6]
 800fe5c:	b085      	sub	sp, #20
 800fe5e:	42ab      	cmp	r3, r5
 800fe60:	d302      	bcc.n	800fe68 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x14>
 800fe62:	2000      	movs	r0, #0
 800fe64:	b005      	add	sp, #20
 800fe66:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800fe68:	4604      	mov	r4, r0
 800fe6a:	6800      	ldr	r0, [r0, #0]
 800fe6c:	1aed      	subs	r5, r5, r3
 800fe6e:	4418      	add	r0, r3
 800fe70:	b2d6      	uxtb	r6, r2
 800fe72:	f3c2 2707 	ubfx	r7, r2, #8, #8
 800fe76:	f3c2 4307 	ubfx	r3, r2, #16, #8
 800fe7a:	f894 e008 	ldrb.w	lr, [r4, #8]
 800fe7e:	0e12      	lsrs	r2, r2, #24
 800fe80:	f1bc 0f00 	cmp.w	ip, #0
 800fe84:	d109      	bne.n	800fe9a <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x46>
 800fe86:	f1be 0f00 	cmp.w	lr, #0
 800fe8a:	d109      	bne.n	800fea0 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x4c>
 800fe8c:	e9cd 3202 	strd	r3, r2, [sp, #8]
 800fe90:	e9cd 6700 	strd	r6, r7, [sp]
 800fe94:	460b      	mov	r3, r1
 800fe96:	4a0e      	ldr	r2, [pc, #56]	; (800fed0 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x7c>)
 800fe98:	e008      	b.n	800feac <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x58>
 800fe9a:	f1be 0f00 	cmp.w	lr, #0
 800fe9e:	d00f      	beq.n	800fec0 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x6c>
 800fea0:	e9cd 3202 	strd	r3, r2, [sp, #8]
 800fea4:	460b      	mov	r3, r1
 800fea6:	e9cd 6700 	strd	r6, r7, [sp]
 800feaa:	4a0a      	ldr	r2, [pc, #40]	; (800fed4 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x80>)
 800feac:	4629      	mov	r1, r5
 800feae:	f001 f9f5 	bl	801129c <snprintf>
 800feb2:	4285      	cmp	r5, r0
 800feb4:	dbd5      	blt.n	800fe62 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0xe>
 800feb6:	88e3      	ldrh	r3, [r4, #6]
 800feb8:	4403      	add	r3, r0
 800feba:	80e3      	strh	r3, [r4, #6]
 800febc:	2001      	movs	r0, #1
 800febe:	e7d1      	b.n	800fe64 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x10>
 800fec0:	e9cd 3202 	strd	r3, r2, [sp, #8]
 800fec4:	e9cd 6700 	strd	r6, r7, [sp]
 800fec8:	460b      	mov	r3, r1
 800feca:	4a03      	ldr	r2, [pc, #12]	; (800fed8 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x84>)
 800fecc:	e7ee      	b.n	800feac <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x58>
 800fece:	bf00      	nop
 800fed0:	08014e2f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r9, sl, fp, lr}
 800fed4:	08014e1b 	stmdaeq	r1, {r0, r1, r3, r4, r9, sl, fp, lr}
 800fed8:	08014e30 	stmdaeq	r1, {r4, r5, r9, sl, fp, lr}

0800fedc <PropertiesBuilder::AddComment(char const*)>:
 800fedc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fede:	7a06      	ldrb	r6, [r0, #8]
 800fee0:	b996      	cbnz	r6, 800ff08 <PropertiesBuilder::AddComment(char const*)+0x2c>
 800fee2:	4604      	mov	r4, r0
 800fee4:	88c0      	ldrh	r0, [r0, #6]
 800fee6:	88a5      	ldrh	r5, [r4, #4]
 800fee8:	42a8      	cmp	r0, r5
 800feea:	d20d      	bcs.n	800ff08 <PropertiesBuilder::AddComment(char const*)+0x2c>
 800feec:	6827      	ldr	r7, [r4, #0]
 800feee:	1a2d      	subs	r5, r5, r0
 800fef0:	460b      	mov	r3, r1
 800fef2:	4a06      	ldr	r2, [pc, #24]	; (800ff0c <PropertiesBuilder::AddComment(char const*)+0x30>)
 800fef4:	4629      	mov	r1, r5
 800fef6:	4438      	add	r0, r7
 800fef8:	f001 f9d0 	bl	801129c <snprintf>
 800fefc:	4285      	cmp	r5, r0
 800fefe:	bfa1      	itttt	ge
 800ff00:	2601      	movge	r6, #1
 800ff02:	88e3      	ldrhge	r3, [r4, #6]
 800ff04:	18c0      	addge	r0, r0, r3
 800ff06:	80e0      	strhge	r0, [r4, #6]
 800ff08:	4630      	mov	r0, r6
 800ff0a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ff0c:	08014e40 	stmdaeq	r1, {r6, r9, sl, fp, lr}

0800ff10 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>:
 800ff10:	e9c0 1200 	strd	r1, r2, [r0]
 800ff14:	4770      	bx	lr

0800ff16 <ReadConfigFile::~ReadConfigFile()>:
 800ff16:	4770      	bx	lr

0800ff18 <ReadConfigFile::Read(char const*, unsigned int)>:
 800ff18:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ff1c:	4606      	mov	r6, r0
 800ff1e:	460d      	mov	r5, r1
 800ff20:	4614      	mov	r4, r2
 800ff22:	f04f 0800 	mov.w	r8, #0
 800ff26:	b090      	sub	sp, #64	; 0x40
 800ff28:	b33c      	cbz	r4, 800ff7a <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 800ff2a:	466b      	mov	r3, sp
 800ff2c:	462a      	mov	r2, r5
 800ff2e:	4619      	mov	r1, r3
 800ff30:	7817      	ldrb	r7, [r2, #0]
 800ff32:	4610      	mov	r0, r2
 800ff34:	2f0d      	cmp	r7, #13
 800ff36:	f102 0201 	add.w	r2, r2, #1
 800ff3a:	d013      	beq.n	800ff64 <ReadConfigFile::Read(char const*, unsigned int)+0x4c>
 800ff3c:	2f0a      	cmp	r7, #10
 800ff3e:	d011      	beq.n	800ff64 <ReadConfigFile::Read(char const*, unsigned int)+0x4c>
 800ff40:	f803 7b01 	strb.w	r7, [r3], #1
 800ff44:	1a58      	subs	r0, r3, r1
 800ff46:	283f      	cmp	r0, #63	; 0x3f
 800ff48:	4615      	mov	r5, r2
 800ff4a:	dc16      	bgt.n	800ff7a <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 800ff4c:	3c01      	subs	r4, #1
 800ff4e:	d1ef      	bne.n	800ff30 <ReadConfigFile::Read(char const*, unsigned int)+0x18>
 800ff50:	f89d 2000 	ldrb.w	r2, [sp]
 800ff54:	2a60      	cmp	r2, #96	; 0x60
 800ff56:	d9e7      	bls.n	800ff28 <ReadConfigFile::Read(char const*, unsigned int)+0x10>
 800ff58:	f883 8000 	strb.w	r8, [r3]
 800ff5c:	e9d6 3000 	ldrd	r3, r0, [r6]
 800ff60:	4798      	blx	r3
 800ff62:	e7e1      	b.n	800ff28 <ReadConfigFile::Read(char const*, unsigned int)+0x10>
 800ff64:	4605      	mov	r5, r0
 800ff66:	2c00      	cmp	r4, #0
 800ff68:	d0f2      	beq.n	800ff50 <ReadConfigFile::Read(char const*, unsigned int)+0x38>
 800ff6a:	f810 2b01 	ldrb.w	r2, [r0], #1
 800ff6e:	2a0d      	cmp	r2, #13
 800ff70:	d001      	beq.n	800ff76 <ReadConfigFile::Read(char const*, unsigned int)+0x5e>
 800ff72:	2a0a      	cmp	r2, #10
 800ff74:	d1ec      	bne.n	800ff50 <ReadConfigFile::Read(char const*, unsigned int)+0x38>
 800ff76:	3c01      	subs	r4, #1
 800ff78:	e7f4      	b.n	800ff64 <ReadConfigFile::Read(char const*, unsigned int)+0x4c>
 800ff7a:	b010      	add	sp, #64	; 0x40
 800ff7c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ff80 <Sscan::Char(char const*, char const*, char*, unsigned int&)>:
 800ff80:	b570      	push	{r4, r5, r6, lr}
 800ff82:	4615      	mov	r5, r2
 800ff84:	461c      	mov	r4, r3
 800ff86:	f000 f8f2 	bl	801016e <Sscan::checkName(char const*, char const*)>
 800ff8a:	b160      	cbz	r0, 800ffa6 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x26>
 800ff8c:	2100      	movs	r1, #0
 800ff8e:	5c43      	ldrb	r3, [r0, r1]
 800ff90:	6826      	ldr	r6, [r4, #0]
 800ff92:	b28a      	uxth	r2, r1
 800ff94:	b123      	cbz	r3, 800ffa0 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x20>
 800ff96:	42b2      	cmp	r2, r6
 800ff98:	d207      	bcs.n	800ffaa <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2a>
 800ff9a:	546b      	strb	r3, [r5, r1]
 800ff9c:	3101      	adds	r1, #1
 800ff9e:	e7f6      	b.n	800ff8e <Sscan::Char(char const*, char const*, char*, unsigned int&)+0xe>
 800ffa0:	2000      	movs	r0, #0
 800ffa2:	6022      	str	r2, [r4, #0]
 800ffa4:	bd70      	pop	{r4, r5, r6, pc}
 800ffa6:	2001      	movs	r0, #1
 800ffa8:	e7fc      	b.n	800ffa4 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x24>
 800ffaa:	2b0a      	cmp	r3, #10
 800ffac:	d0f8      	beq.n	800ffa0 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x20>
 800ffae:	2002      	movs	r0, #2
 800ffb0:	e7f8      	b.n	800ffa4 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x24>

0800ffb2 <Sscan::Float(char const*, char const*, float&)>:
 800ffb2:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800ffb6:	4616      	mov	r6, r2
 800ffb8:	f000 f8d9 	bl	801016e <Sscan::checkName(char const*, char const*)>
 800ffbc:	2800      	cmp	r0, #0
 800ffbe:	d059      	beq.n	8010074 <Sscan::Float(char const*, char const*, float&)+0xc2>
 800ffc0:	4604      	mov	r4, r0
 800ffc2:	7803      	ldrb	r3, [r0, #0]
 800ffc4:	2b2d      	cmp	r3, #45	; 0x2d
 800ffc6:	bf08      	it	eq
 800ffc8:	3401      	addeq	r4, #1
 800ffca:	7823      	ldrb	r3, [r4, #0]
 800ffcc:	bf0c      	ite	eq
 800ffce:	f04f 0801 	moveq.w	r8, #1
 800ffd2:	f04f 0800 	movne.w	r8, #0
 800ffd6:	f013 0fdf 	tst.w	r3, #223	; 0xdf
 800ffda:	d103      	bne.n	800ffe4 <Sscan::Float(char const*, char const*, float&)+0x32>
 800ffdc:	2702      	movs	r7, #2
 800ffde:	4638      	mov	r0, r7
 800ffe0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800ffe4:	2000      	movs	r0, #0
 800ffe6:	220a      	movs	r2, #10
 800ffe8:	7823      	ldrb	r3, [r4, #0]
 800ffea:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 800ffee:	2909      	cmp	r1, #9
 800fff0:	d8f4      	bhi.n	800ffdc <Sscan::Float(char const*, char const*, float&)+0x2a>
 800fff2:	fb02 3000 	mla	r0, r2, r0, r3
 800fff6:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 800fffa:	3830      	subs	r0, #48	; 0x30
 800fffc:	2b2e      	cmp	r3, #46	; 0x2e
 800fffe:	d002      	beq.n	8010006 <Sscan::Float(char const*, char const*, float&)+0x54>
 8010000:	f013 0fdf 	tst.w	r3, #223	; 0xdf
 8010004:	d1f0      	bne.n	800ffe8 <Sscan::Float(char const*, char const*, float&)+0x36>
 8010006:	f7f8 f861 	bl	80080cc <__aeabi_ui2f>
 801000a:	6030      	str	r0, [r6, #0]
 801000c:	7823      	ldrb	r3, [r4, #0]
 801000e:	4605      	mov	r5, r0
 8010010:	2b2e      	cmp	r3, #46	; 0x2e
 8010012:	d008      	beq.n	8010026 <Sscan::Float(char const*, char const*, float&)+0x74>
 8010014:	f1b8 0f00 	cmp.w	r8, #0
 8010018:	d101      	bne.n	801001e <Sscan::Float(char const*, char const*, float&)+0x6c>
 801001a:	2700      	movs	r7, #0
 801001c:	e7df      	b.n	800ffde <Sscan::Float(char const*, char const*, float&)+0x2c>
 801001e:	f100 4500 	add.w	r5, r0, #2147483648	; 0x80000000
 8010022:	6035      	str	r5, [r6, #0]
 8010024:	e7f9      	b.n	801001a <Sscan::Float(char const*, char const*, float&)+0x68>
 8010026:	f04f 0901 	mov.w	r9, #1
 801002a:	2000      	movs	r0, #0
 801002c:	220a      	movs	r2, #10
 801002e:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8010032:	f013 07df 	ands.w	r7, r3, #223	; 0xdf
 8010036:	d007      	beq.n	8010048 <Sscan::Float(char const*, char const*, float&)+0x96>
 8010038:	3b30      	subs	r3, #48	; 0x30
 801003a:	2b09      	cmp	r3, #9
 801003c:	d8ce      	bhi.n	800ffdc <Sscan::Float(char const*, char const*, float&)+0x2a>
 801003e:	fb02 3000 	mla	r0, r2, r0, r3
 8010042:	fb02 f909 	mul.w	r9, r2, r9
 8010046:	e7f2      	b.n	801002e <Sscan::Float(char const*, char const*, float&)+0x7c>
 8010048:	f7f8 f840 	bl	80080cc <__aeabi_ui2f>
 801004c:	4604      	mov	r4, r0
 801004e:	4648      	mov	r0, r9
 8010050:	f7f8 f83c 	bl	80080cc <__aeabi_ui2f>
 8010054:	4601      	mov	r1, r0
 8010056:	4620      	mov	r0, r4
 8010058:	f7f8 f944 	bl	80082e4 <__aeabi_fdiv>
 801005c:	4629      	mov	r1, r5
 801005e:	f7f7 ff85 	bl	8007f6c <__addsf3>
 8010062:	f1b8 0f00 	cmp.w	r8, #0
 8010066:	d101      	bne.n	801006c <Sscan::Float(char const*, char const*, float&)+0xba>
 8010068:	6030      	str	r0, [r6, #0]
 801006a:	e7d6      	b.n	801001a <Sscan::Float(char const*, char const*, float&)+0x68>
 801006c:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
 8010070:	6030      	str	r0, [r6, #0]
 8010072:	e7b4      	b.n	800ffde <Sscan::Float(char const*, char const*, float&)+0x2c>
 8010074:	2701      	movs	r7, #1
 8010076:	e7b2      	b.n	800ffde <Sscan::Float(char const*, char const*, float&)+0x2c>

08010078 <Sscan::IpAddress(char const*, char const*, unsigned int&)>:
 8010078:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801007a:	4615      	mov	r5, r2
 801007c:	f000 f877 	bl	801016e <Sscan::checkName(char const*, char const*)>
 8010080:	b3c0      	cbz	r0, 80100f4 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x7c>
 8010082:	2400      	movs	r4, #0
 8010084:	270a      	movs	r7, #10
 8010086:	ae01      	add	r6, sp, #4
 8010088:	4603      	mov	r3, r0
 801008a:	2100      	movs	r1, #0
 801008c:	f100 0c04 	add.w	ip, r0, #4
 8010090:	4618      	mov	r0, r3
 8010092:	f810 2b01 	ldrb.w	r2, [r0], #1
 8010096:	2a2e      	cmp	r2, #46	; 0x2e
 8010098:	d00e      	beq.n	80100b8 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x40>
 801009a:	b16a      	cbz	r2, 80100b8 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x40>
 801009c:	4560      	cmp	r0, ip
 801009e:	d102      	bne.n	80100a6 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x2e>
 80100a0:	2002      	movs	r0, #2
 80100a2:	b003      	add	sp, #12
 80100a4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80100a6:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 80100aa:	2b09      	cmp	r3, #9
 80100ac:	d8f8      	bhi.n	80100a0 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 80100ae:	fb07 2101 	mla	r1, r7, r1, r2
 80100b2:	4603      	mov	r3, r0
 80100b4:	3930      	subs	r1, #48	; 0x30
 80100b6:	e7eb      	b.n	8010090 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x18>
 80100b8:	29ff      	cmp	r1, #255	; 0xff
 80100ba:	d8f1      	bhi.n	80100a0 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 80100bc:	3401      	adds	r4, #1
 80100be:	2c03      	cmp	r4, #3
 80100c0:	f806 1b01 	strb.w	r1, [r6], #1
 80100c4:	d1e0      	bne.n	8010088 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x10>
 80100c6:	2400      	movs	r4, #0
 80100c8:	220a      	movs	r2, #10
 80100ca:	1d1e      	adds	r6, r3, #4
 80100cc:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 80100d0:	f011 00df 	ands.w	r0, r1, #223	; 0xdf
 80100d4:	d007      	beq.n	80100e6 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x6e>
 80100d6:	429e      	cmp	r6, r3
 80100d8:	d0e2      	beq.n	80100a0 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 80100da:	3930      	subs	r1, #48	; 0x30
 80100dc:	2909      	cmp	r1, #9
 80100de:	d8df      	bhi.n	80100a0 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 80100e0:	fb02 1404 	mla	r4, r2, r4, r1
 80100e4:	e7f2      	b.n	80100cc <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x54>
 80100e6:	2cff      	cmp	r4, #255	; 0xff
 80100e8:	d8da      	bhi.n	80100a0 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 80100ea:	f88d 4007 	strb.w	r4, [sp, #7]
 80100ee:	9b01      	ldr	r3, [sp, #4]
 80100f0:	602b      	str	r3, [r5, #0]
 80100f2:	e7d6      	b.n	80100a2 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x2a>
 80100f4:	2001      	movs	r0, #1
 80100f6:	e7d4      	b.n	80100a2 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x2a>

080100f8 <Sscan::Uint16(char const*, char const*, unsigned short&)>:
 80100f8:	b538      	push	{r3, r4, r5, lr}
 80100fa:	4615      	mov	r5, r2
 80100fc:	f000 f837 	bl	801016e <Sscan::checkName(char const*, char const*)>
 8010100:	b1a0      	cbz	r0, 801012c <Sscan::Uint16(char const*, char const*, unsigned short&)+0x34>
 8010102:	4604      	mov	r4, r0
 8010104:	2100      	movs	r1, #0
 8010106:	220a      	movs	r2, #10
 8010108:	7823      	ldrb	r3, [r4, #0]
 801010a:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
 801010e:	2809      	cmp	r0, #9
 8010110:	d80e      	bhi.n	8010130 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x38>
 8010112:	fb02 3101 	mla	r1, r2, r1, r3
 8010116:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 801011a:	3930      	subs	r1, #48	; 0x30
 801011c:	f013 00df 	ands.w	r0, r3, #223	; 0xdf
 8010120:	d1f2      	bne.n	8010108 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x10>
 8010122:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
 8010126:	d203      	bcs.n	8010130 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x38>
 8010128:	8029      	strh	r1, [r5, #0]
 801012a:	bd38      	pop	{r3, r4, r5, pc}
 801012c:	2001      	movs	r0, #1
 801012e:	e7fc      	b.n	801012a <Sscan::Uint16(char const*, char const*, unsigned short&)+0x32>
 8010130:	2002      	movs	r0, #2
 8010132:	e7fa      	b.n	801012a <Sscan::Uint16(char const*, char const*, unsigned short&)+0x32>

08010134 <Sscan::Uint8(char const*, char const*, unsigned char&)>:
 8010134:	b538      	push	{r3, r4, r5, lr}
 8010136:	4615      	mov	r5, r2
 8010138:	f000 f819 	bl	801016e <Sscan::checkName(char const*, char const*)>
 801013c:	b198      	cbz	r0, 8010166 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x32>
 801013e:	4604      	mov	r4, r0
 8010140:	2100      	movs	r1, #0
 8010142:	220a      	movs	r2, #10
 8010144:	7823      	ldrb	r3, [r4, #0]
 8010146:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
 801014a:	2809      	cmp	r0, #9
 801014c:	d80d      	bhi.n	801016a <Sscan::Uint8(char const*, char const*, unsigned char&)+0x36>
 801014e:	fb02 3101 	mla	r1, r2, r1, r3
 8010152:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8010156:	3930      	subs	r1, #48	; 0x30
 8010158:	f013 00df 	ands.w	r0, r3, #223	; 0xdf
 801015c:	d1f2      	bne.n	8010144 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x10>
 801015e:	29ff      	cmp	r1, #255	; 0xff
 8010160:	d803      	bhi.n	801016a <Sscan::Uint8(char const*, char const*, unsigned char&)+0x36>
 8010162:	7029      	strb	r1, [r5, #0]
 8010164:	bd38      	pop	{r3, r4, r5, pc}
 8010166:	2001      	movs	r0, #1
 8010168:	e7fc      	b.n	8010164 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>
 801016a:	2002      	movs	r0, #2
 801016c:	e7fa      	b.n	8010164 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>

0801016e <Sscan::checkName(char const*, char const*)>:
 801016e:	4603      	mov	r3, r0
 8010170:	b510      	push	{r4, lr}
 8010172:	3901      	subs	r1, #1
 8010174:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 8010178:	461c      	mov	r4, r3
 801017a:	f813 2b01 	ldrb.w	r2, [r3], #1
 801017e:	b120      	cbz	r0, 801018a <Sscan::checkName(char const*, char const*)+0x1c>
 8010180:	b10a      	cbz	r2, 8010186 <Sscan::checkName(char const*, char const*)+0x18>
 8010182:	4290      	cmp	r0, r2
 8010184:	d0f6      	beq.n	8010174 <Sscan::checkName(char const*, char const*)+0x6>
 8010186:	2000      	movs	r0, #0
 8010188:	e006      	b.n	8010198 <Sscan::checkName(char const*, char const*)+0x2a>
 801018a:	2a3d      	cmp	r2, #61	; 0x3d
 801018c:	d104      	bne.n	8010198 <Sscan::checkName(char const*, char const*)+0x2a>
 801018e:	7860      	ldrb	r0, [r4, #1]
 8010190:	f010 00df 	ands.w	r0, r0, #223	; 0xdf
 8010194:	d000      	beq.n	8010198 <Sscan::checkName(char const*, char const*)+0x2a>
 8010196:	1c60      	adds	r0, r4, #1
 8010198:	bd10      	pop	{r4, pc}

0801019a <LightSet::GetDmxStartAddress()>:
 801019a:	2001      	movs	r0, #1
 801019c:	4770      	bx	lr

0801019e <LightSet::GetDmxFootprint()>:
 801019e:	f44f 7000 	mov.w	r0, #512	; 0x200
 80101a2:	4770      	bx	lr

080101a4 <LightSet::SetDmxStartAddress(unsigned short)>:
 80101a4:	2000      	movs	r0, #0
 80101a6:	4770      	bx	lr

080101a8 <LightSet::GetSlotInfo(unsigned short, lightset::SlotInfo&)>:
 80101a8:	2300      	movs	r3, #0
 80101aa:	2001      	movs	r0, #1
 80101ac:	7093      	strb	r3, [r2, #2]
 80101ae:	8010      	strh	r0, [r2, #0]
 80101b0:	4770      	bx	lr
	...

080101b4 <Display::PrintInfo() [clone .isra.0]>:
 80101b4:	b910      	cbnz	r0, 80101bc <Display::PrintInfo() [clone .isra.0]+0x8>
 80101b6:	4803      	ldr	r0, [pc, #12]	; (80101c4 <Display::PrintInfo() [clone .isra.0]+0x10>)
 80101b8:	f001 b898 	b.w	80112ec <puts>
 80101bc:	6803      	ldr	r3, [r0, #0]
 80101be:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80101c0:	4718      	bx	r3
 80101c2:	bf00      	nop
 80101c4:	08014f33 	stmdaeq	r1, {r0, r1, r4, r5, r8, r9, sl, fp, lr}

080101c8 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>:
 80101c8:	b513      	push	{r0, r1, r4, lr}
 80101ca:	4604      	mov	r4, r0
 80101cc:	0a13      	lsrs	r3, r2, #8
 80101ce:	7800      	ldrb	r0, [r0, #0]
 80101d0:	f88d 1004 	strb.w	r1, [sp, #4]
 80101d4:	f88d 3005 	strb.w	r3, [sp, #5]
 80101d8:	f88d 2006 	strb.w	r2, [sp, #6]
 80101dc:	f002 f958 	bl	8012490 <gd32_i2c_set_address(unsigned char)>
 80101e0:	6860      	ldr	r0, [r4, #4]
 80101e2:	f002 f94d 	bl	8012480 <gd32_i2c_set_baudrate(unsigned int)>
 80101e6:	2103      	movs	r1, #3
 80101e8:	a801      	add	r0, sp, #4
 80101ea:	f002 f957 	bl	801249c <gd32_i2c_write(char const*, unsigned int)>
 80101ee:	b002      	add	sp, #8
 80101f0:	bd10      	pop	{r4, pc}

080101f2 <HAL_I2C::IsConnected_(unsigned char, unsigned int)>:
 80101f2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80101f4:	460d      	mov	r5, r1
 80101f6:	4604      	mov	r4, r0
 80101f8:	f002 f94a 	bl	8012490 <gd32_i2c_set_address(unsigned char)>
 80101fc:	4628      	mov	r0, r5
 80101fe:	f002 f93f 	bl	8012480 <gd32_i2c_set_baudrate(unsigned int)>
 8010202:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8010206:	2b07      	cmp	r3, #7
 8010208:	d902      	bls.n	8010210 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x1e>
 801020a:	3c50      	subs	r4, #80	; 0x50
 801020c:	2c0f      	cmp	r4, #15
 801020e:	d809      	bhi.n	8010224 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x32>
 8010210:	2101      	movs	r1, #1
 8010212:	f10d 0007 	add.w	r0, sp, #7
 8010216:	f002 f9a7 	bl	8012568 <gd32_i2c_read(char*, unsigned int)>
 801021a:	fab0 f080 	clz	r0, r0
 801021e:	0940      	lsrs	r0, r0, #5
 8010220:	b003      	add	sp, #12
 8010222:	bd30      	pop	{r4, r5, pc}
 8010224:	2100      	movs	r1, #0
 8010226:	4608      	mov	r0, r1
 8010228:	f002 f938 	bl	801249c <gd32_i2c_write(char const*, unsigned int)>
 801022c:	e7f5      	b.n	801021a <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x28>

0801022e <Display::Detect7Segment()>:
 801022e:	b538      	push	{r3, r4, r5, lr}
 8010230:	68c1      	ldr	r1, [r0, #12]
 8010232:	4604      	mov	r4, r0
 8010234:	7a00      	ldrb	r0, [r0, #8]
 8010236:	f7ff ffdc 	bl	80101f2 <HAL_I2C::IsConnected_(unsigned char, unsigned int)>
 801023a:	7460      	strb	r0, [r4, #17]
 801023c:	b170      	cbz	r0, 801025c <Display::Detect7Segment()+0x2e>
 801023e:	2200      	movs	r2, #0
 8010240:	f104 0508 	add.w	r5, r4, #8
 8010244:	4611      	mov	r1, r2
 8010246:	4628      	mov	r0, r5
 8010248:	f7ff ffbe 	bl	80101c8 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 801024c:	7c63      	ldrb	r3, [r4, #17]
 801024e:	b12b      	cbz	r3, 801025c <Display::Detect7Segment()+0x2e>
 8010250:	f24c 02ff 	movw	r2, #49407	; 0xc0ff
 8010254:	2112      	movs	r1, #18
 8010256:	4628      	mov	r0, r5
 8010258:	f7ff ffb6 	bl	80101c8 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 801025c:	bd38      	pop	{r3, r4, r5, pc}

0801025e <Display::Detect(display::Type)>:
 801025e:	2902      	cmp	r1, #2
 8010260:	b538      	push	{r3, r4, r5, lr}
 8010262:	4604      	mov	r4, r0
 8010264:	d014      	beq.n	8010290 <Display::Detect(display::Type)+0x32>
 8010266:	2904      	cmp	r1, #4
 8010268:	d01b      	beq.n	80102a2 <Display::Detect(display::Type)+0x44>
 801026a:	69a0      	ldr	r0, [r4, #24]
 801026c:	b168      	cbz	r0, 801028a <Display::Detect(display::Type)+0x2c>
 801026e:	6803      	ldr	r3, [r0, #0]
 8010270:	689b      	ldr	r3, [r3, #8]
 8010272:	4798      	blx	r3
 8010274:	4603      	mov	r3, r0
 8010276:	69a0      	ldr	r0, [r4, #24]
 8010278:	b9ab      	cbnz	r3, 80102a6 <Display::Detect(display::Type)+0x48>
 801027a:	b110      	cbz	r0, 8010282 <Display::Detect(display::Type)+0x24>
 801027c:	6803      	ldr	r3, [r0, #0]
 801027e:	685b      	ldr	r3, [r3, #4]
 8010280:	4798      	blx	r3
 8010282:	2300      	movs	r3, #0
 8010284:	61a3      	str	r3, [r4, #24]
 8010286:	2304      	movs	r3, #4
 8010288:	6023      	str	r3, [r4, #0]
 801028a:	2300      	movs	r3, #0
 801028c:	6163      	str	r3, [r4, #20]
 801028e:	e010      	b.n	80102b2 <Display::Detect(display::Type)+0x54>
 8010290:	2018      	movs	r0, #24
 8010292:	f000 fbd5 	bl	8010a40 <operator new(unsigned int)>
 8010296:	4605      	mov	r5, r0
 8010298:	2100      	movs	r1, #0
 801029a:	f000 f8a3 	bl	80103e4 <Ssd1306::Ssd1306(TOledPanel)>
 801029e:	61a5      	str	r5, [r4, #24]
 80102a0:	e7e3      	b.n	801026a <Display::Detect(display::Type)+0xc>
 80102a2:	6001      	str	r1, [r0, #0]
 80102a4:	e7e1      	b.n	801026a <Display::Detect(display::Type)+0xc>
 80102a6:	6803      	ldr	r3, [r0, #0]
 80102a8:	68db      	ldr	r3, [r3, #12]
 80102aa:	4798      	blx	r3
 80102ac:	69a3      	ldr	r3, [r4, #24]
 80102ae:	2b00      	cmp	r3, #0
 80102b0:	d0eb      	beq.n	801028a <Display::Detect(display::Type)+0x2c>
 80102b2:	bd38      	pop	{r3, r4, r5, pc}

080102b4 <Display::Display()>:
 80102b4:	2304      	movs	r3, #4
 80102b6:	b510      	push	{r4, lr}
 80102b8:	6003      	str	r3, [r0, #0]
 80102ba:	4b0f      	ldr	r3, [pc, #60]	; (80102f8 <Display::Display()+0x44>)
 80102bc:	4604      	mov	r4, r0
 80102be:	681b      	ldr	r3, [r3, #0]
 80102c0:	4a0e      	ldr	r2, [pc, #56]	; (80102fc <Display::Display()+0x48>)
 80102c2:	6043      	str	r3, [r0, #4]
 80102c4:	2321      	movs	r3, #33	; 0x21
 80102c6:	7203      	strb	r3, [r0, #8]
 80102c8:	4b0d      	ldr	r3, [pc, #52]	; (8010300 <Display::Display()+0x4c>)
 80102ca:	2102      	movs	r1, #2
 80102cc:	60c3      	str	r3, [r0, #12]
 80102ce:	2300      	movs	r3, #0
 80102d0:	e9c0 2305 	strd	r2, r3, [r0, #20]
 80102d4:	8203      	strh	r3, [r0, #16]
 80102d6:	4b0b      	ldr	r3, [pc, #44]	; (8010304 <Display::Display()+0x50>)
 80102d8:	6018      	str	r0, [r3, #0]
 80102da:	f7ff ffc0 	bl	801025e <Display::Detect(display::Type)>
 80102de:	4620      	mov	r0, r4
 80102e0:	f7ff ffa5 	bl	801022e <Display::Detect7Segment()>
 80102e4:	69a3      	ldr	r3, [r4, #24]
 80102e6:	b10b      	cbz	r3, 80102ec <Display::Display()+0x38>
 80102e8:	f000 f80e 	bl	8010308 <display::timeout::gpio_init()>
 80102ec:	69a0      	ldr	r0, [r4, #24]
 80102ee:	f7ff ff61 	bl	80101b4 <Display::PrintInfo() [clone .isra.0]>
 80102f2:	4620      	mov	r0, r4
 80102f4:	bd10      	pop	{r4, pc}
 80102f6:	bf00      	nop
 80102f8:	2000d26c 	andcs	sp, r0, ip, ror #4
 80102fc:	000493e0 	andeq	r9, r4, r0, ror #7
 8010300:	00061a80 	andeq	r1, r6, r0, lsl #21
 8010304:	2000d160 	andcs	sp, r0, r0, ror #2

08010308 <display::timeout::gpio_init()>:
 8010308:	4770      	bx	lr

0801030a <display::timeout::gpio_renew()>:
 801030a:	2000      	movs	r0, #0
 801030c:	4770      	bx	lr

0801030e <Ssd1306::~Ssd1306()>:
 801030e:	4770      	bx	lr

08010310 <Ssd1306::SetCursor(unsigned int)>:
 8010310:	4770      	bx	lr
	...

08010314 <Ssd1306::PrintInfo()>:
 8010314:	b410      	push	{r4}
 8010316:	4906      	ldr	r1, [pc, #24]	; (8010330 <Ssd1306::PrintInfo()+0x1c>)
 8010318:	7c44      	ldrb	r4, [r0, #17]
 801031a:	7903      	ldrb	r3, [r0, #4]
 801031c:	7942      	ldrb	r2, [r0, #5]
 801031e:	4805      	ldr	r0, [pc, #20]	; (8010334 <Ssd1306::PrintInfo()+0x20>)
 8010320:	2c00      	cmp	r4, #0
 8010322:	bf08      	it	eq
 8010324:	4601      	moveq	r1, r0
 8010326:	4804      	ldr	r0, [pc, #16]	; (8010338 <Ssd1306::PrintInfo()+0x24>)
 8010328:	bc10      	pop	{r4}
 801032a:	f000 bf8f 	b.w	801124c <printf>
 801032e:	bf00      	nop
 8010330:	08014f44 	stmdaeq	r1, {r2, r6, r8, r9, sl, fp, lr}
 8010334:	08014f4b 	stmdaeq	r1, {r0, r1, r3, r6, r8, r9, sl, fp, lr}
 8010338:	08014f53 	stmdaeq	r1, {r0, r1, r4, r6, r8, r9, sl, fp, lr}

0801033c <Ssd1306::~Ssd1306()>:
 801033c:	b510      	push	{r4, lr}
 801033e:	4604      	mov	r4, r0
 8010340:	f000 fb7a 	bl	8010a38 <operator delete(void*)>
 8010344:	4620      	mov	r0, r4
 8010346:	bd10      	pop	{r4, pc}

08010348 <HAL_I2C::Setup()>:
 8010348:	b510      	push	{r4, lr}
 801034a:	4604      	mov	r4, r0
 801034c:	7800      	ldrb	r0, [r0, #0]
 801034e:	f002 f89f 	bl	8012490 <gd32_i2c_set_address(unsigned char)>
 8010352:	6860      	ldr	r0, [r4, #4]
 8010354:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010358:	f002 b892 	b.w	8012480 <gd32_i2c_set_baudrate(unsigned int)>

0801035c <Ssd1306::PutChar(int)>:
 801035c:	b510      	push	{r4, lr}
 801035e:	f1a1 0420 	sub.w	r4, r1, #32
 8010362:	2c5f      	cmp	r4, #95	; 0x5f
 8010364:	bf88      	it	hi
 8010366:	2400      	movhi	r4, #0
 8010368:	3008      	adds	r0, #8
 801036a:	f7ff ffed 	bl	8010348 <HAL_I2C::Setup()>
 801036e:	4804      	ldr	r0, [pc, #16]	; (8010380 <Ssd1306::PutChar(int)+0x24>)
 8010370:	ebc4 04c4 	rsb	r4, r4, r4, lsl #3
 8010374:	4420      	add	r0, r4
 8010376:	2107      	movs	r1, #7
 8010378:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801037c:	f002 b88e 	b.w	801249c <gd32_i2c_write(char const*, unsigned int)>
 8010380:	08014f68 	stmdaeq	r1, {r3, r5, r6, r8, r9, sl, fp, lr}

08010384 <Ssd1306::PutString(char const*)>:
 8010384:	b538      	push	{r3, r4, r5, lr}
 8010386:	4605      	mov	r5, r0
 8010388:	1e4c      	subs	r4, r1, #1
 801038a:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 801038e:	b119      	cbz	r1, 8010398 <Ssd1306::PutString(char const*)+0x14>
 8010390:	4628      	mov	r0, r5
 8010392:	f7ff ffe3 	bl	801035c <Ssd1306::PutChar(int)>
 8010396:	e7f8      	b.n	801038a <Ssd1306::PutString(char const*)+0x6>
 8010398:	bd38      	pop	{r3, r4, r5, pc}

0801039a <Ssd1306::Text(char const*, unsigned int)>:
 801039a:	b570      	push	{r4, r5, r6, lr}
 801039c:	7903      	ldrb	r3, [r0, #4]
 801039e:	4605      	mov	r5, r0
 80103a0:	460c      	mov	r4, r1
 80103a2:	4293      	cmp	r3, r2
 80103a4:	bf94      	ite	ls
 80103a6:	18ce      	addls	r6, r1, r3
 80103a8:	188e      	addhi	r6, r1, r2
 80103aa:	42b4      	cmp	r4, r6
 80103ac:	d005      	beq.n	80103ba <Ssd1306::Text(char const*, unsigned int)+0x20>
 80103ae:	4628      	mov	r0, r5
 80103b0:	f814 1b01 	ldrb.w	r1, [r4], #1
 80103b4:	f7ff ffd2 	bl	801035c <Ssd1306::PutChar(int)>
 80103b8:	e7f7      	b.n	80103aa <Ssd1306::Text(char const*, unsigned int)+0x10>
 80103ba:	bd70      	pop	{r4, r5, r6, pc}

080103bc <Ssd1306::InitMembers()>:
 80103bc:	7c03      	ldrb	r3, [r0, #16]
 80103be:	b12b      	cbz	r3, 80103cc <Ssd1306::InitMembers()+0x10>
 80103c0:	3b01      	subs	r3, #1
 80103c2:	2b01      	cmp	r3, #1
 80103c4:	d908      	bls.n	80103d8 <Ssd1306::InitMembers()+0x1c>
 80103c6:	f640 0315 	movw	r3, #2069	; 0x815
 80103ca:	e007      	b.n	80103dc <Ssd1306::InitMembers()+0x20>
 80103cc:	f640 0315 	movw	r3, #2069	; 0x815
 80103d0:	8083      	strh	r3, [r0, #4]
 80103d2:	2308      	movs	r3, #8
 80103d4:	6143      	str	r3, [r0, #20]
 80103d6:	4770      	bx	lr
 80103d8:	f240 4315 	movw	r3, #1045	; 0x415
 80103dc:	8083      	strh	r3, [r0, #4]
 80103de:	2304      	movs	r3, #4
 80103e0:	e7f8      	b.n	80103d4 <Ssd1306::InitMembers()+0x18>
	...

080103e4 <Ssd1306::Ssd1306(TOledPanel)>:
 80103e4:	4a08      	ldr	r2, [pc, #32]	; (8010408 <Ssd1306::Ssd1306(TOledPanel)+0x24>)
 80103e6:	b508      	push	{r3, lr}
 80103e8:	6002      	str	r2, [r0, #0]
 80103ea:	227f      	movs	r2, #127	; 0x7f
 80103ec:	80c2      	strh	r2, [r0, #6]
 80103ee:	223c      	movs	r2, #60	; 0x3c
 80103f0:	7202      	strb	r2, [r0, #8]
 80103f2:	4a06      	ldr	r2, [pc, #24]	; (801040c <Ssd1306::Ssd1306(TOledPanel)+0x28>)
 80103f4:	7401      	strb	r1, [r0, #16]
 80103f6:	60c2      	str	r2, [r0, #12]
 80103f8:	2200      	movs	r2, #0
 80103fa:	7442      	strb	r2, [r0, #17]
 80103fc:	4a04      	ldr	r2, [pc, #16]	; (8010410 <Ssd1306::Ssd1306(TOledPanel)+0x2c>)
 80103fe:	6010      	str	r0, [r2, #0]
 8010400:	f7ff ffdc 	bl	80103bc <Ssd1306::InitMembers()>
 8010404:	bd08      	pop	{r3, pc}
 8010406:	bf00      	nop
 8010408:	08015240 	stmdaeq	r1, {r6, r9, ip, lr}
 801040c:	00061a80 	andeq	r1, r6, r0, lsl #21
 8010410:	2000d1ec 	andcs	sp, r0, ip, ror #3

08010414 <Ssd1306::SendCommand(unsigned char)>:
 8010414:	2300      	movs	r3, #0
 8010416:	b507      	push	{r0, r1, r2, lr}
 8010418:	3008      	adds	r0, #8
 801041a:	f88d 3004 	strb.w	r3, [sp, #4]
 801041e:	f88d 1005 	strb.w	r1, [sp, #5]
 8010422:	f7ff ff91 	bl	8010348 <HAL_I2C::Setup()>
 8010426:	2102      	movs	r1, #2
 8010428:	a801      	add	r0, sp, #4
 801042a:	f002 f837 	bl	801249c <gd32_i2c_write(char const*, unsigned int)>
 801042e:	b003      	add	sp, #12
 8010430:	f85d fb04 	ldr.w	pc, [sp], #4

08010434 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>:
 8010434:	2914      	cmp	r1, #20
 8010436:	b570      	push	{r4, r5, r6, lr}
 8010438:	4605      	mov	r5, r0
 801043a:	4616      	mov	r6, r2
 801043c:	d81c      	bhi.n	8010478 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 801043e:	7943      	ldrb	r3, [r0, #5]
 8010440:	4293      	cmp	r3, r2
 8010442:	d919      	bls.n	8010478 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 8010444:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8010448:	7c43      	ldrb	r3, [r0, #17]
 801044a:	004c      	lsls	r4, r1, #1
 801044c:	b2e4      	uxtb	r4, r4
 801044e:	b10b      	cbz	r3, 8010454 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x20>
 8010450:	3404      	adds	r4, #4
 8010452:	b2e4      	uxtb	r4, r4
 8010454:	4628      	mov	r0, r5
 8010456:	f004 010e 	and.w	r1, r4, #14
 801045a:	f7ff ffdb 	bl	8010414 <Ssd1306::SendCommand(unsigned char)>
 801045e:	0921      	lsrs	r1, r4, #4
 8010460:	4628      	mov	r0, r5
 8010462:	f041 0110 	orr.w	r1, r1, #16
 8010466:	f7ff ffd5 	bl	8010414 <Ssd1306::SendCommand(unsigned char)>
 801046a:	4628      	mov	r0, r5
 801046c:	f046 01b0 	orr.w	r1, r6, #176	; 0xb0
 8010470:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010474:	f7ff bfce 	b.w	8010414 <Ssd1306::SendCommand(unsigned char)>
 8010478:	bd70      	pop	{r4, r5, r6, pc}

0801047a <Ssd1306::TextLine(unsigned char, char const*, unsigned int)>:
 801047a:	b570      	push	{r4, r5, r6, lr}
 801047c:	4604      	mov	r4, r0
 801047e:	4615      	mov	r5, r2
 8010480:	461e      	mov	r6, r3
 8010482:	b171      	cbz	r1, 80104a2 <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x28>
 8010484:	7943      	ldrb	r3, [r0, #5]
 8010486:	428b      	cmp	r3, r1
 8010488:	d30b      	bcc.n	80104a2 <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x28>
 801048a:	3901      	subs	r1, #1
 801048c:	b2ca      	uxtb	r2, r1
 801048e:	2100      	movs	r1, #0
 8010490:	f7ff ffd0 	bl	8010434 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8010494:	4632      	mov	r2, r6
 8010496:	4629      	mov	r1, r5
 8010498:	4620      	mov	r0, r4
 801049a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801049e:	f7ff bf7c 	b.w	801039a <Ssd1306::Text(char const*, unsigned int)>
 80104a2:	bd70      	pop	{r4, r5, r6, pc}

080104a4 <Ssd1306::ClearLine(unsigned char)>:
 80104a4:	b538      	push	{r3, r4, r5, lr}
 80104a6:	4605      	mov	r5, r0
 80104a8:	b1b9      	cbz	r1, 80104da <Ssd1306::ClearLine(unsigned char)+0x36>
 80104aa:	7943      	ldrb	r3, [r0, #5]
 80104ac:	428b      	cmp	r3, r1
 80104ae:	d314      	bcc.n	80104da <Ssd1306::ClearLine(unsigned char)+0x36>
 80104b0:	3901      	subs	r1, #1
 80104b2:	b2cc      	uxtb	r4, r1
 80104b4:	4622      	mov	r2, r4
 80104b6:	2100      	movs	r1, #0
 80104b8:	f7ff ffbc 	bl	8010434 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 80104bc:	f105 0008 	add.w	r0, r5, #8
 80104c0:	f7ff ff42 	bl	8010348 <HAL_I2C::Setup()>
 80104c4:	2181      	movs	r1, #129	; 0x81
 80104c6:	4805      	ldr	r0, [pc, #20]	; (80104dc <Ssd1306::ClearLine(unsigned char)+0x38>)
 80104c8:	f001 ffe8 	bl	801249c <gd32_i2c_write(char const*, unsigned int)>
 80104cc:	4622      	mov	r2, r4
 80104ce:	4628      	mov	r0, r5
 80104d0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80104d4:	2100      	movs	r1, #0
 80104d6:	f7ff bfad 	b.w	8010434 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 80104da:	bd38      	pop	{r3, r4, r5, pc}
 80104dc:	2000d164 	andcs	sp, r0, r4, ror #2

080104e0 <Ssd1306::SetSleep(bool)>:
 80104e0:	b111      	cbz	r1, 80104e8 <Ssd1306::SetSleep(bool)+0x8>
 80104e2:	21ae      	movs	r1, #174	; 0xae
 80104e4:	f7ff bf96 	b.w	8010414 <Ssd1306::SendCommand(unsigned char)>
 80104e8:	21af      	movs	r1, #175	; 0xaf
 80104ea:	e7fb      	b.n	80104e4 <Ssd1306::SetSleep(bool)+0x4>

080104ec <Ssd1306::SetContrast(unsigned char)>:
 80104ec:	b538      	push	{r3, r4, r5, lr}
 80104ee:	4604      	mov	r4, r0
 80104f0:	460d      	mov	r5, r1
 80104f2:	7181      	strb	r1, [r0, #6]
 80104f4:	2181      	movs	r1, #129	; 0x81
 80104f6:	f7ff ff8d 	bl	8010414 <Ssd1306::SendCommand(unsigned char)>
 80104fa:	4629      	mov	r1, r5
 80104fc:	4620      	mov	r0, r4
 80104fe:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8010502:	f7ff bf87 	b.w	8010414 <Ssd1306::SendCommand(unsigned char)>

08010506 <Ssd1306::SetFlipVertically(bool)>:
 8010506:	b510      	push	{r4, lr}
 8010508:	4604      	mov	r4, r0
 801050a:	71c1      	strb	r1, [r0, #7]
 801050c:	b141      	cbz	r1, 8010520 <Ssd1306::SetFlipVertically(bool)+0x1a>
 801050e:	21c0      	movs	r1, #192	; 0xc0
 8010510:	f7ff ff80 	bl	8010414 <Ssd1306::SendCommand(unsigned char)>
 8010514:	21a0      	movs	r1, #160	; 0xa0
 8010516:	4620      	mov	r0, r4
 8010518:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801051c:	f7ff bf7a 	b.w	8010414 <Ssd1306::SendCommand(unsigned char)>
 8010520:	21c8      	movs	r1, #200	; 0xc8
 8010522:	f7ff ff77 	bl	8010414 <Ssd1306::SendCommand(unsigned char)>
 8010526:	21a1      	movs	r1, #161	; 0xa1
 8010528:	e7f5      	b.n	8010516 <Ssd1306::SetFlipVertically(bool)+0x10>
	...

0801052c <Ssd1306::CheckSH1106()>:
 801052c:	b570      	push	{r4, r5, r6, lr}
 801052e:	4604      	mov	r4, r0
 8010530:	b086      	sub	sp, #24
 8010532:	2100      	movs	r1, #0
 8010534:	f7ff ff6e 	bl	8010414 <Ssd1306::SendCommand(unsigned char)>
 8010538:	2190      	movs	r1, #144	; 0x90
 801053a:	4620      	mov	r0, r4
 801053c:	f7ff ff6a 	bl	8010414 <Ssd1306::SendCommand(unsigned char)>
 8010540:	21b0      	movs	r1, #176	; 0xb0
 8010542:	4620      	mov	r0, r4
 8010544:	f7ff ff66 	bl	8010414 <Ssd1306::SendCommand(unsigned char)>
 8010548:	4b22      	ldr	r3, [pc, #136]	; (80105d4 <Ssd1306::CheckSH1106()+0xa8>)
 801054a:	f104 0608 	add.w	r6, r4, #8
 801054e:	6818      	ldr	r0, [r3, #0]
 8010550:	791b      	ldrb	r3, [r3, #4]
 8010552:	ad02      	add	r5, sp, #8
 8010554:	9002      	str	r0, [sp, #8]
 8010556:	4630      	mov	r0, r6
 8010558:	712b      	strb	r3, [r5, #4]
 801055a:	f7ff fef5 	bl	8010348 <HAL_I2C::Setup()>
 801055e:	2105      	movs	r1, #5
 8010560:	4628      	mov	r0, r5
 8010562:	f001 ff9b 	bl	801249c <gd32_i2c_write(char const*, unsigned int)>
 8010566:	2100      	movs	r1, #0
 8010568:	4620      	mov	r0, r4
 801056a:	f7ff ff53 	bl	8010414 <Ssd1306::SendCommand(unsigned char)>
 801056e:	2190      	movs	r1, #144	; 0x90
 8010570:	4620      	mov	r0, r4
 8010572:	f7ff ff4f 	bl	8010414 <Ssd1306::SendCommand(unsigned char)>
 8010576:	21b0      	movs	r1, #176	; 0xb0
 8010578:	4620      	mov	r0, r4
 801057a:	f7ff ff4b 	bl	8010414 <Ssd1306::SendCommand(unsigned char)>
 801057e:	2300      	movs	r3, #0
 8010580:	9304      	str	r3, [sp, #16]
 8010582:	f88d 3014 	strb.w	r3, [sp, #20]
 8010586:	2340      	movs	r3, #64	; 0x40
 8010588:	4630      	mov	r0, r6
 801058a:	f88d 3007 	strb.w	r3, [sp, #7]
 801058e:	f7ff fedb 	bl	8010348 <HAL_I2C::Setup()>
 8010592:	2101      	movs	r1, #1
 8010594:	f10d 0007 	add.w	r0, sp, #7
 8010598:	f001 ff80 	bl	801249c <gd32_i2c_write(char const*, unsigned int)>
 801059c:	4630      	mov	r0, r6
 801059e:	f7ff fed3 	bl	8010348 <HAL_I2C::Setup()>
 80105a2:	2105      	movs	r1, #5
 80105a4:	a804      	add	r0, sp, #16
 80105a6:	f001 ffdf 	bl	8012568 <gd32_i2c_read(char*, unsigned int)>
 80105aa:	2201      	movs	r2, #1
 80105ac:	5cab      	ldrb	r3, [r5, r2]
 80105ae:	a904      	add	r1, sp, #16
 80105b0:	3201      	adds	r2, #1
 80105b2:	4411      	add	r1, r2
 80105b4:	f811 1c01 	ldrb.w	r1, [r1, #-1]
 80105b8:	428b      	cmp	r3, r1
 80105ba:	d006      	beq.n	80105ca <Ssd1306::CheckSH1106()+0x9e>
 80105bc:	1a5b      	subs	r3, r3, r1
 80105be:	fab3 f383 	clz	r3, r3
 80105c2:	095b      	lsrs	r3, r3, #5
 80105c4:	7463      	strb	r3, [r4, #17]
 80105c6:	b006      	add	sp, #24
 80105c8:	bd70      	pop	{r4, r5, r6, pc}
 80105ca:	2a05      	cmp	r2, #5
 80105cc:	d1ee      	bne.n	80105ac <Ssd1306::CheckSH1106()+0x80>
 80105ce:	2300      	movs	r3, #0
 80105d0:	e7f5      	b.n	80105be <Ssd1306::CheckSH1106()+0x92>
 80105d2:	bf00      	nop
 80105d4:	08014f5f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, lr}

080105d8 <Ssd1306::Cls()>:
 80105d8:	7c43      	ldrb	r3, [r0, #17]
 80105da:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80105de:	2b00      	cmp	r3, #0
 80105e0:	bf0c      	ite	eq
 80105e2:	2500      	moveq	r5, #0
 80105e4:	2504      	movne	r5, #4
 80105e6:	4604      	mov	r4, r0
 80105e8:	2600      	movs	r6, #0
 80105ea:	f1a5 077f 	sub.w	r7, r5, #127	; 0x7f
 80105ee:	f045 0810 	orr.w	r8, r5, #16
 80105f2:	b2ff      	uxtb	r7, r7
 80105f4:	6963      	ldr	r3, [r4, #20]
 80105f6:	4629      	mov	r1, r5
 80105f8:	42b3      	cmp	r3, r6
 80105fa:	4620      	mov	r0, r4
 80105fc:	d91b      	bls.n	8010636 <Ssd1306::Cls()+0x5e>
 80105fe:	f7ff ff09 	bl	8010414 <Ssd1306::SendCommand(unsigned char)>
 8010602:	4641      	mov	r1, r8
 8010604:	4620      	mov	r0, r4
 8010606:	f7ff ff05 	bl	8010414 <Ssd1306::SendCommand(unsigned char)>
 801060a:	f066 014f 	orn	r1, r6, #79	; 0x4f
 801060e:	4620      	mov	r0, r4
 8010610:	b2c9      	uxtb	r1, r1
 8010612:	f7ff feff 	bl	8010414 <Ssd1306::SendCommand(unsigned char)>
 8010616:	7c23      	ldrb	r3, [r4, #16]
 8010618:	b123      	cbz	r3, 8010624 <Ssd1306::Cls()+0x4c>
 801061a:	3b01      	subs	r3, #1
 801061c:	2b01      	cmp	r3, #1
 801061e:	d901      	bls.n	8010624 <Ssd1306::Cls()+0x4c>
 8010620:	3601      	adds	r6, #1
 8010622:	e7e7      	b.n	80105f4 <Ssd1306::Cls()+0x1c>
 8010624:	f104 0008 	add.w	r0, r4, #8
 8010628:	f7ff fe8e 	bl	8010348 <HAL_I2C::Setup()>
 801062c:	4639      	mov	r1, r7
 801062e:	4808      	ldr	r0, [pc, #32]	; (8010650 <Ssd1306::Cls()+0x78>)
 8010630:	f001 ff34 	bl	801249c <gd32_i2c_write(char const*, unsigned int)>
 8010634:	e7f4      	b.n	8010620 <Ssd1306::Cls()+0x48>
 8010636:	f7ff feed 	bl	8010414 <Ssd1306::SendCommand(unsigned char)>
 801063a:	4641      	mov	r1, r8
 801063c:	4620      	mov	r0, r4
 801063e:	f7ff fee9 	bl	8010414 <Ssd1306::SendCommand(unsigned char)>
 8010642:	4620      	mov	r0, r4
 8010644:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8010648:	21b0      	movs	r1, #176	; 0xb0
 801064a:	f7ff bee3 	b.w	8010414 <Ssd1306::SendCommand(unsigned char)>
 801064e:	bf00      	nop
 8010650:	2000d164 	andcs	sp, r0, r4, ror #2

08010654 <Ssd1306::Start()>:
 8010654:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8010656:	7a04      	ldrb	r4, [r0, #8]
 8010658:	68c6      	ldr	r6, [r0, #12]
 801065a:	4605      	mov	r5, r0
 801065c:	4620      	mov	r0, r4
 801065e:	f001 ff17 	bl	8012490 <gd32_i2c_set_address(unsigned char)>
 8010662:	4630      	mov	r0, r6
 8010664:	f001 ff0c 	bl	8012480 <gd32_i2c_set_baudrate(unsigned int)>
 8010668:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 801066c:	2b07      	cmp	r3, #7
 801066e:	d902      	bls.n	8010676 <Ssd1306::Start()+0x22>
 8010670:	3c50      	subs	r4, #80	; 0x50
 8010672:	2c0f      	cmp	r4, #15
 8010674:	d80f      	bhi.n	8010696 <Ssd1306::Start()+0x42>
 8010676:	2101      	movs	r1, #1
 8010678:	f10d 0007 	add.w	r0, sp, #7
 801067c:	f001 ff74 	bl	8012568 <gd32_i2c_read(char*, unsigned int)>
 8010680:	fab0 f480 	clz	r4, r0
 8010684:	0964      	lsrs	r4, r4, #5
 8010686:	b35c      	cbz	r4, 80106e0 <Ssd1306::Start()+0x8c>
 8010688:	7c2e      	ldrb	r6, [r5, #16]
 801068a:	b14e      	cbz	r6, 80106a0 <Ssd1306::Start()+0x4c>
 801068c:	3e01      	subs	r6, #1
 801068e:	2e01      	cmp	r6, #1
 8010690:	d929      	bls.n	80106e6 <Ssd1306::Start()+0x92>
 8010692:	2400      	movs	r4, #0
 8010694:	e024      	b.n	80106e0 <Ssd1306::Start()+0x8c>
 8010696:	2100      	movs	r1, #0
 8010698:	4608      	mov	r0, r1
 801069a:	f001 feff 	bl	801249c <gd32_i2c_write(char const*, unsigned int)>
 801069e:	e7ef      	b.n	8010680 <Ssd1306::Start()+0x2c>
 80106a0:	4f16      	ldr	r7, [pc, #88]	; (80106fc <Ssd1306::Start()+0xa8>)
 80106a2:	4628      	mov	r0, r5
 80106a4:	f817 1b01 	ldrb.w	r1, [r7], #1
 80106a8:	3601      	adds	r6, #1
 80106aa:	f7ff feb3 	bl	8010414 <Ssd1306::SendCommand(unsigned char)>
 80106ae:	2e18      	cmp	r6, #24
 80106b0:	d1f7      	bne.n	80106a2 <Ssd1306::Start()+0x4e>
 80106b2:	2300      	movs	r3, #0
 80106b4:	4a12      	ldr	r2, [pc, #72]	; (8010700 <Ssd1306::Start()+0xac>)
 80106b6:	4618      	mov	r0, r3
 80106b8:	4611      	mov	r1, r2
 80106ba:	3301      	adds	r3, #1
 80106bc:	2b86      	cmp	r3, #134	; 0x86
 80106be:	f802 0b01 	strb.w	r0, [r2], #1
 80106c2:	d1fa      	bne.n	80106ba <Ssd1306::Start()+0x66>
 80106c4:	2340      	movs	r3, #64	; 0x40
 80106c6:	4628      	mov	r0, r5
 80106c8:	700b      	strb	r3, [r1, #0]
 80106ca:	f7ff ff2f 	bl	801052c <Ssd1306::CheckSH1106()>
 80106ce:	4628      	mov	r0, r5
 80106d0:	f7ff ff82 	bl	80105d8 <Ssd1306::Cls()>
 80106d4:	21af      	movs	r1, #175	; 0xaf
 80106d6:	4628      	mov	r0, r5
 80106d8:	f7ff fe9c 	bl	8010414 <Ssd1306::SendCommand(unsigned char)>
 80106dc:	2301      	movs	r3, #1
 80106de:	71eb      	strb	r3, [r5, #7]
 80106e0:	4620      	mov	r0, r4
 80106e2:	b003      	add	sp, #12
 80106e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80106e6:	2600      	movs	r6, #0
 80106e8:	4f06      	ldr	r7, [pc, #24]	; (8010704 <Ssd1306::Start()+0xb0>)
 80106ea:	4628      	mov	r0, r5
 80106ec:	f817 1b01 	ldrb.w	r1, [r7], #1
 80106f0:	3601      	adds	r6, #1
 80106f2:	f7ff fe8f 	bl	8010414 <Ssd1306::SendCommand(unsigned char)>
 80106f6:	2e18      	cmp	r6, #24
 80106f8:	d1f7      	bne.n	80106ea <Ssd1306::Start()+0x96>
 80106fa:	e7da      	b.n	80106b2 <Ssd1306::Start()+0x5e>
 80106fc:	08015220 	stmdaeq	r1, {r5, r9, ip, lr}
 8010700:	2000d164 	andcs	sp, r0, r4, ror #2
 8010704:	08015208 	stmdaeq	r1, {r3, r9, ip, lr}

08010708 <console_putc>:
 8010708:	f000 bef2 	b.w	80114f0 <uart0_putc>

0801070c <console_puts>:
 801070c:	f000 bf10 	b.w	8011530 <uart0_puts>

08010710 <console_set_fg_color>:
 8010710:	2807      	cmp	r0, #7
 8010712:	d810      	bhi.n	8010736 <console_set_fg_color+0x26>
 8010714:	e8df f000 	tbb	[pc, r0]
 8010718:	0b090704 	bleq	8252330 <__exidx_end+0x23cfbc>
 801071c:	0d0f0f0f 	stceq	15, cr0, [pc, #-60]	; 80106e8 <Ssd1306::Start()+0x94>
 8010720:	4806      	ldr	r0, [pc, #24]	; (801073c <console_set_fg_color+0x2c>)
 8010722:	f000 bf05 	b.w	8011530 <uart0_puts>
 8010726:	4806      	ldr	r0, [pc, #24]	; (8010740 <console_set_fg_color+0x30>)
 8010728:	e7fb      	b.n	8010722 <console_set_fg_color+0x12>
 801072a:	4806      	ldr	r0, [pc, #24]	; (8010744 <console_set_fg_color+0x34>)
 801072c:	e7f9      	b.n	8010722 <console_set_fg_color+0x12>
 801072e:	4806      	ldr	r0, [pc, #24]	; (8010748 <console_set_fg_color+0x38>)
 8010730:	e7f7      	b.n	8010722 <console_set_fg_color+0x12>
 8010732:	4806      	ldr	r0, [pc, #24]	; (801074c <console_set_fg_color+0x3c>)
 8010734:	e7f5      	b.n	8010722 <console_set_fg_color+0x12>
 8010736:	4806      	ldr	r0, [pc, #24]	; (8010750 <console_set_fg_color+0x40>)
 8010738:	e7f3      	b.n	8010722 <console_set_fg_color+0x12>
 801073a:	bf00      	nop
 801073c:	0801527e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r9, ip, lr}
 8010740:	08015284 	stmdaeq	r1, {r2, r7, r9, ip, lr}
 8010744:	0801528a 	stmdaeq	r1, {r1, r3, r7, r9, ip, lr}
 8010748:	08015290 	stmdaeq	r1, {r4, r7, r9, ip, lr}
 801074c:	080134df 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r7, sl, ip, sp}
 8010750:	08015296 	stmdaeq	r1, {r1, r2, r4, r7, r9, ip, lr}

08010754 <console_error>:
 8010754:	b510      	push	{r4, lr}
 8010756:	4604      	mov	r4, r0
 8010758:	4805      	ldr	r0, [pc, #20]	; (8010770 <console_error+0x1c>)
 801075a:	f000 fee9 	bl	8011530 <uart0_puts>
 801075e:	4620      	mov	r0, r4
 8010760:	f000 fee6 	bl	8011530 <uart0_puts>
 8010764:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010768:	4802      	ldr	r0, [pc, #8]	; (8010774 <console_error+0x20>)
 801076a:	f000 bee1 	b.w	8011530 <uart0_puts>
 801076e:	bf00      	nop
 8010770:	08015284 	stmdaeq	r1, {r2, r7, r9, ip, lr}
 8010774:	080134df 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r7, sl, ip, sp}

08010778 <console_status>:
 8010778:	b510      	push	{r4, lr}
 801077a:	460c      	mov	r4, r1
 801077c:	b280      	uxth	r0, r0
 801077e:	f7ff ffc7 	bl	8010710 <console_set_fg_color>
 8010782:	4807      	ldr	r0, [pc, #28]	; (80107a0 <console_status+0x28>)
 8010784:	f000 fed4 	bl	8011530 <uart0_puts>
 8010788:	4620      	mov	r0, r4
 801078a:	f000 fed1 	bl	8011530 <uart0_puts>
 801078e:	200a      	movs	r0, #10
 8010790:	f000 feae 	bl	80114f0 <uart0_putc>
 8010794:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010798:	4802      	ldr	r0, [pc, #8]	; (80107a4 <console_status+0x2c>)
 801079a:	f000 bec9 	b.w	8011530 <uart0_puts>
 801079e:	bf00      	nop
 80107a0:	08015278 	stmdaeq	r1, {r3, r4, r5, r6, r9, ip, lr}
 80107a4:	080134df 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r7, sl, ip, sp}

080107a8 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>:
 80107a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80107ac:	4617      	mov	r7, r2
 80107ae:	461e      	mov	r6, r3
 80107b0:	4d14      	ldr	r5, [pc, #80]	; (8010804 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x5c>)
 80107b2:	4b15      	ldr	r3, [pc, #84]	; (8010808 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x60>)
 80107b4:	b086      	sub	sp, #24
 80107b6:	6018      	str	r0, [r3, #0]
 80107b8:	4604      	mov	r4, r0
 80107ba:	f105 0803 	add.w	r8, r5, #3
 80107be:	2203      	movs	r2, #3
 80107c0:	4628      	mov	r0, r5
 80107c2:	f000 f9fc 	bl	8010bbe <memmove>
 80107c6:	4639      	mov	r1, r7
 80107c8:	220b      	movs	r2, #11
 80107ca:	4640      	mov	r0, r8
 80107cc:	f000 f9f7 	bl	8010bbe <memmove>
 80107d0:	f105 030e 	add.w	r3, r5, #14
 80107d4:	4631      	mov	r1, r6
 80107d6:	2208      	movs	r2, #8
 80107d8:	4618      	mov	r0, r3
 80107da:	f000 f9f0 	bl	8010bbe <memmove>
 80107de:	2308      	movs	r3, #8
 80107e0:	e9cd 8303 	strd	r8, r3, [sp, #12]
 80107e4:	230b      	movs	r3, #11
 80107e6:	9302      	str	r3, [sp, #8]
 80107e8:	4b08      	ldr	r3, [pc, #32]	; (801080c <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x64>)
 80107ea:	9005      	str	r0, [sp, #20]
 80107ec:	e9cd 5300 	strd	r5, r3, [sp]
 80107f0:	213f      	movs	r1, #63	; 0x3f
 80107f2:	2303      	movs	r3, #3
 80107f4:	4a06      	ldr	r2, [pc, #24]	; (8010810 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x68>)
 80107f6:	4807      	ldr	r0, [pc, #28]	; (8010814 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x6c>)
 80107f8:	f000 fd50 	bl	801129c <snprintf>
 80107fc:	4620      	mov	r0, r4
 80107fe:	b006      	add	sp, #24
 8010800:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010804:	2000d1f0 	strdcs	sp, [r0], -r0
 8010808:	2000d248 	andcs	sp, r0, r8, asr #4
 801080c:	08013b98 	stmdaeq	r1, {r3, r4, r7, r8, r9, fp, ip, sp}
 8010810:	0801529c 	stmdaeq	r1, {r2, r3, r4, r7, r9, ip, lr}
 8010814:	2000d206 	andcs	sp, r0, r6, lsl #4

08010818 <FirmwareVersion::Print(char const*)>:
 8010818:	b510      	push	{r4, lr}
 801081a:	460c      	mov	r4, r1
 801081c:	4804      	ldr	r0, [pc, #16]	; (8010830 <FirmwareVersion::Print(char const*)+0x18>)
 801081e:	f000 fd65 	bl	80112ec <puts>
 8010822:	b124      	cbz	r4, 801082e <FirmwareVersion::Print(char const*)+0x16>
 8010824:	4620      	mov	r0, r4
 8010826:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801082a:	f000 bd5f 	b.w	80112ec <puts>
 801082e:	bd10      	pop	{r4, pc}
 8010830:	2000d206 	andcs	sp, r0, r6, lsl #4

08010834 <LedBlink::LedBlink()>:
 8010834:	b538      	push	{r3, r4, r5, lr}
 8010836:	2205      	movs	r2, #5
 8010838:	2300      	movs	r3, #0
 801083a:	e9c0 3200 	strd	r3, r2, [r0]
 801083e:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 8010842:	6083      	str	r3, [r0, #8]
 8010844:	e9c0 2303 	strd	r2, r3, [r0, #12]
 8010848:	6143      	str	r3, [r0, #20]
 801084a:	4b09      	ldr	r3, [pc, #36]	; (8010870 <LedBlink::LedBlink()+0x3c>)
 801084c:	4d09      	ldr	r5, [pc, #36]	; (8010874 <LedBlink::LedBlink()+0x40>)
 801084e:	4604      	mov	r4, r0
 8010850:	6018      	str	r0, [r3, #0]
 8010852:	f240 6004 	movw	r0, #1540	; 0x604
 8010856:	f001 f8eb 	bl	8011a30 <rcu_periph_clock_enable>
 801085a:	4628      	mov	r0, r5
 801085c:	2301      	movs	r3, #1
 801085e:	2203      	movs	r2, #3
 8010860:	2110      	movs	r1, #16
 8010862:	f001 f84d 	bl	8011900 <gpio_init>
 8010866:	2301      	movs	r3, #1
 8010868:	4620      	mov	r0, r4
 801086a:	616b      	str	r3, [r5, #20]
 801086c:	bd38      	pop	{r3, r4, r5, pc}
 801086e:	bf00      	nop
 8010870:	2000d24c 	andcs	sp, r0, ip, asr #4
 8010874:	40011000 	andmi	r1, r1, r0

08010878 <LedBlink::SetMode(ledblink::Mode)>:
 8010878:	6843      	ldr	r3, [r0, #4]
 801087a:	428b      	cmp	r3, r1
 801087c:	d02f      	beq.n	80108de <LedBlink::SetMode(ledblink::Mode)+0x66>
 801087e:	6041      	str	r1, [r0, #4]
 8010880:	2904      	cmp	r1, #4
 8010882:	d822      	bhi.n	80108ca <LedBlink::SetMode(ledblink::Mode)+0x52>
 8010884:	e8df f001 	tbb	[pc, r1]
 8010888:	18120321 	ldmdane	r2, {r0, r5, r8, r9}
 801088c:	23ff001d 	mvnscs	r0, #29
 8010890:	6003      	str	r3, [r0, #0]
 8010892:	2300      	movs	r3, #0
 8010894:	2201      	movs	r2, #1
 8010896:	60c3      	str	r3, [r0, #12]
 8010898:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801089c:	f503 3388 	add.w	r3, r3, #69632	; 0x11000
 80108a0:	611a      	str	r2, [r3, #16]
 80108a2:	6880      	ldr	r0, [r0, #8]
 80108a4:	b1d8      	cbz	r0, 80108de <LedBlink::SetMode(ledblink::Mode)+0x66>
 80108a6:	6803      	ldr	r3, [r0, #0]
 80108a8:	689b      	ldr	r3, [r3, #8]
 80108aa:	4718      	bx	r3
 80108ac:	2301      	movs	r3, #1
 80108ae:	6003      	str	r3, [r0, #0]
 80108b0:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80108b4:	60c3      	str	r3, [r0, #12]
 80108b6:	e7f4      	b.n	80108a2 <LedBlink::SetMode(ledblink::Mode)+0x2a>
 80108b8:	2303      	movs	r3, #3
 80108ba:	6003      	str	r3, [r0, #0]
 80108bc:	f240 134d 	movw	r3, #333	; 0x14d
 80108c0:	e7f8      	b.n	80108b4 <LedBlink::SetMode(ledblink::Mode)+0x3c>
 80108c2:	2305      	movs	r3, #5
 80108c4:	6003      	str	r3, [r0, #0]
 80108c6:	23c8      	movs	r3, #200	; 0xc8
 80108c8:	e7f4      	b.n	80108b4 <LedBlink::SetMode(ledblink::Mode)+0x3c>
 80108ca:	2300      	movs	r3, #0
 80108cc:	2201      	movs	r2, #1
 80108ce:	6003      	str	r3, [r0, #0]
 80108d0:	60c3      	str	r3, [r0, #12]
 80108d2:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80108d6:	f503 3388 	add.w	r3, r3, #69632	; 0x11000
 80108da:	615a      	str	r2, [r3, #20]
 80108dc:	e7e1      	b.n	80108a2 <LedBlink::SetMode(ledblink::Mode)+0x2a>
 80108de:	4770      	bx	lr

080108e0 <Hardware::Hardware()>:
 80108e0:	b570      	push	{r4, r5, r6, lr}
 80108e2:	2400      	movs	r4, #0
 80108e4:	4b25      	ldr	r3, [pc, #148]	; (801097c <Hardware::Hardware()+0x9c>)
 80108e6:	b090      	sub	sp, #64	; 0x40
 80108e8:	6004      	str	r4, [r0, #0]
 80108ea:	7104      	strb	r4, [r0, #4]
 80108ec:	4e24      	ldr	r6, [pc, #144]	; (8010980 <Hardware::Hardware()+0xa0>)
 80108ee:	6018      	str	r0, [r3, #0]
 80108f0:	4605      	mov	r5, r0
 80108f2:	f7f6 fe35 	bl	8007560 <console_init>
 80108f6:	f000 fe2b 	bl	8011550 <systick_config>
 80108fa:	f002 f837 	bl	801296c <udelay_init()>
 80108fe:	f001 ffe7 	bl	80128d0 <micros_init()>
 8010902:	f240 7004 	movw	r0, #1796	; 0x704
 8010906:	f001 f893 	bl	8011a30 <rcu_periph_clock_enable>
 801090a:	4630      	mov	r0, r6
 801090c:	f001 fa04 	bl	8011d18 <timer_deinit>
 8010910:	2377      	movs	r3, #119	; 0x77
 8010912:	f8ad 300c 	strh.w	r3, [sp, #12]
 8010916:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 801091a:	a903      	add	r1, sp, #12
 801091c:	4630      	mov	r0, r6
 801091e:	9305      	str	r3, [sp, #20]
 8010920:	f001 faa0 	bl	8011e64 <timer_init>
 8010924:	4630      	mov	r0, r6
 8010926:	f001 faf5 	bl	8011f14 <timer_enable>
 801092a:	2602      	movs	r6, #2
 801092c:	f001 fd1a 	bl	8012364 <gd32_adc_init()>
 8010930:	237a      	movs	r3, #122	; 0x7a
 8010932:	a807      	add	r0, sp, #28
 8010934:	930c      	str	r3, [sp, #48]	; 0x30
 8010936:	e9cd 4408 	strd	r4, r4, [sp, #32]
 801093a:	e9cd 660a 	strd	r6, r6, [sp, #40]	; 0x28
 801093e:	9407      	str	r4, [sp, #28]
 8010940:	940f      	str	r4, [sp, #60]	; 0x3c
 8010942:	f000 fd2b 	bl	801139c <mktime>
 8010946:	4621      	mov	r1, r4
 8010948:	e9cd 0401 	strd	r0, r4, [sp, #4]
 801094c:	a801      	add	r0, sp, #4
 801094e:	f000 fd9b 	bl	8011488 <settimeofday>
 8010952:	f240 701b 	movw	r0, #1819	; 0x71b
 8010956:	f001 f86b 	bl	8011a30 <rcu_periph_clock_enable>
 801095a:	f240 701c 	movw	r0, #1820	; 0x71c
 801095e:	f001 f867 	bl	8011a30 <rcu_periph_clock_enable>
 8010962:	f001 f85d 	bl	8011a20 <pmu_backup_write_enable>
 8010966:	f000 fe97 	bl	8011698 <bkp_deinit>
 801096a:	4630      	mov	r0, r6
 801096c:	4621      	mov	r1, r4
 801096e:	f000 fe9b 	bl	80116a8 <bkp_data_write>
 8010972:	f001 fd51 	bl	8012418 <gd32_i2c_begin()>
 8010976:	4628      	mov	r0, r5
 8010978:	b010      	add	sp, #64	; 0x40
 801097a:	bd70      	pop	{r4, r5, r6, pc}
 801097c:	2000d250 	andcs	sp, r0, r0, asr r2
 8010980:	40001000 	andmi	r1, r0, r0

08010984 <Hardware::GetUuid(unsigned char*)>:
 8010984:	4a0c      	ldr	r2, [pc, #48]	; (80109b8 <Hardware::GetUuid(unsigned char*)+0x34>)
 8010986:	b084      	sub	sp, #16
 8010988:	f8d2 37e8 	ldr.w	r3, [r2, #2024]	; 0x7e8
 801098c:	9300      	str	r3, [sp, #0]
 801098e:	f8d2 07ec 	ldr.w	r0, [r2, #2028]	; 0x7ec
 8010992:	9001      	str	r0, [sp, #4]
 8010994:	f8d2 27f0 	ldr.w	r2, [r2, #2032]	; 0x7f0
 8010998:	4403      	add	r3, r0
 801099a:	4413      	add	r3, r2
 801099c:	9202      	str	r2, [sp, #8]
 801099e:	466a      	mov	r2, sp
 80109a0:	9303      	str	r3, [sp, #12]
 80109a2:	1e4b      	subs	r3, r1, #1
 80109a4:	310f      	adds	r1, #15
 80109a6:	428b      	cmp	r3, r1
 80109a8:	d004      	beq.n	80109b4 <Hardware::GetUuid(unsigned char*)+0x30>
 80109aa:	f812 0b01 	ldrb.w	r0, [r2], #1
 80109ae:	f803 0f01 	strb.w	r0, [r3, #1]!
 80109b2:	e7f8      	b.n	80109a6 <Hardware::GetUuid(unsigned char*)+0x22>
 80109b4:	b004      	add	sp, #16
 80109b6:	4770      	bx	lr
 80109b8:	1ffff000 	svcne	0x00fff000

080109bc <Hardware::Reboot()>:
 80109bc:	b508      	push	{r3, lr}
 80109be:	6803      	ldr	r3, [r0, #0]
 80109c0:	4604      	mov	r4, r0
 80109c2:	b153      	cbz	r3, 80109da <Hardware::Reboot()+0x1e>
 80109c4:	2300      	movs	r3, #0
 80109c6:	2104      	movs	r1, #4
 80109c8:	7103      	strb	r3, [r0, #4]
 80109ca:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80109ce:	f000 ff6d 	bl	80118ac <fwdgt_config>
 80109d2:	6820      	ldr	r0, [r4, #0]
 80109d4:	6803      	ldr	r3, [r0, #0]
 80109d6:	689b      	ldr	r3, [r3, #8]
 80109d8:	4798      	blx	r3
 80109da:	2102      	movs	r1, #2
 80109dc:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80109e0:	f000 ff64 	bl	80118ac <fwdgt_config>
 80109e4:	2801      	cmp	r0, #1
 80109e6:	bf0c      	ite	eq
 80109e8:	2301      	moveq	r3, #1
 80109ea:	2300      	movne	r3, #0
 80109ec:	7123      	strb	r3, [r4, #4]
 80109ee:	d101      	bne.n	80109f4 <Hardware::Reboot()+0x38>
 80109f0:	f000 ff4c 	bl	801188c <fwdgt_enable>
 80109f4:	2208      	movs	r2, #8
 80109f6:	4b0d      	ldr	r3, [pc, #52]	; (8010a2c <Hardware::Reboot()+0x70>)
 80109f8:	2501      	movs	r5, #1
 80109fa:	681b      	ldr	r3, [r3, #0]
 80109fc:	480c      	ldr	r0, [pc, #48]	; (8010a30 <Hardware::Reboot()+0x74>)
 80109fe:	601a      	str	r2, [r3, #0]
 8010a00:	227d      	movs	r2, #125	; 0x7d
 8010a02:	490c      	ldr	r1, [pc, #48]	; (8010a34 <Hardware::Reboot()+0x78>)
 8010a04:	60da      	str	r2, [r3, #12]
 8010a06:	68dc      	ldr	r4, [r3, #12]
 8010a08:	b904      	cbnz	r4, 8010a0c <Hardware::Reboot()+0x50>
 8010a0a:	e7fe      	b.n	8010a0a <Hardware::Reboot()+0x4e>
 8010a0c:	6802      	ldr	r2, [r0, #0]
 8010a0e:	695e      	ldr	r6, [r3, #20]
 8010a10:	1b92      	subs	r2, r2, r6
 8010a12:	4294      	cmp	r4, r2
 8010a14:	d8f8      	bhi.n	8010a08 <Hardware::Reboot()+0x4c>
 8010a16:	6802      	ldr	r2, [r0, #0]
 8010a18:	615a      	str	r2, [r3, #20]
 8010a1a:	691a      	ldr	r2, [r3, #16]
 8010a1c:	2a01      	cmp	r2, #1
 8010a1e:	f082 0401 	eor.w	r4, r2, #1
 8010a22:	611c      	str	r4, [r3, #16]
 8010a24:	bf14      	ite	ne
 8010a26:	610d      	strne	r5, [r1, #16]
 8010a28:	614a      	streq	r2, [r1, #20]
 8010a2a:	e7ec      	b.n	8010a06 <Hardware::Reboot()+0x4a>
 8010a2c:	2000d24c 	andcs	sp, r0, ip, asr #4
 8010a30:	2000d26c 	andcs	sp, r0, ip, ror #4
 8010a34:	40011000 	andmi	r1, r1, r0

08010a38 <operator delete(void*)>:
 8010a38:	f000 b890 	b.w	8010b5c <free>

08010a3c <operator delete[](void*)>:
 8010a3c:	f000 b88e 	b.w	8010b5c <free>

08010a40 <operator new(unsigned int)>:
 8010a40:	f000 b842 	b.w	8010ac8 <malloc>

08010a44 <operator new[](unsigned int)>:
 8010a44:	f000 b840 	b.w	8010ac8 <malloc>

08010a48 <inet_aton>:
 8010a48:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8010a4a:	f04f 0c0a 	mov.w	ip, #10
 8010a4e:	2500      	movs	r5, #0
 8010a50:	ae01      	add	r6, sp, #4
 8010a52:	4603      	mov	r3, r0
 8010a54:	2200      	movs	r2, #0
 8010a56:	1d07      	adds	r7, r0, #4
 8010a58:	e007      	b.n	8010a6a <inet_aton+0x22>
 8010a5a:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8010a5e:	2b09      	cmp	r3, #9
 8010a60:	d820      	bhi.n	8010aa4 <inet_aton+0x5c>
 8010a62:	4603      	mov	r3, r0
 8010a64:	fb0c 4202 	mla	r2, ip, r2, r4
 8010a68:	3a30      	subs	r2, #48	; 0x30
 8010a6a:	4618      	mov	r0, r3
 8010a6c:	f810 4b01 	ldrb.w	r4, [r0], #1
 8010a70:	2c2e      	cmp	r4, #46	; 0x2e
 8010a72:	d111      	bne.n	8010a98 <inet_aton+0x50>
 8010a74:	3501      	adds	r5, #1
 8010a76:	2d03      	cmp	r5, #3
 8010a78:	f806 2b01 	strb.w	r2, [r6], #1
 8010a7c:	d1e9      	bne.n	8010a52 <inet_aton+0xa>
 8010a7e:	2200      	movs	r2, #0
 8010a80:	250a      	movs	r5, #10
 8010a82:	1d1c      	adds	r4, r3, #4
 8010a84:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8010a88:	f010 0fdf 	tst.w	r0, #223	; 0xdf
 8010a8c:	d10d      	bne.n	8010aaa <inet_aton+0x62>
 8010a8e:	f88d 2007 	strb.w	r2, [sp, #7]
 8010a92:	b9b1      	cbnz	r1, 8010ac2 <inet_aton+0x7a>
 8010a94:	2001      	movs	r0, #1
 8010a96:	e006      	b.n	8010aa6 <inet_aton+0x5e>
 8010a98:	2c00      	cmp	r4, #0
 8010a9a:	d0eb      	beq.n	8010a74 <inet_aton+0x2c>
 8010a9c:	2c0a      	cmp	r4, #10
 8010a9e:	d0e9      	beq.n	8010a74 <inet_aton+0x2c>
 8010aa0:	42b8      	cmp	r0, r7
 8010aa2:	d1da      	bne.n	8010a5a <inet_aton+0x12>
 8010aa4:	2000      	movs	r0, #0
 8010aa6:	b003      	add	sp, #12
 8010aa8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010aaa:	280a      	cmp	r0, #10
 8010aac:	d0ef      	beq.n	8010a8e <inet_aton+0x46>
 8010aae:	42a3      	cmp	r3, r4
 8010ab0:	d0f8      	beq.n	8010aa4 <inet_aton+0x5c>
 8010ab2:	f1a0 0630 	sub.w	r6, r0, #48	; 0x30
 8010ab6:	2e09      	cmp	r6, #9
 8010ab8:	d8f4      	bhi.n	8010aa4 <inet_aton+0x5c>
 8010aba:	fb05 0202 	mla	r2, r5, r2, r0
 8010abe:	3a30      	subs	r2, #48	; 0x30
 8010ac0:	e7e0      	b.n	8010a84 <inet_aton+0x3c>
 8010ac2:	9b01      	ldr	r3, [sp, #4]
 8010ac4:	600b      	str	r3, [r1, #0]
 8010ac6:	e7e5      	b.n	8010a94 <inet_aton+0x4c>

08010ac8 <malloc>:
 8010ac8:	b538      	push	{r3, r4, r5, lr}
 8010aca:	4604      	mov	r4, r0
 8010acc:	4601      	mov	r1, r0
 8010ace:	481c      	ldr	r0, [pc, #112]	; (8010b40 <malloc+0x78>)
 8010ad0:	f000 fbbc 	bl	801124c <printf>
 8010ad4:	b17c      	cbz	r4, 8010af6 <malloc+0x2e>
 8010ad6:	4b1b      	ldr	r3, [pc, #108]	; (8010b44 <malloc+0x7c>)
 8010ad8:	6818      	ldr	r0, [r3, #0]
 8010ada:	b978      	cbnz	r0, 8010afc <malloc+0x34>
 8010adc:	4a1a      	ldr	r2, [pc, #104]	; (8010b48 <malloc+0x80>)
 8010ade:	f104 031b 	add.w	r3, r4, #27
 8010ae2:	6811      	ldr	r1, [r2, #0]
 8010ae4:	4819      	ldr	r0, [pc, #100]	; (8010b4c <malloc+0x84>)
 8010ae6:	f023 030f 	bic.w	r3, r3, #15
 8010aea:	440b      	add	r3, r1
 8010aec:	4283      	cmp	r3, r0
 8010aee:	d921      	bls.n	8010b34 <malloc+0x6c>
 8010af0:	4817      	ldr	r0, [pc, #92]	; (8010b50 <malloc+0x88>)
 8010af2:	f000 fbab 	bl	801124c <printf>
 8010af6:	2500      	movs	r5, #0
 8010af8:	4628      	mov	r0, r5
 8010afa:	bd38      	pop	{r3, r4, r5, pc}
 8010afc:	4284      	cmp	r4, r0
 8010afe:	d80a      	bhi.n	8010b16 <malloc+0x4e>
 8010b00:	685a      	ldr	r2, [r3, #4]
 8010b02:	6899      	ldr	r1, [r3, #8]
 8010b04:	3201      	adds	r2, #1
 8010b06:	428a      	cmp	r2, r1
 8010b08:	605a      	str	r2, [r3, #4]
 8010b0a:	d900      	bls.n	8010b0e <malloc+0x46>
 8010b0c:	609a      	str	r2, [r3, #8]
 8010b0e:	68d9      	ldr	r1, [r3, #12]
 8010b10:	b919      	cbnz	r1, 8010b1a <malloc+0x52>
 8010b12:	4604      	mov	r4, r0
 8010b14:	e7e2      	b.n	8010adc <malloc+0x14>
 8010b16:	3310      	adds	r3, #16
 8010b18:	e7de      	b.n	8010ad8 <malloc+0x10>
 8010b1a:	4604      	mov	r4, r0
 8010b1c:	688a      	ldr	r2, [r1, #8]
 8010b1e:	60da      	str	r2, [r3, #12]
 8010b20:	2300      	movs	r3, #0
 8010b22:	f101 050c 	add.w	r5, r1, #12
 8010b26:	608b      	str	r3, [r1, #8]
 8010b28:	4622      	mov	r2, r4
 8010b2a:	462b      	mov	r3, r5
 8010b2c:	4809      	ldr	r0, [pc, #36]	; (8010b54 <malloc+0x8c>)
 8010b2e:	f000 fb8d 	bl	801124c <printf>
 8010b32:	e7e1      	b.n	8010af8 <malloc+0x30>
 8010b34:	6013      	str	r3, [r2, #0]
 8010b36:	4b08      	ldr	r3, [pc, #32]	; (8010b58 <malloc+0x90>)
 8010b38:	e9c1 3400 	strd	r3, r4, [r1]
 8010b3c:	e7f0      	b.n	8010b20 <malloc+0x58>
 8010b3e:	bf00      	nop
 8010b40:	080152c0 	stmdaeq	r1, {r6, r7, r9, ip, lr}
 8010b44:	20000024 	andcs	r0, r0, r4, lsr #32
 8010b48:	20000020 	andcs	r0, r0, r0, lsr #32
 8010b4c:	2001e000 	andcs	lr, r1, r0
 8010b50:	080152cc 	stmdaeq	r1, {r2, r3, r6, r7, r9, ip, lr}
 8010b54:	080152e8 	stmdaeq	r1, {r3, r5, r6, r7, r9, ip, lr}
 8010b58:	424c4d43 	submi	r4, ip, #4288	; 0x10c0

08010b5c <free>:
 8010b5c:	b538      	push	{r3, r4, r5, lr}
 8010b5e:	4604      	mov	r4, r0
 8010b60:	b1c8      	cbz	r0, 8010b96 <free+0x3a>
 8010b62:	f1a0 050c 	sub.w	r5, r0, #12
 8010b66:	4602      	mov	r2, r0
 8010b68:	4629      	mov	r1, r5
 8010b6a:	480c      	ldr	r0, [pc, #48]	; (8010b9c <free+0x40>)
 8010b6c:	f000 fb6e 	bl	801124c <printf>
 8010b70:	f854 2c0c 	ldr.w	r2, [r4, #-12]
 8010b74:	4b0a      	ldr	r3, [pc, #40]	; (8010ba0 <free+0x44>)
 8010b76:	429a      	cmp	r2, r3
 8010b78:	d10d      	bne.n	8010b96 <free+0x3a>
 8010b7a:	4b0a      	ldr	r3, [pc, #40]	; (8010ba4 <free+0x48>)
 8010b7c:	681a      	ldr	r2, [r3, #0]
 8010b7e:	b152      	cbz	r2, 8010b96 <free+0x3a>
 8010b80:	f854 1c08 	ldr.w	r1, [r4, #-8]
 8010b84:	4291      	cmp	r1, r2
 8010b86:	d107      	bne.n	8010b98 <free+0x3c>
 8010b88:	68da      	ldr	r2, [r3, #12]
 8010b8a:	f844 2c04 	str.w	r2, [r4, #-4]
 8010b8e:	685a      	ldr	r2, [r3, #4]
 8010b90:	60dd      	str	r5, [r3, #12]
 8010b92:	3a01      	subs	r2, #1
 8010b94:	605a      	str	r2, [r3, #4]
 8010b96:	bd38      	pop	{r3, r4, r5, pc}
 8010b98:	3310      	adds	r3, #16
 8010b9a:	e7ef      	b.n	8010b7c <free+0x20>
 8010b9c:	08015313 	stmdaeq	r1, {r0, r1, r4, r8, r9, ip, lr}
 8010ba0:	424c4d43 	submi	r4, ip, #4288	; 0x10c0
 8010ba4:	20000024 	andcs	r0, r0, r4, lsr #32

08010ba8 <memcpy>:
 8010ba8:	b510      	push	{r4, lr}
 8010baa:	1e43      	subs	r3, r0, #1
 8010bac:	440a      	add	r2, r1
 8010bae:	4291      	cmp	r1, r2
 8010bb0:	d100      	bne.n	8010bb4 <memcpy+0xc>
 8010bb2:	bd10      	pop	{r4, pc}
 8010bb4:	f811 4b01 	ldrb.w	r4, [r1], #1
 8010bb8:	f803 4f01 	strb.w	r4, [r3, #1]!
 8010bbc:	e7f7      	b.n	8010bae <memcpy+0x6>

08010bbe <memmove>:
 8010bbe:	4288      	cmp	r0, r1
 8010bc0:	b510      	push	{r4, lr}
 8010bc2:	eb01 0302 	add.w	r3, r1, r2
 8010bc6:	d208      	bcs.n	8010bda <memmove+0x1c>
 8010bc8:	1e42      	subs	r2, r0, #1
 8010bca:	4299      	cmp	r1, r3
 8010bcc:	d100      	bne.n	8010bd0 <memmove+0x12>
 8010bce:	bd10      	pop	{r4, pc}
 8010bd0:	f811 4b01 	ldrb.w	r4, [r1], #1
 8010bd4:	f802 4f01 	strb.w	r4, [r2, #1]!
 8010bd8:	e7f7      	b.n	8010bca <memmove+0xc>
 8010bda:	4601      	mov	r1, r0
 8010bdc:	4402      	add	r2, r0
 8010bde:	428a      	cmp	r2, r1
 8010be0:	d0f5      	beq.n	8010bce <memmove+0x10>
 8010be2:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8010be6:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8010bea:	e7f8      	b.n	8010bde <memmove+0x20>

08010bec <memset>:
 8010bec:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010bee:	b1e2      	cbz	r2, 8010c2a <memset+0x3e>
 8010bf0:	4603      	mov	r3, r0
 8010bf2:	b2c9      	uxtb	r1, r1
 8010bf4:	075c      	lsls	r4, r3, #29
 8010bf6:	d114      	bne.n	8010c22 <memset+0x36>
 8010bf8:	ea41 2401 	orr.w	r4, r1, r1, lsl #8
 8010bfc:	ea44 4704 	orr.w	r7, r4, r4, lsl #16
 8010c00:	463d      	mov	r5, r7
 8010c02:	f022 0407 	bic.w	r4, r2, #7
 8010c06:	08d6      	lsrs	r6, r2, #3
 8010c08:	441c      	add	r4, r3
 8010c0a:	42a3      	cmp	r3, r4
 8010c0c:	d10e      	bne.n	8010c2c <memset+0x40>
 8010c0e:	f06f 0307 	mvn.w	r3, #7
 8010c12:	fb03 2206 	mla	r2, r3, r6, r2
 8010c16:	4422      	add	r2, r4
 8010c18:	4294      	cmp	r4, r2
 8010c1a:	d006      	beq.n	8010c2a <memset+0x3e>
 8010c1c:	f804 1b01 	strb.w	r1, [r4], #1
 8010c20:	e7fa      	b.n	8010c18 <memset+0x2c>
 8010c22:	3a01      	subs	r2, #1
 8010c24:	f803 1b01 	strb.w	r1, [r3], #1
 8010c28:	d1e4      	bne.n	8010bf4 <memset+0x8>
 8010c2a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010c2c:	f843 7b08 	str.w	r7, [r3], #8
 8010c30:	f843 5c04 	str.w	r5, [r3, #-4]
 8010c34:	e7e9      	b.n	8010c0a <memset+0x1e>

08010c36 <_itostr>:
 8010c36:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010c38:	0fc7      	lsrs	r7, r0, #31
 8010c3a:	b091      	sub	sp, #68	; 0x44
 8010c3c:	bf18      	it	ne
 8010c3e:	4240      	negne	r0, r0
 8010c40:	f10d 043f 	add.w	r4, sp, #63	; 0x3f
 8010c44:	b9c8      	cbnz	r0, 8010c7a <_itostr+0x44>
 8010c46:	2330      	movs	r3, #48	; 0x30
 8010c48:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8010c4c:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 8010c50:	b132      	cbz	r2, 8010c60 <_itostr+0x2a>
 8010c52:	4668      	mov	r0, sp
 8010c54:	2530      	movs	r5, #48	; 0x30
 8010c56:	1ae6      	subs	r6, r4, r3
 8010c58:	4296      	cmp	r6, r2
 8010c5a:	da01      	bge.n	8010c60 <_itostr+0x2a>
 8010c5c:	4283      	cmp	r3, r0
 8010c5e:	d81c      	bhi.n	8010c9a <_itostr+0x64>
 8010c60:	b117      	cbz	r7, 8010c68 <_itostr+0x32>
 8010c62:	222d      	movs	r2, #45	; 0x2d
 8010c64:	f803 2901 	strb.w	r2, [r3], #-1
 8010c68:	3301      	adds	r3, #1
 8010c6a:	1ae0      	subs	r0, r4, r3
 8010c6c:	3901      	subs	r1, #1
 8010c6e:	aa10      	add	r2, sp, #64	; 0x40
 8010c70:	4293      	cmp	r3, r2
 8010c72:	d315      	bcc.n	8010ca0 <_itostr+0x6a>
 8010c74:	3001      	adds	r0, #1
 8010c76:	b011      	add	sp, #68	; 0x44
 8010c78:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010c7a:	4623      	mov	r3, r4
 8010c7c:	250a      	movs	r5, #10
 8010c7e:	46ec      	mov	ip, sp
 8010c80:	fb90 f6f5 	sdiv	r6, r0, r5
 8010c84:	fb05 0016 	mls	r0, r5, r6, r0
 8010c88:	3030      	adds	r0, #48	; 0x30
 8010c8a:	f803 0901 	strb.w	r0, [r3], #-1
 8010c8e:	4630      	mov	r0, r6
 8010c90:	2e00      	cmp	r6, #0
 8010c92:	d0dd      	beq.n	8010c50 <_itostr+0x1a>
 8010c94:	4563      	cmp	r3, ip
 8010c96:	d1f3      	bne.n	8010c80 <_itostr+0x4a>
 8010c98:	e7da      	b.n	8010c50 <_itostr+0x1a>
 8010c9a:	f803 5901 	strb.w	r5, [r3], #-1
 8010c9e:	e7da      	b.n	8010c56 <_itostr+0x20>
 8010ca0:	f813 2b01 	ldrb.w	r2, [r3], #1
 8010ca4:	f801 2f01 	strb.w	r2, [r1, #1]!
 8010ca8:	e7e1      	b.n	8010c6e <_itostr+0x38>
	...

08010cac <_xputch>:
 8010cac:	4603      	mov	r3, r0
 8010cae:	b410      	push	{r4}
 8010cb0:	4c08      	ldr	r4, [pc, #32]	; (8010cd4 <_xputch+0x28>)
 8010cb2:	68da      	ldr	r2, [r3, #12]
 8010cb4:	4608      	mov	r0, r1
 8010cb6:	6821      	ldr	r1, [r4, #0]
 8010cb8:	3201      	adds	r2, #1
 8010cba:	60da      	str	r2, [r3, #12]
 8010cbc:	b139      	cbz	r1, 8010cce <_xputch+0x22>
 8010cbe:	691b      	ldr	r3, [r3, #16]
 8010cc0:	429a      	cmp	r2, r3
 8010cc2:	da02      	bge.n	8010cca <_xputch+0x1e>
 8010cc4:	1c4b      	adds	r3, r1, #1
 8010cc6:	6023      	str	r3, [r4, #0]
 8010cc8:	7008      	strb	r0, [r1, #0]
 8010cca:	bc10      	pop	{r4}
 8010ccc:	4770      	bx	lr
 8010cce:	bc10      	pop	{r4}
 8010cd0:	f7ff bd1a 	b.w	8010708 <console_putc>
 8010cd4:	2000d254 	andcs	sp, r0, r4, asr r2

08010cd8 <_format_int>:
 8010cd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010cdc:	461f      	mov	r7, r3
 8010cde:	b091      	sub	sp, #68	; 0x44
 8010ce0:	ea52 0307 	orrs.w	r3, r2, r7
 8010ce4:	4680      	mov	r8, r0
 8010ce6:	4616      	mov	r6, r2
 8010ce8:	f10d 053f 	add.w	r5, sp, #63	; 0x3f
 8010cec:	d138      	bne.n	8010d60 <_format_int+0x88>
 8010cee:	2330      	movs	r3, #48	; 0x30
 8010cf0:	f10d 043e 	add.w	r4, sp, #62	; 0x3e
 8010cf4:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8010cf8:	f8d8 3000 	ldr.w	r3, [r8]
 8010cfc:	07d8      	lsls	r0, r3, #31
 8010cfe:	d508      	bpl.n	8010d12 <_format_int+0x3a>
 8010d00:	466a      	mov	r2, sp
 8010d02:	2030      	movs	r0, #48	; 0x30
 8010d04:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8010d08:	1b2e      	subs	r6, r5, r4
 8010d0a:	428e      	cmp	r6, r1
 8010d0c:	da01      	bge.n	8010d12 <_format_int+0x3a>
 8010d0e:	4294      	cmp	r4, r2
 8010d10:	d843      	bhi.n	8010d9a <_format_int+0xc2>
 8010d12:	0699      	lsls	r1, r3, #26
 8010d14:	d508      	bpl.n	8010d28 <_format_int+0x50>
 8010d16:	466a      	mov	r2, sp
 8010d18:	2030      	movs	r0, #48	; 0x30
 8010d1a:	f8d8 1008 	ldr.w	r1, [r8, #8]
 8010d1e:	1b2e      	subs	r6, r5, r4
 8010d20:	428e      	cmp	r6, r1
 8010d22:	da01      	bge.n	8010d28 <_format_int+0x50>
 8010d24:	4294      	cmp	r4, r2
 8010d26:	d83b      	bhi.n	8010da0 <_format_int+0xc8>
 8010d28:	071a      	lsls	r2, r3, #28
 8010d2a:	bf44      	itt	mi
 8010d2c:	222d      	movmi	r2, #45	; 0x2d
 8010d2e:	f804 2901 	strbmi.w	r2, [r4], #-1
 8010d32:	065b      	lsls	r3, r3, #25
 8010d34:	d408      	bmi.n	8010d48 <_format_int+0x70>
 8010d36:	466b      	mov	r3, sp
 8010d38:	2120      	movs	r1, #32
 8010d3a:	f8d8 2008 	ldr.w	r2, [r8, #8]
 8010d3e:	1b28      	subs	r0, r5, r4
 8010d40:	4290      	cmp	r0, r2
 8010d42:	da01      	bge.n	8010d48 <_format_int+0x70>
 8010d44:	429c      	cmp	r4, r3
 8010d46:	d82e      	bhi.n	8010da6 <_format_int+0xce>
 8010d48:	1b2d      	subs	r5, r5, r4
 8010d4a:	3401      	adds	r4, #1
 8010d4c:	ab10      	add	r3, sp, #64	; 0x40
 8010d4e:	429c      	cmp	r4, r3
 8010d50:	d32c      	bcc.n	8010dac <_format_int+0xd4>
 8010d52:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8010d56:	42ab      	cmp	r3, r5
 8010d58:	dc2e      	bgt.n	8010db8 <_format_int+0xe0>
 8010d5a:	b011      	add	sp, #68	; 0x44
 8010d5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010d60:	462c      	mov	r4, r5
 8010d62:	46eb      	mov	fp, sp
 8010d64:	4630      	mov	r0, r6
 8010d66:	4639      	mov	r1, r7
 8010d68:	220a      	movs	r2, #10
 8010d6a:	2300      	movs	r3, #0
 8010d6c:	f7f7 fbf2 	bl	8008554 <__aeabi_uldivmod>
 8010d70:	46b2      	mov	sl, r6
 8010d72:	3230      	adds	r2, #48	; 0x30
 8010d74:	46b9      	mov	r9, r7
 8010d76:	2300      	movs	r3, #0
 8010d78:	4630      	mov	r0, r6
 8010d7a:	4639      	mov	r1, r7
 8010d7c:	f804 2901 	strb.w	r2, [r4], #-1
 8010d80:	220a      	movs	r2, #10
 8010d82:	f7f7 fbe7 	bl	8008554 <__aeabi_uldivmod>
 8010d86:	f1ba 0f0a 	cmp.w	sl, #10
 8010d8a:	f179 0300 	sbcs.w	r3, r9, #0
 8010d8e:	4606      	mov	r6, r0
 8010d90:	460f      	mov	r7, r1
 8010d92:	d3b1      	bcc.n	8010cf8 <_format_int+0x20>
 8010d94:	455c      	cmp	r4, fp
 8010d96:	d1e5      	bne.n	8010d64 <_format_int+0x8c>
 8010d98:	e7ae      	b.n	8010cf8 <_format_int+0x20>
 8010d9a:	f804 0901 	strb.w	r0, [r4], #-1
 8010d9e:	e7b3      	b.n	8010d08 <_format_int+0x30>
 8010da0:	f804 0901 	strb.w	r0, [r4], #-1
 8010da4:	e7bb      	b.n	8010d1e <_format_int+0x46>
 8010da6:	f804 1901 	strb.w	r1, [r4], #-1
 8010daa:	e7c8      	b.n	8010d3e <_format_int+0x66>
 8010dac:	4640      	mov	r0, r8
 8010dae:	f814 1b01 	ldrb.w	r1, [r4], #1
 8010db2:	f7ff ff7b 	bl	8010cac <_xputch>
 8010db6:	e7c9      	b.n	8010d4c <_format_int+0x74>
 8010db8:	2120      	movs	r1, #32
 8010dba:	4640      	mov	r0, r8
 8010dbc:	f7ff ff76 	bl	8010cac <_xputch>
 8010dc0:	3501      	adds	r5, #1
 8010dc2:	e7c6      	b.n	8010d52 <_format_int+0x7a>

08010dc4 <_format_hex>:
 8010dc4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010dc6:	b091      	sub	sp, #68	; 0x44
 8010dc8:	4606      	mov	r6, r0
 8010dca:	6804      	ldr	r4, [r0, #0]
 8010dcc:	f10d 023f 	add.w	r2, sp, #63	; 0x3f
 8010dd0:	bb61      	cbnz	r1, 8010e2c <_format_hex+0x68>
 8010dd2:	2330      	movs	r3, #48	; 0x30
 8010dd4:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8010dd8:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 8010ddc:	07e5      	lsls	r5, r4, #31
 8010dde:	d507      	bpl.n	8010df0 <_format_hex+0x2c>
 8010de0:	4669      	mov	r1, sp
 8010de2:	2530      	movs	r5, #48	; 0x30
 8010de4:	6870      	ldr	r0, [r6, #4]
 8010de6:	1ad7      	subs	r7, r2, r3
 8010de8:	4287      	cmp	r7, r0
 8010dea:	da01      	bge.n	8010df0 <_format_hex+0x2c>
 8010dec:	428b      	cmp	r3, r1
 8010dee:	d831      	bhi.n	8010e54 <_format_hex+0x90>
 8010df0:	06a0      	lsls	r0, r4, #26
 8010df2:	d507      	bpl.n	8010e04 <_format_hex+0x40>
 8010df4:	4669      	mov	r1, sp
 8010df6:	2530      	movs	r5, #48	; 0x30
 8010df8:	68b0      	ldr	r0, [r6, #8]
 8010dfa:	1ad7      	subs	r7, r2, r3
 8010dfc:	4287      	cmp	r7, r0
 8010dfe:	da01      	bge.n	8010e04 <_format_hex+0x40>
 8010e00:	428b      	cmp	r3, r1
 8010e02:	d82a      	bhi.n	8010e5a <_format_hex+0x96>
 8010e04:	0661      	lsls	r1, r4, #25
 8010e06:	d407      	bmi.n	8010e18 <_format_hex+0x54>
 8010e08:	4669      	mov	r1, sp
 8010e0a:	2420      	movs	r4, #32
 8010e0c:	68b0      	ldr	r0, [r6, #8]
 8010e0e:	1ad5      	subs	r5, r2, r3
 8010e10:	4285      	cmp	r5, r0
 8010e12:	da01      	bge.n	8010e18 <_format_hex+0x54>
 8010e14:	428b      	cmp	r3, r1
 8010e16:	d823      	bhi.n	8010e60 <_format_hex+0x9c>
 8010e18:	1ad5      	subs	r5, r2, r3
 8010e1a:	1c5c      	adds	r4, r3, #1
 8010e1c:	ab10      	add	r3, sp, #64	; 0x40
 8010e1e:	429c      	cmp	r4, r3
 8010e20:	d321      	bcc.n	8010e66 <_format_hex+0xa2>
 8010e22:	68b3      	ldr	r3, [r6, #8]
 8010e24:	429d      	cmp	r5, r3
 8010e26:	db24      	blt.n	8010e72 <_format_hex+0xae>
 8010e28:	b011      	add	sp, #68	; 0x44
 8010e2a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010e2c:	f014 0f02 	tst.w	r4, #2
 8010e30:	bf0c      	ite	eq
 8010e32:	2757      	moveq	r7, #87	; 0x57
 8010e34:	2737      	movne	r7, #55	; 0x37
 8010e36:	4613      	mov	r3, r2
 8010e38:	466d      	mov	r5, sp
 8010e3a:	f001 000f 	and.w	r0, r1, #15
 8010e3e:	2809      	cmp	r0, #9
 8010e40:	bf94      	ite	ls
 8010e42:	3030      	addls	r0, #48	; 0x30
 8010e44:	19c0      	addhi	r0, r0, r7
 8010e46:	0909      	lsrs	r1, r1, #4
 8010e48:	f803 0901 	strb.w	r0, [r3], #-1
 8010e4c:	d0c6      	beq.n	8010ddc <_format_hex+0x18>
 8010e4e:	42ab      	cmp	r3, r5
 8010e50:	d1f3      	bne.n	8010e3a <_format_hex+0x76>
 8010e52:	e7c3      	b.n	8010ddc <_format_hex+0x18>
 8010e54:	f803 5901 	strb.w	r5, [r3], #-1
 8010e58:	e7c5      	b.n	8010de6 <_format_hex+0x22>
 8010e5a:	f803 5901 	strb.w	r5, [r3], #-1
 8010e5e:	e7cc      	b.n	8010dfa <_format_hex+0x36>
 8010e60:	f803 4901 	strb.w	r4, [r3], #-1
 8010e64:	e7d3      	b.n	8010e0e <_format_hex+0x4a>
 8010e66:	4630      	mov	r0, r6
 8010e68:	f814 1b01 	ldrb.w	r1, [r4], #1
 8010e6c:	f7ff ff1e 	bl	8010cac <_xputch>
 8010e70:	e7d4      	b.n	8010e1c <_format_hex+0x58>
 8010e72:	2120      	movs	r1, #32
 8010e74:	4630      	mov	r0, r6
 8010e76:	f7ff ff19 	bl	8010cac <_xputch>
 8010e7a:	3501      	adds	r5, #1
 8010e7c:	e7d1      	b.n	8010e22 <_format_hex+0x5e>
	...

08010e80 <_vprintf>:
 8010e80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010e84:	4614      	mov	r4, r2
 8010e86:	2200      	movs	r2, #0
 8010e88:	460b      	mov	r3, r1
 8010e8a:	2700      	movs	r7, #0
 8010e8c:	b099      	sub	sp, #100	; 0x64
 8010e8e:	e9cd 2006 	strd	r2, r0, [sp, #24]
 8010e92:	ae08      	add	r6, sp, #32
 8010e94:	7819      	ldrb	r1, [r3, #0]
 8010e96:	b919      	cbnz	r1, 8010ea0 <_vprintf+0x20>
 8010e98:	9806      	ldr	r0, [sp, #24]
 8010e9a:	b019      	add	sp, #100	; 0x64
 8010e9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010ea0:	2925      	cmp	r1, #37	; 0x25
 8010ea2:	f103 0501 	add.w	r5, r3, #1
 8010ea6:	d004      	beq.n	8010eb2 <_vprintf+0x32>
 8010ea8:	a803      	add	r0, sp, #12
 8010eaa:	f7ff feff 	bl	8010cac <_xputch>
 8010eae:	462b      	mov	r3, r5
 8010eb0:	e7f0      	b.n	8010e94 <_vprintf+0x14>
 8010eb2:	2200      	movs	r2, #0
 8010eb4:	e9cd 2203 	strd	r2, r2, [sp, #12]
 8010eb8:	9205      	str	r2, [sp, #20]
 8010eba:	785a      	ldrb	r2, [r3, #1]
 8010ebc:	2a30      	cmp	r2, #48	; 0x30
 8010ebe:	d12b      	bne.n	8010f18 <_vprintf+0x98>
 8010ec0:	2220      	movs	r2, #32
 8010ec2:	9203      	str	r2, [sp, #12]
 8010ec4:	1c9d      	adds	r5, r3, #2
 8010ec6:	2200      	movs	r2, #0
 8010ec8:	46ac      	mov	ip, r5
 8010eca:	4613      	mov	r3, r2
 8010ecc:	f04f 0e0a 	mov.w	lr, #10
 8010ed0:	f89c 1000 	ldrb.w	r1, [ip]
 8010ed4:	4665      	mov	r5, ip
 8010ed6:	f1a1 0030 	sub.w	r0, r1, #48	; 0x30
 8010eda:	2809      	cmp	r0, #9
 8010edc:	f10c 0c01 	add.w	ip, ip, #1
 8010ee0:	d91e      	bls.n	8010f20 <_vprintf+0xa0>
 8010ee2:	b12a      	cbz	r2, 8010ef0 <_vprintf+0x70>
 8010ee4:	9305      	str	r3, [sp, #20]
 8010ee6:	b11b      	cbz	r3, 8010ef0 <_vprintf+0x70>
 8010ee8:	9b03      	ldr	r3, [sp, #12]
 8010eea:	f043 0310 	orr.w	r3, r3, #16
 8010eee:	9303      	str	r3, [sp, #12]
 8010ef0:	292e      	cmp	r1, #46	; 0x2e
 8010ef2:	d124      	bne.n	8010f3e <_vprintf+0xbe>
 8010ef4:	786b      	ldrb	r3, [r5, #1]
 8010ef6:	2b2a      	cmp	r3, #42	; 0x2a
 8010ef8:	d016      	beq.n	8010f28 <_vprintf+0xa8>
 8010efa:	2100      	movs	r1, #0
 8010efc:	f04f 0c0a 	mov.w	ip, #10
 8010f00:	460a      	mov	r2, r1
 8010f02:	1c68      	adds	r0, r5, #1
 8010f04:	7803      	ldrb	r3, [r0, #0]
 8010f06:	4605      	mov	r5, r0
 8010f08:	3b30      	subs	r3, #48	; 0x30
 8010f0a:	2b09      	cmp	r3, #9
 8010f0c:	f100 0001 	add.w	r0, r0, #1
 8010f10:	d958      	bls.n	8010fc4 <_vprintf+0x144>
 8010f12:	b181      	cbz	r1, 8010f36 <_vprintf+0xb6>
 8010f14:	9204      	str	r2, [sp, #16]
 8010f16:	e00e      	b.n	8010f36 <_vprintf+0xb6>
 8010f18:	2a2d      	cmp	r2, #45	; 0x2d
 8010f1a:	d1d4      	bne.n	8010ec6 <_vprintf+0x46>
 8010f1c:	2240      	movs	r2, #64	; 0x40
 8010f1e:	e7d0      	b.n	8010ec2 <_vprintf+0x42>
 8010f20:	2201      	movs	r2, #1
 8010f22:	fb0e 0303 	mla	r3, lr, r3, r0
 8010f26:	e7d3      	b.n	8010ed0 <_vprintf+0x50>
 8010f28:	f854 3b04 	ldr.w	r3, [r4], #4
 8010f2c:	3502      	adds	r5, #2
 8010f2e:	2b00      	cmp	r3, #0
 8010f30:	bfb8      	it	lt
 8010f32:	425b      	neglt	r3, r3
 8010f34:	9304      	str	r3, [sp, #16]
 8010f36:	9b03      	ldr	r3, [sp, #12]
 8010f38:	f043 0301 	orr.w	r3, r3, #1
 8010f3c:	9303      	str	r3, [sp, #12]
 8010f3e:	782b      	ldrb	r3, [r5, #0]
 8010f40:	2b6c      	cmp	r3, #108	; 0x6c
 8010f42:	bf04      	itt	eq
 8010f44:	9b03      	ldreq	r3, [sp, #12]
 8010f46:	3501      	addeq	r5, #1
 8010f48:	7829      	ldrb	r1, [r5, #0]
 8010f4a:	bf04      	itt	eq
 8010f4c:	f043 0304 	orreq.w	r3, r3, #4
 8010f50:	9303      	streq	r3, [sp, #12]
 8010f52:	2958      	cmp	r1, #88	; 0x58
 8010f54:	f000 8173 	beq.w	801123e <_vprintf+0x3be>
 8010f58:	f1a1 0363 	sub.w	r3, r1, #99	; 0x63
 8010f5c:	b2da      	uxtb	r2, r3
 8010f5e:	2a15      	cmp	r2, #21
 8010f60:	d8a2      	bhi.n	8010ea8 <_vprintf+0x28>
 8010f62:	2b15      	cmp	r3, #21
 8010f64:	d8a0      	bhi.n	8010ea8 <_vprintf+0x28>
 8010f66:	a201      	add	r2, pc, #4	; (adr r2, 8010f6c <_vprintf+0xec>)
 8010f68:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8010f6c:	08010fcd 	stmdaeq	r1, {r0, r2, r3, r6, r7, r8, r9, sl, fp}
 8010f70:	08010fdb 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, r8, r9, sl, fp}
 8010f74:	08010ea9 	stmdaeq	r1, {r0, r3, r5, r7, r9, sl, fp}
 8010f78:	0801100f 	stmdaeq	r1, {r0, r1, r2, r3, ip}
 8010f7c:	08010ea9 	stmdaeq	r1, {r0, r3, r5, r7, r9, sl, fp}
 8010f80:	08010ea9 	stmdaeq	r1, {r0, r3, r5, r7, r9, sl, fp}
 8010f84:	08010fdb 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, r8, r9, sl, fp}
 8010f88:	08010ea9 	stmdaeq	r1, {r0, r3, r5, r7, r9, sl, fp}
 8010f8c:	08010ea9 	stmdaeq	r1, {r0, r3, r5, r7, r9, sl, fp}
 8010f90:	08010ea9 	stmdaeq	r1, {r0, r3, r5, r7, r9, sl, fp}
 8010f94:	08010ea9 	stmdaeq	r1, {r0, r3, r5, r7, r9, sl, fp}
 8010f98:	08010ea9 	stmdaeq	r1, {r0, r3, r5, r7, r9, sl, fp}
 8010f9c:	08010ea9 	stmdaeq	r1, {r0, r3, r5, r7, r9, sl, fp}
 8010fa0:	08011181 	stmdaeq	r1, {r0, r7, r8, ip}
 8010fa4:	08010ea9 	stmdaeq	r1, {r0, r3, r5, r7, r9, sl, fp}
 8010fa8:	08010ea9 	stmdaeq	r1, {r0, r3, r5, r7, r9, sl, fp}
 8010fac:	080111a7 	stmdaeq	r1, {r0, r1, r2, r5, r7, r8, ip}
 8010fb0:	08010ea9 	stmdaeq	r1, {r0, r3, r5, r7, r9, sl, fp}
 8010fb4:	08011221 	stmdaeq	r1, {r0, r5, r9, ip}
 8010fb8:	08010ea9 	stmdaeq	r1, {r0, r3, r5, r7, r9, sl, fp}
 8010fbc:	08010ea9 	stmdaeq	r1, {r0, r3, r5, r7, r9, sl, fp}
 8010fc0:	08011247 	stmdaeq	r1, {r0, r1, r2, r6, r9, ip}
 8010fc4:	2101      	movs	r1, #1
 8010fc6:	fb0c 3202 	mla	r2, ip, r2, r3
 8010fca:	e79b      	b.n	8010f04 <_vprintf+0x84>
 8010fcc:	f854 1b04 	ldr.w	r1, [r4], #4
 8010fd0:	a803      	add	r0, sp, #12
 8010fd2:	f7ff fe6b 	bl	8010cac <_xputch>
 8010fd6:	3501      	adds	r5, #1
 8010fd8:	e769      	b.n	8010eae <_vprintf+0x2e>
 8010fda:	9903      	ldr	r1, [sp, #12]
 8010fdc:	074a      	lsls	r2, r1, #29
 8010fde:	bf43      	ittte	mi
 8010fe0:	3407      	addmi	r4, #7
 8010fe2:	f024 0307 	bicmi.w	r3, r4, #7
 8010fe6:	461c      	movmi	r4, r3
 8010fe8:	f854 2b04 	ldrpl.w	r2, [r4], #4
 8010fec:	bf4a      	itet	mi
 8010fee:	685b      	ldrmi	r3, [r3, #4]
 8010ff0:	17d3      	asrpl	r3, r2, #31
 8010ff2:	f854 2b08 	ldrmi.w	r2, [r4], #8
 8010ff6:	2b00      	cmp	r3, #0
 8010ff8:	da05      	bge.n	8011006 <_vprintf+0x186>
 8010ffa:	f041 0108 	orr.w	r1, r1, #8
 8010ffe:	4252      	negs	r2, r2
 8011000:	9103      	str	r1, [sp, #12]
 8011002:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8011006:	a803      	add	r0, sp, #12
 8011008:	f7ff fe66 	bl	8010cd8 <_format_int>
 801100c:	e7e3      	b.n	8010fd6 <_vprintf+0x156>
 801100e:	3407      	adds	r4, #7
 8011010:	f024 0407 	bic.w	r4, r4, #7
 8011014:	e8f4 0102 	ldrd	r0, r1, [r4], #8
 8011018:	f7f6 ff52 	bl	8007ec0 <__aeabi_d2f>
 801101c:	9b03      	ldr	r3, [sp, #12]
 801101e:	4639      	mov	r1, r7
 8011020:	07db      	lsls	r3, r3, #31
 8011022:	bf54      	ite	pl
 8011024:	f04f 0a06 	movpl.w	sl, #6
 8011028:	f8dd a010 	ldrmi.w	sl, [sp, #16]
 801102c:	4681      	mov	r9, r0
 801102e:	f7f7 fa43 	bl	80084b8 <__aeabi_fcmplt>
 8011032:	2800      	cmp	r0, #0
 8011034:	d069      	beq.n	801110a <_vprintf+0x28a>
 8011036:	232d      	movs	r3, #45	; 0x2d
 8011038:	f109 4900 	add.w	r9, r9, #2147483648	; 0x80000000
 801103c:	f88d 3020 	strb.w	r3, [sp, #32]
 8011040:	f10d 0b21 	add.w	fp, sp, #33	; 0x21
 8011044:	4648      	mov	r0, r9
 8011046:	f7f7 fa5f 	bl	8008508 <__aeabi_f2iz>
 801104a:	4659      	mov	r1, fp
 801104c:	2200      	movs	r2, #0
 801104e:	4680      	mov	r8, r0
 8011050:	f7ff fdf1 	bl	8010c36 <_itostr>
 8011054:	eb0b 0200 	add.w	r2, fp, r0
 8011058:	e9cd 2000 	strd	r2, r0, [sp]
 801105c:	4640      	mov	r0, r8
 801105e:	f7f7 f839 	bl	80080d4 <__aeabi_i2f>
 8011062:	4601      	mov	r1, r0
 8011064:	4648      	mov	r0, r9
 8011066:	f7f6 ff7f 	bl	8007f68 <__aeabi_fsub>
 801106a:	222e      	movs	r2, #46	; 0x2e
 801106c:	4601      	mov	r1, r0
 801106e:	200a      	movs	r0, #10
 8011070:	9b00      	ldr	r3, [sp, #0]
 8011072:	f10a 0901 	add.w	r9, sl, #1
 8011076:	f103 0801 	add.w	r8, r3, #1
 801107a:	9b01      	ldr	r3, [sp, #4]
 801107c:	f80b 2003 	strb.w	r2, [fp, r3]
 8011080:	4603      	mov	r3, r0
 8011082:	f1ba 0f00 	cmp.w	sl, #0
 8011086:	dc42      	bgt.n	801110e <_vprintf+0x28e>
 8011088:	9100      	str	r1, [sp, #0]
 801108a:	f7f7 f823 	bl	80080d4 <__aeabi_i2f>
 801108e:	9900      	ldr	r1, [sp, #0]
 8011090:	f7f7 f874 	bl	800817c <__aeabi_fmul>
 8011094:	f7f7 fa38 	bl	8008508 <__aeabi_f2iz>
 8011098:	4641      	mov	r1, r8
 801109a:	464a      	mov	r2, r9
 801109c:	f7ff fdcb 	bl	8010c36 <_itostr>
 80110a0:	4480      	add	r8, r0
 80110a2:	eba8 0806 	sub.w	r8, r8, r6
 80110a6:	f108 31ff 	add.w	r1, r8, #4294967295	; 0xffffffff
 80110aa:	5c73      	ldrb	r3, [r6, r1]
 80110ac:	1872      	adds	r2, r6, r1
 80110ae:	2b34      	cmp	r3, #52	; 0x34
 80110b0:	d910      	bls.n	80110d4 <_vprintf+0x254>
 80110b2:	f812 0c01 	ldrb.w	r0, [r2, #-1]
 80110b6:	1e53      	subs	r3, r2, #1
 80110b8:	282e      	cmp	r0, #46	; 0x2e
 80110ba:	d02f      	beq.n	801111c <_vprintf+0x29c>
 80110bc:	469c      	mov	ip, r3
 80110be:	f04f 0e30 	mov.w	lr, #48	; 0x30
 80110c2:	4663      	mov	r3, ip
 80110c4:	f81c 0901 	ldrb.w	r0, [ip], #-1
 80110c8:	2839      	cmp	r0, #57	; 0x39
 80110ca:	d024      	beq.n	8011116 <_vprintf+0x296>
 80110cc:	282e      	cmp	r0, #46	; 0x2e
 80110ce:	d025      	beq.n	801111c <_vprintf+0x29c>
 80110d0:	3001      	adds	r0, #1
 80110d2:	7018      	strb	r0, [r3, #0]
 80110d4:	f101 0360 	add.w	r3, r1, #96	; 0x60
 80110d8:	446b      	add	r3, sp
 80110da:	f813 3c41 	ldrb.w	r3, [r3, #-65]
 80110de:	2b2e      	cmp	r3, #46	; 0x2e
 80110e0:	bf08      	it	eq
 80110e2:	f101 31ff 	addeq.w	r1, r1, #4294967295	; 0xffffffff
 80110e6:	4688      	mov	r8, r1
 80110e8:	4689      	mov	r9, r1
 80110ea:	9b05      	ldr	r3, [sp, #20]
 80110ec:	454b      	cmp	r3, r9
 80110ee:	dc40      	bgt.n	8011172 <_vprintf+0x2f2>
 80110f0:	46b1      	mov	r9, r6
 80110f2:	f1b8 0f00 	cmp.w	r8, #0
 80110f6:	f77f af6e 	ble.w	8010fd6 <_vprintf+0x156>
 80110fa:	f819 1b01 	ldrb.w	r1, [r9], #1
 80110fe:	a803      	add	r0, sp, #12
 8011100:	f7ff fdd4 	bl	8010cac <_xputch>
 8011104:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
 8011108:	e7f3      	b.n	80110f2 <_vprintf+0x272>
 801110a:	46b3      	mov	fp, r6
 801110c:	e79a      	b.n	8011044 <_vprintf+0x1c4>
 801110e:	4358      	muls	r0, r3
 8011110:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
 8011114:	e7b5      	b.n	8011082 <_vprintf+0x202>
 8011116:	f88c e001 	strb.w	lr, [ip, #1]
 801111a:	e7d2      	b.n	80110c2 <_vprintf+0x242>
 801111c:	f04f 0c30 	mov.w	ip, #48	; 0x30
 8011120:	3b01      	subs	r3, #1
 8011122:	7818      	ldrb	r0, [r3, #0]
 8011124:	2839      	cmp	r0, #57	; 0x39
 8011126:	d112      	bne.n	801114e <_vprintf+0x2ce>
 8011128:	42b3      	cmp	r3, r6
 801112a:	d20d      	bcs.n	8011148 <_vprintf+0x2c8>
 801112c:	1c98      	adds	r0, r3, #2
 801112e:	1c59      	adds	r1, r3, #1
 8011130:	4281      	cmp	r1, r0
 8011132:	eba2 0203 	sub.w	r2, r2, r3
 8011136:	d913      	bls.n	8011160 <_vprintf+0x2e0>
 8011138:	3201      	adds	r2, #1
 801113a:	441a      	add	r2, r3
 801113c:	428a      	cmp	r2, r1
 801113e:	d10b      	bne.n	8011158 <_vprintf+0x2d8>
 8011140:	2231      	movs	r2, #49	; 0x31
 8011142:	4641      	mov	r1, r8
 8011144:	705a      	strb	r2, [r3, #1]
 8011146:	e7c5      	b.n	80110d4 <_vprintf+0x254>
 8011148:	f803 c901 	strb.w	ip, [r3], #-1
 801114c:	e7e9      	b.n	8011122 <_vprintf+0x2a2>
 801114e:	42b3      	cmp	r3, r6
 8011150:	d3ec      	bcc.n	801112c <_vprintf+0x2ac>
 8011152:	282d      	cmp	r0, #45	; 0x2d
 8011154:	d0ea      	beq.n	801112c <_vprintf+0x2ac>
 8011156:	e7bb      	b.n	80110d0 <_vprintf+0x250>
 8011158:	f811 0b01 	ldrb.w	r0, [r1], #1
 801115c:	7008      	strb	r0, [r1, #0]
 801115e:	e7ed      	b.n	801113c <_vprintf+0x2bc>
 8011160:	4411      	add	r1, r2
 8011162:	4402      	add	r2, r0
 8011164:	4290      	cmp	r0, r2
 8011166:	d0eb      	beq.n	8011140 <_vprintf+0x2c0>
 8011168:	f811 cd01 	ldrb.w	ip, [r1, #-1]!
 801116c:	f802 cd01 	strb.w	ip, [r2, #-1]!
 8011170:	e7f8      	b.n	8011164 <_vprintf+0x2e4>
 8011172:	2120      	movs	r1, #32
 8011174:	a803      	add	r0, sp, #12
 8011176:	f7ff fd99 	bl	8010cac <_xputch>
 801117a:	f109 0901 	add.w	r9, r9, #1
 801117e:	e7b4      	b.n	80110ea <_vprintf+0x26a>
 8011180:	2308      	movs	r3, #8
 8011182:	9305      	str	r3, [sp, #20]
 8011184:	2320      	movs	r3, #32
 8011186:	2130      	movs	r1, #48	; 0x30
 8011188:	f854 8b04 	ldr.w	r8, [r4], #4
 801118c:	a803      	add	r0, sp, #12
 801118e:	9303      	str	r3, [sp, #12]
 8011190:	f7ff fd8c 	bl	8010cac <_xputch>
 8011194:	2178      	movs	r1, #120	; 0x78
 8011196:	a803      	add	r0, sp, #12
 8011198:	f7ff fd88 	bl	8010cac <_xputch>
 801119c:	4641      	mov	r1, r8
 801119e:	a803      	add	r0, sp, #12
 80111a0:	f7ff fe10 	bl	8010dc4 <_format_hex>
 80111a4:	e717      	b.n	8010fd6 <_vprintf+0x156>
 80111a6:	f04f 0800 	mov.w	r8, #0
 80111aa:	f854 9b04 	ldr.w	r9, [r4], #4
 80111ae:	f819 3008 	ldrb.w	r3, [r9, r8]
 80111b2:	b993      	cbnz	r3, 80111da <_vprintf+0x35a>
 80111b4:	9b03      	ldr	r3, [sp, #12]
 80111b6:	07d9      	lsls	r1, r3, #31
 80111b8:	d503      	bpl.n	80111c2 <_vprintf+0x342>
 80111ba:	9b04      	ldr	r3, [sp, #16]
 80111bc:	4598      	cmp	r8, r3
 80111be:	bfa8      	it	ge
 80111c0:	4698      	movge	r8, r3
 80111c2:	9b03      	ldr	r3, [sp, #12]
 80111c4:	f108 0a01 	add.w	sl, r8, #1
 80111c8:	065a      	lsls	r2, r3, #25
 80111ca:	d403      	bmi.n	80111d4 <_vprintf+0x354>
 80111cc:	9b05      	ldr	r3, [sp, #20]
 80111ce:	4598      	cmp	r8, r3
 80111d0:	db06      	blt.n	80111e0 <_vprintf+0x360>
 80111d2:	46d0      	mov	r8, sl
 80111d4:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 80111d8:	e00e      	b.n	80111f8 <_vprintf+0x378>
 80111da:	f108 0801 	add.w	r8, r8, #1
 80111de:	e7e6      	b.n	80111ae <_vprintf+0x32e>
 80111e0:	2120      	movs	r1, #32
 80111e2:	a803      	add	r0, sp, #12
 80111e4:	f7ff fd62 	bl	8010cac <_xputch>
 80111e8:	46d0      	mov	r8, sl
 80111ea:	e7ea      	b.n	80111c2 <_vprintf+0x342>
 80111ec:	a803      	add	r0, sp, #12
 80111ee:	f7ff fd5d 	bl	8010cac <_xputch>
 80111f2:	9b04      	ldr	r3, [sp, #16]
 80111f4:	3b01      	subs	r3, #1
 80111f6:	9304      	str	r3, [sp, #16]
 80111f8:	9b03      	ldr	r3, [sp, #12]
 80111fa:	07db      	lsls	r3, r3, #31
 80111fc:	d501      	bpl.n	8011202 <_vprintf+0x382>
 80111fe:	9b04      	ldr	r3, [sp, #16]
 8011200:	b11b      	cbz	r3, 801120a <_vprintf+0x38a>
 8011202:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 8011206:	2900      	cmp	r1, #0
 8011208:	d1f0      	bne.n	80111ec <_vprintf+0x36c>
 801120a:	9b05      	ldr	r3, [sp, #20]
 801120c:	4543      	cmp	r3, r8
 801120e:	f77f aee2 	ble.w	8010fd6 <_vprintf+0x156>
 8011212:	2120      	movs	r1, #32
 8011214:	a803      	add	r0, sp, #12
 8011216:	f7ff fd49 	bl	8010cac <_xputch>
 801121a:	f108 0801 	add.w	r8, r8, #1
 801121e:	e7f4      	b.n	801120a <_vprintf+0x38a>
 8011220:	9b03      	ldr	r3, [sp, #12]
 8011222:	f013 0304 	ands.w	r3, r3, #4
 8011226:	bf1d      	ittte	ne
 8011228:	3407      	addne	r4, #7
 801122a:	f024 0307 	bicne.w	r3, r4, #7
 801122e:	461c      	movne	r4, r3
 8011230:	f854 2b04 	ldreq.w	r2, [r4], #4
 8011234:	bf1c      	itt	ne
 8011236:	f854 2b08 	ldrne.w	r2, [r4], #8
 801123a:	685b      	ldrne	r3, [r3, #4]
 801123c:	e6e3      	b.n	8011006 <_vprintf+0x186>
 801123e:	9b03      	ldr	r3, [sp, #12]
 8011240:	f043 0302 	orr.w	r3, r3, #2
 8011244:	9303      	str	r3, [sp, #12]
 8011246:	f854 1b04 	ldr.w	r1, [r4], #4
 801124a:	e7a8      	b.n	801119e <_vprintf+0x31e>

0801124c <printf>:
 801124c:	b40f      	push	{r0, r1, r2, r3}
 801124e:	b507      	push	{r0, r1, r2, lr}
 8011250:	aa04      	add	r2, sp, #16
 8011252:	f852 1b04 	ldr.w	r1, [r2], #4
 8011256:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 801125a:	9201      	str	r2, [sp, #4]
 801125c:	f7ff fe10 	bl	8010e80 <_vprintf>
 8011260:	b003      	add	sp, #12
 8011262:	f85d eb04 	ldr.w	lr, [sp], #4
 8011266:	b004      	add	sp, #16
 8011268:	4770      	bx	lr
	...

0801126c <sprintf>:
 801126c:	b40e      	push	{r1, r2, r3}
 801126e:	b517      	push	{r0, r1, r2, r4, lr}
 8011270:	4c09      	ldr	r4, [pc, #36]	; (8011298 <sprintf+0x2c>)
 8011272:	aa05      	add	r2, sp, #20
 8011274:	f852 1b04 	ldr.w	r1, [r2], #4
 8011278:	6020      	str	r0, [r4, #0]
 801127a:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 801127e:	9201      	str	r2, [sp, #4]
 8011280:	f7ff fdfe 	bl	8010e80 <_vprintf>
 8011284:	2300      	movs	r3, #0
 8011286:	6822      	ldr	r2, [r4, #0]
 8011288:	6023      	str	r3, [r4, #0]
 801128a:	7013      	strb	r3, [r2, #0]
 801128c:	b003      	add	sp, #12
 801128e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011292:	b003      	add	sp, #12
 8011294:	4770      	bx	lr
 8011296:	bf00      	nop
 8011298:	2000d254 	andcs	sp, r0, r4, asr r2

0801129c <snprintf>:
 801129c:	b40c      	push	{r2, r3}
 801129e:	460b      	mov	r3, r1
 80112a0:	b513      	push	{r0, r1, r4, lr}
 80112a2:	4c09      	ldr	r4, [pc, #36]	; (80112c8 <snprintf+0x2c>)
 80112a4:	aa04      	add	r2, sp, #16
 80112a6:	f852 1b04 	ldr.w	r1, [r2], #4
 80112aa:	6020      	str	r0, [r4, #0]
 80112ac:	4618      	mov	r0, r3
 80112ae:	9201      	str	r2, [sp, #4]
 80112b0:	f7ff fde6 	bl	8010e80 <_vprintf>
 80112b4:	2300      	movs	r3, #0
 80112b6:	6822      	ldr	r2, [r4, #0]
 80112b8:	6023      	str	r3, [r4, #0]
 80112ba:	7013      	strb	r3, [r2, #0]
 80112bc:	b002      	add	sp, #8
 80112be:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80112c2:	b002      	add	sp, #8
 80112c4:	4770      	bx	lr
 80112c6:	bf00      	nop
 80112c8:	2000d254 	andcs	sp, r0, r4, asr r2

080112cc <vsnprintf>:
 80112cc:	b538      	push	{r3, r4, r5, lr}
 80112ce:	4605      	mov	r5, r0
 80112d0:	4c05      	ldr	r4, [pc, #20]	; (80112e8 <vsnprintf+0x1c>)
 80112d2:	4608      	mov	r0, r1
 80112d4:	4611      	mov	r1, r2
 80112d6:	461a      	mov	r2, r3
 80112d8:	6025      	str	r5, [r4, #0]
 80112da:	f7ff fdd1 	bl	8010e80 <_vprintf>
 80112de:	2300      	movs	r3, #0
 80112e0:	6822      	ldr	r2, [r4, #0]
 80112e2:	6023      	str	r3, [r4, #0]
 80112e4:	7013      	strb	r3, [r2, #0]
 80112e6:	bd38      	pop	{r3, r4, r5, pc}
 80112e8:	2000d254 	andcs	sp, r0, r4, asr r2

080112ec <puts>:
 80112ec:	b508      	push	{r3, lr}
 80112ee:	f7ff fa0d 	bl	801070c <console_puts>
 80112f2:	200a      	movs	r0, #10
 80112f4:	f7ff fa08 	bl	8010708 <console_putc>
 80112f8:	2001      	movs	r0, #1
 80112fa:	bd08      	pop	{r3, pc}

080112fc <strtok>:
 80112fc:	b530      	push	{r4, r5, lr}
 80112fe:	b910      	cbnz	r0, 8011306 <strtok+0xa>
 8011300:	4b12      	ldr	r3, [pc, #72]	; (801134c <strtok+0x50>)
 8011302:	6818      	ldr	r0, [r3, #0]
 8011304:	b158      	cbz	r0, 801131e <strtok+0x22>
 8011306:	4603      	mov	r3, r0
 8011308:	460d      	mov	r5, r1
 801130a:	4618      	mov	r0, r3
 801130c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8011310:	f815 4b01 	ldrb.w	r4, [r5], #1
 8011314:	b924      	cbnz	r4, 8011320 <strtok+0x24>
 8011316:	b94a      	cbnz	r2, 801132c <strtok+0x30>
 8011318:	4610      	mov	r0, r2
 801131a:	4b0c      	ldr	r3, [pc, #48]	; (801134c <strtok+0x50>)
 801131c:	601a      	str	r2, [r3, #0]
 801131e:	bd30      	pop	{r4, r5, pc}
 8011320:	42a2      	cmp	r2, r4
 8011322:	d1f5      	bne.n	8011310 <strtok+0x14>
 8011324:	e7f0      	b.n	8011308 <strtok+0xc>
 8011326:	4613      	mov	r3, r2
 8011328:	e00c      	b.n	8011344 <strtok+0x48>
 801132a:	b914      	cbnz	r4, 8011332 <strtok+0x36>
 801132c:	460d      	mov	r5, r1
 801132e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8011332:	f815 4b01 	ldrb.w	r4, [r5], #1
 8011336:	42a2      	cmp	r2, r4
 8011338:	d1f7      	bne.n	801132a <strtok+0x2e>
 801133a:	2a00      	cmp	r2, #0
 801133c:	d0f3      	beq.n	8011326 <strtok+0x2a>
 801133e:	2200      	movs	r2, #0
 8011340:	f803 2c01 	strb.w	r2, [r3, #-1]
 8011344:	4a01      	ldr	r2, [pc, #4]	; (801134c <strtok+0x50>)
 8011346:	6013      	str	r3, [r2, #0]
 8011348:	e7e9      	b.n	801131e <strtok+0x22>
 801134a:	bf00      	nop
 801134c:	2000d258 	andcs	sp, r0, r8, asr r2

08011350 <isleapyear>:
 8011350:	2264      	movs	r2, #100	; 0x64
 8011352:	fb90 f3f2 	sdiv	r3, r0, r2
 8011356:	fb02 0313 	mls	r3, r2, r3, r0
 801135a:	b94b      	cbnz	r3, 8011370 <isleapyear+0x20>
 801135c:	f44f 73c8 	mov.w	r3, #400	; 0x190
 8011360:	fb90 f2f3 	sdiv	r2, r0, r3
 8011364:	fb03 0012 	mls	r0, r3, r2, r0
 8011368:	fab0 f080 	clz	r0, r0
 801136c:	0940      	lsrs	r0, r0, #5
 801136e:	4770      	bx	lr
 8011370:	f010 0f03 	tst.w	r0, #3
 8011374:	bf0c      	ite	eq
 8011376:	2001      	moveq	r0, #1
 8011378:	2000      	movne	r0, #0
 801137a:	4770      	bx	lr

0801137c <getdaysofmonth>:
 801137c:	b510      	push	{r4, lr}
 801137e:	4604      	mov	r4, r0
 8011380:	2c01      	cmp	r4, #1
 8011382:	4608      	mov	r0, r1
 8011384:	d102      	bne.n	801138c <getdaysofmonth+0x10>
 8011386:	f7ff ffe3 	bl	8011350 <isleapyear>
 801138a:	b918      	cbnz	r0, 8011394 <getdaysofmonth+0x18>
 801138c:	4b02      	ldr	r3, [pc, #8]	; (8011398 <getdaysofmonth+0x1c>)
 801138e:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8011392:	bd10      	pop	{r4, pc}
 8011394:	201d      	movs	r0, #29
 8011396:	e7fc      	b.n	8011392 <getdaysofmonth+0x16>
 8011398:	0801533c 	stmdaeq	r1, {r2, r3, r4, r5, r8, r9, ip, lr}

0801139c <mktime>:
 801139c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80113a0:	4604      	mov	r4, r0
 80113a2:	2800      	cmp	r0, #0
 80113a4:	d042      	beq.n	801142c <mktime+0x90>
 80113a6:	6941      	ldr	r1, [r0, #20]
 80113a8:	f1a1 0346 	sub.w	r3, r1, #70	; 0x46
 80113ac:	2b45      	cmp	r3, #69	; 0x45
 80113ae:	d83d      	bhi.n	801142c <mktime+0x90>
 80113b0:	2600      	movs	r6, #0
 80113b2:	f240 75b2 	movw	r5, #1970	; 0x7b2
 80113b6:	f240 186d 	movw	r8, #365	; 0x16d
 80113ba:	f201 776b 	addw	r7, r1, #1899	; 0x76b
 80113be:	42af      	cmp	r7, r5
 80113c0:	da23      	bge.n	801140a <mktime+0x6e>
 80113c2:	6927      	ldr	r7, [r4, #16]
 80113c4:	2f0b      	cmp	r7, #11
 80113c6:	d831      	bhi.n	801142c <mktime+0x90>
 80113c8:	2500      	movs	r5, #0
 80113ca:	42af      	cmp	r7, r5
 80113cc:	d128      	bne.n	8011420 <mktime+0x84>
 80113ce:	68e5      	ldr	r5, [r4, #12]
 80113d0:	2d00      	cmp	r5, #0
 80113d2:	dd2b      	ble.n	801142c <mktime+0x90>
 80113d4:	4638      	mov	r0, r7
 80113d6:	f7ff ffd1 	bl	801137c <getdaysofmonth>
 80113da:	4285      	cmp	r5, r0
 80113dc:	dc26      	bgt.n	801142c <mktime+0x90>
 80113de:	2318      	movs	r3, #24
 80113e0:	3d01      	subs	r5, #1
 80113e2:	4435      	add	r5, r6
 80113e4:	435d      	muls	r5, r3
 80113e6:	68a3      	ldr	r3, [r4, #8]
 80113e8:	2b17      	cmp	r3, #23
 80113ea:	d81f      	bhi.n	801142c <mktime+0x90>
 80113ec:	203c      	movs	r0, #60	; 0x3c
 80113ee:	442b      	add	r3, r5
 80113f0:	fb00 f503 	mul.w	r5, r0, r3
 80113f4:	6863      	ldr	r3, [r4, #4]
 80113f6:	2b3b      	cmp	r3, #59	; 0x3b
 80113f8:	d818      	bhi.n	801142c <mktime+0x90>
 80113fa:	442b      	add	r3, r5
 80113fc:	4343      	muls	r3, r0
 80113fe:	6820      	ldr	r0, [r4, #0]
 8011400:	283b      	cmp	r0, #59	; 0x3b
 8011402:	d813      	bhi.n	801142c <mktime+0x90>
 8011404:	4418      	add	r0, r3
 8011406:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801140a:	4628      	mov	r0, r5
 801140c:	f7ff ffa0 	bl	8011350 <isleapyear>
 8011410:	2800      	cmp	r0, #0
 8011412:	bf14      	ite	ne
 8011414:	f44f 73b7 	movne.w	r3, #366	; 0x16e
 8011418:	4643      	moveq	r3, r8
 801141a:	3501      	adds	r5, #1
 801141c:	441e      	add	r6, r3
 801141e:	e7ce      	b.n	80113be <mktime+0x22>
 8011420:	4628      	mov	r0, r5
 8011422:	f7ff ffab 	bl	801137c <getdaysofmonth>
 8011426:	3501      	adds	r5, #1
 8011428:	4406      	add	r6, r0
 801142a:	e7ce      	b.n	80113ca <mktime+0x2e>
 801142c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8011430:	e7e9      	b.n	8011406 <mktime+0x6a>
	...

08011434 <gettimeofday>:
 8011434:	b538      	push	{r3, r4, r5, lr}
 8011436:	4b10      	ldr	r3, [pc, #64]	; (8011478 <gettimeofday+0x44>)
 8011438:	4a10      	ldr	r2, [pc, #64]	; (801147c <gettimeofday+0x48>)
 801143a:	681b      	ldr	r3, [r3, #0]
 801143c:	6814      	ldr	r4, [r2, #0]
 801143e:	6013      	str	r3, [r2, #0]
 8011440:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8011444:	429c      	cmp	r4, r3
 8011446:	bf2c      	ite	cs
 8011448:	1ae4      	subcs	r4, r4, r3
 801144a:	1b1c      	subcc	r4, r3, r4
 801144c:	4354      	muls	r4, r2
 801144e:	4b0c      	ldr	r3, [pc, #48]	; (8011480 <gettimeofday+0x4c>)
 8011450:	4605      	mov	r5, r0
 8011452:	e9d3 2100 	ldrd	r2, r1, [r3]
 8011456:	18a4      	adds	r4, r4, r2
 8011458:	f141 0100 	adc.w	r1, r1, #0
 801145c:	e9c3 4100 	strd	r4, r1, [r3]
 8011460:	4620      	mov	r0, r4
 8011462:	2300      	movs	r3, #0
 8011464:	4a07      	ldr	r2, [pc, #28]	; (8011484 <gettimeofday+0x50>)
 8011466:	f7f7 f875 	bl	8008554 <__aeabi_uldivmod>
 801146a:	4b06      	ldr	r3, [pc, #24]	; (8011484 <gettimeofday+0x50>)
 801146c:	6028      	str	r0, [r5, #0]
 801146e:	fb03 4410 	mls	r4, r3, r0, r4
 8011472:	2000      	movs	r0, #0
 8011474:	606c      	str	r4, [r5, #4]
 8011476:	bd38      	pop	{r3, r4, r5, pc}
 8011478:	2000d26c 	andcs	sp, r0, ip, ror #4
 801147c:	2000d268 	andcs	sp, r0, r8, ror #4
 8011480:	2000d260 	andcs	sp, r0, r0, ror #4
 8011484:	000f4240 	andeq	r4, pc, r0, asr #4

08011488 <settimeofday>:
 8011488:	4b07      	ldr	r3, [pc, #28]	; (80114a8 <settimeofday+0x20>)
 801148a:	b510      	push	{r4, lr}
 801148c:	681a      	ldr	r2, [r3, #0]
 801148e:	4b07      	ldr	r3, [pc, #28]	; (80114ac <settimeofday+0x24>)
 8011490:	6804      	ldr	r4, [r0, #0]
 8011492:	601a      	str	r2, [r3, #0]
 8011494:	6843      	ldr	r3, [r0, #4]
 8011496:	4806      	ldr	r0, [pc, #24]	; (80114b0 <settimeofday+0x28>)
 8011498:	17da      	asrs	r2, r3, #31
 801149a:	fbc4 3200 	smlal	r3, r2, r4, r0
 801149e:	4905      	ldr	r1, [pc, #20]	; (80114b4 <settimeofday+0x2c>)
 80114a0:	2000      	movs	r0, #0
 80114a2:	e9c1 3200 	strd	r3, r2, [r1]
 80114a6:	bd10      	pop	{r4, pc}
 80114a8:	2000d26c 	andcs	sp, r0, ip, ror #4
 80114ac:	2000d268 	andcs	sp, r0, r8, ror #4
 80114b0:	000f4240 	andeq	r4, pc, r0, asr #4
 80114b4:	2000d260 	andcs	sp, r0, r0, ror #4

080114b8 <time>:
 80114b8:	b513      	push	{r0, r1, r4, lr}
 80114ba:	4604      	mov	r4, r0
 80114bc:	2100      	movs	r1, #0
 80114be:	4668      	mov	r0, sp
 80114c0:	f7ff ffb8 	bl	8011434 <gettimeofday>
 80114c4:	9800      	ldr	r0, [sp, #0]
 80114c6:	b104      	cbz	r4, 80114ca <time+0x12>
 80114c8:	6020      	str	r0, [r4, #0]
 80114ca:	b002      	add	sp, #8
 80114cc:	bd10      	pop	{r4, pc}
	...

080114d0 <uart0_init>:
 80114d0:	2301      	movs	r3, #1
 80114d2:	b507      	push	{r0, r1, r2, lr}
 80114d4:	2208      	movs	r2, #8
 80114d6:	9300      	str	r3, [sp, #0]
 80114d8:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
 80114dc:	2300      	movs	r3, #0
 80114de:	4803      	ldr	r0, [pc, #12]	; (80114ec <uart0_init+0x1c>)
 80114e0:	f001 f8e2 	bl	80126a8 <gd32_uart_begin>
 80114e4:	b003      	add	sp, #12
 80114e6:	f85d fb04 	ldr.w	pc, [sp], #4
 80114ea:	bf00      	nop
 80114ec:	40013800 	andmi	r3, r1, r0, lsl #16

080114f0 <uart0_putc>:
 80114f0:	280a      	cmp	r0, #10
 80114f2:	b538      	push	{r3, r4, r5, lr}
 80114f4:	4604      	mov	r4, r0
 80114f6:	d10a      	bne.n	801150e <uart0_putc+0x1e>
 80114f8:	4d0b      	ldr	r5, [pc, #44]	; (8011528 <uart0_putc+0x38>)
 80114fa:	2107      	movs	r1, #7
 80114fc:	4628      	mov	r0, r5
 80114fe:	f000 fe3d 	bl	801217c <usart_flag_get>
 8011502:	2800      	cmp	r0, #0
 8011504:	d0f9      	beq.n	80114fa <uart0_putc+0xa>
 8011506:	220d      	movs	r2, #13
 8011508:	4b08      	ldr	r3, [pc, #32]	; (801152c <uart0_putc+0x3c>)
 801150a:	f8c3 2804 	str.w	r2, [r3, #2052]	; 0x804
 801150e:	4d06      	ldr	r5, [pc, #24]	; (8011528 <uart0_putc+0x38>)
 8011510:	2107      	movs	r1, #7
 8011512:	4628      	mov	r0, r5
 8011514:	f000 fe32 	bl	801217c <usart_flag_get>
 8011518:	2800      	cmp	r0, #0
 801151a:	d0f9      	beq.n	8011510 <uart0_putc+0x20>
 801151c:	4b03      	ldr	r3, [pc, #12]	; (801152c <uart0_putc+0x3c>)
 801151e:	b2e4      	uxtb	r4, r4
 8011520:	f8c3 4804 	str.w	r4, [r3, #2052]	; 0x804
 8011524:	bd38      	pop	{r3, r4, r5, pc}
 8011526:	bf00      	nop
 8011528:	40013800 	andmi	r3, r1, r0, lsl #16
 801152c:	40013000 	andmi	r3, r1, r0

08011530 <uart0_puts>:
 8011530:	b510      	push	{r4, lr}
 8011532:	1e44      	subs	r4, r0, #1
 8011534:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8011538:	b903      	cbnz	r3, 801153c <uart0_puts+0xc>
 801153a:	bd10      	pop	{r4, pc}
 801153c:	2b0a      	cmp	r3, #10
 801153e:	d102      	bne.n	8011546 <uart0_puts+0x16>
 8011540:	200d      	movs	r0, #13
 8011542:	f7ff ffd5 	bl	80114f0 <uart0_putc>
 8011546:	7820      	ldrb	r0, [r4, #0]
 8011548:	f7ff ffd2 	bl	80114f0 <uart0_putc>
 801154c:	e7f2      	b.n	8011534 <uart0_puts+0x4>
	...

08011550 <systick_config>:
 8011550:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8011554:	4b0b      	ldr	r3, [pc, #44]	; (8011584 <systick_config+0x34>)
 8011556:	681b      	ldr	r3, [r3, #0]
 8011558:	fbb3 f3f2 	udiv	r3, r3, r2
 801155c:	3b01      	subs	r3, #1
 801155e:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8011562:	d20d      	bcs.n	8011580 <systick_config+0x30>
 8011564:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8011568:	21f0      	movs	r1, #240	; 0xf0
 801156a:	6153      	str	r3, [r2, #20]
 801156c:	4b06      	ldr	r3, [pc, #24]	; (8011588 <systick_config+0x38>)
 801156e:	2007      	movs	r0, #7
 8011570:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 8011574:	2100      	movs	r1, #0
 8011576:	6191      	str	r1, [r2, #24]
 8011578:	6110      	str	r0, [r2, #16]
 801157a:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 801157e:	4770      	bx	lr
 8011580:	e7fe      	b.n	8011580 <systick_config+0x30>
 8011582:	bf00      	nop
 8011584:	200000f4 	strdcs	r0, [r0], -r4
 8011588:	e000ed00 	and	lr, r0, r0, lsl #26

0801158c <SysTick_Handler>:
 801158c:	4a02      	ldr	r2, [pc, #8]	; (8011598 <SysTick_Handler+0xc>)
 801158e:	6813      	ldr	r3, [r2, #0]
 8011590:	3301      	adds	r3, #1
 8011592:	6013      	str	r3, [r2, #0]
 8011594:	4770      	bx	lr
 8011596:	bf00      	nop
 8011598:	2000d26c 	andcs	sp, r0, ip, ror #4

0801159c <SystemInit>:
 801159c:	4b3a      	ldr	r3, [pc, #232]	; (8011688 <SystemInit+0xec>)
 801159e:	681a      	ldr	r2, [r3, #0]
 80115a0:	f042 0201 	orr.w	r2, r2, #1
 80115a4:	601a      	str	r2, [r3, #0]
 80115a6:	6859      	ldr	r1, [r3, #4]
 80115a8:	4a38      	ldr	r2, [pc, #224]	; (801168c <SystemInit+0xf0>)
 80115aa:	400a      	ands	r2, r1
 80115ac:	605a      	str	r2, [r3, #4]
 80115ae:	681a      	ldr	r2, [r3, #0]
 80115b0:	f44f 017f 	mov.w	r1, #16711680	; 0xff0000
 80115b4:	f022 7284 	bic.w	r2, r2, #17301504	; 0x1080000
 80115b8:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 80115bc:	601a      	str	r2, [r3, #0]
 80115be:	681a      	ldr	r2, [r3, #0]
 80115c0:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 80115c4:	601a      	str	r2, [r3, #0]
 80115c6:	685a      	ldr	r2, [r3, #4]
 80115c8:	f022 5203 	bic.w	r2, r2, #549453824	; 0x20c00000
 80115cc:	f422 127c 	bic.w	r2, r2, #4128768	; 0x3f0000
 80115d0:	605a      	str	r2, [r3, #4]
 80115d2:	681a      	ldr	r2, [r3, #0]
 80115d4:	f022 52a0 	bic.w	r2, r2, #335544320	; 0x14000000
 80115d8:	601a      	str	r2, [r3, #0]
 80115da:	2200      	movs	r2, #0
 80115dc:	62da      	str	r2, [r3, #44]	; 0x2c
 80115de:	6099      	str	r1, [r3, #8]
 80115e0:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 80115e4:	f8d3 2090 	ldr.w	r2, [r3, #144]	; 0x90
 80115e8:	f022 5280 	bic.w	r2, r2, #268435456	; 0x10000000
 80115ec:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
 80115f0:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
 80115f4:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
 80115f8:	4a25      	ldr	r2, [pc, #148]	; (8011690 <SystemInit+0xf4>)
 80115fa:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
 80115fe:	681a      	ldr	r2, [r3, #0]
 8011600:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8011604:	601a      	str	r2, [r3, #0]
 8011606:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801160a:	6819      	ldr	r1, [r3, #0]
 801160c:	0389      	lsls	r1, r1, #14
 801160e:	d401      	bmi.n	8011614 <SystemInit+0x78>
 8011610:	3a01      	subs	r2, #1
 8011612:	d1fa      	bne.n	801160a <SystemInit+0x6e>
 8011614:	681a      	ldr	r2, [r3, #0]
 8011616:	0392      	lsls	r2, r2, #14
 8011618:	d400      	bmi.n	801161c <SystemInit+0x80>
 801161a:	e7fe      	b.n	801161a <SystemInit+0x7e>
 801161c:	685a      	ldr	r2, [r3, #4]
 801161e:	605a      	str	r2, [r3, #4]
 8011620:	685a      	ldr	r2, [r3, #4]
 8011622:	605a      	str	r2, [r3, #4]
 8011624:	685a      	ldr	r2, [r3, #4]
 8011626:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 801162a:	605a      	str	r2, [r3, #4]
 801162c:	685a      	ldr	r2, [r3, #4]
 801162e:	f022 5200 	bic.w	r2, r2, #536870912	; 0x20000000
 8011632:	f422 127c 	bic.w	r2, r2, #4128768	; 0x3f0000
 8011636:	605a      	str	r2, [r3, #4]
 8011638:	685a      	ldr	r2, [r3, #4]
 801163a:	f442 1204 	orr.w	r2, r2, #2162688	; 0x210000
 801163e:	605a      	str	r2, [r3, #4]
 8011640:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8011642:	4a14      	ldr	r2, [pc, #80]	; (8011694 <SystemInit+0xf8>)
 8011644:	400a      	ands	r2, r1
 8011646:	62da      	str	r2, [r3, #44]	; 0x2c
 8011648:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 801164a:	f442 3285 	orr.w	r2, r2, #68096	; 0x10a00
 801164e:	f042 0244 	orr.w	r2, r2, #68	; 0x44
 8011652:	62da      	str	r2, [r3, #44]	; 0x2c
 8011654:	681a      	ldr	r2, [r3, #0]
 8011656:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 801165a:	601a      	str	r2, [r3, #0]
 801165c:	681a      	ldr	r2, [r3, #0]
 801165e:	0110      	lsls	r0, r2, #4
 8011660:	d5fc      	bpl.n	801165c <SystemInit+0xc0>
 8011662:	681a      	ldr	r2, [r3, #0]
 8011664:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 8011668:	601a      	str	r2, [r3, #0]
 801166a:	681a      	ldr	r2, [r3, #0]
 801166c:	0191      	lsls	r1, r2, #6
 801166e:	d5fc      	bpl.n	801166a <SystemInit+0xce>
 8011670:	685a      	ldr	r2, [r3, #4]
 8011672:	f022 0203 	bic.w	r2, r2, #3
 8011676:	605a      	str	r2, [r3, #4]
 8011678:	685a      	ldr	r2, [r3, #4]
 801167a:	f042 0202 	orr.w	r2, r2, #2
 801167e:	605a      	str	r2, [r3, #4]
 8011680:	685a      	ldr	r2, [r3, #4]
 8011682:	0712      	lsls	r2, r2, #28
 8011684:	d5fc      	bpl.n	8011680 <SystemInit+0xe4>
 8011686:	4770      	bx	lr
 8011688:	40021000 	andmi	r1, r2, r0
 801168c:	e0ff000c 	rscs	r0, pc, ip
 8011690:	20003010 	andcs	r3, r0, r0, lsl r0
 8011694:	fffef000 			; <UNDEFINED> instruction: 0xfffef000

08011698 <bkp_deinit>:
 8011698:	b508      	push	{r3, lr}
 801169a:	f000 f9eb 	bl	8011a74 <rcu_bkp_reset_enable>
 801169e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80116a2:	f000 b9ef 	b.w	8011a84 <rcu_bkp_reset_disable>
	...

080116a8 <bkp_data_write>:
 80116a8:	f1a0 030b 	sub.w	r3, r0, #11
 80116ac:	2b1f      	cmp	r3, #31
 80116ae:	d804      	bhi.n	80116ba <bkp_data_write+0x12>
 80116b0:	4b07      	ldr	r3, [pc, #28]	; (80116d0 <bkp_data_write+0x28>)
 80116b2:	4403      	add	r3, r0
 80116b4:	009b      	lsls	r3, r3, #2
 80116b6:	8019      	strh	r1, [r3, #0]
 80116b8:	4770      	bx	lr
 80116ba:	1e43      	subs	r3, r0, #1
 80116bc:	2b09      	cmp	r3, #9
 80116be:	bf9f      	itttt	ls
 80116c0:	f100 5080 	addls.w	r0, r0, #268435456	; 0x10000000
 80116c4:	f500 50d8 	addls.w	r0, r0, #6912	; 0x1b00
 80116c8:	0080      	lslls	r0, r0, #2
 80116ca:	8001      	strhls	r1, [r0, #0]
 80116cc:	4770      	bx	lr
 80116ce:	bf00      	nop
 80116d0:	10001b05 	andne	r1, r0, r5, lsl #22

080116d4 <bkp_data_read>:
 80116d4:	f1a0 030b 	sub.w	r3, r0, #11
 80116d8:	2b1f      	cmp	r3, #31
 80116da:	d805      	bhi.n	80116e8 <bkp_data_read+0x14>
 80116dc:	4b08      	ldr	r3, [pc, #32]	; (8011700 <bkp_data_read+0x2c>)
 80116de:	4403      	add	r3, r0
 80116e0:	009b      	lsls	r3, r3, #2
 80116e2:	8818      	ldrh	r0, [r3, #0]
 80116e4:	b280      	uxth	r0, r0
 80116e6:	4770      	bx	lr
 80116e8:	1e43      	subs	r3, r0, #1
 80116ea:	2b09      	cmp	r3, #9
 80116ec:	d806      	bhi.n	80116fc <bkp_data_read+0x28>
 80116ee:	f100 5080 	add.w	r0, r0, #268435456	; 0x10000000
 80116f2:	f500 50d8 	add.w	r0, r0, #6912	; 0x1b00
 80116f6:	0080      	lsls	r0, r0, #2
 80116f8:	8800      	ldrh	r0, [r0, #0]
 80116fa:	e7f3      	b.n	80116e4 <bkp_data_read+0x10>
 80116fc:	2000      	movs	r0, #0
 80116fe:	4770      	bx	lr
 8011700:	10001b05 	andne	r1, r0, r5, lsl #22

08011704 <dma_deinit>:
 8011704:	2314      	movs	r3, #20
 8011706:	fb03 0301 	mla	r3, r3, r1, r0
 801170a:	689a      	ldr	r2, [r3, #8]
 801170c:	b530      	push	{r4, r5, lr}
 801170e:	f022 0201 	bic.w	r2, r2, #1
 8011712:	609a      	str	r2, [r3, #8]
 8011714:	2200      	movs	r2, #0
 8011716:	609a      	str	r2, [r3, #8]
 8011718:	60da      	str	r2, [r3, #12]
 801171a:	611a      	str	r2, [r3, #16]
 801171c:	615a      	str	r2, [r3, #20]
 801171e:	230f      	movs	r3, #15
 8011720:	6844      	ldr	r4, [r0, #4]
 8011722:	008d      	lsls	r5, r1, #2
 8011724:	40ab      	lsls	r3, r5
 8011726:	4323      	orrs	r3, r4
 8011728:	6043      	str	r3, [r0, #4]
 801172a:	4b04      	ldr	r3, [pc, #16]	; (801173c <dma_deinit+0x38>)
 801172c:	4298      	cmp	r0, r3
 801172e:	d103      	bne.n	8011738 <dma_deinit+0x34>
 8011730:	2905      	cmp	r1, #5
 8011732:	bf08      	it	eq
 8011734:	f8c3 2300 	streq.w	r2, [r3, #768]	; 0x300
 8011738:	bd30      	pop	{r4, r5, pc}
 801173a:	bf00      	nop
 801173c:	40020400 	andmi	r0, r2, r0, lsl #8

08011740 <dma_init>:
 8011740:	2314      	movs	r3, #20
 8011742:	fb03 0101 	mla	r1, r3, r1, r0
 8011746:	6813      	ldr	r3, [r2, #0]
 8011748:	b510      	push	{r4, lr}
 801174a:	610b      	str	r3, [r1, #16]
 801174c:	6893      	ldr	r3, [r2, #8]
 801174e:	614b      	str	r3, [r1, #20]
 8011750:	8a13      	ldrh	r3, [r2, #16]
 8011752:	60cb      	str	r3, [r1, #12]
 8011754:	68d4      	ldr	r4, [r2, #12]
 8011756:	6853      	ldr	r3, [r2, #4]
 8011758:	6888      	ldr	r0, [r1, #8]
 801175a:	4323      	orrs	r3, r4
 801175c:	6954      	ldr	r4, [r2, #20]
 801175e:	f420 507c 	bic.w	r0, r0, #16128	; 0x3f00
 8011762:	4323      	orrs	r3, r4
 8011764:	4303      	orrs	r3, r0
 8011766:	608b      	str	r3, [r1, #8]
 8011768:	7e13      	ldrb	r3, [r2, #24]
 801176a:	2b01      	cmp	r3, #1
 801176c:	688b      	ldr	r3, [r1, #8]
 801176e:	bf0c      	ite	eq
 8011770:	f043 0340 	orreq.w	r3, r3, #64	; 0x40
 8011774:	f023 0340 	bicne.w	r3, r3, #64	; 0x40
 8011778:	608b      	str	r3, [r1, #8]
 801177a:	7e53      	ldrb	r3, [r2, #25]
 801177c:	2b01      	cmp	r3, #1
 801177e:	688b      	ldr	r3, [r1, #8]
 8011780:	bf0c      	ite	eq
 8011782:	f043 0380 	orreq.w	r3, r3, #128	; 0x80
 8011786:	f023 0380 	bicne.w	r3, r3, #128	; 0x80
 801178a:	608b      	str	r3, [r1, #8]
 801178c:	7e93      	ldrb	r3, [r2, #26]
 801178e:	b923      	cbnz	r3, 801179a <dma_init+0x5a>
 8011790:	688b      	ldr	r3, [r1, #8]
 8011792:	f023 0310 	bic.w	r3, r3, #16
 8011796:	608b      	str	r3, [r1, #8]
 8011798:	bd10      	pop	{r4, pc}
 801179a:	688b      	ldr	r3, [r1, #8]
 801179c:	f043 0310 	orr.w	r3, r3, #16
 80117a0:	e7f9      	b.n	8011796 <dma_init+0x56>

080117a2 <dma_circulation_disable>:
 80117a2:	2314      	movs	r3, #20
 80117a4:	4359      	muls	r1, r3
 80117a6:	3008      	adds	r0, #8
 80117a8:	580b      	ldr	r3, [r1, r0]
 80117aa:	f023 0320 	bic.w	r3, r3, #32
 80117ae:	500b      	str	r3, [r1, r0]
 80117b0:	4770      	bx	lr

080117b2 <dma_memory_to_memory_disable>:
 80117b2:	2314      	movs	r3, #20
 80117b4:	4359      	muls	r1, r3
 80117b6:	3008      	adds	r0, #8
 80117b8:	580b      	ldr	r3, [r1, r0]
 80117ba:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80117be:	500b      	str	r3, [r1, r0]
 80117c0:	4770      	bx	lr

080117c2 <dma_channel_enable>:
 80117c2:	2314      	movs	r3, #20
 80117c4:	4359      	muls	r1, r3
 80117c6:	3008      	adds	r0, #8
 80117c8:	580b      	ldr	r3, [r1, r0]
 80117ca:	f043 0301 	orr.w	r3, r3, #1
 80117ce:	500b      	str	r3, [r1, r0]
 80117d0:	4770      	bx	lr

080117d2 <dma_channel_disable>:
 80117d2:	2314      	movs	r3, #20
 80117d4:	4359      	muls	r1, r3
 80117d6:	3008      	adds	r0, #8
 80117d8:	580b      	ldr	r3, [r1, r0]
 80117da:	f023 0301 	bic.w	r3, r3, #1
 80117de:	500b      	str	r3, [r1, r0]
 80117e0:	4770      	bx	lr
	...

080117e4 <fmc_bank0_unlock>:
 80117e4:	4b04      	ldr	r3, [pc, #16]	; (80117f8 <fmc_bank0_unlock+0x14>)
 80117e6:	691a      	ldr	r2, [r3, #16]
 80117e8:	0612      	lsls	r2, r2, #24
 80117ea:	bf41      	itttt	mi
 80117ec:	4a03      	ldrmi	r2, [pc, #12]	; (80117fc <fmc_bank0_unlock+0x18>)
 80117ee:	605a      	strmi	r2, [r3, #4]
 80117f0:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 80117f4:	605a      	strmi	r2, [r3, #4]
 80117f6:	4770      	bx	lr
 80117f8:	40022000 	andmi	r2, r2, r0
 80117fc:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

08011800 <fmc_bank1_unlock>:
 8011800:	4b04      	ldr	r3, [pc, #16]	; (8011814 <fmc_bank1_unlock+0x14>)
 8011802:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8011804:	0612      	lsls	r2, r2, #24
 8011806:	bf41      	itttt	mi
 8011808:	4a03      	ldrmi	r2, [pc, #12]	; (8011818 <fmc_bank1_unlock+0x18>)
 801180a:	645a      	strmi	r2, [r3, #68]	; 0x44
 801180c:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 8011810:	645a      	strmi	r2, [r3, #68]	; 0x44
 8011812:	4770      	bx	lr
 8011814:	40022000 	andmi	r2, r2, r0
 8011818:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

0801181c <fmc_bank0_lock>:
 801181c:	4a02      	ldr	r2, [pc, #8]	; (8011828 <fmc_bank0_lock+0xc>)
 801181e:	6913      	ldr	r3, [r2, #16]
 8011820:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8011824:	6113      	str	r3, [r2, #16]
 8011826:	4770      	bx	lr
 8011828:	40022000 	andmi	r2, r2, r0

0801182c <fmc_bank1_lock>:
 801182c:	4a02      	ldr	r2, [pc, #8]	; (8011838 <fmc_bank1_lock+0xc>)
 801182e:	6d13      	ldr	r3, [r2, #80]	; 0x50
 8011830:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8011834:	6513      	str	r3, [r2, #80]	; 0x50
 8011836:	4770      	bx	lr
 8011838:	40022000 	andmi	r2, r2, r0

0801183c <fmc_bank0_state_get>:
 801183c:	4b08      	ldr	r3, [pc, #32]	; (8011860 <fmc_bank0_state_get+0x24>)
 801183e:	68da      	ldr	r2, [r3, #12]
 8011840:	07d1      	lsls	r1, r2, #31
 8011842:	d409      	bmi.n	8011858 <fmc_bank0_state_get+0x1c>
 8011844:	68da      	ldr	r2, [r3, #12]
 8011846:	06d2      	lsls	r2, r2, #27
 8011848:	d408      	bmi.n	801185c <fmc_bank0_state_get+0x20>
 801184a:	68db      	ldr	r3, [r3, #12]
 801184c:	f013 0f04 	tst.w	r3, #4
 8011850:	bf0c      	ite	eq
 8011852:	2000      	moveq	r0, #0
 8011854:	2002      	movne	r0, #2
 8011856:	4770      	bx	lr
 8011858:	2001      	movs	r0, #1
 801185a:	4770      	bx	lr
 801185c:	2003      	movs	r0, #3
 801185e:	4770      	bx	lr
 8011860:	40022000 	andmi	r2, r2, r0

08011864 <fmc_bank1_state_get>:
 8011864:	4b08      	ldr	r3, [pc, #32]	; (8011888 <fmc_bank1_state_get+0x24>)
 8011866:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8011868:	07d1      	lsls	r1, r2, #31
 801186a:	d409      	bmi.n	8011880 <fmc_bank1_state_get+0x1c>
 801186c:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 801186e:	06d2      	lsls	r2, r2, #27
 8011870:	d408      	bmi.n	8011884 <fmc_bank1_state_get+0x20>
 8011872:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8011874:	f013 0f04 	tst.w	r3, #4
 8011878:	bf0c      	ite	eq
 801187a:	2000      	moveq	r0, #0
 801187c:	2002      	movne	r0, #2
 801187e:	4770      	bx	lr
 8011880:	2001      	movs	r0, #1
 8011882:	4770      	bx	lr
 8011884:	2003      	movs	r0, #3
 8011886:	4770      	bx	lr
 8011888:	40022000 	andmi	r2, r2, r0

0801188c <fwdgt_enable>:
 801188c:	f64c 42cc 	movw	r2, #52428	; 0xcccc
 8011890:	4b01      	ldr	r3, [pc, #4]	; (8011898 <fwdgt_enable+0xc>)
 8011892:	601a      	str	r2, [r3, #0]
 8011894:	4770      	bx	lr
 8011896:	bf00      	nop
 8011898:	40003000 	andmi	r3, r0, r0

0801189c <fwdgt_counter_reload>:
 801189c:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
 80118a0:	4b01      	ldr	r3, [pc, #4]	; (80118a8 <fwdgt_counter_reload+0xc>)
 80118a2:	601a      	str	r2, [r3, #0]
 80118a4:	4770      	bx	lr
 80118a6:	bf00      	nop
 80118a8:	40003000 	andmi	r3, r0, r0

080118ac <fwdgt_config>:
 80118ac:	f245 5355 	movw	r3, #21845	; 0x5555
 80118b0:	4a11      	ldr	r2, [pc, #68]	; (80118f8 <fwdgt_config+0x4c>)
 80118b2:	b510      	push	{r4, lr}
 80118b4:	4c11      	ldr	r4, [pc, #68]	; (80118fc <fwdgt_config+0x50>)
 80118b6:	6013      	str	r3, [r2, #0]
 80118b8:	68d3      	ldr	r3, [r2, #12]
 80118ba:	3c01      	subs	r4, #1
 80118bc:	f003 0301 	and.w	r3, r3, #1
 80118c0:	d013      	beq.n	80118ea <fwdgt_config+0x3e>
 80118c2:	2b00      	cmp	r3, #0
 80118c4:	d1f8      	bne.n	80118b8 <fwdgt_config+0xc>
 80118c6:	6051      	str	r1, [r2, #4]
 80118c8:	490c      	ldr	r1, [pc, #48]	; (80118fc <fwdgt_config+0x50>)
 80118ca:	4a0b      	ldr	r2, [pc, #44]	; (80118f8 <fwdgt_config+0x4c>)
 80118cc:	68d3      	ldr	r3, [r2, #12]
 80118ce:	3901      	subs	r1, #1
 80118d0:	f003 0302 	and.w	r3, r3, #2
 80118d4:	d00d      	beq.n	80118f2 <fwdgt_config+0x46>
 80118d6:	2b00      	cmp	r3, #0
 80118d8:	d1f8      	bne.n	80118cc <fwdgt_config+0x20>
 80118da:	f64a 23aa 	movw	r3, #43690	; 0xaaaa
 80118de:	f3c0 000b 	ubfx	r0, r0, #0, #12
 80118e2:	6090      	str	r0, [r2, #8]
 80118e4:	2001      	movs	r0, #1
 80118e6:	6013      	str	r3, [r2, #0]
 80118e8:	e002      	b.n	80118f0 <fwdgt_config+0x44>
 80118ea:	2b00      	cmp	r3, #0
 80118ec:	d0eb      	beq.n	80118c6 <fwdgt_config+0x1a>
 80118ee:	2000      	movs	r0, #0
 80118f0:	bd10      	pop	{r4, pc}
 80118f2:	2b00      	cmp	r3, #0
 80118f4:	d1fb      	bne.n	80118ee <fwdgt_config+0x42>
 80118f6:	e7f0      	b.n	80118da <fwdgt_config+0x2e>
 80118f8:	40003000 	andmi	r3, r0, r0
 80118fc:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

08011900 <gpio_init>:
 8011900:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011904:	f04f 0c0f 	mov.w	ip, #15
 8011908:	06cf      	lsls	r7, r1, #27
 801190a:	f04f 0400 	mov.w	r4, #0
 801190e:	f04f 0701 	mov.w	r7, #1
 8011912:	f001 050f 	and.w	r5, r1, #15
 8011916:	bf48      	it	mi
 8011918:	4315      	orrmi	r5, r2
 801191a:	fa23 f204 	lsr.w	r2, r3, r4
 801191e:	07d6      	lsls	r6, r2, #31
 8011920:	d510      	bpl.n	8011944 <gpio_init+0x44>
 8011922:	00a2      	lsls	r2, r4, #2
 8011924:	6806      	ldr	r6, [r0, #0]
 8011926:	fa0c fe02 	lsl.w	lr, ip, r2
 801192a:	ea26 060e 	bic.w	r6, r6, lr
 801192e:	fa05 f202 	lsl.w	r2, r5, r2
 8011932:	2928      	cmp	r1, #40	; 0x28
 8011934:	ea42 0206 	orr.w	r2, r2, r6
 8011938:	d128      	bne.n	801198c <gpio_init+0x8c>
 801193a:	fa07 f604 	lsl.w	r6, r7, r4
 801193e:	401e      	ands	r6, r3
 8011940:	6146      	str	r6, [r0, #20]
 8011942:	6002      	str	r2, [r0, #0]
 8011944:	3401      	adds	r4, #1
 8011946:	2c08      	cmp	r4, #8
 8011948:	d1e7      	bne.n	801191a <gpio_init+0x1a>
 801194a:	2600      	movs	r6, #0
 801194c:	f04f 0c0f 	mov.w	ip, #15
 8011950:	2701      	movs	r7, #1
 8011952:	f106 0208 	add.w	r2, r6, #8
 8011956:	fa23 f402 	lsr.w	r4, r3, r2
 801195a:	07e4      	lsls	r4, r4, #31
 801195c:	d511      	bpl.n	8011982 <gpio_init+0x82>
 801195e:	00b4      	lsls	r4, r6, #2
 8011960:	f8d0 e004 	ldr.w	lr, [r0, #4]
 8011964:	fa0c f804 	lsl.w	r8, ip, r4
 8011968:	ea2e 0e08 	bic.w	lr, lr, r8
 801196c:	fa05 f404 	lsl.w	r4, r5, r4
 8011970:	2928      	cmp	r1, #40	; 0x28
 8011972:	ea44 040e 	orr.w	r4, r4, lr
 8011976:	d110      	bne.n	801199a <gpio_init+0x9a>
 8011978:	fa07 f202 	lsl.w	r2, r7, r2
 801197c:	401a      	ands	r2, r3
 801197e:	6142      	str	r2, [r0, #20]
 8011980:	6044      	str	r4, [r0, #4]
 8011982:	3601      	adds	r6, #1
 8011984:	2e08      	cmp	r6, #8
 8011986:	d1e4      	bne.n	8011952 <gpio_init+0x52>
 8011988:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801198c:	2948      	cmp	r1, #72	; 0x48
 801198e:	bf02      	ittt	eq
 8011990:	fa07 f604 	lsleq.w	r6, r7, r4
 8011994:	401e      	andeq	r6, r3
 8011996:	6106      	streq	r6, [r0, #16]
 8011998:	e7d3      	b.n	8011942 <gpio_init+0x42>
 801199a:	2948      	cmp	r1, #72	; 0x48
 801199c:	bf02      	ittt	eq
 801199e:	fa07 f202 	lsleq.w	r2, r7, r2
 80119a2:	401a      	andeq	r2, r3
 80119a4:	6102      	streq	r2, [r0, #16]
 80119a6:	e7eb      	b.n	8011980 <gpio_init+0x80>

080119a8 <gpio_pin_remap_config>:
 80119a8:	2800      	cmp	r0, #0
 80119aa:	4a16      	ldr	r2, [pc, #88]	; (8011a04 <gpio_pin_remap_config+0x5c>)
 80119ac:	b530      	push	{r4, r5, lr}
 80119ae:	f400 1540 	and.w	r5, r0, #3145728	; 0x300000
 80119b2:	bfb4      	ite	lt
 80119b4:	69d3      	ldrlt	r3, [r2, #28]
 80119b6:	6853      	ldrge	r3, [r2, #4]
 80119b8:	f5b5 1f40 	cmp.w	r5, #3145728	; 0x300000
 80119bc:	b284      	uxth	r4, r0
 80119be:	d110      	bne.n	80119e2 <gpio_pin_remap_config+0x3a>
 80119c0:	6855      	ldr	r5, [r2, #4]
 80119c2:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 80119c6:	f025 6570 	bic.w	r5, r5, #251658240	; 0xf000000
 80119ca:	6055      	str	r5, [r2, #4]
 80119cc:	b119      	cbz	r1, 80119d6 <gpio_pin_remap_config+0x2e>
 80119ce:	0d42      	lsrs	r2, r0, #21
 80119d0:	0112      	lsls	r2, r2, #4
 80119d2:	4094      	lsls	r4, r2
 80119d4:	4323      	orrs	r3, r4
 80119d6:	4a0b      	ldr	r2, [pc, #44]	; (8011a04 <gpio_pin_remap_config+0x5c>)
 80119d8:	2800      	cmp	r0, #0
 80119da:	bfb4      	ite	lt
 80119dc:	61d3      	strlt	r3, [r2, #28]
 80119de:	6053      	strge	r3, [r2, #4]
 80119e0:	bd30      	pop	{r4, r5, pc}
 80119e2:	02c2      	lsls	r2, r0, #11
 80119e4:	bf4d      	iteet	mi
 80119e6:	2203      	movmi	r2, #3
 80119e8:	0d42      	lsrpl	r2, r0, #21
 80119ea:	0112      	lslpl	r2, r2, #4
 80119ec:	f3c0 4503 	ubfxmi	r5, r0, #16, #4
 80119f0:	bf4c      	ite	mi
 80119f2:	40aa      	lslmi	r2, r5
 80119f4:	fa04 f202 	lslpl.w	r2, r4, r2
 80119f8:	ea23 0302 	bic.w	r3, r3, r2
 80119fc:	f043 6370 	orr.w	r3, r3, #251658240	; 0xf000000
 8011a00:	e7e4      	b.n	80119cc <gpio_pin_remap_config+0x24>
 8011a02:	bf00      	nop
 8011a04:	40010000 	andmi	r0, r1, r0

08011a08 <gpio_ethernet_phy_select>:
 8011a08:	4b04      	ldr	r3, [pc, #16]	; (8011a1c <gpio_ethernet_phy_select+0x14>)
 8011a0a:	6859      	ldr	r1, [r3, #4]
 8011a0c:	f421 0100 	bic.w	r1, r1, #8388608	; 0x800000
 8011a10:	6059      	str	r1, [r3, #4]
 8011a12:	685a      	ldr	r2, [r3, #4]
 8011a14:	4302      	orrs	r2, r0
 8011a16:	605a      	str	r2, [r3, #4]
 8011a18:	4770      	bx	lr
 8011a1a:	bf00      	nop
 8011a1c:	40010000 	andmi	r0, r1, r0

08011a20 <pmu_backup_write_enable>:
 8011a20:	4a02      	ldr	r2, [pc, #8]	; (8011a2c <pmu_backup_write_enable+0xc>)
 8011a22:	6813      	ldr	r3, [r2, #0]
 8011a24:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8011a28:	6013      	str	r3, [r2, #0]
 8011a2a:	4770      	bx	lr
 8011a2c:	40007000 	andmi	r7, r0, r0

08011a30 <rcu_periph_clock_enable>:
 8011a30:	2201      	movs	r2, #1
 8011a32:	0983      	lsrs	r3, r0, #6
 8011a34:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8011a38:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 8011a3c:	6819      	ldr	r1, [r3, #0]
 8011a3e:	f000 001f 	and.w	r0, r0, #31
 8011a42:	fa02 f000 	lsl.w	r0, r2, r0
 8011a46:	4308      	orrs	r0, r1
 8011a48:	6018      	str	r0, [r3, #0]
 8011a4a:	4770      	bx	lr

08011a4c <rcu_periph_clock_disable>:
 8011a4c:	2101      	movs	r1, #1
 8011a4e:	0983      	lsrs	r3, r0, #6
 8011a50:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8011a54:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 8011a58:	681a      	ldr	r2, [r3, #0]
 8011a5a:	f000 001f 	and.w	r0, r0, #31
 8011a5e:	fa01 f000 	lsl.w	r0, r1, r0
 8011a62:	ea22 0000 	bic.w	r0, r2, r0
 8011a66:	6018      	str	r0, [r3, #0]
 8011a68:	4770      	bx	lr

08011a6a <rcu_periph_reset_enable>:
 8011a6a:	f7ff bfe1 	b.w	8011a30 <rcu_periph_clock_enable>

08011a6e <rcu_periph_reset_disable>:
 8011a6e:	f7ff bfed 	b.w	8011a4c <rcu_periph_clock_disable>
	...

08011a74 <rcu_bkp_reset_enable>:
 8011a74:	4a02      	ldr	r2, [pc, #8]	; (8011a80 <rcu_bkp_reset_enable+0xc>)
 8011a76:	6a13      	ldr	r3, [r2, #32]
 8011a78:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8011a7c:	6213      	str	r3, [r2, #32]
 8011a7e:	4770      	bx	lr
 8011a80:	40021000 	andmi	r1, r2, r0

08011a84 <rcu_bkp_reset_disable>:
 8011a84:	4a02      	ldr	r2, [pc, #8]	; (8011a90 <rcu_bkp_reset_disable+0xc>)
 8011a86:	6a13      	ldr	r3, [r2, #32]
 8011a88:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8011a8c:	6213      	str	r3, [r2, #32]
 8011a8e:	4770      	bx	lr
 8011a90:	40021000 	andmi	r1, r2, r0

08011a94 <rcu_ckout0_config>:
 8011a94:	b510      	push	{r4, lr}
 8011a96:	4c07      	ldr	r4, [pc, #28]	; (8011ab4 <rcu_ckout0_config+0x20>)
 8011a98:	6862      	ldr	r2, [r4, #4]
 8011a9a:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8011a9e:	4302      	orrs	r2, r0
 8011aa0:	6062      	str	r2, [r4, #4]
 8011aa2:	f8d4 3080 	ldr.w	r3, [r4, #128]	; 0x80
 8011aa6:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8011aaa:	430b      	orrs	r3, r1
 8011aac:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 8011ab0:	bd10      	pop	{r4, pc}
 8011ab2:	bf00      	nop
 8011ab4:	40021000 	andmi	r1, r2, r0

08011ab8 <rcu_pll2_config>:
 8011ab8:	4b04      	ldr	r3, [pc, #16]	; (8011acc <rcu_pll2_config+0x14>)
 8011aba:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8011abc:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
 8011ac0:	62d9      	str	r1, [r3, #44]	; 0x2c
 8011ac2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8011ac4:	4302      	orrs	r2, r0
 8011ac6:	62da      	str	r2, [r3, #44]	; 0x2c
 8011ac8:	4770      	bx	lr
 8011aca:	bf00      	nop
 8011acc:	40021000 	andmi	r1, r2, r0

08011ad0 <rcu_adc_clock_config>:
 8011ad0:	490c      	ldr	r1, [pc, #48]	; (8011b04 <rcu_adc_clock_config+0x34>)
 8011ad2:	2805      	cmp	r0, #5
 8011ad4:	684b      	ldr	r3, [r1, #4]
 8011ad6:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8011ada:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 8011ade:	d006      	beq.n	8011aee <rcu_adc_clock_config+0x1e>
 8011ae0:	d803      	bhi.n	8011aea <rcu_adc_clock_config+0x1a>
 8011ae2:	2804      	cmp	r0, #4
 8011ae4:	d10a      	bne.n	8011afc <rcu_adc_clock_config+0x2c>
 8011ae6:	604b      	str	r3, [r1, #4]
 8011ae8:	4770      	bx	lr
 8011aea:	2807      	cmp	r0, #7
 8011aec:	d1fb      	bne.n	8011ae6 <rcu_adc_clock_config+0x16>
 8011aee:	4a06      	ldr	r2, [pc, #24]	; (8011b08 <rcu_adc_clock_config+0x38>)
 8011af0:	ea02 3080 	and.w	r0, r2, r0, lsl #14
 8011af4:	4303      	orrs	r3, r0
 8011af6:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8011afa:	e7f4      	b.n	8011ae6 <rcu_adc_clock_config+0x16>
 8011afc:	ea43 3380 	orr.w	r3, r3, r0, lsl #14
 8011b00:	e7f1      	b.n	8011ae6 <rcu_adc_clock_config+0x16>
 8011b02:	bf00      	nop
 8011b04:	40021000 	andmi	r1, r2, r0
 8011b08:	fffec000 			; <UNDEFINED> instruction: 0xfffec000

08011b0c <rcu_flag_get>:
 8011b0c:	0983      	lsrs	r3, r0, #6
 8011b0e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8011b12:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 8011b16:	681b      	ldr	r3, [r3, #0]
 8011b18:	f000 001f 	and.w	r0, r0, #31
 8011b1c:	fa23 f000 	lsr.w	r0, r3, r0
 8011b20:	f000 0001 	and.w	r0, r0, #1
 8011b24:	4770      	bx	lr
	...

08011b28 <rcu_osci_stab_wait>:
 8011b28:	281c      	cmp	r0, #28
 8011b2a:	b508      	push	{r3, lr}
 8011b2c:	d056      	beq.n	8011bdc <rcu_osci_stab_wait+0xb4>
 8011b2e:	d812      	bhi.n	8011b56 <rcu_osci_stab_wait+0x2e>
 8011b30:	2818      	cmp	r0, #24
 8011b32:	d04a      	beq.n	8011bca <rcu_osci_stab_wait+0xa2>
 8011b34:	d804      	bhi.n	8011b40 <rcu_osci_stab_wait+0x18>
 8011b36:	b398      	cbz	r0, 8011ba0 <rcu_osci_stab_wait+0x78>
 8011b38:	2810      	cmp	r0, #16
 8011b3a:	d022      	beq.n	8011b82 <rcu_osci_stab_wait+0x5a>
 8011b3c:	2000      	movs	r0, #0
 8011b3e:	bd08      	pop	{r3, pc}
 8011b40:	281a      	cmp	r0, #26
 8011b42:	d1fb      	bne.n	8011b3c <rcu_osci_stab_wait+0x14>
 8011b44:	4a2f      	ldr	r2, [pc, #188]	; (8011c04 <rcu_osci_stab_wait+0xdc>)
 8011b46:	201b      	movs	r0, #27
 8011b48:	f7ff ffe0 	bl	8011b0c <rcu_flag_get>
 8011b4c:	b908      	cbnz	r0, 8011b52 <rcu_osci_stab_wait+0x2a>
 8011b4e:	3a01      	subs	r2, #1
 8011b50:	d1f9      	bne.n	8011b46 <rcu_osci_stab_wait+0x1e>
 8011b52:	201b      	movs	r0, #27
 8011b54:	e01e      	b.n	8011b94 <rcu_osci_stab_wait+0x6c>
 8011b56:	f5b0 6f10 	cmp.w	r0, #2304	; 0x900
 8011b5a:	d02b      	beq.n	8011bb4 <rcu_osci_stab_wait+0x8c>
 8011b5c:	f242 431c 	movw	r3, #9244	; 0x241c
 8011b60:	4298      	cmp	r0, r3
 8011b62:	d044      	beq.n	8011bee <rcu_osci_stab_wait+0xc6>
 8011b64:	f5b0 6f00 	cmp.w	r0, #2048	; 0x800
 8011b68:	d1e8      	bne.n	8011b3c <rcu_osci_stab_wait+0x14>
 8011b6a:	f06f 427c 	mvn.w	r2, #4227858432	; 0xfc000000
 8011b6e:	f640 0001 	movw	r0, #2049	; 0x801
 8011b72:	f7ff ffcb 	bl	8011b0c <rcu_flag_get>
 8011b76:	b908      	cbnz	r0, 8011b7c <rcu_osci_stab_wait+0x54>
 8011b78:	3a01      	subs	r2, #1
 8011b7a:	d1f8      	bne.n	8011b6e <rcu_osci_stab_wait+0x46>
 8011b7c:	f640 0001 	movw	r0, #2049	; 0x801
 8011b80:	e008      	b.n	8011b94 <rcu_osci_stab_wait+0x6c>
 8011b82:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8011b86:	2011      	movs	r0, #17
 8011b88:	f7ff ffc0 	bl	8011b0c <rcu_flag_get>
 8011b8c:	b908      	cbnz	r0, 8011b92 <rcu_osci_stab_wait+0x6a>
 8011b8e:	3a01      	subs	r2, #1
 8011b90:	d1f9      	bne.n	8011b86 <rcu_osci_stab_wait+0x5e>
 8011b92:	2011      	movs	r0, #17
 8011b94:	f7ff ffba 	bl	8011b0c <rcu_flag_get>
 8011b98:	3800      	subs	r0, #0
 8011b9a:	bf18      	it	ne
 8011b9c:	2001      	movne	r0, #1
 8011b9e:	e7ce      	b.n	8011b3e <rcu_osci_stab_wait+0x16>
 8011ba0:	f44f 62a0 	mov.w	r2, #1280	; 0x500
 8011ba4:	2001      	movs	r0, #1
 8011ba6:	f7ff ffb1 	bl	8011b0c <rcu_flag_get>
 8011baa:	b908      	cbnz	r0, 8011bb0 <rcu_osci_stab_wait+0x88>
 8011bac:	3a01      	subs	r2, #1
 8011bae:	d1f9      	bne.n	8011ba4 <rcu_osci_stab_wait+0x7c>
 8011bb0:	2001      	movs	r0, #1
 8011bb2:	e7ef      	b.n	8011b94 <rcu_osci_stab_wait+0x6c>
 8011bb4:	4a13      	ldr	r2, [pc, #76]	; (8011c04 <rcu_osci_stab_wait+0xdc>)
 8011bb6:	f640 1001 	movw	r0, #2305	; 0x901
 8011bba:	f7ff ffa7 	bl	8011b0c <rcu_flag_get>
 8011bbe:	b908      	cbnz	r0, 8011bc4 <rcu_osci_stab_wait+0x9c>
 8011bc0:	3a01      	subs	r2, #1
 8011bc2:	d1f8      	bne.n	8011bb6 <rcu_osci_stab_wait+0x8e>
 8011bc4:	f640 1001 	movw	r0, #2305	; 0x901
 8011bc8:	e7e4      	b.n	8011b94 <rcu_osci_stab_wait+0x6c>
 8011bca:	4a0e      	ldr	r2, [pc, #56]	; (8011c04 <rcu_osci_stab_wait+0xdc>)
 8011bcc:	2019      	movs	r0, #25
 8011bce:	f7ff ff9d 	bl	8011b0c <rcu_flag_get>
 8011bd2:	b908      	cbnz	r0, 8011bd8 <rcu_osci_stab_wait+0xb0>
 8011bd4:	3a01      	subs	r2, #1
 8011bd6:	d1f9      	bne.n	8011bcc <rcu_osci_stab_wait+0xa4>
 8011bd8:	2019      	movs	r0, #25
 8011bda:	e7db      	b.n	8011b94 <rcu_osci_stab_wait+0x6c>
 8011bdc:	4a09      	ldr	r2, [pc, #36]	; (8011c04 <rcu_osci_stab_wait+0xdc>)
 8011bde:	201d      	movs	r0, #29
 8011be0:	f7ff ff94 	bl	8011b0c <rcu_flag_get>
 8011be4:	b908      	cbnz	r0, 8011bea <rcu_osci_stab_wait+0xc2>
 8011be6:	3a01      	subs	r2, #1
 8011be8:	d1f9      	bne.n	8011bde <rcu_osci_stab_wait+0xb6>
 8011bea:	201d      	movs	r0, #29
 8011bec:	e7d2      	b.n	8011b94 <rcu_osci_stab_wait+0x6c>
 8011bee:	4a05      	ldr	r2, [pc, #20]	; (8011c04 <rcu_osci_stab_wait+0xdc>)
 8011bf0:	f242 401d 	movw	r0, #9245	; 0x241d
 8011bf4:	f7ff ff8a 	bl	8011b0c <rcu_flag_get>
 8011bf8:	b908      	cbnz	r0, 8011bfe <rcu_osci_stab_wait+0xd6>
 8011bfa:	3a01      	subs	r2, #1
 8011bfc:	d1f8      	bne.n	8011bf0 <rcu_osci_stab_wait+0xc8>
 8011bfe:	f242 401d 	movw	r0, #9245	; 0x241d
 8011c02:	e7c7      	b.n	8011b94 <rcu_osci_stab_wait+0x6c>
 8011c04:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

08011c08 <rcu_osci_on>:
 8011c08:	f7ff bf12 	b.w	8011a30 <rcu_periph_clock_enable>

08011c0c <rcu_clock_freq_get>:
 8011c0c:	4b3d      	ldr	r3, [pc, #244]	; (8011d04 <rcu_clock_freq_get+0xf8>)
 8011c0e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011c10:	4604      	mov	r4, r0
 8011c12:	461f      	mov	r7, r3
 8011c14:	b089      	sub	sp, #36	; 0x24
 8011c16:	ad04      	add	r5, sp, #16
 8011c18:	f103 0610 	add.w	r6, r3, #16
 8011c1c:	462a      	mov	r2, r5
 8011c1e:	6818      	ldr	r0, [r3, #0]
 8011c20:	6859      	ldr	r1, [r3, #4]
 8011c22:	3308      	adds	r3, #8
 8011c24:	c203      	stmia	r2!, {r0, r1}
 8011c26:	42b3      	cmp	r3, r6
 8011c28:	4615      	mov	r5, r2
 8011c2a:	d1f7      	bne.n	8011c1c <rcu_clock_freq_get+0x10>
 8011c2c:	466b      	mov	r3, sp
 8011c2e:	6938      	ldr	r0, [r7, #16]
 8011c30:	6871      	ldr	r1, [r6, #4]
 8011c32:	4a35      	ldr	r2, [pc, #212]	; (8011d08 <rcu_clock_freq_get+0xfc>)
 8011c34:	c303      	stmia	r3!, {r0, r1}
 8011c36:	c303      	stmia	r3!, {r0, r1}
 8011c38:	6853      	ldr	r3, [r2, #4]
 8011c3a:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8011c3e:	2b01      	cmp	r3, #1
 8011c40:	d052      	beq.n	8011ce8 <rcu_clock_freq_get+0xdc>
 8011c42:	2b02      	cmp	r3, #2
 8011c44:	d152      	bne.n	8011cec <rcu_clock_freq_get+0xe0>
 8011c46:	6853      	ldr	r3, [r2, #4]
 8011c48:	03dd      	lsls	r5, r3, #15
 8011c4a:	d523      	bpl.n	8011c94 <rcu_clock_freq_get+0x88>
 8011c4c:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8011c4e:	f413 3f80 	tst.w	r3, #65536	; 0x10000
 8011c52:	4b2e      	ldr	r3, [pc, #184]	; (8011d0c <rcu_clock_freq_get+0x100>)
 8011c54:	d00e      	beq.n	8011c74 <rcu_clock_freq_get+0x68>
 8011c56:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 8011c58:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
 8011c5a:	f3c1 1103 	ubfx	r1, r1, #4, #4
 8011c5e:	f3c0 2003 	ubfx	r0, r0, #8, #4
 8011c62:	3101      	adds	r1, #1
 8011c64:	280f      	cmp	r0, #15
 8011c66:	f100 0502 	add.w	r5, r0, #2
 8011c6a:	fbb3 f3f1 	udiv	r3, r3, r1
 8011c6e:	bf08      	it	eq
 8011c70:	2514      	moveq	r5, #20
 8011c72:	436b      	muls	r3, r5
 8011c74:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 8011c76:	f001 010f 	and.w	r1, r1, #15
 8011c7a:	3101      	adds	r1, #1
 8011c7c:	fbb3 f3f1 	udiv	r3, r3, r1
 8011c80:	6851      	ldr	r1, [r2, #4]
 8011c82:	6850      	ldr	r0, [r2, #4]
 8011c84:	f3c1 4183 	ubfx	r1, r1, #18, #4
 8011c88:	0080      	lsls	r0, r0, #2
 8011c8a:	d505      	bpl.n	8011c98 <rcu_clock_freq_get+0x8c>
 8011c8c:	f041 0110 	orr.w	r1, r1, #16
 8011c90:	3101      	adds	r1, #1
 8011c92:	e027      	b.n	8011ce4 <rcu_clock_freq_get+0xd8>
 8011c94:	4b1e      	ldr	r3, [pc, #120]	; (8011d10 <rcu_clock_freq_get+0x104>)
 8011c96:	e7f3      	b.n	8011c80 <rcu_clock_freq_get+0x74>
 8011c98:	290d      	cmp	r1, #13
 8011c9a:	d120      	bne.n	8011cde <rcu_clock_freq_get+0xd2>
 8011c9c:	2006      	movs	r0, #6
 8011c9e:	0859      	lsrs	r1, r3, #1
 8011ca0:	fb00 1303 	mla	r3, r0, r3, r1
 8011ca4:	6851      	ldr	r1, [r2, #4]
 8011ca6:	f3c1 1103 	ubfx	r1, r1, #4, #4
 8011caa:	3120      	adds	r1, #32
 8011cac:	4469      	add	r1, sp
 8011cae:	f811 1c10 	ldrb.w	r1, [r1, #-16]
 8011cb2:	fa23 f001 	lsr.w	r0, r3, r1
 8011cb6:	6851      	ldr	r1, [r2, #4]
 8011cb8:	6852      	ldr	r2, [r2, #4]
 8011cba:	f3c1 2102 	ubfx	r1, r1, #8, #3
 8011cbe:	f3c2 22c2 	ubfx	r2, r2, #11, #3
 8011cc2:	3120      	adds	r1, #32
 8011cc4:	3220      	adds	r2, #32
 8011cc6:	4469      	add	r1, sp
 8011cc8:	446a      	add	r2, sp
 8011cca:	f811 1c20 	ldrb.w	r1, [r1, #-32]
 8011cce:	f812 2c18 	ldrb.w	r2, [r2, #-24]
 8011cd2:	2c03      	cmp	r4, #3
 8011cd4:	d813      	bhi.n	8011cfe <rcu_clock_freq_get+0xf2>
 8011cd6:	e8df f004 	tbb	[pc, r4]
 8011cda:	100e0c0b 	andne	r0, lr, fp, lsl #24
 8011cde:	290f      	cmp	r1, #15
 8011ce0:	d0d6      	beq.n	8011c90 <rcu_clock_freq_get+0x84>
 8011ce2:	3102      	adds	r1, #2
 8011ce4:	434b      	muls	r3, r1
 8011ce6:	e7dd      	b.n	8011ca4 <rcu_clock_freq_get+0x98>
 8011ce8:	4b08      	ldr	r3, [pc, #32]	; (8011d0c <rcu_clock_freq_get+0x100>)
 8011cea:	e7db      	b.n	8011ca4 <rcu_clock_freq_get+0x98>
 8011cec:	4b09      	ldr	r3, [pc, #36]	; (8011d14 <rcu_clock_freq_get+0x108>)
 8011cee:	e7d9      	b.n	8011ca4 <rcu_clock_freq_get+0x98>
 8011cf0:	4618      	mov	r0, r3
 8011cf2:	b009      	add	sp, #36	; 0x24
 8011cf4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011cf6:	40c8      	lsrs	r0, r1
 8011cf8:	e7fb      	b.n	8011cf2 <rcu_clock_freq_get+0xe6>
 8011cfa:	40d0      	lsrs	r0, r2
 8011cfc:	e7f9      	b.n	8011cf2 <rcu_clock_freq_get+0xe6>
 8011cfe:	2000      	movs	r0, #0
 8011d00:	e7f7      	b.n	8011cf2 <rcu_clock_freq_get+0xe6>
 8011d02:	bf00      	nop
 8011d04:	0801348c 	stmdaeq	r1, {r2, r3, r7, sl, ip, sp}
 8011d08:	40021000 	andmi	r1, r2, r0
 8011d0c:	017d7840 	cmneq	sp, r0, asr #16
 8011d10:	003d0900 	eorseq	r0, sp, r0, lsl #18
 8011d14:	007a1200 	rsbseq	r1, sl, r0, lsl #4

08011d18 <timer_deinit>:
 8011d18:	b508      	push	{r3, lr}
 8011d1a:	4b4e      	ldr	r3, [pc, #312]	; (8011e54 <timer_deinit+0x13c>)
 8011d1c:	4298      	cmp	r0, r3
 8011d1e:	f000 8092 	beq.w	8011e46 <timer_deinit+0x12e>
 8011d22:	d822      	bhi.n	8011d6a <timer_deinit+0x52>
 8011d24:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
 8011d28:	4298      	cmp	r0, r3
 8011d2a:	d062      	beq.n	8011df2 <timer_deinit+0xda>
 8011d2c:	d80b      	bhi.n	8011d46 <timer_deinit+0x2e>
 8011d2e:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8011d32:	4298      	cmp	r0, r3
 8011d34:	d04f      	beq.n	8011dd6 <timer_deinit+0xbe>
 8011d36:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8011d3a:	4298      	cmp	r0, r3
 8011d3c:	d052      	beq.n	8011de4 <timer_deinit+0xcc>
 8011d3e:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8011d42:	d041      	beq.n	8011dc8 <timer_deinit+0xb0>
 8011d44:	bd08      	pop	{r3, pc}
 8011d46:	4b44      	ldr	r3, [pc, #272]	; (8011e58 <timer_deinit+0x140>)
 8011d48:	4298      	cmp	r0, r3
 8011d4a:	d059      	beq.n	8011e00 <timer_deinit+0xe8>
 8011d4c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8011d50:	4298      	cmp	r0, r3
 8011d52:	d071      	beq.n	8011e38 <timer_deinit+0x120>
 8011d54:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8011d58:	4298      	cmp	r0, r3
 8011d5a:	d1f3      	bne.n	8011d44 <timer_deinit+0x2c>
 8011d5c:	f240 4004 	movw	r0, #1028	; 0x404
 8011d60:	f7ff fe83 	bl	8011a6a <rcu_periph_reset_enable>
 8011d64:	f240 4004 	movw	r0, #1028	; 0x404
 8011d68:	e02a      	b.n	8011dc0 <timer_deinit+0xa8>
 8011d6a:	4b3c      	ldr	r3, [pc, #240]	; (8011e5c <timer_deinit+0x144>)
 8011d6c:	4298      	cmp	r0, r3
 8011d6e:	d055      	beq.n	8011e1c <timer_deinit+0x104>
 8011d70:	d812      	bhi.n	8011d98 <timer_deinit+0x80>
 8011d72:	f5a3 5300 	sub.w	r3, r3, #8192	; 0x2000
 8011d76:	4298      	cmp	r0, r3
 8011d78:	d01c      	beq.n	8011db4 <timer_deinit+0x9c>
 8011d7a:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8011d7e:	4298      	cmp	r0, r3
 8011d80:	d045      	beq.n	8011e0e <timer_deinit+0xf6>
 8011d82:	f5a3 338a 	sub.w	r3, r3, #70656	; 0x11400
 8011d86:	4298      	cmp	r0, r3
 8011d88:	d1dc      	bne.n	8011d44 <timer_deinit+0x2c>
 8011d8a:	f44f 6081 	mov.w	r0, #1032	; 0x408
 8011d8e:	f7ff fe6c 	bl	8011a6a <rcu_periph_reset_enable>
 8011d92:	f44f 6081 	mov.w	r0, #1032	; 0x408
 8011d96:	e013      	b.n	8011dc0 <timer_deinit+0xa8>
 8011d98:	4b31      	ldr	r3, [pc, #196]	; (8011e60 <timer_deinit+0x148>)
 8011d9a:	4298      	cmp	r0, r3
 8011d9c:	d045      	beq.n	8011e2a <timer_deinit+0x112>
 8011d9e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8011da2:	4298      	cmp	r0, r3
 8011da4:	d1ce      	bne.n	8011d44 <timer_deinit+0x2c>
 8011da6:	f240 3015 	movw	r0, #789	; 0x315
 8011daa:	f7ff fe5e 	bl	8011a6a <rcu_periph_reset_enable>
 8011dae:	f240 3015 	movw	r0, #789	; 0x315
 8011db2:	e005      	b.n	8011dc0 <timer_deinit+0xa8>
 8011db4:	f240 300b 	movw	r0, #779	; 0x30b
 8011db8:	f7ff fe57 	bl	8011a6a <rcu_periph_reset_enable>
 8011dbc:	f240 300b 	movw	r0, #779	; 0x30b
 8011dc0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8011dc4:	f7ff be53 	b.w	8011a6e <rcu_periph_reset_disable>
 8011dc8:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8011dcc:	f7ff fe4d 	bl	8011a6a <rcu_periph_reset_enable>
 8011dd0:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8011dd4:	e7f4      	b.n	8011dc0 <timer_deinit+0xa8>
 8011dd6:	f240 4001 	movw	r0, #1025	; 0x401
 8011dda:	f7ff fe46 	bl	8011a6a <rcu_periph_reset_enable>
 8011dde:	f240 4001 	movw	r0, #1025	; 0x401
 8011de2:	e7ed      	b.n	8011dc0 <timer_deinit+0xa8>
 8011de4:	f240 4002 	movw	r0, #1026	; 0x402
 8011de8:	f7ff fe3f 	bl	8011a6a <rcu_periph_reset_enable>
 8011dec:	f240 4002 	movw	r0, #1026	; 0x402
 8011df0:	e7e6      	b.n	8011dc0 <timer_deinit+0xa8>
 8011df2:	f240 4003 	movw	r0, #1027	; 0x403
 8011df6:	f7ff fe38 	bl	8011a6a <rcu_periph_reset_enable>
 8011dfa:	f240 4003 	movw	r0, #1027	; 0x403
 8011dfe:	e7df      	b.n	8011dc0 <timer_deinit+0xa8>
 8011e00:	f240 4005 	movw	r0, #1029	; 0x405
 8011e04:	f7ff fe31 	bl	8011a6a <rcu_periph_reset_enable>
 8011e08:	f240 4005 	movw	r0, #1029	; 0x405
 8011e0c:	e7d8      	b.n	8011dc0 <timer_deinit+0xa8>
 8011e0e:	f240 300d 	movw	r0, #781	; 0x30d
 8011e12:	f7ff fe2a 	bl	8011a6a <rcu_periph_reset_enable>
 8011e16:	f240 300d 	movw	r0, #781	; 0x30d
 8011e1a:	e7d1      	b.n	8011dc0 <timer_deinit+0xa8>
 8011e1c:	f240 3013 	movw	r0, #787	; 0x313
 8011e20:	f7ff fe23 	bl	8011a6a <rcu_periph_reset_enable>
 8011e24:	f240 3013 	movw	r0, #787	; 0x313
 8011e28:	e7ca      	b.n	8011dc0 <timer_deinit+0xa8>
 8011e2a:	f44f 7045 	mov.w	r0, #788	; 0x314
 8011e2e:	f7ff fe1c 	bl	8011a6a <rcu_periph_reset_enable>
 8011e32:	f44f 7045 	mov.w	r0, #788	; 0x314
 8011e36:	e7c3      	b.n	8011dc0 <timer_deinit+0xa8>
 8011e38:	f240 4006 	movw	r0, #1030	; 0x406
 8011e3c:	f7ff fe15 	bl	8011a6a <rcu_periph_reset_enable>
 8011e40:	f240 4006 	movw	r0, #1030	; 0x406
 8011e44:	e7bc      	b.n	8011dc0 <timer_deinit+0xa8>
 8011e46:	f240 4007 	movw	r0, #1031	; 0x407
 8011e4a:	f7ff fe0e 	bl	8011a6a <rcu_periph_reset_enable>
 8011e4e:	f240 4007 	movw	r0, #1031	; 0x407
 8011e52:	e7b5      	b.n	8011dc0 <timer_deinit+0xa8>
 8011e54:	40001c00 	andmi	r1, r0, r0, lsl #24
 8011e58:	40001400 	andmi	r1, r0, r0, lsl #8
 8011e5c:	40014c00 	andmi	r4, r1, r0, lsl #24
 8011e60:	40015000 	andmi	r5, r1, r0

08011e64 <timer_init>:
 8011e64:	880b      	ldrh	r3, [r1, #0]
 8011e66:	6283      	str	r3, [r0, #40]	; 0x28
 8011e68:	4b26      	ldr	r3, [pc, #152]	; (8011f04 <timer_init+0xa0>)
 8011e6a:	4298      	cmp	r0, r3
 8011e6c:	d018      	beq.n	8011ea0 <timer_init+0x3c>
 8011e6e:	f420 6240 	bic.w	r2, r0, #3072	; 0xc00
 8011e72:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 8011e76:	f420 6380 	bic.w	r3, r0, #1024	; 0x400
 8011e7a:	d011      	beq.n	8011ea0 <timer_init+0x3c>
 8011e7c:	4a22      	ldr	r2, [pc, #136]	; (8011f08 <timer_init+0xa4>)
 8011e7e:	4290      	cmp	r0, r2
 8011e80:	d00e      	beq.n	8011ea0 <timer_init+0x3c>
 8011e82:	f502 52c0 	add.w	r2, r2, #6144	; 0x1800
 8011e86:	4290      	cmp	r0, r2
 8011e88:	d00a      	beq.n	8011ea0 <timer_init+0x3c>
 8011e8a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8011e8e:	4293      	cmp	r3, r2
 8011e90:	d006      	beq.n	8011ea0 <timer_init+0x3c>
 8011e92:	f5a2 329c 	sub.w	r2, r2, #79872	; 0x13800
 8011e96:	4293      	cmp	r3, r2
 8011e98:	d002      	beq.n	8011ea0 <timer_init+0x3c>
 8011e9a:	4b1c      	ldr	r3, [pc, #112]	; (8011f0c <timer_init+0xa8>)
 8011e9c:	4298      	cmp	r0, r3
 8011e9e:	d10f      	bne.n	8011ec0 <timer_init+0x5c>
 8011ea0:	6803      	ldr	r3, [r0, #0]
 8011ea2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8011ea6:	6003      	str	r3, [r0, #0]
 8011ea8:	884b      	ldrh	r3, [r1, #2]
 8011eaa:	6802      	ldr	r2, [r0, #0]
 8011eac:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8011eb0:	4313      	orrs	r3, r2
 8011eb2:	6003      	str	r3, [r0, #0]
 8011eb4:	888b      	ldrh	r3, [r1, #4]
 8011eb6:	6802      	ldr	r2, [r0, #0]
 8011eb8:	f003 0310 	and.w	r3, r3, #16
 8011ebc:	4313      	orrs	r3, r2
 8011ebe:	6003      	str	r3, [r0, #0]
 8011ec0:	688b      	ldr	r3, [r1, #8]
 8011ec2:	62c3      	str	r3, [r0, #44]	; 0x2c
 8011ec4:	4b12      	ldr	r3, [pc, #72]	; (8011f10 <timer_init+0xac>)
 8011ec6:	4298      	cmp	r0, r3
 8011ec8:	d003      	beq.n	8011ed2 <timer_init+0x6e>
 8011eca:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8011ece:	4298      	cmp	r0, r3
 8011ed0:	d104      	bne.n	8011edc <timer_init+0x78>
 8011ed2:	6943      	ldr	r3, [r0, #20]
 8011ed4:	f043 0301 	orr.w	r3, r3, #1
 8011ed8:	6143      	str	r3, [r0, #20]
 8011eda:	4770      	bx	lr
 8011edc:	6803      	ldr	r3, [r0, #0]
 8011ede:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8011ee2:	6003      	str	r3, [r0, #0]
 8011ee4:	898b      	ldrh	r3, [r1, #12]
 8011ee6:	6802      	ldr	r2, [r0, #0]
 8011ee8:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8011eec:	4313      	orrs	r3, r2
 8011eee:	6003      	str	r3, [r0, #0]
 8011ef0:	4b04      	ldr	r3, [pc, #16]	; (8011f04 <timer_init+0xa0>)
 8011ef2:	4298      	cmp	r0, r3
 8011ef4:	d002      	beq.n	8011efc <timer_init+0x98>
 8011ef6:	4b04      	ldr	r3, [pc, #16]	; (8011f08 <timer_init+0xa4>)
 8011ef8:	4298      	cmp	r0, r3
 8011efa:	d1ea      	bne.n	8011ed2 <timer_init+0x6e>
 8011efc:	7b8b      	ldrb	r3, [r1, #14]
 8011efe:	6303      	str	r3, [r0, #48]	; 0x30
 8011f00:	e7e7      	b.n	8011ed2 <timer_init+0x6e>
 8011f02:	bf00      	nop
 8011f04:	40012c00 	andmi	r2, r1, r0, lsl #24
 8011f08:	40013400 	andmi	r3, r1, r0, lsl #8
 8011f0c:	40002000 	andmi	r2, r0, r0
 8011f10:	40001000 	andmi	r1, r0, r0

08011f14 <timer_enable>:
 8011f14:	6803      	ldr	r3, [r0, #0]
 8011f16:	f043 0301 	orr.w	r3, r3, #1
 8011f1a:	6003      	str	r3, [r0, #0]
 8011f1c:	4770      	bx	lr

08011f1e <timer_channel_output_mode_config>:
 8011f1e:	2903      	cmp	r1, #3
 8011f20:	d81a      	bhi.n	8011f58 <timer_channel_output_mode_config+0x3a>
 8011f22:	e8df f001 	tbb	[pc, r1]
 8011f26:	1a120a02 	bne	8494736 <__exidx_end+0x47f3c2>
 8011f2a:	6983      	ldr	r3, [r0, #24]
 8011f2c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8011f30:	6183      	str	r3, [r0, #24]
 8011f32:	6983      	ldr	r3, [r0, #24]
 8011f34:	431a      	orrs	r2, r3
 8011f36:	6182      	str	r2, [r0, #24]
 8011f38:	4770      	bx	lr
 8011f3a:	6983      	ldr	r3, [r0, #24]
 8011f3c:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8011f40:	6183      	str	r3, [r0, #24]
 8011f42:	6983      	ldr	r3, [r0, #24]
 8011f44:	ea43 2202 	orr.w	r2, r3, r2, lsl #8
 8011f48:	e7f5      	b.n	8011f36 <timer_channel_output_mode_config+0x18>
 8011f4a:	69c3      	ldr	r3, [r0, #28]
 8011f4c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8011f50:	61c3      	str	r3, [r0, #28]
 8011f52:	69c3      	ldr	r3, [r0, #28]
 8011f54:	431a      	orrs	r2, r3
 8011f56:	61c2      	str	r2, [r0, #28]
 8011f58:	4770      	bx	lr
 8011f5a:	69c3      	ldr	r3, [r0, #28]
 8011f5c:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8011f60:	61c3      	str	r3, [r0, #28]
 8011f62:	69c3      	ldr	r3, [r0, #28]
 8011f64:	ea43 2202 	orr.w	r2, r3, r2, lsl #8
 8011f68:	e7f5      	b.n	8011f56 <timer_channel_output_mode_config+0x38>

08011f6a <timer_channel_output_pulse_value_config>:
 8011f6a:	2903      	cmp	r1, #3
 8011f6c:	d80a      	bhi.n	8011f84 <timer_channel_output_pulse_value_config+0x1a>
 8011f6e:	e8df f001 	tbb	[pc, r1]
 8011f72:	08060402 	stmdaeq	r6, {r1, sl}
 8011f76:	6342      	str	r2, [r0, #52]	; 0x34
 8011f78:	4770      	bx	lr
 8011f7a:	6382      	str	r2, [r0, #56]	; 0x38
 8011f7c:	4770      	bx	lr
 8011f7e:	63c2      	str	r2, [r0, #60]	; 0x3c
 8011f80:	4770      	bx	lr
 8011f82:	6402      	str	r2, [r0, #64]	; 0x40
 8011f84:	4770      	bx	lr

08011f86 <timer_input_trigger_source_select>:
 8011f86:	6882      	ldr	r2, [r0, #8]
 8011f88:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8011f8c:	6082      	str	r2, [r0, #8]
 8011f8e:	6883      	ldr	r3, [r0, #8]
 8011f90:	430b      	orrs	r3, r1
 8011f92:	6083      	str	r3, [r0, #8]
 8011f94:	4770      	bx	lr

08011f96 <timer_master_output_trigger_source_select>:
 8011f96:	6842      	ldr	r2, [r0, #4]
 8011f98:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8011f9c:	6042      	str	r2, [r0, #4]
 8011f9e:	6843      	ldr	r3, [r0, #4]
 8011fa0:	430b      	orrs	r3, r1
 8011fa2:	6043      	str	r3, [r0, #4]
 8011fa4:	4770      	bx	lr

08011fa6 <timer_slave_mode_select>:
 8011fa6:	6882      	ldr	r2, [r0, #8]
 8011fa8:	f022 0207 	bic.w	r2, r2, #7
 8011fac:	6082      	str	r2, [r0, #8]
 8011fae:	6883      	ldr	r3, [r0, #8]
 8011fb0:	430b      	orrs	r3, r1
 8011fb2:	6083      	str	r3, [r0, #8]
 8011fb4:	4770      	bx	lr

08011fb6 <timer_master_slave_mode_config>:
 8011fb6:	2980      	cmp	r1, #128	; 0x80
 8011fb8:	d104      	bne.n	8011fc4 <timer_master_slave_mode_config+0xe>
 8011fba:	6883      	ldr	r3, [r0, #8]
 8011fbc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8011fc0:	6083      	str	r3, [r0, #8]
 8011fc2:	4770      	bx	lr
 8011fc4:	2900      	cmp	r1, #0
 8011fc6:	d1fc      	bne.n	8011fc2 <timer_master_slave_mode_config+0xc>
 8011fc8:	6883      	ldr	r3, [r0, #8]
 8011fca:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8011fce:	e7f7      	b.n	8011fc0 <timer_master_slave_mode_config+0xa>

08011fd0 <timer_interrupt_enable>:
 8011fd0:	68c3      	ldr	r3, [r0, #12]
 8011fd2:	430b      	orrs	r3, r1
 8011fd4:	60c3      	str	r3, [r0, #12]
 8011fd6:	4770      	bx	lr

08011fd8 <timer_interrupt_flag_clear>:
 8011fd8:	43c9      	mvns	r1, r1
 8011fda:	6101      	str	r1, [r0, #16]
 8011fdc:	4770      	bx	lr

08011fde <timer_flag_clear>:
 8011fde:	43c9      	mvns	r1, r1
 8011fe0:	6101      	str	r1, [r0, #16]
 8011fe2:	4770      	bx	lr

08011fe4 <usart_deinit>:
 8011fe4:	b508      	push	{r3, lr}
 8011fe6:	4b2d      	ldr	r3, [pc, #180]	; (801209c <usart_deinit+0xb8>)
 8011fe8:	4298      	cmp	r0, r3
 8011fea:	d050      	beq.n	801208e <usart_deinit+0xaa>
 8011fec:	d817      	bhi.n	801201e <usart_deinit+0x3a>
 8011fee:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 8011ff2:	4298      	cmp	r0, r3
 8011ff4:	d044      	beq.n	8012080 <usart_deinit+0x9c>
 8011ff6:	d808      	bhi.n	801200a <usart_deinit+0x26>
 8011ff8:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8011ffc:	4298      	cmp	r0, r3
 8011ffe:	d02a      	beq.n	8012056 <usart_deinit+0x72>
 8012000:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8012004:	4298      	cmp	r0, r3
 8012006:	d02d      	beq.n	8012064 <usart_deinit+0x80>
 8012008:	bd08      	pop	{r3, pc}
 801200a:	4b25      	ldr	r3, [pc, #148]	; (80120a0 <usart_deinit+0xbc>)
 801200c:	4298      	cmp	r0, r3
 801200e:	d1fb      	bne.n	8012008 <usart_deinit+0x24>
 8012010:	f240 4014 	movw	r0, #1044	; 0x414
 8012014:	f7ff fd29 	bl	8011a6a <rcu_periph_reset_enable>
 8012018:	f240 4014 	movw	r0, #1044	; 0x414
 801201c:	e017      	b.n	801204e <usart_deinit+0x6a>
 801201e:	4b21      	ldr	r3, [pc, #132]	; (80120a4 <usart_deinit+0xc0>)
 8012020:	4298      	cmp	r0, r3
 8012022:	d00e      	beq.n	8012042 <usart_deinit+0x5e>
 8012024:	f503 5360 	add.w	r3, r3, #14336	; 0x3800
 8012028:	4298      	cmp	r0, r3
 801202a:	d022      	beq.n	8012072 <usart_deinit+0x8e>
 801202c:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
 8012030:	4298      	cmp	r0, r3
 8012032:	d1e9      	bne.n	8012008 <usart_deinit+0x24>
 8012034:	f641 601f 	movw	r0, #7711	; 0x1e1f
 8012038:	f7ff fd17 	bl	8011a6a <rcu_periph_reset_enable>
 801203c:	f641 601f 	movw	r0, #7711	; 0x1e1f
 8012040:	e005      	b.n	801204e <usart_deinit+0x6a>
 8012042:	f240 300e 	movw	r0, #782	; 0x30e
 8012046:	f7ff fd10 	bl	8011a6a <rcu_periph_reset_enable>
 801204a:	f240 300e 	movw	r0, #782	; 0x30e
 801204e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8012052:	f7ff bd0c 	b.w	8011a6e <rcu_periph_reset_disable>
 8012056:	f240 4011 	movw	r0, #1041	; 0x411
 801205a:	f7ff fd06 	bl	8011a6a <rcu_periph_reset_enable>
 801205e:	f240 4011 	movw	r0, #1041	; 0x411
 8012062:	e7f4      	b.n	801204e <usart_deinit+0x6a>
 8012064:	f240 4012 	movw	r0, #1042	; 0x412
 8012068:	f7ff fcff 	bl	8011a6a <rcu_periph_reset_enable>
 801206c:	f240 4012 	movw	r0, #1042	; 0x412
 8012070:	e7ed      	b.n	801204e <usart_deinit+0x6a>
 8012072:	f641 5018 	movw	r0, #7448	; 0x1d18
 8012076:	f7ff fcf8 	bl	8011a6a <rcu_periph_reset_enable>
 801207a:	f641 5018 	movw	r0, #7448	; 0x1d18
 801207e:	e7e6      	b.n	801204e <usart_deinit+0x6a>
 8012080:	f240 4013 	movw	r0, #1043	; 0x413
 8012084:	f7ff fcf1 	bl	8011a6a <rcu_periph_reset_enable>
 8012088:	f240 4013 	movw	r0, #1043	; 0x413
 801208c:	e7df      	b.n	801204e <usart_deinit+0x6a>
 801208e:	f641 601e 	movw	r0, #7710	; 0x1e1e
 8012092:	f7ff fcea 	bl	8011a6a <rcu_periph_reset_enable>
 8012096:	f641 601e 	movw	r0, #7710	; 0x1e1e
 801209a:	e7d8      	b.n	801204e <usart_deinit+0x6a>
 801209c:	40007800 	andmi	r7, r0, r0, lsl #16
 80120a0:	40005000 	andmi	r5, r0, r0
 80120a4:	40013800 	andmi	r3, r1, r0, lsl #16

080120a8 <usart_baudrate_set>:
 80120a8:	b538      	push	{r3, r4, r5, lr}
 80120aa:	4b16      	ldr	r3, [pc, #88]	; (8012104 <usart_baudrate_set+0x5c>)
 80120ac:	4604      	mov	r4, r0
 80120ae:	4298      	cmp	r0, r3
 80120b0:	460d      	mov	r5, r1
 80120b2:	d025      	beq.n	8012100 <usart_baudrate_set+0x58>
 80120b4:	d816      	bhi.n	80120e4 <usart_baudrate_set+0x3c>
 80120b6:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 80120ba:	4298      	cmp	r0, r3
 80120bc:	d020      	beq.n	8012100 <usart_baudrate_set+0x58>
 80120be:	d80f      	bhi.n	80120e0 <usart_baudrate_set+0x38>
 80120c0:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 80120c4:	4298      	cmp	r0, r3
 80120c6:	d01b      	beq.n	8012100 <usart_baudrate_set+0x58>
 80120c8:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80120cc:	429c      	cmp	r4, r3
 80120ce:	d017      	beq.n	8012100 <usart_baudrate_set+0x58>
 80120d0:	2000      	movs	r0, #0
 80120d2:	eb00 0355 	add.w	r3, r0, r5, lsr #1
 80120d6:	fbb3 f1f5 	udiv	r1, r3, r5
 80120da:	b289      	uxth	r1, r1
 80120dc:	60a1      	str	r1, [r4, #8]
 80120de:	bd38      	pop	{r3, r4, r5, pc}
 80120e0:	4b09      	ldr	r3, [pc, #36]	; (8012108 <usart_baudrate_set+0x60>)
 80120e2:	e7f3      	b.n	80120cc <usart_baudrate_set+0x24>
 80120e4:	4b09      	ldr	r3, [pc, #36]	; (801210c <usart_baudrate_set+0x64>)
 80120e6:	4298      	cmp	r0, r3
 80120e8:	d006      	beq.n	80120f8 <usart_baudrate_set+0x50>
 80120ea:	f503 5360 	add.w	r3, r3, #14336	; 0x3800
 80120ee:	4298      	cmp	r0, r3
 80120f0:	d002      	beq.n	80120f8 <usart_baudrate_set+0x50>
 80120f2:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
 80120f6:	e7e9      	b.n	80120cc <usart_baudrate_set+0x24>
 80120f8:	2003      	movs	r0, #3
 80120fa:	f7ff fd87 	bl	8011c0c <rcu_clock_freq_get>
 80120fe:	e7e8      	b.n	80120d2 <usart_baudrate_set+0x2a>
 8012100:	2002      	movs	r0, #2
 8012102:	e7fa      	b.n	80120fa <usart_baudrate_set+0x52>
 8012104:	40007800 	andmi	r7, r0, r0, lsl #16
 8012108:	40005000 	andmi	r5, r0, r0
 801210c:	40013800 	andmi	r3, r1, r0, lsl #16

08012110 <usart_parity_config>:
 8012110:	68c2      	ldr	r2, [r0, #12]
 8012112:	f422 62c0 	bic.w	r2, r2, #1536	; 0x600
 8012116:	60c2      	str	r2, [r0, #12]
 8012118:	68c3      	ldr	r3, [r0, #12]
 801211a:	430b      	orrs	r3, r1
 801211c:	60c3      	str	r3, [r0, #12]
 801211e:	4770      	bx	lr

08012120 <usart_word_length_set>:
 8012120:	68c2      	ldr	r2, [r0, #12]
 8012122:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8012126:	60c2      	str	r2, [r0, #12]
 8012128:	68c3      	ldr	r3, [r0, #12]
 801212a:	430b      	orrs	r3, r1
 801212c:	60c3      	str	r3, [r0, #12]
 801212e:	4770      	bx	lr

08012130 <usart_stop_bit_set>:
 8012130:	6902      	ldr	r2, [r0, #16]
 8012132:	f422 5240 	bic.w	r2, r2, #12288	; 0x3000
 8012136:	6102      	str	r2, [r0, #16]
 8012138:	6903      	ldr	r3, [r0, #16]
 801213a:	430b      	orrs	r3, r1
 801213c:	6103      	str	r3, [r0, #16]
 801213e:	4770      	bx	lr

08012140 <usart_transmit_config>:
 8012140:	68c3      	ldr	r3, [r0, #12]
 8012142:	f023 0308 	bic.w	r3, r3, #8
 8012146:	430b      	orrs	r3, r1
 8012148:	60c3      	str	r3, [r0, #12]
 801214a:	4770      	bx	lr

0801214c <usart_receive_config>:
 801214c:	68c3      	ldr	r3, [r0, #12]
 801214e:	f023 0304 	bic.w	r3, r3, #4
 8012152:	430b      	orrs	r3, r1
 8012154:	60c3      	str	r3, [r0, #12]
 8012156:	4770      	bx	lr

08012158 <usart_hardware_flow_rts_config>:
 8012158:	6943      	ldr	r3, [r0, #20]
 801215a:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 801215e:	430b      	orrs	r3, r1
 8012160:	6143      	str	r3, [r0, #20]
 8012162:	4770      	bx	lr

08012164 <usart_hardware_flow_cts_config>:
 8012164:	6943      	ldr	r3, [r0, #20]
 8012166:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 801216a:	430b      	orrs	r3, r1
 801216c:	6143      	str	r3, [r0, #20]
 801216e:	4770      	bx	lr

08012170 <usart_dma_transmit_config>:
 8012170:	6943      	ldr	r3, [r0, #20]
 8012172:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8012176:	430b      	orrs	r3, r1
 8012178:	6143      	str	r3, [r0, #20]
 801217a:	4770      	bx	lr

0801217c <usart_flag_get>:
 801217c:	098b      	lsrs	r3, r1, #6
 801217e:	5818      	ldr	r0, [r3, r0]
 8012180:	f001 011f 	and.w	r1, r1, #31
 8012184:	40c8      	lsrs	r0, r1
 8012186:	f000 0001 	and.w	r0, r0, #1
 801218a:	4770      	bx	lr

0801218c <usart_interrupt_enable>:
 801218c:	2301      	movs	r3, #1
 801218e:	b510      	push	{r4, lr}
 8012190:	f3c1 1289 	ubfx	r2, r1, #6, #10
 8012194:	5814      	ldr	r4, [r2, r0]
 8012196:	f001 011f 	and.w	r1, r1, #31
 801219a:	fa03 f101 	lsl.w	r1, r3, r1
 801219e:	4321      	orrs	r1, r4
 80121a0:	5011      	str	r1, [r2, r0]
 80121a2:	bd10      	pop	{r4, pc}

080121a4 <usart_interrupt_disable>:
 80121a4:	2201      	movs	r2, #1
 80121a6:	b510      	push	{r4, lr}
 80121a8:	f3c1 1489 	ubfx	r4, r1, #6, #10
 80121ac:	5823      	ldr	r3, [r4, r0]
 80121ae:	f001 011f 	and.w	r1, r1, #31
 80121b2:	fa02 f101 	lsl.w	r1, r2, r1
 80121b6:	ea23 0101 	bic.w	r1, r3, r1
 80121ba:	5021      	str	r1, [r4, r0]
 80121bc:	bd10      	pop	{r4, pc}

080121be <usart_interrupt_flag_clear>:
 80121be:	2201      	movs	r2, #1
 80121c0:	b510      	push	{r4, lr}
 80121c2:	0d8c      	lsrs	r4, r1, #22
 80121c4:	5823      	ldr	r3, [r4, r0]
 80121c6:	f3c1 4104 	ubfx	r1, r1, #16, #5
 80121ca:	fa02 f101 	lsl.w	r1, r2, r1
 80121ce:	ea23 0101 	bic.w	r1, r3, r1
 80121d2:	5021      	str	r1, [r4, r0]
 80121d4:	bd10      	pop	{r4, pc}
	...

080121d8 <emac_start>:
 80121d8:	b510      	push	{r4, lr}
 80121da:	4604      	mov	r4, r0
 80121dc:	f240 6002 	movw	r0, #1538	; 0x602
 80121e0:	f7ff fc26 	bl	8011a30 <rcu_periph_clock_enable>
 80121e4:	f240 6003 	movw	r0, #1539	; 0x603
 80121e8:	f7ff fc22 	bl	8011a30 <rcu_periph_clock_enable>
 80121ec:	f240 6004 	movw	r0, #1540	; 0x604
 80121f0:	f7ff fc1e 	bl	8011a30 <rcu_periph_clock_enable>
 80121f4:	f44f 7380 	mov.w	r3, #256	; 0x100
 80121f8:	2203      	movs	r2, #3
 80121fa:	2118      	movs	r1, #24
 80121fc:	4846      	ldr	r0, [pc, #280]	; (8012318 <emac_start+0x140>)
 80121fe:	f7ff fb7f 	bl	8011900 <gpio_init>
 8012202:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 8012206:	f7ff fc13 	bl	8011a30 <rcu_periph_clock_enable>
 801220a:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 801220e:	f7ff fc53 	bl	8011ab8 <rcu_pll2_config>
 8012212:	201c      	movs	r0, #28
 8012214:	f7ff fcf8 	bl	8011c08 <rcu_osci_on>
 8012218:	201c      	movs	r0, #28
 801221a:	f7ff fc85 	bl	8011b28 <rcu_osci_stab_wait>
 801221e:	2100      	movs	r1, #0
 8012220:	f04f 6030 	mov.w	r0, #184549376	; 0xb000000
 8012224:	f7ff fc36 	bl	8011a94 <rcu_ckout0_config>
 8012228:	f44f 0000 	mov.w	r0, #8388608	; 0x800000
 801222c:	f7ff fbec 	bl	8011a08 <gpio_ethernet_phy_select>
 8012230:	2302      	movs	r3, #2
 8012232:	2203      	movs	r2, #3
 8012234:	2104      	movs	r1, #4
 8012236:	4838      	ldr	r0, [pc, #224]	; (8012318 <emac_start+0x140>)
 8012238:	f7ff fb62 	bl	8011900 <gpio_init>
 801223c:	2304      	movs	r3, #4
 801223e:	2203      	movs	r2, #3
 8012240:	2118      	movs	r1, #24
 8012242:	4835      	ldr	r0, [pc, #212]	; (8012318 <emac_start+0x140>)
 8012244:	f7ff fb5c 	bl	8011900 <gpio_init>
 8012248:	2380      	movs	r3, #128	; 0x80
 801224a:	2203      	movs	r2, #3
 801224c:	2104      	movs	r1, #4
 801224e:	4832      	ldr	r0, [pc, #200]	; (8012318 <emac_start+0x140>)
 8012250:	f7ff fb56 	bl	8011900 <gpio_init>
 8012254:	2302      	movs	r3, #2
 8012256:	2203      	movs	r2, #3
 8012258:	2118      	movs	r1, #24
 801225a:	4830      	ldr	r0, [pc, #192]	; (801231c <emac_start+0x144>)
 801225c:	f7ff fb50 	bl	8011900 <gpio_init>
 8012260:	2310      	movs	r3, #16
 8012262:	2203      	movs	r2, #3
 8012264:	2104      	movs	r1, #4
 8012266:	482d      	ldr	r0, [pc, #180]	; (801231c <emac_start+0x144>)
 8012268:	f7ff fb4a 	bl	8011900 <gpio_init>
 801226c:	2320      	movs	r3, #32
 801226e:	2203      	movs	r2, #3
 8012270:	2104      	movs	r1, #4
 8012272:	482a      	ldr	r0, [pc, #168]	; (801231c <emac_start+0x144>)
 8012274:	f7ff fb44 	bl	8011900 <gpio_init>
 8012278:	f44f 6300 	mov.w	r3, #2048	; 0x800
 801227c:	2203      	movs	r2, #3
 801227e:	2118      	movs	r1, #24
 8012280:	4827      	ldr	r0, [pc, #156]	; (8012320 <emac_start+0x148>)
 8012282:	f7ff fb3d 	bl	8011900 <gpio_init>
 8012286:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 801228a:	2203      	movs	r2, #3
 801228c:	2118      	movs	r1, #24
 801228e:	4824      	ldr	r0, [pc, #144]	; (8012320 <emac_start+0x148>)
 8012290:	f7ff fb36 	bl	8011900 <gpio_init>
 8012294:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8012298:	2203      	movs	r2, #3
 801229a:	2118      	movs	r1, #24
 801229c:	4820      	ldr	r0, [pc, #128]	; (8012320 <emac_start+0x148>)
 801229e:	f7ff fb2f 	bl	8011900 <gpio_init>
 80122a2:	f240 500e 	movw	r0, #1294	; 0x50e
 80122a6:	f7ff fbc3 	bl	8011a30 <rcu_periph_clock_enable>
 80122aa:	f240 500f 	movw	r0, #1295	; 0x50f
 80122ae:	f7ff fbbf 	bl	8011a30 <rcu_periph_clock_enable>
 80122b2:	f44f 60a2 	mov.w	r0, #1296	; 0x510
 80122b6:	f7ff fbbb 	bl	8011a30 <rcu_periph_clock_enable>
 80122ba:	f001 f831 	bl	8013320 <enet_deinit>
 80122be:	f000 fc89 	bl	8012bd4 <enet_software_reset>
 80122c2:	b900      	cbnz	r0, 80122c6 <emac_start+0xee>
 80122c4:	e7fe      	b.n	80122c4 <emac_start+0xec>
 80122c6:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 80122ca:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80122ce:	2001      	movs	r0, #1
 80122d0:	f000 fe04 	bl	8012edc <enet_init>
 80122d4:	4b13      	ldr	r3, [pc, #76]	; (8012324 <emac_start+0x14c>)
 80122d6:	6018      	str	r0, [r3, #0]
 80122d8:	681b      	ldr	r3, [r3, #0]
 80122da:	b903      	cbnz	r3, 80122de <emac_start+0x106>
 80122dc:	e7fe      	b.n	80122dc <emac_start+0x104>
 80122de:	4620      	mov	r0, r4
 80122e0:	f000 fb70 	bl	80129c4 <mac_address_get>
 80122e4:	4621      	mov	r1, r4
 80122e6:	2000      	movs	r0, #0
 80122e8:	f000 fd58 	bl	8012d9c <enet_mac_address_set>
 80122ec:	f44f 00e0 	mov.w	r0, #7340032	; 0x700000
 80122f0:	f000 fc84 	bl	8012bfc <enet_descriptors_chain_init>
 80122f4:	f44f 2060 	mov.w	r0, #917504	; 0xe0000
 80122f8:	f000 fc80 	bl	8012bfc <enet_descriptors_chain_init>
 80122fc:	f44f 0140 	mov.w	r1, #12582912	; 0xc00000
 8012300:	4809      	ldr	r0, [pc, #36]	; (8012328 <emac_start+0x150>)
 8012302:	f000 fd45 	bl	8012d90 <enet_transmit_checksum_config>
 8012306:	f44f 0140 	mov.w	r1, #12582912	; 0xc00000
 801230a:	4808      	ldr	r0, [pc, #32]	; (801232c <emac_start+0x154>)
 801230c:	f000 fd40 	bl	8012d90 <enet_transmit_checksum_config>
 8012310:	f000 ff7e 	bl	8013210 <enet_enable>
 8012314:	2001      	movs	r0, #1
 8012316:	bd10      	pop	{r4, pc}
 8012318:	40010800 	andmi	r0, r1, r0, lsl #16
 801231c:	40011000 	andmi	r1, r1, r0
 8012320:	40010c00 	andmi	r0, r1, r0, lsl #24
 8012324:	2000d270 	andcs	sp, r0, r0, ror r2
 8012328:	20011ad4 	ldrdcs	r1, [r1], -r4
 801232c:	20011ae4 	andcs	r1, r1, r4, ror #21

08012330 <emac_eth_recv>:
 8012330:	b538      	push	{r3, r4, r5, lr}
 8012332:	4605      	mov	r5, r0
 8012334:	f000 ffc4 	bl	80132c0 <enet_rxframe_size_get>
 8012338:	4604      	mov	r4, r0
 801233a:	b138      	cbz	r0, 801234c <emac_eth_recv+0x1c>
 801233c:	4b05      	ldr	r3, [pc, #20]	; (8012354 <emac_eth_recv+0x24>)
 801233e:	2105      	movs	r1, #5
 8012340:	6818      	ldr	r0, [r3, #0]
 8012342:	f000 ff6c 	bl	801321e <enet_desc_information_get>
 8012346:	6028      	str	r0, [r5, #0]
 8012348:	4620      	mov	r0, r4
 801234a:	bd38      	pop	{r3, r4, r5, pc}
 801234c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8012350:	e7fb      	b.n	801234a <emac_eth_recv+0x1a>
 8012352:	bf00      	nop
 8012354:	2000d280 	andcs	sp, r0, r0, lsl #5

08012358 <emac_free_pkt>:
 8012358:	2100      	movs	r1, #0
 801235a:	4608      	mov	r0, r1
 801235c:	f000 bc96 	b.w	8012c8c <enet_frame_receive>

08012360 <emac_eth_send>:
 8012360:	f000 bcd4 	b.w	8012d0c <enet_frame_transmit>

08012364 <gd32_adc_init()>:
 8012364:	b510      	push	{r4, lr}
 8012366:	f240 6009 	movw	r0, #1545	; 0x609
 801236a:	4c21      	ldr	r4, [pc, #132]	; (80123f0 <gd32_adc_init()+0x8c>)
 801236c:	f7ff fb60 	bl	8011a30 <rcu_periph_clock_enable>
 8012370:	2005      	movs	r0, #5
 8012372:	f7ff fbad 	bl	8011ad0 <rcu_adc_clock_config>
 8012376:	4620      	mov	r0, r4
 8012378:	2201      	movs	r2, #1
 801237a:	f44f 7180 	mov.w	r1, #256	; 0x100
 801237e:	f000 fb43 	bl	8012a08 <adc_special_function_config>
 8012382:	f44f 42e0 	mov.w	r2, #28672	; 0x7000
 8012386:	4620      	mov	r0, r4
 8012388:	2102      	movs	r1, #2
 801238a:	f000 fbdd 	bl	8012b48 <adc_external_trigger_source_config>
 801238e:	2100      	movs	r1, #0
 8012390:	4620      	mov	r0, r4
 8012392:	f000 fb61 	bl	8012a58 <adc_data_alignment_config>
 8012396:	2000      	movs	r0, #0
 8012398:	f000 fb26 	bl	80129e8 <adc_mode_config>
 801239c:	2202      	movs	r2, #2
 801239e:	4620      	mov	r0, r4
 80123a0:	4611      	mov	r1, r2
 80123a2:	f000 fb85 	bl	8012ab0 <adc_channel_length_config>
 80123a6:	4620      	mov	r0, r4
 80123a8:	2307      	movs	r3, #7
 80123aa:	2210      	movs	r2, #16
 80123ac:	2100      	movs	r1, #0
 80123ae:	f000 fb9c 	bl	8012aea <adc_inserted_channel_config>
 80123b2:	2307      	movs	r3, #7
 80123b4:	4620      	mov	r0, r4
 80123b6:	2211      	movs	r2, #17
 80123b8:	2101      	movs	r1, #1
 80123ba:	f000 fb96 	bl	8012aea <adc_inserted_channel_config>
 80123be:	2201      	movs	r2, #1
 80123c0:	2102      	movs	r1, #2
 80123c2:	4620      	mov	r0, r4
 80123c4:	f000 fbd1 	bl	8012b6a <adc_external_trigger_config>
 80123c8:	f000 fb68 	bl	8012a9c <adc_tempsensor_vrefint_enable>
 80123cc:	4620      	mov	r0, r4
 80123ce:	f000 fb4c 	bl	8012a6a <adc_enable>
 80123d2:	2100      	movs	r1, #0
 80123d4:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80123d8:	f000 fadc 	bl	8012994 <udelay(unsigned int, unsigned int)>
 80123dc:	4620      	mov	r0, r4
 80123de:	f000 fb4c 	bl	8012a7a <adc_calibration_enable>
 80123e2:	4620      	mov	r0, r4
 80123e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80123e8:	2102      	movs	r1, #2
 80123ea:	f000 bbd9 	b.w	8012ba0 <adc_software_trigger_enable>
 80123ee:	bf00      	nop
 80123f0:	40012400 	andmi	r2, r1, r0, lsl #8

080123f4 <_stop() [clone .isra.0]>:
 80123f4:	b508      	push	{r3, lr}
 80123f6:	4806      	ldr	r0, [pc, #24]	; (8012410 <_stop() [clone .isra.0]+0x1c>)
 80123f8:	f001 f822 	bl	8013440 <i2c_stop_on_bus>
 80123fc:	f640 73ff 	movw	r3, #4095	; 0xfff
 8012400:	4a04      	ldr	r2, [pc, #16]	; (8012414 <_stop() [clone .isra.0]+0x20>)
 8012402:	f8d2 1400 	ldr.w	r1, [r2, #1024]	; 0x400
 8012406:	0589      	lsls	r1, r1, #22
 8012408:	d501      	bpl.n	801240e <_stop() [clone .isra.0]+0x1a>
 801240a:	3b01      	subs	r3, #1
 801240c:	d1f9      	bne.n	8012402 <_stop() [clone .isra.0]+0xe>
 801240e:	bd08      	pop	{r3, pc}
 8012410:	40005400 	andmi	r5, r0, r0, lsl #8
 8012414:	40005000 	andmi	r5, r0, r0

08012418 <gd32_i2c_begin()>:
 8012418:	b510      	push	{r4, lr}
 801241a:	f240 7015 	movw	r0, #1813	; 0x715
 801241e:	f7ff fb07 	bl	8011a30 <rcu_periph_clock_enable>
 8012422:	4c15      	ldr	r4, [pc, #84]	; (8012478 <gd32_i2c_begin()+0x60>)
 8012424:	f240 6003 	movw	r0, #1539	; 0x603
 8012428:	f7ff fb02 	bl	8011a30 <rcu_periph_clock_enable>
 801242c:	f240 6003 	movw	r0, #1539	; 0x603
 8012430:	f7ff fafe 	bl	8011a30 <rcu_periph_clock_enable>
 8012434:	4620      	mov	r0, r4
 8012436:	f44f 7380 	mov.w	r3, #256	; 0x100
 801243a:	2203      	movs	r2, #3
 801243c:	211c      	movs	r1, #28
 801243e:	f7ff fa5f 	bl	8011900 <gpio_init>
 8012442:	f44f 7300 	mov.w	r3, #512	; 0x200
 8012446:	2203      	movs	r2, #3
 8012448:	4620      	mov	r0, r4
 801244a:	211c      	movs	r1, #28
 801244c:	f7ff fa58 	bl	8011900 <gpio_init>
 8012450:	f5a4 4438 	sub.w	r4, r4, #47104	; 0xb800
 8012454:	2101      	movs	r1, #1
 8012456:	2002      	movs	r0, #2
 8012458:	f7ff faa6 	bl	80119a8 <gpio_pin_remap_config>
 801245c:	4620      	mov	r0, r4
 801245e:	4907      	ldr	r1, [pc, #28]	; (801247c <gd32_i2c_begin()+0x64>)
 8012460:	2200      	movs	r2, #0
 8012462:	f000 ff6b 	bl	801333c <i2c_clock_config>
 8012466:	4620      	mov	r0, r4
 8012468:	f000 ffe0 	bl	801342c <i2c_enable>
 801246c:	4620      	mov	r0, r4
 801246e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012472:	2101      	movs	r1, #1
 8012474:	f000 bfc0 	b.w	80133f8 <i2c_ack_config>
 8012478:	40010c00 	andmi	r0, r1, r0, lsl #24
 801247c:	00061a80 	andeq	r1, r6, r0, lsl #21

08012480 <gd32_i2c_set_baudrate(unsigned int)>:
 8012480:	4601      	mov	r1, r0
 8012482:	2200      	movs	r2, #0
 8012484:	4801      	ldr	r0, [pc, #4]	; (801248c <gd32_i2c_set_baudrate(unsigned int)+0xc>)
 8012486:	f000 bf59 	b.w	801333c <i2c_clock_config>
 801248a:	bf00      	nop
 801248c:	40005400 	andmi	r5, r0, r0, lsl #8

08012490 <gd32_i2c_set_address(unsigned char)>:
 8012490:	4b01      	ldr	r3, [pc, #4]	; (8012498 <gd32_i2c_set_address(unsigned char)+0x8>)
 8012492:	0040      	lsls	r0, r0, #1
 8012494:	7018      	strb	r0, [r3, #0]
 8012496:	4770      	bx	lr
 8012498:	2000d274 	andcs	sp, r0, r4, ror r2

0801249c <gd32_i2c_write(char const*, unsigned int)>:
 801249c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801249e:	4604      	mov	r4, r0
 80124a0:	460f      	mov	r7, r1
 80124a2:	f640 75ff 	movw	r5, #4095	; 0xfff
 80124a6:	4e2e      	ldr	r6, [pc, #184]	; (8012560 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 80124a8:	f240 6101 	movw	r1, #1537	; 0x601
 80124ac:	4630      	mov	r0, r6
 80124ae:	f000 ffd1 	bl	8013454 <i2c_flag_get>
 80124b2:	b138      	cbz	r0, 80124c4 <gd32_i2c_write(char const*, unsigned int)+0x28>
 80124b4:	3d01      	subs	r5, #1
 80124b6:	d1f7      	bne.n	80124a8 <gd32_i2c_write(char const*, unsigned int)+0xc>
 80124b8:	f7ff ff9c 	bl	80123f4 <_stop() [clone .isra.0]>
 80124bc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80124c0:	4240      	negs	r0, r0
 80124c2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80124c4:	4826      	ldr	r0, [pc, #152]	; (8012560 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 80124c6:	f000 ffb6 	bl	8013436 <i2c_start_on_bus>
 80124ca:	f640 75ff 	movw	r5, #4095	; 0xfff
 80124ce:	4e24      	ldr	r6, [pc, #144]	; (8012560 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 80124d0:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 80124d4:	4630      	mov	r0, r6
 80124d6:	f000 ffbd 	bl	8013454 <i2c_flag_get>
 80124da:	bb68      	cbnz	r0, 8012538 <gd32_i2c_write(char const*, unsigned int)+0x9c>
 80124dc:	3d01      	subs	r5, #1
 80124de:	d1f7      	bne.n	80124d0 <gd32_i2c_write(char const*, unsigned int)+0x34>
 80124e0:	e7ea      	b.n	80124b8 <gd32_i2c_write(char const*, unsigned int)+0x1c>
 80124e2:	f240 5101 	movw	r1, #1281	; 0x501
 80124e6:	481e      	ldr	r0, [pc, #120]	; (8012560 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 80124e8:	f000 ffbc 	bl	8013464 <i2c_flag_clear>
 80124ec:	f640 75ff 	movw	r5, #4095	; 0xfff
 80124f0:	4e1b      	ldr	r6, [pc, #108]	; (8012560 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 80124f2:	f240 5107 	movw	r1, #1287	; 0x507
 80124f6:	4630      	mov	r0, r6
 80124f8:	f000 ffac 	bl	8013454 <i2c_flag_get>
 80124fc:	2801      	cmp	r0, #1
 80124fe:	d114      	bne.n	801252a <gd32_i2c_write(char const*, unsigned int)+0x8e>
 8012500:	4e17      	ldr	r6, [pc, #92]	; (8012560 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8012502:	4427      	add	r7, r4
 8012504:	42a7      	cmp	r7, r4
 8012506:	d013      	beq.n	8012530 <gd32_i2c_write(char const*, unsigned int)+0x94>
 8012508:	4630      	mov	r0, r6
 801250a:	f814 1b01 	ldrb.w	r1, [r4], #1
 801250e:	f000 ff9c 	bl	801344a <i2c_data_transmit>
 8012512:	f640 75ff 	movw	r5, #4095	; 0xfff
 8012516:	f240 5102 	movw	r1, #1282	; 0x502
 801251a:	4630      	mov	r0, r6
 801251c:	f000 ff9a 	bl	8013454 <i2c_flag_get>
 8012520:	2800      	cmp	r0, #0
 8012522:	d1ef      	bne.n	8012504 <gd32_i2c_write(char const*, unsigned int)+0x68>
 8012524:	3d01      	subs	r5, #1
 8012526:	d1f6      	bne.n	8012516 <gd32_i2c_write(char const*, unsigned int)+0x7a>
 8012528:	e7c6      	b.n	80124b8 <gd32_i2c_write(char const*, unsigned int)+0x1c>
 801252a:	3d01      	subs	r5, #1
 801252c:	d1e1      	bne.n	80124f2 <gd32_i2c_write(char const*, unsigned int)+0x56>
 801252e:	e7c3      	b.n	80124b8 <gd32_i2c_write(char const*, unsigned int)+0x1c>
 8012530:	f7ff ff60 	bl	80123f4 <_stop() [clone .isra.0]>
 8012534:	2000      	movs	r0, #0
 8012536:	e7c3      	b.n	80124c0 <gd32_i2c_write(char const*, unsigned int)+0x24>
 8012538:	4b0a      	ldr	r3, [pc, #40]	; (8012564 <gd32_i2c_write(char const*, unsigned int)+0xc8>)
 801253a:	f06f 0201 	mvn.w	r2, #1
 801253e:	7819      	ldrb	r1, [r3, #0]
 8012540:	4807      	ldr	r0, [pc, #28]	; (8012560 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8012542:	f000 ff6b 	bl	801341c <i2c_master_addressing>
 8012546:	f640 75ff 	movw	r5, #4095	; 0xfff
 801254a:	4e05      	ldr	r6, [pc, #20]	; (8012560 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 801254c:	f240 5101 	movw	r1, #1281	; 0x501
 8012550:	4630      	mov	r0, r6
 8012552:	f000 ff7f 	bl	8013454 <i2c_flag_get>
 8012556:	2800      	cmp	r0, #0
 8012558:	d1c3      	bne.n	80124e2 <gd32_i2c_write(char const*, unsigned int)+0x46>
 801255a:	3d01      	subs	r5, #1
 801255c:	d1f6      	bne.n	801254c <gd32_i2c_write(char const*, unsigned int)+0xb0>
 801255e:	e7ab      	b.n	80124b8 <gd32_i2c_write(char const*, unsigned int)+0x1c>
 8012560:	40005400 	andmi	r5, r0, r0, lsl #8
 8012564:	2000d274 	andcs	sp, r0, r4, ror r2

08012568 <gd32_i2c_read(char*, unsigned int)>:
 8012568:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801256c:	4680      	mov	r8, r0
 801256e:	460c      	mov	r4, r1
 8012570:	f640 76ff 	movw	r6, #4095	; 0xfff
 8012574:	4f49      	ldr	r7, [pc, #292]	; (801269c <gd32_i2c_read(char*, unsigned int)+0x134>)
 8012576:	f240 6101 	movw	r1, #1537	; 0x601
 801257a:	4638      	mov	r0, r7
 801257c:	f000 ff6a 	bl	8013454 <i2c_flag_get>
 8012580:	4605      	mov	r5, r0
 8012582:	b128      	cbz	r0, 8012590 <gd32_i2c_read(char*, unsigned int)+0x28>
 8012584:	3e01      	subs	r6, #1
 8012586:	d1f6      	bne.n	8012576 <gd32_i2c_read(char*, unsigned int)+0xe>
 8012588:	f7ff ff34 	bl	80123f4 <_stop() [clone .isra.0]>
 801258c:	2504      	movs	r5, #4
 801258e:	e082      	b.n	8012696 <gd32_i2c_read(char*, unsigned int)+0x12e>
 8012590:	2c02      	cmp	r4, #2
 8012592:	d103      	bne.n	801259c <gd32_i2c_read(char*, unsigned int)+0x34>
 8012594:	4601      	mov	r1, r0
 8012596:	4841      	ldr	r0, [pc, #260]	; (801269c <gd32_i2c_read(char*, unsigned int)+0x134>)
 8012598:	f000 ff37 	bl	801340a <i2c_ackpos_config>
 801259c:	483f      	ldr	r0, [pc, #252]	; (801269c <gd32_i2c_read(char*, unsigned int)+0x134>)
 801259e:	f000 ff4a 	bl	8013436 <i2c_start_on_bus>
 80125a2:	f640 76ff 	movw	r6, #4095	; 0xfff
 80125a6:	4f3d      	ldr	r7, [pc, #244]	; (801269c <gd32_i2c_read(char*, unsigned int)+0x134>)
 80125a8:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 80125ac:	4638      	mov	r0, r7
 80125ae:	f000 ff51 	bl	8013454 <i2c_flag_get>
 80125b2:	b910      	cbnz	r0, 80125ba <gd32_i2c_read(char*, unsigned int)+0x52>
 80125b4:	3e01      	subs	r6, #1
 80125b6:	d1f7      	bne.n	80125a8 <gd32_i2c_read(char*, unsigned int)+0x40>
 80125b8:	e7e6      	b.n	8012588 <gd32_i2c_read(char*, unsigned int)+0x20>
 80125ba:	4b39      	ldr	r3, [pc, #228]	; (80126a0 <gd32_i2c_read(char*, unsigned int)+0x138>)
 80125bc:	2201      	movs	r2, #1
 80125be:	7819      	ldrb	r1, [r3, #0]
 80125c0:	4836      	ldr	r0, [pc, #216]	; (801269c <gd32_i2c_read(char*, unsigned int)+0x134>)
 80125c2:	f000 ff2b 	bl	801341c <i2c_master_addressing>
 80125c6:	2c02      	cmp	r4, #2
 80125c8:	d803      	bhi.n	80125d2 <gd32_i2c_read(char*, unsigned int)+0x6a>
 80125ca:	2100      	movs	r1, #0
 80125cc:	4833      	ldr	r0, [pc, #204]	; (801269c <gd32_i2c_read(char*, unsigned int)+0x134>)
 80125ce:	f000 ff13 	bl	80133f8 <i2c_ack_config>
 80125d2:	f640 76ff 	movw	r6, #4095	; 0xfff
 80125d6:	4f31      	ldr	r7, [pc, #196]	; (801269c <gd32_i2c_read(char*, unsigned int)+0x134>)
 80125d8:	f240 5101 	movw	r1, #1281	; 0x501
 80125dc:	4638      	mov	r0, r7
 80125de:	f000 ff39 	bl	8013454 <i2c_flag_get>
 80125e2:	b910      	cbnz	r0, 80125ea <gd32_i2c_read(char*, unsigned int)+0x82>
 80125e4:	3e01      	subs	r6, #1
 80125e6:	d1f7      	bne.n	80125d8 <gd32_i2c_read(char*, unsigned int)+0x70>
 80125e8:	e7ce      	b.n	8012588 <gd32_i2c_read(char*, unsigned int)+0x20>
 80125ea:	f240 5101 	movw	r1, #1281	; 0x501
 80125ee:	482b      	ldr	r0, [pc, #172]	; (801269c <gd32_i2c_read(char*, unsigned int)+0x134>)
 80125f0:	f000 ff38 	bl	8013464 <i2c_flag_clear>
 80125f4:	2c01      	cmp	r4, #1
 80125f6:	d102      	bne.n	80125fe <gd32_i2c_read(char*, unsigned int)+0x96>
 80125f8:	4828      	ldr	r0, [pc, #160]	; (801269c <gd32_i2c_read(char*, unsigned int)+0x134>)
 80125fa:	f000 ff21 	bl	8013440 <i2c_stop_on_bus>
 80125fe:	f640 77ff 	movw	r7, #4095	; 0xfff
 8012602:	4e26      	ldr	r6, [pc, #152]	; (801269c <gd32_i2c_read(char*, unsigned int)+0x134>)
 8012604:	b3ac      	cbz	r4, 8012672 <gd32_i2c_read(char*, unsigned int)+0x10a>
 8012606:	2c03      	cmp	r4, #3
 8012608:	d121      	bne.n	801264e <gd32_i2c_read(char*, unsigned int)+0xe6>
 801260a:	f640 79ff 	movw	r9, #4095	; 0xfff
 801260e:	f240 5102 	movw	r1, #1282	; 0x502
 8012612:	4630      	mov	r0, r6
 8012614:	f000 ff1e 	bl	8013454 <i2c_flag_get>
 8012618:	b918      	cbnz	r0, 8012622 <gd32_i2c_read(char*, unsigned int)+0xba>
 801261a:	f1b9 0901 	subs.w	r9, r9, #1
 801261e:	d1f6      	bne.n	801260e <gd32_i2c_read(char*, unsigned int)+0xa6>
 8012620:	e7b2      	b.n	8012588 <gd32_i2c_read(char*, unsigned int)+0x20>
 8012622:	2100      	movs	r1, #0
 8012624:	4630      	mov	r0, r6
 8012626:	f000 fee7 	bl	80133f8 <i2c_ack_config>
 801262a:	f240 5106 	movw	r1, #1286	; 0x506
 801262e:	4630      	mov	r0, r6
 8012630:	f000 ff10 	bl	8013454 <i2c_flag_get>
 8012634:	b138      	cbz	r0, 8012646 <gd32_i2c_read(char*, unsigned int)+0xde>
 8012636:	4630      	mov	r0, r6
 8012638:	f000 ff09 	bl	801344e <i2c_data_receive>
 801263c:	f640 77ff 	movw	r7, #4095	; 0xfff
 8012640:	f808 0b01 	strb.w	r0, [r8], #1
 8012644:	3c01      	subs	r4, #1
 8012646:	3f01      	subs	r7, #1
 8012648:	2f00      	cmp	r7, #0
 801264a:	dcdb      	bgt.n	8012604 <gd32_i2c_read(char*, unsigned int)+0x9c>
 801264c:	e79c      	b.n	8012588 <gd32_i2c_read(char*, unsigned int)+0x20>
 801264e:	2c02      	cmp	r4, #2
 8012650:	d1eb      	bne.n	801262a <gd32_i2c_read(char*, unsigned int)+0xc2>
 8012652:	f640 79ff 	movw	r9, #4095	; 0xfff
 8012656:	f240 5102 	movw	r1, #1282	; 0x502
 801265a:	4630      	mov	r0, r6
 801265c:	f000 fefa 	bl	8013454 <i2c_flag_get>
 8012660:	b918      	cbnz	r0, 801266a <gd32_i2c_read(char*, unsigned int)+0x102>
 8012662:	f1b9 0901 	subs.w	r9, r9, #1
 8012666:	d1f6      	bne.n	8012656 <gd32_i2c_read(char*, unsigned int)+0xee>
 8012668:	e78e      	b.n	8012588 <gd32_i2c_read(char*, unsigned int)+0x20>
 801266a:	4630      	mov	r0, r6
 801266c:	f000 fee8 	bl	8013440 <i2c_stop_on_bus>
 8012670:	e7db      	b.n	801262a <gd32_i2c_read(char*, unsigned int)+0xc2>
 8012672:	f640 73ff 	movw	r3, #4095	; 0xfff
 8012676:	4a0b      	ldr	r2, [pc, #44]	; (80126a4 <gd32_i2c_read(char*, unsigned int)+0x13c>)
 8012678:	f8d2 1400 	ldr.w	r1, [r2, #1024]	; 0x400
 801267c:	0589      	lsls	r1, r1, #22
 801267e:	d502      	bpl.n	8012686 <gd32_i2c_read(char*, unsigned int)+0x11e>
 8012680:	3b01      	subs	r3, #1
 8012682:	d1f9      	bne.n	8012678 <gd32_i2c_read(char*, unsigned int)+0x110>
 8012684:	e782      	b.n	801258c <gd32_i2c_read(char*, unsigned int)+0x24>
 8012686:	2101      	movs	r1, #1
 8012688:	4804      	ldr	r0, [pc, #16]	; (801269c <gd32_i2c_read(char*, unsigned int)+0x134>)
 801268a:	f000 feb5 	bl	80133f8 <i2c_ack_config>
 801268e:	2101      	movs	r1, #1
 8012690:	4802      	ldr	r0, [pc, #8]	; (801269c <gd32_i2c_read(char*, unsigned int)+0x134>)
 8012692:	f000 feba 	bl	801340a <i2c_ackpos_config>
 8012696:	4628      	mov	r0, r5
 8012698:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801269c:	40005400 	andmi	r5, r0, r0, lsl #8
 80126a0:	2000d274 	andcs	sp, r0, r4, ror r2
 80126a4:	40005000 	andmi	r5, r0, r0

080126a8 <gd32_uart_begin>:
 80126a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80126aa:	461d      	mov	r5, r3
 80126ac:	4b81      	ldr	r3, [pc, #516]	; (80128b4 <gd32_uart_begin+0x20c>)
 80126ae:	4604      	mov	r4, r0
 80126b0:	4298      	cmp	r0, r3
 80126b2:	460f      	mov	r7, r1
 80126b4:	4616      	mov	r6, r2
 80126b6:	d05b      	beq.n	8012770 <gd32_uart_begin+0xc8>
 80126b8:	d80b      	bhi.n	80126d2 <gd32_uart_begin+0x2a>
 80126ba:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 80126be:	4298      	cmp	r0, r3
 80126c0:	d045      	beq.n	801274e <gd32_uart_begin+0xa6>
 80126c2:	d84b      	bhi.n	801275c <gd32_uart_begin+0xb4>
 80126c4:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 80126c8:	4298      	cmp	r0, r3
 80126ca:	d039      	beq.n	8012740 <gd32_uart_begin+0x98>
 80126cc:	f240 7012 	movw	r0, #1810	; 0x712
 80126d0:	e038      	b.n	8012744 <gd32_uart_begin+0x9c>
 80126d2:	4b79      	ldr	r3, [pc, #484]	; (80128b8 <gd32_uart_begin+0x210>)
 80126d4:	4298      	cmp	r0, r3
 80126d6:	d006      	beq.n	80126e6 <gd32_uart_begin+0x3e>
 80126d8:	f503 5360 	add.w	r3, r3, #14336	; 0x3800
 80126dc:	4298      	cmp	r0, r3
 80126de:	d044      	beq.n	801276a <gd32_uart_begin+0xc2>
 80126e0:	f641 201f 	movw	r0, #6687	; 0x1a1f
 80126e4:	e046      	b.n	8012774 <gd32_uart_begin+0xcc>
 80126e6:	f240 600e 	movw	r0, #1550	; 0x60e
 80126ea:	f7ff f9a1 	bl	8011a30 <rcu_periph_clock_enable>
 80126ee:	f240 6002 	movw	r0, #1538	; 0x602
 80126f2:	f7ff f99d 	bl	8011a30 <rcu_periph_clock_enable>
 80126f6:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 80126fa:	f7ff f999 	bl	8011a30 <rcu_periph_clock_enable>
 80126fe:	4b6d      	ldr	r3, [pc, #436]	; (80128b4 <gd32_uart_begin+0x20c>)
 8012700:	429c      	cmp	r4, r3
 8012702:	f000 80c5 	beq.w	8012890 <gd32_uart_begin+0x1e8>
 8012706:	d83a      	bhi.n	801277e <gd32_uart_begin+0xd6>
 8012708:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 801270c:	429c      	cmp	r4, r3
 801270e:	f000 809e 	beq.w	801284e <gd32_uart_begin+0x1a6>
 8012712:	f200 80a9 	bhi.w	8012868 <gd32_uart_begin+0x1c0>
 8012716:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 801271a:	429c      	cmp	r4, r3
 801271c:	d04d      	beq.n	80127ba <gd32_uart_begin+0x112>
 801271e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8012722:	2203      	movs	r2, #3
 8012724:	2118      	movs	r1, #24
 8012726:	4865      	ldr	r0, [pc, #404]	; (80128bc <gd32_uart_begin+0x214>)
 8012728:	f7ff f8ea 	bl	8011900 <gpio_init>
 801272c:	2104      	movs	r1, #4
 801272e:	4863      	ldr	r0, [pc, #396]	; (80128bc <gd32_uart_begin+0x214>)
 8012730:	f44f 7300 	mov.w	r3, #512	; 0x200
 8012734:	2203      	movs	r2, #3
 8012736:	f7ff f8e3 	bl	8011900 <gpio_init>
 801273a:	2101      	movs	r1, #1
 801273c:	4860      	ldr	r0, [pc, #384]	; (80128c0 <gd32_uart_begin+0x218>)
 801273e:	e04a      	b.n	80127d6 <gd32_uart_begin+0x12e>
 8012740:	f240 7011 	movw	r0, #1809	; 0x711
 8012744:	f7ff f974 	bl	8011a30 <rcu_periph_clock_enable>
 8012748:	f240 6005 	movw	r0, #1541	; 0x605
 801274c:	e7d1      	b.n	80126f2 <gd32_uart_begin+0x4a>
 801274e:	f240 7013 	movw	r0, #1811	; 0x713
 8012752:	f7ff f96d 	bl	8011a30 <rcu_periph_clock_enable>
 8012756:	f240 6004 	movw	r0, #1540	; 0x604
 801275a:	e7ca      	b.n	80126f2 <gd32_uart_begin+0x4a>
 801275c:	f240 7014 	movw	r0, #1812	; 0x714
 8012760:	f7ff f966 	bl	8011a30 <rcu_periph_clock_enable>
 8012764:	f240 6004 	movw	r0, #1540	; 0x604
 8012768:	e7ec      	b.n	8012744 <gd32_uart_begin+0x9c>
 801276a:	f641 1018 	movw	r0, #6424	; 0x1918
 801276e:	e7f0      	b.n	8012752 <gd32_uart_begin+0xaa>
 8012770:	f641 201e 	movw	r0, #6686	; 0x1a1e
 8012774:	f7ff f95c 	bl	8011a30 <rcu_periph_clock_enable>
 8012778:	f240 6006 	movw	r0, #1542	; 0x606
 801277c:	e7b9      	b.n	80126f2 <gd32_uart_begin+0x4a>
 801277e:	4b4e      	ldr	r3, [pc, #312]	; (80128b8 <gd32_uart_begin+0x210>)
 8012780:	429c      	cmp	r4, r3
 8012782:	d00b      	beq.n	801279c <gd32_uart_begin+0xf4>
 8012784:	f503 5360 	add.w	r3, r3, #14336	; 0x3800
 8012788:	429c      	cmp	r4, r3
 801278a:	d079      	beq.n	8012880 <gd32_uart_begin+0x1d8>
 801278c:	2302      	movs	r3, #2
 801278e:	2203      	movs	r2, #3
 8012790:	2118      	movs	r1, #24
 8012792:	484c      	ldr	r0, [pc, #304]	; (80128c4 <gd32_uart_begin+0x21c>)
 8012794:	f7ff f8b4 	bl	8011900 <gpio_init>
 8012798:	2301      	movs	r3, #1
 801279a:	e081      	b.n	80128a0 <gd32_uart_begin+0x1f8>
 801279c:	f44f 7300 	mov.w	r3, #512	; 0x200
 80127a0:	2203      	movs	r2, #3
 80127a2:	2118      	movs	r1, #24
 80127a4:	4848      	ldr	r0, [pc, #288]	; (80128c8 <gd32_uart_begin+0x220>)
 80127a6:	f7ff f8ab 	bl	8011900 <gpio_init>
 80127aa:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80127ae:	2203      	movs	r2, #3
 80127b0:	2104      	movs	r1, #4
 80127b2:	4845      	ldr	r0, [pc, #276]	; (80128c8 <gd32_uart_begin+0x220>)
 80127b4:	f7ff f8a4 	bl	8011900 <gpio_init>
 80127b8:	e00f      	b.n	80127da <gd32_uart_begin+0x132>
 80127ba:	2320      	movs	r3, #32
 80127bc:	2203      	movs	r2, #3
 80127be:	2118      	movs	r1, #24
 80127c0:	483e      	ldr	r0, [pc, #248]	; (80128bc <gd32_uart_begin+0x214>)
 80127c2:	f7ff f89d 	bl	8011900 <gpio_init>
 80127c6:	2104      	movs	r1, #4
 80127c8:	483c      	ldr	r0, [pc, #240]	; (80128bc <gd32_uart_begin+0x214>)
 80127ca:	2340      	movs	r3, #64	; 0x40
 80127cc:	2203      	movs	r2, #3
 80127ce:	f7ff f897 	bl	8011900 <gpio_init>
 80127d2:	2101      	movs	r1, #1
 80127d4:	2008      	movs	r0, #8
 80127d6:	f7ff f8e7 	bl	80119a8 <gpio_pin_remap_config>
 80127da:	4620      	mov	r0, r4
 80127dc:	f7ff fc02 	bl	8011fe4 <usart_deinit>
 80127e0:	68e3      	ldr	r3, [r4, #12]
 80127e2:	4639      	mov	r1, r7
 80127e4:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80127e8:	60e3      	str	r3, [r4, #12]
 80127ea:	4620      	mov	r0, r4
 80127ec:	f7ff fc5c 	bl	80120a8 <usart_baudrate_set>
 80127f0:	2e09      	cmp	r6, #9
 80127f2:	bf0c      	ite	eq
 80127f4:	f44f 5180 	moveq.w	r1, #4096	; 0x1000
 80127f8:	2100      	movne	r1, #0
 80127fa:	4620      	mov	r0, r4
 80127fc:	f7ff fc90 	bl	8012120 <usart_word_length_set>
 8012800:	9b06      	ldr	r3, [sp, #24]
 8012802:	4620      	mov	r0, r4
 8012804:	2b02      	cmp	r3, #2
 8012806:	bf0c      	ite	eq
 8012808:	f44f 5100 	moveq.w	r1, #8192	; 0x2000
 801280c:	2100      	movne	r1, #0
 801280e:	f7ff fc8f 	bl	8012130 <usart_stop_bit_set>
 8012812:	2d01      	cmp	r5, #1
 8012814:	d048      	beq.n	80128a8 <gd32_uart_begin+0x200>
 8012816:	2d02      	cmp	r5, #2
 8012818:	d149      	bne.n	80128ae <gd32_uart_begin+0x206>
 801281a:	f44f 6180 	mov.w	r1, #1024	; 0x400
 801281e:	4620      	mov	r0, r4
 8012820:	f7ff fc76 	bl	8012110 <usart_parity_config>
 8012824:	2100      	movs	r1, #0
 8012826:	4620      	mov	r0, r4
 8012828:	f7ff fc96 	bl	8012158 <usart_hardware_flow_rts_config>
 801282c:	2100      	movs	r1, #0
 801282e:	4620      	mov	r0, r4
 8012830:	f7ff fc98 	bl	8012164 <usart_hardware_flow_cts_config>
 8012834:	2104      	movs	r1, #4
 8012836:	4620      	mov	r0, r4
 8012838:	f7ff fc88 	bl	801214c <usart_receive_config>
 801283c:	2108      	movs	r1, #8
 801283e:	4620      	mov	r0, r4
 8012840:	f7ff fc7e 	bl	8012140 <usart_transmit_config>
 8012844:	68e3      	ldr	r3, [r4, #12]
 8012846:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 801284a:	60e3      	str	r3, [r4, #12]
 801284c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801284e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8012852:	2203      	movs	r2, #3
 8012854:	2118      	movs	r1, #24
 8012856:	481d      	ldr	r0, [pc, #116]	; (80128cc <gd32_uart_begin+0x224>)
 8012858:	f7ff f852 	bl	8011900 <gpio_init>
 801285c:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8012860:	2203      	movs	r2, #3
 8012862:	2104      	movs	r1, #4
 8012864:	4819      	ldr	r0, [pc, #100]	; (80128cc <gd32_uart_begin+0x224>)
 8012866:	e7a5      	b.n	80127b4 <gd32_uart_begin+0x10c>
 8012868:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 801286c:	2203      	movs	r2, #3
 801286e:	2118      	movs	r1, #24
 8012870:	4816      	ldr	r0, [pc, #88]	; (80128cc <gd32_uart_begin+0x224>)
 8012872:	f7ff f845 	bl	8011900 <gpio_init>
 8012876:	2304      	movs	r3, #4
 8012878:	2203      	movs	r2, #3
 801287a:	4619      	mov	r1, r3
 801287c:	480f      	ldr	r0, [pc, #60]	; (80128bc <gd32_uart_begin+0x214>)
 801287e:	e799      	b.n	80127b4 <gd32_uart_begin+0x10c>
 8012880:	2340      	movs	r3, #64	; 0x40
 8012882:	2203      	movs	r2, #3
 8012884:	2118      	movs	r1, #24
 8012886:	4811      	ldr	r0, [pc, #68]	; (80128cc <gd32_uart_begin+0x224>)
 8012888:	f7ff f83a 	bl	8011900 <gpio_init>
 801288c:	2380      	movs	r3, #128	; 0x80
 801288e:	e7e7      	b.n	8012860 <gd32_uart_begin+0x1b8>
 8012890:	f44f 7380 	mov.w	r3, #256	; 0x100
 8012894:	2203      	movs	r2, #3
 8012896:	2118      	movs	r1, #24
 8012898:	480a      	ldr	r0, [pc, #40]	; (80128c4 <gd32_uart_begin+0x21c>)
 801289a:	f7ff f831 	bl	8011900 <gpio_init>
 801289e:	2380      	movs	r3, #128	; 0x80
 80128a0:	2203      	movs	r2, #3
 80128a2:	2104      	movs	r1, #4
 80128a4:	4807      	ldr	r0, [pc, #28]	; (80128c4 <gd32_uart_begin+0x21c>)
 80128a6:	e785      	b.n	80127b4 <gd32_uart_begin+0x10c>
 80128a8:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 80128ac:	e7b7      	b.n	801281e <gd32_uart_begin+0x176>
 80128ae:	2100      	movs	r1, #0
 80128b0:	e7b5      	b.n	801281e <gd32_uart_begin+0x176>
 80128b2:	bf00      	nop
 80128b4:	40007800 	andmi	r7, r0, r0, lsl #16
 80128b8:	40013800 	andmi	r3, r1, r0, lsl #16
 80128bc:	40011400 	andmi	r1, r1, r0, lsl #8
 80128c0:	00140030 	andseq	r0, r4, r0, lsr r0
 80128c4:	40011800 	andmi	r1, r1, r0, lsl #16
 80128c8:	40010800 	andmi	r0, r1, r0, lsl #16
 80128cc:	40011000 	andmi	r1, r1, r0

080128d0 <micros_init()>:
 80128d0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80128d2:	2400      	movs	r4, #0
 80128d4:	f04f 36ff 	mov.w	r6, #4294967295	; 0xffffffff
 80128d8:	4d22      	ldr	r5, [pc, #136]	; (8012964 <micros_init()+0x94>)
 80128da:	f240 6013 	movw	r0, #1555	; 0x613
 80128de:	f7ff f8a7 	bl	8011a30 <rcu_periph_clock_enable>
 80128e2:	4628      	mov	r0, r5
 80128e4:	f7ff fa18 	bl	8011d18 <timer_deinit>
 80128e8:	4b1f      	ldr	r3, [pc, #124]	; (8012968 <micros_init()+0x98>)
 80128ea:	4628      	mov	r0, r5
 80128ec:	f8c3 4c24 	str.w	r4, [r3, #3108]	; 0xc24
 80128f0:	4669      	mov	r1, sp
 80128f2:	9400      	str	r4, [sp, #0]
 80128f4:	f8ad 4004 	strh.w	r4, [sp, #4]
 80128f8:	9602      	str	r6, [sp, #8]
 80128fa:	f8ad 400c 	strh.w	r4, [sp, #12]
 80128fe:	f7ff fab1 	bl	8011e64 <timer_init>
 8012902:	4628      	mov	r0, r5
 8012904:	4621      	mov	r1, r4
 8012906:	f7ff fb56 	bl	8011fb6 <timer_master_slave_mode_config>
 801290a:	4628      	mov	r0, r5
 801290c:	2107      	movs	r1, #7
 801290e:	f7ff fb4a 	bl	8011fa6 <timer_slave_mode_select>
 8012912:	2120      	movs	r1, #32
 8012914:	4628      	mov	r0, r5
 8012916:	f7ff fb36 	bl	8011f86 <timer_input_trigger_source_select>
 801291a:	4628      	mov	r0, r5
 801291c:	f7ff fafa 	bl	8011f14 <timer_enable>
 8012920:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8012924:	f240 6014 	movw	r0, #1556	; 0x614
 8012928:	f7ff f882 	bl	8011a30 <rcu_periph_clock_enable>
 801292c:	4628      	mov	r0, r5
 801292e:	f7ff f9f3 	bl	8011d18 <timer_deinit>
 8012932:	2377      	movs	r3, #119	; 0x77
 8012934:	626c      	str	r4, [r5, #36]	; 0x24
 8012936:	4669      	mov	r1, sp
 8012938:	4628      	mov	r0, r5
 801293a:	9300      	str	r3, [sp, #0]
 801293c:	f8ad 4004 	strh.w	r4, [sp, #4]
 8012940:	9602      	str	r6, [sp, #8]
 8012942:	f8ad 400c 	strh.w	r4, [sp, #12]
 8012946:	f7ff fa8d 	bl	8011e64 <timer_init>
 801294a:	4621      	mov	r1, r4
 801294c:	4628      	mov	r0, r5
 801294e:	f7ff fb32 	bl	8011fb6 <timer_master_slave_mode_config>
 8012952:	2120      	movs	r1, #32
 8012954:	4628      	mov	r0, r5
 8012956:	f7ff fb1e 	bl	8011f96 <timer_master_output_trigger_source_select>
 801295a:	4628      	mov	r0, r5
 801295c:	f7ff fada 	bl	8011f14 <timer_enable>
 8012960:	b004      	add	sp, #16
 8012962:	bd70      	pop	{r4, r5, r6, pc}
 8012964:	40014c00 	andmi	r4, r1, r0, lsl #24
 8012968:	40014000 	andmi	r4, r1, r0

0801296c <udelay_init()>:
 801296c:	4a07      	ldr	r2, [pc, #28]	; (801298c <udelay_init()+0x20>)
 801296e:	f8d2 30fc 	ldr.w	r3, [r2, #252]	; 0xfc
 8012972:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8012976:	f8c2 30fc 	str.w	r3, [r2, #252]	; 0xfc
 801297a:	2200      	movs	r2, #0
 801297c:	4b04      	ldr	r3, [pc, #16]	; (8012990 <udelay_init()+0x24>)
 801297e:	605a      	str	r2, [r3, #4]
 8012980:	681a      	ldr	r2, [r3, #0]
 8012982:	f042 0201 	orr.w	r2, r2, #1
 8012986:	601a      	str	r2, [r3, #0]
 8012988:	4770      	bx	lr
 801298a:	bf00      	nop
 801298c:	e000ed00 	and	lr, r0, r0, lsl #26
 8012990:	e0001000 	and	r1, r0, r0

08012994 <udelay(unsigned int, unsigned int)>:
 8012994:	2378      	movs	r3, #120	; 0x78
 8012996:	b510      	push	{r4, lr}
 8012998:	4358      	muls	r0, r3
 801299a:	b909      	cbnz	r1, 80129a0 <udelay(unsigned int, unsigned int)+0xc>
 801299c:	4b08      	ldr	r3, [pc, #32]	; (80129c0 <udelay(unsigned int, unsigned int)+0x2c>)
 801299e:	6859      	ldr	r1, [r3, #4]
 80129a0:	2300      	movs	r3, #0
 80129a2:	4c07      	ldr	r4, [pc, #28]	; (80129c0 <udelay(unsigned int, unsigned int)+0x2c>)
 80129a4:	6862      	ldr	r2, [r4, #4]
 80129a6:	4291      	cmp	r1, r2
 80129a8:	d0fc      	beq.n	80129a4 <udelay(unsigned int, unsigned int)+0x10>
 80129aa:	bf28      	it	cs
 80129ac:	f103 33ff 	addcs.w	r3, r3, #4294967295	; 0xffffffff
 80129b0:	1a5b      	subs	r3, r3, r1
 80129b2:	4413      	add	r3, r2
 80129b4:	4283      	cmp	r3, r0
 80129b6:	d300      	bcc.n	80129ba <udelay(unsigned int, unsigned int)+0x26>
 80129b8:	bd10      	pop	{r4, pc}
 80129ba:	4611      	mov	r1, r2
 80129bc:	e7f2      	b.n	80129a4 <udelay(unsigned int, unsigned int)+0x10>
 80129be:	bf00      	nop
 80129c0:	e0001000 	and	r1, r0, r0

080129c4 <mac_address_get>:
 80129c4:	2102      	movs	r1, #2
 80129c6:	4a07      	ldr	r2, [pc, #28]	; (80129e4 <mac_address_get+0x20>)
 80129c8:	f8d2 37e8 	ldr.w	r3, [r2, #2024]	; 0x7e8
 80129cc:	f8d2 27ec 	ldr.w	r2, [r2, #2028]	; 0x7ec
 80129d0:	7001      	strb	r1, [r0, #0]
 80129d2:	7042      	strb	r2, [r0, #1]
 80129d4:	0e1a      	lsrs	r2, r3, #24
 80129d6:	7082      	strb	r2, [r0, #2]
 80129d8:	0c1a      	lsrs	r2, r3, #16
 80129da:	70c2      	strb	r2, [r0, #3]
 80129dc:	0a1a      	lsrs	r2, r3, #8
 80129de:	7102      	strb	r2, [r0, #4]
 80129e0:	7143      	strb	r3, [r0, #5]
 80129e2:	4770      	bx	lr
 80129e4:	1ffff000 	svcne	0x00fff000

080129e8 <adc_mode_config>:
 80129e8:	4b06      	ldr	r3, [pc, #24]	; (8012a04 <adc_mode_config+0x1c>)
 80129ea:	f8d3 1404 	ldr.w	r1, [r3, #1028]	; 0x404
 80129ee:	f421 2170 	bic.w	r1, r1, #983040	; 0xf0000
 80129f2:	f8c3 1404 	str.w	r1, [r3, #1028]	; 0x404
 80129f6:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 80129fa:	4302      	orrs	r2, r0
 80129fc:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 8012a00:	4770      	bx	lr
 8012a02:	bf00      	nop
 8012a04:	40012000 	andmi	r2, r1, r0

08012a08 <adc_special_function_config>:
 8012a08:	b510      	push	{r4, lr}
 8012a0a:	f401 7380 	and.w	r3, r1, #256	; 0x100
 8012a0e:	f401 6480 	and.w	r4, r1, #1024	; 0x400
 8012a12:	f001 0102 	and.w	r1, r1, #2
 8012a16:	b17a      	cbz	r2, 8012a38 <adc_special_function_config+0x30>
 8012a18:	b11b      	cbz	r3, 8012a22 <adc_special_function_config+0x1a>
 8012a1a:	6843      	ldr	r3, [r0, #4]
 8012a1c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8012a20:	6043      	str	r3, [r0, #4]
 8012a22:	b11c      	cbz	r4, 8012a2c <adc_special_function_config+0x24>
 8012a24:	6843      	ldr	r3, [r0, #4]
 8012a26:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8012a2a:	6043      	str	r3, [r0, #4]
 8012a2c:	b119      	cbz	r1, 8012a36 <adc_special_function_config+0x2e>
 8012a2e:	6883      	ldr	r3, [r0, #8]
 8012a30:	f043 0302 	orr.w	r3, r3, #2
 8012a34:	6083      	str	r3, [r0, #8]
 8012a36:	bd10      	pop	{r4, pc}
 8012a38:	b11b      	cbz	r3, 8012a42 <adc_special_function_config+0x3a>
 8012a3a:	6843      	ldr	r3, [r0, #4]
 8012a3c:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8012a40:	6043      	str	r3, [r0, #4]
 8012a42:	b11c      	cbz	r4, 8012a4c <adc_special_function_config+0x44>
 8012a44:	6843      	ldr	r3, [r0, #4]
 8012a46:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8012a4a:	6043      	str	r3, [r0, #4]
 8012a4c:	2900      	cmp	r1, #0
 8012a4e:	d0f2      	beq.n	8012a36 <adc_special_function_config+0x2e>
 8012a50:	6883      	ldr	r3, [r0, #8]
 8012a52:	f023 0302 	bic.w	r3, r3, #2
 8012a56:	e7ed      	b.n	8012a34 <adc_special_function_config+0x2c>

08012a58 <adc_data_alignment_config>:
 8012a58:	6883      	ldr	r3, [r0, #8]
 8012a5a:	b119      	cbz	r1, 8012a64 <adc_data_alignment_config+0xc>
 8012a5c:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8012a60:	6083      	str	r3, [r0, #8]
 8012a62:	4770      	bx	lr
 8012a64:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8012a68:	e7fa      	b.n	8012a60 <adc_data_alignment_config+0x8>

08012a6a <adc_enable>:
 8012a6a:	6883      	ldr	r3, [r0, #8]
 8012a6c:	07db      	lsls	r3, r3, #31
 8012a6e:	bf5e      	ittt	pl
 8012a70:	6883      	ldrpl	r3, [r0, #8]
 8012a72:	f043 0301 	orrpl.w	r3, r3, #1
 8012a76:	6083      	strpl	r3, [r0, #8]
 8012a78:	4770      	bx	lr

08012a7a <adc_calibration_enable>:
 8012a7a:	6883      	ldr	r3, [r0, #8]
 8012a7c:	f100 0208 	add.w	r2, r0, #8
 8012a80:	f043 0308 	orr.w	r3, r3, #8
 8012a84:	6083      	str	r3, [r0, #8]
 8012a86:	6813      	ldr	r3, [r2, #0]
 8012a88:	0719      	lsls	r1, r3, #28
 8012a8a:	d4fc      	bmi.n	8012a86 <adc_calibration_enable+0xc>
 8012a8c:	6883      	ldr	r3, [r0, #8]
 8012a8e:	f043 0304 	orr.w	r3, r3, #4
 8012a92:	6083      	str	r3, [r0, #8]
 8012a94:	6813      	ldr	r3, [r2, #0]
 8012a96:	075b      	lsls	r3, r3, #29
 8012a98:	d4fc      	bmi.n	8012a94 <adc_calibration_enable+0x1a>
 8012a9a:	4770      	bx	lr

08012a9c <adc_tempsensor_vrefint_enable>:
 8012a9c:	4a03      	ldr	r2, [pc, #12]	; (8012aac <adc_tempsensor_vrefint_enable+0x10>)
 8012a9e:	f8d2 3408 	ldr.w	r3, [r2, #1032]	; 0x408
 8012aa2:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8012aa6:	f8c2 3408 	str.w	r3, [r2, #1032]	; 0x408
 8012aaa:	4770      	bx	lr
 8012aac:	40012000 	andmi	r2, r1, r0

08012ab0 <adc_channel_length_config>:
 8012ab0:	2901      	cmp	r1, #1
 8012ab2:	d002      	beq.n	8012aba <adc_channel_length_config+0xa>
 8012ab4:	2902      	cmp	r1, #2
 8012ab6:	d00c      	beq.n	8012ad2 <adc_channel_length_config+0x22>
 8012ab8:	4770      	bx	lr
 8012aba:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012abc:	3a01      	subs	r2, #1
 8012abe:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 8012ac2:	62c3      	str	r3, [r0, #44]	; 0x2c
 8012ac4:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012ac6:	0512      	lsls	r2, r2, #20
 8012ac8:	f402 0270 	and.w	r2, r2, #15728640	; 0xf00000
 8012acc:	431a      	orrs	r2, r3
 8012ace:	62c2      	str	r2, [r0, #44]	; 0x2c
 8012ad0:	4770      	bx	lr
 8012ad2:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8012ad4:	3a01      	subs	r2, #1
 8012ad6:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 8012ada:	6383      	str	r3, [r0, #56]	; 0x38
 8012adc:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8012ade:	0512      	lsls	r2, r2, #20
 8012ae0:	f402 1240 	and.w	r2, r2, #3145728	; 0x300000
 8012ae4:	431a      	orrs	r2, r3
 8012ae6:	6382      	str	r2, [r0, #56]	; 0x38
 8012ae8:	4770      	bx	lr

08012aea <adc_inserted_channel_config>:
 8012aea:	b530      	push	{r4, r5, lr}
 8012aec:	6b84      	ldr	r4, [r0, #56]	; 0x38
 8012aee:	6b85      	ldr	r5, [r0, #56]	; 0x38
 8012af0:	f3c4 5401 	ubfx	r4, r4, #20, #2
 8012af4:	1a61      	subs	r1, r4, r1
 8012af6:	f06f 0404 	mvn.w	r4, #4
 8012afa:	4361      	muls	r1, r4
 8012afc:	241f      	movs	r4, #31
 8012afe:	310f      	adds	r1, #15
 8012b00:	408c      	lsls	r4, r1
 8012b02:	ea25 0504 	bic.w	r5, r5, r4
 8012b06:	fa02 f101 	lsl.w	r1, r2, r1
 8012b0a:	4329      	orrs	r1, r5
 8012b0c:	2a09      	cmp	r2, #9
 8012b0e:	6381      	str	r1, [r0, #56]	; 0x38
 8012b10:	d80b      	bhi.n	8012b2a <adc_inserted_channel_config+0x40>
 8012b12:	eb02 0142 	add.w	r1, r2, r2, lsl #1
 8012b16:	2207      	movs	r2, #7
 8012b18:	6904      	ldr	r4, [r0, #16]
 8012b1a:	408a      	lsls	r2, r1
 8012b1c:	ea24 0402 	bic.w	r4, r4, r2
 8012b20:	fa03 f201 	lsl.w	r2, r3, r1
 8012b24:	4322      	orrs	r2, r4
 8012b26:	6102      	str	r2, [r0, #16]
 8012b28:	bd30      	pop	{r4, r5, pc}
 8012b2a:	2a11      	cmp	r2, #17
 8012b2c:	d8fc      	bhi.n	8012b28 <adc_inserted_channel_config+0x3e>
 8012b2e:	2407      	movs	r4, #7
 8012b30:	3a0a      	subs	r2, #10
 8012b32:	68c1      	ldr	r1, [r0, #12]
 8012b34:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8012b38:	4094      	lsls	r4, r2
 8012b3a:	ea21 0104 	bic.w	r1, r1, r4
 8012b3e:	fa03 f202 	lsl.w	r2, r3, r2
 8012b42:	430a      	orrs	r2, r1
 8012b44:	60c2      	str	r2, [r0, #12]
 8012b46:	e7ef      	b.n	8012b28 <adc_inserted_channel_config+0x3e>

08012b48 <adc_external_trigger_source_config>:
 8012b48:	2901      	cmp	r1, #1
 8012b4a:	d002      	beq.n	8012b52 <adc_external_trigger_source_config+0xa>
 8012b4c:	2902      	cmp	r1, #2
 8012b4e:	d008      	beq.n	8012b62 <adc_external_trigger_source_config+0x1a>
 8012b50:	4770      	bx	lr
 8012b52:	6883      	ldr	r3, [r0, #8]
 8012b54:	f423 2360 	bic.w	r3, r3, #917504	; 0xe0000
 8012b58:	6083      	str	r3, [r0, #8]
 8012b5a:	6883      	ldr	r3, [r0, #8]
 8012b5c:	431a      	orrs	r2, r3
 8012b5e:	6082      	str	r2, [r0, #8]
 8012b60:	4770      	bx	lr
 8012b62:	6883      	ldr	r3, [r0, #8]
 8012b64:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8012b68:	e7f6      	b.n	8012b58 <adc_external_trigger_source_config+0x10>

08012b6a <adc_external_trigger_config>:
 8012b6a:	f001 0301 	and.w	r3, r1, #1
 8012b6e:	f001 0102 	and.w	r1, r1, #2
 8012b72:	b152      	cbz	r2, 8012b8a <adc_external_trigger_config+0x20>
 8012b74:	b11b      	cbz	r3, 8012b7e <adc_external_trigger_config+0x14>
 8012b76:	6883      	ldr	r3, [r0, #8]
 8012b78:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8012b7c:	6083      	str	r3, [r0, #8]
 8012b7e:	b119      	cbz	r1, 8012b88 <adc_external_trigger_config+0x1e>
 8012b80:	6883      	ldr	r3, [r0, #8]
 8012b82:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8012b86:	6083      	str	r3, [r0, #8]
 8012b88:	4770      	bx	lr
 8012b8a:	b11b      	cbz	r3, 8012b94 <adc_external_trigger_config+0x2a>
 8012b8c:	6883      	ldr	r3, [r0, #8]
 8012b8e:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 8012b92:	6083      	str	r3, [r0, #8]
 8012b94:	2900      	cmp	r1, #0
 8012b96:	d0f7      	beq.n	8012b88 <adc_external_trigger_config+0x1e>
 8012b98:	6883      	ldr	r3, [r0, #8]
 8012b9a:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8012b9e:	e7f2      	b.n	8012b86 <adc_external_trigger_config+0x1c>

08012ba0 <adc_software_trigger_enable>:
 8012ba0:	07ca      	lsls	r2, r1, #31
 8012ba2:	bf42      	ittt	mi
 8012ba4:	6883      	ldrmi	r3, [r0, #8]
 8012ba6:	f443 0380 	orrmi.w	r3, r3, #4194304	; 0x400000
 8012baa:	6083      	strmi	r3, [r0, #8]
 8012bac:	078b      	lsls	r3, r1, #30
 8012bae:	bf42      	ittt	mi
 8012bb0:	6883      	ldrmi	r3, [r0, #8]
 8012bb2:	f443 1300 	orrmi.w	r3, r3, #2097152	; 0x200000
 8012bb6:	6083      	strmi	r3, [r0, #8]
 8012bb8:	4770      	bx	lr

08012bba <enet_delay>:
 8012bba:	2300      	movs	r3, #0
 8012bbc:	b082      	sub	sp, #8
 8012bbe:	9301      	str	r3, [sp, #4]
 8012bc0:	9001      	str	r0, [sp, #4]
 8012bc2:	9b01      	ldr	r3, [sp, #4]
 8012bc4:	b90b      	cbnz	r3, 8012bca <enet_delay+0x10>
 8012bc6:	b002      	add	sp, #8
 8012bc8:	4770      	bx	lr
 8012bca:	9b01      	ldr	r3, [sp, #4]
 8012bcc:	3b01      	subs	r3, #1
 8012bce:	9301      	str	r3, [sp, #4]
 8012bd0:	e7f7      	b.n	8012bc2 <enet_delay+0x8>
	...

08012bd4 <enet_software_reset>:
 8012bd4:	4b07      	ldr	r3, [pc, #28]	; (8012bf4 <enet_software_reset+0x20>)
 8012bd6:	681a      	ldr	r2, [r3, #0]
 8012bd8:	f042 0201 	orr.w	r2, r2, #1
 8012bdc:	601a      	str	r2, [r3, #0]
 8012bde:	4a06      	ldr	r2, [pc, #24]	; (8012bf8 <enet_software_reset+0x24>)
 8012be0:	6819      	ldr	r1, [r3, #0]
 8012be2:	07c9      	lsls	r1, r1, #31
 8012be4:	d501      	bpl.n	8012bea <enet_software_reset+0x16>
 8012be6:	3a01      	subs	r2, #1
 8012be8:	d1fa      	bne.n	8012be0 <enet_software_reset+0xc>
 8012bea:	6818      	ldr	r0, [r3, #0]
 8012bec:	43c0      	mvns	r0, r0
 8012bee:	f000 0001 	and.w	r0, r0, #1
 8012bf2:	4770      	bx	lr
 8012bf4:	40029000 	andmi	r9, r2, r0
 8012bf8:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

08012bfc <enet_descriptors_chain_init>:
 8012bfc:	f5b0 0fe0 	cmp.w	r0, #7340032	; 0x700000
 8012c00:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012c02:	4a19      	ldr	r2, [pc, #100]	; (8012c68 <enet_descriptors_chain_init+0x6c>)
 8012c04:	d125      	bne.n	8012c52 <enet_descriptors_chain_init+0x56>
 8012c06:	2500      	movs	r5, #0
 8012c08:	f44f 1680 	mov.w	r6, #1048576	; 0x100000
 8012c0c:	2002      	movs	r0, #2
 8012c0e:	4b17      	ldr	r3, [pc, #92]	; (8012c6c <enet_descriptors_chain_init+0x70>)
 8012c10:	4c17      	ldr	r4, [pc, #92]	; (8012c70 <enet_descriptors_chain_init+0x74>)
 8012c12:	6113      	str	r3, [r2, #16]
 8012c14:	4a17      	ldr	r2, [pc, #92]	; (8012c74 <enet_descriptors_chain_init+0x78>)
 8012c16:	6013      	str	r3, [r2, #0]
 8012c18:	2200      	movs	r2, #0
 8012c1a:	f240 5ef4 	movw	lr, #1524	; 0x5f4
 8012c1e:	4916      	ldr	r1, [pc, #88]	; (8012c78 <enet_descriptors_chain_init+0x7c>)
 8012c20:	f100 3cff 	add.w	ip, r0, #4294967295	; 0xffffffff
 8012c24:	600a      	str	r2, [r1, #0]
 8012c26:	4915      	ldr	r1, [pc, #84]	; (8012c7c <enet_descriptors_chain_init+0x80>)
 8012c28:	600a      	str	r2, [r1, #0]
 8012c2a:	f103 0110 	add.w	r1, r3, #16
 8012c2e:	fb0e 4702 	mla	r7, lr, r2, r4
 8012c32:	f841 7c08 	str.w	r7, [r1, #-8]
 8012c36:	4594      	cmp	ip, r2
 8012c38:	bf94      	ite	ls
 8012c3a:	461f      	movls	r7, r3
 8012c3c:	460f      	movhi	r7, r1
 8012c3e:	3201      	adds	r2, #1
 8012c40:	4290      	cmp	r0, r2
 8012c42:	e941 6504 	strd	r6, r5, [r1, #-16]
 8012c46:	f841 7c04 	str.w	r7, [r1, #-4]
 8012c4a:	f101 0110 	add.w	r1, r1, #16
 8012c4e:	d1ee      	bne.n	8012c2e <enet_descriptors_chain_init+0x32>
 8012c50:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012c52:	4b0b      	ldr	r3, [pc, #44]	; (8012c80 <enet_descriptors_chain_init+0x84>)
 8012c54:	f244 55f4 	movw	r5, #17908	; 0x45f4
 8012c58:	60d3      	str	r3, [r2, #12]
 8012c5a:	4a0a      	ldr	r2, [pc, #40]	; (8012c84 <enet_descriptors_chain_init+0x88>)
 8012c5c:	f04f 4600 	mov.w	r6, #2147483648	; 0x80000000
 8012c60:	200a      	movs	r0, #10
 8012c62:	4c09      	ldr	r4, [pc, #36]	; (8012c88 <enet_descriptors_chain_init+0x8c>)
 8012c64:	6013      	str	r3, [r2, #0]
 8012c66:	e7d7      	b.n	8012c18 <enet_descriptors_chain_init+0x1c>
 8012c68:	40029000 	andmi	r9, r2, r0
 8012c6c:	20011ad4 	ldrdcs	r1, [r1], -r4
 8012c70:	20010eec 	andcs	r0, r1, ip, ror #29
 8012c74:	2000d284 	andcs	sp, r0, r4, lsl #5
 8012c78:	2000d278 	andcs	sp, r0, r8, ror r2
 8012c7c:	2000d27c 	andcs	sp, r0, ip, ror r2
 8012c80:	20010e4c 	andcs	r0, r1, ip, asr #28
 8012c84:	2000d280 	andcs	sp, r0, r0, lsl #5
 8012c88:	2000d2c4 	andcs	sp, r0, r4, asr #5

08012c8c <enet_frame_receive>:
 8012c8c:	4a1d      	ldr	r2, [pc, #116]	; (8012d04 <enet_frame_receive+0x78>)
 8012c8e:	b510      	push	{r4, lr}
 8012c90:	6813      	ldr	r3, [r2, #0]
 8012c92:	681b      	ldr	r3, [r3, #0]
 8012c94:	2b00      	cmp	r3, #0
 8012c96:	db33      	blt.n	8012d00 <enet_frame_receive+0x74>
 8012c98:	b970      	cbnz	r0, 8012cb8 <enet_frame_receive+0x2c>
 8012c9a:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
 8012c9e:	6813      	ldr	r3, [r2, #0]
 8012ca0:	6019      	str	r1, [r3, #0]
 8012ca2:	4919      	ldr	r1, [pc, #100]	; (8012d08 <enet_frame_receive+0x7c>)
 8012ca4:	6948      	ldr	r0, [r1, #20]
 8012ca6:	0604      	lsls	r4, r0, #24
 8012ca8:	d419      	bmi.n	8012cde <enet_frame_receive+0x52>
 8012caa:	6859      	ldr	r1, [r3, #4]
 8012cac:	0448      	lsls	r0, r1, #17
 8012cae:	d51b      	bpl.n	8012ce8 <enet_frame_receive+0x5c>
 8012cb0:	68db      	ldr	r3, [r3, #12]
 8012cb2:	2001      	movs	r0, #1
 8012cb4:	6013      	str	r3, [r2, #0]
 8012cb6:	bd10      	pop	{r4, pc}
 8012cb8:	f403 4403 	and.w	r4, r3, #33536	; 0x8300
 8012cbc:	f5b4 7f40 	cmp.w	r4, #768	; 0x300
 8012cc0:	d11e      	bne.n	8012d00 <enet_frame_receive+0x74>
 8012cc2:	f3c3 430d 	ubfx	r3, r3, #16, #14
 8012cc6:	3b04      	subs	r3, #4
 8012cc8:	428b      	cmp	r3, r1
 8012cca:	d819      	bhi.n	8012d00 <enet_frame_receive+0x74>
 8012ccc:	2100      	movs	r1, #0
 8012cce:	4299      	cmp	r1, r3
 8012cd0:	6814      	ldr	r4, [r2, #0]
 8012cd2:	d2e2      	bcs.n	8012c9a <enet_frame_receive+0xe>
 8012cd4:	68a4      	ldr	r4, [r4, #8]
 8012cd6:	5d0c      	ldrb	r4, [r1, r4]
 8012cd8:	5444      	strb	r4, [r0, r1]
 8012cda:	3101      	adds	r1, #1
 8012cdc:	e7f7      	b.n	8012cce <enet_frame_receive+0x42>
 8012cde:	2080      	movs	r0, #128	; 0x80
 8012ce0:	6148      	str	r0, [r1, #20]
 8012ce2:	2000      	movs	r0, #0
 8012ce4:	6088      	str	r0, [r1, #8]
 8012ce6:	e7e0      	b.n	8012caa <enet_frame_receive+0x1e>
 8012ce8:	f411 4f00 	tst.w	r1, #32768	; 0x8000
 8012cec:	4906      	ldr	r1, [pc, #24]	; (8012d08 <enet_frame_receive+0x7c>)
 8012cee:	bf05      	ittet	eq
 8012cf0:	3310      	addeq	r3, #16
 8012cf2:	6809      	ldreq	r1, [r1, #0]
 8012cf4:	68cb      	ldrne	r3, [r1, #12]
 8012cf6:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 8012cfa:	bf08      	it	eq
 8012cfc:	185b      	addeq	r3, r3, r1
 8012cfe:	e7d8      	b.n	8012cb2 <enet_frame_receive+0x26>
 8012d00:	2000      	movs	r0, #0
 8012d02:	e7d8      	b.n	8012cb6 <enet_frame_receive+0x2a>
 8012d04:	2000d280 	andcs	sp, r0, r0, lsl #5
 8012d08:	40029000 	andmi	r9, r2, r0

08012d0c <enet_frame_transmit>:
 8012d0c:	4a1e      	ldr	r2, [pc, #120]	; (8012d88 <enet_frame_transmit+0x7c>)
 8012d0e:	b530      	push	{r4, r5, lr}
 8012d10:	6813      	ldr	r3, [r2, #0]
 8012d12:	681b      	ldr	r3, [r3, #0]
 8012d14:	2b00      	cmp	r3, #0
 8012d16:	db34      	blt.n	8012d82 <enet_frame_transmit+0x76>
 8012d18:	f240 53f4 	movw	r3, #1524	; 0x5f4
 8012d1c:	4299      	cmp	r1, r3
 8012d1e:	d830      	bhi.n	8012d82 <enet_frame_transmit+0x76>
 8012d20:	b9e8      	cbnz	r0, 8012d5e <enet_frame_transmit+0x52>
 8012d22:	6813      	ldr	r3, [r2, #0]
 8012d24:	4819      	ldr	r0, [pc, #100]	; (8012d8c <enet_frame_transmit+0x80>)
 8012d26:	6059      	str	r1, [r3, #4]
 8012d28:	6819      	ldr	r1, [r3, #0]
 8012d2a:	f041 4130 	orr.w	r1, r1, #2952790016	; 0xb0000000
 8012d2e:	6019      	str	r1, [r3, #0]
 8012d30:	6941      	ldr	r1, [r0, #20]
 8012d32:	6944      	ldr	r4, [r0, #20]
 8012d34:	f001 0104 	and.w	r1, r1, #4
 8012d38:	f004 0420 	and.w	r4, r4, #32
 8012d3c:	4321      	orrs	r1, r4
 8012d3e:	d110      	bne.n	8012d62 <enet_frame_transmit+0x56>
 8012d40:	6819      	ldr	r1, [r3, #0]
 8012d42:	02c8      	lsls	r0, r1, #11
 8012d44:	d511      	bpl.n	8012d6a <enet_frame_transmit+0x5e>
 8012d46:	68db      	ldr	r3, [r3, #12]
 8012d48:	2001      	movs	r0, #1
 8012d4a:	6013      	str	r3, [r2, #0]
 8012d4c:	bd30      	pop	{r4, r5, pc}
 8012d4e:	5cc5      	ldrb	r5, [r0, r3]
 8012d50:	68a4      	ldr	r4, [r4, #8]
 8012d52:	551d      	strb	r5, [r3, r4]
 8012d54:	3301      	adds	r3, #1
 8012d56:	428b      	cmp	r3, r1
 8012d58:	6814      	ldr	r4, [r2, #0]
 8012d5a:	d1f8      	bne.n	8012d4e <enet_frame_transmit+0x42>
 8012d5c:	e7e1      	b.n	8012d22 <enet_frame_transmit+0x16>
 8012d5e:	2300      	movs	r3, #0
 8012d60:	e7f9      	b.n	8012d56 <enet_frame_transmit+0x4a>
 8012d62:	6141      	str	r1, [r0, #20]
 8012d64:	2100      	movs	r1, #0
 8012d66:	6041      	str	r1, [r0, #4]
 8012d68:	e7ea      	b.n	8012d40 <enet_frame_transmit+0x34>
 8012d6a:	f411 1f00 	tst.w	r1, #2097152	; 0x200000
 8012d6e:	4907      	ldr	r1, [pc, #28]	; (8012d8c <enet_frame_transmit+0x80>)
 8012d70:	bf05      	ittet	eq
 8012d72:	3310      	addeq	r3, #16
 8012d74:	6809      	ldreq	r1, [r1, #0]
 8012d76:	690b      	ldrne	r3, [r1, #16]
 8012d78:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 8012d7c:	bf08      	it	eq
 8012d7e:	185b      	addeq	r3, r3, r1
 8012d80:	e7e2      	b.n	8012d48 <enet_frame_transmit+0x3c>
 8012d82:	2000      	movs	r0, #0
 8012d84:	e7e2      	b.n	8012d4c <enet_frame_transmit+0x40>
 8012d86:	bf00      	nop
 8012d88:	2000d284 	andcs	sp, r0, r4, lsl #5
 8012d8c:	40029000 	andmi	r9, r2, r0

08012d90 <enet_transmit_checksum_config>:
 8012d90:	6803      	ldr	r3, [r0, #0]
 8012d92:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 8012d96:	430b      	orrs	r3, r1
 8012d98:	6003      	str	r3, [r0, #0]
 8012d9a:	4770      	bx	lr

08012d9c <enet_mac_address_set>:
 8012d9c:	888a      	ldrh	r2, [r1, #4]
 8012d9e:	4b03      	ldr	r3, [pc, #12]	; (8012dac <enet_mac_address_set+0x10>)
 8012da0:	50c2      	str	r2, [r0, r3]
 8012da2:	680a      	ldr	r2, [r1, #0]
 8012da4:	3304      	adds	r3, #4
 8012da6:	50c2      	str	r2, [r0, r3]
 8012da8:	4770      	bx	lr
 8012daa:	bf00      	nop
 8012dac:	40028040 	andmi	r8, r2, r0, asr #32

08012db0 <enet_rx_enable>:
 8012db0:	4a05      	ldr	r2, [pc, #20]	; (8012dc8 <enet_rx_enable+0x18>)
 8012db2:	6813      	ldr	r3, [r2, #0]
 8012db4:	f043 0304 	orr.w	r3, r3, #4
 8012db8:	6013      	str	r3, [r2, #0]
 8012dba:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 8012dbe:	6993      	ldr	r3, [r2, #24]
 8012dc0:	f043 0302 	orr.w	r3, r3, #2
 8012dc4:	6193      	str	r3, [r2, #24]
 8012dc6:	4770      	bx	lr
 8012dc8:	40028000 	andmi	r8, r2, r0

08012dcc <enet_phy_write_read>:
 8012dcc:	b530      	push	{r4, r5, lr}
 8012dce:	4604      	mov	r4, r0
 8012dd0:	4d13      	ldr	r5, [pc, #76]	; (8012e20 <enet_phy_write_read+0x54>)
 8012dd2:	0192      	lsls	r2, r2, #6
 8012dd4:	6928      	ldr	r0, [r5, #16]
 8012dd6:	f402 62f8 	and.w	r2, r2, #1984	; 0x7c0
 8012dda:	f420 407f 	bic.w	r0, r0, #65280	; 0xff00
 8012dde:	f020 00c3 	bic.w	r0, r0, #195	; 0xc3
 8012de2:	4302      	orrs	r2, r0
 8012de4:	02c9      	lsls	r1, r1, #11
 8012de6:	b289      	uxth	r1, r1
 8012de8:	2c02      	cmp	r4, #2
 8012dea:	ea42 0204 	orr.w	r2, r2, r4
 8012dee:	ea42 0201 	orr.w	r2, r2, r1
 8012df2:	bf08      	it	eq
 8012df4:	8819      	ldrheq	r1, [r3, #0]
 8012df6:	f042 0201 	orr.w	r2, r2, #1
 8012dfa:	bf08      	it	eq
 8012dfc:	6169      	streq	r1, [r5, #20]
 8012dfe:	612a      	str	r2, [r5, #16]
 8012e00:	4907      	ldr	r1, [pc, #28]	; (8012e20 <enet_phy_write_read+0x54>)
 8012e02:	4a08      	ldr	r2, [pc, #32]	; (8012e24 <enet_phy_write_read+0x58>)
 8012e04:	6908      	ldr	r0, [r1, #16]
 8012e06:	07c0      	lsls	r0, r0, #31
 8012e08:	d501      	bpl.n	8012e0e <enet_phy_write_read+0x42>
 8012e0a:	3a01      	subs	r2, #1
 8012e0c:	d1fa      	bne.n	8012e04 <enet_phy_write_read+0x38>
 8012e0e:	690a      	ldr	r2, [r1, #16]
 8012e10:	43d2      	mvns	r2, r2
 8012e12:	f002 0001 	and.w	r0, r2, #1
 8012e16:	b90c      	cbnz	r4, 8012e1c <enet_phy_write_read+0x50>
 8012e18:	694a      	ldr	r2, [r1, #20]
 8012e1a:	801a      	strh	r2, [r3, #0]
 8012e1c:	bd30      	pop	{r4, r5, pc}
 8012e1e:	bf00      	nop
 8012e20:	40028000 	andmi	r8, r2, r0
 8012e24:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

08012e28 <enet_phy_config>:
 8012e28:	4b22      	ldr	r3, [pc, #136]	; (8012eb4 <enet_phy_config+0x8c>)
 8012e2a:	b513      	push	{r0, r1, r4, lr}
 8012e2c:	2001      	movs	r0, #1
 8012e2e:	691c      	ldr	r4, [r3, #16]
 8012e30:	f7fe feec 	bl	8011c0c <rcu_clock_freq_get>
 8012e34:	4b20      	ldr	r3, [pc, #128]	; (8012eb8 <enet_phy_config+0x90>)
 8012e36:	4a21      	ldr	r2, [pc, #132]	; (8012ebc <enet_phy_config+0x94>)
 8012e38:	4403      	add	r3, r0
 8012e3a:	4293      	cmp	r3, r2
 8012e3c:	f024 041c 	bic.w	r4, r4, #28
 8012e40:	d220      	bcs.n	8012e84 <enet_phy_config+0x5c>
 8012e42:	f044 0408 	orr.w	r4, r4, #8
 8012e46:	4b1b      	ldr	r3, [pc, #108]	; (8012eb4 <enet_phy_config+0x8c>)
 8012e48:	2200      	movs	r2, #0
 8012e4a:	611c      	str	r4, [r3, #16]
 8012e4c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8012e50:	2101      	movs	r1, #1
 8012e52:	f8ad 3006 	strh.w	r3, [sp, #6]
 8012e56:	2002      	movs	r0, #2
 8012e58:	f10d 0306 	add.w	r3, sp, #6
 8012e5c:	f7ff ffb6 	bl	8012dcc <enet_phy_write_read>
 8012e60:	b310      	cbz	r0, 8012ea8 <enet_phy_config+0x80>
 8012e62:	2200      	movs	r2, #0
 8012e64:	4816      	ldr	r0, [pc, #88]	; (8012ec0 <enet_phy_config+0x98>)
 8012e66:	f7ff fea8 	bl	8012bba <enet_delay>
 8012e6a:	2101      	movs	r1, #1
 8012e6c:	4610      	mov	r0, r2
 8012e6e:	f10d 0306 	add.w	r3, sp, #6
 8012e72:	f7ff ffab 	bl	8012dcc <enet_phy_write_read>
 8012e76:	b1b8      	cbz	r0, 8012ea8 <enet_phy_config+0x80>
 8012e78:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8012e7c:	43c0      	mvns	r0, r0
 8012e7e:	f3c0 30c0 	ubfx	r0, r0, #15, #1
 8012e82:	e012      	b.n	8012eaa <enet_phy_config+0x82>
 8012e84:	4b0f      	ldr	r3, [pc, #60]	; (8012ec4 <enet_phy_config+0x9c>)
 8012e86:	4a10      	ldr	r2, [pc, #64]	; (8012ec8 <enet_phy_config+0xa0>)
 8012e88:	4403      	add	r3, r0
 8012e8a:	4293      	cmp	r3, r2
 8012e8c:	d802      	bhi.n	8012e94 <enet_phy_config+0x6c>
 8012e8e:	f044 040c 	orr.w	r4, r4, #12
 8012e92:	e7d8      	b.n	8012e46 <enet_phy_config+0x1e>
 8012e94:	4b0d      	ldr	r3, [pc, #52]	; (8012ecc <enet_phy_config+0xa4>)
 8012e96:	4a0e      	ldr	r2, [pc, #56]	; (8012ed0 <enet_phy_config+0xa8>)
 8012e98:	4403      	add	r3, r0
 8012e9a:	4293      	cmp	r3, r2
 8012e9c:	d3d3      	bcc.n	8012e46 <enet_phy_config+0x1e>
 8012e9e:	4b0d      	ldr	r3, [pc, #52]	; (8012ed4 <enet_phy_config+0xac>)
 8012ea0:	4a0d      	ldr	r2, [pc, #52]	; (8012ed8 <enet_phy_config+0xb0>)
 8012ea2:	4403      	add	r3, r0
 8012ea4:	4293      	cmp	r3, r2
 8012ea6:	d902      	bls.n	8012eae <enet_phy_config+0x86>
 8012ea8:	2000      	movs	r0, #0
 8012eaa:	b002      	add	sp, #8
 8012eac:	bd10      	pop	{r4, pc}
 8012eae:	f044 0404 	orr.w	r4, r4, #4
 8012eb2:	e7c8      	b.n	8012e46 <enet_phy_config+0x1e>
 8012eb4:	40028000 	andmi	r8, r2, r0
 8012eb8:	feced300 	cdp2	3, 12, cr13, cr14, cr0, {0}
 8012ebc:	00e4e1c0 	rsceq	lr, r4, r0, asr #3
 8012ec0:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 8012ec4:	fde9f140 	stc2l	1, cr15, [r9, #256]!	; 0x100
 8012ec8:	017d783f 	cmneq	sp, pc, lsr r8
 8012ecc:	fc6c7900 	stc2l	9, cr7, [ip], #-0	; <UNPREDICTABLE>
 8012ed0:	02625a00 	rsbeq	r5, r2, #0, 20
 8012ed4:	fa0a1f00 	blx	829aadc <__exidx_end+0x285768>
 8012ed8:	01312d00 	teqeq	r1, r0, lsl #26

08012edc <enet_init>:
 8012edc:	2300      	movs	r3, #0
 8012ede:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8012ee0:	4604      	mov	r4, r0
 8012ee2:	460d      	mov	r5, r1
 8012ee4:	4616      	mov	r6, r2
 8012ee6:	f8ad 3006 	strh.w	r3, [sp, #6]
 8012eea:	f7ff ff9d 	bl	8012e28 <enet_phy_config>
 8012eee:	2800      	cmp	r0, #0
 8012ef0:	d039      	beq.n	8012f66 <enet_init+0x8a>
 8012ef2:	4b3c      	ldr	r3, [pc, #240]	; (8012fe4 <enet_init+0x108>)
 8012ef4:	4a3c      	ldr	r2, [pc, #240]	; (8012fe8 <enet_init+0x10c>)
 8012ef6:	6819      	ldr	r1, [r3, #0]
 8012ef8:	f44f 50a8 	mov.w	r0, #5376	; 0x1500
 8012efc:	400a      	ands	r2, r1
 8012efe:	601a      	str	r2, [r3, #0]
 8012f00:	2200      	movs	r2, #0
 8012f02:	605a      	str	r2, [r3, #4]
 8012f04:	609a      	str	r2, [r3, #8]
 8012f06:	60da      	str	r2, [r3, #12]
 8012f08:	6999      	ldr	r1, [r3, #24]
 8012f0a:	2c01      	cmp	r4, #1
 8012f0c:	f021 01be 	bic.w	r1, r1, #190	; 0xbe
 8012f10:	ea4f 4101 	mov.w	r1, r1, lsl #16
 8012f14:	ea4f 4111 	mov.w	r1, r1, lsr #16
 8012f18:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8012f1c:	6199      	str	r1, [r3, #24]
 8012f1e:	4933      	ldr	r1, [pc, #204]	; (8012fec <enet_init+0x110>)
 8012f20:	f8c1 0080 	str.w	r0, [r1, #128]	; 0x80
 8012f24:	61da      	str	r2, [r3, #28]
 8012f26:	6988      	ldr	r0, [r1, #24]
 8012f28:	4b31      	ldr	r3, [pc, #196]	; (8012ff0 <enet_init+0x114>)
 8012f2a:	ea03 0300 	and.w	r3, r3, r0
 8012f2e:	f043 7308 	orr.w	r3, r3, #35651584	; 0x2200000
 8012f32:	618b      	str	r3, [r1, #24]
 8012f34:	680b      	ldr	r3, [r1, #0]
 8012f36:	4b2f      	ldr	r3, [pc, #188]	; (8012ff4 <enet_init+0x118>)
 8012f38:	600b      	str	r3, [r1, #0]
 8012f3a:	d01e      	beq.n	8012f7a <enet_init+0x9e>
 8012f3c:	08e3      	lsrs	r3, r4, #3
 8012f3e:	0861      	lsrs	r1, r4, #1
 8012f40:	f401 5100 	and.w	r1, r1, #8192	; 0x2000
 8012f44:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8012f48:	430b      	orrs	r3, r1
 8012f4a:	f8ad 3006 	strh.w	r3, [sp, #6]
 8012f4e:	2101      	movs	r1, #1
 8012f50:	2002      	movs	r0, #2
 8012f52:	f10d 0306 	add.w	r3, sp, #6
 8012f56:	f7ff ff39 	bl	8012dcc <enet_phy_write_read>
 8012f5a:	b158      	cbz	r0, 8012f74 <enet_init+0x98>
 8012f5c:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 8012f60:	f7ff fe2b 	bl	8012bba <enet_delay>
 8012f64:	e05f      	b.n	8013026 <enet_init+0x14a>
 8012f66:	4824      	ldr	r0, [pc, #144]	; (8012ff8 <enet_init+0x11c>)
 8012f68:	f7ff fe27 	bl	8012bba <enet_delay>
 8012f6c:	f7ff ff5c 	bl	8012e28 <enet_phy_config>
 8012f70:	2800      	cmp	r0, #0
 8012f72:	d1be      	bne.n	8012ef2 <enet_init+0x16>
 8012f74:	2000      	movs	r0, #0
 8012f76:	b003      	add	sp, #12
 8012f78:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012f7a:	4614      	mov	r4, r2
 8012f7c:	4f1f      	ldr	r7, [pc, #124]	; (8012ffc <enet_init+0x120>)
 8012f7e:	2201      	movs	r2, #1
 8012f80:	2000      	movs	r0, #0
 8012f82:	4611      	mov	r1, r2
 8012f84:	f10d 0306 	add.w	r3, sp, #6
 8012f88:	f7ff ff20 	bl	8012dcc <enet_phy_write_read>
 8012f8c:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8012f90:	3401      	adds	r4, #1
 8012f92:	f002 0204 	and.w	r2, r2, #4
 8012f96:	f8ad 2006 	strh.w	r2, [sp, #6]
 8012f9a:	b912      	cbnz	r2, 8012fa2 <enet_init+0xc6>
 8012f9c:	42bc      	cmp	r4, r7
 8012f9e:	d1ee      	bne.n	8012f7e <enet_init+0xa2>
 8012fa0:	e7e8      	b.n	8012f74 <enet_init+0x98>
 8012fa2:	42bc      	cmp	r4, r7
 8012fa4:	d0e6      	beq.n	8012f74 <enet_init+0x98>
 8012fa6:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8012faa:	2101      	movs	r1, #1
 8012fac:	f8ad 2006 	strh.w	r2, [sp, #6]
 8012fb0:	2002      	movs	r0, #2
 8012fb2:	2200      	movs	r2, #0
 8012fb4:	f7ff ff0a 	bl	8012dcc <enet_phy_write_read>
 8012fb8:	2800      	cmp	r0, #0
 8012fba:	d0db      	beq.n	8012f74 <enet_init+0x98>
 8012fbc:	2400      	movs	r4, #0
 8012fbe:	4f0f      	ldr	r7, [pc, #60]	; (8012ffc <enet_init+0x120>)
 8012fc0:	2201      	movs	r2, #1
 8012fc2:	2000      	movs	r0, #0
 8012fc4:	4611      	mov	r1, r2
 8012fc6:	f10d 0306 	add.w	r3, sp, #6
 8012fca:	f7ff feff 	bl	8012dcc <enet_phy_write_read>
 8012fce:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8012fd2:	3401      	adds	r4, #1
 8012fd4:	f002 0220 	and.w	r2, r2, #32
 8012fd8:	f8ad 2006 	strh.w	r2, [sp, #6]
 8012fdc:	b982      	cbnz	r2, 8013000 <enet_init+0x124>
 8012fde:	42bc      	cmp	r4, r7
 8012fe0:	d1ee      	bne.n	8012fc0 <enet_init+0xe4>
 8012fe2:	e7c7      	b.n	8012f74 <enet_init+0x98>
 8012fe4:	40028000 	andmi	r8, r2, r0
 8012fe8:	fd30810f 	ldc2	1, cr8, [r0, #-60]!	; 0xffffffc4
 8012fec:	40029000 	andmi	r9, r2, r0
 8012ff0:	f8de3f23 			; <UNDEFINED> instruction: 0xf8de3f23
 8012ff4:	02c16000 	sbceq	r6, r1, #0
 8012ff8:	008fffff 	strdeq	pc, [pc], pc	; <UNPREDICTABLE>
 8012ffc:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 8013000:	42bc      	cmp	r4, r7
 8013002:	d0b7      	beq.n	8012f74 <enet_init+0x98>
 8013004:	2101      	movs	r1, #1
 8013006:	2210      	movs	r2, #16
 8013008:	2000      	movs	r0, #0
 801300a:	f7ff fedf 	bl	8012dcc <enet_phy_write_read>
 801300e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8013012:	f013 0f04 	tst.w	r3, #4
 8013016:	bf14      	ite	ne
 8013018:	f44f 6400 	movne.w	r4, #2048	; 0x800
 801301c:	2400      	moveq	r4, #0
 801301e:	0799      	lsls	r1, r3, #30
 8013020:	d401      	bmi.n	8013026 <enet_init+0x14a>
 8013022:	f444 4480 	orr.w	r4, r4, #16384	; 0x4000
 8013026:	4b64      	ldr	r3, [pc, #400]	; (80131b8 <enet_init+0x2dc>)
 8013028:	056a      	lsls	r2, r5, #21
 801302a:	6818      	ldr	r0, [r3, #0]
 801302c:	f420 40b0 	bic.w	r0, r0, #22528	; 0x5800
 8013030:	ea44 0400 	orr.w	r4, r4, r0
 8013034:	601c      	str	r4, [r3, #0]
 8013036:	d50c      	bpl.n	8013052 <enet_init+0x176>
 8013038:	681a      	ldr	r2, [r3, #0]
 801303a:	f005 6580 	and.w	r5, r5, #67108864	; 0x4000000
 801303e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8013042:	601a      	str	r2, [r3, #0]
 8013044:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8013048:	6999      	ldr	r1, [r3, #24]
 801304a:	f021 6180 	bic.w	r1, r1, #67108864	; 0x4000000
 801304e:	430d      	orrs	r5, r1
 8013050:	619d      	str	r5, [r3, #24]
 8013052:	4959      	ldr	r1, [pc, #356]	; (80131b8 <enet_init+0x2dc>)
 8013054:	4b59      	ldr	r3, [pc, #356]	; (80131bc <enet_init+0x2e0>)
 8013056:	684a      	ldr	r2, [r1, #4]
 8013058:	4316      	orrs	r6, r2
 801305a:	604e      	str	r6, [r1, #4]
 801305c:	681a      	ldr	r2, [r3, #0]
 801305e:	07d7      	lsls	r7, r2, #31
 8013060:	d510      	bpl.n	8013084 <enet_init+0x1a8>
 8013062:	685a      	ldr	r2, [r3, #4]
 8013064:	680c      	ldr	r4, [r1, #0]
 8013066:	f002 0080 	and.w	r0, r2, #128	; 0x80
 801306a:	f024 0480 	bic.w	r4, r4, #128	; 0x80
 801306e:	4320      	orrs	r0, r4
 8013070:	6008      	str	r0, [r1, #0]
 8013072:	4853      	ldr	r0, [pc, #332]	; (80131c0 <enet_init+0x2e4>)
 8013074:	0892      	lsrs	r2, r2, #2
 8013076:	6981      	ldr	r1, [r0, #24]
 8013078:	f002 02c0 	and.w	r2, r2, #192	; 0xc0
 801307c:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8013080:	430a      	orrs	r2, r1
 8013082:	6182      	str	r2, [r0, #24]
 8013084:	681a      	ldr	r2, [r3, #0]
 8013086:	0796      	lsls	r6, r2, #30
 8013088:	d508      	bpl.n	801309c <enet_init+0x1c0>
 801308a:	494d      	ldr	r1, [pc, #308]	; (80131c0 <enet_init+0x2e4>)
 801308c:	6898      	ldr	r0, [r3, #8]
 801308e:	680a      	ldr	r2, [r1, #0]
 8013090:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 8013094:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8013098:	4302      	orrs	r2, r0
 801309a:	600a      	str	r2, [r1, #0]
 801309c:	681a      	ldr	r2, [r3, #0]
 801309e:	0755      	lsls	r5, r2, #29
 80130a0:	d508      	bpl.n	80130b4 <enet_init+0x1d8>
 80130a2:	4947      	ldr	r1, [pc, #284]	; (80131c0 <enet_init+0x2e4>)
 80130a4:	68d8      	ldr	r0, [r3, #12]
 80130a6:	680a      	ldr	r2, [r1, #0]
 80130a8:	f422 027e 	bic.w	r2, r2, #16646144	; 0xfe0000
 80130ac:	f422 527c 	bic.w	r2, r2, #16128	; 0x3f00
 80130b0:	4302      	orrs	r2, r0
 80130b2:	600a      	str	r2, [r1, #0]
 80130b4:	681a      	ldr	r2, [r3, #0]
 80130b6:	0714      	lsls	r4, r2, #28
 80130b8:	d508      	bpl.n	80130cc <enet_init+0x1f0>
 80130ba:	4941      	ldr	r1, [pc, #260]	; (80131c0 <enet_init+0x2e4>)
 80130bc:	6918      	ldr	r0, [r3, #16]
 80130be:	680a      	ldr	r2, [r1, #0]
 80130c0:	f422 4240 	bic.w	r2, r2, #49152	; 0xc000
 80130c4:	f022 0202 	bic.w	r2, r2, #2
 80130c8:	4302      	orrs	r2, r0
 80130ca:	600a      	str	r2, [r1, #0]
 80130cc:	681a      	ldr	r2, [r3, #0]
 80130ce:	06d0      	lsls	r0, r2, #27
 80130d0:	d506      	bpl.n	80130e0 <enet_init+0x204>
 80130d2:	493b      	ldr	r1, [pc, #236]	; (80131c0 <enet_init+0x2e4>)
 80130d4:	4a3b      	ldr	r2, [pc, #236]	; (80131c4 <enet_init+0x2e8>)
 80130d6:	6988      	ldr	r0, [r1, #24]
 80130d8:	4002      	ands	r2, r0
 80130da:	6958      	ldr	r0, [r3, #20]
 80130dc:	4302      	orrs	r2, r0
 80130de:	618a      	str	r2, [r1, #24]
 80130e0:	681a      	ldr	r2, [r3, #0]
 80130e2:	0691      	lsls	r1, r2, #26
 80130e4:	d508      	bpl.n	80130f8 <enet_init+0x21c>
 80130e6:	4936      	ldr	r1, [pc, #216]	; (80131c0 <enet_init+0x2e4>)
 80130e8:	6998      	ldr	r0, [r3, #24]
 80130ea:	698a      	ldr	r2, [r1, #24]
 80130ec:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
 80130f0:	f022 0204 	bic.w	r2, r2, #4
 80130f4:	4302      	orrs	r2, r0
 80130f6:	618a      	str	r2, [r1, #24]
 80130f8:	681a      	ldr	r2, [r3, #0]
 80130fa:	0652      	lsls	r2, r2, #25
 80130fc:	d506      	bpl.n	801310c <enet_init+0x230>
 80130fe:	492e      	ldr	r1, [pc, #184]	; (80131b8 <enet_init+0x2dc>)
 8013100:	69d8      	ldr	r0, [r3, #28]
 8013102:	69ca      	ldr	r2, [r1, #28]
 8013104:	0c52      	lsrs	r2, r2, #17
 8013106:	0452      	lsls	r2, r2, #17
 8013108:	4302      	orrs	r2, r0
 801310a:	61ca      	str	r2, [r1, #28]
 801310c:	681a      	ldr	r2, [r3, #0]
 801310e:	0617      	lsls	r7, r2, #24
 8013110:	d517      	bpl.n	8013142 <enet_init+0x266>
 8013112:	4c29      	ldr	r4, [pc, #164]	; (80131b8 <enet_init+0x2dc>)
 8013114:	6a1a      	ldr	r2, [r3, #32]
 8013116:	69a0      	ldr	r0, [r4, #24]
 8013118:	f422 417f 	bic.w	r1, r2, #65280	; 0xff00
 801311c:	f020 00be 	bic.w	r0, r0, #190	; 0xbe
 8013120:	0400      	lsls	r0, r0, #16
 8013122:	0c00      	lsrs	r0, r0, #16
 8013124:	f021 0141 	bic.w	r1, r1, #65	; 0x41
 8013128:	4301      	orrs	r1, r0
 801312a:	4825      	ldr	r0, [pc, #148]	; (80131c0 <enet_init+0x2e4>)
 801312c:	61a1      	str	r1, [r4, #24]
 801312e:	f8d0 1080 	ldr.w	r1, [r0, #128]	; 0x80
 8013132:	0a12      	lsrs	r2, r2, #8
 8013134:	f021 0177 	bic.w	r1, r1, #119	; 0x77
 8013138:	f002 0277 	and.w	r2, r2, #119	; 0x77
 801313c:	430a      	orrs	r2, r1
 801313e:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 8013142:	681a      	ldr	r2, [r3, #0]
 8013144:	05d6      	lsls	r6, r2, #23
 8013146:	bf42      	ittt	mi
 8013148:	6a59      	ldrmi	r1, [r3, #36]	; 0x24
 801314a:	4a1b      	ldrmi	r2, [pc, #108]	; (80131b8 <enet_init+0x2dc>)
 801314c:	6091      	strmi	r1, [r2, #8]
 801314e:	681a      	ldr	r2, [r3, #0]
 8013150:	0595      	lsls	r5, r2, #22
 8013152:	bf42      	ittt	mi
 8013154:	4a18      	ldrmi	r2, [pc, #96]	; (80131b8 <enet_init+0x2dc>)
 8013156:	6a99      	ldrmi	r1, [r3, #40]	; 0x28
 8013158:	60d1      	strmi	r1, [r2, #12]
 801315a:	681a      	ldr	r2, [r3, #0]
 801315c:	0554      	lsls	r4, r2, #21
 801315e:	d508      	bpl.n	8013172 <enet_init+0x296>
 8013160:	4915      	ldr	r1, [pc, #84]	; (80131b8 <enet_init+0x2dc>)
 8013162:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 8013164:	684a      	ldr	r2, [r1, #4]
 8013166:	f422 62fb 	bic.w	r2, r2, #2008	; 0x7d8
 801316a:	f022 0206 	bic.w	r2, r2, #6
 801316e:	4302      	orrs	r2, r0
 8013170:	604a      	str	r2, [r1, #4]
 8013172:	681a      	ldr	r2, [r3, #0]
 8013174:	0510      	lsls	r0, r2, #20
 8013176:	d508      	bpl.n	801318a <enet_init+0x2ae>
 8013178:	490f      	ldr	r1, [pc, #60]	; (80131b8 <enet_init+0x2dc>)
 801317a:	6b18      	ldr	r0, [r3, #48]	; 0x30
 801317c:	680a      	ldr	r2, [r1, #0]
 801317e:	f422 3291 	bic.w	r2, r2, #74240	; 0x12200
 8013182:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8013186:	4302      	orrs	r2, r0
 8013188:	600a      	str	r2, [r1, #0]
 801318a:	681a      	ldr	r2, [r3, #0]
 801318c:	04d1      	lsls	r1, r2, #19
 801318e:	d506      	bpl.n	801319e <enet_init+0x2c2>
 8013190:	4909      	ldr	r1, [pc, #36]	; (80131b8 <enet_init+0x2dc>)
 8013192:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8013194:	680a      	ldr	r2, [r1, #0]
 8013196:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 801319a:	4302      	orrs	r2, r0
 801319c:	600a      	str	r2, [r1, #0]
 801319e:	681a      	ldr	r2, [r3, #0]
 80131a0:	0492      	lsls	r2, r2, #18
 80131a2:	d506      	bpl.n	80131b2 <enet_init+0x2d6>
 80131a4:	4904      	ldr	r1, [pc, #16]	; (80131b8 <enet_init+0x2dc>)
 80131a6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80131a8:	680a      	ldr	r2, [r1, #0]
 80131aa:	f422 2260 	bic.w	r2, r2, #917504	; 0xe0000
 80131ae:	4313      	orrs	r3, r2
 80131b0:	600b      	str	r3, [r1, #0]
 80131b2:	2001      	movs	r0, #1
 80131b4:	e6df      	b.n	8012f76 <enet_init+0x9a>
 80131b6:	bf00      	nop
 80131b8:	40028000 	andmi	r8, r2, r0
 80131bc:	2000d288 	andcs	sp, r0, r8, lsl #5
 80131c0:	40029000 	andmi	r9, r2, r0
 80131c4:	fdde3fe7 	ldc2l	15, cr3, [lr, #924]	; 0x39c

080131c8 <enet_txfifo_flush>:
 80131c8:	4b06      	ldr	r3, [pc, #24]	; (80131e4 <enet_txfifo_flush+0x1c>)
 80131ca:	4807      	ldr	r0, [pc, #28]	; (80131e8 <enet_txfifo_flush+0x20>)
 80131cc:	699a      	ldr	r2, [r3, #24]
 80131ce:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 80131d2:	619a      	str	r2, [r3, #24]
 80131d4:	699a      	ldr	r2, [r3, #24]
 80131d6:	02d2      	lsls	r2, r2, #11
 80131d8:	d502      	bpl.n	80131e0 <enet_txfifo_flush+0x18>
 80131da:	3801      	subs	r0, #1
 80131dc:	d1fa      	bne.n	80131d4 <enet_txfifo_flush+0xc>
 80131de:	4770      	bx	lr
 80131e0:	2001      	movs	r0, #1
 80131e2:	4770      	bx	lr
 80131e4:	40029000 	andmi	r9, r2, r0
 80131e8:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

080131ec <enet_tx_enable>:
 80131ec:	4a06      	ldr	r2, [pc, #24]	; (8013208 <enet_tx_enable+0x1c>)
 80131ee:	b508      	push	{r3, lr}
 80131f0:	6813      	ldr	r3, [r2, #0]
 80131f2:	f043 0308 	orr.w	r3, r3, #8
 80131f6:	6013      	str	r3, [r2, #0]
 80131f8:	f7ff ffe6 	bl	80131c8 <enet_txfifo_flush>
 80131fc:	4a03      	ldr	r2, [pc, #12]	; (801320c <enet_tx_enable+0x20>)
 80131fe:	6993      	ldr	r3, [r2, #24]
 8013200:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8013204:	6193      	str	r3, [r2, #24]
 8013206:	bd08      	pop	{r3, pc}
 8013208:	40028000 	andmi	r8, r2, r0
 801320c:	40029000 	andmi	r9, r2, r0

08013210 <enet_enable>:
 8013210:	b508      	push	{r3, lr}
 8013212:	f7ff ffeb 	bl	80131ec <enet_tx_enable>
 8013216:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801321a:	f7ff bdc9 	b.w	8012db0 <enet_rx_enable>

0801321e <enet_desc_information_get>:
 801321e:	2905      	cmp	r1, #5
 8013220:	d817      	bhi.n	8013252 <enet_desc_information_get+0x34>
 8013222:	e8df f001 	tbb	[pc, r1]
 8013226:	03091012 	movweq	r1, #36882	; 0x9012
 801322a:	68401007 	stmdavs	r0, {r0, r1, r2, ip}^
 801322e:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8013232:	4770      	bx	lr
 8013234:	88c0      	ldrh	r0, [r0, #6]
 8013236:	e7fa      	b.n	801322e <enet_desc_information_get+0x10>
 8013238:	8840      	ldrh	r0, [r0, #2]
 801323a:	f3c0 000d 	ubfx	r0, r0, #0, #14
 801323e:	2804      	cmp	r0, #4
 8013240:	d90a      	bls.n	8013258 <enet_desc_information_get+0x3a>
 8013242:	3804      	subs	r0, #4
 8013244:	4770      	bx	lr
 8013246:	6880      	ldr	r0, [r0, #8]
 8013248:	4770      	bx	lr
 801324a:	6800      	ldr	r0, [r0, #0]
 801324c:	f3c0 00c3 	ubfx	r0, r0, #3, #4
 8013250:	4770      	bx	lr
 8013252:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8013256:	4770      	bx	lr
 8013258:	2000      	movs	r0, #0
 801325a:	4770      	bx	lr

0801325c <enet_rxframe_drop>:
 801325c:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8013260:	4814      	ldr	r0, [pc, #80]	; (80132b4 <enet_rxframe_drop+0x58>)
 8013262:	b510      	push	{r4, lr}
 8013264:	6802      	ldr	r2, [r0, #0]
 8013266:	4914      	ldr	r1, [pc, #80]	; (80132b8 <enet_rxframe_drop+0x5c>)
 8013268:	6854      	ldr	r4, [r2, #4]
 801326a:	6013      	str	r3, [r2, #0]
 801326c:	f414 4f80 	tst.w	r4, #16384	; 0x4000
 8013270:	680b      	ldr	r3, [r1, #0]
 8013272:	d009      	beq.n	8013288 <enet_rxframe_drop+0x2c>
 8013274:	b12b      	cbz	r3, 8013282 <enet_rxframe_drop+0x26>
 8013276:	68da      	ldr	r2, [r3, #12]
 8013278:	6002      	str	r2, [r0, #0]
 801327a:	681a      	ldr	r2, [r3, #0]
 801327c:	b1ba      	cbz	r2, 80132ae <enet_rxframe_drop+0x52>
 801327e:	600a      	str	r2, [r1, #0]
 8013280:	bd10      	pop	{r4, pc}
 8013282:	68d3      	ldr	r3, [r2, #12]
 8013284:	6003      	str	r3, [r0, #0]
 8013286:	e7fb      	b.n	8013280 <enet_rxframe_drop+0x24>
 8013288:	f414 4f00 	tst.w	r4, #32768	; 0x8000
 801328c:	4c0b      	ldr	r4, [pc, #44]	; (80132bc <enet_rxframe_drop+0x60>)
 801328e:	d006      	beq.n	801329e <enet_rxframe_drop+0x42>
 8013290:	68e2      	ldr	r2, [r4, #12]
 8013292:	6002      	str	r2, [r0, #0]
 8013294:	2b00      	cmp	r3, #0
 8013296:	d0f3      	beq.n	8013280 <enet_rxframe_drop+0x24>
 8013298:	681b      	ldr	r3, [r3, #0]
 801329a:	600b      	str	r3, [r1, #0]
 801329c:	e7f0      	b.n	8013280 <enet_rxframe_drop+0x24>
 801329e:	6824      	ldr	r4, [r4, #0]
 80132a0:	3210      	adds	r2, #16
 80132a2:	f3c4 0484 	ubfx	r4, r4, #2, #5
 80132a6:	4422      	add	r2, r4
 80132a8:	6002      	str	r2, [r0, #0]
 80132aa:	2b00      	cmp	r3, #0
 80132ac:	d0e8      	beq.n	8013280 <enet_rxframe_drop+0x24>
 80132ae:	3310      	adds	r3, #16
 80132b0:	e7f3      	b.n	801329a <enet_rxframe_drop+0x3e>
 80132b2:	bf00      	nop
 80132b4:	2000d280 	andcs	sp, r0, r0, lsl #5
 80132b8:	2000d278 	andcs	sp, r0, r8, ror r2
 80132bc:	40029000 	andmi	r9, r2, r0

080132c0 <enet_rxframe_size_get>:
 80132c0:	b508      	push	{r3, lr}
 80132c2:	4b0c      	ldr	r3, [pc, #48]	; (80132f4 <enet_rxframe_size_get+0x34>)
 80132c4:	681b      	ldr	r3, [r3, #0]
 80132c6:	6818      	ldr	r0, [r3, #0]
 80132c8:	2800      	cmp	r0, #0
 80132ca:	db10      	blt.n	80132ee <enet_rxframe_size_get+0x2e>
 80132cc:	f400 4303 	and.w	r3, r0, #33536	; 0x8300
 80132d0:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80132d4:	d003      	beq.n	80132de <enet_rxframe_size_get+0x1e>
 80132d6:	f7ff ffc1 	bl	801325c <enet_rxframe_drop>
 80132da:	2001      	movs	r0, #1
 80132dc:	bd08      	pop	{r3, pc}
 80132de:	f000 0321 	and.w	r3, r0, #33	; 0x21
 80132e2:	2b21      	cmp	r3, #33	; 0x21
 80132e4:	d0f7      	beq.n	80132d6 <enet_rxframe_size_get+0x16>
 80132e6:	f3c0 400d 	ubfx	r0, r0, #16, #14
 80132ea:	3804      	subs	r0, #4
 80132ec:	e7f6      	b.n	80132dc <enet_rxframe_size_get+0x1c>
 80132ee:	2000      	movs	r0, #0
 80132f0:	e7f4      	b.n	80132dc <enet_rxframe_size_get+0x1c>
 80132f2:	bf00      	nop
 80132f4:	2000d280 	andcs	sp, r0, r0, lsl #5

080132f8 <enet_initpara_reset>:
 80132f8:	2200      	movs	r2, #0
 80132fa:	4b08      	ldr	r3, [pc, #32]	; (801331c <enet_initpara_reset+0x24>)
 80132fc:	e9c3 2200 	strd	r2, r2, [r3]
 8013300:	e9c3 2202 	strd	r2, r2, [r3, #8]
 8013304:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8013308:	e9c3 2206 	strd	r2, r2, [r3, #24]
 801330c:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8013310:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 8013314:	e9c3 220c 	strd	r2, r2, [r3, #48]	; 0x30
 8013318:	639a      	str	r2, [r3, #56]	; 0x38
 801331a:	4770      	bx	lr
 801331c:	2000d288 	andcs	sp, r0, r8, lsl #5

08013320 <enet_deinit>:
 8013320:	b508      	push	{r3, lr}
 8013322:	f640 200e 	movw	r0, #2574	; 0xa0e
 8013326:	f7fe fba0 	bl	8011a6a <rcu_periph_reset_enable>
 801332a:	f640 200e 	movw	r0, #2574	; 0xa0e
 801332e:	f7fe fb9e 	bl	8011a6e <rcu_periph_reset_disable>
 8013332:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8013336:	f7ff bfdf 	b.w	80132f8 <enet_initpara_reset>
	...

0801333c <i2c_clock_config>:
 801333c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801333e:	4605      	mov	r5, r0
 8013340:	2002      	movs	r0, #2
 8013342:	460c      	mov	r4, r1
 8013344:	4617      	mov	r7, r2
 8013346:	f7fe fc61 	bl	8011c0c <rcu_clock_freq_get>
 801334a:	4927      	ldr	r1, [pc, #156]	; (80133e8 <i2c_clock_config+0xac>)
 801334c:	4a27      	ldr	r2, [pc, #156]	; (80133ec <i2c_clock_config+0xb0>)
 801334e:	fbb0 f1f1 	udiv	r1, r0, r1
 8013352:	4290      	cmp	r0, r2
 8013354:	bf94      	ite	ls
 8013356:	460b      	movls	r3, r1
 8013358:	233f      	movhi	r3, #63	; 0x3f
 801335a:	686e      	ldr	r6, [r5, #4]
 801335c:	4a24      	ldr	r2, [pc, #144]	; (80133f0 <i2c_clock_config+0xb4>)
 801335e:	f026 063f 	bic.w	r6, r6, #63	; 0x3f
 8013362:	431e      	orrs	r6, r3
 8013364:	4294      	cmp	r4, r2
 8013366:	606e      	str	r6, [r5, #4]
 8013368:	d816      	bhi.n	8013398 <i2c_clock_config+0x5c>
 801336a:	3101      	adds	r1, #1
 801336c:	293e      	cmp	r1, #62	; 0x3e
 801336e:	d90d      	bls.n	801338c <i2c_clock_config+0x50>
 8013370:	233f      	movs	r3, #63	; 0x3f
 8013372:	622b      	str	r3, [r5, #32]
 8013374:	0064      	lsls	r4, r4, #1
 8013376:	fbb0 f4f4 	udiv	r4, r0, r4
 801337a:	2c04      	cmp	r4, #4
 801337c:	bf38      	it	cc
 801337e:	2404      	movcc	r4, #4
 8013380:	69e8      	ldr	r0, [r5, #28]
 8013382:	f3c4 040b 	ubfx	r4, r4, #0, #12
 8013386:	4304      	orrs	r4, r0
 8013388:	61ec      	str	r4, [r5, #28]
 801338a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801338c:	2902      	cmp	r1, #2
 801338e:	d801      	bhi.n	8013394 <i2c_clock_config+0x58>
 8013390:	2302      	movs	r3, #2
 8013392:	e7ee      	b.n	8013372 <i2c_clock_config+0x36>
 8013394:	6229      	str	r1, [r5, #32]
 8013396:	e7ed      	b.n	8013374 <i2c_clock_config+0x38>
 8013398:	4a16      	ldr	r2, [pc, #88]	; (80133f4 <i2c_clock_config+0xb8>)
 801339a:	4294      	cmp	r4, r2
 801339c:	d8f5      	bhi.n	801338a <i2c_clock_config+0x4e>
 801339e:	f44f 7296 	mov.w	r2, #300	; 0x12c
 80133a2:	4353      	muls	r3, r2
 80133a4:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80133a8:	fbb3 f3f2 	udiv	r3, r3, r2
 80133ac:	3301      	adds	r3, #1
 80133ae:	622b      	str	r3, [r5, #32]
 80133b0:	b997      	cbnz	r7, 80133d8 <i2c_clock_config+0x9c>
 80133b2:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 80133b6:	fbb0 f4f4 	udiv	r4, r0, r4
 80133ba:	69eb      	ldr	r3, [r5, #28]
 80133bc:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80133c0:	61eb      	str	r3, [r5, #28]
 80133c2:	f3c4 030b 	ubfx	r3, r4, #0, #12
 80133c6:	b90b      	cbnz	r3, 80133cc <i2c_clock_config+0x90>
 80133c8:	f044 0401 	orr.w	r4, r4, #1
 80133cc:	69eb      	ldr	r3, [r5, #28]
 80133ce:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80133d2:	61eb      	str	r3, [r5, #28]
 80133d4:	69e8      	ldr	r0, [r5, #28]
 80133d6:	e7d6      	b.n	8013386 <i2c_clock_config+0x4a>
 80133d8:	2119      	movs	r1, #25
 80133da:	434c      	muls	r4, r1
 80133dc:	69eb      	ldr	r3, [r5, #28]
 80133de:	fbb0 f4f4 	udiv	r4, r0, r4
 80133e2:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80133e6:	e7eb      	b.n	80133c0 <i2c_clock_config+0x84>
 80133e8:	000f4240 	andeq	r4, pc, r0, asr #4
 80133ec:	03c14dbf 	biceq	r4, r1, #12224	; 0x2fc0
 80133f0:	000186a0 	andeq	r8, r1, r0, lsr #13
 80133f4:	00061a80 	andeq	r1, r6, r0, lsl #21

080133f8 <i2c_ack_config>:
 80133f8:	6803      	ldr	r3, [r0, #0]
 80133fa:	2901      	cmp	r1, #1
 80133fc:	bf0c      	ite	eq
 80133fe:	f443 6380 	orreq.w	r3, r3, #1024	; 0x400
 8013402:	f423 6380 	bicne.w	r3, r3, #1024	; 0x400
 8013406:	6003      	str	r3, [r0, #0]
 8013408:	4770      	bx	lr

0801340a <i2c_ackpos_config>:
 801340a:	6803      	ldr	r3, [r0, #0]
 801340c:	b919      	cbnz	r1, 8013416 <i2c_ackpos_config+0xc>
 801340e:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8013412:	6003      	str	r3, [r0, #0]
 8013414:	4770      	bx	lr
 8013416:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 801341a:	e7fa      	b.n	8013412 <i2c_ackpos_config+0x8>

0801341c <i2c_master_addressing>:
 801341c:	3202      	adds	r2, #2
 801341e:	bf0c      	ite	eq
 8013420:	f021 0101 	biceq.w	r1, r1, #1
 8013424:	f041 0101 	orrne.w	r1, r1, #1
 8013428:	6101      	str	r1, [r0, #16]
 801342a:	4770      	bx	lr

0801342c <i2c_enable>:
 801342c:	6803      	ldr	r3, [r0, #0]
 801342e:	f043 0301 	orr.w	r3, r3, #1
 8013432:	6003      	str	r3, [r0, #0]
 8013434:	4770      	bx	lr

08013436 <i2c_start_on_bus>:
 8013436:	6803      	ldr	r3, [r0, #0]
 8013438:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 801343c:	6003      	str	r3, [r0, #0]
 801343e:	4770      	bx	lr

08013440 <i2c_stop_on_bus>:
 8013440:	6803      	ldr	r3, [r0, #0]
 8013442:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8013446:	6003      	str	r3, [r0, #0]
 8013448:	4770      	bx	lr

0801344a <i2c_data_transmit>:
 801344a:	6101      	str	r1, [r0, #16]
 801344c:	4770      	bx	lr

0801344e <i2c_data_receive>:
 801344e:	6900      	ldr	r0, [r0, #16]
 8013450:	b2c0      	uxtb	r0, r0
 8013452:	4770      	bx	lr

08013454 <i2c_flag_get>:
 8013454:	098b      	lsrs	r3, r1, #6
 8013456:	5818      	ldr	r0, [r3, r0]
 8013458:	f001 011f 	and.w	r1, r1, #31
 801345c:	40c8      	lsrs	r0, r1
 801345e:	f000 0001 	and.w	r0, r0, #1
 8013462:	4770      	bx	lr

08013464 <i2c_flag_clear>:
 8013464:	f240 5301 	movw	r3, #1281	; 0x501
 8013468:	4299      	cmp	r1, r3
 801346a:	b510      	push	{r4, lr}
 801346c:	d102      	bne.n	8013474 <i2c_flag_clear+0x10>
 801346e:	6943      	ldr	r3, [r0, #20]
 8013470:	6983      	ldr	r3, [r0, #24]
 8013472:	bd10      	pop	{r4, pc}
 8013474:	2201      	movs	r2, #1
 8013476:	098c      	lsrs	r4, r1, #6
 8013478:	5823      	ldr	r3, [r4, r0]
 801347a:	f001 011f 	and.w	r1, r1, #31
 801347e:	fa02 f101 	lsl.w	r1, r2, r1
 8013482:	ea23 0101 	bic.w	r1, r3, r1
 8013486:	5021      	str	r1, [r4, r0]
 8013488:	e7f3      	b.n	8013472 <i2c_flag_clear+0xe>
	...

Disassembly of section .rodata:

0801348c <vtable for DisplayHandler-0xb0>:
	...
 8013494:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 8013498:	09080706 	stmdbeq	r8, {r1, r2, r8, r9, sl}
 801349c:	00000000 	andeq	r0, r0, r0
 80134a0:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 80134a4:	323a3131 	eorscc	r3, sl, #1073741836	; 0x4000000c
 80134a8:	32343a32 	eorscc	r3, r4, #204800	; 0x32000
 80134ac:	72614d00 	rsbvc	r4, r1, #0, 26
 80134b0:	20322020 	eorscs	r2, r2, r0, lsr #32
 80134b4:	32323032 	eorscc	r3, r2, #50	; 0x32
 80134b8:	43417300 	movtmi	r7, #4864	; 0x1300
 80134bc:	3145204e 	cmpcc	r5, lr, asr #32
 80134c0:	2031332e 	eorscs	r3, r1, lr, lsr #6
 80134c4:	65646f4e 	strbvs	r6, [r4, #-3918]!	; 0xfffff0b2
 80134c8:	335b1b20 	cmpcc	fp, #32, 22	; 0x8000
 80134cc:	4d446d32 	stclmi	13, cr6, [r4, #-200]	; 0xffffff38
 80134d0:	347b2058 	ldrbtcc	r2, [fp], #-88	; 0xffffffa8
 80134d4:	696e5520 	stmdbvs	lr!, {r5, r8, sl, ip, lr}^
 80134d8:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 80134dc:	1b7d7365 	blne	9f70278 <__exidx_end+0x1f5af04>
 80134e0:	6d37335b 	ldcvs	3, cr3, [r7, #-364]!	; 0xfffffe94
 80134e4:	635f2e00 	cmpvs	pc, #0, 28
 80134e8:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 80134ec:	5f2e0067 	svcpl	0x002e0067
 80134f0:	70747468 	rsbsvc	r7, r4, r8, ror #8
 80134f4:	646f6e00 	strbtvs	r6, [pc], #-3584	; 80134fc <_etext+0x70>
 80134f8:	41733d65 	cmnmi	r3, r5, ror #26
 80134fc:	45204e43 	strmi	r4, [r0, #-3651]!	; 0xfffff1bd
 8013500:	31332e31 	teqcc	r3, r1, lsr lr
 8013504:	584d4420 	stmdapl	sp, {r5, sl, lr}^
 8013508:	43417300 	movtmi	r7, #4864	; 0x1300
 801350c:	3145204e 	cmpcc	r5, lr, asr #32
 8013510:	2031332e 	eorscs	r3, r1, lr, lsr #6
 8013514:	20584d44 	subscs	r4, r8, r4, asr #26
 8013518:	64007525 	strvs	r7, [r0], #-1317	; 0xfffffadb
 801351c:	0021786d 	eoreq	r7, r1, sp, ror #16
 8013520:	61657262 	cmnvs	r5, r2, ror #4
 8013524:	6d00236b 	stcvs	3, cr2, [r0, #-428]	; 0xfffffe54
 8013528:	00236261 	eoreq	r6, r3, r1, ror #4
 801352c:	72666572 	rsbvc	r6, r6, #478150656	; 0x1c800000
 8013530:	23687365 	cmncs	r8, #-1811939327	; 0x94000001
 8013534:	6f6c7300 	svcvs	0x006c7300
 8013538:	00237374 	eoreq	r7, r3, r4, ror r3

0801353c <vtable for DisplayHandler>:
	...
 8013544:	080088eb 	stmdaeq	r0, {r0, r1, r3, r5, r6, r7, fp, pc}
 8013548:	08008941 	stmdaeq	r0, {r0, r6, r8, fp, pc}
 801354c:	08008961 	stmdaeq	r0, {r0, r5, r6, r8, fp, pc}

08013550 <vtable for E131Reboot>:
	...
 8013558:	080088ed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, fp, pc}
 801355c:	08008935 	stmdaeq	r0, {r0, r2, r4, r5, r8, fp, pc}
 8013560:	08008911 	stmdaeq	r0, {r0, r4, r8, fp, pc}

08013564 <CSWTCH.85>:
 8013564:	444e4f4f 	strbmi	r4, [lr], #-3919	; 0xfffff0b1
 8013568:	 	eorcc	r3, lr, r6, asr #2

08013569 <SOFTWARE_VERSION>:
 8013569:	00302e31 	eorseq	r2, r0, r1, lsr lr
 801356d:	 	andeq	r0, r0, r0

08013570 <vtable for DmxInput>:
	...
 8013578:	08008f35 	stmdaeq	r0, {r0, r2, r4, r5, r8, r9, sl, fp, pc}
 801357c:	08008fd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sl, fp, pc}
 8013580:	08008f39 	stmdaeq	r0, {r0, r3, r4, r5, r8, r9, sl, fp, pc}
 8013584:	08008f69 	stmdaeq	r0, {r0, r3, r5, r6, r8, r9, sl, fp, pc}
 8013588:	08008f99 	stmdaeq	r0, {r0, r3, r4, r7, r8, r9, sl, fp, pc}
 801358c:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8013590:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8013594:	2c64252e 	cfstr64cs	mvdx2, [r4], #-184	; 0xffffff48
 8013598:	252c7325 	strcs	r7, [ip, #-805]!	; 0xfffffcdb
 801359c:	64252c73 	strtvs	r2, [r5], #-3187	; 0xfffff38d
 80135a0:	0a73252c 	beq	9cdca58 <__exidx_end+0x1cc76e4>
 80135a4:	2e642500 	cdpcs	5, 6, cr2, cr4, cr0, {0}
 80135a8:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80135ac:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80135b0:	2c73252c 	cfldr64cs	mvdx2, [r3], #-176	; 0xffffff50
 80135b4:	252c7325 	strcs	r7, [ip, #-805]!	; 0xfffffcdb
 80135b8:	4f000a64 	svcmi	0x00000a64
 80135bc:	664f006e 	strbvs	r0, [pc], -lr, rrx
 80135c0:	69640066 	stmdbvs	r4!, {r1, r2, r5, r6}^
 80135c4:	616c7073 	smcvs	50947	; 0xc703
 80135c8:	73253a79 			; <UNDEFINED> instruction: 0x73253a79
 80135cc:	6674000a 	ldrbtvs	r0, [r4], -sl
 80135d0:	253a7074 	ldrcs	r7, [sl, #-116]!	; 0xffffff8c
 80135d4:	76000a73 			; <UNDEFINED> instruction: 0x76000a73
 80135d8:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 80135dc:	253a6e6f 	ldrcs	r6, [sl, #-3695]!	; 0xfffff191
 80135e0:	70750073 	rsbsvc	r0, r5, r3, ror r0
 80135e4:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 80135e8:	7525203a 	strvc	r2, [r5, #-58]!	; 0xffffffc6
 80135ec:	45000a73 	strmi	r0, [r0, #-2675]	; 0xfffff58d
 80135f0:	524f5252 	subpl	r5, pc, #536870917	; 0x20000005
 80135f4:	65673f23 	strbvs	r3, [r7, #-3875]!	; 0xfffff0dd
 80135f8:	74000a74 	strvc	r0, [r0], #-2676	; 0xfffff58c
 80135fc:	23707466 	cmncs	r0, #1711276032	; 0x66000000
 8013600:	73696400 	cmnvc	r9, #0, 8
 8013604:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8013608:	52450023 	subpl	r0, r5, #35	; 0x23
 801360c:	23524f52 	cmpcs	r2, #328	; 0x148
 8013610:	45000a21 	strmi	r0, [r0, #-2593]	; 0xfffff5df
 8013614:	524f5252 	subpl	r5, pc, #536870917	; 0x20000005
 8013618:	000a3f23 	andeq	r3, sl, r3, lsr #30
 801361c:	6f626572 	svcvs	0x00626572
 8013620:	2323746f 			; <UNDEFINED> instruction: 0x2323746f
 8013624:	73696c00 	cmnvc	r9, #0, 24
 8013628:	6c002374 	stcvs	3, cr2, [r0], {116}	; 0x74
 801362c:	23747369 	cmncs	r4, #-1543503871	; 0xa4000001
 8013630:	7075002a 	rsbsvc	r0, r5, sl, lsr #32
 8013634:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 8013638:	65760023 	ldrbvs	r0, [r6, #-35]!	; 0xffffffdd
 801363c:	6f697372 	svcvs	0x00697372
 8013640:	6700236e 	strvs	r2, [r0, -lr, ror #6]
 8013644:	00237465 	eoreq	r7, r3, r5, ror #8
 8013648:	74636166 	strbtvc	r6, [r3], #-358	; 0xfffffe9a
 801364c:	2379726f 	cmncs	r9, #-268435450	; 0xf0000006
 8013650:	 	subvc	r0, r1, #35	; 0x23

08013652 <s_Node>:
 8013652:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 8013656:	0074654e 	rsbseq	r6, r4, lr, asr #10
	...
 8013662:	41730000 	cmnmi	r3, r0
 8013666:	45204e43 	strmi	r4, [r0, #-3651]!	; 0xfffff1bd
 801366a:	31332e31 	teqcc	r3, r1, lsr lr
	...
 8013676:	2043534f 	subcs	r5, r3, pc, asr #6
 801367a:	76726553 			; <UNDEFINED> instruction: 0x76726553
 801367e:	00007265 	andeq	r7, r0, r5, ror #4
 8013682:	00000000 	andeq	r0, r0, r0
 8013686:	544c0000 	strbpl	r0, [ip], #-0
 801368a:	00000043 	andeq	r0, r0, r3, asr #32
	...
 801369a:	2043534f 	subcs	r5, r3, pc, asr #6
 801369e:	65696c43 	strbvs	r6, [r9, #-3139]!	; 0xfffff3bd
 80136a2:	0000746e 	andeq	r7, r0, lr, ror #8
 80136a6:	00000000 	andeq	r0, r0, r0
 80136aa:	44520000 	ldrbmi	r0, [r2], #-0
 80136ae:	74654e4d 	strbtvc	r4, [r5], #-3661	; 0xfffff1b3
 80136b2:	524c4c20 	subpl	r4, ip, #32, 24	; 0x2000
 80136b6:	6e4f2050 	mcrvs	0, 2, r2, cr15, cr0, {2}
 80136ba:	0000796c 	andeq	r7, r0, ip, ror #18
 80136be:	776f6853 			; <UNDEFINED> instruction: 0x776f6853
 80136c2:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
	...
 80136ce:	494d0000 	stmdbmi	sp, {}^	; <UNPREDICTABLE>
 80136d2:	00004944 	andeq	r4, r0, r4, asr #18
	...
 80136e2:	00504444 	subseq	r4, r0, r4, asr #8
	...

080136f4 <s_Output>:
 80136f4:	00584d44 	subseq	r4, r8, r4, asr #26
	...
 8013700:	004d4452 	subeq	r4, sp, r2, asr r4
	...
 801370c:	696e6f4d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
 8013710:	00726f74 	rsbseq	r6, r2, r4, ror pc
 8013714:	00000000 	andeq	r0, r0, r0
 8013718:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
 801371c:	0000006c 	andeq	r0, r0, ip, rrx
 8013720:	00000000 	andeq	r0, r0, r0
 8013724:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
 8013728:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
 801372c:	00000000 	andeq	r0, r0, r0
 8013730:	0043534f 	subeq	r5, r3, pc, asr #6
	...
 801373c:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 8013740:	00006769 	andeq	r6, r0, r9, ror #14
 8013744:	00000000 	andeq	r0, r0, r0
 8013748:	70657453 	rsbvc	r7, r5, r3, asr r4
 801374c:	00726570 	rsbseq	r6, r2, r0, ror r5
 8013750:	00000000 	andeq	r0, r0, r0
 8013754:	79616c50 	stmdbvc	r1!, {r4, r6, sl, fp, sp, lr}^
 8013758:	00007265 	andeq	r7, r0, r5, ror #4
 801375c:	00000000 	andeq	r0, r0, r0
 8013760:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 8013764:	0074654e 	rsbseq	r6, r4, lr, asr #10
 8013768:	00000000 	andeq	r0, r0, r0
 801376c:	69726553 	ldmdbvs	r2!, {r0, r1, r4, r6, r8, sl, sp, lr}^
 8013770:	00006c61 	andeq	r6, r0, r1, ror #24
 8013774:	00000000 	andeq	r0, r0, r0
 8013778:	20424752 	subcs	r4, r2, r2, asr r7
 801377c:	656e6150 	strbvs	r6, [lr, #-336]!	; 0xfffffeb0
 8013780:	0000006c 	andeq	r0, r0, ip, rrx

08013784 <RemoteConfig::s_GET>:
 8013784:	08009b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip, pc}
 8013788:	00000000 	andeq	r0, r0, r0
 801378c:	0801361c 	stmdaeq	r1, {r2, r3, r4, r9, sl, ip, sp}
 8013790:	00000008 	andeq	r0, r0, r8
 8013794:	08009001 	stmdaeq	r0, {r0, ip, pc}
 8013798:	00000000 	andeq	r0, r0, r0
 801379c:	08013625 	stmdaeq	r1, {r0, r2, r5, r9, sl, ip, sp}
 80137a0:	00000005 	andeq	r0, r0, r5
 80137a4:	08009001 	stmdaeq	r0, {r0, ip, pc}
 80137a8:	00000000 	andeq	r0, r0, r0
 80137ac:	0801362b 	stmdaeq	r1, {r0, r1, r3, r5, r9, sl, ip, sp}
 80137b0:	00000006 	andeq	r0, r0, r6
 80137b4:	08009205 	stmdaeq	r0, {r0, r2, r9, ip, pc}
 80137b8:	00000000 	andeq	r0, r0, r0
 80137bc:	08013632 	stmdaeq	r1, {r1, r4, r5, r9, sl, ip, sp}
 80137c0:	00000007 	andeq	r0, r0, r7
 80137c4:	080091c1 	stmdaeq	r0, {r0, r6, r7, r8, ip, pc}
 80137c8:	00000000 	andeq	r0, r0, r0
 80137cc:	0801363a 	stmdaeq	r1, {r1, r3, r4, r5, r9, sl, ip, sp}
 80137d0:	00000008 	andeq	r0, r0, r8
 80137d4:	080090e9 	stmdaeq	r0, {r0, r3, r5, r6, r7, ip, pc}
 80137d8:	00000000 	andeq	r0, r0, r0
 80137dc:	08013601 	stmdaeq	r1, {r0, r9, sl, ip, sp}
 80137e0:	00000008 	andeq	r0, r0, r8
 80137e4:	08009485 	stmdaeq	r0, {r0, r2, r7, sl, ip, pc}
 80137e8:	00000000 	andeq	r0, r0, r0
 80137ec:	08013643 	stmdaeq	r1, {r0, r1, r6, r9, sl, ip, sp}
 80137f0:	00010004 	andeq	r0, r1, r4
 80137f4:	08009169 	stmdaeq	r0, {r0, r3, r5, r6, r8, ip, pc}
 80137f8:	00000000 	andeq	r0, r0, r0
 80137fc:	080135fb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r7, r8, sl, ip, sp}
 8013800:	00000005 	andeq	r0, r0, r5
 8013804:	08009831 	stmdaeq	r0, {r0, r4, r5, fp, ip, pc}
 8013808:	00000000 	andeq	r0, r0, r0
 801380c:	08013648 	stmdaeq	r1, {r3, r6, r9, sl, ip, sp}
 8013810:	00000009 	andeq	r0, r0, r9

08013814 <RemoteConfig::s_SET>:
 8013814:	08009145 	stmdaeq	r0, {r0, r2, r6, r8, ip, pc}
 8013818:	00000000 	andeq	r0, r0, r0
 801381c:	080135fb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r7, r8, sl, ip, sp}
 8013820:	00010005 	andeq	r0, r1, r5
 8013824:	08009259 	stmdaeq	r0, {r0, r3, r4, r6, r9, ip, pc}
 8013828:	00000000 	andeq	r0, r0, r0
 801382c:	08013601 	stmdaeq	r1, {r0, r9, sl, ip, sp}
 8013830:	00010008 	andeq	r0, r1, r8
 8013834:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 8013838:	2c64253a 	cfstr64cs	mvdx2, [r4], #-232	; 0xffffff18
 801383c:	73252300 			; <UNDEFINED> instruction: 0x73252300
 8013840:	0a64253d 	beq	991cd3c <__exidx_end+0x19079c8>
 8013844:	73252200 			; <UNDEFINED> instruction: 0x73252200
 8013848:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 801384c:	002c2273 	eoreq	r2, ip, r3, ror r2
 8013850:	3d732523 	cfldr64cc	mvdx2, [r3, #-140]!	; 0xffffff74
 8013854:	000a7325 	andeq	r7, sl, r5, lsr #6
 8013858:	6f626552 	svcvs	0x00626552
 801385c:	6e69746f 	cdpvs	4, 6, cr7, cr9, cr15, {3}
 8013860:	2e2e2067 	cdpcs	0, 2, cr2, cr14, cr7, {3}
 8013864:	52000a2e 	andpl	r0, r0, #188416	; 0x2e000
 8013868:	6f6f6265 	svcvs	0x006f6265
 801386c:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 8013870:	2e2e2e20 	cdpcs	14, 2, cr2, cr14, cr0, {1}
 8013874:	6f637200 	svcvs	0x00637200
 8013878:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 801387c:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8013880:	74656e00 	strbtvc	r6, [r5], #-3584	; 0xfffff200
 8013884:	6b726f77 	blvs	9caf668 <__exidx_end+0x1c9a2f4>
 8013888:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 801388c:	73696400 	cmnvc	r9, #0, 8
 8013890:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8013894:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8013898:	33316500 	teqcc	r1, #0, 10
 801389c:	78742e31 	ldmdavc	r4!, {r0, r4, r5, r9, sl, fp, sp}^
 80138a0:	61700074 	cmnvs	r0, r4, ror r0
 80138a4:	736d6172 	cmnvc	sp, #-2147483620	; 0x8000001c
 80138a8:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 80138ac:	00000000 	andeq	r0, r0, r0

080138b0 <RemoteConfig::s_TXT>:
 80138b0:	0800948d 	stmdaeq	r0, {r0, r2, r3, r7, sl, ip, pc}
 80138b4:	00000000 	andeq	r0, r0, r0
 80138b8:	08009755 	stmdaeq	r0, {r0, r2, r4, r6, r8, r9, sl, ip, pc}
 80138bc:	00000000 	andeq	r0, r0, r0
 80138c0:	08013875 	stmdaeq	r1, {r0, r2, r4, r5, r6, fp, ip, sp}
 80138c4:	0000000b 	andeq	r0, r0, fp
 80138c8:	0000000c 	andeq	r0, r0, ip
 80138cc:	080094b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, sl, ip, pc}
 80138d0:	00000000 	andeq	r0, r0, r0
 80138d4:	08009789 	stmdaeq	r0, {r0, r3, r7, r8, r9, sl, ip, pc}
 80138d8:	00000000 	andeq	r0, r0, r0
 80138dc:	08013881 	stmdaeq	r1, {r0, r7, fp, ip, sp}
 80138e0:	0000000b 	andeq	r0, r0, fp
 80138e4:	00000000 	andeq	r0, r0, r0
 80138e8:	0800953d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r8, sl, ip, pc}
 80138ec:	00000000 	andeq	r0, r0, r0
 80138f0:	08009805 	stmdaeq	r0, {r0, r2, fp, ip, pc}
 80138f4:	00000000 	andeq	r0, r0, r0
 80138f8:	0801388d 	stmdaeq	r1, {r0, r2, r3, r7, fp, ip, sp}
 80138fc:	0000000b 	andeq	r0, r0, fp
 8013900:	0000000f 	andeq	r0, r0, pc
 8013904:	080094e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, sl, ip, pc}
 8013908:	00000000 	andeq	r0, r0, r0
 801390c:	080097b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, r9, sl, ip, pc}
 8013910:	00000000 	andeq	r0, r0, r0
 8013914:	08013899 	stmdaeq	r1, {r0, r3, r4, r7, fp, ip, sp}
 8013918:	00000008 	andeq	r0, r0, r8
 801391c:	00000004 	andeq	r0, r0, r4
 8013920:	08009511 	stmdaeq	r0, {r0, r4, r8, sl, ip, pc}
 8013924:	00000000 	andeq	r0, r0, r0
 8013928:	080097dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, sl, ip, pc}
 801392c:	00000000 	andeq	r0, r0, r0
 8013930:	080138a2 	stmdaeq	r1, {r1, r5, r7, fp, ip, sp}
 8013934:	0000000a 	andeq	r0, r0, sl
 8013938:	00000002 	andeq	r0, r0, r2
 801393c:	45470020 	strbmi	r0, [r7, #-32]	; 0xffffffe0
 8013940:	4f500054 	svcmi	0x00500054
 8013944:	48005453 	stmdami	r0, {r0, r1, r4, r6, sl, ip, lr}
 8013948:	00505454 	subseq	r5, r0, r4, asr r4
 801394c:	31000a20 	tstcc	r0, r0, lsr #20
 8013950:	3a00312e 	bcc	801fe10 <__exidx_end+0xaa9c>
 8013954:	6e6f4300 	cdpvs	3, 6, cr4, cr15, cr0, {0}
 8013958:	746e6574 	strbtvc	r6, [lr], #-1396	; 0xfffffa8c
 801395c:	7079542d 	rsbsvc	r5, r9, sp, lsr #8
 8013960:	3b200065 	blcc	8813afc <__exidx_end+0x7fe788>
 8013964:	70706100 	rsbsvc	r6, r0, r0, lsl #2
 8013968:	6163696c 	cmnvs	r3, ip, ror #18
 801396c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8013970:	6f736a2f 	svcvs	0x00736a2f
 8013974:	6f43006e 	svcvs	0x0043006e
 8013978:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 801397c:	654c2d74 	strbvs	r2, [ip, #-3444]	; 0xfffff28c
 8013980:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
 8013984:	6e692f00 	cdpvs	15, 6, cr2, cr9, cr0, {0}
 8013988:	2e786564 	cdpcs	5, 7, cr6, cr8, cr4, {3}
 801398c:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8013990:	74732f00 	ldrbtvc	r2, [r3], #-3840	; 0xfffff100
 8013994:	73656c79 	cmnvc	r5, #30976	; 0x7900
 8013998:	7373632e 	cmnvc	r3, #-1207959552	; 0xb8000000
 801399c:	6e692f00 	cdpvs	15, 6, cr2, cr9, cr0, {0}
 80139a0:	2e786564 	cdpcs	5, 7, cr6, cr8, cr4, {3}
 80139a4:	2f00736a 	svccs	0x0000736a
 80139a8:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 80139ac:	696c002f 	stmdbvs	ip!, {r0, r1, r2, r3, r5}^
 80139b0:	76007473 			; <UNDEFINED> instruction: 0x76007473
 80139b4:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 80139b8:	75006e6f 	strvc	r6, [r0, #-3695]	; 0xfffff191
 80139bc:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 80139c0:	69640065 	stmdbvs	r4!, {r0, r2, r5, r6}^
 80139c4:	616c7073 	smcvs	50947	; 0xc703
 80139c8:	69640079 	stmdbvs	r4!, {r0, r3, r4, r5, r6}^
 80139cc:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 80139d0:	0079726f 	rsbseq	r7, r9, pc, ror #4
 80139d4:	6f736a2f 	svcvs	0x00736a2f
 80139d8:	63612f6e 	cmnvs	r1, #440	; 0x1b8
 80139dc:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 80139e0:	62657200 	rsbvs	r7, r5, #0, 4
 80139e4:	00746f6f 	rsbseq	r6, r4, pc, ror #30
 80139e8:	6e656469 	cdpvs	4, 6, cr6, cr5, cr9, {3}
 80139ec:	79666974 	stmdbvc	r6!, {r2, r4, r5, r6, r8, fp, sp, lr}^
 80139f0:	44213c00 	strtmi	r3, [r1], #-3072	; 0xfffff400
 80139f4:	5954434f 	ldmdbpl	r4, {r0, r1, r2, r3, r6, r8, r9, lr}^
 80139f8:	68204550 	stmdavs	r0!, {r4, r6, r8, sl, lr}
 80139fc:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 8013a00:	74683c0a 	strbtvc	r3, [r8], #-3082	; 0xfffff3f6
 8013a04:	0a3e6c6d 	beq	8faebc0 <__exidx_end+0xf9984c>
 8013a08:	6165683c 	cmnvs	r5, ip, lsr r8
 8013a0c:	743c3e64 	ldrtvc	r3, [ip], #-3684	; 0xfffff19c
 8013a10:	656c7469 	strbvs	r7, [ip, #-1129]!	; 0xfffffb97
 8013a14:	6275533e 	rsbsvs	r5, r5, #-134217728	; 0xf8000000
 8013a18:	3c74696d 			; <UNDEFINED> instruction: 0x3c74696d
 8013a1c:	7469742f 	strbtvc	r7, [r9], #-1071	; 0xfffffbd1
 8013a20:	3c3e656c 	cfldr32cc	mvfx6, [lr], #-432	; 0xfffffe50
 8013a24:	6165682f 	cmnvs	r5, pc, lsr #16
 8013a28:	3c0a3e64 	stccc	14, cr3, [sl], {100}	; 0x64
 8013a2c:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 8013a30:	31683c3e 	cmncc	r8, lr, lsr ip
 8013a34:	3c4b4f3e 	mcrrcc	15, 3, r4, fp, cr14
 8013a38:	3e31682f 	cdpcc	8, 3, cr6, cr1, cr15, {1}
 8013a3c:	6f622f3c 	svcvs	0x00622f3c
 8013a40:	0a3e7964 	beq	8fb1fd8 <__exidx_end+0xf9cc64>
 8013a44:	74682f3c 	strbtvc	r2, [r8], #-3900	; 0xfffff0c4
 8013a48:	0a3e6c6d 	beq	8faec04 <__exidx_end+0xf99890>
 8013a4c:	71655200 	cmnvc	r5, r0, lsl #4
 8013a50:	74736575 	ldrbtvc	r6, [r3], #-1397	; 0xfffffa8b
 8013a54:	746e4520 	strbtvc	r4, [lr], #-1312	; 0xfffffae0
 8013a58:	20797469 	rsbscs	r7, r9, r9, ror #8
 8013a5c:	206f6f54 	rsbcs	r6, pc, r4, asr pc	; <UNPREDICTABLE>
 8013a60:	6772614c 	ldrbvs	r6, [r2, -ip, asr #2]!
 8013a64:	6f4e0065 	svcvs	0x004e0065
 8013a68:	6f462074 	svcvs	0x00462074
 8013a6c:	00646e75 	rsbeq	r6, r4, r5, ror lr
 8013a70:	75716552 	ldrbvc	r6, [r1, #-1362]!	; 0xfffffaae
 8013a74:	2d747365 	ldclcs	3, cr7, [r4, #-404]!	; 0xfffffe6c
 8013a78:	20495255 	subcs	r5, r9, r5, asr r2
 8013a7c:	206f6f54 	rsbcs	r6, pc, r4, asr pc	; <UNPREDICTABLE>
 8013a80:	676e6f4c 	strbvs	r6, [lr, -ip, asr #30]!
 8013a84:	72655600 	rsbvc	r5, r5, #0, 12
 8013a88:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 8013a8c:	746f4e20 	strbtvc	r4, [pc], #-3616	; 8013a94 <RemoteConfig::s_TXT+0x1e4>
 8013a90:	70755320 	rsbsvc	r5, r5, r0, lsr #6
 8013a94:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8013a98:	4d006465 	cfstrsmi	mvf6, [r0, #-404]	; 0xfffffe6c
 8013a9c:	6f687465 	svcvs	0x00687465
 8013aa0:	6f4e2064 	svcvs	0x004e2064
 8013aa4:	6d492074 	stclvs	0, cr2, [r9, #-464]	; 0xfffffe30
 8013aa8:	6d656c70 	stclvs	12, cr6, [r5, #-448]!	; 0xfffffe40
 8013aac:	65746e65 	ldrbvs	r6, [r4, #-3685]!	; 0xfffff19b
 8013ab0:	61420064 	cmpvs	r2, r4, rrx
 8013ab4:	65522064 	ldrbvs	r2, [r2, #-100]	; 0xffffff9c
 8013ab8:	73657571 	cmnvc	r5, #473956352	; 0x1c400000
 8013abc:	6e550074 	mrcvs	0, 2, r0, cr5, cr4, {3}
 8013ac0:	776f6e6b 	strbvc	r6, [pc, -fp, ror #28]!
 8013ac4:	7245206e 	subvc	r2, r5, #110	; 0x6e
 8013ac8:	00726f72 	rsbseq	r6, r2, r2, ror pc
 8013acc:	65746e49 	ldrbvs	r6, [r4, #-3657]!	; 0xfffff1b7
 8013ad0:	6c616e72 	stclvs	14, cr6, [r1], #-456	; 0xfffffe38
 8013ad4:	72655320 	rsbvc	r5, r5, #32, 6	; 0x80000000
 8013ad8:	20726576 	rsbscs	r6, r2, r6, ror r5
 8013adc:	6f727245 	svcvs	0x00727245
 8013ae0:	4b4f0072 	blmi	93d3cb0 <__exidx_end+0x13be93c>
 8013ae4:	44213c00 	strtmi	r3, [r1], #-3072	; 0xfffff400
 8013ae8:	5954434f 	ldmdbpl	r4, {r0, r1, r2, r3, r6, r8, r9, lr}^
 8013aec:	68204550 	stmdavs	r0!, {r4, r6, r8, sl, lr}
 8013af0:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 8013af4:	74683c0a 	strbtvc	r3, [r8], #-3082	; 0xfffff3f6
 8013af8:	0a3e6c6d 	beq	8faecb4 <__exidx_end+0xf99940>
 8013afc:	6165683c 	cmnvs	r5, ip, lsr r8
 8013b00:	743c3e64 	ldrtvc	r3, [ip], #-3684	; 0xfffff19c
 8013b04:	656c7469 	strbvs	r7, [ip, #-1129]!	; 0xfffffb97
 8013b08:	2075253e 	rsbscs	r2, r5, lr, lsr r5
 8013b0c:	2f3c7325 	svccs	0x003c7325
 8013b10:	6c746974 			; <UNDEFINED> instruction: 0x6c746974
 8013b14:	2f3c3e65 	svccs	0x003c3e65
 8013b18:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
 8013b1c:	623c0a3e 	eorsvs	r0, ip, #253952	; 0x3e000
 8013b20:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 8013b24:	3e31683c 	mrccc	8, 1, r6, cr1, cr12, {1}
 8013b28:	2f3c7325 	svccs	0x003c7325
 8013b2c:	3c3e3168 	ldfccs	f3, [lr], #-416	; 0xfffffe60
 8013b30:	646f622f 	strbtvs	r6, [pc], #-559	; 8013b38 <RemoteConfig::s_TXT+0x288>
 8013b34:	3c0a3e79 	stccc	14, cr3, [sl], {121}	; 0x79
 8013b38:	6d74682f 	ldclvs	8, cr6, [r4, #-188]!	; 0xffffff44
 8013b3c:	000a3e6c 	andeq	r3, sl, ip, ror #28
 8013b40:	50545448 	subspl	r5, r4, r8, asr #8
 8013b44:	312e312f 			; <UNDEFINED> instruction: 0x312e312f
 8013b48:	20752520 	rsbscs	r2, r5, r0, lsr #10
 8013b4c:	0a0d7325 	beq	83707e8 <__exidx_end+0x35b474>
 8013b50:	76726553 			; <UNDEFINED> instruction: 0x76726553
 8013b54:	203a7265 	eorscs	r7, sl, r5, ror #4
 8013b58:	0a0d7325 	beq	83707f4 <__exidx_end+0x35b480>
 8013b5c:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
 8013b60:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	; 0xfffffe6c
 8013b64:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
 8013b68:	7325203a 			; <UNDEFINED> instruction: 0x7325203a
 8013b6c:	6f430a0d 	svcvs	0x00430a0d
 8013b70:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 8013b74:	654c2d74 	strbvs	r2, [ip, #-3444]	; 0xfffff28c
 8013b78:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
 8013b7c:	7525203a 	strvc	r2, [r5, #-58]!	; 0xffffffc6
 8013b80:	6f430a0d 	svcvs	0x00430a0d
 8013b84:	63656e6e 	cmnvs	r5, #1760	; 0x6e0
 8013b88:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8013b8c:	6c63203a 	stclvs	0, cr2, [r3], #-232	; 0xffffff18
 8013b90:	0d65736f 	stcleq	3, cr7, [r5, #-444]!	; 0xfffffe44
 8013b94:	000a0d0a 	andeq	r0, sl, sl, lsl #26
 8013b98:	32334447 	eorscc	r4, r3, #1191182336	; 0x47000000
 8013b9c:	37303246 	ldrcc	r3, [r0, -r6, asr #4]!
 8013ba0:	56455f43 	strbpl	r5, [r5], -r3, asr #30
 8013ba4:	 	strvc	r4, [r0], #-3137	; 0xfffff3bf

08013ba7 <contentType>:
 8013ba7:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 8013bab:	6d74682f 	ldclvs	8, cr6, [r4, #-188]!	; 0xffffff44
 8013baf:	0000006c 	andeq	r0, r0, ip, rrx
	...
 8013bc7:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 8013bcb:	7373632f 	cmnvc	r3, #-1140850688	; 0xbc000000
	...
 8013be7:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 8013beb:	76616a2f 	strbtvc	r6, [r1], -pc, lsr #20
 8013bef:	72637361 	rsbvc	r7, r3, #-2080374783	; 0x84000001
 8013bf3:	00747069 	rsbseq	r7, r4, r9, rrx
	...
 8013c07:	6c707061 	ldclvs	0, cr7, [r0], #-388	; 0xfffffe7c
 8013c0b:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
 8013c0f:	2f6e6f69 	svccs	0x006e6f69
 8013c13:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
	...

08013c27 <RemoteConfigConst::PARAMS_DISABLE>:
 8013c27:	61736964 	cmnvs	r3, r4, ror #18
 8013c2b:	00656c62 	rsbeq	r6, r5, r2, ror #24

08013c2f <RemoteConfigConst::PARAMS_FILE_NAME>:
 8013c2f:	6e6f6372 	mcrvs	3, 3, r6, cr15, cr2, {3}
 8013c33:	2e676966 	vnmulcs.f16	s13, s14, s13	; <UNPREDICTABLE>
 8013c37:	00747874 	rsbseq	r7, r4, r4, ror r8

08013c3b <RemoteConfigConst::PARAMS_DISPLAY_NAME>:
 8013c3b:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8013c3f:	5f79616c 	svcpl	0x0079616c
 8013c43:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

08013c48 <RemoteConfigConst::PARAMS_DISABLE_WRITE>:
 8013c48:	61736964 	cmnvs	r3, r4, ror #18
 8013c4c:	5f656c62 	svcpl	0x00656c62
 8013c50:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
 8013c54:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

08013c56 <RemoteConfigConst::PARAMS_ENABLE_REBOOT>:
 8013c56:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 8013c5a:	725f656c 	subsvc	r6, pc, #108, 10	; 0x1b000000
 8013c5e:	6f6f6265 	svcvs	0x006f6265
 8013c62:	 	mcrvs	0, 3, r0, cr5, cr4, {3}

08013c64 <RemoteConfigConst::PARAMS_ENABLE_UPTIME>:
 8013c64:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 8013c68:	755f656c 	ldrbvc	r6, [pc, #-1388]	; 8013704 <s_Output+0x10>
 8013c6c:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 8013c70:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

08013c72 <RemoteConfigConst::PARAMS_ENABLE_FACTORY>:
 8013c72:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 8013c76:	665f656c 	ldrbvs	r6, [pc], -ip, ror #10
 8013c7a:	6f746361 	svcvs	0x00746361
 8013c7e:	7b007972 	blvc	803224e <__exidx_end+0x1ceda>
 8013c82:	73696c22 	cmnvc	r9, #8704	; 0x2200
 8013c86:	7b3a2274 	blvc	8e9c65e <__exidx_end+0xe872ea>
 8013c8a:	22706922 	rsbscs	r6, r0, #557056	; 0x88000
 8013c8e:	6425223a 	strtvs	r2, [r5], #-570	; 0xfffffdc6
 8013c92:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8013c96:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8013c9a:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 8013c9e:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 8013ca2:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8013ca6:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 8013caa:	65646f6e 	strbvs	r6, [r4, #-3950]!	; 0xfffff092
 8013cae:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 8013cb2:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 8013cb6:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8013cba:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 8013cbe:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8013cc2:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 8013cc6:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 8013cca:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8013cce:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 8013cd2:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 8013cd6:	253a2274 	ldrcs	r2, [sl, #-628]!	; 0xfffffd8c
 8013cda:	7d7d7d64 	ldclvc	13, cr7, [sp, #-400]!	; 0xfffffe70
 8013cde:	227b007d 	rsbscs	r0, fp, #125	; 0x7d
 8013ce2:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8013ce6:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 8013cea:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 8013cee:	2c22732a 	stccs	3, cr7, [r2], #-168	; 0xffffff58
 8013cf2:	616f6222 	cmnvs	pc, r2, lsr #4
 8013cf6:	3a226472 	bcc	88acec6 <__exidx_end+0x897b52>
 8013cfa:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 8013cfe:	7562222c 	strbvc	r2, [r2, #-556]!	; 0xfffffdd4
 8013d02:	22646c69 	rsbcs	r6, r4, #26880	; 0x6900
 8013d06:	64227b3a 	strtvs	r7, [r2], #-2874	; 0xfffff4c6
 8013d0a:	22657461 	rsbcs	r7, r5, #1627389952	; 0x61000000
 8013d0e:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 8013d12:	2c22732a 	stccs	3, cr7, [r2], #-168	; 0xffffff58
 8013d16:	6d697422 	cfstrdvs	mvd7, [r9, #-136]!	; 0xffffff78
 8013d1a:	223a2265 	eorscs	r2, sl, #1342177286	; 0x50000006
 8013d1e:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
 8013d22:	007d7d22 	rsbseq	r7, sp, r2, lsr #26
 8013d26:	7075227b 	rsbsvc	r2, r5, fp, ror r2
 8013d2a:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 8013d2e:	75253a22 	strvc	r3, [r5, #-2594]!	; 0xfffff5de
 8013d32:	7b000a7d 	blvc	801672e <__exidx_end+0x13ba>
 8013d36:	73696422 	cmnvc	r9, #570425344	; 0x22000000
 8013d3a:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8013d3e:	64253a22 	strtvs	r3, [r5], #-2594	; 0xfffff5de
 8013d42:	227b007d 	rsbscs	r0, fp, #125	; 0x7d
 8013d46:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8013d4a:	7b3a2273 	blvc	8e9c71e <__exidx_end+0xe873aa>
 8013d4e:	33316522 	teqcc	r1, #142606336	; 0x8800000
 8013d52:	78742e31 	ldmdavc	r4!, {r0, r4, r5, r9, sl, fp, sp}^
 8013d56:	223a2274 	eorscs	r2, sl, #116, 4	; 0x40000007
 8013d5a:	4e434173 	mcrmi	1, 2, r4, cr3, cr3, {3}
 8013d5e:	2e314520 	cfabs64cs	mvdx4, mvdx1
 8013d62:	2c223133 	stfcss	f3, [r2], #-204	; 0xffffff34
 8013d66:	72617022 	rsbvc	r7, r1, #34	; 0x22
 8013d6a:	2e736d61 	cdpcs	13, 7, cr6, cr3, cr1, {3}
 8013d6e:	22747874 	rsbscs	r7, r4, #116, 16	; 0x740000
 8013d72:	4d44223a 	sfmmi	f2, 2, [r4, #-232]	; 0xffffff18
 8013d76:	72542058 	subsvc	r2, r4, #88	; 0x58
 8013d7a:	6d736e61 	ldclvs	14, cr6, [r3, #-388]!	; 0xfffffe7c
 8013d7e:	2c227469 	cfstrscs	mvf7, [r2], #-420	; 0xfffffe5c
 8013d82:	73696422 	cmnvc	r9, #570425344	; 0x22000000
 8013d86:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8013d8a:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8013d8e:	44223a22 	strtmi	r3, [r2], #-2594	; 0xfffff5de
 8013d92:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
 8013d96:	55207961 	strpl	r7, [r0, #-2401]!	; 0xfffff69f
 8013d9a:	2c224644 	stccs	6, cr4, [r2], #-272	; 0xfffffef0
 8013d9e:	74656e22 	strbtvc	r6, [r5], #-3618	; 0xfffff1de
 8013da2:	6b726f77 	blvs	9cafb86 <__exidx_end+0x1c9a812>
 8013da6:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8013daa:	4e223a22 	vmulmi.f32	s6, s4, s5
 8013dae:	6f777465 	svcvs	0x00777465
 8013db2:	2c226b72 			; <UNDEFINED> instruction: 0x2c226b72
 8013db6:	6f637222 	svcvs	0x00637222
 8013dba:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 8013dbe:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8013dc2:	52223a22 	eorpl	r3, r2, #139264	; 0x22000
 8013dc6:	746f6d65 	strbtvc	r6, [pc], #-3429	; 8013dce <RemoteConfigConst::PARAMS_ENABLE_FACTORY+0x15c>
 8013dca:	6f632065 	svcvs	0x00632065
 8013dce:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 8013dd2:	74617275 	strbtvc	r7, [r1], #-629	; 0xfffffd8b
 8013dd6:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 8013dda:	73007d7d 	movwvc	r7, #3453	; 0xd7d
 8013dde:	682f6372 	stmdavs	pc!, {r1, r4, r5, r6, r8, r9, sp, lr}	; <UNPREDICTABLE>
 8013de2:	64707474 	ldrbtvs	r7, [r0], #-1140	; 0xfffffb8c
 8013de6:	7465672f 	strbtvc	r6, [r5], #-1839	; 0xfffff8d1
 8013dea:	6c69665f 	stclvs	6, cr6, [r9], #-380	; 0xfffffe84
 8013dee:	6f635f65 	svcvs	0x00635f65
 8013df2:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 8013df6:	70632e74 	rsbvc	r2, r3, r4, ror lr
 8013dfa:	65670070 	strbvs	r0, [r7, #-112]!	; 0xffffff90
 8013dfe:	69665f74 	stmdbvs	r6!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 8013e02:	635f656c 	cmpvs	pc, #108, 10	; 0x1b000000
 8013e06:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
 8013e0a:	2500746e 	strcs	r7, [r0, #-1134]	; 0xfffffb92
 8013e0e:	20292873 	eorcs	r2, r9, r3, ror r8
 8013e12:	202c7325 	eorcs	r7, ip, r5, lsr #6
 8013e16:	656e696c 	strbvs	r6, [lr, #-2412]!	; 0xfffff694
 8013e1a:	3a692520 	bcc	9a5d2a2 <__exidx_end+0x1a47f2e>
 8013e1e:	20732520 	rsbscs	r2, r3, r0, lsr #10
 8013e22:	25203e2d 	strcs	r3, [r0, #-3629]!	; 0xfffff1d3
 8013e26:	3c000a64 			; <UNDEFINED> instruction: 0x3c000a64
 8013e2a:	25202d2d 	strcs	r2, [r0, #-3373]!	; 0xfffff2d3
 8013e2e:	73253a73 			; <UNDEFINED> instruction: 0x73253a73
 8013e32:	0a64253a 	beq	991d322 <__exidx_end+0x1907fae>
	...

08013e37 <index_html>:
 8013e37:	4f44213c 	svcmi	0x0044213c
 8013e3b:	50595443 	subspl	r5, r9, r3, asr #8
 8013e3f:	74682045 	strbtvc	r2, [r8], #-69	; 0xffffffbb
 8013e43:	0a3e6c6d 	beq	8faefff <__exidx_end+0xf99c8b>
 8013e47:	6d74683c 	ldclvs	8, cr6, [r4, #-240]!	; 0xffffff10
 8013e4b:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
 8013e4f:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
 8013e53:	3c090a3e 			; <UNDEFINED> instruction: 0x3c090a3e
 8013e57:	6b6e696c 	blvs	9bae40f <__exidx_end+0x1b9909b>
 8013e5b:	6c657220 	sfmvs	f7, 2, [r5], #-128	; 0xffffff80
 8013e5f:	7473223d 	ldrbtvc	r2, [r3], #-573	; 0xfffffdc3
 8013e63:	73656c79 	cmnvc	r5, #30976	; 0x7900
 8013e67:	74656568 	strbtvc	r6, [r5], #-1384	; 0xfffffa98
 8013e6b:	72682022 	rsbvc	r2, r8, #34	; 0x22
 8013e6f:	223d6665 	eorscs	r6, sp, #105906176	; 0x6500000
 8013e73:	6c797473 	cfldrdvs	mvd7, [r9], #-460	; 0xfffffe34
 8013e77:	632e7365 			; <UNDEFINED> instruction: 0x632e7365
 8013e7b:	20227373 	eorcs	r7, r2, r3, ror r3
 8013e7f:	090a3e2f 	stmdbeq	sl, {r0, r1, r2, r3, r5, r9, sl, fp, ip, sp}
 8013e83:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
 8013e87:	3c3e656c 	cfldr32cc	mvfx6, [lr], #-432	; 0xfffffe50
 8013e8b:	7469742f 	strbtvc	r7, [r9], #-1071	; 0xfffffbd1
 8013e8f:	0a3e656c 	beq	8fad447 <__exidx_end+0xf980d3>
 8013e93:	65682f3c 	strbvs	r2, [r8, #-3900]!	; 0xfffff0c4
 8013e97:	0a3e6461 	beq	8fad023 <__exidx_end+0xf97caf>
 8013e9b:	646f623c 	strbtvs	r6, [pc], #-572	; 8013ea3 <index_html+0x6c>
 8013e9f:	090a3e79 	stmdbeq	sl, {r0, r3, r4, r5, r6, r9, sl, fp, ip, sp}
 8013ea3:	6165683c 	cmnvs	r5, ip, lsr r8
 8013ea7:	3e726564 	cdpcc	5, 7, cr6, cr2, cr4, {3}
 8013eab:	206c753c 	rsbcs	r7, ip, ip, lsr r5
 8013eaf:	223d6469 	eorscs	r6, sp, #1761607680	; 0x69000000
 8013eb3:	694c6469 	stmdbvs	ip, {r0, r3, r5, r6, sl, sp, lr}^
 8013eb7:	3e227473 	mcrcc	4, 1, r7, cr2, cr3, {3}
 8013ebb:	6c752f3c 	ldclvs	15, cr2, [r5], #-240	; 0xffffff10
 8013ebf:	682f3c3e 	stmdavs	pc!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8013ec3:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 8013ec7:	090a3e72 	stmdbeq	sl, {r1, r4, r5, r6, r9, sl, fp, ip, sp}
 8013ecb:	3c3e703c 	ldccc	0, cr7, [lr], #-240	; 0xffffff10
 8013ecf:	656c6573 	strbvs	r6, [ip, #-1395]!	; 0xfffffa8d
 8013ed3:	69207463 	stmdbvs	r0!, {r0, r1, r5, r6, sl, ip, sp, lr}
 8013ed7:	69223d64 	stmdbvs	r2!, {r2, r5, r6, r8, sl, fp, ip, sp}
 8013edb:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
 8013edf:	6f746365 	svcvs	0x00746365
 8013ee3:	20227972 	eorcs	r7, r2, r2, ror r9
 8013ee7:	68636e6f 	stmdavs	r3!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 8013eeb:	65676e61 	strbvs	r6, [r7, #-3681]!	; 0xfffff19f
 8013eef:	6567223d 	strbvs	r2, [r7, #-573]!	; 0xfffffdc3
 8013ef3:	78745f74 	ldmdavc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 8013ef7:	68742874 	ldmdavs	r4!, {r2, r4, r5, r6, fp, sp}^
 8013efb:	762e7369 	strtvc	r7, [lr], -r9, ror #6
 8013eff:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
 8013f03:	3c3e2229 	lfmcc	f2, 4, [lr], #-164	; 0xffffff5c
 8013f07:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
 8013f0b:	3e746365 	cdpcc	3, 7, cr6, cr4, cr5, {3}
 8013f0f:	3e702f3c 	mrccc	15, 3, r2, cr0, cr12, {1}
 8013f13:	743c090a 	ldrtvc	r0, [ip], #-2314	; 0xfffff6f6
 8013f17:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
 8013f1b:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
 8013f1f:	54646922 	strbtpl	r6, [r4], #-2338	; 0xfffff6de
 8013f23:	20227478 	eorcs	r7, r2, r8, ror r4
 8013f27:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 8013f2b:	273d7265 	ldrcs	r7, [sp, -r5, ror #4]!
 8013f2f:	3c3e2731 	ldccc	7, cr2, [lr], #-196	; 0xffffff3c
 8013f33:	6261742f 	rsbvs	r7, r1, #788529152	; 0x2f000000
 8013f37:	0a3e656c 	beq	8fad4ef <__exidx_end+0xf9817b>
 8013f3b:	6f663c09 	svcvs	0x00663c09
 8013f3f:	7265746f 	rsbvc	r7, r5, #1862270976	; 0x6f000000
 8013f43:	6c753c3e 	ldclvs	12, cr3, [r5], #-248	; 0xffffff08
 8013f47:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
 8013f4b:	56646922 	strbtpl	r6, [r4], -r2, lsr #18
 8013f4f:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8013f53:	3e226e6f 	cdpcc	14, 2, cr6, cr2, cr15, {3}
 8013f57:	6c752f3c 	ldclvs	15, cr2, [r5], #-240	; 0xffffff10
 8013f5b:	662f3c3e 			; <UNDEFINED> instruction: 0x662f3c3e
 8013f5f:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
 8013f63:	090a3e72 	stmdbeq	sl, {r1, r4, r5, r6, r9, sl, fp, ip, sp}
 8013f67:	7263733c 	rsbvc	r7, r3, #60, 6	; 0xf0000000
 8013f6b:	20747069 	rsbscs	r7, r4, r9, rrx
 8013f6f:	3d637273 	sfmcc	f7, 2, [r3, #-460]!	; 0xfffffe34
 8013f73:	646e6922 	strbtvs	r6, [lr], #-2338	; 0xfffff6de
 8013f77:	6a2e7865 	bvs	8bb2113 <__exidx_end+0xb9cd9f>
 8013f7b:	3c3e2273 	lfmcc	f2, 4, [lr], #-460	; 0xfffffe34
 8013f7f:	7263732f 	rsbvc	r7, r3, #-1140850688	; 0xbc000000
 8013f83:	3e747069 	cdpcc	0, 7, cr7, cr4, cr9, {3}
 8013f87:	622f3c0a 	eorvs	r3, pc, #2560	; 0xa00
 8013f8b:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 8013f8f:	682f3c0a 	stmdavs	pc!, {r1, r3, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8013f93:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 8013f97:	 	svcvs	0x0062000a

08013f99 <styles_css>:
 8013f99:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 8013f9d:	200a7b20 	andcs	r7, sl, r0, lsr #22
 8013fa1:	63616220 	cmnvs	r1, #32, 4
 8013fa5:	6f72676b 	svcvs	0x0072676b
 8013fa9:	2d646e75 	stclcs	14, cr6, [r4, #-468]!	; 0xfffffe2c
 8013fad:	6f6c6f63 	svcvs	0x006c6f63
 8013fb1:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
 8013fb5:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
 8013fb9:	30322c30 	eorscc	r2, r2, r0, lsr ip
 8013fbd:	2930322c 	ldmdbcs	r0!, {r2, r3, r5, r9, ip, sp}
 8013fc1:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 8013fc5:	6f6c6f63 	svcvs	0x006c6f63
 8013fc9:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
 8013fcd:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
 8013fd1:	202c3535 	eorcs	r3, ip, r5, lsr r5
 8013fd5:	2c353532 	cfldr32cs	mvfx3, [r5], #-200	; 0xffffff38
 8013fd9:	35353220 	ldrcc	r3, [r5, #-544]!	; 0xfffffde0
 8013fdd:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
 8013fe1:	6c750a0a 			; <UNDEFINED> instruction: 0x6c750a0a
 8013fe5:	200a7b20 	andcs	r7, sl, r0, lsr #22
 8013fe9:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 8013fed:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8013ff1:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 8013ff5:	0a3b7865 	beq	8ef2191 <__exidx_end+0xedce1d>
 8013ff9:	6c0a0a7d 			; <UNDEFINED> instruction: 0x6c0a0a7d
 8013ffd:	0a7b2069 	beq	9edc1a9 <__exidx_end+0x1ec6e35>
 8014001:	696c2020 	stmdbvs	ip!, {r5, sp}^
 8014005:	732d7473 			; <UNDEFINED> instruction: 0x732d7473
 8014009:	656c7974 	strbvs	r7, [ip, #-2420]!	; 0xfffff68c
 801400d:	6f6e203a 	svcvs	0x006e203a
 8014011:	0a3b656e 	beq	8eed5d1 <__exidx_end+0xed825d>
 8014015:	616d2020 	cmnvs	sp, r0, lsr #32
 8014019:	6e696772 	mcrvs	7, 3, r6, cr9, cr2, {3}
 801401d:	7031203a 	eorsvc	r2, r1, sl, lsr r0
 8014021:	70352078 	eorsvc	r2, r5, r8, ror r0
 8014025:	7d0a3b78 	vstrvc	d3, [sl, #-480]	; 0xfffffe20
 8014029:	65680a0a 	strbvs	r0, [r8, #-2570]!	; 0xfffff5f6
 801402d:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 8014031:	200a7b20 	andcs	r7, sl, r0, lsr #22
 8014035:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 8014039:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 801403d:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 8014041:	0a3b7865 	beq	8ef21dd <__exidx_end+0xedce69>
 8014045:	6f622020 	svcvs	0x00622020
 8014049:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
 801404d:	6461722d 	strbtvs	r7, [r1], #-557	; 0xfffffdd3
 8014051:	3a737569 	bcc	9cf15fd <__exidx_end+0x1cdc289>
 8014055:	78703420 	ldmdavc	r0!, {r5, sl, ip, sp}^
 8014059:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 801405d:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 8014061:	203a7265 	eorscs	r7, sl, r5, ror #4
 8014065:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8014069:	72672064 	rsbvc	r2, r7, #100	; 0x64
 801406d:	31207965 			; <UNDEFINED> instruction: 0x31207965
 8014071:	0a3b7870 	beq	8ef2239 <__exidx_end+0xedcec5>
 8014075:	660a0a7d 			; <UNDEFINED> instruction: 0x660a0a7d
 8014079:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
 801407d:	0a7b2072 	beq	9edc24d <__exidx_end+0x1ec6ed9>
 8014081:	69642020 	stmdbvs	r4!, {r5, sp}^
 8014085:	616c7073 	smcvs	50947	; 0xc703
 8014089:	66203a79 			; <UNDEFINED> instruction: 0x66203a79
 801408d:	3b78656c 	blcc	9e2d645 <__exidx_end+0x1e182d1>
 8014091:	6a20200a 	bvs	881c0c1 <__exidx_end+0x806d4d>
 8014095:	69747375 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r8, r9, ip, sp, lr}^
 8014099:	632d7966 			; <UNDEFINED> instruction: 0x632d7966
 801409d:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
 80140a1:	203a746e 	eorscs	r7, sl, lr, ror #8
 80140a5:	746e6563 	strbtvc	r6, [lr], #-1379	; 0xfffffa9d
 80140a9:	0a3b7265 	beq	8ef0a45 <__exidx_end+0xedb6d1>
 80140ad:	6f622020 	svcvs	0x00622020
 80140b1:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
 80140b5:	6461722d 	strbtvs	r7, [r1], #-557	; 0xfffffdd3
 80140b9:	3a737569 	bcc	9cf1665 <__exidx_end+0x1cdc2f1>
 80140bd:	78703420 	ldmdavc	r0!, {r5, sl, ip, sp}^
 80140c1:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 80140c5:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 80140c9:	203a7265 	eorscs	r7, sl, r5, ror #4
 80140cd:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 80140d1:	72672064 	rsbvc	r2, r7, #100	; 0x64
 80140d5:	31207965 			; <UNDEFINED> instruction: 0x31207965
 80140d9:	0a3b7870 	beq	8ef22a1 <__exidx_end+0xedcf2d>
 80140dd:	 	andls	r0, r0, #512000	; 0x7d000

080140e0 <HttpContent>:
 80140e0:	08013992 	stmdaeq	r1, {r1, r4, r7, r8, fp, ip, sp}
 80140e4:	08013f99 	stmdaeq	r1, {r0, r3, r4, r7, r8, r9, sl, fp, ip, sp}
 80140e8:	0801399e 	stmdaeq	r1, {r1, r2, r3, r4, r7, r8, fp, ip, sp}
 80140ec:	080140f8 	stmdaeq	r1, {r3, r4, r5, r6, r7, lr}
 80140f0:	08013986 	stmdaeq	r1, {r1, r2, r7, r8, fp, ip, sp}
 80140f4:	08013e37 	stmdaeq	r1, {r0, r1, r2, r4, r5, r9, sl, fp, ip, sp}

080140f8 <index_js>:
 80140f8:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 80140fc:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8014100:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8014104:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 8014108:	534a7465 	movtpl	r7, #42085	; 0xa465
 801410c:	6a284e4f 	bvs	8a27a50 <__exidx_end+0xa126dc>
 8014110:	296e6f73 	stmdbcs	lr!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8014114:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 8014118:	74656c09 	strbtvc	r6, [r5], #-3081	; 0xfffff3f7
 801411c:	6c727520 	cfldr64vs	mvdx7, [r2], #-128	; 0xffffff80
 8014120:	6a2f273d 	bvs	8bdde1c <__exidx_end+0xbc8aa8>
 8014124:	2f6e6f73 	svccs	0x006e6f73
 8014128:	202b2027 	eorcs	r2, fp, r7, lsr #32
 801412c:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 8014130:	09090a3b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r9, fp}
 8014134:	20797274 	rsbscs	r7, r9, r4, ror r2
 8014138:	09090a7b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r6, r9, fp}
 801413c:	656c0909 	strbvs	r0, [ip, #-2313]!	; 0xfffff6f7
 8014140:	65722074 	ldrbvs	r2, [r2, #-116]!	; 0xffffff8c
 8014144:	77613d73 			; <UNDEFINED> instruction: 0x77613d73
 8014148:	20746961 	rsbscs	r6, r4, r1, ror #18
 801414c:	63746566 	cmnvs	r4, #427819008	; 0x19800000
 8014150:	72752868 	rsbsvc	r2, r5, #104, 16	; 0x680000
 8014154:	0a3b296c 	beq	8ede70c <__exidx_end+0xec9398>
 8014158:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 801415c:	75746572 	ldrbvc	r6, [r4, #-1394]!	; 0xfffffa8e
 8014160:	61206e72 			; <UNDEFINED> instruction: 0x61206e72
 8014164:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 8014168:	73657220 	cmnvc	r5, #32, 4
 801416c:	6f736a2e 	svcvs	0x00736a2e
 8014170:	3b29286e 	blcc	8a5e330 <__exidx_end+0xa48fbc>
 8014174:	7d09090a 	vstrvc.16	s0, [r9, #-20]	; 0xffffffec	; <UNPREDICTABLE>
 8014178:	74616320 	strbtvc	r6, [r1], #-800	; 0xfffffce0
 801417c:	28206863 	stmdacs	r0!, {r0, r1, r5, r6, fp, sp, lr}
 8014180:	6f727265 	svcvs	0x00727265
 8014184:	7b202972 	blvc	881e754 <__exidx_end+0x8093e0>
 8014188:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 801418c:	6e6f6309 	cdpvs	3, 6, cr6, cr15, cr9, {0}
 8014190:	656c6f73 	strbvs	r6, [ip, #-3955]!	; 0xfffff08d
 8014194:	676f6c2e 	strbvs	r6, [pc, -lr, lsr #24]!
 8014198:	72726528 	rsbsvc	r6, r2, #40, 10	; 0xa000000
 801419c:	3b29726f 	blcc	8a70b60 <__exidx_end+0xa5b7ec>
 80141a0:	7d09090a 	vstrvc.16	s0, [r9, #-20]	; 0xffffffec	; <UNPREDICTABLE>
 80141a4:	0a0a7d0a 	beq	82b35d4 <__exidx_end+0x29e260>
 80141a8:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 80141ac:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 80141b0:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 80141b4:	72206e6f 	eorvc	r6, r0, #1776	; 0x6f0
 80141b8:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 80141bc:	73694c72 	cmnvc	r9, #29184	; 0x7200
 80141c0:	20292874 	eorcs	r2, r9, r4, ror r8
 80141c4:	09090a7b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r6, r9, fp}
 80141c8:	2074656c 	rsbscs	r6, r4, ip, ror #10
 80141cc:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 80141d0:	6177613d 	cmnvs	r7, sp, lsr r1
 80141d4:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 80141d8:	534a7465 	movtpl	r7, #42085	; 0xa465
 80141dc:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 80141e0:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 80141e4:	0a3b2927 	beq	8ede688 <__exidx_end+0xec9314>
 80141e8:	6f640909 	svcvs	0x00640909
 80141ec:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 80141f0:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 80141f4:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
 80141f8:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 80141fc:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 8014200:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 8014204:	73694c64 	cmnvc	r9, #100, 24	; 0x6400
 8014208:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 801420c:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
 8014210:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
 8014214:	3c223d4c 	stccc	13, cr3, [r2], #-304	; 0xfffffed0
 8014218:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
 801421c:	73696c2b 	cmnvc	r9, #11008	; 0x2b00
 8014220:	696c2e74 	stmdbvs	ip!, {r2, r4, r5, r6, r9, sl, fp, sp}^
 8014224:	6e2e7473 	mcrvs	4, 1, r7, cr14, cr3, {3}
 8014228:	2b656d61 	blcs	996f7b4 <__exidx_end+0x195a440>
 801422c:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 80141ac <index_js+0xb4>
 8014230:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8014234:	2b223e69 	blcs	88a3be0 <__exidx_end+0x88e86c>
 8014238:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 801423c:	73696c2e 	cmnvc	r9, #11776	; 0x2e00
 8014240:	6f6e2e74 	svcvs	0x006e2e74
 8014244:	742e6564 	strtvc	r6, [lr], #-1380	; 0xfffffa9c
 8014248:	2b657079 	blcs	9970434 <__exidx_end+0x195b0c0>
 801424c:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 80141cc <index_js+0xd4>
 8014250:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8014254:	2b223e69 	blcs	88a3c00 <__exidx_end+0x88e88c>
 8014258:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 801425c:	73696c2e 	cmnvc	r9, #11776	; 0x2e00
 8014260:	6f6e2e74 	svcvs	0x006e2e74
 8014264:	702e6564 	eorvc	r6, lr, r4, ror #10
 8014268:	2e74726f 	cdpcs	2, 7, cr7, cr4, cr15, {3}
 801426c:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 8014270:	2f3c222b 	svccs	0x003c222b
 8014274:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
 8014278:	0a7d0a3b 	beq	9f56b6c <__exidx_end+0x1f417f8>
 801427c:	7973610a 	ldmdbvc	r3!, {r1, r3, r8, sp, lr}^
 8014280:	6620636e 	strtvs	r6, [r0], -lr, ror #6
 8014284:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 8014288:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 801428c:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 8014290:	69447265 	stmdbvs	r4, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8014294:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 8014298:	2879726f 	ldmdacs	r9!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
 801429c:	0a7b2029 	beq	9edc348 <__exidx_end+0x1ec6fd4>
 80142a0:	6c090909 			; <UNDEFINED> instruction: 0x6c090909
 80142a4:	64207465 	strtvs	r7, [r0], #-1125	; 0xfffffb9b
 80142a8:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
 80142ac:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 80142b0:	6177613d 	cmnvs	r7, sp, lsr r1
 80142b4:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 80142b8:	534a7465 	movtpl	r7, #42085	; 0xa465
 80142bc:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 80142c0:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 80142c4:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 80142c8:	3b292779 	blcc	8a5e0b4 <__exidx_end+0xa48d40>
 80142cc:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 80142d0:	2074656c 	rsbscs	r6, r4, ip, ror #10
 80142d4:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 80142d8:	0a22223d 	beq	889cbd4 <__exidx_end+0x887860>
 80142dc:	6c090909 			; <UNDEFINED> instruction: 0x6c090909
 80142e0:	66207465 	strtvs	r7, [r0], -r5, ror #8
 80142e4:	6e656c69 	cdpvs	12, 6, cr6, cr5, cr9, {3}
 80142e8:	73656d61 	cmnvc	r5, #6208	; 0x1840
 80142ec:	6a624f3d 	bvs	98a7fe8 <__exidx_end+0x1892c74>
 80142f0:	2e746365 	cdpcs	3, 7, cr6, cr4, cr5, {3}
 80142f4:	7379656b 	cmnvc	r9, #448790528	; 0x1ac00000
 80142f8:	72696428 	rsbvc	r6, r9, #40, 8	; 0x28000000
 80142fc:	6f746365 	svcvs	0x00746365
 8014300:	225b7972 	subscs	r7, fp, #1867776	; 0x1c8000
 8014304:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8014308:	295d2273 	ldmdbcs	sp, {r0, r1, r4, r5, r6, r9, sp}^
 801430c:	09090a3b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r9, fp}
 8014310:	6c696609 	stclvs	6, cr6, [r9], #-36	; 0xffffffdc
 8014314:	6d616e65 	stclvs	14, cr6, [r1, #-404]!	; 0xfffffe6c
 8014318:	662e7365 	strtvs	r7, [lr], -r5, ror #6
 801431c:	6145726f 	cmpvs	r5, pc, ror #4
 8014320:	66286863 	strtvs	r6, [r8], -r3, ror #16
 8014324:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 8014328:	286e6f69 	stmdacs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 801432c:	2979656b 	ldmdbcs	r9!, {r0, r1, r3, r5, r6, r8, sl, sp, lr}^
 8014330:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 8014334:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 8014338:	20726176 	rsbscs	r6, r2, r6, ror r1
 801433c:	756c6176 	strbvc	r6, [ip, #-374]!	; 0xfffffe8a
 8014340:	203d2065 	eorscs	r2, sp, r5, rrx
 8014344:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8014348:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 801434c:	66225b79 			; <UNDEFINED> instruction: 0x66225b79
 8014350:	73656c69 	cmnvc	r5, #26880	; 0x6900
 8014354:	6b5b5d22 	blvs	96eb7e4 <__exidx_end+0x16d6470>
 8014358:	3b5d7965 	blcc	97728f4 <__exidx_end+0x175d580>
 801435c:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8014360:	74680909 	strbtvc	r0, [r8], #-2313	; 0xfffff6f7
 8014364:	3d2b6c6d 	stccc	12, cr6, [fp, #-436]!	; 0xfffffe4c
 8014368:	706f3c22 	rsbvc	r3, pc, r2, lsr #24
 801436c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8014370:	6c617620 	stclvs	6, cr7, [r1], #-128	; 0xffffff80
 8014374:	223d6575 	eorscs	r6, sp, #490733568	; 0x1d400000
 8014378:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 801437c:	223e222b 	eorscs	r2, lr, #-1342177278	; 0xb0000002
 8014380:	6c61762b 	stclvs	6, cr7, [r1], #-172	; 0xffffff54
 8014384:	222b6575 	eorcs	r6, fp, #490733568	; 0x1d400000
 8014388:	706f2f3c 	rsbvc	r2, pc, ip, lsr pc	; <UNPREDICTABLE>
 801438c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8014390:	0a3b223e 	beq	8edcc90 <__exidx_end+0xec791c>
 8014394:	7d090909 	vstrvc.16	s0, [r9, #-18]	; 0xffffffee	; <UNPREDICTABLE>
 8014398:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 801439c:	6f640909 	svcvs	0x00640909
 80143a0:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 80143a4:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 80143a8:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
 80143ac:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 80143b0:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 80143b4:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 80143b8:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
 80143bc:	6f746365 	svcvs	0x00746365
 80143c0:	29227972 	stmdbcs	r2!, {r1, r4, r5, r6, r8, fp, ip, sp, lr}
 80143c4:	6e6e692e 	vmulvs.f16	s13, s28, s29	; <UNPREDICTABLE>
 80143c8:	54487265 	strbpl	r7, [r8], #-613	; 0xfffffd9b
 80143cc:	683d4c4d 	ldmdavs	sp!, {r0, r2, r3, r6, sl, fp, lr}
 80143d0:	3b6c6d74 	blcc	9b2f9a8 <__exidx_end+0x1b1a634>
 80143d4:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 80143d8:	5f746567 	svcpl	0x00746567
 80143dc:	28747874 	ldmdacs	r4!, {r2, r4, r5, r6, fp, ip, sp, lr}^
 80143e0:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 80143e4:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 80143e8:	5d305b73 	fldmdbxpl	r0!, {d5-d61}	;@ Deprecated
 80143ec:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
 80143f0:	73610a0a 	cmnvc	r1, #40960	; 0xa000
 80143f4:	20636e79 	rsbcs	r6, r3, r9, ror lr
 80143f8:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 80143fc:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8014400:	6e657220 	cdpvs	2, 6, cr7, cr5, cr0, {1}
 8014404:	56726564 	ldrbtpl	r6, [r2], -r4, ror #10
 8014408:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 801440c:	29286e6f 	stmdbcs	r8!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
 8014410:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 8014414:	74656c09 	strbtvc	r6, [r5], #-3081	; 0xfffff3f7
 8014418:	72657620 	rsbvc	r7, r5, #32, 12	; 0x2000000
 801441c:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 8014420:	6177613d 	cmnvs	r7, sp, lsr r1
 8014424:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8014428:	534a7465 	movtpl	r7, #42085	; 0xa465
 801442c:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8014430:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8014434:	276e6f69 	strbcs	r6, [lr, -r9, ror #30]!
 8014438:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 801443c:	636f6409 	cmnvs	pc, #150994944	; 0x9000000
 8014440:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
 8014444:	65672e74 	strbvs	r2, [r7, #-3700]!	; 0xfffff18c
 8014448:	656c4574 	strbvs	r4, [ip, #-1396]!	; 0xfffffa8c
 801444c:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
 8014450:	64497942 	strbvs	r7, [r9], #-2370	; 0xfffff6be
 8014454:	64692228 	strbtvs	r2, [r9], #-552	; 0xfffffdd8
 8014458:	73726556 	cmnvc	r2, #360710144	; 0x15800000
 801445c:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 8014460:	6e692e29 	cdpvs	14, 6, cr2, cr9, cr9, {1}
 8014464:	4872656e 	ldmdami	r2!, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^
 8014468:	3d4c4d54 	stclcc	13, cr4, [ip, #-336]	; 0xfffffeb0
 801446c:	696c3c22 	stmdbvs	ip!, {r1, r5, sl, fp, ip, sp}^
 8014470:	2b22563e 	blcs	88a9d70 <__exidx_end+0x8949fc>
 8014474:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8014478:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 801447c:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8014480:	2b6e6f69 	blcs	9bb022c <__exidx_end+0x1b9aeb8>
 8014484:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8014404 <index_js+0x30c>
 8014488:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 801448c:	2b223e69 	blcs	88a3e38 <__exidx_end+0x88eac4>
 8014490:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8014494:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 8014498:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
 801449c:	61642e64 	cmnvs	r4, r4, ror #28
 80144a0:	222b6574 	eorcs	r6, fp, #116, 10	; 0x1d000000
 80144a4:	696c2f3c 	stmdbvs	ip!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 80144a8:	696c3c3e 	stmdbvs	ip!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}^
 80144ac:	762b223e 			; <UNDEFINED> instruction: 0x762b223e
 80144b0:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 80144b4:	622e6e6f 	eorvs	r6, lr, #1776	; 0x6f0
 80144b8:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
 80144bc:	6d69742e 	cfstrdvs	mvd7, [r9, #-184]!	; 0xffffff48
 80144c0:	3c222b65 			; <UNDEFINED> instruction: 0x3c222b65
 80144c4:	3e696c2f 	cdpcc	12, 6, cr6, cr9, cr15, {1}
 80144c8:	3e696c3c 	mcrcc	12, 3, r6, cr9, cr12, {1}
 80144cc:	65762b22 	ldrbvs	r2, [r6, #-2850]!	; 0xfffff4de
 80144d0:	6f697372 	svcvs	0x00697372
 80144d4:	6f622e6e 	svcvs	0x00622e6e
 80144d8:	2b647261 	blcs	9930e64 <__exidx_end+0x191baf0>
 80144dc:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 801445c <index_js+0x364>
 80144e0:	3b223e69 	blcc	88a3e8c <__exidx_end+0x88eb18>
 80144e4:	0a0a7d0a 	beq	82b3914 <__exidx_end+0x29e5a0>
 80144e8:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 80144ec:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 80144f0:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 80144f4:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 80144f8:	745f7465 	ldrbvc	r7, [pc], #-1125	; 8014500 <index_js+0x408>
 80144fc:	73287478 			; <UNDEFINED> instruction: 0x73287478
 8014500:	20296c65 	eorcs	r6, r9, r5, ror #24
 8014504:	6c090a7b 			; <UNDEFINED> instruction: 0x6c090a7b
 8014508:	74207465 	strtvc	r7, [r0], #-1125	; 0xfffffb9b
 801450c:	613d7478 	teqvs	sp, r8, ror r4
 8014510:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 8014514:	74656720 	strbtvc	r6, [r5], #-1824	; 0xfffff8e0
 8014518:	4e4f534a 	cdpmi	3, 4, cr5, cr15, cr10, {2}
 801451c:	6c657328 	stclvs	3, cr7, [r5], #-160	; 0xffffff60
 8014520:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 8014524:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8014528:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 801452c:	3b22223d 	blcc	889ce28 <__exidx_end+0x887ab4>
 8014530:	624f090a 	subvs	r0, pc, #163840	; 0x28000
 8014534:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
 8014538:	79656b2e 	stmdbvc	r5!, {r1, r2, r3, r5, r8, r9, fp, sp, lr}^
 801453c:	78742873 	ldmdavc	r4!, {r0, r1, r4, r5, r6, fp, sp}^
 8014540:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
 8014544:	2e295d6c 	cdpcs	13, 2, cr5, cr9, cr12, {3}
 8014548:	45726f66 	ldrbmi	r6, [r2, #-3942]!	; 0xfffff09a
 801454c:	28686361 	stmdacs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
 8014550:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 8014554:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8014558:	79656b28 	stmdbvc	r5!, {r3, r5, r8, r9, fp, sp, lr}^
 801455c:	0a7b2029 	beq	9edc608 <__exidx_end+0x1ec7294>
 8014560:	61760909 	cmnvs	r6, r9, lsl #18
 8014564:	61762072 	cmnvs	r6, r2, ror r0
 8014568:	2065756c 	rsbcs	r7, r5, ip, ror #10
 801456c:	7874203d 	ldmdavc	r4!, {r0, r2, r3, r4, r5, sp}^
 8014570:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
 8014574:	6b5b5d6c 	blvs	96ebb2c <__exidx_end+0x16d67b8>
 8014578:	3b5d7965 	blcc	9772b14 <__exidx_end+0x175d7a0>
 801457c:	2009090a 	andcs	r0, r9, sl, lsl #18
 8014580:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8014584:	3c223d2b 	stccc	13, cr3, [r2], #-172	; 0xffffff54
 8014588:	3c3e7274 	lfmcc	f7, 4, [lr], #-464	; 0xfffffe30
 801458c:	223e6474 	eorscs	r6, lr, #116, 8	; 0x74000000
 8014590:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 8014594:	2f3c222b 	svccs	0x003c222b
 8014598:	3c3e6474 	cfldrscc	mvf6, [lr], #-464	; 0xfffffe30
 801459c:	223e6474 	eorscs	r6, lr, #116, 8	; 0x74000000
 80145a0:	6c61762b 	stclvs	6, cr7, [r1], #-172	; 0xffffff54
 80145a4:	222b6575 	eorcs	r6, fp, #490733568	; 0x1d400000
 80145a8:	64742f3c 	ldrbtvs	r2, [r4], #-3900	; 0xfffff0c4
 80145ac:	742f3c3e 	strtvc	r3, [pc], #-3134	; 80145b4 <index_js+0x4bc>
 80145b0:	3b223e72 	blcc	88a3f80 <__exidx_end+0x88ec0c>
 80145b4:	297d090a 	ldmdbcs	sp!, {r1, r3, r8, fp}^
 80145b8:	64090a3b 	strvs	r0, [r9], #-2619	; 0xfffff5c5
 80145bc:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
 80145c0:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 80145c4:	45746567 	ldrbmi	r6, [r4, #-1383]!	; 0xfffffa99
 80145c8:	656d656c 	strbvs	r6, [sp, #-1388]!	; 0xfffffa94
 80145cc:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
 80145d0:	22286449 	eorcs	r6, r8, #1224736768	; 0x49000000
 80145d4:	78546469 	ldmdavc	r4, {r0, r3, r5, r6, sl, sp, lr}^
 80145d8:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 80145dc:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
 80145e0:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
 80145e4:	74683d4c 	strbtvc	r3, [r8], #-3404	; 0xfffff2b4
 80145e8:	0a3b6c6d 	beq	8eef7a4 <__exidx_end+0xeda430>
 80145ec:	720a0a7d 	andvc	r0, sl, #512000	; 0x7d000
 80145f0:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 80145f4:	73694c72 	cmnvc	r9, #29184	; 0x7200
 80145f8:	3b292874 	blcc	8a5e7d0 <__exidx_end+0xa4945c>
 80145fc:	6e65720a 	cdpvs	2, 6, cr7, cr5, cr10, {0}
 8014600:	44726564 	ldrbtmi	r6, [r2], #-1380	; 0xfffffa9c
 8014604:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
 8014608:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 801460c:	0a3b2928 	beq	8edeab4 <__exidx_end+0xec9740>
 8014610:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 8014614:	65567265 	ldrbvs	r7, [r6, #-613]	; 0xfffffd9b
 8014618:	6f697372 	svcvs	0x00697372
 801461c:	3b29286e 	blcc	8a5e7dc <__exidx_end+0xa49468>
 8014620:	3332000a 	teqcc	r2, #10
 8014624:	35322e39 	ldrcc	r2, [r2, #-3641]!	; 0xfffff1c7
 8014628:	2e302e35 	mrccs	14, 1, r2, cr0, cr5, {1}
 801462c:	2e250030 	mcrcs	0, 1, r0, cr5, cr0, {1}
 8014630:	20733834 	rsbscs	r3, r3, r4, lsr r8
 8014634:	30007325 	andcc	r7, r0, r5, lsr #6
 8014638:	6f4e202e 	svcvs	0x004e202e
 801463c:	73616320 	cmnvc	r1, #32, 6	; 0x80000000
 8014640:	6d207365 	stcvs	3, cr7, [r0, #-404]!	; 0xfffffe6c
 8014644:	68637461 	stmdavs	r3!, {r0, r5, r6, sl, ip, sp, lr}^
 8014648:	202c6465 	eorcs	r6, ip, r5, ror #8
 801464c:	73696874 	cmnvc	r9, #116, 16	; 0x740000
 8014650:	6f687320 	svcvs	0x00687320
 8014654:	6e646c75 	mcrvs	12, 3, r6, cr4, cr5, {3}
 8014658:	68207427 	stmdavs	r0!, {r0, r1, r2, r5, sl, ip, sp, lr}
 801465c:	65707061 	ldrbvs	r7, [r0, #-97]!	; 0xffffff9f
 8014660:	000a216e 	andeq	r2, sl, lr, ror #2
 8014664:	00505448 	subseq	r5, r0, r8, asr #8
 8014668:	0050544c 	subseq	r5, r0, ip, asr #8
 801466c:	64697242 	strbtvs	r7, [r9], #-578	; 0xfffffdbe
 8014670:	000a6567 	andeq	r6, sl, r7, ror #10
 8014674:	72694620 	rsbvc	r4, r9, #32, 12	; 0x2000000
 8014678:	7261776d 	rsbvc	r7, r1, #28573696	; 0x1b40000
 801467c:	203a2065 	eorscs	r2, sl, r5, rrx
 8014680:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8014684:	20000a64 	andcs	r0, r0, r4, ror #20
 8014688:	20444943 	subcs	r4, r4, r3, asr #18
 801468c:	20202020 	eorcs	r2, r0, r0, lsr #32
 8014690:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8014694:	20000a73 	andcs	r0, r0, r3, ror sl
 8014698:	7074754f 	rsbsvc	r7, r4, pc, asr #10
 801469c:	000a7475 	andeq	r7, sl, r5, ror r4
 80146a0:	6f502020 	svcvs	0x00502020
 80146a4:	25207472 	strcs	r7, [r0, #-1138]!	; 0xfffffb8e
 80146a8:	55206432 	strpl	r6, [r0, #-1074]!	; 0xfffffbce
 80146ac:	6576696e 	ldrbvs	r6, [r6, #-2414]!	; 0xfffff692
 80146b0:	20657372 	rsbcs	r7, r5, r2, ror r3
 80146b4:	64332d25 	ldrtvs	r2, [r3], #-3365	; 0xfffff2db
 80146b8:	73255b20 			; <UNDEFINED> instruction: 0x73255b20
 80146bc:	20000a5d 	andcs	r0, r0, sp, asr sl
 80146c0:	75706e49 	ldrbvc	r6, [r0, #-3657]!	; 0xfffff1b7
 80146c4:	20000a74 	andcs	r0, r0, r4, ror sl
 80146c8:	726f5020 	rsbvc	r5, pc, #32
 80146cc:	32252074 	eorcc	r2, r5, #116	; 0x74
 80146d0:	6e552064 	cdpvs	0, 5, cr2, cr5, cr4, {3}
 80146d4:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
 80146d8:	25206573 	strcs	r6, [r0, #-1395]!	; 0xfffffa8d
 80146dc:	2064332d 	rsbcs	r3, r4, sp, lsr #6
 80146e0:	5d64255b 	cfstr64pl	mvdx2, [r4, #-364]!	; 0xfffffe94
 80146e4:	5320000a 			; <UNDEFINED> instruction: 0x5320000a
 80146e8:	68636e79 	stmdavs	r3!, {r0, r3, r4, r5, r6, r9, sl, fp, sp, lr}^
 80146ec:	696e6f72 	stmdbvs	lr!, {r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 80146f0:	6920657a 	stmdbvs	r0!, {r1, r3, r4, r5, r6, r8, sl, sp, lr}
 80146f4:	69642073 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sp}^
 80146f8:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
 80146fc:	000a6465 	andeq	r6, sl, r5, ror #8

08014700 <E131MsgConst::START>:
 8014700:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
 8014704:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 8014708:	43417320 	movtmi	r7, #4896	; 0x1320
 801470c:	3145204e 	cmpcc	r5, lr, asr #32
 8014710:	0031332e 	eorseq	r3, r1, lr, lsr #6

08014714 <E131MsgConst::PARAMS>:
 8014714:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 8014718:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 801471c:	20676e69 	rsbcs	r6, r7, r9, ror #28
 8014720:	4e434173 	mcrmi	1, 2, r4, cr3, cr3, {3}
 8014724:	2e314520 	cfabs64cs	mvdx4, mvdx1
 8014728:	 	movwvc	r3, #307	; 0x133

0801472b <E131MsgConst::STARTED>:
 801472b:	4e434173 	mcrmi	1, 2, r4, cr3, cr3, {3}
 801472f:	2e314520 	cfabs64cs	mvdx4, mvdx1
 8014733:	73203133 			; <UNDEFINED> instruction: 0x73203133
 8014737:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
 801473b:	69006465 	stmdbvs	r0, {r0, r2, r5, r6, sl, sp, lr}
 801473f:	7475706e 	ldrbtvc	r7, [r5], #-110	; 0xffffff92
 8014743:	74756f00 	ldrbtvc	r6, [r5], #-3840	; 0xfffff100
 8014747:	00747570 	rsbseq	r7, r4, r0, ror r5
 801474b:	00707468 	rsbseq	r7, r0, r8, ror #8
 801474f:	0070746c 	rsbseq	r7, r0, ip, ror #8
 8014753:	20584d44 	subscs	r4, r8, r4, asr #26
 8014757:	7074754f 	rsbsvc	r7, r4, pc, asr #10
 801475b:	44007475 	strmi	r7, [r0], #-1141	; 0xfffffb8b
 801475f:	4920584d 	stmdbmi	r0!, {r0, r2, r3, r6, fp, ip, lr}
 8014763:	7475706e 	ldrbtvc	r7, [r5], #-110	; 0xffffff92
 8014767:	68744f00 	ldmdavs	r4!, {r8, r9, sl, fp, lr}^
 801476b:	 	strvs	r7, [r0], #-613	; 0xfffffd9b

0801476e <E131ParamsConst::DISABLE_MERGE_TIMEOUT>:
 801476e:	61736964 	cmnvs	r3, r4, ror #18
 8014772:	5f656c62 	svcpl	0x00656c62
 8014776:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 801477a:	69745f65 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
 801477e:	756f656d 	strbvc	r6, [pc, #-1389]!	; 8014219 <index_js+0x121>
 8014782:	 	stmdbvs	r4!, {r2, r4, r5, r6}^

08014784 <E131ParamsConst::DISABLE_NETWORK_DATA_LOSS_TIMEOUT>:
 8014784:	61736964 	cmnvs	r3, r4, ror #18
 8014788:	5f656c62 	svcpl	0x00656c62
 801478c:	7774656e 	ldrbvc	r6, [r4, -lr, ror #10]!
 8014790:	5f6b726f 	svcpl	0x006b726f
 8014794:	61746164 	cmnvs	r4, r4, ror #2
 8014798:	736f6c5f 	cmnvc	pc, #24320	; 0x5f00
 801479c:	69745f73 	ldmdbvs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 80147a0:	756f656d 	strbvc	r6, [pc, #-1389]!	; 801423b <index_js+0x143>
 80147a4:	 	rsbsvc	r0, r0, #116	; 0x74

080147a6 <E131ParamsConst::PRIORITY>:
 80147a6:	6f697270 	svcvs	0x00697270
 80147aa:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
 80147ae:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 80147b2:	00615f74 	rsbeq	r5, r1, r4, ror pc
 80147b6:	72700000 	rsbsvc	r0, r0, #0
 80147ba:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 80147be:	705f7974 	subsvc	r7, pc, r4, ror r9	; <UNPREDICTABLE>
 80147c2:	5f74726f 	svcpl	0x0074726f
 80147c6:	00000062 	andeq	r0, r0, r2, rrx
 80147ca:	6f697270 	svcvs	0x00697270
 80147ce:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
 80147d2:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 80147d6:	00635f74 	rsbeq	r5, r3, r4, ror pc
 80147da:	72700000 	rsbsvc	r0, r0, #0
 80147de:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 80147e2:	705f7974 	subsvc	r7, pc, r4, ror r9	; <UNPREDICTABLE>
 80147e6:	5f74726f 	svcpl	0x0074726f
 80147ea:	00000064 	andeq	r0, r0, r4, rrx

080147ee <E131ParamsConst::FILE_NAME>:
 80147ee:	31333165 	teqcc	r3, r5, ror #2
 80147f2:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
	...

080147f7 <E117Const::ACN_PACKET_IDENTIFIER>:
 80147f7:	2d435341 	stclcs	3, cr5, [r3, #-260]	; 0xfffffefc
 80147fb:	312e3145 			; <UNDEFINED> instruction: 0x312e3145
 80147ff:	00000037 	andeq	r0, r0, r7, lsr r0

08014803 <E131BridgeConst::VERSION>:
 8014803:	30251801 	eorcc	r1, r5, r1, lsl #16
 8014807:	252d7838 	strcs	r7, [sp, #-2104]!	; 0xfffff7c8
 801480b:	2d783430 	cfldrdcs	mvd3, [r8, #-192]!	; 0xffffff40
 801480f:	78343025 	ldmdavc	r4!, {r0, r2, r5, ip, sp}
 8014813:	3230252d 	eorscc	r2, r0, #188743680	; 0xb400000
 8014817:	32302578 	eorscc	r2, r0, #120, 10	; 0x1e000000
 801481b:	30252d78 	eorcc	r2, r5, r8, ror sp
 801481f:	30257832 	eorcc	r7, r5, r2, lsr r8
 8014823:	30257832 	eorcc	r7, r5, r2, lsr r8
 8014827:	30257832 	eorcc	r7, r5, r2, lsr r8
 801482b:	30257832 	eorcc	r7, r5, r2, lsr r8
 801482f:	30257832 	eorcc	r7, r5, r2, lsr r8
 8014833:	44007832 	strmi	r7, [r0], #-2098	; 0xfffff7ce
 8014837:	5320584d 			; <UNDEFINED> instruction: 0x5320584d
 801483b:	0a646e65 	beq	99301d7 <__exidx_end+0x191ae63>
 801483f:	72422000 	subvc	r2, r2, #0
 8014843:	206b6165 	rsbcs	r6, fp, r5, ror #2
 8014847:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 801484b:	3a202020 	bcc	881c8d3 <__exidx_end+0x80755f>
 801484f:	0a642520 	beq	991dcd7 <__exidx_end+0x1908963>
 8014853:	414d2000 	mrsmi	r2, (UNDEF: 77)
 8014857:	69742042 	ldmdbvs	r4!, {r1, r6, sp}^
 801485b:	2020656d 	eorcs	r6, r0, sp, ror #10
 801485f:	3a202020 	bcc	881c8e7 <__exidx_end+0x807573>
 8014863:	0a642520 	beq	991dceb <__exidx_end+0x1908977>
 8014867:	65522000 	ldrbvs	r2, [r2, #-0]
 801486b:	73657266 	cmnvc	r5, #1610612742	; 0x60000006
 801486f:	61722068 	cmnvs	r2, r8, rrx
 8014873:	3a206574 	bcc	882de4b <__exidx_end+0x818ad7>
 8014877:	0a642520 	beq	991dcff <__exidx_end+0x190898b>
 801487b:	6c532000 	mravs	r2, r3, acc0
 801487f:	2073746f 	rsbscs	r7, r3, pc, ror #8
 8014883:	20202020 	eorcs	r2, r0, r0, lsr #32
 8014887:	3a202020 	bcc	881c90f <__exidx_end+0x80759b>
 801488b:	0a642520 	beq	991dd13 <__exidx_end+0x190899f>
	...

08014890 <vtable for DmxSend>:
	...
 8014898:	0800bb3b 	stmdaeq	r0, {r0, r1, r3, r4, r5, r8, r9, fp, ip, sp, pc}
 801489c:	0800bc09 	stmdaeq	r0, {r0, r3, sl, fp, ip, sp, pc}
 80148a0:	0800bb3d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r8, r9, fp, ip, sp, pc}
 80148a4:	0800bb6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r8, r9, fp, ip, sp, pc}
 80148a8:	0800bba1 	stmdaeq	r0, {r0, r5, r7, r8, r9, fp, ip, sp, pc}
 80148ac:	0800bb39 	stmdaeq	r0, {r0, r3, r4, r5, r8, r9, fp, ip, sp, pc}
 80148b0:	0800bbb1 	stmdaeq	r0, {r0, r4, r5, r7, r8, r9, fp, ip, sp, pc}
 80148b4:	080101a5 	stmdaeq	r1, {r0, r2, r5, r7, r8}
 80148b8:	0801019b 	stmdaeq	r1, {r0, r1, r3, r4, r7, r8}
 80148bc:	0801019f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r7, r8}
 80148c0:	080101a9 	stmdaeq	r1, {r0, r3, r5, r7, r8}

080148c4 <DmxParamsConst::BREAK_TIME>:
 80148c4:	61657262 	cmnvs	r5, r2, ror #4
 80148c8:	69745f6b 	ldmdbvs	r4!, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
 80148cc:	 	movwvc	r6, #1389	; 0x56d

080148cf <DmxParamsConst::SLOTS_COUNT>:
 80148cf:	746f6c73 	strbtvc	r6, [pc], #-3187	; 80148d7 <DmxParamsConst::SLOTS_COUNT+0x8>
 80148d3:	6f635f73 	svcvs	0x00635f73
 80148d7:	00746e75 	rsbseq	r6, r4, r5, ror lr

080148db <DmxParamsConst::REFRESH_RATE>:
 80148db:	72666572 	rsbvc	r6, r6, #478150656	; 0x1c800000
 80148df:	5f687365 	svcpl	0x00687365
 80148e3:	65746172 	ldrbvs	r6, [r4, #-370]!	; 0xfffffe8e
	...

080148e8 <DmxParamsConst::MAB_TIME>:
 80148e8:	5f62616d 	svcpl	0x0062616d
 80148ec:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
	...

080148f1 <DmxParamsConst::FILE_NAME>:
 80148f1:	61726170 	cmnvs	r2, r0, ror r1
 80148f5:	742e736d 	strtvc	r7, [lr], #-877	; 0xfffffc93
 80148f9:	 	andeq	r7, r0, r8, ror r4

080148fc <s_DirGpio>:
 80148fc:	40011800 	andmi	r1, r1, r0, lsl #16
 8014900:	00000200 	andeq	r0, r0, r0, lsl #4
 8014904:	40011800 	andmi	r1, r1, r0, lsl #16
 8014908:	00000400 	andeq	r0, r0, r0, lsl #8
 801490c:	40011800 	andmi	r1, r1, r0, lsl #16
 8014910:	00000800 	andeq	r0, r0, r0, lsl #16
 8014914:	40011800 	andmi	r1, r1, r0, lsl #16
 8014918:	00001000 	andeq	r1, r0, r0

0801491c <s_aStorSize>:
 801491c:	00000060 	andeq	r0, r0, r0, rrx
 8014920:	00000090 	muleq	r0, r0, r0
 8014924:	00000020 	andeq	r0, r0, r0, lsr #32
 8014928:	00000040 	andeq	r0, r0, r0, asr #32
 801492c:	00000060 	andeq	r0, r0, r0, rrx
 8014930:	00000040 	andeq	r0, r0, r0, asr #32
 8014934:	00000020 	andeq	r0, r0, r0, lsr #32
 8014938:	00000020 	andeq	r0, r0, r0, lsr #32
 801493c:	000001e0 	andeq	r0, r0, r0, ror #3
 8014940:	00000040 	andeq	r0, r0, r0, asr #32
 8014944:	00000020 	andeq	r0, r0, r0, lsr #32
 8014948:	00000060 	andeq	r0, r0, r0, rrx
 801494c:	00000030 	andeq	r0, r0, r0, lsr r0
 8014950:	00000020 	andeq	r0, r0, r0, lsr #32
 8014954:	000003b0 			; <UNDEFINED> instruction: 0x000003b0
 8014958:	00000030 	andeq	r0, r0, r0, lsr r0
 801495c:	00000040 	andeq	r0, r0, r0, asr #32
 8014960:	00000020 	andeq	r0, r0, r0, lsr #32
 8014964:	00000060 	andeq	r0, r0, r0, rrx
 8014968:	00000020 	andeq	r0, r0, r0, lsr #32
 801496c:	00000400 	andeq	r0, r0, r0, lsl #8
 8014970:	00000020 	andeq	r0, r0, r0, lsr #32
 8014974:	00000020 	andeq	r0, r0, r0, lsr #32
 8014978:	00000040 	andeq	r0, r0, r0, asr #32
 801497c:	00000060 	andeq	r0, r0, r0, rrx
 8014980:	00000020 	andeq	r0, r0, r0, lsr #32
 8014984:	00000020 	andeq	r0, r0, r0, lsr #32
 8014988:	00000020 	andeq	r0, r0, r0, lsr #32

0801498c <vtable for StoreDisplayUdf>:
	...
 8014994:	0800cee9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r9, sl, fp, lr, pc}
 8014998:	0800cf31 	stmdaeq	r0, {r0, r4, r5, r8, r9, sl, fp, lr, pc}
 801499c:	0800cf0d 	stmdaeq	r0, {r0, r2, r3, r8, r9, sl, fp, lr, pc}
 80149a0:	0800ceed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, r9, sl, fp, lr, pc}

080149a4 <vtable for StoreDmxSend>:
	...
 80149ac:	0800cf51 	stmdaeq	r0, {r0, r4, r6, r8, r9, sl, fp, lr, pc}
 80149b0:	0800cf99 	stmdaeq	r0, {r0, r3, r4, r7, r8, r9, sl, fp, lr, pc}
 80149b4:	0800cf75 	stmdaeq	r0, {r0, r2, r4, r5, r6, r8, r9, sl, fp, lr, pc}
 80149b8:	0800cf55 	stmdaeq	r0, {r0, r2, r4, r6, r8, r9, sl, fp, lr, pc}

080149bc <vtable for StoreE131>:
	...
 80149c4:	0800cfb9 	stmdaeq	r0, {r0, r3, r4, r5, r7, r8, r9, sl, fp, lr, pc}
 80149c8:	0800d001 	stmdaeq	r0, {r0, ip, lr, pc}
 80149cc:	0800cfdd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, sl, fp, lr, pc}
 80149d0:	0800cfbd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, r8, r9, sl, fp, lr, pc}

080149d4 <vtable for StoreNetwork>:
	...
 80149dc:	0800d021 	stmdaeq	r0, {r0, r5, ip, lr, pc}
 80149e0:	0800d135 	stmdaeq	r0, {r0, r2, r4, r5, r8, ip, lr, pc}
 80149e4:	0800d029 	stmdaeq	r0, {r0, r3, r5, ip, lr, pc}
 80149e8:	0800d149 	stmdaeq	r0, {r0, r3, r6, r8, ip, lr, pc}
 80149ec:	0800d0d9 	stmdaeq	r0, {r0, r3, r4, r6, r7, ip, lr, pc}
 80149f0:	0800d0ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, ip, lr, pc}
 80149f4:	0800d07d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, ip, lr, pc}
 80149f8:	0800d105 	stmdaeq	r0, {r0, r2, r8, ip, lr, pc}
 80149fc:	0800d04d 	stmdaeq	r0, {r0, r2, r3, r6, ip, lr, pc}
 8014a00:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 8014a04:	00000000 	andeq	r0, r0, r0
 8014a08:	0800d023 	stmdaeq	r0, {r0, r1, r5, ip, lr, pc}
 8014a0c:	0800d141 	stmdaeq	r0, {r0, r6, r8, ip, lr, pc}
 8014a10:	0800d0fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, ip, lr, pc}
 8014a14:	0800d0d1 	stmdaeq	r0, {r0, r4, r6, r7, ip, lr, pc}
 8014a18:	0800d0a5 	stmdaeq	r0, {r0, r2, r5, r7, ip, lr, pc}
 8014a1c:	0800d12d 	stmdaeq	r0, {r0, r2, r3, r5, r8, ip, lr, pc}
 8014a20:	0800d075 	stmdaeq	r0, {r0, r2, r4, r5, r6, ip, lr, pc}

08014a24 <vtable for StoreRemoteConfig>:
	...
 8014a2c:	0800d17d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r8, ip, lr, pc}
 8014a30:	0800d1c5 	stmdaeq	r0, {r0, r2, r6, r7, r8, ip, lr, pc}
 8014a34:	0800d1a1 	stmdaeq	r0, {r0, r5, r7, r8, ip, lr, pc}
 8014a38:	0800d181 	stmdaeq	r0, {r0, r7, r8, ip, lr, pc}
 8014a3c:	32334447 	eorscc	r4, r3, #1191182336	; 0x47000000
 8014a40:	37303246 	ldrcc	r3, [r0, -r6, asr #4]!
 8014a44:	74654400 	strbtvc	r4, [r5], #-1024	; 0xfffffc00
 8014a48:	65746365 	ldrbvs	r6, [r4, #-869]!	; 0xfffffc9b
 8014a4c:	73252064 			; <UNDEFINED> instruction: 0x73252064
 8014a50:	74697720 	strbtvc	r7, [r9], #-1824	; 0xfffff8e0
 8014a54:	6f742068 	svcvs	0x00742068
 8014a58:	206c6174 	rsbcs	r6, ip, r4, ror r1
 8014a5c:	62206425 	eorvs	r6, r0, #620756992	; 0x25000000
 8014a60:	73657479 	cmnvc	r5, #2030043136	; 0x79000000
 8014a64:	64255b20 	strtvs	r5, [r5], #-2848	; 0xfffff4e0
 8014a68:	5d426b20 	vstrpl	d22, [r2, #-128]	; 0xffffff80
 8014a6c:	6374000a 	cmnvs	r4, #10
 8014a70:	65625f70 	strbvs	r5, [r2, #-3952]!	; 0xfffff090
 8014a74:	3a6e6967 	bcc	9baf018 <__exidx_end+0x1b99ca4>
 8014a78:	6f6f7420 	svcvs	0x006f7420
 8014a7c:	6e616d20 	cdpvs	13, 6, cr6, cr1, cr0, {1}
 8014a80:	6f632079 	svcvs	0x00632079
 8014a84:	63656e6e 	cmnvs	r5, #1760	; 0x6e0
 8014a88:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8014a8c:	69620073 	stmdbvs	r2!, {r0, r1, r4, r5, r6}^
 8014a90:	7500646e 	strvc	r6, [r0, #-1134]	; 0xfffffb92
 8014a94:	6e69626e 	cdpvs	2, 6, cr6, cr9, cr14, {3}
 8014a98:	41000a64 	tstmi	r0, r4, ror #20
 8014a9c:	6c205052 	stcvs	0, cr5, [r0], #-328	; 0xfffffeb8
 8014aa0:	756b6f6f 	strbvc	r6, [fp, #-3951]!	; 0xfffff091
 8014aa4:	61662070 	smcvs	25088	; 0x6200
 8014aa8:	64656c69 	strbtvs	r6, [r5], #-3177	; 0xfffff397
 8014aac:	203e2d20 	eorscs	r2, lr, r0, lsr #26
 8014ab0:	61666564 	cmnvs	r6, r4, ror #10
 8014ab4:	20746c75 	rsbscs	r6, r4, r5, ror ip
 8014ab8:	65746167 	ldrbvs	r6, [r4, #-359]!	; 0xfffffe99
 8014abc:	0a796177 	beq	9e6d0a0 <__exidx_end+0x1e57d2c>
 8014ac0:	50524100 	subspl	r4, r2, r0, lsl #2
 8014ac4:	6f6f6c20 	svcvs	0x006f6c20
 8014ac8:	2070756b 	rsbscs	r7, r0, fp, ror #10
 8014acc:	6c696166 	stfvse	f6, [r9], #-408	; 0xfffffe68
 8014ad0:	000a6465 	andeq	r6, sl, r5, ror #8

08014ad4 <NetworkConst::MSG_NETWORK_INIT>:
 8014ad4:	7774654e 	ldrbvc	r6, [r4, -lr, asr #10]!
 8014ad8:	206b726f 	rsbcs	r7, fp, pc, ror #4
 8014adc:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
 8014ae0:	34323200 	ldrtcc	r3, [r2], #-512	; 0xfffffe00
 8014ae4:	302e302e 	eorcc	r3, lr, lr, lsr #32
 8014ae8:	3135322e 	teqcc	r5, lr, lsr #4
 8014aec:	63745f00 	cmnvs	r4, #0, 30
 8014af0:	6f6c2e70 	svcvs	0x006c2e70
 8014af4:	006c6163 	rsbeq	r6, ip, r3, ror #2
 8014af8:	7265735f 	rsbvc	r7, r5, #2080374785	; 0x7c000001
 8014afc:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
 8014b00:	645f2e73 	ldrbvs	r2, [pc], #-3699	; 8014b08 <NetworkConst::MSG_NETWORK_INIT+0x34>
 8014b04:	732d736e 			; <UNDEFINED> instruction: 0x732d736e
 8014b08:	755f2e64 	ldrbvc	r2, [pc, #-3684]	; 8013cac <RemoteConfigConst::PARAMS_ENABLE_FACTORY+0x3a>
 8014b0c:	6c2e7064 	stcvs	0, cr7, [lr], #-400	; 0xfffffe70
 8014b10:	6c61636f 	stclvs	3, cr6, [r1], #-444	; 0xfffffe44
 8014b14:	4e446d00 	cdpmi	13, 4, cr6, cr4, cr0, {0}
 8014b18:	20000a53 	andcs	r0, r0, r3, asr sl
 8014b1c:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 8014b20:	6e6e7572 	mcrvs	5, 3, r7, cr14, cr2, {3}
 8014b24:	0a676e69 	beq	99f04d0 <__exidx_end+0x19db15c>
 8014b28:	614e2000 	mrsvs	r2, (UNDEF: 78)
 8014b2c:	3a20656d 	bcc	882e0e8 <__exidx_end+0x818d74>
 8014b30:	0a732520 	beq	9cddfb8 <__exidx_end+0x1cc8c44>
 8014b34:	73252000 			; <UNDEFINED> instruction: 0x73252000
 8014b38:	20642520 	rsbcs	r2, r4, r0, lsr #10
 8014b3c:	000a7325 	andeq	r7, sl, r5, lsr #6
 8014b40:	30687465 	rsbcc	r7, r8, r5, ror #8
 8014b44:	67696700 	strbvs	r6, [r9, -r0, lsl #14]!
 8014b48:	76656461 	strbtvc	r6, [r5], -r1, ror #8
 8014b4c:	5f656369 	svcpl	0x00656369
 8014b50:	74654e00 	strbtvc	r4, [r5], #-3584	; 0xfffff200
 8014b54:	6b726f77 	blvs	9cb0938 <__exidx_end+0x1c9b5c4>
 8014b58:	4820000a 	stmdami	r0!, {r1, r3}
 8014b5c:	6e74736f 	cdpvs	3, 7, cr7, cr4, cr15, {3}
 8014b60:	20656d61 	rsbcs	r6, r5, r1, ror #26
 8014b64:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8014b68:	20000a73 	andcs	r0, r0, r3, ror sl
 8014b6c:	614e6649 	cmpvs	lr, r9, asr #12
 8014b70:	2020656d 	eorcs	r6, r0, sp, ror #10
 8014b74:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8014b78:	203a6425 	eorscs	r6, sl, r5, lsr #8
 8014b7c:	000a7325 	andeq	r7, sl, r5, lsr #6
 8014b80:	656e4920 	strbvs	r4, [lr, #-2336]!	; 0xfffff6e0
 8014b84:	20202074 	eorcs	r2, r0, r4, ror r0
 8014b88:	3a202020 	bcc	881cc10 <__exidx_end+0x80789c>
 8014b8c:	2e642520 	cdpcs	5, 6, cr2, cr4, cr0, {1}
 8014b90:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8014b94:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8014b98:	0a64252f 	beq	991e05c <__exidx_end+0x1908ce8>
 8014b9c:	654e2000 	strbvs	r2, [lr, #-0]
 8014ba0:	73616d74 	cmnvc	r1, #116, 26	; 0x1d00
 8014ba4:	2020206b 	eorcs	r2, r0, fp, rrx
 8014ba8:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8014bac:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8014bb0:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8014bb4:	20000a64 	andcs	r0, r0, r4, ror #20
 8014bb8:	65746147 	ldrbvs	r6, [r4, #-327]!	; 0xfffffeb9
 8014bbc:	20796177 	rsbscs	r6, r9, r7, ror r1
 8014bc0:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8014bc4:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8014bc8:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8014bcc:	0a64252e 	beq	991e08c <__exidx_end+0x1908d18>
 8014bd0:	72422000 	subvc	r2, r2, #0
 8014bd4:	6364616f 	cmnvs	r4, #-1073741797	; 0xc000001b
 8014bd8:	20747361 	rsbscs	r7, r4, r1, ror #6
 8014bdc:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8014be0:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8014be4:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8014be8:	20000a64 	andcs	r0, r0, r4, ror #20
 8014bec:	2063614d 	rsbcs	r6, r3, sp, asr #2
 8014bf0:	20202020 	eorcs	r2, r0, r0, lsr #32
 8014bf4:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8014bf8:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8014bfc:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 8014c00:	2e253a78 			; <UNDEFINED> instruction: 0x2e253a78
 8014c04:	253a7832 	ldrcs	r7, [sl, #-2098]!	; 0xfffff7ce
 8014c08:	3a78322e 	bcc	9e214c8 <__exidx_end+0x1e0c154>
 8014c0c:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8014c10:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 8014c14:	20000a78 	andcs	r0, r0, r8, ror sl
 8014c18:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
 8014c1c:	20202020 	eorcs	r2, r0, r0, lsr #32
 8014c20:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8014c24:	000a6325 	andeq	r6, sl, r5, lsr #6
 8014c28:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
 8014c2c:	49206369 	stmdbmi	r0!, {r0, r3, r5, r6, r8, r9, sp, lr}
 8014c30:	544e0050 	strbpl	r0, [lr], #-80	; 0xffffffb0
 8014c34:	65532050 	ldrbvs	r2, [r3, #-80]	; 0xffffffb0
 8014c38:	72657672 	rsbvc	r7, r5, #119537664	; 0x7200000
 8014c3c:	73252200 			; <UNDEFINED> instruction: 0x73252200
 8014c40:	2e253a22 	vmulcs.f32	s6, s10, s5
 8014c44:	002c662a 	eoreq	r6, ip, sl, lsr #12
 8014c48:	3d732523 	cfldr64cc	mvdx2, [r3, #-140]!	; 0xffffff74
 8014c4c:	662a2e25 	strtvs	r2, [sl], -r5, lsr #28
 8014c50:	 	rsbvc	r0, r9, sl

08014c52 <NetworkParamsConst::IP_ADDRESS>:
 8014c52:	615f7069 	cmpvs	pc, r9, rrx
 8014c56:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0xfffffb9c
 8014c5a:	 	mcrvs	3, 0, r7, cr0, cr3, {3}

08014c5d <NetworkParamsConst::NTP_SERVER>:
 8014c5d:	5f70746e 	svcpl	0x0070746e
 8014c61:	76726573 			; <UNDEFINED> instruction: 0x76726573
 8014c65:	 	cdpvs	2, 0, cr7, cr0, cr5, {3}

08014c68 <NetworkParamsConst::NTP_UTC_OFFSET>:
 8014c68:	5f70746e 	svcpl	0x0070746e
 8014c6c:	5f637475 	svcpl	0x00637475
 8014c70:	7366666f 	cmnvc	r6, #116391936	; 0x6f00000
 8014c74:	 	strvs	r7, [r0], #-1125	; 0xfffffb9b

08014c77 <NetworkParamsConst::DEFAULT_GATEWAY>:
 8014c77:	61666564 	cmnvs	r6, r4, ror #10
 8014c7b:	5f746c75 	svcpl	0x00746c75
 8014c7f:	65746167 	ldrbvs	r6, [r4, #-359]!	; 0xfffffe99
 8014c83:	00796177 	rsbseq	r6, r9, r7, ror r1

08014c87 <NetworkParamsConst::DHCP_RETRY_TIME>:
 8014c87:	70636864 	rsbvc	r6, r3, r4, ror #16
 8014c8b:	7465725f 	strbtvc	r7, [r5], #-607	; 0xfffffda1
 8014c8f:	745f7972 	ldrbvc	r7, [pc], #-2418	; 8014c97 <NetworkParamsConst::HOSTNAME>
 8014c93:	00656d69 	rsbeq	r6, r5, r9, ror #26

08014c97 <NetworkParamsConst::HOSTNAME>:
 8014c97:	74736f68 	ldrbtvc	r6, [r3], #-3944	; 0xfffff098
 8014c9b:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

08014ca0 <NetworkParamsConst::NET_MASK>:
 8014ca0:	5f74656e 	svcpl	0x0074656e
 8014ca4:	6b73616d 	blvs	9ced260 <__exidx_end+0x1cd7eec>
	...

08014ca9 <NetworkParamsConst::USE_DHCP>:
 8014ca9:	5f657375 	svcpl	0x00657375
 8014cad:	70636864 	rsbvc	r6, r3, r4, ror #16
	...

08014cb2 <NetworkParamsConst::FILE_NAME>:
 8014cb2:	7774656e 	ldrbvc	r6, [r4, -lr, ror #10]!
 8014cb6:	2e6b726f 	cdpcs	2, 6, cr7, cr11, cr15, {3}
 8014cba:	00747874 	rsbseq	r7, r4, r4, ror r8
 8014cbe:	65687445 	strbvs	r7, [r8, #-1093]!	; 0xfffffbbb
 8014cc2:	74656e72 	strbtvc	r6, [r5], #-3698	; 0xfffff18e
 8014cc6:	61747320 	cmnvs	r4, r0, lsr #6
 8014cca:	25007472 	strcs	r7, [r0, #-1138]	; 0xfffffb8e
 8014cce:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8014cd2:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8014cd6:	252f6425 	strcs	r6, [pc, #-1061]!	; 80148b9 <vtable for DmxSend+0x29>
 8014cda:	63252064 			; <UNDEFINED> instruction: 0x63252064
 8014cde:	203a4e00 	eorscs	r4, sl, r0, lsl #28
 8014ce2:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8014ce6:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8014cea:	0064252e 	rsbeq	r2, r4, lr, lsr #10
 8014cee:	25203a47 	strcs	r3, [r0, #-2631]!	; 0xfffff5b9
 8014cf2:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8014cf6:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8014cfa:	46006425 	strmi	r6, [r0], -r5, lsr #8
 8014cfe:	776d7269 	strbvc	r7, [sp, -r9, ror #4]!
 8014d02:	20657261 	rsbcs	r7, r5, r1, ror #4
 8014d06:	2a2e2556 	bcs	8b9e266 <__exidx_end+0xb88ef2>
 8014d0a:	48440073 	stmdami	r4, {r0, r1, r4, r5, r6}^
 8014d0e:	72205043 	eorvc	r5, r0, #67	; 0x43
 8014d12:	77656e65 	strbvc	r6, [r5, -r5, ror #28]!
 8014d16:	00676e69 	rsbeq	r6, r7, r9, ror #28
 8014d1a:	50434844 	subpl	r4, r3, r4, asr #16
 8014d1e:	74657220 	strbtvc	r7, [r5], #-544	; 0xfffffde0
 8014d22:	6e697972 			; <UNDEFINED> instruction: 0x6e697972
 8014d26:	654e0067 	strbvs	r0, [lr, #-103]	; 0xffffff99
 8014d2a:	726f7774 	rsbvc	r7, pc, #116, 14	; 0x1d00000
 8014d2e:	6873206b 	ldmdavs	r3!, {r0, r1, r3, r5, r6, sp}^
 8014d32:	6f647475 	svcvs	0x00647475
 8014d36:	00006e77 	andeq	r6, r0, r7, ror lr
	...

08014d3c <pArray>:
 8014d3c:	08014dd0 	stmdaeq	r1, {r4, r6, r7, r8, sl, fp, lr}
 8014d40:	08014d8c 	stmdaeq	r1, {r2, r3, r7, r8, sl, fp, lr}
 8014d44:	08014c52 	stmdaeq	r1, {r1, r4, r6, sl, fp, lr}
 8014d48:	08014dd6 	stmdaeq	r1, {r1, r2, r4, r6, r7, r8, sl, fp, lr}
 8014d4c:	08014ee2 	stmdaeq	r1, {r1, r5, r6, r7, r9, sl, fp, lr}
 8014d50:	08014d97 	stmdaeq	r1, {r0, r1, r2, r4, r7, r8, sl, fp, lr}
 8014d54:	08013b97 	stmdaeq	r1, {r0, r1, r2, r4, r7, r8, r9, fp, ip, sp}
 8014d58:	08014c97 	stmdaeq	r1, {r0, r1, r2, r4, r7, sl, fp, lr}
 8014d5c:	08014e48 	stmdaeq	r1, {r3, r6, r9, sl, fp, lr}
 8014d60:	08014e58 	stmdaeq	r1, {r3, r4, r6, r9, sl, fp, lr}
 8014d64:	08014e68 	stmdaeq	r1, {r3, r5, r6, r9, sl, fp, lr}
 8014d68:	08014e78 	stmdaeq	r1, {r3, r4, r5, r6, r9, sl, fp, lr}
 8014d6c:	08014ca0 	stmdaeq	r1, {r5, r7, sl, fp, lr}
 8014d70:	08014ed0 	stmdaeq	r1, {r4, r6, r7, r9, sl, fp, lr}
 8014d74:	08013b97 	stmdaeq	r1, {r0, r1, r2, r4, r7, r8, r9, fp, ip, sp}
 8014d78:	08013b97 	stmdaeq	r1, {r0, r1, r2, r4, r7, r8, r9, fp, ip, sp}
 8014d7c:	08013b97 	stmdaeq	r1, {r0, r1, r2, r4, r7, r8, r9, fp, ip, sp}
 8014d80:	08013b97 	stmdaeq	r1, {r0, r1, r2, r4, r7, r8, r9, fp, ip, sp}
 8014d84:	08014c77 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, sl, fp, lr}
 8014d88:	08014da4 	stmdaeq	r1, {r2, r5, r7, r8, sl, fp, lr}

08014d8c <DisplayUdfParamsConst::BOARD_NAME>:
 8014d8c:	72616f62 	rsbvc	r6, r1, #392	; 0x188
 8014d90:	616e5f64 	cmnvs	lr, r4, ror #30
 8014d94:	 	tstvs	r0, sp, ror #10

08014d97 <DisplayUdfParamsConst::ACTIVE_PORTS>:
 8014d97:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 8014d9b:	705f6576 	subsvc	r6, pc, r6, ror r5	; <UNPREDICTABLE>
 8014d9f:	7374726f 	cmnvc	r4, #-268435450	; 0xf0000006
	...

08014da4 <DisplayUdfParamsConst::DMX_DIRECTION>:
 8014da4:	5f786d64 	svcpl	0x00786d64
 8014da8:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8014dac:	6f697463 	svcvs	0x00697463
 8014db0:	 	ldclvs	0, cr0, [r3], #-440	; 0xfffffe48

08014db2 <DisplayUdfParamsConst::SLEEP_TIMEOUT>:
 8014db2:	65656c73 	strbvs	r6, [r5, #-3187]!	; 0xfffff38d
 8014db6:	69745f70 	ldmdbvs	r4!, {r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 8014dba:	756f656d 	strbvc	r6, [pc, #-1389]!	; 8014855 <E131BridgeConst::VERSION+0x52>
 8014dbe:	 	stclvs	0, cr0, [r6], #-464	; 0xfffffe30

08014dc0 <DisplayUdfParamsConst::FLIP_VERTICALLY>:
 8014dc0:	70696c66 	rsbvc	r6, r9, r6, ror #24
 8014dc4:	7265765f 	rsbvc	r7, r5, #99614720	; 0x5f00000
 8014dc8:	61636974 	smcvs	13972	; 0x3694
 8014dcc:	00796c6c 	rsbseq	r6, r9, ip, ror #24

08014dd0 <DisplayUdfParamsConst::TITLE>:
 8014dd0:	6c746974 			; <UNDEFINED> instruction: 0x6c746974
 8014dd4:	 	ldrbvs	r0, [r6, #-101]!	; 0xffffff9b

08014dd6 <DisplayUdfParamsConst::VERSION>:
 8014dd6:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8014dda:	006e6f69 	rsbeq	r6, lr, r9, ror #30

08014dde <DisplayUdfParamsConst::FILE_NAME>:
 8014dde:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8014de2:	2e79616c 	rpwcsez	f6, f1, #4.0
 8014de6:	00747874 	rsbseq	r7, r4, r4, ror r8

08014dea <DisplayUdfParamsConst::INTENSITY>:
 8014dea:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
 8014dee:	7469736e 	strbtvc	r7, [r9], #-878	; 0xfffffc92
 8014df2:	50410079 	subpl	r0, r1, r9, ror r0
 8014df6:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8014dfa:	726f5000 	rsbvc	r5, pc, #0
 8014dfe:	63252074 			; <UNDEFINED> instruction: 0x63252074
 8014e02:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8014e06:	00732520 	rsbseq	r2, r3, r0, lsr #10
 8014e0a:	44206f4e 	strtmi	r6, [r0], #-3918	; 0xfffff0b2
 8014e0e:	4400584d 	strmi	r5, [r0], #-2125	; 0xfffff7b3
 8014e12:	2520584d 	strcs	r5, [r0, #-2125]!	; 0xfffff7b3
 8014e16:	64252073 	strtvs	r2, [r5], #-115	; 0xffffff8d
 8014e1a:	73252200 			; <UNDEFINED> instruction: 0x73252200
 8014e1e:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8014e22:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8014e26:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8014e2a:	2c226425 	cfstrscs	mvf6, [r2], #-148	; 0xffffff6c
 8014e2e:	73252300 			; <UNDEFINED> instruction: 0x73252300
 8014e32:	2e64253d 	mcrcs	5, 3, r2, cr4, cr13, {1}
 8014e36:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8014e3a:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8014e3e:	2023000a 	eorcs	r0, r3, sl
 8014e42:	23207325 			; <UNDEFINED> instruction: 0x23207325
 8014e46:	 	cdpvs	0, 7, cr0, cr5, cr10, {0}

08014e48 <LightSetParamsConst::UNIVERSE_PORT>:
 8014e48:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 8014e4c:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8014e50:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8014e54:	00615f74 	rsbeq	r5, r1, r4, ror pc
 8014e58:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 8014e5c:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8014e60:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8014e64:	00625f74 	rsbeq	r5, r2, r4, ror pc
 8014e68:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 8014e6c:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8014e70:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8014e74:	00635f74 	rsbeq	r5, r3, r4, ror pc
 8014e78:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 8014e7c:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8014e80:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8014e84:	00645f74 	rsbeq	r5, r4, r4, ror pc

08014e88 <LightSetParamsConst::MERGE_MODE_PORT>:
 8014e88:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 8014e8c:	6f6d5f65 	svcvs	0x006d5f65
 8014e90:	705f6564 	subsvc	r6, pc, r4, ror #10
 8014e94:	5f74726f 	svcpl	0x0074726f
 8014e98:	656d0061 	strbvs	r0, [sp, #-97]!	; 0xffffff9f
 8014e9c:	5f656772 	svcpl	0x00656772
 8014ea0:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
 8014ea4:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8014ea8:	00625f74 	rsbeq	r5, r2, r4, ror pc
 8014eac:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 8014eb0:	6f6d5f65 	svcvs	0x006d5f65
 8014eb4:	705f6564 	subsvc	r6, pc, r4, ror #10
 8014eb8:	5f74726f 	svcpl	0x0074726f
 8014ebc:	656d0063 	strbvs	r0, [sp, #-99]!	; 0xffffff9d
 8014ec0:	5f656772 	svcpl	0x00656772
 8014ec4:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
 8014ec8:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8014ecc:	00645f74 	rsbeq	r5, r4, r4, ror pc

08014ed0 <LightSetParamsConst::DMX_START_ADDRESS>:
 8014ed0:	5f786d64 	svcpl	0x00786d64
 8014ed4:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8014ed8:	64615f74 	strbtvs	r5, [r1], #-3956	; 0xfffff08c
 8014edc:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
 8014ee0:	 	mrcvs	0, 3, r0, cr5, cr3, {3}

08014ee2 <LightSetParamsConst::UNIVERSE>:
 8014ee2:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 8014ee6:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
	...

08014eeb <LightSetParamsConst::DIRECTION>:
 8014eeb:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8014eef:	6f697463 	svcvs	0x00697463
 8014ef3:	6f705f6e 	svcvs	0x00705f6e
 8014ef7:	615f7472 	cmpvs	pc, r2, ror r4	; <UNPREDICTABLE>
 8014efb:	69640000 	stmdbvs	r4!, {}^	; <UNPREDICTABLE>
 8014eff:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 8014f03:	5f6e6f69 	svcpl	0x006e6f69
 8014f07:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8014f0b:	0000625f 	andeq	r6, r0, pc, asr r2
 8014f0f:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8014f13:	6f697463 	svcvs	0x00697463
 8014f17:	6f705f6e 	svcvs	0x00705f6e
 8014f1b:	635f7472 	cmpvs	pc, #1912602624	; 0x72000000
 8014f1f:	69640000 	stmdbvs	r4!, {}^	; <UNPREDICTABLE>
 8014f23:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 8014f27:	5f6e6f69 	svcpl	0x006e6f69
 8014f2b:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8014f2f:	0000645f 	andeq	r6, r0, pc, asr r4
 8014f33:	64206f4e 	strtvs	r6, [r0], #-3918	; 0xfffff0b2
 8014f37:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
 8014f3b:	66207961 	strtvs	r7, [r0], -r1, ror #18
 8014f3f:	646e756f 	strbtvs	r7, [lr], #-1391	; 0xfffffa91
 8014f43:	31485300 	mrscc	r5, (UNDEF: 120)
 8014f47:	00363031 	eorseq	r3, r6, r1, lsr r0
 8014f4b:	31445353 	cmpcc	r4, r3, asr r3
 8014f4f:	00363033 	eorseq	r3, r6, r3, lsr r0
 8014f53:	28207325 	stmdacs	r0!, {r0, r2, r5, r8, r9, ip, sp, lr}
 8014f57:	252c6425 	strcs	r6, [ip, #-1061]!	; 0xfffffbdb
 8014f5b:	000a2964 	andeq	r2, sl, r4, ror #18
 8014f5f:	aaeeaa40 	bge	7bbf867 <__stack_size+0x7bbd867>
 8014f63:	000000ee 	andeq	r0, r0, lr, ror #1
	...

08014f68 <_OledFont8x6>:
 8014f68:	00000040 	andeq	r0, r0, r0, asr #32
 8014f6c:	40000000 	andmi	r0, r0, r0
 8014f70:	005f0000 	subseq	r0, pc, r0
 8014f74:	00400000 	subeq	r0, r0, r0
 8014f78:	00070007 	andeq	r0, r7, r7
 8014f7c:	7f144000 	svcvc	0x00144000
 8014f80:	00147f14 	andseq	r7, r4, r4, lsl pc
 8014f84:	7f2a2440 	svcvc	0x002a2440
 8014f88:	4000122a 	andmi	r1, r0, sl, lsr #4
 8014f8c:	64081323 	strvs	r1, [r8], #-803	; 0xfffffcdd
 8014f90:	36400062 	strbcc	r0, [r0], -r2, rrx
 8014f94:	50205649 	eorpl	r5, r0, r9, asr #12
 8014f98:	08004000 	stmdaeq	r0, {lr}
 8014f9c:	00000307 	andeq	r0, r0, r7, lsl #6
 8014fa0:	221c0040 	andscs	r0, ip, #64	; 0x40
 8014fa4:	40000041 	andmi	r0, r0, r1, asr #32
 8014fa8:	1c224100 	stfnes	f4, [r2], #-0
 8014fac:	2a400000 	bcs	9014fb4 <__exidx_end+0xfffc40>
 8014fb0:	2a1c7f1c 	bcs	8734c28 <__exidx_end+0x71f8b4>
 8014fb4:	08084000 	stmdaeq	r8, {lr}
 8014fb8:	0008083e 	andeq	r0, r8, lr, lsr r8
 8014fbc:	70800040 	addvc	r0, r0, r0, asr #32
 8014fc0:	40000030 	andmi	r0, r0, r0, lsr r0
 8014fc4:	08080808 	stmdaeq	r8, {r3, fp}
 8014fc8:	00400008 	subeq	r0, r0, r8
 8014fcc:	00606000 	rsbeq	r6, r0, r0
 8014fd0:	10204000 	eorne	r4, r0, r0
 8014fd4:	00020408 	andeq	r0, r2, r8, lsl #8
 8014fd8:	49513e40 	ldmdbmi	r1, {r6, r9, sl, fp, ip, sp}^
 8014fdc:	40003e45 	andmi	r3, r0, r5, asr #28
 8014fe0:	407f4200 	rsbsmi	r4, pc, r0, lsl #4
 8014fe4:	72400000 	subvc	r0, r0, #0
 8014fe8:	46494949 	strbmi	r4, [r9], -r9, asr #18
 8014fec:	41214000 			; <UNDEFINED> instruction: 0x41214000
 8014ff0:	00334d49 	eorseq	r4, r3, r9, asr #26
 8014ff4:	12141840 	andsne	r1, r4, #64, 16	; 0x400000
 8014ff8:	4000107f 	andmi	r1, r0, pc, ror r0
 8014ffc:	45454527 	strbmi	r4, [r5, #-1319]	; 0xfffffad9
 8015000:	3c400039 	mcrrcc	0, 3, r0, r0, cr9
 8015004:	3149494a 	cmpcc	r9, sl, asr #18
 8015008:	21414000 	mrscs	r4, (UNDEF: 65)
 801500c:	00070911 	andeq	r0, r7, r1, lsl r9
 8015010:	49493640 	stmdbmi	r9, {r6, r9, sl, ip, sp}^
 8015014:	40003649 	andmi	r3, r0, r9, asr #12
 8015018:	29494946 	stmdbcs	r9, {r1, r2, r6, r8, fp, lr}^
 801501c:	0040001e 	subeq	r0, r0, lr, lsl r0
 8015020:	00001400 	andeq	r1, r0, r0, lsl #8
 8015024:	40004000 	andmi	r4, r0, r0
 8015028:	00000034 	andeq	r0, r0, r4, lsr r0
 801502c:	14080040 	strne	r0, [r8], #-64	; 0xffffffc0
 8015030:	40004122 	andmi	r4, r0, r2, lsr #2
 8015034:	14141414 	ldrne	r1, [r4], #-1044	; 0xfffffbec
 8015038:	00400014 	subeq	r0, r0, r4, lsl r0
 801503c:	08142241 	ldmdaeq	r4, {r0, r6, r9, sp}
 8015040:	01024000 	mrseq	r4, (UNDEF: 2)
 8015044:	00060959 	andeq	r0, r6, r9, asr r9
 8015048:	5d413e40 	stclpl	14, cr3, [r1, #-256]	; 0xffffff00
 801504c:	40004e59 	andmi	r4, r0, r9, asr lr
 8015050:	1211127c 	andsne	r1, r1, #124, 4	; 0xc0000007
 8015054:	7f40007c 	svcvc	0x0040007c
 8015058:	36494949 	strbcc	r4, [r9], -r9, asr #18
 801505c:	413e4000 	teqmi	lr, r0
 8015060:	00224141 	eoreq	r4, r2, r1, asr #2
 8015064:	41417f40 	cmpmi	r1, r0, asr #30
 8015068:	40003e41 	andmi	r3, r0, r1, asr #28
 801506c:	4949497f 	stmdbmi	r9, {r0, r1, r2, r3, r4, r5, r6, r8, fp, lr}^
 8015070:	7f400041 	svcvc	0x00400041
 8015074:	01090909 	tsteq	r9, r9, lsl #18
 8015078:	413e4000 	teqmi	lr, r0
 801507c:	00735141 	rsbseq	r5, r3, r1, asr #2
 8015080:	08087f40 	stmdaeq	r8, {r6, r8, r9, sl, fp, ip, sp, lr}
 8015084:	40007f08 	andmi	r7, r0, r8, lsl #30
 8015088:	417f4100 	cmnmi	pc, r0, lsl #2
 801508c:	20400000 	subcs	r0, r0, r0
 8015090:	013f4140 	teqeq	pc, r0, asr #2
 8015094:	087f4000 	ldmdaeq	pc!, {lr}^	; <UNPREDICTABLE>
 8015098:	00412214 	subeq	r2, r1, r4, lsl r2
 801509c:	40407f40 	submi	r7, r0, r0, asr #30
 80150a0:	40004040 	andmi	r4, r0, r0, asr #32
 80150a4:	021c027f 	andseq	r0, ip, #-268435449	; 0xf0000007
 80150a8:	7f40007f 	svcvc	0x0040007f
 80150ac:	7f100804 	svcvc	0x00100804
 80150b0:	413e4000 	teqmi	lr, r0
 80150b4:	003e4141 	eorseq	r4, lr, r1, asr #2
 80150b8:	09097f40 	stmdbeq	r9, {r6, r8, r9, sl, fp, ip, sp, lr}
 80150bc:	40000609 	andmi	r0, r0, r9, lsl #12
 80150c0:	2151413e 	cmpcs	r1, lr, lsr r1
 80150c4:	7f40005e 	svcvc	0x0040005e
 80150c8:	46291909 	strtmi	r1, [r9], -r9, lsl #18
 80150cc:	49264000 	stmdbmi	r6!, {lr}
 80150d0:	00324949 	eorseq	r4, r2, r9, asr #18
 80150d4:	7f010340 	svcvc	0x00010340
 80150d8:	40000301 	andmi	r0, r0, r1, lsl #6
 80150dc:	4040403f 	submi	r4, r0, pc, lsr r0
 80150e0:	1f40003f 	svcne	0x0040003f
 80150e4:	1f204020 	svcne	0x00204020
 80150e8:	403f4000 	eorsmi	r4, pc, r0
 80150ec:	003f4038 	eorseq	r4, pc, r8, lsr r0	; <UNPREDICTABLE>
 80150f0:	08146340 	ldmdaeq	r4, {r6, r8, r9, sp, lr}
 80150f4:	40006314 	andmi	r6, r0, r4, lsl r3
 80150f8:	04780403 	ldrbteq	r0, [r8], #-1027	; 0xfffffbfd
 80150fc:	61400003 	cmpvs	r0, r3
 8015100:	434d4959 	movtmi	r4, #55641	; 0xd959
 8015104:	7f004000 	svcvc	0x00004000
 8015108:	00414141 	subeq	r4, r1, r1, asr #2
 801510c:	08040240 	stmdaeq	r4, {r6, r9}
 8015110:	40002010 	andmi	r2, r0, r0, lsl r0
 8015114:	41414100 	mrsmi	r4, (UNDEF: 81)
 8015118:	0440007f 	strbeq	r0, [r0], #-127	; 0xffffff81
 801511c:	04020102 	streq	r0, [r2], #-258	; 0xfffffefe
 8015120:	40404000 	submi	r4, r0, r0
 8015124:	00404040 	subeq	r4, r0, r0, asr #32
 8015128:	07030040 	streq	r0, [r3, -r0, asr #32]
 801512c:	40000008 	andmi	r0, r0, r8
 8015130:	78545420 	ldmdavc	r4, {r5, sl, ip, lr}^
 8015134:	7f400040 	svcvc	0x00400040
 8015138:	38444428 	stmdacc	r4, {r3, r5, sl, lr}^
 801513c:	44384000 	ldrtmi	r4, [r8], #-0
 8015140:	00284444 	eoreq	r4, r8, r4, asr #8
 8015144:	44443840 	strbmi	r3, [r4], #-2112	; 0xfffff7c0
 8015148:	40007f28 	andmi	r7, r0, r8, lsr #30
 801514c:	54545438 	ldrbpl	r5, [r4], #-1080	; 0xfffffbc8
 8015150:	00400018 	subeq	r0, r0, r8, lsl r0
 8015154:	02097e08 	andeq	r7, r9, #8, 28	; 0x80
 8015158:	a4184000 	ldrge	r4, [r8], #-0
 801515c:	00789ca4 	rsbseq	r9, r8, r4, lsr #25
 8015160:	04087f40 	streq	r7, [r8], #-3904	; 0xfffff0c0
 8015164:	40007804 	andmi	r7, r0, r4, lsl #16
 8015168:	407d4400 	rsbsmi	r4, sp, r0, lsl #8
 801516c:	20400000 	subcs	r0, r0, r0
 8015170:	003d4040 	eorseq	r4, sp, r0, asr #32
 8015174:	107f4000 	rsbsne	r4, pc, r0
 8015178:	00004428 	andeq	r4, r0, r8, lsr #8
 801517c:	7f410040 	svcvc	0x00410040
 8015180:	40000040 	andmi	r0, r0, r0, asr #32
 8015184:	0478047c 	ldrbteq	r0, [r8], #-1148	; 0xfffffb84
 8015188:	7c400078 	mcrrvc	0, 7, r0, r0, cr8
 801518c:	78040408 	stmdavc	r4, {r3, sl}
 8015190:	44384000 	ldrtmi	r4, [r8], #-0
 8015194:	00384444 	eorseq	r4, r8, r4, asr #8
 8015198:	2418fc40 	ldrcs	pc, [r8], #-3136	; 0xfffff3c0
 801519c:	40001824 	andmi	r1, r0, r4, lsr #16
 80151a0:	18242418 	stmdane	r4!, {r3, r4, sl, sp}
 80151a4:	7c4000fc 	mcrrvc	0, 15, r0, r0, cr12
 80151a8:	08040408 	stmdaeq	r4, {r3, sl}
 80151ac:	54484000 	strbpl	r4, [r8], #-0
 80151b0:	00245454 	eoreq	r5, r4, r4, asr r4
 80151b4:	3f040440 	svccc	0x00040440
 80151b8:	40002444 	andmi	r2, r0, r4, asr #8
 80151bc:	2040403c 	subcs	r4, r0, ip, lsr r0
 80151c0:	1c40007c 	mcrrne	0, 7, r0, r0, cr12
 80151c4:	1c204020 	stcne	0, cr4, [r0], #-128	; 0xffffff80
 80151c8:	403c4000 	eorsmi	r4, ip, r0
 80151cc:	003c4030 	eorseq	r4, ip, r0, lsr r0
 80151d0:	10284440 	eorne	r4, r8, r0, asr #8
 80151d4:	40004428 	andmi	r4, r0, r8, lsr #8
 80151d8:	9090904c 	addsls	r9, r0, ip, asr #32
 80151dc:	4440007c 	strbmi	r0, [r0], #-124	; 0xffffff84
 80151e0:	444c5464 	strbmi	r5, [ip], #-1124	; 0xfffffb9c
 80151e4:	08004000 	stmdaeq	r0, {lr}
 80151e8:	00004136 	andeq	r4, r0, r6, lsr r1
 80151ec:	77000040 	strvc	r0, [r0, -r0, asr #32]
 80151f0:	40000000 	andmi	r0, r0, r0
 80151f4:	08364100 	ldmdaeq	r6!, {r8, lr}
 80151f8:	02400000 	subeq	r0, r0, #0
 80151fc:	02040201 	andeq	r0, r4, #268435456	; 0x10000000
 8015200:	263c4000 	ldrtcs	r4, [ip], -r0
 8015204:	003c2623 	eorseq	r2, ip, r3, lsr #12

08015208 <oled_128x32_init>:
 8015208:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 801520c:	4000d31f 	andmi	sp, r0, pc, lsl r3
 8015210:	0020148d 	eoreq	r1, r0, sp, lsl #9
 8015214:	02dac8a1 	sbcseq	ip, sl, #10551296	; 0xa10000
 8015218:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 801521c:	a6a440db 	ssatge	r4, #5, fp, asr #1

08015220 <oled_128x64_init>:
 8015220:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 8015224:	4000d33f 	andmi	sp, r0, pc, lsr r3
 8015228:	0020148d 	eoreq	r1, r0, sp, lsl #9
 801522c:	12dac8a1 	sbcsne	ip, sl, #10551296	; 0xa10000
 8015230:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 8015234:	a6a440db 	ssatge	r4, #5, fp, asr #1

08015238 <vtable for Ssd1306>:
	...
 8015240:	0801030f 	stmdaeq	r1, {r0, r1, r2, r3, r8, r9}
 8015244:	0801033d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r8, r9}
 8015248:	08010655 	stmdaeq	r1, {r0, r2, r4, r6, r9, sl}
 801524c:	080105d9 	stmdaeq	r1, {r0, r3, r4, r6, r7, r8, sl}
 8015250:	080104a5 	stmdaeq	r1, {r0, r2, r5, r7, sl}
 8015254:	0801035d 	stmdaeq	r1, {r0, r2, r3, r4, r6, r8, r9}
 8015258:	08010385 	stmdaeq	r1, {r0, r2, r7, r8, r9}
 801525c:	0801047b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, sl}
 8015260:	08010435 	stmdaeq	r1, {r0, r2, r4, r5, sl}
 8015264:	08010311 	stmdaeq	r1, {r0, r4, r8, r9}
 8015268:	080104e1 	stmdaeq	r1, {r0, r5, r6, r7, sl}
 801526c:	080104ed 	stmdaeq	r1, {r0, r2, r3, r5, r6, r7, sl}
 8015270:	08010507 	stmdaeq	r1, {r0, r1, r2, r8, sl}
 8015274:	08010315 	stmdaeq	r1, {r0, r2, r4, r8, r9}
 8015278:	30345b1b 	eorscc	r5, r4, fp, lsl fp
 801527c:	5b1b006d 	blpl	86d5438 <__exidx_end+0x6c00c4>
 8015280:	006d3033 	rsbeq	r3, sp, r3, lsr r0
 8015284:	31335b1b 	teqcc	r3, fp, lsl fp
 8015288:	5b1b006d 	blpl	86d5444 <__exidx_end+0x6c00d0>
 801528c:	006d3233 	rsbeq	r3, sp, r3, lsr r2
 8015290:	33335b1b 	teqcc	r3, #27648	; 0x6c00
 8015294:	5b1b006d 	blpl	86d5450 <__exidx_end+0x6c00dc>
 8015298:	006d3933 	rsbeq	r3, sp, r3, lsr r9
 801529c:	2e25565b 	mcrcs	6, 1, r5, cr5, cr11, {2}
 80152a0:	205d732a 	subscs	r7, sp, sl, lsr #6
 80152a4:	43207325 			; <UNDEFINED> instruction: 0x43207325
 80152a8:	69706d6f 	ldmdbvs	r0!, {r0, r1, r2, r3, r5, r6, r8, sl, fp, sp, lr}^
 80152ac:	2064656c 	rsbcs	r6, r4, ip, ror #10
 80152b0:	25206e6f 	strcs	r6, [r0, #-3695]!	; 0xfffff191
 80152b4:	20732a2e 	rsbscs	r2, r3, lr, lsr #20
 80152b8:	25207461 	strcs	r7, [r0, #-1121]!	; 0xfffffb9f
 80152bc:	00732a2e 	rsbseq	r2, r3, lr, lsr #20
 80152c0:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 80152c4:	203a636f 	eorscs	r6, sl, pc, ror #6
 80152c8:	000a7525 	andeq	r7, sl, r5, lsr #10
 80152cc:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 80152d0:	203a636f 	eorscs	r6, sl, pc, ror #6
 80152d4:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
 80152d8:	62203e20 	eorvs	r3, r0, #32, 28	; 0x200
 80152dc:	6b636f6c 	blvs	98f1094 <__exidx_end+0x18dbd20>
 80152e0:	6d696c5f 	stclvs	12, cr6, [r9, #-380]!	; 0xfffffe84
 80152e4:	000a7469 	andeq	r7, sl, r9, ror #8
 80152e8:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 80152ec:	203a636f 	eorscs	r6, sl, pc, ror #6
 80152f0:	6f6c4270 	svcvs	0x006c4270
 80152f4:	65486b63 	strbvs	r6, [r8, #-2915]	; 0xfffff49d
 80152f8:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 80152fc:	2c70253d 	cfldr64cs	mvdx2, [r0], #-244	; 0xffffff0c
 8015300:	7a697320 	bvc	9a71f88 <__exidx_end+0x1a5cc14>
 8015304:	64253d65 	strtvs	r3, [r5], #-3429	; 0xfffff29b
 8015308:	6164202c 	cmnvs	r4, ip, lsr #32
 801530c:	253d6174 	ldrcs	r6, [sp, #-372]!	; 0xfffffe8c
 8015310:	66000a70 			; <UNDEFINED> instruction: 0x66000a70
 8015314:	3a656572 	bcc	996e8e4 <__exidx_end+0x1959570>
 8015318:	6c427020 	mcrrvs	0, 2, r7, r2, cr0
 801531c:	486b636f 	stmdami	fp!, {r0, r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8015320:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 8015324:	203d2072 	eorscs	r2, sp, r2, ror r0
 8015328:	202c7025 	eorcs	r7, ip, r5, lsr #32
 801532c:	6f6c4270 	svcvs	0x006c4270
 8015330:	3d206b63 	fstmdbxcc	r0!, {d6-d54}	;@ Deprecated
 8015334:	0a702520 	beq	9c1e7bc <__exidx_end+0x1c09448>
 8015338:	00000000 	andeq	r0, r0, r0

0801533c <days_of_month>:
 801533c:	0000001f 	andeq	r0, r0, pc, lsl r0
 8015340:	0000001c 	andeq	r0, r0, ip, lsl r0
 8015344:	0000001f 	andeq	r0, r0, pc, lsl r0
 8015348:	0000001e 	andeq	r0, r0, lr, lsl r0
 801534c:	0000001f 	andeq	r0, r0, pc, lsl r0
 8015350:	0000001e 	andeq	r0, r0, lr, lsl r0
 8015354:	0000001f 	andeq	r0, r0, pc, lsl r0
 8015358:	0000001f 	andeq	r0, r0, pc, lsl r0
 801535c:	0000001e 	andeq	r0, r0, lr, lsl r0
 8015360:	0000001f 	andeq	r0, r0, pc, lsl r0
 8015364:	0000001e 	andeq	r0, r0, lr, lsl r0
 8015368:	0000001f 	andeq	r0, r0, pc, lsl r0

Disassembly of section .ARM:

0801536c <__exidx_start>:
 801536c:	7fff3240 	svcvc	0x00ff3240
 8015370:	00000001 	andeq	r0, r0, r1

Disassembly of section .ARM.attributes:

08015374 <.ARM.attributes>:
 8015374:	00002e41 	andeq	r2, r0, r1, asr #28
 8015378:	61656100 	cmnvs	r5, r0, lsl #2
 801537c:	01006962 	tsteq	r0, r2, ror #18
 8015380:	00000024 	andeq	r0, r0, r4, lsr #32
 8015384:	726f4305 	rsbvc	r4, pc, #335544320	; 0x14000000
 8015388:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
 801538c:	0600334d 	streq	r3, [r0], -sp, asr #6
 8015390:	094d070a 	stmdbeq	sp, {r1, r3, r8, r9, sl}^
 8015394:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
 8015398:	17011501 	strne	r1, [r1, -r1, lsl #10]
 801539c:	1a011803 	bne	805b3b0 <__exidx_end+0x4603c>
 80153a0:	Address 0x00000000080153a0 is out of bounds.


Disassembly of section .data:

20000000 <DmxConfigUdp::Run()::pCmd>:
20000000:	20003159 	andcs	r3, r0, r9, asr r1

20000004 <DmxConfigUdp::s_nHandle>:
20000004:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

20000008 <s_nDmxTransmitPeriod>:
20000008:	000061a8 	andeq	r6, r0, r8, lsr #3

2000000c <s_nDmxTransmitMabTime>:
2000000c:	0000000c 	andeq	r0, r0, ip

20000010 <s_nDmxTransmitBreakTime>:
20000010:	0000005c 	andeq	r0, r0, ip, asr r0

20000014 <s_multicast_mac>:
20000014:	005e0001 	subseq	r0, lr, r1
20000018:	00000000 	andeq	r0, r0, r0

2000001c <MDNS::s_nHandle>:
2000001c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

20000020 <next_block>:
20000020:	2001d000 	andcs	sp, r1, r0

20000024 <s_block_bucket>:
20000024:	00000010 	andeq	r0, r0, r0, lsl r0
	...
20000034:	00000020 	andeq	r0, r0, r0, lsr #32
	...
20000044:	00000040 	andeq	r0, r0, r0, asr #32
	...
20000054:	00000060 	andeq	r0, r0, r0, rrx
	...
20000064:	00000080 	andeq	r0, r0, r0, lsl #1
	...
20000074:	00000100 	andeq	r0, r0, r0, lsl #2
	...
20000084:	00000140 	andeq	r0, r0, r0, asr #2
	...
20000094:	00000180 	andeq	r0, r0, r0, lsl #3
	...
200000a4:	00000200 	andeq	r0, r0, r0, lsl #4
	...
200000b4:	00000300 	andeq	r0, r0, r0, lsl #6
	...
200000c4:	00000400 	andeq	r0, r0, r0, lsl #8
	...
200000d4:	00000500 	andeq	r0, r0, r0, lsl #10
	...

200000f4 <SystemCoreClock>:
200000f4:	07270e00 	streq	r0, [r7, -r0, lsl #28]!

Disassembly of section .bss:

200000f8 <DmxInput::s_nStarted>:
200000f8:	00000000 	andeq	r0, r0, r0

200000fc <RemoteConfig::s_pUdpBuffer>:
200000fc:	00000000 	andeq	r0, r0, r0

20000100 <RemoteConfig::s_RemoteConfigListBin>:
	...

20000124 <RemoteConfig::s_pThis>:
20000124:	00000000 	andeq	r0, r0, r0

20000128 <guard variable for lightset::Data::Get()::instance>:
20000128:	00000000 	andeq	r0, r0, r0

2000012c <lightset::Data::Get()::instance>:
	...

2000314c <E131Bridge::s_pThis>:
2000314c:	00000000 	andeq	r0, r0, r0

20003150 <s_ReceivingMask>:
20003150:	00000000 	andeq	r0, r0, r0

20003154 <DmxSend::s_nStarted>:
	...

20003155 <DmxConfigUdp::s_Buffer>:
	...

20003168 <s_RxBuffer>:
	...

200039a8 <s_TxBuffer>:
	...

200041b8 <sv_PortState>:
	...

200041c8 <s_nUartsSending>:
200041c8:	00000000 	andeq	r0, r0, r0

200041cc <sv_nRxDmxPackets>:
	...

2000420c <Dmx::s_pThis>:
2000420c:	00000000 	andeq	r0, r0, r0

20004210 <gv_RdmDataReceiveEnd>:
20004210:	00000000 	andeq	r0, r0, r0

20004214 <SpiFlashStore::s_nWaitMillis>:
20004214:	00000000 	andeq	r0, r0, r0

20004218 <SpiFlashStore::s_SpiFlashData>:
	...

20005218 <SpiFlashStore::s_nStartAddress>:
20005218:	00000000 	andeq	r0, r0, r0

2000521c <SpiFlashStore::s_bHaveFlashChip>:
2000521c:	00000000 	andeq	r0, r0, r0

20005220 <SpiFlashStore::s_nSpiFlashStoreSize>:
20005220:	00000000 	andeq	r0, r0, r0

20005224 <SpiFlashStore::s_State>:
20005224:	00000000 	andeq	r0, r0, r0

20005228 <SpiFlashStore::s_pThis>:
20005228:	00000000 	andeq	r0, r0, r0

2000522c <SpiFlashStore::s_bIsNew>:
2000522c:	00000000 	andeq	r0, r0, r0

20005230 <StoreDisplayUdf::s_pThis>:
20005230:	00000000 	andeq	r0, r0, r0

20005234 <StoreDmxSend::s_pThis>:
20005234:	00000000 	andeq	r0, r0, r0

20005238 <StoreE131::s_pThis>:
20005238:	00000000 	andeq	r0, r0, r0

2000523c <StoreNetwork::s_pThis>:
2000523c:	00000000 	andeq	r0, r0, r0

20005240 <StoreRemoteConfig::s_pThis>:
20005240:	00000000 	andeq	r0, r0, r0

20005244 <FlashRom::s_pThis>:
20005244:	00000000 	andeq	r0, r0, r0

20005248 <flashrom::s_nAddress>:
20005248:	00000000 	andeq	r0, r0, r0

2000524c <flashrom::s_State>:
2000524c:	00000000 	andeq	r0, r0, r0

20005250 <flashrom::s_nPage>:
20005250:	00000000 	andeq	r0, r0, r0

20005254 <flashrom::s_pData>:
20005254:	00000000 	andeq	r0, r0, r0

20005258 <flashrom::s_isBank0>:
20005258:	00000000 	andeq	r0, r0, r0

2000525c <flashrom::s_nLength>:
2000525c:	00000000 	andeq	r0, r0, r0

20005260 <g_ip_info>:
	...

2000526c <g_mac_address>:
2000526c:	00000000 	andeq	r0, r0, r0
	...

20005272 <s_is_dhcp>:
	...

20005274 <s_p>:
20005274:	00000000 	andeq	r0, r0, r0

20005278 <s_ticker>:
20005278:	00000000 	andeq	r0, r0, r0

2000527c <s_mac_address>:
	...

20005284 <s_mac_address_arp_reply>:
20005284:	00000000 	andeq	r0, r0, r0
	...

2000528a <s_id>:
	...

2000528c <s_recv_queue>:
	...

20005dfc <s_tcb>:
	...

20005e40 <s_tcp>:
	...

2000642c <broadcast_mask>:
2000642c:	00000000 	andeq	r0, r0, r0

20006430 <gw_ip>:
20006430:	00000000 	andeq	r0, r0, r0

20006434 <on_network_mask>:
20006434:	00000000 	andeq	r0, r0, r0

20006438 <s_id>:
20006438:	00000000 	andeq	r0, r0, r0

2000643c <s_ports_allowed>:
	...

2000645c <s_recv_queue>:
	...

2000c0fc <s_send_packet>:
	...

2000c6e8 <MDNS::s_nRemoteIp>:
2000c6e8:	00000000 	andeq	r0, r0, r0

2000c6ec <MDNS::s_nRemotePort>:
2000c6ec:	00000000 	andeq	r0, r0, r0

2000c6f0 <MDNS::s_nMulticastIp>:
2000c6f0:	00000000 	andeq	r0, r0, r0

2000c6f4 <MDNS::s_AnswerLocalIp>:
	...

2000c8f8 <MDNS::s_ServiceRecords>:
	...

2000c918 <MDNS::s_nBytesReceived>:
2000c918:	00000000 	andeq	r0, r0, r0

2000c91c <MDNS::s_ServiceRecordsData>:
	...

2000cb20 <MDNS::s_pName>:
2000cb20:	00000000 	andeq	r0, r0, r0

2000cb24 <MDNS::s_pBuffer>:
2000cb24:	00000000 	andeq	r0, r0, r0

2000cb28 <Network::s_pThis>:
2000cb28:	00000000 	andeq	r0, r0, r0

2000cb2c <NetworkParams::m_tNetworkParams>:
	...

2000cb8c <s_arp_announce>:
	...

2000cbb8 <s_arp_reply>:
	...

2000cbe4 <s_arp_request>:
	...

2000cc10 <s_arp_records>:
	...

2000cd90 <s_entry_current>:
2000cd90:	00000000 	andeq	r0, r0, r0

2000cd94 <s_dhcp_allocated_gw>:
2000cd94:	00000000 	andeq	r0, r0, r0

2000cd98 <s_dhcp_allocated_ip>:
2000cd98:	00000000 	andeq	r0, r0, r0

2000cd9c <s_dhcp_allocated_netmask>:
2000cd9c:	00000000 	andeq	r0, r0, r0

2000cda0 <s_dhcp_message>:
	...

2000cfc4 <s_dhcp_server_ip>:
2000cfc4:	00000000 	andeq	r0, r0, r0

2000cfc8 <s_groups>:
	...

2000d0e8 <s_id>:
2000d0e8:	00000000 	andeq	r0, r0, r0

2000d0ec <s_joins_allowed_index>:
2000d0ec:	00000000 	andeq	r0, r0, r0

2000d0f0 <s_leave>:
	...

2000d120 <s_multicast_mac>:
	...

2000d128 <s_report>:
	...

2000d158 <DisplayUdf::s_pThis>:
2000d158:	00000000 	andeq	r0, r0, r0

2000d15c <PropertiesConfig::s_Config>:
2000d15c:	00000000 	andeq	r0, r0, r0

2000d160 <Display::s_pThis>:
2000d160:	00000000 	andeq	r0, r0, r0

2000d164 <_ClearBuffer>:
	...

2000d1ec <Ssd1306::s_pThis>:
2000d1ec:	00000000 	andeq	r0, r0, r0

2000d1f0 <FirmwareVersion::s_FirmwareVersion>:
	...

2000d206 <FirmwareVersion::s_Print>:
	...

2000d248 <FirmwareVersion::s_pThis>:
2000d248:	00000000 	andeq	r0, r0, r0

2000d24c <LedBlink::s_pThis>:
2000d24c:	00000000 	andeq	r0, r0, r0

2000d250 <Hardware::s_pThis>:
2000d250:	00000000 	andeq	r0, r0, r0

2000d254 <outptr>:
2000d254:	00000000 	andeq	r0, r0, r0

2000d258 <last.0>:
	...

2000d260 <s_micros>:
	...

2000d268 <set_timer>:
2000d268:	00000000 	andeq	r0, r0, r0

2000d26c <s_nSysTickMillis>:
2000d26c:	00000000 	andeq	r0, r0, r0

2000d270 <enet_init_status>:
2000d270:	00000000 	andeq	r0, r0, r0

2000d274 <s_nAddress>:
2000d274:	00000000 	andeq	r0, r0, r0

2000d278 <dma_current_ptp_rxdesc>:
2000d278:	00000000 	andeq	r0, r0, r0

2000d27c <dma_current_ptp_txdesc>:
2000d27c:	00000000 	andeq	r0, r0, r0

2000d280 <dma_current_rxdesc>:
2000d280:	00000000 	andeq	r0, r0, r0

2000d284 <dma_current_txdesc>:
2000d284:	00000000 	andeq	r0, r0, r0

2000d288 <enet_initpara>:
	...

2000d2c4 <rx_buff>:
	...

20010e4c <rxdesc_tab>:
	...

20010eec <tx_buff>:
	...

20011ad4 <txdesc_tab>:
	...

Disassembly of section .heap:

2001d000 <heap_low>:
	...

Disassembly of section .stack:

2001e000 <_sp-0x2000>:
	...
