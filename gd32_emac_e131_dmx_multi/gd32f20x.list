
build_gd32/main.elf:     file format elf32-littlearm


Disassembly of section .vectors:

08007000 <__gVectors>:
 8007000:	20040000 	andcs	r0, r4, r0
 8007004:	080080cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, pc}
 8007008:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 800700c:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 8007010:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 8007014:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 8007018:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
	...
 800702c:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 8007030:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 8007034:	00000000 	andeq	r0, r0, r0
 8007038:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 800703c:	0801297d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r8, fp, sp}
 8007040:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 8007044:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 8007048:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 800704c:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 8007050:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 8007054:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 8007058:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 800705c:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 8007060:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 8007064:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 8007068:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 800706c:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 8007070:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 8007074:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 8007078:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 800707c:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 8007080:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 8007084:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 8007088:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 800708c:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 8007090:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 8007094:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 8007098:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 800709c:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 80070a0:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 80070a4:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 80070a8:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 80070ac:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 80070b0:	0800dbad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, fp, ip, lr, pc}
 80070b4:	0800dcd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, sl, fp, ip, lr, pc}
 80070b8:	0800dd45 	stmdaeq	r0, {r0, r2, r6, r8, sl, fp, ip, lr, pc}
 80070bc:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 80070c0:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 80070c4:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 80070c8:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 80070cc:	00000000 	andeq	r0, r0, r0
 80070d0:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 80070d4:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 80070d8:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 80070dc:	0800db95 	stmdaeq	r0, {r0, r2, r4, r7, r8, r9, fp, ip, lr, pc}
 80070e0:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 80070e4:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 80070e8:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 80070ec:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 80070f0:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 80070f4:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 80070f8:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 80070fc:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 8007100:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 8007104:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 8007108:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 800710c:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 8007110:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 8007114:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 8007118:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 800711c:	0800dd65 	stmdaeq	r0, {r0, r2, r5, r6, r8, sl, fp, ip, lr, pc}
 8007120:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 8007124:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 8007128:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 800712c:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 8007130:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 8007134:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 8007138:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 800713c:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 8007140:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 8007144:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 8007148:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 800714c:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 8007150:	00000000 	andeq	r0, r0, r0
 8007154:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 8007158:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 800715c:	0800dba1 	stmdaeq	r0, {r0, r5, r7, r8, r9, fp, ip, lr, pc}
 8007160:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 8007164:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
	...
 8007178:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 800717c:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 8007180:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 8007184:	00000000 	andeq	r0, r0, r0
 8007188:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 800718c:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
	...
 80071a0:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}
 80071a4:	08008111 	stmdaeq	r0, {r0, r4, r8, pc}

Disassembly of section .text:

080071a8 <net_init>:
 80071a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80071ac:	460c      	mov	r4, r1
 80071ae:	4616      	mov	r6, r2
 80071b0:	9f06      	ldr	r7, [sp, #24]
 80071b2:	4a22      	ldr	r2, [pc, #136]	; (800723c <net_init+0x94>)
 80071b4:	461d      	mov	r5, r3
 80071b6:	1e43      	subs	r3, r0, #1
 80071b8:	3005      	adds	r0, #5
 80071ba:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 80071be:	4283      	cmp	r3, r0
 80071c0:	f802 1b01 	strb.w	r1, [r2], #1
 80071c4:	d1f9      	bne.n	80071ba <net_init+0x12>
 80071c6:	4623      	mov	r3, r4
 80071c8:	4a1d      	ldr	r2, [pc, #116]	; (8007240 <net_init+0x98>)
 80071ca:	f104 010c 	add.w	r1, r4, #12
 80071ce:	f813 0b01 	ldrb.w	r0, [r3], #1
 80071d2:	428b      	cmp	r3, r1
 80071d4:	f802 0b01 	strb.w	r0, [r2], #1
 80071d8:	d1f9      	bne.n	80071ce <net_init+0x26>
 80071da:	f04f 0800 	mov.w	r8, #0
 80071de:	4918      	ldr	r1, [pc, #96]	; (8007240 <net_init+0x98>)
 80071e0:	4816      	ldr	r0, [pc, #88]	; (800723c <net_init+0x94>)
 80071e2:	f000 f9a7 	bl	8007534 <ip_init>
 80071e6:	4815      	ldr	r0, [pc, #84]	; (800723c <net_init+0x94>)
 80071e8:	f000 f83c 	bl	8007264 <rfc3927_init>
 80071ec:	f887 8000 	strb.w	r8, [r7]
 80071f0:	782b      	ldrb	r3, [r5, #0]
 80071f2:	b163      	cbz	r3, 800720e <net_init+0x66>
 80071f4:	4632      	mov	r2, r6
 80071f6:	4912      	ldr	r1, [pc, #72]	; (8007240 <net_init+0x98>)
 80071f8:	4810      	ldr	r0, [pc, #64]	; (800723c <net_init+0x94>)
 80071fa:	f009 fccb 	bl	8010b94 <dhcp_client>
 80071fe:	4540      	cmp	r0, r8
 8007200:	da05      	bge.n	800720e <net_init+0x66>
 8007202:	480f      	ldr	r0, [pc, #60]	; (8007240 <net_init+0x98>)
 8007204:	f885 8000 	strb.w	r8, [r5]
 8007208:	f007 fec6 	bl	800ef98 <rfc3927>
 800720c:	7038      	strb	r0, [r7, #0]
 800720e:	490c      	ldr	r1, [pc, #48]	; (8007240 <net_init+0x98>)
 8007210:	480a      	ldr	r0, [pc, #40]	; (800723c <net_init+0x94>)
 8007212:	f000 f883 	bl	800731c <arp_init>
 8007216:	480a      	ldr	r0, [pc, #40]	; (8007240 <net_init+0x98>)
 8007218:	f009 fedc 	bl	8010fd4 <ip_set_ip>
 800721c:	f000 f82e 	bl	800727c <tcp_init>
 8007220:	4a07      	ldr	r2, [pc, #28]	; (8007240 <net_init+0x98>)
 8007222:	1e63      	subs	r3, r4, #1
 8007224:	340b      	adds	r4, #11
 8007226:	f812 1b01 	ldrb.w	r1, [r2], #1
 800722a:	f803 1f01 	strb.w	r1, [r3, #1]!
 800722e:	429c      	cmp	r4, r3
 8007230:	d1f9      	bne.n	8007226 <net_init+0x7e>
 8007232:	782a      	ldrb	r2, [r5, #0]
 8007234:	4b03      	ldr	r3, [pc, #12]	; (8007244 <net_init+0x9c>)
 8007236:	701a      	strb	r2, [r3, #0]
 8007238:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800723c:	200038e0 	andcs	r3, r0, r0, ror #17
 8007240:	200038d4 	ldrdcs	r3, [r0], -r4
 8007244:	200038e6 	andcs	r3, r0, r6, ror #17

08007248 <net_shutdown>:
 8007248:	b508      	push	{r3, lr}
 800724a:	f000 f97e 	bl	800754a <ip_shutdown>
 800724e:	4b04      	ldr	r3, [pc, #16]	; (8007260 <net_shutdown+0x18>)
 8007250:	781b      	ldrb	r3, [r3, #0]
 8007252:	b11b      	cbz	r3, 800725c <net_shutdown+0x14>
 8007254:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8007258:	f009 bda4 	b.w	8010da4 <dhcp_client_release>
 800725c:	bd08      	pop	{r3, pc}
 800725e:	bf00      	nop
 8007260:	200038e6 	andcs	r3, r0, r6, ror #17

08007264 <rfc3927_init>:
 8007264:	4b04      	ldr	r3, [pc, #16]	; (8007278 <rfc3927_init+0x14>)
 8007266:	1d82      	adds	r2, r0, #6
 8007268:	4290      	cmp	r0, r2
 800726a:	d100      	bne.n	800726e <rfc3927_init+0xa>
 800726c:	4770      	bx	lr
 800726e:	f810 1b01 	ldrb.w	r1, [r0], #1
 8007272:	f803 1b01 	strb.w	r1, [r3], #1
 8007276:	e7f7      	b.n	8007268 <rfc3927_init+0x4>
 8007278:	200038f0 	strdcs	r3, [r0], -r0

0800727c <tcp_init>:
 800727c:	2206      	movs	r2, #6
 800727e:	b513      	push	{r0, r1, r4, lr}
 8007280:	4c0b      	ldr	r4, [pc, #44]	; (80072b0 <tcp_init+0x34>)
 8007282:	490c      	ldr	r1, [pc, #48]	; (80072b4 <tcp_init+0x38>)
 8007284:	18a0      	adds	r0, r4, r2
 8007286:	f007 fee1 	bl	800f04c <memcpy.isra.0>
 800728a:	2308      	movs	r3, #8
 800728c:	2204      	movs	r2, #4
 800728e:	81a3      	strh	r3, [r4, #12]
 8007290:	4b09      	ldr	r3, [pc, #36]	; (80072b8 <tcp_init+0x3c>)
 8007292:	eb0d 0102 	add.w	r1, sp, r2
 8007296:	681b      	ldr	r3, [r3, #0]
 8007298:	f104 001a 	add.w	r0, r4, #26
 800729c:	9301      	str	r3, [sp, #4]
 800729e:	f007 fed5 	bl	800f04c <memcpy.isra.0>
 80072a2:	2345      	movs	r3, #69	; 0x45
 80072a4:	81e3      	strh	r3, [r4, #14]
 80072a6:	4b05      	ldr	r3, [pc, #20]	; (80072bc <tcp_init+0x40>)
 80072a8:	6163      	str	r3, [r4, #20]
 80072aa:	b002      	add	sp, #8
 80072ac:	bd10      	pop	{r4, pc}
 80072ae:	bf00      	nop
 80072b0:	200044b8 			; <UNDEFINED> instruction: 0x200044b8
 80072b4:	200038e0 	andcs	r3, r0, r0, ror #17
 80072b8:	200038d4 	ldrdcs	r3, [r0], -r4
 80072bc:	06400040 	strbeq	r0, [r0], -r0, asr #32

080072c0 <udp_init>:
 80072c0:	b570      	push	{r4, r5, r6, lr}
 80072c2:	2200      	movs	r2, #0
 80072c4:	2408      	movs	r4, #8
 80072c6:	460e      	mov	r6, r1
 80072c8:	4b0d      	ldr	r3, [pc, #52]	; (8007300 <udp_init+0x40>)
 80072ca:	490e      	ldr	r1, [pc, #56]	; (8007304 <udp_init+0x44>)
 80072cc:	3c01      	subs	r4, #1
 80072ce:	801a      	strh	r2, [r3, #0]
 80072d0:	805a      	strh	r2, [r3, #2]
 80072d2:	f841 2b04 	str.w	r2, [r1], #4
 80072d6:	f603 3394 	addw	r3, r3, #2964	; 0xb94
 80072da:	d1f7      	bne.n	80072cc <udp_init+0xc>
 80072dc:	2206      	movs	r2, #6
 80072de:	4d0a      	ldr	r5, [pc, #40]	; (8007308 <udp_init+0x48>)
 80072e0:	4b0a      	ldr	r3, [pc, #40]	; (800730c <udp_init+0x4c>)
 80072e2:	4601      	mov	r1, r0
 80072e4:	18a8      	adds	r0, r5, r2
 80072e6:	801c      	strh	r4, [r3, #0]
 80072e8:	f008 f834 	bl	800f354 <memcpy.isra.0>
 80072ec:	4b08      	ldr	r3, [pc, #32]	; (8007310 <udp_init+0x50>)
 80072ee:	4630      	mov	r0, r6
 80072f0:	60eb      	str	r3, [r5, #12]
 80072f2:	4b08      	ldr	r3, [pc, #32]	; (8007314 <udp_init+0x54>)
 80072f4:	616b      	str	r3, [r5, #20]
 80072f6:	f008 f855 	bl	800f3a4 <udp_set_ip>
 80072fa:	852c      	strh	r4, [r5, #40]	; 0x28
 80072fc:	bd70      	pop	{r4, r5, r6, pc}
 80072fe:	bf00      	nop
 8007300:	20004ad4 	ldrdcs	r4, [r0], -r4	; <UNPREDICTABLE>
 8007304:	20004ab4 			; <UNDEFINED> instruction: 0x20004ab4
 8007308:	2000a774 	andcs	sl, r0, r4, ror r7
 800730c:	20004ab0 			; <UNDEFINED> instruction: 0x20004ab0
 8007310:	00450008 	subeq	r0, r5, r8
 8007314:	11400040 	cmpne	r0, r0, asr #32

08007318 <udp_shutdown>:
 8007318:	4770      	bx	lr
	...

0800731c <arp_init>:
 800731c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007320:	4604      	mov	r4, r0
 8007322:	460d      	mov	r5, r1
 8007324:	f000 f876 	bl	8007414 <arp_cache_init>
 8007328:	2206      	movs	r2, #6
 800732a:	4621      	mov	r1, r4
 800732c:	482e      	ldr	r0, [pc, #184]	; (80073e8 <arp_init+0xcc>)
 800732e:	682f      	ldr	r7, [r5, #0]
 8007330:	f009 fab2 	bl	8010898 <memcpy.isra.0>
 8007334:	4b2d      	ldr	r3, [pc, #180]	; (80073ec <arp_init+0xd0>)
 8007336:	2507      	movs	r5, #7
 8007338:	461e      	mov	r6, r3
 800733a:	22ff      	movs	r2, #255	; 0xff
 800733c:	3d01      	subs	r5, #1
 800733e:	d146      	bne.n	80073ce <arp_init+0xb2>
 8007340:	4b2b      	ldr	r3, [pc, #172]	; (80073f0 <arp_init+0xd4>)
 8007342:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 80073f4 <arp_init+0xd8>
 8007346:	2206      	movs	r2, #6
 8007348:	e9c6 3803 	strd	r3, r8, [r6, #12]
 800734c:	f44f 7380 	mov.w	r3, #256	; 0x100
 8007350:	4621      	mov	r1, r4
 8007352:	4829      	ldr	r0, [pc, #164]	; (80073f8 <arp_init+0xdc>)
 8007354:	82b3      	strh	r3, [r6, #20]
 8007356:	f009 fa9f 	bl	8010898 <memcpy.isra.0>
 800735a:	2307      	movs	r3, #7
 800735c:	4a27      	ldr	r2, [pc, #156]	; (80073fc <arp_init+0xe0>)
 800735e:	61f7      	str	r7, [r6, #28]
 8007360:	3b01      	subs	r3, #1
 8007362:	d137      	bne.n	80073d4 <arp_init+0xb8>
 8007364:	2206      	movs	r2, #6
 8007366:	4621      	mov	r1, r4
 8007368:	4825      	ldr	r0, [pc, #148]	; (8007400 <arp_init+0xe4>)
 800736a:	f8c6 7026 	str.w	r7, [r6, #38]	; 0x26
 800736e:	f009 fa93 	bl	8010898 <memcpy.isra.0>
 8007372:	4a24      	ldr	r2, [pc, #144]	; (8007404 <arp_init+0xe8>)
 8007374:	2306      	movs	r3, #6
 8007376:	4615      	mov	r5, r2
 8007378:	21ff      	movs	r1, #255	; 0xff
 800737a:	3b01      	subs	r3, #1
 800737c:	d22d      	bcs.n	80073da <arp_init+0xbe>
 800737e:	4b1c      	ldr	r3, [pc, #112]	; (80073f0 <arp_init+0xd4>)
 8007380:	2206      	movs	r2, #6
 8007382:	e9c5 3803 	strd	r3, r8, [r5, #12]
 8007386:	f44f 7380 	mov.w	r3, #256	; 0x100
 800738a:	4621      	mov	r1, r4
 800738c:	481e      	ldr	r0, [pc, #120]	; (8007408 <arp_init+0xec>)
 800738e:	82ab      	strh	r3, [r5, #20]
 8007390:	f009 fa82 	bl	8010898 <memcpy.isra.0>
 8007394:	2307      	movs	r3, #7
 8007396:	2100      	movs	r1, #0
 8007398:	4a1c      	ldr	r2, [pc, #112]	; (800740c <arp_init+0xf0>)
 800739a:	61ef      	str	r7, [r5, #28]
 800739c:	3b01      	subs	r3, #1
 800739e:	d11f      	bne.n	80073e0 <arp_init+0xc4>
 80073a0:	2206      	movs	r2, #6
 80073a2:	4d1b      	ldr	r5, [pc, #108]	; (8007410 <arp_init+0xf4>)
 80073a4:	4621      	mov	r1, r4
 80073a6:	18a8      	adds	r0, r5, r2
 80073a8:	f009 fa76 	bl	8010898 <memcpy.isra.0>
 80073ac:	4b10      	ldr	r3, [pc, #64]	; (80073f0 <arp_init+0xd4>)
 80073ae:	4621      	mov	r1, r4
 80073b0:	e9c5 3803 	strd	r3, r8, [r5, #12]
 80073b4:	f44f 7300 	mov.w	r3, #512	; 0x200
 80073b8:	f105 0016 	add.w	r0, r5, #22
 80073bc:	2206      	movs	r2, #6
 80073be:	82ab      	strh	r3, [r5, #20]
 80073c0:	f009 fa6a 	bl	8010898 <memcpy.isra.0>
 80073c4:	61ef      	str	r7, [r5, #28]
 80073c6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80073ca:	f009 ba6f 	b.w	80108ac <arp_announce>
 80073ce:	f803 2b01 	strb.w	r2, [r3], #1
 80073d2:	e7b3      	b.n	800733c <arp_init+0x20>
 80073d4:	f802 5b01 	strb.w	r5, [r2], #1
 80073d8:	e7c2      	b.n	8007360 <arp_init+0x44>
 80073da:	f802 1b01 	strb.w	r1, [r2], #1
 80073de:	e7cc      	b.n	800737a <arp_init+0x5e>
 80073e0:	f802 1b01 	strb.w	r1, [r2], #1
 80073e4:	e7da      	b.n	800739c <arp_init+0x80>
 80073e6:	bf00      	nop
 80073e8:	2000b1aa 	andcs	fp, r0, sl, lsr #3
 80073ec:	2000b1a4 	andcs	fp, r0, r4, lsr #3
 80073f0:	01000608 	tsteq	r0, r8, lsl #12
 80073f4:	04060008 	streq	r0, [r6], #-8
 80073f8:	2000b1ba 			; <UNDEFINED> instruction: 0x2000b1ba
 80073fc:	2000b1c4 	andcs	fp, r0, r4, asr #3
 8007400:	2000b202 	andcs	fp, r0, r2, lsl #4
 8007404:	2000b1fc 	strdcs	fp, [r0], -ip
 8007408:	2000b212 	andcs	fp, r0, r2, lsl r2
 800740c:	2000b21c 	andcs	fp, r0, ip, lsl r2
 8007410:	2000b1d0 	ldrdcs	fp, [r0], -r0

08007414 <arp_cache_init>:
 8007414:	2300      	movs	r3, #0
 8007416:	4618      	mov	r0, r3
 8007418:	4a09      	ldr	r2, [pc, #36]	; (8007440 <arp_cache_init+0x2c>)
 800741a:	b510      	push	{r4, lr}
 800741c:	8013      	strh	r3, [r2, #0]
 800741e:	4a09      	ldr	r2, [pc, #36]	; (8007444 <arp_cache_init+0x30>)
 8007420:	4611      	mov	r1, r2
 8007422:	f842 0c04 	str.w	r0, [r2, #-4]
 8007426:	1d94      	adds	r4, r2, #6
 8007428:	42a1      	cmp	r1, r4
 800742a:	d105      	bne.n	8007438 <arp_cache_init+0x24>
 800742c:	3303      	adds	r3, #3
 800742e:	2b60      	cmp	r3, #96	; 0x60
 8007430:	f102 020c 	add.w	r2, r2, #12
 8007434:	d1f4      	bne.n	8007420 <arp_cache_init+0xc>
 8007436:	bd10      	pop	{r4, pc}
 8007438:	f801 0b01 	strb.w	r0, [r1], #1
 800743c:	e7f4      	b.n	8007428 <arp_cache_init+0x14>
 800743e:	bf00      	nop
 8007440:	2000b3a8 	andcs	fp, r0, r8, lsr #7
 8007444:	2000b22c 	andcs	fp, r0, ip, lsr #4

08007448 <igmp_init>:
 8007448:	2200      	movs	r2, #0
 800744a:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800744e:	4605      	mov	r5, r0
 8007450:	4608      	mov	r0, r1
 8007452:	4611      	mov	r1, r2
 8007454:	4b23      	ldr	r3, [pc, #140]	; (80074e4 <igmp_init+0x9c>)
 8007456:	f103 0408 	add.w	r4, r3, #8
 800745a:	42a3      	cmp	r3, r4
 800745c:	d13e      	bne.n	80074dc <igmp_init+0x94>
 800745e:	3201      	adds	r2, #1
 8007460:	2a24      	cmp	r2, #36	; 0x24
 8007462:	d1f8      	bne.n	8007456 <igmp_init+0xe>
 8007464:	2600      	movs	r6, #0
 8007466:	4b20      	ldr	r3, [pc, #128]	; (80074e8 <igmp_init+0xa0>)
 8007468:	4c20      	ldr	r4, [pc, #128]	; (80074ec <igmp_init+0xa4>)
 800746a:	601e      	str	r6, [r3, #0]
 800746c:	4b20      	ldr	r3, [pc, #128]	; (80074f0 <igmp_init+0xa8>)
 800746e:	f44f 5700 	mov.w	r7, #8192	; 0x2000
 8007472:	801e      	strh	r6, [r3, #0]
 8007474:	f009 fd0e 	bl	8010e94 <igmp_set_ip>
 8007478:	2201      	movs	r2, #1
 800747a:	4b1e      	ldr	r3, [pc, #120]	; (80074f4 <igmp_init+0xac>)
 800747c:	4629      	mov	r1, r5
 800747e:	801a      	strh	r2, [r3, #0]
 8007480:	225e      	movs	r2, #94	; 0x5e
 8007482:	709a      	strb	r2, [r3, #2]
 8007484:	2206      	movs	r2, #6
 8007486:	18a0      	adds	r0, r4, r2
 8007488:	f009 fcba 	bl	8010e00 <memcpy.isra.0>
 800748c:	f240 4394 	movw	r3, #1172	; 0x494
 8007490:	8463      	strh	r3, [r4, #34]	; 0x22
 8007492:	2316      	movs	r3, #22
 8007494:	f8df 9060 	ldr.w	r9, [pc, #96]	; 80074f8 <igmp_init+0xb0>
 8007498:	f8df 8060 	ldr.w	r8, [pc, #96]	; 80074fc <igmp_init+0xb4>
 800749c:	84e3      	strh	r3, [r4, #38]	; 0x26
 800749e:	f8c4 9014 	str.w	r9, [r4, #20]
 80074a2:	4b17      	ldr	r3, [pc, #92]	; (8007500 <igmp_init+0xb8>)
 80074a4:	f8c4 800c 	str.w	r8, [r4, #12]
 80074a8:	8227      	strh	r7, [r4, #16]
 80074aa:	84a6      	strh	r6, [r4, #36]	; 0x24
 80074ac:	4c15      	ldr	r4, [pc, #84]	; (8007504 <igmp_init+0xbc>)
 80074ae:	2206      	movs	r2, #6
 80074b0:	6023      	str	r3, [r4, #0]
 80074b2:	f44f 7300 	mov.w	r3, #512	; 0x200
 80074b6:	18a0      	adds	r0, r4, r2
 80074b8:	80a3      	strh	r3, [r4, #4]
 80074ba:	4629      	mov	r1, r5
 80074bc:	f009 fca0 	bl	8010e00 <memcpy.isra.0>
 80074c0:	23e0      	movs	r3, #224	; 0xe0
 80074c2:	83e3      	strh	r3, [r4, #30]
 80074c4:	f44f 13b8 	mov.w	r3, #1507328	; 0x170000
 80074c8:	4a0f      	ldr	r2, [pc, #60]	; (8007508 <igmp_init+0xc0>)
 80074ca:	f8c4 9014 	str.w	r9, [r4, #20]
 80074ce:	e9c4 2308 	strd	r2, r3, [r4, #32]
 80074d2:	f8c4 800c 	str.w	r8, [r4, #12]
 80074d6:	8227      	strh	r7, [r4, #16]
 80074d8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80074dc:	f803 1b01 	strb.w	r1, [r3], #1
 80074e0:	e7bb      	b.n	800745a <igmp_init+0x12>
 80074e2:	bf00      	nop
 80074e4:	2000b5e0 	andcs	fp, r0, r0, ror #11
 80074e8:	2000b704 	andcs	fp, r0, r4, lsl #14
 80074ec:	2000b740 	andcs	fp, r0, r0, asr #14
 80074f0:	2000b700 	andcs	fp, r0, r0, lsl #14
 80074f4:	2000b738 	andcs	fp, r0, r8, lsr r7
 80074f8:	02010040 	andeq	r0, r1, #64	; 0x40
 80074fc:	00460008 	subeq	r0, r6, r8
 8007500:	005e0001 	subseq	r0, lr, r1
 8007504:	2000b708 	andcs	fp, r0, r8, lsl #14
 8007508:	04940200 	ldreq	r0, [r4], #512	; 0x200

0800750c <igmp_shutdown>:
 800750c:	b570      	push	{r4, r5, r6, lr}
 800750e:	2500      	movs	r5, #0
 8007510:	462e      	mov	r6, r5
 8007512:	4c07      	ldr	r4, [pc, #28]	; (8007530 <igmp_shutdown+0x24>)
 8007514:	6820      	ldr	r0, [r4, #0]
 8007516:	b120      	cbz	r0, 8007522 <igmp_shutdown+0x16>
 8007518:	f009 fd18 	bl	8010f4c <igmp_leave>
 800751c:	6026      	str	r6, [r4, #0]
 800751e:	7166      	strb	r6, [r4, #5]
 8007520:	7126      	strb	r6, [r4, #4]
 8007522:	3501      	adds	r5, #1
 8007524:	2d24      	cmp	r5, #36	; 0x24
 8007526:	f104 0408 	add.w	r4, r4, #8
 800752a:	d1f3      	bne.n	8007514 <igmp_shutdown+0x8>
 800752c:	bd70      	pop	{r4, r5, r6, pc}
 800752e:	bf00      	nop
 8007530:	2000b5e0 	andcs	fp, r0, r0, ror #11

08007534 <ip_init>:
 8007534:	b538      	push	{r3, r4, r5, lr}
 8007536:	4604      	mov	r4, r0
 8007538:	460d      	mov	r5, r1
 800753a:	f7ff fec1 	bl	80072c0 <udp_init>
 800753e:	4629      	mov	r1, r5
 8007540:	4620      	mov	r0, r4
 8007542:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8007546:	f7ff bf7f 	b.w	8007448 <igmp_init>

0800754a <ip_shutdown>:
 800754a:	b508      	push	{r3, lr}
 800754c:	f7ff ffde 	bl	800750c <igmp_shutdown>
 8007550:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8007554:	f7ff bee0 	b.w	8007318 <udp_shutdown>

08007558 <console_init>:
 8007558:	b508      	push	{r3, lr}
 800755a:	f00b f9b1 	bl	80128c0 <uart0_init>
 800755e:	4804      	ldr	r0, [pc, #16]	; (8007570 <console_init+0x18>)
 8007560:	f00b f9de 	bl	8012920 <uart0_puts>
 8007564:	4803      	ldr	r0, [pc, #12]	; (8007574 <console_init+0x1c>)
 8007566:	f00b f9db 	bl	8012920 <uart0_puts>
 800756a:	2000      	movs	r0, #0
 800756c:	bd08      	pop	{r3, pc}
 800756e:	bf00      	nop
 8007570:	080148bc 	stmdaeq	r1, {r2, r3, r4, r5, r7, fp, lr}
 8007574:	08016b84 	stmdaeq	r1, {r2, r7, r8, r9, fp, sp, lr}

08007578 <net_handle>:
 8007578:	b510      	push	{r4, lr}
 800757a:	4c0c      	ldr	r4, [pc, #48]	; (80075ac <net_handle+0x34>)
 800757c:	4620      	mov	r0, r4
 800757e:	f00b fff7 	bl	8013570 <emac_eth_recv>
 8007582:	2800      	cmp	r0, #0
 8007584:	dd07      	ble.n	8007596 <net_handle+0x1e>
 8007586:	6820      	ldr	r0, [r4, #0]
 8007588:	8983      	ldrh	r3, [r0, #12]
 800758a:	2b08      	cmp	r3, #8
 800758c:	d107      	bne.n	800759e <net_handle+0x26>
 800758e:	f000 fa6f 	bl	8007a70 <ip_handle>
 8007592:	f00c f801 	bl	8013598 <emac_free_pkt>
 8007596:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800759a:	f007 bced 	b.w	800ef78 <net_timers_run>
 800759e:	f5b3 6fc1 	cmp.w	r3, #1544	; 0x608
 80075a2:	d1f6      	bne.n	8007592 <net_handle+0x1a>
 80075a4:	f000 fa08 	bl	80079b8 <arp_handle>
 80075a8:	e7f3      	b.n	8007592 <net_handle+0x1a>
 80075aa:	bf00      	nop
 80075ac:	200038e8 	andcs	r3, r0, r8, ror #17

080075b0 <tcp_handle>:
 80075b0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80075b4:	4605      	mov	r5, r0
 80075b6:	8c43      	ldrh	r3, [r0, #34]	; 0x22
 80075b8:	f8b0 8010 	ldrh.w	r8, [r0, #16]
 80075bc:	ba5b      	rev16	r3, r3
 80075be:	8443      	strh	r3, [r0, #34]	; 0x22
 80075c0:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 80075c2:	f890 902e 	ldrb.w	r9, [r0, #46]	; 0x2e
 80075c6:	ba5b      	rev16	r3, r3
 80075c8:	8483      	strh	r3, [r0, #36]	; 0x24
 80075ca:	f007 fd49 	bl	800f060 <_bswap32>
 80075ce:	8e2b      	ldrh	r3, [r5, #48]	; 0x30
 80075d0:	4ca5      	ldr	r4, [pc, #660]	; (8007868 <tcp_handle+0x2b8>)
 80075d2:	ba5b      	rev16	r3, r3
 80075d4:	862b      	strh	r3, [r5, #48]	; 0x30
 80075d6:	8eab      	ldrh	r3, [r5, #52]	; 0x34
 80075d8:	8822      	ldrh	r2, [r4, #0]
 80075da:	ba5b      	rev16	r3, r3
 80075dc:	86ab      	strh	r3, [r5, #52]	; 0x34
 80075de:	8cab      	ldrh	r3, [r5, #36]	; 0x24
 80075e0:	429a      	cmp	r2, r3
 80075e2:	d14d      	bne.n	8007680 <tcp_handle+0xd0>
 80075e4:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 80075e8:	2b01      	cmp	r3, #1
 80075ea:	d00d      	beq.n	8007608 <tcp_handle+0x58>
 80075ec:	2204      	movs	r2, #4
 80075ee:	4668      	mov	r0, sp
 80075f0:	f105 011a 	add.w	r1, r5, #26
 80075f4:	f007 fd2a 	bl	800f04c <memcpy.isra.0>
 80075f8:	8862      	ldrh	r2, [r4, #2]
 80075fa:	8c6b      	ldrh	r3, [r5, #34]	; 0x22
 80075fc:	429a      	cmp	r2, r3
 80075fe:	d13f      	bne.n	8007680 <tcp_handle+0xd0>
 8007600:	6862      	ldr	r2, [r4, #4]
 8007602:	9b00      	ldr	r3, [sp, #0]
 8007604:	429a      	cmp	r2, r3
 8007606:	d13b      	bne.n	8007680 <tcp_handle+0xd0>
 8007608:	2204      	movs	r2, #4
 800760a:	f105 012a 	add.w	r1, r5, #42	; 0x2a
 800760e:	eb0d 0002 	add.w	r0, sp, r2
 8007612:	f007 fd1b 	bl	800f04c <memcpy.isra.0>
 8007616:	2204      	movs	r2, #4
 8007618:	f105 0126 	add.w	r1, r5, #38	; 0x26
 800761c:	eb0d 0002 	add.w	r0, sp, r2
 8007620:	9e01      	ldr	r6, [sp, #4]
 8007622:	f007 fd13 	bl	800f04c <memcpy.isra.0>
 8007626:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 800762a:	9f01      	ldr	r7, [sp, #4]
 800762c:	2a01      	cmp	r2, #1
 800762e:	f8b5 a030 	ldrh.w	sl, [r5, #48]	; 0x30
 8007632:	d01b      	beq.n	800766c <tcp_handle+0xbc>
 8007634:	1ed3      	subs	r3, r2, #3
 8007636:	2b07      	cmp	r3, #7
 8007638:	d822      	bhi.n	8007680 <tcp_handle+0xd0>
 800763a:	fa98 f198 	rev16.w	r1, r8
 800763e:	f64f 78ec 	movw	r8, #65516	; 0xffec
 8007642:	ea4f 1319 	mov.w	r3, r9, lsr #4
 8007646:	eba8 0883 	sub.w	r8, r8, r3, lsl #2
 800764a:	4488      	add	r8, r1
 800764c:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 800764e:	f895 002f 	ldrb.w	r0, [r5, #47]	; 0x2f
 8007652:	ea4f 0983 	mov.w	r9, r3, lsl #2
 8007656:	fa1f f888 	uxth.w	r8, r8
 800765a:	2900      	cmp	r1, #0
 800765c:	d142      	bne.n	80076e4 <tcp_handle+0x134>
 800765e:	f1b8 0f00 	cmp.w	r8, #0
 8007662:	d16b      	bne.n	800773c <tcp_handle+0x18c>
 8007664:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007666:	42bb      	cmp	r3, r7
 8007668:	d168      	bne.n	800773c <tcp_handle+0x18c>
 800766a:	e048      	b.n	80076fe <tcp_handle+0x14e>
 800766c:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 8007670:	075a      	lsls	r2, r3, #29
 8007672:	d405      	bmi.n	8007680 <tcp_handle+0xd0>
 8007674:	06d8      	lsls	r0, r3, #27
 8007676:	d506      	bpl.n	8007686 <tcp_handle+0xd6>
 8007678:	4628      	mov	r0, r5
 800767a:	497b      	ldr	r1, [pc, #492]	; (8007868 <tcp_handle+0x2b8>)
 800767c:	f007 fdbc 	bl	800f1f8 <_send_reset>
 8007680:	b004      	add	sp, #16
 8007682:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007686:	0799      	lsls	r1, r3, #30
 8007688:	d5fa      	bpl.n	8007680 <tcp_handle+0xd0>
 800768a:	f895 2023 	ldrb.w	r2, [r5, #35]	; 0x23
 800768e:	f895 3022 	ldrb.w	r3, [r5, #34]	; 0x22
 8007692:	4668      	mov	r0, sp
 8007694:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8007698:	f105 011a 	add.w	r1, r5, #26
 800769c:	2204      	movs	r2, #4
 800769e:	8063      	strh	r3, [r4, #2]
 80076a0:	f007 fcd4 	bl	800f04c <memcpy.isra.0>
 80076a4:	2206      	movs	r2, #6
 80076a6:	9b00      	ldr	r3, [sp, #0]
 80076a8:	18a9      	adds	r1, r5, r2
 80076aa:	4870      	ldr	r0, [pc, #448]	; (800786c <tcp_handle+0x2bc>)
 80076ac:	6063      	str	r3, [r4, #4]
 80076ae:	f007 fccd 	bl	800f04c <memcpy.isra.0>
 80076b2:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80076b4:	1c7b      	adds	r3, r7, #1
 80076b6:	e9cd 2301 	strd	r2, r3, [sp, #4]
 80076ba:	6363      	str	r3, [r4, #52]	; 0x34
 80076bc:	2312      	movs	r3, #18
 80076be:	486a      	ldr	r0, [pc, #424]	; (8007868 <tcp_handle+0x2b8>)
 80076c0:	a901      	add	r1, sp, #4
 80076c2:	f88d 300c 	strb.w	r3, [sp, #12]
 80076c6:	e9c4 7608 	strd	r7, r6, [r4, #32]
 80076ca:	63e7      	str	r7, [r4, #60]	; 0x3c
 80076cc:	f8c4 a018 	str.w	sl, [r4, #24]
 80076d0:	f007 fcec 	bl	800f0ac <_tcp_send_package>
 80076d4:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80076d6:	1c5a      	adds	r2, r3, #1
 80076d8:	e9c4 3204 	strd	r3, r2, [r4, #16]
 80076dc:	2303      	movs	r3, #3
 80076de:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 80076e2:	e7cd      	b.n	8007680 <tcp_handle+0xd0>
 80076e4:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80076e6:	eba3 0c07 	sub.w	ip, r3, r7
 80076ea:	f1b8 0f00 	cmp.w	r8, #0
 80076ee:	d10d      	bne.n	800770c <tcp_handle+0x15c>
 80076f0:	f1bc 0f00 	cmp.w	ip, #0
 80076f4:	dc22      	bgt.n	800773c <tcp_handle+0x18c>
 80076f6:	1afb      	subs	r3, r7, r3
 80076f8:	1a5b      	subs	r3, r3, r1
 80076fa:	2b00      	cmp	r3, #0
 80076fc:	da1e      	bge.n	800773c <tcp_handle+0x18c>
 80076fe:	0743      	lsls	r3, r0, #29
 8007700:	d530      	bpl.n	8007764 <tcp_handle+0x1b4>
 8007702:	8821      	ldrh	r1, [r4, #0]
 8007704:	4858      	ldr	r0, [pc, #352]	; (8007868 <tcp_handle+0x2b8>)
 8007706:	f007 fc87 	bl	800f018 <_init_tcb>
 800770a:	e7b9      	b.n	8007680 <tcp_handle+0xd0>
 800770c:	f1bc 0f00 	cmp.w	ip, #0
 8007710:	dc06      	bgt.n	8007720 <tcp_handle+0x170>
 8007712:	eba7 0c03 	sub.w	ip, r7, r3
 8007716:	ebac 0c01 	sub.w	ip, ip, r1
 800771a:	f1bc 0f00 	cmp.w	ip, #0
 800771e:	dbee      	blt.n	80076fe <tcp_handle+0x14e>
 8007720:	eb08 0c07 	add.w	ip, r8, r7
 8007724:	f103 0e01 	add.w	lr, r3, #1
 8007728:	ebae 0e0c 	sub.w	lr, lr, ip
 800772c:	f1be 0f00 	cmp.w	lr, #0
 8007730:	dc04      	bgt.n	800773c <tcp_handle+0x18c>
 8007732:	43db      	mvns	r3, r3
 8007734:	1a5b      	subs	r3, r3, r1
 8007736:	eb13 0f0c 	cmn.w	r3, ip
 800773a:	d4e0      	bmi.n	80076fe <tcp_handle+0x14e>
 800773c:	0742      	lsls	r2, r0, #29
 800773e:	d505      	bpl.n	800774c <tcp_handle+0x19c>
 8007740:	8821      	ldrh	r1, [r4, #0]
 8007742:	4849      	ldr	r0, [pc, #292]	; (8007868 <tcp_handle+0x2b8>)
 8007744:	f007 fc68 	bl	800f018 <_init_tcb>
 8007748:	2301      	movs	r3, #1
 800774a:	e7c8      	b.n	80076de <tcp_handle+0x12e>
 800774c:	6963      	ldr	r3, [r4, #20]
 800774e:	9301      	str	r3, [sp, #4]
 8007750:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007752:	9302      	str	r3, [sp, #8]
 8007754:	2310      	movs	r3, #16
 8007756:	4844      	ldr	r0, [pc, #272]	; (8007868 <tcp_handle+0x2b8>)
 8007758:	a901      	add	r1, sp, #4
 800775a:	f88d 300c 	strb.w	r3, [sp, #12]
 800775e:	f007 fca5 	bl	800f0ac <_tcp_send_package>
 8007762:	e78d      	b.n	8007680 <tcp_handle+0xd0>
 8007764:	0781      	lsls	r1, r0, #30
 8007766:	d505      	bpl.n	8007774 <tcp_handle+0x1c4>
 8007768:	2a03      	cmp	r2, #3
 800776a:	d0ed      	beq.n	8007748 <tcp_handle+0x198>
 800776c:	4628      	mov	r0, r5
 800776e:	493e      	ldr	r1, [pc, #248]	; (8007868 <tcp_handle+0x2b8>)
 8007770:	f007 fd42 	bl	800f1f8 <_send_reset>
 8007774:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 8007778:	06da      	lsls	r2, r3, #27
 800777a:	d581      	bpl.n	8007680 <tcp_handle+0xd0>
 800777c:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8007780:	3b03      	subs	r3, #3
 8007782:	2b07      	cmp	r3, #7
 8007784:	d818      	bhi.n	80077b8 <tcp_handle+0x208>
 8007786:	e8df f003 	tbb	[pc, r3]
 800778a:	75757504 	ldrbvc	r7, [r5, #-1284]!	; 0xfffffafc
 800778e:	a59c7575 	ldrge	r7, [ip, #1397]	; 0x575
 8007792:	6923      	ldr	r3, [r4, #16]
 8007794:	1b9b      	subs	r3, r3, r6
 8007796:	2b00      	cmp	r3, #0
 8007798:	dc0a      	bgt.n	80077b0 <tcp_handle+0x200>
 800779a:	6963      	ldr	r3, [r4, #20]
 800779c:	1af3      	subs	r3, r6, r3
 800779e:	2b00      	cmp	r3, #0
 80077a0:	dc06      	bgt.n	80077b0 <tcp_handle+0x200>
 80077a2:	2304      	movs	r3, #4
 80077a4:	e9c4 7608 	strd	r7, r6, [r4, #32]
 80077a8:	f8c4 a018 	str.w	sl, [r4, #24]
 80077ac:	6126      	str	r6, [r4, #16]
 80077ae:	e796      	b.n	80076de <tcp_handle+0x12e>
 80077b0:	4628      	mov	r0, r5
 80077b2:	492d      	ldr	r1, [pc, #180]	; (8007868 <tcp_handle+0x2b8>)
 80077b4:	f007 fd20 	bl	800f1f8 <_send_reset>
 80077b8:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 80077bc:	3b04      	subs	r3, #4
 80077be:	2b02      	cmp	r3, #2
 80077c0:	d830      	bhi.n	8007824 <tcp_handle+0x274>
 80077c2:	f1b8 0f00 	cmp.w	r8, #0
 80077c6:	d02d      	beq.n	8007824 <tcp_handle+0x274>
 80077c8:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80077ca:	42bb      	cmp	r3, r7
 80077cc:	f040 8091 	bne.w	80078f2 <tcp_handle+0x342>
 80077d0:	f240 53b6 	movw	r3, #1462	; 0x5b6
 80077d4:	f8df a098 	ldr.w	sl, [pc, #152]	; 8007870 <tcp_handle+0x2c0>
 80077d8:	f105 0122 	add.w	r1, r5, #34	; 0x22
 80077dc:	f8ba 7000 	ldrh.w	r7, [sl]
 80077e0:	4642      	mov	r2, r8
 80077e2:	435f      	muls	r7, r3
 80077e4:	1d38      	adds	r0, r7, #4
 80077e6:	4449      	add	r1, r9
 80077e8:	4450      	add	r0, sl
 80077ea:	f007 fc2f 	bl	800f04c <memcpy.isra.0>
 80077ee:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 80077f0:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80077f2:	f2a2 52b4 	subw	r2, r2, #1460	; 0x5b4
 80077f6:	8722      	strh	r2, [r4, #56]	; 0x38
 80077f8:	6962      	ldr	r2, [r4, #20]
 80077fa:	4443      	add	r3, r8
 80077fc:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8007800:	6363      	str	r3, [r4, #52]	; 0x34
 8007802:	2310      	movs	r3, #16
 8007804:	4457      	add	r7, sl
 8007806:	4818      	ldr	r0, [pc, #96]	; (8007868 <tcp_handle+0x2b8>)
 8007808:	f8a7 85b8 	strh.w	r8, [r7, #1464]	; 0x5b8
 800780c:	a901      	add	r1, sp, #4
 800780e:	f88d 300c 	strb.w	r3, [sp, #12]
 8007812:	f007 fc4b 	bl	800f0ac <_tcp_send_package>
 8007816:	f8ba 3000 	ldrh.w	r3, [sl]
 800781a:	3301      	adds	r3, #1
 800781c:	f003 0301 	and.w	r3, r3, #1
 8007820:	f8aa 3000 	strh.w	r3, [sl]
 8007824:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8007828:	2b02      	cmp	r3, #2
 800782a:	f67f af29 	bls.w	8007680 <tcp_handle+0xd0>
 800782e:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 8007832:	07db      	lsls	r3, r3, #31
 8007834:	f57f af24 	bpl.w	8007680 <tcp_handle+0xd0>
 8007838:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800783a:	6962      	ldr	r2, [r4, #20]
 800783c:	3301      	adds	r3, #1
 800783e:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8007842:	6363      	str	r3, [r4, #52]	; 0x34
 8007844:	2310      	movs	r3, #16
 8007846:	4808      	ldr	r0, [pc, #32]	; (8007868 <tcp_handle+0x2b8>)
 8007848:	a901      	add	r1, sp, #4
 800784a:	f88d 300c 	strb.w	r3, [sp, #12]
 800784e:	f007 fc2d 	bl	800f0ac <_tcp_send_package>
 8007852:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8007856:	2b05      	cmp	r3, #5
 8007858:	d053      	beq.n	8007902 <tcp_handle+0x352>
 800785a:	d84d      	bhi.n	80078f8 <tcp_handle+0x348>
 800785c:	3b03      	subs	r3, #3
 800785e:	2b01      	cmp	r3, #1
 8007860:	f63f af0e 	bhi.w	8007680 <tcp_handle+0xd0>
 8007864:	2307      	movs	r3, #7
 8007866:	e73a      	b.n	80076de <tcp_handle+0x12e>
 8007868:	20004474 	andcs	r4, r0, r4, ror r4
 800786c:	2000447c 	andcs	r4, r0, ip, ror r4
 8007870:	20003904 	andcs	r3, r0, r4, lsl #18
 8007874:	6923      	ldr	r3, [r4, #16]
 8007876:	1b99      	subs	r1, r3, r6
 8007878:	d513      	bpl.n	80078a2 <tcp_handle+0x2f2>
 800787a:	6962      	ldr	r2, [r4, #20]
 800787c:	1ab2      	subs	r2, r6, r2
 800787e:	2a00      	cmp	r2, #0
 8007880:	dc0f      	bgt.n	80078a2 <tcp_handle+0x2f2>
 8007882:	6126      	str	r6, [r4, #16]
 8007884:	6a23      	ldr	r3, [r4, #32]
 8007886:	1bda      	subs	r2, r3, r7
 8007888:	2a00      	cmp	r2, #0
 800788a:	db05      	blt.n	8007898 <tcp_handle+0x2e8>
 800788c:	42bb      	cmp	r3, r7
 800788e:	d193      	bne.n	80077b8 <tcp_handle+0x208>
 8007890:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007892:	1b9b      	subs	r3, r3, r6
 8007894:	2b00      	cmp	r3, #0
 8007896:	dc8f      	bgt.n	80077b8 <tcp_handle+0x208>
 8007898:	e9c4 7608 	strd	r7, r6, [r4, #32]
 800789c:	f8c4 a018 	str.w	sl, [r4, #24]
 80078a0:	e78a      	b.n	80077b8 <tcp_handle+0x208>
 80078a2:	1af3      	subs	r3, r6, r3
 80078a4:	2b00      	cmp	r3, #0
 80078a6:	dc06      	bgt.n	80078b6 <tcp_handle+0x306>
 80078a8:	2900      	cmp	r1, #0
 80078aa:	dc85      	bgt.n	80077b8 <tcp_handle+0x208>
 80078ac:	6963      	ldr	r3, [r4, #20]
 80078ae:	1af3      	subs	r3, r6, r3
 80078b0:	2b00      	cmp	r3, #0
 80078b2:	dc81      	bgt.n	80077b8 <tcp_handle+0x208>
 80078b4:	e7e6      	b.n	8007884 <tcp_handle+0x2d4>
 80078b6:	6963      	ldr	r3, [r4, #20]
 80078b8:	1b9a      	subs	r2, r3, r6
 80078ba:	2a00      	cmp	r2, #0
 80078bc:	f6bf af7c 	bge.w	80077b8 <tcp_handle+0x208>
 80078c0:	e745      	b.n	800774e <tcp_handle+0x19e>
 80078c2:	6963      	ldr	r3, [r4, #20]
 80078c4:	42b3      	cmp	r3, r6
 80078c6:	f47f af77 	bne.w	80077b8 <tcp_handle+0x208>
 80078ca:	8821      	ldrh	r1, [r4, #0]
 80078cc:	480f      	ldr	r0, [pc, #60]	; (800790c <tcp_handle+0x35c>)
 80078ce:	f007 fba3 	bl	800f018 <_init_tcb>
 80078d2:	e771      	b.n	80077b8 <tcp_handle+0x208>
 80078d4:	6963      	ldr	r3, [r4, #20]
 80078d6:	42b3      	cmp	r3, r6
 80078d8:	f47f af6e 	bne.w	80077b8 <tcp_handle+0x208>
 80078dc:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80078de:	480b      	ldr	r0, [pc, #44]	; (800790c <tcp_handle+0x35c>)
 80078e0:	9302      	str	r3, [sp, #8]
 80078e2:	2310      	movs	r3, #16
 80078e4:	a901      	add	r1, sp, #4
 80078e6:	9601      	str	r6, [sp, #4]
 80078e8:	f88d 300c 	strb.w	r3, [sp, #12]
 80078ec:	f007 fbde 	bl	800f0ac <_tcp_send_package>
 80078f0:	e762      	b.n	80077b8 <tcp_handle+0x208>
 80078f2:	6962      	ldr	r2, [r4, #20]
 80078f4:	9201      	str	r2, [sp, #4]
 80078f6:	e72c      	b.n	8007752 <tcp_handle+0x1a2>
 80078f8:	2b06      	cmp	r3, #6
 80078fa:	f47f aec1 	bne.w	8007680 <tcp_handle+0xd0>
 80078fe:	230a      	movs	r3, #10
 8007900:	e6ed      	b.n	80076de <tcp_handle+0x12e>
 8007902:	6963      	ldr	r3, [r4, #20]
 8007904:	42b3      	cmp	r3, r6
 8007906:	d0fa      	beq.n	80078fe <tcp_handle+0x34e>
 8007908:	2308      	movs	r3, #8
 800790a:	e6e8      	b.n	80076de <tcp_handle+0x12e>
 800790c:	20004474 	andcs	r4, r0, r4, ror r4

08007910 <udp_handle>:
 8007910:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8007914:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 8007916:	4607      	mov	r7, r0
 8007918:	ba5b      	rev16	r3, r3
 800791a:	b29b      	uxth	r3, r3
 800791c:	f1a3 0244 	sub.w	r2, r3, #68	; 0x44
 8007920:	2a01      	cmp	r2, #1
 8007922:	d904      	bls.n	800792e <udp_handle+0x1e>
 8007924:	2b7b      	cmp	r3, #123	; 0x7b
 8007926:	d002      	beq.n	800792e <udp_handle+0x1e>
 8007928:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800792c:	d308      	bcc.n	8007940 <udp_handle+0x30>
 800792e:	2400      	movs	r4, #0
 8007930:	4a1f      	ldr	r2, [pc, #124]	; (80079b0 <udp_handle+0xa0>)
 8007932:	f852 1b04 	ldr.w	r1, [r2], #4
 8007936:	4299      	cmp	r1, r3
 8007938:	d005      	beq.n	8007946 <udp_handle+0x36>
 800793a:	3401      	adds	r4, #1
 800793c:	2c08      	cmp	r4, #8
 800793e:	d1f8      	bne.n	8007932 <udp_handle+0x22>
 8007940:	b002      	add	sp, #8
 8007942:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007946:	f640 3394 	movw	r3, #2964	; 0xb94
 800794a:	8cfe      	ldrh	r6, [r7, #38]	; 0x26
 800794c:	435c      	muls	r4, r3
 800794e:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 8007952:	ba76      	rev16	r6, r6
 8007954:	3e08      	subs	r6, #8
 8007956:	b2b6      	uxth	r6, r6
 8007958:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 800795c:	bf28      	it	cs
 800795e:	f44f 66b8 	movcs.w	r6, #1472	; 0x5c0
 8007962:	f8df 8050 	ldr.w	r8, [pc, #80]	; 80079b4 <udp_handle+0xa4>
 8007966:	1d20      	adds	r0, r4, #4
 8007968:	f838 5004 	ldrh.w	r5, [r8, r4]
 800796c:	4632      	mov	r2, r6
 800796e:	435d      	muls	r5, r3
 8007970:	4428      	add	r0, r5
 8007972:	f107 012a 	add.w	r1, r7, #42	; 0x2a
 8007976:	4440      	add	r0, r8
 8007978:	f007 fcec 	bl	800f354 <memcpy.isra.0>
 800797c:	2204      	movs	r2, #4
 800797e:	f107 011a 	add.w	r1, r7, #26
 8007982:	eb0d 0002 	add.w	r0, sp, r2
 8007986:	f007 fce5 	bl	800f354 <memcpy.isra.0>
 800798a:	9a01      	ldr	r2, [sp, #4]
 800798c:	192b      	adds	r3, r5, r4
 800798e:	4443      	add	r3, r8
 8007990:	f8c3 25c4 	str.w	r2, [r3, #1476]	; 0x5c4
 8007994:	8c7a      	ldrh	r2, [r7, #34]	; 0x22
 8007996:	f8a3 65ca 	strh.w	r6, [r3, #1482]	; 0x5ca
 800799a:	ba52      	rev16	r2, r2
 800799c:	f8a3 25c8 	strh.w	r2, [r3, #1480]	; 0x5c8
 80079a0:	f838 3004 	ldrh.w	r3, [r8, r4]
 80079a4:	3301      	adds	r3, #1
 80079a6:	f003 0301 	and.w	r3, r3, #1
 80079aa:	f828 3004 	strh.w	r3, [r8, r4]
 80079ae:	e7c7      	b.n	8007940 <udp_handle+0x30>
 80079b0:	20004ab4 			; <UNDEFINED> instruction: 0x20004ab4
 80079b4:	20004ad4 	ldrdcs	r4, [r0], -r4	; <UNPREDICTABLE>

080079b8 <arp_handle>:
 80079b8:	8a83      	ldrh	r3, [r0, #20]
 80079ba:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80079be:	d003      	beq.n	80079c8 <arp_handle+0x10>
 80079c0:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80079c4:	d002      	beq.n	80079cc <arp_handle+0x14>
 80079c6:	4770      	bx	lr
 80079c8:	f008 bf7a 	b.w	80108c0 <arp_handle_request>
 80079cc:	f008 bfa0 	b.w	8010910 <arp_handle_reply>

080079d0 <igmp_handle>:
 80079d0:	7b83      	ldrb	r3, [r0, #14]
 80079d2:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80079d6:	2b45      	cmp	r3, #69	; 0x45
 80079d8:	d116      	bne.n	8007a08 <igmp_handle+0x38>
 80079da:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 80079de:	2b11      	cmp	r3, #17
 80079e0:	d112      	bne.n	8007a08 <igmp_handle+0x38>
 80079e2:	4b20      	ldr	r3, [pc, #128]	; (8007a64 <igmp_handle+0x94>)
 80079e4:	f100 051d 	add.w	r5, r0, #29
 80079e8:	9300      	str	r3, [sp, #0]
 80079ea:	466a      	mov	r2, sp
 80079ec:	462b      	mov	r3, r5
 80079ee:	f100 0621 	add.w	r6, r0, #33	; 0x21
 80079f2:	42b3      	cmp	r3, r6
 80079f4:	d10b      	bne.n	8007a0e <igmp_handle+0x3e>
 80079f6:	2401      	movs	r4, #1
 80079f8:	2100      	movs	r1, #0
 80079fa:	f04f 0c01 	mov.w	ip, #1
 80079fe:	4b1a      	ldr	r3, [pc, #104]	; (8007a68 <igmp_handle+0x98>)
 8007a00:	4a1a      	ldr	r2, [pc, #104]	; (8007a6c <igmp_handle+0x9c>)
 8007a02:	681f      	ldr	r7, [r3, #0]
 8007a04:	428f      	cmp	r7, r1
 8007a06:	d10a      	bne.n	8007a1e <igmp_handle+0x4e>
 8007a08:	b003      	add	sp, #12
 8007a0a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8007a0e:	f812 1b01 	ldrb.w	r1, [r2], #1
 8007a12:	f813 4f01 	ldrb.w	r4, [r3, #1]!
 8007a16:	428c      	cmp	r4, r1
 8007a18:	d0eb      	beq.n	80079f2 <igmp_handle+0x22>
 8007a1a:	2400      	movs	r4, #0
 8007a1c:	e7ec      	b.n	80079f8 <igmp_handle+0x28>
 8007a1e:	6813      	ldr	r3, [r2, #0]
 8007a20:	9301      	str	r3, [sp, #4]
 8007a22:	b924      	cbnz	r4, 8007a2e <igmp_handle+0x5e>
 8007a24:	462b      	mov	r3, r5
 8007a26:	f10d 0e04 	add.w	lr, sp, #4
 8007a2a:	42b3      	cmp	r3, r6
 8007a2c:	d10e      	bne.n	8007a4c <igmp_handle+0x7c>
 8007a2e:	f892 e005 	ldrb.w	lr, [r2, #5]
 8007a32:	f890 3023 	ldrb.w	r3, [r0, #35]	; 0x23
 8007a36:	f1be 0f01 	cmp.w	lr, #1
 8007a3a:	d110      	bne.n	8007a5e <igmp_handle+0x8e>
 8007a3c:	f892 e004 	ldrb.w	lr, [r2, #4]
 8007a40:	459e      	cmp	lr, r3
 8007a42:	d909      	bls.n	8007a58 <igmp_handle+0x88>
 8007a44:	085b      	lsrs	r3, r3, #1
 8007a46:	3301      	adds	r3, #1
 8007a48:	7113      	strb	r3, [r2, #4]
 8007a4a:	e005      	b.n	8007a58 <igmp_handle+0x88>
 8007a4c:	f81e 8b01 	ldrb.w	r8, [lr], #1
 8007a50:	f813 9f01 	ldrb.w	r9, [r3, #1]!
 8007a54:	45c1      	cmp	r9, r8
 8007a56:	d0e8      	beq.n	8007a2a <igmp_handle+0x5a>
 8007a58:	3101      	adds	r1, #1
 8007a5a:	3208      	adds	r2, #8
 8007a5c:	e7d2      	b.n	8007a04 <igmp_handle+0x34>
 8007a5e:	f882 c005 	strb.w	ip, [r2, #5]
 8007a62:	e7ef      	b.n	8007a44 <igmp_handle+0x74>
 8007a64:	010000e0 	smlatteq	r0, r0, r0, r0
 8007a68:	2000b704 	andcs	fp, r0, r4, lsl #14
 8007a6c:	2000b5e0 	andcs	fp, r0, r0, ror #11

08007a70 <ip_handle>:
 8007a70:	7b82      	ldrb	r2, [r0, #14]
 8007a72:	7dc3      	ldrb	r3, [r0, #23]
 8007a74:	2a45      	cmp	r2, #69	; 0x45
 8007a76:	d003      	beq.n	8007a80 <ip_handle+0x10>
 8007a78:	2b02      	cmp	r3, #2
 8007a7a:	d111      	bne.n	8007aa0 <ip_handle+0x30>
 8007a7c:	f7ff bfa8 	b.w	80079d0 <igmp_handle>
 8007a80:	2b06      	cmp	r3, #6
 8007a82:	d00b      	beq.n	8007a9c <ip_handle+0x2c>
 8007a84:	d804      	bhi.n	8007a90 <ip_handle+0x20>
 8007a86:	2b01      	cmp	r3, #1
 8007a88:	d006      	beq.n	8007a98 <ip_handle+0x28>
 8007a8a:	2b02      	cmp	r3, #2
 8007a8c:	d0f6      	beq.n	8007a7c <ip_handle+0xc>
 8007a8e:	4770      	bx	lr
 8007a90:	2b11      	cmp	r3, #17
 8007a92:	d105      	bne.n	8007aa0 <ip_handle+0x30>
 8007a94:	f7ff bf3c 	b.w	8007910 <udp_handle>
 8007a98:	f000 b804 	b.w	8007aa4 <icmp_handle>
 8007a9c:	f7ff bd88 	b.w	80075b0 <tcp_handle>
 8007aa0:	4770      	bx	lr
	...

08007aa4 <icmp_handle>:
 8007aa4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007aa6:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 8007aaa:	4604      	mov	r4, r0
 8007aac:	2b08      	cmp	r3, #8
 8007aae:	d13e      	bne.n	8007b2e <icmp_handle+0x8a>
 8007ab0:	f890 5023 	ldrb.w	r5, [r0, #35]	; 0x23
 8007ab4:	2d00      	cmp	r5, #0
 8007ab6:	d13a      	bne.n	8007b2e <icmp_handle+0x8a>
 8007ab8:	1d86      	adds	r6, r0, #6
 8007aba:	4631      	mov	r1, r6
 8007abc:	2206      	movs	r2, #6
 8007abe:	f009 faab 	bl	8011018 <memcpy.isra.0>
 8007ac2:	4630      	mov	r0, r6
 8007ac4:	2206      	movs	r2, #6
 8007ac6:	491b      	ldr	r1, [pc, #108]	; (8007b34 <icmp_handle+0x90>)
 8007ac8:	f009 faa6 	bl	8011018 <memcpy.isra.0>
 8007acc:	8a63      	ldrh	r3, [r4, #18]
 8007ace:	f104 061a 	add.w	r6, r4, #26
 8007ad2:	43db      	mvns	r3, r3
 8007ad4:	4631      	mov	r1, r6
 8007ad6:	2204      	movs	r2, #4
 8007ad8:	8263      	strh	r3, [r4, #18]
 8007ada:	f104 001e 	add.w	r0, r4, #30
 8007ade:	f009 fa9b 	bl	8011018 <memcpy.isra.0>
 8007ae2:	2204      	movs	r2, #4
 8007ae4:	4b14      	ldr	r3, [pc, #80]	; (8007b38 <icmp_handle+0x94>)
 8007ae6:	eb0d 0102 	add.w	r1, sp, r2
 8007aea:	681b      	ldr	r3, [r3, #0]
 8007aec:	4630      	mov	r0, r6
 8007aee:	f104 060e 	add.w	r6, r4, #14
 8007af2:	9301      	str	r3, [sp, #4]
 8007af4:	f009 fa90 	bl	8011018 <memcpy.isra.0>
 8007af8:	2114      	movs	r1, #20
 8007afa:	4630      	mov	r0, r6
 8007afc:	7625      	strb	r5, [r4, #24]
 8007afe:	7665      	strb	r5, [r4, #25]
 8007b00:	f009 fa71 	bl	8010fe6 <net_chksum>
 8007b04:	8a21      	ldrh	r1, [r4, #16]
 8007b06:	8320      	strh	r0, [r4, #24]
 8007b08:	ba49      	rev16	r1, r1
 8007b0a:	b289      	uxth	r1, r1
 8007b0c:	4630      	mov	r0, r6
 8007b0e:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8007b12:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8007b16:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 8007b1a:	f009 fa64 	bl	8010fe6 <net_chksum>
 8007b1e:	8a21      	ldrh	r1, [r4, #16]
 8007b20:	84a0      	strh	r0, [r4, #36]	; 0x24
 8007b22:	ba49      	rev16	r1, r1
 8007b24:	b289      	uxth	r1, r1
 8007b26:	4620      	mov	r0, r4
 8007b28:	310e      	adds	r1, #14
 8007b2a:	f00b fd39 	bl	80135a0 <emac_eth_send>
 8007b2e:	b002      	add	sp, #8
 8007b30:	bd70      	pop	{r4, r5, r6, pc}
 8007b32:	bf00      	nop
 8007b34:	200038e0 	andcs	r3, r0, r0, ror #17
 8007b38:	200038d4 	ldrdcs	r3, [r0], -r4

08007b3c <__aeabi_fmul>:
 8007b3c:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8007b40:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8007b44:	bf1e      	ittt	ne
 8007b46:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8007b4a:	ea92 0f0c 	teqne	r2, ip
 8007b4e:	ea93 0f0c 	teqne	r3, ip
 8007b52:	d06f      	beq.n	8007c34 <__aeabi_fmul+0xf8>
 8007b54:	441a      	add	r2, r3
 8007b56:	ea80 0c01 	eor.w	ip, r0, r1
 8007b5a:	0240      	lsls	r0, r0, #9
 8007b5c:	bf18      	it	ne
 8007b5e:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 8007b62:	d01e      	beq.n	8007ba2 <__aeabi_fmul+0x66>
 8007b64:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8007b68:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 8007b6c:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 8007b70:	fba0 3101 	umull	r3, r1, r0, r1
 8007b74:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8007b78:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 8007b7c:	bf3e      	ittt	cc
 8007b7e:	0049      	lslcc	r1, r1, #1
 8007b80:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 8007b84:	005b      	lslcc	r3, r3, #1
 8007b86:	ea40 0001 	orr.w	r0, r0, r1
 8007b8a:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
 8007b8e:	2afd      	cmp	r2, #253	; 0xfd
 8007b90:	d81d      	bhi.n	8007bce <__aeabi_fmul+0x92>
 8007b92:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8007b96:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8007b9a:	bf08      	it	eq
 8007b9c:	f020 0001 	biceq.w	r0, r0, #1
 8007ba0:	4770      	bx	lr
 8007ba2:	f090 0f00 	teq	r0, #0
 8007ba6:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8007baa:	bf08      	it	eq
 8007bac:	0249      	lsleq	r1, r1, #9
 8007bae:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8007bb2:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 8007bb6:	3a7f      	subs	r2, #127	; 0x7f
 8007bb8:	bfc2      	ittt	gt
 8007bba:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8007bbe:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8007bc2:	4770      	bxgt	lr
 8007bc4:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007bc8:	f04f 0300 	mov.w	r3, #0
 8007bcc:	3a01      	subs	r2, #1
 8007bce:	dc5d      	bgt.n	8007c8c <__aeabi_fmul+0x150>
 8007bd0:	f112 0f19 	cmn.w	r2, #25
 8007bd4:	bfdc      	itt	le
 8007bd6:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
 8007bda:	4770      	bxle	lr
 8007bdc:	f1c2 0200 	rsb	r2, r2, #0
 8007be0:	0041      	lsls	r1, r0, #1
 8007be2:	fa21 f102 	lsr.w	r1, r1, r2
 8007be6:	f1c2 0220 	rsb	r2, r2, #32
 8007bea:	fa00 fc02 	lsl.w	ip, r0, r2
 8007bee:	ea5f 0031 	movs.w	r0, r1, rrx
 8007bf2:	f140 0000 	adc.w	r0, r0, #0
 8007bf6:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 8007bfa:	bf08      	it	eq
 8007bfc:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8007c00:	4770      	bx	lr
 8007c02:	f092 0f00 	teq	r2, #0
 8007c06:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8007c0a:	bf02      	ittt	eq
 8007c0c:	0040      	lsleq	r0, r0, #1
 8007c0e:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8007c12:	3a01      	subeq	r2, #1
 8007c14:	d0f9      	beq.n	8007c0a <__aeabi_fmul+0xce>
 8007c16:	ea40 000c 	orr.w	r0, r0, ip
 8007c1a:	f093 0f00 	teq	r3, #0
 8007c1e:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8007c22:	bf02      	ittt	eq
 8007c24:	0049      	lsleq	r1, r1, #1
 8007c26:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8007c2a:	3b01      	subeq	r3, #1
 8007c2c:	d0f9      	beq.n	8007c22 <__aeabi_fmul+0xe6>
 8007c2e:	ea41 010c 	orr.w	r1, r1, ip
 8007c32:	e78f      	b.n	8007b54 <__aeabi_fmul+0x18>
 8007c34:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8007c38:	ea92 0f0c 	teq	r2, ip
 8007c3c:	bf18      	it	ne
 8007c3e:	ea93 0f0c 	teqne	r3, ip
 8007c42:	d00a      	beq.n	8007c5a <__aeabi_fmul+0x11e>
 8007c44:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8007c48:	bf18      	it	ne
 8007c4a:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8007c4e:	d1d8      	bne.n	8007c02 <__aeabi_fmul+0xc6>
 8007c50:	ea80 0001 	eor.w	r0, r0, r1
 8007c54:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8007c58:	4770      	bx	lr
 8007c5a:	f090 0f00 	teq	r0, #0
 8007c5e:	bf17      	itett	ne
 8007c60:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
 8007c64:	4608      	moveq	r0, r1
 8007c66:	f091 0f00 	teqne	r1, #0
 8007c6a:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
 8007c6e:	d014      	beq.n	8007c9a <__aeabi_fmul+0x15e>
 8007c70:	ea92 0f0c 	teq	r2, ip
 8007c74:	d101      	bne.n	8007c7a <__aeabi_fmul+0x13e>
 8007c76:	0242      	lsls	r2, r0, #9
 8007c78:	d10f      	bne.n	8007c9a <__aeabi_fmul+0x15e>
 8007c7a:	ea93 0f0c 	teq	r3, ip
 8007c7e:	d103      	bne.n	8007c88 <__aeabi_fmul+0x14c>
 8007c80:	024b      	lsls	r3, r1, #9
 8007c82:	bf18      	it	ne
 8007c84:	4608      	movne	r0, r1
 8007c86:	d108      	bne.n	8007c9a <__aeabi_fmul+0x15e>
 8007c88:	ea80 0001 	eor.w	r0, r0, r1
 8007c8c:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8007c90:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8007c94:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007c98:	4770      	bx	lr
 8007c9a:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8007c9e:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
 8007ca2:	4770      	bx	lr

08007ca4 <__aeabi_d2f>:
 8007ca4:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8007ca8:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8007cac:	bf24      	itt	cs
 8007cae:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8007cb2:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8007cb6:	d90d      	bls.n	8007cd4 <__aeabi_d2f+0x30>
 8007cb8:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8007cbc:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8007cc0:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8007cc4:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8007cc8:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8007ccc:	bf08      	it	eq
 8007cce:	f020 0001 	biceq.w	r0, r0, #1
 8007cd2:	4770      	bx	lr
 8007cd4:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8007cd8:	d121      	bne.n	8007d1e <__aeabi_d2f+0x7a>
 8007cda:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8007cde:	bfbc      	itt	lt
 8007ce0:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8007ce4:	4770      	bxlt	lr
 8007ce6:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8007cea:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8007cee:	f1c2 0218 	rsb	r2, r2, #24
 8007cf2:	f1c2 0c20 	rsb	ip, r2, #32
 8007cf6:	fa10 f30c 	lsls.w	r3, r0, ip
 8007cfa:	fa20 f002 	lsr.w	r0, r0, r2
 8007cfe:	bf18      	it	ne
 8007d00:	f040 0001 	orrne.w	r0, r0, #1
 8007d04:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8007d08:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8007d0c:	fa03 fc0c 	lsl.w	ip, r3, ip
 8007d10:	ea40 000c 	orr.w	r0, r0, ip
 8007d14:	fa23 f302 	lsr.w	r3, r3, r2
 8007d18:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8007d1c:	e7cc      	b.n	8007cb8 <__aeabi_d2f+0x14>
 8007d1e:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8007d22:	d107      	bne.n	8007d34 <__aeabi_d2f+0x90>
 8007d24:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8007d28:	bf1e      	ittt	ne
 8007d2a:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8007d2e:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8007d32:	4770      	bxne	lr
 8007d34:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8007d38:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8007d3c:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007d40:	4770      	bx	lr
 8007d42:	bf00      	nop

08007d44 <__aeabi_frsub>:
 8007d44:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
 8007d48:	e002      	b.n	8007d50 <__addsf3>
 8007d4a:	bf00      	nop

08007d4c <__aeabi_fsub>:
 8007d4c:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

08007d50 <__addsf3>:
 8007d50:	0042      	lsls	r2, r0, #1
 8007d52:	bf1f      	itttt	ne
 8007d54:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8007d58:	ea92 0f03 	teqne	r2, r3
 8007d5c:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8007d60:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8007d64:	d06a      	beq.n	8007e3c <__addsf3+0xec>
 8007d66:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8007d6a:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8007d6e:	bfc1      	itttt	gt
 8007d70:	18d2      	addgt	r2, r2, r3
 8007d72:	4041      	eorgt	r1, r0
 8007d74:	4048      	eorgt	r0, r1
 8007d76:	4041      	eorgt	r1, r0
 8007d78:	bfb8      	it	lt
 8007d7a:	425b      	neglt	r3, r3
 8007d7c:	2b19      	cmp	r3, #25
 8007d7e:	bf88      	it	hi
 8007d80:	4770      	bxhi	lr
 8007d82:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8007d86:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007d8a:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 8007d8e:	bf18      	it	ne
 8007d90:	4240      	negne	r0, r0
 8007d92:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8007d96:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8007d9a:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 8007d9e:	bf18      	it	ne
 8007da0:	4249      	negne	r1, r1
 8007da2:	ea92 0f03 	teq	r2, r3
 8007da6:	d03f      	beq.n	8007e28 <__addsf3+0xd8>
 8007da8:	f1a2 0201 	sub.w	r2, r2, #1
 8007dac:	fa41 fc03 	asr.w	ip, r1, r3
 8007db0:	eb10 000c 	adds.w	r0, r0, ip
 8007db4:	f1c3 0320 	rsb	r3, r3, #32
 8007db8:	fa01 f103 	lsl.w	r1, r1, r3
 8007dbc:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8007dc0:	d502      	bpl.n	8007dc8 <__addsf3+0x78>
 8007dc2:	4249      	negs	r1, r1
 8007dc4:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8007dc8:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
 8007dcc:	d313      	bcc.n	8007df6 <__addsf3+0xa6>
 8007dce:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 8007dd2:	d306      	bcc.n	8007de2 <__addsf3+0x92>
 8007dd4:	0840      	lsrs	r0, r0, #1
 8007dd6:	ea4f 0131 	mov.w	r1, r1, rrx
 8007dda:	f102 0201 	add.w	r2, r2, #1
 8007dde:	2afe      	cmp	r2, #254	; 0xfe
 8007de0:	d251      	bcs.n	8007e86 <__addsf3+0x136>
 8007de2:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
 8007de6:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8007dea:	bf08      	it	eq
 8007dec:	f020 0001 	biceq.w	r0, r0, #1
 8007df0:	ea40 0003 	orr.w	r0, r0, r3
 8007df4:	4770      	bx	lr
 8007df6:	0049      	lsls	r1, r1, #1
 8007df8:	eb40 0000 	adc.w	r0, r0, r0
 8007dfc:	3a01      	subs	r2, #1
 8007dfe:	bf28      	it	cs
 8007e00:	f5b0 0f00 	cmpcs.w	r0, #8388608	; 0x800000
 8007e04:	d2ed      	bcs.n	8007de2 <__addsf3+0x92>
 8007e06:	fab0 fc80 	clz	ip, r0
 8007e0a:	f1ac 0c08 	sub.w	ip, ip, #8
 8007e0e:	ebb2 020c 	subs.w	r2, r2, ip
 8007e12:	fa00 f00c 	lsl.w	r0, r0, ip
 8007e16:	bfaa      	itet	ge
 8007e18:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8007e1c:	4252      	neglt	r2, r2
 8007e1e:	4318      	orrge	r0, r3
 8007e20:	bfbc      	itt	lt
 8007e22:	40d0      	lsrlt	r0, r2
 8007e24:	4318      	orrlt	r0, r3
 8007e26:	4770      	bx	lr
 8007e28:	f092 0f00 	teq	r2, #0
 8007e2c:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
 8007e30:	bf06      	itte	eq
 8007e32:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
 8007e36:	3201      	addeq	r2, #1
 8007e38:	3b01      	subne	r3, #1
 8007e3a:	e7b5      	b.n	8007da8 <__addsf3+0x58>
 8007e3c:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8007e40:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8007e44:	bf18      	it	ne
 8007e46:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8007e4a:	d021      	beq.n	8007e90 <__addsf3+0x140>
 8007e4c:	ea92 0f03 	teq	r2, r3
 8007e50:	d004      	beq.n	8007e5c <__addsf3+0x10c>
 8007e52:	f092 0f00 	teq	r2, #0
 8007e56:	bf08      	it	eq
 8007e58:	4608      	moveq	r0, r1
 8007e5a:	4770      	bx	lr
 8007e5c:	ea90 0f01 	teq	r0, r1
 8007e60:	bf1c      	itt	ne
 8007e62:	2000      	movne	r0, #0
 8007e64:	4770      	bxne	lr
 8007e66:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
 8007e6a:	d104      	bne.n	8007e76 <__addsf3+0x126>
 8007e6c:	0040      	lsls	r0, r0, #1
 8007e6e:	bf28      	it	cs
 8007e70:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
 8007e74:	4770      	bx	lr
 8007e76:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
 8007e7a:	bf3c      	itt	cc
 8007e7c:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
 8007e80:	4770      	bxcc	lr
 8007e82:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8007e86:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
 8007e8a:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007e8e:	4770      	bx	lr
 8007e90:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8007e94:	bf16      	itet	ne
 8007e96:	4608      	movne	r0, r1
 8007e98:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8007e9c:	4601      	movne	r1, r0
 8007e9e:	0242      	lsls	r2, r0, #9
 8007ea0:	bf06      	itte	eq
 8007ea2:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8007ea6:	ea90 0f01 	teqeq	r0, r1
 8007eaa:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
 8007eae:	4770      	bx	lr

08007eb0 <__aeabi_ui2f>:
 8007eb0:	f04f 0300 	mov.w	r3, #0
 8007eb4:	e004      	b.n	8007ec0 <__aeabi_i2f+0x8>
 8007eb6:	bf00      	nop

08007eb8 <__aeabi_i2f>:
 8007eb8:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
 8007ebc:	bf48      	it	mi
 8007ebe:	4240      	negmi	r0, r0
 8007ec0:	ea5f 0c00 	movs.w	ip, r0
 8007ec4:	bf08      	it	eq
 8007ec6:	4770      	bxeq	lr
 8007ec8:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
 8007ecc:	4601      	mov	r1, r0
 8007ece:	f04f 0000 	mov.w	r0, #0
 8007ed2:	e01c      	b.n	8007f0e <__aeabi_l2f+0x2a>

08007ed4 <__aeabi_ul2f>:
 8007ed4:	ea50 0201 	orrs.w	r2, r0, r1
 8007ed8:	bf08      	it	eq
 8007eda:	4770      	bxeq	lr
 8007edc:	f04f 0300 	mov.w	r3, #0
 8007ee0:	e00a      	b.n	8007ef8 <__aeabi_l2f+0x14>
 8007ee2:	bf00      	nop

08007ee4 <__aeabi_l2f>:
 8007ee4:	ea50 0201 	orrs.w	r2, r0, r1
 8007ee8:	bf08      	it	eq
 8007eea:	4770      	bxeq	lr
 8007eec:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
 8007ef0:	d502      	bpl.n	8007ef8 <__aeabi_l2f+0x14>
 8007ef2:	4240      	negs	r0, r0
 8007ef4:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8007ef8:	ea5f 0c01 	movs.w	ip, r1
 8007efc:	bf02      	ittt	eq
 8007efe:	4684      	moveq	ip, r0
 8007f00:	4601      	moveq	r1, r0
 8007f02:	2000      	moveq	r0, #0
 8007f04:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
 8007f08:	bf08      	it	eq
 8007f0a:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
 8007f0e:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
 8007f12:	fabc f28c 	clz	r2, ip
 8007f16:	3a08      	subs	r2, #8
 8007f18:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8007f1c:	db10      	blt.n	8007f40 <__aeabi_l2f+0x5c>
 8007f1e:	fa01 fc02 	lsl.w	ip, r1, r2
 8007f22:	4463      	add	r3, ip
 8007f24:	fa00 fc02 	lsl.w	ip, r0, r2
 8007f28:	f1c2 0220 	rsb	r2, r2, #32
 8007f2c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8007f30:	fa20 f202 	lsr.w	r2, r0, r2
 8007f34:	eb43 0002 	adc.w	r0, r3, r2
 8007f38:	bf08      	it	eq
 8007f3a:	f020 0001 	biceq.w	r0, r0, #1
 8007f3e:	4770      	bx	lr
 8007f40:	f102 0220 	add.w	r2, r2, #32
 8007f44:	fa01 fc02 	lsl.w	ip, r1, r2
 8007f48:	f1c2 0220 	rsb	r2, r2, #32
 8007f4c:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8007f50:	fa21 f202 	lsr.w	r2, r1, r2
 8007f54:	eb43 0002 	adc.w	r0, r3, r2
 8007f58:	bf08      	it	eq
 8007f5a:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8007f5e:	4770      	bx	lr

08007f60 <__gesf2>:
 8007f60:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
 8007f64:	e006      	b.n	8007f74 <__cmpsf2+0x4>
 8007f66:	bf00      	nop

08007f68 <__lesf2>:
 8007f68:	f04f 0c01 	mov.w	ip, #1
 8007f6c:	e002      	b.n	8007f74 <__cmpsf2+0x4>
 8007f6e:	bf00      	nop

08007f70 <__cmpsf2>:
 8007f70:	f04f 0c01 	mov.w	ip, #1
 8007f74:	f84d cd04 	str.w	ip, [sp, #-4]!
 8007f78:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8007f7c:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8007f80:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8007f84:	bf18      	it	ne
 8007f86:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8007f8a:	d011      	beq.n	8007fb0 <__cmpsf2+0x40>
 8007f8c:	b001      	add	sp, #4
 8007f8e:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
 8007f92:	bf18      	it	ne
 8007f94:	ea90 0f01 	teqne	r0, r1
 8007f98:	bf58      	it	pl
 8007f9a:	ebb2 0003 	subspl.w	r0, r2, r3
 8007f9e:	bf88      	it	hi
 8007fa0:	17c8      	asrhi	r0, r1, #31
 8007fa2:	bf38      	it	cc
 8007fa4:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
 8007fa8:	bf18      	it	ne
 8007faa:	f040 0001 	orrne.w	r0, r0, #1
 8007fae:	4770      	bx	lr
 8007fb0:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8007fb4:	d102      	bne.n	8007fbc <__cmpsf2+0x4c>
 8007fb6:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 8007fba:	d105      	bne.n	8007fc8 <__cmpsf2+0x58>
 8007fbc:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 8007fc0:	d1e4      	bne.n	8007f8c <__cmpsf2+0x1c>
 8007fc2:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 8007fc6:	d0e1      	beq.n	8007f8c <__cmpsf2+0x1c>
 8007fc8:	f85d 0b04 	ldr.w	r0, [sp], #4
 8007fcc:	4770      	bx	lr
 8007fce:	bf00      	nop

08007fd0 <__aeabi_cfrcmple>:
 8007fd0:	4684      	mov	ip, r0
 8007fd2:	4608      	mov	r0, r1
 8007fd4:	4661      	mov	r1, ip
 8007fd6:	e7ff      	b.n	8007fd8 <__aeabi_cfcmpeq>

08007fd8 <__aeabi_cfcmpeq>:
 8007fd8:	b50f      	push	{r0, r1, r2, r3, lr}
 8007fda:	f7ff ffc9 	bl	8007f70 <__cmpsf2>
 8007fde:	2800      	cmp	r0, #0
 8007fe0:	bf48      	it	mi
 8007fe2:	f110 0f00 	cmnmi.w	r0, #0
 8007fe6:	bd0f      	pop	{r0, r1, r2, r3, pc}

08007fe8 <__aeabi_fcmpeq>:
 8007fe8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007fec:	f7ff fff4 	bl	8007fd8 <__aeabi_cfcmpeq>
 8007ff0:	bf0c      	ite	eq
 8007ff2:	2001      	moveq	r0, #1
 8007ff4:	2000      	movne	r0, #0
 8007ff6:	f85d fb08 	ldr.w	pc, [sp], #8
 8007ffa:	bf00      	nop

08007ffc <__aeabi_fcmplt>:
 8007ffc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8008000:	f7ff ffea 	bl	8007fd8 <__aeabi_cfcmpeq>
 8008004:	bf34      	ite	cc
 8008006:	2001      	movcc	r0, #1
 8008008:	2000      	movcs	r0, #0
 800800a:	f85d fb08 	ldr.w	pc, [sp], #8
 800800e:	bf00      	nop

08008010 <__aeabi_fcmple>:
 8008010:	f84d ed08 	str.w	lr, [sp, #-8]!
 8008014:	f7ff ffe0 	bl	8007fd8 <__aeabi_cfcmpeq>
 8008018:	bf94      	ite	ls
 800801a:	2001      	movls	r0, #1
 800801c:	2000      	movhi	r0, #0
 800801e:	f85d fb08 	ldr.w	pc, [sp], #8
 8008022:	bf00      	nop

08008024 <__aeabi_fcmpge>:
 8008024:	f84d ed08 	str.w	lr, [sp, #-8]!
 8008028:	f7ff ffd2 	bl	8007fd0 <__aeabi_cfrcmple>
 800802c:	bf94      	ite	ls
 800802e:	2001      	movls	r0, #1
 8008030:	2000      	movhi	r0, #0
 8008032:	f85d fb08 	ldr.w	pc, [sp], #8
 8008036:	bf00      	nop

08008038 <__aeabi_fcmpgt>:
 8008038:	f84d ed08 	str.w	lr, [sp, #-8]!
 800803c:	f7ff ffc8 	bl	8007fd0 <__aeabi_cfrcmple>
 8008040:	bf34      	ite	cc
 8008042:	2001      	movcc	r0, #1
 8008044:	2000      	movcs	r0, #0
 8008046:	f85d fb08 	ldr.w	pc, [sp], #8
 800804a:	bf00      	nop

0800804c <__aeabi_f2iz>:
 800804c:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8008050:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 8008054:	d30f      	bcc.n	8008076 <__aeabi_f2iz+0x2a>
 8008056:	f04f 039e 	mov.w	r3, #158	; 0x9e
 800805a:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 800805e:	d90d      	bls.n	800807c <__aeabi_f2iz+0x30>
 8008060:	ea4f 2300 	mov.w	r3, r0, lsl #8
 8008064:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8008068:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 800806c:	fa23 f002 	lsr.w	r0, r3, r2
 8008070:	bf18      	it	ne
 8008072:	4240      	negne	r0, r0
 8008074:	4770      	bx	lr
 8008076:	f04f 0000 	mov.w	r0, #0
 800807a:	4770      	bx	lr
 800807c:	f112 0f61 	cmn.w	r2, #97	; 0x61
 8008080:	d101      	bne.n	8008086 <__aeabi_f2iz+0x3a>
 8008082:	0242      	lsls	r2, r0, #9
 8008084:	d105      	bne.n	8008092 <__aeabi_f2iz+0x46>
 8008086:	f010 4000 	ands.w	r0, r0, #2147483648	; 0x80000000
 800808a:	bf08      	it	eq
 800808c:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8008090:	4770      	bx	lr
 8008092:	f04f 0000 	mov.w	r0, #0
 8008096:	4770      	bx	lr

08008098 <__aeabi_uldivmod>:
 8008098:	b953      	cbnz	r3, 80080b0 <__aeabi_uldivmod+0x18>
 800809a:	b94a      	cbnz	r2, 80080b0 <__aeabi_uldivmod+0x18>
 800809c:	2900      	cmp	r1, #0
 800809e:	bf08      	it	eq
 80080a0:	2800      	cmpeq	r0, #0
 80080a2:	bf1c      	itt	ne
 80080a4:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 80080a8:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 80080ac:	f000 b80c 	b.w	80080c8 <__aeabi_idiv0>
 80080b0:	f1ad 0c08 	sub.w	ip, sp, #8
 80080b4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80080b8:	f001 f866 	bl	8009188 <__udivmoddi4>
 80080bc:	f8dd e004 	ldr.w	lr, [sp, #4]
 80080c0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80080c4:	b004      	add	sp, #16
 80080c6:	4770      	bx	lr

080080c8 <__aeabi_idiv0>:
 80080c8:	4770      	bx	lr
 80080ca:	bf00      	nop

080080cc <Reset_Handler>:
 80080cc:	2100      	movs	r1, #0
 80080ce:	e003      	b.n	80080d8 <DataInit>

080080d0 <CopyData>:
 80080d0:	4b0a      	ldr	r3, [pc, #40]	; (80080fc <Zerobss+0x10>)
 80080d2:	585b      	ldr	r3, [r3, r1]
 80080d4:	5043      	str	r3, [r0, r1]
 80080d6:	3104      	adds	r1, #4

080080d8 <DataInit>:
 80080d8:	4809      	ldr	r0, [pc, #36]	; (8008100 <Zerobss+0x14>)
 80080da:	4b0a      	ldr	r3, [pc, #40]	; (8008104 <Zerobss+0x18>)
 80080dc:	1842      	adds	r2, r0, r1
 80080de:	429a      	cmp	r2, r3
 80080e0:	d3f6      	bcc.n	80080d0 <CopyData>
 80080e2:	4a09      	ldr	r2, [pc, #36]	; (8008108 <Zerobss+0x1c>)
 80080e4:	e002      	b.n	80080ec <Zerobss>

080080e6 <FillZerobss>:
 80080e6:	2300      	movs	r3, #0
 80080e8:	f842 3b04 	str.w	r3, [r2], #4

080080ec <Zerobss>:
 80080ec:	4b07      	ldr	r3, [pc, #28]	; (800810c <Zerobss+0x20>)
 80080ee:	429a      	cmp	r2, r3
 80080f0:	d3f9      	bcc.n	80080e6 <FillZerobss>
 80080f2:	f00a fc4b 	bl	801298c <SystemInit>
 80080f6:	f000 f985 	bl	8008404 <main>
 80080fa:	4770      	bx	lr
 80080fc:	08016c80 	stmdaeq	r1, {r7, sl, fp, sp, lr}
 8008100:	20000000 	andcs	r0, r0, r0
 8008104:	200000f8 	strdcs	r0, [r0], -r8
 8008108:	200000f8 	strdcs	r0, [r0], -r8
 800810c:	2000f4f8 	strdcs	pc, [r0], -r8

08008110 <ADC0_1_IRQHandler>:
 8008110:	e7fe      	b.n	8008110 <ADC0_1_IRQHandler>

08008112 <memcmp>:
 8008112:	b510      	push	{r4, lr}
 8008114:	3901      	subs	r1, #1
 8008116:	4402      	add	r2, r0
 8008118:	4290      	cmp	r0, r2
 800811a:	d101      	bne.n	8008120 <memcmp+0xe>
 800811c:	2000      	movs	r0, #0
 800811e:	e005      	b.n	800812c <memcmp+0x1a>
 8008120:	7803      	ldrb	r3, [r0, #0]
 8008122:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 8008126:	42a3      	cmp	r3, r4
 8008128:	d001      	beq.n	800812e <memcmp+0x1c>
 800812a:	1b18      	subs	r0, r3, r4
 800812c:	bd10      	pop	{r4, pc}
 800812e:	3001      	adds	r0, #1
 8008130:	e7f2      	b.n	8008118 <memcmp+0x6>

08008132 <memcpy>:
 8008132:	b510      	push	{r4, lr}
 8008134:	1e43      	subs	r3, r0, #1
 8008136:	440a      	add	r2, r1
 8008138:	4291      	cmp	r1, r2
 800813a:	d100      	bne.n	800813e <memcpy+0xc>
 800813c:	bd10      	pop	{r4, pc}
 800813e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8008142:	f803 4f01 	strb.w	r4, [r3, #1]!
 8008146:	e7f7      	b.n	8008138 <memcpy+0x6>

08008148 <DisplayHandler::~DisplayHandler()>:
 8008148:	4770      	bx	lr

0800814a <dmxconfigudp::atoi(char const*, unsigned int)>:
 800814a:	4603      	mov	r3, r0
 800814c:	b530      	push	{r4, r5, lr}
 800814e:	4401      	add	r1, r0
 8008150:	250a      	movs	r5, #10
 8008152:	2000      	movs	r0, #0
 8008154:	f813 2b01 	ldrb.w	r2, [r3], #1
 8008158:	f1a2 0430 	sub.w	r4, r2, #48	; 0x30
 800815c:	2c09      	cmp	r4, #9
 800815e:	d805      	bhi.n	800816c <dmxconfigudp::atoi(char const*, unsigned int)+0x22>
 8008160:	fb05 2000 	mla	r0, r5, r0, r2
 8008164:	4299      	cmp	r1, r3
 8008166:	f1a0 0030 	sub.w	r0, r0, #48	; 0x30
 800816a:	d1f3      	bne.n	8008154 <dmxconfigudp::atoi(char const*, unsigned int)+0xa>
 800816c:	bd30      	pop	{r4, r5, pc}

0800816e <RDMNetDevice::CopyUID(unsigned char*)>:
 800816e:	460b      	mov	r3, r1
 8008170:	2206      	movs	r2, #6
 8008172:	1d01      	adds	r1, r0, #4
 8008174:	4618      	mov	r0, r3
 8008176:	f7ff bfdc 	b.w	8008132 <memcpy>

0800817a <non-virtual thunk to RDMNetDevice::CopyUID(unsigned char*)>:
 800817a:	f1a0 00cc 	sub.w	r0, r0, #204	; 0xcc
 800817e:	e7f6      	b.n	800816e <RDMNetDevice::CopyUID(unsigned char*)>

08008180 <RDMNetDevice::CopyCID(unsigned char*)>:
 8008180:	4608      	mov	r0, r1
 8008182:	2210      	movs	r2, #16
 8008184:	4901      	ldr	r1, [pc, #4]	; (800818c <RDMNetDevice::CopyCID(unsigned char*)+0xc>)
 8008186:	f7ff bfd4 	b.w	8008132 <memcpy>
 800818a:	bf00      	nop
 800818c:	20001ffb 	strdcs	r1, [r0], -fp

08008190 <non-virtual thunk to RDMNetDevice::CopyCID(unsigned char*)>:
 8008190:	f1a0 00cc 	sub.w	r0, r0, #204	; 0xcc
 8008194:	e7f4      	b.n	8008180 <RDMNetDevice::CopyCID(unsigned char*)>
 8008196:	bf00      	nop

08008198 <FactoryDefaults::~FactoryDefaults()>:
 8008198:	4770      	bx	lr

0800819a <DisplayHandler::~DisplayHandler()>:
 800819a:	b510      	push	{r4, lr}
 800819c:	4604      	mov	r4, r0
 800819e:	f00a f9a1 	bl	80124e4 <operator delete(void*)>
 80081a2:	4620      	mov	r0, r4
 80081a4:	bd10      	pop	{r4, pc}

080081a6 <FactoryDefaults::~FactoryDefaults()>:
 80081a6:	b510      	push	{r4, lr}
 80081a8:	4604      	mov	r4, r0
 80081aa:	f00a f99b 	bl	80124e4 <operator delete(void*)>
 80081ae:	4620      	mov	r0, r4
 80081b0:	bd10      	pop	{r4, pc}
	...

080081b4 <RDMNetDevice::LLRPHandleRdmCommand(unsigned char const*)>:
 80081b4:	b510      	push	{r4, lr}
 80081b6:	4c03      	ldr	r4, [pc, #12]	; (80081c4 <RDMNetDevice::LLRPHandleRdmCommand(unsigned char const*)+0x10>)
 80081b8:	30d0      	adds	r0, #208	; 0xd0
 80081ba:	4622      	mov	r2, r4
 80081bc:	f004 fdc2 	bl	800cd44 <RDMHandler::HandleData(unsigned char const*, unsigned char*)>
 80081c0:	4620      	mov	r0, r4
 80081c2:	bd10      	pop	{r4, pc}
 80081c4:	20001efc 	strdcs	r1, [r0], -ip

080081c8 <non-virtual thunk to RDMNetDevice::LLRPHandleRdmCommand(unsigned char const*)>:
 80081c8:	f1a0 00cc 	sub.w	r0, r0, #204	; 0xcc
 80081cc:	e7f2      	b.n	80081b4 <RDMNetDevice::LLRPHandleRdmCommand(unsigned char const*)>
 80081ce:	bf00      	nop

080081d0 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>:
 80081d0:	b110      	cbz	r0, 80081d8 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]+0x8>
 80081d2:	6803      	ldr	r3, [r0, #0]
 80081d4:	6a1b      	ldr	r3, [r3, #32]
 80081d6:	4718      	bx	r3
 80081d8:	4770      	bx	lr

080081da <Display::PutChar(int) [clone .isra.0]>:
 80081da:	b110      	cbz	r0, 80081e2 <Display::PutChar(int) [clone .isra.0]+0x8>
 80081dc:	6803      	ldr	r3, [r0, #0]
 80081de:	695b      	ldr	r3, [r3, #20]
 80081e0:	4718      	bx	r3
 80081e2:	4770      	bx	lr

080081e4 <DisplayHandler::Print(unsigned int)>:
 80081e4:	b538      	push	{r3, r4, r5, lr}
 80081e6:	7903      	ldrb	r3, [r0, #4]
 80081e8:	b1f3      	cbz	r3, 8008228 <DisplayHandler::Print(unsigned int)+0x44>
 80081ea:	2904      	cmp	r1, #4
 80081ec:	bf98      	it	ls
 80081ee:	4b0f      	ldrls	r3, [pc, #60]	; (800822c <DisplayHandler::Print(unsigned int)+0x48>)
 80081f0:	4d0f      	ldr	r5, [pc, #60]	; (8008230 <DisplayHandler::Print(unsigned int)+0x4c>)
 80081f2:	bf98      	it	ls
 80081f4:	5c5c      	ldrbls	r4, [r3, r1]
 80081f6:	682b      	ldr	r3, [r5, #0]
 80081f8:	bf88      	it	hi
 80081fa:	2455      	movhi	r4, #85	; 0x55
 80081fc:	6998      	ldr	r0, [r3, #24]
 80081fe:	b178      	cbz	r0, 8008220 <DisplayHandler::Print(unsigned int)+0x3c>
 8008200:	7901      	ldrb	r1, [r0, #4]
 8008202:	3901      	subs	r1, #1
 8008204:	b2c9      	uxtb	r1, r1
 8008206:	b168      	cbz	r0, 8008224 <DisplayHandler::Print(unsigned int)+0x40>
 8008208:	7942      	ldrb	r2, [r0, #5]
 800820a:	3a01      	subs	r2, #1
 800820c:	b2d2      	uxtb	r2, r2
 800820e:	f7ff ffdf 	bl	80081d0 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 8008212:	682b      	ldr	r3, [r5, #0]
 8008214:	4621      	mov	r1, r4
 8008216:	6998      	ldr	r0, [r3, #24]
 8008218:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800821c:	f7ff bfdd 	b.w	80081da <Display::PutChar(int) [clone .isra.0]>
 8008220:	4601      	mov	r1, r0
 8008222:	e7ee      	b.n	8008202 <DisplayHandler::Print(unsigned int)+0x1e>
 8008224:	4602      	mov	r2, r0
 8008226:	e7f0      	b.n	800820a <DisplayHandler::Print(unsigned int)+0x26>
 8008228:	bd38      	pop	{r3, r4, r5, pc}
 800822a:	bf00      	nop
 800822c:	080149a4 	stmdaeq	r1, {r2, r5, r7, r8, fp, lr}
 8008230:	2000b778 	andcs	fp, r0, r8, ror r7

08008234 <RDMNetDevice::~RDMNetDevice()>:
 8008234:	b510      	push	{r4, lr}
 8008236:	4604      	mov	r4, r0
 8008238:	4b05      	ldr	r3, [pc, #20]	; (8008250 <RDMNetDevice::~RDMNetDevice()+0x1c>)
 800823a:	f840 3b88 	str.w	r3, [r0], #136
 800823e:	f004 f829 	bl	800c294 <RDMSubDevices::~RDMSubDevices()>
 8008242:	f104 0080 	add.w	r0, r4, #128	; 0x80
 8008246:	f004 f805 	bl	800c254 <RDMSensors::~RDMSensors()>
 800824a:	4620      	mov	r0, r4
 800824c:	bd10      	pop	{r4, pc}
 800824e:	bf00      	nop
 8008250:	08015dec 	stmdaeq	r1, {r2, r3, r5, r6, r7, r8, sl, fp, ip, lr}

08008254 <non-virtual thunk to RDMNetDevice::~RDMNetDevice()>:
 8008254:	f1a0 00cc 	sub.w	r0, r0, #204	; 0xcc
 8008258:	e7ec      	b.n	8008234 <RDMNetDevice::~RDMNetDevice()>
 800825a:	bf00      	nop

0800825c <RDMNetDevice::~RDMNetDevice()>:
 800825c:	b510      	push	{r4, lr}
 800825e:	4604      	mov	r4, r0
 8008260:	f7ff ffe8 	bl	8008234 <RDMNetDevice::~RDMNetDevice()>
 8008264:	4620      	mov	r0, r4
 8008266:	f00a f93d 	bl	80124e4 <operator delete(void*)>
 800826a:	4620      	mov	r0, r4
 800826c:	bd10      	pop	{r4, pc}

0800826e <non-virtual thunk to RDMNetDevice::~RDMNetDevice()>:
 800826e:	f1a0 00cc 	sub.w	r0, r0, #204	; 0xcc
 8008272:	e7f3      	b.n	800825c <RDMNetDevice::~RDMNetDevice()>

08008274 <Display::TextStatus(char const*)>:
 8008274:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008278:	4604      	mov	r4, r0
 800827a:	6980      	ldr	r0, [r0, #24]
 800827c:	460d      	mov	r5, r1
 800827e:	b360      	cbz	r0, 80082da <Display::TextStatus(char const*)+0x66>
 8008280:	7947      	ldrb	r7, [r0, #5]
 8008282:	2100      	movs	r1, #0
 8008284:	1e7e      	subs	r6, r7, #1
 8008286:	b2f6      	uxtb	r6, r6
 8008288:	4632      	mov	r2, r6
 800828a:	f890 9004 	ldrb.w	r9, [r0, #4]
 800828e:	f04f 0800 	mov.w	r8, #0
 8008292:	f7ff ff9d 	bl	80081d0 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 8008296:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 800829a:	45c1      	cmp	r9, r8
 800829c:	69a0      	ldr	r0, [r4, #24]
 800829e:	d816      	bhi.n	80082ce <Display::TextStatus(char const*)+0x5a>
 80082a0:	4632      	mov	r2, r6
 80082a2:	2100      	movs	r1, #0
 80082a4:	f7ff ff94 	bl	80081d0 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 80082a8:	69a0      	ldr	r0, [r4, #24]
 80082aa:	b1b0      	cbz	r0, 80082da <Display::TextStatus(char const*)+0x66>
 80082ac:	2300      	movs	r3, #0
 80082ae:	7901      	ldrb	r1, [r0, #4]
 80082b0:	5cea      	ldrb	r2, [r5, r3]
 80082b2:	b11a      	cbz	r2, 80082bc <Display::TextStatus(char const*)+0x48>
 80082b4:	1c5a      	adds	r2, r3, #1
 80082b6:	4299      	cmp	r1, r3
 80082b8:	4613      	mov	r3, r2
 80082ba:	dcf9      	bgt.n	80082b0 <Display::TextStatus(char const*)+0x3c>
 80082bc:	6802      	ldr	r2, [r0, #0]
 80082be:	4639      	mov	r1, r7
 80082c0:	69d4      	ldr	r4, [r2, #28]
 80082c2:	b2db      	uxtb	r3, r3
 80082c4:	462a      	mov	r2, r5
 80082c6:	46a4      	mov	ip, r4
 80082c8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80082cc:	4760      	bx	ip
 80082ce:	2120      	movs	r1, #32
 80082d0:	f7ff ff83 	bl	80081da <Display::PutChar(int) [clone .isra.0]>
 80082d4:	f108 0801 	add.w	r8, r8, #1
 80082d8:	e7df      	b.n	800829a <Display::TextStatus(char const*)+0x26>
 80082da:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

080082de <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>:
 80082de:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80082e0:	4605      	mov	r5, r0
 80082e2:	461e      	mov	r6, r3
 80082e4:	460f      	mov	r7, r1
 80082e6:	4614      	mov	r4, r2
 80082e8:	f7ff ffc4 	bl	8008274 <Display::TextStatus(char const*)>
 80082ec:	7c6b      	ldrb	r3, [r5, #17]
 80082ee:	b19b      	cbz	r3, 8008318 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x3a>
 80082f0:	43e2      	mvns	r2, r4
 80082f2:	2312      	movs	r3, #18
 80082f4:	7a28      	ldrb	r0, [r5, #8]
 80082f6:	f88d 3004 	strb.w	r3, [sp, #4]
 80082fa:	f3c2 2307 	ubfx	r3, r2, #8, #8
 80082fe:	f88d 3005 	strb.w	r3, [sp, #5]
 8008302:	f88d 2006 	strb.w	r2, [sp, #6]
 8008306:	f00b f9e3 	bl	80136d0 <gd32_i2c_set_address>
 800830a:	68e8      	ldr	r0, [r5, #12]
 800830c:	f00b f9d8 	bl	80136c0 <gd32_i2c_set_baudrate>
 8008310:	2103      	movs	r1, #3
 8008312:	a801      	add	r0, sp, #4
 8008314:	f00b f9e2 	bl	80136dc <gd32_i2c_write>
 8008318:	1c73      	adds	r3, r6, #1
 800831a:	d006      	beq.n	800832a <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x4c>
 800831c:	4639      	mov	r1, r7
 800831e:	4630      	mov	r0, r6
 8008320:	b003      	add	sp, #12
 8008322:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8008326:	f009 bf81 	b.w	801222c <console_status>
 800832a:	b003      	add	sp, #12
 800832c:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08008330 <Display::SetSleep(bool)>:
 8008330:	b538      	push	{r3, r4, r5, lr}
 8008332:	4604      	mov	r4, r0
 8008334:	6980      	ldr	r0, [r0, #24]
 8008336:	460d      	mov	r5, r1
 8008338:	b138      	cbz	r0, 800834a <Display::SetSleep(bool)+0x1a>
 800833a:	6803      	ldr	r3, [r0, #0]
 800833c:	7421      	strb	r1, [r4, #16]
 800833e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008340:	4798      	blx	r3
 8008342:	b915      	cbnz	r5, 800834a <Display::SetSleep(bool)+0x1a>
 8008344:	4b01      	ldr	r3, [pc, #4]	; (800834c <Display::SetSleep(bool)+0x1c>)
 8008346:	681b      	ldr	r3, [r3, #0]
 8008348:	6063      	str	r3, [r4, #4]
 800834a:	bd38      	pop	{r3, r4, r5, pc}
 800834c:	2000b87c 	andcs	fp, r0, ip, ror r8

08008350 <display::timeout::gpio_init()>:
 8008350:	b510      	push	{r4, lr}
 8008352:	f240 6003 	movw	r0, #1539	; 0x603
 8008356:	f00a fd47 	bl	8012de8 <rcu_periph_clock_enable>
 800835a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800835e:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8008362:	2203      	movs	r2, #3
 8008364:	2148      	movs	r1, #72	; 0x48
 8008366:	4801      	ldr	r0, [pc, #4]	; (800836c <display::timeout::gpio_init()+0x1c>)
 8008368:	f00a bca6 	b.w	8012cb8 <gpio_init>
 800836c:	40010c00 	andmi	r0, r1, r0, lsl #24

08008370 <display::timeout::gpio_renew()>:
 8008370:	4b03      	ldr	r3, [pc, #12]	; (8008380 <display::timeout::gpio_renew()+0x10>)
 8008372:	f8d3 0c08 	ldr.w	r0, [r3, #3080]	; 0xc08
 8008376:	f480 4080 	eor.w	r0, r0, #16384	; 0x4000
 800837a:	f3c0 3080 	ubfx	r0, r0, #14, #1
 800837e:	4770      	bx	lr
 8008380:	40010000 	andmi	r0, r1, r0

08008384 <StoreNetwork::SaveDhcp(bool)>:
 8008384:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8008386:	2301      	movs	r3, #1
 8008388:	f88d 1017 	strb.w	r1, [sp, #23]
 800838c:	2100      	movs	r1, #0
 800838e:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8008392:	4805      	ldr	r0, [pc, #20]	; (80083a8 <StoreNetwork::SaveDhcp(bool)+0x24>)
 8008394:	9300      	str	r3, [sp, #0]
 8008396:	2214      	movs	r2, #20
 8008398:	6800      	ldr	r0, [r0, #0]
 800839a:	f10d 0317 	add.w	r3, sp, #23
 800839e:	f006 f96f 	bl	800e680 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 80083a2:	b007      	add	sp, #28
 80083a4:	f85d fb04 	ldr.w	pc, [sp], #4
 80083a8:	20003898 	mulcs	r0, r8, r8

080083ac <non-virtual thunk to StoreNetwork::SaveDhcp(bool)>:
 80083ac:	f1a0 0004 	sub.w	r0, r0, #4
 80083b0:	e7e8      	b.n	8008384 <StoreNetwork::SaveDhcp(bool)>
 80083b2:	bf00      	nop

080083b4 <FactoryDefaults::Set()>:
 80083b4:	b508      	push	{r3, lr}
 80083b6:	4b08      	ldr	r3, [pc, #32]	; (80083d8 <FactoryDefaults::Set()+0x24>)
 80083b8:	2100      	movs	r1, #0
 80083ba:	6818      	ldr	r0, [r3, #0]
 80083bc:	f001 f9fa 	bl	80097b4 <RemoteConfig::SetDisable(bool)>
 80083c0:	4b06      	ldr	r3, [pc, #24]	; (80083dc <FactoryDefaults::Set()+0x28>)
 80083c2:	210b      	movs	r1, #11
 80083c4:	6818      	ldr	r0, [r3, #0]
 80083c6:	f006 f949 	bl	800e65c <SpiFlashStore::ResetSetList(spiflashstore::Store)>
 80083ca:	4b05      	ldr	r3, [pc, #20]	; (80083e0 <FactoryDefaults::Set()+0x2c>)
 80083cc:	2101      	movs	r1, #1
 80083ce:	6818      	ldr	r0, [r3, #0]
 80083d0:	f7ff ffd8 	bl	8008384 <StoreNetwork::SaveDhcp(bool)>
 80083d4:	bd08      	pop	{r3, pc}
 80083d6:	bf00      	nop
 80083d8:	20000128 	andcs	r0, r0, r8, lsr #2
 80083dc:	20003898 	mulcs	r0, r8, r8
 80083e0:	200038a8 	andcs	r3, r0, r8, lsr #17

080083e4 <Hardware::RebootHandler()>:
 80083e4:	b508      	push	{r3, lr}
 80083e6:	4b05      	ldr	r3, [pc, #20]	; (80083fc <Hardware::RebootHandler()+0x18>)
 80083e8:	6818      	ldr	r0, [r3, #0]
 80083ea:	f005 ffc5 	bl	800e378 <Dmx::Blackout()>
 80083ee:	4b04      	ldr	r3, [pc, #16]	; (8008400 <Hardware::RebootHandler()+0x1c>)
 80083f0:	6818      	ldr	r0, [r3, #0]
 80083f2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80083f6:	f002 bb99 	b.w	800ab2c <E131Bridge::Stop()>
 80083fa:	bf00      	nop
 80083fc:	20002878 	andcs	r2, r0, r8, ror r8
 8008400:	20001ee0 	andcs	r1, r0, r0, ror #29

08008404 <main>:
 8008404:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008408:	2501      	movs	r5, #1
 800840a:	f6ad 2d24 	subw	sp, sp, #2596	; 0xa24
 800840e:	a802      	add	r0, sp, #8
 8008410:	f009 ffc0 	bl	8012394 <Hardware::Hardware()>
 8008414:	a889      	add	r0, sp, #548	; 0x224
 8008416:	f007 fd11 	bl	800fe3c <Network::Network()>
 800841a:	a817      	add	r0, sp, #92	; 0x5c
 800841c:	f009 ff64 	bl	80122e8 <LedBlink::LedBlink()>
 8008420:	a873      	add	r0, sp, #460	; 0x1cc
 8008422:	f008 fe37 	bl	8011094 <DisplayUdf::DisplayUdf()>
 8008426:	4bb1      	ldr	r3, [pc, #708]	; (80086ec <main+0x2e8>)
 8008428:	4ab1      	ldr	r2, [pc, #708]	; (80086f0 <main+0x2ec>)
 800842a:	49b2      	ldr	r1, [pc, #712]	; (80086f4 <main+0x2f0>)
 800842c:	a803      	add	r0, sp, #12
 800842e:	f009 ff15 	bl	801225c <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>
 8008432:	a804      	add	r0, sp, #16
 8008434:	f006 fbc0 	bl	800ebb8 <FlashRom::FlashRom()>
 8008438:	4eaf      	ldr	r6, [pc, #700]	; (80086f8 <main+0x2f4>)
 800843a:	a805      	add	r0, sp, #20
 800843c:	f006 f8e8 	bl	800e610 <SpiFlashStore::SpiFlashStore()>
 8008440:	49ae      	ldr	r1, [pc, #696]	; (80086fc <main+0x2f8>)
 8008442:	a803      	add	r0, sp, #12
 8008444:	f009 ff42 	bl	80122cc <FirmwareVersion::Print(char const*)>
 8008448:	2008      	movs	r0, #8
 800844a:	6135      	str	r5, [r6, #16]
 800844c:	f00a f84e 	bl	80124ec <operator new(unsigned int)>
 8008450:	4bab      	ldr	r3, [pc, #684]	; (8008700 <main+0x2fc>)
 8008452:	2400      	movs	r4, #0
 8008454:	6003      	str	r3, [r0, #0]
 8008456:	4bab      	ldr	r3, [pc, #684]	; (8008704 <main+0x300>)
 8008458:	f44f 62c0 	mov.w	r2, #1536	; 0x600
 800845c:	681b      	ldr	r3, [r3, #0]
 800845e:	49aa      	ldr	r1, [pc, #680]	; (8008708 <main+0x304>)
 8008460:	3b00      	subs	r3, #0
 8008462:	bf18      	it	ne
 8008464:	2301      	movne	r3, #1
 8008466:	9019      	str	r0, [sp, #100]	; 0x64
 8008468:	7103      	strb	r3, [r0, #4]
 800846a:	2303      	movs	r3, #3
 800846c:	a873      	add	r0, sp, #460	; 0x1cc
 800846e:	f7ff ff36 	bl	80082de <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008472:	a80f      	add	r0, sp, #60	; 0x3c
 8008474:	f006 fac8 	bl	800ea08 <StoreNetwork::StoreNetwork()>
 8008478:	ab10      	add	r3, sp, #64	; 0x40
 800847a:	a90f      	add	r1, sp, #60	; 0x3c
 800847c:	a889      	add	r0, sp, #548	; 0x224
 800847e:	93b7      	str	r3, [sp, #732]	; 0x2dc
 8008480:	f007 fd36 	bl	800fef0 <Network::Init(NetworkParamsStore*)>
 8008484:	a889      	add	r0, sp, #548	; 0x224
 8008486:	f007 ff9b 	bl	80103c0 <Network::Print()>
 800848a:	2303      	movs	r3, #3
 800848c:	f44f 62e0 	mov.w	r2, #1792	; 0x700
 8008490:	499e      	ldr	r1, [pc, #632]	; (800870c <main+0x308>)
 8008492:	a873      	add	r0, sp, #460	; 0x1cc
 8008494:	f7ff ff23 	bl	80082de <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008498:	a806      	add	r0, sp, #24
 800849a:	f007 f911 	bl	800f6c0 <MDNS::MDNS()>
 800849e:	a806      	add	r0, sp, #24
 80084a0:	f007 f9ce 	bl	800f840 <MDNS::Start()>
 80084a4:	f642 1305 	movw	r3, #10501	; 0x2905
 80084a8:	4621      	mov	r1, r4
 80084aa:	4a99      	ldr	r2, [pc, #612]	; (8008710 <main+0x30c>)
 80084ac:	e9cd 4400 	strd	r4, r4, [sp]
 80084b0:	a806      	add	r0, sp, #24
 80084b2:	f007 fb2f 	bl	800fb14 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 80084b6:	4b97      	ldr	r3, [pc, #604]	; (8008714 <main+0x310>)
 80084b8:	4621      	mov	r1, r4
 80084ba:	4a97      	ldr	r2, [pc, #604]	; (8008718 <main+0x314>)
 80084bc:	e9cd 5300 	strd	r5, r3, [sp]
 80084c0:	a806      	add	r0, sp, #24
 80084c2:	2350      	movs	r3, #80	; 0x50
 80084c4:	f007 fb26 	bl	800fb14 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 80084c8:	a806      	add	r0, sp, #24
 80084ca:	f007 fc69 	bl	800fda0 <MDNS::Print()>
 80084ce:	a853      	add	r0, sp, #332	; 0x14c
 80084d0:	f001 fe0a 	bl	800a0e8 <HttpDaemon::HttpDaemon()>
 80084d4:	a853      	add	r0, sp, #332	; 0x14c
 80084d6:	f001 fe1b 	bl	800a110 <HttpDaemon::Start()>
 80084da:	2303      	movs	r3, #3
 80084dc:	f44f 42cc 	mov.w	r2, #26112	; 0x6600
 80084e0:	498e      	ldr	r1, [pc, #568]	; (800871c <main+0x318>)
 80084e2:	a873      	add	r0, sp, #460	; 0x1cc
 80084e4:	f7ff fefb 	bl	80082de <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 80084e8:	a807      	add	r0, sp, #28
 80084ea:	f006 fb5b 	bl	800eba4 <StoreE131::StoreE131()>
 80084ee:	a907      	add	r1, sp, #28
 80084f0:	a82f      	add	r0, sp, #188	; 0xbc
 80084f2:	f003 fa05 	bl	800b900 <E131Params::E131Params(E131ParamsStore*)>
 80084f6:	a8f3      	add	r0, sp, #972	; 0x3cc
 80084f8:	f002 fa74 	bl	800a9e4 <E131Bridge::E131Bridge()>
 80084fc:	a82f      	add	r0, sp, #188	; 0xbc
 80084fe:	f003 fa23 	bl	800b948 <E131Params::Load()>
 8008502:	b130      	cbz	r0, 8008512 <main+0x10e>
 8008504:	a82f      	add	r0, sp, #188	; 0xbc
 8008506:	f003 fd53 	bl	800bfb0 <E131Params::Dump()>
 800850a:	4621      	mov	r1, r4
 800850c:	a82f      	add	r0, sp, #188	; 0xbc
 800850e:	f003 fcf9 	bl	800bf04 <E131Params::Set(unsigned int)>
 8008512:	2400      	movs	r4, #0
 8008514:	f8bd 20d9 	ldrh.w	r2, [sp, #217]	; 0xd9
 8008518:	0061      	lsls	r1, r4, #1
 800851a:	ab2f      	add	r3, sp, #188	; 0xbc
 800851c:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8008520:	40ca      	lsrs	r2, r1
 8008522:	f8b3 300b 	ldrh.w	r3, [r3, #11]
 8008526:	4621      	mov	r1, r4
 8008528:	f002 0203 	and.w	r2, r2, #3
 800852c:	a8f3      	add	r0, sp, #972	; 0x3cc
 800852e:	3401      	adds	r4, #1
 8008530:	f002 fb7c 	bl	800ac2c <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)>
 8008534:	2c04      	cmp	r4, #4
 8008536:	d1ed      	bne.n	8008514 <main+0x110>
 8008538:	a808      	add	r0, sp, #32
 800853a:	f006 f9cf 	bl	800e8dc <StoreDmxSend::StoreDmxSend()>
 800853e:	a908      	add	r1, sp, #32
 8008540:	a813      	add	r0, sp, #76	; 0x4c
 8008542:	f005 f85b 	bl	800d5fc <DmxParams::DmxParams(DmxParamsStore*)>
 8008546:	a838      	add	r0, sp, #224	; 0xe0
 8008548:	f005 fd80 	bl	800e04c <Dmx::Dmx()>
 800854c:	a813      	add	r0, sp, #76	; 0x4c
 800854e:	f005 f861 	bl	800d614 <DmxParams::Load()>
 8008552:	b130      	cbz	r0, 8008562 <main+0x15e>
 8008554:	a813      	add	r0, sp, #76	; 0x4c
 8008556:	f005 f9ab 	bl	800d8b0 <DmxParams::Dump()>
 800855a:	a938      	add	r1, sp, #224	; 0xe0
 800855c:	a813      	add	r0, sp, #76	; 0x4c
 800855e:	f005 f97d 	bl	800d85c <DmxParams::Set(Dmx*)>
 8008562:	4b6f      	ldr	r3, [pc, #444]	; (8008720 <main+0x31c>)
 8008564:	ac09      	add	r4, sp, #36	; 0x24
 8008566:	4620      	mov	r0, r4
 8008568:	9309      	str	r3, [sp, #36]	; 0x24
 800856a:	f004 ffed 	bl	800d548 <DmxSend::Print()>
 800856e:	f89d 58d7 	ldrb.w	r5, [sp, #2263]	; 0x8d7
 8008572:	b165      	cbz	r5, 800858e <main+0x18a>
 8008574:	2001      	movs	r0, #1
 8008576:	94f4      	str	r4, [sp, #976]	; 0x3d0
 8008578:	f009 ffb8 	bl	80124ec <operator new(unsigned int)>
 800857c:	4b69      	ldr	r3, [pc, #420]	; (8008724 <main+0x320>)
 800857e:	4605      	mov	r5, r0
 8008580:	f44f 51a0 	mov.w	r1, #5120	; 0x1400
 8008584:	6818      	ldr	r0, [r3, #0]
 8008586:	f007 fc8b 	bl	800fea0 <Network::Begin(unsigned short)>
 800858a:	4b67      	ldr	r3, [pc, #412]	; (8008728 <main+0x324>)
 800858c:	6018      	str	r0, [r3, #0]
 800858e:	ac0a      	add	r4, sp, #40	; 0x28
 8008590:	4620      	mov	r0, r4
 8008592:	f000 fa93 	bl	8008abc <DmxInput::DmxInput()>
 8008596:	f89d 38d6 	ldrb.w	r3, [sp, #2262]	; 0x8d6
 800859a:	b103      	cbz	r3, 800859e <main+0x19a>
 800859c:	94f8      	str	r4, [sp, #992]	; 0x3e0
 800859e:	f89d 78d7 	ldrb.w	r7, [sp, #2263]	; 0x8d7
 80085a2:	f44f 42fe 	mov.w	r2, #32512	; 0x7f00
 80085a6:	4961      	ldr	r1, [pc, #388]	; (800872c <main+0x328>)
 80085a8:	441f      	add	r7, r3
 80085aa:	a873      	add	r0, sp, #460	; 0x1cc
 80085ac:	2303      	movs	r3, #3
 80085ae:	f7ff fe96 	bl	80082de <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 80085b2:	463b      	mov	r3, r7
 80085b4:	2120      	movs	r1, #32
 80085b6:	4a5e      	ldr	r2, [pc, #376]	; (8008730 <main+0x32c>)
 80085b8:	a81d      	add	r0, sp, #116	; 0x74
 80085ba:	f000 fdbd 	bl	8009138 <snprintf>
 80085be:	4a5d      	ldr	r2, [pc, #372]	; (8008734 <main+0x330>)
 80085c0:	2120      	movs	r1, #32
 80085c2:	a826      	add	r0, sp, #152	; 0x98
 80085c4:	f000 fdb8 	bl	8009138 <snprintf>
 80085c8:	4604      	mov	r4, r0
 80085ca:	202c      	movs	r0, #44	; 0x2c
 80085cc:	f009 ff8e 	bl	80124ec <operator new(unsigned int)>
 80085d0:	2200      	movs	r2, #0
 80085d2:	4603      	mov	r3, r0
 80085d4:	6042      	str	r2, [r0, #4]
 80085d6:	6282      	str	r2, [r0, #40]	; 0x28
 80085d8:	f100 0c28 	add.w	ip, r0, #40	; 0x28
 80085dc:	f823 2b08 	strh.w	r2, [r3], #8
 80085e0:	aa1d      	add	r2, sp, #116	; 0x74
 80085e2:	f812 1b01 	ldrb.w	r1, [r2], #1
 80085e6:	b111      	cbz	r1, 80085ee <main+0x1ea>
 80085e8:	4563      	cmp	r3, ip
 80085ea:	f040 818f 	bne.w	800890c <main+0x508>
 80085ee:	2201      	movs	r2, #1
 80085f0:	a90b      	add	r1, sp, #44	; 0x2c
 80085f2:	900b      	str	r0, [sp, #44]	; 0x2c
 80085f4:	a8bc      	add	r0, sp, #752	; 0x2f0
 80085f6:	f003 ff6f 	bl	800c4d8 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)>
 80085fa:	a8ef      	add	r0, sp, #956	; 0x3bc
 80085fc:	f003 fcee 	bl	800bfdc <LLRPDevice::LLRPDevice()>
 8008600:	4b4d      	ldr	r3, [pc, #308]	; (8008738 <main+0x334>)
 8008602:	2100      	movs	r1, #0
 8008604:	93bc      	str	r3, [sp, #752]	; 0x2f0
 8008606:	a8f0      	add	r0, sp, #960	; 0x3c0
 8008608:	3324      	adds	r3, #36	; 0x24
 800860a:	93ef      	str	r3, [sp, #956]	; 0x3bc
 800860c:	f004 f95a 	bl	800c8c4 <RDMHandler::RDMHandler(bool)>
 8008610:	4b4a      	ldr	r3, [pc, #296]	; (800873c <main+0x338>)
 8008612:	b2e4      	uxtb	r4, r4
 8008614:	494a      	ldr	r1, [pc, #296]	; (8008740 <main+0x33c>)
 8008616:	6818      	ldr	r0, [r3, #0]
 8008618:	f009 ff0c 	bl	8012434 <Hardware::GetUuid(unsigned char*)>
 800861c:	2c20      	cmp	r4, #32
 800861e:	bf28      	it	cs
 8008620:	2420      	movcs	r4, #32
 8008622:	f89d 3344 	ldrb.w	r3, [sp, #836]	; 0x344
 8008626:	4622      	mov	r2, r4
 8008628:	a926      	add	r1, sp, #152	; 0x98
 800862a:	2b00      	cmp	r3, #0
 800862c:	f000 8174 	beq.w	8008918 <main+0x514>
 8008630:	f20d 20fe 	addw	r0, sp, #766	; 0x2fe
 8008634:	f7ff fd7d 	bl	8008132 <memcpy>
 8008638:	98da      	ldr	r0, [sp, #872]	; 0x368
 800863a:	f88d 431e 	strb.w	r4, [sp, #798]	; 0x31e
 800863e:	b128      	cbz	r0, 800864c <main+0x248>
 8008640:	6803      	ldr	r3, [r0, #0]
 8008642:	4622      	mov	r2, r4
 8008644:	689b      	ldr	r3, [r3, #8]
 8008646:	f20d 21fe 	addw	r1, sp, #766	; 0x2fe
 800864a:	4798      	blx	r3
 800864c:	4b3d      	ldr	r3, [pc, #244]	; (8008744 <main+0x340>)
 800864e:	2004      	movs	r0, #4
 8008650:	93d0      	str	r3, [sp, #832]	; 0x340
 8008652:	f009 ff4b 	bl	80124ec <operator new(unsigned int)>
 8008656:	4b3c      	ldr	r3, [pc, #240]	; (8008748 <main+0x344>)
 8008658:	90ee      	str	r0, [sp, #952]	; 0x3b8
 800865a:	6003      	str	r3, [r0, #0]
 800865c:	a8bc      	add	r0, sp, #752	; 0x2f0
 800865e:	f003 ff8b 	bl	800c578 <RDMDeviceResponder::Init()>
 8008662:	a811      	add	r0, sp, #68	; 0x44
 8008664:	f006 fa30 	bl	800eac8 <StoreRDMDevice::StoreRDMDevice()>
 8008668:	a911      	add	r1, sp, #68	; 0x44
 800866a:	a867      	add	r0, sp, #412	; 0x19c
 800866c:	f003 fec4 	bl	800c3f8 <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)>
 8008670:	a867      	add	r0, sp, #412	; 0x19c
 8008672:	f003 fed3 	bl	800c41c <RDMDeviceParams::Load()>
 8008676:	b130      	cbz	r0, 8008686 <main+0x282>
 8008678:	a867      	add	r0, sp, #412	; 0x19c
 800867a:	a9bd      	add	r1, sp, #756	; 0x2f4
 800867c:	f003 fed9 	bl	800c432 <RDMDeviceParams::Set(RDMDevice*)>
 8008680:	a867      	add	r0, sp, #412	; 0x19c
 8008682:	f003 ff0b 	bl	800c49c <RDMDeviceParams::Dump()>
 8008686:	ab12      	add	r3, sp, #72	; 0x48
 8008688:	a8bc      	add	r0, sp, #752	; 0x2f0
 800868a:	93da      	str	r3, [sp, #872]	; 0x368
 800868c:	f003 fdba 	bl	800c204 <RDMNetDevice::Print()>
 8008690:	a8f3      	add	r0, sp, #972	; 0x3cc
 8008692:	f003 f87f 	bl	800b794 <E131Bridge::Print()>
 8008696:	463a      	mov	r2, r7
 8008698:	492c      	ldr	r1, [pc, #176]	; (800874c <main+0x348>)
 800869a:	a873      	add	r0, sp, #460	; 0x1cc
 800869c:	f008 fd10 	bl	80110c0 <DisplayUdf::SetTitle(char const*, ...)>
 80086a0:	2202      	movs	r2, #2
 80086a2:	a873      	add	r0, sp, #460	; 0x1cc
 80086a4:	4611      	mov	r1, r2
 80086a6:	f008 fd1e 	bl	80110e6 <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 80086aa:	2207      	movs	r2, #7
 80086ac:	2103      	movs	r1, #3
 80086ae:	a873      	add	r0, sp, #460	; 0x1cc
 80086b0:	f008 fd19 	bl	80110e6 <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 80086b4:	2208      	movs	r2, #8
 80086b6:	2104      	movs	r1, #4
 80086b8:	a873      	add	r0, sp, #460	; 0x1cc
 80086ba:	f008 fd14 	bl	80110e6 <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 80086be:	2209      	movs	r2, #9
 80086c0:	2105      	movs	r1, #5
 80086c2:	a873      	add	r0, sp, #460	; 0x1cc
 80086c4:	f008 fd0f 	bl	80110e6 <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 80086c8:	2201      	movs	r2, #1
 80086ca:	2106      	movs	r1, #6
 80086cc:	a873      	add	r0, sp, #460	; 0x1cc
 80086ce:	f008 fd0a 	bl	80110e6 <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 80086d2:	a80c      	add	r0, sp, #48	; 0x30
 80086d4:	f006 f8cc 	bl	800e870 <StoreDisplayUdf::StoreDisplayUdf()>
 80086d8:	a90c      	add	r1, sp, #48	; 0x30
 80086da:	a85d      	add	r0, sp, #372	; 0x174
 80086dc:	f008 fe84 	bl	80113e8 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 80086e0:	a85d      	add	r0, sp, #372	; 0x174
 80086e2:	f008 fe8e 	bl	8011402 <DisplayUdfParams::Load()>
 80086e6:	2800      	cmp	r0, #0
 80086e8:	d039      	beq.n	800875e <main+0x35a>
 80086ea:	e031      	b.n	8008750 <main+0x34c>
 80086ec:	08014894 	stmdaeq	r1, {r2, r4, r7, fp, lr}
 80086f0:	0801489d 	stmdaeq	r1, {r0, r2, r3, r4, r7, fp, lr}
 80086f4:	080149a9 	stmdaeq	r1, {r0, r3, r5, r7, r8, fp, lr}
 80086f8:	40011000 	andmi	r1, r1, r0
 80086fc:	080148a9 	stmdaeq	r1, {r0, r3, r5, r7, fp, lr}
 8008700:	08014944 	stmdaeq	r1, {r2, r6, r8, fp, lr}
 8008704:	2000b778 	andcs	fp, r0, r8, ror r7
 8008708:	08016401 	stmdaeq	r1, {r0, sl, sp, lr}
 800870c:	080163f0 	stmdaeq	r1, {r4, r5, r6, r7, r8, r9, sp, lr}
 8008710:	080148c2 	stmdaeq	r1, {r1, r6, r7, fp, lr}
 8008714:	080148d2 	stmdaeq	r1, {r1, r4, r6, r7, fp, lr}
 8008718:	080148cb 	stmdaeq	r1, {r0, r1, r3, r6, r7, fp, lr}
 800871c:	08015b43 	stmdaeq	r1, {r0, r1, r6, r8, r9, fp, ip, lr}
 8008720:	08016194 	stmdaeq	r1, {r2, r4, r7, r8, sp, lr}
 8008724:	2000b1a0 	andcs	fp, r0, r0, lsr #3
 8008728:	20000010 	andcs	r0, r0, r0, lsl r0
 800872c:	08015ce8 	stmdaeq	r1, {r3, r5, r6, r7, sl, fp, ip, lr}
 8008730:	080148e6 	stmdaeq	r1, {r1, r2, r5, r6, r7, fp, lr}
 8008734:	080148f8 	stmdaeq	r1, {r3, r4, r5, r6, r7, fp, lr}
 8008738:	08014958 	stmdaeq	r1, {r3, r4, r6, r8, fp, lr}
 800873c:	2000b868 	andcs	fp, r0, r8, ror #16
 8008740:	20001ffb 	strdcs	r1, [r0], -fp
 8008744:	06010801 	streq	r0, [r1], -r1, lsl #16
 8008748:	08014998 	stmdaeq	r1, {r3, r4, r7, r8, fp, lr}
 800874c:	08014907 	stmdaeq	r1, {r0, r1, r2, r8, fp, lr}
 8008750:	a85d      	add	r0, sp, #372	; 0x174
 8008752:	f008 ffc1 	bl	80116d8 <DisplayUdfParams::Dump()>
 8008756:	a973      	add	r1, sp, #460	; 0x1cc
 8008758:	a85d      	add	r0, sp, #372	; 0x174
 800875a:	f008 ff8a 	bl	8011672 <DisplayUdfParams::Set(DisplayUdf*)>
 800875e:	a9f3      	add	r1, sp, #972	; 0x3cc
 8008760:	a873      	add	r0, sp, #460	; 0x1cc
 8008762:	f008 ffbb 	bl	80116dc <DisplayUdf::Show(E131Bridge*)>
 8008766:	463b      	mov	r3, r7
 8008768:	2200      	movs	r2, #0
 800876a:	2101      	movs	r1, #1
 800876c:	a841      	add	r0, sp, #260	; 0x104
 800876e:	f000 ffd5 	bl	800971c <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>
 8008772:	a80d      	add	r0, sp, #52	; 0x34
 8008774:	f006 f9e0 	bl	800eb38 <StoreRemoteConfig::StoreRemoteConfig()>
 8008778:	a90d      	add	r1, sp, #52	; 0x34
 800877a:	a84a      	add	r0, sp, #296	; 0x128
 800877c:	f001 fa9e 	bl	8009cbc <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 8008780:	a84a      	add	r0, sp, #296	; 0x128
 8008782:	f001 faa5 	bl	8009cd0 <RemoteConfigParams::Load()>
 8008786:	b130      	cbz	r0, 8008796 <main+0x392>
 8008788:	a84a      	add	r0, sp, #296	; 0x128
 800878a:	f001 fbe8 	bl	8009f5e <RemoteConfigParams::Dump()>
 800878e:	a941      	add	r1, sp, #260	; 0x104
 8008790:	a84a      	add	r0, sp, #296	; 0x128
 8008792:	f001 fbc4 	bl	8009f1e <RemoteConfigParams::Set(RemoteConfig*)>
 8008796:	a805      	add	r0, sp, #20
 8008798:	f005 ffe4 	bl	800e764 <SpiFlashStore::Flash()>
 800879c:	2800      	cmp	r0, #0
 800879e:	d1fa      	bne.n	8008796 <main+0x392>
 80087a0:	4c89      	ldr	r4, [pc, #548]	; (80089c8 <main+0x5c4>)
 80087a2:	2303      	movs	r3, #3
 80087a4:	f44f 42fa 	mov.w	r2, #32000	; 0x7d00
 80087a8:	4988      	ldr	r1, [pc, #544]	; (80089cc <main+0x5c8>)
 80087aa:	a873      	add	r0, sp, #460	; 0x1cc
 80087ac:	f7ff fd97 	bl	80082de <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 80087b0:	f241 51c1 	movw	r1, #5569	; 0x15c1
 80087b4:	6820      	ldr	r0, [r4, #0]
 80087b6:	f007 fb73 	bl	800fea0 <Network::Begin(unsigned short)>
 80087ba:	4b85      	ldr	r3, [pc, #532]	; (80089d0 <main+0x5cc>)
 80087bc:	4601      	mov	r1, r0
 80087be:	6018      	str	r0, [r3, #0]
 80087c0:	4b84      	ldr	r3, [pc, #528]	; (80089d4 <main+0x5d0>)
 80087c2:	6820      	ldr	r0, [r4, #0]
 80087c4:	681a      	ldr	r2, [r3, #0]
 80087c6:	f007 fb7c 	bl	800fec2 <Network::JoinGroup(int, unsigned int)>
 80087ca:	2302      	movs	r3, #2
 80087cc:	f248 0280 	movw	r2, #32896	; 0x8080
 80087d0:	4981      	ldr	r1, [pc, #516]	; (80089d8 <main+0x5d4>)
 80087d2:	a873      	add	r0, sp, #460	; 0x1cc
 80087d4:	f7ff fd83 	bl	80082de <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 80087d8:	2303      	movs	r3, #3
 80087da:	f44f 42fa 	mov.w	r2, #32000	; 0x7d00
 80087de:	497f      	ldr	r1, [pc, #508]	; (80089dc <main+0x5d8>)
 80087e0:	a873      	add	r0, sp, #460	; 0x1cc
 80087e2:	f7ff fd7c 	bl	80082de <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 80087e6:	a8f3      	add	r0, sp, #972	; 0x3cc
 80087e8:	f002 f964 	bl	800aab4 <E131Bridge::Start()>
 80087ec:	2302      	movs	r3, #2
 80087ee:	f248 0280 	movw	r2, #32896	; 0x8080
 80087f2:	497b      	ldr	r1, [pc, #492]	; (80089e0 <main+0x5dc>)
 80087f4:	a873      	add	r0, sp, #460	; 0x1cc
 80087f6:	f7ff fd72 	bl	80082de <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 80087fa:	2102      	movs	r1, #2
 80087fc:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8008800:	f00a fa30 	bl	8012c64 <fwdgt_config>
 8008804:	2801      	cmp	r0, #1
 8008806:	bf0c      	ite	eq
 8008808:	2301      	moveq	r3, #1
 800880a:	2300      	movne	r3, #0
 800880c:	f88d 3008 	strb.w	r3, [sp, #8]
 8008810:	d101      	bne.n	8008816 <main+0x412>
 8008812:	f00a fa17 	bl	8012c44 <fwdgt_enable>
 8008816:	f8df 81cc 	ldr.w	r8, [pc, #460]	; 80089e4 <main+0x5e0>
 800881a:	f8df 91cc 	ldr.w	r9, [pc, #460]	; 80089e8 <main+0x5e4>
 800881e:	f8df a1cc 	ldr.w	sl, [pc, #460]	; 80089ec <main+0x5e8>
 8008822:	f00a fa17 	bl	8012c54 <fwdgt_counter_reload>
 8008826:	f7fe fea7 	bl	8007578 <net_handle>
 800882a:	a8f3      	add	r0, sp, #972	; 0x3cc
 800882c:	f002 fd60 	bl	800b2f0 <E131Bridge::Run()>
 8008830:	a841      	add	r0, sp, #260	; 0x104
 8008832:	f001 f907 	bl	8009a44 <RemoteConfig::Run()>
 8008836:	a805      	add	r0, sp, #20
 8008838:	f005 ff94 	bl	800e764 <SpiFlashStore::Flash()>
 800883c:	2d00      	cmp	r5, #0
 800883e:	d036      	beq.n	80088ae <main+0x4aa>
 8008840:	f10d 031a 	add.w	r3, sp, #26
 8008844:	4967      	ldr	r1, [pc, #412]	; (80089e4 <main+0x5e0>)
 8008846:	f899 0000 	ldrb.w	r0, [r9]
 800884a:	aa0e      	add	r2, sp, #56	; 0x38
 800884c:	f006 fe3a 	bl	800f4c4 <udp_recv2>
 8008850:	f1a0 030b 	sub.w	r3, r0, #11
 8008854:	b29b      	uxth	r3, r3
 8008856:	2b05      	cmp	r3, #5
 8008858:	4604      	mov	r4, r0
 800885a:	d828      	bhi.n	80088ae <main+0x4aa>
 800885c:	f8d8 7000 	ldr.w	r7, [r8]
 8008860:	2204      	movs	r2, #4
 8008862:	4639      	mov	r1, r7
 8008864:	4650      	mov	r0, sl
 8008866:	f7ff fc54 	bl	8008112 <memcmp>
 800886a:	bb00      	cbnz	r0, 80088ae <main+0x4aa>
 800886c:	193b      	adds	r3, r7, r4
 800886e:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 8008872:	f107 0b04 	add.w	fp, r7, #4
 8008876:	2b0a      	cmp	r3, #10
 8008878:	bf04      	itt	eq
 800887a:	f104 34ff 	addeq.w	r4, r4, #4294967295	; 0xffffffff
 800887e:	b2a4      	uxtheq	r4, r4
 8008880:	2c0a      	cmp	r4, #10
 8008882:	d050      	beq.n	8008926 <main+0x522>
 8008884:	2c0e      	cmp	r4, #14
 8008886:	d84e      	bhi.n	8008926 <main+0x522>
 8008888:	2206      	movs	r2, #6
 800888a:	4659      	mov	r1, fp
 800888c:	4858      	ldr	r0, [pc, #352]	; (80089f0 <main+0x5ec>)
 800888e:	f7ff fc40 	bl	8008112 <memcmp>
 8008892:	2800      	cmp	r0, #0
 8008894:	d147      	bne.n	8008926 <main+0x522>
 8008896:	2104      	movs	r1, #4
 8008898:	f107 000a 	add.w	r0, r7, #10
 800889c:	f7ff fc55 	bl	800814a <dmxconfigudp::atoi(char const*, unsigned int)>
 80088a0:	285b      	cmp	r0, #91	; 0x5b
 80088a2:	4601      	mov	r1, r0
 80088a4:	d903      	bls.n	80088ae <main+0x4aa>
 80088a6:	4b53      	ldr	r3, [pc, #332]	; (80089f4 <main+0x5f0>)
 80088a8:	6818      	ldr	r0, [r3, #0]
 80088aa:	f005 fd15 	bl	800e2d8 <Dmx::SetDmxBreakTime(unsigned int)>
 80088ae:	a806      	add	r0, sp, #24
 80088b0:	f007 fa52 	bl	800fd58 <MDNS::Run()>
 80088b4:	a8ef      	add	r0, sp, #956	; 0x3bc
 80088b6:	f003 fc4f 	bl	800c158 <LLRPDevice::Run()>
 80088ba:	a853      	add	r0, sp, #332	; 0x14c
 80088bc:	f001 fe94 	bl	800a5e8 <HttpDaemon::Run()>
 80088c0:	9a78      	ldr	r2, [sp, #480]	; 0x1e0
 80088c2:	b16a      	cbz	r2, 80088e0 <main+0x4dc>
 80088c4:	f89d 31dc 	ldrb.w	r3, [sp, #476]	; 0x1dc
 80088c8:	2b00      	cmp	r3, #0
 80088ca:	d177      	bne.n	80089bc <main+0x5b8>
 80088cc:	4b4a      	ldr	r3, [pc, #296]	; (80089f8 <main+0x5f4>)
 80088ce:	9974      	ldr	r1, [sp, #464]	; 0x1d0
 80088d0:	681b      	ldr	r3, [r3, #0]
 80088d2:	1a5b      	subs	r3, r3, r1
 80088d4:	429a      	cmp	r2, r3
 80088d6:	d203      	bcs.n	80088e0 <main+0x4dc>
 80088d8:	2101      	movs	r1, #1
 80088da:	a873      	add	r0, sp, #460	; 0x1cc
 80088dc:	f7ff fd28 	bl	8008330 <Display::SetSleep(bool)>
 80088e0:	991a      	ldr	r1, [sp, #104]	; 0x68
 80088e2:	2900      	cmp	r1, #0
 80088e4:	d09d      	beq.n	8008822 <main+0x41e>
 80088e6:	4a44      	ldr	r2, [pc, #272]	; (80089f8 <main+0x5f4>)
 80088e8:	981c      	ldr	r0, [sp, #112]	; 0x70
 80088ea:	6813      	ldr	r3, [r2, #0]
 80088ec:	1a1b      	subs	r3, r3, r0
 80088ee:	4299      	cmp	r1, r3
 80088f0:	d897      	bhi.n	8008822 <main+0x41e>
 80088f2:	6813      	ldr	r3, [r2, #0]
 80088f4:	931c      	str	r3, [sp, #112]	; 0x70
 80088f6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80088f8:	2b01      	cmp	r3, #1
 80088fa:	f083 0201 	eor.w	r2, r3, #1
 80088fe:	bf18      	it	ne
 8008900:	2301      	movne	r3, #1
 8008902:	921b      	str	r2, [sp, #108]	; 0x6c
 8008904:	bf14      	ite	ne
 8008906:	6133      	strne	r3, [r6, #16]
 8008908:	6173      	streq	r3, [r6, #20]
 800890a:	e78a      	b.n	8008822 <main+0x41e>
 800890c:	f803 1b01 	strb.w	r1, [r3], #1
 8008910:	6a81      	ldr	r1, [r0, #40]	; 0x28
 8008912:	3101      	adds	r1, #1
 8008914:	6281      	str	r1, [r0, #40]	; 0x28
 8008916:	e664      	b.n	80085e2 <main+0x1de>
 8008918:	f20d 3045 	addw	r0, sp, #837	; 0x345
 800891c:	f7ff fc09 	bl	8008132 <memcpy>
 8008920:	f88d 4365 	strb.w	r4, [sp, #869]	; 0x365
 8008924:	e692      	b.n	800864c <main+0x248>
 8008926:	2204      	movs	r2, #4
 8008928:	4659      	mov	r1, fp
 800892a:	4834      	ldr	r0, [pc, #208]	; (80089fc <main+0x5f8>)
 800892c:	f7ff fbf1 	bl	8008112 <memcmp>
 8008930:	b978      	cbnz	r0, 8008952 <main+0x54e>
 8008932:	2107      	movs	r1, #7
 8008934:	f107 0008 	add.w	r0, r7, #8
 8008938:	f7ff fc07 	bl	800814a <dmxconfigudp::atoi(char const*, unsigned int)>
 800893c:	4b30      	ldr	r3, [pc, #192]	; (8008a00 <main+0x5fc>)
 800893e:	f1a0 020c 	sub.w	r2, r0, #12
 8008942:	429a      	cmp	r2, r3
 8008944:	4601      	mov	r1, r0
 8008946:	d8b2      	bhi.n	80088ae <main+0x4aa>
 8008948:	4b2a      	ldr	r3, [pc, #168]	; (80089f4 <main+0x5f0>)
 800894a:	6818      	ldr	r0, [r3, #0]
 800894c:	f005 fcce 	bl	800e2ec <Dmx::SetDmxMabTime(unsigned int)>
 8008950:	e7ad      	b.n	80088ae <main+0x4aa>
 8008952:	2c0c      	cmp	r4, #12
 8008954:	d916      	bls.n	8008984 <main+0x580>
 8008956:	2c0e      	cmp	r4, #14
 8008958:	d82c      	bhi.n	80089b4 <main+0x5b0>
 800895a:	2208      	movs	r2, #8
 800895c:	4659      	mov	r1, fp
 800895e:	4829      	ldr	r0, [pc, #164]	; (8008a04 <main+0x600>)
 8008960:	f7ff fbd7 	bl	8008112 <memcmp>
 8008964:	bb30      	cbnz	r0, 80089b4 <main+0x5b0>
 8008966:	2102      	movs	r1, #2
 8008968:	f107 000c 	add.w	r0, r7, #12
 800896c:	f7ff fbed 	bl	800814a <dmxconfigudp::atoi(char const*, unsigned int)>
 8008970:	4601      	mov	r1, r0
 8008972:	b110      	cbz	r0, 800897a <main+0x576>
 8008974:	4b24      	ldr	r3, [pc, #144]	; (8008a08 <main+0x604>)
 8008976:	fbb3 f1f0 	udiv	r1, r3, r0
 800897a:	4b1e      	ldr	r3, [pc, #120]	; (80089f4 <main+0x5f0>)
 800897c:	6818      	ldr	r0, [r3, #0]
 800897e:	f005 fc77 	bl	800e270 <Dmx::SetDmxPeriodTime(unsigned int)>
 8008982:	e794      	b.n	80088ae <main+0x4aa>
 8008984:	2c0a      	cmp	r4, #10
 8008986:	d092      	beq.n	80088ae <main+0x4aa>
 8008988:	2206      	movs	r2, #6
 800898a:	4659      	mov	r1, fp
 800898c:	481f      	ldr	r0, [pc, #124]	; (8008a0c <main+0x608>)
 800898e:	f7ff fbc0 	bl	8008112 <memcmp>
 8008992:	2800      	cmp	r0, #0
 8008994:	d18b      	bne.n	80088ae <main+0x4aa>
 8008996:	2103      	movs	r1, #3
 8008998:	f107 000a 	add.w	r0, r7, #10
 800899c:	f7ff fbd5 	bl	800814a <dmxconfigudp::atoi(char const*, unsigned int)>
 80089a0:	1e83      	subs	r3, r0, #2
 80089a2:	f5b3 7fff 	cmp.w	r3, #510	; 0x1fe
 80089a6:	d882      	bhi.n	80088ae <main+0x4aa>
 80089a8:	4b12      	ldr	r3, [pc, #72]	; (80089f4 <main+0x5f0>)
 80089aa:	b281      	uxth	r1, r0
 80089ac:	6818      	ldr	r0, [r3, #0]
 80089ae:	f005 fca7 	bl	800e300 <Dmx::SetDmxSlots(unsigned short)>
 80089b2:	e77c      	b.n	80088ae <main+0x4aa>
 80089b4:	2c0d      	cmp	r4, #13
 80089b6:	f47f af7a 	bne.w	80088ae <main+0x4aa>
 80089ba:	e7e5      	b.n	8008988 <main+0x584>
 80089bc:	f7ff fcd8 	bl	8008370 <display::timeout::gpio_renew()>
 80089c0:	2800      	cmp	r0, #0
 80089c2:	d08d      	beq.n	80088e0 <main+0x4dc>
 80089c4:	2100      	movs	r1, #0
 80089c6:	e788      	b.n	80088da <main+0x4d6>
 80089c8:	2000b1a0 	andcs	fp, r0, r0, lsr #3
 80089cc:	08015d0a 	stmdaeq	r1, {r1, r3, r8, sl, fp, ip, lr}
 80089d0:	20000000 	andcs	r0, r0, r0
 80089d4:	20001ef0 	strdcs	r1, [r0], -r0
 80089d8:	08015cfb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r7, sl, fp, ip, lr}
 80089dc:	08015b2f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r8, r9, fp, ip, lr}
 80089e0:	08015b5a 	stmdaeq	r1, {r1, r3, r4, r6, r8, r9, fp, ip, lr}
 80089e4:	20002880 	andcs	r2, r0, r0, lsl #17
 80089e8:	20000010 	andcs	r0, r0, r0, lsl r0
 80089ec:	08014919 	stmdaeq	r1, {r0, r3, r4, r8, fp, lr}
 80089f0:	0801491e 	stmdaeq	r1, {r1, r2, r3, r4, r8, fp, lr}
 80089f4:	20002878 	andcs	r2, r0, r8, ror r8
 80089f8:	2000b87c 	andcs	fp, r0, ip, ror r8
 80089fc:	08014925 	stmdaeq	r1, {r0, r2, r5, r8, fp, lr}
 8008a00:	000f4234 	andeq	r4, pc, r4, lsr r2	; <UNPREDICTABLE>
 8008a04:	0801492a 	stmdaeq	r1, {r1, r3, r5, r8, fp, lr}
 8008a08:	000f4240 	andeq	r4, pc, r0, asr #4
 8008a0c:	08014933 	stmdaeq	r1, {r0, r1, r4, r5, r8, fp, lr}

08008a10 <DmxInput::~DmxInput()>:
 8008a10:	4770      	bx	lr
	...

08008a14 <DmxInput::Start(unsigned int)>:
 8008a14:	2301      	movs	r3, #1
 8008a16:	b430      	push	{r4, r5}
 8008a18:	4c08      	ldr	r4, [pc, #32]	; (8008a3c <DmxInput::Start(unsigned int)+0x28>)
 8008a1a:	fa03 f001 	lsl.w	r0, r3, r1
 8008a1e:	7822      	ldrb	r2, [r4, #0]
 8008a20:	ea30 0502 	bics.w	r5, r0, r2
 8008a24:	d007      	beq.n	8008a36 <DmxInput::Start(unsigned int)+0x22>
 8008a26:	4302      	orrs	r2, r0
 8008a28:	4805      	ldr	r0, [pc, #20]	; (8008a40 <DmxInput::Start(unsigned int)+0x2c>)
 8008a2a:	7022      	strb	r2, [r4, #0]
 8008a2c:	6800      	ldr	r0, [r0, #0]
 8008a2e:	461a      	mov	r2, r3
 8008a30:	bc30      	pop	{r4, r5}
 8008a32:	f005 bacb 	b.w	800dfcc <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8008a36:	bc30      	pop	{r4, r5}
 8008a38:	4770      	bx	lr
 8008a3a:	bf00      	nop
 8008a3c:	200000f8 	strdcs	r0, [r0], -r8
 8008a40:	20002878 	andcs	r2, r0, r8, ror r8

08008a44 <DmxInput::Stop(unsigned int)>:
 8008a44:	2201      	movs	r2, #1
 8008a46:	b430      	push	{r4, r5}
 8008a48:	4c08      	ldr	r4, [pc, #32]	; (8008a6c <DmxInput::Stop(unsigned int)+0x28>)
 8008a4a:	fa02 f001 	lsl.w	r0, r2, r1
 8008a4e:	7823      	ldrb	r3, [r4, #0]
 8008a50:	ea30 0503 	bics.w	r5, r0, r3
 8008a54:	d108      	bne.n	8008a68 <DmxInput::Stop(unsigned int)+0x24>
 8008a56:	ea23 0300 	bic.w	r3, r3, r0
 8008a5a:	4805      	ldr	r0, [pc, #20]	; (8008a70 <DmxInput::Stop(unsigned int)+0x2c>)
 8008a5c:	7023      	strb	r3, [r4, #0]
 8008a5e:	6800      	ldr	r0, [r0, #0]
 8008a60:	2300      	movs	r3, #0
 8008a62:	bc30      	pop	{r4, r5}
 8008a64:	f005 bab2 	b.w	800dfcc <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 8008a68:	bc30      	pop	{r4, r5}
 8008a6a:	4770      	bx	lr
 8008a6c:	200000f8 	strdcs	r0, [r0], -r8
 8008a70:	20002878 	andcs	r2, r0, r8, ror r8

08008a74 <DmxInput::Handler(unsigned int, unsigned int&, unsigned int&)>:
 8008a74:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008a78:	f8df 8030 	ldr.w	r8, [pc, #48]	; 8008aac <DmxInput::Handler(unsigned int, unsigned int&, unsigned int&)+0x38>
 8008a7c:	461e      	mov	r6, r3
 8008a7e:	f8d8 0000 	ldr.w	r0, [r8]
 8008a82:	460f      	mov	r7, r1
 8008a84:	4615      	mov	r5, r2
 8008a86:	f005 fcff 	bl	800e488 <Dmx::GetDmxAvailable(unsigned int)>
 8008a8a:	4639      	mov	r1, r7
 8008a8c:	4604      	mov	r4, r0
 8008a8e:	f8d8 0000 	ldr.w	r0, [r8]
 8008a92:	f005 fd0d 	bl	800e4b0 <Dmx::GetUpdatesPerSecond(unsigned int)>
 8008a96:	6030      	str	r0, [r6, #0]
 8008a98:	b134      	cbz	r4, 8008aa8 <DmxInput::Handler(unsigned int, unsigned int&, unsigned int&)+0x34>
 8008a9a:	f8d4 3204 	ldr.w	r3, [r4, #516]	; 0x204
 8008a9e:	3301      	adds	r3, #1
 8008aa0:	4620      	mov	r0, r4
 8008aa2:	602b      	str	r3, [r5, #0]
 8008aa4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008aa8:	4623      	mov	r3, r4
 8008aaa:	e7f9      	b.n	8008aa0 <DmxInput::Handler(unsigned int, unsigned int&, unsigned int&)+0x2c>
 8008aac:	20002878 	andcs	r2, r0, r8, ror r8

08008ab0 <DmxInput::~DmxInput()>:
 8008ab0:	b510      	push	{r4, lr}
 8008ab2:	4604      	mov	r4, r0
 8008ab4:	f009 fd16 	bl	80124e4 <operator delete(void*)>
 8008ab8:	4620      	mov	r0, r4
 8008aba:	bd10      	pop	{r4, pc}

08008abc <DmxInput::DmxInput()>:
 8008abc:	b538      	push	{r3, r4, r5, lr}
 8008abe:	4604      	mov	r4, r0
 8008ac0:	2500      	movs	r5, #0
 8008ac2:	4b05      	ldr	r3, [pc, #20]	; (8008ad8 <DmxInput::DmxInput()+0x1c>)
 8008ac4:	6003      	str	r3, [r0, #0]
 8008ac6:	4629      	mov	r1, r5
 8008ac8:	4620      	mov	r0, r4
 8008aca:	3501      	adds	r5, #1
 8008acc:	f7ff ffba 	bl	8008a44 <DmxInput::Stop(unsigned int)>
 8008ad0:	2d08      	cmp	r5, #8
 8008ad2:	d1f8      	bne.n	8008ac6 <DmxInput::DmxInput()+0xa>
 8008ad4:	4620      	mov	r0, r4
 8008ad6:	bd38      	pop	{r3, r4, r5, pc}
 8008ad8:	080149b8 	stmdaeq	r1, {r3, r4, r5, r7, r8, fp, lr}

08008adc <RDMSoftwareVersion::GetVersion()>:
 8008adc:	4800      	ldr	r0, [pc, #0]	; (8008ae0 <RDMSoftwareVersion::GetVersion()+0x4>)
 8008ade:	4770      	bx	lr
 8008ae0:	080149cc 	stmdaeq	r1, {r2, r3, r6, r7, r8, fp, lr}

08008ae4 <RDMSoftwareVersion::GetVersionLength()>:
 8008ae4:	2003      	movs	r0, #3
 8008ae6:	4770      	bx	lr

08008ae8 <RDMSoftwareVersion::GetVersionId()>:
 8008ae8:	4800      	ldr	r0, [pc, #0]	; (8008aec <RDMSoftwareVersion::GetVersionId()+0x4>)
 8008aea:	4770      	bx	lr
 8008aec:	63445c9d 	movtvs	r5, #19613	; 0x4c9d

08008af0 <_itostr>:
 8008af0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008af2:	0fc7      	lsrs	r7, r0, #31
 8008af4:	b091      	sub	sp, #68	; 0x44
 8008af6:	bf18      	it	ne
 8008af8:	4240      	negne	r0, r0
 8008afa:	f10d 043f 	add.w	r4, sp, #63	; 0x3f
 8008afe:	b9c8      	cbnz	r0, 8008b34 <_itostr+0x44>
 8008b00:	2330      	movs	r3, #48	; 0x30
 8008b02:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8008b06:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 8008b0a:	b132      	cbz	r2, 8008b1a <_itostr+0x2a>
 8008b0c:	4668      	mov	r0, sp
 8008b0e:	2530      	movs	r5, #48	; 0x30
 8008b10:	1ae6      	subs	r6, r4, r3
 8008b12:	4296      	cmp	r6, r2
 8008b14:	da01      	bge.n	8008b1a <_itostr+0x2a>
 8008b16:	4283      	cmp	r3, r0
 8008b18:	d81c      	bhi.n	8008b54 <_itostr+0x64>
 8008b1a:	b117      	cbz	r7, 8008b22 <_itostr+0x32>
 8008b1c:	222d      	movs	r2, #45	; 0x2d
 8008b1e:	f803 2901 	strb.w	r2, [r3], #-1
 8008b22:	3301      	adds	r3, #1
 8008b24:	1ae0      	subs	r0, r4, r3
 8008b26:	3901      	subs	r1, #1
 8008b28:	aa10      	add	r2, sp, #64	; 0x40
 8008b2a:	4293      	cmp	r3, r2
 8008b2c:	d315      	bcc.n	8008b5a <_itostr+0x6a>
 8008b2e:	3001      	adds	r0, #1
 8008b30:	b011      	add	sp, #68	; 0x44
 8008b32:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008b34:	4623      	mov	r3, r4
 8008b36:	250a      	movs	r5, #10
 8008b38:	46ec      	mov	ip, sp
 8008b3a:	fb90 f6f5 	sdiv	r6, r0, r5
 8008b3e:	fb05 0016 	mls	r0, r5, r6, r0
 8008b42:	3030      	adds	r0, #48	; 0x30
 8008b44:	f803 0901 	strb.w	r0, [r3], #-1
 8008b48:	4630      	mov	r0, r6
 8008b4a:	2e00      	cmp	r6, #0
 8008b4c:	d0dd      	beq.n	8008b0a <_itostr+0x1a>
 8008b4e:	4563      	cmp	r3, ip
 8008b50:	d1f3      	bne.n	8008b3a <_itostr+0x4a>
 8008b52:	e7da      	b.n	8008b0a <_itostr+0x1a>
 8008b54:	f803 5901 	strb.w	r5, [r3], #-1
 8008b58:	e7da      	b.n	8008b10 <_itostr+0x20>
 8008b5a:	f813 2b01 	ldrb.w	r2, [r3], #1
 8008b5e:	f801 2f01 	strb.w	r2, [r1, #1]!
 8008b62:	e7e1      	b.n	8008b28 <_itostr+0x38>

08008b64 <_xputch>:
 8008b64:	4603      	mov	r3, r0
 8008b66:	b410      	push	{r4}
 8008b68:	4c08      	ldr	r4, [pc, #32]	; (8008b8c <_xputch+0x28>)
 8008b6a:	68da      	ldr	r2, [r3, #12]
 8008b6c:	4608      	mov	r0, r1
 8008b6e:	6821      	ldr	r1, [r4, #0]
 8008b70:	3201      	adds	r2, #1
 8008b72:	60da      	str	r2, [r3, #12]
 8008b74:	b139      	cbz	r1, 8008b86 <_xputch+0x22>
 8008b76:	691b      	ldr	r3, [r3, #16]
 8008b78:	429a      	cmp	r2, r3
 8008b7a:	da02      	bge.n	8008b82 <_xputch+0x1e>
 8008b7c:	1c4b      	adds	r3, r1, #1
 8008b7e:	6023      	str	r3, [r4, #0]
 8008b80:	7008      	strb	r0, [r1, #0]
 8008b82:	bc10      	pop	{r4}
 8008b84:	4770      	bx	lr
 8008b86:	bc10      	pop	{r4}
 8008b88:	f009 bb18 	b.w	80121bc <console_putc>
 8008b8c:	200000fc 	strdcs	r0, [r0], -ip

08008b90 <_format_int>:
 8008b90:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008b94:	4698      	mov	r8, r3
 8008b96:	b091      	sub	sp, #68	; 0x44
 8008b98:	ea52 0308 	orrs.w	r3, r2, r8
 8008b9c:	4606      	mov	r6, r0
 8008b9e:	4617      	mov	r7, r2
 8008ba0:	f10d 053f 	add.w	r5, sp, #63	; 0x3f
 8008ba4:	d133      	bne.n	8008c0e <_format_int+0x7e>
 8008ba6:	2330      	movs	r3, #48	; 0x30
 8008ba8:	f10d 043e 	add.w	r4, sp, #62	; 0x3e
 8008bac:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8008bb0:	6833      	ldr	r3, [r6, #0]
 8008bb2:	07d8      	lsls	r0, r3, #31
 8008bb4:	d507      	bpl.n	8008bc6 <_format_int+0x36>
 8008bb6:	466a      	mov	r2, sp
 8008bb8:	2030      	movs	r0, #48	; 0x30
 8008bba:	6871      	ldr	r1, [r6, #4]
 8008bbc:	1b2f      	subs	r7, r5, r4
 8008bbe:	428f      	cmp	r7, r1
 8008bc0:	da01      	bge.n	8008bc6 <_format_int+0x36>
 8008bc2:	4294      	cmp	r4, r2
 8008bc4:	d839      	bhi.n	8008c3a <_format_int+0xaa>
 8008bc6:	0699      	lsls	r1, r3, #26
 8008bc8:	d507      	bpl.n	8008bda <_format_int+0x4a>
 8008bca:	466a      	mov	r2, sp
 8008bcc:	2030      	movs	r0, #48	; 0x30
 8008bce:	68b1      	ldr	r1, [r6, #8]
 8008bd0:	1b2f      	subs	r7, r5, r4
 8008bd2:	428f      	cmp	r7, r1
 8008bd4:	da01      	bge.n	8008bda <_format_int+0x4a>
 8008bd6:	4294      	cmp	r4, r2
 8008bd8:	d832      	bhi.n	8008c40 <_format_int+0xb0>
 8008bda:	071a      	lsls	r2, r3, #28
 8008bdc:	bf44      	itt	mi
 8008bde:	222d      	movmi	r2, #45	; 0x2d
 8008be0:	f804 2901 	strbmi.w	r2, [r4], #-1
 8008be4:	065b      	lsls	r3, r3, #25
 8008be6:	d407      	bmi.n	8008bf8 <_format_int+0x68>
 8008be8:	466b      	mov	r3, sp
 8008bea:	2120      	movs	r1, #32
 8008bec:	68b2      	ldr	r2, [r6, #8]
 8008bee:	1b28      	subs	r0, r5, r4
 8008bf0:	4290      	cmp	r0, r2
 8008bf2:	da01      	bge.n	8008bf8 <_format_int+0x68>
 8008bf4:	429c      	cmp	r4, r3
 8008bf6:	d826      	bhi.n	8008c46 <_format_int+0xb6>
 8008bf8:	1b2d      	subs	r5, r5, r4
 8008bfa:	3401      	adds	r4, #1
 8008bfc:	ab10      	add	r3, sp, #64	; 0x40
 8008bfe:	429c      	cmp	r4, r3
 8008c00:	d324      	bcc.n	8008c4c <_format_int+0xbc>
 8008c02:	68b3      	ldr	r3, [r6, #8]
 8008c04:	42ab      	cmp	r3, r5
 8008c06:	dc27      	bgt.n	8008c58 <_format_int+0xc8>
 8008c08:	b011      	add	sp, #68	; 0x44
 8008c0a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8008c0e:	462c      	mov	r4, r5
 8008c10:	46e9      	mov	r9, sp
 8008c12:	4638      	mov	r0, r7
 8008c14:	4641      	mov	r1, r8
 8008c16:	220a      	movs	r2, #10
 8008c18:	2300      	movs	r3, #0
 8008c1a:	f7ff fa3d 	bl	8008098 <__aeabi_uldivmod>
 8008c1e:	3230      	adds	r2, #48	; 0x30
 8008c20:	f804 2901 	strb.w	r2, [r4], #-1
 8008c24:	463a      	mov	r2, r7
 8008c26:	4643      	mov	r3, r8
 8008c28:	2a0a      	cmp	r2, #10
 8008c2a:	f173 0300 	sbcs.w	r3, r3, #0
 8008c2e:	4607      	mov	r7, r0
 8008c30:	4688      	mov	r8, r1
 8008c32:	d3bd      	bcc.n	8008bb0 <_format_int+0x20>
 8008c34:	454c      	cmp	r4, r9
 8008c36:	d1ec      	bne.n	8008c12 <_format_int+0x82>
 8008c38:	e7ba      	b.n	8008bb0 <_format_int+0x20>
 8008c3a:	f804 0901 	strb.w	r0, [r4], #-1
 8008c3e:	e7bd      	b.n	8008bbc <_format_int+0x2c>
 8008c40:	f804 0901 	strb.w	r0, [r4], #-1
 8008c44:	e7c4      	b.n	8008bd0 <_format_int+0x40>
 8008c46:	f804 1901 	strb.w	r1, [r4], #-1
 8008c4a:	e7d0      	b.n	8008bee <_format_int+0x5e>
 8008c4c:	4630      	mov	r0, r6
 8008c4e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8008c52:	f7ff ff87 	bl	8008b64 <_xputch>
 8008c56:	e7d1      	b.n	8008bfc <_format_int+0x6c>
 8008c58:	2120      	movs	r1, #32
 8008c5a:	4630      	mov	r0, r6
 8008c5c:	f7ff ff82 	bl	8008b64 <_xputch>
 8008c60:	3501      	adds	r5, #1
 8008c62:	e7ce      	b.n	8008c02 <_format_int+0x72>

08008c64 <_format_hex>:
 8008c64:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008c66:	b091      	sub	sp, #68	; 0x44
 8008c68:	4606      	mov	r6, r0
 8008c6a:	6804      	ldr	r4, [r0, #0]
 8008c6c:	f10d 023f 	add.w	r2, sp, #63	; 0x3f
 8008c70:	bb61      	cbnz	r1, 8008ccc <_format_hex+0x68>
 8008c72:	2330      	movs	r3, #48	; 0x30
 8008c74:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8008c78:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 8008c7c:	07e5      	lsls	r5, r4, #31
 8008c7e:	d507      	bpl.n	8008c90 <_format_hex+0x2c>
 8008c80:	4669      	mov	r1, sp
 8008c82:	2530      	movs	r5, #48	; 0x30
 8008c84:	6870      	ldr	r0, [r6, #4]
 8008c86:	1ad7      	subs	r7, r2, r3
 8008c88:	4287      	cmp	r7, r0
 8008c8a:	da01      	bge.n	8008c90 <_format_hex+0x2c>
 8008c8c:	428b      	cmp	r3, r1
 8008c8e:	d831      	bhi.n	8008cf4 <_format_hex+0x90>
 8008c90:	06a0      	lsls	r0, r4, #26
 8008c92:	d507      	bpl.n	8008ca4 <_format_hex+0x40>
 8008c94:	4669      	mov	r1, sp
 8008c96:	2530      	movs	r5, #48	; 0x30
 8008c98:	68b0      	ldr	r0, [r6, #8]
 8008c9a:	1ad7      	subs	r7, r2, r3
 8008c9c:	4287      	cmp	r7, r0
 8008c9e:	da01      	bge.n	8008ca4 <_format_hex+0x40>
 8008ca0:	428b      	cmp	r3, r1
 8008ca2:	d82a      	bhi.n	8008cfa <_format_hex+0x96>
 8008ca4:	0661      	lsls	r1, r4, #25
 8008ca6:	d407      	bmi.n	8008cb8 <_format_hex+0x54>
 8008ca8:	4669      	mov	r1, sp
 8008caa:	2420      	movs	r4, #32
 8008cac:	68b0      	ldr	r0, [r6, #8]
 8008cae:	1ad5      	subs	r5, r2, r3
 8008cb0:	4285      	cmp	r5, r0
 8008cb2:	da01      	bge.n	8008cb8 <_format_hex+0x54>
 8008cb4:	428b      	cmp	r3, r1
 8008cb6:	d823      	bhi.n	8008d00 <_format_hex+0x9c>
 8008cb8:	1ad5      	subs	r5, r2, r3
 8008cba:	1c5c      	adds	r4, r3, #1
 8008cbc:	ab10      	add	r3, sp, #64	; 0x40
 8008cbe:	429c      	cmp	r4, r3
 8008cc0:	d321      	bcc.n	8008d06 <_format_hex+0xa2>
 8008cc2:	68b3      	ldr	r3, [r6, #8]
 8008cc4:	429d      	cmp	r5, r3
 8008cc6:	db24      	blt.n	8008d12 <_format_hex+0xae>
 8008cc8:	b011      	add	sp, #68	; 0x44
 8008cca:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008ccc:	f014 0f02 	tst.w	r4, #2
 8008cd0:	bf0c      	ite	eq
 8008cd2:	2757      	moveq	r7, #87	; 0x57
 8008cd4:	2737      	movne	r7, #55	; 0x37
 8008cd6:	4613      	mov	r3, r2
 8008cd8:	466d      	mov	r5, sp
 8008cda:	f001 000f 	and.w	r0, r1, #15
 8008cde:	2809      	cmp	r0, #9
 8008ce0:	bf94      	ite	ls
 8008ce2:	3030      	addls	r0, #48	; 0x30
 8008ce4:	19c0      	addhi	r0, r0, r7
 8008ce6:	0909      	lsrs	r1, r1, #4
 8008ce8:	f803 0901 	strb.w	r0, [r3], #-1
 8008cec:	d0c6      	beq.n	8008c7c <_format_hex+0x18>
 8008cee:	42ab      	cmp	r3, r5
 8008cf0:	d1f3      	bne.n	8008cda <_format_hex+0x76>
 8008cf2:	e7c3      	b.n	8008c7c <_format_hex+0x18>
 8008cf4:	f803 5901 	strb.w	r5, [r3], #-1
 8008cf8:	e7c5      	b.n	8008c86 <_format_hex+0x22>
 8008cfa:	f803 5901 	strb.w	r5, [r3], #-1
 8008cfe:	e7cc      	b.n	8008c9a <_format_hex+0x36>
 8008d00:	f803 4901 	strb.w	r4, [r3], #-1
 8008d04:	e7d3      	b.n	8008cae <_format_hex+0x4a>
 8008d06:	4630      	mov	r0, r6
 8008d08:	f814 1b01 	ldrb.w	r1, [r4], #1
 8008d0c:	f7ff ff2a 	bl	8008b64 <_xputch>
 8008d10:	e7d4      	b.n	8008cbc <_format_hex+0x58>
 8008d12:	2120      	movs	r1, #32
 8008d14:	4630      	mov	r0, r6
 8008d16:	f7ff ff25 	bl	8008b64 <_xputch>
 8008d1a:	3501      	adds	r5, #1
 8008d1c:	e7d1      	b.n	8008cc2 <_format_hex+0x5e>
	...

08008d20 <_vprintf>:
 8008d20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008d24:	4614      	mov	r4, r2
 8008d26:	2200      	movs	r2, #0
 8008d28:	460b      	mov	r3, r1
 8008d2a:	f04f 0800 	mov.w	r8, #0
 8008d2e:	b099      	sub	sp, #100	; 0x64
 8008d30:	e9cd 2006 	strd	r2, r0, [sp, #24]
 8008d34:	af08      	add	r7, sp, #32
 8008d36:	7819      	ldrb	r1, [r3, #0]
 8008d38:	b919      	cbnz	r1, 8008d42 <_vprintf+0x22>
 8008d3a:	9806      	ldr	r0, [sp, #24]
 8008d3c:	b019      	add	sp, #100	; 0x64
 8008d3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008d42:	2925      	cmp	r1, #37	; 0x25
 8008d44:	f103 0601 	add.w	r6, r3, #1
 8008d48:	d004      	beq.n	8008d54 <_vprintf+0x34>
 8008d4a:	a803      	add	r0, sp, #12
 8008d4c:	f7ff ff0a 	bl	8008b64 <_xputch>
 8008d50:	4633      	mov	r3, r6
 8008d52:	e7f0      	b.n	8008d36 <_vprintf+0x16>
 8008d54:	2200      	movs	r2, #0
 8008d56:	e9cd 2203 	strd	r2, r2, [sp, #12]
 8008d5a:	9205      	str	r2, [sp, #20]
 8008d5c:	785a      	ldrb	r2, [r3, #1]
 8008d5e:	2a30      	cmp	r2, #48	; 0x30
 8008d60:	d129      	bne.n	8008db6 <_vprintf+0x96>
 8008d62:	2220      	movs	r2, #32
 8008d64:	9203      	str	r2, [sp, #12]
 8008d66:	1c9e      	adds	r6, r3, #2
 8008d68:	2200      	movs	r2, #0
 8008d6a:	4635      	mov	r5, r6
 8008d6c:	4613      	mov	r3, r2
 8008d6e:	f04f 0c0a 	mov.w	ip, #10
 8008d72:	7829      	ldrb	r1, [r5, #0]
 8008d74:	462e      	mov	r6, r5
 8008d76:	f1a1 0030 	sub.w	r0, r1, #48	; 0x30
 8008d7a:	2809      	cmp	r0, #9
 8008d7c:	f105 0501 	add.w	r5, r5, #1
 8008d80:	d91d      	bls.n	8008dbe <_vprintf+0x9e>
 8008d82:	b12a      	cbz	r2, 8008d90 <_vprintf+0x70>
 8008d84:	9305      	str	r3, [sp, #20]
 8008d86:	b11b      	cbz	r3, 8008d90 <_vprintf+0x70>
 8008d88:	9b03      	ldr	r3, [sp, #12]
 8008d8a:	f043 0310 	orr.w	r3, r3, #16
 8008d8e:	9303      	str	r3, [sp, #12]
 8008d90:	292e      	cmp	r1, #46	; 0x2e
 8008d92:	d123      	bne.n	8008ddc <_vprintf+0xbc>
 8008d94:	7873      	ldrb	r3, [r6, #1]
 8008d96:	2b2a      	cmp	r3, #42	; 0x2a
 8008d98:	d015      	beq.n	8008dc6 <_vprintf+0xa6>
 8008d9a:	2100      	movs	r1, #0
 8008d9c:	250a      	movs	r5, #10
 8008d9e:	460a      	mov	r2, r1
 8008da0:	1c70      	adds	r0, r6, #1
 8008da2:	7803      	ldrb	r3, [r0, #0]
 8008da4:	4606      	mov	r6, r0
 8008da6:	3b30      	subs	r3, #48	; 0x30
 8008da8:	2b09      	cmp	r3, #9
 8008daa:	f100 0001 	add.w	r0, r0, #1
 8008dae:	d959      	bls.n	8008e64 <_vprintf+0x144>
 8008db0:	b181      	cbz	r1, 8008dd4 <_vprintf+0xb4>
 8008db2:	9204      	str	r2, [sp, #16]
 8008db4:	e00e      	b.n	8008dd4 <_vprintf+0xb4>
 8008db6:	2a2d      	cmp	r2, #45	; 0x2d
 8008db8:	d1d6      	bne.n	8008d68 <_vprintf+0x48>
 8008dba:	2240      	movs	r2, #64	; 0x40
 8008dbc:	e7d2      	b.n	8008d64 <_vprintf+0x44>
 8008dbe:	2201      	movs	r2, #1
 8008dc0:	fb0c 0303 	mla	r3, ip, r3, r0
 8008dc4:	e7d5      	b.n	8008d72 <_vprintf+0x52>
 8008dc6:	f854 3b04 	ldr.w	r3, [r4], #4
 8008dca:	3602      	adds	r6, #2
 8008dcc:	2b00      	cmp	r3, #0
 8008dce:	bfb8      	it	lt
 8008dd0:	425b      	neglt	r3, r3
 8008dd2:	9304      	str	r3, [sp, #16]
 8008dd4:	9b03      	ldr	r3, [sp, #12]
 8008dd6:	f043 0301 	orr.w	r3, r3, #1
 8008dda:	9303      	str	r3, [sp, #12]
 8008ddc:	7833      	ldrb	r3, [r6, #0]
 8008dde:	2b6c      	cmp	r3, #108	; 0x6c
 8008de0:	bf04      	itt	eq
 8008de2:	9b03      	ldreq	r3, [sp, #12]
 8008de4:	3601      	addeq	r6, #1
 8008de6:	7831      	ldrb	r1, [r6, #0]
 8008de8:	bf04      	itt	eq
 8008dea:	f043 0304 	orreq.w	r3, r3, #4
 8008dee:	9303      	streq	r3, [sp, #12]
 8008df0:	2958      	cmp	r1, #88	; 0x58
 8008df2:	f000 8171 	beq.w	80090d8 <_vprintf+0x3b8>
 8008df6:	f1a1 0363 	sub.w	r3, r1, #99	; 0x63
 8008dfa:	b2da      	uxtb	r2, r3
 8008dfc:	2a15      	cmp	r2, #21
 8008dfe:	d8a4      	bhi.n	8008d4a <_vprintf+0x2a>
 8008e00:	2b15      	cmp	r3, #21
 8008e02:	d8a2      	bhi.n	8008d4a <_vprintf+0x2a>
 8008e04:	a201      	add	r2, pc, #4	; (adr r2, 8008e0c <_vprintf+0xec>)
 8008e06:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008e0a:	bf00      	nop
 8008e0c:	08008e6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, pc}
 8008e10:	08008e7f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r6, r9, sl, fp, pc}
 8008e14:	08008d4b 	stmdaeq	r0, {r0, r1, r3, r6, r8, sl, fp, pc}
 8008e18:	08008eb5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r9, sl, fp, pc}
 8008e1c:	08008d4b 	stmdaeq	r0, {r0, r1, r3, r6, r8, sl, fp, pc}
 8008e20:	08008d4b 	stmdaeq	r0, {r0, r1, r3, r6, r8, sl, fp, pc}
 8008e24:	08008e7f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r6, r9, sl, fp, pc}
 8008e28:	08008d4b 	stmdaeq	r0, {r0, r1, r3, r6, r8, sl, fp, pc}
 8008e2c:	08008d4b 	stmdaeq	r0, {r0, r1, r3, r6, r8, sl, fp, pc}
 8008e30:	08008d4b 	stmdaeq	r0, {r0, r1, r3, r6, r8, sl, fp, pc}
 8008e34:	08008d4b 	stmdaeq	r0, {r0, r1, r3, r6, r8, sl, fp, pc}
 8008e38:	08008d4b 	stmdaeq	r0, {r0, r1, r3, r6, r8, sl, fp, pc}
 8008e3c:	08008d4b 	stmdaeq	r0, {r0, r1, r3, r6, r8, sl, fp, pc}
 8008e40:	0800901b 	stmdaeq	r0, {r0, r1, r3, r4, ip, pc}
 8008e44:	08008d4b 	stmdaeq	r0, {r0, r1, r3, r6, r8, sl, fp, pc}
 8008e48:	08008d4b 	stmdaeq	r0, {r0, r1, r3, r6, r8, sl, fp, pc}
 8008e4c:	08009043 	stmdaeq	r0, {r0, r1, r6, ip, pc}
 8008e50:	08008d4b 	stmdaeq	r0, {r0, r1, r3, r6, r8, sl, fp, pc}
 8008e54:	080090b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, ip, pc}
 8008e58:	08008d4b 	stmdaeq	r0, {r0, r1, r3, r6, r8, sl, fp, pc}
 8008e5c:	08008d4b 	stmdaeq	r0, {r0, r1, r3, r6, r8, sl, fp, pc}
 8008e60:	080090e1 	stmdaeq	r0, {r0, r5, r6, r7, ip, pc}
 8008e64:	2101      	movs	r1, #1
 8008e66:	fb05 3202 	mla	r2, r5, r2, r3
 8008e6a:	e79a      	b.n	8008da2 <_vprintf+0x82>
 8008e6c:	4625      	mov	r5, r4
 8008e6e:	a803      	add	r0, sp, #12
 8008e70:	f855 1b04 	ldr.w	r1, [r5], #4
 8008e74:	f7ff fe76 	bl	8008b64 <_xputch>
 8008e78:	462c      	mov	r4, r5
 8008e7a:	3601      	adds	r6, #1
 8008e7c:	e768      	b.n	8008d50 <_vprintf+0x30>
 8008e7e:	9903      	ldr	r1, [sp, #12]
 8008e80:	074d      	lsls	r5, r1, #29
 8008e82:	bf51      	iteee	pl
 8008e84:	4625      	movpl	r5, r4
 8008e86:	3407      	addmi	r4, #7
 8008e88:	f024 0407 	bicmi.w	r4, r4, #7
 8008e8c:	4625      	movmi	r5, r4
 8008e8e:	bf55      	itete	pl
 8008e90:	f855 2b04 	ldrpl.w	r2, [r5], #4
 8008e94:	6863      	ldrmi	r3, [r4, #4]
 8008e96:	17d3      	asrpl	r3, r2, #31
 8008e98:	f855 2b08 	ldrmi.w	r2, [r5], #8
 8008e9c:	2b00      	cmp	r3, #0
 8008e9e:	da05      	bge.n	8008eac <_vprintf+0x18c>
 8008ea0:	f041 0108 	orr.w	r1, r1, #8
 8008ea4:	4252      	negs	r2, r2
 8008ea6:	9103      	str	r1, [sp, #12]
 8008ea8:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8008eac:	a803      	add	r0, sp, #12
 8008eae:	f7ff fe6f 	bl	8008b90 <_format_int>
 8008eb2:	e7e1      	b.n	8008e78 <_vprintf+0x158>
 8008eb4:	3407      	adds	r4, #7
 8008eb6:	f024 0507 	bic.w	r5, r4, #7
 8008eba:	e8f5 0102 	ldrd	r0, r1, [r5], #8
 8008ebe:	f7fe fef1 	bl	8007ca4 <__aeabi_d2f>
 8008ec2:	9b03      	ldr	r3, [sp, #12]
 8008ec4:	4641      	mov	r1, r8
 8008ec6:	07dc      	lsls	r4, r3, #31
 8008ec8:	bf54      	ite	pl
 8008eca:	f04f 0a06 	movpl.w	sl, #6
 8008ece:	f8dd a010 	ldrmi.w	sl, [sp, #16]
 8008ed2:	4681      	mov	r9, r0
 8008ed4:	f7ff f892 	bl	8007ffc <__aeabi_fcmplt>
 8008ed8:	2800      	cmp	r0, #0
 8008eda:	d063      	beq.n	8008fa4 <_vprintf+0x284>
 8008edc:	232d      	movs	r3, #45	; 0x2d
 8008ede:	f109 4900 	add.w	r9, r9, #2147483648	; 0x80000000
 8008ee2:	f88d 3020 	strb.w	r3, [sp, #32]
 8008ee6:	f10d 0b21 	add.w	fp, sp, #33	; 0x21
 8008eea:	4648      	mov	r0, r9
 8008eec:	f7ff f8ae 	bl	800804c <__aeabi_f2iz>
 8008ef0:	4659      	mov	r1, fp
 8008ef2:	2200      	movs	r2, #0
 8008ef4:	4604      	mov	r4, r0
 8008ef6:	f7ff fdfb 	bl	8008af0 <_itostr>
 8008efa:	eb0b 0200 	add.w	r2, fp, r0
 8008efe:	e9cd 2000 	strd	r2, r0, [sp]
 8008f02:	4620      	mov	r0, r4
 8008f04:	f7fe ffd8 	bl	8007eb8 <__aeabi_i2f>
 8008f08:	4601      	mov	r1, r0
 8008f0a:	4648      	mov	r0, r9
 8008f0c:	f7fe ff1e 	bl	8007d4c <__aeabi_fsub>
 8008f10:	222e      	movs	r2, #46	; 0x2e
 8008f12:	4601      	mov	r1, r0
 8008f14:	200a      	movs	r0, #10
 8008f16:	9b00      	ldr	r3, [sp, #0]
 8008f18:	f10a 0901 	add.w	r9, sl, #1
 8008f1c:	1c5c      	adds	r4, r3, #1
 8008f1e:	9b01      	ldr	r3, [sp, #4]
 8008f20:	f80b 2003 	strb.w	r2, [fp, r3]
 8008f24:	4603      	mov	r3, r0
 8008f26:	f1ba 0f00 	cmp.w	sl, #0
 8008f2a:	dc3d      	bgt.n	8008fa8 <_vprintf+0x288>
 8008f2c:	9100      	str	r1, [sp, #0]
 8008f2e:	f7fe ffc3 	bl	8007eb8 <__aeabi_i2f>
 8008f32:	9900      	ldr	r1, [sp, #0]
 8008f34:	f7fe fe02 	bl	8007b3c <__aeabi_fmul>
 8008f38:	f7ff f888 	bl	800804c <__aeabi_f2iz>
 8008f3c:	464a      	mov	r2, r9
 8008f3e:	4621      	mov	r1, r4
 8008f40:	f7ff fdd6 	bl	8008af0 <_itostr>
 8008f44:	4404      	add	r4, r0
 8008f46:	1be0      	subs	r0, r4, r7
 8008f48:	1e44      	subs	r4, r0, #1
 8008f4a:	5d3b      	ldrb	r3, [r7, r4]
 8008f4c:	193a      	adds	r2, r7, r4
 8008f4e:	2b34      	cmp	r3, #52	; 0x34
 8008f50:	d910      	bls.n	8008f74 <_vprintf+0x254>
 8008f52:	f812 1c01 	ldrb.w	r1, [r2, #-1]
 8008f56:	1e53      	subs	r3, r2, #1
 8008f58:	292e      	cmp	r1, #46	; 0x2e
 8008f5a:	d02c      	beq.n	8008fb6 <_vprintf+0x296>
 8008f5c:	469c      	mov	ip, r3
 8008f5e:	f04f 0e30 	mov.w	lr, #48	; 0x30
 8008f62:	4663      	mov	r3, ip
 8008f64:	f81c 1901 	ldrb.w	r1, [ip], #-1
 8008f68:	2939      	cmp	r1, #57	; 0x39
 8008f6a:	d021      	beq.n	8008fb0 <_vprintf+0x290>
 8008f6c:	292e      	cmp	r1, #46	; 0x2e
 8008f6e:	d022      	beq.n	8008fb6 <_vprintf+0x296>
 8008f70:	3101      	adds	r1, #1
 8008f72:	7019      	strb	r1, [r3, #0]
 8008f74:	f104 0360 	add.w	r3, r4, #96	; 0x60
 8008f78:	446b      	add	r3, sp
 8008f7a:	f813 3c41 	ldrb.w	r3, [r3, #-65]
 8008f7e:	2b2e      	cmp	r3, #46	; 0x2e
 8008f80:	bf08      	it	eq
 8008f82:	f104 34ff 	addeq.w	r4, r4, #4294967295	; 0xffffffff
 8008f86:	46a1      	mov	r9, r4
 8008f88:	9b05      	ldr	r3, [sp, #20]
 8008f8a:	4599      	cmp	r9, r3
 8008f8c:	db3e      	blt.n	800900c <_vprintf+0x2ec>
 8008f8e:	46b9      	mov	r9, r7
 8008f90:	2c00      	cmp	r4, #0
 8008f92:	f77f af71 	ble.w	8008e78 <_vprintf+0x158>
 8008f96:	f819 1b01 	ldrb.w	r1, [r9], #1
 8008f9a:	a803      	add	r0, sp, #12
 8008f9c:	f7ff fde2 	bl	8008b64 <_xputch>
 8008fa0:	3c01      	subs	r4, #1
 8008fa2:	e7f5      	b.n	8008f90 <_vprintf+0x270>
 8008fa4:	46bb      	mov	fp, r7
 8008fa6:	e7a0      	b.n	8008eea <_vprintf+0x1ca>
 8008fa8:	4358      	muls	r0, r3
 8008faa:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
 8008fae:	e7ba      	b.n	8008f26 <_vprintf+0x206>
 8008fb0:	f88c e001 	strb.w	lr, [ip, #1]
 8008fb4:	e7d5      	b.n	8008f62 <_vprintf+0x242>
 8008fb6:	f04f 0c30 	mov.w	ip, #48	; 0x30
 8008fba:	3b01      	subs	r3, #1
 8008fbc:	7819      	ldrb	r1, [r3, #0]
 8008fbe:	2939      	cmp	r1, #57	; 0x39
 8008fc0:	d112      	bne.n	8008fe8 <_vprintf+0x2c8>
 8008fc2:	42bb      	cmp	r3, r7
 8008fc4:	d20d      	bcs.n	8008fe2 <_vprintf+0x2c2>
 8008fc6:	1c5c      	adds	r4, r3, #1
 8008fc8:	1c99      	adds	r1, r3, #2
 8008fca:	428c      	cmp	r4, r1
 8008fcc:	eba2 0203 	sub.w	r2, r2, r3
 8008fd0:	d913      	bls.n	8008ffa <_vprintf+0x2da>
 8008fd2:	4619      	mov	r1, r3
 8008fd4:	441a      	add	r2, r3
 8008fd6:	428a      	cmp	r2, r1
 8008fd8:	d10b      	bne.n	8008ff2 <_vprintf+0x2d2>
 8008fda:	2231      	movs	r2, #49	; 0x31
 8008fdc:	4604      	mov	r4, r0
 8008fde:	705a      	strb	r2, [r3, #1]
 8008fe0:	e7c8      	b.n	8008f74 <_vprintf+0x254>
 8008fe2:	f803 c901 	strb.w	ip, [r3], #-1
 8008fe6:	e7e9      	b.n	8008fbc <_vprintf+0x29c>
 8008fe8:	42bb      	cmp	r3, r7
 8008fea:	d3ec      	bcc.n	8008fc6 <_vprintf+0x2a6>
 8008fec:	292d      	cmp	r1, #45	; 0x2d
 8008fee:	d0ea      	beq.n	8008fc6 <_vprintf+0x2a6>
 8008ff0:	e7be      	b.n	8008f70 <_vprintf+0x250>
 8008ff2:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 8008ff6:	704c      	strb	r4, [r1, #1]
 8008ff8:	e7ed      	b.n	8008fd6 <_vprintf+0x2b6>
 8008ffa:	4414      	add	r4, r2
 8008ffc:	440a      	add	r2, r1
 8008ffe:	428a      	cmp	r2, r1
 8009000:	d0eb      	beq.n	8008fda <_vprintf+0x2ba>
 8009002:	f814 cd01 	ldrb.w	ip, [r4, #-1]!
 8009006:	f802 cd01 	strb.w	ip, [r2, #-1]!
 800900a:	e7f8      	b.n	8008ffe <_vprintf+0x2de>
 800900c:	2120      	movs	r1, #32
 800900e:	a803      	add	r0, sp, #12
 8009010:	f7ff fda8 	bl	8008b64 <_xputch>
 8009014:	f109 0901 	add.w	r9, r9, #1
 8009018:	e7b6      	b.n	8008f88 <_vprintf+0x268>
 800901a:	2308      	movs	r3, #8
 800901c:	4625      	mov	r5, r4
 800901e:	9305      	str	r3, [sp, #20]
 8009020:	2320      	movs	r3, #32
 8009022:	2130      	movs	r1, #48	; 0x30
 8009024:	f855 4b04 	ldr.w	r4, [r5], #4
 8009028:	a803      	add	r0, sp, #12
 800902a:	9303      	str	r3, [sp, #12]
 800902c:	f7ff fd9a 	bl	8008b64 <_xputch>
 8009030:	2178      	movs	r1, #120	; 0x78
 8009032:	a803      	add	r0, sp, #12
 8009034:	f7ff fd96 	bl	8008b64 <_xputch>
 8009038:	4621      	mov	r1, r4
 800903a:	a803      	add	r0, sp, #12
 800903c:	f7ff fe12 	bl	8008c64 <_format_hex>
 8009040:	e71a      	b.n	8008e78 <_vprintf+0x158>
 8009042:	4625      	mov	r5, r4
 8009044:	2400      	movs	r4, #0
 8009046:	f855 9b04 	ldr.w	r9, [r5], #4
 800904a:	f819 3004 	ldrb.w	r3, [r9, r4]
 800904e:	b993      	cbnz	r3, 8009076 <_vprintf+0x356>
 8009050:	9b03      	ldr	r3, [sp, #12]
 8009052:	07d9      	lsls	r1, r3, #31
 8009054:	d503      	bpl.n	800905e <_vprintf+0x33e>
 8009056:	9b04      	ldr	r3, [sp, #16]
 8009058:	429c      	cmp	r4, r3
 800905a:	bfa8      	it	ge
 800905c:	461c      	movge	r4, r3
 800905e:	9b03      	ldr	r3, [sp, #12]
 8009060:	f104 0a01 	add.w	sl, r4, #1
 8009064:	065a      	lsls	r2, r3, #25
 8009066:	d403      	bmi.n	8009070 <_vprintf+0x350>
 8009068:	9b05      	ldr	r3, [sp, #20]
 800906a:	429c      	cmp	r4, r3
 800906c:	db05      	blt.n	800907a <_vprintf+0x35a>
 800906e:	4654      	mov	r4, sl
 8009070:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 8009074:	e00d      	b.n	8009092 <_vprintf+0x372>
 8009076:	3401      	adds	r4, #1
 8009078:	e7e7      	b.n	800904a <_vprintf+0x32a>
 800907a:	2120      	movs	r1, #32
 800907c:	a803      	add	r0, sp, #12
 800907e:	f7ff fd71 	bl	8008b64 <_xputch>
 8009082:	4654      	mov	r4, sl
 8009084:	e7eb      	b.n	800905e <_vprintf+0x33e>
 8009086:	a803      	add	r0, sp, #12
 8009088:	f7ff fd6c 	bl	8008b64 <_xputch>
 800908c:	9b04      	ldr	r3, [sp, #16]
 800908e:	3b01      	subs	r3, #1
 8009090:	9304      	str	r3, [sp, #16]
 8009092:	9b03      	ldr	r3, [sp, #12]
 8009094:	07db      	lsls	r3, r3, #31
 8009096:	d501      	bpl.n	800909c <_vprintf+0x37c>
 8009098:	9b04      	ldr	r3, [sp, #16]
 800909a:	b11b      	cbz	r3, 80090a4 <_vprintf+0x384>
 800909c:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 80090a0:	2900      	cmp	r1, #0
 80090a2:	d1f0      	bne.n	8009086 <_vprintf+0x366>
 80090a4:	9b05      	ldr	r3, [sp, #20]
 80090a6:	429c      	cmp	r4, r3
 80090a8:	f6bf aee6 	bge.w	8008e78 <_vprintf+0x158>
 80090ac:	2120      	movs	r1, #32
 80090ae:	a803      	add	r0, sp, #12
 80090b0:	f7ff fd58 	bl	8008b64 <_xputch>
 80090b4:	3401      	adds	r4, #1
 80090b6:	e7f5      	b.n	80090a4 <_vprintf+0x384>
 80090b8:	9b03      	ldr	r3, [sp, #12]
 80090ba:	f013 0304 	ands.w	r3, r3, #4
 80090be:	bf1d      	ittte	ne
 80090c0:	3407      	addne	r4, #7
 80090c2:	f024 0407 	bicne.w	r4, r4, #7
 80090c6:	4625      	movne	r5, r4
 80090c8:	4625      	moveq	r5, r4
 80090ca:	bf1a      	itte	ne
 80090cc:	f855 2b08 	ldrne.w	r2, [r5], #8
 80090d0:	6863      	ldrne	r3, [r4, #4]
 80090d2:	f855 2b04 	ldreq.w	r2, [r5], #4
 80090d6:	e6e9      	b.n	8008eac <_vprintf+0x18c>
 80090d8:	9b03      	ldr	r3, [sp, #12]
 80090da:	f043 0302 	orr.w	r3, r3, #2
 80090de:	9303      	str	r3, [sp, #12]
 80090e0:	4625      	mov	r5, r4
 80090e2:	f855 1b04 	ldr.w	r1, [r5], #4
 80090e6:	e7a8      	b.n	800903a <_vprintf+0x31a>

080090e8 <printf>:
 80090e8:	b40f      	push	{r0, r1, r2, r3}
 80090ea:	b507      	push	{r0, r1, r2, lr}
 80090ec:	aa04      	add	r2, sp, #16
 80090ee:	f852 1b04 	ldr.w	r1, [r2], #4
 80090f2:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 80090f6:	9201      	str	r2, [sp, #4]
 80090f8:	f7ff fe12 	bl	8008d20 <_vprintf>
 80090fc:	b003      	add	sp, #12
 80090fe:	f85d eb04 	ldr.w	lr, [sp], #4
 8009102:	b004      	add	sp, #16
 8009104:	4770      	bx	lr
	...

08009108 <sprintf>:
 8009108:	b40e      	push	{r1, r2, r3}
 800910a:	b517      	push	{r0, r1, r2, r4, lr}
 800910c:	4c09      	ldr	r4, [pc, #36]	; (8009134 <sprintf+0x2c>)
 800910e:	aa05      	add	r2, sp, #20
 8009110:	f852 1b04 	ldr.w	r1, [r2], #4
 8009114:	6020      	str	r0, [r4, #0]
 8009116:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800911a:	9201      	str	r2, [sp, #4]
 800911c:	f7ff fe00 	bl	8008d20 <_vprintf>
 8009120:	2300      	movs	r3, #0
 8009122:	6822      	ldr	r2, [r4, #0]
 8009124:	6023      	str	r3, [r4, #0]
 8009126:	7013      	strb	r3, [r2, #0]
 8009128:	b003      	add	sp, #12
 800912a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800912e:	b003      	add	sp, #12
 8009130:	4770      	bx	lr
 8009132:	bf00      	nop
 8009134:	200000fc 	strdcs	r0, [r0], -ip

08009138 <snprintf>:
 8009138:	b40c      	push	{r2, r3}
 800913a:	460b      	mov	r3, r1
 800913c:	b513      	push	{r0, r1, r4, lr}
 800913e:	4c09      	ldr	r4, [pc, #36]	; (8009164 <snprintf+0x2c>)
 8009140:	aa04      	add	r2, sp, #16
 8009142:	f852 1b04 	ldr.w	r1, [r2], #4
 8009146:	6020      	str	r0, [r4, #0]
 8009148:	4618      	mov	r0, r3
 800914a:	9201      	str	r2, [sp, #4]
 800914c:	f7ff fde8 	bl	8008d20 <_vprintf>
 8009150:	2300      	movs	r3, #0
 8009152:	6822      	ldr	r2, [r4, #0]
 8009154:	6023      	str	r3, [r4, #0]
 8009156:	7013      	strb	r3, [r2, #0]
 8009158:	b002      	add	sp, #8
 800915a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800915e:	b002      	add	sp, #8
 8009160:	4770      	bx	lr
 8009162:	bf00      	nop
 8009164:	200000fc 	strdcs	r0, [r0], -ip

08009168 <vsnprintf>:
 8009168:	b538      	push	{r3, r4, r5, lr}
 800916a:	4605      	mov	r5, r0
 800916c:	4c05      	ldr	r4, [pc, #20]	; (8009184 <vsnprintf+0x1c>)
 800916e:	4608      	mov	r0, r1
 8009170:	4611      	mov	r1, r2
 8009172:	461a      	mov	r2, r3
 8009174:	6025      	str	r5, [r4, #0]
 8009176:	f7ff fdd3 	bl	8008d20 <_vprintf>
 800917a:	2300      	movs	r3, #0
 800917c:	6822      	ldr	r2, [r4, #0]
 800917e:	6023      	str	r3, [r4, #0]
 8009180:	7013      	strb	r3, [r2, #0]
 8009182:	bd38      	pop	{r3, r4, r5, pc}
 8009184:	200000fc 	strdcs	r0, [r0], -ip

08009188 <__udivmoddi4>:
 8009188:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800918c:	9e08      	ldr	r6, [sp, #32]
 800918e:	460d      	mov	r5, r1
 8009190:	4604      	mov	r4, r0
 8009192:	468e      	mov	lr, r1
 8009194:	2b00      	cmp	r3, #0
 8009196:	d14c      	bne.n	8009232 <__udivmoddi4+0xaa>
 8009198:	428a      	cmp	r2, r1
 800919a:	4694      	mov	ip, r2
 800919c:	d967      	bls.n	800926e <__udivmoddi4+0xe6>
 800919e:	fab2 f382 	clz	r3, r2
 80091a2:	b153      	cbz	r3, 80091ba <__udivmoddi4+0x32>
 80091a4:	fa02 fc03 	lsl.w	ip, r2, r3
 80091a8:	f1c3 0220 	rsb	r2, r3, #32
 80091ac:	fa01 fe03 	lsl.w	lr, r1, r3
 80091b0:	fa20 f202 	lsr.w	r2, r0, r2
 80091b4:	ea42 0e0e 	orr.w	lr, r2, lr
 80091b8:	409c      	lsls	r4, r3
 80091ba:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80091be:	fbbe f1f7 	udiv	r1, lr, r7
 80091c2:	fa1f f58c 	uxth.w	r5, ip
 80091c6:	fb07 ee11 	mls	lr, r7, r1, lr
 80091ca:	fb01 f005 	mul.w	r0, r1, r5
 80091ce:	0c22      	lsrs	r2, r4, #16
 80091d0:	ea42 420e 	orr.w	r2, r2, lr, lsl #16
 80091d4:	4290      	cmp	r0, r2
 80091d6:	d90a      	bls.n	80091ee <__udivmoddi4+0x66>
 80091d8:	eb1c 0202 	adds.w	r2, ip, r2
 80091dc:	f101 3eff 	add.w	lr, r1, #4294967295	; 0xffffffff
 80091e0:	f080 8119 	bcs.w	8009416 <__udivmoddi4+0x28e>
 80091e4:	4290      	cmp	r0, r2
 80091e6:	f240 8116 	bls.w	8009416 <__udivmoddi4+0x28e>
 80091ea:	3902      	subs	r1, #2
 80091ec:	4462      	add	r2, ip
 80091ee:	1a12      	subs	r2, r2, r0
 80091f0:	fbb2 f0f7 	udiv	r0, r2, r7
 80091f4:	fb07 2210 	mls	r2, r7, r0, r2
 80091f8:	fb00 f505 	mul.w	r5, r0, r5
 80091fc:	b2a4      	uxth	r4, r4
 80091fe:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8009202:	42a5      	cmp	r5, r4
 8009204:	d90a      	bls.n	800921c <__udivmoddi4+0x94>
 8009206:	eb1c 0404 	adds.w	r4, ip, r4
 800920a:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
 800920e:	f080 8104 	bcs.w	800941a <__udivmoddi4+0x292>
 8009212:	42a5      	cmp	r5, r4
 8009214:	f240 8101 	bls.w	800941a <__udivmoddi4+0x292>
 8009218:	4464      	add	r4, ip
 800921a:	3802      	subs	r0, #2
 800921c:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8009220:	2100      	movs	r1, #0
 8009222:	1b64      	subs	r4, r4, r5
 8009224:	b11e      	cbz	r6, 800922e <__udivmoddi4+0xa6>
 8009226:	40dc      	lsrs	r4, r3
 8009228:	2300      	movs	r3, #0
 800922a:	e9c6 4300 	strd	r4, r3, [r6]
 800922e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009232:	428b      	cmp	r3, r1
 8009234:	d908      	bls.n	8009248 <__udivmoddi4+0xc0>
 8009236:	2e00      	cmp	r6, #0
 8009238:	f000 80ea 	beq.w	8009410 <__udivmoddi4+0x288>
 800923c:	2100      	movs	r1, #0
 800923e:	e9c6 0500 	strd	r0, r5, [r6]
 8009242:	4608      	mov	r0, r1
 8009244:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009248:	fab3 f183 	clz	r1, r3
 800924c:	2900      	cmp	r1, #0
 800924e:	d148      	bne.n	80092e2 <__udivmoddi4+0x15a>
 8009250:	42ab      	cmp	r3, r5
 8009252:	d302      	bcc.n	800925a <__udivmoddi4+0xd2>
 8009254:	4282      	cmp	r2, r0
 8009256:	f200 80f8 	bhi.w	800944a <__udivmoddi4+0x2c2>
 800925a:	1a84      	subs	r4, r0, r2
 800925c:	eb65 0203 	sbc.w	r2, r5, r3
 8009260:	2001      	movs	r0, #1
 8009262:	4696      	mov	lr, r2
 8009264:	2e00      	cmp	r6, #0
 8009266:	d0e2      	beq.n	800922e <__udivmoddi4+0xa6>
 8009268:	e9c6 4e00 	strd	r4, lr, [r6]
 800926c:	e7df      	b.n	800922e <__udivmoddi4+0xa6>
 800926e:	b902      	cbnz	r2, 8009272 <__udivmoddi4+0xea>
 8009270:	deff      	udf	#255	; 0xff
 8009272:	fab2 f382 	clz	r3, r2
 8009276:	2b00      	cmp	r3, #0
 8009278:	f040 808e 	bne.w	8009398 <__udivmoddi4+0x210>
 800927c:	1a88      	subs	r0, r1, r2
 800927e:	2101      	movs	r1, #1
 8009280:	0c17      	lsrs	r7, r2, #16
 8009282:	fa1f fe82 	uxth.w	lr, r2
 8009286:	fbb0 f5f7 	udiv	r5, r0, r7
 800928a:	fb07 0015 	mls	r0, r7, r5, r0
 800928e:	0c22      	lsrs	r2, r4, #16
 8009290:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8009294:	fb0e f005 	mul.w	r0, lr, r5
 8009298:	4290      	cmp	r0, r2
 800929a:	d908      	bls.n	80092ae <__udivmoddi4+0x126>
 800929c:	eb1c 0202 	adds.w	r2, ip, r2
 80092a0:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 80092a4:	d202      	bcs.n	80092ac <__udivmoddi4+0x124>
 80092a6:	4290      	cmp	r0, r2
 80092a8:	f200 80cc 	bhi.w	8009444 <__udivmoddi4+0x2bc>
 80092ac:	4645      	mov	r5, r8
 80092ae:	1a12      	subs	r2, r2, r0
 80092b0:	fbb2 f0f7 	udiv	r0, r2, r7
 80092b4:	fb07 2210 	mls	r2, r7, r0, r2
 80092b8:	fb0e fe00 	mul.w	lr, lr, r0
 80092bc:	b2a4      	uxth	r4, r4
 80092be:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80092c2:	45a6      	cmp	lr, r4
 80092c4:	d908      	bls.n	80092d8 <__udivmoddi4+0x150>
 80092c6:	eb1c 0404 	adds.w	r4, ip, r4
 80092ca:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
 80092ce:	d202      	bcs.n	80092d6 <__udivmoddi4+0x14e>
 80092d0:	45a6      	cmp	lr, r4
 80092d2:	f200 80b4 	bhi.w	800943e <__udivmoddi4+0x2b6>
 80092d6:	4610      	mov	r0, r2
 80092d8:	eba4 040e 	sub.w	r4, r4, lr
 80092dc:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 80092e0:	e7a0      	b.n	8009224 <__udivmoddi4+0x9c>
 80092e2:	f1c1 0720 	rsb	r7, r1, #32
 80092e6:	408b      	lsls	r3, r1
 80092e8:	fa22 fc07 	lsr.w	ip, r2, r7
 80092ec:	ea4c 0c03 	orr.w	ip, ip, r3
 80092f0:	fa25 fa07 	lsr.w	sl, r5, r7
 80092f4:	ea4f 491c 	mov.w	r9, ip, lsr #16
 80092f8:	fbba f8f9 	udiv	r8, sl, r9
 80092fc:	408d      	lsls	r5, r1
 80092fe:	fa20 f307 	lsr.w	r3, r0, r7
 8009302:	fb09 aa18 	mls	sl, r9, r8, sl
 8009306:	fa1f fe8c 	uxth.w	lr, ip
 800930a:	432b      	orrs	r3, r5
 800930c:	fa00 f501 	lsl.w	r5, r0, r1
 8009310:	fb08 f00e 	mul.w	r0, r8, lr
 8009314:	0c1c      	lsrs	r4, r3, #16
 8009316:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
 800931a:	42a0      	cmp	r0, r4
 800931c:	fa02 f201 	lsl.w	r2, r2, r1
 8009320:	d90b      	bls.n	800933a <__udivmoddi4+0x1b2>
 8009322:	eb1c 0404 	adds.w	r4, ip, r4
 8009326:	f108 3aff 	add.w	sl, r8, #4294967295	; 0xffffffff
 800932a:	f080 8086 	bcs.w	800943a <__udivmoddi4+0x2b2>
 800932e:	42a0      	cmp	r0, r4
 8009330:	f240 8083 	bls.w	800943a <__udivmoddi4+0x2b2>
 8009334:	f1a8 0802 	sub.w	r8, r8, #2
 8009338:	4464      	add	r4, ip
 800933a:	1a24      	subs	r4, r4, r0
 800933c:	b298      	uxth	r0, r3
 800933e:	fbb4 f3f9 	udiv	r3, r4, r9
 8009342:	fb09 4413 	mls	r4, r9, r3, r4
 8009346:	fb03 fe0e 	mul.w	lr, r3, lr
 800934a:	ea40 4404 	orr.w	r4, r0, r4, lsl #16
 800934e:	45a6      	cmp	lr, r4
 8009350:	d908      	bls.n	8009364 <__udivmoddi4+0x1dc>
 8009352:	eb1c 0404 	adds.w	r4, ip, r4
 8009356:	f103 30ff 	add.w	r0, r3, #4294967295	; 0xffffffff
 800935a:	d26a      	bcs.n	8009432 <__udivmoddi4+0x2aa>
 800935c:	45a6      	cmp	lr, r4
 800935e:	d968      	bls.n	8009432 <__udivmoddi4+0x2aa>
 8009360:	3b02      	subs	r3, #2
 8009362:	4464      	add	r4, ip
 8009364:	ea43 4008 	orr.w	r0, r3, r8, lsl #16
 8009368:	fba0 9302 	umull	r9, r3, r0, r2
 800936c:	eba4 040e 	sub.w	r4, r4, lr
 8009370:	429c      	cmp	r4, r3
 8009372:	46c8      	mov	r8, r9
 8009374:	469e      	mov	lr, r3
 8009376:	d354      	bcc.n	8009422 <__udivmoddi4+0x29a>
 8009378:	d051      	beq.n	800941e <__udivmoddi4+0x296>
 800937a:	2e00      	cmp	r6, #0
 800937c:	d067      	beq.n	800944e <__udivmoddi4+0x2c6>
 800937e:	ebb5 0308 	subs.w	r3, r5, r8
 8009382:	eb64 040e 	sbc.w	r4, r4, lr
 8009386:	40cb      	lsrs	r3, r1
 8009388:	fa04 f707 	lsl.w	r7, r4, r7
 800938c:	431f      	orrs	r7, r3
 800938e:	40cc      	lsrs	r4, r1
 8009390:	e9c6 7400 	strd	r7, r4, [r6]
 8009394:	2100      	movs	r1, #0
 8009396:	e74a      	b.n	800922e <__udivmoddi4+0xa6>
 8009398:	fa02 fc03 	lsl.w	ip, r2, r3
 800939c:	f1c3 0020 	rsb	r0, r3, #32
 80093a0:	40c1      	lsrs	r1, r0
 80093a2:	409d      	lsls	r5, r3
 80093a4:	fa24 f000 	lsr.w	r0, r4, r0
 80093a8:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80093ac:	4328      	orrs	r0, r5
 80093ae:	fbb1 f5f7 	udiv	r5, r1, r7
 80093b2:	fb07 1115 	mls	r1, r7, r5, r1
 80093b6:	fa1f fe8c 	uxth.w	lr, ip
 80093ba:	0c02      	lsrs	r2, r0, #16
 80093bc:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80093c0:	fb05 f10e 	mul.w	r1, r5, lr
 80093c4:	4291      	cmp	r1, r2
 80093c6:	fa04 f403 	lsl.w	r4, r4, r3
 80093ca:	d908      	bls.n	80093de <__udivmoddi4+0x256>
 80093cc:	eb1c 0202 	adds.w	r2, ip, r2
 80093d0:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 80093d4:	d22f      	bcs.n	8009436 <__udivmoddi4+0x2ae>
 80093d6:	4291      	cmp	r1, r2
 80093d8:	d92d      	bls.n	8009436 <__udivmoddi4+0x2ae>
 80093da:	3d02      	subs	r5, #2
 80093dc:	4462      	add	r2, ip
 80093de:	1a52      	subs	r2, r2, r1
 80093e0:	fbb2 f1f7 	udiv	r1, r2, r7
 80093e4:	fb07 2211 	mls	r2, r7, r1, r2
 80093e8:	b280      	uxth	r0, r0
 80093ea:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 80093ee:	fb01 f20e 	mul.w	r2, r1, lr
 80093f2:	4282      	cmp	r2, r0
 80093f4:	d908      	bls.n	8009408 <__udivmoddi4+0x280>
 80093f6:	eb1c 0000 	adds.w	r0, ip, r0
 80093fa:	f101 38ff 	add.w	r8, r1, #4294967295	; 0xffffffff
 80093fe:	d216      	bcs.n	800942e <__udivmoddi4+0x2a6>
 8009400:	4282      	cmp	r2, r0
 8009402:	d914      	bls.n	800942e <__udivmoddi4+0x2a6>
 8009404:	3902      	subs	r1, #2
 8009406:	4460      	add	r0, ip
 8009408:	1a80      	subs	r0, r0, r2
 800940a:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 800940e:	e73a      	b.n	8009286 <__udivmoddi4+0xfe>
 8009410:	4631      	mov	r1, r6
 8009412:	4630      	mov	r0, r6
 8009414:	e70b      	b.n	800922e <__udivmoddi4+0xa6>
 8009416:	4671      	mov	r1, lr
 8009418:	e6e9      	b.n	80091ee <__udivmoddi4+0x66>
 800941a:	4610      	mov	r0, r2
 800941c:	e6fe      	b.n	800921c <__udivmoddi4+0x94>
 800941e:	454d      	cmp	r5, r9
 8009420:	d2ab      	bcs.n	800937a <__udivmoddi4+0x1f2>
 8009422:	ebb9 0802 	subs.w	r8, r9, r2
 8009426:	eb63 0e0c 	sbc.w	lr, r3, ip
 800942a:	3801      	subs	r0, #1
 800942c:	e7a5      	b.n	800937a <__udivmoddi4+0x1f2>
 800942e:	4641      	mov	r1, r8
 8009430:	e7ea      	b.n	8009408 <__udivmoddi4+0x280>
 8009432:	4603      	mov	r3, r0
 8009434:	e796      	b.n	8009364 <__udivmoddi4+0x1dc>
 8009436:	4645      	mov	r5, r8
 8009438:	e7d1      	b.n	80093de <__udivmoddi4+0x256>
 800943a:	46d0      	mov	r8, sl
 800943c:	e77d      	b.n	800933a <__udivmoddi4+0x1b2>
 800943e:	4464      	add	r4, ip
 8009440:	3802      	subs	r0, #2
 8009442:	e749      	b.n	80092d8 <__udivmoddi4+0x150>
 8009444:	3d02      	subs	r5, #2
 8009446:	4462      	add	r2, ip
 8009448:	e731      	b.n	80092ae <__udivmoddi4+0x126>
 800944a:	4608      	mov	r0, r1
 800944c:	e70a      	b.n	8009264 <__udivmoddi4+0xdc>
 800944e:	4631      	mov	r1, r6
 8009450:	e6ed      	b.n	800922e <__udivmoddi4+0xa6>
 8009452:	bf00      	nop

08009454 <RemoteConfig::HandleList()>:
 8009454:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009458:	6801      	ldr	r1, [r0, #0]
 800945a:	4604      	mov	r4, r0
 800945c:	2012      	movs	r0, #18
 800945e:	f04f 080c 	mov.w	r8, #12
 8009462:	4a29      	ldr	r2, [pc, #164]	; (8009508 <RemoteConfig::HandleList()+0xb4>)
 8009464:	4b29      	ldr	r3, [pc, #164]	; (800950c <RemoteConfig::HandleList()+0xb8>)
 8009466:	fb00 2201 	mla	r2, r0, r1, r2
 800946a:	6860      	ldr	r0, [r4, #4]
 800946c:	4928      	ldr	r1, [pc, #160]	; (8009510 <RemoteConfig::HandleList()+0xbc>)
 800946e:	681b      	ldr	r3, [r3, #0]
 8009470:	fb08 1100 	mla	r1, r8, r0, r1
 8009474:	4e27      	ldr	r6, [pc, #156]	; (8009514 <RemoteConfig::HandleList()+0xc0>)
 8009476:	4828      	ldr	r0, [pc, #160]	; (8009518 <RemoteConfig::HandleList()+0xc4>)
 8009478:	695f      	ldr	r7, [r3, #20]
 800947a:	6835      	ldr	r5, [r6, #0]
 800947c:	f890 9009 	ldrb.w	r9, [r0, #9]
 8009480:	b2fb      	uxtb	r3, r7
 8009482:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8009486:	f3c7 4e07 	ubfx	lr, r7, #16, #8
 800948a:	f8d4 8008 	ldr.w	r8, [r4, #8]
 800948e:	b089      	sub	sp, #36	; 0x24
 8009490:	3507      	adds	r5, #7
 8009492:	0e3f      	lsrs	r7, r7, #24
 8009494:	f1b9 0f00 	cmp.w	r9, #0
 8009498:	d01d      	beq.n	80094d6 <RemoteConfig::HandleList()+0x82>
 800949a:	3009      	adds	r0, #9
 800949c:	e9cd 2103 	strd	r2, r1, [sp, #12]
 80094a0:	e9cd 8005 	strd	r8, r0, [sp, #20]
 80094a4:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 80094a8:	4628      	mov	r0, r5
 80094aa:	e9cd e701 	strd	lr, r7, [sp, #4]
 80094ae:	4a1b      	ldr	r2, [pc, #108]	; (800951c <RemoteConfig::HandleList()+0xc8>)
 80094b0:	f8cd c000 	str.w	ip, [sp]
 80094b4:	f7ff fe40 	bl	8009138 <snprintf>
 80094b8:	69e3      	ldr	r3, [r4, #28]
 80094ba:	2b05      	cmp	r3, #5
 80094bc:	d118      	bne.n	80094f0 <RemoteConfig::HandleList()+0x9c>
 80094be:	f642 1305 	movw	r3, #10501	; 0x2905
 80094c2:	9300      	str	r3, [sp, #0]
 80094c4:	69a3      	ldr	r3, [r4, #24]
 80094c6:	b282      	uxth	r2, r0
 80094c8:	4629      	mov	r1, r5
 80094ca:	7d20      	ldrb	r0, [r4, #20]
 80094cc:	f006 f820 	bl	800f510 <udp_send>
 80094d0:	b009      	add	sp, #36	; 0x24
 80094d2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80094d6:	e9cd 1804 	strd	r1, r8, [sp, #16]
 80094da:	e9cd 7202 	strd	r7, r2, [sp, #8]
 80094de:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 80094e2:	4628      	mov	r0, r5
 80094e4:	e9cd ce00 	strd	ip, lr, [sp]
 80094e8:	4a0d      	ldr	r2, [pc, #52]	; (8009520 <RemoteConfig::HandleList()+0xcc>)
 80094ea:	f7ff fe25 	bl	8009138 <snprintf>
 80094ee:	e7e3      	b.n	80094b8 <RemoteConfig::HandleList()+0x64>
 80094f0:	2b06      	cmp	r3, #6
 80094f2:	d1ed      	bne.n	80094d0 <RemoteConfig::HandleList()+0x7c>
 80094f4:	6833      	ldr	r3, [r6, #0]
 80094f6:	799b      	ldrb	r3, [r3, #6]
 80094f8:	2b2a      	cmp	r3, #42	; 0x2a
 80094fa:	d1e9      	bne.n	80094d0 <RemoteConfig::HandleList()+0x7c>
 80094fc:	f642 1305 	movw	r3, #10501	; 0x2905
 8009500:	9300      	str	r3, [sp, #0]
 8009502:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8009506:	e7de      	b.n	80094c6 <RemoteConfig::HandleList()+0x72>
 8009508:	08014abb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r7, r9, fp, lr}
 800950c:	2000b1a0 	andcs	fp, r0, r0, lsr #3
 8009510:	08014b81 	stmdaeq	r1, {r0, r7, r8, r9, fp, lr}
 8009514:	20000100 	andcs	r0, r0, r0, lsl #2
 8009518:	20000104 	andcs	r0, r0, r4, lsl #2
 800951c:	080149d0 	stmdaeq	r1, {r4, r6, r7, r8, fp, lr}
 8009520:	080149e9 	stmdaeq	r1, {r0, r3, r5, r6, r7, r8, fp, lr}

08009524 <RemoteConfig::HandleDisplayGet()>:
 8009524:	69c3      	ldr	r3, [r0, #28]
 8009526:	2b08      	cmp	r3, #8
 8009528:	d11b      	bne.n	8009562 <RemoteConfig::HandleDisplayGet()+0x3e>
 800952a:	4b0e      	ldr	r3, [pc, #56]	; (8009564 <RemoteConfig::HandleDisplayGet()+0x40>)
 800952c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800952e:	681b      	ldr	r3, [r3, #0]
 8009530:	4d0d      	ldr	r5, [pc, #52]	; (8009568 <RemoteConfig::HandleDisplayGet()+0x44>)
 8009532:	7c19      	ldrb	r1, [r3, #16]
 8009534:	4a0d      	ldr	r2, [pc, #52]	; (800956c <RemoteConfig::HandleDisplayGet()+0x48>)
 8009536:	4b0e      	ldr	r3, [pc, #56]	; (8009570 <RemoteConfig::HandleDisplayGet()+0x4c>)
 8009538:	4604      	mov	r4, r0
 800953a:	2900      	cmp	r1, #0
 800953c:	bf18      	it	ne
 800953e:	4613      	movne	r3, r2
 8009540:	6828      	ldr	r0, [r5, #0]
 8009542:	f240 31ff 	movw	r1, #1023	; 0x3ff
 8009546:	4a0b      	ldr	r2, [pc, #44]	; (8009574 <RemoteConfig::HandleDisplayGet()+0x50>)
 8009548:	f7ff fdf6 	bl	8009138 <snprintf>
 800954c:	f642 1305 	movw	r3, #10501	; 0x2905
 8009550:	9300      	str	r3, [sp, #0]
 8009552:	b282      	uxth	r2, r0
 8009554:	69a3      	ldr	r3, [r4, #24]
 8009556:	6829      	ldr	r1, [r5, #0]
 8009558:	7d20      	ldrb	r0, [r4, #20]
 800955a:	f005 ffd9 	bl	800f510 <udp_send>
 800955e:	b003      	add	sp, #12
 8009560:	bd30      	pop	{r4, r5, pc}
 8009562:	4770      	bx	lr
 8009564:	2000b778 	andcs	fp, r0, r8, ror r7
 8009568:	20000100 	andcs	r0, r0, r0, lsl #2
 800956c:	08014a02 	stmdaeq	r1, {r1, r9, fp, lr}
 8009570:	080149ff 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r7, r8, fp, lr}
 8009574:	08014a06 	stmdaeq	r1, {r1, r2, r9, fp, lr}

08009578 <RemoteConfig::HandleTftpGet()>:
 8009578:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800957a:	4604      	mov	r4, r0
 800957c:	f000 fd74 	bl	800a068 <RemoteConfig::PlatformHandleTftpGet()>
 8009580:	69e3      	ldr	r3, [r4, #28]
 8009582:	2b05      	cmp	r3, #5
 8009584:	d116      	bne.n	80095b4 <RemoteConfig::HandleTftpGet()+0x3c>
 8009586:	f894 1020 	ldrb.w	r1, [r4, #32]
 800958a:	4d0b      	ldr	r5, [pc, #44]	; (80095b8 <RemoteConfig::HandleTftpGet()+0x40>)
 800958c:	4a0b      	ldr	r2, [pc, #44]	; (80095bc <RemoteConfig::HandleTftpGet()+0x44>)
 800958e:	4b0c      	ldr	r3, [pc, #48]	; (80095c0 <RemoteConfig::HandleTftpGet()+0x48>)
 8009590:	6828      	ldr	r0, [r5, #0]
 8009592:	2900      	cmp	r1, #0
 8009594:	bf08      	it	eq
 8009596:	4613      	moveq	r3, r2
 8009598:	f240 31ff 	movw	r1, #1023	; 0x3ff
 800959c:	4a09      	ldr	r2, [pc, #36]	; (80095c4 <RemoteConfig::HandleTftpGet()+0x4c>)
 800959e:	f7ff fdcb 	bl	8009138 <snprintf>
 80095a2:	f642 1305 	movw	r3, #10501	; 0x2905
 80095a6:	b282      	uxth	r2, r0
 80095a8:	9300      	str	r3, [sp, #0]
 80095aa:	6829      	ldr	r1, [r5, #0]
 80095ac:	69a3      	ldr	r3, [r4, #24]
 80095ae:	7d20      	ldrb	r0, [r4, #20]
 80095b0:	f005 ffae 	bl	800f510 <udp_send>
 80095b4:	b003      	add	sp, #12
 80095b6:	bd30      	pop	{r4, r5, pc}
 80095b8:	20000100 	andcs	r0, r0, r0, lsl #2
 80095bc:	08014a02 	stmdaeq	r1, {r1, r9, fp, lr}
 80095c0:	080149ff 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r7, r8, fp, lr}
 80095c4:	08014a12 	stmdaeq	r1, {r1, r4, r9, fp, lr}

080095c8 <RemoteConfig::HandleVersion()>:
 80095c8:	69c3      	ldr	r3, [r0, #28]
 80095ca:	2b08      	cmp	r3, #8
 80095cc:	d114      	bne.n	80095f8 <RemoteConfig::HandleVersion()+0x30>
 80095ce:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80095d0:	4d0a      	ldr	r5, [pc, #40]	; (80095fc <RemoteConfig::HandleVersion()+0x34>)
 80095d2:	4604      	mov	r4, r0
 80095d4:	f240 31ff 	movw	r1, #1023	; 0x3ff
 80095d8:	4b09      	ldr	r3, [pc, #36]	; (8009600 <RemoteConfig::HandleVersion()+0x38>)
 80095da:	4a0a      	ldr	r2, [pc, #40]	; (8009604 <RemoteConfig::HandleVersion()+0x3c>)
 80095dc:	6828      	ldr	r0, [r5, #0]
 80095de:	f7ff fdab 	bl	8009138 <snprintf>
 80095e2:	f642 1305 	movw	r3, #10501	; 0x2905
 80095e6:	9300      	str	r3, [sp, #0]
 80095e8:	b282      	uxth	r2, r0
 80095ea:	69a3      	ldr	r3, [r4, #24]
 80095ec:	6829      	ldr	r1, [r5, #0]
 80095ee:	7d20      	ldrb	r0, [r4, #20]
 80095f0:	f005 ff8e 	bl	800f510 <udp_send>
 80095f4:	b003      	add	sp, #12
 80095f6:	bd30      	pop	{r4, r5, pc}
 80095f8:	4770      	bx	lr
 80095fa:	bf00      	nop
 80095fc:	20000100 	andcs	r0, r0, r0, lsl #2
 8009600:	2000b81e 	andcs	fp, r0, lr, lsl r8
 8009604:	08014a1b 	stmdaeq	r1, {r0, r1, r3, r4, r9, fp, lr}

08009608 <RemoteConfig::HandleUptime()>:
 8009608:	7bc3      	ldrb	r3, [r0, #15]
 800960a:	b1e3      	cbz	r3, 8009646 <RemoteConfig::HandleUptime()+0x3e>
 800960c:	4b0e      	ldr	r3, [pc, #56]	; (8009648 <RemoteConfig::HandleUptime()+0x40>)
 800960e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009610:	681a      	ldr	r2, [r3, #0]
 8009612:	69c3      	ldr	r3, [r0, #28]
 8009614:	4604      	mov	r4, r0
 8009616:	2b07      	cmp	r3, #7
 8009618:	d113      	bne.n	8009642 <RemoteConfig::HandleUptime()+0x3a>
 800961a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800961e:	4d0b      	ldr	r5, [pc, #44]	; (800964c <RemoteConfig::HandleUptime()+0x44>)
 8009620:	fbb2 f3f3 	udiv	r3, r2, r3
 8009624:	f240 31ff 	movw	r1, #1023	; 0x3ff
 8009628:	4a09      	ldr	r2, [pc, #36]	; (8009650 <RemoteConfig::HandleUptime()+0x48>)
 800962a:	6828      	ldr	r0, [r5, #0]
 800962c:	f7ff fd84 	bl	8009138 <snprintf>
 8009630:	f642 1305 	movw	r3, #10501	; 0x2905
 8009634:	9300      	str	r3, [sp, #0]
 8009636:	b282      	uxth	r2, r0
 8009638:	69a3      	ldr	r3, [r4, #24]
 800963a:	6829      	ldr	r1, [r5, #0]
 800963c:	7d20      	ldrb	r0, [r4, #20]
 800963e:	f005 ff67 	bl	800f510 <udp_send>
 8009642:	b003      	add	sp, #12
 8009644:	bd30      	pop	{r4, r5, pc}
 8009646:	4770      	bx	lr
 8009648:	2000b87c 	andcs	fp, r0, ip, ror r8
 800964c:	20000100 	andcs	r0, r0, r0, lsl #2
 8009650:	08014a26 	stmdaeq	r1, {r1, r2, r5, r9, fp, lr}

08009654 <Display::Status(Display7SegmentMessage)>:
 8009654:	7c43      	ldrb	r3, [r0, #17]
 8009656:	b1bb      	cbz	r3, 8009688 <Display::Status(Display7SegmentMessage)+0x34>
 8009658:	b513      	push	{r0, r1, r4, lr}
 800965a:	2312      	movs	r3, #18
 800965c:	43c9      	mvns	r1, r1
 800965e:	4604      	mov	r4, r0
 8009660:	f88d 3004 	strb.w	r3, [sp, #4]
 8009664:	7a00      	ldrb	r0, [r0, #8]
 8009666:	f3c1 2307 	ubfx	r3, r1, #8, #8
 800966a:	f88d 3005 	strb.w	r3, [sp, #5]
 800966e:	f88d 1006 	strb.w	r1, [sp, #6]
 8009672:	f00a f82d 	bl	80136d0 <gd32_i2c_set_address>
 8009676:	68e0      	ldr	r0, [r4, #12]
 8009678:	f00a f822 	bl	80136c0 <gd32_i2c_set_baudrate>
 800967c:	2103      	movs	r1, #3
 800967e:	a801      	add	r0, sp, #4
 8009680:	f00a f82c 	bl	80136dc <gd32_i2c_write>
 8009684:	b002      	add	sp, #8
 8009686:	bd10      	pop	{r4, pc}
 8009688:	4770      	bx	lr
	...

0800968c <RemoteConfig::HandleDisplaySet()>:
 800968c:	b508      	push	{r3, lr}
 800968e:	69c3      	ldr	r3, [r0, #28]
 8009690:	2b09      	cmp	r3, #9
 8009692:	d10a      	bne.n	80096aa <RemoteConfig::HandleDisplaySet()+0x1e>
 8009694:	4b05      	ldr	r3, [pc, #20]	; (80096ac <RemoteConfig::HandleDisplaySet()+0x20>)
 8009696:	681b      	ldr	r3, [r3, #0]
 8009698:	7a59      	ldrb	r1, [r3, #9]
 800969a:	f1a1 0330 	sub.w	r3, r1, #48	; 0x30
 800969e:	4259      	negs	r1, r3
 80096a0:	4159      	adcs	r1, r3
 80096a2:	4b03      	ldr	r3, [pc, #12]	; (80096b0 <RemoteConfig::HandleDisplaySet()+0x24>)
 80096a4:	6818      	ldr	r0, [r3, #0]
 80096a6:	f7fe fe43 	bl	8008330 <Display::SetSleep(bool)>
 80096aa:	bd08      	pop	{r3, pc}
 80096ac:	20000100 	andcs	r0, r0, r0, lsl #2
 80096b0:	2000b778 	andcs	fp, r0, r8, ror r7

080096b4 <RemoteConfig::HandleTftpSet()>:
 80096b4:	69c3      	ldr	r3, [r0, #28]
 80096b6:	2b06      	cmp	r3, #6
 80096b8:	d127      	bne.n	800970a <RemoteConfig::HandleTftpSet()+0x56>
 80096ba:	b570      	push	{r4, r5, r6, lr}
 80096bc:	4b13      	ldr	r3, [pc, #76]	; (800970c <RemoteConfig::HandleTftpSet()+0x58>)
 80096be:	4e14      	ldr	r6, [pc, #80]	; (8009710 <RemoteConfig::HandleTftpSet()+0x5c>)
 80096c0:	681b      	ldr	r3, [r3, #0]
 80096c2:	4604      	mov	r4, r0
 80096c4:	799b      	ldrb	r3, [r3, #6]
 80096c6:	6835      	ldr	r5, [r6, #0]
 80096c8:	2b30      	cmp	r3, #48	; 0x30
 80096ca:	bf14      	ite	ne
 80096cc:	2301      	movne	r3, #1
 80096ce:	2300      	moveq	r3, #0
 80096d0:	f880 3020 	strb.w	r3, [r0, #32]
 80096d4:	d012      	beq.n	80096fc <RemoteConfig::HandleTftpSet()+0x48>
 80096d6:	4628      	mov	r0, r5
 80096d8:	2100      	movs	r1, #0
 80096da:	f7fe fe29 	bl	8008330 <Display::SetSleep(bool)>
 80096de:	6835      	ldr	r5, [r6, #0]
 80096e0:	490c      	ldr	r1, [pc, #48]	; (8009714 <RemoteConfig::HandleTftpSet()+0x60>)
 80096e2:	4628      	mov	r0, r5
 80096e4:	f7fe fdc6 	bl	8008274 <Display::TextStatus(char const*)>
 80096e8:	f244 0171 	movw	r1, #16497	; 0x4071
 80096ec:	4628      	mov	r0, r5
 80096ee:	f7ff ffb1 	bl	8009654 <Display::Status(Display7SegmentMessage)>
 80096f2:	4620      	mov	r0, r4
 80096f4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80096f8:	f000 bcae 	b.w	800a058 <RemoteConfig::PlatformHandleTftpSet()>
 80096fc:	4906      	ldr	r1, [pc, #24]	; (8009718 <RemoteConfig::HandleTftpSet()+0x64>)
 80096fe:	4628      	mov	r0, r5
 8009700:	f7fe fdb8 	bl	8008274 <Display::TextStatus(char const*)>
 8009704:	f248 0171 	movw	r1, #32881	; 0x8071
 8009708:	e7f0      	b.n	80096ec <RemoteConfig::HandleTftpSet()+0x38>
 800970a:	4770      	bx	lr
 800970c:	20000100 	andcs	r0, r0, r0, lsl #2
 8009710:	2000b778 	andcs	fp, r0, r8, ror r7
 8009714:	08014a33 	stmdaeq	r1, {r0, r1, r4, r5, r9, fp, lr}
 8009718:	08014a45 	stmdaeq	r1, {r0, r2, r6, r9, fp, lr}

0800971c <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>:
 800971c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009720:	2500      	movs	r5, #0
 8009722:	461f      	mov	r7, r3
 8009724:	6083      	str	r3, [r0, #8]
 8009726:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800972a:	4690      	mov	r8, r2
 800972c:	4689      	mov	r9, r1
 800972e:	4e12      	ldr	r6, [pc, #72]	; (8009778 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x5c>)
 8009730:	e9c0 3505 	strd	r3, r5, [r0, #20]
 8009734:	f8df a044 	ldr.w	sl, [pc, #68]	; 800977c <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x60>
 8009738:	4b11      	ldr	r3, [pc, #68]	; (8009780 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x64>)
 800973a:	e9c0 1200 	strd	r1, r2, [r0]
 800973e:	4604      	mov	r4, r0
 8009740:	6018      	str	r0, [r3, #0]
 8009742:	4631      	mov	r1, r6
 8009744:	60c5      	str	r5, [r0, #12]
 8009746:	8205      	strh	r5, [r0, #16]
 8009748:	61c5      	str	r5, [r0, #28]
 800974a:	f880 5020 	strb.w	r5, [r0, #32]
 800974e:	f8da 0000 	ldr.w	r0, [sl]
 8009752:	f006 fbab 	bl	800feac <Network::MacAddressCopyTo(unsigned char*)>
 8009756:	f642 1105 	movw	r1, #10501	; 0x2905
 800975a:	f8da 0000 	ldr.w	r0, [sl]
 800975e:	f886 9006 	strb.w	r9, [r6, #6]
 8009762:	f886 8007 	strb.w	r8, [r6, #7]
 8009766:	7237      	strb	r7, [r6, #8]
 8009768:	7275      	strb	r5, [r6, #9]
 800976a:	f006 fb99 	bl	800fea0 <Network::Begin(unsigned short)>
 800976e:	6160      	str	r0, [r4, #20]
 8009770:	4620      	mov	r0, r4
 8009772:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009776:	bf00      	nop
 8009778:	20000104 	andcs	r0, r0, r4, lsl #2
 800977c:	2000b1a0 	andcs	fp, r0, r0, lsr #3
 8009780:	20000128 	andcs	r0, r0, r8, lsr #2

08009784 <RemoteConfig::GetStringNode() const>:
 8009784:	2012      	movs	r0, #18
 8009786:	4b03      	ldr	r3, [pc, #12]	; (8009794 <RemoteConfig::GetStringNode() const+0x10>)
 8009788:	799a      	ldrb	r2, [r3, #6]
 800978a:	4b03      	ldr	r3, [pc, #12]	; (8009798 <RemoteConfig::GetStringNode() const+0x14>)
 800978c:	fb00 3002 	mla	r0, r0, r2, r3
 8009790:	4770      	bx	lr
 8009792:	bf00      	nop
 8009794:	20000104 	andcs	r0, r0, r4, lsl #2
 8009798:	08014abb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r7, r9, fp, lr}

0800979c <RemoteConfig::GetStringOutput() const>:
 800979c:	200c      	movs	r0, #12
 800979e:	4b03      	ldr	r3, [pc, #12]	; (80097ac <RemoteConfig::GetStringOutput() const+0x10>)
 80097a0:	79da      	ldrb	r2, [r3, #7]
 80097a2:	4b03      	ldr	r3, [pc, #12]	; (80097b0 <RemoteConfig::GetStringOutput() const+0x14>)
 80097a4:	fb00 3002 	mla	r0, r0, r2, r3
 80097a8:	4770      	bx	lr
 80097aa:	bf00      	nop
 80097ac:	20000104 	andcs	r0, r0, r4, lsl #2
 80097b0:	08014b81 	stmdaeq	r1, {r0, r7, r8, r9, fp, lr}

080097b4 <RemoteConfig::SetDisable(bool)>:
 80097b4:	b538      	push	{r3, r4, r5, lr}
 80097b6:	4604      	mov	r4, r0
 80097b8:	7b03      	ldrb	r3, [r0, #12]
 80097ba:	b161      	cbz	r1, 80097d6 <RemoteConfig::SetDisable(bool)+0x22>
 80097bc:	b953      	cbnz	r3, 80097d4 <RemoteConfig::SetDisable(bool)+0x20>
 80097be:	4b0c      	ldr	r3, [pc, #48]	; (80097f0 <RemoteConfig::SetDisable(bool)+0x3c>)
 80097c0:	f642 1105 	movw	r1, #10501	; 0x2905
 80097c4:	6818      	ldr	r0, [r3, #0]
 80097c6:	f006 fb6e 	bl	800fea6 <Network::End(unsigned short)>
 80097ca:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80097ce:	6163      	str	r3, [r4, #20]
 80097d0:	2301      	movs	r3, #1
 80097d2:	7323      	strb	r3, [r4, #12]
 80097d4:	bd38      	pop	{r3, r4, r5, pc}
 80097d6:	2b00      	cmp	r3, #0
 80097d8:	d0fc      	beq.n	80097d4 <RemoteConfig::SetDisable(bool)+0x20>
 80097da:	4b05      	ldr	r3, [pc, #20]	; (80097f0 <RemoteConfig::SetDisable(bool)+0x3c>)
 80097dc:	460d      	mov	r5, r1
 80097de:	6818      	ldr	r0, [r3, #0]
 80097e0:	f642 1105 	movw	r1, #10501	; 0x2905
 80097e4:	f006 fb5c 	bl	800fea0 <Network::Begin(unsigned short)>
 80097e8:	7325      	strb	r5, [r4, #12]
 80097ea:	6160      	str	r0, [r4, #20]
 80097ec:	e7f2      	b.n	80097d4 <RemoteConfig::SetDisable(bool)+0x20>
 80097ee:	bf00      	nop
 80097f0:	2000b1a0 	andcs	fp, r0, r0, lsr #3

080097f4 <RemoteConfig::SetDisplayName(char const*)>:
 80097f4:	2217      	movs	r2, #23
 80097f6:	4809      	ldr	r0, [pc, #36]	; (800981c <RemoteConfig::SetDisplayName(char const*)+0x28>)
 80097f8:	b508      	push	{r3, lr}
 80097fa:	1e4b      	subs	r3, r1, #1
 80097fc:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8009800:	b911      	cbnz	r1, 8009808 <RemoteConfig::SetDisplayName(char const*)+0x14>
 8009802:	f008 ff49 	bl	8012698 <memset>
 8009806:	e003      	b.n	8009810 <RemoteConfig::SetDisplayName(char const*)+0x1c>
 8009808:	3a01      	subs	r2, #1
 800980a:	f800 1b01 	strb.w	r1, [r0], #1
 800980e:	d1f5      	bne.n	80097fc <RemoteConfig::SetDisplayName(char const*)+0x8>
 8009810:	2200      	movs	r2, #0
 8009812:	4b03      	ldr	r3, [pc, #12]	; (8009820 <RemoteConfig::SetDisplayName(char const*)+0x2c>)
 8009814:	f883 2020 	strb.w	r2, [r3, #32]
 8009818:	bd08      	pop	{r3, pc}
 800981a:	bf00      	nop
 800981c:	2000010d 	andcs	r0, r0, sp, lsl #2
 8009820:	20000104 	andcs	r0, r0, r4, lsl #2

08009824 <RemoteConfig::HandleGet(void*, unsigned int)>:
 8009824:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009826:	4604      	mov	r4, r0
 8009828:	4616      	mov	r6, r2
 800982a:	460d      	mov	r5, r1
 800982c:	4f28      	ldr	r7, [pc, #160]	; (80098d0 <RemoteConfig::HandleGet(void*, unsigned int)+0xac>)
 800982e:	b085      	sub	sp, #20
 8009830:	b9a9      	cbnz	r1, 800985e <RemoteConfig::HandleGet(void*, unsigned int)+0x3a>
 8009832:	f44f 737f 	mov.w	r3, #1020	; 0x3fc
 8009836:	6839      	ldr	r1, [r7, #0]
 8009838:	aa03      	add	r2, sp, #12
 800983a:	3105      	adds	r1, #5
 800983c:	9303      	str	r3, [sp, #12]
 800983e:	f000 fbe1 	bl	800a004 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 8009842:	1e03      	subs	r3, r0, #0
 8009844:	da1b      	bge.n	800987e <RemoteConfig::HandleGet(void*, unsigned int)+0x5a>
 8009846:	f642 1305 	movw	r3, #10501	; 0x2905
 800984a:	220b      	movs	r2, #11
 800984c:	9300      	str	r3, [sp, #0]
 800984e:	4921      	ldr	r1, [pc, #132]	; (80098d4 <RemoteConfig::HandleGet(void*, unsigned int)+0xb0>)
 8009850:	69a3      	ldr	r3, [r4, #24]
 8009852:	7d20      	ldrb	r0, [r4, #20]
 8009854:	f005 fe5c 	bl	800f510 <udp_send>
 8009858:	200c      	movs	r0, #12
 800985a:	b005      	add	sp, #20
 800985c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800985e:	9203      	str	r2, [sp, #12]
 8009860:	aa03      	add	r2, sp, #12
 8009862:	6039      	str	r1, [r7, #0]
 8009864:	f000 fbce 	bl	800a004 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 8009868:	1e03      	subs	r3, r0, #0
 800986a:	da08      	bge.n	800987e <RemoteConfig::HandleGet(void*, unsigned int)+0x5a>
 800986c:	2e0b      	cmp	r6, #11
 800986e:	4632      	mov	r2, r6
 8009870:	4628      	mov	r0, r5
 8009872:	bf28      	it	cs
 8009874:	220b      	movcs	r2, #11
 8009876:	4917      	ldr	r1, [pc, #92]	; (80098d4 <RemoteConfig::HandleGet(void*, unsigned int)+0xb0>)
 8009878:	f008 feec 	bl	8012654 <memcpy>
 800987c:	e7ec      	b.n	8009858 <RemoteConfig::HandleGet(void*, unsigned int)+0x34>
 800987e:	221c      	movs	r2, #28
 8009880:	4353      	muls	r3, r2
 8009882:	4915      	ldr	r1, [pc, #84]	; (80098d8 <RemoteConfig::HandleGet(void*, unsigned int)+0xb4>)
 8009884:	18ca      	adds	r2, r1, r3
 8009886:	6852      	ldr	r2, [r2, #4]
 8009888:	58cb      	ldr	r3, [r1, r3]
 800988a:	ea4f 0c62 	mov.w	ip, r2, asr #1
 800988e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8009892:	07d2      	lsls	r2, r2, #31
 8009894:	bf48      	it	mi
 8009896:	f854 200c 	ldrmi.w	r2, [r4, ip]
 800989a:	a903      	add	r1, sp, #12
 800989c:	bf48      	it	mi
 800989e:	58d3      	ldrmi	r3, [r2, r3]
 80098a0:	4798      	blx	r3
 80098a2:	b95d      	cbnz	r5, 80098bc <RemoteConfig::HandleGet(void*, unsigned int)+0x98>
 80098a4:	f642 1305 	movw	r3, #10501	; 0x2905
 80098a8:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 80098ac:	9300      	str	r3, [sp, #0]
 80098ae:	6839      	ldr	r1, [r7, #0]
 80098b0:	69a3      	ldr	r3, [r4, #24]
 80098b2:	7d20      	ldrb	r0, [r4, #20]
 80098b4:	f005 fe2c 	bl	800f510 <udp_send>
 80098b8:	9803      	ldr	r0, [sp, #12]
 80098ba:	e7ce      	b.n	800985a <RemoteConfig::HandleGet(void*, unsigned int)+0x36>
 80098bc:	9a03      	ldr	r2, [sp, #12]
 80098be:	4628      	mov	r0, r5
 80098c0:	42b2      	cmp	r2, r6
 80098c2:	bf28      	it	cs
 80098c4:	4632      	movcs	r2, r6
 80098c6:	6839      	ldr	r1, [r7, #0]
 80098c8:	f008 fecf 	bl	801266a <memmove>
 80098cc:	e7f4      	b.n	80098b8 <RemoteConfig::HandleGet(void*, unsigned int)+0x94>
 80098ce:	bf00      	nop
 80098d0:	20000100 	andcs	r0, r0, r0, lsl #2
 80098d4:	08014a58 	stmdaeq	r1, {r3, r4, r6, r9, fp, lr}
 80098d8:	08014d40 	stmdaeq	r1, {r6, r8, sl, fp, lr}

080098dc <RemoteConfig::HandleGetNoParams()>:
 80098dc:	2200      	movs	r2, #0
 80098de:	4611      	mov	r1, r2
 80098e0:	f7ff bfa0 	b.w	8009824 <RemoteConfig::HandleGet(void*, unsigned int)>

080098e4 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)>:
 80098e4:	b510      	push	{r4, lr}
 80098e6:	460c      	mov	r4, r1
 80098e8:	4b07      	ldr	r3, [pc, #28]	; (8009908 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x24>)
 80098ea:	b08a      	sub	sp, #40	; 0x28
 80098ec:	6819      	ldr	r1, [r3, #0]
 80098ee:	a801      	add	r0, sp, #4
 80098f0:	f000 f9e4 	bl	8009cbc <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 80098f4:	4905      	ldr	r1, [pc, #20]	; (800990c <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x28>)
 80098f6:	4623      	mov	r3, r4
 80098f8:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80098fc:	6809      	ldr	r1, [r1, #0]
 80098fe:	a801      	add	r0, sp, #4
 8009900:	f000 fb00 	bl	8009f04 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>
 8009904:	b00a      	add	sp, #40	; 0x28
 8009906:	bd10      	pop	{r4, pc}
 8009908:	200038b0 			; <UNDEFINED> instruction: 0x200038b0
 800990c:	20000100 	andcs	r0, r0, r0, lsl #2

08009910 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)>:
 8009910:	b510      	push	{r4, lr}
 8009912:	460c      	mov	r4, r1
 8009914:	4b07      	ldr	r3, [pc, #28]	; (8009934 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x24>)
 8009916:	b09a      	sub	sp, #104	; 0x68
 8009918:	6819      	ldr	r1, [r3, #0]
 800991a:	a801      	add	r0, sp, #4
 800991c:	f006 fdd8 	bl	80104d0 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 8009920:	4905      	ldr	r1, [pc, #20]	; (8009938 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x28>)
 8009922:	4623      	mov	r3, r4
 8009924:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8009928:	6809      	ldr	r1, [r1, #0]
 800992a:	a801      	add	r0, sp, #4
 800992c:	f006 ffa6 	bl	801087c <NetworkParams::Save(char*, unsigned int, unsigned int&)>
 8009930:	b01a      	add	sp, #104	; 0x68
 8009932:	bd10      	pop	{r4, pc}
 8009934:	200038a8 	andcs	r3, r0, r8, lsr #17
 8009938:	20000100 	andcs	r0, r0, r0, lsl #2

0800993c <RemoteConfig::HandleGetE131Txt(unsigned int&)>:
 800993c:	b510      	push	{r4, lr}
 800993e:	460c      	mov	r4, r1
 8009940:	4b07      	ldr	r3, [pc, #28]	; (8009960 <RemoteConfig::HandleGetE131Txt(unsigned int&)+0x24>)
 8009942:	b08a      	sub	sp, #40	; 0x28
 8009944:	6819      	ldr	r1, [r3, #0]
 8009946:	a801      	add	r0, sp, #4
 8009948:	f001 ffda 	bl	800b900 <E131Params::E131Params(E131ParamsStore*)>
 800994c:	4905      	ldr	r1, [pc, #20]	; (8009964 <RemoteConfig::HandleGetE131Txt(unsigned int&)+0x28>)
 800994e:	4623      	mov	r3, r4
 8009950:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8009954:	6809      	ldr	r1, [r1, #0]
 8009956:	a801      	add	r0, sp, #4
 8009958:	f002 fac6 	bl	800bee8 <E131Params::Save(char*, unsigned int, unsigned int&)>
 800995c:	b00a      	add	sp, #40	; 0x28
 800995e:	bd10      	pop	{r4, pc}
 8009960:	200038b4 			; <UNDEFINED> instruction: 0x200038b4
 8009964:	20000100 	andcs	r0, r0, r0, lsl #2

08009968 <RemoteConfig::HandleGetParamsTxt(unsigned int&)>:
 8009968:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800996a:	460c      	mov	r4, r1
 800996c:	4b07      	ldr	r3, [pc, #28]	; (800998c <RemoteConfig::HandleGetParamsTxt(unsigned int&)+0x24>)
 800996e:	4668      	mov	r0, sp
 8009970:	6819      	ldr	r1, [r3, #0]
 8009972:	f003 fe43 	bl	800d5fc <DmxParams::DmxParams(DmxParamsStore*)>
 8009976:	4906      	ldr	r1, [pc, #24]	; (8009990 <RemoteConfig::HandleGetParamsTxt(unsigned int&)+0x28>)
 8009978:	4623      	mov	r3, r4
 800997a:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800997e:	4668      	mov	r0, sp
 8009980:	6809      	ldr	r1, [r1, #0]
 8009982:	f003 ff5d 	bl	800d840 <DmxParams::Save(char*, unsigned int, unsigned int&)>
 8009986:	b004      	add	sp, #16
 8009988:	bd10      	pop	{r4, pc}
 800998a:	bf00      	nop
 800998c:	200038a4 	andcs	r3, r0, r4, lsr #17
 8009990:	20000100 	andcs	r0, r0, r0, lsl #2

08009994 <RemoteConfig::HandleGetDisplayTxt(unsigned int&)>:
 8009994:	b510      	push	{r4, lr}
 8009996:	460c      	mov	r4, r1
 8009998:	4b07      	ldr	r3, [pc, #28]	; (80099b8 <RemoteConfig::HandleGetDisplayTxt(unsigned int&)+0x24>)
 800999a:	b08a      	sub	sp, #40	; 0x28
 800999c:	6819      	ldr	r1, [r3, #0]
 800999e:	4668      	mov	r0, sp
 80099a0:	f007 fd22 	bl	80113e8 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 80099a4:	4905      	ldr	r1, [pc, #20]	; (80099bc <RemoteConfig::HandleGetDisplayTxt(unsigned int&)+0x28>)
 80099a6:	4623      	mov	r3, r4
 80099a8:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80099ac:	4668      	mov	r0, sp
 80099ae:	6809      	ldr	r1, [r1, #0]
 80099b0:	f007 fe52 	bl	8011658 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)>
 80099b4:	b00a      	add	sp, #40	; 0x28
 80099b6:	bd10      	pop	{r4, pc}
 80099b8:	200038a0 	andcs	r3, r0, r0, lsr #17
 80099bc:	20000100 	andcs	r0, r0, r0, lsl #2

080099c0 <RemoteConfig::HandleSet(void*, unsigned int)>:
 80099c0:	b530      	push	{r4, r5, lr}
 80099c2:	b085      	sub	sp, #20
 80099c4:	4604      	mov	r4, r0
 80099c6:	9201      	str	r2, [sp, #4]
 80099c8:	b9d1      	cbnz	r1, 8009a00 <RemoteConfig::HandleSet(void*, unsigned int)+0x40>
 80099ca:	f240 33ff 	movw	r3, #1023	; 0x3ff
 80099ce:	9303      	str	r3, [sp, #12]
 80099d0:	4b19      	ldr	r3, [pc, #100]	; (8009a38 <RemoteConfig::HandleSet(void*, unsigned int)+0x78>)
 80099d2:	aa03      	add	r2, sp, #12
 80099d4:	6819      	ldr	r1, [r3, #0]
 80099d6:	3101      	adds	r1, #1
 80099d8:	f000 fb14 	bl	800a004 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 80099dc:	2800      	cmp	r0, #0
 80099de:	db0d      	blt.n	80099fc <RemoteConfig::HandleSet(void*, unsigned int)+0x3c>
 80099e0:	221c      	movs	r2, #28
 80099e2:	4b16      	ldr	r3, [pc, #88]	; (8009a3c <RemoteConfig::HandleSet(void*, unsigned int)+0x7c>)
 80099e4:	fb02 3300 	mla	r3, r2, r0, r3
 80099e8:	68da      	ldr	r2, [r3, #12]
 80099ea:	689b      	ldr	r3, [r3, #8]
 80099ec:	1051      	asrs	r1, r2, #1
 80099ee:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80099f2:	07d2      	lsls	r2, r2, #31
 80099f4:	bf44      	itt	mi
 80099f6:	5862      	ldrmi	r2, [r4, r1]
 80099f8:	58d3      	ldrmi	r3, [r2, r3]
 80099fa:	4798      	blx	r3
 80099fc:	b005      	add	sp, #20
 80099fe:	bd30      	pop	{r4, r5, pc}
 8009a00:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8009a04:	d8fa      	bhi.n	80099fc <RemoteConfig::HandleSet(void*, unsigned int)+0x3c>
 8009a06:	4b0e      	ldr	r3, [pc, #56]	; (8009a40 <RemoteConfig::HandleSet(void*, unsigned int)+0x80>)
 8009a08:	460d      	mov	r5, r1
 8009a0a:	781b      	ldrb	r3, [r3, #0]
 8009a0c:	07d9      	lsls	r1, r3, #31
 8009a0e:	d50b      	bpl.n	8009a28 <RemoteConfig::HandleSet(void*, unsigned int)+0x68>
 8009a10:	782b      	ldrb	r3, [r5, #0]
 8009a12:	2b7b      	cmp	r3, #123	; 0x7b
 8009a14:	d108      	bne.n	8009a28 <RemoteConfig::HandleSet(void*, unsigned int)+0x68>
 8009a16:	1e51      	subs	r1, r2, #1
 8009a18:	4628      	mov	r0, r5
 8009a1a:	2200      	movs	r2, #0
 8009a1c:	b289      	uxth	r1, r1
 8009a1e:	f007 fee9 	bl	80117f4 <properties::convert_json_file(char*, unsigned short, bool)>
 8009a22:	1e02      	subs	r2, r0, #0
 8009a24:	ddea      	ble.n	80099fc <RemoteConfig::HandleSet(void*, unsigned int)+0x3c>
 8009a26:	b292      	uxth	r2, r2
 8009a28:	4b03      	ldr	r3, [pc, #12]	; (8009a38 <RemoteConfig::HandleSet(void*, unsigned int)+0x78>)
 8009a2a:	61e2      	str	r2, [r4, #28]
 8009a2c:	4620      	mov	r0, r4
 8009a2e:	601d      	str	r5, [r3, #0]
 8009a30:	aa01      	add	r2, sp, #4
 8009a32:	1c69      	adds	r1, r5, #1
 8009a34:	e7d0      	b.n	80099d8 <RemoteConfig::HandleSet(void*, unsigned int)+0x18>
 8009a36:	bf00      	nop
 8009a38:	20000100 	andcs	r0, r0, r0, lsl #2
 8009a3c:	08014d40 	stmdaeq	r1, {r6, r8, sl, fp, lr}
 8009a40:	2000b774 	andcs	fp, r0, r4, ror r7

08009a44 <RemoteConfig::Run()>:
 8009a44:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8009a48:	7b05      	ldrb	r5, [r0, #12]
 8009a4a:	2d00      	cmp	r5, #0
 8009a4c:	d156      	bne.n	8009afc <RemoteConfig::Run()+0xb8>
 8009a4e:	4e45      	ldr	r6, [pc, #276]	; (8009b64 <RemoteConfig::Run()+0x120>)
 8009a50:	4604      	mov	r4, r0
 8009a52:	f100 0218 	add.w	r2, r0, #24
 8009a56:	4631      	mov	r1, r6
 8009a58:	7d00      	ldrb	r0, [r0, #20]
 8009a5a:	f10d 030e 	add.w	r3, sp, #14
 8009a5e:	f005 fd31 	bl	800f4c4 <udp_recv2>
 8009a62:	2803      	cmp	r0, #3
 8009a64:	61e0      	str	r0, [r4, #28]
 8009a66:	d949      	bls.n	8009afc <RemoteConfig::Run()+0xb8>
 8009a68:	6831      	ldr	r1, [r6, #0]
 8009a6a:	1e43      	subs	r3, r0, #1
 8009a6c:	5cca      	ldrb	r2, [r1, r3]
 8009a6e:	2a0a      	cmp	r2, #10
 8009a70:	bf18      	it	ne
 8009a72:	4603      	movne	r3, r0
 8009a74:	61e3      	str	r3, [r4, #28]
 8009a76:	7808      	ldrb	r0, [r1, #0]
 8009a78:	283f      	cmp	r0, #63	; 0x3f
 8009a7a:	d137      	bne.n	8009aec <RemoteConfig::Run()+0xa8>
 8009a7c:	f8df c0e8 	ldr.w	ip, [pc, #232]	; 8009b68 <RemoteConfig::Run()+0x124>
 8009a80:	462a      	mov	r2, r5
 8009a82:	4667      	mov	r7, ip
 8009a84:	3b01      	subs	r3, #1
 8009a86:	61e3      	str	r3, [r4, #28]
 8009a88:	f89c 500e 	ldrb.w	r5, [ip, #14]
 8009a8c:	f8bc 000c 	ldrh.w	r0, [ip, #12]
 8009a90:	b16d      	cbz	r5, 8009aae <RemoteConfig::Run()+0x6a>
 8009a92:	4283      	cmp	r3, r0
 8009a94:	d80d      	bhi.n	8009ab2 <RemoteConfig::Run()+0x6e>
 8009a96:	3201      	adds	r2, #1
 8009a98:	2a09      	cmp	r2, #9
 8009a9a:	f10c 0c10 	add.w	ip, ip, #16
 8009a9e:	d1f3      	bne.n	8009a88 <RemoteConfig::Run()+0x44>
 8009aa0:	f642 1305 	movw	r3, #10501	; 0x2905
 8009aa4:	9300      	str	r3, [sp, #0]
 8009aa6:	2208      	movs	r2, #8
 8009aa8:	69a3      	ldr	r3, [r4, #24]
 8009aaa:	4930      	ldr	r1, [pc, #192]	; (8009b6c <RemoteConfig::Run()+0x128>)
 8009aac:	e04e      	b.n	8009b4c <RemoteConfig::Run()+0x108>
 8009aae:	4283      	cmp	r3, r0
 8009ab0:	d1f1      	bne.n	8009a96 <RemoteConfig::Run()+0x52>
 8009ab2:	460e      	mov	r6, r1
 8009ab4:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8009ab8:	4408      	add	r0, r1
 8009aba:	3d01      	subs	r5, #1
 8009abc:	4286      	cmp	r6, r0
 8009abe:	d10b      	bne.n	8009ad8 <RemoteConfig::Run()+0x94>
 8009ac0:	0113      	lsls	r3, r2, #4
 8009ac2:	eb07 1202 	add.w	r2, r7, r2, lsl #4
 8009ac6:	6852      	ldr	r2, [r2, #4]
 8009ac8:	58fb      	ldr	r3, [r7, r3]
 8009aca:	1051      	asrs	r1, r2, #1
 8009acc:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8009ad0:	07d2      	lsls	r2, r2, #31
 8009ad2:	d408      	bmi.n	8009ae6 <RemoteConfig::Run()+0xa2>
 8009ad4:	4798      	blx	r3
 8009ad6:	e011      	b.n	8009afc <RemoteConfig::Run()+0xb8>
 8009ad8:	f816 8f01 	ldrb.w	r8, [r6, #1]!
 8009adc:	f815 ef01 	ldrb.w	lr, [r5, #1]!
 8009ae0:	45f0      	cmp	r8, lr
 8009ae2:	d0eb      	beq.n	8009abc <RemoteConfig::Run()+0x78>
 8009ae4:	e7d7      	b.n	8009a96 <RemoteConfig::Run()+0x52>
 8009ae6:	5862      	ldr	r2, [r4, r1]
 8009ae8:	58d3      	ldr	r3, [r2, r3]
 8009aea:	e7f3      	b.n	8009ad4 <RemoteConfig::Run()+0x90>
 8009aec:	7b62      	ldrb	r2, [r4, #13]
 8009aee:	b92a      	cbnz	r2, 8009afc <RemoteConfig::Run()+0xb8>
 8009af0:	2823      	cmp	r0, #35	; 0x23
 8009af2:	d106      	bne.n	8009b02 <RemoteConfig::Run()+0xbe>
 8009af4:	4611      	mov	r1, r2
 8009af6:	4620      	mov	r0, r4
 8009af8:	f7ff ff62 	bl	80099c0 <RemoteConfig::HandleSet(void*, unsigned int)>
 8009afc:	b004      	add	sp, #16
 8009afe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009b02:	2821      	cmp	r0, #33	; 0x21
 8009b04:	d1fa      	bne.n	8009afc <RemoteConfig::Run()+0xb8>
 8009b06:	3b01      	subs	r3, #1
 8009b08:	2b05      	cmp	r3, #5
 8009b0a:	61e3      	str	r3, [r4, #28]
 8009b0c:	d918      	bls.n	8009b40 <RemoteConfig::Run()+0xfc>
 8009b0e:	460a      	mov	r2, r1
 8009b10:	4608      	mov	r0, r1
 8009b12:	4d17      	ldr	r5, [pc, #92]	; (8009b70 <RemoteConfig::Run()+0x12c>)
 8009b14:	f101 0c05 	add.w	ip, r1, #5
 8009b18:	4560      	cmp	r0, ip
 8009b1a:	d01b      	beq.n	8009b54 <RemoteConfig::Run()+0x110>
 8009b1c:	f815 6b01 	ldrb.w	r6, [r5], #1
 8009b20:	f810 7f01 	ldrb.w	r7, [r0, #1]!
 8009b24:	42b7      	cmp	r7, r6
 8009b26:	d0f7      	beq.n	8009b18 <RemoteConfig::Run()+0xd4>
 8009b28:	2b08      	cmp	r3, #8
 8009b2a:	d909      	bls.n	8009b40 <RemoteConfig::Run()+0xfc>
 8009b2c:	4b11      	ldr	r3, [pc, #68]	; (8009b74 <RemoteConfig::Run()+0x130>)
 8009b2e:	3108      	adds	r1, #8
 8009b30:	428a      	cmp	r2, r1
 8009b32:	d015      	beq.n	8009b60 <RemoteConfig::Run()+0x11c>
 8009b34:	f813 0b01 	ldrb.w	r0, [r3], #1
 8009b38:	f812 5f01 	ldrb.w	r5, [r2, #1]!
 8009b3c:	4285      	cmp	r5, r0
 8009b3e:	d0f7      	beq.n	8009b30 <RemoteConfig::Run()+0xec>
 8009b40:	f642 1305 	movw	r3, #10501	; 0x2905
 8009b44:	2208      	movs	r2, #8
 8009b46:	9300      	str	r3, [sp, #0]
 8009b48:	69a3      	ldr	r3, [r4, #24]
 8009b4a:	490b      	ldr	r1, [pc, #44]	; (8009b78 <RemoteConfig::Run()+0x134>)
 8009b4c:	7d20      	ldrb	r0, [r4, #20]
 8009b4e:	f005 fcdf 	bl	800f510 <udp_send>
 8009b52:	e7d3      	b.n	8009afc <RemoteConfig::Run()+0xb8>
 8009b54:	2300      	movs	r3, #0
 8009b56:	4a09      	ldr	r2, [pc, #36]	; (8009b7c <RemoteConfig::Run()+0x138>)
 8009b58:	011b      	lsls	r3, r3, #4
 8009b5a:	4620      	mov	r0, r4
 8009b5c:	58d3      	ldr	r3, [r2, r3]
 8009b5e:	e7b9      	b.n	8009ad4 <RemoteConfig::Run()+0x90>
 8009b60:	2301      	movs	r3, #1
 8009b62:	e7f8      	b.n	8009b56 <RemoteConfig::Run()+0x112>
 8009b64:	20000100 	andcs	r0, r0, r0, lsl #2
 8009b68:	08014c14 	stmdaeq	r1, {r2, r4, sl, fp, lr}
 8009b6c:	08014a7c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r9, fp, lr}
 8009b70:	08014a64 	stmdaeq	r1, {r2, r5, r6, r9, fp, lr}
 8009b74:	08014a6a 	stmdaeq	r1, {r1, r3, r5, r6, r9, fp, lr}
 8009b78:	08014a73 	stmdaeq	r1, {r0, r1, r4, r5, r6, r9, fp, lr}
 8009b7c:	08014ca4 	stmdaeq	r1, {r2, r5, r7, sl, fp, lr}

08009b80 <RemoteConfig::HandleSetRconfig()>:
 8009b80:	b510      	push	{r4, lr}
 8009b82:	4604      	mov	r4, r0
 8009b84:	4b08      	ldr	r3, [pc, #32]	; (8009ba8 <RemoteConfig::HandleSetRconfig()+0x28>)
 8009b86:	b08a      	sub	sp, #40	; 0x28
 8009b88:	6819      	ldr	r1, [r3, #0]
 8009b8a:	a801      	add	r0, sp, #4
 8009b8c:	f000 f896 	bl	8009cbc <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 8009b90:	4b06      	ldr	r3, [pc, #24]	; (8009bac <RemoteConfig::HandleSetRconfig()+0x2c>)
 8009b92:	69e2      	ldr	r2, [r4, #28]
 8009b94:	6819      	ldr	r1, [r3, #0]
 8009b96:	a801      	add	r0, sp, #4
 8009b98:	f000 f8a6 	bl	8009ce8 <RemoteConfigParams::Load(char const*, unsigned int)>
 8009b9c:	4621      	mov	r1, r4
 8009b9e:	a801      	add	r0, sp, #4
 8009ba0:	f000 f9bd 	bl	8009f1e <RemoteConfigParams::Set(RemoteConfig*)>
 8009ba4:	b00a      	add	sp, #40	; 0x28
 8009ba6:	bd10      	pop	{r4, pc}
 8009ba8:	200038b0 			; <UNDEFINED> instruction: 0x200038b0
 8009bac:	20000100 	andcs	r0, r0, r0, lsl #2

08009bb0 <RemoteConfig::HandleSetNetworkTxt()>:
 8009bb0:	b510      	push	{r4, lr}
 8009bb2:	4604      	mov	r4, r0
 8009bb4:	4b06      	ldr	r3, [pc, #24]	; (8009bd0 <RemoteConfig::HandleSetNetworkTxt()+0x20>)
 8009bb6:	b09a      	sub	sp, #104	; 0x68
 8009bb8:	6819      	ldr	r1, [r3, #0]
 8009bba:	a801      	add	r0, sp, #4
 8009bbc:	f006 fc88 	bl	80104d0 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 8009bc0:	4b04      	ldr	r3, [pc, #16]	; (8009bd4 <RemoteConfig::HandleSetNetworkTxt()+0x24>)
 8009bc2:	69e2      	ldr	r2, [r4, #28]
 8009bc4:	6819      	ldr	r1, [r3, #0]
 8009bc6:	a801      	add	r0, sp, #4
 8009bc8:	f006 fc9a 	bl	8010500 <NetworkParams::Load(char const*, unsigned int)>
 8009bcc:	b01a      	add	sp, #104	; 0x68
 8009bce:	bd10      	pop	{r4, pc}
 8009bd0:	200038a8 	andcs	r3, r0, r8, lsr #17
 8009bd4:	20000100 	andcs	r0, r0, r0, lsl #2

08009bd8 <RemoteConfig::HandleSetE131Txt()>:
 8009bd8:	b510      	push	{r4, lr}
 8009bda:	4604      	mov	r4, r0
 8009bdc:	4b06      	ldr	r3, [pc, #24]	; (8009bf8 <RemoteConfig::HandleSetE131Txt()+0x20>)
 8009bde:	b08a      	sub	sp, #40	; 0x28
 8009be0:	6819      	ldr	r1, [r3, #0]
 8009be2:	a801      	add	r0, sp, #4
 8009be4:	f001 fe8c 	bl	800b900 <E131Params::E131Params(E131ParamsStore*)>
 8009be8:	4b04      	ldr	r3, [pc, #16]	; (8009bfc <RemoteConfig::HandleSetE131Txt()+0x24>)
 8009bea:	69e2      	ldr	r2, [r4, #28]
 8009bec:	6819      	ldr	r1, [r3, #0]
 8009bee:	a801      	add	r0, sp, #4
 8009bf0:	f001 feb6 	bl	800b960 <E131Params::Load(char const*, unsigned int)>
 8009bf4:	b00a      	add	sp, #40	; 0x28
 8009bf6:	bd10      	pop	{r4, pc}
 8009bf8:	200038b4 			; <UNDEFINED> instruction: 0x200038b4
 8009bfc:	20000100 	andcs	r0, r0, r0, lsl #2

08009c00 <RemoteConfig::HandleSetParamsTxt()>:
 8009c00:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8009c02:	4604      	mov	r4, r0
 8009c04:	4b06      	ldr	r3, [pc, #24]	; (8009c20 <RemoteConfig::HandleSetParamsTxt()+0x20>)
 8009c06:	4668      	mov	r0, sp
 8009c08:	6819      	ldr	r1, [r3, #0]
 8009c0a:	f003 fcf7 	bl	800d5fc <DmxParams::DmxParams(DmxParamsStore*)>
 8009c0e:	4b05      	ldr	r3, [pc, #20]	; (8009c24 <RemoteConfig::HandleSetParamsTxt()+0x24>)
 8009c10:	4668      	mov	r0, sp
 8009c12:	69e2      	ldr	r2, [r4, #28]
 8009c14:	6819      	ldr	r1, [r3, #0]
 8009c16:	f003 fd09 	bl	800d62c <DmxParams::Load(char const*, unsigned int)>
 8009c1a:	b004      	add	sp, #16
 8009c1c:	bd10      	pop	{r4, pc}
 8009c1e:	bf00      	nop
 8009c20:	200038a4 	andcs	r3, r0, r4, lsr #17
 8009c24:	20000100 	andcs	r0, r0, r0, lsl #2

08009c28 <RemoteConfig::HandleSetDisplayTxt()>:
 8009c28:	b510      	push	{r4, lr}
 8009c2a:	4604      	mov	r4, r0
 8009c2c:	4b06      	ldr	r3, [pc, #24]	; (8009c48 <RemoteConfig::HandleSetDisplayTxt()+0x20>)
 8009c2e:	b08a      	sub	sp, #40	; 0x28
 8009c30:	6819      	ldr	r1, [r3, #0]
 8009c32:	4668      	mov	r0, sp
 8009c34:	f007 fbd8 	bl	80113e8 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 8009c38:	4b04      	ldr	r3, [pc, #16]	; (8009c4c <RemoteConfig::HandleSetDisplayTxt()+0x24>)
 8009c3a:	4668      	mov	r0, sp
 8009c3c:	69e2      	ldr	r2, [r4, #28]
 8009c3e:	6819      	ldr	r1, [r3, #0]
 8009c40:	f007 fbec 	bl	801141c <DisplayUdfParams::Load(char const*, unsigned int)>
 8009c44:	b00a      	add	sp, #40	; 0x28
 8009c46:	bd10      	pop	{r4, pc}
 8009c48:	200038a0 	andcs	r3, r0, r0, lsr #17
 8009c4c:	20000100 	andcs	r0, r0, r0, lsl #2

08009c50 <RemoteConfig::HandleFactory()>:
 8009c50:	b538      	push	{r3, r4, r5, lr}
 8009c52:	2400      	movs	r4, #0
 8009c54:	4d04      	ldr	r5, [pc, #16]	; (8009c68 <RemoteConfig::HandleFactory()+0x18>)
 8009c56:	4621      	mov	r1, r4
 8009c58:	6828      	ldr	r0, [r5, #0]
 8009c5a:	3401      	adds	r4, #1
 8009c5c:	f004 fcfe 	bl	800e65c <SpiFlashStore::ResetSetList(spiflashstore::Store)>
 8009c60:	2c1c      	cmp	r4, #28
 8009c62:	d1f8      	bne.n	8009c56 <RemoteConfig::HandleFactory()+0x6>
 8009c64:	bd38      	pop	{r3, r4, r5, pc}
 8009c66:	bf00      	nop
 8009c68:	20003898 	mulcs	r0, r8, r8

08009c6c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>:
 8009c6c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009c6e:	460b      	mov	r3, r1
 8009c70:	8885      	ldrh	r5, [r0, #4]
 8009c72:	88c1      	ldrh	r1, [r0, #6]
 8009c74:	42a9      	cmp	r1, r5
 8009c76:	d214      	bcs.n	8009ca2 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x36>
 8009c78:	4604      	mov	r4, r0
 8009c7a:	6800      	ldr	r0, [r0, #0]
 8009c7c:	1a6d      	subs	r5, r5, r1
 8009c7e:	4408      	add	r0, r1
 8009c80:	7a21      	ldrb	r1, [r4, #8]
 8009c82:	b91a      	cbnz	r2, 8009c8c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x20>
 8009c84:	b919      	cbnz	r1, 8009c8e <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x22>
 8009c86:	4a0a      	ldr	r2, [pc, #40]	; (8009cb0 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x44>)
 8009c88:	9100      	str	r1, [sp, #0]
 8009c8a:	e002      	b.n	8009c92 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 8009c8c:	b159      	cbz	r1, 8009ca6 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x3a>
 8009c8e:	9200      	str	r2, [sp, #0]
 8009c90:	4a08      	ldr	r2, [pc, #32]	; (8009cb4 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x48>)
 8009c92:	4629      	mov	r1, r5
 8009c94:	f7ff fa50 	bl	8009138 <snprintf>
 8009c98:	4285      	cmp	r5, r0
 8009c9a:	bfa2      	ittt	ge
 8009c9c:	88e3      	ldrhge	r3, [r4, #6]
 8009c9e:	181b      	addge	r3, r3, r0
 8009ca0:	80e3      	strhge	r3, [r4, #6]
 8009ca2:	b003      	add	sp, #12
 8009ca4:	bd30      	pop	{r4, r5, pc}
 8009ca6:	2201      	movs	r2, #1
 8009ca8:	9200      	str	r2, [sp, #0]
 8009caa:	4a03      	ldr	r2, [pc, #12]	; (8009cb8 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x4c>)
 8009cac:	e7f1      	b.n	8009c92 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 8009cae:	bf00      	nop
 8009cb0:	08014ccd 	stmdaeq	r1, {r0, r2, r3, r6, r7, sl, fp, lr}
 8009cb4:	08014cc4 	stmdaeq	r1, {r2, r6, r7, sl, fp, lr}
 8009cb8:	08014cce 	stmdaeq	r1, {r1, r2, r3, r6, r7, sl, fp, lr}

08009cbc <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>:
 8009cbc:	b510      	push	{r4, lr}
 8009cbe:	4604      	mov	r4, r0
 8009cc0:	2220      	movs	r2, #32
 8009cc2:	f840 1b04 	str.w	r1, [r0], #4
 8009cc6:	2100      	movs	r1, #0
 8009cc8:	f008 fce6 	bl	8012698 <memset>
 8009ccc:	4620      	mov	r0, r4
 8009cce:	bd10      	pop	{r4, pc}

08009cd0 <RemoteConfigParams::Load()>:
 8009cd0:	b508      	push	{r3, lr}
 8009cd2:	2300      	movs	r3, #0
 8009cd4:	4601      	mov	r1, r0
 8009cd6:	6043      	str	r3, [r0, #4]
 8009cd8:	6800      	ldr	r0, [r0, #0]
 8009cda:	b120      	cbz	r0, 8009ce6 <RemoteConfigParams::Load()+0x16>
 8009cdc:	6803      	ldr	r3, [r0, #0]
 8009cde:	3104      	adds	r1, #4
 8009ce0:	68db      	ldr	r3, [r3, #12]
 8009ce2:	4798      	blx	r3
 8009ce4:	2001      	movs	r0, #1
 8009ce6:	bd08      	pop	{r3, pc}

08009ce8 <RemoteConfigParams::Load(char const*, unsigned int)>:
 8009ce8:	2300      	movs	r3, #0
 8009cea:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009cec:	460d      	mov	r5, r1
 8009cee:	4616      	mov	r6, r2
 8009cf0:	4604      	mov	r4, r0
 8009cf2:	6043      	str	r3, [r0, #4]
 8009cf4:	4602      	mov	r2, r0
 8009cf6:	490a      	ldr	r1, [pc, #40]	; (8009d20 <RemoteConfigParams::Load(char const*, unsigned int)+0x38>)
 8009cf8:	4668      	mov	r0, sp
 8009cfa:	f007 fecd 	bl	8011a98 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 8009cfe:	4632      	mov	r2, r6
 8009d00:	4629      	mov	r1, r5
 8009d02:	4668      	mov	r0, sp
 8009d04:	f007 fecc 	bl	8011aa0 <ReadConfigFile::Read(char const*, unsigned int)>
 8009d08:	4621      	mov	r1, r4
 8009d0a:	f851 0b04 	ldr.w	r0, [r1], #4
 8009d0e:	6803      	ldr	r3, [r0, #0]
 8009d10:	689b      	ldr	r3, [r3, #8]
 8009d12:	4798      	blx	r3
 8009d14:	4668      	mov	r0, sp
 8009d16:	f007 fec2 	bl	8011a9e <ReadConfigFile::~ReadConfigFile()>
 8009d1a:	b002      	add	sp, #8
 8009d1c:	bd70      	pop	{r4, r5, r6, pc}
 8009d1e:	bf00      	nop
 8009d20:	08009de1 	stmdaeq	r0, {r0, r5, r6, r7, r8, sl, fp, ip, pc}

08009d24 <RemoteConfigParams::SetBool(unsigned char, unsigned int)>:
 8009d24:	6843      	ldr	r3, [r0, #4]
 8009d26:	b111      	cbz	r1, 8009d2e <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0xa>
 8009d28:	4313      	orrs	r3, r2
 8009d2a:	6043      	str	r3, [r0, #4]
 8009d2c:	4770      	bx	lr
 8009d2e:	ea23 0302 	bic.w	r3, r3, r2
 8009d32:	e7fa      	b.n	8009d2a <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0x6>

08009d34 <RemoteConfigParams::callbackFunction(char const*)>:
 8009d34:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009d36:	460d      	mov	r5, r1
 8009d38:	4604      	mov	r4, r0
 8009d3a:	4923      	ldr	r1, [pc, #140]	; (8009dc8 <RemoteConfigParams::callbackFunction(char const*)+0x94>)
 8009d3c:	4628      	mov	r0, r5
 8009d3e:	f10d 0203 	add.w	r2, sp, #3
 8009d42:	f007 ff59 	bl	8011bf8 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8009d46:	b940      	cbnz	r0, 8009d5a <RemoteConfigParams::callbackFunction(char const*)+0x26>
 8009d48:	2201      	movs	r2, #1
 8009d4a:	4620      	mov	r0, r4
 8009d4c:	f89d 1003 	ldrb.w	r1, [sp, #3]
 8009d50:	b003      	add	sp, #12
 8009d52:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8009d56:	f7ff bfe5 	b.w	8009d24 <RemoteConfigParams::SetBool(unsigned char, unsigned int)>
 8009d5a:	4628      	mov	r0, r5
 8009d5c:	491b      	ldr	r1, [pc, #108]	; (8009dcc <RemoteConfigParams::callbackFunction(char const*)+0x98>)
 8009d5e:	f10d 0203 	add.w	r2, sp, #3
 8009d62:	f007 ff49 	bl	8011bf8 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8009d66:	b908      	cbnz	r0, 8009d6c <RemoteConfigParams::callbackFunction(char const*)+0x38>
 8009d68:	2202      	movs	r2, #2
 8009d6a:	e7ee      	b.n	8009d4a <RemoteConfigParams::callbackFunction(char const*)+0x16>
 8009d6c:	4628      	mov	r0, r5
 8009d6e:	4918      	ldr	r1, [pc, #96]	; (8009dd0 <RemoteConfigParams::callbackFunction(char const*)+0x9c>)
 8009d70:	f10d 0203 	add.w	r2, sp, #3
 8009d74:	f007 ff40 	bl	8011bf8 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8009d78:	b908      	cbnz	r0, 8009d7e <RemoteConfigParams::callbackFunction(char const*)+0x4a>
 8009d7a:	2204      	movs	r2, #4
 8009d7c:	e7e5      	b.n	8009d4a <RemoteConfigParams::callbackFunction(char const*)+0x16>
 8009d7e:	4628      	mov	r0, r5
 8009d80:	4914      	ldr	r1, [pc, #80]	; (8009dd4 <RemoteConfigParams::callbackFunction(char const*)+0xa0>)
 8009d82:	f10d 0203 	add.w	r2, sp, #3
 8009d86:	f007 ff37 	bl	8011bf8 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8009d8a:	b908      	cbnz	r0, 8009d90 <RemoteConfigParams::callbackFunction(char const*)+0x5c>
 8009d8c:	2208      	movs	r2, #8
 8009d8e:	e7dc      	b.n	8009d4a <RemoteConfigParams::callbackFunction(char const*)+0x16>
 8009d90:	4628      	mov	r0, r5
 8009d92:	4911      	ldr	r1, [pc, #68]	; (8009dd8 <RemoteConfigParams::callbackFunction(char const*)+0xa4>)
 8009d94:	f10d 0203 	add.w	r2, sp, #3
 8009d98:	f007 ff2e 	bl	8011bf8 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8009d9c:	b908      	cbnz	r0, 8009da2 <RemoteConfigParams::callbackFunction(char const*)+0x6e>
 8009d9e:	2220      	movs	r2, #32
 8009da0:	e7d3      	b.n	8009d4a <RemoteConfigParams::callbackFunction(char const*)+0x16>
 8009da2:	2317      	movs	r3, #23
 8009da4:	4628      	mov	r0, r5
 8009da6:	9301      	str	r3, [sp, #4]
 8009da8:	490c      	ldr	r1, [pc, #48]	; (8009ddc <RemoteConfigParams::callbackFunction(char const*)+0xa8>)
 8009daa:	ab01      	add	r3, sp, #4
 8009dac:	f104 020c 	add.w	r2, r4, #12
 8009db0:	f007 feaa 	bl	8011b08 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 8009db4:	b930      	cbnz	r0, 8009dc4 <RemoteConfigParams::callbackFunction(char const*)+0x90>
 8009db6:	9b01      	ldr	r3, [sp, #4]
 8009db8:	4423      	add	r3, r4
 8009dba:	7318      	strb	r0, [r3, #12]
 8009dbc:	6863      	ldr	r3, [r4, #4]
 8009dbe:	f043 0310 	orr.w	r3, r3, #16
 8009dc2:	6063      	str	r3, [r4, #4]
 8009dc4:	b003      	add	sp, #12
 8009dc6:	bd30      	pop	{r4, r5, pc}
 8009dc8:	080150b1 	stmdaeq	r1, {r0, r4, r5, r7, ip, lr}
 8009dcc:	080150d2 	stmdaeq	r1, {r1, r4, r6, r7, ip, lr}
 8009dd0:	080150e0 	stmdaeq	r1, {r5, r6, r7, ip, lr}
 8009dd4:	080150ee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, ip, lr}
 8009dd8:	080150fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, ip, lr}
 8009ddc:	080150c5 	stmdaeq	r1, {r0, r2, r6, r7, ip, lr}

08009de0 <RemoteConfigParams::staticCallbackFunction(void*, char const*)>:
 8009de0:	f7ff bfa8 	b.w	8009d34 <RemoteConfigParams::callbackFunction(char const*)>

08009de4 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>:
 8009de4:	b570      	push	{r4, r5, r6, lr}
 8009de6:	4604      	mov	r4, r0
 8009de8:	4615      	mov	r5, r2
 8009dea:	461e      	mov	r6, r3
 8009dec:	b086      	sub	sp, #24
 8009dee:	3004      	adds	r0, #4
 8009df0:	2900      	cmp	r1, #0
 8009df2:	d041      	beq.n	8009e78 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x94>
 8009df4:	2220      	movs	r2, #32
 8009df6:	f008 fc38 	bl	801266a <memmove>
 8009dfa:	4633      	mov	r3, r6
 8009dfc:	462a      	mov	r2, r5
 8009dfe:	4937      	ldr	r1, [pc, #220]	; (8009edc <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xf8>)
 8009e00:	a803      	add	r0, sp, #12
 8009e02:	f007 fda9 	bl	8011958 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 8009e06:	6862      	ldr	r2, [r4, #4]
 8009e08:	4935      	ldr	r1, [pc, #212]	; (8009ee0 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xfc>)
 8009e0a:	f002 0201 	and.w	r2, r2, #1
 8009e0e:	a803      	add	r0, sp, #12
 8009e10:	f7ff ff2c 	bl	8009c6c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 8009e14:	6862      	ldr	r2, [r4, #4]
 8009e16:	4933      	ldr	r1, [pc, #204]	; (8009ee4 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x100>)
 8009e18:	f3c2 0240 	ubfx	r2, r2, #1, #1
 8009e1c:	a803      	add	r0, sp, #12
 8009e1e:	f7ff ff25 	bl	8009c6c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 8009e22:	6862      	ldr	r2, [r4, #4]
 8009e24:	4930      	ldr	r1, [pc, #192]	; (8009ee8 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x104>)
 8009e26:	f3c2 0280 	ubfx	r2, r2, #2, #1
 8009e2a:	a803      	add	r0, sp, #12
 8009e2c:	f7ff ff1e 	bl	8009c6c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 8009e30:	6862      	ldr	r2, [r4, #4]
 8009e32:	492e      	ldr	r1, [pc, #184]	; (8009eec <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x108>)
 8009e34:	f3c2 02c0 	ubfx	r2, r2, #3, #1
 8009e38:	a803      	add	r0, sp, #12
 8009e3a:	f7ff ff17 	bl	8009c6c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 8009e3e:	6862      	ldr	r2, [r4, #4]
 8009e40:	492b      	ldr	r1, [pc, #172]	; (8009ef0 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x10c>)
 8009e42:	f3c2 1240 	ubfx	r2, r2, #5, #1
 8009e46:	a803      	add	r0, sp, #12
 8009e48:	f7ff ff10 	bl	8009c6c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 8009e4c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8009e50:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8009e54:	6862      	ldr	r2, [r4, #4]
 8009e56:	42ab      	cmp	r3, r5
 8009e58:	d223      	bcs.n	8009ea2 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xbe>
 8009e5a:	9803      	ldr	r0, [sp, #12]
 8009e5c:	06d2      	lsls	r2, r2, #27
 8009e5e:	4418      	add	r0, r3
 8009e60:	eba5 0503 	sub.w	r5, r5, r3
 8009e64:	f104 040c 	add.w	r4, r4, #12
 8009e68:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8009e6c:	d40b      	bmi.n	8009e86 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa2>
 8009e6e:	b95b      	cbnz	r3, 8009e88 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa4>
 8009e70:	4b20      	ldr	r3, [pc, #128]	; (8009ef4 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 8009e72:	4a21      	ldr	r2, [pc, #132]	; (8009ef8 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x114>)
 8009e74:	9400      	str	r4, [sp, #0]
 8009e76:	e00a      	b.n	8009e8e <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xaa>
 8009e78:	6823      	ldr	r3, [r4, #0]
 8009e7a:	4601      	mov	r1, r0
 8009e7c:	681a      	ldr	r2, [r3, #0]
 8009e7e:	4618      	mov	r0, r3
 8009e80:	68d2      	ldr	r2, [r2, #12]
 8009e82:	4790      	blx	r2
 8009e84:	e7b9      	b.n	8009dfa <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x16>
 8009e86:	b32b      	cbz	r3, 8009ed4 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xf0>
 8009e88:	4b1a      	ldr	r3, [pc, #104]	; (8009ef4 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 8009e8a:	4a1c      	ldr	r2, [pc, #112]	; (8009efc <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x118>)
 8009e8c:	9400      	str	r4, [sp, #0]
 8009e8e:	4629      	mov	r1, r5
 8009e90:	f7ff f952 	bl	8009138 <snprintf>
 8009e94:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8009e98:	4285      	cmp	r5, r0
 8009e9a:	bfa4      	itt	ge
 8009e9c:	181b      	addge	r3, r3, r0
 8009e9e:	f8ad 3012 	strhge.w	r3, [sp, #18]
 8009ea2:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8009ea6:	b17b      	cbz	r3, 8009ec8 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xe4>
 8009ea8:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8009eac:	9b03      	ldr	r3, [sp, #12]
 8009eae:	4413      	add	r3, r2
 8009eb0:	227d      	movs	r2, #125	; 0x7d
 8009eb2:	f803 2c01 	strb.w	r2, [r3, #-1]
 8009eb6:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8009eba:	9903      	ldr	r1, [sp, #12]
 8009ebc:	54ca      	strb	r2, [r1, r3]
 8009ebe:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8009ec2:	3301      	adds	r3, #1
 8009ec4:	f8ad 3012 	strh.w	r3, [sp, #18]
 8009ec8:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8009ecc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8009ece:	601a      	str	r2, [r3, #0]
 8009ed0:	b006      	add	sp, #24
 8009ed2:	bd70      	pop	{r4, r5, r6, pc}
 8009ed4:	4b07      	ldr	r3, [pc, #28]	; (8009ef4 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 8009ed6:	4a0a      	ldr	r2, [pc, #40]	; (8009f00 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x11c>)
 8009ed8:	9400      	str	r4, [sp, #0]
 8009eda:	e7d8      	b.n	8009e8e <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xaa>
 8009edc:	080150b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, ip, lr}
 8009ee0:	080150b1 	stmdaeq	r1, {r0, r4, r5, r7, ip, lr}
 8009ee4:	080150d2 	stmdaeq	r1, {r1, r4, r6, r7, ip, lr}
 8009ee8:	080150e0 	stmdaeq	r1, {r5, r6, r7, ip, lr}
 8009eec:	080150ee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, ip, lr}
 8009ef0:	080150fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, ip, lr}
 8009ef4:	080150c5 	stmdaeq	r1, {r0, r2, r6, r7, ip, lr}
 8009ef8:	08014ce0 	stmdaeq	r1, {r5, r6, r7, sl, fp, lr}
 8009efc:	08014cd5 	stmdaeq	r1, {r0, r2, r4, r6, r7, sl, fp, lr}
 8009f00:	08014ce1 	stmdaeq	r1, {r0, r5, r6, r7, sl, fp, lr}

08009f04 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>:
 8009f04:	b513      	push	{r0, r1, r4, lr}
 8009f06:	6804      	ldr	r4, [r0, #0]
 8009f08:	b914      	cbnz	r4, 8009f10 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0xc>
 8009f0a:	601c      	str	r4, [r3, #0]
 8009f0c:	b002      	add	sp, #8
 8009f0e:	bd10      	pop	{r4, pc}
 8009f10:	9300      	str	r3, [sp, #0]
 8009f12:	4613      	mov	r3, r2
 8009f14:	460a      	mov	r2, r1
 8009f16:	2100      	movs	r1, #0
 8009f18:	f7ff ff64 	bl	8009de4 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>
 8009f1c:	e7f6      	b.n	8009f0c <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0x8>

08009f1e <RemoteConfigParams::Set(RemoteConfig*)>:
 8009f1e:	b538      	push	{r3, r4, r5, lr}
 8009f20:	460c      	mov	r4, r1
 8009f22:	4605      	mov	r5, r0
 8009f24:	6841      	ldr	r1, [r0, #4]
 8009f26:	4620      	mov	r0, r4
 8009f28:	f001 0101 	and.w	r1, r1, #1
 8009f2c:	f7ff fc42 	bl	80097b4 <RemoteConfig::SetDisable(bool)>
 8009f30:	686b      	ldr	r3, [r5, #4]
 8009f32:	f3c3 0240 	ubfx	r2, r3, #1, #1
 8009f36:	7362      	strb	r2, [r4, #13]
 8009f38:	f3c3 0280 	ubfx	r2, r3, #2, #1
 8009f3c:	73a2      	strb	r2, [r4, #14]
 8009f3e:	f3c3 02c0 	ubfx	r2, r3, #3, #1
 8009f42:	73e2      	strb	r2, [r4, #15]
 8009f44:	f3c3 1240 	ubfx	r2, r3, #5, #1
 8009f48:	06db      	lsls	r3, r3, #27
 8009f4a:	7422      	strb	r2, [r4, #16]
 8009f4c:	d506      	bpl.n	8009f5c <RemoteConfigParams::Set(RemoteConfig*)+0x3e>
 8009f4e:	4620      	mov	r0, r4
 8009f50:	f105 010c 	add.w	r1, r5, #12
 8009f54:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8009f58:	f7ff bc4c 	b.w	80097f4 <RemoteConfig::SetDisplayName(char const*)>
 8009f5c:	bd38      	pop	{r3, r4, r5, pc}

08009f5e <RemoteConfigParams::Dump()>:
 8009f5e:	4770      	bx	lr

08009f60 <RemoteConfig::HandleReboot()>:
 8009f60:	7b83      	ldrb	r3, [r0, #14]
 8009f62:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009f64:	2b00      	cmp	r3, #0
 8009f66:	d03c      	beq.n	8009fe2 <RemoteConfig::HandleReboot()+0x82>
 8009f68:	2301      	movs	r3, #1
 8009f6a:	4c1f      	ldr	r4, [pc, #124]	; (8009fe8 <RemoteConfig::HandleReboot()+0x88>)
 8009f6c:	7443      	strb	r3, [r0, #17]
 8009f6e:	6825      	ldr	r5, [r4, #0]
 8009f70:	69a8      	ldr	r0, [r5, #24]
 8009f72:	b138      	cbz	r0, 8009f84 <RemoteConfig::HandleReboot()+0x24>
 8009f74:	2100      	movs	r1, #0
 8009f76:	6803      	ldr	r3, [r0, #0]
 8009f78:	7429      	strb	r1, [r5, #16]
 8009f7a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009f7c:	4798      	blx	r3
 8009f7e:	4b1b      	ldr	r3, [pc, #108]	; (8009fec <RemoteConfig::HandleReboot()+0x8c>)
 8009f80:	681b      	ldr	r3, [r3, #0]
 8009f82:	606b      	str	r3, [r5, #4]
 8009f84:	4d1a      	ldr	r5, [pc, #104]	; (8009ff0 <RemoteConfig::HandleReboot()+0x90>)
 8009f86:	6828      	ldr	r0, [r5, #0]
 8009f88:	f004 fbec 	bl	800e764 <SpiFlashStore::Flash()>
 8009f8c:	2800      	cmp	r0, #0
 8009f8e:	d1fa      	bne.n	8009f86 <RemoteConfig::HandleReboot()+0x26>
 8009f90:	4b18      	ldr	r3, [pc, #96]	; (8009ff4 <RemoteConfig::HandleReboot()+0x94>)
 8009f92:	6818      	ldr	r0, [r3, #0]
 8009f94:	f005 ff7c 	bl	800fe90 <Network::Shutdown()>
 8009f98:	4817      	ldr	r0, [pc, #92]	; (8009ff8 <RemoteConfig::HandleReboot()+0x98>)
 8009f9a:	f7ff f8a5 	bl	80090e8 <printf>
 8009f9e:	6823      	ldr	r3, [r4, #0]
 8009fa0:	6998      	ldr	r0, [r3, #24]
 8009fa2:	b110      	cbz	r0, 8009faa <RemoteConfig::HandleReboot()+0x4a>
 8009fa4:	6803      	ldr	r3, [r0, #0]
 8009fa6:	68db      	ldr	r3, [r3, #12]
 8009fa8:	4798      	blx	r3
 8009faa:	6824      	ldr	r4, [r4, #0]
 8009fac:	4913      	ldr	r1, [pc, #76]	; (8009ffc <RemoteConfig::HandleReboot()+0x9c>)
 8009fae:	4620      	mov	r0, r4
 8009fb0:	f7fe f960 	bl	8008274 <Display::TextStatus(char const*)>
 8009fb4:	7c63      	ldrb	r3, [r4, #17]
 8009fb6:	b183      	cbz	r3, 8009fda <RemoteConfig::HandleReboot()+0x7a>
 8009fb8:	f64b 7312 	movw	r3, #48914	; 0xbf12
 8009fbc:	f8ad 3004 	strh.w	r3, [sp, #4]
 8009fc0:	23bf      	movs	r3, #191	; 0xbf
 8009fc2:	7a20      	ldrb	r0, [r4, #8]
 8009fc4:	f88d 3006 	strb.w	r3, [sp, #6]
 8009fc8:	f009 fb82 	bl	80136d0 <gd32_i2c_set_address>
 8009fcc:	68e0      	ldr	r0, [r4, #12]
 8009fce:	f009 fb77 	bl	80136c0 <gd32_i2c_set_baudrate>
 8009fd2:	2103      	movs	r1, #3
 8009fd4:	a801      	add	r0, sp, #4
 8009fd6:	f009 fb81 	bl	80136dc <gd32_i2c_write>
 8009fda:	4b09      	ldr	r3, [pc, #36]	; (800a000 <RemoteConfig::HandleReboot()+0xa0>)
 8009fdc:	6818      	ldr	r0, [r3, #0]
 8009fde:	f008 fa45 	bl	801246c <Hardware::Reboot()>
 8009fe2:	b003      	add	sp, #12
 8009fe4:	bd30      	pop	{r4, r5, pc}
 8009fe6:	bf00      	nop
 8009fe8:	2000b778 	andcs	fp, r0, r8, ror r7
 8009fec:	2000b87c 	andcs	fp, r0, ip, ror r8
 8009ff0:	20003898 	mulcs	r0, r8, r8
 8009ff4:	2000b1a0 	andcs	fp, r0, r0, lsr #3
 8009ff8:	08014ce8 	stmdaeq	r1, {r3, r5, r6, r7, sl, fp, lr}
 8009ffc:	08014cf7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, r7, sl, fp, lr}
 800a000:	2000b868 	andcs	fp, r0, r8, ror #16

0800a004 <RemoteConfig::GetIndex(void const*, unsigned int&)>:
 800a004:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800a008:	2000      	movs	r0, #0
 800a00a:	4d12      	ldr	r5, [pc, #72]	; (800a054 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x50>)
 800a00c:	f10d 0c04 	add.w	ip, sp, #4
 800a010:	6814      	ldr	r4, [r2, #0]
 800a012:	7d2b      	ldrb	r3, [r5, #20]
 800a014:	692e      	ldr	r6, [r5, #16]
 800a016:	42a3      	cmp	r3, r4
 800a018:	bf34      	ite	cc
 800a01a:	4664      	movcc	r4, ip
 800a01c:	4614      	movcs	r4, r2
 800a01e:	9301      	str	r3, [sp, #4]
 800a020:	6827      	ldr	r7, [r4, #0]
 800a022:	460c      	mov	r4, r1
 800a024:	3e01      	subs	r6, #1
 800a026:	440f      	add	r7, r1
 800a028:	42bc      	cmp	r4, r7
 800a02a:	d101      	bne.n	800a030 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x2c>
 800a02c:	6013      	str	r3, [r2, #0]
 800a02e:	e00c      	b.n	800a04a <RemoteConfig::GetIndex(void const*, unsigned int&)+0x46>
 800a030:	f894 8000 	ldrb.w	r8, [r4]
 800a034:	f816 ef01 	ldrb.w	lr, [r6, #1]!
 800a038:	45f0      	cmp	r8, lr
 800a03a:	d009      	beq.n	800a050 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x4c>
 800a03c:	3001      	adds	r0, #1
 800a03e:	2805      	cmp	r0, #5
 800a040:	f105 051c 	add.w	r5, r5, #28
 800a044:	d1e4      	bne.n	800a010 <RemoteConfig::GetIndex(void const*, unsigned int&)+0xc>
 800a046:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800a04a:	b002      	add	sp, #8
 800a04c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a050:	3401      	adds	r4, #1
 800a052:	e7e9      	b.n	800a028 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x24>
 800a054:	08014d40 	stmdaeq	r1, {r6, r8, sl, fp, lr}

0800a058 <RemoteConfig::PlatformHandleTftpSet()>:
 800a058:	f890 1020 	ldrb.w	r1, [r0, #32]
 800a05c:	b109      	cbz	r1, 800a062 <RemoteConfig::PlatformHandleTftpSet()+0xa>
 800a05e:	f24a 51a5 	movw	r1, #42405	; 0xa5a5
 800a062:	2002      	movs	r0, #2
 800a064:	f008 bd10 	b.w	8012a88 <bkp_data_write>

0800a068 <RemoteConfig::PlatformHandleTftpGet()>:
 800a068:	b510      	push	{r4, lr}
 800a06a:	4604      	mov	r4, r0
 800a06c:	2002      	movs	r0, #2
 800a06e:	f008 fd21 	bl	8012ab4 <bkp_data_read>
 800a072:	f24a 53a5 	movw	r3, #42405	; 0xa5a5
 800a076:	1ac3      	subs	r3, r0, r3
 800a078:	4258      	negs	r0, r3
 800a07a:	4158      	adcs	r0, r3
 800a07c:	f884 0020 	strb.w	r0, [r4, #32]
 800a080:	bd10      	pop	{r4, pc}

0800a082 <strcmp>:
 800a082:	1e43      	subs	r3, r0, #1
 800a084:	3901      	subs	r1, #1
 800a086:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800a08a:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800a08e:	4290      	cmp	r0, r2
 800a090:	d001      	beq.n	800a096 <strcmp+0x14>
 800a092:	1a80      	subs	r0, r0, r2
 800a094:	e001      	b.n	800a09a <strcmp+0x18>
 800a096:	2800      	cmp	r0, #0
 800a098:	d1f5      	bne.n	800a086 <strcmp+0x4>
 800a09a:	4770      	bx	lr

0800a09c <strcasecmp>:
 800a09c:	b530      	push	{r4, r5, lr}
 800a09e:	1e42      	subs	r2, r0, #1
 800a0a0:	3901      	subs	r1, #1
 800a0a2:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800a0a6:	4604      	mov	r4, r0
 800a0a8:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 800a0ac:	2b19      	cmp	r3, #25
 800a0ae:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800a0b2:	bf98      	it	ls
 800a0b4:	f100 0420 	addls.w	r4, r0, #32
 800a0b8:	f1a3 0541 	sub.w	r5, r3, #65	; 0x41
 800a0bc:	2d19      	cmp	r5, #25
 800a0be:	bf98      	it	ls
 800a0c0:	3320      	addls	r3, #32
 800a0c2:	42a3      	cmp	r3, r4
 800a0c4:	d001      	beq.n	800a0ca <strcasecmp+0x2e>
 800a0c6:	1ae0      	subs	r0, r4, r3
 800a0c8:	e001      	b.n	800a0ce <strcasecmp+0x32>
 800a0ca:	2800      	cmp	r0, #0
 800a0cc:	d1e9      	bne.n	800a0a2 <strcasecmp+0x6>
 800a0ce:	bd30      	pop	{r4, r5, pc}

0800a0d0 <PropertiesConfig::EnableJSON(bool)>:
 800a0d0:	4a04      	ldr	r2, [pc, #16]	; (800a0e4 <PropertiesConfig::EnableJSON(bool)+0x14>)
 800a0d2:	7813      	ldrb	r3, [r2, #0]
 800a0d4:	b118      	cbz	r0, 800a0de <PropertiesConfig::EnableJSON(bool)+0xe>
 800a0d6:	f043 0301 	orr.w	r3, r3, #1
 800a0da:	7013      	strb	r3, [r2, #0]
 800a0dc:	4770      	bx	lr
 800a0de:	f003 03fe 	and.w	r3, r3, #254	; 0xfe
 800a0e2:	e7fa      	b.n	800a0da <PropertiesConfig::EnableJSON(bool)+0xa>
 800a0e4:	2000b774 	andcs	fp, r0, r4, ror r7

0800a0e8 <HttpDaemon::HttpDaemon()>:
 800a0e8:	4a08      	ldr	r2, [pc, #32]	; (800a10c <HttpDaemon::HttpDaemon()+0x24>)
 800a0ea:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800a0ee:	6002      	str	r2, [r0, #0]
 800a0f0:	2200      	movs	r2, #0
 800a0f2:	f44f 7c02 	mov.w	ip, #520	; 0x208
 800a0f6:	e9c0 1204 	strd	r1, r2, [r0, #16]
 800a0fa:	2102      	movs	r1, #2
 800a0fc:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800a100:	e9c0 c106 	strd	ip, r1, [r0, #24]
 800a104:	e9c0 2208 	strd	r2, r2, [r0, #32]
 800a108:	60c2      	str	r2, [r0, #12]
 800a10a:	4770      	bx	lr
 800a10c:	08015031 	stmdaeq	r1, {r0, r4, r5, ip, lr}

0800a110 <HttpDaemon::Start()>:
 800a110:	4b04      	ldr	r3, [pc, #16]	; (800a124 <HttpDaemon::Start()+0x14>)
 800a112:	b510      	push	{r4, lr}
 800a114:	2150      	movs	r1, #80	; 0x50
 800a116:	4604      	mov	r4, r0
 800a118:	6818      	ldr	r0, [r3, #0]
 800a11a:	f006 f9cd 	bl	80104b8 <Network::TcpBegin(unsigned short)>
 800a11e:	6120      	str	r0, [r4, #16]
 800a120:	bd10      	pop	{r4, pc}
 800a122:	bf00      	nop
 800a124:	2000b1a0 	andcs	fp, r0, r0, lsr #3

0800a128 <HttpDaemon::ParseMethod(char*)>:
 800a128:	b538      	push	{r3, r4, r5, lr}
 800a12a:	4604      	mov	r4, r0
 800a12c:	4608      	mov	r0, r1
 800a12e:	491a      	ldr	r1, [pc, #104]	; (800a198 <HttpDaemon::ParseMethod(char*)+0x70>)
 800a130:	f008 fadc 	bl	80126ec <strtok>
 800a134:	4605      	mov	r5, r0
 800a136:	b360      	cbz	r0, 800a192 <HttpDaemon::ParseMethod(char*)+0x6a>
 800a138:	4918      	ldr	r1, [pc, #96]	; (800a19c <HttpDaemon::ParseMethod(char*)+0x74>)
 800a13a:	f7ff ffa2 	bl	800a082 <strcmp>
 800a13e:	b128      	cbz	r0, 800a14c <HttpDaemon::ParseMethod(char*)+0x24>
 800a140:	4628      	mov	r0, r5
 800a142:	4917      	ldr	r1, [pc, #92]	; (800a1a0 <HttpDaemon::ParseMethod(char*)+0x78>)
 800a144:	f7ff ff9d 	bl	800a082 <strcmp>
 800a148:	bb18      	cbnz	r0, 800a192 <HttpDaemon::ParseMethod(char*)+0x6a>
 800a14a:	2001      	movs	r0, #1
 800a14c:	61e0      	str	r0, [r4, #28]
 800a14e:	4912      	ldr	r1, [pc, #72]	; (800a198 <HttpDaemon::ParseMethod(char*)+0x70>)
 800a150:	2000      	movs	r0, #0
 800a152:	f008 facb 	bl	80126ec <strtok>
 800a156:	b910      	cbnz	r0, 800a15e <HttpDaemon::ParseMethod(char*)+0x36>
 800a158:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800a15c:	bd38      	pop	{r3, r4, r5, pc}
 800a15e:	6060      	str	r0, [r4, #4]
 800a160:	4910      	ldr	r1, [pc, #64]	; (800a1a4 <HttpDaemon::ParseMethod(char*)+0x7c>)
 800a162:	2000      	movs	r0, #0
 800a164:	f008 fac2 	bl	80126ec <strtok>
 800a168:	2800      	cmp	r0, #0
 800a16a:	d0f5      	beq.n	800a158 <HttpDaemon::ParseMethod(char*)+0x30>
 800a16c:	490e      	ldr	r1, [pc, #56]	; (800a1a8 <HttpDaemon::ParseMethod(char*)+0x80>)
 800a16e:	f7ff ff88 	bl	800a082 <strcmp>
 800a172:	2800      	cmp	r0, #0
 800a174:	d1f0      	bne.n	800a158 <HttpDaemon::ParseMethod(char*)+0x30>
 800a176:	490d      	ldr	r1, [pc, #52]	; (800a1ac <HttpDaemon::ParseMethod(char*)+0x84>)
 800a178:	f008 fab8 	bl	80126ec <strtok>
 800a17c:	2800      	cmp	r0, #0
 800a17e:	d0eb      	beq.n	800a158 <HttpDaemon::ParseMethod(char*)+0x30>
 800a180:	490b      	ldr	r1, [pc, #44]	; (800a1b0 <HttpDaemon::ParseMethod(char*)+0x88>)
 800a182:	f7ff ff7e 	bl	800a082 <strcmp>
 800a186:	2800      	cmp	r0, #0
 800a188:	f240 10f9 	movw	r0, #505	; 0x1f9
 800a18c:	bf08      	it	eq
 800a18e:	20c8      	moveq	r0, #200	; 0xc8
 800a190:	e7e4      	b.n	800a15c <HttpDaemon::ParseMethod(char*)+0x34>
 800a192:	f240 10f5 	movw	r0, #501	; 0x1f5
 800a196:	e7e1      	b.n	800a15c <HttpDaemon::ParseMethod(char*)+0x34>
 800a198:	08014a56 	stmdaeq	r1, {r1, r2, r4, r6, r9, fp, lr}
 800a19c:	08014dcc 	stmdaeq	r1, {r2, r3, r6, r7, r8, sl, fp, lr}
 800a1a0:	08014dd0 	stmdaeq	r1, {r4, r6, r7, r8, sl, fp, lr}
 800a1a4:	08014e3a 	stmdaeq	r1, {r1, r3, r4, r5, r9, sl, fp, lr}
 800a1a8:	08014dd5 	stmdaeq	r1, {r0, r2, r4, r6, r7, r8, sl, fp, lr}
 800a1ac:	08014dda 	stmdaeq	r1, {r1, r3, r4, r6, r7, r8, sl, fp, lr}
 800a1b0:	08014ddd 	stmdaeq	r1, {r0, r2, r3, r4, r6, r7, r8, sl, fp, lr}

0800a1b4 <HttpDaemon::ParseHeaderField(char*)>:
 800a1b4:	b538      	push	{r3, r4, r5, lr}
 800a1b6:	4605      	mov	r5, r0
 800a1b8:	4608      	mov	r0, r1
 800a1ba:	491d      	ldr	r1, [pc, #116]	; (800a230 <HttpDaemon::ParseHeaderField(char*)+0x7c>)
 800a1bc:	f008 fa96 	bl	80126ec <strtok>
 800a1c0:	4604      	mov	r4, r0
 800a1c2:	b910      	cbnz	r0, 800a1ca <HttpDaemon::ParseHeaderField(char*)+0x16>
 800a1c4:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800a1c8:	bd38      	pop	{r3, r4, r5, pc}
 800a1ca:	491a      	ldr	r1, [pc, #104]	; (800a234 <HttpDaemon::ParseHeaderField(char*)+0x80>)
 800a1cc:	f7ff ff66 	bl	800a09c <strcasecmp>
 800a1d0:	b970      	cbnz	r0, 800a1f0 <HttpDaemon::ParseHeaderField(char*)+0x3c>
 800a1d2:	4919      	ldr	r1, [pc, #100]	; (800a238 <HttpDaemon::ParseHeaderField(char*)+0x84>)
 800a1d4:	f008 fa8a 	bl	80126ec <strtok>
 800a1d8:	2800      	cmp	r0, #0
 800a1da:	d0f3      	beq.n	800a1c4 <HttpDaemon::ParseHeaderField(char*)+0x10>
 800a1dc:	4917      	ldr	r1, [pc, #92]	; (800a23c <HttpDaemon::ParseHeaderField(char*)+0x88>)
 800a1de:	f7ff ff50 	bl	800a082 <strcmp>
 800a1e2:	b108      	cbz	r0, 800a1e8 <HttpDaemon::ParseHeaderField(char*)+0x34>
 800a1e4:	20c8      	movs	r0, #200	; 0xc8
 800a1e6:	e7ef      	b.n	800a1c8 <HttpDaemon::ParseHeaderField(char*)+0x14>
 800a1e8:	2301      	movs	r3, #1
 800a1ea:	f885 3020 	strb.w	r3, [r5, #32]
 800a1ee:	e7f9      	b.n	800a1e4 <HttpDaemon::ParseHeaderField(char*)+0x30>
 800a1f0:	4620      	mov	r0, r4
 800a1f2:	4913      	ldr	r1, [pc, #76]	; (800a240 <HttpDaemon::ParseHeaderField(char*)+0x8c>)
 800a1f4:	f7ff ff52 	bl	800a09c <strcasecmp>
 800a1f8:	4604      	mov	r4, r0
 800a1fa:	2800      	cmp	r0, #0
 800a1fc:	d1f2      	bne.n	800a1e4 <HttpDaemon::ParseHeaderField(char*)+0x30>
 800a1fe:	4911      	ldr	r1, [pc, #68]	; (800a244 <HttpDaemon::ParseHeaderField(char*)+0x90>)
 800a200:	f008 fa74 	bl	80126ec <strtok>
 800a204:	2800      	cmp	r0, #0
 800a206:	d0dd      	beq.n	800a1c4 <HttpDaemon::ParseHeaderField(char*)+0x10>
 800a208:	1e42      	subs	r2, r0, #1
 800a20a:	4623      	mov	r3, r4
 800a20c:	200a      	movs	r0, #10
 800a20e:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800a212:	b909      	cbnz	r1, 800a218 <HttpDaemon::ParseHeaderField(char*)+0x64>
 800a214:	84eb      	strh	r3, [r5, #38]	; 0x26
 800a216:	e7e5      	b.n	800a1e4 <HttpDaemon::ParseHeaderField(char*)+0x30>
 800a218:	3930      	subs	r1, #48	; 0x30
 800a21a:	2909      	cmp	r1, #9
 800a21c:	d8d2      	bhi.n	800a1c4 <HttpDaemon::ParseHeaderField(char*)+0x10>
 800a21e:	fb00 1303 	mla	r3, r0, r3, r1
 800a222:	f5b3 6fb4 	cmp.w	r3, #1440	; 0x5a0
 800a226:	d9f2      	bls.n	800a20e <HttpDaemon::ParseHeaderField(char*)+0x5a>
 800a228:	f240 109d 	movw	r0, #413	; 0x19d
 800a22c:	e7cc      	b.n	800a1c8 <HttpDaemon::ParseHeaderField(char*)+0x14>
 800a22e:	bf00      	nop
 800a230:	08014de1 	stmdaeq	r1, {r0, r5, r6, r7, r8, sl, fp, lr}
 800a234:	08014de3 	stmdaeq	r1, {r0, r1, r5, r6, r7, r8, sl, fp, lr}
 800a238:	08014df0 	stmdaeq	r1, {r4, r5, r6, r7, r8, sl, fp, lr}
 800a23c:	08014df3 	stmdaeq	r1, {r0, r1, r4, r5, r6, r7, r8, sl, fp, lr}
 800a240:	08014e04 	stmdaeq	r1, {r2, r9, sl, fp, lr}
 800a244:	08014a56 	stmdaeq	r1, {r1, r2, r4, r6, r9, fp, lr}

0800a248 <HttpDaemon::ParseRequest()>:
 800a248:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a24a:	2400      	movs	r4, #0
 800a24c:	4605      	mov	r5, r0
 800a24e:	4622      	mov	r2, r4
 800a250:	4626      	mov	r6, r4
 800a252:	68c1      	ldr	r1, [r0, #12]
 800a254:	f880 4020 	strb.w	r4, [r0, #32]
 800a258:	6244      	str	r4, [r0, #36]	; 0x24
 800a25a:	8aab      	ldrh	r3, [r5, #20]
 800a25c:	42a3      	cmp	r3, r4
 800a25e:	d91d      	bls.n	800a29c <HttpDaemon::ParseRequest()+0x54>
 800a260:	68eb      	ldr	r3, [r5, #12]
 800a262:	5d18      	ldrb	r0, [r3, r4]
 800a264:	280a      	cmp	r0, #10
 800a266:	d10e      	bne.n	800a286 <HttpDaemon::ParseRequest()+0x3e>
 800a268:	4423      	add	r3, r4
 800a26a:	f803 6c01 	strb.w	r6, [r3, #-1]
 800a26e:	1c57      	adds	r7, r2, #1
 800a270:	b962      	cbnz	r2, 800a28c <HttpDaemon::ParseRequest()+0x44>
 800a272:	4628      	mov	r0, r5
 800a274:	f7ff ff58 	bl	800a128 <HttpDaemon::ParseMethod(char*)>
 800a278:	28c8      	cmp	r0, #200	; 0xc8
 800a27a:	d110      	bne.n	800a29e <HttpDaemon::ParseRequest()+0x56>
 800a27c:	463a      	mov	r2, r7
 800a27e:	68e9      	ldr	r1, [r5, #12]
 800a280:	3401      	adds	r4, #1
 800a282:	b2a4      	uxth	r4, r4
 800a284:	4421      	add	r1, r4
 800a286:	3401      	adds	r4, #1
 800a288:	b2a4      	uxth	r4, r4
 800a28a:	e7e6      	b.n	800a25a <HttpDaemon::ParseRequest()+0x12>
 800a28c:	7808      	ldrb	r0, [r1, #0]
 800a28e:	b968      	cbnz	r0, 800a2ac <HttpDaemon::ParseRequest()+0x64>
 800a290:	696b      	ldr	r3, [r5, #20]
 800a292:	3b01      	subs	r3, #1
 800a294:	1b1b      	subs	r3, r3, r4
 800a296:	b29b      	uxth	r3, r3
 800a298:	84ab      	strh	r3, [r5, #36]	; 0x24
 800a29a:	b90b      	cbnz	r3, 800a2a0 <HttpDaemon::ParseRequest()+0x58>
 800a29c:	20c8      	movs	r0, #200	; 0xc8
 800a29e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a2a0:	68ea      	ldr	r2, [r5, #12]
 800a2a2:	3401      	adds	r4, #1
 800a2a4:	4414      	add	r4, r2
 800a2a6:	60ac      	str	r4, [r5, #8]
 800a2a8:	54e0      	strb	r0, [r4, r3]
 800a2aa:	e7f7      	b.n	800a29c <HttpDaemon::ParseRequest()+0x54>
 800a2ac:	4628      	mov	r0, r5
 800a2ae:	f7ff ff81 	bl	800a1b4 <HttpDaemon::ParseHeaderField(char*)>
 800a2b2:	e7e1      	b.n	800a278 <HttpDaemon::ParseRequest()+0x30>

0800a2b4 <HttpDaemon::HandleGetTxt()>:
 800a2b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a2b8:	6846      	ldr	r6, [r0, #4]
 800a2ba:	4607      	mov	r7, r0
 800a2bc:	1db4      	adds	r4, r6, #6
 800a2be:	4622      	mov	r2, r4
 800a2c0:	4613      	mov	r3, r2
 800a2c2:	7819      	ldrb	r1, [r3, #0]
 800a2c4:	3201      	adds	r2, #1
 800a2c6:	2900      	cmp	r1, #0
 800a2c8:	d1fa      	bne.n	800a2c0 <HttpDaemon::HandleGetTxt()+0xc>
 800a2ca:	1b1b      	subs	r3, r3, r4
 800a2cc:	2b04      	cmp	r3, #4
 800a2ce:	d803      	bhi.n	800a2d8 <HttpDaemon::HandleGetTxt()+0x24>
 800a2d0:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800a2d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a2d8:	3b04      	subs	r3, #4
 800a2da:	4914      	ldr	r1, [pc, #80]	; (800a32c <HttpDaemon::HandleGetTxt()+0x78>)
 800a2dc:	18e0      	adds	r0, r4, r3
 800a2de:	f7ff fed0 	bl	800a082 <strcmp>
 800a2e2:	2800      	cmp	r0, #0
 800a2e4:	d1f4      	bne.n	800a2d0 <HttpDaemon::HandleGetTxt()+0x1c>
 800a2e6:	4b12      	ldr	r3, [pc, #72]	; (800a330 <HttpDaemon::HandleGetTxt()+0x7c>)
 800a2e8:	2001      	movs	r0, #1
 800a2ea:	f893 8000 	ldrb.w	r8, [r3]
 800a2ee:	f7ff feef 	bl	800a0d0 <PropertiesConfig::EnableJSON(bool)>
 800a2f2:	4b10      	ldr	r3, [pc, #64]	; (800a334 <HttpDaemon::HandleGetTxt()+0x80>)
 800a2f4:	f240 529b 	movw	r2, #1435	; 0x59b
 800a2f8:	4621      	mov	r1, r4
 800a2fa:	6818      	ldr	r0, [r3, #0]
 800a2fc:	f7ff fa92 	bl	8009824 <RemoteConfig::HandleGet(void*, unsigned int)>
 800a300:	4605      	mov	r5, r0
 800a302:	f008 0801 	and.w	r8, r8, #1
 800a306:	4640      	mov	r0, r8
 800a308:	f7ff fee2 	bl	800a0d0 <PropertiesConfig::EnableJSON(bool)>
 800a30c:	2d00      	cmp	r5, #0
 800a30e:	d0df      	beq.n	800a2d0 <HttpDaemon::HandleGetTxt()+0x1c>
 800a310:	847d      	strh	r5, [r7, #34]	; 0x22
 800a312:	4b09      	ldr	r3, [pc, #36]	; (800a338 <HttpDaemon::HandleGetTxt()+0x84>)
 800a314:	3506      	adds	r5, #6
 800a316:	442e      	add	r6, r5
 800a318:	42b4      	cmp	r4, r6
 800a31a:	d101      	bne.n	800a320 <HttpDaemon::HandleGetTxt()+0x6c>
 800a31c:	20c8      	movs	r0, #200	; 0xc8
 800a31e:	e7d9      	b.n	800a2d4 <HttpDaemon::HandleGetTxt()+0x20>
 800a320:	f814 2b01 	ldrb.w	r2, [r4], #1
 800a324:	f803 2b01 	strb.w	r2, [r3], #1
 800a328:	e7f6      	b.n	800a318 <HttpDaemon::HandleGetTxt()+0x64>
 800a32a:	bf00      	nop
 800a32c:	08014d2d 	stmdaeq	r1, {r0, r2, r3, r5, r8, sl, fp, lr}
 800a330:	2000b774 	andcs	fp, r0, r4, ror r7
 800a334:	20000128 	andcs	r0, r0, r8, lsr #2
 800a338:	2000012c 	andcs	r0, r0, ip, lsr #2

0800a33c <HttpDaemon::HandleGet()>:
 800a33c:	b570      	push	{r4, r5, r6, lr}
 800a33e:	6845      	ldr	r5, [r0, #4]
 800a340:	4604      	mov	r4, r0
 800a342:	493e      	ldr	r1, [pc, #248]	; (800a43c <HttpDaemon::HandleGet()+0x100>)
 800a344:	4628      	mov	r0, r5
 800a346:	f7ff fe9c 	bl	800a082 <strcmp>
 800a34a:	b120      	cbz	r0, 800a356 <HttpDaemon::HandleGet()+0x1a>
 800a34c:	4628      	mov	r0, r5
 800a34e:	493c      	ldr	r1, [pc, #240]	; (800a440 <HttpDaemon::HandleGet()+0x104>)
 800a350:	f7ff fe97 	bl	800a082 <strcmp>
 800a354:	b950      	cbnz	r0, 800a36c <HttpDaemon::HandleGet()+0x30>
 800a356:	4b3b      	ldr	r3, [pc, #236]	; (800a444 <HttpDaemon::HandleGet()+0x108>)
 800a358:	493b      	ldr	r1, [pc, #236]	; (800a448 <HttpDaemon::HandleGet()+0x10c>)
 800a35a:	483c      	ldr	r0, [pc, #240]	; (800a44c <HttpDaemon::HandleGet()+0x110>)
 800a35c:	6023      	str	r3, [r4, #0]
 800a35e:	f000 fa67 	bl	800a830 <get_file_content(char const*, char*)>
 800a362:	2800      	cmp	r0, #0
 800a364:	dd2f      	ble.n	800a3c6 <HttpDaemon::HandleGet()+0x8a>
 800a366:	8460      	strh	r0, [r4, #34]	; 0x22
 800a368:	20c8      	movs	r0, #200	; 0xc8
 800a36a:	bd70      	pop	{r4, r5, r6, pc}
 800a36c:	4628      	mov	r0, r5
 800a36e:	4938      	ldr	r1, [pc, #224]	; (800a450 <HttpDaemon::HandleGet()+0x114>)
 800a370:	f7ff fe87 	bl	800a082 <strcmp>
 800a374:	b920      	cbnz	r0, 800a380 <HttpDaemon::HandleGet()+0x44>
 800a376:	4b37      	ldr	r3, [pc, #220]	; (800a454 <HttpDaemon::HandleGet()+0x118>)
 800a378:	4933      	ldr	r1, [pc, #204]	; (800a448 <HttpDaemon::HandleGet()+0x10c>)
 800a37a:	4837      	ldr	r0, [pc, #220]	; (800a458 <HttpDaemon::HandleGet()+0x11c>)
 800a37c:	6023      	str	r3, [r4, #0]
 800a37e:	e7ee      	b.n	800a35e <HttpDaemon::HandleGet()+0x22>
 800a380:	4628      	mov	r0, r5
 800a382:	4936      	ldr	r1, [pc, #216]	; (800a45c <HttpDaemon::HandleGet()+0x120>)
 800a384:	f7ff fe7d 	bl	800a082 <strcmp>
 800a388:	b190      	cbz	r0, 800a3b0 <HttpDaemon::HandleGet()+0x74>
 800a38a:	4a35      	ldr	r2, [pc, #212]	; (800a460 <HttpDaemon::HandleGet()+0x124>)
 800a38c:	1e6b      	subs	r3, r5, #1
 800a38e:	1d69      	adds	r1, r5, #5
 800a390:	428b      	cmp	r3, r1
 800a392:	d112      	bne.n	800a3ba <HttpDaemon::HandleGet()+0x7e>
 800a394:	4b33      	ldr	r3, [pc, #204]	; (800a464 <HttpDaemon::HandleGet()+0x128>)
 800a396:	3506      	adds	r5, #6
 800a398:	4628      	mov	r0, r5
 800a39a:	4933      	ldr	r1, [pc, #204]	; (800a468 <HttpDaemon::HandleGet()+0x12c>)
 800a39c:	6023      	str	r3, [r4, #0]
 800a39e:	f7ff fe70 	bl	800a082 <strcmp>
 800a3a2:	b998      	cbnz	r0, 800a3cc <HttpDaemon::HandleGet()+0x90>
 800a3a4:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800a3a8:	4827      	ldr	r0, [pc, #156]	; (800a448 <HttpDaemon::HandleGet()+0x10c>)
 800a3aa:	f000 f9c9 	bl	800a740 <remoteconfig::json_get_list(char*, unsigned short)>
 800a3ae:	e7d8      	b.n	800a362 <HttpDaemon::HandleGet()+0x26>
 800a3b0:	4b2e      	ldr	r3, [pc, #184]	; (800a46c <HttpDaemon::HandleGet()+0x130>)
 800a3b2:	4925      	ldr	r1, [pc, #148]	; (800a448 <HttpDaemon::HandleGet()+0x10c>)
 800a3b4:	482e      	ldr	r0, [pc, #184]	; (800a470 <HttpDaemon::HandleGet()+0x134>)
 800a3b6:	6023      	str	r3, [r4, #0]
 800a3b8:	e7d1      	b.n	800a35e <HttpDaemon::HandleGet()+0x22>
 800a3ba:	f812 0b01 	ldrb.w	r0, [r2], #1
 800a3be:	f813 6f01 	ldrb.w	r6, [r3, #1]!
 800a3c2:	4286      	cmp	r6, r0
 800a3c4:	d0e4      	beq.n	800a390 <HttpDaemon::HandleGet()+0x54>
 800a3c6:	f44f 70ca 	mov.w	r0, #404	; 0x194
 800a3ca:	e7ce      	b.n	800a36a <HttpDaemon::HandleGet()+0x2e>
 800a3cc:	4628      	mov	r0, r5
 800a3ce:	4929      	ldr	r1, [pc, #164]	; (800a474 <HttpDaemon::HandleGet()+0x138>)
 800a3d0:	f7ff fe57 	bl	800a082 <strcmp>
 800a3d4:	b928      	cbnz	r0, 800a3e2 <HttpDaemon::HandleGet()+0xa6>
 800a3d6:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800a3da:	481b      	ldr	r0, [pc, #108]	; (800a448 <HttpDaemon::HandleGet()+0x10c>)
 800a3dc:	f000 f9e4 	bl	800a7a8 <remoteconfig::json_get_version(char*, unsigned short)>
 800a3e0:	e7bf      	b.n	800a362 <HttpDaemon::HandleGet()+0x26>
 800a3e2:	4628      	mov	r0, r5
 800a3e4:	4924      	ldr	r1, [pc, #144]	; (800a478 <HttpDaemon::HandleGet()+0x13c>)
 800a3e6:	f7ff fe4c 	bl	800a082 <strcmp>
 800a3ea:	b948      	cbnz	r0, 800a400 <HttpDaemon::HandleGet()+0xc4>
 800a3ec:	4b23      	ldr	r3, [pc, #140]	; (800a47c <HttpDaemon::HandleGet()+0x140>)
 800a3ee:	681b      	ldr	r3, [r3, #0]
 800a3f0:	7bdb      	ldrb	r3, [r3, #15]
 800a3f2:	b303      	cbz	r3, 800a436 <HttpDaemon::HandleGet()+0xfa>
 800a3f4:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800a3f8:	4813      	ldr	r0, [pc, #76]	; (800a448 <HttpDaemon::HandleGet()+0x10c>)
 800a3fa:	f000 f9f1 	bl	800a7e0 <remoteconfig::json_get_uptime(char*, unsigned short)>
 800a3fe:	e7b0      	b.n	800a362 <HttpDaemon::HandleGet()+0x26>
 800a400:	4628      	mov	r0, r5
 800a402:	491f      	ldr	r1, [pc, #124]	; (800a480 <HttpDaemon::HandleGet()+0x144>)
 800a404:	f7ff fe3d 	bl	800a082 <strcmp>
 800a408:	b928      	cbnz	r0, 800a416 <HttpDaemon::HandleGet()+0xda>
 800a40a:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800a40e:	480e      	ldr	r0, [pc, #56]	; (800a448 <HttpDaemon::HandleGet()+0x10c>)
 800a410:	f000 f9f6 	bl	800a800 <remoteconfig::json_get_display(char*, unsigned short)>
 800a414:	e7a5      	b.n	800a362 <HttpDaemon::HandleGet()+0x26>
 800a416:	4628      	mov	r0, r5
 800a418:	491a      	ldr	r1, [pc, #104]	; (800a484 <HttpDaemon::HandleGet()+0x148>)
 800a41a:	f7ff fe32 	bl	800a082 <strcmp>
 800a41e:	b928      	cbnz	r0, 800a42c <HttpDaemon::HandleGet()+0xf0>
 800a420:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800a424:	4808      	ldr	r0, [pc, #32]	; (800a448 <HttpDaemon::HandleGet()+0x10c>)
 800a426:	f000 f9fb 	bl	800a820 <remoteconfig::json_get_directory(char*, unsigned short)>
 800a42a:	e79a      	b.n	800a362 <HttpDaemon::HandleGet()+0x26>
 800a42c:	4620      	mov	r0, r4
 800a42e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a432:	f7ff bf3f 	b.w	800a2b4 <HttpDaemon::HandleGetTxt()>
 800a436:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800a43a:	e796      	b.n	800a36a <HttpDaemon::HandleGet()+0x2e>
 800a43c:	08014e3a 	stmdaeq	r1, {r1, r3, r4, r5, r9, sl, fp, lr}
 800a440:	08014e13 	stmdaeq	r1, {r0, r1, r4, r9, sl, fp, lr}
 800a444:	08015031 	stmdaeq	r1, {r0, r4, r5, ip, lr}
 800a448:	2000012c 	andcs	r0, r0, ip, lsr #2
 800a44c:	08014e14 	stmdaeq	r1, {r2, r4, r9, sl, fp, lr}
 800a450:	08014e1f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r9, sl, fp, lr}
 800a454:	08015051 	stmdaeq	r1, {r0, r4, r6, ip, lr}
 800a458:	08014e20 	stmdaeq	r1, {r5, r9, sl, fp, lr}
 800a45c:	08014e2b 	stmdaeq	r1, {r0, r1, r3, r5, r9, sl, fp, lr}
 800a460:	08014e35 	stmdaeq	r1, {r0, r2, r4, r5, r9, sl, fp, lr}
 800a464:	08015091 	stmdaeq	r1, {r0, r4, r7, ip, lr}
 800a468:	08014e3c 	stmdaeq	r1, {r2, r3, r4, r5, r9, sl, fp, lr}
 800a46c:	08015071 	stmdaeq	r1, {r0, r4, r5, r6, ip, lr}
 800a470:	08014e2c 	stmdaeq	r1, {r2, r3, r5, r9, sl, fp, lr}
 800a474:	08014e41 	stmdaeq	r1, {r0, r6, r9, sl, fp, lr}
 800a478:	08014e49 	stmdaeq	r1, {r0, r3, r6, r9, sl, fp, lr}
 800a47c:	20000128 	andcs	r0, r0, r8, lsr #2
 800a480:	08014e50 	stmdaeq	r1, {r4, r6, r9, sl, fp, lr}
 800a484:	08014e58 	stmdaeq	r1, {r3, r4, r6, r9, sl, fp, lr}

0800a488 <HttpDaemon::HandlePost(bool)>:
 800a488:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a48a:	4604      	mov	r4, r0
 800a48c:	2900      	cmp	r1, #0
 800a48e:	f040 808a 	bne.w	800a5a6 <HttpDaemon::HandlePost(bool)+0x11e>
 800a492:	f890 3020 	ldrb.w	r3, [r0, #32]
 800a496:	2b00      	cmp	r3, #0
 800a498:	d05a      	beq.n	800a550 <HttpDaemon::HandlePost(bool)+0xc8>
 800a49a:	6845      	ldr	r5, [r0, #4]
 800a49c:	4944      	ldr	r1, [pc, #272]	; (800a5b0 <HttpDaemon::HandlePost(bool)+0x128>)
 800a49e:	4628      	mov	r0, r5
 800a4a0:	f7ff fdef 	bl	800a082 <strcmp>
 800a4a4:	2800      	cmp	r0, #0
 800a4a6:	bf0c      	ite	eq
 800a4a8:	2301      	moveq	r3, #1
 800a4aa:	2300      	movne	r3, #0
 800a4ac:	f884 3021 	strb.w	r3, [r4, #33]	; 0x21
 800a4b0:	d052      	beq.n	800a558 <HttpDaemon::HandlePost(bool)+0xd0>
 800a4b2:	4628      	mov	r0, r5
 800a4b4:	493f      	ldr	r1, [pc, #252]	; (800a5b4 <HttpDaemon::HandlePost(bool)+0x12c>)
 800a4b6:	f7ff fde4 	bl	800a082 <strcmp>
 800a4ba:	2800      	cmp	r0, #0
 800a4bc:	d04c      	beq.n	800a558 <HttpDaemon::HandlePost(bool)+0xd0>
 800a4be:	f44f 70ca 	mov.w	r0, #404	; 0x194
 800a4c2:	e047      	b.n	800a554 <HttpDaemon::HandlePost(bool)+0xcc>
 800a4c4:	493c      	ldr	r1, [pc, #240]	; (800a5b8 <HttpDaemon::HandlePost(bool)+0x130>)
 800a4c6:	68a0      	ldr	r0, [r4, #8]
 800a4c8:	f10d 0207 	add.w	r2, sp, #7
 800a4cc:	f007 fb94 	bl	8011bf8 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a4d0:	b9d8      	cbnz	r0, 800a50a <HttpDaemon::HandlePost(bool)+0x82>
 800a4d2:	f89d 6007 	ldrb.w	r6, [sp, #7]
 800a4d6:	4b39      	ldr	r3, [pc, #228]	; (800a5bc <HttpDaemon::HandlePost(bool)+0x134>)
 800a4d8:	fab6 f186 	clz	r1, r6
 800a4dc:	681d      	ldr	r5, [r3, #0]
 800a4de:	0949      	lsrs	r1, r1, #5
 800a4e0:	69a8      	ldr	r0, [r5, #24]
 800a4e2:	b138      	cbz	r0, 800a4f4 <HttpDaemon::HandlePost(bool)+0x6c>
 800a4e4:	6803      	ldr	r3, [r0, #0]
 800a4e6:	7429      	strb	r1, [r5, #16]
 800a4e8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a4ea:	4798      	blx	r3
 800a4ec:	b116      	cbz	r6, 800a4f4 <HttpDaemon::HandlePost(bool)+0x6c>
 800a4ee:	4b34      	ldr	r3, [pc, #208]	; (800a5c0 <HttpDaemon::HandlePost(bool)+0x138>)
 800a4f0:	681b      	ldr	r3, [r3, #0]
 800a4f2:	606b      	str	r3, [r5, #4]
 800a4f4:	4b33      	ldr	r3, [pc, #204]	; (800a5c4 <HttpDaemon::HandlePost(bool)+0x13c>)
 800a4f6:	f240 519f 	movw	r1, #1439	; 0x59f
 800a4fa:	4a33      	ldr	r2, [pc, #204]	; (800a5c8 <HttpDaemon::HandlePost(bool)+0x140>)
 800a4fc:	4833      	ldr	r0, [pc, #204]	; (800a5cc <HttpDaemon::HandlePost(bool)+0x144>)
 800a4fe:	6023      	str	r3, [r4, #0]
 800a500:	f7fe fe1a 	bl	8009138 <snprintf>
 800a504:	8460      	strh	r0, [r4, #34]	; 0x22
 800a506:	20c8      	movs	r0, #200	; 0xc8
 800a508:	e024      	b.n	800a554 <HttpDaemon::HandlePost(bool)+0xcc>
 800a50a:	4931      	ldr	r1, [pc, #196]	; (800a5d0 <HttpDaemon::HandlePost(bool)+0x148>)
 800a50c:	68a0      	ldr	r0, [r4, #8]
 800a50e:	f10d 0207 	add.w	r2, sp, #7
 800a512:	f007 fb71 	bl	8011bf8 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a516:	b9d8      	cbnz	r0, 800a550 <HttpDaemon::HandlePost(bool)+0xc8>
 800a518:	4b2e      	ldr	r3, [pc, #184]	; (800a5d4 <HttpDaemon::HandlePost(bool)+0x14c>)
 800a51a:	6818      	ldr	r0, [r3, #0]
 800a51c:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800a520:	b11b      	cbz	r3, 800a52a <HttpDaemon::HandlePost(bool)+0xa2>
 800a522:	2104      	movs	r1, #4
 800a524:	f007 ff02 	bl	801232c <LedBlink::SetMode(ledblink::Mode)>
 800a528:	e7e4      	b.n	800a4f4 <HttpDaemon::HandlePost(bool)+0x6c>
 800a52a:	2102      	movs	r1, #2
 800a52c:	e7fa      	b.n	800a524 <HttpDaemon::HandlePost(bool)+0x9c>
 800a52e:	4b2a      	ldr	r3, [pc, #168]	; (800a5d8 <HttpDaemon::HandlePost(bool)+0x150>)
 800a530:	2001      	movs	r0, #1
 800a532:	781d      	ldrb	r5, [r3, #0]
 800a534:	f7ff fdcc 	bl	800a0d0 <PropertiesConfig::EnableJSON(bool)>
 800a538:	4b28      	ldr	r3, [pc, #160]	; (800a5dc <HttpDaemon::HandlePost(bool)+0x154>)
 800a53a:	8ca2      	ldrh	r2, [r4, #36]	; 0x24
 800a53c:	6818      	ldr	r0, [r3, #0]
 800a53e:	68a1      	ldr	r1, [r4, #8]
 800a540:	f005 0501 	and.w	r5, r5, #1
 800a544:	f7ff fa3c 	bl	80099c0 <RemoteConfig::HandleSet(void*, unsigned int)>
 800a548:	4628      	mov	r0, r5
 800a54a:	f7ff fdc1 	bl	800a0d0 <PropertiesConfig::EnableJSON(bool)>
 800a54e:	e7d1      	b.n	800a4f4 <HttpDaemon::HandlePost(bool)+0x6c>
 800a550:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800a554:	b002      	add	sp, #8
 800a556:	bd70      	pop	{r4, r5, r6, pc}
 800a558:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 800a55a:	6962      	ldr	r2, [r4, #20]
 800a55c:	429a      	cmp	r2, r3
 800a55e:	dbd2      	blt.n	800a506 <HttpDaemon::HandlePost(bool)+0x7e>
 800a560:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 800a562:	2b00      	cmp	r3, #0
 800a564:	d0cf      	beq.n	800a506 <HttpDaemon::HandlePost(bool)+0x7e>
 800a566:	f894 3021 	ldrb.w	r3, [r4, #33]	; 0x21
 800a56a:	2b00      	cmp	r3, #0
 800a56c:	d0df      	beq.n	800a52e <HttpDaemon::HandlePost(bool)+0xa6>
 800a56e:	2201      	movs	r2, #1
 800a570:	8ca1      	ldrh	r1, [r4, #36]	; 0x24
 800a572:	68a0      	ldr	r0, [r4, #8]
 800a574:	f007 f93e 	bl	80117f4 <properties::convert_json_file(char*, unsigned short, bool)>
 800a578:	2800      	cmp	r0, #0
 800a57a:	dde9      	ble.n	800a550 <HttpDaemon::HandlePost(bool)+0xc8>
 800a57c:	4918      	ldr	r1, [pc, #96]	; (800a5e0 <HttpDaemon::HandlePost(bool)+0x158>)
 800a57e:	68a0      	ldr	r0, [r4, #8]
 800a580:	f10d 0207 	add.w	r2, sp, #7
 800a584:	f007 fb38 	bl	8011bf8 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a588:	2800      	cmp	r0, #0
 800a58a:	d19b      	bne.n	800a4c4 <HttpDaemon::HandlePost(bool)+0x3c>
 800a58c:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800a590:	2b00      	cmp	r3, #0
 800a592:	d0af      	beq.n	800a4f4 <HttpDaemon::HandlePost(bool)+0x6c>
 800a594:	4b11      	ldr	r3, [pc, #68]	; (800a5dc <HttpDaemon::HandlePost(bool)+0x154>)
 800a596:	681b      	ldr	r3, [r3, #0]
 800a598:	7b9b      	ldrb	r3, [r3, #14]
 800a59a:	2b00      	cmp	r3, #0
 800a59c:	d0d8      	beq.n	800a550 <HttpDaemon::HandlePost(bool)+0xc8>
 800a59e:	4b11      	ldr	r3, [pc, #68]	; (800a5e4 <HttpDaemon::HandlePost(bool)+0x15c>)
 800a5a0:	6818      	ldr	r0, [r3, #0]
 800a5a2:	f007 ff63 	bl	801246c <Hardware::Reboot()>
 800a5a6:	68c3      	ldr	r3, [r0, #12]
 800a5a8:	6083      	str	r3, [r0, #8]
 800a5aa:	6943      	ldr	r3, [r0, #20]
 800a5ac:	8483      	strh	r3, [r0, #36]	; 0x24
 800a5ae:	e7da      	b.n	800a566 <HttpDaemon::HandlePost(bool)+0xde>
 800a5b0:	08014e62 	stmdaeq	r1, {r1, r5, r6, r9, sl, fp, lr}
 800a5b4:	08014dfe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r7, r8, sl, fp, lr}
 800a5b8:	08014e50 	stmdaeq	r1, {r4, r6, r9, sl, fp, lr}
 800a5bc:	2000b778 	andcs	fp, r0, r8, ror r7
 800a5c0:	2000b87c 	andcs	fp, r0, ip, ror r8
 800a5c4:	08015031 	stmdaeq	r1, {r0, r4, r5, ip, lr}
 800a5c8:	08014e7f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r9, sl, fp, lr}
 800a5cc:	2000012c 	andcs	r0, r0, ip, lsr #2
 800a5d0:	08014e76 	stmdaeq	r1, {r1, r2, r4, r5, r6, r9, sl, fp, lr}
 800a5d4:	2000b864 	andcs	fp, r0, r4, ror #16
 800a5d8:	2000b774 	andcs	fp, r0, r4, ror r7
 800a5dc:	20000128 	andcs	r0, r0, r8, lsr #2
 800a5e0:	08014e6f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r9, sl, fp, lr}
 800a5e4:	2000b868 	andcs	fp, r0, r8, ror #16

0800a5e8 <HttpDaemon::Run()>:
 800a5e8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800a5ea:	4e46      	ldr	r6, [pc, #280]	; (800a704 <HttpDaemon::Run()+0x11c>)
 800a5ec:	4604      	mov	r4, r0
 800a5ee:	6901      	ldr	r1, [r0, #16]
 800a5f0:	f100 020c 	add.w	r2, r0, #12
 800a5f4:	6830      	ldr	r0, [r6, #0]
 800a5f6:	f005 ff62 	bl	80104be <Network::TcpRead(int, unsigned char const**)>
 800a5fa:	6160      	str	r0, [r4, #20]
 800a5fc:	2800      	cmp	r0, #0
 800a5fe:	d05b      	beq.n	800a6b8 <HttpDaemon::Run()+0xd0>
 800a600:	69a3      	ldr	r3, [r4, #24]
 800a602:	f5b3 7f02 	cmp.w	r3, #520	; 0x208
 800a606:	d159      	bne.n	800a6bc <HttpDaemon::Run()+0xd4>
 800a608:	4620      	mov	r0, r4
 800a60a:	f7ff fe1d 	bl	800a248 <HttpDaemon::ParseRequest()>
 800a60e:	28c8      	cmp	r0, #200	; 0xc8
 800a610:	61a0      	str	r0, [r4, #24]
 800a612:	d106      	bne.n	800a622 <HttpDaemon::Run()+0x3a>
 800a614:	69e3      	ldr	r3, [r4, #28]
 800a616:	2b00      	cmp	r3, #0
 800a618:	d142      	bne.n	800a6a0 <HttpDaemon::Run()+0xb8>
 800a61a:	4620      	mov	r0, r4
 800a61c:	f7ff fe8e 	bl	800a33c <HttpDaemon::HandleGet()>
 800a620:	61a0      	str	r0, [r4, #24]
 800a622:	69a3      	ldr	r3, [r4, #24]
 800a624:	2bc8      	cmp	r3, #200	; 0xc8
 800a626:	d06b      	beq.n	800a700 <HttpDaemon::Run()+0x118>
 800a628:	f5b3 7fcf 	cmp.w	r3, #414	; 0x19e
 800a62c:	d05e      	beq.n	800a6ec <HttpDaemon::Run()+0x104>
 800a62e:	dc4e      	bgt.n	800a6ce <HttpDaemon::Run()+0xe6>
 800a630:	f5b3 7fca 	cmp.w	r3, #404	; 0x194
 800a634:	d05c      	beq.n	800a6f0 <HttpDaemon::Run()+0x108>
 800a636:	f240 129d 	movw	r2, #413	; 0x19d
 800a63a:	4293      	cmp	r3, r2
 800a63c:	d05a      	beq.n	800a6f4 <HttpDaemon::Run()+0x10c>
 800a63e:	4d32      	ldr	r5, [pc, #200]	; (800a708 <HttpDaemon::Run()+0x120>)
 800a640:	4a32      	ldr	r2, [pc, #200]	; (800a70c <HttpDaemon::Run()+0x124>)
 800a642:	f5b3 7fc8 	cmp.w	r3, #400	; 0x190
 800a646:	bf18      	it	ne
 800a648:	4615      	movne	r5, r2
 800a64a:	4a31      	ldr	r2, [pc, #196]	; (800a710 <HttpDaemon::Run()+0x128>)
 800a64c:	f240 519f 	movw	r1, #1439	; 0x59f
 800a650:	6022      	str	r2, [r4, #0]
 800a652:	e9cd 5500 	strd	r5, r5, [sp]
 800a656:	4a2f      	ldr	r2, [pc, #188]	; (800a714 <HttpDaemon::Run()+0x12c>)
 800a658:	482f      	ldr	r0, [pc, #188]	; (800a718 <HttpDaemon::Run()+0x130>)
 800a65a:	f7fe fd6d 	bl	8009138 <snprintf>
 800a65e:	8460      	strh	r0, [r4, #34]	; 0x22
 800a660:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 800a662:	f240 519f 	movw	r1, #1439	; 0x59f
 800a666:	9303      	str	r3, [sp, #12]
 800a668:	6823      	ldr	r3, [r4, #0]
 800a66a:	4a2c      	ldr	r2, [pc, #176]	; (800a71c <HttpDaemon::Run()+0x134>)
 800a66c:	9302      	str	r3, [sp, #8]
 800a66e:	4b2c      	ldr	r3, [pc, #176]	; (800a720 <HttpDaemon::Run()+0x138>)
 800a670:	68e0      	ldr	r0, [r4, #12]
 800a672:	e9cd 5300 	strd	r5, r3, [sp]
 800a676:	69a3      	ldr	r3, [r4, #24]
 800a678:	f7fe fd5e 	bl	8009138 <snprintf>
 800a67c:	e9d4 2103 	ldrd	r2, r1, [r4, #12]
 800a680:	b283      	uxth	r3, r0
 800a682:	6830      	ldr	r0, [r6, #0]
 800a684:	f005 ff1f 	bl	80104c6 <Network::TcpWrite(int, unsigned char const*, unsigned short)>
 800a688:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 800a68a:	4a23      	ldr	r2, [pc, #140]	; (800a718 <HttpDaemon::Run()+0x130>)
 800a68c:	6921      	ldr	r1, [r4, #16]
 800a68e:	6830      	ldr	r0, [r6, #0]
 800a690:	f005 ff19 	bl	80104c6 <Network::TcpWrite(int, unsigned char const*, unsigned short)>
 800a694:	f44f 7202 	mov.w	r2, #520	; 0x208
 800a698:	2302      	movs	r3, #2
 800a69a:	e9c4 2306 	strd	r2, r3, [r4, #24]
 800a69e:	e00b      	b.n	800a6b8 <HttpDaemon::Run()+0xd0>
 800a6a0:	2b01      	cmp	r3, #1
 800a6a2:	d1be      	bne.n	800a622 <HttpDaemon::Run()+0x3a>
 800a6a4:	2100      	movs	r1, #0
 800a6a6:	4620      	mov	r0, r4
 800a6a8:	f7ff feee 	bl	800a488 <HttpDaemon::HandlePost(bool)>
 800a6ac:	28c8      	cmp	r0, #200	; 0xc8
 800a6ae:	61a0      	str	r0, [r4, #24]
 800a6b0:	d1b7      	bne.n	800a622 <HttpDaemon::Run()+0x3a>
 800a6b2:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 800a6b4:	2b00      	cmp	r3, #0
 800a6b6:	d1b4      	bne.n	800a622 <HttpDaemon::Run()+0x3a>
 800a6b8:	b004      	add	sp, #16
 800a6ba:	bd70      	pop	{r4, r5, r6, pc}
 800a6bc:	2bc8      	cmp	r3, #200	; 0xc8
 800a6be:	d1b0      	bne.n	800a622 <HttpDaemon::Run()+0x3a>
 800a6c0:	69e1      	ldr	r1, [r4, #28]
 800a6c2:	2901      	cmp	r1, #1
 800a6c4:	d1ad      	bne.n	800a622 <HttpDaemon::Run()+0x3a>
 800a6c6:	4620      	mov	r0, r4
 800a6c8:	f7ff fede 	bl	800a488 <HttpDaemon::HandlePost(bool)>
 800a6cc:	e7a8      	b.n	800a620 <HttpDaemon::Run()+0x38>
 800a6ce:	f240 12f5 	movw	r2, #501	; 0x1f5
 800a6d2:	4293      	cmp	r3, r2
 800a6d4:	d010      	beq.n	800a6f8 <HttpDaemon::Run()+0x110>
 800a6d6:	f240 12f9 	movw	r2, #505	; 0x1f9
 800a6da:	4293      	cmp	r3, r2
 800a6dc:	d00e      	beq.n	800a6fc <HttpDaemon::Run()+0x114>
 800a6de:	4d11      	ldr	r5, [pc, #68]	; (800a724 <HttpDaemon::Run()+0x13c>)
 800a6e0:	4a0a      	ldr	r2, [pc, #40]	; (800a70c <HttpDaemon::Run()+0x124>)
 800a6e2:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800a6e6:	bf18      	it	ne
 800a6e8:	4615      	movne	r5, r2
 800a6ea:	e7ae      	b.n	800a64a <HttpDaemon::Run()+0x62>
 800a6ec:	4d0e      	ldr	r5, [pc, #56]	; (800a728 <HttpDaemon::Run()+0x140>)
 800a6ee:	e7ac      	b.n	800a64a <HttpDaemon::Run()+0x62>
 800a6f0:	4d0e      	ldr	r5, [pc, #56]	; (800a72c <HttpDaemon::Run()+0x144>)
 800a6f2:	e7aa      	b.n	800a64a <HttpDaemon::Run()+0x62>
 800a6f4:	4d0e      	ldr	r5, [pc, #56]	; (800a730 <HttpDaemon::Run()+0x148>)
 800a6f6:	e7a8      	b.n	800a64a <HttpDaemon::Run()+0x62>
 800a6f8:	4d0e      	ldr	r5, [pc, #56]	; (800a734 <HttpDaemon::Run()+0x14c>)
 800a6fa:	e7a6      	b.n	800a64a <HttpDaemon::Run()+0x62>
 800a6fc:	4d0e      	ldr	r5, [pc, #56]	; (800a738 <HttpDaemon::Run()+0x150>)
 800a6fe:	e7a4      	b.n	800a64a <HttpDaemon::Run()+0x62>
 800a700:	4d0e      	ldr	r5, [pc, #56]	; (800a73c <HttpDaemon::Run()+0x154>)
 800a702:	e7ad      	b.n	800a660 <HttpDaemon::Run()+0x78>
 800a704:	2000b1a0 	andcs	fp, r0, r0, lsr #3
 800a708:	08014edb 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, r9, sl, fp, lr}
 800a70c:	08014f62 	stmdaeq	r1, {r1, r5, r6, r8, r9, sl, fp, lr}
 800a710:	08015031 	stmdaeq	r1, {r0, r4, r5, ip, lr}
 800a714:	08014f73 	stmdaeq	r1, {r0, r1, r4, r5, r6, r8, r9, sl, fp, lr}
 800a718:	2000012c 	andcs	r0, r0, ip, lsr #2
 800a71c:	08014fce 	stmdaeq	r1, {r1, r2, r3, r6, r7, r8, r9, sl, fp, lr}
 800a720:	08015026 	stmdaeq	r1, {r1, r2, r5, ip, lr}
 800a724:	08014f1f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r8, r9, sl, fp, lr}
 800a728:	08014f0a 	stmdaeq	r1, {r1, r3, r8, r9, sl, fp, lr}
 800a72c:	08014ee7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, r9, sl, fp, lr}
 800a730:	08014ef1 	stmdaeq	r1, {r0, r4, r5, r6, r7, r9, sl, fp, lr}
 800a734:	08014f35 	stmdaeq	r1, {r0, r2, r4, r5, r8, r9, sl, fp, lr}
 800a738:	08014f4c 	stmdaeq	r1, {r2, r3, r6, r8, r9, sl, fp, lr}
 800a73c:	08014f70 	stmdaeq	r1, {r4, r5, r6, r8, r9, sl, fp, lr}

0800a740 <remoteconfig::json_get_list(char*, unsigned short)>:
 800a740:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a744:	4b14      	ldr	r3, [pc, #80]	; (800a798 <remoteconfig::json_get_list(char*, unsigned short)+0x58>)
 800a746:	f8df 8054 	ldr.w	r8, [pc, #84]	; 800a79c <remoteconfig::json_get_list(char*, unsigned short)+0x5c>
 800a74a:	681b      	ldr	r3, [r3, #0]
 800a74c:	b088      	sub	sp, #32
 800a74e:	4605      	mov	r5, r0
 800a750:	f8d8 0000 	ldr.w	r0, [r8]
 800a754:	695c      	ldr	r4, [r3, #20]
 800a756:	460e      	mov	r6, r1
 800a758:	f7ff f814 	bl	8009784 <RemoteConfig::GetStringNode() const>
 800a75c:	4607      	mov	r7, r0
 800a75e:	f8d8 0000 	ldr.w	r0, [r8]
 800a762:	f7ff f81b 	bl	800979c <RemoteConfig::GetStringOutput() const>
 800a766:	4b0e      	ldr	r3, [pc, #56]	; (800a7a0 <remoteconfig::json_get_list(char*, unsigned short)+0x60>)
 800a768:	4631      	mov	r1, r6
 800a76a:	7a1a      	ldrb	r2, [r3, #8]
 800a76c:	3309      	adds	r3, #9
 800a76e:	9303      	str	r3, [sp, #12]
 800a770:	0e23      	lsrs	r3, r4, #24
 800a772:	9302      	str	r3, [sp, #8]
 800a774:	f3c4 4307 	ubfx	r3, r4, #16, #8
 800a778:	9301      	str	r3, [sp, #4]
 800a77a:	f3c4 2307 	ubfx	r3, r4, #8, #8
 800a77e:	e9cd 0205 	strd	r0, r2, [sp, #20]
 800a782:	9300      	str	r3, [sp, #0]
 800a784:	4628      	mov	r0, r5
 800a786:	4a07      	ldr	r2, [pc, #28]	; (800a7a4 <remoteconfig::json_get_list(char*, unsigned short)+0x64>)
 800a788:	9704      	str	r7, [sp, #16]
 800a78a:	b2e3      	uxtb	r3, r4
 800a78c:	f7fe fcd4 	bl	8009138 <snprintf>
 800a790:	b280      	uxth	r0, r0
 800a792:	b008      	add	sp, #32
 800a794:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a798:	2000b1a0 	andcs	fp, r0, r0, lsr #3
 800a79c:	20000128 	andcs	r0, r0, r8, lsr #2
 800a7a0:	20000104 	andcs	r0, r0, r4, lsl #2
 800a7a4:	0801510b 	stmdaeq	r1, {r0, r1, r3, r8, ip, lr}

0800a7a8 <remoteconfig::json_get_version(char*, unsigned short)>:
 800a7a8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800a7aa:	2208      	movs	r2, #8
 800a7ac:	4b09      	ldr	r3, [pc, #36]	; (800a7d4 <remoteconfig::json_get_version(char*, unsigned short)+0x2c>)
 800a7ae:	9204      	str	r2, [sp, #16]
 800a7b0:	f1a3 020b 	sub.w	r2, r3, #11
 800a7b4:	9203      	str	r2, [sp, #12]
 800a7b6:	220b      	movs	r2, #11
 800a7b8:	9202      	str	r2, [sp, #8]
 800a7ba:	4a07      	ldr	r2, [pc, #28]	; (800a7d8 <remoteconfig::json_get_version(char*, unsigned short)+0x30>)
 800a7bc:	9305      	str	r3, [sp, #20]
 800a7be:	3b0e      	subs	r3, #14
 800a7c0:	9201      	str	r2, [sp, #4]
 800a7c2:	9300      	str	r3, [sp, #0]
 800a7c4:	4a05      	ldr	r2, [pc, #20]	; (800a7dc <remoteconfig::json_get_version(char*, unsigned short)+0x34>)
 800a7c6:	2303      	movs	r3, #3
 800a7c8:	f7fe fcb6 	bl	8009138 <snprintf>
 800a7cc:	b280      	uxth	r0, r0
 800a7ce:	b007      	add	sp, #28
 800a7d0:	f85d fb04 	ldr.w	pc, [sp], #4
 800a7d4:	2000b816 	andcs	fp, r0, r6, lsl r8
 800a7d8:	08015026 	stmdaeq	r1, {r1, r2, r5, ip, lr}
 800a7dc:	0801516a 	stmdaeq	r1, {r1, r3, r5, r6, r8, ip, lr}

0800a7e0 <remoteconfig::json_get_uptime(char*, unsigned short)>:
 800a7e0:	b508      	push	{r3, lr}
 800a7e2:	4b05      	ldr	r3, [pc, #20]	; (800a7f8 <remoteconfig::json_get_uptime(char*, unsigned short)+0x18>)
 800a7e4:	681a      	ldr	r2, [r3, #0]
 800a7e6:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800a7ea:	fbb2 f3f3 	udiv	r3, r2, r3
 800a7ee:	4a03      	ldr	r2, [pc, #12]	; (800a7fc <remoteconfig::json_get_uptime(char*, unsigned short)+0x1c>)
 800a7f0:	f7fe fca2 	bl	8009138 <snprintf>
 800a7f4:	b280      	uxth	r0, r0
 800a7f6:	bd08      	pop	{r3, pc}
 800a7f8:	2000b87c 	andcs	fp, r0, ip, ror r8
 800a7fc:	080151b0 	stmdaeq	r1, {r4, r5, r7, r8, ip, lr}

0800a800 <remoteconfig::json_get_display(char*, unsigned short)>:
 800a800:	b508      	push	{r3, lr}
 800a802:	4b05      	ldr	r3, [pc, #20]	; (800a818 <remoteconfig::json_get_display(char*, unsigned short)+0x18>)
 800a804:	4a05      	ldr	r2, [pc, #20]	; (800a81c <remoteconfig::json_get_display(char*, unsigned short)+0x1c>)
 800a806:	681b      	ldr	r3, [r3, #0]
 800a808:	7c1b      	ldrb	r3, [r3, #16]
 800a80a:	f083 0301 	eor.w	r3, r3, #1
 800a80e:	f7fe fc93 	bl	8009138 <snprintf>
 800a812:	b280      	uxth	r0, r0
 800a814:	bd08      	pop	{r3, pc}
 800a816:	bf00      	nop
 800a818:	2000b778 	andcs	fp, r0, r8, ror r7
 800a81c:	080151bf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r7, r8, ip, lr}

0800a820 <remoteconfig::json_get_directory(char*, unsigned short)>:
 800a820:	b508      	push	{r3, lr}
 800a822:	4a02      	ldr	r2, [pc, #8]	; (800a82c <remoteconfig::json_get_directory(char*, unsigned short)+0xc>)
 800a824:	f7fe fc88 	bl	8009138 <snprintf>
 800a828:	b280      	uxth	r0, r0
 800a82a:	bd08      	pop	{r3, pc}
 800a82c:	080151ce 	stmdaeq	r1, {r1, r2, r3, r6, r7, r8, ip, lr}

0800a830 <get_file_content(char const*, char*)>:
 800a830:	2300      	movs	r3, #0
 800a832:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a834:	4a10      	ldr	r2, [pc, #64]	; (800a878 <get_file_content(char const*, char*)+0x48>)
 800a836:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 800a83a:	1e46      	subs	r6, r0, #1
 800a83c:	3c01      	subs	r4, #1
 800a83e:	f816 7f01 	ldrb.w	r7, [r6, #1]!
 800a842:	f814 5f01 	ldrb.w	r5, [r4, #1]!
 800a846:	42bd      	cmp	r5, r7
 800a848:	d005      	beq.n	800a856 <get_file_content(char const*, char*)+0x26>
 800a84a:	3301      	adds	r3, #1
 800a84c:	2b03      	cmp	r3, #3
 800a84e:	d1f2      	bne.n	800a836 <get_file_content(char const*, char*)+0x6>
 800a850:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800a854:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a856:	2d00      	cmp	r5, #0
 800a858:	d1f1      	bne.n	800a83e <get_file_content(char const*, char*)+0xe>
 800a85a:	4608      	mov	r0, r1
 800a85c:	eb02 02c3 	add.w	r2, r2, r3, lsl #3
 800a860:	6853      	ldr	r3, [r2, #4]
 800a862:	3b01      	subs	r3, #1
 800a864:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800a868:	f800 2b01 	strb.w	r2, [r0], #1
 800a86c:	2a00      	cmp	r2, #0
 800a86e:	d1f9      	bne.n	800a864 <get_file_content(char const*, char*)+0x34>
 800a870:	1a40      	subs	r0, r0, r1
 800a872:	3801      	subs	r0, #1
 800a874:	e7ee      	b.n	800a854 <get_file_content(char const*, char*)+0x24>
 800a876:	bf00      	nop
 800a878:	08015510 	stmdaeq	r1, {r4, r8, sl, ip, lr}

0800a87c <e131::universe_to_multicast_ip(unsigned short)>:
 800a87c:	b513      	push	{r0, r1, r4, lr}
 800a87e:	4604      	mov	r4, r0
 800a880:	a901      	add	r1, sp, #4
 800a882:	4806      	ldr	r0, [pc, #24]	; (800a89c <e131::universe_to_multicast_ip(unsigned short)+0x20>)
 800a884:	f007 fe36 	bl	80124f4 <inet_aton>
 800a888:	9801      	ldr	r0, [sp, #4]
 800a88a:	ea40 6004 	orr.w	r0, r0, r4, lsl #24
 800a88e:	0224      	lsls	r4, r4, #8
 800a890:	f404 047f 	and.w	r4, r4, #16711680	; 0xff0000
 800a894:	4320      	orrs	r0, r4
 800a896:	b002      	add	sp, #8
 800a898:	bd10      	pop	{r4, pc}
 800a89a:	bf00      	nop
 800a89c:	08015a51 	stmdaeq	r1, {r0, r4, r6, r9, fp, ip, lr}

0800a8a0 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]>:
 800a8a0:	f240 6304 	movw	r3, #1540	; 0x604
 800a8a4:	fb03 0001 	mla	r0, r3, r1, r0
 800a8a8:	2300      	movs	r3, #0
 800a8aa:	b510      	push	{r4, lr}
 800a8ac:	4293      	cmp	r3, r2
 800a8ae:	d100      	bne.n	800a8b2 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]+0x12>
 800a8b0:	bd10      	pop	{r4, pc}
 800a8b2:	f810 4b01 	ldrb.w	r4, [r0], #1
 800a8b6:	3301      	adds	r3, #1
 800a8b8:	f890 11ff 	ldrb.w	r1, [r0, #511]	; 0x1ff
 800a8bc:	42a1      	cmp	r1, r4
 800a8be:	bf38      	it	cc
 800a8c0:	4621      	movcc	r1, r4
 800a8c2:	f880 13ff 	strb.w	r1, [r0, #1023]	; 0x3ff
 800a8c6:	e7f1      	b.n	800a8ac <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]+0xc>

0800a8c8 <memset.constprop.0.isra.0>:
 800a8c8:	2300      	movs	r3, #0
 800a8ca:	4401      	add	r1, r0
 800a8cc:	4288      	cmp	r0, r1
 800a8ce:	d100      	bne.n	800a8d2 <memset.constprop.0.isra.0+0xa>
 800a8d0:	4770      	bx	lr
 800a8d2:	f800 3b01 	strb.w	r3, [r0], #1
 800a8d6:	e7f9      	b.n	800a8cc <memset.constprop.0.isra.0+0x4>

0800a8d8 <memcpy.isra.0>:
 800a8d8:	3801      	subs	r0, #1
 800a8da:	440a      	add	r2, r1
 800a8dc:	4291      	cmp	r1, r2
 800a8de:	d100      	bne.n	800a8e2 <memcpy.isra.0+0xa>
 800a8e0:	4770      	bx	lr
 800a8e2:	f811 3b01 	ldrb.w	r3, [r1], #1
 800a8e6:	f800 3f01 	strb.w	r3, [r0, #1]!
 800a8ea:	e7f7      	b.n	800a8dc <memcpy.isra.0+0x4>

0800a8ec <lightset::Data::Get()>:
 800a8ec:	4b03      	ldr	r3, [pc, #12]	; (800a8fc <lightset::Data::Get()+0x10>)
 800a8ee:	4804      	ldr	r0, [pc, #16]	; (800a900 <lightset::Data::Get()+0x14>)
 800a8f0:	681a      	ldr	r2, [r3, #0]
 800a8f2:	07d2      	lsls	r2, r2, #31
 800a8f4:	bf5c      	itt	pl
 800a8f6:	2201      	movpl	r2, #1
 800a8f8:	601a      	strpl	r2, [r3, #0]
 800a8fa:	4770      	bx	lr
 800a8fc:	200006cc 	andcs	r0, r0, ip, asr #13
 800a900:	200006d0 	ldrdcs	r0, [r0], -r0	; <UNPREDICTABLE>

0800a904 <lightset::Data::SetSourceA(unsigned int, unsigned char const*, unsigned int)>:
 800a904:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a908:	4615      	mov	r5, r2
 800a90a:	460f      	mov	r7, r1
 800a90c:	4604      	mov	r4, r0
 800a90e:	f7ff ffed 	bl	800a8ec <lightset::Data::Get()>
 800a912:	f240 6304 	movw	r3, #1540	; 0x604
 800a916:	4606      	mov	r6, r0
 800a918:	435c      	muls	r4, r3
 800a91a:	eb00 0804 	add.w	r8, r0, r4
 800a91e:	462a      	mov	r2, r5
 800a920:	4639      	mov	r1, r7
 800a922:	4640      	mov	r0, r8
 800a924:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800a928:	f7ff ffd6 	bl	800a8d8 <memcpy.isra.0>
 800a92c:	462a      	mov	r2, r5
 800a92e:	4639      	mov	r1, r7
 800a930:	f8c8 5600 	str.w	r5, [r8, #1536]	; 0x600
 800a934:	1930      	adds	r0, r6, r4
 800a936:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800a93a:	f7ff bfcd 	b.w	800a8d8 <memcpy.isra.0>

0800a93e <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>:
 800a93e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a942:	4680      	mov	r8, r0
 800a944:	f240 6404 	movw	r4, #1540	; 0x604
 800a948:	4615      	mov	r5, r2
 800a94a:	460f      	mov	r7, r1
 800a94c:	4699      	mov	r9, r3
 800a94e:	f7ff ffcd 	bl	800a8ec <lightset::Data::Get()>
 800a952:	fb04 f408 	mul.w	r4, r4, r8
 800a956:	eb00 0a04 	add.w	sl, r0, r4
 800a95a:	4606      	mov	r6, r0
 800a95c:	462a      	mov	r2, r5
 800a95e:	4639      	mov	r1, r7
 800a960:	4650      	mov	r0, sl
 800a962:	f7ff ffb9 	bl	800a8d8 <memcpy.isra.0>
 800a966:	f8ca 5600 	str.w	r5, [sl, #1536]	; 0x600
 800a96a:	f1b9 0f00 	cmp.w	r9, #0
 800a96e:	d106      	bne.n	800a97e <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)+0x40>
 800a970:	462a      	mov	r2, r5
 800a972:	4641      	mov	r1, r8
 800a974:	4630      	mov	r0, r6
 800a976:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a97a:	f7ff bf91 	b.w	800a8a0 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]>
 800a97e:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800a982:	462a      	mov	r2, r5
 800a984:	4639      	mov	r1, r7
 800a986:	1930      	adds	r0, r6, r4
 800a988:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a98c:	f7ff bfa4 	b.w	800a8d8 <memcpy.isra.0>

0800a990 <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>:
 800a990:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800a994:	4616      	mov	r6, r2
 800a996:	4699      	mov	r9, r3
 800a998:	4680      	mov	r8, r0
 800a99a:	460f      	mov	r7, r1
 800a99c:	f7ff ffa6 	bl	800a8ec <lightset::Data::Get()>
 800a9a0:	f240 6404 	movw	r4, #1540	; 0x604
 800a9a4:	4605      	mov	r5, r0
 800a9a6:	fb04 f408 	mul.w	r4, r4, r8
 800a9aa:	f504 7000 	add.w	r0, r4, #512	; 0x200
 800a9ae:	4632      	mov	r2, r6
 800a9b0:	4639      	mov	r1, r7
 800a9b2:	4428      	add	r0, r5
 800a9b4:	f7ff ff90 	bl	800a8d8 <memcpy.isra.0>
 800a9b8:	192b      	adds	r3, r5, r4
 800a9ba:	f8c3 6600 	str.w	r6, [r3, #1536]	; 0x600
 800a9be:	f1b9 0f00 	cmp.w	r9, #0
 800a9c2:	d106      	bne.n	800a9d2 <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)+0x42>
 800a9c4:	4632      	mov	r2, r6
 800a9c6:	4641      	mov	r1, r8
 800a9c8:	4628      	mov	r0, r5
 800a9ca:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800a9ce:	f7ff bf67 	b.w	800a8a0 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]>
 800a9d2:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800a9d6:	4632      	mov	r2, r6
 800a9d8:	4639      	mov	r1, r7
 800a9da:	1928      	adds	r0, r5, r4
 800a9dc:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800a9e0:	f7ff bf7a 	b.w	800a8d8 <memcpy.isra.0>

0800a9e4 <E131Bridge::E131Bridge()>:
 800a9e4:	2300      	movs	r3, #0
 800a9e6:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800a9ea:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a9ec:	e9c0 2300 	strd	r2, r3, [r0]
 800a9f0:	2201      	movs	r2, #1
 800a9f2:	4604      	mov	r4, r0
 800a9f4:	2764      	movs	r7, #100	; 0x64
 800a9f6:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800a9fa:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800a9fe:	e9c0 3307 	strd	r3, r3, [r0, #28]
 800aa02:	6743      	str	r3, [r0, #116]	; 0x74
 800aa04:	4b26      	ldr	r3, [pc, #152]	; (800aaa0 <E131Bridge::E131Bridge()+0xbc>)
 800aa06:	7202      	strb	r2, [r0, #8]
 800aa08:	b093      	sub	sp, #76	; 0x4c
 800aa0a:	6018      	str	r0, [r3, #0]
 800aa0c:	f200 5514 	addw	r5, r0, #1300	; 0x514
 800aa10:	f200 6224 	addw	r2, r0, #1572	; 0x624
 800aa14:	f200 6654 	addw	r6, r0, #1620	; 0x654
 800aa18:	4628      	mov	r0, r5
 800aa1a:	2144      	movs	r1, #68	; 0x44
 800aa1c:	f7ff ff54 	bl	800a8c8 <memset.constprop.0.isra.0>
 800aa20:	4610      	mov	r0, r2
 800aa22:	210c      	movs	r1, #12
 800aa24:	f7ff ff50 	bl	800a8c8 <memset.constprop.0.isra.0>
 800aa28:	320c      	adds	r2, #12
 800aa2a:	f802 7c03 	strb.w	r7, [r2, #-3]
 800aa2e:	4296      	cmp	r6, r2
 800aa30:	f105 0544 	add.w	r5, r5, #68	; 0x44
 800aa34:	d1f0      	bne.n	800aa18 <E131Bridge::E131Bridge()+0x34>
 800aa36:	2120      	movs	r1, #32
 800aa38:	f204 40f4 	addw	r0, r4, #1268	; 0x4f4
 800aa3c:	f7ff ff44 	bl	800a8c8 <memset.constprop.0.isra.0>
 800aa40:	2301      	movs	r3, #1
 800aa42:	4d18      	ldr	r5, [pc, #96]	; (800aaa4 <E131Bridge::E131Bridge()+0xc0>)
 800aa44:	4a18      	ldr	r2, [pc, #96]	; (800aaa8 <E131Bridge::E131Bridge()+0xc4>)
 800aa46:	f884 350c 	strb.w	r3, [r4, #1292]	; 0x50c
 800aa4a:	682b      	ldr	r3, [r5, #0]
 800aa4c:	2140      	movs	r1, #64	; 0x40
 800aa4e:	9200      	str	r2, [sp, #0]
 800aa50:	3320      	adds	r3, #32
 800aa52:	4a16      	ldr	r2, [pc, #88]	; (800aaac <E131Bridge::E131Bridge()+0xc8>)
 800aa54:	a802      	add	r0, sp, #8
 800aa56:	f7fe fb6f 	bl	8009138 <snprintf>
 800aa5a:	233f      	movs	r3, #63	; 0x3f
 800aa5c:	f104 0234 	add.w	r2, r4, #52	; 0x34
 800aa60:	a902      	add	r1, sp, #8
 800aa62:	f811 0b01 	ldrb.w	r0, [r1], #1
 800aa66:	b928      	cbnz	r0, 800aa74 <E131Bridge::E131Bridge()+0x90>
 800aa68:	4413      	add	r3, r2
 800aa6a:	429a      	cmp	r2, r3
 800aa6c:	d006      	beq.n	800aa7c <E131Bridge::E131Bridge()+0x98>
 800aa6e:	f802 0b01 	strb.w	r0, [r2], #1
 800aa72:	e7fa      	b.n	800aa6a <E131Bridge::E131Bridge()+0x86>
 800aa74:	3b01      	subs	r3, #1
 800aa76:	f802 0b01 	strb.w	r0, [r2], #1
 800aa7a:	d1f2      	bne.n	800aa62 <E131Bridge::E131Bridge()+0x7e>
 800aa7c:	2300      	movs	r3, #0
 800aa7e:	f44f 51ae 	mov.w	r1, #5568	; 0x15c0
 800aa82:	f884 3073 	strb.w	r3, [r4, #115]	; 0x73
 800aa86:	6828      	ldr	r0, [r5, #0]
 800aa88:	f005 fa0a 	bl	800fea0 <Network::Begin(unsigned short)>
 800aa8c:	4621      	mov	r1, r4
 800aa8e:	4b08      	ldr	r3, [pc, #32]	; (800aab0 <E131Bridge::E131Bridge()+0xcc>)
 800aa90:	f841 0b24 	str.w	r0, [r1], #36
 800aa94:	6818      	ldr	r0, [r3, #0]
 800aa96:	f007 fccd 	bl	8012434 <Hardware::GetUuid(unsigned char*)>
 800aa9a:	4620      	mov	r0, r4
 800aa9c:	b013      	add	sp, #76	; 0x4c
 800aa9e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800aaa0:	20001ee0 	andcs	r1, r0, r0, ror #29
 800aaa4:	2000b1a0 	andcs	fp, r0, r0, lsr #3
 800aaa8:	08015026 	stmdaeq	r1, {r1, r2, r5, ip, lr}
 800aaac:	08015a5d 	stmdaeq	r1, {r0, r2, r3, r4, r6, r9, fp, ip, lr}
 800aab0:	2000b868 	andcs	fp, r0, r8, ror #16

0800aab4 <E131Bridge::Start()>:
 800aab4:	6943      	ldr	r3, [r0, #20]
 800aab6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800aab8:	4604      	mov	r4, r0
 800aaba:	b35b      	cbz	r3, 800ab14 <E131Bridge::Start()+0x60>
 800aabc:	6983      	ldr	r3, [r0, #24]
 800aabe:	b9cb      	cbnz	r3, 800aaf4 <E131Bridge::Start()+0x40>
 800aac0:	a901      	add	r1, sp, #4
 800aac2:	4818      	ldr	r0, [pc, #96]	; (800ab24 <E131Bridge::Start()+0x70>)
 800aac4:	f007 fd16 	bl	80124f4 <inet_aton>
 800aac8:	9b01      	ldr	r3, [sp, #4]
 800aaca:	f240 207e 	movw	r0, #638	; 0x27e
 800aace:	f043 4356 	orr.w	r3, r3, #3590324224	; 0xd6000000
 800aad2:	f443 037a 	orr.w	r3, r3, #16384000	; 0xfa0000
 800aad6:	6223      	str	r3, [r4, #32]
 800aad8:	f007 fd08 	bl	80124ec <operator new(unsigned int)>
 800aadc:	61a0      	str	r0, [r4, #24]
 800aade:	4620      	mov	r0, r4
 800aae0:	f000 fd36 	bl	800b550 <E131Bridge::FillDataPacket()>
 800aae4:	f44f 608f 	mov.w	r0, #1144	; 0x478
 800aae8:	f007 fd00 	bl	80124ec <operator new(unsigned int)>
 800aaec:	61e0      	str	r0, [r4, #28]
 800aaee:	4620      	mov	r0, r4
 800aaf0:	f000 fc86 	bl	800b400 <E131Bridge::FillDiscoveryPacket()>
 800aaf4:	2500      	movs	r5, #0
 800aaf6:	270c      	movs	r7, #12
 800aaf8:	f204 6626 	addw	r6, r4, #1574	; 0x626
 800aafc:	fb07 f305 	mul.w	r3, r7, r5
 800ab00:	5cf3      	ldrb	r3, [r6, r3]
 800ab02:	b123      	cbz	r3, 800ab0e <E131Bridge::Start()+0x5a>
 800ab04:	6960      	ldr	r0, [r4, #20]
 800ab06:	4629      	mov	r1, r5
 800ab08:	6803      	ldr	r3, [r0, #0]
 800ab0a:	689b      	ldr	r3, [r3, #8]
 800ab0c:	4798      	blx	r3
 800ab0e:	3501      	adds	r5, #1
 800ab10:	2d04      	cmp	r5, #4
 800ab12:	d1f3      	bne.n	800aafc <E131Bridge::Start()+0x48>
 800ab14:	2102      	movs	r1, #2
 800ab16:	4b04      	ldr	r3, [pc, #16]	; (800ab28 <E131Bridge::Start()+0x74>)
 800ab18:	6818      	ldr	r0, [r3, #0]
 800ab1a:	b003      	add	sp, #12
 800ab1c:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800ab20:	f007 bc04 	b.w	801232c <LedBlink::SetMode(ledblink::Mode)>
 800ab24:	08015a51 	stmdaeq	r1, {r0, r4, r6, r9, fp, ip, lr}
 800ab28:	2000b864 	andcs	fp, r0, r4, ror #16

0800ab2c <E131Bridge::Stop()>:
 800ab2c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ab30:	2500      	movs	r5, #0
 800ab32:	2301      	movs	r3, #1
 800ab34:	4604      	mov	r4, r0
 800ab36:	f240 6804 	movw	r8, #1540	; 0x604
 800ab3a:	462e      	mov	r6, r5
 800ab3c:	f880 34f4 	strb.w	r3, [r0, #1268]	; 0x4f4
 800ab40:	f200 5754 	addw	r7, r0, #1364	; 0x554
 800ab44:	6860      	ldr	r0, [r4, #4]
 800ab46:	b118      	cbz	r0, 800ab50 <E131Bridge::Stop()+0x24>
 800ab48:	6803      	ldr	r3, [r0, #0]
 800ab4a:	4629      	mov	r1, r5
 800ab4c:	68db      	ldr	r3, [r3, #12]
 800ab4e:	4798      	blx	r3
 800ab50:	f7ff fecc 	bl	800a8ec <lightset::Data::Get()>
 800ab54:	2344      	movs	r3, #68	; 0x44
 800ab56:	fb08 0005 	mla	r0, r8, r5, r0
 800ab5a:	436b      	muls	r3, r5
 800ab5c:	3501      	adds	r5, #1
 800ab5e:	2d04      	cmp	r5, #4
 800ab60:	f8c0 6600 	str.w	r6, [r0, #1536]	; 0x600
 800ab64:	54fe      	strb	r6, [r7, r3]
 800ab66:	d1ed      	bne.n	800ab44 <E131Bridge::Stop()+0x18>
 800ab68:	6963      	ldr	r3, [r4, #20]
 800ab6a:	b17b      	cbz	r3, 800ab8c <E131Bridge::Stop()+0x60>
 800ab6c:	2500      	movs	r5, #0
 800ab6e:	270c      	movs	r7, #12
 800ab70:	f204 6626 	addw	r6, r4, #1574	; 0x626
 800ab74:	fb07 f305 	mul.w	r3, r7, r5
 800ab78:	5cf3      	ldrb	r3, [r6, r3]
 800ab7a:	b123      	cbz	r3, 800ab86 <E131Bridge::Stop()+0x5a>
 800ab7c:	6960      	ldr	r0, [r4, #20]
 800ab7e:	4629      	mov	r1, r5
 800ab80:	6803      	ldr	r3, [r0, #0]
 800ab82:	68db      	ldr	r3, [r3, #12]
 800ab84:	4798      	blx	r3
 800ab86:	3501      	adds	r5, #1
 800ab88:	2d04      	cmp	r5, #4
 800ab8a:	d1f3      	bne.n	800ab74 <E131Bridge::Stop()+0x48>
 800ab8c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800ab90:	4b02      	ldr	r3, [pc, #8]	; (800ab9c <E131Bridge::Stop()+0x70>)
 800ab92:	2100      	movs	r1, #0
 800ab94:	6818      	ldr	r0, [r3, #0]
 800ab96:	f007 bbc9 	b.w	801232c <LedBlink::SetMode(ledblink::Mode)>
 800ab9a:	bf00      	nop
 800ab9c:	2000b864 	andcs	fp, r0, r4, ror #16

0800aba0 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>:
 800aba0:	b570      	push	{r4, r5, r6, lr}
 800aba2:	4604      	mov	r4, r0
 800aba4:	2300      	movs	r3, #0
 800aba6:	2544      	movs	r5, #68	; 0x44
 800aba8:	4610      	mov	r0, r2
 800abaa:	f204 5214 	addw	r2, r4, #1300	; 0x514
 800abae:	4299      	cmp	r1, r3
 800abb0:	d004      	beq.n	800abbc <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0x1c>
 800abb2:	fb05 f603 	mul.w	r6, r5, r3
 800abb6:	5b96      	ldrh	r6, [r2, r6]
 800abb8:	4286      	cmp	r6, r0
 800abba:	d00e      	beq.n	800abda <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0x3a>
 800abbc:	3301      	adds	r3, #1
 800abbe:	2b04      	cmp	r3, #4
 800abc0:	d1f5      	bne.n	800abae <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0xe>
 800abc2:	4b06      	ldr	r3, [pc, #24]	; (800abdc <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0x3c>)
 800abc4:	6824      	ldr	r4, [r4, #0]
 800abc6:	681d      	ldr	r5, [r3, #0]
 800abc8:	f7ff fe58 	bl	800a87c <e131::universe_to_multicast_ip(unsigned short)>
 800abcc:	4621      	mov	r1, r4
 800abce:	4602      	mov	r2, r0
 800abd0:	4628      	mov	r0, r5
 800abd2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800abd6:	f005 b977 	b.w	800fec8 <Network::LeaveGroup(int, unsigned int)>
 800abda:	bd70      	pop	{r4, r5, r6, pc}
 800abdc:	2000b1a0 	andcs	fp, r0, r0, lsr #3

0800abe0 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)>:
 800abe0:	b570      	push	{r4, r5, r6, lr}
 800abe2:	4604      	mov	r4, r0
 800abe4:	461d      	mov	r5, r3
 800abe6:	b1c1      	cbz	r1, 800ac1a <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x3a>
 800abe8:	f8b0 2506 	ldrh.w	r2, [r0, #1286]	; 0x506
 800abec:	f200 5606 	addw	r6, r0, #1286	; 0x506
 800abf0:	b12a      	cbz	r2, 800abfe <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x1e>
 800abf2:	42aa      	cmp	r2, r5
 800abf4:	d017      	beq.n	800ac26 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x46>
 800abf6:	2104      	movs	r1, #4
 800abf8:	4620      	mov	r0, r4
 800abfa:	f7ff ffd1 	bl	800aba0 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>
 800abfe:	4b0a      	ldr	r3, [pc, #40]	; (800ac28 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x48>)
 800ac00:	8035      	strh	r5, [r6, #0]
 800ac02:	4628      	mov	r0, r5
 800ac04:	6826      	ldr	r6, [r4, #0]
 800ac06:	681c      	ldr	r4, [r3, #0]
 800ac08:	f7ff fe38 	bl	800a87c <e131::universe_to_multicast_ip(unsigned short)>
 800ac0c:	4631      	mov	r1, r6
 800ac0e:	4602      	mov	r2, r0
 800ac10:	4620      	mov	r0, r4
 800ac12:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ac16:	f005 b954 	b.w	800fec2 <Network::JoinGroup(int, unsigned int)>
 800ac1a:	b122      	cbz	r2, 800ac26 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x46>
 800ac1c:	f8b0 2508 	ldrh.w	r2, [r0, #1288]	; 0x508
 800ac20:	f500 66a1 	add.w	r6, r0, #1288	; 0x508
 800ac24:	e7e4      	b.n	800abf0 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x10>
 800ac26:	bd70      	pop	{r4, r5, r6, pc}
 800ac28:	2000b1a0 	andcs	fp, r0, r0, lsr #3

0800ac2c <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)>:
 800ac2c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ac30:	4604      	mov	r4, r0
 800ac32:	460d      	mov	r5, r1
 800ac34:	461e      	mov	r6, r3
 800ac36:	bb02      	cbnz	r2, 800ac7a <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x4e>
 800ac38:	2903      	cmp	r1, #3
 800ac3a:	d843      	bhi.n	800acc4 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x98>
 800ac3c:	230c      	movs	r3, #12
 800ac3e:	fb03 0301 	mla	r3, r3, r1, r0
 800ac42:	f893 2626 	ldrb.w	r2, [r3, #1574]	; 0x626
 800ac46:	b12a      	cbz	r2, 800ac54 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x28>
 800ac48:	f8b3 3624 	ldrh.w	r3, [r3, #1572]	; 0x624
 800ac4c:	42b3      	cmp	r3, r6
 800ac4e:	d109      	bne.n	800ac64 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x38>
 800ac50:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ac54:	f890 250a 	ldrb.w	r2, [r0, #1290]	; 0x50a
 800ac58:	3201      	adds	r2, #1
 800ac5a:	f880 250a 	strb.w	r2, [r0, #1290]	; 0x50a
 800ac5e:	2201      	movs	r2, #1
 800ac60:	f883 2626 	strb.w	r2, [r3, #1574]	; 0x626
 800ac64:	230c      	movs	r3, #12
 800ac66:	fb03 4405 	mla	r4, r3, r5, r4
 800ac6a:	4630      	mov	r0, r6
 800ac6c:	f8a4 6624 	strh.w	r6, [r4, #1572]	; 0x624
 800ac70:	f7ff fe04 	bl	800a87c <e131::universe_to_multicast_ip(unsigned short)>
 800ac74:	f8c4 0628 	str.w	r0, [r4, #1576]	; 0x628
 800ac78:	e7ea      	b.n	800ac50 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 800ac7a:	2a02      	cmp	r2, #2
 800ac7c:	d122      	bne.n	800acc4 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x98>
 800ac7e:	2903      	cmp	r1, #3
 800ac80:	d8e6      	bhi.n	800ac50 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 800ac82:	2344      	movs	r3, #68	; 0x44
 800ac84:	fb03 0301 	mla	r3, r3, r1, r0
 800ac88:	f893 2516 	ldrb.w	r2, [r3, #1302]	; 0x516
 800ac8c:	b152      	cbz	r2, 800aca4 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x78>
 800ac8e:	2200      	movs	r2, #0
 800ac90:	f883 2516 	strb.w	r2, [r3, #1302]	; 0x516
 800ac94:	f890 350b 	ldrb.w	r3, [r0, #1291]	; 0x50b
 800ac98:	4632      	mov	r2, r6
 800ac9a:	3b01      	subs	r3, #1
 800ac9c:	f880 350b 	strb.w	r3, [r0, #1291]	; 0x50b
 800aca0:	f7ff ff7e 	bl	800aba0 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>
 800aca4:	230c      	movs	r3, #12
 800aca6:	fb03 4505 	mla	r5, r3, r5, r4
 800acaa:	f895 3626 	ldrb.w	r3, [r5, #1574]	; 0x626
 800acae:	2b00      	cmp	r3, #0
 800acb0:	d0ce      	beq.n	800ac50 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 800acb2:	2300      	movs	r3, #0
 800acb4:	f885 3626 	strb.w	r3, [r5, #1574]	; 0x626
 800acb8:	f894 350a 	ldrb.w	r3, [r4, #1290]	; 0x50a
 800acbc:	3b01      	subs	r3, #1
 800acbe:	f884 350a 	strb.w	r3, [r4, #1290]	; 0x50a
 800acc2:	e7c5      	b.n	800ac50 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 800acc4:	2344      	movs	r3, #68	; 0x44
 800acc6:	fb03 4305 	mla	r3, r3, r5, r4
 800acca:	f893 2516 	ldrb.w	r2, [r3, #1302]	; 0x516
 800acce:	b1d2      	cbz	r2, 800ad06 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0xda>
 800acd0:	f8b3 3514 	ldrh.w	r3, [r3, #1300]	; 0x514
 800acd4:	42b3      	cmp	r3, r6
 800acd6:	d0bb      	beq.n	800ac50 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 800acd8:	4632      	mov	r2, r6
 800acda:	4629      	mov	r1, r5
 800acdc:	4620      	mov	r0, r4
 800acde:	f7ff ff5f 	bl	800aba0 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>
 800ace2:	4b0d      	ldr	r3, [pc, #52]	; (800ad18 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0xec>)
 800ace4:	4630      	mov	r0, r6
 800ace6:	681f      	ldr	r7, [r3, #0]
 800ace8:	f8d4 8000 	ldr.w	r8, [r4]
 800acec:	f7ff fdc6 	bl	800a87c <e131::universe_to_multicast_ip(unsigned short)>
 800acf0:	4641      	mov	r1, r8
 800acf2:	4602      	mov	r2, r0
 800acf4:	4638      	mov	r0, r7
 800acf6:	f005 f8e4 	bl	800fec2 <Network::JoinGroup(int, unsigned int)>
 800acfa:	2344      	movs	r3, #68	; 0x44
 800acfc:	fb03 4305 	mla	r3, r3, r5, r4
 800ad00:	f8a3 6514 	strh.w	r6, [r3, #1300]	; 0x514
 800ad04:	e7a4      	b.n	800ac50 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 800ad06:	f894 250b 	ldrb.w	r2, [r4, #1291]	; 0x50b
 800ad0a:	3201      	adds	r2, #1
 800ad0c:	f884 250b 	strb.w	r2, [r4, #1291]	; 0x50b
 800ad10:	2201      	movs	r2, #1
 800ad12:	f883 2516 	strb.w	r2, [r3, #1302]	; 0x516
 800ad16:	e7e4      	b.n	800ace2 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0xb6>
 800ad18:	2000b1a0 	andcs	fp, r0, r0, lsr #3

0800ad1c <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>:
 800ad1c:	b953      	cbnz	r3, 800ad34 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const+0x18>
 800ad1e:	2903      	cmp	r1, #3
 800ad20:	d811      	bhi.n	800ad46 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const+0x2a>
 800ad22:	230c      	movs	r3, #12
 800ad24:	fb03 0001 	mla	r0, r3, r1, r0
 800ad28:	f8b0 3624 	ldrh.w	r3, [r0, #1572]	; 0x624
 800ad2c:	f890 0626 	ldrb.w	r0, [r0, #1574]	; 0x626
 800ad30:	8013      	strh	r3, [r2, #0]
 800ad32:	4770      	bx	lr
 800ad34:	2344      	movs	r3, #68	; 0x44
 800ad36:	fb03 0001 	mla	r0, r3, r1, r0
 800ad3a:	f8b0 3514 	ldrh.w	r3, [r0, #1300]	; 0x514
 800ad3e:	f890 0516 	ldrb.w	r0, [r0, #1302]	; 0x516
 800ad42:	8013      	strh	r3, [r2, #0]
 800ad44:	4770      	bx	lr
 800ad46:	4618      	mov	r0, r3
 800ad48:	4770      	bx	lr

0800ad4a <E131Bridge::UpdateMergeStatus(unsigned int)>:
 800ad4a:	f890 34f5 	ldrb.w	r3, [r0, #1269]	; 0x4f5
 800ad4e:	b923      	cbnz	r3, 800ad5a <E131Bridge::UpdateMergeStatus(unsigned int)+0x10>
 800ad50:	2301      	movs	r3, #1
 800ad52:	f880 34f5 	strb.w	r3, [r0, #1269]	; 0x4f5
 800ad56:	f880 34f8 	strb.w	r3, [r0, #1272]	; 0x4f8
 800ad5a:	2344      	movs	r3, #68	; 0x44
 800ad5c:	fb03 0001 	mla	r0, r3, r1, r0
 800ad60:	2301      	movs	r3, #1
 800ad62:	f880 3555 	strb.w	r3, [r0, #1365]	; 0x555
 800ad66:	4770      	bx	lr

0800ad68 <E131Bridge::CheckMergeTimeouts(unsigned int)>:
 800ad68:	4602      	mov	r2, r0
 800ad6a:	2044      	movs	r0, #68	; 0x44
 800ad6c:	4348      	muls	r0, r1
 800ad6e:	b570      	push	{r4, r5, r6, lr}
 800ad70:	1815      	adds	r5, r2, r0
 800ad72:	460c      	mov	r4, r1
 800ad74:	68d3      	ldr	r3, [r2, #12]
 800ad76:	f8d5 1518 	ldr.w	r1, [r5, #1304]	; 0x518
 800ad7a:	1a5b      	subs	r3, r3, r1
 800ad7c:	f242 7110 	movw	r1, #10000	; 0x2710
 800ad80:	428b      	cmp	r3, r1
 800ad82:	d90a      	bls.n	800ad9a <E131Bridge::CheckMergeTimeouts(unsigned int)+0x32>
 800ad84:	2600      	movs	r6, #0
 800ad86:	f500 60a4 	add.w	r0, r0, #1312	; 0x520
 800ad8a:	2110      	movs	r1, #16
 800ad8c:	f8c5 651c 	str.w	r6, [r5, #1308]	; 0x51c
 800ad90:	4410      	add	r0, r2
 800ad92:	f7ff fd99 	bl	800a8c8 <memset.constprop.0.isra.0>
 800ad96:	f885 6555 	strb.w	r6, [r5, #1365]	; 0x555
 800ad9a:	2344      	movs	r3, #68	; 0x44
 800ad9c:	435c      	muls	r4, r3
 800ad9e:	1915      	adds	r5, r2, r4
 800ada0:	f8d5 1534 	ldr.w	r1, [r5, #1332]	; 0x534
 800ada4:	68d3      	ldr	r3, [r2, #12]
 800ada6:	1a5b      	subs	r3, r3, r1
 800ada8:	f242 7110 	movw	r1, #10000	; 0x2710
 800adac:	428b      	cmp	r3, r1
 800adae:	d90a      	bls.n	800adc6 <E131Bridge::CheckMergeTimeouts(unsigned int)+0x5e>
 800adb0:	2600      	movs	r6, #0
 800adb2:	f204 543c 	addw	r4, r4, #1340	; 0x53c
 800adb6:	2110      	movs	r1, #16
 800adb8:	f8c5 6538 	str.w	r6, [r5, #1336]	; 0x538
 800adbc:	1910      	adds	r0, r2, r4
 800adbe:	f7ff fd83 	bl	800a8c8 <memset.constprop.0.isra.0>
 800adc2:	f885 6555 	strb.w	r6, [r5, #1365]	; 0x555
 800adc6:	f892 1599 	ldrb.w	r1, [r2, #1433]	; 0x599
 800adca:	f892 3555 	ldrb.w	r3, [r2, #1365]	; 0x555
 800adce:	430b      	orrs	r3, r1
 800add0:	f892 15dd 	ldrb.w	r1, [r2, #1501]	; 0x5dd
 800add4:	430b      	orrs	r3, r1
 800add6:	d107      	bne.n	800ade8 <E131Bridge::CheckMergeTimeouts(unsigned int)+0x80>
 800add8:	f892 3621 	ldrb.w	r3, [r2, #1569]	; 0x621
 800addc:	b923      	cbnz	r3, 800ade8 <E131Bridge::CheckMergeTimeouts(unsigned int)+0x80>
 800adde:	2101      	movs	r1, #1
 800ade0:	f882 34f5 	strb.w	r3, [r2, #1269]	; 0x4f5
 800ade4:	f882 14f8 	strb.w	r1, [r2, #1272]	; 0x4f8
 800ade8:	bd70      	pop	{r4, r5, r6, pc}

0800adea <E131Bridge::IsPriorityTimeOut(unsigned int) const>:
 800adea:	2244      	movs	r2, #68	; 0x44
 800adec:	fb02 0101 	mla	r1, r2, r1, r0
 800adf0:	68c3      	ldr	r3, [r0, #12]
 800adf2:	b510      	push	{r4, lr}
 800adf4:	f8d1 2534 	ldr.w	r2, [r1, #1332]	; 0x534
 800adf8:	f8d1 451c 	ldr.w	r4, [r1, #1308]	; 0x51c
 800adfc:	f8d1 0538 	ldr.w	r0, [r1, #1336]	; 0x538
 800ae00:	1a9a      	subs	r2, r3, r2
 800ae02:	b184      	cbz	r4, 800ae26 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x3c>
 800ae04:	f8d1 1518 	ldr.w	r1, [r1, #1304]	; 0x518
 800ae08:	1a5b      	subs	r3, r3, r1
 800ae0a:	b128      	cbz	r0, 800ae18 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x2e>
 800ae0c:	f242 700f 	movw	r0, #9999	; 0x270f
 800ae10:	4283      	cmp	r3, r0
 800ae12:	d90d      	bls.n	800ae30 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x46>
 800ae14:	4282      	cmp	r2, r0
 800ae16:	e002      	b.n	800ae1e <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x34>
 800ae18:	f242 7010 	movw	r0, #10000	; 0x2710
 800ae1c:	4283      	cmp	r3, r0
 800ae1e:	bf94      	ite	ls
 800ae20:	2000      	movls	r0, #0
 800ae22:	2001      	movhi	r0, #1
 800ae24:	bd10      	pop	{r4, pc}
 800ae26:	2800      	cmp	r0, #0
 800ae28:	d0fc      	beq.n	800ae24 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x3a>
 800ae2a:	f242 7010 	movw	r0, #10000	; 0x2710
 800ae2e:	e7f1      	b.n	800ae14 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x2a>
 800ae30:	2000      	movs	r0, #0
 800ae32:	e7f7      	b.n	800ae24 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x3a>

0800ae34 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const>:
 800ae34:	684a      	ldr	r2, [r1, #4]
 800ae36:	6f83      	ldr	r3, [r0, #120]	; 0x78
 800ae38:	b510      	push	{r4, lr}
 800ae3a:	429a      	cmp	r2, r3
 800ae3c:	d10d      	bne.n	800ae5a <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x26>
 800ae3e:	f100 0391 	add.w	r3, r0, #145	; 0x91
 800ae42:	3107      	adds	r1, #7
 800ae44:	30a1      	adds	r0, #161	; 0xa1
 800ae46:	4283      	cmp	r3, r0
 800ae48:	d101      	bne.n	800ae4e <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x1a>
 800ae4a:	2001      	movs	r0, #1
 800ae4c:	bd10      	pop	{r4, pc}
 800ae4e:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800ae52:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800ae56:	4294      	cmp	r4, r2
 800ae58:	d0f5      	beq.n	800ae46 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x12>
 800ae5a:	2000      	movs	r0, #0
 800ae5c:	e7f6      	b.n	800ae4c <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x18>
	...

0800ae60 <E131Bridge::SetNetworkDataLossCondition(bool, bool)>:
 800ae60:	2301      	movs	r3, #1
 800ae62:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ae66:	4604      	mov	r4, r0
 800ae68:	4690      	mov	r8, r2
 800ae6a:	460f      	mov	r7, r1
 800ae6c:	f880 34f8 	strb.w	r3, [r0, #1272]	; 0x4f8
 800ae70:	2900      	cmp	r1, #0
 800ae72:	d044      	beq.n	800aefe <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x9e>
 800ae74:	2a00      	cmp	r2, #0
 800ae76:	d042      	beq.n	800aefe <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x9e>
 800ae78:	2600      	movs	r6, #0
 800ae7a:	f240 6904 	movw	r9, #1540	; 0x604
 800ae7e:	4632      	mov	r2, r6
 800ae80:	4637      	mov	r7, r6
 800ae82:	f8c0 34f4 	str.w	r3, [r0, #1268]	; 0x4f4
 800ae86:	f880 350c 	strb.w	r3, [r0, #1292]	; 0x50c
 800ae8a:	f500 65a4 	add.w	r5, r0, #1312	; 0x520
 800ae8e:	f895 8036 	ldrb.w	r8, [r5, #54]	; 0x36
 800ae92:	f1b8 0f00 	cmp.w	r8, #0
 800ae96:	d018      	beq.n	800aeca <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x6a>
 800ae98:	2110      	movs	r1, #16
 800ae9a:	4628      	mov	r0, r5
 800ae9c:	f845 7c04 	str.w	r7, [r5, #-4]
 800aea0:	f7ff fd12 	bl	800a8c8 <memset.constprop.0.isra.0>
 800aea4:	2110      	movs	r1, #16
 800aea6:	f105 001c 	add.w	r0, r5, #28
 800aeaa:	61af      	str	r7, [r5, #24]
 800aeac:	f7ff fd0c 	bl	800a8c8 <memset.constprop.0.isra.0>
 800aeb0:	f7ff fd1c 	bl	800a8ec <lightset::Data::Get()>
 800aeb4:	4642      	mov	r2, r8
 800aeb6:	fb09 0006 	mla	r0, r9, r6, r0
 800aeba:	f8c0 7600 	str.w	r7, [r0, #1536]	; 0x600
 800aebe:	f885 7034 	strb.w	r7, [r5, #52]	; 0x34
 800aec2:	f885 7036 	strb.w	r7, [r5, #54]	; 0x36
 800aec6:	f885 7035 	strb.w	r7, [r5, #53]	; 0x35
 800aeca:	3601      	adds	r6, #1
 800aecc:	2e04      	cmp	r6, #4
 800aece:	f105 0544 	add.w	r5, r5, #68	; 0x44
 800aed2:	d1dc      	bne.n	800ae8e <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x2e>
 800aed4:	b12a      	cbz	r2, 800aee2 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x82>
 800aed6:	f8d4 1510 	ldr.w	r1, [r4, #1296]	; 0x510
 800aeda:	2901      	cmp	r1, #1
 800aedc:	d04a      	beq.n	800af74 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x114>
 800aede:	2902      	cmp	r1, #2
 800aee0:	d04d      	beq.n	800af7e <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x11e>
 800aee2:	4b29      	ldr	r3, [pc, #164]	; (800af88 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x128>)
 800aee4:	2102      	movs	r1, #2
 800aee6:	6818      	ldr	r0, [r3, #0]
 800aee8:	f007 fa20 	bl	801232c <LedBlink::SetMode(ledblink::Mode)>
 800aeec:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800aef0:	f023 0302 	bic.w	r3, r3, #2
 800aef4:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 800aef8:	b003      	add	sp, #12
 800aefa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800aefe:	2600      	movs	r6, #0
 800af00:	f240 6b04 	movw	fp, #1540	; 0x604
 800af04:	4632      	mov	r2, r6
 800af06:	46b1      	mov	r9, r6
 800af08:	f204 553c 	addw	r5, r4, #1340	; 0x53c
 800af0c:	f895 a01a 	ldrb.w	sl, [r5, #26]
 800af10:	f1ba 0f00 	cmp.w	sl, #0
 800af14:	d028      	beq.n	800af68 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x108>
 800af16:	b15f      	cbz	r7, 800af30 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xd0>
 800af18:	f855 3c20 	ldr.w	r3, [r5, #-32]
 800af1c:	b143      	cbz	r3, 800af30 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xd0>
 800af1e:	2110      	movs	r1, #16
 800af20:	f845 9c20 	str.w	r9, [r5, #-32]
 800af24:	f1a5 001c 	sub.w	r0, r5, #28
 800af28:	f7ff fcce 	bl	800a8c8 <memset.constprop.0.isra.0>
 800af2c:	f885 9019 	strb.w	r9, [r5, #25]
 800af30:	f1b8 0f00 	cmp.w	r8, #0
 800af34:	d00a      	beq.n	800af4c <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xec>
 800af36:	f855 3c04 	ldr.w	r3, [r5, #-4]
 800af3a:	b13b      	cbz	r3, 800af4c <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xec>
 800af3c:	2110      	movs	r1, #16
 800af3e:	4628      	mov	r0, r5
 800af40:	f845 9c04 	str.w	r9, [r5, #-4]
 800af44:	f7ff fcc0 	bl	800a8c8 <memset.constprop.0.isra.0>
 800af48:	f885 9019 	strb.w	r9, [r5, #25]
 800af4c:	f894 34f5 	ldrb.w	r3, [r4, #1269]	; 0x4f5
 800af50:	b953      	cbnz	r3, 800af68 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x108>
 800af52:	9301      	str	r3, [sp, #4]
 800af54:	f7ff fcca 	bl	800a8ec <lightset::Data::Get()>
 800af58:	4652      	mov	r2, sl
 800af5a:	fb0b 0006 	mla	r0, fp, r6, r0
 800af5e:	9b01      	ldr	r3, [sp, #4]
 800af60:	f8c0 3600 	str.w	r3, [r0, #1536]	; 0x600
 800af64:	762b      	strb	r3, [r5, #24]
 800af66:	76ab      	strb	r3, [r5, #26]
 800af68:	3601      	adds	r6, #1
 800af6a:	2e04      	cmp	r6, #4
 800af6c:	f105 0544 	add.w	r5, r5, #68	; 0x44
 800af70:	d1cc      	bne.n	800af0c <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xac>
 800af72:	e7af      	b.n	800aed4 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x74>
 800af74:	6860      	ldr	r0, [r4, #4]
 800af76:	6803      	ldr	r3, [r0, #0]
 800af78:	695b      	ldr	r3, [r3, #20]
 800af7a:	4798      	blx	r3
 800af7c:	e7b1      	b.n	800aee2 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x82>
 800af7e:	6860      	ldr	r0, [r4, #4]
 800af80:	6803      	ldr	r3, [r0, #0]
 800af82:	699b      	ldr	r3, [r3, #24]
 800af84:	4798      	blx	r3
 800af86:	e7ac      	b.n	800aee2 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x82>
 800af88:	2000b864 	andcs	fp, r0, r4, ror #16

0800af8c <E131Bridge::HandleDmx()>:
 800af8c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800af90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800af94:	4604      	mov	r4, r0
 800af96:	2600      	movs	r6, #0
 800af98:	f8b0 70f7 	ldrh.w	r7, [r0, #247]	; 0xf7
 800af9c:	b085      	sub	sp, #20
 800af9e:	ba7f      	rev16	r7, r7
 800afa0:	b2bf      	uxth	r7, r7
 800afa2:	f100 09fa 	add.w	r9, r0, #250	; 0xfa
 800afa6:	3f01      	subs	r7, #1
 800afa8:	f500 65a4 	add.w	r5, r0, #1312	; 0x520
 800afac:	9301      	str	r3, [sp, #4]
 800afae:	f815 3c0a 	ldrb.w	r3, [r5, #-10]
 800afb2:	b353      	cbz	r3, 800b00a <E131Bridge::HandleDmx()+0x7e>
 800afb4:	f835 3c0c 	ldrh.w	r3, [r5, #-12]
 800afb8:	f8b4 20ed 	ldrh.w	r2, [r4, #237]	; 0xed
 800afbc:	ba5b      	rev16	r3, r3
 800afbe:	b29b      	uxth	r3, r3
 800afc0:	429a      	cmp	r2, r3
 800afc2:	d122      	bne.n	800b00a <E131Bridge::HandleDmx()+0x7e>
 800afc4:	f855 3c04 	ldr.w	r3, [r5, #-4]
 800afc8:	f1a5 0108 	sub.w	r1, r5, #8
 800afcc:	4620      	mov	r0, r4
 800afce:	9302      	str	r3, [sp, #8]
 800afd0:	f7ff ff30 	bl	800ae34 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const>
 800afd4:	f105 0114 	add.w	r1, r5, #20
 800afd8:	4682      	mov	sl, r0
 800afda:	4620      	mov	r0, r4
 800afdc:	f7ff ff2a 	bl	800ae34 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const>
 800afe0:	f8d5 b018 	ldr.w	fp, [r5, #24]
 800afe4:	4680      	mov	r8, r0
 800afe6:	f1ba 0f00 	cmp.w	sl, #0
 800afea:	d01a      	beq.n	800b022 <E131Bridge::HandleDmx()+0x96>
 800afec:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800aff0:	7c2a      	ldrb	r2, [r5, #16]
 800aff2:	742b      	strb	r3, [r5, #16]
 800aff4:	3313      	adds	r3, #19
 800aff6:	1a9b      	subs	r3, r3, r2
 800aff8:	b2db      	uxtb	r3, r3
 800affa:	2b13      	cmp	r3, #19
 800affc:	d905      	bls.n	800b00a <E131Bridge::HandleDmx()+0x7e>
 800affe:	f994 20ec 	ldrsb.w	r2, [r4, #236]	; 0xec
 800b002:	f894 30ec 	ldrb.w	r3, [r4, #236]	; 0xec
 800b006:	2a00      	cmp	r2, #0
 800b008:	da14      	bge.n	800b034 <E131Bridge::HandleDmx()+0xa8>
 800b00a:	9b01      	ldr	r3, [sp, #4]
 800b00c:	3601      	adds	r6, #1
 800b00e:	f203 6304 	addw	r3, r3, #1540	; 0x604
 800b012:	2e04      	cmp	r6, #4
 800b014:	9301      	str	r3, [sp, #4]
 800b016:	f105 0544 	add.w	r5, r5, #68	; 0x44
 800b01a:	d1c8      	bne.n	800afae <E131Bridge::HandleDmx()+0x22>
 800b01c:	b005      	add	sp, #20
 800b01e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b022:	2800      	cmp	r0, #0
 800b024:	d0eb      	beq.n	800affe <E131Bridge::HandleDmx()+0x72>
 800b026:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800b02a:	f895 202c 	ldrb.w	r2, [r5, #44]	; 0x2c
 800b02e:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
 800b032:	e7df      	b.n	800aff4 <E131Bridge::HandleDmx()+0x68>
 800b034:	065a      	lsls	r2, r3, #25
 800b036:	d50b      	bpl.n	800b050 <E131Bridge::HandleDmx()+0xc4>
 800b038:	f1ba 0f00 	cmp.w	sl, #0
 800b03c:	d102      	bne.n	800b044 <E131Bridge::HandleDmx()+0xb8>
 800b03e:	f1b8 0f00 	cmp.w	r8, #0
 800b042:	d0e2      	beq.n	800b00a <E131Bridge::HandleDmx()+0x7e>
 800b044:	4642      	mov	r2, r8
 800b046:	4651      	mov	r1, sl
 800b048:	4620      	mov	r0, r4
 800b04a:	f7ff ff09 	bl	800ae60 <E131Bridge::SetNetworkDataLossCondition(bool, bool)>
 800b04e:	e7dc      	b.n	800b00a <E131Bridge::HandleDmx()+0x7e>
 800b050:	f894 34f5 	ldrb.w	r3, [r4, #1269]	; 0x4f5
 800b054:	b133      	cbz	r3, 800b064 <E131Bridge::HandleDmx()+0xd8>
 800b056:	f894 34f9 	ldrb.w	r3, [r4, #1273]	; 0x4f9
 800b05a:	b91b      	cbnz	r3, 800b064 <E131Bridge::HandleDmx()+0xd8>
 800b05c:	4631      	mov	r1, r6
 800b05e:	4620      	mov	r0, r4
 800b060:	f7ff fe82 	bl	800ad68 <E131Bridge::CheckMergeTimeouts(unsigned int)>
 800b064:	f894 30e8 	ldrb.w	r3, [r4, #232]	; 0xe8
 800b068:	f894 250c 	ldrb.w	r2, [r4, #1292]	; 0x50c
 800b06c:	4293      	cmp	r3, r2
 800b06e:	d259      	bcs.n	800b124 <E131Bridge::HandleDmx()+0x198>
 800b070:	4631      	mov	r1, r6
 800b072:	4620      	mov	r0, r4
 800b074:	9303      	str	r3, [sp, #12]
 800b076:	f7ff feb8 	bl	800adea <E131Bridge::IsPriorityTimeOut(unsigned int) const>
 800b07a:	2800      	cmp	r0, #0
 800b07c:	d0c5      	beq.n	800b00a <E131Bridge::HandleDmx()+0x7e>
 800b07e:	9b03      	ldr	r3, [sp, #12]
 800b080:	f884 350c 	strb.w	r3, [r4, #1292]	; 0x50c
 800b084:	9b02      	ldr	r3, [sp, #8]
 800b086:	2b00      	cmp	r3, #0
 800b088:	d154      	bne.n	800b134 <E131Bridge::HandleDmx()+0x1a8>
 800b08a:	f1bb 0f00 	cmp.w	fp, #0
 800b08e:	d15c      	bne.n	800b14a <E131Bridge::HandleDmx()+0x1be>
 800b090:	6fa3      	ldr	r3, [r4, #120]	; 0x78
 800b092:	2210      	movs	r2, #16
 800b094:	f845 3c04 	str.w	r3, [r5, #-4]
 800b098:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800b09c:	4628      	mov	r0, r5
 800b09e:	742b      	strb	r3, [r5, #16]
 800b0a0:	f104 0192 	add.w	r1, r4, #146	; 0x92
 800b0a4:	f7ff fc18 	bl	800a8d8 <memcpy.isra.0>
 800b0a8:	68e3      	ldr	r3, [r4, #12]
 800b0aa:	463a      	mov	r2, r7
 800b0ac:	4649      	mov	r1, r9
 800b0ae:	4630      	mov	r0, r6
 800b0b0:	f845 3c08 	str.w	r3, [r5, #-8]
 800b0b4:	f7ff fc26 	bl	800a904 <lightset::Data::SetSourceA(unsigned int, unsigned char const*, unsigned int)>
 800b0b8:	f894 30ec 	ldrb.w	r3, [r4, #236]	; 0xec
 800b0bc:	069b      	lsls	r3, r3, #26
 800b0be:	f100 80aa 	bmi.w	800b216 <E131Bridge::HandleDmx()+0x28a>
 800b0c2:	f8b4 30e9 	ldrh.w	r3, [r4, #233]	; 0xe9
 800b0c6:	b29a      	uxth	r2, r3
 800b0c8:	2a00      	cmp	r2, #0
 800b0ca:	f000 80a8 	beq.w	800b21e <E131Bridge::HandleDmx()+0x292>
 800b0ce:	f894 24f7 	ldrb.w	r2, [r4, #1271]	; 0x4f7
 800b0d2:	2a00      	cmp	r2, #0
 800b0d4:	f040 80a3 	bne.w	800b21e <E131Bridge::HandleDmx()+0x292>
 800b0d8:	ba5b      	rev16	r3, r3
 800b0da:	b29b      	uxth	r3, r3
 800b0dc:	f1ba 0f00 	cmp.w	sl, #0
 800b0e0:	f040 8096 	bne.w	800b210 <E131Bridge::HandleDmx()+0x284>
 800b0e4:	f1b8 0f00 	cmp.w	r8, #0
 800b0e8:	f040 8092 	bne.w	800b210 <E131Bridge::HandleDmx()+0x284>
 800b0ec:	69aa      	ldr	r2, [r5, #24]
 800b0ee:	f855 1c04 	ldr.w	r1, [r5, #-4]
 800b0f2:	3a00      	subs	r2, #0
 800b0f4:	bf18      	it	ne
 800b0f6:	2201      	movne	r2, #1
 800b0f8:	3900      	subs	r1, #0
 800b0fa:	bf18      	it	ne
 800b0fc:	2101      	movne	r1, #1
 800b0fe:	4620      	mov	r0, r4
 800b100:	f7ff fd6e 	bl	800abe0 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)>
 800b104:	f240 1301 	movw	r3, #257	; 0x101
 800b108:	f8a4 34f6 	strh.w	r3, [r4, #1270]	; 0x4f6
 800b10c:	f894 34fa 	ldrb.w	r3, [r4, #1274]	; 0x4fa
 800b110:	2b00      	cmp	r3, #0
 800b112:	f040 8089 	bne.w	800b228 <E131Bridge::HandleDmx()+0x29c>
 800b116:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800b11a:	f043 0302 	orr.w	r3, r3, #2
 800b11e:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 800b122:	e772      	b.n	800b00a <E131Bridge::HandleDmx()+0x7e>
 800b124:	d9ae      	bls.n	800b084 <E131Bridge::HandleDmx()+0xf8>
 800b126:	2200      	movs	r2, #0
 800b128:	f845 2c04 	str.w	r2, [r5, #-4]
 800b12c:	61aa      	str	r2, [r5, #24]
 800b12e:	f884 24f5 	strb.w	r2, [r4, #1269]	; 0x4f5
 800b132:	e7a5      	b.n	800b080 <E131Bridge::HandleDmx()+0xf4>
 800b134:	f1ba 0f00 	cmp.w	sl, #0
 800b138:	f000 809a 	beq.w	800b270 <E131Bridge::HandleDmx()+0x2e4>
 800b13c:	f1bb 0f00 	cmp.w	fp, #0
 800b140:	d159      	bne.n	800b1f6 <E131Bridge::HandleDmx()+0x26a>
 800b142:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800b146:	742b      	strb	r3, [r5, #16]
 800b148:	e7ae      	b.n	800b0a8 <E131Bridge::HandleDmx()+0x11c>
 800b14a:	f1b8 0f00 	cmp.w	r8, #0
 800b14e:	d038      	beq.n	800b1c2 <E131Bridge::HandleDmx()+0x236>
 800b150:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800b154:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
 800b158:	68e3      	ldr	r3, [r4, #12]
 800b15a:	616b      	str	r3, [r5, #20]
 800b15c:	f7ff fbc6 	bl	800a8ec <lightset::Data::Get()>
 800b160:	4683      	mov	fp, r0
 800b162:	9b01      	ldr	r3, [sp, #4]
 800b164:	463a      	mov	r2, r7
 800b166:	f5a3 7000 	sub.w	r0, r3, #512	; 0x200
 800b16a:	4649      	mov	r1, r9
 800b16c:	4458      	add	r0, fp
 800b16e:	f7ff fbb3 	bl	800a8d8 <memcpy.isra.0>
 800b172:	f240 6304 	movw	r3, #1540	; 0x604
 800b176:	fb03 b306 	mla	r3, r3, r6, fp
 800b17a:	f8c3 7600 	str.w	r7, [r3, #1536]	; 0x600
 800b17e:	9b01      	ldr	r3, [sp, #4]
 800b180:	463a      	mov	r2, r7
 800b182:	4649      	mov	r1, r9
 800b184:	eb0b 0003 	add.w	r0, fp, r3
 800b188:	f7ff fba6 	bl	800a8d8 <memcpy.isra.0>
 800b18c:	e794      	b.n	800b0b8 <E131Bridge::HandleDmx()+0x12c>
 800b18e:	6fa3      	ldr	r3, [r4, #120]	; 0x78
 800b190:	2210      	movs	r2, #16
 800b192:	61ab      	str	r3, [r5, #24]
 800b194:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800b198:	f104 0192 	add.w	r1, r4, #146	; 0x92
 800b19c:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
 800b1a0:	f105 001c 	add.w	r0, r5, #28
 800b1a4:	f7ff fb98 	bl	800a8d8 <memcpy.isra.0>
 800b1a8:	68e3      	ldr	r3, [r4, #12]
 800b1aa:	4631      	mov	r1, r6
 800b1ac:	4620      	mov	r0, r4
 800b1ae:	616b      	str	r3, [r5, #20]
 800b1b0:	f7ff fdcb 	bl	800ad4a <E131Bridge::UpdateMergeStatus(unsigned int)>
 800b1b4:	463a      	mov	r2, r7
 800b1b6:	4649      	mov	r1, r9
 800b1b8:	4630      	mov	r0, r6
 800b1ba:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 800b1bc:	f7ff fbe8 	bl	800a990 <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>
 800b1c0:	e77a      	b.n	800b0b8 <E131Bridge::HandleDmx()+0x12c>
 800b1c2:	6fa3      	ldr	r3, [r4, #120]	; 0x78
 800b1c4:	2210      	movs	r2, #16
 800b1c6:	f845 3c04 	str.w	r3, [r5, #-4]
 800b1ca:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800b1ce:	4628      	mov	r0, r5
 800b1d0:	742b      	strb	r3, [r5, #16]
 800b1d2:	f104 0192 	add.w	r1, r4, #146	; 0x92
 800b1d6:	f7ff fb7f 	bl	800a8d8 <memcpy.isra.0>
 800b1da:	68e3      	ldr	r3, [r4, #12]
 800b1dc:	4631      	mov	r1, r6
 800b1de:	4620      	mov	r0, r4
 800b1e0:	f845 3c08 	str.w	r3, [r5, #-8]
 800b1e4:	f7ff fdb1 	bl	800ad4a <E131Bridge::UpdateMergeStatus(unsigned int)>
 800b1e8:	463a      	mov	r2, r7
 800b1ea:	4649      	mov	r1, r9
 800b1ec:	4630      	mov	r0, r6
 800b1ee:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 800b1f0:	f7ff fba5 	bl	800a93e <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>
 800b1f4:	e760      	b.n	800b0b8 <E131Bridge::HandleDmx()+0x12c>
 800b1f6:	f1b8 0f00 	cmp.w	r8, #0
 800b1fa:	d103      	bne.n	800b204 <E131Bridge::HandleDmx()+0x278>
 800b1fc:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800b200:	742b      	strb	r3, [r5, #16]
 800b202:	e7ea      	b.n	800b1da <E131Bridge::HandleDmx()+0x24e>
 800b204:	4820      	ldr	r0, [pc, #128]	; (800b288 <E131Bridge::HandleDmx()+0x2fc>)
 800b206:	b005      	add	sp, #20
 800b208:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b20c:	f7fd bf6c 	b.w	80090e8 <printf>
 800b210:	4642      	mov	r2, r8
 800b212:	4651      	mov	r1, sl
 800b214:	e773      	b.n	800b0fe <E131Bridge::HandleDmx()+0x172>
 800b216:	f04f 0300 	mov.w	r3, #0
 800b21a:	f884 34f7 	strb.w	r3, [r4, #1271]	; 0x4f7
 800b21e:	f894 34f6 	ldrb.w	r3, [r4, #1270]	; 0x4f6
 800b222:	2b00      	cmp	r3, #0
 800b224:	f47f af72 	bne.w	800b10c <E131Bridge::HandleDmx()+0x180>
 800b228:	f8d4 8004 	ldr.w	r8, [r4, #4]
 800b22c:	f7ff fb5e 	bl	800a8ec <lightset::Data::Get()>
 800b230:	f240 6304 	movw	r3, #1540	; 0x604
 800b234:	f8d8 2000 	ldr.w	r2, [r8]
 800b238:	fb03 0306 	mla	r3, r3, r6, r0
 800b23c:	f8d2 a010 	ldr.w	sl, [r2, #16]
 800b240:	9a01      	ldr	r2, [sp, #4]
 800b242:	f8d3 3600 	ldr.w	r3, [r3, #1536]	; 0x600
 800b246:	1882      	adds	r2, r0, r2
 800b248:	4631      	mov	r1, r6
 800b24a:	4640      	mov	r0, r8
 800b24c:	47d0      	blx	sl
 800b24e:	f895 3036 	ldrb.w	r3, [r5, #54]	; 0x36
 800b252:	2b00      	cmp	r3, #0
 800b254:	f47f af5f 	bne.w	800b116 <E131Bridge::HandleDmx()+0x18a>
 800b258:	6860      	ldr	r0, [r4, #4]
 800b25a:	4631      	mov	r1, r6
 800b25c:	6803      	ldr	r3, [r0, #0]
 800b25e:	689b      	ldr	r3, [r3, #8]
 800b260:	4798      	blx	r3
 800b262:	f04f 0301 	mov.w	r3, #1
 800b266:	f884 34f8 	strb.w	r3, [r4, #1272]	; 0x4f8
 800b26a:	f885 3036 	strb.w	r3, [r5, #54]	; 0x36
 800b26e:	e752      	b.n	800b116 <E131Bridge::HandleDmx()+0x18a>
 800b270:	f1bb 0f00 	cmp.w	fp, #0
 800b274:	d08b      	beq.n	800b18e <E131Bridge::HandleDmx()+0x202>
 800b276:	f1b8 0f00 	cmp.w	r8, #0
 800b27a:	d0c3      	beq.n	800b204 <E131Bridge::HandleDmx()+0x278>
 800b27c:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800b280:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
 800b284:	e790      	b.n	800b1a8 <E131Bridge::HandleDmx()+0x21c>
 800b286:	bf00      	nop
 800b288:	08015a66 	stmdaeq	r1, {r1, r2, r5, r6, r9, fp, ip, lr}

0800b28c <E131Bridge::IsValidRoot()>:
 800b28c:	b530      	push	{r4, r5, lr}
 800b28e:	4a0d      	ldr	r2, [pc, #52]	; (800b2c4 <E131Bridge::IsValidRoot()+0x38>)
 800b290:	f100 037f 	add.w	r3, r0, #127	; 0x7f
 800b294:	f100 018b 	add.w	r1, r0, #139	; 0x8b
 800b298:	4299      	cmp	r1, r3
 800b29a:	d109      	bne.n	800b2b0 <E131Bridge::IsValidRoot()+0x24>
 800b29c:	f8d0 008e 	ldr.w	r0, [r0, #142]	; 0x8e
 800b2a0:	f1b0 6f80 	cmp.w	r0, #67108864	; 0x4000000
 800b2a4:	d00c      	beq.n	800b2c0 <E131Bridge::IsValidRoot()+0x34>
 800b2a6:	f100 4378 	add.w	r3, r0, #4160749568	; 0xf8000000
 800b2aa:	4258      	negs	r0, r3
 800b2ac:	4158      	adcs	r0, r3
 800b2ae:	bd30      	pop	{r4, r5, pc}
 800b2b0:	f812 4b01 	ldrb.w	r4, [r2], #1
 800b2b4:	f813 5f01 	ldrb.w	r5, [r3, #1]!
 800b2b8:	42a5      	cmp	r5, r4
 800b2ba:	d0ed      	beq.n	800b298 <E131Bridge::IsValidRoot()+0xc>
 800b2bc:	2000      	movs	r0, #0
 800b2be:	e7f6      	b.n	800b2ae <E131Bridge::IsValidRoot()+0x22>
 800b2c0:	2001      	movs	r0, #1
 800b2c2:	e7f4      	b.n	800b2ae <E131Bridge::IsValidRoot()+0x22>
 800b2c4:	08015c15 	stmdaeq	r1, {r0, r2, r4, sl, fp, ip, lr}

0800b2c8 <E131Bridge::IsValidDataPacket()>:
 800b2c8:	f890 30f1 	ldrb.w	r3, [r0, #241]	; 0xf1
 800b2cc:	2b02      	cmp	r3, #2
 800b2ce:	d10d      	bne.n	800b2ec <E131Bridge::IsValidDataPacket()+0x24>
 800b2d0:	f890 30f2 	ldrb.w	r3, [r0, #242]	; 0xf2
 800b2d4:	2ba1      	cmp	r3, #161	; 0xa1
 800b2d6:	d109      	bne.n	800b2ec <E131Bridge::IsValidDataPacket()+0x24>
 800b2d8:	f8b0 30f3 	ldrh.w	r3, [r0, #243]	; 0xf3
 800b2dc:	b933      	cbnz	r3, 800b2ec <E131Bridge::IsValidDataPacket()+0x24>
 800b2de:	f8b0 00f5 	ldrh.w	r0, [r0, #245]	; 0xf5
 800b2e2:	f5a0 7380 	sub.w	r3, r0, #256	; 0x100
 800b2e6:	4258      	negs	r0, r3
 800b2e8:	4158      	adcs	r0, r3
 800b2ea:	4770      	bx	lr
 800b2ec:	2000      	movs	r0, #0
 800b2ee:	4770      	bx	lr

0800b2f0 <E131Bridge::Run()>:
 800b2f0:	b530      	push	{r4, r5, lr}
 800b2f2:	4601      	mov	r1, r0
 800b2f4:	4604      	mov	r4, r0
 800b2f6:	b085      	sub	sp, #20
 800b2f8:	f10d 030e 	add.w	r3, sp, #14
 800b2fc:	f811 0b7c 	ldrb.w	r0, [r1], #124
 800b300:	f44f 628f 	mov.w	r2, #1144	; 0x478
 800b304:	9300      	str	r3, [sp, #0]
 800b306:	f104 0378 	add.w	r3, r4, #120	; 0x78
 800b30a:	f004 f8a5 	bl	800f458 <udp_recv>
 800b30e:	4b3a      	ldr	r3, [pc, #232]	; (800b3f8 <E131Bridge::Run()+0x108>)
 800b310:	681d      	ldr	r5, [r3, #0]
 800b312:	60e5      	str	r5, [r4, #12]
 800b314:	2800      	cmp	r0, #0
 800b316:	d138      	bne.n	800b38a <E131Bridge::Run()+0x9a>
 800b318:	f894 350b 	ldrb.w	r3, [r4, #1291]	; 0x50b
 800b31c:	b16b      	cbz	r3, 800b33a <E131Bridge::Run()+0x4a>
 800b31e:	6923      	ldr	r3, [r4, #16]
 800b320:	1aed      	subs	r5, r5, r3
 800b322:	f640 13c3 	movw	r3, #2499	; 0x9c3
 800b326:	429d      	cmp	r5, r3
 800b328:	d928      	bls.n	800b37c <E131Bridge::Run()+0x8c>
 800b32a:	6863      	ldr	r3, [r4, #4]
 800b32c:	b9eb      	cbnz	r3, 800b36a <E131Bridge::Run()+0x7a>
 800b32e:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800b332:	f023 0302 	bic.w	r3, r3, #2
 800b336:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 800b33a:	6963      	ldr	r3, [r4, #20]
 800b33c:	b12b      	cbz	r3, 800b34a <E131Bridge::Run()+0x5a>
 800b33e:	4620      	mov	r0, r4
 800b340:	f000 f94c 	bl	800b5dc <E131Bridge::HandleDmxIn()>
 800b344:	4620      	mov	r0, r4
 800b346:	f000 f8c7 	bl	800b4d8 <E131Bridge::SendDiscoveryPacket()>
 800b34a:	7a23      	ldrb	r3, [r4, #8]
 800b34c:	b15b      	cbz	r3, 800b366 <E131Bridge::Run()+0x76>
 800b34e:	4b2b      	ldr	r3, [pc, #172]	; (800b3fc <E131Bridge::Run()+0x10c>)
 800b350:	6818      	ldr	r0, [r3, #0]
 800b352:	6843      	ldr	r3, [r0, #4]
 800b354:	2b04      	cmp	r3, #4
 800b356:	d006      	beq.n	800b366 <E131Bridge::Run()+0x76>
 800b358:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800b35c:	2b00      	cmp	r3, #0
 800b35e:	d049      	beq.n	800b3f4 <E131Bridge::Run()+0x104>
 800b360:	2103      	movs	r1, #3
 800b362:	f006 ffe3 	bl	801232c <LedBlink::SetMode(ledblink::Mode)>
 800b366:	b005      	add	sp, #20
 800b368:	bd30      	pop	{r4, r5, pc}
 800b36a:	f894 34f4 	ldrb.w	r3, [r4, #1268]	; 0x4f4
 800b36e:	2b00      	cmp	r3, #0
 800b370:	d1dd      	bne.n	800b32e <E131Bridge::Run()+0x3e>
 800b372:	2201      	movs	r2, #1
 800b374:	4620      	mov	r0, r4
 800b376:	4611      	mov	r1, r2
 800b378:	f7ff fd72 	bl	800ae60 <E131Bridge::SetNetworkDataLossCondition(bool, bool)>
 800b37c:	e9d4 3203 	ldrd	r3, r2, [r4, #12]
 800b380:	1a9b      	subs	r3, r3, r2
 800b382:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800b386:	d3d8      	bcc.n	800b33a <E131Bridge::Run()+0x4a>
 800b388:	e7d1      	b.n	800b32e <E131Bridge::Run()+0x3e>
 800b38a:	4620      	mov	r0, r4
 800b38c:	f7ff ff7e 	bl	800b28c <E131Bridge::IsValidRoot()>
 800b390:	2800      	cmp	r0, #0
 800b392:	d0e8      	beq.n	800b366 <E131Bridge::Run()+0x76>
 800b394:	2300      	movs	r3, #0
 800b396:	f884 34f4 	strb.w	r3, [r4, #1268]	; 0x4f4
 800b39a:	f894 34f6 	ldrb.w	r3, [r4, #1270]	; 0x4f6
 800b39e:	6125      	str	r5, [r4, #16]
 800b3a0:	b15b      	cbz	r3, 800b3ba <E131Bridge::Run()+0xca>
 800b3a2:	f894 34f7 	ldrb.w	r3, [r4, #1271]	; 0x4f7
 800b3a6:	b943      	cbnz	r3, 800b3ba <E131Bridge::Run()+0xca>
 800b3a8:	f8d4 24fc 	ldr.w	r2, [r4, #1276]	; 0x4fc
 800b3ac:	1aad      	subs	r5, r5, r2
 800b3ae:	f640 12c3 	movw	r2, #2499	; 0x9c3
 800b3b2:	4295      	cmp	r5, r2
 800b3b4:	bf88      	it	hi
 800b3b6:	f884 34f6 	strbhi.w	r3, [r4, #1270]	; 0x4f6
 800b3ba:	6863      	ldr	r3, [r4, #4]
 800b3bc:	2b00      	cmp	r3, #0
 800b3be:	d0bc      	beq.n	800b33a <E131Bridge::Run()+0x4a>
 800b3c0:	f8d4 308e 	ldr.w	r3, [r4, #142]	; 0x8e
 800b3c4:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 800b3c8:	ba1a      	rev	r2, r3
 800b3ca:	d108      	bne.n	800b3de <E131Bridge::Run()+0xee>
 800b3cc:	4620      	mov	r0, r4
 800b3ce:	f7ff ff7b 	bl	800b2c8 <E131Bridge::IsValidDataPacket()>
 800b3d2:	2800      	cmp	r0, #0
 800b3d4:	d0b1      	beq.n	800b33a <E131Bridge::Run()+0x4a>
 800b3d6:	4620      	mov	r0, r4
 800b3d8:	f7ff fdd8 	bl	800af8c <E131Bridge::HandleDmx()>
 800b3dc:	e7ad      	b.n	800b33a <E131Bridge::Run()+0x4a>
 800b3de:	2a08      	cmp	r2, #8
 800b3e0:	d1ab      	bne.n	800b33a <E131Bridge::Run()+0x4a>
 800b3e2:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800b3e6:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800b3ea:	d1a6      	bne.n	800b33a <E131Bridge::Run()+0x4a>
 800b3ec:	4620      	mov	r0, r4
 800b3ee:	f000 f973 	bl	800b6d8 <E131Bridge::HandleSynchronization()>
 800b3f2:	e7a2      	b.n	800b33a <E131Bridge::Run()+0x4a>
 800b3f4:	2102      	movs	r1, #2
 800b3f6:	e7b4      	b.n	800b362 <E131Bridge::Run()+0x72>
 800b3f8:	2000b87c 	andcs	fp, r0, ip, ror r8
 800b3fc:	2000b864 	andcs	fp, r0, r4, ror #16

0800b400 <E131Bridge::FillDiscoveryPacket()>:
 800b400:	2200      	movs	r2, #0
 800b402:	f890 350a 	ldrb.w	r3, [r0, #1290]	; 0x50a
 800b406:	b510      	push	{r4, lr}
 800b408:	333c      	adds	r3, #60	; 0x3c
 800b40a:	005b      	lsls	r3, r3, #1
 800b40c:	f8a0 3504 	strh.w	r3, [r0, #1284]	; 0x504
 800b410:	69c3      	ldr	r3, [r0, #28]
 800b412:	f503 618f 	add.w	r1, r3, #1144	; 0x478
 800b416:	428b      	cmp	r3, r1
 800b418:	d14a      	bne.n	800b4b0 <E131Bridge::FillDiscoveryPacket()+0xb0>
 800b41a:	69c3      	ldr	r3, [r0, #28]
 800b41c:	492d      	ldr	r1, [pc, #180]	; (800b4d4 <E131Bridge::FillDiscoveryPacket()+0xd4>)
 800b41e:	701a      	strb	r2, [r3, #0]
 800b420:	2210      	movs	r2, #16
 800b422:	705a      	strb	r2, [r3, #1]
 800b424:	1cda      	adds	r2, r3, #3
 800b426:	330f      	adds	r3, #15
 800b428:	4293      	cmp	r3, r2
 800b42a:	d144      	bne.n	800b4b6 <E131Bridge::FillDiscoveryPacket()+0xb6>
 800b42c:	f890 250a 	ldrb.w	r2, [r0, #1290]	; 0x50a
 800b430:	69c3      	ldr	r3, [r0, #28]
 800b432:	3234      	adds	r2, #52	; 0x34
 800b434:	0052      	lsls	r2, r2, #1
 800b436:	f442 42e0 	orr.w	r2, r2, #28672	; 0x7000
 800b43a:	ba52      	rev16	r2, r2
 800b43c:	821a      	strh	r2, [r3, #16]
 800b43e:	2200      	movs	r2, #0
 800b440:	749a      	strb	r2, [r3, #18]
 800b442:	74da      	strb	r2, [r3, #19]
 800b444:	751a      	strb	r2, [r3, #20]
 800b446:	2208      	movs	r2, #8
 800b448:	f100 0124 	add.w	r1, r0, #36	; 0x24
 800b44c:	f803 2f15 	strb.w	r2, [r3, #21]!
 800b450:	f100 0234 	add.w	r2, r0, #52	; 0x34
 800b454:	4291      	cmp	r1, r2
 800b456:	d133      	bne.n	800b4c0 <E131Bridge::FillDiscoveryPacket()+0xc0>
 800b458:	f890 250a 	ldrb.w	r2, [r0, #1290]	; 0x50a
 800b45c:	69c3      	ldr	r3, [r0, #28]
 800b45e:	3229      	adds	r2, #41	; 0x29
 800b460:	0052      	lsls	r2, r2, #1
 800b462:	f442 42e0 	orr.w	r2, r2, #28672	; 0x7000
 800b466:	ba52      	rev16	r2, r2
 800b468:	84da      	strh	r2, [r3, #38]	; 0x26
 800b46a:	2200      	movs	r2, #0
 800b46c:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 800b470:	f883 2029 	strb.w	r2, [r3, #41]	; 0x29
 800b474:	f883 202a 	strb.w	r2, [r3, #42]	; 0x2a
 800b478:	2202      	movs	r2, #2
 800b47a:	f803 2f2b 	strb.w	r2, [r3, #43]!
 800b47e:	f100 0274 	add.w	r2, r0, #116	; 0x74
 800b482:	4291      	cmp	r1, r2
 800b484:	d121      	bne.n	800b4ca <E131Bridge::FillDiscoveryPacket()+0xca>
 800b486:	f890 350a 	ldrb.w	r3, [r0, #1290]	; 0x50a
 800b48a:	69c2      	ldr	r2, [r0, #28]
 800b48c:	3304      	adds	r3, #4
 800b48e:	005b      	lsls	r3, r3, #1
 800b490:	f443 43e0 	orr.w	r3, r3, #28672	; 0x7000
 800b494:	ba5b      	rev16	r3, r3
 800b496:	f8a2 3070 	strh.w	r3, [r2, #112]	; 0x70
 800b49a:	2300      	movs	r3, #0
 800b49c:	f882 3072 	strb.w	r3, [r2, #114]	; 0x72
 800b4a0:	f882 3073 	strb.w	r3, [r2, #115]	; 0x73
 800b4a4:	f882 3074 	strb.w	r3, [r2, #116]	; 0x74
 800b4a8:	2301      	movs	r3, #1
 800b4aa:	f882 3075 	strb.w	r3, [r2, #117]	; 0x75
 800b4ae:	bd10      	pop	{r4, pc}
 800b4b0:	f803 2b01 	strb.w	r2, [r3], #1
 800b4b4:	e7af      	b.n	800b416 <E131Bridge::FillDiscoveryPacket()+0x16>
 800b4b6:	f811 4b01 	ldrb.w	r4, [r1], #1
 800b4ba:	f802 4f01 	strb.w	r4, [r2, #1]!
 800b4be:	e7b3      	b.n	800b428 <E131Bridge::FillDiscoveryPacket()+0x28>
 800b4c0:	f811 4b01 	ldrb.w	r4, [r1], #1
 800b4c4:	f803 4f01 	strb.w	r4, [r3, #1]!
 800b4c8:	e7c4      	b.n	800b454 <E131Bridge::FillDiscoveryPacket()+0x54>
 800b4ca:	f811 4b01 	ldrb.w	r4, [r1], #1
 800b4ce:	f803 4f01 	strb.w	r4, [r3, #1]!
 800b4d2:	e7d6      	b.n	800b482 <E131Bridge::FillDiscoveryPacket()+0x82>
 800b4d4:	08015c15 	stmdaeq	r1, {r0, r2, r4, sl, fp, ip, lr}

0800b4d8 <E131Bridge::SendDiscoveryPacket()>:
 800b4d8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800b4da:	f242 710f 	movw	r1, #9999	; 0x270f
 800b4de:	68c2      	ldr	r2, [r0, #12]
 800b4e0:	f8d0 3500 	ldr.w	r3, [r0, #1280]	; 0x500
 800b4e4:	4604      	mov	r4, r0
 800b4e6:	1ad3      	subs	r3, r2, r3
 800b4e8:	428b      	cmp	r3, r1
 800b4ea:	d924      	bls.n	800b536 <E131Bridge::SendDiscoveryPacket()+0x5e>
 800b4ec:	f890 350a 	ldrb.w	r3, [r0, #1290]	; 0x50a
 800b4f0:	f8c0 2500 	str.w	r2, [r0, #1280]	; 0x500
 800b4f4:	b1ab      	cbz	r3, 800b522 <E131Bridge::SendDiscoveryPacket()+0x4a>
 800b4f6:	2500      	movs	r5, #0
 800b4f8:	462e      	mov	r6, r5
 800b4fa:	2300      	movs	r3, #0
 800b4fc:	4629      	mov	r1, r5
 800b4fe:	4620      	mov	r0, r4
 800b500:	f10d 020e 	add.w	r2, sp, #14
 800b504:	f7ff fc0a 	bl	800ad1c <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 800b508:	b140      	cbz	r0, 800b51c <E131Bridge::SendDiscoveryPacket()+0x44>
 800b50a:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800b50e:	69e2      	ldr	r2, [r4, #28]
 800b510:	f106 013c 	add.w	r1, r6, #60	; 0x3c
 800b514:	ba5b      	rev16	r3, r3
 800b516:	f822 3011 	strh.w	r3, [r2, r1, lsl #1]
 800b51a:	3601      	adds	r6, #1
 800b51c:	3501      	adds	r5, #1
 800b51e:	2d04      	cmp	r5, #4
 800b520:	d1eb      	bne.n	800b4fa <E131Bridge::SendDiscoveryPacket()+0x22>
 800b522:	f44f 53ae 	mov.w	r3, #5568	; 0x15c0
 800b526:	f8b4 2504 	ldrh.w	r2, [r4, #1284]	; 0x504
 800b52a:	9300      	str	r3, [sp, #0]
 800b52c:	69e1      	ldr	r1, [r4, #28]
 800b52e:	6a23      	ldr	r3, [r4, #32]
 800b530:	7820      	ldrb	r0, [r4, #0]
 800b532:	f003 ffed 	bl	800f510 <udp_send>
 800b536:	b004      	add	sp, #16
 800b538:	bd70      	pop	{r4, r5, r6, pc}

0800b53a <memcpy.isra.0>:
 800b53a:	3801      	subs	r0, #1
 800b53c:	440a      	add	r2, r1
 800b53e:	4291      	cmp	r1, r2
 800b540:	d100      	bne.n	800b544 <memcpy.isra.0+0xa>
 800b542:	4770      	bx	lr
 800b544:	f811 3b01 	ldrb.w	r3, [r1], #1
 800b548:	f800 3f01 	strb.w	r3, [r0, #1]!
 800b54c:	e7f7      	b.n	800b53e <memcpy.isra.0+0x4>
	...

0800b550 <E131Bridge::FillDataPacket()>:
 800b550:	b570      	push	{r4, r5, r6, lr}
 800b552:	2400      	movs	r4, #0
 800b554:	2610      	movs	r6, #16
 800b556:	4605      	mov	r5, r0
 800b558:	6980      	ldr	r0, [r0, #24]
 800b55a:	220c      	movs	r2, #12
 800b55c:	7046      	strb	r6, [r0, #1]
 800b55e:	7004      	strb	r4, [r0, #0]
 800b560:	7084      	strb	r4, [r0, #2]
 800b562:	70c4      	strb	r4, [r0, #3]
 800b564:	491c      	ldr	r1, [pc, #112]	; (800b5d8 <E131Bridge::FillDataPacket()+0x88>)
 800b566:	3004      	adds	r0, #4
 800b568:	f7ff ffe7 	bl	800b53a <memcpy.isra.0>
 800b56c:	2304      	movs	r3, #4
 800b56e:	4632      	mov	r2, r6
 800b570:	2602      	movs	r6, #2
 800b572:	69a8      	ldr	r0, [r5, #24]
 800b574:	f105 0124 	add.w	r1, r5, #36	; 0x24
 800b578:	7543      	strb	r3, [r0, #21]
 800b57a:	7484      	strb	r4, [r0, #18]
 800b57c:	74c4      	strb	r4, [r0, #19]
 800b57e:	7504      	strb	r4, [r0, #20]
 800b580:	3016      	adds	r0, #22
 800b582:	f7ff ffda 	bl	800b53a <memcpy.isra.0>
 800b586:	69a8      	ldr	r0, [r5, #24]
 800b588:	2240      	movs	r2, #64	; 0x40
 800b58a:	f880 4028 	strb.w	r4, [r0, #40]	; 0x28
 800b58e:	f880 4029 	strb.w	r4, [r0, #41]	; 0x29
 800b592:	f880 402a 	strb.w	r4, [r0, #42]	; 0x2a
 800b596:	f880 602b 	strb.w	r6, [r0, #43]	; 0x2b
 800b59a:	f105 0134 	add.w	r1, r5, #52	; 0x34
 800b59e:	302c      	adds	r0, #44	; 0x2c
 800b5a0:	f7ff ffcb 	bl	800b53a <memcpy.isra.0>
 800b5a4:	22a1      	movs	r2, #161	; 0xa1
 800b5a6:	69ab      	ldr	r3, [r5, #24]
 800b5a8:	f883 4070 	strb.w	r4, [r3, #112]	; 0x70
 800b5ac:	f883 406d 	strb.w	r4, [r3, #109]	; 0x6d
 800b5b0:	f883 406e 	strb.w	r4, [r3, #110]	; 0x6e
 800b5b4:	69ab      	ldr	r3, [r5, #24]
 800b5b6:	f883 6075 	strb.w	r6, [r3, #117]	; 0x75
 800b5ba:	69ab      	ldr	r3, [r5, #24]
 800b5bc:	f883 2076 	strb.w	r2, [r3, #118]	; 0x76
 800b5c0:	2201      	movs	r2, #1
 800b5c2:	69ab      	ldr	r3, [r5, #24]
 800b5c4:	f883 4077 	strb.w	r4, [r3, #119]	; 0x77
 800b5c8:	f883 4078 	strb.w	r4, [r3, #120]	; 0x78
 800b5cc:	f883 4079 	strb.w	r4, [r3, #121]	; 0x79
 800b5d0:	f883 207a 	strb.w	r2, [r3, #122]	; 0x7a
 800b5d4:	bd70      	pop	{r4, r5, r6, pc}
 800b5d6:	bf00      	nop
 800b5d8:	08015c15 	stmdaeq	r1, {r0, r2, r4, sl, fp, ip, lr}

0800b5dc <E131Bridge::HandleDmxIn()>:
 800b5dc:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800b5e0:	4604      	mov	r4, r0
 800b5e2:	4605      	mov	r5, r0
 800b5e4:	2600      	movs	r6, #0
 800b5e6:	4f3b      	ldr	r7, [pc, #236]	; (800b6d4 <E131Bridge::HandleDmxIn()+0xf8>)
 800b5e8:	f895 3626 	ldrb.w	r3, [r5, #1574]	; 0x626
 800b5ec:	2b00      	cmp	r3, #0
 800b5ee:	d058      	beq.n	800b6a2 <E131Bridge::HandleDmxIn()+0xc6>
 800b5f0:	6960      	ldr	r0, [r4, #20]
 800b5f2:	4631      	mov	r1, r6
 800b5f4:	6803      	ldr	r3, [r0, #0]
 800b5f6:	aa02      	add	r2, sp, #8
 800b5f8:	f8d3 8010 	ldr.w	r8, [r3, #16]
 800b5fc:	ab03      	add	r3, sp, #12
 800b5fe:	47c0      	blx	r8
 800b600:	4601      	mov	r1, r0
 800b602:	2800      	cmp	r0, #0
 800b604:	d055      	beq.n	800b6b2 <E131Bridge::HandleDmxIn()+0xd6>
 800b606:	9a02      	ldr	r2, [sp, #8]
 800b608:	69a0      	ldr	r0, [r4, #24]
 800b60a:	b293      	uxth	r3, r2
 800b60c:	f103 0c6d 	add.w	ip, r3, #109	; 0x6d
 800b610:	f44c 4ce0 	orr.w	ip, ip, #28672	; 0x7000
 800b614:	fa9c fc9c 	rev16.w	ip, ip
 800b618:	f8a0 c010 	strh.w	ip, [r0, #16]
 800b61c:	f103 0c57 	add.w	ip, r3, #87	; 0x57
 800b620:	f44c 4ce0 	orr.w	ip, ip, #28672	; 0x7000
 800b624:	fa9c fc9c 	rev16.w	ip, ip
 800b628:	f8a0 c026 	strh.w	ip, [r0, #38]	; 0x26
 800b62c:	f895 c62d 	ldrb.w	ip, [r5, #1581]	; 0x62d
 800b630:	330a      	adds	r3, #10
 800b632:	f880 c06c 	strb.w	ip, [r0, #108]	; 0x6c
 800b636:	f895 c62c 	ldrb.w	ip, [r5, #1580]	; 0x62c
 800b63a:	f443 43e0 	orr.w	r3, r3, #28672	; 0x7000
 800b63e:	f10c 0001 	add.w	r0, ip, #1
 800b642:	f885 062c 	strb.w	r0, [r5, #1580]	; 0x62c
 800b646:	69a0      	ldr	r0, [r4, #24]
 800b648:	ba5b      	rev16	r3, r3
 800b64a:	f880 c06f 	strb.w	ip, [r0, #111]	; 0x6f
 800b64e:	f8b5 c624 	ldrh.w	ip, [r5, #1572]	; 0x624
 800b652:	69a0      	ldr	r0, [r4, #24]
 800b654:	fa9c fc9c 	rev16.w	ip, ip
 800b658:	f8a0 c071 	strh.w	ip, [r0, #113]	; 0x71
 800b65c:	f8a0 3073 	strh.w	r3, [r0, #115]	; 0x73
 800b660:	307d      	adds	r0, #125	; 0x7d
 800b662:	f7ff ff6a 	bl	800b53a <memcpy.isra.0>
 800b666:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800b66a:	69a1      	ldr	r1, [r4, #24]
 800b66c:	ba53      	rev16	r3, r2
 800b66e:	f8a1 307b 	strh.w	r3, [r1, #123]	; 0x7b
 800b672:	f44f 53ae 	mov.w	r3, #5568	; 0x15c0
 800b676:	327d      	adds	r2, #125	; 0x7d
 800b678:	9300      	str	r3, [sp, #0]
 800b67a:	f8d5 3628 	ldr.w	r3, [r5, #1576]	; 0x628
 800b67e:	b292      	uxth	r2, r2
 800b680:	7820      	ldrb	r0, [r4, #0]
 800b682:	f003 ff45 	bl	800f510 <udp_send>
 800b686:	2301      	movs	r3, #1
 800b688:	683a      	ldr	r2, [r7, #0]
 800b68a:	40b3      	lsls	r3, r6
 800b68c:	ea33 0102 	bics.w	r1, r3, r2
 800b690:	d007      	beq.n	800b6a2 <E131Bridge::HandleDmxIn()+0xc6>
 800b692:	4313      	orrs	r3, r2
 800b694:	603b      	str	r3, [r7, #0]
 800b696:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800b69a:	f043 0301 	orr.w	r3, r3, #1
 800b69e:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 800b6a2:	3601      	adds	r6, #1
 800b6a4:	2e04      	cmp	r6, #4
 800b6a6:	f105 050c 	add.w	r5, r5, #12
 800b6aa:	d19d      	bne.n	800b5e8 <E131Bridge::HandleDmxIn()+0xc>
 800b6ac:	b004      	add	sp, #16
 800b6ae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b6b2:	9b03      	ldr	r3, [sp, #12]
 800b6b4:	2b00      	cmp	r3, #0
 800b6b6:	d1f4      	bne.n	800b6a2 <E131Bridge::HandleDmxIn()+0xc6>
 800b6b8:	2201      	movs	r2, #1
 800b6ba:	683b      	ldr	r3, [r7, #0]
 800b6bc:	40b2      	lsls	r2, r6
 800b6be:	ea23 0302 	bic.w	r3, r3, r2
 800b6c2:	603b      	str	r3, [r7, #0]
 800b6c4:	2b00      	cmp	r3, #0
 800b6c6:	d1ec      	bne.n	800b6a2 <E131Bridge::HandleDmxIn()+0xc6>
 800b6c8:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800b6cc:	f023 0301 	bic.w	r3, r3, #1
 800b6d0:	e7e5      	b.n	800b69e <E131Bridge::HandleDmxIn()+0xc2>
 800b6d2:	bf00      	nop
 800b6d4:	20001ee4 	andcs	r1, r0, r4, ror #29

0800b6d8 <E131Bridge::HandleSynchronization()>:
 800b6d8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b6dc:	f8b0 30a9 	ldrh.w	r3, [r0, #169]	; 0xa9
 800b6e0:	f8b0 2506 	ldrh.w	r2, [r0, #1286]	; 0x506
 800b6e4:	ba5b      	rev16	r3, r3
 800b6e6:	b29b      	uxth	r3, r3
 800b6e8:	429a      	cmp	r2, r3
 800b6ea:	4604      	mov	r4, r0
 800b6ec:	d00a      	beq.n	800b704 <E131Bridge::HandleSynchronization()+0x2c>
 800b6ee:	f8b0 2508 	ldrh.w	r2, [r0, #1288]	; 0x508
 800b6f2:	429a      	cmp	r2, r3
 800b6f4:	d006      	beq.n	800b704 <E131Bridge::HandleSynchronization()+0x2c>
 800b6f6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b6fa:	4b23      	ldr	r3, [pc, #140]	; (800b788 <E131Bridge::HandleSynchronization()+0xb0>)
 800b6fc:	2102      	movs	r1, #2
 800b6fe:	6818      	ldr	r0, [r3, #0]
 800b700:	f006 be14 	b.w	801232c <LedBlink::SetMode(ledblink::Mode)>
 800b704:	2500      	movs	r5, #0
 800b706:	4627      	mov	r7, r4
 800b708:	46a9      	mov	r9, r5
 800b70a:	68e3      	ldr	r3, [r4, #12]
 800b70c:	4e1f      	ldr	r6, [pc, #124]	; (800b78c <E131Bridge::HandleSynchronization()+0xb4>)
 800b70e:	f8df 8080 	ldr.w	r8, [pc, #128]	; 800b790 <E131Bridge::HandleSynchronization()+0xb8>
 800b712:	f8c4 34fc 	str.w	r3, [r4, #1276]	; 0x4fc
 800b716:	f897 3516 	ldrb.w	r3, [r7, #1302]	; 0x516
 800b71a:	b323      	cbz	r3, 800b766 <E131Bridge::HandleSynchronization()+0x8e>
 800b71c:	f8d8 3000 	ldr.w	r3, [r8]
 800b720:	6860      	ldr	r0, [r4, #4]
 800b722:	07da      	lsls	r2, r3, #31
 800b724:	bf5c      	itt	pl
 800b726:	2301      	movpl	r3, #1
 800b728:	f8c8 3000 	strpl.w	r3, [r8]
 800b72c:	6803      	ldr	r3, [r0, #0]
 800b72e:	4629      	mov	r1, r5
 800b730:	f8d3 a010 	ldr.w	sl, [r3, #16]
 800b734:	f506 6280 	add.w	r2, r6, #1024	; 0x400
 800b738:	f8d6 3600 	ldr.w	r3, [r6, #1536]	; 0x600
 800b73c:	47d0      	blx	sl
 800b73e:	f897 3556 	ldrb.w	r3, [r7, #1366]	; 0x556
 800b742:	b93b      	cbnz	r3, 800b754 <E131Bridge::HandleSynchronization()+0x7c>
 800b744:	6860      	ldr	r0, [r4, #4]
 800b746:	4629      	mov	r1, r5
 800b748:	6803      	ldr	r3, [r0, #0]
 800b74a:	689b      	ldr	r3, [r3, #8]
 800b74c:	4798      	blx	r3
 800b74e:	2301      	movs	r3, #1
 800b750:	f887 3556 	strb.w	r3, [r7, #1366]	; 0x556
 800b754:	f8d8 3000 	ldr.w	r3, [r8]
 800b758:	f8c6 9600 	str.w	r9, [r6, #1536]	; 0x600
 800b75c:	07db      	lsls	r3, r3, #31
 800b75e:	bf5c      	itt	pl
 800b760:	2301      	movpl	r3, #1
 800b762:	f8c8 3000 	strpl.w	r3, [r8]
 800b766:	3501      	adds	r5, #1
 800b768:	2d04      	cmp	r5, #4
 800b76a:	f107 0744 	add.w	r7, r7, #68	; 0x44
 800b76e:	f206 6604 	addw	r6, r6, #1540	; 0x604
 800b772:	d1d0      	bne.n	800b716 <E131Bridge::HandleSynchronization()+0x3e>
 800b774:	6f60      	ldr	r0, [r4, #116]	; 0x74
 800b776:	b120      	cbz	r0, 800b782 <E131Bridge::HandleSynchronization()+0xaa>
 800b778:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b77c:	6803      	ldr	r3, [r0, #0]
 800b77e:	689b      	ldr	r3, [r3, #8]
 800b780:	4718      	bx	r3
 800b782:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800b786:	bf00      	nop
 800b788:	2000b864 	andcs	fp, r0, r4, ror #16
 800b78c:	200006d0 	ldrdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 800b790:	200006cc 	andcs	r0, r0, ip, asr #13

0800b794 <E131Bridge::Print()>:
 800b794:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b798:	2500      	movs	r5, #0
 800b79a:	4604      	mov	r4, r0
 800b79c:	b08c      	sub	sp, #48	; 0x30
 800b79e:	a902      	add	r1, sp, #8
 800b7a0:	3024      	adds	r0, #36	; 0x24
 800b7a2:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800b7a6:	f001 fe81 	bl	800d4ac <uuid_unparse>
 800b7aa:	482c      	ldr	r0, [pc, #176]	; (800b85c <E131Bridge::Print()+0xc8>)
 800b7ac:	f7fd fc9c 	bl	80090e8 <printf>
 800b7b0:	4b2b      	ldr	r3, [pc, #172]	; (800b860 <E131Bridge::Print()+0xcc>)
 800b7b2:	482c      	ldr	r0, [pc, #176]	; (800b864 <E131Bridge::Print()+0xd0>)
 800b7b4:	7819      	ldrb	r1, [r3, #0]
 800b7b6:	785a      	ldrb	r2, [r3, #1]
 800b7b8:	f7fd fc96 	bl	80090e8 <printf>
 800b7bc:	482a      	ldr	r0, [pc, #168]	; (800b868 <E131Bridge::Print()+0xd4>)
 800b7be:	a902      	add	r1, sp, #8
 800b7c0:	f7fd fc92 	bl	80090e8 <printf>
 800b7c4:	f894 350b 	ldrb.w	r3, [r4, #1291]	; 0x50b
 800b7c8:	b303      	cbz	r3, 800b80c <E131Bridge::Print()+0x78>
 800b7ca:	4828      	ldr	r0, [pc, #160]	; (800b86c <E131Bridge::Print()+0xd8>)
 800b7cc:	f7fd fc8c 	bl	80090e8 <printf>
 800b7d0:	4e27      	ldr	r6, [pc, #156]	; (800b870 <E131Bridge::Print()+0xdc>)
 800b7d2:	4f28      	ldr	r7, [pc, #160]	; (800b874 <E131Bridge::Print()+0xe0>)
 800b7d4:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 800b878 <E131Bridge::Print()+0xe4>
 800b7d8:	2301      	movs	r3, #1
 800b7da:	4629      	mov	r1, r5
 800b7dc:	4620      	mov	r0, r4
 800b7de:	f10d 0206 	add.w	r2, sp, #6
 800b7e2:	f7ff fa9b 	bl	800ad1c <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 800b7e6:	b170      	cbz	r0, 800b806 <E131Bridge::Print()+0x72>
 800b7e8:	2344      	movs	r3, #68	; 0x44
 800b7ea:	436b      	muls	r3, r5
 800b7ec:	f504 62aa 	add.w	r2, r4, #1360	; 0x550
 800b7f0:	58d3      	ldr	r3, [r2, r3]
 800b7f2:	4629      	mov	r1, r5
 800b7f4:	2b00      	cmp	r3, #0
 800b7f6:	bf0c      	ite	eq
 800b7f8:	4633      	moveq	r3, r6
 800b7fa:	463b      	movne	r3, r7
 800b7fc:	4640      	mov	r0, r8
 800b7fe:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800b802:	f7fd fc71 	bl	80090e8 <printf>
 800b806:	3501      	adds	r5, #1
 800b808:	2d04      	cmp	r5, #4
 800b80a:	d1e5      	bne.n	800b7d8 <E131Bridge::Print()+0x44>
 800b80c:	f894 350a 	ldrb.w	r3, [r4, #1290]	; 0x50a
 800b810:	b1d3      	cbz	r3, 800b848 <E131Bridge::Print()+0xb4>
 800b812:	481a      	ldr	r0, [pc, #104]	; (800b87c <E131Bridge::Print()+0xe8>)
 800b814:	f7fd fc68 	bl	80090e8 <printf>
 800b818:	2500      	movs	r5, #0
 800b81a:	4e19      	ldr	r6, [pc, #100]	; (800b880 <E131Bridge::Print()+0xec>)
 800b81c:	2300      	movs	r3, #0
 800b81e:	4629      	mov	r1, r5
 800b820:	4620      	mov	r0, r4
 800b822:	f10d 0206 	add.w	r2, sp, #6
 800b826:	f7ff fa79 	bl	800ad1c <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 800b82a:	b150      	cbz	r0, 800b842 <E131Bridge::Print()+0xae>
 800b82c:	230c      	movs	r3, #12
 800b82e:	436b      	muls	r3, r5
 800b830:	f204 622d 	addw	r2, r4, #1581	; 0x62d
 800b834:	5cd3      	ldrb	r3, [r2, r3]
 800b836:	4629      	mov	r1, r5
 800b838:	4630      	mov	r0, r6
 800b83a:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800b83e:	f7fd fc53 	bl	80090e8 <printf>
 800b842:	3501      	adds	r5, #1
 800b844:	2d04      	cmp	r5, #4
 800b846:	d1e9      	bne.n	800b81c <E131Bridge::Print()+0x88>
 800b848:	f894 34fa 	ldrb.w	r3, [r4, #1274]	; 0x4fa
 800b84c:	b113      	cbz	r3, 800b854 <E131Bridge::Print()+0xc0>
 800b84e:	480d      	ldr	r0, [pc, #52]	; (800b884 <E131Bridge::Print()+0xf0>)
 800b850:	f7fd fc4a 	bl	80090e8 <printf>
 800b854:	b00c      	add	sp, #48	; 0x30
 800b856:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b85a:	bf00      	nop
 800b85c:	08015a9b 	stmdaeq	r1, {r0, r1, r3, r4, r7, r9, fp, ip, lr}
 800b860:	08015c21 	stmdaeq	r1, {r0, r5, sl, fp, ip, lr}
 800b864:	08015aa3 	stmdaeq	r1, {r0, r1, r5, r7, r9, fp, ip, lr}
 800b868:	08015ab6 	stmdaeq	r1, {r1, r2, r4, r5, r7, r9, fp, ip, lr}
 800b86c:	08015ac6 	stmdaeq	r1, {r1, r2, r6, r7, r9, fp, ip, lr}
 800b870:	08015a93 	stmdaeq	r1, {r0, r1, r4, r7, r9, fp, ip, lr}
 800b874:	08015a97 	stmdaeq	r1, {r0, r1, r2, r4, r7, r9, fp, ip, lr}
 800b878:	08015acf 	stmdaeq	r1, {r0, r1, r2, r3, r6, r7, r9, fp, ip, lr}
 800b87c:	08015aee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, r9, fp, ip, lr}
 800b880:	08015af6 	stmdaeq	r1, {r1, r2, r4, r5, r6, r7, r9, fp, ip, lr}
 800b884:	08015b15 	stmdaeq	r1, {r0, r2, r4, r8, r9, fp, ip, lr}

0800b888 <memcmp>:
 800b888:	4402      	add	r2, r0
 800b88a:	4290      	cmp	r0, r2
 800b88c:	f101 31ff 	add.w	r1, r1, #4294967295	; 0xffffffff
 800b890:	d106      	bne.n	800b8a0 <memcmp+0x18>
 800b892:	2000      	movs	r0, #0
 800b894:	4770      	bx	lr
 800b896:	3001      	adds	r0, #1
 800b898:	4290      	cmp	r0, r2
 800b89a:	d102      	bne.n	800b8a2 <memcmp+0x1a>
 800b89c:	2000      	movs	r0, #0
 800b89e:	e006      	b.n	800b8ae <memcmp+0x26>
 800b8a0:	b510      	push	{r4, lr}
 800b8a2:	7803      	ldrb	r3, [r0, #0]
 800b8a4:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800b8a8:	42a3      	cmp	r3, r4
 800b8aa:	d0f4      	beq.n	800b896 <memcmp+0xe>
 800b8ac:	1b18      	subs	r0, r3, r4
 800b8ae:	bd10      	pop	{r4, pc}

0800b8b0 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>:
 800b8b0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b8b2:	88c6      	ldrh	r6, [r0, #6]
 800b8b4:	8885      	ldrh	r5, [r0, #4]
 800b8b6:	42ae      	cmp	r6, r5
 800b8b8:	d216      	bcs.n	800b8e8 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x38>
 800b8ba:	4604      	mov	r4, r0
 800b8bc:	6800      	ldr	r0, [r0, #0]
 800b8be:	1bad      	subs	r5, r5, r6
 800b8c0:	4430      	add	r0, r6
 800b8c2:	7a26      	ldrb	r6, [r4, #8]
 800b8c4:	b923      	cbnz	r3, 800b8d0 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x20>
 800b8c6:	b926      	cbnz	r6, 800b8d2 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x22>
 800b8c8:	9200      	str	r2, [sp, #0]
 800b8ca:	460b      	mov	r3, r1
 800b8cc:	4a09      	ldr	r2, [pc, #36]	; (800b8f4 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x44>)
 800b8ce:	e003      	b.n	800b8d8 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800b8d0:	b166      	cbz	r6, 800b8ec <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x3c>
 800b8d2:	460b      	mov	r3, r1
 800b8d4:	9200      	str	r2, [sp, #0]
 800b8d6:	4a08      	ldr	r2, [pc, #32]	; (800b8f8 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x48>)
 800b8d8:	4629      	mov	r1, r5
 800b8da:	f7fd fc2d 	bl	8009138 <snprintf>
 800b8de:	4285      	cmp	r5, r0
 800b8e0:	bfa2      	ittt	ge
 800b8e2:	88e3      	ldrhge	r3, [r4, #6]
 800b8e4:	181b      	addge	r3, r3, r0
 800b8e6:	80e3      	strhge	r3, [r4, #6]
 800b8e8:	b002      	add	sp, #8
 800b8ea:	bd70      	pop	{r4, r5, r6, pc}
 800b8ec:	9200      	str	r2, [sp, #0]
 800b8ee:	460b      	mov	r3, r1
 800b8f0:	4a02      	ldr	r2, [pc, #8]	; (800b8fc <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x4c>)
 800b8f2:	e7f1      	b.n	800b8d8 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800b8f4:	08014ce0 	stmdaeq	r1, {r5, r6, r7, sl, fp, lr}
 800b8f8:	08014cd5 	stmdaeq	r1, {r0, r2, r4, r6, r7, sl, fp, lr}
 800b8fc:	08014ce1 	stmdaeq	r1, {r0, r5, r6, r7, sl, fp, lr}

0800b900 <E131Params::E131Params(E131ParamsStore*)>:
 800b900:	b510      	push	{r4, lr}
 800b902:	2219      	movs	r2, #25
 800b904:	4604      	mov	r4, r0
 800b906:	f840 1b04 	str.w	r1, [r0], #4
 800b90a:	2100      	movs	r1, #0
 800b90c:	f006 fec4 	bl	8012698 <memset>
 800b910:	2201      	movs	r2, #1
 800b912:	72e2      	strb	r2, [r4, #11]
 800b914:	2202      	movs	r2, #2
 800b916:	f04f 3364 	mov.w	r3, #1684300900	; 0x64646464
 800b91a:	f8a4 200d 	strh.w	r2, [r4, #13]
 800b91e:	2203      	movs	r2, #3
 800b920:	f8c4 301f 	str.w	r3, [r4, #31]
 800b924:	2300      	movs	r3, #0
 800b926:	2155      	movs	r1, #85	; 0x55
 800b928:	f8a4 200f 	strh.w	r2, [r4, #15]
 800b92c:	2204      	movs	r2, #4
 800b92e:	7323      	strb	r3, [r4, #12]
 800b930:	77a3      	strb	r3, [r4, #30]
 800b932:	4b04      	ldr	r3, [pc, #16]	; (800b944 <E131Params::E131Params(E131ParamsStore*)+0x44>)
 800b934:	7761      	strb	r1, [r4, #29]
 800b936:	6819      	ldr	r1, [r3, #0]
 800b938:	f8a4 2011 	strh.w	r2, [r4, #17]
 800b93c:	b901      	cbnz	r1, 800b940 <E131Params::E131Params(E131ParamsStore*)+0x40>
 800b93e:	601a      	str	r2, [r3, #0]
 800b940:	4620      	mov	r0, r4
 800b942:	bd10      	pop	{r4, pc}
 800b944:	20001ee8 	andcs	r1, r0, r8, ror #29

0800b948 <E131Params::Load()>:
 800b948:	b508      	push	{r3, lr}
 800b94a:	2300      	movs	r3, #0
 800b94c:	4601      	mov	r1, r0
 800b94e:	6043      	str	r3, [r0, #4]
 800b950:	6800      	ldr	r0, [r0, #0]
 800b952:	b120      	cbz	r0, 800b95e <E131Params::Load()+0x16>
 800b954:	6803      	ldr	r3, [r0, #0]
 800b956:	3104      	adds	r1, #4
 800b958:	68db      	ldr	r3, [r3, #12]
 800b95a:	4798      	blx	r3
 800b95c:	2001      	movs	r0, #1
 800b95e:	bd08      	pop	{r3, pc}

0800b960 <E131Params::Load(char const*, unsigned int)>:
 800b960:	6803      	ldr	r3, [r0, #0]
 800b962:	b1d3      	cbz	r3, 800b99a <E131Params::Load(char const*, unsigned int)+0x3a>
 800b964:	2300      	movs	r3, #0
 800b966:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b968:	460d      	mov	r5, r1
 800b96a:	4616      	mov	r6, r2
 800b96c:	4604      	mov	r4, r0
 800b96e:	6043      	str	r3, [r0, #4]
 800b970:	4602      	mov	r2, r0
 800b972:	490a      	ldr	r1, [pc, #40]	; (800b99c <E131Params::Load(char const*, unsigned int)+0x3c>)
 800b974:	4668      	mov	r0, sp
 800b976:	f006 f88f 	bl	8011a98 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800b97a:	4632      	mov	r2, r6
 800b97c:	4629      	mov	r1, r5
 800b97e:	4668      	mov	r0, sp
 800b980:	f006 f88e 	bl	8011aa0 <ReadConfigFile::Read(char const*, unsigned int)>
 800b984:	4621      	mov	r1, r4
 800b986:	f851 0b04 	ldr.w	r0, [r1], #4
 800b98a:	6803      	ldr	r3, [r0, #0]
 800b98c:	689b      	ldr	r3, [r3, #8]
 800b98e:	4798      	blx	r3
 800b990:	4668      	mov	r0, sp
 800b992:	f006 f884 	bl	8011a9e <ReadConfigFile::~ReadConfigFile()>
 800b996:	b002      	add	sp, #8
 800b998:	bd70      	pop	{r4, r5, r6, pc}
 800b99a:	4770      	bx	lr
 800b99c:	0800bc35 	stmdaeq	r0, {r0, r2, r4, r5, sl, fp, ip, sp, pc}

0800b9a0 <E131Params::callbackFunction(char const*)>:
 800b9a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b9a4:	460e      	mov	r6, r1
 800b9a6:	2708      	movs	r7, #8
 800b9a8:	b087      	sub	sp, #28
 800b9aa:	4604      	mov	r4, r0
 800b9ac:	4997      	ldr	r1, [pc, #604]	; (800bc0c <E131Params::callbackFunction(char const*)+0x26c>)
 800b9ae:	4630      	mov	r0, r6
 800b9b0:	ab01      	add	r3, sp, #4
 800b9b2:	eb0d 0207 	add.w	r2, sp, r7
 800b9b6:	9701      	str	r7, [sp, #4]
 800b9b8:	f006 f8a6 	bl	8011b08 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800b9bc:	bb68      	cbnz	r0, 800ba1a <E131Params::callbackFunction(char const*)+0x7a>
 800b9be:	2204      	movs	r2, #4
 800b9c0:	4993      	ldr	r1, [pc, #588]	; (800bc10 <E131Params::callbackFunction(char const*)+0x270>)
 800b9c2:	eb0d 0007 	add.w	r0, sp, r7
 800b9c6:	f7ff ff5f 	bl	800b888 <memcmp>
 800b9ca:	6865      	ldr	r5, [r4, #4]
 800b9cc:	b1a0      	cbz	r0, 800b9f8 <E131Params::callbackFunction(char const*)+0x58>
 800b9ce:	2203      	movs	r2, #3
 800b9d0:	4990      	ldr	r1, [pc, #576]	; (800bc14 <E131Params::callbackFunction(char const*)+0x274>)
 800b9d2:	eb0d 0007 	add.w	r0, sp, r7
 800b9d6:	f7ff ff57 	bl	800b888 <memcmp>
 800b9da:	b1b0      	cbz	r0, 800ba0a <E131Params::callbackFunction(char const*)+0x6a>
 800b9dc:	2202      	movs	r2, #2
 800b9de:	498e      	ldr	r1, [pc, #568]	; (800bc18 <E131Params::callbackFunction(char const*)+0x278>)
 800b9e0:	eb0d 0007 	add.w	r0, sp, r7
 800b9e4:	f7ff ff50 	bl	800b888 <memcmp>
 800b9e8:	b198      	cbz	r0, 800ba12 <E131Params::callbackFunction(char const*)+0x72>
 800b9ea:	463a      	mov	r2, r7
 800b9ec:	498b      	ldr	r1, [pc, #556]	; (800bc1c <E131Params::callbackFunction(char const*)+0x27c>)
 800b9ee:	eb0d 0007 	add.w	r0, sp, r7
 800b9f2:	f7ff ff49 	bl	800b888 <memcmp>
 800b9f6:	b170      	cbz	r0, 800ba16 <E131Params::callbackFunction(char const*)+0x76>
 800b9f8:	2300      	movs	r3, #0
 800b9fa:	f025 0501 	bic.w	r5, r5, #1
 800b9fe:	6065      	str	r5, [r4, #4]
 800ba00:	f8a4 3009 	strh.w	r3, [r4, #9]
 800ba04:	b007      	add	sp, #28
 800ba06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ba0a:	2301      	movs	r3, #1
 800ba0c:	f045 0501 	orr.w	r5, r5, #1
 800ba10:	e7f5      	b.n	800b9fe <E131Params::callbackFunction(char const*)+0x5e>
 800ba12:	2302      	movs	r3, #2
 800ba14:	e7fa      	b.n	800ba0c <E131Params::callbackFunction(char const*)+0x6c>
 800ba16:	2303      	movs	r3, #3
 800ba18:	e7f8      	b.n	800ba0c <E131Params::callbackFunction(char const*)+0x6c>
 800ba1a:	2500      	movs	r5, #0
 800ba1c:	f8df 9200 	ldr.w	r9, [pc, #512]	; 800bc20 <E131Params::callbackFunction(char const*)+0x280>
 800ba20:	f8df 8200 	ldr.w	r8, [pc, #512]	; 800bc24 <E131Params::callbackFunction(char const*)+0x284>
 800ba24:	f8df a200 	ldr.w	sl, [pc, #512]	; 800bc28 <E131Params::callbackFunction(char const*)+0x288>
 800ba28:	f8df b200 	ldr.w	fp, [pc, #512]	; 800bc2c <E131Params::callbackFunction(char const*)+0x28c>
 800ba2c:	4649      	mov	r1, r9
 800ba2e:	4630      	mov	r0, r6
 800ba30:	f10d 0202 	add.w	r2, sp, #2
 800ba34:	f006 f8c2 	bl	8011bbc <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800ba38:	b9d8      	cbnz	r0, 800ba72 <E131Params::callbackFunction(char const*)+0xd2>
 800ba3a:	f64f 16fe 	movw	r6, #63998	; 0xf9fe
 800ba3e:	2310      	movs	r3, #16
 800ba40:	f8bd 0002 	ldrh.w	r0, [sp, #2]
 800ba44:	6861      	ldr	r1, [r4, #4]
 800ba46:	1e42      	subs	r2, r0, #1
 800ba48:	b292      	uxth	r2, r2
 800ba4a:	42b2      	cmp	r2, r6
 800ba4c:	fa03 f305 	lsl.w	r3, r3, r5
 800ba50:	ea4f 0245 	mov.w	r2, r5, lsl #1
 800ba54:	d907      	bls.n	800ba66 <E131Params::callbackFunction(char const*)+0xc6>
 800ba56:	3501      	adds	r5, #1
 800ba58:	4422      	add	r2, r4
 800ba5a:	ea21 0103 	bic.w	r1, r1, r3
 800ba5e:	f8a2 500b 	strh.w	r5, [r2, #11]
 800ba62:	6061      	str	r1, [r4, #4]
 800ba64:	e7ce      	b.n	800ba04 <E131Params::callbackFunction(char const*)+0x64>
 800ba66:	4422      	add	r2, r4
 800ba68:	f8a2 000b 	strh.w	r0, [r2, #11]
 800ba6c:	430b      	orrs	r3, r1
 800ba6e:	6063      	str	r3, [r4, #4]
 800ba70:	e7c8      	b.n	800ba04 <E131Params::callbackFunction(char const*)+0x64>
 800ba72:	2712      	movs	r7, #18
 800ba74:	2303      	movs	r3, #3
 800ba76:	436f      	muls	r7, r5
 800ba78:	9301      	str	r3, [sp, #4]
 800ba7a:	4630      	mov	r0, r6
 800ba7c:	ab01      	add	r3, sp, #4
 800ba7e:	aa02      	add	r2, sp, #8
 800ba80:	eb0a 0107 	add.w	r1, sl, r7
 800ba84:	f006 f840 	bl	8011b08 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800ba88:	bb00      	cbnz	r0, 800bacc <E131Params::callbackFunction(char const*)+0x12c>
 800ba8a:	f44f 7380 	mov.w	r3, #256	; 0x100
 800ba8e:	f89d 1008 	ldrb.w	r1, [sp, #8]
 800ba92:	40ab      	lsls	r3, r5
 800ba94:	f041 0120 	orr.w	r1, r1, #32
 800ba98:	296c      	cmp	r1, #108	; 0x6c
 800ba9a:	6862      	ldr	r2, [r4, #4]
 800ba9c:	4425      	add	r5, r4
 800ba9e:	d10f      	bne.n	800bac0 <E131Params::callbackFunction(char const*)+0x120>
 800baa0:	f89d 1009 	ldrb.w	r1, [sp, #9]
 800baa4:	f041 0120 	orr.w	r1, r1, #32
 800baa8:	2974      	cmp	r1, #116	; 0x74
 800baaa:	d109      	bne.n	800bac0 <E131Params::callbackFunction(char const*)+0x120>
 800baac:	f89d 100a 	ldrb.w	r1, [sp, #10]
 800bab0:	f041 0120 	orr.w	r1, r1, #32
 800bab4:	2970      	cmp	r1, #112	; 0x70
 800bab6:	d103      	bne.n	800bac0 <E131Params::callbackFunction(char const*)+0x120>
 800bab8:	2101      	movs	r1, #1
 800baba:	7529      	strb	r1, [r5, #20]
 800babc:	4313      	orrs	r3, r2
 800babe:	e7d6      	b.n	800ba6e <E131Params::callbackFunction(char const*)+0xce>
 800bac0:	2100      	movs	r1, #0
 800bac2:	ea22 0203 	bic.w	r2, r2, r3
 800bac6:	7529      	strb	r1, [r5, #20]
 800bac8:	6062      	str	r2, [r4, #4]
 800baca:	e79b      	b.n	800ba04 <E131Params::callbackFunction(char const*)+0x64>
 800bacc:	2307      	movs	r3, #7
 800bace:	4630      	mov	r0, r6
 800bad0:	9301      	str	r3, [sp, #4]
 800bad2:	aa02      	add	r2, sp, #8
 800bad4:	ab01      	add	r3, sp, #4
 800bad6:	eb0b 0107 	add.w	r1, fp, r7
 800bada:	f006 f815 	bl	8011b08 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800bade:	2800      	cmp	r0, #0
 800bae0:	d15e      	bne.n	800bba0 <E131Params::callbackFunction(char const*)+0x200>
 800bae2:	f89d 3008 	ldrb.w	r3, [sp, #8]
 800bae6:	f043 0320 	orr.w	r3, r3, #32
 800baea:	2b69      	cmp	r3, #105	; 0x69
 800baec:	d123      	bne.n	800bb36 <E131Params::callbackFunction(char const*)+0x196>
 800baee:	f89d 3009 	ldrb.w	r3, [sp, #9]
 800baf2:	f043 0320 	orr.w	r3, r3, #32
 800baf6:	2b6e      	cmp	r3, #110	; 0x6e
 800baf8:	d146      	bne.n	800bb88 <E131Params::callbackFunction(char const*)+0x1e8>
 800bafa:	f89d 300a 	ldrb.w	r3, [sp, #10]
 800bafe:	f043 0320 	orr.w	r3, r3, #32
 800bb02:	2b70      	cmp	r3, #112	; 0x70
 800bb04:	d140      	bne.n	800bb88 <E131Params::callbackFunction(char const*)+0x1e8>
 800bb06:	f89d 300b 	ldrb.w	r3, [sp, #11]
 800bb0a:	f043 0320 	orr.w	r3, r3, #32
 800bb0e:	2b75      	cmp	r3, #117	; 0x75
 800bb10:	d13a      	bne.n	800bb88 <E131Params::callbackFunction(char const*)+0x1e8>
 800bb12:	f89d 300c 	ldrb.w	r3, [sp, #12]
 800bb16:	f043 0320 	orr.w	r3, r3, #32
 800bb1a:	3b74      	subs	r3, #116	; 0x74
 800bb1c:	bf18      	it	ne
 800bb1e:	2301      	movne	r3, #1
 800bb20:	2103      	movs	r1, #3
 800bb22:	f8b4 201d 	ldrh.w	r2, [r4, #29]
 800bb26:	006d      	lsls	r5, r5, #1
 800bb28:	40a9      	lsls	r1, r5
 800bb2a:	ea22 0201 	bic.w	r2, r2, r1
 800bb2e:	bb6b      	cbnz	r3, 800bb8c <E131Params::callbackFunction(char const*)+0x1ec>
 800bb30:	f8a4 201d 	strh.w	r2, [r4, #29]
 800bb34:	e766      	b.n	800ba04 <E131Params::callbackFunction(char const*)+0x64>
 800bb36:	2b64      	cmp	r3, #100	; 0x64
 800bb38:	d126      	bne.n	800bb88 <E131Params::callbackFunction(char const*)+0x1e8>
 800bb3a:	f89d 3009 	ldrb.w	r3, [sp, #9]
 800bb3e:	f043 0320 	orr.w	r3, r3, #32
 800bb42:	2b69      	cmp	r3, #105	; 0x69
 800bb44:	d120      	bne.n	800bb88 <E131Params::callbackFunction(char const*)+0x1e8>
 800bb46:	f89d 300a 	ldrb.w	r3, [sp, #10]
 800bb4a:	f043 0320 	orr.w	r3, r3, #32
 800bb4e:	2b73      	cmp	r3, #115	; 0x73
 800bb50:	d11a      	bne.n	800bb88 <E131Params::callbackFunction(char const*)+0x1e8>
 800bb52:	f89d 300b 	ldrb.w	r3, [sp, #11]
 800bb56:	f043 0320 	orr.w	r3, r3, #32
 800bb5a:	2b61      	cmp	r3, #97	; 0x61
 800bb5c:	d114      	bne.n	800bb88 <E131Params::callbackFunction(char const*)+0x1e8>
 800bb5e:	f89d 300c 	ldrb.w	r3, [sp, #12]
 800bb62:	f043 0320 	orr.w	r3, r3, #32
 800bb66:	2b62      	cmp	r3, #98	; 0x62
 800bb68:	d10e      	bne.n	800bb88 <E131Params::callbackFunction(char const*)+0x1e8>
 800bb6a:	f89d 300d 	ldrb.w	r3, [sp, #13]
 800bb6e:	f043 0320 	orr.w	r3, r3, #32
 800bb72:	2b6c      	cmp	r3, #108	; 0x6c
 800bb74:	d108      	bne.n	800bb88 <E131Params::callbackFunction(char const*)+0x1e8>
 800bb76:	f89d 300e 	ldrb.w	r3, [sp, #14]
 800bb7a:	f043 0320 	orr.w	r3, r3, #32
 800bb7e:	2b65      	cmp	r3, #101	; 0x65
 800bb80:	bf14      	ite	ne
 800bb82:	2301      	movne	r3, #1
 800bb84:	2302      	moveq	r3, #2
 800bb86:	e7cb      	b.n	800bb20 <E131Params::callbackFunction(char const*)+0x180>
 800bb88:	2301      	movs	r3, #1
 800bb8a:	e7c9      	b.n	800bb20 <E131Params::callbackFunction(char const*)+0x180>
 800bb8c:	2b02      	cmp	r3, #2
 800bb8e:	bf15      	itete	ne
 800bb90:	2301      	movne	r3, #1
 800bb92:	40ab      	lsleq	r3, r5
 800bb94:	fa03 f505 	lslne.w	r5, r3, r5
 800bb98:	431a      	orreq	r2, r3
 800bb9a:	bf18      	it	ne
 800bb9c:	432a      	orrne	r2, r5
 800bb9e:	e7c7      	b.n	800bb30 <E131Params::callbackFunction(char const*)+0x190>
 800bba0:	4641      	mov	r1, r8
 800bba2:	4630      	mov	r0, r6
 800bba4:	f10d 0201 	add.w	r2, sp, #1
 800bba8:	f006 f826 	bl	8011bf8 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800bbac:	b998      	cbnz	r0, 800bbd6 <E131Params::callbackFunction(char const*)+0x236>
 800bbae:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 800bbb2:	f89d 1001 	ldrb.w	r1, [sp, #1]
 800bbb6:	40aa      	lsls	r2, r5
 800bbb8:	1e48      	subs	r0, r1, #1
 800bbba:	b2c0      	uxtb	r0, r0
 800bbbc:	28c7      	cmp	r0, #199	; 0xc7
 800bbbe:	6863      	ldr	r3, [r4, #4]
 800bbc0:	4425      	add	r5, r4
 800bbc2:	d803      	bhi.n	800bbcc <E131Params::callbackFunction(char const*)+0x22c>
 800bbc4:	2964      	cmp	r1, #100	; 0x64
 800bbc6:	d001      	beq.n	800bbcc <E131Params::callbackFunction(char const*)+0x22c>
 800bbc8:	77e9      	strb	r1, [r5, #31]
 800bbca:	e777      	b.n	800babc <E131Params::callbackFunction(char const*)+0x11c>
 800bbcc:	2164      	movs	r1, #100	; 0x64
 800bbce:	ea23 0302 	bic.w	r3, r3, r2
 800bbd2:	77e9      	strb	r1, [r5, #31]
 800bbd4:	e74b      	b.n	800ba6e <E131Params::callbackFunction(char const*)+0xce>
 800bbd6:	3501      	adds	r5, #1
 800bbd8:	2d04      	cmp	r5, #4
 800bbda:	f109 0910 	add.w	r9, r9, #16
 800bbde:	f108 0812 	add.w	r8, r8, #18
 800bbe2:	f47f af23 	bne.w	800ba2c <E131Params::callbackFunction(char const*)+0x8c>
 800bbe6:	4630      	mov	r0, r6
 800bbe8:	4911      	ldr	r1, [pc, #68]	; (800bc30 <E131Params::callbackFunction(char const*)+0x290>)
 800bbea:	f10d 0201 	add.w	r2, sp, #1
 800bbee:	f006 f803 	bl	8011bf8 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800bbf2:	2800      	cmp	r0, #0
 800bbf4:	f47f af06 	bne.w	800ba04 <E131Params::callbackFunction(char const*)+0x64>
 800bbf8:	f89d 2001 	ldrb.w	r2, [sp, #1]
 800bbfc:	6863      	ldr	r3, [r4, #4]
 800bbfe:	b112      	cbz	r2, 800bc06 <E131Params::callbackFunction(char const*)+0x266>
 800bc00:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800bc04:	e733      	b.n	800ba6e <E131Params::callbackFunction(char const*)+0xce>
 800bc06:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800bc0a:	e730      	b.n	800ba6e <E131Params::callbackFunction(char const*)+0xce>
 800bc0c:	080167e8 	stmdaeq	r1, {r3, r5, r6, r7, r8, r9, sl, sp, lr}
 800bc10:	08015b6d 	stmdaeq	r1, {r0, r2, r3, r5, r6, r8, r9, fp, ip, lr}
 800bc14:	08015b72 	stmdaeq	r1, {r1, r4, r5, r6, r8, r9, fp, ip, lr}
 800bc18:	08014e46 	stmdaeq	r1, {r1, r2, r6, r9, sl, fp, lr}
 800bc1c:	08015b76 	stmdaeq	r1, {r1, r2, r4, r5, r6, r8, r9, fp, ip, lr}
 800bc20:	08016738 	stmdaeq	r1, {r3, r4, r5, r8, r9, sl, sp, lr}
 800bc24:	08015bc4 	stmdaeq	r1, {r2, r6, r7, r8, r9, fp, ip, lr}
 800bc28:	08016778 	stmdaeq	r1, {r3, r4, r5, r6, r8, r9, sl, sp, lr}
 800bc2c:	080167fa 	stmdaeq	r1, {r1, r3, r4, r5, r6, r7, r8, r9, sl, sp, lr}
 800bc30:	080167d2 	stmdaeq	r1, {r1, r4, r6, r7, r8, r9, sl, sp, lr}

0800bc34 <E131Params::staticCallbackFunction(void*, char const*)>:
 800bc34:	f7ff beb4 	b.w	800b9a0 <E131Params::callbackFunction(char const*)>

0800bc38 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)>:
 800bc38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bc3c:	4604      	mov	r4, r0
 800bc3e:	4615      	mov	r5, r2
 800bc40:	461e      	mov	r6, r3
 800bc42:	b087      	sub	sp, #28
 800bc44:	3004      	adds	r0, #4
 800bc46:	2900      	cmp	r1, #0
 800bc48:	d05f      	beq.n	800bd0a <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xd2>
 800bc4a:	221f      	movs	r2, #31
 800bc4c:	f006 fd0d 	bl	801266a <memmove>
 800bc50:	4633      	mov	r3, r6
 800bc52:	462a      	mov	r2, r5
 800bc54:	4990      	ldr	r1, [pc, #576]	; (800be98 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x260>)
 800bc56:	a803      	add	r0, sp, #12
 800bc58:	f005 fe7e 	bl	8011958 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800bc5c:	2500      	movs	r5, #0
 800bc5e:	4f8f      	ldr	r7, [pc, #572]	; (800be9c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x264>)
 800bc60:	4e8f      	ldr	r6, [pc, #572]	; (800bea0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x268>)
 800bc62:	f8df 8240 	ldr.w	r8, [pc, #576]	; 800bea4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x26c>
 800bc66:	f8df 9240 	ldr.w	r9, [pc, #576]	; 800bea8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x270>
 800bc6a:	f8d8 2000 	ldr.w	r2, [r8]
 800bc6e:	6863      	ldr	r3, [r4, #4]
 800bc70:	42aa      	cmp	r2, r5
 800bc72:	d851      	bhi.n	800bd18 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xe0>
 800bc74:	f8b4 1009 	ldrh.w	r1, [r4, #9]
 800bc78:	4a8c      	ldr	r2, [pc, #560]	; (800beac <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x274>)
 800bc7a:	f003 0301 	and.w	r3, r3, #1
 800bc7e:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 800bc82:	a803      	add	r0, sp, #12
 800bc84:	498a      	ldr	r1, [pc, #552]	; (800beb0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x278>)
 800bc86:	f7ff fe13 	bl	800b8b0 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800bc8a:	498a      	ldr	r1, [pc, #552]	; (800beb4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x27c>)
 800bc8c:	a803      	add	r0, sp, #12
 800bc8e:	f005 fee9 	bl	8011a64 <PropertiesBuilder::AddComment(char const*)>
 800bc92:	2500      	movs	r5, #0
 800bc94:	f44f 7b80 	mov.w	fp, #256	; 0x100
 800bc98:	4e87      	ldr	r6, [pc, #540]	; (800beb8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x280>)
 800bc9a:	f8df 9220 	ldr.w	r9, [pc, #544]	; 800bebc <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x284>
 800bc9e:	f8df a220 	ldr.w	sl, [pc, #544]	; 800bec0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x288>
 800bca2:	f104 0713 	add.w	r7, r4, #19
 800bca6:	f8d8 3000 	ldr.w	r3, [r8]
 800bcaa:	42ab      	cmp	r3, r5
 800bcac:	d87f      	bhi.n	800bdae <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x176>
 800bcae:	4985      	ldr	r1, [pc, #532]	; (800bec4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x28c>)
 800bcb0:	a803      	add	r0, sp, #12
 800bcb2:	f005 fed7 	bl	8011a64 <PropertiesBuilder::AddComment(char const*)>
 800bcb6:	2700      	movs	r7, #0
 800bcb8:	4e83      	ldr	r6, [pc, #524]	; (800bec8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x290>)
 800bcba:	f8df a210 	ldr.w	sl, [pc, #528]	; 800becc <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x294>
 800bcbe:	f8df b210 	ldr.w	fp, [pc, #528]	; 800bed0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x298>
 800bcc2:	f104 091e 	add.w	r9, r4, #30
 800bcc6:	f8d8 3000 	ldr.w	r3, [r8]
 800bcca:	42bb      	cmp	r3, r7
 800bccc:	f200 8083 	bhi.w	800bdd6 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x19e>
 800bcd0:	4980      	ldr	r1, [pc, #512]	; (800bed4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x29c>)
 800bcd2:	a803      	add	r0, sp, #12
 800bcd4:	f005 fec6 	bl	8011a64 <PropertiesBuilder::AddComment(char const*)>
 800bcd8:	6863      	ldr	r3, [r4, #4]
 800bcda:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800bcde:	f8bd 4010 	ldrh.w	r4, [sp, #16]
 800bce2:	42a2      	cmp	r2, r4
 800bce4:	f080 80b8 	bcs.w	800be58 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x220>
 800bce8:	9803      	ldr	r0, [sp, #12]
 800bcea:	f413 5300 	ands.w	r3, r3, #8192	; 0x2000
 800bcee:	4410      	add	r0, r2
 800bcf0:	eba4 0402 	sub.w	r4, r4, r2
 800bcf4:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800bcf8:	f040 809d 	bne.w	800be36 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1fe>
 800bcfc:	2a00      	cmp	r2, #0
 800bcfe:	f040 809b 	bne.w	800be38 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x200>
 800bd02:	9200      	str	r2, [sp, #0]
 800bd04:	4b74      	ldr	r3, [pc, #464]	; (800bed8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x2a0>)
 800bd06:	4a72      	ldr	r2, [pc, #456]	; (800bed0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x298>)
 800bd08:	e09c      	b.n	800be44 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x20c>
 800bd0a:	6823      	ldr	r3, [r4, #0]
 800bd0c:	4601      	mov	r1, r0
 800bd0e:	681a      	ldr	r2, [r3, #0]
 800bd10:	4618      	mov	r0, r3
 800bd12:	68d2      	ldr	r2, [r2, #12]
 800bd14:	4790      	blx	r2
 800bd16:	e79b      	b.n	800bc50 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x18>
 800bd18:	f8bd c012 	ldrh.w	ip, [sp, #18]
 800bd1c:	f8bd b010 	ldrh.w	fp, [sp, #16]
 800bd20:	eb04 0245 	add.w	r2, r4, r5, lsl #1
 800bd24:	45dc      	cmp	ip, fp
 800bd26:	f8b2 200b 	ldrh.w	r2, [r2, #11]
 800bd2a:	ea4f 0a45 	mov.w	sl, r5, lsl #1
 800bd2e:	d221      	bcs.n	800bd74 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x13c>
 800bd30:	2110      	movs	r1, #16
 800bd32:	9803      	ldr	r0, [sp, #12]
 800bd34:	40a9      	lsls	r1, r5
 800bd36:	ea31 0303 	bics.w	r3, r1, r3
 800bd3a:	4460      	add	r0, ip
 800bd3c:	ebab 0b0c 	sub.w	fp, fp, ip
 800bd40:	f89d c014 	ldrb.w	ip, [sp, #20]
 800bd44:	d006      	beq.n	800bd54 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x11c>
 800bd46:	f1bc 0f00 	cmp.w	ip, #0
 800bd4a:	d106      	bne.n	800bd5a <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x122>
 800bd4c:	9200      	str	r2, [sp, #0]
 800bd4e:	4633      	mov	r3, r6
 800bd50:	4a5f      	ldr	r2, [pc, #380]	; (800bed0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x298>)
 800bd52:	e005      	b.n	800bd60 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x128>
 800bd54:	f1bc 0f00 	cmp.w	ip, #0
 800bd58:	d023      	beq.n	800bda2 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x16a>
 800bd5a:	9200      	str	r2, [sp, #0]
 800bd5c:	4633      	mov	r3, r6
 800bd5e:	464a      	mov	r2, r9
 800bd60:	4659      	mov	r1, fp
 800bd62:	f7fd f9e9 	bl	8009138 <snprintf>
 800bd66:	4583      	cmp	fp, r0
 800bd68:	bfa2      	ittt	ge
 800bd6a:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800bd6e:	18c0      	addge	r0, r0, r3
 800bd70:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800bd74:	f8b4 301d 	ldrh.w	r3, [r4, #29]
 800bd78:	fa23 f30a 	lsr.w	r3, r3, sl
 800bd7c:	f013 0303 	ands.w	r3, r3, #3
 800bd80:	d013      	beq.n	800bdaa <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x172>
 800bd82:	4a56      	ldr	r2, [pc, #344]	; (800bedc <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x2a4>)
 800bd84:	4956      	ldr	r1, [pc, #344]	; (800bee0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x2a8>)
 800bd86:	2b02      	cmp	r3, #2
 800bd88:	bf08      	it	eq
 800bd8a:	460a      	moveq	r2, r1
 800bd8c:	3b01      	subs	r3, #1
 800bd8e:	4639      	mov	r1, r7
 800bd90:	bf18      	it	ne
 800bd92:	2301      	movne	r3, #1
 800bd94:	a803      	add	r0, sp, #12
 800bd96:	f7ff fd8b 	bl	800b8b0 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800bd9a:	3501      	adds	r5, #1
 800bd9c:	3712      	adds	r7, #18
 800bd9e:	3610      	adds	r6, #16
 800bda0:	e763      	b.n	800bc6a <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x32>
 800bda2:	9200      	str	r2, [sp, #0]
 800bda4:	4633      	mov	r3, r6
 800bda6:	4a49      	ldr	r2, [pc, #292]	; (800becc <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x294>)
 800bda8:	e7da      	b.n	800bd60 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x128>
 800bdaa:	4a4e      	ldr	r2, [pc, #312]	; (800bee4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x2ac>)
 800bdac:	e7ee      	b.n	800bd8c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x154>
 800bdae:	6861      	ldr	r1, [r4, #4]
 800bdb0:	fa0b f305 	lsl.w	r3, fp, r5
 800bdb4:	f817 2f01 	ldrb.w	r2, [r7, #1]!
 800bdb8:	438b      	bics	r3, r1
 800bdba:	bf0c      	ite	eq
 800bdbc:	2301      	moveq	r3, #1
 800bdbe:	2300      	movne	r3, #0
 800bdc0:	4631      	mov	r1, r6
 800bdc2:	2a00      	cmp	r2, #0
 800bdc4:	bf0c      	ite	eq
 800bdc6:	464a      	moveq	r2, r9
 800bdc8:	4652      	movne	r2, sl
 800bdca:	a803      	add	r0, sp, #12
 800bdcc:	f7ff fd70 	bl	800b8b0 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800bdd0:	3501      	adds	r5, #1
 800bdd2:	3612      	adds	r6, #18
 800bdd4:	e767      	b.n	800bca6 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x6e>
 800bdd6:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 800bdda:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800bdde:	f819 3f01 	ldrb.w	r3, [r9, #1]!
 800bde2:	42a9      	cmp	r1, r5
 800bde4:	f8d4 c004 	ldr.w	ip, [r4, #4]
 800bde8:	d21e      	bcs.n	800be28 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1f0>
 800bdea:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 800bdee:	9803      	ldr	r0, [sp, #12]
 800bdf0:	40ba      	lsls	r2, r7
 800bdf2:	ea32 0c0c 	bics.w	ip, r2, ip
 800bdf6:	4408      	add	r0, r1
 800bdf8:	eba5 0501 	sub.w	r5, r5, r1
 800bdfc:	f89d 1014 	ldrb.w	r1, [sp, #20]
 800be00:	d004      	beq.n	800be0c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1d4>
 800be02:	b921      	cbnz	r1, 800be0e <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1d6>
 800be04:	9300      	str	r3, [sp, #0]
 800be06:	465a      	mov	r2, fp
 800be08:	4633      	mov	r3, r6
 800be0a:	e003      	b.n	800be14 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1dc>
 800be0c:	b179      	cbz	r1, 800be2e <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1f6>
 800be0e:	9300      	str	r3, [sp, #0]
 800be10:	4633      	mov	r3, r6
 800be12:	4a25      	ldr	r2, [pc, #148]	; (800bea8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x270>)
 800be14:	4629      	mov	r1, r5
 800be16:	f7fd f98f 	bl	8009138 <snprintf>
 800be1a:	4285      	cmp	r5, r0
 800be1c:	bfa2      	ittt	ge
 800be1e:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800be22:	18c0      	addge	r0, r0, r3
 800be24:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800be28:	3701      	adds	r7, #1
 800be2a:	3612      	adds	r6, #18
 800be2c:	e74b      	b.n	800bcc6 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x8e>
 800be2e:	9300      	str	r3, [sp, #0]
 800be30:	4652      	mov	r2, sl
 800be32:	4633      	mov	r3, r6
 800be34:	e7ee      	b.n	800be14 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1dc>
 800be36:	b34a      	cbz	r2, 800be8c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x254>
 800be38:	3b00      	subs	r3, #0
 800be3a:	bf18      	it	ne
 800be3c:	2301      	movne	r3, #1
 800be3e:	4a1a      	ldr	r2, [pc, #104]	; (800bea8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x270>)
 800be40:	9300      	str	r3, [sp, #0]
 800be42:	4b25      	ldr	r3, [pc, #148]	; (800bed8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x2a0>)
 800be44:	4621      	mov	r1, r4
 800be46:	f7fd f977 	bl	8009138 <snprintf>
 800be4a:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800be4e:	4284      	cmp	r4, r0
 800be50:	bfa4      	itt	ge
 800be52:	181b      	addge	r3, r3, r0
 800be54:	f8ad 3012 	strhge.w	r3, [sp, #18]
 800be58:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800be5c:	b17b      	cbz	r3, 800be7e <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x246>
 800be5e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800be62:	9b03      	ldr	r3, [sp, #12]
 800be64:	4413      	add	r3, r2
 800be66:	227d      	movs	r2, #125	; 0x7d
 800be68:	f803 2c01 	strb.w	r2, [r3, #-1]
 800be6c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800be70:	9903      	ldr	r1, [sp, #12]
 800be72:	54ca      	strb	r2, [r1, r3]
 800be74:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800be78:	3301      	adds	r3, #1
 800be7a:	f8ad 3012 	strh.w	r3, [sp, #18]
 800be7e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800be82:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800be84:	601a      	str	r2, [r3, #0]
 800be86:	b007      	add	sp, #28
 800be88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800be8c:	2301      	movs	r3, #1
 800be8e:	4a0f      	ldr	r2, [pc, #60]	; (800becc <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x294>)
 800be90:	9300      	str	r3, [sp, #0]
 800be92:	4b11      	ldr	r3, [pc, #68]	; (800bed8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x2a0>)
 800be94:	e7d6      	b.n	800be44 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x20c>
 800be96:	bf00      	nop
 800be98:	08015c0c 	stmdaeq	r1, {r2, r3, sl, fp, ip, lr}
 800be9c:	080167fa 	stmdaeq	r1, {r1, r3, r4, r5, r6, r7, r8, r9, sl, sp, lr}
 800bea0:	08016738 	stmdaeq	r1, {r3, r4, r5, r8, r9, sl, sp, lr}
 800bea4:	20001ee8 	andcs	r1, r0, r8, ror #29
 800bea8:	08014cc4 	stmdaeq	r1, {r2, r6, r7, sl, fp, lr}
 800beac:	08015bb4 	stmdaeq	r1, {r2, r4, r5, r7, r8, r9, fp, ip, lr}
 800beb0:	080167e8 	stmdaeq	r1, {r3, r5, r6, r7, r8, r9, sl, sp, lr}
 800beb4:	08015b9c 	stmdaeq	r1, {r2, r3, r4, r7, r8, r9, fp, ip, lr}
 800beb8:	08016778 	stmdaeq	r1, {r3, r4, r5, r6, r8, r9, sl, sp, lr}
 800bebc:	08015b98 	stmdaeq	r1, {r3, r4, r7, r8, r9, fp, ip, lr}
 800bec0:	08015b94 	stmdaeq	r1, {r2, r4, r7, r8, r9, fp, ip, lr}
 800bec4:	08015ba7 	stmdaeq	r1, {r0, r1, r2, r5, r7, r8, r9, fp, ip, lr}
 800bec8:	08015bc4 	stmdaeq	r1, {r2, r6, r7, r8, r9, fp, ip, lr}
 800becc:	08014cce 	stmdaeq	r1, {r1, r2, r3, r6, r7, sl, fp, lr}
 800bed0:	08014ccd 	stmdaeq	r1, {r0, r2, r3, r6, r7, sl, fp, lr}
 800bed4:	08014a8c 	stmdaeq	r1, {r2, r3, r7, r9, fp, lr}
 800bed8:	080167d2 	stmdaeq	r1, {r1, r4, r6, r7, r8, r9, sl, sp, lr}
 800bedc:	08015b85 	stmdaeq	r1, {r0, r2, r7, r8, r9, fp, ip, lr}
 800bee0:	08015b8c 	stmdaeq	r1, {r2, r3, r7, r8, r9, fp, ip, lr}
 800bee4:	08015b7f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r8, r9, fp, ip, lr}

0800bee8 <E131Params::Save(char*, unsigned int, unsigned int&)>:
 800bee8:	b513      	push	{r0, r1, r4, lr}
 800beea:	6804      	ldr	r4, [r0, #0]
 800beec:	b914      	cbnz	r4, 800bef4 <E131Params::Save(char*, unsigned int, unsigned int&)+0xc>
 800beee:	601c      	str	r4, [r3, #0]
 800bef0:	b002      	add	sp, #8
 800bef2:	bd10      	pop	{r4, pc}
 800bef4:	9300      	str	r3, [sp, #0]
 800bef6:	4613      	mov	r3, r2
 800bef8:	460a      	mov	r2, r1
 800befa:	2100      	movs	r1, #0
 800befc:	f7ff fe9c 	bl	800bc38 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)>
 800bf00:	e7f6      	b.n	800bef0 <E131Params::Save(char*, unsigned int, unsigned int&)+0x8>
	...

0800bf04 <E131Params::Set(unsigned int)>:
 800bf04:	1e4b      	subs	r3, r1, #1
 800bf06:	2b02      	cmp	r3, #2
 800bf08:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800bf0c:	d807      	bhi.n	800bf1e <E131Params::Set(unsigned int)+0x1a>
 800bf0e:	4a26      	ldr	r2, [pc, #152]	; (800bfa8 <E131Params::Set(unsigned int)+0xa4>)
 800bf10:	f1c1 0304 	rsb	r3, r1, #4
 800bf14:	6814      	ldr	r4, [r2, #0]
 800bf16:	42a3      	cmp	r3, r4
 800bf18:	bf94      	ite	ls
 800bf1a:	6013      	strls	r3, [r2, #0]
 800bf1c:	6014      	strhi	r4, [r2, #0]
 800bf1e:	6843      	ldr	r3, [r0, #4]
 800bf20:	b1eb      	cbz	r3, 800bf5e <E131Params::Set(unsigned int)+0x5a>
 800bf22:	4b22      	ldr	r3, [pc, #136]	; (800bfac <E131Params::Set(unsigned int)+0xa8>)
 800bf24:	2244      	movs	r2, #68	; 0x44
 800bf26:	681c      	ldr	r4, [r3, #0]
 800bf28:	4b1f      	ldr	r3, [pc, #124]	; (800bfa8 <E131Params::Set(unsigned int)+0xa4>)
 800bf2a:	f44f 7c80 	mov.w	ip, #256	; 0x100
 800bf2e:	681f      	ldr	r7, [r3, #0]
 800bf30:	f44f 3e80 	mov.w	lr, #65536	; 0x10000
 800bf34:	2300      	movs	r3, #0
 800bf36:	f04f 090c 	mov.w	r9, #12
 800bf3a:	fb02 4201 	mla	r2, r2, r1, r4
 800bf3e:	f100 0514 	add.w	r5, r0, #20
 800bf42:	f204 682d 	addw	r8, r4, #1581	; 0x62d
 800bf46:	429f      	cmp	r7, r3
 800bf48:	6846      	ldr	r6, [r0, #4]
 800bf4a:	d10a      	bne.n	800bf62 <E131Params::Set(unsigned int)+0x5e>
 800bf4c:	f8b0 3009 	ldrh.w	r3, [r0, #9]
 800bf50:	f8c4 3510 	str.w	r3, [r4, #1296]	; 0x510
 800bf54:	04b3      	lsls	r3, r6, #18
 800bf56:	bf44      	itt	mi
 800bf58:	2301      	movmi	r3, #1
 800bf5a:	f884 34f9 	strbmi.w	r3, [r4, #1273]	; 0x4f9
 800bf5e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800bf62:	eb03 0a01 	add.w	sl, r3, r1
 800bf66:	f1ba 0f03 	cmp.w	sl, #3
 800bf6a:	d8ef      	bhi.n	800bf4c <E131Params::Set(unsigned int)+0x48>
 800bf6c:	fa0c fa03 	lsl.w	sl, ip, r3
 800bf70:	ea3a 0a06 	bics.w	sl, sl, r6
 800bf74:	bf04      	itt	eq
 800bf76:	f895 a000 	ldrbeq.w	sl, [r5]
 800bf7a:	f8c2 a550 	streq.w	sl, [r2, #1360]	; 0x550
 800bf7e:	fa0e fa03 	lsl.w	sl, lr, r3
 800bf82:	ea3a 0a06 	bics.w	sl, sl, r6
 800bf86:	d10a      	bne.n	800bf9e <E131Params::Set(unsigned int)+0x9a>
 800bf88:	f895 a00b 	ldrb.w	sl, [r5, #11]
 800bf8c:	f10a 36ff 	add.w	r6, sl, #4294967295	; 0xffffffff
 800bf90:	b2f6      	uxtb	r6, r6
 800bf92:	2ec7      	cmp	r6, #199	; 0xc7
 800bf94:	bf9c      	itt	ls
 800bf96:	fb09 f603 	mulls.w	r6, r9, r3
 800bf9a:	f808 a006 	strbls.w	sl, [r8, r6]
 800bf9e:	3301      	adds	r3, #1
 800bfa0:	3501      	adds	r5, #1
 800bfa2:	3244      	adds	r2, #68	; 0x44
 800bfa4:	e7cf      	b.n	800bf46 <E131Params::Set(unsigned int)+0x42>
 800bfa6:	bf00      	nop
 800bfa8:	20001ee8 	andcs	r1, r0, r8, ror #29
 800bfac:	20001ee0 	andcs	r1, r0, r0, ror #29

0800bfb0 <E131Params::Dump()>:
 800bfb0:	4770      	bx	lr

0800bfb2 <LLRPDevice::~LLRPDevice()>:
 800bfb2:	4770      	bx	lr

0800bfb4 <LLRPDevice::CopyUID(unsigned char*)>:
 800bfb4:	4770      	bx	lr

0800bfb6 <LLRPDevice::CopyCID(unsigned char*)>:
 800bfb6:	4770      	bx	lr

0800bfb8 <LLRPDevice::LLRPHandleRdmCommand(unsigned char const*)>:
 800bfb8:	2000      	movs	r0, #0
 800bfba:	4770      	bx	lr

0800bfbc <LLRPDevice::~LLRPDevice()>:
 800bfbc:	b510      	push	{r4, lr}
 800bfbe:	4604      	mov	r4, r0
 800bfc0:	f006 fa90 	bl	80124e4 <operator delete(void*)>
 800bfc4:	4620      	mov	r0, r4
 800bfc6:	bd10      	pop	{r4, pc}

0800bfc8 <memcpy.isra.0>:
 800bfc8:	3801      	subs	r0, #1
 800bfca:	440a      	add	r2, r1
 800bfcc:	4291      	cmp	r1, r2
 800bfce:	d100      	bne.n	800bfd2 <memcpy.isra.0+0xa>
 800bfd0:	4770      	bx	lr
 800bfd2:	f811 3b01 	ldrb.w	r3, [r1], #1
 800bfd6:	f800 3f01 	strb.w	r3, [r0, #1]!
 800bfda:	e7f7      	b.n	800bfcc <memcpy.isra.0+0x4>

0800bfdc <LLRPDevice::LLRPDevice()>:
 800bfdc:	b513      	push	{r0, r1, r4, lr}
 800bfde:	4604      	mov	r4, r0
 800bfe0:	4b09      	ldr	r3, [pc, #36]	; (800c008 <LLRPDevice::LLRPDevice()+0x2c>)
 800bfe2:	a901      	add	r1, sp, #4
 800bfe4:	6003      	str	r3, [r0, #0]
 800bfe6:	4809      	ldr	r0, [pc, #36]	; (800c00c <LLRPDevice::LLRPDevice()+0x30>)
 800bfe8:	f006 fa84 	bl	80124f4 <inet_aton>
 800bfec:	9a01      	ldr	r2, [sp, #4]
 800bfee:	4b08      	ldr	r3, [pc, #32]	; (800c010 <LLRPDevice::LLRPDevice()+0x34>)
 800bff0:	a901      	add	r1, sp, #4
 800bff2:	4808      	ldr	r0, [pc, #32]	; (800c014 <LLRPDevice::LLRPDevice()+0x38>)
 800bff4:	601a      	str	r2, [r3, #0]
 800bff6:	f006 fa7d 	bl	80124f4 <inet_aton>
 800bffa:	4620      	mov	r0, r4
 800bffc:	4b06      	ldr	r3, [pc, #24]	; (800c018 <LLRPDevice::LLRPDevice()+0x3c>)
 800bffe:	9a01      	ldr	r2, [sp, #4]
 800c000:	601a      	str	r2, [r3, #0]
 800c002:	b002      	add	sp, #8
 800c004:	bd10      	pop	{r4, pc}
 800c006:	bf00      	nop
 800c008:	08015cd4 	stmdaeq	r1, {r2, r4, r6, r7, sl, fp, ip, lr}
 800c00c:	08015c23 	stmdaeq	r1, {r0, r1, r5, sl, fp, ip, lr}
 800c010:	20001ef0 	strdcs	r1, [r0], -r0
 800c014:	08015c33 	stmdaeq	r1, {r0, r1, r4, r5, sl, fp, ip, lr}
 800c018:	20001ef4 	strdcs	r1, [r0], -r4

0800c01c <LLRPDevice::HandleRequestMessage()>:
 800c01c:	b570      	push	{r4, r5, r6, lr}
 800c01e:	4b23      	ldr	r3, [pc, #140]	; (800c0ac <LLRPDevice::HandleRequestMessage()+0x90>)
 800c020:	b086      	sub	sp, #24
 800c022:	681c      	ldr	r4, [r3, #0]
 800c024:	4605      	mov	r5, r0
 800c026:	f104 0617 	add.w	r6, r4, #23
 800c02a:	2210      	movs	r2, #16
 800c02c:	4631      	mov	r1, r6
 800c02e:	a802      	add	r0, sp, #8
 800c030:	f7ff ffca 	bl	800bfc8 <memcpy.isra.0>
 800c034:	2343      	movs	r3, #67	; 0x43
 800c036:	74a3      	strb	r3, [r4, #18]
 800c038:	682b      	ldr	r3, [r5, #0]
 800c03a:	4631      	mov	r1, r6
 800c03c:	4628      	mov	r0, r5
 800c03e:	68db      	ldr	r3, [r3, #12]
 800c040:	4798      	blx	r3
 800c042:	232c      	movs	r3, #44	; 0x2c
 800c044:	f884 3029 	strb.w	r3, [r4, #41]	; 0x29
 800c048:	2300      	movs	r3, #0
 800c04a:	f884 302a 	strb.w	r3, [r4, #42]	; 0x2a
 800c04e:	f884 302b 	strb.w	r3, [r4, #43]	; 0x2b
 800c052:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 800c056:	2302      	movs	r3, #2
 800c058:	2210      	movs	r2, #16
 800c05a:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 800c05e:	a902      	add	r1, sp, #8
 800c060:	f104 002e 	add.w	r0, r4, #46	; 0x2e
 800c064:	f7ff ffb0 	bl	800bfc8 <memcpy.isra.0>
 800c068:	2311      	movs	r3, #17
 800c06a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800c06e:	2301      	movs	r3, #1
 800c070:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800c074:	682b      	ldr	r3, [r5, #0]
 800c076:	4628      	mov	r0, r5
 800c078:	f104 0146 	add.w	r1, r4, #70	; 0x46
 800c07c:	689b      	ldr	r3, [r3, #8]
 800c07e:	4798      	blx	r3
 800c080:	4b0b      	ldr	r3, [pc, #44]	; (800c0b0 <LLRPDevice::HandleRequestMessage()+0x94>)
 800c082:	f104 014c 	add.w	r1, r4, #76	; 0x4c
 800c086:	6818      	ldr	r0, [r3, #0]
 800c088:	f003 ff10 	bl	800feac <Network::MacAddressCopyTo(unsigned char*)>
 800c08c:	23ff      	movs	r3, #255	; 0xff
 800c08e:	f884 3052 	strb.w	r3, [r4, #82]	; 0x52
 800c092:	f241 53c1 	movw	r3, #5569	; 0x15c1
 800c096:	4807      	ldr	r0, [pc, #28]	; (800c0b4 <LLRPDevice::HandleRequestMessage()+0x98>)
 800c098:	9300      	str	r3, [sp, #0]
 800c09a:	4b07      	ldr	r3, [pc, #28]	; (800c0b8 <LLRPDevice::HandleRequestMessage()+0x9c>)
 800c09c:	2253      	movs	r2, #83	; 0x53
 800c09e:	4621      	mov	r1, r4
 800c0a0:	681b      	ldr	r3, [r3, #0]
 800c0a2:	7800      	ldrb	r0, [r0, #0]
 800c0a4:	f003 fa34 	bl	800f510 <udp_send>
 800c0a8:	b006      	add	sp, #24
 800c0aa:	bd70      	pop	{r4, r5, r6, pc}
 800c0ac:	20001ef8 	strdcs	r1, [r0], -r8
 800c0b0:	2000b1a0 	andcs	fp, r0, r0, lsr #3
 800c0b4:	20000000 	andcs	r0, r0, r0
 800c0b8:	20001ef4 	strdcs	r1, [r0], -r4

0800c0bc <LLRPDevice::HandleRdmCommand()>:
 800c0bc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c0c0:	4b22      	ldr	r3, [pc, #136]	; (800c14c <LLRPDevice::HandleRdmCommand()+0x90>)
 800c0c2:	b086      	sub	sp, #24
 800c0c4:	681c      	ldr	r4, [r3, #0]
 800c0c6:	6803      	ldr	r3, [r0, #0]
 800c0c8:	f104 0946 	add.w	r9, r4, #70	; 0x46
 800c0cc:	4649      	mov	r1, r9
 800c0ce:	691b      	ldr	r3, [r3, #16]
 800c0d0:	4607      	mov	r7, r0
 800c0d2:	4798      	blx	r3
 800c0d4:	4605      	mov	r5, r0
 800c0d6:	2800      	cmp	r0, #0
 800c0d8:	d034      	beq.n	800c144 <LLRPDevice::HandleRdmCommand()+0x88>
 800c0da:	7803      	ldrb	r3, [r0, #0]
 800c0dc:	2bcc      	cmp	r3, #204	; 0xcc
 800c0de:	d131      	bne.n	800c144 <LLRPDevice::HandleRdmCommand()+0x88>
 800c0e0:	f104 0a17 	add.w	sl, r4, #23
 800c0e4:	2210      	movs	r2, #16
 800c0e6:	4651      	mov	r1, sl
 800c0e8:	a802      	add	r0, sp, #8
 800c0ea:	f7ff ff6d 	bl	800bfc8 <memcpy.isra.0>
 800c0ee:	78ae      	ldrb	r6, [r5, #2]
 800c0f0:	4651      	mov	r1, sl
 800c0f2:	f106 0837 	add.w	r8, r6, #55	; 0x37
 800c0f6:	fa5f f888 	uxtb.w	r8, r8
 800c0fa:	f884 8012 	strb.w	r8, [r4, #18]
 800c0fe:	683b      	ldr	r3, [r7, #0]
 800c100:	4638      	mov	r0, r7
 800c102:	68db      	ldr	r3, [r3, #12]
 800c104:	4798      	blx	r3
 800c106:	f106 0320 	add.w	r3, r6, #32
 800c10a:	2210      	movs	r2, #16
 800c10c:	f884 3029 	strb.w	r3, [r4, #41]	; 0x29
 800c110:	a902      	add	r1, sp, #8
 800c112:	f104 002e 	add.w	r0, r4, #46	; 0x2e
 800c116:	f7ff ff57 	bl	800bfc8 <memcpy.isra.0>
 800c11a:	1d73      	adds	r3, r6, #5
 800c11c:	1c72      	adds	r2, r6, #1
 800c11e:	4648      	mov	r0, r9
 800c120:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800c124:	b2d2      	uxtb	r2, r2
 800c126:	1c69      	adds	r1, r5, #1
 800c128:	f7ff ff4e 	bl	800bfc8 <memcpy.isra.0>
 800c12c:	f241 53c1 	movw	r3, #5569	; 0x15c1
 800c130:	4807      	ldr	r0, [pc, #28]	; (800c150 <LLRPDevice::HandleRdmCommand()+0x94>)
 800c132:	9300      	str	r3, [sp, #0]
 800c134:	4b07      	ldr	r3, [pc, #28]	; (800c154 <LLRPDevice::HandleRdmCommand()+0x98>)
 800c136:	4621      	mov	r1, r4
 800c138:	681b      	ldr	r3, [r3, #0]
 800c13a:	7800      	ldrb	r0, [r0, #0]
 800c13c:	f108 0210 	add.w	r2, r8, #16
 800c140:	f003 f9e6 	bl	800f510 <udp_send>
 800c144:	b006      	add	sp, #24
 800c146:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c14a:	bf00      	nop
 800c14c:	20001ef8 	strdcs	r1, [r0], -r8
 800c150:	20000000 	andcs	r0, r0, r0
 800c154:	20001ef4 	strdcs	r1, [r0], -r4

0800c158 <LLRPDevice::Run()>:
 800c158:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c15a:	4604      	mov	r4, r0
 800c15c:	4d0e      	ldr	r5, [pc, #56]	; (800c198 <LLRPDevice::Run()+0x40>)
 800c15e:	480f      	ldr	r0, [pc, #60]	; (800c19c <LLRPDevice::Run()+0x44>)
 800c160:	4629      	mov	r1, r5
 800c162:	4a0f      	ldr	r2, [pc, #60]	; (800c1a0 <LLRPDevice::Run()+0x48>)
 800c164:	7800      	ldrb	r0, [r0, #0]
 800c166:	f10d 0306 	add.w	r3, sp, #6
 800c16a:	f003 f9ab 	bl	800f4c4 <udp_recv2>
 800c16e:	2841      	cmp	r0, #65	; 0x41
 800c170:	d908      	bls.n	800c184 <LLRPDevice::Run()+0x2c>
 800c172:	682b      	ldr	r3, [r5, #0]
 800c174:	f8d3 302a 	ldr.w	r3, [r3, #42]	; 0x2a
 800c178:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800c17c:	ba1a      	rev	r2, r3
 800c17e:	d003      	beq.n	800c188 <LLRPDevice::Run()+0x30>
 800c180:	2a03      	cmp	r2, #3
 800c182:	d005      	beq.n	800c190 <LLRPDevice::Run()+0x38>
 800c184:	b003      	add	sp, #12
 800c186:	bd30      	pop	{r4, r5, pc}
 800c188:	4620      	mov	r0, r4
 800c18a:	f7ff ff47 	bl	800c01c <LLRPDevice::HandleRequestMessage()>
 800c18e:	e7f9      	b.n	800c184 <LLRPDevice::Run()+0x2c>
 800c190:	4620      	mov	r0, r4
 800c192:	f7ff ff93 	bl	800c0bc <LLRPDevice::HandleRdmCommand()>
 800c196:	e7f5      	b.n	800c184 <LLRPDevice::Run()+0x2c>
 800c198:	20001ef8 	strdcs	r1, [r0], -r8
 800c19c:	20000000 	andcs	r0, r0, r0
 800c1a0:	20001eec 	andcs	r1, r0, ip, ror #29

0800c1a4 <LLRPDevice::Print()>:
 800c1a4:	b507      	push	{r0, r1, r2, lr}
 800c1a6:	4811      	ldr	r0, [pc, #68]	; (800c1ec <LLRPDevice::Print()+0x48>)
 800c1a8:	f7fc ff9e 	bl	80090e8 <printf>
 800c1ac:	f241 51c1 	movw	r1, #5569	; 0x15c1
 800c1b0:	480f      	ldr	r0, [pc, #60]	; (800c1f0 <LLRPDevice::Print()+0x4c>)
 800c1b2:	f7fc ff99 	bl	80090e8 <printf>
 800c1b6:	4b0f      	ldr	r3, [pc, #60]	; (800c1f4 <LLRPDevice::Print()+0x50>)
 800c1b8:	480f      	ldr	r0, [pc, #60]	; (800c1f8 <LLRPDevice::Print()+0x54>)
 800c1ba:	6819      	ldr	r1, [r3, #0]
 800c1bc:	0e0b      	lsrs	r3, r1, #24
 800c1be:	9300      	str	r3, [sp, #0]
 800c1c0:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800c1c4:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800c1c8:	b2c9      	uxtb	r1, r1
 800c1ca:	f7fc ff8d 	bl	80090e8 <printf>
 800c1ce:	4b0b      	ldr	r3, [pc, #44]	; (800c1fc <LLRPDevice::Print()+0x58>)
 800c1d0:	480b      	ldr	r0, [pc, #44]	; (800c200 <LLRPDevice::Print()+0x5c>)
 800c1d2:	6819      	ldr	r1, [r3, #0]
 800c1d4:	0e0b      	lsrs	r3, r1, #24
 800c1d6:	9300      	str	r3, [sp, #0]
 800c1d8:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800c1dc:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800c1e0:	b2c9      	uxtb	r1, r1
 800c1e2:	f7fc ff81 	bl	80090e8 <printf>
 800c1e6:	b003      	add	sp, #12
 800c1e8:	f85d fb04 	ldr.w	pc, [sp], #4
 800c1ec:	08015c43 	stmdaeq	r1, {r0, r1, r6, sl, fp, ip, lr}
 800c1f0:	08015c5e 	stmdaeq	r1, {r1, r2, r3, r4, r6, sl, fp, ip, lr}
 800c1f4:	20001ef0 	strdcs	r1, [r0], -r0
 800c1f8:	08015c7c 	stmdaeq	r1, {r2, r3, r4, r5, r6, sl, fp, ip, lr}
 800c1fc:	20001ef4 	strdcs	r1, [r0], -r4
 800c200:	08015ca3 	stmdaeq	r1, {r0, r1, r5, r7, sl, fp, ip, lr}

0800c204 <RDMNetDevice::Print()>:
 800c204:	2300      	movs	r3, #0
 800c206:	b510      	push	{r4, lr}
 800c208:	4604      	mov	r4, r0
 800c20a:	b08a      	sub	sp, #40	; 0x28
 800c20c:	4669      	mov	r1, sp
 800c20e:	480a      	ldr	r0, [pc, #40]	; (800c238 <RDMNetDevice::Print()+0x34>)
 800c210:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800c214:	f001 f94a 	bl	800d4ac <uuid_unparse>
 800c218:	4808      	ldr	r0, [pc, #32]	; (800c23c <RDMNetDevice::Print()+0x38>)
 800c21a:	f7fc ff65 	bl	80090e8 <printf>
 800c21e:	4669      	mov	r1, sp
 800c220:	4807      	ldr	r0, [pc, #28]	; (800c240 <RDMNetDevice::Print()+0x3c>)
 800c222:	f7fc ff61 	bl	80090e8 <printf>
 800c226:	f104 00cc 	add.w	r0, r4, #204	; 0xcc
 800c22a:	f7ff ffbb 	bl	800c1a4 <LLRPDevice::Print()>
 800c22e:	4620      	mov	r0, r4
 800c230:	f000 fa38 	bl	800c6a4 <RDMDeviceResponder::Print()>
 800c234:	b00a      	add	sp, #40	; 0x28
 800c236:	bd10      	pop	{r4, pc}
 800c238:	20001ffb 	strdcs	r1, [r0], -fp
 800c23c:	08015d1a 	stmdaeq	r1, {r1, r3, r4, r8, sl, fp, ip, lr}
 800c240:	08015d22 	stmdaeq	r1, {r1, r5, r8, sl, fp, ip, lr}

0800c244 <RDMSensors::RDMSensors()>:
 800c244:	2200      	movs	r2, #0
 800c246:	6002      	str	r2, [r0, #0]
 800c248:	7102      	strb	r2, [r0, #4]
 800c24a:	4a01      	ldr	r2, [pc, #4]	; (800c250 <RDMSensors::RDMSensors()+0xc>)
 800c24c:	6010      	str	r0, [r2, #0]
 800c24e:	4770      	bx	lr
 800c250:	2000200c 	andcs	r2, r0, ip

0800c254 <RDMSensors::~RDMSensors()>:
 800c254:	b570      	push	{r4, r5, r6, lr}
 800c256:	2500      	movs	r5, #0
 800c258:	4604      	mov	r4, r0
 800c25a:	462e      	mov	r6, r5
 800c25c:	7923      	ldrb	r3, [r4, #4]
 800c25e:	6820      	ldr	r0, [r4, #0]
 800c260:	42ab      	cmp	r3, r5
 800c262:	d804      	bhi.n	800c26e <RDMSensors::~RDMSensors()+0x1a>
 800c264:	b108      	cbz	r0, 800c26a <RDMSensors::~RDMSensors()+0x16>
 800c266:	f006 f93f 	bl	80124e8 <operator delete[](void*)>
 800c26a:	4620      	mov	r0, r4
 800c26c:	bd70      	pop	{r4, r5, r6, pc}
 800c26e:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 800c272:	b128      	cbz	r0, 800c280 <RDMSensors::~RDMSensors()+0x2c>
 800c274:	6803      	ldr	r3, [r0, #0]
 800c276:	685b      	ldr	r3, [r3, #4]
 800c278:	4798      	blx	r3
 800c27a:	6823      	ldr	r3, [r4, #0]
 800c27c:	f843 6025 	str.w	r6, [r3, r5, lsl #2]
 800c280:	3501      	adds	r5, #1
 800c282:	e7eb      	b.n	800c25c <RDMSensors::~RDMSensors()+0x8>

0800c284 <RDMSubDevices::RDMSubDevices()>:
 800c284:	2200      	movs	r2, #0
 800c286:	6002      	str	r2, [r0, #0]
 800c288:	8082      	strh	r2, [r0, #4]
 800c28a:	4a01      	ldr	r2, [pc, #4]	; (800c290 <RDMSubDevices::RDMSubDevices()+0xc>)
 800c28c:	6010      	str	r0, [r2, #0]
 800c28e:	4770      	bx	lr
 800c290:	20002010 	andcs	r2, r0, r0, lsl r0

0800c294 <RDMSubDevices::~RDMSubDevices()>:
 800c294:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c296:	2500      	movs	r5, #0
 800c298:	4604      	mov	r4, r0
 800c29a:	462e      	mov	r6, r5
 800c29c:	88a3      	ldrh	r3, [r4, #4]
 800c29e:	6820      	ldr	r0, [r4, #0]
 800c2a0:	42ab      	cmp	r3, r5
 800c2a2:	d804      	bhi.n	800c2ae <RDMSubDevices::~RDMSubDevices()+0x1a>
 800c2a4:	b108      	cbz	r0, 800c2aa <RDMSubDevices::~RDMSubDevices()+0x16>
 800c2a6:	f006 f91f 	bl	80124e8 <operator delete[](void*)>
 800c2aa:	4620      	mov	r0, r4
 800c2ac:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c2ae:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 800c2b2:	00af      	lsls	r7, r5, #2
 800c2b4:	b110      	cbz	r0, 800c2bc <RDMSubDevices::~RDMSubDevices()+0x28>
 800c2b6:	6803      	ldr	r3, [r0, #0]
 800c2b8:	685b      	ldr	r3, [r3, #4]
 800c2ba:	4798      	blx	r3
 800c2bc:	6823      	ldr	r3, [r4, #0]
 800c2be:	3501      	adds	r5, #1
 800c2c0:	51de      	str	r6, [r3, r7]
 800c2c2:	e7eb      	b.n	800c29c <RDMSubDevices::~RDMSubDevices()+0x8>

0800c2c4 <RDMSubDevices::GetInfo(unsigned short)>:
 800c2c4:	6803      	ldr	r3, [r0, #0]
 800c2c6:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 800c2ca:	3901      	subs	r1, #1
 800c2cc:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800c2d0:	3010      	adds	r0, #16
 800c2d2:	4770      	bx	lr

0800c2d4 <RDMSubDevices::GetLabel(unsigned short, TRDMDeviceInfoData*)>:
 800c2d4:	f101 4380 	add.w	r3, r1, #1073741824	; 0x40000000
 800c2d8:	6800      	ldr	r0, [r0, #0]
 800c2da:	3b01      	subs	r3, #1
 800c2dc:	4611      	mov	r1, r2
 800c2de:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 800c2e2:	f000 b82f 	b.w	800c344 <RDMSubDevice::GetLabel(TRDMDeviceInfoData*)>

0800c2e6 <RDMSubDevices::SetLabel(unsigned short, char const*, unsigned char)>:
 800c2e6:	b410      	push	{r4}
 800c2e8:	460c      	mov	r4, r1
 800c2ea:	6800      	ldr	r0, [r0, #0]
 800c2ec:	f104 4480 	add.w	r4, r4, #1073741824	; 0x40000000
 800c2f0:	3c01      	subs	r4, #1
 800c2f2:	4611      	mov	r1, r2
 800c2f4:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
 800c2f8:	461a      	mov	r2, r3
 800c2fa:	bc10      	pop	{r4}
 800c2fc:	f000 b837 	b.w	800c36e <RDMSubDevice::SetLabel(char const*, unsigned char)>

0800c300 <RDMSubDevices::GetFactoryDefaults()>:
 800c300:	b538      	push	{r3, r4, r5, lr}
 800c302:	4605      	mov	r5, r0
 800c304:	2400      	movs	r4, #0
 800c306:	88ab      	ldrh	r3, [r5, #4]
 800c308:	42a3      	cmp	r3, r4
 800c30a:	d801      	bhi.n	800c310 <RDMSubDevices::GetFactoryDefaults()+0x10>
 800c30c:	2001      	movs	r0, #1
 800c30e:	e009      	b.n	800c324 <RDMSubDevices::GetFactoryDefaults()+0x24>
 800c310:	682b      	ldr	r3, [r5, #0]
 800c312:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 800c316:	b908      	cbnz	r0, 800c31c <RDMSubDevices::GetFactoryDefaults()+0x1c>
 800c318:	3401      	adds	r4, #1
 800c31a:	e7f4      	b.n	800c306 <RDMSubDevices::GetFactoryDefaults()+0x6>
 800c31c:	f000 f85c 	bl	800c3d8 <RDMSubDevice::GetFactoryDefaults()>
 800c320:	2800      	cmp	r0, #0
 800c322:	d1f9      	bne.n	800c318 <RDMSubDevices::GetFactoryDefaults()+0x18>
 800c324:	bd38      	pop	{r3, r4, r5, pc}

0800c326 <RDMSubDevices::SetFactoryDefaults()>:
 800c326:	b538      	push	{r3, r4, r5, lr}
 800c328:	4605      	mov	r5, r0
 800c32a:	2400      	movs	r4, #0
 800c32c:	88ab      	ldrh	r3, [r5, #4]
 800c32e:	42a3      	cmp	r3, r4
 800c330:	d800      	bhi.n	800c334 <RDMSubDevices::SetFactoryDefaults()+0xe>
 800c332:	bd38      	pop	{r3, r4, r5, pc}
 800c334:	682b      	ldr	r3, [r5, #0]
 800c336:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 800c33a:	b108      	cbz	r0, 800c340 <RDMSubDevices::SetFactoryDefaults()+0x1a>
 800c33c:	f000 f826 	bl	800c38c <RDMSubDevice::SetFactoryDefaults()>
 800c340:	3401      	adds	r4, #1
 800c342:	e7f3      	b.n	800c32c <RDMSubDevices::SetFactoryDefaults()+0x6>

0800c344 <RDMSubDevice::GetLabel(TRDMDeviceInfoData*)>:
 800c344:	f100 0316 	add.w	r3, r0, #22
 800c348:	600b      	str	r3, [r1, #0]
 800c34a:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800c34e:	710b      	strb	r3, [r1, #4]
 800c350:	4770      	bx	lr

0800c352 <RDMSubDevice::SetLabel(char const*)>:
 800c352:	2300      	movs	r3, #0
 800c354:	b510      	push	{r4, lr}
 800c356:	f100 0415 	add.w	r4, r0, #21
 800c35a:	5cca      	ldrb	r2, [r1, r3]
 800c35c:	b122      	cbz	r2, 800c368 <RDMSubDevice::SetLabel(char const*)+0x16>
 800c35e:	3301      	adds	r3, #1
 800c360:	2b20      	cmp	r3, #32
 800c362:	f804 2f01 	strb.w	r2, [r4, #1]!
 800c366:	d1f8      	bne.n	800c35a <RDMSubDevice::SetLabel(char const*)+0x8>
 800c368:	f880 3036 	strb.w	r3, [r0, #54]	; 0x36
 800c36c:	bd10      	pop	{r4, pc}

0800c36e <RDMSubDevice::SetLabel(char const*, unsigned char)>:
 800c36e:	2300      	movs	r3, #0
 800c370:	b530      	push	{r4, r5, lr}
 800c372:	f100 0415 	add.w	r4, r0, #21
 800c376:	429a      	cmp	r2, r3
 800c378:	d905      	bls.n	800c386 <RDMSubDevice::SetLabel(char const*, unsigned char)+0x18>
 800c37a:	5ccd      	ldrb	r5, [r1, r3]
 800c37c:	3301      	adds	r3, #1
 800c37e:	2b20      	cmp	r3, #32
 800c380:	f804 5f01 	strb.w	r5, [r4, #1]!
 800c384:	d1f7      	bne.n	800c376 <RDMSubDevice::SetLabel(char const*, unsigned char)+0x8>
 800c386:	f880 3036 	strb.w	r3, [r0, #54]	; 0x36
 800c38a:	bd30      	pop	{r4, r5, pc}

0800c38c <RDMSubDevice::SetFactoryDefaults()>:
 800c38c:	7a03      	ldrb	r3, [r0, #8]
 800c38e:	b510      	push	{r4, lr}
 800c390:	b94b      	cbnz	r3, 800c3a6 <RDMSubDevice::SetFactoryDefaults()+0x1a>
 800c392:	f100 0138 	add.w	r1, r0, #56	; 0x38
 800c396:	f7ff ffdc 	bl	800c352 <RDMSubDevice::SetLabel(char const*)>
 800c39a:	8983      	ldrh	r3, [r0, #12]
 800c39c:	8243      	strh	r3, [r0, #18]
 800c39e:	7b83      	ldrb	r3, [r0, #14]
 800c3a0:	7503      	strb	r3, [r0, #20]
 800c3a2:	2301      	movs	r3, #1
 800c3a4:	7203      	strb	r3, [r0, #8]
 800c3a6:	bd10      	pop	{r4, pc}

0800c3a8 <RDMSubDevice::CalculateChecksum()>:
 800c3a8:	4602      	mov	r2, r0
 800c3aa:	b510      	push	{r4, lr}
 800c3ac:	8a43      	ldrh	r3, [r0, #18]
 800c3ae:	7d01      	ldrb	r1, [r0, #20]
 800c3b0:	f892 4036 	ldrb.w	r4, [r2, #54]	; 0x36
 800c3b4:	440b      	add	r3, r1
 800c3b6:	b298      	uxth	r0, r3
 800c3b8:	f102 0315 	add.w	r3, r2, #21
 800c3bc:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
 800c3c0:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
 800c3c4:	32eb      	adds	r2, #235	; 0xeb
 800c3c6:	18d1      	adds	r1, r2, r3
 800c3c8:	428c      	cmp	r4, r1
 800c3ca:	d800      	bhi.n	800c3ce <RDMSubDevice::CalculateChecksum()+0x26>
 800c3cc:	bd10      	pop	{r4, pc}
 800c3ce:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800c3d2:	4408      	add	r0, r1
 800c3d4:	b280      	uxth	r0, r0
 800c3d6:	e7f6      	b.n	800c3c6 <RDMSubDevice::CalculateChecksum()+0x1e>

0800c3d8 <RDMSubDevice::GetFactoryDefaults()>:
 800c3d8:	7a03      	ldrb	r3, [r0, #8]
 800c3da:	b510      	push	{r4, lr}
 800c3dc:	4604      	mov	r4, r0
 800c3de:	b133      	cbz	r3, 800c3ee <RDMSubDevice::GetFactoryDefaults()+0x16>
 800c3e0:	f7ff ffe2 	bl	800c3a8 <RDMSubDevice::CalculateChecksum()>
 800c3e4:	8963      	ldrh	r3, [r4, #10]
 800c3e6:	4283      	cmp	r3, r0
 800c3e8:	bf1c      	itt	ne
 800c3ea:	2300      	movne	r3, #0
 800c3ec:	7223      	strbne	r3, [r4, #8]
 800c3ee:	7a20      	ldrb	r0, [r4, #8]
 800c3f0:	bd10      	pop	{r4, pc}

0800c3f2 <memcpy.isra.0>:
 800c3f2:	f006 b92f 	b.w	8012654 <memcpy>
	...

0800c3f8 <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)>:
 800c3f8:	b510      	push	{r4, lr}
 800c3fa:	6001      	str	r1, [r0, #0]
 800c3fc:	2100      	movs	r1, #0
 800c3fe:	4604      	mov	r4, r0
 800c400:	6041      	str	r1, [r0, #4]
 800c402:	2220      	movs	r2, #32
 800c404:	3008      	adds	r0, #8
 800c406:	f006 f947 	bl	8012698 <memset>
 800c40a:	4b03      	ldr	r3, [pc, #12]	; (800c418 <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)+0x20>)
 800c40c:	4620      	mov	r0, r4
 800c40e:	62a3      	str	r3, [r4, #40]	; 0x28
 800c410:	237f      	movs	r3, #127	; 0x7f
 800c412:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 800c416:	bd10      	pop	{r4, pc}
 800c418:	ff7fff00 			; <UNDEFINED> instruction: 0xff7fff00

0800c41c <RDMDeviceParams::Load()>:
 800c41c:	4601      	mov	r1, r0
 800c41e:	6800      	ldr	r0, [r0, #0]
 800c420:	b130      	cbz	r0, 800c430 <RDMDeviceParams::Load()+0x14>
 800c422:	b508      	push	{r3, lr}
 800c424:	6803      	ldr	r3, [r0, #0]
 800c426:	3104      	adds	r1, #4
 800c428:	68db      	ldr	r3, [r3, #12]
 800c42a:	4798      	blx	r3
 800c42c:	2001      	movs	r0, #1
 800c42e:	bd08      	pop	{r3, pc}
 800c430:	4770      	bx	lr

0800c432 <RDMDeviceParams::Set(RDMDevice*)>:
 800c432:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c434:	6843      	ldr	r3, [r0, #4]
 800c436:	460c      	mov	r4, r1
 800c438:	07d9      	lsls	r1, r3, #31
 800c43a:	4605      	mov	r5, r0
 800c43c:	d518      	bpl.n	800c470 <RDMDeviceParams::Set(RDMDevice*)+0x3e>
 800c43e:	f890 6028 	ldrb.w	r6, [r0, #40]	; 0x28
 800c442:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 800c446:	2e20      	cmp	r6, #32
 800c448:	bf28      	it	cs
 800c44a:	2620      	movcs	r6, #32
 800c44c:	f100 0108 	add.w	r1, r0, #8
 800c450:	b1e3      	cbz	r3, 800c48c <RDMDeviceParams::Set(RDMDevice*)+0x5a>
 800c452:	f104 070a 	add.w	r7, r4, #10
 800c456:	4638      	mov	r0, r7
 800c458:	4632      	mov	r2, r6
 800c45a:	f7ff ffca 	bl	800c3f2 <memcpy.isra.0>
 800c45e:	6f60      	ldr	r0, [r4, #116]	; 0x74
 800c460:	f884 602a 	strb.w	r6, [r4, #42]	; 0x2a
 800c464:	b120      	cbz	r0, 800c470 <RDMDeviceParams::Set(RDMDevice*)+0x3e>
 800c466:	6803      	ldr	r3, [r0, #0]
 800c468:	4632      	mov	r2, r6
 800c46a:	4639      	mov	r1, r7
 800c46c:	689b      	ldr	r3, [r3, #8]
 800c46e:	4798      	blx	r3
 800c470:	686b      	ldr	r3, [r5, #4]
 800c472:	079a      	lsls	r2, r3, #30
 800c474:	bf44      	itt	mi
 800c476:	f8b5 2029 	ldrhmi.w	r2, [r5, #41]	; 0x29
 800c47a:	f8a4 204c 	strhmi.w	r2, [r4, #76]	; 0x4c
 800c47e:	075b      	lsls	r3, r3, #29
 800c480:	bf44      	itt	mi
 800c482:	f8b5 302b 	ldrhmi.w	r3, [r5, #43]	; 0x2b
 800c486:	f8a4 304e 	strhmi.w	r3, [r4, #78]	; 0x4e
 800c48a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c48c:	4632      	mov	r2, r6
 800c48e:	f104 0051 	add.w	r0, r4, #81	; 0x51
 800c492:	f7ff ffae 	bl	800c3f2 <memcpy.isra.0>
 800c496:	f884 6071 	strb.w	r6, [r4, #113]	; 0x71
 800c49a:	e7e9      	b.n	800c470 <RDMDeviceParams::Set(RDMDevice*)+0x3e>

0800c49c <RDMDeviceParams::Dump()>:
 800c49c:	4770      	bx	lr

0800c49e <RDMDeviceResponder::PersonalityUpdate(LightSet*)>:
 800c49e:	4770      	bx	lr

0800c4a0 <RDMDeviceResponder::DmxStartAddressUpdate()>:
 800c4a0:	4770      	bx	lr
	...

0800c4a4 <RDMDeviceResponder::~RDMDeviceResponder()>:
 800c4a4:	b510      	push	{r4, lr}
 800c4a6:	4604      	mov	r4, r0
 800c4a8:	4b05      	ldr	r3, [pc, #20]	; (800c4c0 <RDMDeviceResponder::~RDMDeviceResponder()+0x1c>)
 800c4aa:	f840 3b88 	str.w	r3, [r0], #136
 800c4ae:	f7ff fef1 	bl	800c294 <RDMSubDevices::~RDMSubDevices()>
 800c4b2:	f104 0080 	add.w	r0, r4, #128	; 0x80
 800c4b6:	f7ff fecd 	bl	800c254 <RDMSensors::~RDMSensors()>
 800c4ba:	4620      	mov	r0, r4
 800c4bc:	bd10      	pop	{r4, pc}
 800c4be:	bf00      	nop
 800c4c0:	08015dec 	stmdaeq	r1, {r2, r3, r5, r6, r7, r8, sl, fp, ip, lr}

0800c4c4 <RDMDeviceResponder::~RDMDeviceResponder()>:
 800c4c4:	b510      	push	{r4, lr}
 800c4c6:	4604      	mov	r4, r0
 800c4c8:	f7ff ffec 	bl	800c4a4 <RDMDeviceResponder::~RDMDeviceResponder()>
 800c4cc:	4620      	mov	r0, r4
 800c4ce:	f006 f809 	bl	80124e4 <operator delete(void*)>
 800c4d2:	4620      	mov	r0, r4
 800c4d4:	bd10      	pop	{r4, pc}
	...

0800c4d8 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)>:
 800c4d8:	b570      	push	{r4, r5, r6, lr}
 800c4da:	4604      	mov	r4, r0
 800c4dc:	3004      	adds	r0, #4
 800c4de:	460e      	mov	r6, r1
 800c4e0:	4615      	mov	r5, r2
 800c4e2:	f000 feeb 	bl	800d2bc <RDMDevice::RDMDevice()>
 800c4e6:	4620      	mov	r0, r4
 800c4e8:	4b21      	ldr	r3, [pc, #132]	; (800c570 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x98>)
 800c4ea:	f840 3b7c 	str.w	r3, [r0], #124
 800c4ee:	f000 fcf5 	bl	800cedc <RDMIdentify::RDMIdentify()>
 800c4f2:	f104 0080 	add.w	r0, r4, #128	; 0x80
 800c4f6:	f7ff fea5 	bl	800c244 <RDMSensors::RDMSensors()>
 800c4fa:	f104 0088 	add.w	r0, r4, #136	; 0x88
 800c4fe:	f7ff fec1 	bl	800c284 <RDMSubDevices::RDMSubDevices()>
 800c502:	4b1c      	ldr	r3, [pc, #112]	; (800c574 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x9c>)
 800c504:	2200      	movs	r2, #0
 800c506:	601c      	str	r4, [r3, #0]
 800c508:	2365      	movs	r3, #101	; 0x65
 800c50a:	f884 30bf 	strb.w	r3, [r4, #191]	; 0xbf
 800c50e:	f44f 73b7 	mov.w	r3, #366	; 0x16e
 800c512:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 800c516:	2301      	movs	r3, #1
 800c518:	f8c4 6090 	str.w	r6, [r4, #144]	; 0x90
 800c51c:	f8a4 30c4 	strh.w	r3, [r4, #196]	; 0xc4
 800c520:	f8c4 20c8 	str.w	r2, [r4, #200]	; 0xc8
 800c524:	f104 0399 	add.w	r3, r4, #153	; 0x99
 800c528:	f104 01ac 	add.w	r1, r4, #172	; 0xac
 800c52c:	428b      	cmp	r3, r1
 800c52e:	d119      	bne.n	800c564 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x8c>
 800c530:	2100      	movs	r1, #0
 800c532:	f104 02bf 	add.w	r2, r4, #191	; 0xbf
 800c536:	4293      	cmp	r3, r2
 800c538:	d117      	bne.n	800c56a <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x92>
 800c53a:	f884 50a6 	strb.w	r5, [r4, #166]	; 0xa6
 800c53e:	f7fc facd 	bl	8008adc <RDMSoftwareVersion::GetVersion()>
 800c542:	f8c4 0094 	str.w	r0, [r4, #148]	; 0x94
 800c546:	f7fc facd 	bl	8008ae4 <RDMSoftwareVersion::GetVersionLength()>
 800c54a:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800c54e:	f884 0098 	strb.w	r0, [r4, #152]	; 0x98
 800c552:	681b      	ldr	r3, [r3, #0]
 800c554:	685b      	ldr	r3, [r3, #4]
 800c556:	b91b      	cbnz	r3, 800c560 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x88>
 800c558:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800c55c:	f8a4 30c4 	strh.w	r3, [r4, #196]	; 0xc4
 800c560:	4620      	mov	r0, r4
 800c562:	bd70      	pop	{r4, r5, r6, pc}
 800c564:	f803 2b01 	strb.w	r2, [r3], #1
 800c568:	e7e0      	b.n	800c52c <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x54>
 800c56a:	f803 1b01 	strb.w	r1, [r3], #1
 800c56e:	e7e2      	b.n	800c536 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x5e>
 800c570:	08015dec 	stmdaeq	r1, {r2, r3, r5, r6, r7, r8, sl, fp, ip, lr}
 800c574:	20002014 	andcs	r2, r0, r4, lsl r0

0800c578 <RDMDeviceResponder::Init()>:
 800c578:	2301      	movs	r3, #1
 800c57a:	b570      	push	{r4, r5, r6, lr}
 800c57c:	4604      	mov	r4, r0
 800c57e:	f880 3054 	strb.w	r3, [r0, #84]	; 0x54
 800c582:	f894 2075 	ldrb.w	r2, [r4, #117]	; 0x75
 800c586:	3055      	adds	r0, #85	; 0x55
 800c588:	2a20      	cmp	r2, #32
 800c58a:	bf28      	it	cs
 800c58c:	2220      	movcs	r2, #32
 800c58e:	4613      	mov	r3, r2
 800c590:	f104 010e 	add.w	r1, r4, #14
 800c594:	3b01      	subs	r3, #1
 800c596:	d25d      	bcs.n	800c654 <RDMDeviceResponder::Init()+0xdc>
 800c598:	6fa0      	ldr	r0, [r4, #120]	; 0x78
 800c59a:	f884 202e 	strb.w	r2, [r4, #46]	; 0x2e
 800c59e:	b110      	cbz	r0, 800c5a6 <RDMDeviceResponder::Init()+0x2e>
 800c5a0:	6803      	ldr	r3, [r0, #0]
 800c5a2:	689b      	ldr	r3, [r3, #8]
 800c5a4:	4798      	blx	r3
 800c5a6:	f06f 050c 	mvn.w	r5, #12
 800c5aa:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800c5ae:	f894 002e 	ldrb.w	r0, [r4, #46]	; 0x2e
 800c5b2:	f104 020d 	add.w	r2, r4, #13
 800c5b6:	1b2d      	subs	r5, r5, r4
 800c5b8:	18a9      	adds	r1, r5, r2
 800c5ba:	4288      	cmp	r0, r1
 800c5bc:	d84f      	bhi.n	800c65e <RDMDeviceResponder::Init()+0xe6>
 800c5be:	f8a4 3076 	strh.w	r3, [r4, #118]	; 0x76
 800c5c2:	f7fc fa91 	bl	8008ae8 <RDMSoftwareVersion::GetVersionId()>
 800c5c6:	2201      	movs	r2, #1
 800c5c8:	f884 2099 	strb.w	r2, [r4, #153]	; 0x99
 800c5cc:	2200      	movs	r2, #0
 800c5ce:	f8b4 3050 	ldrh.w	r3, [r4, #80]	; 0x50
 800c5d2:	f8a4 209a 	strh.w	r2, [r4, #154]	; 0x9a
 800c5d6:	f884 209c 	strb.w	r2, [r4, #156]	; 0x9c
 800c5da:	f884 309e 	strb.w	r3, [r4, #158]	; 0x9e
 800c5de:	0a1a      	lsrs	r2, r3, #8
 800c5e0:	0e03      	lsrs	r3, r0, #24
 800c5e2:	f884 309f 	strb.w	r3, [r4, #159]	; 0x9f
 800c5e6:	0c03      	lsrs	r3, r0, #16
 800c5e8:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
 800c5ec:	0a03      	lsrs	r3, r0, #8
 800c5ee:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
 800c5f2:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800c5f6:	f884 209d 	strb.w	r2, [r4, #157]	; 0x9d
 800c5fa:	f884 00a2 	strb.w	r0, [r4, #162]	; 0xa2
 800c5fe:	681b      	ldr	r3, [r3, #0]
 800c600:	f8b4 608c 	ldrh.w	r6, [r4, #140]	; 0x8c
 800c604:	685d      	ldr	r5, [r3, #4]
 800c606:	bb7d      	cbnz	r5, 800c668 <RDMDeviceResponder::Init()+0xf0>
 800c608:	f8b4 00c4 	ldrh.w	r0, [r4, #196]	; 0xc4
 800c60c:	f884 50a3 	strb.w	r5, [r4, #163]	; 0xa3
 800c610:	0a03      	lsrs	r3, r0, #8
 800c612:	f884 50a4 	strb.w	r5, [r4, #164]	; 0xa4
 800c616:	f884 30a7 	strb.w	r3, [r4, #167]	; 0xa7
 800c61a:	2301      	movs	r3, #1
 800c61c:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 800c620:	0a33      	lsrs	r3, r6, #8
 800c622:	f884 30a9 	strb.w	r3, [r4, #169]	; 0xa9
 800c626:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 800c62a:	b2c0      	uxtb	r0, r0
 800c62c:	f884 30ab 	strb.w	r3, [r4, #171]	; 0xab
 800c630:	f884 00a8 	strb.w	r0, [r4, #168]	; 0xa8
 800c634:	f884 60aa 	strb.w	r6, [r4, #170]	; 0xaa
 800c638:	f104 0399 	add.w	r3, r4, #153	; 0x99
 800c63c:	f104 02ac 	add.w	r2, r4, #172	; 0xac
 800c640:	4293      	cmp	r3, r2
 800c642:	d12a      	bne.n	800c69a <RDMDeviceResponder::Init()+0x122>
 800c644:	f894 30a8 	ldrb.w	r3, [r4, #168]	; 0xa8
 800c648:	f894 20a5 	ldrb.w	r2, [r4, #165]	; 0xa5
 800c64c:	4413      	add	r3, r2
 800c64e:	f8a4 30c2 	strh.w	r3, [r4, #194]	; 0xc2
 800c652:	bd70      	pop	{r4, r5, r6, pc}
 800c654:	f810 5b01 	ldrb.w	r5, [r0], #1
 800c658:	f800 5c48 	strb.w	r5, [r0, #-72]
 800c65c:	e79a      	b.n	800c594 <RDMDeviceResponder::Init()+0x1c>
 800c65e:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800c662:	440b      	add	r3, r1
 800c664:	b29b      	uxth	r3, r3
 800c666:	e7a7      	b.n	800c5b8 <RDMDeviceResponder::Init()+0x40>
 800c668:	682b      	ldr	r3, [r5, #0]
 800c66a:	4628      	mov	r0, r5
 800c66c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c66e:	4798      	blx	r3
 800c670:	0a00      	lsrs	r0, r0, #8
 800c672:	f884 00a3 	strb.w	r0, [r4, #163]	; 0xa3
 800c676:	682b      	ldr	r3, [r5, #0]
 800c678:	4628      	mov	r0, r5
 800c67a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c67c:	4798      	blx	r3
 800c67e:	f884 00a4 	strb.w	r0, [r4, #164]	; 0xa4
 800c682:	682b      	ldr	r3, [r5, #0]
 800c684:	4628      	mov	r0, r5
 800c686:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c688:	4798      	blx	r3
 800c68a:	0a00      	lsrs	r0, r0, #8
 800c68c:	f884 00a7 	strb.w	r0, [r4, #167]	; 0xa7
 800c690:	682b      	ldr	r3, [r5, #0]
 800c692:	4628      	mov	r0, r5
 800c694:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c696:	4798      	blx	r3
 800c698:	e7bf      	b.n	800c61a <RDMDeviceResponder::Init()+0xa2>
 800c69a:	f813 1b01 	ldrb.w	r1, [r3], #1
 800c69e:	7499      	strb	r1, [r3, #18]
 800c6a0:	e7ce      	b.n	800c640 <RDMDeviceResponder::Init()+0xc8>
	...

0800c6a4 <RDMDeviceResponder::Print()>:
 800c6a4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c6a6:	4604      	mov	r4, r0
 800c6a8:	3004      	adds	r0, #4
 800c6aa:	f000 fe79 	bl	800d3a0 <RDMDevice::Print()>
 800c6ae:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800c6b2:	481c      	ldr	r0, [pc, #112]	; (800c724 <RDMDeviceResponder::Print()+0x80>)
 800c6b4:	681d      	ldr	r5, [r3, #0]
 800c6b6:	6aae      	ldr	r6, [r5, #40]	; 0x28
 800c6b8:	f7fc fd16 	bl	80090e8 <printf>
 800c6bc:	f894 209a 	ldrb.w	r2, [r4, #154]	; 0x9a
 800c6c0:	f894 1099 	ldrb.w	r1, [r4, #153]	; 0x99
 800c6c4:	4818      	ldr	r0, [pc, #96]	; (800c728 <RDMDeviceResponder::Print()+0x84>)
 800c6c6:	f7fc fd0f 	bl	80090e8 <printf>
 800c6ca:	f894 30a8 	ldrb.w	r3, [r4, #168]	; 0xa8
 800c6ce:	f894 10a7 	ldrb.w	r1, [r4, #167]	; 0xa7
 800c6d2:	4816      	ldr	r0, [pc, #88]	; (800c72c <RDMDeviceResponder::Print()+0x88>)
 800c6d4:	eb03 2101 	add.w	r1, r3, r1, lsl #8
 800c6d8:	f7fc fd06 	bl	80090e8 <printf>
 800c6dc:	f894 30a4 	ldrb.w	r3, [r4, #164]	; 0xa4
 800c6e0:	f894 10a3 	ldrb.w	r1, [r4, #163]	; 0xa3
 800c6e4:	3508      	adds	r5, #8
 800c6e6:	eb03 2101 	add.w	r1, r3, r1, lsl #8
 800c6ea:	4811      	ldr	r0, [pc, #68]	; (800c730 <RDMDeviceResponder::Print()+0x8c>)
 800c6ec:	f7fc fcfc 	bl	80090e8 <printf>
 800c6f0:	f894 20a6 	ldrb.w	r2, [r4, #166]	; 0xa6
 800c6f4:	f894 10a5 	ldrb.w	r1, [r4, #165]	; 0xa5
 800c6f8:	b2f3      	uxtb	r3, r6
 800c6fa:	9500      	str	r5, [sp, #0]
 800c6fc:	480d      	ldr	r0, [pc, #52]	; (800c734 <RDMDeviceResponder::Print()+0x90>)
 800c6fe:	f7fc fcf3 	bl	80090e8 <printf>
 800c702:	f894 10a9 	ldrb.w	r1, [r4, #169]	; 0xa9
 800c706:	f894 30aa 	ldrb.w	r3, [r4, #170]	; 0xaa
 800c70a:	480b      	ldr	r0, [pc, #44]	; (800c738 <RDMDeviceResponder::Print()+0x94>)
 800c70c:	eb03 2101 	add.w	r1, r3, r1, lsl #8
 800c710:	f7fc fcea 	bl	80090e8 <printf>
 800c714:	f894 10ab 	ldrb.w	r1, [r4, #171]	; 0xab
 800c718:	4808      	ldr	r0, [pc, #32]	; (800c73c <RDMDeviceResponder::Print()+0x98>)
 800c71a:	b002      	add	sp, #8
 800c71c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c720:	f7fc bce2 	b.w	80090e8 <printf>
 800c724:	08015d2d 	stmdaeq	r1, {r0, r2, r3, r5, r8, sl, fp, ip, lr}
 800c728:	08015d4a 	stmdaeq	r1, {r1, r3, r6, r8, sl, fp, ip, lr}
 800c72c:	08015d63 	stmdaeq	r1, {r0, r1, r5, r6, r8, sl, fp, ip, lr}
 800c730:	08015d7b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r8, sl, fp, ip, lr}
 800c734:	08015d93 	stmdaeq	r1, {r0, r1, r4, r7, r8, sl, fp, ip, lr}
 800c738:	08015db1 	stmdaeq	r1, {r0, r4, r5, r7, r8, sl, fp, ip, lr}
 800c73c:	08015dc9 	stmdaeq	r1, {r0, r3, r6, r7, r8, sl, fp, ip, lr}

0800c740 <memcmp>:
 800c740:	b510      	push	{r4, lr}
 800c742:	3901      	subs	r1, #1
 800c744:	4402      	add	r2, r0
 800c746:	4290      	cmp	r0, r2
 800c748:	d101      	bne.n	800c74e <memcmp+0xe>
 800c74a:	2000      	movs	r0, #0
 800c74c:	e005      	b.n	800c75a <memcmp+0x1a>
 800c74e:	7803      	ldrb	r3, [r0, #0]
 800c750:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800c754:	42a3      	cmp	r3, r4
 800c756:	d001      	beq.n	800c75c <memcmp+0x1c>
 800c758:	1b18      	subs	r0, r3, r4
 800c75a:	bd10      	pop	{r4, pc}
 800c75c:	3001      	adds	r0, #1
 800c75e:	e7f2      	b.n	800c746 <memcmp+0x6>

0800c760 <memcpy.isra.0>:
 800c760:	3801      	subs	r0, #1
 800c762:	440a      	add	r2, r1
 800c764:	4291      	cmp	r1, r2
 800c766:	d100      	bne.n	800c76a <memcpy.isra.0+0xa>
 800c768:	4770      	bx	lr
 800c76a:	f811 3b01 	ldrb.w	r3, [r1], #1
 800c76e:	f800 3f01 	strb.w	r3, [r0, #1]!
 800c772:	e7f7      	b.n	800c764 <memcpy.isra.0+0x4>

0800c774 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>:
 800c774:	b570      	push	{r4, r5, r6, lr}
 800c776:	790d      	ldrb	r5, [r1, #4]
 800c778:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
 800c77c:	2d20      	cmp	r5, #32
 800c77e:	4604      	mov	r4, r0
 800c780:	bf28      	it	cs
 800c782:	2520      	movcs	r5, #32
 800c784:	6809      	ldr	r1, [r1, #0]
 800c786:	b183      	cbz	r3, 800c7aa <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x36>
 800c788:	f100 060a 	add.w	r6, r0, #10
 800c78c:	4630      	mov	r0, r6
 800c78e:	462a      	mov	r2, r5
 800c790:	f7ff ffe6 	bl	800c760 <memcpy.isra.0>
 800c794:	6f60      	ldr	r0, [r4, #116]	; 0x74
 800c796:	f884 502a 	strb.w	r5, [r4, #42]	; 0x2a
 800c79a:	b160      	cbz	r0, 800c7b6 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x42>
 800c79c:	6803      	ldr	r3, [r0, #0]
 800c79e:	462a      	mov	r2, r5
 800c7a0:	4631      	mov	r1, r6
 800c7a2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c7a6:	689b      	ldr	r3, [r3, #8]
 800c7a8:	4718      	bx	r3
 800c7aa:	462a      	mov	r2, r5
 800c7ac:	3051      	adds	r0, #81	; 0x51
 800c7ae:	f7ff ffd7 	bl	800c760 <memcpy.isra.0>
 800c7b2:	f884 5071 	strb.w	r5, [r4, #113]	; 0x71
 800c7b6:	bd70      	pop	{r4, r5, r6, pc}

0800c7b8 <RDMDeviceResponder::SetFactoryDefaults()>:
 800c7b8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c7ba:	4604      	mov	r4, r0
 800c7bc:	f06f 050c 	mvn.w	r5, #12
 800c7c0:	f100 0355 	add.w	r3, r0, #85	; 0x55
 800c7c4:	9300      	str	r3, [sp, #0]
 800c7c6:	f890 3075 	ldrb.w	r3, [r0, #117]	; 0x75
 800c7ca:	4669      	mov	r1, sp
 800c7cc:	3004      	adds	r0, #4
 800c7ce:	f88d 3004 	strb.w	r3, [sp, #4]
 800c7d2:	f7ff ffcf 	bl	800c774 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>
 800c7d6:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800c7da:	f894 002e 	ldrb.w	r0, [r4, #46]	; 0x2e
 800c7de:	f104 020d 	add.w	r2, r4, #13
 800c7e2:	1b2d      	subs	r5, r5, r4
 800c7e4:	18a9      	adds	r1, r5, r2
 800c7e6:	4288      	cmp	r0, r1
 800c7e8:	d865      	bhi.n	800c8b6 <RDMDeviceResponder::SetFactoryDefaults()+0xfe>
 800c7ea:	f8a4 3076 	strh.w	r3, [r4, #118]	; 0x76
 800c7ee:	2301      	movs	r3, #1
 800c7f0:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 800c7f4:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800c7f8:	681b      	ldr	r3, [r3, #0]
 800c7fa:	685d      	ldr	r5, [r3, #4]
 800c7fc:	b1f5      	cbz	r5, 800c83c <RDMDeviceResponder::SetFactoryDefaults()+0x84>
 800c7fe:	682b      	ldr	r3, [r5, #0]
 800c800:	4628      	mov	r0, r5
 800c802:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c804:	4798      	blx	r3
 800c806:	0a00      	lsrs	r0, r0, #8
 800c808:	f884 00a3 	strb.w	r0, [r4, #163]	; 0xa3
 800c80c:	682b      	ldr	r3, [r5, #0]
 800c80e:	4628      	mov	r0, r5
 800c810:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c812:	4798      	blx	r3
 800c814:	f884 00a4 	strb.w	r0, [r4, #164]	; 0xa4
 800c818:	682b      	ldr	r3, [r5, #0]
 800c81a:	4628      	mov	r0, r5
 800c81c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c81e:	4798      	blx	r3
 800c820:	0a00      	lsrs	r0, r0, #8
 800c822:	f884 00a7 	strb.w	r0, [r4, #167]	; 0xa7
 800c826:	682b      	ldr	r3, [r5, #0]
 800c828:	4628      	mov	r0, r5
 800c82a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c82c:	4798      	blx	r3
 800c82e:	6823      	ldr	r3, [r4, #0]
 800c830:	f884 00a8 	strb.w	r0, [r4, #168]	; 0xa8
 800c834:	4629      	mov	r1, r5
 800c836:	4620      	mov	r0, r4
 800c838:	689b      	ldr	r3, [r3, #8]
 800c83a:	4798      	blx	r3
 800c83c:	f8b4 50c4 	ldrh.w	r5, [r4, #196]	; 0xc4
 800c840:	1e6b      	subs	r3, r5, #1
 800c842:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800c846:	d218      	bcs.n	800c87a <RDMDeviceResponder::SetFactoryDefaults()+0xc2>
 800c848:	f894 30a5 	ldrb.w	r3, [r4, #165]	; 0xa5
 800c84c:	f8d4 2090 	ldr.w	r2, [r4, #144]	; 0x90
 800c850:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800c854:	3b01      	subs	r3, #1
 800c856:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800c85a:	6858      	ldr	r0, [r3, #4]
 800c85c:	b168      	cbz	r0, 800c87a <RDMDeviceResponder::SetFactoryDefaults()+0xc2>
 800c85e:	6803      	ldr	r3, [r0, #0]
 800c860:	4629      	mov	r1, r5
 800c862:	6a1b      	ldr	r3, [r3, #32]
 800c864:	4798      	blx	r3
 800c866:	b120      	cbz	r0, 800c872 <RDMDeviceResponder::SetFactoryDefaults()+0xba>
 800c868:	0a2b      	lsrs	r3, r5, #8
 800c86a:	f884 30a7 	strb.w	r3, [r4, #167]	; 0xa7
 800c86e:	f884 50a8 	strb.w	r5, [r4, #168]	; 0xa8
 800c872:	6823      	ldr	r3, [r4, #0]
 800c874:	4620      	mov	r0, r4
 800c876:	68db      	ldr	r3, [r3, #12]
 800c878:	4798      	blx	r3
 800c87a:	2213      	movs	r2, #19
 800c87c:	f104 0199 	add.w	r1, r4, #153	; 0x99
 800c880:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 800c884:	f7ff ff6c 	bl	800c760 <memcpy.isra.0>
 800c888:	f104 0088 	add.w	r0, r4, #136	; 0x88
 800c88c:	f7ff fd4b 	bl	800c326 <RDMSubDevices::SetFactoryDefaults()>
 800c890:	f894 30a8 	ldrb.w	r3, [r4, #168]	; 0xa8
 800c894:	f894 20a5 	ldrb.w	r2, [r4, #165]	; 0xa5
 800c898:	f8d4 00c8 	ldr.w	r0, [r4, #200]	; 0xc8
 800c89c:	4413      	add	r3, r2
 800c89e:	f8a4 30c2 	strh.w	r3, [r4, #194]	; 0xc2
 800c8a2:	2301      	movs	r3, #1
 800c8a4:	f884 30c1 	strb.w	r3, [r4, #193]	; 0xc1
 800c8a8:	b150      	cbz	r0, 800c8c0 <RDMDeviceResponder::SetFactoryDefaults()+0x108>
 800c8aa:	6803      	ldr	r3, [r0, #0]
 800c8ac:	689b      	ldr	r3, [r3, #8]
 800c8ae:	b003      	add	sp, #12
 800c8b0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800c8b4:	4718      	bx	r3
 800c8b6:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800c8ba:	440b      	add	r3, r1
 800c8bc:	b29b      	uxth	r3, r3
 800c8be:	e791      	b.n	800c7e4 <RDMDeviceResponder::SetFactoryDefaults()+0x2c>
 800c8c0:	b003      	add	sp, #12
 800c8c2:	bd30      	pop	{r4, r5, pc}

0800c8c4 <RDMHandler::RDMHandler(bool)>:
 800c8c4:	2200      	movs	r2, #0
 800c8c6:	7001      	strb	r1, [r0, #0]
 800c8c8:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800c8cc:	7042      	strb	r2, [r0, #1]
 800c8ce:	4770      	bx	lr

0800c8d0 <RDMHandler::HandleString(char const*, unsigned int)>:
 800c8d0:	6883      	ldr	r3, [r0, #8]
 800c8d2:	f803 2f17 	strb.w	r2, [r3, #23]!
 800c8d6:	440a      	add	r2, r1
 800c8d8:	4291      	cmp	r1, r2
 800c8da:	d100      	bne.n	800c8de <RDMHandler::HandleString(char const*, unsigned int)+0xe>
 800c8dc:	4770      	bx	lr
 800c8de:	f811 0b01 	ldrb.w	r0, [r1], #1
 800c8e2:	f803 0f01 	strb.w	r0, [r3, #1]!
 800c8e6:	e7f7      	b.n	800c8d8 <RDMHandler::HandleString(char const*, unsigned int)+0x8>

0800c8e8 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)>:
 800c8e8:	b570      	push	{r4, r5, r6, lr}
 800c8ea:	e9d0 4301 	ldrd	r4, r3, [r0, #4]
 800c8ee:	25cc      	movs	r5, #204	; 0xcc
 800c8f0:	701d      	strb	r5, [r3, #0]
 800c8f2:	7825      	ldrb	r5, [r4, #0]
 800c8f4:	705d      	strb	r5, [r3, #1]
 800c8f6:	7ba5      	ldrb	r5, [r4, #14]
 800c8f8:	73dd      	strb	r5, [r3, #15]
 800c8fa:	2500      	movs	r5, #0
 800c8fc:	745d      	strb	r5, [r3, #17]
 800c8fe:	7c65      	ldrb	r5, [r4, #17]
 800c900:	749d      	strb	r5, [r3, #18]
 800c902:	7ca5      	ldrb	r5, [r4, #18]
 800c904:	74dd      	strb	r5, [r3, #19]
 800c906:	7ce5      	ldrb	r5, [r4, #19]
 800c908:	3501      	adds	r5, #1
 800c90a:	751d      	strb	r5, [r3, #20]
 800c90c:	7d25      	ldrb	r5, [r4, #20]
 800c90e:	755d      	strb	r5, [r3, #21]
 800c910:	7d65      	ldrb	r5, [r4, #21]
 800c912:	759d      	strb	r5, [r3, #22]
 800c914:	b119      	cbz	r1, 800c91e <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x36>
 800c916:	1e4d      	subs	r5, r1, #1
 800c918:	2d01      	cmp	r5, #1
 800c91a:	d921      	bls.n	800c960 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x78>
 800c91c:	bd70      	pop	{r4, r5, r6, pc}
 800c91e:	7dda      	ldrb	r2, [r3, #23]
 800c920:	7419      	strb	r1, [r3, #16]
 800c922:	3218      	adds	r2, #24
 800c924:	709a      	strb	r2, [r3, #2]
 800c926:	4a15      	ldr	r2, [pc, #84]	; (800c97c <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x94>)
 800c928:	1de1      	adds	r1, r4, #7
 800c92a:	6812      	ldr	r2, [r2, #0]
 800c92c:	1c9d      	adds	r5, r3, #2
 800c92e:	3203      	adds	r2, #3
 800c930:	340d      	adds	r4, #13
 800c932:	f811 6f01 	ldrb.w	r6, [r1, #1]!
 800c936:	f805 6f01 	strb.w	r6, [r5, #1]!
 800c93a:	f812 6f01 	ldrb.w	r6, [r2, #1]!
 800c93e:	42a1      	cmp	r1, r4
 800c940:	71ae      	strb	r6, [r5, #6]
 800c942:	d1f6      	bne.n	800c932 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x4a>
 800c944:	2200      	movs	r2, #0
 800c946:	7899      	ldrb	r1, [r3, #2]
 800c948:	4613      	mov	r3, r2
 800c94a:	6884      	ldr	r4, [r0, #8]
 800c94c:	428a      	cmp	r2, r1
 800c94e:	eb04 0502 	add.w	r5, r4, r2
 800c952:	d30e      	bcc.n	800c972 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x8a>
 800c954:	0a1a      	lsrs	r2, r3, #8
 800c956:	702a      	strb	r2, [r5, #0]
 800c958:	6882      	ldr	r2, [r0, #8]
 800c95a:	440a      	add	r2, r1
 800c95c:	7053      	strb	r3, [r2, #1]
 800c95e:	e7dd      	b.n	800c91c <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x34>
 800c960:	7419      	strb	r1, [r3, #16]
 800c962:	2102      	movs	r1, #2
 800c964:	251a      	movs	r5, #26
 800c966:	75d9      	strb	r1, [r3, #23]
 800c968:	0a11      	lsrs	r1, r2, #8
 800c96a:	709d      	strb	r5, [r3, #2]
 800c96c:	7619      	strb	r1, [r3, #24]
 800c96e:	765a      	strb	r2, [r3, #25]
 800c970:	e7d9      	b.n	800c926 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x3e>
 800c972:	5ca5      	ldrb	r5, [r4, r2]
 800c974:	3201      	adds	r2, #1
 800c976:	442b      	add	r3, r5
 800c978:	b29b      	uxth	r3, r3
 800c97a:	e7e7      	b.n	800c94c <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x64>
 800c97c:	20002014 	andcs	r2, r0, r4, lsl r0

0800c980 <RDMHandler::RespondMessageAck()>:
 800c980:	6843      	ldr	r3, [r0, #4]
 800c982:	7d9a      	ldrb	r2, [r3, #22]
 800c984:	b90a      	cbnz	r2, 800c98a <RDMHandler::RespondMessageAck()+0xa>
 800c986:	2218      	movs	r2, #24
 800c988:	705a      	strb	r2, [r3, #1]
 800c98a:	2200      	movs	r2, #0
 800c98c:	4611      	mov	r1, r2
 800c98e:	f7ff bfab 	b.w	800c8e8 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)>
	...

0800c994 <RDMHandler::GetDeviceInfo(unsigned short)>:
 800c994:	b538      	push	{r3, r4, r5, lr}
 800c996:	4b18      	ldr	r3, [pc, #96]	; (800c9f8 <RDMHandler::GetDeviceInfo(unsigned short)+0x64>)
 800c998:	4605      	mov	r5, r0
 800c99a:	681c      	ldr	r4, [r3, #0]
 800c99c:	b349      	cbz	r1, 800c9f2 <RDMHandler::GetDeviceInfo(unsigned short)+0x5e>
 800c99e:	f104 0088 	add.w	r0, r4, #136	; 0x88
 800c9a2:	f7ff fc8f 	bl	800c2c4 <RDMSubDevices::GetInfo(unsigned short)>
 800c9a6:	b1b8      	cbz	r0, 800c9d8 <RDMHandler::GetDeviceInfo(unsigned short)+0x44>
 800c9a8:	8803      	ldrh	r3, [r0, #0]
 800c9aa:	0a1b      	lsrs	r3, r3, #8
 800c9ac:	f884 30b6 	strb.w	r3, [r4, #182]	; 0xb6
 800c9b0:	8803      	ldrh	r3, [r0, #0]
 800c9b2:	f884 30b7 	strb.w	r3, [r4, #183]	; 0xb7
 800c9b6:	7903      	ldrb	r3, [r0, #4]
 800c9b8:	f884 30b8 	strb.w	r3, [r4, #184]	; 0xb8
 800c9bc:	7943      	ldrb	r3, [r0, #5]
 800c9be:	f884 30b9 	strb.w	r3, [r4, #185]	; 0xb9
 800c9c2:	8843      	ldrh	r3, [r0, #2]
 800c9c4:	0a1b      	lsrs	r3, r3, #8
 800c9c6:	f884 30ba 	strb.w	r3, [r4, #186]	; 0xba
 800c9ca:	8843      	ldrh	r3, [r0, #2]
 800c9cc:	f884 30bb 	strb.w	r3, [r4, #187]	; 0xbb
 800c9d0:	f890 3027 	ldrb.w	r3, [r0, #39]	; 0x27
 800c9d4:	f884 30be 	strb.w	r3, [r4, #190]	; 0xbe
 800c9d8:	f104 01ac 	add.w	r1, r4, #172	; 0xac
 800c9dc:	2213      	movs	r2, #19
 800c9de:	68a8      	ldr	r0, [r5, #8]
 800c9e0:	75c2      	strb	r2, [r0, #23]
 800c9e2:	3018      	adds	r0, #24
 800c9e4:	f7ff febc 	bl	800c760 <memcpy.isra.0>
 800c9e8:	4628      	mov	r0, r5
 800c9ea:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c9ee:	f7ff bfc7 	b.w	800c980 <RDMHandler::RespondMessageAck()>
 800c9f2:	f104 0199 	add.w	r1, r4, #153	; 0x99
 800c9f6:	e7f1      	b.n	800c9dc <RDMHandler::GetDeviceInfo(unsigned short)+0x48>
 800c9f8:	20002014 	andcs	r2, r0, r4, lsl r0

0800c9fc <RDMHandler::GetFactoryDefaults(unsigned short)>:
 800c9fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c9fe:	2301      	movs	r3, #1
 800ca00:	6886      	ldr	r6, [r0, #8]
 800ca02:	4605      	mov	r5, r0
 800ca04:	75f3      	strb	r3, [r6, #23]
 800ca06:	4b1c      	ldr	r3, [pc, #112]	; (800ca78 <RDMHandler::GetFactoryDefaults(unsigned short)+0x7c>)
 800ca08:	681c      	ldr	r4, [r3, #0]
 800ca0a:	f894 30c1 	ldrb.w	r3, [r4, #193]	; 0xc1
 800ca0e:	b37b      	cbz	r3, 800ca70 <RDMHandler::GetFactoryDefaults(unsigned short)+0x74>
 800ca10:	f06f 0c0c 	mvn.w	ip, #12
 800ca14:	f8b4 1076 	ldrh.w	r1, [r4, #118]	; 0x76
 800ca18:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800ca1c:	f894 002e 	ldrb.w	r0, [r4, #46]	; 0x2e
 800ca20:	f104 020d 	add.w	r2, r4, #13
 800ca24:	ebac 0c04 	sub.w	ip, ip, r4
 800ca28:	eb0c 0702 	add.w	r7, ip, r2
 800ca2c:	4287      	cmp	r7, r0
 800ca2e:	d30a      	bcc.n	800ca46 <RDMHandler::GetFactoryDefaults(unsigned short)+0x4a>
 800ca30:	4299      	cmp	r1, r3
 800ca32:	d00d      	beq.n	800ca50 <RDMHandler::GetFactoryDefaults(unsigned short)+0x54>
 800ca34:	2300      	movs	r3, #0
 800ca36:	f884 30c1 	strb.w	r3, [r4, #193]	; 0xc1
 800ca3a:	7633      	strb	r3, [r6, #24]
 800ca3c:	4628      	mov	r0, r5
 800ca3e:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800ca42:	f7ff bf9d 	b.w	800c980 <RDMHandler::RespondMessageAck()>
 800ca46:	f812 7f01 	ldrb.w	r7, [r2, #1]!
 800ca4a:	443b      	add	r3, r7
 800ca4c:	b29b      	uxth	r3, r3
 800ca4e:	e7eb      	b.n	800ca28 <RDMHandler::GetFactoryDefaults(unsigned short)+0x2c>
 800ca50:	f894 30a8 	ldrb.w	r3, [r4, #168]	; 0xa8
 800ca54:	f894 10a5 	ldrb.w	r1, [r4, #165]	; 0xa5
 800ca58:	f8b4 20c2 	ldrh.w	r2, [r4, #194]	; 0xc2
 800ca5c:	440b      	add	r3, r1
 800ca5e:	429a      	cmp	r2, r3
 800ca60:	d1e8      	bne.n	800ca34 <RDMHandler::GetFactoryDefaults(unsigned short)+0x38>
 800ca62:	f104 0088 	add.w	r0, r4, #136	; 0x88
 800ca66:	f7ff fc4b 	bl	800c300 <RDMSubDevices::GetFactoryDefaults()>
 800ca6a:	4603      	mov	r3, r0
 800ca6c:	2800      	cmp	r0, #0
 800ca6e:	d0e2      	beq.n	800ca36 <RDMHandler::GetFactoryDefaults(unsigned short)+0x3a>
 800ca70:	f894 30c1 	ldrb.w	r3, [r4, #193]	; 0xc1
 800ca74:	e7e1      	b.n	800ca3a <RDMHandler::GetFactoryDefaults(unsigned short)+0x3e>
 800ca76:	bf00      	nop
 800ca78:	20002014 	andcs	r2, r0, r4, lsl r0

0800ca7c <RDMHandler::GetDeviceModelDescription(unsigned short)>:
 800ca7c:	b510      	push	{r4, lr}
 800ca7e:	4604      	mov	r4, r0
 800ca80:	220a      	movs	r2, #10
 800ca82:	4904      	ldr	r1, [pc, #16]	; (800ca94 <RDMHandler::GetDeviceModelDescription(unsigned short)+0x18>)
 800ca84:	f7ff ff24 	bl	800c8d0 <RDMHandler::HandleString(char const*, unsigned int)>
 800ca88:	4620      	mov	r0, r4
 800ca8a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ca8e:	f7ff bf77 	b.w	800c980 <RDMHandler::RespondMessageAck()>
 800ca92:	bf00      	nop
 800ca94:	08015026 	stmdaeq	r1, {r1, r2, r5, ip, lr}

0800ca98 <RDMHandler::GetManufacturerLabel(unsigned short)>:
 800ca98:	b510      	push	{r4, lr}
 800ca9a:	4604      	mov	r4, r0
 800ca9c:	4b05      	ldr	r3, [pc, #20]	; (800cab4 <RDMHandler::GetManufacturerLabel(unsigned short)+0x1c>)
 800ca9e:	6819      	ldr	r1, [r3, #0]
 800caa0:	f891 204f 	ldrb.w	r2, [r1, #79]	; 0x4f
 800caa4:	312f      	adds	r1, #47	; 0x2f
 800caa6:	f7ff ff13 	bl	800c8d0 <RDMHandler::HandleString(char const*, unsigned int)>
 800caaa:	4620      	mov	r0, r4
 800caac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cab0:	f7ff bf66 	b.w	800c980 <RDMHandler::RespondMessageAck()>
 800cab4:	20002014 	andcs	r2, r0, r4, lsl r0

0800cab8 <RDMHandler::GetDeviceLabel(unsigned short)>:
 800cab8:	4b0d      	ldr	r3, [pc, #52]	; (800caf0 <RDMHandler::GetDeviceLabel(unsigned short)+0x38>)
 800caba:	b513      	push	{r0, r1, r4, lr}
 800cabc:	4604      	mov	r4, r0
 800cabe:	6818      	ldr	r0, [r3, #0]
 800cac0:	b171      	cbz	r1, 800cae0 <RDMHandler::GetDeviceLabel(unsigned short)+0x28>
 800cac2:	466a      	mov	r2, sp
 800cac4:	3088      	adds	r0, #136	; 0x88
 800cac6:	f7ff fc05 	bl	800c2d4 <RDMSubDevices::GetLabel(unsigned short, TRDMDeviceInfoData*)>
 800caca:	4620      	mov	r0, r4
 800cacc:	f89d 2004 	ldrb.w	r2, [sp, #4]
 800cad0:	9900      	ldr	r1, [sp, #0]
 800cad2:	f7ff fefd 	bl	800c8d0 <RDMHandler::HandleString(char const*, unsigned int)>
 800cad6:	4620      	mov	r0, r4
 800cad8:	f7ff ff52 	bl	800c980 <RDMHandler::RespondMessageAck()>
 800cadc:	b002      	add	sp, #8
 800cade:	bd10      	pop	{r4, pc}
 800cae0:	f100 030e 	add.w	r3, r0, #14
 800cae4:	9300      	str	r3, [sp, #0]
 800cae6:	f890 302e 	ldrb.w	r3, [r0, #46]	; 0x2e
 800caea:	f88d 3004 	strb.w	r3, [sp, #4]
 800caee:	e7ec      	b.n	800caca <RDMHandler::GetDeviceLabel(unsigned short)+0x12>
 800caf0:	20002014 	andcs	r2, r0, r4, lsl r0

0800caf4 <RDMHandler::GetIdentifyDevice(unsigned short)>:
 800caf4:	2201      	movs	r2, #1
 800caf6:	6883      	ldr	r3, [r0, #8]
 800caf8:	75da      	strb	r2, [r3, #23]
 800cafa:	4a02      	ldr	r2, [pc, #8]	; (800cb04 <RDMHandler::GetIdentifyDevice(unsigned short)+0x10>)
 800cafc:	7812      	ldrb	r2, [r2, #0]
 800cafe:	761a      	strb	r2, [r3, #24]
 800cb00:	f7ff bf3e 	b.w	800c980 <RDMHandler::RespondMessageAck()>
 800cb04:	20002018 	andcs	r2, r0, r8, lsl r0

0800cb08 <RDMHandler::RespondMessageNack(unsigned short)>:
 800cb08:	460a      	mov	r2, r1
 800cb0a:	2102      	movs	r1, #2
 800cb0c:	f7ff beec 	b.w	800c8e8 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)>

0800cb10 <RDMHandler::SetResetDevice(bool, unsigned short)>:
 800cb10:	b510      	push	{r4, lr}
 800cb12:	6843      	ldr	r3, [r0, #4]
 800cb14:	4604      	mov	r4, r0
 800cb16:	7d9a      	ldrb	r2, [r3, #22]
 800cb18:	2a01      	cmp	r2, #1
 800cb1a:	d004      	beq.n	800cb26 <RDMHandler::SetResetDevice(bool, unsigned short)+0x16>
 800cb1c:	2101      	movs	r1, #1
 800cb1e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cb22:	f7ff bff1 	b.w	800cb08 <RDMHandler::RespondMessageNack(unsigned short)>
 800cb26:	7ddb      	ldrb	r3, [r3, #23]
 800cb28:	2b01      	cmp	r3, #1
 800cb2a:	d003      	beq.n	800cb34 <RDMHandler::SetResetDevice(bool, unsigned short)+0x24>
 800cb2c:	2bff      	cmp	r3, #255	; 0xff
 800cb2e:	d001      	beq.n	800cb34 <RDMHandler::SetResetDevice(bool, unsigned short)+0x24>
 800cb30:	2106      	movs	r1, #6
 800cb32:	e7f4      	b.n	800cb1e <RDMHandler::SetResetDevice(bool, unsigned short)+0xe>
 800cb34:	2100      	movs	r1, #0
 800cb36:	68a2      	ldr	r2, [r4, #8]
 800cb38:	2bff      	cmp	r3, #255	; 0xff
 800cb3a:	75d1      	strb	r1, [r2, #23]
 800cb3c:	d102      	bne.n	800cb44 <RDMHandler::SetResetDevice(bool, unsigned short)+0x34>
 800cb3e:	2104      	movs	r1, #4
 800cb40:	4620      	mov	r0, r4
 800cb42:	e7ec      	b.n	800cb1e <RDMHandler::SetResetDevice(bool, unsigned short)+0xe>
 800cb44:	4b03      	ldr	r3, [pc, #12]	; (800cb54 <RDMHandler::SetResetDevice(bool, unsigned short)+0x44>)
 800cb46:	6818      	ldr	r0, [r3, #0]
 800cb48:	f005 fc90 	bl	801246c <Hardware::Reboot()>
 800cb4c:	2800      	cmp	r0, #0
 800cb4e:	d0f6      	beq.n	800cb3e <RDMHandler::SetResetDevice(bool, unsigned short)+0x2e>
 800cb50:	bd10      	pop	{r4, pc}
 800cb52:	bf00      	nop
 800cb54:	2000b868 	andcs	fp, r0, r8, ror #16

0800cb58 <RDMHandler::SetIdentifyDevice(bool, unsigned short)>:
 800cb58:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cb5a:	6843      	ldr	r3, [r0, #4]
 800cb5c:	460d      	mov	r5, r1
 800cb5e:	7d99      	ldrb	r1, [r3, #22]
 800cb60:	4604      	mov	r4, r0
 800cb62:	2901      	cmp	r1, #1
 800cb64:	d004      	beq.n	800cb70 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x18>
 800cb66:	2101      	movs	r1, #1
 800cb68:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800cb6c:	f7ff bfcc 	b.w	800cb08 <RDMHandler::RespondMessageNack(unsigned short)>
 800cb70:	7ddb      	ldrb	r3, [r3, #23]
 800cb72:	2b01      	cmp	r3, #1
 800cb74:	d901      	bls.n	800cb7a <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x22>
 800cb76:	2106      	movs	r1, #6
 800cb78:	e7f6      	b.n	800cb68 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x10>
 800cb7a:	4a12      	ldr	r2, [pc, #72]	; (800cbc4 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x6c>)
 800cb7c:	4f12      	ldr	r7, [pc, #72]	; (800cbc8 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x70>)
 800cb7e:	6816      	ldr	r6, [r2, #0]
 800cb80:	4a12      	ldr	r2, [pc, #72]	; (800cbcc <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x74>)
 800cb82:	6810      	ldr	r0, [r2, #0]
 800cb84:	4a12      	ldr	r2, [pc, #72]	; (800cbd0 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x78>)
 800cb86:	b983      	cbnz	r3, 800cbaa <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x52>
 800cb88:	2102      	movs	r1, #2
 800cb8a:	7013      	strb	r3, [r2, #0]
 800cb8c:	f005 fbce 	bl	801232c <LedBlink::SetMode(ledblink::Mode)>
 800cb90:	7839      	ldrb	r1, [r7, #0]
 800cb92:	b111      	cbz	r1, 800cb9a <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x42>
 800cb94:	4630      	mov	r0, r6
 800cb96:	f000 f9a8 	bl	800ceea <RDMIdentify::Off(rdm::identify::Mode)>
 800cb9a:	b98d      	cbnz	r5, 800cbc0 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x68>
 800cb9c:	68a3      	ldr	r3, [r4, #8]
 800cb9e:	4620      	mov	r0, r4
 800cba0:	75dd      	strb	r5, [r3, #23]
 800cba2:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800cba6:	f7ff beeb 	b.w	800c980 <RDMHandler::RespondMessageAck()>
 800cbaa:	7011      	strb	r1, [r2, #0]
 800cbac:	2104      	movs	r1, #4
 800cbae:	f005 fbbd 	bl	801232c <LedBlink::SetMode(ledblink::Mode)>
 800cbb2:	7839      	ldrb	r1, [r7, #0]
 800cbb4:	2900      	cmp	r1, #0
 800cbb6:	d0f0      	beq.n	800cb9a <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x42>
 800cbb8:	4630      	mov	r0, r6
 800cbba:	f000 f995 	bl	800cee8 <RDMIdentify::On(rdm::identify::Mode)>
 800cbbe:	e7ec      	b.n	800cb9a <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x42>
 800cbc0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800cbc2:	bf00      	nop
 800cbc4:	2000201c 	andcs	r2, r0, ip, lsl r0
 800cbc8:	20002019 	andcs	r2, r0, r9, lsl r0
 800cbcc:	2000b864 	andcs	fp, r0, r4, ror #16
 800cbd0:	20002018 	andcs	r2, r0, r8, lsl r0

0800cbd4 <RDMHandler::SetFactoryDefaults(bool, unsigned short)>:
 800cbd4:	b538      	push	{r3, r4, r5, lr}
 800cbd6:	6843      	ldr	r3, [r0, #4]
 800cbd8:	4604      	mov	r4, r0
 800cbda:	7d9b      	ldrb	r3, [r3, #22]
 800cbdc:	460d      	mov	r5, r1
 800cbde:	b123      	cbz	r3, 800cbea <RDMHandler::SetFactoryDefaults(bool, unsigned short)+0x16>
 800cbe0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800cbe4:	2101      	movs	r1, #1
 800cbe6:	f7ff bf8f 	b.w	800cb08 <RDMHandler::RespondMessageNack(unsigned short)>
 800cbea:	4b06      	ldr	r3, [pc, #24]	; (800cc04 <RDMHandler::SetFactoryDefaults(bool, unsigned short)+0x30>)
 800cbec:	6818      	ldr	r0, [r3, #0]
 800cbee:	f7ff fde3 	bl	800c7b8 <RDMDeviceResponder::SetFactoryDefaults()>
 800cbf2:	b935      	cbnz	r5, 800cc02 <RDMHandler::SetFactoryDefaults(bool, unsigned short)+0x2e>
 800cbf4:	68a3      	ldr	r3, [r4, #8]
 800cbf6:	4620      	mov	r0, r4
 800cbf8:	75dd      	strb	r5, [r3, #23]
 800cbfa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800cbfe:	f7ff bebf 	b.w	800c980 <RDMHandler::RespondMessageAck()>
 800cc02:	bd38      	pop	{r3, r4, r5, pc}
 800cc04:	20002014 	andcs	r2, r0, r4, lsl r0

0800cc08 <RDMHandler::SetDeviceLabel(bool, unsigned short)>:
 800cc08:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800cc0a:	6845      	ldr	r5, [r0, #4]
 800cc0c:	460e      	mov	r6, r1
 800cc0e:	7dab      	ldrb	r3, [r5, #22]
 800cc10:	4604      	mov	r4, r0
 800cc12:	2b20      	cmp	r3, #32
 800cc14:	4611      	mov	r1, r2
 800cc16:	d905      	bls.n	800cc24 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x1c>
 800cc18:	2101      	movs	r1, #1
 800cc1a:	b002      	add	sp, #8
 800cc1c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cc20:	f7ff bf72 	b.w	800cb08 <RDMHandler::RespondMessageNack(unsigned short)>
 800cc24:	4a0d      	ldr	r2, [pc, #52]	; (800cc5c <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x54>)
 800cc26:	6810      	ldr	r0, [r2, #0]
 800cc28:	f105 0217 	add.w	r2, r5, #23
 800cc2c:	b159      	cbz	r1, 800cc46 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x3e>
 800cc2e:	3088      	adds	r0, #136	; 0x88
 800cc30:	f7ff fb59 	bl	800c2e6 <RDMSubDevices::SetLabel(unsigned short, char const*, unsigned char)>
 800cc34:	b97e      	cbnz	r6, 800cc56 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x4e>
 800cc36:	4620      	mov	r0, r4
 800cc38:	68a3      	ldr	r3, [r4, #8]
 800cc3a:	75de      	strb	r6, [r3, #23]
 800cc3c:	b002      	add	sp, #8
 800cc3e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cc42:	f7ff be9d 	b.w	800c980 <RDMHandler::RespondMessageAck()>
 800cc46:	4669      	mov	r1, sp
 800cc48:	3004      	adds	r0, #4
 800cc4a:	9200      	str	r2, [sp, #0]
 800cc4c:	f88d 3004 	strb.w	r3, [sp, #4]
 800cc50:	f7ff fd90 	bl	800c774 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>
 800cc54:	e7ee      	b.n	800cc34 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x2c>
 800cc56:	b002      	add	sp, #8
 800cc58:	bd70      	pop	{r4, r5, r6, pc}
 800cc5a:	bf00      	nop
 800cc5c:	20002014 	andcs	r2, r0, r4, lsl r0

0800cc60 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)>:
 800cc60:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800cc64:	4616      	mov	r6, r2
 800cc66:	2700      	movs	r7, #0
 800cc68:	f006 04ef 	and.w	r4, r6, #239	; 0xef
 800cc6c:	2c20      	cmp	r4, #32
 800cc6e:	46be      	mov	lr, r7
 800cc70:	f89d 801c 	ldrb.w	r8, [sp, #28]
 800cc74:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 800cc78:	d004      	beq.n	800cc84 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x24>
 800cc7a:	2105      	movs	r1, #5
 800cc7c:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800cc80:	f7ff bf42 	b.w	800cb08 <RDMHandler::RespondMessageNack(unsigned short)>
 800cc84:	4c2d      	ldr	r4, [pc, #180]	; (800cd3c <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xdc>)
 800cc86:	6824      	ldr	r4, [r4, #0]
 800cc88:	88a4      	ldrh	r4, [r4, #4]
 800cc8a:	4294      	cmp	r4, r2
 800cc8c:	d205      	bcs.n	800cc9a <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x3a>
 800cc8e:	f64f 74ff 	movw	r4, #65535	; 0xffff
 800cc92:	42a2      	cmp	r2, r4
 800cc94:	d001      	beq.n	800cc9a <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x3a>
 800cc96:	2109      	movs	r1, #9
 800cc98:	e7f0      	b.n	800cc7c <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1c>
 800cc9a:	f04f 0c14 	mov.w	ip, #20
 800cc9e:	2400      	movs	r4, #0
 800cca0:	4d27      	ldr	r5, [pc, #156]	; (800cd40 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xe0>)
 800cca2:	f8b5 9000 	ldrh.w	r9, [r5]
 800cca6:	4599      	cmp	r9, r3
 800cca8:	bf02      	ittt	eq
 800ccaa:	462c      	moveq	r4, r5
 800ccac:	7daf      	ldrbeq	r7, [r5, #22]
 800ccae:	f895 e017 	ldrbeq.w	lr, [r5, #23]
 800ccb2:	f1bc 0c01 	subs.w	ip, ip, #1
 800ccb6:	f105 0518 	add.w	r5, r5, #24
 800ccba:	d1f2      	bne.n	800cca2 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x42>
 800ccbc:	b90c      	cbnz	r4, 800ccc2 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x62>
 800ccbe:	2100      	movs	r1, #0
 800ccc0:	e7dc      	b.n	800cc7c <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1c>
 800ccc2:	7803      	ldrb	r3, [r0, #0]
 800ccc4:	b19b      	cbz	r3, 800ccee <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x8e>
 800ccc6:	2f00      	cmp	r7, #0
 800ccc8:	d0f9      	beq.n	800ccbe <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x5e>
 800ccca:	2e20      	cmp	r6, #32
 800cccc:	d121      	bne.n	800cd12 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xb2>
 800ccce:	2900      	cmp	r1, #0
 800ccd0:	d131      	bne.n	800cd36 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xd6>
 800ccd2:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800ccd6:	429a      	cmp	r2, r3
 800ccd8:	d0dd      	beq.n	800cc96 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x36>
 800ccda:	6863      	ldr	r3, [r4, #4]
 800ccdc:	b913      	cbnz	r3, 800cce4 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x84>
 800ccde:	68a1      	ldr	r1, [r4, #8]
 800cce0:	07cd      	lsls	r5, r1, #31
 800cce2:	d5ca      	bpl.n	800cc7a <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1a>
 800cce4:	7d21      	ldrb	r1, [r4, #20]
 800cce6:	4541      	cmp	r1, r8
 800cce8:	d005      	beq.n	800ccf6 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x96>
 800ccea:	2101      	movs	r1, #1
 800ccec:	e7c6      	b.n	800cc7c <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1c>
 800ccee:	f1be 0f00 	cmp.w	lr, #0
 800ccf2:	d1ea      	bne.n	800ccca <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x6a>
 800ccf4:	e7e3      	b.n	800ccbe <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x5e>
 800ccf6:	68a1      	ldr	r1, [r4, #8]
 800ccf8:	eb00 0461 	add.w	r4, r0, r1, asr #1
 800ccfc:	104d      	asrs	r5, r1, #1
 800ccfe:	07c9      	lsls	r1, r1, #31
 800cd00:	bf48      	it	mi
 800cd02:	5941      	ldrmi	r1, [r0, r5]
 800cd04:	4620      	mov	r0, r4
 800cd06:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800cd0a:	bf48      	it	mi
 800cd0c:	58cb      	ldrmi	r3, [r1, r3]
 800cd0e:	4611      	mov	r1, r2
 800cd10:	4718      	bx	r3
 800cd12:	e9d4 5303 	ldrd	r5, r3, [r4, #12]
 800cd16:	f003 0401 	and.w	r4, r3, #1
 800cd1a:	b90d      	cbnz	r5, 800cd20 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xc0>
 800cd1c:	2c00      	cmp	r4, #0
 800cd1e:	d0ac      	beq.n	800cc7a <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1a>
 800cd20:	105e      	asrs	r6, r3, #1
 800cd22:	eb00 0363 	add.w	r3, r0, r3, asr #1
 800cd26:	b10c      	cbz	r4, 800cd2c <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xcc>
 800cd28:	5980      	ldr	r0, [r0, r6]
 800cd2a:	5945      	ldr	r5, [r0, r5]
 800cd2c:	4618      	mov	r0, r3
 800cd2e:	462b      	mov	r3, r5
 800cd30:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800cd34:	4718      	bx	r3
 800cd36:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800cd3a:	bf00      	nop
 800cd3c:	20002010 	andcs	r2, r0, r0, lsl r0
 800cd40:	08015e04 	stmdaeq	r1, {r2, r9, sl, fp, ip, lr}

0800cd44 <RDMHandler::HandleData(unsigned char const*, unsigned char*)>:
 800cd44:	23ff      	movs	r3, #255	; 0xff
 800cd46:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cd4a:	7013      	strb	r3, [r2, #0]
 800cd4c:	e9c0 1201 	strd	r1, r2, [r0, #4]
 800cd50:	7ccb      	ldrb	r3, [r1, #19]
 800cd52:	b085      	sub	sp, #20
 800cd54:	7d4f      	ldrb	r7, [r1, #21]
 800cd56:	9303      	str	r3, [sp, #12]
 800cd58:	7d0b      	ldrb	r3, [r1, #20]
 800cd5a:	f101 0a02 	add.w	sl, r1, #2
 800cd5e:	eb07 2703 	add.w	r7, r7, r3, lsl #8
 800cd62:	4b5b      	ldr	r3, [pc, #364]	; (800ced0 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x18c>)
 800cd64:	4606      	mov	r6, r0
 800cd66:	460d      	mov	r5, r1
 800cd68:	4614      	mov	r4, r2
 800cd6a:	495a      	ldr	r1, [pc, #360]	; (800ced4 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x190>)
 800cd6c:	2206      	movs	r2, #6
 800cd6e:	4650      	mov	r0, sl
 800cd70:	f8d3 8000 	ldr.w	r8, [r3]
 800cd74:	f7ff fce4 	bl	800c740 <memcmp>
 800cd78:	f108 0904 	add.w	r9, r8, #4
 800cd7c:	4683      	mov	fp, r0
 800cd7e:	2202      	movs	r2, #2
 800cd80:	4649      	mov	r1, r9
 800cd82:	4650      	mov	r0, sl
 800cd84:	b2bf      	uxth	r7, r7
 800cd86:	f7ff fcdb 	bl	800c740 <memcmp>
 800cd8a:	b928      	cbnz	r0, 800cd98 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x54>
 800cd8c:	2204      	movs	r2, #4
 800cd8e:	4951      	ldr	r1, [pc, #324]	; (800ced4 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x190>)
 800cd90:	18a8      	adds	r0, r5, r2
 800cd92:	f7ff fcd5 	bl	800c740 <memcmp>
 800cd96:	b160      	cbz	r0, 800cdb2 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x6e>
 800cd98:	4649      	mov	r1, r9
 800cd9a:	2206      	movs	r2, #6
 800cd9c:	4650      	mov	r0, sl
 800cd9e:	f7ff fccf 	bl	800c740 <memcmp>
 800cda2:	4601      	mov	r1, r0
 800cda4:	b130      	cbz	r0, 800cdb4 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x70>
 800cda6:	f1bb 0f00 	cmp.w	fp, #0
 800cdaa:	d04a      	beq.n	800ce42 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0xfe>
 800cdac:	b005      	add	sp, #20
 800cdae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cdb2:	2101      	movs	r1, #1
 800cdb4:	2301      	movs	r3, #1
 800cdb6:	9a03      	ldr	r2, [sp, #12]
 800cdb8:	2a10      	cmp	r2, #16
 800cdba:	d176      	bne.n	800ceaa <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x166>
 800cdbc:	2f01      	cmp	r7, #1
 800cdbe:	d143      	bne.n	800ce48 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x104>
 800cdc0:	7873      	ldrb	r3, [r6, #1]
 800cdc2:	2b00      	cmp	r3, #0
 800cdc4:	d1f2      	bne.n	800cdac <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x68>
 800cdc6:	2206      	movs	r2, #6
 800cdc8:	4649      	mov	r1, r9
 800cdca:	f105 0017 	add.w	r0, r5, #23
 800cdce:	f7ff fcb7 	bl	800c740 <memcmp>
 800cdd2:	2800      	cmp	r0, #0
 800cdd4:	dcea      	bgt.n	800cdac <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x68>
 800cdd6:	2206      	movs	r2, #6
 800cdd8:	4648      	mov	r0, r9
 800cdda:	f105 011d 	add.w	r1, r5, #29
 800cdde:	f7ff fcaf 	bl	800c740 <memcmp>
 800cde2:	2800      	cmp	r0, #0
 800cde4:	dce2      	bgt.n	800cdac <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x68>
 800cde6:	23fe      	movs	r3, #254	; 0xfe
 800cde8:	7023      	strb	r3, [r4, #0]
 800cdea:	7063      	strb	r3, [r4, #1]
 800cdec:	70a3      	strb	r3, [r4, #2]
 800cdee:	70e3      	strb	r3, [r4, #3]
 800cdf0:	7123      	strb	r3, [r4, #4]
 800cdf2:	7163      	strb	r3, [r4, #5]
 800cdf4:	71a3      	strb	r3, [r4, #6]
 800cdf6:	23aa      	movs	r3, #170	; 0xaa
 800cdf8:	4621      	mov	r1, r4
 800cdfa:	71e3      	strb	r3, [r4, #7]
 800cdfc:	f240 53fa 	movw	r3, #1530	; 0x5fa
 800ce00:	f108 0203 	add.w	r2, r8, #3
 800ce04:	f108 0809 	add.w	r8, r8, #9
 800ce08:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800ce0c:	3102      	adds	r1, #2
 800ce0e:	f060 0055 	orn	r0, r0, #85	; 0x55
 800ce12:	7188      	strb	r0, [r1, #6]
 800ce14:	7810      	ldrb	r0, [r2, #0]
 800ce16:	4542      	cmp	r2, r8
 800ce18:	f040 0055 	orr.w	r0, r0, #85	; 0x55
 800ce1c:	71c8      	strb	r0, [r1, #7]
 800ce1e:	7810      	ldrb	r0, [r2, #0]
 800ce20:	4403      	add	r3, r0
 800ce22:	b29b      	uxth	r3, r3
 800ce24:	d1f0      	bne.n	800ce08 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0xc4>
 800ce26:	0a1a      	lsrs	r2, r3, #8
 800ce28:	f062 0155 	orn	r1, r2, #85	; 0x55
 800ce2c:	f042 0255 	orr.w	r2, r2, #85	; 0x55
 800ce30:	7562      	strb	r2, [r4, #21]
 800ce32:	f063 0255 	orn	r2, r3, #85	; 0x55
 800ce36:	f043 0355 	orr.w	r3, r3, #85	; 0x55
 800ce3a:	7521      	strb	r1, [r4, #20]
 800ce3c:	75a2      	strb	r2, [r4, #22]
 800ce3e:	75e3      	strb	r3, [r4, #23]
 800ce40:	e7b4      	b.n	800cdac <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x68>
 800ce42:	4659      	mov	r1, fp
 800ce44:	465b      	mov	r3, fp
 800ce46:	e7b6      	b.n	800cdb6 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x72>
 800ce48:	2f03      	cmp	r7, #3
 800ce4a:	d11a      	bne.n	800ce82 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x13e>
 800ce4c:	7daa      	ldrb	r2, [r5, #22]
 800ce4e:	2a00      	cmp	r2, #0
 800ce50:	d1ac      	bne.n	800cdac <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x68>
 800ce52:	7072      	strb	r2, [r6, #1]
 800ce54:	f1bb 0f00 	cmp.w	fp, #0
 800ce58:	d0a8      	beq.n	800cdac <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x68>
 800ce5a:	2b00      	cmp	r3, #0
 800ce5c:	d0a6      	beq.n	800cdac <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x68>
 800ce5e:	2302      	movs	r3, #2
 800ce60:	75e3      	strb	r3, [r4, #23]
 800ce62:	4b1d      	ldr	r3, [pc, #116]	; (800ced8 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x194>)
 800ce64:	7622      	strb	r2, [r4, #24]
 800ce66:	681b      	ldr	r3, [r3, #0]
 800ce68:	7662      	strb	r2, [r4, #25]
 800ce6a:	889b      	ldrh	r3, [r3, #4]
 800ce6c:	3b00      	subs	r3, #0
 800ce6e:	bf18      	it	ne
 800ce70:	2301      	movne	r3, #1
 800ce72:	005b      	lsls	r3, r3, #1
 800ce74:	4630      	mov	r0, r6
 800ce76:	7663      	strb	r3, [r4, #25]
 800ce78:	b005      	add	sp, #20
 800ce7a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ce7e:	f7ff bd7f 	b.w	800c980 <RDMHandler::RespondMessageAck()>
 800ce82:	2f02      	cmp	r7, #2
 800ce84:	d192      	bne.n	800cdac <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x68>
 800ce86:	7daa      	ldrb	r2, [r5, #22]
 800ce88:	2a00      	cmp	r2, #0
 800ce8a:	d18f      	bne.n	800cdac <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x68>
 800ce8c:	2101      	movs	r1, #1
 800ce8e:	7071      	strb	r1, [r6, #1]
 800ce90:	2b00      	cmp	r3, #0
 800ce92:	d08b      	beq.n	800cdac <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x68>
 800ce94:	4b10      	ldr	r3, [pc, #64]	; (800ced8 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x194>)
 800ce96:	75e7      	strb	r7, [r4, #23]
 800ce98:	681b      	ldr	r3, [r3, #0]
 800ce9a:	7622      	strb	r2, [r4, #24]
 800ce9c:	7662      	strb	r2, [r4, #25]
 800ce9e:	889b      	ldrh	r3, [r3, #4]
 800cea0:	3b00      	subs	r3, #0
 800cea2:	bf18      	it	ne
 800cea4:	2301      	movne	r3, #1
 800cea6:	408b      	lsls	r3, r1
 800cea8:	e7e4      	b.n	800ce74 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x130>
 800ceaa:	7c6a      	ldrb	r2, [r5, #17]
 800ceac:	7cab      	ldrb	r3, [r5, #18]
 800ceae:	f1bb 0f00 	cmp.w	fp, #0
 800ceb2:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 800ceb6:	b29b      	uxth	r3, r3
 800ceb8:	9301      	str	r3, [sp, #4]
 800ceba:	7dab      	ldrb	r3, [r5, #22]
 800cebc:	bf08      	it	eq
 800cebe:	2101      	moveq	r1, #1
 800cec0:	9300      	str	r3, [sp, #0]
 800cec2:	4630      	mov	r0, r6
 800cec4:	463b      	mov	r3, r7
 800cec6:	9a03      	ldr	r2, [sp, #12]
 800cec8:	f7ff feca 	bl	800cc60 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)>
 800cecc:	e76e      	b.n	800cdac <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x68>
 800cece:	bf00      	nop
 800ced0:	20002014 	andcs	r2, r0, r4, lsl r0
 800ced4:	08015dfc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r8, sl, fp, ip, lr}
 800ced8:	20002010 	andcs	r2, r0, r0, lsl r0

0800cedc <RDMIdentify::RDMIdentify()>:
 800cedc:	4b01      	ldr	r3, [pc, #4]	; (800cee4 <RDMIdentify::RDMIdentify()+0x8>)
 800cede:	6018      	str	r0, [r3, #0]
 800cee0:	4770      	bx	lr
 800cee2:	bf00      	nop
 800cee4:	2000201c 	andcs	r2, r0, ip, lsl r0

0800cee8 <RDMIdentify::On(rdm::identify::Mode)>:
 800cee8:	4770      	bx	lr

0800ceea <RDMIdentify::Off(rdm::identify::Mode)>:
 800ceea:	4770      	bx	lr

0800ceec <memcpy.constprop.0.isra.0>:
 800ceec:	3801      	subs	r0, #1
 800ceee:	1d0b      	adds	r3, r1, #4
 800cef0:	4299      	cmp	r1, r3
 800cef2:	d100      	bne.n	800cef6 <memcpy.constprop.0.isra.0+0xa>
 800cef4:	4770      	bx	lr
 800cef6:	f811 2b01 	ldrb.w	r2, [r1], #1
 800cefa:	f800 2f01 	strb.w	r2, [r0, #1]!
 800cefe:	e7f7      	b.n	800cef0 <memcpy.constprop.0.isra.0+0x4>

0800cf00 <RDMHandler::GetInterfaceList(unsigned short)>:
 800cf00:	4a08      	ldr	r2, [pc, #32]	; (800cf24 <RDMHandler::GetInterfaceList(unsigned short)+0x24>)
 800cf02:	6883      	ldr	r3, [r0, #8]
 800cf04:	6812      	ldr	r2, [r2, #0]
 800cf06:	6892      	ldr	r2, [r2, #8]
 800cf08:	0e11      	lsrs	r1, r2, #24
 800cf0a:	7619      	strb	r1, [r3, #24]
 800cf0c:	0c11      	lsrs	r1, r2, #16
 800cf0e:	7659      	strb	r1, [r3, #25]
 800cf10:	76da      	strb	r2, [r3, #27]
 800cf12:	0a11      	lsrs	r1, r2, #8
 800cf14:	2200      	movs	r2, #0
 800cf16:	771a      	strb	r2, [r3, #28]
 800cf18:	2206      	movs	r2, #6
 800cf1a:	7699      	strb	r1, [r3, #26]
 800cf1c:	775a      	strb	r2, [r3, #29]
 800cf1e:	75da      	strb	r2, [r3, #23]
 800cf20:	f7ff bd2e 	b.w	800c980 <RDMHandler::RespondMessageAck()>
 800cf24:	2000b1a0 	andcs	fp, r0, r0, lsr #3

0800cf28 <RDMHandler::GetInterfaceName(unsigned short)>:
 800cf28:	b538      	push	{r3, r4, r5, lr}
 800cf2a:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800cf2e:	4604      	mov	r4, r0
 800cf30:	3117      	adds	r1, #23
 800cf32:	f105 0018 	add.w	r0, r5, #24
 800cf36:	f7ff ffd9 	bl	800ceec <memcpy.constprop.0.isra.0>
 800cf3a:	4a0d      	ldr	r2, [pc, #52]	; (800cf70 <RDMHandler::GetInterfaceName(unsigned short)+0x48>)
 800cf3c:	f105 001b 	add.w	r0, r5, #27
 800cf40:	6813      	ldr	r3, [r2, #0]
 800cf42:	33a6      	adds	r3, #166	; 0xa6
 800cf44:	f813 1b01 	ldrb.w	r1, [r3], #1
 800cf48:	f800 1f01 	strb.w	r1, [r0, #1]!
 800cf4c:	2900      	cmp	r1, #0
 800cf4e:	d1f9      	bne.n	800cf44 <RDMHandler::GetInterfaceName(unsigned short)+0x1c>
 800cf50:	6812      	ldr	r2, [r2, #0]
 800cf52:	32a6      	adds	r2, #166	; 0xa6
 800cf54:	4611      	mov	r1, r2
 800cf56:	460b      	mov	r3, r1
 800cf58:	7818      	ldrb	r0, [r3, #0]
 800cf5a:	3101      	adds	r1, #1
 800cf5c:	2800      	cmp	r0, #0
 800cf5e:	d1fa      	bne.n	800cf56 <RDMHandler::GetInterfaceName(unsigned short)+0x2e>
 800cf60:	1a9b      	subs	r3, r3, r2
 800cf62:	3304      	adds	r3, #4
 800cf64:	75eb      	strb	r3, [r5, #23]
 800cf66:	4620      	mov	r0, r4
 800cf68:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800cf6c:	f7ff bd08 	b.w	800c980 <RDMHandler::RespondMessageAck()>
 800cf70:	2000b1a0 	andcs	fp, r0, r0, lsr #3

0800cf74 <RDMHandler::GetHardwareAddress(unsigned short)>:
 800cf74:	b538      	push	{r3, r4, r5, lr}
 800cf76:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800cf7a:	4604      	mov	r4, r0
 800cf7c:	3117      	adds	r1, #23
 800cf7e:	f105 0018 	add.w	r0, r5, #24
 800cf82:	f7ff ffb3 	bl	800ceec <memcpy.constprop.0.isra.0>
 800cf86:	4b06      	ldr	r3, [pc, #24]	; (800cfa0 <RDMHandler::GetHardwareAddress(unsigned short)+0x2c>)
 800cf88:	f105 011c 	add.w	r1, r5, #28
 800cf8c:	6818      	ldr	r0, [r3, #0]
 800cf8e:	f002 ff8d 	bl	800feac <Network::MacAddressCopyTo(unsigned char*)>
 800cf92:	230a      	movs	r3, #10
 800cf94:	75eb      	strb	r3, [r5, #23]
 800cf96:	4620      	mov	r0, r4
 800cf98:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800cf9c:	f7ff bcf0 	b.w	800c980 <RDMHandler::RespondMessageAck()>
 800cfa0:	2000b1a0 	andcs	fp, r0, r0, lsr #3

0800cfa4 <RDMHandler::GetDHCPMode(unsigned short)>:
 800cfa4:	b538      	push	{r3, r4, r5, lr}
 800cfa6:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800cfaa:	4604      	mov	r4, r0
 800cfac:	3117      	adds	r1, #23
 800cfae:	f105 0018 	add.w	r0, r5, #24
 800cfb2:	f7ff ff9b 	bl	800ceec <memcpy.constprop.0.isra.0>
 800cfb6:	4b05      	ldr	r3, [pc, #20]	; (800cfcc <RDMHandler::GetDHCPMode(unsigned short)+0x28>)
 800cfb8:	4620      	mov	r0, r4
 800cfba:	681b      	ldr	r3, [r3, #0]
 800cfbc:	795b      	ldrb	r3, [r3, #5]
 800cfbe:	772b      	strb	r3, [r5, #28]
 800cfc0:	2305      	movs	r3, #5
 800cfc2:	75eb      	strb	r3, [r5, #23]
 800cfc4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800cfc8:	f7ff bcda 	b.w	800c980 <RDMHandler::RespondMessageAck()>
 800cfcc:	2000b1a0 	andcs	fp, r0, r0, lsr #3

0800cfd0 <RDMHandler::SetDHCPMode(bool, unsigned short)>:
 800cfd0:	4b10      	ldr	r3, [pc, #64]	; (800d014 <RDMHandler::SetDHCPMode(bool, unsigned short)+0x44>)
 800cfd2:	b510      	push	{r4, lr}
 800cfd4:	681b      	ldr	r3, [r3, #0]
 800cfd6:	4604      	mov	r4, r0
 800cfd8:	7919      	ldrb	r1, [r3, #4]
 800cfda:	6842      	ldr	r2, [r0, #4]
 800cfdc:	b921      	cbnz	r1, 800cfe8 <RDMHandler::SetDHCPMode(bool, unsigned short)+0x18>
 800cfde:	210b      	movs	r1, #11
 800cfe0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cfe4:	f7ff bd90 	b.w	800cb08 <RDMHandler::RespondMessageNack(unsigned short)>
 800cfe8:	7ed2      	ldrb	r2, [r2, #27]
 800cfea:	2a01      	cmp	r2, #1
 800cfec:	d109      	bne.n	800d002 <RDMHandler::SetDHCPMode(bool, unsigned short)+0x32>
 800cfee:	f8d3 20c0 	ldr.w	r2, [r3, #192]	; 0xc0
 800cff2:	f042 0204 	orr.w	r2, r2, #4
 800cff6:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
 800cffa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cffe:	f7ff bcbf 	b.w	800c980 <RDMHandler::RespondMessageAck()>
 800d002:	b92a      	cbnz	r2, 800d010 <RDMHandler::SetDHCPMode(bool, unsigned short)+0x40>
 800d004:	4618      	mov	r0, r3
 800d006:	4611      	mov	r1, r2
 800d008:	f003 f98c 	bl	8010324 <Network::SetQueuedStaticIp(unsigned int, unsigned int)>
 800d00c:	4620      	mov	r0, r4
 800d00e:	e7f4      	b.n	800cffa <RDMHandler::SetDHCPMode(bool, unsigned short)+0x2a>
 800d010:	2106      	movs	r1, #6
 800d012:	e7e5      	b.n	800cfe0 <RDMHandler::SetDHCPMode(bool, unsigned short)+0x10>
 800d014:	2000b1a0 	andcs	fp, r0, r0, lsr #3

0800d018 <RDMHandler::GetNameServers(unsigned short)>:
 800d018:	6842      	ldr	r2, [r0, #4]
 800d01a:	7dd2      	ldrb	r2, [r2, #23]
 800d01c:	2a02      	cmp	r2, #2
 800d01e:	d902      	bls.n	800d026 <RDMHandler::GetNameServers(unsigned short)+0xe>
 800d020:	2106      	movs	r1, #6
 800d022:	f7ff bd71 	b.w	800cb08 <RDMHandler::RespondMessageNack(unsigned short)>
 800d026:	2200      	movs	r2, #0
 800d028:	6883      	ldr	r3, [r0, #8]
 800d02a:	765a      	strb	r2, [r3, #25]
 800d02c:	769a      	strb	r2, [r3, #26]
 800d02e:	76da      	strb	r2, [r3, #27]
 800d030:	771a      	strb	r2, [r3, #28]
 800d032:	2205      	movs	r2, #5
 800d034:	75da      	strb	r2, [r3, #23]
 800d036:	f7ff bca3 	b.w	800c980 <RDMHandler::RespondMessageAck()>
	...

0800d03c <RDMHandler::GetZeroconf(unsigned short)>:
 800d03c:	b538      	push	{r3, r4, r5, lr}
 800d03e:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800d042:	4604      	mov	r4, r0
 800d044:	3117      	adds	r1, #23
 800d046:	f105 0018 	add.w	r0, r5, #24
 800d04a:	f7ff ff4f 	bl	800ceec <memcpy.constprop.0.isra.0>
 800d04e:	4b06      	ldr	r3, [pc, #24]	; (800d068 <RDMHandler::GetZeroconf(unsigned short)+0x2c>)
 800d050:	681a      	ldr	r2, [r3, #0]
 800d052:	7993      	ldrb	r3, [r2, #6]
 800d054:	b103      	cbz	r3, 800d058 <RDMHandler::GetZeroconf(unsigned short)+0x1c>
 800d056:	79d3      	ldrb	r3, [r2, #7]
 800d058:	772b      	strb	r3, [r5, #28]
 800d05a:	2305      	movs	r3, #5
 800d05c:	75eb      	strb	r3, [r5, #23]
 800d05e:	4620      	mov	r0, r4
 800d060:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d064:	f7ff bc8c 	b.w	800c980 <RDMHandler::RespondMessageAck()>
 800d068:	2000b1a0 	andcs	fp, r0, r0, lsr #3

0800d06c <RDMHandler::SetZeroconf(bool, unsigned short)>:
 800d06c:	4b10      	ldr	r3, [pc, #64]	; (800d0b0 <RDMHandler::SetZeroconf(bool, unsigned short)+0x44>)
 800d06e:	b510      	push	{r4, lr}
 800d070:	681b      	ldr	r3, [r3, #0]
 800d072:	4604      	mov	r4, r0
 800d074:	7999      	ldrb	r1, [r3, #6]
 800d076:	6842      	ldr	r2, [r0, #4]
 800d078:	b921      	cbnz	r1, 800d084 <RDMHandler::SetZeroconf(bool, unsigned short)+0x18>
 800d07a:	210b      	movs	r1, #11
 800d07c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d080:	f7ff bd42 	b.w	800cb08 <RDMHandler::RespondMessageNack(unsigned short)>
 800d084:	7ed2      	ldrb	r2, [r2, #27]
 800d086:	2a01      	cmp	r2, #1
 800d088:	d109      	bne.n	800d09e <RDMHandler::SetZeroconf(bool, unsigned short)+0x32>
 800d08a:	f8d3 20c0 	ldr.w	r2, [r3, #192]	; 0xc0
 800d08e:	f042 0208 	orr.w	r2, r2, #8
 800d092:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
 800d096:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d09a:	f7ff bc71 	b.w	800c980 <RDMHandler::RespondMessageAck()>
 800d09e:	b92a      	cbnz	r2, 800d0ac <RDMHandler::SetZeroconf(bool, unsigned short)+0x40>
 800d0a0:	4618      	mov	r0, r3
 800d0a2:	4611      	mov	r1, r2
 800d0a4:	f003 f93e 	bl	8010324 <Network::SetQueuedStaticIp(unsigned int, unsigned int)>
 800d0a8:	4620      	mov	r0, r4
 800d0aa:	e7f4      	b.n	800d096 <RDMHandler::SetZeroconf(bool, unsigned short)+0x2a>
 800d0ac:	2106      	movs	r1, #6
 800d0ae:	e7e5      	b.n	800d07c <RDMHandler::SetZeroconf(bool, unsigned short)+0x10>
 800d0b0:	2000b1a0 	andcs	fp, r0, r0, lsr #3

0800d0b4 <RDMHandler::RenewDhcp(bool, unsigned short)>:
 800d0b4:	4b09      	ldr	r3, [pc, #36]	; (800d0dc <RDMHandler::RenewDhcp(bool, unsigned short)+0x28>)
 800d0b6:	b510      	push	{r4, lr}
 800d0b8:	681b      	ldr	r3, [r3, #0]
 800d0ba:	4604      	mov	r4, r0
 800d0bc:	795a      	ldrb	r2, [r3, #5]
 800d0be:	b922      	cbnz	r2, 800d0ca <RDMHandler::RenewDhcp(bool, unsigned short)+0x16>
 800d0c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d0c4:	210b      	movs	r1, #11
 800d0c6:	f7ff bd1f 	b.w	800cb08 <RDMHandler::RespondMessageNack(unsigned short)>
 800d0ca:	4618      	mov	r0, r3
 800d0cc:	f003 f8dc 	bl	8010288 <Network::EnableDhcp()>
 800d0d0:	4620      	mov	r0, r4
 800d0d2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d0d6:	f7ff bc53 	b.w	800c980 <RDMHandler::RespondMessageAck()>
 800d0da:	bf00      	nop
 800d0dc:	2000b1a0 	andcs	fp, r0, r0, lsr #3

0800d0e0 <RDMHandler::GetAddressNetmask(unsigned short)>:
 800d0e0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d0e2:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800d0e6:	4e0f      	ldr	r6, [pc, #60]	; (800d124 <RDMHandler::GetAddressNetmask(unsigned short)+0x44>)
 800d0e8:	4604      	mov	r4, r0
 800d0ea:	6833      	ldr	r3, [r6, #0]
 800d0ec:	f105 0018 	add.w	r0, r5, #24
 800d0f0:	695b      	ldr	r3, [r3, #20]
 800d0f2:	3117      	adds	r1, #23
 800d0f4:	9301      	str	r3, [sp, #4]
 800d0f6:	f7ff fef9 	bl	800ceec <memcpy.constprop.0.isra.0>
 800d0fa:	a901      	add	r1, sp, #4
 800d0fc:	f105 001c 	add.w	r0, r5, #28
 800d100:	f7ff fef4 	bl	800ceec <memcpy.constprop.0.isra.0>
 800d104:	6836      	ldr	r6, [r6, #0]
 800d106:	69f0      	ldr	r0, [r6, #28]
 800d108:	f007 fba4 	bl	8014854 <__popcountsi2>
 800d10c:	f885 0020 	strb.w	r0, [r5, #32]
 800d110:	7973      	ldrb	r3, [r6, #5]
 800d112:	4620      	mov	r0, r4
 800d114:	f885 3021 	strb.w	r3, [r5, #33]	; 0x21
 800d118:	230a      	movs	r3, #10
 800d11a:	75eb      	strb	r3, [r5, #23]
 800d11c:	f7ff fc30 	bl	800c980 <RDMHandler::RespondMessageAck()>
 800d120:	b002      	add	sp, #8
 800d122:	bd70      	pop	{r4, r5, r6, pc}
 800d124:	2000b1a0 	andcs	fp, r0, r0, lsr #3

0800d128 <RDMHandler::GetStaticAddress(unsigned short)>:
 800d128:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d12a:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800d12e:	4e0e      	ldr	r6, [pc, #56]	; (800d168 <RDMHandler::GetStaticAddress(unsigned short)+0x40>)
 800d130:	4604      	mov	r4, r0
 800d132:	6833      	ldr	r3, [r6, #0]
 800d134:	f105 0018 	add.w	r0, r5, #24
 800d138:	695b      	ldr	r3, [r3, #20]
 800d13a:	3117      	adds	r1, #23
 800d13c:	9301      	str	r3, [sp, #4]
 800d13e:	f7ff fed5 	bl	800ceec <memcpy.constprop.0.isra.0>
 800d142:	a901      	add	r1, sp, #4
 800d144:	f105 001c 	add.w	r0, r5, #28
 800d148:	f7ff fed0 	bl	800ceec <memcpy.constprop.0.isra.0>
 800d14c:	6833      	ldr	r3, [r6, #0]
 800d14e:	69d8      	ldr	r0, [r3, #28]
 800d150:	f007 fb80 	bl	8014854 <__popcountsi2>
 800d154:	2309      	movs	r3, #9
 800d156:	f885 0020 	strb.w	r0, [r5, #32]
 800d15a:	75eb      	strb	r3, [r5, #23]
 800d15c:	4620      	mov	r0, r4
 800d15e:	f7ff fc0f 	bl	800c980 <RDMHandler::RespondMessageAck()>
 800d162:	b002      	add	sp, #8
 800d164:	bd70      	pop	{r4, r5, r6, pc}
 800d166:	bf00      	nop
 800d168:	2000b1a0 	andcs	fp, r0, r0, lsr #3

0800d16c <RDMHandler::SetStaticAddress(bool, unsigned short)>:
 800d16c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d16e:	6845      	ldr	r5, [r0, #4]
 800d170:	4604      	mov	r4, r0
 800d172:	7dab      	ldrb	r3, [r5, #22]
 800d174:	2b09      	cmp	r3, #9
 800d176:	d005      	beq.n	800d184 <RDMHandler::SetStaticAddress(bool, unsigned short)+0x18>
 800d178:	2101      	movs	r1, #1
 800d17a:	b003      	add	sp, #12
 800d17c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800d180:	f7ff bcc2 	b.w	800cb08 <RDMHandler::RespondMessageNack(unsigned short)>
 800d184:	f105 011b 	add.w	r1, r5, #27
 800d188:	a801      	add	r0, sp, #4
 800d18a:	f7ff feaf 	bl	800ceec <memcpy.constprop.0.isra.0>
 800d18e:	4b09      	ldr	r3, [pc, #36]	; (800d1b4 <RDMHandler::SetStaticAddress(bool, unsigned short)+0x48>)
 800d190:	7fea      	ldrb	r2, [r5, #31]
 800d192:	6818      	ldr	r0, [r3, #0]
 800d194:	9901      	ldr	r1, [sp, #4]
 800d196:	b12a      	cbz	r2, 800d1a4 <RDMHandler::SetStaticAddress(bool, unsigned short)+0x38>
 800d198:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800d19c:	f1c2 0220 	rsb	r2, r2, #32
 800d1a0:	4093      	lsls	r3, r2
 800d1a2:	ba1a      	rev	r2, r3
 800d1a4:	f003 f8be 	bl	8010324 <Network::SetQueuedStaticIp(unsigned int, unsigned int)>
 800d1a8:	4620      	mov	r0, r4
 800d1aa:	f7ff fbe9 	bl	800c980 <RDMHandler::RespondMessageAck()>
 800d1ae:	b003      	add	sp, #12
 800d1b0:	bd30      	pop	{r4, r5, pc}
 800d1b2:	bf00      	nop
 800d1b4:	2000b1a0 	andcs	fp, r0, r0, lsr #3

0800d1b8 <RDMHandler::ApplyConfiguration(bool, unsigned short)>:
 800d1b8:	4b08      	ldr	r3, [pc, #32]	; (800d1dc <RDMHandler::ApplyConfiguration(bool, unsigned short)+0x24>)
 800d1ba:	b510      	push	{r4, lr}
 800d1bc:	4604      	mov	r4, r0
 800d1be:	6818      	ldr	r0, [r3, #0]
 800d1c0:	f003 f8bd 	bl	801033e <Network::ApplyQueuedConfig()>
 800d1c4:	b120      	cbz	r0, 800d1d0 <RDMHandler::ApplyConfiguration(bool, unsigned short)+0x18>
 800d1c6:	4620      	mov	r0, r4
 800d1c8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d1cc:	f7ff bbd8 	b.w	800c980 <RDMHandler::RespondMessageAck()>
 800d1d0:	4620      	mov	r0, r4
 800d1d2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d1d6:	2101      	movs	r1, #1
 800d1d8:	f7ff bc96 	b.w	800cb08 <RDMHandler::RespondMessageNack(unsigned short)>
 800d1dc:	2000b1a0 	andcs	fp, r0, r0, lsr #3

0800d1e0 <RDMHandler::GetDefaultRoute(unsigned short)>:
 800d1e0:	4b0c      	ldr	r3, [pc, #48]	; (800d214 <RDMHandler::GetDefaultRoute(unsigned short)+0x34>)
 800d1e2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d1e4:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800d1e8:	681b      	ldr	r3, [r3, #0]
 800d1ea:	4604      	mov	r4, r0
 800d1ec:	699b      	ldr	r3, [r3, #24]
 800d1ee:	f105 0018 	add.w	r0, r5, #24
 800d1f2:	3117      	adds	r1, #23
 800d1f4:	9301      	str	r3, [sp, #4]
 800d1f6:	f7ff fe79 	bl	800ceec <memcpy.constprop.0.isra.0>
 800d1fa:	a901      	add	r1, sp, #4
 800d1fc:	f105 001c 	add.w	r0, r5, #28
 800d200:	f7ff fe74 	bl	800ceec <memcpy.constprop.0.isra.0>
 800d204:	2308      	movs	r3, #8
 800d206:	4620      	mov	r0, r4
 800d208:	75eb      	strb	r3, [r5, #23]
 800d20a:	f7ff fbb9 	bl	800c980 <RDMHandler::RespondMessageAck()>
 800d20e:	b003      	add	sp, #12
 800d210:	bd30      	pop	{r4, r5, pc}
 800d212:	bf00      	nop
 800d214:	2000b1a0 	andcs	fp, r0, r0, lsr #3

0800d218 <RDMHandler::SetDefaultRoute(bool, unsigned short)>:
 800d218:	210b      	movs	r1, #11
 800d21a:	f7ff bc75 	b.w	800cb08 <RDMHandler::RespondMessageNack(unsigned short)>
	...

0800d220 <RDMHandler::GetHostName(unsigned short)>:
 800d220:	4b0a      	ldr	r3, [pc, #40]	; (800d24c <RDMHandler::GetHostName(unsigned short)+0x2c>)
 800d222:	b510      	push	{r4, lr}
 800d224:	6819      	ldr	r1, [r3, #0]
 800d226:	4604      	mov	r4, r0
 800d228:	3120      	adds	r1, #32
 800d22a:	460b      	mov	r3, r1
 800d22c:	461a      	mov	r2, r3
 800d22e:	7810      	ldrb	r0, [r2, #0]
 800d230:	3301      	adds	r3, #1
 800d232:	2800      	cmp	r0, #0
 800d234:	d1fa      	bne.n	800d22c <RDMHandler::GetHostName(unsigned short)+0xc>
 800d236:	1a52      	subs	r2, r2, r1
 800d238:	4620      	mov	r0, r4
 800d23a:	b292      	uxth	r2, r2
 800d23c:	f7ff fb48 	bl	800c8d0 <RDMHandler::HandleString(char const*, unsigned int)>
 800d240:	4620      	mov	r0, r4
 800d242:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d246:	f7ff bb9b 	b.w	800c980 <RDMHandler::RespondMessageAck()>
 800d24a:	bf00      	nop
 800d24c:	2000b1a0 	andcs	fp, r0, r0, lsr #3

0800d250 <RDMHandler::SetHostName(bool, unsigned short)>:
 800d250:	b510      	push	{r4, lr}
 800d252:	6841      	ldr	r1, [r0, #4]
 800d254:	4604      	mov	r4, r0
 800d256:	7d8b      	ldrb	r3, [r1, #22]
 800d258:	2b3f      	cmp	r3, #63	; 0x3f
 800d25a:	d904      	bls.n	800d266 <RDMHandler::SetHostName(bool, unsigned short)+0x16>
 800d25c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d260:	2102      	movs	r1, #2
 800d262:	f7ff bc51 	b.w	800cb08 <RDMHandler::RespondMessageNack(unsigned short)>
 800d266:	2200      	movs	r2, #0
 800d268:	440b      	add	r3, r1
 800d26a:	75da      	strb	r2, [r3, #23]
 800d26c:	4b04      	ldr	r3, [pc, #16]	; (800d280 <RDMHandler::SetHostName(bool, unsigned short)+0x30>)
 800d26e:	3117      	adds	r1, #23
 800d270:	6818      	ldr	r0, [r3, #0]
 800d272:	f002 ffc7 	bl	8010204 <Network::SetHostName(char const*)>
 800d276:	4620      	mov	r0, r4
 800d278:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d27c:	f7ff bb80 	b.w	800c980 <RDMHandler::RespondMessageAck()>
 800d280:	2000b1a0 	andcs	fp, r0, r0, lsr #3

0800d284 <RDMHandler::GetDomainName(unsigned short)>:
 800d284:	4b0a      	ldr	r3, [pc, #40]	; (800d2b0 <RDMHandler::GetDomainName(unsigned short)+0x2c>)
 800d286:	b510      	push	{r4, lr}
 800d288:	6819      	ldr	r1, [r3, #0]
 800d28a:	4604      	mov	r4, r0
 800d28c:	3160      	adds	r1, #96	; 0x60
 800d28e:	460b      	mov	r3, r1
 800d290:	461a      	mov	r2, r3
 800d292:	7810      	ldrb	r0, [r2, #0]
 800d294:	3301      	adds	r3, #1
 800d296:	2800      	cmp	r0, #0
 800d298:	d1fa      	bne.n	800d290 <RDMHandler::GetDomainName(unsigned short)+0xc>
 800d29a:	1a52      	subs	r2, r2, r1
 800d29c:	4620      	mov	r0, r4
 800d29e:	b292      	uxth	r2, r2
 800d2a0:	f7ff fb16 	bl	800c8d0 <RDMHandler::HandleString(char const*, unsigned int)>
 800d2a4:	4620      	mov	r0, r4
 800d2a6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d2aa:	f7ff bb69 	b.w	800c980 <RDMHandler::RespondMessageAck()>
 800d2ae:	bf00      	nop
 800d2b0:	2000b1a0 	andcs	fp, r0, r0, lsr #3

0800d2b4 <RDMHandler::SetDomainName(bool, unsigned short)>:
 800d2b4:	210b      	movs	r1, #11
 800d2b6:	f7ff bc27 	b.w	800cb08 <RDMHandler::RespondMessageNack(unsigned short)>
	...

0800d2bc <RDMDevice::RDMDevice()>:
 800d2bc:	4a33      	ldr	r2, [pc, #204]	; (800d38c <RDMDevice::RDMDevice()+0xd0>)
 800d2be:	2300      	movs	r3, #0
 800d2c0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d2c2:	4604      	mov	r4, r0
 800d2c4:	4611      	mov	r1, r2
 800d2c6:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
 800d2ca:	f880 3071 	strb.w	r3, [r0, #113]	; 0x71
 800d2ce:	f8a0 3072 	strh.w	r3, [r0, #114]	; 0x72
 800d2d2:	6743      	str	r3, [r0, #116]	; 0x74
 800d2d4:	4613      	mov	r3, r2
 800d2d6:	7818      	ldrb	r0, [r3, #0]
 800d2d8:	3201      	adds	r2, #1
 800d2da:	2800      	cmp	r0, #0
 800d2dc:	d1fa      	bne.n	800d2d4 <RDMDevice::RDMDevice()+0x18>
 800d2de:	1a5b      	subs	r3, r3, r1
 800d2e0:	2b20      	cmp	r3, #32
 800d2e2:	bf28      	it	cs
 800d2e4:	2320      	movcs	r3, #32
 800d2e6:	f104 052a 	add.w	r5, r4, #42	; 0x2a
 800d2ea:	4629      	mov	r1, r5
 800d2ec:	461a      	mov	r2, r3
 800d2ee:	4827      	ldr	r0, [pc, #156]	; (800d38c <RDMDevice::RDMDevice()+0xd0>)
 800d2f0:	3a01      	subs	r2, #1
 800d2f2:	d23b      	bcs.n	800d36c <RDMDevice::RDMDevice()+0xb0>
 800d2f4:	f884 304b 	strb.w	r3, [r4, #75]	; 0x4b
 800d2f8:	4b25      	ldr	r3, [pc, #148]	; (800d390 <RDMDevice::RDMDevice()+0xd4>)
 800d2fa:	4669      	mov	r1, sp
 800d2fc:	781a      	ldrb	r2, [r3, #0]
 800d2fe:	7022      	strb	r2, [r4, #0]
 800d300:	785b      	ldrb	r3, [r3, #1]
 800d302:	7063      	strb	r3, [r4, #1]
 800d304:	4b23      	ldr	r3, [pc, #140]	; (800d394 <RDMDevice::RDMDevice()+0xd8>)
 800d306:	6818      	ldr	r0, [r3, #0]
 800d308:	f002 fdd0 	bl	800feac <Network::MacAddressCopyTo(unsigned char*)>
 800d30c:	f89d 3002 	ldrb.w	r3, [sp, #2]
 800d310:	f89d 2003 	ldrb.w	r2, [sp, #3]
 800d314:	70a3      	strb	r3, [r4, #2]
 800d316:	7263      	strb	r3, [r4, #9]
 800d318:	4b1f      	ldr	r3, [pc, #124]	; (800d398 <RDMDevice::RDMDevice()+0xdc>)
 800d31a:	70e2      	strb	r2, [r4, #3]
 800d31c:	7222      	strb	r2, [r4, #8]
 800d31e:	461a      	mov	r2, r3
 800d320:	f89d 1004 	ldrb.w	r1, [sp, #4]
 800d324:	f89d 0005 	ldrb.w	r0, [sp, #5]
 800d328:	7121      	strb	r1, [r4, #4]
 800d32a:	7160      	strb	r0, [r4, #5]
 800d32c:	71a0      	strb	r0, [r4, #6]
 800d32e:	71e1      	strb	r1, [r4, #7]
 800d330:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800d334:	2900      	cmp	r1, #0
 800d336:	d1fb      	bne.n	800d330 <RDMDevice::RDMDevice()+0x74>
 800d338:	1a9b      	subs	r3, r3, r2
 800d33a:	2b20      	cmp	r3, #32
 800d33c:	bf28      	it	cs
 800d33e:	2320      	movcs	r3, #32
 800d340:	461a      	mov	r2, r3
 800d342:	4915      	ldr	r1, [pc, #84]	; (800d398 <RDMDevice::RDMDevice()+0xdc>)
 800d344:	3a01      	subs	r2, #1
 800d346:	d216      	bcs.n	800d376 <RDMDevice::RDMDevice()+0xba>
 800d348:	f884 304b 	strb.w	r3, [r4, #75]	; 0x4b
 800d34c:	f06f 2380 	mvn.w	r3, #2147516416	; 0x80008000
 800d350:	64e3      	str	r3, [r4, #76]	; 0x4c
 800d352:	2315      	movs	r3, #21
 800d354:	4a11      	ldr	r2, [pc, #68]	; (800d39c <RDMDevice::RDMDevice()+0xe0>)
 800d356:	f884 3071 	strb.w	r3, [r4, #113]	; 0x71
 800d35a:	f104 0165 	add.w	r1, r4, #101	; 0x65
 800d35e:	f104 0350 	add.w	r3, r4, #80	; 0x50
 800d362:	4299      	cmp	r1, r3
 800d364:	d10c      	bne.n	800d380 <RDMDevice::RDMDevice()+0xc4>
 800d366:	4620      	mov	r0, r4
 800d368:	b002      	add	sp, #8
 800d36a:	bd70      	pop	{r4, r5, r6, pc}
 800d36c:	f810 6b01 	ldrb.w	r6, [r0], #1
 800d370:	f801 6f01 	strb.w	r6, [r1, #1]!
 800d374:	e7bc      	b.n	800d2f0 <RDMDevice::RDMDevice()+0x34>
 800d376:	f811 0b01 	ldrb.w	r0, [r1], #1
 800d37a:	f805 0f01 	strb.w	r0, [r5, #1]!
 800d37e:	e7e1      	b.n	800d344 <RDMDevice::RDMDevice()+0x88>
 800d380:	f812 0b01 	ldrb.w	r0, [r2], #1
 800d384:	f803 0f01 	strb.w	r0, [r3, #1]!
 800d388:	e7eb      	b.n	800d362 <RDMDevice::RDMDevice()+0xa6>
 800d38a:	bf00      	nop
 800d38c:	080160e5 	stmdaeq	r1, {r0, r2, r5, r6, r7, sp, lr}
 800d390:	080160e3 	stmdaeq	r1, {r0, r1, r5, r6, r7, sp, lr}
 800d394:	2000b1a0 	andcs	fp, r0, r0, lsr #3
 800d398:	08015fe4 	stmdaeq	r1, {r2, r5, r6, r7, r8, r9, sl, fp, ip, lr}
 800d39c:	080160cd 	stmdaeq	r1, {r0, r2, r3, r6, r7, sp, lr}

0800d3a0 <RDMDevice::Print()>:
 800d3a0:	b513      	push	{r0, r1, r4, lr}
 800d3a2:	4604      	mov	r4, r0
 800d3a4:	4818      	ldr	r0, [pc, #96]	; (800d408 <RDMDevice::Print()+0x68>)
 800d3a6:	f7fb fe9f 	bl	80090e8 <printf>
 800d3aa:	f894 104b 	ldrb.w	r1, [r4, #75]	; 0x4b
 800d3ae:	f104 022b 	add.w	r2, r4, #43	; 0x2b
 800d3b2:	4816      	ldr	r0, [pc, #88]	; (800d40c <RDMDevice::Print()+0x6c>)
 800d3b4:	f7fb fe98 	bl	80090e8 <printf>
 800d3b8:	7862      	ldrb	r2, [r4, #1]
 800d3ba:	7821      	ldrb	r1, [r4, #0]
 800d3bc:	4814      	ldr	r0, [pc, #80]	; (800d410 <RDMDevice::Print()+0x70>)
 800d3be:	f7fb fe93 	bl	80090e8 <printf>
 800d3c2:	79a3      	ldrb	r3, [r4, #6]
 800d3c4:	7a22      	ldrb	r2, [r4, #8]
 800d3c6:	7a61      	ldrb	r1, [r4, #9]
 800d3c8:	9300      	str	r3, [sp, #0]
 800d3ca:	4812      	ldr	r0, [pc, #72]	; (800d414 <RDMDevice::Print()+0x74>)
 800d3cc:	79e3      	ldrb	r3, [r4, #7]
 800d3ce:	f7fb fe8b 	bl	80090e8 <printf>
 800d3d2:	f894 102a 	ldrb.w	r1, [r4, #42]	; 0x2a
 800d3d6:	f104 020a 	add.w	r2, r4, #10
 800d3da:	480f      	ldr	r0, [pc, #60]	; (800d418 <RDMDevice::Print()+0x78>)
 800d3dc:	f7fb fe84 	bl	80090e8 <printf>
 800d3e0:	f8b4 104c 	ldrh.w	r1, [r4, #76]	; 0x4c
 800d3e4:	f894 204c 	ldrb.w	r2, [r4, #76]	; 0x4c
 800d3e8:	0a09      	lsrs	r1, r1, #8
 800d3ea:	480c      	ldr	r0, [pc, #48]	; (800d41c <RDMDevice::Print()+0x7c>)
 800d3ec:	f7fb fe7c 	bl	80090e8 <printf>
 800d3f0:	f8b4 104e 	ldrh.w	r1, [r4, #78]	; 0x4e
 800d3f4:	f894 204e 	ldrb.w	r2, [r4, #78]	; 0x4e
 800d3f8:	4809      	ldr	r0, [pc, #36]	; (800d420 <RDMDevice::Print()+0x80>)
 800d3fa:	0a09      	lsrs	r1, r1, #8
 800d3fc:	b002      	add	sp, #8
 800d3fe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d402:	f7fb be71 	b.w	80090e8 <printf>
 800d406:	bf00      	nop
 800d408:	08015ff9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
 800d40c:	08016013 	stmdaeq	r1, {r0, r1, r4, sp, lr}
 800d410:	0801602e 	stmdaeq	r1, {r1, r2, r3, r5, sp, lr}
 800d414:	0801604d 	stmdaeq	r1, {r0, r2, r3, r6, sp, lr}
 800d418:	08016074 	stmdaeq	r1, {r2, r4, r5, r6, sp, lr}
 800d41c:	0801608f 	stmdaeq	r1, {r0, r1, r2, r3, r7, sp, lr}
 800d420:	080160ae 	stmdaeq	r1, {r1, r2, r3, r5, r7, sp, lr}

0800d424 <uuid_unparse_x>:
 800d424:	4603      	mov	r3, r0
 800d426:	b530      	push	{r4, r5, lr}
 800d428:	4608      	mov	r0, r1
 800d42a:	4611      	mov	r1, r2
 800d42c:	681a      	ldr	r2, [r3, #0]
 800d42e:	b08f      	sub	sp, #60	; 0x3c
 800d430:	ba12      	rev	r2, r2
 800d432:	920a      	str	r2, [sp, #40]	; 0x28
 800d434:	889a      	ldrh	r2, [r3, #4]
 800d436:	891c      	ldrh	r4, [r3, #8]
 800d438:	ba52      	rev16	r2, r2
 800d43a:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800d43e:	88da      	ldrh	r2, [r3, #6]
 800d440:	ba64      	rev16	r4, r4
 800d442:	ba52      	rev16	r2, r2
 800d444:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 800d448:	f8ad 4030 	strh.w	r4, [sp, #48]	; 0x30
 800d44c:	f103 020a 	add.w	r2, r3, #10
 800d450:	f10d 0431 	add.w	r4, sp, #49	; 0x31
 800d454:	3310      	adds	r3, #16
 800d456:	4293      	cmp	r3, r2
 800d458:	d122      	bne.n	800d4a0 <uuid_unparse_x+0x7c>
 800d45a:	f89d 2037 	ldrb.w	r2, [sp, #55]	; 0x37
 800d45e:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 800d462:	9208      	str	r2, [sp, #32]
 800d464:	f89d 2036 	ldrb.w	r2, [sp, #54]	; 0x36
 800d468:	0a1b      	lsrs	r3, r3, #8
 800d46a:	9207      	str	r2, [sp, #28]
 800d46c:	f89d 2035 	ldrb.w	r2, [sp, #53]	; 0x35
 800d470:	9301      	str	r3, [sp, #4]
 800d472:	9206      	str	r2, [sp, #24]
 800d474:	f89d 2034 	ldrb.w	r2, [sp, #52]	; 0x34
 800d478:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 800d47c:	9205      	str	r2, [sp, #20]
 800d47e:	f89d 2033 	ldrb.w	r2, [sp, #51]	; 0x33
 800d482:	9300      	str	r3, [sp, #0]
 800d484:	9204      	str	r2, [sp, #16]
 800d486:	f89d 2032 	ldrb.w	r2, [sp, #50]	; 0x32
 800d48a:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 800d48e:	9203      	str	r2, [sp, #12]
 800d490:	f89d 2030 	ldrb.w	r2, [sp, #48]	; 0x30
 800d494:	9202      	str	r2, [sp, #8]
 800d496:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800d498:	f7fb fe36 	bl	8009108 <sprintf>
 800d49c:	b00f      	add	sp, #60	; 0x3c
 800d49e:	bd30      	pop	{r4, r5, pc}
 800d4a0:	f812 5b01 	ldrb.w	r5, [r2], #1
 800d4a4:	f804 5f01 	strb.w	r5, [r4, #1]!
 800d4a8:	e7d5      	b.n	800d456 <uuid_unparse_x+0x32>
	...

0800d4ac <uuid_unparse>:
 800d4ac:	4a01      	ldr	r2, [pc, #4]	; (800d4b4 <uuid_unparse+0x8>)
 800d4ae:	f7ff bfb9 	b.w	800d424 <uuid_unparse_x>
 800d4b2:	bf00      	nop
 800d4b4:	08016101 	stmdaeq	r1, {r0, r8, sp, lr}

0800d4b8 <DmxSend::~DmxSend()>:
 800d4b8:	4770      	bx	lr
	...

0800d4bc <DmxSend::Start(unsigned int)>:
 800d4bc:	2301      	movs	r3, #1
 800d4be:	b430      	push	{r4, r5}
 800d4c0:	4c08      	ldr	r4, [pc, #32]	; (800d4e4 <DmxSend::Start(unsigned int)+0x28>)
 800d4c2:	fa03 f001 	lsl.w	r0, r3, r1
 800d4c6:	7822      	ldrb	r2, [r4, #0]
 800d4c8:	ea30 0502 	bics.w	r5, r0, r2
 800d4cc:	d007      	beq.n	800d4de <DmxSend::Start(unsigned int)+0x22>
 800d4ce:	4302      	orrs	r2, r0
 800d4d0:	4805      	ldr	r0, [pc, #20]	; (800d4e8 <DmxSend::Start(unsigned int)+0x2c>)
 800d4d2:	7022      	strb	r2, [r4, #0]
 800d4d4:	6800      	ldr	r0, [r0, #0]
 800d4d6:	2200      	movs	r2, #0
 800d4d8:	bc30      	pop	{r4, r5}
 800d4da:	f000 bd77 	b.w	800dfcc <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 800d4de:	bc30      	pop	{r4, r5}
 800d4e0:	4770      	bx	lr
 800d4e2:	bf00      	nop
 800d4e4:	20002020 	andcs	r2, r0, r0, lsr #32
 800d4e8:	20002878 	andcs	r2, r0, r8, ror r8

0800d4ec <DmxSend::Stop(unsigned int)>:
 800d4ec:	2201      	movs	r2, #1
 800d4ee:	b410      	push	{r4}
 800d4f0:	4809      	ldr	r0, [pc, #36]	; (800d518 <DmxSend::Stop(unsigned int)+0x2c>)
 800d4f2:	408a      	lsls	r2, r1
 800d4f4:	7803      	ldrb	r3, [r0, #0]
 800d4f6:	ea03 0402 	and.w	r4, r3, r2
 800d4fa:	439a      	bics	r2, r3
 800d4fc:	d109      	bne.n	800d512 <DmxSend::Stop(unsigned int)+0x26>
 800d4fe:	ea23 0304 	bic.w	r3, r3, r4
 800d502:	7003      	strb	r3, [r0, #0]
 800d504:	2300      	movs	r3, #0
 800d506:	4805      	ldr	r0, [pc, #20]	; (800d51c <DmxSend::Stop(unsigned int)+0x30>)
 800d508:	461a      	mov	r2, r3
 800d50a:	6800      	ldr	r0, [r0, #0]
 800d50c:	bc10      	pop	{r4}
 800d50e:	f000 bd5d 	b.w	800dfcc <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 800d512:	bc10      	pop	{r4}
 800d514:	4770      	bx	lr
 800d516:	bf00      	nop
 800d518:	20002020 	andcs	r2, r0, r0, lsr #32
 800d51c:	20002878 	andcs	r2, r0, r8, ror r8

0800d520 <DmxSend::SetData(unsigned int, unsigned char const*, unsigned int)>:
 800d520:	b11b      	cbz	r3, 800d52a <DmxSend::SetData(unsigned int, unsigned char const*, unsigned int)+0xa>
 800d522:	4802      	ldr	r0, [pc, #8]	; (800d52c <DmxSend::SetData(unsigned int, unsigned char const*, unsigned int)+0xc>)
 800d524:	6800      	ldr	r0, [r0, #0]
 800d526:	f000 bf01 	b.w	800e32c <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)>
 800d52a:	4770      	bx	lr
 800d52c:	20002878 	andcs	r2, r0, r8, ror r8

0800d530 <DmxSend::Blackout(bool)>:
 800d530:	4b01      	ldr	r3, [pc, #4]	; (800d538 <DmxSend::Blackout(bool)+0x8>)
 800d532:	6818      	ldr	r0, [r3, #0]
 800d534:	f000 bf20 	b.w	800e378 <Dmx::Blackout()>
 800d538:	20002878 	andcs	r2, r0, r8, ror r8

0800d53c <DmxSend::FullOn()>:
 800d53c:	4b01      	ldr	r3, [pc, #4]	; (800d544 <DmxSend::FullOn()+0x8>)
 800d53e:	6818      	ldr	r0, [r3, #0]
 800d540:	f000 bf5e 	b.w	800e400 <Dmx::FullOn()>
 800d544:	20002878 	andcs	r2, r0, r8, ror r8

0800d548 <DmxSend::Print()>:
 800d548:	b510      	push	{r4, lr}
 800d54a:	4c0e      	ldr	r4, [pc, #56]	; (800d584 <DmxSend::Print()+0x3c>)
 800d54c:	480e      	ldr	r0, [pc, #56]	; (800d588 <DmxSend::Print()+0x40>)
 800d54e:	f7fb fdcb 	bl	80090e8 <printf>
 800d552:	6823      	ldr	r3, [r4, #0]
 800d554:	480d      	ldr	r0, [pc, #52]	; (800d58c <DmxSend::Print()+0x44>)
 800d556:	6819      	ldr	r1, [r3, #0]
 800d558:	f7fb fdc6 	bl	80090e8 <printf>
 800d55c:	6823      	ldr	r3, [r4, #0]
 800d55e:	480c      	ldr	r0, [pc, #48]	; (800d590 <DmxSend::Print()+0x48>)
 800d560:	6859      	ldr	r1, [r3, #4]
 800d562:	f7fb fdc1 	bl	80090e8 <printf>
 800d566:	6823      	ldr	r3, [r4, #0]
 800d568:	490a      	ldr	r1, [pc, #40]	; (800d594 <DmxSend::Print()+0x4c>)
 800d56a:	689b      	ldr	r3, [r3, #8]
 800d56c:	480a      	ldr	r0, [pc, #40]	; (800d598 <DmxSend::Print()+0x50>)
 800d56e:	fbb1 f1f3 	udiv	r1, r1, r3
 800d572:	f7fb fdb9 	bl	80090e8 <printf>
 800d576:	6823      	ldr	r3, [r4, #0]
 800d578:	4808      	ldr	r0, [pc, #32]	; (800d59c <DmxSend::Print()+0x54>)
 800d57a:	8a19      	ldrh	r1, [r3, #16]
 800d57c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d580:	f7fb bdb2 	b.w	80090e8 <printf>
 800d584:	20002878 	andcs	r2, r0, r8, ror r8
 800d588:	08016132 	stmdaeq	r1, {r1, r4, r5, r8, sp, lr}
 800d58c:	0801613c 	stmdaeq	r1, {r2, r3, r4, r5, r8, sp, lr}
 800d590:	08016150 	stmdaeq	r1, {r4, r6, r8, sp, lr}
 800d594:	000f4240 	andeq	r4, pc, r0, asr #4
 800d598:	08016164 	stmdaeq	r1, {r2, r5, r6, r8, sp, lr}
 800d59c:	08016178 	stmdaeq	r1, {r3, r4, r5, r6, r8, sp, lr}

0800d5a0 <DmxSend::~DmxSend()>:
 800d5a0:	b510      	push	{r4, lr}
 800d5a2:	4604      	mov	r4, r0
 800d5a4:	f004 ff9e 	bl	80124e4 <operator delete(void*)>
 800d5a8:	4620      	mov	r0, r4
 800d5aa:	bd10      	pop	{r4, pc}

0800d5ac <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>:
 800d5ac:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d5ae:	88c6      	ldrh	r6, [r0, #6]
 800d5b0:	8885      	ldrh	r5, [r0, #4]
 800d5b2:	42ae      	cmp	r6, r5
 800d5b4:	d216      	bcs.n	800d5e4 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x38>
 800d5b6:	4604      	mov	r4, r0
 800d5b8:	6800      	ldr	r0, [r0, #0]
 800d5ba:	1bad      	subs	r5, r5, r6
 800d5bc:	4430      	add	r0, r6
 800d5be:	7a26      	ldrb	r6, [r4, #8]
 800d5c0:	b923      	cbnz	r3, 800d5cc <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x20>
 800d5c2:	b926      	cbnz	r6, 800d5ce <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x22>
 800d5c4:	9200      	str	r2, [sp, #0]
 800d5c6:	460b      	mov	r3, r1
 800d5c8:	4a09      	ldr	r2, [pc, #36]	; (800d5f0 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x44>)
 800d5ca:	e003      	b.n	800d5d4 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800d5cc:	b166      	cbz	r6, 800d5e8 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x3c>
 800d5ce:	460b      	mov	r3, r1
 800d5d0:	9200      	str	r2, [sp, #0]
 800d5d2:	4a08      	ldr	r2, [pc, #32]	; (800d5f4 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x48>)
 800d5d4:	4629      	mov	r1, r5
 800d5d6:	f7fb fdaf 	bl	8009138 <snprintf>
 800d5da:	4285      	cmp	r5, r0
 800d5dc:	bfa2      	ittt	ge
 800d5de:	88e3      	ldrhge	r3, [r4, #6]
 800d5e0:	181b      	addge	r3, r3, r0
 800d5e2:	80e3      	strhge	r3, [r4, #6]
 800d5e4:	b002      	add	sp, #8
 800d5e6:	bd70      	pop	{r4, r5, r6, pc}
 800d5e8:	9200      	str	r2, [sp, #0]
 800d5ea:	460b      	mov	r3, r1
 800d5ec:	4a02      	ldr	r2, [pc, #8]	; (800d5f8 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x4c>)
 800d5ee:	e7f1      	b.n	800d5d4 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800d5f0:	08014ccd 	stmdaeq	r1, {r0, r2, r3, r6, r7, sl, fp, lr}
 800d5f4:	08014cc4 	stmdaeq	r1, {r2, r6, r7, sl, fp, lr}
 800d5f8:	08014cce 	stmdaeq	r1, {r1, r2, r3, r6, r7, sl, fp, lr}

0800d5fc <DmxParams::DmxParams(DmxParamsStore*)>:
 800d5fc:	6001      	str	r1, [r0, #0]
 800d5fe:	2100      	movs	r1, #0
 800d600:	4a03      	ldr	r2, [pc, #12]	; (800d610 <DmxParams::DmxParams(DmxParamsStore*)+0x14>)
 800d602:	e9c0 1201 	strd	r1, r2, [r0, #4]
 800d606:	f64f 7228 	movw	r2, #65320	; 0xff28
 800d60a:	8182      	strh	r2, [r0, #12]
 800d60c:	4770      	bx	lr
 800d60e:	bf00      	nop
 800d610:	000c00b0 	strheq	r0, [ip], -r0	; <UNPREDICTABLE>

0800d614 <DmxParams::Load()>:
 800d614:	b508      	push	{r3, lr}
 800d616:	2300      	movs	r3, #0
 800d618:	4601      	mov	r1, r0
 800d61a:	6043      	str	r3, [r0, #4]
 800d61c:	6800      	ldr	r0, [r0, #0]
 800d61e:	b120      	cbz	r0, 800d62a <DmxParams::Load()+0x16>
 800d620:	6803      	ldr	r3, [r0, #0]
 800d622:	3104      	adds	r1, #4
 800d624:	68db      	ldr	r3, [r3, #12]
 800d626:	4798      	blx	r3
 800d628:	2001      	movs	r0, #1
 800d62a:	bd08      	pop	{r3, pc}

0800d62c <DmxParams::Load(char const*, unsigned int)>:
 800d62c:	6803      	ldr	r3, [r0, #0]
 800d62e:	b1d3      	cbz	r3, 800d666 <DmxParams::Load(char const*, unsigned int)+0x3a>
 800d630:	2300      	movs	r3, #0
 800d632:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d634:	460d      	mov	r5, r1
 800d636:	4616      	mov	r6, r2
 800d638:	4604      	mov	r4, r0
 800d63a:	6043      	str	r3, [r0, #4]
 800d63c:	4602      	mov	r2, r0
 800d63e:	490a      	ldr	r1, [pc, #40]	; (800d668 <DmxParams::Load(char const*, unsigned int)+0x3c>)
 800d640:	4668      	mov	r0, sp
 800d642:	f004 fa29 	bl	8011a98 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800d646:	4632      	mov	r2, r6
 800d648:	4629      	mov	r1, r5
 800d64a:	4668      	mov	r0, sp
 800d64c:	f004 fa28 	bl	8011aa0 <ReadConfigFile::Read(char const*, unsigned int)>
 800d650:	4621      	mov	r1, r4
 800d652:	f851 0b04 	ldr.w	r0, [r1], #4
 800d656:	6803      	ldr	r3, [r0, #0]
 800d658:	689b      	ldr	r3, [r3, #8]
 800d65a:	4798      	blx	r3
 800d65c:	4668      	mov	r0, sp
 800d65e:	f004 fa1e 	bl	8011a9e <ReadConfigFile::~ReadConfigFile()>
 800d662:	b002      	add	sp, #8
 800d664:	bd70      	pop	{r4, r5, r6, pc}
 800d666:	4770      	bx	lr
 800d668:	0800d739 	stmdaeq	r0, {r0, r3, r4, r5, r8, r9, sl, ip, lr, pc}

0800d66c <DmxParams::callbackFunction(char const*)>:
 800d66c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d66e:	460d      	mov	r5, r1
 800d670:	4604      	mov	r4, r0
 800d672:	492d      	ldr	r1, [pc, #180]	; (800d728 <DmxParams::callbackFunction(char const*)+0xbc>)
 800d674:	4628      	mov	r0, r5
 800d676:	f10d 0206 	add.w	r2, sp, #6
 800d67a:	f004 fa9f 	bl	8011bbc <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800d67e:	b988      	cbnz	r0, 800d6a4 <DmxParams::callbackFunction(char const*)+0x38>
 800d680:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800d684:	6863      	ldr	r3, [r4, #4]
 800d686:	2a5b      	cmp	r2, #91	; 0x5b
 800d688:	d907      	bls.n	800d69a <DmxParams::callbackFunction(char const*)+0x2e>
 800d68a:	2ab0      	cmp	r2, #176	; 0xb0
 800d68c:	d005      	beq.n	800d69a <DmxParams::callbackFunction(char const*)+0x2e>
 800d68e:	8122      	strh	r2, [r4, #8]
 800d690:	f043 0301 	orr.w	r3, r3, #1
 800d694:	6063      	str	r3, [r4, #4]
 800d696:	b003      	add	sp, #12
 800d698:	bd30      	pop	{r4, r5, pc}
 800d69a:	22b0      	movs	r2, #176	; 0xb0
 800d69c:	f023 0301 	bic.w	r3, r3, #1
 800d6a0:	8122      	strh	r2, [r4, #8]
 800d6a2:	e7f7      	b.n	800d694 <DmxParams::callbackFunction(char const*)+0x28>
 800d6a4:	4628      	mov	r0, r5
 800d6a6:	4921      	ldr	r1, [pc, #132]	; (800d72c <DmxParams::callbackFunction(char const*)+0xc0>)
 800d6a8:	f10d 0206 	add.w	r2, sp, #6
 800d6ac:	f004 fa86 	bl	8011bbc <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800d6b0:	b968      	cbnz	r0, 800d6ce <DmxParams::callbackFunction(char const*)+0x62>
 800d6b2:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800d6b6:	6863      	ldr	r3, [r4, #4]
 800d6b8:	2a0c      	cmp	r2, #12
 800d6ba:	bf93      	iteet	ls
 800d6bc:	220c      	movls	r2, #12
 800d6be:	8162      	strhhi	r2, [r4, #10]
 800d6c0:	f043 0302 	orrhi.w	r3, r3, #2
 800d6c4:	8162      	strhls	r2, [r4, #10]
 800d6c6:	bf98      	it	ls
 800d6c8:	f023 0302 	bicls.w	r3, r3, #2
 800d6cc:	e7e2      	b.n	800d694 <DmxParams::callbackFunction(char const*)+0x28>
 800d6ce:	4628      	mov	r0, r5
 800d6d0:	4917      	ldr	r1, [pc, #92]	; (800d730 <DmxParams::callbackFunction(char const*)+0xc4>)
 800d6d2:	f10d 0205 	add.w	r2, sp, #5
 800d6d6:	f004 fa8f 	bl	8011bf8 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800d6da:	b950      	cbnz	r0, 800d6f2 <DmxParams::callbackFunction(char const*)+0x86>
 800d6dc:	f89d 2005 	ldrb.w	r2, [sp, #5]
 800d6e0:	6863      	ldr	r3, [r4, #4]
 800d6e2:	2a28      	cmp	r2, #40	; 0x28
 800d6e4:	7322      	strb	r2, [r4, #12]
 800d6e6:	bf14      	ite	ne
 800d6e8:	f043 0304 	orrne.w	r3, r3, #4
 800d6ec:	f023 0304 	biceq.w	r3, r3, #4
 800d6f0:	e7d0      	b.n	800d694 <DmxParams::callbackFunction(char const*)+0x28>
 800d6f2:	4628      	mov	r0, r5
 800d6f4:	490f      	ldr	r1, [pc, #60]	; (800d734 <DmxParams::callbackFunction(char const*)+0xc8>)
 800d6f6:	f10d 0206 	add.w	r2, sp, #6
 800d6fa:	f004 fa5f 	bl	8011bbc <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800d6fe:	2800      	cmp	r0, #0
 800d700:	d1c9      	bne.n	800d696 <DmxParams::callbackFunction(char const*)+0x2a>
 800d702:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800d706:	6863      	ldr	r3, [r4, #4]
 800d708:	1e91      	subs	r1, r2, #2
 800d70a:	f5b1 7fff 	cmp.w	r1, #510	; 0x1fe
 800d70e:	bf2f      	iteee	cs
 800d710:	22ff      	movcs	r2, #255	; 0xff
 800d712:	0852      	lsrcc	r2, r2, #1
 800d714:	f102 32ff 	addcc.w	r2, r2, #4294967295	; 0xffffffff
 800d718:	7362      	strbcc	r2, [r4, #13]
 800d71a:	bf32      	itee	cc
 800d71c:	f043 0308 	orrcc.w	r3, r3, #8
 800d720:	7362      	strbcs	r2, [r4, #13]
 800d722:	f023 0308 	biccs.w	r3, r3, #8
 800d726:	e7b5      	b.n	800d694 <DmxParams::callbackFunction(char const*)+0x28>
 800d728:	080161c4 	stmdaeq	r1, {r2, r6, r7, r8, sp, lr}
 800d72c:	080161e8 	stmdaeq	r1, {r3, r5, r6, r7, r8, sp, lr}
 800d730:	080161db 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, r8, sp, lr}
 800d734:	080161cf 	stmdaeq	r1, {r0, r1, r2, r3, r6, r7, r8, sp, lr}

0800d738 <DmxParams::staticCallbackFunction(void*, char const*)>:
 800d738:	f7ff bf98 	b.w	800d66c <DmxParams::callbackFunction(char const*)>

0800d73c <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)>:
 800d73c:	b570      	push	{r4, r5, r6, lr}
 800d73e:	4604      	mov	r4, r0
 800d740:	4615      	mov	r5, r2
 800d742:	461e      	mov	r6, r3
 800d744:	b086      	sub	sp, #24
 800d746:	3004      	adds	r0, #4
 800d748:	b369      	cbz	r1, 800d7a6 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x6a>
 800d74a:	220a      	movs	r2, #10
 800d74c:	f004 ff8d 	bl	801266a <memmove>
 800d750:	462a      	mov	r2, r5
 800d752:	4633      	mov	r3, r6
 800d754:	4932      	ldr	r1, [pc, #200]	; (800d820 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xe4>)
 800d756:	a803      	add	r0, sp, #12
 800d758:	f004 f8fe 	bl	8011958 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800d75c:	6863      	ldr	r3, [r4, #4]
 800d75e:	8922      	ldrh	r2, [r4, #8]
 800d760:	4930      	ldr	r1, [pc, #192]	; (800d824 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xe8>)
 800d762:	f003 0301 	and.w	r3, r3, #1
 800d766:	a803      	add	r0, sp, #12
 800d768:	f7ff ff20 	bl	800d5ac <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800d76c:	6863      	ldr	r3, [r4, #4]
 800d76e:	8962      	ldrh	r2, [r4, #10]
 800d770:	492d      	ldr	r1, [pc, #180]	; (800d828 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xec>)
 800d772:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800d776:	a803      	add	r0, sp, #12
 800d778:	f7ff ff18 	bl	800d5ac <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800d77c:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800d780:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800d784:	7b23      	ldrb	r3, [r4, #12]
 800d786:	42aa      	cmp	r2, r5
 800d788:	6861      	ldr	r1, [r4, #4]
 800d78a:	d221      	bcs.n	800d7d0 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x94>
 800d78c:	9803      	ldr	r0, [sp, #12]
 800d78e:	0749      	lsls	r1, r1, #29
 800d790:	4410      	add	r0, r2
 800d792:	eba5 0502 	sub.w	r5, r5, r2
 800d796:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800d79a:	d40b      	bmi.n	800d7b4 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x78>
 800d79c:	b95a      	cbnz	r2, 800d7b6 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x7a>
 800d79e:	9300      	str	r3, [sp, #0]
 800d7a0:	4a22      	ldr	r2, [pc, #136]	; (800d82c <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf0>)
 800d7a2:	4b23      	ldr	r3, [pc, #140]	; (800d830 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf4>)
 800d7a4:	e00a      	b.n	800d7bc <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x80>
 800d7a6:	6823      	ldr	r3, [r4, #0]
 800d7a8:	4601      	mov	r1, r0
 800d7aa:	681a      	ldr	r2, [r3, #0]
 800d7ac:	4618      	mov	r0, r3
 800d7ae:	68d2      	ldr	r2, [r2, #12]
 800d7b0:	4790      	blx	r2
 800d7b2:	e7cd      	b.n	800d750 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x14>
 800d7b4:	b37a      	cbz	r2, 800d816 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xda>
 800d7b6:	9300      	str	r3, [sp, #0]
 800d7b8:	4a1e      	ldr	r2, [pc, #120]	; (800d834 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf8>)
 800d7ba:	4b1d      	ldr	r3, [pc, #116]	; (800d830 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf4>)
 800d7bc:	4629      	mov	r1, r5
 800d7be:	f7fb fcbb 	bl	8009138 <snprintf>
 800d7c2:	4285      	cmp	r5, r0
 800d7c4:	bfa2      	ittt	ge
 800d7c6:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800d7ca:	18c0      	addge	r0, r0, r3
 800d7cc:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800d7d0:	7b62      	ldrb	r2, [r4, #13]
 800d7d2:	6863      	ldr	r3, [r4, #4]
 800d7d4:	3201      	adds	r2, #1
 800d7d6:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 800d7da:	4917      	ldr	r1, [pc, #92]	; (800d838 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xfc>)
 800d7dc:	0052      	lsls	r2, r2, #1
 800d7de:	a803      	add	r0, sp, #12
 800d7e0:	f7ff fee4 	bl	800d5ac <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800d7e4:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800d7e8:	b17b      	cbz	r3, 800d80a <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xce>
 800d7ea:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800d7ee:	9b03      	ldr	r3, [sp, #12]
 800d7f0:	4413      	add	r3, r2
 800d7f2:	227d      	movs	r2, #125	; 0x7d
 800d7f4:	f803 2c01 	strb.w	r2, [r3, #-1]
 800d7f8:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800d7fc:	9903      	ldr	r1, [sp, #12]
 800d7fe:	54ca      	strb	r2, [r1, r3]
 800d800:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800d804:	3301      	adds	r3, #1
 800d806:	f8ad 3012 	strh.w	r3, [sp, #18]
 800d80a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800d80e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d810:	601a      	str	r2, [r3, #0]
 800d812:	b006      	add	sp, #24
 800d814:	bd70      	pop	{r4, r5, r6, pc}
 800d816:	9300      	str	r3, [sp, #0]
 800d818:	4a08      	ldr	r2, [pc, #32]	; (800d83c <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x100>)
 800d81a:	4b05      	ldr	r3, [pc, #20]	; (800d830 <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0xf4>)
 800d81c:	e7ce      	b.n	800d7bc <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)+0x80>
 800d81e:	bf00      	nop
 800d820:	080161f1 	stmdaeq	r1, {r0, r4, r5, r6, r7, r8, sp, lr}
 800d824:	080161c4 	stmdaeq	r1, {r2, r6, r7, r8, sp, lr}
 800d828:	080161e8 	stmdaeq	r1, {r3, r5, r6, r7, r8, sp, lr}
 800d82c:	08014ccd 	stmdaeq	r1, {r0, r2, r3, r6, r7, sl, fp, lr}
 800d830:	080161db 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, r8, sp, lr}
 800d834:	08014cc4 	stmdaeq	r1, {r2, r6, r7, sl, fp, lr}
 800d838:	080161cf 	stmdaeq	r1, {r0, r1, r2, r3, r6, r7, r8, sp, lr}
 800d83c:	08014cce 	stmdaeq	r1, {r1, r2, r3, r6, r7, sl, fp, lr}

0800d840 <DmxParams::Save(char*, unsigned int, unsigned int&)>:
 800d840:	b513      	push	{r0, r1, r4, lr}
 800d842:	6804      	ldr	r4, [r0, #0]
 800d844:	b914      	cbnz	r4, 800d84c <DmxParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800d846:	601c      	str	r4, [r3, #0]
 800d848:	b002      	add	sp, #8
 800d84a:	bd10      	pop	{r4, pc}
 800d84c:	9300      	str	r3, [sp, #0]
 800d84e:	4613      	mov	r3, r2
 800d850:	460a      	mov	r2, r1
 800d852:	2100      	movs	r1, #0
 800d854:	f7ff ff72 	bl	800d73c <DmxParams::Builder(TDmxParams const*, char*, unsigned int, unsigned int&)>
 800d858:	e7f6      	b.n	800d848 <DmxParams::Save(char*, unsigned int, unsigned int&)+0x8>
	...

0800d85c <DmxParams::Set(Dmx*)>:
 800d85c:	b538      	push	{r3, r4, r5, lr}
 800d85e:	6843      	ldr	r3, [r0, #4]
 800d860:	4604      	mov	r4, r0
 800d862:	07d8      	lsls	r0, r3, #31
 800d864:	460d      	mov	r5, r1
 800d866:	d503      	bpl.n	800d870 <DmxParams::Set(Dmx*)+0x14>
 800d868:	4628      	mov	r0, r5
 800d86a:	8921      	ldrh	r1, [r4, #8]
 800d86c:	f000 fd34 	bl	800e2d8 <Dmx::SetDmxBreakTime(unsigned int)>
 800d870:	6863      	ldr	r3, [r4, #4]
 800d872:	0799      	lsls	r1, r3, #30
 800d874:	d503      	bpl.n	800d87e <DmxParams::Set(Dmx*)+0x22>
 800d876:	4628      	mov	r0, r5
 800d878:	8961      	ldrh	r1, [r4, #10]
 800d87a:	f000 fd37 	bl	800e2ec <Dmx::SetDmxMabTime(unsigned int)>
 800d87e:	6863      	ldr	r3, [r4, #4]
 800d880:	075a      	lsls	r2, r3, #29
 800d882:	d507      	bpl.n	800d894 <DmxParams::Set(Dmx*)+0x38>
 800d884:	7b21      	ldrb	r1, [r4, #12]
 800d886:	b111      	cbz	r1, 800d88e <DmxParams::Set(Dmx*)+0x32>
 800d888:	4b08      	ldr	r3, [pc, #32]	; (800d8ac <DmxParams::Set(Dmx*)+0x50>)
 800d88a:	fbb3 f1f1 	udiv	r1, r3, r1
 800d88e:	4628      	mov	r0, r5
 800d890:	f000 fcee 	bl	800e270 <Dmx::SetDmxPeriodTime(unsigned int)>
 800d894:	6863      	ldr	r3, [r4, #4]
 800d896:	071b      	lsls	r3, r3, #28
 800d898:	d507      	bpl.n	800d8aa <DmxParams::Set(Dmx*)+0x4e>
 800d89a:	7b61      	ldrb	r1, [r4, #13]
 800d89c:	4628      	mov	r0, r5
 800d89e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d8a2:	3101      	adds	r1, #1
 800d8a4:	0049      	lsls	r1, r1, #1
 800d8a6:	f000 bd2b 	b.w	800e300 <Dmx::SetDmxSlots(unsigned short)>
 800d8aa:	bd38      	pop	{r3, r4, r5, pc}
 800d8ac:	000f4240 	andeq	r4, pc, r0, asr #4

0800d8b0 <DmxParams::Dump()>:
 800d8b0:	4770      	bx	lr
	...

0800d8b4 <_port_to_uart(unsigned int)>:
 800d8b4:	4a03      	ldr	r2, [pc, #12]	; (800d8c4 <_port_to_uart(unsigned int)+0x10>)
 800d8b6:	4b04      	ldr	r3, [pc, #16]	; (800d8c8 <_port_to_uart(unsigned int)+0x14>)
 800d8b8:	2800      	cmp	r0, #0
 800d8ba:	bf14      	ite	ne
 800d8bc:	4610      	movne	r0, r2
 800d8be:	4618      	moveq	r0, r3
 800d8c0:	4770      	bx	lr
 800d8c2:	bf00      	nop
 800d8c4:	40017000 	andmi	r7, r1, r0
 800d8c8:	40004800 	andmi	r4, r0, r0, lsl #16

0800d8cc <irq_handler_dmx_rdm_input(unsigned int, unsigned int)>:
 800d8cc:	b570      	push	{r4, r5, r6, lr}
 800d8ce:	f3bf 8f5f 	dmb	sy
 800d8d2:	2508      	movs	r5, #8
 800d8d4:	4ba9      	ldr	r3, [pc, #676]	; (800db7c <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x2b0>)
 800d8d6:	f8c3 5c10 	str.w	r5, [r3, #3088]	; 0xc10
 800d8da:	6802      	ldr	r2, [r0, #0]
 800d8dc:	f012 0f02 	tst.w	r2, #2
 800d8e0:	4aa7      	ldr	r2, [pc, #668]	; (800db80 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x2b4>)
 800d8e2:	d017      	beq.n	800d914 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x48>
 800d8e4:	6804      	ldr	r4, [r0, #0]
 800d8e6:	f024 0402 	bic.w	r4, r4, #2
 800d8ea:	6004      	str	r4, [r0, #0]
 800d8ec:	6840      	ldr	r0, [r0, #4]
 800d8ee:	f44f 7004 	mov.w	r0, #528	; 0x210
 800d8f2:	fb00 2201 	mla	r2, r0, r1, r2
 800d8f6:	2100      	movs	r1, #0
 800d8f8:	f8c2 1204 	str.w	r1, [r2, #516]	; 0x204
 800d8fc:	2102      	movs	r1, #2
 800d8fe:	f8c2 120c 	str.w	r1, [r2, #524]	; 0x20c
 800d902:	2210      	movs	r2, #16
 800d904:	f8c3 5c14 	str.w	r5, [r3, #3092]	; 0xc14
 800d908:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 800d90c:	2220      	movs	r2, #32
 800d90e:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 800d912:	bd70      	pop	{r4, r5, r6, pc}
 800d914:	f44f 7304 	mov.w	r3, #528	; 0x210
 800d918:	fb03 2401 	mla	r4, r3, r1, r2
 800d91c:	6840      	ldr	r0, [r0, #4]
 800d91e:	f8d4 420c 	ldr.w	r4, [r4, #524]	; 0x20c
 800d922:	f3c0 0008 	ubfx	r0, r0, #0, #9
 800d926:	2c0a      	cmp	r4, #10
 800d928:	f200 811f 	bhi.w	800db6a <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x29e>
 800d92c:	e8df f014 	tbh	[pc, r4, lsl #1]
 800d930:	011d000b 	tsteq	sp, fp
 800d934:	011d001b 	tsteq	sp, fp, lsl r0
 800d938:	00750049 	rsbseq	r0, r5, r9, asr #32
 800d93c:	00a40094 	umlaleq	r0, r4, r4, r0
 800d940:	00e900d1 	ldrdeq	r0, [r9], #1	; <UNPREDICTABLE>
 800d944:	434b00ff 	movtmi	r0, #45311	; 0xb0ff
 800d948:	2408      	movs	r4, #8
 800d94a:	18d1      	adds	r1, r2, r3
 800d94c:	54d0      	strb	r0, [r2, r3]
 800d94e:	2301      	movs	r3, #1
 800d950:	f8c1 420c 	str.w	r4, [r1, #524]	; 0x20c
 800d954:	f8a1 3204 	strh.w	r3, [r1, #516]	; 0x204
 800d958:	2208      	movs	r2, #8
 800d95a:	4b88      	ldr	r3, [pc, #544]	; (800db7c <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x2b0>)
 800d95c:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 800d960:	f3bf 8f5f 	dmb	sy
 800d964:	e7d5      	b.n	800d912 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x46>
 800d966:	b148      	cbz	r0, 800d97c <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0xb0>
 800d968:	28cc      	cmp	r0, #204	; 0xcc
 800d96a:	f44f 7304 	mov.w	r3, #528	; 0x210
 800d96e:	d01e      	beq.n	800d9ae <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0xe2>
 800d970:	fb03 2301 	mla	r3, r3, r1, r2
 800d974:	2200      	movs	r2, #0
 800d976:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800d97a:	e7ed      	b.n	800d958 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x8c>
 800d97c:	434b      	muls	r3, r1
 800d97e:	18d4      	adds	r4, r2, r3
 800d980:	54d0      	strb	r0, [r2, r3]
 800d982:	2301      	movs	r3, #1
 800d984:	f8c4 3204 	str.w	r3, [r4, #516]	; 0x204
 800d988:	4b7e      	ldr	r3, [pc, #504]	; (800db84 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x2b8>)
 800d98a:	eb03 1301 	add.w	r3, r3, r1, lsl #4
 800d98e:	685a      	ldr	r2, [r3, #4]
 800d990:	3201      	adds	r2, #1
 800d992:	605a      	str	r2, [r3, #4]
 800d994:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800d998:	f8d2 2424 	ldr.w	r2, [r2, #1060]	; 0x424
 800d99c:	60da      	str	r2, [r3, #12]
 800d99e:	2304      	movs	r3, #4
 800d9a0:	f8c4 320c 	str.w	r3, [r4, #524]	; 0x20c
 800d9a4:	2210      	movs	r2, #16
 800d9a6:	4b75      	ldr	r3, [pc, #468]	; (800db7c <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x2b0>)
 800d9a8:	f8c3 2c10 	str.w	r2, [r3, #3088]	; 0xc10
 800d9ac:	e7d4      	b.n	800d958 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x8c>
 800d9ae:	434b      	muls	r3, r1
 800d9b0:	18d1      	adds	r1, r2, r3
 800d9b2:	54d0      	strb	r0, [r2, r3]
 800d9b4:	4b74      	ldr	r3, [pc, #464]	; (800db88 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x2bc>)
 800d9b6:	f8c1 3204 	str.w	r3, [r1, #516]	; 0x204
 800d9ba:	2305      	movs	r3, #5
 800d9bc:	f8c1 320c 	str.w	r3, [r1, #524]	; 0x20c
 800d9c0:	e7f0      	b.n	800d9a4 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0xd8>
 800d9c2:	fb03 2301 	mla	r3, r3, r1, r2
 800d9c6:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 800d9ca:	b294      	uxth	r4, r2
 800d9cc:	3201      	adds	r2, #1
 800d9ce:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 800d9d2:	5518      	strb	r0, [r3, r4]
 800d9d4:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800d9d8:	d90b      	bls.n	800d9f2 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x126>
 800d9da:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800d9de:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800d9e2:	2200      	movs	r2, #0
 800d9e4:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800d9e8:	2210      	movs	r2, #16
 800d9ea:	4b64      	ldr	r3, [pc, #400]	; (800db7c <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x2b0>)
 800d9ec:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 800d9f0:	e7b2      	b.n	800d958 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x8c>
 800d9f2:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800d9f6:	4a63      	ldr	r2, [pc, #396]	; (800db84 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x2b8>)
 800d9f8:	f8d0 4424 	ldr.w	r4, [r0, #1060]	; 0x424
 800d9fc:	eb02 1201 	add.w	r2, r2, r1, lsl #4
 800da00:	68d3      	ldr	r3, [r2, #12]
 800da02:	2901      	cmp	r1, #1
 800da04:	ebc3 0344 	rsb	r3, r3, r4, lsl #1
 800da08:	f103 0304 	add.w	r3, r3, #4
 800da0c:	60d4      	str	r4, [r2, #12]
 800da0e:	bf14      	ite	ne
 800da10:	f8c0 3434 	strne.w	r3, [r0, #1076]	; 0x434
 800da14:	f8c0 3438 	streq.w	r3, [r0, #1080]	; 0x438
 800da18:	e79e      	b.n	800d958 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x8c>
 800da1a:	fb03 2301 	mla	r3, r3, r1, r2
 800da1e:	f8b3 5204 	ldrh.w	r5, [r3, #516]	; 0x204
 800da22:	f8b3 6206 	ldrh.w	r6, [r3, #518]	; 0x206
 800da26:	5558      	strb	r0, [r3, r5]
 800da28:	1c6c      	adds	r4, r5, #1
 800da2a:	3d17      	subs	r5, #23
 800da2c:	b2a4      	uxth	r4, r4
 800da2e:	4430      	add	r0, r6
 800da30:	2de7      	cmp	r5, #231	; 0xe7
 800da32:	f8a3 4204 	strh.w	r4, [r3, #516]	; 0x204
 800da36:	f8a3 0206 	strh.w	r0, [r3, #518]	; 0x206
 800da3a:	d808      	bhi.n	800da4e <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x182>
 800da3c:	7898      	ldrb	r0, [r3, #2]
 800da3e:	42a0      	cmp	r0, r4
 800da40:	d105      	bne.n	800da4e <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x182>
 800da42:	2206      	movs	r2, #6
 800da44:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800da48:	2220      	movs	r2, #32
 800da4a:	4b4c      	ldr	r3, [pc, #304]	; (800db7c <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x2b0>)
 800da4c:	e7ac      	b.n	800d9a8 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0xdc>
 800da4e:	2cff      	cmp	r4, #255	; 0xff
 800da50:	d982      	bls.n	800d958 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x8c>
 800da52:	f44f 7304 	mov.w	r3, #528	; 0x210
 800da56:	e78b      	b.n	800d970 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0xa4>
 800da58:	fb03 2301 	mla	r3, r3, r1, r2
 800da5c:	f8b3 2204 	ldrh.w	r2, [r3, #516]	; 0x204
 800da60:	5498      	strb	r0, [r3, r2]
 800da62:	3201      	adds	r2, #1
 800da64:	f8a3 2204 	strh.w	r2, [r3, #516]	; 0x204
 800da68:	f8b3 2206 	ldrh.w	r2, [r3, #518]	; 0x206
 800da6c:	eba2 2200 	sub.w	r2, r2, r0, lsl #8
 800da70:	f8a3 2206 	strh.w	r2, [r3, #518]	; 0x206
 800da74:	2207      	movs	r2, #7
 800da76:	e77e      	b.n	800d976 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0xaa>
 800da78:	2320      	movs	r3, #32
 800da7a:	4e40      	ldr	r6, [pc, #256]	; (800db7c <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x2b0>)
 800da7c:	f8c6 3c14 	str.w	r3, [r6, #3092]	; 0xc14
 800da80:	f44f 7304 	mov.w	r3, #528	; 0x210
 800da84:	fb03 2301 	mla	r3, r3, r1, r2
 800da88:	f8b3 4204 	ldrh.w	r4, [r3, #516]	; 0x204
 800da8c:	f8b3 5206 	ldrh.w	r5, [r3, #518]	; 0x206
 800da90:	5518      	strb	r0, [r3, r4]
 800da92:	3401      	adds	r4, #1
 800da94:	1a28      	subs	r0, r5, r0
 800da96:	b2a4      	uxth	r4, r4
 800da98:	b280      	uxth	r0, r0
 800da9a:	f8a3 4204 	strh.w	r4, [r3, #516]	; 0x204
 800da9e:	f8a3 0206 	strh.w	r0, [r3, #518]	; 0x206
 800daa2:	b910      	cbnz	r0, 800daaa <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x1de>
 800daa4:	7858      	ldrb	r0, [r3, #1]
 800daa6:	2801      	cmp	r0, #1
 800daa8:	d007      	beq.n	800daba <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x1ee>
 800daaa:	f44f 7304 	mov.w	r3, #528	; 0x210
 800daae:	2000      	movs	r0, #0
 800dab0:	fb03 2301 	mla	r3, r3, r1, r2
 800dab4:	f8c3 0204 	str.w	r0, [r3, #516]	; 0x204
 800dab8:	e7cb      	b.n	800da52 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x186>
 800daba:	f444 4480 	orr.w	r4, r4, #16384	; 0x4000
 800dabe:	f8a3 4204 	strh.w	r4, [r3, #516]	; 0x204
 800dac2:	4b32      	ldr	r3, [pc, #200]	; (800db8c <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x2c0>)
 800dac4:	6858      	ldr	r0, [r3, #4]
 800dac6:	4b32      	ldr	r3, [pc, #200]	; (800db90 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x2c4>)
 800dac8:	6018      	str	r0, [r3, #0]
 800daca:	2310      	movs	r3, #16
 800dacc:	f8c6 3c14 	str.w	r3, [r6, #3092]	; 0xc14
 800dad0:	e7bf      	b.n	800da52 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x186>
 800dad2:	fb03 2301 	mla	r3, r3, r1, r2
 800dad6:	f8b3 4204 	ldrh.w	r4, [r3, #516]	; 0x204
 800dada:	28aa      	cmp	r0, #170	; 0xaa
 800dadc:	5518      	strb	r0, [r3, r4]
 800dade:	f104 0401 	add.w	r4, r4, #1
 800dae2:	b2a4      	uxth	r4, r4
 800dae4:	f8a3 4204 	strh.w	r4, [r3, #516]	; 0x204
 800dae8:	d002      	beq.n	800daf0 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x224>
 800daea:	2c09      	cmp	r4, #9
 800daec:	f47f af34 	bne.w	800d958 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x8c>
 800daf0:	f44f 7304 	mov.w	r3, #528	; 0x210
 800daf4:	fb03 2301 	mla	r3, r3, r1, r2
 800daf8:	2200      	movs	r2, #0
 800dafa:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 800dafe:	2209      	movs	r2, #9
 800db00:	e739      	b.n	800d976 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0xaa>
 800db02:	fb03 2301 	mla	r3, r3, r1, r2
 800db06:	f8b3 2204 	ldrh.w	r2, [r3, #516]	; 0x204
 800db0a:	5498      	strb	r0, [r3, r2]
 800db0c:	3201      	adds	r2, #1
 800db0e:	f8a3 2204 	strh.w	r2, [r3, #516]	; 0x204
 800db12:	f8b3 2208 	ldrh.w	r2, [r3, #520]	; 0x208
 800db16:	3201      	adds	r2, #1
 800db18:	b292      	uxth	r2, r2
 800db1a:	2a0c      	cmp	r2, #12
 800db1c:	d002      	beq.n	800db24 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x258>
 800db1e:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 800db22:	e719      	b.n	800d958 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x8c>
 800db24:	2200      	movs	r2, #0
 800db26:	f8a3 2208 	strh.w	r2, [r3, #520]	; 0x208
 800db2a:	220a      	movs	r2, #10
 800db2c:	e723      	b.n	800d976 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0xaa>
 800db2e:	fb03 2301 	mla	r3, r3, r1, r2
 800db32:	f8b3 1208 	ldrh.w	r1, [r3, #520]	; 0x208
 800db36:	f8b3 2204 	ldrh.w	r2, [r3, #516]	; 0x204
 800db3a:	3101      	adds	r1, #1
 800db3c:	b289      	uxth	r1, r1
 800db3e:	5498      	strb	r0, [r3, r2]
 800db40:	3201      	adds	r2, #1
 800db42:	b292      	uxth	r2, r2
 800db44:	2904      	cmp	r1, #4
 800db46:	f8a3 2204 	strh.w	r2, [r3, #516]	; 0x204
 800db4a:	f8a3 1208 	strh.w	r1, [r3, #520]	; 0x208
 800db4e:	f47f af03 	bne.w	800d958 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x8c>
 800db52:	2100      	movs	r1, #0
 800db54:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800db58:	f8c3 120c 	str.w	r1, [r3, #524]	; 0x20c
 800db5c:	f8a3 2204 	strh.w	r2, [r3, #516]	; 0x204
 800db60:	4b0a      	ldr	r3, [pc, #40]	; (800db8c <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x2c0>)
 800db62:	685a      	ldr	r2, [r3, #4]
 800db64:	4b0a      	ldr	r3, [pc, #40]	; (800db90 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x2c4>)
 800db66:	601a      	str	r2, [r3, #0]
 800db68:	e6f6      	b.n	800d958 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x8c>
 800db6a:	fb03 2201 	mla	r2, r3, r1, r2
 800db6e:	2300      	movs	r3, #0
 800db70:	f8c2 3204 	str.w	r3, [r2, #516]	; 0x204
 800db74:	f8c2 320c 	str.w	r3, [r2, #524]	; 0x20c
 800db78:	e6ee      	b.n	800d958 <irq_handler_dmx_rdm_input(unsigned int, unsigned int)+0x8c>
 800db7a:	bf00      	nop
 800db7c:	40010000 	andmi	r0, r1, r0
 800db80:	20002024 	andcs	r2, r0, r4, lsr #32
 800db84:	20002854 	andcs	r2, r0, r4, asr r8
 800db88:	00cc0001 	sbceq	r0, ip, r1
 800db8c:	e0001000 	and	r1, r0, r0
 800db90:	2000287c 	andcs	r2, r0, ip, ror r8

0800db94 <USART2_IRQHandler>:
 800db94:	2100      	movs	r1, #0
 800db96:	4801      	ldr	r0, [pc, #4]	; (800db9c <USART2_IRQHandler+0x8>)
 800db98:	f7ff be98 	b.w	800d8cc <irq_handler_dmx_rdm_input(unsigned int, unsigned int)>
 800db9c:	40004800 	andmi	r4, r0, r0, lsl #16

0800dba0 <USART5_IRQHandler>:
 800dba0:	2101      	movs	r1, #1
 800dba2:	4801      	ldr	r0, [pc, #4]	; (800dba8 <USART5_IRQHandler+0x8>)
 800dba4:	f7ff be92 	b.w	800d8cc <irq_handler_dmx_rdm_input(unsigned int, unsigned int)>
 800dba8:	40017000 	andmi	r7, r1, r0

0800dbac <TIMER1_IRQHandler>:
 800dbac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800dbae:	f3bf 8f5f 	dmb	sy
 800dbb2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800dbb6:	2208      	movs	r2, #8
 800dbb8:	4d3f      	ldr	r5, [pc, #252]	; (800dcb8 <TIMER1_IRQHandler+0x10c>)
 800dbba:	691e      	ldr	r6, [r3, #16]
 800dbbc:	882c      	ldrh	r4, [r5, #0]
 800dbbe:	f503 3380 	add.w	r3, r3, #65536	; 0x10000
 800dbc2:	07b1      	lsls	r1, r6, #30
 800dbc4:	b2a4      	uxth	r4, r4
 800dbc6:	f8c3 2c10 	str.w	r2, [r3, #3088]	; 0xc10
 800dbca:	d52d      	bpl.n	800dc28 <TIMER1_IRQHandler+0x7c>
 800dbcc:	07e2      	lsls	r2, r4, #31
 800dbce:	d50f      	bpl.n	800dbf0 <TIMER1_IRQHandler+0x44>
 800dbd0:	882b      	ldrh	r3, [r5, #0]
 800dbd2:	4f3a      	ldr	r7, [pc, #232]	; (800dcbc <TIMER1_IRQHandler+0x110>)
 800dbd4:	b29b      	uxth	r3, r3
 800dbd6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800dbda:	802b      	strh	r3, [r5, #0]
 800dbdc:	2203      	movs	r2, #3
 800dbde:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800dbe2:	2110      	movs	r1, #16
 800dbe4:	4638      	mov	r0, r7
 800dbe6:	f005 f867 	bl	8012cb8 <gpio_init>
 800dbea:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800dbee:	617b      	str	r3, [r7, #20]
 800dbf0:	07a3      	lsls	r3, r4, #30
 800dbf2:	d50d      	bpl.n	800dc10 <TIMER1_IRQHandler+0x64>
 800dbf4:	882b      	ldrh	r3, [r5, #0]
 800dbf6:	4c31      	ldr	r4, [pc, #196]	; (800dcbc <TIMER1_IRQHandler+0x110>)
 800dbf8:	b29b      	uxth	r3, r3
 800dbfa:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800dbfe:	802b      	strh	r3, [r5, #0]
 800dc00:	2203      	movs	r2, #3
 800dc02:	2340      	movs	r3, #64	; 0x40
 800dc04:	2110      	movs	r1, #16
 800dc06:	4620      	mov	r0, r4
 800dc08:	f005 f856 	bl	8012cb8 <gpio_init>
 800dc0c:	2340      	movs	r3, #64	; 0x40
 800dc0e:	6163      	str	r3, [r4, #20]
 800dc10:	4631      	mov	r1, r6
 800dc12:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800dc16:	f005 fbab 	bl	8013370 <timer_interrupt_flag_clear>
 800dc1a:	2208      	movs	r2, #8
 800dc1c:	4b28      	ldr	r3, [pc, #160]	; (800dcc0 <TIMER1_IRQHandler+0x114>)
 800dc1e:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 800dc22:	f3bf 8f5f 	dmb	sy
 800dc26:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800dc28:	0777      	lsls	r7, r6, #29
 800dc2a:	d511      	bpl.n	800dc50 <TIMER1_IRQHandler+0xa4>
 800dc2c:	05e5      	lsls	r5, r4, #23
 800dc2e:	d506      	bpl.n	800dc3e <TIMER1_IRQHandler+0x92>
 800dc30:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800dc34:	2203      	movs	r2, #3
 800dc36:	2118      	movs	r1, #24
 800dc38:	4820      	ldr	r0, [pc, #128]	; (800dcbc <TIMER1_IRQHandler+0x110>)
 800dc3a:	f005 f83d 	bl	8012cb8 <gpio_init>
 800dc3e:	05a0      	lsls	r0, r4, #22
 800dc40:	d5e6      	bpl.n	800dc10 <TIMER1_IRQHandler+0x64>
 800dc42:	2340      	movs	r3, #64	; 0x40
 800dc44:	2203      	movs	r2, #3
 800dc46:	2118      	movs	r1, #24
 800dc48:	481c      	ldr	r0, [pc, #112]	; (800dcbc <TIMER1_IRQHandler+0x110>)
 800dc4a:	f005 f835 	bl	8012cb8 <gpio_init>
 800dc4e:	e7df      	b.n	800dc10 <TIMER1_IRQHandler+0x64>
 800dc50:	0731      	lsls	r1, r6, #28
 800dc52:	d5dd      	bpl.n	800dc10 <TIMER1_IRQHandler+0x64>
 800dc54:	05e2      	lsls	r2, r4, #23
 800dc56:	d511      	bpl.n	800dc7c <TIMER1_IRQHandler+0xd0>
 800dc58:	4b1a      	ldr	r3, [pc, #104]	; (800dcc4 <TIMER1_IRQHandler+0x118>)
 800dc5a:	2180      	movs	r1, #128	; 0x80
 800dc5c:	69da      	ldr	r2, [r3, #28]
 800dc5e:	481a      	ldr	r0, [pc, #104]	; (800dcc8 <TIMER1_IRQHandler+0x11c>)
 800dc60:	f022 0201 	bic.w	r2, r2, #1
 800dc64:	61da      	str	r2, [r3, #28]
 800dc66:	4a19      	ldr	r2, [pc, #100]	; (800dccc <TIMER1_IRQHandler+0x120>)
 800dc68:	629a      	str	r2, [r3, #40]	; 0x28
 800dc6a:	f8b2 2202 	ldrh.w	r2, [r2, #514]	; 0x202
 800dc6e:	621a      	str	r2, [r3, #32]
 800dc70:	69da      	ldr	r2, [r3, #28]
 800dc72:	f042 0201 	orr.w	r2, r2, #1
 800dc76:	61da      	str	r2, [r3, #28]
 800dc78:	f005 fc46 	bl	8013508 <usart_dma_transmit_config>
 800dc7c:	05a3      	lsls	r3, r4, #22
 800dc7e:	d5c7      	bpl.n	800dc10 <TIMER1_IRQHandler+0x64>
 800dc80:	4b10      	ldr	r3, [pc, #64]	; (800dcc4 <TIMER1_IRQHandler+0x118>)
 800dc82:	4813      	ldr	r0, [pc, #76]	; (800dcd0 <TIMER1_IRQHandler+0x124>)
 800dc84:	f8d3 2480 	ldr.w	r2, [r3, #1152]	; 0x480
 800dc88:	f022 0201 	bic.w	r2, r2, #1
 800dc8c:	f8c3 2480 	str.w	r2, [r3, #1152]	; 0x480
 800dc90:	4a0e      	ldr	r2, [pc, #56]	; (800dccc <TIMER1_IRQHandler+0x120>)
 800dc92:	f502 7101 	add.w	r1, r2, #516	; 0x204
 800dc96:	f8b2 2406 	ldrh.w	r2, [r2, #1030]	; 0x406
 800dc9a:	f8c3 148c 	str.w	r1, [r3, #1164]	; 0x48c
 800dc9e:	f8c3 2484 	str.w	r2, [r3, #1156]	; 0x484
 800dca2:	f8d3 2480 	ldr.w	r2, [r3, #1152]	; 0x480
 800dca6:	2180      	movs	r1, #128	; 0x80
 800dca8:	f042 0201 	orr.w	r2, r2, #1
 800dcac:	f8c3 2480 	str.w	r2, [r3, #1152]	; 0x480
 800dcb0:	f005 fc2a 	bl	8013508 <usart_dma_transmit_config>
 800dcb4:	e7ac      	b.n	800dc10 <TIMER1_IRQHandler+0x64>
 800dcb6:	bf00      	nop
 800dcb8:	20002874 	andcs	r2, r0, r4, ror r8
 800dcbc:	40011000 	andmi	r1, r1, r0
 800dcc0:	40010000 	andmi	r0, r1, r0
 800dcc4:	40020000 	andmi	r0, r2, r0
 800dcc8:	40004800 	andmi	r4, r0, r0, lsl #16
 800dccc:	20002444 	andcs	r2, r0, r4, asr #8
 800dcd0:	40017000 	andmi	r7, r1, r0

0800dcd4 <TIMER2_IRQHandler>:
 800dcd4:	b508      	push	{r3, lr}
 800dcd6:	f3bf 8f5f 	dmb	sy
 800dcda:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800dcde:	f8d3 1410 	ldr.w	r1, [r3, #1040]	; 0x410
 800dce2:	f011 0202 	ands.w	r2, r1, #2
 800dce6:	d017      	beq.n	800dd18 <TIMER2_IRQHandler+0x44>
 800dce8:	4b13      	ldr	r3, [pc, #76]	; (800dd38 <TIMER2_IRQHandler+0x64>)
 800dcea:	f8d3 220c 	ldr.w	r2, [r3, #524]	; 0x20c
 800dcee:	2a04      	cmp	r2, #4
 800dcf0:	d10c      	bne.n	800dd0c <TIMER2_IRQHandler+0x38>
 800dcf2:	2200      	movs	r2, #0
 800dcf4:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800dcf8:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 800dcfc:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800dd00:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800dd04:	2210      	movs	r2, #16
 800dd06:	4b0d      	ldr	r3, [pc, #52]	; (800dd3c <TIMER2_IRQHandler+0x68>)
 800dd08:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 800dd0c:	480c      	ldr	r0, [pc, #48]	; (800dd40 <TIMER2_IRQHandler+0x6c>)
 800dd0e:	f005 fb2f 	bl	8013370 <timer_interrupt_flag_clear>
 800dd12:	f3bf 8f5f 	dmb	sy
 800dd16:	bd08      	pop	{r3, pc}
 800dd18:	074b      	lsls	r3, r1, #29
 800dd1a:	d5f7      	bpl.n	800dd0c <TIMER2_IRQHandler+0x38>
 800dd1c:	4b06      	ldr	r3, [pc, #24]	; (800dd38 <TIMER2_IRQHandler+0x64>)
 800dd1e:	f8d3 041c 	ldr.w	r0, [r3, #1052]	; 0x41c
 800dd22:	2804      	cmp	r0, #4
 800dd24:	bf01      	itttt	eq
 800dd26:	f8c3 241c 	streq.w	r2, [r3, #1052]	; 0x41c
 800dd2a:	f8d3 2414 	ldreq.w	r2, [r3, #1044]	; 0x414
 800dd2e:	f442 4200 	orreq.w	r2, r2, #32768	; 0x8000
 800dd32:	f8c3 2414 	streq.w	r2, [r3, #1044]	; 0x414
 800dd36:	e7e9      	b.n	800dd0c <TIMER2_IRQHandler+0x38>
 800dd38:	20002024 	andcs	r2, r0, r4, lsr #32
 800dd3c:	40010000 	andmi	r0, r1, r0
 800dd40:	40000400 	andmi	r0, r0, r0, lsl #8

0800dd44 <TIMER3_IRQHandler>:
 800dd44:	b508      	push	{r3, lr}
 800dd46:	f3bf 8f5f 	dmb	sy
 800dd4a:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800dd4e:	4804      	ldr	r0, [pc, #16]	; (800dd60 <TIMER3_IRQHandler+0x1c>)
 800dd50:	f8d3 1810 	ldr.w	r1, [r3, #2064]	; 0x810
 800dd54:	f005 fb0c 	bl	8013370 <timer_interrupt_flag_clear>
 800dd58:	f3bf 8f5f 	dmb	sy
 800dd5c:	bd08      	pop	{r3, pc}
 800dd5e:	bf00      	nop
 800dd60:	40000800 	andmi	r0, r0, r0, lsl #16

0800dd64 <TIMER6_IRQHandler>:
 800dd64:	b508      	push	{r3, lr}
 800dd66:	f3bf 8f5f 	dmb	sy
 800dd6a:	4b0a      	ldr	r3, [pc, #40]	; (800dd94 <TIMER6_IRQHandler+0x30>)
 800dd6c:	480a      	ldr	r0, [pc, #40]	; (800dd98 <TIMER6_IRQHandler+0x34>)
 800dd6e:	685a      	ldr	r2, [r3, #4]
 800dd70:	6899      	ldr	r1, [r3, #8]
 800dd72:	1a52      	subs	r2, r2, r1
 800dd74:	601a      	str	r2, [r3, #0]
 800dd76:	685a      	ldr	r2, [r3, #4]
 800dd78:	609a      	str	r2, [r3, #8]
 800dd7a:	695a      	ldr	r2, [r3, #20]
 800dd7c:	6999      	ldr	r1, [r3, #24]
 800dd7e:	1a52      	subs	r2, r2, r1
 800dd80:	611a      	str	r2, [r3, #16]
 800dd82:	695a      	ldr	r2, [r3, #20]
 800dd84:	2101      	movs	r1, #1
 800dd86:	619a      	str	r2, [r3, #24]
 800dd88:	f005 faf2 	bl	8013370 <timer_interrupt_flag_clear>
 800dd8c:	f3bf 8f5f 	dmb	sy
 800dd90:	bd08      	pop	{r3, pc}
 800dd92:	bf00      	nop
 800dd94:	20002854 	andcs	r2, r0, r4, asr r8
 800dd98:	40001400 	andmi	r1, r0, r0, lsl #8

0800dd9c <Dmx::ClearData(unsigned int)>:
 800dd9c:	f44f 7301 	mov.w	r3, #516	; 0x204
 800dda0:	b510      	push	{r4, lr}
 800dda2:	2400      	movs	r4, #0
 800dda4:	4a08      	ldr	r2, [pc, #32]	; (800ddc8 <Dmx::ClearData(unsigned int)+0x2c>)
 800dda6:	fb03 2301 	mla	r3, r3, r1, r2
 800ddaa:	f203 2002 	addw	r0, r3, #514	; 0x202
 800ddae:	f823 4b02 	strh.w	r4, [r3], #2
 800ddb2:	4283      	cmp	r3, r0
 800ddb4:	d1fb      	bne.n	800ddae <Dmx::ClearData(unsigned int)+0x12>
 800ddb6:	f44f 7301 	mov.w	r3, #516	; 0x204
 800ddba:	fb03 2201 	mla	r2, r3, r1, r2
 800ddbe:	f240 2301 	movw	r3, #513	; 0x201
 800ddc2:	f8a2 3202 	strh.w	r3, [r2, #514]	; 0x202
 800ddc6:	bd10      	pop	{r4, pc}
 800ddc8:	20002444 	andcs	r2, r0, r4, asr #8

0800ddcc <Dmx::StartData(unsigned int, unsigned int)>:
 800ddcc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ddce:	eb00 0082 	add.w	r0, r0, r2, lsl #2
 800ddd2:	6943      	ldr	r3, [r0, #20]
 800ddd4:	460c      	mov	r4, r1
 800ddd6:	4615      	mov	r5, r2
 800ddd8:	b085      	sub	sp, #20
 800ddda:	2b00      	cmp	r3, #0
 800dddc:	d16c      	bne.n	800deb8 <Dmx::StartData(unsigned int, unsigned int)+0xec>
 800ddde:	4e4a      	ldr	r6, [pc, #296]	; (800df08 <Dmx::StartData(unsigned int, unsigned int)+0x13c>)
 800dde0:	8834      	ldrh	r4, [r6, #0]
 800dde2:	b2a4      	uxth	r4, r4
 800dde4:	2c00      	cmp	r4, #0
 800dde6:	d15b      	bne.n	800dea0 <Dmx::StartData(unsigned int, unsigned int)+0xd4>
 800dde8:	f44f 60e0 	mov.w	r0, #1792	; 0x700
 800ddec:	f004 fffc 	bl	8012de8 <rcu_periph_clock_enable>
 800ddf0:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800ddf4:	f005 f95c 	bl	80130b0 <timer_deinit>
 800ddf8:	2377      	movs	r3, #119	; 0x77
 800ddfa:	9300      	str	r3, [sp, #0]
 800ddfc:	4b43      	ldr	r3, [pc, #268]	; (800df0c <Dmx::StartData(unsigned int, unsigned int)+0x140>)
 800ddfe:	4669      	mov	r1, sp
 800de00:	681b      	ldr	r3, [r3, #0]
 800de02:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800de06:	9302      	str	r3, [sp, #8]
 800de08:	f8ad 4004 	strh.w	r4, [sp, #4]
 800de0c:	f8ad 400c 	strh.w	r4, [sp, #12]
 800de10:	f88d 400e 	strb.w	r4, [sp, #14]
 800de14:	f005 f9f2 	bl	80131fc <timer_init>
 800de18:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800de1c:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800de20:	f005 faa9 	bl	8013376 <timer_flag_clear>
 800de24:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800de28:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800de2c:	f005 faa0 	bl	8013370 <timer_interrupt_flag_clear>
 800de30:	2210      	movs	r2, #16
 800de32:	4621      	mov	r1, r4
 800de34:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800de38:	f005 fa3d 	bl	80132b6 <timer_channel_output_mode_config>
 800de3c:	2210      	movs	r2, #16
 800de3e:	2101      	movs	r1, #1
 800de40:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800de44:	f005 fa37 	bl	80132b6 <timer_channel_output_mode_config>
 800de48:	4f31      	ldr	r7, [pc, #196]	; (800df10 <Dmx::StartData(unsigned int, unsigned int)+0x144>)
 800de4a:	2210      	movs	r2, #16
 800de4c:	2102      	movs	r1, #2
 800de4e:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800de52:	f005 fa30 	bl	80132b6 <timer_channel_output_mode_config>
 800de56:	4622      	mov	r2, r4
 800de58:	4621      	mov	r1, r4
 800de5a:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800de5e:	f005 fa50 	bl	8013302 <timer_channel_output_pulse_value_config>
 800de62:	2101      	movs	r1, #1
 800de64:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800de68:	883a      	ldrh	r2, [r7, #0]
 800de6a:	f005 fa4a 	bl	8013302 <timer_channel_output_pulse_value_config>
 800de6e:	4b29      	ldr	r3, [pc, #164]	; (800df14 <Dmx::StartData(unsigned int, unsigned int)+0x148>)
 800de70:	683a      	ldr	r2, [r7, #0]
 800de72:	681b      	ldr	r3, [r3, #0]
 800de74:	2102      	movs	r1, #2
 800de76:	441a      	add	r2, r3
 800de78:	b292      	uxth	r2, r2
 800de7a:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800de7e:	f005 fa40 	bl	8013302 <timer_channel_output_pulse_value_config>
 800de82:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800de86:	210e      	movs	r1, #14
 800de88:	f005 fa6e 	bl	8013368 <timer_interrupt_enable>
 800de8c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800de90:	4b21      	ldr	r3, [pc, #132]	; (800df18 <Dmx::StartData(unsigned int, unsigned int)+0x14c>)
 800de92:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800de96:	f883 431c 	strb.w	r4, [r3, #796]	; 0x31c
 800de9a:	601a      	str	r2, [r3, #0]
 800de9c:	f005 fa06 	bl	80132ac <timer_enable>
 800dea0:	2201      	movs	r2, #1
 800dea2:	8831      	ldrh	r1, [r6, #0]
 800dea4:	fa02 f305 	lsl.w	r3, r2, r5
 800dea8:	430b      	orrs	r3, r1
 800deaa:	b29b      	uxth	r3, r3
 800deac:	8033      	strh	r3, [r6, #0]
 800deae:	4b1b      	ldr	r3, [pc, #108]	; (800df1c <Dmx::StartData(unsigned int, unsigned int)+0x150>)
 800deb0:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800deb4:	b005      	add	sp, #20
 800deb6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800deb8:	f44f 7204 	mov.w	r2, #528	; 0x210
 800debc:	4b18      	ldr	r3, [pc, #96]	; (800df20 <Dmx::StartData(unsigned int, unsigned int)+0x154>)
 800debe:	fb02 3305 	mla	r3, r2, r5, r3
 800dec2:	2200      	movs	r2, #0
 800dec4:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800dec8:	2107      	movs	r1, #7
 800deca:	4620      	mov	r0, r4
 800decc:	f005 fb22 	bl	8013514 <usart_flag_get>
 800ded0:	2800      	cmp	r0, #0
 800ded2:	d0f9      	beq.n	800dec8 <Dmx::StartData(unsigned int, unsigned int)+0xfc>
 800ded4:	4620      	mov	r0, r4
 800ded6:	4913      	ldr	r1, [pc, #76]	; (800df24 <Dmx::StartData(unsigned int, unsigned int)+0x158>)
 800ded8:	f005 fb3e 	bl	8013558 <usart_interrupt_flag_clear>
 800dedc:	f240 3105 	movw	r1, #773	; 0x305
 800dee0:	4620      	mov	r0, r4
 800dee2:	f005 fb22 	bl	801352a <usart_interrupt_enable>
 800dee6:	2202      	movs	r2, #2
 800dee8:	4b0c      	ldr	r3, [pc, #48]	; (800df1c <Dmx::StartData(unsigned int, unsigned int)+0x150>)
 800deea:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800deee:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800def2:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 800def6:	b925      	cbnz	r5, 800df02 <Dmx::StartData(unsigned int, unsigned int)+0x136>
 800def8:	f042 0202 	orr.w	r2, r2, #2
 800defc:	f8c3 240c 	str.w	r2, [r3, #1036]	; 0x40c
 800df00:	e7d8      	b.n	800deb4 <Dmx::StartData(unsigned int, unsigned int)+0xe8>
 800df02:	f042 0204 	orr.w	r2, r2, #4
 800df06:	e7f9      	b.n	800defc <Dmx::StartData(unsigned int, unsigned int)+0x130>
 800df08:	20002874 	andcs	r2, r0, r4, ror r8
 800df0c:	20000004 	andcs	r0, r0, r4
 800df10:	2000000c 	andcs	r0, r0, ip
 800df14:	20000008 	andcs	r0, r0, r8
 800df18:	e000e100 	and	lr, r0, r0, lsl #2
 800df1c:	2000284c 	andcs	r2, r0, ip, asr #16
 800df20:	20002024 	andcs	r2, r0, r4, lsr #32
 800df24:	00050305 	andeq	r0, r5, r5, lsl #6

0800df28 <Dmx::StopData(unsigned int, unsigned int)>:
 800df28:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800df2c:	4f24      	ldr	r7, [pc, #144]	; (800dfc0 <Dmx::StopData(unsigned int, unsigned int)+0x98>)
 800df2e:	4688      	mov	r8, r1
 800df30:	f857 3022 	ldr.w	r3, [r7, r2, lsl #2]
 800df34:	4614      	mov	r4, r2
 800df36:	b333      	cbz	r3, 800df86 <Dmx::StopData(unsigned int, unsigned int)+0x5e>
 800df38:	eb00 0082 	add.w	r0, r0, r2, lsl #2
 800df3c:	6943      	ldr	r3, [r0, #20]
 800df3e:	bb23      	cbnz	r3, 800df8a <Dmx::StopData(unsigned int, unsigned int)+0x62>
 800df40:	2601      	movs	r6, #1
 800df42:	4d20      	ldr	r5, [pc, #128]	; (800dfc4 <Dmx::StopData(unsigned int, unsigned int)+0x9c>)
 800df44:	fa06 f202 	lsl.w	r2, r6, r2
 800df48:	882b      	ldrh	r3, [r5, #0]
 800df4a:	b29b      	uxth	r3, r3
 800df4c:	ea23 0302 	bic.w	r3, r3, r2
 800df50:	802b      	strh	r3, [r5, #0]
 800df52:	f3bf 8f5f 	dmb	sy
 800df56:	882b      	ldrh	r3, [r5, #0]
 800df58:	f104 0208 	add.w	r2, r4, #8
 800df5c:	b29b      	uxth	r3, r3
 800df5e:	4096      	lsls	r6, r2
 800df60:	ea36 0303 	bics.w	r3, r6, r3
 800df64:	d105      	bne.n	800df72 <Dmx::StopData(unsigned int, unsigned int)+0x4a>
 800df66:	2107      	movs	r1, #7
 800df68:	4640      	mov	r0, r8
 800df6a:	f005 fad3 	bl	8013514 <usart_flag_get>
 800df6e:	2801      	cmp	r0, #1
 800df70:	d1f9      	bne.n	800df66 <Dmx::StopData(unsigned int, unsigned int)+0x3e>
 800df72:	882b      	ldrh	r3, [r5, #0]
 800df74:	b29b      	uxth	r3, r3
 800df76:	ea23 0306 	bic.w	r3, r3, r6
 800df7a:	802b      	strh	r3, [r5, #0]
 800df7c:	f3bf 8f4f 	dsb	sy
 800df80:	2300      	movs	r3, #0
 800df82:	f847 3024 	str.w	r3, [r7, r4, lsl #2]
 800df86:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800df8a:	f240 3105 	movw	r1, #773	; 0x305
 800df8e:	4640      	mov	r0, r8
 800df90:	f005 fad6 	bl	8013540 <usart_interrupt_disable>
 800df94:	f44f 7204 	mov.w	r2, #528	; 0x210
 800df98:	4b0b      	ldr	r3, [pc, #44]	; (800dfc8 <Dmx::StopData(unsigned int, unsigned int)+0xa0>)
 800df9a:	fb02 3304 	mla	r3, r2, r4, r3
 800df9e:	2200      	movs	r2, #0
 800dfa0:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800dfa4:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800dfa8:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 800dfac:	b924      	cbnz	r4, 800dfb8 <Dmx::StopData(unsigned int, unsigned int)+0x90>
 800dfae:	f022 0202 	bic.w	r2, r2, #2
 800dfb2:	f8c3 240c 	str.w	r2, [r3, #1036]	; 0x40c
 800dfb6:	e7e3      	b.n	800df80 <Dmx::StopData(unsigned int, unsigned int)+0x58>
 800dfb8:	f022 0204 	bic.w	r2, r2, #4
 800dfbc:	e7f9      	b.n	800dfb2 <Dmx::StopData(unsigned int, unsigned int)+0x8a>
 800dfbe:	bf00      	nop
 800dfc0:	2000284c 	andcs	r2, r0, ip, asr #16
 800dfc4:	20002874 	andcs	r2, r0, r4, ror r8
 800dfc8:	20002024 	andcs	r2, r0, r4, lsr #32

0800dfcc <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>:
 800dfcc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dfd0:	4605      	mov	r5, r0
 800dfd2:	4616      	mov	r6, r2
 800dfd4:	4608      	mov	r0, r1
 800dfd6:	4698      	mov	r8, r3
 800dfd8:	f7ff fc6c 	bl	800d8b4 <_port_to_uart(unsigned int)>
 800dfdc:	eb05 0381 	add.w	r3, r5, r1, lsl #2
 800dfe0:	695a      	ldr	r2, [r3, #20]
 800dfe2:	460c      	mov	r4, r1
 800dfe4:	42b2      	cmp	r2, r6
 800dfe6:	4607      	mov	r7, r0
 800dfe8:	d01c      	beq.n	800e024 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x58>
 800dfea:	460a      	mov	r2, r1
 800dfec:	615e      	str	r6, [r3, #20]
 800dfee:	4601      	mov	r1, r0
 800dff0:	4628      	mov	r0, r5
 800dff2:	f7ff ff99 	bl	800df28 <Dmx::StopData(unsigned int, unsigned int)>
 800dff6:	b95e      	cbnz	r6, 800e010 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x44>
 800dff8:	4b13      	ldr	r3, [pc, #76]	; (800e048 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x7c>)
 800dffa:	f853 2034 	ldr.w	r2, [r3, r4, lsl #3]
 800dffe:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800e002:	685b      	ldr	r3, [r3, #4]
 800e004:	6113      	str	r3, [r2, #16]
 800e006:	f1b8 0f00 	cmp.w	r8, #0
 800e00a:	d10e      	bne.n	800e02a <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x5e>
 800e00c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e010:	2e01      	cmp	r6, #1
 800e012:	d1f8      	bne.n	800e006 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x3a>
 800e014:	4b0c      	ldr	r3, [pc, #48]	; (800e048 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x7c>)
 800e016:	f853 2034 	ldr.w	r2, [r3, r4, lsl #3]
 800e01a:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800e01e:	685b      	ldr	r3, [r3, #4]
 800e020:	6153      	str	r3, [r2, #20]
 800e022:	e7f0      	b.n	800e006 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x3a>
 800e024:	f1b8 0f00 	cmp.w	r8, #0
 800e028:	d006      	beq.n	800e038 <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)+0x6c>
 800e02a:	4622      	mov	r2, r4
 800e02c:	4639      	mov	r1, r7
 800e02e:	4628      	mov	r0, r5
 800e030:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800e034:	f7ff beca 	b.w	800ddcc <Dmx::StartData(unsigned int, unsigned int)>
 800e038:	460a      	mov	r2, r1
 800e03a:	4601      	mov	r1, r0
 800e03c:	4628      	mov	r0, r5
 800e03e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800e042:	f7ff bf71 	b.w	800df28 <Dmx::StopData(unsigned int, unsigned int)>
 800e046:	bf00      	nop
 800e048:	080161fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r8, sp, lr}

0800e04c <Dmx::Dmx()>:
 800e04c:	230c      	movs	r3, #12
 800e04e:	225c      	movs	r2, #92	; 0x5c
 800e050:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e054:	e9c0 2300 	strd	r2, r3, [r0]
 800e058:	f246 13a8 	movw	r3, #25000	; 0x61a8
 800e05c:	e9c0 3302 	strd	r3, r3, [r0, #8]
 800e060:	f44f 7300 	mov.w	r3, #512	; 0x200
 800e064:	2400      	movs	r4, #0
 800e066:	4606      	mov	r6, r0
 800e068:	8203      	strh	r3, [r0, #16]
 800e06a:	4b73      	ldr	r3, [pc, #460]	; (800e238 <Dmx::Dmx()+0x1ec>)
 800e06c:	4f73      	ldr	r7, [pc, #460]	; (800e23c <Dmx::Dmx()+0x1f0>)
 800e06e:	6018      	str	r0, [r3, #0]
 800e070:	4b73      	ldr	r3, [pc, #460]	; (800e240 <Dmx::Dmx()+0x1f4>)
 800e072:	f8df 91d0 	ldr.w	r9, [pc, #464]	; 800e244 <Dmx::Dmx()+0x1f8>
 800e076:	f8df 81d0 	ldr.w	r8, [pc, #464]	; 800e248 <Dmx::Dmx()+0x1fc>
 800e07a:	b08b      	sub	sp, #44	; 0x2c
 800e07c:	801c      	strh	r4, [r3, #0]
 800e07e:	2500      	movs	r5, #0
 800e080:	687b      	ldr	r3, [r7, #4]
 800e082:	2203      	movs	r2, #3
 800e084:	2110      	movs	r1, #16
 800e086:	f857 0b08 	ldr.w	r0, [r7], #8
 800e08a:	f004 fe15 	bl	8012cb8 <gpio_init>
 800e08e:	4621      	mov	r1, r4
 800e090:	4630      	mov	r0, r6
 800e092:	f7ff fe83 	bl	800dd9c <Dmx::ClearData(unsigned int)>
 800e096:	462b      	mov	r3, r5
 800e098:	2201      	movs	r2, #1
 800e09a:	4630      	mov	r0, r6
 800e09c:	f849 5024 	str.w	r5, [r9, r4, lsl #2]
 800e0a0:	f7ff ff94 	bl	800dfcc <Dmx::SetPortDirection(unsigned int, dmx::PortDirection, bool)>
 800e0a4:	f44f 7304 	mov.w	r3, #528	; 0x210
 800e0a8:	fb03 8304 	mla	r3, r3, r4, r8
 800e0ac:	f8c3 520c 	str.w	r5, [r3, #524]	; 0x20c
 800e0b0:	2c00      	cmp	r4, #0
 800e0b2:	f000 80be 	beq.w	800e232 <Dmx::Dmx()+0x1e6>
 800e0b6:	f44f 5800 	mov.w	r8, #8192	; 0x2000
 800e0ba:	f44f 7780 	mov.w	r7, #256	; 0x100
 800e0be:	f44f 60a0 	mov.w	r0, #1280	; 0x500
 800e0c2:	f004 fe91 	bl	8012de8 <rcu_periph_clock_enable>
 800e0c6:	f240 5001 	movw	r0, #1281	; 0x501
 800e0ca:	f004 fe8d 	bl	8012de8 <rcu_periph_clock_enable>
 800e0ce:	4621      	mov	r1, r4
 800e0d0:	485e      	ldr	r0, [pc, #376]	; (800e24c <Dmx::Dmx()+0x200>)
 800e0d2:	f004 fd07 	bl	8012ae4 <dma_deinit>
 800e0d6:	4b5e      	ldr	r3, [pc, #376]	; (800e250 <Dmx::Dmx()+0x204>)
 800e0d8:	aa03      	add	r2, sp, #12
 800e0da:	4621      	mov	r1, r4
 800e0dc:	485b      	ldr	r0, [pc, #364]	; (800e24c <Dmx::Dmx()+0x200>)
 800e0de:	e9cd 3503 	strd	r3, r5, [sp, #12]
 800e0e2:	f8cd 8020 	str.w	r8, [sp, #32]
 800e0e6:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 800e0ea:	f88d 4026 	strb.w	r4, [sp, #38]	; 0x26
 800e0ee:	9506      	str	r5, [sp, #24]
 800e0f0:	f004 fd16 	bl	8012b20 <dma_init>
 800e0f4:	4621      	mov	r1, r4
 800e0f6:	4855      	ldr	r0, [pc, #340]	; (800e24c <Dmx::Dmx()+0x200>)
 800e0f8:	f004 fd43 	bl	8012b82 <dma_circulation_disable>
 800e0fc:	4621      	mov	r1, r4
 800e0fe:	4853      	ldr	r0, [pc, #332]	; (800e24c <Dmx::Dmx()+0x200>)
 800e100:	f004 fd47 	bl	8012b92 <dma_memory_to_memory_disable>
 800e104:	2106      	movs	r1, #6
 800e106:	4853      	ldr	r0, [pc, #332]	; (800e254 <Dmx::Dmx()+0x208>)
 800e108:	f004 fcec 	bl	8012ae4 <dma_deinit>
 800e10c:	4b52      	ldr	r3, [pc, #328]	; (800e258 <Dmx::Dmx()+0x20c>)
 800e10e:	aa03      	add	r2, sp, #12
 800e110:	2106      	movs	r1, #6
 800e112:	4850      	ldr	r0, [pc, #320]	; (800e254 <Dmx::Dmx()+0x208>)
 800e114:	e9cd 3503 	strd	r3, r5, [sp, #12]
 800e118:	f8cd 8020 	str.w	r8, [sp, #32]
 800e11c:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 800e120:	f88d 4026 	strb.w	r4, [sp, #38]	; 0x26
 800e124:	9506      	str	r5, [sp, #24]
 800e126:	f004 fcfb 	bl	8012b20 <dma_init>
 800e12a:	2106      	movs	r1, #6
 800e12c:	4849      	ldr	r0, [pc, #292]	; (800e254 <Dmx::Dmx()+0x208>)
 800e12e:	f004 fd28 	bl	8012b82 <dma_circulation_disable>
 800e132:	2106      	movs	r1, #6
 800e134:	4847      	ldr	r0, [pc, #284]	; (800e254 <Dmx::Dmx()+0x208>)
 800e136:	f004 fd2c 	bl	8012b92 <dma_memory_to_memory_disable>
 800e13a:	f240 7001 	movw	r0, #1793	; 0x701
 800e13e:	f004 fe53 	bl	8012de8 <rcu_periph_clock_enable>
 800e142:	4846      	ldr	r0, [pc, #280]	; (800e25c <Dmx::Dmx()+0x210>)
 800e144:	f004 ffb4 	bl	80130b0 <timer_deinit>
 800e148:	f04f 38ff 	mov.w	r8, #4294967295	; 0xffffffff
 800e14c:	2377      	movs	r3, #119	; 0x77
 800e14e:	a903      	add	r1, sp, #12
 800e150:	4842      	ldr	r0, [pc, #264]	; (800e25c <Dmx::Dmx()+0x210>)
 800e152:	9303      	str	r3, [sp, #12]
 800e154:	f8cd 8014 	str.w	r8, [sp, #20]
 800e158:	f8ad 5010 	strh.w	r5, [sp, #16]
 800e15c:	f8ad 5018 	strh.w	r5, [sp, #24]
 800e160:	f88d 501a 	strb.w	r5, [sp, #26]
 800e164:	f005 f84a 	bl	80131fc <timer_init>
 800e168:	4641      	mov	r1, r8
 800e16a:	483c      	ldr	r0, [pc, #240]	; (800e25c <Dmx::Dmx()+0x210>)
 800e16c:	f005 f903 	bl	8013376 <timer_flag_clear>
 800e170:	4641      	mov	r1, r8
 800e172:	483a      	ldr	r0, [pc, #232]	; (800e25c <Dmx::Dmx()+0x210>)
 800e174:	f005 f8fc 	bl	8013370 <timer_interrupt_flag_clear>
 800e178:	4629      	mov	r1, r5
 800e17a:	2210      	movs	r2, #16
 800e17c:	4837      	ldr	r0, [pc, #220]	; (800e25c <Dmx::Dmx()+0x210>)
 800e17e:	f005 f89a 	bl	80132b6 <timer_channel_output_mode_config>
 800e182:	4621      	mov	r1, r4
 800e184:	2210      	movs	r2, #16
 800e186:	4835      	ldr	r0, [pc, #212]	; (800e25c <Dmx::Dmx()+0x210>)
 800e188:	f005 f895 	bl	80132b6 <timer_channel_output_mode_config>
 800e18c:	2210      	movs	r2, #16
 800e18e:	2102      	movs	r1, #2
 800e190:	4832      	ldr	r0, [pc, #200]	; (800e25c <Dmx::Dmx()+0x210>)
 800e192:	f005 f890 	bl	80132b6 <timer_channel_output_mode_config>
 800e196:	2210      	movs	r2, #16
 800e198:	2103      	movs	r1, #3
 800e19a:	4830      	ldr	r0, [pc, #192]	; (800e25c <Dmx::Dmx()+0x210>)
 800e19c:	f005 f88b 	bl	80132b6 <timer_channel_output_mode_config>
 800e1a0:	f04f 5300 	mov.w	r3, #536870912	; 0x20000000
 800e1a4:	f107 27e0 	add.w	r7, r7, #3758153728	; 0xe000e000
 800e1a8:	f887 531d 	strb.w	r5, [r7, #797]	; 0x31d
 800e1ac:	482b      	ldr	r0, [pc, #172]	; (800e25c <Dmx::Dmx()+0x210>)
 800e1ae:	603b      	str	r3, [r7, #0]
 800e1b0:	f005 f87c 	bl	80132ac <timer_enable>
 800e1b4:	f240 7005 	movw	r0, #1797	; 0x705
 800e1b8:	f004 fe16 	bl	8012de8 <rcu_periph_clock_enable>
 800e1bc:	4828      	ldr	r0, [pc, #160]	; (800e260 <Dmx::Dmx()+0x214>)
 800e1be:	f004 ff77 	bl	80130b0 <timer_deinit>
 800e1c2:	f642 63df 	movw	r3, #11999	; 0x2edf
 800e1c6:	f8ad 300c 	strh.w	r3, [sp, #12]
 800e1ca:	f242 7310 	movw	r3, #10000	; 0x2710
 800e1ce:	a903      	add	r1, sp, #12
 800e1d0:	4823      	ldr	r0, [pc, #140]	; (800e260 <Dmx::Dmx()+0x214>)
 800e1d2:	9305      	str	r3, [sp, #20]
 800e1d4:	f005 f812 	bl	80131fc <timer_init>
 800e1d8:	4641      	mov	r1, r8
 800e1da:	4821      	ldr	r0, [pc, #132]	; (800e260 <Dmx::Dmx()+0x214>)
 800e1dc:	f005 f8cb 	bl	8013376 <timer_flag_clear>
 800e1e0:	4641      	mov	r1, r8
 800e1e2:	481f      	ldr	r0, [pc, #124]	; (800e260 <Dmx::Dmx()+0x214>)
 800e1e4:	f005 f8c4 	bl	8013370 <timer_interrupt_flag_clear>
 800e1e8:	4621      	mov	r1, r4
 800e1ea:	481d      	ldr	r0, [pc, #116]	; (800e260 <Dmx::Dmx()+0x214>)
 800e1ec:	f005 f8bc 	bl	8013368 <timer_interrupt_enable>
 800e1f0:	f44f 0300 	mov.w	r3, #8388608	; 0x800000
 800e1f4:	f04f 0802 	mov.w	r8, #2
 800e1f8:	2480      	movs	r4, #128	; 0x80
 800e1fa:	f887 5337 	strb.w	r5, [r7, #823]	; 0x337
 800e1fe:	4818      	ldr	r0, [pc, #96]	; (800e260 <Dmx::Dmx()+0x214>)
 800e200:	607b      	str	r3, [r7, #4]
 800e202:	f005 f853 	bl	80132ac <timer_enable>
 800e206:	462b      	mov	r3, r5
 800e208:	2208      	movs	r2, #8
 800e20a:	4916      	ldr	r1, [pc, #88]	; (800e264 <Dmx::Dmx()+0x218>)
 800e20c:	4816      	ldr	r0, [pc, #88]	; (800e268 <Dmx::Dmx()+0x21c>)
 800e20e:	f8cd 8000 	str.w	r8, [sp]
 800e212:	f005 fb6d 	bl	80138f0 <gd32_uart_begin>
 800e216:	607c      	str	r4, [r7, #4]
 800e218:	462b      	mov	r3, r5
 800e21a:	2208      	movs	r2, #8
 800e21c:	4911      	ldr	r1, [pc, #68]	; (800e264 <Dmx::Dmx()+0x218>)
 800e21e:	4813      	ldr	r0, [pc, #76]	; (800e26c <Dmx::Dmx()+0x220>)
 800e220:	f8cd 8000 	str.w	r8, [sp]
 800e224:	f005 fb64 	bl	80138f0 <gd32_uart_begin>
 800e228:	4630      	mov	r0, r6
 800e22a:	60bc      	str	r4, [r7, #8]
 800e22c:	b00b      	add	sp, #44	; 0x2c
 800e22e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e232:	2401      	movs	r4, #1
 800e234:	e723      	b.n	800e07e <Dmx::Dmx()+0x32>
 800e236:	bf00      	nop
 800e238:	20002878 	andcs	r2, r0, r8, ror r8
 800e23c:	080161fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r8, sp, lr}
 800e240:	20002874 	andcs	r2, r0, r4, ror r8
 800e244:	2000284c 	andcs	r2, r0, ip, asr #16
 800e248:	20002024 	andcs	r2, r0, r4, lsr #32
 800e24c:	40020000 	andmi	r0, r2, r0
 800e250:	40004804 	andmi	r4, r0, r4, lsl #16
 800e254:	40020400 	andmi	r0, r2, r0, lsl #8
 800e258:	40017004 	andmi	r7, r1, r4
 800e25c:	40000400 	andmi	r0, r0, r0, lsl #8
 800e260:	40001400 	andmi	r1, r0, r0, lsl #8
 800e264:	0003d090 	muleq	r3, r0, r0
 800e268:	40004800 	andmi	r4, r0, r0, lsl #16
 800e26c:	40017000 	andmi	r7, r1, r0

0800e270 <Dmx::SetDmxPeriodTime(unsigned int)>:
 800e270:	4b15      	ldr	r3, [pc, #84]	; (800e2c8 <Dmx::SetDmxPeriodTime(unsigned int)+0x58>)
 800e272:	b570      	push	{r4, r5, r6, lr}
 800e274:	60c1      	str	r1, [r0, #12]
 800e276:	f8b3 0406 	ldrh.w	r0, [r3, #1030]	; 0x406
 800e27a:	f8b3 3202 	ldrh.w	r3, [r3, #514]	; 0x202
 800e27e:	f64f 76d3 	movw	r6, #65491	; 0xffd3
 800e282:	4298      	cmp	r0, r3
 800e284:	bf38      	it	cc
 800e286:	4618      	movcc	r0, r3
 800e288:	232c      	movs	r3, #44	; 0x2c
 800e28a:	4d10      	ldr	r5, [pc, #64]	; (800e2cc <Dmx::SetDmxPeriodTime(unsigned int)+0x5c>)
 800e28c:	4c10      	ldr	r4, [pc, #64]	; (800e2d0 <Dmx::SetDmxPeriodTime(unsigned int)+0x60>)
 800e28e:	4358      	muls	r0, r3
 800e290:	682a      	ldr	r2, [r5, #0]
 800e292:	6823      	ldr	r3, [r4, #0]
 800e294:	4413      	add	r3, r2
 800e296:	4403      	add	r3, r0
 800e298:	42b3      	cmp	r3, r6
 800e29a:	d908      	bls.n	800e2ae <Dmx::SetDmxPeriodTime(unsigned int)+0x3e>
 800e29c:	2ab0      	cmp	r2, #176	; 0xb0
 800e29e:	4613      	mov	r3, r2
 800e2a0:	bf28      	it	cs
 800e2a2:	23b0      	movcs	r3, #176	; 0xb0
 800e2a4:	220c      	movs	r2, #12
 800e2a6:	602b      	str	r3, [r5, #0]
 800e2a8:	4413      	add	r3, r2
 800e2aa:	6022      	str	r2, [r4, #0]
 800e2ac:	4403      	add	r3, r0
 800e2ae:	b109      	cbz	r1, 800e2b4 <Dmx::SetDmxPeriodTime(unsigned int)+0x44>
 800e2b0:	428b      	cmp	r3, r1
 800e2b2:	d906      	bls.n	800e2c2 <Dmx::SetDmxPeriodTime(unsigned int)+0x52>
 800e2b4:	f103 012c 	add.w	r1, r3, #44	; 0x2c
 800e2b8:	f240 43b4 	movw	r3, #1204	; 0x4b4
 800e2bc:	4299      	cmp	r1, r3
 800e2be:	bf38      	it	cc
 800e2c0:	4619      	movcc	r1, r3
 800e2c2:	4b04      	ldr	r3, [pc, #16]	; (800e2d4 <Dmx::SetDmxPeriodTime(unsigned int)+0x64>)
 800e2c4:	6019      	str	r1, [r3, #0]
 800e2c6:	bd70      	pop	{r4, r5, r6, pc}
 800e2c8:	20002444 	andcs	r2, r0, r4, asr #8
 800e2cc:	2000000c 	andcs	r0, r0, ip
 800e2d0:	20000008 	andcs	r0, r0, r8
 800e2d4:	20000004 	andcs	r0, r0, r4

0800e2d8 <Dmx::SetDmxBreakTime(unsigned int)>:
 800e2d8:	295c      	cmp	r1, #92	; 0x5c
 800e2da:	bf38      	it	cc
 800e2dc:	215c      	movcc	r1, #92	; 0x5c
 800e2de:	4b02      	ldr	r3, [pc, #8]	; (800e2e8 <Dmx::SetDmxBreakTime(unsigned int)+0x10>)
 800e2e0:	6019      	str	r1, [r3, #0]
 800e2e2:	68c1      	ldr	r1, [r0, #12]
 800e2e4:	f7ff bfc4 	b.w	800e270 <Dmx::SetDmxPeriodTime(unsigned int)>
 800e2e8:	2000000c 	andcs	r0, r0, ip

0800e2ec <Dmx::SetDmxMabTime(unsigned int)>:
 800e2ec:	290c      	cmp	r1, #12
 800e2ee:	bf38      	it	cc
 800e2f0:	210c      	movcc	r1, #12
 800e2f2:	4b02      	ldr	r3, [pc, #8]	; (800e2fc <Dmx::SetDmxMabTime(unsigned int)+0x10>)
 800e2f4:	6019      	str	r1, [r3, #0]
 800e2f6:	68c1      	ldr	r1, [r0, #12]
 800e2f8:	f7ff bfba 	b.w	800e270 <Dmx::SetDmxPeriodTime(unsigned int)>
 800e2fc:	20000008 	andcs	r0, r0, r8

0800e300 <Dmx::SetDmxSlots(unsigned short)>:
 800e300:	1e8b      	subs	r3, r1, #2
 800e302:	f5b3 7fff 	cmp.w	r3, #510	; 0x1fe
 800e306:	d80f      	bhi.n	800e328 <Dmx::SetDmxSlots(unsigned short)+0x28>
 800e308:	69c3      	ldr	r3, [r0, #28]
 800e30a:	8201      	strh	r1, [r0, #16]
 800e30c:	b11b      	cbz	r3, 800e316 <Dmx::SetDmxSlots(unsigned short)+0x16>
 800e30e:	4299      	cmp	r1, r3
 800e310:	bf94      	ite	ls
 800e312:	61c1      	strls	r1, [r0, #28]
 800e314:	61c3      	strhi	r3, [r0, #28]
 800e316:	6a03      	ldr	r3, [r0, #32]
 800e318:	b11b      	cbz	r3, 800e322 <Dmx::SetDmxSlots(unsigned short)+0x22>
 800e31a:	4299      	cmp	r1, r3
 800e31c:	bf94      	ite	ls
 800e31e:	6201      	strls	r1, [r0, #32]
 800e320:	6203      	strhi	r3, [r0, #32]
 800e322:	68c1      	ldr	r1, [r0, #12]
 800e324:	f7ff bfa4 	b.w	800e270 <Dmx::SetDmxPeriodTime(unsigned int)>
 800e328:	4770      	bx	lr
	...

0800e32c <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)>:
 800e32c:	b470      	push	{r4, r5, r6}
 800e32e:	8a04      	ldrh	r4, [r0, #16]
 800e330:	f44f 7501 	mov.w	r5, #516	; 0x204
 800e334:	42a3      	cmp	r3, r4
 800e336:	bf28      	it	cs
 800e338:	4623      	movcs	r3, r4
 800e33a:	4c0e      	ldr	r4, [pc, #56]	; (800e374 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x48>)
 800e33c:	f892 f000 	pld	[r2]
 800e340:	fb05 4401 	mla	r4, r5, r1, r4
 800e344:	1c5d      	adds	r5, r3, #1
 800e346:	f8a4 5202 	strh.w	r5, [r4, #514]	; 0x202
 800e34a:	18d5      	adds	r5, r2, r3
 800e34c:	4295      	cmp	r5, r2
 800e34e:	d109      	bne.n	800e364 <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x38>
 800e350:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 800e354:	69ca      	ldr	r2, [r1, #28]
 800e356:	429a      	cmp	r2, r3
 800e358:	d009      	beq.n	800e36e <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x42>
 800e35a:	bc70      	pop	{r4, r5, r6}
 800e35c:	61cb      	str	r3, [r1, #28]
 800e35e:	68c1      	ldr	r1, [r0, #12]
 800e360:	f7ff bf86 	b.w	800e270 <Dmx::SetDmxPeriodTime(unsigned int)>
 800e364:	f812 6b01 	ldrb.w	r6, [r2], #1
 800e368:	f804 6f01 	strb.w	r6, [r4, #1]!
 800e36c:	e7ee      	b.n	800e34c <Dmx::SetPortSendDataWithoutSC(unsigned int, unsigned char const*, unsigned int)+0x20>
 800e36e:	bc70      	pop	{r4, r5, r6}
 800e370:	4770      	bx	lr
 800e372:	bf00      	nop
 800e374:	20002444 	andcs	r2, r0, r4, asr #8

0800e378 <Dmx::Blackout()>:
 800e378:	b538      	push	{r3, r4, r5, lr}
 800e37a:	4c1e      	ldr	r4, [pc, #120]	; (800e3f4 <Dmx::Blackout()+0x7c>)
 800e37c:	8823      	ldrh	r3, [r4, #0]
 800e37e:	b29b      	uxth	r3, r3
 800e380:	b3bb      	cbz	r3, 800e3f2 <Dmx::Blackout()+0x7a>
 800e382:	f3bf 8f5f 	dmb	sy
 800e386:	8823      	ldrh	r3, [r4, #0]
 800e388:	05da      	lsls	r2, r3, #23
 800e38a:	d515      	bpl.n	800e3b8 <Dmx::Blackout()+0x40>
 800e38c:	2000      	movs	r0, #0
 800e38e:	f7ff fa91 	bl	800d8b4 <_port_to_uart(unsigned int)>
 800e392:	4605      	mov	r5, r0
 800e394:	2107      	movs	r1, #7
 800e396:	4628      	mov	r0, r5
 800e398:	f005 f8bc 	bl	8013514 <usart_flag_get>
 800e39c:	2801      	cmp	r0, #1
 800e39e:	d1f9      	bne.n	800e394 <Dmx::Blackout()+0x1c>
 800e3a0:	4b15      	ldr	r3, [pc, #84]	; (800e3f8 <Dmx::Blackout()+0x80>)
 800e3a2:	2000      	movs	r0, #0
 800e3a4:	461a      	mov	r2, r3
 800e3a6:	f203 2102 	addw	r1, r3, #514	; 0x202
 800e3aa:	f823 0b02 	strh.w	r0, [r3], #2
 800e3ae:	428b      	cmp	r3, r1
 800e3b0:	d1fb      	bne.n	800e3aa <Dmx::Blackout()+0x32>
 800e3b2:	f04f 0300 	mov.w	r3, #0
 800e3b6:	7013      	strb	r3, [r2, #0]
 800e3b8:	f3bf 8f5f 	dmb	sy
 800e3bc:	8823      	ldrh	r3, [r4, #0]
 800e3be:	059b      	lsls	r3, r3, #22
 800e3c0:	d517      	bpl.n	800e3f2 <Dmx::Blackout()+0x7a>
 800e3c2:	2001      	movs	r0, #1
 800e3c4:	f7ff fa76 	bl	800d8b4 <_port_to_uart(unsigned int)>
 800e3c8:	4604      	mov	r4, r0
 800e3ca:	2107      	movs	r1, #7
 800e3cc:	4620      	mov	r0, r4
 800e3ce:	f005 f8a1 	bl	8013514 <usart_flag_get>
 800e3d2:	2801      	cmp	r0, #1
 800e3d4:	d1f9      	bne.n	800e3ca <Dmx::Blackout()+0x52>
 800e3d6:	2000      	movs	r0, #0
 800e3d8:	4b08      	ldr	r3, [pc, #32]	; (800e3fc <Dmx::Blackout()+0x84>)
 800e3da:	f5a3 7201 	sub.w	r2, r3, #516	; 0x204
 800e3de:	f203 2102 	addw	r1, r3, #514	; 0x202
 800e3e2:	f823 0b02 	strh.w	r0, [r3], #2
 800e3e6:	428b      	cmp	r3, r1
 800e3e8:	d1fb      	bne.n	800e3e2 <Dmx::Blackout()+0x6a>
 800e3ea:	f04f 0300 	mov.w	r3, #0
 800e3ee:	f882 3204 	strb.w	r3, [r2, #516]	; 0x204
 800e3f2:	bd38      	pop	{r3, r4, r5, pc}
 800e3f4:	20002874 	andcs	r2, r0, r4, ror r8
 800e3f8:	20002444 	andcs	r2, r0, r4, asr #8
 800e3fc:	20002648 	andcs	r2, r0, r8, asr #12

0800e400 <Dmx::FullOn()>:
 800e400:	b538      	push	{r3, r4, r5, lr}
 800e402:	4c1e      	ldr	r4, [pc, #120]	; (800e47c <Dmx::FullOn()+0x7c>)
 800e404:	8823      	ldrh	r3, [r4, #0]
 800e406:	b29b      	uxth	r3, r3
 800e408:	b3bb      	cbz	r3, 800e47a <Dmx::FullOn()+0x7a>
 800e40a:	f3bf 8f5f 	dmb	sy
 800e40e:	8823      	ldrh	r3, [r4, #0]
 800e410:	05da      	lsls	r2, r3, #23
 800e412:	d515      	bpl.n	800e440 <Dmx::FullOn()+0x40>
 800e414:	2000      	movs	r0, #0
 800e416:	f7ff fa4d 	bl	800d8b4 <_port_to_uart(unsigned int)>
 800e41a:	4605      	mov	r5, r0
 800e41c:	2107      	movs	r1, #7
 800e41e:	4628      	mov	r0, r5
 800e420:	f005 f878 	bl	8013514 <usart_flag_get>
 800e424:	2801      	cmp	r0, #1
 800e426:	d1f9      	bne.n	800e41c <Dmx::FullOn()+0x1c>
 800e428:	4b15      	ldr	r3, [pc, #84]	; (800e480 <Dmx::FullOn()+0x80>)
 800e42a:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800e42e:	461a      	mov	r2, r3
 800e430:	f203 2102 	addw	r1, r3, #514	; 0x202
 800e434:	f823 0b02 	strh.w	r0, [r3], #2
 800e438:	428b      	cmp	r3, r1
 800e43a:	d1fb      	bne.n	800e434 <Dmx::FullOn()+0x34>
 800e43c:	2300      	movs	r3, #0
 800e43e:	7013      	strb	r3, [r2, #0]
 800e440:	f3bf 8f5f 	dmb	sy
 800e444:	8823      	ldrh	r3, [r4, #0]
 800e446:	059b      	lsls	r3, r3, #22
 800e448:	d517      	bpl.n	800e47a <Dmx::FullOn()+0x7a>
 800e44a:	2001      	movs	r0, #1
 800e44c:	f7ff fa32 	bl	800d8b4 <_port_to_uart(unsigned int)>
 800e450:	4604      	mov	r4, r0
 800e452:	2107      	movs	r1, #7
 800e454:	4620      	mov	r0, r4
 800e456:	f005 f85d 	bl	8013514 <usart_flag_get>
 800e45a:	2801      	cmp	r0, #1
 800e45c:	d1f9      	bne.n	800e452 <Dmx::FullOn()+0x52>
 800e45e:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800e462:	4b08      	ldr	r3, [pc, #32]	; (800e484 <Dmx::FullOn()+0x84>)
 800e464:	f5a3 7201 	sub.w	r2, r3, #516	; 0x204
 800e468:	f203 2102 	addw	r1, r3, #514	; 0x202
 800e46c:	f823 0b02 	strh.w	r0, [r3], #2
 800e470:	428b      	cmp	r3, r1
 800e472:	d1fb      	bne.n	800e46c <Dmx::FullOn()+0x6c>
 800e474:	2300      	movs	r3, #0
 800e476:	f882 3204 	strb.w	r3, [r2, #516]	; 0x204
 800e47a:	bd38      	pop	{r3, r4, r5, pc}
 800e47c:	20002874 	andcs	r2, r0, r4, ror r8
 800e480:	20002444 	andcs	r2, r0, r4, asr #8
 800e484:	20002648 	andcs	r2, r0, r8, asr #12

0800e488 <Dmx::GetDmxAvailable(unsigned int)>:
 800e488:	f44f 7204 	mov.w	r2, #528	; 0x210
 800e48c:	4b07      	ldr	r3, [pc, #28]	; (800e4ac <Dmx::GetDmxAvailable(unsigned int)+0x24>)
 800e48e:	fb02 3101 	mla	r1, r2, r1, r3
 800e492:	f8d1 3204 	ldr.w	r3, [r1, #516]	; 0x204
 800e496:	f413 4000 	ands.w	r0, r3, #32768	; 0x8000
 800e49a:	bf1f      	itttt	ne
 800e49c:	f423 4300 	bicne.w	r3, r3, #32768	; 0x8000
 800e4a0:	f103 33ff 	addne.w	r3, r3, #4294967295	; 0xffffffff
 800e4a4:	4608      	movne	r0, r1
 800e4a6:	f8c1 3204 	strne.w	r3, [r1, #516]	; 0x204
 800e4aa:	4770      	bx	lr
 800e4ac:	20002024 	andcs	r2, r0, r4, lsr #32

0800e4b0 <Dmx::GetUpdatesPerSecond(unsigned int)>:
 800e4b0:	f3bf 8f5f 	dmb	sy
 800e4b4:	4b01      	ldr	r3, [pc, #4]	; (800e4bc <Dmx::GetUpdatesPerSecond(unsigned int)+0xc>)
 800e4b6:	0109      	lsls	r1, r1, #4
 800e4b8:	5858      	ldr	r0, [r3, r1]
 800e4ba:	4770      	bx	lr
 800e4bc:	20002854 	andcs	r2, r0, r4, asr r8

0800e4c0 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>:
 800e4c0:	2300      	movs	r3, #0
 800e4c2:	2020      	movs	r0, #32
 800e4c4:	b510      	push	{r4, lr}
 800e4c6:	4a04      	ldr	r2, [pc, #16]	; (800e4d8 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x18>)
 800e4c8:	428b      	cmp	r3, r1
 800e4ca:	d100      	bne.n	800e4ce <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0xe>
 800e4cc:	bd10      	pop	{r4, pc}
 800e4ce:	f852 4b04 	ldr.w	r4, [r2], #4
 800e4d2:	3301      	adds	r3, #1
 800e4d4:	4420      	add	r0, r4
 800e4d6:	e7f7      	b.n	800e4c8 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x8>
 800e4d8:	0801620c 	stmdaeq	r1, {r2, r3, r9, sp, lr}

0800e4dc <SpiFlashStore::Init()>:
 800e4dc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e4e0:	f8df 8114 	ldr.w	r8, [pc, #276]	; 800e5f8 <SpiFlashStore::Init()+0x11c>
 800e4e4:	4607      	mov	r7, r0
 800e4e6:	b085      	sub	sp, #20
 800e4e8:	f8d8 0000 	ldr.w	r0, [r8]
 800e4ec:	f000 fb84 	bl	800ebf8 <FlashRom::GetSectorSize() const>
 800e4f0:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
 800e4f4:	4605      	mov	r5, r0
 800e4f6:	d17d      	bne.n	800e5f4 <SpiFlashStore::Init()+0x118>
 800e4f8:	f8d8 0000 	ldr.w	r0, [r8]
 800e4fc:	f000 fb74 	bl	800ebe8 <FlashRom::GetSize() const>
 800e500:	4b3e      	ldr	r3, [pc, #248]	; (800e5fc <SpiFlashStore::Init()+0x120>)
 800e502:	f5a0 5180 	sub.w	r1, r0, #4096	; 0x1000
 800e506:	f3c1 060b 	ubfx	r6, r1, #0, #12
 800e50a:	6019      	str	r1, [r3, #0]
 800e50c:	2e00      	cmp	r6, #0
 800e50e:	d171      	bne.n	800e5f4 <SpiFlashStore::Init()+0x118>
 800e510:	4c3b      	ldr	r4, [pc, #236]	; (800e600 <SpiFlashStore::Init()+0x124>)
 800e512:	ab03      	add	r3, sp, #12
 800e514:	9300      	str	r3, [sp, #0]
 800e516:	462a      	mov	r2, r5
 800e518:	4623      	mov	r3, r4
 800e51a:	f8d8 0000 	ldr.w	r0, [r8]
 800e51e:	f000 fb6e 	bl	800ebfe <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)>
 800e522:	7823      	ldrb	r3, [r4, #0]
 800e524:	2b41      	cmp	r3, #65	; 0x41
 800e526:	bf1c      	itt	ne
 800e528:	2341      	movne	r3, #65	; 0x41
 800e52a:	7023      	strbne	r3, [r4, #0]
 800e52c:	7863      	ldrb	r3, [r4, #1]
 800e52e:	bf14      	ite	ne
 800e530:	4635      	movne	r5, r6
 800e532:	2501      	moveq	r5, #1
 800e534:	2b76      	cmp	r3, #118	; 0x76
 800e536:	bf1c      	itt	ne
 800e538:	2376      	movne	r3, #118	; 0x76
 800e53a:	7063      	strbne	r3, [r4, #1]
 800e53c:	78a3      	ldrb	r3, [r4, #2]
 800e53e:	bf18      	it	ne
 800e540:	2500      	movne	r5, #0
 800e542:	2b56      	cmp	r3, #86	; 0x56
 800e544:	bf1c      	itt	ne
 800e546:	2356      	movne	r3, #86	; 0x56
 800e548:	70a3      	strbne	r3, [r4, #2]
 800e54a:	78e3      	ldrb	r3, [r4, #3]
 800e54c:	bf18      	it	ne
 800e54e:	2500      	movne	r5, #0
 800e550:	2b10      	cmp	r3, #16
 800e552:	d022      	beq.n	800e59a <SpiFlashStore::Init()+0xbe>
 800e554:	2310      	movs	r3, #16
 800e556:	70e3      	strb	r3, [r4, #3]
 800e558:	2201      	movs	r2, #1
 800e55a:	2500      	movs	r5, #0
 800e55c:	f04f 09ff 	mov.w	r9, #255	; 0xff
 800e560:	4b28      	ldr	r3, [pc, #160]	; (800e604 <SpiFlashStore::Init()+0x128>)
 800e562:	f8df 80a4 	ldr.w	r8, [pc, #164]	; 800e608 <SpiFlashStore::Init()+0x12c>
 800e566:	701a      	strb	r2, [r3, #0]
 800e568:	4631      	mov	r1, r6
 800e56a:	4638      	mov	r0, r7
 800e56c:	f7ff ffa8 	bl	800e4c0 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800e570:	1823      	adds	r3, r4, r0
 800e572:	5425      	strb	r5, [r4, r0]
 800e574:	705d      	strb	r5, [r3, #1]
 800e576:	709d      	strb	r5, [r3, #2]
 800e578:	70dd      	strb	r5, [r3, #3]
 800e57a:	f858 3b04 	ldr.w	r3, [r8], #4
 800e57e:	1d02      	adds	r2, r0, #4
 800e580:	4403      	add	r3, r0
 800e582:	429a      	cmp	r2, r3
 800e584:	d332      	bcc.n	800e5ec <SpiFlashStore::Init()+0x110>
 800e586:	3601      	adds	r6, #1
 800e588:	2e1c      	cmp	r6, #28
 800e58a:	d1ed      	bne.n	800e568 <SpiFlashStore::Init()+0x8c>
 800e58c:	2501      	movs	r5, #1
 800e58e:	4b1f      	ldr	r3, [pc, #124]	; (800e60c <SpiFlashStore::Init()+0x130>)
 800e590:	601d      	str	r5, [r3, #0]
 800e592:	4628      	mov	r0, r5
 800e594:	b005      	add	sp, #20
 800e596:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e59a:	2d00      	cmp	r5, #0
 800e59c:	d0dc      	beq.n	800e558 <SpiFlashStore::Init()+0x7c>
 800e59e:	f04f 0900 	mov.w	r9, #0
 800e5a2:	46c8      	mov	r8, r9
 800e5a4:	4631      	mov	r1, r6
 800e5a6:	4638      	mov	r0, r7
 800e5a8:	f7ff ff8a 	bl	800e4c0 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800e5ac:	5c23      	ldrb	r3, [r4, r0]
 800e5ae:	2bff      	cmp	r3, #255	; 0xff
 800e5b0:	d112      	bne.n	800e5d8 <SpiFlashStore::Init()+0xfc>
 800e5b2:	1823      	adds	r3, r4, r0
 800e5b4:	785a      	ldrb	r2, [r3, #1]
 800e5b6:	2aff      	cmp	r2, #255	; 0xff
 800e5b8:	d10e      	bne.n	800e5d8 <SpiFlashStore::Init()+0xfc>
 800e5ba:	789a      	ldrb	r2, [r3, #2]
 800e5bc:	2aff      	cmp	r2, #255	; 0xff
 800e5be:	d10b      	bne.n	800e5d8 <SpiFlashStore::Init()+0xfc>
 800e5c0:	78da      	ldrb	r2, [r3, #3]
 800e5c2:	2aff      	cmp	r2, #255	; 0xff
 800e5c4:	d108      	bne.n	800e5d8 <SpiFlashStore::Init()+0xfc>
 800e5c6:	46a9      	mov	r9, r5
 800e5c8:	f804 8000 	strb.w	r8, [r4, r0]
 800e5cc:	f883 8001 	strb.w	r8, [r3, #1]
 800e5d0:	f883 8002 	strb.w	r8, [r3, #2]
 800e5d4:	f883 8003 	strb.w	r8, [r3, #3]
 800e5d8:	3601      	adds	r6, #1
 800e5da:	2e1c      	cmp	r6, #28
 800e5dc:	d1e2      	bne.n	800e5a4 <SpiFlashStore::Init()+0xc8>
 800e5de:	f1b9 0f00 	cmp.w	r9, #0
 800e5e2:	d0d6      	beq.n	800e592 <SpiFlashStore::Init()+0xb6>
 800e5e4:	2201      	movs	r2, #1
 800e5e6:	4b09      	ldr	r3, [pc, #36]	; (800e60c <SpiFlashStore::Init()+0x130>)
 800e5e8:	601a      	str	r2, [r3, #0]
 800e5ea:	e7d2      	b.n	800e592 <SpiFlashStore::Init()+0xb6>
 800e5ec:	f804 9002 	strb.w	r9, [r4, r2]
 800e5f0:	3201      	adds	r2, #1
 800e5f2:	e7c6      	b.n	800e582 <SpiFlashStore::Init()+0xa6>
 800e5f4:	2500      	movs	r5, #0
 800e5f6:	e7cc      	b.n	800e592 <SpiFlashStore::Init()+0xb6>
 800e5f8:	200038b8 			; <UNDEFINED> instruction: 0x200038b8
 800e5fc:	20003888 	andcs	r3, r0, r8, lsl #17
 800e600:	20002888 	andcs	r2, r0, r8, lsl #17
 800e604:	2000389c 	mulcs	r0, ip, r8
 800e608:	0801620c 	stmdaeq	r1, {r2, r3, r9, sp, lr}
 800e60c:	20003894 	mulcs	r0, r4, r8

0800e610 <SpiFlashStore::SpiFlashStore()>:
 800e610:	b538      	push	{r3, r4, r5, lr}
 800e612:	4b0d      	ldr	r3, [pc, #52]	; (800e648 <SpiFlashStore::SpiFlashStore()+0x38>)
 800e614:	4604      	mov	r4, r0
 800e616:	6018      	str	r0, [r3, #0]
 800e618:	4b0c      	ldr	r3, [pc, #48]	; (800e64c <SpiFlashStore::SpiFlashStore()+0x3c>)
 800e61a:	4d0d      	ldr	r5, [pc, #52]	; (800e650 <SpiFlashStore::SpiFlashStore()+0x40>)
 800e61c:	681b      	ldr	r3, [r3, #0]
 800e61e:	781b      	ldrb	r3, [r3, #0]
 800e620:	b113      	cbz	r3, 800e628 <SpiFlashStore::SpiFlashStore()+0x18>
 800e622:	f7ff ff5b 	bl	800e4dc <SpiFlashStore::Init()>
 800e626:	7028      	strb	r0, [r5, #0]
 800e628:	782b      	ldrb	r3, [r5, #0]
 800e62a:	b153      	cbz	r3, 800e642 <SpiFlashStore::SpiFlashStore()+0x32>
 800e62c:	2320      	movs	r3, #32
 800e62e:	2200      	movs	r2, #0
 800e630:	4908      	ldr	r1, [pc, #32]	; (800e654 <SpiFlashStore::SpiFlashStore()+0x44>)
 800e632:	f851 0b04 	ldr.w	r0, [r1], #4
 800e636:	3201      	adds	r2, #1
 800e638:	2a1c      	cmp	r2, #28
 800e63a:	4403      	add	r3, r0
 800e63c:	d1f9      	bne.n	800e632 <SpiFlashStore::SpiFlashStore()+0x22>
 800e63e:	4a06      	ldr	r2, [pc, #24]	; (800e658 <SpiFlashStore::SpiFlashStore()+0x48>)
 800e640:	6013      	str	r3, [r2, #0]
 800e642:	4620      	mov	r0, r4
 800e644:	bd38      	pop	{r3, r4, r5, pc}
 800e646:	bf00      	nop
 800e648:	20003898 	mulcs	r0, r8, r8
 800e64c:	200038b8 			; <UNDEFINED> instruction: 0x200038b8
 800e650:	2000388c 	andcs	r3, r0, ip, lsl #17
 800e654:	0801620c 	stmdaeq	r1, {r2, r3, r9, sp, lr}
 800e658:	20003890 	mulcs	r0, r0, r8

0800e65c <SpiFlashStore::ResetSetList(spiflashstore::Store)>:
 800e65c:	b508      	push	{r3, lr}
 800e65e:	f7ff ff2f 	bl	800e4c0 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800e662:	2300      	movs	r3, #0
 800e664:	4904      	ldr	r1, [pc, #16]	; (800e678 <SpiFlashStore::ResetSetList(spiflashstore::Store)+0x1c>)
 800e666:	1842      	adds	r2, r0, r1
 800e668:	540b      	strb	r3, [r1, r0]
 800e66a:	7053      	strb	r3, [r2, #1]
 800e66c:	7093      	strb	r3, [r2, #2]
 800e66e:	70d3      	strb	r3, [r2, #3]
 800e670:	2201      	movs	r2, #1
 800e672:	4b02      	ldr	r3, [pc, #8]	; (800e67c <SpiFlashStore::ResetSetList(spiflashstore::Store)+0x20>)
 800e674:	601a      	str	r2, [r3, #0]
 800e676:	bd08      	pop	{r3, pc}
 800e678:	20002888 	andcs	r2, r0, r8, lsl #17
 800e67c:	20003894 	mulcs	r0, r4, r8

0800e680 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>:
 800e680:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e684:	461c      	mov	r4, r3
 800e686:	4b19      	ldr	r3, [pc, #100]	; (800e6ec <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x6c>)
 800e688:	4616      	mov	r6, r2
 800e68a:	781f      	ldrb	r7, [r3, #0]
 800e68c:	9d07      	ldr	r5, [sp, #28]
 800e68e:	b307      	cbz	r7, 800e6d2 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800e690:	f7ff ff16 	bl	800e4c0 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800e694:	f04f 0c00 	mov.w	ip, #0
 800e698:	4a15      	ldr	r2, [pc, #84]	; (800e6f0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x70>)
 800e69a:	1831      	adds	r1, r6, r0
 800e69c:	1e63      	subs	r3, r4, #1
 800e69e:	9c06      	ldr	r4, [sp, #24]
 800e6a0:	4411      	add	r1, r2
 800e6a2:	440c      	add	r4, r1
 800e6a4:	42a1      	cmp	r1, r4
 800e6a6:	d116      	bne.n	800e6d6 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x56>
 800e6a8:	f1bc 0f00 	cmp.w	ip, #0
 800e6ac:	d011      	beq.n	800e6d2 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800e6ae:	4b11      	ldr	r3, [pc, #68]	; (800e6f4 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x74>)
 800e6b0:	6819      	ldr	r1, [r3, #0]
 800e6b2:	b109      	cbz	r1, 800e6b8 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x38>
 800e6b4:	2906      	cmp	r1, #6
 800e6b6:	d101      	bne.n	800e6bc <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x3c>
 800e6b8:	2101      	movs	r1, #1
 800e6ba:	6019      	str	r1, [r3, #0]
 800e6bc:	4b0e      	ldr	r3, [pc, #56]	; (800e6f8 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x78>)
 800e6be:	6819      	ldr	r1, [r3, #0]
 800e6c0:	4b0e      	ldr	r3, [pc, #56]	; (800e6fc <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x7c>)
 800e6c2:	6019      	str	r1, [r3, #0]
 800e6c4:	b12e      	cbz	r6, 800e6d2 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800e6c6:	b125      	cbz	r5, 800e6d2 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800e6c8:	9b08      	ldr	r3, [sp, #32]
 800e6ca:	4418      	add	r0, r3
 800e6cc:	5813      	ldr	r3, [r2, r0]
 800e6ce:	432b      	orrs	r3, r5
 800e6d0:	5013      	str	r3, [r2, r0]
 800e6d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e6d6:	f891 8000 	ldrb.w	r8, [r1]
 800e6da:	f813 ef01 	ldrb.w	lr, [r3, #1]!
 800e6de:	3101      	adds	r1, #1
 800e6e0:	45f0      	cmp	r8, lr
 800e6e2:	bf1c      	itt	ne
 800e6e4:	f801 ec01 	strbne.w	lr, [r1, #-1]
 800e6e8:	46bc      	movne	ip, r7
 800e6ea:	e7db      	b.n	800e6a4 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x24>
 800e6ec:	2000388c 	andcs	r3, r0, ip, lsl #17
 800e6f0:	20002888 	andcs	r2, r0, r8, lsl #17
 800e6f4:	20003894 	mulcs	r0, r4, r8
 800e6f8:	2000b87c 	andcs	fp, r0, ip, ror r8
 800e6fc:	20002884 	andcs	r2, r0, r4, lsl #17

0800e700 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)>:
 800e700:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e704:	461d      	mov	r5, r3
 800e706:	4b15      	ldr	r3, [pc, #84]	; (800e75c <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x5c>)
 800e708:	b085      	sub	sp, #20
 800e70a:	781b      	ldrb	r3, [r3, #0]
 800e70c:	4607      	mov	r7, r0
 800e70e:	4614      	mov	r4, r2
 800e710:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
 800e714:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 800e718:	b193      	cbz	r3, 800e740 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x40>
 800e71a:	f7ff fed1 	bl	800e4c0 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800e71e:	4a10      	ldr	r2, [pc, #64]	; (800e760 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x60>)
 800e720:	eb08 0600 	add.w	r6, r8, r0
 800e724:	18b3      	adds	r3, r6, r2
 800e726:	f1b9 0f00 	cmp.w	r9, #0
 800e72a:	d013      	beq.n	800e754 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x54>
 800e72c:	5990      	ldr	r0, [r2, r6]
 800e72e:	b988      	cbnz	r0, 800e754 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x54>
 800e730:	e9cd 0001 	strd	r0, r0, [sp, #4]
 800e734:	4623      	mov	r3, r4
 800e736:	4642      	mov	r2, r8
 800e738:	4638      	mov	r0, r7
 800e73a:	9500      	str	r5, [sp, #0]
 800e73c:	f7ff ffa0 	bl	800e680 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e740:	b005      	add	sp, #20
 800e742:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e746:	f813 2b01 	ldrb.w	r2, [r3], #1
 800e74a:	f804 2f01 	strb.w	r2, [r4, #1]!
 800e74e:	429d      	cmp	r5, r3
 800e750:	d1f9      	bne.n	800e746 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x46>
 800e752:	e7f5      	b.n	800e740 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x40>
 800e754:	3c01      	subs	r4, #1
 800e756:	441d      	add	r5, r3
 800e758:	e7f9      	b.n	800e74e <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)+0x4e>
 800e75a:	bf00      	nop
 800e75c:	2000388c 	andcs	r3, r0, ip, lsl #17
 800e760:	20002888 	andcs	r2, r0, r8, lsl #17

0800e764 <SpiFlashStore::Flash()>:
 800e764:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e766:	4c25      	ldr	r4, [pc, #148]	; (800e7fc <SpiFlashStore::Flash()+0x98>)
 800e768:	6820      	ldr	r0, [r4, #0]
 800e76a:	2800      	cmp	r0, #0
 800e76c:	d043      	beq.n	800e7f6 <SpiFlashStore::Flash()+0x92>
 800e76e:	3801      	subs	r0, #1
 800e770:	2805      	cmp	r0, #5
 800e772:	d831      	bhi.n	800e7d8 <SpiFlashStore::Flash()+0x74>
 800e774:	e8df f000 	tbb	[pc, r0]
 800e778:	2e140b03 	vnmlscs.f64	d0, d4, d3
 800e77c:	4b203025 	blmi	881a818 <__exidx_end+0x803b98>
 800e780:	681a      	ldr	r2, [r3, #0]
 800e782:	4b20      	ldr	r3, [pc, #128]	; (800e804 <SpiFlashStore::Flash()+0xa0>)
 800e784:	601a      	str	r2, [r3, #0]
 800e786:	2302      	movs	r3, #2
 800e788:	6023      	str	r3, [r4, #0]
 800e78a:	2001      	movs	r0, #1
 800e78c:	e033      	b.n	800e7f6 <SpiFlashStore::Flash()+0x92>
 800e78e:	4b1c      	ldr	r3, [pc, #112]	; (800e800 <SpiFlashStore::Flash()+0x9c>)
 800e790:	4a1c      	ldr	r2, [pc, #112]	; (800e804 <SpiFlashStore::Flash()+0xa0>)
 800e792:	681b      	ldr	r3, [r3, #0]
 800e794:	6812      	ldr	r2, [r2, #0]
 800e796:	1a9b      	subs	r3, r3, r2
 800e798:	2b63      	cmp	r3, #99	; 0x63
 800e79a:	d9f6      	bls.n	800e78a <SpiFlashStore::Flash()+0x26>
 800e79c:	2303      	movs	r3, #3
 800e79e:	e7f3      	b.n	800e788 <SpiFlashStore::Flash()+0x24>
 800e7a0:	4919      	ldr	r1, [pc, #100]	; (800e808 <SpiFlashStore::Flash()+0xa4>)
 800e7a2:	481a      	ldr	r0, [pc, #104]	; (800e80c <SpiFlashStore::Flash()+0xa8>)
 800e7a4:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 800e7a8:	6809      	ldr	r1, [r1, #0]
 800e7aa:	6800      	ldr	r0, [r0, #0]
 800e7ac:	ab03      	add	r3, sp, #12
 800e7ae:	f000 fa35 	bl	800ec1c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)>
 800e7b2:	2800      	cmp	r0, #0
 800e7b4:	d0e9      	beq.n	800e78a <SpiFlashStore::Flash()+0x26>
 800e7b6:	4b12      	ldr	r3, [pc, #72]	; (800e800 <SpiFlashStore::Flash()+0x9c>)
 800e7b8:	681a      	ldr	r2, [r3, #0]
 800e7ba:	4b12      	ldr	r3, [pc, #72]	; (800e804 <SpiFlashStore::Flash()+0xa0>)
 800e7bc:	601a      	str	r2, [r3, #0]
 800e7be:	2305      	movs	r3, #5
 800e7c0:	e7e2      	b.n	800e788 <SpiFlashStore::Flash()+0x24>
 800e7c2:	4b0f      	ldr	r3, [pc, #60]	; (800e800 <SpiFlashStore::Flash()+0x9c>)
 800e7c4:	4a0f      	ldr	r2, [pc, #60]	; (800e804 <SpiFlashStore::Flash()+0xa0>)
 800e7c6:	681b      	ldr	r3, [r3, #0]
 800e7c8:	6812      	ldr	r2, [r2, #0]
 800e7ca:	1a9b      	subs	r3, r3, r2
 800e7cc:	2b63      	cmp	r3, #99	; 0x63
 800e7ce:	d9dc      	bls.n	800e78a <SpiFlashStore::Flash()+0x26>
 800e7d0:	2304      	movs	r3, #4
 800e7d2:	e7d9      	b.n	800e788 <SpiFlashStore::Flash()+0x24>
 800e7d4:	2306      	movs	r3, #6
 800e7d6:	e7d7      	b.n	800e788 <SpiFlashStore::Flash()+0x24>
 800e7d8:	ab03      	add	r3, sp, #12
 800e7da:	4a0d      	ldr	r2, [pc, #52]	; (800e810 <SpiFlashStore::Flash()+0xac>)
 800e7dc:	490a      	ldr	r1, [pc, #40]	; (800e808 <SpiFlashStore::Flash()+0xa4>)
 800e7de:	480b      	ldr	r0, [pc, #44]	; (800e80c <SpiFlashStore::Flash()+0xa8>)
 800e7e0:	9300      	str	r3, [sp, #0]
 800e7e2:	6812      	ldr	r2, [r2, #0]
 800e7e4:	4b0b      	ldr	r3, [pc, #44]	; (800e814 <SpiFlashStore::Flash()+0xb0>)
 800e7e6:	6809      	ldr	r1, [r1, #0]
 800e7e8:	6800      	ldr	r0, [r0, #0]
 800e7ea:	f000 fab7 	bl	800ed5c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)>
 800e7ee:	2800      	cmp	r0, #0
 800e7f0:	d0cb      	beq.n	800e78a <SpiFlashStore::Flash()+0x26>
 800e7f2:	2000      	movs	r0, #0
 800e7f4:	6020      	str	r0, [r4, #0]
 800e7f6:	b004      	add	sp, #16
 800e7f8:	bd10      	pop	{r4, pc}
 800e7fa:	bf00      	nop
 800e7fc:	20003894 	mulcs	r0, r4, r8
 800e800:	2000b87c 	andcs	fp, r0, ip, ror r8
 800e804:	20002884 	andcs	r2, r0, r4, lsl #17
 800e808:	20003888 	andcs	r3, r0, r8, lsl #17
 800e80c:	200038b8 			; <UNDEFINED> instruction: 0x200038b8
 800e810:	20003890 	mulcs	r0, r0, r8
 800e814:	20002888 	andcs	r2, r0, r8, lsl #17

0800e818 <StoreDisplayUdf::~StoreDisplayUdf()>:
 800e818:	4770      	bx	lr
	...

0800e81c <StoreDisplayUdf::Copy(displayudfparams::Params*)>:
 800e81c:	b507      	push	{r0, r1, r2, lr}
 800e81e:	2300      	movs	r3, #0
 800e820:	460a      	mov	r2, r1
 800e822:	2101      	movs	r1, #1
 800e824:	e9cd 3100 	strd	r3, r1, [sp]
 800e828:	4804      	ldr	r0, [pc, #16]	; (800e83c <StoreDisplayUdf::Copy(displayudfparams::Params*)+0x20>)
 800e82a:	2322      	movs	r3, #34	; 0x22
 800e82c:	210f      	movs	r1, #15
 800e82e:	6800      	ldr	r0, [r0, #0]
 800e830:	f7ff ff66 	bl	800e700 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)>
 800e834:	b003      	add	sp, #12
 800e836:	f85d fb04 	ldr.w	pc, [sp], #4
 800e83a:	bf00      	nop
 800e83c:	20003898 	mulcs	r0, r8, r8

0800e840 <StoreDisplayUdf::Update(displayudfparams::Params const*)>:
 800e840:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e842:	2200      	movs	r2, #0
 800e844:	460b      	mov	r3, r1
 800e846:	2122      	movs	r1, #34	; 0x22
 800e848:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800e84c:	4804      	ldr	r0, [pc, #16]	; (800e860 <StoreDisplayUdf::Update(displayudfparams::Params const*)+0x20>)
 800e84e:	9100      	str	r1, [sp, #0]
 800e850:	6800      	ldr	r0, [r0, #0]
 800e852:	210f      	movs	r1, #15
 800e854:	f7ff ff14 	bl	800e680 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e858:	b005      	add	sp, #20
 800e85a:	f85d fb04 	ldr.w	pc, [sp], #4
 800e85e:	bf00      	nop
 800e860:	20003898 	mulcs	r0, r8, r8

0800e864 <StoreDisplayUdf::~StoreDisplayUdf()>:
 800e864:	b510      	push	{r4, lr}
 800e866:	4604      	mov	r4, r0
 800e868:	f003 fe3c 	bl	80124e4 <operator delete(void*)>
 800e86c:	4620      	mov	r0, r4
 800e86e:	bd10      	pop	{r4, pc}

0800e870 <StoreDisplayUdf::StoreDisplayUdf()>:
 800e870:	4a02      	ldr	r2, [pc, #8]	; (800e87c <StoreDisplayUdf::StoreDisplayUdf()+0xc>)
 800e872:	6002      	str	r2, [r0, #0]
 800e874:	4a02      	ldr	r2, [pc, #8]	; (800e880 <StoreDisplayUdf::StoreDisplayUdf()+0x10>)
 800e876:	6010      	str	r0, [r2, #0]
 800e878:	4770      	bx	lr
 800e87a:	bf00      	nop
 800e87c:	08016284 	stmdaeq	r1, {r2, r7, r9, sp, lr}
 800e880:	200038a0 	andcs	r3, r0, r0, lsr #17

0800e884 <StoreDmxSend::~StoreDmxSend()>:
 800e884:	4770      	bx	lr
	...

0800e888 <StoreDmxSend::Copy(TDmxParams*)>:
 800e888:	b507      	push	{r0, r1, r2, lr}
 800e88a:	2300      	movs	r3, #0
 800e88c:	460a      	mov	r2, r1
 800e88e:	2101      	movs	r1, #1
 800e890:	e9cd 3100 	strd	r3, r1, [sp]
 800e894:	4804      	ldr	r0, [pc, #16]	; (800e8a8 <StoreDmxSend::Copy(TDmxParams*)+0x20>)
 800e896:	230a      	movs	r3, #10
 800e898:	2102      	movs	r1, #2
 800e89a:	6800      	ldr	r0, [r0, #0]
 800e89c:	f7ff ff30 	bl	800e700 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)>
 800e8a0:	b003      	add	sp, #12
 800e8a2:	f85d fb04 	ldr.w	pc, [sp], #4
 800e8a6:	bf00      	nop
 800e8a8:	20003898 	mulcs	r0, r8, r8

0800e8ac <StoreDmxSend::Update(TDmxParams const*)>:
 800e8ac:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e8ae:	2200      	movs	r2, #0
 800e8b0:	460b      	mov	r3, r1
 800e8b2:	210a      	movs	r1, #10
 800e8b4:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800e8b8:	4804      	ldr	r0, [pc, #16]	; (800e8cc <StoreDmxSend::Update(TDmxParams const*)+0x20>)
 800e8ba:	9100      	str	r1, [sp, #0]
 800e8bc:	6800      	ldr	r0, [r0, #0]
 800e8be:	2102      	movs	r1, #2
 800e8c0:	f7ff fede 	bl	800e680 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e8c4:	b005      	add	sp, #20
 800e8c6:	f85d fb04 	ldr.w	pc, [sp], #4
 800e8ca:	bf00      	nop
 800e8cc:	20003898 	mulcs	r0, r8, r8

0800e8d0 <StoreDmxSend::~StoreDmxSend()>:
 800e8d0:	b510      	push	{r4, lr}
 800e8d2:	4604      	mov	r4, r0
 800e8d4:	f003 fe06 	bl	80124e4 <operator delete(void*)>
 800e8d8:	4620      	mov	r0, r4
 800e8da:	bd10      	pop	{r4, pc}

0800e8dc <StoreDmxSend::StoreDmxSend()>:
 800e8dc:	4a02      	ldr	r2, [pc, #8]	; (800e8e8 <StoreDmxSend::StoreDmxSend()+0xc>)
 800e8de:	6002      	str	r2, [r0, #0]
 800e8e0:	4a02      	ldr	r2, [pc, #8]	; (800e8ec <StoreDmxSend::StoreDmxSend()+0x10>)
 800e8e2:	6010      	str	r0, [r2, #0]
 800e8e4:	4770      	bx	lr
 800e8e6:	bf00      	nop
 800e8e8:	0801629c 	stmdaeq	r1, {r2, r3, r4, r7, r9, sp, lr}
 800e8ec:	200038a4 	andcs	r3, r0, r4, lsr #17

0800e8f0 <StoreNetwork::~StoreNetwork()>:
 800e8f0:	4770      	bx	lr

0800e8f2 <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 800e8f2:	3804      	subs	r0, #4
 800e8f4:	4770      	bx	lr
	...

0800e8f8 <StoreNetwork::Update(networkparams::Params const*)>:
 800e8f8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e8fa:	2200      	movs	r2, #0
 800e8fc:	460b      	mov	r3, r1
 800e8fe:	215e      	movs	r1, #94	; 0x5e
 800e900:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800e904:	4804      	ldr	r0, [pc, #16]	; (800e918 <StoreNetwork::Update(networkparams::Params const*)+0x20>)
 800e906:	9100      	str	r1, [sp, #0]
 800e908:	6800      	ldr	r0, [r0, #0]
 800e90a:	4611      	mov	r1, r2
 800e90c:	f7ff feb8 	bl	800e680 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e910:	b005      	add	sp, #20
 800e912:	f85d fb04 	ldr.w	pc, [sp], #4
 800e916:	bf00      	nop
 800e918:	20003898 	mulcs	r0, r8, r8

0800e91c <StoreNetwork::SaveGatewayIp(unsigned int)>:
 800e91c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800e91e:	2308      	movs	r3, #8
 800e920:	9105      	str	r1, [sp, #20]
 800e922:	2100      	movs	r1, #0
 800e924:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800e928:	2304      	movs	r3, #4
 800e92a:	4805      	ldr	r0, [pc, #20]	; (800e940 <StoreNetwork::SaveGatewayIp(unsigned int)+0x24>)
 800e92c:	9300      	str	r3, [sp, #0]
 800e92e:	220c      	movs	r2, #12
 800e930:	6800      	ldr	r0, [r0, #0]
 800e932:	ab05      	add	r3, sp, #20
 800e934:	f7ff fea4 	bl	800e680 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e938:	b007      	add	sp, #28
 800e93a:	f85d fb04 	ldr.w	pc, [sp], #4
 800e93e:	bf00      	nop
 800e940:	20003898 	mulcs	r0, r8, r8

0800e944 <non-virtual thunk to StoreNetwork::SaveGatewayIp(unsigned int)>:
 800e944:	f1a0 0004 	sub.w	r0, r0, #4
 800e948:	e7e8      	b.n	800e91c <StoreNetwork::SaveGatewayIp(unsigned int)>
 800e94a:	bf00      	nop

0800e94c <StoreNetwork::SaveNetMask(unsigned int)>:
 800e94c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800e94e:	2304      	movs	r3, #4
 800e950:	9105      	str	r1, [sp, #20]
 800e952:	2100      	movs	r1, #0
 800e954:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800e958:	4804      	ldr	r0, [pc, #16]	; (800e96c <StoreNetwork::SaveNetMask(unsigned int)+0x20>)
 800e95a:	9300      	str	r3, [sp, #0]
 800e95c:	2208      	movs	r2, #8
 800e95e:	6800      	ldr	r0, [r0, #0]
 800e960:	ab05      	add	r3, sp, #20
 800e962:	f7ff fe8d 	bl	800e680 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e966:	b007      	add	sp, #28
 800e968:	f85d fb04 	ldr.w	pc, [sp], #4
 800e96c:	20003898 	mulcs	r0, r8, r8

0800e970 <non-virtual thunk to StoreNetwork::SaveNetMask(unsigned int)>:
 800e970:	f1a0 0004 	sub.w	r0, r0, #4
 800e974:	e7ea      	b.n	800e94c <StoreNetwork::SaveNetMask(unsigned int)>
 800e976:	bf00      	nop

0800e978 <StoreNetwork::SaveIp(unsigned int)>:
 800e978:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800e97a:	2302      	movs	r3, #2
 800e97c:	9105      	str	r1, [sp, #20]
 800e97e:	2100      	movs	r1, #0
 800e980:	2204      	movs	r2, #4
 800e982:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800e986:	4804      	ldr	r0, [pc, #16]	; (800e998 <StoreNetwork::SaveIp(unsigned int)+0x20>)
 800e988:	9200      	str	r2, [sp, #0]
 800e98a:	6800      	ldr	r0, [r0, #0]
 800e98c:	ab05      	add	r3, sp, #20
 800e98e:	f7ff fe77 	bl	800e680 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e992:	b007      	add	sp, #28
 800e994:	f85d fb04 	ldr.w	pc, [sp], #4
 800e998:	20003898 	mulcs	r0, r8, r8

0800e99c <non-virtual thunk to StoreNetwork::SaveIp(unsigned int)>:
 800e99c:	f1a0 0004 	sub.w	r0, r0, #4
 800e9a0:	e7ea      	b.n	800e978 <StoreNetwork::SaveIp(unsigned int)>
 800e9a2:	bf00      	nop

0800e9a4 <StoreNetwork::SaveHostName(char const*, unsigned int)>:
 800e9a4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e9a6:	460b      	mov	r3, r1
 800e9a8:	2020      	movs	r0, #32
 800e9aa:	2100      	movs	r1, #0
 800e9ac:	2a40      	cmp	r2, #64	; 0x40
 800e9ae:	bf28      	it	cs
 800e9b0:	2240      	movcs	r2, #64	; 0x40
 800e9b2:	e9cd 0101 	strd	r0, r1, [sp, #4]
 800e9b6:	4804      	ldr	r0, [pc, #16]	; (800e9c8 <StoreNetwork::SaveHostName(char const*, unsigned int)+0x24>)
 800e9b8:	9200      	str	r2, [sp, #0]
 800e9ba:	6800      	ldr	r0, [r0, #0]
 800e9bc:	2215      	movs	r2, #21
 800e9be:	f7ff fe5f 	bl	800e680 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e9c2:	b005      	add	sp, #20
 800e9c4:	f85d fb04 	ldr.w	pc, [sp], #4
 800e9c8:	20003898 	mulcs	r0, r8, r8

0800e9cc <non-virtual thunk to StoreNetwork::SaveHostName(char const*, unsigned int)>:
 800e9cc:	f1a0 0004 	sub.w	r0, r0, #4
 800e9d0:	e7e8      	b.n	800e9a4 <StoreNetwork::SaveHostName(char const*, unsigned int)>
 800e9d2:	bf00      	nop

0800e9d4 <StoreNetwork::~StoreNetwork()>:
 800e9d4:	b510      	push	{r4, lr}
 800e9d6:	4604      	mov	r4, r0
 800e9d8:	f003 fd84 	bl	80124e4 <operator delete(void*)>
 800e9dc:	4620      	mov	r0, r4
 800e9de:	bd10      	pop	{r4, pc}

0800e9e0 <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 800e9e0:	f1a0 0004 	sub.w	r0, r0, #4
 800e9e4:	e7f6      	b.n	800e9d4 <StoreNetwork::~StoreNetwork()>
	...

0800e9e8 <StoreNetwork::Copy(networkparams::Params*)>:
 800e9e8:	b507      	push	{r0, r1, r2, lr}
 800e9ea:	2301      	movs	r3, #1
 800e9ec:	460a      	mov	r2, r1
 800e9ee:	2100      	movs	r1, #0
 800e9f0:	e9cd 1300 	strd	r1, r3, [sp]
 800e9f4:	4803      	ldr	r0, [pc, #12]	; (800ea04 <StoreNetwork::Copy(networkparams::Params*)+0x1c>)
 800e9f6:	235e      	movs	r3, #94	; 0x5e
 800e9f8:	6800      	ldr	r0, [r0, #0]
 800e9fa:	f7ff fe81 	bl	800e700 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)>
 800e9fe:	b003      	add	sp, #12
 800ea00:	f85d fb04 	ldr.w	pc, [sp], #4
 800ea04:	20003898 	mulcs	r0, r8, r8

0800ea08 <StoreNetwork::StoreNetwork()>:
 800ea08:	4a03      	ldr	r2, [pc, #12]	; (800ea18 <StoreNetwork::StoreNetwork()+0x10>)
 800ea0a:	6002      	str	r2, [r0, #0]
 800ea0c:	322c      	adds	r2, #44	; 0x2c
 800ea0e:	6042      	str	r2, [r0, #4]
 800ea10:	4a02      	ldr	r2, [pc, #8]	; (800ea1c <StoreNetwork::StoreNetwork()+0x14>)
 800ea12:	6010      	str	r0, [r2, #0]
 800ea14:	4770      	bx	lr
 800ea16:	bf00      	nop
 800ea18:	080162b4 	stmdaeq	r1, {r2, r4, r5, r7, r9, sp, lr}
 800ea1c:	200038a8 	andcs	r3, r0, r8, lsr #17

0800ea20 <StoreRDMDevice::~StoreRDMDevice()>:
 800ea20:	4770      	bx	lr

0800ea22 <non-virtual thunk to StoreRDMDevice::~StoreRDMDevice()>:
 800ea22:	3804      	subs	r0, #4
 800ea24:	4770      	bx	lr
	...

0800ea28 <StoreRDMDevice::Update(TRDMDeviceParams const*)>:
 800ea28:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800ea2a:	2200      	movs	r2, #0
 800ea2c:	460b      	mov	r3, r1
 800ea2e:	2129      	movs	r1, #41	; 0x29
 800ea30:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800ea34:	4804      	ldr	r0, [pc, #16]	; (800ea48 <StoreRDMDevice::Update(TRDMDeviceParams const*)+0x20>)
 800ea36:	9100      	str	r1, [sp, #0]
 800ea38:	6800      	ldr	r0, [r0, #0]
 800ea3a:	210b      	movs	r1, #11
 800ea3c:	f7ff fe20 	bl	800e680 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800ea40:	b005      	add	sp, #20
 800ea42:	f85d fb04 	ldr.w	pc, [sp], #4
 800ea46:	bf00      	nop
 800ea48:	20003898 	mulcs	r0, r8, r8

0800ea4c <StoreRDMDevice::SaveLabel(char const*, unsigned char)>:
 800ea4c:	b570      	push	{r4, r5, r6, lr}
 800ea4e:	2401      	movs	r4, #1
 800ea50:	2600      	movs	r6, #0
 800ea52:	4d0c      	ldr	r5, [pc, #48]	; (800ea84 <StoreRDMDevice::SaveLabel(char const*, unsigned char)+0x38>)
 800ea54:	b086      	sub	sp, #24
 800ea56:	460b      	mov	r3, r1
 800ea58:	6828      	ldr	r0, [r5, #0]
 800ea5a:	f88d 2017 	strb.w	r2, [sp, #23]
 800ea5e:	9200      	str	r2, [sp, #0]
 800ea60:	210b      	movs	r1, #11
 800ea62:	2204      	movs	r2, #4
 800ea64:	e9cd 4601 	strd	r4, r6, [sp, #4]
 800ea68:	f7ff fe0a 	bl	800e680 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800ea6c:	2224      	movs	r2, #36	; 0x24
 800ea6e:	210b      	movs	r1, #11
 800ea70:	e9cd 4601 	strd	r4, r6, [sp, #4]
 800ea74:	6828      	ldr	r0, [r5, #0]
 800ea76:	9400      	str	r4, [sp, #0]
 800ea78:	f10d 0317 	add.w	r3, sp, #23
 800ea7c:	f7ff fe00 	bl	800e680 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800ea80:	b006      	add	sp, #24
 800ea82:	bd70      	pop	{r4, r5, r6, pc}
 800ea84:	20003898 	mulcs	r0, r8, r8

0800ea88 <non-virtual thunk to StoreRDMDevice::SaveLabel(char const*, unsigned char)>:
 800ea88:	f1a0 0004 	sub.w	r0, r0, #4
 800ea8c:	e7de      	b.n	800ea4c <StoreRDMDevice::SaveLabel(char const*, unsigned char)>
 800ea8e:	bf00      	nop

0800ea90 <StoreRDMDevice::~StoreRDMDevice()>:
 800ea90:	b510      	push	{r4, lr}
 800ea92:	4604      	mov	r4, r0
 800ea94:	f003 fd26 	bl	80124e4 <operator delete(void*)>
 800ea98:	4620      	mov	r0, r4
 800ea9a:	bd10      	pop	{r4, pc}

0800ea9c <non-virtual thunk to StoreRDMDevice::~StoreRDMDevice()>:
 800ea9c:	f1a0 0004 	sub.w	r0, r0, #4
 800eaa0:	e7f6      	b.n	800ea90 <StoreRDMDevice::~StoreRDMDevice()>
	...

0800eaa4 <StoreRDMDevice::Copy(TRDMDeviceParams*)>:
 800eaa4:	b507      	push	{r0, r1, r2, lr}
 800eaa6:	2300      	movs	r3, #0
 800eaa8:	460a      	mov	r2, r1
 800eaaa:	2101      	movs	r1, #1
 800eaac:	e9cd 3100 	strd	r3, r1, [sp]
 800eab0:	4804      	ldr	r0, [pc, #16]	; (800eac4 <StoreRDMDevice::Copy(TRDMDeviceParams*)+0x20>)
 800eab2:	2329      	movs	r3, #41	; 0x29
 800eab4:	210b      	movs	r1, #11
 800eab6:	6800      	ldr	r0, [r0, #0]
 800eab8:	f7ff fe22 	bl	800e700 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)>
 800eabc:	b003      	add	sp, #12
 800eabe:	f85d fb04 	ldr.w	pc, [sp], #4
 800eac2:	bf00      	nop
 800eac4:	20003898 	mulcs	r0, r8, r8

0800eac8 <StoreRDMDevice::StoreRDMDevice()>:
 800eac8:	4a03      	ldr	r2, [pc, #12]	; (800ead8 <StoreRDMDevice::StoreRDMDevice()+0x10>)
 800eaca:	6002      	str	r2, [r0, #0]
 800eacc:	321c      	adds	r2, #28
 800eace:	6042      	str	r2, [r0, #4]
 800ead0:	4a02      	ldr	r2, [pc, #8]	; (800eadc <StoreRDMDevice::StoreRDMDevice()+0x14>)
 800ead2:	6010      	str	r0, [r2, #0]
 800ead4:	4770      	bx	lr
 800ead6:	bf00      	nop
 800ead8:	08016304 	stmdaeq	r1, {r2, r8, r9, sp, lr}
 800eadc:	200038ac 	andcs	r3, r0, ip, lsr #17

0800eae0 <StoreRemoteConfig::~StoreRemoteConfig()>:
 800eae0:	4770      	bx	lr
	...

0800eae4 <StoreRemoteConfig::Copy(TRemoteConfigParams*)>:
 800eae4:	b507      	push	{r0, r1, r2, lr}
 800eae6:	2300      	movs	r3, #0
 800eae8:	460a      	mov	r2, r1
 800eaea:	2101      	movs	r1, #1
 800eaec:	e9cd 3100 	strd	r3, r1, [sp]
 800eaf0:	4804      	ldr	r0, [pc, #16]	; (800eb04 <StoreRemoteConfig::Copy(TRemoteConfigParams*)+0x20>)
 800eaf2:	2320      	movs	r3, #32
 800eaf4:	210c      	movs	r1, #12
 800eaf6:	6800      	ldr	r0, [r0, #0]
 800eaf8:	f7ff fe02 	bl	800e700 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)>
 800eafc:	b003      	add	sp, #12
 800eafe:	f85d fb04 	ldr.w	pc, [sp], #4
 800eb02:	bf00      	nop
 800eb04:	20003898 	mulcs	r0, r8, r8

0800eb08 <StoreRemoteConfig::Update(TRemoteConfigParams const*)>:
 800eb08:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800eb0a:	2200      	movs	r2, #0
 800eb0c:	460b      	mov	r3, r1
 800eb0e:	2120      	movs	r1, #32
 800eb10:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800eb14:	4804      	ldr	r0, [pc, #16]	; (800eb28 <StoreRemoteConfig::Update(TRemoteConfigParams const*)+0x20>)
 800eb16:	9100      	str	r1, [sp, #0]
 800eb18:	6800      	ldr	r0, [r0, #0]
 800eb1a:	210c      	movs	r1, #12
 800eb1c:	f7ff fdb0 	bl	800e680 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800eb20:	b005      	add	sp, #20
 800eb22:	f85d fb04 	ldr.w	pc, [sp], #4
 800eb26:	bf00      	nop
 800eb28:	20003898 	mulcs	r0, r8, r8

0800eb2c <StoreRemoteConfig::~StoreRemoteConfig()>:
 800eb2c:	b510      	push	{r4, lr}
 800eb2e:	4604      	mov	r4, r0
 800eb30:	f003 fcd8 	bl	80124e4 <operator delete(void*)>
 800eb34:	4620      	mov	r0, r4
 800eb36:	bd10      	pop	{r4, pc}

0800eb38 <StoreRemoteConfig::StoreRemoteConfig()>:
 800eb38:	4a02      	ldr	r2, [pc, #8]	; (800eb44 <StoreRemoteConfig::StoreRemoteConfig()+0xc>)
 800eb3a:	6002      	str	r2, [r0, #0]
 800eb3c:	4a02      	ldr	r2, [pc, #8]	; (800eb48 <StoreRemoteConfig::StoreRemoteConfig()+0x10>)
 800eb3e:	6010      	str	r0, [r2, #0]
 800eb40:	4770      	bx	lr
 800eb42:	bf00      	nop
 800eb44:	08016334 	stmdaeq	r1, {r2, r4, r5, r8, r9, sp, lr}
 800eb48:	200038b0 			; <UNDEFINED> instruction: 0x200038b0

0800eb4c <StoreE131::~StoreE131()>:
 800eb4c:	4770      	bx	lr
	...

0800eb50 <StoreE131::Copy(e131params::Params*)>:
 800eb50:	b507      	push	{r0, r1, r2, lr}
 800eb52:	2300      	movs	r3, #0
 800eb54:	460a      	mov	r2, r1
 800eb56:	2101      	movs	r1, #1
 800eb58:	e9cd 3100 	strd	r3, r1, [sp]
 800eb5c:	4804      	ldr	r0, [pc, #16]	; (800eb70 <StoreE131::Copy(e131params::Params*)+0x20>)
 800eb5e:	231f      	movs	r3, #31
 800eb60:	2104      	movs	r1, #4
 800eb62:	6800      	ldr	r0, [r0, #0]
 800eb64:	f7ff fdcc 	bl	800e700 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int, bool)>
 800eb68:	b003      	add	sp, #12
 800eb6a:	f85d fb04 	ldr.w	pc, [sp], #4
 800eb6e:	bf00      	nop
 800eb70:	20003898 	mulcs	r0, r8, r8

0800eb74 <StoreE131::Update(e131params::Params const*)>:
 800eb74:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800eb76:	2200      	movs	r2, #0
 800eb78:	460b      	mov	r3, r1
 800eb7a:	211f      	movs	r1, #31
 800eb7c:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800eb80:	4804      	ldr	r0, [pc, #16]	; (800eb94 <StoreE131::Update(e131params::Params const*)+0x20>)
 800eb82:	9100      	str	r1, [sp, #0]
 800eb84:	6800      	ldr	r0, [r0, #0]
 800eb86:	2104      	movs	r1, #4
 800eb88:	f7ff fd7a 	bl	800e680 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800eb8c:	b005      	add	sp, #20
 800eb8e:	f85d fb04 	ldr.w	pc, [sp], #4
 800eb92:	bf00      	nop
 800eb94:	20003898 	mulcs	r0, r8, r8

0800eb98 <StoreE131::~StoreE131()>:
 800eb98:	b510      	push	{r4, lr}
 800eb9a:	4604      	mov	r4, r0
 800eb9c:	f003 fca2 	bl	80124e4 <operator delete(void*)>
 800eba0:	4620      	mov	r0, r4
 800eba2:	bd10      	pop	{r4, pc}

0800eba4 <StoreE131::StoreE131()>:
 800eba4:	4a02      	ldr	r2, [pc, #8]	; (800ebb0 <StoreE131::StoreE131()+0xc>)
 800eba6:	6002      	str	r2, [r0, #0]
 800eba8:	4a02      	ldr	r2, [pc, #8]	; (800ebb4 <StoreE131::StoreE131()+0x10>)
 800ebaa:	6010      	str	r0, [r2, #0]
 800ebac:	4770      	bx	lr
 800ebae:	bf00      	nop
 800ebb0:	0801634c 	stmdaeq	r1, {r2, r3, r6, r8, r9, sp, lr}
 800ebb4:	200038b4 			; <UNDEFINED> instruction: 0x200038b4

0800ebb8 <FlashRom::FlashRom()>:
 800ebb8:	4b07      	ldr	r3, [pc, #28]	; (800ebd8 <FlashRom::FlashRom()+0x20>)
 800ebba:	b510      	push	{r4, lr}
 800ebbc:	6018      	str	r0, [r3, #0]
 800ebbe:	2301      	movs	r3, #1
 800ebc0:	4604      	mov	r4, r0
 800ebc2:	7003      	strb	r3, [r0, #0]
 800ebc4:	4b05      	ldr	r3, [pc, #20]	; (800ebdc <FlashRom::FlashRom()+0x24>)
 800ebc6:	4906      	ldr	r1, [pc, #24]	; (800ebe0 <FlashRom::FlashRom()+0x28>)
 800ebc8:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800ebcc:	4805      	ldr	r0, [pc, #20]	; (800ebe4 <FlashRom::FlashRom()+0x2c>)
 800ebce:	029a      	lsls	r2, r3, #10
 800ebd0:	f7fa fa8a 	bl	80090e8 <printf>
 800ebd4:	4620      	mov	r0, r4
 800ebd6:	bd10      	pop	{r4, pc}
 800ebd8:	200038b8 			; <UNDEFINED> instruction: 0x200038b8
 800ebdc:	1ffff700 	svcne	0x00fff700
 800ebe0:	08015026 	stmdaeq	r1, {r1, r2, r5, ip, lr}
 800ebe4:	0801635c 	stmdaeq	r1, {r2, r3, r4, r6, r8, r9, sp, lr}

0800ebe8 <FlashRom::GetSize() const>:
 800ebe8:	4b02      	ldr	r3, [pc, #8]	; (800ebf4 <FlashRom::GetSize() const+0xc>)
 800ebea:	f8b3 00e0 	ldrh.w	r0, [r3, #224]	; 0xe0
 800ebee:	0280      	lsls	r0, r0, #10
 800ebf0:	4770      	bx	lr
 800ebf2:	bf00      	nop
 800ebf4:	1ffff700 	svcne	0x00fff700

0800ebf8 <FlashRom::GetSectorSize() const>:
 800ebf8:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 800ebfc:	4770      	bx	lr

0800ebfe <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)>:
 800ebfe:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800ec02:	441a      	add	r2, r3
 800ec04:	4293      	cmp	r3, r2
 800ec06:	d104      	bne.n	800ec12 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)+0x14>
 800ec08:	2200      	movs	r2, #0
 800ec0a:	9b00      	ldr	r3, [sp, #0]
 800ec0c:	2001      	movs	r0, #1
 800ec0e:	601a      	str	r2, [r3, #0]
 800ec10:	4770      	bx	lr
 800ec12:	f851 0b04 	ldr.w	r0, [r1], #4
 800ec16:	f843 0b04 	str.w	r0, [r3], #4
 800ec1a:	e7f3      	b.n	800ec04 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)+0x6>

0800ec1c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)>:
 800ec1c:	2000      	movs	r0, #0
 800ec1e:	b538      	push	{r3, r4, r5, lr}
 800ec20:	4c47      	ldr	r4, [pc, #284]	; (800ed40 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x124>)
 800ec22:	6018      	str	r0, [r3, #0]
 800ec24:	6823      	ldr	r3, [r4, #0]
 800ec26:	2b04      	cmp	r3, #4
 800ec28:	f200 8082 	bhi.w	800ed30 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x114>
 800ec2c:	e8df f003 	tbb	[pc, r3]
 800ec30:	78452003 	stmdavc	r5, {r0, r1, sp}^
 800ec34:	4b430080 	blmi	90cee3c <__exidx_end+0x10b81bc>
 800ec38:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800ec3c:	6019      	str	r1, [r3, #0]
 800ec3e:	4b42      	ldr	r3, [pc, #264]	; (800ed48 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800ec40:	601a      	str	r2, [r3, #0]
 800ec42:	4b42      	ldr	r3, [pc, #264]	; (800ed4c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x130>)
 800ec44:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800ec48:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800ec4c:	4b40      	ldr	r3, [pc, #256]	; (800ed50 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800ec4e:	d807      	bhi.n	800ec60 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x44>
 800ec50:	2201      	movs	r2, #1
 800ec52:	701a      	strb	r2, [r3, #0]
 800ec54:	f003 ffa6 	bl	8012ba4 <fmc_bank0_unlock>
 800ec58:	2301      	movs	r3, #1
 800ec5a:	6023      	str	r3, [r4, #0]
 800ec5c:	2000      	movs	r0, #0
 800ec5e:	e026      	b.n	800ecae <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x92>
 800ec60:	4a3c      	ldr	r2, [pc, #240]	; (800ed54 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x138>)
 800ec62:	4291      	cmp	r1, r2
 800ec64:	d3f4      	bcc.n	800ec50 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x34>
 800ec66:	2200      	movs	r2, #0
 800ec68:	701a      	strb	r2, [r3, #0]
 800ec6a:	f003 ffa9 	bl	8012bc0 <fmc_bank1_unlock>
 800ec6e:	e7f3      	b.n	800ec58 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 800ec70:	4d37      	ldr	r5, [pc, #220]	; (800ed50 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800ec72:	782b      	ldrb	r3, [r5, #0]
 800ec74:	b15b      	cbz	r3, 800ec8e <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x72>
 800ec76:	f003 ffc1 	bl	8012bfc <fmc_bank0_state_get>
 800ec7a:	2801      	cmp	r0, #1
 800ec7c:	d0ee      	beq.n	800ec5c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x40>
 800ec7e:	7829      	ldrb	r1, [r5, #0]
 800ec80:	4b35      	ldr	r3, [pc, #212]	; (800ed58 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800ec82:	b939      	cbnz	r1, 800ec94 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x78>
 800ec84:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800ec86:	f022 0202 	bic.w	r2, r2, #2
 800ec8a:	651a      	str	r2, [r3, #80]	; 0x50
 800ec8c:	e006      	b.n	800ec9c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x80>
 800ec8e:	f003 ffc7 	bl	8012c20 <fmc_bank1_state_get>
 800ec92:	e7f2      	b.n	800ec7a <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x5e>
 800ec94:	691a      	ldr	r2, [r3, #16]
 800ec96:	f022 0202 	bic.w	r2, r2, #2
 800ec9a:	611a      	str	r2, [r3, #16]
 800ec9c:	4b2a      	ldr	r3, [pc, #168]	; (800ed48 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800ec9e:	681b      	ldr	r3, [r3, #0]
 800eca0:	b94b      	cbnz	r3, 800ecb6 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x9a>
 800eca2:	b129      	cbz	r1, 800ecb0 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x94>
 800eca4:	f003 ff9a 	bl	8012bdc <fmc_bank0_lock>
 800eca8:	2300      	movs	r3, #0
 800ecaa:	2001      	movs	r0, #1
 800ecac:	6023      	str	r3, [r4, #0]
 800ecae:	bd38      	pop	{r3, r4, r5, pc}
 800ecb0:	f003 ff9c 	bl	8012bec <fmc_bank1_lock>
 800ecb4:	e7f8      	b.n	800eca8 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x8c>
 800ecb6:	2302      	movs	r3, #2
 800ecb8:	e7cf      	b.n	800ec5a <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3e>
 800ecba:	4923      	ldr	r1, [pc, #140]	; (800ed48 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800ecbc:	680b      	ldr	r3, [r1, #0]
 800ecbe:	2b00      	cmp	r3, #0
 800ecc0:	d0ca      	beq.n	800ec58 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 800ecc2:	4b23      	ldr	r3, [pc, #140]	; (800ed50 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800ecc4:	4a1f      	ldr	r2, [pc, #124]	; (800ed44 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x128>)
 800ecc6:	7818      	ldrb	r0, [r3, #0]
 800ecc8:	4b23      	ldr	r3, [pc, #140]	; (800ed58 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800ecca:	b190      	cbz	r0, 800ecf2 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0xd6>
 800eccc:	6918      	ldr	r0, [r3, #16]
 800ecce:	f040 0002 	orr.w	r0, r0, #2
 800ecd2:	6118      	str	r0, [r3, #16]
 800ecd4:	6810      	ldr	r0, [r2, #0]
 800ecd6:	6158      	str	r0, [r3, #20]
 800ecd8:	6918      	ldr	r0, [r3, #16]
 800ecda:	f040 0040 	orr.w	r0, r0, #64	; 0x40
 800ecde:	6118      	str	r0, [r3, #16]
 800ece0:	680b      	ldr	r3, [r1, #0]
 800ece2:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 800ece6:	600b      	str	r3, [r1, #0]
 800ece8:	6813      	ldr	r3, [r2, #0]
 800ecea:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800ecee:	6013      	str	r3, [r2, #0]
 800ecf0:	e7b2      	b.n	800ec58 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 800ecf2:	6d18      	ldr	r0, [r3, #80]	; 0x50
 800ecf4:	f040 0002 	orr.w	r0, r0, #2
 800ecf8:	6518      	str	r0, [r3, #80]	; 0x50
 800ecfa:	6810      	ldr	r0, [r2, #0]
 800ecfc:	6558      	str	r0, [r3, #84]	; 0x54
 800ecfe:	69dd      	ldr	r5, [r3, #28]
 800ed00:	07ad      	lsls	r5, r5, #30
 800ed02:	bf48      	it	mi
 800ed04:	6158      	strmi	r0, [r3, #20]
 800ed06:	4814      	ldr	r0, [pc, #80]	; (800ed58 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800ed08:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800ed0a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800ed0e:	6503      	str	r3, [r0, #80]	; 0x50
 800ed10:	680b      	ldr	r3, [r1, #0]
 800ed12:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
 800ed16:	600b      	str	r3, [r1, #0]
 800ed18:	6813      	ldr	r3, [r2, #0]
 800ed1a:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800ed1e:	e7e6      	b.n	800ecee <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0xd2>
 800ed20:	4b0b      	ldr	r3, [pc, #44]	; (800ed50 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800ed22:	781a      	ldrb	r2, [r3, #0]
 800ed24:	4b0c      	ldr	r3, [pc, #48]	; (800ed58 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800ed26:	b132      	cbz	r2, 800ed36 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x11a>
 800ed28:	691a      	ldr	r2, [r3, #16]
 800ed2a:	f022 0201 	bic.w	r2, r2, #1
 800ed2e:	611a      	str	r2, [r3, #16]
 800ed30:	2000      	movs	r0, #0
 800ed32:	6020      	str	r0, [r4, #0]
 800ed34:	e7bb      	b.n	800ecae <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x92>
 800ed36:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800ed38:	f022 0201 	bic.w	r2, r2, #1
 800ed3c:	651a      	str	r2, [r3, #80]	; 0x50
 800ed3e:	e7f7      	b.n	800ed30 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x114>
 800ed40:	200038c0 	andcs	r3, r0, r0, asr #17
 800ed44:	200038c4 	andcs	r3, r0, r4, asr #17
 800ed48:	200038d0 	ldrdcs	r3, [r0], -r0
 800ed4c:	1ffff700 	svcne	0x00fff700
 800ed50:	200038cc 	andcs	r3, r0, ip, asr #17
 800ed54:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 800ed58:	40022000 	andmi	r2, r2, r0

0800ed5c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)>:
 800ed5c:	b570      	push	{r4, r5, r6, lr}
 800ed5e:	2400      	movs	r4, #0
 800ed60:	9804      	ldr	r0, [sp, #16]
 800ed62:	6004      	str	r4, [r0, #0]
 800ed64:	4c48      	ldr	r4, [pc, #288]	; (800ee88 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x12c>)
 800ed66:	6820      	ldr	r0, [r4, #0]
 800ed68:	2804      	cmp	r0, #4
 800ed6a:	d848      	bhi.n	800edfe <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xa2>
 800ed6c:	e8df f000 	tbb	[pc, r0]
 800ed70:	22847c03 	addcs	r7, r4, #768	; 0x300
 800ed74:	48450047 	stmdami	r5, {r0, r1, r2, r6}^
 800ed78:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800ed7c:	6001      	str	r1, [r0, #0]
 800ed7e:	4844      	ldr	r0, [pc, #272]	; (800ee90 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 800ed80:	6003      	str	r3, [r0, #0]
 800ed82:	4b44      	ldr	r3, [pc, #272]	; (800ee94 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 800ed84:	601a      	str	r2, [r3, #0]
 800ed86:	4b44      	ldr	r3, [pc, #272]	; (800ee98 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x13c>)
 800ed88:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800ed8c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800ed90:	4b42      	ldr	r3, [pc, #264]	; (800ee9c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800ed92:	d807      	bhi.n	800eda4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x48>
 800ed94:	2201      	movs	r2, #1
 800ed96:	701a      	strb	r2, [r3, #0]
 800ed98:	f003 ff04 	bl	8012ba4 <fmc_bank0_unlock>
 800ed9c:	2303      	movs	r3, #3
 800ed9e:	6023      	str	r3, [r4, #0]
 800eda0:	2000      	movs	r0, #0
 800eda2:	e026      	b.n	800edf2 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x96>
 800eda4:	4a3e      	ldr	r2, [pc, #248]	; (800eea0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x144>)
 800eda6:	4291      	cmp	r1, r2
 800eda8:	d3f4      	bcc.n	800ed94 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x38>
 800edaa:	2200      	movs	r2, #0
 800edac:	701a      	strb	r2, [r3, #0]
 800edae:	f003 ff07 	bl	8012bc0 <fmc_bank1_unlock>
 800edb2:	e7f3      	b.n	800ed9c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800edb4:	4d39      	ldr	r5, [pc, #228]	; (800ee9c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800edb6:	782b      	ldrb	r3, [r5, #0]
 800edb8:	b15b      	cbz	r3, 800edd2 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x76>
 800edba:	f003 ff1f 	bl	8012bfc <fmc_bank0_state_get>
 800edbe:	2801      	cmp	r0, #1
 800edc0:	d0ee      	beq.n	800eda0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x44>
 800edc2:	7829      	ldrb	r1, [r5, #0]
 800edc4:	4b37      	ldr	r3, [pc, #220]	; (800eea4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800edc6:	b939      	cbnz	r1, 800edd8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x7c>
 800edc8:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800edca:	f022 0201 	bic.w	r2, r2, #1
 800edce:	651a      	str	r2, [r3, #80]	; 0x50
 800edd0:	e006      	b.n	800ede0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x84>
 800edd2:	f003 ff25 	bl	8012c20 <fmc_bank1_state_get>
 800edd6:	e7f2      	b.n	800edbe <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x62>
 800edd8:	691a      	ldr	r2, [r3, #16]
 800edda:	f022 0201 	bic.w	r2, r2, #1
 800edde:	611a      	str	r2, [r3, #16]
 800ede0:	4b2c      	ldr	r3, [pc, #176]	; (800ee94 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 800ede2:	681b      	ldr	r3, [r3, #0]
 800ede4:	b94b      	cbnz	r3, 800edfa <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x9e>
 800ede6:	b129      	cbz	r1, 800edf4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x98>
 800ede8:	f003 fef8 	bl	8012bdc <fmc_bank0_lock>
 800edec:	2300      	movs	r3, #0
 800edee:	2001      	movs	r0, #1
 800edf0:	6023      	str	r3, [r4, #0]
 800edf2:	bd70      	pop	{r4, r5, r6, pc}
 800edf4:	f003 fefa 	bl	8012bec <fmc_bank1_lock>
 800edf8:	e7f8      	b.n	800edec <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x90>
 800edfa:	2304      	movs	r3, #4
 800edfc:	e7cf      	b.n	800ed9e <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x42>
 800edfe:	4a25      	ldr	r2, [pc, #148]	; (800ee94 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 800ee00:	6813      	ldr	r3, [r2, #0]
 800ee02:	2b03      	cmp	r3, #3
 800ee04:	d91a      	bls.n	800ee3c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xe0>
 800ee06:	4b25      	ldr	r3, [pc, #148]	; (800ee9c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800ee08:	7819      	ldrb	r1, [r3, #0]
 800ee0a:	4b26      	ldr	r3, [pc, #152]	; (800eea4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800ee0c:	b189      	cbz	r1, 800ee32 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xd6>
 800ee0e:	6919      	ldr	r1, [r3, #16]
 800ee10:	f041 0101 	orr.w	r1, r1, #1
 800ee14:	6119      	str	r1, [r3, #16]
 800ee16:	4d1e      	ldr	r5, [pc, #120]	; (800ee90 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 800ee18:	481c      	ldr	r0, [pc, #112]	; (800ee8c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x130>)
 800ee1a:	6829      	ldr	r1, [r5, #0]
 800ee1c:	6803      	ldr	r3, [r0, #0]
 800ee1e:	f851 6b04 	ldr.w	r6, [r1], #4
 800ee22:	f843 6b04 	str.w	r6, [r3], #4
 800ee26:	6003      	str	r3, [r0, #0]
 800ee28:	6813      	ldr	r3, [r2, #0]
 800ee2a:	6029      	str	r1, [r5, #0]
 800ee2c:	3b04      	subs	r3, #4
 800ee2e:	6013      	str	r3, [r2, #0]
 800ee30:	e7b4      	b.n	800ed9c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800ee32:	6d19      	ldr	r1, [r3, #80]	; 0x50
 800ee34:	f041 0101 	orr.w	r1, r1, #1
 800ee38:	6519      	str	r1, [r3, #80]	; 0x50
 800ee3a:	e7ec      	b.n	800ee16 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xba>
 800ee3c:	2b00      	cmp	r3, #0
 800ee3e:	d0ad      	beq.n	800ed9c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800ee40:	4b16      	ldr	r3, [pc, #88]	; (800ee9c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800ee42:	781a      	ldrb	r2, [r3, #0]
 800ee44:	4b17      	ldr	r3, [pc, #92]	; (800eea4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800ee46:	b152      	cbz	r2, 800ee5e <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x102>
 800ee48:	691a      	ldr	r2, [r3, #16]
 800ee4a:	f042 0201 	orr.w	r2, r2, #1
 800ee4e:	611a      	str	r2, [r3, #16]
 800ee50:	4a0f      	ldr	r2, [pc, #60]	; (800ee90 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 800ee52:	4b0e      	ldr	r3, [pc, #56]	; (800ee8c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x130>)
 800ee54:	6812      	ldr	r2, [r2, #0]
 800ee56:	681b      	ldr	r3, [r3, #0]
 800ee58:	6812      	ldr	r2, [r2, #0]
 800ee5a:	601a      	str	r2, [r3, #0]
 800ee5c:	e79e      	b.n	800ed9c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800ee5e:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800ee60:	f042 0201 	orr.w	r2, r2, #1
 800ee64:	651a      	str	r2, [r3, #80]	; 0x50
 800ee66:	e7f3      	b.n	800ee50 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xf4>
 800ee68:	4b0c      	ldr	r3, [pc, #48]	; (800ee9c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800ee6a:	781a      	ldrb	r2, [r3, #0]
 800ee6c:	4b0d      	ldr	r3, [pc, #52]	; (800eea4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800ee6e:	b132      	cbz	r2, 800ee7e <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x122>
 800ee70:	691a      	ldr	r2, [r3, #16]
 800ee72:	f022 0202 	bic.w	r2, r2, #2
 800ee76:	611a      	str	r2, [r3, #16]
 800ee78:	2000      	movs	r0, #0
 800ee7a:	6020      	str	r0, [r4, #0]
 800ee7c:	e7b9      	b.n	800edf2 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x96>
 800ee7e:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800ee80:	f022 0202 	bic.w	r2, r2, #2
 800ee84:	651a      	str	r2, [r3, #80]	; 0x50
 800ee86:	e7f7      	b.n	800ee78 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x11c>
 800ee88:	200038c0 	andcs	r3, r0, r0, asr #17
 800ee8c:	200038bc 			; <UNDEFINED> instruction: 0x200038bc
 800ee90:	200038c8 	andcs	r3, r0, r8, asr #17
 800ee94:	200038d0 	ldrdcs	r3, [r0], -r0
 800ee98:	1ffff700 	svcne	0x00fff700
 800ee9c:	200038cc 	andcs	r3, r0, ip, asr #17
 800eea0:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 800eea4:	40022000 	andmi	r2, r2, r0

0800eea8 <net_set_ip>:
 800eea8:	b510      	push	{r4, lr}
 800eeaa:	4c05      	ldr	r4, [pc, #20]	; (800eec0 <net_set_ip+0x18>)
 800eeac:	6020      	str	r0, [r4, #0]
 800eeae:	4621      	mov	r1, r4
 800eeb0:	4804      	ldr	r0, [pc, #16]	; (800eec4 <net_set_ip+0x1c>)
 800eeb2:	f7f8 fa33 	bl	800731c <arp_init>
 800eeb6:	4620      	mov	r0, r4
 800eeb8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800eebc:	f002 b88a 	b.w	8010fd4 <ip_set_ip>
 800eec0:	200038d4 	ldrdcs	r3, [r0], -r4
 800eec4:	200038e0 	andcs	r3, r0, r0, ror #17

0800eec8 <net_set_dhcp>:
 800eec8:	b570      	push	{r4, r5, r6, lr}
 800eeca:	2400      	movs	r4, #0
 800eecc:	4605      	mov	r5, r0
 800eece:	7014      	strb	r4, [r2, #0]
 800eed0:	4616      	mov	r6, r2
 800eed2:	4810      	ldr	r0, [pc, #64]	; (800ef14 <net_set_dhcp+0x4c>)
 800eed4:	460a      	mov	r2, r1
 800eed6:	4910      	ldr	r1, [pc, #64]	; (800ef18 <net_set_dhcp+0x50>)
 800eed8:	f001 fe5c 	bl	8010b94 <dhcp_client>
 800eedc:	42a0      	cmp	r0, r4
 800eede:	da17      	bge.n	800ef10 <net_set_dhcp+0x48>
 800eee0:	480d      	ldr	r0, [pc, #52]	; (800ef18 <net_set_dhcp+0x50>)
 800eee2:	f000 f859 	bl	800ef98 <rfc3927>
 800eee6:	7030      	strb	r0, [r6, #0]
 800eee8:	490b      	ldr	r1, [pc, #44]	; (800ef18 <net_set_dhcp+0x50>)
 800eeea:	480a      	ldr	r0, [pc, #40]	; (800ef14 <net_set_dhcp+0x4c>)
 800eeec:	f7f8 fa16 	bl	800731c <arp_init>
 800eef0:	4809      	ldr	r0, [pc, #36]	; (800ef18 <net_set_dhcp+0x50>)
 800eef2:	f002 f86f 	bl	8010fd4 <ip_set_ip>
 800eef6:	4a08      	ldr	r2, [pc, #32]	; (800ef18 <net_set_dhcp+0x50>)
 800eef8:	1e6b      	subs	r3, r5, #1
 800eefa:	350b      	adds	r5, #11
 800eefc:	f812 1b01 	ldrb.w	r1, [r2], #1
 800ef00:	f803 1f01 	strb.w	r1, [r3, #1]!
 800ef04:	42ab      	cmp	r3, r5
 800ef06:	d1f9      	bne.n	800eefc <net_set_dhcp+0x34>
 800ef08:	4b04      	ldr	r3, [pc, #16]	; (800ef1c <net_set_dhcp+0x54>)
 800ef0a:	4620      	mov	r0, r4
 800ef0c:	701c      	strb	r4, [r3, #0]
 800ef0e:	bd70      	pop	{r4, r5, r6, pc}
 800ef10:	2401      	movs	r4, #1
 800ef12:	e7e9      	b.n	800eee8 <net_set_dhcp+0x20>
 800ef14:	200038e0 	andcs	r3, r0, r0, ror #17
 800ef18:	200038d4 	ldrdcs	r3, [r0], -r4
 800ef1c:	200038e6 	andcs	r3, r0, r6, ror #17

0800ef20 <net_dhcp_release>:
 800ef20:	b508      	push	{r3, lr}
 800ef22:	f001 ff3f 	bl	8010da4 <dhcp_client_release>
 800ef26:	2200      	movs	r2, #0
 800ef28:	4b01      	ldr	r3, [pc, #4]	; (800ef30 <net_dhcp_release+0x10>)
 800ef2a:	701a      	strb	r2, [r3, #0]
 800ef2c:	bd08      	pop	{r3, pc}
 800ef2e:	bf00      	nop
 800ef30:	200038e6 	andcs	r3, r0, r6, ror #17

0800ef34 <net_set_zeroconf>:
 800ef34:	b538      	push	{r3, r4, r5, lr}
 800ef36:	4604      	mov	r4, r0
 800ef38:	480c      	ldr	r0, [pc, #48]	; (800ef6c <net_set_zeroconf+0x38>)
 800ef3a:	f000 f82d 	bl	800ef98 <rfc3927>
 800ef3e:	4605      	mov	r5, r0
 800ef40:	b190      	cbz	r0, 800ef68 <net_set_zeroconf+0x34>
 800ef42:	490a      	ldr	r1, [pc, #40]	; (800ef6c <net_set_zeroconf+0x38>)
 800ef44:	480a      	ldr	r0, [pc, #40]	; (800ef70 <net_set_zeroconf+0x3c>)
 800ef46:	f7f8 f9e9 	bl	800731c <arp_init>
 800ef4a:	4808      	ldr	r0, [pc, #32]	; (800ef6c <net_set_zeroconf+0x38>)
 800ef4c:	f002 f842 	bl	8010fd4 <ip_set_ip>
 800ef50:	4a06      	ldr	r2, [pc, #24]	; (800ef6c <net_set_zeroconf+0x38>)
 800ef52:	1e63      	subs	r3, r4, #1
 800ef54:	340b      	adds	r4, #11
 800ef56:	f812 1b01 	ldrb.w	r1, [r2], #1
 800ef5a:	f803 1f01 	strb.w	r1, [r3, #1]!
 800ef5e:	42a3      	cmp	r3, r4
 800ef60:	d1f9      	bne.n	800ef56 <net_set_zeroconf+0x22>
 800ef62:	2200      	movs	r2, #0
 800ef64:	4b03      	ldr	r3, [pc, #12]	; (800ef74 <net_set_zeroconf+0x40>)
 800ef66:	701a      	strb	r2, [r3, #0]
 800ef68:	4628      	mov	r0, r5
 800ef6a:	bd38      	pop	{r3, r4, r5, pc}
 800ef6c:	200038d4 	ldrdcs	r3, [r0], -r4
 800ef70:	200038e0 	andcs	r3, r0, r0, ror #17
 800ef74:	200038e6 	andcs	r3, r0, r6, ror #17

0800ef78 <net_timers_run>:
 800ef78:	4b05      	ldr	r3, [pc, #20]	; (800ef90 <net_timers_run+0x18>)
 800ef7a:	4a06      	ldr	r2, [pc, #24]	; (800ef94 <net_timers_run+0x1c>)
 800ef7c:	681b      	ldr	r3, [r3, #0]
 800ef7e:	6811      	ldr	r1, [r2, #0]
 800ef80:	4299      	cmp	r1, r3
 800ef82:	d803      	bhi.n	800ef8c <net_timers_run+0x14>
 800ef84:	3364      	adds	r3, #100	; 0x64
 800ef86:	6013      	str	r3, [r2, #0]
 800ef88:	f001 bf9a 	b.w	8010ec0 <igmp_timer>
 800ef8c:	4770      	bx	lr
 800ef8e:	bf00      	nop
 800ef90:	2000b87c 	andcs	fp, r0, ip, ror r8
 800ef94:	200038ec 	andcs	r3, r0, ip, ror #17

0800ef98 <rfc3927>:
 800ef98:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ef9c:	4606      	mov	r6, r0
 800ef9e:	25ff      	movs	r5, #255	; 0xff
 800efa0:	4b18      	ldr	r3, [pc, #96]	; (800f004 <rfc3927+0x6c>)
 800efa2:	4f19      	ldr	r7, [pc, #100]	; (800f008 <rfc3927+0x70>)
 800efa4:	791a      	ldrb	r2, [r3, #4]
 800efa6:	78dc      	ldrb	r4, [r3, #3]
 800efa8:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800f00c <rfc3927+0x74>
 800efac:	eb04 2402 	add.w	r4, r4, r2, lsl #8
 800efb0:	f8d7 9000 	ldr.w	r9, [r7]
 800efb4:	f8df b058 	ldr.w	fp, [pc, #88]	; 800f010 <rfc3927+0x78>
 800efb8:	f8df a058 	ldr.w	sl, [pc, #88]	; 800f014 <rfc3927+0x7c>
 800efbc:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
 800efc0:	4659      	mov	r1, fp
 800efc2:	4620      	mov	r0, r4
 800efc4:	f001 fcda 	bl	801097c <arp_cache_lookup>
 800efc8:	b190      	cbz	r0, 800eff0 <rfc3927+0x58>
 800efca:	ba24      	rev	r4, r4
 800efcc:	3401      	adds	r4, #1
 800efce:	3d01      	subs	r5, #1
 800efd0:	ba24      	rev	r4, r4
 800efd2:	b2ad      	uxth	r5, r5
 800efd4:	4554      	cmp	r4, sl
 800efd6:	bf08      	it	eq
 800efd8:	4644      	moveq	r4, r8
 800efda:	b18d      	cbz	r5, 800f000 <rfc3927+0x68>
 800efdc:	683b      	ldr	r3, [r7, #0]
 800efde:	eba3 0309 	sub.w	r3, r3, r9
 800efe2:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800efe6:	d3eb      	bcc.n	800efc0 <rfc3927+0x28>
 800efe8:	2400      	movs	r4, #0
 800efea:	4623      	mov	r3, r4
 800efec:	4620      	mov	r0, r4
 800efee:	e002      	b.n	800eff6 <rfc3927+0x5e>
 800eff0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800eff4:	2001      	movs	r0, #1
 800eff6:	e9c6 3401 	strd	r3, r4, [r6, #4]
 800effa:	6034      	str	r4, [r6, #0]
 800effc:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f000:	462c      	mov	r4, r5
 800f002:	e7f2      	b.n	800efea <rfc3927+0x52>
 800f004:	200038f0 	strdcs	r3, [r0], -r0
 800f008:	2000b87c 	andcs	fp, r0, ip, ror r8
 800f00c:	0100fea9 	smlatbeq	r0, r9, lr, pc	; <UNPREDICTABLE>
 800f010:	200038f8 	strdcs	r3, [r0], -r8
 800f014:	fffefea9 			; <UNDEFINED> instruction: 0xfffefea9

0800f018 <_init_tcb>:
 800f018:	b510      	push	{r4, lr}
 800f01a:	4603      	mov	r3, r0
 800f01c:	2400      	movs	r4, #0
 800f01e:	f100 0244 	add.w	r2, r0, #68	; 0x44
 800f022:	4293      	cmp	r3, r2
 800f024:	d10d      	bne.n	800f042 <_init_tcb+0x2a>
 800f026:	4b08      	ldr	r3, [pc, #32]	; (800f048 <_init_tcb+0x30>)
 800f028:	f640 3268 	movw	r2, #2920	; 0xb68
 800f02c:	681b      	ldr	r3, [r3, #0]
 800f02e:	8702      	strh	r2, [r0, #56]	; 0x38
 800f030:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800f034:	6283      	str	r3, [r0, #40]	; 0x28
 800f036:	6243      	str	r3, [r0, #36]	; 0x24
 800f038:	2301      	movs	r3, #1
 800f03a:	8001      	strh	r1, [r0, #0]
 800f03c:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
 800f040:	bd10      	pop	{r4, pc}
 800f042:	f803 4b01 	strb.w	r4, [r3], #1
 800f046:	e7ec      	b.n	800f022 <_init_tcb+0xa>
 800f048:	2000b87c 	andcs	fp, r0, ip, ror r8

0800f04c <memcpy.isra.0>:
 800f04c:	3801      	subs	r0, #1
 800f04e:	440a      	add	r2, r1
 800f050:	4291      	cmp	r1, r2
 800f052:	d100      	bne.n	800f056 <memcpy.isra.0+0xa>
 800f054:	4770      	bx	lr
 800f056:	f811 3b01 	ldrb.w	r3, [r1], #1
 800f05a:	f800 3f01 	strb.w	r3, [r0, #1]!
 800f05e:	e7f7      	b.n	800f050 <memcpy.isra.0+0x4>

0800f060 <_bswap32>:
 800f060:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f062:	2204      	movs	r2, #4
 800f064:	f100 052a 	add.w	r5, r0, #42	; 0x2a
 800f068:	4629      	mov	r1, r5
 800f06a:	4604      	mov	r4, r0
 800f06c:	eb0d 0002 	add.w	r0, sp, r2
 800f070:	f7ff ffec 	bl	800f04c <memcpy.isra.0>
 800f074:	2204      	movs	r2, #4
 800f076:	9b01      	ldr	r3, [sp, #4]
 800f078:	eb0d 0102 	add.w	r1, sp, r2
 800f07c:	ba1b      	rev	r3, r3
 800f07e:	4628      	mov	r0, r5
 800f080:	9301      	str	r3, [sp, #4]
 800f082:	f7ff ffe3 	bl	800f04c <memcpy.isra.0>
 800f086:	2204      	movs	r2, #4
 800f088:	3426      	adds	r4, #38	; 0x26
 800f08a:	eb0d 0002 	add.w	r0, sp, r2
 800f08e:	4621      	mov	r1, r4
 800f090:	f7ff ffdc 	bl	800f04c <memcpy.isra.0>
 800f094:	2204      	movs	r2, #4
 800f096:	9b01      	ldr	r3, [sp, #4]
 800f098:	4620      	mov	r0, r4
 800f09a:	ba1b      	rev	r3, r3
 800f09c:	eb0d 0102 	add.w	r1, sp, r2
 800f0a0:	9301      	str	r3, [sp, #4]
 800f0a2:	f7ff ffd3 	bl	800f04c <memcpy.isra.0>
 800f0a6:	b003      	add	sp, #12
 800f0a8:	bd30      	pop	{r4, r5, pc}
	...

0800f0ac <_tcp_send_package>:
 800f0ac:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800f0b0:	7a0b      	ldrb	r3, [r1, #8]
 800f0b2:	4605      	mov	r5, r0
 800f0b4:	f013 0f02 	tst.w	r3, #2
 800f0b8:	bf0c      	ite	eq
 800f0ba:	f04f 0805 	moveq.w	r8, #5
 800f0be:	f04f 0806 	movne.w	r8, #6
 800f0c2:	f04f 0a00 	mov.w	sl, #0
 800f0c6:	4c47      	ldr	r4, [pc, #284]	; (800f1e4 <_tcp_send_package+0x138>)
 800f0c8:	460f      	mov	r7, r1
 800f0ca:	8e06      	ldrh	r6, [r0, #48]	; 0x30
 800f0cc:	f100 0108 	add.w	r1, r0, #8
 800f0d0:	2206      	movs	r2, #6
 800f0d2:	4620      	mov	r0, r4
 800f0d4:	f7ff ffba 	bl	800f04c <memcpy.isra.0>
 800f0d8:	4a43      	ldr	r2, [pc, #268]	; (800f1e8 <_tcp_send_package+0x13c>)
 800f0da:	eb06 0688 	add.w	r6, r6, r8, lsl #2
 800f0de:	8813      	ldrh	r3, [r2, #0]
 800f0e0:	b2b6      	uxth	r6, r6
 800f0e2:	1c59      	adds	r1, r3, #1
 800f0e4:	8263      	strh	r3, [r4, #18]
 800f0e6:	f105 0904 	add.w	r9, r5, #4
 800f0ea:	f106 0314 	add.w	r3, r6, #20
 800f0ee:	ba5b      	rev16	r3, r3
 800f0f0:	8011      	strh	r1, [r2, #0]
 800f0f2:	f104 001e 	add.w	r0, r4, #30
 800f0f6:	2204      	movs	r2, #4
 800f0f8:	4649      	mov	r1, r9
 800f0fa:	8223      	strh	r3, [r4, #16]
 800f0fc:	f7ff ffa6 	bl	800f04c <memcpy.isra.0>
 800f100:	2114      	movs	r1, #20
 800f102:	f104 000e 	add.w	r0, r4, #14
 800f106:	f8a4 a018 	strh.w	sl, [r4, #24]
 800f10a:	f001 ff6c 	bl	8010fe6 <net_chksum>
 800f10e:	882b      	ldrh	r3, [r5, #0]
 800f110:	ea4f 1808 	mov.w	r8, r8, lsl #4
 800f114:	8463      	strh	r3, [r4, #34]	; 0x22
 800f116:	886b      	ldrh	r3, [r5, #2]
 800f118:	8320      	strh	r0, [r4, #24]
 800f11a:	84a3      	strh	r3, [r4, #36]	; 0x24
 800f11c:	683b      	ldr	r3, [r7, #0]
 800f11e:	8f2a      	ldrh	r2, [r5, #56]	; 0x38
 800f120:	f8c4 3026 	str.w	r3, [r4, #38]	; 0x26
 800f124:	687b      	ldr	r3, [r7, #4]
 800f126:	f884 802e 	strb.w	r8, [r4, #46]	; 0x2e
 800f12a:	f8c4 302a 	str.w	r3, [r4, #42]	; 0x2a
 800f12e:	7a3b      	ldrb	r3, [r7, #8]
 800f130:	8622      	strh	r2, [r4, #48]	; 0x30
 800f132:	f884 302f 	strb.w	r3, [r4, #47]	; 0x2f
 800f136:	079b      	lsls	r3, r3, #30
 800f138:	bf48      	it	mi
 800f13a:	f240 4302 	movwmi	r3, #1026	; 0x402
 800f13e:	8baa      	ldrh	r2, [r5, #28]
 800f140:	bf48      	it	mi
 800f142:	86e3      	strhmi	r3, [r4, #54]	; 0x36
 800f144:	86a2      	strh	r2, [r4, #52]	; 0x34
 800f146:	bf42      	ittt	mi
 800f148:	f24b 4305 	movwmi	r3, #46085	; 0xb405
 800f14c:	4622      	movmi	r2, r4
 800f14e:	f822 3f38 	strhmi.w	r3, [r2, #56]!
 800f152:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800f154:	f8a4 a032 	strh.w	sl, [r4, #50]	; 0x32
 800f158:	bf58      	it	pl
 800f15a:	f104 0236 	addpl.w	r2, r4, #54	; 0x36
 800f15e:	2b00      	cmp	r3, #0
 800f160:	d13e      	bne.n	800f1e0 <_tcp_send_package+0x134>
 800f162:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 800f164:	481f      	ldr	r0, [pc, #124]	; (800f1e4 <_tcp_send_package+0x138>)
 800f166:	ba5b      	rev16	r3, r3
 800f168:	8463      	strh	r3, [r4, #34]	; 0x22
 800f16a:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 800f16c:	ba5b      	rev16	r3, r3
 800f16e:	84a3      	strh	r3, [r4, #36]	; 0x24
 800f170:	f7ff ff76 	bl	800f060 <_bswap32>
 800f174:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800f176:	a801      	add	r0, sp, #4
 800f178:	ba5b      	rev16	r3, r3
 800f17a:	8623      	strh	r3, [r4, #48]	; 0x30
 800f17c:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800f17e:	220c      	movs	r2, #12
 800f180:	ba5b      	rev16	r3, r3
 800f182:	491a      	ldr	r1, [pc, #104]	; (800f1ec <_tcp_send_package+0x140>)
 800f184:	86a3      	strh	r3, [r4, #52]	; 0x34
 800f186:	f7ff ff61 	bl	800f04c <memcpy.isra.0>
 800f18a:	2204      	movs	r2, #4
 800f18c:	4918      	ldr	r1, [pc, #96]	; (800f1f0 <_tcp_send_package+0x144>)
 800f18e:	4817      	ldr	r0, [pc, #92]	; (800f1ec <_tcp_send_package+0x140>)
 800f190:	f7ff ff5c 	bl	800f04c <memcpy.isra.0>
 800f194:	2204      	movs	r2, #4
 800f196:	4649      	mov	r1, r9
 800f198:	4816      	ldr	r0, [pc, #88]	; (800f1f4 <_tcp_send_package+0x148>)
 800f19a:	f7ff ff57 	bl	800f04c <memcpy.isra.0>
 800f19e:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 800f1a2:	f106 010c 	add.w	r1, r6, #12
 800f1a6:	83e3      	strh	r3, [r4, #30]
 800f1a8:	4810      	ldr	r0, [pc, #64]	; (800f1ec <_tcp_send_package+0x140>)
 800f1aa:	ba73      	rev16	r3, r6
 800f1ac:	8423      	strh	r3, [r4, #32]
 800f1ae:	f001 ff1a 	bl	8010fe6 <net_chksum>
 800f1b2:	a901      	add	r1, sp, #4
 800f1b4:	4605      	mov	r5, r0
 800f1b6:	220c      	movs	r2, #12
 800f1b8:	480c      	ldr	r0, [pc, #48]	; (800f1ec <_tcp_send_package+0x140>)
 800f1ba:	f7ff ff47 	bl	800f04c <memcpy.isra.0>
 800f1be:	4809      	ldr	r0, [pc, #36]	; (800f1e4 <_tcp_send_package+0x138>)
 800f1c0:	f106 0122 	add.w	r1, r6, #34	; 0x22
 800f1c4:	8665      	strh	r5, [r4, #50]	; 0x32
 800f1c6:	b004      	add	sp, #16
 800f1c8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f1cc:	f004 b9e8 	b.w	80135a0 <emac_eth_send>
 800f1d0:	6ae9      	ldr	r1, [r5, #44]	; 0x2c
 800f1d2:	5cc9      	ldrb	r1, [r1, r3]
 800f1d4:	54d1      	strb	r1, [r2, r3]
 800f1d6:	3301      	adds	r3, #1
 800f1d8:	8e29      	ldrh	r1, [r5, #48]	; 0x30
 800f1da:	4299      	cmp	r1, r3
 800f1dc:	d8f8      	bhi.n	800f1d0 <_tcp_send_package+0x124>
 800f1de:	e7c0      	b.n	800f162 <_tcp_send_package+0xb6>
 800f1e0:	2300      	movs	r3, #0
 800f1e2:	e7f9      	b.n	800f1d8 <_tcp_send_package+0x12c>
 800f1e4:	200044b8 			; <UNDEFINED> instruction: 0x200044b8
 800f1e8:	20003900 	andcs	r3, r0, r0, lsl #18
 800f1ec:	200044ce 	andcs	r4, r0, lr, asr #9
 800f1f0:	200038d4 	ldrdcs	r3, [r0], -r4
 800f1f4:	200044d2 	ldrdcs	r4, [r0], -r2

0800f1f8 <_send_reset>:
 800f1f8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800f1fa:	f890 302f 	ldrb.w	r3, [r0, #47]	; 0x2f
 800f1fe:	4604      	mov	r4, r0
 800f200:	075a      	lsls	r2, r3, #29
 800f202:	460e      	mov	r6, r1
 800f204:	d421      	bmi.n	800f24a <_send_reset+0x52>
 800f206:	2204      	movs	r2, #4
 800f208:	f013 0310 	ands.w	r3, r3, #16
 800f20c:	f88d 200c 	strb.w	r2, [sp, #12]
 800f210:	d01d      	beq.n	800f24e <_send_reset+0x56>
 800f212:	f100 012a 	add.w	r1, r0, #42	; 0x2a
 800f216:	4668      	mov	r0, sp
 800f218:	f7ff ff18 	bl	800f04c <memcpy.isra.0>
 800f21c:	9b00      	ldr	r3, [sp, #0]
 800f21e:	9301      	str	r3, [sp, #4]
 800f220:	f894 302f 	ldrb.w	r3, [r4, #47]	; 0x2f
 800f224:	4668      	mov	r0, sp
 800f226:	f3c3 0540 	ubfx	r5, r3, #1, #1
 800f22a:	f104 0126 	add.w	r1, r4, #38	; 0x26
 800f22e:	07db      	lsls	r3, r3, #31
 800f230:	f04f 0204 	mov.w	r2, #4
 800f234:	bf48      	it	mi
 800f236:	3501      	addmi	r5, #1
 800f238:	f7ff ff08 	bl	800f04c <memcpy.isra.0>
 800f23c:	9b00      	ldr	r3, [sp, #0]
 800f23e:	4630      	mov	r0, r6
 800f240:	441d      	add	r5, r3
 800f242:	a901      	add	r1, sp, #4
 800f244:	9502      	str	r5, [sp, #8]
 800f246:	f7ff ff31 	bl	800f0ac <_tcp_send_package>
 800f24a:	b004      	add	sp, #16
 800f24c:	bd70      	pop	{r4, r5, r6, pc}
 800f24e:	9301      	str	r3, [sp, #4]
 800f250:	2314      	movs	r3, #20
 800f252:	f88d 300c 	strb.w	r3, [sp, #12]
 800f256:	e7e3      	b.n	800f220 <_send_reset+0x28>

0800f258 <tcp_begin>:
 800f258:	b508      	push	{r3, lr}
 800f25a:	4b0a      	ldr	r3, [pc, #40]	; (800f284 <tcp_begin+0x2c>)
 800f25c:	4601      	mov	r1, r0
 800f25e:	881a      	ldrh	r2, [r3, #0]
 800f260:	4282      	cmp	r2, r0
 800f262:	d102      	bne.n	800f26a <tcp_begin+0x12>
 800f264:	f893 0040 	ldrb.w	r0, [r3, #64]	; 0x40
 800f268:	b130      	cbz	r0, 800f278 <tcp_begin+0x20>
 800f26a:	b12a      	cbz	r2, 800f278 <tcp_begin+0x20>
 800f26c:	4806      	ldr	r0, [pc, #24]	; (800f288 <tcp_begin+0x30>)
 800f26e:	f002 ffcb 	bl	8012208 <console_error>
 800f272:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800f276:	bd08      	pop	{r3, pc}
 800f278:	4802      	ldr	r0, [pc, #8]	; (800f284 <tcp_begin+0x2c>)
 800f27a:	8019      	strh	r1, [r3, #0]
 800f27c:	f7ff fecc 	bl	800f018 <_init_tcb>
 800f280:	2000      	movs	r0, #0
 800f282:	e7f8      	b.n	800f276 <tcp_begin+0x1e>
 800f284:	20004474 	andcs	r4, r0, r4, ror r4
 800f288:	0801638a 	stmdaeq	r1, {r1, r3, r7, r8, r9, sp, lr}

0800f28c <tcp_write>:
 800f28c:	f240 53b4 	movw	r3, #1460	; 0x5b4
 800f290:	429a      	cmp	r2, r3
 800f292:	bf28      	it	cs
 800f294:	461a      	movcs	r2, r3
 800f296:	2344      	movs	r3, #68	; 0x44
 800f298:	b530      	push	{r4, r5, lr}
 800f29a:	4c0d      	ldr	r4, [pc, #52]	; (800f2d0 <tcp_write+0x44>)
 800f29c:	b085      	sub	sp, #20
 800f29e:	fb03 4400 	mla	r4, r3, r0, r4
 800f2a2:	6963      	ldr	r3, [r4, #20]
 800f2a4:	62e1      	str	r1, [r4, #44]	; 0x2c
 800f2a6:	9301      	str	r3, [sp, #4]
 800f2a8:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800f2aa:	4620      	mov	r0, r4
 800f2ac:	9302      	str	r3, [sp, #8]
 800f2ae:	2318      	movs	r3, #24
 800f2b0:	8622      	strh	r2, [r4, #48]	; 0x30
 800f2b2:	a901      	add	r1, sp, #4
 800f2b4:	4615      	mov	r5, r2
 800f2b6:	f88d 300c 	strb.w	r3, [sp, #12]
 800f2ba:	f7ff fef7 	bl	800f0ac <_tcp_send_package>
 800f2be:	2300      	movs	r3, #0
 800f2c0:	62e3      	str	r3, [r4, #44]	; 0x2c
 800f2c2:	8623      	strh	r3, [r4, #48]	; 0x30
 800f2c4:	6963      	ldr	r3, [r4, #20]
 800f2c6:	442b      	add	r3, r5
 800f2c8:	6163      	str	r3, [r4, #20]
 800f2ca:	b005      	add	sp, #20
 800f2cc:	bd30      	pop	{r4, r5, pc}
 800f2ce:	bf00      	nop
 800f2d0:	20004474 	andcs	r4, r0, r4, ror r4

0800f2d4 <tcp_read>:
 800f2d4:	2344      	movs	r3, #68	; 0x44
 800f2d6:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f2d8:	4c1c      	ldr	r4, [pc, #112]	; (800f34c <tcp_read+0x78>)
 800f2da:	b085      	sub	sp, #20
 800f2dc:	fb03 4400 	mla	r4, r3, r0, r4
 800f2e0:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800f2e4:	2b07      	cmp	r3, #7
 800f2e6:	d112      	bne.n	800f30e <tcp_read+0x3a>
 800f2e8:	6963      	ldr	r3, [r4, #20]
 800f2ea:	4620      	mov	r0, r4
 800f2ec:	9301      	str	r3, [sp, #4]
 800f2ee:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800f2f0:	a901      	add	r1, sp, #4
 800f2f2:	9302      	str	r3, [sp, #8]
 800f2f4:	2311      	movs	r3, #17
 800f2f6:	f88d 300c 	strb.w	r3, [sp, #12]
 800f2fa:	f7ff fed7 	bl	800f0ac <_tcp_send_package>
 800f2fe:	2309      	movs	r3, #9
 800f300:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800f304:	6963      	ldr	r3, [r4, #20]
 800f306:	3301      	adds	r3, #1
 800f308:	6163      	str	r3, [r4, #20]
 800f30a:	2000      	movs	r0, #0
 800f30c:	e01b      	b.n	800f346 <tcp_read+0x72>
 800f30e:	f44f 6337 	mov.w	r3, #2928	; 0xb70
 800f312:	4358      	muls	r0, r3
 800f314:	4a0e      	ldr	r2, [pc, #56]	; (800f350 <tcp_read+0x7c>)
 800f316:	1817      	adds	r7, r2, r0
 800f318:	887b      	ldrh	r3, [r7, #2]
 800f31a:	5a15      	ldrh	r5, [r2, r0]
 800f31c:	429d      	cmp	r5, r3
 800f31e:	d0f4      	beq.n	800f30a <tcp_read+0x36>
 800f320:	f240 55b6 	movw	r5, #1462	; 0x5b6
 800f324:	435d      	muls	r5, r3
 800f326:	1d06      	adds	r6, r0, #4
 800f328:	442e      	add	r6, r5
 800f32a:	4416      	add	r6, r2
 800f32c:	4405      	add	r5, r0
 800f32e:	600e      	str	r6, [r1, #0]
 800f330:	442a      	add	r2, r5
 800f332:	f8b2 05b8 	ldrh.w	r0, [r2, #1464]	; 0x5b8
 800f336:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 800f338:	3301      	adds	r3, #1
 800f33a:	f202 52b4 	addw	r2, r2, #1460	; 0x5b4
 800f33e:	f003 0301 	and.w	r3, r3, #1
 800f342:	8722      	strh	r2, [r4, #56]	; 0x38
 800f344:	807b      	strh	r3, [r7, #2]
 800f346:	b005      	add	sp, #20
 800f348:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f34a:	bf00      	nop
 800f34c:	20004474 	andcs	r4, r0, r4, ror r4
 800f350:	20003904 	andcs	r3, r0, r4, lsl #18

0800f354 <memcpy.isra.0>:
 800f354:	3801      	subs	r0, #1
 800f356:	440a      	add	r2, r1
 800f358:	4291      	cmp	r1, r2
 800f35a:	d100      	bne.n	800f35e <memcpy.isra.0+0xa>
 800f35c:	4770      	bx	lr
 800f35e:	f811 3b01 	ldrb.w	r3, [r1], #1
 800f362:	f800 3f01 	strb.w	r3, [r0, #1]!
 800f366:	e7f7      	b.n	800f358 <memcpy.isra.0+0x4>

0800f368 <net_memcpy>:
 800f368:	ea40 0301 	orr.w	r3, r0, r1
 800f36c:	079b      	lsls	r3, r3, #30
 800f36e:	b570      	push	{r4, r5, r6, lr}
 800f370:	d108      	bne.n	800f384 <net_memcpy+0x1c>
 800f372:	f022 0303 	bic.w	r3, r2, #3
 800f376:	1f04      	subs	r4, r0, #4
 800f378:	18cd      	adds	r5, r1, r3
 800f37a:	42a9      	cmp	r1, r5
 800f37c:	d108      	bne.n	800f390 <net_memcpy+0x28>
 800f37e:	1ad2      	subs	r2, r2, r3
 800f380:	4403      	add	r3, r0
 800f382:	e000      	b.n	800f386 <net_memcpy+0x1e>
 800f384:	4603      	mov	r3, r0
 800f386:	3b01      	subs	r3, #1
 800f388:	440a      	add	r2, r1
 800f38a:	4291      	cmp	r1, r2
 800f38c:	d105      	bne.n	800f39a <net_memcpy+0x32>
 800f38e:	bd70      	pop	{r4, r5, r6, pc}
 800f390:	f851 6b04 	ldr.w	r6, [r1], #4
 800f394:	f844 6f04 	str.w	r6, [r4, #4]!
 800f398:	e7ef      	b.n	800f37a <net_memcpy+0x12>
 800f39a:	f811 4b01 	ldrb.w	r4, [r1], #1
 800f39e:	f803 4f01 	strb.w	r4, [r3, #1]!
 800f3a2:	e7f2      	b.n	800f38a <net_memcpy+0x22>

0800f3a4 <udp_set_ip>:
 800f3a4:	2204      	movs	r2, #4
 800f3a6:	b513      	push	{r0, r1, r4, lr}
 800f3a8:	4604      	mov	r4, r0
 800f3aa:	6803      	ldr	r3, [r0, #0]
 800f3ac:	eb0d 0102 	add.w	r1, sp, r2
 800f3b0:	4808      	ldr	r0, [pc, #32]	; (800f3d4 <udp_set_ip+0x30>)
 800f3b2:	9301      	str	r3, [sp, #4]
 800f3b4:	f7ff ffce 	bl	800f354 <memcpy.isra.0>
 800f3b8:	6862      	ldr	r2, [r4, #4]
 800f3ba:	4b07      	ldr	r3, [pc, #28]	; (800f3d8 <udp_set_ip+0x34>)
 800f3bc:	43d1      	mvns	r1, r2
 800f3be:	6019      	str	r1, [r3, #0]
 800f3c0:	6823      	ldr	r3, [r4, #0]
 800f3c2:	4013      	ands	r3, r2
 800f3c4:	4a05      	ldr	r2, [pc, #20]	; (800f3dc <udp_set_ip+0x38>)
 800f3c6:	6013      	str	r3, [r2, #0]
 800f3c8:	68a2      	ldr	r2, [r4, #8]
 800f3ca:	4b05      	ldr	r3, [pc, #20]	; (800f3e0 <udp_set_ip+0x3c>)
 800f3cc:	601a      	str	r2, [r3, #0]
 800f3ce:	b002      	add	sp, #8
 800f3d0:	bd10      	pop	{r4, pc}
 800f3d2:	bf00      	nop
 800f3d4:	2000a78e 	andcs	sl, r0, lr, lsl #15
 800f3d8:	20004aa4 	andcs	r4, r0, r4, lsr #21
 800f3dc:	20004aac 	andcs	r4, r0, ip, lsr #21
 800f3e0:	20004aa8 	andcs	r4, r0, r8, lsr #21

0800f3e4 <udp_bind>:
 800f3e4:	4a0a      	ldr	r2, [pc, #40]	; (800f410 <udp_bind+0x2c>)
 800f3e6:	4603      	mov	r3, r0
 800f3e8:	b510      	push	{r4, lr}
 800f3ea:	2000      	movs	r0, #0
 800f3ec:	4614      	mov	r4, r2
 800f3ee:	f852 1b04 	ldr.w	r1, [r2], #4
 800f3f2:	4299      	cmp	r1, r3
 800f3f4:	d008      	beq.n	800f408 <udp_bind+0x24>
 800f3f6:	b141      	cbz	r1, 800f40a <udp_bind+0x26>
 800f3f8:	3001      	adds	r0, #1
 800f3fa:	2808      	cmp	r0, #8
 800f3fc:	d1f7      	bne.n	800f3ee <udp_bind+0xa>
 800f3fe:	4805      	ldr	r0, [pc, #20]	; (800f414 <udp_bind+0x30>)
 800f400:	f002 ff02 	bl	8012208 <console_error>
 800f404:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800f408:	bd10      	pop	{r4, pc}
 800f40a:	f844 3020 	str.w	r3, [r4, r0, lsl #2]
 800f40e:	e7fb      	b.n	800f408 <udp_bind+0x24>
 800f410:	20004ab4 			; <UNDEFINED> instruction: 0x20004ab4
 800f414:	080163aa 	stmdaeq	r1, {r1, r3, r5, r7, r8, r9, sp, lr}

0800f418 <udp_unbind>:
 800f418:	4a0c      	ldr	r2, [pc, #48]	; (800f44c <udp_unbind+0x34>)
 800f41a:	2300      	movs	r3, #0
 800f41c:	4611      	mov	r1, r2
 800f41e:	b510      	push	{r4, lr}
 800f420:	f852 4b04 	ldr.w	r4, [r2], #4
 800f424:	4284      	cmp	r4, r0
 800f426:	d108      	bne.n	800f43a <udp_unbind+0x22>
 800f428:	2000      	movs	r0, #0
 800f42a:	f640 3294 	movw	r2, #2964	; 0xb94
 800f42e:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 800f432:	4353      	muls	r3, r2
 800f434:	4a06      	ldr	r2, [pc, #24]	; (800f450 <udp_unbind+0x38>)
 800f436:	50d0      	str	r0, [r2, r3]
 800f438:	bd10      	pop	{r4, pc}
 800f43a:	3301      	adds	r3, #1
 800f43c:	2b08      	cmp	r3, #8
 800f43e:	d1ef      	bne.n	800f420 <udp_unbind+0x8>
 800f440:	4804      	ldr	r0, [pc, #16]	; (800f454 <udp_unbind+0x3c>)
 800f442:	f002 fee1 	bl	8012208 <console_error>
 800f446:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800f44a:	e7f5      	b.n	800f438 <udp_unbind+0x20>
 800f44c:	20004ab4 			; <UNDEFINED> instruction: 0x20004ab4
 800f450:	20004ad4 	ldrdcs	r4, [r0], -r4	; <UNPREDICTABLE>
 800f454:	080163af 	stmdaeq	r1, {r0, r1, r2, r3, r5, r7, r8, r9, sp, lr}

0800f458 <udp_recv>:
 800f458:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f45c:	4604      	mov	r4, r0
 800f45e:	4698      	mov	r8, r3
 800f460:	f640 3394 	movw	r3, #2964	; 0xb94
 800f464:	435c      	muls	r4, r3
 800f466:	4608      	mov	r0, r1
 800f468:	4915      	ldr	r1, [pc, #84]	; (800f4c0 <udp_recv+0x68>)
 800f46a:	190f      	adds	r7, r1, r4
 800f46c:	f8b7 c002 	ldrh.w	ip, [r7, #2]
 800f470:	5b0b      	ldrh	r3, [r1, r4]
 800f472:	4563      	cmp	r3, ip
 800f474:	d021      	beq.n	800f4ba <udp_recv+0x62>
 800f476:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 800f47a:	fb03 fc0c 	mul.w	ip, r3, ip
 800f47e:	eb0c 0604 	add.w	r6, ip, r4
 800f482:	440e      	add	r6, r1
 800f484:	f8b6 55ca 	ldrh.w	r5, [r6, #1482]	; 0x5ca
 800f488:	3404      	adds	r4, #4
 800f48a:	4295      	cmp	r5, r2
 800f48c:	bf28      	it	cs
 800f48e:	4615      	movcs	r5, r2
 800f490:	4464      	add	r4, ip
 800f492:	462a      	mov	r2, r5
 800f494:	4421      	add	r1, r4
 800f496:	f7ff ff67 	bl	800f368 <net_memcpy>
 800f49a:	f8d6 35c4 	ldr.w	r3, [r6, #1476]	; 0x5c4
 800f49e:	f8c8 3000 	str.w	r3, [r8]
 800f4a2:	f8b6 25c8 	ldrh.w	r2, [r6, #1480]	; 0x5c8
 800f4a6:	9b06      	ldr	r3, [sp, #24]
 800f4a8:	801a      	strh	r2, [r3, #0]
 800f4aa:	887b      	ldrh	r3, [r7, #2]
 800f4ac:	3301      	adds	r3, #1
 800f4ae:	f003 0301 	and.w	r3, r3, #1
 800f4b2:	807b      	strh	r3, [r7, #2]
 800f4b4:	4628      	mov	r0, r5
 800f4b6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f4ba:	2500      	movs	r5, #0
 800f4bc:	e7fa      	b.n	800f4b4 <udp_recv+0x5c>
 800f4be:	bf00      	nop
 800f4c0:	20004ad4 	ldrdcs	r4, [r0], -r4	; <UNPREDICTABLE>

0800f4c4 <udp_recv2>:
 800f4c4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f4c6:	f640 3594 	movw	r5, #2964	; 0xb94
 800f4ca:	4368      	muls	r0, r5
 800f4cc:	4c0f      	ldr	r4, [pc, #60]	; (800f50c <udp_recv2+0x48>)
 800f4ce:	1827      	adds	r7, r4, r0
 800f4d0:	887d      	ldrh	r5, [r7, #2]
 800f4d2:	5a26      	ldrh	r6, [r4, r0]
 800f4d4:	42ae      	cmp	r6, r5
 800f4d6:	d017      	beq.n	800f508 <udp_recv2+0x44>
 800f4d8:	f44f 6cb9 	mov.w	ip, #1480	; 0x5c8
 800f4dc:	fb0c f505 	mul.w	r5, ip, r5
 800f4e0:	1d06      	adds	r6, r0, #4
 800f4e2:	442e      	add	r6, r5
 800f4e4:	4405      	add	r5, r0
 800f4e6:	4426      	add	r6, r4
 800f4e8:	442c      	add	r4, r5
 800f4ea:	600e      	str	r6, [r1, #0]
 800f4ec:	f8d4 15c4 	ldr.w	r1, [r4, #1476]	; 0x5c4
 800f4f0:	6011      	str	r1, [r2, #0]
 800f4f2:	f8b4 25c8 	ldrh.w	r2, [r4, #1480]	; 0x5c8
 800f4f6:	801a      	strh	r2, [r3, #0]
 800f4f8:	887b      	ldrh	r3, [r7, #2]
 800f4fa:	f8b4 05ca 	ldrh.w	r0, [r4, #1482]	; 0x5ca
 800f4fe:	3301      	adds	r3, #1
 800f500:	f003 0301 	and.w	r3, r3, #1
 800f504:	807b      	strh	r3, [r7, #2]
 800f506:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f508:	2000      	movs	r0, #0
 800f50a:	e7fc      	b.n	800f506 <udp_recv2+0x42>
 800f50c:	20004ad4 	ldrdcs	r4, [r0], -r4	; <UNPREDICTABLE>

0800f510 <udp_send>:
 800f510:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800f514:	f8df 9130 	ldr.w	r9, [pc, #304]	; 800f648 <udp_send+0x138>
 800f518:	461c      	mov	r4, r3
 800f51a:	f859 3020 	ldr.w	r3, [r9, r0, lsl #2]
 800f51e:	4607      	mov	r7, r0
 800f520:	4688      	mov	r8, r1
 800f522:	4616      	mov	r6, r2
 800f524:	2b00      	cmp	r3, #0
 800f526:	f000 808b 	beq.w	800f640 <udp_send+0x130>
 800f52a:	1c63      	adds	r3, r4, #1
 800f52c:	d141      	bne.n	800f5b2 <udp_send+0xa2>
 800f52e:	4a47      	ldr	r2, [pc, #284]	; (800f64c <udp_send+0x13c>)
 800f530:	2307      	movs	r3, #7
 800f532:	4611      	mov	r1, r2
 800f534:	20ff      	movs	r0, #255	; 0xff
 800f536:	e001      	b.n	800f53c <udp_send+0x2c>
 800f538:	f802 0b01 	strb.w	r0, [r2], #1
 800f53c:	3b01      	subs	r3, #1
 800f53e:	d1fb      	bne.n	800f538 <udp_send+0x28>
 800f540:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800f544:	83cb      	strh	r3, [r1, #30]
 800f546:	840b      	strh	r3, [r1, #32]
 800f548:	2500      	movs	r5, #0
 800f54a:	f8df a104 	ldr.w	sl, [pc, #260]	; 800f650 <udp_send+0x140>
 800f54e:	4c3f      	ldr	r4, [pc, #252]	; (800f64c <udp_send+0x13c>)
 800f550:	f8ba 3000 	ldrh.w	r3, [sl]
 800f554:	2114      	movs	r1, #20
 800f556:	8263      	strh	r3, [r4, #18]
 800f558:	f106 031c 	add.w	r3, r6, #28
 800f55c:	ba5b      	rev16	r3, r3
 800f55e:	f104 000e 	add.w	r0, r4, #14
 800f562:	8223      	strh	r3, [r4, #16]
 800f564:	8325      	strh	r5, [r4, #24]
 800f566:	f001 fd3e 	bl	8010fe6 <net_chksum>
 800f56a:	f859 3027 	ldr.w	r3, [r9, r7, lsl #2]
 800f56e:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 800f572:	ba5b      	rev16	r3, r3
 800f574:	8463      	strh	r3, [r4, #34]	; 0x22
 800f576:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800f57a:	4632      	mov	r2, r6
 800f57c:	ba5b      	rev16	r3, r3
 800f57e:	84a3      	strh	r3, [r4, #36]	; 0x24
 800f580:	f106 0308 	add.w	r3, r6, #8
 800f584:	ba5b      	rev16	r3, r3
 800f586:	bf28      	it	cs
 800f588:	f44f 62b8 	movcs.w	r2, #1472	; 0x5c0
 800f58c:	4641      	mov	r1, r8
 800f58e:	8320      	strh	r0, [r4, #24]
 800f590:	f104 002a 	add.w	r0, r4, #42	; 0x2a
 800f594:	84e3      	strh	r3, [r4, #38]	; 0x26
 800f596:	f7ff fee7 	bl	800f368 <net_memcpy>
 800f59a:	4620      	mov	r0, r4
 800f59c:	f106 012a 	add.w	r1, r6, #42	; 0x2a
 800f5a0:	f003 fffe 	bl	80135a0 <emac_eth_send>
 800f5a4:	f8ba 3000 	ldrh.w	r3, [sl]
 800f5a8:	4628      	mov	r0, r5
 800f5aa:	3301      	adds	r3, #1
 800f5ac:	f8aa 3000 	strh.w	r3, [sl]
 800f5b0:	e037      	b.n	800f622 <udp_send+0x112>
 800f5b2:	4b28      	ldr	r3, [pc, #160]	; (800f654 <udp_send+0x144>)
 800f5b4:	681b      	ldr	r3, [r3, #0]
 800f5b6:	43a3      	bics	r3, r4
 800f5b8:	d10f      	bne.n	800f5da <udp_send+0xca>
 800f5ba:	2307      	movs	r3, #7
 800f5bc:	21ff      	movs	r1, #255	; 0xff
 800f5be:	4a23      	ldr	r2, [pc, #140]	; (800f64c <udp_send+0x13c>)
 800f5c0:	e001      	b.n	800f5c6 <udp_send+0xb6>
 800f5c2:	f802 1b01 	strb.w	r1, [r2], #1
 800f5c6:	3b01      	subs	r3, #1
 800f5c8:	d1fb      	bne.n	800f5c2 <udp_send+0xb2>
 800f5ca:	2204      	movs	r2, #4
 800f5cc:	4822      	ldr	r0, [pc, #136]	; (800f658 <udp_send+0x148>)
 800f5ce:	eb0d 0102 	add.w	r1, sp, r2
 800f5d2:	9401      	str	r4, [sp, #4]
 800f5d4:	f7ff febe 	bl	800f354 <memcpy.isra.0>
 800f5d8:	e7b6      	b.n	800f548 <udp_send+0x38>
 800f5da:	f004 03e0 	and.w	r3, r4, #224	; 0xe0
 800f5de:	2be0      	cmp	r3, #224	; 0xe0
 800f5e0:	d10e      	bne.n	800f600 <udp_send+0xf0>
 800f5e2:	491e      	ldr	r1, [pc, #120]	; (800f65c <udp_send+0x14c>)
 800f5e4:	f3c4 2306 	ubfx	r3, r4, #8, #7
 800f5e8:	70cb      	strb	r3, [r1, #3]
 800f5ea:	f3c4 4307 	ubfx	r3, r4, #16, #8
 800f5ee:	710b      	strb	r3, [r1, #4]
 800f5f0:	f3c4 6307 	ubfx	r3, r4, #24, #8
 800f5f4:	2206      	movs	r2, #6
 800f5f6:	4815      	ldr	r0, [pc, #84]	; (800f64c <udp_send+0x13c>)
 800f5f8:	714b      	strb	r3, [r1, #5]
 800f5fa:	f7ff feab 	bl	800f354 <memcpy.isra.0>
 800f5fe:	e7e4      	b.n	800f5ca <udp_send+0xba>
 800f600:	4b17      	ldr	r3, [pc, #92]	; (800f660 <udp_send+0x150>)
 800f602:	681b      	ldr	r3, [r3, #0]
 800f604:	43a3      	bics	r3, r4
 800f606:	d00f      	beq.n	800f628 <udp_send+0x118>
 800f608:	4d16      	ldr	r5, [pc, #88]	; (800f664 <udp_send+0x154>)
 800f60a:	4910      	ldr	r1, [pc, #64]	; (800f64c <udp_send+0x13c>)
 800f60c:	6828      	ldr	r0, [r5, #0]
 800f60e:	f001 f9b5 	bl	801097c <arp_cache_lookup>
 800f612:	682b      	ldr	r3, [r5, #0]
 800f614:	4298      	cmp	r0, r3
 800f616:	d0d8      	beq.n	800f5ca <udp_send+0xba>
 800f618:	4813      	ldr	r0, [pc, #76]	; (800f668 <udp_send+0x158>)
 800f61a:	f002 fdf5 	bl	8012208 <console_error>
 800f61e:	f06f 0002 	mvn.w	r0, #2
 800f622:	b002      	add	sp, #8
 800f624:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f628:	4620      	mov	r0, r4
 800f62a:	4908      	ldr	r1, [pc, #32]	; (800f64c <udp_send+0x13c>)
 800f62c:	f001 f9a6 	bl	801097c <arp_cache_lookup>
 800f630:	42a0      	cmp	r0, r4
 800f632:	d0ca      	beq.n	800f5ca <udp_send+0xba>
 800f634:	480d      	ldr	r0, [pc, #52]	; (800f66c <udp_send+0x15c>)
 800f636:	f002 fde7 	bl	8012208 <console_error>
 800f63a:	f06f 0001 	mvn.w	r0, #1
 800f63e:	e7f0      	b.n	800f622 <udp_send+0x112>
 800f640:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800f644:	e7ed      	b.n	800f622 <udp_send+0x112>
 800f646:	bf00      	nop
 800f648:	20004ab4 			; <UNDEFINED> instruction: 0x20004ab4
 800f64c:	2000a774 	andcs	sl, r0, r4, ror r7
 800f650:	20004ab0 			; <UNDEFINED> instruction: 0x20004ab0
 800f654:	20004aa4 	andcs	r4, r0, r4, lsr #21
 800f658:	2000a792 	mulcs	r0, r2, r7
 800f65c:	20000014 	andcs	r0, r0, r4, lsl r0
 800f660:	20004aac 	andcs	r4, r0, ip, lsr #21
 800f664:	20004aa8 	andcs	r4, r0, r8, lsr #21
 800f668:	080163b7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r7, r8, r9, sp, lr}
 800f66c:	080163dd 	stmdaeq	r1, {r0, r2, r3, r4, r6, r7, r8, r9, sp, lr}

0800f670 <strlen>:
 800f670:	4603      	mov	r3, r0
 800f672:	461a      	mov	r2, r3
 800f674:	7811      	ldrb	r1, [r2, #0]
 800f676:	3301      	adds	r3, #1
 800f678:	2900      	cmp	r1, #0
 800f67a:	d1fa      	bne.n	800f672 <strlen+0x2>
 800f67c:	1a10      	subs	r0, r2, r0
 800f67e:	4770      	bx	lr

0800f680 <strcmp>:
 800f680:	1e43      	subs	r3, r0, #1
 800f682:	3901      	subs	r1, #1
 800f684:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800f688:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800f68c:	4290      	cmp	r0, r2
 800f68e:	d001      	beq.n	800f694 <strcmp+0x14>
 800f690:	1a80      	subs	r0, r0, r2
 800f692:	e001      	b.n	800f698 <strcmp+0x18>
 800f694:	2800      	cmp	r0, #0
 800f696:	d1f5      	bne.n	800f684 <strcmp+0x4>
 800f698:	4770      	bx	lr

0800f69a <strcpy.isra.0>:
 800f69a:	3801      	subs	r0, #1
 800f69c:	f811 3b01 	ldrb.w	r3, [r1], #1
 800f6a0:	f800 3f01 	strb.w	r3, [r0, #1]!
 800f6a4:	2b00      	cmp	r3, #0
 800f6a6:	d1f9      	bne.n	800f69c <strcpy.isra.0+0x2>
 800f6a8:	4770      	bx	lr

0800f6aa <strcat.isra.0>:
 800f6aa:	b538      	push	{r3, r4, r5, lr}
 800f6ac:	4604      	mov	r4, r0
 800f6ae:	460d      	mov	r5, r1
 800f6b0:	f7ff ffde 	bl	800f670 <strlen>
 800f6b4:	4629      	mov	r1, r5
 800f6b6:	4420      	add	r0, r4
 800f6b8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800f6bc:	f7ff bfed 	b.w	800f69a <strcpy.isra.0>

0800f6c0 <MDNS::MDNS()>:
 800f6c0:	b513      	push	{r0, r1, r4, lr}
 800f6c2:	4604      	mov	r4, r0
 800f6c4:	a901      	add	r1, sp, #4
 800f6c6:	4804      	ldr	r0, [pc, #16]	; (800f6d8 <MDNS::MDNS()+0x18>)
 800f6c8:	f002 ff14 	bl	80124f4 <inet_aton>
 800f6cc:	4620      	mov	r0, r4
 800f6ce:	4b03      	ldr	r3, [pc, #12]	; (800f6dc <MDNS::MDNS()+0x1c>)
 800f6d0:	9a01      	ldr	r2, [sp, #4]
 800f6d2:	601a      	str	r2, [r3, #0]
 800f6d4:	b002      	add	sp, #8
 800f6d6:	bd10      	pop	{r4, pc}
 800f6d8:	0801640e 	stmdaeq	r1, {r1, r2, r3, sl, sp, lr}
 800f6dc:	2000ad68 	andcs	sl, r0, r8, ror #26

0800f6e0 <MDNS::SetName(char const*)>:
 800f6e0:	b538      	push	{r3, r4, r5, lr}
 800f6e2:	4d0b      	ldr	r5, [pc, #44]	; (800f710 <MDNS::SetName(char const*)+0x30>)
 800f6e4:	460c      	mov	r4, r1
 800f6e6:	6828      	ldr	r0, [r5, #0]
 800f6e8:	b108      	cbz	r0, 800f6ee <MDNS::SetName(char const*)+0xe>
 800f6ea:	f002 fefd 	bl	80124e8 <operator delete[](void*)>
 800f6ee:	4620      	mov	r0, r4
 800f6f0:	f7ff ffbe 	bl	800f670 <strlen>
 800f6f4:	3007      	adds	r0, #7
 800f6f6:	f002 fefb 	bl	80124f0 <operator new[](unsigned int)>
 800f6fa:	4621      	mov	r1, r4
 800f6fc:	6028      	str	r0, [r5, #0]
 800f6fe:	f7ff ffcc 	bl	800f69a <strcpy.isra.0>
 800f702:	6828      	ldr	r0, [r5, #0]
 800f704:	4903      	ldr	r1, [pc, #12]	; (800f714 <MDNS::SetName(char const*)+0x34>)
 800f706:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800f70a:	f7ff bfce 	b.w	800f6aa <strcat.isra.0>
 800f70e:	bf00      	nop
 800f710:	2000b198 	mulcs	r0, r8, r1
 800f714:	0801641e 	stmdaeq	r1, {r1, r2, r3, r4, sl, sp, lr}

0800f718 <MDNS::DecodeDNSNameNotation(char const*, char*)>:
 800f718:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f71c:	f04f 0e00 	mov.w	lr, #0
 800f720:	f04f 0c2e 	mov.w	ip, #46	; 0x2e
 800f724:	4675      	mov	r5, lr
 800f726:	4e1b      	ldr	r6, [pc, #108]	; (800f794 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x7c>)
 800f728:	4f1b      	ldr	r7, [pc, #108]	; (800f798 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x80>)
 800f72a:	780b      	ldrb	r3, [r1, #0]
 800f72c:	1c68      	adds	r0, r5, #1
 800f72e:	b913      	cbnz	r3, 800f736 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x1e>
 800f730:	7013      	strb	r3, [r2, #0]
 800f732:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f736:	2b3f      	cmp	r3, #63	; 0x3f
 800f738:	d91c      	bls.n	800f774 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x5c>
 800f73a:	7849      	ldrb	r1, [r1, #1]
 800f73c:	ea06 2303 	and.w	r3, r6, r3, lsl #8
 800f740:	430b      	orrs	r3, r1
 800f742:	6839      	ldr	r1, [r7, #0]
 800f744:	f1be 0f00 	cmp.w	lr, #0
 800f748:	bf08      	it	eq
 800f74a:	4605      	moveq	r5, r0
 800f74c:	5ccc      	ldrb	r4, [r1, r3]
 800f74e:	3301      	adds	r3, #1
 800f750:	4419      	add	r1, r3
 800f752:	2300      	movs	r3, #0
 800f754:	42a3      	cmp	r3, r4
 800f756:	5cc8      	ldrb	r0, [r1, r3]
 800f758:	d309      	bcc.n	800f76e <MDNS::DecodeDNSNameNotation(char const*, char*)+0x56>
 800f75a:	f04f 0e01 	mov.w	lr, #1
 800f75e:	4421      	add	r1, r4
 800f760:	4414      	add	r4, r2
 800f762:	780b      	ldrb	r3, [r1, #0]
 800f764:	b10b      	cbz	r3, 800f76a <MDNS::DecodeDNSNameNotation(char const*, char*)+0x52>
 800f766:	f804 cb01 	strb.w	ip, [r4], #1
 800f76a:	4622      	mov	r2, r4
 800f76c:	e7dd      	b.n	800f72a <MDNS::DecodeDNSNameNotation(char const*, char*)+0x12>
 800f76e:	54d0      	strb	r0, [r2, r3]
 800f770:	3301      	adds	r3, #1
 800f772:	e7ef      	b.n	800f754 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x3c>
 800f774:	4688      	mov	r8, r1
 800f776:	18d4      	adds	r4, r2, r3
 800f778:	f818 9f01 	ldrb.w	r9, [r8, #1]!
 800f77c:	f802 9b01 	strb.w	r9, [r2], #1
 800f780:	4294      	cmp	r4, r2
 800f782:	d1f9      	bne.n	800f778 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x60>
 800f784:	1c5a      	adds	r2, r3, #1
 800f786:	4411      	add	r1, r2
 800f788:	f1be 0f00 	cmp.w	lr, #0
 800f78c:	d1e9      	bne.n	800f762 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x4a>
 800f78e:	181d      	adds	r5, r3, r0
 800f790:	e7e7      	b.n	800f762 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x4a>
 800f792:	bf00      	nop
 800f794:	ffff3f00 			; <UNDEFINED> instruction: 0xffff3f00
 800f798:	2000b19c 	mulcs	r0, ip, r1

0800f79c <MDNS::FindFirstDotFromRight(char const*) const>:
 800f79c:	b510      	push	{r4, lr}
 800f79e:	4608      	mov	r0, r1
 800f7a0:	460c      	mov	r4, r1
 800f7a2:	f7ff ff65 	bl	800f670 <strlen>
 800f7a6:	4420      	add	r0, r4
 800f7a8:	42a0      	cmp	r0, r4
 800f7aa:	d903      	bls.n	800f7b4 <MDNS::FindFirstDotFromRight(char const*) const+0x18>
 800f7ac:	f810 3901 	ldrb.w	r3, [r0], #-1
 800f7b0:	2b2e      	cmp	r3, #46	; 0x2e
 800f7b2:	d1f9      	bne.n	800f7a8 <MDNS::FindFirstDotFromRight(char const*) const+0xc>
 800f7b4:	3001      	adds	r0, #1
 800f7b6:	bd10      	pop	{r4, pc}

0800f7b8 <MDNS::WriteDnsName(char const*, char*, bool)>:
 800f7b8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f7ba:	4614      	mov	r4, r2
 800f7bc:	460f      	mov	r7, r1
 800f7be:	1c60      	adds	r0, r4, #1
 800f7c0:	463d      	mov	r5, r7
 800f7c2:	f817 6b01 	ldrb.w	r6, [r7], #1
 800f7c6:	b946      	cbnz	r6, 800f7da <MDNS::WriteDnsName(char const*, char*, bool)+0x22>
 800f7c8:	1a69      	subs	r1, r5, r1
 800f7ca:	7021      	strb	r1, [r4, #0]
 800f7cc:	7829      	ldrb	r1, [r5, #0]
 800f7ce:	b949      	cbnz	r1, 800f7e4 <MDNS::WriteDnsName(char const*, char*, bool)+0x2c>
 800f7d0:	b10b      	cbz	r3, 800f7d6 <MDNS::WriteDnsName(char const*, char*, bool)+0x1e>
 800f7d2:	f800 1b01 	strb.w	r1, [r0], #1
 800f7d6:	1a80      	subs	r0, r0, r2
 800f7d8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f7da:	2e2e      	cmp	r6, #46	; 0x2e
 800f7dc:	d0f4      	beq.n	800f7c8 <MDNS::WriteDnsName(char const*, char*, bool)+0x10>
 800f7de:	f800 6b01 	strb.w	r6, [r0], #1
 800f7e2:	e7ed      	b.n	800f7c0 <MDNS::WriteDnsName(char const*, char*, bool)+0x8>
 800f7e4:	4604      	mov	r4, r0
 800f7e6:	1c69      	adds	r1, r5, #1
 800f7e8:	e7e8      	b.n	800f7bc <MDNS::WriteDnsName(char const*, char*, bool)+0x4>
	...

0800f7ec <MDNS::CreateAnswerLocalIpAddress()>:
 800f7ec:	2384      	movs	r3, #132	; 0x84
 800f7ee:	b510      	push	{r4, lr}
 800f7f0:	4c0f      	ldr	r4, [pc, #60]	; (800f830 <MDNS::CreateAnswerLocalIpAddress()+0x44>)
 800f7f2:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 800f7f6:	80e3      	strh	r3, [r4, #6]
 800f7f8:	2300      	movs	r3, #0
 800f7fa:	490e      	ldr	r1, [pc, #56]	; (800f834 <MDNS::CreateAnswerLocalIpAddress()+0x48>)
 800f7fc:	e9c4 2302 	strd	r2, r3, [r4, #8]
 800f800:	6809      	ldr	r1, [r1, #0]
 800f802:	f104 0210 	add.w	r2, r4, #16
 800f806:	2301      	movs	r3, #1
 800f808:	f7ff ffd6 	bl	800f7b8 <MDNS::WriteDnsName(char const*, char*, bool)>
 800f80c:	490a      	ldr	r1, [pc, #40]	; (800f838 <MDNS::CreateAnswerLocalIpAddress()+0x4c>)
 800f80e:	1813      	adds	r3, r2, r0
 800f810:	5011      	str	r1, [r2, r0]
 800f812:	f04f 42f0 	mov.w	r2, #2013265920	; 0x78000000
 800f816:	605a      	str	r2, [r3, #4]
 800f818:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800f81c:	811a      	strh	r2, [r3, #8]
 800f81e:	4a07      	ldr	r2, [pc, #28]	; (800f83c <MDNS::CreateAnswerLocalIpAddress()+0x50>)
 800f820:	6812      	ldr	r2, [r2, #0]
 800f822:	6952      	ldr	r2, [r2, #20]
 800f824:	f8c3 200a 	str.w	r2, [r3, #10]
 800f828:	1b1b      	subs	r3, r3, r4
 800f82a:	330a      	adds	r3, #10
 800f82c:	6023      	str	r3, [r4, #0]
 800f82e:	bd10      	pop	{r4, pc}
 800f830:	2000ad6c 	andcs	sl, r0, ip, ror #26
 800f834:	2000b198 	mulcs	r0, r8, r1
 800f838:	01800100 	orreq	r0, r0, r0, lsl #2
 800f83c:	2000b1a0 	andcs	fp, r0, r0, lsr #3

0800f840 <MDNS::Start()>:
 800f840:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f842:	4c1d      	ldr	r4, [pc, #116]	; (800f8b8 <MDNS::Start()+0x78>)
 800f844:	f241 41e9 	movw	r1, #5353	; 0x14e9
 800f848:	4605      	mov	r5, r0
 800f84a:	6820      	ldr	r0, [r4, #0]
 800f84c:	f000 fb28 	bl	800fea0 <Network::Begin(unsigned short)>
 800f850:	4e1a      	ldr	r6, [pc, #104]	; (800f8bc <MDNS::Start()+0x7c>)
 800f852:	4f1b      	ldr	r7, [pc, #108]	; (800f8c0 <MDNS::Start()+0x80>)
 800f854:	4601      	mov	r1, r0
 800f856:	6030      	str	r0, [r6, #0]
 800f858:	683a      	ldr	r2, [r7, #0]
 800f85a:	6820      	ldr	r0, [r4, #0]
 800f85c:	f000 fb31 	bl	800fec2 <Network::JoinGroup(int, unsigned int)>
 800f860:	4b18      	ldr	r3, [pc, #96]	; (800f8c4 <MDNS::Start()+0x84>)
 800f862:	681b      	ldr	r3, [r3, #0]
 800f864:	b923      	cbnz	r3, 800f870 <MDNS::Start()+0x30>
 800f866:	6821      	ldr	r1, [r4, #0]
 800f868:	4628      	mov	r0, r5
 800f86a:	3120      	adds	r1, #32
 800f86c:	f7ff ff38 	bl	800f6e0 <MDNS::SetName(char const*)>
 800f870:	4628      	mov	r0, r5
 800f872:	f7ff ffbb 	bl	800f7ec <MDNS::CreateAnswerLocalIpAddress()>
 800f876:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800f87a:	4913      	ldr	r1, [pc, #76]	; (800f8c8 <MDNS::Start()+0x88>)
 800f87c:	7830      	ldrb	r0, [r6, #0]
 800f87e:	f831 2b04 	ldrh.w	r2, [r1], #4
 800f882:	9300      	str	r3, [sp, #0]
 800f884:	683b      	ldr	r3, [r7, #0]
 800f886:	f7ff fe43 	bl	800f510 <udp_send>
 800f88a:	233f      	movs	r3, #63	; 0x3f
 800f88c:	6820      	ldr	r0, [r4, #0]
 800f88e:	4c0f      	ldr	r4, [pc, #60]	; (800f8cc <MDNS::Start()+0x8c>)
 800f890:	f100 0260 	add.w	r2, r0, #96	; 0x60
 800f894:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 800f898:	b929      	cbnz	r1, 800f8a6 <MDNS::Start()+0x66>
 800f89a:	4413      	add	r3, r2
 800f89c:	429a      	cmp	r2, r3
 800f89e:	d006      	beq.n	800f8ae <MDNS::Start()+0x6e>
 800f8a0:	f802 1b01 	strb.w	r1, [r2], #1
 800f8a4:	e7fa      	b.n	800f89c <MDNS::Start()+0x5c>
 800f8a6:	3b01      	subs	r3, #1
 800f8a8:	f802 1b01 	strb.w	r1, [r2], #1
 800f8ac:	d1f2      	bne.n	800f894 <MDNS::Start()+0x54>
 800f8ae:	2300      	movs	r3, #0
 800f8b0:	f880 309f 	strb.w	r3, [r0, #159]	; 0x9f
 800f8b4:	b003      	add	sp, #12
 800f8b6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f8b8:	2000b1a0 	andcs	fp, r0, r0, lsr #3
 800f8bc:	2000001c 	andcs	r0, r0, ip, lsl r0
 800f8c0:	2000ad68 	andcs	sl, r0, r8, ror #26
 800f8c4:	2000b198 	mulcs	r0, r8, r1
 800f8c8:	2000ad6c 	andcs	sl, r0, ip, ror #26
 800f8cc:	0801641e 	stmdaeq	r1, {r1, r2, r3, r4, sl, sp, lr}

0800f8d0 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)>:
 800f8d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f8d4:	4c1b      	ldr	r4, [pc, #108]	; (800f944 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x74>)
 800f8d6:	ea4f 1c01 	mov.w	ip, r1, lsl #4
 800f8da:	eb04 1501 	add.w	r5, r4, r1, lsl #4
 800f8de:	2300      	movs	r3, #0
 800f8e0:	f854 100c 	ldr.w	r1, [r4, ip]
 800f8e4:	4607      	mov	r7, r0
 800f8e6:	f7ff ff67 	bl	800f7b8 <MDNS::WriteDnsName(char const*, char*, bool)>
 800f8ea:	2301      	movs	r3, #1
 800f8ec:	7bac      	ldrb	r4, [r5, #14]
 800f8ee:	4616      	mov	r6, r2
 800f8f0:	4915      	ldr	r1, [pc, #84]	; (800f948 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x78>)
 800f8f2:	4402      	add	r2, r0
 800f8f4:	4815      	ldr	r0, [pc, #84]	; (800f94c <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x7c>)
 800f8f6:	429c      	cmp	r4, r3
 800f8f8:	bf18      	it	ne
 800f8fa:	4601      	movne	r1, r0
 800f8fc:	4638      	mov	r0, r7
 800f8fe:	f7ff ff5b 	bl	800f7b8 <MDNS::WriteDnsName(char const*, char*, bool)>
 800f902:	4b13      	ldr	r3, [pc, #76]	; (800f950 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x80>)
 800f904:	1814      	adds	r4, r2, r0
 800f906:	5013      	str	r3, [r2, r0]
 800f908:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800f90c:	6063      	str	r3, [r4, #4]
 800f90e:	4b11      	ldr	r3, [pc, #68]	; (800f954 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x84>)
 800f910:	f8d3 8000 	ldr.w	r8, [r3]
 800f914:	4640      	mov	r0, r8
 800f916:	f7ff feab 	bl	800f670 <strlen>
 800f91a:	f100 0308 	add.w	r3, r0, #8
 800f91e:	ba5b      	rev16	r3, r3
 800f920:	8123      	strh	r3, [r4, #8]
 800f922:	2300      	movs	r3, #0
 800f924:	f8c4 300a 	str.w	r3, [r4, #10]
 800f928:	89ab      	ldrh	r3, [r5, #12]
 800f92a:	f104 0210 	add.w	r2, r4, #16
 800f92e:	ba5b      	rev16	r3, r3
 800f930:	81e3      	strh	r3, [r4, #14]
 800f932:	4641      	mov	r1, r8
 800f934:	2301      	movs	r3, #1
 800f936:	4638      	mov	r0, r7
 800f938:	f7ff ff3e 	bl	800f7b8 <MDNS::WriteDnsName(char const*, char*, bool)>
 800f93c:	4410      	add	r0, r2
 800f93e:	1b80      	subs	r0, r0, r6
 800f940:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f944:	2000af70 	andcs	sl, r0, r0, ror pc
 800f948:	0801641a 	stmdaeq	r1, {r1, r3, r4, sl, sp, lr}
 800f94c:	08016437 	stmdaeq	r1, {r0, r1, r2, r4, r5, sl, sp, lr}
 800f950:	01802100 	orreq	r2, r0, r0, lsl #2
 800f954:	2000b198 	mulcs	r0, r8, r1

0800f958 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)>:
 800f958:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f95c:	4e19      	ldr	r6, [pc, #100]	; (800f9c4 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x6c>)
 800f95e:	010f      	lsls	r7, r1, #4
 800f960:	eb06 1501 	add.w	r5, r6, r1, lsl #4
 800f964:	2300      	movs	r3, #0
 800f966:	59f1      	ldr	r1, [r6, r7]
 800f968:	4604      	mov	r4, r0
 800f96a:	f7ff ff25 	bl	800f7b8 <MDNS::WriteDnsName(char const*, char*, bool)>
 800f96e:	2301      	movs	r3, #1
 800f970:	7bae      	ldrb	r6, [r5, #14]
 800f972:	4690      	mov	r8, r2
 800f974:	4914      	ldr	r1, [pc, #80]	; (800f9c8 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x70>)
 800f976:	4402      	add	r2, r0
 800f978:	4814      	ldr	r0, [pc, #80]	; (800f9cc <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x74>)
 800f97a:	429e      	cmp	r6, r3
 800f97c:	bf18      	it	ne
 800f97e:	4601      	movne	r1, r0
 800f980:	4620      	mov	r0, r4
 800f982:	f7ff ff19 	bl	800f7b8 <MDNS::WriteDnsName(char const*, char*, bool)>
 800f986:	4b12      	ldr	r3, [pc, #72]	; (800f9d0 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x78>)
 800f988:	1816      	adds	r6, r2, r0
 800f98a:	5013      	str	r3, [r2, r0]
 800f98c:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800f990:	68a8      	ldr	r0, [r5, #8]
 800f992:	6073      	str	r3, [r6, #4]
 800f994:	f106 040b 	add.w	r4, r6, #11
 800f998:	b938      	cbnz	r0, 800f9aa <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x52>
 800f99a:	f44f 7380 	mov.w	r3, #256	; 0x100
 800f99e:	72b0      	strb	r0, [r6, #10]
 800f9a0:	8133      	strh	r3, [r6, #8]
 800f9a2:	eba4 0008 	sub.w	r0, r4, r8
 800f9a6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f9aa:	f7ff fe61 	bl	800f670 <strlen>
 800f9ae:	4607      	mov	r7, r0
 800f9b0:	1c43      	adds	r3, r0, #1
 800f9b2:	72b0      	strb	r0, [r6, #10]
 800f9b4:	ba5b      	rev16	r3, r3
 800f9b6:	4620      	mov	r0, r4
 800f9b8:	68a9      	ldr	r1, [r5, #8]
 800f9ba:	8133      	strh	r3, [r6, #8]
 800f9bc:	f7ff fe6d 	bl	800f69a <strcpy.isra.0>
 800f9c0:	443c      	add	r4, r7
 800f9c2:	e7ee      	b.n	800f9a2 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x4a>
 800f9c4:	2000af70 	andcs	sl, r0, r0, ror pc
 800f9c8:	0801641a 	stmdaeq	r1, {r1, r3, r4, sl, sp, lr}
 800f9cc:	08016437 	stmdaeq	r1, {r0, r1, r2, r4, r5, sl, sp, lr}
 800f9d0:	01801000 	orreq	r1, r0, r0

0800f9d4 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)>:
 800f9d4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800f9d8:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800fa3c <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x68>
 800f9dc:	ea4f 1901 	mov.w	r9, r1, lsl #4
 800f9e0:	eb08 1501 	add.w	r5, r8, r1, lsl #4
 800f9e4:	6869      	ldr	r1, [r5, #4]
 800f9e6:	2301      	movs	r3, #1
 800f9e8:	4607      	mov	r7, r0
 800f9ea:	f7ff fee5 	bl	800f7b8 <MDNS::WriteDnsName(char const*, char*, bool)>
 800f9ee:	4b14      	ldr	r3, [pc, #80]	; (800fa40 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x6c>)
 800f9f0:	f858 8009 	ldr.w	r8, [r8, r9]
 800f9f4:	5013      	str	r3, [r2, r0]
 800f9f6:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800f9fa:	1816      	adds	r6, r2, r0
 800f9fc:	6073      	str	r3, [r6, #4]
 800f9fe:	4640      	mov	r0, r8
 800fa00:	4614      	mov	r4, r2
 800fa02:	f7ff fe35 	bl	800f670 <strlen>
 800fa06:	f100 030d 	add.w	r3, r0, #13
 800fa0a:	ba5b      	rev16	r3, r3
 800fa0c:	4641      	mov	r1, r8
 800fa0e:	8133      	strh	r3, [r6, #8]
 800fa10:	f106 020a 	add.w	r2, r6, #10
 800fa14:	2300      	movs	r3, #0
 800fa16:	4638      	mov	r0, r7
 800fa18:	f7ff fece 	bl	800f7b8 <MDNS::WriteDnsName(char const*, char*, bool)>
 800fa1c:	2301      	movs	r3, #1
 800fa1e:	4402      	add	r2, r0
 800fa20:	7bad      	ldrb	r5, [r5, #14]
 800fa22:	4808      	ldr	r0, [pc, #32]	; (800fa44 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x70>)
 800fa24:	4908      	ldr	r1, [pc, #32]	; (800fa48 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x74>)
 800fa26:	429d      	cmp	r5, r3
 800fa28:	bf18      	it	ne
 800fa2a:	4601      	movne	r1, r0
 800fa2c:	4638      	mov	r0, r7
 800fa2e:	f7ff fec3 	bl	800f7b8 <MDNS::WriteDnsName(char const*, char*, bool)>
 800fa32:	4410      	add	r0, r2
 800fa34:	1b00      	subs	r0, r0, r4
 800fa36:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800fa3a:	bf00      	nop
 800fa3c:	2000af70 	andcs	sl, r0, r0, ror pc
 800fa40:	01000c00 	tsteq	r0, r0, lsl #24
 800fa44:	08016437 	stmdaeq	r1, {r0, r1, r2, r4, r5, sl, sp, lr}
 800fa48:	0801641a 	stmdaeq	r1, {r1, r3, r4, sl, sp, lr}

0800fa4c <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)>:
 800fa4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fa4e:	460f      	mov	r7, r1
 800fa50:	2301      	movs	r3, #1
 800fa52:	490f      	ldr	r1, [pc, #60]	; (800fa90 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x44>)
 800fa54:	4606      	mov	r6, r0
 800fa56:	f7ff feaf 	bl	800f7b8 <MDNS::WriteDnsName(char const*, char*, bool)>
 800fa5a:	4b0e      	ldr	r3, [pc, #56]	; (800fa94 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x48>)
 800fa5c:	490e      	ldr	r1, [pc, #56]	; (800fa98 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x4c>)
 800fa5e:	5013      	str	r3, [r2, r0]
 800fa60:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 800fa64:	eb01 1107 	add.w	r1, r1, r7, lsl #4
 800fa68:	684f      	ldr	r7, [r1, #4]
 800fa6a:	1815      	adds	r5, r2, r0
 800fa6c:	606b      	str	r3, [r5, #4]
 800fa6e:	4638      	mov	r0, r7
 800fa70:	4614      	mov	r4, r2
 800fa72:	f7ff fdfd 	bl	800f670 <strlen>
 800fa76:	1c83      	adds	r3, r0, #2
 800fa78:	ba5b      	rev16	r3, r3
 800fa7a:	812b      	strh	r3, [r5, #8]
 800fa7c:	f105 020a 	add.w	r2, r5, #10
 800fa80:	2301      	movs	r3, #1
 800fa82:	4639      	mov	r1, r7
 800fa84:	4630      	mov	r0, r6
 800fa86:	f7ff fe97 	bl	800f7b8 <MDNS::WriteDnsName(char const*, char*, bool)>
 800fa8a:	4410      	add	r0, r2
 800fa8c:	1b00      	subs	r0, r0, r4
 800fa8e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800fa90:	08016425 	stmdaeq	r1, {r0, r2, r5, sl, sp, lr}
 800fa94:	01000c00 	tsteq	r0, r0, lsl #24
 800fa98:	2000af70 	andcs	sl, r0, r0, ror pc

0800fa9c <MDNS::CreateMDNSMessage(unsigned int)>:
 800fa9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fa9e:	2384      	movs	r3, #132	; 0x84
 800faa0:	4d19      	ldr	r5, [pc, #100]	; (800fb08 <MDNS::CreateMDNSMessage(unsigned int)+0x6c>)
 800faa2:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800faa6:	80eb      	strh	r3, [r5, #6]
 800faa8:	f44f 7380 	mov.w	r3, #256	; 0x100
 800faac:	f105 0410 	add.w	r4, r5, #16
 800fab0:	e9c5 2302 	strd	r2, r3, [r5, #8]
 800fab4:	4622      	mov	r2, r4
 800fab6:	4606      	mov	r6, r0
 800fab8:	460f      	mov	r7, r1
 800faba:	f7ff ff09 	bl	800f8d0 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)>
 800fabe:	4404      	add	r4, r0
 800fac0:	4622      	mov	r2, r4
 800fac2:	4639      	mov	r1, r7
 800fac4:	4630      	mov	r0, r6
 800fac6:	f7ff ff47 	bl	800f958 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)>
 800faca:	4404      	add	r4, r0
 800facc:	4622      	mov	r2, r4
 800face:	4639      	mov	r1, r7
 800fad0:	4630      	mov	r0, r6
 800fad2:	f7ff ffbb 	bl	800fa4c <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)>
 800fad6:	4404      	add	r4, r0
 800fad8:	4622      	mov	r2, r4
 800fada:	4639      	mov	r1, r7
 800fadc:	4630      	mov	r0, r6
 800fade:	f7ff ff79 	bl	800f9d4 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)>
 800fae2:	4a0a      	ldr	r2, [pc, #40]	; (800fb0c <MDNS::CreateMDNSMessage(unsigned int)+0x70>)
 800fae4:	4404      	add	r4, r0
 800fae6:	f852 3b10 	ldr.w	r3, [r2], #16
 800faea:	1e60      	subs	r0, r4, #1
 800faec:	3b0c      	subs	r3, #12
 800faee:	4619      	mov	r1, r3
 800faf0:	3901      	subs	r1, #1
 800faf2:	d204      	bcs.n	800fafe <MDNS::CreateMDNSMessage(unsigned int)+0x62>
 800faf4:	441c      	add	r4, r3
 800faf6:	4b06      	ldr	r3, [pc, #24]	; (800fb10 <MDNS::CreateMDNSMessage(unsigned int)+0x74>)
 800faf8:	1ae4      	subs	r4, r4, r3
 800fafa:	602c      	str	r4, [r5, #0]
 800fafc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800fafe:	f812 6b01 	ldrb.w	r6, [r2], #1
 800fb02:	f800 6f01 	strb.w	r6, [r0, #1]!
 800fb06:	e7f3      	b.n	800faf0 <MDNS::CreateMDNSMessage(unsigned int)+0x54>
 800fb08:	2000af94 	mulcs	r0, r4, pc	; <UNPREDICTABLE>
 800fb0c:	2000ad6c 	andcs	sl, r0, ip, ror #26
 800fb10:	2000af98 	mulcs	r0, r8, pc	; <UNPREDICTABLE>

0800fb14 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>:
 800fb14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fb18:	4d40      	ldr	r5, [pc, #256]	; (800fc1c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x108>)
 800fb1a:	b085      	sub	sp, #20
 800fb1c:	682c      	ldr	r4, [r5, #0]
 800fb1e:	4680      	mov	r8, r0
 800fb20:	460f      	mov	r7, r1
 800fb22:	4616      	mov	r6, r2
 800fb24:	f89d b038 	ldrb.w	fp, [sp, #56]	; 0x38
 800fb28:	f8dd a03c 	ldr.w	sl, [sp, #60]	; 0x3c
 800fb2c:	b11c      	cbz	r4, 800fb36 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x22>
 800fb2e:	692a      	ldr	r2, [r5, #16]
 800fb30:	2a00      	cmp	r2, #0
 800fb32:	d16e      	bne.n	800fc12 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xfe>
 800fb34:	2401      	movs	r4, #1
 800fb36:	eb05 1204 	add.w	r2, r5, r4, lsl #4
 800fb3a:	ea4f 1904 	mov.w	r9, r4, lsl #4
 800fb3e:	8193      	strh	r3, [r2, #12]
 800fb40:	f882 b00e 	strb.w	fp, [r2, #14]
 800fb44:	2f00      	cmp	r7, #0
 800fb46:	d154      	bne.n	800fbf2 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xde>
 800fb48:	4b35      	ldr	r3, [pc, #212]	; (800fc20 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x10c>)
 800fb4a:	6818      	ldr	r0, [r3, #0]
 800fb4c:	3020      	adds	r0, #32
 800fb4e:	f7ff fd8f 	bl	800f670 <strlen>
 800fb52:	4607      	mov	r7, r0
 800fb54:	4630      	mov	r0, r6
 800fb56:	f7ff fd8b 	bl	800f670 <strlen>
 800fb5a:	4438      	add	r0, r7
 800fb5c:	3001      	adds	r0, #1
 800fb5e:	f002 fcc7 	bl	80124f0 <operator new[](unsigned int)>
 800fb62:	4b2f      	ldr	r3, [pc, #188]	; (800fc20 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x10c>)
 800fb64:	f845 0009 	str.w	r0, [r5, r9]
 800fb68:	6819      	ldr	r1, [r3, #0]
 800fb6a:	3120      	adds	r1, #32
 800fb6c:	f7ff fd95 	bl	800f69a <strcpy.isra.0>
 800fb70:	f855 0009 	ldr.w	r0, [r5, r9]
 800fb74:	4631      	mov	r1, r6
 800fb76:	f7ff fd98 	bl	800f6aa <strcat.isra.0>
 800fb7a:	4631      	mov	r1, r6
 800fb7c:	4640      	mov	r0, r8
 800fb7e:	f7ff fe0d 	bl	800f79c <MDNS::FindFirstDotFromRight(char const*) const>
 800fb82:	eb05 0709 	add.w	r7, r5, r9
 800fb86:	4605      	mov	r5, r0
 800fb88:	f7ff fd72 	bl	800f670 <strlen>
 800fb8c:	300d      	adds	r0, #13
 800fb8e:	f002 fcaf 	bl	80124f0 <operator new[](unsigned int)>
 800fb92:	4629      	mov	r1, r5
 800fb94:	6078      	str	r0, [r7, #4]
 800fb96:	f7ff fd80 	bl	800f69a <strcpy.isra.0>
 800fb9a:	4922      	ldr	r1, [pc, #136]	; (800fc24 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x110>)
 800fb9c:	6878      	ldr	r0, [r7, #4]
 800fb9e:	f7ff fd84 	bl	800f6aa <strcat.isra.0>
 800fba2:	4921      	ldr	r1, [pc, #132]	; (800fc28 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x114>)
 800fba4:	4b21      	ldr	r3, [pc, #132]	; (800fc2c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x118>)
 800fba6:	6878      	ldr	r0, [r7, #4]
 800fba8:	f1bb 0f01 	cmp.w	fp, #1
 800fbac:	bf18      	it	ne
 800fbae:	4619      	movne	r1, r3
 800fbb0:	f7ff fd7b 	bl	800f6aa <strcat.isra.0>
 800fbb4:	f1ba 0f00 	cmp.w	sl, #0
 800fbb8:	d009      	beq.n	800fbce <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xba>
 800fbba:	4650      	mov	r0, sl
 800fbbc:	f7ff fd58 	bl	800f670 <strlen>
 800fbc0:	3001      	adds	r0, #1
 800fbc2:	f002 fc95 	bl	80124f0 <operator new[](unsigned int)>
 800fbc6:	4651      	mov	r1, sl
 800fbc8:	60b8      	str	r0, [r7, #8]
 800fbca:	f7ff fd66 	bl	800f69a <strcpy.isra.0>
 800fbce:	4621      	mov	r1, r4
 800fbd0:	4640      	mov	r0, r8
 800fbd2:	f7ff ff63 	bl	800fa9c <MDNS::CreateMDNSMessage(unsigned int)>
 800fbd6:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800fbda:	4915      	ldr	r1, [pc, #84]	; (800fc30 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x11c>)
 800fbdc:	4815      	ldr	r0, [pc, #84]	; (800fc34 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x120>)
 800fbde:	f831 2b04 	ldrh.w	r2, [r1], #4
 800fbe2:	9300      	str	r3, [sp, #0]
 800fbe4:	4b14      	ldr	r3, [pc, #80]	; (800fc38 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x124>)
 800fbe6:	7800      	ldrb	r0, [r0, #0]
 800fbe8:	681b      	ldr	r3, [r3, #0]
 800fbea:	f7ff fc91 	bl	800f510 <udp_send>
 800fbee:	2001      	movs	r0, #1
 800fbf0:	e010      	b.n	800fc14 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x100>
 800fbf2:	4638      	mov	r0, r7
 800fbf4:	f7ff fd3c 	bl	800f670 <strlen>
 800fbf8:	9003      	str	r0, [sp, #12]
 800fbfa:	4630      	mov	r0, r6
 800fbfc:	f7ff fd38 	bl	800f670 <strlen>
 800fc00:	9b03      	ldr	r3, [sp, #12]
 800fc02:	4418      	add	r0, r3
 800fc04:	3001      	adds	r0, #1
 800fc06:	f002 fc73 	bl	80124f0 <operator new[](unsigned int)>
 800fc0a:	4639      	mov	r1, r7
 800fc0c:	f845 0009 	str.w	r0, [r5, r9]
 800fc10:	e7ac      	b.n	800fb6c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x58>
 800fc12:	2000      	movs	r0, #0
 800fc14:	b005      	add	sp, #20
 800fc16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fc1a:	bf00      	nop
 800fc1c:	2000af70 	andcs	sl, r0, r0, ror pc
 800fc20:	2000b1a0 	andcs	fp, r0, r0, lsr #3
 800fc24:	08014d03 	stmdaeq	r1, {r0, r1, r8, sl, fp, lr}
 800fc28:	0801641a 	stmdaeq	r1, {r1, r3, r4, sl, sp, lr}
 800fc2c:	08016437 	stmdaeq	r1, {r0, r1, r2, r4, r5, sl, sp, lr}
 800fc30:	2000af94 	mulcs	r0, r4, pc	; <UNPREDICTABLE>
 800fc34:	2000001c 	andcs	r0, r0, ip, lsl r0
 800fc38:	2000ad68 	andcs	sl, r0, r8, ror #26

0800fc3c <MDNS::HandleRequest(unsigned short)>:
 800fc3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fc40:	4605      	mov	r5, r0
 800fc42:	2700      	movs	r7, #0
 800fc44:	f04f 080c 	mov.w	r8, #12
 800fc48:	b0c5      	sub	sp, #276	; 0x114
 800fc4a:	f8df a0c0 	ldr.w	sl, [pc, #192]	; 800fd0c <MDNS::HandleRequest(unsigned short)+0xd0>
 800fc4e:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 800fd10 <MDNS::HandleRequest(unsigned short)+0xd4>
 800fc52:	9103      	str	r1, [sp, #12]
 800fc54:	9b03      	ldr	r3, [sp, #12]
 800fc56:	42bb      	cmp	r3, r7
 800fc58:	d802      	bhi.n	800fc60 <MDNS::HandleRequest(unsigned short)+0x24>
 800fc5a:	b045      	add	sp, #276	; 0x114
 800fc5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fc60:	f8da 1000 	ldr.w	r1, [sl]
 800fc64:	aa04      	add	r2, sp, #16
 800fc66:	4441      	add	r1, r8
 800fc68:	4628      	mov	r0, r5
 800fc6a:	f7ff fd55 	bl	800f718 <MDNS::DecodeDNSNameNotation(char const*, char*)>
 800fc6e:	f8da 2000 	ldr.w	r2, [sl]
 800fc72:	4440      	add	r0, r8
 800fc74:	1813      	adds	r3, r2, r0
 800fc76:	885b      	ldrh	r3, [r3, #2]
 800fc78:	f100 0804 	add.w	r8, r0, #4
 800fc7c:	ba5b      	rev16	r3, r3
 800fc7e:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800fc82:	2b01      	cmp	r3, #1
 800fc84:	d13d      	bne.n	800fd02 <MDNS::HandleRequest(unsigned short)+0xc6>
 800fc86:	5a14      	ldrh	r4, [r2, r0]
 800fc88:	4b22      	ldr	r3, [pc, #136]	; (800fd14 <MDNS::HandleRequest(unsigned short)+0xd8>)
 800fc8a:	ba64      	rev16	r4, r4
 800fc8c:	6818      	ldr	r0, [r3, #0]
 800fc8e:	a904      	add	r1, sp, #16
 800fc90:	b2a4      	uxth	r4, r4
 800fc92:	f7ff fcf5 	bl	800f680 <strcmp>
 800fc96:	b968      	cbnz	r0, 800fcb4 <MDNS::HandleRequest(unsigned short)+0x78>
 800fc98:	2c01      	cmp	r4, #1
 800fc9a:	d10b      	bne.n	800fcb4 <MDNS::HandleRequest(unsigned short)+0x78>
 800fc9c:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800fca0:	491d      	ldr	r1, [pc, #116]	; (800fd18 <MDNS::HandleRequest(unsigned short)+0xdc>)
 800fca2:	481e      	ldr	r0, [pc, #120]	; (800fd1c <MDNS::HandleRequest(unsigned short)+0xe0>)
 800fca4:	f831 2b04 	ldrh.w	r2, [r1], #4
 800fca8:	9300      	str	r3, [sp, #0]
 800fcaa:	4b1d      	ldr	r3, [pc, #116]	; (800fd20 <MDNS::HandleRequest(unsigned short)+0xe4>)
 800fcac:	7800      	ldrb	r0, [r0, #0]
 800fcae:	681b      	ldr	r3, [r3, #0]
 800fcb0:	f7ff fc2e 	bl	800f510 <udp_send>
 800fcb4:	481b      	ldr	r0, [pc, #108]	; (800fd24 <MDNS::HandleRequest(unsigned short)+0xe8>)
 800fcb6:	a904      	add	r1, sp, #16
 800fcb8:	f7ff fce2 	bl	800f680 <strcmp>
 800fcbc:	f04f 0900 	mov.w	r9, #0
 800fcc0:	4e19      	ldr	r6, [pc, #100]	; (800fd28 <MDNS::HandleRequest(unsigned short)+0xec>)
 800fcc2:	9002      	str	r0, [sp, #8]
 800fcc4:	6833      	ldr	r3, [r6, #0]
 800fcc6:	b1c3      	cbz	r3, 800fcfa <MDNS::HandleRequest(unsigned short)+0xbe>
 800fcc8:	9b02      	ldr	r3, [sp, #8]
 800fcca:	b123      	cbz	r3, 800fcd6 <MDNS::HandleRequest(unsigned short)+0x9a>
 800fccc:	6870      	ldr	r0, [r6, #4]
 800fcce:	a904      	add	r1, sp, #16
 800fcd0:	f7ff fcd6 	bl	800f680 <strcmp>
 800fcd4:	b988      	cbnz	r0, 800fcfa <MDNS::HandleRequest(unsigned short)+0xbe>
 800fcd6:	2c0c      	cmp	r4, #12
 800fcd8:	d10f      	bne.n	800fcfa <MDNS::HandleRequest(unsigned short)+0xbe>
 800fcda:	4649      	mov	r1, r9
 800fcdc:	4628      	mov	r0, r5
 800fcde:	f7ff fedd 	bl	800fa9c <MDNS::CreateMDNSMessage(unsigned int)>
 800fce2:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800fce6:	480d      	ldr	r0, [pc, #52]	; (800fd1c <MDNS::HandleRequest(unsigned short)+0xe0>)
 800fce8:	9300      	str	r3, [sp, #0]
 800fcea:	4b0d      	ldr	r3, [pc, #52]	; (800fd20 <MDNS::HandleRequest(unsigned short)+0xe4>)
 800fcec:	f8bb 2000 	ldrh.w	r2, [fp]
 800fcf0:	681b      	ldr	r3, [r3, #0]
 800fcf2:	490e      	ldr	r1, [pc, #56]	; (800fd2c <MDNS::HandleRequest(unsigned short)+0xf0>)
 800fcf4:	7800      	ldrb	r0, [r0, #0]
 800fcf6:	f7ff fc0b 	bl	800f510 <udp_send>
 800fcfa:	3610      	adds	r6, #16
 800fcfc:	f1b9 0f00 	cmp.w	r9, #0
 800fd00:	d001      	beq.n	800fd06 <MDNS::HandleRequest(unsigned short)+0xca>
 800fd02:	3701      	adds	r7, #1
 800fd04:	e7a6      	b.n	800fc54 <MDNS::HandleRequest(unsigned short)+0x18>
 800fd06:	f04f 0901 	mov.w	r9, #1
 800fd0a:	e7db      	b.n	800fcc4 <MDNS::HandleRequest(unsigned short)+0x88>
 800fd0c:	2000b19c 	mulcs	r0, ip, r1
 800fd10:	2000af94 	mulcs	r0, r4, pc	; <UNPREDICTABLE>
 800fd14:	2000b198 	mulcs	r0, r8, r1
 800fd18:	2000ad6c 	andcs	sl, r0, ip, ror #26
 800fd1c:	2000001c 	andcs	r0, r0, ip, lsl r0
 800fd20:	2000ad68 	andcs	sl, r0, r8, ror #26
 800fd24:	08016425 	stmdaeq	r1, {r0, r2, r5, sl, sp, lr}
 800fd28:	2000af70 	andcs	sl, r0, r0, ror pc
 800fd2c:	2000af98 	mulcs	r0, r8, pc	; <UNPREDICTABLE>

0800fd30 <MDNS::Parse()>:
 800fd30:	4b08      	ldr	r3, [pc, #32]	; (800fd54 <MDNS::Parse()+0x24>)
 800fd32:	681a      	ldr	r2, [r3, #0]
 800fd34:	8853      	ldrh	r3, [r2, #2]
 800fd36:	ba5b      	rev16	r3, r3
 800fd38:	b299      	uxth	r1, r3
 800fd3a:	041b      	lsls	r3, r3, #16
 800fd3c:	d408      	bmi.n	800fd50 <MDNS::Parse()+0x20>
 800fd3e:	0b89      	lsrs	r1, r1, #14
 800fd40:	d106      	bne.n	800fd50 <MDNS::Parse()+0x20>
 800fd42:	8891      	ldrh	r1, [r2, #4]
 800fd44:	b28b      	uxth	r3, r1
 800fd46:	b11b      	cbz	r3, 800fd50 <MDNS::Parse()+0x20>
 800fd48:	ba49      	rev16	r1, r1
 800fd4a:	b289      	uxth	r1, r1
 800fd4c:	f7ff bf76 	b.w	800fc3c <MDNS::HandleRequest(unsigned short)>
 800fd50:	4770      	bx	lr
 800fd52:	bf00      	nop
 800fd54:	2000b19c 	mulcs	r0, ip, r1

0800fd58 <MDNS::Run()>:
 800fd58:	b538      	push	{r3, r4, r5, lr}
 800fd5a:	4d0c      	ldr	r5, [pc, #48]	; (800fd8c <MDNS::Run()+0x34>)
 800fd5c:	4604      	mov	r4, r0
 800fd5e:	480c      	ldr	r0, [pc, #48]	; (800fd90 <MDNS::Run()+0x38>)
 800fd60:	462b      	mov	r3, r5
 800fd62:	4a0c      	ldr	r2, [pc, #48]	; (800fd94 <MDNS::Run()+0x3c>)
 800fd64:	490c      	ldr	r1, [pc, #48]	; (800fd98 <MDNS::Run()+0x40>)
 800fd66:	7800      	ldrb	r0, [r0, #0]
 800fd68:	f7ff fbac 	bl	800f4c4 <udp_recv2>
 800fd6c:	4b0b      	ldr	r3, [pc, #44]	; (800fd9c <MDNS::Run()+0x44>)
 800fd6e:	882a      	ldrh	r2, [r5, #0]
 800fd70:	8018      	strh	r0, [r3, #0]
 800fd72:	f241 43e9 	movw	r3, #5353	; 0x14e9
 800fd76:	429a      	cmp	r2, r3
 800fd78:	d106      	bne.n	800fd88 <MDNS::Run()+0x30>
 800fd7a:	280c      	cmp	r0, #12
 800fd7c:	d904      	bls.n	800fd88 <MDNS::Run()+0x30>
 800fd7e:	4620      	mov	r0, r4
 800fd80:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800fd84:	f7ff bfd4 	b.w	800fd30 <MDNS::Parse()>
 800fd88:	bd38      	pop	{r3, r4, r5, pc}
 800fd8a:	bf00      	nop
 800fd8c:	2000ad64 	andcs	sl, r0, r4, ror #26
 800fd90:	2000001c 	andcs	r0, r0, ip, lsl r0
 800fd94:	2000ad60 	andcs	sl, r0, r0, ror #26
 800fd98:	2000b19c 	mulcs	r0, ip, r1
 800fd9c:	2000af90 	mulcs	r0, r0, pc	; <UNPREDICTABLE>

0800fda0 <MDNS::Print()>:
 800fda0:	b510      	push	{r4, lr}
 800fda2:	4816      	ldr	r0, [pc, #88]	; (800fdfc <MDNS::Print()+0x5c>)
 800fda4:	f7f9 f9a0 	bl	80090e8 <printf>
 800fda8:	4b15      	ldr	r3, [pc, #84]	; (800fe00 <MDNS::Print()+0x60>)
 800fdaa:	681b      	ldr	r3, [r3, #0]
 800fdac:	3301      	adds	r3, #1
 800fdae:	d104      	bne.n	800fdba <MDNS::Print()+0x1a>
 800fdb0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fdb4:	4813      	ldr	r0, [pc, #76]	; (800fe04 <MDNS::Print()+0x64>)
 800fdb6:	f7f9 b997 	b.w	80090e8 <printf>
 800fdba:	4b13      	ldr	r3, [pc, #76]	; (800fe08 <MDNS::Print()+0x68>)
 800fdbc:	4c13      	ldr	r4, [pc, #76]	; (800fe0c <MDNS::Print()+0x6c>)
 800fdbe:	6819      	ldr	r1, [r3, #0]
 800fdc0:	4813      	ldr	r0, [pc, #76]	; (800fe10 <MDNS::Print()+0x70>)
 800fdc2:	f7f9 f991 	bl	80090e8 <printf>
 800fdc6:	6823      	ldr	r3, [r4, #0]
 800fdc8:	b14b      	cbz	r3, 800fdde <MDNS::Print()+0x3e>
 800fdca:	4a12      	ldr	r2, [pc, #72]	; (800fe14 <MDNS::Print()+0x74>)
 800fdcc:	68a3      	ldr	r3, [r4, #8]
 800fdce:	6861      	ldr	r1, [r4, #4]
 800fdd0:	2b00      	cmp	r3, #0
 800fdd2:	bf08      	it	eq
 800fdd4:	4613      	moveq	r3, r2
 800fdd6:	4810      	ldr	r0, [pc, #64]	; (800fe18 <MDNS::Print()+0x78>)
 800fdd8:	89a2      	ldrh	r2, [r4, #12]
 800fdda:	f7f9 f985 	bl	80090e8 <printf>
 800fdde:	6923      	ldr	r3, [r4, #16]
 800fde0:	b15b      	cbz	r3, 800fdfa <MDNS::Print()+0x5a>
 800fde2:	69a3      	ldr	r3, [r4, #24]
 800fde4:	4a0b      	ldr	r2, [pc, #44]	; (800fe14 <MDNS::Print()+0x74>)
 800fde6:	6961      	ldr	r1, [r4, #20]
 800fde8:	2b00      	cmp	r3, #0
 800fdea:	bf08      	it	eq
 800fdec:	4613      	moveq	r3, r2
 800fdee:	480a      	ldr	r0, [pc, #40]	; (800fe18 <MDNS::Print()+0x78>)
 800fdf0:	8ba2      	ldrh	r2, [r4, #28]
 800fdf2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fdf6:	f7f9 b977 	b.w	80090e8 <printf>
 800fdfa:	bd10      	pop	{r4, pc}
 800fdfc:	08016442 	stmdaeq	r1, {r1, r6, sl, sp, lr}
 800fe00:	2000001c 	andcs	r0, r0, ip, lsl r0
 800fe04:	08016448 	stmdaeq	r1, {r3, r6, sl, sp, lr}
 800fe08:	2000b198 	mulcs	r0, r8, r1
 800fe0c:	2000af70 	andcs	sl, r0, r0, ror pc
 800fe10:	08016456 	stmdaeq	r1, {r1, r2, r4, r6, sl, sp, lr}
 800fe14:	08015025 	stmdaeq	r1, {r0, r2, r5, ip, lr}
 800fe18:	08016462 	stmdaeq	r1, {r1, r5, r6, sl, sp, lr}

0800fe1c <strncpy.constprop.0.isra.0>:
 800fe1c:	233f      	movs	r3, #63	; 0x3f
 800fe1e:	3901      	subs	r1, #1
 800fe20:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800fe24:	b92a      	cbnz	r2, 800fe32 <strncpy.constprop.0.isra.0+0x16>
 800fe26:	4403      	add	r3, r0
 800fe28:	4298      	cmp	r0, r3
 800fe2a:	d006      	beq.n	800fe3a <strncpy.constprop.0.isra.0+0x1e>
 800fe2c:	f800 2b01 	strb.w	r2, [r0], #1
 800fe30:	e7fa      	b.n	800fe28 <strncpy.constprop.0.isra.0+0xc>
 800fe32:	3b01      	subs	r3, #1
 800fe34:	f800 2b01 	strb.w	r2, [r0], #1
 800fe38:	d1f2      	bne.n	800fe20 <strncpy.constprop.0.isra.0+0x4>
 800fe3a:	4770      	bx	lr

0800fe3c <Network::Network()>:
 800fe3c:	4a12      	ldr	r2, [pc, #72]	; (800fe88 <Network::Network()+0x4c>)
 800fe3e:	2300      	movs	r3, #0
 800fe40:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 800fe44:	6010      	str	r0, [r2, #0]
 800fe46:	2201      	movs	r2, #1
 800fe48:	e9c0 2100 	strd	r2, r1, [r0]
 800fe4c:	e9c0 2302 	strd	r2, r3, [r0, #8]
 800fe50:	2200      	movs	r2, #0
 800fe52:	e9c0 3330 	strd	r3, r3, [r0, #192]	; 0xc0
 800fe56:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800fe5a:	490c      	ldr	r1, [pc, #48]	; (800fe8c <Network::Network()+0x50>)
 800fe5c:	6102      	str	r2, [r0, #16]
 800fe5e:	f8c0 30b8 	str.w	r3, [r0, #184]	; 0xb8
 800fe62:	f8c0 30c8 	str.w	r3, [r0, #200]	; 0xc8
 800fe66:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
 800fe6a:	61c3      	str	r3, [r0, #28]
 800fe6c:	f880 3020 	strb.w	r3, [r0, #32]
 800fe70:	f880 3060 	strb.w	r3, [r0, #96]	; 0x60
 800fe74:	f100 02a5 	add.w	r2, r0, #165	; 0xa5
 800fe78:	f811 3b01 	ldrb.w	r3, [r1], #1
 800fe7c:	f802 3f01 	strb.w	r3, [r2, #1]!
 800fe80:	2b00      	cmp	r3, #0
 800fe82:	d1f9      	bne.n	800fe78 <Network::Network()+0x3c>
 800fe84:	4770      	bx	lr
 800fe86:	bf00      	nop
 800fe88:	2000b1a0 	andcs	fp, r0, r0, lsr #3
 800fe8c:	0801646d 	stmdaeq	r1, {r0, r2, r3, r5, r6, sl, sp, lr}

0800fe90 <Network::Shutdown()>:
 800fe90:	b508      	push	{r3, lr}
 800fe92:	30bc      	adds	r0, #188	; 0xbc
 800fe94:	f001 fca2 	bl	80117dc <NetworkDisplay::ShowShutdown()>
 800fe98:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800fe9c:	f7f7 b9d4 	b.w	8007248 <net_shutdown>

0800fea0 <Network::Begin(unsigned short)>:
 800fea0:	4608      	mov	r0, r1
 800fea2:	f7ff ba9f 	b.w	800f3e4 <udp_bind>

0800fea6 <Network::End(unsigned short)>:
 800fea6:	4608      	mov	r0, r1
 800fea8:	f7ff bab6 	b.w	800f418 <udp_unbind>

0800feac <Network::MacAddressCopyTo(unsigned char*)>:
 800feac:	f100 039f 	add.w	r3, r0, #159	; 0x9f
 800feb0:	3901      	subs	r1, #1
 800feb2:	30a5      	adds	r0, #165	; 0xa5
 800feb4:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800feb8:	4283      	cmp	r3, r0
 800feba:	f801 2f01 	strb.w	r2, [r1, #1]!
 800febe:	d1f9      	bne.n	800feb4 <Network::MacAddressCopyTo(unsigned char*)+0x8>
 800fec0:	4770      	bx	lr

0800fec2 <Network::JoinGroup(int, unsigned int)>:
 800fec2:	4610      	mov	r0, r2
 800fec4:	f001 b816 	b.w	8010ef4 <igmp_join>

0800fec8 <Network::LeaveGroup(int, unsigned int)>:
 800fec8:	4610      	mov	r0, r2
 800feca:	f001 b83f 	b.w	8010f4c <igmp_leave>

0800fece <Network::SetDefaultIp()>:
 800fece:	f890 30a4 	ldrb.w	r3, [r0, #164]	; 0xa4
 800fed2:	f890 20a3 	ldrb.w	r2, [r0, #163]	; 0xa3
 800fed6:	041b      	lsls	r3, r3, #16
 800fed8:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 800fedc:	f890 20a5 	ldrb.w	r2, [r0, #165]	; 0xa5
 800fee0:	3302      	adds	r3, #2
 800fee2:	eb03 6302 	add.w	r3, r3, r2, lsl #24
 800fee6:	22ff      	movs	r2, #255	; 0xff
 800fee8:	6143      	str	r3, [r0, #20]
 800feea:	e9c0 3206 	strd	r3, r2, [r0, #24]
 800feee:	4770      	bx	lr

0800fef0 <Network::Init(NetworkParamsStore*)>:
 800fef0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fef4:	b0a5      	sub	sp, #148	; 0x94
 800fef6:	4604      	mov	r4, r0
 800fef8:	a80b      	add	r0, sp, #44	; 0x2c
 800fefa:	f000 fae9 	bl	80104d0 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 800fefe:	a80b      	add	r0, sp, #44	; 0x2c
 800ff00:	f000 faf2 	bl	80104e8 <NetworkParams::Load()>
 800ff04:	b110      	cbz	r0, 800ff0c <Network::Init(NetworkParamsStore*)+0x1c>
 800ff06:	a80b      	add	r0, sp, #44	; 0x2c
 800ff08:	f000 fcc5 	bl	8010896 <NetworkParams::Dump()>
 800ff0c:	f104 05bc 	add.w	r5, r4, #188	; 0xbc
 800ff10:	4628      	mov	r0, r5
 800ff12:	f001 fc45 	bl	80117a0 <NetworkDisplay::ShowEmacStart()>
 800ff16:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800ff18:	f104 06a0 	add.w	r6, r4, #160	; 0xa0
 800ff1c:	9308      	str	r3, [sp, #32]
 800ff1e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800ff20:	4630      	mov	r0, r6
 800ff22:	9309      	str	r3, [sp, #36]	; 0x24
 800ff24:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800ff26:	f104 0720 	add.w	r7, r4, #32
 800ff2a:	930a      	str	r3, [sp, #40]	; 0x28
 800ff2c:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 800ff30:	7163      	strb	r3, [r4, #5]
 800ff32:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800ff34:	f013 0240 	ands.w	r2, r3, #64	; 0x40
 800ff38:	bf18      	it	ne
 800ff3a:	f8dd 2085 	ldrne.w	r2, [sp, #133]	; 0x85
 800ff3e:	061b      	lsls	r3, r3, #24
 800ff40:	bf54      	ite	pl
 800ff42:	2300      	movpl	r3, #0
 800ff44:	f8dd 3089 	ldrmi.w	r3, [sp, #137]	; 0x89
 800ff48:	60e2      	str	r2, [r4, #12]
 800ff4a:	6123      	str	r3, [r4, #16]
 800ff4c:	f003 fe62 	bl	8013c14 <emac_start(unsigned char*)>
 800ff50:	f89d 3045 	ldrb.w	r3, [sp, #69]	; 0x45
 800ff54:	2b00      	cmp	r3, #0
 800ff56:	f040 80c7 	bne.w	80100e8 <Network::Init(NetworkParamsStore*)+0x1f8>
 800ff5a:	4984      	ldr	r1, [pc, #528]	; (801016c <Network::Init(NetworkParamsStore*)+0x27c>)
 800ff5c:	f104 001f 	add.w	r0, r4, #31
 800ff60:	f811 2b01 	ldrb.w	r2, [r1], #1
 800ff64:	f103 0c01 	add.w	ip, r3, #1
 800ff68:	2a00      	cmp	r2, #0
 800ff6a:	f040 80b9 	bne.w	80100e0 <Network::Init(NetworkParamsStore*)+0x1f0>
 800ff6e:	f894 20a3 	ldrb.w	r2, [r4, #163]	; 0xa3
 800ff72:	18e1      	adds	r1, r4, r3
 800ff74:	0910      	lsrs	r0, r2, #4
 800ff76:	2a9f      	cmp	r2, #159	; 0x9f
 800ff78:	f002 020f 	and.w	r2, r2, #15
 800ff7c:	bf94      	ite	ls
 800ff7e:	3030      	addls	r0, #48	; 0x30
 800ff80:	3037      	addhi	r0, #55	; 0x37
 800ff82:	2a09      	cmp	r2, #9
 800ff84:	bf94      	ite	ls
 800ff86:	3230      	addls	r2, #48	; 0x30
 800ff88:	3237      	addhi	r2, #55	; 0x37
 800ff8a:	44a4      	add	ip, r4
 800ff8c:	f881 0020 	strb.w	r0, [r1, #32]
 800ff90:	f88c 2020 	strb.w	r2, [ip, #32]
 800ff94:	f894 20a4 	ldrb.w	r2, [r4, #164]	; 0xa4
 800ff98:	f103 0802 	add.w	r8, r3, #2
 800ff9c:	0910      	lsrs	r0, r2, #4
 800ff9e:	2a9f      	cmp	r2, #159	; 0x9f
 800ffa0:	f002 020f 	and.w	r2, r2, #15
 800ffa4:	bf94      	ite	ls
 800ffa6:	3030      	addls	r0, #48	; 0x30
 800ffa8:	3037      	addhi	r0, #55	; 0x37
 800ffaa:	f103 0e03 	add.w	lr, r3, #3
 800ffae:	2a09      	cmp	r2, #9
 800ffb0:	eb04 0c08 	add.w	ip, r4, r8
 800ffb4:	f88c 0020 	strb.w	r0, [ip, #32]
 800ffb8:	bf94      	ite	ls
 800ffba:	3230      	addls	r2, #48	; 0x30
 800ffbc:	3237      	addhi	r2, #55	; 0x37
 800ffbe:	eb04 000e 	add.w	r0, r4, lr
 800ffc2:	f880 2020 	strb.w	r2, [r0, #32]
 800ffc6:	f894 20a5 	ldrb.w	r2, [r4, #165]	; 0xa5
 800ffca:	f103 0c04 	add.w	ip, r3, #4
 800ffce:	0910      	lsrs	r0, r2, #4
 800ffd0:	2a9f      	cmp	r2, #159	; 0x9f
 800ffd2:	f002 020f 	and.w	r2, r2, #15
 800ffd6:	bf94      	ite	ls
 800ffd8:	3030      	addls	r0, #48	; 0x30
 800ffda:	3037      	addhi	r0, #55	; 0x37
 800ffdc:	3305      	adds	r3, #5
 800ffde:	2a09      	cmp	r2, #9
 800ffe0:	4423      	add	r3, r4
 800ffe2:	44a4      	add	ip, r4
 800ffe4:	bf94      	ite	ls
 800ffe6:	3230      	addls	r2, #48	; 0x30
 800ffe8:	3237      	addhi	r2, #55	; 0x37
 800ffea:	f88c 0020 	strb.w	r0, [ip, #32]
 800ffee:	f883 2020 	strb.w	r2, [r3, #32]
 800fff2:	2300      	movs	r3, #0
 800fff4:	f881 3026 	strb.w	r3, [r1, #38]	; 0x26
 800fff8:	f003 feb6 	bl	8013d68 <net::link_register_read()>
 800fffc:	7963      	ldrb	r3, [r4, #5]
 800fffe:	6020      	str	r0, [r4, #0]
 8010000:	2800      	cmp	r0, #0
 8010002:	f040 809c 	bne.w	801013e <Network::Init(NetworkParamsStore*)+0x24e>
 8010006:	2b00      	cmp	r3, #0
 8010008:	f040 80aa 	bne.w	8010160 <Network::Init(NetworkParamsStore*)+0x270>
 801000c:	9b08      	ldr	r3, [sp, #32]
 801000e:	2b00      	cmp	r3, #0
 8010010:	d173      	bne.n	80100fa <Network::Init(NetworkParamsStore*)+0x20a>
 8010012:	4620      	mov	r0, r4
 8010014:	f7ff ff5b 	bl	800fece <Network::SetDefaultIp()>
 8010018:	6963      	ldr	r3, [r4, #20]
 801001a:	69e2      	ldr	r2, [r4, #28]
 801001c:	9308      	str	r3, [sp, #32]
 801001e:	e9cd 2309 	strd	r2, r3, [sp, #36]	; 0x24
 8010022:	1de3      	adds	r3, r4, #7
 8010024:	f104 0905 	add.w	r9, r4, #5
 8010028:	9302      	str	r3, [sp, #8]
 801002a:	9300      	str	r3, [sp, #0]
 801002c:	463a      	mov	r2, r7
 801002e:	464b      	mov	r3, r9
 8010030:	4630      	mov	r0, r6
 8010032:	a908      	add	r1, sp, #32
 8010034:	f7f7 f8b8 	bl	80071a8 <net_init>
 8010038:	79e3      	ldrb	r3, [r4, #7]
 801003a:	b11b      	cbz	r3, 8010044 <Network::Init(NetworkParamsStore*)+0x154>
 801003c:	2104      	movs	r1, #4
 801003e:	4628      	mov	r0, r5
 8010040:	f001 fbd2 	bl	80117e8 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 8010044:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 8010048:	f89d a08d 	ldrb.w	sl, [sp, #141]	; 0x8d
 801004c:	9304      	str	r3, [sp, #16]
 801004e:	233c      	movs	r3, #60	; 0x3c
 8010050:	fb03 f30a 	mul.w	r3, r3, sl
 8010054:	f8df 8118 	ldr.w	r8, [pc, #280]	; 8010170 <Network::Init(NetworkParamsStore*)+0x280>
 8010058:	f8df b118 	ldr.w	fp, [pc, #280]	; 8010174 <Network::Init(NetworkParamsStore*)+0x284>
 801005c:	9303      	str	r3, [sp, #12]
 801005e:	79e3      	ldrb	r3, [r4, #7]
 8010060:	b393      	cbz	r3, 80100c8 <Network::Init(NetworkParamsStore*)+0x1d8>
 8010062:	f1ba 0f00 	cmp.w	sl, #0
 8010066:	d02f      	beq.n	80100c8 <Network::Init(NetworkParamsStore*)+0x1d8>
 8010068:	9b04      	ldr	r3, [sp, #16]
 801006a:	b36b      	cbz	r3, 80100c8 <Network::Init(NetworkParamsStore*)+0x1d8>
 801006c:	2104      	movs	r1, #4
 801006e:	f8d8 0000 	ldr.w	r0, [r8]
 8010072:	f002 f95b 	bl	801232c <LedBlink::SetMode(ledblink::Mode)>
 8010076:	2103      	movs	r1, #3
 8010078:	4628      	mov	r0, r5
 801007a:	f001 fbb5 	bl	80117e8 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 801007e:	2000      	movs	r0, #0
 8010080:	f002 fc12 	bl	80128a8 <time>
 8010084:	9005      	str	r0, [sp, #20]
 8010086:	2000      	movs	r0, #0
 8010088:	f002 fc0e 	bl	80128a8 <time>
 801008c:	9b05      	ldr	r3, [sp, #20]
 801008e:	493a      	ldr	r1, [pc, #232]	; (8010178 <Network::Init(NetworkParamsStore*)+0x288>)
 8010090:	1ac0      	subs	r0, r0, r3
 8010092:	9b03      	ldr	r3, [sp, #12]
 8010094:	4298      	cmp	r0, r3
 8010096:	db38      	blt.n	801010a <Network::Init(NetworkParamsStore*)+0x21a>
 8010098:	2101      	movs	r1, #1
 801009a:	4628      	mov	r0, r5
 801009c:	f001 fba4 	bl	80117e8 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 80100a0:	2101      	movs	r1, #1
 80100a2:	f8d8 0000 	ldr.w	r0, [r8]
 80100a6:	f002 f941 	bl	801232c <LedBlink::SetMode(ledblink::Mode)>
 80100aa:	2301      	movs	r3, #1
 80100ac:	7163      	strb	r3, [r4, #5]
 80100ae:	2300      	movs	r3, #0
 80100b0:	71e3      	strb	r3, [r4, #7]
 80100b2:	9b02      	ldr	r3, [sp, #8]
 80100b4:	463a      	mov	r2, r7
 80100b6:	9300      	str	r3, [sp, #0]
 80100b8:	4630      	mov	r0, r6
 80100ba:	464b      	mov	r3, r9
 80100bc:	a908      	add	r1, sp, #32
 80100be:	f7f7 f873 	bl	80071a8 <net_init>
 80100c2:	7963      	ldrb	r3, [r4, #5]
 80100c4:	2b00      	cmp	r3, #0
 80100c6:	d0ca      	beq.n	801005e <Network::Init(NetworkParamsStore*)+0x16e>
 80100c8:	9b08      	ldr	r3, [sp, #32]
 80100ca:	4628      	mov	r0, r5
 80100cc:	6163      	str	r3, [r4, #20]
 80100ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80100d0:	61e3      	str	r3, [r4, #28]
 80100d2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80100d4:	61a3      	str	r3, [r4, #24]
 80100d6:	f001 fb69 	bl	80117ac <NetworkDisplay::ShowIp()>
 80100da:	b025      	add	sp, #148	; 0x94
 80100dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80100e0:	4663      	mov	r3, ip
 80100e2:	f800 2f01 	strb.w	r2, [r0, #1]!
 80100e6:	e73b      	b.n	800ff60 <Network::Init(NetworkParamsStore*)+0x70>
 80100e8:	4638      	mov	r0, r7
 80100ea:	f10d 0145 	add.w	r1, sp, #69	; 0x45
 80100ee:	f7ff fe95 	bl	800fe1c <strncpy.constprop.0.isra.0>
 80100f2:	2300      	movs	r3, #0
 80100f4:	f884 305f 	strb.w	r3, [r4, #95]	; 0x5f
 80100f8:	e77e      	b.n	800fff8 <Network::Init(NetworkParamsStore*)+0x108>
 80100fa:	69e1      	ldr	r1, [r4, #28]
 80100fc:	e9d4 2305 	ldrd	r2, r3, [r4, #20]
 8010100:	4053      	eors	r3, r2
 8010102:	420b      	tst	r3, r1
 8010104:	bf18      	it	ne
 8010106:	920a      	strne	r2, [sp, #40]	; 0x28
 8010108:	e78b      	b.n	8010022 <Network::Init(NetworkParamsStore*)+0x132>
 801010a:	f8d8 3000 	ldr.w	r3, [r8]
 801010e:	f8d3 c00c 	ldr.w	ip, [r3, #12]
 8010112:	f1bc 0f00 	cmp.w	ip, #0
 8010116:	d0b6      	beq.n	8010086 <Network::Init(NetworkParamsStore*)+0x196>
 8010118:	6808      	ldr	r0, [r1, #0]
 801011a:	695a      	ldr	r2, [r3, #20]
 801011c:	1a80      	subs	r0, r0, r2
 801011e:	4584      	cmp	ip, r0
 8010120:	d8b1      	bhi.n	8010086 <Network::Init(NetworkParamsStore*)+0x196>
 8010122:	6808      	ldr	r0, [r1, #0]
 8010124:	6158      	str	r0, [r3, #20]
 8010126:	6918      	ldr	r0, [r3, #16]
 8010128:	2801      	cmp	r0, #1
 801012a:	f080 0201 	eor.w	r2, r0, #1
 801012e:	611a      	str	r2, [r3, #16]
 8010130:	bf16      	itet	ne
 8010132:	2301      	movne	r3, #1
 8010134:	f8cb 0014 	streq.w	r0, [fp, #20]
 8010138:	f8cb 3010 	strne.w	r3, [fp, #16]
 801013c:	e7a3      	b.n	8010086 <Network::Init(NetworkParamsStore*)+0x196>
 801013e:	b11b      	cbz	r3, 8010148 <Network::Init(NetworkParamsStore*)+0x258>
 8010140:	2300      	movs	r3, #0
 8010142:	e9c4 3306 	strd	r3, r3, [r4, #24]
 8010146:	9308      	str	r3, [sp, #32]
 8010148:	2300      	movs	r3, #0
 801014a:	f88d 301f 	strb.w	r3, [sp, #31]
 801014e:	f10d 031f 	add.w	r3, sp, #31
 8010152:	463a      	mov	r2, r7
 8010154:	4630      	mov	r0, r6
 8010156:	9300      	str	r3, [sp, #0]
 8010158:	a908      	add	r1, sp, #32
 801015a:	f7f7 f825 	bl	80071a8 <net_init>
 801015e:	e7b3      	b.n	80100c8 <Network::Init(NetworkParamsStore*)+0x1d8>
 8010160:	2101      	movs	r1, #1
 8010162:	4628      	mov	r0, r5
 8010164:	f001 fb40 	bl	80117e8 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 8010168:	e75b      	b.n	8010022 <Network::Init(NetworkParamsStore*)+0x132>
 801016a:	bf00      	nop
 801016c:	08016472 	stmdaeq	r1, {r1, r4, r5, r6, sl, sp, lr}
 8010170:	2000b864 	andcs	fp, r0, r4, ror #16
 8010174:	40011000 	andmi	r1, r1, r0
 8010178:	2000b87c 	andcs	fp, r0, ip, ror r8

0801017c <Network::SetIp(unsigned int)>:
 801017c:	7943      	ldrb	r3, [r0, #5]
 801017e:	b570      	push	{r4, r5, r6, lr}
 8010180:	4604      	mov	r4, r0
 8010182:	460d      	mov	r5, r1
 8010184:	2600      	movs	r6, #0
 8010186:	b113      	cbz	r3, 801018e <Network::SetIp(unsigned int)+0x12>
 8010188:	7146      	strb	r6, [r0, #5]
 801018a:	f7fe fec9 	bl	800ef20 <net_dhcp_release>
 801018e:	71e6      	strb	r6, [r4, #7]
 8010190:	b975      	cbnz	r5, 80101b0 <Network::SetIp(unsigned int)+0x34>
 8010192:	4620      	mov	r0, r4
 8010194:	f7ff fe9b 	bl	800fece <Network::SetDefaultIp()>
 8010198:	6960      	ldr	r0, [r4, #20]
 801019a:	f7fe fe85 	bl	800eea8 <net_set_ip>
 801019e:	34bc      	adds	r4, #188	; 0xbc
 80101a0:	4620      	mov	r0, r4
 80101a2:	f001 fb03 	bl	80117ac <NetworkDisplay::ShowIp()>
 80101a6:	4620      	mov	r0, r4
 80101a8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80101ac:	f001 bb04 	b.w	80117b8 <NetworkDisplay::ShowNetMask()>
 80101b0:	4628      	mov	r0, r5
 80101b2:	f7fe fe79 	bl	800eea8 <net_set_ip>
 80101b6:	f8d4 00b8 	ldr.w	r0, [r4, #184]	; 0xb8
 80101ba:	e9c4 5505 	strd	r5, r5, [r4, #20]
 80101be:	2800      	cmp	r0, #0
 80101c0:	d0ed      	beq.n	801019e <Network::SetIp(unsigned int)+0x22>
 80101c2:	6803      	ldr	r3, [r0, #0]
 80101c4:	4629      	mov	r1, r5
 80101c6:	689b      	ldr	r3, [r3, #8]
 80101c8:	4798      	blx	r3
 80101ca:	f8d4 00b8 	ldr.w	r0, [r4, #184]	; 0xb8
 80101ce:	2100      	movs	r1, #0
 80101d0:	6803      	ldr	r3, [r0, #0]
 80101d2:	699b      	ldr	r3, [r3, #24]
 80101d4:	4798      	blx	r3
 80101d6:	e7e2      	b.n	801019e <Network::SetIp(unsigned int)+0x22>

080101d8 <Network::SetNetmask(unsigned int)>:
 80101d8:	69c2      	ldr	r2, [r0, #28]
 80101da:	b510      	push	{r4, lr}
 80101dc:	428a      	cmp	r2, r1
 80101de:	4604      	mov	r4, r0
 80101e0:	d00f      	beq.n	8010202 <Network::SetNetmask(unsigned int)+0x2a>
 80101e2:	61c1      	str	r1, [r0, #28]
 80101e4:	f8d0 00b8 	ldr.w	r0, [r0, #184]	; 0xb8
 80101e8:	b110      	cbz	r0, 80101f0 <Network::SetNetmask(unsigned int)+0x18>
 80101ea:	6803      	ldr	r3, [r0, #0]
 80101ec:	68db      	ldr	r3, [r3, #12]
 80101ee:	4798      	blx	r3
 80101f0:	34bc      	adds	r4, #188	; 0xbc
 80101f2:	4620      	mov	r0, r4
 80101f4:	f001 fada 	bl	80117ac <NetworkDisplay::ShowIp()>
 80101f8:	4620      	mov	r0, r4
 80101fa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80101fe:	f001 badb 	b.w	80117b8 <NetworkDisplay::ShowNetMask()>
 8010202:	bd10      	pop	{r4, pc}

08010204 <Network::SetHostName(char const*)>:
 8010204:	b570      	push	{r4, r5, r6, lr}
 8010206:	4604      	mov	r4, r0
 8010208:	f100 0520 	add.w	r5, r0, #32
 801020c:	4628      	mov	r0, r5
 801020e:	f7ff fe05 	bl	800fe1c <strncpy.constprop.0.isra.0>
 8010212:	2300      	movs	r3, #0
 8010214:	f8d4 00b8 	ldr.w	r0, [r4, #184]	; 0xb8
 8010218:	f884 305f 	strb.w	r3, [r4, #95]	; 0x5f
 801021c:	b158      	cbz	r0, 8010236 <Network::SetHostName(char const*)+0x32>
 801021e:	6803      	ldr	r3, [r0, #0]
 8010220:	695e      	ldr	r6, [r3, #20]
 8010222:	462b      	mov	r3, r5
 8010224:	461a      	mov	r2, r3
 8010226:	7811      	ldrb	r1, [r2, #0]
 8010228:	3301      	adds	r3, #1
 801022a:	2900      	cmp	r1, #0
 801022c:	d1fa      	bne.n	8010224 <Network::SetHostName(char const*)+0x20>
 801022e:	1b52      	subs	r2, r2, r5
 8010230:	4629      	mov	r1, r5
 8010232:	b292      	uxth	r2, r2
 8010234:	47b0      	blx	r6
 8010236:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 801023a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801023e:	f001 bac7 	b.w	80117d0 <NetworkDisplay::ShowHostName()>

08010242 <Network::SetZeroconf()>:
 8010242:	b530      	push	{r4, r5, lr}
 8010244:	b085      	sub	sp, #20
 8010246:	4604      	mov	r4, r0
 8010248:	a801      	add	r0, sp, #4
 801024a:	f7fe fe73 	bl	800ef34 <net_set_zeroconf>
 801024e:	71e0      	strb	r0, [r4, #7]
 8010250:	b170      	cbz	r0, 8010270 <Network::SetZeroconf()+0x2e>
 8010252:	9b01      	ldr	r3, [sp, #4]
 8010254:	f8d4 00b8 	ldr.w	r0, [r4, #184]	; 0xb8
 8010258:	6163      	str	r3, [r4, #20]
 801025a:	9b02      	ldr	r3, [sp, #8]
 801025c:	61e3      	str	r3, [r4, #28]
 801025e:	9b03      	ldr	r3, [sp, #12]
 8010260:	61a3      	str	r3, [r4, #24]
 8010262:	2300      	movs	r3, #0
 8010264:	7163      	strb	r3, [r4, #5]
 8010266:	b118      	cbz	r0, 8010270 <Network::SetZeroconf()+0x2e>
 8010268:	6803      	ldr	r3, [r0, #0]
 801026a:	2101      	movs	r1, #1
 801026c:	699b      	ldr	r3, [r3, #24]
 801026e:	4798      	blx	r3
 8010270:	f104 05bc 	add.w	r5, r4, #188	; 0xbc
 8010274:	4628      	mov	r0, r5
 8010276:	f001 fa99 	bl	80117ac <NetworkDisplay::ShowIp()>
 801027a:	4628      	mov	r0, r5
 801027c:	f001 fa9c 	bl	80117b8 <NetworkDisplay::ShowNetMask()>
 8010280:	79e0      	ldrb	r0, [r4, #7]
 8010282:	b005      	add	sp, #20
 8010284:	bd30      	pop	{r4, r5, pc}
	...

08010288 <Network::EnableDhcp()>:
 8010288:	b5f0      	push	{r4, r5, r6, r7, lr}
 801028a:	4e25      	ldr	r6, [pc, #148]	; (8010320 <Network::EnableDhcp()+0x98>)
 801028c:	4604      	mov	r4, r0
 801028e:	6833      	ldr	r3, [r6, #0]
 8010290:	b085      	sub	sp, #20
 8010292:	781f      	ldrb	r7, [r3, #0]
 8010294:	b137      	cbz	r7, 80102a4 <Network::EnableDhcp()+0x1c>
 8010296:	2200      	movs	r2, #0
 8010298:	2104      	movs	r1, #4
 801029a:	f64f 70ff 	movw	r0, #65535	; 0xffff
 801029e:	701a      	strb	r2, [r3, #0]
 80102a0:	f002 fce0 	bl	8012c64 <fwdgt_config>
 80102a4:	f104 05bc 	add.w	r5, r4, #188	; 0xbc
 80102a8:	2101      	movs	r1, #1
 80102aa:	4628      	mov	r0, r5
 80102ac:	f001 fa9c 	bl	80117e8 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 80102b0:	1de2      	adds	r2, r4, #7
 80102b2:	f104 0120 	add.w	r1, r4, #32
 80102b6:	a801      	add	r0, sp, #4
 80102b8:	f7fe fe06 	bl	800eec8 <net_set_dhcp>
 80102bc:	79e3      	ldrb	r3, [r4, #7]
 80102be:	7160      	strb	r0, [r4, #5]
 80102c0:	b35b      	cbz	r3, 801031a <Network::EnableDhcp()+0x92>
 80102c2:	2104      	movs	r1, #4
 80102c4:	4628      	mov	r0, r5
 80102c6:	f001 fa8f 	bl	80117e8 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 80102ca:	b16f      	cbz	r7, 80102e8 <Network::EnableDhcp()+0x60>
 80102cc:	2102      	movs	r1, #2
 80102ce:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80102d2:	6836      	ldr	r6, [r6, #0]
 80102d4:	f002 fcc6 	bl	8012c64 <fwdgt_config>
 80102d8:	2801      	cmp	r0, #1
 80102da:	bf0c      	ite	eq
 80102dc:	2301      	moveq	r3, #1
 80102de:	2300      	movne	r3, #0
 80102e0:	7033      	strb	r3, [r6, #0]
 80102e2:	d101      	bne.n	80102e8 <Network::EnableDhcp()+0x60>
 80102e4:	f002 fcae 	bl	8012c44 <fwdgt_enable>
 80102e8:	9b01      	ldr	r3, [sp, #4]
 80102ea:	f8d4 00b8 	ldr.w	r0, [r4, #184]	; 0xb8
 80102ee:	6163      	str	r3, [r4, #20]
 80102f0:	9b02      	ldr	r3, [sp, #8]
 80102f2:	61e3      	str	r3, [r4, #28]
 80102f4:	9b03      	ldr	r3, [sp, #12]
 80102f6:	61a3      	str	r3, [r4, #24]
 80102f8:	b118      	cbz	r0, 8010302 <Network::EnableDhcp()+0x7a>
 80102fa:	6803      	ldr	r3, [r0, #0]
 80102fc:	7961      	ldrb	r1, [r4, #5]
 80102fe:	699b      	ldr	r3, [r3, #24]
 8010300:	4798      	blx	r3
 8010302:	4628      	mov	r0, r5
 8010304:	f001 fa52 	bl	80117ac <NetworkDisplay::ShowIp()>
 8010308:	4628      	mov	r0, r5
 801030a:	f001 fa55 	bl	80117b8 <NetworkDisplay::ShowNetMask()>
 801030e:	4628      	mov	r0, r5
 8010310:	f001 fa58 	bl	80117c4 <NetworkDisplay::ShowGatewayIp()>
 8010314:	7960      	ldrb	r0, [r4, #5]
 8010316:	b005      	add	sp, #20
 8010318:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801031a:	2102      	movs	r1, #2
 801031c:	e7d2      	b.n	80102c4 <Network::EnableDhcp()+0x3c>
 801031e:	bf00      	nop
 8010320:	2000b868 	andcs	fp, r0, r8, ror #16

08010324 <Network::SetQueuedStaticIp(unsigned int, unsigned int)>:
 8010324:	b109      	cbz	r1, 801032a <Network::SetQueuedStaticIp(unsigned int, unsigned int)+0x6>
 8010326:	f8c0 10c4 	str.w	r1, [r0, #196]	; 0xc4
 801032a:	b10a      	cbz	r2, 8010330 <Network::SetQueuedStaticIp(unsigned int, unsigned int)+0xc>
 801032c:	f8c0 20c8 	str.w	r2, [r0, #200]	; 0xc8
 8010330:	f8d0 30c0 	ldr.w	r3, [r0, #192]	; 0xc0
 8010334:	f043 0303 	orr.w	r3, r3, #3
 8010338:	f8c0 30c0 	str.w	r3, [r0, #192]	; 0xc0
 801033c:	4770      	bx	lr

0801033e <Network::ApplyQueuedConfig()>:
 801033e:	f8d0 30c0 	ldr.w	r3, [r0, #192]	; 0xc0
 8010342:	b510      	push	{r4, lr}
 8010344:	4604      	mov	r4, r0
 8010346:	b3c3      	cbz	r3, 80103ba <Network::ApplyQueuedConfig()+0x7c>
 8010348:	079a      	lsls	r2, r3, #30
 801034a:	d01a      	beq.n	8010382 <Network::ApplyQueuedConfig()+0x44>
 801034c:	079b      	lsls	r3, r3, #30
 801034e:	d509      	bpl.n	8010364 <Network::ApplyQueuedConfig()+0x26>
 8010350:	f8d0 10c8 	ldr.w	r1, [r0, #200]	; 0xc8
 8010354:	f7ff ff40 	bl	80101d8 <Network::SetNetmask(unsigned int)>
 8010358:	f8d4 30c0 	ldr.w	r3, [r4, #192]	; 0xc0
 801035c:	f023 0302 	bic.w	r3, r3, #2
 8010360:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8010364:	f8d4 30c0 	ldr.w	r3, [r4, #192]	; 0xc0
 8010368:	07d9      	lsls	r1, r3, #31
 801036a:	d50a      	bpl.n	8010382 <Network::ApplyQueuedConfig()+0x44>
 801036c:	4620      	mov	r0, r4
 801036e:	f8d4 10c4 	ldr.w	r1, [r4, #196]	; 0xc4
 8010372:	f7ff ff03 	bl	801017c <Network::SetIp(unsigned int)>
 8010376:	f8d4 30c0 	ldr.w	r3, [r4, #192]	; 0xc0
 801037a:	f023 0301 	bic.w	r3, r3, #1
 801037e:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 8010382:	f8d4 30c0 	ldr.w	r3, [r4, #192]	; 0xc0
 8010386:	075a      	lsls	r2, r3, #29
 8010388:	d508      	bpl.n	801039c <Network::ApplyQueuedConfig()+0x5e>
 801038a:	4620      	mov	r0, r4
 801038c:	f7ff ff7c 	bl	8010288 <Network::EnableDhcp()>
 8010390:	f8d4 30c0 	ldr.w	r3, [r4, #192]	; 0xc0
 8010394:	f023 0304 	bic.w	r3, r3, #4
 8010398:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 801039c:	f8d4 30c0 	ldr.w	r3, [r4, #192]	; 0xc0
 80103a0:	071b      	lsls	r3, r3, #28
 80103a2:	d508      	bpl.n	80103b6 <Network::ApplyQueuedConfig()+0x78>
 80103a4:	4620      	mov	r0, r4
 80103a6:	f7ff ff4c 	bl	8010242 <Network::SetZeroconf()>
 80103aa:	f8d4 30c0 	ldr.w	r3, [r4, #192]	; 0xc0
 80103ae:	f023 0308 	bic.w	r3, r3, #8
 80103b2:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 80103b6:	2001      	movs	r0, #1
 80103b8:	e000      	b.n	80103bc <Network::ApplyQueuedConfig()+0x7e>
 80103ba:	4618      	mov	r0, r3
 80103bc:	bd10      	pop	{r4, pc}
	...

080103c0 <Network::Print()>:
 80103c0:	b530      	push	{r4, r5, lr}
 80103c2:	4604      	mov	r4, r0
 80103c4:	b085      	sub	sp, #20
 80103c6:	4832      	ldr	r0, [pc, #200]	; (8010490 <Network::Print()+0xd0>)
 80103c8:	f7f8 fe8e 	bl	80090e8 <printf>
 80103cc:	f104 0120 	add.w	r1, r4, #32
 80103d0:	4830      	ldr	r0, [pc, #192]	; (8010494 <Network::Print()+0xd4>)
 80103d2:	f7f8 fe89 	bl	80090e8 <printf>
 80103d6:	68a1      	ldr	r1, [r4, #8]
 80103d8:	f104 02a6 	add.w	r2, r4, #166	; 0xa6
 80103dc:	482e      	ldr	r0, [pc, #184]	; (8010498 <Network::Print()+0xd8>)
 80103de:	f7f8 fe83 	bl	80090e8 <printf>
 80103e2:	69e0      	ldr	r0, [r4, #28]
 80103e4:	f004 fa36 	bl	8014854 <__popcountsi2>
 80103e8:	6965      	ldr	r5, [r4, #20]
 80103ea:	9001      	str	r0, [sp, #4]
 80103ec:	0e2b      	lsrs	r3, r5, #24
 80103ee:	9300      	str	r3, [sp, #0]
 80103f0:	f3c5 2207 	ubfx	r2, r5, #8, #8
 80103f4:	f3c5 4307 	ubfx	r3, r5, #16, #8
 80103f8:	b2e9      	uxtb	r1, r5
 80103fa:	4828      	ldr	r0, [pc, #160]	; (801049c <Network::Print()+0xdc>)
 80103fc:	f7f8 fe74 	bl	80090e8 <printf>
 8010400:	69e1      	ldr	r1, [r4, #28]
 8010402:	4827      	ldr	r0, [pc, #156]	; (80104a0 <Network::Print()+0xe0>)
 8010404:	0e0b      	lsrs	r3, r1, #24
 8010406:	f3c1 2207 	ubfx	r2, r1, #8, #8
 801040a:	9300      	str	r3, [sp, #0]
 801040c:	f3c1 4307 	ubfx	r3, r1, #16, #8
 8010410:	b2c9      	uxtb	r1, r1
 8010412:	f7f8 fe69 	bl	80090e8 <printf>
 8010416:	69a1      	ldr	r1, [r4, #24]
 8010418:	4822      	ldr	r0, [pc, #136]	; (80104a4 <Network::Print()+0xe4>)
 801041a:	0e0b      	lsrs	r3, r1, #24
 801041c:	f3c1 2207 	ubfx	r2, r1, #8, #8
 8010420:	9300      	str	r3, [sp, #0]
 8010422:	f3c1 4307 	ubfx	r3, r1, #16, #8
 8010426:	b2c9      	uxtb	r1, r1
 8010428:	f7f8 fe5e 	bl	80090e8 <printf>
 801042c:	69e3      	ldr	r3, [r4, #28]
 801042e:	6961      	ldr	r1, [r4, #20]
 8010430:	481d      	ldr	r0, [pc, #116]	; (80104a8 <Network::Print()+0xe8>)
 8010432:	ea61 0103 	orn	r1, r1, r3
 8010436:	0e0b      	lsrs	r3, r1, #24
 8010438:	f3c1 2207 	ubfx	r2, r1, #8, #8
 801043c:	9300      	str	r3, [sp, #0]
 801043e:	f3c1 4307 	ubfx	r3, r1, #16, #8
 8010442:	b2c9      	uxtb	r1, r1
 8010444:	f7f8 fe50 	bl	80090e8 <printf>
 8010448:	f894 30a5 	ldrb.w	r3, [r4, #165]	; 0xa5
 801044c:	f894 20a1 	ldrb.w	r2, [r4, #161]	; 0xa1
 8010450:	9302      	str	r3, [sp, #8]
 8010452:	f894 30a4 	ldrb.w	r3, [r4, #164]	; 0xa4
 8010456:	f894 10a0 	ldrb.w	r1, [r4, #160]	; 0xa0
 801045a:	9301      	str	r3, [sp, #4]
 801045c:	f894 30a3 	ldrb.w	r3, [r4, #163]	; 0xa3
 8010460:	4812      	ldr	r0, [pc, #72]	; (80104ac <Network::Print()+0xec>)
 8010462:	9300      	str	r3, [sp, #0]
 8010464:	f894 30a2 	ldrb.w	r3, [r4, #162]	; 0xa2
 8010468:	f7f8 fe3e 	bl	80090e8 <printf>
 801046c:	4b10      	ldr	r3, [pc, #64]	; (80104b0 <Network::Print()+0xf0>)
 801046e:	681b      	ldr	r3, [r3, #0]
 8010470:	79da      	ldrb	r2, [r3, #7]
 8010472:	b952      	cbnz	r2, 801048a <Network::Print()+0xca>
 8010474:	795b      	ldrb	r3, [r3, #5]
 8010476:	2b00      	cmp	r3, #0
 8010478:	bf14      	ite	ne
 801047a:	2144      	movne	r1, #68	; 0x44
 801047c:	2153      	moveq	r1, #83	; 0x53
 801047e:	480d      	ldr	r0, [pc, #52]	; (80104b4 <Network::Print()+0xf4>)
 8010480:	b005      	add	sp, #20
 8010482:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8010486:	f7f8 be2f 	b.w	80090e8 <printf>
 801048a:	215a      	movs	r1, #90	; 0x5a
 801048c:	e7f7      	b.n	801047e <Network::Print()+0xbe>
 801048e:	bf00      	nop
 8010490:	0801647e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, sl, sp, lr}
 8010494:	08016487 	stmdaeq	r1, {r0, r1, r2, r7, sl, sp, lr}
 8010498:	08016498 	stmdaeq	r1, {r3, r4, r7, sl, sp, lr}
 801049c:	080164ad 	stmdaeq	r1, {r0, r2, r3, r5, r7, sl, sp, lr}
 80104a0:	080164ca 	stmdaeq	r1, {r1, r3, r6, r7, sl, sp, lr}
 80104a4:	080164e4 	stmdaeq	r1, {r2, r5, r6, r7, sl, sp, lr}
 80104a8:	080164fe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r7, sl, sp, lr}
 80104ac:	08016518 	stmdaeq	r1, {r3, r4, r8, sl, sp, lr}
 80104b0:	2000b1a0 	andcs	fp, r0, r0, lsr #3
 80104b4:	08016544 	stmdaeq	r1, {r2, r6, r8, sl, sp, lr}

080104b8 <Network::TcpBegin(unsigned short)>:
 80104b8:	4608      	mov	r0, r1
 80104ba:	f7fe becd 	b.w	800f258 <tcp_begin>

080104be <Network::TcpRead(int, unsigned char const**)>:
 80104be:	4608      	mov	r0, r1
 80104c0:	4611      	mov	r1, r2
 80104c2:	f7fe bf07 	b.w	800f2d4 <tcp_read>

080104c6 <Network::TcpWrite(int, unsigned char const*, unsigned short)>:
 80104c6:	4608      	mov	r0, r1
 80104c8:	4611      	mov	r1, r2
 80104ca:	461a      	mov	r2, r3
 80104cc:	f7fe bede 	b.w	800f28c <tcp_write>

080104d0 <NetworkParams::NetworkParams(NetworkParamsStore*)>:
 80104d0:	b510      	push	{r4, lr}
 80104d2:	225e      	movs	r2, #94	; 0x5e
 80104d4:	4604      	mov	r4, r0
 80104d6:	f840 1b04 	str.w	r1, [r0], #4
 80104da:	2100      	movs	r1, #0
 80104dc:	f002 f8dc 	bl	8012698 <memset>
 80104e0:	2301      	movs	r3, #1
 80104e2:	4620      	mov	r0, r4
 80104e4:	7623      	strb	r3, [r4, #24]
 80104e6:	bd10      	pop	{r4, pc}

080104e8 <NetworkParams::Load()>:
 80104e8:	b508      	push	{r3, lr}
 80104ea:	2300      	movs	r3, #0
 80104ec:	4601      	mov	r1, r0
 80104ee:	6043      	str	r3, [r0, #4]
 80104f0:	6800      	ldr	r0, [r0, #0]
 80104f2:	b120      	cbz	r0, 80104fe <NetworkParams::Load()+0x16>
 80104f4:	6803      	ldr	r3, [r0, #0]
 80104f6:	3104      	adds	r1, #4
 80104f8:	68db      	ldr	r3, [r3, #12]
 80104fa:	4798      	blx	r3
 80104fc:	2001      	movs	r0, #1
 80104fe:	bd08      	pop	{r3, pc}

08010500 <NetworkParams::Load(char const*, unsigned int)>:
 8010500:	6803      	ldr	r3, [r0, #0]
 8010502:	b1d3      	cbz	r3, 801053a <NetworkParams::Load(char const*, unsigned int)+0x3a>
 8010504:	2300      	movs	r3, #0
 8010506:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8010508:	460d      	mov	r5, r1
 801050a:	4616      	mov	r6, r2
 801050c:	4604      	mov	r4, r0
 801050e:	6043      	str	r3, [r0, #4]
 8010510:	4602      	mov	r2, r0
 8010512:	490a      	ldr	r1, [pc, #40]	; (801053c <NetworkParams::Load(char const*, unsigned int)+0x3c>)
 8010514:	4668      	mov	r0, sp
 8010516:	f001 fabf 	bl	8011a98 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 801051a:	4632      	mov	r2, r6
 801051c:	4629      	mov	r1, r5
 801051e:	4668      	mov	r0, sp
 8010520:	f001 fabe 	bl	8011aa0 <ReadConfigFile::Read(char const*, unsigned int)>
 8010524:	4621      	mov	r1, r4
 8010526:	f851 0b04 	ldr.w	r0, [r1], #4
 801052a:	6803      	ldr	r3, [r0, #0]
 801052c:	689b      	ldr	r3, [r3, #8]
 801052e:	4798      	blx	r3
 8010530:	4668      	mov	r0, sp
 8010532:	f001 fab4 	bl	8011a9e <ReadConfigFile::~ReadConfigFile()>
 8010536:	b002      	add	sp, #8
 8010538:	bd70      	pop	{r4, r5, r6, pc}
 801053a:	4770      	bx	lr
 801053c:	08010661 	stmdaeq	r1, {r0, r5, r6, r9, sl}

08010540 <NetworkParams::callbackFunction(char const*)>:
 8010540:	b530      	push	{r4, r5, lr}
 8010542:	460d      	mov	r5, r1
 8010544:	b085      	sub	sp, #20
 8010546:	4604      	mov	r4, r0
 8010548:	493f      	ldr	r1, [pc, #252]	; (8010648 <NetworkParams::callbackFunction(char const*)+0x108>)
 801054a:	4628      	mov	r0, r5
 801054c:	f10d 0207 	add.w	r2, sp, #7
 8010550:	f001 fb52 	bl	8011bf8 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8010554:	b978      	cbnz	r0, 8010576 <NetworkParams::callbackFunction(char const*)+0x36>
 8010556:	f89d 2007 	ldrb.w	r2, [sp, #7]
 801055a:	6863      	ldr	r3, [r4, #4]
 801055c:	b142      	cbz	r2, 8010570 <NetworkParams::callbackFunction(char const*)+0x30>
 801055e:	f023 0301 	bic.w	r3, r3, #1
 8010562:	3a00      	subs	r2, #0
 8010564:	bf18      	it	ne
 8010566:	2201      	movne	r2, #1
 8010568:	6063      	str	r3, [r4, #4]
 801056a:	7622      	strb	r2, [r4, #24]
 801056c:	b005      	add	sp, #20
 801056e:	bd30      	pop	{r4, r5, pc}
 8010570:	f043 0301 	orr.w	r3, r3, #1
 8010574:	e7f5      	b.n	8010562 <NetworkParams::callbackFunction(char const*)+0x22>
 8010576:	4628      	mov	r0, r5
 8010578:	4934      	ldr	r1, [pc, #208]	; (801064c <NetworkParams::callbackFunction(char const*)+0x10c>)
 801057a:	f10d 0207 	add.w	r2, sp, #7
 801057e:	f001 fb3b 	bl	8011bf8 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8010582:	b980      	cbnz	r0, 80105a6 <NetworkParams::callbackFunction(char const*)+0x66>
 8010584:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8010588:	6863      	ldr	r3, [r4, #4]
 801058a:	1e51      	subs	r1, r2, #1
 801058c:	2904      	cmp	r1, #4
 801058e:	bf97      	itett	ls
 8010590:	f443 7380 	orrls.w	r3, r3, #256	; 0x100
 8010594:	f423 7380 	bichi.w	r3, r3, #256	; 0x100
 8010598:	6063      	strls	r3, [r4, #4]
 801059a:	f884 2061 	strbls.w	r2, [r4, #97]	; 0x61
 801059e:	bf84      	itt	hi
 80105a0:	6063      	strhi	r3, [r4, #4]
 80105a2:	f884 0061 	strbhi.w	r0, [r4, #97]	; 0x61
 80105a6:	4628      	mov	r0, r5
 80105a8:	4929      	ldr	r1, [pc, #164]	; (8010650 <NetworkParams::callbackFunction(char const*)+0x110>)
 80105aa:	aa02      	add	r2, sp, #8
 80105ac:	f001 fac5 	bl	8011b3a <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 80105b0:	b9c8      	cbnz	r0, 80105e6 <NetworkParams::callbackFunction(char const*)+0xa6>
 80105b2:	9b02      	ldr	r3, [sp, #8]
 80105b4:	b2d9      	uxtb	r1, r3
 80105b6:	29ac      	cmp	r1, #172	; 0xac
 80105b8:	f3c3 2207 	ubfx	r2, r3, #8, #8
 80105bc:	d009      	beq.n	80105d2 <NetworkParams::callbackFunction(char const*)+0x92>
 80105be:	29c0      	cmp	r1, #192	; 0xc0
 80105c0:	d00b      	beq.n	80105da <NetworkParams::callbackFunction(char const*)+0x9a>
 80105c2:	290a      	cmp	r1, #10
 80105c4:	d10c      	bne.n	80105e0 <NetworkParams::callbackFunction(char const*)+0xa0>
 80105c6:	60a3      	str	r3, [r4, #8]
 80105c8:	6863      	ldr	r3, [r4, #4]
 80105ca:	f043 0302 	orr.w	r3, r3, #2
 80105ce:	6063      	str	r3, [r4, #4]
 80105d0:	e7cc      	b.n	801056c <NetworkParams::callbackFunction(char const*)+0x2c>
 80105d2:	3a10      	subs	r2, #16
 80105d4:	2a0f      	cmp	r2, #15
 80105d6:	d8c9      	bhi.n	801056c <NetworkParams::callbackFunction(char const*)+0x2c>
 80105d8:	e7f5      	b.n	80105c6 <NetworkParams::callbackFunction(char const*)+0x86>
 80105da:	2aa8      	cmp	r2, #168	; 0xa8
 80105dc:	d1c6      	bne.n	801056c <NetworkParams::callbackFunction(char const*)+0x2c>
 80105de:	e7f2      	b.n	80105c6 <NetworkParams::callbackFunction(char const*)+0x86>
 80105e0:	2b00      	cmp	r3, #0
 80105e2:	d0f0      	beq.n	80105c6 <NetworkParams::callbackFunction(char const*)+0x86>
 80105e4:	e7c2      	b.n	801056c <NetworkParams::callbackFunction(char const*)+0x2c>
 80105e6:	4628      	mov	r0, r5
 80105e8:	491a      	ldr	r1, [pc, #104]	; (8010654 <NetworkParams::callbackFunction(char const*)+0x114>)
 80105ea:	aa02      	add	r2, sp, #8
 80105ec:	f001 faa5 	bl	8011b3a <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 80105f0:	b960      	cbnz	r0, 801060c <NetworkParams::callbackFunction(char const*)+0xcc>
 80105f2:	9b02      	ldr	r3, [sp, #8]
 80105f4:	2b00      	cmp	r3, #0
 80105f6:	d0b9      	beq.n	801056c <NetworkParams::callbackFunction(char const*)+0x2c>
 80105f8:	ba1a      	rev	r2, r3
 80105fa:	43d1      	mvns	r1, r2
 80105fc:	ea12 0251 	ands.w	r2, r2, r1, lsr #1
 8010600:	d1b4      	bne.n	801056c <NetworkParams::callbackFunction(char const*)+0x2c>
 8010602:	60e3      	str	r3, [r4, #12]
 8010604:	6863      	ldr	r3, [r4, #4]
 8010606:	f043 0304 	orr.w	r3, r3, #4
 801060a:	e7e0      	b.n	80105ce <NetworkParams::callbackFunction(char const*)+0x8e>
 801060c:	4628      	mov	r0, r5
 801060e:	4912      	ldr	r1, [pc, #72]	; (8010658 <NetworkParams::callbackFunction(char const*)+0x118>)
 8010610:	aa02      	add	r2, sp, #8
 8010612:	f001 fa92 	bl	8011b3a <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 8010616:	b928      	cbnz	r0, 8010624 <NetworkParams::callbackFunction(char const*)+0xe4>
 8010618:	9b02      	ldr	r3, [sp, #8]
 801061a:	6123      	str	r3, [r4, #16]
 801061c:	6863      	ldr	r3, [r4, #4]
 801061e:	f043 0308 	orr.w	r3, r3, #8
 8010622:	e7d4      	b.n	80105ce <NetworkParams::callbackFunction(char const*)+0x8e>
 8010624:	233f      	movs	r3, #63	; 0x3f
 8010626:	4628      	mov	r0, r5
 8010628:	9303      	str	r3, [sp, #12]
 801062a:	490c      	ldr	r1, [pc, #48]	; (801065c <NetworkParams::callbackFunction(char const*)+0x11c>)
 801062c:	ab03      	add	r3, sp, #12
 801062e:	f104 0219 	add.w	r2, r4, #25
 8010632:	f001 fa69 	bl	8011b08 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 8010636:	2800      	cmp	r0, #0
 8010638:	d198      	bne.n	801056c <NetworkParams::callbackFunction(char const*)+0x2c>
 801063a:	9b03      	ldr	r3, [sp, #12]
 801063c:	4423      	add	r3, r4
 801063e:	7658      	strb	r0, [r3, #25]
 8010640:	6863      	ldr	r3, [r4, #4]
 8010642:	f043 0320 	orr.w	r3, r3, #32
 8010646:	e7c2      	b.n	80105ce <NetworkParams::callbackFunction(char const*)+0x8e>
 8010648:	0801659c 	stmdaeq	r1, {r2, r3, r4, r7, r8, sl, sp, lr}
 801064c:	0801657a 	stmdaeq	r1, {r1, r3, r4, r5, r6, r8, sl, sp, lr}
 8010650:	0801655f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r8, sl, sp, lr}
 8010654:	08016593 	stmdaeq	r1, {r0, r1, r4, r7, r8, sl, sp, lr}
 8010658:	0801656a 	stmdaeq	r1, {r1, r3, r5, r6, r8, sl, sp, lr}
 801065c:	0801658a 	stmdaeq	r1, {r1, r3, r7, r8, sl, sp, lr}

08010660 <NetworkParams::staticCallbackFunction(void*, char const*)>:
 8010660:	f7ff bf6e 	b.w	8010540 <NetworkParams::callbackFunction(char const*)>

08010664 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)>:
 8010664:	b570      	push	{r4, r5, r6, lr}
 8010666:	4604      	mov	r4, r0
 8010668:	4615      	mov	r5, r2
 801066a:	461e      	mov	r6, r3
 801066c:	b086      	sub	sp, #24
 801066e:	3004      	adds	r0, #4
 8010670:	2900      	cmp	r1, #0
 8010672:	d02b      	beq.n	80106cc <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x68>
 8010674:	225e      	movs	r2, #94	; 0x5e
 8010676:	f001 fff8 	bl	801266a <memmove>
 801067a:	462a      	mov	r2, r5
 801067c:	4633      	mov	r3, r6
 801067e:	4970      	ldr	r1, [pc, #448]	; (8010840 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1dc>)
 8010680:	a803      	add	r0, sp, #12
 8010682:	f001 f969 	bl	8011958 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 8010686:	6863      	ldr	r3, [r4, #4]
 8010688:	079a      	lsls	r2, r3, #30
 801068a:	bf5f      	itttt	pl
 801068c:	4a6d      	ldrpl	r2, [pc, #436]	; (8010844 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e0>)
 801068e:	6812      	ldrpl	r2, [r2, #0]
 8010690:	6952      	ldrpl	r2, [r2, #20]
 8010692:	60a2      	strpl	r2, [r4, #8]
 8010694:	075e      	lsls	r6, r3, #29
 8010696:	bf5f      	itttt	pl
 8010698:	4a6a      	ldrpl	r2, [pc, #424]	; (8010844 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e0>)
 801069a:	6812      	ldrpl	r2, [r2, #0]
 801069c:	69d2      	ldrpl	r2, [r2, #28]
 801069e:	60e2      	strpl	r2, [r4, #12]
 80106a0:	071d      	lsls	r5, r3, #28
 80106a2:	bf58      	it	pl
 80106a4:	4a67      	ldrpl	r2, [pc, #412]	; (8010844 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e0>)
 80106a6:	f104 0519 	add.w	r5, r4, #25
 80106aa:	bf5e      	ittt	pl
 80106ac:	6812      	ldrpl	r2, [r2, #0]
 80106ae:	6992      	ldrpl	r2, [r2, #24]
 80106b0:	6122      	strpl	r2, [r4, #16]
 80106b2:	0698      	lsls	r0, r3, #26
 80106b4:	d418      	bmi.n	80106e8 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x84>
 80106b6:	4628      	mov	r0, r5
 80106b8:	223f      	movs	r2, #63	; 0x3f
 80106ba:	4b62      	ldr	r3, [pc, #392]	; (8010844 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e0>)
 80106bc:	681b      	ldr	r3, [r3, #0]
 80106be:	331f      	adds	r3, #31
 80106c0:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 80106c4:	b949      	cbnz	r1, 80106da <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x76>
 80106c6:	f001 ffe7 	bl	8012698 <memset>
 80106ca:	e00a      	b.n	80106e2 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x7e>
 80106cc:	6823      	ldr	r3, [r4, #0]
 80106ce:	4601      	mov	r1, r0
 80106d0:	681a      	ldr	r2, [r3, #0]
 80106d2:	4618      	mov	r0, r3
 80106d4:	68d2      	ldr	r2, [r2, #12]
 80106d6:	4790      	blx	r2
 80106d8:	e7cf      	b.n	801067a <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x16>
 80106da:	3a01      	subs	r2, #1
 80106dc:	f800 1b01 	strb.w	r1, [r0], #1
 80106e0:	d1ee      	bne.n	80106c0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x5c>
 80106e2:	2300      	movs	r3, #0
 80106e4:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 80106e8:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80106ec:	f8bd 6010 	ldrh.w	r6, [sp, #16]
 80106f0:	7e23      	ldrb	r3, [r4, #24]
 80106f2:	42b2      	cmp	r2, r6
 80106f4:	6861      	ldr	r1, [r4, #4]
 80106f6:	d21a      	bcs.n	801072e <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xca>
 80106f8:	9803      	ldr	r0, [sp, #12]
 80106fa:	07c9      	lsls	r1, r1, #31
 80106fc:	4410      	add	r0, r2
 80106fe:	eba6 0602 	sub.w	r6, r6, r2
 8010702:	f89d 2014 	ldrb.w	r2, [sp, #20]
 8010706:	d404      	bmi.n	8010712 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xae>
 8010708:	b922      	cbnz	r2, 8010714 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xb0>
 801070a:	9300      	str	r3, [sp, #0]
 801070c:	4a4e      	ldr	r2, [pc, #312]	; (8010848 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e4>)
 801070e:	4b4f      	ldr	r3, [pc, #316]	; (801084c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e8>)
 8010710:	e003      	b.n	801071a <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xb6>
 8010712:	b312      	cbz	r2, 801075a <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xf6>
 8010714:	9300      	str	r3, [sp, #0]
 8010716:	4a4e      	ldr	r2, [pc, #312]	; (8010850 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1ec>)
 8010718:	4b4c      	ldr	r3, [pc, #304]	; (801084c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e8>)
 801071a:	4631      	mov	r1, r6
 801071c:	f7f8 fd0c 	bl	8009138 <snprintf>
 8010720:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8010724:	4286      	cmp	r6, r0
 8010726:	bfa4      	itt	ge
 8010728:	181b      	addge	r3, r3, r0
 801072a:	f8ad 3012 	strhge.w	r3, [sp, #18]
 801072e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8010732:	f8bd 6010 	ldrh.w	r6, [sp, #16]
 8010736:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 801073a:	42b2      	cmp	r2, r6
 801073c:	6861      	ldr	r1, [r4, #4]
 801073e:	d21f      	bcs.n	8010780 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>
 8010740:	9803      	ldr	r0, [sp, #12]
 8010742:	05c9      	lsls	r1, r1, #23
 8010744:	4410      	add	r0, r2
 8010746:	eba6 0602 	sub.w	r6, r6, r2
 801074a:	f89d 2014 	ldrb.w	r2, [sp, #20]
 801074e:	d408      	bmi.n	8010762 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xfe>
 8010750:	b94a      	cbnz	r2, 8010766 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x102>
 8010752:	9300      	str	r3, [sp, #0]
 8010754:	4a3c      	ldr	r2, [pc, #240]	; (8010848 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e4>)
 8010756:	4b3f      	ldr	r3, [pc, #252]	; (8010854 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f0>)
 8010758:	e008      	b.n	801076c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x108>
 801075a:	9300      	str	r3, [sp, #0]
 801075c:	4a3e      	ldr	r2, [pc, #248]	; (8010858 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f4>)
 801075e:	4b3b      	ldr	r3, [pc, #236]	; (801084c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1e8>)
 8010760:	e7db      	b.n	801071a <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0xb6>
 8010762:	2a00      	cmp	r2, #0
 8010764:	d03c      	beq.n	80107e0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x17c>
 8010766:	9300      	str	r3, [sp, #0]
 8010768:	4a39      	ldr	r2, [pc, #228]	; (8010850 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1ec>)
 801076a:	4b3a      	ldr	r3, [pc, #232]	; (8010854 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f0>)
 801076c:	4631      	mov	r1, r6
 801076e:	f7f8 fce3 	bl	8009138 <snprintf>
 8010772:	4286      	cmp	r6, r0
 8010774:	bfa2      	ittt	ge
 8010776:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 801077a:	18c0      	addge	r0, r0, r3
 801077c:	f8ad 0012 	strhge.w	r0, [sp, #18]
 8010780:	4936      	ldr	r1, [pc, #216]	; (801085c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f8>)
 8010782:	a803      	add	r0, sp, #12
 8010784:	f001 f96e 	bl	8011a64 <PropertiesBuilder::AddComment(char const*)>
 8010788:	6863      	ldr	r3, [r4, #4]
 801078a:	68a2      	ldr	r2, [r4, #8]
 801078c:	4934      	ldr	r1, [pc, #208]	; (8010860 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1fc>)
 801078e:	f3c3 0340 	ubfx	r3, r3, #1, #1
 8010792:	a803      	add	r0, sp, #12
 8010794:	f001 f922 	bl	80119dc <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 8010798:	6863      	ldr	r3, [r4, #4]
 801079a:	68e2      	ldr	r2, [r4, #12]
 801079c:	4931      	ldr	r1, [pc, #196]	; (8010864 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x200>)
 801079e:	f3c3 0380 	ubfx	r3, r3, #2, #1
 80107a2:	a803      	add	r0, sp, #12
 80107a4:	f001 f91a 	bl	80119dc <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 80107a8:	6863      	ldr	r3, [r4, #4]
 80107aa:	6922      	ldr	r2, [r4, #16]
 80107ac:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 80107b0:	492d      	ldr	r1, [pc, #180]	; (8010868 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x204>)
 80107b2:	a803      	add	r0, sp, #12
 80107b4:	f001 f912 	bl	80119dc <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 80107b8:	6862      	ldr	r2, [r4, #4]
 80107ba:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80107be:	f8bd 4010 	ldrh.w	r4, [sp, #16]
 80107c2:	42a3      	cmp	r3, r4
 80107c4:	d21e      	bcs.n	8010804 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1a0>
 80107c6:	9803      	ldr	r0, [sp, #12]
 80107c8:	0692      	lsls	r2, r2, #26
 80107ca:	4418      	add	r0, r3
 80107cc:	eba4 0403 	sub.w	r4, r4, r3
 80107d0:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80107d4:	d408      	bmi.n	80107e8 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x184>
 80107d6:	b943      	cbnz	r3, 80107ea <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x186>
 80107d8:	4b24      	ldr	r3, [pc, #144]	; (801086c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x208>)
 80107da:	4a25      	ldr	r2, [pc, #148]	; (8010870 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x20c>)
 80107dc:	9500      	str	r5, [sp, #0]
 80107de:	e007      	b.n	80107f0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x18c>
 80107e0:	9300      	str	r3, [sp, #0]
 80107e2:	4a1d      	ldr	r2, [pc, #116]	; (8010858 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f4>)
 80107e4:	4b1b      	ldr	r3, [pc, #108]	; (8010854 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1f0>)
 80107e6:	e7c1      	b.n	801076c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x108>
 80107e8:	b32b      	cbz	r3, 8010836 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1d2>
 80107ea:	4b20      	ldr	r3, [pc, #128]	; (801086c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x208>)
 80107ec:	4a21      	ldr	r2, [pc, #132]	; (8010874 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x210>)
 80107ee:	9500      	str	r5, [sp, #0]
 80107f0:	4621      	mov	r1, r4
 80107f2:	f7f8 fca1 	bl	8009138 <snprintf>
 80107f6:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80107fa:	4284      	cmp	r4, r0
 80107fc:	bfa4      	itt	ge
 80107fe:	181b      	addge	r3, r3, r0
 8010800:	f8ad 3012 	strhge.w	r3, [sp, #18]
 8010804:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8010808:	b17b      	cbz	r3, 801082a <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x1c6>
 801080a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801080e:	9b03      	ldr	r3, [sp, #12]
 8010810:	4413      	add	r3, r2
 8010812:	227d      	movs	r2, #125	; 0x7d
 8010814:	f803 2c01 	strb.w	r2, [r3, #-1]
 8010818:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801081c:	9903      	ldr	r1, [sp, #12]
 801081e:	54ca      	strb	r2, [r1, r3]
 8010820:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8010824:	3301      	adds	r3, #1
 8010826:	f8ad 3012 	strh.w	r3, [sp, #18]
 801082a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801082e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8010830:	601a      	str	r2, [r3, #0]
 8010832:	b006      	add	sp, #24
 8010834:	bd70      	pop	{r4, r5, r6, pc}
 8010836:	4b0d      	ldr	r3, [pc, #52]	; (801086c <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x208>)
 8010838:	4a0f      	ldr	r2, [pc, #60]	; (8010878 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x214>)
 801083a:	9500      	str	r5, [sp, #0]
 801083c:	e7d8      	b.n	80107f0 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)+0x18c>
 801083e:	bf00      	nop
 8010840:	080165a5 	stmdaeq	r1, {r0, r2, r5, r7, r8, sl, sp, lr}
 8010844:	2000b1a0 	andcs	fp, r0, r0, lsr #3
 8010848:	08014ccd 	stmdaeq	r1, {r0, r2, r3, r6, r7, sl, fp, lr}
 801084c:	0801659c 	stmdaeq	r1, {r2, r3, r4, r7, r8, sl, sp, lr}
 8010850:	08014cc4 	stmdaeq	r1, {r2, r6, r7, sl, fp, lr}
 8010854:	0801657a 	stmdaeq	r1, {r1, r3, r4, r5, r6, r8, sl, sp, lr}
 8010858:	08014cce 	stmdaeq	r1, {r1, r2, r3, r6, r7, sl, fp, lr}
 801085c:	08016555 	stmdaeq	r1, {r0, r2, r4, r6, r8, sl, sp, lr}
 8010860:	0801655f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r8, sl, sp, lr}
 8010864:	08016593 	stmdaeq	r1, {r0, r1, r4, r7, r8, sl, sp, lr}
 8010868:	0801656a 	stmdaeq	r1, {r1, r3, r5, r6, r8, sl, sp, lr}
 801086c:	0801658a 	stmdaeq	r1, {r1, r3, r7, r8, sl, sp, lr}
 8010870:	08014ce0 	stmdaeq	r1, {r5, r6, r7, sl, fp, lr}
 8010874:	08014cd5 	stmdaeq	r1, {r0, r2, r4, r6, r7, sl, fp, lr}
 8010878:	08014ce1 	stmdaeq	r1, {r0, r5, r6, r7, sl, fp, lr}

0801087c <NetworkParams::Save(char*, unsigned int, unsigned int&)>:
 801087c:	b513      	push	{r0, r1, r4, lr}
 801087e:	6804      	ldr	r4, [r0, #0]
 8010880:	b914      	cbnz	r4, 8010888 <NetworkParams::Save(char*, unsigned int, unsigned int&)+0xc>
 8010882:	601c      	str	r4, [r3, #0]
 8010884:	b002      	add	sp, #8
 8010886:	bd10      	pop	{r4, pc}
 8010888:	9300      	str	r3, [sp, #0]
 801088a:	4613      	mov	r3, r2
 801088c:	460a      	mov	r2, r1
 801088e:	2100      	movs	r1, #0
 8010890:	f7ff fee8 	bl	8010664 <NetworkParams::Builder(networkparams::Params const*, char*, unsigned int, unsigned int&)>
 8010894:	e7f6      	b.n	8010884 <NetworkParams::Save(char*, unsigned int, unsigned int&)+0x8>

08010896 <NetworkParams::Dump()>:
 8010896:	4770      	bx	lr

08010898 <memcpy.isra.0>:
 8010898:	3801      	subs	r0, #1
 801089a:	440a      	add	r2, r1
 801089c:	4291      	cmp	r1, r2
 801089e:	d100      	bne.n	80108a2 <memcpy.isra.0+0xa>
 80108a0:	4770      	bx	lr
 80108a2:	f811 3b01 	ldrb.w	r3, [r1], #1
 80108a6:	f800 3f01 	strb.w	r3, [r0, #1]!
 80108aa:	e7f7      	b.n	801089c <memcpy.isra.0+0x4>

080108ac <arp_announce>:
 80108ac:	4803      	ldr	r0, [pc, #12]	; (80108bc <arp_announce+0x10>)
 80108ae:	69c3      	ldr	r3, [r0, #28]
 80108b0:	b113      	cbz	r3, 80108b8 <arp_announce+0xc>
 80108b2:	212a      	movs	r1, #42	; 0x2a
 80108b4:	f002 be74 	b.w	80135a0 <emac_eth_send>
 80108b8:	4770      	bx	lr
 80108ba:	bf00      	nop
 80108bc:	2000b1a4 	andcs	fp, r0, r4, lsr #3

080108c0 <arp_handle_request>:
 80108c0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80108c2:	2204      	movs	r2, #4
 80108c4:	f100 0126 	add.w	r1, r0, #38	; 0x26
 80108c8:	4604      	mov	r4, r0
 80108ca:	eb0d 0002 	add.w	r0, sp, r2
 80108ce:	f7ff ffe3 	bl	8010898 <memcpy.isra.0>
 80108d2:	4b0d      	ldr	r3, [pc, #52]	; (8010908 <arp_handle_request+0x48>)
 80108d4:	9a01      	ldr	r2, [sp, #4]
 80108d6:	69db      	ldr	r3, [r3, #28]
 80108d8:	429a      	cmp	r2, r3
 80108da:	d113      	bne.n	8010904 <arp_handle_request+0x44>
 80108dc:	2206      	movs	r2, #6
 80108de:	4d0b      	ldr	r5, [pc, #44]	; (801090c <arp_handle_request+0x4c>)
 80108e0:	18a1      	adds	r1, r4, r2
 80108e2:	4628      	mov	r0, r5
 80108e4:	f7ff ffd8 	bl	8010898 <memcpy.isra.0>
 80108e8:	f104 0116 	add.w	r1, r4, #22
 80108ec:	f105 0020 	add.w	r0, r5, #32
 80108f0:	2206      	movs	r2, #6
 80108f2:	f7ff ffd1 	bl	8010898 <memcpy.isra.0>
 80108f6:	69e3      	ldr	r3, [r4, #28]
 80108f8:	212a      	movs	r1, #42	; 0x2a
 80108fa:	4628      	mov	r0, r5
 80108fc:	f8c5 3026 	str.w	r3, [r5, #38]	; 0x26
 8010900:	f002 fe4e 	bl	80135a0 <emac_eth_send>
 8010904:	b003      	add	sp, #12
 8010906:	bd30      	pop	{r4, r5, pc}
 8010908:	2000b1a4 	andcs	fp, r0, r4, lsr #3
 801090c:	2000b1d0 	ldrdcs	fp, [r0], -r0

08010910 <arp_handle_reply>:
 8010910:	69c1      	ldr	r1, [r0, #28]
 8010912:	3016      	adds	r0, #22
 8010914:	f000 b80a 	b.w	801092c <arp_cache_update>

08010918 <arp_send_request>:
 8010918:	4b03      	ldr	r3, [pc, #12]	; (8010928 <arp_send_request+0x10>)
 801091a:	212a      	movs	r1, #42	; 0x2a
 801091c:	f8c3 0026 	str.w	r0, [r3, #38]	; 0x26
 8010920:	4618      	mov	r0, r3
 8010922:	f002 be3d 	b.w	80135a0 <emac_eth_send>
 8010926:	bf00      	nop
 8010928:	2000b1fc 	strdcs	fp, [r0], -ip

0801092c <arp_cache_update>:
 801092c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801092e:	4e11      	ldr	r6, [pc, #68]	; (8010974 <arp_cache_update+0x48>)
 8010930:	8833      	ldrh	r3, [r6, #0]
 8010932:	2b20      	cmp	r3, #32
 8010934:	d018      	beq.n	8010968 <arp_cache_update+0x3c>
 8010936:	2400      	movs	r4, #0
 8010938:	220c      	movs	r2, #12
 801093a:	4d0f      	ldr	r5, [pc, #60]	; (8010978 <arp_cache_update+0x4c>)
 801093c:	b2a7      	uxth	r7, r4
 801093e:	42bb      	cmp	r3, r7
 8010940:	d80b      	bhi.n	801095a <arp_cache_update+0x2e>
 8010942:	fb02 5203 	mla	r2, r2, r3, r5
 8010946:	1d84      	adds	r4, r0, #6
 8010948:	3203      	adds	r2, #3
 801094a:	42a0      	cmp	r0, r4
 801094c:	d10d      	bne.n	801096a <arp_cache_update+0x3e>
 801094e:	220c      	movs	r2, #12
 8010950:	435a      	muls	r2, r3
 8010952:	3301      	adds	r3, #1
 8010954:	50a9      	str	r1, [r5, r2]
 8010956:	8033      	strh	r3, [r6, #0]
 8010958:	e006      	b.n	8010968 <arp_cache_update+0x3c>
 801095a:	3401      	adds	r4, #1
 801095c:	fb02 5704 	mla	r7, r2, r4, r5
 8010960:	f857 7c0c 	ldr.w	r7, [r7, #-12]
 8010964:	428f      	cmp	r7, r1
 8010966:	d1e9      	bne.n	801093c <arp_cache_update+0x10>
 8010968:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801096a:	f810 7b01 	ldrb.w	r7, [r0], #1
 801096e:	f802 7f01 	strb.w	r7, [r2, #1]!
 8010972:	e7ea      	b.n	801094a <arp_cache_update+0x1e>
 8010974:	2000b3a8 	andcs	fp, r0, r8, lsr #7
 8010978:	2000b228 	andcs	fp, r0, r8, lsr #4

0801097c <arp_cache_lookup>:
 801097c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8010980:	2200      	movs	r2, #0
 8010982:	4606      	mov	r6, r0
 8010984:	460c      	mov	r4, r1
 8010986:	200c      	movs	r0, #12
 8010988:	f8df 8084 	ldr.w	r8, [pc, #132]	; 8010a10 <arp_cache_lookup+0x94>
 801098c:	fb00 f302 	mul.w	r3, r0, r2
 8010990:	f853 1008 	ldr.w	r1, [r3, r8]
 8010994:	42b1      	cmp	r1, r6
 8010996:	d10d      	bne.n	80109b4 <arp_cache_lookup+0x38>
 8010998:	3304      	adds	r3, #4
 801099a:	4443      	add	r3, r8
 801099c:	3c01      	subs	r4, #1
 801099e:	1d9a      	adds	r2, r3, #6
 80109a0:	4293      	cmp	r3, r2
 80109a2:	d102      	bne.n	80109aa <arp_cache_lookup+0x2e>
 80109a4:	4630      	mov	r0, r6
 80109a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80109aa:	f813 1b01 	ldrb.w	r1, [r3], #1
 80109ae:	f804 1f01 	strb.w	r1, [r4, #1]!
 80109b2:	e7f5      	b.n	80109a0 <arp_cache_lookup+0x24>
 80109b4:	b111      	cbz	r1, 80109bc <arp_cache_lookup+0x40>
 80109b6:	3201      	adds	r2, #1
 80109b8:	2a20      	cmp	r2, #32
 80109ba:	d1e7      	bne.n	801098c <arp_cache_lookup+0x10>
 80109bc:	2704      	movs	r7, #4
 80109be:	f8df a054 	ldr.w	sl, [pc, #84]	; 8010a14 <arp_cache_lookup+0x98>
 80109c2:	f8ba 5000 	ldrh.w	r5, [sl]
 80109c6:	3f01      	subs	r7, #1
 80109c8:	f017 07ff 	ands.w	r7, r7, #255	; 0xff
 80109cc:	d101      	bne.n	80109d2 <arp_cache_lookup+0x56>
 80109ce:	463e      	mov	r6, r7
 80109d0:	e7e8      	b.n	80109a4 <arp_cache_lookup+0x28>
 80109d2:	4630      	mov	r0, r6
 80109d4:	f7ff ffa0 	bl	8010918 <arp_send_request>
 80109d8:	f44f 3900 	mov.w	r9, #131072	; 0x20000
 80109dc:	f1b9 0901 	subs.w	r9, r9, #1
 80109e0:	f8ba 3000 	ldrh.w	r3, [sl]
 80109e4:	d011      	beq.n	8010a0a <arp_cache_lookup+0x8e>
 80109e6:	429d      	cmp	r5, r3
 80109e8:	d00c      	beq.n	8010a04 <arp_cache_lookup+0x88>
 80109ea:	230c      	movs	r3, #12
 80109ec:	fb03 8505 	mla	r5, r3, r5, r8
 80109f0:	3c01      	subs	r4, #1
 80109f2:	1d2b      	adds	r3, r5, #4
 80109f4:	350a      	adds	r5, #10
 80109f6:	42ab      	cmp	r3, r5
 80109f8:	d0d4      	beq.n	80109a4 <arp_cache_lookup+0x28>
 80109fa:	f813 2b01 	ldrb.w	r2, [r3], #1
 80109fe:	f804 2f01 	strb.w	r2, [r4, #1]!
 8010a02:	e7f8      	b.n	80109f6 <arp_cache_lookup+0x7a>
 8010a04:	f7f6 fdb8 	bl	8007578 <net_handle>
 8010a08:	e7e8      	b.n	80109dc <arp_cache_lookup+0x60>
 8010a0a:	429d      	cmp	r5, r3
 8010a0c:	d0db      	beq.n	80109c6 <arp_cache_lookup+0x4a>
 8010a0e:	e7ec      	b.n	80109ea <arp_cache_lookup+0x6e>
 8010a10:	2000b228 	andcs	fp, r0, r8, lsr #4
 8010a14:	2000b3a8 	andcs	fp, r0, r8, lsr #7

08010a18 <_parse_response>:
 8010a18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010a1c:	2400      	movs	r4, #0
 8010a1e:	460d      	mov	r5, r1
 8010a20:	46a3      	mov	fp, r4
 8010a22:	4627      	mov	r7, r4
 8010a24:	46a2      	mov	sl, r4
 8010a26:	46a1      	mov	r9, r4
 8010a28:	46a0      	mov	r8, r4
 8010a2a:	4e50      	ldr	r6, [pc, #320]	; (8010b6c <_parse_response+0x154>)
 8010a2c:	f5ad 7d17 	sub.w	sp, sp, #604	; 0x25c
 8010a30:	6833      	ldr	r3, [r6, #0]
 8010a32:	e9cd 4403 	strd	r4, r4, [sp, #12]
 8010a36:	e9cd 4405 	strd	r4, r4, [sp, #20]
 8010a3a:	9009      	str	r0, [sp, #36]	; 0x24
 8010a3c:	9402      	str	r4, [sp, #8]
 8010a3e:	9407      	str	r4, [sp, #28]
 8010a40:	9308      	str	r3, [sp, #32]
 8010a42:	f7f6 fd99 	bl	8007578 <net_handle>
 8010a46:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8010a4a:	9300      	str	r3, [sp, #0]
 8010a4c:	f44f 7209 	mov.w	r2, #548	; 0x224
 8010a50:	f89d 0024 	ldrb.w	r0, [sp, #36]	; 0x24
 8010a54:	ab0c      	add	r3, sp, #48	; 0x30
 8010a56:	a90d      	add	r1, sp, #52	; 0x34
 8010a58:	f7fe fcfe 	bl	800f458 <udp_recv>
 8010a5c:	2800      	cmp	r0, #0
 8010a5e:	d03f      	beq.n	8010ae0 <_parse_response+0xc8>
 8010a60:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 8010a64:	2b43      	cmp	r3, #67	; 0x43
 8010a66:	d13b      	bne.n	8010ae0 <_parse_response+0xc8>
 8010a68:	f10d 024f 	add.w	r2, sp, #79	; 0x4f
 8010a6c:	1e6b      	subs	r3, r5, #1
 8010a6e:	1d69      	adds	r1, r5, #5
 8010a70:	4299      	cmp	r1, r3
 8010a72:	d12f      	bne.n	8010ad4 <_parse_response+0xbc>
 8010a74:	2100      	movs	r1, #0
 8010a76:	ab0d      	add	r3, sp, #52	; 0x34
 8010a78:	181d      	adds	r5, r3, r0
 8010a7a:	468c      	mov	ip, r1
 8010a7c:	460e      	mov	r6, r1
 8010a7e:	4608      	mov	r0, r1
 8010a80:	ab49      	add	r3, sp, #292	; 0x124
 8010a82:	42ab      	cmp	r3, r5
 8010a84:	d337      	bcc.n	8010af6 <_parse_response+0xde>
 8010a86:	b141      	cbz	r1, 8010a9a <_parse_response+0x82>
 8010a88:	4b39      	ldr	r3, [pc, #228]	; (8010b70 <_parse_response+0x158>)
 8010a8a:	9a07      	ldr	r2, [sp, #28]
 8010a8c:	f883 8003 	strb.w	r8, [r3, #3]
 8010a90:	709a      	strb	r2, [r3, #2]
 8010a92:	9a06      	ldr	r2, [sp, #24]
 8010a94:	705a      	strb	r2, [r3, #1]
 8010a96:	9a05      	ldr	r2, [sp, #20]
 8010a98:	701a      	strb	r2, [r3, #0]
 8010a9a:	f1bc 0f00 	cmp.w	ip, #0
 8010a9e:	d007      	beq.n	8010ab0 <_parse_response+0x98>
 8010aa0:	4b34      	ldr	r3, [pc, #208]	; (8010b74 <_parse_response+0x15c>)
 8010aa2:	9a04      	ldr	r2, [sp, #16]
 8010aa4:	705c      	strb	r4, [r3, #1]
 8010aa6:	70da      	strb	r2, [r3, #3]
 8010aa8:	9a03      	ldr	r2, [sp, #12]
 8010aaa:	709a      	strb	r2, [r3, #2]
 8010aac:	9a02      	ldr	r2, [sp, #8]
 8010aae:	701a      	strb	r2, [r3, #0]
 8010ab0:	b13e      	cbz	r6, 8010ac2 <_parse_response+0xaa>
 8010ab2:	4b31      	ldr	r3, [pc, #196]	; (8010b78 <_parse_response+0x160>)
 8010ab4:	70df      	strb	r7, [r3, #3]
 8010ab6:	f883 a002 	strb.w	sl, [r3, #2]
 8010aba:	f883 9001 	strb.w	r9, [r3, #1]
 8010abe:	f883 b000 	strb.w	fp, [r3]
 8010ac2:	2802      	cmp	r0, #2
 8010ac4:	d102      	bne.n	8010acc <_parse_response+0xb4>
 8010ac6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8010ac8:	4b2c      	ldr	r3, [pc, #176]	; (8010b7c <_parse_response+0x164>)
 8010aca:	601a      	str	r2, [r3, #0]
 8010acc:	f50d 7d17 	add.w	sp, sp, #604	; 0x25c
 8010ad0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010ad4:	f812 ef01 	ldrb.w	lr, [r2, #1]!
 8010ad8:	f813 cf01 	ldrb.w	ip, [r3, #1]!
 8010adc:	45e6      	cmp	lr, ip
 8010ade:	d0c7      	beq.n	8010a70 <_parse_response+0x58>
 8010ae0:	6833      	ldr	r3, [r6, #0]
 8010ae2:	9a08      	ldr	r2, [sp, #32]
 8010ae4:	1a9b      	subs	r3, r3, r2
 8010ae6:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 8010aea:	d3aa      	bcc.n	8010a42 <_parse_response+0x2a>
 8010aec:	2800      	cmp	r0, #0
 8010aee:	d1c1      	bne.n	8010a74 <_parse_response+0x5c>
 8010af0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8010af4:	e7ea      	b.n	8010acc <_parse_response+0xb4>
 8010af6:	781a      	ldrb	r2, [r3, #0]
 8010af8:	2a35      	cmp	r2, #53	; 0x35
 8010afa:	d011      	beq.n	8010b20 <_parse_response+0x108>
 8010afc:	d808      	bhi.n	8010b10 <_parse_response+0xf8>
 8010afe:	2a01      	cmp	r2, #1
 8010b00:	d011      	beq.n	8010b26 <_parse_response+0x10e>
 8010b02:	2a03      	cmp	r2, #3
 8010b04:	d019      	beq.n	8010b3a <_parse_response+0x122>
 8010b06:	b14a      	cbz	r2, 8010b1c <_parse_response+0x104>
 8010b08:	1c9a      	adds	r2, r3, #2
 8010b0a:	785b      	ldrb	r3, [r3, #1]
 8010b0c:	4413      	add	r3, r2
 8010b0e:	e7b8      	b.n	8010a82 <_parse_response+0x6a>
 8010b10:	2a36      	cmp	r2, #54	; 0x36
 8010b12:	d01f      	beq.n	8010b54 <_parse_response+0x13c>
 8010b14:	2aff      	cmp	r2, #255	; 0xff
 8010b16:	d1f7      	bne.n	8010b08 <_parse_response+0xf0>
 8010b18:	462b      	mov	r3, r5
 8010b1a:	e7b2      	b.n	8010a82 <_parse_response+0x6a>
 8010b1c:	3301      	adds	r3, #1
 8010b1e:	e7b0      	b.n	8010a82 <_parse_response+0x6a>
 8010b20:	7898      	ldrb	r0, [r3, #2]
 8010b22:	3303      	adds	r3, #3
 8010b24:	e7ad      	b.n	8010a82 <_parse_response+0x6a>
 8010b26:	f893 b002 	ldrb.w	fp, [r3, #2]
 8010b2a:	f893 9003 	ldrb.w	r9, [r3, #3]
 8010b2e:	f893 a004 	ldrb.w	sl, [r3, #4]
 8010b32:	795f      	ldrb	r7, [r3, #5]
 8010b34:	4616      	mov	r6, r2
 8010b36:	3306      	adds	r3, #6
 8010b38:	e7a3      	b.n	8010a82 <_parse_response+0x6a>
 8010b3a:	789a      	ldrb	r2, [r3, #2]
 8010b3c:	78dc      	ldrb	r4, [r3, #3]
 8010b3e:	9202      	str	r2, [sp, #8]
 8010b40:	791a      	ldrb	r2, [r3, #4]
 8010b42:	f04f 0c01 	mov.w	ip, #1
 8010b46:	9203      	str	r2, [sp, #12]
 8010b48:	795a      	ldrb	r2, [r3, #5]
 8010b4a:	9204      	str	r2, [sp, #16]
 8010b4c:	785a      	ldrb	r2, [r3, #1]
 8010b4e:	4413      	add	r3, r2
 8010b50:	3302      	adds	r3, #2
 8010b52:	e796      	b.n	8010a82 <_parse_response+0x6a>
 8010b54:	789a      	ldrb	r2, [r3, #2]
 8010b56:	f893 8005 	ldrb.w	r8, [r3, #5]
 8010b5a:	9205      	str	r2, [sp, #20]
 8010b5c:	78da      	ldrb	r2, [r3, #3]
 8010b5e:	2101      	movs	r1, #1
 8010b60:	9206      	str	r2, [sp, #24]
 8010b62:	791a      	ldrb	r2, [r3, #4]
 8010b64:	3306      	adds	r3, #6
 8010b66:	9207      	str	r2, [sp, #28]
 8010b68:	e78b      	b.n	8010a82 <_parse_response+0x6a>
 8010b6a:	bf00      	nop
 8010b6c:	2000b87c 	andcs	fp, r0, ip, ror r8
 8010b70:	2000b5dc 	ldrdcs	fp, [r0], -ip
 8010b74:	2000b3ac 	andcs	fp, r0, ip, lsr #7
 8010b78:	2000b3b4 			; <UNDEFINED> instruction: 0x2000b3b4
 8010b7c:	2000b3b0 			; <UNDEFINED> instruction: 0x2000b3b0

08010b80 <memcpy.isra.0>:
 8010b80:	3801      	subs	r0, #1
 8010b82:	440a      	add	r2, r1
 8010b84:	4291      	cmp	r1, r2
 8010b86:	d100      	bne.n	8010b8a <memcpy.isra.0+0xa>
 8010b88:	4770      	bx	lr
 8010b8a:	f811 3b01 	ldrb.w	r3, [r1], #1
 8010b8e:	f800 3f01 	strb.w	r3, [r0, #1]!
 8010b92:	e7f7      	b.n	8010b84 <memcpy.isra.0+0x4>

08010b94 <dhcp_client>:
 8010b94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010b98:	b087      	sub	sp, #28
 8010b9a:	9203      	str	r2, [sp, #12]
 8010b9c:	4a77      	ldr	r2, [pc, #476]	; (8010d7c <dhcp_client+0x1e8>)
 8010b9e:	460f      	mov	r7, r1
 8010ba0:	4605      	mov	r5, r0
 8010ba2:	f44f 7309 	mov.w	r3, #548	; 0x224
 8010ba6:	4614      	mov	r4, r2
 8010ba8:	2100      	movs	r1, #0
 8010baa:	3b01      	subs	r3, #1
 8010bac:	f802 1b01 	strb.w	r1, [r2], #1
 8010bb0:	d1fb      	bne.n	8010baa <dhcp_client+0x16>
 8010bb2:	f240 1301 	movw	r3, #257	; 0x101
 8010bb6:	2206      	movs	r2, #6
 8010bb8:	4629      	mov	r1, r5
 8010bba:	4871      	ldr	r0, [pc, #452]	; (8010d80 <dhcp_client+0x1ec>)
 8010bbc:	8023      	strh	r3, [r4, #0]
 8010bbe:	70a2      	strb	r2, [r4, #2]
 8010bc0:	f7ff ffde 	bl	8010b80 <memcpy.isra.0>
 8010bc4:	4b6f      	ldr	r3, [pc, #444]	; (8010d84 <dhcp_client+0x1f0>)
 8010bc6:	2044      	movs	r0, #68	; 0x44
 8010bc8:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
 8010bcc:	f240 1335 	movw	r3, #309	; 0x135
 8010bd0:	f8a4 30f0 	strh.w	r3, [r4, #240]	; 0xf0
 8010bd4:	f7fe fc06 	bl	800f3e4 <udp_bind>
 8010bd8:	1e06      	subs	r6, r0, #0
 8010bda:	f2c0 80c9 	blt.w	8010d70 <dhcp_client+0x1dc>
 8010bde:	f04f 0915 	mov.w	r9, #21
 8010be2:	f8df a198 	ldr.w	sl, [pc, #408]	; 8010d7c <dhcp_client+0x1e8>
 8010be6:	f1b9 0901 	subs.w	r9, r9, #1
 8010bea:	d11f      	bne.n	8010c2c <dhcp_client+0x98>
 8010bec:	464c      	mov	r4, r9
 8010bee:	2044      	movs	r0, #68	; 0x44
 8010bf0:	f7fe fc12 	bl	800f418 <udp_unbind>
 8010bf4:	2c00      	cmp	r4, #0
 8010bf6:	f000 80be 	beq.w	8010d76 <dhcp_client+0x1e2>
 8010bfa:	2204      	movs	r2, #4
 8010bfc:	4962      	ldr	r1, [pc, #392]	; (8010d88 <dhcp_client+0x1f4>)
 8010bfe:	a805      	add	r0, sp, #20
 8010c00:	f7ff ffbe 	bl	8010b80 <memcpy.isra.0>
 8010c04:	9b05      	ldr	r3, [sp, #20]
 8010c06:	2204      	movs	r2, #4
 8010c08:	4960      	ldr	r1, [pc, #384]	; (8010d8c <dhcp_client+0x1f8>)
 8010c0a:	603b      	str	r3, [r7, #0]
 8010c0c:	a805      	add	r0, sp, #20
 8010c0e:	f7ff ffb7 	bl	8010b80 <memcpy.isra.0>
 8010c12:	9b05      	ldr	r3, [sp, #20]
 8010c14:	a805      	add	r0, sp, #20
 8010c16:	60bb      	str	r3, [r7, #8]
 8010c18:	2204      	movs	r2, #4
 8010c1a:	495d      	ldr	r1, [pc, #372]	; (8010d90 <dhcp_client+0x1fc>)
 8010c1c:	f7ff ffb0 	bl	8010b80 <memcpy.isra.0>
 8010c20:	2000      	movs	r0, #0
 8010c22:	9b05      	ldr	r3, [sp, #20]
 8010c24:	607b      	str	r3, [r7, #4]
 8010c26:	b007      	add	sp, #28
 8010c28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010c2c:	f643 5301 	movw	r3, #15617	; 0x3d01
 8010c30:	f240 1807 	movw	r8, #263	; 0x107
 8010c34:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 8010c38:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 8010c3c:	782b      	ldrb	r3, [r5, #0]
 8010c3e:	4a55      	ldr	r2, [pc, #340]	; (8010d94 <dhcp_client+0x200>)
 8010c40:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 8010c44:	786b      	ldrb	r3, [r5, #1]
 8010c46:	fa5f fb86 	uxtb.w	fp, r6
 8010c4a:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 8010c4e:	78ab      	ldrb	r3, [r5, #2]
 8010c50:	4651      	mov	r1, sl
 8010c52:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 8010c56:	78eb      	ldrb	r3, [r5, #3]
 8010c58:	4658      	mov	r0, fp
 8010c5a:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 8010c5e:	792b      	ldrb	r3, [r5, #4]
 8010c60:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 8010c64:	796b      	ldrb	r3, [r5, #5]
 8010c66:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 8010c6a:	4b4b      	ldr	r3, [pc, #300]	; (8010d98 <dhcp_client+0x204>)
 8010c6c:	e9c4 233f 	strd	r2, r3, [r4, #252]	; 0xfc
 8010c70:	23ff      	movs	r3, #255	; 0xff
 8010c72:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8010c76:	2343      	movs	r3, #67	; 0x43
 8010c78:	f240 1205 	movw	r2, #261	; 0x105
 8010c7c:	9300      	str	r3, [sp, #0]
 8010c7e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8010c82:	f7fe fc45 	bl	800f510 <udp_send>
 8010c86:	4629      	mov	r1, r5
 8010c88:	4630      	mov	r0, r6
 8010c8a:	f7ff fec5 	bl	8010a18 <_parse_response>
 8010c8e:	2802      	cmp	r0, #2
 8010c90:	d1a9      	bne.n	8010be6 <dhcp_client+0x52>
 8010c92:	f643 5303 	movw	r3, #15619	; 0x3d03
 8010c96:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 8010c9a:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 8010c9e:	782b      	ldrb	r3, [r5, #0]
 8010ca0:	f8df c0f8 	ldr.w	ip, [pc, #248]	; 8010d9c <dhcp_client+0x208>
 8010ca4:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 8010ca8:	786b      	ldrb	r3, [r5, #1]
 8010caa:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 8010cae:	78ab      	ldrb	r3, [r5, #2]
 8010cb0:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 8010cb4:	78eb      	ldrb	r3, [r5, #3]
 8010cb6:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 8010cba:	792b      	ldrb	r3, [r5, #4]
 8010cbc:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 8010cc0:	796b      	ldrb	r3, [r5, #5]
 8010cc2:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 8010cc6:	f240 4332 	movw	r3, #1074	; 0x432
 8010cca:	f8a4 30fc 	strh.w	r3, [r4, #252]	; 0xfc
 8010cce:	4b2e      	ldr	r3, [pc, #184]	; (8010d88 <dhcp_client+0x1f4>)
 8010cd0:	881a      	ldrh	r2, [r3, #0]
 8010cd2:	885b      	ldrh	r3, [r3, #2]
 8010cd4:	f8a4 20fe 	strh.w	r2, [r4, #254]	; 0xfe
 8010cd8:	f8a4 3100 	strh.w	r3, [r4, #256]	; 0x100
 8010cdc:	f240 4336 	movw	r3, #1078	; 0x436
 8010ce0:	f8a4 3102 	strh.w	r3, [r4, #258]	; 0x102
 8010ce4:	4b2e      	ldr	r3, [pc, #184]	; (8010da0 <dhcp_client+0x20c>)
 8010ce6:	221e      	movs	r2, #30
 8010ce8:	681b      	ldr	r3, [r3, #0]
 8010cea:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
 8010cee:	230c      	movs	r3, #12
 8010cf0:	f8a4 3108 	strh.w	r3, [r4, #264]	; 0x108
 8010cf4:	9b03      	ldr	r3, [sp, #12]
 8010cf6:	1e58      	subs	r0, r3, #1
 8010cf8:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 8010cfc:	f1a2 0e1e 	sub.w	lr, r2, #30
 8010d00:	1c51      	adds	r1, r2, #1
 8010d02:	bb8b      	cbnz	r3, 8010d68 <dhcp_client+0x1d4>
 8010d04:	2037      	movs	r0, #55	; 0x37
 8010d06:	18a3      	adds	r3, r4, r2
 8010d08:	f883 00ec 	strb.w	r0, [r3, #236]	; 0xec
 8010d0c:	2006      	movs	r0, #6
 8010d0e:	4421      	add	r1, r4
 8010d10:	f881 00ec 	strb.w	r0, [r1, #236]	; 0xec
 8010d14:	2103      	movs	r1, #3
 8010d16:	f883 10ef 	strb.w	r1, [r3, #239]	; 0xef
 8010d1a:	210f      	movs	r1, #15
 8010d1c:	f883 10f1 	strb.w	r1, [r3, #241]	; 0xf1
 8010d20:	213a      	movs	r1, #58	; 0x3a
 8010d22:	f883 10f2 	strb.w	r1, [r3, #242]	; 0xf2
 8010d26:	213b      	movs	r1, #59	; 0x3b
 8010d28:	f04f 0801 	mov.w	r8, #1
 8010d2c:	f883 10f3 	strb.w	r1, [r3, #243]	; 0xf3
 8010d30:	21ff      	movs	r1, #255	; 0xff
 8010d32:	f883 00f0 	strb.w	r0, [r3, #240]	; 0xf0
 8010d36:	f883 10f4 	strb.w	r1, [r3, #244]	; 0xf4
 8010d3a:	f883 80ee 	strb.w	r8, [r3, #238]	; 0xee
 8010d3e:	2343      	movs	r3, #67	; 0x43
 8010d40:	32f5      	adds	r2, #245	; 0xf5
 8010d42:	f884 e109 	strb.w	lr, [r4, #265]	; 0x109
 8010d46:	4651      	mov	r1, sl
 8010d48:	9300      	str	r3, [sp, #0]
 8010d4a:	b292      	uxth	r2, r2
 8010d4c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8010d50:	4658      	mov	r0, fp
 8010d52:	f7fe fbdd 	bl	800f510 <udp_send>
 8010d56:	4629      	mov	r1, r5
 8010d58:	4630      	mov	r0, r6
 8010d5a:	f7ff fe5d 	bl	8010a18 <_parse_response>
 8010d5e:	2805      	cmp	r0, #5
 8010d60:	f47f af41 	bne.w	8010be6 <dhcp_client+0x52>
 8010d64:	4644      	mov	r4, r8
 8010d66:	e742      	b.n	8010bee <dhcp_client+0x5a>
 8010d68:	460a      	mov	r2, r1
 8010d6a:	f80c 3f01 	strb.w	r3, [ip, #1]!
 8010d6e:	e7c3      	b.n	8010cf8 <dhcp_client+0x164>
 8010d70:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8010d74:	e757      	b.n	8010c26 <dhcp_client+0x92>
 8010d76:	f06f 0001 	mvn.w	r0, #1
 8010d7a:	e754      	b.n	8010c26 <dhcp_client+0x92>
 8010d7c:	2000b3b8 			; <UNDEFINED> instruction: 0x2000b3b8
 8010d80:	2000b3d4 	ldrdcs	fp, [r0], -r4
 8010d84:	63538263 	cmpvs	r3, #805306374	; 0x30000006
 8010d88:	2000b3b0 			; <UNDEFINED> instruction: 0x2000b3b0
 8010d8c:	2000b3ac 	andcs	fp, r0, ip, lsr #7
 8010d90:	2000b3b4 			; <UNDEFINED> instruction: 0x2000b3b4
 8010d94:	03010637 	movweq	r0, #5687	; 0x1637
 8010d98:	3b3a0f06 	blcc	8e949b8 <__exidx_end+0xe7dd38>
 8010d9c:	2000b4c1 	andcs	fp, r0, r1, asr #9
 8010da0:	2000b5dc 	ldrdcs	fp, [r0], -ip

08010da4 <dhcp_client_release>:
 8010da4:	b507      	push	{r0, r1, r2, lr}
 8010da6:	2044      	movs	r0, #68	; 0x44
 8010da8:	f7fe fb1c 	bl	800f3e4 <udp_bind>
 8010dac:	f243 6307 	movw	r3, #13831	; 0x3607
 8010db0:	4911      	ldr	r1, [pc, #68]	; (8010df8 <dhcp_client_release+0x54>)
 8010db2:	b2c0      	uxtb	r0, r0
 8010db4:	f8a1 30f2 	strh.w	r3, [r1, #242]	; 0xf2
 8010db8:	2304      	movs	r3, #4
 8010dba:	f881 30f4 	strb.w	r3, [r1, #244]	; 0xf4
 8010dbe:	4b0f      	ldr	r3, [pc, #60]	; (8010dfc <dhcp_client_release+0x58>)
 8010dc0:	781a      	ldrb	r2, [r3, #0]
 8010dc2:	f881 20f5 	strb.w	r2, [r1, #245]	; 0xf5
 8010dc6:	785a      	ldrb	r2, [r3, #1]
 8010dc8:	f881 20f6 	strb.w	r2, [r1, #246]	; 0xf6
 8010dcc:	789a      	ldrb	r2, [r3, #2]
 8010dce:	78db      	ldrb	r3, [r3, #3]
 8010dd0:	f881 20f7 	strb.w	r2, [r1, #247]	; 0xf7
 8010dd4:	f881 30f8 	strb.w	r3, [r1, #248]	; 0xf8
 8010dd8:	23ff      	movs	r3, #255	; 0xff
 8010dda:	f881 30f9 	strb.w	r3, [r1, #249]	; 0xf9
 8010dde:	2343      	movs	r3, #67	; 0x43
 8010de0:	22fa      	movs	r2, #250	; 0xfa
 8010de2:	9300      	str	r3, [sp, #0]
 8010de4:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8010de8:	f7fe fb92 	bl	800f510 <udp_send>
 8010dec:	2044      	movs	r0, #68	; 0x44
 8010dee:	b003      	add	sp, #12
 8010df0:	f85d eb04 	ldr.w	lr, [sp], #4
 8010df4:	f7fe bb10 	b.w	800f418 <udp_unbind>
 8010df8:	2000b3b8 			; <UNDEFINED> instruction: 0x2000b3b8
 8010dfc:	2000b5dc 	ldrdcs	fp, [r0], -ip

08010e00 <memcpy.isra.0>:
 8010e00:	3801      	subs	r0, #1
 8010e02:	440a      	add	r2, r1
 8010e04:	4291      	cmp	r1, r2
 8010e06:	d100      	bne.n	8010e0a <memcpy.isra.0+0xa>
 8010e08:	4770      	bx	lr
 8010e0a:	f811 3b01 	ldrb.w	r3, [r1], #1
 8010e0e:	f800 3f01 	strb.w	r3, [r0, #1]!
 8010e12:	e7f7      	b.n	8010e04 <memcpy.isra.0+0x4>

08010e14 <_send_report>:
 8010e14:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8010e16:	491c      	ldr	r1, [pc, #112]	; (8010e88 <_send_report+0x74>)
 8010e18:	4c1c      	ldr	r4, [pc, #112]	; (8010e8c <_send_report+0x78>)
 8010e1a:	f3c0 2306 	ubfx	r3, r0, #8, #7
 8010e1e:	9001      	str	r0, [sp, #4]
 8010e20:	70cb      	strb	r3, [r1, #3]
 8010e22:	f3c0 4307 	ubfx	r3, r0, #16, #8
 8010e26:	f3c0 6007 	ubfx	r0, r0, #24, #8
 8010e2a:	710b      	strb	r3, [r1, #4]
 8010e2c:	7148      	strb	r0, [r1, #5]
 8010e2e:	2206      	movs	r2, #6
 8010e30:	4620      	mov	r0, r4
 8010e32:	f7ff ffe5 	bl	8010e00 <memcpy.isra.0>
 8010e36:	2204      	movs	r2, #4
 8010e38:	2700      	movs	r7, #0
 8010e3a:	4d15      	ldr	r5, [pc, #84]	; (8010e90 <_send_report+0x7c>)
 8010e3c:	eb0d 0102 	add.w	r1, sp, r2
 8010e40:	882b      	ldrh	r3, [r5, #0]
 8010e42:	f104 001e 	add.w	r0, r4, #30
 8010e46:	f104 060e 	add.w	r6, r4, #14
 8010e4a:	8263      	strh	r3, [r4, #18]
 8010e4c:	f7ff ffd8 	bl	8010e00 <memcpy.isra.0>
 8010e50:	2118      	movs	r1, #24
 8010e52:	4630      	mov	r0, r6
 8010e54:	8327      	strh	r7, [r4, #24]
 8010e56:	f000 f8c6 	bl	8010fe6 <net_chksum>
 8010e5a:	2204      	movs	r2, #4
 8010e5c:	8320      	strh	r0, [r4, #24]
 8010e5e:	eb0d 0102 	add.w	r1, sp, r2
 8010e62:	f104 002a 	add.w	r0, r4, #42	; 0x2a
 8010e66:	f7ff ffcb 	bl	8010e00 <memcpy.isra.0>
 8010e6a:	2120      	movs	r1, #32
 8010e6c:	4630      	mov	r0, r6
 8010e6e:	8527      	strh	r7, [r4, #40]	; 0x28
 8010e70:	f000 f8b9 	bl	8010fe6 <net_chksum>
 8010e74:	212e      	movs	r1, #46	; 0x2e
 8010e76:	8520      	strh	r0, [r4, #40]	; 0x28
 8010e78:	4620      	mov	r0, r4
 8010e7a:	f002 fb91 	bl	80135a0 <emac_eth_send>
 8010e7e:	882b      	ldrh	r3, [r5, #0]
 8010e80:	3301      	adds	r3, #1
 8010e82:	802b      	strh	r3, [r5, #0]
 8010e84:	b003      	add	sp, #12
 8010e86:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010e88:	2000b738 	andcs	fp, r0, r8, lsr r7
 8010e8c:	2000b740 	andcs	fp, r0, r0, asr #14
 8010e90:	2000b700 	andcs	fp, r0, r0, lsl #14

08010e94 <igmp_set_ip>:
 8010e94:	b507      	push	{r0, r1, r2, lr}
 8010e96:	2204      	movs	r2, #4
 8010e98:	6803      	ldr	r3, [r0, #0]
 8010e9a:	eb0d 0102 	add.w	r1, sp, r2
 8010e9e:	4806      	ldr	r0, [pc, #24]	; (8010eb8 <igmp_set_ip+0x24>)
 8010ea0:	9301      	str	r3, [sp, #4]
 8010ea2:	f7ff ffad 	bl	8010e00 <memcpy.isra.0>
 8010ea6:	2204      	movs	r2, #4
 8010ea8:	4804      	ldr	r0, [pc, #16]	; (8010ebc <igmp_set_ip+0x28>)
 8010eaa:	eb0d 0102 	add.w	r1, sp, r2
 8010eae:	f7ff ffa7 	bl	8010e00 <memcpy.isra.0>
 8010eb2:	b003      	add	sp, #12
 8010eb4:	f85d fb04 	ldr.w	pc, [sp], #4
 8010eb8:	2000b75a 	andcs	fp, r0, sl, asr r7
 8010ebc:	2000b722 	andcs	fp, r0, r2, lsr #14

08010ec0 <igmp_timer>:
 8010ec0:	b570      	push	{r4, r5, r6, lr}
 8010ec2:	2500      	movs	r5, #0
 8010ec4:	2602      	movs	r6, #2
 8010ec6:	4c0a      	ldr	r4, [pc, #40]	; (8010ef0 <igmp_timer+0x30>)
 8010ec8:	7963      	ldrb	r3, [r4, #5]
 8010eca:	2b01      	cmp	r3, #1
 8010ecc:	d109      	bne.n	8010ee2 <igmp_timer+0x22>
 8010ece:	7923      	ldrb	r3, [r4, #4]
 8010ed0:	b13b      	cbz	r3, 8010ee2 <igmp_timer+0x22>
 8010ed2:	3b01      	subs	r3, #1
 8010ed4:	b2db      	uxtb	r3, r3
 8010ed6:	7123      	strb	r3, [r4, #4]
 8010ed8:	b91b      	cbnz	r3, 8010ee2 <igmp_timer+0x22>
 8010eda:	6820      	ldr	r0, [r4, #0]
 8010edc:	f7ff ff9a 	bl	8010e14 <_send_report>
 8010ee0:	7166      	strb	r6, [r4, #5]
 8010ee2:	3501      	adds	r5, #1
 8010ee4:	2d24      	cmp	r5, #36	; 0x24
 8010ee6:	f104 0408 	add.w	r4, r4, #8
 8010eea:	d1ed      	bne.n	8010ec8 <igmp_timer+0x8>
 8010eec:	bd70      	pop	{r4, r5, r6, pc}
 8010eee:	bf00      	nop
 8010ef0:	2000b5e0 	andcs	fp, r0, r0, ror #11

08010ef4 <igmp_join>:
 8010ef4:	b538      	push	{r3, r4, r5, lr}
 8010ef6:	f000 03e0 	and.w	r3, r0, #224	; 0xe0
 8010efa:	2be0      	cmp	r3, #224	; 0xe0
 8010efc:	d11b      	bne.n	8010f36 <igmp_join+0x42>
 8010efe:	4911      	ldr	r1, [pc, #68]	; (8010f44 <igmp_join+0x50>)
 8010f00:	680c      	ldr	r4, [r1, #0]
 8010f02:	2c24      	cmp	r4, #36	; 0x24
 8010f04:	d01a      	beq.n	8010f3c <igmp_join+0x48>
 8010f06:	2300      	movs	r3, #0
 8010f08:	4a0f      	ldr	r2, [pc, #60]	; (8010f48 <igmp_join+0x54>)
 8010f0a:	429c      	cmp	r4, r3
 8010f0c:	dc0d      	bgt.n	8010f2a <igmp_join+0x36>
 8010f0e:	f44f 7381 	mov.w	r3, #258	; 0x102
 8010f12:	f842 0034 	str.w	r0, [r2, r4, lsl #3]
 8010f16:	eb02 02c4 	add.w	r2, r2, r4, lsl #3
 8010f1a:	8093      	strh	r3, [r2, #4]
 8010f1c:	1c63      	adds	r3, r4, #1
 8010f1e:	600b      	str	r3, [r1, #0]
 8010f20:	f7ff ff78 	bl	8010e14 <_send_report>
 8010f24:	4623      	mov	r3, r4
 8010f26:	4618      	mov	r0, r3
 8010f28:	bd38      	pop	{r3, r4, r5, pc}
 8010f2a:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 8010f2e:	4285      	cmp	r5, r0
 8010f30:	d0f9      	beq.n	8010f26 <igmp_join+0x32>
 8010f32:	3301      	adds	r3, #1
 8010f34:	e7e9      	b.n	8010f0a <igmp_join+0x16>
 8010f36:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8010f3a:	e7f4      	b.n	8010f26 <igmp_join+0x32>
 8010f3c:	f06f 0301 	mvn.w	r3, #1
 8010f40:	e7f1      	b.n	8010f26 <igmp_join+0x32>
 8010f42:	bf00      	nop
 8010f44:	2000b704 	andcs	fp, r0, r4, lsl #14
 8010f48:	2000b5e0 	andcs	fp, r0, r0, ror #11

08010f4c <igmp_leave>:
 8010f4c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8010f50:	2600      	movs	r6, #0
 8010f52:	4f1c      	ldr	r7, [pc, #112]	; (8010fc4 <igmp_leave+0x78>)
 8010f54:	f857 3036 	ldr.w	r3, [r7, r6, lsl #3]
 8010f58:	4283      	cmp	r3, r0
 8010f5a:	d007      	beq.n	8010f6c <igmp_leave+0x20>
 8010f5c:	3601      	adds	r6, #1
 8010f5e:	2e24      	cmp	r6, #36	; 0x24
 8010f60:	d1f8      	bne.n	8010f54 <igmp_leave+0x8>
 8010f62:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8010f66:	b002      	add	sp, #8
 8010f68:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010f6c:	2400      	movs	r4, #0
 8010f6e:	f8df 8058 	ldr.w	r8, [pc, #88]	; 8010fc8 <igmp_leave+0x7c>
 8010f72:	4d16      	ldr	r5, [pc, #88]	; (8010fcc <igmp_leave+0x80>)
 8010f74:	f8b8 3000 	ldrh.w	r3, [r8]
 8010f78:	2118      	movs	r1, #24
 8010f7a:	9001      	str	r0, [sp, #4]
 8010f7c:	4814      	ldr	r0, [pc, #80]	; (8010fd0 <igmp_leave+0x84>)
 8010f7e:	826b      	strh	r3, [r5, #18]
 8010f80:	832c      	strh	r4, [r5, #24]
 8010f82:	f000 f830 	bl	8010fe6 <net_chksum>
 8010f86:	2204      	movs	r2, #4
 8010f88:	8328      	strh	r0, [r5, #24]
 8010f8a:	eb0d 0102 	add.w	r1, sp, r2
 8010f8e:	f105 002a 	add.w	r0, r5, #42	; 0x2a
 8010f92:	f7ff ff35 	bl	8010e00 <memcpy.isra.0>
 8010f96:	2120      	movs	r1, #32
 8010f98:	f105 000e 	add.w	r0, r5, #14
 8010f9c:	852c      	strh	r4, [r5, #40]	; 0x28
 8010f9e:	f000 f822 	bl	8010fe6 <net_chksum>
 8010fa2:	212e      	movs	r1, #46	; 0x2e
 8010fa4:	8528      	strh	r0, [r5, #40]	; 0x28
 8010fa6:	4628      	mov	r0, r5
 8010fa8:	f002 fafa 	bl	80135a0 <emac_eth_send>
 8010fac:	f8b8 3000 	ldrh.w	r3, [r8]
 8010fb0:	f847 4036 	str.w	r4, [r7, r6, lsl #3]
 8010fb4:	3301      	adds	r3, #1
 8010fb6:	eb07 07c6 	add.w	r7, r7, r6, lsl #3
 8010fba:	4620      	mov	r0, r4
 8010fbc:	f8a8 3000 	strh.w	r3, [r8]
 8010fc0:	80bc      	strh	r4, [r7, #4]
 8010fc2:	e7d0      	b.n	8010f66 <igmp_leave+0x1a>
 8010fc4:	2000b5e0 	andcs	fp, r0, r0, ror #11
 8010fc8:	2000b700 	andcs	fp, r0, r0, lsl #14
 8010fcc:	2000b708 	andcs	fp, r0, r8, lsl #14
 8010fd0:	2000b74e 	andcs	fp, r0, lr, asr #14

08010fd4 <ip_set_ip>:
 8010fd4:	b510      	push	{r4, lr}
 8010fd6:	4604      	mov	r4, r0
 8010fd8:	f7fe f9e4 	bl	800f3a4 <udp_set_ip>
 8010fdc:	4620      	mov	r0, r4
 8010fde:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010fe2:	f7ff bf57 	b.w	8010e94 <igmp_set_ip>

08010fe6 <net_chksum>:
 8010fe6:	2300      	movs	r3, #0
 8010fe8:	f021 0201 	bic.w	r2, r1, #1
 8010fec:	b530      	push	{r4, r5, lr}
 8010fee:	1884      	adds	r4, r0, r2
 8010ff0:	42a0      	cmp	r0, r4
 8010ff2:	d10b      	bne.n	801100c <net_chksum+0x26>
 8010ff4:	4291      	cmp	r1, r2
 8010ff6:	d004      	beq.n	8011002 <net_chksum+0x1c>
 8010ff8:	7802      	ldrb	r2, [r0, #0]
 8010ffa:	0212      	lsls	r2, r2, #8
 8010ffc:	ba52      	rev16	r2, r2
 8010ffe:	b292      	uxth	r2, r2
 8011000:	4413      	add	r3, r2
 8011002:	0c1a      	lsrs	r2, r3, #16
 8011004:	d106      	bne.n	8011014 <net_chksum+0x2e>
 8011006:	43d8      	mvns	r0, r3
 8011008:	b280      	uxth	r0, r0
 801100a:	bd30      	pop	{r4, r5, pc}
 801100c:	f830 5b02 	ldrh.w	r5, [r0], #2
 8011010:	442b      	add	r3, r5
 8011012:	e7ed      	b.n	8010ff0 <net_chksum+0xa>
 8011014:	b29b      	uxth	r3, r3
 8011016:	e7f3      	b.n	8011000 <net_chksum+0x1a>

08011018 <memcpy.isra.0>:
 8011018:	3801      	subs	r0, #1
 801101a:	440a      	add	r2, r1
 801101c:	4291      	cmp	r1, r2
 801101e:	d100      	bne.n	8011022 <memcpy.isra.0+0xa>
 8011020:	4770      	bx	lr
 8011022:	f811 3b01 	ldrb.w	r3, [r1], #1
 8011026:	f800 3f01 	strb.w	r3, [r0, #1]!
 801102a:	e7f7      	b.n	801101c <memcpy.isra.0+0x4>

0801102c <Display::Write(unsigned char, char const*) [clone .isra.0]>:
 801102c:	b430      	push	{r4, r5}
 801102e:	b168      	cbz	r0, 801104c <Display::Write(unsigned char, char const*) [clone .isra.0]+0x20>
 8011030:	2300      	movs	r3, #0
 8011032:	7905      	ldrb	r5, [r0, #4]
 8011034:	5cd4      	ldrb	r4, [r2, r3]
 8011036:	b11c      	cbz	r4, 8011040 <Display::Write(unsigned char, char const*) [clone .isra.0]+0x14>
 8011038:	1c5c      	adds	r4, r3, #1
 801103a:	429d      	cmp	r5, r3
 801103c:	4623      	mov	r3, r4
 801103e:	dcf9      	bgt.n	8011034 <Display::Write(unsigned char, char const*) [clone .isra.0]+0x8>
 8011040:	6804      	ldr	r4, [r0, #0]
 8011042:	b2db      	uxtb	r3, r3
 8011044:	69e4      	ldr	r4, [r4, #28]
 8011046:	46a4      	mov	ip, r4
 8011048:	bc30      	pop	{r4, r5}
 801104a:	4760      	bx	ip
 801104c:	bc30      	pop	{r4, r5}
 801104e:	4770      	bx	lr

08011050 <Display::ClearLine(unsigned char) [clone .isra.0]>:
 8011050:	b110      	cbz	r0, 8011058 <Display::ClearLine(unsigned char) [clone .isra.0]+0x8>
 8011052:	6803      	ldr	r3, [r0, #0]
 8011054:	691b      	ldr	r3, [r3, #16]
 8011056:	4718      	bx	r3
 8011058:	4770      	bx	lr

0801105a <Display::Printf(unsigned char, char const*, ...)>:
 801105a:	b40c      	push	{r2, r3}
 801105c:	b570      	push	{r4, r5, r6, lr}
 801105e:	6984      	ldr	r4, [r0, #24]
 8011060:	4605      	mov	r5, r0
 8011062:	460e      	mov	r6, r1
 8011064:	b08a      	sub	sp, #40	; 0x28
 8011066:	b174      	cbz	r4, 8011086 <Display::Printf(unsigned char, char const*, ...)+0x2c>
 8011068:	ab0f      	add	r3, sp, #60	; 0x3c
 801106a:	2120      	movs	r1, #32
 801106c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801106e:	a802      	add	r0, sp, #8
 8011070:	9301      	str	r3, [sp, #4]
 8011072:	f7f8 f879 	bl	8009168 <vsnprintf>
 8011076:	4604      	mov	r4, r0
 8011078:	69a8      	ldr	r0, [r5, #24]
 801107a:	4631      	mov	r1, r6
 801107c:	6803      	ldr	r3, [r0, #0]
 801107e:	aa02      	add	r2, sp, #8
 8011080:	69dd      	ldr	r5, [r3, #28]
 8011082:	b2a3      	uxth	r3, r4
 8011084:	47a8      	blx	r5
 8011086:	4620      	mov	r0, r4
 8011088:	b00a      	add	sp, #40	; 0x28
 801108a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801108e:	b002      	add	sp, #8
 8011090:	4770      	bx	lr
	...

08011094 <DisplayUdf::DisplayUdf()>:
 8011094:	b510      	push	{r4, lr}
 8011096:	4604      	mov	r4, r0
 8011098:	f000 fe6e 	bl	8011d78 <Display::Display()>
 801109c:	2202      	movs	r2, #2
 801109e:	2300      	movs	r3, #0
 80110a0:	e9c4 2314 	strd	r2, r3, [r4, #80]	; 0x50
 80110a4:	4b05      	ldr	r3, [pc, #20]	; (80110bc <DisplayUdf::DisplayUdf()+0x28>)
 80110a6:	f104 023b 	add.w	r2, r4, #59	; 0x3b
 80110aa:	601c      	str	r4, [r3, #0]
 80110ac:	2301      	movs	r3, #1
 80110ae:	f802 3f01 	strb.w	r3, [r2, #1]!
 80110b2:	3301      	adds	r3, #1
 80110b4:	2b15      	cmp	r3, #21
 80110b6:	d1fa      	bne.n	80110ae <DisplayUdf::DisplayUdf()+0x1a>
 80110b8:	4620      	mov	r0, r4
 80110ba:	bd10      	pop	{r4, pc}
 80110bc:	2000b770 	andcs	fp, r0, r0, ror r7

080110c0 <DisplayUdf::SetTitle(char const*, ...)>:
 80110c0:	b40e      	push	{r1, r2, r3}
 80110c2:	b517      	push	{r0, r1, r2, r4, lr}
 80110c4:	ab05      	add	r3, sp, #20
 80110c6:	f853 2b04 	ldr.w	r2, [r3], #4
 80110ca:	4604      	mov	r4, r0
 80110cc:	211f      	movs	r1, #31
 80110ce:	301c      	adds	r0, #28
 80110d0:	9301      	str	r3, [sp, #4]
 80110d2:	f7f8 f849 	bl	8009168 <vsnprintf>
 80110d6:	2300      	movs	r3, #0
 80110d8:	4404      	add	r4, r0
 80110da:	7723      	strb	r3, [r4, #28]
 80110dc:	b003      	add	sp, #12
 80110de:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80110e2:	b003      	add	sp, #12
 80110e4:	4770      	bx	lr

080110e6 <DisplayUdf::Set(unsigned char, displayudf::Labels)>:
 80110e6:	1e4b      	subs	r3, r1, #1
 80110e8:	2b05      	cmp	r3, #5
 80110ea:	b530      	push	{r4, r5, lr}
 80110ec:	d80f      	bhi.n	801110e <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x28>
 80110ee:	2300      	movs	r3, #0
 80110f0:	f100 043b 	add.w	r4, r0, #59	; 0x3b
 80110f4:	f814 5f01 	ldrb.w	r5, [r4, #1]!
 80110f8:	428d      	cmp	r5, r1
 80110fa:	d109      	bne.n	8011110 <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x2a>
 80110fc:	1884      	adds	r4, r0, r2
 80110fe:	f894 403c 	ldrb.w	r4, [r4, #60]	; 0x3c
 8011102:	4403      	add	r3, r0
 8011104:	f883 403c 	strb.w	r4, [r3, #60]	; 0x3c
 8011108:	4410      	add	r0, r2
 801110a:	f880 103c 	strb.w	r1, [r0, #60]	; 0x3c
 801110e:	bd30      	pop	{r4, r5, pc}
 8011110:	3301      	adds	r3, #1
 8011112:	2b14      	cmp	r3, #20
 8011114:	d1ee      	bne.n	80110f4 <DisplayUdf::Set(unsigned char, displayudf::Labels)+0xe>
 8011116:	e7f7      	b.n	8011108 <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x22>

08011118 <DisplayUdf::ShowEmacStart()>:
 8011118:	b510      	push	{r4, lr}
 801111a:	4604      	mov	r4, r0
 801111c:	f890 103e 	ldrb.w	r1, [r0, #62]	; 0x3e
 8011120:	6980      	ldr	r0, [r0, #24]
 8011122:	f7ff ff95 	bl	8011050 <Display::ClearLine(unsigned char) [clone .isra.0]>
 8011126:	4620      	mov	r0, r4
 8011128:	4a02      	ldr	r2, [pc, #8]	; (8011134 <DisplayUdf::ShowEmacStart()+0x1c>)
 801112a:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 801112e:	f7ff ff94 	bl	801105a <Display::Printf(unsigned char, char const*, ...)>
 8011132:	bd10      	pop	{r4, pc}
 8011134:	080165b1 	stmdaeq	r1, {r0, r4, r5, r7, r8, sl, sp, lr}

08011138 <DisplayUdf::ShowIpAddress()>:
 8011138:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801113c:	4604      	mov	r4, r0
 801113e:	f890 103e 	ldrb.w	r1, [r0, #62]	; 0x3e
 8011142:	b086      	sub	sp, #24
 8011144:	6980      	ldr	r0, [r0, #24]
 8011146:	f7ff ff83 	bl	8011050 <Display::ClearLine(unsigned char) [clone .isra.0]>
 801114a:	4b13      	ldr	r3, [pc, #76]	; (8011198 <DisplayUdf::ShowIpAddress()+0x60>)
 801114c:	f894 703e 	ldrb.w	r7, [r4, #62]	; 0x3e
 8011150:	681d      	ldr	r5, [r3, #0]
 8011152:	69e8      	ldr	r0, [r5, #28]
 8011154:	696e      	ldr	r6, [r5, #20]
 8011156:	f003 fb7d 	bl	8014854 <__popcountsi2>
 801115a:	79eb      	ldrb	r3, [r5, #7]
 801115c:	fa5f f886 	uxtb.w	r8, r6
 8011160:	f3c6 2907 	ubfx	r9, r6, #8, #8
 8011164:	f3c6 4a07 	ubfx	sl, r6, #16, #8
 8011168:	0e36      	lsrs	r6, r6, #24
 801116a:	b99b      	cbnz	r3, 8011194 <DisplayUdf::ShowIpAddress()+0x5c>
 801116c:	796b      	ldrb	r3, [r5, #5]
 801116e:	2b00      	cmp	r3, #0
 8011170:	bf14      	ite	ne
 8011172:	2244      	movne	r2, #68	; 0x44
 8011174:	2253      	moveq	r2, #83	; 0x53
 8011176:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801117a:	4643      	mov	r3, r8
 801117c:	4639      	mov	r1, r7
 801117e:	4620      	mov	r0, r4
 8011180:	e9cd a601 	strd	sl, r6, [sp, #4]
 8011184:	4a05      	ldr	r2, [pc, #20]	; (801119c <DisplayUdf::ShowIpAddress()+0x64>)
 8011186:	f8cd 9000 	str.w	r9, [sp]
 801118a:	f7ff ff66 	bl	801105a <Display::Printf(unsigned char, char const*, ...)>
 801118e:	b006      	add	sp, #24
 8011190:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011194:	225a      	movs	r2, #90	; 0x5a
 8011196:	e7ee      	b.n	8011176 <DisplayUdf::ShowIpAddress()+0x3e>
 8011198:	2000b1a0 	andcs	fp, r0, r0, lsr #3
 801119c:	080165c0 	stmdaeq	r1, {r6, r7, r8, sl, sp, lr}

080111a0 <DisplayUdf::ShowNetmask()>:
 80111a0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80111a2:	4604      	mov	r4, r0
 80111a4:	4b0b      	ldr	r3, [pc, #44]	; (80111d4 <DisplayUdf::ShowNetmask()+0x34>)
 80111a6:	681b      	ldr	r3, [r3, #0]
 80111a8:	69db      	ldr	r3, [r3, #28]
 80111aa:	0e1a      	lsrs	r2, r3, #24
 80111ac:	9202      	str	r2, [sp, #8]
 80111ae:	f3c3 4207 	ubfx	r2, r3, #16, #8
 80111b2:	9201      	str	r2, [sp, #4]
 80111b4:	f3c3 2207 	ubfx	r2, r3, #8, #8
 80111b8:	9200      	str	r2, [sp, #0]
 80111ba:	f890 1048 	ldrb.w	r1, [r0, #72]	; 0x48
 80111be:	4a06      	ldr	r2, [pc, #24]	; (80111d8 <DisplayUdf::ShowNetmask()+0x38>)
 80111c0:	b2db      	uxtb	r3, r3
 80111c2:	f7ff ff4a 	bl	801105a <Display::Printf(unsigned char, char const*, ...)>
 80111c6:	4620      	mov	r0, r4
 80111c8:	b004      	add	sp, #16
 80111ca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80111ce:	f7ff bfb3 	b.w	8011138 <DisplayUdf::ShowIpAddress()>
 80111d2:	bf00      	nop
 80111d4:	2000b1a0 	andcs	fp, r0, r0, lsr #3
 80111d8:	080165d2 	stmdaeq	r1, {r1, r4, r6, r7, r8, sl, sp, lr}

080111dc <DisplayUdf::ShowGatewayIp()>:
 80111dc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80111de:	4604      	mov	r4, r0
 80111e0:	f890 104e 	ldrb.w	r1, [r0, #78]	; 0x4e
 80111e4:	6980      	ldr	r0, [r0, #24]
 80111e6:	f7ff ff33 	bl	8011050 <Display::ClearLine(unsigned char) [clone .isra.0]>
 80111ea:	4b0a      	ldr	r3, [pc, #40]	; (8011214 <DisplayUdf::ShowGatewayIp()+0x38>)
 80111ec:	4620      	mov	r0, r4
 80111ee:	681b      	ldr	r3, [r3, #0]
 80111f0:	f894 104e 	ldrb.w	r1, [r4, #78]	; 0x4e
 80111f4:	699b      	ldr	r3, [r3, #24]
 80111f6:	0e1a      	lsrs	r2, r3, #24
 80111f8:	9202      	str	r2, [sp, #8]
 80111fa:	f3c3 4207 	ubfx	r2, r3, #16, #8
 80111fe:	9201      	str	r2, [sp, #4]
 8011200:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8011204:	9200      	str	r2, [sp, #0]
 8011206:	b2db      	uxtb	r3, r3
 8011208:	4a03      	ldr	r2, [pc, #12]	; (8011218 <DisplayUdf::ShowGatewayIp()+0x3c>)
 801120a:	f7ff ff26 	bl	801105a <Display::Printf(unsigned char, char const*, ...)>
 801120e:	b004      	add	sp, #16
 8011210:	bd10      	pop	{r4, pc}
 8011212:	bf00      	nop
 8011214:	2000b1a0 	andcs	fp, r0, r0, lsr #3
 8011218:	080165e1 	stmdaeq	r1, {r0, r5, r6, r7, r8, sl, sp, lr}

0801121c <DisplayUdf::ShowHostName()>:
 801121c:	b510      	push	{r4, lr}
 801121e:	4604      	mov	r4, r0
 8011220:	f890 1043 	ldrb.w	r1, [r0, #67]	; 0x43
 8011224:	6980      	ldr	r0, [r0, #24]
 8011226:	f7ff ff13 	bl	8011050 <Display::ClearLine(unsigned char) [clone .isra.0]>
 801122a:	4b05      	ldr	r3, [pc, #20]	; (8011240 <DisplayUdf::ShowHostName()+0x24>)
 801122c:	f894 1043 	ldrb.w	r1, [r4, #67]	; 0x43
 8011230:	681a      	ldr	r2, [r3, #0]
 8011232:	69a0      	ldr	r0, [r4, #24]
 8011234:	3220      	adds	r2, #32
 8011236:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801123a:	f7ff bef7 	b.w	801102c <Display::Write(unsigned char, char const*) [clone .isra.0]>
 801123e:	bf00      	nop
 8011240:	2000b1a0 	andcs	fp, r0, r0, lsr #3

08011244 <DisplayUdf::Show()>:
 8011244:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011246:	4604      	mov	r4, r0
 8011248:	21ff      	movs	r1, #255	; 0xff
 801124a:	f100 033b 	add.w	r3, r0, #59	; 0x3b
 801124e:	f100 024f 	add.w	r2, r0, #79	; 0x4f
 8011252:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8011256:	2806      	cmp	r0, #6
 8011258:	bf88      	it	hi
 801125a:	7019      	strbhi	r1, [r3, #0]
 801125c:	429a      	cmp	r2, r3
 801125e:	d1f8      	bne.n	8011252 <DisplayUdf::Show()+0xe>
 8011260:	2501      	movs	r5, #1
 8011262:	4629      	mov	r1, r5
 8011264:	3501      	adds	r5, #1
 8011266:	69a0      	ldr	r0, [r4, #24]
 8011268:	b2ed      	uxtb	r5, r5
 801126a:	f7ff fef1 	bl	8011050 <Display::ClearLine(unsigned char) [clone .isra.0]>
 801126e:	2d06      	cmp	r5, #6
 8011270:	d1f7      	bne.n	8011262 <DisplayUdf::Show()+0x1e>
 8011272:	f894 103c 	ldrb.w	r1, [r4, #60]	; 0x3c
 8011276:	69a0      	ldr	r0, [r4, #24]
 8011278:	f104 021c 	add.w	r2, r4, #28
 801127c:	f7ff fed6 	bl	801102c <Display::Write(unsigned char, char const*) [clone .isra.0]>
 8011280:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 8011284:	69a0      	ldr	r0, [r4, #24]
 8011286:	4a0d      	ldr	r2, [pc, #52]	; (80112bc <DisplayUdf::Show()+0x78>)
 8011288:	f7ff fed0 	bl	801102c <Display::Write(unsigned char, char const*) [clone .isra.0]>
 801128c:	4b0c      	ldr	r3, [pc, #48]	; (80112c0 <DisplayUdf::Show()+0x7c>)
 801128e:	4a0d      	ldr	r2, [pc, #52]	; (80112c4 <DisplayUdf::Show()+0x80>)
 8011290:	f894 103f 	ldrb.w	r1, [r4, #63]	; 0x3f
 8011294:	9300      	str	r3, [sp, #0]
 8011296:	4620      	mov	r0, r4
 8011298:	2303      	movs	r3, #3
 801129a:	f7ff fede 	bl	801105a <Display::Printf(unsigned char, char const*, ...)>
 801129e:	4620      	mov	r0, r4
 80112a0:	f7ff ff4a 	bl	8011138 <DisplayUdf::ShowIpAddress()>
 80112a4:	4620      	mov	r0, r4
 80112a6:	f7ff ff99 	bl	80111dc <DisplayUdf::ShowGatewayIp()>
 80112aa:	4620      	mov	r0, r4
 80112ac:	f7ff ff78 	bl	80111a0 <DisplayUdf::ShowNetmask()>
 80112b0:	4620      	mov	r0, r4
 80112b2:	b003      	add	sp, #12
 80112b4:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80112b8:	f7ff bfb0 	b.w	801121c <DisplayUdf::ShowHostName()>
 80112bc:	08015026 	stmdaeq	r1, {r1, r2, r5, ip, lr}
 80112c0:	2000b808 	andcs	fp, r0, r8, lsl #16
 80112c4:	080165f0 	stmdaeq	r1, {r4, r5, r6, r7, r8, sl, sp, lr}

080112c8 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)>:
 80112c8:	3901      	subs	r1, #1
 80112ca:	b510      	push	{r4, lr}
 80112cc:	4604      	mov	r4, r0
 80112ce:	2903      	cmp	r1, #3
 80112d0:	d814      	bhi.n	80112fc <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x34>
 80112d2:	e8df f001 	tbb	[pc, r1]
 80112d6:	281b1402 	ldmdacs	fp, {r1, sl, ip}
 80112da:	4b14      	ldr	r3, [pc, #80]	; (801132c <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 80112dc:	f44f 41b6 	mov.w	r1, #23296	; 0x5b00
 80112e0:	6818      	ldr	r0, [r3, #0]
 80112e2:	f7f8 f9b7 	bl	8009654 <Display::Status(Display7SegmentMessage)>
 80112e6:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 80112ea:	69a0      	ldr	r0, [r4, #24]
 80112ec:	f7ff feb0 	bl	8011050 <Display::ClearLine(unsigned char) [clone .isra.0]>
 80112f0:	4a0f      	ldr	r2, [pc, #60]	; (8011330 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x68>)
 80112f2:	4620      	mov	r0, r4
 80112f4:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 80112f8:	f7ff feaf 	bl	801105a <Display::Printf(unsigned char, char const*, ...)>
 80112fc:	bd10      	pop	{r4, pc}
 80112fe:	f248 0180 	movw	r1, #32896	; 0x8080
 8011302:	4b0a      	ldr	r3, [pc, #40]	; (801132c <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 8011304:	6818      	ldr	r0, [r3, #0]
 8011306:	f7f8 f9a5 	bl	8009654 <Display::Status(Display7SegmentMessage)>
 801130a:	e7f7      	b.n	80112fc <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x34>
 801130c:	4b07      	ldr	r3, [pc, #28]	; (801132c <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 801130e:	f44f 41b6 	mov.w	r1, #23296	; 0x5b00
 8011312:	6818      	ldr	r0, [r3, #0]
 8011314:	f7f8 f99e 	bl	8009654 <Display::Status(Display7SegmentMessage)>
 8011318:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 801131c:	69a0      	ldr	r0, [r4, #24]
 801131e:	f7ff fe97 	bl	8011050 <Display::ClearLine(unsigned char) [clone .isra.0]>
 8011322:	4a04      	ldr	r2, [pc, #16]	; (8011334 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x6c>)
 8011324:	e7e5      	b.n	80112f2 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x2a>
 8011326:	f645 3179 	movw	r1, #23417	; 0x5b79
 801132a:	e7ea      	b.n	8011302 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x3a>
 801132c:	2000b778 	andcs	fp, r0, r8, ror r7
 8011330:	080165ff 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r7, r8, sl, sp, lr}
 8011334:	0801660d 	stmdaeq	r1, {r0, r2, r3, r9, sl, sp, lr}

08011338 <DisplayUdf::ShowShutdown()>:
 8011338:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801133c:	4604      	mov	r4, r0
 801133e:	6980      	ldr	r0, [r0, #24]
 8011340:	b1d0      	cbz	r0, 8011378 <DisplayUdf::ShowShutdown()+0x40>
 8011342:	f890 8005 	ldrb.w	r8, [r0, #5]
 8011346:	6803      	ldr	r3, [r0, #0]
 8011348:	f108 35ff 	add.w	r5, r8, #4294967295	; 0xffffffff
 801134c:	b2ed      	uxtb	r5, r5
 801134e:	462a      	mov	r2, r5
 8011350:	2100      	movs	r1, #0
 8011352:	6a1b      	ldr	r3, [r3, #32]
 8011354:	7906      	ldrb	r6, [r0, #4]
 8011356:	2700      	movs	r7, #0
 8011358:	4798      	blx	r3
 801135a:	3e01      	subs	r6, #1
 801135c:	42b7      	cmp	r7, r6
 801135e:	69a0      	ldr	r0, [r4, #24]
 8011360:	d311      	bcc.n	8011386 <DisplayUdf::ShowShutdown()+0x4e>
 8011362:	b120      	cbz	r0, 801136e <DisplayUdf::ShowShutdown()+0x36>
 8011364:	6803      	ldr	r3, [r0, #0]
 8011366:	462a      	mov	r2, r5
 8011368:	2100      	movs	r1, #0
 801136a:	6a1b      	ldr	r3, [r3, #32]
 801136c:	4798      	blx	r3
 801136e:	4641      	mov	r1, r8
 8011370:	4a08      	ldr	r2, [pc, #32]	; (8011394 <DisplayUdf::ShowShutdown()+0x5c>)
 8011372:	69a0      	ldr	r0, [r4, #24]
 8011374:	f7ff fe5a 	bl	801102c <Display::Write(unsigned char, char const*) [clone .isra.0]>
 8011378:	f44f 41de 	mov.w	r1, #28416	; 0x6f00
 801137c:	4620      	mov	r0, r4
 801137e:	f7f8 f969 	bl	8009654 <Display::Status(Display7SegmentMessage)>
 8011382:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011386:	b118      	cbz	r0, 8011390 <DisplayUdf::ShowShutdown()+0x58>
 8011388:	6803      	ldr	r3, [r0, #0]
 801138a:	2120      	movs	r1, #32
 801138c:	695b      	ldr	r3, [r3, #20]
 801138e:	4798      	blx	r3
 8011390:	3701      	adds	r7, #1
 8011392:	e7e3      	b.n	801135c <DisplayUdf::ShowShutdown()+0x24>
 8011394:	0801661b 	stmdaeq	r1, {r0, r1, r3, r4, r9, sl, sp, lr}

08011398 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>:
 8011398:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801139a:	88c6      	ldrh	r6, [r0, #6]
 801139c:	8885      	ldrh	r5, [r0, #4]
 801139e:	42ae      	cmp	r6, r5
 80113a0:	d216      	bcs.n	80113d0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x38>
 80113a2:	4604      	mov	r4, r0
 80113a4:	6800      	ldr	r0, [r0, #0]
 80113a6:	1bad      	subs	r5, r5, r6
 80113a8:	4430      	add	r0, r6
 80113aa:	7a26      	ldrb	r6, [r4, #8]
 80113ac:	b923      	cbnz	r3, 80113b8 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x20>
 80113ae:	b926      	cbnz	r6, 80113ba <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x22>
 80113b0:	9200      	str	r2, [sp, #0]
 80113b2:	460b      	mov	r3, r1
 80113b4:	4a09      	ldr	r2, [pc, #36]	; (80113dc <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x44>)
 80113b6:	e003      	b.n	80113c0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 80113b8:	b166      	cbz	r6, 80113d4 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x3c>
 80113ba:	460b      	mov	r3, r1
 80113bc:	9200      	str	r2, [sp, #0]
 80113be:	4a08      	ldr	r2, [pc, #32]	; (80113e0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x48>)
 80113c0:	4629      	mov	r1, r5
 80113c2:	f7f7 feb9 	bl	8009138 <snprintf>
 80113c6:	4285      	cmp	r5, r0
 80113c8:	bfa2      	ittt	ge
 80113ca:	88e3      	ldrhge	r3, [r4, #6]
 80113cc:	181b      	addge	r3, r3, r0
 80113ce:	80e3      	strhge	r3, [r4, #6]
 80113d0:	b002      	add	sp, #8
 80113d2:	bd70      	pop	{r4, r5, r6, pc}
 80113d4:	9200      	str	r2, [sp, #0]
 80113d6:	460b      	mov	r3, r1
 80113d8:	4a02      	ldr	r2, [pc, #8]	; (80113e4 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x4c>)
 80113da:	e7f1      	b.n	80113c0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 80113dc:	08014ccd 	stmdaeq	r1, {r0, r2, r3, r6, r7, sl, fp, lr}
 80113e0:	08014cc4 	stmdaeq	r1, {r2, r6, r7, sl, fp, lr}
 80113e4:	08014cce 	stmdaeq	r1, {r1, r2, r3, r6, r7, sl, fp, lr}

080113e8 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>:
 80113e8:	b510      	push	{r4, lr}
 80113ea:	2220      	movs	r2, #32
 80113ec:	4604      	mov	r4, r0
 80113ee:	f840 1b04 	str.w	r1, [r0], #4
 80113f2:	2100      	movs	r1, #0
 80113f4:	f001 f950 	bl	8012698 <memset>
 80113f8:	f647 7305 	movw	r3, #32517	; 0x7f05
 80113fc:	4620      	mov	r0, r4
 80113fe:	84a3      	strh	r3, [r4, #36]	; 0x24
 8011400:	bd10      	pop	{r4, pc}

08011402 <DisplayUdfParams::Load()>:
 8011402:	b508      	push	{r3, lr}
 8011404:	2300      	movs	r3, #0
 8011406:	4601      	mov	r1, r0
 8011408:	6043      	str	r3, [r0, #4]
 801140a:	6800      	ldr	r0, [r0, #0]
 801140c:	b120      	cbz	r0, 8011418 <DisplayUdfParams::Load()+0x16>
 801140e:	6803      	ldr	r3, [r0, #0]
 8011410:	3104      	adds	r1, #4
 8011412:	68db      	ldr	r3, [r3, #12]
 8011414:	4798      	blx	r3
 8011416:	2001      	movs	r0, #1
 8011418:	bd08      	pop	{r3, pc}
	...

0801141c <DisplayUdfParams::Load(char const*, unsigned int)>:
 801141c:	6803      	ldr	r3, [r0, #0]
 801141e:	b1d3      	cbz	r3, 8011456 <DisplayUdfParams::Load(char const*, unsigned int)+0x3a>
 8011420:	2300      	movs	r3, #0
 8011422:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8011424:	460d      	mov	r5, r1
 8011426:	4616      	mov	r6, r2
 8011428:	4604      	mov	r4, r0
 801142a:	6043      	str	r3, [r0, #4]
 801142c:	4602      	mov	r2, r0
 801142e:	490a      	ldr	r1, [pc, #40]	; (8011458 <DisplayUdfParams::Load(char const*, unsigned int)+0x3c>)
 8011430:	4668      	mov	r0, sp
 8011432:	f000 fb31 	bl	8011a98 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 8011436:	4632      	mov	r2, r6
 8011438:	4629      	mov	r1, r5
 801143a:	4668      	mov	r0, sp
 801143c:	f000 fb30 	bl	8011aa0 <ReadConfigFile::Read(char const*, unsigned int)>
 8011440:	4621      	mov	r1, r4
 8011442:	f851 0b04 	ldr.w	r0, [r1], #4
 8011446:	6803      	ldr	r3, [r0, #0]
 8011448:	689b      	ldr	r3, [r3, #8]
 801144a:	4798      	blx	r3
 801144c:	4668      	mov	r0, sp
 801144e:	f000 fb26 	bl	8011a9e <ReadConfigFile::~ReadConfigFile()>
 8011452:	b002      	add	sp, #8
 8011454:	bd70      	pop	{r4, r5, r6, pc}
 8011456:	4770      	bx	lr
 8011458:	08011525 	stmdaeq	r1, {r0, r2, r5, r8, sl, ip}

0801145c <DisplayUdfParams::callbackFunction(char const*)>:
 801145c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801145e:	460e      	mov	r6, r1
 8011460:	4604      	mov	r4, r0
 8011462:	492c      	ldr	r1, [pc, #176]	; (8011514 <DisplayUdfParams::callbackFunction(char const*)+0xb8>)
 8011464:	4630      	mov	r0, r6
 8011466:	f10d 0207 	add.w	r2, sp, #7
 801146a:	f000 fbc5 	bl	8011bf8 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 801146e:	b968      	cbnz	r0, 801148c <DisplayUdfParams::callbackFunction(char const*)+0x30>
 8011470:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8011474:	6863      	ldr	r3, [r4, #4]
 8011476:	2a7f      	cmp	r2, #127	; 0x7f
 8011478:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
 801147c:	bf14      	ite	ne
 801147e:	f043 5300 	orrne.w	r3, r3, #536870912	; 0x20000000
 8011482:	f023 5300 	biceq.w	r3, r3, #536870912	; 0x20000000
 8011486:	6063      	str	r3, [r4, #4]
 8011488:	b003      	add	sp, #12
 801148a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801148c:	4630      	mov	r0, r6
 801148e:	4922      	ldr	r1, [pc, #136]	; (8011518 <DisplayUdfParams::callbackFunction(char const*)+0xbc>)
 8011490:	f10d 0207 	add.w	r2, sp, #7
 8011494:	f000 fbb0 	bl	8011bf8 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8011498:	b958      	cbnz	r0, 80114b2 <DisplayUdfParams::callbackFunction(char const*)+0x56>
 801149a:	f89d 2007 	ldrb.w	r2, [sp, #7]
 801149e:	6863      	ldr	r3, [r4, #4]
 80114a0:	2a05      	cmp	r2, #5
 80114a2:	f884 2024 	strb.w	r2, [r4, #36]	; 0x24
 80114a6:	bf14      	ite	ne
 80114a8:	f043 5380 	orrne.w	r3, r3, #268435456	; 0x10000000
 80114ac:	f023 5380 	biceq.w	r3, r3, #268435456	; 0x10000000
 80114b0:	e7e9      	b.n	8011486 <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 80114b2:	4630      	mov	r0, r6
 80114b4:	4919      	ldr	r1, [pc, #100]	; (801151c <DisplayUdfParams::callbackFunction(char const*)+0xc0>)
 80114b6:	f10d 0207 	add.w	r2, sp, #7
 80114ba:	f000 fb9d 	bl	8011bf8 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 80114be:	b948      	cbnz	r0, 80114d4 <DisplayUdfParams::callbackFunction(char const*)+0x78>
 80114c0:	f89d 2007 	ldrb.w	r2, [sp, #7]
 80114c4:	6863      	ldr	r3, [r4, #4]
 80114c6:	b112      	cbz	r2, 80114ce <DisplayUdfParams::callbackFunction(char const*)+0x72>
 80114c8:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 80114cc:	e7db      	b.n	8011486 <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 80114ce:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 80114d2:	e7d8      	b.n	8011486 <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 80114d4:	2500      	movs	r5, #0
 80114d6:	4f12      	ldr	r7, [pc, #72]	; (8011520 <DisplayUdfParams::callbackFunction(char const*)+0xc4>)
 80114d8:	4630      	mov	r0, r6
 80114da:	f857 1b04 	ldr.w	r1, [r7], #4
 80114de:	f10d 0207 	add.w	r2, sp, #7
 80114e2:	f000 fb89 	bl	8011bf8 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 80114e6:	b980      	cbnz	r0, 801150a <DisplayUdfParams::callbackFunction(char const*)+0xae>
 80114e8:	2301      	movs	r3, #1
 80114ea:	f89d 1007 	ldrb.w	r1, [sp, #7]
 80114ee:	40ab      	lsls	r3, r5
 80114f0:	1e4e      	subs	r6, r1, #1
 80114f2:	2e05      	cmp	r6, #5
 80114f4:	6862      	ldr	r2, [r4, #4]
 80114f6:	4425      	add	r5, r4
 80114f8:	d802      	bhi.n	8011500 <DisplayUdfParams::callbackFunction(char const*)+0xa4>
 80114fa:	7229      	strb	r1, [r5, #8]
 80114fc:	4313      	orrs	r3, r2
 80114fe:	e7c2      	b.n	8011486 <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 8011500:	ea22 0203 	bic.w	r2, r2, r3
 8011504:	7228      	strb	r0, [r5, #8]
 8011506:	6062      	str	r2, [r4, #4]
 8011508:	e7be      	b.n	8011488 <DisplayUdfParams::callbackFunction(char const*)+0x2c>
 801150a:	3501      	adds	r5, #1
 801150c:	2d14      	cmp	r5, #20
 801150e:	d1e3      	bne.n	80114d8 <DisplayUdfParams::callbackFunction(char const*)+0x7c>
 8011510:	e7ba      	b.n	8011488 <DisplayUdfParams::callbackFunction(char const*)+0x2c>
 8011512:	bf00      	nop
 8011514:	080166da 	stmdaeq	r1, {r1, r3, r4, r6, r7, r9, sl, sp, lr}
 8011518:	080166a2 	stmdaeq	r1, {r1, r5, r7, r9, sl, sp, lr}
 801151c:	080166b0 	stmdaeq	r1, {r4, r5, r7, r9, sl, sp, lr}
 8011520:	0801662c 	stmdaeq	r1, {r2, r3, r5, r9, sl, sp, lr}

08011524 <DisplayUdfParams::staticCallbackFunction(void*, char const*)>:
 8011524:	f7ff bf9a 	b.w	801145c <DisplayUdfParams::callbackFunction(char const*)>

08011528 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)>:
 8011528:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801152c:	4604      	mov	r4, r0
 801152e:	4615      	mov	r5, r2
 8011530:	461e      	mov	r6, r3
 8011532:	b086      	sub	sp, #24
 8011534:	3004      	adds	r0, #4
 8011536:	b379      	cbz	r1, 8011598 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x70>
 8011538:	2222      	movs	r2, #34	; 0x22
 801153a:	f001 f896 	bl	801266a <memmove>
 801153e:	462a      	mov	r2, r5
 8011540:	4633      	mov	r3, r6
 8011542:	493d      	ldr	r1, [pc, #244]	; (8011638 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x110>)
 8011544:	a803      	add	r0, sp, #12
 8011546:	f000 fa07 	bl	8011958 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 801154a:	6863      	ldr	r3, [r4, #4]
 801154c:	f894 2025 	ldrb.w	r2, [r4, #37]	; 0x25
 8011550:	493a      	ldr	r1, [pc, #232]	; (801163c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x114>)
 8011552:	f3c3 7340 	ubfx	r3, r3, #29, #1
 8011556:	a803      	add	r0, sp, #12
 8011558:	f7ff ff1e 	bl	8011398 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 801155c:	6863      	ldr	r3, [r4, #4]
 801155e:	f894 2024 	ldrb.w	r2, [r4, #36]	; 0x24
 8011562:	f3c3 7300 	ubfx	r3, r3, #28, #1
 8011566:	4936      	ldr	r1, [pc, #216]	; (8011640 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x118>)
 8011568:	a803      	add	r0, sp, #12
 801156a:	f7ff ff15 	bl	8011398 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 801156e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8011572:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8011576:	6863      	ldr	r3, [r4, #4]
 8011578:	42aa      	cmp	r2, r5
 801157a:	d226      	bcs.n	80115ca <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xa2>
 801157c:	9803      	ldr	r0, [sp, #12]
 801157e:	f013 4380 	ands.w	r3, r3, #1073741824	; 0x40000000
 8011582:	4410      	add	r0, r2
 8011584:	eba5 0502 	sub.w	r5, r5, r2
 8011588:	f89d 2014 	ldrb.w	r2, [sp, #20]
 801158c:	d10b      	bne.n	80115a6 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x7e>
 801158e:	b962      	cbnz	r2, 80115aa <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x82>
 8011590:	9200      	str	r2, [sp, #0]
 8011592:	4b2c      	ldr	r3, [pc, #176]	; (8011644 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>)
 8011594:	4a2c      	ldr	r2, [pc, #176]	; (8011648 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x120>)
 8011596:	e00e      	b.n	80115b6 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x8e>
 8011598:	6823      	ldr	r3, [r4, #0]
 801159a:	4601      	mov	r1, r0
 801159c:	681a      	ldr	r2, [r3, #0]
 801159e:	4618      	mov	r0, r3
 80115a0:	68d2      	ldr	r2, [r2, #12]
 80115a2:	4790      	blx	r2
 80115a4:	e7cb      	b.n	801153e <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x16>
 80115a6:	2a00      	cmp	r2, #0
 80115a8:	d041      	beq.n	801162e <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x106>
 80115aa:	3b00      	subs	r3, #0
 80115ac:	bf18      	it	ne
 80115ae:	2301      	movne	r3, #1
 80115b0:	4a26      	ldr	r2, [pc, #152]	; (801164c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x124>)
 80115b2:	9300      	str	r3, [sp, #0]
 80115b4:	4b23      	ldr	r3, [pc, #140]	; (8011644 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>)
 80115b6:	4629      	mov	r1, r5
 80115b8:	f7f7 fdbe 	bl	8009138 <snprintf>
 80115bc:	4285      	cmp	r5, r0
 80115be:	bfa2      	ittt	ge
 80115c0:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 80115c4:	181b      	addge	r3, r3, r0
 80115c6:	f8ad 3012 	strhge.w	r3, [sp, #18]
 80115ca:	2500      	movs	r5, #0
 80115cc:	2701      	movs	r7, #1
 80115ce:	4e20      	ldr	r6, [pc, #128]	; (8011650 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x128>)
 80115d0:	f104 0808 	add.w	r8, r4, #8
 80115d4:	f856 1b04 	ldr.w	r1, [r6], #4
 80115d8:	780b      	ldrb	r3, [r1, #0]
 80115da:	b15b      	cbz	r3, 80115f4 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xcc>
 80115dc:	6862      	ldr	r2, [r4, #4]
 80115de:	fa07 f305 	lsl.w	r3, r7, r5
 80115e2:	4393      	bics	r3, r2
 80115e4:	bf0c      	ite	eq
 80115e6:	2301      	moveq	r3, #1
 80115e8:	2300      	movne	r3, #0
 80115ea:	f818 2005 	ldrb.w	r2, [r8, r5]
 80115ee:	a803      	add	r0, sp, #12
 80115f0:	f7ff fed2 	bl	8011398 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 80115f4:	3501      	adds	r5, #1
 80115f6:	2d14      	cmp	r5, #20
 80115f8:	d1ec      	bne.n	80115d4 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xac>
 80115fa:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80115fe:	b17b      	cbz	r3, 8011620 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xf8>
 8011600:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8011604:	9b03      	ldr	r3, [sp, #12]
 8011606:	4413      	add	r3, r2
 8011608:	227d      	movs	r2, #125	; 0x7d
 801160a:	f803 2c01 	strb.w	r2, [r3, #-1]
 801160e:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8011612:	9903      	ldr	r1, [sp, #12]
 8011614:	54ca      	strb	r2, [r1, r3]
 8011616:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801161a:	3301      	adds	r3, #1
 801161c:	f8ad 3012 	strh.w	r3, [sp, #18]
 8011620:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8011624:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8011626:	601a      	str	r2, [r3, #0]
 8011628:	b006      	add	sp, #24
 801162a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801162e:	2301      	movs	r3, #1
 8011630:	4a08      	ldr	r2, [pc, #32]	; (8011654 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x12c>)
 8011632:	9300      	str	r3, [sp, #0]
 8011634:	4b03      	ldr	r3, [pc, #12]	; (8011644 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>)
 8011636:	e7be      	b.n	80115b6 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x8e>
 8011638:	080166ce 	stmdaeq	r1, {r1, r2, r3, r6, r7, r9, sl, sp, lr}
 801163c:	080166da 	stmdaeq	r1, {r1, r3, r4, r6, r7, r9, sl, sp, lr}
 8011640:	080166a2 	stmdaeq	r1, {r1, r5, r7, r9, sl, sp, lr}
 8011644:	080166b0 	stmdaeq	r1, {r4, r5, r7, r9, sl, sp, lr}
 8011648:	08014ccd 	stmdaeq	r1, {r0, r2, r3, r6, r7, sl, fp, lr}
 801164c:	08014cc4 	stmdaeq	r1, {r2, r6, r7, sl, fp, lr}
 8011650:	0801662c 	stmdaeq	r1, {r2, r3, r5, r9, sl, sp, lr}
 8011654:	08014cce 	stmdaeq	r1, {r1, r2, r3, r6, r7, sl, fp, lr}

08011658 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)>:
 8011658:	b513      	push	{r0, r1, r4, lr}
 801165a:	6804      	ldr	r4, [r0, #0]
 801165c:	b914      	cbnz	r4, 8011664 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)+0xc>
 801165e:	601c      	str	r4, [r3, #0]
 8011660:	b002      	add	sp, #8
 8011662:	bd10      	pop	{r4, pc}
 8011664:	9300      	str	r3, [sp, #0]
 8011666:	4613      	mov	r3, r2
 8011668:	460a      	mov	r2, r1
 801166a:	2100      	movs	r1, #0
 801166c:	f7ff ff5c 	bl	8011528 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)>
 8011670:	e7f6      	b.n	8011660 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)+0x8>

08011672 <DisplayUdfParams::Set(DisplayUdf*)>:
 8011672:	6843      	ldr	r3, [r0, #4]
 8011674:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011678:	009a      	lsls	r2, r3, #2
 801167a:	4604      	mov	r4, r0
 801167c:	460e      	mov	r6, r1
 801167e:	d506      	bpl.n	801168e <DisplayUdfParams::Set(DisplayUdf*)+0x1c>
 8011680:	6988      	ldr	r0, [r1, #24]
 8011682:	b120      	cbz	r0, 801168e <DisplayUdfParams::Set(DisplayUdf*)+0x1c>
 8011684:	6803      	ldr	r3, [r0, #0]
 8011686:	f894 1025 	ldrb.w	r1, [r4, #37]	; 0x25
 801168a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801168c:	4798      	blx	r3
 801168e:	6863      	ldr	r3, [r4, #4]
 8011690:	69b0      	ldr	r0, [r6, #24]
 8011692:	00db      	lsls	r3, r3, #3
 8011694:	bf41      	itttt	mi
 8011696:	f64e 2260 	movwmi	r2, #60000	; 0xea60
 801169a:	f894 3024 	ldrbmi.w	r3, [r4, #36]	; 0x24
 801169e:	4353      	mulmi	r3, r2
 80116a0:	6173      	strmi	r3, [r6, #20]
 80116a2:	6861      	ldr	r1, [r4, #4]
 80116a4:	f3c1 7180 	ubfx	r1, r1, #30, #1
 80116a8:	b110      	cbz	r0, 80116b0 <DisplayUdfParams::Set(DisplayUdf*)+0x3e>
 80116aa:	6803      	ldr	r3, [r0, #0]
 80116ac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80116ae:	4798      	blx	r3
 80116b0:	2500      	movs	r5, #0
 80116b2:	2701      	movs	r7, #1
 80116b4:	f104 0808 	add.w	r8, r4, #8
 80116b8:	6862      	ldr	r2, [r4, #4]
 80116ba:	fa07 f305 	lsl.w	r3, r7, r5
 80116be:	4393      	bics	r3, r2
 80116c0:	d105      	bne.n	80116ce <DisplayUdfParams::Set(DisplayUdf*)+0x5c>
 80116c2:	462a      	mov	r2, r5
 80116c4:	4630      	mov	r0, r6
 80116c6:	f818 1005 	ldrb.w	r1, [r8, r5]
 80116ca:	f7ff fd0c 	bl	80110e6 <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 80116ce:	3501      	adds	r5, #1
 80116d0:	2d14      	cmp	r5, #20
 80116d2:	d1f1      	bne.n	80116b8 <DisplayUdfParams::Set(DisplayUdf*)+0x46>
 80116d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080116d8 <DisplayUdfParams::Dump()>:
 80116d8:	4770      	bx	lr
	...

080116dc <DisplayUdf::Show(E131Bridge*)>:
 80116dc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80116e0:	460e      	mov	r6, r1
 80116e2:	4604      	mov	r4, r0
 80116e4:	b085      	sub	sp, #20
 80116e6:	f7ff fdad 	bl	8011244 <DisplayUdf::Show()>
 80116ea:	f896 250b 	ldrb.w	r2, [r6, #1291]	; 0x50b
 80116ee:	f896 350a 	ldrb.w	r3, [r6, #1290]	; 0x50a
 80116f2:	4620      	mov	r0, r4
 80116f4:	4413      	add	r3, r2
 80116f6:	f894 1041 	ldrb.w	r1, [r4, #65]	; 0x41
 80116fa:	4a21      	ldr	r2, [pc, #132]	; (8011780 <DisplayUdf::Show(E131Bridge*)+0xa4>)
 80116fc:	f7ff fcad 	bl	801105a <Display::Printf(unsigned char, char const*, ...)>
 8011700:	2500      	movs	r5, #0
 8011702:	4f20      	ldr	r7, [pc, #128]	; (8011784 <DisplayUdf::Show(E131Bridge*)+0xa8>)
 8011704:	f8df 8080 	ldr.w	r8, [pc, #128]	; 8011788 <DisplayUdf::Show(E131Bridge*)+0xac>
 8011708:	f8df 9080 	ldr.w	r9, [pc, #128]	; 801178c <DisplayUdf::Show(E131Bridge*)+0xb0>
 801170c:	2301      	movs	r3, #1
 801170e:	4629      	mov	r1, r5
 8011710:	4630      	mov	r0, r6
 8011712:	f10d 020e 	add.w	r2, sp, #14
 8011716:	f7f9 fb01 	bl	800ad1c <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 801171a:	b1a8      	cbz	r0, 8011748 <DisplayUdf::Show(E131Bridge*)+0x6c>
 801171c:	2344      	movs	r3, #68	; 0x44
 801171e:	436b      	muls	r3, r5
 8011720:	f506 62aa 	add.w	r2, r6, #1360	; 0x550
 8011724:	58d2      	ldr	r2, [r2, r3]
 8011726:	f8bd 000e 	ldrh.w	r0, [sp, #14]
 801172a:	2a00      	cmp	r2, #0
 801172c:	bf0c      	ite	eq
 801172e:	463b      	moveq	r3, r7
 8011730:	4643      	movne	r3, r8
 8011732:	e9cd 0300 	strd	r0, r3, [sp]
 8011736:	f104 0144 	add.w	r1, r4, #68	; 0x44
 801173a:	464a      	mov	r2, r9
 801173c:	4620      	mov	r0, r4
 801173e:	5d49      	ldrb	r1, [r1, r5]
 8011740:	f105 0341 	add.w	r3, r5, #65	; 0x41
 8011744:	f7ff fc89 	bl	801105a <Display::Printf(unsigned char, char const*, ...)>
 8011748:	3501      	adds	r5, #1
 801174a:	2d04      	cmp	r5, #4
 801174c:	d1de      	bne.n	801170c <DisplayUdf::Show(E131Bridge*)+0x30>
 801174e:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8011750:	f894 104f 	ldrb.w	r1, [r4, #79]	; 0x4f
 8011754:	2a02      	cmp	r2, #2
 8011756:	d001      	beq.n	801175c <DisplayUdf::Show(E131Bridge*)+0x80>
 8011758:	6d63      	ldr	r3, [r4, #84]	; 0x54
 801175a:	b933      	cbnz	r3, 801176a <DisplayUdf::Show(E131Bridge*)+0x8e>
 801175c:	4620      	mov	r0, r4
 801175e:	4a0c      	ldr	r2, [pc, #48]	; (8011790 <DisplayUdf::Show(E131Bridge*)+0xb4>)
 8011760:	f7ff fc7b 	bl	801105a <Display::Printf(unsigned char, char const*, ...)>
 8011764:	b005      	add	sp, #20
 8011766:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801176a:	480a      	ldr	r0, [pc, #40]	; (8011794 <DisplayUdf::Show(E131Bridge*)+0xb8>)
 801176c:	9300      	str	r3, [sp, #0]
 801176e:	4b0a      	ldr	r3, [pc, #40]	; (8011798 <DisplayUdf::Show(E131Bridge*)+0xbc>)
 8011770:	2a00      	cmp	r2, #0
 8011772:	bf08      	it	eq
 8011774:	4603      	moveq	r3, r0
 8011776:	4620      	mov	r0, r4
 8011778:	4a08      	ldr	r2, [pc, #32]	; (801179c <DisplayUdf::Show(E131Bridge*)+0xc0>)
 801177a:	f7ff fc6e 	bl	801105a <Display::Printf(unsigned char, char const*, ...)>
 801177e:	e7f1      	b.n	8011764 <DisplayUdf::Show(E131Bridge*)+0x88>
 8011780:	080166e4 	stmdaeq	r1, {r2, r5, r6, r7, r9, sl, sp, lr}
 8011784:	08015a93 	stmdaeq	r1, {r0, r1, r4, r7, r9, fp, ip, lr}
 8011788:	08015a97 	stmdaeq	r1, {r0, r1, r2, r4, r7, r9, fp, ip, lr}
 801178c:	080166eb 	stmdaeq	r1, {r0, r1, r3, r5, r6, r7, r9, sl, sp, lr}
 8011790:	080166fa 	stmdaeq	r1, {r1, r3, r4, r5, r6, r7, r9, sl, sp, lr}
 8011794:	08015bab 	stmdaeq	r1, {r0, r1, r3, r5, r7, r8, r9, fp, ip, lr}
 8011798:	08015ba0 	stmdaeq	r1, {r5, r7, r8, r9, fp, ip, lr}
 801179c:	08016701 	stmdaeq	r1, {r0, r8, r9, sl, sp, lr}

080117a0 <NetworkDisplay::ShowEmacStart()>:
 80117a0:	4b01      	ldr	r3, [pc, #4]	; (80117a8 <NetworkDisplay::ShowEmacStart()+0x8>)
 80117a2:	6818      	ldr	r0, [r3, #0]
 80117a4:	f7ff bcb8 	b.w	8011118 <DisplayUdf::ShowEmacStart()>
 80117a8:	2000b770 	andcs	fp, r0, r0, ror r7

080117ac <NetworkDisplay::ShowIp()>:
 80117ac:	4b01      	ldr	r3, [pc, #4]	; (80117b4 <NetworkDisplay::ShowIp()+0x8>)
 80117ae:	6818      	ldr	r0, [r3, #0]
 80117b0:	f7ff bcc2 	b.w	8011138 <DisplayUdf::ShowIpAddress()>
 80117b4:	2000b770 	andcs	fp, r0, r0, ror r7

080117b8 <NetworkDisplay::ShowNetMask()>:
 80117b8:	4b01      	ldr	r3, [pc, #4]	; (80117c0 <NetworkDisplay::ShowNetMask()+0x8>)
 80117ba:	6818      	ldr	r0, [r3, #0]
 80117bc:	f7ff bcf0 	b.w	80111a0 <DisplayUdf::ShowNetmask()>
 80117c0:	2000b770 	andcs	fp, r0, r0, ror r7

080117c4 <NetworkDisplay::ShowGatewayIp()>:
 80117c4:	4b01      	ldr	r3, [pc, #4]	; (80117cc <NetworkDisplay::ShowGatewayIp()+0x8>)
 80117c6:	6818      	ldr	r0, [r3, #0]
 80117c8:	f7ff bd08 	b.w	80111dc <DisplayUdf::ShowGatewayIp()>
 80117cc:	2000b770 	andcs	fp, r0, r0, ror r7

080117d0 <NetworkDisplay::ShowHostName()>:
 80117d0:	4b01      	ldr	r3, [pc, #4]	; (80117d8 <NetworkDisplay::ShowHostName()+0x8>)
 80117d2:	6818      	ldr	r0, [r3, #0]
 80117d4:	f7ff bd22 	b.w	801121c <DisplayUdf::ShowHostName()>
 80117d8:	2000b770 	andcs	fp, r0, r0, ror r7

080117dc <NetworkDisplay::ShowShutdown()>:
 80117dc:	4b01      	ldr	r3, [pc, #4]	; (80117e4 <NetworkDisplay::ShowShutdown()+0x8>)
 80117de:	6818      	ldr	r0, [r3, #0]
 80117e0:	f7ff bdaa 	b.w	8011338 <DisplayUdf::ShowShutdown()>
 80117e4:	2000b770 	andcs	fp, r0, r0, ror r7

080117e8 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>:
 80117e8:	4b01      	ldr	r3, [pc, #4]	; (80117f0 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)+0x8>)
 80117ea:	6818      	ldr	r0, [r3, #0]
 80117ec:	f7ff bd6c 	b.w	80112c8 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)>
 80117f0:	2000b770 	andcs	fp, r0, r0, ror r7

080117f4 <properties::convert_json_file(char*, unsigned short, bool)>:
 80117f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80117f8:	4603      	mov	r3, r0
 80117fa:	7800      	ldrb	r0, [r0, #0]
 80117fc:	287b      	cmp	r0, #123	; 0x7b
 80117fe:	f040 80a2 	bne.w	8011946 <properties::convert_json_file(char*, unsigned short, bool)+0x152>
 8011802:	b17a      	cbz	r2, 8011824 <properties::convert_json_file(char*, unsigned short, bool)+0x30>
 8011804:	2401      	movs	r4, #1
 8011806:	461e      	mov	r6, r3
 8011808:	4620      	mov	r0, r4
 801180a:	2a00      	cmp	r2, #0
 801180c:	bf0c      	ite	eq
 801180e:	f04f 0c0a 	moveq.w	ip, #10
 8011812:	f04f 0c00 	movne.w	ip, #0
 8011816:	273d      	movs	r7, #61	; 0x3d
 8011818:	42a1      	cmp	r1, r4
 801181a:	d850      	bhi.n	80118be <properties::convert_json_file(char*, unsigned short, bool)+0xca>
 801181c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011820:	463c      	mov	r4, r7
 8011822:	e7f2      	b.n	801180a <properties::convert_json_file(char*, unsigned short, bool)+0x16>
 8011824:	2023      	movs	r0, #35	; 0x23
 8011826:	f803 0b01 	strb.w	r0, [r3], #1
 801182a:	461c      	mov	r4, r3
 801182c:	2701      	movs	r7, #1
 801182e:	42b9      	cmp	r1, r7
 8011830:	d811      	bhi.n	8011856 <properties::convert_json_file(char*, unsigned short, bool)+0x62>
 8011832:	2001      	movs	r0, #1
 8011834:	461e      	mov	r6, r3
 8011836:	230a      	movs	r3, #10
 8011838:	4625      	mov	r5, r4
 801183a:	f806 3b01 	strb.w	r3, [r6], #1
 801183e:	3001      	adds	r0, #1
 8011840:	462b      	mov	r3, r5
 8011842:	781c      	ldrb	r4, [r3, #0]
 8011844:	3501      	adds	r5, #1
 8011846:	2c7b      	cmp	r4, #123	; 0x7b
 8011848:	d0ea      	beq.n	8011820 <properties::convert_json_file(char*, unsigned short, bool)+0x2c>
 801184a:	42b9      	cmp	r1, r7
 801184c:	f107 0401 	add.w	r4, r7, #1
 8011850:	d9db      	bls.n	801180a <properties::convert_json_file(char*, unsigned short, bool)+0x16>
 8011852:	4627      	mov	r7, r4
 8011854:	e7f4      	b.n	8011840 <properties::convert_json_file(char*, unsigned short, bool)+0x4c>
 8011856:	f814 0b01 	ldrb.w	r0, [r4], #1
 801185a:	2822      	cmp	r0, #34	; 0x22
 801185c:	d119      	bne.n	8011892 <properties::convert_json_file(char*, unsigned short, bool)+0x9e>
 801185e:	46a4      	mov	ip, r4
 8011860:	461d      	mov	r5, r3
 8011862:	2601      	movs	r6, #1
 8011864:	f89c e000 	ldrb.w	lr, [ip]
 8011868:	4664      	mov	r4, ip
 801186a:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 801186e:	462b      	mov	r3, r5
 8011870:	4630      	mov	r0, r6
 8011872:	f10c 0c01 	add.w	ip, ip, #1
 8011876:	f105 0501 	add.w	r5, r5, #1
 801187a:	f106 0601 	add.w	r6, r6, #1
 801187e:	d0d9      	beq.n	8011834 <properties::convert_json_file(char*, unsigned short, bool)+0x40>
 8011880:	3701      	adds	r7, #1
 8011882:	42b9      	cmp	r1, r7
 8011884:	4664      	mov	r4, ip
 8011886:	f805 ec01 	strb.w	lr, [r5, #-1]
 801188a:	d8eb      	bhi.n	8011864 <properties::convert_json_file(char*, unsigned short, bool)+0x70>
 801188c:	4630      	mov	r0, r6
 801188e:	462b      	mov	r3, r5
 8011890:	e7d0      	b.n	8011834 <properties::convert_json_file(char*, unsigned short, bool)+0x40>
 8011892:	3701      	adds	r7, #1
 8011894:	e7cb      	b.n	801182e <properties::convert_json_file(char*, unsigned short, bool)+0x3a>
 8011896:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 801189a:	d110      	bne.n	80118be <properties::convert_json_file(char*, unsigned short, bool)+0xca>
 801189c:	eba0 0803 	sub.w	r8, r0, r3
 80118a0:	461a      	mov	r2, r3
 80118a2:	eb08 0003 	add.w	r0, r8, r3
 80118a6:	f813 eb01 	ldrb.w	lr, [r3], #1
 80118aa:	1c65      	adds	r5, r4, #1
 80118ac:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 80118b0:	d04c      	beq.n	801194c <properties::convert_json_file(char*, unsigned short, bool)+0x158>
 80118b2:	42a1      	cmp	r1, r4
 80118b4:	d911      	bls.n	80118da <properties::convert_json_file(char*, unsigned short, bool)+0xe6>
 80118b6:	462c      	mov	r4, r5
 80118b8:	f806 eb01 	strb.w	lr, [r6], #1
 80118bc:	e7f0      	b.n	80118a0 <properties::convert_json_file(char*, unsigned short, bool)+0xac>
 80118be:	42a1      	cmp	r1, r4
 80118c0:	461d      	mov	r5, r3
 80118c2:	f893 e000 	ldrb.w	lr, [r3]
 80118c6:	f104 0401 	add.w	r4, r4, #1
 80118ca:	f103 0301 	add.w	r3, r3, #1
 80118ce:	d8e2      	bhi.n	8011896 <properties::convert_json_file(char*, unsigned short, bool)+0xa2>
 80118d0:	462b      	mov	r3, r5
 80118d2:	e7e3      	b.n	801189c <properties::convert_json_file(char*, unsigned short, bool)+0xa8>
 80118d4:	f1be 0f3a 	cmp.w	lr, #58	; 0x3a
 80118d8:	d009      	beq.n	80118ee <properties::convert_json_file(char*, unsigned short, bool)+0xfa>
 80118da:	42a9      	cmp	r1, r5
 80118dc:	4614      	mov	r4, r2
 80118de:	f892 e000 	ldrb.w	lr, [r2]
 80118e2:	f105 0501 	add.w	r5, r5, #1
 80118e6:	f102 0201 	add.w	r2, r2, #1
 80118ea:	d8f3      	bhi.n	80118d4 <properties::convert_json_file(char*, unsigned short, bool)+0xe0>
 80118ec:	4622      	mov	r2, r4
 80118ee:	7814      	ldrb	r4, [r2, #0]
 80118f0:	4696      	mov	lr, r2
 80118f2:	2c2f      	cmp	r4, #47	; 0x2f
 80118f4:	462b      	mov	r3, r5
 80118f6:	f102 0201 	add.w	r2, r2, #1
 80118fa:	f105 0501 	add.w	r5, r5, #1
 80118fe:	d81a      	bhi.n	8011936 <properties::convert_json_file(char*, unsigned short, bool)+0x142>
 8011900:	4299      	cmp	r1, r3
 8011902:	d8f4      	bhi.n	80118ee <properties::convert_json_file(char*, unsigned short, bool)+0xfa>
 8011904:	2c22      	cmp	r4, #34	; 0x22
 8011906:	bf08      	it	eq
 8011908:	4696      	moveq	lr, r2
 801190a:	4673      	mov	r3, lr
 801190c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8011910:	1c6c      	adds	r4, r5, #1
 8011912:	2a22      	cmp	r2, #34	; 0x22
 8011914:	d011      	beq.n	801193a <properties::convert_json_file(char*, unsigned short, bool)+0x146>
 8011916:	2a2c      	cmp	r2, #44	; 0x2c
 8011918:	d00f      	beq.n	801193a <properties::convert_json_file(char*, unsigned short, bool)+0x146>
 801191a:	2a7d      	cmp	r2, #125	; 0x7d
 801191c:	d00d      	beq.n	801193a <properties::convert_json_file(char*, unsigned short, bool)+0x146>
 801191e:	42a9      	cmp	r1, r5
 8011920:	d90f      	bls.n	8011942 <properties::convert_json_file(char*, unsigned short, bool)+0x14e>
 8011922:	f1a2 0520 	sub.w	r5, r2, #32
 8011926:	2d5a      	cmp	r5, #90	; 0x5a
 8011928:	d803      	bhi.n	8011932 <properties::convert_json_file(char*, unsigned short, bool)+0x13e>
 801192a:	469e      	mov	lr, r3
 801192c:	f806 2b01 	strb.w	r2, [r6], #1
 8011930:	3001      	adds	r0, #1
 8011932:	4625      	mov	r5, r4
 8011934:	e7e9      	b.n	801190a <properties::convert_json_file(char*, unsigned short, bool)+0x116>
 8011936:	461d      	mov	r5, r3
 8011938:	e7e7      	b.n	801190a <properties::convert_json_file(char*, unsigned short, bool)+0x116>
 801193a:	462c      	mov	r4, r5
 801193c:	f806 cb01 	strb.w	ip, [r6], #1
 8011940:	3001      	adds	r0, #1
 8011942:	3401      	adds	r4, #1
 8011944:	e768      	b.n	8011818 <properties::convert_json_file(char*, unsigned short, bool)+0x24>
 8011946:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801194a:	e767      	b.n	801181c <properties::convert_json_file(char*, unsigned short, bool)+0x28>
 801194c:	4625      	mov	r5, r4
 801194e:	f806 7b01 	strb.w	r7, [r6], #1
 8011952:	3001      	adds	r0, #1
 8011954:	e7c1      	b.n	80118da <properties::convert_json_file(char*, unsigned short, bool)+0xe6>
	...

08011958 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>:
 8011958:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801195c:	6002      	str	r2, [r0, #0]
 801195e:	4614      	mov	r4, r2
 8011960:	2200      	movs	r2, #0
 8011962:	80c2      	strh	r2, [r0, #6]
 8011964:	4a1c      	ldr	r2, [pc, #112]	; (80119d8 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x80>)
 8011966:	4606      	mov	r6, r0
 8011968:	7812      	ldrb	r2, [r2, #0]
 801196a:	8083      	strh	r3, [r0, #4]
 801196c:	f002 0201 	and.w	r2, r2, #1
 8011970:	7202      	strb	r2, [r0, #8]
 8011972:	4608      	mov	r0, r1
 8011974:	4605      	mov	r5, r0
 8011976:	782f      	ldrb	r7, [r5, #0]
 8011978:	3001      	adds	r0, #1
 801197a:	2f00      	cmp	r7, #0
 801197c:	d1fa      	bne.n	8011974 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x1c>
 801197e:	1a6d      	subs	r5, r5, r1
 8011980:	b29b      	uxth	r3, r3
 8011982:	b1d2      	cbz	r2, 80119ba <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x62>
 8011984:	1d2f      	adds	r7, r5, #4
 8011986:	429f      	cmp	r7, r3
 8011988:	d814      	bhi.n	80119b4 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 801198a:	f04f 087b 	mov.w	r8, #123	; 0x7b
 801198e:	f04f 0922 	mov.w	r9, #34	; 0x22
 8011992:	462a      	mov	r2, r5
 8011994:	f884 8000 	strb.w	r8, [r4]
 8011998:	f884 9001 	strb.w	r9, [r4, #1]
 801199c:	1ca0      	adds	r0, r4, #2
 801199e:	f000 fe64 	bl	801266a <memmove>
 80119a2:	223a      	movs	r2, #58	; 0x3a
 80119a4:	1963      	adds	r3, r4, r5
 80119a6:	3505      	adds	r5, #5
 80119a8:	f883 9002 	strb.w	r9, [r3, #2]
 80119ac:	70da      	strb	r2, [r3, #3]
 80119ae:	80f5      	strh	r5, [r6, #6]
 80119b0:	f804 8007 	strb.w	r8, [r4, r7]
 80119b4:	4630      	mov	r0, r6
 80119b6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80119ba:	1caf      	adds	r7, r5, #2
 80119bc:	429f      	cmp	r7, r3
 80119be:	d8f9      	bhi.n	80119b4 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 80119c0:	4620      	mov	r0, r4
 80119c2:	2323      	movs	r3, #35	; 0x23
 80119c4:	462a      	mov	r2, r5
 80119c6:	f800 3b01 	strb.w	r3, [r0], #1
 80119ca:	f000 fe4e 	bl	801266a <memmove>
 80119ce:	230a      	movs	r3, #10
 80119d0:	442c      	add	r4, r5
 80119d2:	7063      	strb	r3, [r4, #1]
 80119d4:	80f7      	strh	r7, [r6, #6]
 80119d6:	e7ed      	b.n	80119b4 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 80119d8:	2000b774 	andcs	fp, r0, r4, ror r7

080119dc <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>:
 80119dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80119de:	469c      	mov	ip, r3
 80119e0:	8885      	ldrh	r5, [r0, #4]
 80119e2:	88c3      	ldrh	r3, [r0, #6]
 80119e4:	b085      	sub	sp, #20
 80119e6:	42ab      	cmp	r3, r5
 80119e8:	d302      	bcc.n	80119f0 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x14>
 80119ea:	2000      	movs	r0, #0
 80119ec:	b005      	add	sp, #20
 80119ee:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80119f0:	4604      	mov	r4, r0
 80119f2:	6800      	ldr	r0, [r0, #0]
 80119f4:	1aed      	subs	r5, r5, r3
 80119f6:	4418      	add	r0, r3
 80119f8:	b2d6      	uxtb	r6, r2
 80119fa:	f3c2 2707 	ubfx	r7, r2, #8, #8
 80119fe:	f3c2 4307 	ubfx	r3, r2, #16, #8
 8011a02:	f894 e008 	ldrb.w	lr, [r4, #8]
 8011a06:	0e12      	lsrs	r2, r2, #24
 8011a08:	f1bc 0f00 	cmp.w	ip, #0
 8011a0c:	d109      	bne.n	8011a22 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x46>
 8011a0e:	f1be 0f00 	cmp.w	lr, #0
 8011a12:	d109      	bne.n	8011a28 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x4c>
 8011a14:	e9cd 3202 	strd	r3, r2, [sp, #8]
 8011a18:	e9cd 6700 	strd	r6, r7, [sp]
 8011a1c:	460b      	mov	r3, r1
 8011a1e:	4a0e      	ldr	r2, [pc, #56]	; (8011a58 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x7c>)
 8011a20:	e008      	b.n	8011a34 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x58>
 8011a22:	f1be 0f00 	cmp.w	lr, #0
 8011a26:	d00f      	beq.n	8011a48 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x6c>
 8011a28:	e9cd 3202 	strd	r3, r2, [sp, #8]
 8011a2c:	460b      	mov	r3, r1
 8011a2e:	e9cd 6700 	strd	r6, r7, [sp]
 8011a32:	4a0a      	ldr	r2, [pc, #40]	; (8011a5c <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x80>)
 8011a34:	4629      	mov	r1, r5
 8011a36:	f7f7 fb7f 	bl	8009138 <snprintf>
 8011a3a:	4285      	cmp	r5, r0
 8011a3c:	dbd5      	blt.n	80119ea <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0xe>
 8011a3e:	88e3      	ldrh	r3, [r4, #6]
 8011a40:	4403      	add	r3, r0
 8011a42:	80e3      	strh	r3, [r4, #6]
 8011a44:	2001      	movs	r0, #1
 8011a46:	e7d1      	b.n	80119ec <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x10>
 8011a48:	e9cd 3202 	strd	r3, r2, [sp, #8]
 8011a4c:	e9cd 6700 	strd	r6, r7, [sp]
 8011a50:	460b      	mov	r3, r1
 8011a52:	4a03      	ldr	r2, [pc, #12]	; (8011a60 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x84>)
 8011a54:	e7ee      	b.n	8011a34 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x58>
 8011a56:	bf00      	nop
 8011a58:	0801671f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r8, r9, sl, sp, lr}
 8011a5c:	0801670b 	stmdaeq	r1, {r0, r1, r3, r8, r9, sl, sp, lr}
 8011a60:	08016720 	stmdaeq	r1, {r5, r8, r9, sl, sp, lr}

08011a64 <PropertiesBuilder::AddComment(char const*)>:
 8011a64:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011a66:	7a06      	ldrb	r6, [r0, #8]
 8011a68:	b996      	cbnz	r6, 8011a90 <PropertiesBuilder::AddComment(char const*)+0x2c>
 8011a6a:	4604      	mov	r4, r0
 8011a6c:	88c0      	ldrh	r0, [r0, #6]
 8011a6e:	88a5      	ldrh	r5, [r4, #4]
 8011a70:	42a8      	cmp	r0, r5
 8011a72:	d20d      	bcs.n	8011a90 <PropertiesBuilder::AddComment(char const*)+0x2c>
 8011a74:	6827      	ldr	r7, [r4, #0]
 8011a76:	1a2d      	subs	r5, r5, r0
 8011a78:	460b      	mov	r3, r1
 8011a7a:	4a06      	ldr	r2, [pc, #24]	; (8011a94 <PropertiesBuilder::AddComment(char const*)+0x30>)
 8011a7c:	4629      	mov	r1, r5
 8011a7e:	4438      	add	r0, r7
 8011a80:	f7f7 fb5a 	bl	8009138 <snprintf>
 8011a84:	4285      	cmp	r5, r0
 8011a86:	bfa1      	itttt	ge
 8011a88:	2601      	movge	r6, #1
 8011a8a:	88e3      	ldrhge	r3, [r4, #6]
 8011a8c:	18c0      	addge	r0, r0, r3
 8011a8e:	80e0      	strhge	r0, [r4, #6]
 8011a90:	4630      	mov	r0, r6
 8011a92:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011a94:	08016730 	stmdaeq	r1, {r4, r5, r8, r9, sl, sp, lr}

08011a98 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>:
 8011a98:	e9c0 1200 	strd	r1, r2, [r0]
 8011a9c:	4770      	bx	lr

08011a9e <ReadConfigFile::~ReadConfigFile()>:
 8011a9e:	4770      	bx	lr

08011aa0 <ReadConfigFile::Read(char const*, unsigned int)>:
 8011aa0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011aa4:	4606      	mov	r6, r0
 8011aa6:	460d      	mov	r5, r1
 8011aa8:	4614      	mov	r4, r2
 8011aaa:	f04f 0800 	mov.w	r8, #0
 8011aae:	b0a0      	sub	sp, #128	; 0x80
 8011ab0:	b33c      	cbz	r4, 8011b02 <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 8011ab2:	466b      	mov	r3, sp
 8011ab4:	462a      	mov	r2, r5
 8011ab6:	4619      	mov	r1, r3
 8011ab8:	e007      	b.n	8011aca <ReadConfigFile::Read(char const*, unsigned int)+0x2a>
 8011aba:	f803 7b01 	strb.w	r7, [r3], #1
 8011abe:	1a58      	subs	r0, r3, r1
 8011ac0:	287f      	cmp	r0, #127	; 0x7f
 8011ac2:	4615      	mov	r5, r2
 8011ac4:	dc1d      	bgt.n	8011b02 <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 8011ac6:	3c01      	subs	r4, #1
 8011ac8:	d00f      	beq.n	8011aea <ReadConfigFile::Read(char const*, unsigned int)+0x4a>
 8011aca:	7817      	ldrb	r7, [r2, #0]
 8011acc:	4610      	mov	r0, r2
 8011ace:	2f0d      	cmp	r7, #13
 8011ad0:	f102 0201 	add.w	r2, r2, #1
 8011ad4:	d001      	beq.n	8011ada <ReadConfigFile::Read(char const*, unsigned int)+0x3a>
 8011ad6:	2f0a      	cmp	r7, #10
 8011ad8:	d1ef      	bne.n	8011aba <ReadConfigFile::Read(char const*, unsigned int)+0x1a>
 8011ada:	4605      	mov	r5, r0
 8011adc:	b12c      	cbz	r4, 8011aea <ReadConfigFile::Read(char const*, unsigned int)+0x4a>
 8011ade:	f810 2b01 	ldrb.w	r2, [r0], #1
 8011ae2:	2a0d      	cmp	r2, #13
 8011ae4:	d00b      	beq.n	8011afe <ReadConfigFile::Read(char const*, unsigned int)+0x5e>
 8011ae6:	2a0a      	cmp	r2, #10
 8011ae8:	d009      	beq.n	8011afe <ReadConfigFile::Read(char const*, unsigned int)+0x5e>
 8011aea:	f89d 2000 	ldrb.w	r2, [sp]
 8011aee:	2a60      	cmp	r2, #96	; 0x60
 8011af0:	d9de      	bls.n	8011ab0 <ReadConfigFile::Read(char const*, unsigned int)+0x10>
 8011af2:	f883 8000 	strb.w	r8, [r3]
 8011af6:	e9d6 3000 	ldrd	r3, r0, [r6]
 8011afa:	4798      	blx	r3
 8011afc:	e7d8      	b.n	8011ab0 <ReadConfigFile::Read(char const*, unsigned int)+0x10>
 8011afe:	3c01      	subs	r4, #1
 8011b00:	e7eb      	b.n	8011ada <ReadConfigFile::Read(char const*, unsigned int)+0x3a>
 8011b02:	b020      	add	sp, #128	; 0x80
 8011b04:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08011b08 <Sscan::Char(char const*, char const*, char*, unsigned int&)>:
 8011b08:	b570      	push	{r4, r5, r6, lr}
 8011b0a:	4615      	mov	r5, r2
 8011b0c:	461c      	mov	r4, r3
 8011b0e:	f000 f890 	bl	8011c32 <Sscan::checkName(char const*, char const*)>
 8011b12:	b180      	cbz	r0, 8011b36 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2e>
 8011b14:	2100      	movs	r1, #0
 8011b16:	5c43      	ldrb	r3, [r0, r1]
 8011b18:	6826      	ldr	r6, [r4, #0]
 8011b1a:	b28a      	uxth	r2, r1
 8011b1c:	b143      	cbz	r3, 8011b30 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x28>
 8011b1e:	42b2      	cmp	r2, r6
 8011b20:	d303      	bcc.n	8011b2a <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x22>
 8011b22:	2b0a      	cmp	r3, #10
 8011b24:	d004      	beq.n	8011b30 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x28>
 8011b26:	2002      	movs	r0, #2
 8011b28:	e004      	b.n	8011b34 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2c>
 8011b2a:	546b      	strb	r3, [r5, r1]
 8011b2c:	3101      	adds	r1, #1
 8011b2e:	e7f2      	b.n	8011b16 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0xe>
 8011b30:	2000      	movs	r0, #0
 8011b32:	6022      	str	r2, [r4, #0]
 8011b34:	bd70      	pop	{r4, r5, r6, pc}
 8011b36:	2001      	movs	r0, #1
 8011b38:	e7fc      	b.n	8011b34 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2c>

08011b3a <Sscan::IpAddress(char const*, char const*, unsigned int&)>:
 8011b3a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8011b3c:	4615      	mov	r5, r2
 8011b3e:	f000 f878 	bl	8011c32 <Sscan::checkName(char const*, char const*)>
 8011b42:	bb58      	cbnz	r0, 8011b9c <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x62>
 8011b44:	2001      	movs	r0, #1
 8011b46:	e027      	b.n	8011b98 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5e>
 8011b48:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 8011b4c:	2b09      	cmp	r3, #9
 8011b4e:	d822      	bhi.n	8011b96 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 8011b50:	4603      	mov	r3, r0
 8011b52:	fb0c 2101 	mla	r1, ip, r1, r2
 8011b56:	3930      	subs	r1, #48	; 0x30
 8011b58:	4618      	mov	r0, r3
 8011b5a:	f810 2b01 	ldrb.w	r2, [r0], #1
 8011b5e:	2a2e      	cmp	r2, #46	; 0x2e
 8011b60:	d115      	bne.n	8011b8e <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x54>
 8011b62:	29ff      	cmp	r1, #255	; 0xff
 8011b64:	d817      	bhi.n	8011b96 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 8011b66:	3401      	adds	r4, #1
 8011b68:	2c03      	cmp	r4, #3
 8011b6a:	f806 1b01 	strb.w	r1, [r6], #1
 8011b6e:	d119      	bne.n	8011ba4 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x6a>
 8011b70:	2400      	movs	r4, #0
 8011b72:	260a      	movs	r6, #10
 8011b74:	1d1a      	adds	r2, r3, #4
 8011b76:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8011b7a:	f011 00df 	ands.w	r0, r1, #223	; 0xdf
 8011b7e:	d115      	bne.n	8011bac <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x72>
 8011b80:	2cff      	cmp	r4, #255	; 0xff
 8011b82:	d808      	bhi.n	8011b96 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 8011b84:	f88d 4007 	strb.w	r4, [sp, #7]
 8011b88:	9b01      	ldr	r3, [sp, #4]
 8011b8a:	602b      	str	r3, [r5, #0]
 8011b8c:	e004      	b.n	8011b98 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5e>
 8011b8e:	2a00      	cmp	r2, #0
 8011b90:	d0e7      	beq.n	8011b62 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 8011b92:	42b8      	cmp	r0, r7
 8011b94:	d1d8      	bne.n	8011b48 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0xe>
 8011b96:	2002      	movs	r0, #2
 8011b98:	b003      	add	sp, #12
 8011b9a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011b9c:	2400      	movs	r4, #0
 8011b9e:	f04f 0c0a 	mov.w	ip, #10
 8011ba2:	ae01      	add	r6, sp, #4
 8011ba4:	4603      	mov	r3, r0
 8011ba6:	2100      	movs	r1, #0
 8011ba8:	1d07      	adds	r7, r0, #4
 8011baa:	e7d5      	b.n	8011b58 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x1e>
 8011bac:	4293      	cmp	r3, r2
 8011bae:	d0f2      	beq.n	8011b96 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 8011bb0:	3930      	subs	r1, #48	; 0x30
 8011bb2:	2909      	cmp	r1, #9
 8011bb4:	d8ef      	bhi.n	8011b96 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 8011bb6:	fb06 1404 	mla	r4, r6, r4, r1
 8011bba:	e7dc      	b.n	8011b76 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x3c>

08011bbc <Sscan::Uint16(char const*, char const*, unsigned short&)>:
 8011bbc:	b538      	push	{r3, r4, r5, lr}
 8011bbe:	4615      	mov	r5, r2
 8011bc0:	f000 f837 	bl	8011c32 <Sscan::checkName(char const*, char const*)>
 8011bc4:	b1a0      	cbz	r0, 8011bf0 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x34>
 8011bc6:	4604      	mov	r4, r0
 8011bc8:	2100      	movs	r1, #0
 8011bca:	220a      	movs	r2, #10
 8011bcc:	7823      	ldrb	r3, [r4, #0]
 8011bce:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
 8011bd2:	2809      	cmp	r0, #9
 8011bd4:	d80e      	bhi.n	8011bf4 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x38>
 8011bd6:	fb02 3101 	mla	r1, r2, r1, r3
 8011bda:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8011bde:	3930      	subs	r1, #48	; 0x30
 8011be0:	f013 00df 	ands.w	r0, r3, #223	; 0xdf
 8011be4:	d1f2      	bne.n	8011bcc <Sscan::Uint16(char const*, char const*, unsigned short&)+0x10>
 8011be6:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
 8011bea:	d203      	bcs.n	8011bf4 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x38>
 8011bec:	8029      	strh	r1, [r5, #0]
 8011bee:	bd38      	pop	{r3, r4, r5, pc}
 8011bf0:	2001      	movs	r0, #1
 8011bf2:	e7fc      	b.n	8011bee <Sscan::Uint16(char const*, char const*, unsigned short&)+0x32>
 8011bf4:	2002      	movs	r0, #2
 8011bf6:	e7fa      	b.n	8011bee <Sscan::Uint16(char const*, char const*, unsigned short&)+0x32>

08011bf8 <Sscan::Uint8(char const*, char const*, unsigned char&)>:
 8011bf8:	b538      	push	{r3, r4, r5, lr}
 8011bfa:	4615      	mov	r5, r2
 8011bfc:	f000 f819 	bl	8011c32 <Sscan::checkName(char const*, char const*)>
 8011c00:	b198      	cbz	r0, 8011c2a <Sscan::Uint8(char const*, char const*, unsigned char&)+0x32>
 8011c02:	4604      	mov	r4, r0
 8011c04:	2100      	movs	r1, #0
 8011c06:	220a      	movs	r2, #10
 8011c08:	7823      	ldrb	r3, [r4, #0]
 8011c0a:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
 8011c0e:	2809      	cmp	r0, #9
 8011c10:	d80d      	bhi.n	8011c2e <Sscan::Uint8(char const*, char const*, unsigned char&)+0x36>
 8011c12:	fb02 3101 	mla	r1, r2, r1, r3
 8011c16:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8011c1a:	3930      	subs	r1, #48	; 0x30
 8011c1c:	f013 00df 	ands.w	r0, r3, #223	; 0xdf
 8011c20:	d1f2      	bne.n	8011c08 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x10>
 8011c22:	29ff      	cmp	r1, #255	; 0xff
 8011c24:	d803      	bhi.n	8011c2e <Sscan::Uint8(char const*, char const*, unsigned char&)+0x36>
 8011c26:	7029      	strb	r1, [r5, #0]
 8011c28:	bd38      	pop	{r3, r4, r5, pc}
 8011c2a:	2001      	movs	r0, #1
 8011c2c:	e7fc      	b.n	8011c28 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>
 8011c2e:	2002      	movs	r0, #2
 8011c30:	e7fa      	b.n	8011c28 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>

08011c32 <Sscan::checkName(char const*, char const*)>:
 8011c32:	4603      	mov	r3, r0
 8011c34:	b510      	push	{r4, lr}
 8011c36:	3901      	subs	r1, #1
 8011c38:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 8011c3c:	461c      	mov	r4, r3
 8011c3e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8011c42:	b120      	cbz	r0, 8011c4e <Sscan::checkName(char const*, char const*)+0x1c>
 8011c44:	b10a      	cbz	r2, 8011c4a <Sscan::checkName(char const*, char const*)+0x18>
 8011c46:	4290      	cmp	r0, r2
 8011c48:	d0f6      	beq.n	8011c38 <Sscan::checkName(char const*, char const*)+0x6>
 8011c4a:	2000      	movs	r0, #0
 8011c4c:	e006      	b.n	8011c5c <Sscan::checkName(char const*, char const*)+0x2a>
 8011c4e:	2a3d      	cmp	r2, #61	; 0x3d
 8011c50:	d104      	bne.n	8011c5c <Sscan::checkName(char const*, char const*)+0x2a>
 8011c52:	7860      	ldrb	r0, [r4, #1]
 8011c54:	f010 00df 	ands.w	r0, r0, #223	; 0xdf
 8011c58:	d000      	beq.n	8011c5c <Sscan::checkName(char const*, char const*)+0x2a>
 8011c5a:	1c60      	adds	r0, r4, #1
 8011c5c:	bd10      	pop	{r4, pc}

08011c5e <LightSet::GetDmxStartAddress()>:
 8011c5e:	2001      	movs	r0, #1
 8011c60:	4770      	bx	lr

08011c62 <LightSet::GetDmxFootprint()>:
 8011c62:	f44f 7000 	mov.w	r0, #512	; 0x200
 8011c66:	4770      	bx	lr

08011c68 <LightSet::SetDmxStartAddress(unsigned short)>:
 8011c68:	2000      	movs	r0, #0
 8011c6a:	4770      	bx	lr

08011c6c <LightSet::GetSlotInfo(unsigned short, lightset::SlotInfo&)>:
 8011c6c:	2300      	movs	r3, #0
 8011c6e:	2001      	movs	r0, #1
 8011c70:	7093      	strb	r3, [r2, #2]
 8011c72:	8010      	strh	r0, [r2, #0]
 8011c74:	4770      	bx	lr
	...

08011c78 <Display::PrintInfo() [clone .isra.0]>:
 8011c78:	b910      	cbnz	r0, 8011c80 <Display::PrintInfo() [clone .isra.0]+0x8>
 8011c7a:	4803      	ldr	r0, [pc, #12]	; (8011c88 <Display::PrintInfo() [clone .isra.0]+0x10>)
 8011c7c:	f000 bd2d 	b.w	80126da <puts>
 8011c80:	6803      	ldr	r3, [r0, #0]
 8011c82:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8011c84:	4718      	bx	r3
 8011c86:	bf00      	nop
 8011c88:	08016842 	stmdaeq	r1, {r1, r6, fp, sp, lr}

08011c8c <HAL_I2C::WriteRegister(unsigned char, unsigned short)>:
 8011c8c:	b513      	push	{r0, r1, r4, lr}
 8011c8e:	4604      	mov	r4, r0
 8011c90:	0a13      	lsrs	r3, r2, #8
 8011c92:	7800      	ldrb	r0, [r0, #0]
 8011c94:	f88d 1004 	strb.w	r1, [sp, #4]
 8011c98:	f88d 3005 	strb.w	r3, [sp, #5]
 8011c9c:	f88d 2006 	strb.w	r2, [sp, #6]
 8011ca0:	f001 fd16 	bl	80136d0 <gd32_i2c_set_address>
 8011ca4:	6860      	ldr	r0, [r4, #4]
 8011ca6:	f001 fd0b 	bl	80136c0 <gd32_i2c_set_baudrate>
 8011caa:	2103      	movs	r1, #3
 8011cac:	a801      	add	r0, sp, #4
 8011cae:	f001 fd15 	bl	80136dc <gd32_i2c_write>
 8011cb2:	b002      	add	sp, #8
 8011cb4:	bd10      	pop	{r4, pc}

08011cb6 <HAL_I2C::IsConnected_(unsigned char, unsigned int)>:
 8011cb6:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011cb8:	460d      	mov	r5, r1
 8011cba:	4604      	mov	r4, r0
 8011cbc:	f001 fd08 	bl	80136d0 <gd32_i2c_set_address>
 8011cc0:	4628      	mov	r0, r5
 8011cc2:	f001 fcfd 	bl	80136c0 <gd32_i2c_set_baudrate>
 8011cc6:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8011cca:	2b07      	cmp	r3, #7
 8011ccc:	d902      	bls.n	8011cd4 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x1e>
 8011cce:	3c50      	subs	r4, #80	; 0x50
 8011cd0:	2c0f      	cmp	r4, #15
 8011cd2:	d809      	bhi.n	8011ce8 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x32>
 8011cd4:	2101      	movs	r1, #1
 8011cd6:	f10d 0007 	add.w	r0, sp, #7
 8011cda:	f001 fd65 	bl	80137a8 <gd32_i2c_read>
 8011cde:	fab0 f080 	clz	r0, r0
 8011ce2:	0940      	lsrs	r0, r0, #5
 8011ce4:	b003      	add	sp, #12
 8011ce6:	bd30      	pop	{r4, r5, pc}
 8011ce8:	2100      	movs	r1, #0
 8011cea:	4608      	mov	r0, r1
 8011cec:	f001 fcf6 	bl	80136dc <gd32_i2c_write>
 8011cf0:	e7f5      	b.n	8011cde <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x28>

08011cf2 <Display::Detect7Segment()>:
 8011cf2:	b538      	push	{r3, r4, r5, lr}
 8011cf4:	68c1      	ldr	r1, [r0, #12]
 8011cf6:	4604      	mov	r4, r0
 8011cf8:	7a00      	ldrb	r0, [r0, #8]
 8011cfa:	f7ff ffdc 	bl	8011cb6 <HAL_I2C::IsConnected_(unsigned char, unsigned int)>
 8011cfe:	7460      	strb	r0, [r4, #17]
 8011d00:	b170      	cbz	r0, 8011d20 <Display::Detect7Segment()+0x2e>
 8011d02:	2200      	movs	r2, #0
 8011d04:	f104 0508 	add.w	r5, r4, #8
 8011d08:	4611      	mov	r1, r2
 8011d0a:	4628      	mov	r0, r5
 8011d0c:	f7ff ffbe 	bl	8011c8c <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 8011d10:	7c63      	ldrb	r3, [r4, #17]
 8011d12:	b12b      	cbz	r3, 8011d20 <Display::Detect7Segment()+0x2e>
 8011d14:	f24c 02ff 	movw	r2, #49407	; 0xc0ff
 8011d18:	2112      	movs	r1, #18
 8011d1a:	4628      	mov	r0, r5
 8011d1c:	f7ff ffb6 	bl	8011c8c <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 8011d20:	bd38      	pop	{r3, r4, r5, pc}

08011d22 <Display::Detect(display::Type)>:
 8011d22:	2902      	cmp	r1, #2
 8011d24:	b538      	push	{r3, r4, r5, lr}
 8011d26:	4604      	mov	r4, r0
 8011d28:	d014      	beq.n	8011d54 <Display::Detect(display::Type)+0x32>
 8011d2a:	2904      	cmp	r1, #4
 8011d2c:	d01b      	beq.n	8011d66 <Display::Detect(display::Type)+0x44>
 8011d2e:	69a0      	ldr	r0, [r4, #24]
 8011d30:	b168      	cbz	r0, 8011d4e <Display::Detect(display::Type)+0x2c>
 8011d32:	6803      	ldr	r3, [r0, #0]
 8011d34:	689b      	ldr	r3, [r3, #8]
 8011d36:	4798      	blx	r3
 8011d38:	4603      	mov	r3, r0
 8011d3a:	69a0      	ldr	r0, [r4, #24]
 8011d3c:	b9ab      	cbnz	r3, 8011d6a <Display::Detect(display::Type)+0x48>
 8011d3e:	b110      	cbz	r0, 8011d46 <Display::Detect(display::Type)+0x24>
 8011d40:	6803      	ldr	r3, [r0, #0]
 8011d42:	685b      	ldr	r3, [r3, #4]
 8011d44:	4798      	blx	r3
 8011d46:	2300      	movs	r3, #0
 8011d48:	61a3      	str	r3, [r4, #24]
 8011d4a:	2304      	movs	r3, #4
 8011d4c:	6023      	str	r3, [r4, #0]
 8011d4e:	2300      	movs	r3, #0
 8011d50:	6163      	str	r3, [r4, #20]
 8011d52:	e010      	b.n	8011d76 <Display::Detect(display::Type)+0x54>
 8011d54:	2018      	movs	r0, #24
 8011d56:	f000 fbc9 	bl	80124ec <operator new(unsigned int)>
 8011d5a:	4605      	mov	r5, r0
 8011d5c:	2100      	movs	r1, #0
 8011d5e:	f000 f89d 	bl	8011e9c <Ssd1306::Ssd1306(TOledPanel)>
 8011d62:	61a5      	str	r5, [r4, #24]
 8011d64:	e7e3      	b.n	8011d2e <Display::Detect(display::Type)+0xc>
 8011d66:	6001      	str	r1, [r0, #0]
 8011d68:	e7e1      	b.n	8011d2e <Display::Detect(display::Type)+0xc>
 8011d6a:	6803      	ldr	r3, [r0, #0]
 8011d6c:	68db      	ldr	r3, [r3, #12]
 8011d6e:	4798      	blx	r3
 8011d70:	69a3      	ldr	r3, [r4, #24]
 8011d72:	2b00      	cmp	r3, #0
 8011d74:	d0eb      	beq.n	8011d4e <Display::Detect(display::Type)+0x2c>
 8011d76:	bd38      	pop	{r3, r4, r5, pc}

08011d78 <Display::Display()>:
 8011d78:	2304      	movs	r3, #4
 8011d7a:	b510      	push	{r4, lr}
 8011d7c:	6003      	str	r3, [r0, #0]
 8011d7e:	4b0f      	ldr	r3, [pc, #60]	; (8011dbc <Display::Display()+0x44>)
 8011d80:	4604      	mov	r4, r0
 8011d82:	681b      	ldr	r3, [r3, #0]
 8011d84:	4a0e      	ldr	r2, [pc, #56]	; (8011dc0 <Display::Display()+0x48>)
 8011d86:	6043      	str	r3, [r0, #4]
 8011d88:	2321      	movs	r3, #33	; 0x21
 8011d8a:	7203      	strb	r3, [r0, #8]
 8011d8c:	4b0d      	ldr	r3, [pc, #52]	; (8011dc4 <Display::Display()+0x4c>)
 8011d8e:	2102      	movs	r1, #2
 8011d90:	60c3      	str	r3, [r0, #12]
 8011d92:	2300      	movs	r3, #0
 8011d94:	e9c0 2305 	strd	r2, r3, [r0, #20]
 8011d98:	8203      	strh	r3, [r0, #16]
 8011d9a:	4b0b      	ldr	r3, [pc, #44]	; (8011dc8 <Display::Display()+0x50>)
 8011d9c:	6018      	str	r0, [r3, #0]
 8011d9e:	f7ff ffc0 	bl	8011d22 <Display::Detect(display::Type)>
 8011da2:	4620      	mov	r0, r4
 8011da4:	f7ff ffa5 	bl	8011cf2 <Display::Detect7Segment()>
 8011da8:	69a3      	ldr	r3, [r4, #24]
 8011daa:	b10b      	cbz	r3, 8011db0 <Display::Display()+0x38>
 8011dac:	f7f6 fad0 	bl	8008350 <display::timeout::gpio_init()>
 8011db0:	69a0      	ldr	r0, [r4, #24]
 8011db2:	f7ff ff61 	bl	8011c78 <Display::PrintInfo() [clone .isra.0]>
 8011db6:	4620      	mov	r0, r4
 8011db8:	bd10      	pop	{r4, pc}
 8011dba:	bf00      	nop
 8011dbc:	2000b87c 	andcs	fp, r0, ip, ror r8
 8011dc0:	000493e0 	andeq	r9, r4, r0, ror #7
 8011dc4:	00061a80 	andeq	r1, r6, r0, lsl #21
 8011dc8:	2000b778 	andcs	fp, r0, r8, ror r7

08011dcc <Ssd1306::~Ssd1306()>:
 8011dcc:	4770      	bx	lr

08011dce <Ssd1306::SetCursor(unsigned int)>:
 8011dce:	4770      	bx	lr

08011dd0 <Ssd1306::PrintInfo()>:
 8011dd0:	b410      	push	{r4}
 8011dd2:	4906      	ldr	r1, [pc, #24]	; (8011dec <Ssd1306::PrintInfo()+0x1c>)
 8011dd4:	7c44      	ldrb	r4, [r0, #17]
 8011dd6:	7903      	ldrb	r3, [r0, #4]
 8011dd8:	7942      	ldrb	r2, [r0, #5]
 8011dda:	4805      	ldr	r0, [pc, #20]	; (8011df0 <Ssd1306::PrintInfo()+0x20>)
 8011ddc:	2c00      	cmp	r4, #0
 8011dde:	bf08      	it	eq
 8011de0:	4601      	moveq	r1, r0
 8011de2:	4804      	ldr	r0, [pc, #16]	; (8011df4 <Ssd1306::PrintInfo()+0x24>)
 8011de4:	bc10      	pop	{r4}
 8011de6:	f7f7 b97f 	b.w	80090e8 <printf>
 8011dea:	bf00      	nop
 8011dec:	08016853 	stmdaeq	r1, {r0, r1, r4, r6, fp, sp, lr}
 8011df0:	0801685a 	stmdaeq	r1, {r1, r3, r4, r6, fp, sp, lr}
 8011df4:	08016862 	stmdaeq	r1, {r1, r5, r6, fp, sp, lr}

08011df8 <Ssd1306::~Ssd1306()>:
 8011df8:	b510      	push	{r4, lr}
 8011dfa:	4604      	mov	r4, r0
 8011dfc:	f000 fb72 	bl	80124e4 <operator delete(void*)>
 8011e00:	4620      	mov	r0, r4
 8011e02:	bd10      	pop	{r4, pc}

08011e04 <HAL_I2C::Setup()>:
 8011e04:	b510      	push	{r4, lr}
 8011e06:	4604      	mov	r4, r0
 8011e08:	7800      	ldrb	r0, [r0, #0]
 8011e0a:	f001 fc61 	bl	80136d0 <gd32_i2c_set_address>
 8011e0e:	6860      	ldr	r0, [r4, #4]
 8011e10:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011e14:	f001 bc54 	b.w	80136c0 <gd32_i2c_set_baudrate>

08011e18 <Ssd1306::PutChar(int)>:
 8011e18:	b510      	push	{r4, lr}
 8011e1a:	f1a1 0420 	sub.w	r4, r1, #32
 8011e1e:	2c5f      	cmp	r4, #95	; 0x5f
 8011e20:	bf88      	it	hi
 8011e22:	2400      	movhi	r4, #0
 8011e24:	3008      	adds	r0, #8
 8011e26:	f7ff ffed 	bl	8011e04 <HAL_I2C::Setup()>
 8011e2a:	4804      	ldr	r0, [pc, #16]	; (8011e3c <Ssd1306::PutChar(int)+0x24>)
 8011e2c:	ebc4 04c4 	rsb	r4, r4, r4, lsl #3
 8011e30:	4420      	add	r0, r4
 8011e32:	2107      	movs	r1, #7
 8011e34:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011e38:	f001 bc50 	b.w	80136dc <gd32_i2c_write>
 8011e3c:	08016874 	stmdaeq	r1, {r2, r4, r5, r6, fp, sp, lr}

08011e40 <Ssd1306::PutString(char const*)>:
 8011e40:	b538      	push	{r3, r4, r5, lr}
 8011e42:	4605      	mov	r5, r0
 8011e44:	1e4c      	subs	r4, r1, #1
 8011e46:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8011e4a:	b901      	cbnz	r1, 8011e4e <Ssd1306::PutString(char const*)+0xe>
 8011e4c:	bd38      	pop	{r3, r4, r5, pc}
 8011e4e:	4628      	mov	r0, r5
 8011e50:	f7ff ffe2 	bl	8011e18 <Ssd1306::PutChar(int)>
 8011e54:	e7f7      	b.n	8011e46 <Ssd1306::PutString(char const*)+0x6>

08011e56 <Ssd1306::Text(char const*, unsigned int)>:
 8011e56:	b570      	push	{r4, r5, r6, lr}
 8011e58:	7903      	ldrb	r3, [r0, #4]
 8011e5a:	4605      	mov	r5, r0
 8011e5c:	460c      	mov	r4, r1
 8011e5e:	4293      	cmp	r3, r2
 8011e60:	bf94      	ite	ls
 8011e62:	18ce      	addls	r6, r1, r3
 8011e64:	188e      	addhi	r6, r1, r2
 8011e66:	42b4      	cmp	r4, r6
 8011e68:	d100      	bne.n	8011e6c <Ssd1306::Text(char const*, unsigned int)+0x16>
 8011e6a:	bd70      	pop	{r4, r5, r6, pc}
 8011e6c:	4628      	mov	r0, r5
 8011e6e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8011e72:	f7ff ffd1 	bl	8011e18 <Ssd1306::PutChar(int)>
 8011e76:	e7f6      	b.n	8011e66 <Ssd1306::Text(char const*, unsigned int)+0x10>

08011e78 <Ssd1306::InitMembers()>:
 8011e78:	7c03      	ldrb	r3, [r0, #16]
 8011e7a:	b14b      	cbz	r3, 8011e90 <Ssd1306::InitMembers()+0x18>
 8011e7c:	3b01      	subs	r3, #1
 8011e7e:	2b01      	cmp	r3, #1
 8011e80:	d909      	bls.n	8011e96 <Ssd1306::InitMembers()+0x1e>
 8011e82:	2308      	movs	r3, #8
 8011e84:	2204      	movs	r2, #4
 8011e86:	2115      	movs	r1, #21
 8011e88:	7143      	strb	r3, [r0, #5]
 8011e8a:	7101      	strb	r1, [r0, #4]
 8011e8c:	6142      	str	r2, [r0, #20]
 8011e8e:	4770      	bx	lr
 8011e90:	2308      	movs	r3, #8
 8011e92:	461a      	mov	r2, r3
 8011e94:	e7f7      	b.n	8011e86 <Ssd1306::InitMembers()+0xe>
 8011e96:	2304      	movs	r3, #4
 8011e98:	e7fb      	b.n	8011e92 <Ssd1306::InitMembers()+0x1a>
	...

08011e9c <Ssd1306::Ssd1306(TOledPanel)>:
 8011e9c:	4a08      	ldr	r2, [pc, #32]	; (8011ec0 <Ssd1306::Ssd1306(TOledPanel)+0x24>)
 8011e9e:	b508      	push	{r3, lr}
 8011ea0:	6002      	str	r2, [r0, #0]
 8011ea2:	227f      	movs	r2, #127	; 0x7f
 8011ea4:	80c2      	strh	r2, [r0, #6]
 8011ea6:	223c      	movs	r2, #60	; 0x3c
 8011ea8:	7202      	strb	r2, [r0, #8]
 8011eaa:	4a06      	ldr	r2, [pc, #24]	; (8011ec4 <Ssd1306::Ssd1306(TOledPanel)+0x28>)
 8011eac:	7401      	strb	r1, [r0, #16]
 8011eae:	60c2      	str	r2, [r0, #12]
 8011eb0:	2200      	movs	r2, #0
 8011eb2:	7442      	strb	r2, [r0, #17]
 8011eb4:	4a04      	ldr	r2, [pc, #16]	; (8011ec8 <Ssd1306::Ssd1306(TOledPanel)+0x2c>)
 8011eb6:	6010      	str	r0, [r2, #0]
 8011eb8:	f7ff ffde 	bl	8011e78 <Ssd1306::InitMembers()>
 8011ebc:	bd08      	pop	{r3, pc}
 8011ebe:	bf00      	nop
 8011ec0:	08016b4c 	stmdaeq	r1, {r2, r3, r6, r8, r9, fp, sp, lr}
 8011ec4:	00061a80 	andeq	r1, r6, r0, lsl #21
 8011ec8:	2000b804 	andcs	fp, r0, r4, lsl #16

08011ecc <Ssd1306::SendCommand(unsigned char)>:
 8011ecc:	2300      	movs	r3, #0
 8011ece:	b507      	push	{r0, r1, r2, lr}
 8011ed0:	3008      	adds	r0, #8
 8011ed2:	f88d 3004 	strb.w	r3, [sp, #4]
 8011ed6:	f88d 1005 	strb.w	r1, [sp, #5]
 8011eda:	f7ff ff93 	bl	8011e04 <HAL_I2C::Setup()>
 8011ede:	2102      	movs	r1, #2
 8011ee0:	a801      	add	r0, sp, #4
 8011ee2:	f001 fbfb 	bl	80136dc <gd32_i2c_write>
 8011ee6:	b003      	add	sp, #12
 8011ee8:	f85d fb04 	ldr.w	pc, [sp], #4

08011eec <Ssd1306::SetCursorPos(unsigned char, unsigned char)>:
 8011eec:	2914      	cmp	r1, #20
 8011eee:	b570      	push	{r4, r5, r6, lr}
 8011ef0:	4605      	mov	r5, r0
 8011ef2:	4616      	mov	r6, r2
 8011ef4:	d81c      	bhi.n	8011f30 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 8011ef6:	7943      	ldrb	r3, [r0, #5]
 8011ef8:	4293      	cmp	r3, r2
 8011efa:	d919      	bls.n	8011f30 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 8011efc:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8011f00:	7c43      	ldrb	r3, [r0, #17]
 8011f02:	004c      	lsls	r4, r1, #1
 8011f04:	b2e4      	uxtb	r4, r4
 8011f06:	b10b      	cbz	r3, 8011f0c <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x20>
 8011f08:	3404      	adds	r4, #4
 8011f0a:	b2e4      	uxtb	r4, r4
 8011f0c:	4628      	mov	r0, r5
 8011f0e:	f004 010e 	and.w	r1, r4, #14
 8011f12:	f7ff ffdb 	bl	8011ecc <Ssd1306::SendCommand(unsigned char)>
 8011f16:	0921      	lsrs	r1, r4, #4
 8011f18:	4628      	mov	r0, r5
 8011f1a:	f041 0110 	orr.w	r1, r1, #16
 8011f1e:	f7ff ffd5 	bl	8011ecc <Ssd1306::SendCommand(unsigned char)>
 8011f22:	4628      	mov	r0, r5
 8011f24:	f046 01b0 	orr.w	r1, r6, #176	; 0xb0
 8011f28:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011f2c:	f7ff bfce 	b.w	8011ecc <Ssd1306::SendCommand(unsigned char)>
 8011f30:	bd70      	pop	{r4, r5, r6, pc}

08011f32 <Ssd1306::TextLine(unsigned char, char const*, unsigned int)>:
 8011f32:	b570      	push	{r4, r5, r6, lr}
 8011f34:	461e      	mov	r6, r3
 8011f36:	7943      	ldrb	r3, [r0, #5]
 8011f38:	4604      	mov	r4, r0
 8011f3a:	428b      	cmp	r3, r1
 8011f3c:	4615      	mov	r5, r2
 8011f3e:	d30b      	bcc.n	8011f58 <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x26>
 8011f40:	3901      	subs	r1, #1
 8011f42:	b2ca      	uxtb	r2, r1
 8011f44:	2100      	movs	r1, #0
 8011f46:	f7ff ffd1 	bl	8011eec <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8011f4a:	4632      	mov	r2, r6
 8011f4c:	4629      	mov	r1, r5
 8011f4e:	4620      	mov	r0, r4
 8011f50:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011f54:	f7ff bf7f 	b.w	8011e56 <Ssd1306::Text(char const*, unsigned int)>
 8011f58:	bd70      	pop	{r4, r5, r6, pc}
	...

08011f5c <Ssd1306::ClearLine(unsigned char)>:
 8011f5c:	b538      	push	{r3, r4, r5, lr}
 8011f5e:	7943      	ldrb	r3, [r0, #5]
 8011f60:	4605      	mov	r5, r0
 8011f62:	428b      	cmp	r3, r1
 8011f64:	d314      	bcc.n	8011f90 <Ssd1306::ClearLine(unsigned char)+0x34>
 8011f66:	3901      	subs	r1, #1
 8011f68:	b2cc      	uxtb	r4, r1
 8011f6a:	4622      	mov	r2, r4
 8011f6c:	2100      	movs	r1, #0
 8011f6e:	f7ff ffbd 	bl	8011eec <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8011f72:	f105 0008 	add.w	r0, r5, #8
 8011f76:	f7ff ff45 	bl	8011e04 <HAL_I2C::Setup()>
 8011f7a:	2181      	movs	r1, #129	; 0x81
 8011f7c:	4805      	ldr	r0, [pc, #20]	; (8011f94 <Ssd1306::ClearLine(unsigned char)+0x38>)
 8011f7e:	f001 fbad 	bl	80136dc <gd32_i2c_write>
 8011f82:	4622      	mov	r2, r4
 8011f84:	4628      	mov	r0, r5
 8011f86:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8011f8a:	2100      	movs	r1, #0
 8011f8c:	f7ff bfae 	b.w	8011eec <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8011f90:	bd38      	pop	{r3, r4, r5, pc}
 8011f92:	bf00      	nop
 8011f94:	2000b77c 	andcs	fp, r0, ip, ror r7

08011f98 <Ssd1306::SetSleep(bool)>:
 8011f98:	b111      	cbz	r1, 8011fa0 <Ssd1306::SetSleep(bool)+0x8>
 8011f9a:	21ae      	movs	r1, #174	; 0xae
 8011f9c:	f7ff bf96 	b.w	8011ecc <Ssd1306::SendCommand(unsigned char)>
 8011fa0:	21af      	movs	r1, #175	; 0xaf
 8011fa2:	e7fb      	b.n	8011f9c <Ssd1306::SetSleep(bool)+0x4>

08011fa4 <Ssd1306::SetContrast(unsigned char)>:
 8011fa4:	b538      	push	{r3, r4, r5, lr}
 8011fa6:	4604      	mov	r4, r0
 8011fa8:	460d      	mov	r5, r1
 8011faa:	7181      	strb	r1, [r0, #6]
 8011fac:	2181      	movs	r1, #129	; 0x81
 8011fae:	f7ff ff8d 	bl	8011ecc <Ssd1306::SendCommand(unsigned char)>
 8011fb2:	4629      	mov	r1, r5
 8011fb4:	4620      	mov	r0, r4
 8011fb6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8011fba:	f7ff bf87 	b.w	8011ecc <Ssd1306::SendCommand(unsigned char)>

08011fbe <Ssd1306::SetFlipVertically(bool)>:
 8011fbe:	b510      	push	{r4, lr}
 8011fc0:	4604      	mov	r4, r0
 8011fc2:	71c1      	strb	r1, [r0, #7]
 8011fc4:	b141      	cbz	r1, 8011fd8 <Ssd1306::SetFlipVertically(bool)+0x1a>
 8011fc6:	21c0      	movs	r1, #192	; 0xc0
 8011fc8:	f7ff ff80 	bl	8011ecc <Ssd1306::SendCommand(unsigned char)>
 8011fcc:	21a0      	movs	r1, #160	; 0xa0
 8011fce:	4620      	mov	r0, r4
 8011fd0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011fd4:	f7ff bf7a 	b.w	8011ecc <Ssd1306::SendCommand(unsigned char)>
 8011fd8:	21c8      	movs	r1, #200	; 0xc8
 8011fda:	f7ff ff77 	bl	8011ecc <Ssd1306::SendCommand(unsigned char)>
 8011fde:	21a1      	movs	r1, #161	; 0xa1
 8011fe0:	e7f5      	b.n	8011fce <Ssd1306::SetFlipVertically(bool)+0x10>
	...

08011fe4 <Ssd1306::CheckSH1106()>:
 8011fe4:	b530      	push	{r4, r5, lr}
 8011fe6:	4604      	mov	r4, r0
 8011fe8:	b087      	sub	sp, #28
 8011fea:	2100      	movs	r1, #0
 8011fec:	f7ff ff6e 	bl	8011ecc <Ssd1306::SendCommand(unsigned char)>
 8011ff0:	2190      	movs	r1, #144	; 0x90
 8011ff2:	4620      	mov	r0, r4
 8011ff4:	f7ff ff6a 	bl	8011ecc <Ssd1306::SendCommand(unsigned char)>
 8011ff8:	21b0      	movs	r1, #176	; 0xb0
 8011ffa:	4620      	mov	r0, r4
 8011ffc:	f7ff ff66 	bl	8011ecc <Ssd1306::SendCommand(unsigned char)>
 8012000:	4b22      	ldr	r3, [pc, #136]	; (801208c <Ssd1306::CheckSH1106()+0xa8>)
 8012002:	f104 0508 	add.w	r5, r4, #8
 8012006:	6818      	ldr	r0, [r3, #0]
 8012008:	791b      	ldrb	r3, [r3, #4]
 801200a:	9002      	str	r0, [sp, #8]
 801200c:	4628      	mov	r0, r5
 801200e:	f88d 300c 	strb.w	r3, [sp, #12]
 8012012:	f7ff fef7 	bl	8011e04 <HAL_I2C::Setup()>
 8012016:	2105      	movs	r1, #5
 8012018:	a802      	add	r0, sp, #8
 801201a:	f001 fb5f 	bl	80136dc <gd32_i2c_write>
 801201e:	2100      	movs	r1, #0
 8012020:	4620      	mov	r0, r4
 8012022:	f7ff ff53 	bl	8011ecc <Ssd1306::SendCommand(unsigned char)>
 8012026:	2190      	movs	r1, #144	; 0x90
 8012028:	4620      	mov	r0, r4
 801202a:	f7ff ff4f 	bl	8011ecc <Ssd1306::SendCommand(unsigned char)>
 801202e:	21b0      	movs	r1, #176	; 0xb0
 8012030:	4620      	mov	r0, r4
 8012032:	f7ff ff4b 	bl	8011ecc <Ssd1306::SendCommand(unsigned char)>
 8012036:	2300      	movs	r3, #0
 8012038:	9304      	str	r3, [sp, #16]
 801203a:	f88d 3014 	strb.w	r3, [sp, #20]
 801203e:	2340      	movs	r3, #64	; 0x40
 8012040:	4628      	mov	r0, r5
 8012042:	f88d 3007 	strb.w	r3, [sp, #7]
 8012046:	f7ff fedd 	bl	8011e04 <HAL_I2C::Setup()>
 801204a:	2101      	movs	r1, #1
 801204c:	f10d 0007 	add.w	r0, sp, #7
 8012050:	f001 fb44 	bl	80136dc <gd32_i2c_write>
 8012054:	4628      	mov	r0, r5
 8012056:	f7ff fed5 	bl	8011e04 <HAL_I2C::Setup()>
 801205a:	2105      	movs	r1, #5
 801205c:	a804      	add	r0, sp, #16
 801205e:	f001 fba3 	bl	80137a8 <gd32_i2c_read>
 8012062:	2004      	movs	r0, #4
 8012064:	aa02      	add	r2, sp, #8
 8012066:	a904      	add	r1, sp, #16
 8012068:	3801      	subs	r0, #1
 801206a:	d201      	bcs.n	8012070 <Ssd1306::CheckSH1106()+0x8c>
 801206c:	2300      	movs	r3, #0
 801206e:	e006      	b.n	801207e <Ssd1306::CheckSH1106()+0x9a>
 8012070:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 8012074:	f811 5f01 	ldrb.w	r5, [r1, #1]!
 8012078:	42ab      	cmp	r3, r5
 801207a:	d0f5      	beq.n	8012068 <Ssd1306::CheckSH1106()+0x84>
 801207c:	1b5b      	subs	r3, r3, r5
 801207e:	fab3 f383 	clz	r3, r3
 8012082:	095b      	lsrs	r3, r3, #5
 8012084:	7463      	strb	r3, [r4, #17]
 8012086:	b007      	add	sp, #28
 8012088:	bd30      	pop	{r4, r5, pc}
 801208a:	bf00      	nop
 801208c:	0801686e 	stmdaeq	r1, {r1, r2, r3, r5, r6, fp, sp, lr}

08012090 <Ssd1306::Cls()>:
 8012090:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012094:	4604      	mov	r4, r0
 8012096:	2600      	movs	r6, #0
 8012098:	7c45      	ldrb	r5, [r0, #17]
 801209a:	00ad      	lsls	r5, r5, #2
 801209c:	b2ed      	uxtb	r5, r5
 801209e:	f1a5 077f 	sub.w	r7, r5, #127	; 0x7f
 80120a2:	f045 0810 	orr.w	r8, r5, #16
 80120a6:	b2ff      	uxtb	r7, r7
 80120a8:	6963      	ldr	r3, [r4, #20]
 80120aa:	4629      	mov	r1, r5
 80120ac:	42b3      	cmp	r3, r6
 80120ae:	4620      	mov	r0, r4
 80120b0:	d80b      	bhi.n	80120ca <Ssd1306::Cls()+0x3a>
 80120b2:	f7ff ff0b 	bl	8011ecc <Ssd1306::SendCommand(unsigned char)>
 80120b6:	4641      	mov	r1, r8
 80120b8:	4620      	mov	r0, r4
 80120ba:	f7ff ff07 	bl	8011ecc <Ssd1306::SendCommand(unsigned char)>
 80120be:	4620      	mov	r0, r4
 80120c0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80120c4:	21b0      	movs	r1, #176	; 0xb0
 80120c6:	f7ff bf01 	b.w	8011ecc <Ssd1306::SendCommand(unsigned char)>
 80120ca:	f7ff feff 	bl	8011ecc <Ssd1306::SendCommand(unsigned char)>
 80120ce:	4641      	mov	r1, r8
 80120d0:	4620      	mov	r0, r4
 80120d2:	f7ff fefb 	bl	8011ecc <Ssd1306::SendCommand(unsigned char)>
 80120d6:	f066 014f 	orn	r1, r6, #79	; 0x4f
 80120da:	4620      	mov	r0, r4
 80120dc:	b2c9      	uxtb	r1, r1
 80120de:	f7ff fef5 	bl	8011ecc <Ssd1306::SendCommand(unsigned char)>
 80120e2:	7c23      	ldrb	r3, [r4, #16]
 80120e4:	b123      	cbz	r3, 80120f0 <Ssd1306::Cls()+0x60>
 80120e6:	3b01      	subs	r3, #1
 80120e8:	2b01      	cmp	r3, #1
 80120ea:	d901      	bls.n	80120f0 <Ssd1306::Cls()+0x60>
 80120ec:	3601      	adds	r6, #1
 80120ee:	e7db      	b.n	80120a8 <Ssd1306::Cls()+0x18>
 80120f0:	f104 0008 	add.w	r0, r4, #8
 80120f4:	f7ff fe86 	bl	8011e04 <HAL_I2C::Setup()>
 80120f8:	4639      	mov	r1, r7
 80120fa:	4802      	ldr	r0, [pc, #8]	; (8012104 <Ssd1306::Cls()+0x74>)
 80120fc:	f001 faee 	bl	80136dc <gd32_i2c_write>
 8012100:	e7f4      	b.n	80120ec <Ssd1306::Cls()+0x5c>
 8012102:	bf00      	nop
 8012104:	2000b77c 	andcs	fp, r0, ip, ror r7

08012108 <Ssd1306::Start()>:
 8012108:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801210a:	7a04      	ldrb	r4, [r0, #8]
 801210c:	68c6      	ldr	r6, [r0, #12]
 801210e:	4605      	mov	r5, r0
 8012110:	4620      	mov	r0, r4
 8012112:	f001 fadd 	bl	80136d0 <gd32_i2c_set_address>
 8012116:	4630      	mov	r0, r6
 8012118:	f001 fad2 	bl	80136c0 <gd32_i2c_set_baudrate>
 801211c:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8012120:	2b07      	cmp	r3, #7
 8012122:	d902      	bls.n	801212a <Ssd1306::Start()+0x22>
 8012124:	3c50      	subs	r4, #80	; 0x50
 8012126:	2c0f      	cmp	r4, #15
 8012128:	d80f      	bhi.n	801214a <Ssd1306::Start()+0x42>
 801212a:	2101      	movs	r1, #1
 801212c:	f10d 0007 	add.w	r0, sp, #7
 8012130:	f001 fb3a 	bl	80137a8 <gd32_i2c_read>
 8012134:	fab0 f480 	clz	r4, r0
 8012138:	0964      	lsrs	r4, r4, #5
 801213a:	b35c      	cbz	r4, 8012194 <Ssd1306::Start()+0x8c>
 801213c:	7c2e      	ldrb	r6, [r5, #16]
 801213e:	b14e      	cbz	r6, 8012154 <Ssd1306::Start()+0x4c>
 8012140:	3e01      	subs	r6, #1
 8012142:	2e01      	cmp	r6, #1
 8012144:	d929      	bls.n	801219a <Ssd1306::Start()+0x92>
 8012146:	2400      	movs	r4, #0
 8012148:	e024      	b.n	8012194 <Ssd1306::Start()+0x8c>
 801214a:	2100      	movs	r1, #0
 801214c:	4608      	mov	r0, r1
 801214e:	f001 fac5 	bl	80136dc <gd32_i2c_write>
 8012152:	e7ef      	b.n	8012134 <Ssd1306::Start()+0x2c>
 8012154:	4f16      	ldr	r7, [pc, #88]	; (80121b0 <Ssd1306::Start()+0xa8>)
 8012156:	4628      	mov	r0, r5
 8012158:	f817 1b01 	ldrb.w	r1, [r7], #1
 801215c:	3601      	adds	r6, #1
 801215e:	f7ff feb5 	bl	8011ecc <Ssd1306::SendCommand(unsigned char)>
 8012162:	2e18      	cmp	r6, #24
 8012164:	d1f7      	bne.n	8012156 <Ssd1306::Start()+0x4e>
 8012166:	2300      	movs	r3, #0
 8012168:	4a12      	ldr	r2, [pc, #72]	; (80121b4 <Ssd1306::Start()+0xac>)
 801216a:	4618      	mov	r0, r3
 801216c:	4611      	mov	r1, r2
 801216e:	3301      	adds	r3, #1
 8012170:	2b86      	cmp	r3, #134	; 0x86
 8012172:	f802 0b01 	strb.w	r0, [r2], #1
 8012176:	d1fa      	bne.n	801216e <Ssd1306::Start()+0x66>
 8012178:	2340      	movs	r3, #64	; 0x40
 801217a:	4628      	mov	r0, r5
 801217c:	700b      	strb	r3, [r1, #0]
 801217e:	f7ff ff31 	bl	8011fe4 <Ssd1306::CheckSH1106()>
 8012182:	4628      	mov	r0, r5
 8012184:	f7ff ff84 	bl	8012090 <Ssd1306::Cls()>
 8012188:	21af      	movs	r1, #175	; 0xaf
 801218a:	4628      	mov	r0, r5
 801218c:	f7ff fe9e 	bl	8011ecc <Ssd1306::SendCommand(unsigned char)>
 8012190:	2301      	movs	r3, #1
 8012192:	71eb      	strb	r3, [r5, #7]
 8012194:	4620      	mov	r0, r4
 8012196:	b003      	add	sp, #12
 8012198:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801219a:	2600      	movs	r6, #0
 801219c:	4f06      	ldr	r7, [pc, #24]	; (80121b8 <Ssd1306::Start()+0xb0>)
 801219e:	4628      	mov	r0, r5
 80121a0:	f817 1b01 	ldrb.w	r1, [r7], #1
 80121a4:	3601      	adds	r6, #1
 80121a6:	f7ff fe91 	bl	8011ecc <Ssd1306::SendCommand(unsigned char)>
 80121aa:	2e18      	cmp	r6, #24
 80121ac:	d1f7      	bne.n	801219e <Ssd1306::Start()+0x96>
 80121ae:	e7da      	b.n	8012166 <Ssd1306::Start()+0x5e>
 80121b0:	08016b2c 	stmdaeq	r1, {r2, r3, r5, r8, r9, fp, sp, lr}
 80121b4:	2000b77c 	andcs	fp, r0, ip, ror r7
 80121b8:	08016b14 	stmdaeq	r1, {r2, r4, r8, r9, fp, sp, lr}

080121bc <console_putc>:
 80121bc:	f000 bb90 	b.w	80128e0 <uart0_putc>

080121c0 <console_puts>:
 80121c0:	f000 bbae 	b.w	8012920 <uart0_puts>

080121c4 <console_set_fg_color>:
 80121c4:	2807      	cmp	r0, #7
 80121c6:	d810      	bhi.n	80121ea <console_set_fg_color+0x26>
 80121c8:	e8df f000 	tbb	[pc, r0]
 80121cc:	0b090704 	bleq	8253de4 <__exidx_end+0x23d164>
 80121d0:	0d0f0f0f 	stceq	15, cr0, [pc, #-60]	; 801219c <Ssd1306::Start()+0x94>
 80121d4:	4806      	ldr	r0, [pc, #24]	; (80121f0 <console_set_fg_color+0x2c>)
 80121d6:	f000 bba3 	b.w	8012920 <uart0_puts>
 80121da:	4806      	ldr	r0, [pc, #24]	; (80121f4 <console_set_fg_color+0x30>)
 80121dc:	e7fb      	b.n	80121d6 <console_set_fg_color+0x12>
 80121de:	4806      	ldr	r0, [pc, #24]	; (80121f8 <console_set_fg_color+0x34>)
 80121e0:	e7f9      	b.n	80121d6 <console_set_fg_color+0x12>
 80121e2:	4806      	ldr	r0, [pc, #24]	; (80121fc <console_set_fg_color+0x38>)
 80121e4:	e7f7      	b.n	80121d6 <console_set_fg_color+0x12>
 80121e6:	4806      	ldr	r0, [pc, #24]	; (8012200 <console_set_fg_color+0x3c>)
 80121e8:	e7f5      	b.n	80121d6 <console_set_fg_color+0x12>
 80121ea:	4806      	ldr	r0, [pc, #24]	; (8012204 <console_set_fg_color+0x40>)
 80121ec:	e7f3      	b.n	80121d6 <console_set_fg_color+0x12>
 80121ee:	bf00      	nop
 80121f0:	08016b8a 	stmdaeq	r1, {r1, r3, r7, r8, r9, fp, sp, lr}
 80121f4:	08016b90 	stmdaeq	r1, {r4, r7, r8, r9, fp, sp, lr}
 80121f8:	08016b96 	stmdaeq	r1, {r1, r2, r4, r7, r8, r9, fp, sp, lr}
 80121fc:	08016b9c 	stmdaeq	r1, {r2, r3, r4, r7, r8, r9, fp, sp, lr}
 8012200:	080148bc 	stmdaeq	r1, {r2, r3, r4, r5, r7, fp, lr}
 8012204:	08016ba2 	stmdaeq	r1, {r1, r5, r7, r8, r9, fp, sp, lr}

08012208 <console_error>:
 8012208:	b510      	push	{r4, lr}
 801220a:	4604      	mov	r4, r0
 801220c:	4805      	ldr	r0, [pc, #20]	; (8012224 <console_error+0x1c>)
 801220e:	f000 fb87 	bl	8012920 <uart0_puts>
 8012212:	4620      	mov	r0, r4
 8012214:	f000 fb84 	bl	8012920 <uart0_puts>
 8012218:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801221c:	4802      	ldr	r0, [pc, #8]	; (8012228 <console_error+0x20>)
 801221e:	f000 bb7f 	b.w	8012920 <uart0_puts>
 8012222:	bf00      	nop
 8012224:	08016b90 	stmdaeq	r1, {r4, r7, r8, r9, fp, sp, lr}
 8012228:	080148bc 	stmdaeq	r1, {r2, r3, r4, r5, r7, fp, lr}

0801222c <console_status>:
 801222c:	b510      	push	{r4, lr}
 801222e:	460c      	mov	r4, r1
 8012230:	b280      	uxth	r0, r0
 8012232:	f7ff ffc7 	bl	80121c4 <console_set_fg_color>
 8012236:	4807      	ldr	r0, [pc, #28]	; (8012254 <console_status+0x28>)
 8012238:	f000 fb72 	bl	8012920 <uart0_puts>
 801223c:	4620      	mov	r0, r4
 801223e:	f000 fb6f 	bl	8012920 <uart0_puts>
 8012242:	200a      	movs	r0, #10
 8012244:	f000 fb4c 	bl	80128e0 <uart0_putc>
 8012248:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801224c:	4802      	ldr	r0, [pc, #8]	; (8012258 <console_status+0x2c>)
 801224e:	f000 bb67 	b.w	8012920 <uart0_puts>
 8012252:	bf00      	nop
 8012254:	08016b84 	stmdaeq	r1, {r2, r7, r8, r9, fp, sp, lr}
 8012258:	080148bc 	stmdaeq	r1, {r2, r3, r4, r5, r7, fp, lr}

0801225c <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>:
 801225c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012260:	4617      	mov	r7, r2
 8012262:	461e      	mov	r6, r3
 8012264:	4d14      	ldr	r5, [pc, #80]	; (80122b8 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x5c>)
 8012266:	4b15      	ldr	r3, [pc, #84]	; (80122bc <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x60>)
 8012268:	b086      	sub	sp, #24
 801226a:	6018      	str	r0, [r3, #0]
 801226c:	4604      	mov	r4, r0
 801226e:	f105 0803 	add.w	r8, r5, #3
 8012272:	2203      	movs	r2, #3
 8012274:	4628      	mov	r0, r5
 8012276:	f000 f9f8 	bl	801266a <memmove>
 801227a:	4639      	mov	r1, r7
 801227c:	220b      	movs	r2, #11
 801227e:	4640      	mov	r0, r8
 8012280:	f000 f9f3 	bl	801266a <memmove>
 8012284:	f105 030e 	add.w	r3, r5, #14
 8012288:	4631      	mov	r1, r6
 801228a:	2208      	movs	r2, #8
 801228c:	4618      	mov	r0, r3
 801228e:	f000 f9ec 	bl	801266a <memmove>
 8012292:	2308      	movs	r3, #8
 8012294:	e9cd 8303 	strd	r8, r3, [sp, #12]
 8012298:	230b      	movs	r3, #11
 801229a:	9302      	str	r3, [sp, #8]
 801229c:	4b08      	ldr	r3, [pc, #32]	; (80122c0 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x64>)
 801229e:	9005      	str	r0, [sp, #20]
 80122a0:	e9cd 5300 	strd	r5, r3, [sp]
 80122a4:	213f      	movs	r1, #63	; 0x3f
 80122a6:	2303      	movs	r3, #3
 80122a8:	4a06      	ldr	r2, [pc, #24]	; (80122c4 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x68>)
 80122aa:	4807      	ldr	r0, [pc, #28]	; (80122c8 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x6c>)
 80122ac:	f7f6 ff44 	bl	8009138 <snprintf>
 80122b0:	4620      	mov	r0, r4
 80122b2:	b006      	add	sp, #24
 80122b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80122b8:	2000b808 	andcs	fp, r0, r8, lsl #16
 80122bc:	2000b860 	andcs	fp, r0, r0, ror #16
 80122c0:	08015026 	stmdaeq	r1, {r1, r2, r5, ip, lr}
 80122c4:	08016ba8 	stmdaeq	r1, {r3, r5, r7, r8, r9, fp, sp, lr}
 80122c8:	2000b81e 	andcs	fp, r0, lr, lsl r8

080122cc <FirmwareVersion::Print(char const*)>:
 80122cc:	b510      	push	{r4, lr}
 80122ce:	460c      	mov	r4, r1
 80122d0:	4804      	ldr	r0, [pc, #16]	; (80122e4 <FirmwareVersion::Print(char const*)+0x18>)
 80122d2:	f000 fa02 	bl	80126da <puts>
 80122d6:	b124      	cbz	r4, 80122e2 <FirmwareVersion::Print(char const*)+0x16>
 80122d8:	4620      	mov	r0, r4
 80122da:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80122de:	f000 b9fc 	b.w	80126da <puts>
 80122e2:	bd10      	pop	{r4, pc}
 80122e4:	2000b81e 	andcs	fp, r0, lr, lsl r8

080122e8 <LedBlink::LedBlink()>:
 80122e8:	b538      	push	{r3, r4, r5, lr}
 80122ea:	2205      	movs	r2, #5
 80122ec:	2300      	movs	r3, #0
 80122ee:	e9c0 3200 	strd	r3, r2, [r0]
 80122f2:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 80122f6:	6083      	str	r3, [r0, #8]
 80122f8:	e9c0 2303 	strd	r2, r3, [r0, #12]
 80122fc:	6143      	str	r3, [r0, #20]
 80122fe:	4b09      	ldr	r3, [pc, #36]	; (8012324 <LedBlink::LedBlink()+0x3c>)
 8012300:	4d09      	ldr	r5, [pc, #36]	; (8012328 <LedBlink::LedBlink()+0x40>)
 8012302:	4604      	mov	r4, r0
 8012304:	6018      	str	r0, [r3, #0]
 8012306:	f240 6004 	movw	r0, #1540	; 0x604
 801230a:	f000 fd6d 	bl	8012de8 <rcu_periph_clock_enable>
 801230e:	4628      	mov	r0, r5
 8012310:	2301      	movs	r3, #1
 8012312:	2203      	movs	r2, #3
 8012314:	2110      	movs	r1, #16
 8012316:	f000 fccf 	bl	8012cb8 <gpio_init>
 801231a:	2301      	movs	r3, #1
 801231c:	4620      	mov	r0, r4
 801231e:	616b      	str	r3, [r5, #20]
 8012320:	bd38      	pop	{r3, r4, r5, pc}
 8012322:	bf00      	nop
 8012324:	2000b864 	andcs	fp, r0, r4, ror #16
 8012328:	40011000 	andmi	r1, r1, r0

0801232c <LedBlink::SetMode(ledblink::Mode)>:
 801232c:	6843      	ldr	r3, [r0, #4]
 801232e:	428b      	cmp	r3, r1
 8012330:	d02f      	beq.n	8012392 <LedBlink::SetMode(ledblink::Mode)+0x66>
 8012332:	6041      	str	r1, [r0, #4]
 8012334:	2904      	cmp	r1, #4
 8012336:	d822      	bhi.n	801237e <LedBlink::SetMode(ledblink::Mode)+0x52>
 8012338:	e8df f001 	tbb	[pc, r1]
 801233c:	18120321 	ldmdane	r2, {r0, r5, r8, r9}
 8012340:	23ff001d 	mvnscs	r0, #29
 8012344:	6003      	str	r3, [r0, #0]
 8012346:	2300      	movs	r3, #0
 8012348:	2201      	movs	r2, #1
 801234a:	60c3      	str	r3, [r0, #12]
 801234c:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8012350:	f503 3388 	add.w	r3, r3, #69632	; 0x11000
 8012354:	611a      	str	r2, [r3, #16]
 8012356:	6880      	ldr	r0, [r0, #8]
 8012358:	b1d8      	cbz	r0, 8012392 <LedBlink::SetMode(ledblink::Mode)+0x66>
 801235a:	6803      	ldr	r3, [r0, #0]
 801235c:	689b      	ldr	r3, [r3, #8]
 801235e:	4718      	bx	r3
 8012360:	2301      	movs	r3, #1
 8012362:	6003      	str	r3, [r0, #0]
 8012364:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8012368:	60c3      	str	r3, [r0, #12]
 801236a:	e7f4      	b.n	8012356 <LedBlink::SetMode(ledblink::Mode)+0x2a>
 801236c:	2303      	movs	r3, #3
 801236e:	6003      	str	r3, [r0, #0]
 8012370:	f240 134d 	movw	r3, #333	; 0x14d
 8012374:	e7f8      	b.n	8012368 <LedBlink::SetMode(ledblink::Mode)+0x3c>
 8012376:	2305      	movs	r3, #5
 8012378:	6003      	str	r3, [r0, #0]
 801237a:	23c8      	movs	r3, #200	; 0xc8
 801237c:	e7f4      	b.n	8012368 <LedBlink::SetMode(ledblink::Mode)+0x3c>
 801237e:	2300      	movs	r3, #0
 8012380:	2201      	movs	r2, #1
 8012382:	6003      	str	r3, [r0, #0]
 8012384:	60c3      	str	r3, [r0, #12]
 8012386:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801238a:	f503 3388 	add.w	r3, r3, #69632	; 0x11000
 801238e:	615a      	str	r2, [r3, #20]
 8012390:	e7e1      	b.n	8012356 <LedBlink::SetMode(ledblink::Mode)+0x2a>
 8012392:	4770      	bx	lr

08012394 <Hardware::Hardware()>:
 8012394:	b570      	push	{r4, r5, r6, lr}
 8012396:	2400      	movs	r4, #0
 8012398:	4b24      	ldr	r3, [pc, #144]	; (801242c <Hardware::Hardware()+0x98>)
 801239a:	b090      	sub	sp, #64	; 0x40
 801239c:	7004      	strb	r4, [r0, #0]
 801239e:	6018      	str	r0, [r3, #0]
 80123a0:	4605      	mov	r5, r0
 80123a2:	f7f5 f8d9 	bl	8007558 <console_init>
 80123a6:	f000 facb 	bl	8012940 <systick_config>
 80123aa:	f001 fc07 	bl	8013bbc <udelay_init()>
 80123ae:	f001 fbb7 	bl	8013b20 <micros_init()>
 80123b2:	f240 701b 	movw	r0, #1819	; 0x71b
 80123b6:	f000 fd17 	bl	8012de8 <rcu_periph_clock_enable>
 80123ba:	f240 701c 	movw	r0, #1820	; 0x71c
 80123be:	f000 fd13 	bl	8012de8 <rcu_periph_clock_enable>
 80123c2:	4e1b      	ldr	r6, [pc, #108]	; (8012430 <Hardware::Hardware()+0x9c>)
 80123c4:	f000 fd08 	bl	8012dd8 <pmu_backup_write_enable>
 80123c8:	4621      	mov	r1, r4
 80123ca:	2002      	movs	r0, #2
 80123cc:	f000 fb5c 	bl	8012a88 <bkp_data_write>
 80123d0:	f240 7004 	movw	r0, #1796	; 0x704
 80123d4:	f000 fd08 	bl	8012de8 <rcu_periph_clock_enable>
 80123d8:	4630      	mov	r0, r6
 80123da:	f000 fe69 	bl	80130b0 <timer_deinit>
 80123de:	2377      	movs	r3, #119	; 0x77
 80123e0:	f8ad 300c 	strh.w	r3, [sp, #12]
 80123e4:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80123e8:	a903      	add	r1, sp, #12
 80123ea:	4630      	mov	r0, r6
 80123ec:	9305      	str	r3, [sp, #20]
 80123ee:	f000 ff05 	bl	80131fc <timer_init>
 80123f2:	4630      	mov	r0, r6
 80123f4:	f000 ff5a 	bl	80132ac <timer_enable>
 80123f8:	f001 f8d4 	bl	80135a4 <gd32_adc_init()>
 80123fc:	220a      	movs	r2, #10
 80123fe:	2309      	movs	r3, #9
 8012400:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 8012404:	237a      	movs	r3, #122	; 0x7a
 8012406:	a807      	add	r0, sp, #28
 8012408:	930c      	str	r3, [sp, #48]	; 0x30
 801240a:	e9cd 4408 	strd	r4, r4, [sp, #32]
 801240e:	9407      	str	r4, [sp, #28]
 8012410:	940f      	str	r4, [sp, #60]	; 0x3c
 8012412:	f000 f9bb 	bl	801278c <mktime>
 8012416:	4621      	mov	r1, r4
 8012418:	e9cd 0401 	strd	r0, r4, [sp, #4]
 801241c:	a801      	add	r0, sp, #4
 801241e:	f000 fa2b 	bl	8012878 <settimeofday>
 8012422:	f001 f919 	bl	8013658 <gd32_i2c_begin>
 8012426:	4628      	mov	r0, r5
 8012428:	b010      	add	sp, #64	; 0x40
 801242a:	bd70      	pop	{r4, r5, r6, pc}
 801242c:	2000b868 	andcs	fp, r0, r8, ror #16
 8012430:	40001000 	andmi	r1, r0, r0

08012434 <Hardware::GetUuid(unsigned char*)>:
 8012434:	4a0c      	ldr	r2, [pc, #48]	; (8012468 <Hardware::GetUuid(unsigned char*)+0x34>)
 8012436:	b084      	sub	sp, #16
 8012438:	f8d2 37e8 	ldr.w	r3, [r2, #2024]	; 0x7e8
 801243c:	9300      	str	r3, [sp, #0]
 801243e:	f8d2 07ec 	ldr.w	r0, [r2, #2028]	; 0x7ec
 8012442:	9001      	str	r0, [sp, #4]
 8012444:	f8d2 27f0 	ldr.w	r2, [r2, #2032]	; 0x7f0
 8012448:	4403      	add	r3, r0
 801244a:	4413      	add	r3, r2
 801244c:	9202      	str	r2, [sp, #8]
 801244e:	466a      	mov	r2, sp
 8012450:	9303      	str	r3, [sp, #12]
 8012452:	1e4b      	subs	r3, r1, #1
 8012454:	310f      	adds	r1, #15
 8012456:	428b      	cmp	r3, r1
 8012458:	d101      	bne.n	801245e <Hardware::GetUuid(unsigned char*)+0x2a>
 801245a:	b004      	add	sp, #16
 801245c:	4770      	bx	lr
 801245e:	f812 0b01 	ldrb.w	r0, [r2], #1
 8012462:	f803 0f01 	strb.w	r0, [r3, #1]!
 8012466:	e7f6      	b.n	8012456 <Hardware::GetUuid(unsigned char*)+0x22>
 8012468:	1ffff000 	svcne	0x00fff000

0801246c <Hardware::Reboot()>:
 801246c:	b508      	push	{r3, lr}
 801246e:	2300      	movs	r3, #0
 8012470:	4604      	mov	r4, r0
 8012472:	7003      	strb	r3, [r0, #0]
 8012474:	2104      	movs	r1, #4
 8012476:	f64f 70ff 	movw	r0, #65535	; 0xffff
 801247a:	f000 fbf3 	bl	8012c64 <fwdgt_config>
 801247e:	4620      	mov	r0, r4
 8012480:	f7f5 ffb0 	bl	80083e4 <Hardware::RebootHandler()>
 8012484:	2102      	movs	r1, #2
 8012486:	f64f 70ff 	movw	r0, #65535	; 0xffff
 801248a:	f000 fbeb 	bl	8012c64 <fwdgt_config>
 801248e:	2801      	cmp	r0, #1
 8012490:	bf0c      	ite	eq
 8012492:	2301      	moveq	r3, #1
 8012494:	2300      	movne	r3, #0
 8012496:	7023      	strb	r3, [r4, #0]
 8012498:	d101      	bne.n	801249e <Hardware::Reboot()+0x32>
 801249a:	f000 fbd3 	bl	8012c44 <fwdgt_enable>
 801249e:	2208      	movs	r2, #8
 80124a0:	4b0d      	ldr	r3, [pc, #52]	; (80124d8 <Hardware::Reboot()+0x6c>)
 80124a2:	2501      	movs	r5, #1
 80124a4:	681b      	ldr	r3, [r3, #0]
 80124a6:	480d      	ldr	r0, [pc, #52]	; (80124dc <Hardware::Reboot()+0x70>)
 80124a8:	601a      	str	r2, [r3, #0]
 80124aa:	227d      	movs	r2, #125	; 0x7d
 80124ac:	490c      	ldr	r1, [pc, #48]	; (80124e0 <Hardware::Reboot()+0x74>)
 80124ae:	60da      	str	r2, [r3, #12]
 80124b0:	68dc      	ldr	r4, [r3, #12]
 80124b2:	b904      	cbnz	r4, 80124b6 <Hardware::Reboot()+0x4a>
 80124b4:	e7fe      	b.n	80124b4 <Hardware::Reboot()+0x48>
 80124b6:	6802      	ldr	r2, [r0, #0]
 80124b8:	695e      	ldr	r6, [r3, #20]
 80124ba:	1b92      	subs	r2, r2, r6
 80124bc:	4294      	cmp	r4, r2
 80124be:	d8f8      	bhi.n	80124b2 <Hardware::Reboot()+0x46>
 80124c0:	6802      	ldr	r2, [r0, #0]
 80124c2:	615a      	str	r2, [r3, #20]
 80124c4:	691a      	ldr	r2, [r3, #16]
 80124c6:	2a01      	cmp	r2, #1
 80124c8:	f082 0401 	eor.w	r4, r2, #1
 80124cc:	611c      	str	r4, [r3, #16]
 80124ce:	bf14      	ite	ne
 80124d0:	610d      	strne	r5, [r1, #16]
 80124d2:	614a      	streq	r2, [r1, #20]
 80124d4:	e7ec      	b.n	80124b0 <Hardware::Reboot()+0x44>
 80124d6:	bf00      	nop
 80124d8:	2000b864 	andcs	fp, r0, r4, ror #16
 80124dc:	2000b87c 	andcs	fp, r0, ip, ror r8
 80124e0:	40011000 	andmi	r1, r1, r0

080124e4 <operator delete(void*)>:
 80124e4:	f000 b890 	b.w	8012608 <free>

080124e8 <operator delete[](void*)>:
 80124e8:	f000 b88e 	b.w	8012608 <free>

080124ec <operator new(unsigned int)>:
 80124ec:	f000 b842 	b.w	8012574 <malloc>

080124f0 <operator new[](unsigned int)>:
 80124f0:	f000 b840 	b.w	8012574 <malloc>

080124f4 <inet_aton>:
 80124f4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80124f6:	f04f 0c0a 	mov.w	ip, #10
 80124fa:	2500      	movs	r5, #0
 80124fc:	ae01      	add	r6, sp, #4
 80124fe:	4603      	mov	r3, r0
 8012500:	2200      	movs	r2, #0
 8012502:	1d07      	adds	r7, r0, #4
 8012504:	e007      	b.n	8012516 <inet_aton+0x22>
 8012506:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 801250a:	2b09      	cmp	r3, #9
 801250c:	d820      	bhi.n	8012550 <inet_aton+0x5c>
 801250e:	4603      	mov	r3, r0
 8012510:	fb0c 4202 	mla	r2, ip, r2, r4
 8012514:	3a30      	subs	r2, #48	; 0x30
 8012516:	4618      	mov	r0, r3
 8012518:	f810 4b01 	ldrb.w	r4, [r0], #1
 801251c:	2c2e      	cmp	r4, #46	; 0x2e
 801251e:	d111      	bne.n	8012544 <inet_aton+0x50>
 8012520:	3501      	adds	r5, #1
 8012522:	2d03      	cmp	r5, #3
 8012524:	f806 2b01 	strb.w	r2, [r6], #1
 8012528:	d1e9      	bne.n	80124fe <inet_aton+0xa>
 801252a:	2200      	movs	r2, #0
 801252c:	250a      	movs	r5, #10
 801252e:	1d1c      	adds	r4, r3, #4
 8012530:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8012534:	f010 0fdf 	tst.w	r0, #223	; 0xdf
 8012538:	d10d      	bne.n	8012556 <inet_aton+0x62>
 801253a:	f88d 2007 	strb.w	r2, [sp, #7]
 801253e:	b9b1      	cbnz	r1, 801256e <inet_aton+0x7a>
 8012540:	2001      	movs	r0, #1
 8012542:	e006      	b.n	8012552 <inet_aton+0x5e>
 8012544:	2c00      	cmp	r4, #0
 8012546:	d0eb      	beq.n	8012520 <inet_aton+0x2c>
 8012548:	2c0a      	cmp	r4, #10
 801254a:	d0e9      	beq.n	8012520 <inet_aton+0x2c>
 801254c:	42b8      	cmp	r0, r7
 801254e:	d1da      	bne.n	8012506 <inet_aton+0x12>
 8012550:	2000      	movs	r0, #0
 8012552:	b003      	add	sp, #12
 8012554:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012556:	280a      	cmp	r0, #10
 8012558:	d0ef      	beq.n	801253a <inet_aton+0x46>
 801255a:	42a3      	cmp	r3, r4
 801255c:	d0f8      	beq.n	8012550 <inet_aton+0x5c>
 801255e:	f1a0 0630 	sub.w	r6, r0, #48	; 0x30
 8012562:	2e09      	cmp	r6, #9
 8012564:	d8f4      	bhi.n	8012550 <inet_aton+0x5c>
 8012566:	fb05 0202 	mla	r2, r5, r2, r0
 801256a:	3a30      	subs	r2, #48	; 0x30
 801256c:	e7e0      	b.n	8012530 <inet_aton+0x3c>
 801256e:	9b01      	ldr	r3, [sp, #4]
 8012570:	600b      	str	r3, [r1, #0]
 8012572:	e7e5      	b.n	8012540 <inet_aton+0x4c>

08012574 <malloc>:
 8012574:	b538      	push	{r3, r4, r5, lr}
 8012576:	4604      	mov	r4, r0
 8012578:	4601      	mov	r1, r0
 801257a:	481c      	ldr	r0, [pc, #112]	; (80125ec <malloc+0x78>)
 801257c:	f7f6 fdb4 	bl	80090e8 <printf>
 8012580:	b17c      	cbz	r4, 80125a2 <malloc+0x2e>
 8012582:	4b1b      	ldr	r3, [pc, #108]	; (80125f0 <malloc+0x7c>)
 8012584:	6818      	ldr	r0, [r3, #0]
 8012586:	b978      	cbnz	r0, 80125a8 <malloc+0x34>
 8012588:	4a1a      	ldr	r2, [pc, #104]	; (80125f4 <malloc+0x80>)
 801258a:	f104 031b 	add.w	r3, r4, #27
 801258e:	6811      	ldr	r1, [r2, #0]
 8012590:	4819      	ldr	r0, [pc, #100]	; (80125f8 <malloc+0x84>)
 8012592:	f023 030f 	bic.w	r3, r3, #15
 8012596:	440b      	add	r3, r1
 8012598:	4283      	cmp	r3, r0
 801259a:	d921      	bls.n	80125e0 <malloc+0x6c>
 801259c:	4817      	ldr	r0, [pc, #92]	; (80125fc <malloc+0x88>)
 801259e:	f7f6 fda3 	bl	80090e8 <printf>
 80125a2:	2500      	movs	r5, #0
 80125a4:	4628      	mov	r0, r5
 80125a6:	bd38      	pop	{r3, r4, r5, pc}
 80125a8:	4284      	cmp	r4, r0
 80125aa:	d80a      	bhi.n	80125c2 <malloc+0x4e>
 80125ac:	685a      	ldr	r2, [r3, #4]
 80125ae:	6899      	ldr	r1, [r3, #8]
 80125b0:	3201      	adds	r2, #1
 80125b2:	428a      	cmp	r2, r1
 80125b4:	605a      	str	r2, [r3, #4]
 80125b6:	d900      	bls.n	80125ba <malloc+0x46>
 80125b8:	609a      	str	r2, [r3, #8]
 80125ba:	68d9      	ldr	r1, [r3, #12]
 80125bc:	b919      	cbnz	r1, 80125c6 <malloc+0x52>
 80125be:	4604      	mov	r4, r0
 80125c0:	e7e2      	b.n	8012588 <malloc+0x14>
 80125c2:	3310      	adds	r3, #16
 80125c4:	e7de      	b.n	8012584 <malloc+0x10>
 80125c6:	4604      	mov	r4, r0
 80125c8:	688a      	ldr	r2, [r1, #8]
 80125ca:	60da      	str	r2, [r3, #12]
 80125cc:	2300      	movs	r3, #0
 80125ce:	f101 050c 	add.w	r5, r1, #12
 80125d2:	608b      	str	r3, [r1, #8]
 80125d4:	4622      	mov	r2, r4
 80125d6:	462b      	mov	r3, r5
 80125d8:	4809      	ldr	r0, [pc, #36]	; (8012600 <malloc+0x8c>)
 80125da:	f7f6 fd85 	bl	80090e8 <printf>
 80125de:	e7e1      	b.n	80125a4 <malloc+0x30>
 80125e0:	6013      	str	r3, [r2, #0]
 80125e2:	4b08      	ldr	r3, [pc, #32]	; (8012604 <malloc+0x90>)
 80125e4:	e9c1 3400 	strd	r3, r4, [r1]
 80125e8:	e7f0      	b.n	80125cc <malloc+0x58>
 80125ea:	bf00      	nop
 80125ec:	08016bcc 	stmdaeq	r1, {r2, r3, r6, r7, r8, r9, fp, sp, lr}
 80125f0:	20000024 	andcs	r0, r0, r4, lsr #32
 80125f4:	20000020 	andcs	r0, r0, r0, lsr #32
 80125f8:	2003d800 	andcs	sp, r3, r0, lsl #16
 80125fc:	08016bd8 	stmdaeq	r1, {r3, r4, r6, r7, r8, r9, fp, sp, lr}
 8012600:	08016bf4 	stmdaeq	r1, {r2, r4, r5, r6, r7, r8, r9, fp, sp, lr}
 8012604:	424c4d43 	submi	r4, ip, #4288	; 0x10c0

08012608 <free>:
 8012608:	b538      	push	{r3, r4, r5, lr}
 801260a:	4604      	mov	r4, r0
 801260c:	b1c8      	cbz	r0, 8012642 <free+0x3a>
 801260e:	f1a0 050c 	sub.w	r5, r0, #12
 8012612:	4602      	mov	r2, r0
 8012614:	4629      	mov	r1, r5
 8012616:	480c      	ldr	r0, [pc, #48]	; (8012648 <free+0x40>)
 8012618:	f7f6 fd66 	bl	80090e8 <printf>
 801261c:	f854 2c0c 	ldr.w	r2, [r4, #-12]
 8012620:	4b0a      	ldr	r3, [pc, #40]	; (801264c <free+0x44>)
 8012622:	429a      	cmp	r2, r3
 8012624:	d10d      	bne.n	8012642 <free+0x3a>
 8012626:	4b0a      	ldr	r3, [pc, #40]	; (8012650 <free+0x48>)
 8012628:	681a      	ldr	r2, [r3, #0]
 801262a:	b152      	cbz	r2, 8012642 <free+0x3a>
 801262c:	f854 1c08 	ldr.w	r1, [r4, #-8]
 8012630:	4291      	cmp	r1, r2
 8012632:	d107      	bne.n	8012644 <free+0x3c>
 8012634:	68da      	ldr	r2, [r3, #12]
 8012636:	f844 2c04 	str.w	r2, [r4, #-4]
 801263a:	685a      	ldr	r2, [r3, #4]
 801263c:	60dd      	str	r5, [r3, #12]
 801263e:	3a01      	subs	r2, #1
 8012640:	605a      	str	r2, [r3, #4]
 8012642:	bd38      	pop	{r3, r4, r5, pc}
 8012644:	3310      	adds	r3, #16
 8012646:	e7ef      	b.n	8012628 <free+0x20>
 8012648:	08016c1f 	stmdaeq	r1, {r0, r1, r2, r3, r4, sl, fp, sp, lr}
 801264c:	424c4d43 	submi	r4, ip, #4288	; 0x10c0
 8012650:	20000024 	andcs	r0, r0, r4, lsr #32

08012654 <memcpy>:
 8012654:	b510      	push	{r4, lr}
 8012656:	1e43      	subs	r3, r0, #1
 8012658:	440a      	add	r2, r1
 801265a:	4291      	cmp	r1, r2
 801265c:	d100      	bne.n	8012660 <memcpy+0xc>
 801265e:	bd10      	pop	{r4, pc}
 8012660:	f811 4b01 	ldrb.w	r4, [r1], #1
 8012664:	f803 4f01 	strb.w	r4, [r3, #1]!
 8012668:	e7f7      	b.n	801265a <memcpy+0x6>

0801266a <memmove>:
 801266a:	4288      	cmp	r0, r1
 801266c:	b510      	push	{r4, lr}
 801266e:	eb01 0302 	add.w	r3, r1, r2
 8012672:	d208      	bcs.n	8012686 <memmove+0x1c>
 8012674:	1e42      	subs	r2, r0, #1
 8012676:	4299      	cmp	r1, r3
 8012678:	d100      	bne.n	801267c <memmove+0x12>
 801267a:	bd10      	pop	{r4, pc}
 801267c:	f811 4b01 	ldrb.w	r4, [r1], #1
 8012680:	f802 4f01 	strb.w	r4, [r2, #1]!
 8012684:	e7f7      	b.n	8012676 <memmove+0xc>
 8012686:	4601      	mov	r1, r0
 8012688:	4402      	add	r2, r0
 801268a:	428a      	cmp	r2, r1
 801268c:	d0f5      	beq.n	801267a <memmove+0x10>
 801268e:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8012692:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8012696:	e7f8      	b.n	801268a <memmove+0x20>

08012698 <memset>:
 8012698:	b5f0      	push	{r4, r5, r6, r7, lr}
 801269a:	b1c2      	cbz	r2, 80126ce <memset+0x36>
 801269c:	4603      	mov	r3, r0
 801269e:	b2c9      	uxtb	r1, r1
 80126a0:	075c      	lsls	r4, r3, #29
 80126a2:	d110      	bne.n	80126c6 <memset+0x2e>
 80126a4:	ea41 2401 	orr.w	r4, r1, r1, lsl #8
 80126a8:	ea44 4704 	orr.w	r7, r4, r4, lsl #16
 80126ac:	463d      	mov	r5, r7
 80126ae:	461e      	mov	r6, r3
 80126b0:	f022 0407 	bic.w	r4, r2, #7
 80126b4:	441c      	add	r4, r3
 80126b6:	42a6      	cmp	r6, r4
 80126b8:	d10a      	bne.n	80126d0 <memset+0x38>
 80126ba:	4413      	add	r3, r2
 80126bc:	429c      	cmp	r4, r3
 80126be:	d006      	beq.n	80126ce <memset+0x36>
 80126c0:	f804 1b01 	strb.w	r1, [r4], #1
 80126c4:	e7fa      	b.n	80126bc <memset+0x24>
 80126c6:	3a01      	subs	r2, #1
 80126c8:	f803 1b01 	strb.w	r1, [r3], #1
 80126cc:	d1e8      	bne.n	80126a0 <memset+0x8>
 80126ce:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80126d0:	f846 7b08 	str.w	r7, [r6], #8
 80126d4:	f846 5c04 	str.w	r5, [r6, #-4]
 80126d8:	e7ed      	b.n	80126b6 <memset+0x1e>

080126da <puts>:
 80126da:	b508      	push	{r3, lr}
 80126dc:	f7ff fd70 	bl	80121c0 <console_puts>
 80126e0:	200a      	movs	r0, #10
 80126e2:	f7ff fd6b 	bl	80121bc <console_putc>
 80126e6:	2001      	movs	r0, #1
 80126e8:	bd08      	pop	{r3, pc}
	...

080126ec <strtok>:
 80126ec:	b530      	push	{r4, r5, lr}
 80126ee:	b910      	cbnz	r0, 80126f6 <strtok+0xa>
 80126f0:	4b12      	ldr	r3, [pc, #72]	; (801273c <strtok+0x50>)
 80126f2:	6818      	ldr	r0, [r3, #0]
 80126f4:	b158      	cbz	r0, 801270e <strtok+0x22>
 80126f6:	4603      	mov	r3, r0
 80126f8:	460d      	mov	r5, r1
 80126fa:	4618      	mov	r0, r3
 80126fc:	f813 2b01 	ldrb.w	r2, [r3], #1
 8012700:	f815 4b01 	ldrb.w	r4, [r5], #1
 8012704:	b924      	cbnz	r4, 8012710 <strtok+0x24>
 8012706:	b94a      	cbnz	r2, 801271c <strtok+0x30>
 8012708:	4610      	mov	r0, r2
 801270a:	4b0c      	ldr	r3, [pc, #48]	; (801273c <strtok+0x50>)
 801270c:	601a      	str	r2, [r3, #0]
 801270e:	bd30      	pop	{r4, r5, pc}
 8012710:	42a2      	cmp	r2, r4
 8012712:	d1f5      	bne.n	8012700 <strtok+0x14>
 8012714:	e7f0      	b.n	80126f8 <strtok+0xc>
 8012716:	4613      	mov	r3, r2
 8012718:	e00c      	b.n	8012734 <strtok+0x48>
 801271a:	b914      	cbnz	r4, 8012722 <strtok+0x36>
 801271c:	460d      	mov	r5, r1
 801271e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8012722:	f815 4b01 	ldrb.w	r4, [r5], #1
 8012726:	42a2      	cmp	r2, r4
 8012728:	d1f7      	bne.n	801271a <strtok+0x2e>
 801272a:	2a00      	cmp	r2, #0
 801272c:	d0f3      	beq.n	8012716 <strtok+0x2a>
 801272e:	2200      	movs	r2, #0
 8012730:	f803 2c01 	strb.w	r2, [r3, #-1]
 8012734:	4a01      	ldr	r2, [pc, #4]	; (801273c <strtok+0x50>)
 8012736:	6013      	str	r3, [r2, #0]
 8012738:	e7e9      	b.n	801270e <strtok+0x22>
 801273a:	bf00      	nop
 801273c:	2000b86c 	andcs	fp, r0, ip, ror #16

08012740 <isleapyear>:
 8012740:	2264      	movs	r2, #100	; 0x64
 8012742:	fb90 f3f2 	sdiv	r3, r0, r2
 8012746:	fb02 0313 	mls	r3, r2, r3, r0
 801274a:	b94b      	cbnz	r3, 8012760 <isleapyear+0x20>
 801274c:	f44f 73c8 	mov.w	r3, #400	; 0x190
 8012750:	fb90 f2f3 	sdiv	r2, r0, r3
 8012754:	fb03 0012 	mls	r0, r3, r2, r0
 8012758:	fab0 f080 	clz	r0, r0
 801275c:	0940      	lsrs	r0, r0, #5
 801275e:	4770      	bx	lr
 8012760:	f010 0f03 	tst.w	r0, #3
 8012764:	bf0c      	ite	eq
 8012766:	2001      	moveq	r0, #1
 8012768:	2000      	movne	r0, #0
 801276a:	4770      	bx	lr

0801276c <getdaysofmonth>:
 801276c:	b510      	push	{r4, lr}
 801276e:	4604      	mov	r4, r0
 8012770:	2c01      	cmp	r4, #1
 8012772:	4608      	mov	r0, r1
 8012774:	d102      	bne.n	801277c <getdaysofmonth+0x10>
 8012776:	f7ff ffe3 	bl	8012740 <isleapyear>
 801277a:	b918      	cbnz	r0, 8012784 <getdaysofmonth+0x18>
 801277c:	4b02      	ldr	r3, [pc, #8]	; (8012788 <getdaysofmonth+0x1c>)
 801277e:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8012782:	bd10      	pop	{r4, pc}
 8012784:	201d      	movs	r0, #29
 8012786:	e7fc      	b.n	8012782 <getdaysofmonth+0x16>
 8012788:	08016c48 	stmdaeq	r1, {r3, r6, sl, fp, sp, lr}

0801278c <mktime>:
 801278c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012790:	4604      	mov	r4, r0
 8012792:	2800      	cmp	r0, #0
 8012794:	d043      	beq.n	801281e <mktime+0x92>
 8012796:	6941      	ldr	r1, [r0, #20]
 8012798:	f1a1 0346 	sub.w	r3, r1, #70	; 0x46
 801279c:	2b45      	cmp	r3, #69	; 0x45
 801279e:	d83e      	bhi.n	801281e <mktime+0x92>
 80127a0:	2600      	movs	r6, #0
 80127a2:	f240 75b2 	movw	r5, #1970	; 0x7b2
 80127a6:	f240 186d 	movw	r8, #365	; 0x16d
 80127aa:	f201 776b 	addw	r7, r1, #1899	; 0x76b
 80127ae:	42af      	cmp	r7, r5
 80127b0:	da24      	bge.n	80127fc <mktime+0x70>
 80127b2:	6927      	ldr	r7, [r4, #16]
 80127b4:	2f0b      	cmp	r7, #11
 80127b6:	d832      	bhi.n	801281e <mktime+0x92>
 80127b8:	2500      	movs	r5, #0
 80127ba:	42af      	cmp	r7, r5
 80127bc:	d129      	bne.n	8012812 <mktime+0x86>
 80127be:	68e5      	ldr	r5, [r4, #12]
 80127c0:	2d00      	cmp	r5, #0
 80127c2:	dd2c      	ble.n	801281e <mktime+0x92>
 80127c4:	4638      	mov	r0, r7
 80127c6:	f7ff ffd1 	bl	801276c <getdaysofmonth>
 80127ca:	4285      	cmp	r5, r0
 80127cc:	dc27      	bgt.n	801281e <mktime+0x92>
 80127ce:	2318      	movs	r3, #24
 80127d0:	3d01      	subs	r5, #1
 80127d2:	4435      	add	r5, r6
 80127d4:	435d      	muls	r5, r3
 80127d6:	68a3      	ldr	r3, [r4, #8]
 80127d8:	2b17      	cmp	r3, #23
 80127da:	d820      	bhi.n	801281e <mktime+0x92>
 80127dc:	213c      	movs	r1, #60	; 0x3c
 80127de:	442b      	add	r3, r5
 80127e0:	fb01 f203 	mul.w	r2, r1, r3
 80127e4:	6863      	ldr	r3, [r4, #4]
 80127e6:	2b3b      	cmp	r3, #59	; 0x3b
 80127e8:	d819      	bhi.n	801281e <mktime+0x92>
 80127ea:	6820      	ldr	r0, [r4, #0]
 80127ec:	4413      	add	r3, r2
 80127ee:	283b      	cmp	r0, #59	; 0x3b
 80127f0:	fb01 f303 	mul.w	r3, r1, r3
 80127f4:	d813      	bhi.n	801281e <mktime+0x92>
 80127f6:	4418      	add	r0, r3
 80127f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80127fc:	4628      	mov	r0, r5
 80127fe:	f7ff ff9f 	bl	8012740 <isleapyear>
 8012802:	2800      	cmp	r0, #0
 8012804:	bf14      	ite	ne
 8012806:	f44f 73b7 	movne.w	r3, #366	; 0x16e
 801280a:	4643      	moveq	r3, r8
 801280c:	3501      	adds	r5, #1
 801280e:	441e      	add	r6, r3
 8012810:	e7cd      	b.n	80127ae <mktime+0x22>
 8012812:	4628      	mov	r0, r5
 8012814:	f7ff ffaa 	bl	801276c <getdaysofmonth>
 8012818:	3501      	adds	r5, #1
 801281a:	4406      	add	r6, r0
 801281c:	e7cd      	b.n	80127ba <mktime+0x2e>
 801281e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8012822:	e7e9      	b.n	80127f8 <mktime+0x6c>

08012824 <gettimeofday>:
 8012824:	b538      	push	{r3, r4, r5, lr}
 8012826:	4b10      	ldr	r3, [pc, #64]	; (8012868 <gettimeofday+0x44>)
 8012828:	4a10      	ldr	r2, [pc, #64]	; (801286c <gettimeofday+0x48>)
 801282a:	681b      	ldr	r3, [r3, #0]
 801282c:	6814      	ldr	r4, [r2, #0]
 801282e:	6013      	str	r3, [r2, #0]
 8012830:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8012834:	429c      	cmp	r4, r3
 8012836:	bf2c      	ite	cs
 8012838:	1ae4      	subcs	r4, r4, r3
 801283a:	1b1c      	subcc	r4, r3, r4
 801283c:	4354      	muls	r4, r2
 801283e:	4b0c      	ldr	r3, [pc, #48]	; (8012870 <gettimeofday+0x4c>)
 8012840:	4605      	mov	r5, r0
 8012842:	e9d3 2100 	ldrd	r2, r1, [r3]
 8012846:	18a4      	adds	r4, r4, r2
 8012848:	f141 0100 	adc.w	r1, r1, #0
 801284c:	e9c3 4100 	strd	r4, r1, [r3]
 8012850:	4620      	mov	r0, r4
 8012852:	2300      	movs	r3, #0
 8012854:	4a07      	ldr	r2, [pc, #28]	; (8012874 <gettimeofday+0x50>)
 8012856:	f7f5 fc1f 	bl	8008098 <__aeabi_uldivmod>
 801285a:	4b06      	ldr	r3, [pc, #24]	; (8012874 <gettimeofday+0x50>)
 801285c:	6028      	str	r0, [r5, #0]
 801285e:	fb03 4410 	mls	r4, r3, r0, r4
 8012862:	2000      	movs	r0, #0
 8012864:	606c      	str	r4, [r5, #4]
 8012866:	bd38      	pop	{r3, r4, r5, pc}
 8012868:	2000b87c 	andcs	fp, r0, ip, ror r8
 801286c:	2000b878 	andcs	fp, r0, r8, ror r8
 8012870:	2000b870 	andcs	fp, r0, r0, ror r8
 8012874:	000f4240 	andeq	r4, pc, r0, asr #4

08012878 <settimeofday>:
 8012878:	4b07      	ldr	r3, [pc, #28]	; (8012898 <settimeofday+0x20>)
 801287a:	b510      	push	{r4, lr}
 801287c:	681a      	ldr	r2, [r3, #0]
 801287e:	4b07      	ldr	r3, [pc, #28]	; (801289c <settimeofday+0x24>)
 8012880:	6804      	ldr	r4, [r0, #0]
 8012882:	601a      	str	r2, [r3, #0]
 8012884:	6843      	ldr	r3, [r0, #4]
 8012886:	4806      	ldr	r0, [pc, #24]	; (80128a0 <settimeofday+0x28>)
 8012888:	17da      	asrs	r2, r3, #31
 801288a:	fbc4 3200 	smlal	r3, r2, r4, r0
 801288e:	4905      	ldr	r1, [pc, #20]	; (80128a4 <settimeofday+0x2c>)
 8012890:	2000      	movs	r0, #0
 8012892:	e9c1 3200 	strd	r3, r2, [r1]
 8012896:	bd10      	pop	{r4, pc}
 8012898:	2000b87c 	andcs	fp, r0, ip, ror r8
 801289c:	2000b878 	andcs	fp, r0, r8, ror r8
 80128a0:	000f4240 	andeq	r4, pc, r0, asr #4
 80128a4:	2000b870 	andcs	fp, r0, r0, ror r8

080128a8 <time>:
 80128a8:	b513      	push	{r0, r1, r4, lr}
 80128aa:	4604      	mov	r4, r0
 80128ac:	2100      	movs	r1, #0
 80128ae:	4668      	mov	r0, sp
 80128b0:	f7ff ffb8 	bl	8012824 <gettimeofday>
 80128b4:	9800      	ldr	r0, [sp, #0]
 80128b6:	b104      	cbz	r4, 80128ba <time+0x12>
 80128b8:	6020      	str	r0, [r4, #0]
 80128ba:	b002      	add	sp, #8
 80128bc:	bd10      	pop	{r4, pc}
	...

080128c0 <uart0_init>:
 80128c0:	2301      	movs	r3, #1
 80128c2:	b507      	push	{r0, r1, r2, lr}
 80128c4:	2208      	movs	r2, #8
 80128c6:	9300      	str	r3, [sp, #0]
 80128c8:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
 80128cc:	2300      	movs	r3, #0
 80128ce:	4803      	ldr	r0, [pc, #12]	; (80128dc <uart0_init+0x1c>)
 80128d0:	f001 f80e 	bl	80138f0 <gd32_uart_begin>
 80128d4:	b003      	add	sp, #12
 80128d6:	f85d fb04 	ldr.w	pc, [sp], #4
 80128da:	bf00      	nop
 80128dc:	40013800 	andmi	r3, r1, r0, lsl #16

080128e0 <uart0_putc>:
 80128e0:	280a      	cmp	r0, #10
 80128e2:	b538      	push	{r3, r4, r5, lr}
 80128e4:	4604      	mov	r4, r0
 80128e6:	d10a      	bne.n	80128fe <uart0_putc+0x1e>
 80128e8:	4d0b      	ldr	r5, [pc, #44]	; (8012918 <uart0_putc+0x38>)
 80128ea:	2107      	movs	r1, #7
 80128ec:	4628      	mov	r0, r5
 80128ee:	f000 fe11 	bl	8013514 <usart_flag_get>
 80128f2:	2800      	cmp	r0, #0
 80128f4:	d0f9      	beq.n	80128ea <uart0_putc+0xa>
 80128f6:	220d      	movs	r2, #13
 80128f8:	4b08      	ldr	r3, [pc, #32]	; (801291c <uart0_putc+0x3c>)
 80128fa:	f8c3 2804 	str.w	r2, [r3, #2052]	; 0x804
 80128fe:	4d06      	ldr	r5, [pc, #24]	; (8012918 <uart0_putc+0x38>)
 8012900:	2107      	movs	r1, #7
 8012902:	4628      	mov	r0, r5
 8012904:	f000 fe06 	bl	8013514 <usart_flag_get>
 8012908:	2800      	cmp	r0, #0
 801290a:	d0f9      	beq.n	8012900 <uart0_putc+0x20>
 801290c:	4b03      	ldr	r3, [pc, #12]	; (801291c <uart0_putc+0x3c>)
 801290e:	b2e4      	uxtb	r4, r4
 8012910:	f8c3 4804 	str.w	r4, [r3, #2052]	; 0x804
 8012914:	bd38      	pop	{r3, r4, r5, pc}
 8012916:	bf00      	nop
 8012918:	40013800 	andmi	r3, r1, r0, lsl #16
 801291c:	40013000 	andmi	r3, r1, r0

08012920 <uart0_puts>:
 8012920:	b510      	push	{r4, lr}
 8012922:	1e44      	subs	r4, r0, #1
 8012924:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8012928:	b903      	cbnz	r3, 801292c <uart0_puts+0xc>
 801292a:	bd10      	pop	{r4, pc}
 801292c:	2b0a      	cmp	r3, #10
 801292e:	d102      	bne.n	8012936 <uart0_puts+0x16>
 8012930:	200d      	movs	r0, #13
 8012932:	f7ff ffd5 	bl	80128e0 <uart0_putc>
 8012936:	7820      	ldrb	r0, [r4, #0]
 8012938:	f7ff ffd2 	bl	80128e0 <uart0_putc>
 801293c:	e7f2      	b.n	8012924 <uart0_puts+0x4>
	...

08012940 <systick_config>:
 8012940:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8012944:	4b0b      	ldr	r3, [pc, #44]	; (8012974 <systick_config+0x34>)
 8012946:	681b      	ldr	r3, [r3, #0]
 8012948:	fbb3 f3f2 	udiv	r3, r3, r2
 801294c:	3b01      	subs	r3, #1
 801294e:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8012952:	d20d      	bcs.n	8012970 <systick_config+0x30>
 8012954:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8012958:	21f0      	movs	r1, #240	; 0xf0
 801295a:	6153      	str	r3, [r2, #20]
 801295c:	4b06      	ldr	r3, [pc, #24]	; (8012978 <systick_config+0x38>)
 801295e:	2007      	movs	r0, #7
 8012960:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 8012964:	2100      	movs	r1, #0
 8012966:	6191      	str	r1, [r2, #24]
 8012968:	6110      	str	r0, [r2, #16]
 801296a:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 801296e:	4770      	bx	lr
 8012970:	e7fe      	b.n	8012970 <systick_config+0x30>
 8012972:	bf00      	nop
 8012974:	200000f4 	strdcs	r0, [r0], -r4
 8012978:	e000ed00 	and	lr, r0, r0, lsl #26

0801297c <SysTick_Handler>:
 801297c:	4a02      	ldr	r2, [pc, #8]	; (8012988 <SysTick_Handler+0xc>)
 801297e:	6813      	ldr	r3, [r2, #0]
 8012980:	3301      	adds	r3, #1
 8012982:	6013      	str	r3, [r2, #0]
 8012984:	4770      	bx	lr
 8012986:	bf00      	nop
 8012988:	2000b87c 	andcs	fp, r0, ip, ror r8

0801298c <SystemInit>:
 801298c:	4b3a      	ldr	r3, [pc, #232]	; (8012a78 <SystemInit+0xec>)
 801298e:	681a      	ldr	r2, [r3, #0]
 8012990:	f042 0201 	orr.w	r2, r2, #1
 8012994:	601a      	str	r2, [r3, #0]
 8012996:	6859      	ldr	r1, [r3, #4]
 8012998:	4a38      	ldr	r2, [pc, #224]	; (8012a7c <SystemInit+0xf0>)
 801299a:	400a      	ands	r2, r1
 801299c:	605a      	str	r2, [r3, #4]
 801299e:	681a      	ldr	r2, [r3, #0]
 80129a0:	f44f 017f 	mov.w	r1, #16711680	; 0xff0000
 80129a4:	f022 7284 	bic.w	r2, r2, #17301504	; 0x1080000
 80129a8:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 80129ac:	601a      	str	r2, [r3, #0]
 80129ae:	681a      	ldr	r2, [r3, #0]
 80129b0:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 80129b4:	601a      	str	r2, [r3, #0]
 80129b6:	685a      	ldr	r2, [r3, #4]
 80129b8:	f022 5203 	bic.w	r2, r2, #549453824	; 0x20c00000
 80129bc:	f422 127c 	bic.w	r2, r2, #4128768	; 0x3f0000
 80129c0:	605a      	str	r2, [r3, #4]
 80129c2:	681a      	ldr	r2, [r3, #0]
 80129c4:	f022 52a0 	bic.w	r2, r2, #335544320	; 0x14000000
 80129c8:	601a      	str	r2, [r3, #0]
 80129ca:	2200      	movs	r2, #0
 80129cc:	62da      	str	r2, [r3, #44]	; 0x2c
 80129ce:	6099      	str	r1, [r3, #8]
 80129d0:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 80129d4:	f8d3 2090 	ldr.w	r2, [r3, #144]	; 0x90
 80129d8:	f022 5280 	bic.w	r2, r2, #268435456	; 0x10000000
 80129dc:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
 80129e0:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
 80129e4:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
 80129e8:	4a25      	ldr	r2, [pc, #148]	; (8012a80 <SystemInit+0xf4>)
 80129ea:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
 80129ee:	681a      	ldr	r2, [r3, #0]
 80129f0:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 80129f4:	601a      	str	r2, [r3, #0]
 80129f6:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80129fa:	6819      	ldr	r1, [r3, #0]
 80129fc:	0389      	lsls	r1, r1, #14
 80129fe:	d401      	bmi.n	8012a04 <SystemInit+0x78>
 8012a00:	3a01      	subs	r2, #1
 8012a02:	d1fa      	bne.n	80129fa <SystemInit+0x6e>
 8012a04:	681a      	ldr	r2, [r3, #0]
 8012a06:	0392      	lsls	r2, r2, #14
 8012a08:	d400      	bmi.n	8012a0c <SystemInit+0x80>
 8012a0a:	e7fe      	b.n	8012a0a <SystemInit+0x7e>
 8012a0c:	685a      	ldr	r2, [r3, #4]
 8012a0e:	605a      	str	r2, [r3, #4]
 8012a10:	685a      	ldr	r2, [r3, #4]
 8012a12:	605a      	str	r2, [r3, #4]
 8012a14:	685a      	ldr	r2, [r3, #4]
 8012a16:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8012a1a:	605a      	str	r2, [r3, #4]
 8012a1c:	685a      	ldr	r2, [r3, #4]
 8012a1e:	f022 5200 	bic.w	r2, r2, #536870912	; 0x20000000
 8012a22:	f422 127c 	bic.w	r2, r2, #4128768	; 0x3f0000
 8012a26:	605a      	str	r2, [r3, #4]
 8012a28:	685a      	ldr	r2, [r3, #4]
 8012a2a:	f442 1204 	orr.w	r2, r2, #2162688	; 0x210000
 8012a2e:	605a      	str	r2, [r3, #4]
 8012a30:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8012a32:	4a14      	ldr	r2, [pc, #80]	; (8012a84 <SystemInit+0xf8>)
 8012a34:	400a      	ands	r2, r1
 8012a36:	62da      	str	r2, [r3, #44]	; 0x2c
 8012a38:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8012a3a:	f442 3285 	orr.w	r2, r2, #68096	; 0x10a00
 8012a3e:	f042 0244 	orr.w	r2, r2, #68	; 0x44
 8012a42:	62da      	str	r2, [r3, #44]	; 0x2c
 8012a44:	681a      	ldr	r2, [r3, #0]
 8012a46:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8012a4a:	601a      	str	r2, [r3, #0]
 8012a4c:	681a      	ldr	r2, [r3, #0]
 8012a4e:	0110      	lsls	r0, r2, #4
 8012a50:	d5fc      	bpl.n	8012a4c <SystemInit+0xc0>
 8012a52:	681a      	ldr	r2, [r3, #0]
 8012a54:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 8012a58:	601a      	str	r2, [r3, #0]
 8012a5a:	681a      	ldr	r2, [r3, #0]
 8012a5c:	0191      	lsls	r1, r2, #6
 8012a5e:	d5fc      	bpl.n	8012a5a <SystemInit+0xce>
 8012a60:	685a      	ldr	r2, [r3, #4]
 8012a62:	f022 0203 	bic.w	r2, r2, #3
 8012a66:	605a      	str	r2, [r3, #4]
 8012a68:	685a      	ldr	r2, [r3, #4]
 8012a6a:	f042 0202 	orr.w	r2, r2, #2
 8012a6e:	605a      	str	r2, [r3, #4]
 8012a70:	685a      	ldr	r2, [r3, #4]
 8012a72:	0712      	lsls	r2, r2, #28
 8012a74:	d5fc      	bpl.n	8012a70 <SystemInit+0xe4>
 8012a76:	4770      	bx	lr
 8012a78:	40021000 	andmi	r1, r2, r0
 8012a7c:	e0ff000c 	rscs	r0, pc, ip
 8012a80:	20003010 	andcs	r3, r0, r0, lsl r0
 8012a84:	fffef000 			; <UNDEFINED> instruction: 0xfffef000

08012a88 <bkp_data_write>:
 8012a88:	f1a0 030b 	sub.w	r3, r0, #11
 8012a8c:	2b1f      	cmp	r3, #31
 8012a8e:	d804      	bhi.n	8012a9a <bkp_data_write+0x12>
 8012a90:	4b07      	ldr	r3, [pc, #28]	; (8012ab0 <bkp_data_write+0x28>)
 8012a92:	4403      	add	r3, r0
 8012a94:	009b      	lsls	r3, r3, #2
 8012a96:	8019      	strh	r1, [r3, #0]
 8012a98:	4770      	bx	lr
 8012a9a:	1e43      	subs	r3, r0, #1
 8012a9c:	2b09      	cmp	r3, #9
 8012a9e:	bf9f      	itttt	ls
 8012aa0:	f100 5080 	addls.w	r0, r0, #268435456	; 0x10000000
 8012aa4:	f500 50d8 	addls.w	r0, r0, #6912	; 0x1b00
 8012aa8:	0080      	lslls	r0, r0, #2
 8012aaa:	8001      	strhls	r1, [r0, #0]
 8012aac:	4770      	bx	lr
 8012aae:	bf00      	nop
 8012ab0:	10001b05 	andne	r1, r0, r5, lsl #22

08012ab4 <bkp_data_read>:
 8012ab4:	f1a0 030b 	sub.w	r3, r0, #11
 8012ab8:	2b1f      	cmp	r3, #31
 8012aba:	d805      	bhi.n	8012ac8 <bkp_data_read+0x14>
 8012abc:	4b08      	ldr	r3, [pc, #32]	; (8012ae0 <bkp_data_read+0x2c>)
 8012abe:	4403      	add	r3, r0
 8012ac0:	009b      	lsls	r3, r3, #2
 8012ac2:	8818      	ldrh	r0, [r3, #0]
 8012ac4:	b280      	uxth	r0, r0
 8012ac6:	4770      	bx	lr
 8012ac8:	1e43      	subs	r3, r0, #1
 8012aca:	2b09      	cmp	r3, #9
 8012acc:	d806      	bhi.n	8012adc <bkp_data_read+0x28>
 8012ace:	f100 5080 	add.w	r0, r0, #268435456	; 0x10000000
 8012ad2:	f500 50d8 	add.w	r0, r0, #6912	; 0x1b00
 8012ad6:	0080      	lsls	r0, r0, #2
 8012ad8:	8800      	ldrh	r0, [r0, #0]
 8012ada:	e7f3      	b.n	8012ac4 <bkp_data_read+0x10>
 8012adc:	2000      	movs	r0, #0
 8012ade:	4770      	bx	lr
 8012ae0:	10001b05 	andne	r1, r0, r5, lsl #22

08012ae4 <dma_deinit>:
 8012ae4:	2314      	movs	r3, #20
 8012ae6:	fb03 0301 	mla	r3, r3, r1, r0
 8012aea:	689a      	ldr	r2, [r3, #8]
 8012aec:	b530      	push	{r4, r5, lr}
 8012aee:	f022 0201 	bic.w	r2, r2, #1
 8012af2:	609a      	str	r2, [r3, #8]
 8012af4:	2200      	movs	r2, #0
 8012af6:	609a      	str	r2, [r3, #8]
 8012af8:	60da      	str	r2, [r3, #12]
 8012afa:	611a      	str	r2, [r3, #16]
 8012afc:	615a      	str	r2, [r3, #20]
 8012afe:	230f      	movs	r3, #15
 8012b00:	6844      	ldr	r4, [r0, #4]
 8012b02:	008d      	lsls	r5, r1, #2
 8012b04:	40ab      	lsls	r3, r5
 8012b06:	4323      	orrs	r3, r4
 8012b08:	6043      	str	r3, [r0, #4]
 8012b0a:	4b04      	ldr	r3, [pc, #16]	; (8012b1c <dma_deinit+0x38>)
 8012b0c:	4298      	cmp	r0, r3
 8012b0e:	d103      	bne.n	8012b18 <dma_deinit+0x34>
 8012b10:	2905      	cmp	r1, #5
 8012b12:	bf08      	it	eq
 8012b14:	f8c3 2300 	streq.w	r2, [r3, #768]	; 0x300
 8012b18:	bd30      	pop	{r4, r5, pc}
 8012b1a:	bf00      	nop
 8012b1c:	40020400 	andmi	r0, r2, r0, lsl #8

08012b20 <dma_init>:
 8012b20:	2314      	movs	r3, #20
 8012b22:	fb03 0101 	mla	r1, r3, r1, r0
 8012b26:	6813      	ldr	r3, [r2, #0]
 8012b28:	b510      	push	{r4, lr}
 8012b2a:	610b      	str	r3, [r1, #16]
 8012b2c:	6893      	ldr	r3, [r2, #8]
 8012b2e:	614b      	str	r3, [r1, #20]
 8012b30:	8a13      	ldrh	r3, [r2, #16]
 8012b32:	60cb      	str	r3, [r1, #12]
 8012b34:	68d4      	ldr	r4, [r2, #12]
 8012b36:	6853      	ldr	r3, [r2, #4]
 8012b38:	6888      	ldr	r0, [r1, #8]
 8012b3a:	4323      	orrs	r3, r4
 8012b3c:	6954      	ldr	r4, [r2, #20]
 8012b3e:	f420 507c 	bic.w	r0, r0, #16128	; 0x3f00
 8012b42:	4323      	orrs	r3, r4
 8012b44:	4303      	orrs	r3, r0
 8012b46:	608b      	str	r3, [r1, #8]
 8012b48:	7e13      	ldrb	r3, [r2, #24]
 8012b4a:	2b01      	cmp	r3, #1
 8012b4c:	688b      	ldr	r3, [r1, #8]
 8012b4e:	bf0c      	ite	eq
 8012b50:	f043 0340 	orreq.w	r3, r3, #64	; 0x40
 8012b54:	f023 0340 	bicne.w	r3, r3, #64	; 0x40
 8012b58:	608b      	str	r3, [r1, #8]
 8012b5a:	7e53      	ldrb	r3, [r2, #25]
 8012b5c:	2b01      	cmp	r3, #1
 8012b5e:	688b      	ldr	r3, [r1, #8]
 8012b60:	bf0c      	ite	eq
 8012b62:	f043 0380 	orreq.w	r3, r3, #128	; 0x80
 8012b66:	f023 0380 	bicne.w	r3, r3, #128	; 0x80
 8012b6a:	608b      	str	r3, [r1, #8]
 8012b6c:	7e93      	ldrb	r3, [r2, #26]
 8012b6e:	b923      	cbnz	r3, 8012b7a <dma_init+0x5a>
 8012b70:	688b      	ldr	r3, [r1, #8]
 8012b72:	f023 0310 	bic.w	r3, r3, #16
 8012b76:	608b      	str	r3, [r1, #8]
 8012b78:	bd10      	pop	{r4, pc}
 8012b7a:	688b      	ldr	r3, [r1, #8]
 8012b7c:	f043 0310 	orr.w	r3, r3, #16
 8012b80:	e7f9      	b.n	8012b76 <dma_init+0x56>

08012b82 <dma_circulation_disable>:
 8012b82:	2314      	movs	r3, #20
 8012b84:	4359      	muls	r1, r3
 8012b86:	3008      	adds	r0, #8
 8012b88:	580b      	ldr	r3, [r1, r0]
 8012b8a:	f023 0320 	bic.w	r3, r3, #32
 8012b8e:	500b      	str	r3, [r1, r0]
 8012b90:	4770      	bx	lr

08012b92 <dma_memory_to_memory_disable>:
 8012b92:	2314      	movs	r3, #20
 8012b94:	4359      	muls	r1, r3
 8012b96:	3008      	adds	r0, #8
 8012b98:	580b      	ldr	r3, [r1, r0]
 8012b9a:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8012b9e:	500b      	str	r3, [r1, r0]
 8012ba0:	4770      	bx	lr
	...

08012ba4 <fmc_bank0_unlock>:
 8012ba4:	4b04      	ldr	r3, [pc, #16]	; (8012bb8 <fmc_bank0_unlock+0x14>)
 8012ba6:	691a      	ldr	r2, [r3, #16]
 8012ba8:	0612      	lsls	r2, r2, #24
 8012baa:	bf41      	itttt	mi
 8012bac:	4a03      	ldrmi	r2, [pc, #12]	; (8012bbc <fmc_bank0_unlock+0x18>)
 8012bae:	605a      	strmi	r2, [r3, #4]
 8012bb0:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 8012bb4:	605a      	strmi	r2, [r3, #4]
 8012bb6:	4770      	bx	lr
 8012bb8:	40022000 	andmi	r2, r2, r0
 8012bbc:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

08012bc0 <fmc_bank1_unlock>:
 8012bc0:	4b04      	ldr	r3, [pc, #16]	; (8012bd4 <fmc_bank1_unlock+0x14>)
 8012bc2:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8012bc4:	0612      	lsls	r2, r2, #24
 8012bc6:	bf41      	itttt	mi
 8012bc8:	4a03      	ldrmi	r2, [pc, #12]	; (8012bd8 <fmc_bank1_unlock+0x18>)
 8012bca:	645a      	strmi	r2, [r3, #68]	; 0x44
 8012bcc:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 8012bd0:	645a      	strmi	r2, [r3, #68]	; 0x44
 8012bd2:	4770      	bx	lr
 8012bd4:	40022000 	andmi	r2, r2, r0
 8012bd8:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

08012bdc <fmc_bank0_lock>:
 8012bdc:	4a02      	ldr	r2, [pc, #8]	; (8012be8 <fmc_bank0_lock+0xc>)
 8012bde:	6913      	ldr	r3, [r2, #16]
 8012be0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8012be4:	6113      	str	r3, [r2, #16]
 8012be6:	4770      	bx	lr
 8012be8:	40022000 	andmi	r2, r2, r0

08012bec <fmc_bank1_lock>:
 8012bec:	4a02      	ldr	r2, [pc, #8]	; (8012bf8 <fmc_bank1_lock+0xc>)
 8012bee:	6d13      	ldr	r3, [r2, #80]	; 0x50
 8012bf0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8012bf4:	6513      	str	r3, [r2, #80]	; 0x50
 8012bf6:	4770      	bx	lr
 8012bf8:	40022000 	andmi	r2, r2, r0

08012bfc <fmc_bank0_state_get>:
 8012bfc:	4b07      	ldr	r3, [pc, #28]	; (8012c1c <fmc_bank0_state_get+0x20>)
 8012bfe:	68da      	ldr	r2, [r3, #12]
 8012c00:	07d1      	lsls	r1, r2, #31
 8012c02:	d407      	bmi.n	8012c14 <fmc_bank0_state_get+0x18>
 8012c04:	68da      	ldr	r2, [r3, #12]
 8012c06:	06d2      	lsls	r2, r2, #27
 8012c08:	d406      	bmi.n	8012c18 <fmc_bank0_state_get+0x1c>
 8012c0a:	68d8      	ldr	r0, [r3, #12]
 8012c0c:	f3c0 0080 	ubfx	r0, r0, #2, #1
 8012c10:	0040      	lsls	r0, r0, #1
 8012c12:	4770      	bx	lr
 8012c14:	2001      	movs	r0, #1
 8012c16:	4770      	bx	lr
 8012c18:	2003      	movs	r0, #3
 8012c1a:	4770      	bx	lr
 8012c1c:	40022000 	andmi	r2, r2, r0

08012c20 <fmc_bank1_state_get>:
 8012c20:	4b07      	ldr	r3, [pc, #28]	; (8012c40 <fmc_bank1_state_get+0x20>)
 8012c22:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8012c24:	07d1      	lsls	r1, r2, #31
 8012c26:	d407      	bmi.n	8012c38 <fmc_bank1_state_get+0x18>
 8012c28:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8012c2a:	06d2      	lsls	r2, r2, #27
 8012c2c:	d406      	bmi.n	8012c3c <fmc_bank1_state_get+0x1c>
 8012c2e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8012c30:	f3c0 0080 	ubfx	r0, r0, #2, #1
 8012c34:	0040      	lsls	r0, r0, #1
 8012c36:	4770      	bx	lr
 8012c38:	2001      	movs	r0, #1
 8012c3a:	4770      	bx	lr
 8012c3c:	2003      	movs	r0, #3
 8012c3e:	4770      	bx	lr
 8012c40:	40022000 	andmi	r2, r2, r0

08012c44 <fwdgt_enable>:
 8012c44:	f64c 42cc 	movw	r2, #52428	; 0xcccc
 8012c48:	4b01      	ldr	r3, [pc, #4]	; (8012c50 <fwdgt_enable+0xc>)
 8012c4a:	601a      	str	r2, [r3, #0]
 8012c4c:	4770      	bx	lr
 8012c4e:	bf00      	nop
 8012c50:	40003000 	andmi	r3, r0, r0

08012c54 <fwdgt_counter_reload>:
 8012c54:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
 8012c58:	4b01      	ldr	r3, [pc, #4]	; (8012c60 <fwdgt_counter_reload+0xc>)
 8012c5a:	601a      	str	r2, [r3, #0]
 8012c5c:	4770      	bx	lr
 8012c5e:	bf00      	nop
 8012c60:	40003000 	andmi	r3, r0, r0

08012c64 <fwdgt_config>:
 8012c64:	f245 5355 	movw	r3, #21845	; 0x5555
 8012c68:	4a11      	ldr	r2, [pc, #68]	; (8012cb0 <fwdgt_config+0x4c>)
 8012c6a:	b510      	push	{r4, lr}
 8012c6c:	4c11      	ldr	r4, [pc, #68]	; (8012cb4 <fwdgt_config+0x50>)
 8012c6e:	6013      	str	r3, [r2, #0]
 8012c70:	68d3      	ldr	r3, [r2, #12]
 8012c72:	3c01      	subs	r4, #1
 8012c74:	f003 0301 	and.w	r3, r3, #1
 8012c78:	d013      	beq.n	8012ca2 <fwdgt_config+0x3e>
 8012c7a:	2b00      	cmp	r3, #0
 8012c7c:	d1f8      	bne.n	8012c70 <fwdgt_config+0xc>
 8012c7e:	6051      	str	r1, [r2, #4]
 8012c80:	490c      	ldr	r1, [pc, #48]	; (8012cb4 <fwdgt_config+0x50>)
 8012c82:	4a0b      	ldr	r2, [pc, #44]	; (8012cb0 <fwdgt_config+0x4c>)
 8012c84:	68d3      	ldr	r3, [r2, #12]
 8012c86:	3901      	subs	r1, #1
 8012c88:	f003 0302 	and.w	r3, r3, #2
 8012c8c:	d00d      	beq.n	8012caa <fwdgt_config+0x46>
 8012c8e:	2b00      	cmp	r3, #0
 8012c90:	d1f8      	bne.n	8012c84 <fwdgt_config+0x20>
 8012c92:	f64a 23aa 	movw	r3, #43690	; 0xaaaa
 8012c96:	f3c0 000b 	ubfx	r0, r0, #0, #12
 8012c9a:	6090      	str	r0, [r2, #8]
 8012c9c:	2001      	movs	r0, #1
 8012c9e:	6013      	str	r3, [r2, #0]
 8012ca0:	e002      	b.n	8012ca8 <fwdgt_config+0x44>
 8012ca2:	2b00      	cmp	r3, #0
 8012ca4:	d0eb      	beq.n	8012c7e <fwdgt_config+0x1a>
 8012ca6:	2000      	movs	r0, #0
 8012ca8:	bd10      	pop	{r4, pc}
 8012caa:	2b00      	cmp	r3, #0
 8012cac:	d1fb      	bne.n	8012ca6 <fwdgt_config+0x42>
 8012cae:	e7f0      	b.n	8012c92 <fwdgt_config+0x2e>
 8012cb0:	40003000 	andmi	r3, r0, r0
 8012cb4:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

08012cb8 <gpio_init>:
 8012cb8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012cbc:	f04f 0c0f 	mov.w	ip, #15
 8012cc0:	06cf      	lsls	r7, r1, #27
 8012cc2:	f04f 0400 	mov.w	r4, #0
 8012cc6:	f04f 0701 	mov.w	r7, #1
 8012cca:	f001 050f 	and.w	r5, r1, #15
 8012cce:	bf48      	it	mi
 8012cd0:	4315      	orrmi	r5, r2
 8012cd2:	fa23 f204 	lsr.w	r2, r3, r4
 8012cd6:	07d6      	lsls	r6, r2, #31
 8012cd8:	d510      	bpl.n	8012cfc <gpio_init+0x44>
 8012cda:	00a2      	lsls	r2, r4, #2
 8012cdc:	6806      	ldr	r6, [r0, #0]
 8012cde:	fa0c fe02 	lsl.w	lr, ip, r2
 8012ce2:	ea26 060e 	bic.w	r6, r6, lr
 8012ce6:	fa05 f202 	lsl.w	r2, r5, r2
 8012cea:	2928      	cmp	r1, #40	; 0x28
 8012cec:	ea42 0206 	orr.w	r2, r2, r6
 8012cf0:	d128      	bne.n	8012d44 <gpio_init+0x8c>
 8012cf2:	fa07 f604 	lsl.w	r6, r7, r4
 8012cf6:	401e      	ands	r6, r3
 8012cf8:	6146      	str	r6, [r0, #20]
 8012cfa:	6002      	str	r2, [r0, #0]
 8012cfc:	3401      	adds	r4, #1
 8012cfe:	2c08      	cmp	r4, #8
 8012d00:	d1e7      	bne.n	8012cd2 <gpio_init+0x1a>
 8012d02:	2600      	movs	r6, #0
 8012d04:	f04f 0c0f 	mov.w	ip, #15
 8012d08:	2701      	movs	r7, #1
 8012d0a:	f106 0208 	add.w	r2, r6, #8
 8012d0e:	fa23 f402 	lsr.w	r4, r3, r2
 8012d12:	07e4      	lsls	r4, r4, #31
 8012d14:	d511      	bpl.n	8012d3a <gpio_init+0x82>
 8012d16:	00b4      	lsls	r4, r6, #2
 8012d18:	f8d0 e004 	ldr.w	lr, [r0, #4]
 8012d1c:	fa0c f804 	lsl.w	r8, ip, r4
 8012d20:	ea2e 0e08 	bic.w	lr, lr, r8
 8012d24:	fa05 f404 	lsl.w	r4, r5, r4
 8012d28:	2928      	cmp	r1, #40	; 0x28
 8012d2a:	ea44 040e 	orr.w	r4, r4, lr
 8012d2e:	d110      	bne.n	8012d52 <gpio_init+0x9a>
 8012d30:	fa07 f202 	lsl.w	r2, r7, r2
 8012d34:	401a      	ands	r2, r3
 8012d36:	6142      	str	r2, [r0, #20]
 8012d38:	6044      	str	r4, [r0, #4]
 8012d3a:	3601      	adds	r6, #1
 8012d3c:	2e08      	cmp	r6, #8
 8012d3e:	d1e4      	bne.n	8012d0a <gpio_init+0x52>
 8012d40:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012d44:	2948      	cmp	r1, #72	; 0x48
 8012d46:	bf02      	ittt	eq
 8012d48:	fa07 f604 	lsleq.w	r6, r7, r4
 8012d4c:	401e      	andeq	r6, r3
 8012d4e:	6106      	streq	r6, [r0, #16]
 8012d50:	e7d3      	b.n	8012cfa <gpio_init+0x42>
 8012d52:	2948      	cmp	r1, #72	; 0x48
 8012d54:	bf02      	ittt	eq
 8012d56:	fa07 f202 	lsleq.w	r2, r7, r2
 8012d5a:	401a      	andeq	r2, r3
 8012d5c:	6102      	streq	r2, [r0, #16]
 8012d5e:	e7eb      	b.n	8012d38 <gpio_init+0x80>

08012d60 <gpio_pin_remap_config>:
 8012d60:	2800      	cmp	r0, #0
 8012d62:	4a16      	ldr	r2, [pc, #88]	; (8012dbc <gpio_pin_remap_config+0x5c>)
 8012d64:	b530      	push	{r4, r5, lr}
 8012d66:	f400 1540 	and.w	r5, r0, #3145728	; 0x300000
 8012d6a:	bfb4      	ite	lt
 8012d6c:	69d3      	ldrlt	r3, [r2, #28]
 8012d6e:	6853      	ldrge	r3, [r2, #4]
 8012d70:	f5b5 1f40 	cmp.w	r5, #3145728	; 0x300000
 8012d74:	b284      	uxth	r4, r0
 8012d76:	d110      	bne.n	8012d9a <gpio_pin_remap_config+0x3a>
 8012d78:	6855      	ldr	r5, [r2, #4]
 8012d7a:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 8012d7e:	f025 6570 	bic.w	r5, r5, #251658240	; 0xf000000
 8012d82:	6055      	str	r5, [r2, #4]
 8012d84:	b119      	cbz	r1, 8012d8e <gpio_pin_remap_config+0x2e>
 8012d86:	0d42      	lsrs	r2, r0, #21
 8012d88:	0112      	lsls	r2, r2, #4
 8012d8a:	4094      	lsls	r4, r2
 8012d8c:	4323      	orrs	r3, r4
 8012d8e:	4a0b      	ldr	r2, [pc, #44]	; (8012dbc <gpio_pin_remap_config+0x5c>)
 8012d90:	2800      	cmp	r0, #0
 8012d92:	bfb4      	ite	lt
 8012d94:	61d3      	strlt	r3, [r2, #28]
 8012d96:	6053      	strge	r3, [r2, #4]
 8012d98:	bd30      	pop	{r4, r5, pc}
 8012d9a:	02c2      	lsls	r2, r0, #11
 8012d9c:	bf4d      	iteet	mi
 8012d9e:	2203      	movmi	r2, #3
 8012da0:	0d42      	lsrpl	r2, r0, #21
 8012da2:	0112      	lslpl	r2, r2, #4
 8012da4:	f3c0 4503 	ubfxmi	r5, r0, #16, #4
 8012da8:	bf4c      	ite	mi
 8012daa:	40aa      	lslmi	r2, r5
 8012dac:	fa04 f202 	lslpl.w	r2, r4, r2
 8012db0:	ea23 0302 	bic.w	r3, r3, r2
 8012db4:	f043 6370 	orr.w	r3, r3, #251658240	; 0xf000000
 8012db8:	e7e4      	b.n	8012d84 <gpio_pin_remap_config+0x24>
 8012dba:	bf00      	nop
 8012dbc:	40010000 	andmi	r0, r1, r0

08012dc0 <gpio_ethernet_phy_select>:
 8012dc0:	4b04      	ldr	r3, [pc, #16]	; (8012dd4 <gpio_ethernet_phy_select+0x14>)
 8012dc2:	685a      	ldr	r2, [r3, #4]
 8012dc4:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8012dc8:	605a      	str	r2, [r3, #4]
 8012dca:	685a      	ldr	r2, [r3, #4]
 8012dcc:	4302      	orrs	r2, r0
 8012dce:	605a      	str	r2, [r3, #4]
 8012dd0:	4770      	bx	lr
 8012dd2:	bf00      	nop
 8012dd4:	40010000 	andmi	r0, r1, r0

08012dd8 <pmu_backup_write_enable>:
 8012dd8:	4a02      	ldr	r2, [pc, #8]	; (8012de4 <pmu_backup_write_enable+0xc>)
 8012dda:	6813      	ldr	r3, [r2, #0]
 8012ddc:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8012de0:	6013      	str	r3, [r2, #0]
 8012de2:	4770      	bx	lr
 8012de4:	40007000 	andmi	r7, r0, r0

08012de8 <rcu_periph_clock_enable>:
 8012de8:	2201      	movs	r2, #1
 8012dea:	0983      	lsrs	r3, r0, #6
 8012dec:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8012df0:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 8012df4:	6819      	ldr	r1, [r3, #0]
 8012df6:	f000 001f 	and.w	r0, r0, #31
 8012dfa:	4082      	lsls	r2, r0
 8012dfc:	430a      	orrs	r2, r1
 8012dfe:	601a      	str	r2, [r3, #0]
 8012e00:	4770      	bx	lr

08012e02 <rcu_periph_clock_disable>:
 8012e02:	2101      	movs	r1, #1
 8012e04:	0983      	lsrs	r3, r0, #6
 8012e06:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8012e0a:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 8012e0e:	681a      	ldr	r2, [r3, #0]
 8012e10:	f000 001f 	and.w	r0, r0, #31
 8012e14:	4081      	lsls	r1, r0
 8012e16:	ea22 0201 	bic.w	r2, r2, r1
 8012e1a:	601a      	str	r2, [r3, #0]
 8012e1c:	4770      	bx	lr

08012e1e <rcu_periph_reset_enable>:
 8012e1e:	f7ff bfe3 	b.w	8012de8 <rcu_periph_clock_enable>

08012e22 <rcu_periph_reset_disable>:
 8012e22:	f7ff bfee 	b.w	8012e02 <rcu_periph_clock_disable>
	...

08012e28 <rcu_ckout0_config>:
 8012e28:	4a06      	ldr	r2, [pc, #24]	; (8012e44 <rcu_ckout0_config+0x1c>)
 8012e2a:	6853      	ldr	r3, [r2, #4]
 8012e2c:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 8012e30:	4303      	orrs	r3, r0
 8012e32:	6053      	str	r3, [r2, #4]
 8012e34:	f8d2 3080 	ldr.w	r3, [r2, #128]	; 0x80
 8012e38:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8012e3c:	430b      	orrs	r3, r1
 8012e3e:	f8c2 3080 	str.w	r3, [r2, #128]	; 0x80
 8012e42:	4770      	bx	lr
 8012e44:	40021000 	andmi	r1, r2, r0

08012e48 <rcu_pll2_config>:
 8012e48:	4b04      	ldr	r3, [pc, #16]	; (8012e5c <rcu_pll2_config+0x14>)
 8012e4a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8012e4c:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
 8012e50:	62da      	str	r2, [r3, #44]	; 0x2c
 8012e52:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8012e54:	4302      	orrs	r2, r0
 8012e56:	62da      	str	r2, [r3, #44]	; 0x2c
 8012e58:	4770      	bx	lr
 8012e5a:	bf00      	nop
 8012e5c:	40021000 	andmi	r1, r2, r0

08012e60 <rcu_adc_clock_config>:
 8012e60:	490c      	ldr	r1, [pc, #48]	; (8012e94 <rcu_adc_clock_config+0x34>)
 8012e62:	2805      	cmp	r0, #5
 8012e64:	684b      	ldr	r3, [r1, #4]
 8012e66:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8012e6a:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 8012e6e:	d006      	beq.n	8012e7e <rcu_adc_clock_config+0x1e>
 8012e70:	d803      	bhi.n	8012e7a <rcu_adc_clock_config+0x1a>
 8012e72:	2804      	cmp	r0, #4
 8012e74:	d10a      	bne.n	8012e8c <rcu_adc_clock_config+0x2c>
 8012e76:	604b      	str	r3, [r1, #4]
 8012e78:	4770      	bx	lr
 8012e7a:	2807      	cmp	r0, #7
 8012e7c:	d1fb      	bne.n	8012e76 <rcu_adc_clock_config+0x16>
 8012e7e:	4a06      	ldr	r2, [pc, #24]	; (8012e98 <rcu_adc_clock_config+0x38>)
 8012e80:	ea02 3280 	and.w	r2, r2, r0, lsl #14
 8012e84:	4313      	orrs	r3, r2
 8012e86:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8012e8a:	e7f4      	b.n	8012e76 <rcu_adc_clock_config+0x16>
 8012e8c:	ea43 3380 	orr.w	r3, r3, r0, lsl #14
 8012e90:	e7f1      	b.n	8012e76 <rcu_adc_clock_config+0x16>
 8012e92:	bf00      	nop
 8012e94:	40021000 	andmi	r1, r2, r0
 8012e98:	fffec000 			; <UNDEFINED> instruction: 0xfffec000

08012e9c <rcu_flag_get>:
 8012e9c:	0983      	lsrs	r3, r0, #6
 8012e9e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8012ea2:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 8012ea6:	681a      	ldr	r2, [r3, #0]
 8012ea8:	2301      	movs	r3, #1
 8012eaa:	f000 001f 	and.w	r0, r0, #31
 8012eae:	4083      	lsls	r3, r0
 8012eb0:	4213      	tst	r3, r2
 8012eb2:	bf14      	ite	ne
 8012eb4:	2001      	movne	r0, #1
 8012eb6:	2000      	moveq	r0, #0
 8012eb8:	4770      	bx	lr
	...

08012ebc <rcu_osci_stab_wait>:
 8012ebc:	281c      	cmp	r0, #28
 8012ebe:	b508      	push	{r3, lr}
 8012ec0:	d056      	beq.n	8012f70 <rcu_osci_stab_wait+0xb4>
 8012ec2:	d812      	bhi.n	8012eea <rcu_osci_stab_wait+0x2e>
 8012ec4:	2818      	cmp	r0, #24
 8012ec6:	d04a      	beq.n	8012f5e <rcu_osci_stab_wait+0xa2>
 8012ec8:	d804      	bhi.n	8012ed4 <rcu_osci_stab_wait+0x18>
 8012eca:	b398      	cbz	r0, 8012f34 <rcu_osci_stab_wait+0x78>
 8012ecc:	2810      	cmp	r0, #16
 8012ece:	d022      	beq.n	8012f16 <rcu_osci_stab_wait+0x5a>
 8012ed0:	2000      	movs	r0, #0
 8012ed2:	bd08      	pop	{r3, pc}
 8012ed4:	281a      	cmp	r0, #26
 8012ed6:	d1fb      	bne.n	8012ed0 <rcu_osci_stab_wait+0x14>
 8012ed8:	492f      	ldr	r1, [pc, #188]	; (8012f98 <rcu_osci_stab_wait+0xdc>)
 8012eda:	201b      	movs	r0, #27
 8012edc:	f7ff ffde 	bl	8012e9c <rcu_flag_get>
 8012ee0:	b908      	cbnz	r0, 8012ee6 <rcu_osci_stab_wait+0x2a>
 8012ee2:	3901      	subs	r1, #1
 8012ee4:	d1f9      	bne.n	8012eda <rcu_osci_stab_wait+0x1e>
 8012ee6:	201b      	movs	r0, #27
 8012ee8:	e01e      	b.n	8012f28 <rcu_osci_stab_wait+0x6c>
 8012eea:	f5b0 6f10 	cmp.w	r0, #2304	; 0x900
 8012eee:	d02b      	beq.n	8012f48 <rcu_osci_stab_wait+0x8c>
 8012ef0:	f242 431c 	movw	r3, #9244	; 0x241c
 8012ef4:	4298      	cmp	r0, r3
 8012ef6:	d044      	beq.n	8012f82 <rcu_osci_stab_wait+0xc6>
 8012ef8:	f5b0 6f00 	cmp.w	r0, #2048	; 0x800
 8012efc:	d1e8      	bne.n	8012ed0 <rcu_osci_stab_wait+0x14>
 8012efe:	f06f 417c 	mvn.w	r1, #4227858432	; 0xfc000000
 8012f02:	f640 0001 	movw	r0, #2049	; 0x801
 8012f06:	f7ff ffc9 	bl	8012e9c <rcu_flag_get>
 8012f0a:	b908      	cbnz	r0, 8012f10 <rcu_osci_stab_wait+0x54>
 8012f0c:	3901      	subs	r1, #1
 8012f0e:	d1f8      	bne.n	8012f02 <rcu_osci_stab_wait+0x46>
 8012f10:	f640 0001 	movw	r0, #2049	; 0x801
 8012f14:	e008      	b.n	8012f28 <rcu_osci_stab_wait+0x6c>
 8012f16:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8012f1a:	2011      	movs	r0, #17
 8012f1c:	f7ff ffbe 	bl	8012e9c <rcu_flag_get>
 8012f20:	b908      	cbnz	r0, 8012f26 <rcu_osci_stab_wait+0x6a>
 8012f22:	3901      	subs	r1, #1
 8012f24:	d1f9      	bne.n	8012f1a <rcu_osci_stab_wait+0x5e>
 8012f26:	2011      	movs	r0, #17
 8012f28:	f7ff ffb8 	bl	8012e9c <rcu_flag_get>
 8012f2c:	3800      	subs	r0, #0
 8012f2e:	bf18      	it	ne
 8012f30:	2001      	movne	r0, #1
 8012f32:	e7ce      	b.n	8012ed2 <rcu_osci_stab_wait+0x16>
 8012f34:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8012f38:	2001      	movs	r0, #1
 8012f3a:	f7ff ffaf 	bl	8012e9c <rcu_flag_get>
 8012f3e:	b908      	cbnz	r0, 8012f44 <rcu_osci_stab_wait+0x88>
 8012f40:	3901      	subs	r1, #1
 8012f42:	d1f9      	bne.n	8012f38 <rcu_osci_stab_wait+0x7c>
 8012f44:	2001      	movs	r0, #1
 8012f46:	e7ef      	b.n	8012f28 <rcu_osci_stab_wait+0x6c>
 8012f48:	4913      	ldr	r1, [pc, #76]	; (8012f98 <rcu_osci_stab_wait+0xdc>)
 8012f4a:	f640 1001 	movw	r0, #2305	; 0x901
 8012f4e:	f7ff ffa5 	bl	8012e9c <rcu_flag_get>
 8012f52:	b908      	cbnz	r0, 8012f58 <rcu_osci_stab_wait+0x9c>
 8012f54:	3901      	subs	r1, #1
 8012f56:	d1f8      	bne.n	8012f4a <rcu_osci_stab_wait+0x8e>
 8012f58:	f640 1001 	movw	r0, #2305	; 0x901
 8012f5c:	e7e4      	b.n	8012f28 <rcu_osci_stab_wait+0x6c>
 8012f5e:	490e      	ldr	r1, [pc, #56]	; (8012f98 <rcu_osci_stab_wait+0xdc>)
 8012f60:	2019      	movs	r0, #25
 8012f62:	f7ff ff9b 	bl	8012e9c <rcu_flag_get>
 8012f66:	b908      	cbnz	r0, 8012f6c <rcu_osci_stab_wait+0xb0>
 8012f68:	3901      	subs	r1, #1
 8012f6a:	d1f9      	bne.n	8012f60 <rcu_osci_stab_wait+0xa4>
 8012f6c:	2019      	movs	r0, #25
 8012f6e:	e7db      	b.n	8012f28 <rcu_osci_stab_wait+0x6c>
 8012f70:	4909      	ldr	r1, [pc, #36]	; (8012f98 <rcu_osci_stab_wait+0xdc>)
 8012f72:	201d      	movs	r0, #29
 8012f74:	f7ff ff92 	bl	8012e9c <rcu_flag_get>
 8012f78:	b908      	cbnz	r0, 8012f7e <rcu_osci_stab_wait+0xc2>
 8012f7a:	3901      	subs	r1, #1
 8012f7c:	d1f9      	bne.n	8012f72 <rcu_osci_stab_wait+0xb6>
 8012f7e:	201d      	movs	r0, #29
 8012f80:	e7d2      	b.n	8012f28 <rcu_osci_stab_wait+0x6c>
 8012f82:	4905      	ldr	r1, [pc, #20]	; (8012f98 <rcu_osci_stab_wait+0xdc>)
 8012f84:	f242 401d 	movw	r0, #9245	; 0x241d
 8012f88:	f7ff ff88 	bl	8012e9c <rcu_flag_get>
 8012f8c:	b908      	cbnz	r0, 8012f92 <rcu_osci_stab_wait+0xd6>
 8012f8e:	3901      	subs	r1, #1
 8012f90:	d1f8      	bne.n	8012f84 <rcu_osci_stab_wait+0xc8>
 8012f92:	f242 401d 	movw	r0, #9245	; 0x241d
 8012f96:	e7c7      	b.n	8012f28 <rcu_osci_stab_wait+0x6c>
 8012f98:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

08012f9c <rcu_osci_on>:
 8012f9c:	f7ff bf24 	b.w	8012de8 <rcu_periph_clock_enable>

08012fa0 <rcu_clock_freq_get>:
 8012fa0:	4b3e      	ldr	r3, [pc, #248]	; (801309c <rcu_clock_freq_get+0xfc>)
 8012fa2:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012fa4:	4604      	mov	r4, r0
 8012fa6:	461f      	mov	r7, r3
 8012fa8:	b089      	sub	sp, #36	; 0x24
 8012faa:	ad04      	add	r5, sp, #16
 8012fac:	f103 0610 	add.w	r6, r3, #16
 8012fb0:	462a      	mov	r2, r5
 8012fb2:	6818      	ldr	r0, [r3, #0]
 8012fb4:	6859      	ldr	r1, [r3, #4]
 8012fb6:	3308      	adds	r3, #8
 8012fb8:	c203      	stmia	r2!, {r0, r1}
 8012fba:	42b3      	cmp	r3, r6
 8012fbc:	4615      	mov	r5, r2
 8012fbe:	d1f7      	bne.n	8012fb0 <rcu_clock_freq_get+0x10>
 8012fc0:	466b      	mov	r3, sp
 8012fc2:	6938      	ldr	r0, [r7, #16]
 8012fc4:	6871      	ldr	r1, [r6, #4]
 8012fc6:	4a36      	ldr	r2, [pc, #216]	; (80130a0 <rcu_clock_freq_get+0x100>)
 8012fc8:	c303      	stmia	r3!, {r0, r1}
 8012fca:	c303      	stmia	r3!, {r0, r1}
 8012fcc:	6853      	ldr	r3, [r2, #4]
 8012fce:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8012fd2:	2b01      	cmp	r3, #1
 8012fd4:	d053      	beq.n	801307e <rcu_clock_freq_get+0xde>
 8012fd6:	2b02      	cmp	r3, #2
 8012fd8:	d153      	bne.n	8013082 <rcu_clock_freq_get+0xe2>
 8012fda:	6853      	ldr	r3, [r2, #4]
 8012fdc:	03dd      	lsls	r5, r3, #15
 8012fde:	d523      	bpl.n	8013028 <rcu_clock_freq_get+0x88>
 8012fe0:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8012fe2:	f413 3f80 	tst.w	r3, #65536	; 0x10000
 8012fe6:	4b2f      	ldr	r3, [pc, #188]	; (80130a4 <rcu_clock_freq_get+0x104>)
 8012fe8:	d00e      	beq.n	8013008 <rcu_clock_freq_get+0x68>
 8012fea:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 8012fec:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
 8012fee:	f3c1 1103 	ubfx	r1, r1, #4, #4
 8012ff2:	f3c0 2003 	ubfx	r0, r0, #8, #4
 8012ff6:	3101      	adds	r1, #1
 8012ff8:	280f      	cmp	r0, #15
 8012ffa:	f100 0502 	add.w	r5, r0, #2
 8012ffe:	fbb3 f3f1 	udiv	r3, r3, r1
 8013002:	bf08      	it	eq
 8013004:	2514      	moveq	r5, #20
 8013006:	436b      	muls	r3, r5
 8013008:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 801300a:	f001 010f 	and.w	r1, r1, #15
 801300e:	3101      	adds	r1, #1
 8013010:	fbb3 f3f1 	udiv	r3, r3, r1
 8013014:	6851      	ldr	r1, [r2, #4]
 8013016:	6850      	ldr	r0, [r2, #4]
 8013018:	f3c1 4183 	ubfx	r1, r1, #18, #4
 801301c:	0080      	lsls	r0, r0, #2
 801301e:	d505      	bpl.n	801302c <rcu_clock_freq_get+0x8c>
 8013020:	f041 0110 	orr.w	r1, r1, #16
 8013024:	3101      	adds	r1, #1
 8013026:	e027      	b.n	8013078 <rcu_clock_freq_get+0xd8>
 8013028:	4b1f      	ldr	r3, [pc, #124]	; (80130a8 <rcu_clock_freq_get+0x108>)
 801302a:	e7f3      	b.n	8013014 <rcu_clock_freq_get+0x74>
 801302c:	290d      	cmp	r1, #13
 801302e:	d120      	bne.n	8013072 <rcu_clock_freq_get+0xd2>
 8013030:	2006      	movs	r0, #6
 8013032:	0859      	lsrs	r1, r3, #1
 8013034:	fb00 1003 	mla	r0, r0, r3, r1
 8013038:	6853      	ldr	r3, [r2, #4]
 801303a:	6851      	ldr	r1, [r2, #4]
 801303c:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8013040:	6852      	ldr	r2, [r2, #4]
 8013042:	3320      	adds	r3, #32
 8013044:	446b      	add	r3, sp
 8013046:	f3c1 2102 	ubfx	r1, r1, #8, #3
 801304a:	f3c2 22c2 	ubfx	r2, r2, #11, #3
 801304e:	f813 3c10 	ldrb.w	r3, [r3, #-16]
 8013052:	3120      	adds	r1, #32
 8013054:	3220      	adds	r2, #32
 8013056:	4469      	add	r1, sp
 8013058:	446a      	add	r2, sp
 801305a:	f811 1c20 	ldrb.w	r1, [r1, #-32]
 801305e:	f812 2c18 	ldrb.w	r2, [r2, #-24]
 8013062:	fa20 f303 	lsr.w	r3, r0, r3
 8013066:	2c03      	cmp	r4, #3
 8013068:	d816      	bhi.n	8013098 <rcu_clock_freq_get+0xf8>
 801306a:	e8df f004 	tbb	[pc, r4]
 801306e:	120f0c0d 	andne	r0, pc, #3328	; 0xd00
 8013072:	290f      	cmp	r1, #15
 8013074:	d0d6      	beq.n	8013024 <rcu_clock_freq_get+0x84>
 8013076:	3102      	adds	r1, #2
 8013078:	fb03 f001 	mul.w	r0, r3, r1
 801307c:	e7dc      	b.n	8013038 <rcu_clock_freq_get+0x98>
 801307e:	4809      	ldr	r0, [pc, #36]	; (80130a4 <rcu_clock_freq_get+0x104>)
 8013080:	e7da      	b.n	8013038 <rcu_clock_freq_get+0x98>
 8013082:	480a      	ldr	r0, [pc, #40]	; (80130ac <rcu_clock_freq_get+0x10c>)
 8013084:	e7d8      	b.n	8013038 <rcu_clock_freq_get+0x98>
 8013086:	4618      	mov	r0, r3
 8013088:	b009      	add	sp, #36	; 0x24
 801308a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801308c:	fa23 f001 	lsr.w	r0, r3, r1
 8013090:	e7fa      	b.n	8013088 <rcu_clock_freq_get+0xe8>
 8013092:	fa23 f002 	lsr.w	r0, r3, r2
 8013096:	e7f7      	b.n	8013088 <rcu_clock_freq_get+0xe8>
 8013098:	2000      	movs	r0, #0
 801309a:	e7f5      	b.n	8013088 <rcu_clock_freq_get+0xe8>
 801309c:	0801487c 	stmdaeq	r1, {r2, r3, r4, r5, r6, fp, lr}
 80130a0:	40021000 	andmi	r1, r2, r0
 80130a4:	017d7840 	cmneq	sp, r0, asr #16
 80130a8:	003d0900 	eorseq	r0, sp, r0, lsl #18
 80130ac:	007a1200 	rsbseq	r1, sl, r0, lsl #4

080130b0 <timer_deinit>:
 80130b0:	b508      	push	{r3, lr}
 80130b2:	4b4e      	ldr	r3, [pc, #312]	; (80131ec <timer_deinit+0x13c>)
 80130b4:	4298      	cmp	r0, r3
 80130b6:	f000 8092 	beq.w	80131de <timer_deinit+0x12e>
 80130ba:	d822      	bhi.n	8013102 <timer_deinit+0x52>
 80130bc:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
 80130c0:	4298      	cmp	r0, r3
 80130c2:	d062      	beq.n	801318a <timer_deinit+0xda>
 80130c4:	d80b      	bhi.n	80130de <timer_deinit+0x2e>
 80130c6:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 80130ca:	4298      	cmp	r0, r3
 80130cc:	d04f      	beq.n	801316e <timer_deinit+0xbe>
 80130ce:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80130d2:	4298      	cmp	r0, r3
 80130d4:	d052      	beq.n	801317c <timer_deinit+0xcc>
 80130d6:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80130da:	d041      	beq.n	8013160 <timer_deinit+0xb0>
 80130dc:	bd08      	pop	{r3, pc}
 80130de:	4b44      	ldr	r3, [pc, #272]	; (80131f0 <timer_deinit+0x140>)
 80130e0:	4298      	cmp	r0, r3
 80130e2:	d059      	beq.n	8013198 <timer_deinit+0xe8>
 80130e4:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80130e8:	4298      	cmp	r0, r3
 80130ea:	d071      	beq.n	80131d0 <timer_deinit+0x120>
 80130ec:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 80130f0:	4298      	cmp	r0, r3
 80130f2:	d1f3      	bne.n	80130dc <timer_deinit+0x2c>
 80130f4:	f240 4004 	movw	r0, #1028	; 0x404
 80130f8:	f7ff fe91 	bl	8012e1e <rcu_periph_reset_enable>
 80130fc:	f240 4004 	movw	r0, #1028	; 0x404
 8013100:	e02a      	b.n	8013158 <timer_deinit+0xa8>
 8013102:	4b3c      	ldr	r3, [pc, #240]	; (80131f4 <timer_deinit+0x144>)
 8013104:	4298      	cmp	r0, r3
 8013106:	d055      	beq.n	80131b4 <timer_deinit+0x104>
 8013108:	d812      	bhi.n	8013130 <timer_deinit+0x80>
 801310a:	f5a3 5300 	sub.w	r3, r3, #8192	; 0x2000
 801310e:	4298      	cmp	r0, r3
 8013110:	d01c      	beq.n	801314c <timer_deinit+0x9c>
 8013112:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8013116:	4298      	cmp	r0, r3
 8013118:	d045      	beq.n	80131a6 <timer_deinit+0xf6>
 801311a:	f5a3 338a 	sub.w	r3, r3, #70656	; 0x11400
 801311e:	4298      	cmp	r0, r3
 8013120:	d1dc      	bne.n	80130dc <timer_deinit+0x2c>
 8013122:	f44f 6081 	mov.w	r0, #1032	; 0x408
 8013126:	f7ff fe7a 	bl	8012e1e <rcu_periph_reset_enable>
 801312a:	f44f 6081 	mov.w	r0, #1032	; 0x408
 801312e:	e013      	b.n	8013158 <timer_deinit+0xa8>
 8013130:	4b31      	ldr	r3, [pc, #196]	; (80131f8 <timer_deinit+0x148>)
 8013132:	4298      	cmp	r0, r3
 8013134:	d045      	beq.n	80131c2 <timer_deinit+0x112>
 8013136:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 801313a:	4298      	cmp	r0, r3
 801313c:	d1ce      	bne.n	80130dc <timer_deinit+0x2c>
 801313e:	f240 3015 	movw	r0, #789	; 0x315
 8013142:	f7ff fe6c 	bl	8012e1e <rcu_periph_reset_enable>
 8013146:	f240 3015 	movw	r0, #789	; 0x315
 801314a:	e005      	b.n	8013158 <timer_deinit+0xa8>
 801314c:	f240 300b 	movw	r0, #779	; 0x30b
 8013150:	f7ff fe65 	bl	8012e1e <rcu_periph_reset_enable>
 8013154:	f240 300b 	movw	r0, #779	; 0x30b
 8013158:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801315c:	f7ff be61 	b.w	8012e22 <rcu_periph_reset_disable>
 8013160:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8013164:	f7ff fe5b 	bl	8012e1e <rcu_periph_reset_enable>
 8013168:	f44f 6080 	mov.w	r0, #1024	; 0x400
 801316c:	e7f4      	b.n	8013158 <timer_deinit+0xa8>
 801316e:	f240 4001 	movw	r0, #1025	; 0x401
 8013172:	f7ff fe54 	bl	8012e1e <rcu_periph_reset_enable>
 8013176:	f240 4001 	movw	r0, #1025	; 0x401
 801317a:	e7ed      	b.n	8013158 <timer_deinit+0xa8>
 801317c:	f240 4002 	movw	r0, #1026	; 0x402
 8013180:	f7ff fe4d 	bl	8012e1e <rcu_periph_reset_enable>
 8013184:	f240 4002 	movw	r0, #1026	; 0x402
 8013188:	e7e6      	b.n	8013158 <timer_deinit+0xa8>
 801318a:	f240 4003 	movw	r0, #1027	; 0x403
 801318e:	f7ff fe46 	bl	8012e1e <rcu_periph_reset_enable>
 8013192:	f240 4003 	movw	r0, #1027	; 0x403
 8013196:	e7df      	b.n	8013158 <timer_deinit+0xa8>
 8013198:	f240 4005 	movw	r0, #1029	; 0x405
 801319c:	f7ff fe3f 	bl	8012e1e <rcu_periph_reset_enable>
 80131a0:	f240 4005 	movw	r0, #1029	; 0x405
 80131a4:	e7d8      	b.n	8013158 <timer_deinit+0xa8>
 80131a6:	f240 300d 	movw	r0, #781	; 0x30d
 80131aa:	f7ff fe38 	bl	8012e1e <rcu_periph_reset_enable>
 80131ae:	f240 300d 	movw	r0, #781	; 0x30d
 80131b2:	e7d1      	b.n	8013158 <timer_deinit+0xa8>
 80131b4:	f240 3013 	movw	r0, #787	; 0x313
 80131b8:	f7ff fe31 	bl	8012e1e <rcu_periph_reset_enable>
 80131bc:	f240 3013 	movw	r0, #787	; 0x313
 80131c0:	e7ca      	b.n	8013158 <timer_deinit+0xa8>
 80131c2:	f44f 7045 	mov.w	r0, #788	; 0x314
 80131c6:	f7ff fe2a 	bl	8012e1e <rcu_periph_reset_enable>
 80131ca:	f44f 7045 	mov.w	r0, #788	; 0x314
 80131ce:	e7c3      	b.n	8013158 <timer_deinit+0xa8>
 80131d0:	f240 4006 	movw	r0, #1030	; 0x406
 80131d4:	f7ff fe23 	bl	8012e1e <rcu_periph_reset_enable>
 80131d8:	f240 4006 	movw	r0, #1030	; 0x406
 80131dc:	e7bc      	b.n	8013158 <timer_deinit+0xa8>
 80131de:	f240 4007 	movw	r0, #1031	; 0x407
 80131e2:	f7ff fe1c 	bl	8012e1e <rcu_periph_reset_enable>
 80131e6:	f240 4007 	movw	r0, #1031	; 0x407
 80131ea:	e7b5      	b.n	8013158 <timer_deinit+0xa8>
 80131ec:	40001c00 	andmi	r1, r0, r0, lsl #24
 80131f0:	40001400 	andmi	r1, r0, r0, lsl #8
 80131f4:	40014c00 	andmi	r4, r1, r0, lsl #24
 80131f8:	40015000 	andmi	r5, r1, r0

080131fc <timer_init>:
 80131fc:	880b      	ldrh	r3, [r1, #0]
 80131fe:	6283      	str	r3, [r0, #40]	; 0x28
 8013200:	4b26      	ldr	r3, [pc, #152]	; (801329c <timer_init+0xa0>)
 8013202:	4298      	cmp	r0, r3
 8013204:	d018      	beq.n	8013238 <timer_init+0x3c>
 8013206:	f420 6240 	bic.w	r2, r0, #3072	; 0xc00
 801320a:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 801320e:	f420 6380 	bic.w	r3, r0, #1024	; 0x400
 8013212:	d011      	beq.n	8013238 <timer_init+0x3c>
 8013214:	4a22      	ldr	r2, [pc, #136]	; (80132a0 <timer_init+0xa4>)
 8013216:	4290      	cmp	r0, r2
 8013218:	d00e      	beq.n	8013238 <timer_init+0x3c>
 801321a:	f502 52c0 	add.w	r2, r2, #6144	; 0x1800
 801321e:	4290      	cmp	r0, r2
 8013220:	d00a      	beq.n	8013238 <timer_init+0x3c>
 8013222:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8013226:	4293      	cmp	r3, r2
 8013228:	d006      	beq.n	8013238 <timer_init+0x3c>
 801322a:	f5a2 329c 	sub.w	r2, r2, #79872	; 0x13800
 801322e:	4293      	cmp	r3, r2
 8013230:	d002      	beq.n	8013238 <timer_init+0x3c>
 8013232:	4b1c      	ldr	r3, [pc, #112]	; (80132a4 <timer_init+0xa8>)
 8013234:	4298      	cmp	r0, r3
 8013236:	d10f      	bne.n	8013258 <timer_init+0x5c>
 8013238:	6803      	ldr	r3, [r0, #0]
 801323a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 801323e:	6003      	str	r3, [r0, #0]
 8013240:	884b      	ldrh	r3, [r1, #2]
 8013242:	6802      	ldr	r2, [r0, #0]
 8013244:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8013248:	4313      	orrs	r3, r2
 801324a:	6003      	str	r3, [r0, #0]
 801324c:	888b      	ldrh	r3, [r1, #4]
 801324e:	6802      	ldr	r2, [r0, #0]
 8013250:	f003 0310 	and.w	r3, r3, #16
 8013254:	4313      	orrs	r3, r2
 8013256:	6003      	str	r3, [r0, #0]
 8013258:	688b      	ldr	r3, [r1, #8]
 801325a:	62c3      	str	r3, [r0, #44]	; 0x2c
 801325c:	4b12      	ldr	r3, [pc, #72]	; (80132a8 <timer_init+0xac>)
 801325e:	4298      	cmp	r0, r3
 8013260:	d003      	beq.n	801326a <timer_init+0x6e>
 8013262:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8013266:	4298      	cmp	r0, r3
 8013268:	d104      	bne.n	8013274 <timer_init+0x78>
 801326a:	6943      	ldr	r3, [r0, #20]
 801326c:	f043 0301 	orr.w	r3, r3, #1
 8013270:	6143      	str	r3, [r0, #20]
 8013272:	4770      	bx	lr
 8013274:	6803      	ldr	r3, [r0, #0]
 8013276:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 801327a:	6003      	str	r3, [r0, #0]
 801327c:	898b      	ldrh	r3, [r1, #12]
 801327e:	6802      	ldr	r2, [r0, #0]
 8013280:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8013284:	4313      	orrs	r3, r2
 8013286:	6003      	str	r3, [r0, #0]
 8013288:	4b04      	ldr	r3, [pc, #16]	; (801329c <timer_init+0xa0>)
 801328a:	4298      	cmp	r0, r3
 801328c:	d002      	beq.n	8013294 <timer_init+0x98>
 801328e:	4b04      	ldr	r3, [pc, #16]	; (80132a0 <timer_init+0xa4>)
 8013290:	4298      	cmp	r0, r3
 8013292:	d1ea      	bne.n	801326a <timer_init+0x6e>
 8013294:	7b8b      	ldrb	r3, [r1, #14]
 8013296:	6303      	str	r3, [r0, #48]	; 0x30
 8013298:	e7e7      	b.n	801326a <timer_init+0x6e>
 801329a:	bf00      	nop
 801329c:	40012c00 	andmi	r2, r1, r0, lsl #24
 80132a0:	40013400 	andmi	r3, r1, r0, lsl #8
 80132a4:	40002000 	andmi	r2, r0, r0
 80132a8:	40001000 	andmi	r1, r0, r0

080132ac <timer_enable>:
 80132ac:	6803      	ldr	r3, [r0, #0]
 80132ae:	f043 0301 	orr.w	r3, r3, #1
 80132b2:	6003      	str	r3, [r0, #0]
 80132b4:	4770      	bx	lr

080132b6 <timer_channel_output_mode_config>:
 80132b6:	2903      	cmp	r1, #3
 80132b8:	d81a      	bhi.n	80132f0 <timer_channel_output_mode_config+0x3a>
 80132ba:	e8df f001 	tbb	[pc, r1]
 80132be:	1a120a02 	bne	8495ace <__exidx_end+0x47ee4e>
 80132c2:	6983      	ldr	r3, [r0, #24]
 80132c4:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80132c8:	6183      	str	r3, [r0, #24]
 80132ca:	6983      	ldr	r3, [r0, #24]
 80132cc:	4313      	orrs	r3, r2
 80132ce:	6183      	str	r3, [r0, #24]
 80132d0:	4770      	bx	lr
 80132d2:	6983      	ldr	r3, [r0, #24]
 80132d4:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80132d8:	6183      	str	r3, [r0, #24]
 80132da:	6983      	ldr	r3, [r0, #24]
 80132dc:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80132e0:	e7f5      	b.n	80132ce <timer_channel_output_mode_config+0x18>
 80132e2:	69c3      	ldr	r3, [r0, #28]
 80132e4:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80132e8:	61c3      	str	r3, [r0, #28]
 80132ea:	69c3      	ldr	r3, [r0, #28]
 80132ec:	4313      	orrs	r3, r2
 80132ee:	61c3      	str	r3, [r0, #28]
 80132f0:	4770      	bx	lr
 80132f2:	69c3      	ldr	r3, [r0, #28]
 80132f4:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80132f8:	61c3      	str	r3, [r0, #28]
 80132fa:	69c3      	ldr	r3, [r0, #28]
 80132fc:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8013300:	e7f5      	b.n	80132ee <timer_channel_output_mode_config+0x38>

08013302 <timer_channel_output_pulse_value_config>:
 8013302:	2903      	cmp	r1, #3
 8013304:	d80a      	bhi.n	801331c <timer_channel_output_pulse_value_config+0x1a>
 8013306:	e8df f001 	tbb	[pc, r1]
 801330a:	08060402 	stmdaeq	r6, {r1, sl}
 801330e:	6342      	str	r2, [r0, #52]	; 0x34
 8013310:	4770      	bx	lr
 8013312:	6382      	str	r2, [r0, #56]	; 0x38
 8013314:	4770      	bx	lr
 8013316:	63c2      	str	r2, [r0, #60]	; 0x3c
 8013318:	4770      	bx	lr
 801331a:	6402      	str	r2, [r0, #64]	; 0x40
 801331c:	4770      	bx	lr

0801331e <timer_input_trigger_source_select>:
 801331e:	6883      	ldr	r3, [r0, #8]
 8013320:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8013324:	6083      	str	r3, [r0, #8]
 8013326:	6883      	ldr	r3, [r0, #8]
 8013328:	430b      	orrs	r3, r1
 801332a:	6083      	str	r3, [r0, #8]
 801332c:	4770      	bx	lr

0801332e <timer_master_output_trigger_source_select>:
 801332e:	6843      	ldr	r3, [r0, #4]
 8013330:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8013334:	6043      	str	r3, [r0, #4]
 8013336:	6843      	ldr	r3, [r0, #4]
 8013338:	430b      	orrs	r3, r1
 801333a:	6043      	str	r3, [r0, #4]
 801333c:	4770      	bx	lr

0801333e <timer_slave_mode_select>:
 801333e:	6883      	ldr	r3, [r0, #8]
 8013340:	f023 0307 	bic.w	r3, r3, #7
 8013344:	6083      	str	r3, [r0, #8]
 8013346:	6883      	ldr	r3, [r0, #8]
 8013348:	430b      	orrs	r3, r1
 801334a:	6083      	str	r3, [r0, #8]
 801334c:	4770      	bx	lr

0801334e <timer_master_slave_mode_config>:
 801334e:	2980      	cmp	r1, #128	; 0x80
 8013350:	d104      	bne.n	801335c <timer_master_slave_mode_config+0xe>
 8013352:	6883      	ldr	r3, [r0, #8]
 8013354:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8013358:	6083      	str	r3, [r0, #8]
 801335a:	4770      	bx	lr
 801335c:	2900      	cmp	r1, #0
 801335e:	d1fc      	bne.n	801335a <timer_master_slave_mode_config+0xc>
 8013360:	6883      	ldr	r3, [r0, #8]
 8013362:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8013366:	e7f7      	b.n	8013358 <timer_master_slave_mode_config+0xa>

08013368 <timer_interrupt_enable>:
 8013368:	68c3      	ldr	r3, [r0, #12]
 801336a:	430b      	orrs	r3, r1
 801336c:	60c3      	str	r3, [r0, #12]
 801336e:	4770      	bx	lr

08013370 <timer_interrupt_flag_clear>:
 8013370:	43c9      	mvns	r1, r1
 8013372:	6101      	str	r1, [r0, #16]
 8013374:	4770      	bx	lr

08013376 <timer_flag_clear>:
 8013376:	43c9      	mvns	r1, r1
 8013378:	6101      	str	r1, [r0, #16]
 801337a:	4770      	bx	lr

0801337c <usart_deinit>:
 801337c:	b508      	push	{r3, lr}
 801337e:	4b2d      	ldr	r3, [pc, #180]	; (8013434 <usart_deinit+0xb8>)
 8013380:	4298      	cmp	r0, r3
 8013382:	d050      	beq.n	8013426 <usart_deinit+0xaa>
 8013384:	d817      	bhi.n	80133b6 <usart_deinit+0x3a>
 8013386:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 801338a:	4298      	cmp	r0, r3
 801338c:	d044      	beq.n	8013418 <usart_deinit+0x9c>
 801338e:	d808      	bhi.n	80133a2 <usart_deinit+0x26>
 8013390:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8013394:	4298      	cmp	r0, r3
 8013396:	d02a      	beq.n	80133ee <usart_deinit+0x72>
 8013398:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 801339c:	4298      	cmp	r0, r3
 801339e:	d02d      	beq.n	80133fc <usart_deinit+0x80>
 80133a0:	bd08      	pop	{r3, pc}
 80133a2:	4b25      	ldr	r3, [pc, #148]	; (8013438 <usart_deinit+0xbc>)
 80133a4:	4298      	cmp	r0, r3
 80133a6:	d1fb      	bne.n	80133a0 <usart_deinit+0x24>
 80133a8:	f240 4014 	movw	r0, #1044	; 0x414
 80133ac:	f7ff fd37 	bl	8012e1e <rcu_periph_reset_enable>
 80133b0:	f240 4014 	movw	r0, #1044	; 0x414
 80133b4:	e017      	b.n	80133e6 <usart_deinit+0x6a>
 80133b6:	4b21      	ldr	r3, [pc, #132]	; (801343c <usart_deinit+0xc0>)
 80133b8:	4298      	cmp	r0, r3
 80133ba:	d00e      	beq.n	80133da <usart_deinit+0x5e>
 80133bc:	f503 5360 	add.w	r3, r3, #14336	; 0x3800
 80133c0:	4298      	cmp	r0, r3
 80133c2:	d022      	beq.n	801340a <usart_deinit+0x8e>
 80133c4:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
 80133c8:	4298      	cmp	r0, r3
 80133ca:	d1e9      	bne.n	80133a0 <usart_deinit+0x24>
 80133cc:	f641 601f 	movw	r0, #7711	; 0x1e1f
 80133d0:	f7ff fd25 	bl	8012e1e <rcu_periph_reset_enable>
 80133d4:	f641 601f 	movw	r0, #7711	; 0x1e1f
 80133d8:	e005      	b.n	80133e6 <usart_deinit+0x6a>
 80133da:	f240 300e 	movw	r0, #782	; 0x30e
 80133de:	f7ff fd1e 	bl	8012e1e <rcu_periph_reset_enable>
 80133e2:	f240 300e 	movw	r0, #782	; 0x30e
 80133e6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80133ea:	f7ff bd1a 	b.w	8012e22 <rcu_periph_reset_disable>
 80133ee:	f240 4011 	movw	r0, #1041	; 0x411
 80133f2:	f7ff fd14 	bl	8012e1e <rcu_periph_reset_enable>
 80133f6:	f240 4011 	movw	r0, #1041	; 0x411
 80133fa:	e7f4      	b.n	80133e6 <usart_deinit+0x6a>
 80133fc:	f240 4012 	movw	r0, #1042	; 0x412
 8013400:	f7ff fd0d 	bl	8012e1e <rcu_periph_reset_enable>
 8013404:	f240 4012 	movw	r0, #1042	; 0x412
 8013408:	e7ed      	b.n	80133e6 <usart_deinit+0x6a>
 801340a:	f641 5018 	movw	r0, #7448	; 0x1d18
 801340e:	f7ff fd06 	bl	8012e1e <rcu_periph_reset_enable>
 8013412:	f641 5018 	movw	r0, #7448	; 0x1d18
 8013416:	e7e6      	b.n	80133e6 <usart_deinit+0x6a>
 8013418:	f240 4013 	movw	r0, #1043	; 0x413
 801341c:	f7ff fcff 	bl	8012e1e <rcu_periph_reset_enable>
 8013420:	f240 4013 	movw	r0, #1043	; 0x413
 8013424:	e7df      	b.n	80133e6 <usart_deinit+0x6a>
 8013426:	f641 601e 	movw	r0, #7710	; 0x1e1e
 801342a:	f7ff fcf8 	bl	8012e1e <rcu_periph_reset_enable>
 801342e:	f641 601e 	movw	r0, #7710	; 0x1e1e
 8013432:	e7d8      	b.n	80133e6 <usart_deinit+0x6a>
 8013434:	40007800 	andmi	r7, r0, r0, lsl #16
 8013438:	40005000 	andmi	r5, r0, r0
 801343c:	40013800 	andmi	r3, r1, r0, lsl #16

08013440 <usart_baudrate_set>:
 8013440:	b538      	push	{r3, r4, r5, lr}
 8013442:	4b16      	ldr	r3, [pc, #88]	; (801349c <usart_baudrate_set+0x5c>)
 8013444:	4604      	mov	r4, r0
 8013446:	4298      	cmp	r0, r3
 8013448:	460d      	mov	r5, r1
 801344a:	d025      	beq.n	8013498 <usart_baudrate_set+0x58>
 801344c:	d816      	bhi.n	801347c <usart_baudrate_set+0x3c>
 801344e:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 8013452:	4298      	cmp	r0, r3
 8013454:	d020      	beq.n	8013498 <usart_baudrate_set+0x58>
 8013456:	d80f      	bhi.n	8013478 <usart_baudrate_set+0x38>
 8013458:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 801345c:	4298      	cmp	r0, r3
 801345e:	d01b      	beq.n	8013498 <usart_baudrate_set+0x58>
 8013460:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8013464:	429c      	cmp	r4, r3
 8013466:	d017      	beq.n	8013498 <usart_baudrate_set+0x58>
 8013468:	2000      	movs	r0, #0
 801346a:	eb00 0155 	add.w	r1, r0, r5, lsr #1
 801346e:	fbb1 f1f5 	udiv	r1, r1, r5
 8013472:	b289      	uxth	r1, r1
 8013474:	60a1      	str	r1, [r4, #8]
 8013476:	bd38      	pop	{r3, r4, r5, pc}
 8013478:	4b09      	ldr	r3, [pc, #36]	; (80134a0 <usart_baudrate_set+0x60>)
 801347a:	e7f3      	b.n	8013464 <usart_baudrate_set+0x24>
 801347c:	4b09      	ldr	r3, [pc, #36]	; (80134a4 <usart_baudrate_set+0x64>)
 801347e:	4298      	cmp	r0, r3
 8013480:	d006      	beq.n	8013490 <usart_baudrate_set+0x50>
 8013482:	f503 5360 	add.w	r3, r3, #14336	; 0x3800
 8013486:	4298      	cmp	r0, r3
 8013488:	d002      	beq.n	8013490 <usart_baudrate_set+0x50>
 801348a:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
 801348e:	e7e9      	b.n	8013464 <usart_baudrate_set+0x24>
 8013490:	2003      	movs	r0, #3
 8013492:	f7ff fd85 	bl	8012fa0 <rcu_clock_freq_get>
 8013496:	e7e8      	b.n	801346a <usart_baudrate_set+0x2a>
 8013498:	2002      	movs	r0, #2
 801349a:	e7fa      	b.n	8013492 <usart_baudrate_set+0x52>
 801349c:	40007800 	andmi	r7, r0, r0, lsl #16
 80134a0:	40005000 	andmi	r5, r0, r0
 80134a4:	40013800 	andmi	r3, r1, r0, lsl #16

080134a8 <usart_parity_config>:
 80134a8:	68c3      	ldr	r3, [r0, #12]
 80134aa:	f423 63c0 	bic.w	r3, r3, #1536	; 0x600
 80134ae:	60c3      	str	r3, [r0, #12]
 80134b0:	68c3      	ldr	r3, [r0, #12]
 80134b2:	430b      	orrs	r3, r1
 80134b4:	60c3      	str	r3, [r0, #12]
 80134b6:	4770      	bx	lr

080134b8 <usart_word_length_set>:
 80134b8:	68c3      	ldr	r3, [r0, #12]
 80134ba:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80134be:	60c3      	str	r3, [r0, #12]
 80134c0:	68c3      	ldr	r3, [r0, #12]
 80134c2:	430b      	orrs	r3, r1
 80134c4:	60c3      	str	r3, [r0, #12]
 80134c6:	4770      	bx	lr

080134c8 <usart_stop_bit_set>:
 80134c8:	6903      	ldr	r3, [r0, #16]
 80134ca:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 80134ce:	6103      	str	r3, [r0, #16]
 80134d0:	6903      	ldr	r3, [r0, #16]
 80134d2:	430b      	orrs	r3, r1
 80134d4:	6103      	str	r3, [r0, #16]
 80134d6:	4770      	bx	lr

080134d8 <usart_transmit_config>:
 80134d8:	68c3      	ldr	r3, [r0, #12]
 80134da:	f023 0308 	bic.w	r3, r3, #8
 80134de:	430b      	orrs	r3, r1
 80134e0:	60c3      	str	r3, [r0, #12]
 80134e2:	4770      	bx	lr

080134e4 <usart_receive_config>:
 80134e4:	68c3      	ldr	r3, [r0, #12]
 80134e6:	f023 0304 	bic.w	r3, r3, #4
 80134ea:	430b      	orrs	r3, r1
 80134ec:	60c3      	str	r3, [r0, #12]
 80134ee:	4770      	bx	lr

080134f0 <usart_hardware_flow_rts_config>:
 80134f0:	6943      	ldr	r3, [r0, #20]
 80134f2:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80134f6:	430b      	orrs	r3, r1
 80134f8:	6143      	str	r3, [r0, #20]
 80134fa:	4770      	bx	lr

080134fc <usart_hardware_flow_cts_config>:
 80134fc:	6943      	ldr	r3, [r0, #20]
 80134fe:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8013502:	430b      	orrs	r3, r1
 8013504:	6143      	str	r3, [r0, #20]
 8013506:	4770      	bx	lr

08013508 <usart_dma_transmit_config>:
 8013508:	6943      	ldr	r3, [r0, #20]
 801350a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 801350e:	430b      	orrs	r3, r1
 8013510:	6143      	str	r3, [r0, #20]
 8013512:	4770      	bx	lr

08013514 <usart_flag_get>:
 8013514:	098b      	lsrs	r3, r1, #6
 8013516:	581a      	ldr	r2, [r3, r0]
 8013518:	2301      	movs	r3, #1
 801351a:	f001 011f 	and.w	r1, r1, #31
 801351e:	408b      	lsls	r3, r1
 8013520:	4213      	tst	r3, r2
 8013522:	bf14      	ite	ne
 8013524:	2001      	movne	r0, #1
 8013526:	2000      	moveq	r0, #0
 8013528:	4770      	bx	lr

0801352a <usart_interrupt_enable>:
 801352a:	2301      	movs	r3, #1
 801352c:	b510      	push	{r4, lr}
 801352e:	f3c1 1289 	ubfx	r2, r1, #6, #10
 8013532:	5814      	ldr	r4, [r2, r0]
 8013534:	f001 011f 	and.w	r1, r1, #31
 8013538:	408b      	lsls	r3, r1
 801353a:	4323      	orrs	r3, r4
 801353c:	5013      	str	r3, [r2, r0]
 801353e:	bd10      	pop	{r4, pc}

08013540 <usart_interrupt_disable>:
 8013540:	2201      	movs	r2, #1
 8013542:	b510      	push	{r4, lr}
 8013544:	f3c1 1489 	ubfx	r4, r1, #6, #10
 8013548:	5823      	ldr	r3, [r4, r0]
 801354a:	f001 011f 	and.w	r1, r1, #31
 801354e:	408a      	lsls	r2, r1
 8013550:	ea23 0302 	bic.w	r3, r3, r2
 8013554:	5023      	str	r3, [r4, r0]
 8013556:	bd10      	pop	{r4, pc}

08013558 <usart_interrupt_flag_clear>:
 8013558:	2201      	movs	r2, #1
 801355a:	b510      	push	{r4, lr}
 801355c:	0d8c      	lsrs	r4, r1, #22
 801355e:	5823      	ldr	r3, [r4, r0]
 8013560:	f3c1 4104 	ubfx	r1, r1, #16, #5
 8013564:	408a      	lsls	r2, r1
 8013566:	ea23 0302 	bic.w	r3, r3, r2
 801356a:	5023      	str	r3, [r4, r0]
 801356c:	bd10      	pop	{r4, pc}
	...

08013570 <emac_eth_recv>:
 8013570:	b538      	push	{r3, r4, r5, lr}
 8013572:	4605      	mov	r5, r0
 8013574:	f001 f870 	bl	8014658 <enet_rxframe_size_get>
 8013578:	4604      	mov	r4, r0
 801357a:	b138      	cbz	r0, 801358c <emac_eth_recv+0x1c>
 801357c:	4b05      	ldr	r3, [pc, #20]	; (8013594 <emac_eth_recv+0x24>)
 801357e:	2105      	movs	r1, #5
 8013580:	6818      	ldr	r0, [r3, #0]
 8013582:	f001 f818 	bl	80145b6 <enet_desc_information_get>
 8013586:	6028      	str	r0, [r5, #0]
 8013588:	4620      	mov	r0, r4
 801358a:	bd38      	pop	{r3, r4, r5, pc}
 801358c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8013590:	e7fb      	b.n	801358a <emac_eth_recv+0x1a>
 8013592:	bf00      	nop
 8013594:	2000b88c 	andcs	fp, r0, ip, lsl #17

08013598 <emac_free_pkt>:
 8013598:	2100      	movs	r1, #0
 801359a:	4608      	mov	r0, r1
 801359c:	f000 bd46 	b.w	801402c <enet_frame_receive>

080135a0 <emac_eth_send>:
 80135a0:	f000 bd84 	b.w	80140ac <enet_frame_transmit>

080135a4 <gd32_adc_init()>:
 80135a4:	b510      	push	{r4, lr}
 80135a6:	f240 6009 	movw	r0, #1545	; 0x609
 80135aa:	4c21      	ldr	r4, [pc, #132]	; (8013630 <gd32_adc_init()+0x8c>)
 80135ac:	f7ff fc1c 	bl	8012de8 <rcu_periph_clock_enable>
 80135b0:	2005      	movs	r0, #5
 80135b2:	f7ff fc55 	bl	8012e60 <rcu_adc_clock_config>
 80135b6:	4620      	mov	r0, r4
 80135b8:	2201      	movs	r2, #1
 80135ba:	f44f 7180 	mov.w	r1, #256	; 0x100
 80135be:	f000 fbf5 	bl	8013dac <adc_special_function_config>
 80135c2:	f44f 42e0 	mov.w	r2, #28672	; 0x7000
 80135c6:	4620      	mov	r0, r4
 80135c8:	2102      	movs	r1, #2
 80135ca:	f000 fc8e 	bl	8013eea <adc_external_trigger_source_config>
 80135ce:	2100      	movs	r1, #0
 80135d0:	4620      	mov	r0, r4
 80135d2:	f000 fc13 	bl	8013dfc <adc_data_alignment_config>
 80135d6:	2000      	movs	r0, #0
 80135d8:	f000 fbd8 	bl	8013d8c <adc_mode_config>
 80135dc:	2202      	movs	r2, #2
 80135de:	4620      	mov	r0, r4
 80135e0:	4611      	mov	r1, r2
 80135e2:	f000 fc37 	bl	8013e54 <adc_channel_length_config>
 80135e6:	4620      	mov	r0, r4
 80135e8:	2307      	movs	r3, #7
 80135ea:	2210      	movs	r2, #16
 80135ec:	2100      	movs	r1, #0
 80135ee:	f000 fc4e 	bl	8013e8e <adc_inserted_channel_config>
 80135f2:	2307      	movs	r3, #7
 80135f4:	4620      	mov	r0, r4
 80135f6:	2211      	movs	r2, #17
 80135f8:	2101      	movs	r1, #1
 80135fa:	f000 fc48 	bl	8013e8e <adc_inserted_channel_config>
 80135fe:	2201      	movs	r2, #1
 8013600:	2102      	movs	r1, #2
 8013602:	4620      	mov	r0, r4
 8013604:	f000 fc82 	bl	8013f0c <adc_external_trigger_config>
 8013608:	f000 fc1a 	bl	8013e40 <adc_tempsensor_vrefint_enable>
 801360c:	4620      	mov	r0, r4
 801360e:	f000 fbfe 	bl	8013e0e <adc_enable>
 8013612:	2100      	movs	r1, #0
 8013614:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8013618:	f000 fae4 	bl	8013be4 <udelay(unsigned int, unsigned int)>
 801361c:	4620      	mov	r0, r4
 801361e:	f000 fbfe 	bl	8013e1e <adc_calibration_enable>
 8013622:	4620      	mov	r0, r4
 8013624:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013628:	2102      	movs	r1, #2
 801362a:	f000 bc8a 	b.w	8013f42 <adc_software_trigger_enable>
 801362e:	bf00      	nop
 8013630:	40012400 	andmi	r2, r1, r0, lsl #8

08013634 <_stop() [clone .isra.0]>:
 8013634:	b508      	push	{r3, lr}
 8013636:	4806      	ldr	r0, [pc, #24]	; (8013650 <_stop() [clone .isra.0]+0x1c>)
 8013638:	f001 f8d2 	bl	80147e0 <i2c_stop_on_bus>
 801363c:	f640 73ff 	movw	r3, #4095	; 0xfff
 8013640:	4904      	ldr	r1, [pc, #16]	; (8013654 <_stop() [clone .isra.0]+0x20>)
 8013642:	f8d1 2400 	ldr.w	r2, [r1, #1024]	; 0x400
 8013646:	0592      	lsls	r2, r2, #22
 8013648:	d501      	bpl.n	801364e <_stop() [clone .isra.0]+0x1a>
 801364a:	3b01      	subs	r3, #1
 801364c:	d1f9      	bne.n	8013642 <_stop() [clone .isra.0]+0xe>
 801364e:	bd08      	pop	{r3, pc}
 8013650:	40005400 	andmi	r5, r0, r0, lsl #8
 8013654:	40005000 	andmi	r5, r0, r0

08013658 <gd32_i2c_begin>:
 8013658:	b510      	push	{r4, lr}
 801365a:	f240 7015 	movw	r0, #1813	; 0x715
 801365e:	f7ff fbc3 	bl	8012de8 <rcu_periph_clock_enable>
 8013662:	4c15      	ldr	r4, [pc, #84]	; (80136b8 <gd32_i2c_begin+0x60>)
 8013664:	f240 6003 	movw	r0, #1539	; 0x603
 8013668:	f7ff fbbe 	bl	8012de8 <rcu_periph_clock_enable>
 801366c:	f240 6003 	movw	r0, #1539	; 0x603
 8013670:	f7ff fbba 	bl	8012de8 <rcu_periph_clock_enable>
 8013674:	4620      	mov	r0, r4
 8013676:	f44f 7380 	mov.w	r3, #256	; 0x100
 801367a:	2203      	movs	r2, #3
 801367c:	211c      	movs	r1, #28
 801367e:	f7ff fb1b 	bl	8012cb8 <gpio_init>
 8013682:	f44f 7300 	mov.w	r3, #512	; 0x200
 8013686:	2203      	movs	r2, #3
 8013688:	4620      	mov	r0, r4
 801368a:	211c      	movs	r1, #28
 801368c:	f7ff fb14 	bl	8012cb8 <gpio_init>
 8013690:	f5a4 4438 	sub.w	r4, r4, #47104	; 0xb800
 8013694:	2101      	movs	r1, #1
 8013696:	2002      	movs	r0, #2
 8013698:	f7ff fb62 	bl	8012d60 <gpio_pin_remap_config>
 801369c:	4620      	mov	r0, r4
 801369e:	4907      	ldr	r1, [pc, #28]	; (80136bc <gd32_i2c_begin+0x64>)
 80136a0:	2200      	movs	r2, #0
 80136a2:	f001 f817 	bl	80146d4 <i2c_clock_config>
 80136a6:	4620      	mov	r0, r4
 80136a8:	f001 f890 	bl	80147cc <i2c_enable>
 80136ac:	4620      	mov	r0, r4
 80136ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80136b2:	2101      	movs	r1, #1
 80136b4:	f001 b870 	b.w	8014798 <i2c_ack_config>
 80136b8:	40010c00 	andmi	r0, r1, r0, lsl #24
 80136bc:	00061a80 	andeq	r1, r6, r0, lsl #21

080136c0 <gd32_i2c_set_baudrate>:
 80136c0:	4601      	mov	r1, r0
 80136c2:	2200      	movs	r2, #0
 80136c4:	4801      	ldr	r0, [pc, #4]	; (80136cc <gd32_i2c_set_baudrate+0xc>)
 80136c6:	f001 b805 	b.w	80146d4 <i2c_clock_config>
 80136ca:	bf00      	nop
 80136cc:	40005400 	andmi	r5, r0, r0, lsl #8

080136d0 <gd32_i2c_set_address>:
 80136d0:	4b01      	ldr	r3, [pc, #4]	; (80136d8 <gd32_i2c_set_address+0x8>)
 80136d2:	0040      	lsls	r0, r0, #1
 80136d4:	7018      	strb	r0, [r3, #0]
 80136d6:	4770      	bx	lr
 80136d8:	2000b880 	andcs	fp, r0, r0, lsl #17

080136dc <gd32_i2c_write>:
 80136dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80136de:	4604      	mov	r4, r0
 80136e0:	460f      	mov	r7, r1
 80136e2:	f640 75ff 	movw	r5, #4095	; 0xfff
 80136e6:	4e2e      	ldr	r6, [pc, #184]	; (80137a0 <gd32_i2c_write+0xc4>)
 80136e8:	f240 6101 	movw	r1, #1537	; 0x601
 80136ec:	4630      	mov	r0, r6
 80136ee:	f001 f881 	bl	80147f4 <i2c_flag_get>
 80136f2:	b9b0      	cbnz	r0, 8013722 <gd32_i2c_write+0x46>
 80136f4:	482a      	ldr	r0, [pc, #168]	; (80137a0 <gd32_i2c_write+0xc4>)
 80136f6:	f001 f86e 	bl	80147d6 <i2c_start_on_bus>
 80136fa:	f640 75ff 	movw	r5, #4095	; 0xfff
 80136fe:	4e28      	ldr	r6, [pc, #160]	; (80137a0 <gd32_i2c_write+0xc4>)
 8013700:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8013704:	4630      	mov	r0, r6
 8013706:	f001 f875 	bl	80147f4 <i2c_flag_get>
 801370a:	b190      	cbz	r0, 8013732 <gd32_i2c_write+0x56>
 801370c:	4b25      	ldr	r3, [pc, #148]	; (80137a4 <gd32_i2c_write+0xc8>)
 801370e:	f06f 0201 	mvn.w	r2, #1
 8013712:	7819      	ldrb	r1, [r3, #0]
 8013714:	4822      	ldr	r0, [pc, #136]	; (80137a0 <gd32_i2c_write+0xc4>)
 8013716:	f001 f851 	bl	80147bc <i2c_master_addressing>
 801371a:	f640 75ff 	movw	r5, #4095	; 0xfff
 801371e:	4e20      	ldr	r6, [pc, #128]	; (80137a0 <gd32_i2c_write+0xc4>)
 8013720:	e00c      	b.n	801373c <gd32_i2c_write+0x60>
 8013722:	3d01      	subs	r5, #1
 8013724:	d1e0      	bne.n	80136e8 <gd32_i2c_write+0xc>
 8013726:	f7ff ff85 	bl	8013634 <_stop() [clone .isra.0]>
 801372a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801372e:	4240      	negs	r0, r0
 8013730:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8013732:	3d01      	subs	r5, #1
 8013734:	d1e4      	bne.n	8013700 <gd32_i2c_write+0x24>
 8013736:	e7f6      	b.n	8013726 <gd32_i2c_write+0x4a>
 8013738:	3d01      	subs	r5, #1
 801373a:	d0f4      	beq.n	8013726 <gd32_i2c_write+0x4a>
 801373c:	f240 5101 	movw	r1, #1281	; 0x501
 8013740:	4630      	mov	r0, r6
 8013742:	f001 f857 	bl	80147f4 <i2c_flag_get>
 8013746:	2800      	cmp	r0, #0
 8013748:	d0f6      	beq.n	8013738 <gd32_i2c_write+0x5c>
 801374a:	f240 5101 	movw	r1, #1281	; 0x501
 801374e:	4814      	ldr	r0, [pc, #80]	; (80137a0 <gd32_i2c_write+0xc4>)
 8013750:	f001 f85b 	bl	801480a <i2c_flag_clear>
 8013754:	f640 75ff 	movw	r5, #4095	; 0xfff
 8013758:	4e11      	ldr	r6, [pc, #68]	; (80137a0 <gd32_i2c_write+0xc4>)
 801375a:	f240 5107 	movw	r1, #1287	; 0x507
 801375e:	4630      	mov	r0, r6
 8013760:	f001 f848 	bl	80147f4 <i2c_flag_get>
 8013764:	2801      	cmp	r0, #1
 8013766:	d107      	bne.n	8013778 <gd32_i2c_write+0x9c>
 8013768:	4e0d      	ldr	r6, [pc, #52]	; (80137a0 <gd32_i2c_write+0xc4>)
 801376a:	4427      	add	r7, r4
 801376c:	42a7      	cmp	r7, r4
 801376e:	d106      	bne.n	801377e <gd32_i2c_write+0xa2>
 8013770:	f7ff ff60 	bl	8013634 <_stop() [clone .isra.0]>
 8013774:	2000      	movs	r0, #0
 8013776:	e7da      	b.n	801372e <gd32_i2c_write+0x52>
 8013778:	3d01      	subs	r5, #1
 801377a:	d1ee      	bne.n	801375a <gd32_i2c_write+0x7e>
 801377c:	e7d3      	b.n	8013726 <gd32_i2c_write+0x4a>
 801377e:	4630      	mov	r0, r6
 8013780:	f814 1b01 	ldrb.w	r1, [r4], #1
 8013784:	f001 f831 	bl	80147ea <i2c_data_transmit>
 8013788:	f640 75ff 	movw	r5, #4095	; 0xfff
 801378c:	f240 5102 	movw	r1, #1282	; 0x502
 8013790:	4630      	mov	r0, r6
 8013792:	f001 f82f 	bl	80147f4 <i2c_flag_get>
 8013796:	2800      	cmp	r0, #0
 8013798:	d1e8      	bne.n	801376c <gd32_i2c_write+0x90>
 801379a:	3d01      	subs	r5, #1
 801379c:	d1f6      	bne.n	801378c <gd32_i2c_write+0xb0>
 801379e:	e7c2      	b.n	8013726 <gd32_i2c_write+0x4a>
 80137a0:	40005400 	andmi	r5, r0, r0, lsl #8
 80137a4:	2000b880 	andcs	fp, r0, r0, lsl #17

080137a8 <gd32_i2c_read>:
 80137a8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80137ac:	4680      	mov	r8, r0
 80137ae:	460c      	mov	r4, r1
 80137b0:	f640 76ff 	movw	r6, #4095	; 0xfff
 80137b4:	4f4b      	ldr	r7, [pc, #300]	; (80138e4 <gd32_i2c_read+0x13c>)
 80137b6:	f240 6101 	movw	r1, #1537	; 0x601
 80137ba:	4638      	mov	r0, r7
 80137bc:	f001 f81a 	bl	80147f4 <i2c_flag_get>
 80137c0:	4605      	mov	r5, r0
 80137c2:	bb08      	cbnz	r0, 8013808 <gd32_i2c_read+0x60>
 80137c4:	2c02      	cmp	r4, #2
 80137c6:	d103      	bne.n	80137d0 <gd32_i2c_read+0x28>
 80137c8:	4601      	mov	r1, r0
 80137ca:	4846      	ldr	r0, [pc, #280]	; (80138e4 <gd32_i2c_read+0x13c>)
 80137cc:	f000 ffed 	bl	80147aa <i2c_ackpos_config>
 80137d0:	4844      	ldr	r0, [pc, #272]	; (80138e4 <gd32_i2c_read+0x13c>)
 80137d2:	f001 f800 	bl	80147d6 <i2c_start_on_bus>
 80137d6:	f640 76ff 	movw	r6, #4095	; 0xfff
 80137da:	4f42      	ldr	r7, [pc, #264]	; (80138e4 <gd32_i2c_read+0x13c>)
 80137dc:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 80137e0:	4638      	mov	r0, r7
 80137e2:	f001 f807 	bl	80147f4 <i2c_flag_get>
 80137e6:	b1a8      	cbz	r0, 8013814 <gd32_i2c_read+0x6c>
 80137e8:	4b3f      	ldr	r3, [pc, #252]	; (80138e8 <gd32_i2c_read+0x140>)
 80137ea:	2201      	movs	r2, #1
 80137ec:	7819      	ldrb	r1, [r3, #0]
 80137ee:	483d      	ldr	r0, [pc, #244]	; (80138e4 <gd32_i2c_read+0x13c>)
 80137f0:	f000 ffe4 	bl	80147bc <i2c_master_addressing>
 80137f4:	2c02      	cmp	r4, #2
 80137f6:	d803      	bhi.n	8013800 <gd32_i2c_read+0x58>
 80137f8:	2100      	movs	r1, #0
 80137fa:	483a      	ldr	r0, [pc, #232]	; (80138e4 <gd32_i2c_read+0x13c>)
 80137fc:	f000 ffcc 	bl	8014798 <i2c_ack_config>
 8013800:	f640 76ff 	movw	r6, #4095	; 0xfff
 8013804:	4f37      	ldr	r7, [pc, #220]	; (80138e4 <gd32_i2c_read+0x13c>)
 8013806:	e00a      	b.n	801381e <gd32_i2c_read+0x76>
 8013808:	3e01      	subs	r6, #1
 801380a:	d1d4      	bne.n	80137b6 <gd32_i2c_read+0xe>
 801380c:	f7ff ff12 	bl	8013634 <_stop() [clone .isra.0]>
 8013810:	2504      	movs	r5, #4
 8013812:	e04d      	b.n	80138b0 <gd32_i2c_read+0x108>
 8013814:	3e01      	subs	r6, #1
 8013816:	d1e1      	bne.n	80137dc <gd32_i2c_read+0x34>
 8013818:	e7f8      	b.n	801380c <gd32_i2c_read+0x64>
 801381a:	3e01      	subs	r6, #1
 801381c:	d0f6      	beq.n	801380c <gd32_i2c_read+0x64>
 801381e:	f240 5101 	movw	r1, #1281	; 0x501
 8013822:	4638      	mov	r0, r7
 8013824:	f000 ffe6 	bl	80147f4 <i2c_flag_get>
 8013828:	2800      	cmp	r0, #0
 801382a:	d0f6      	beq.n	801381a <gd32_i2c_read+0x72>
 801382c:	f240 5101 	movw	r1, #1281	; 0x501
 8013830:	482c      	ldr	r0, [pc, #176]	; (80138e4 <gd32_i2c_read+0x13c>)
 8013832:	f000 ffea 	bl	801480a <i2c_flag_clear>
 8013836:	2c01      	cmp	r4, #1
 8013838:	d102      	bne.n	8013840 <gd32_i2c_read+0x98>
 801383a:	482a      	ldr	r0, [pc, #168]	; (80138e4 <gd32_i2c_read+0x13c>)
 801383c:	f000 ffd0 	bl	80147e0 <i2c_stop_on_bus>
 8013840:	f640 77ff 	movw	r7, #4095	; 0xfff
 8013844:	4e27      	ldr	r6, [pc, #156]	; (80138e4 <gd32_i2c_read+0x13c>)
 8013846:	e022      	b.n	801388e <gd32_i2c_read+0xe6>
 8013848:	2c03      	cmp	r4, #3
 801384a:	d134      	bne.n	80138b6 <gd32_i2c_read+0x10e>
 801384c:	f640 79ff 	movw	r9, #4095	; 0xfff
 8013850:	e002      	b.n	8013858 <gd32_i2c_read+0xb0>
 8013852:	f1b9 0901 	subs.w	r9, r9, #1
 8013856:	d0d9      	beq.n	801380c <gd32_i2c_read+0x64>
 8013858:	f240 5102 	movw	r1, #1282	; 0x502
 801385c:	4630      	mov	r0, r6
 801385e:	f000 ffc9 	bl	80147f4 <i2c_flag_get>
 8013862:	2800      	cmp	r0, #0
 8013864:	d0f5      	beq.n	8013852 <gd32_i2c_read+0xaa>
 8013866:	2100      	movs	r1, #0
 8013868:	4630      	mov	r0, r6
 801386a:	f000 ff95 	bl	8014798 <i2c_ack_config>
 801386e:	f240 5106 	movw	r1, #1286	; 0x506
 8013872:	4630      	mov	r0, r6
 8013874:	f000 ffbe 	bl	80147f4 <i2c_flag_get>
 8013878:	b138      	cbz	r0, 801388a <gd32_i2c_read+0xe2>
 801387a:	4630      	mov	r0, r6
 801387c:	f000 ffb7 	bl	80147ee <i2c_data_receive>
 8013880:	f640 77ff 	movw	r7, #4095	; 0xfff
 8013884:	f808 0b01 	strb.w	r0, [r8], #1
 8013888:	3c01      	subs	r4, #1
 801388a:	3f01      	subs	r7, #1
 801388c:	d0be      	beq.n	801380c <gd32_i2c_read+0x64>
 801388e:	2c00      	cmp	r4, #0
 8013890:	d1da      	bne.n	8013848 <gd32_i2c_read+0xa0>
 8013892:	f640 73ff 	movw	r3, #4095	; 0xfff
 8013896:	4915      	ldr	r1, [pc, #84]	; (80138ec <gd32_i2c_read+0x144>)
 8013898:	f8d1 2400 	ldr.w	r2, [r1, #1024]	; 0x400
 801389c:	0592      	lsls	r2, r2, #22
 801389e:	d41d      	bmi.n	80138dc <gd32_i2c_read+0x134>
 80138a0:	2101      	movs	r1, #1
 80138a2:	4810      	ldr	r0, [pc, #64]	; (80138e4 <gd32_i2c_read+0x13c>)
 80138a4:	f000 ff78 	bl	8014798 <i2c_ack_config>
 80138a8:	2101      	movs	r1, #1
 80138aa:	480e      	ldr	r0, [pc, #56]	; (80138e4 <gd32_i2c_read+0x13c>)
 80138ac:	f000 ff7d 	bl	80147aa <i2c_ackpos_config>
 80138b0:	4628      	mov	r0, r5
 80138b2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80138b6:	2c02      	cmp	r4, #2
 80138b8:	d1d9      	bne.n	801386e <gd32_i2c_read+0xc6>
 80138ba:	f640 79ff 	movw	r9, #4095	; 0xfff
 80138be:	e002      	b.n	80138c6 <gd32_i2c_read+0x11e>
 80138c0:	f1b9 0901 	subs.w	r9, r9, #1
 80138c4:	d0a2      	beq.n	801380c <gd32_i2c_read+0x64>
 80138c6:	f240 5102 	movw	r1, #1282	; 0x502
 80138ca:	4630      	mov	r0, r6
 80138cc:	f000 ff92 	bl	80147f4 <i2c_flag_get>
 80138d0:	2800      	cmp	r0, #0
 80138d2:	d0f5      	beq.n	80138c0 <gd32_i2c_read+0x118>
 80138d4:	4630      	mov	r0, r6
 80138d6:	f000 ff83 	bl	80147e0 <i2c_stop_on_bus>
 80138da:	e7c8      	b.n	801386e <gd32_i2c_read+0xc6>
 80138dc:	3b01      	subs	r3, #1
 80138de:	d1db      	bne.n	8013898 <gd32_i2c_read+0xf0>
 80138e0:	e796      	b.n	8013810 <gd32_i2c_read+0x68>
 80138e2:	bf00      	nop
 80138e4:	40005400 	andmi	r5, r0, r0, lsl #8
 80138e8:	2000b880 	andcs	fp, r0, r0, lsl #17
 80138ec:	40005000 	andmi	r5, r0, r0

080138f0 <gd32_uart_begin>:
 80138f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80138f2:	461e      	mov	r6, r3
 80138f4:	4b82      	ldr	r3, [pc, #520]	; (8013b00 <gd32_uart_begin+0x210>)
 80138f6:	4604      	mov	r4, r0
 80138f8:	4298      	cmp	r0, r3
 80138fa:	460f      	mov	r7, r1
 80138fc:	4615      	mov	r5, r2
 80138fe:	d060      	beq.n	80139c2 <gd32_uart_begin+0xd2>
 8013900:	d80f      	bhi.n	8013922 <gd32_uart_begin+0x32>
 8013902:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 8013906:	4298      	cmp	r0, r3
 8013908:	d04a      	beq.n	80139a0 <gd32_uart_begin+0xb0>
 801390a:	d84c      	bhi.n	80139a6 <gd32_uart_begin+0xb6>
 801390c:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8013910:	4298      	cmp	r0, r3
 8013912:	d03e      	beq.n	8013992 <gd32_uart_begin+0xa2>
 8013914:	f240 7012 	movw	r0, #1810	; 0x712
 8013918:	f7ff fa66 	bl	8012de8 <rcu_periph_clock_enable>
 801391c:	f240 6004 	movw	r0, #1540	; 0x604
 8013920:	e00f      	b.n	8013942 <gd32_uart_begin+0x52>
 8013922:	4b78      	ldr	r3, [pc, #480]	; (8013b04 <gd32_uart_begin+0x214>)
 8013924:	4298      	cmp	r0, r3
 8013926:	d006      	beq.n	8013936 <gd32_uart_begin+0x46>
 8013928:	f503 5360 	add.w	r3, r3, #14336	; 0x3800
 801392c:	4298      	cmp	r0, r3
 801392e:	d045      	beq.n	80139bc <gd32_uart_begin+0xcc>
 8013930:	f641 201f 	movw	r0, #6687	; 0x1a1f
 8013934:	e047      	b.n	80139c6 <gd32_uart_begin+0xd6>
 8013936:	f240 600e 	movw	r0, #1550	; 0x60e
 801393a:	f7ff fa55 	bl	8012de8 <rcu_periph_clock_enable>
 801393e:	f240 6003 	movw	r0, #1539	; 0x603
 8013942:	f7ff fa51 	bl	8012de8 <rcu_periph_clock_enable>
 8013946:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 801394a:	f7ff fa4d 	bl	8012de8 <rcu_periph_clock_enable>
 801394e:	4b6c      	ldr	r3, [pc, #432]	; (8013b00 <gd32_uart_begin+0x210>)
 8013950:	429c      	cmp	r4, r3
 8013952:	f000 80c3 	beq.w	8013adc <gd32_uart_begin+0x1ec>
 8013956:	d83b      	bhi.n	80139d0 <gd32_uart_begin+0xe0>
 8013958:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 801395c:	429c      	cmp	r4, r3
 801395e:	f000 809c 	beq.w	8013a9a <gd32_uart_begin+0x1aa>
 8013962:	f200 80a7 	bhi.w	8013ab4 <gd32_uart_begin+0x1c4>
 8013966:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 801396a:	429c      	cmp	r4, r3
 801396c:	f000 8088 	beq.w	8013a80 <gd32_uart_begin+0x190>
 8013970:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8013974:	2203      	movs	r2, #3
 8013976:	2118      	movs	r1, #24
 8013978:	4863      	ldr	r0, [pc, #396]	; (8013b08 <gd32_uart_begin+0x218>)
 801397a:	f7ff f99d 	bl	8012cb8 <gpio_init>
 801397e:	2104      	movs	r1, #4
 8013980:	4861      	ldr	r0, [pc, #388]	; (8013b08 <gd32_uart_begin+0x218>)
 8013982:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8013986:	2203      	movs	r2, #3
 8013988:	f7ff f996 	bl	8012cb8 <gpio_init>
 801398c:	2101      	movs	r1, #1
 801398e:	485f      	ldr	r0, [pc, #380]	; (8013b0c <gd32_uart_begin+0x21c>)
 8013990:	e03b      	b.n	8013a0a <gd32_uart_begin+0x11a>
 8013992:	f240 7011 	movw	r0, #1809	; 0x711
 8013996:	f7ff fa27 	bl	8012de8 <rcu_periph_clock_enable>
 801399a:	f240 6002 	movw	r0, #1538	; 0x602
 801399e:	e7d0      	b.n	8013942 <gd32_uart_begin+0x52>
 80139a0:	f240 7013 	movw	r0, #1811	; 0x713
 80139a4:	e7b8      	b.n	8013918 <gd32_uart_begin+0x28>
 80139a6:	f240 7014 	movw	r0, #1812	; 0x714
 80139aa:	f7ff fa1d 	bl	8012de8 <rcu_periph_clock_enable>
 80139ae:	f240 6004 	movw	r0, #1540	; 0x604
 80139b2:	f7ff fa19 	bl	8012de8 <rcu_periph_clock_enable>
 80139b6:	f240 6005 	movw	r0, #1541	; 0x605
 80139ba:	e7c2      	b.n	8013942 <gd32_uart_begin+0x52>
 80139bc:	f641 1018 	movw	r0, #6424	; 0x1918
 80139c0:	e7aa      	b.n	8013918 <gd32_uart_begin+0x28>
 80139c2:	f641 201e 	movw	r0, #6686	; 0x1a1e
 80139c6:	f7ff fa0f 	bl	8012de8 <rcu_periph_clock_enable>
 80139ca:	f240 6006 	movw	r0, #1542	; 0x606
 80139ce:	e7b8      	b.n	8013942 <gd32_uart_begin+0x52>
 80139d0:	4b4c      	ldr	r3, [pc, #304]	; (8013b04 <gd32_uart_begin+0x214>)
 80139d2:	429c      	cmp	r4, r3
 80139d4:	d00b      	beq.n	80139ee <gd32_uart_begin+0xfe>
 80139d6:	f503 5360 	add.w	r3, r3, #14336	; 0x3800
 80139da:	429c      	cmp	r4, r3
 80139dc:	d076      	beq.n	8013acc <gd32_uart_begin+0x1dc>
 80139de:	2302      	movs	r3, #2
 80139e0:	2203      	movs	r2, #3
 80139e2:	2118      	movs	r1, #24
 80139e4:	484a      	ldr	r0, [pc, #296]	; (8013b10 <gd32_uart_begin+0x220>)
 80139e6:	f7ff f967 	bl	8012cb8 <gpio_init>
 80139ea:	2301      	movs	r3, #1
 80139ec:	e07e      	b.n	8013aec <gd32_uart_begin+0x1fc>
 80139ee:	2340      	movs	r3, #64	; 0x40
 80139f0:	2203      	movs	r2, #3
 80139f2:	2118      	movs	r1, #24
 80139f4:	4847      	ldr	r0, [pc, #284]	; (8013b14 <gd32_uart_begin+0x224>)
 80139f6:	f7ff f95f 	bl	8012cb8 <gpio_init>
 80139fa:	2104      	movs	r1, #4
 80139fc:	4845      	ldr	r0, [pc, #276]	; (8013b14 <gd32_uart_begin+0x224>)
 80139fe:	2380      	movs	r3, #128	; 0x80
 8013a00:	2203      	movs	r2, #3
 8013a02:	f7ff f959 	bl	8012cb8 <gpio_init>
 8013a06:	2101      	movs	r1, #1
 8013a08:	2004      	movs	r0, #4
 8013a0a:	f7ff f9a9 	bl	8012d60 <gpio_pin_remap_config>
 8013a0e:	4620      	mov	r0, r4
 8013a10:	f7ff fcb4 	bl	801337c <usart_deinit>
 8013a14:	68e3      	ldr	r3, [r4, #12]
 8013a16:	4639      	mov	r1, r7
 8013a18:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8013a1c:	4620      	mov	r0, r4
 8013a1e:	60e3      	str	r3, [r4, #12]
 8013a20:	f7ff fd0e 	bl	8013440 <usart_baudrate_set>
 8013a24:	f1a5 0309 	sub.w	r3, r5, #9
 8013a28:	4259      	negs	r1, r3
 8013a2a:	4159      	adcs	r1, r3
 8013a2c:	4620      	mov	r0, r4
 8013a2e:	0309      	lsls	r1, r1, #12
 8013a30:	f7ff fd42 	bl	80134b8 <usart_word_length_set>
 8013a34:	9906      	ldr	r1, [sp, #24]
 8013a36:	4620      	mov	r0, r4
 8013a38:	1e8a      	subs	r2, r1, #2
 8013a3a:	4251      	negs	r1, r2
 8013a3c:	4151      	adcs	r1, r2
 8013a3e:	0349      	lsls	r1, r1, #13
 8013a40:	f7ff fd42 	bl	80134c8 <usart_stop_bit_set>
 8013a44:	2e01      	cmp	r6, #1
 8013a46:	d055      	beq.n	8013af4 <gd32_uart_begin+0x204>
 8013a48:	2e02      	cmp	r6, #2
 8013a4a:	d156      	bne.n	8013afa <gd32_uart_begin+0x20a>
 8013a4c:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8013a50:	4620      	mov	r0, r4
 8013a52:	f7ff fd29 	bl	80134a8 <usart_parity_config>
 8013a56:	2100      	movs	r1, #0
 8013a58:	4620      	mov	r0, r4
 8013a5a:	f7ff fd49 	bl	80134f0 <usart_hardware_flow_rts_config>
 8013a5e:	2100      	movs	r1, #0
 8013a60:	4620      	mov	r0, r4
 8013a62:	f7ff fd4b 	bl	80134fc <usart_hardware_flow_cts_config>
 8013a66:	2104      	movs	r1, #4
 8013a68:	4620      	mov	r0, r4
 8013a6a:	f7ff fd3b 	bl	80134e4 <usart_receive_config>
 8013a6e:	2108      	movs	r1, #8
 8013a70:	4620      	mov	r0, r4
 8013a72:	f7ff fd31 	bl	80134d8 <usart_transmit_config>
 8013a76:	68e3      	ldr	r3, [r4, #12]
 8013a78:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8013a7c:	60e3      	str	r3, [r4, #12]
 8013a7e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8013a80:	2304      	movs	r3, #4
 8013a82:	2203      	movs	r2, #3
 8013a84:	2118      	movs	r1, #24
 8013a86:	4824      	ldr	r0, [pc, #144]	; (8013b18 <gd32_uart_begin+0x228>)
 8013a88:	f7ff f916 	bl	8012cb8 <gpio_init>
 8013a8c:	2308      	movs	r3, #8
 8013a8e:	2203      	movs	r2, #3
 8013a90:	2104      	movs	r1, #4
 8013a92:	4821      	ldr	r0, [pc, #132]	; (8013b18 <gd32_uart_begin+0x228>)
 8013a94:	f7ff f910 	bl	8012cb8 <gpio_init>
 8013a98:	e7b9      	b.n	8013a0e <gd32_uart_begin+0x11e>
 8013a9a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8013a9e:	2203      	movs	r2, #3
 8013aa0:	2118      	movs	r1, #24
 8013aa2:	4819      	ldr	r0, [pc, #100]	; (8013b08 <gd32_uart_begin+0x218>)
 8013aa4:	f7ff f908 	bl	8012cb8 <gpio_init>
 8013aa8:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8013aac:	2203      	movs	r2, #3
 8013aae:	2104      	movs	r1, #4
 8013ab0:	4815      	ldr	r0, [pc, #84]	; (8013b08 <gd32_uart_begin+0x218>)
 8013ab2:	e7ef      	b.n	8013a94 <gd32_uart_begin+0x1a4>
 8013ab4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8013ab8:	2203      	movs	r2, #3
 8013aba:	2118      	movs	r1, #24
 8013abc:	4812      	ldr	r0, [pc, #72]	; (8013b08 <gd32_uart_begin+0x218>)
 8013abe:	f7ff f8fb 	bl	8012cb8 <gpio_init>
 8013ac2:	2304      	movs	r3, #4
 8013ac4:	2203      	movs	r2, #3
 8013ac6:	4619      	mov	r1, r3
 8013ac8:	4814      	ldr	r0, [pc, #80]	; (8013b1c <gd32_uart_begin+0x22c>)
 8013aca:	e7e3      	b.n	8013a94 <gd32_uart_begin+0x1a4>
 8013acc:	2340      	movs	r3, #64	; 0x40
 8013ace:	2203      	movs	r2, #3
 8013ad0:	2118      	movs	r1, #24
 8013ad2:	480d      	ldr	r0, [pc, #52]	; (8013b08 <gd32_uart_begin+0x218>)
 8013ad4:	f7ff f8f0 	bl	8012cb8 <gpio_init>
 8013ad8:	2380      	movs	r3, #128	; 0x80
 8013ada:	e7e7      	b.n	8013aac <gd32_uart_begin+0x1bc>
 8013adc:	f44f 7380 	mov.w	r3, #256	; 0x100
 8013ae0:	2203      	movs	r2, #3
 8013ae2:	2118      	movs	r1, #24
 8013ae4:	480a      	ldr	r0, [pc, #40]	; (8013b10 <gd32_uart_begin+0x220>)
 8013ae6:	f7ff f8e7 	bl	8012cb8 <gpio_init>
 8013aea:	2380      	movs	r3, #128	; 0x80
 8013aec:	2203      	movs	r2, #3
 8013aee:	2104      	movs	r1, #4
 8013af0:	4807      	ldr	r0, [pc, #28]	; (8013b10 <gd32_uart_begin+0x220>)
 8013af2:	e7cf      	b.n	8013a94 <gd32_uart_begin+0x1a4>
 8013af4:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 8013af8:	e7aa      	b.n	8013a50 <gd32_uart_begin+0x160>
 8013afa:	2100      	movs	r1, #0
 8013afc:	e7a8      	b.n	8013a50 <gd32_uart_begin+0x160>
 8013afe:	bf00      	nop
 8013b00:	40007800 	andmi	r7, r0, r0, lsl #16
 8013b04:	40013800 	andmi	r3, r1, r0, lsl #16
 8013b08:	40011000 	andmi	r1, r1, r0
 8013b0c:	00140010 	andseq	r0, r4, r0, lsl r0
 8013b10:	40011800 	andmi	r1, r1, r0, lsl #16
 8013b14:	40010c00 	andmi	r0, r1, r0, lsl #24
 8013b18:	40010800 	andmi	r0, r1, r0, lsl #16
 8013b1c:	40011400 	andmi	r1, r1, r0, lsl #8

08013b20 <micros_init()>:
 8013b20:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8013b22:	2400      	movs	r4, #0
 8013b24:	f04f 36ff 	mov.w	r6, #4294967295	; 0xffffffff
 8013b28:	4d22      	ldr	r5, [pc, #136]	; (8013bb4 <micros_init()+0x94>)
 8013b2a:	f240 6013 	movw	r0, #1555	; 0x613
 8013b2e:	f7ff f95b 	bl	8012de8 <rcu_periph_clock_enable>
 8013b32:	4628      	mov	r0, r5
 8013b34:	f7ff fabc 	bl	80130b0 <timer_deinit>
 8013b38:	4b1f      	ldr	r3, [pc, #124]	; (8013bb8 <micros_init()+0x98>)
 8013b3a:	4628      	mov	r0, r5
 8013b3c:	f8c3 4c24 	str.w	r4, [r3, #3108]	; 0xc24
 8013b40:	4669      	mov	r1, sp
 8013b42:	9400      	str	r4, [sp, #0]
 8013b44:	f8ad 4004 	strh.w	r4, [sp, #4]
 8013b48:	9602      	str	r6, [sp, #8]
 8013b4a:	f8ad 400c 	strh.w	r4, [sp, #12]
 8013b4e:	f7ff fb55 	bl	80131fc <timer_init>
 8013b52:	4628      	mov	r0, r5
 8013b54:	4621      	mov	r1, r4
 8013b56:	f7ff fbfa 	bl	801334e <timer_master_slave_mode_config>
 8013b5a:	4628      	mov	r0, r5
 8013b5c:	2107      	movs	r1, #7
 8013b5e:	f7ff fbee 	bl	801333e <timer_slave_mode_select>
 8013b62:	2120      	movs	r1, #32
 8013b64:	4628      	mov	r0, r5
 8013b66:	f7ff fbda 	bl	801331e <timer_input_trigger_source_select>
 8013b6a:	4628      	mov	r0, r5
 8013b6c:	f7ff fb9e 	bl	80132ac <timer_enable>
 8013b70:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8013b74:	f240 6014 	movw	r0, #1556	; 0x614
 8013b78:	f7ff f936 	bl	8012de8 <rcu_periph_clock_enable>
 8013b7c:	4628      	mov	r0, r5
 8013b7e:	f7ff fa97 	bl	80130b0 <timer_deinit>
 8013b82:	2377      	movs	r3, #119	; 0x77
 8013b84:	626c      	str	r4, [r5, #36]	; 0x24
 8013b86:	4669      	mov	r1, sp
 8013b88:	4628      	mov	r0, r5
 8013b8a:	9300      	str	r3, [sp, #0]
 8013b8c:	f8ad 4004 	strh.w	r4, [sp, #4]
 8013b90:	9602      	str	r6, [sp, #8]
 8013b92:	f8ad 400c 	strh.w	r4, [sp, #12]
 8013b96:	f7ff fb31 	bl	80131fc <timer_init>
 8013b9a:	4621      	mov	r1, r4
 8013b9c:	4628      	mov	r0, r5
 8013b9e:	f7ff fbd6 	bl	801334e <timer_master_slave_mode_config>
 8013ba2:	2120      	movs	r1, #32
 8013ba4:	4628      	mov	r0, r5
 8013ba6:	f7ff fbc2 	bl	801332e <timer_master_output_trigger_source_select>
 8013baa:	4628      	mov	r0, r5
 8013bac:	f7ff fb7e 	bl	80132ac <timer_enable>
 8013bb0:	b004      	add	sp, #16
 8013bb2:	bd70      	pop	{r4, r5, r6, pc}
 8013bb4:	40014c00 	andmi	r4, r1, r0, lsl #24
 8013bb8:	40014000 	andmi	r4, r1, r0

08013bbc <udelay_init()>:
 8013bbc:	4a07      	ldr	r2, [pc, #28]	; (8013bdc <udelay_init()+0x20>)
 8013bbe:	f8d2 30fc 	ldr.w	r3, [r2, #252]	; 0xfc
 8013bc2:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8013bc6:	f8c2 30fc 	str.w	r3, [r2, #252]	; 0xfc
 8013bca:	2200      	movs	r2, #0
 8013bcc:	4b04      	ldr	r3, [pc, #16]	; (8013be0 <udelay_init()+0x24>)
 8013bce:	605a      	str	r2, [r3, #4]
 8013bd0:	681a      	ldr	r2, [r3, #0]
 8013bd2:	f042 0201 	orr.w	r2, r2, #1
 8013bd6:	601a      	str	r2, [r3, #0]
 8013bd8:	4770      	bx	lr
 8013bda:	bf00      	nop
 8013bdc:	e000ed00 	and	lr, r0, r0, lsl #26
 8013be0:	e0001000 	and	r1, r0, r0

08013be4 <udelay(unsigned int, unsigned int)>:
 8013be4:	2378      	movs	r3, #120	; 0x78
 8013be6:	b530      	push	{r4, r5, lr}
 8013be8:	4358      	muls	r0, r3
 8013bea:	b909      	cbnz	r1, 8013bf0 <udelay(unsigned int, unsigned int)+0xc>
 8013bec:	4b08      	ldr	r3, [pc, #32]	; (8013c10 <udelay(unsigned int, unsigned int)+0x2c>)
 8013bee:	6859      	ldr	r1, [r3, #4]
 8013bf0:	2300      	movs	r3, #0
 8013bf2:	4c07      	ldr	r4, [pc, #28]	; (8013c10 <udelay(unsigned int, unsigned int)+0x2c>)
 8013bf4:	6862      	ldr	r2, [r4, #4]
 8013bf6:	4291      	cmp	r1, r2
 8013bf8:	d0fc      	beq.n	8013bf4 <udelay(unsigned int, unsigned int)+0x10>
 8013bfa:	bf2a      	itet	cs
 8013bfc:	f102 35ff 	addcs.w	r5, r2, #4294967295	; 0xffffffff
 8013c00:	189b      	addcc	r3, r3, r2
 8013c02:	195b      	addcs	r3, r3, r5
 8013c04:	1a5b      	subs	r3, r3, r1
 8013c06:	4283      	cmp	r3, r0
 8013c08:	d300      	bcc.n	8013c0c <udelay(unsigned int, unsigned int)+0x28>
 8013c0a:	bd30      	pop	{r4, r5, pc}
 8013c0c:	4611      	mov	r1, r2
 8013c0e:	e7f1      	b.n	8013bf4 <udelay(unsigned int, unsigned int)+0x10>
 8013c10:	e0001000 	and	r1, r0, r0

08013c14 <emac_start(unsigned char*)>:
 8013c14:	b538      	push	{r3, r4, r5, lr}
 8013c16:	4605      	mov	r5, r0
 8013c18:	f240 6002 	movw	r0, #1538	; 0x602
 8013c1c:	f7ff f8e4 	bl	8012de8 <rcu_periph_clock_enable>
 8013c20:	f240 6003 	movw	r0, #1539	; 0x603
 8013c24:	f7ff f8e0 	bl	8012de8 <rcu_periph_clock_enable>
 8013c28:	f240 6004 	movw	r0, #1540	; 0x604
 8013c2c:	f7ff f8dc 	bl	8012de8 <rcu_periph_clock_enable>
 8013c30:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 8013c34:	f7ff f8d8 	bl	8012de8 <rcu_periph_clock_enable>
 8013c38:	f44f 7380 	mov.w	r3, #256	; 0x100
 8013c3c:	2203      	movs	r2, #3
 8013c3e:	2118      	movs	r1, #24
 8013c40:	4844      	ldr	r0, [pc, #272]	; (8013d54 <emac_start(unsigned char*)+0x140>)
 8013c42:	f7ff f839 	bl	8012cb8 <gpio_init>
 8013c46:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 8013c4a:	f7ff f8fd 	bl	8012e48 <rcu_pll2_config>
 8013c4e:	201c      	movs	r0, #28
 8013c50:	f7ff f9a4 	bl	8012f9c <rcu_osci_on>
 8013c54:	201c      	movs	r0, #28
 8013c56:	f7ff f931 	bl	8012ebc <rcu_osci_stab_wait>
 8013c5a:	2100      	movs	r1, #0
 8013c5c:	f04f 6030 	mov.w	r0, #184549376	; 0xb000000
 8013c60:	f7ff f8e2 	bl	8012e28 <rcu_ckout0_config>
 8013c64:	f44f 0000 	mov.w	r0, #8388608	; 0x800000
 8013c68:	f7ff f8aa 	bl	8012dc0 <gpio_ethernet_phy_select>
 8013c6c:	2302      	movs	r3, #2
 8013c6e:	2203      	movs	r2, #3
 8013c70:	2104      	movs	r1, #4
 8013c72:	4838      	ldr	r0, [pc, #224]	; (8013d54 <emac_start(unsigned char*)+0x140>)
 8013c74:	f7ff f820 	bl	8012cb8 <gpio_init>
 8013c78:	2304      	movs	r3, #4
 8013c7a:	2203      	movs	r2, #3
 8013c7c:	2118      	movs	r1, #24
 8013c7e:	4835      	ldr	r0, [pc, #212]	; (8013d54 <emac_start(unsigned char*)+0x140>)
 8013c80:	f7ff f81a 	bl	8012cb8 <gpio_init>
 8013c84:	2380      	movs	r3, #128	; 0x80
 8013c86:	2203      	movs	r2, #3
 8013c88:	2104      	movs	r1, #4
 8013c8a:	4832      	ldr	r0, [pc, #200]	; (8013d54 <emac_start(unsigned char*)+0x140>)
 8013c8c:	f7ff f814 	bl	8012cb8 <gpio_init>
 8013c90:	2302      	movs	r3, #2
 8013c92:	2203      	movs	r2, #3
 8013c94:	2118      	movs	r1, #24
 8013c96:	4830      	ldr	r0, [pc, #192]	; (8013d58 <emac_start(unsigned char*)+0x144>)
 8013c98:	f7ff f80e 	bl	8012cb8 <gpio_init>
 8013c9c:	2310      	movs	r3, #16
 8013c9e:	2203      	movs	r2, #3
 8013ca0:	2104      	movs	r1, #4
 8013ca2:	482d      	ldr	r0, [pc, #180]	; (8013d58 <emac_start(unsigned char*)+0x144>)
 8013ca4:	f7ff f808 	bl	8012cb8 <gpio_init>
 8013ca8:	2320      	movs	r3, #32
 8013caa:	2203      	movs	r2, #3
 8013cac:	2104      	movs	r1, #4
 8013cae:	482a      	ldr	r0, [pc, #168]	; (8013d58 <emac_start(unsigned char*)+0x144>)
 8013cb0:	f7ff f802 	bl	8012cb8 <gpio_init>
 8013cb4:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8013cb8:	2203      	movs	r2, #3
 8013cba:	2118      	movs	r1, #24
 8013cbc:	4827      	ldr	r0, [pc, #156]	; (8013d5c <emac_start(unsigned char*)+0x148>)
 8013cbe:	f7fe fffb 	bl	8012cb8 <gpio_init>
 8013cc2:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8013cc6:	2203      	movs	r2, #3
 8013cc8:	2118      	movs	r1, #24
 8013cca:	4824      	ldr	r0, [pc, #144]	; (8013d5c <emac_start(unsigned char*)+0x148>)
 8013ccc:	f7fe fff4 	bl	8012cb8 <gpio_init>
 8013cd0:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8013cd4:	2203      	movs	r2, #3
 8013cd6:	2118      	movs	r1, #24
 8013cd8:	4820      	ldr	r0, [pc, #128]	; (8013d5c <emac_start(unsigned char*)+0x148>)
 8013cda:	f7fe ffed 	bl	8012cb8 <gpio_init>
 8013cde:	f240 500e 	movw	r0, #1294	; 0x50e
 8013ce2:	f7ff f881 	bl	8012de8 <rcu_periph_clock_enable>
 8013ce6:	f240 500f 	movw	r0, #1295	; 0x50f
 8013cea:	f7ff f87d 	bl	8012de8 <rcu_periph_clock_enable>
 8013cee:	f44f 60a2 	mov.w	r0, #1296	; 0x510
 8013cf2:	f7ff f879 	bl	8012de8 <rcu_periph_clock_enable>
 8013cf6:	f000 fcdf 	bl	80146b8 <enet_deinit>
 8013cfa:	f000 f93b 	bl	8013f74 <enet_software_reset>
 8013cfe:	4604      	mov	r4, r0
 8013d00:	b138      	cbz	r0, 8013d12 <emac_start(unsigned char*)+0xfe>
 8013d02:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 8013d06:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8013d0a:	2001      	movs	r0, #1
 8013d0c:	f000 fab6 	bl	801427c <enet_init>
 8013d10:	4604      	mov	r4, r0
 8013d12:	4628      	mov	r0, r5
 8013d14:	f000 fd8c 	bl	8014830 <mac_address_get(unsigned char*)>
 8013d18:	4629      	mov	r1, r5
 8013d1a:	2000      	movs	r0, #0
 8013d1c:	f000 fa0e 	bl	801413c <enet_mac_address_set>
 8013d20:	f44f 00e0 	mov.w	r0, #7340032	; 0x700000
 8013d24:	f000 f93a 	bl	8013f9c <enet_descriptors_chain_init>
 8013d28:	f44f 2060 	mov.w	r0, #917504	; 0xe0000
 8013d2c:	f000 f936 	bl	8013f9c <enet_descriptors_chain_init>
 8013d30:	f44f 0140 	mov.w	r1, #12582912	; 0xc00000
 8013d34:	480a      	ldr	r0, [pc, #40]	; (8013d60 <emac_start(unsigned char*)+0x14c>)
 8013d36:	f000 f9fb 	bl	8014130 <enet_transmit_checksum_config>
 8013d3a:	f44f 0140 	mov.w	r1, #12582912	; 0xc00000
 8013d3e:	4809      	ldr	r0, [pc, #36]	; (8013d64 <emac_start(unsigned char*)+0x150>)
 8013d40:	f000 f9f6 	bl	8014130 <enet_transmit_checksum_config>
 8013d44:	f000 fc30 	bl	80145a8 <enet_enable>
 8013d48:	fab4 f084 	clz	r0, r4
 8013d4c:	0940      	lsrs	r0, r0, #5
 8013d4e:	4240      	negs	r0, r0
 8013d50:	bd38      	pop	{r3, r4, r5, pc}
 8013d52:	bf00      	nop
 8013d54:	40010800 	andmi	r0, r1, r0, lsl #16
 8013d58:	40011000 	andmi	r1, r1, r0
 8013d5c:	40010c00 	andmi	r0, r1, r0, lsl #24
 8013d60:	2000f4d8 	ldrdcs	pc, [r0], -r8
 8013d64:	2000f4e8 	andcs	pc, r0, r8, ror #9

08013d68 <net::link_register_read()>:
 8013d68:	b507      	push	{r0, r1, r2, lr}
 8013d6a:	2201      	movs	r2, #1
 8013d6c:	f10d 0306 	add.w	r3, sp, #6
 8013d70:	4611      	mov	r1, r2
 8013d72:	2000      	movs	r0, #0
 8013d74:	f000 f9fa 	bl	801416c <enet_phy_write_read>
 8013d78:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8013d7c:	f080 0004 	eor.w	r0, r0, #4
 8013d80:	f3c0 0080 	ubfx	r0, r0, #2, #1
 8013d84:	b003      	add	sp, #12
 8013d86:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08013d8c <adc_mode_config>:
 8013d8c:	4b06      	ldr	r3, [pc, #24]	; (8013da8 <adc_mode_config+0x1c>)
 8013d8e:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 8013d92:	f422 2270 	bic.w	r2, r2, #983040	; 0xf0000
 8013d96:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 8013d9a:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 8013d9e:	4302      	orrs	r2, r0
 8013da0:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 8013da4:	4770      	bx	lr
 8013da6:	bf00      	nop
 8013da8:	40012000 	andmi	r2, r1, r0

08013dac <adc_special_function_config>:
 8013dac:	b510      	push	{r4, lr}
 8013dae:	f401 7380 	and.w	r3, r1, #256	; 0x100
 8013db2:	f401 6480 	and.w	r4, r1, #1024	; 0x400
 8013db6:	f001 0102 	and.w	r1, r1, #2
 8013dba:	b17a      	cbz	r2, 8013ddc <adc_special_function_config+0x30>
 8013dbc:	b11b      	cbz	r3, 8013dc6 <adc_special_function_config+0x1a>
 8013dbe:	6843      	ldr	r3, [r0, #4]
 8013dc0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8013dc4:	6043      	str	r3, [r0, #4]
 8013dc6:	b11c      	cbz	r4, 8013dd0 <adc_special_function_config+0x24>
 8013dc8:	6843      	ldr	r3, [r0, #4]
 8013dca:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8013dce:	6043      	str	r3, [r0, #4]
 8013dd0:	b119      	cbz	r1, 8013dda <adc_special_function_config+0x2e>
 8013dd2:	6883      	ldr	r3, [r0, #8]
 8013dd4:	f043 0302 	orr.w	r3, r3, #2
 8013dd8:	6083      	str	r3, [r0, #8]
 8013dda:	bd10      	pop	{r4, pc}
 8013ddc:	b11b      	cbz	r3, 8013de6 <adc_special_function_config+0x3a>
 8013dde:	6843      	ldr	r3, [r0, #4]
 8013de0:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8013de4:	6043      	str	r3, [r0, #4]
 8013de6:	b11c      	cbz	r4, 8013df0 <adc_special_function_config+0x44>
 8013de8:	6843      	ldr	r3, [r0, #4]
 8013dea:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8013dee:	6043      	str	r3, [r0, #4]
 8013df0:	2900      	cmp	r1, #0
 8013df2:	d0f2      	beq.n	8013dda <adc_special_function_config+0x2e>
 8013df4:	6883      	ldr	r3, [r0, #8]
 8013df6:	f023 0302 	bic.w	r3, r3, #2
 8013dfa:	e7ed      	b.n	8013dd8 <adc_special_function_config+0x2c>

08013dfc <adc_data_alignment_config>:
 8013dfc:	6883      	ldr	r3, [r0, #8]
 8013dfe:	b119      	cbz	r1, 8013e08 <adc_data_alignment_config+0xc>
 8013e00:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8013e04:	6083      	str	r3, [r0, #8]
 8013e06:	4770      	bx	lr
 8013e08:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8013e0c:	e7fa      	b.n	8013e04 <adc_data_alignment_config+0x8>

08013e0e <adc_enable>:
 8013e0e:	6883      	ldr	r3, [r0, #8]
 8013e10:	07db      	lsls	r3, r3, #31
 8013e12:	bf5e      	ittt	pl
 8013e14:	6883      	ldrpl	r3, [r0, #8]
 8013e16:	f043 0301 	orrpl.w	r3, r3, #1
 8013e1a:	6083      	strpl	r3, [r0, #8]
 8013e1c:	4770      	bx	lr

08013e1e <adc_calibration_enable>:
 8013e1e:	6883      	ldr	r3, [r0, #8]
 8013e20:	f100 0208 	add.w	r2, r0, #8
 8013e24:	f043 0308 	orr.w	r3, r3, #8
 8013e28:	6083      	str	r3, [r0, #8]
 8013e2a:	6813      	ldr	r3, [r2, #0]
 8013e2c:	0719      	lsls	r1, r3, #28
 8013e2e:	d4fc      	bmi.n	8013e2a <adc_calibration_enable+0xc>
 8013e30:	6883      	ldr	r3, [r0, #8]
 8013e32:	f043 0304 	orr.w	r3, r3, #4
 8013e36:	6083      	str	r3, [r0, #8]
 8013e38:	6813      	ldr	r3, [r2, #0]
 8013e3a:	075b      	lsls	r3, r3, #29
 8013e3c:	d4fc      	bmi.n	8013e38 <adc_calibration_enable+0x1a>
 8013e3e:	4770      	bx	lr

08013e40 <adc_tempsensor_vrefint_enable>:
 8013e40:	4a03      	ldr	r2, [pc, #12]	; (8013e50 <adc_tempsensor_vrefint_enable+0x10>)
 8013e42:	f8d2 3408 	ldr.w	r3, [r2, #1032]	; 0x408
 8013e46:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8013e4a:	f8c2 3408 	str.w	r3, [r2, #1032]	; 0x408
 8013e4e:	4770      	bx	lr
 8013e50:	40012000 	andmi	r2, r1, r0

08013e54 <adc_channel_length_config>:
 8013e54:	2901      	cmp	r1, #1
 8013e56:	d002      	beq.n	8013e5e <adc_channel_length_config+0xa>
 8013e58:	2902      	cmp	r1, #2
 8013e5a:	d00c      	beq.n	8013e76 <adc_channel_length_config+0x22>
 8013e5c:	4770      	bx	lr
 8013e5e:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8013e60:	3a01      	subs	r2, #1
 8013e62:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 8013e66:	62c3      	str	r3, [r0, #44]	; 0x2c
 8013e68:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8013e6a:	0512      	lsls	r2, r2, #20
 8013e6c:	f402 0270 	and.w	r2, r2, #15728640	; 0xf00000
 8013e70:	431a      	orrs	r2, r3
 8013e72:	62c2      	str	r2, [r0, #44]	; 0x2c
 8013e74:	4770      	bx	lr
 8013e76:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8013e78:	3a01      	subs	r2, #1
 8013e7a:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 8013e7e:	6383      	str	r3, [r0, #56]	; 0x38
 8013e80:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8013e82:	0512      	lsls	r2, r2, #20
 8013e84:	f402 1240 	and.w	r2, r2, #3145728	; 0x300000
 8013e88:	431a      	orrs	r2, r3
 8013e8a:	6382      	str	r2, [r0, #56]	; 0x38
 8013e8c:	4770      	bx	lr

08013e8e <adc_inserted_channel_config>:
 8013e8e:	b530      	push	{r4, r5, lr}
 8013e90:	6b84      	ldr	r4, [r0, #56]	; 0x38
 8013e92:	6b85      	ldr	r5, [r0, #56]	; 0x38
 8013e94:	f3c4 5401 	ubfx	r4, r4, #20, #2
 8013e98:	1a61      	subs	r1, r4, r1
 8013e9a:	f06f 0404 	mvn.w	r4, #4
 8013e9e:	4361      	muls	r1, r4
 8013ea0:	241f      	movs	r4, #31
 8013ea2:	310f      	adds	r1, #15
 8013ea4:	408c      	lsls	r4, r1
 8013ea6:	ea25 0504 	bic.w	r5, r5, r4
 8013eaa:	fa02 f101 	lsl.w	r1, r2, r1
 8013eae:	4329      	orrs	r1, r5
 8013eb0:	2a09      	cmp	r2, #9
 8013eb2:	6381      	str	r1, [r0, #56]	; 0x38
 8013eb4:	d80b      	bhi.n	8013ece <adc_inserted_channel_config+0x40>
 8013eb6:	2407      	movs	r4, #7
 8013eb8:	6901      	ldr	r1, [r0, #16]
 8013eba:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8013ebe:	4094      	lsls	r4, r2
 8013ec0:	ea21 0104 	bic.w	r1, r1, r4
 8013ec4:	fa03 f202 	lsl.w	r2, r3, r2
 8013ec8:	430a      	orrs	r2, r1
 8013eca:	6102      	str	r2, [r0, #16]
 8013ecc:	bd30      	pop	{r4, r5, pc}
 8013ece:	2a11      	cmp	r2, #17
 8013ed0:	d8fc      	bhi.n	8013ecc <adc_inserted_channel_config+0x3e>
 8013ed2:	2407      	movs	r4, #7
 8013ed4:	3a0a      	subs	r2, #10
 8013ed6:	68c1      	ldr	r1, [r0, #12]
 8013ed8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8013edc:	4094      	lsls	r4, r2
 8013ede:	ea21 0104 	bic.w	r1, r1, r4
 8013ee2:	4093      	lsls	r3, r2
 8013ee4:	430b      	orrs	r3, r1
 8013ee6:	60c3      	str	r3, [r0, #12]
 8013ee8:	e7f0      	b.n	8013ecc <adc_inserted_channel_config+0x3e>

08013eea <adc_external_trigger_source_config>:
 8013eea:	2901      	cmp	r1, #1
 8013eec:	d002      	beq.n	8013ef4 <adc_external_trigger_source_config+0xa>
 8013eee:	2902      	cmp	r1, #2
 8013ef0:	d008      	beq.n	8013f04 <adc_external_trigger_source_config+0x1a>
 8013ef2:	4770      	bx	lr
 8013ef4:	6883      	ldr	r3, [r0, #8]
 8013ef6:	f423 2360 	bic.w	r3, r3, #917504	; 0xe0000
 8013efa:	6083      	str	r3, [r0, #8]
 8013efc:	6883      	ldr	r3, [r0, #8]
 8013efe:	4313      	orrs	r3, r2
 8013f00:	6083      	str	r3, [r0, #8]
 8013f02:	4770      	bx	lr
 8013f04:	6883      	ldr	r3, [r0, #8]
 8013f06:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8013f0a:	e7f6      	b.n	8013efa <adc_external_trigger_source_config+0x10>

08013f0c <adc_external_trigger_config>:
 8013f0c:	f001 0301 	and.w	r3, r1, #1
 8013f10:	f001 0102 	and.w	r1, r1, #2
 8013f14:	b152      	cbz	r2, 8013f2c <adc_external_trigger_config+0x20>
 8013f16:	b11b      	cbz	r3, 8013f20 <adc_external_trigger_config+0x14>
 8013f18:	6883      	ldr	r3, [r0, #8]
 8013f1a:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8013f1e:	6083      	str	r3, [r0, #8]
 8013f20:	b119      	cbz	r1, 8013f2a <adc_external_trigger_config+0x1e>
 8013f22:	6883      	ldr	r3, [r0, #8]
 8013f24:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8013f28:	6083      	str	r3, [r0, #8]
 8013f2a:	4770      	bx	lr
 8013f2c:	b11b      	cbz	r3, 8013f36 <adc_external_trigger_config+0x2a>
 8013f2e:	6883      	ldr	r3, [r0, #8]
 8013f30:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 8013f34:	6083      	str	r3, [r0, #8]
 8013f36:	2900      	cmp	r1, #0
 8013f38:	d0f7      	beq.n	8013f2a <adc_external_trigger_config+0x1e>
 8013f3a:	6883      	ldr	r3, [r0, #8]
 8013f3c:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8013f40:	e7f2      	b.n	8013f28 <adc_external_trigger_config+0x1c>

08013f42 <adc_software_trigger_enable>:
 8013f42:	07ca      	lsls	r2, r1, #31
 8013f44:	bf42      	ittt	mi
 8013f46:	6883      	ldrmi	r3, [r0, #8]
 8013f48:	f443 0380 	orrmi.w	r3, r3, #4194304	; 0x400000
 8013f4c:	6083      	strmi	r3, [r0, #8]
 8013f4e:	078b      	lsls	r3, r1, #30
 8013f50:	bf42      	ittt	mi
 8013f52:	6883      	ldrmi	r3, [r0, #8]
 8013f54:	f443 1300 	orrmi.w	r3, r3, #2097152	; 0x200000
 8013f58:	6083      	strmi	r3, [r0, #8]
 8013f5a:	4770      	bx	lr

08013f5c <enet_delay>:
 8013f5c:	2300      	movs	r3, #0
 8013f5e:	b082      	sub	sp, #8
 8013f60:	9301      	str	r3, [sp, #4]
 8013f62:	9001      	str	r0, [sp, #4]
 8013f64:	9b01      	ldr	r3, [sp, #4]
 8013f66:	b90b      	cbnz	r3, 8013f6c <enet_delay+0x10>
 8013f68:	b002      	add	sp, #8
 8013f6a:	4770      	bx	lr
 8013f6c:	9b01      	ldr	r3, [sp, #4]
 8013f6e:	3b01      	subs	r3, #1
 8013f70:	9301      	str	r3, [sp, #4]
 8013f72:	e7f7      	b.n	8013f64 <enet_delay+0x8>

08013f74 <enet_software_reset>:
 8013f74:	4b07      	ldr	r3, [pc, #28]	; (8013f94 <enet_software_reset+0x20>)
 8013f76:	681a      	ldr	r2, [r3, #0]
 8013f78:	f042 0201 	orr.w	r2, r2, #1
 8013f7c:	601a      	str	r2, [r3, #0]
 8013f7e:	4a06      	ldr	r2, [pc, #24]	; (8013f98 <enet_software_reset+0x24>)
 8013f80:	6819      	ldr	r1, [r3, #0]
 8013f82:	07c9      	lsls	r1, r1, #31
 8013f84:	d501      	bpl.n	8013f8a <enet_software_reset+0x16>
 8013f86:	3a01      	subs	r2, #1
 8013f88:	d1fa      	bne.n	8013f80 <enet_software_reset+0xc>
 8013f8a:	6818      	ldr	r0, [r3, #0]
 8013f8c:	43c0      	mvns	r0, r0
 8013f8e:	f000 0001 	and.w	r0, r0, #1
 8013f92:	4770      	bx	lr
 8013f94:	40029000 	andmi	r9, r2, r0
 8013f98:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

08013f9c <enet_descriptors_chain_init>:
 8013f9c:	f5b0 0fe0 	cmp.w	r0, #7340032	; 0x700000
 8013fa0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013fa2:	4a19      	ldr	r2, [pc, #100]	; (8014008 <enet_descriptors_chain_init+0x6c>)
 8013fa4:	d125      	bne.n	8013ff2 <enet_descriptors_chain_init+0x56>
 8013fa6:	2500      	movs	r5, #0
 8013fa8:	f44f 1680 	mov.w	r6, #1048576	; 0x100000
 8013fac:	2002      	movs	r0, #2
 8013fae:	4b17      	ldr	r3, [pc, #92]	; (801400c <enet_descriptors_chain_init+0x70>)
 8013fb0:	4c17      	ldr	r4, [pc, #92]	; (8014010 <enet_descriptors_chain_init+0x74>)
 8013fb2:	6113      	str	r3, [r2, #16]
 8013fb4:	4a17      	ldr	r2, [pc, #92]	; (8014014 <enet_descriptors_chain_init+0x78>)
 8013fb6:	6013      	str	r3, [r2, #0]
 8013fb8:	2200      	movs	r2, #0
 8013fba:	f240 5ef4 	movw	lr, #1524	; 0x5f4
 8013fbe:	4916      	ldr	r1, [pc, #88]	; (8014018 <enet_descriptors_chain_init+0x7c>)
 8013fc0:	f100 3cff 	add.w	ip, r0, #4294967295	; 0xffffffff
 8013fc4:	600a      	str	r2, [r1, #0]
 8013fc6:	4915      	ldr	r1, [pc, #84]	; (801401c <enet_descriptors_chain_init+0x80>)
 8013fc8:	600a      	str	r2, [r1, #0]
 8013fca:	f103 0110 	add.w	r1, r3, #16
 8013fce:	fb0e 4702 	mla	r7, lr, r2, r4
 8013fd2:	f841 7c08 	str.w	r7, [r1, #-8]
 8013fd6:	4594      	cmp	ip, r2
 8013fd8:	bf94      	ite	ls
 8013fda:	461f      	movls	r7, r3
 8013fdc:	460f      	movhi	r7, r1
 8013fde:	3201      	adds	r2, #1
 8013fe0:	4290      	cmp	r0, r2
 8013fe2:	e941 6504 	strd	r6, r5, [r1, #-16]
 8013fe6:	f841 7c04 	str.w	r7, [r1, #-4]
 8013fea:	f101 0110 	add.w	r1, r1, #16
 8013fee:	d1ee      	bne.n	8013fce <enet_descriptors_chain_init+0x32>
 8013ff0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013ff2:	4b0b      	ldr	r3, [pc, #44]	; (8014020 <enet_descriptors_chain_init+0x84>)
 8013ff4:	f244 55f4 	movw	r5, #17908	; 0x45f4
 8013ff8:	60d3      	str	r3, [r2, #12]
 8013ffa:	4a0a      	ldr	r2, [pc, #40]	; (8014024 <enet_descriptors_chain_init+0x88>)
 8013ffc:	f04f 4600 	mov.w	r6, #2147483648	; 0x80000000
 8014000:	2008      	movs	r0, #8
 8014002:	4c09      	ldr	r4, [pc, #36]	; (8014028 <enet_descriptors_chain_init+0x8c>)
 8014004:	6013      	str	r3, [r2, #0]
 8014006:	e7d7      	b.n	8013fb8 <enet_descriptors_chain_init+0x1c>
 8014008:	40029000 	andmi	r9, r2, r0
 801400c:	2000f4d8 	ldrdcs	pc, [r0], -r8
 8014010:	2000e8f0 	strdcs	lr, [r0], -r0
 8014014:	2000b890 	mulcs	r0, r0, r8
 8014018:	2000b884 	andcs	fp, r0, r4, lsl #17
 801401c:	2000b888 	andcs	fp, r0, r8, lsl #17
 8014020:	2000e870 	andcs	lr, r0, r0, ror r8
 8014024:	2000b88c 	andcs	fp, r0, ip, lsl #17
 8014028:	2000b8d0 	ldrdcs	fp, [r0], -r0

0801402c <enet_frame_receive>:
 801402c:	4a1d      	ldr	r2, [pc, #116]	; (80140a4 <enet_frame_receive+0x78>)
 801402e:	b510      	push	{r4, lr}
 8014030:	6813      	ldr	r3, [r2, #0]
 8014032:	681b      	ldr	r3, [r3, #0]
 8014034:	2b00      	cmp	r3, #0
 8014036:	db33      	blt.n	80140a0 <enet_frame_receive+0x74>
 8014038:	b970      	cbnz	r0, 8014058 <enet_frame_receive+0x2c>
 801403a:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
 801403e:	6813      	ldr	r3, [r2, #0]
 8014040:	6019      	str	r1, [r3, #0]
 8014042:	4919      	ldr	r1, [pc, #100]	; (80140a8 <enet_frame_receive+0x7c>)
 8014044:	6948      	ldr	r0, [r1, #20]
 8014046:	0604      	lsls	r4, r0, #24
 8014048:	d419      	bmi.n	801407e <enet_frame_receive+0x52>
 801404a:	6859      	ldr	r1, [r3, #4]
 801404c:	0448      	lsls	r0, r1, #17
 801404e:	d51b      	bpl.n	8014088 <enet_frame_receive+0x5c>
 8014050:	68db      	ldr	r3, [r3, #12]
 8014052:	2001      	movs	r0, #1
 8014054:	6013      	str	r3, [r2, #0]
 8014056:	bd10      	pop	{r4, pc}
 8014058:	f403 4403 	and.w	r4, r3, #33536	; 0x8300
 801405c:	f5b4 7f40 	cmp.w	r4, #768	; 0x300
 8014060:	d11e      	bne.n	80140a0 <enet_frame_receive+0x74>
 8014062:	f3c3 430d 	ubfx	r3, r3, #16, #14
 8014066:	3b04      	subs	r3, #4
 8014068:	428b      	cmp	r3, r1
 801406a:	d819      	bhi.n	80140a0 <enet_frame_receive+0x74>
 801406c:	2100      	movs	r1, #0
 801406e:	4299      	cmp	r1, r3
 8014070:	6814      	ldr	r4, [r2, #0]
 8014072:	d2e2      	bcs.n	801403a <enet_frame_receive+0xe>
 8014074:	68a4      	ldr	r4, [r4, #8]
 8014076:	5d0c      	ldrb	r4, [r1, r4]
 8014078:	5444      	strb	r4, [r0, r1]
 801407a:	3101      	adds	r1, #1
 801407c:	e7f7      	b.n	801406e <enet_frame_receive+0x42>
 801407e:	2080      	movs	r0, #128	; 0x80
 8014080:	6148      	str	r0, [r1, #20]
 8014082:	2000      	movs	r0, #0
 8014084:	6088      	str	r0, [r1, #8]
 8014086:	e7e0      	b.n	801404a <enet_frame_receive+0x1e>
 8014088:	f411 4f00 	tst.w	r1, #32768	; 0x8000
 801408c:	4906      	ldr	r1, [pc, #24]	; (80140a8 <enet_frame_receive+0x7c>)
 801408e:	bf05      	ittet	eq
 8014090:	3310      	addeq	r3, #16
 8014092:	6809      	ldreq	r1, [r1, #0]
 8014094:	68cb      	ldrne	r3, [r1, #12]
 8014096:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 801409a:	bf08      	it	eq
 801409c:	185b      	addeq	r3, r3, r1
 801409e:	e7d8      	b.n	8014052 <enet_frame_receive+0x26>
 80140a0:	2000      	movs	r0, #0
 80140a2:	e7d8      	b.n	8014056 <enet_frame_receive+0x2a>
 80140a4:	2000b88c 	andcs	fp, r0, ip, lsl #17
 80140a8:	40029000 	andmi	r9, r2, r0

080140ac <enet_frame_transmit>:
 80140ac:	4a1e      	ldr	r2, [pc, #120]	; (8014128 <enet_frame_transmit+0x7c>)
 80140ae:	b530      	push	{r4, r5, lr}
 80140b0:	6813      	ldr	r3, [r2, #0]
 80140b2:	681b      	ldr	r3, [r3, #0]
 80140b4:	2b00      	cmp	r3, #0
 80140b6:	db34      	blt.n	8014122 <enet_frame_transmit+0x76>
 80140b8:	f240 53f4 	movw	r3, #1524	; 0x5f4
 80140bc:	4299      	cmp	r1, r3
 80140be:	d830      	bhi.n	8014122 <enet_frame_transmit+0x76>
 80140c0:	b9e8      	cbnz	r0, 80140fe <enet_frame_transmit+0x52>
 80140c2:	6813      	ldr	r3, [r2, #0]
 80140c4:	4819      	ldr	r0, [pc, #100]	; (801412c <enet_frame_transmit+0x80>)
 80140c6:	6059      	str	r1, [r3, #4]
 80140c8:	6819      	ldr	r1, [r3, #0]
 80140ca:	f041 4130 	orr.w	r1, r1, #2952790016	; 0xb0000000
 80140ce:	6019      	str	r1, [r3, #0]
 80140d0:	6941      	ldr	r1, [r0, #20]
 80140d2:	6944      	ldr	r4, [r0, #20]
 80140d4:	f001 0104 	and.w	r1, r1, #4
 80140d8:	f004 0420 	and.w	r4, r4, #32
 80140dc:	4321      	orrs	r1, r4
 80140de:	d110      	bne.n	8014102 <enet_frame_transmit+0x56>
 80140e0:	6819      	ldr	r1, [r3, #0]
 80140e2:	02c8      	lsls	r0, r1, #11
 80140e4:	d511      	bpl.n	801410a <enet_frame_transmit+0x5e>
 80140e6:	68db      	ldr	r3, [r3, #12]
 80140e8:	2001      	movs	r0, #1
 80140ea:	6013      	str	r3, [r2, #0]
 80140ec:	bd30      	pop	{r4, r5, pc}
 80140ee:	5cc5      	ldrb	r5, [r0, r3]
 80140f0:	68a4      	ldr	r4, [r4, #8]
 80140f2:	551d      	strb	r5, [r3, r4]
 80140f4:	3301      	adds	r3, #1
 80140f6:	428b      	cmp	r3, r1
 80140f8:	6814      	ldr	r4, [r2, #0]
 80140fa:	d1f8      	bne.n	80140ee <enet_frame_transmit+0x42>
 80140fc:	e7e1      	b.n	80140c2 <enet_frame_transmit+0x16>
 80140fe:	2300      	movs	r3, #0
 8014100:	e7f9      	b.n	80140f6 <enet_frame_transmit+0x4a>
 8014102:	6141      	str	r1, [r0, #20]
 8014104:	2100      	movs	r1, #0
 8014106:	6041      	str	r1, [r0, #4]
 8014108:	e7ea      	b.n	80140e0 <enet_frame_transmit+0x34>
 801410a:	f411 1f00 	tst.w	r1, #2097152	; 0x200000
 801410e:	4907      	ldr	r1, [pc, #28]	; (801412c <enet_frame_transmit+0x80>)
 8014110:	bf05      	ittet	eq
 8014112:	3310      	addeq	r3, #16
 8014114:	6809      	ldreq	r1, [r1, #0]
 8014116:	690b      	ldrne	r3, [r1, #16]
 8014118:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 801411c:	bf08      	it	eq
 801411e:	185b      	addeq	r3, r3, r1
 8014120:	e7e2      	b.n	80140e8 <enet_frame_transmit+0x3c>
 8014122:	2000      	movs	r0, #0
 8014124:	e7e2      	b.n	80140ec <enet_frame_transmit+0x40>
 8014126:	bf00      	nop
 8014128:	2000b890 	mulcs	r0, r0, r8
 801412c:	40029000 	andmi	r9, r2, r0

08014130 <enet_transmit_checksum_config>:
 8014130:	6803      	ldr	r3, [r0, #0]
 8014132:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 8014136:	430b      	orrs	r3, r1
 8014138:	6003      	str	r3, [r0, #0]
 801413a:	4770      	bx	lr

0801413c <enet_mac_address_set>:
 801413c:	888a      	ldrh	r2, [r1, #4]
 801413e:	4b03      	ldr	r3, [pc, #12]	; (801414c <enet_mac_address_set+0x10>)
 8014140:	50c2      	str	r2, [r0, r3]
 8014142:	680a      	ldr	r2, [r1, #0]
 8014144:	3304      	adds	r3, #4
 8014146:	50c2      	str	r2, [r0, r3]
 8014148:	4770      	bx	lr
 801414a:	bf00      	nop
 801414c:	40028040 	andmi	r8, r2, r0, asr #32

08014150 <enet_rx_enable>:
 8014150:	4a05      	ldr	r2, [pc, #20]	; (8014168 <enet_rx_enable+0x18>)
 8014152:	6813      	ldr	r3, [r2, #0]
 8014154:	f043 0304 	orr.w	r3, r3, #4
 8014158:	6013      	str	r3, [r2, #0]
 801415a:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 801415e:	6993      	ldr	r3, [r2, #24]
 8014160:	f043 0302 	orr.w	r3, r3, #2
 8014164:	6193      	str	r3, [r2, #24]
 8014166:	4770      	bx	lr
 8014168:	40028000 	andmi	r8, r2, r0

0801416c <enet_phy_write_read>:
 801416c:	b530      	push	{r4, r5, lr}
 801416e:	4604      	mov	r4, r0
 8014170:	4d13      	ldr	r5, [pc, #76]	; (80141c0 <enet_phy_write_read+0x54>)
 8014172:	0192      	lsls	r2, r2, #6
 8014174:	6928      	ldr	r0, [r5, #16]
 8014176:	f402 62f8 	and.w	r2, r2, #1984	; 0x7c0
 801417a:	f420 407f 	bic.w	r0, r0, #65280	; 0xff00
 801417e:	f020 00c3 	bic.w	r0, r0, #195	; 0xc3
 8014182:	4302      	orrs	r2, r0
 8014184:	02c9      	lsls	r1, r1, #11
 8014186:	b289      	uxth	r1, r1
 8014188:	2c02      	cmp	r4, #2
 801418a:	ea42 0204 	orr.w	r2, r2, r4
 801418e:	ea42 0201 	orr.w	r2, r2, r1
 8014192:	bf08      	it	eq
 8014194:	8819      	ldrheq	r1, [r3, #0]
 8014196:	f042 0201 	orr.w	r2, r2, #1
 801419a:	bf08      	it	eq
 801419c:	6169      	streq	r1, [r5, #20]
 801419e:	612a      	str	r2, [r5, #16]
 80141a0:	4907      	ldr	r1, [pc, #28]	; (80141c0 <enet_phy_write_read+0x54>)
 80141a2:	4a08      	ldr	r2, [pc, #32]	; (80141c4 <enet_phy_write_read+0x58>)
 80141a4:	6908      	ldr	r0, [r1, #16]
 80141a6:	07c0      	lsls	r0, r0, #31
 80141a8:	d501      	bpl.n	80141ae <enet_phy_write_read+0x42>
 80141aa:	3a01      	subs	r2, #1
 80141ac:	d1fa      	bne.n	80141a4 <enet_phy_write_read+0x38>
 80141ae:	690a      	ldr	r2, [r1, #16]
 80141b0:	43d2      	mvns	r2, r2
 80141b2:	f002 0001 	and.w	r0, r2, #1
 80141b6:	b90c      	cbnz	r4, 80141bc <enet_phy_write_read+0x50>
 80141b8:	694a      	ldr	r2, [r1, #20]
 80141ba:	801a      	strh	r2, [r3, #0]
 80141bc:	bd30      	pop	{r4, r5, pc}
 80141be:	bf00      	nop
 80141c0:	40028000 	andmi	r8, r2, r0
 80141c4:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

080141c8 <enet_phy_config>:
 80141c8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80141ca:	4d22      	ldr	r5, [pc, #136]	; (8014254 <enet_phy_config+0x8c>)
 80141cc:	2001      	movs	r0, #1
 80141ce:	692c      	ldr	r4, [r5, #16]
 80141d0:	f7fe fee6 	bl	8012fa0 <rcu_clock_freq_get>
 80141d4:	4b20      	ldr	r3, [pc, #128]	; (8014258 <enet_phy_config+0x90>)
 80141d6:	4a21      	ldr	r2, [pc, #132]	; (801425c <enet_phy_config+0x94>)
 80141d8:	4403      	add	r3, r0
 80141da:	4293      	cmp	r3, r2
 80141dc:	f024 041c 	bic.w	r4, r4, #28
 80141e0:	d21f      	bcs.n	8014222 <enet_phy_config+0x5a>
 80141e2:	f044 0408 	orr.w	r4, r4, #8
 80141e6:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80141ea:	612c      	str	r4, [r5, #16]
 80141ec:	2200      	movs	r2, #0
 80141ee:	f8ad 3006 	strh.w	r3, [sp, #6]
 80141f2:	2101      	movs	r1, #1
 80141f4:	2002      	movs	r0, #2
 80141f6:	f10d 0306 	add.w	r3, sp, #6
 80141fa:	f7ff ffb7 	bl	801416c <enet_phy_write_read>
 80141fe:	b310      	cbz	r0, 8014246 <enet_phy_config+0x7e>
 8014200:	2200      	movs	r2, #0
 8014202:	4817      	ldr	r0, [pc, #92]	; (8014260 <enet_phy_config+0x98>)
 8014204:	f7ff feaa 	bl	8013f5c <enet_delay>
 8014208:	2101      	movs	r1, #1
 801420a:	4610      	mov	r0, r2
 801420c:	f10d 0306 	add.w	r3, sp, #6
 8014210:	f7ff ffac 	bl	801416c <enet_phy_write_read>
 8014214:	b1b8      	cbz	r0, 8014246 <enet_phy_config+0x7e>
 8014216:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 801421a:	43c0      	mvns	r0, r0
 801421c:	f3c0 30c0 	ubfx	r0, r0, #15, #1
 8014220:	e012      	b.n	8014248 <enet_phy_config+0x80>
 8014222:	4b10      	ldr	r3, [pc, #64]	; (8014264 <enet_phy_config+0x9c>)
 8014224:	4a10      	ldr	r2, [pc, #64]	; (8014268 <enet_phy_config+0xa0>)
 8014226:	4403      	add	r3, r0
 8014228:	4293      	cmp	r3, r2
 801422a:	d802      	bhi.n	8014232 <enet_phy_config+0x6a>
 801422c:	f044 040c 	orr.w	r4, r4, #12
 8014230:	e7d9      	b.n	80141e6 <enet_phy_config+0x1e>
 8014232:	4b0e      	ldr	r3, [pc, #56]	; (801426c <enet_phy_config+0xa4>)
 8014234:	4a0e      	ldr	r2, [pc, #56]	; (8014270 <enet_phy_config+0xa8>)
 8014236:	4403      	add	r3, r0
 8014238:	4293      	cmp	r3, r2
 801423a:	d3d4      	bcc.n	80141e6 <enet_phy_config+0x1e>
 801423c:	4b0d      	ldr	r3, [pc, #52]	; (8014274 <enet_phy_config+0xac>)
 801423e:	4a0e      	ldr	r2, [pc, #56]	; (8014278 <enet_phy_config+0xb0>)
 8014240:	4403      	add	r3, r0
 8014242:	4293      	cmp	r3, r2
 8014244:	d902      	bls.n	801424c <enet_phy_config+0x84>
 8014246:	2000      	movs	r0, #0
 8014248:	b003      	add	sp, #12
 801424a:	bd30      	pop	{r4, r5, pc}
 801424c:	f044 0404 	orr.w	r4, r4, #4
 8014250:	e7c9      	b.n	80141e6 <enet_phy_config+0x1e>
 8014252:	bf00      	nop
 8014254:	40028000 	andmi	r8, r2, r0
 8014258:	feced300 	cdp2	3, 12, cr13, cr14, cr0, {0}
 801425c:	00e4e1c0 	rsceq	lr, r4, r0, asr #3
 8014260:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 8014264:	fde9f140 	stc2l	1, cr15, [r9, #256]!	; 0x100
 8014268:	017d783f 	cmneq	sp, pc, lsr r8
 801426c:	fc6c7900 	stc2l	9, cr7, [ip], #-0	; <UNPREDICTABLE>
 8014270:	02625a00 	rsbeq	r5, r2, #0, 20
 8014274:	fa0a1f00 	blx	829be7c <__exidx_end+0x2851fc>
 8014278:	01312d00 	teqeq	r1, r0, lsl #26

0801427c <enet_init>:
 801427c:	2300      	movs	r3, #0
 801427e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8014280:	4604      	mov	r4, r0
 8014282:	460d      	mov	r5, r1
 8014284:	4616      	mov	r6, r2
 8014286:	f8ad 3006 	strh.w	r3, [sp, #6]
 801428a:	f7ff ff9d 	bl	80141c8 <enet_phy_config>
 801428e:	2800      	cmp	r0, #0
 8014290:	d039      	beq.n	8014306 <enet_init+0x8a>
 8014292:	4b3c      	ldr	r3, [pc, #240]	; (8014384 <enet_init+0x108>)
 8014294:	4a3c      	ldr	r2, [pc, #240]	; (8014388 <enet_init+0x10c>)
 8014296:	6819      	ldr	r1, [r3, #0]
 8014298:	f44f 50a8 	mov.w	r0, #5376	; 0x1500
 801429c:	400a      	ands	r2, r1
 801429e:	601a      	str	r2, [r3, #0]
 80142a0:	2200      	movs	r2, #0
 80142a2:	605a      	str	r2, [r3, #4]
 80142a4:	609a      	str	r2, [r3, #8]
 80142a6:	60da      	str	r2, [r3, #12]
 80142a8:	6999      	ldr	r1, [r3, #24]
 80142aa:	2c01      	cmp	r4, #1
 80142ac:	f021 01be 	bic.w	r1, r1, #190	; 0xbe
 80142b0:	ea4f 4101 	mov.w	r1, r1, lsl #16
 80142b4:	ea4f 4111 	mov.w	r1, r1, lsr #16
 80142b8:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 80142bc:	6199      	str	r1, [r3, #24]
 80142be:	4933      	ldr	r1, [pc, #204]	; (801438c <enet_init+0x110>)
 80142c0:	f8c1 0080 	str.w	r0, [r1, #128]	; 0x80
 80142c4:	61da      	str	r2, [r3, #28]
 80142c6:	6988      	ldr	r0, [r1, #24]
 80142c8:	4b31      	ldr	r3, [pc, #196]	; (8014390 <enet_init+0x114>)
 80142ca:	ea03 0300 	and.w	r3, r3, r0
 80142ce:	f043 7308 	orr.w	r3, r3, #35651584	; 0x2200000
 80142d2:	618b      	str	r3, [r1, #24]
 80142d4:	680b      	ldr	r3, [r1, #0]
 80142d6:	4b2f      	ldr	r3, [pc, #188]	; (8014394 <enet_init+0x118>)
 80142d8:	600b      	str	r3, [r1, #0]
 80142da:	d01e      	beq.n	801431a <enet_init+0x9e>
 80142dc:	08e3      	lsrs	r3, r4, #3
 80142de:	0861      	lsrs	r1, r4, #1
 80142e0:	f401 5100 	and.w	r1, r1, #8192	; 0x2000
 80142e4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80142e8:	430b      	orrs	r3, r1
 80142ea:	f8ad 3006 	strh.w	r3, [sp, #6]
 80142ee:	2101      	movs	r1, #1
 80142f0:	2002      	movs	r0, #2
 80142f2:	f10d 0306 	add.w	r3, sp, #6
 80142f6:	f7ff ff39 	bl	801416c <enet_phy_write_read>
 80142fa:	b158      	cbz	r0, 8014314 <enet_init+0x98>
 80142fc:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 8014300:	f7ff fe2c 	bl	8013f5c <enet_delay>
 8014304:	e05d      	b.n	80143c2 <enet_init+0x146>
 8014306:	4824      	ldr	r0, [pc, #144]	; (8014398 <enet_init+0x11c>)
 8014308:	f7ff fe28 	bl	8013f5c <enet_delay>
 801430c:	f7ff ff5c 	bl	80141c8 <enet_phy_config>
 8014310:	2800      	cmp	r0, #0
 8014312:	d1be      	bne.n	8014292 <enet_init+0x16>
 8014314:	2000      	movs	r0, #0
 8014316:	b003      	add	sp, #12
 8014318:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801431a:	4614      	mov	r4, r2
 801431c:	4f1f      	ldr	r7, [pc, #124]	; (801439c <enet_init+0x120>)
 801431e:	2201      	movs	r2, #1
 8014320:	2000      	movs	r0, #0
 8014322:	4611      	mov	r1, r2
 8014324:	f10d 0306 	add.w	r3, sp, #6
 8014328:	f7ff ff20 	bl	801416c <enet_phy_write_read>
 801432c:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8014330:	3401      	adds	r4, #1
 8014332:	f002 0204 	and.w	r2, r2, #4
 8014336:	f8ad 2006 	strh.w	r2, [sp, #6]
 801433a:	b912      	cbnz	r2, 8014342 <enet_init+0xc6>
 801433c:	42bc      	cmp	r4, r7
 801433e:	d1ee      	bne.n	801431e <enet_init+0xa2>
 8014340:	e7e8      	b.n	8014314 <enet_init+0x98>
 8014342:	42bc      	cmp	r4, r7
 8014344:	d0e6      	beq.n	8014314 <enet_init+0x98>
 8014346:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 801434a:	2101      	movs	r1, #1
 801434c:	f8ad 2006 	strh.w	r2, [sp, #6]
 8014350:	2002      	movs	r0, #2
 8014352:	2200      	movs	r2, #0
 8014354:	f7ff ff0a 	bl	801416c <enet_phy_write_read>
 8014358:	2800      	cmp	r0, #0
 801435a:	d0db      	beq.n	8014314 <enet_init+0x98>
 801435c:	2400      	movs	r4, #0
 801435e:	4f0f      	ldr	r7, [pc, #60]	; (801439c <enet_init+0x120>)
 8014360:	2201      	movs	r2, #1
 8014362:	2000      	movs	r0, #0
 8014364:	4611      	mov	r1, r2
 8014366:	f10d 0306 	add.w	r3, sp, #6
 801436a:	f7ff feff 	bl	801416c <enet_phy_write_read>
 801436e:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8014372:	3401      	adds	r4, #1
 8014374:	f002 0220 	and.w	r2, r2, #32
 8014378:	f8ad 2006 	strh.w	r2, [sp, #6]
 801437c:	b982      	cbnz	r2, 80143a0 <enet_init+0x124>
 801437e:	42bc      	cmp	r4, r7
 8014380:	d1ee      	bne.n	8014360 <enet_init+0xe4>
 8014382:	e7c7      	b.n	8014314 <enet_init+0x98>
 8014384:	40028000 	andmi	r8, r2, r0
 8014388:	fd30810f 	ldc2	1, cr8, [r0, #-60]!	; 0xffffffc4
 801438c:	40029000 	andmi	r9, r2, r0
 8014390:	f8de3f23 			; <UNDEFINED> instruction: 0xf8de3f23
 8014394:	02c16000 	sbceq	r6, r1, #0
 8014398:	008fffff 	strdeq	pc, [pc], pc	; <UNPREDICTABLE>
 801439c:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 80143a0:	42bc      	cmp	r4, r7
 80143a2:	d0b7      	beq.n	8014314 <enet_init+0x98>
 80143a4:	2101      	movs	r1, #1
 80143a6:	2210      	movs	r2, #16
 80143a8:	2000      	movs	r0, #0
 80143aa:	f7ff fedf 	bl	801416c <enet_phy_write_read>
 80143ae:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80143b2:	f3c3 0480 	ubfx	r4, r3, #2, #1
 80143b6:	0799      	lsls	r1, r3, #30
 80143b8:	ea4f 24c4 	mov.w	r4, r4, lsl #11
 80143bc:	d401      	bmi.n	80143c2 <enet_init+0x146>
 80143be:	f444 4480 	orr.w	r4, r4, #16384	; 0x4000
 80143c2:	4b63      	ldr	r3, [pc, #396]	; (8014550 <enet_init+0x2d4>)
 80143c4:	681a      	ldr	r2, [r3, #0]
 80143c6:	f422 42b0 	bic.w	r2, r2, #22528	; 0x5800
 80143ca:	4314      	orrs	r4, r2
 80143cc:	056a      	lsls	r2, r5, #21
 80143ce:	601c      	str	r4, [r3, #0]
 80143d0:	d50b      	bpl.n	80143ea <enet_init+0x16e>
 80143d2:	681a      	ldr	r2, [r3, #0]
 80143d4:	f005 6580 	and.w	r5, r5, #67108864	; 0x4000000
 80143d8:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80143dc:	601a      	str	r2, [r3, #0]
 80143de:	4a5d      	ldr	r2, [pc, #372]	; (8014554 <enet_init+0x2d8>)
 80143e0:	6993      	ldr	r3, [r2, #24]
 80143e2:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 80143e6:	431d      	orrs	r5, r3
 80143e8:	6195      	str	r5, [r2, #24]
 80143ea:	4959      	ldr	r1, [pc, #356]	; (8014550 <enet_init+0x2d4>)
 80143ec:	684b      	ldr	r3, [r1, #4]
 80143ee:	431e      	orrs	r6, r3
 80143f0:	4b59      	ldr	r3, [pc, #356]	; (8014558 <enet_init+0x2dc>)
 80143f2:	604e      	str	r6, [r1, #4]
 80143f4:	681a      	ldr	r2, [r3, #0]
 80143f6:	07d7      	lsls	r7, r2, #31
 80143f8:	d510      	bpl.n	801441c <enet_init+0x1a0>
 80143fa:	685a      	ldr	r2, [r3, #4]
 80143fc:	680c      	ldr	r4, [r1, #0]
 80143fe:	f002 0080 	and.w	r0, r2, #128	; 0x80
 8014402:	f024 0480 	bic.w	r4, r4, #128	; 0x80
 8014406:	4320      	orrs	r0, r4
 8014408:	6008      	str	r0, [r1, #0]
 801440a:	4852      	ldr	r0, [pc, #328]	; (8014554 <enet_init+0x2d8>)
 801440c:	0892      	lsrs	r2, r2, #2
 801440e:	6981      	ldr	r1, [r0, #24]
 8014410:	f002 02c0 	and.w	r2, r2, #192	; 0xc0
 8014414:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8014418:	430a      	orrs	r2, r1
 801441a:	6182      	str	r2, [r0, #24]
 801441c:	681a      	ldr	r2, [r3, #0]
 801441e:	0796      	lsls	r6, r2, #30
 8014420:	d508      	bpl.n	8014434 <enet_init+0x1b8>
 8014422:	494c      	ldr	r1, [pc, #304]	; (8014554 <enet_init+0x2d8>)
 8014424:	6898      	ldr	r0, [r3, #8]
 8014426:	680a      	ldr	r2, [r1, #0]
 8014428:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 801442c:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8014430:	4302      	orrs	r2, r0
 8014432:	600a      	str	r2, [r1, #0]
 8014434:	681a      	ldr	r2, [r3, #0]
 8014436:	0755      	lsls	r5, r2, #29
 8014438:	d508      	bpl.n	801444c <enet_init+0x1d0>
 801443a:	4946      	ldr	r1, [pc, #280]	; (8014554 <enet_init+0x2d8>)
 801443c:	68d8      	ldr	r0, [r3, #12]
 801443e:	680a      	ldr	r2, [r1, #0]
 8014440:	f422 027e 	bic.w	r2, r2, #16646144	; 0xfe0000
 8014444:	f422 527c 	bic.w	r2, r2, #16128	; 0x3f00
 8014448:	4302      	orrs	r2, r0
 801444a:	600a      	str	r2, [r1, #0]
 801444c:	681a      	ldr	r2, [r3, #0]
 801444e:	0714      	lsls	r4, r2, #28
 8014450:	d508      	bpl.n	8014464 <enet_init+0x1e8>
 8014452:	4940      	ldr	r1, [pc, #256]	; (8014554 <enet_init+0x2d8>)
 8014454:	6918      	ldr	r0, [r3, #16]
 8014456:	680a      	ldr	r2, [r1, #0]
 8014458:	f422 4240 	bic.w	r2, r2, #49152	; 0xc000
 801445c:	f022 0202 	bic.w	r2, r2, #2
 8014460:	4302      	orrs	r2, r0
 8014462:	600a      	str	r2, [r1, #0]
 8014464:	681a      	ldr	r2, [r3, #0]
 8014466:	06d0      	lsls	r0, r2, #27
 8014468:	d506      	bpl.n	8014478 <enet_init+0x1fc>
 801446a:	493a      	ldr	r1, [pc, #232]	; (8014554 <enet_init+0x2d8>)
 801446c:	4a3b      	ldr	r2, [pc, #236]	; (801455c <enet_init+0x2e0>)
 801446e:	6988      	ldr	r0, [r1, #24]
 8014470:	4002      	ands	r2, r0
 8014472:	6958      	ldr	r0, [r3, #20]
 8014474:	4302      	orrs	r2, r0
 8014476:	618a      	str	r2, [r1, #24]
 8014478:	681a      	ldr	r2, [r3, #0]
 801447a:	0691      	lsls	r1, r2, #26
 801447c:	d508      	bpl.n	8014490 <enet_init+0x214>
 801447e:	4935      	ldr	r1, [pc, #212]	; (8014554 <enet_init+0x2d8>)
 8014480:	6998      	ldr	r0, [r3, #24]
 8014482:	698a      	ldr	r2, [r1, #24]
 8014484:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
 8014488:	f022 0204 	bic.w	r2, r2, #4
 801448c:	4302      	orrs	r2, r0
 801448e:	618a      	str	r2, [r1, #24]
 8014490:	681a      	ldr	r2, [r3, #0]
 8014492:	0652      	lsls	r2, r2, #25
 8014494:	d506      	bpl.n	80144a4 <enet_init+0x228>
 8014496:	492e      	ldr	r1, [pc, #184]	; (8014550 <enet_init+0x2d4>)
 8014498:	69d8      	ldr	r0, [r3, #28]
 801449a:	69ca      	ldr	r2, [r1, #28]
 801449c:	0c52      	lsrs	r2, r2, #17
 801449e:	0452      	lsls	r2, r2, #17
 80144a0:	4302      	orrs	r2, r0
 80144a2:	61ca      	str	r2, [r1, #28]
 80144a4:	681a      	ldr	r2, [r3, #0]
 80144a6:	0617      	lsls	r7, r2, #24
 80144a8:	d517      	bpl.n	80144da <enet_init+0x25e>
 80144aa:	4c29      	ldr	r4, [pc, #164]	; (8014550 <enet_init+0x2d4>)
 80144ac:	6a1a      	ldr	r2, [r3, #32]
 80144ae:	69a0      	ldr	r0, [r4, #24]
 80144b0:	f422 417f 	bic.w	r1, r2, #65280	; 0xff00
 80144b4:	f020 00be 	bic.w	r0, r0, #190	; 0xbe
 80144b8:	0400      	lsls	r0, r0, #16
 80144ba:	0c00      	lsrs	r0, r0, #16
 80144bc:	f021 0141 	bic.w	r1, r1, #65	; 0x41
 80144c0:	4301      	orrs	r1, r0
 80144c2:	4824      	ldr	r0, [pc, #144]	; (8014554 <enet_init+0x2d8>)
 80144c4:	61a1      	str	r1, [r4, #24]
 80144c6:	f8d0 1080 	ldr.w	r1, [r0, #128]	; 0x80
 80144ca:	0a12      	lsrs	r2, r2, #8
 80144cc:	f021 0177 	bic.w	r1, r1, #119	; 0x77
 80144d0:	f002 0277 	and.w	r2, r2, #119	; 0x77
 80144d4:	430a      	orrs	r2, r1
 80144d6:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 80144da:	681a      	ldr	r2, [r3, #0]
 80144dc:	05d6      	lsls	r6, r2, #23
 80144de:	bf42      	ittt	mi
 80144e0:	6a59      	ldrmi	r1, [r3, #36]	; 0x24
 80144e2:	4a1b      	ldrmi	r2, [pc, #108]	; (8014550 <enet_init+0x2d4>)
 80144e4:	6091      	strmi	r1, [r2, #8]
 80144e6:	681a      	ldr	r2, [r3, #0]
 80144e8:	0595      	lsls	r5, r2, #22
 80144ea:	bf42      	ittt	mi
 80144ec:	4a18      	ldrmi	r2, [pc, #96]	; (8014550 <enet_init+0x2d4>)
 80144ee:	6a99      	ldrmi	r1, [r3, #40]	; 0x28
 80144f0:	60d1      	strmi	r1, [r2, #12]
 80144f2:	681a      	ldr	r2, [r3, #0]
 80144f4:	0554      	lsls	r4, r2, #21
 80144f6:	d508      	bpl.n	801450a <enet_init+0x28e>
 80144f8:	4915      	ldr	r1, [pc, #84]	; (8014550 <enet_init+0x2d4>)
 80144fa:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 80144fc:	684a      	ldr	r2, [r1, #4]
 80144fe:	f422 62fb 	bic.w	r2, r2, #2008	; 0x7d8
 8014502:	f022 0206 	bic.w	r2, r2, #6
 8014506:	4302      	orrs	r2, r0
 8014508:	604a      	str	r2, [r1, #4]
 801450a:	681a      	ldr	r2, [r3, #0]
 801450c:	0510      	lsls	r0, r2, #20
 801450e:	d508      	bpl.n	8014522 <enet_init+0x2a6>
 8014510:	490f      	ldr	r1, [pc, #60]	; (8014550 <enet_init+0x2d4>)
 8014512:	6b18      	ldr	r0, [r3, #48]	; 0x30
 8014514:	680a      	ldr	r2, [r1, #0]
 8014516:	f422 3291 	bic.w	r2, r2, #74240	; 0x12200
 801451a:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 801451e:	4302      	orrs	r2, r0
 8014520:	600a      	str	r2, [r1, #0]
 8014522:	681a      	ldr	r2, [r3, #0]
 8014524:	04d1      	lsls	r1, r2, #19
 8014526:	d506      	bpl.n	8014536 <enet_init+0x2ba>
 8014528:	4909      	ldr	r1, [pc, #36]	; (8014550 <enet_init+0x2d4>)
 801452a:	6b58      	ldr	r0, [r3, #52]	; 0x34
 801452c:	680a      	ldr	r2, [r1, #0]
 801452e:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 8014532:	4302      	orrs	r2, r0
 8014534:	600a      	str	r2, [r1, #0]
 8014536:	681a      	ldr	r2, [r3, #0]
 8014538:	0492      	lsls	r2, r2, #18
 801453a:	d506      	bpl.n	801454a <enet_init+0x2ce>
 801453c:	4904      	ldr	r1, [pc, #16]	; (8014550 <enet_init+0x2d4>)
 801453e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014540:	680a      	ldr	r2, [r1, #0]
 8014542:	f422 2260 	bic.w	r2, r2, #917504	; 0xe0000
 8014546:	4313      	orrs	r3, r2
 8014548:	600b      	str	r3, [r1, #0]
 801454a:	2001      	movs	r0, #1
 801454c:	e6e3      	b.n	8014316 <enet_init+0x9a>
 801454e:	bf00      	nop
 8014550:	40028000 	andmi	r8, r2, r0
 8014554:	40029000 	andmi	r9, r2, r0
 8014558:	2000b894 	mulcs	r0, r4, r8
 801455c:	fdde3fe7 	ldc2l	15, cr3, [lr, #924]	; 0x39c

08014560 <enet_txfifo_flush>:
 8014560:	4b06      	ldr	r3, [pc, #24]	; (801457c <enet_txfifo_flush+0x1c>)
 8014562:	4807      	ldr	r0, [pc, #28]	; (8014580 <enet_txfifo_flush+0x20>)
 8014564:	699a      	ldr	r2, [r3, #24]
 8014566:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 801456a:	619a      	str	r2, [r3, #24]
 801456c:	699a      	ldr	r2, [r3, #24]
 801456e:	02d2      	lsls	r2, r2, #11
 8014570:	d502      	bpl.n	8014578 <enet_txfifo_flush+0x18>
 8014572:	3801      	subs	r0, #1
 8014574:	d1fa      	bne.n	801456c <enet_txfifo_flush+0xc>
 8014576:	4770      	bx	lr
 8014578:	2001      	movs	r0, #1
 801457a:	4770      	bx	lr
 801457c:	40029000 	andmi	r9, r2, r0
 8014580:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

08014584 <enet_tx_enable>:
 8014584:	4a06      	ldr	r2, [pc, #24]	; (80145a0 <enet_tx_enable+0x1c>)
 8014586:	b508      	push	{r3, lr}
 8014588:	6813      	ldr	r3, [r2, #0]
 801458a:	f043 0308 	orr.w	r3, r3, #8
 801458e:	6013      	str	r3, [r2, #0]
 8014590:	f7ff ffe6 	bl	8014560 <enet_txfifo_flush>
 8014594:	4a03      	ldr	r2, [pc, #12]	; (80145a4 <enet_tx_enable+0x20>)
 8014596:	6993      	ldr	r3, [r2, #24]
 8014598:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 801459c:	6193      	str	r3, [r2, #24]
 801459e:	bd08      	pop	{r3, pc}
 80145a0:	40028000 	andmi	r8, r2, r0
 80145a4:	40029000 	andmi	r9, r2, r0

080145a8 <enet_enable>:
 80145a8:	b508      	push	{r3, lr}
 80145aa:	f7ff ffeb 	bl	8014584 <enet_tx_enable>
 80145ae:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80145b2:	f7ff bdcd 	b.w	8014150 <enet_rx_enable>

080145b6 <enet_desc_information_get>:
 80145b6:	2905      	cmp	r1, #5
 80145b8:	d817      	bhi.n	80145ea <enet_desc_information_get+0x34>
 80145ba:	e8df f001 	tbb	[pc, r1]
 80145be:	03091012 	movweq	r1, #36882	; 0x9012
 80145c2:	68401007 	stmdavs	r0, {r0, r1, r2, ip}^
 80145c6:	f3c0 000c 	ubfx	r0, r0, #0, #13
 80145ca:	4770      	bx	lr
 80145cc:	88c0      	ldrh	r0, [r0, #6]
 80145ce:	e7fa      	b.n	80145c6 <enet_desc_information_get+0x10>
 80145d0:	8840      	ldrh	r0, [r0, #2]
 80145d2:	f3c0 000d 	ubfx	r0, r0, #0, #14
 80145d6:	2804      	cmp	r0, #4
 80145d8:	d90a      	bls.n	80145f0 <enet_desc_information_get+0x3a>
 80145da:	3804      	subs	r0, #4
 80145dc:	4770      	bx	lr
 80145de:	6880      	ldr	r0, [r0, #8]
 80145e0:	4770      	bx	lr
 80145e2:	6800      	ldr	r0, [r0, #0]
 80145e4:	f3c0 00c3 	ubfx	r0, r0, #3, #4
 80145e8:	4770      	bx	lr
 80145ea:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80145ee:	4770      	bx	lr
 80145f0:	2000      	movs	r0, #0
 80145f2:	4770      	bx	lr

080145f4 <enet_rxframe_drop>:
 80145f4:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 80145f8:	4814      	ldr	r0, [pc, #80]	; (801464c <enet_rxframe_drop+0x58>)
 80145fa:	b510      	push	{r4, lr}
 80145fc:	6802      	ldr	r2, [r0, #0]
 80145fe:	4914      	ldr	r1, [pc, #80]	; (8014650 <enet_rxframe_drop+0x5c>)
 8014600:	6854      	ldr	r4, [r2, #4]
 8014602:	6013      	str	r3, [r2, #0]
 8014604:	f414 4f80 	tst.w	r4, #16384	; 0x4000
 8014608:	680b      	ldr	r3, [r1, #0]
 801460a:	d009      	beq.n	8014620 <enet_rxframe_drop+0x2c>
 801460c:	b12b      	cbz	r3, 801461a <enet_rxframe_drop+0x26>
 801460e:	68da      	ldr	r2, [r3, #12]
 8014610:	6002      	str	r2, [r0, #0]
 8014612:	681a      	ldr	r2, [r3, #0]
 8014614:	b1ba      	cbz	r2, 8014646 <enet_rxframe_drop+0x52>
 8014616:	600a      	str	r2, [r1, #0]
 8014618:	bd10      	pop	{r4, pc}
 801461a:	68d3      	ldr	r3, [r2, #12]
 801461c:	6003      	str	r3, [r0, #0]
 801461e:	e7fb      	b.n	8014618 <enet_rxframe_drop+0x24>
 8014620:	f414 4f00 	tst.w	r4, #32768	; 0x8000
 8014624:	4c0b      	ldr	r4, [pc, #44]	; (8014654 <enet_rxframe_drop+0x60>)
 8014626:	d006      	beq.n	8014636 <enet_rxframe_drop+0x42>
 8014628:	68e2      	ldr	r2, [r4, #12]
 801462a:	6002      	str	r2, [r0, #0]
 801462c:	2b00      	cmp	r3, #0
 801462e:	d0f3      	beq.n	8014618 <enet_rxframe_drop+0x24>
 8014630:	681b      	ldr	r3, [r3, #0]
 8014632:	600b      	str	r3, [r1, #0]
 8014634:	e7f0      	b.n	8014618 <enet_rxframe_drop+0x24>
 8014636:	6824      	ldr	r4, [r4, #0]
 8014638:	3210      	adds	r2, #16
 801463a:	f3c4 0484 	ubfx	r4, r4, #2, #5
 801463e:	4422      	add	r2, r4
 8014640:	6002      	str	r2, [r0, #0]
 8014642:	2b00      	cmp	r3, #0
 8014644:	d0e8      	beq.n	8014618 <enet_rxframe_drop+0x24>
 8014646:	3310      	adds	r3, #16
 8014648:	e7f3      	b.n	8014632 <enet_rxframe_drop+0x3e>
 801464a:	bf00      	nop
 801464c:	2000b88c 	andcs	fp, r0, ip, lsl #17
 8014650:	2000b884 	andcs	fp, r0, r4, lsl #17
 8014654:	40029000 	andmi	r9, r2, r0

08014658 <enet_rxframe_size_get>:
 8014658:	b508      	push	{r3, lr}
 801465a:	4b0c      	ldr	r3, [pc, #48]	; (801468c <enet_rxframe_size_get+0x34>)
 801465c:	681b      	ldr	r3, [r3, #0]
 801465e:	6818      	ldr	r0, [r3, #0]
 8014660:	2800      	cmp	r0, #0
 8014662:	db10      	blt.n	8014686 <enet_rxframe_size_get+0x2e>
 8014664:	f400 4303 	and.w	r3, r0, #33536	; 0x8300
 8014668:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801466c:	d003      	beq.n	8014676 <enet_rxframe_size_get+0x1e>
 801466e:	f7ff ffc1 	bl	80145f4 <enet_rxframe_drop>
 8014672:	2001      	movs	r0, #1
 8014674:	bd08      	pop	{r3, pc}
 8014676:	f000 0321 	and.w	r3, r0, #33	; 0x21
 801467a:	2b21      	cmp	r3, #33	; 0x21
 801467c:	d0f7      	beq.n	801466e <enet_rxframe_size_get+0x16>
 801467e:	f3c0 400d 	ubfx	r0, r0, #16, #14
 8014682:	3804      	subs	r0, #4
 8014684:	e7f6      	b.n	8014674 <enet_rxframe_size_get+0x1c>
 8014686:	2000      	movs	r0, #0
 8014688:	e7f4      	b.n	8014674 <enet_rxframe_size_get+0x1c>
 801468a:	bf00      	nop
 801468c:	2000b88c 	andcs	fp, r0, ip, lsl #17

08014690 <enet_initpara_reset>:
 8014690:	2200      	movs	r2, #0
 8014692:	4b08      	ldr	r3, [pc, #32]	; (80146b4 <enet_initpara_reset+0x24>)
 8014694:	e9c3 2200 	strd	r2, r2, [r3]
 8014698:	e9c3 2202 	strd	r2, r2, [r3, #8]
 801469c:	e9c3 2204 	strd	r2, r2, [r3, #16]
 80146a0:	e9c3 2206 	strd	r2, r2, [r3, #24]
 80146a4:	e9c3 2208 	strd	r2, r2, [r3, #32]
 80146a8:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 80146ac:	e9c3 220c 	strd	r2, r2, [r3, #48]	; 0x30
 80146b0:	639a      	str	r2, [r3, #56]	; 0x38
 80146b2:	4770      	bx	lr
 80146b4:	2000b894 	mulcs	r0, r4, r8

080146b8 <enet_deinit>:
 80146b8:	b508      	push	{r3, lr}
 80146ba:	f640 200e 	movw	r0, #2574	; 0xa0e
 80146be:	f7fe fbae 	bl	8012e1e <rcu_periph_reset_enable>
 80146c2:	f640 200e 	movw	r0, #2574	; 0xa0e
 80146c6:	f7fe fbac 	bl	8012e22 <rcu_periph_reset_disable>
 80146ca:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80146ce:	f7ff bfdf 	b.w	8014690 <enet_initpara_reset>
	...

080146d4 <i2c_clock_config>:
 80146d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80146d6:	4605      	mov	r5, r0
 80146d8:	2002      	movs	r0, #2
 80146da:	460c      	mov	r4, r1
 80146dc:	4617      	mov	r7, r2
 80146de:	f7fe fc5f 	bl	8012fa0 <rcu_clock_freq_get>
 80146e2:	4603      	mov	r3, r0
 80146e4:	4828      	ldr	r0, [pc, #160]	; (8014788 <i2c_clock_config+0xb4>)
 80146e6:	4a29      	ldr	r2, [pc, #164]	; (801478c <i2c_clock_config+0xb8>)
 80146e8:	fbb3 f0f0 	udiv	r0, r3, r0
 80146ec:	4293      	cmp	r3, r2
 80146ee:	bf94      	ite	ls
 80146f0:	4601      	movls	r1, r0
 80146f2:	213f      	movhi	r1, #63	; 0x3f
 80146f4:	686e      	ldr	r6, [r5, #4]
 80146f6:	4a26      	ldr	r2, [pc, #152]	; (8014790 <i2c_clock_config+0xbc>)
 80146f8:	f026 063f 	bic.w	r6, r6, #63	; 0x3f
 80146fc:	430e      	orrs	r6, r1
 80146fe:	4294      	cmp	r4, r2
 8014700:	606e      	str	r6, [r5, #4]
 8014702:	d816      	bhi.n	8014732 <i2c_clock_config+0x5e>
 8014704:	3001      	adds	r0, #1
 8014706:	283e      	cmp	r0, #62	; 0x3e
 8014708:	d90d      	bls.n	8014726 <i2c_clock_config+0x52>
 801470a:	223f      	movs	r2, #63	; 0x3f
 801470c:	622a      	str	r2, [r5, #32]
 801470e:	0064      	lsls	r4, r4, #1
 8014710:	fbb3 f4f4 	udiv	r4, r3, r4
 8014714:	2c04      	cmp	r4, #4
 8014716:	bf38      	it	cc
 8014718:	2404      	movcc	r4, #4
 801471a:	69ea      	ldr	r2, [r5, #28]
 801471c:	f3c4 040b 	ubfx	r4, r4, #0, #12
 8014720:	4314      	orrs	r4, r2
 8014722:	61ec      	str	r4, [r5, #28]
 8014724:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014726:	2802      	cmp	r0, #2
 8014728:	d801      	bhi.n	801472e <i2c_clock_config+0x5a>
 801472a:	2202      	movs	r2, #2
 801472c:	e7ee      	b.n	801470c <i2c_clock_config+0x38>
 801472e:	6228      	str	r0, [r5, #32]
 8014730:	e7ed      	b.n	801470e <i2c_clock_config+0x3a>
 8014732:	4a18      	ldr	r2, [pc, #96]	; (8014794 <i2c_clock_config+0xc0>)
 8014734:	4294      	cmp	r4, r2
 8014736:	d8f5      	bhi.n	8014724 <i2c_clock_config+0x50>
 8014738:	f44f 7296 	mov.w	r2, #300	; 0x12c
 801473c:	4351      	muls	r1, r2
 801473e:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8014742:	fbb1 f1f2 	udiv	r1, r1, r2
 8014746:	3101      	adds	r1, #1
 8014748:	6229      	str	r1, [r5, #32]
 801474a:	b9a7      	cbnz	r7, 8014776 <i2c_clock_config+0xa2>
 801474c:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8014750:	fbb3 f4f4 	udiv	r4, r3, r4
 8014754:	69eb      	ldr	r3, [r5, #28]
 8014756:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 801475a:	61eb      	str	r3, [r5, #28]
 801475c:	f3c4 030b 	ubfx	r3, r4, #0, #12
 8014760:	b90b      	cbnz	r3, 8014766 <i2c_clock_config+0x92>
 8014762:	f044 0401 	orr.w	r4, r4, #1
 8014766:	69eb      	ldr	r3, [r5, #28]
 8014768:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 801476c:	61eb      	str	r3, [r5, #28]
 801476e:	69eb      	ldr	r3, [r5, #28]
 8014770:	4323      	orrs	r3, r4
 8014772:	61eb      	str	r3, [r5, #28]
 8014774:	e7d6      	b.n	8014724 <i2c_clock_config+0x50>
 8014776:	2219      	movs	r2, #25
 8014778:	4354      	muls	r4, r2
 801477a:	fbb3 f4f4 	udiv	r4, r3, r4
 801477e:	69eb      	ldr	r3, [r5, #28]
 8014780:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8014784:	e7e9      	b.n	801475a <i2c_clock_config+0x86>
 8014786:	bf00      	nop
 8014788:	000f4240 	andeq	r4, pc, r0, asr #4
 801478c:	03c14dbf 	biceq	r4, r1, #12224	; 0x2fc0
 8014790:	000186a0 	andeq	r8, r1, r0, lsr #13
 8014794:	00061a80 	andeq	r1, r6, r0, lsl #21

08014798 <i2c_ack_config>:
 8014798:	6803      	ldr	r3, [r0, #0]
 801479a:	2901      	cmp	r1, #1
 801479c:	bf0c      	ite	eq
 801479e:	f443 6380 	orreq.w	r3, r3, #1024	; 0x400
 80147a2:	f423 6380 	bicne.w	r3, r3, #1024	; 0x400
 80147a6:	6003      	str	r3, [r0, #0]
 80147a8:	4770      	bx	lr

080147aa <i2c_ackpos_config>:
 80147aa:	6803      	ldr	r3, [r0, #0]
 80147ac:	b919      	cbnz	r1, 80147b6 <i2c_ackpos_config+0xc>
 80147ae:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 80147b2:	6003      	str	r3, [r0, #0]
 80147b4:	4770      	bx	lr
 80147b6:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80147ba:	e7fa      	b.n	80147b2 <i2c_ackpos_config+0x8>

080147bc <i2c_master_addressing>:
 80147bc:	3202      	adds	r2, #2
 80147be:	bf0c      	ite	eq
 80147c0:	f021 0101 	biceq.w	r1, r1, #1
 80147c4:	f041 0101 	orrne.w	r1, r1, #1
 80147c8:	6101      	str	r1, [r0, #16]
 80147ca:	4770      	bx	lr

080147cc <i2c_enable>:
 80147cc:	6803      	ldr	r3, [r0, #0]
 80147ce:	f043 0301 	orr.w	r3, r3, #1
 80147d2:	6003      	str	r3, [r0, #0]
 80147d4:	4770      	bx	lr

080147d6 <i2c_start_on_bus>:
 80147d6:	6803      	ldr	r3, [r0, #0]
 80147d8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80147dc:	6003      	str	r3, [r0, #0]
 80147de:	4770      	bx	lr

080147e0 <i2c_stop_on_bus>:
 80147e0:	6803      	ldr	r3, [r0, #0]
 80147e2:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80147e6:	6003      	str	r3, [r0, #0]
 80147e8:	4770      	bx	lr

080147ea <i2c_data_transmit>:
 80147ea:	6101      	str	r1, [r0, #16]
 80147ec:	4770      	bx	lr

080147ee <i2c_data_receive>:
 80147ee:	6900      	ldr	r0, [r0, #16]
 80147f0:	b2c0      	uxtb	r0, r0
 80147f2:	4770      	bx	lr

080147f4 <i2c_flag_get>:
 80147f4:	098b      	lsrs	r3, r1, #6
 80147f6:	581a      	ldr	r2, [r3, r0]
 80147f8:	2301      	movs	r3, #1
 80147fa:	f001 011f 	and.w	r1, r1, #31
 80147fe:	408b      	lsls	r3, r1
 8014800:	4213      	tst	r3, r2
 8014802:	bf14      	ite	ne
 8014804:	2001      	movne	r0, #1
 8014806:	2000      	moveq	r0, #0
 8014808:	4770      	bx	lr

0801480a <i2c_flag_clear>:
 801480a:	f240 5301 	movw	r3, #1281	; 0x501
 801480e:	4299      	cmp	r1, r3
 8014810:	b510      	push	{r4, lr}
 8014812:	d102      	bne.n	801481a <i2c_flag_clear+0x10>
 8014814:	6943      	ldr	r3, [r0, #20]
 8014816:	6983      	ldr	r3, [r0, #24]
 8014818:	bd10      	pop	{r4, pc}
 801481a:	2201      	movs	r2, #1
 801481c:	098c      	lsrs	r4, r1, #6
 801481e:	5823      	ldr	r3, [r4, r0]
 8014820:	f001 011f 	and.w	r1, r1, #31
 8014824:	408a      	lsls	r2, r1
 8014826:	ea23 0302 	bic.w	r3, r3, r2
 801482a:	5023      	str	r3, [r4, r0]
 801482c:	e7f4      	b.n	8014818 <i2c_flag_clear+0xe>
	...

08014830 <mac_address_get(unsigned char*)>:
 8014830:	2102      	movs	r1, #2
 8014832:	4a07      	ldr	r2, [pc, #28]	; (8014850 <mac_address_get(unsigned char*)+0x20>)
 8014834:	f8d2 37e8 	ldr.w	r3, [r2, #2024]	; 0x7e8
 8014838:	f8d2 27ec 	ldr.w	r2, [r2, #2028]	; 0x7ec
 801483c:	7001      	strb	r1, [r0, #0]
 801483e:	7042      	strb	r2, [r0, #1]
 8014840:	0e1a      	lsrs	r2, r3, #24
 8014842:	7082      	strb	r2, [r0, #2]
 8014844:	0c1a      	lsrs	r2, r3, #16
 8014846:	70c2      	strb	r2, [r0, #3]
 8014848:	0a1a      	lsrs	r2, r3, #8
 801484a:	7102      	strb	r2, [r0, #4]
 801484c:	7143      	strb	r3, [r0, #5]
 801484e:	4770      	bx	lr
 8014850:	1ffff000 	svcne	0x00fff000

08014854 <__popcountsi2>:
 8014854:	0843      	lsrs	r3, r0, #1
 8014856:	f003 3355 	and.w	r3, r3, #1431655765	; 0x55555555
 801485a:	1ac0      	subs	r0, r0, r3
 801485c:	0883      	lsrs	r3, r0, #2
 801485e:	f003 3333 	and.w	r3, r3, #858993459	; 0x33333333
 8014862:	f000 3033 	and.w	r0, r0, #858993459	; 0x33333333
 8014866:	4418      	add	r0, r3
 8014868:	eb00 1010 	add.w	r0, r0, r0, lsr #4
 801486c:	f000 300f 	and.w	r0, r0, #252645135	; 0xf0f0f0f
 8014870:	eb00 2000 	add.w	r0, r0, r0, lsl #8
 8014874:	eb00 4000 	add.w	r0, r0, r0, lsl #16
 8014878:	0e00      	lsrs	r0, r0, #24
 801487a:	4770      	bx	lr

Disassembly of section .rodata:

0801487c <vtable for DisplayHandler-0xc0>:
	...
 8014884:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 8014888:	09080706 	stmdbeq	r8, {r1, r2, r8, r9, sl}
 801488c:	00000000 	andeq	r0, r0, r0
 8014890:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 8014894:	353a3931 	ldrcc	r3, [sl, #-2353]!	; 0xfffff6cf
 8014898:	31343a35 	teqcc	r4, r5, lsr sl
 801489c:	74634f00 	strbtvc	r4, [r3], #-3840	; 0xfffff100
 80148a0:	20303120 	eorscs	r3, r0, r0, lsr #2
 80148a4:	32323032 	eorscc	r3, r2, #50	; 0x32
 80148a8:	335b1b00 	cmpcc	fp, #0, 22
 80148ac:	41736d32 	cmnmi	r3, r2, lsr sp
 80148b0:	45204e43 	strmi	r4, [r0, #-3651]!	; 0xfffff1bd
 80148b4:	31332e31 	teqcc	r3, r1, lsr lr
 80148b8:	584d4420 	stmdapl	sp, {r5, sl, lr}^
 80148bc:	37335b1b 			; <UNDEFINED> instruction: 0x37335b1b
 80148c0:	5f2e006d 	svcpl	0x002e006d
 80148c4:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 80148c8:	2e006769 	cdpcs	7, 0, cr6, cr0, cr9, {3}
 80148cc:	7474685f 	ldrbtvc	r6, [r4], #-2143	; 0xfffff7a1
 80148d0:	6f6e0070 	svcvs	0x006e0070
 80148d4:	733d6564 	teqvc	sp, #100, 10	; 0x19000000
 80148d8:	204e4341 	subcs	r4, lr, r1, asr #6
 80148dc:	332e3145 			; <UNDEFINED> instruction: 0x332e3145
 80148e0:	4d442031 	stclmi	0, cr2, [r4, #-196]	; 0xffffff3c
 80148e4:	41730058 	cmnmi	r3, r8, asr r0
 80148e8:	45204e43 	strmi	r4, [r0, #-3651]!	; 0xfffff1bd
 80148ec:	31332e31 	teqcc	r3, r1, lsr lr
 80148f0:	584d4420 	stmdapl	sp, {r5, sl, lr}^
 80148f4:	00642520 	rsbeq	r2, r4, r0, lsr #10
 80148f8:	32334447 	eorscc	r4, r3, #1191182336	; 0x47000000
 80148fc:	37303246 	ldrcc	r3, [r0, -r6, asr #4]!
 8014900:	44204752 	strtmi	r4, [r0], #-1874	; 0xfffff8ae
 8014904:	7300584d 	movwvc	r5, #2125	; 0x84d
 8014908:	204e4341 	subcs	r4, lr, r1, asr #6
 801490c:	332e3145 			; <UNDEFINED> instruction: 0x332e3145
 8014910:	4d442031 	stclmi	0, cr2, [r4, #-196]	; 0xffffff3c
 8014914:	75252058 	strvc	r2, [r5, #-88]!	; 0xffffffa8
 8014918:	786d6400 	stmdavc	sp!, {sl, sp, lr}^
 801491c:	72620021 	rsbvc	r0, r2, #33	; 0x21
 8014920:	236b6165 	cmncs	fp, #1073741849	; 0x40000019
 8014924:	62616d00 	rsbvs	r6, r1, #0, 26
 8014928:	65720023 	ldrbvs	r0, [r2, #-35]!	; 0xffffffdd
 801492c:	73657266 	cmnvc	r5, #1610612742	; 0x60000006
 8014930:	73002368 	movwvc	r2, #872	; 0x368
 8014934:	73746f6c 	cmnvc	r4, #108, 30	; 0x1b0
 8014938:	00000023 	andeq	r0, r0, r3, lsr #32

0801493c <vtable for DisplayHandler>:
	...
 8014944:	08008149 	stmdaeq	r0, {r0, r3, r6, r8, pc}
 8014948:	0800819b 	stmdaeq	r0, {r0, r1, r3, r4, r7, r8, pc}
 801494c:	080081e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8, pc}

08014950 <vtable for RDMNetDevice>:
	...
 8014958:	08008235 	stmdaeq	r0, {r0, r2, r4, r5, r9, pc}
 801495c:	0800825d 	stmdaeq	r0, {r0, r2, r3, r4, r6, r9, pc}
 8014960:	0800c49f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r7, sl, lr, pc}
 8014964:	0800c4a1 	stmdaeq	r0, {r0, r5, r7, sl, lr, pc}
 8014968:	0800816f 	stmdaeq	r0, {r0, r1, r2, r3, r5, r6, r8, pc}
 801496c:	08008181 	stmdaeq	r0, {r0, r7, r8, pc}
 8014970:	080081b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8, pc}
 8014974:	ffffff34 			; <UNDEFINED> instruction: 0xffffff34
 8014978:	00000000 	andeq	r0, r0, r0
 801497c:	08008255 	stmdaeq	r0, {r0, r2, r4, r6, r9, pc}
 8014980:	0800826f 	stmdaeq	r0, {r0, r1, r2, r3, r5, r6, r9, pc}
 8014984:	0800817b 	stmdaeq	r0, {r0, r1, r3, r4, r5, r6, r8, pc}
 8014988:	08008191 	stmdaeq	r0, {r0, r4, r7, r8, pc}
 801498c:	080081c9 	stmdaeq	r0, {r0, r3, r6, r7, r8, pc}

08014990 <vtable for FactoryDefaults>:
	...
 8014998:	08008199 	stmdaeq	r0, {r0, r3, r4, r7, r8, pc}
 801499c:	080081a7 	stmdaeq	r0, {r0, r1, r2, r5, r7, r8, pc}
 80149a0:	080083b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8, r9, pc}

080149a4 <CSWTCH.99>:
 80149a4:	444e4f4f 	strbmi	r4, [lr], #-3919	; 0xfffff0b1
 80149a8:	 	eorcc	r3, lr, #-2147483631	; 0x80000011

080149a9 <SOFTWARE_VERSION>:
 80149a9:	00322e31 	eorseq	r2, r2, r1, lsr lr
 80149ad:	 	andeq	r0, r0, r0

080149b0 <vtable for DmxInput>:
	...
 80149b8:	08008a11 	stmdaeq	r0, {r0, r4, r9, fp, pc}
 80149bc:	08008ab1 	stmdaeq	r0, {r0, r4, r5, r7, r9, fp, pc}
 80149c0:	08008a15 	stmdaeq	r0, {r0, r2, r4, r9, fp, pc}
 80149c4:	08008a45 	stmdaeq	r0, {r0, r2, r6, r9, fp, pc}
 80149c8:	08008a75 	stmdaeq	r0, {r0, r2, r4, r5, r6, r9, fp, pc}

080149cc <SOFTWARE_VERSION>:
 80149cc:	00322e31 	eorseq	r2, r2, r1, lsr lr
 80149d0:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80149d4:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80149d8:	2c64252e 	cfstr64cs	mvdx2, [r4], #-184	; 0xffffff48
 80149dc:	252c7325 	strcs	r7, [ip, #-805]!	; 0xfffffcdb
 80149e0:	64252c73 	strtvs	r2, [r5], #-3187	; 0xfffff38d
 80149e4:	0a73252c 	beq	9cdde9c <__exidx_end+0x1cc721c>
 80149e8:	2e642500 	cdpcs	5, 6, cr2, cr4, cr0, {0}
 80149ec:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80149f0:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80149f4:	2c73252c 	cfldr64cs	mvdx2, [r3], #-176	; 0xffffff50
 80149f8:	252c7325 	strcs	r7, [ip, #-805]!	; 0xfffffcdb
 80149fc:	4f000a64 	svcmi	0x00000a64
 8014a00:	664f006e 	strbvs	r0, [pc], -lr, rrx
 8014a04:	69640066 	stmdbvs	r4!, {r1, r2, r5, r6}^
 8014a08:	616c7073 	smcvs	50947	; 0xc703
 8014a0c:	73253a79 			; <UNDEFINED> instruction: 0x73253a79
 8014a10:	6674000a 	ldrbtvs	r0, [r4], -sl
 8014a14:	253a7074 	ldrcs	r7, [sl, #-116]!	; 0xffffff8c
 8014a18:	76000a73 			; <UNDEFINED> instruction: 0x76000a73
 8014a1c:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8014a20:	253a6e6f 	ldrcs	r6, [sl, #-3695]!	; 0xfffff191
 8014a24:	70750073 	rsbsvc	r0, r5, r3, ror r0
 8014a28:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 8014a2c:	7525203a 	strvc	r2, [r5, #-58]!	; 0xffffffc6
 8014a30:	54000a73 	strpl	r0, [r0], #-2675	; 0xfffff58d
 8014a34:	20505446 	subscs	r5, r0, r6, asr #8
 8014a38:	20206e4f 	eorcs	r6, r0, pc, asr #28
 8014a3c:	6265525b 	rsbvs	r5, r5, #-1342177275	; 0xb0000005
 8014a40:	5d746f6f 	ldclpl	15, cr6, [r4, #-444]!	; 0xfffffe44
 8014a44:	54465400 	strbpl	r5, [r6], #-1024	; 0xfffffc00
 8014a48:	664f2050 			; <UNDEFINED> instruction: 0x664f2050
 8014a4c:	525b2066 	subspl	r2, fp, #102	; 0x66
 8014a50:	6f6f6265 	svcvs	0x006f6265
 8014a54:	00205d74 	eoreq	r5, r0, r4, ror sp
 8014a58:	4f525245 	svcmi	0x00525245
 8014a5c:	673f2352 			; <UNDEFINED> instruction: 0x673f2352
 8014a60:	000a7465 	andeq	r7, sl, r5, ror #8
 8014a64:	70746674 	rsbsvc	r6, r4, r4, ror r6
 8014a68:	69640023 	stmdbvs	r4!, {r0, r1, r5}^
 8014a6c:	616c7073 	smcvs	50947	; 0xc703
 8014a70:	45002379 	strmi	r2, [r0, #-889]	; 0xfffffc87
 8014a74:	524f5252 	subpl	r5, pc, #536870917	; 0x20000005
 8014a78:	000a2123 	andeq	r2, sl, r3, lsr #2
 8014a7c:	4f525245 	svcmi	0x00525245
 8014a80:	0a3f2352 	beq	8fdd7d0 <__exidx_end+0xfc6b50>
 8014a84:	62657200 	rsbvs	r7, r5, #0, 4
 8014a88:	23746f6f 	cmncs	r4, #444	; 0x1bc
 8014a8c:	696c0023 	stmdbvs	ip!, {r0, r1, r5}^
 8014a90:	00237473 	eoreq	r7, r3, r3, ror r4
 8014a94:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8014a98:	75002a23 	strvc	r2, [r0, #-2595]	; 0xfffff5dd
 8014a9c:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 8014aa0:	76002365 	strvc	r2, [r0], -r5, ror #6
 8014aa4:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8014aa8:	00236e6f 	eoreq	r6, r3, pc, ror #28
 8014aac:	23746567 	cmncs	r4, #432013312	; 0x19c00000
 8014ab0:	63616600 	cmnvs	r1, #0, 12
 8014ab4:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8014ab8:	 	tstmi	r0, r3, lsr #6

08014abb <s_Node>:
 8014abb:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 8014abf:	0074654e 	rsbseq	r6, r4, lr, asr #10
	...
 8014acb:	41730000 	cmnmi	r3, r0
 8014acf:	45204e43 	strmi	r4, [r0, #-3651]!	; 0xfffff1bd
 8014ad3:	31332e31 	teqcc	r3, r1, lsr lr
	...
 8014adf:	2043534f 	subcs	r5, r3, pc, asr #6
 8014ae3:	76726553 			; <UNDEFINED> instruction: 0x76726553
 8014ae7:	00007265 	andeq	r7, r0, r5, ror #4
 8014aeb:	00000000 	andeq	r0, r0, r0
 8014aef:	544c0000 	strbpl	r0, [ip], #-0
 8014af3:	00000043 	andeq	r0, r0, r3, asr #32
	...
 8014b03:	2043534f 	subcs	r5, r3, pc, asr #6
 8014b07:	65696c43 	strbvs	r6, [r9, #-3139]!	; 0xfffff3bd
 8014b0b:	0000746e 	andeq	r7, r0, lr, ror #8
 8014b0f:	00000000 	andeq	r0, r0, r0
 8014b13:	44520000 	ldrbmi	r0, [r2], #-0
 8014b17:	74654e4d 	strbtvc	r4, [r5], #-3661	; 0xfffff1b3
 8014b1b:	524c4c20 	subpl	r4, ip, #32, 24	; 0x2000
 8014b1f:	6e4f2050 	mcrvs	0, 2, r2, cr15, cr0, {2}
 8014b23:	0000796c 	andeq	r7, r0, ip, ror #18
 8014b27:	776f6853 			; <UNDEFINED> instruction: 0x776f6853
 8014b2b:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
	...
 8014b37:	494d0000 	stmdbmi	sp, {}^	; <UNPREDICTABLE>
 8014b3b:	00004944 	andeq	r4, r0, r4, asr #18
	...
 8014b4b:	00504444 	subseq	r4, r0, r4, asr #8
	...
 8014b5b:	69500000 	ldmdbvs	r0, {}^	; <UNPREDICTABLE>
 8014b5f:	506c6578 	rsbpl	r6, ip, r8, ror r5
 8014b63:	65687375 	strbvs	r7, [r8, #-885]!	; 0xfffffc8b
 8014b67:	00000072 	andeq	r0, r0, r2, ror r0
 8014b6b:	00000000 	andeq	r0, r0, r0
 8014b6f:	65646f4e 	strbvs	r6, [r4, #-3918]!	; 0xfffff0b2
	...

08014b81 <s_Output>:
 8014b81:	00584d44 	subseq	r4, r8, r4, asr #26
	...
 8014b8d:	004d4452 	subeq	r4, sp, r2, asr r4
	...
 8014b99:	696e6f4d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
 8014b9d:	00726f74 	rsbseq	r6, r2, r4, ror pc
 8014ba1:	00000000 	andeq	r0, r0, r0
 8014ba5:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
 8014ba9:	0000006c 	andeq	r0, r0, ip, rrx
 8014bad:	00000000 	andeq	r0, r0, r0
 8014bb1:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
 8014bb5:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
 8014bb9:	00000000 	andeq	r0, r0, r0
 8014bbd:	0043534f 	subeq	r5, r3, pc, asr #6
	...
 8014bc9:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 8014bcd:	00006769 	andeq	r6, r0, r9, ror #14
 8014bd1:	00000000 	andeq	r0, r0, r0
 8014bd5:	70657453 	rsbvc	r7, r5, r3, asr r4
 8014bd9:	00726570 	rsbseq	r6, r2, r0, ror r5
 8014bdd:	00000000 	andeq	r0, r0, r0
 8014be1:	79616c50 	stmdbvc	r1!, {r4, r6, sl, fp, sp, lr}^
 8014be5:	00007265 	andeq	r7, r0, r5, ror #4
 8014be9:	00000000 	andeq	r0, r0, r0
 8014bed:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 8014bf1:	0074654e 	rsbseq	r6, r4, lr, asr #10
 8014bf5:	00000000 	andeq	r0, r0, r0
 8014bf9:	69726553 	ldmdbvs	r2!, {r0, r1, r4, r6, r8, sl, sp, lr}^
 8014bfd:	00006c61 	andeq	r6, r0, r1, ror #24
 8014c01:	00000000 	andeq	r0, r0, r0
 8014c05:	20424752 	subcs	r4, r2, r2, asr r7
 8014c09:	656e6150 	strbvs	r6, [lr, #-336]!	; 0xfffffeb0
 8014c0d:	0000006c 	andeq	r0, r0, ip, rrx
 8014c11:	 	mrsvs	r0, (UNDEF: 0)

08014c14 <RemoteConfig::s_GET>:
 8014c14:	08009f61 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, fp, ip, pc}
 8014c18:	00000000 	andeq	r0, r0, r0
 8014c1c:	08014a85 	stmdaeq	r1, {r0, r2, r7, r9, fp, lr}
 8014c20:	00000008 	andeq	r0, r0, r8
 8014c24:	08009455 	stmdaeq	r0, {r0, r2, r4, r6, sl, ip, pc}
 8014c28:	00000000 	andeq	r0, r0, r0
 8014c2c:	08014a8e 	stmdaeq	r1, {r1, r2, r3, r7, r9, fp, lr}
 8014c30:	00000005 	andeq	r0, r0, r5
 8014c34:	08009455 	stmdaeq	r0, {r0, r2, r4, r6, sl, ip, pc}
 8014c38:	00000000 	andeq	r0, r0, r0
 8014c3c:	08014a94 	stmdaeq	r1, {r2, r4, r7, r9, fp, lr}
 8014c40:	00000006 	andeq	r0, r0, r6
 8014c44:	08009609 	stmdaeq	r0, {r0, r3, r9, sl, ip, pc}
 8014c48:	00000000 	andeq	r0, r0, r0
 8014c4c:	08014a9b 	stmdaeq	r1, {r0, r1, r3, r4, r7, r9, fp, lr}
 8014c50:	00000007 	andeq	r0, r0, r7
 8014c54:	080095c9 	stmdaeq	r0, {r0, r3, r6, r7, r8, sl, ip, pc}
 8014c58:	00000000 	andeq	r0, r0, r0
 8014c5c:	08014aa3 	stmdaeq	r1, {r0, r1, r5, r7, r9, fp, lr}
 8014c60:	00000008 	andeq	r0, r0, r8
 8014c64:	08009525 	stmdaeq	r0, {r0, r2, r5, r8, sl, ip, pc}
 8014c68:	00000000 	andeq	r0, r0, r0
 8014c6c:	08014a6a 	stmdaeq	r1, {r1, r3, r5, r6, r9, fp, lr}
 8014c70:	00000008 	andeq	r0, r0, r8
 8014c74:	080098dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, fp, ip, pc}
 8014c78:	00000000 	andeq	r0, r0, r0
 8014c7c:	08014aac 	stmdaeq	r1, {r2, r3, r5, r7, r9, fp, lr}
 8014c80:	00010004 	andeq	r0, r1, r4
 8014c84:	08009579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip, pc}
 8014c88:	00000000 	andeq	r0, r0, r0
 8014c8c:	08014a64 	stmdaeq	r1, {r2, r5, r6, r9, fp, lr}
 8014c90:	00000005 	andeq	r0, r0, r5
 8014c94:	08009c51 	stmdaeq	r0, {r0, r4, r6, sl, fp, ip, pc}
 8014c98:	00000000 	andeq	r0, r0, r0
 8014c9c:	08014ab1 	stmdaeq	r1, {r0, r4, r5, r7, r9, fp, lr}
 8014ca0:	00000009 	andeq	r0, r0, r9

08014ca4 <RemoteConfig::s_SET>:
 8014ca4:	080096b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r9, sl, ip, pc}
 8014ca8:	00000000 	andeq	r0, r0, r0
 8014cac:	08014a64 	stmdaeq	r1, {r2, r5, r6, r9, fp, lr}
 8014cb0:	00010005 	andeq	r0, r1, r5
 8014cb4:	0800968d 	stmdaeq	r0, {r0, r2, r3, r7, r9, sl, ip, pc}
 8014cb8:	00000000 	andeq	r0, r0, r0
 8014cbc:	08014a6a 	stmdaeq	r1, {r1, r3, r5, r6, r9, fp, lr}
 8014cc0:	00010008 	andeq	r0, r1, r8
 8014cc4:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 8014cc8:	2c64253a 	cfstr64cs	mvdx2, [r4], #-232	; 0xffffff18
 8014ccc:	73252300 			; <UNDEFINED> instruction: 0x73252300
 8014cd0:	0a64253d 	beq	991e1cc <__exidx_end+0x190754c>
 8014cd4:	73252200 			; <UNDEFINED> instruction: 0x73252200
 8014cd8:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8014cdc:	002c2273 	eoreq	r2, ip, r3, ror r2
 8014ce0:	3d732523 	cfldr64cc	mvdx2, [r3, #-140]!	; 0xffffff74
 8014ce4:	000a7325 	andeq	r7, sl, r5, lsr #6
 8014ce8:	6f626552 	svcvs	0x00626552
 8014cec:	6e69746f 	cdpvs	4, 6, cr7, cr9, cr15, {3}
 8014cf0:	2e2e2067 	cdpcs	0, 2, cr2, cr14, cr7, {3}
 8014cf4:	52000a2e 	andpl	r0, r0, #188416	; 0x2e000
 8014cf8:	6f6f6265 	svcvs	0x006f6265
 8014cfc:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 8014d00:	2e2e2e20 	cdpcs	14, 2, cr2, cr14, cr0, {1}
 8014d04:	6f637200 	svcvs	0x00637200
 8014d08:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 8014d0c:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8014d10:	74656e00 	strbtvc	r6, [r5], #-3584	; 0xfffff200
 8014d14:	6b726f77 	blvs	9cb0af8 <__exidx_end+0x1c99e78>
 8014d18:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8014d1c:	73696400 	cmnvc	r9, #0, 8
 8014d20:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8014d24:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8014d28:	33316500 	teqcc	r1, #0, 10
 8014d2c:	78742e31 	ldmdavc	r4!, {r0, r4, r5, r9, sl, fp, sp}^
 8014d30:	61700074 	cmnvs	r0, r4, ror r0
 8014d34:	736d6172 	cmnvc	sp, #-2147483620	; 0x8000001c
 8014d38:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8014d3c:	00000000 	andeq	r0, r0, r0

08014d40 <RemoteConfig::s_TXT>:
 8014d40:	080098e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, fp, ip, pc}
 8014d44:	00000000 	andeq	r0, r0, r0
 8014d48:	08009b81 	stmdaeq	r0, {r0, r7, r8, r9, fp, ip, pc}
 8014d4c:	00000000 	andeq	r0, r0, r0
 8014d50:	08014d05 	stmdaeq	r1, {r0, r2, r8, sl, fp, lr}
 8014d54:	0000000b 	andeq	r0, r0, fp
 8014d58:	0000000c 	andeq	r0, r0, ip
 8014d5c:	08009911 	stmdaeq	r0, {r0, r4, r8, fp, ip, pc}
 8014d60:	00000000 	andeq	r0, r0, r0
 8014d64:	08009bb1 	stmdaeq	r0, {r0, r4, r5, r7, r8, r9, fp, ip, pc}
 8014d68:	00000000 	andeq	r0, r0, r0
 8014d6c:	08014d11 	stmdaeq	r1, {r0, r4, r8, sl, fp, lr}
 8014d70:	0000000b 	andeq	r0, r0, fp
 8014d74:	00000000 	andeq	r0, r0, r0
 8014d78:	08009995 	stmdaeq	r0, {r0, r2, r4, r7, r8, fp, ip, pc}
 8014d7c:	00000000 	andeq	r0, r0, r0
 8014d80:	08009c29 	stmdaeq	r0, {r0, r3, r5, sl, fp, ip, pc}
 8014d84:	00000000 	andeq	r0, r0, r0
 8014d88:	08014d1d 	stmdaeq	r1, {r0, r2, r3, r4, r8, sl, fp, lr}
 8014d8c:	0000000b 	andeq	r0, r0, fp
 8014d90:	0000000f 	andeq	r0, r0, pc
 8014d94:	0800993d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r8, fp, ip, pc}
 8014d98:	00000000 	andeq	r0, r0, r0
 8014d9c:	08009bd9 	stmdaeq	r0, {r0, r3, r4, r6, r7, r8, r9, fp, ip, pc}
 8014da0:	00000000 	andeq	r0, r0, r0
 8014da4:	08014d29 	stmdaeq	r1, {r0, r3, r5, r8, sl, fp, lr}
 8014da8:	00000008 	andeq	r0, r0, r8
 8014dac:	00000004 	andeq	r0, r0, r4
 8014db0:	08009969 	stmdaeq	r0, {r0, r3, r5, r6, r8, fp, ip, pc}
 8014db4:	00000000 	andeq	r0, r0, r0
 8014db8:	08009c01 	stmdaeq	r0, {r0, sl, fp, ip, pc}
 8014dbc:	00000000 	andeq	r0, r0, r0
 8014dc0:	08014d32 	stmdaeq	r1, {r1, r4, r5, r8, sl, fp, lr}
 8014dc4:	0000000a 	andeq	r0, r0, sl
 8014dc8:	00000002 	andeq	r0, r0, r2
 8014dcc:	00544547 	subseq	r4, r4, r7, asr #10
 8014dd0:	54534f50 	ldrbpl	r4, [r3], #-3920	; 0xfffff0b0
 8014dd4:	54544800 	ldrbpl	r4, [r4], #-2048	; 0xfffff800
 8014dd8:	0a200050 	beq	8814f20 <__exidx_end+0x7fe2a0>
 8014ddc:	312e3100 			; <UNDEFINED> instruction: 0x312e3100
 8014de0:	43003a00 	movwmi	r3, #2560	; 0xa00
 8014de4:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
 8014de8:	542d746e 	strtpl	r7, [sp], #-1134	; 0xfffffb92
 8014dec:	00657079 	rsbeq	r7, r5, r9, ror r0
 8014df0:	61003b20 	tstvs	r0, r0, lsr #22
 8014df4:	696c7070 	stmdbvs	ip!, {r4, r5, r6, ip, sp, lr}^
 8014df8:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
 8014dfc:	6a2f6e6f 	bvs	8bf07c0 <__exidx_end+0xbd9b40>
 8014e00:	006e6f73 	rsbeq	r6, lr, r3, ror pc
 8014e04:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
 8014e08:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	; 0xfffffe6c
 8014e0c:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
 8014e10:	2f006874 	svccs	0x00006874
 8014e14:	65646e69 	strbvs	r6, [r4, #-3689]!	; 0xfffff197
 8014e18:	74682e78 	strbtvc	r2, [r8], #-3704	; 0xfffff188
 8014e1c:	2f006c6d 	svccs	0x00006c6d
 8014e20:	6c797473 	cfldrdvs	mvd7, [r9], #-460	; 0xfffffe34
 8014e24:	632e7365 			; <UNDEFINED> instruction: 0x632e7365
 8014e28:	2f007373 	svccs	0x00007373
 8014e2c:	65646e69 	strbvs	r6, [r4, #-3689]!	; 0xfffff197
 8014e30:	736a2e78 	cmnvc	sl, #120, 28	; 0x780
 8014e34:	736a2f00 	cmnvc	sl, #0, 30
 8014e38:	002f6e6f 	eoreq	r6, pc, pc, ror #28
 8014e3c:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8014e40:	72657600 	rsbvc	r7, r5, #0, 12
 8014e44:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 8014e48:	74707500 	ldrbtvc	r7, [r0], #-1280	; 0xfffffb00
 8014e4c:	00656d69 	rsbeq	r6, r5, r9, ror #26
 8014e50:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8014e54:	0079616c 	rsbseq	r6, r9, ip, ror #2
 8014e58:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8014e5c:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8014e60:	6a2f0079 	bvs	8bd504c <__exidx_end+0xbbe3cc>
 8014e64:	2f6e6f73 	svccs	0x006e6f73
 8014e68:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 8014e6c:	72006e6f 	andvc	r6, r0, #1776	; 0x6f0
 8014e70:	6f6f6265 	svcvs	0x006f6265
 8014e74:	64690074 	strbtvs	r0, [r9], #-116	; 0xffffff8c
 8014e78:	69746e65 	ldmdbvs	r4!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
 8014e7c:	3c007966 			; <UNDEFINED> instruction: 0x3c007966
 8014e80:	434f4421 	movtmi	r4, #62497	; 0xf421
 8014e84:	45505954 	ldrbmi	r5, [r0, #-2388]	; 0xfffff6ac
 8014e88:	6d746820 	ldclvs	8, cr6, [r4, #-128]!	; 0xffffff80
 8014e8c:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
 8014e90:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8014e94:	683c0a3e 	ldmdavs	ip!, {r1, r2, r3, r4, r5, r9, fp}
 8014e98:	3e646165 	powccsz	f6, f4, f5
 8014e9c:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
 8014ea0:	533e656c 	teqpl	lr, #108, 10	; 0x1b000000
 8014ea4:	696d6275 	stmdbvs	sp!, {r0, r2, r4, r5, r6, r9, sp, lr}^
 8014ea8:	742f3c74 	strtvc	r3, [pc], #-3188	; 8014eb0 <RemoteConfig::s_TXT+0x170>
 8014eac:	656c7469 	strbvs	r7, [ip, #-1129]!	; 0xfffffb97
 8014eb0:	682f3c3e 	stmdavs	pc!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8014eb4:	3e646165 	powccsz	f6, f4, f5
 8014eb8:	6f623c0a 	svcvs	0x00623c0a
 8014ebc:	3c3e7964 			; <UNDEFINED> instruction: 0x3c3e7964
 8014ec0:	4f3e3168 	svcmi	0x003e3168
 8014ec4:	682f3c4b 	stmdavs	pc!, {r0, r1, r3, r6, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8014ec8:	2f3c3e31 	svccs	0x003c3e31
 8014ecc:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 8014ed0:	2f3c0a3e 	svccs	0x003c0a3e
 8014ed4:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8014ed8:	42000a3e 	andmi	r0, r0, #253952	; 0x3e000
 8014edc:	52206461 	eorpl	r6, r0, #1627389952	; 0x61000000
 8014ee0:	65757165 	ldrbvs	r7, [r5, #-357]!	; 0xfffffe9b
 8014ee4:	4e007473 	mcrmi	4, 0, r7, cr0, cr3, {3}
 8014ee8:	4620746f 	strtmi	r7, [r0], -pc, ror #8
 8014eec:	646e756f 	strbtvs	r7, [lr], #-1391	; 0xfffffa91
 8014ef0:	71655200 	cmnvc	r5, r0, lsl #4
 8014ef4:	74736575 	ldrbtvc	r6, [r3], #-1397	; 0xfffffa8b
 8014ef8:	746e4520 	strbtvc	r4, [lr], #-1312	; 0xfffffae0
 8014efc:	20797469 	rsbscs	r7, r9, r9, ror #8
 8014f00:	206f6f54 	rsbcs	r6, pc, r4, asr pc	; <UNPREDICTABLE>
 8014f04:	6772614c 	ldrbvs	r6, [r2, -ip, asr #2]!
 8014f08:	65520065 	ldrbvs	r0, [r2, #-101]	; 0xffffff9b
 8014f0c:	73657571 	cmnvc	r5, #473956352	; 0x1c400000
 8014f10:	52552d74 	subspl	r2, r5, #116, 26	; 0x1d00
 8014f14:	6f542049 	svcvs	0x00542049
 8014f18:	6f4c206f 	svcvs	0x004c206f
 8014f1c:	4900676e 	stmdbmi	r0, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}
 8014f20:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
 8014f24:	206c616e 	rsbcs	r6, ip, lr, ror #2
 8014f28:	76726553 			; <UNDEFINED> instruction: 0x76726553
 8014f2c:	45207265 	strmi	r7, [r0, #-613]!	; 0xfffffd9b
 8014f30:	726f7272 	rsbvc	r7, pc, #536870919	; 0x20000007
 8014f34:	74654d00 	strbtvc	r4, [r5], #-3328	; 0xfffff300
 8014f38:	20646f68 	rsbcs	r6, r4, r8, ror #30
 8014f3c:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 8014f40:	6c706d49 	ldclvs	13, cr6, [r0], #-292	; 0xfffffedc
 8014f44:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 8014f48:	00646574 	rsbeq	r6, r4, r4, ror r5
 8014f4c:	73726556 	cmnvc	r2, #360710144	; 0x15800000
 8014f50:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 8014f54:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 8014f58:	70707553 	rsbsvc	r7, r0, r3, asr r5
 8014f5c:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
 8014f60:	6e550064 	cdpvs	0, 5, cr0, cr5, cr4, {3}
 8014f64:	776f6e6b 	strbvc	r6, [pc, -fp, ror #28]!
 8014f68:	7245206e 	subvc	r2, r5, #110	; 0x6e
 8014f6c:	00726f72 	rsbseq	r6, r2, r2, ror pc
 8014f70:	3c004b4f 			; <UNDEFINED> instruction: 0x3c004b4f
 8014f74:	434f4421 	movtmi	r4, #62497	; 0xf421
 8014f78:	45505954 	ldrbmi	r5, [r0, #-2388]	; 0xfffff6ac
 8014f7c:	6d746820 	ldclvs	8, cr6, [r4, #-128]!	; 0xffffff80
 8014f80:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
 8014f84:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8014f88:	683c0a3e 	ldmdavs	ip!, {r1, r2, r3, r4, r5, r9, fp}
 8014f8c:	3e646165 	powccsz	f6, f4, f5
 8014f90:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
 8014f94:	253e656c 	ldrcs	r6, [lr, #-1388]!	; 0xfffffa94
 8014f98:	73252075 			; <UNDEFINED> instruction: 0x73252075
 8014f9c:	69742f3c 	ldmdbvs	r4!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 8014fa0:	3e656c74 	mcrcc	12, 3, r6, cr5, cr4, {3}
 8014fa4:	65682f3c 	strbvs	r2, [r8, #-3900]!	; 0xfffff0c4
 8014fa8:	0a3e6461 	beq	8fae134 <__exidx_end+0xf974b4>
 8014fac:	646f623c 	strbtvs	r6, [pc], #-572	; 8014fb4 <RemoteConfig::s_TXT+0x274>
 8014fb0:	683c3e79 	ldmdavs	ip!, {r0, r3, r4, r5, r6, r9, sl, fp, ip, sp}
 8014fb4:	73253e31 			; <UNDEFINED> instruction: 0x73253e31
 8014fb8:	31682f3c 	cmncc	r8, ip, lsr pc
 8014fbc:	622f3c3e 	eorvs	r3, pc, #15872	; 0x3e00
 8014fc0:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 8014fc4:	682f3c0a 	stmdavs	pc!, {r1, r3, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8014fc8:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 8014fcc:	5448000a 	strbpl	r0, [r8], #-10
 8014fd0:	312f5054 	qsubcc	r5, r4, pc	; <UNPREDICTABLE>
 8014fd4:	2520312e 	strcs	r3, [r0, #-302]!	; 0xfffffed2
 8014fd8:	73252075 			; <UNDEFINED> instruction: 0x73252075
 8014fdc:	65530a0d 	ldrbvs	r0, [r3, #-2573]	; 0xfffff5f3
 8014fe0:	72657672 	rsbvc	r7, r5, #119537664	; 0x7200000
 8014fe4:	7325203a 			; <UNDEFINED> instruction: 0x7325203a
 8014fe8:	6f430a0d 	svcvs	0x00430a0d
 8014fec:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 8014ff0:	79542d74 	ldmdbvc	r4, {r2, r4, r5, r6, r8, sl, fp, sp}^
 8014ff4:	203a6570 	eorscs	r6, sl, r0, ror r5
 8014ff8:	0a0d7325 	beq	8371c94 <__exidx_end+0x35b014>
 8014ffc:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
 8015000:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	; 0xfffffe6c
 8015004:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
 8015008:	203a6874 	eorscs	r6, sl, r4, ror r8
 801500c:	0a0d7525 	beq	83724a8 <__exidx_end+0x35b828>
 8015010:	6e6e6f43 	cdpvs	15, 6, cr6, cr14, cr3, {2}
 8015014:	69746365 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sp, lr}^
 8015018:	203a6e6f 	eorscs	r6, sl, pc, ror #28
 801501c:	736f6c63 	cmnvc	pc, #25344	; 0x6300
 8015020:	0d0a0d65 	stceq	13, cr0, [sl, #-404]	; 0xfffffe6c
 8015024:	4447000a 	strbmi	r0, [r7], #-10
 8015028:	32463233 	subcc	r3, r6, #805306371	; 0x30000003
 801502c:	47523730 	smmlarmi	r2, r0, r7, r3
	...

08015031 <contentType>:
 8015031:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 8015035:	6d74682f 	ldclvs	8, cr6, [r4, #-188]!	; 0xffffff44
 8015039:	0000006c 	andeq	r0, r0, ip, rrx
	...
 8015051:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 8015055:	7373632f 	cmnvc	r3, #-1140850688	; 0xbc000000
	...
 8015071:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 8015075:	76616a2f 	strbtvc	r6, [r1], -pc, lsr #20
 8015079:	72637361 	rsbvc	r7, r3, #-2080374783	; 0x84000001
 801507d:	00747069 	rsbseq	r7, r4, r9, rrx
	...
 8015091:	6c707061 	ldclvs	0, cr7, [r0], #-388	; 0xfffffe7c
 8015095:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
 8015099:	2f6e6f69 	svccs	0x006e6f69
 801509d:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
	...

080150b1 <RemoteConfigConst::PARAMS_DISABLE>:
 80150b1:	61736964 	cmnvs	r3, r4, ror #18
 80150b5:	00656c62 	rsbeq	r6, r5, r2, ror #24

080150b9 <RemoteConfigConst::PARAMS_FILE_NAME>:
 80150b9:	6e6f6372 	mcrvs	3, 3, r6, cr15, cr2, {3}
 80150bd:	2e676966 	vnmulcs.f16	s13, s14, s13	; <UNPREDICTABLE>
 80150c1:	00747874 	rsbseq	r7, r4, r4, ror r8

080150c5 <RemoteConfigConst::PARAMS_DISPLAY_NAME>:
 80150c5:	70736964 	rsbsvc	r6, r3, r4, ror #18
 80150c9:	5f79616c 	svcpl	0x0079616c
 80150cd:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

080150d2 <RemoteConfigConst::PARAMS_DISABLE_WRITE>:
 80150d2:	61736964 	cmnvs	r3, r4, ror #18
 80150d6:	5f656c62 	svcpl	0x00656c62
 80150da:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
 80150de:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

080150e0 <RemoteConfigConst::PARAMS_ENABLE_REBOOT>:
 80150e0:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 80150e4:	725f656c 	subsvc	r6, pc, #108, 10	; 0x1b000000
 80150e8:	6f6f6265 	svcvs	0x006f6265
 80150ec:	 	mcrvs	0, 3, r0, cr5, cr4, {3}

080150ee <RemoteConfigConst::PARAMS_ENABLE_UPTIME>:
 80150ee:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 80150f2:	755f656c 	ldrbvc	r6, [pc, #-1388]	; 8014b8e <s_Output+0xd>
 80150f6:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 80150fa:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

080150fc <RemoteConfigConst::PARAMS_ENABLE_FACTORY>:
 80150fc:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 8015100:	665f656c 	ldrbvs	r6, [pc], -ip, ror #10
 8015104:	6f746361 	svcvs	0x00746361
 8015108:	7b007972 	blvc	80336d8 <__exidx_end+0x1ca58>
 801510c:	73696c22 	cmnvc	r9, #8704	; 0x2200
 8015110:	7b3a2274 	blvc	8e9dae8 <__exidx_end+0xe86e68>
 8015114:	22706922 	rsbscs	r6, r0, #557056	; 0x88000
 8015118:	6425223a 	strtvs	r2, [r5], #-570	; 0xfffffdc6
 801511c:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8015120:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8015124:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 8015128:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 801512c:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8015130:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 8015134:	65646f6e 	strbvs	r6, [r4, #-3950]!	; 0xfffff092
 8015138:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 801513c:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 8015140:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8015144:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 8015148:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 801514c:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 8015150:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 8015154:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8015158:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 801515c:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 8015160:	253a2274 	ldrcs	r2, [sl, #-628]!	; 0xfffffd8c
 8015164:	7d7d7d64 	ldclvc	13, cr7, [sp, #-400]!	; 0xfffffe70
 8015168:	227b007d 	rsbscs	r0, fp, #125	; 0x7d
 801516c:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8015170:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 8015174:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 8015178:	2c22732a 	stccs	3, cr7, [r2], #-168	; 0xffffff58
 801517c:	616f6222 	cmnvs	pc, r2, lsr #4
 8015180:	3a226472 	bcc	88ae350 <__exidx_end+0x8976d0>
 8015184:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 8015188:	7562222c 	strbvc	r2, [r2, #-556]!	; 0xfffffdd4
 801518c:	22646c69 	rsbcs	r6, r4, #26880	; 0x6900
 8015190:	64227b3a 	strtvs	r7, [r2], #-2874	; 0xfffff4c6
 8015194:	22657461 	rsbcs	r7, r5, #1627389952	; 0x61000000
 8015198:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 801519c:	2c22732a 	stccs	3, cr7, [r2], #-168	; 0xffffff58
 80151a0:	6d697422 	cfstrdvs	mvd7, [r9, #-136]!	; 0xffffff78
 80151a4:	223a2265 	eorscs	r2, sl, #1342177286	; 0x50000006
 80151a8:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
 80151ac:	007d7d22 	rsbseq	r7, sp, r2, lsr #26
 80151b0:	7075227b 	rsbsvc	r2, r5, fp, ror r2
 80151b4:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 80151b8:	75253a22 	strvc	r3, [r5, #-2594]!	; 0xfffff5de
 80151bc:	7b000a7d 	blvc	8017bb8 <__exidx_end+0xf38>
 80151c0:	73696422 	cmnvc	r9, #570425344	; 0x22000000
 80151c4:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 80151c8:	64253a22 	strtvs	r3, [r5], #-2594	; 0xfffff5de
 80151cc:	227b007d 	rsbscs	r0, fp, #125	; 0x7d
 80151d0:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 80151d4:	7b3a2273 	blvc	8e9dba8 <__exidx_end+0xe86f28>
 80151d8:	33316522 	teqcc	r1, #142606336	; 0x8800000
 80151dc:	78742e31 	ldmdavc	r4!, {r0, r4, r5, r9, sl, fp, sp}^
 80151e0:	223a2274 	eorscs	r2, sl, #116, 4	; 0x40000007
 80151e4:	4e434173 	mcrmi	1, 2, r4, cr3, cr3, {3}
 80151e8:	2e314520 	cfabs64cs	mvdx4, mvdx1
 80151ec:	2c223133 	stfcss	f3, [r2], #-204	; 0xffffff34
 80151f0:	72617022 	rsbvc	r7, r1, #34	; 0x22
 80151f4:	2e736d61 	cdpcs	13, 7, cr6, cr3, cr1, {3}
 80151f8:	22747874 	rsbscs	r7, r4, #116, 16	; 0x740000
 80151fc:	4d44223a 	sfmmi	f2, 2, [r4, #-232]	; 0xffffff18
 8015200:	72542058 	subsvc	r2, r4, #88	; 0x58
 8015204:	6d736e61 	ldclvs	14, cr6, [r3, #-388]!	; 0xfffffe7c
 8015208:	2c227469 	cfstrscs	mvf7, [r2], #-420	; 0xfffffe5c
 801520c:	73696422 	cmnvc	r9, #570425344	; 0x22000000
 8015210:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8015214:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8015218:	44223a22 	strtmi	r3, [r2], #-2594	; 0xfffff5de
 801521c:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
 8015220:	55207961 	strpl	r7, [r0, #-2401]!	; 0xfffff69f
 8015224:	2c224644 	stccs	6, cr4, [r2], #-272	; 0xfffffef0
 8015228:	74656e22 	strbtvc	r6, [r5], #-3618	; 0xfffff1de
 801522c:	6b726f77 	blvs	9cb1010 <__exidx_end+0x1c9a390>
 8015230:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8015234:	4e223a22 	vmulmi.f32	s6, s4, s5
 8015238:	6f777465 	svcvs	0x00777465
 801523c:	2c226b72 			; <UNDEFINED> instruction: 0x2c226b72
 8015240:	6f637222 	svcvs	0x00637222
 8015244:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 8015248:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 801524c:	52223a22 	eorpl	r3, r2, #139264	; 0x22000
 8015250:	746f6d65 	strbtvc	r6, [pc], #-3429	; 8015258 <RemoteConfigConst::PARAMS_ENABLE_FACTORY+0x15c>
 8015254:	6f632065 	svcvs	0x00632065
 8015258:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 801525c:	74617275 	strbtvc	r7, [r1], #-629	; 0xfffffd8b
 8015260:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 8015264:	 	stccc	13, cr7, [r0], {125}	; 0x7d

08015267 <index_html>:
 8015267:	4f44213c 	svcmi	0x0044213c
 801526b:	50595443 	subspl	r5, r9, r3, asr #8
 801526f:	74682045 	strbtvc	r2, [r8], #-69	; 0xffffffbb
 8015273:	0a3e6c6d 	beq	8fb042f <__exidx_end+0xf997af>
 8015277:	6d74683c 	ldclvs	8, cr6, [r4, #-240]!	; 0xffffff10
 801527b:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
 801527f:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
 8015283:	3c090a3e 			; <UNDEFINED> instruction: 0x3c090a3e
 8015287:	6b6e696c 	blvs	9baf83f <__exidx_end+0x1b98bbf>
 801528b:	6c657220 	sfmvs	f7, 2, [r5], #-128	; 0xffffff80
 801528f:	7473223d 	ldrbtvc	r2, [r3], #-573	; 0xfffffdc3
 8015293:	73656c79 	cmnvc	r5, #30976	; 0x7900
 8015297:	74656568 	strbtvc	r6, [r5], #-1384	; 0xfffffa98
 801529b:	72682022 	rsbvc	r2, r8, #34	; 0x22
 801529f:	223d6665 	eorscs	r6, sp, #105906176	; 0x6500000
 80152a3:	6c797473 	cfldrdvs	mvd7, [r9], #-460	; 0xfffffe34
 80152a7:	632e7365 			; <UNDEFINED> instruction: 0x632e7365
 80152ab:	20227373 	eorcs	r7, r2, r3, ror r3
 80152af:	090a3e2f 	stmdbeq	sl, {r0, r1, r2, r3, r5, r9, sl, fp, ip, sp}
 80152b3:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
 80152b7:	3c3e656c 	cfldr32cc	mvfx6, [lr], #-432	; 0xfffffe50
 80152bb:	7469742f 	strbtvc	r7, [r9], #-1071	; 0xfffffbd1
 80152bf:	0a3e656c 	beq	8fae877 <__exidx_end+0xf97bf7>
 80152c3:	65682f3c 	strbvs	r2, [r8, #-3900]!	; 0xfffff0c4
 80152c7:	0a3e6461 	beq	8fae453 <__exidx_end+0xf977d3>
 80152cb:	646f623c 	strbtvs	r6, [pc], #-572	; 80152d3 <index_html+0x6c>
 80152cf:	090a3e79 	stmdbeq	sl, {r0, r3, r4, r5, r6, r9, sl, fp, ip, sp}
 80152d3:	6165683c 	cmnvs	r5, ip, lsr r8
 80152d7:	3e726564 	cdpcc	5, 7, cr6, cr2, cr4, {3}
 80152db:	206c753c 	rsbcs	r7, ip, ip, lsr r5
 80152df:	223d6469 	eorscs	r6, sp, #1761607680	; 0x69000000
 80152e3:	694c6469 	stmdbvs	ip, {r0, r3, r5, r6, sl, sp, lr}^
 80152e7:	3e227473 	mcrcc	4, 1, r7, cr2, cr3, {3}
 80152eb:	6c752f3c 	ldclvs	15, cr2, [r5], #-240	; 0xffffff10
 80152ef:	682f3c3e 	stmdavs	pc!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}	; <UNPREDICTABLE>
 80152f3:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 80152f7:	090a3e72 	stmdbeq	sl, {r1, r4, r5, r6, r9, sl, fp, ip, sp}
 80152fb:	3c3e703c 	ldccc	0, cr7, [lr], #-240	; 0xffffff10
 80152ff:	656c6573 	strbvs	r6, [ip, #-1395]!	; 0xfffffa8d
 8015303:	69207463 	stmdbvs	r0!, {r0, r1, r5, r6, sl, ip, sp, lr}
 8015307:	69223d64 	stmdbvs	r2!, {r2, r5, r6, r8, sl, fp, ip, sp}
 801530b:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
 801530f:	6f746365 	svcvs	0x00746365
 8015313:	20227972 	eorcs	r7, r2, r2, ror r9
 8015317:	68636e6f 	stmdavs	r3!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 801531b:	65676e61 	strbvs	r6, [r7, #-3681]!	; 0xfffff19f
 801531f:	6567223d 	strbvs	r2, [r7, #-573]!	; 0xfffffdc3
 8015323:	78745f74 	ldmdavc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 8015327:	68742874 	ldmdavs	r4!, {r2, r4, r5, r6, fp, sp}^
 801532b:	762e7369 	strtvc	r7, [lr], -r9, ror #6
 801532f:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
 8015333:	3c3e2229 	lfmcc	f2, 4, [lr], #-164	; 0xffffff5c
 8015337:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
 801533b:	3e746365 	cdpcc	3, 7, cr6, cr4, cr5, {3}
 801533f:	3e702f3c 	mrccc	15, 3, r2, cr0, cr12, {1}
 8015343:	743c090a 	ldrtvc	r0, [ip], #-2314	; 0xfffff6f6
 8015347:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
 801534b:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
 801534f:	54646922 	strbtpl	r6, [r4], #-2338	; 0xfffff6de
 8015353:	20227478 	eorcs	r7, r2, r8, ror r4
 8015357:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 801535b:	273d7265 	ldrcs	r7, [sp, -r5, ror #4]!
 801535f:	3c3e2731 	ldccc	7, cr2, [lr], #-196	; 0xffffff3c
 8015363:	6261742f 	rsbvs	r7, r1, #788529152	; 0x2f000000
 8015367:	0a3e656c 	beq	8fae91f <__exidx_end+0xf97c9f>
 801536b:	6f663c09 	svcvs	0x00663c09
 801536f:	7265746f 	rsbvc	r7, r5, #1862270976	; 0x6f000000
 8015373:	6c753c3e 	ldclvs	12, cr3, [r5], #-248	; 0xffffff08
 8015377:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
 801537b:	56646922 	strbtpl	r6, [r4], -r2, lsr #18
 801537f:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8015383:	3e226e6f 	cdpcc	14, 2, cr6, cr2, cr15, {3}
 8015387:	6c752f3c 	ldclvs	15, cr2, [r5], #-240	; 0xffffff10
 801538b:	662f3c3e 			; <UNDEFINED> instruction: 0x662f3c3e
 801538f:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
 8015393:	090a3e72 	stmdbeq	sl, {r1, r4, r5, r6, r9, sl, fp, ip, sp}
 8015397:	7263733c 	rsbvc	r7, r3, #60, 6	; 0xf0000000
 801539b:	20747069 	rsbscs	r7, r4, r9, rrx
 801539f:	3d637273 	sfmcc	f7, 2, [r3, #-460]!	; 0xfffffe34
 80153a3:	646e6922 	strbtvs	r6, [lr], #-2338	; 0xfffff6de
 80153a7:	6a2e7865 	bvs	8bb3543 <__exidx_end+0xb9c8c3>
 80153ab:	3c3e2273 	lfmcc	f2, 4, [lr], #-460	; 0xfffffe34
 80153af:	7263732f 	rsbvc	r7, r3, #-1140850688	; 0xbc000000
 80153b3:	3e747069 	cdpcc	0, 7, cr7, cr4, cr9, {3}
 80153b7:	622f3c0a 	eorvs	r3, pc, #2560	; 0xa00
 80153bb:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 80153bf:	682f3c0a 	stmdavs	pc!, {r1, r3, sl, fp, ip, sp}	; <UNPREDICTABLE>
 80153c3:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 80153c7:	 	strbtvs	r6, [pc], #-522	; 80153cf <styles_css+0x7>

080153c8 <styles_css>:
 80153c8:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 80153cc:	200a7b20 	andcs	r7, sl, r0, lsr #22
 80153d0:	63616220 	cmnvs	r1, #32, 4
 80153d4:	6f72676b 	svcvs	0x0072676b
 80153d8:	2d646e75 	stclcs	14, cr6, [r4, #-468]!	; 0xfffffe2c
 80153dc:	6f6c6f63 	svcvs	0x006c6f63
 80153e0:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
 80153e4:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
 80153e8:	30322c30 	eorscc	r2, r2, r0, lsr ip
 80153ec:	2930322c 	ldmdbcs	r0!, {r2, r3, r5, r9, ip, sp}
 80153f0:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 80153f4:	6f6c6f63 	svcvs	0x006c6f63
 80153f8:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
 80153fc:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
 8015400:	202c3535 	eorcs	r3, ip, r5, lsr r5
 8015404:	2c353532 	cfldr32cs	mvfx3, [r5], #-200	; 0xffffff38
 8015408:	35353220 	ldrcc	r3, [r5, #-544]!	; 0xfffffde0
 801540c:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
 8015410:	6c750a0a 			; <UNDEFINED> instruction: 0x6c750a0a
 8015414:	200a7b20 	andcs	r7, sl, r0, lsr #22
 8015418:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 801541c:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8015420:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 8015424:	0a3b7865 	beq	8ef35c0 <__exidx_end+0xedc940>
 8015428:	6c0a0a7d 			; <UNDEFINED> instruction: 0x6c0a0a7d
 801542c:	0a7b2069 	beq	9edd5d8 <__exidx_end+0x1ec6958>
 8015430:	696c2020 	stmdbvs	ip!, {r5, sp}^
 8015434:	732d7473 			; <UNDEFINED> instruction: 0x732d7473
 8015438:	656c7974 	strbvs	r7, [ip, #-2420]!	; 0xfffff68c
 801543c:	6f6e203a 	svcvs	0x006e203a
 8015440:	0a3b656e 	beq	8eeea00 <__exidx_end+0xed7d80>
 8015444:	616d2020 	cmnvs	sp, r0, lsr #32
 8015448:	6e696772 	mcrvs	7, 3, r6, cr9, cr2, {3}
 801544c:	7031203a 	eorsvc	r2, r1, sl, lsr r0
 8015450:	70352078 	eorsvc	r2, r5, r8, ror r0
 8015454:	7d0a3b78 	vstrvc	d3, [sl, #-480]	; 0xfffffe20
 8015458:	65680a0a 	strbvs	r0, [r8, #-2570]!	; 0xfffff5f6
 801545c:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 8015460:	200a7b20 	andcs	r7, sl, r0, lsr #22
 8015464:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 8015468:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 801546c:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 8015470:	0a3b7865 	beq	8ef360c <__exidx_end+0xedc98c>
 8015474:	6f622020 	svcvs	0x00622020
 8015478:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
 801547c:	6461722d 	strbtvs	r7, [r1], #-557	; 0xfffffdd3
 8015480:	3a737569 	bcc	9cf2a2c <__exidx_end+0x1cdbdac>
 8015484:	78703420 	ldmdavc	r0!, {r5, sl, ip, sp}^
 8015488:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 801548c:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 8015490:	203a7265 	eorscs	r7, sl, r5, ror #4
 8015494:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8015498:	72672064 	rsbvc	r2, r7, #100	; 0x64
 801549c:	31207965 			; <UNDEFINED> instruction: 0x31207965
 80154a0:	0a3b7870 	beq	8ef3668 <__exidx_end+0xedc9e8>
 80154a4:	660a0a7d 			; <UNDEFINED> instruction: 0x660a0a7d
 80154a8:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
 80154ac:	0a7b2072 	beq	9edd67c <__exidx_end+0x1ec69fc>
 80154b0:	69642020 	stmdbvs	r4!, {r5, sp}^
 80154b4:	616c7073 	smcvs	50947	; 0xc703
 80154b8:	66203a79 			; <UNDEFINED> instruction: 0x66203a79
 80154bc:	3b78656c 	blcc	9e2ea74 <__exidx_end+0x1e17df4>
 80154c0:	6a20200a 	bvs	881d4f0 <__exidx_end+0x806870>
 80154c4:	69747375 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r8, r9, ip, sp, lr}^
 80154c8:	632d7966 			; <UNDEFINED> instruction: 0x632d7966
 80154cc:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
 80154d0:	203a746e 	eorscs	r7, sl, lr, ror #8
 80154d4:	746e6563 	strbtvc	r6, [lr], #-1379	; 0xfffffa9d
 80154d8:	0a3b7265 	beq	8ef1e74 <__exidx_end+0xedb1f4>
 80154dc:	6f622020 	svcvs	0x00622020
 80154e0:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
 80154e4:	6461722d 	strbtvs	r7, [r1], #-557	; 0xfffffdd3
 80154e8:	3a737569 	bcc	9cf2a94 <__exidx_end+0x1cdbe14>
 80154ec:	78703420 	ldmdavc	r0!, {r5, sl, ip, sp}^
 80154f0:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 80154f4:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 80154f8:	203a7265 	eorscs	r7, sl, r5, ror #4
 80154fc:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8015500:	72672064 	rsbvc	r2, r7, #100	; 0x64
 8015504:	31207965 			; <UNDEFINED> instruction: 0x31207965
 8015508:	0a3b7870 	beq	8ef36d0 <__exidx_end+0xedca50>
 801550c:	00000a7d 	andeq	r0, r0, sp, ror sl

08015510 <HttpContent>:
 8015510:	08014e20 	stmdaeq	r1, {r5, r9, sl, fp, lr}
 8015514:	080153c8 	stmdaeq	r1, {r3, r6, r7, r8, r9, ip, lr}
 8015518:	08014e2c 	stmdaeq	r1, {r2, r3, r5, r9, sl, fp, lr}
 801551c:	08015528 	stmdaeq	r1, {r3, r5, r8, sl, ip, lr}
 8015520:	08014e14 	stmdaeq	r1, {r2, r4, r9, sl, fp, lr}
 8015524:	08015267 	stmdaeq	r1, {r0, r1, r2, r5, r6, r9, ip, lr}

08015528 <index_js>:
 8015528:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 801552c:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8015530:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8015534:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 8015538:	534a7465 	movtpl	r7, #42085	; 0xa465
 801553c:	6a284e4f 	bvs	8a28e80 <__exidx_end+0xa12200>
 8015540:	296e6f73 	stmdbcs	lr!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8015544:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 8015548:	74656c09 	strbtvc	r6, [r5], #-3081	; 0xfffff3f7
 801554c:	6c727520 	cfldr64vs	mvdx7, [r2], #-128	; 0xffffff80
 8015550:	6a2f273d 	bvs	8bdf24c <__exidx_end+0xbc85cc>
 8015554:	2f6e6f73 	svccs	0x006e6f73
 8015558:	202b2027 	eorcs	r2, fp, r7, lsr #32
 801555c:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 8015560:	09090a3b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r9, fp}
 8015564:	20797274 	rsbscs	r7, r9, r4, ror r2
 8015568:	09090a7b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r6, r9, fp}
 801556c:	656c0909 	strbvs	r0, [ip, #-2313]!	; 0xfffff6f7
 8015570:	65722074 	ldrbvs	r2, [r2, #-116]!	; 0xffffff8c
 8015574:	77613d73 			; <UNDEFINED> instruction: 0x77613d73
 8015578:	20746961 	rsbscs	r6, r4, r1, ror #18
 801557c:	63746566 	cmnvs	r4, #427819008	; 0x19800000
 8015580:	72752868 	rsbsvc	r2, r5, #104, 16	; 0x680000
 8015584:	0a3b296c 	beq	8edfb3c <__exidx_end+0xec8ebc>
 8015588:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 801558c:	75746572 	ldrbvc	r6, [r4, #-1394]!	; 0xfffffa8e
 8015590:	61206e72 			; <UNDEFINED> instruction: 0x61206e72
 8015594:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 8015598:	73657220 	cmnvc	r5, #32, 4
 801559c:	6f736a2e 	svcvs	0x00736a2e
 80155a0:	3b29286e 	blcc	8a5f760 <__exidx_end+0xa48ae0>
 80155a4:	7d09090a 	vstrvc.16	s0, [r9, #-20]	; 0xffffffec	; <UNPREDICTABLE>
 80155a8:	74616320 	strbtvc	r6, [r1], #-800	; 0xfffffce0
 80155ac:	28206863 	stmdacs	r0!, {r0, r1, r5, r6, fp, sp, lr}
 80155b0:	6f727265 	svcvs	0x00727265
 80155b4:	7b202972 	blvc	881fb84 <__exidx_end+0x808f04>
 80155b8:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 80155bc:	6e6f6309 	cdpvs	3, 6, cr6, cr15, cr9, {0}
 80155c0:	656c6f73 	strbvs	r6, [ip, #-3955]!	; 0xfffff08d
 80155c4:	676f6c2e 	strbvs	r6, [pc, -lr, lsr #24]!
 80155c8:	72726528 	rsbsvc	r6, r2, #40, 10	; 0xa000000
 80155cc:	3b29726f 	blcc	8a71f90 <__exidx_end+0xa5b310>
 80155d0:	7d09090a 	vstrvc.16	s0, [r9, #-20]	; 0xffffffec	; <UNPREDICTABLE>
 80155d4:	0a0a7d0a 	beq	82b4a04 <__exidx_end+0x29dd84>
 80155d8:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 80155dc:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 80155e0:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 80155e4:	72206e6f 	eorvc	r6, r0, #1776	; 0x6f0
 80155e8:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 80155ec:	73694c72 	cmnvc	r9, #29184	; 0x7200
 80155f0:	20292874 	eorcs	r2, r9, r4, ror r8
 80155f4:	09090a7b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r6, r9, fp}
 80155f8:	2074656c 	rsbscs	r6, r4, ip, ror #10
 80155fc:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8015600:	6177613d 	cmnvs	r7, sp, lsr r1
 8015604:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8015608:	534a7465 	movtpl	r7, #42085	; 0xa465
 801560c:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8015610:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8015614:	0a3b2927 	beq	8edfab8 <__exidx_end+0xec8e38>
 8015618:	6f640909 	svcvs	0x00640909
 801561c:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 8015620:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 8015624:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
 8015628:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 801562c:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 8015630:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 8015634:	73694c64 	cmnvc	r9, #100, 24	; 0x6400
 8015638:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 801563c:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
 8015640:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
 8015644:	3c223d4c 	stccc	13, cr3, [r2], #-304	; 0xfffffed0
 8015648:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
 801564c:	73696c2b 	cmnvc	r9, #11008	; 0x2b00
 8015650:	696c2e74 	stmdbvs	ip!, {r2, r4, r5, r6, r9, sl, fp, sp}^
 8015654:	6e2e7473 	mcrvs	4, 1, r7, cr14, cr3, {3}
 8015658:	2b656d61 	blcs	9970be4 <__exidx_end+0x1959f64>
 801565c:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 80155dc <index_js+0xb4>
 8015660:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8015664:	2b223e69 	blcs	88a5010 <__exidx_end+0x88e390>
 8015668:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 801566c:	73696c2e 	cmnvc	r9, #11776	; 0x2e00
 8015670:	6f6e2e74 	svcvs	0x006e2e74
 8015674:	742e6564 	strtvc	r6, [lr], #-1380	; 0xfffffa9c
 8015678:	2b657079 	blcs	9971864 <__exidx_end+0x195abe4>
 801567c:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 80155fc <index_js+0xd4>
 8015680:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8015684:	2b223e69 	blcs	88a5030 <__exidx_end+0x88e3b0>
 8015688:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 801568c:	73696c2e 	cmnvc	r9, #11776	; 0x2e00
 8015690:	6f6e2e74 	svcvs	0x006e2e74
 8015694:	702e6564 	eorvc	r6, lr, r4, ror #10
 8015698:	2e74726f 	cdpcs	2, 7, cr7, cr4, cr15, {3}
 801569c:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 80156a0:	2f3c222b 	svccs	0x003c222b
 80156a4:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
 80156a8:	0a7d0a3b 	beq	9f57f9c <__exidx_end+0x1f4131c>
 80156ac:	7973610a 	ldmdbvc	r3!, {r1, r3, r8, sp, lr}^
 80156b0:	6620636e 	strtvs	r6, [r0], -lr, ror #6
 80156b4:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 80156b8:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 80156bc:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 80156c0:	69447265 	stmdbvs	r4, {r0, r2, r5, r6, r9, ip, sp, lr}^
 80156c4:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 80156c8:	2879726f 	ldmdacs	r9!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
 80156cc:	0a7b2029 	beq	9edd778 <__exidx_end+0x1ec6af8>
 80156d0:	6c090909 			; <UNDEFINED> instruction: 0x6c090909
 80156d4:	64207465 	strtvs	r7, [r0], #-1125	; 0xfffffb9b
 80156d8:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
 80156dc:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 80156e0:	6177613d 	cmnvs	r7, sp, lsr r1
 80156e4:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 80156e8:	534a7465 	movtpl	r7, #42085	; 0xa465
 80156ec:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 80156f0:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 80156f4:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 80156f8:	3b292779 	blcc	8a5f4e4 <__exidx_end+0xa48864>
 80156fc:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8015700:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8015704:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8015708:	0a22223d 	beq	889e004 <__exidx_end+0x887384>
 801570c:	6c090909 			; <UNDEFINED> instruction: 0x6c090909
 8015710:	66207465 	strtvs	r7, [r0], -r5, ror #8
 8015714:	6e656c69 	cdpvs	12, 6, cr6, cr5, cr9, {3}
 8015718:	73656d61 	cmnvc	r5, #6208	; 0x1840
 801571c:	6a624f3d 	bvs	98a9418 <__exidx_end+0x1892798>
 8015720:	2e746365 	cdpcs	3, 7, cr6, cr4, cr5, {3}
 8015724:	7379656b 	cmnvc	r9, #448790528	; 0x1ac00000
 8015728:	72696428 	rsbvc	r6, r9, #40, 8	; 0x28000000
 801572c:	6f746365 	svcvs	0x00746365
 8015730:	225b7972 	subscs	r7, fp, #1867776	; 0x1c8000
 8015734:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8015738:	295d2273 	ldmdbcs	sp, {r0, r1, r4, r5, r6, r9, sp}^
 801573c:	09090a3b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r9, fp}
 8015740:	6c696609 	stclvs	6, cr6, [r9], #-36	; 0xffffffdc
 8015744:	6d616e65 	stclvs	14, cr6, [r1, #-404]!	; 0xfffffe6c
 8015748:	662e7365 	strtvs	r7, [lr], -r5, ror #6
 801574c:	6145726f 	cmpvs	r5, pc, ror #4
 8015750:	66286863 	strtvs	r6, [r8], -r3, ror #16
 8015754:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 8015758:	286e6f69 	stmdacs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 801575c:	2979656b 	ldmdbcs	r9!, {r0, r1, r3, r5, r6, r8, sl, sp, lr}^
 8015760:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 8015764:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 8015768:	20726176 	rsbscs	r6, r2, r6, ror r1
 801576c:	756c6176 	strbvc	r6, [ip, #-374]!	; 0xfffffe8a
 8015770:	203d2065 	eorscs	r2, sp, r5, rrx
 8015774:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8015778:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 801577c:	66225b79 			; <UNDEFINED> instruction: 0x66225b79
 8015780:	73656c69 	cmnvc	r5, #26880	; 0x6900
 8015784:	6b5b5d22 	blvs	96ecc14 <__exidx_end+0x16d5f94>
 8015788:	3b5d7965 	blcc	9773d24 <__exidx_end+0x175d0a4>
 801578c:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8015790:	74680909 	strbtvc	r0, [r8], #-2313	; 0xfffff6f7
 8015794:	3d2b6c6d 	stccc	12, cr6, [fp, #-436]!	; 0xfffffe4c
 8015798:	706f3c22 	rsbvc	r3, pc, r2, lsr #24
 801579c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 80157a0:	6c617620 	stclvs	6, cr7, [r1], #-128	; 0xffffff80
 80157a4:	223d6575 	eorscs	r6, sp, #490733568	; 0x1d400000
 80157a8:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 80157ac:	223e222b 	eorscs	r2, lr, #-1342177278	; 0xb0000002
 80157b0:	6c61762b 	stclvs	6, cr7, [r1], #-172	; 0xffffff54
 80157b4:	222b6575 	eorcs	r6, fp, #490733568	; 0x1d400000
 80157b8:	706f2f3c 	rsbvc	r2, pc, ip, lsr pc	; <UNPREDICTABLE>
 80157bc:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 80157c0:	0a3b223e 	beq	8ede0c0 <__exidx_end+0xec7440>
 80157c4:	7d090909 	vstrvc.16	s0, [r9, #-18]	; 0xffffffee	; <UNPREDICTABLE>
 80157c8:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 80157cc:	6f640909 	svcvs	0x00640909
 80157d0:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 80157d4:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 80157d8:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
 80157dc:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 80157e0:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 80157e4:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 80157e8:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
 80157ec:	6f746365 	svcvs	0x00746365
 80157f0:	29227972 	stmdbcs	r2!, {r1, r4, r5, r6, r8, fp, ip, sp, lr}
 80157f4:	6e6e692e 	vmulvs.f16	s13, s28, s29	; <UNPREDICTABLE>
 80157f8:	54487265 	strbpl	r7, [r8], #-613	; 0xfffffd9b
 80157fc:	683d4c4d 	ldmdavs	sp!, {r0, r2, r3, r6, sl, fp, lr}
 8015800:	3b6c6d74 	blcc	9b30dd8 <__exidx_end+0x1b1a158>
 8015804:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8015808:	5f746567 	svcpl	0x00746567
 801580c:	28747874 	ldmdacs	r4!, {r2, r4, r5, r6, fp, ip, sp, lr}^
 8015810:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8015814:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 8015818:	5d305b73 	fldmdbxpl	r0!, {d5-d61}	;@ Deprecated
 801581c:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
 8015820:	73610a0a 	cmnvc	r1, #40960	; 0xa000
 8015824:	20636e79 	rsbcs	r6, r3, r9, ror lr
 8015828:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 801582c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8015830:	6e657220 	cdpvs	2, 6, cr7, cr5, cr0, {1}
 8015834:	56726564 	ldrbtpl	r6, [r2], -r4, ror #10
 8015838:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 801583c:	29286e6f 	stmdbcs	r8!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
 8015840:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 8015844:	74656c09 	strbtvc	r6, [r5], #-3081	; 0xfffff3f7
 8015848:	72657620 	rsbvc	r7, r5, #32, 12	; 0x2000000
 801584c:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 8015850:	6177613d 	cmnvs	r7, sp, lsr r1
 8015854:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8015858:	534a7465 	movtpl	r7, #42085	; 0xa465
 801585c:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8015860:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8015864:	276e6f69 	strbcs	r6, [lr, -r9, ror #30]!
 8015868:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 801586c:	636f6409 	cmnvs	pc, #150994944	; 0x9000000
 8015870:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
 8015874:	65672e74 	strbvs	r2, [r7, #-3700]!	; 0xfffff18c
 8015878:	656c4574 	strbvs	r4, [ip, #-1396]!	; 0xfffffa8c
 801587c:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
 8015880:	64497942 	strbvs	r7, [r9], #-2370	; 0xfffff6be
 8015884:	64692228 	strbtvs	r2, [r9], #-552	; 0xfffffdd8
 8015888:	73726556 	cmnvc	r2, #360710144	; 0x15800000
 801588c:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 8015890:	6e692e29 	cdpvs	14, 6, cr2, cr9, cr9, {1}
 8015894:	4872656e 	ldmdami	r2!, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^
 8015898:	3d4c4d54 	stclcc	13, cr4, [ip, #-336]	; 0xfffffeb0
 801589c:	696c3c22 	stmdbvs	ip!, {r1, r5, sl, fp, ip, sp}^
 80158a0:	2b22563e 	blcs	88ab1a0 <__exidx_end+0x894520>
 80158a4:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 80158a8:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 80158ac:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 80158b0:	2b6e6f69 	blcs	9bb165c <__exidx_end+0x1b9a9dc>
 80158b4:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8015834 <index_js+0x30c>
 80158b8:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 80158bc:	2b223e69 	blcs	88a5268 <__exidx_end+0x88e5e8>
 80158c0:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 80158c4:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 80158c8:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
 80158cc:	61642e64 	cmnvs	r4, r4, ror #28
 80158d0:	222b6574 	eorcs	r6, fp, #116, 10	; 0x1d000000
 80158d4:	696c2f3c 	stmdbvs	ip!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 80158d8:	696c3c3e 	stmdbvs	ip!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}^
 80158dc:	762b223e 			; <UNDEFINED> instruction: 0x762b223e
 80158e0:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 80158e4:	622e6e6f 	eorvs	r6, lr, #1776	; 0x6f0
 80158e8:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
 80158ec:	6d69742e 	cfstrdvs	mvd7, [r9, #-184]!	; 0xffffff48
 80158f0:	3c222b65 			; <UNDEFINED> instruction: 0x3c222b65
 80158f4:	3e696c2f 	cdpcc	12, 6, cr6, cr9, cr15, {1}
 80158f8:	3e696c3c 	mcrcc	12, 3, r6, cr9, cr12, {1}
 80158fc:	65762b22 	ldrbvs	r2, [r6, #-2850]!	; 0xfffff4de
 8015900:	6f697372 	svcvs	0x00697372
 8015904:	6f622e6e 	svcvs	0x00622e6e
 8015908:	2b647261 	blcs	9932294 <__exidx_end+0x191b614>
 801590c:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 801588c <index_js+0x364>
 8015910:	3b223e69 	blcc	88a52bc <__exidx_end+0x88e63c>
 8015914:	0a0a7d0a 	beq	82b4d44 <__exidx_end+0x29e0c4>
 8015918:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 801591c:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8015920:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8015924:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 8015928:	745f7465 	ldrbvc	r7, [pc], #-1125	; 8015930 <index_js+0x408>
 801592c:	73287478 			; <UNDEFINED> instruction: 0x73287478
 8015930:	20296c65 	eorcs	r6, r9, r5, ror #24
 8015934:	6c090a7b 			; <UNDEFINED> instruction: 0x6c090a7b
 8015938:	74207465 	strtvc	r7, [r0], #-1125	; 0xfffffb9b
 801593c:	613d7478 	teqvs	sp, r8, ror r4
 8015940:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 8015944:	74656720 	strbtvc	r6, [r5], #-1824	; 0xfffff8e0
 8015948:	4e4f534a 	cdpmi	3, 4, cr5, cr15, cr10, {2}
 801594c:	6c657328 	stclvs	3, cr7, [r5], #-160	; 0xffffff60
 8015950:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 8015954:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8015958:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 801595c:	3b22223d 	blcc	889e258 <__exidx_end+0x8875d8>
 8015960:	624f090a 	subvs	r0, pc, #163840	; 0x28000
 8015964:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
 8015968:	79656b2e 	stmdbvc	r5!, {r1, r2, r3, r5, r8, r9, fp, sp, lr}^
 801596c:	78742873 	ldmdavc	r4!, {r0, r1, r4, r5, r6, fp, sp}^
 8015970:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
 8015974:	2e295d6c 	cdpcs	13, 2, cr5, cr9, cr12, {3}
 8015978:	45726f66 	ldrbmi	r6, [r2, #-3942]!	; 0xfffff09a
 801597c:	28686361 	stmdacs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
 8015980:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 8015984:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8015988:	79656b28 	stmdbvc	r5!, {r3, r5, r8, r9, fp, sp, lr}^
 801598c:	0a7b2029 	beq	9edda38 <__exidx_end+0x1ec6db8>
 8015990:	61760909 	cmnvs	r6, r9, lsl #18
 8015994:	61762072 	cmnvs	r6, r2, ror r0
 8015998:	2065756c 	rsbcs	r7, r5, ip, ror #10
 801599c:	7874203d 	ldmdavc	r4!, {r0, r2, r3, r4, r5, sp}^
 80159a0:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
 80159a4:	6b5b5d6c 	blvs	96ecf5c <__exidx_end+0x16d62dc>
 80159a8:	3b5d7965 	blcc	9773f44 <__exidx_end+0x175d2c4>
 80159ac:	2009090a 	andcs	r0, r9, sl, lsl #18
 80159b0:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 80159b4:	3c223d2b 	stccc	13, cr3, [r2], #-172	; 0xffffff54
 80159b8:	3c3e7274 	lfmcc	f7, 4, [lr], #-464	; 0xfffffe30
 80159bc:	223e6474 	eorscs	r6, lr, #116, 8	; 0x74000000
 80159c0:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 80159c4:	2f3c222b 	svccs	0x003c222b
 80159c8:	3c3e6474 	cfldrscc	mvf6, [lr], #-464	; 0xfffffe30
 80159cc:	223e6474 	eorscs	r6, lr, #116, 8	; 0x74000000
 80159d0:	6c61762b 	stclvs	6, cr7, [r1], #-172	; 0xffffff54
 80159d4:	222b6575 	eorcs	r6, fp, #490733568	; 0x1d400000
 80159d8:	64742f3c 	ldrbtvs	r2, [r4], #-3900	; 0xfffff0c4
 80159dc:	742f3c3e 	strtvc	r3, [pc], #-3134	; 80159e4 <index_js+0x4bc>
 80159e0:	3b223e72 	blcc	88a53b0 <__exidx_end+0x88e730>
 80159e4:	297d090a 	ldmdbcs	sp!, {r1, r3, r8, fp}^
 80159e8:	64090a3b 	strvs	r0, [r9], #-2619	; 0xfffff5c5
 80159ec:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
 80159f0:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 80159f4:	45746567 	ldrbmi	r6, [r4, #-1383]!	; 0xfffffa99
 80159f8:	656d656c 	strbvs	r6, [sp, #-1388]!	; 0xfffffa94
 80159fc:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
 8015a00:	22286449 	eorcs	r6, r8, #1224736768	; 0x49000000
 8015a04:	78546469 	ldmdavc	r4, {r0, r3, r5, r6, sl, sp, lr}^
 8015a08:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 8015a0c:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
 8015a10:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
 8015a14:	74683d4c 	strbtvc	r3, [r8], #-3404	; 0xfffff2b4
 8015a18:	0a3b6c6d 	beq	8ef0bd4 <__exidx_end+0xed9f54>
 8015a1c:	720a0a7d 	andvc	r0, sl, #512000	; 0x7d000
 8015a20:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 8015a24:	73694c72 	cmnvc	r9, #29184	; 0x7200
 8015a28:	3b292874 	blcc	8a5fc00 <__exidx_end+0xa48f80>
 8015a2c:	6e65720a 	cdpvs	2, 6, cr7, cr5, cr10, {0}
 8015a30:	44726564 	ldrbtmi	r6, [r2], #-1380	; 0xfffffa9c
 8015a34:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
 8015a38:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8015a3c:	0a3b2928 	beq	8edfee4 <__exidx_end+0xec9264>
 8015a40:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 8015a44:	65567265 	ldrbvs	r7, [r6, #-613]	; 0xfffffd9b
 8015a48:	6f697372 	svcvs	0x00697372
 8015a4c:	3b29286e 	blcc	8a5fc0c <__exidx_end+0xa48f8c>
 8015a50:	3933320a 	ldmdbcc	r3!, {r1, r3, r9, ip, sp}
 8015a54:	3535322e 	ldrcc	r3, [r5, #-558]!	; 0xfffffdd2
 8015a58:	302e302e 	eorcc	r3, lr, lr, lsr #32
 8015a5c:	342e2500 	strtcc	r2, [lr], #-1280	; 0xfffffb00
 8015a60:	25207338 	strcs	r7, [r0, #-824]!	; 0xfffffcc8
 8015a64:	2e300073 	mrccs	0, 1, r0, cr0, cr3, {3}
 8015a68:	206f4e20 	rsbcs	r4, pc, r0, lsr #28
 8015a6c:	65736163 	ldrbvs	r6, [r3, #-355]!	; 0xfffffe9d
 8015a70:	616d2073 	smcvs	53763	; 0xd203
 8015a74:	65686374 	strbvs	r6, [r8, #-884]!	; 0xfffffc8c
 8015a78:	74202c64 	strtvc	r2, [r0], #-3172	; 0xfffff39c
 8015a7c:	20736968 	rsbscs	r6, r3, r8, ror #18
 8015a80:	756f6873 	strbvc	r6, [pc, #-2163]!	; 8015215 <RemoteConfigConst::PARAMS_ENABLE_FACTORY+0x119>
 8015a84:	276e646c 	strbcs	r6, [lr, -ip, ror #8]!
 8015a88:	61682074 	smcvs	33284	; 0x8204
 8015a8c:	6e657070 	mcrvs	0, 3, r7, cr5, cr0, {3}
 8015a90:	48000a21 	stmdami	r0, {r0, r5, r9, fp}
 8015a94:	4c005054 	stcmi	0, cr5, [r0], {84}	; 0x54
 8015a98:	42005054 	andmi	r5, r0, #84	; 0x54
 8015a9c:	67646972 			; <UNDEFINED> instruction: 0x67646972
 8015aa0:	20000a65 	andcs	r0, r0, r5, ror #20
 8015aa4:	6d726946 			; <UNDEFINED> instruction: 0x6d726946
 8015aa8:	65726177 	ldrbvs	r6, [r2, #-375]!	; 0xfffffe89
 8015aac:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8015ab0:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8015ab4:	4320000a 			; <UNDEFINED> instruction: 0x4320000a
 8015ab8:	20204449 	eorcs	r4, r0, r9, asr #8
 8015abc:	20202020 	eorcs	r2, r0, r0, lsr #32
 8015ac0:	7325203a 			; <UNDEFINED> instruction: 0x7325203a
 8015ac4:	4f20000a 	svcmi	0x0020000a
 8015ac8:	75707475 	ldrbvc	r7, [r0, #-1141]!	; 0xfffffb8b
 8015acc:	20000a74 	andcs	r0, r0, r4, ror sl
 8015ad0:	726f5020 	rsbvc	r5, pc, #32
 8015ad4:	32252074 	eorcc	r2, r5, #116	; 0x74
 8015ad8:	6e552064 	cdpvs	0, 5, cr2, cr5, cr4, {3}
 8015adc:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
 8015ae0:	25206573 	strcs	r6, [r0, #-1395]!	; 0xfffffa8d
 8015ae4:	2064332d 	rsbcs	r3, r4, sp, lsr #6
 8015ae8:	5d73255b 	cfldr64pl	mvdx2, [r3, #-364]!	; 0xfffffe94
 8015aec:	4920000a 	stmdbmi	r0!, {r1, r3}
 8015af0:	7475706e 	ldrbtvc	r7, [r5], #-110	; 0xffffff92
 8015af4:	2020000a 	eorcs	r0, r0, sl
 8015af8:	74726f50 	ldrbtvc	r6, [r2], #-3920	; 0xfffff0b0
 8015afc:	64322520 	ldrtvs	r2, [r2], #-1312	; 0xfffffae0
 8015b00:	696e5520 	stmdbvs	lr!, {r5, r8, sl, ip, lr}^
 8015b04:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8015b08:	2d252065 	stccs	0, cr2, [r5, #-404]!	; 0xfffffe6c
 8015b0c:	5b206433 	blpl	882ebe0 <__exidx_end+0x817f60>
 8015b10:	0a5d6425 	beq	976ebac <__exidx_end+0x1757f2c>
 8015b14:	79532000 	ldmdbvc	r3, {sp}^
 8015b18:	7268636e 	rsbvc	r6, r8, #-1207959551	; 0xb8000001
 8015b1c:	7a696e6f 	bvc	9a714e0 <__exidx_end+0x1a5a860>
 8015b20:	73692065 	cmnvc	r9, #101	; 0x65
 8015b24:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 8015b28:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
 8015b2c:	 	movwpl	r0, #2660	; 0xa64

08015b2f <E131MsgConst::START>:
 8015b2f:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
 8015b33:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 8015b37:	43417320 	movtmi	r7, #4896	; 0x1320
 8015b3b:	3145204e 	cmpcc	r5, lr, asr #32
 8015b3f:	0031332e 	eorseq	r3, r1, lr, lsr #6

08015b43 <E131MsgConst::PARAMS>:
 8015b43:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 8015b47:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 8015b4b:	20676e69 	rsbcs	r6, r7, r9, ror #28
 8015b4f:	4e434173 	mcrmi	1, 2, r4, cr3, cr3, {3}
 8015b53:	2e314520 	cfabs64cs	mvdx4, mvdx1
 8015b57:	 	movwvc	r3, #307	; 0x133

08015b5a <E131MsgConst::STARTED>:
 8015b5a:	4e434173 	mcrmi	1, 2, r4, cr3, cr3, {3}
 8015b5e:	2e314520 	cfabs64cs	mvdx4, mvdx1
 8015b62:	73203133 			; <UNDEFINED> instruction: 0x73203133
 8015b66:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
 8015b6a:	68006465 	stmdavs	r0, {r0, r2, r5, r6, sl, sp, lr}
 8015b6e:	00646c6f 	rsbeq	r6, r4, pc, ror #24
 8015b72:	0066666f 	rsbeq	r6, r6, pc, ror #12
 8015b76:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8015b7a:	6b636162 	blvs	98ee10a <__exidx_end+0x18d748a>
 8015b7e:	706e6900 	rsbvc	r6, lr, r0, lsl #18
 8015b82:	6f007475 	svcvs	0x00007475
 8015b86:	75707475 	ldrbvc	r7, [r0, #-1141]!	; 0xfffffb8b
 8015b8a:	69640074 	stmdbvs	r4!, {r2, r4, r5, r6}^
 8015b8e:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
 8015b92:	746c0065 	strbtvc	r0, [ip], #-101	; 0xffffff9b
 8015b96:	74680070 	strbtvc	r0, [r8], #-112	; 0xffffff90
 8015b9a:	4d440070 	stclmi	0, cr0, [r4, #-448]	; 0xfffffe40
 8015b9e:	754f2058 	strbvc	r2, [pc, #-88]	; 8015b4e <E131MsgConst::PARAMS+0xb>
 8015ba2:	74757074 	ldrbtvc	r7, [r5], #-116	; 0xffffff8c
 8015ba6:	584d4400 	stmdapl	sp, {sl, lr}^
 8015baa:	706e4920 	rsbvc	r4, lr, r0, lsr #18
 8015bae:	00007475 	andeq	r7, r0, r5, ror r4
	...

08015bb4 <CSWTCH.56>:
 8015bb4:	08015b6d 	stmdaeq	r1, {r0, r2, r3, r5, r6, r8, r9, fp, ip, lr}
 8015bb8:	08015b72 	stmdaeq	r1, {r1, r4, r5, r6, r8, r9, fp, ip, lr}
 8015bbc:	08014e46 	stmdaeq	r1, {r1, r2, r6, r9, sl, fp, lr}
 8015bc0:	08015b76 	stmdaeq	r1, {r1, r2, r4, r5, r6, r8, r9, fp, ip, lr}

08015bc4 <E131ParamsConst::PRIORITY>:
 8015bc4:	6f697270 	svcvs	0x00697270
 8015bc8:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
 8015bcc:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8015bd0:	00615f74 	rsbeq	r5, r1, r4, ror pc
 8015bd4:	72700000 	rsbsvc	r0, r0, #0
 8015bd8:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 8015bdc:	705f7974 	subsvc	r7, pc, r4, ror r9	; <UNPREDICTABLE>
 8015be0:	5f74726f 	svcpl	0x0074726f
 8015be4:	00000062 	andeq	r0, r0, r2, rrx
 8015be8:	6f697270 	svcvs	0x00697270
 8015bec:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
 8015bf0:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8015bf4:	00635f74 	rsbeq	r5, r3, r4, ror pc
 8015bf8:	72700000 	rsbsvc	r0, r0, #0
 8015bfc:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 8015c00:	705f7974 	subsvc	r7, pc, r4, ror r9	; <UNPREDICTABLE>
 8015c04:	5f74726f 	svcpl	0x0074726f
 8015c08:	00000064 	andeq	r0, r0, r4, rrx

08015c0c <E131ParamsConst::FILE_NAME>:
 8015c0c:	31333165 	teqcc	r3, r5, ror #2
 8015c10:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
	...

08015c15 <E117Const::ACN_PACKET_IDENTIFIER>:
 8015c15:	2d435341 	stclcs	3, cr5, [r3, #-260]	; 0xfffffefc
 8015c19:	312e3145 			; <UNDEFINED> instruction: 0x312e3145
 8015c1d:	00000037 	andeq	r0, r0, r7, lsr r0

08015c21 <E131BridgeConst::VERSION>:
 8015c21:	33321901 	teqcc	r2, #16384	; 0x4000
 8015c25:	35322e39 	ldrcc	r2, [r2, #-3641]!	; 0xfffff1c7
 8015c29:	35322e35 	ldrcc	r2, [r2, #-3637]!	; 0xfffff1cb
 8015c2d:	33312e30 	teqcc	r1, #48, 28	; 0x300
 8015c31:	33320033 	teqcc	r2, #51	; 0x33
 8015c35:	35322e39 	ldrcc	r2, [r2, #-3641]!	; 0xfffff1c7
 8015c39:	35322e35 	ldrcc	r2, [r2, #-3637]!	; 0xfffff1cb
 8015c3d:	33312e30 	teqcc	r1, #48, 28	; 0x300
 8015c41:	4c4c0034 	mcrrmi	0, 3, r0, ip, cr4
 8015c45:	44205052 	strtmi	r5, [r0], #-82	; 0xffffffae
 8015c49:	63697665 	cmnvs	r9, #105906176	; 0x6500000
 8015c4d:	6f632065 	svcvs	0x00632065
 8015c51:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 8015c55:	74617275 	strbtvc	r7, [r1], #-629	; 0xfffffd8b
 8015c59:	0a6e6f69 	beq	9bb1a05 <__exidx_end+0x1b9ad85>
 8015c5d:	6f502000 	svcvs	0x00502000
 8015c61:	55207472 	strpl	r7, [r0, #-1138]!	; 0xfffffb8e
 8015c65:	20205044 	eorcs	r5, r0, r4, asr #32
 8015c69:	20202020 	eorcs	r2, r0, r0, lsr #32
 8015c6d:	20202020 	eorcs	r2, r0, r0, lsr #32
 8015c71:	20202020 	eorcs	r2, r0, r0, lsr #32
 8015c75:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8015c79:	20000a64 	andcs	r0, r0, r4, ror #20
 8015c7d:	746c754d 	strbtvc	r7, [ip], #-1357	; 0xfffffab3
 8015c81:	73616369 	cmnvc	r1, #-1543503871	; 0xa4000001
 8015c85:	6f6a2074 	svcvs	0x006a2074
 8015c89:	52206e69 	eorpl	r6, r0, #1680	; 0x690
 8015c8d:	65757165 	ldrbvs	r7, [r5, #-357]!	; 0xfffffe9b
 8015c91:	3a207473 	bcc	8832e65 <__exidx_end+0x81c1e5>
 8015c95:	2e642520 	cdpcs	5, 6, cr2, cr4, cr0, {1}
 8015c99:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8015c9d:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8015ca1:	4d20000a 	stcmi	0, cr0, [r0, #-40]!	; 0xffffffd8
 8015ca5:	69746c75 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, sl, fp, sp, lr}^
 8015ca9:	74736163 	ldrbtvc	r6, [r3], #-355	; 0xfffffe9d
 8015cad:	73655220 	cmnvc	r5, #32, 4
 8015cb1:	736e6f70 	cmnvc	lr, #112, 30	; 0x1c0
 8015cb5:	20202065 	eorcs	r2, r0, r5, rrx
 8015cb9:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8015cbd:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8015cc1:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8015cc5:	0a64252e 	beq	991f185 <__exidx_end+0x1908505>
 8015cc9:	 	andeq	r0, r0, r0

08015ccc <vtable for LLRPDevice>:
	...
 8015cd4:	0800bfb3 	stmdaeq	r0, {r0, r1, r4, r5, r7, r8, r9, sl, fp, ip, sp, pc}
 8015cd8:	0800bfbd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, r8, r9, sl, fp, ip, sp, pc}
 8015cdc:	0800bfb5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8, r9, sl, fp, ip, sp, pc}
 8015ce0:	0800bfb7 	stmdaeq	r0, {r0, r1, r2, r4, r5, r7, r8, r9, sl, fp, ip, sp, pc}
 8015ce4:	0800bfb9 	stmdaeq	r0, {r0, r3, r4, r5, r7, r8, r9, sl, fp, ip, sp, pc}

08015ce8 <RDMNetConst::MSG_CONFIG>:
 8015ce8:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 8015cec:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 8015cf0:	20676e69 	rsbcs	r6, r7, r9, ror #28
 8015cf4:	4e4d4452 	mcrmi	4, 2, r4, cr13, cr2, {2}
 8015cf8:	 	andpl	r7, r0, #1694498816	; 0x65000000

08015cfb <RDMNetConst::MSG_STARTED>:
 8015cfb:	4e4d4452 	mcrmi	4, 2, r4, cr13, cr2, {2}
 8015cff:	73207465 			; <UNDEFINED> instruction: 0x73207465
 8015d03:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
 8015d07:	 	movwpl	r6, #1125	; 0x465

08015d0a <RDMNetConst::MSG_START>:
 8015d0a:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
 8015d0e:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 8015d12:	4d445220 	sfmmi	f5, 2, [r4, #-128]	; 0xffffff80
 8015d16:	0074654e 	rsbseq	r6, r4, lr, asr #10
 8015d1a:	4e4d4452 	mcrmi	4, 2, r4, cr13, cr2, {2}
 8015d1e:	000a7465 	andeq	r7, sl, r5, ror #8
 8015d22:	44494320 	strbmi	r4, [r9], #-800	; 0xfffffce0
 8015d26:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8015d2a:	52000a73 	andpl	r0, r0, #471040	; 0x73000
 8015d2e:	52204d44 	eorpl	r4, r0, #68, 26	; 0x1100
 8015d32:	6f707365 	svcvs	0x00707365
 8015d36:	7265646e 	rsbvc	r6, r5, #1845493760	; 0x6e000000
 8015d3a:	6e6f6320 	cdpvs	3, 6, cr6, cr15, cr0, {1}
 8015d3e:	75676966 	strbvc	r6, [r7, #-2406]!	; 0xfffff69a
 8015d42:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
 8015d46:	000a6e6f 	andeq	r6, sl, pc, ror #28
 8015d4a:	6f725020 	svcvs	0x00725020
 8015d4e:	6f636f74 	svcvs	0x00636f74
 8015d52:	6556206c 	ldrbvs	r2, [r6, #-108]	; 0xffffff94
 8015d56:	6f697372 	svcvs	0x00697372
 8015d5a:	6425206e 	strtvs	r2, [r5], #-110	; 0xffffff92
 8015d5e:	0a64252e 	beq	991f21e <__exidx_end+0x190859e>
 8015d62:	4d442000 	stclmi	0, cr2, [r4, #-0]
 8015d66:	64412058 	strbvs	r2, [r1], #-88	; 0xffffffa8
 8015d6a:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
 8015d6e:	20202073 	eorcs	r2, r0, r3, ror r0
 8015d72:	3a202020 	bcc	881ddfa <__exidx_end+0x80717a>
 8015d76:	0a642520 	beq	991f1fe <__exidx_end+0x190857e>
 8015d7a:	4d442000 	stclmi	0, cr2, [r4, #-0]
 8015d7e:	6f462058 	svcvs	0x00462058
 8015d82:	7270746f 	rsbsvc	r7, r0, #1862270976	; 0x6f000000
 8015d86:	20746e69 	rsbscs	r6, r4, r9, ror #28
 8015d8a:	3a202020 	bcc	881de12 <__exidx_end+0x807192>
 8015d8e:	0a642520 	beq	991f216 <__exidx_end+0x1908596>
 8015d92:	65502000 	ldrbvs	r2, [r0, #-0]
 8015d96:	6e6f7372 	mcrvs	3, 3, r7, cr15, cr2, {3}
 8015d9a:	74696c61 	strbtvc	r6, [r9], #-3169	; 0xfffff39f
 8015d9e:	64252079 	strtvs	r2, [r5], #-121	; 0xffffff87
 8015da2:	20666f20 	rsbcs	r6, r6, r0, lsr #30
 8015da6:	5b206425 	blpl	882ee42 <__exidx_end+0x8181c2>
 8015daa:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
 8015dae:	20000a5d 	andcs	r0, r0, sp, asr sl
 8015db2:	20627553 	rsbcs	r7, r2, r3, asr r5
 8015db6:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
 8015dba:	20736563 	rsbscs	r6, r3, r3, ror #10
 8015dbe:	20202020 	eorcs	r2, r0, r0, lsr #32
 8015dc2:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8015dc6:	20000a64 	andcs	r0, r0, r4, ror #20
 8015dca:	736e6553 	cmnvc	lr, #348127232	; 0x14c00000
 8015dce:	2073726f 	rsbscs	r7, r3, pc, ror #4
 8015dd2:	20202020 	eorcs	r2, r0, r0, lsr #32
 8015dd6:	20202020 	eorcs	r2, r0, r0, lsr #32
 8015dda:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8015dde:	00000a64 	andeq	r0, r0, r4, ror #20
	...

08015de4 <vtable for RDMDeviceResponder>:
	...
 8015dec:	0800c4a5 	stmdaeq	r0, {r0, r2, r5, r7, sl, lr, pc}
 8015df0:	0800c4c5 	stmdaeq	r0, {r0, r2, r6, r7, sl, lr, pc}
 8015df4:	0800c49f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r7, sl, lr, pc}
 8015df8:	0800c4a1 	stmdaeq	r0, {r0, r5, r7, sl, lr, pc}

08015dfc <UID_ALL>:
 8015dfc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 8015e00:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>

08015e04 <RDMHandler::PID_DEFINITIONS>:
 8015e04:	00000060 	andeq	r0, r0, r0, rrx
 8015e08:	0800c995 	stmdaeq	r0, {r0, r2, r4, r7, r8, fp, lr, pc}
	...
 8015e18:	01010000 	mrseq	r0, (UNDEF: 1)
 8015e1c:	00000080 	andeq	r0, r0, r0, lsl #1
 8015e20:	0800ca7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, fp, lr, pc}
	...
 8015e30:	01010100 	mrseq	r0, (UNDEF: 17)
 8015e34:	00000081 	andeq	r0, r0, r1, lsl #1
 8015e38:	0800ca99 	stmdaeq	r0, {r0, r3, r4, r7, r9, fp, lr, pc}
	...
 8015e48:	01010100 	mrseq	r0, (UNDEF: 17)
 8015e4c:	00000082 	andeq	r0, r0, r2, lsl #1
 8015e50:	0800cab9 	stmdaeq	r0, {r0, r3, r4, r5, r7, r9, fp, lr, pc}
 8015e54:	00000000 	andeq	r0, r0, r0
 8015e58:	0800cc09 	stmdaeq	r0, {r0, r3, sl, fp, lr, pc}
 8015e5c:	00000000 	andeq	r0, r0, r0
 8015e60:	01010100 	mrseq	r0, (UNDEF: 17)
 8015e64:	00000090 	muleq	r0, r0, r0
 8015e68:	0800c9fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, fp, lr, pc}
 8015e6c:	00000000 	andeq	r0, r0, r0
 8015e70:	0800cbd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp, lr, pc}
 8015e74:	00000000 	andeq	r0, r0, r0
 8015e78:	01010100 	mrseq	r0, (UNDEF: 17)
 8015e7c:	00001000 	andeq	r1, r0, r0
 8015e80:	0800caf5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r9, fp, lr, pc}
 8015e84:	00000000 	andeq	r0, r0, r0
 8015e88:	0800cb59 	stmdaeq	r0, {r0, r3, r4, r6, r8, r9, fp, lr, pc}
 8015e8c:	00000000 	andeq	r0, r0, r0
 8015e90:	01010000 	mrseq	r0, (UNDEF: 1)
 8015e94:	00001001 	andeq	r1, r0, r1
	...
 8015ea0:	0800cb11 	stmdaeq	r0, {r0, r4, r8, r9, fp, lr, pc}
 8015ea4:	00000000 	andeq	r0, r0, r0
 8015ea8:	01010100 	mrseq	r0, (UNDEF: 17)
 8015eac:	00000700 	andeq	r0, r0, r0, lsl #14
 8015eb0:	0800cf01 	stmdaeq	r0, {r0, r8, r9, sl, fp, lr, pc}
	...
 8015ec0:	01000000 	mrseq	r0, (UNDEF: 0)
 8015ec4:	00000701 	andeq	r0, r0, r1, lsl #14
 8015ec8:	0800cf29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, lr, pc}
	...
 8015ed8:	01000004 	tsteq	r0, r4
 8015edc:	00000702 	andeq	r0, r0, r2, lsl #14
 8015ee0:	0800cf75 	stmdaeq	r0, {r0, r2, r4, r5, r6, r8, r9, sl, fp, lr, pc}
	...
 8015ef0:	01000004 	tsteq	r0, r4
 8015ef4:	00000703 	andeq	r0, r0, r3, lsl #14
 8015ef8:	0800cfa5 	stmdaeq	r0, {r0, r2, r5, r7, r8, r9, sl, fp, lr, pc}
 8015efc:	00000000 	andeq	r0, r0, r0
 8015f00:	0800cfd1 	stmdaeq	r0, {r0, r4, r6, r7, r8, r9, sl, fp, lr, pc}
 8015f04:	00000000 	andeq	r0, r0, r0
 8015f08:	01000004 	tsteq	r0, r4
 8015f0c:	00000704 	andeq	r0, r0, r4, lsl #14
 8015f10:	0800d03d 	stmdaeq	r0, {r0, r2, r3, r4, r5, ip, lr, pc}
 8015f14:	00000000 	andeq	r0, r0, r0
 8015f18:	0800d06d 	stmdaeq	r0, {r0, r2, r3, r5, r6, ip, lr, pc}
 8015f1c:	00000000 	andeq	r0, r0, r0
 8015f20:	01000004 	tsteq	r0, r4
 8015f24:	00000705 	andeq	r0, r0, r5, lsl #14
 8015f28:	0800d0e1 	stmdaeq	r0, {r0, r5, r6, r7, ip, lr, pc}
	...
 8015f38:	01000004 	tsteq	r0, r4
 8015f3c:	00000707 	andeq	r0, r0, r7, lsl #14
	...
 8015f48:	0800d0b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, ip, lr, pc}
 8015f4c:	00000000 	andeq	r0, r0, r0
 8015f50:	01000004 	tsteq	r0, r4
 8015f54:	00000706 	andeq	r0, r0, r6, lsl #14
 8015f58:	0800d129 	stmdaeq	r0, {r0, r3, r5, r8, ip, lr, pc}
 8015f5c:	00000000 	andeq	r0, r0, r0
 8015f60:	0800d16d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r8, ip, lr, pc}
 8015f64:	00000000 	andeq	r0, r0, r0
 8015f68:	01000004 	tsteq	r0, r4
 8015f6c:	00000709 	andeq	r0, r0, r9, lsl #14
	...
 8015f78:	0800d1b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, r8, ip, lr, pc}
 8015f7c:	00000000 	andeq	r0, r0, r0
 8015f80:	01000004 	tsteq	r0, r4
 8015f84:	0000070b 	andeq	r0, r0, fp, lsl #14
 8015f88:	0800d019 	stmdaeq	r0, {r0, r3, r4, ip, lr, pc}
	...
 8015f98:	01000001 	tsteq	r0, r1
 8015f9c:	0000070a 	andeq	r0, r0, sl, lsl #14
 8015fa0:	0800d1e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, ip, lr, pc}
 8015fa4:	00000000 	andeq	r0, r0, r0
 8015fa8:	0800d219 	stmdaeq	r0, {r0, r3, r4, r9, ip, lr, pc}
 8015fac:	00000000 	andeq	r0, r0, r0
 8015fb0:	01000004 	tsteq	r0, r4
 8015fb4:	0000070c 	andeq	r0, r0, ip, lsl #14
 8015fb8:	0800d221 	stmdaeq	r0, {r0, r5, r9, ip, lr, pc}
 8015fbc:	00000000 	andeq	r0, r0, r0
 8015fc0:	0800d251 	stmdaeq	r0, {r0, r4, r6, r9, ip, lr, pc}
 8015fc4:	00000000 	andeq	r0, r0, r0
 8015fc8:	01000000 	mrseq	r0, (UNDEF: 0)
 8015fcc:	0000070d 	andeq	r0, r0, sp, lsl #14
 8015fd0:	0800d285 	stmdaeq	r0, {r0, r2, r7, r9, ip, lr, pc}
 8015fd4:	00000000 	andeq	r0, r0, r0
 8015fd8:	0800d2b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r9, ip, lr, pc}
 8015fdc:	00000000 	andeq	r0, r0, r0
 8015fe0:	01000000 	mrseq	r0, (UNDEF: 0)
 8015fe4:	70747468 	rsbsvc	r7, r4, r8, ror #8
 8015fe8:	2f2f3a73 	svccs	0x002f3a73
 8015fec:	32336467 	eorscc	r6, r3, #1728053248	; 0x67000000
 8015ff0:	786d642d 	stmdavc	sp!, {r0, r2, r3, r5, sl, sp, lr}^
 8015ff4:	67726f2e 	ldrbvs	r6, [r2, -lr, lsr #30]!
 8015ff8:	4d445200 	sfmmi	f5, 2, [r4, #-0]
 8015ffc:	76654420 	strbtvc	r4, [r5], -r0, lsr #8
 8016000:	20656369 	rsbcs	r6, r5, r9, ror #6
 8016004:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 8016008:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 801600c:	6f697461 	svcvs	0x00697461
 8016010:	20000a6e 	andcs	r0, r0, lr, ror #20
 8016014:	756e614d 	strbvc	r6, [lr, #-333]!	; 0xfffffeb3
 8016018:	74636166 	strbtvc	r6, [r3], #-358	; 0xfffffe9a
 801601c:	72657275 	rsbvc	r7, r5, #1342177287	; 0x50000007
 8016020:	6d614e20 	stclvs	14, cr4, [r1, #-128]!	; 0xffffff80
 8016024:	203a2065 	eorscs	r2, sl, r5, rrx
 8016028:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
 801602c:	4d20000a 	stcmi	0, cr0, [r0, #-40]!	; 0xffffffd8
 8016030:	66756e61 	ldrbtvs	r6, [r5], -r1, ror #28
 8016034:	75746361 	ldrbvc	r6, [r4, #-865]!	; 0xfffffc9f
 8016038:	20726572 	rsbscs	r6, r2, r2, ror r5
 801603c:	20204449 	eorcs	r4, r0, r9, asr #8
 8016040:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8016044:	2558322e 	ldrbcs	r3, [r8, #-558]	; 0xfffffdd2
 8016048:	0a58322e 	beq	9622908 <__exidx_end+0x160bc88>
 801604c:	65532000 	ldrbvs	r2, [r3, #-0]
 8016050:	6c616972 			; <UNDEFINED> instruction: 0x6c616972
 8016054:	6d754e20 	ldclvs	14, cr4, [r5, #-128]!	; 0xffffff80
 8016058:	20726562 	rsbscs	r6, r2, r2, ror #10
 801605c:	20202020 	eorcs	r2, r0, r0, lsr #32
 8016060:	2e25203a 	mcrcs	0, 1, r2, cr5, cr10, {1}
 8016064:	2e255832 	mcrcs	8, 1, r5, cr5, cr2, {1}
 8016068:	2e255832 	mcrcs	8, 1, r5, cr5, cr2, {1}
 801606c:	2e255832 	mcrcs	8, 1, r5, cr5, cr2, {1}
 8016070:	000a5832 	andeq	r5, sl, r2, lsr r8
 8016074:	6f6f5220 	svcvs	0x006f5220
 8016078:	616c2074 	smcvs	49668	; 0xc204
 801607c:	206c6562 	rsbcs	r6, ip, r2, ror #10
 8016080:	20202020 	eorcs	r2, r0, r0, lsr #32
 8016084:	3a202020 	bcc	881e10c <__exidx_end+0x80748c>
 8016088:	2a2e2520 	bcs	8b9f510 <__exidx_end+0xb88890>
 801608c:	20000a73 	andcs	r0, r0, r3, ror sl
 8016090:	646f7250 	strbtvs	r7, [pc], #-592	; 8016098 <RDMHandler::PID_DEFINITIONS+0x294>
 8016094:	20746375 	rsbscs	r6, r4, r5, ror r3
 8016098:	65746143 	ldrbvs	r6, [r4, #-323]!	; 0xfffffebd
 801609c:	79726f67 	ldmdbvc	r2!, {r0, r1, r2, r5, r6, r8, r9, sl, fp, sp, lr}^
 80160a0:	203a2020 	eorscs	r2, sl, r0, lsr #32
 80160a4:	58322e25 	ldmdapl	r2!, {r0, r2, r5, r9, sl, fp, sp}
 80160a8:	58322e25 	ldmdapl	r2!, {r0, r2, r5, r9, sl, fp, sp}
 80160ac:	5020000a 	eorpl	r0, r0, sl
 80160b0:	75646f72 	strbvc	r6, [r4, #-3954]!	; 0xfffff08e
 80160b4:	44207463 	strtmi	r7, [r0], #-1123	; 0xfffffb9d
 80160b8:	69617465 	stmdbvs	r1!, {r0, r2, r5, r6, sl, ip, sp, lr}^
 80160bc:	2020206c 	eorcs	r2, r0, ip, rrx
 80160c0:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 80160c4:	2558322e 	ldrbcs	r3, [r8, #-558]	; 0xfffffdd2
 80160c8:	0a58322e 	beq	9622988 <__exidx_end+0x160bd08>
	...

080160cd <DEVICE_LABEL>:
 80160cd:	32334447 	eorscc	r4, r3, #1191182336	; 0x47000000
 80160d1:	37303246 	ldrcc	r3, [r0, -r6, asr #4]!
 80160d5:	52204752 	eorpl	r4, r0, #21495808	; 0x1480000
 80160d9:	44204d44 	strtmi	r4, [r0], #-3396	; 0xfffff2bc
 80160dd:	63697665 	cmnvs	r9, #105906176	; 0x6500000
 80160e1:	 	subseq	r0, r0, r5, rrx

080160e3 <RDMConst::MANUFACTURER_ID>:
 80160e3:	 	strbtvc	r0, [r8], #-80	; 0xffffffb0

080160e5 <RDMConst::MANUFACTURER_NAME>:
 80160e5:	70747468 	rsbsvc	r7, r4, r8, ror #8
 80160e9:	772f2f3a 			; <UNDEFINED> instruction: 0x772f2f3a
 80160ed:	6f2e7777 	svcvs	0x002e7777
 80160f1:	676e6172 			; <UNDEFINED> instruction: 0x676e6172
 80160f5:	2d697065 	stclcs	0, cr7, [r9, #-404]!	; 0xfffffe6c
 80160f9:	2e786d64 	cdpcs	13, 7, cr6, cr8, cr4, {3}
 80160fd:	0067726f 	rsbeq	r7, r7, pc, ror #4
 8016101:	78383025 	ldmdavc	r8!, {r0, r2, r5, ip, sp}
 8016105:	3430252d 	ldrtcc	r2, [r0], #-1325	; 0xfffffad3
 8016109:	30252d78 	eorcc	r2, r5, r8, ror sp
 801610d:	252d7834 	strcs	r7, [sp, #-2100]!	; 0xfffff7cc
 8016111:	25783230 	ldrbcs	r3, [r8, #-560]!	; 0xfffffdd0
 8016115:	2d783230 	lfmcs	f3, 2, [r8, #-192]!	; 0xffffff40
 8016119:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 801611d:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 8016121:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 8016125:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 8016129:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 801612d:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 8016131:	584d4400 	stmdapl	sp, {sl, lr}^
 8016135:	6e655320 	cdpvs	3, 6, cr5, cr5, cr0, {1}
 8016139:	20000a64 	andcs	r0, r0, r4, ror #20
 801613d:	61657242 	cmnvs	r5, r2, asr #4
 8016141:	6974206b 	ldmdbvs	r4!, {r0, r1, r3, r5, r6, sp}^
 8016145:	2020656d 	eorcs	r6, r0, sp, ror #10
 8016149:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 801614d:	20000a75 	andcs	r0, r0, r5, ror sl
 8016151:	2042414d 	subcs	r4, r2, sp, asr #2
 8016155:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 8016159:	20202020 	eorcs	r2, r0, r0, lsr #32
 801615d:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8016161:	20000a75 	andcs	r0, r0, r5, ror sl
 8016165:	72666552 	rsbvc	r6, r6, #343932928	; 0x14800000
 8016169:	20687365 	rsbcs	r7, r8, r5, ror #6
 801616d:	65746172 	ldrbvs	r6, [r4, #-370]!	; 0xfffffe8e
 8016171:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8016175:	20000a75 	andcs	r0, r0, r5, ror sl
 8016179:	746f6c53 	strbtvc	r6, [pc], #-3155	; 8016181 <RDMConst::MANUFACTURER_NAME+0x9c>
 801617d:	20202073 	eorcs	r2, r0, r3, ror r0
 8016181:	20202020 	eorcs	r2, r0, r0, lsr #32
 8016185:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8016189:	 	andeq	r0, r0, r5, ror sl

0801618c <vtable for DmxSend>:
	...
 8016194:	0800d4b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, sl, ip, lr, pc}
 8016198:	0800d5a1 	stmdaeq	r0, {r0, r5, r7, r8, sl, ip, lr, pc}
 801619c:	0800d4bd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, sl, ip, lr, pc}
 80161a0:	0800d4ed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, sl, ip, lr, pc}
 80161a4:	0800d521 	stmdaeq	r0, {r0, r5, r8, sl, ip, lr, pc}
 80161a8:	0800d531 	stmdaeq	r0, {r0, r4, r5, r8, sl, ip, lr, pc}
 80161ac:	0800d53d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r8, sl, ip, lr, pc}
 80161b0:	0800d549 	stmdaeq	r0, {r0, r3, r6, r8, sl, ip, lr, pc}
 80161b4:	08011c69 	stmdaeq	r1, {r0, r3, r5, r6, sl, fp, ip}
 80161b8:	08011c5f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, sl, fp, ip}
 80161bc:	08011c63 	stmdaeq	r1, {r0, r1, r5, r6, sl, fp, ip}
 80161c0:	08011c6d 	stmdaeq	r1, {r0, r2, r3, r5, r6, sl, fp, ip}

080161c4 <DmxParamsConst::BREAK_TIME>:
 80161c4:	61657262 	cmnvs	r5, r2, ror #4
 80161c8:	69745f6b 	ldmdbvs	r4!, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
 80161cc:	 	movwvc	r6, #1389	; 0x56d

080161cf <DmxParamsConst::SLOTS_COUNT>:
 80161cf:	746f6c73 	strbtvc	r6, [pc], #-3187	; 80161d7 <DmxParamsConst::SLOTS_COUNT+0x8>
 80161d3:	6f635f73 	svcvs	0x00635f73
 80161d7:	00746e75 	rsbseq	r6, r4, r5, ror lr

080161db <DmxParamsConst::REFRESH_RATE>:
 80161db:	72666572 	rsbvc	r6, r6, #478150656	; 0x1c800000
 80161df:	5f687365 	svcpl	0x00687365
 80161e3:	65746172 	ldrbvs	r6, [r4, #-370]!	; 0xfffffe8e
	...

080161e8 <DmxParamsConst::MAB_TIME>:
 80161e8:	5f62616d 	svcpl	0x0062616d
 80161ec:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
	...

080161f1 <DmxParamsConst::FILE_NAME>:
 80161f1:	61726170 	cmnvs	r2, r0, ror r1
 80161f5:	742e736d 	strtvc	r7, [lr], #-877	; 0xfffffc93
 80161f9:	 	andeq	r7, r0, r8, ror r4

080161fc <s_DirGpio>:
 80161fc:	40010c00 	andmi	r0, r1, r0, lsl #24
 8016200:	00000400 	andeq	r0, r0, r0, lsl #8
 8016204:	40010800 	andmi	r0, r1, r0, lsl #16
 8016208:	00000800 	andeq	r0, r0, r0, lsl #16

0801620c <s_aStorSize>:
 801620c:	00000060 	andeq	r0, r0, r0, rrx
 8016210:	00000090 	muleq	r0, r0, r0
 8016214:	00000020 	andeq	r0, r0, r0, lsr #32
 8016218:	00000040 	andeq	r0, r0, r0, asr #32
 801621c:	00000060 	andeq	r0, r0, r0, rrx
 8016220:	00000040 	andeq	r0, r0, r0, asr #32
 8016224:	00000020 	andeq	r0, r0, r0, lsr #32
 8016228:	00000020 	andeq	r0, r0, r0, lsr #32
 801622c:	000001e0 	andeq	r0, r0, r0, ror #3
 8016230:	00000040 	andeq	r0, r0, r0, asr #32
 8016234:	00000020 	andeq	r0, r0, r0, lsr #32
 8016238:	00000060 	andeq	r0, r0, r0, rrx
 801623c:	00000030 	andeq	r0, r0, r0, lsr r0
 8016240:	00000020 	andeq	r0, r0, r0, lsr #32
 8016244:	000003b0 			; <UNDEFINED> instruction: 0x000003b0
 8016248:	00000030 	andeq	r0, r0, r0, lsr r0
 801624c:	00000040 	andeq	r0, r0, r0, asr #32
 8016250:	00000020 	andeq	r0, r0, r0, lsr #32
 8016254:	00000060 	andeq	r0, r0, r0, rrx
 8016258:	00000020 	andeq	r0, r0, r0, lsr #32
 801625c:	00000400 	andeq	r0, r0, r0, lsl #8
 8016260:	00000020 	andeq	r0, r0, r0, lsr #32
 8016264:	00000020 	andeq	r0, r0, r0, lsr #32
 8016268:	00000040 	andeq	r0, r0, r0, asr #32
 801626c:	00000060 	andeq	r0, r0, r0, rrx
 8016270:	00000020 	andeq	r0, r0, r0, lsr #32
 8016274:	00000020 	andeq	r0, r0, r0, lsr #32
 8016278:	000000c0 	andeq	r0, r0, r0, asr #1

0801627c <vtable for StoreDisplayUdf>:
	...
 8016284:	0800e819 	stmdaeq	r0, {r0, r3, r4, fp, sp, lr, pc}
 8016288:	0800e865 	stmdaeq	r0, {r0, r2, r5, r6, fp, sp, lr, pc}
 801628c:	0800e841 	stmdaeq	r0, {r0, r6, fp, sp, lr, pc}
 8016290:	0800e81d 	stmdaeq	r0, {r0, r2, r3, r4, fp, sp, lr, pc}

08016294 <vtable for StoreDmxSend>:
	...
 801629c:	0800e885 	stmdaeq	r0, {r0, r2, r7, fp, sp, lr, pc}
 80162a0:	0800e8d1 	stmdaeq	r0, {r0, r4, r6, r7, fp, sp, lr, pc}
 80162a4:	0800e8ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, fp, sp, lr, pc}
 80162a8:	0800e889 	stmdaeq	r0, {r0, r3, r7, fp, sp, lr, pc}

080162ac <vtable for StoreNetwork>:
	...
 80162b4:	0800e8f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, fp, sp, lr, pc}
 80162b8:	0800e9d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, fp, sp, lr, pc}
 80162bc:	0800e8f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, fp, sp, lr, pc}
 80162c0:	0800e9e9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r8, fp, sp, lr, pc}
 80162c4:	0800e979 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, fp, sp, lr, pc}
 80162c8:	0800e94d 	stmdaeq	r0, {r0, r2, r3, r6, r8, fp, sp, lr, pc}
 80162cc:	0800e91d 	stmdaeq	r0, {r0, r2, r3, r4, r8, fp, sp, lr, pc}
 80162d0:	0800e9a5 	stmdaeq	r0, {r0, r2, r5, r7, r8, fp, sp, lr, pc}
 80162d4:	08008385 	stmdaeq	r0, {r0, r2, r7, r8, r9, pc}
 80162d8:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 80162dc:	00000000 	andeq	r0, r0, r0
 80162e0:	0800e8f3 	stmdaeq	r0, {r0, r1, r4, r5, r6, r7, fp, sp, lr, pc}
 80162e4:	0800e9e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, fp, sp, lr, pc}
 80162e8:	0800e99d 	stmdaeq	r0, {r0, r2, r3, r4, r7, r8, fp, sp, lr, pc}
 80162ec:	0800e971 	stmdaeq	r0, {r0, r4, r5, r6, r8, fp, sp, lr, pc}
 80162f0:	0800e945 	stmdaeq	r0, {r0, r2, r6, r8, fp, sp, lr, pc}
 80162f4:	0800e9cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, r8, fp, sp, lr, pc}
 80162f8:	080083ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, pc}

080162fc <vtable for StoreRDMDevice>:
	...
 8016304:	0800ea21 	stmdaeq	r0, {r0, r5, r9, fp, sp, lr, pc}
 8016308:	0800ea91 	stmdaeq	r0, {r0, r4, r7, r9, fp, sp, lr, pc}
 801630c:	0800ea29 	stmdaeq	r0, {r0, r3, r5, r9, fp, sp, lr, pc}
 8016310:	0800eaa5 	stmdaeq	r0, {r0, r2, r5, r7, r9, fp, sp, lr, pc}
 8016314:	0800ea4d 	stmdaeq	r0, {r0, r2, r3, r6, r9, fp, sp, lr, pc}
 8016318:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 801631c:	00000000 	andeq	r0, r0, r0
 8016320:	0800ea23 	stmdaeq	r0, {r0, r1, r5, r9, fp, sp, lr, pc}
 8016324:	0800ea9d 	stmdaeq	r0, {r0, r2, r3, r4, r7, r9, fp, sp, lr, pc}
 8016328:	0800ea89 	stmdaeq	r0, {r0, r3, r7, r9, fp, sp, lr, pc}

0801632c <vtable for StoreRemoteConfig>:
	...
 8016334:	0800eae1 	stmdaeq	r0, {r0, r5, r6, r7, r9, fp, sp, lr, pc}
 8016338:	0800eb2d 	stmdaeq	r0, {r0, r2, r3, r5, r8, r9, fp, sp, lr, pc}
 801633c:	0800eb09 	stmdaeq	r0, {r0, r3, r8, r9, fp, sp, lr, pc}
 8016340:	0800eae5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r9, fp, sp, lr, pc}

08016344 <vtable for StoreE131>:
	...
 801634c:	0800eb4d 	stmdaeq	r0, {r0, r2, r3, r6, r8, r9, fp, sp, lr, pc}
 8016350:	0800eb99 	stmdaeq	r0, {r0, r3, r4, r7, r8, r9, fp, sp, lr, pc}
 8016354:	0800eb75 	stmdaeq	r0, {r0, r2, r4, r5, r6, r8, r9, fp, sp, lr, pc}
 8016358:	0800eb51 	stmdaeq	r0, {r0, r4, r6, r8, r9, fp, sp, lr, pc}
 801635c:	3a434d46 	bcc	90e987c <__exidx_end+0x10d2bfc>
 8016360:	74654420 	strbtvc	r4, [r5], #-1056	; 0xfffffbe0
 8016364:	65746365 	ldrbvs	r6, [r4, #-869]!	; 0xfffffc9b
 8016368:	73252064 			; <UNDEFINED> instruction: 0x73252064
 801636c:	74697720 	strbtvc	r7, [r9], #-1824	; 0xfffff8e0
 8016370:	6f742068 	svcvs	0x00742068
 8016374:	206c6174 	rsbcs	r6, ip, r4, ror r1
 8016378:	62206425 	eorvs	r6, r0, #620756992	; 0x25000000
 801637c:	73657479 	cmnvc	r5, #2030043136	; 0x79000000
 8016380:	64255b20 	strtvs	r5, [r5], #-2848	; 0xfffff4e0
 8016384:	5d426b20 	vstrpl	d22, [r2, #-128]	; 0xffffff80
 8016388:	6374000a 	cmnvs	r4, #10
 801638c:	65625f70 	strbvs	r5, [r2, #-3952]!	; 0xfffff090
 8016390:	3a6e6967 	bcc	9bb0934 <__exidx_end+0x1b99cb4>
 8016394:	6f6f7420 	svcvs	0x006f7420
 8016398:	6e616d20 	cdpvs	13, 6, cr6, cr1, cr0, {1}
 801639c:	6f632079 	svcvs	0x00632079
 80163a0:	63656e6e 	cmnvs	r5, #1760	; 0x6e0
 80163a4:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 80163a8:	69620073 	stmdbvs	r2!, {r0, r1, r4, r5, r6}^
 80163ac:	7500646e 	strvc	r6, [r0, #-1134]	; 0xfffffb92
 80163b0:	6e69626e 	cdpvs	2, 6, cr6, cr9, cr14, {3}
 80163b4:	41000a64 	tstmi	r0, r4, ror #20
 80163b8:	6c205052 	stcvs	0, cr5, [r0], #-328	; 0xfffffeb8
 80163bc:	756b6f6f 	strbvc	r6, [fp, #-3951]!	; 0xfffff091
 80163c0:	61662070 	smcvs	25088	; 0x6200
 80163c4:	64656c69 	strbtvs	r6, [r5], #-3177	; 0xfffff397
 80163c8:	203e2d20 	eorscs	r2, lr, r0, lsr #26
 80163cc:	61666564 	cmnvs	r6, r4, ror #10
 80163d0:	20746c75 	rsbscs	r6, r4, r5, ror ip
 80163d4:	65746167 	ldrbvs	r6, [r4, #-359]!	; 0xfffffe99
 80163d8:	0a796177 	beq	9e6e9bc <__exidx_end+0x1e57d3c>
 80163dc:	50524100 	subspl	r4, r2, r0, lsl #2
 80163e0:	6f6f6c20 	svcvs	0x006f6c20
 80163e4:	2070756b 	rsbscs	r7, r0, fp, ror #10
 80163e8:	6c696166 	stfvse	f6, [r9], #-408	; 0xfffffe68
 80163ec:	000a6465 	andeq	r6, sl, r5, ror #8

080163f0 <NetworkConst::MSG_MDNS_CONFIG>:
 80163f0:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 80163f4:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 80163f8:	20676e69 	rsbcs	r6, r7, r9, ror #28
 80163fc:	534e444d 	movtpl	r4, #58445	; 0xe44d
	...

08016401 <NetworkConst::MSG_NETWORK_INIT>:
 8016401:	7774654e 	ldrbvc	r6, [r4, -lr, asr #10]!
 8016405:	206b726f 	rsbcs	r7, fp, pc, ror #4
 8016409:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
 801640d:	34323200 	ldrtcc	r3, [r2], #-512	; 0xfffffe00
 8016411:	302e302e 	eorcc	r3, lr, lr, lsr #32
 8016415:	3135322e 	teqcc	r5, lr, lsr #4
 8016419:	63745f00 	cmnvs	r4, #0, 30
 801641d:	6f6c2e70 	svcvs	0x006c2e70
 8016421:	006c6163 	rsbeq	r6, ip, r3, ror #2
 8016425:	7265735f 	rsbvc	r7, r5, #2080374785	; 0x7c000001
 8016429:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
 801642d:	645f2e73 	ldrbvs	r2, [pc], #-3699	; 8016435 <NetworkConst::MSG_NETWORK_INIT+0x34>
 8016431:	732d736e 			; <UNDEFINED> instruction: 0x732d736e
 8016435:	755f2e64 	ldrbvc	r2, [pc, #-3684]	; 80155d9 <index_js+0xb1>
 8016439:	6c2e7064 	stcvs	0, cr7, [lr], #-400	; 0xfffffe70
 801643d:	6c61636f 	stclvs	3, cr6, [r1], #-444	; 0xfffffe44
 8016441:	4e446d00 	cdpmi	13, 4, cr6, cr4, cr0, {0}
 8016445:	20000a53 	andcs	r0, r0, r3, asr sl
 8016449:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 801644d:	6e6e7572 	mcrvs	5, 3, r7, cr14, cr2, {3}
 8016451:	0a676e69 	beq	99f1dfd <__exidx_end+0x19db17d>
 8016455:	614e2000 	mrsvs	r2, (UNDEF: 78)
 8016459:	3a20656d 	bcc	882fa15 <__exidx_end+0x818d95>
 801645d:	0a732520 	beq	9cdf8e5 <__exidx_end+0x1cc8c65>
 8016461:	73252000 			; <UNDEFINED> instruction: 0x73252000
 8016465:	20642520 	rsbcs	r2, r4, r0, lsr #10
 8016469:	000a7325 	andeq	r7, sl, r5, lsr #6
 801646d:	30687465 	rsbcc	r7, r8, r5, ror #8
 8016471:	67696700 	strbvs	r6, [r9, -r0, lsl #14]!
 8016475:	76656461 	strbtvc	r6, [r5], -r1, ror #8
 8016479:	5f656369 	svcpl	0x00656369
 801647d:	74654e00 	strbtvc	r4, [r5], #-3584	; 0xfffff200
 8016481:	6b726f77 	blvs	9cb2265 <__exidx_end+0x1c9b5e5>
 8016485:	4820000a 	stmdami	r0!, {r1, r3}
 8016489:	6e74736f 	cdpvs	3, 7, cr7, cr4, cr15, {3}
 801648d:	20656d61 	rsbcs	r6, r5, r1, ror #26
 8016491:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8016495:	20000a73 	andcs	r0, r0, r3, ror sl
 8016499:	614e6649 	cmpvs	lr, r9, asr #12
 801649d:	2020656d 	eorcs	r6, r0, sp, ror #10
 80164a1:	203a2020 	eorscs	r2, sl, r0, lsr #32
 80164a5:	203a6425 	eorscs	r6, sl, r5, lsr #8
 80164a9:	000a7325 	andeq	r7, sl, r5, lsr #6
 80164ad:	656e4920 	strbvs	r4, [lr, #-2336]!	; 0xfffff6e0
 80164b1:	20202074 	eorcs	r2, r0, r4, ror r0
 80164b5:	3a202020 	bcc	881e53d <__exidx_end+0x8078bd>
 80164b9:	2e642520 	cdpcs	5, 6, cr2, cr4, cr0, {1}
 80164bd:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80164c1:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80164c5:	0a64252f 	beq	991f989 <__exidx_end+0x1908d09>
 80164c9:	654e2000 	strbvs	r2, [lr, #-0]
 80164cd:	73616d74 	cmnvc	r1, #116, 26	; 0x1d00
 80164d1:	2020206b 	eorcs	r2, r0, fp, rrx
 80164d5:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 80164d9:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 80164dd:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80164e1:	20000a64 	andcs	r0, r0, r4, ror #20
 80164e5:	65746147 	ldrbvs	r6, [r4, #-327]!	; 0xfffffeb9
 80164e9:	20796177 	rsbscs	r6, r9, r7, ror r1
 80164ed:	203a2020 	eorscs	r2, sl, r0, lsr #32
 80164f1:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80164f5:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80164f9:	0a64252e 	beq	991f9b9 <__exidx_end+0x1908d39>
 80164fd:	72422000 	subvc	r2, r2, #0
 8016501:	6364616f 	cmnvs	r4, #-1073741797	; 0xc000001b
 8016505:	20747361 	rsbscs	r7, r4, r1, ror #6
 8016509:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 801650d:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8016511:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8016515:	20000a64 	andcs	r0, r0, r4, ror #20
 8016519:	2063614d 	rsbcs	r6, r3, sp, asr #2
 801651d:	20202020 	eorcs	r2, r0, r0, lsr #32
 8016521:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8016525:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8016529:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 801652d:	2e253a78 			; <UNDEFINED> instruction: 0x2e253a78
 8016531:	253a7832 	ldrcs	r7, [sl, #-2098]!	; 0xfffff7ce
 8016535:	3a78322e 	bcc	9e22df5 <__exidx_end+0x1e0c175>
 8016539:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 801653d:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 8016541:	20000a78 	andcs	r0, r0, r8, ror sl
 8016545:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
 8016549:	20202020 	eorcs	r2, r0, r0, lsr #32
 801654d:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8016551:	000a6325 	andeq	r6, sl, r5, lsr #6
 8016555:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
 8016559:	49206369 	stmdbmi	r0!, {r0, r3, r5, r6, r8, r9, sp, lr}
 801655d:	 	rsbvc	r0, r9, r0, asr r0

0801655f <NetworkParamsConst::IP_ADDRESS>:
 801655f:	615f7069 	cmpvs	pc, r9, rrx
 8016563:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0xfffffb9c
 8016567:	 	strvs	r7, [r0], #-883	; 0xfffffc8d

0801656a <NetworkParamsConst::DEFAULT_GATEWAY>:
 801656a:	61666564 	cmnvs	r6, r4, ror #10
 801656e:	5f746c75 	svcpl	0x00746c75
 8016572:	65746167 	ldrbvs	r6, [r4, #-359]!	; 0xfffffe99
 8016576:	00796177 	rsbseq	r6, r9, r7, ror r1

0801657a <NetworkParamsConst::DHCP_RETRY_TIME>:
 801657a:	70636864 	rsbvc	r6, r3, r4, ror #16
 801657e:	7465725f 	strbtvc	r7, [r5], #-607	; 0xfffffda1
 8016582:	745f7972 	ldrbvc	r7, [pc], #-2418	; 801658a <NetworkParamsConst::HOSTNAME>
 8016586:	00656d69 	rsbeq	r6, r5, r9, ror #26

0801658a <NetworkParamsConst::HOSTNAME>:
 801658a:	74736f68 	ldrbtvc	r6, [r3], #-3944	; 0xfffff098
 801658e:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

08016593 <NetworkParamsConst::NET_MASK>:
 8016593:	5f74656e 	svcpl	0x0074656e
 8016597:	6b73616d 	blvs	9ceeb53 <__exidx_end+0x1cd7ed3>
	...

0801659c <NetworkParamsConst::USE_DHCP>:
 801659c:	5f657375 	svcpl	0x00657375
 80165a0:	70636864 	rsbvc	r6, r3, r4, ror #16
	...

080165a5 <NetworkParamsConst::FILE_NAME>:
 80165a5:	7774656e 	ldrbvc	r6, [r4, -lr, ror #10]!
 80165a9:	2e6b726f 	cdpcs	2, 6, cr7, cr11, cr15, {3}
 80165ad:	00747874 	rsbseq	r7, r4, r4, ror r8
 80165b1:	65687445 	strbvs	r7, [r8, #-1093]!	; 0xfffffbbb
 80165b5:	74656e72 	strbtvc	r6, [r5], #-3698	; 0xfffff18e
 80165b9:	61747320 	cmnvs	r4, r0, lsr #6
 80165bd:	25007472 	strcs	r7, [r0, #-1138]	; 0xfffffb8e
 80165c1:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80165c5:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 80165c9:	252f6425 	strcs	r6, [pc, #-1061]!	; 80161ac <vtable for DmxSend+0x20>
 80165cd:	63252064 			; <UNDEFINED> instruction: 0x63252064
 80165d1:	203a4e00 	eorscs	r4, sl, r0, lsl #28
 80165d5:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80165d9:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80165dd:	0064252e 	rsbeq	r2, r4, lr, lsr #10
 80165e1:	25203a47 	strcs	r3, [r0, #-2631]!	; 0xfffff5b9
 80165e5:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80165e9:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 80165ed:	46006425 	strmi	r6, [r0], -r5, lsr #8
 80165f1:	776d7269 	strbvc	r7, [sp, -r9, ror #4]!
 80165f5:	20657261 	rsbcs	r7, r5, r1, ror #4
 80165f9:	2a2e2556 	bcs	8b9fb59 <__exidx_end+0xb88ed9>
 80165fd:	48440073 	stmdami	r4, {r0, r1, r4, r5, r6}^
 8016601:	72205043 	eorvc	r5, r0, #67	; 0x43
 8016605:	77656e65 	strbvc	r6, [r5, -r5, ror #28]!
 8016609:	00676e69 	rsbeq	r6, r7, r9, ror #28
 801660d:	50434844 	subpl	r4, r3, r4, asr #16
 8016611:	74657220 	strbtvc	r7, [r5], #-544	; 0xfffffde0
 8016615:	6e697972 			; <UNDEFINED> instruction: 0x6e697972
 8016619:	654e0067 	strbvs	r0, [lr, #-103]	; 0xffffff99
 801661d:	726f7774 	rsbvc	r7, pc, #116, 14	; 0x1d00000
 8016621:	6873206b 	ldmdavs	r3!, {r0, r1, r3, r5, r6, sp}^
 8016625:	6f647475 	svcvs	0x00647475
 8016629:	 	andgt	r6, r0, r7, ror lr

0801662c <pArray>:
 801662c:	080166c0 	stmdaeq	r1, {r6, r7, r9, sl, sp, lr}
 8016630:	0801667c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r9, sl, sp, lr}
 8016634:	0801655f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r8, sl, sp, lr}
 8016638:	080166c6 	stmdaeq	r1, {r1, r2, r6, r7, r9, sl, sp, lr}
 801663c:	080167f1 	stmdaeq	r1, {r0, r4, r5, r6, r7, r8, r9, sl, sp, lr}
 8016640:	08016687 	stmdaeq	r1, {r0, r1, r2, r7, r9, sl, sp, lr}
 8016644:	08015025 	stmdaeq	r1, {r0, r2, r5, ip, lr}
 8016648:	0801658a 	stmdaeq	r1, {r1, r3, r7, r8, sl, sp, lr}
 801664c:	08016738 	stmdaeq	r1, {r3, r4, r5, r8, r9, sl, sp, lr}
 8016650:	08016748 	stmdaeq	r1, {r3, r6, r8, r9, sl, sp, lr}
 8016654:	08016758 	stmdaeq	r1, {r3, r4, r6, r8, r9, sl, sp, lr}
 8016658:	08016768 	stmdaeq	r1, {r3, r5, r6, r8, r9, sl, sp, lr}
 801665c:	08016593 	stmdaeq	r1, {r0, r1, r4, r7, r8, sl, sp, lr}
 8016660:	080167c0 	stmdaeq	r1, {r6, r7, r8, r9, sl, sp, lr}
 8016664:	08015025 	stmdaeq	r1, {r0, r2, r5, ip, lr}
 8016668:	08015025 	stmdaeq	r1, {r0, r2, r5, ip, lr}
 801666c:	08015025 	stmdaeq	r1, {r0, r2, r5, ip, lr}
 8016670:	08015025 	stmdaeq	r1, {r0, r2, r5, ip, lr}
 8016674:	0801656a 	stmdaeq	r1, {r1, r3, r5, r6, r8, sl, sp, lr}
 8016678:	08016694 	stmdaeq	r1, {r2, r4, r7, r9, sl, sp, lr}

0801667c <DisplayUdfParamsConst::BOARD_NAME>:
 801667c:	72616f62 	rsbvc	r6, r1, #392	; 0x188
 8016680:	616e5f64 	cmnvs	lr, r4, ror #30
 8016684:	 	tstvs	r0, sp, ror #10

08016687 <DisplayUdfParamsConst::ACTIVE_PORTS>:
 8016687:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 801668b:	705f6576 	subsvc	r6, pc, r6, ror r5	; <UNPREDICTABLE>
 801668f:	7374726f 	cmnvc	r4, #-268435450	; 0xf0000006
	...

08016694 <DisplayUdfParamsConst::DMX_DIRECTION>:
 8016694:	5f786d64 	svcpl	0x00786d64
 8016698:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 801669c:	6f697463 	svcvs	0x00697463
 80166a0:	 	ldclvs	0, cr0, [r3], #-440	; 0xfffffe48

080166a2 <DisplayUdfParamsConst::SLEEP_TIMEOUT>:
 80166a2:	65656c73 	strbvs	r6, [r5, #-3187]!	; 0xfffff38d
 80166a6:	69745f70 	ldmdbvs	r4!, {r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 80166aa:	756f656d 	strbvc	r6, [pc, #-1389]!	; 8016145 <RDMConst::MANUFACTURER_NAME+0x60>
 80166ae:	 	stclvs	0, cr0, [r6], #-464	; 0xfffffe30

080166b0 <DisplayUdfParamsConst::FLIP_VERTICALLY>:
 80166b0:	70696c66 	rsbvc	r6, r9, r6, ror #24
 80166b4:	7265765f 	rsbvc	r7, r5, #99614720	; 0x5f00000
 80166b8:	61636974 	smcvs	13972	; 0x3694
 80166bc:	00796c6c 	rsbseq	r6, r9, ip, ror #24

080166c0 <DisplayUdfParamsConst::TITLE>:
 80166c0:	6c746974 			; <UNDEFINED> instruction: 0x6c746974
 80166c4:	 	ldrbvs	r0, [r6, #-101]!	; 0xffffff9b

080166c6 <DisplayUdfParamsConst::VERSION>:
 80166c6:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 80166ca:	006e6f69 	rsbeq	r6, lr, r9, ror #30

080166ce <DisplayUdfParamsConst::FILE_NAME>:
 80166ce:	70736964 	rsbsvc	r6, r3, r4, ror #18
 80166d2:	2e79616c 	rpwcsez	f6, f1, #4.0
 80166d6:	00747874 	rsbseq	r7, r4, r4, ror r8

080166da <DisplayUdfParamsConst::INTENSITY>:
 80166da:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
 80166de:	7469736e 	strbtvc	r7, [r9], #-878	; 0xfffffc92
 80166e2:	50410079 	subpl	r0, r1, r9, ror r0
 80166e6:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 80166ea:	726f5000 	rsbvc	r5, pc, #0
 80166ee:	63252074 			; <UNDEFINED> instruction: 0x63252074
 80166f2:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 80166f6:	00732520 	rsbseq	r2, r3, r0, lsr #10
 80166fa:	44206f4e 	strtmi	r6, [r0], #-3918	; 0xfffff0b2
 80166fe:	4400584d 	strmi	r5, [r0], #-2125	; 0xfffff7b3
 8016702:	2520584d 	strcs	r5, [r0, #-2125]!	; 0xfffff7b3
 8016706:	64252073 	strtvs	r2, [r5], #-115	; 0xffffff8d
 801670a:	73252200 			; <UNDEFINED> instruction: 0x73252200
 801670e:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8016712:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8016716:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801671a:	2c226425 	cfstrscs	mvf6, [r2], #-148	; 0xffffff6c
 801671e:	73252300 			; <UNDEFINED> instruction: 0x73252300
 8016722:	2e64253d 	mcrcs	5, 3, r2, cr4, cr13, {1}
 8016726:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801672a:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 801672e:	2023000a 	eorcs	r0, r3, sl
 8016732:	23207325 			; <UNDEFINED> instruction: 0x23207325
 8016736:	 	cdpvs	0, 7, cr0, cr5, cr10, {0}

08016738 <LightSetParamsConst::UNIVERSE_PORT>:
 8016738:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 801673c:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8016740:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8016744:	00615f74 	rsbeq	r5, r1, r4, ror pc
 8016748:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 801674c:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8016750:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8016754:	00625f74 	rsbeq	r5, r2, r4, ror pc
 8016758:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 801675c:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8016760:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8016764:	00635f74 	rsbeq	r5, r3, r4, ror pc
 8016768:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 801676c:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8016770:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8016774:	00645f74 	rsbeq	r5, r4, r4, ror pc

08016778 <LightSetParamsConst::MERGE_MODE_PORT>:
 8016778:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 801677c:	6f6d5f65 	svcvs	0x006d5f65
 8016780:	705f6564 	subsvc	r6, pc, r4, ror #10
 8016784:	5f74726f 	svcpl	0x0074726f
 8016788:	656d0061 	strbvs	r0, [sp, #-97]!	; 0xffffff9f
 801678c:	5f656772 	svcpl	0x00656772
 8016790:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
 8016794:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8016798:	00625f74 	rsbeq	r5, r2, r4, ror pc
 801679c:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 80167a0:	6f6d5f65 	svcvs	0x006d5f65
 80167a4:	705f6564 	subsvc	r6, pc, r4, ror #10
 80167a8:	5f74726f 	svcpl	0x0074726f
 80167ac:	656d0063 	strbvs	r0, [sp, #-99]!	; 0xffffff9d
 80167b0:	5f656772 	svcpl	0x00656772
 80167b4:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
 80167b8:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 80167bc:	00645f74 	rsbeq	r5, r4, r4, ror pc

080167c0 <LightSetParamsConst::DMX_START_ADDRESS>:
 80167c0:	5f786d64 	svcpl	0x00786d64
 80167c4:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 80167c8:	64615f74 	strbtvs	r5, [r1], #-3956	; 0xfffff08c
 80167cc:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
 80167d0:	 	stmdbvs	r4!, {r0, r1, r4, r5, r6}^

080167d2 <LightSetParamsConst::DISABLE_MERGE_TIMEOUT>:
 80167d2:	61736964 	cmnvs	r3, r4, ror #18
 80167d6:	5f656c62 	svcpl	0x00656c62
 80167da:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 80167de:	69745f65 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
 80167e2:	756f656d 	strbvc	r6, [pc, #-1389]!	; 801627d <vtable for StoreDisplayUdf+0x1>
 80167e6:	 	smcvs	24580	; 0x6004

080167e8 <LightSetParamsConst::FAILSAFE>:
 80167e8:	6c696166 	stfvse	f6, [r9], #-408	; 0xfffffe68
 80167ec:	65666173 	strbvs	r6, [r6, #-371]!	; 0xfffffe8d
	...

080167f1 <LightSetParamsConst::UNIVERSE>:
 80167f1:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 80167f5:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
	...

080167fa <LightSetParamsConst::DIRECTION>:
 80167fa:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 80167fe:	6f697463 	svcvs	0x00697463
 8016802:	6f705f6e 	svcvs	0x00705f6e
 8016806:	615f7472 	cmpvs	pc, r2, ror r4	; <UNPREDICTABLE>
 801680a:	69640000 	stmdbvs	r4!, {}^	; <UNPREDICTABLE>
 801680e:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 8016812:	5f6e6f69 	svcpl	0x006e6f69
 8016816:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 801681a:	0000625f 	andeq	r6, r0, pc, asr r2
 801681e:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8016822:	6f697463 	svcvs	0x00697463
 8016826:	6f705f6e 	svcvs	0x00705f6e
 801682a:	635f7472 	cmpvs	pc, #1912602624	; 0x72000000
 801682e:	69640000 	stmdbvs	r4!, {}^	; <UNPREDICTABLE>
 8016832:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 8016836:	5f6e6f69 	svcpl	0x006e6f69
 801683a:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 801683e:	0000645f 	andeq	r6, r0, pc, asr r4
 8016842:	64206f4e 	strtvs	r6, [r0], #-3918	; 0xfffff0b2
 8016846:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
 801684a:	66207961 	strtvs	r7, [r0], -r1, ror #18
 801684e:	646e756f 	strbtvs	r7, [lr], #-1391	; 0xfffffa91
 8016852:	31485300 	mrscc	r5, (UNDEF: 120)
 8016856:	00363031 	eorseq	r3, r6, r1, lsr r0
 801685a:	31445353 	cmpcc	r4, r3, asr r3
 801685e:	00363033 	eorseq	r3, r6, r3, lsr r0
 8016862:	28207325 	stmdacs	r0!, {r0, r2, r5, r8, r9, ip, sp, lr}
 8016866:	252c6425 	strcs	r6, [ip, #-1061]!	; 0xfffffbdb
 801686a:	000a2964 	andeq	r2, sl, r4, ror #18
 801686e:	aaeeaa40 	bge	7bc1176 <__stack_size+0x7bbe976>
 8016872:	 	subeq	r0, r0, lr, ror #1

08016874 <_OledFont8x6>:
 8016874:	00000040 	andeq	r0, r0, r0, asr #32
 8016878:	40000000 	andmi	r0, r0, r0
 801687c:	005f0000 	subseq	r0, pc, r0
 8016880:	00400000 	subeq	r0, r0, r0
 8016884:	00070007 	andeq	r0, r7, r7
 8016888:	7f144000 	svcvc	0x00144000
 801688c:	00147f14 	andseq	r7, r4, r4, lsl pc
 8016890:	7f2a2440 	svcvc	0x002a2440
 8016894:	4000122a 	andmi	r1, r0, sl, lsr #4
 8016898:	64081323 	strvs	r1, [r8], #-803	; 0xfffffcdd
 801689c:	36400062 	strbcc	r0, [r0], -r2, rrx
 80168a0:	50205649 	eorpl	r5, r0, r9, asr #12
 80168a4:	08004000 	stmdaeq	r0, {lr}
 80168a8:	00000307 	andeq	r0, r0, r7, lsl #6
 80168ac:	221c0040 	andscs	r0, ip, #64	; 0x40
 80168b0:	40000041 	andmi	r0, r0, r1, asr #32
 80168b4:	1c224100 	stfnes	f4, [r2], #-0
 80168b8:	2a400000 	bcs	90168c0 <__exidx_end+0xfffc40>
 80168bc:	2a1c7f1c 	bcs	8736534 <__exidx_end+0x71f8b4>
 80168c0:	08084000 	stmdaeq	r8, {lr}
 80168c4:	0008083e 	andeq	r0, r8, lr, lsr r8
 80168c8:	70800040 	addvc	r0, r0, r0, asr #32
 80168cc:	40000030 	andmi	r0, r0, r0, lsr r0
 80168d0:	08080808 	stmdaeq	r8, {r3, fp}
 80168d4:	00400008 	subeq	r0, r0, r8
 80168d8:	00606000 	rsbeq	r6, r0, r0
 80168dc:	10204000 	eorne	r4, r0, r0
 80168e0:	00020408 	andeq	r0, r2, r8, lsl #8
 80168e4:	49513e40 	ldmdbmi	r1, {r6, r9, sl, fp, ip, sp}^
 80168e8:	40003e45 	andmi	r3, r0, r5, asr #28
 80168ec:	407f4200 	rsbsmi	r4, pc, r0, lsl #4
 80168f0:	72400000 	subvc	r0, r0, #0
 80168f4:	46494949 	strbmi	r4, [r9], -r9, asr #18
 80168f8:	41214000 			; <UNDEFINED> instruction: 0x41214000
 80168fc:	00334d49 	eorseq	r4, r3, r9, asr #26
 8016900:	12141840 	andsne	r1, r4, #64, 16	; 0x400000
 8016904:	4000107f 	andmi	r1, r0, pc, ror r0
 8016908:	45454527 	strbmi	r4, [r5, #-1319]	; 0xfffffad9
 801690c:	3c400039 	mcrrcc	0, 3, r0, r0, cr9
 8016910:	3149494a 	cmpcc	r9, sl, asr #18
 8016914:	21414000 	mrscs	r4, (UNDEF: 65)
 8016918:	00070911 	andeq	r0, r7, r1, lsl r9
 801691c:	49493640 	stmdbmi	r9, {r6, r9, sl, ip, sp}^
 8016920:	40003649 	andmi	r3, r0, r9, asr #12
 8016924:	29494946 	stmdbcs	r9, {r1, r2, r6, r8, fp, lr}^
 8016928:	0040001e 	subeq	r0, r0, lr, lsl r0
 801692c:	00001400 	andeq	r1, r0, r0, lsl #8
 8016930:	40004000 	andmi	r4, r0, r0
 8016934:	00000034 	andeq	r0, r0, r4, lsr r0
 8016938:	14080040 	strne	r0, [r8], #-64	; 0xffffffc0
 801693c:	40004122 	andmi	r4, r0, r2, lsr #2
 8016940:	14141414 	ldrne	r1, [r4], #-1044	; 0xfffffbec
 8016944:	00400014 	subeq	r0, r0, r4, lsl r0
 8016948:	08142241 	ldmdaeq	r4, {r0, r6, r9, sp}
 801694c:	01024000 	mrseq	r4, (UNDEF: 2)
 8016950:	00060959 	andeq	r0, r6, r9, asr r9
 8016954:	5d413e40 	stclpl	14, cr3, [r1, #-256]	; 0xffffff00
 8016958:	40004e59 	andmi	r4, r0, r9, asr lr
 801695c:	1211127c 	andsne	r1, r1, #124, 4	; 0xc0000007
 8016960:	7f40007c 	svcvc	0x0040007c
 8016964:	36494949 	strbcc	r4, [r9], -r9, asr #18
 8016968:	413e4000 	teqmi	lr, r0
 801696c:	00224141 	eoreq	r4, r2, r1, asr #2
 8016970:	41417f40 	cmpmi	r1, r0, asr #30
 8016974:	40003e41 	andmi	r3, r0, r1, asr #28
 8016978:	4949497f 	stmdbmi	r9, {r0, r1, r2, r3, r4, r5, r6, r8, fp, lr}^
 801697c:	7f400041 	svcvc	0x00400041
 8016980:	01090909 	tsteq	r9, r9, lsl #18
 8016984:	413e4000 	teqmi	lr, r0
 8016988:	00735141 	rsbseq	r5, r3, r1, asr #2
 801698c:	08087f40 	stmdaeq	r8, {r6, r8, r9, sl, fp, ip, sp, lr}
 8016990:	40007f08 	andmi	r7, r0, r8, lsl #30
 8016994:	417f4100 	cmnmi	pc, r0, lsl #2
 8016998:	20400000 	subcs	r0, r0, r0
 801699c:	013f4140 	teqeq	pc, r0, asr #2
 80169a0:	087f4000 	ldmdaeq	pc!, {lr}^	; <UNPREDICTABLE>
 80169a4:	00412214 	subeq	r2, r1, r4, lsl r2
 80169a8:	40407f40 	submi	r7, r0, r0, asr #30
 80169ac:	40004040 	andmi	r4, r0, r0, asr #32
 80169b0:	021c027f 	andseq	r0, ip, #-268435449	; 0xf0000007
 80169b4:	7f40007f 	svcvc	0x0040007f
 80169b8:	7f100804 	svcvc	0x00100804
 80169bc:	413e4000 	teqmi	lr, r0
 80169c0:	003e4141 	eorseq	r4, lr, r1, asr #2
 80169c4:	09097f40 	stmdbeq	r9, {r6, r8, r9, sl, fp, ip, sp, lr}
 80169c8:	40000609 	andmi	r0, r0, r9, lsl #12
 80169cc:	2151413e 	cmpcs	r1, lr, lsr r1
 80169d0:	7f40005e 	svcvc	0x0040005e
 80169d4:	46291909 	strtmi	r1, [r9], -r9, lsl #18
 80169d8:	49264000 	stmdbmi	r6!, {lr}
 80169dc:	00324949 	eorseq	r4, r2, r9, asr #18
 80169e0:	7f010340 	svcvc	0x00010340
 80169e4:	40000301 	andmi	r0, r0, r1, lsl #6
 80169e8:	4040403f 	submi	r4, r0, pc, lsr r0
 80169ec:	1f40003f 	svcne	0x0040003f
 80169f0:	1f204020 	svcne	0x00204020
 80169f4:	403f4000 	eorsmi	r4, pc, r0
 80169f8:	003f4038 	eorseq	r4, pc, r8, lsr r0	; <UNPREDICTABLE>
 80169fc:	08146340 	ldmdaeq	r4, {r6, r8, r9, sp, lr}
 8016a00:	40006314 	andmi	r6, r0, r4, lsl r3
 8016a04:	04780403 	ldrbteq	r0, [r8], #-1027	; 0xfffffbfd
 8016a08:	61400003 	cmpvs	r0, r3
 8016a0c:	434d4959 	movtmi	r4, #55641	; 0xd959
 8016a10:	7f004000 	svcvc	0x00004000
 8016a14:	00414141 	subeq	r4, r1, r1, asr #2
 8016a18:	08040240 	stmdaeq	r4, {r6, r9}
 8016a1c:	40002010 	andmi	r2, r0, r0, lsl r0
 8016a20:	41414100 	mrsmi	r4, (UNDEF: 81)
 8016a24:	0440007f 	strbeq	r0, [r0], #-127	; 0xffffff81
 8016a28:	04020102 	streq	r0, [r2], #-258	; 0xfffffefe
 8016a2c:	40404000 	submi	r4, r0, r0
 8016a30:	00404040 	subeq	r4, r0, r0, asr #32
 8016a34:	07030040 	streq	r0, [r3, -r0, asr #32]
 8016a38:	40000008 	andmi	r0, r0, r8
 8016a3c:	78545420 	ldmdavc	r4, {r5, sl, ip, lr}^
 8016a40:	7f400040 	svcvc	0x00400040
 8016a44:	38444428 	stmdacc	r4, {r3, r5, sl, lr}^
 8016a48:	44384000 	ldrtmi	r4, [r8], #-0
 8016a4c:	00284444 	eoreq	r4, r8, r4, asr #8
 8016a50:	44443840 	strbmi	r3, [r4], #-2112	; 0xfffff7c0
 8016a54:	40007f28 	andmi	r7, r0, r8, lsr #30
 8016a58:	54545438 	ldrbpl	r5, [r4], #-1080	; 0xfffffbc8
 8016a5c:	00400018 	subeq	r0, r0, r8, lsl r0
 8016a60:	02097e08 	andeq	r7, r9, #8, 28	; 0x80
 8016a64:	a4184000 	ldrge	r4, [r8], #-0
 8016a68:	00789ca4 	rsbseq	r9, r8, r4, lsr #25
 8016a6c:	04087f40 	streq	r7, [r8], #-3904	; 0xfffff0c0
 8016a70:	40007804 	andmi	r7, r0, r4, lsl #16
 8016a74:	407d4400 	rsbsmi	r4, sp, r0, lsl #8
 8016a78:	20400000 	subcs	r0, r0, r0
 8016a7c:	003d4040 	eorseq	r4, sp, r0, asr #32
 8016a80:	107f4000 	rsbsne	r4, pc, r0
 8016a84:	00004428 	andeq	r4, r0, r8, lsr #8
 8016a88:	7f410040 	svcvc	0x00410040
 8016a8c:	40000040 	andmi	r0, r0, r0, asr #32
 8016a90:	0478047c 	ldrbteq	r0, [r8], #-1148	; 0xfffffb84
 8016a94:	7c400078 	mcrrvc	0, 7, r0, r0, cr8
 8016a98:	78040408 	stmdavc	r4, {r3, sl}
 8016a9c:	44384000 	ldrtmi	r4, [r8], #-0
 8016aa0:	00384444 	eorseq	r4, r8, r4, asr #8
 8016aa4:	2418fc40 	ldrcs	pc, [r8], #-3136	; 0xfffff3c0
 8016aa8:	40001824 	andmi	r1, r0, r4, lsr #16
 8016aac:	18242418 	stmdane	r4!, {r3, r4, sl, sp}
 8016ab0:	7c4000fc 	mcrrvc	0, 15, r0, r0, cr12
 8016ab4:	08040408 	stmdaeq	r4, {r3, sl}
 8016ab8:	54484000 	strbpl	r4, [r8], #-0
 8016abc:	00245454 	eoreq	r5, r4, r4, asr r4
 8016ac0:	3f040440 	svccc	0x00040440
 8016ac4:	40002444 	andmi	r2, r0, r4, asr #8
 8016ac8:	2040403c 	subcs	r4, r0, ip, lsr r0
 8016acc:	1c40007c 	mcrrne	0, 7, r0, r0, cr12
 8016ad0:	1c204020 	stcne	0, cr4, [r0], #-128	; 0xffffff80
 8016ad4:	403c4000 	eorsmi	r4, ip, r0
 8016ad8:	003c4030 	eorseq	r4, ip, r0, lsr r0
 8016adc:	10284440 	eorne	r4, r8, r0, asr #8
 8016ae0:	40004428 	andmi	r4, r0, r8, lsr #8
 8016ae4:	9090904c 	addsls	r9, r0, ip, asr #32
 8016ae8:	4440007c 	strbmi	r0, [r0], #-124	; 0xffffff84
 8016aec:	444c5464 	strbmi	r5, [ip], #-1124	; 0xfffffb9c
 8016af0:	08004000 	stmdaeq	r0, {lr}
 8016af4:	00004136 	andeq	r4, r0, r6, lsr r1
 8016af8:	77000040 	strvc	r0, [r0, -r0, asr #32]
 8016afc:	40000000 	andmi	r0, r0, r0
 8016b00:	08364100 	ldmdaeq	r6!, {r8, lr}
 8016b04:	02400000 	subeq	r0, r0, #0
 8016b08:	02040201 	andeq	r0, r4, #268435456	; 0x10000000
 8016b0c:	263c4000 	ldrtcs	r4, [ip], -r0
 8016b10:	003c2623 	eorseq	r2, ip, r3, lsr #12

08016b14 <oled_128x32_init>:
 8016b14:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 8016b18:	4000d31f 	andmi	sp, r0, pc, lsl r3
 8016b1c:	0020148d 	eoreq	r1, r0, sp, lsl #9
 8016b20:	02dac8a1 	sbcseq	ip, sl, #10551296	; 0xa10000
 8016b24:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 8016b28:	a6a440db 	ssatge	r4, #5, fp, asr #1

08016b2c <oled_128x64_init>:
 8016b2c:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 8016b30:	4000d33f 	andmi	sp, r0, pc, lsr r3
 8016b34:	0020148d 	eoreq	r1, r0, sp, lsl #9
 8016b38:	12dac8a1 	sbcsne	ip, sl, #10551296	; 0xa10000
 8016b3c:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 8016b40:	a6a440db 	ssatge	r4, #5, fp, asr #1

08016b44 <vtable for Ssd1306>:
	...
 8016b4c:	08011dcd 	stmdaeq	r1, {r0, r2, r3, r6, r7, r8, sl, fp, ip}
 8016b50:	08011df9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip}
 8016b54:	08012109 	stmdaeq	r1, {r0, r3, r8, sp}
 8016b58:	08012091 	stmdaeq	r1, {r0, r4, r7, sp}
 8016b5c:	08011f5d 	stmdaeq	r1, {r0, r2, r3, r4, r6, r8, r9, sl, fp, ip}
 8016b60:	08011e19 	stmdaeq	r1, {r0, r3, r4, r9, sl, fp, ip}
 8016b64:	08011e41 	stmdaeq	r1, {r0, r6, r9, sl, fp, ip}
 8016b68:	08011f33 	stmdaeq	r1, {r0, r1, r4, r5, r8, r9, sl, fp, ip}
 8016b6c:	08011eed 	stmdaeq	r1, {r0, r2, r3, r5, r6, r7, r9, sl, fp, ip}
 8016b70:	08011dcf 	stmdaeq	r1, {r0, r1, r2, r3, r6, r7, r8, sl, fp, ip}
 8016b74:	08011f99 	stmdaeq	r1, {r0, r3, r4, r7, r8, r9, sl, fp, ip}
 8016b78:	08011fa5 	stmdaeq	r1, {r0, r2, r5, r7, r8, r9, sl, fp, ip}
 8016b7c:	08011fbf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r7, r8, r9, sl, fp, ip}
 8016b80:	08011dd1 	stmdaeq	r1, {r0, r4, r6, r7, r8, sl, fp, ip}
 8016b84:	30345b1b 	eorscc	r5, r4, fp, lsl fp
 8016b88:	5b1b006d 	blpl	86d6d44 <__exidx_end+0x6c00c4>
 8016b8c:	006d3033 	rsbeq	r3, sp, r3, lsr r0
 8016b90:	31335b1b 	teqcc	r3, fp, lsl fp
 8016b94:	5b1b006d 	blpl	86d6d50 <__exidx_end+0x6c00d0>
 8016b98:	006d3233 	rsbeq	r3, sp, r3, lsr r2
 8016b9c:	33335b1b 	teqcc	r3, #27648	; 0x6c00
 8016ba0:	5b1b006d 	blpl	86d6d5c <__exidx_end+0x6c00dc>
 8016ba4:	006d3933 	rsbeq	r3, sp, r3, lsr r9
 8016ba8:	2e25565b 	mcrcs	6, 1, r5, cr5, cr11, {2}
 8016bac:	205d732a 	subscs	r7, sp, sl, lsr #6
 8016bb0:	43207325 			; <UNDEFINED> instruction: 0x43207325
 8016bb4:	69706d6f 	ldmdbvs	r0!, {r0, r1, r2, r3, r5, r6, r8, sl, fp, sp, lr}^
 8016bb8:	2064656c 	rsbcs	r6, r4, ip, ror #10
 8016bbc:	25206e6f 	strcs	r6, [r0, #-3695]!	; 0xfffff191
 8016bc0:	20732a2e 	rsbscs	r2, r3, lr, lsr #20
 8016bc4:	25207461 	strcs	r7, [r0, #-1121]!	; 0xfffffb9f
 8016bc8:	00732a2e 	rsbseq	r2, r3, lr, lsr #20
 8016bcc:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8016bd0:	203a636f 	eorscs	r6, sl, pc, ror #6
 8016bd4:	000a7525 	andeq	r7, sl, r5, lsr #10
 8016bd8:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8016bdc:	203a636f 	eorscs	r6, sl, pc, ror #6
 8016be0:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
 8016be4:	62203e20 	eorvs	r3, r0, #32, 28	; 0x200
 8016be8:	6b636f6c 	blvs	98f29a0 <__exidx_end+0x18dbd20>
 8016bec:	6d696c5f 	stclvs	12, cr6, [r9, #-380]!	; 0xfffffe84
 8016bf0:	000a7469 	andeq	r7, sl, r9, ror #8
 8016bf4:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8016bf8:	203a636f 	eorscs	r6, sl, pc, ror #6
 8016bfc:	6f6c4270 	svcvs	0x006c4270
 8016c00:	65486b63 	strbvs	r6, [r8, #-2915]	; 0xfffff49d
 8016c04:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 8016c08:	2c70253d 	cfldr64cs	mvdx2, [r0], #-244	; 0xffffff0c
 8016c0c:	7a697320 	bvc	9a73894 <__exidx_end+0x1a5cc14>
 8016c10:	64253d65 	strtvs	r3, [r5], #-3429	; 0xfffff29b
 8016c14:	6164202c 	cmnvs	r4, ip, lsr #32
 8016c18:	253d6174 	ldrcs	r6, [sp, #-372]!	; 0xfffffe8c
 8016c1c:	66000a70 			; <UNDEFINED> instruction: 0x66000a70
 8016c20:	3a656572 	bcc	99701f0 <__exidx_end+0x1959570>
 8016c24:	6c427020 	mcrrvs	0, 2, r7, r2, cr0
 8016c28:	486b636f 	stmdami	fp!, {r0, r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8016c2c:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 8016c30:	203d2072 	eorscs	r2, sp, r2, ror r0
 8016c34:	202c7025 	eorcs	r7, ip, r5, lsr #32
 8016c38:	6f6c4270 	svcvs	0x006c4270
 8016c3c:	3d206b63 	fstmdbxcc	r0!, {d6-d54}	;@ Deprecated
 8016c40:	0a702520 	beq	9c200c8 <__exidx_end+0x1c09448>
 8016c44:	00000000 	andeq	r0, r0, r0

08016c48 <days_of_month>:
 8016c48:	0000001f 	andeq	r0, r0, pc, lsl r0
 8016c4c:	0000001c 	andeq	r0, r0, ip, lsl r0
 8016c50:	0000001f 	andeq	r0, r0, pc, lsl r0
 8016c54:	0000001e 	andeq	r0, r0, lr, lsl r0
 8016c58:	0000001f 	andeq	r0, r0, pc, lsl r0
 8016c5c:	0000001e 	andeq	r0, r0, lr, lsl r0
 8016c60:	0000001f 	andeq	r0, r0, pc, lsl r0
 8016c64:	0000001f 	andeq	r0, r0, pc, lsl r0
 8016c68:	0000001e 	andeq	r0, r0, lr, lsl r0
 8016c6c:	0000001f 	andeq	r0, r0, pc, lsl r0
 8016c70:	0000001e 	andeq	r0, r0, lr, lsl r0
 8016c74:	0000001f 	andeq	r0, r0, pc, lsl r0

Disassembly of section .ARM:

08016c78 <__exidx_start>:
 8016c78:	7fff2510 	svcvc	0x00ff2510
 8016c7c:	00000001 	andeq	r0, r0, r1

Disassembly of section .ARM.attributes:

08016c80 <.ARM.attributes>:
 8016c80:	00002e41 	andeq	r2, r0, r1, asr #28
 8016c84:	61656100 	cmnvs	r5, r0, lsl #2
 8016c88:	01006962 	tsteq	r0, r2, ror #18
 8016c8c:	00000024 	andeq	r0, r0, r4, lsr #32
 8016c90:	726f4305 	rsbvc	r4, pc, #335544320	; 0x14000000
 8016c94:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
 8016c98:	0600334d 	streq	r3, [r0], -sp, asr #6
 8016c9c:	094d070a 	stmdbeq	sp, {r1, r3, r8, r9, sl}^
 8016ca0:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
 8016ca4:	17011501 	strne	r1, [r1, -r1, lsl #10]
 8016ca8:	1a011803 	bne	805ccbc <__exidx_end+0x4603c>
 8016cac:	Address 0x0000000008016cac is out of bounds.


Disassembly of section .data:

20000000 <LLRPDevice::m_nHandleLLRP>:
20000000:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

20000004 <s_nDmxTransmitPeriod>:
20000004:	000061a8 	andeq	r6, r0, r8, lsr #3

20000008 <s_nDmxTransmitMabTime>:
20000008:	0000000c 	andeq	r0, r0, ip

2000000c <s_nDmxTransmitBreakTime>:
2000000c:	0000005c 	andeq	r0, r0, ip, asr r0

20000010 <DmxConfigUdp::s_nHandle>:
20000010:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

20000014 <s_multicast_mac>:
20000014:	005e0001 	subseq	r0, lr, r1
20000018:	00000000 	andeq	r0, r0, r0

2000001c <MDNS::s_nHandle>:
2000001c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

20000020 <next_block>:
20000020:	2003c000 	andcs	ip, r3, r0

20000024 <s_block_bucket>:
20000024:	00000010 	andeq	r0, r0, r0, lsl r0
	...
20000034:	00000020 	andeq	r0, r0, r0, lsr #32
	...
20000044:	00000040 	andeq	r0, r0, r0, asr #32
	...
20000054:	00000060 	andeq	r0, r0, r0, rrx
	...
20000064:	00000080 	andeq	r0, r0, r0, lsl #1
	...
20000074:	00000100 	andeq	r0, r0, r0, lsl #2
	...
20000084:	00000140 	andeq	r0, r0, r0, asr #2
	...
20000094:	00000180 	andeq	r0, r0, r0, lsl #3
	...
200000a4:	00000200 	andeq	r0, r0, r0, lsl #4
	...
200000b4:	00000300 	andeq	r0, r0, r0, lsl #6
	...
200000c4:	00000400 	andeq	r0, r0, r0, lsl #8
	...
200000d4:	00000500 	andeq	r0, r0, r0, lsl #10
	...

200000f4 <SystemCoreClock>:
200000f4:	07270e00 	streq	r0, [r7, -r0, lsl #28]!

Disassembly of section .bss:

200000f8 <DmxInput::s_nStarted>:
200000f8:	00000000 	andeq	r0, r0, r0

200000fc <outptr>:
200000fc:	00000000 	andeq	r0, r0, r0

20000100 <RemoteConfig::s_pUdpBuffer>:
20000100:	00000000 	andeq	r0, r0, r0

20000104 <RemoteConfig::s_RemoteConfigListBin>:
	...

20000128 <RemoteConfig::s_pThis>:
20000128:	00000000 	andeq	r0, r0, r0

2000012c <HttpDaemon::m_Content>:
	...

200006cc <guard variable for lightset::Data::Get()::instance>:
200006cc:	00000000 	andeq	r0, r0, r0

200006d0 <lightset::Data::Get()::instance>:
	...

20001ee0 <E131Bridge::s_pThis>:
20001ee0:	00000000 	andeq	r0, r0, r0

20001ee4 <s_ReceivingMask>:
20001ee4:	00000000 	andeq	r0, r0, r0

20001ee8 <s_nPortsMax>:
20001ee8:	00000000 	andeq	r0, r0, r0

20001eec <LLRPDevice::s_nIpAddressFrom>:
20001eec:	00000000 	andeq	r0, r0, r0

20001ef0 <LLRPDevice::m_nIpAddresLLRPRequest>:
20001ef0:	00000000 	andeq	r0, r0, r0

20001ef4 <LLRPDevice::m_nIpAddressLLRPResponse>:
20001ef4:	00000000 	andeq	r0, r0, r0

20001ef8 <LLRPDevice::m_pLLRP>:
20001ef8:	00000000 	andeq	r0, r0, r0

20001efc <RDMNetDevice::s_RdmCommand>:
	...

20001ffb <RDMNetDevice::s_Cid>:
	...

2000200c <RDMSensors::s_pThis>:
2000200c:	00000000 	andeq	r0, r0, r0

20002010 <RDMSubDevices::s_pThis>:
20002010:	00000000 	andeq	r0, r0, r0

20002014 <RDMDeviceResponder::s_pThis>:
20002014:	00000000 	andeq	r0, r0, r0

20002018 <RDMIdentify::m_bIsEnabled>:
	...

20002019 <RDMIdentify::m_nMode>:
20002019:	 	andeq	r0, r0, r0

2000201c <RDMIdentify::s_pThis>:
2000201c:	00000000 	andeq	r0, r0, r0

20002020 <DmxSend::s_nStarted>:
20002020:	00000000 	andeq	r0, r0, r0

20002024 <s_RxBuffer>:
	...

20002444 <s_TxBuffer>:
	...

2000284c <sv_PortState>:
	...

20002854 <sv_nRxDmxPackets>:
	...

20002874 <sv_nUartsSending>:
20002874:	00000000 	andeq	r0, r0, r0

20002878 <Dmx::s_pThis>:
20002878:	00000000 	andeq	r0, r0, r0

2000287c <gv_RdmDataReceiveEnd>:
2000287c:	00000000 	andeq	r0, r0, r0

20002880 <DmxConfigUdp::s_pUdpBuffer>:
20002880:	00000000 	andeq	r0, r0, r0

20002884 <SpiFlashStore::s_nWaitMillis>:
20002884:	00000000 	andeq	r0, r0, r0

20002888 <SpiFlashStore::s_SpiFlashData>:
	...

20003888 <SpiFlashStore::s_nStartAddress>:
20003888:	00000000 	andeq	r0, r0, r0

2000388c <SpiFlashStore::s_bHaveFlashChip>:
2000388c:	00000000 	andeq	r0, r0, r0

20003890 <SpiFlashStore::s_nSpiFlashStoreSize>:
20003890:	00000000 	andeq	r0, r0, r0

20003894 <SpiFlashStore::s_State>:
20003894:	00000000 	andeq	r0, r0, r0

20003898 <SpiFlashStore::s_pThis>:
20003898:	00000000 	andeq	r0, r0, r0

2000389c <SpiFlashStore::s_bIsNew>:
2000389c:	00000000 	andeq	r0, r0, r0

200038a0 <StoreDisplayUdf::s_pThis>:
200038a0:	00000000 	andeq	r0, r0, r0

200038a4 <StoreDmxSend::s_pThis>:
200038a4:	00000000 	andeq	r0, r0, r0

200038a8 <StoreNetwork::s_pThis>:
200038a8:	00000000 	andeq	r0, r0, r0

200038ac <StoreRDMDevice::s_pThis>:
200038ac:	00000000 	andeq	r0, r0, r0

200038b0 <StoreRemoteConfig::s_pThis>:
200038b0:	00000000 	andeq	r0, r0, r0

200038b4 <StoreE131::s_pThis>:
200038b4:	00000000 	andeq	r0, r0, r0

200038b8 <FlashRom::s_pThis>:
200038b8:	00000000 	andeq	r0, r0, r0

200038bc <flashrom::s_nAddress>:
200038bc:	00000000 	andeq	r0, r0, r0

200038c0 <flashrom::s_State>:
200038c0:	00000000 	andeq	r0, r0, r0

200038c4 <flashrom::s_nPage>:
200038c4:	00000000 	andeq	r0, r0, r0

200038c8 <flashrom::s_pData>:
200038c8:	00000000 	andeq	r0, r0, r0

200038cc <flashrom::s_isBank0>:
200038cc:	00000000 	andeq	r0, r0, r0

200038d0 <flashrom::s_nLength>:
200038d0:	00000000 	andeq	r0, r0, r0

200038d4 <g_ip_info>:
	...

200038e0 <g_mac_address>:
200038e0:	00000000 	andeq	r0, r0, r0
	...

200038e6 <s_is_dhcp>:
	...

200038e8 <s_p>:
200038e8:	00000000 	andeq	r0, r0, r0

200038ec <s_ticker>:
200038ec:	00000000 	andeq	r0, r0, r0

200038f0 <s_mac_address>:
	...

200038f8 <s_mac_address_arp_reply>:
	...

20003900 <s_id>:
20003900:	00000000 	andeq	r0, r0, r0

20003904 <s_recv_queue>:
	...

20004474 <s_tcb>:
	...

200044b8 <s_tcp>:
	...

20004aa4 <broadcast_mask>:
20004aa4:	00000000 	andeq	r0, r0, r0

20004aa8 <gw_ip>:
20004aa8:	00000000 	andeq	r0, r0, r0

20004aac <on_network_mask>:
20004aac:	00000000 	andeq	r0, r0, r0

20004ab0 <s_id>:
20004ab0:	00000000 	andeq	r0, r0, r0

20004ab4 <s_ports_allowed>:
	...

20004ad4 <s_recv_queue>:
	...

2000a774 <s_send_packet>:
	...

2000ad60 <MDNS::s_nRemoteIp>:
2000ad60:	00000000 	andeq	r0, r0, r0

2000ad64 <MDNS::s_nRemotePort>:
2000ad64:	00000000 	andeq	r0, r0, r0

2000ad68 <MDNS::s_nMulticastIp>:
2000ad68:	00000000 	andeq	r0, r0, r0

2000ad6c <MDNS::s_AnswerLocalIp>:
	...

2000af70 <MDNS::s_ServiceRecords>:
	...

2000af90 <MDNS::s_nBytesReceived>:
2000af90:	00000000 	andeq	r0, r0, r0

2000af94 <MDNS::s_ServiceRecordsData>:
	...

2000b198 <MDNS::s_pName>:
2000b198:	00000000 	andeq	r0, r0, r0

2000b19c <MDNS::s_pBuffer>:
2000b19c:	00000000 	andeq	r0, r0, r0

2000b1a0 <Network::s_pThis>:
2000b1a0:	00000000 	andeq	r0, r0, r0

2000b1a4 <s_arp_announce>:
	...

2000b1d0 <s_arp_reply>:
	...

2000b1fc <s_arp_request>:
	...

2000b228 <s_arp_records>:
	...

2000b3a8 <s_entry_current>:
2000b3a8:	00000000 	andeq	r0, r0, r0

2000b3ac <s_dhcp_allocated_gw>:
2000b3ac:	00000000 	andeq	r0, r0, r0

2000b3b0 <s_dhcp_allocated_ip>:
2000b3b0:	00000000 	andeq	r0, r0, r0

2000b3b4 <s_dhcp_allocated_netmask>:
2000b3b4:	00000000 	andeq	r0, r0, r0

2000b3b8 <s_dhcp_message>:
	...

2000b5dc <s_dhcp_server_ip>:
2000b5dc:	00000000 	andeq	r0, r0, r0

2000b5e0 <s_groups>:
	...

2000b700 <s_id>:
2000b700:	00000000 	andeq	r0, r0, r0

2000b704 <s_joins_allowed_index>:
2000b704:	00000000 	andeq	r0, r0, r0

2000b708 <s_leave>:
	...

2000b738 <s_multicast_mac>:
	...

2000b740 <s_report>:
	...

2000b770 <DisplayUdf::s_pThis>:
2000b770:	00000000 	andeq	r0, r0, r0

2000b774 <PropertiesConfig::s_Config>:
2000b774:	00000000 	andeq	r0, r0, r0

2000b778 <Display::s_pThis>:
2000b778:	00000000 	andeq	r0, r0, r0

2000b77c <_ClearBuffer>:
	...

2000b804 <Ssd1306::s_pThis>:
2000b804:	00000000 	andeq	r0, r0, r0

2000b808 <FirmwareVersion::s_FirmwareVersion>:
	...

2000b81e <FirmwareVersion::s_Print>:
	...

2000b860 <FirmwareVersion::s_pThis>:
2000b860:	00000000 	andeq	r0, r0, r0

2000b864 <LedBlink::s_pThis>:
2000b864:	00000000 	andeq	r0, r0, r0

2000b868 <Hardware::s_pThis>:
2000b868:	00000000 	andeq	r0, r0, r0

2000b86c <last.0>:
2000b86c:	00000000 	andeq	r0, r0, r0

2000b870 <s_micros>:
	...

2000b878 <set_timer>:
2000b878:	00000000 	andeq	r0, r0, r0

2000b87c <s_nSysTickMillis>:
2000b87c:	00000000 	andeq	r0, r0, r0

2000b880 <s_nAddress>:
2000b880:	00000000 	andeq	r0, r0, r0

2000b884 <dma_current_ptp_rxdesc>:
2000b884:	00000000 	andeq	r0, r0, r0

2000b888 <dma_current_ptp_txdesc>:
2000b888:	00000000 	andeq	r0, r0, r0

2000b88c <dma_current_rxdesc>:
2000b88c:	00000000 	andeq	r0, r0, r0

2000b890 <dma_current_txdesc>:
2000b890:	00000000 	andeq	r0, r0, r0

2000b894 <enet_initpara>:
	...

2000b8d0 <rx_buff>:
	...

2000e870 <rxdesc_tab>:
	...

2000e8f0 <tx_buff>:
	...

2000f4d8 <txdesc_tab>:
	...

Disassembly of section .heap:

2003c000 <heap_low>:
	...

Disassembly of section .stack:

2003d800 <_sp-0x2800>:
	...
