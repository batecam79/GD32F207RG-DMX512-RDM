
build_gd32/main.elf:     file format elf32-littlearm


Disassembly of section .vectors:

08007000 <__gVectors>:
 8007000:	20020000 	andcs	r0, r2, r0
 8007004:	08007ee5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r9, sl, fp, ip, sp, lr}
 8007008:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 800700c:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007010:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007014:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007018:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
	...
 800702c:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007030:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007034:	00000000 	andeq	r0, r0, r0
 8007038:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 800703c:	08016021 	stmdaeq	r1, {r0, r5, sp, lr}
 8007040:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007044:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007048:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 800704c:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007050:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007054:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007058:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 800705c:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007060:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007064:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007068:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 800706c:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007070:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007074:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007078:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 800707c:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007080:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007084:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007088:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 800708c:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007090:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007094:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007098:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 800709c:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070a0:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070a4:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070a8:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070ac:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070b0:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070b4:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070b8:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070bc:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070c0:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070c4:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070c8:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070cc:	00000000 	andeq	r0, r0, r0
 80070d0:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070d4:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070d8:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070dc:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070e0:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070e4:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070e8:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070ec:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070f0:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070f4:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070f8:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070fc:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007100:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007104:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007108:	080102ad 	stmdaeq	r1, {r0, r2, r3, r5, r7, r9}
 800710c:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007110:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007114:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007118:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 800711c:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007120:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007124:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007128:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 800712c:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007130:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007134:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007138:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 800713c:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007140:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007144:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007148:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 800714c:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007150:	00000000 	andeq	r0, r0, r0
 8007154:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007158:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 800715c:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007160:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007164:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
	...
 8007178:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 800717c:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007180:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007184:	00000000 	andeq	r0, r0, r0
 8007188:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 800718c:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
	...
 80071a0:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80071a4:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}

Disassembly of section .text:

080071a8 <__aeabi_d2f>:
 80071a8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 80071ac:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 80071b0:	bf24      	itt	cs
 80071b2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 80071b6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 80071ba:	d90d      	bls.n	80071d8 <__aeabi_d2f+0x30>
 80071bc:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 80071c0:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 80071c4:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 80071c8:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 80071cc:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 80071d0:	bf08      	it	eq
 80071d2:	f020 0001 	biceq.w	r0, r0, #1
 80071d6:	4770      	bx	lr
 80071d8:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 80071dc:	d121      	bne.n	8007222 <__aeabi_d2f+0x7a>
 80071de:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 80071e2:	bfbc      	itt	lt
 80071e4:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 80071e8:	4770      	bxlt	lr
 80071ea:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80071ee:	ea4f 5252 	mov.w	r2, r2, lsr #21
 80071f2:	f1c2 0218 	rsb	r2, r2, #24
 80071f6:	f1c2 0c20 	rsb	ip, r2, #32
 80071fa:	fa10 f30c 	lsls.w	r3, r0, ip
 80071fe:	fa20 f002 	lsr.w	r0, r0, r2
 8007202:	bf18      	it	ne
 8007204:	f040 0001 	orrne.w	r0, r0, #1
 8007208:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 800720c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8007210:	fa03 fc0c 	lsl.w	ip, r3, ip
 8007214:	ea40 000c 	orr.w	r0, r0, ip
 8007218:	fa23 f302 	lsr.w	r3, r3, r2
 800721c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8007220:	e7cc      	b.n	80071bc <__aeabi_d2f+0x14>
 8007222:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8007226:	d107      	bne.n	8007238 <__aeabi_d2f+0x90>
 8007228:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 800722c:	bf1e      	ittt	ne
 800722e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8007232:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8007236:	4770      	bxne	lr
 8007238:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 800723c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8007240:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007244:	4770      	bx	lr
 8007246:	bf00      	nop

08007248 <__aeabi_frsub>:
 8007248:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
 800724c:	e002      	b.n	8007254 <__addsf3>
 800724e:	bf00      	nop

08007250 <__aeabi_fsub>:
 8007250:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

08007254 <__addsf3>:
 8007254:	0042      	lsls	r2, r0, #1
 8007256:	bf1f      	itttt	ne
 8007258:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 800725c:	ea92 0f03 	teqne	r2, r3
 8007260:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8007264:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8007268:	d06a      	beq.n	8007340 <__addsf3+0xec>
 800726a:	ea4f 6212 	mov.w	r2, r2, lsr #24
 800726e:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8007272:	bfc1      	itttt	gt
 8007274:	18d2      	addgt	r2, r2, r3
 8007276:	4041      	eorgt	r1, r0
 8007278:	4048      	eorgt	r0, r1
 800727a:	4041      	eorgt	r1, r0
 800727c:	bfb8      	it	lt
 800727e:	425b      	neglt	r3, r3
 8007280:	2b19      	cmp	r3, #25
 8007282:	bf88      	it	hi
 8007284:	4770      	bxhi	lr
 8007286:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 800728a:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 800728e:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 8007292:	bf18      	it	ne
 8007294:	4240      	negne	r0, r0
 8007296:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 800729a:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 800729e:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 80072a2:	bf18      	it	ne
 80072a4:	4249      	negne	r1, r1
 80072a6:	ea92 0f03 	teq	r2, r3
 80072aa:	d03f      	beq.n	800732c <__addsf3+0xd8>
 80072ac:	f1a2 0201 	sub.w	r2, r2, #1
 80072b0:	fa41 fc03 	asr.w	ip, r1, r3
 80072b4:	eb10 000c 	adds.w	r0, r0, ip
 80072b8:	f1c3 0320 	rsb	r3, r3, #32
 80072bc:	fa01 f103 	lsl.w	r1, r1, r3
 80072c0:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 80072c4:	d502      	bpl.n	80072cc <__addsf3+0x78>
 80072c6:	4249      	negs	r1, r1
 80072c8:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 80072cc:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
 80072d0:	d313      	bcc.n	80072fa <__addsf3+0xa6>
 80072d2:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 80072d6:	d306      	bcc.n	80072e6 <__addsf3+0x92>
 80072d8:	0840      	lsrs	r0, r0, #1
 80072da:	ea4f 0131 	mov.w	r1, r1, rrx
 80072de:	f102 0201 	add.w	r2, r2, #1
 80072e2:	2afe      	cmp	r2, #254	; 0xfe
 80072e4:	d251      	bcs.n	800738a <__addsf3+0x136>
 80072e6:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
 80072ea:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 80072ee:	bf08      	it	eq
 80072f0:	f020 0001 	biceq.w	r0, r0, #1
 80072f4:	ea40 0003 	orr.w	r0, r0, r3
 80072f8:	4770      	bx	lr
 80072fa:	0049      	lsls	r1, r1, #1
 80072fc:	eb40 0000 	adc.w	r0, r0, r0
 8007300:	3a01      	subs	r2, #1
 8007302:	bf28      	it	cs
 8007304:	f5b0 0f00 	cmpcs.w	r0, #8388608	; 0x800000
 8007308:	d2ed      	bcs.n	80072e6 <__addsf3+0x92>
 800730a:	fab0 fc80 	clz	ip, r0
 800730e:	f1ac 0c08 	sub.w	ip, ip, #8
 8007312:	ebb2 020c 	subs.w	r2, r2, ip
 8007316:	fa00 f00c 	lsl.w	r0, r0, ip
 800731a:	bfaa      	itet	ge
 800731c:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8007320:	4252      	neglt	r2, r2
 8007322:	4318      	orrge	r0, r3
 8007324:	bfbc      	itt	lt
 8007326:	40d0      	lsrlt	r0, r2
 8007328:	4318      	orrlt	r0, r3
 800732a:	4770      	bx	lr
 800732c:	f092 0f00 	teq	r2, #0
 8007330:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
 8007334:	bf06      	itte	eq
 8007336:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
 800733a:	3201      	addeq	r2, #1
 800733c:	3b01      	subne	r3, #1
 800733e:	e7b5      	b.n	80072ac <__addsf3+0x58>
 8007340:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8007344:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8007348:	bf18      	it	ne
 800734a:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 800734e:	d021      	beq.n	8007394 <__addsf3+0x140>
 8007350:	ea92 0f03 	teq	r2, r3
 8007354:	d004      	beq.n	8007360 <__addsf3+0x10c>
 8007356:	f092 0f00 	teq	r2, #0
 800735a:	bf08      	it	eq
 800735c:	4608      	moveq	r0, r1
 800735e:	4770      	bx	lr
 8007360:	ea90 0f01 	teq	r0, r1
 8007364:	bf1c      	itt	ne
 8007366:	2000      	movne	r0, #0
 8007368:	4770      	bxne	lr
 800736a:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
 800736e:	d104      	bne.n	800737a <__addsf3+0x126>
 8007370:	0040      	lsls	r0, r0, #1
 8007372:	bf28      	it	cs
 8007374:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
 8007378:	4770      	bx	lr
 800737a:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
 800737e:	bf3c      	itt	cc
 8007380:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
 8007384:	4770      	bxcc	lr
 8007386:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 800738a:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
 800738e:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007392:	4770      	bx	lr
 8007394:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8007398:	bf16      	itet	ne
 800739a:	4608      	movne	r0, r1
 800739c:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 80073a0:	4601      	movne	r1, r0
 80073a2:	0242      	lsls	r2, r0, #9
 80073a4:	bf06      	itte	eq
 80073a6:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 80073aa:	ea90 0f01 	teqeq	r0, r1
 80073ae:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
 80073b2:	4770      	bx	lr

080073b4 <__aeabi_ui2f>:
 80073b4:	f04f 0300 	mov.w	r3, #0
 80073b8:	e004      	b.n	80073c4 <__aeabi_i2f+0x8>
 80073ba:	bf00      	nop

080073bc <__aeabi_i2f>:
 80073bc:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
 80073c0:	bf48      	it	mi
 80073c2:	4240      	negmi	r0, r0
 80073c4:	ea5f 0c00 	movs.w	ip, r0
 80073c8:	bf08      	it	eq
 80073ca:	4770      	bxeq	lr
 80073cc:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
 80073d0:	4601      	mov	r1, r0
 80073d2:	f04f 0000 	mov.w	r0, #0
 80073d6:	e01c      	b.n	8007412 <__aeabi_l2f+0x2a>

080073d8 <__aeabi_ul2f>:
 80073d8:	ea50 0201 	orrs.w	r2, r0, r1
 80073dc:	bf08      	it	eq
 80073de:	4770      	bxeq	lr
 80073e0:	f04f 0300 	mov.w	r3, #0
 80073e4:	e00a      	b.n	80073fc <__aeabi_l2f+0x14>
 80073e6:	bf00      	nop

080073e8 <__aeabi_l2f>:
 80073e8:	ea50 0201 	orrs.w	r2, r0, r1
 80073ec:	bf08      	it	eq
 80073ee:	4770      	bxeq	lr
 80073f0:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
 80073f4:	d502      	bpl.n	80073fc <__aeabi_l2f+0x14>
 80073f6:	4240      	negs	r0, r0
 80073f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80073fc:	ea5f 0c01 	movs.w	ip, r1
 8007400:	bf02      	ittt	eq
 8007402:	4684      	moveq	ip, r0
 8007404:	4601      	moveq	r1, r0
 8007406:	2000      	moveq	r0, #0
 8007408:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
 800740c:	bf08      	it	eq
 800740e:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
 8007412:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
 8007416:	fabc f28c 	clz	r2, ip
 800741a:	3a08      	subs	r2, #8
 800741c:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8007420:	db10      	blt.n	8007444 <__aeabi_l2f+0x5c>
 8007422:	fa01 fc02 	lsl.w	ip, r1, r2
 8007426:	4463      	add	r3, ip
 8007428:	fa00 fc02 	lsl.w	ip, r0, r2
 800742c:	f1c2 0220 	rsb	r2, r2, #32
 8007430:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8007434:	fa20 f202 	lsr.w	r2, r0, r2
 8007438:	eb43 0002 	adc.w	r0, r3, r2
 800743c:	bf08      	it	eq
 800743e:	f020 0001 	biceq.w	r0, r0, #1
 8007442:	4770      	bx	lr
 8007444:	f102 0220 	add.w	r2, r2, #32
 8007448:	fa01 fc02 	lsl.w	ip, r1, r2
 800744c:	f1c2 0220 	rsb	r2, r2, #32
 8007450:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8007454:	fa21 f202 	lsr.w	r2, r1, r2
 8007458:	eb43 0002 	adc.w	r0, r3, r2
 800745c:	bf08      	it	eq
 800745e:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8007462:	4770      	bx	lr

08007464 <__gesf2>:
 8007464:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
 8007468:	e006      	b.n	8007478 <__cmpsf2+0x4>
 800746a:	bf00      	nop

0800746c <__lesf2>:
 800746c:	f04f 0c01 	mov.w	ip, #1
 8007470:	e002      	b.n	8007478 <__cmpsf2+0x4>
 8007472:	bf00      	nop

08007474 <__cmpsf2>:
 8007474:	f04f 0c01 	mov.w	ip, #1
 8007478:	f84d cd04 	str.w	ip, [sp, #-4]!
 800747c:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8007480:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8007484:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8007488:	bf18      	it	ne
 800748a:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 800748e:	d011      	beq.n	80074b4 <__cmpsf2+0x40>
 8007490:	b001      	add	sp, #4
 8007492:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
 8007496:	bf18      	it	ne
 8007498:	ea90 0f01 	teqne	r0, r1
 800749c:	bf58      	it	pl
 800749e:	ebb2 0003 	subspl.w	r0, r2, r3
 80074a2:	bf88      	it	hi
 80074a4:	17c8      	asrhi	r0, r1, #31
 80074a6:	bf38      	it	cc
 80074a8:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
 80074ac:	bf18      	it	ne
 80074ae:	f040 0001 	orrne.w	r0, r0, #1
 80074b2:	4770      	bx	lr
 80074b4:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 80074b8:	d102      	bne.n	80074c0 <__cmpsf2+0x4c>
 80074ba:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 80074be:	d105      	bne.n	80074cc <__cmpsf2+0x58>
 80074c0:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 80074c4:	d1e4      	bne.n	8007490 <__cmpsf2+0x1c>
 80074c6:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 80074ca:	d0e1      	beq.n	8007490 <__cmpsf2+0x1c>
 80074cc:	f85d 0b04 	ldr.w	r0, [sp], #4
 80074d0:	4770      	bx	lr
 80074d2:	bf00      	nop

080074d4 <__aeabi_cfrcmple>:
 80074d4:	4684      	mov	ip, r0
 80074d6:	4608      	mov	r0, r1
 80074d8:	4661      	mov	r1, ip
 80074da:	e7ff      	b.n	80074dc <__aeabi_cfcmpeq>

080074dc <__aeabi_cfcmpeq>:
 80074dc:	b50f      	push	{r0, r1, r2, r3, lr}
 80074de:	f7ff ffc9 	bl	8007474 <__cmpsf2>
 80074e2:	2800      	cmp	r0, #0
 80074e4:	bf48      	it	mi
 80074e6:	f110 0f00 	cmnmi.w	r0, #0
 80074ea:	bd0f      	pop	{r0, r1, r2, r3, pc}

080074ec <__aeabi_fcmpeq>:
 80074ec:	f84d ed08 	str.w	lr, [sp, #-8]!
 80074f0:	f7ff fff4 	bl	80074dc <__aeabi_cfcmpeq>
 80074f4:	bf0c      	ite	eq
 80074f6:	2001      	moveq	r0, #1
 80074f8:	2000      	movne	r0, #0
 80074fa:	f85d fb08 	ldr.w	pc, [sp], #8
 80074fe:	bf00      	nop

08007500 <__aeabi_fcmplt>:
 8007500:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007504:	f7ff ffea 	bl	80074dc <__aeabi_cfcmpeq>
 8007508:	bf34      	ite	cc
 800750a:	2001      	movcc	r0, #1
 800750c:	2000      	movcs	r0, #0
 800750e:	f85d fb08 	ldr.w	pc, [sp], #8
 8007512:	bf00      	nop

08007514 <__aeabi_fcmple>:
 8007514:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007518:	f7ff ffe0 	bl	80074dc <__aeabi_cfcmpeq>
 800751c:	bf94      	ite	ls
 800751e:	2001      	movls	r0, #1
 8007520:	2000      	movhi	r0, #0
 8007522:	f85d fb08 	ldr.w	pc, [sp], #8
 8007526:	bf00      	nop

08007528 <__aeabi_fcmpge>:
 8007528:	f84d ed08 	str.w	lr, [sp, #-8]!
 800752c:	f7ff ffd2 	bl	80074d4 <__aeabi_cfrcmple>
 8007530:	bf94      	ite	ls
 8007532:	2001      	movls	r0, #1
 8007534:	2000      	movhi	r0, #0
 8007536:	f85d fb08 	ldr.w	pc, [sp], #8
 800753a:	bf00      	nop

0800753c <__aeabi_fcmpgt>:
 800753c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007540:	f7ff ffc8 	bl	80074d4 <__aeabi_cfrcmple>
 8007544:	bf34      	ite	cc
 8007546:	2001      	movcc	r0, #1
 8007548:	2000      	movcs	r0, #0
 800754a:	f85d fb08 	ldr.w	pc, [sp], #8
 800754e:	bf00      	nop

08007550 <__aeabi_f2iz>:
 8007550:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8007554:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 8007558:	d30f      	bcc.n	800757a <__aeabi_f2iz+0x2a>
 800755a:	f04f 039e 	mov.w	r3, #158	; 0x9e
 800755e:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 8007562:	d90d      	bls.n	8007580 <__aeabi_f2iz+0x30>
 8007564:	ea4f 2300 	mov.w	r3, r0, lsl #8
 8007568:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 800756c:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8007570:	fa23 f002 	lsr.w	r0, r3, r2
 8007574:	bf18      	it	ne
 8007576:	4240      	negne	r0, r0
 8007578:	4770      	bx	lr
 800757a:	f04f 0000 	mov.w	r0, #0
 800757e:	4770      	bx	lr
 8007580:	f112 0f61 	cmn.w	r2, #97	; 0x61
 8007584:	d101      	bne.n	800758a <__aeabi_f2iz+0x3a>
 8007586:	0242      	lsls	r2, r0, #9
 8007588:	d105      	bne.n	8007596 <__aeabi_f2iz+0x46>
 800758a:	f010 4000 	ands.w	r0, r0, #2147483648	; 0x80000000
 800758e:	bf08      	it	eq
 8007590:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8007594:	4770      	bx	lr
 8007596:	f04f 0000 	mov.w	r0, #0
 800759a:	4770      	bx	lr

0800759c <__aeabi_uldivmod>:
 800759c:	b953      	cbnz	r3, 80075b4 <__aeabi_uldivmod+0x18>
 800759e:	b94a      	cbnz	r2, 80075b4 <__aeabi_uldivmod+0x18>
 80075a0:	2900      	cmp	r1, #0
 80075a2:	bf08      	it	eq
 80075a4:	2800      	cmpeq	r0, #0
 80075a6:	bf1c      	itt	ne
 80075a8:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 80075ac:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 80075b0:	f000 b976 	b.w	80078a0 <__aeabi_idiv0>
 80075b4:	f1ad 0c08 	sub.w	ip, sp, #8
 80075b8:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80075bc:	f000 f806 	bl	80075cc <__udivmoddi4>
 80075c0:	f8dd e004 	ldr.w	lr, [sp, #4]
 80075c4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80075c8:	b004      	add	sp, #16
 80075ca:	4770      	bx	lr

080075cc <__udivmoddi4>:
 80075cc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80075d0:	9e08      	ldr	r6, [sp, #32]
 80075d2:	460d      	mov	r5, r1
 80075d4:	4604      	mov	r4, r0
 80075d6:	4688      	mov	r8, r1
 80075d8:	2b00      	cmp	r3, #0
 80075da:	d14d      	bne.n	8007678 <__udivmoddi4+0xac>
 80075dc:	428a      	cmp	r2, r1
 80075de:	4694      	mov	ip, r2
 80075e0:	d968      	bls.n	80076b4 <__udivmoddi4+0xe8>
 80075e2:	fab2 f282 	clz	r2, r2
 80075e6:	b152      	cbz	r2, 80075fe <__udivmoddi4+0x32>
 80075e8:	fa01 f302 	lsl.w	r3, r1, r2
 80075ec:	f1c2 0120 	rsb	r1, r2, #32
 80075f0:	fa20 f101 	lsr.w	r1, r0, r1
 80075f4:	fa0c fc02 	lsl.w	ip, ip, r2
 80075f8:	ea41 0803 	orr.w	r8, r1, r3
 80075fc:	4094      	lsls	r4, r2
 80075fe:	ea4f 411c 	mov.w	r1, ip, lsr #16
 8007602:	fbb8 f7f1 	udiv	r7, r8, r1
 8007606:	fa1f fe8c 	uxth.w	lr, ip
 800760a:	fb01 8817 	mls	r8, r1, r7, r8
 800760e:	fb07 f00e 	mul.w	r0, r7, lr
 8007612:	0c23      	lsrs	r3, r4, #16
 8007614:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8007618:	4298      	cmp	r0, r3
 800761a:	d90a      	bls.n	8007632 <__udivmoddi4+0x66>
 800761c:	eb1c 0303 	adds.w	r3, ip, r3
 8007620:	f107 35ff 	add.w	r5, r7, #4294967295	; 0xffffffff
 8007624:	f080 811e 	bcs.w	8007864 <__udivmoddi4+0x298>
 8007628:	4298      	cmp	r0, r3
 800762a:	f240 811b 	bls.w	8007864 <__udivmoddi4+0x298>
 800762e:	3f02      	subs	r7, #2
 8007630:	4463      	add	r3, ip
 8007632:	1a1b      	subs	r3, r3, r0
 8007634:	fbb3 f0f1 	udiv	r0, r3, r1
 8007638:	fb01 3310 	mls	r3, r1, r0, r3
 800763c:	fb00 fe0e 	mul.w	lr, r0, lr
 8007640:	b2a4      	uxth	r4, r4
 8007642:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8007646:	45a6      	cmp	lr, r4
 8007648:	d90a      	bls.n	8007660 <__udivmoddi4+0x94>
 800764a:	eb1c 0404 	adds.w	r4, ip, r4
 800764e:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8007652:	f080 8109 	bcs.w	8007868 <__udivmoddi4+0x29c>
 8007656:	45a6      	cmp	lr, r4
 8007658:	f240 8106 	bls.w	8007868 <__udivmoddi4+0x29c>
 800765c:	4464      	add	r4, ip
 800765e:	3802      	subs	r0, #2
 8007660:	2100      	movs	r1, #0
 8007662:	eba4 040e 	sub.w	r4, r4, lr
 8007666:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
 800766a:	b11e      	cbz	r6, 8007674 <__udivmoddi4+0xa8>
 800766c:	2300      	movs	r3, #0
 800766e:	40d4      	lsrs	r4, r2
 8007670:	e9c6 4300 	strd	r4, r3, [r6]
 8007674:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007678:	428b      	cmp	r3, r1
 800767a:	d908      	bls.n	800768e <__udivmoddi4+0xc2>
 800767c:	2e00      	cmp	r6, #0
 800767e:	f000 80ee 	beq.w	800785e <__udivmoddi4+0x292>
 8007682:	2100      	movs	r1, #0
 8007684:	e9c6 0500 	strd	r0, r5, [r6]
 8007688:	4608      	mov	r0, r1
 800768a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800768e:	fab3 f183 	clz	r1, r3
 8007692:	2900      	cmp	r1, #0
 8007694:	d14a      	bne.n	800772c <__udivmoddi4+0x160>
 8007696:	42ab      	cmp	r3, r5
 8007698:	d302      	bcc.n	80076a0 <__udivmoddi4+0xd4>
 800769a:	4282      	cmp	r2, r0
 800769c:	f200 80fc 	bhi.w	8007898 <__udivmoddi4+0x2cc>
 80076a0:	1a84      	subs	r4, r0, r2
 80076a2:	eb65 0303 	sbc.w	r3, r5, r3
 80076a6:	2001      	movs	r0, #1
 80076a8:	4698      	mov	r8, r3
 80076aa:	2e00      	cmp	r6, #0
 80076ac:	d0e2      	beq.n	8007674 <__udivmoddi4+0xa8>
 80076ae:	e9c6 4800 	strd	r4, r8, [r6]
 80076b2:	e7df      	b.n	8007674 <__udivmoddi4+0xa8>
 80076b4:	b902      	cbnz	r2, 80076b8 <__udivmoddi4+0xec>
 80076b6:	deff      	udf	#255	; 0xff
 80076b8:	fab2 f282 	clz	r2, r2
 80076bc:	2a00      	cmp	r2, #0
 80076be:	f040 8091 	bne.w	80077e4 <__udivmoddi4+0x218>
 80076c2:	eba1 000c 	sub.w	r0, r1, ip
 80076c6:	2101      	movs	r1, #1
 80076c8:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80076cc:	fa1f fe8c 	uxth.w	lr, ip
 80076d0:	fbb0 f3f7 	udiv	r3, r0, r7
 80076d4:	fb07 0013 	mls	r0, r7, r3, r0
 80076d8:	0c25      	lsrs	r5, r4, #16
 80076da:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
 80076de:	fb0e f003 	mul.w	r0, lr, r3
 80076e2:	42a8      	cmp	r0, r5
 80076e4:	d908      	bls.n	80076f8 <__udivmoddi4+0x12c>
 80076e6:	eb1c 0505 	adds.w	r5, ip, r5
 80076ea:	f103 38ff 	add.w	r8, r3, #4294967295	; 0xffffffff
 80076ee:	d202      	bcs.n	80076f6 <__udivmoddi4+0x12a>
 80076f0:	42a8      	cmp	r0, r5
 80076f2:	f200 80ce 	bhi.w	8007892 <__udivmoddi4+0x2c6>
 80076f6:	4643      	mov	r3, r8
 80076f8:	1a2d      	subs	r5, r5, r0
 80076fa:	fbb5 f0f7 	udiv	r0, r5, r7
 80076fe:	fb07 5510 	mls	r5, r7, r0, r5
 8007702:	fb0e fe00 	mul.w	lr, lr, r0
 8007706:	b2a4      	uxth	r4, r4
 8007708:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 800770c:	45a6      	cmp	lr, r4
 800770e:	d908      	bls.n	8007722 <__udivmoddi4+0x156>
 8007710:	eb1c 0404 	adds.w	r4, ip, r4
 8007714:	f100 35ff 	add.w	r5, r0, #4294967295	; 0xffffffff
 8007718:	d202      	bcs.n	8007720 <__udivmoddi4+0x154>
 800771a:	45a6      	cmp	lr, r4
 800771c:	f200 80b6 	bhi.w	800788c <__udivmoddi4+0x2c0>
 8007720:	4628      	mov	r0, r5
 8007722:	eba4 040e 	sub.w	r4, r4, lr
 8007726:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 800772a:	e79e      	b.n	800766a <__udivmoddi4+0x9e>
 800772c:	f1c1 0720 	rsb	r7, r1, #32
 8007730:	408b      	lsls	r3, r1
 8007732:	fa22 fc07 	lsr.w	ip, r2, r7
 8007736:	ea4c 0c03 	orr.w	ip, ip, r3
 800773a:	fa25 fa07 	lsr.w	sl, r5, r7
 800773e:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8007742:	fbba f8f9 	udiv	r8, sl, r9
 8007746:	fa20 f307 	lsr.w	r3, r0, r7
 800774a:	fb09 aa18 	mls	sl, r9, r8, sl
 800774e:	408d      	lsls	r5, r1
 8007750:	fa1f fe8c 	uxth.w	lr, ip
 8007754:	431d      	orrs	r5, r3
 8007756:	fa00 f301 	lsl.w	r3, r0, r1
 800775a:	fb08 f00e 	mul.w	r0, r8, lr
 800775e:	0c2c      	lsrs	r4, r5, #16
 8007760:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
 8007764:	42a0      	cmp	r0, r4
 8007766:	fa02 f201 	lsl.w	r2, r2, r1
 800776a:	d90b      	bls.n	8007784 <__udivmoddi4+0x1b8>
 800776c:	eb1c 0404 	adds.w	r4, ip, r4
 8007770:	f108 3aff 	add.w	sl, r8, #4294967295	; 0xffffffff
 8007774:	f080 8088 	bcs.w	8007888 <__udivmoddi4+0x2bc>
 8007778:	42a0      	cmp	r0, r4
 800777a:	f240 8085 	bls.w	8007888 <__udivmoddi4+0x2bc>
 800777e:	f1a8 0802 	sub.w	r8, r8, #2
 8007782:	4464      	add	r4, ip
 8007784:	1a24      	subs	r4, r4, r0
 8007786:	fbb4 f0f9 	udiv	r0, r4, r9
 800778a:	fb09 4410 	mls	r4, r9, r0, r4
 800778e:	fb00 fe0e 	mul.w	lr, r0, lr
 8007792:	b2ad      	uxth	r5, r5
 8007794:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8007798:	45a6      	cmp	lr, r4
 800779a:	d908      	bls.n	80077ae <__udivmoddi4+0x1e2>
 800779c:	eb1c 0404 	adds.w	r4, ip, r4
 80077a0:	f100 35ff 	add.w	r5, r0, #4294967295	; 0xffffffff
 80077a4:	d26c      	bcs.n	8007880 <__udivmoddi4+0x2b4>
 80077a6:	45a6      	cmp	lr, r4
 80077a8:	d96a      	bls.n	8007880 <__udivmoddi4+0x2b4>
 80077aa:	3802      	subs	r0, #2
 80077ac:	4464      	add	r4, ip
 80077ae:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 80077b2:	fba0 9502 	umull	r9, r5, r0, r2
 80077b6:	eba4 040e 	sub.w	r4, r4, lr
 80077ba:	42ac      	cmp	r4, r5
 80077bc:	46c8      	mov	r8, r9
 80077be:	46ae      	mov	lr, r5
 80077c0:	d356      	bcc.n	8007870 <__udivmoddi4+0x2a4>
 80077c2:	d053      	beq.n	800786c <__udivmoddi4+0x2a0>
 80077c4:	2e00      	cmp	r6, #0
 80077c6:	d069      	beq.n	800789c <__udivmoddi4+0x2d0>
 80077c8:	ebb3 0208 	subs.w	r2, r3, r8
 80077cc:	eb64 040e 	sbc.w	r4, r4, lr
 80077d0:	fa22 f301 	lsr.w	r3, r2, r1
 80077d4:	fa04 f707 	lsl.w	r7, r4, r7
 80077d8:	431f      	orrs	r7, r3
 80077da:	40cc      	lsrs	r4, r1
 80077dc:	e9c6 7400 	strd	r7, r4, [r6]
 80077e0:	2100      	movs	r1, #0
 80077e2:	e747      	b.n	8007674 <__udivmoddi4+0xa8>
 80077e4:	fa0c fc02 	lsl.w	ip, ip, r2
 80077e8:	f1c2 0120 	rsb	r1, r2, #32
 80077ec:	fa25 f301 	lsr.w	r3, r5, r1
 80077f0:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80077f4:	fa20 f101 	lsr.w	r1, r0, r1
 80077f8:	4095      	lsls	r5, r2
 80077fa:	430d      	orrs	r5, r1
 80077fc:	fbb3 f1f7 	udiv	r1, r3, r7
 8007800:	fb07 3311 	mls	r3, r7, r1, r3
 8007804:	fa1f fe8c 	uxth.w	lr, ip
 8007808:	0c28      	lsrs	r0, r5, #16
 800780a:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 800780e:	fb01 f30e 	mul.w	r3, r1, lr
 8007812:	4283      	cmp	r3, r0
 8007814:	fa04 f402 	lsl.w	r4, r4, r2
 8007818:	d908      	bls.n	800782c <__udivmoddi4+0x260>
 800781a:	eb1c 0000 	adds.w	r0, ip, r0
 800781e:	f101 38ff 	add.w	r8, r1, #4294967295	; 0xffffffff
 8007822:	d22f      	bcs.n	8007884 <__udivmoddi4+0x2b8>
 8007824:	4283      	cmp	r3, r0
 8007826:	d92d      	bls.n	8007884 <__udivmoddi4+0x2b8>
 8007828:	3902      	subs	r1, #2
 800782a:	4460      	add	r0, ip
 800782c:	1ac0      	subs	r0, r0, r3
 800782e:	fbb0 f3f7 	udiv	r3, r0, r7
 8007832:	fb07 0013 	mls	r0, r7, r3, r0
 8007836:	b2ad      	uxth	r5, r5
 8007838:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
 800783c:	fb03 f00e 	mul.w	r0, r3, lr
 8007840:	42a8      	cmp	r0, r5
 8007842:	d908      	bls.n	8007856 <__udivmoddi4+0x28a>
 8007844:	eb1c 0505 	adds.w	r5, ip, r5
 8007848:	f103 38ff 	add.w	r8, r3, #4294967295	; 0xffffffff
 800784c:	d216      	bcs.n	800787c <__udivmoddi4+0x2b0>
 800784e:	42a8      	cmp	r0, r5
 8007850:	d914      	bls.n	800787c <__udivmoddi4+0x2b0>
 8007852:	3b02      	subs	r3, #2
 8007854:	4465      	add	r5, ip
 8007856:	1a28      	subs	r0, r5, r0
 8007858:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 800785c:	e738      	b.n	80076d0 <__udivmoddi4+0x104>
 800785e:	4631      	mov	r1, r6
 8007860:	4630      	mov	r0, r6
 8007862:	e707      	b.n	8007674 <__udivmoddi4+0xa8>
 8007864:	462f      	mov	r7, r5
 8007866:	e6e4      	b.n	8007632 <__udivmoddi4+0x66>
 8007868:	4618      	mov	r0, r3
 800786a:	e6f9      	b.n	8007660 <__udivmoddi4+0x94>
 800786c:	454b      	cmp	r3, r9
 800786e:	d2a9      	bcs.n	80077c4 <__udivmoddi4+0x1f8>
 8007870:	ebb9 0802 	subs.w	r8, r9, r2
 8007874:	eb65 0e0c 	sbc.w	lr, r5, ip
 8007878:	3801      	subs	r0, #1
 800787a:	e7a3      	b.n	80077c4 <__udivmoddi4+0x1f8>
 800787c:	4643      	mov	r3, r8
 800787e:	e7ea      	b.n	8007856 <__udivmoddi4+0x28a>
 8007880:	4628      	mov	r0, r5
 8007882:	e794      	b.n	80077ae <__udivmoddi4+0x1e2>
 8007884:	4641      	mov	r1, r8
 8007886:	e7d1      	b.n	800782c <__udivmoddi4+0x260>
 8007888:	46d0      	mov	r8, sl
 800788a:	e77b      	b.n	8007784 <__udivmoddi4+0x1b8>
 800788c:	4464      	add	r4, ip
 800788e:	3802      	subs	r0, #2
 8007890:	e747      	b.n	8007722 <__udivmoddi4+0x156>
 8007892:	3b02      	subs	r3, #2
 8007894:	4465      	add	r5, ip
 8007896:	e72f      	b.n	80076f8 <__udivmoddi4+0x12c>
 8007898:	4608      	mov	r0, r1
 800789a:	e706      	b.n	80076aa <__udivmoddi4+0xde>
 800789c:	4631      	mov	r1, r6
 800789e:	e6e9      	b.n	8007674 <__udivmoddi4+0xa8>

080078a0 <__aeabi_idiv0>:
 80078a0:	4770      	bx	lr
 80078a2:	bf00      	nop

080078a4 <__aeabi_drsub>:
 80078a4:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80078a8:	e002      	b.n	80078b0 <__adddf3>
 80078aa:	bf00      	nop

080078ac <__aeabi_dsub>:
 80078ac:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080078b0 <__adddf3>:
 80078b0:	b530      	push	{r4, r5, lr}
 80078b2:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80078b6:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80078ba:	ea94 0f05 	teq	r4, r5
 80078be:	bf08      	it	eq
 80078c0:	ea90 0f02 	teqeq	r0, r2
 80078c4:	bf1f      	itttt	ne
 80078c6:	ea54 0c00 	orrsne.w	ip, r4, r0
 80078ca:	ea55 0c02 	orrsne.w	ip, r5, r2
 80078ce:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80078d2:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80078d6:	f000 80e2 	beq.w	8007a9e <__adddf3+0x1ee>
 80078da:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80078de:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80078e2:	bfb8      	it	lt
 80078e4:	426d      	neglt	r5, r5
 80078e6:	dd0c      	ble.n	8007902 <__adddf3+0x52>
 80078e8:	442c      	add	r4, r5
 80078ea:	ea80 0202 	eor.w	r2, r0, r2
 80078ee:	ea81 0303 	eor.w	r3, r1, r3
 80078f2:	ea82 0000 	eor.w	r0, r2, r0
 80078f6:	ea83 0101 	eor.w	r1, r3, r1
 80078fa:	ea80 0202 	eor.w	r2, r0, r2
 80078fe:	ea81 0303 	eor.w	r3, r1, r3
 8007902:	2d36      	cmp	r5, #54	; 0x36
 8007904:	bf88      	it	hi
 8007906:	bd30      	pophi	{r4, r5, pc}
 8007908:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 800790c:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8007910:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8007914:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8007918:	d002      	beq.n	8007920 <__adddf3+0x70>
 800791a:	4240      	negs	r0, r0
 800791c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8007920:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8007924:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8007928:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 800792c:	d002      	beq.n	8007934 <__adddf3+0x84>
 800792e:	4252      	negs	r2, r2
 8007930:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8007934:	ea94 0f05 	teq	r4, r5
 8007938:	f000 80a7 	beq.w	8007a8a <__adddf3+0x1da>
 800793c:	f1a4 0401 	sub.w	r4, r4, #1
 8007940:	f1d5 0e20 	rsbs	lr, r5, #32
 8007944:	db0d      	blt.n	8007962 <__adddf3+0xb2>
 8007946:	fa02 fc0e 	lsl.w	ip, r2, lr
 800794a:	fa22 f205 	lsr.w	r2, r2, r5
 800794e:	1880      	adds	r0, r0, r2
 8007950:	f141 0100 	adc.w	r1, r1, #0
 8007954:	fa03 f20e 	lsl.w	r2, r3, lr
 8007958:	1880      	adds	r0, r0, r2
 800795a:	fa43 f305 	asr.w	r3, r3, r5
 800795e:	4159      	adcs	r1, r3
 8007960:	e00e      	b.n	8007980 <__adddf3+0xd0>
 8007962:	f1a5 0520 	sub.w	r5, r5, #32
 8007966:	f10e 0e20 	add.w	lr, lr, #32
 800796a:	2a01      	cmp	r2, #1
 800796c:	fa03 fc0e 	lsl.w	ip, r3, lr
 8007970:	bf28      	it	cs
 8007972:	f04c 0c02 	orrcs.w	ip, ip, #2
 8007976:	fa43 f305 	asr.w	r3, r3, r5
 800797a:	18c0      	adds	r0, r0, r3
 800797c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8007980:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8007984:	d507      	bpl.n	8007996 <__adddf3+0xe6>
 8007986:	f04f 0e00 	mov.w	lr, #0
 800798a:	f1dc 0c00 	rsbs	ip, ip, #0
 800798e:	eb7e 0000 	sbcs.w	r0, lr, r0
 8007992:	eb6e 0101 	sbc.w	r1, lr, r1
 8007996:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 800799a:	d31b      	bcc.n	80079d4 <__adddf3+0x124>
 800799c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80079a0:	d30c      	bcc.n	80079bc <__adddf3+0x10c>
 80079a2:	0849      	lsrs	r1, r1, #1
 80079a4:	ea5f 0030 	movs.w	r0, r0, rrx
 80079a8:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80079ac:	f104 0401 	add.w	r4, r4, #1
 80079b0:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80079b4:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80079b8:	f080 809a 	bcs.w	8007af0 <__adddf3+0x240>
 80079bc:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80079c0:	bf08      	it	eq
 80079c2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80079c6:	f150 0000 	adcs.w	r0, r0, #0
 80079ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80079ce:	ea41 0105 	orr.w	r1, r1, r5
 80079d2:	bd30      	pop	{r4, r5, pc}
 80079d4:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80079d8:	4140      	adcs	r0, r0
 80079da:	eb41 0101 	adc.w	r1, r1, r1
 80079de:	3c01      	subs	r4, #1
 80079e0:	bf28      	it	cs
 80079e2:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80079e6:	d2e9      	bcs.n	80079bc <__adddf3+0x10c>
 80079e8:	f091 0f00 	teq	r1, #0
 80079ec:	bf04      	itt	eq
 80079ee:	4601      	moveq	r1, r0
 80079f0:	2000      	moveq	r0, #0
 80079f2:	fab1 f381 	clz	r3, r1
 80079f6:	bf08      	it	eq
 80079f8:	3320      	addeq	r3, #32
 80079fa:	f1a3 030b 	sub.w	r3, r3, #11
 80079fe:	f1b3 0220 	subs.w	r2, r3, #32
 8007a02:	da0c      	bge.n	8007a1e <__adddf3+0x16e>
 8007a04:	320c      	adds	r2, #12
 8007a06:	dd08      	ble.n	8007a1a <__adddf3+0x16a>
 8007a08:	f102 0c14 	add.w	ip, r2, #20
 8007a0c:	f1c2 020c 	rsb	r2, r2, #12
 8007a10:	fa01 f00c 	lsl.w	r0, r1, ip
 8007a14:	fa21 f102 	lsr.w	r1, r1, r2
 8007a18:	e00c      	b.n	8007a34 <__adddf3+0x184>
 8007a1a:	f102 0214 	add.w	r2, r2, #20
 8007a1e:	bfd8      	it	le
 8007a20:	f1c2 0c20 	rsble	ip, r2, #32
 8007a24:	fa01 f102 	lsl.w	r1, r1, r2
 8007a28:	fa20 fc0c 	lsr.w	ip, r0, ip
 8007a2c:	bfdc      	itt	le
 8007a2e:	ea41 010c 	orrle.w	r1, r1, ip
 8007a32:	4090      	lslle	r0, r2
 8007a34:	1ae4      	subs	r4, r4, r3
 8007a36:	bfa2      	ittt	ge
 8007a38:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8007a3c:	4329      	orrge	r1, r5
 8007a3e:	bd30      	popge	{r4, r5, pc}
 8007a40:	ea6f 0404 	mvn.w	r4, r4
 8007a44:	3c1f      	subs	r4, #31
 8007a46:	da1c      	bge.n	8007a82 <__adddf3+0x1d2>
 8007a48:	340c      	adds	r4, #12
 8007a4a:	dc0e      	bgt.n	8007a6a <__adddf3+0x1ba>
 8007a4c:	f104 0414 	add.w	r4, r4, #20
 8007a50:	f1c4 0220 	rsb	r2, r4, #32
 8007a54:	fa20 f004 	lsr.w	r0, r0, r4
 8007a58:	fa01 f302 	lsl.w	r3, r1, r2
 8007a5c:	ea40 0003 	orr.w	r0, r0, r3
 8007a60:	fa21 f304 	lsr.w	r3, r1, r4
 8007a64:	ea45 0103 	orr.w	r1, r5, r3
 8007a68:	bd30      	pop	{r4, r5, pc}
 8007a6a:	f1c4 040c 	rsb	r4, r4, #12
 8007a6e:	f1c4 0220 	rsb	r2, r4, #32
 8007a72:	fa20 f002 	lsr.w	r0, r0, r2
 8007a76:	fa01 f304 	lsl.w	r3, r1, r4
 8007a7a:	ea40 0003 	orr.w	r0, r0, r3
 8007a7e:	4629      	mov	r1, r5
 8007a80:	bd30      	pop	{r4, r5, pc}
 8007a82:	fa21 f004 	lsr.w	r0, r1, r4
 8007a86:	4629      	mov	r1, r5
 8007a88:	bd30      	pop	{r4, r5, pc}
 8007a8a:	f094 0f00 	teq	r4, #0
 8007a8e:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 8007a92:	bf06      	itte	eq
 8007a94:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8007a98:	3401      	addeq	r4, #1
 8007a9a:	3d01      	subne	r5, #1
 8007a9c:	e74e      	b.n	800793c <__adddf3+0x8c>
 8007a9e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8007aa2:	bf18      	it	ne
 8007aa4:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8007aa8:	d029      	beq.n	8007afe <__adddf3+0x24e>
 8007aaa:	ea94 0f05 	teq	r4, r5
 8007aae:	bf08      	it	eq
 8007ab0:	ea90 0f02 	teqeq	r0, r2
 8007ab4:	d005      	beq.n	8007ac2 <__adddf3+0x212>
 8007ab6:	ea54 0c00 	orrs.w	ip, r4, r0
 8007aba:	bf04      	itt	eq
 8007abc:	4619      	moveq	r1, r3
 8007abe:	4610      	moveq	r0, r2
 8007ac0:	bd30      	pop	{r4, r5, pc}
 8007ac2:	ea91 0f03 	teq	r1, r3
 8007ac6:	bf1e      	ittt	ne
 8007ac8:	2100      	movne	r1, #0
 8007aca:	2000      	movne	r0, #0
 8007acc:	bd30      	popne	{r4, r5, pc}
 8007ace:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8007ad2:	d105      	bne.n	8007ae0 <__adddf3+0x230>
 8007ad4:	0040      	lsls	r0, r0, #1
 8007ad6:	4149      	adcs	r1, r1
 8007ad8:	bf28      	it	cs
 8007ada:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 8007ade:	bd30      	pop	{r4, r5, pc}
 8007ae0:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8007ae4:	bf3c      	itt	cc
 8007ae6:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8007aea:	bd30      	popcc	{r4, r5, pc}
 8007aec:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8007af0:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8007af4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8007af8:	f04f 0000 	mov.w	r0, #0
 8007afc:	bd30      	pop	{r4, r5, pc}
 8007afe:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8007b02:	bf1a      	itte	ne
 8007b04:	4619      	movne	r1, r3
 8007b06:	4610      	movne	r0, r2
 8007b08:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8007b0c:	bf1c      	itt	ne
 8007b0e:	460b      	movne	r3, r1
 8007b10:	4602      	movne	r2, r0
 8007b12:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8007b16:	bf06      	itte	eq
 8007b18:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8007b1c:	ea91 0f03 	teqeq	r1, r3
 8007b20:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8007b24:	bd30      	pop	{r4, r5, pc}
 8007b26:	bf00      	nop

08007b28 <__aeabi_ui2d>:
 8007b28:	f090 0f00 	teq	r0, #0
 8007b2c:	bf04      	itt	eq
 8007b2e:	2100      	moveq	r1, #0
 8007b30:	4770      	bxeq	lr
 8007b32:	b530      	push	{r4, r5, lr}
 8007b34:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8007b38:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8007b3c:	f04f 0500 	mov.w	r5, #0
 8007b40:	f04f 0100 	mov.w	r1, #0
 8007b44:	e750      	b.n	80079e8 <__adddf3+0x138>
 8007b46:	bf00      	nop

08007b48 <__aeabi_i2d>:
 8007b48:	f090 0f00 	teq	r0, #0
 8007b4c:	bf04      	itt	eq
 8007b4e:	2100      	moveq	r1, #0
 8007b50:	4770      	bxeq	lr
 8007b52:	b530      	push	{r4, r5, lr}
 8007b54:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8007b58:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8007b5c:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8007b60:	bf48      	it	mi
 8007b62:	4240      	negmi	r0, r0
 8007b64:	f04f 0100 	mov.w	r1, #0
 8007b68:	e73e      	b.n	80079e8 <__adddf3+0x138>
 8007b6a:	bf00      	nop

08007b6c <__aeabi_f2d>:
 8007b6c:	0042      	lsls	r2, r0, #1
 8007b6e:	ea4f 01e2 	mov.w	r1, r2, asr #3
 8007b72:	ea4f 0131 	mov.w	r1, r1, rrx
 8007b76:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8007b7a:	bf1f      	itttt	ne
 8007b7c:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 8007b80:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8007b84:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8007b88:	4770      	bxne	lr
 8007b8a:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 8007b8e:	bf08      	it	eq
 8007b90:	4770      	bxeq	lr
 8007b92:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8007b96:	bf04      	itt	eq
 8007b98:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8007b9c:	4770      	bxeq	lr
 8007b9e:	b530      	push	{r4, r5, lr}
 8007ba0:	f44f 7460 	mov.w	r4, #896	; 0x380
 8007ba4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8007ba8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8007bac:	e71c      	b.n	80079e8 <__adddf3+0x138>
 8007bae:	bf00      	nop

08007bb0 <__aeabi_ul2d>:
 8007bb0:	ea50 0201 	orrs.w	r2, r0, r1
 8007bb4:	bf08      	it	eq
 8007bb6:	4770      	bxeq	lr
 8007bb8:	b530      	push	{r4, r5, lr}
 8007bba:	f04f 0500 	mov.w	r5, #0
 8007bbe:	e00a      	b.n	8007bd6 <__aeabi_l2d+0x16>

08007bc0 <__aeabi_l2d>:
 8007bc0:	ea50 0201 	orrs.w	r2, r0, r1
 8007bc4:	bf08      	it	eq
 8007bc6:	4770      	bxeq	lr
 8007bc8:	b530      	push	{r4, r5, lr}
 8007bca:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 8007bce:	d502      	bpl.n	8007bd6 <__aeabi_l2d+0x16>
 8007bd0:	4240      	negs	r0, r0
 8007bd2:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8007bd6:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8007bda:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8007bde:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 8007be2:	f43f aed8 	beq.w	8007996 <__adddf3+0xe6>
 8007be6:	f04f 0203 	mov.w	r2, #3
 8007bea:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8007bee:	bf18      	it	ne
 8007bf0:	3203      	addne	r2, #3
 8007bf2:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8007bf6:	bf18      	it	ne
 8007bf8:	3203      	addne	r2, #3
 8007bfa:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 8007bfe:	f1c2 0320 	rsb	r3, r2, #32
 8007c02:	fa00 fc03 	lsl.w	ip, r0, r3
 8007c06:	fa20 f002 	lsr.w	r0, r0, r2
 8007c0a:	fa01 fe03 	lsl.w	lr, r1, r3
 8007c0e:	ea40 000e 	orr.w	r0, r0, lr
 8007c12:	fa21 f102 	lsr.w	r1, r1, r2
 8007c16:	4414      	add	r4, r2
 8007c18:	e6bd      	b.n	8007996 <__adddf3+0xe6>
 8007c1a:	bf00      	nop

08007c1c <__aeabi_fmul>:
 8007c1c:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8007c20:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8007c24:	bf1e      	ittt	ne
 8007c26:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8007c2a:	ea92 0f0c 	teqne	r2, ip
 8007c2e:	ea93 0f0c 	teqne	r3, ip
 8007c32:	d06f      	beq.n	8007d14 <__aeabi_fmul+0xf8>
 8007c34:	441a      	add	r2, r3
 8007c36:	ea80 0c01 	eor.w	ip, r0, r1
 8007c3a:	0240      	lsls	r0, r0, #9
 8007c3c:	bf18      	it	ne
 8007c3e:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 8007c42:	d01e      	beq.n	8007c82 <__aeabi_fmul+0x66>
 8007c44:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8007c48:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 8007c4c:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 8007c50:	fba0 3101 	umull	r3, r1, r0, r1
 8007c54:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8007c58:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 8007c5c:	bf3e      	ittt	cc
 8007c5e:	0049      	lslcc	r1, r1, #1
 8007c60:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 8007c64:	005b      	lslcc	r3, r3, #1
 8007c66:	ea40 0001 	orr.w	r0, r0, r1
 8007c6a:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
 8007c6e:	2afd      	cmp	r2, #253	; 0xfd
 8007c70:	d81d      	bhi.n	8007cae <__aeabi_fmul+0x92>
 8007c72:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8007c76:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8007c7a:	bf08      	it	eq
 8007c7c:	f020 0001 	biceq.w	r0, r0, #1
 8007c80:	4770      	bx	lr
 8007c82:	f090 0f00 	teq	r0, #0
 8007c86:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8007c8a:	bf08      	it	eq
 8007c8c:	0249      	lsleq	r1, r1, #9
 8007c8e:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8007c92:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 8007c96:	3a7f      	subs	r2, #127	; 0x7f
 8007c98:	bfc2      	ittt	gt
 8007c9a:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8007c9e:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8007ca2:	4770      	bxgt	lr
 8007ca4:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007ca8:	f04f 0300 	mov.w	r3, #0
 8007cac:	3a01      	subs	r2, #1
 8007cae:	dc5d      	bgt.n	8007d6c <__aeabi_fmul+0x150>
 8007cb0:	f112 0f19 	cmn.w	r2, #25
 8007cb4:	bfdc      	itt	le
 8007cb6:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
 8007cba:	4770      	bxle	lr
 8007cbc:	f1c2 0200 	rsb	r2, r2, #0
 8007cc0:	0041      	lsls	r1, r0, #1
 8007cc2:	fa21 f102 	lsr.w	r1, r1, r2
 8007cc6:	f1c2 0220 	rsb	r2, r2, #32
 8007cca:	fa00 fc02 	lsl.w	ip, r0, r2
 8007cce:	ea5f 0031 	movs.w	r0, r1, rrx
 8007cd2:	f140 0000 	adc.w	r0, r0, #0
 8007cd6:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 8007cda:	bf08      	it	eq
 8007cdc:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8007ce0:	4770      	bx	lr
 8007ce2:	f092 0f00 	teq	r2, #0
 8007ce6:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8007cea:	bf02      	ittt	eq
 8007cec:	0040      	lsleq	r0, r0, #1
 8007cee:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8007cf2:	3a01      	subeq	r2, #1
 8007cf4:	d0f9      	beq.n	8007cea <__aeabi_fmul+0xce>
 8007cf6:	ea40 000c 	orr.w	r0, r0, ip
 8007cfa:	f093 0f00 	teq	r3, #0
 8007cfe:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8007d02:	bf02      	ittt	eq
 8007d04:	0049      	lsleq	r1, r1, #1
 8007d06:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8007d0a:	3b01      	subeq	r3, #1
 8007d0c:	d0f9      	beq.n	8007d02 <__aeabi_fmul+0xe6>
 8007d0e:	ea41 010c 	orr.w	r1, r1, ip
 8007d12:	e78f      	b.n	8007c34 <__aeabi_fmul+0x18>
 8007d14:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8007d18:	ea92 0f0c 	teq	r2, ip
 8007d1c:	bf18      	it	ne
 8007d1e:	ea93 0f0c 	teqne	r3, ip
 8007d22:	d00a      	beq.n	8007d3a <__aeabi_fmul+0x11e>
 8007d24:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8007d28:	bf18      	it	ne
 8007d2a:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8007d2e:	d1d8      	bne.n	8007ce2 <__aeabi_fmul+0xc6>
 8007d30:	ea80 0001 	eor.w	r0, r0, r1
 8007d34:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8007d38:	4770      	bx	lr
 8007d3a:	f090 0f00 	teq	r0, #0
 8007d3e:	bf17      	itett	ne
 8007d40:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
 8007d44:	4608      	moveq	r0, r1
 8007d46:	f091 0f00 	teqne	r1, #0
 8007d4a:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
 8007d4e:	d014      	beq.n	8007d7a <__aeabi_fmul+0x15e>
 8007d50:	ea92 0f0c 	teq	r2, ip
 8007d54:	d101      	bne.n	8007d5a <__aeabi_fmul+0x13e>
 8007d56:	0242      	lsls	r2, r0, #9
 8007d58:	d10f      	bne.n	8007d7a <__aeabi_fmul+0x15e>
 8007d5a:	ea93 0f0c 	teq	r3, ip
 8007d5e:	d103      	bne.n	8007d68 <__aeabi_fmul+0x14c>
 8007d60:	024b      	lsls	r3, r1, #9
 8007d62:	bf18      	it	ne
 8007d64:	4608      	movne	r0, r1
 8007d66:	d108      	bne.n	8007d7a <__aeabi_fmul+0x15e>
 8007d68:	ea80 0001 	eor.w	r0, r0, r1
 8007d6c:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8007d70:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8007d74:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007d78:	4770      	bx	lr
 8007d7a:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8007d7e:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
 8007d82:	4770      	bx	lr

08007d84 <__aeabi_fdiv>:
 8007d84:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8007d88:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8007d8c:	bf1e      	ittt	ne
 8007d8e:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8007d92:	ea92 0f0c 	teqne	r2, ip
 8007d96:	ea93 0f0c 	teqne	r3, ip
 8007d9a:	d069      	beq.n	8007e70 <__aeabi_fdiv+0xec>
 8007d9c:	eba2 0203 	sub.w	r2, r2, r3
 8007da0:	ea80 0c01 	eor.w	ip, r0, r1
 8007da4:	0249      	lsls	r1, r1, #9
 8007da6:	ea4f 2040 	mov.w	r0, r0, lsl #9
 8007daa:	d037      	beq.n	8007e1c <__aeabi_fdiv+0x98>
 8007dac:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8007db0:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 8007db4:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8007db8:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8007dbc:	428b      	cmp	r3, r1
 8007dbe:	bf38      	it	cc
 8007dc0:	005b      	lslcc	r3, r3, #1
 8007dc2:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
 8007dc6:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
 8007dca:	428b      	cmp	r3, r1
 8007dcc:	bf24      	itt	cs
 8007dce:	1a5b      	subcs	r3, r3, r1
 8007dd0:	ea40 000c 	orrcs.w	r0, r0, ip
 8007dd4:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 8007dd8:	bf24      	itt	cs
 8007dda:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 8007dde:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8007de2:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 8007de6:	bf24      	itt	cs
 8007de8:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 8007dec:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8007df0:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 8007df4:	bf24      	itt	cs
 8007df6:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 8007dfa:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8007dfe:	011b      	lsls	r3, r3, #4
 8007e00:	bf18      	it	ne
 8007e02:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 8007e06:	d1e0      	bne.n	8007dca <__aeabi_fdiv+0x46>
 8007e08:	2afd      	cmp	r2, #253	; 0xfd
 8007e0a:	f63f af50 	bhi.w	8007cae <__aeabi_fmul+0x92>
 8007e0e:	428b      	cmp	r3, r1
 8007e10:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8007e14:	bf08      	it	eq
 8007e16:	f020 0001 	biceq.w	r0, r0, #1
 8007e1a:	4770      	bx	lr
 8007e1c:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8007e20:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8007e24:	327f      	adds	r2, #127	; 0x7f
 8007e26:	bfc2      	ittt	gt
 8007e28:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8007e2c:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8007e30:	4770      	bxgt	lr
 8007e32:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007e36:	f04f 0300 	mov.w	r3, #0
 8007e3a:	3a01      	subs	r2, #1
 8007e3c:	e737      	b.n	8007cae <__aeabi_fmul+0x92>
 8007e3e:	f092 0f00 	teq	r2, #0
 8007e42:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8007e46:	bf02      	ittt	eq
 8007e48:	0040      	lsleq	r0, r0, #1
 8007e4a:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8007e4e:	3a01      	subeq	r2, #1
 8007e50:	d0f9      	beq.n	8007e46 <__aeabi_fdiv+0xc2>
 8007e52:	ea40 000c 	orr.w	r0, r0, ip
 8007e56:	f093 0f00 	teq	r3, #0
 8007e5a:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8007e5e:	bf02      	ittt	eq
 8007e60:	0049      	lsleq	r1, r1, #1
 8007e62:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8007e66:	3b01      	subeq	r3, #1
 8007e68:	d0f9      	beq.n	8007e5e <__aeabi_fdiv+0xda>
 8007e6a:	ea41 010c 	orr.w	r1, r1, ip
 8007e6e:	e795      	b.n	8007d9c <__aeabi_fdiv+0x18>
 8007e70:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8007e74:	ea92 0f0c 	teq	r2, ip
 8007e78:	d108      	bne.n	8007e8c <__aeabi_fdiv+0x108>
 8007e7a:	0242      	lsls	r2, r0, #9
 8007e7c:	f47f af7d 	bne.w	8007d7a <__aeabi_fmul+0x15e>
 8007e80:	ea93 0f0c 	teq	r3, ip
 8007e84:	f47f af70 	bne.w	8007d68 <__aeabi_fmul+0x14c>
 8007e88:	4608      	mov	r0, r1
 8007e8a:	e776      	b.n	8007d7a <__aeabi_fmul+0x15e>
 8007e8c:	ea93 0f0c 	teq	r3, ip
 8007e90:	d104      	bne.n	8007e9c <__aeabi_fdiv+0x118>
 8007e92:	024b      	lsls	r3, r1, #9
 8007e94:	f43f af4c 	beq.w	8007d30 <__aeabi_fmul+0x114>
 8007e98:	4608      	mov	r0, r1
 8007e9a:	e76e      	b.n	8007d7a <__aeabi_fmul+0x15e>
 8007e9c:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8007ea0:	bf18      	it	ne
 8007ea2:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8007ea6:	d1ca      	bne.n	8007e3e <__aeabi_fdiv+0xba>
 8007ea8:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
 8007eac:	f47f af5c 	bne.w	8007d68 <__aeabi_fmul+0x14c>
 8007eb0:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
 8007eb4:	f47f af3c 	bne.w	8007d30 <__aeabi_fmul+0x114>
 8007eb8:	e75f      	b.n	8007d7a <__aeabi_fmul+0x15e>
 8007eba:	bf00      	nop

08007ebc <__popcountsi2>:
 8007ebc:	0843      	lsrs	r3, r0, #1
 8007ebe:	f003 3355 	and.w	r3, r3, #1431655765	; 0x55555555
 8007ec2:	1ac0      	subs	r0, r0, r3
 8007ec4:	0883      	lsrs	r3, r0, #2
 8007ec6:	f003 3333 	and.w	r3, r3, #858993459	; 0x33333333
 8007eca:	f000 3033 	and.w	r0, r0, #858993459	; 0x33333333
 8007ece:	4418      	add	r0, r3
 8007ed0:	eb00 1010 	add.w	r0, r0, r0, lsr #4
 8007ed4:	f000 300f 	and.w	r0, r0, #252645135	; 0xf0f0f0f
 8007ed8:	eb00 2000 	add.w	r0, r0, r0, lsl #8
 8007edc:	eb00 4000 	add.w	r0, r0, r0, lsl #16
 8007ee0:	0e00      	lsrs	r0, r0, #24
 8007ee2:	4770      	bx	lr

08007ee4 <Reset_Handler>:
 8007ee4:	2100      	movs	r1, #0
 8007ee6:	e003      	b.n	8007ef0 <DataInit>

08007ee8 <CopyData>:
 8007ee8:	4b0a      	ldr	r3, [pc, #40]	; (8007f14 <Zerobss+0x10>)
 8007eea:	585b      	ldr	r3, [r3, r1]
 8007eec:	5043      	str	r3, [r0, r1]
 8007eee:	3104      	adds	r1, #4

08007ef0 <DataInit>:
 8007ef0:	4809      	ldr	r0, [pc, #36]	; (8007f18 <Zerobss+0x14>)
 8007ef2:	4b0a      	ldr	r3, [pc, #40]	; (8007f1c <Zerobss+0x18>)
 8007ef4:	1842      	adds	r2, r0, r1
 8007ef6:	429a      	cmp	r2, r3
 8007ef8:	d3f6      	bcc.n	8007ee8 <CopyData>
 8007efa:	4a09      	ldr	r2, [pc, #36]	; (8007f20 <Zerobss+0x1c>)
 8007efc:	e002      	b.n	8007f04 <Zerobss>

08007efe <FillZerobss>:
 8007efe:	2300      	movs	r3, #0
 8007f00:	f842 3b04 	str.w	r3, [r2], #4

08007f04 <Zerobss>:
 8007f04:	4b07      	ldr	r3, [pc, #28]	; (8007f24 <Zerobss+0x20>)
 8007f06:	429a      	cmp	r2, r3
 8007f08:	d3f9      	bcc.n	8007efe <FillZerobss>
 8007f0a:	f00e f891 	bl	8016030 <SystemInit>
 8007f0e:	f000 f9bb 	bl	8008288 <main>
 8007f12:	4770      	bx	lr
 8007f14:	0801a804 	stmdaeq	r1, {r2, fp, sp, pc}
 8007f18:	20000000 	andcs	r0, r0, r0
 8007f1c:	200000e8 	andcs	r0, r0, r8, ror #1
 8007f20:	200000e8 	andcs	r0, r0, r8, ror #1
 8007f24:	2001868c 	andcs	r8, r1, ip, lsl #13

08007f28 <ADC0_1_IRQHandler>:
 8007f28:	e7fe      	b.n	8007f28 <ADC0_1_IRQHandler>

08007f2a <memcpy>:
 8007f2a:	b510      	push	{r4, lr}
 8007f2c:	1e43      	subs	r3, r0, #1
 8007f2e:	440a      	add	r2, r1
 8007f30:	4291      	cmp	r1, r2
 8007f32:	d004      	beq.n	8007f3e <memcpy+0x14>
 8007f34:	f811 4b01 	ldrb.w	r4, [r1], #1
 8007f38:	f803 4f01 	strb.w	r4, [r3, #1]!
 8007f3c:	e7f8      	b.n	8007f30 <memcpy+0x6>
 8007f3e:	bd10      	pop	{r4, pc}

08007f40 <DisplayHandler::~DisplayHandler()>:
 8007f40:	4770      	bx	lr

08007f42 <DisplayUdfHandler::~DisplayUdfHandler()>:
 8007f42:	4770      	bx	lr

08007f44 <DisplayUdfHandler::ShowLongName(char const*)>:
 8007f44:	4770      	bx	lr

08007f46 <ArtNetReboot::~ArtNetReboot()>:
 8007f46:	4770      	bx	lr

08007f48 <PixelDmxStartStop::~PixelDmxStartStop()>:
 8007f48:	4770      	bx	lr
	...

08007f4c <PixelDmxStartStop::Start()>:
 8007f4c:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8007f50:	4b01      	ldr	r3, [pc, #4]	; (8007f58 <PixelDmxStartStop::Start()+0xc>)
 8007f52:	f8c3 2c10 	str.w	r2, [r3, #3088]	; 0xc10
 8007f56:	4770      	bx	lr
 8007f58:	40010000 	andmi	r0, r1, r0

08007f5c <PixelDmxStartStop::Stop()>:
 8007f5c:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8007f60:	4b01      	ldr	r3, [pc, #4]	; (8007f68 <PixelDmxStartStop::Stop()+0xc>)
 8007f62:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 8007f66:	4770      	bx	lr
 8007f68:	40010000 	andmi	r0, r1, r0

08007f6c <RDMNetDevice::CopyUID(unsigned char*)>:
 8007f6c:	460b      	mov	r3, r1
 8007f6e:	2206      	movs	r2, #6
 8007f70:	1d01      	adds	r1, r0, #4
 8007f72:	4618      	mov	r0, r3
 8007f74:	f7ff bfd9 	b.w	8007f2a <memcpy>

08007f78 <non-virtual thunk to RDMNetDevice::CopyUID(unsigned char*)>:
 8007f78:	f1a0 00d0 	sub.w	r0, r0, #208	; 0xd0
 8007f7c:	e7f6      	b.n	8007f6c <RDMNetDevice::CopyUID(unsigned char*)>
	...

08007f80 <RDMNetDevice::CopyCID(unsigned char*)>:
 8007f80:	4608      	mov	r0, r1
 8007f82:	2210      	movs	r2, #16
 8007f84:	4901      	ldr	r1, [pc, #4]	; (8007f8c <RDMNetDevice::CopyCID(unsigned char*)+0xc>)
 8007f86:	f7ff bfd0 	b.w	8007f2a <memcpy>
 8007f8a:	bf00      	nop
 8007f8c:	20003263 	andcs	r3, r0, r3, ror #4

08007f90 <non-virtual thunk to RDMNetDevice::CopyCID(unsigned char*)>:
 8007f90:	f1a0 00d0 	sub.w	r0, r0, #208	; 0xd0
 8007f94:	e7f4      	b.n	8007f80 <RDMNetDevice::CopyCID(unsigned char*)>
 8007f96:	bf00      	nop

08007f98 <FactoryDefaults::~FactoryDefaults()>:
 8007f98:	4770      	bx	lr
	...

08007f9c <ArtNetReboot::Run()>:
 8007f9c:	b510      	push	{r4, lr}
 8007f9e:	4c07      	ldr	r4, [pc, #28]	; (8007fbc <ArtNetReboot::Run()+0x20>)
 8007fa0:	6820      	ldr	r0, [r4, #0]
 8007fa2:	f002 fbf7 	bl	800a794 <ArtNetNode::Stop()>
 8007fa6:	6823      	ldr	r3, [r4, #0]
 8007fa8:	6898      	ldr	r0, [r3, #8]
 8007faa:	b128      	cbz	r0, 8007fb8 <ArtNetReboot::Run()+0x1c>
 8007fac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007fb0:	6803      	ldr	r3, [r0, #0]
 8007fb2:	2101      	movs	r1, #1
 8007fb4:	695b      	ldr	r3, [r3, #20]
 8007fb6:	4718      	bx	r3
 8007fb8:	bd10      	pop	{r4, pc}
 8007fba:	bf00      	nop
 8007fbc:	2000313c 	andcs	r3, r0, ip, lsr r1

08007fc0 <ArtNetReboot::~ArtNetReboot()>:
 8007fc0:	b510      	push	{r4, lr}
 8007fc2:	4604      	mov	r4, r0
 8007fc4:	f00d fddc 	bl	8015b80 <operator delete(void*)>
 8007fc8:	4620      	mov	r0, r4
 8007fca:	bd10      	pop	{r4, pc}

08007fcc <DisplayHandler::~DisplayHandler()>:
 8007fcc:	b510      	push	{r4, lr}
 8007fce:	4604      	mov	r4, r0
 8007fd0:	f00d fdd6 	bl	8015b80 <operator delete(void*)>
 8007fd4:	4620      	mov	r0, r4
 8007fd6:	bd10      	pop	{r4, pc}

08007fd8 <DisplayUdfHandler::~DisplayUdfHandler()>:
 8007fd8:	b510      	push	{r4, lr}
 8007fda:	4604      	mov	r4, r0
 8007fdc:	f00d fdd0 	bl	8015b80 <operator delete(void*)>
 8007fe0:	4620      	mov	r0, r4
 8007fe2:	bd10      	pop	{r4, pc}

08007fe4 <PixelDmxStartStop::~PixelDmxStartStop()>:
 8007fe4:	b510      	push	{r4, lr}
 8007fe6:	4604      	mov	r4, r0
 8007fe8:	f00d fdca 	bl	8015b80 <operator delete(void*)>
 8007fec:	4620      	mov	r0, r4
 8007fee:	bd10      	pop	{r4, pc}

08007ff0 <FactoryDefaults::~FactoryDefaults()>:
 8007ff0:	b510      	push	{r4, lr}
 8007ff2:	4604      	mov	r4, r0
 8007ff4:	f00d fdc4 	bl	8015b80 <operator delete(void*)>
 8007ff8:	4620      	mov	r0, r4
 8007ffa:	bd10      	pop	{r4, pc}

08007ffc <DisplayUdfHandler::ShowPortProtocol(unsigned int, artnet::PortProtocol)>:
 8007ffc:	4b02      	ldr	r3, [pc, #8]	; (8008008 <DisplayUdfHandler::ShowPortProtocol(unsigned int, artnet::PortProtocol)+0xc>)
 8007ffe:	6819      	ldr	r1, [r3, #0]
 8008000:	4b02      	ldr	r3, [pc, #8]	; (800800c <DisplayUdfHandler::ShowPortProtocol(unsigned int, artnet::PortProtocol)+0x10>)
 8008002:	6818      	ldr	r0, [r3, #0]
 8008004:	f00c bc9e 	b.w	8014944 <DisplayUdf::ShowUniverse(ArtNetNode*)>
 8008008:	2000313c 	andcs	r3, r0, ip, lsr r1
 800800c:	20013cec 	andcs	r3, r1, ip, ror #25

08008010 <DisplayUdfHandler::ShowMergeMode(unsigned int, lightset::MergeMode)>:
 8008010:	4b02      	ldr	r3, [pc, #8]	; (800801c <DisplayUdfHandler::ShowMergeMode(unsigned int, lightset::MergeMode)+0xc>)
 8008012:	6819      	ldr	r1, [r3, #0]
 8008014:	4b02      	ldr	r3, [pc, #8]	; (8008020 <DisplayUdfHandler::ShowMergeMode(unsigned int, lightset::MergeMode)+0x10>)
 8008016:	6818      	ldr	r0, [r3, #0]
 8008018:	f00c bc94 	b.w	8014944 <DisplayUdf::ShowUniverse(ArtNetNode*)>
 800801c:	2000313c 	andcs	r3, r0, ip, lsr r1
 8008020:	20013cec 	andcs	r3, r1, ip, ror #25

08008024 <DisplayUdfHandler::ShowSubnetSwitch(unsigned char)>:
 8008024:	4b02      	ldr	r3, [pc, #8]	; (8008030 <DisplayUdfHandler::ShowSubnetSwitch(unsigned char)+0xc>)
 8008026:	6819      	ldr	r1, [r3, #0]
 8008028:	4b02      	ldr	r3, [pc, #8]	; (8008034 <DisplayUdfHandler::ShowSubnetSwitch(unsigned char)+0x10>)
 800802a:	6818      	ldr	r0, [r3, #0]
 800802c:	f00c bc8a 	b.w	8014944 <DisplayUdf::ShowUniverse(ArtNetNode*)>
 8008030:	2000313c 	andcs	r3, r0, ip, lsr r1
 8008034:	20013cec 	andcs	r3, r1, ip, ror #25

08008038 <DisplayUdfHandler::ShowNetSwitch(unsigned char)>:
 8008038:	4b02      	ldr	r3, [pc, #8]	; (8008044 <DisplayUdfHandler::ShowNetSwitch(unsigned char)+0xc>)
 800803a:	6819      	ldr	r1, [r3, #0]
 800803c:	4b02      	ldr	r3, [pc, #8]	; (8008048 <DisplayUdfHandler::ShowNetSwitch(unsigned char)+0x10>)
 800803e:	6818      	ldr	r0, [r3, #0]
 8008040:	f00c bc80 	b.w	8014944 <DisplayUdf::ShowUniverse(ArtNetNode*)>
 8008044:	2000313c 	andcs	r3, r0, ip, lsr r1
 8008048:	20013cec 	andcs	r3, r1, ip, ror #25

0800804c <DisplayUdfHandler::ShowUniverseSwitch(unsigned int, unsigned char)>:
 800804c:	4b02      	ldr	r3, [pc, #8]	; (8008058 <DisplayUdfHandler::ShowUniverseSwitch(unsigned int, unsigned char)+0xc>)
 800804e:	6819      	ldr	r1, [r3, #0]
 8008050:	4b02      	ldr	r3, [pc, #8]	; (800805c <DisplayUdfHandler::ShowUniverseSwitch(unsigned int, unsigned char)+0x10>)
 8008052:	6818      	ldr	r0, [r3, #0]
 8008054:	f00c bc76 	b.w	8014944 <DisplayUdf::ShowUniverse(ArtNetNode*)>
 8008058:	2000313c 	andcs	r3, r0, ip, lsr r1
 800805c:	20013cec 	andcs	r3, r1, ip, ror #25

08008060 <DisplayUdfHandler::ShowShortName(char const*)>:
 8008060:	4b02      	ldr	r3, [pc, #8]	; (800806c <DisplayUdfHandler::ShowShortName(char const*)+0xc>)
 8008062:	6819      	ldr	r1, [r3, #0]
 8008064:	4b02      	ldr	r3, [pc, #8]	; (8008070 <DisplayUdfHandler::ShowShortName(char const*)+0x10>)
 8008066:	6818      	ldr	r0, [r3, #0]
 8008068:	f00c bc49 	b.w	80148fe <DisplayUdf::ShowNodeName(ArtNetNode*)>
 800806c:	2000313c 	andcs	r3, r0, ip, lsr r1
 8008070:	20013cec 	andcs	r3, r1, ip, ror #25

08008074 <RDMNetDevice::LLRPHandleRdmCommand(unsigned char const*)>:
 8008074:	b510      	push	{r4, lr}
 8008076:	4c03      	ldr	r4, [pc, #12]	; (8008084 <RDMNetDevice::LLRPHandleRdmCommand(unsigned char const*)+0x10>)
 8008078:	30d4      	adds	r0, #212	; 0xd4
 800807a:	4622      	mov	r2, r4
 800807c:	f006 fc0e 	bl	800e89c <RDMHandler::HandleData(unsigned char const*, unsigned char*)>
 8008080:	4620      	mov	r0, r4
 8008082:	bd10      	pop	{r4, pc}
 8008084:	20003164 	andcs	r3, r0, r4, ror #2

08008088 <non-virtual thunk to RDMNetDevice::LLRPHandleRdmCommand(unsigned char const*)>:
 8008088:	f1a0 00d0 	sub.w	r0, r0, #208	; 0xd0
 800808c:	e7f2      	b.n	8008074 <RDMNetDevice::LLRPHandleRdmCommand(unsigned char const*)>
 800808e:	bf00      	nop

08008090 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>:
 8008090:	b110      	cbz	r0, 8008098 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]+0x8>
 8008092:	6803      	ldr	r3, [r0, #0]
 8008094:	6a1b      	ldr	r3, [r3, #32]
 8008096:	4718      	bx	r3
 8008098:	4770      	bx	lr

0800809a <Display::PutChar(int) [clone .isra.0]>:
 800809a:	b110      	cbz	r0, 80080a2 <Display::PutChar(int) [clone .isra.0]+0x8>
 800809c:	6803      	ldr	r3, [r0, #0]
 800809e:	695b      	ldr	r3, [r3, #20]
 80080a0:	4718      	bx	r3
 80080a2:	4770      	bx	lr

080080a4 <DisplayHandler::Print(unsigned int)>:
 80080a4:	b538      	push	{r3, r4, r5, lr}
 80080a6:	7903      	ldrb	r3, [r0, #4]
 80080a8:	b1f3      	cbz	r3, 80080e8 <DisplayHandler::Print(unsigned int)+0x44>
 80080aa:	2904      	cmp	r1, #4
 80080ac:	bf98      	it	ls
 80080ae:	4b0f      	ldrls	r3, [pc, #60]	; (80080ec <DisplayHandler::Print(unsigned int)+0x48>)
 80080b0:	4d0f      	ldr	r5, [pc, #60]	; (80080f0 <DisplayHandler::Print(unsigned int)+0x4c>)
 80080b2:	bf98      	it	ls
 80080b4:	5c5c      	ldrbls	r4, [r3, r1]
 80080b6:	682b      	ldr	r3, [r5, #0]
 80080b8:	bf88      	it	hi
 80080ba:	2455      	movhi	r4, #85	; 0x55
 80080bc:	6998      	ldr	r0, [r3, #24]
 80080be:	b178      	cbz	r0, 80080e0 <DisplayHandler::Print(unsigned int)+0x3c>
 80080c0:	7901      	ldrb	r1, [r0, #4]
 80080c2:	3901      	subs	r1, #1
 80080c4:	b2c9      	uxtb	r1, r1
 80080c6:	b168      	cbz	r0, 80080e4 <DisplayHandler::Print(unsigned int)+0x40>
 80080c8:	7942      	ldrb	r2, [r0, #5]
 80080ca:	3a01      	subs	r2, #1
 80080cc:	b2d2      	uxtb	r2, r2
 80080ce:	f7ff ffdf 	bl	8008090 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 80080d2:	682b      	ldr	r3, [r5, #0]
 80080d4:	4621      	mov	r1, r4
 80080d6:	6998      	ldr	r0, [r3, #24]
 80080d8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80080dc:	f7ff bfdd 	b.w	800809a <Display::PutChar(int) [clone .isra.0]>
 80080e0:	4601      	mov	r1, r0
 80080e2:	e7ee      	b.n	80080c2 <DisplayHandler::Print(unsigned int)+0x1e>
 80080e4:	4602      	mov	r2, r0
 80080e6:	e7f0      	b.n	80080ca <DisplayHandler::Print(unsigned int)+0x26>
 80080e8:	bd38      	pop	{r3, r4, r5, pc}
 80080ea:	bf00      	nop
 80080ec:	08018098 	stmdaeq	r1, {r3, r4, r7, pc}
 80080f0:	20013cf4 	strdcs	r3, [r1], -r4

080080f4 <RDMNetDevice::~RDMNetDevice()>:
 80080f4:	b510      	push	{r4, lr}
 80080f6:	4604      	mov	r4, r0
 80080f8:	4b05      	ldr	r3, [pc, #20]	; (8008110 <RDMNetDevice::~RDMNetDevice()+0x1c>)
 80080fa:	f840 3b8c 	str.w	r3, [r0], #140
 80080fe:	f005 fe69 	bl	800ddd4 <RDMSubDevices::~RDMSubDevices()>
 8008102:	f104 0084 	add.w	r0, r4, #132	; 0x84
 8008106:	f005 fe45 	bl	800dd94 <RDMSensors::~RDMSensors()>
 800810a:	4620      	mov	r0, r4
 800810c:	bd10      	pop	{r4, pc}
 800810e:	bf00      	nop
 8008110:	080196ac 	stmdaeq	r1, {r2, r3, r5, r7, r9, sl, ip, pc}

08008114 <non-virtual thunk to RDMNetDevice::~RDMNetDevice()>:
 8008114:	f1a0 00d0 	sub.w	r0, r0, #208	; 0xd0
 8008118:	e7ec      	b.n	80080f4 <RDMNetDevice::~RDMNetDevice()>
 800811a:	bf00      	nop

0800811c <RDMNetDevice::~RDMNetDevice()>:
 800811c:	b510      	push	{r4, lr}
 800811e:	4604      	mov	r4, r0
 8008120:	f7ff ffe8 	bl	80080f4 <RDMNetDevice::~RDMNetDevice()>
 8008124:	4620      	mov	r0, r4
 8008126:	f00d fd2b 	bl	8015b80 <operator delete(void*)>
 800812a:	4620      	mov	r0, r4
 800812c:	bd10      	pop	{r4, pc}

0800812e <non-virtual thunk to RDMNetDevice::~RDMNetDevice()>:
 800812e:	f1a0 00d0 	sub.w	r0, r0, #208	; 0xd0
 8008132:	e7f3      	b.n	800811c <RDMNetDevice::~RDMNetDevice()>

08008134 <StoreNetwork::SaveDhcp(bool)>:
 8008134:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8008136:	2301      	movs	r3, #1
 8008138:	f88d 1017 	strb.w	r1, [sp, #23]
 800813c:	2100      	movs	r1, #0
 800813e:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8008142:	4805      	ldr	r0, [pc, #20]	; (8008158 <StoreNetwork::SaveDhcp(bool)+0x24>)
 8008144:	9300      	str	r3, [sp, #0]
 8008146:	2214      	movs	r2, #20
 8008148:	6800      	ldr	r0, [r0, #0]
 800814a:	f10d 0317 	add.w	r3, sp, #23
 800814e:	f008 fc67 	bl	8010a20 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8008152:	b007      	add	sp, #28
 8008154:	f85d fb04 	ldr.w	pc, [sp], #4
 8008158:	2000bdb8 			; <UNDEFINED> instruction: 0x2000bdb8

0800815c <non-virtual thunk to StoreNetwork::SaveDhcp(bool)>:
 800815c:	f1a0 0004 	sub.w	r0, r0, #4
 8008160:	e7e8      	b.n	8008134 <StoreNetwork::SaveDhcp(bool)>
 8008162:	bf00      	nop

08008164 <FactoryDefaults::Set()>:
 8008164:	b508      	push	{r3, lr}
 8008166:	4b08      	ldr	r3, [pc, #32]	; (8008188 <FactoryDefaults::Set()+0x24>)
 8008168:	2100      	movs	r1, #0
 800816a:	6818      	ldr	r0, [r3, #0]
 800816c:	f001 f8f4 	bl	8009358 <RemoteConfig::SetDisable(bool)>
 8008170:	4b06      	ldr	r3, [pc, #24]	; (800818c <FactoryDefaults::Set()+0x28>)
 8008172:	210b      	movs	r1, #11
 8008174:	6818      	ldr	r0, [r3, #0]
 8008176:	f008 fc41 	bl	80109fc <SpiFlashStore::ResetSetList(spiflashstore::Store)>
 800817a:	4b05      	ldr	r3, [pc, #20]	; (8008190 <FactoryDefaults::Set()+0x2c>)
 800817c:	2101      	movs	r1, #1
 800817e:	6818      	ldr	r0, [r3, #0]
 8008180:	f7ff ffd8 	bl	8008134 <StoreNetwork::SaveDhcp(bool)>
 8008184:	bd08      	pop	{r3, pc}
 8008186:	bf00      	nop
 8008188:	20000114 	andcs	r0, r0, r4, lsl r1
 800818c:	2000bdb8 			; <UNDEFINED> instruction: 0x2000bdb8
 8008190:	2000bdc8 	andcs	fp, r0, r8, asr #27

08008194 <Display::Printf(unsigned char, char const*, ...)>:
 8008194:	b40c      	push	{r2, r3}
 8008196:	b570      	push	{r4, r5, r6, lr}
 8008198:	6984      	ldr	r4, [r0, #24]
 800819a:	4605      	mov	r5, r0
 800819c:	460e      	mov	r6, r1
 800819e:	b08a      	sub	sp, #40	; 0x28
 80081a0:	b174      	cbz	r4, 80081c0 <Display::Printf(unsigned char, char const*, ...)+0x2c>
 80081a2:	ab0f      	add	r3, sp, #60	; 0x3c
 80081a4:	2120      	movs	r1, #32
 80081a6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80081a8:	a802      	add	r0, sp, #8
 80081aa:	9301      	str	r3, [sp, #4]
 80081ac:	f000 ff38 	bl	8009020 <vsnprintf>
 80081b0:	4604      	mov	r4, r0
 80081b2:	69a8      	ldr	r0, [r5, #24]
 80081b4:	4631      	mov	r1, r6
 80081b6:	6803      	ldr	r3, [r0, #0]
 80081b8:	aa02      	add	r2, sp, #8
 80081ba:	69dd      	ldr	r5, [r3, #28]
 80081bc:	b2a3      	uxth	r3, r4
 80081be:	47a8      	blx	r5
 80081c0:	4620      	mov	r0, r4
 80081c2:	b00a      	add	sp, #40	; 0x28
 80081c4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80081c8:	b002      	add	sp, #8
 80081ca:	4770      	bx	lr

080081cc <Display::TextStatus(char const*)>:
 80081cc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80081d0:	4604      	mov	r4, r0
 80081d2:	6980      	ldr	r0, [r0, #24]
 80081d4:	460d      	mov	r5, r1
 80081d6:	b360      	cbz	r0, 8008232 <Display::TextStatus(char const*)+0x66>
 80081d8:	7947      	ldrb	r7, [r0, #5]
 80081da:	2100      	movs	r1, #0
 80081dc:	1e7e      	subs	r6, r7, #1
 80081de:	b2f6      	uxtb	r6, r6
 80081e0:	4632      	mov	r2, r6
 80081e2:	f890 9004 	ldrb.w	r9, [r0, #4]
 80081e6:	f04f 0800 	mov.w	r8, #0
 80081ea:	f7ff ff51 	bl	8008090 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 80081ee:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 80081f2:	45c1      	cmp	r9, r8
 80081f4:	69a0      	ldr	r0, [r4, #24]
 80081f6:	d905      	bls.n	8008204 <Display::TextStatus(char const*)+0x38>
 80081f8:	2120      	movs	r1, #32
 80081fa:	f7ff ff4e 	bl	800809a <Display::PutChar(int) [clone .isra.0]>
 80081fe:	f108 0801 	add.w	r8, r8, #1
 8008202:	e7f6      	b.n	80081f2 <Display::TextStatus(char const*)+0x26>
 8008204:	4632      	mov	r2, r6
 8008206:	2100      	movs	r1, #0
 8008208:	f7ff ff42 	bl	8008090 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 800820c:	69a0      	ldr	r0, [r4, #24]
 800820e:	b180      	cbz	r0, 8008232 <Display::TextStatus(char const*)+0x66>
 8008210:	2300      	movs	r3, #0
 8008212:	7901      	ldrb	r1, [r0, #4]
 8008214:	5cea      	ldrb	r2, [r5, r3]
 8008216:	b11a      	cbz	r2, 8008220 <Display::TextStatus(char const*)+0x54>
 8008218:	1c5a      	adds	r2, r3, #1
 800821a:	4299      	cmp	r1, r3
 800821c:	4613      	mov	r3, r2
 800821e:	dcf9      	bgt.n	8008214 <Display::TextStatus(char const*)+0x48>
 8008220:	6802      	ldr	r2, [r0, #0]
 8008222:	4639      	mov	r1, r7
 8008224:	69d4      	ldr	r4, [r2, #28]
 8008226:	b2db      	uxtb	r3, r3
 8008228:	462a      	mov	r2, r5
 800822a:	46a4      	mov	ip, r4
 800822c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008230:	4760      	bx	ip
 8008232:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08008236 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>:
 8008236:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008238:	4605      	mov	r5, r0
 800823a:	461e      	mov	r6, r3
 800823c:	460f      	mov	r7, r1
 800823e:	4614      	mov	r4, r2
 8008240:	f7ff ffc4 	bl	80081cc <Display::TextStatus(char const*)>
 8008244:	7c6b      	ldrb	r3, [r5, #17]
 8008246:	b19b      	cbz	r3, 8008270 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x3a>
 8008248:	43e2      	mvns	r2, r4
 800824a:	2312      	movs	r3, #18
 800824c:	7a28      	ldrb	r0, [r5, #8]
 800824e:	f88d 3004 	strb.w	r3, [sp, #4]
 8008252:	f3c2 2307 	ubfx	r3, r2, #8, #8
 8008256:	f88d 3005 	strb.w	r3, [sp, #5]
 800825a:	f88d 2006 	strb.w	r2, [sp, #6]
 800825e:	f00e fe37 	bl	8016ed0 <gd32_i2c_set_address(unsigned char)>
 8008262:	68e8      	ldr	r0, [r5, #12]
 8008264:	f00e fe2c 	bl	8016ec0 <gd32_i2c_set_baudrate(unsigned int)>
 8008268:	2103      	movs	r1, #3
 800826a:	a801      	add	r0, sp, #4
 800826c:	f00e fe36 	bl	8016edc <gd32_i2c_write(char const*, unsigned int)>
 8008270:	1c73      	adds	r3, r6, #1
 8008272:	d006      	beq.n	8008282 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x4c>
 8008274:	4639      	mov	r1, r7
 8008276:	4630      	mov	r0, r6
 8008278:	b003      	add	sp, #12
 800827a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800827e:	f00d ba85 	b.w	801578c <console_status>
 8008282:	b003      	add	sp, #12
 8008284:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08008288 <main>:
 8008288:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800828c:	2701      	movs	r7, #1
 800828e:	f5ad 5dd3 	sub.w	sp, sp, #6752	; 0x1a60
 8008292:	b083      	sub	sp, #12
 8008294:	a811      	add	r0, sp, #68	; 0x44
 8008296:	f00d fb81 	bl	801599c <Hardware::Hardware()>
 800829a:	a8ad      	add	r0, sp, #692	; 0x2b4
 800829c:	f00a fc1a 	bl	8012ad4 <Network::Network()>
 80082a0:	a81b      	add	r0, sp, #108	; 0x6c
 80082a2:	f00d fb33 	bl	801590c <LedBlink::LedBlink()>
 80082a6:	a874      	add	r0, sp, #464	; 0x1d0
 80082a8:	f00c f804 	bl	80142b4 <DisplayUdf::DisplayUdf()>
 80082ac:	4ab8      	ldr	r2, [pc, #736]	; (8008590 <main+0x308>)
 80082ae:	4bb9      	ldr	r3, [pc, #740]	; (8008594 <main+0x30c>)
 80082b0:	49b9      	ldr	r1, [pc, #740]	; (8008598 <main+0x310>)
 80082b2:	a809      	add	r0, sp, #36	; 0x24
 80082b4:	f00d fa82 	bl	80157bc <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>
 80082b8:	a80a      	add	r0, sp, #40	; 0x28
 80082ba:	f008 ffc5 	bl	8011248 <FlashRom::FlashRom()>
 80082be:	a80b      	add	r0, sp, #44	; 0x2c
 80082c0:	f008 fb76 	bl	80109b0 <SpiFlashStore::SpiFlashStore()>
 80082c4:	49b5      	ldr	r1, [pc, #724]	; (800859c <main+0x314>)
 80082c6:	a809      	add	r0, sp, #36	; 0x24
 80082c8:	f00d fab0 	bl	801582c <FirmwareVersion::Print(char const*)>
 80082cc:	4bb4      	ldr	r3, [pc, #720]	; (80085a0 <main+0x318>)
 80082ce:	2004      	movs	r0, #4
 80082d0:	611f      	str	r7, [r3, #16]
 80082d2:	f00d fc59 	bl	8015b88 <operator new(unsigned int)>
 80082d6:	4bb3      	ldr	r3, [pc, #716]	; (80085a4 <main+0x31c>)
 80082d8:	f60d 2468 	addw	r4, sp, #2664	; 0xa68
 80082dc:	6003      	str	r3, [r0, #0]
 80082de:	f6a4 2324 	subw	r3, r4, #2596	; 0xa24
 80082e2:	6018      	str	r0, [r3, #0]
 80082e4:	2008      	movs	r0, #8
 80082e6:	f00d fc4f 	bl	8015b88 <operator new(unsigned int)>
 80082ea:	4baf      	ldr	r3, [pc, #700]	; (80085a8 <main+0x320>)
 80082ec:	2600      	movs	r6, #0
 80082ee:	6003      	str	r3, [r0, #0]
 80082f0:	4bae      	ldr	r3, [pc, #696]	; (80085ac <main+0x324>)
 80082f2:	f44f 62c0 	mov.w	r2, #1536	; 0x600
 80082f6:	681b      	ldr	r3, [r3, #0]
 80082f8:	49ad      	ldr	r1, [pc, #692]	; (80085b0 <main+0x328>)
 80082fa:	3b00      	subs	r3, #0
 80082fc:	bf18      	it	ne
 80082fe:	2301      	movne	r3, #1
 8008300:	7103      	strb	r3, [r0, #4]
 8008302:	f6a4 13fc 	subw	r3, r4, #2556	; 0x9fc
 8008306:	60d8      	str	r0, [r3, #12]
 8008308:	2303      	movs	r3, #3
 800830a:	a874      	add	r0, sp, #464	; 0x1d0
 800830c:	f7ff ff93 	bl	8008236 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008310:	a813      	add	r0, sp, #76	; 0x4c
 8008312:	f008 fe1d 	bl	8010f50 <StoreNetwork::StoreNetwork()>
 8008316:	ad1a      	add	r5, sp, #104	; 0x68
 8008318:	f2a4 73b4 	subw	r3, r4, #1972	; 0x7b4
 800831c:	4618      	mov	r0, r3
 800831e:	f1a5 0218 	sub.w	r2, r5, #24
 8008322:	a913      	add	r1, sp, #76	; 0x4c
 8008324:	f8c3 20b4 	str.w	r2, [r3, #180]	; 0xb4
 8008328:	f00a fc2c 	bl	8012b84 <Network::Init(NetworkParamsStore*)>
 800832c:	a8ad      	add	r0, sp, #692	; 0x2b4
 800832e:	f00a fecd 	bl	80130cc <Network::Print()>
 8008332:	a80c      	add	r0, sp, #48	; 0x30
 8008334:	f00a f808 	bl	8012348 <MDNS::MDNS()>
 8008338:	a80c      	add	r0, sp, #48	; 0x30
 800833a:	f00a f8c9 	bl	80124d0 <MDNS::Start()>
 800833e:	4631      	mov	r1, r6
 8008340:	2345      	movs	r3, #69	; 0x45
 8008342:	e9cd 6600 	strd	r6, r6, [sp]
 8008346:	4a9b      	ldr	r2, [pc, #620]	; (80085b4 <main+0x32c>)
 8008348:	a80c      	add	r0, sp, #48	; 0x30
 800834a:	f00a fa2d 	bl	80127a8 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 800834e:	4b9a      	ldr	r3, [pc, #616]	; (80085b8 <main+0x330>)
 8008350:	4631      	mov	r1, r6
 8008352:	e9cd 7300 	strd	r7, r3, [sp]
 8008356:	4a99      	ldr	r2, [pc, #612]	; (80085bc <main+0x334>)
 8008358:	2350      	movs	r3, #80	; 0x50
 800835a:	a80c      	add	r0, sp, #48	; 0x30
 800835c:	f00a fa24 	bl	80127a8 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 8008360:	4f97      	ldr	r7, [pc, #604]	; (80085c0 <main+0x338>)
 8008362:	a80c      	add	r0, sp, #48	; 0x30
 8008364:	f00a fb66 	bl	8012a34 <MDNS::Print()>
 8008368:	ae22      	add	r6, sp, #136	; 0x88
 800836a:	2303      	movs	r3, #3
 800836c:	f44f 42cc 	mov.w	r2, #26112	; 0x6600
 8008370:	4994      	ldr	r1, [pc, #592]	; (80085c4 <main+0x33c>)
 8008372:	a874      	add	r0, sp, #464	; 0x1d0
 8008374:	f7ff ff5f 	bl	8008236 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008378:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800837a:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 800837c:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 8008380:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 8008384:	a815      	add	r0, sp, #84	; 0x54
 8008386:	f008 ff53 	bl	8011230 <StoreWS28xxDmx::StoreWS28xxDmx()>
 800838a:	a915      	add	r1, sp, #84	; 0x54
 800838c:	a84f      	add	r0, sp, #316	; 0x13c
 800838e:	f007 f823 	bl	800f3d8 <WS28xxDmxParams::WS28xxDmxParams(WS28xxDmxParamsStore*)>
 8008392:	a84f      	add	r0, sp, #316	; 0x13c
 8008394:	f007 f85c 	bl	800f450 <WS28xxDmxParams::Load()>
 8008398:	b130      	cbz	r0, 80083a8 <main+0x120>
 800839a:	a84f      	add	r0, sp, #316	; 0x13c
 800839c:	a922      	add	r1, sp, #136	; 0x88
 800839e:	f007 faec 	bl	800f97a <WS28xxDmxParams::Set(PixelDmxConfiguration*)>
 80083a2:	a84f      	add	r0, sp, #316	; 0x13c
 80083a4:	f007 fb27 	bl	800f9f6 <WS28xxDmxParams::Dump()>
 80083a8:	f50d 7acc 	add.w	sl, sp, #408	; 0x198
 80083ac:	a922      	add	r1, sp, #136	; 0x88
 80083ae:	4650      	mov	r0, sl
 80083b0:	f006 ff28 	bl	800f204 <WS28xxDmxMulti::WS28xxDmxMulti(PixelDmxConfiguration&)>
 80083b4:	2004      	movs	r0, #4
 80083b6:	f00d fbe7 	bl	8015b88 <operator new(unsigned int)>
 80083ba:	4b83      	ldr	r3, [pc, #524]	; (80085c8 <main+0x340>)
 80083bc:	4606      	mov	r6, r0
 80083be:	6003      	str	r3, [r0, #0]
 80083c0:	2203      	movs	r2, #3
 80083c2:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80083c6:	2110      	movs	r1, #16
 80083c8:	4880      	ldr	r0, [pc, #512]	; (80085cc <main+0x344>)
 80083ca:	f00d ffdd 	bl	8016388 <gpio_init>
 80083ce:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80083d2:	4b7f      	ldr	r3, [pc, #508]	; (80085d0 <main+0x348>)
 80083d4:	f60d 204c 	addw	r0, sp, #2636	; 0xa4c
 80083d8:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 80083dc:	f5a4 630d 	sub.w	r3, r4, #2256	; 0x8d0
 80083e0:	6a5f      	ldr	r7, [r3, #36]	; 0x24
 80083e2:	62de      	str	r6, [r3, #44]	; 0x2c
 80083e4:	b2f9      	uxtb	r1, r7
 80083e6:	f002 f909 	bl	800a5fc <ArtNet4Node::ArtNet4Node(unsigned char)>
 80083ea:	a817      	add	r0, sp, #92	; 0x5c
 80083ec:	f008 fce4 	bl	8010db8 <StoreArtNet::StoreArtNet()>
 80083f0:	a917      	add	r1, sp, #92	; 0x5c
 80083f2:	a88a      	add	r0, sp, #552	; 0x228
 80083f4:	f003 ff24 	bl	800c240 <ArtNetParams::ArtNetParams(ArtNetParamsStore*)>
 80083f8:	a88a      	add	r0, sp, #552	; 0x228
 80083fa:	f003 ff45 	bl	800c288 <ArtNetParams::Load()>
 80083fe:	b138      	cbz	r0, 8008410 <main+0x188>
 8008400:	a88a      	add	r0, sp, #552	; 0x228
 8008402:	f1a4 0118 	sub.w	r1, r4, #24
 8008406:	f004 faf6 	bl	800c9f6 <ArtNetParams::Set(ArtNetNode*)>
 800840a:	a88a      	add	r0, sp, #552	; 0x228
 800840c:	f004 fb85 	bl	800cb1a <ArtNetParams::Dump()>
 8008410:	2600      	movs	r6, #0
 8008412:	46b1      	mov	r9, r6
 8008414:	4a6f      	ldr	r2, [pc, #444]	; (80085d4 <main+0x34c>)
 8008416:	f6a4 2334 	subw	r3, r4, #2612	; 0xa34
 800841a:	601a      	str	r2, [r3, #0]
 800841c:	ab0d      	add	r3, sp, #52	; 0x34
 800841e:	60e3      	str	r3, [r4, #12]
 8008420:	f1a5 0308 	sub.w	r3, r5, #8
 8008424:	60a3      	str	r3, [r4, #8]
 8008426:	f5a4 630d 	sub.w	r3, r4, #2256	; 0x8d0
 800842a:	f8d3 b01c 	ldr.w	fp, [r3, #28]
 800842e:	f844 ac10 	str.w	sl, [r4, #-16]
 8008432:	f1cb 0304 	rsb	r3, fp, #4
 8008436:	b2db      	uxtb	r3, r3
 8008438:	9307      	str	r3, [sp, #28]
 800843a:	42be      	cmp	r6, r7
 800843c:	d02b      	beq.n	8008496 <main+0x20e>
 800843e:	2e07      	cmp	r6, #7
 8008440:	d826      	bhi.n	8008490 <main+0x208>
 8008442:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8008446:	f6a4 122c 	subw	r2, r4, #2348	; 0x92c
 800844a:	6852      	ldr	r2, [r2, #4]
 800844c:	40b3      	lsls	r3, r6
 800844e:	4393      	bics	r3, r2
 8008450:	d11e      	bne.n	8008490 <main+0x208>
 8008452:	f04f 0800 	mov.w	r8, #0
 8008456:	ab4f      	add	r3, sp, #316	; 0x13c
 8008458:	eb03 0346 	add.w	r3, r3, r6, lsl #1
 800845c:	8b5b      	ldrh	r3, [r3, #26]
 800845e:	9305      	str	r3, [sp, #20]
 8008460:	f1a4 0318 	sub.w	r3, r4, #24
 8008464:	9306      	str	r3, [sp, #24]
 8008466:	fa1f f388 	uxth.w	r3, r8
 800846a:	459b      	cmp	fp, r3
 800846c:	eb09 0108 	add.w	r1, r9, r8
 8008470:	d909      	bls.n	8008486 <main+0x1fe>
 8008472:	9a05      	ldr	r2, [sp, #20]
 8008474:	9806      	ldr	r0, [sp, #24]
 8008476:	4413      	add	r3, r2
 8008478:	b29b      	uxth	r3, r3
 800847a:	2201      	movs	r2, #1
 800847c:	f002 fd0f 	bl	800ae9e <ArtNetNode::SetUniverse(unsigned int, lightset::PortDir, unsigned short)>
 8008480:	f108 0801 	add.w	r8, r8, #1
 8008484:	e7ef      	b.n	8008466 <main+0x1de>
 8008486:	9b07      	ldr	r3, [sp, #28]
 8008488:	eb03 0901 	add.w	r9, r3, r1
 800848c:	3601      	adds	r6, #1
 800848e:	e7d4      	b.n	800843a <main+0x1b2>
 8008490:	f109 0904 	add.w	r9, r9, #4
 8008494:	e7fa      	b.n	800848c <main+0x204>
 8008496:	f6a4 132c 	subw	r3, r4, #2348	; 0x92c
 800849a:	f893 602a 	ldrb.w	r6, [r3, #42]	; 0x2a
 800849e:	2e00      	cmp	r6, #0
 80084a0:	f000 80b0 	beq.w	8008604 <main+0x37c>
 80084a4:	2001      	movs	r0, #1
 80084a6:	f00d fb6f 	bl	8015b88 <operator new(unsigned int)>
 80084aa:	4639      	mov	r1, r7
 80084ac:	4680      	mov	r8, r0
 80084ae:	f007 fbaf 	bl	800fc10 <PixelPatterns::PixelPatterns(unsigned int)>
 80084b2:	4b49      	ldr	r3, [pc, #292]	; (80085d8 <main+0x350>)
 80084b4:	2e05      	cmp	r6, #5
 80084b6:	601e      	str	r6, [r3, #0]
 80084b8:	d935      	bls.n	8008526 <main+0x29e>
 80084ba:	2300      	movs	r3, #0
 80084bc:	f844 3c10 	str.w	r3, [r4, #-16]
 80084c0:	f8df 9118 	ldr.w	r9, [pc, #280]	; 80085dc <main+0x354>
 80084c4:	f8d9 3000 	ldr.w	r3, [r9]
 80084c8:	6818      	ldr	r0, [r3, #0]
 80084ca:	f007 fe11 	bl	80100f0 <PixelType::GetType(pixel::Type)>
 80084ce:	f8d9 3000 	ldr.w	r3, [r9]
 80084d2:	2120      	movs	r1, #32
 80084d4:	685b      	ldr	r3, [r3, #4]
 80084d6:	4a42      	ldr	r2, [pc, #264]	; (80085e0 <main+0x358>)
 80084d8:	e9cd 0300 	strd	r0, r3, [sp]
 80084dc:	463b      	mov	r3, r7
 80084de:	a82a      	add	r0, sp, #168	; 0xa8
 80084e0:	f000 fd86 	bl	8008ff0 <snprintf>
 80084e4:	4a3f      	ldr	r2, [pc, #252]	; (80085e4 <main+0x35c>)
 80084e6:	2120      	movs	r1, #32
 80084e8:	a833      	add	r0, sp, #204	; 0xcc
 80084ea:	f000 fd81 	bl	8008ff0 <snprintf>
 80084ee:	4606      	mov	r6, r0
 80084f0:	202c      	movs	r0, #44	; 0x2c
 80084f2:	f00d fb49 	bl	8015b88 <operator new(unsigned int)>
 80084f6:	2200      	movs	r2, #0
 80084f8:	4603      	mov	r3, r0
 80084fa:	6042      	str	r2, [r0, #4]
 80084fc:	f880 2028 	strb.w	r2, [r0, #40]	; 0x28
 8008500:	f100 0c28 	add.w	ip, r0, #40	; 0x28
 8008504:	f823 2b08 	strh.w	r2, [r3], #8
 8008508:	aa2a      	add	r2, sp, #168	; 0xa8
 800850a:	f812 1b01 	ldrb.w	r1, [r2], #1
 800850e:	2900      	cmp	r1, #0
 8008510:	d07a      	beq.n	8008608 <main+0x380>
 8008512:	459c      	cmp	ip, r3
 8008514:	d078      	beq.n	8008608 <main+0x380>
 8008516:	f803 1b01 	strb.w	r1, [r3], #1
 800851a:	f890 1028 	ldrb.w	r1, [r0, #40]	; 0x28
 800851e:	3101      	adds	r1, #1
 8008520:	f880 1028 	strb.w	r1, [r0, #40]	; 0x28
 8008524:	e7f1      	b.n	800850a <main+0x282>
 8008526:	f04f 0900 	mov.w	r9, #0
 800852a:	1eb3      	subs	r3, r6, #2
 800852c:	464e      	mov	r6, r9
 800852e:	f8df b0b8 	ldr.w	fp, [pc, #184]	; 80085e8 <main+0x360>
 8008532:	9305      	str	r3, [sp, #20]
 8008534:	9b05      	ldr	r3, [sp, #20]
 8008536:	2b03      	cmp	r3, #3
 8008538:	d803      	bhi.n	8008542 <main+0x2ba>
 800853a:	e8df f003 	tbb	[pc, r3]
 800853e:	5720180e 	strpl	r1, [r0, -lr, lsl #16]!
 8008542:	2300      	movs	r3, #0
 8008544:	2264      	movs	r2, #100	; 0x64
 8008546:	4649      	mov	r1, r9
 8008548:	4640      	mov	r0, r8
 800854a:	f007 fb87 	bl	800fc5c <PixelPatterns::RainbowCycle(unsigned int, unsigned int, pixelpatterns::Direction)>
 800854e:	f109 0901 	add.w	r9, r9, #1
 8008552:	f1b9 0f08 	cmp.w	r9, #8
 8008556:	d1ed      	bne.n	8008534 <main+0x2ac>
 8008558:	e7af      	b.n	80084ba <main+0x232>
 800855a:	2364      	movs	r3, #100	; 0x64
 800855c:	2200      	movs	r2, #0
 800855e:	9300      	str	r3, [sp, #0]
 8008560:	4649      	mov	r1, r9
 8008562:	465b      	mov	r3, fp
 8008564:	4640      	mov	r0, r8
 8008566:	9601      	str	r6, [sp, #4]
 8008568:	f007 fb8e 	bl	800fc88 <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>
 800856c:	e7ef      	b.n	800854e <main+0x2c6>
 800856e:	2364      	movs	r3, #100	; 0x64
 8008570:	465a      	mov	r2, fp
 8008572:	4649      	mov	r1, r9
 8008574:	4640      	mov	r0, r8
 8008576:	9600      	str	r6, [sp, #0]
 8008578:	f007 fba2 	bl	800fcc0 <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>
 800857c:	e7e7      	b.n	800854e <main+0x2c6>
 800857e:	2364      	movs	r3, #100	; 0x64
 8008580:	f06f 427f 	mvn.w	r2, #4278190080	; 0xff000000
 8008584:	4649      	mov	r1, r9
 8008586:	4640      	mov	r0, r8
 8008588:	f007 fbb4 	bl	800fcf4 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)>
 800858c:	e7df      	b.n	800854e <main+0x2c6>
 800858e:	bf00      	nop
 8008590:	08017f16 	stmdaeq	r1, {r1, r2, r4, r8, r9, sl, fp, ip, sp, lr}
 8008594:	08017f0d 	stmdaeq	r1, {r0, r2, r3, r8, r9, sl, fp, ip, sp, lr}
 8008598:	0801809d 	stmdaeq	r1, {r0, r2, r3, r4, r7, pc}
 800859c:	08017f22 	stmdaeq	r1, {r1, r5, r8, r9, sl, fp, ip, sp, lr}
 80085a0:	40011000 	andmi	r1, r1, r0
 80085a4:	08018020 	stmdaeq	r1, {r5, pc}
 80085a8:	08017fe0 	stmdaeq	r1, {r5, r6, r7, r8, r9, sl, fp, ip, sp, lr}
 80085ac:	20013cf4 	strdcs	r3, [r1], -r4
 80085b0:	08019e14 	stmdaeq	r1, {r2, r4, r9, sl, fp, ip, pc}
 80085b4:	08017f69 	stmdaeq	r1, {r0, r3, r5, r6, r8, r9, sl, fp, ip, sp, lr}
 80085b8:	08017f77 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, r8, r9, sl, fp, ip, sp, lr}
 80085bc:	08017f70 	stmdaeq	r1, {r4, r5, r6, r8, r9, sl, fp, ip, sp, lr}
 80085c0:	08017ecc 	stmdaeq	r1, {r2, r3, r6, r7, r9, sl, fp, ip, sp, lr}
 80085c4:	08019131 	stmdaeq	r1, {r0, r4, r5, r8, ip, pc}
 80085c8:	08018034 	stmdaeq	r1, {r2, r4, r5, pc}
 80085cc:	40010c00 	andmi	r0, r1, r0, lsl #24
 80085d0:	40010000 	andmi	r0, r1, r0
 80085d4:	08017ff4 	stmdaeq	r1, {r2, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr}
 80085d8:	20003598 	mulcs	r0, r8, r5
 80085dc:	2000ada0 	andcs	sl, r0, r0, lsr #27
 80085e0:	08017f8a 	stmdaeq	r1, {r1, r3, r7, r8, r9, sl, fp, ip, sp, lr}
 80085e4:	08017fa1 	stmdaeq	r1, {r0, r5, r7, r8, r9, sl, fp, ip, sp, lr}
 80085e8:	00646464 	rsbeq	r6, r4, r4, ror #8
 80085ec:	230a      	movs	r3, #10
 80085ee:	2264      	movs	r2, #100	; 0x64
 80085f0:	4649      	mov	r1, r9
 80085f2:	e9cd 3200 	strd	r3, r2, [sp]
 80085f6:	4640      	mov	r0, r8
 80085f8:	465b      	mov	r3, fp
 80085fa:	2200      	movs	r2, #0
 80085fc:	9602      	str	r6, [sp, #8]
 80085fe:	f007 fbad 	bl	800fd5c <PixelPatterns::Fade(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>
 8008602:	e7a4      	b.n	800854e <main+0x2c6>
 8008604:	46b0      	mov	r8, r6
 8008606:	e75b      	b.n	80084c0 <main+0x238>
 8008608:	f5a4 6323 	sub.w	r3, r4, #2608	; 0xa30
 800860c:	2201      	movs	r2, #1
 800860e:	6018      	str	r0, [r3, #0]
 8008610:	a90e      	add	r1, sp, #56	; 0x38
 8008612:	a8df      	add	r0, sp, #892	; 0x37c
 8008614:	f005 fd28 	bl	800e068 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)>
 8008618:	f20d 404c 	addw	r0, sp, #1100	; 0x44c
 800861c:	f005 fa7e 	bl	800db1c <LLRPDevice::LLRPDevice()>
 8008620:	4bb7      	ldr	r3, [pc, #732]	; (8008900 <main+0x678>)
 8008622:	f2a4 6bec 	subw	fp, r4, #1772	; 0x6ec
 8008626:	f8cb 3000 	str.w	r3, [fp]
 800862a:	3324      	adds	r3, #36	; 0x24
 800862c:	2100      	movs	r1, #0
 800862e:	f8cb 30d0 	str.w	r3, [fp, #208]	; 0xd0
 8008632:	f50d 608a 	add.w	r0, sp, #1104	; 0x450
 8008636:	f005 feef 	bl	800e418 <RDMHandler::RDMHandler(bool)>
 800863a:	4bb2      	ldr	r3, [pc, #712]	; (8008904 <main+0x67c>)
 800863c:	49b2      	ldr	r1, [pc, #712]	; (8008908 <main+0x680>)
 800863e:	6818      	ldr	r0, [r3, #0]
 8008640:	f00d f9fe 	bl	8015a40 <Hardware::GetUuid(unsigned char*)>
 8008644:	b2f6      	uxtb	r6, r6
 8008646:	f89b 3056 	ldrb.w	r3, [fp, #86]	; 0x56
 800864a:	2e20      	cmp	r6, #32
 800864c:	bf28      	it	cs
 800864e:	2620      	movcs	r6, #32
 8008650:	2b00      	cmp	r3, #0
 8008652:	f000 8182 	beq.w	800895a <main+0x6d2>
 8008656:	f20d 338a 	addw	r3, sp, #906	; 0x38a
 800865a:	4632      	mov	r2, r6
 800865c:	4618      	mov	r0, r3
 800865e:	a933      	add	r1, sp, #204	; 0xcc
 8008660:	9305      	str	r3, [sp, #20]
 8008662:	f7ff fc62 	bl	8007f2a <memcpy>
 8008666:	f8db 007c 	ldr.w	r0, [fp, #124]	; 0x7c
 800866a:	f88b 602e 	strb.w	r6, [fp, #46]	; 0x2e
 800866e:	b130      	cbz	r0, 800867e <main+0x3f6>
 8008670:	6802      	ldr	r2, [r0, #0]
 8008672:	9b05      	ldr	r3, [sp, #20]
 8008674:	f8d2 b008 	ldr.w	fp, [r2, #8]
 8008678:	4619      	mov	r1, r3
 800867a:	4632      	mov	r2, r6
 800867c:	47d8      	blx	fp
 800867e:	4ba3      	ldr	r3, [pc, #652]	; (800890c <main+0x684>)
 8008680:	f2a4 66ec 	subw	r6, r4, #1772	; 0x6ec
 8008684:	6533      	str	r3, [r6, #80]	; 0x50
 8008686:	2004      	movs	r0, #4
 8008688:	f00d fa7e 	bl	8015b88 <operator new(unsigned int)>
 800868c:	4ba0      	ldr	r3, [pc, #640]	; (8008910 <main+0x688>)
 800868e:	f8c6 00cc 	str.w	r0, [r6, #204]	; 0xcc
 8008692:	aee0      	add	r6, sp, #896	; 0x380
 8008694:	6003      	str	r3, [r0, #0]
 8008696:	2201      	movs	r2, #1
 8008698:	4631      	mov	r1, r6
 800869a:	f1a4 0018 	sub.w	r0, r4, #24
 800869e:	f003 fbf3 	bl	800be88 <ArtNetNode::SetRdmUID(unsigned char const*, bool)>
 80086a2:	a8df      	add	r0, sp, #892	; 0x37c
 80086a4:	f005 fd3e 	bl	800e124 <RDMDeviceResponder::Init()>
 80086a8:	a819      	add	r0, sp, #100	; 0x64
 80086aa:	f008 fcaf 	bl	801100c <StoreRDMDevice::StoreRDMDevice()>
 80086ae:	a919      	add	r1, sp, #100	; 0x64
 80086b0:	a85a      	add	r0, sp, #360	; 0x168
 80086b2:	f005 fc41 	bl	800df38 <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)>
 80086b6:	a85a      	add	r0, sp, #360	; 0x168
 80086b8:	f005 fc50 	bl	800df5c <RDMDeviceParams::Load()>
 80086bc:	b130      	cbz	r0, 80086cc <main+0x444>
 80086be:	a85a      	add	r0, sp, #360	; 0x168
 80086c0:	4631      	mov	r1, r6
 80086c2:	f005 fc56 	bl	800df72 <RDMDeviceParams::Set(RDMDevice*)>
 80086c6:	a85a      	add	r0, sp, #360	; 0x168
 80086c8:	f005 fc88 	bl	800dfdc <RDMDeviceParams::Dump()>
 80086cc:	f2a4 63ec 	subw	r3, r4, #1772	; 0x6ec
 80086d0:	67dd      	str	r5, [r3, #124]	; 0x7c
 80086d2:	a8df      	add	r0, sp, #892	; 0x37c
 80086d4:	f005 fb36 	bl	800dd44 <RDMNetDevice::Print()>
 80086d8:	f60d 204c 	addw	r0, sp, #2636	; 0xa4c
 80086dc:	f001 ffec 	bl	800a6b8 <ArtNet4Node::Print()>
 80086e0:	4650      	mov	r0, sl
 80086e2:	f006 fd55 	bl	800f190 <WS28xxDmxMulti::Print()>
 80086e6:	f8d9 3000 	ldr.w	r3, [r9]
 80086ea:	463a      	mov	r2, r7
 80086ec:	685b      	ldr	r3, [r3, #4]
 80086ee:	4989      	ldr	r1, [pc, #548]	; (8008914 <main+0x68c>)
 80086f0:	a874      	add	r0, sp, #464	; 0x1d0
 80086f2:	f00b fdf5 	bl	80142e0 <DisplayUdf::SetTitle(char const*, ...)>
 80086f6:	2202      	movs	r2, #2
 80086f8:	a874      	add	r0, sp, #464	; 0x1d0
 80086fa:	4611      	mov	r1, r2
 80086fc:	f00b ff46 	bl	801458c <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8008700:	2206      	movs	r2, #6
 8008702:	2103      	movs	r1, #3
 8008704:	a874      	add	r0, sp, #464	; 0x1d0
 8008706:	f00b ff41 	bl	801458c <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 800870a:	2203      	movs	r2, #3
 800870c:	2104      	movs	r1, #4
 800870e:	a874      	add	r0, sp, #464	; 0x1d0
 8008710:	f00b ff3c 	bl	801458c <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8008714:	2207      	movs	r2, #7
 8008716:	2105      	movs	r1, #5
 8008718:	a874      	add	r0, sp, #464	; 0x1d0
 800871a:	f00b ff37 	bl	801458c <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 800871e:	2204      	movs	r2, #4
 8008720:	2106      	movs	r1, #6
 8008722:	a874      	add	r0, sp, #464	; 0x1d0
 8008724:	f00b ff32 	bl	801458c <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8008728:	9822      	ldr	r0, [sp, #136]	; 0x88
 800872a:	f007 fce1 	bl	80100f0 <PixelType::GetType(pixel::Type)>
 800872e:	4605      	mov	r5, r0
 8008730:	9824      	ldr	r0, [sp, #144]	; 0x90
 8008732:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 8008734:	9f28      	ldr	r7, [sp, #160]	; 0xa0
 8008736:	f007 fd33 	bl	80101a0 <PixelType::GetMap(pixel::Map)>
 800873a:	462b      	mov	r3, r5
 800873c:	2107      	movs	r1, #7
 800873e:	4a76      	ldr	r2, [pc, #472]	; (8008918 <main+0x690>)
 8008740:	e9cd 7001 	strd	r7, r0, [sp, #4]
 8008744:	9600      	str	r6, [sp, #0]
 8008746:	a874      	add	r0, sp, #464	; 0x1d0
 8008748:	f7ff fd24 	bl	8008194 <Display::Printf(unsigned char, char const*, ...)>
 800874c:	a80f      	add	r0, sp, #60	; 0x3c
 800874e:	f008 fb6b 	bl	8010e28 <StoreDisplayUdf::StoreDisplayUdf()>
 8008752:	a90f      	add	r1, sp, #60	; 0x3c
 8008754:	a845      	add	r0, sp, #276	; 0x114
 8008756:	f00b ff5b 	bl	8014610 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 800875a:	a845      	add	r0, sp, #276	; 0x114
 800875c:	f00b ff65 	bl	801462a <DisplayUdfParams::Load()>
 8008760:	b130      	cbz	r0, 8008770 <main+0x4e8>
 8008762:	a845      	add	r0, sp, #276	; 0x114
 8008764:	a974      	add	r1, sp, #464	; 0x1d0
 8008766:	f00c f896 	bl	8014896 <DisplayUdfParams::Set(DisplayUdf*)>
 800876a:	a845      	add	r0, sp, #276	; 0x114
 800876c:	f00c f8c6 	bl	80148fc <DisplayUdfParams::Dump()>
 8008770:	f1a4 0118 	sub.w	r1, r4, #24
 8008774:	a874      	add	r0, sp, #464	; 0x1d0
 8008776:	f00c f991 	bl	8014a9c <DisplayUdf::Show(ArtNetNode*)>
 800877a:	2203      	movs	r2, #3
 800877c:	2100      	movs	r1, #0
 800877e:	f894 36ca 	ldrb.w	r3, [r4, #1738]	; 0x6ca
 8008782:	f20d 405c 	addw	r0, sp, #1116	; 0x45c
 8008786:	f000 fd93 	bl	80092b0 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>
 800878a:	ab10      	add	r3, sp, #64	; 0x40
 800878c:	4618      	mov	r0, r3
 800878e:	9305      	str	r3, [sp, #20]
 8008790:	f008 fc72 	bl	8011078 <StoreRemoteConfig::StoreRemoteConfig()>
 8008794:	9905      	ldr	r1, [sp, #20]
 8008796:	a83c      	add	r0, sp, #240	; 0xf0
 8008798:	f001 f86a 	bl	8009870 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 800879c:	a83c      	add	r0, sp, #240	; 0xf0
 800879e:	f001 f871 	bl	8009884 <RemoteConfigParams::Load()>
 80087a2:	b138      	cbz	r0, 80087b4 <main+0x52c>
 80087a4:	a83c      	add	r0, sp, #240	; 0xf0
 80087a6:	f20d 415c 	addw	r1, sp, #1116	; 0x45c
 80087aa:	f001 f992 	bl	8009ad2 <RemoteConfigParams::Set(RemoteConfig*)>
 80087ae:	a83c      	add	r0, sp, #240	; 0xf0
 80087b0:	f001 f9af 	bl	8009b12 <RemoteConfigParams::Dump()>
 80087b4:	a80b      	add	r0, sp, #44	; 0x2c
 80087b6:	f008 f9a7 	bl	8010b08 <SpiFlashStore::Flash()>
 80087ba:	2800      	cmp	r0, #0
 80087bc:	d1fa      	bne.n	80087b4 <main+0x52c>
 80087be:	2303      	movs	r3, #3
 80087c0:	f44f 42fa 	mov.w	r2, #32000	; 0x7d00
 80087c4:	4955      	ldr	r1, [pc, #340]	; (800891c <main+0x694>)
 80087c6:	4d56      	ldr	r5, [pc, #344]	; (8008920 <main+0x698>)
 80087c8:	a874      	add	r0, sp, #464	; 0x1d0
 80087ca:	f7ff fd34 	bl	8008236 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 80087ce:	f60d 204c 	addw	r0, sp, #2636	; 0xa4c
 80087d2:	f001 ff27 	bl	800a624 <ArtNet4Node::Start()>
 80087d6:	f241 51c1 	movw	r1, #5569	; 0x15c1
 80087da:	6828      	ldr	r0, [r5, #0]
 80087dc:	f00a f9aa 	bl	8012b34 <Network::Begin(unsigned short)>
 80087e0:	4b50      	ldr	r3, [pc, #320]	; (8008924 <main+0x69c>)
 80087e2:	4601      	mov	r1, r0
 80087e4:	6018      	str	r0, [r3, #0]
 80087e6:	4b50      	ldr	r3, [pc, #320]	; (8008928 <main+0x6a0>)
 80087e8:	6828      	ldr	r0, [r5, #0]
 80087ea:	681a      	ldr	r2, [r3, #0]
 80087ec:	f00a f9b3 	bl	8012b56 <Network::JoinGroup(int, unsigned int)>
 80087f0:	f248 0280 	movw	r2, #32896	; 0x8080
 80087f4:	2302      	movs	r3, #2
 80087f6:	494d      	ldr	r1, [pc, #308]	; (800892c <main+0x6a4>)
 80087f8:	a874      	add	r0, sp, #464	; 0x1d0
 80087fa:	f7ff fd1c 	bl	8008236 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 80087fe:	2102      	movs	r1, #2
 8008800:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8008804:	f00d fd96 	bl	8016334 <fwdgt_config>
 8008808:	2801      	cmp	r0, #1
 800880a:	bf0c      	ite	eq
 800880c:	2201      	moveq	r2, #1
 800880e:	2200      	movne	r2, #0
 8008810:	f6a4 2324 	subw	r3, r4, #2596	; 0xa24
 8008814:	711a      	strb	r2, [r3, #4]
 8008816:	d101      	bne.n	800881c <main+0x594>
 8008818:	f00d fd7c 	bl	8016314 <fwdgt_enable>
 800881c:	4d44      	ldr	r5, [pc, #272]	; (8008930 <main+0x6a8>)
 800881e:	4e45      	ldr	r6, [pc, #276]	; (8008934 <main+0x6ac>)
 8008820:	4f45      	ldr	r7, [pc, #276]	; (8008938 <main+0x6b0>)
 8008822:	f00d fd7f 	bl	8016324 <fwdgt_counter_reload>
 8008826:	f008 ff55 	bl	80116d4 <net_handle>
 800882a:	f60d 204c 	addw	r0, sp, #2636	; 0xa4c
 800882e:	f001 ff34 	bl	800a69a <ArtNet4Node::Run()>
 8008832:	f20d 405c 	addw	r0, sp, #1116	; 0x45c
 8008836:	f000 fed9 	bl	80095ec <RemoteConfig::Run()>
 800883a:	f20d 404c 	addw	r0, sp, #1100	; 0x44c
 800883e:	f005 fa2b 	bl	800dc98 <LLRPDevice::Run()>
 8008842:	a80b      	add	r0, sp, #44	; 0x2c
 8008844:	f008 f960 	bl	8010b08 <SpiFlashStore::Flash()>
 8008848:	f6a4 12fc 	subw	r2, r4, #2556	; 0x9fc
 800884c:	6910      	ldr	r0, [r2, #16]
 800884e:	b198      	cbz	r0, 8008878 <main+0x5f0>
 8008850:	6831      	ldr	r1, [r6, #0]
 8008852:	6993      	ldr	r3, [r2, #24]
 8008854:	f8d5 c000 	ldr.w	ip, [r5]
 8008858:	1ac9      	subs	r1, r1, r3
 800885a:	4288      	cmp	r0, r1
 800885c:	d80c      	bhi.n	8008878 <main+0x5f0>
 800885e:	6831      	ldr	r1, [r6, #0]
 8008860:	f42c 1360 	bic.w	r3, ip, #3670016	; 0x380000
 8008864:	6191      	str	r1, [r2, #24]
 8008866:	6951      	ldr	r1, [r2, #20]
 8008868:	2901      	cmp	r1, #1
 800886a:	f081 0001 	eor.w	r0, r1, #1
 800886e:	bf08      	it	eq
 8008870:	f483 1360 	eoreq.w	r3, r3, #3670016	; 0x380000
 8008874:	6150      	str	r0, [r2, #20]
 8008876:	602b      	str	r3, [r5, #0]
 8008878:	682b      	ldr	r3, [r5, #0]
 800887a:	683a      	ldr	r2, [r7, #0]
 800887c:	4293      	cmp	r3, r2
 800887e:	d02b      	beq.n	80088d8 <main+0x650>
 8008880:	2110      	movs	r1, #16
 8008882:	482e      	ldr	r0, [pc, #184]	; (800893c <main+0x6b4>)
 8008884:	603b      	str	r3, [r7, #0]
 8008886:	f00d fdd5 	bl	8016434 <gpio_bit_reset>
 800888a:	f3bf 8f6f 	isb	sy
 800888e:	f04f 0a18 	mov.w	sl, #24
 8008892:	f44f 0b00 	mov.w	fp, #8388608	; 0x800000
 8008896:	f8df 90a4 	ldr.w	r9, [pc, #164]	; 800893c <main+0x6b4>
 800889a:	682b      	ldr	r3, [r5, #0]
 800889c:	2104      	movs	r1, #4
 800889e:	ea1b 0f03 	tst.w	fp, r3
 80088a2:	4648      	mov	r0, r9
 80088a4:	d062      	beq.n	800896c <main+0x6e4>
 80088a6:	f00d fdc3 	bl	8016430 <gpio_bit_set>
 80088aa:	f3bf 8f6f 	isb	sy
 80088ae:	2108      	movs	r1, #8
 80088b0:	4648      	mov	r0, r9
 80088b2:	f00d fdbf 	bl	8016434 <gpio_bit_reset>
 80088b6:	f3bf 8f6f 	isb	sy
 80088ba:	2108      	movs	r1, #8
 80088bc:	4648      	mov	r0, r9
 80088be:	f00d fdb7 	bl	8016430 <gpio_bit_set>
 80088c2:	f1ba 0a01 	subs.w	sl, sl, #1
 80088c6:	ea4f 0b5b 	mov.w	fp, fp, lsr #1
 80088ca:	d1e6      	bne.n	800889a <main+0x612>
 80088cc:	2110      	movs	r1, #16
 80088ce:	481b      	ldr	r0, [pc, #108]	; (800893c <main+0x6b4>)
 80088d0:	f00d fdae 	bl	8016430 <gpio_bit_set>
 80088d4:	f3bf 8f6f 	isb	sy
 80088d8:	f6a4 0398 	subw	r3, r4, #2200	; 0x898
 80088dc:	6959      	ldr	r1, [r3, #20]
 80088de:	b379      	cbz	r1, 8008940 <main+0x6b8>
 80088e0:	7c1a      	ldrb	r2, [r3, #16]
 80088e2:	bb6a      	cbnz	r2, 8008940 <main+0x6b8>
 80088e4:	6832      	ldr	r2, [r6, #0]
 80088e6:	6858      	ldr	r0, [r3, #4]
 80088e8:	1a12      	subs	r2, r2, r0
 80088ea:	4291      	cmp	r1, r2
 80088ec:	d228      	bcs.n	8008940 <main+0x6b8>
 80088ee:	6998      	ldr	r0, [r3, #24]
 80088f0:	b330      	cbz	r0, 8008940 <main+0x6b8>
 80088f2:	2101      	movs	r1, #1
 80088f4:	7419      	strb	r1, [r3, #16]
 80088f6:	6803      	ldr	r3, [r0, #0]
 80088f8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80088fa:	4798      	blx	r3
 80088fc:	e020      	b.n	8008940 <main+0x6b8>
 80088fe:	bf00      	nop
 8008900:	0801804c 	stmdaeq	r1, {r2, r3, r6, pc}
 8008904:	20013de4 	andcs	r3, r1, r4, ror #27
 8008908:	20003263 	andcs	r3, r0, r3, ror #4
 800890c:	06010100 	streq	r0, [r1], -r0, lsl #2
 8008910:	0801808c 	stmdaeq	r1, {r2, r3, r7, pc}
 8008914:	08017fb6 	stmdaeq	r1, {r1, r2, r4, r5, r7, r8, r9, sl, fp, ip, sp, lr}
 8008918:	08017fcb 	stmdaeq	r1, {r0, r1, r3, r6, r7, r8, r9, sl, fp, ip, sp, lr}
 800891c:	08019120 	stmdaeq	r1, {r5, r8, ip, pc}
 8008920:	200136bc 			; <UNDEFINED> instruction: 0x200136bc
 8008924:	20000000 	andcs	r0, r0, r0
 8008928:	20003158 	andcs	r3, r0, r8, asr r1
 800892c:	08019145 	stmdaeq	r1, {r0, r2, r6, r8, ip, pc}
 8008930:	20013dec 	andcs	r3, r1, ip, ror #27
 8008934:	20013e04 	andcs	r3, r1, r4, lsl #28
 8008938:	20013de8 	andcs	r3, r1, r8, ror #27
 800893c:	40011800 	andmi	r1, r1, r0, lsl #16
 8008940:	f1b8 0f00 	cmp.w	r8, #0
 8008944:	d005      	beq.n	8008952 <main+0x6ca>
 8008946:	4b0b      	ldr	r3, [pc, #44]	; (8008974 <main+0x6ec>)
 8008948:	681b      	ldr	r3, [r3, #0]
 800894a:	b113      	cbz	r3, 8008952 <main+0x6ca>
 800894c:	4640      	mov	r0, r8
 800894e:	f007 fba3 	bl	8010098 <PixelPatterns::Run()>
 8008952:	a80c      	add	r0, sp, #48	; 0x30
 8008954:	f00a f84a 	bl	80129ec <MDNS::Run()>
 8008958:	e763      	b.n	8008822 <main+0x59a>
 800895a:	4632      	mov	r2, r6
 800895c:	a933      	add	r1, sp, #204	; 0xcc
 800895e:	f20d 30d3 	addw	r0, sp, #979	; 0x3d3
 8008962:	f7ff fae2 	bl	8007f2a <memcpy>
 8008966:	f88b 6077 	strb.w	r6, [fp, #119]	; 0x77
 800896a:	e688      	b.n	800867e <main+0x3f6>
 800896c:	f00d fd62 	bl	8016434 <gpio_bit_reset>
 8008970:	e79b      	b.n	80088aa <main+0x622>
 8008972:	bf00      	nop
 8008974:	20003598 	mulcs	r0, r8, r5

08008978 <RDMSoftwareVersion::GetVersion()>:
 8008978:	4800      	ldr	r0, [pc, #0]	; (800897c <RDMSoftwareVersion::GetVersion()+0x4>)
 800897a:	4770      	bx	lr
 800897c:	080180a1 	stmdaeq	r1, {r0, r5, r7, pc}

08008980 <RDMSoftwareVersion::GetVersionLength()>:
 8008980:	2003      	movs	r0, #3
 8008982:	4770      	bx	lr

08008984 <RDMSoftwareVersion::GetVersionId()>:
 8008984:	4800      	ldr	r0, [pc, #0]	; (8008988 <RDMSoftwareVersion::GetVersionId()+0x4>)
 8008986:	4770      	bx	lr
 8008988:	61f2a253 	mvnsvs	sl, r3, asr r2

0800898c <_itostr>:
 800898c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800898e:	0fc7      	lsrs	r7, r0, #31
 8008990:	b091      	sub	sp, #68	; 0x44
 8008992:	bf18      	it	ne
 8008994:	4240      	negne	r0, r0
 8008996:	f10d 043f 	add.w	r4, sp, #63	; 0x3f
 800899a:	b9c8      	cbnz	r0, 80089d0 <_itostr+0x44>
 800899c:	2330      	movs	r3, #48	; 0x30
 800899e:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 80089a2:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 80089a6:	b132      	cbz	r2, 80089b6 <_itostr+0x2a>
 80089a8:	4668      	mov	r0, sp
 80089aa:	2530      	movs	r5, #48	; 0x30
 80089ac:	1ae6      	subs	r6, r4, r3
 80089ae:	4296      	cmp	r6, r2
 80089b0:	da01      	bge.n	80089b6 <_itostr+0x2a>
 80089b2:	4283      	cmp	r3, r0
 80089b4:	d81c      	bhi.n	80089f0 <_itostr+0x64>
 80089b6:	b117      	cbz	r7, 80089be <_itostr+0x32>
 80089b8:	222d      	movs	r2, #45	; 0x2d
 80089ba:	f803 2901 	strb.w	r2, [r3], #-1
 80089be:	3301      	adds	r3, #1
 80089c0:	1ae0      	subs	r0, r4, r3
 80089c2:	3901      	subs	r1, #1
 80089c4:	aa10      	add	r2, sp, #64	; 0x40
 80089c6:	4293      	cmp	r3, r2
 80089c8:	d315      	bcc.n	80089f6 <_itostr+0x6a>
 80089ca:	3001      	adds	r0, #1
 80089cc:	b011      	add	sp, #68	; 0x44
 80089ce:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80089d0:	4623      	mov	r3, r4
 80089d2:	250a      	movs	r5, #10
 80089d4:	46ec      	mov	ip, sp
 80089d6:	fb90 f6f5 	sdiv	r6, r0, r5
 80089da:	fb05 0016 	mls	r0, r5, r6, r0
 80089de:	3030      	adds	r0, #48	; 0x30
 80089e0:	f803 0901 	strb.w	r0, [r3], #-1
 80089e4:	4630      	mov	r0, r6
 80089e6:	2e00      	cmp	r6, #0
 80089e8:	d0dd      	beq.n	80089a6 <_itostr+0x1a>
 80089ea:	4563      	cmp	r3, ip
 80089ec:	d1f3      	bne.n	80089d6 <_itostr+0x4a>
 80089ee:	e7da      	b.n	80089a6 <_itostr+0x1a>
 80089f0:	f803 5901 	strb.w	r5, [r3], #-1
 80089f4:	e7da      	b.n	80089ac <_itostr+0x20>
 80089f6:	f813 2b01 	ldrb.w	r2, [r3], #1
 80089fa:	f801 2f01 	strb.w	r2, [r1, #1]!
 80089fe:	e7e1      	b.n	80089c4 <_itostr+0x38>

08008a00 <_xputch>:
 8008a00:	4603      	mov	r3, r0
 8008a02:	b410      	push	{r4}
 8008a04:	4c08      	ldr	r4, [pc, #32]	; (8008a28 <_xputch+0x28>)
 8008a06:	68da      	ldr	r2, [r3, #12]
 8008a08:	4608      	mov	r0, r1
 8008a0a:	6821      	ldr	r1, [r4, #0]
 8008a0c:	3201      	adds	r2, #1
 8008a0e:	60da      	str	r2, [r3, #12]
 8008a10:	b139      	cbz	r1, 8008a22 <_xputch+0x22>
 8008a12:	691b      	ldr	r3, [r3, #16]
 8008a14:	429a      	cmp	r2, r3
 8008a16:	da02      	bge.n	8008a1e <_xputch+0x1e>
 8008a18:	1c4b      	adds	r3, r1, #1
 8008a1a:	6023      	str	r3, [r4, #0]
 8008a1c:	7008      	strb	r0, [r1, #0]
 8008a1e:	bc10      	pop	{r4}
 8008a20:	4770      	bx	lr
 8008a22:	bc10      	pop	{r4}
 8008a24:	f00c be70 	b.w	8015708 <console_putc>
 8008a28:	200000e8 	andcs	r0, r0, r8, ror #1

08008a2c <_format_int>:
 8008a2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008a30:	461f      	mov	r7, r3
 8008a32:	b091      	sub	sp, #68	; 0x44
 8008a34:	ea52 0307 	orrs.w	r3, r2, r7
 8008a38:	4680      	mov	r8, r0
 8008a3a:	4616      	mov	r6, r2
 8008a3c:	f10d 053f 	add.w	r5, sp, #63	; 0x3f
 8008a40:	d138      	bne.n	8008ab4 <_format_int+0x88>
 8008a42:	2330      	movs	r3, #48	; 0x30
 8008a44:	f10d 043e 	add.w	r4, sp, #62	; 0x3e
 8008a48:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8008a4c:	f8d8 3000 	ldr.w	r3, [r8]
 8008a50:	07d8      	lsls	r0, r3, #31
 8008a52:	d508      	bpl.n	8008a66 <_format_int+0x3a>
 8008a54:	466a      	mov	r2, sp
 8008a56:	2030      	movs	r0, #48	; 0x30
 8008a58:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8008a5c:	1b2e      	subs	r6, r5, r4
 8008a5e:	428e      	cmp	r6, r1
 8008a60:	da01      	bge.n	8008a66 <_format_int+0x3a>
 8008a62:	4294      	cmp	r4, r2
 8008a64:	d843      	bhi.n	8008aee <_format_int+0xc2>
 8008a66:	0699      	lsls	r1, r3, #26
 8008a68:	d508      	bpl.n	8008a7c <_format_int+0x50>
 8008a6a:	466a      	mov	r2, sp
 8008a6c:	2030      	movs	r0, #48	; 0x30
 8008a6e:	f8d8 1008 	ldr.w	r1, [r8, #8]
 8008a72:	1b2e      	subs	r6, r5, r4
 8008a74:	428e      	cmp	r6, r1
 8008a76:	da01      	bge.n	8008a7c <_format_int+0x50>
 8008a78:	4294      	cmp	r4, r2
 8008a7a:	d83b      	bhi.n	8008af4 <_format_int+0xc8>
 8008a7c:	071a      	lsls	r2, r3, #28
 8008a7e:	bf44      	itt	mi
 8008a80:	222d      	movmi	r2, #45	; 0x2d
 8008a82:	f804 2901 	strbmi.w	r2, [r4], #-1
 8008a86:	065b      	lsls	r3, r3, #25
 8008a88:	d408      	bmi.n	8008a9c <_format_int+0x70>
 8008a8a:	466b      	mov	r3, sp
 8008a8c:	2120      	movs	r1, #32
 8008a8e:	f8d8 2008 	ldr.w	r2, [r8, #8]
 8008a92:	1b28      	subs	r0, r5, r4
 8008a94:	4290      	cmp	r0, r2
 8008a96:	da01      	bge.n	8008a9c <_format_int+0x70>
 8008a98:	429c      	cmp	r4, r3
 8008a9a:	d82e      	bhi.n	8008afa <_format_int+0xce>
 8008a9c:	1b2d      	subs	r5, r5, r4
 8008a9e:	3401      	adds	r4, #1
 8008aa0:	ab10      	add	r3, sp, #64	; 0x40
 8008aa2:	429c      	cmp	r4, r3
 8008aa4:	d32c      	bcc.n	8008b00 <_format_int+0xd4>
 8008aa6:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8008aaa:	42ab      	cmp	r3, r5
 8008aac:	dc2e      	bgt.n	8008b0c <_format_int+0xe0>
 8008aae:	b011      	add	sp, #68	; 0x44
 8008ab0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008ab4:	462c      	mov	r4, r5
 8008ab6:	46eb      	mov	fp, sp
 8008ab8:	4630      	mov	r0, r6
 8008aba:	4639      	mov	r1, r7
 8008abc:	220a      	movs	r2, #10
 8008abe:	2300      	movs	r3, #0
 8008ac0:	f7fe fd6c 	bl	800759c <__aeabi_uldivmod>
 8008ac4:	46b2      	mov	sl, r6
 8008ac6:	3230      	adds	r2, #48	; 0x30
 8008ac8:	46b9      	mov	r9, r7
 8008aca:	2300      	movs	r3, #0
 8008acc:	4630      	mov	r0, r6
 8008ace:	4639      	mov	r1, r7
 8008ad0:	f804 2901 	strb.w	r2, [r4], #-1
 8008ad4:	220a      	movs	r2, #10
 8008ad6:	f7fe fd61 	bl	800759c <__aeabi_uldivmod>
 8008ada:	f1ba 0f0a 	cmp.w	sl, #10
 8008ade:	f179 0300 	sbcs.w	r3, r9, #0
 8008ae2:	4606      	mov	r6, r0
 8008ae4:	460f      	mov	r7, r1
 8008ae6:	d3b1      	bcc.n	8008a4c <_format_int+0x20>
 8008ae8:	455c      	cmp	r4, fp
 8008aea:	d1e5      	bne.n	8008ab8 <_format_int+0x8c>
 8008aec:	e7ae      	b.n	8008a4c <_format_int+0x20>
 8008aee:	f804 0901 	strb.w	r0, [r4], #-1
 8008af2:	e7b3      	b.n	8008a5c <_format_int+0x30>
 8008af4:	f804 0901 	strb.w	r0, [r4], #-1
 8008af8:	e7bb      	b.n	8008a72 <_format_int+0x46>
 8008afa:	f804 1901 	strb.w	r1, [r4], #-1
 8008afe:	e7c8      	b.n	8008a92 <_format_int+0x66>
 8008b00:	4640      	mov	r0, r8
 8008b02:	f814 1b01 	ldrb.w	r1, [r4], #1
 8008b06:	f7ff ff7b 	bl	8008a00 <_xputch>
 8008b0a:	e7c9      	b.n	8008aa0 <_format_int+0x74>
 8008b0c:	2120      	movs	r1, #32
 8008b0e:	4640      	mov	r0, r8
 8008b10:	f7ff ff76 	bl	8008a00 <_xputch>
 8008b14:	3501      	adds	r5, #1
 8008b16:	e7c6      	b.n	8008aa6 <_format_int+0x7a>

08008b18 <_format_hex>:
 8008b18:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008b1a:	b091      	sub	sp, #68	; 0x44
 8008b1c:	4606      	mov	r6, r0
 8008b1e:	6804      	ldr	r4, [r0, #0]
 8008b20:	f10d 023f 	add.w	r2, sp, #63	; 0x3f
 8008b24:	bb61      	cbnz	r1, 8008b80 <_format_hex+0x68>
 8008b26:	2330      	movs	r3, #48	; 0x30
 8008b28:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8008b2c:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 8008b30:	07e5      	lsls	r5, r4, #31
 8008b32:	d507      	bpl.n	8008b44 <_format_hex+0x2c>
 8008b34:	4669      	mov	r1, sp
 8008b36:	2530      	movs	r5, #48	; 0x30
 8008b38:	6870      	ldr	r0, [r6, #4]
 8008b3a:	1ad7      	subs	r7, r2, r3
 8008b3c:	4287      	cmp	r7, r0
 8008b3e:	da01      	bge.n	8008b44 <_format_hex+0x2c>
 8008b40:	428b      	cmp	r3, r1
 8008b42:	d831      	bhi.n	8008ba8 <_format_hex+0x90>
 8008b44:	06a0      	lsls	r0, r4, #26
 8008b46:	d507      	bpl.n	8008b58 <_format_hex+0x40>
 8008b48:	4669      	mov	r1, sp
 8008b4a:	2530      	movs	r5, #48	; 0x30
 8008b4c:	68b0      	ldr	r0, [r6, #8]
 8008b4e:	1ad7      	subs	r7, r2, r3
 8008b50:	4287      	cmp	r7, r0
 8008b52:	da01      	bge.n	8008b58 <_format_hex+0x40>
 8008b54:	428b      	cmp	r3, r1
 8008b56:	d82a      	bhi.n	8008bae <_format_hex+0x96>
 8008b58:	0661      	lsls	r1, r4, #25
 8008b5a:	d407      	bmi.n	8008b6c <_format_hex+0x54>
 8008b5c:	4669      	mov	r1, sp
 8008b5e:	2420      	movs	r4, #32
 8008b60:	68b0      	ldr	r0, [r6, #8]
 8008b62:	1ad5      	subs	r5, r2, r3
 8008b64:	4285      	cmp	r5, r0
 8008b66:	da01      	bge.n	8008b6c <_format_hex+0x54>
 8008b68:	428b      	cmp	r3, r1
 8008b6a:	d823      	bhi.n	8008bb4 <_format_hex+0x9c>
 8008b6c:	1ad5      	subs	r5, r2, r3
 8008b6e:	1c5c      	adds	r4, r3, #1
 8008b70:	ab10      	add	r3, sp, #64	; 0x40
 8008b72:	429c      	cmp	r4, r3
 8008b74:	d321      	bcc.n	8008bba <_format_hex+0xa2>
 8008b76:	68b3      	ldr	r3, [r6, #8]
 8008b78:	429d      	cmp	r5, r3
 8008b7a:	db24      	blt.n	8008bc6 <_format_hex+0xae>
 8008b7c:	b011      	add	sp, #68	; 0x44
 8008b7e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008b80:	f014 0f02 	tst.w	r4, #2
 8008b84:	bf0c      	ite	eq
 8008b86:	2757      	moveq	r7, #87	; 0x57
 8008b88:	2737      	movne	r7, #55	; 0x37
 8008b8a:	4613      	mov	r3, r2
 8008b8c:	466d      	mov	r5, sp
 8008b8e:	f001 000f 	and.w	r0, r1, #15
 8008b92:	2809      	cmp	r0, #9
 8008b94:	bf94      	ite	ls
 8008b96:	3030      	addls	r0, #48	; 0x30
 8008b98:	19c0      	addhi	r0, r0, r7
 8008b9a:	0909      	lsrs	r1, r1, #4
 8008b9c:	f803 0901 	strb.w	r0, [r3], #-1
 8008ba0:	d0c6      	beq.n	8008b30 <_format_hex+0x18>
 8008ba2:	42ab      	cmp	r3, r5
 8008ba4:	d1f3      	bne.n	8008b8e <_format_hex+0x76>
 8008ba6:	e7c3      	b.n	8008b30 <_format_hex+0x18>
 8008ba8:	f803 5901 	strb.w	r5, [r3], #-1
 8008bac:	e7c5      	b.n	8008b3a <_format_hex+0x22>
 8008bae:	f803 5901 	strb.w	r5, [r3], #-1
 8008bb2:	e7cc      	b.n	8008b4e <_format_hex+0x36>
 8008bb4:	f803 4901 	strb.w	r4, [r3], #-1
 8008bb8:	e7d3      	b.n	8008b62 <_format_hex+0x4a>
 8008bba:	4630      	mov	r0, r6
 8008bbc:	f814 1b01 	ldrb.w	r1, [r4], #1
 8008bc0:	f7ff ff1e 	bl	8008a00 <_xputch>
 8008bc4:	e7d4      	b.n	8008b70 <_format_hex+0x58>
 8008bc6:	2120      	movs	r1, #32
 8008bc8:	4630      	mov	r0, r6
 8008bca:	f7ff ff19 	bl	8008a00 <_xputch>
 8008bce:	3501      	adds	r5, #1
 8008bd0:	e7d1      	b.n	8008b76 <_format_hex+0x5e>
	...

08008bd4 <_vprintf>:
 8008bd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008bd8:	4614      	mov	r4, r2
 8008bda:	2200      	movs	r2, #0
 8008bdc:	460b      	mov	r3, r1
 8008bde:	2700      	movs	r7, #0
 8008be0:	b099      	sub	sp, #100	; 0x64
 8008be2:	e9cd 2006 	strd	r2, r0, [sp, #24]
 8008be6:	ae08      	add	r6, sp, #32
 8008be8:	7819      	ldrb	r1, [r3, #0]
 8008bea:	b919      	cbnz	r1, 8008bf4 <_vprintf+0x20>
 8008bec:	9806      	ldr	r0, [sp, #24]
 8008bee:	b019      	add	sp, #100	; 0x64
 8008bf0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008bf4:	2925      	cmp	r1, #37	; 0x25
 8008bf6:	f103 0501 	add.w	r5, r3, #1
 8008bfa:	d004      	beq.n	8008c06 <_vprintf+0x32>
 8008bfc:	a803      	add	r0, sp, #12
 8008bfe:	f7ff feff 	bl	8008a00 <_xputch>
 8008c02:	462b      	mov	r3, r5
 8008c04:	e7f0      	b.n	8008be8 <_vprintf+0x14>
 8008c06:	2200      	movs	r2, #0
 8008c08:	e9cd 2203 	strd	r2, r2, [sp, #12]
 8008c0c:	9205      	str	r2, [sp, #20]
 8008c0e:	785a      	ldrb	r2, [r3, #1]
 8008c10:	2a30      	cmp	r2, #48	; 0x30
 8008c12:	d12b      	bne.n	8008c6c <_vprintf+0x98>
 8008c14:	2220      	movs	r2, #32
 8008c16:	9203      	str	r2, [sp, #12]
 8008c18:	1c9d      	adds	r5, r3, #2
 8008c1a:	2200      	movs	r2, #0
 8008c1c:	46ac      	mov	ip, r5
 8008c1e:	4613      	mov	r3, r2
 8008c20:	f04f 0e0a 	mov.w	lr, #10
 8008c24:	f89c 1000 	ldrb.w	r1, [ip]
 8008c28:	4665      	mov	r5, ip
 8008c2a:	f1a1 0030 	sub.w	r0, r1, #48	; 0x30
 8008c2e:	2809      	cmp	r0, #9
 8008c30:	f10c 0c01 	add.w	ip, ip, #1
 8008c34:	d91e      	bls.n	8008c74 <_vprintf+0xa0>
 8008c36:	b12a      	cbz	r2, 8008c44 <_vprintf+0x70>
 8008c38:	9305      	str	r3, [sp, #20]
 8008c3a:	b11b      	cbz	r3, 8008c44 <_vprintf+0x70>
 8008c3c:	9b03      	ldr	r3, [sp, #12]
 8008c3e:	f043 0310 	orr.w	r3, r3, #16
 8008c42:	9303      	str	r3, [sp, #12]
 8008c44:	292e      	cmp	r1, #46	; 0x2e
 8008c46:	d124      	bne.n	8008c92 <_vprintf+0xbe>
 8008c48:	786b      	ldrb	r3, [r5, #1]
 8008c4a:	2b2a      	cmp	r3, #42	; 0x2a
 8008c4c:	d016      	beq.n	8008c7c <_vprintf+0xa8>
 8008c4e:	2100      	movs	r1, #0
 8008c50:	f04f 0c0a 	mov.w	ip, #10
 8008c54:	460a      	mov	r2, r1
 8008c56:	1c68      	adds	r0, r5, #1
 8008c58:	7803      	ldrb	r3, [r0, #0]
 8008c5a:	4605      	mov	r5, r0
 8008c5c:	3b30      	subs	r3, #48	; 0x30
 8008c5e:	2b09      	cmp	r3, #9
 8008c60:	f100 0001 	add.w	r0, r0, #1
 8008c64:	d958      	bls.n	8008d18 <_vprintf+0x144>
 8008c66:	b181      	cbz	r1, 8008c8a <_vprintf+0xb6>
 8008c68:	9204      	str	r2, [sp, #16]
 8008c6a:	e00e      	b.n	8008c8a <_vprintf+0xb6>
 8008c6c:	2a2d      	cmp	r2, #45	; 0x2d
 8008c6e:	d1d4      	bne.n	8008c1a <_vprintf+0x46>
 8008c70:	2240      	movs	r2, #64	; 0x40
 8008c72:	e7d0      	b.n	8008c16 <_vprintf+0x42>
 8008c74:	2201      	movs	r2, #1
 8008c76:	fb0e 0303 	mla	r3, lr, r3, r0
 8008c7a:	e7d3      	b.n	8008c24 <_vprintf+0x50>
 8008c7c:	f854 3b04 	ldr.w	r3, [r4], #4
 8008c80:	3502      	adds	r5, #2
 8008c82:	2b00      	cmp	r3, #0
 8008c84:	bfb8      	it	lt
 8008c86:	425b      	neglt	r3, r3
 8008c88:	9304      	str	r3, [sp, #16]
 8008c8a:	9b03      	ldr	r3, [sp, #12]
 8008c8c:	f043 0301 	orr.w	r3, r3, #1
 8008c90:	9303      	str	r3, [sp, #12]
 8008c92:	782b      	ldrb	r3, [r5, #0]
 8008c94:	2b6c      	cmp	r3, #108	; 0x6c
 8008c96:	bf04      	itt	eq
 8008c98:	9b03      	ldreq	r3, [sp, #12]
 8008c9a:	3501      	addeq	r5, #1
 8008c9c:	7829      	ldrb	r1, [r5, #0]
 8008c9e:	bf04      	itt	eq
 8008ca0:	f043 0304 	orreq.w	r3, r3, #4
 8008ca4:	9303      	streq	r3, [sp, #12]
 8008ca6:	2958      	cmp	r1, #88	; 0x58
 8008ca8:	f000 8173 	beq.w	8008f92 <_vprintf+0x3be>
 8008cac:	f1a1 0363 	sub.w	r3, r1, #99	; 0x63
 8008cb0:	b2da      	uxtb	r2, r3
 8008cb2:	2a15      	cmp	r2, #21
 8008cb4:	d8a2      	bhi.n	8008bfc <_vprintf+0x28>
 8008cb6:	2b15      	cmp	r3, #21
 8008cb8:	d8a0      	bhi.n	8008bfc <_vprintf+0x28>
 8008cba:	a201      	add	r2, pc, #4	; (adr r2, 8008cc0 <_vprintf+0xec>)
 8008cbc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008cc0:	08008d21 	stmdaeq	r0, {r0, r5, r8, sl, fp, pc}
 8008cc4:	08008d2f 	stmdaeq	r0, {r0, r1, r2, r3, r5, r8, sl, fp, pc}
 8008cc8:	08008bfd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, r9, fp, pc}
 8008ccc:	08008d63 	stmdaeq	r0, {r0, r1, r5, r6, r8, sl, fp, pc}
 8008cd0:	08008bfd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, r9, fp, pc}
 8008cd4:	08008bfd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, r9, fp, pc}
 8008cd8:	08008d2f 	stmdaeq	r0, {r0, r1, r2, r3, r5, r8, sl, fp, pc}
 8008cdc:	08008bfd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, r9, fp, pc}
 8008ce0:	08008bfd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, r9, fp, pc}
 8008ce4:	08008bfd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, r9, fp, pc}
 8008ce8:	08008bfd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, r9, fp, pc}
 8008cec:	08008bfd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, r9, fp, pc}
 8008cf0:	08008bfd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, r9, fp, pc}
 8008cf4:	08008ed5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r9, sl, fp, pc}
 8008cf8:	08008bfd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, r9, fp, pc}
 8008cfc:	08008bfd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, r9, fp, pc}
 8008d00:	08008efb 	stmdaeq	r0, {r0, r1, r3, r4, r5, r6, r7, r9, sl, fp, pc}
 8008d04:	08008bfd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, r9, fp, pc}
 8008d08:	08008f75 	stmdaeq	r0, {r0, r2, r4, r5, r6, r8, r9, sl, fp, pc}
 8008d0c:	08008bfd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, r9, fp, pc}
 8008d10:	08008bfd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, r9, fp, pc}
 8008d14:	08008f9b 	stmdaeq	r0, {r0, r1, r3, r4, r7, r8, r9, sl, fp, pc}
 8008d18:	2101      	movs	r1, #1
 8008d1a:	fb0c 3202 	mla	r2, ip, r2, r3
 8008d1e:	e79b      	b.n	8008c58 <_vprintf+0x84>
 8008d20:	f854 1b04 	ldr.w	r1, [r4], #4
 8008d24:	a803      	add	r0, sp, #12
 8008d26:	f7ff fe6b 	bl	8008a00 <_xputch>
 8008d2a:	3501      	adds	r5, #1
 8008d2c:	e769      	b.n	8008c02 <_vprintf+0x2e>
 8008d2e:	9903      	ldr	r1, [sp, #12]
 8008d30:	074a      	lsls	r2, r1, #29
 8008d32:	bf43      	ittte	mi
 8008d34:	3407      	addmi	r4, #7
 8008d36:	f024 0307 	bicmi.w	r3, r4, #7
 8008d3a:	461c      	movmi	r4, r3
 8008d3c:	f854 2b04 	ldrpl.w	r2, [r4], #4
 8008d40:	bf4a      	itet	mi
 8008d42:	685b      	ldrmi	r3, [r3, #4]
 8008d44:	17d3      	asrpl	r3, r2, #31
 8008d46:	f854 2b08 	ldrmi.w	r2, [r4], #8
 8008d4a:	2b00      	cmp	r3, #0
 8008d4c:	da05      	bge.n	8008d5a <_vprintf+0x186>
 8008d4e:	f041 0108 	orr.w	r1, r1, #8
 8008d52:	4252      	negs	r2, r2
 8008d54:	9103      	str	r1, [sp, #12]
 8008d56:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8008d5a:	a803      	add	r0, sp, #12
 8008d5c:	f7ff fe66 	bl	8008a2c <_format_int>
 8008d60:	e7e3      	b.n	8008d2a <_vprintf+0x156>
 8008d62:	3407      	adds	r4, #7
 8008d64:	f024 0407 	bic.w	r4, r4, #7
 8008d68:	e8f4 0102 	ldrd	r0, r1, [r4], #8
 8008d6c:	f7fe fa1c 	bl	80071a8 <__aeabi_d2f>
 8008d70:	9b03      	ldr	r3, [sp, #12]
 8008d72:	4639      	mov	r1, r7
 8008d74:	07db      	lsls	r3, r3, #31
 8008d76:	bf54      	ite	pl
 8008d78:	f04f 0a06 	movpl.w	sl, #6
 8008d7c:	f8dd a010 	ldrmi.w	sl, [sp, #16]
 8008d80:	4681      	mov	r9, r0
 8008d82:	f7fe fbbd 	bl	8007500 <__aeabi_fcmplt>
 8008d86:	2800      	cmp	r0, #0
 8008d88:	d069      	beq.n	8008e5e <_vprintf+0x28a>
 8008d8a:	232d      	movs	r3, #45	; 0x2d
 8008d8c:	f109 4900 	add.w	r9, r9, #2147483648	; 0x80000000
 8008d90:	f88d 3020 	strb.w	r3, [sp, #32]
 8008d94:	f10d 0b21 	add.w	fp, sp, #33	; 0x21
 8008d98:	4648      	mov	r0, r9
 8008d9a:	f7fe fbd9 	bl	8007550 <__aeabi_f2iz>
 8008d9e:	4659      	mov	r1, fp
 8008da0:	2200      	movs	r2, #0
 8008da2:	4680      	mov	r8, r0
 8008da4:	f7ff fdf2 	bl	800898c <_itostr>
 8008da8:	eb0b 0200 	add.w	r2, fp, r0
 8008dac:	e9cd 2000 	strd	r2, r0, [sp]
 8008db0:	4640      	mov	r0, r8
 8008db2:	f7fe fb03 	bl	80073bc <__aeabi_i2f>
 8008db6:	4601      	mov	r1, r0
 8008db8:	4648      	mov	r0, r9
 8008dba:	f7fe fa49 	bl	8007250 <__aeabi_fsub>
 8008dbe:	222e      	movs	r2, #46	; 0x2e
 8008dc0:	4601      	mov	r1, r0
 8008dc2:	200a      	movs	r0, #10
 8008dc4:	9b00      	ldr	r3, [sp, #0]
 8008dc6:	f10a 0901 	add.w	r9, sl, #1
 8008dca:	f103 0801 	add.w	r8, r3, #1
 8008dce:	9b01      	ldr	r3, [sp, #4]
 8008dd0:	f80b 2003 	strb.w	r2, [fp, r3]
 8008dd4:	4603      	mov	r3, r0
 8008dd6:	f1ba 0f00 	cmp.w	sl, #0
 8008dda:	dc42      	bgt.n	8008e62 <_vprintf+0x28e>
 8008ddc:	9100      	str	r1, [sp, #0]
 8008dde:	f7fe faed 	bl	80073bc <__aeabi_i2f>
 8008de2:	9900      	ldr	r1, [sp, #0]
 8008de4:	f7fe ff1a 	bl	8007c1c <__aeabi_fmul>
 8008de8:	f7fe fbb2 	bl	8007550 <__aeabi_f2iz>
 8008dec:	4641      	mov	r1, r8
 8008dee:	464a      	mov	r2, r9
 8008df0:	f7ff fdcc 	bl	800898c <_itostr>
 8008df4:	4480      	add	r8, r0
 8008df6:	eba8 0806 	sub.w	r8, r8, r6
 8008dfa:	f108 31ff 	add.w	r1, r8, #4294967295	; 0xffffffff
 8008dfe:	5c73      	ldrb	r3, [r6, r1]
 8008e00:	1872      	adds	r2, r6, r1
 8008e02:	2b34      	cmp	r3, #52	; 0x34
 8008e04:	d910      	bls.n	8008e28 <_vprintf+0x254>
 8008e06:	f812 0c01 	ldrb.w	r0, [r2, #-1]
 8008e0a:	1e53      	subs	r3, r2, #1
 8008e0c:	282e      	cmp	r0, #46	; 0x2e
 8008e0e:	d02f      	beq.n	8008e70 <_vprintf+0x29c>
 8008e10:	469c      	mov	ip, r3
 8008e12:	f04f 0e30 	mov.w	lr, #48	; 0x30
 8008e16:	4663      	mov	r3, ip
 8008e18:	f81c 0901 	ldrb.w	r0, [ip], #-1
 8008e1c:	2839      	cmp	r0, #57	; 0x39
 8008e1e:	d024      	beq.n	8008e6a <_vprintf+0x296>
 8008e20:	282e      	cmp	r0, #46	; 0x2e
 8008e22:	d025      	beq.n	8008e70 <_vprintf+0x29c>
 8008e24:	3001      	adds	r0, #1
 8008e26:	7018      	strb	r0, [r3, #0]
 8008e28:	f101 0360 	add.w	r3, r1, #96	; 0x60
 8008e2c:	446b      	add	r3, sp
 8008e2e:	f813 3c41 	ldrb.w	r3, [r3, #-65]
 8008e32:	2b2e      	cmp	r3, #46	; 0x2e
 8008e34:	bf08      	it	eq
 8008e36:	f101 31ff 	addeq.w	r1, r1, #4294967295	; 0xffffffff
 8008e3a:	4688      	mov	r8, r1
 8008e3c:	4689      	mov	r9, r1
 8008e3e:	9b05      	ldr	r3, [sp, #20]
 8008e40:	454b      	cmp	r3, r9
 8008e42:	dc40      	bgt.n	8008ec6 <_vprintf+0x2f2>
 8008e44:	46b1      	mov	r9, r6
 8008e46:	f1b8 0f00 	cmp.w	r8, #0
 8008e4a:	f77f af6e 	ble.w	8008d2a <_vprintf+0x156>
 8008e4e:	f819 1b01 	ldrb.w	r1, [r9], #1
 8008e52:	a803      	add	r0, sp, #12
 8008e54:	f7ff fdd4 	bl	8008a00 <_xputch>
 8008e58:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
 8008e5c:	e7f3      	b.n	8008e46 <_vprintf+0x272>
 8008e5e:	46b3      	mov	fp, r6
 8008e60:	e79a      	b.n	8008d98 <_vprintf+0x1c4>
 8008e62:	4358      	muls	r0, r3
 8008e64:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
 8008e68:	e7b5      	b.n	8008dd6 <_vprintf+0x202>
 8008e6a:	f88c e001 	strb.w	lr, [ip, #1]
 8008e6e:	e7d2      	b.n	8008e16 <_vprintf+0x242>
 8008e70:	f04f 0c30 	mov.w	ip, #48	; 0x30
 8008e74:	3b01      	subs	r3, #1
 8008e76:	7818      	ldrb	r0, [r3, #0]
 8008e78:	2839      	cmp	r0, #57	; 0x39
 8008e7a:	d112      	bne.n	8008ea2 <_vprintf+0x2ce>
 8008e7c:	42b3      	cmp	r3, r6
 8008e7e:	d20d      	bcs.n	8008e9c <_vprintf+0x2c8>
 8008e80:	1c98      	adds	r0, r3, #2
 8008e82:	1c59      	adds	r1, r3, #1
 8008e84:	4281      	cmp	r1, r0
 8008e86:	eba2 0203 	sub.w	r2, r2, r3
 8008e8a:	d913      	bls.n	8008eb4 <_vprintf+0x2e0>
 8008e8c:	3201      	adds	r2, #1
 8008e8e:	441a      	add	r2, r3
 8008e90:	428a      	cmp	r2, r1
 8008e92:	d10b      	bne.n	8008eac <_vprintf+0x2d8>
 8008e94:	2231      	movs	r2, #49	; 0x31
 8008e96:	4641      	mov	r1, r8
 8008e98:	705a      	strb	r2, [r3, #1]
 8008e9a:	e7c5      	b.n	8008e28 <_vprintf+0x254>
 8008e9c:	f803 c901 	strb.w	ip, [r3], #-1
 8008ea0:	e7e9      	b.n	8008e76 <_vprintf+0x2a2>
 8008ea2:	42b3      	cmp	r3, r6
 8008ea4:	d3ec      	bcc.n	8008e80 <_vprintf+0x2ac>
 8008ea6:	282d      	cmp	r0, #45	; 0x2d
 8008ea8:	d0ea      	beq.n	8008e80 <_vprintf+0x2ac>
 8008eaa:	e7bb      	b.n	8008e24 <_vprintf+0x250>
 8008eac:	f811 0b01 	ldrb.w	r0, [r1], #1
 8008eb0:	7008      	strb	r0, [r1, #0]
 8008eb2:	e7ed      	b.n	8008e90 <_vprintf+0x2bc>
 8008eb4:	4411      	add	r1, r2
 8008eb6:	4402      	add	r2, r0
 8008eb8:	4290      	cmp	r0, r2
 8008eba:	d0eb      	beq.n	8008e94 <_vprintf+0x2c0>
 8008ebc:	f811 cd01 	ldrb.w	ip, [r1, #-1]!
 8008ec0:	f802 cd01 	strb.w	ip, [r2, #-1]!
 8008ec4:	e7f8      	b.n	8008eb8 <_vprintf+0x2e4>
 8008ec6:	2120      	movs	r1, #32
 8008ec8:	a803      	add	r0, sp, #12
 8008eca:	f7ff fd99 	bl	8008a00 <_xputch>
 8008ece:	f109 0901 	add.w	r9, r9, #1
 8008ed2:	e7b4      	b.n	8008e3e <_vprintf+0x26a>
 8008ed4:	2308      	movs	r3, #8
 8008ed6:	9305      	str	r3, [sp, #20]
 8008ed8:	2320      	movs	r3, #32
 8008eda:	2130      	movs	r1, #48	; 0x30
 8008edc:	f854 8b04 	ldr.w	r8, [r4], #4
 8008ee0:	a803      	add	r0, sp, #12
 8008ee2:	9303      	str	r3, [sp, #12]
 8008ee4:	f7ff fd8c 	bl	8008a00 <_xputch>
 8008ee8:	2178      	movs	r1, #120	; 0x78
 8008eea:	a803      	add	r0, sp, #12
 8008eec:	f7ff fd88 	bl	8008a00 <_xputch>
 8008ef0:	4641      	mov	r1, r8
 8008ef2:	a803      	add	r0, sp, #12
 8008ef4:	f7ff fe10 	bl	8008b18 <_format_hex>
 8008ef8:	e717      	b.n	8008d2a <_vprintf+0x156>
 8008efa:	f04f 0800 	mov.w	r8, #0
 8008efe:	f854 9b04 	ldr.w	r9, [r4], #4
 8008f02:	f819 3008 	ldrb.w	r3, [r9, r8]
 8008f06:	b993      	cbnz	r3, 8008f2e <_vprintf+0x35a>
 8008f08:	9b03      	ldr	r3, [sp, #12]
 8008f0a:	07d9      	lsls	r1, r3, #31
 8008f0c:	d503      	bpl.n	8008f16 <_vprintf+0x342>
 8008f0e:	9b04      	ldr	r3, [sp, #16]
 8008f10:	4598      	cmp	r8, r3
 8008f12:	bfa8      	it	ge
 8008f14:	4698      	movge	r8, r3
 8008f16:	9b03      	ldr	r3, [sp, #12]
 8008f18:	f108 0a01 	add.w	sl, r8, #1
 8008f1c:	065a      	lsls	r2, r3, #25
 8008f1e:	d403      	bmi.n	8008f28 <_vprintf+0x354>
 8008f20:	9b05      	ldr	r3, [sp, #20]
 8008f22:	4598      	cmp	r8, r3
 8008f24:	db06      	blt.n	8008f34 <_vprintf+0x360>
 8008f26:	46d0      	mov	r8, sl
 8008f28:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 8008f2c:	e00e      	b.n	8008f4c <_vprintf+0x378>
 8008f2e:	f108 0801 	add.w	r8, r8, #1
 8008f32:	e7e6      	b.n	8008f02 <_vprintf+0x32e>
 8008f34:	2120      	movs	r1, #32
 8008f36:	a803      	add	r0, sp, #12
 8008f38:	f7ff fd62 	bl	8008a00 <_xputch>
 8008f3c:	46d0      	mov	r8, sl
 8008f3e:	e7ea      	b.n	8008f16 <_vprintf+0x342>
 8008f40:	a803      	add	r0, sp, #12
 8008f42:	f7ff fd5d 	bl	8008a00 <_xputch>
 8008f46:	9b04      	ldr	r3, [sp, #16]
 8008f48:	3b01      	subs	r3, #1
 8008f4a:	9304      	str	r3, [sp, #16]
 8008f4c:	9b03      	ldr	r3, [sp, #12]
 8008f4e:	07db      	lsls	r3, r3, #31
 8008f50:	d501      	bpl.n	8008f56 <_vprintf+0x382>
 8008f52:	9b04      	ldr	r3, [sp, #16]
 8008f54:	b11b      	cbz	r3, 8008f5e <_vprintf+0x38a>
 8008f56:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 8008f5a:	2900      	cmp	r1, #0
 8008f5c:	d1f0      	bne.n	8008f40 <_vprintf+0x36c>
 8008f5e:	9b05      	ldr	r3, [sp, #20]
 8008f60:	4543      	cmp	r3, r8
 8008f62:	f77f aee2 	ble.w	8008d2a <_vprintf+0x156>
 8008f66:	2120      	movs	r1, #32
 8008f68:	a803      	add	r0, sp, #12
 8008f6a:	f7ff fd49 	bl	8008a00 <_xputch>
 8008f6e:	f108 0801 	add.w	r8, r8, #1
 8008f72:	e7f4      	b.n	8008f5e <_vprintf+0x38a>
 8008f74:	9b03      	ldr	r3, [sp, #12]
 8008f76:	f013 0304 	ands.w	r3, r3, #4
 8008f7a:	bf1d      	ittte	ne
 8008f7c:	3407      	addne	r4, #7
 8008f7e:	f024 0307 	bicne.w	r3, r4, #7
 8008f82:	461c      	movne	r4, r3
 8008f84:	f854 2b04 	ldreq.w	r2, [r4], #4
 8008f88:	bf1c      	itt	ne
 8008f8a:	f854 2b08 	ldrne.w	r2, [r4], #8
 8008f8e:	685b      	ldrne	r3, [r3, #4]
 8008f90:	e6e3      	b.n	8008d5a <_vprintf+0x186>
 8008f92:	9b03      	ldr	r3, [sp, #12]
 8008f94:	f043 0302 	orr.w	r3, r3, #2
 8008f98:	9303      	str	r3, [sp, #12]
 8008f9a:	f854 1b04 	ldr.w	r1, [r4], #4
 8008f9e:	e7a8      	b.n	8008ef2 <_vprintf+0x31e>

08008fa0 <printf>:
 8008fa0:	b40f      	push	{r0, r1, r2, r3}
 8008fa2:	b507      	push	{r0, r1, r2, lr}
 8008fa4:	aa04      	add	r2, sp, #16
 8008fa6:	f852 1b04 	ldr.w	r1, [r2], #4
 8008faa:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8008fae:	9201      	str	r2, [sp, #4]
 8008fb0:	f7ff fe10 	bl	8008bd4 <_vprintf>
 8008fb4:	b003      	add	sp, #12
 8008fb6:	f85d eb04 	ldr.w	lr, [sp], #4
 8008fba:	b004      	add	sp, #16
 8008fbc:	4770      	bx	lr
	...

08008fc0 <sprintf>:
 8008fc0:	b40e      	push	{r1, r2, r3}
 8008fc2:	b517      	push	{r0, r1, r2, r4, lr}
 8008fc4:	4c09      	ldr	r4, [pc, #36]	; (8008fec <sprintf+0x2c>)
 8008fc6:	aa05      	add	r2, sp, #20
 8008fc8:	f852 1b04 	ldr.w	r1, [r2], #4
 8008fcc:	6020      	str	r0, [r4, #0]
 8008fce:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8008fd2:	9201      	str	r2, [sp, #4]
 8008fd4:	f7ff fdfe 	bl	8008bd4 <_vprintf>
 8008fd8:	2300      	movs	r3, #0
 8008fda:	6822      	ldr	r2, [r4, #0]
 8008fdc:	6023      	str	r3, [r4, #0]
 8008fde:	7013      	strb	r3, [r2, #0]
 8008fe0:	b003      	add	sp, #12
 8008fe2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8008fe6:	b003      	add	sp, #12
 8008fe8:	4770      	bx	lr
 8008fea:	bf00      	nop
 8008fec:	200000e8 	andcs	r0, r0, r8, ror #1

08008ff0 <snprintf>:
 8008ff0:	b40c      	push	{r2, r3}
 8008ff2:	460b      	mov	r3, r1
 8008ff4:	b513      	push	{r0, r1, r4, lr}
 8008ff6:	4c09      	ldr	r4, [pc, #36]	; (800901c <snprintf+0x2c>)
 8008ff8:	aa04      	add	r2, sp, #16
 8008ffa:	f852 1b04 	ldr.w	r1, [r2], #4
 8008ffe:	6020      	str	r0, [r4, #0]
 8009000:	4618      	mov	r0, r3
 8009002:	9201      	str	r2, [sp, #4]
 8009004:	f7ff fde6 	bl	8008bd4 <_vprintf>
 8009008:	2300      	movs	r3, #0
 800900a:	6822      	ldr	r2, [r4, #0]
 800900c:	6023      	str	r3, [r4, #0]
 800900e:	7013      	strb	r3, [r2, #0]
 8009010:	b002      	add	sp, #8
 8009012:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009016:	b002      	add	sp, #8
 8009018:	4770      	bx	lr
 800901a:	bf00      	nop
 800901c:	200000e8 	andcs	r0, r0, r8, ror #1

08009020 <vsnprintf>:
 8009020:	b538      	push	{r3, r4, r5, lr}
 8009022:	4605      	mov	r5, r0
 8009024:	4c05      	ldr	r4, [pc, #20]	; (800903c <vsnprintf+0x1c>)
 8009026:	4608      	mov	r0, r1
 8009028:	4611      	mov	r1, r2
 800902a:	461a      	mov	r2, r3
 800902c:	6025      	str	r5, [r4, #0]
 800902e:	f7ff fdd1 	bl	8008bd4 <_vprintf>
 8009032:	2300      	movs	r3, #0
 8009034:	6822      	ldr	r2, [r4, #0]
 8009036:	6023      	str	r3, [r4, #0]
 8009038:	7013      	strb	r3, [r2, #0]
 800903a:	bd38      	pop	{r3, r4, r5, pc}
 800903c:	200000e8 	andcs	r0, r0, r8, ror #1

08009040 <RemoteConfig::HandleList()>:
 8009040:	2212      	movs	r2, #18
 8009042:	6803      	ldr	r3, [r0, #0]
 8009044:	492f      	ldr	r1, [pc, #188]	; (8009104 <RemoteConfig::HandleList()+0xc4>)
 8009046:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800904a:	fb02 1103 	mla	r1, r2, r3, r1
 800904e:	220c      	movs	r2, #12
 8009050:	4604      	mov	r4, r0
 8009052:	6843      	ldr	r3, [r0, #4]
 8009054:	482c      	ldr	r0, [pc, #176]	; (8009108 <RemoteConfig::HandleList()+0xc8>)
 8009056:	4e2d      	ldr	r6, [pc, #180]	; (800910c <RemoteConfig::HandleList()+0xcc>)
 8009058:	fb02 0003 	mla	r0, r2, r3, r0
 800905c:	4b2c      	ldr	r3, [pc, #176]	; (8009110 <RemoteConfig::HandleList()+0xd0>)
 800905e:	4f2d      	ldr	r7, [pc, #180]	; (8009114 <RemoteConfig::HandleList()+0xd4>)
 8009060:	681b      	ldr	r3, [r3, #0]
 8009062:	6835      	ldr	r5, [r6, #0]
 8009064:	f8d3 c010 	ldr.w	ip, [r3, #16]
 8009068:	f897 9009 	ldrb.w	r9, [r7, #9]
 800906c:	fa5f f38c 	uxtb.w	r3, ip
 8009070:	ea4f 6e1c 	mov.w	lr, ip, lsr #24
 8009074:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8009078:	f8d4 8008 	ldr.w	r8, [r4, #8]
 800907c:	b089      	sub	sp, #36	; 0x24
 800907e:	3507      	adds	r5, #7
 8009080:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8009084:	f1b9 0f00 	cmp.w	r9, #0
 8009088:	d020      	beq.n	80090cc <RemoteConfig::HandleList()+0x8c>
 800908a:	b2d2      	uxtb	r2, r2
 800908c:	3709      	adds	r7, #9
 800908e:	9201      	str	r2, [sp, #4]
 8009090:	fa5f f28c 	uxtb.w	r2, ip
 8009094:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8009098:	9200      	str	r2, [sp, #0]
 800909a:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 800909e:	4628      	mov	r0, r5
 80090a0:	e9cd 8705 	strd	r8, r7, [sp, #20]
 80090a4:	4a1c      	ldr	r2, [pc, #112]	; (8009118 <RemoteConfig::HandleList()+0xd8>)
 80090a6:	f8cd e008 	str.w	lr, [sp, #8]
 80090aa:	f7ff ffa1 	bl	8008ff0 <snprintf>
 80090ae:	8ba3      	ldrh	r3, [r4, #28]
 80090b0:	2b05      	cmp	r3, #5
 80090b2:	d11b      	bne.n	80090ec <RemoteConfig::HandleList()+0xac>
 80090b4:	f642 1305 	movw	r3, #10501	; 0x2905
 80090b8:	9300      	str	r3, [sp, #0]
 80090ba:	69a3      	ldr	r3, [r4, #24]
 80090bc:	b282      	uxth	r2, r0
 80090be:	4629      	mov	r1, r5
 80090c0:	7d20      	ldrb	r0, [r4, #20]
 80090c2:	f009 f867 	bl	8012194 <udp_send>
 80090c6:	b009      	add	sp, #36	; 0x24
 80090c8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80090cc:	b2d2      	uxtb	r2, r2
 80090ce:	9201      	str	r2, [sp, #4]
 80090d0:	fa5f f28c 	uxtb.w	r2, ip
 80090d4:	e9cd 0804 	strd	r0, r8, [sp, #16]
 80090d8:	e9cd e102 	strd	lr, r1, [sp, #8]
 80090dc:	9200      	str	r2, [sp, #0]
 80090de:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 80090e2:	4628      	mov	r0, r5
 80090e4:	4a0d      	ldr	r2, [pc, #52]	; (800911c <RemoteConfig::HandleList()+0xdc>)
 80090e6:	f7ff ff83 	bl	8008ff0 <snprintf>
 80090ea:	e7e0      	b.n	80090ae <RemoteConfig::HandleList()+0x6e>
 80090ec:	2b06      	cmp	r3, #6
 80090ee:	d1ea      	bne.n	80090c6 <RemoteConfig::HandleList()+0x86>
 80090f0:	6833      	ldr	r3, [r6, #0]
 80090f2:	799b      	ldrb	r3, [r3, #6]
 80090f4:	2b2a      	cmp	r3, #42	; 0x2a
 80090f6:	d1e6      	bne.n	80090c6 <RemoteConfig::HandleList()+0x86>
 80090f8:	f642 1305 	movw	r3, #10501	; 0x2905
 80090fc:	9300      	str	r3, [sp, #0]
 80090fe:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8009102:	e7db      	b.n	80090bc <RemoteConfig::HandleList()+0x7c>
 8009104:	0801816b 	stmdaeq	r1, {r0, r1, r3, r5, r6, r8, pc}
 8009108:	0801820d 	stmdaeq	r1, {r0, r2, r3, r9, pc}
 800910c:	200000ec 	andcs	r0, r0, ip, ror #1
 8009110:	200136bc 			; <UNDEFINED> instruction: 0x200136bc
 8009114:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 8009118:	080180a5 	stmdaeq	r1, {r0, r2, r5, r7, pc}
 800911c:	080180be 	stmdaeq	r1, {r1, r2, r3, r4, r5, r7, pc}

08009120 <RemoteConfig::HandleDisplayGet()>:
 8009120:	8b83      	ldrh	r3, [r0, #28]
 8009122:	2b08      	cmp	r3, #8
 8009124:	d11b      	bne.n	800915e <RemoteConfig::HandleDisplayGet()+0x3e>
 8009126:	4b0e      	ldr	r3, [pc, #56]	; (8009160 <RemoteConfig::HandleDisplayGet()+0x40>)
 8009128:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800912a:	681b      	ldr	r3, [r3, #0]
 800912c:	4d0d      	ldr	r5, [pc, #52]	; (8009164 <RemoteConfig::HandleDisplayGet()+0x44>)
 800912e:	7c19      	ldrb	r1, [r3, #16]
 8009130:	4a0d      	ldr	r2, [pc, #52]	; (8009168 <RemoteConfig::HandleDisplayGet()+0x48>)
 8009132:	4b0e      	ldr	r3, [pc, #56]	; (800916c <RemoteConfig::HandleDisplayGet()+0x4c>)
 8009134:	4604      	mov	r4, r0
 8009136:	2900      	cmp	r1, #0
 8009138:	bf18      	it	ne
 800913a:	4613      	movne	r3, r2
 800913c:	6828      	ldr	r0, [r5, #0]
 800913e:	f240 31ff 	movw	r1, #1023	; 0x3ff
 8009142:	4a0b      	ldr	r2, [pc, #44]	; (8009170 <RemoteConfig::HandleDisplayGet()+0x50>)
 8009144:	f7ff ff54 	bl	8008ff0 <snprintf>
 8009148:	f642 1305 	movw	r3, #10501	; 0x2905
 800914c:	9300      	str	r3, [sp, #0]
 800914e:	b282      	uxth	r2, r0
 8009150:	69a3      	ldr	r3, [r4, #24]
 8009152:	6829      	ldr	r1, [r5, #0]
 8009154:	7d20      	ldrb	r0, [r4, #20]
 8009156:	f009 f81d 	bl	8012194 <udp_send>
 800915a:	b003      	add	sp, #12
 800915c:	bd30      	pop	{r4, r5, pc}
 800915e:	4770      	bx	lr
 8009160:	20013cf4 	strdcs	r3, [r1], -r4
 8009164:	200000ec 	andcs	r0, r0, ip, ror #1
 8009168:	080180d7 	stmdaeq	r1, {r0, r1, r2, r4, r6, r7, pc}
 800916c:	080180d4 	stmdaeq	r1, {r2, r4, r6, r7, pc}
 8009170:	080180db 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, pc}

08009174 <RemoteConfig::HandleTftpSet()>:
 8009174:	8b82      	ldrh	r2, [r0, #28]
 8009176:	2a06      	cmp	r2, #6
 8009178:	d109      	bne.n	800918e <RemoteConfig::HandleTftpSet()+0x1a>
 800917a:	4a05      	ldr	r2, [pc, #20]	; (8009190 <RemoteConfig::HandleTftpSet()+0x1c>)
 800917c:	6812      	ldr	r2, [r2, #0]
 800917e:	7992      	ldrb	r2, [r2, #6]
 8009180:	3a30      	subs	r2, #48	; 0x30
 8009182:	bf18      	it	ne
 8009184:	2201      	movne	r2, #1
 8009186:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800918a:	f000 bd3f 	b.w	8009c0c <RemoteConfig::PlatformHandleTftpSet()>
 800918e:	4770      	bx	lr
 8009190:	200000ec 	andcs	r0, r0, ip, ror #1

08009194 <RemoteConfig::HandleTftpGet()>:
 8009194:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009196:	4604      	mov	r4, r0
 8009198:	f000 fd40 	bl	8009c1c <RemoteConfig::PlatformHandleTftpGet()>
 800919c:	8ba3      	ldrh	r3, [r4, #28]
 800919e:	2b05      	cmp	r3, #5
 80091a0:	d116      	bne.n	80091d0 <RemoteConfig::HandleTftpGet()+0x3c>
 80091a2:	f894 1024 	ldrb.w	r1, [r4, #36]	; 0x24
 80091a6:	4d0b      	ldr	r5, [pc, #44]	; (80091d4 <RemoteConfig::HandleTftpGet()+0x40>)
 80091a8:	4a0b      	ldr	r2, [pc, #44]	; (80091d8 <RemoteConfig::HandleTftpGet()+0x44>)
 80091aa:	4b0c      	ldr	r3, [pc, #48]	; (80091dc <RemoteConfig::HandleTftpGet()+0x48>)
 80091ac:	6828      	ldr	r0, [r5, #0]
 80091ae:	2900      	cmp	r1, #0
 80091b0:	bf08      	it	eq
 80091b2:	4613      	moveq	r3, r2
 80091b4:	f240 31ff 	movw	r1, #1023	; 0x3ff
 80091b8:	4a09      	ldr	r2, [pc, #36]	; (80091e0 <RemoteConfig::HandleTftpGet()+0x4c>)
 80091ba:	f7ff ff19 	bl	8008ff0 <snprintf>
 80091be:	f642 1305 	movw	r3, #10501	; 0x2905
 80091c2:	b282      	uxth	r2, r0
 80091c4:	9300      	str	r3, [sp, #0]
 80091c6:	6829      	ldr	r1, [r5, #0]
 80091c8:	69a3      	ldr	r3, [r4, #24]
 80091ca:	7d20      	ldrb	r0, [r4, #20]
 80091cc:	f008 ffe2 	bl	8012194 <udp_send>
 80091d0:	b003      	add	sp, #12
 80091d2:	bd30      	pop	{r4, r5, pc}
 80091d4:	200000ec 	andcs	r0, r0, ip, ror #1
 80091d8:	080180d7 	stmdaeq	r1, {r0, r1, r2, r4, r6, r7, pc}
 80091dc:	080180d4 	stmdaeq	r1, {r2, r4, r6, r7, pc}
 80091e0:	080180e7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, pc}

080091e4 <RemoteConfig::HandleVersion()>:
 80091e4:	8b83      	ldrh	r3, [r0, #28]
 80091e6:	2b08      	cmp	r3, #8
 80091e8:	d114      	bne.n	8009214 <RemoteConfig::HandleVersion()+0x30>
 80091ea:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80091ec:	4d0a      	ldr	r5, [pc, #40]	; (8009218 <RemoteConfig::HandleVersion()+0x34>)
 80091ee:	4604      	mov	r4, r0
 80091f0:	f240 31ff 	movw	r1, #1023	; 0x3ff
 80091f4:	4b09      	ldr	r3, [pc, #36]	; (800921c <RemoteConfig::HandleVersion()+0x38>)
 80091f6:	4a0a      	ldr	r2, [pc, #40]	; (8009220 <RemoteConfig::HandleVersion()+0x3c>)
 80091f8:	6828      	ldr	r0, [r5, #0]
 80091fa:	f7ff fef9 	bl	8008ff0 <snprintf>
 80091fe:	f642 1305 	movw	r3, #10501	; 0x2905
 8009202:	9300      	str	r3, [sp, #0]
 8009204:	b282      	uxth	r2, r0
 8009206:	69a3      	ldr	r3, [r4, #24]
 8009208:	6829      	ldr	r1, [r5, #0]
 800920a:	7d20      	ldrb	r0, [r4, #20]
 800920c:	f008 ffc2 	bl	8012194 <udp_send>
 8009210:	b003      	add	sp, #12
 8009212:	bd30      	pop	{r4, r5, pc}
 8009214:	4770      	bx	lr
 8009216:	bf00      	nop
 8009218:	200000ec 	andcs	r0, r0, ip, ror #1
 800921c:	20013d9a 	mulcs	r1, sl, sp
 8009220:	080180f0 	stmdaeq	r1, {r4, r5, r6, r7, pc}

08009224 <RemoteConfig::HandleUptime()>:
 8009224:	7bc3      	ldrb	r3, [r0, #15]
 8009226:	b1e3      	cbz	r3, 8009262 <RemoteConfig::HandleUptime()+0x3e>
 8009228:	4b0e      	ldr	r3, [pc, #56]	; (8009264 <RemoteConfig::HandleUptime()+0x40>)
 800922a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800922c:	681a      	ldr	r2, [r3, #0]
 800922e:	8b83      	ldrh	r3, [r0, #28]
 8009230:	4604      	mov	r4, r0
 8009232:	2b07      	cmp	r3, #7
 8009234:	d113      	bne.n	800925e <RemoteConfig::HandleUptime()+0x3a>
 8009236:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800923a:	4d0b      	ldr	r5, [pc, #44]	; (8009268 <RemoteConfig::HandleUptime()+0x44>)
 800923c:	fbb2 f3f3 	udiv	r3, r2, r3
 8009240:	f240 31ff 	movw	r1, #1023	; 0x3ff
 8009244:	4a09      	ldr	r2, [pc, #36]	; (800926c <RemoteConfig::HandleUptime()+0x48>)
 8009246:	6828      	ldr	r0, [r5, #0]
 8009248:	f7ff fed2 	bl	8008ff0 <snprintf>
 800924c:	f642 1305 	movw	r3, #10501	; 0x2905
 8009250:	9300      	str	r3, [sp, #0]
 8009252:	b282      	uxth	r2, r0
 8009254:	69a3      	ldr	r3, [r4, #24]
 8009256:	6829      	ldr	r1, [r5, #0]
 8009258:	7d20      	ldrb	r0, [r4, #20]
 800925a:	f008 ff9b 	bl	8012194 <udp_send>
 800925e:	b003      	add	sp, #12
 8009260:	bd30      	pop	{r4, r5, pc}
 8009262:	4770      	bx	lr
 8009264:	20013e04 	andcs	r3, r1, r4, lsl #28
 8009268:	200000ec 	andcs	r0, r0, ip, ror #1
 800926c:	080180fb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r7, pc}

08009270 <RemoteConfig::HandleDisplaySet()>:
 8009270:	b538      	push	{r3, r4, r5, lr}
 8009272:	8b83      	ldrh	r3, [r0, #28]
 8009274:	2b09      	cmp	r3, #9
 8009276:	d113      	bne.n	80092a0 <RemoteConfig::HandleDisplaySet()+0x30>
 8009278:	4b0a      	ldr	r3, [pc, #40]	; (80092a4 <RemoteConfig::HandleDisplaySet()+0x34>)
 800927a:	681c      	ldr	r4, [r3, #0]
 800927c:	4b0a      	ldr	r3, [pc, #40]	; (80092a8 <RemoteConfig::HandleDisplaySet()+0x38>)
 800927e:	69a0      	ldr	r0, [r4, #24]
 8009280:	681b      	ldr	r3, [r3, #0]
 8009282:	7a5d      	ldrb	r5, [r3, #9]
 8009284:	f1a5 0330 	sub.w	r3, r5, #48	; 0x30
 8009288:	4259      	negs	r1, r3
 800928a:	4159      	adcs	r1, r3
 800928c:	b140      	cbz	r0, 80092a0 <RemoteConfig::HandleDisplaySet()+0x30>
 800928e:	6803      	ldr	r3, [r0, #0]
 8009290:	7421      	strb	r1, [r4, #16]
 8009292:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009294:	4798      	blx	r3
 8009296:	2d30      	cmp	r5, #48	; 0x30
 8009298:	bf1e      	ittt	ne
 800929a:	4b04      	ldrne	r3, [pc, #16]	; (80092ac <RemoteConfig::HandleDisplaySet()+0x3c>)
 800929c:	681b      	ldrne	r3, [r3, #0]
 800929e:	6063      	strne	r3, [r4, #4]
 80092a0:	bd38      	pop	{r3, r4, r5, pc}
 80092a2:	bf00      	nop
 80092a4:	20013cf4 	strdcs	r3, [r1], -r4
 80092a8:	200000ec 	andcs	r0, r0, ip, ror #1
 80092ac:	20013e04 	andcs	r3, r1, r4, lsl #28

080092b0 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>:
 80092b0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80092b4:	2500      	movs	r5, #0
 80092b6:	461f      	mov	r7, r3
 80092b8:	6083      	str	r3, [r0, #8]
 80092ba:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80092be:	4604      	mov	r4, r0
 80092c0:	4690      	mov	r8, r2
 80092c2:	4689      	mov	r9, r1
 80092c4:	f100 0a28 	add.w	sl, r0, #40	; 0x28
 80092c8:	e9c0 1200 	strd	r1, r2, [r0]
 80092cc:	4e13      	ldr	r6, [pc, #76]	; (800931c <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x6c>)
 80092ce:	e9c0 3505 	strd	r3, r5, [r0, #20]
 80092d2:	f8df b04c 	ldr.w	fp, [pc, #76]	; 8009320 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x70>
 80092d6:	60c5      	str	r5, [r0, #12]
 80092d8:	8205      	strh	r5, [r0, #16]
 80092da:	8385      	strh	r5, [r0, #28]
 80092dc:	6205      	str	r5, [r0, #32]
 80092de:	f880 5024 	strb.w	r5, [r0, #36]	; 0x24
 80092e2:	4650      	mov	r0, sl
 80092e4:	f000 fcda 	bl	8009c9c <HttpDaemon::HttpDaemon()>
 80092e8:	4b0e      	ldr	r3, [pc, #56]	; (8009324 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x74>)
 80092ea:	4631      	mov	r1, r6
 80092ec:	f8db 0000 	ldr.w	r0, [fp]
 80092f0:	601c      	str	r4, [r3, #0]
 80092f2:	f009 fc25 	bl	8012b40 <Network::MacAddressCopyTo(unsigned char*)>
 80092f6:	f642 1105 	movw	r1, #10501	; 0x2905
 80092fa:	f8db 0000 	ldr.w	r0, [fp]
 80092fe:	f886 9006 	strb.w	r9, [r6, #6]
 8009302:	f886 8007 	strb.w	r8, [r6, #7]
 8009306:	7237      	strb	r7, [r6, #8]
 8009308:	7275      	strb	r5, [r6, #9]
 800930a:	f009 fc13 	bl	8012b34 <Network::Begin(unsigned short)>
 800930e:	6160      	str	r0, [r4, #20]
 8009310:	4650      	mov	r0, sl
 8009312:	f000 fcdb 	bl	8009ccc <HttpDaemon::Start()>
 8009316:	4620      	mov	r0, r4
 8009318:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800931c:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 8009320:	200136bc 			; <UNDEFINED> instruction: 0x200136bc
 8009324:	20000114 	andcs	r0, r0, r4, lsl r1

08009328 <RemoteConfig::GetStringNode() const>:
 8009328:	2012      	movs	r0, #18
 800932a:	4b03      	ldr	r3, [pc, #12]	; (8009338 <RemoteConfig::GetStringNode() const+0x10>)
 800932c:	799a      	ldrb	r2, [r3, #6]
 800932e:	4b03      	ldr	r3, [pc, #12]	; (800933c <RemoteConfig::GetStringNode() const+0x14>)
 8009330:	fb00 3002 	mla	r0, r0, r2, r3
 8009334:	4770      	bx	lr
 8009336:	bf00      	nop
 8009338:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 800933c:	0801816b 	stmdaeq	r1, {r0, r1, r3, r5, r6, r8, pc}

08009340 <RemoteConfig::GetStringOutput() const>:
 8009340:	200c      	movs	r0, #12
 8009342:	4b03      	ldr	r3, [pc, #12]	; (8009350 <RemoteConfig::GetStringOutput() const+0x10>)
 8009344:	79da      	ldrb	r2, [r3, #7]
 8009346:	4b03      	ldr	r3, [pc, #12]	; (8009354 <RemoteConfig::GetStringOutput() const+0x14>)
 8009348:	fb00 3002 	mla	r0, r0, r2, r3
 800934c:	4770      	bx	lr
 800934e:	bf00      	nop
 8009350:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 8009354:	0801820d 	stmdaeq	r1, {r0, r2, r3, r9, pc}

08009358 <RemoteConfig::SetDisable(bool)>:
 8009358:	b538      	push	{r3, r4, r5, lr}
 800935a:	4604      	mov	r4, r0
 800935c:	7b03      	ldrb	r3, [r0, #12]
 800935e:	b161      	cbz	r1, 800937a <RemoteConfig::SetDisable(bool)+0x22>
 8009360:	b953      	cbnz	r3, 8009378 <RemoteConfig::SetDisable(bool)+0x20>
 8009362:	4b0c      	ldr	r3, [pc, #48]	; (8009394 <RemoteConfig::SetDisable(bool)+0x3c>)
 8009364:	f642 1105 	movw	r1, #10501	; 0x2905
 8009368:	6818      	ldr	r0, [r3, #0]
 800936a:	f009 fbe6 	bl	8012b3a <Network::End(unsigned short)>
 800936e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8009372:	6163      	str	r3, [r4, #20]
 8009374:	2301      	movs	r3, #1
 8009376:	7323      	strb	r3, [r4, #12]
 8009378:	bd38      	pop	{r3, r4, r5, pc}
 800937a:	2b00      	cmp	r3, #0
 800937c:	d0fc      	beq.n	8009378 <RemoteConfig::SetDisable(bool)+0x20>
 800937e:	4b05      	ldr	r3, [pc, #20]	; (8009394 <RemoteConfig::SetDisable(bool)+0x3c>)
 8009380:	460d      	mov	r5, r1
 8009382:	6818      	ldr	r0, [r3, #0]
 8009384:	f642 1105 	movw	r1, #10501	; 0x2905
 8009388:	f009 fbd4 	bl	8012b34 <Network::Begin(unsigned short)>
 800938c:	7325      	strb	r5, [r4, #12]
 800938e:	6160      	str	r0, [r4, #20]
 8009390:	e7f2      	b.n	8009378 <RemoteConfig::SetDisable(bool)+0x20>
 8009392:	bf00      	nop
 8009394:	200136bc 			; <UNDEFINED> instruction: 0x200136bc

08009398 <RemoteConfig::SetDisplayName(char const*)>:
 8009398:	2217      	movs	r2, #23
 800939a:	4809      	ldr	r0, [pc, #36]	; (80093c0 <RemoteConfig::SetDisplayName(char const*)+0x28>)
 800939c:	b508      	push	{r3, lr}
 800939e:	1e4b      	subs	r3, r1, #1
 80093a0:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 80093a4:	b931      	cbnz	r1, 80093b4 <RemoteConfig::SetDisplayName(char const*)+0x1c>
 80093a6:	f00c fcc5 	bl	8015d34 <memset>
 80093aa:	2200      	movs	r2, #0
 80093ac:	4b05      	ldr	r3, [pc, #20]	; (80093c4 <RemoteConfig::SetDisplayName(char const*)+0x2c>)
 80093ae:	f883 2020 	strb.w	r2, [r3, #32]
 80093b2:	bd08      	pop	{r3, pc}
 80093b4:	3a01      	subs	r2, #1
 80093b6:	f800 1b01 	strb.w	r1, [r0], #1
 80093ba:	d1f1      	bne.n	80093a0 <RemoteConfig::SetDisplayName(char const*)+0x8>
 80093bc:	e7f5      	b.n	80093aa <RemoteConfig::SetDisplayName(char const*)+0x12>
 80093be:	bf00      	nop
 80093c0:	200000f9 	strdcs	r0, [r0], -r9
 80093c4:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>

080093c8 <RemoteConfig::HandleGet(void*, unsigned int)>:
 80093c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80093ca:	4604      	mov	r4, r0
 80093cc:	4616      	mov	r6, r2
 80093ce:	460d      	mov	r5, r1
 80093d0:	4f27      	ldr	r7, [pc, #156]	; (8009470 <RemoteConfig::HandleGet(void*, unsigned int)+0xa8>)
 80093d2:	b085      	sub	sp, #20
 80093d4:	b9a9      	cbnz	r1, 8009402 <RemoteConfig::HandleGet(void*, unsigned int)+0x3a>
 80093d6:	f44f 737f 	mov.w	r3, #1020	; 0x3fc
 80093da:	6839      	ldr	r1, [r7, #0]
 80093dc:	aa03      	add	r2, sp, #12
 80093de:	3105      	adds	r1, #5
 80093e0:	9303      	str	r3, [sp, #12]
 80093e2:	f000 fbe9 	bl	8009bb8 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 80093e6:	1e03      	subs	r3, r0, #0
 80093e8:	da1b      	bge.n	8009422 <RemoteConfig::HandleGet(void*, unsigned int)+0x5a>
 80093ea:	f642 1305 	movw	r3, #10501	; 0x2905
 80093ee:	220b      	movs	r2, #11
 80093f0:	9300      	str	r3, [sp, #0]
 80093f2:	4920      	ldr	r1, [pc, #128]	; (8009474 <RemoteConfig::HandleGet(void*, unsigned int)+0xac>)
 80093f4:	69a3      	ldr	r3, [r4, #24]
 80093f6:	7d20      	ldrb	r0, [r4, #20]
 80093f8:	f008 fecc 	bl	8012194 <udp_send>
 80093fc:	200c      	movs	r0, #12
 80093fe:	b005      	add	sp, #20
 8009400:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009402:	9203      	str	r2, [sp, #12]
 8009404:	aa03      	add	r2, sp, #12
 8009406:	6039      	str	r1, [r7, #0]
 8009408:	f000 fbd6 	bl	8009bb8 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 800940c:	1e03      	subs	r3, r0, #0
 800940e:	da08      	bge.n	8009422 <RemoteConfig::HandleGet(void*, unsigned int)+0x5a>
 8009410:	2e0b      	cmp	r6, #11
 8009412:	4632      	mov	r2, r6
 8009414:	4628      	mov	r0, r5
 8009416:	bf28      	it	cs
 8009418:	220b      	movcs	r2, #11
 800941a:	4916      	ldr	r1, [pc, #88]	; (8009474 <RemoteConfig::HandleGet(void*, unsigned int)+0xac>)
 800941c:	f00c fc68 	bl	8015cf0 <memcpy>
 8009420:	e7ec      	b.n	80093fc <RemoteConfig::HandleGet(void*, unsigned int)+0x34>
 8009422:	201c      	movs	r0, #28
 8009424:	4343      	muls	r3, r0
 8009426:	4914      	ldr	r1, [pc, #80]	; (8009478 <RemoteConfig::HandleGet(void*, unsigned int)+0xb0>)
 8009428:	18ca      	adds	r2, r1, r3
 800942a:	6852      	ldr	r2, [r2, #4]
 800942c:	58cb      	ldr	r3, [r1, r3]
 800942e:	ea4f 0c62 	mov.w	ip, r2, asr #1
 8009432:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8009436:	07d2      	lsls	r2, r2, #31
 8009438:	bf48      	it	mi
 800943a:	f854 200c 	ldrmi.w	r2, [r4, ip]
 800943e:	a903      	add	r1, sp, #12
 8009440:	bf48      	it	mi
 8009442:	58d3      	ldrmi	r3, [r2, r3]
 8009444:	4798      	blx	r3
 8009446:	9a03      	ldr	r2, [sp, #12]
 8009448:	b955      	cbnz	r5, 8009460 <RemoteConfig::HandleGet(void*, unsigned int)+0x98>
 800944a:	f642 1305 	movw	r3, #10501	; 0x2905
 800944e:	6839      	ldr	r1, [r7, #0]
 8009450:	9300      	str	r3, [sp, #0]
 8009452:	7d20      	ldrb	r0, [r4, #20]
 8009454:	69a3      	ldr	r3, [r4, #24]
 8009456:	b292      	uxth	r2, r2
 8009458:	f008 fe9c 	bl	8012194 <udp_send>
 800945c:	9803      	ldr	r0, [sp, #12]
 800945e:	e7ce      	b.n	80093fe <RemoteConfig::HandleGet(void*, unsigned int)+0x36>
 8009460:	42b2      	cmp	r2, r6
 8009462:	bf28      	it	cs
 8009464:	4632      	movcs	r2, r6
 8009466:	4628      	mov	r0, r5
 8009468:	6839      	ldr	r1, [r7, #0]
 800946a:	f00c fc4c 	bl	8015d06 <memmove>
 800946e:	e7f5      	b.n	800945c <RemoteConfig::HandleGet(void*, unsigned int)+0x94>
 8009470:	200000ec 	andcs	r0, r0, ip, ror #1
 8009474:	08018108 	stmdaeq	r1, {r3, r8, pc}
 8009478:	080183cc 	stmdaeq	r1, {r2, r3, r6, r7, r8, r9, pc}

0800947c <RemoteConfig::HandleGetNoParams()>:
 800947c:	2200      	movs	r2, #0
 800947e:	4611      	mov	r1, r2
 8009480:	f7ff bfa2 	b.w	80093c8 <RemoteConfig::HandleGet(void*, unsigned int)>

08009484 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)>:
 8009484:	b510      	push	{r4, lr}
 8009486:	460c      	mov	r4, r1
 8009488:	4b07      	ldr	r3, [pc, #28]	; (80094a8 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x24>)
 800948a:	b08a      	sub	sp, #40	; 0x28
 800948c:	6819      	ldr	r1, [r3, #0]
 800948e:	a801      	add	r0, sp, #4
 8009490:	f000 f9ee 	bl	8009870 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 8009494:	4905      	ldr	r1, [pc, #20]	; (80094ac <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x28>)
 8009496:	4623      	mov	r3, r4
 8009498:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800949c:	6809      	ldr	r1, [r1, #0]
 800949e:	a801      	add	r0, sp, #4
 80094a0:	f000 fb0a 	bl	8009ab8 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>
 80094a4:	b00a      	add	sp, #40	; 0x28
 80094a6:	bd10      	pop	{r4, pc}
 80094a8:	2000bdd0 	ldrdcs	fp, [r0], -r0
 80094ac:	200000ec 	andcs	r0, r0, ip, ror #1

080094b0 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)>:
 80094b0:	b513      	push	{r0, r1, r4, lr}
 80094b2:	460c      	mov	r4, r1
 80094b4:	4b07      	ldr	r3, [pc, #28]	; (80094d4 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x24>)
 80094b6:	a801      	add	r0, sp, #4
 80094b8:	6819      	ldr	r1, [r3, #0]
 80094ba:	f009 fe8f 	bl	80131dc <NetworkParams::NetworkParams(NetworkParamsStore*)>
 80094be:	4906      	ldr	r1, [pc, #24]	; (80094d8 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x28>)
 80094c0:	4623      	mov	r3, r4
 80094c2:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80094c6:	6809      	ldr	r1, [r1, #0]
 80094c8:	a801      	add	r0, sp, #4
 80094ca:	f00a f8f5 	bl	80136b8 <NetworkParams::Save(char*, unsigned int, unsigned int&)>
 80094ce:	b002      	add	sp, #8
 80094d0:	bd10      	pop	{r4, pc}
 80094d2:	bf00      	nop
 80094d4:	2000bdc8 	andcs	fp, r0, r8, asr #27
 80094d8:	200000ec 	andcs	r0, r0, ip, ror #1

080094dc <RemoteConfig::HandleGetArtnetTxt(unsigned int&)>:
 80094dc:	b510      	push	{r4, lr}
 80094de:	460c      	mov	r4, r1
 80094e0:	4b07      	ldr	r3, [pc, #28]	; (8009500 <RemoteConfig::HandleGetArtnetTxt(unsigned int&)+0x24>)
 80094e2:	b0a4      	sub	sp, #144	; 0x90
 80094e4:	6819      	ldr	r1, [r3, #0]
 80094e6:	a801      	add	r0, sp, #4
 80094e8:	f002 feaa 	bl	800c240 <ArtNetParams::ArtNetParams(ArtNetParamsStore*)>
 80094ec:	4905      	ldr	r1, [pc, #20]	; (8009504 <RemoteConfig::HandleGetArtnetTxt(unsigned int&)+0x28>)
 80094ee:	4623      	mov	r3, r4
 80094f0:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80094f4:	6809      	ldr	r1, [r1, #0]
 80094f6:	a801      	add	r0, sp, #4
 80094f8:	f003 fa70 	bl	800c9dc <ArtNetParams::Save(char*, unsigned int, unsigned int&)>
 80094fc:	b024      	add	sp, #144	; 0x90
 80094fe:	bd10      	pop	{r4, pc}
 8009500:	2000bdc0 	andcs	fp, r0, r0, asr #27
 8009504:	200000ec 	andcs	r0, r0, ip, ror #1

08009508 <RemoteConfig::HandleGetDevicesTxt(unsigned int&)>:
 8009508:	b510      	push	{r4, lr}
 800950a:	460c      	mov	r4, r1
 800950c:	4b07      	ldr	r3, [pc, #28]	; (800952c <RemoteConfig::HandleGetDevicesTxt(unsigned int&)+0x24>)
 800950e:	b08c      	sub	sp, #48	; 0x30
 8009510:	6819      	ldr	r1, [r3, #0]
 8009512:	a801      	add	r0, sp, #4
 8009514:	f005 ff60 	bl	800f3d8 <WS28xxDmxParams::WS28xxDmxParams(WS28xxDmxParamsStore*)>
 8009518:	4905      	ldr	r1, [pc, #20]	; (8009530 <RemoteConfig::HandleGetDevicesTxt(unsigned int&)+0x28>)
 800951a:	4623      	mov	r3, r4
 800951c:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8009520:	6809      	ldr	r1, [r1, #0]
 8009522:	a801      	add	r0, sp, #4
 8009524:	f006 fa1c 	bl	800f960 <WS28xxDmxParams::Save(char*, unsigned int, unsigned int&)>
 8009528:	b00c      	add	sp, #48	; 0x30
 800952a:	bd10      	pop	{r4, pc}
 800952c:	2000bdd4 	ldrdcs	fp, [r0], -r4
 8009530:	200000ec 	andcs	r0, r0, ip, ror #1

08009534 <RemoteConfig::HandleGetDisplayTxt(unsigned int&)>:
 8009534:	b510      	push	{r4, lr}
 8009536:	460c      	mov	r4, r1
 8009538:	4b07      	ldr	r3, [pc, #28]	; (8009558 <RemoteConfig::HandleGetDisplayTxt(unsigned int&)+0x24>)
 800953a:	b08a      	sub	sp, #40	; 0x28
 800953c:	6819      	ldr	r1, [r3, #0]
 800953e:	4668      	mov	r0, sp
 8009540:	f00b f866 	bl	8014610 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 8009544:	4905      	ldr	r1, [pc, #20]	; (800955c <RemoteConfig::HandleGetDisplayTxt(unsigned int&)+0x28>)
 8009546:	4623      	mov	r3, r4
 8009548:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800954c:	4668      	mov	r0, sp
 800954e:	6809      	ldr	r1, [r1, #0]
 8009550:	f00b f994 	bl	801487c <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)>
 8009554:	b00a      	add	sp, #40	; 0x28
 8009556:	bd10      	pop	{r4, pc}
 8009558:	2000bdc4 	andcs	fp, r0, r4, asr #27
 800955c:	200000ec 	andcs	r0, r0, ip, ror #1

08009560 <RemoteConfig::HandleSet(void*, unsigned int)>:
 8009560:	b530      	push	{r4, r5, lr}
 8009562:	b085      	sub	sp, #20
 8009564:	4604      	mov	r4, r0
 8009566:	9201      	str	r2, [sp, #4]
 8009568:	b9c9      	cbnz	r1, 800959e <RemoteConfig::HandleSet(void*, unsigned int)+0x3e>
 800956a:	f240 33ff 	movw	r3, #1023	; 0x3ff
 800956e:	9303      	str	r3, [sp, #12]
 8009570:	4b1b      	ldr	r3, [pc, #108]	; (80095e0 <RemoteConfig::HandleSet(void*, unsigned int)+0x80>)
 8009572:	aa03      	add	r2, sp, #12
 8009574:	6819      	ldr	r1, [r3, #0]
 8009576:	3101      	adds	r1, #1
 8009578:	f000 fb1e 	bl	8009bb8 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 800957c:	2800      	cmp	r0, #0
 800957e:	db24      	blt.n	80095ca <RemoteConfig::HandleSet(void*, unsigned int)+0x6a>
 8009580:	221c      	movs	r2, #28
 8009582:	4b18      	ldr	r3, [pc, #96]	; (80095e4 <RemoteConfig::HandleSet(void*, unsigned int)+0x84>)
 8009584:	fb02 3300 	mla	r3, r2, r0, r3
 8009588:	68da      	ldr	r2, [r3, #12]
 800958a:	689b      	ldr	r3, [r3, #8]
 800958c:	1051      	asrs	r1, r2, #1
 800958e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8009592:	07d2      	lsls	r2, r2, #31
 8009594:	bf44      	itt	mi
 8009596:	5862      	ldrmi	r2, [r4, r1]
 8009598:	58d3      	ldrmi	r3, [r2, r3]
 800959a:	4798      	blx	r3
 800959c:	e015      	b.n	80095ca <RemoteConfig::HandleSet(void*, unsigned int)+0x6a>
 800959e:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 80095a2:	4613      	mov	r3, r2
 80095a4:	d811      	bhi.n	80095ca <RemoteConfig::HandleSet(void*, unsigned int)+0x6a>
 80095a6:	2200      	movs	r2, #0
 80095a8:	460d      	mov	r5, r1
 80095aa:	490f      	ldr	r1, [pc, #60]	; (80095e8 <RemoteConfig::HandleSet(void*, unsigned int)+0x88>)
 80095ac:	6202      	str	r2, [r0, #32]
 80095ae:	7809      	ldrb	r1, [r1, #0]
 80095b0:	b29b      	uxth	r3, r3
 80095b2:	07c9      	lsls	r1, r1, #31
 80095b4:	d50b      	bpl.n	80095ce <RemoteConfig::HandleSet(void*, unsigned int)+0x6e>
 80095b6:	7829      	ldrb	r1, [r5, #0]
 80095b8:	297b      	cmp	r1, #123	; 0x7b
 80095ba:	d108      	bne.n	80095ce <RemoteConfig::HandleSet(void*, unsigned int)+0x6e>
 80095bc:	3b01      	subs	r3, #1
 80095be:	4628      	mov	r0, r5
 80095c0:	b299      	uxth	r1, r3
 80095c2:	f00b fad3 	bl	8014b6c <properties::convert_json_file(char*, unsigned short, bool)>
 80095c6:	2800      	cmp	r0, #0
 80095c8:	dc08      	bgt.n	80095dc <RemoteConfig::HandleSet(void*, unsigned int)+0x7c>
 80095ca:	b005      	add	sp, #20
 80095cc:	bd30      	pop	{r4, r5, pc}
 80095ce:	83a3      	strh	r3, [r4, #28]
 80095d0:	4b03      	ldr	r3, [pc, #12]	; (80095e0 <RemoteConfig::HandleSet(void*, unsigned int)+0x80>)
 80095d2:	4620      	mov	r0, r4
 80095d4:	601d      	str	r5, [r3, #0]
 80095d6:	aa01      	add	r2, sp, #4
 80095d8:	1c69      	adds	r1, r5, #1
 80095da:	e7cd      	b.n	8009578 <RemoteConfig::HandleSet(void*, unsigned int)+0x18>
 80095dc:	83a0      	strh	r0, [r4, #28]
 80095de:	e7f7      	b.n	80095d0 <RemoteConfig::HandleSet(void*, unsigned int)+0x70>
 80095e0:	200000ec 	andcs	r0, r0, ip, ror #1
 80095e4:	080183cc 	stmdaeq	r1, {r2, r3, r6, r7, r8, r9, pc}
 80095e8:	20013cf0 	strdcs	r3, [r1], -r0

080095ec <RemoteConfig::Run()>:
 80095ec:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80095f0:	7b03      	ldrb	r3, [r0, #12]
 80095f2:	2b00      	cmp	r3, #0
 80095f4:	d15a      	bne.n	80096ac <RemoteConfig::Run()+0xc0>
 80095f6:	4604      	mov	r4, r0
 80095f8:	4d47      	ldr	r5, [pc, #284]	; (8009718 <RemoteConfig::Run()+0x12c>)
 80095fa:	3028      	adds	r0, #40	; 0x28
 80095fc:	f000 fde0 	bl	800a1c0 <HttpDaemon::Run()>
 8009600:	4629      	mov	r1, r5
 8009602:	7d20      	ldrb	r0, [r4, #20]
 8009604:	f10d 030e 	add.w	r3, sp, #14
 8009608:	f104 0218 	add.w	r2, r4, #24
 800960c:	f008 fd9c 	bl	8012148 <udp_recv2>
 8009610:	2803      	cmp	r0, #3
 8009612:	83a0      	strh	r0, [r4, #28]
 8009614:	d94a      	bls.n	80096ac <RemoteConfig::Run()+0xc0>
 8009616:	682b      	ldr	r3, [r5, #0]
 8009618:	181a      	adds	r2, r3, r0
 800961a:	f812 2c01 	ldrb.w	r2, [r2, #-1]
 800961e:	2a0a      	cmp	r2, #10
 8009620:	bf04      	itt	eq
 8009622:	f100 30ff 	addeq.w	r0, r0, #4294967295	; 0xffffffff
 8009626:	83a0      	strheq	r0, [r4, #28]
 8009628:	7819      	ldrb	r1, [r3, #0]
 800962a:	293f      	cmp	r1, #63	; 0x3f
 800962c:	d135      	bne.n	800969a <RemoteConfig::Run()+0xae>
 800962e:	483b      	ldr	r0, [pc, #236]	; (800971c <RemoteConfig::Run()+0x130>)
 8009630:	2200      	movs	r2, #0
 8009632:	4607      	mov	r7, r0
 8009634:	8ba1      	ldrh	r1, [r4, #28]
 8009636:	3901      	subs	r1, #1
 8009638:	b289      	uxth	r1, r1
 800963a:	83a1      	strh	r1, [r4, #28]
 800963c:	7b86      	ldrb	r6, [r0, #14]
 800963e:	8985      	ldrh	r5, [r0, #12]
 8009640:	b16e      	cbz	r6, 800965e <RemoteConfig::Run()+0x72>
 8009642:	428d      	cmp	r5, r1
 8009644:	d30d      	bcc.n	8009662 <RemoteConfig::Run()+0x76>
 8009646:	3201      	adds	r2, #1
 8009648:	2a09      	cmp	r2, #9
 800964a:	f100 0010 	add.w	r0, r0, #16
 800964e:	d1f5      	bne.n	800963c <RemoteConfig::Run()+0x50>
 8009650:	f642 1305 	movw	r3, #10501	; 0x2905
 8009654:	9300      	str	r3, [sp, #0]
 8009656:	2208      	movs	r2, #8
 8009658:	69a3      	ldr	r3, [r4, #24]
 800965a:	4931      	ldr	r1, [pc, #196]	; (8009720 <RemoteConfig::Run()+0x134>)
 800965c:	e050      	b.n	8009700 <RemoteConfig::Run()+0x114>
 800965e:	428d      	cmp	r5, r1
 8009660:	d1f1      	bne.n	8009646 <RemoteConfig::Run()+0x5a>
 8009662:	6886      	ldr	r6, [r0, #8]
 8009664:	f103 0c01 	add.w	ip, r3, #1
 8009668:	4435      	add	r5, r6
 800966a:	42ae      	cmp	r6, r5
 800966c:	d006      	beq.n	800967c <RemoteConfig::Run()+0x90>
 800966e:	f81c 8b01 	ldrb.w	r8, [ip], #1
 8009672:	f816 eb01 	ldrb.w	lr, [r6], #1
 8009676:	45f0      	cmp	r8, lr
 8009678:	d0f7      	beq.n	800966a <RemoteConfig::Run()+0x7e>
 800967a:	e7e4      	b.n	8009646 <RemoteConfig::Run()+0x5a>
 800967c:	0113      	lsls	r3, r2, #4
 800967e:	eb07 1202 	add.w	r2, r7, r2, lsl #4
 8009682:	6852      	ldr	r2, [r2, #4]
 8009684:	58fb      	ldr	r3, [r7, r3]
 8009686:	1051      	asrs	r1, r2, #1
 8009688:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800968c:	07d2      	lsls	r2, r2, #31
 800968e:	d401      	bmi.n	8009694 <RemoteConfig::Run()+0xa8>
 8009690:	4798      	blx	r3
 8009692:	e00b      	b.n	80096ac <RemoteConfig::Run()+0xc0>
 8009694:	5862      	ldr	r2, [r4, r1]
 8009696:	58d3      	ldr	r3, [r2, r3]
 8009698:	e7fa      	b.n	8009690 <RemoteConfig::Run()+0xa4>
 800969a:	7b62      	ldrb	r2, [r4, #13]
 800969c:	b932      	cbnz	r2, 80096ac <RemoteConfig::Run()+0xc0>
 800969e:	2923      	cmp	r1, #35	; 0x23
 80096a0:	d107      	bne.n	80096b2 <RemoteConfig::Run()+0xc6>
 80096a2:	4611      	mov	r1, r2
 80096a4:	4620      	mov	r0, r4
 80096a6:	6222      	str	r2, [r4, #32]
 80096a8:	f7ff ff5a 	bl	8009560 <RemoteConfig::HandleSet(void*, unsigned int)>
 80096ac:	b004      	add	sp, #16
 80096ae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80096b2:	2921      	cmp	r1, #33	; 0x21
 80096b4:	d1fa      	bne.n	80096ac <RemoteConfig::Run()+0xc0>
 80096b6:	8ba2      	ldrh	r2, [r4, #28]
 80096b8:	3a01      	subs	r2, #1
 80096ba:	b292      	uxth	r2, r2
 80096bc:	2a05      	cmp	r2, #5
 80096be:	83a2      	strh	r2, [r4, #28]
 80096c0:	d918      	bls.n	80096f4 <RemoteConfig::Run()+0x108>
 80096c2:	1c59      	adds	r1, r3, #1
 80096c4:	4608      	mov	r0, r1
 80096c6:	4d17      	ldr	r5, [pc, #92]	; (8009724 <RemoteConfig::Run()+0x138>)
 80096c8:	f103 0c06 	add.w	ip, r3, #6
 80096cc:	4560      	cmp	r0, ip
 80096ce:	d01b      	beq.n	8009708 <RemoteConfig::Run()+0x11c>
 80096d0:	f810 7b01 	ldrb.w	r7, [r0], #1
 80096d4:	f815 6b01 	ldrb.w	r6, [r5], #1
 80096d8:	42b7      	cmp	r7, r6
 80096da:	d0f7      	beq.n	80096cc <RemoteConfig::Run()+0xe0>
 80096dc:	2a08      	cmp	r2, #8
 80096de:	d909      	bls.n	80096f4 <RemoteConfig::Run()+0x108>
 80096e0:	4a11      	ldr	r2, [pc, #68]	; (8009728 <RemoteConfig::Run()+0x13c>)
 80096e2:	3309      	adds	r3, #9
 80096e4:	428b      	cmp	r3, r1
 80096e6:	d015      	beq.n	8009714 <RemoteConfig::Run()+0x128>
 80096e8:	f811 5b01 	ldrb.w	r5, [r1], #1
 80096ec:	f812 0b01 	ldrb.w	r0, [r2], #1
 80096f0:	4285      	cmp	r5, r0
 80096f2:	d0f7      	beq.n	80096e4 <RemoteConfig::Run()+0xf8>
 80096f4:	f642 1305 	movw	r3, #10501	; 0x2905
 80096f8:	2208      	movs	r2, #8
 80096fa:	9300      	str	r3, [sp, #0]
 80096fc:	69a3      	ldr	r3, [r4, #24]
 80096fe:	490b      	ldr	r1, [pc, #44]	; (800972c <RemoteConfig::Run()+0x140>)
 8009700:	7d20      	ldrb	r0, [r4, #20]
 8009702:	f008 fd47 	bl	8012194 <udp_send>
 8009706:	e7d1      	b.n	80096ac <RemoteConfig::Run()+0xc0>
 8009708:	2300      	movs	r3, #0
 800970a:	4a09      	ldr	r2, [pc, #36]	; (8009730 <RemoteConfig::Run()+0x144>)
 800970c:	011b      	lsls	r3, r3, #4
 800970e:	4620      	mov	r0, r4
 8009710:	58d3      	ldr	r3, [r2, r3]
 8009712:	e7bd      	b.n	8009690 <RemoteConfig::Run()+0xa4>
 8009714:	2301      	movs	r3, #1
 8009716:	e7f8      	b.n	800970a <RemoteConfig::Run()+0x11e>
 8009718:	200000ec 	andcs	r0, r0, ip, ror #1
 800971c:	080182a0 	stmdaeq	r1, {r5, r7, r9, pc}
 8009720:	0801812c 	stmdaeq	r1, {r2, r3, r5, r8, pc}
 8009724:	08018114 	stmdaeq	r1, {r2, r4, r8, pc}
 8009728:	0801811a 	stmdaeq	r1, {r1, r3, r4, r8, pc}
 800972c:	08018123 	stmdaeq	r1, {r0, r1, r5, r8, pc}
 8009730:	08018330 	stmdaeq	r1, {r4, r5, r8, r9, pc}

08009734 <RemoteConfig::HandleSetRconfig()>:
 8009734:	b510      	push	{r4, lr}
 8009736:	4604      	mov	r4, r0
 8009738:	4b08      	ldr	r3, [pc, #32]	; (800975c <RemoteConfig::HandleSetRconfig()+0x28>)
 800973a:	b08a      	sub	sp, #40	; 0x28
 800973c:	6819      	ldr	r1, [r3, #0]
 800973e:	a801      	add	r0, sp, #4
 8009740:	f000 f896 	bl	8009870 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 8009744:	4b06      	ldr	r3, [pc, #24]	; (8009760 <RemoteConfig::HandleSetRconfig()+0x2c>)
 8009746:	8ba2      	ldrh	r2, [r4, #28]
 8009748:	6819      	ldr	r1, [r3, #0]
 800974a:	a801      	add	r0, sp, #4
 800974c:	f000 f8a6 	bl	800989c <RemoteConfigParams::Load(char const*, unsigned int)>
 8009750:	4621      	mov	r1, r4
 8009752:	a801      	add	r0, sp, #4
 8009754:	f000 f9bd 	bl	8009ad2 <RemoteConfigParams::Set(RemoteConfig*)>
 8009758:	b00a      	add	sp, #40	; 0x28
 800975a:	bd10      	pop	{r4, pc}
 800975c:	2000bdd0 	ldrdcs	fp, [r0], -r0
 8009760:	200000ec 	andcs	r0, r0, ip, ror #1

08009764 <RemoteConfig::HandleSetNetworkTxt()>:
 8009764:	b513      	push	{r0, r1, r4, lr}
 8009766:	4604      	mov	r4, r0
 8009768:	4b06      	ldr	r3, [pc, #24]	; (8009784 <RemoteConfig::HandleSetNetworkTxt()+0x20>)
 800976a:	a801      	add	r0, sp, #4
 800976c:	6819      	ldr	r1, [r3, #0]
 800976e:	f009 fd35 	bl	80131dc <NetworkParams::NetworkParams(NetworkParamsStore*)>
 8009772:	4b05      	ldr	r3, [pc, #20]	; (8009788 <RemoteConfig::HandleSetNetworkTxt()+0x24>)
 8009774:	8ba2      	ldrh	r2, [r4, #28]
 8009776:	6819      	ldr	r1, [r3, #0]
 8009778:	a801      	add	r0, sp, #4
 800977a:	f009 fd4f 	bl	801321c <NetworkParams::Load(char const*, unsigned int)>
 800977e:	b002      	add	sp, #8
 8009780:	bd10      	pop	{r4, pc}
 8009782:	bf00      	nop
 8009784:	2000bdc8 	andcs	fp, r0, r8, asr #27
 8009788:	200000ec 	andcs	r0, r0, ip, ror #1

0800978c <RemoteConfig::HandleSetArtnetTxt()>:
 800978c:	b510      	push	{r4, lr}
 800978e:	4604      	mov	r4, r0
 8009790:	4b06      	ldr	r3, [pc, #24]	; (80097ac <RemoteConfig::HandleSetArtnetTxt()+0x20>)
 8009792:	b0a4      	sub	sp, #144	; 0x90
 8009794:	6819      	ldr	r1, [r3, #0]
 8009796:	a801      	add	r0, sp, #4
 8009798:	f002 fd52 	bl	800c240 <ArtNetParams::ArtNetParams(ArtNetParamsStore*)>
 800979c:	4b04      	ldr	r3, [pc, #16]	; (80097b0 <RemoteConfig::HandleSetArtnetTxt()+0x24>)
 800979e:	8ba2      	ldrh	r2, [r4, #28]
 80097a0:	6819      	ldr	r1, [r3, #0]
 80097a2:	a801      	add	r0, sp, #4
 80097a4:	f002 fd7e 	bl	800c2a4 <ArtNetParams::Load(char const*, unsigned int)>
 80097a8:	b024      	add	sp, #144	; 0x90
 80097aa:	bd10      	pop	{r4, pc}
 80097ac:	2000bdc0 	andcs	fp, r0, r0, asr #27
 80097b0:	200000ec 	andcs	r0, r0, ip, ror #1

080097b4 <RemoteConfig::HandleSetDevicesTxt()>:
 80097b4:	b510      	push	{r4, lr}
 80097b6:	4604      	mov	r4, r0
 80097b8:	4b06      	ldr	r3, [pc, #24]	; (80097d4 <RemoteConfig::HandleSetDevicesTxt()+0x20>)
 80097ba:	b08c      	sub	sp, #48	; 0x30
 80097bc:	6819      	ldr	r1, [r3, #0]
 80097be:	a801      	add	r0, sp, #4
 80097c0:	f005 fe0a 	bl	800f3d8 <WS28xxDmxParams::WS28xxDmxParams(WS28xxDmxParamsStore*)>
 80097c4:	4b04      	ldr	r3, [pc, #16]	; (80097d8 <RemoteConfig::HandleSetDevicesTxt()+0x24>)
 80097c6:	8ba2      	ldrh	r2, [r4, #28]
 80097c8:	6819      	ldr	r1, [r3, #0]
 80097ca:	a801      	add	r0, sp, #4
 80097cc:	f005 fe4c 	bl	800f468 <WS28xxDmxParams::Load(char const*, unsigned int)>
 80097d0:	b00c      	add	sp, #48	; 0x30
 80097d2:	bd10      	pop	{r4, pc}
 80097d4:	2000bdd4 	ldrdcs	fp, [r0], -r4
 80097d8:	200000ec 	andcs	r0, r0, ip, ror #1

080097dc <RemoteConfig::HandleSetDisplayTxt()>:
 80097dc:	b510      	push	{r4, lr}
 80097de:	4604      	mov	r4, r0
 80097e0:	4b06      	ldr	r3, [pc, #24]	; (80097fc <RemoteConfig::HandleSetDisplayTxt()+0x20>)
 80097e2:	b08a      	sub	sp, #40	; 0x28
 80097e4:	6819      	ldr	r1, [r3, #0]
 80097e6:	4668      	mov	r0, sp
 80097e8:	f00a ff12 	bl	8014610 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 80097ec:	4b04      	ldr	r3, [pc, #16]	; (8009800 <RemoteConfig::HandleSetDisplayTxt()+0x24>)
 80097ee:	4668      	mov	r0, sp
 80097f0:	8ba2      	ldrh	r2, [r4, #28]
 80097f2:	6819      	ldr	r1, [r3, #0]
 80097f4:	f00a ff26 	bl	8014644 <DisplayUdfParams::Load(char const*, unsigned int)>
 80097f8:	b00a      	add	sp, #40	; 0x28
 80097fa:	bd10      	pop	{r4, pc}
 80097fc:	2000bdc4 	andcs	fp, r0, r4, asr #27
 8009800:	200000ec 	andcs	r0, r0, ip, ror #1

08009804 <RemoteConfig::HandleFactory()>:
 8009804:	b538      	push	{r3, r4, r5, lr}
 8009806:	2400      	movs	r4, #0
 8009808:	4d04      	ldr	r5, [pc, #16]	; (800981c <RemoteConfig::HandleFactory()+0x18>)
 800980a:	4621      	mov	r1, r4
 800980c:	6828      	ldr	r0, [r5, #0]
 800980e:	3401      	adds	r4, #1
 8009810:	f007 f8f4 	bl	80109fc <SpiFlashStore::ResetSetList(spiflashstore::Store)>
 8009814:	2c1c      	cmp	r4, #28
 8009816:	d1f8      	bne.n	800980a <RemoteConfig::HandleFactory()+0x6>
 8009818:	bd38      	pop	{r3, r4, r5, pc}
 800981a:	bf00      	nop
 800981c:	2000bdb8 			; <UNDEFINED> instruction: 0x2000bdb8

08009820 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>:
 8009820:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009822:	460b      	mov	r3, r1
 8009824:	8885      	ldrh	r5, [r0, #4]
 8009826:	88c1      	ldrh	r1, [r0, #6]
 8009828:	42a9      	cmp	r1, r5
 800982a:	d214      	bcs.n	8009856 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x36>
 800982c:	4604      	mov	r4, r0
 800982e:	6800      	ldr	r0, [r0, #0]
 8009830:	1a6d      	subs	r5, r5, r1
 8009832:	4408      	add	r0, r1
 8009834:	7a21      	ldrb	r1, [r4, #8]
 8009836:	b91a      	cbnz	r2, 8009840 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x20>
 8009838:	b919      	cbnz	r1, 8009842 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x22>
 800983a:	4a0a      	ldr	r2, [pc, #40]	; (8009864 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x44>)
 800983c:	9100      	str	r1, [sp, #0]
 800983e:	e002      	b.n	8009846 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 8009840:	b159      	cbz	r1, 800985a <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x3a>
 8009842:	9200      	str	r2, [sp, #0]
 8009844:	4a08      	ldr	r2, [pc, #32]	; (8009868 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x48>)
 8009846:	4629      	mov	r1, r5
 8009848:	f7ff fbd2 	bl	8008ff0 <snprintf>
 800984c:	4285      	cmp	r5, r0
 800984e:	bfa2      	ittt	ge
 8009850:	88e3      	ldrhge	r3, [r4, #6]
 8009852:	181b      	addge	r3, r3, r0
 8009854:	80e3      	strhge	r3, [r4, #6]
 8009856:	b003      	add	sp, #12
 8009858:	bd30      	pop	{r4, r5, pc}
 800985a:	2201      	movs	r2, #1
 800985c:	9200      	str	r2, [sp, #0]
 800985e:	4a03      	ldr	r2, [pc, #12]	; (800986c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x4c>)
 8009860:	e7f1      	b.n	8009846 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 8009862:	bf00      	nop
 8009864:	08018359 	stmdaeq	r1, {r0, r3, r4, r6, r8, r9, pc}
 8009868:	08018350 	stmdaeq	r1, {r4, r6, r8, r9, pc}
 800986c:	0801835a 	stmdaeq	r1, {r1, r3, r4, r6, r8, r9, pc}

08009870 <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>:
 8009870:	b510      	push	{r4, lr}
 8009872:	4604      	mov	r4, r0
 8009874:	2220      	movs	r2, #32
 8009876:	f840 1b04 	str.w	r1, [r0], #4
 800987a:	2100      	movs	r1, #0
 800987c:	f00c fa5a 	bl	8015d34 <memset>
 8009880:	4620      	mov	r0, r4
 8009882:	bd10      	pop	{r4, pc}

08009884 <RemoteConfigParams::Load()>:
 8009884:	b508      	push	{r3, lr}
 8009886:	2300      	movs	r3, #0
 8009888:	4601      	mov	r1, r0
 800988a:	6043      	str	r3, [r0, #4]
 800988c:	6800      	ldr	r0, [r0, #0]
 800988e:	b120      	cbz	r0, 800989a <RemoteConfigParams::Load()+0x16>
 8009890:	6803      	ldr	r3, [r0, #0]
 8009892:	3104      	adds	r1, #4
 8009894:	68db      	ldr	r3, [r3, #12]
 8009896:	4798      	blx	r3
 8009898:	2001      	movs	r0, #1
 800989a:	bd08      	pop	{r3, pc}

0800989c <RemoteConfigParams::Load(char const*, unsigned int)>:
 800989c:	2300      	movs	r3, #0
 800989e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80098a0:	460d      	mov	r5, r1
 80098a2:	4616      	mov	r6, r2
 80098a4:	4604      	mov	r4, r0
 80098a6:	6043      	str	r3, [r0, #4]
 80098a8:	4602      	mov	r2, r0
 80098aa:	490a      	ldr	r1, [pc, #40]	; (80098d4 <RemoteConfigParams::Load(char const*, unsigned int)+0x38>)
 80098ac:	4668      	mov	r0, sp
 80098ae:	f00b fadb 	bl	8014e68 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 80098b2:	4632      	mov	r2, r6
 80098b4:	4629      	mov	r1, r5
 80098b6:	4668      	mov	r0, sp
 80098b8:	f00b fada 	bl	8014e70 <ReadConfigFile::Read(char const*, unsigned int)>
 80098bc:	4621      	mov	r1, r4
 80098be:	f851 0b04 	ldr.w	r0, [r1], #4
 80098c2:	6803      	ldr	r3, [r0, #0]
 80098c4:	689b      	ldr	r3, [r3, #8]
 80098c6:	4798      	blx	r3
 80098c8:	4668      	mov	r0, sp
 80098ca:	f00b fad0 	bl	8014e6e <ReadConfigFile::~ReadConfigFile()>
 80098ce:	b002      	add	sp, #8
 80098d0:	bd70      	pop	{r4, r5, r6, pc}
 80098d2:	bf00      	nop
 80098d4:	08009995 	stmdaeq	r0, {r0, r2, r4, r7, r8, fp, ip, pc}

080098d8 <RemoteConfigParams::SetBool(unsigned char, unsigned int)>:
 80098d8:	6843      	ldr	r3, [r0, #4]
 80098da:	b111      	cbz	r1, 80098e2 <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0xa>
 80098dc:	4313      	orrs	r3, r2
 80098de:	6043      	str	r3, [r0, #4]
 80098e0:	4770      	bx	lr
 80098e2:	ea23 0302 	bic.w	r3, r3, r2
 80098e6:	e7fa      	b.n	80098de <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0x6>

080098e8 <RemoteConfigParams::callbackFunction(char const*)>:
 80098e8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80098ea:	460d      	mov	r5, r1
 80098ec:	4604      	mov	r4, r0
 80098ee:	4923      	ldr	r1, [pc, #140]	; (800997c <RemoteConfigParams::callbackFunction(char const*)+0x94>)
 80098f0:	4628      	mov	r0, r5
 80098f2:	f10d 0203 	add.w	r2, sp, #3
 80098f6:	f00b fc1d 	bl	8015134 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 80098fa:	b938      	cbnz	r0, 800990c <RemoteConfigParams::callbackFunction(char const*)+0x24>
 80098fc:	2201      	movs	r2, #1
 80098fe:	4620      	mov	r0, r4
 8009900:	f89d 1003 	ldrb.w	r1, [sp, #3]
 8009904:	f7ff ffe8 	bl	80098d8 <RemoteConfigParams::SetBool(unsigned char, unsigned int)>
 8009908:	b003      	add	sp, #12
 800990a:	bd30      	pop	{r4, r5, pc}
 800990c:	4628      	mov	r0, r5
 800990e:	491c      	ldr	r1, [pc, #112]	; (8009980 <RemoteConfigParams::callbackFunction(char const*)+0x98>)
 8009910:	f10d 0203 	add.w	r2, sp, #3
 8009914:	f00b fc0e 	bl	8015134 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8009918:	b908      	cbnz	r0, 800991e <RemoteConfigParams::callbackFunction(char const*)+0x36>
 800991a:	2202      	movs	r2, #2
 800991c:	e7ef      	b.n	80098fe <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800991e:	4628      	mov	r0, r5
 8009920:	4918      	ldr	r1, [pc, #96]	; (8009984 <RemoteConfigParams::callbackFunction(char const*)+0x9c>)
 8009922:	f10d 0203 	add.w	r2, sp, #3
 8009926:	f00b fc05 	bl	8015134 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800992a:	b908      	cbnz	r0, 8009930 <RemoteConfigParams::callbackFunction(char const*)+0x48>
 800992c:	2204      	movs	r2, #4
 800992e:	e7e6      	b.n	80098fe <RemoteConfigParams::callbackFunction(char const*)+0x16>
 8009930:	4628      	mov	r0, r5
 8009932:	4915      	ldr	r1, [pc, #84]	; (8009988 <RemoteConfigParams::callbackFunction(char const*)+0xa0>)
 8009934:	f10d 0203 	add.w	r2, sp, #3
 8009938:	f00b fbfc 	bl	8015134 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800993c:	b908      	cbnz	r0, 8009942 <RemoteConfigParams::callbackFunction(char const*)+0x5a>
 800993e:	2208      	movs	r2, #8
 8009940:	e7dd      	b.n	80098fe <RemoteConfigParams::callbackFunction(char const*)+0x16>
 8009942:	4628      	mov	r0, r5
 8009944:	4911      	ldr	r1, [pc, #68]	; (800998c <RemoteConfigParams::callbackFunction(char const*)+0xa4>)
 8009946:	f10d 0203 	add.w	r2, sp, #3
 800994a:	f00b fbf3 	bl	8015134 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800994e:	b908      	cbnz	r0, 8009954 <RemoteConfigParams::callbackFunction(char const*)+0x6c>
 8009950:	2220      	movs	r2, #32
 8009952:	e7d4      	b.n	80098fe <RemoteConfigParams::callbackFunction(char const*)+0x16>
 8009954:	2317      	movs	r3, #23
 8009956:	4628      	mov	r0, r5
 8009958:	9301      	str	r3, [sp, #4]
 800995a:	490d      	ldr	r1, [pc, #52]	; (8009990 <RemoteConfigParams::callbackFunction(char const*)+0xa8>)
 800995c:	ab01      	add	r3, sp, #4
 800995e:	f104 020c 	add.w	r2, r4, #12
 8009962:	f00b fab9 	bl	8014ed8 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 8009966:	2800      	cmp	r0, #0
 8009968:	d1ce      	bne.n	8009908 <RemoteConfigParams::callbackFunction(char const*)+0x20>
 800996a:	9b01      	ldr	r3, [sp, #4]
 800996c:	4423      	add	r3, r4
 800996e:	7318      	strb	r0, [r3, #12]
 8009970:	6863      	ldr	r3, [r4, #4]
 8009972:	f043 0310 	orr.w	r3, r3, #16
 8009976:	6063      	str	r3, [r4, #4]
 8009978:	e7c6      	b.n	8009908 <RemoteConfigParams::callbackFunction(char const*)+0x20>
 800997a:	bf00      	nop
 800997c:	08018741 	stmdaeq	r1, {r0, r6, r8, r9, sl, pc}
 8009980:	08018762 	stmdaeq	r1, {r1, r5, r6, r8, r9, sl, pc}
 8009984:	08018770 	stmdaeq	r1, {r4, r5, r6, r8, r9, sl, pc}
 8009988:	0801877e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r8, r9, sl, pc}
 800998c:	0801878c 	stmdaeq	r1, {r2, r3, r7, r8, r9, sl, pc}
 8009990:	08018755 	stmdaeq	r1, {r0, r2, r4, r6, r8, r9, sl, pc}

08009994 <RemoteConfigParams::staticCallbackFunction(void*, char const*)>:
 8009994:	f7ff bfa8 	b.w	80098e8 <RemoteConfigParams::callbackFunction(char const*)>

08009998 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>:
 8009998:	b570      	push	{r4, r5, r6, lr}
 800999a:	4604      	mov	r4, r0
 800999c:	4615      	mov	r5, r2
 800999e:	461e      	mov	r6, r3
 80099a0:	b086      	sub	sp, #24
 80099a2:	3004      	adds	r0, #4
 80099a4:	2900      	cmp	r1, #0
 80099a6:	d040      	beq.n	8009a2a <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x92>
 80099a8:	2220      	movs	r2, #32
 80099aa:	f00c f9ac 	bl	8015d06 <memmove>
 80099ae:	4633      	mov	r3, r6
 80099b0:	462a      	mov	r2, r5
 80099b2:	4937      	ldr	r1, [pc, #220]	; (8009a90 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xf8>)
 80099b4:	a803      	add	r0, sp, #12
 80099b6:	f00b f987 	bl	8014cc8 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 80099ba:	6862      	ldr	r2, [r4, #4]
 80099bc:	4935      	ldr	r1, [pc, #212]	; (8009a94 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xfc>)
 80099be:	f002 0201 	and.w	r2, r2, #1
 80099c2:	a803      	add	r0, sp, #12
 80099c4:	f7ff ff2c 	bl	8009820 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 80099c8:	6862      	ldr	r2, [r4, #4]
 80099ca:	4933      	ldr	r1, [pc, #204]	; (8009a98 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x100>)
 80099cc:	f3c2 0240 	ubfx	r2, r2, #1, #1
 80099d0:	a803      	add	r0, sp, #12
 80099d2:	f7ff ff25 	bl	8009820 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 80099d6:	6862      	ldr	r2, [r4, #4]
 80099d8:	4930      	ldr	r1, [pc, #192]	; (8009a9c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x104>)
 80099da:	f3c2 0280 	ubfx	r2, r2, #2, #1
 80099de:	a803      	add	r0, sp, #12
 80099e0:	f7ff ff1e 	bl	8009820 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 80099e4:	6862      	ldr	r2, [r4, #4]
 80099e6:	492e      	ldr	r1, [pc, #184]	; (8009aa0 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x108>)
 80099e8:	f3c2 02c0 	ubfx	r2, r2, #3, #1
 80099ec:	a803      	add	r0, sp, #12
 80099ee:	f7ff ff17 	bl	8009820 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 80099f2:	6862      	ldr	r2, [r4, #4]
 80099f4:	492b      	ldr	r1, [pc, #172]	; (8009aa4 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x10c>)
 80099f6:	f3c2 1240 	ubfx	r2, r2, #5, #1
 80099fa:	a803      	add	r0, sp, #12
 80099fc:	f7ff ff10 	bl	8009820 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 8009a00:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 8009a04:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8009a08:	42a9      	cmp	r1, r5
 8009a0a:	d223      	bcs.n	8009a54 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xbc>
 8009a0c:	9803      	ldr	r0, [sp, #12]
 8009a0e:	1a6d      	subs	r5, r5, r1
 8009a10:	4408      	add	r0, r1
 8009a12:	6861      	ldr	r1, [r4, #4]
 8009a14:	f89d 2014 	ldrb.w	r2, [sp, #20]
 8009a18:	06c9      	lsls	r1, r1, #27
 8009a1a:	f104 030c 	add.w	r3, r4, #12
 8009a1e:	d40b      	bmi.n	8009a38 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa0>
 8009a20:	b95a      	cbnz	r2, 8009a3a <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa2>
 8009a22:	9300      	str	r3, [sp, #0]
 8009a24:	4a20      	ldr	r2, [pc, #128]	; (8009aa8 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 8009a26:	4b21      	ldr	r3, [pc, #132]	; (8009aac <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x114>)
 8009a28:	e00a      	b.n	8009a40 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa8>
 8009a2a:	6823      	ldr	r3, [r4, #0]
 8009a2c:	4601      	mov	r1, r0
 8009a2e:	681a      	ldr	r2, [r3, #0]
 8009a30:	4618      	mov	r0, r3
 8009a32:	68d2      	ldr	r2, [r2, #12]
 8009a34:	4790      	blx	r2
 8009a36:	e7ba      	b.n	80099ae <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x16>
 8009a38:	b32a      	cbz	r2, 8009a86 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xee>
 8009a3a:	9300      	str	r3, [sp, #0]
 8009a3c:	4a1c      	ldr	r2, [pc, #112]	; (8009ab0 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x118>)
 8009a3e:	4b1b      	ldr	r3, [pc, #108]	; (8009aac <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x114>)
 8009a40:	4629      	mov	r1, r5
 8009a42:	f7ff fad5 	bl	8008ff0 <snprintf>
 8009a46:	4285      	cmp	r5, r0
 8009a48:	bfa2      	ittt	ge
 8009a4a:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 8009a4e:	18c0      	addge	r0, r0, r3
 8009a50:	f8ad 0012 	strhge.w	r0, [sp, #18]
 8009a54:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8009a58:	b17b      	cbz	r3, 8009a7a <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xe2>
 8009a5a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8009a5e:	9b03      	ldr	r3, [sp, #12]
 8009a60:	4413      	add	r3, r2
 8009a62:	227d      	movs	r2, #125	; 0x7d
 8009a64:	f803 2c01 	strb.w	r2, [r3, #-1]
 8009a68:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8009a6c:	9903      	ldr	r1, [sp, #12]
 8009a6e:	54ca      	strb	r2, [r1, r3]
 8009a70:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8009a74:	3301      	adds	r3, #1
 8009a76:	f8ad 3012 	strh.w	r3, [sp, #18]
 8009a7a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8009a7e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8009a80:	601a      	str	r2, [r3, #0]
 8009a82:	b006      	add	sp, #24
 8009a84:	bd70      	pop	{r4, r5, r6, pc}
 8009a86:	9300      	str	r3, [sp, #0]
 8009a88:	4a0a      	ldr	r2, [pc, #40]	; (8009ab4 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x11c>)
 8009a8a:	4b08      	ldr	r3, [pc, #32]	; (8009aac <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x114>)
 8009a8c:	e7d8      	b.n	8009a40 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa8>
 8009a8e:	bf00      	nop
 8009a90:	08018749 	stmdaeq	r1, {r0, r3, r6, r8, r9, sl, pc}
 8009a94:	08018741 	stmdaeq	r1, {r0, r6, r8, r9, sl, pc}
 8009a98:	08018762 	stmdaeq	r1, {r1, r5, r6, r8, r9, sl, pc}
 8009a9c:	08018770 	stmdaeq	r1, {r4, r5, r6, r8, r9, sl, pc}
 8009aa0:	0801877e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r8, r9, sl, pc}
 8009aa4:	0801878c 	stmdaeq	r1, {r2, r3, r7, r8, r9, sl, pc}
 8009aa8:	0801836c 	stmdaeq	r1, {r2, r3, r5, r6, r8, r9, pc}
 8009aac:	08018755 	stmdaeq	r1, {r0, r2, r4, r6, r8, r9, sl, pc}
 8009ab0:	08018361 	stmdaeq	r1, {r0, r5, r6, r8, r9, pc}
 8009ab4:	0801836d 	stmdaeq	r1, {r0, r2, r3, r5, r6, r8, r9, pc}

08009ab8 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>:
 8009ab8:	b513      	push	{r0, r1, r4, lr}
 8009aba:	6804      	ldr	r4, [r0, #0]
 8009abc:	b914      	cbnz	r4, 8009ac4 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0xc>
 8009abe:	601c      	str	r4, [r3, #0]
 8009ac0:	b002      	add	sp, #8
 8009ac2:	bd10      	pop	{r4, pc}
 8009ac4:	9300      	str	r3, [sp, #0]
 8009ac6:	4613      	mov	r3, r2
 8009ac8:	460a      	mov	r2, r1
 8009aca:	2100      	movs	r1, #0
 8009acc:	f7ff ff64 	bl	8009998 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>
 8009ad0:	e7f6      	b.n	8009ac0 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0x8>

08009ad2 <RemoteConfigParams::Set(RemoteConfig*)>:
 8009ad2:	b538      	push	{r3, r4, r5, lr}
 8009ad4:	460c      	mov	r4, r1
 8009ad6:	4605      	mov	r5, r0
 8009ad8:	6841      	ldr	r1, [r0, #4]
 8009ada:	4620      	mov	r0, r4
 8009adc:	f001 0101 	and.w	r1, r1, #1
 8009ae0:	f7ff fc3a 	bl	8009358 <RemoteConfig::SetDisable(bool)>
 8009ae4:	686b      	ldr	r3, [r5, #4]
 8009ae6:	f3c3 0240 	ubfx	r2, r3, #1, #1
 8009aea:	7362      	strb	r2, [r4, #13]
 8009aec:	f3c3 0280 	ubfx	r2, r3, #2, #1
 8009af0:	73a2      	strb	r2, [r4, #14]
 8009af2:	f3c3 02c0 	ubfx	r2, r3, #3, #1
 8009af6:	73e2      	strb	r2, [r4, #15]
 8009af8:	f3c3 1240 	ubfx	r2, r3, #5, #1
 8009afc:	06db      	lsls	r3, r3, #27
 8009afe:	7422      	strb	r2, [r4, #16]
 8009b00:	d506      	bpl.n	8009b10 <RemoteConfigParams::Set(RemoteConfig*)+0x3e>
 8009b02:	4620      	mov	r0, r4
 8009b04:	f105 010c 	add.w	r1, r5, #12
 8009b08:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8009b0c:	f7ff bc44 	b.w	8009398 <RemoteConfig::SetDisplayName(char const*)>
 8009b10:	bd38      	pop	{r3, r4, r5, pc}

08009b12 <RemoteConfigParams::Dump()>:
 8009b12:	4770      	bx	lr

08009b14 <RemoteConfig::HandleReboot()>:
 8009b14:	7b83      	ldrb	r3, [r0, #14]
 8009b16:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009b18:	2b00      	cmp	r3, #0
 8009b1a:	d03d      	beq.n	8009b98 <RemoteConfig::HandleReboot()+0x84>
 8009b1c:	2301      	movs	r3, #1
 8009b1e:	4c1f      	ldr	r4, [pc, #124]	; (8009b9c <RemoteConfig::HandleReboot()+0x88>)
 8009b20:	7443      	strb	r3, [r0, #17]
 8009b22:	6825      	ldr	r5, [r4, #0]
 8009b24:	69a8      	ldr	r0, [r5, #24]
 8009b26:	b138      	cbz	r0, 8009b38 <RemoteConfig::HandleReboot()+0x24>
 8009b28:	2100      	movs	r1, #0
 8009b2a:	6803      	ldr	r3, [r0, #0]
 8009b2c:	7429      	strb	r1, [r5, #16]
 8009b2e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009b30:	4798      	blx	r3
 8009b32:	4b1b      	ldr	r3, [pc, #108]	; (8009ba0 <RemoteConfig::HandleReboot()+0x8c>)
 8009b34:	681b      	ldr	r3, [r3, #0]
 8009b36:	606b      	str	r3, [r5, #4]
 8009b38:	4d1a      	ldr	r5, [pc, #104]	; (8009ba4 <RemoteConfig::HandleReboot()+0x90>)
 8009b3a:	6828      	ldr	r0, [r5, #0]
 8009b3c:	f006 ffe4 	bl	8010b08 <SpiFlashStore::Flash()>
 8009b40:	2800      	cmp	r0, #0
 8009b42:	d1fa      	bne.n	8009b3a <RemoteConfig::HandleReboot()+0x26>
 8009b44:	4b18      	ldr	r3, [pc, #96]	; (8009ba8 <RemoteConfig::HandleReboot()+0x94>)
 8009b46:	6818      	ldr	r0, [r3, #0]
 8009b48:	f008 ffec 	bl	8012b24 <Network::Shutdown()>
 8009b4c:	4817      	ldr	r0, [pc, #92]	; (8009bac <RemoteConfig::HandleReboot()+0x98>)
 8009b4e:	f7ff fa27 	bl	8008fa0 <printf>
 8009b52:	6823      	ldr	r3, [r4, #0]
 8009b54:	6998      	ldr	r0, [r3, #24]
 8009b56:	b110      	cbz	r0, 8009b5e <RemoteConfig::HandleReboot()+0x4a>
 8009b58:	6803      	ldr	r3, [r0, #0]
 8009b5a:	68db      	ldr	r3, [r3, #12]
 8009b5c:	4798      	blx	r3
 8009b5e:	6824      	ldr	r4, [r4, #0]
 8009b60:	4913      	ldr	r1, [pc, #76]	; (8009bb0 <RemoteConfig::HandleReboot()+0x9c>)
 8009b62:	4620      	mov	r0, r4
 8009b64:	f7fe fb32 	bl	80081cc <Display::TextStatus(char const*)>
 8009b68:	7c63      	ldrb	r3, [r4, #17]
 8009b6a:	b18b      	cbz	r3, 8009b90 <RemoteConfig::HandleReboot()+0x7c>
 8009b6c:	2312      	movs	r3, #18
 8009b6e:	f88d 3004 	strb.w	r3, [sp, #4]
 8009b72:	23bf      	movs	r3, #191	; 0xbf
 8009b74:	7a20      	ldrb	r0, [r4, #8]
 8009b76:	f88d 3005 	strb.w	r3, [sp, #5]
 8009b7a:	f88d 3006 	strb.w	r3, [sp, #6]
 8009b7e:	f00d f9a7 	bl	8016ed0 <gd32_i2c_set_address(unsigned char)>
 8009b82:	68e0      	ldr	r0, [r4, #12]
 8009b84:	f00d f99c 	bl	8016ec0 <gd32_i2c_set_baudrate(unsigned int)>
 8009b88:	2103      	movs	r1, #3
 8009b8a:	a801      	add	r0, sp, #4
 8009b8c:	f00d f9a6 	bl	8016edc <gd32_i2c_write(char const*, unsigned int)>
 8009b90:	4b08      	ldr	r3, [pc, #32]	; (8009bb4 <RemoteConfig::HandleReboot()+0xa0>)
 8009b92:	6818      	ldr	r0, [r3, #0]
 8009b94:	f00b ff72 	bl	8015a7c <Hardware::Reboot()>
 8009b98:	b003      	add	sp, #12
 8009b9a:	bd30      	pop	{r4, r5, pc}
 8009b9c:	20013cf4 	strdcs	r3, [r1], -r4
 8009ba0:	20013e04 	andcs	r3, r1, r4, lsl #28
 8009ba4:	2000bdb8 			; <UNDEFINED> instruction: 0x2000bdb8
 8009ba8:	200136bc 			; <UNDEFINED> instruction: 0x200136bc
 8009bac:	08018374 	stmdaeq	r1, {r2, r4, r5, r6, r8, r9, pc}
 8009bb0:	08018383 	stmdaeq	r1, {r0, r1, r7, r8, r9, pc}
 8009bb4:	20013de4 	andcs	r3, r1, r4, ror #27

08009bb8 <RemoteConfig::GetIndex(void const*, unsigned int&)>:
 8009bb8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8009bbc:	2000      	movs	r0, #0
 8009bbe:	4d12      	ldr	r5, [pc, #72]	; (8009c08 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x50>)
 8009bc0:	f10d 0c04 	add.w	ip, sp, #4
 8009bc4:	6814      	ldr	r4, [r2, #0]
 8009bc6:	7d2b      	ldrb	r3, [r5, #20]
 8009bc8:	692e      	ldr	r6, [r5, #16]
 8009bca:	42a3      	cmp	r3, r4
 8009bcc:	bf34      	ite	cc
 8009bce:	4664      	movcc	r4, ip
 8009bd0:	4614      	movcs	r4, r2
 8009bd2:	9301      	str	r3, [sp, #4]
 8009bd4:	6827      	ldr	r7, [r4, #0]
 8009bd6:	460c      	mov	r4, r1
 8009bd8:	3e01      	subs	r6, #1
 8009bda:	440f      	add	r7, r1
 8009bdc:	42bc      	cmp	r4, r7
 8009bde:	d011      	beq.n	8009c04 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x4c>
 8009be0:	f894 8000 	ldrb.w	r8, [r4]
 8009be4:	f816 ef01 	ldrb.w	lr, [r6, #1]!
 8009be8:	45f0      	cmp	r8, lr
 8009bea:	d009      	beq.n	8009c00 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x48>
 8009bec:	3001      	adds	r0, #1
 8009bee:	2805      	cmp	r0, #5
 8009bf0:	f105 051c 	add.w	r5, r5, #28
 8009bf4:	d1e6      	bne.n	8009bc4 <RemoteConfig::GetIndex(void const*, unsigned int&)+0xc>
 8009bf6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8009bfa:	b002      	add	sp, #8
 8009bfc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009c00:	3401      	adds	r4, #1
 8009c02:	e7eb      	b.n	8009bdc <RemoteConfig::GetIndex(void const*, unsigned int&)+0x24>
 8009c04:	6013      	str	r3, [r2, #0]
 8009c06:	e7f8      	b.n	8009bfa <RemoteConfig::GetIndex(void const*, unsigned int&)+0x42>
 8009c08:	080183cc 	stmdaeq	r1, {r2, r3, r6, r7, r8, r9, pc}

08009c0c <RemoteConfig::PlatformHandleTftpSet()>:
 8009c0c:	f890 1024 	ldrb.w	r1, [r0, #36]	; 0x24
 8009c10:	b109      	cbz	r1, 8009c16 <RemoteConfig::PlatformHandleTftpSet()+0xa>
 8009c12:	f24a 51a5 	movw	r1, #42405	; 0xa5a5
 8009c16:	2002      	movs	r0, #2
 8009c18:	f00c ba90 	b.w	801613c <bkp_data_write>

08009c1c <RemoteConfig::PlatformHandleTftpGet()>:
 8009c1c:	b510      	push	{r4, lr}
 8009c1e:	4604      	mov	r4, r0
 8009c20:	2002      	movs	r0, #2
 8009c22:	f00c faa1 	bl	8016168 <bkp_data_read>
 8009c26:	f24a 53a5 	movw	r3, #42405	; 0xa5a5
 8009c2a:	1ac3      	subs	r3, r0, r3
 8009c2c:	4258      	negs	r0, r3
 8009c2e:	4158      	adcs	r0, r3
 8009c30:	f884 0024 	strb.w	r0, [r4, #36]	; 0x24
 8009c34:	bd10      	pop	{r4, pc}

08009c36 <strcmp>:
 8009c36:	1e43      	subs	r3, r0, #1
 8009c38:	3901      	subs	r1, #1
 8009c3a:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8009c3e:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 8009c42:	4290      	cmp	r0, r2
 8009c44:	d102      	bne.n	8009c4c <strcmp+0x16>
 8009c46:	2800      	cmp	r0, #0
 8009c48:	d1f7      	bne.n	8009c3a <strcmp+0x4>
 8009c4a:	4770      	bx	lr
 8009c4c:	1a80      	subs	r0, r0, r2
 8009c4e:	4770      	bx	lr

08009c50 <strcasecmp>:
 8009c50:	b530      	push	{r4, r5, lr}
 8009c52:	1e42      	subs	r2, r0, #1
 8009c54:	3901      	subs	r1, #1
 8009c56:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8009c5a:	4604      	mov	r4, r0
 8009c5c:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 8009c60:	2b19      	cmp	r3, #25
 8009c62:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 8009c66:	bf98      	it	ls
 8009c68:	f100 0420 	addls.w	r4, r0, #32
 8009c6c:	f1a3 0541 	sub.w	r5, r3, #65	; 0x41
 8009c70:	2d19      	cmp	r5, #25
 8009c72:	bf98      	it	ls
 8009c74:	3320      	addls	r3, #32
 8009c76:	42a3      	cmp	r3, r4
 8009c78:	d102      	bne.n	8009c80 <strcasecmp+0x30>
 8009c7a:	2800      	cmp	r0, #0
 8009c7c:	d1eb      	bne.n	8009c56 <strcasecmp+0x6>
 8009c7e:	bd30      	pop	{r4, r5, pc}
 8009c80:	1ae0      	subs	r0, r4, r3
 8009c82:	e7fc      	b.n	8009c7e <strcasecmp+0x2e>

08009c84 <PropertiesConfig::EnableJSON(bool)>:
 8009c84:	4a04      	ldr	r2, [pc, #16]	; (8009c98 <PropertiesConfig::EnableJSON(bool)+0x14>)
 8009c86:	7813      	ldrb	r3, [r2, #0]
 8009c88:	b118      	cbz	r0, 8009c92 <PropertiesConfig::EnableJSON(bool)+0xe>
 8009c8a:	f043 0301 	orr.w	r3, r3, #1
 8009c8e:	7013      	strb	r3, [r2, #0]
 8009c90:	4770      	bx	lr
 8009c92:	f003 03fe 	and.w	r3, r3, #254	; 0xfe
 8009c96:	e7fa      	b.n	8009c8e <PropertiesConfig::EnableJSON(bool)+0xa>
 8009c98:	20013cf0 	strdcs	r3, [r1], -r0

08009c9c <HttpDaemon::HttpDaemon()>:
 8009c9c:	4a0a      	ldr	r2, [pc, #40]	; (8009cc8 <HttpDaemon::HttpDaemon()+0x2c>)
 8009c9e:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8009ca2:	6002      	str	r2, [r0, #0]
 8009ca4:	2200      	movs	r2, #0
 8009ca6:	f44f 7c02 	mov.w	ip, #520	; 0x208
 8009caa:	e9c0 1204 	strd	r1, r2, [r0, #16]
 8009cae:	2102      	movs	r1, #2
 8009cb0:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8009cb4:	e9c0 c106 	strd	ip, r1, [r0, #24]
 8009cb8:	60c2      	str	r2, [r0, #12]
 8009cba:	8402      	strh	r2, [r0, #32]
 8009cbc:	f8a0 25c2 	strh.w	r2, [r0, #1474]	; 0x5c2
 8009cc0:	f8c0 25c4 	str.w	r2, [r0, #1476]	; 0x5c4
 8009cc4:	4770      	bx	lr
 8009cc6:	bf00      	nop
 8009cc8:	080186c1 	stmdaeq	r1, {r0, r6, r7, r9, sl, pc}

08009ccc <HttpDaemon::Start()>:
 8009ccc:	4b04      	ldr	r3, [pc, #16]	; (8009ce0 <HttpDaemon::Start()+0x14>)
 8009cce:	b510      	push	{r4, lr}
 8009cd0:	2150      	movs	r1, #80	; 0x50
 8009cd2:	4604      	mov	r4, r0
 8009cd4:	6818      	ldr	r0, [r3, #0]
 8009cd6:	f009 fa75 	bl	80131c4 <Network::TcpBegin(unsigned short)>
 8009cda:	6120      	str	r0, [r4, #16]
 8009cdc:	bd10      	pop	{r4, pc}
 8009cde:	bf00      	nop
 8009ce0:	200136bc 			; <UNDEFINED> instruction: 0x200136bc

08009ce4 <HttpDaemon::ParseMethod(char*)>:
 8009ce4:	b538      	push	{r3, r4, r5, lr}
 8009ce6:	4604      	mov	r4, r0
 8009ce8:	4608      	mov	r0, r1
 8009cea:	491b      	ldr	r1, [pc, #108]	; (8009d58 <HttpDaemon::ParseMethod(char*)+0x74>)
 8009cec:	f00c f850 	bl	8015d90 <strtok>
 8009cf0:	4605      	mov	r5, r0
 8009cf2:	b370      	cbz	r0, 8009d52 <HttpDaemon::ParseMethod(char*)+0x6e>
 8009cf4:	4919      	ldr	r1, [pc, #100]	; (8009d5c <HttpDaemon::ParseMethod(char*)+0x78>)
 8009cf6:	f7ff ff9e 	bl	8009c36 <strcmp>
 8009cfa:	b940      	cbnz	r0, 8009d0e <HttpDaemon::ParseMethod(char*)+0x2a>
 8009cfc:	61e0      	str	r0, [r4, #28]
 8009cfe:	2000      	movs	r0, #0
 8009d00:	4915      	ldr	r1, [pc, #84]	; (8009d58 <HttpDaemon::ParseMethod(char*)+0x74>)
 8009d02:	f00c f845 	bl	8015d90 <strtok>
 8009d06:	b950      	cbnz	r0, 8009d1e <HttpDaemon::ParseMethod(char*)+0x3a>
 8009d08:	f44f 70c8 	mov.w	r0, #400	; 0x190
 8009d0c:	bd38      	pop	{r3, r4, r5, pc}
 8009d0e:	4628      	mov	r0, r5
 8009d10:	4913      	ldr	r1, [pc, #76]	; (8009d60 <HttpDaemon::ParseMethod(char*)+0x7c>)
 8009d12:	f7ff ff90 	bl	8009c36 <strcmp>
 8009d16:	b9e0      	cbnz	r0, 8009d52 <HttpDaemon::ParseMethod(char*)+0x6e>
 8009d18:	2301      	movs	r3, #1
 8009d1a:	61e3      	str	r3, [r4, #28]
 8009d1c:	e7ef      	b.n	8009cfe <HttpDaemon::ParseMethod(char*)+0x1a>
 8009d1e:	6060      	str	r0, [r4, #4]
 8009d20:	4910      	ldr	r1, [pc, #64]	; (8009d64 <HttpDaemon::ParseMethod(char*)+0x80>)
 8009d22:	2000      	movs	r0, #0
 8009d24:	f00c f834 	bl	8015d90 <strtok>
 8009d28:	2800      	cmp	r0, #0
 8009d2a:	d0ed      	beq.n	8009d08 <HttpDaemon::ParseMethod(char*)+0x24>
 8009d2c:	490e      	ldr	r1, [pc, #56]	; (8009d68 <HttpDaemon::ParseMethod(char*)+0x84>)
 8009d2e:	f7ff ff82 	bl	8009c36 <strcmp>
 8009d32:	2800      	cmp	r0, #0
 8009d34:	d1e8      	bne.n	8009d08 <HttpDaemon::ParseMethod(char*)+0x24>
 8009d36:	490d      	ldr	r1, [pc, #52]	; (8009d6c <HttpDaemon::ParseMethod(char*)+0x88>)
 8009d38:	f00c f82a 	bl	8015d90 <strtok>
 8009d3c:	2800      	cmp	r0, #0
 8009d3e:	d0e3      	beq.n	8009d08 <HttpDaemon::ParseMethod(char*)+0x24>
 8009d40:	490b      	ldr	r1, [pc, #44]	; (8009d70 <HttpDaemon::ParseMethod(char*)+0x8c>)
 8009d42:	f7ff ff78 	bl	8009c36 <strcmp>
 8009d46:	2800      	cmp	r0, #0
 8009d48:	f240 10f9 	movw	r0, #505	; 0x1f9
 8009d4c:	bf08      	it	eq
 8009d4e:	20c8      	moveq	r0, #200	; 0xc8
 8009d50:	e7dc      	b.n	8009d0c <HttpDaemon::ParseMethod(char*)+0x28>
 8009d52:	f240 10f5 	movw	r0, #501	; 0x1f5
 8009d56:	e7d9      	b.n	8009d0c <HttpDaemon::ParseMethod(char*)+0x28>
 8009d58:	0801a11f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r8, sp, pc}
 8009d5c:	08018458 	stmdaeq	r1, {r3, r4, r6, sl, pc}
 8009d60:	0801845c 	stmdaeq	r1, {r2, r3, r4, r6, sl, pc}
 8009d64:	080184c6 	stmdaeq	r1, {r1, r2, r6, r7, sl, pc}
 8009d68:	08018461 	stmdaeq	r1, {r0, r5, r6, sl, pc}
 8009d6c:	08018466 	stmdaeq	r1, {r1, r2, r5, r6, sl, pc}
 8009d70:	08018469 	stmdaeq	r1, {r0, r3, r5, r6, sl, pc}

08009d74 <HttpDaemon::ParseHeaderField(char*)>:
 8009d74:	b538      	push	{r3, r4, r5, lr}
 8009d76:	4605      	mov	r5, r0
 8009d78:	4608      	mov	r0, r1
 8009d7a:	491d      	ldr	r1, [pc, #116]	; (8009df0 <HttpDaemon::ParseHeaderField(char*)+0x7c>)
 8009d7c:	f00c f808 	bl	8015d90 <strtok>
 8009d80:	4604      	mov	r4, r0
 8009d82:	b910      	cbnz	r0, 8009d8a <HttpDaemon::ParseHeaderField(char*)+0x16>
 8009d84:	f44f 70c8 	mov.w	r0, #400	; 0x190
 8009d88:	bd38      	pop	{r3, r4, r5, pc}
 8009d8a:	491a      	ldr	r1, [pc, #104]	; (8009df4 <HttpDaemon::ParseHeaderField(char*)+0x80>)
 8009d8c:	f7ff ff60 	bl	8009c50 <strcasecmp>
 8009d90:	b970      	cbnz	r0, 8009db0 <HttpDaemon::ParseHeaderField(char*)+0x3c>
 8009d92:	4919      	ldr	r1, [pc, #100]	; (8009df8 <HttpDaemon::ParseHeaderField(char*)+0x84>)
 8009d94:	f00b fffc 	bl	8015d90 <strtok>
 8009d98:	2800      	cmp	r0, #0
 8009d9a:	d0f3      	beq.n	8009d84 <HttpDaemon::ParseHeaderField(char*)+0x10>
 8009d9c:	4917      	ldr	r1, [pc, #92]	; (8009dfc <HttpDaemon::ParseHeaderField(char*)+0x88>)
 8009d9e:	f7ff ff4a 	bl	8009c36 <strcmp>
 8009da2:	b108      	cbz	r0, 8009da8 <HttpDaemon::ParseHeaderField(char*)+0x34>
 8009da4:	20c8      	movs	r0, #200	; 0xc8
 8009da6:	e7ef      	b.n	8009d88 <HttpDaemon::ParseHeaderField(char*)+0x14>
 8009da8:	2301      	movs	r3, #1
 8009daa:	f885 3020 	strb.w	r3, [r5, #32]
 8009dae:	e7f9      	b.n	8009da4 <HttpDaemon::ParseHeaderField(char*)+0x30>
 8009db0:	4620      	mov	r0, r4
 8009db2:	4913      	ldr	r1, [pc, #76]	; (8009e00 <HttpDaemon::ParseHeaderField(char*)+0x8c>)
 8009db4:	f7ff ff4c 	bl	8009c50 <strcasecmp>
 8009db8:	4604      	mov	r4, r0
 8009dba:	2800      	cmp	r0, #0
 8009dbc:	d1f2      	bne.n	8009da4 <HttpDaemon::ParseHeaderField(char*)+0x30>
 8009dbe:	4911      	ldr	r1, [pc, #68]	; (8009e04 <HttpDaemon::ParseHeaderField(char*)+0x90>)
 8009dc0:	f00b ffe6 	bl	8015d90 <strtok>
 8009dc4:	2800      	cmp	r0, #0
 8009dc6:	d0dd      	beq.n	8009d84 <HttpDaemon::ParseHeaderField(char*)+0x10>
 8009dc8:	1e42      	subs	r2, r0, #1
 8009dca:	4623      	mov	r3, r4
 8009dcc:	200a      	movs	r0, #10
 8009dce:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 8009dd2:	b151      	cbz	r1, 8009dea <HttpDaemon::ParseHeaderField(char*)+0x76>
 8009dd4:	3930      	subs	r1, #48	; 0x30
 8009dd6:	2909      	cmp	r1, #9
 8009dd8:	d8d4      	bhi.n	8009d84 <HttpDaemon::ParseHeaderField(char*)+0x10>
 8009dda:	fb00 1303 	mla	r3, r0, r3, r1
 8009dde:	f5b3 6fb4 	cmp.w	r3, #1440	; 0x5a0
 8009de2:	d9f4      	bls.n	8009dce <HttpDaemon::ParseHeaderField(char*)+0x5a>
 8009de4:	f240 109d 	movw	r0, #413	; 0x19d
 8009de8:	e7ce      	b.n	8009d88 <HttpDaemon::ParseHeaderField(char*)+0x14>
 8009dea:	f8a5 35c6 	strh.w	r3, [r5, #1478]	; 0x5c6
 8009dee:	e7d9      	b.n	8009da4 <HttpDaemon::ParseHeaderField(char*)+0x30>
 8009df0:	0801846d 	stmdaeq	r1, {r0, r2, r3, r5, r6, sl, pc}
 8009df4:	0801846f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, sl, pc}
 8009df8:	0801847c 	stmdaeq	r1, {r2, r3, r4, r5, r6, sl, pc}
 8009dfc:	0801847f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, sl, pc}
 8009e00:	08018490 	stmdaeq	r1, {r4, r7, sl, pc}
 8009e04:	0801a11f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r8, sp, pc}

08009e08 <HttpDaemon::ParseRequest()>:
 8009e08:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009e0a:	2400      	movs	r4, #0
 8009e0c:	4605      	mov	r5, r0
 8009e0e:	4622      	mov	r2, r4
 8009e10:	4626      	mov	r6, r4
 8009e12:	68c1      	ldr	r1, [r0, #12]
 8009e14:	f880 4020 	strb.w	r4, [r0, #32]
 8009e18:	f8c0 45c4 	str.w	r4, [r0, #1476]	; 0x5c4
 8009e1c:	8aab      	ldrh	r3, [r5, #20]
 8009e1e:	42a3      	cmp	r3, r4
 8009e20:	d923      	bls.n	8009e6a <HttpDaemon::ParseRequest()+0x62>
 8009e22:	68eb      	ldr	r3, [r5, #12]
 8009e24:	5d18      	ldrb	r0, [r3, r4]
 8009e26:	280a      	cmp	r0, #10
 8009e28:	d10e      	bne.n	8009e48 <HttpDaemon::ParseRequest()+0x40>
 8009e2a:	4423      	add	r3, r4
 8009e2c:	f803 6c01 	strb.w	r6, [r3, #-1]
 8009e30:	1c57      	adds	r7, r2, #1
 8009e32:	b962      	cbnz	r2, 8009e4e <HttpDaemon::ParseRequest()+0x46>
 8009e34:	4628      	mov	r0, r5
 8009e36:	f7ff ff55 	bl	8009ce4 <HttpDaemon::ParseMethod(char*)>
 8009e3a:	28c8      	cmp	r0, #200	; 0xc8
 8009e3c:	d116      	bne.n	8009e6c <HttpDaemon::ParseRequest()+0x64>
 8009e3e:	463a      	mov	r2, r7
 8009e40:	68e9      	ldr	r1, [r5, #12]
 8009e42:	3401      	adds	r4, #1
 8009e44:	b2a4      	uxth	r4, r4
 8009e46:	4421      	add	r1, r4
 8009e48:	3401      	adds	r4, #1
 8009e4a:	b2a4      	uxth	r4, r4
 8009e4c:	e7e6      	b.n	8009e1c <HttpDaemon::ParseRequest()+0x14>
 8009e4e:	7808      	ldrb	r0, [r1, #0]
 8009e50:	b968      	cbnz	r0, 8009e6e <HttpDaemon::ParseRequest()+0x66>
 8009e52:	696b      	ldr	r3, [r5, #20]
 8009e54:	3b01      	subs	r3, #1
 8009e56:	1b1b      	subs	r3, r3, r4
 8009e58:	b29b      	uxth	r3, r3
 8009e5a:	f8a5 35c4 	strh.w	r3, [r5, #1476]	; 0x5c4
 8009e5e:	b123      	cbz	r3, 8009e6a <HttpDaemon::ParseRequest()+0x62>
 8009e60:	68ea      	ldr	r2, [r5, #12]
 8009e62:	3401      	adds	r4, #1
 8009e64:	4414      	add	r4, r2
 8009e66:	60ac      	str	r4, [r5, #8]
 8009e68:	54e0      	strb	r0, [r4, r3]
 8009e6a:	20c8      	movs	r0, #200	; 0xc8
 8009e6c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009e6e:	4628      	mov	r0, r5
 8009e70:	f7ff ff80 	bl	8009d74 <HttpDaemon::ParseHeaderField(char*)>
 8009e74:	e7e1      	b.n	8009e3a <HttpDaemon::ParseRequest()+0x32>
	...

08009e78 <HttpDaemon::HandleGetTxt()>:
 8009e78:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009e7c:	6847      	ldr	r7, [r0, #4]
 8009e7e:	4604      	mov	r4, r0
 8009e80:	1dbd      	adds	r5, r7, #6
 8009e82:	462b      	mov	r3, r5
 8009e84:	4618      	mov	r0, r3
 8009e86:	7802      	ldrb	r2, [r0, #0]
 8009e88:	3301      	adds	r3, #1
 8009e8a:	2a00      	cmp	r2, #0
 8009e8c:	d1fa      	bne.n	8009e84 <HttpDaemon::HandleGetTxt()+0xc>
 8009e8e:	1b40      	subs	r0, r0, r5
 8009e90:	2804      	cmp	r0, #4
 8009e92:	d925      	bls.n	8009ee0 <HttpDaemon::HandleGetTxt()+0x68>
 8009e94:	3804      	subs	r0, #4
 8009e96:	4915      	ldr	r1, [pc, #84]	; (8009eec <HttpDaemon::HandleGetTxt()+0x74>)
 8009e98:	4428      	add	r0, r5
 8009e9a:	f7ff fecc 	bl	8009c36 <strcmp>
 8009e9e:	b9f8      	cbnz	r0, 8009ee0 <HttpDaemon::HandleGetTxt()+0x68>
 8009ea0:	4b13      	ldr	r3, [pc, #76]	; (8009ef0 <HttpDaemon::HandleGetTxt()+0x78>)
 8009ea2:	2001      	movs	r0, #1
 8009ea4:	f893 8000 	ldrb.w	r8, [r3]
 8009ea8:	f7ff feec 	bl	8009c84 <PropertiesConfig::EnableJSON(bool)>
 8009eac:	4b11      	ldr	r3, [pc, #68]	; (8009ef4 <HttpDaemon::HandleGetTxt()+0x7c>)
 8009eae:	f240 529b 	movw	r2, #1435	; 0x59b
 8009eb2:	4629      	mov	r1, r5
 8009eb4:	6818      	ldr	r0, [r3, #0]
 8009eb6:	f7ff fa87 	bl	80093c8 <RemoteConfig::HandleGet(void*, unsigned int)>
 8009eba:	4606      	mov	r6, r0
 8009ebc:	f008 0801 	and.w	r8, r8, #1
 8009ec0:	4640      	mov	r0, r8
 8009ec2:	f7ff fedf 	bl	8009c84 <PropertiesConfig::EnableJSON(bool)>
 8009ec6:	b15e      	cbz	r6, 8009ee0 <HttpDaemon::HandleGetTxt()+0x68>
 8009ec8:	f8a4 65c2 	strh.w	r6, [r4, #1474]	; 0x5c2
 8009ecc:	3606      	adds	r6, #6
 8009ece:	3422      	adds	r4, #34	; 0x22
 8009ed0:	443e      	add	r6, r7
 8009ed2:	42b5      	cmp	r5, r6
 8009ed4:	d008      	beq.n	8009ee8 <HttpDaemon::HandleGetTxt()+0x70>
 8009ed6:	f815 3b01 	ldrb.w	r3, [r5], #1
 8009eda:	f804 3b01 	strb.w	r3, [r4], #1
 8009ede:	e7f8      	b.n	8009ed2 <HttpDaemon::HandleGetTxt()+0x5a>
 8009ee0:	f44f 70c8 	mov.w	r0, #400	; 0x190
 8009ee4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009ee8:	20c8      	movs	r0, #200	; 0xc8
 8009eea:	e7fb      	b.n	8009ee4 <HttpDaemon::HandleGetTxt()+0x6c>
 8009eec:	08018398 	stmdaeq	r1, {r3, r4, r7, r8, r9, pc}
 8009ef0:	20013cf0 	strdcs	r3, [r1], -r0
 8009ef4:	20000114 	andcs	r0, r0, r4, lsl r1

08009ef8 <HttpDaemon::HandleGet()>:
 8009ef8:	b570      	push	{r4, r5, r6, lr}
 8009efa:	6845      	ldr	r5, [r0, #4]
 8009efc:	4604      	mov	r4, r0
 8009efe:	4943      	ldr	r1, [pc, #268]	; (800a00c <HttpDaemon::HandleGet()+0x114>)
 8009f00:	4628      	mov	r0, r5
 8009f02:	f7ff fe98 	bl	8009c36 <strcmp>
 8009f06:	b120      	cbz	r0, 8009f12 <HttpDaemon::HandleGet()+0x1a>
 8009f08:	4628      	mov	r0, r5
 8009f0a:	4941      	ldr	r1, [pc, #260]	; (800a010 <HttpDaemon::HandleGet()+0x118>)
 8009f0c:	f7ff fe93 	bl	8009c36 <strcmp>
 8009f10:	b960      	cbnz	r0, 8009f2c <HttpDaemon::HandleGet()+0x34>
 8009f12:	4621      	mov	r1, r4
 8009f14:	4b3f      	ldr	r3, [pc, #252]	; (800a014 <HttpDaemon::HandleGet()+0x11c>)
 8009f16:	4840      	ldr	r0, [pc, #256]	; (800a018 <HttpDaemon::HandleGet()+0x120>)
 8009f18:	f841 3b22 	str.w	r3, [r1], #34
 8009f1c:	f000 fa7a 	bl	800a414 <get_file_content(char const*, char*)>
 8009f20:	2800      	cmp	r0, #0
 8009f22:	dd1e      	ble.n	8009f62 <HttpDaemon::HandleGet()+0x6a>
 8009f24:	f8a4 05c2 	strh.w	r0, [r4, #1474]	; 0x5c2
 8009f28:	20c8      	movs	r0, #200	; 0xc8
 8009f2a:	bd70      	pop	{r4, r5, r6, pc}
 8009f2c:	4628      	mov	r0, r5
 8009f2e:	493b      	ldr	r1, [pc, #236]	; (800a01c <HttpDaemon::HandleGet()+0x124>)
 8009f30:	f7ff fe81 	bl	8009c36 <strcmp>
 8009f34:	b928      	cbnz	r0, 8009f42 <HttpDaemon::HandleGet()+0x4a>
 8009f36:	4621      	mov	r1, r4
 8009f38:	4b39      	ldr	r3, [pc, #228]	; (800a020 <HttpDaemon::HandleGet()+0x128>)
 8009f3a:	483a      	ldr	r0, [pc, #232]	; (800a024 <HttpDaemon::HandleGet()+0x12c>)
 8009f3c:	f841 3b22 	str.w	r3, [r1], #34
 8009f40:	e7ec      	b.n	8009f1c <HttpDaemon::HandleGet()+0x24>
 8009f42:	4628      	mov	r0, r5
 8009f44:	4938      	ldr	r1, [pc, #224]	; (800a028 <HttpDaemon::HandleGet()+0x130>)
 8009f46:	f7ff fe76 	bl	8009c36 <strcmp>
 8009f4a:	b168      	cbz	r0, 8009f68 <HttpDaemon::HandleGet()+0x70>
 8009f4c:	4a37      	ldr	r2, [pc, #220]	; (800a02c <HttpDaemon::HandleGet()+0x134>)
 8009f4e:	1e6b      	subs	r3, r5, #1
 8009f50:	1d6e      	adds	r6, r5, #5
 8009f52:	42b3      	cmp	r3, r6
 8009f54:	d00e      	beq.n	8009f74 <HttpDaemon::HandleGet()+0x7c>
 8009f56:	f812 1b01 	ldrb.w	r1, [r2], #1
 8009f5a:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8009f5e:	4288      	cmp	r0, r1
 8009f60:	d0f7      	beq.n	8009f52 <HttpDaemon::HandleGet()+0x5a>
 8009f62:	f44f 70ca 	mov.w	r0, #404	; 0x194
 8009f66:	e7e0      	b.n	8009f2a <HttpDaemon::HandleGet()+0x32>
 8009f68:	4621      	mov	r1, r4
 8009f6a:	4b31      	ldr	r3, [pc, #196]	; (800a030 <HttpDaemon::HandleGet()+0x138>)
 8009f6c:	4831      	ldr	r0, [pc, #196]	; (800a034 <HttpDaemon::HandleGet()+0x13c>)
 8009f6e:	f841 3b22 	str.w	r3, [r1], #34
 8009f72:	e7d3      	b.n	8009f1c <HttpDaemon::HandleGet()+0x24>
 8009f74:	4b30      	ldr	r3, [pc, #192]	; (800a038 <HttpDaemon::HandleGet()+0x140>)
 8009f76:	3506      	adds	r5, #6
 8009f78:	4628      	mov	r0, r5
 8009f7a:	4930      	ldr	r1, [pc, #192]	; (800a03c <HttpDaemon::HandleGet()+0x144>)
 8009f7c:	6023      	str	r3, [r4, #0]
 8009f7e:	f7ff fe5a 	bl	8009c36 <strcmp>
 8009f82:	b930      	cbnz	r0, 8009f92 <HttpDaemon::HandleGet()+0x9a>
 8009f84:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 8009f88:	f104 0022 	add.w	r0, r4, #34	; 0x22
 8009f8c:	f000 f9ca 	bl	800a324 <remoteconfig::json_get_list(char*, unsigned short)>
 8009f90:	e7c6      	b.n	8009f20 <HttpDaemon::HandleGet()+0x28>
 8009f92:	4628      	mov	r0, r5
 8009f94:	492a      	ldr	r1, [pc, #168]	; (800a040 <HttpDaemon::HandleGet()+0x148>)
 8009f96:	f7ff fe4e 	bl	8009c36 <strcmp>
 8009f9a:	b930      	cbnz	r0, 8009faa <HttpDaemon::HandleGet()+0xb2>
 8009f9c:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 8009fa0:	f104 0022 	add.w	r0, r4, #34	; 0x22
 8009fa4:	f000 f9f2 	bl	800a38c <remoteconfig::json_get_version(char*, unsigned short)>
 8009fa8:	e7ba      	b.n	8009f20 <HttpDaemon::HandleGet()+0x28>
 8009faa:	4628      	mov	r0, r5
 8009fac:	4925      	ldr	r1, [pc, #148]	; (800a044 <HttpDaemon::HandleGet()+0x14c>)
 8009fae:	f7ff fe42 	bl	8009c36 <strcmp>
 8009fb2:	b950      	cbnz	r0, 8009fca <HttpDaemon::HandleGet()+0xd2>
 8009fb4:	4b24      	ldr	r3, [pc, #144]	; (800a048 <HttpDaemon::HandleGet()+0x150>)
 8009fb6:	681b      	ldr	r3, [r3, #0]
 8009fb8:	7bdb      	ldrb	r3, [r3, #15]
 8009fba:	b31b      	cbz	r3, 800a004 <HttpDaemon::HandleGet()+0x10c>
 8009fbc:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 8009fc0:	f104 0022 	add.w	r0, r4, #34	; 0x22
 8009fc4:	f000 f9fe 	bl	800a3c4 <remoteconfig::json_get_uptime(char*, unsigned short)>
 8009fc8:	e7aa      	b.n	8009f20 <HttpDaemon::HandleGet()+0x28>
 8009fca:	4628      	mov	r0, r5
 8009fcc:	491f      	ldr	r1, [pc, #124]	; (800a04c <HttpDaemon::HandleGet()+0x154>)
 8009fce:	f7ff fe32 	bl	8009c36 <strcmp>
 8009fd2:	b930      	cbnz	r0, 8009fe2 <HttpDaemon::HandleGet()+0xea>
 8009fd4:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 8009fd8:	f104 0022 	add.w	r0, r4, #34	; 0x22
 8009fdc:	f000 fa02 	bl	800a3e4 <remoteconfig::json_get_display(char*, unsigned short)>
 8009fe0:	e79e      	b.n	8009f20 <HttpDaemon::HandleGet()+0x28>
 8009fe2:	4628      	mov	r0, r5
 8009fe4:	491a      	ldr	r1, [pc, #104]	; (800a050 <HttpDaemon::HandleGet()+0x158>)
 8009fe6:	f7ff fe26 	bl	8009c36 <strcmp>
 8009fea:	b930      	cbnz	r0, 8009ffa <HttpDaemon::HandleGet()+0x102>
 8009fec:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 8009ff0:	f104 0022 	add.w	r0, r4, #34	; 0x22
 8009ff4:	f000 fa06 	bl	800a404 <remoteconfig::json_get_directory(char*, unsigned short)>
 8009ff8:	e792      	b.n	8009f20 <HttpDaemon::HandleGet()+0x28>
 8009ffa:	4620      	mov	r0, r4
 8009ffc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a000:	f7ff bf3a 	b.w	8009e78 <HttpDaemon::HandleGetTxt()>
 800a004:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800a008:	e78f      	b.n	8009f2a <HttpDaemon::HandleGet()+0x32>
 800a00a:	bf00      	nop
 800a00c:	080184c6 	stmdaeq	r1, {r1, r2, r6, r7, sl, pc}
 800a010:	0801849f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r7, sl, pc}
 800a014:	080186c1 	stmdaeq	r1, {r0, r6, r7, r9, sl, pc}
 800a018:	080184a0 	stmdaeq	r1, {r5, r7, sl, pc}
 800a01c:	080184ab 	stmdaeq	r1, {r0, r1, r3, r5, r7, sl, pc}
 800a020:	080186e1 	stmdaeq	r1, {r0, r5, r6, r7, r9, sl, pc}
 800a024:	080184ac 	stmdaeq	r1, {r2, r3, r5, r7, sl, pc}
 800a028:	080184b7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r7, sl, pc}
 800a02c:	080184c1 	stmdaeq	r1, {r0, r6, r7, sl, pc}
 800a030:	08018701 	stmdaeq	r1, {r0, r8, r9, sl, pc}
 800a034:	080184b8 	stmdaeq	r1, {r3, r4, r5, r7, sl, pc}
 800a038:	08018721 	stmdaeq	r1, {r0, r5, r8, r9, sl, pc}
 800a03c:	080184c8 	stmdaeq	r1, {r3, r6, r7, sl, pc}
 800a040:	080184cd 	stmdaeq	r1, {r0, r2, r3, r6, r7, sl, pc}
 800a044:	080184d5 	stmdaeq	r1, {r0, r2, r4, r6, r7, sl, pc}
 800a048:	20000114 	andcs	r0, r0, r4, lsl r1
 800a04c:	080184dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, sl, pc}
 800a050:	080184e4 	stmdaeq	r1, {r2, r5, r6, r7, sl, pc}

0800a054 <HttpDaemon::HandlePost(bool)>:
 800a054:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a056:	4604      	mov	r4, r0
 800a058:	2900      	cmp	r1, #0
 800a05a:	f040 8090 	bne.w	800a17e <HttpDaemon::HandlePost(bool)+0x12a>
 800a05e:	f890 3020 	ldrb.w	r3, [r0, #32]
 800a062:	2b00      	cmp	r3, #0
 800a064:	d05d      	beq.n	800a122 <HttpDaemon::HandlePost(bool)+0xce>
 800a066:	6845      	ldr	r5, [r0, #4]
 800a068:	4948      	ldr	r1, [pc, #288]	; (800a18c <HttpDaemon::HandlePost(bool)+0x138>)
 800a06a:	4628      	mov	r0, r5
 800a06c:	f7ff fde3 	bl	8009c36 <strcmp>
 800a070:	2800      	cmp	r0, #0
 800a072:	bf0c      	ite	eq
 800a074:	2301      	moveq	r3, #1
 800a076:	2300      	movne	r3, #0
 800a078:	f884 3021 	strb.w	r3, [r4, #33]	; 0x21
 800a07c:	d055      	beq.n	800a12a <HttpDaemon::HandlePost(bool)+0xd6>
 800a07e:	4628      	mov	r0, r5
 800a080:	4943      	ldr	r1, [pc, #268]	; (800a190 <HttpDaemon::HandlePost(bool)+0x13c>)
 800a082:	f7ff fdd8 	bl	8009c36 <strcmp>
 800a086:	2800      	cmp	r0, #0
 800a088:	d04f      	beq.n	800a12a <HttpDaemon::HandlePost(bool)+0xd6>
 800a08a:	f44f 70ca 	mov.w	r0, #404	; 0x194
 800a08e:	e04a      	b.n	800a126 <HttpDaemon::HandlePost(bool)+0xd2>
 800a090:	4940      	ldr	r1, [pc, #256]	; (800a194 <HttpDaemon::HandlePost(bool)+0x140>)
 800a092:	68a0      	ldr	r0, [r4, #8]
 800a094:	f10d 0207 	add.w	r2, sp, #7
 800a098:	f00b f84c 	bl	8015134 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a09c:	b9e8      	cbnz	r0, 800a0da <HttpDaemon::HandlePost(bool)+0x86>
 800a09e:	f89d 6007 	ldrb.w	r6, [sp, #7]
 800a0a2:	4b3d      	ldr	r3, [pc, #244]	; (800a198 <HttpDaemon::HandlePost(bool)+0x144>)
 800a0a4:	fab6 f186 	clz	r1, r6
 800a0a8:	681d      	ldr	r5, [r3, #0]
 800a0aa:	0949      	lsrs	r1, r1, #5
 800a0ac:	69a8      	ldr	r0, [r5, #24]
 800a0ae:	b138      	cbz	r0, 800a0c0 <HttpDaemon::HandlePost(bool)+0x6c>
 800a0b0:	6803      	ldr	r3, [r0, #0]
 800a0b2:	7429      	strb	r1, [r5, #16]
 800a0b4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a0b6:	4798      	blx	r3
 800a0b8:	b116      	cbz	r6, 800a0c0 <HttpDaemon::HandlePost(bool)+0x6c>
 800a0ba:	4b38      	ldr	r3, [pc, #224]	; (800a19c <HttpDaemon::HandlePost(bool)+0x148>)
 800a0bc:	681b      	ldr	r3, [r3, #0]
 800a0be:	606b      	str	r3, [r5, #4]
 800a0c0:	4620      	mov	r0, r4
 800a0c2:	4b37      	ldr	r3, [pc, #220]	; (800a1a0 <HttpDaemon::HandlePost(bool)+0x14c>)
 800a0c4:	f240 519f 	movw	r1, #1439	; 0x59f
 800a0c8:	4a36      	ldr	r2, [pc, #216]	; (800a1a4 <HttpDaemon::HandlePost(bool)+0x150>)
 800a0ca:	f840 3b22 	str.w	r3, [r0], #34
 800a0ce:	f7fe ff8f 	bl	8008ff0 <snprintf>
 800a0d2:	f8a4 05c2 	strh.w	r0, [r4, #1474]	; 0x5c2
 800a0d6:	20c8      	movs	r0, #200	; 0xc8
 800a0d8:	e025      	b.n	800a126 <HttpDaemon::HandlePost(bool)+0xd2>
 800a0da:	4933      	ldr	r1, [pc, #204]	; (800a1a8 <HttpDaemon::HandlePost(bool)+0x154>)
 800a0dc:	68a0      	ldr	r0, [r4, #8]
 800a0de:	f10d 0207 	add.w	r2, sp, #7
 800a0e2:	f00b f827 	bl	8015134 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a0e6:	b9e0      	cbnz	r0, 800a122 <HttpDaemon::HandlePost(bool)+0xce>
 800a0e8:	4b30      	ldr	r3, [pc, #192]	; (800a1ac <HttpDaemon::HandlePost(bool)+0x158>)
 800a0ea:	6818      	ldr	r0, [r3, #0]
 800a0ec:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800a0f0:	b11b      	cbz	r3, 800a0fa <HttpDaemon::HandlePost(bool)+0xa6>
 800a0f2:	2104      	movs	r1, #4
 800a0f4:	f00b fc1e 	bl	8015934 <LedBlink::SetMode(ledblink::Mode)>
 800a0f8:	e7e2      	b.n	800a0c0 <HttpDaemon::HandlePost(bool)+0x6c>
 800a0fa:	2102      	movs	r1, #2
 800a0fc:	e7fa      	b.n	800a0f4 <HttpDaemon::HandlePost(bool)+0xa0>
 800a0fe:	4b2c      	ldr	r3, [pc, #176]	; (800a1b0 <HttpDaemon::HandlePost(bool)+0x15c>)
 800a100:	2001      	movs	r0, #1
 800a102:	781d      	ldrb	r5, [r3, #0]
 800a104:	f7ff fdbe 	bl	8009c84 <PropertiesConfig::EnableJSON(bool)>
 800a108:	4b2a      	ldr	r3, [pc, #168]	; (800a1b4 <HttpDaemon::HandlePost(bool)+0x160>)
 800a10a:	f8b4 25c4 	ldrh.w	r2, [r4, #1476]	; 0x5c4
 800a10e:	6818      	ldr	r0, [r3, #0]
 800a110:	68a1      	ldr	r1, [r4, #8]
 800a112:	f005 0501 	and.w	r5, r5, #1
 800a116:	f7ff fa23 	bl	8009560 <RemoteConfig::HandleSet(void*, unsigned int)>
 800a11a:	4628      	mov	r0, r5
 800a11c:	f7ff fdb2 	bl	8009c84 <PropertiesConfig::EnableJSON(bool)>
 800a120:	e7ce      	b.n	800a0c0 <HttpDaemon::HandlePost(bool)+0x6c>
 800a122:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800a126:	b002      	add	sp, #8
 800a128:	bd70      	pop	{r4, r5, r6, pc}
 800a12a:	f8b4 35c6 	ldrh.w	r3, [r4, #1478]	; 0x5c6
 800a12e:	6962      	ldr	r2, [r4, #20]
 800a130:	429a      	cmp	r2, r3
 800a132:	dbd0      	blt.n	800a0d6 <HttpDaemon::HandlePost(bool)+0x82>
 800a134:	f8b4 35c4 	ldrh.w	r3, [r4, #1476]	; 0x5c4
 800a138:	2b00      	cmp	r3, #0
 800a13a:	d0cc      	beq.n	800a0d6 <HttpDaemon::HandlePost(bool)+0x82>
 800a13c:	f894 3021 	ldrb.w	r3, [r4, #33]	; 0x21
 800a140:	2b00      	cmp	r3, #0
 800a142:	d0dc      	beq.n	800a0fe <HttpDaemon::HandlePost(bool)+0xaa>
 800a144:	2201      	movs	r2, #1
 800a146:	f8b4 15c4 	ldrh.w	r1, [r4, #1476]	; 0x5c4
 800a14a:	68a0      	ldr	r0, [r4, #8]
 800a14c:	f00a fd0e 	bl	8014b6c <properties::convert_json_file(char*, unsigned short, bool)>
 800a150:	2800      	cmp	r0, #0
 800a152:	dde6      	ble.n	800a122 <HttpDaemon::HandlePost(bool)+0xce>
 800a154:	4918      	ldr	r1, [pc, #96]	; (800a1b8 <HttpDaemon::HandlePost(bool)+0x164>)
 800a156:	68a0      	ldr	r0, [r4, #8]
 800a158:	f10d 0207 	add.w	r2, sp, #7
 800a15c:	f00a ffea 	bl	8015134 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a160:	2800      	cmp	r0, #0
 800a162:	d195      	bne.n	800a090 <HttpDaemon::HandlePost(bool)+0x3c>
 800a164:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800a168:	2b00      	cmp	r3, #0
 800a16a:	d0a9      	beq.n	800a0c0 <HttpDaemon::HandlePost(bool)+0x6c>
 800a16c:	4b11      	ldr	r3, [pc, #68]	; (800a1b4 <HttpDaemon::HandlePost(bool)+0x160>)
 800a16e:	681b      	ldr	r3, [r3, #0]
 800a170:	7b9b      	ldrb	r3, [r3, #14]
 800a172:	2b00      	cmp	r3, #0
 800a174:	d0d5      	beq.n	800a122 <HttpDaemon::HandlePost(bool)+0xce>
 800a176:	4b11      	ldr	r3, [pc, #68]	; (800a1bc <HttpDaemon::HandlePost(bool)+0x168>)
 800a178:	6818      	ldr	r0, [r3, #0]
 800a17a:	f00b fc7f 	bl	8015a7c <Hardware::Reboot()>
 800a17e:	68c3      	ldr	r3, [r0, #12]
 800a180:	6083      	str	r3, [r0, #8]
 800a182:	6943      	ldr	r3, [r0, #20]
 800a184:	f8a0 35c4 	strh.w	r3, [r0, #1476]	; 0x5c4
 800a188:	e7d8      	b.n	800a13c <HttpDaemon::HandlePost(bool)+0xe8>
 800a18a:	bf00      	nop
 800a18c:	080184ee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, sl, pc}
 800a190:	0801848a 	stmdaeq	r1, {r1, r3, r7, sl, pc}
 800a194:	080184dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, sl, pc}
 800a198:	20013cf4 	strdcs	r3, [r1], -r4
 800a19c:	20013e04 	andcs	r3, r1, r4, lsl #28
 800a1a0:	080186c1 	stmdaeq	r1, {r0, r6, r7, r9, sl, pc}
 800a1a4:	0801850b 	stmdaeq	r1, {r0, r1, r3, r8, sl, pc}
 800a1a8:	08018502 	stmdaeq	r1, {r1, r8, sl, pc}
 800a1ac:	20013de0 	andcs	r3, r1, r0, ror #27
 800a1b0:	20013cf0 	strdcs	r3, [r1], -r0
 800a1b4:	20000114 	andcs	r0, r0, r4, lsl r1
 800a1b8:	080184fb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r7, sl, pc}
 800a1bc:	20013de4 	andcs	r3, r1, r4, ror #27

0800a1c0 <HttpDaemon::Run()>:
 800a1c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a1c2:	4e4a      	ldr	r6, [pc, #296]	; (800a2ec <HttpDaemon::Run()+0x12c>)
 800a1c4:	4604      	mov	r4, r0
 800a1c6:	6901      	ldr	r1, [r0, #16]
 800a1c8:	f100 020c 	add.w	r2, r0, #12
 800a1cc:	b085      	sub	sp, #20
 800a1ce:	6830      	ldr	r0, [r6, #0]
 800a1d0:	f008 fffb 	bl	80131ca <Network::TcpRead(int, unsigned char const**)>
 800a1d4:	6160      	str	r0, [r4, #20]
 800a1d6:	2800      	cmp	r0, #0
 800a1d8:	d061      	beq.n	800a29e <HttpDaemon::Run()+0xde>
 800a1da:	69a3      	ldr	r3, [r4, #24]
 800a1dc:	f5b3 7f02 	cmp.w	r3, #520	; 0x208
 800a1e0:	d15f      	bne.n	800a2a2 <HttpDaemon::Run()+0xe2>
 800a1e2:	4620      	mov	r0, r4
 800a1e4:	f7ff fe10 	bl	8009e08 <HttpDaemon::ParseRequest()>
 800a1e8:	28c8      	cmp	r0, #200	; 0xc8
 800a1ea:	61a0      	str	r0, [r4, #24]
 800a1ec:	d106      	bne.n	800a1fc <HttpDaemon::Run()+0x3c>
 800a1ee:	69e3      	ldr	r3, [r4, #28]
 800a1f0:	2b00      	cmp	r3, #0
 800a1f2:	d147      	bne.n	800a284 <HttpDaemon::Run()+0xc4>
 800a1f4:	4620      	mov	r0, r4
 800a1f6:	f7ff fe7f 	bl	8009ef8 <HttpDaemon::HandleGet()>
 800a1fa:	61a0      	str	r0, [r4, #24]
 800a1fc:	69a3      	ldr	r3, [r4, #24]
 800a1fe:	f104 0722 	add.w	r7, r4, #34	; 0x22
 800a202:	2bc8      	cmp	r3, #200	; 0xc8
 800a204:	d06f      	beq.n	800a2e6 <HttpDaemon::Run()+0x126>
 800a206:	f5b3 7fcf 	cmp.w	r3, #414	; 0x19e
 800a20a:	d062      	beq.n	800a2d2 <HttpDaemon::Run()+0x112>
 800a20c:	dc52      	bgt.n	800a2b4 <HttpDaemon::Run()+0xf4>
 800a20e:	f5b3 7fca 	cmp.w	r3, #404	; 0x194
 800a212:	d060      	beq.n	800a2d6 <HttpDaemon::Run()+0x116>
 800a214:	f240 129d 	movw	r2, #413	; 0x19d
 800a218:	4293      	cmp	r3, r2
 800a21a:	d05e      	beq.n	800a2da <HttpDaemon::Run()+0x11a>
 800a21c:	4d34      	ldr	r5, [pc, #208]	; (800a2f0 <HttpDaemon::Run()+0x130>)
 800a21e:	4a35      	ldr	r2, [pc, #212]	; (800a2f4 <HttpDaemon::Run()+0x134>)
 800a220:	f5b3 7fc8 	cmp.w	r3, #400	; 0x190
 800a224:	bf18      	it	ne
 800a226:	4615      	movne	r5, r2
 800a228:	4a33      	ldr	r2, [pc, #204]	; (800a2f8 <HttpDaemon::Run()+0x138>)
 800a22a:	f240 519f 	movw	r1, #1439	; 0x59f
 800a22e:	6022      	str	r2, [r4, #0]
 800a230:	4638      	mov	r0, r7
 800a232:	e9cd 5500 	strd	r5, r5, [sp]
 800a236:	4a31      	ldr	r2, [pc, #196]	; (800a2fc <HttpDaemon::Run()+0x13c>)
 800a238:	f7fe feda 	bl	8008ff0 <snprintf>
 800a23c:	f8a4 05c2 	strh.w	r0, [r4, #1474]	; 0x5c2
 800a240:	f8b4 35c2 	ldrh.w	r3, [r4, #1474]	; 0x5c2
 800a244:	f240 519f 	movw	r1, #1439	; 0x59f
 800a248:	9303      	str	r3, [sp, #12]
 800a24a:	6823      	ldr	r3, [r4, #0]
 800a24c:	4a2c      	ldr	r2, [pc, #176]	; (800a300 <HttpDaemon::Run()+0x140>)
 800a24e:	9302      	str	r3, [sp, #8]
 800a250:	4b2c      	ldr	r3, [pc, #176]	; (800a304 <HttpDaemon::Run()+0x144>)
 800a252:	68e0      	ldr	r0, [r4, #12]
 800a254:	e9cd 5300 	strd	r5, r3, [sp]
 800a258:	69a3      	ldr	r3, [r4, #24]
 800a25a:	f7fe fec9 	bl	8008ff0 <snprintf>
 800a25e:	e9d4 2103 	ldrd	r2, r1, [r4, #12]
 800a262:	b283      	uxth	r3, r0
 800a264:	6830      	ldr	r0, [r6, #0]
 800a266:	f008 ffb4 	bl	80131d2 <Network::TcpWrite(int, unsigned char const*, unsigned short)>
 800a26a:	463a      	mov	r2, r7
 800a26c:	f8b4 35c2 	ldrh.w	r3, [r4, #1474]	; 0x5c2
 800a270:	6921      	ldr	r1, [r4, #16]
 800a272:	6830      	ldr	r0, [r6, #0]
 800a274:	f008 ffad 	bl	80131d2 <Network::TcpWrite(int, unsigned char const*, unsigned short)>
 800a278:	f44f 7202 	mov.w	r2, #520	; 0x208
 800a27c:	2302      	movs	r3, #2
 800a27e:	e9c4 2306 	strd	r2, r3, [r4, #24]
 800a282:	e00c      	b.n	800a29e <HttpDaemon::Run()+0xde>
 800a284:	2b01      	cmp	r3, #1
 800a286:	d1b9      	bne.n	800a1fc <HttpDaemon::Run()+0x3c>
 800a288:	2100      	movs	r1, #0
 800a28a:	4620      	mov	r0, r4
 800a28c:	f7ff fee2 	bl	800a054 <HttpDaemon::HandlePost(bool)>
 800a290:	28c8      	cmp	r0, #200	; 0xc8
 800a292:	61a0      	str	r0, [r4, #24]
 800a294:	d1b2      	bne.n	800a1fc <HttpDaemon::Run()+0x3c>
 800a296:	f8b4 35c4 	ldrh.w	r3, [r4, #1476]	; 0x5c4
 800a29a:	2b00      	cmp	r3, #0
 800a29c:	d1ae      	bne.n	800a1fc <HttpDaemon::Run()+0x3c>
 800a29e:	b005      	add	sp, #20
 800a2a0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a2a2:	2bc8      	cmp	r3, #200	; 0xc8
 800a2a4:	d1aa      	bne.n	800a1fc <HttpDaemon::Run()+0x3c>
 800a2a6:	69e1      	ldr	r1, [r4, #28]
 800a2a8:	2901      	cmp	r1, #1
 800a2aa:	d1a7      	bne.n	800a1fc <HttpDaemon::Run()+0x3c>
 800a2ac:	4620      	mov	r0, r4
 800a2ae:	f7ff fed1 	bl	800a054 <HttpDaemon::HandlePost(bool)>
 800a2b2:	e7a2      	b.n	800a1fa <HttpDaemon::Run()+0x3a>
 800a2b4:	f240 12f5 	movw	r2, #501	; 0x1f5
 800a2b8:	4293      	cmp	r3, r2
 800a2ba:	d010      	beq.n	800a2de <HttpDaemon::Run()+0x11e>
 800a2bc:	f240 12f9 	movw	r2, #505	; 0x1f9
 800a2c0:	4293      	cmp	r3, r2
 800a2c2:	d00e      	beq.n	800a2e2 <HttpDaemon::Run()+0x122>
 800a2c4:	4d10      	ldr	r5, [pc, #64]	; (800a308 <HttpDaemon::Run()+0x148>)
 800a2c6:	4a0b      	ldr	r2, [pc, #44]	; (800a2f4 <HttpDaemon::Run()+0x134>)
 800a2c8:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800a2cc:	bf18      	it	ne
 800a2ce:	4615      	movne	r5, r2
 800a2d0:	e7aa      	b.n	800a228 <HttpDaemon::Run()+0x68>
 800a2d2:	4d0e      	ldr	r5, [pc, #56]	; (800a30c <HttpDaemon::Run()+0x14c>)
 800a2d4:	e7a8      	b.n	800a228 <HttpDaemon::Run()+0x68>
 800a2d6:	4d0e      	ldr	r5, [pc, #56]	; (800a310 <HttpDaemon::Run()+0x150>)
 800a2d8:	e7a6      	b.n	800a228 <HttpDaemon::Run()+0x68>
 800a2da:	4d0e      	ldr	r5, [pc, #56]	; (800a314 <HttpDaemon::Run()+0x154>)
 800a2dc:	e7a4      	b.n	800a228 <HttpDaemon::Run()+0x68>
 800a2de:	4d0e      	ldr	r5, [pc, #56]	; (800a318 <HttpDaemon::Run()+0x158>)
 800a2e0:	e7a2      	b.n	800a228 <HttpDaemon::Run()+0x68>
 800a2e2:	4d0e      	ldr	r5, [pc, #56]	; (800a31c <HttpDaemon::Run()+0x15c>)
 800a2e4:	e7a0      	b.n	800a228 <HttpDaemon::Run()+0x68>
 800a2e6:	4d0e      	ldr	r5, [pc, #56]	; (800a320 <HttpDaemon::Run()+0x160>)
 800a2e8:	e7aa      	b.n	800a240 <HttpDaemon::Run()+0x80>
 800a2ea:	bf00      	nop
 800a2ec:	200136bc 			; <UNDEFINED> instruction: 0x200136bc
 800a2f0:	080185cc 	stmdaeq	r1, {r2, r3, r6, r7, r8, sl, pc}
 800a2f4:	080185d8 	stmdaeq	r1, {r3, r4, r6, r7, r8, sl, pc}
 800a2f8:	080186c1 	stmdaeq	r1, {r0, r6, r7, r9, sl, pc}
 800a2fc:	080185ff 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r7, r8, sl, pc}
 800a300:	0801865a 	stmdaeq	r1, {r1, r3, r4, r6, r9, sl, pc}
 800a304:	080186b2 	stmdaeq	r1, {r1, r4, r5, r7, r9, sl, pc}
 800a308:	080185e6 	stmdaeq	r1, {r1, r2, r5, r6, r7, r8, sl, pc}
 800a30c:	0801858a 	stmdaeq	r1, {r1, r3, r7, r8, sl, pc}
 800a310:	08018580 	stmdaeq	r1, {r7, r8, sl, pc}
 800a314:	08018567 	stmdaeq	r1, {r0, r1, r2, r5, r6, r8, sl, pc}
 800a318:	080185b5 	stmdaeq	r1, {r0, r2, r4, r5, r7, r8, sl, pc}
 800a31c:	0801859f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r7, r8, sl, pc}
 800a320:	080185fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r8, sl, pc}

0800a324 <remoteconfig::json_get_list(char*, unsigned short)>:
 800a324:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a328:	4b14      	ldr	r3, [pc, #80]	; (800a37c <remoteconfig::json_get_list(char*, unsigned short)+0x58>)
 800a32a:	f8df 8054 	ldr.w	r8, [pc, #84]	; 800a380 <remoteconfig::json_get_list(char*, unsigned short)+0x5c>
 800a32e:	681b      	ldr	r3, [r3, #0]
 800a330:	b088      	sub	sp, #32
 800a332:	4605      	mov	r5, r0
 800a334:	f8d8 0000 	ldr.w	r0, [r8]
 800a338:	691c      	ldr	r4, [r3, #16]
 800a33a:	460e      	mov	r6, r1
 800a33c:	f7fe fff4 	bl	8009328 <RemoteConfig::GetStringNode() const>
 800a340:	4607      	mov	r7, r0
 800a342:	f8d8 0000 	ldr.w	r0, [r8]
 800a346:	f7fe fffb 	bl	8009340 <RemoteConfig::GetStringOutput() const>
 800a34a:	4b0e      	ldr	r3, [pc, #56]	; (800a384 <remoteconfig::json_get_list(char*, unsigned short)+0x60>)
 800a34c:	4631      	mov	r1, r6
 800a34e:	7a1a      	ldrb	r2, [r3, #8]
 800a350:	3309      	adds	r3, #9
 800a352:	9303      	str	r3, [sp, #12]
 800a354:	0e23      	lsrs	r3, r4, #24
 800a356:	9302      	str	r3, [sp, #8]
 800a358:	f3c4 4307 	ubfx	r3, r4, #16, #8
 800a35c:	9301      	str	r3, [sp, #4]
 800a35e:	f3c4 2307 	ubfx	r3, r4, #8, #8
 800a362:	e9cd 0205 	strd	r0, r2, [sp, #20]
 800a366:	9300      	str	r3, [sp, #0]
 800a368:	4628      	mov	r0, r5
 800a36a:	4a07      	ldr	r2, [pc, #28]	; (800a388 <remoteconfig::json_get_list(char*, unsigned short)+0x64>)
 800a36c:	9704      	str	r7, [sp, #16]
 800a36e:	b2e3      	uxtb	r3, r4
 800a370:	f7fe fe3e 	bl	8008ff0 <snprintf>
 800a374:	b280      	uxth	r0, r0
 800a376:	b008      	add	sp, #32
 800a378:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a37c:	200136bc 			; <UNDEFINED> instruction: 0x200136bc
 800a380:	20000114 	andcs	r0, r0, r4, lsl r1
 800a384:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 800a388:	0801879b 	stmdaeq	r1, {r0, r1, r3, r4, r7, r8, r9, sl, pc}

0800a38c <remoteconfig::json_get_version(char*, unsigned short)>:
 800a38c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800a38e:	2208      	movs	r2, #8
 800a390:	4b09      	ldr	r3, [pc, #36]	; (800a3b8 <remoteconfig::json_get_version(char*, unsigned short)+0x2c>)
 800a392:	9204      	str	r2, [sp, #16]
 800a394:	f1a3 020b 	sub.w	r2, r3, #11
 800a398:	9203      	str	r2, [sp, #12]
 800a39a:	220b      	movs	r2, #11
 800a39c:	9202      	str	r2, [sp, #8]
 800a39e:	4a07      	ldr	r2, [pc, #28]	; (800a3bc <remoteconfig::json_get_version(char*, unsigned short)+0x30>)
 800a3a0:	9305      	str	r3, [sp, #20]
 800a3a2:	3b0e      	subs	r3, #14
 800a3a4:	9201      	str	r2, [sp, #4]
 800a3a6:	9300      	str	r3, [sp, #0]
 800a3a8:	4a05      	ldr	r2, [pc, #20]	; (800a3c0 <remoteconfig::json_get_version(char*, unsigned short)+0x34>)
 800a3aa:	2303      	movs	r3, #3
 800a3ac:	f7fe fe20 	bl	8008ff0 <snprintf>
 800a3b0:	b280      	uxth	r0, r0
 800a3b2:	b007      	add	sp, #28
 800a3b4:	f85d fb04 	ldr.w	pc, [sp], #4
 800a3b8:	20013d92 	mulcs	r1, r2, sp
 800a3bc:	080186b2 	stmdaeq	r1, {r1, r4, r5, r7, r9, sl, pc}
 800a3c0:	080187fa 	stmdaeq	r1, {r1, r3, r4, r5, r6, r7, r8, r9, sl, pc}

0800a3c4 <remoteconfig::json_get_uptime(char*, unsigned short)>:
 800a3c4:	b508      	push	{r3, lr}
 800a3c6:	4b05      	ldr	r3, [pc, #20]	; (800a3dc <remoteconfig::json_get_uptime(char*, unsigned short)+0x18>)
 800a3c8:	681a      	ldr	r2, [r3, #0]
 800a3ca:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800a3ce:	fbb2 f3f3 	udiv	r3, r2, r3
 800a3d2:	4a03      	ldr	r2, [pc, #12]	; (800a3e0 <remoteconfig::json_get_uptime(char*, unsigned short)+0x1c>)
 800a3d4:	f7fe fe0c 	bl	8008ff0 <snprintf>
 800a3d8:	b280      	uxth	r0, r0
 800a3da:	bd08      	pop	{r3, pc}
 800a3dc:	20013e04 	andcs	r3, r1, r4, lsl #28
 800a3e0:	08018840 	stmdaeq	r1, {r6, fp, pc}

0800a3e4 <remoteconfig::json_get_display(char*, unsigned short)>:
 800a3e4:	b508      	push	{r3, lr}
 800a3e6:	4b05      	ldr	r3, [pc, #20]	; (800a3fc <remoteconfig::json_get_display(char*, unsigned short)+0x18>)
 800a3e8:	4a05      	ldr	r2, [pc, #20]	; (800a400 <remoteconfig::json_get_display(char*, unsigned short)+0x1c>)
 800a3ea:	681b      	ldr	r3, [r3, #0]
 800a3ec:	7c1b      	ldrb	r3, [r3, #16]
 800a3ee:	f083 0301 	eor.w	r3, r3, #1
 800a3f2:	f7fe fdfd 	bl	8008ff0 <snprintf>
 800a3f6:	b280      	uxth	r0, r0
 800a3f8:	bd08      	pop	{r3, pc}
 800a3fa:	bf00      	nop
 800a3fc:	20013cf4 	strdcs	r3, [r1], -r4
 800a400:	0801884f 	stmdaeq	r1, {r0, r1, r2, r3, r6, fp, pc}

0800a404 <remoteconfig::json_get_directory(char*, unsigned short)>:
 800a404:	b508      	push	{r3, lr}
 800a406:	4a02      	ldr	r2, [pc, #8]	; (800a410 <remoteconfig::json_get_directory(char*, unsigned short)+0xc>)
 800a408:	f7fe fdf2 	bl	8008ff0 <snprintf>
 800a40c:	b280      	uxth	r0, r0
 800a40e:	bd08      	pop	{r3, pc}
 800a410:	0801885e 	stmdaeq	r1, {r1, r2, r3, r4, r6, fp, pc}

0800a414 <get_file_content(char const*, char*)>:
 800a414:	2300      	movs	r3, #0
 800a416:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a418:	4a10      	ldr	r2, [pc, #64]	; (800a45c <get_file_content(char const*, char*)+0x48>)
 800a41a:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 800a41e:	1e46      	subs	r6, r0, #1
 800a420:	3c01      	subs	r4, #1
 800a422:	f816 7f01 	ldrb.w	r7, [r6, #1]!
 800a426:	f814 5f01 	ldrb.w	r5, [r4, #1]!
 800a42a:	42bd      	cmp	r5, r7
 800a42c:	d10f      	bne.n	800a44e <get_file_content(char const*, char*)+0x3a>
 800a42e:	2d00      	cmp	r5, #0
 800a430:	d1f7      	bne.n	800a422 <get_file_content(char const*, char*)+0xe>
 800a432:	4608      	mov	r0, r1
 800a434:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800a438:	685b      	ldr	r3, [r3, #4]
 800a43a:	3b01      	subs	r3, #1
 800a43c:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800a440:	f800 2b01 	strb.w	r2, [r0], #1
 800a444:	2a00      	cmp	r2, #0
 800a446:	d1f9      	bne.n	800a43c <get_file_content(char const*, char*)+0x28>
 800a448:	1a40      	subs	r0, r0, r1
 800a44a:	3801      	subs	r0, #1
 800a44c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a44e:	3301      	adds	r3, #1
 800a450:	2b03      	cmp	r3, #3
 800a452:	d1e2      	bne.n	800a41a <get_file_content(char const*, char*)+0x6>
 800a454:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800a458:	e7f8      	b.n	800a44c <get_file_content(char const*, char*)+0x38>
 800a45a:	bf00      	nop
 800a45c:	08018ba0 	stmdaeq	r1, {r5, r7, r8, r9, fp, pc}

0800a460 <ArtNet4Node::SetPort(unsigned int, lightset::PortDir)>:
 800a460:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800a462:	4616      	mov	r6, r2
 800a464:	1d07      	adds	r7, r0, #4
 800a466:	4604      	mov	r4, r0
 800a468:	4613      	mov	r3, r2
 800a46a:	4638      	mov	r0, r7
 800a46c:	f10d 0206 	add.w	r2, sp, #6
 800a470:	460d      	mov	r5, r1
 800a472:	f000 fc1d 	bl	800acb0 <ArtNetNode::GetPortAddress(unsigned int, unsigned short&, lightset::PortDir) const>
 800a476:	b1b6      	cbz	r6, 800a4a6 <ArtNet4Node::SetPort(unsigned int, lightset::PortDir)+0x46>
 800a478:	b1a8      	cbz	r0, 800a4a6 <ArtNet4Node::SetPort(unsigned int, lightset::PortDir)+0x46>
 800a47a:	4629      	mov	r1, r5
 800a47c:	4638      	mov	r0, r7
 800a47e:	f000 fda5 	bl	800afcc <ArtNetNode::GetPortProtocol(unsigned int) const>
 800a482:	2801      	cmp	r0, #1
 800a484:	d10f      	bne.n	800a4a6 <ArtNet4Node::SetPort(unsigned int, lightset::PortDir)+0x46>
 800a486:	f894 30a4 	ldrb.w	r3, [r4, #164]	; 0xa4
 800a48a:	b123      	cbz	r3, 800a496 <ArtNet4Node::SetPort(unsigned int, lightset::PortDir)+0x36>
 800a48c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800a490:	3301      	adds	r3, #1
 800a492:	f8ad 3006 	strh.w	r3, [sp, #6]
 800a496:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800a49a:	b933      	cbnz	r3, 800a4aa <ArtNet4Node::SetPort(unsigned int, lightset::PortDir)+0x4a>
 800a49c:	2202      	movs	r2, #2
 800a49e:	4629      	mov	r1, r5
 800a4a0:	4638      	mov	r0, r7
 800a4a2:	f000 fc48 	bl	800ad36 <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)>
 800a4a6:	b003      	add	sp, #12
 800a4a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a4aa:	1e71      	subs	r1, r6, #1
 800a4ac:	424a      	negs	r2, r1
 800a4ae:	414a      	adcs	r2, r1
 800a4b0:	f604 008c 	addw	r0, r4, #2188	; 0x88c
 800a4b4:	4629      	mov	r1, r5
 800a4b6:	f002 fcad 	bl	800ce14 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)>
 800a4ba:	e7f4      	b.n	800a4a6 <ArtNet4Node::SetPort(unsigned int, lightset::PortDir)+0x46>

0800a4bc <ArtNet4Node::~ArtNet4Node()>:
 800a4bc:	b510      	push	{r4, lr}
 800a4be:	4604      	mov	r4, r0
 800a4c0:	4b05      	ldr	r3, [pc, #20]	; (800a4d8 <ArtNet4Node::~ArtNet4Node()+0x1c>)
 800a4c2:	6003      	str	r3, [r0, #0]
 800a4c4:	f600 008c 	addw	r0, r0, #2188	; 0x88c
 800a4c8:	f002 fbb4 	bl	800cc34 <E131Bridge::Stop()>
 800a4cc:	1d20      	adds	r0, r4, #4
 800a4ce:	f000 f961 	bl	800a794 <ArtNetNode::Stop()>
 800a4d2:	4620      	mov	r0, r4
 800a4d4:	bd10      	pop	{r4, pc}
 800a4d6:	bf00      	nop
 800a4d8:	08019108 	stmdaeq	r1, {r3, r8, ip, pc}

0800a4dc <ArtNet4Node::HandleAddress(unsigned char)>:
 800a4dc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800a4de:	4605      	mov	r5, r0
 800a4e0:	460c      	mov	r4, r1
 800a4e2:	2600      	movs	r6, #0
 800a4e4:	1d07      	adds	r7, r0, #4
 800a4e6:	792b      	ldrb	r3, [r5, #4]
 800a4e8:	ebb6 0f83 	cmp.w	r6, r3, lsl #2
 800a4ec:	d224      	bcs.n	800a538 <ArtNet4Node::HandleAddress(unsigned char)+0x5c>
 800a4ee:	2301      	movs	r3, #1
 800a4f0:	4631      	mov	r1, r6
 800a4f2:	4638      	mov	r0, r7
 800a4f4:	f10d 0206 	add.w	r2, sp, #6
 800a4f8:	f000 fbda 	bl	800acb0 <ArtNetNode::GetPortAddress(unsigned int, unsigned short&, lightset::PortDir) const>
 800a4fc:	b150      	cbz	r0, 800a514 <ArtNet4Node::HandleAddress(unsigned char)+0x38>
 800a4fe:	f895 30a4 	ldrb.w	r3, [r5, #164]	; 0xa4
 800a502:	b123      	cbz	r3, 800a50e <ArtNet4Node::HandleAddress(unsigned char)+0x32>
 800a504:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800a508:	3301      	adds	r3, #1
 800a50a:	f8ad 3006 	strh.w	r3, [sp, #6]
 800a50e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800a512:	b90b      	cbnz	r3, 800a518 <ArtNet4Node::HandleAddress(unsigned char)+0x3c>
 800a514:	3601      	adds	r6, #1
 800a516:	e7e6      	b.n	800a4e6 <ArtNet4Node::HandleAddress(unsigned char)+0xa>
 800a518:	4631      	mov	r1, r6
 800a51a:	4638      	mov	r0, r7
 800a51c:	f000 fd56 	bl	800afcc <ArtNetNode::GetPortProtocol(unsigned int) const>
 800a520:	4602      	mov	r2, r0
 800a522:	2a01      	cmp	r2, #1
 800a524:	bf18      	it	ne
 800a526:	2202      	movne	r2, #2
 800a528:	4631      	mov	r1, r6
 800a52a:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800a52e:	f605 008c 	addw	r0, r5, #2188	; 0x88c
 800a532:	f002 fc6f 	bl	800ce14 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)>
 800a536:	e7ed      	b.n	800a514 <ArtNet4Node::HandleAddress(unsigned char)+0x38>
 800a538:	2c13      	cmp	r4, #19
 800a53a:	f004 0603 	and.w	r6, r4, #3
 800a53e:	d80a      	bhi.n	800a556 <ArtNet4Node::HandleAddress(unsigned char)+0x7a>
 800a540:	2c0f      	cmp	r4, #15
 800a542:	d819      	bhi.n	800a578 <ArtNet4Node::HandleAddress(unsigned char)+0x9c>
 800a544:	2c02      	cmp	r4, #2
 800a546:	d015      	beq.n	800a574 <ArtNet4Node::HandleAddress(unsigned char)+0x98>
 800a548:	3c03      	subs	r4, #3
 800a54a:	2c01      	cmp	r4, #1
 800a54c:	d810      	bhi.n	800a570 <ArtNet4Node::HandleAddress(unsigned char)+0x94>
 800a54e:	2300      	movs	r3, #0
 800a550:	f885 3894 	strb.w	r3, [r5, #2196]	; 0x894
 800a554:	e00c      	b.n	800a570 <ArtNet4Node::HandleAddress(unsigned char)+0x94>
 800a556:	2c53      	cmp	r4, #83	; 0x53
 800a558:	d806      	bhi.n	800a568 <ArtNet4Node::HandleAddress(unsigned char)+0x8c>
 800a55a:	2c4f      	cmp	r4, #79	; 0x4f
 800a55c:	d908      	bls.n	800a570 <ArtNet4Node::HandleAddress(unsigned char)+0x94>
 800a55e:	2144      	movs	r1, #68	; 0x44
 800a560:	2300      	movs	r3, #0
 800a562:	fb01 5506 	mla	r5, r1, r6, r5
 800a566:	e00b      	b.n	800a580 <ArtNet4Node::HandleAddress(unsigned char)+0xa4>
 800a568:	3470      	adds	r4, #112	; 0x70
 800a56a:	b2e4      	uxtb	r4, r4
 800a56c:	2c03      	cmp	r4, #3
 800a56e:	d90a      	bls.n	800a586 <ArtNet4Node::HandleAddress(unsigned char)+0xaa>
 800a570:	b003      	add	sp, #12
 800a572:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a574:	2301      	movs	r3, #1
 800a576:	e7eb      	b.n	800a550 <ArtNet4Node::HandleAddress(unsigned char)+0x74>
 800a578:	2144      	movs	r1, #68	; 0x44
 800a57a:	2301      	movs	r3, #1
 800a57c:	fb01 5506 	mla	r5, r1, r6, r5
 800a580:	f8c5 3dd8 	str.w	r3, [r5, #3544]	; 0xdd8
 800a584:	e7f4      	b.n	800a570 <ArtNet4Node::HandleAddress(unsigned char)+0x94>
 800a586:	4631      	mov	r1, r6
 800a588:	1d28      	adds	r0, r5, #4
 800a58a:	f000 fd1f 	bl	800afcc <ArtNetNode::GetPortProtocol(unsigned int) const>
 800a58e:	2801      	cmp	r0, #1
 800a590:	d1ee      	bne.n	800a570 <ArtNet4Node::HandleAddress(unsigned char)+0x94>
 800a592:	4631      	mov	r1, r6
 800a594:	f605 008c 	addw	r0, r5, #2188	; 0x88c
 800a598:	b003      	add	sp, #12
 800a59a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800a59e:	f002 bf53 	b.w	800d448 <E131Bridge::Clear(unsigned int)>

0800a5a2 <ArtNet4Node::IsStatusChanged()>:
 800a5a2:	f600 008c 	addw	r0, r0, #2188	; 0x88c
 800a5a6:	f002 bf47 	b.w	800d438 <E131Bridge::IsStatusChanged()>

0800a5aa <ArtNet4Node::~ArtNet4Node()>:
 800a5aa:	b510      	push	{r4, lr}
 800a5ac:	4604      	mov	r4, r0
 800a5ae:	f7ff ff85 	bl	800a4bc <ArtNet4Node::~ArtNet4Node()>
 800a5b2:	4620      	mov	r0, r4
 800a5b4:	f00b fae4 	bl	8015b80 <operator delete(void*)>
 800a5b8:	4620      	mov	r0, r4
 800a5ba:	bd10      	pop	{r4, pc}

0800a5bc <ArtNet4Node::GetStatus(unsigned int)>:
 800a5bc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a5be:	2301      	movs	r3, #1
 800a5c0:	4604      	mov	r4, r0
 800a5c2:	f10d 0206 	add.w	r2, sp, #6
 800a5c6:	f600 008c 	addw	r0, r0, #2188	; 0x88c
 800a5ca:	460d      	mov	r5, r1
 800a5cc:	f002 fc9a 	bl	800cf04 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 800a5d0:	b188      	cbz	r0, 800a5f6 <ArtNet4Node::GetStatus(unsigned int)+0x3a>
 800a5d2:	2144      	movs	r1, #68	; 0x44
 800a5d4:	fb01 4405 	mla	r4, r1, r5, r4
 800a5d8:	f894 3dde 	ldrb.w	r3, [r4, #3550]	; 0xdde
 800a5dc:	2b00      	cmp	r3, #0
 800a5de:	f894 3ddd 	ldrb.w	r3, [r4, #3549]	; 0xddd
 800a5e2:	bf14      	ite	ne
 800a5e4:	2080      	movne	r0, #128	; 0x80
 800a5e6:	2000      	moveq	r0, #0
 800a5e8:	2b00      	cmp	r3, #0
 800a5ea:	bf14      	ite	ne
 800a5ec:	2308      	movne	r3, #8
 800a5ee:	2300      	moveq	r3, #0
 800a5f0:	4318      	orrs	r0, r3
 800a5f2:	f040 0001 	orr.w	r0, r0, #1
 800a5f6:	b003      	add	sp, #12
 800a5f8:	bd30      	pop	{r4, r5, pc}
	...

0800a5fc <ArtNet4Node::ArtNet4Node(unsigned char)>:
 800a5fc:	b538      	push	{r3, r4, r5, lr}
 800a5fe:	4604      	mov	r4, r0
 800a600:	1d05      	adds	r5, r0, #4
 800a602:	4628      	mov	r0, r5
 800a604:	f000 f964 	bl	800a8d0 <ArtNetNode::ArtNetNode(unsigned char)>
 800a608:	4b05      	ldr	r3, [pc, #20]	; (800a620 <ArtNet4Node::ArtNet4Node(unsigned char)+0x24>)
 800a60a:	f604 008c 	addw	r0, r4, #2188	; 0x88c
 800a60e:	6023      	str	r3, [r4, #0]
 800a610:	f002 fb60 	bl	800ccd4 <E131Bridge::E131Bridge()>
 800a614:	4628      	mov	r0, r5
 800a616:	4621      	mov	r1, r4
 800a618:	f000 f866 	bl	800a6e8 <ArtNetNode::SetArtNet4Handler(ArtNet4Handler*)>
 800a61c:	4620      	mov	r0, r4
 800a61e:	bd38      	pop	{r3, r4, r5, pc}
 800a620:	08019108 	stmdaeq	r1, {r3, r8, ip, pc}

0800a624 <ArtNet4Node::Start()>:
 800a624:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a626:	4604      	mov	r4, r0
 800a628:	2500      	movs	r5, #0
 800a62a:	1d06      	adds	r6, r0, #4
 800a62c:	7923      	ldrb	r3, [r4, #4]
 800a62e:	ebb5 0f83 	cmp.w	r5, r3, lsl #2
 800a632:	d218      	bcs.n	800a666 <ArtNet4Node::Start()+0x42>
 800a634:	2301      	movs	r3, #1
 800a636:	4629      	mov	r1, r5
 800a638:	4630      	mov	r0, r6
 800a63a:	f10d 0206 	add.w	r2, sp, #6
 800a63e:	f000 fb37 	bl	800acb0 <ArtNetNode::GetPortAddress(unsigned int, unsigned short&, lightset::PortDir) const>
 800a642:	b170      	cbz	r0, 800a662 <ArtNet4Node::Start()+0x3e>
 800a644:	4629      	mov	r1, r5
 800a646:	4630      	mov	r0, r6
 800a648:	f000 fcc0 	bl	800afcc <ArtNetNode::GetPortProtocol(unsigned int) const>
 800a64c:	2801      	cmp	r0, #1
 800a64e:	d108      	bne.n	800a662 <ArtNet4Node::Start()+0x3e>
 800a650:	4629      	mov	r1, r5
 800a652:	4630      	mov	r0, r6
 800a654:	f000 fceb 	bl	800b02e <ArtNetNode::GetMergeMode(unsigned int) const>
 800a658:	2344      	movs	r3, #68	; 0x44
 800a65a:	436b      	muls	r3, r5
 800a65c:	f604 52d8 	addw	r2, r4, #3544	; 0xdd8
 800a660:	50d0      	str	r0, [r2, r3]
 800a662:	3501      	adds	r5, #1
 800a664:	e7e2      	b.n	800a62c <ArtNet4Node::Start()+0x8>
 800a666:	f8d4 36d4 	ldr.w	r3, [r4, #1748]	; 0x6d4
 800a66a:	4630      	mov	r0, r6
 800a66c:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800a670:	bf2c      	ite	cs
 800a672:	2300      	movcs	r3, #0
 800a674:	2301      	movcc	r3, #1
 800a676:	f884 3d85 	strb.w	r3, [r4, #3461]	; 0xd85
 800a67a:	f894 36e4 	ldrb.w	r3, [r4, #1764]	; 0x6e4
 800a67e:	f884 3d86 	strb.w	r3, [r4, #3462]	; 0xd86
 800a682:	68e3      	ldr	r3, [r4, #12]
 800a684:	f8c4 3890 	str.w	r3, [r4, #2192]	; 0x890
 800a688:	f000 f840 	bl	800a70c <ArtNetNode::Start()>
 800a68c:	f604 008c 	addw	r0, r4, #2188	; 0x88c
 800a690:	b002      	add	sp, #8
 800a692:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a696:	f002 ba91 	b.w	800cbbc <E131Bridge::Start()>

0800a69a <ArtNet4Node::Run()>:
 800a69a:	b510      	push	{r4, lr}
 800a69c:	4604      	mov	r4, r0
 800a69e:	3004      	adds	r0, #4
 800a6a0:	f000 fa28 	bl	800aaf4 <ArtNetNode::Run()>
 800a6a4:	f894 3d97 	ldrb.w	r3, [r4, #3479]	; 0xd97
 800a6a8:	b12b      	cbz	r3, 800a6b6 <ArtNet4Node::Run()+0x1c>
 800a6aa:	f604 008c 	addw	r0, r4, #2188	; 0x88c
 800a6ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a6b2:	f002 bf2b 	b.w	800d50c <E131Bridge::Run()>
 800a6b6:	bd10      	pop	{r4, pc}

0800a6b8 <ArtNet4Node::Print()>:
 800a6b8:	b510      	push	{r4, lr}
 800a6ba:	4604      	mov	r4, r0
 800a6bc:	3004      	adds	r0, #4
 800a6be:	f001 fc6d 	bl	800bf9c <ArtNetNode::Print()>
 800a6c2:	f894 36e6 	ldrb.w	r3, [r4, #1766]	; 0x6e6
 800a6c6:	b15b      	cbz	r3, 800a6e0 <ArtNet4Node::Print()+0x28>
 800a6c8:	f894 30a4 	ldrb.w	r3, [r4, #164]	; 0xa4
 800a6cc:	b113      	cbz	r3, 800a6d4 <ArtNet4Node::Print()+0x1c>
 800a6ce:	4805      	ldr	r0, [pc, #20]	; (800a6e4 <ArtNet4Node::Print()+0x2c>)
 800a6d0:	f7fe fc66 	bl	8008fa0 <printf>
 800a6d4:	f604 008c 	addw	r0, r4, #2188	; 0x88c
 800a6d8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a6dc:	f003 b98e 	b.w	800d9fc <E131Bridge::Print()>
 800a6e0:	bd10      	pop	{r4, pc}
 800a6e2:	bf00      	nop
 800a6e4:	080190e2 	stmdaeq	r1, {r1, r5, r6, r7, ip, pc}

0800a6e8 <ArtNetNode::SetArtNet4Handler(ArtNet4Handler*)>:
 800a6e8:	61c1      	str	r1, [r0, #28]
 800a6ea:	4770      	bx	lr

0800a6ec <strncpy.isra.0>:
 800a6ec:	3901      	subs	r1, #1
 800a6ee:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800a6f2:	b92b      	cbnz	r3, 800a700 <strncpy.isra.0+0x14>
 800a6f4:	4402      	add	r2, r0
 800a6f6:	4290      	cmp	r0, r2
 800a6f8:	d007      	beq.n	800a70a <strncpy.isra.0+0x1e>
 800a6fa:	f800 3b01 	strb.w	r3, [r0], #1
 800a6fe:	e7fa      	b.n	800a6f6 <strncpy.isra.0+0xa>
 800a700:	3a01      	subs	r2, #1
 800a702:	f800 3b01 	strb.w	r3, [r0], #1
 800a706:	d1f2      	bne.n	800a6ee <strncpy.isra.0+0x2>
 800a708:	4770      	bx	lr
 800a70a:	4770      	bx	lr

0800a70c <ArtNetNode::Start()>:
 800a70c:	b570      	push	{r4, r5, r6, lr}
 800a70e:	4d1f      	ldr	r5, [pc, #124]	; (800a78c <ArtNetNode::Start()+0x80>)
 800a710:	f990 3098 	ldrsb.w	r3, [r0, #152]	; 0x98
 800a714:	682a      	ldr	r2, [r5, #0]
 800a716:	f023 0302 	bic.w	r3, r3, #2
 800a71a:	7851      	ldrb	r1, [r2, #1]
 800a71c:	4604      	mov	r4, r0
 800a71e:	2900      	cmp	r1, #0
 800a720:	bf14      	ite	ne
 800a722:	2102      	movne	r1, #2
 800a724:	2100      	moveq	r1, #0
 800a726:	430b      	orrs	r3, r1
 800a728:	f880 3098 	strb.w	r3, [r0, #152]	; 0x98
 800a72c:	7812      	ldrb	r2, [r2, #0]
 800a72e:	f023 0304 	bic.w	r3, r3, #4
 800a732:	2a00      	cmp	r2, #0
 800a734:	bf14      	ite	ne
 800a736:	2204      	movne	r2, #4
 800a738:	2200      	moveq	r2, #0
 800a73a:	4313      	orrs	r3, r2
 800a73c:	f880 3098 	strb.w	r3, [r0, #152]	; 0x98
 800a740:	f001 f914 	bl	800b96c <ArtNetNode::FillPollReply()>
 800a744:	f641 1136 	movw	r1, #6454	; 0x1936
 800a748:	6828      	ldr	r0, [r5, #0]
 800a74a:	f008 f9f3 	bl	8012b34 <Network::Begin(unsigned short)>
 800a74e:	2302      	movs	r3, #2
 800a750:	f884 36d9 	strb.w	r3, [r4, #1753]	; 0x6d9
 800a754:	6963      	ldr	r3, [r4, #20]
 800a756:	6060      	str	r0, [r4, #4]
 800a758:	b16b      	cbz	r3, 800a776 <ArtNetNode::Start()+0x6a>
 800a75a:	2500      	movs	r5, #0
 800a75c:	f604 060c 	addw	r6, r4, #2060	; 0x80c
 800a760:	012b      	lsls	r3, r5, #4
 800a762:	5cf3      	ldrb	r3, [r6, r3]
 800a764:	b123      	cbz	r3, 800a770 <ArtNetNode::Start()+0x64>
 800a766:	6960      	ldr	r0, [r4, #20]
 800a768:	4629      	mov	r1, r5
 800a76a:	6803      	ldr	r3, [r0, #0]
 800a76c:	689b      	ldr	r3, [r3, #8]
 800a76e:	4798      	blx	r3
 800a770:	3501      	adds	r5, #1
 800a772:	2d04      	cmp	r5, #4
 800a774:	d1f4      	bne.n	800a760 <ArtNetNode::Start()+0x54>
 800a776:	4b06      	ldr	r3, [pc, #24]	; (800a790 <ArtNetNode::Start()+0x84>)
 800a778:	2102      	movs	r1, #2
 800a77a:	6818      	ldr	r0, [r3, #0]
 800a77c:	f00b f8da 	bl	8015934 <LedBlink::SetMode(ledblink::Mode)>
 800a780:	4620      	mov	r0, r4
 800a782:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a786:	2100      	movs	r1, #0
 800a788:	f001 b962 	b.w	800ba50 <ArtNetNode::SendPollRelply(bool)>
 800a78c:	200136bc 			; <UNDEFINED> instruction: 0x200136bc
 800a790:	20013de0 	andcs	r3, r1, r0, ror #27

0800a794 <ArtNetNode::Stop()>:
 800a794:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a798:	2500      	movs	r5, #0
 800a79a:	4604      	mov	r4, r0
 800a79c:	4606      	mov	r6, r0
 800a79e:	46a9      	mov	r9, r5
 800a7a0:	f04f 0a01 	mov.w	sl, #1
 800a7a4:	4f1f      	ldr	r7, [pc, #124]	; (800a824 <ArtNetNode::Stop()+0x90>)
 800a7a6:	f8df 8080 	ldr.w	r8, [pc, #128]	; 800a828 <ArtNetNode::Stop()+0x94>
 800a7aa:	f8d6 3704 	ldr.w	r3, [r6, #1796]	; 0x704
 800a7ae:	b97b      	cbnz	r3, 800a7d0 <ArtNetNode::Stop()+0x3c>
 800a7b0:	68a0      	ldr	r0, [r4, #8]
 800a7b2:	b118      	cbz	r0, 800a7bc <ArtNetNode::Stop()+0x28>
 800a7b4:	6803      	ldr	r3, [r0, #0]
 800a7b6:	4629      	mov	r1, r5
 800a7b8:	68db      	ldr	r3, [r3, #12]
 800a7ba:	4798      	blx	r3
 800a7bc:	f8d8 3000 	ldr.w	r3, [r8]
 800a7c0:	f8c7 9600 	str.w	r9, [r7, #1536]	; 0x600
 800a7c4:	07db      	lsls	r3, r3, #31
 800a7c6:	bf58      	it	pl
 800a7c8:	f8c8 a000 	strpl.w	sl, [r8]
 800a7cc:	f886 9709 	strb.w	r9, [r6, #1801]	; 0x709
 800a7d0:	3501      	adds	r5, #1
 800a7d2:	2d08      	cmp	r5, #8
 800a7d4:	f106 0624 	add.w	r6, r6, #36	; 0x24
 800a7d8:	f207 6704 	addw	r7, r7, #1540	; 0x604
 800a7dc:	d1e5      	bne.n	800a7aa <ArtNetNode::Stop()+0x16>
 800a7de:	6963      	ldr	r3, [r4, #20]
 800a7e0:	b16b      	cbz	r3, 800a7fe <ArtNetNode::Stop()+0x6a>
 800a7e2:	2500      	movs	r5, #0
 800a7e4:	f604 060c 	addw	r6, r4, #2060	; 0x80c
 800a7e8:	012b      	lsls	r3, r5, #4
 800a7ea:	5cf3      	ldrb	r3, [r6, r3]
 800a7ec:	b123      	cbz	r3, 800a7f8 <ArtNetNode::Stop()+0x64>
 800a7ee:	6960      	ldr	r0, [r4, #20]
 800a7f0:	4629      	mov	r1, r5
 800a7f2:	6803      	ldr	r3, [r0, #0]
 800a7f4:	68db      	ldr	r3, [r3, #12]
 800a7f6:	4798      	blx	r3
 800a7f8:	3501      	adds	r5, #1
 800a7fa:	2d04      	cmp	r5, #4
 800a7fc:	d1f4      	bne.n	800a7e8 <ArtNetNode::Stop()+0x54>
 800a7fe:	4b0b      	ldr	r3, [pc, #44]	; (800a82c <ArtNetNode::Stop()+0x98>)
 800a800:	2100      	movs	r1, #0
 800a802:	6818      	ldr	r0, [r3, #0]
 800a804:	f00b f896 	bl	8015934 <LedBlink::SetMode(ledblink::Mode)>
 800a808:	f894 3097 	ldrb.w	r3, [r4, #151]	; 0x97
 800a80c:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 800a810:	f063 037f 	orn	r3, r3, #127	; 0x7f
 800a814:	f884 3097 	strb.w	r3, [r4, #151]	; 0x97
 800a818:	2300      	movs	r3, #0
 800a81a:	f884 36d9 	strb.w	r3, [r4, #1753]	; 0x6d9
 800a81e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a822:	bf00      	nop
 800a824:	2000011c 	andcs	r0, r0, ip, lsl r1
 800a828:	20000118 	andcs	r0, r0, r8, lsl r1
 800a82c:	20013de0 	andcs	r3, r1, r0, ror #27

0800a830 <ArtNetNode::SetShortName(char const*)>:
 800a830:	b570      	push	{r4, r5, r6, lr}
 800a832:	f100 0544 	add.w	r5, r0, #68	; 0x44
 800a836:	4604      	mov	r4, r0
 800a838:	2211      	movs	r2, #17
 800a83a:	4628      	mov	r0, r5
 800a83c:	f7ff ff56 	bl	800a6ec <strncpy.isra.0>
 800a840:	2300      	movs	r3, #0
 800a842:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 800a846:	462b      	mov	r3, r5
 800a848:	f104 0156 	add.w	r1, r4, #86	; 0x56
 800a84c:	428b      	cmp	r3, r1
 800a84e:	d004      	beq.n	800a85a <ArtNetNode::SetShortName(char const*)+0x2a>
 800a850:	f813 2b01 	ldrb.w	r2, [r3], #1
 800a854:	f883 254d 	strb.w	r2, [r3, #1357]	; 0x54d
 800a858:	e7f8      	b.n	800a84c <ArtNetNode::SetShortName(char const*)+0x1c>
 800a85a:	f894 36d9 	ldrb.w	r3, [r4, #1753]	; 0x6d9
 800a85e:	2b02      	cmp	r3, #2
 800a860:	d10d      	bne.n	800a87e <ArtNetNode::SetShortName(char const*)+0x4e>
 800a862:	6a20      	ldr	r0, [r4, #32]
 800a864:	b118      	cbz	r0, 800a86e <ArtNetNode::SetShortName(char const*)+0x3e>
 800a866:	6803      	ldr	r3, [r0, #0]
 800a868:	4629      	mov	r1, r5
 800a86a:	689b      	ldr	r3, [r3, #8]
 800a86c:	4798      	blx	r3
 800a86e:	6a60      	ldr	r0, [r4, #36]	; 0x24
 800a870:	b128      	cbz	r0, 800a87e <ArtNetNode::SetShortName(char const*)+0x4e>
 800a872:	6803      	ldr	r3, [r0, #0]
 800a874:	4629      	mov	r1, r5
 800a876:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a87a:	689b      	ldr	r3, [r3, #8]
 800a87c:	4718      	bx	r3
 800a87e:	bd70      	pop	{r4, r5, r6, pc}

0800a880 <ArtNetNode::SetLongName(char const*)>:
 800a880:	b570      	push	{r4, r5, r6, lr}
 800a882:	f100 0556 	add.w	r5, r0, #86	; 0x56
 800a886:	4604      	mov	r4, r0
 800a888:	223f      	movs	r2, #63	; 0x3f
 800a88a:	4628      	mov	r0, r5
 800a88c:	f7ff ff2e 	bl	800a6ec <strncpy.isra.0>
 800a890:	2300      	movs	r3, #0
 800a892:	f884 3095 	strb.w	r3, [r4, #149]	; 0x95
 800a896:	462b      	mov	r3, r5
 800a898:	f104 0196 	add.w	r1, r4, #150	; 0x96
 800a89c:	428b      	cmp	r3, r1
 800a89e:	d004      	beq.n	800a8aa <ArtNetNode::SetLongName(char const*)+0x2a>
 800a8a0:	f813 2b01 	ldrb.w	r2, [r3], #1
 800a8a4:	f883 254d 	strb.w	r2, [r3, #1357]	; 0x54d
 800a8a8:	e7f8      	b.n	800a89c <ArtNetNode::SetLongName(char const*)+0x1c>
 800a8aa:	f894 36d9 	ldrb.w	r3, [r4, #1753]	; 0x6d9
 800a8ae:	2b02      	cmp	r3, #2
 800a8b0:	d10d      	bne.n	800a8ce <ArtNetNode::SetLongName(char const*)+0x4e>
 800a8b2:	6a20      	ldr	r0, [r4, #32]
 800a8b4:	b118      	cbz	r0, 800a8be <ArtNetNode::SetLongName(char const*)+0x3e>
 800a8b6:	6803      	ldr	r3, [r0, #0]
 800a8b8:	4629      	mov	r1, r5
 800a8ba:	68db      	ldr	r3, [r3, #12]
 800a8bc:	4798      	blx	r3
 800a8be:	6a60      	ldr	r0, [r4, #36]	; 0x24
 800a8c0:	b128      	cbz	r0, 800a8ce <ArtNetNode::SetLongName(char const*)+0x4e>
 800a8c2:	6803      	ldr	r3, [r0, #0]
 800a8c4:	4629      	mov	r1, r5
 800a8c6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a8ca:	68db      	ldr	r3, [r3, #12]
 800a8cc:	4718      	bx	r3
 800a8ce:	bd70      	pop	{r4, r5, r6, pc}

0800a8d0 <ArtNetNode::ArtNetNode(unsigned char)>:
 800a8d0:	2300      	movs	r3, #0
 800a8d2:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800a8d6:	2902      	cmp	r1, #2
 800a8d8:	bf28      	it	cs
 800a8da:	2102      	movcs	r1, #2
 800a8dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a8de:	4604      	mov	r4, r0
 800a8e0:	e9c0 2301 	strd	r2, r3, [r0, #4]
 800a8e4:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800a8e8:	4a41      	ldr	r2, [pc, #260]	; (800a9f0 <ArtNetNode::ArtNetNode(unsigned char)+0x120>)
 800a8ea:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800a8ee:	e9c0 3307 	strd	r3, r3, [r0, #28]
 800a8f2:	7001      	strb	r1, [r0, #0]
 800a8f4:	6010      	str	r0, [r2, #0]
 800a8f6:	b085      	sub	sp, #20
 800a8f8:	6243      	str	r3, [r0, #36]	; 0x24
 800a8fa:	f8c0 3668 	str.w	r3, [r0, #1640]	; 0x668
 800a8fe:	f8c0 366c 	str.w	r3, [r0, #1644]	; 0x66c
 800a902:	f880 3672 	strb.w	r3, [r0, #1650]	; 0x672
 800a906:	f100 0228 	add.w	r2, r0, #40	; 0x28
 800a90a:	f100 01a4 	add.w	r1, r0, #164	; 0xa4
 800a90e:	428a      	cmp	r2, r1
 800a910:	d002      	beq.n	800a918 <ArtNetNode::ArtNetNode(unsigned char)+0x48>
 800a912:	f802 3b01 	strb.w	r3, [r2], #1
 800a916:	e7fa      	b.n	800a90e <ArtNetNode::ArtNetNode(unsigned char)+0x3e>
 800a918:	4b36      	ldr	r3, [pc, #216]	; (800a9f4 <ArtNetNode::ArtNetNode(unsigned char)+0x124>)
 800a91a:	f104 0138 	add.w	r1, r4, #56	; 0x38
 800a91e:	6818      	ldr	r0, [r3, #0]
 800a920:	6903      	ldr	r3, [r0, #16]
 800a922:	62a3      	str	r3, [r4, #40]	; 0x28
 800a924:	6982      	ldr	r2, [r0, #24]
 800a926:	ea63 0302 	orn	r3, r3, r2
 800a92a:	62e3      	str	r3, [r4, #44]	; 0x2c
 800a92c:	6363      	str	r3, [r4, #52]	; 0x34
 800a92e:	f008 f907 	bl	8012b40 <Network::MacAddressCopyTo(unsigned char*)>
 800a932:	23d0      	movs	r3, #208	; 0xd0
 800a934:	f884 3097 	strb.w	r3, [r4, #151]	; 0x97
 800a938:	f244 0318 	movw	r3, #16408	; 0x4018
 800a93c:	2200      	movs	r2, #0
 800a93e:	f8a4 3098 	strh.w	r3, [r4, #152]	; 0x98
 800a942:	f504 61dd 	add.w	r1, r4, #1768	; 0x6e8
 800a946:	f204 63c4 	addw	r3, r4, #1732	; 0x6c4
 800a94a:	428b      	cmp	r3, r1
 800a94c:	d002      	beq.n	800a954 <ArtNetNode::ArtNetNode(unsigned char)+0x84>
 800a94e:	f803 2b01 	strb.w	r2, [r3], #1
 800a952:	e7fa      	b.n	800a94a <ArtNetNode::ArtNetNode(unsigned char)+0x7a>
 800a954:	f240 1201 	movw	r2, #257	; 0x101
 800a958:	f8a4 26d8 	strh.w	r2, [r4, #1752]	; 0x6d8
 800a95c:	f242 7210 	movw	r2, #10000	; 0x2710
 800a960:	2500      	movs	r5, #0
 800a962:	2708      	movs	r7, #8
 800a964:	f8c4 26d0 	str.w	r2, [r4, #1744]	; 0x6d0
 800a968:	f604 0108 	addw	r1, r4, #2056	; 0x808
 800a96c:	f604 0688 	addw	r6, r4, #2184	; 0x888
 800a970:	f103 0024 	add.w	r0, r3, #36	; 0x24
 800a974:	4283      	cmp	r3, r0
 800a976:	d005      	beq.n	800a984 <ArtNetNode::ArtNetNode(unsigned char)+0xb4>
 800a978:	f803 5b01 	strb.w	r5, [r3], #1
 800a97c:	e7fa      	b.n	800a974 <ArtNetNode::ArtNetNode(unsigned char)+0xa4>
 800a97e:	4603      	mov	r3, r0
 800a980:	4611      	mov	r1, r2
 800a982:	e7f5      	b.n	800a970 <ArtNetNode::ArtNetNode(unsigned char)+0xa0>
 800a984:	460a      	mov	r2, r1
 800a986:	f101 0310 	add.w	r3, r1, #16
 800a98a:	429a      	cmp	r2, r3
 800a98c:	d002      	beq.n	800a994 <ArtNetNode::ArtNetNode(unsigned char)+0xc4>
 800a98e:	f802 5b01 	strb.w	r5, [r2], #1
 800a992:	e7fa      	b.n	800a98a <ArtNetNode::ArtNetNode(unsigned char)+0xba>
 800a994:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800a996:	4296      	cmp	r6, r2
 800a998:	608b      	str	r3, [r1, #8]
 800a99a:	70cf      	strb	r7, [r1, #3]
 800a99c:	d1ef      	bne.n	800a97e <ArtNetNode::ArtNetNode(unsigned char)+0xae>
 800a99e:	4620      	mov	r0, r4
 800a9a0:	4915      	ldr	r1, [pc, #84]	; (800a9f8 <ArtNetNode::ArtNetNode(unsigned char)+0x128>)
 800a9a2:	f7ff ff45 	bl	800a830 <ArtNetNode::SetShortName(char const*)>
 800a9a6:	4b15      	ldr	r3, [pc, #84]	; (800a9fc <ArtNetNode::ArtNetNode(unsigned char)+0x12c>)
 800a9a8:	f204 6583 	addw	r5, r4, #1667	; 0x683
 800a9ac:	9302      	str	r3, [sp, #8]
 800a9ae:	2304      	movs	r3, #4
 800a9b0:	9301      	str	r3, [sp, #4]
 800a9b2:	4b13      	ldr	r3, [pc, #76]	; (800aa00 <ArtNetNode::ArtNetNode(unsigned char)+0x130>)
 800a9b4:	4a13      	ldr	r2, [pc, #76]	; (800aa04 <ArtNetNode::ArtNetNode(unsigned char)+0x134>)
 800a9b6:	9300      	str	r3, [sp, #0]
 800a9b8:	2140      	movs	r1, #64	; 0x40
 800a9ba:	4b13      	ldr	r3, [pc, #76]	; (800aa08 <ArtNetNode::ArtNetNode(unsigned char)+0x138>)
 800a9bc:	4628      	mov	r0, r5
 800a9be:	f7fe fb17 	bl	8008ff0 <snprintf>
 800a9c2:	4629      	mov	r1, r5
 800a9c4:	4620      	mov	r0, r4
 800a9c6:	f7ff ff5b 	bl	800a880 <ArtNetNode::SetLongName(char const*)>
 800a9ca:	4b10      	ldr	r3, [pc, #64]	; (800aa0c <ArtNetNode::ArtNetNode(unsigned char)+0x13c>)
 800a9cc:	f204 6073 	addw	r0, r4, #1651	; 0x673
 800a9d0:	781a      	ldrb	r2, [r3, #0]
 800a9d2:	490f      	ldr	r1, [pc, #60]	; (800aa10 <ArtNetNode::ArtNetNode(unsigned char)+0x140>)
 800a9d4:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
 800a9d8:	785b      	ldrb	r3, [r3, #1]
 800a9da:	220f      	movs	r2, #15
 800a9dc:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800a9e0:	f7ff fe84 	bl	800a6ec <strncpy.isra.0>
 800a9e4:	2300      	movs	r3, #0
 800a9e6:	4620      	mov	r0, r4
 800a9e8:	f884 3682 	strb.w	r3, [r4, #1666]	; 0x682
 800a9ec:	b005      	add	sp, #20
 800a9ee:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a9f0:	2000313c 	andcs	r3, r0, ip, lsr r1
 800a9f4:	200136bc 			; <UNDEFINED> instruction: 0x200136bc
 800a9f8:	08019186 	stmdaeq	r1, {r1, r2, r7, r8, ip, pc}
 800a9fc:	08019161 	stmdaeq	r1, {r0, r5, r6, r8, ip, pc}
 800aa00:	0801917e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r8, ip, pc}
 800aa04:	08019155 	stmdaeq	r1, {r0, r2, r4, r6, r8, ip, pc}
 800aa08:	080186b2 	stmdaeq	r1, {r1, r4, r5, r7, r9, sl, pc}
 800aa0c:	08019423 	stmdaeq	r1, {r0, r1, r5, sl, ip, pc}
 800aa10:	08019175 	stmdaeq	r1, {r0, r2, r4, r5, r6, r8, ip, pc}

0800aa14 <ArtNetNode::SetOemValue(unsigned char const*)>:
 800aa14:	780b      	ldrb	r3, [r1, #0]
 800aa16:	f880 3042 	strb.w	r3, [r0, #66]	; 0x42
 800aa1a:	784b      	ldrb	r3, [r1, #1]
 800aa1c:	f880 3043 	strb.w	r3, [r0, #67]	; 0x43
 800aa20:	4770      	bx	lr
	...

0800aa24 <ArtNetNode::SetNetworkDataLossCondition()>:
 800aa24:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800aa28:	2400      	movs	r4, #0
 800aa2a:	4606      	mov	r6, r0
 800aa2c:	4605      	mov	r5, r0
 800aa2e:	46a0      	mov	r8, r4
 800aa30:	46a2      	mov	sl, r4
 800aa32:	4f1a      	ldr	r7, [pc, #104]	; (800aa9c <ArtNetNode::SetNetworkDataLossCondition()+0x78>)
 800aa34:	f8df 9068 	ldr.w	r9, [pc, #104]	; 800aaa0 <ArtNetNode::SetNetworkDataLossCondition()+0x7c>
 800aa38:	f880 46de 	strb.w	r4, [r0, #1758]	; 0x6de
 800aa3c:	f880 46dd 	strb.w	r4, [r0, #1757]	; 0x6dd
 800aa40:	7833      	ldrb	r3, [r6, #0]
 800aa42:	ebb4 0f83 	cmp.w	r4, r3, lsl #2
 800aa46:	d227      	bcs.n	800aa98 <ArtNetNode::SetNetworkDataLossCondition()+0x74>
 800aa48:	f8d5 3704 	ldr.w	r3, [r5, #1796]	; 0x704
 800aa4c:	b953      	cbnz	r3, 800aa64 <ArtNetNode::SetNetworkDataLossCondition()+0x40>
 800aa4e:	f895 3709 	ldrb.w	r3, [r5, #1801]	; 0x709
 800aa52:	b13b      	cbz	r3, 800aa64 <ArtNetNode::SetNetworkDataLossCondition()+0x40>
 800aa54:	68b0      	ldr	r0, [r6, #8]
 800aa56:	b118      	cbz	r0, 800aa60 <ArtNetNode::SetNetworkDataLossCondition()+0x3c>
 800aa58:	6803      	ldr	r3, [r0, #0]
 800aa5a:	4621      	mov	r1, r4
 800aa5c:	68db      	ldr	r3, [r3, #12]
 800aa5e:	4798      	blx	r3
 800aa60:	f885 8709 	strb.w	r8, [r5, #1801]	; 0x709
 800aa64:	f895 36eb 	ldrb.w	r3, [r5, #1771]	; 0x6eb
 800aa68:	f8c5 86f4 	str.w	r8, [r5, #1780]	; 0x6f4
 800aa6c:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800aa70:	f885 36eb 	strb.w	r3, [r5, #1771]	; 0x6eb
 800aa74:	f8c5 86fc 	str.w	r8, [r5, #1788]	; 0x6fc
 800aa78:	f8d9 3000 	ldr.w	r3, [r9]
 800aa7c:	f8c7 a600 	str.w	sl, [r7, #1536]	; 0x600
 800aa80:	07db      	lsls	r3, r3, #31
 800aa82:	bf58      	it	pl
 800aa84:	2301      	movpl	r3, #1
 800aa86:	f104 0401 	add.w	r4, r4, #1
 800aa8a:	bf58      	it	pl
 800aa8c:	f8c9 3000 	strpl.w	r3, [r9]
 800aa90:	f207 6704 	addw	r7, r7, #1540	; 0x604
 800aa94:	3524      	adds	r5, #36	; 0x24
 800aa96:	e7d3      	b.n	800aa40 <ArtNetNode::SetNetworkDataLossCondition()+0x1c>
 800aa98:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800aa9c:	2000011c 	andcs	r0, r0, ip, lsl r1
 800aaa0:	20000118 	andcs	r0, r0, r8, lsl r1

0800aaa4 <ArtNetNode::GetType()>:
 800aaa4:	f8b0 3574 	ldrh.w	r3, [r0, #1396]	; 0x574
 800aaa8:	b530      	push	{r4, r5, lr}
 800aaaa:	2b0b      	cmp	r3, #11
 800aaac:	d803      	bhi.n	800aab6 <ArtNetNode::GetType()+0x12>
 800aaae:	2300      	movs	r3, #0
 800aab0:	f8a0 3576 	strh.w	r3, [r0, #1398]	; 0x576
 800aab4:	bd30      	pop	{r4, r5, pc}
 800aab6:	f890 30ae 	ldrb.w	r3, [r0, #174]	; 0xae
 800aaba:	2b00      	cmp	r3, #0
 800aabc:	d1f7      	bne.n	800aaae <ArtNetNode::GetType()+0xa>
 800aabe:	f890 30af 	ldrb.w	r3, [r0, #175]	; 0xaf
 800aac2:	2b0e      	cmp	r3, #14
 800aac4:	d1f3      	bne.n	800aaae <ArtNetNode::GetType()+0xa>
 800aac6:	4a0a      	ldr	r2, [pc, #40]	; (800aaf0 <ArtNetNode::GetType()+0x4c>)
 800aac8:	f100 03a4 	add.w	r3, r0, #164	; 0xa4
 800aacc:	f100 05ac 	add.w	r5, r0, #172	; 0xac
 800aad0:	42ab      	cmp	r3, r5
 800aad2:	d006      	beq.n	800aae2 <ArtNetNode::GetType()+0x3e>
 800aad4:	f813 4b01 	ldrb.w	r4, [r3], #1
 800aad8:	f812 1b01 	ldrb.w	r1, [r2], #1
 800aadc:	428c      	cmp	r4, r1
 800aade:	d0f7      	beq.n	800aad0 <ArtNetNode::GetType()+0x2c>
 800aae0:	e7e5      	b.n	800aaae <ArtNetNode::GetType()+0xa>
 800aae2:	f890 20ad 	ldrb.w	r2, [r0, #173]	; 0xad
 800aae6:	f890 30ac 	ldrb.w	r3, [r0, #172]	; 0xac
 800aaea:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 800aaee:	e7df      	b.n	800aab0 <ArtNetNode::GetType()+0xc>
 800aaf0:	08017eec 	stmdaeq	r1, {r2, r3, r5, r6, r7, r9, sl, fp, ip, sp, lr}

0800aaf4 <ArtNetNode::Run()>:
 800aaf4:	b530      	push	{r4, r5, lr}
 800aaf6:	b085      	sub	sp, #20
 800aaf8:	f10d 030e 	add.w	r3, sp, #14
 800aafc:	9300      	str	r3, [sp, #0]
 800aafe:	4604      	mov	r4, r0
 800ab00:	f500 63ae 	add.w	r3, r0, #1392	; 0x570
 800ab04:	f100 01a4 	add.w	r1, r0, #164	; 0xa4
 800ab08:	f240 42cc 	movw	r2, #1228	; 0x4cc
 800ab0c:	7900      	ldrb	r0, [r0, #4]
 800ab0e:	f007 fae5 	bl	80120dc <udp_recv>
 800ab12:	4b65      	ldr	r3, [pc, #404]	; (800aca8 <ArtNetNode::Run()+0x1b4>)
 800ab14:	681b      	ldr	r3, [r3, #0]
 800ab16:	f8c4 3668 	str.w	r3, [r4, #1640]	; 0x668
 800ab1a:	2800      	cmp	r0, #0
 800ab1c:	d143      	bne.n	800aba6 <ArtNetNode::Run()+0xb2>
 800ab1e:	f8d4 26d0 	ldr.w	r2, [r4, #1744]	; 0x6d0
 800ab22:	b13a      	cbz	r2, 800ab34 <ArtNetNode::Run()+0x40>
 800ab24:	f8d4 166c 	ldr.w	r1, [r4, #1644]	; 0x66c
 800ab28:	1a5b      	subs	r3, r3, r1
 800ab2a:	429a      	cmp	r2, r3
 800ab2c:	d802      	bhi.n	800ab34 <ArtNetNode::Run()+0x40>
 800ab2e:	4620      	mov	r0, r4
 800ab30:	f7ff ff78 	bl	800aa24 <ArtNetNode::SetNetworkDataLossCondition()>
 800ab34:	f894 36da 	ldrb.w	r3, [r4, #1754]	; 0x6da
 800ab38:	b16b      	cbz	r3, 800ab56 <ArtNetNode::Run()+0x62>
 800ab3a:	69e0      	ldr	r0, [r4, #28]
 800ab3c:	f894 56df 	ldrb.w	r5, [r4, #1759]	; 0x6df
 800ab40:	b120      	cbz	r0, 800ab4c <ArtNetNode::Run()+0x58>
 800ab42:	6803      	ldr	r3, [r0, #0]
 800ab44:	695b      	ldr	r3, [r3, #20]
 800ab46:	4798      	blx	r3
 800ab48:	4305      	orrs	r5, r0
 800ab4a:	b2ed      	uxtb	r5, r5
 800ab4c:	b11d      	cbz	r5, 800ab56 <ArtNetNode::Run()+0x62>
 800ab4e:	2100      	movs	r1, #0
 800ab50:	4620      	mov	r0, r4
 800ab52:	f000 ff7d 	bl	800ba50 <ArtNetNode::SendPollRelply(bool)>
 800ab56:	f8d4 3668 	ldr.w	r3, [r4, #1640]	; 0x668
 800ab5a:	f8d4 266c 	ldr.w	r2, [r4, #1644]	; 0x66c
 800ab5e:	1a9b      	subs	r3, r3, r2
 800ab60:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800ab64:	d305      	bcc.n	800ab72 <ArtNetNode::Run()+0x7e>
 800ab66:	f894 36e1 	ldrb.w	r3, [r4, #1761]	; 0x6e1
 800ab6a:	f023 0302 	bic.w	r3, r3, #2
 800ab6e:	f884 36e1 	strb.w	r3, [r4, #1761]	; 0x6e1
 800ab72:	6963      	ldr	r3, [r4, #20]
 800ab74:	b113      	cbz	r3, 800ab7c <ArtNetNode::Run()+0x88>
 800ab76:	4620      	mov	r0, r4
 800ab78:	f000 fd5a 	bl	800b630 <ArtNetNode::HandleDmxIn()>
 800ab7c:	f894 3097 	ldrb.w	r3, [r4, #151]	; 0x97
 800ab80:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
 800ab84:	2bc0      	cmp	r3, #192	; 0xc0
 800ab86:	d10c      	bne.n	800aba2 <ArtNetNode::Run()+0xae>
 800ab88:	4b48      	ldr	r3, [pc, #288]	; (800acac <ArtNetNode::Run()+0x1b8>)
 800ab8a:	6818      	ldr	r0, [r3, #0]
 800ab8c:	6883      	ldr	r3, [r0, #8]
 800ab8e:	2b04      	cmp	r3, #4
 800ab90:	d007      	beq.n	800aba2 <ArtNetNode::Run()+0xae>
 800ab92:	f894 36e1 	ldrb.w	r3, [r4, #1761]	; 0x6e1
 800ab96:	2b00      	cmp	r3, #0
 800ab98:	f000 8084 	beq.w	800aca4 <ArtNetNode::Run()+0x1b0>
 800ab9c:	2103      	movs	r1, #3
 800ab9e:	f00a fec9 	bl	8015934 <LedBlink::SetMode(ledblink::Mode)>
 800aba2:	b005      	add	sp, #20
 800aba4:	bd30      	pop	{r4, r5, pc}
 800aba6:	f8a4 0574 	strh.w	r0, [r4, #1396]	; 0x574
 800abaa:	f8c4 366c 	str.w	r3, [r4, #1644]	; 0x66c
 800abae:	4620      	mov	r0, r4
 800abb0:	f7ff ff78 	bl	800aaa4 <ArtNetNode::GetType()>
 800abb4:	f894 36dd 	ldrb.w	r3, [r4, #1757]	; 0x6dd
 800abb8:	b153      	cbz	r3, 800abd0 <ArtNetNode::Run()+0xdc>
 800abba:	f8d4 3668 	ldr.w	r3, [r4, #1640]	; 0x668
 800abbe:	f8d4 26d4 	ldr.w	r2, [r4, #1748]	; 0x6d4
 800abc2:	1a9b      	subs	r3, r3, r2
 800abc4:	f5b3 6f7a 	cmp.w	r3, #4000	; 0xfa0
 800abc8:	bf24      	itt	cs
 800abca:	2300      	movcs	r3, #0
 800abcc:	f884 36dd 	strbcs.w	r3, [r4, #1757]	; 0x6dd
 800abd0:	f8b4 3576 	ldrh.w	r3, [r4, #1398]	; 0x576
 800abd4:	f5b3 4f02 	cmp.w	r3, #33280	; 0x8200
 800abd8:	d04c      	beq.n	800ac74 <ArtNetNode::Run()+0x180>
 800abda:	d81d      	bhi.n	800ac18 <ArtNetNode::Run()+0x124>
 800abdc:	f5b3 4fa4 	cmp.w	r3, #20992	; 0x5200
 800abe0:	d039      	beq.n	800ac56 <ArtNetNode::Run()+0x162>
 800abe2:	d80c      	bhi.n	800abfe <ArtNetNode::Run()+0x10a>
 800abe4:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800abe8:	d031      	beq.n	800ac4e <ArtNetNode::Run()+0x15a>
 800abea:	f5b3 4fa0 	cmp.w	r3, #20480	; 0x5000
 800abee:	d1c0      	bne.n	800ab72 <ArtNetNode::Run()+0x7e>
 800abf0:	68a3      	ldr	r3, [r4, #8]
 800abf2:	2b00      	cmp	r3, #0
 800abf4:	d0bd      	beq.n	800ab72 <ArtNetNode::Run()+0x7e>
 800abf6:	4620      	mov	r0, r4
 800abf8:	f000 fc34 	bl	800b464 <ArtNetNode::HandleDmx()>
 800abfc:	e7b9      	b.n	800ab72 <ArtNetNode::Run()+0x7e>
 800abfe:	f5b3 4fc0 	cmp.w	r3, #24576	; 0x6000
 800ac02:	d02f      	beq.n	800ac64 <ArtNetNode::Run()+0x170>
 800ac04:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800ac08:	d1b3      	bne.n	800ab72 <ArtNetNode::Run()+0x7e>
 800ac0a:	6923      	ldr	r3, [r4, #16]
 800ac0c:	2b00      	cmp	r3, #0
 800ac0e:	d0b0      	beq.n	800ab72 <ArtNetNode::Run()+0x7e>
 800ac10:	4620      	mov	r0, r4
 800ac12:	f001 f8af 	bl	800bd74 <ArtNetNode::HandleTodRequest()>
 800ac16:	e7ac      	b.n	800ab72 <ArtNetNode::Run()+0x7e>
 800ac18:	f5b3 4f18 	cmp.w	r3, #38912	; 0x9800
 800ac1c:	d026      	beq.n	800ac6c <ArtNetNode::Run()+0x178>
 800ac1e:	d80c      	bhi.n	800ac3a <ArtNetNode::Run()+0x146>
 800ac20:	f5b3 4f03 	cmp.w	r3, #33536	; 0x8300
 800ac24:	d02e      	beq.n	800ac84 <ArtNetNode::Run()+0x190>
 800ac26:	f5b3 4f17 	cmp.w	r3, #38656	; 0x9700
 800ac2a:	d1a2      	bne.n	800ab72 <ArtNetNode::Run()+0x7e>
 800ac2c:	68e3      	ldr	r3, [r4, #12]
 800ac2e:	2b00      	cmp	r3, #0
 800ac30:	d09f      	beq.n	800ab72 <ArtNetNode::Run()+0x7e>
 800ac32:	4620      	mov	r0, r4
 800ac34:	f001 f98a 	bl	800bf4c <ArtNetNode::HandleTimeCode()>
 800ac38:	e79b      	b.n	800ab72 <ArtNetNode::Run()+0x7e>
 800ac3a:	f5b3 4f19 	cmp.w	r3, #39168	; 0x9900
 800ac3e:	d029      	beq.n	800ac94 <ArtNetNode::Run()+0x1a0>
 800ac40:	f5b3 4f78 	cmp.w	r3, #63488	; 0xf800
 800ac44:	d195      	bne.n	800ab72 <ArtNetNode::Run()+0x7e>
 800ac46:	4620      	mov	r0, r4
 800ac48:	f000 fdc4 	bl	800b7d4 <ArtNetNode::HandleIpProg()>
 800ac4c:	e791      	b.n	800ab72 <ArtNetNode::Run()+0x7e>
 800ac4e:	4620      	mov	r0, r4
 800ac50:	f000 ffc2 	bl	800bbd8 <ArtNetNode::HandlePoll()>
 800ac54:	e78d      	b.n	800ab72 <ArtNetNode::Run()+0x7e>
 800ac56:	68a3      	ldr	r3, [r4, #8]
 800ac58:	2b00      	cmp	r3, #0
 800ac5a:	d08a      	beq.n	800ab72 <ArtNetNode::Run()+0x7e>
 800ac5c:	4620      	mov	r0, r4
 800ac5e:	f001 f929 	bl	800beb4 <ArtNetNode::HandleSync()>
 800ac62:	e786      	b.n	800ab72 <ArtNetNode::Run()+0x7e>
 800ac64:	4620      	mov	r0, r4
 800ac66:	f000 f9e9 	bl	800b03c <ArtNetNode::HandleAddress()>
 800ac6a:	e782      	b.n	800ab72 <ArtNetNode::Run()+0x7e>
 800ac6c:	4620      	mov	r0, r4
 800ac6e:	f001 f973 	bl	800bf58 <ArtNetNode::HandleTimeSync()>
 800ac72:	e77e      	b.n	800ab72 <ArtNetNode::Run()+0x7e>
 800ac74:	6923      	ldr	r3, [r4, #16]
 800ac76:	2b00      	cmp	r3, #0
 800ac78:	f43f af7b 	beq.w	800ab72 <ArtNetNode::Run()+0x7e>
 800ac7c:	4620      	mov	r0, r4
 800ac7e:	f001 f83f 	bl	800bd00 <ArtNetNode::HandleTodControl()>
 800ac82:	e776      	b.n	800ab72 <ArtNetNode::Run()+0x7e>
 800ac84:	6923      	ldr	r3, [r4, #16]
 800ac86:	2b00      	cmp	r3, #0
 800ac88:	f43f af73 	beq.w	800ab72 <ArtNetNode::Run()+0x7e>
 800ac8c:	4620      	mov	r0, r4
 800ac8e:	f001 f88d 	bl	800bdac <ArtNetNode::HandleRdm()>
 800ac92:	e76e      	b.n	800ab72 <ArtNetNode::Run()+0x7e>
 800ac94:	69a3      	ldr	r3, [r4, #24]
 800ac96:	2b00      	cmp	r3, #0
 800ac98:	f43f af6b 	beq.w	800ab72 <ArtNetNode::Run()+0x7e>
 800ac9c:	4620      	mov	r0, r4
 800ac9e:	f001 ff3d 	bl	800cb1c <ArtNetNode::HandleTrigger()>
 800aca2:	e766      	b.n	800ab72 <ArtNetNode::Run()+0x7e>
 800aca4:	2102      	movs	r1, #2
 800aca6:	e77a      	b.n	800ab9e <ArtNetNode::Run()+0xaa>
 800aca8:	20013e04 	andcs	r3, r1, r4, lsl #28
 800acac:	20013de0 	andcs	r3, r1, r0, ror #27

0800acb0 <ArtNetNode::GetPortAddress(unsigned int, unsigned short&, lightset::PortDir) const>:
 800acb0:	b93b      	cbnz	r3, 800acc2 <ArtNetNode::GetPortAddress(unsigned int, unsigned short&, lightset::PortDir) const+0x12>
 800acb2:	eb00 1001 	add.w	r0, r0, r1, lsl #4
 800acb6:	f8b0 3808 	ldrh.w	r3, [r0, #2056]	; 0x808
 800acba:	f890 080c 	ldrb.w	r0, [r0, #2060]	; 0x80c
 800acbe:	8013      	strh	r3, [r2, #0]
 800acc0:	4770      	bx	lr
 800acc2:	2b01      	cmp	r3, #1
 800acc4:	bf01      	itttt	eq
 800acc6:	2324      	moveq	r3, #36	; 0x24
 800acc8:	fb03 0001 	mlaeq	r0, r3, r1, r0
 800accc:	f8b0 36e8 	ldrheq.w	r3, [r0, #1768]	; 0x6e8
 800acd0:	f890 06ec 	ldrbeq.w	r0, [r0, #1772]	; 0x6ec
 800acd4:	bf0c      	ite	eq
 800acd6:	8013      	strheq	r3, [r2, #0]
 800acd8:	2000      	movne	r0, #0
 800acda:	4770      	bx	lr

0800acdc <ArtNetNode::GetUniverseSwitch(unsigned int, unsigned char&, lightset::PortDir) const>:
 800acdc:	b94b      	cbnz	r3, 800acf2 <ArtNetNode::GetUniverseSwitch(unsigned int, unsigned char&, lightset::PortDir) const+0x16>
 800acde:	2907      	cmp	r1, #7
 800ace0:	d810      	bhi.n	800ad04 <ArtNetNode::GetUniverseSwitch(unsigned int, unsigned char&, lightset::PortDir) const+0x28>
 800ace2:	eb00 1001 	add.w	r0, r0, r1, lsl #4
 800ace6:	f890 380a 	ldrb.w	r3, [r0, #2058]	; 0x80a
 800acea:	7013      	strb	r3, [r2, #0]
 800acec:	f890 080c 	ldrb.w	r0, [r0, #2060]	; 0x80c
 800acf0:	4770      	bx	lr
 800acf2:	2324      	movs	r3, #36	; 0x24
 800acf4:	fb03 0001 	mla	r0, r3, r1, r0
 800acf8:	f890 36ea 	ldrb.w	r3, [r0, #1770]	; 0x6ea
 800acfc:	7013      	strb	r3, [r2, #0]
 800acfe:	f890 06ec 	ldrb.w	r0, [r0, #1772]	; 0x6ec
 800ad02:	4770      	bx	lr
 800ad04:	4618      	mov	r0, r3
 800ad06:	4770      	bx	lr

0800ad08 <ArtNetNode::GetSubnetSwitch(unsigned int) const>:
 800ad08:	4408      	add	r0, r1
 800ad0a:	f890 0040 	ldrb.w	r0, [r0, #64]	; 0x40
 800ad0e:	4770      	bx	lr

0800ad10 <ArtNetNode::GetNetSwitch(unsigned int) const>:
 800ad10:	4408      	add	r0, r1
 800ad12:	f890 003e 	ldrb.w	r0, [r0, #62]	; 0x3e
 800ad16:	4770      	bx	lr

0800ad18 <ArtNetNode::MakePortAddress(unsigned short, unsigned int)>:
 800ad18:	4402      	add	r2, r0
 800ad1a:	f892 303e 	ldrb.w	r3, [r2, #62]	; 0x3e
 800ad1e:	f892 0040 	ldrb.w	r0, [r2, #64]	; 0x40
 800ad22:	021b      	lsls	r3, r3, #8
 800ad24:	0100      	lsls	r0, r0, #4
 800ad26:	f403 43fe 	and.w	r3, r3, #32512	; 0x7f00
 800ad2a:	b2c0      	uxtb	r0, r0
 800ad2c:	4318      	orrs	r0, r3
 800ad2e:	f001 010f 	and.w	r1, r1, #15
 800ad32:	4308      	orrs	r0, r1
 800ad34:	4770      	bx	lr

0800ad36 <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)>:
 800ad36:	2907      	cmp	r1, #7
 800ad38:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800ad3c:	4604      	mov	r4, r0
 800ad3e:	460d      	mov	r5, r1
 800ad40:	4617      	mov	r7, r2
 800ad42:	461e      	mov	r6, r3
 800ad44:	f200 80a8 	bhi.w	800ae98 <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)+0x162>
 800ad48:	2a02      	cmp	r2, #2
 800ad4a:	d121      	bne.n	800ad90 <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)+0x5a>
 800ad4c:	2324      	movs	r3, #36	; 0x24
 800ad4e:	fb03 0301 	mla	r3, r3, r1, r0
 800ad52:	f893 26ec 	ldrb.w	r2, [r3, #1772]	; 0x6ec
 800ad56:	b13a      	cbz	r2, 800ad68 <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)+0x32>
 800ad58:	2200      	movs	r2, #0
 800ad5a:	f883 26ec 	strb.w	r2, [r3, #1772]	; 0x6ec
 800ad5e:	f890 36e2 	ldrb.w	r3, [r0, #1762]	; 0x6e2
 800ad62:	3b01      	subs	r3, #1
 800ad64:	f880 36e2 	strb.w	r3, [r0, #1762]	; 0x6e2
 800ad68:	eb04 1505 	add.w	r5, r4, r5, lsl #4
 800ad6c:	f895 380c 	ldrb.w	r3, [r5, #2060]	; 0x80c
 800ad70:	b90b      	cbnz	r3, 800ad76 <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)+0x40>
 800ad72:	2000      	movs	r0, #0
 800ad74:	e00a      	b.n	800ad8c <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)+0x56>
 800ad76:	2308      	movs	r3, #8
 800ad78:	2000      	movs	r0, #0
 800ad7a:	f885 380b 	strb.w	r3, [r5, #2059]	; 0x80b
 800ad7e:	f885 080c 	strb.w	r0, [r5, #2060]	; 0x80c
 800ad82:	f894 36e3 	ldrb.w	r3, [r4, #1763]	; 0x6e3
 800ad86:	3b01      	subs	r3, #1
 800ad88:	f884 36e3 	strb.w	r3, [r4, #1763]	; 0x6e3
 800ad8c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800ad90:	2a00      	cmp	r2, #0
 800ad92:	d13e      	bne.n	800ae12 <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)+0xdc>
 800ad94:	eb00 1301 	add.w	r3, r0, r1, lsl #4
 800ad98:	f893 380c 	ldrb.w	r3, [r3, #2060]	; 0x80c
 800ad9c:	ea4f 1801 	mov.w	r8, r1, lsl #4
 800ada0:	b923      	cbnz	r3, 800adac <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)+0x76>
 800ada2:	f890 36e3 	ldrb.w	r3, [r0, #1763]	; 0x6e3
 800ada6:	3301      	adds	r3, #1
 800ada8:	f880 36e3 	strb.w	r3, [r0, #1763]	; 0x6e3
 800adac:	2301      	movs	r3, #1
 800adae:	f04f 0900 	mov.w	r9, #0
 800adb2:	44a0      	add	r8, r4
 800adb4:	f888 380c 	strb.w	r3, [r8, #2060]	; 0x80c
 800adb8:	f006 030f 	and.w	r3, r6, #15
 800adbc:	f888 380a 	strb.w	r3, [r8, #2058]	; 0x80a
 800adc0:	08aa      	lsrs	r2, r5, #2
 800adc2:	4631      	mov	r1, r6
 800adc4:	4620      	mov	r0, r4
 800adc6:	f888 980b 	strb.w	r9, [r8, #2059]	; 0x80b
 800adca:	f7ff ffa5 	bl	800ad18 <ArtNetNode::MakePortAddress(unsigned short, unsigned int)>
 800adce:	2324      	movs	r3, #36	; 0x24
 800add0:	fb03 4305 	mla	r3, r3, r5, r4
 800add4:	f893 26ec 	ldrb.w	r2, [r3, #1772]	; 0x6ec
 800add8:	f8a8 0808 	strh.w	r0, [r8, #2056]	; 0x808
 800addc:	b132      	cbz	r2, 800adec <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)+0xb6>
 800adde:	f883 96ec 	strb.w	r9, [r3, #1772]	; 0x6ec
 800ade2:	f894 36e2 	ldrb.w	r3, [r4, #1762]	; 0x6e2
 800ade6:	3b01      	subs	r3, #1
 800ade8:	f884 36e2 	strb.w	r3, [r4, #1762]	; 0x6e2
 800adec:	69e0      	ldr	r0, [r4, #28]
 800adee:	2800      	cmp	r0, #0
 800adf0:	d044      	beq.n	800ae7c <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)+0x146>
 800adf2:	f894 36d9 	ldrb.w	r3, [r4, #1753]	; 0x6d9
 800adf6:	2b02      	cmp	r3, #2
 800adf8:	d13b      	bne.n	800ae72 <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)+0x13c>
 800adfa:	6a20      	ldr	r0, [r4, #32]
 800adfc:	2800      	cmp	r0, #0
 800adfe:	d143      	bne.n	800ae88 <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)+0x152>
 800ae00:	6a60      	ldr	r0, [r4, #36]	; 0x24
 800ae02:	2800      	cmp	r0, #0
 800ae04:	d0b5      	beq.n	800ad72 <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)+0x3c>
 800ae06:	6803      	ldr	r3, [r0, #0]
 800ae08:	4632      	mov	r2, r6
 800ae0a:	4629      	mov	r1, r5
 800ae0c:	691b      	ldr	r3, [r3, #16]
 800ae0e:	4798      	blx	r3
 800ae10:	e7af      	b.n	800ad72 <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)+0x3c>
 800ae12:	2a01      	cmp	r2, #1
 800ae14:	d1ea      	bne.n	800adec <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)+0xb6>
 800ae16:	f04f 0824 	mov.w	r8, #36	; 0x24
 800ae1a:	fb08 0301 	mla	r3, r8, r1, r0
 800ae1e:	f893 36ec 	ldrb.w	r3, [r3, #1772]	; 0x6ec
 800ae22:	b923      	cbnz	r3, 800ae2e <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)+0xf8>
 800ae24:	f890 36e2 	ldrb.w	r3, [r0, #1762]	; 0x6e2
 800ae28:	3301      	adds	r3, #1
 800ae2a:	f880 36e2 	strb.w	r3, [r0, #1762]	; 0x6e2
 800ae2e:	2301      	movs	r3, #1
 800ae30:	fb08 4805 	mla	r8, r8, r5, r4
 800ae34:	f888 36ec 	strb.w	r3, [r8, #1772]	; 0x6ec
 800ae38:	f006 030f 	and.w	r3, r6, #15
 800ae3c:	f888 36ea 	strb.w	r3, [r8, #1770]	; 0x6ea
 800ae40:	08aa      	lsrs	r2, r5, #2
 800ae42:	4631      	mov	r1, r6
 800ae44:	4620      	mov	r0, r4
 800ae46:	f7ff ff67 	bl	800ad18 <ArtNetNode::MakePortAddress(unsigned short, unsigned int)>
 800ae4a:	eb04 1305 	add.w	r3, r4, r5, lsl #4
 800ae4e:	f893 280c 	ldrb.w	r2, [r3, #2060]	; 0x80c
 800ae52:	f8a8 06e8 	strh.w	r0, [r8, #1768]	; 0x6e8
 800ae56:	2a00      	cmp	r2, #0
 800ae58:	d0c8      	beq.n	800adec <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)+0xb6>
 800ae5a:	2200      	movs	r2, #0
 800ae5c:	f883 280c 	strb.w	r2, [r3, #2060]	; 0x80c
 800ae60:	2208      	movs	r2, #8
 800ae62:	f883 280b 	strb.w	r2, [r3, #2059]	; 0x80b
 800ae66:	f894 36e3 	ldrb.w	r3, [r4, #1763]	; 0x6e3
 800ae6a:	3b01      	subs	r3, #1
 800ae6c:	f884 36e3 	strb.w	r3, [r4, #1763]	; 0x6e3
 800ae70:	e7bc      	b.n	800adec <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)+0xb6>
 800ae72:	6803      	ldr	r3, [r0, #0]
 800ae74:	463a      	mov	r2, r7
 800ae76:	4629      	mov	r1, r5
 800ae78:	689b      	ldr	r3, [r3, #8]
 800ae7a:	4798      	blx	r3
 800ae7c:	f894 36d9 	ldrb.w	r3, [r4, #1753]	; 0x6d9
 800ae80:	2b02      	cmp	r3, #2
 800ae82:	f47f af76 	bne.w	800ad72 <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)+0x3c>
 800ae86:	e7b8      	b.n	800adfa <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)+0xc4>
 800ae88:	2d03      	cmp	r5, #3
 800ae8a:	d8b9      	bhi.n	800ae00 <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)+0xca>
 800ae8c:	6803      	ldr	r3, [r0, #0]
 800ae8e:	4632      	mov	r2, r6
 800ae90:	4629      	mov	r1, r5
 800ae92:	691b      	ldr	r3, [r3, #16]
 800ae94:	4798      	blx	r3
 800ae96:	e7b3      	b.n	800ae00 <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)+0xca>
 800ae98:	f06f 0004 	mvn.w	r0, #4
 800ae9c:	e776      	b.n	800ad8c <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)+0x56>

0800ae9e <ArtNetNode::SetUniverse(unsigned int, lightset::PortDir, unsigned short)>:
 800ae9e:	b430      	push	{r4, r5}
 800aea0:	eb00 0491 	add.w	r4, r0, r1, lsr #2
 800aea4:	f3c3 2506 	ubfx	r5, r3, #8, #7
 800aea8:	f884 503e 	strb.w	r5, [r4, #62]	; 0x3e
 800aeac:	f3c3 1503 	ubfx	r5, r3, #4, #4
 800aeb0:	f884 5040 	strb.w	r5, [r4, #64]	; 0x40
 800aeb4:	f003 030f 	and.w	r3, r3, #15
 800aeb8:	bc30      	pop	{r4, r5}
 800aeba:	f7ff bf3c 	b.w	800ad36 <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)>

0800aebe <ArtNetNode::SetSubnetSwitch(unsigned char, unsigned int)>:
 800aebe:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800aec2:	2524      	movs	r5, #36	; 0x24
 800aec4:	4604      	mov	r4, r0
 800aec6:	460f      	mov	r7, r1
 800aec8:	4616      	mov	r6, r2
 800aeca:	1883      	adds	r3, r0, r2
 800aecc:	f883 1040 	strb.w	r1, [r3, #64]	; 0x40
 800aed0:	0093      	lsls	r3, r2, #2
 800aed2:	b2db      	uxtb	r3, r3
 800aed4:	fb05 0503 	mla	r5, r5, r3, r0
 800aed8:	f103 0905 	add.w	r9, r3, #5
 800aedc:	f103 0801 	add.w	r8, r3, #1
 800aee0:	45c8      	cmp	r8, r9
 800aee2:	f105 0524 	add.w	r5, r5, #36	; 0x24
 800aee6:	d009      	beq.n	800aefc <ArtNetNode::SetSubnetSwitch(unsigned char, unsigned int)+0x3e>
 800aee8:	f8b5 16c4 	ldrh.w	r1, [r5, #1732]	; 0x6c4
 800aeec:	089a      	lsrs	r2, r3, #2
 800aeee:	4620      	mov	r0, r4
 800aef0:	f7ff ff12 	bl	800ad18 <ArtNetNode::MakePortAddress(unsigned short, unsigned int)>
 800aef4:	4643      	mov	r3, r8
 800aef6:	f8a5 06c4 	strh.w	r0, [r5, #1732]	; 0x6c4
 800aefa:	e7ef      	b.n	800aedc <ArtNetNode::SetSubnetSwitch(unsigned char, unsigned int)+0x1e>
 800aefc:	6a20      	ldr	r0, [r4, #32]
 800aefe:	b150      	cbz	r0, 800af16 <ArtNetNode::SetSubnetSwitch(unsigned char, unsigned int)+0x58>
 800af00:	f894 36d9 	ldrb.w	r3, [r4, #1753]	; 0x6d9
 800af04:	2b02      	cmp	r3, #2
 800af06:	d106      	bne.n	800af16 <ArtNetNode::SetSubnetSwitch(unsigned char, unsigned int)+0x58>
 800af08:	b92e      	cbnz	r6, 800af16 <ArtNetNode::SetSubnetSwitch(unsigned char, unsigned int)+0x58>
 800af0a:	6803      	ldr	r3, [r0, #0]
 800af0c:	4639      	mov	r1, r7
 800af0e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800af12:	699b      	ldr	r3, [r3, #24]
 800af14:	4718      	bx	r3
 800af16:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800af1a <ArtNetNode::SetNetSwitch(unsigned char, unsigned int)>:
 800af1a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800af1e:	2524      	movs	r5, #36	; 0x24
 800af20:	4604      	mov	r4, r0
 800af22:	460f      	mov	r7, r1
 800af24:	4616      	mov	r6, r2
 800af26:	1883      	adds	r3, r0, r2
 800af28:	f883 103e 	strb.w	r1, [r3, #62]	; 0x3e
 800af2c:	0093      	lsls	r3, r2, #2
 800af2e:	b2db      	uxtb	r3, r3
 800af30:	fb05 0503 	mla	r5, r5, r3, r0
 800af34:	f103 0905 	add.w	r9, r3, #5
 800af38:	f103 0801 	add.w	r8, r3, #1
 800af3c:	45c8      	cmp	r8, r9
 800af3e:	f105 0524 	add.w	r5, r5, #36	; 0x24
 800af42:	d009      	beq.n	800af58 <ArtNetNode::SetNetSwitch(unsigned char, unsigned int)+0x3e>
 800af44:	f8b5 16c4 	ldrh.w	r1, [r5, #1732]	; 0x6c4
 800af48:	089a      	lsrs	r2, r3, #2
 800af4a:	4620      	mov	r0, r4
 800af4c:	f7ff fee4 	bl	800ad18 <ArtNetNode::MakePortAddress(unsigned short, unsigned int)>
 800af50:	4643      	mov	r3, r8
 800af52:	f8a5 06c4 	strh.w	r0, [r5, #1732]	; 0x6c4
 800af56:	e7ef      	b.n	800af38 <ArtNetNode::SetNetSwitch(unsigned char, unsigned int)+0x1e>
 800af58:	6a20      	ldr	r0, [r4, #32]
 800af5a:	b150      	cbz	r0, 800af72 <ArtNetNode::SetNetSwitch(unsigned char, unsigned int)+0x58>
 800af5c:	f894 36d9 	ldrb.w	r3, [r4, #1753]	; 0x6d9
 800af60:	2b02      	cmp	r3, #2
 800af62:	d106      	bne.n	800af72 <ArtNetNode::SetNetSwitch(unsigned char, unsigned int)+0x58>
 800af64:	b92e      	cbnz	r6, 800af72 <ArtNetNode::SetNetSwitch(unsigned char, unsigned int)+0x58>
 800af66:	6803      	ldr	r3, [r0, #0]
 800af68:	4639      	mov	r1, r7
 800af6a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800af6e:	695b      	ldr	r3, [r3, #20]
 800af70:	4718      	bx	r3
 800af72:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800af76 <ArtNetNode::SetPortProtocol(unsigned int, artnet::PortProtocol)>:
 800af76:	b570      	push	{r4, r5, r6, lr}
 800af78:	4616      	mov	r6, r2
 800af7a:	2224      	movs	r2, #36	; 0x24
 800af7c:	fb02 0301 	mla	r3, r2, r1, r0
 800af80:	fb02 0201 	mla	r2, r2, r1, r0
 800af84:	f8c3 6704 	str.w	r6, [r3, #1796]	; 0x704
 800af88:	f893 36eb 	ldrb.w	r3, [r3, #1771]	; 0x6eb
 800af8c:	2e01      	cmp	r6, #1
 800af8e:	bf0c      	ite	eq
 800af90:	f043 0301 	orreq.w	r3, r3, #1
 800af94:	f003 03fe 	andne.w	r3, r3, #254	; 0xfe
 800af98:	f882 36eb 	strb.w	r3, [r2, #1771]	; 0x6eb
 800af9c:	f890 36d9 	ldrb.w	r3, [r0, #1753]	; 0x6d9
 800afa0:	4605      	mov	r5, r0
 800afa2:	2b02      	cmp	r3, #2
 800afa4:	460c      	mov	r4, r1
 800afa6:	d110      	bne.n	800afca <ArtNetNode::SetPortProtocol(unsigned int, artnet::PortProtocol)+0x54>
 800afa8:	2903      	cmp	r1, #3
 800afaa:	d80e      	bhi.n	800afca <ArtNetNode::SetPortProtocol(unsigned int, artnet::PortProtocol)+0x54>
 800afac:	6a00      	ldr	r0, [r0, #32]
 800afae:	b118      	cbz	r0, 800afb8 <ArtNetNode::SetPortProtocol(unsigned int, artnet::PortProtocol)+0x42>
 800afb0:	6803      	ldr	r3, [r0, #0]
 800afb2:	4632      	mov	r2, r6
 800afb4:	6a1b      	ldr	r3, [r3, #32]
 800afb6:	4798      	blx	r3
 800afb8:	6a68      	ldr	r0, [r5, #36]	; 0x24
 800afba:	b130      	cbz	r0, 800afca <ArtNetNode::SetPortProtocol(unsigned int, artnet::PortProtocol)+0x54>
 800afbc:	6803      	ldr	r3, [r0, #0]
 800afbe:	4632      	mov	r2, r6
 800afc0:	4621      	mov	r1, r4
 800afc2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800afc6:	6a1b      	ldr	r3, [r3, #32]
 800afc8:	4718      	bx	r3
 800afca:	bd70      	pop	{r4, r5, r6, pc}

0800afcc <ArtNetNode::GetPortProtocol(unsigned int) const>:
 800afcc:	2324      	movs	r3, #36	; 0x24
 800afce:	fb03 0001 	mla	r0, r3, r1, r0
 800afd2:	f8d0 0704 	ldr.w	r0, [r0, #1796]	; 0x704
 800afd6:	4770      	bx	lr

0800afd8 <ArtNetNode::SetMergeMode(unsigned int, lightset::MergeMode)>:
 800afd8:	b570      	push	{r4, r5, r6, lr}
 800afda:	4616      	mov	r6, r2
 800afdc:	2224      	movs	r2, #36	; 0x24
 800afde:	fb02 0301 	mla	r3, r2, r1, r0
 800afe2:	fb02 0201 	mla	r2, r2, r1, r0
 800afe6:	f8c3 6700 	str.w	r6, [r3, #1792]	; 0x700
 800afea:	f893 36eb 	ldrb.w	r3, [r3, #1771]	; 0x6eb
 800afee:	2e01      	cmp	r6, #1
 800aff0:	bf0c      	ite	eq
 800aff2:	f043 0302 	orreq.w	r3, r3, #2
 800aff6:	f003 03fd 	andne.w	r3, r3, #253	; 0xfd
 800affa:	f882 36eb 	strb.w	r3, [r2, #1771]	; 0x6eb
 800affe:	f890 36d9 	ldrb.w	r3, [r0, #1753]	; 0x6d9
 800b002:	4605      	mov	r5, r0
 800b004:	2b02      	cmp	r3, #2
 800b006:	460c      	mov	r4, r1
 800b008:	d110      	bne.n	800b02c <ArtNetNode::SetMergeMode(unsigned int, lightset::MergeMode)+0x54>
 800b00a:	2903      	cmp	r1, #3
 800b00c:	d80e      	bhi.n	800b02c <ArtNetNode::SetMergeMode(unsigned int, lightset::MergeMode)+0x54>
 800b00e:	6a00      	ldr	r0, [r0, #32]
 800b010:	b118      	cbz	r0, 800b01a <ArtNetNode::SetMergeMode(unsigned int, lightset::MergeMode)+0x42>
 800b012:	6803      	ldr	r3, [r0, #0]
 800b014:	4632      	mov	r2, r6
 800b016:	69db      	ldr	r3, [r3, #28]
 800b018:	4798      	blx	r3
 800b01a:	6a68      	ldr	r0, [r5, #36]	; 0x24
 800b01c:	b130      	cbz	r0, 800b02c <ArtNetNode::SetMergeMode(unsigned int, lightset::MergeMode)+0x54>
 800b01e:	6803      	ldr	r3, [r0, #0]
 800b020:	4632      	mov	r2, r6
 800b022:	4621      	mov	r1, r4
 800b024:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b028:	69db      	ldr	r3, [r3, #28]
 800b02a:	4718      	bx	r3
 800b02c:	bd70      	pop	{r4, r5, r6, pc}

0800b02e <ArtNetNode::GetMergeMode(unsigned int) const>:
 800b02e:	2324      	movs	r3, #36	; 0x24
 800b030:	fb03 0001 	mla	r0, r3, r1, r0
 800b034:	f8d0 0700 	ldr.w	r0, [r0, #1792]	; 0x700
 800b038:	4770      	bx	lr
	...

0800b03c <ArtNetNode::HandleAddress()>:
 800b03c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800b040:	2301      	movs	r3, #1
 800b042:	f880 36d8 	strb.w	r3, [r0, #1752]	; 0x6d8
 800b046:	f890 30b2 	ldrb.w	r3, [r0, #178]	; 0xb2
 800b04a:	4604      	mov	r4, r0
 800b04c:	b133      	cbz	r3, 800b05c <ArtNetNode::HandleAddress()+0x20>
 800b04e:	f100 01b2 	add.w	r1, r0, #178	; 0xb2
 800b052:	f7ff fbed 	bl	800a830 <ArtNetNode::SetShortName(char const*)>
 800b056:	2306      	movs	r3, #6
 800b058:	f884 36d8 	strb.w	r3, [r4, #1752]	; 0x6d8
 800b05c:	f894 30c4 	ldrb.w	r3, [r4, #196]	; 0xc4
 800b060:	b13b      	cbz	r3, 800b072 <ArtNetNode::HandleAddress()+0x36>
 800b062:	4620      	mov	r0, r4
 800b064:	f104 01c4 	add.w	r1, r4, #196	; 0xc4
 800b068:	f7ff fc0a 	bl	800a880 <ArtNetNode::SetLongName(char const*)>
 800b06c:	2307      	movs	r3, #7
 800b06e:	f884 36d8 	strb.w	r3, [r4, #1752]	; 0x6d8
 800b072:	f894 50b1 	ldrb.w	r5, [r4, #177]	; 0xb1
 800b076:	b105      	cbz	r5, 800b07a <ArtNetNode::HandleAddress()+0x3e>
 800b078:	3d01      	subs	r5, #1
 800b07a:	f894 110c 	ldrb.w	r1, [r4, #268]	; 0x10c
 800b07e:	2900      	cmp	r1, #0
 800b080:	d13d      	bne.n	800b0fe <ArtNetNode::HandleAddress()+0xc2>
 800b082:	462a      	mov	r2, r5
 800b084:	4620      	mov	r0, r4
 800b086:	f7ff ff1a 	bl	800aebe <ArtNetNode::SetSubnetSwitch(unsigned char, unsigned int)>
 800b08a:	f894 10b0 	ldrb.w	r1, [r4, #176]	; 0xb0
 800b08e:	2900      	cmp	r1, #0
 800b090:	d13b      	bne.n	800b10a <ArtNetNode::HandleAddress()+0xce>
 800b092:	462a      	mov	r2, r5
 800b094:	4620      	mov	r0, r4
 800b096:	f7ff ff40 	bl	800af1a <ArtNetNode::SetNetSwitch(unsigned char, unsigned int)>
 800b09a:	00ad      	lsls	r5, r5, #2
 800b09c:	b2ed      	uxtb	r5, r5
 800b09e:	4627      	mov	r7, r4
 800b0a0:	462e      	mov	r6, r5
 800b0a2:	f504 7884 	add.w	r8, r4, #264	; 0x108
 800b0a6:	f504 7986 	add.w	r9, r4, #268	; 0x10c
 800b0aa:	f818 3b01 	ldrb.w	r3, [r8], #1
 800b0ae:	2b7f      	cmp	r3, #127	; 0x7f
 800b0b0:	d006      	beq.n	800b0c0 <ArtNetNode::HandleAddress()+0x84>
 800b0b2:	bb83      	cbnz	r3, 800b116 <ArtNetNode::HandleAddress()+0xda>
 800b0b4:	2301      	movs	r3, #1
 800b0b6:	2201      	movs	r2, #1
 800b0b8:	4631      	mov	r1, r6
 800b0ba:	4620      	mov	r0, r4
 800b0bc:	f7ff fe3b 	bl	800ad36 <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)>
 800b0c0:	f818 2c05 	ldrb.w	r2, [r8, #-5]
 800b0c4:	2a7f      	cmp	r2, #127	; 0x7f
 800b0c6:	d005      	beq.n	800b0d4 <ArtNetNode::HandleAddress()+0x98>
 800b0c8:	bb52      	cbnz	r2, 800b120 <ArtNetNode::HandleAddress()+0xe4>
 800b0ca:	2301      	movs	r3, #1
 800b0cc:	4631      	mov	r1, r6
 800b0ce:	4620      	mov	r0, r4
 800b0d0:	f7ff fe31 	bl	800ad36 <ArtNetNode::SetUniverseSwitch(unsigned int, lightset::PortDir, unsigned char)>
 800b0d4:	3601      	adds	r6, #1
 800b0d6:	45c1      	cmp	r9, r8
 800b0d8:	b2f6      	uxtb	r6, r6
 800b0da:	d1e6      	bne.n	800b0aa <ArtNetNode::HandleAddress()+0x6e>
 800b0dc:	f894 110e 	ldrb.w	r1, [r4, #270]	; 0x10e
 800b0e0:	2913      	cmp	r1, #19
 800b0e2:	d823      	bhi.n	800b12c <ArtNetNode::HandleAddress()+0xf0>
 800b0e4:	290f      	cmp	r1, #15
 800b0e6:	f200 8092 	bhi.w	800b20e <ArtNetNode::HandleAddress()+0x1d2>
 800b0ea:	3901      	subs	r1, #1
 800b0ec:	b2cb      	uxtb	r3, r1
 800b0ee:	2b03      	cmp	r3, #3
 800b0f0:	d82a      	bhi.n	800b148 <ArtNetNode::HandleAddress()+0x10c>
 800b0f2:	2903      	cmp	r1, #3
 800b0f4:	d828      	bhi.n	800b148 <ArtNetNode::HandleAddress()+0x10c>
 800b0f6:	e8df f001 	tbb	[pc, r1]
 800b0fa:	7e726654 	mrcvc	6, 3, r6, cr2, cr4, {2}
 800b0fe:	060f      	lsls	r7, r1, #24
 800b100:	d5c3      	bpl.n	800b08a <ArtNetNode::HandleAddress()+0x4e>
 800b102:	462a      	mov	r2, r5
 800b104:	f001 017f 	and.w	r1, r1, #127	; 0x7f
 800b108:	e7bc      	b.n	800b084 <ArtNetNode::HandleAddress()+0x48>
 800b10a:	060e      	lsls	r6, r1, #24
 800b10c:	d5c5      	bpl.n	800b09a <ArtNetNode::HandleAddress()+0x5e>
 800b10e:	462a      	mov	r2, r5
 800b110:	f001 017f 	and.w	r1, r1, #127	; 0x7f
 800b114:	e7be      	b.n	800b094 <ArtNetNode::HandleAddress()+0x58>
 800b116:	0618      	lsls	r0, r3, #24
 800b118:	d5d2      	bpl.n	800b0c0 <ArtNetNode::HandleAddress()+0x84>
 800b11a:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800b11e:	e7ca      	b.n	800b0b6 <ArtNetNode::HandleAddress()+0x7a>
 800b120:	0611      	lsls	r1, r2, #24
 800b122:	d5d7      	bpl.n	800b0d4 <ArtNetNode::HandleAddress()+0x98>
 800b124:	f002 037f 	and.w	r3, r2, #127	; 0x7f
 800b128:	2200      	movs	r2, #0
 800b12a:	e7cf      	b.n	800b0cc <ArtNetNode::HandleAddress()+0x90>
 800b12c:	2973      	cmp	r1, #115	; 0x73
 800b12e:	d818      	bhi.n	800b162 <ArtNetNode::HandleAddress()+0x126>
 800b130:	296f      	cmp	r1, #111	; 0x6f
 800b132:	d87a      	bhi.n	800b22a <ArtNetNode::HandleAddress()+0x1ee>
 800b134:	2953      	cmp	r1, #83	; 0x53
 800b136:	d803      	bhi.n	800b140 <ArtNetNode::HandleAddress()+0x104>
 800b138:	294f      	cmp	r1, #79	; 0x4f
 800b13a:	d905      	bls.n	800b148 <ArtNetNode::HandleAddress()+0x10c>
 800b13c:	2200      	movs	r2, #0
 800b13e:	e067      	b.n	800b210 <ArtNetNode::HandleAddress()+0x1d4>
 800b140:	f1a1 0360 	sub.w	r3, r1, #96	; 0x60
 800b144:	2b03      	cmp	r3, #3
 800b146:	d969      	bls.n	800b21c <ArtNetNode::HandleAddress()+0x1e0>
 800b148:	69e0      	ldr	r0, [r4, #28]
 800b14a:	b120      	cbz	r0, 800b156 <ArtNetNode::HandleAddress()+0x11a>
 800b14c:	6803      	ldr	r3, [r0, #0]
 800b14e:	f894 110e 	ldrb.w	r1, [r4, #270]	; 0x10e
 800b152:	68db      	ldr	r3, [r3, #12]
 800b154:	4798      	blx	r3
 800b156:	4620      	mov	r0, r4
 800b158:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800b15c:	2101      	movs	r1, #1
 800b15e:	f000 bc77 	b.w	800ba50 <ArtNetNode::SendPollRelply(bool)>
 800b162:	f101 0370 	add.w	r3, r1, #112	; 0x70
 800b166:	b2db      	uxtb	r3, r3
 800b168:	2b03      	cmp	r3, #3
 800b16a:	d8ed      	bhi.n	800b148 <ArtNetNode::HandleAddress()+0x10c>
 800b16c:	4b45      	ldr	r3, [pc, #276]	; (800b284 <ArtNetNode::HandleAddress()+0x248>)
 800b16e:	f001 0103 	and.w	r1, r1, #3
 800b172:	681a      	ldr	r2, [r3, #0]
 800b174:	440d      	add	r5, r1
 800b176:	07d2      	lsls	r2, r2, #31
 800b178:	bf5c      	itt	pl
 800b17a:	2201      	movpl	r2, #1
 800b17c:	601a      	strpl	r2, [r3, #0]
 800b17e:	f240 6204 	movw	r2, #1540	; 0x604
 800b182:	b2ed      	uxtb	r5, r5
 800b184:	436a      	muls	r2, r5
 800b186:	4b40      	ldr	r3, [pc, #256]	; (800b288 <ArtNetNode::HandleAddress()+0x24c>)
 800b188:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800b18c:	441a      	add	r2, r3
 800b18e:	4611      	mov	r1, r2
 800b190:	2600      	movs	r6, #0
 800b192:	68a0      	ldr	r0, [r4, #8]
 800b194:	f502 7700 	add.w	r7, r2, #512	; 0x200
 800b198:	42b9      	cmp	r1, r7
 800b19a:	d048      	beq.n	800b22e <ArtNetNode::HandleAddress()+0x1f2>
 800b19c:	f801 6b01 	strb.w	r6, [r1], #1
 800b1a0:	e7fa      	b.n	800b198 <ArtNetNode::HandleAddress()+0x15c>
 800b1a2:	2300      	movs	r3, #0
 800b1a4:	2224      	movs	r2, #36	; 0x24
 800b1a6:	f884 36de 	strb.w	r3, [r4, #1758]	; 0x6de
 800b1aa:	7823      	ldrb	r3, [r4, #0]
 800b1ac:	009b      	lsls	r3, r3, #2
 800b1ae:	fb02 4303 	mla	r3, r2, r3, r4
 800b1b2:	429f      	cmp	r7, r3
 800b1b4:	d0c8      	beq.n	800b148 <ArtNetNode::HandleAddress()+0x10c>
 800b1b6:	f897 26eb 	ldrb.w	r2, [r7, #1771]	; 0x6eb
 800b1ba:	3724      	adds	r7, #36	; 0x24
 800b1bc:	f022 0208 	bic.w	r2, r2, #8
 800b1c0:	f887 26c7 	strb.w	r2, [r7, #1735]	; 0x6c7
 800b1c4:	e7f5      	b.n	800b1b2 <ArtNetNode::HandleAddress()+0x176>
 800b1c6:	4b31      	ldr	r3, [pc, #196]	; (800b28c <ArtNetNode::HandleAddress()+0x250>)
 800b1c8:	2102      	movs	r1, #2
 800b1ca:	6818      	ldr	r0, [r3, #0]
 800b1cc:	f00a fbb2 	bl	8015934 <LedBlink::SetMode(ledblink::Mode)>
 800b1d0:	f894 3097 	ldrb.w	r3, [r4, #151]	; 0x97
 800b1d4:	f063 033f 	orn	r3, r3, #63	; 0x3f
 800b1d8:	f884 3097 	strb.w	r3, [r4, #151]	; 0x97
 800b1dc:	e7b4      	b.n	800b148 <ArtNetNode::HandleAddress()+0x10c>
 800b1de:	4b2b      	ldr	r3, [pc, #172]	; (800b28c <ArtNetNode::HandleAddress()+0x250>)
 800b1e0:	2100      	movs	r1, #0
 800b1e2:	6818      	ldr	r0, [r3, #0]
 800b1e4:	f00a fba6 	bl	8015934 <LedBlink::SetMode(ledblink::Mode)>
 800b1e8:	f894 3097 	ldrb.w	r3, [r4, #151]	; 0x97
 800b1ec:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 800b1f0:	f063 037f 	orn	r3, r3, #127	; 0x7f
 800b1f4:	e7f0      	b.n	800b1d8 <ArtNetNode::HandleAddress()+0x19c>
 800b1f6:	4b25      	ldr	r3, [pc, #148]	; (800b28c <ArtNetNode::HandleAddress()+0x250>)
 800b1f8:	2104      	movs	r1, #4
 800b1fa:	6818      	ldr	r0, [r3, #0]
 800b1fc:	f00a fb9a 	bl	8015934 <LedBlink::SetMode(ledblink::Mode)>
 800b200:	f894 3097 	ldrb.w	r3, [r4, #151]	; 0x97
 800b204:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 800b208:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800b20c:	e7e4      	b.n	800b1d8 <ArtNetNode::HandleAddress()+0x19c>
 800b20e:	2201      	movs	r2, #1
 800b210:	4620      	mov	r0, r4
 800b212:	f001 0103 	and.w	r1, r1, #3
 800b216:	f7ff fedf 	bl	800afd8 <ArtNetNode::SetMergeMode(unsigned int, lightset::MergeMode)>
 800b21a:	e795      	b.n	800b148 <ArtNetNode::HandleAddress()+0x10c>
 800b21c:	2200      	movs	r2, #0
 800b21e:	4620      	mov	r0, r4
 800b220:	f001 0103 	and.w	r1, r1, #3
 800b224:	f7ff fea7 	bl	800af76 <ArtNetNode::SetPortProtocol(unsigned int, artnet::PortProtocol)>
 800b228:	e78e      	b.n	800b148 <ArtNetNode::HandleAddress()+0x10c>
 800b22a:	2201      	movs	r2, #1
 800b22c:	e7f7      	b.n	800b21e <ArtNetNode::HandleAddress()+0x1e2>
 800b22e:	f240 6104 	movw	r1, #1540	; 0x604
 800b232:	fb01 3105 	mla	r1, r1, r5, r3
 800b236:	f44f 7300 	mov.w	r3, #512	; 0x200
 800b23a:	f8c1 3600 	str.w	r3, [r1, #1536]	; 0x600
 800b23e:	6801      	ldr	r1, [r0, #0]
 800b240:	690e      	ldr	r6, [r1, #16]
 800b242:	4629      	mov	r1, r5
 800b244:	47b0      	blx	r6
 800b246:	2d07      	cmp	r5, #7
 800b248:	f63f af7e 	bhi.w	800b148 <ArtNetNode::HandleAddress()+0x10c>
 800b24c:	2624      	movs	r6, #36	; 0x24
 800b24e:	fb06 4605 	mla	r6, r6, r5, r4
 800b252:	f8d6 3704 	ldr.w	r3, [r6, #1796]	; 0x704
 800b256:	2b00      	cmp	r3, #0
 800b258:	f47f af76 	bne.w	800b148 <ArtNetNode::HandleAddress()+0x10c>
 800b25c:	f896 3709 	ldrb.w	r3, [r6, #1801]	; 0x709
 800b260:	2b00      	cmp	r3, #0
 800b262:	f47f af71 	bne.w	800b148 <ArtNetNode::HandleAddress()+0x10c>
 800b266:	68a0      	ldr	r0, [r4, #8]
 800b268:	4629      	mov	r1, r5
 800b26a:	6803      	ldr	r3, [r0, #0]
 800b26c:	689b      	ldr	r3, [r3, #8]
 800b26e:	4798      	blx	r3
 800b270:	2301      	movs	r3, #1
 800b272:	f886 3709 	strb.w	r3, [r6, #1801]	; 0x709
 800b276:	f896 36eb 	ldrb.w	r3, [r6, #1771]	; 0x6eb
 800b27a:	f063 037f 	orn	r3, r3, #127	; 0x7f
 800b27e:	f886 36eb 	strb.w	r3, [r6, #1771]	; 0x6eb
 800b282:	e761      	b.n	800b148 <ArtNetNode::HandleAddress()+0x10c>
 800b284:	20000118 	andcs	r0, r0, r8, lsl r1
 800b288:	2000011c 	andcs	r0, r0, ip, lsl r1
 800b28c:	20013de0 	andcs	r3, r1, r0, ror #27

0800b290 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]>:
 800b290:	f240 6304 	movw	r3, #1540	; 0x604
 800b294:	fb03 0101 	mla	r1, r3, r1, r0
 800b298:	2300      	movs	r3, #0
 800b29a:	b510      	push	{r4, lr}
 800b29c:	4293      	cmp	r3, r2
 800b29e:	d00a      	beq.n	800b2b6 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]+0x26>
 800b2a0:	f811 4b01 	ldrb.w	r4, [r1], #1
 800b2a4:	3301      	adds	r3, #1
 800b2a6:	f891 01ff 	ldrb.w	r0, [r1, #511]	; 0x1ff
 800b2aa:	42a0      	cmp	r0, r4
 800b2ac:	bf38      	it	cc
 800b2ae:	4620      	movcc	r0, r4
 800b2b0:	f881 03ff 	strb.w	r0, [r1, #1023]	; 0x3ff
 800b2b4:	e7f2      	b.n	800b29c <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]+0xc>
 800b2b6:	bd10      	pop	{r4, pc}

0800b2b8 <memcpy.isra.0>:
 800b2b8:	3801      	subs	r0, #1
 800b2ba:	440a      	add	r2, r1
 800b2bc:	4291      	cmp	r1, r2
 800b2be:	d004      	beq.n	800b2ca <memcpy.isra.0+0x12>
 800b2c0:	f811 3b01 	ldrb.w	r3, [r1], #1
 800b2c4:	f800 3f01 	strb.w	r3, [r0, #1]!
 800b2c8:	e7f8      	b.n	800b2bc <memcpy.isra.0+0x4>
 800b2ca:	4770      	bx	lr

0800b2cc <lightset::Data::Get()>:
 800b2cc:	4b03      	ldr	r3, [pc, #12]	; (800b2dc <lightset::Data::Get()+0x10>)
 800b2ce:	4804      	ldr	r0, [pc, #16]	; (800b2e0 <lightset::Data::Get()+0x14>)
 800b2d0:	681a      	ldr	r2, [r3, #0]
 800b2d2:	07d2      	lsls	r2, r2, #31
 800b2d4:	bf5c      	itt	pl
 800b2d6:	2201      	movpl	r2, #1
 800b2d8:	601a      	strpl	r2, [r3, #0]
 800b2da:	4770      	bx	lr
 800b2dc:	20000118 	andcs	r0, r0, r8, lsl r1
 800b2e0:	2000011c 	andcs	r0, r0, ip, lsl r1

0800b2e4 <lightset::Data::SetSourceA(unsigned int, unsigned char const*, unsigned int)>:
 800b2e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b2e8:	4615      	mov	r5, r2
 800b2ea:	460f      	mov	r7, r1
 800b2ec:	4604      	mov	r4, r0
 800b2ee:	f7ff ffed 	bl	800b2cc <lightset::Data::Get()>
 800b2f2:	4606      	mov	r6, r0
 800b2f4:	f240 6004 	movw	r0, #1540	; 0x604
 800b2f8:	4344      	muls	r4, r0
 800b2fa:	eb06 0804 	add.w	r8, r6, r4
 800b2fe:	462a      	mov	r2, r5
 800b300:	4639      	mov	r1, r7
 800b302:	4640      	mov	r0, r8
 800b304:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800b308:	f7ff ffd6 	bl	800b2b8 <memcpy.isra.0>
 800b30c:	462a      	mov	r2, r5
 800b30e:	4639      	mov	r1, r7
 800b310:	f8c8 5600 	str.w	r5, [r8, #1536]	; 0x600
 800b314:	1930      	adds	r0, r6, r4
 800b316:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800b31a:	f7ff bfcd 	b.w	800b2b8 <memcpy.isra.0>

0800b31e <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>:
 800b31e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b322:	4680      	mov	r8, r0
 800b324:	f240 6404 	movw	r4, #1540	; 0x604
 800b328:	4615      	mov	r5, r2
 800b32a:	460f      	mov	r7, r1
 800b32c:	4699      	mov	r9, r3
 800b32e:	f7ff ffcd 	bl	800b2cc <lightset::Data::Get()>
 800b332:	fb04 f408 	mul.w	r4, r4, r8
 800b336:	eb00 0a04 	add.w	sl, r0, r4
 800b33a:	4606      	mov	r6, r0
 800b33c:	462a      	mov	r2, r5
 800b33e:	4639      	mov	r1, r7
 800b340:	4650      	mov	r0, sl
 800b342:	f7ff ffb9 	bl	800b2b8 <memcpy.isra.0>
 800b346:	f8ca 5600 	str.w	r5, [sl, #1536]	; 0x600
 800b34a:	f1b9 0f00 	cmp.w	r9, #0
 800b34e:	d106      	bne.n	800b35e <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)+0x40>
 800b350:	462a      	mov	r2, r5
 800b352:	4641      	mov	r1, r8
 800b354:	4630      	mov	r0, r6
 800b356:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b35a:	f7ff bf99 	b.w	800b290 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]>
 800b35e:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800b362:	462a      	mov	r2, r5
 800b364:	4639      	mov	r1, r7
 800b366:	1930      	adds	r0, r6, r4
 800b368:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b36c:	f7ff bfa4 	b.w	800b2b8 <memcpy.isra.0>

0800b370 <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>:
 800b370:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800b374:	4616      	mov	r6, r2
 800b376:	4699      	mov	r9, r3
 800b378:	4680      	mov	r8, r0
 800b37a:	460f      	mov	r7, r1
 800b37c:	f7ff ffa6 	bl	800b2cc <lightset::Data::Get()>
 800b380:	f240 6404 	movw	r4, #1540	; 0x604
 800b384:	4605      	mov	r5, r0
 800b386:	fb04 f408 	mul.w	r4, r4, r8
 800b38a:	f504 7000 	add.w	r0, r4, #512	; 0x200
 800b38e:	4632      	mov	r2, r6
 800b390:	4639      	mov	r1, r7
 800b392:	4428      	add	r0, r5
 800b394:	f7ff ff90 	bl	800b2b8 <memcpy.isra.0>
 800b398:	192b      	adds	r3, r5, r4
 800b39a:	f8c3 6600 	str.w	r6, [r3, #1536]	; 0x600
 800b39e:	f1b9 0f00 	cmp.w	r9, #0
 800b3a2:	d106      	bne.n	800b3b2 <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)+0x42>
 800b3a4:	4632      	mov	r2, r6
 800b3a6:	4641      	mov	r1, r8
 800b3a8:	4628      	mov	r0, r5
 800b3aa:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800b3ae:	f7ff bf6f 	b.w	800b290 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]>
 800b3b2:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800b3b6:	4632      	mov	r2, r6
 800b3b8:	4639      	mov	r1, r7
 800b3ba:	1928      	adds	r0, r5, r4
 800b3bc:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800b3c0:	f7ff bf7a 	b.w	800b2b8 <memcpy.isra.0>

0800b3c4 <ArtNetNode::UpdateMergeStatus(unsigned int)>:
 800b3c4:	f890 36de 	ldrb.w	r3, [r0, #1758]	; 0x6de
 800b3c8:	b91b      	cbnz	r3, 800b3d2 <ArtNetNode::UpdateMergeStatus(unsigned int)+0xe>
 800b3ca:	f240 1301 	movw	r3, #257	; 0x101
 800b3ce:	f8a0 36de 	strh.w	r3, [r0, #1758]	; 0x6de
 800b3d2:	2324      	movs	r3, #36	; 0x24
 800b3d4:	fb03 0001 	mla	r0, r3, r1, r0
 800b3d8:	f890 36eb 	ldrb.w	r3, [r0, #1771]	; 0x6eb
 800b3dc:	f043 0308 	orr.w	r3, r3, #8
 800b3e0:	f880 36eb 	strb.w	r3, [r0, #1771]	; 0x6eb
 800b3e4:	4770      	bx	lr

0800b3e6 <ArtNetNode::CheckMergeTimeouts(unsigned int)>:
 800b3e6:	2324      	movs	r3, #36	; 0x24
 800b3e8:	b530      	push	{r4, r5, lr}
 800b3ea:	f242 7510 	movw	r5, #10000	; 0x2710
 800b3ee:	fb03 0301 	mla	r3, r3, r1, r0
 800b3f2:	f8d0 2668 	ldr.w	r2, [r0, #1640]	; 0x668
 800b3f6:	f8d3 46f0 	ldr.w	r4, [r3, #1776]	; 0x6f0
 800b3fa:	1b14      	subs	r4, r2, r4
 800b3fc:	42ac      	cmp	r4, r5
 800b3fe:	d908      	bls.n	800b412 <ArtNetNode::CheckMergeTimeouts(unsigned int)+0x2c>
 800b400:	2400      	movs	r4, #0
 800b402:	f8c3 46f4 	str.w	r4, [r3, #1780]	; 0x6f4
 800b406:	f893 46eb 	ldrb.w	r4, [r3, #1771]	; 0x6eb
 800b40a:	f024 0408 	bic.w	r4, r4, #8
 800b40e:	f883 46eb 	strb.w	r4, [r3, #1771]	; 0x6eb
 800b412:	2324      	movs	r3, #36	; 0x24
 800b414:	fb03 0101 	mla	r1, r3, r1, r0
 800b418:	f8d1 36f8 	ldr.w	r3, [r1, #1784]	; 0x6f8
 800b41c:	1ad2      	subs	r2, r2, r3
 800b41e:	f242 7310 	movw	r3, #10000	; 0x2710
 800b422:	429a      	cmp	r2, r3
 800b424:	d908      	bls.n	800b438 <ArtNetNode::CheckMergeTimeouts(unsigned int)+0x52>
 800b426:	2300      	movs	r3, #0
 800b428:	f8c1 36fc 	str.w	r3, [r1, #1788]	; 0x6fc
 800b42c:	f891 36eb 	ldrb.w	r3, [r1, #1771]	; 0x6eb
 800b430:	f023 0308 	bic.w	r3, r3, #8
 800b434:	f881 36eb 	strb.w	r3, [r1, #1771]	; 0x6eb
 800b438:	2124      	movs	r1, #36	; 0x24
 800b43a:	7803      	ldrb	r3, [r0, #0]
 800b43c:	4602      	mov	r2, r0
 800b43e:	009b      	lsls	r3, r3, #2
 800b440:	fb01 0303 	mla	r3, r1, r3, r0
 800b444:	2100      	movs	r1, #0
 800b446:	429a      	cmp	r2, r3
 800b448:	d006      	beq.n	800b458 <ArtNetNode::CheckMergeTimeouts(unsigned int)+0x72>
 800b44a:	f892 46eb 	ldrb.w	r4, [r2, #1771]	; 0x6eb
 800b44e:	3224      	adds	r2, #36	; 0x24
 800b450:	f3c4 04c0 	ubfx	r4, r4, #3, #1
 800b454:	4321      	orrs	r1, r4
 800b456:	e7f6      	b.n	800b446 <ArtNetNode::CheckMergeTimeouts(unsigned int)+0x60>
 800b458:	b919      	cbnz	r1, 800b462 <ArtNetNode::CheckMergeTimeouts(unsigned int)+0x7c>
 800b45a:	f44f 7380 	mov.w	r3, #256	; 0x100
 800b45e:	f8a0 36de 	strh.w	r3, [r0, #1758]	; 0x6de
 800b462:	bd30      	pop	{r4, r5, pc}

0800b464 <ArtNetNode::HandleDmx()>:
 800b464:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b468:	f8b0 70b4 	ldrh.w	r7, [r0, #180]	; 0xb4
 800b46c:	4604      	mov	r4, r0
 800b46e:	ba7f      	rev16	r7, r7
 800b470:	b2bf      	uxth	r7, r7
 800b472:	f5b7 7f00 	cmp.w	r7, #512	; 0x200
 800b476:	bf28      	it	cs
 800b478:	f44f 7700 	movcs.w	r7, #512	; 0x200
 800b47c:	4605      	mov	r5, r0
 800b47e:	2600      	movs	r6, #0
 800b480:	f04f 0901 	mov.w	r9, #1
 800b484:	f100 08b6 	add.w	r8, r0, #182	; 0xb6
 800b488:	7823      	ldrb	r3, [r4, #0]
 800b48a:	ebb6 0f83 	cmp.w	r6, r3, lsl #2
 800b48e:	f080 809f 	bcs.w	800b5d0 <ArtNetNode::HandleDmx()+0x16c>
 800b492:	f895 36ec 	ldrb.w	r3, [r5, #1772]	; 0x6ec
 800b496:	2b00      	cmp	r3, #0
 800b498:	d056      	beq.n	800b548 <ArtNetNode::HandleDmx()+0xe4>
 800b49a:	f8d5 3704 	ldr.w	r3, [r5, #1796]	; 0x704
 800b49e:	2b00      	cmp	r3, #0
 800b4a0:	d152      	bne.n	800b548 <ArtNetNode::HandleDmx()+0xe4>
 800b4a2:	f8b4 20b2 	ldrh.w	r2, [r4, #178]	; 0xb2
 800b4a6:	f8b5 36e8 	ldrh.w	r3, [r5, #1768]	; 0x6e8
 800b4aa:	429a      	cmp	r2, r3
 800b4ac:	d14c      	bne.n	800b548 <ArtNetNode::HandleDmx()+0xe4>
 800b4ae:	f895 36eb 	ldrb.w	r3, [r5, #1771]	; 0x6eb
 800b4b2:	f8d5 b6f4 	ldr.w	fp, [r5, #1780]	; 0x6f4
 800b4b6:	f063 037f 	orn	r3, r3, #127	; 0x7f
 800b4ba:	f885 36eb 	strb.w	r3, [r5, #1771]	; 0x6eb
 800b4be:	f894 36de 	ldrb.w	r3, [r4, #1758]	; 0x6de
 800b4c2:	f8d5 a6fc 	ldr.w	sl, [r5, #1788]	; 0x6fc
 800b4c6:	b133      	cbz	r3, 800b4d6 <ArtNetNode::HandleDmx()+0x72>
 800b4c8:	f894 36e0 	ldrb.w	r3, [r4, #1760]	; 0x6e0
 800b4cc:	b91b      	cbnz	r3, 800b4d6 <ArtNetNode::HandleDmx()+0x72>
 800b4ce:	4631      	mov	r1, r6
 800b4d0:	4620      	mov	r0, r4
 800b4d2:	f7ff ff88 	bl	800b3e6 <ArtNetNode::CheckMergeTimeouts(unsigned int)>
 800b4d6:	ea5b 020a 	orrs.w	r2, fp, sl
 800b4da:	f8d4 3570 	ldr.w	r3, [r4, #1392]	; 0x570
 800b4de:	d136      	bne.n	800b54e <ArtNetNode::HandleDmx()+0xea>
 800b4e0:	f8c5 36f4 	str.w	r3, [r5, #1780]	; 0x6f4
 800b4e4:	f8d4 3668 	ldr.w	r3, [r4, #1640]	; 0x668
 800b4e8:	463a      	mov	r2, r7
 800b4ea:	4641      	mov	r1, r8
 800b4ec:	4630      	mov	r0, r6
 800b4ee:	f8c5 36f0 	str.w	r3, [r5, #1776]	; 0x6f0
 800b4f2:	f7ff fef7 	bl	800b2e4 <lightset::Data::SetSourceA(unsigned int, unsigned char const*, unsigned int)>
 800b4f6:	f894 36dd 	ldrb.w	r3, [r4, #1757]	; 0x6dd
 800b4fa:	b9fb      	cbnz	r3, 800b53c <ArtNetNode::HandleDmx()+0xd8>
 800b4fc:	f8d4 a008 	ldr.w	sl, [r4, #8]
 800b500:	f7ff fee4 	bl	800b2cc <lightset::Data::Get()>
 800b504:	f240 6304 	movw	r3, #1540	; 0x604
 800b508:	4373      	muls	r3, r6
 800b50a:	18c1      	adds	r1, r0, r3
 800b50c:	f503 6280 	add.w	r2, r3, #1024	; 0x400
 800b510:	f8da 3000 	ldr.w	r3, [sl]
 800b514:	4402      	add	r2, r0
 800b516:	f8d3 b010 	ldr.w	fp, [r3, #16]
 800b51a:	4650      	mov	r0, sl
 800b51c:	f8d1 3600 	ldr.w	r3, [r1, #1536]	; 0x600
 800b520:	4631      	mov	r1, r6
 800b522:	47d8      	blx	fp
 800b524:	f895 3709 	ldrb.w	r3, [r5, #1801]	; 0x709
 800b528:	b943      	cbnz	r3, 800b53c <ArtNetNode::HandleDmx()+0xd8>
 800b52a:	68a0      	ldr	r0, [r4, #8]
 800b52c:	4631      	mov	r1, r6
 800b52e:	6803      	ldr	r3, [r0, #0]
 800b530:	689b      	ldr	r3, [r3, #8]
 800b532:	4798      	blx	r3
 800b534:	f884 96df 	strb.w	r9, [r4, #1759]	; 0x6df
 800b538:	f885 9709 	strb.w	r9, [r5, #1801]	; 0x709
 800b53c:	f894 36e1 	ldrb.w	r3, [r4, #1761]	; 0x6e1
 800b540:	f043 0302 	orr.w	r3, r3, #2
 800b544:	f884 36e1 	strb.w	r3, [r4, #1761]	; 0x6e1
 800b548:	3601      	adds	r6, #1
 800b54a:	3524      	adds	r5, #36	; 0x24
 800b54c:	e79c      	b.n	800b488 <ArtNetNode::HandleDmx()+0x24>
 800b54e:	459b      	cmp	fp, r3
 800b550:	d104      	bne.n	800b55c <ArtNetNode::HandleDmx()+0xf8>
 800b552:	f1ba 0f00 	cmp.w	sl, #0
 800b556:	d0c5      	beq.n	800b4e4 <ArtNetNode::HandleDmx()+0x80>
 800b558:	b11b      	cbz	r3, 800b562 <ArtNetNode::HandleDmx()+0xfe>
 800b55a:	e037      	b.n	800b5cc <ArtNetNode::HandleDmx()+0x168>
 800b55c:	f1bb 0f00 	cmp.w	fp, #0
 800b560:	d132      	bne.n	800b5c8 <ArtNetNode::HandleDmx()+0x164>
 800b562:	459a      	cmp	sl, r3
 800b564:	d11d      	bne.n	800b5a2 <ArtNetNode::HandleDmx()+0x13e>
 800b566:	f8d4 3668 	ldr.w	r3, [r4, #1640]	; 0x668
 800b56a:	f8c5 36f8 	str.w	r3, [r5, #1784]	; 0x6f8
 800b56e:	f7ff fead 	bl	800b2cc <lightset::Data::Get()>
 800b572:	f240 6304 	movw	r3, #1540	; 0x604
 800b576:	4683      	mov	fp, r0
 800b578:	fb03 fa06 	mul.w	sl, r3, r6
 800b57c:	f50a 7000 	add.w	r0, sl, #512	; 0x200
 800b580:	463a      	mov	r2, r7
 800b582:	4641      	mov	r1, r8
 800b584:	4458      	add	r0, fp
 800b586:	f7ff fe97 	bl	800b2b8 <memcpy.isra.0>
 800b58a:	eb0b 030a 	add.w	r3, fp, sl
 800b58e:	f50a 6080 	add.w	r0, sl, #1024	; 0x400
 800b592:	463a      	mov	r2, r7
 800b594:	4641      	mov	r1, r8
 800b596:	f8c3 7600 	str.w	r7, [r3, #1536]	; 0x600
 800b59a:	4458      	add	r0, fp
 800b59c:	f7ff fe8c 	bl	800b2b8 <memcpy.isra.0>
 800b5a0:	e7a9      	b.n	800b4f6 <ArtNetNode::HandleDmx()+0x92>
 800b5a2:	b9bb      	cbnz	r3, 800b5d4 <ArtNetNode::HandleDmx()+0x170>
 800b5a4:	f8c5 36f4 	str.w	r3, [r5, #1780]	; 0x6f4
 800b5a8:	f8d4 3668 	ldr.w	r3, [r4, #1640]	; 0x668
 800b5ac:	4631      	mov	r1, r6
 800b5ae:	4620      	mov	r0, r4
 800b5b0:	f8c5 36f0 	str.w	r3, [r5, #1776]	; 0x6f0
 800b5b4:	f7ff ff06 	bl	800b3c4 <ArtNetNode::UpdateMergeStatus(unsigned int)>
 800b5b8:	463a      	mov	r2, r7
 800b5ba:	4641      	mov	r1, r8
 800b5bc:	4630      	mov	r0, r6
 800b5be:	f8d5 3700 	ldr.w	r3, [r5, #1792]	; 0x700
 800b5c2:	f7ff feac 	bl	800b31e <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>
 800b5c6:	e796      	b.n	800b4f6 <ArtNetNode::HandleDmx()+0x92>
 800b5c8:	459b      	cmp	fp, r3
 800b5ca:	d118      	bne.n	800b5fe <ArtNetNode::HandleDmx()+0x19a>
 800b5cc:	459a      	cmp	sl, r3
 800b5ce:	d1eb      	bne.n	800b5a8 <ArtNetNode::HandleDmx()+0x144>
 800b5d0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b5d4:	f1ba 0f00 	cmp.w	sl, #0
 800b5d8:	d1e4      	bne.n	800b5a4 <ArtNetNode::HandleDmx()+0x140>
 800b5da:	f8c5 36fc 	str.w	r3, [r5, #1788]	; 0x6fc
 800b5de:	f8d4 3668 	ldr.w	r3, [r4, #1640]	; 0x668
 800b5e2:	4631      	mov	r1, r6
 800b5e4:	4620      	mov	r0, r4
 800b5e6:	f8c5 36f8 	str.w	r3, [r5, #1784]	; 0x6f8
 800b5ea:	f7ff feeb 	bl	800b3c4 <ArtNetNode::UpdateMergeStatus(unsigned int)>
 800b5ee:	463a      	mov	r2, r7
 800b5f0:	4641      	mov	r1, r8
 800b5f2:	4630      	mov	r0, r6
 800b5f4:	f8d5 3700 	ldr.w	r3, [r5, #1792]	; 0x700
 800b5f8:	f7ff feba 	bl	800b370 <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>
 800b5fc:	e77b      	b.n	800b4f6 <ArtNetNode::HandleDmx()+0x92>
 800b5fe:	f1ba 0f00 	cmp.w	sl, #0
 800b602:	d0ea      	beq.n	800b5da <ArtNetNode::HandleDmx()+0x176>
 800b604:	459a      	cmp	sl, r3
 800b606:	d0ea      	beq.n	800b5de <ArtNetNode::HandleDmx()+0x17a>
 800b608:	e7e2      	b.n	800b5d0 <ArtNetNode::HandleDmx()+0x16c>
	...

0800b60c <ArtNetNode::SetDestinationIp(unsigned int, unsigned int)>:
 800b60c:	2907      	cmp	r1, #7
 800b60e:	b510      	push	{r4, lr}
 800b610:	d80b      	bhi.n	800b62a <ArtNetNode::SetDestinationIp(unsigned int, unsigned int)+0x1e>
 800b612:	4b06      	ldr	r3, [pc, #24]	; (800b62c <ArtNetNode::SetDestinationIp(unsigned int, unsigned int)+0x20>)
 800b614:	3181      	adds	r1, #129	; 0x81
 800b616:	681c      	ldr	r4, [r3, #0]
 800b618:	0109      	lsls	r1, r1, #4
 800b61a:	6923      	ldr	r3, [r4, #16]
 800b61c:	69a4      	ldr	r4, [r4, #24]
 800b61e:	4053      	eors	r3, r2
 800b620:	4223      	tst	r3, r4
 800b622:	bf16      	itet	ne
 800b624:	6ac3      	ldrne	r3, [r0, #44]	; 0x2c
 800b626:	5042      	streq	r2, [r0, r1]
 800b628:	5043      	strne	r3, [r0, r1]
 800b62a:	bd10      	pop	{r4, pc}
 800b62c:	200136bc 			; <UNDEFINED> instruction: 0x200136bc

0800b630 <ArtNetNode::HandleDmxIn()>:
 800b630:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b634:	f5ad 7d0a 	sub.w	sp, sp, #552	; 0x228
 800b638:	ab05      	add	r3, sp, #20
 800b63a:	4607      	mov	r7, r0
 800b63c:	2208      	movs	r2, #8
 800b63e:	461e      	mov	r6, r3
 800b640:	4953      	ldr	r1, [pc, #332]	; (800b790 <ArtNetNode::HandleDmxIn()+0x160>)
 800b642:	3a01      	subs	r2, #1
 800b644:	d304      	bcc.n	800b650 <ArtNetNode::HandleDmxIn()+0x20>
 800b646:	f811 0b01 	ldrb.w	r0, [r1], #1
 800b64a:	f803 0b01 	strb.w	r0, [r3], #1
 800b64e:	e7f8      	b.n	800b642 <ArtNetNode::HandleDmxIn()+0x12>
 800b650:	f44f 43a0 	mov.w	r3, #20480	; 0x5000
 800b654:	2500      	movs	r5, #0
 800b656:	8133      	strh	r3, [r6, #8]
 800b658:	230e      	movs	r3, #14
 800b65a:	463c      	mov	r4, r7
 800b65c:	f8df 8134 	ldr.w	r8, [pc, #308]	; 800b794 <ArtNetNode::HandleDmxIn()+0x164>
 800b660:	f8df 9134 	ldr.w	r9, [pc, #308]	; 800b798 <ArtNetNode::HandleDmxIn()+0x168>
 800b664:	72b5      	strb	r5, [r6, #10]
 800b666:	72f3      	strb	r3, [r6, #11]
 800b668:	f894 380c 	ldrb.w	r3, [r4, #2060]	; 0x80c
 800b66c:	2b00      	cmp	r3, #0
 800b66e:	d057      	beq.n	800b720 <ArtNetNode::HandleDmxIn()+0xf0>
 800b670:	6978      	ldr	r0, [r7, #20]
 800b672:	4629      	mov	r1, r5
 800b674:	6803      	ldr	r3, [r0, #0]
 800b676:	aa03      	add	r2, sp, #12
 800b678:	f8d3 a010 	ldr.w	sl, [r3, #16]
 800b67c:	ab04      	add	r3, sp, #16
 800b67e:	47d0      	blx	sl
 800b680:	2800      	cmp	r0, #0
 800b682:	d056      	beq.n	800b732 <ArtNetNode::HandleDmxIn()+0x102>
 800b684:	f894 3814 	ldrb.w	r3, [r4, #2068]	; 0x814
 800b688:	7375      	strb	r5, [r6, #13]
 800b68a:	3301      	adds	r3, #1
 800b68c:	b2db      	uxtb	r3, r3
 800b68e:	f884 3814 	strb.w	r3, [r4, #2068]	; 0x814
 800b692:	7333      	strb	r3, [r6, #12]
 800b694:	f8b4 3808 	ldrh.w	r3, [r4, #2056]	; 0x808
 800b698:	f10d 0226 	add.w	r2, sp, #38	; 0x26
 800b69c:	81f3      	strh	r3, [r6, #14]
 800b69e:	9b03      	ldr	r3, [sp, #12]
 800b6a0:	eb00 0c03 	add.w	ip, r0, r3
 800b6a4:	4584      	cmp	ip, r0
 800b6a6:	d004      	beq.n	800b6b2 <ArtNetNode::HandleDmxIn()+0x82>
 800b6a8:	f810 1b01 	ldrb.w	r1, [r0], #1
 800b6ac:	f802 1b01 	strb.w	r1, [r2], #1
 800b6b0:	e7f8      	b.n	800b6a4 <ArtNetNode::HandleDmxIn()+0x74>
 800b6b2:	07da      	lsls	r2, r3, #31
 800b6b4:	d504      	bpl.n	800b6c0 <ArtNetNode::HandleDmxIn()+0x90>
 800b6b6:	2100      	movs	r1, #0
 800b6b8:	18f2      	adds	r2, r6, r3
 800b6ba:	3301      	adds	r3, #1
 800b6bc:	7491      	strb	r1, [r2, #18]
 800b6be:	9303      	str	r3, [sp, #12]
 800b6c0:	9b03      	ldr	r3, [sp, #12]
 800b6c2:	4631      	mov	r1, r6
 800b6c4:	0a1a      	lsrs	r2, r3, #8
 800b6c6:	7473      	strb	r3, [r6, #17]
 800b6c8:	2380      	movs	r3, #128	; 0x80
 800b6ca:	f884 380b 	strb.w	r3, [r4, #2059]	; 0x80b
 800b6ce:	f641 1336 	movw	r3, #6454	; 0x1936
 800b6d2:	7432      	strb	r2, [r6, #16]
 800b6d4:	9300      	str	r3, [sp, #0]
 800b6d6:	f240 2212 	movw	r2, #530	; 0x212
 800b6da:	f8d4 3810 	ldr.w	r3, [r4, #2064]	; 0x810
 800b6de:	7938      	ldrb	r0, [r7, #4]
 800b6e0:	f006 fd58 	bl	8012194 <udp_send>
 800b6e4:	2201      	movs	r2, #1
 800b6e6:	f8d8 1000 	ldr.w	r1, [r8]
 800b6ea:	fa02 f305 	lsl.w	r3, r2, r5
 800b6ee:	ea33 0001 	bics.w	r0, r3, r1
 800b6f2:	d015      	beq.n	800b720 <ArtNetNode::HandleDmxIn()+0xf0>
 800b6f4:	4319      	orrs	r1, r3
 800b6f6:	f8c8 1000 	str.w	r1, [r8]
 800b6fa:	f897 16e1 	ldrb.w	r1, [r7, #1761]	; 0x6e1
 800b6fe:	4311      	orrs	r1, r2
 800b700:	f887 16e1 	strb.w	r1, [r7, #1761]	; 0x6e1
 800b704:	fab3 f383 	clz	r3, r3
 800b708:	b2db      	uxtb	r3, r3
 800b70a:	3b17      	subs	r3, #23
 800b70c:	4093      	lsls	r3, r2
 800b70e:	fa02 f303 	lsl.w	r3, r2, r3
 800b712:	f8d9 2000 	ldr.w	r2, [r9]
 800b716:	4313      	orrs	r3, r2
 800b718:	f483 1360 	eor.w	r3, r3, #3670016	; 0x380000
 800b71c:	f8c9 3000 	str.w	r3, [r9]
 800b720:	3501      	adds	r5, #1
 800b722:	2d04      	cmp	r5, #4
 800b724:	f104 0410 	add.w	r4, r4, #16
 800b728:	d19e      	bne.n	800b668 <ArtNetNode::HandleDmxIn()+0x38>
 800b72a:	f50d 7d0a 	add.w	sp, sp, #552	; 0x228
 800b72e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800b732:	f994 280b 	ldrsb.w	r2, [r4, #2059]	; 0x80b
 800b736:	f894 380b 	ldrb.w	r3, [r4, #2059]	; 0x80b
 800b73a:	2a00      	cmp	r2, #0
 800b73c:	daf0      	bge.n	800b720 <ArtNetNode::HandleDmxIn()+0xf0>
 800b73e:	9a04      	ldr	r2, [sp, #16]
 800b740:	2a00      	cmp	r2, #0
 800b742:	d1ed      	bne.n	800b720 <ArtNetNode::HandleDmxIn()+0xf0>
 800b744:	2201      	movs	r2, #1
 800b746:	f8d8 1000 	ldr.w	r1, [r8]
 800b74a:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800b74e:	f884 380b 	strb.w	r3, [r4, #2059]	; 0x80b
 800b752:	fa02 f305 	lsl.w	r3, r2, r5
 800b756:	ea21 0103 	bic.w	r1, r1, r3
 800b75a:	f8c8 1000 	str.w	r1, [r8]
 800b75e:	fab3 f383 	clz	r3, r3
 800b762:	b2db      	uxtb	r3, r3
 800b764:	3b17      	subs	r3, #23
 800b766:	4093      	lsls	r3, r2
 800b768:	fa02 f303 	lsl.w	r3, r2, r3
 800b76c:	f8d9 2000 	ldr.w	r2, [r9]
 800b770:	ea22 0203 	bic.w	r2, r2, r3
 800b774:	f482 1260 	eor.w	r2, r2, #3670016	; 0x380000
 800b778:	f8c9 2000 	str.w	r2, [r9]
 800b77c:	2900      	cmp	r1, #0
 800b77e:	d1cf      	bne.n	800b720 <ArtNetNode::HandleDmxIn()+0xf0>
 800b780:	f897 36e1 	ldrb.w	r3, [r7, #1761]	; 0x6e1
 800b784:	f023 0301 	bic.w	r3, r3, #1
 800b788:	f887 36e1 	strb.w	r3, [r7, #1761]	; 0x6e1
 800b78c:	e7c8      	b.n	800b720 <ArtNetNode::HandleDmxIn()+0xf0>
 800b78e:	bf00      	nop
 800b790:	08019197 	stmdaeq	r1, {r0, r1, r2, r4, r7, r8, ip, pc}
 800b794:	20003140 	andcs	r3, r0, r0, asr #2
 800b798:	20013dec 	andcs	r3, r1, ip, ror #27

0800b79c <memcmp.constprop.0>:
 800b79c:	b510      	push	{r4, lr}
 800b79e:	4c07      	ldr	r4, [pc, #28]	; (800b7bc <memcmp.constprop.0+0x20>)
 800b7a0:	1e42      	subs	r2, r0, #1
 800b7a2:	3003      	adds	r0, #3
 800b7a4:	4282      	cmp	r2, r0
 800b7a6:	d007      	beq.n	800b7b8 <memcmp.constprop.0+0x1c>
 800b7a8:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 800b7ac:	f814 1b01 	ldrb.w	r1, [r4], #1
 800b7b0:	428b      	cmp	r3, r1
 800b7b2:	d0f7      	beq.n	800b7a4 <memcmp.constprop.0+0x8>
 800b7b4:	1a58      	subs	r0, r3, r1
 800b7b6:	bd10      	pop	{r4, pc}
 800b7b8:	2000      	movs	r0, #0
 800b7ba:	e7fc      	b.n	800b7b6 <memcmp.constprop.0+0x1a>
 800b7bc:	20003144 	andcs	r3, r0, r4, asr #2

0800b7c0 <memcpy.constprop.0.isra.0>:
 800b7c0:	3801      	subs	r0, #1
 800b7c2:	1d0a      	adds	r2, r1, #4
 800b7c4:	4291      	cmp	r1, r2
 800b7c6:	d004      	beq.n	800b7d2 <memcpy.constprop.0.isra.0+0x12>
 800b7c8:	f811 3b01 	ldrb.w	r3, [r1], #1
 800b7cc:	f800 3f01 	strb.w	r3, [r0, #1]!
 800b7d0:	e7f8      	b.n	800b7c4 <memcpy.constprop.0.isra.0+0x4>
 800b7d2:	4770      	bx	lr

0800b7d4 <ArtNetNode::HandleIpProg()>:
 800b7d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b7d8:	f100 03a4 	add.w	r3, r0, #164	; 0xa4
 800b7dc:	b085      	sub	sp, #20
 800b7de:	4604      	mov	r4, r0
 800b7e0:	9303      	str	r3, [sp, #12]
 800b7e2:	2300      	movs	r3, #0
 800b7e4:	4d5a      	ldr	r5, [pc, #360]	; (800b950 <ArtNetNode::HandleIpProg()+0x17c>)
 800b7e6:	f890 70b2 	ldrb.w	r7, [r0, #178]	; 0xb2
 800b7ea:	6828      	ldr	r0, [r5, #0]
 800b7ec:	f890 b001 	ldrb.w	fp, [r0, #1]
 800b7f0:	f884 30ac 	strb.w	r3, [r4, #172]	; 0xac
 800b7f4:	f06f 0306 	mvn.w	r3, #6
 800b7f8:	f884 30ad 	strb.w	r3, [r4, #173]	; 0xad
 800b7fc:	f007 03c0 	and.w	r3, r7, #192	; 0xc0
 800b800:	2bc0      	cmp	r3, #192	; 0xc0
 800b802:	d101      	bne.n	800b808 <ArtNetNode::HandleIpProg()+0x34>
 800b804:	f007 fbca 	bl	8012f9c <Network::EnableDhcp()>
 800b808:	f007 0388 	and.w	r3, r7, #136	; 0x88
 800b80c:	2b88      	cmp	r3, #136	; 0x88
 800b80e:	d103      	bne.n	800b818 <ArtNetNode::HandleIpProg()+0x44>
 800b810:	2100      	movs	r1, #0
 800b812:	6828      	ldr	r0, [r5, #0]
 800b814:	f007 fb26 	bl	8012e64 <Network::SetIp(unsigned int)>
 800b818:	f007 0384 	and.w	r3, r7, #132	; 0x84
 800b81c:	2b84      	cmp	r3, #132	; 0x84
 800b81e:	4e4d      	ldr	r6, [pc, #308]	; (800b954 <ArtNetNode::HandleIpProg()+0x180>)
 800b820:	f104 08b4 	add.w	r8, r4, #180	; 0xb4
 800b824:	d107      	bne.n	800b836 <ArtNetNode::HandleIpProg()+0x62>
 800b826:	4641      	mov	r1, r8
 800b828:	4630      	mov	r0, r6
 800b82a:	f7ff ffc9 	bl	800b7c0 <memcpy.constprop.0.isra.0>
 800b82e:	6831      	ldr	r1, [r6, #0]
 800b830:	6828      	ldr	r0, [r5, #0]
 800b832:	f007 fb17 	bl	8012e64 <Network::SetIp(unsigned int)>
 800b836:	f007 0382 	and.w	r3, r7, #130	; 0x82
 800b83a:	2b82      	cmp	r3, #130	; 0x82
 800b83c:	f104 09b8 	add.w	r9, r4, #184	; 0xb8
 800b840:	d107      	bne.n	800b852 <ArtNetNode::HandleIpProg()+0x7e>
 800b842:	4649      	mov	r1, r9
 800b844:	4843      	ldr	r0, [pc, #268]	; (800b954 <ArtNetNode::HandleIpProg()+0x180>)
 800b846:	f7ff ffbb 	bl	800b7c0 <memcpy.constprop.0.isra.0>
 800b84a:	6831      	ldr	r1, [r6, #0]
 800b84c:	6828      	ldr	r0, [r5, #0]
 800b84e:	f007 fb37 	bl	8012ec0 <Network::SetNetmask(unsigned int)>
 800b852:	f007 0790 	and.w	r7, r7, #144	; 0x90
 800b856:	2f90      	cmp	r7, #144	; 0x90
 800b858:	f104 0abe 	add.w	sl, r4, #190	; 0xbe
 800b85c:	d107      	bne.n	800b86e <ArtNetNode::HandleIpProg()+0x9a>
 800b85e:	4651      	mov	r1, sl
 800b860:	483c      	ldr	r0, [pc, #240]	; (800b954 <ArtNetNode::HandleIpProg()+0x180>)
 800b862:	f7ff ffad 	bl	800b7c0 <memcpy.constprop.0.isra.0>
 800b866:	6831      	ldr	r1, [r6, #0]
 800b868:	6828      	ldr	r0, [r5, #0]
 800b86a:	f007 fb3f 	bl	8012eec <Network::SetGatewayIp(unsigned int)>
 800b86e:	2200      	movs	r2, #0
 800b870:	6829      	ldr	r1, [r5, #0]
 800b872:	7848      	ldrb	r0, [r1, #1]
 800b874:	f884 20bf 	strb.w	r2, [r4, #191]	; 0xbf
 800b878:	4290      	cmp	r0, r2
 800b87a:	bf0c      	ite	eq
 800b87c:	4610      	moveq	r0, r2
 800b87e:	2040      	movne	r0, #64	; 0x40
 800b880:	f884 00be 	strb.w	r0, [r4, #190]	; 0xbe
 800b884:	7848      	ldrb	r0, [r1, #1]
 800b886:	6909      	ldr	r1, [r1, #16]
 800b888:	ea8b 0b00 	eor.w	fp, fp, r0
 800b88c:	4640      	mov	r0, r8
 800b88e:	6031      	str	r1, [r6, #0]
 800b890:	f7ff ff84 	bl	800b79c <memcmp.constprop.0>
 800b894:	492f      	ldr	r1, [pc, #188]	; (800b954 <ArtNetNode::HandleIpProg()+0x180>)
 800b896:	4607      	mov	r7, r0
 800b898:	4640      	mov	r0, r8
 800b89a:	f7ff ff91 	bl	800b7c0 <memcpy.constprop.0.isra.0>
 800b89e:	6829      	ldr	r1, [r5, #0]
 800b8a0:	4648      	mov	r0, r9
 800b8a2:	6989      	ldr	r1, [r1, #24]
 800b8a4:	6031      	str	r1, [r6, #0]
 800b8a6:	f7ff ff79 	bl	800b79c <memcmp.constprop.0>
 800b8aa:	492a      	ldr	r1, [pc, #168]	; (800b954 <ArtNetNode::HandleIpProg()+0x180>)
 800b8ac:	9003      	str	r0, [sp, #12]
 800b8ae:	4648      	mov	r0, r9
 800b8b0:	f7ff ff86 	bl	800b7c0 <memcpy.constprop.0.isra.0>
 800b8b4:	6829      	ldr	r1, [r5, #0]
 800b8b6:	4650      	mov	r0, sl
 800b8b8:	6949      	ldr	r1, [r1, #20]
 800b8ba:	6031      	str	r1, [r6, #0]
 800b8bc:	f7ff ff6e 	bl	800b79c <memcmp.constprop.0>
 800b8c0:	9b03      	ldr	r3, [sp, #12]
 800b8c2:	4924      	ldr	r1, [pc, #144]	; (800b954 <ArtNetNode::HandleIpProg()+0x180>)
 800b8c4:	431f      	orrs	r7, r3
 800b8c6:	ea57 0300 	orrs.w	r3, r7, r0
 800b8ca:	f104 00c0 	add.w	r0, r4, #192	; 0xc0
 800b8ce:	bf0c      	ite	eq
 800b8d0:	465e      	moveq	r6, fp
 800b8d2:	f04b 0601 	orrne.w	r6, fp, #1
 800b8d6:	f7ff ff73 	bl	800b7c0 <memcpy.constprop.0.isra.0>
 800b8da:	2200      	movs	r2, #0
 800b8dc:	f641 1336 	movw	r3, #6454	; 0x1936
 800b8e0:	f884 20c4 	strb.w	r2, [r4, #196]	; 0xc4
 800b8e4:	f884 20c5 	strb.w	r2, [r4, #197]	; 0xc5
 800b8e8:	9300      	str	r3, [sp, #0]
 800b8ea:	2222      	movs	r2, #34	; 0x22
 800b8ec:	f8d4 3570 	ldr.w	r3, [r4, #1392]	; 0x570
 800b8f0:	7920      	ldrb	r0, [r4, #4]
 800b8f2:	f104 01a4 	add.w	r1, r4, #164	; 0xa4
 800b8f6:	f006 fc4d 	bl	8012194 <udp_send>
 800b8fa:	b336      	cbz	r6, 800b94a <ArtNetNode::HandleIpProg()+0x176>
 800b8fc:	682a      	ldr	r2, [r5, #0]
 800b8fe:	f204 5082 	addw	r0, r4, #1410	; 0x582
 800b902:	6913      	ldr	r3, [r2, #16]
 800b904:	62a3      	str	r3, [r4, #40]	; 0x28
 800b906:	6991      	ldr	r1, [r2, #24]
 800b908:	7852      	ldrb	r2, [r2, #1]
 800b90a:	ea63 0301 	orn	r3, r3, r1
 800b90e:	2a00      	cmp	r2, #0
 800b910:	bf14      	ite	ne
 800b912:	2202      	movne	r2, #2
 800b914:	2200      	moveq	r2, #0
 800b916:	62e3      	str	r3, [r4, #44]	; 0x2c
 800b918:	f994 3098 	ldrsb.w	r3, [r4, #152]	; 0x98
 800b91c:	4641      	mov	r1, r8
 800b91e:	f023 0302 	bic.w	r3, r3, #2
 800b922:	4313      	orrs	r3, r2
 800b924:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 800b928:	f7ff ff4a 	bl	800b7c0 <memcpy.constprop.0.isra.0>
 800b92c:	4641      	mov	r1, r8
 800b92e:	f204 6047 	addw	r0, r4, #1607	; 0x647
 800b932:	f7ff ff45 	bl	800b7c0 <memcpy.constprop.0.isra.0>
 800b936:	f894 36da 	ldrb.w	r3, [r4, #1754]	; 0x6da
 800b93a:	b133      	cbz	r3, 800b94a <ArtNetNode::HandleIpProg()+0x176>
 800b93c:	2101      	movs	r1, #1
 800b93e:	4620      	mov	r0, r4
 800b940:	b005      	add	sp, #20
 800b942:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b946:	f000 b883 	b.w	800ba50 <ArtNetNode::SendPollRelply(bool)>
 800b94a:	b005      	add	sp, #20
 800b94c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b950:	200136bc 			; <UNDEFINED> instruction: 0x200136bc
 800b954:	20003144 	andcs	r3, r0, r4, asr #2

0800b958 <memcpy.isra.0>:
 800b958:	3801      	subs	r0, #1
 800b95a:	440a      	add	r2, r1
 800b95c:	4291      	cmp	r1, r2
 800b95e:	d004      	beq.n	800b96a <memcpy.isra.0+0x12>
 800b960:	f811 3b01 	ldrb.w	r3, [r1], #1
 800b964:	f800 3f01 	strb.w	r3, [r0, #1]!
 800b968:	e7f8      	b.n	800b95c <memcpy.isra.0+0x4>
 800b96a:	4770      	bx	lr

0800b96c <ArtNetNode::FillPollReply()>:
 800b96c:	b538      	push	{r3, r4, r5, lr}
 800b96e:	4604      	mov	r4, r0
 800b970:	f500 60af 	add.w	r0, r0, #1400	; 0x578
 800b974:	4603      	mov	r3, r0
 800b976:	2200      	movs	r2, #0
 800b978:	f204 6167 	addw	r1, r4, #1639	; 0x667
 800b97c:	4299      	cmp	r1, r3
 800b97e:	d002      	beq.n	800b986 <ArtNetNode::FillPollReply()+0x1a>
 800b980:	f803 2b01 	strb.w	r2, [r3], #1
 800b984:	e7fa      	b.n	800b97c <ArtNetNode::FillPollReply()+0x10>
 800b986:	2208      	movs	r2, #8
 800b988:	492d      	ldr	r1, [pc, #180]	; (800ba40 <ArtNetNode::FillPollReply()+0xd4>)
 800b98a:	f7ff ffe5 	bl	800b958 <memcpy.isra.0>
 800b98e:	f44f 5304 	mov.w	r3, #8448	; 0x2100
 800b992:	4d2c      	ldr	r5, [pc, #176]	; (800ba44 <ArtNetNode::FillPollReply()+0xd8>)
 800b994:	f8a4 3580 	strh.w	r3, [r4, #1408]	; 0x580
 800b998:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800b99a:	4629      	mov	r1, r5
 800b99c:	f204 5082 	addw	r0, r4, #1410	; 0x582
 800b9a0:	2204      	movs	r2, #4
 800b9a2:	602b      	str	r3, [r5, #0]
 800b9a4:	f7ff ffd8 	bl	800b958 <memcpy.isra.0>
 800b9a8:	f641 1336 	movw	r3, #6454	; 0x1936
 800b9ac:	f8a4 3586 	strh.w	r3, [r4, #1414]	; 0x586
 800b9b0:	4b25      	ldr	r3, [pc, #148]	; (800ba48 <ArtNetNode::FillPollReply()+0xdc>)
 800b9b2:	f104 0144 	add.w	r1, r4, #68	; 0x44
 800b9b6:	781a      	ldrb	r2, [r3, #0]
 800b9b8:	f204 5092 	addw	r0, r4, #1426	; 0x592
 800b9bc:	f884 2588 	strb.w	r2, [r4, #1416]	; 0x588
 800b9c0:	785b      	ldrb	r3, [r3, #1]
 800b9c2:	f884 3589 	strb.w	r3, [r4, #1417]	; 0x589
 800b9c6:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800b9ca:	f8a4 358c 	strh.w	r3, [r4, #1420]	; 0x58c
 800b9ce:	f894 3097 	ldrb.w	r3, [r4, #151]	; 0x97
 800b9d2:	f884 358f 	strb.w	r3, [r4, #1423]	; 0x58f
 800b9d6:	4b1d      	ldr	r3, [pc, #116]	; (800ba4c <ArtNetNode::FillPollReply()+0xe0>)
 800b9d8:	785a      	ldrb	r2, [r3, #1]
 800b9da:	781b      	ldrb	r3, [r3, #0]
 800b9dc:	f884 2590 	strb.w	r2, [r4, #1424]	; 0x590
 800b9e0:	f884 3591 	strb.w	r3, [r4, #1425]	; 0x591
 800b9e4:	2212      	movs	r2, #18
 800b9e6:	f7ff ffb7 	bl	800b958 <memcpy.isra.0>
 800b9ea:	f104 0156 	add.w	r1, r4, #86	; 0x56
 800b9ee:	f204 50a4 	addw	r0, r4, #1444	; 0x5a4
 800b9f2:	2240      	movs	r2, #64	; 0x40
 800b9f4:	f7ff ffb0 	bl	800b958 <memcpy.isra.0>
 800b9f8:	2300      	movs	r3, #0
 800b9fa:	f104 0138 	add.w	r1, r4, #56	; 0x38
 800b9fe:	f884 3640 	strb.w	r3, [r4, #1600]	; 0x640
 800ba02:	f204 6041 	addw	r0, r4, #1601	; 0x641
 800ba06:	2206      	movs	r2, #6
 800ba08:	f7ff ffa6 	bl	800b958 <memcpy.isra.0>
 800ba0c:	4629      	mov	r1, r5
 800ba0e:	f204 6047 	addw	r0, r4, #1607	; 0x647
 800ba12:	2204      	movs	r2, #4
 800ba14:	f7ff ffa0 	bl	800b958 <memcpy.isra.0>
 800ba18:	f894 3098 	ldrb.w	r3, [r4, #152]	; 0x98
 800ba1c:	f104 019a 	add.w	r1, r4, #154	; 0x9a
 800ba20:	f884 364c 	strb.w	r3, [r4, #1612]	; 0x64c
 800ba24:	f894 3099 	ldrb.w	r3, [r4, #153]	; 0x99
 800ba28:	f204 6052 	addw	r0, r4, #1618	; 0x652
 800ba2c:	f884 3651 	strb.w	r3, [r4, #1617]	; 0x651
 800ba30:	2304      	movs	r3, #4
 800ba32:	2206      	movs	r2, #6
 800ba34:	f884 3625 	strb.w	r3, [r4, #1573]	; 0x625
 800ba38:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800ba3c:	f7ff bf8c 	b.w	800b958 <memcpy.isra.0>
 800ba40:	080191b2 	stmdaeq	r1, {r1, r4, r5, r7, r8, ip, pc}
 800ba44:	20003148 	andcs	r3, r0, r8, asr #2
 800ba48:	08019427 	stmdaeq	r1, {r0, r1, r2, r5, sl, ip, pc}
 800ba4c:	08019425 	stmdaeq	r1, {r0, r2, r5, sl, ip, pc}

0800ba50 <ArtNetNode::SendPollRelply(bool)>:
 800ba50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ba54:	4604      	mov	r4, r0
 800ba56:	b087      	sub	sp, #28
 800ba58:	b941      	cbnz	r1, 800ba6c <ArtNetNode::SendPollRelply(bool)+0x1c>
 800ba5a:	f890 36d9 	ldrb.w	r3, [r0, #1753]	; 0x6d9
 800ba5e:	2b02      	cmp	r3, #2
 800ba60:	bf02      	ittt	eq
 800ba62:	f8d0 36c4 	ldreq.w	r3, [r0, #1732]	; 0x6c4
 800ba66:	3301      	addeq	r3, #1
 800ba68:	f8c0 36c4 	streq.w	r3, [r0, #1732]	; 0x6c4
 800ba6c:	f04f 0900 	mov.w	r9, #0
 800ba70:	46c8      	mov	r8, r9
 800ba72:	f894 3097 	ldrb.w	r3, [r4, #151]	; 0x97
 800ba76:	f884 358f 	strb.w	r3, [r4, #1423]	; 0x58f
 800ba7a:	f104 033e 	add.w	r3, r4, #62	; 0x3e
 800ba7e:	9303      	str	r3, [sp, #12]
 800ba80:	7823      	ldrb	r3, [r4, #0]
 800ba82:	4543      	cmp	r3, r8
 800ba84:	f340 80a0 	ble.w	800bbc8 <ArtNetNode::SendPollRelply(bool)+0x178>
 800ba88:	9a03      	ldr	r2, [sp, #12]
 800ba8a:	2590      	movs	r5, #144	; 0x90
 800ba8c:	f812 3b01 	ldrb.w	r3, [r2], #1
 800ba90:	4649      	mov	r1, r9
 800ba92:	f884 358a 	strb.w	r3, [r4, #1418]	; 0x58a
 800ba96:	7853      	ldrb	r3, [r2, #1]
 800ba98:	9203      	str	r2, [sp, #12]
 800ba9a:	f884 358b 	strb.w	r3, [r4, #1419]	; 0x58b
 800ba9e:	f108 0301 	add.w	r3, r8, #1
 800baa2:	f884 364b 	strb.w	r3, [r4, #1611]	; 0x64b
 800baa6:	fa5f f389 	uxtb.w	r3, r9
 800baaa:	2bfb      	cmp	r3, #251	; 0xfb
 800baac:	bf8c      	ite	hi
 800baae:	2201      	movhi	r2, #1
 800bab0:	2205      	movls	r2, #5
 800bab2:	f04f 0a00 	mov.w	sl, #0
 800bab6:	fb05 4508 	mla	r5, r5, r8, r4
 800baba:	eb04 1b88 	add.w	fp, r4, r8, lsl #6
 800babe:	f204 6726 	addw	r7, r4, #1574	; 0x626
 800bac2:	2a01      	cmp	r2, #1
 800bac4:	d061      	beq.n	800bb8a <ArtNetNode::SendPollRelply(bool)+0x13a>
 800bac6:	f8d5 3704 	ldr.w	r3, [r5, #1796]	; 0x704
 800baca:	f895 66eb 	ldrb.w	r6, [r5, #1771]	; 0x6eb
 800bace:	2b00      	cmp	r3, #0
 800bad0:	d144      	bne.n	800bb5c <ArtNetNode::SendPollRelply(bool)+0x10c>
 800bad2:	f8d5 36f4 	ldr.w	r3, [r5, #1780]	; 0x6f4
 800bad6:	f006 067f 	and.w	r6, r6, #127	; 0x7f
 800bada:	b14b      	cbz	r3, 800baf0 <ArtNetNode::SendPollRelply(bool)+0xa0>
 800badc:	f8d4 3668 	ldr.w	r3, [r4, #1640]	; 0x668
 800bae0:	f8d5 06f0 	ldr.w	r0, [r5, #1776]	; 0x6f0
 800bae4:	1a1b      	subs	r3, r3, r0
 800bae6:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800baea:	bf38      	it	cc
 800baec:	f046 0680 	orrcc.w	r6, r6, #128	; 0x80
 800baf0:	f8d5 36fc 	ldr.w	r3, [r5, #1788]	; 0x6fc
 800baf4:	b14b      	cbz	r3, 800bb0a <ArtNetNode::SendPollRelply(bool)+0xba>
 800baf6:	f8d4 3668 	ldr.w	r3, [r4, #1640]	; 0x668
 800bafa:	f8d5 06f8 	ldr.w	r0, [r5, #1784]	; 0x6f8
 800bafe:	1a1b      	subs	r3, r3, r0
 800bb00:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800bb04:	d201      	bcs.n	800bb0a <ArtNetNode::SendPollRelply(bool)+0xba>
 800bb06:	f046 0680 	orr.w	r6, r6, #128	; 0x80
 800bb0a:	f895 36ec 	ldrb.w	r3, [r5, #1772]	; 0x6ec
 800bb0e:	f885 66eb 	strb.w	r6, [r5, #1771]	; 0x6eb
 800bb12:	2b00      	cmp	r3, #0
 800bb14:	d037      	beq.n	800bb86 <ArtNetNode::SendPollRelply(bool)+0x136>
 800bb16:	f06f 037f 	mvn.w	r3, #127	; 0x7f
 800bb1a:	f10a 0a01 	add.w	sl, sl, #1
 800bb1e:	703b      	strb	r3, [r7, #0]
 800bb20:	723e      	strb	r6, [r7, #8]
 800bb22:	f895 36ea 	ldrb.w	r3, [r5, #1770]	; 0x6ea
 800bb26:	743b      	strb	r3, [r7, #16]
 800bb28:	b2cb      	uxtb	r3, r1
 800bb2a:	2b03      	cmp	r3, #3
 800bb2c:	d80e      	bhi.n	800bb4c <ArtNetNode::SendPollRelply(bool)+0xfc>
 800bb2e:	f89b 380c 	ldrb.w	r3, [fp, #2060]	; 0x80c
 800bb32:	b12b      	cbz	r3, 800bb40 <ArtNetNode::SendPollRelply(bool)+0xf0>
 800bb34:	783b      	ldrb	r3, [r7, #0]
 800bb36:	f10a 0a01 	add.w	sl, sl, #1
 800bb3a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800bb3e:	703b      	strb	r3, [r7, #0]
 800bb40:	f89b 380b 	ldrb.w	r3, [fp, #2059]	; 0x80b
 800bb44:	713b      	strb	r3, [r7, #4]
 800bb46:	f89b 380a 	ldrb.w	r3, [fp, #2058]	; 0x80a
 800bb4a:	733b      	strb	r3, [r7, #12]
 800bb4c:	1e53      	subs	r3, r2, #1
 800bb4e:	3101      	adds	r1, #1
 800bb50:	b2da      	uxtb	r2, r3
 800bb52:	f10b 0b10 	add.w	fp, fp, #16
 800bb56:	3701      	adds	r7, #1
 800bb58:	3524      	adds	r5, #36	; 0x24
 800bb5a:	e7b2      	b.n	800bac2 <ArtNetNode::SendPollRelply(bool)+0x72>
 800bb5c:	69e0      	ldr	r0, [r4, #28]
 800bb5e:	2800      	cmp	r0, #0
 800bb60:	d0d3      	beq.n	800bb0a <ArtNetNode::SendPollRelply(bool)+0xba>
 800bb62:	6803      	ldr	r3, [r0, #0]
 800bb64:	9205      	str	r2, [sp, #20]
 800bb66:	9104      	str	r1, [sp, #16]
 800bb68:	691b      	ldr	r3, [r3, #16]
 800bb6a:	4798      	blx	r3
 800bb6c:	e9dd 1204 	ldrd	r1, r2, [sp, #16]
 800bb70:	f000 0089 	and.w	r0, r0, #137	; 0x89
 800bb74:	f006 0676 	and.w	r6, r6, #118	; 0x76
 800bb78:	4306      	orrs	r6, r0
 800bb7a:	f010 0001 	ands.w	r0, r0, #1
 800bb7e:	bf08      	it	eq
 800bb80:	f8c5 0704 	streq.w	r0, [r5, #1796]	; 0x704
 800bb84:	e7c1      	b.n	800bb0a <ArtNetNode::SendPollRelply(bool)+0xba>
 800bb86:	703b      	strb	r3, [r7, #0]
 800bb88:	e7ca      	b.n	800bb20 <ArtNetNode::SendPollRelply(bool)+0xd0>
 800bb8a:	f204 6373 	addw	r3, r4, #1651	; 0x673
 800bb8e:	9301      	str	r3, [sp, #4]
 800bb90:	f8d4 36c4 	ldr.w	r3, [r4, #1732]	; 0x6c4
 800bb94:	2140      	movs	r1, #64	; 0x40
 800bb96:	4a0f      	ldr	r2, [pc, #60]	; (800bbd4 <ArtNetNode::SendPollRelply(bool)+0x184>)
 800bb98:	9300      	str	r3, [sp, #0]
 800bb9a:	f884 a625 	strb.w	sl, [r4, #1573]	; 0x625
 800bb9e:	f894 36d8 	ldrb.w	r3, [r4, #1752]	; 0x6d8
 800bba2:	f204 50e4 	addw	r0, r4, #1508	; 0x5e4
 800bba6:	f7fd fa23 	bl	8008ff0 <snprintf>
 800bbaa:	f641 1336 	movw	r3, #6454	; 0x1936
 800bbae:	22ef      	movs	r2, #239	; 0xef
 800bbb0:	9300      	str	r3, [sp, #0]
 800bbb2:	7920      	ldrb	r0, [r4, #4]
 800bbb4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800bbb6:	f504 61af 	add.w	r1, r4, #1400	; 0x578
 800bbba:	f006 faeb 	bl	8012194 <udp_send>
 800bbbe:	f108 0801 	add.w	r8, r8, #1
 800bbc2:	f109 0904 	add.w	r9, r9, #4
 800bbc6:	e75b      	b.n	800ba80 <ArtNetNode::SendPollRelply(bool)+0x30>
 800bbc8:	2300      	movs	r3, #0
 800bbca:	f884 36df 	strb.w	r3, [r4, #1759]	; 0x6df
 800bbce:	b007      	add	sp, #28
 800bbd0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bbd4:	0801919f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r7, r8, ip, pc}

0800bbd8 <ArtNetNode::HandlePoll()>:
 800bbd8:	f890 30b0 	ldrb.w	r3, [r0, #176]	; 0xb0
 800bbdc:	b410      	push	{r4}
 800bbde:	f3c3 0240 	ubfx	r2, r3, #1, #1
 800bbe2:	f880 26da 	strb.w	r2, [r0, #1754]	; 0x6da
 800bbe6:	f013 0204 	ands.w	r2, r3, #4
 800bbea:	d02e      	beq.n	800bc4a <ArtNetNode::HandlePoll()+0x72>
 800bbec:	2201      	movs	r2, #1
 800bbee:	f8d0 16cc 	ldr.w	r1, [r0, #1740]	; 0x6cc
 800bbf2:	f890 46dc 	ldrb.w	r4, [r0, #1756]	; 0x6dc
 800bbf6:	f880 26db 	strb.w	r2, [r0, #1755]	; 0x6db
 800bbfa:	b979      	cbnz	r1, 800bc1c <ArtNetNode::HandlePoll()+0x44>
 800bbfc:	f8d0 2570 	ldr.w	r2, [r0, #1392]	; 0x570
 800bc00:	f8c0 26cc 	str.w	r2, [r0, #1740]	; 0x6cc
 800bc04:	b19c      	cbz	r4, 800bc2e <ArtNetNode::HandlePoll()+0x56>
 800bc06:	f890 36e4 	ldrb.w	r3, [r0, #1764]	; 0x6e4
 800bc0a:	f890 20b1 	ldrb.w	r2, [r0, #177]	; 0xb1
 800bc0e:	4293      	cmp	r3, r2
 800bc10:	bf28      	it	cs
 800bc12:	4613      	movcs	r3, r2
 800bc14:	f880 36e4 	strb.w	r3, [r0, #1764]	; 0x6e4
 800bc18:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800bc1a:	e010      	b.n	800bc3e <ArtNetNode::HandlePoll()+0x66>
 800bc1c:	2c00      	cmp	r4, #0
 800bc1e:	d1f2      	bne.n	800bc06 <ArtNetNode::HandlePoll()+0x2e>
 800bc20:	f8d0 4570 	ldr.w	r4, [r0, #1392]	; 0x570
 800bc24:	42a1      	cmp	r1, r4
 800bc26:	d002      	beq.n	800bc2e <ArtNetNode::HandlePoll()+0x56>
 800bc28:	f880 26dc 	strb.w	r2, [r0, #1756]	; 0x6dc
 800bc2c:	e7eb      	b.n	800bc06 <ArtNetNode::HandlePoll()+0x2e>
 800bc2e:	f890 20b1 	ldrb.w	r2, [r0, #177]	; 0xb1
 800bc32:	071b      	lsls	r3, r3, #28
 800bc34:	f880 26e4 	strb.w	r2, [r0, #1764]	; 0x6e4
 800bc38:	d5ee      	bpl.n	800bc18 <ArtNetNode::HandlePoll()+0x40>
 800bc3a:	f8d0 3570 	ldr.w	r3, [r0, #1392]	; 0x570
 800bc3e:	f8c0 36c8 	str.w	r3, [r0, #1736]	; 0x6c8
 800bc42:	2101      	movs	r1, #1
 800bc44:	bc10      	pop	{r4}
 800bc46:	f7ff bf03 	b.w	800ba50 <ArtNetNode::SendPollRelply(bool)>
 800bc4a:	f880 26db 	strb.w	r2, [r0, #1755]	; 0x6db
 800bc4e:	f8c0 26c8 	str.w	r2, [r0, #1736]	; 0x6c8
 800bc52:	e7f6      	b.n	800bc42 <ArtNetNode::HandlePoll()+0x6a>

0800bc54 <ArtNetNode::SendTod(unsigned int)>:
 800bc54:	f06f 037e 	mvn.w	r3, #126	; 0x7e
 800bc58:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800bc5c:	2500      	movs	r5, #0
 800bc5e:	f880 30ad 	strb.w	r3, [r0, #173]	; 0xad
 800bc62:	2301      	movs	r3, #1
 800bc64:	4688      	mov	r8, r1
 800bc66:	4604      	mov	r4, r0
 800bc68:	f880 30b0 	strb.w	r3, [r0, #176]	; 0xb0
 800bc6c:	f880 50ac 	strb.w	r5, [r0, #172]	; 0xac
 800bc70:	6900      	ldr	r0, [r0, #16]
 800bc72:	088f      	lsrs	r7, r1, #2
 800bc74:	6803      	ldr	r3, [r0, #0]
 800bc76:	68db      	ldr	r3, [r3, #12]
 800bc78:	4798      	blx	r3
 800bc7a:	f008 0303 	and.w	r3, r8, #3
 800bc7e:	3301      	adds	r3, #1
 800bc80:	f884 30b1 	strb.w	r3, [r4, #177]	; 0xb1
 800bc84:	1c7b      	adds	r3, r7, #1
 800bc86:	b2ff      	uxtb	r7, r7
 800bc88:	f884 50b2 	strb.w	r5, [r4, #178]	; 0xb2
 800bc8c:	f884 50b3 	strb.w	r5, [r4, #179]	; 0xb3
 800bc90:	f884 50b4 	strb.w	r5, [r4, #180]	; 0xb4
 800bc94:	f884 50b5 	strb.w	r5, [r4, #181]	; 0xb5
 800bc98:	f884 50b6 	strb.w	r5, [r4, #182]	; 0xb6
 800bc9c:	f884 50b7 	strb.w	r5, [r4, #183]	; 0xb7
 800bca0:	f884 30b8 	strb.w	r3, [r4, #184]	; 0xb8
 800bca4:	4427      	add	r7, r4
 800bca6:	f897 303e 	ldrb.w	r3, [r7, #62]	; 0x3e
 800bcaa:	f884 50ba 	strb.w	r5, [r4, #186]	; 0xba
 800bcae:	f884 30b9 	strb.w	r3, [r4, #185]	; 0xb9
 800bcb2:	2324      	movs	r3, #36	; 0x24
 800bcb4:	fb03 4308 	mla	r3, r3, r8, r4
 800bcb8:	f893 36ea 	ldrb.w	r3, [r3, #1770]	; 0x6ea
 800bcbc:	b2c6      	uxtb	r6, r0
 800bcbe:	6920      	ldr	r0, [r4, #16]
 800bcc0:	f884 50bc 	strb.w	r5, [r4, #188]	; 0xbc
 800bcc4:	f884 50be 	strb.w	r5, [r4, #190]	; 0xbe
 800bcc8:	f884 30bb 	strb.w	r3, [r4, #187]	; 0xbb
 800bccc:	f884 60bd 	strb.w	r6, [r4, #189]	; 0xbd
 800bcd0:	f884 60bf 	strb.w	r6, [r4, #191]	; 0xbf
 800bcd4:	6803      	ldr	r3, [r0, #0]
 800bcd6:	4641      	mov	r1, r8
 800bcd8:	f104 02c0 	add.w	r2, r4, #192	; 0xc0
 800bcdc:	691b      	ldr	r3, [r3, #16]
 800bcde:	4798      	blx	r3
 800bce0:	2206      	movs	r2, #6
 800bce2:	f641 1336 	movw	r3, #6454	; 0x1936
 800bce6:	4372      	muls	r2, r6
 800bce8:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 800bcec:	9300      	str	r3, [sp, #0]
 800bcee:	4629      	mov	r1, r5
 800bcf0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800bcf2:	7920      	ldrb	r0, [r4, #4]
 800bcf4:	321c      	adds	r2, #28
 800bcf6:	f006 fa4d 	bl	8012194 <udp_send>
 800bcfa:	b002      	add	sp, #8
 800bcfc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800bd00 <ArtNetNode::HandleTodControl()>:
 800bd00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800bd02:	4604      	mov	r4, r0
 800bd04:	4606      	mov	r6, r0
 800bd06:	2500      	movs	r5, #0
 800bd08:	f890 30b9 	ldrb.w	r3, [r0, #185]	; 0xb9
 800bd0c:	f890 70bb 	ldrb.w	r7, [r0, #187]	; 0xbb
 800bd10:	ea47 2703 	orr.w	r7, r7, r3, lsl #8
 800bd14:	f8b6 36e8 	ldrh.w	r3, [r6, #1768]	; 0x6e8
 800bd18:	42bb      	cmp	r3, r7
 800bd1a:	d125      	bne.n	800bd68 <ArtNetNode::HandleTodControl()+0x68>
 800bd1c:	f896 36ec 	ldrb.w	r3, [r6, #1772]	; 0x6ec
 800bd20:	b313      	cbz	r3, 800bd68 <ArtNetNode::HandleTodControl()+0x68>
 800bd22:	f896 3709 	ldrb.w	r3, [r6, #1801]	; 0x709
 800bd26:	b13b      	cbz	r3, 800bd38 <ArtNetNode::HandleTodControl()+0x38>
 800bd28:	f894 3672 	ldrb.w	r3, [r4, #1650]	; 0x672
 800bd2c:	b923      	cbnz	r3, 800bd38 <ArtNetNode::HandleTodControl()+0x38>
 800bd2e:	68a0      	ldr	r0, [r4, #8]
 800bd30:	4629      	mov	r1, r5
 800bd32:	6803      	ldr	r3, [r0, #0]
 800bd34:	68db      	ldr	r3, [r3, #12]
 800bd36:	4798      	blx	r3
 800bd38:	f894 30ba 	ldrb.w	r3, [r4, #186]	; 0xba
 800bd3c:	2b01      	cmp	r3, #1
 800bd3e:	d104      	bne.n	800bd4a <ArtNetNode::HandleTodControl()+0x4a>
 800bd40:	6920      	ldr	r0, [r4, #16]
 800bd42:	4629      	mov	r1, r5
 800bd44:	6803      	ldr	r3, [r0, #0]
 800bd46:	689b      	ldr	r3, [r3, #8]
 800bd48:	4798      	blx	r3
 800bd4a:	4629      	mov	r1, r5
 800bd4c:	4620      	mov	r0, r4
 800bd4e:	f7ff ff81 	bl	800bc54 <ArtNetNode::SendTod(unsigned int)>
 800bd52:	f896 3709 	ldrb.w	r3, [r6, #1801]	; 0x709
 800bd56:	b13b      	cbz	r3, 800bd68 <ArtNetNode::HandleTodControl()+0x68>
 800bd58:	f894 3672 	ldrb.w	r3, [r4, #1650]	; 0x672
 800bd5c:	b923      	cbnz	r3, 800bd68 <ArtNetNode::HandleTodControl()+0x68>
 800bd5e:	68a0      	ldr	r0, [r4, #8]
 800bd60:	4629      	mov	r1, r5
 800bd62:	6803      	ldr	r3, [r0, #0]
 800bd64:	689b      	ldr	r3, [r3, #8]
 800bd66:	4798      	blx	r3
 800bd68:	3501      	adds	r5, #1
 800bd6a:	2d04      	cmp	r5, #4
 800bd6c:	f106 0624 	add.w	r6, r6, #36	; 0x24
 800bd70:	d1d0      	bne.n	800bd14 <ArtNetNode::HandleTodControl()+0x14>
 800bd72:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800bd74 <ArtNetNode::HandleTodRequest()>:
 800bd74:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800bd76:	4604      	mov	r4, r0
 800bd78:	4606      	mov	r6, r0
 800bd7a:	2500      	movs	r5, #0
 800bd7c:	f890 30b9 	ldrb.w	r3, [r0, #185]	; 0xb9
 800bd80:	f890 70bc 	ldrb.w	r7, [r0, #188]	; 0xbc
 800bd84:	ea47 2703 	orr.w	r7, r7, r3, lsl #8
 800bd88:	f8b6 36e8 	ldrh.w	r3, [r6, #1768]	; 0x6e8
 800bd8c:	42bb      	cmp	r3, r7
 800bd8e:	d106      	bne.n	800bd9e <ArtNetNode::HandleTodRequest()+0x2a>
 800bd90:	f896 36ec 	ldrb.w	r3, [r6, #1772]	; 0x6ec
 800bd94:	b11b      	cbz	r3, 800bd9e <ArtNetNode::HandleTodRequest()+0x2a>
 800bd96:	4629      	mov	r1, r5
 800bd98:	4620      	mov	r0, r4
 800bd9a:	f7ff ff5b 	bl	800bc54 <ArtNetNode::SendTod(unsigned int)>
 800bd9e:	3501      	adds	r5, #1
 800bda0:	2d04      	cmp	r5, #4
 800bda2:	f106 0624 	add.w	r6, r6, #36	; 0x24
 800bda6:	d1ef      	bne.n	800bd88 <ArtNetNode::HandleTodRequest()+0x14>
 800bda8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0800bdac <ArtNetNode::HandleRdm()>:
 800bdac:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bdb0:	4604      	mov	r4, r0
 800bdb2:	4605      	mov	r5, r0
 800bdb4:	2600      	movs	r6, #0
 800bdb6:	f04f 0b01 	mov.w	fp, #1
 800bdba:	f890 30b9 	ldrb.w	r3, [r0, #185]	; 0xb9
 800bdbe:	f890 70bb 	ldrb.w	r7, [r0, #187]	; 0xbb
 800bdc2:	f8df a0c0 	ldr.w	sl, [pc, #192]	; 800be84 <ArtNetNode::HandleRdm()+0xd8>
 800bdc6:	f100 09a4 	add.w	r9, r0, #164	; 0xa4
 800bdca:	ea47 2703 	orr.w	r7, r7, r3, lsl #8
 800bdce:	f100 08bc 	add.w	r8, r0, #188	; 0xbc
 800bdd2:	f8b5 36e8 	ldrh.w	r3, [r5, #1768]	; 0x6e8
 800bdd6:	42bb      	cmp	r3, r7
 800bdd8:	d148      	bne.n	800be6c <ArtNetNode::HandleRdm()+0xc0>
 800bdda:	f895 36ec 	ldrb.w	r3, [r5, #1772]	; 0x6ec
 800bdde:	2b00      	cmp	r3, #0
 800bde0:	d044      	beq.n	800be6c <ArtNetNode::HandleRdm()+0xc0>
 800bde2:	f894 3672 	ldrb.w	r3, [r4, #1650]	; 0x672
 800bde6:	b9c3      	cbnz	r3, 800be1a <ArtNetNode::HandleRdm()+0x6e>
 800bde8:	f8d5 3704 	ldr.w	r3, [r5, #1796]	; 0x704
 800bdec:	2b01      	cmp	r3, #1
 800bdee:	d10c      	bne.n	800be0a <ArtNetNode::HandleRdm()+0x5e>
 800bdf0:	69e0      	ldr	r0, [r4, #28]
 800bdf2:	b150      	cbz	r0, 800be0a <ArtNetNode::HandleRdm()+0x5e>
 800bdf4:	6803      	ldr	r3, [r0, #0]
 800bdf6:	4631      	mov	r1, r6
 800bdf8:	691b      	ldr	r3, [r3, #16]
 800bdfa:	4798      	blx	r3
 800bdfc:	f010 0f89 	tst.w	r0, #137	; 0x89
 800be00:	bf14      	ite	ne
 800be02:	2301      	movne	r3, #1
 800be04:	2300      	moveq	r3, #0
 800be06:	f885 3709 	strb.w	r3, [r5, #1801]	; 0x709
 800be0a:	f895 3709 	ldrb.w	r3, [r5, #1801]	; 0x709
 800be0e:	b123      	cbz	r3, 800be1a <ArtNetNode::HandleRdm()+0x6e>
 800be10:	68a0      	ldr	r0, [r4, #8]
 800be12:	4631      	mov	r1, r6
 800be14:	6803      	ldr	r3, [r0, #0]
 800be16:	68db      	ldr	r3, [r3, #12]
 800be18:	4798      	blx	r3
 800be1a:	6920      	ldr	r0, [r4, #16]
 800be1c:	4642      	mov	r2, r8
 800be1e:	6803      	ldr	r3, [r0, #0]
 800be20:	4631      	mov	r1, r6
 800be22:	695b      	ldr	r3, [r3, #20]
 800be24:	4798      	blx	r3
 800be26:	b348      	cbz	r0, 800be7c <ArtNetNode::HandleRdm()+0xd0>
 800be28:	4641      	mov	r1, r8
 800be2a:	f884 b0b0 	strb.w	fp, [r4, #176]	; 0xb0
 800be2e:	7882      	ldrb	r2, [r0, #2]
 800be30:	3001      	adds	r0, #1
 800be32:	1c53      	adds	r3, r2, #1
 800be34:	3b01      	subs	r3, #1
 800be36:	d304      	bcc.n	800be42 <ArtNetNode::HandleRdm()+0x96>
 800be38:	f810 cb01 	ldrb.w	ip, [r0], #1
 800be3c:	f801 cb01 	strb.w	ip, [r1], #1
 800be40:	e7f8      	b.n	800be34 <ArtNetNode::HandleRdm()+0x88>
 800be42:	f641 1336 	movw	r3, #6454	; 0x1936
 800be46:	4649      	mov	r1, r9
 800be48:	9300      	str	r3, [sp, #0]
 800be4a:	7920      	ldrb	r0, [r4, #4]
 800be4c:	f8d4 3570 	ldr.w	r3, [r4, #1392]	; 0x570
 800be50:	3219      	adds	r2, #25
 800be52:	f006 f99f 	bl	8012194 <udp_send>
 800be56:	f895 3709 	ldrb.w	r3, [r5, #1801]	; 0x709
 800be5a:	b13b      	cbz	r3, 800be6c <ArtNetNode::HandleRdm()+0xc0>
 800be5c:	f894 3672 	ldrb.w	r3, [r4, #1650]	; 0x672
 800be60:	b923      	cbnz	r3, 800be6c <ArtNetNode::HandleRdm()+0xc0>
 800be62:	68a0      	ldr	r0, [r4, #8]
 800be64:	4631      	mov	r1, r6
 800be66:	6803      	ldr	r3, [r0, #0]
 800be68:	689b      	ldr	r3, [r3, #8]
 800be6a:	4798      	blx	r3
 800be6c:	3601      	adds	r6, #1
 800be6e:	2e04      	cmp	r6, #4
 800be70:	f105 0524 	add.w	r5, r5, #36	; 0x24
 800be74:	d1ad      	bne.n	800bdd2 <ArtNetNode::HandleRdm()+0x26>
 800be76:	b003      	add	sp, #12
 800be78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800be7c:	4650      	mov	r0, sl
 800be7e:	f7fd f88f 	bl	8008fa0 <printf>
 800be82:	e7e8      	b.n	800be56 <ArtNetNode::HandleRdm()+0xaa>
 800be84:	080191ba 	stmdaeq	r1, {r1, r3, r4, r5, r7, r8, ip, pc}

0800be88 <ArtNetNode::SetRdmUID(unsigned char const*, bool)>:
 800be88:	b530      	push	{r4, r5, lr}
 800be8a:	f100 039a 	add.w	r3, r0, #154	; 0x9a
 800be8e:	1d8d      	adds	r5, r1, #6
 800be90:	42a9      	cmp	r1, r5
 800be92:	d004      	beq.n	800be9e <ArtNetNode::SetRdmUID(unsigned char const*, bool)+0x16>
 800be94:	f811 4b01 	ldrb.w	r4, [r1], #1
 800be98:	f803 4b01 	strb.w	r4, [r3], #1
 800be9c:	e7f8      	b.n	800be90 <ArtNetNode::SetRdmUID(unsigned char const*, bool)+0x8>
 800be9e:	f890 3099 	ldrb.w	r3, [r0, #153]	; 0x99
 800bea2:	b122      	cbz	r2, 800beae <ArtNetNode::SetRdmUID(unsigned char const*, bool)+0x26>
 800bea4:	f043 0310 	orr.w	r3, r3, #16
 800bea8:	f880 3099 	strb.w	r3, [r0, #153]	; 0x99
 800beac:	bd30      	pop	{r4, r5, pc}
 800beae:	f003 03ef 	and.w	r3, r3, #239	; 0xef
 800beb2:	e7f9      	b.n	800bea8 <ArtNetNode::SetRdmUID(unsigned char const*, bool)+0x20>

0800beb4 <ArtNetNode::HandleSync()>:
 800beb4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800beb8:	2600      	movs	r6, #0
 800beba:	2301      	movs	r3, #1
 800bebc:	4604      	mov	r4, r0
 800bebe:	4605      	mov	r5, r0
 800bec0:	46b1      	mov	r9, r6
 800bec2:	f880 36dd 	strb.w	r3, [r0, #1757]	; 0x6dd
 800bec6:	4b1e      	ldr	r3, [pc, #120]	; (800bf40 <ArtNetNode::HandleSync()+0x8c>)
 800bec8:	4f1e      	ldr	r7, [pc, #120]	; (800bf44 <ArtNetNode::HandleSync()+0x90>)
 800beca:	681b      	ldr	r3, [r3, #0]
 800becc:	f8df 8078 	ldr.w	r8, [pc, #120]	; 800bf48 <ArtNetNode::HandleSync()+0x94>
 800bed0:	f8c0 36d4 	str.w	r3, [r0, #1748]	; 0x6d4
 800bed4:	7823      	ldrb	r3, [r4, #0]
 800bed6:	ebb6 0f83 	cmp.w	r6, r3, lsl #2
 800beda:	d22f      	bcs.n	800bf3c <ArtNetNode::HandleSync()+0x88>
 800bedc:	f8d5 3704 	ldr.w	r3, [r5, #1796]	; 0x704
 800bee0:	bb3b      	cbnz	r3, 800bf32 <ArtNetNode::HandleSync()+0x7e>
 800bee2:	f895 36ec 	ldrb.w	r3, [r5, #1772]	; 0x6ec
 800bee6:	b323      	cbz	r3, 800bf32 <ArtNetNode::HandleSync()+0x7e>
 800bee8:	f8d8 3000 	ldr.w	r3, [r8]
 800beec:	68a0      	ldr	r0, [r4, #8]
 800beee:	07da      	lsls	r2, r3, #31
 800bef0:	bf5c      	itt	pl
 800bef2:	2301      	movpl	r3, #1
 800bef4:	f8c8 3000 	strpl.w	r3, [r8]
 800bef8:	6803      	ldr	r3, [r0, #0]
 800befa:	4631      	mov	r1, r6
 800befc:	f8d3 a010 	ldr.w	sl, [r3, #16]
 800bf00:	f507 6280 	add.w	r2, r7, #1024	; 0x400
 800bf04:	f8d7 3600 	ldr.w	r3, [r7, #1536]	; 0x600
 800bf08:	47d0      	blx	sl
 800bf0a:	f895 3709 	ldrb.w	r3, [r5, #1801]	; 0x709
 800bf0e:	b93b      	cbnz	r3, 800bf20 <ArtNetNode::HandleSync()+0x6c>
 800bf10:	68a0      	ldr	r0, [r4, #8]
 800bf12:	4631      	mov	r1, r6
 800bf14:	6803      	ldr	r3, [r0, #0]
 800bf16:	689b      	ldr	r3, [r3, #8]
 800bf18:	4798      	blx	r3
 800bf1a:	2301      	movs	r3, #1
 800bf1c:	f885 3709 	strb.w	r3, [r5, #1801]	; 0x709
 800bf20:	f8d8 3000 	ldr.w	r3, [r8]
 800bf24:	f8c7 9600 	str.w	r9, [r7, #1536]	; 0x600
 800bf28:	07db      	lsls	r3, r3, #31
 800bf2a:	bf5c      	itt	pl
 800bf2c:	2301      	movpl	r3, #1
 800bf2e:	f8c8 3000 	strpl.w	r3, [r8]
 800bf32:	3601      	adds	r6, #1
 800bf34:	f207 6704 	addw	r7, r7, #1540	; 0x604
 800bf38:	3524      	adds	r5, #36	; 0x24
 800bf3a:	e7cb      	b.n	800bed4 <ArtNetNode::HandleSync()+0x20>
 800bf3c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800bf40:	20013e04 	andcs	r3, r1, r4, lsl #28
 800bf44:	2000011c 	andcs	r0, r0, ip, lsl r1
 800bf48:	20000118 	andcs	r0, r0, r8, lsl r1

0800bf4c <ArtNetNode::HandleTimeCode()>:
 800bf4c:	4601      	mov	r1, r0
 800bf4e:	68c0      	ldr	r0, [r0, #12]
 800bf50:	31b2      	adds	r1, #178	; 0xb2
 800bf52:	6803      	ldr	r3, [r0, #0]
 800bf54:	691b      	ldr	r3, [r3, #16]
 800bf56:	4718      	bx	r3

0800bf58 <ArtNetNode::HandleTimeSync()>:
 800bf58:	b500      	push	{lr}
 800bf5a:	f890 30b3 	ldrb.w	r3, [r0, #179]	; 0xb3
 800bf5e:	b08b      	sub	sp, #44	; 0x2c
 800bf60:	9301      	str	r3, [sp, #4]
 800bf62:	f890 30b4 	ldrb.w	r3, [r0, #180]	; 0xb4
 800bf66:	f890 20b8 	ldrb.w	r2, [r0, #184]	; 0xb8
 800bf6a:	9302      	str	r3, [sp, #8]
 800bf6c:	f890 30b5 	ldrb.w	r3, [r0, #181]	; 0xb5
 800bf70:	a901      	add	r1, sp, #4
 800bf72:	9303      	str	r3, [sp, #12]
 800bf74:	f890 30b6 	ldrb.w	r3, [r0, #182]	; 0xb6
 800bf78:	9304      	str	r3, [sp, #16]
 800bf7a:	f890 30b7 	ldrb.w	r3, [r0, #183]	; 0xb7
 800bf7e:	9305      	str	r3, [sp, #20]
 800bf80:	f890 30b9 	ldrb.w	r3, [r0, #185]	; 0xb9
 800bf84:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 800bf88:	9306      	str	r3, [sp, #24]
 800bf8a:	4b03      	ldr	r3, [pc, #12]	; (800bf98 <ArtNetNode::HandleTimeSync()+0x40>)
 800bf8c:	6818      	ldr	r0, [r3, #0]
 800bf8e:	f009 fd73 	bl	8015a78 <Hardware::SetTime(tm const*)>
 800bf92:	b00b      	add	sp, #44	; 0x2c
 800bf94:	f85d fb04 	ldr.w	pc, [sp], #4
 800bf98:	20013de4 	andcs	r3, r1, r4, ror #27

0800bf9c <ArtNetNode::Print()>:
 800bf9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bfa0:	4605      	mov	r5, r0
 800bfa2:	4604      	mov	r4, r0
 800bfa4:	b08b      	sub	sp, #44	; 0x2c
 800bfa6:	f815 2b44 	ldrb.w	r2, [r5], #68
 800bfaa:	2104      	movs	r1, #4
 800bfac:	4853      	ldr	r0, [pc, #332]	; (800c0fc <ArtNetNode::Print()+0x160>)
 800bfae:	f7fc fff7 	bl	8008fa0 <printf>
 800bfb2:	4b53      	ldr	r3, [pc, #332]	; (800c100 <ArtNetNode::Print()+0x164>)
 800bfb4:	4853      	ldr	r0, [pc, #332]	; (800c104 <ArtNetNode::Print()+0x168>)
 800bfb6:	7819      	ldrb	r1, [r3, #0]
 800bfb8:	785a      	ldrb	r2, [r3, #1]
 800bfba:	f7fc fff1 	bl	8008fa0 <printf>
 800bfbe:	4629      	mov	r1, r5
 800bfc0:	4851      	ldr	r0, [pc, #324]	; (800c108 <ArtNetNode::Print()+0x16c>)
 800bfc2:	f7fc ffed 	bl	8008fa0 <printf>
 800bfc6:	4851      	ldr	r0, [pc, #324]	; (800c10c <ArtNetNode::Print()+0x170>)
 800bfc8:	f104 0156 	add.w	r1, r4, #86	; 0x56
 800bfcc:	f7fc ffe8 	bl	8008fa0 <printf>
 800bfd0:	f894 36e2 	ldrb.w	r3, [r4, #1762]	; 0x6e2
 800bfd4:	2b00      	cmp	r3, #0
 800bfd6:	d044      	beq.n	800c062 <ArtNetNode::Print()+0xc6>
 800bfd8:	484d      	ldr	r0, [pc, #308]	; (800c110 <ArtNetNode::Print()+0x174>)
 800bfda:	f7fc ffe1 	bl	8008fa0 <printf>
 800bfde:	4626      	mov	r6, r4
 800bfe0:	2500      	movs	r5, #0
 800bfe2:	f8df 8130 	ldr.w	r8, [pc, #304]	; 800c114 <ArtNetNode::Print()+0x178>
 800bfe6:	f8df 9130 	ldr.w	r9, [pc, #304]	; 800c118 <ArtNetNode::Print()+0x17c>
 800bfea:	7823      	ldrb	r3, [r4, #0]
 800bfec:	ebb5 0f83 	cmp.w	r5, r3, lsl #2
 800bff0:	d237      	bcs.n	800c062 <ArtNetNode::Print()+0xc6>
 800bff2:	2301      	movs	r3, #1
 800bff4:	4629      	mov	r1, r5
 800bff6:	4620      	mov	r0, r4
 800bff8:	f10d 0225 	add.w	r2, sp, #37	; 0x25
 800bffc:	f7fe fe6e 	bl	800acdc <ArtNetNode::GetUniverseSwitch(unsigned int, unsigned char&, lightset::PortDir) const>
 800c000:	b360      	cbz	r0, 800c05c <ArtNetNode::Print()+0xc0>
 800c002:	eb04 0395 	add.w	r3, r4, r5, lsr #2
 800c006:	f893 a03e 	ldrb.w	sl, [r3, #62]	; 0x3e
 800c00a:	f893 b040 	ldrb.w	fp, [r3, #64]	; 0x40
 800c00e:	4629      	mov	r1, r5
 800c010:	2301      	movs	r3, #1
 800c012:	f10d 0226 	add.w	r2, sp, #38	; 0x26
 800c016:	4620      	mov	r0, r4
 800c018:	f7fe fe4a 	bl	800acb0 <ArtNetNode::GetPortAddress(unsigned int, unsigned short&, lightset::PortDir) const>
 800c01c:	f8d6 0700 	ldr.w	r0, [r6, #1792]	; 0x700
 800c020:	493e      	ldr	r1, [pc, #248]	; (800c11c <ArtNetNode::Print()+0x180>)
 800c022:	f89d 3025 	ldrb.w	r3, [sp, #37]	; 0x25
 800c026:	2800      	cmp	r0, #0
 800c028:	bf18      	it	ne
 800c02a:	4641      	movne	r1, r8
 800c02c:	f8bd 2026 	ldrh.w	r2, [sp, #38]	; 0x26
 800c030:	08af      	lsrs	r7, r5, #2
 800c032:	e9cd 2102 	strd	r2, r1, [sp, #8]
 800c036:	e9cd b300 	strd	fp, r3, [sp]
 800c03a:	463a      	mov	r2, r7
 800c03c:	4653      	mov	r3, sl
 800c03e:	4629      	mov	r1, r5
 800c040:	4648      	mov	r0, r9
 800c042:	f7fc ffad 	bl	8008fa0 <printf>
 800c046:	f8d6 1704 	ldr.w	r1, [r6, #1796]	; 0x704
 800c04a:	4a35      	ldr	r2, [pc, #212]	; (800c120 <ArtNetNode::Print()+0x184>)
 800c04c:	4b35      	ldr	r3, [pc, #212]	; (800c124 <ArtNetNode::Print()+0x188>)
 800c04e:	4836      	ldr	r0, [pc, #216]	; (800c128 <ArtNetNode::Print()+0x18c>)
 800c050:	2900      	cmp	r1, #0
 800c052:	bf0c      	ite	eq
 800c054:	4611      	moveq	r1, r2
 800c056:	4619      	movne	r1, r3
 800c058:	f7fc ffa2 	bl	8008fa0 <printf>
 800c05c:	3501      	adds	r5, #1
 800c05e:	3624      	adds	r6, #36	; 0x24
 800c060:	e7c3      	b.n	800bfea <ArtNetNode::Print()+0x4e>
 800c062:	f894 36e3 	ldrb.w	r3, [r4, #1763]	; 0x6e3
 800c066:	2b00      	cmp	r3, #0
 800c068:	d045      	beq.n	800c0f6 <ArtNetNode::Print()+0x15a>
 800c06a:	4830      	ldr	r0, [pc, #192]	; (800c12c <ArtNetNode::Print()+0x190>)
 800c06c:	f7fc ff98 	bl	8008fa0 <printf>
 800c070:	f04f 0b00 	mov.w	fp, #0
 800c074:	4e2e      	ldr	r6, [pc, #184]	; (800c130 <ArtNetNode::Print()+0x194>)
 800c076:	4f2f      	ldr	r7, [pc, #188]	; (800c134 <ArtNetNode::Print()+0x198>)
 800c078:	7823      	ldrb	r3, [r4, #0]
 800c07a:	ebbb 0f83 	cmp.w	fp, r3, lsl #2
 800c07e:	d23a      	bcs.n	800c0f6 <ArtNetNode::Print()+0x15a>
 800c080:	2300      	movs	r3, #0
 800c082:	4659      	mov	r1, fp
 800c084:	4620      	mov	r0, r4
 800c086:	f10d 0225 	add.w	r2, sp, #37	; 0x25
 800c08a:	f7fe fe27 	bl	800acdc <ArtNetNode::GetUniverseSwitch(unsigned int, unsigned char&, lightset::PortDir) const>
 800c08e:	b378      	cbz	r0, 800c0f0 <ArtNetNode::Print()+0x154>
 800c090:	eb04 039b 	add.w	r3, r4, fp, lsr #2
 800c094:	f893 903e 	ldrb.w	r9, [r3, #62]	; 0x3e
 800c098:	f893 a040 	ldrb.w	sl, [r3, #64]	; 0x40
 800c09c:	eb04 130b 	add.w	r3, r4, fp, lsl #4
 800c0a0:	f8d3 5810 	ldr.w	r5, [r3, #2064]	; 0x810
 800c0a4:	ea4f 089b 	mov.w	r8, fp, lsr #2
 800c0a8:	b925      	cbnz	r5, 800c0b4 <ArtNetNode::Print()+0x118>
 800c0aa:	683b      	ldr	r3, [r7, #0]
 800c0ac:	699a      	ldr	r2, [r3, #24]
 800c0ae:	691d      	ldr	r5, [r3, #16]
 800c0b0:	ea65 0502 	orn	r5, r5, r2
 800c0b4:	2300      	movs	r3, #0
 800c0b6:	4659      	mov	r1, fp
 800c0b8:	f10d 0226 	add.w	r2, sp, #38	; 0x26
 800c0bc:	4620      	mov	r0, r4
 800c0be:	f7fe fdf7 	bl	800acb0 <ArtNetNode::GetPortAddress(unsigned int, unsigned short&, lightset::PortDir) const>
 800c0c2:	0e2b      	lsrs	r3, r5, #24
 800c0c4:	9306      	str	r3, [sp, #24]
 800c0c6:	f3c5 4307 	ubfx	r3, r5, #16, #8
 800c0ca:	9305      	str	r3, [sp, #20]
 800c0cc:	f3c5 2307 	ubfx	r3, r5, #8, #8
 800c0d0:	9304      	str	r3, [sp, #16]
 800c0d2:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
 800c0d6:	b2ed      	uxtb	r5, r5
 800c0d8:	9302      	str	r3, [sp, #8]
 800c0da:	f89d 3025 	ldrb.w	r3, [sp, #37]	; 0x25
 800c0de:	4642      	mov	r2, r8
 800c0e0:	e9cd a300 	strd	sl, r3, [sp]
 800c0e4:	4659      	mov	r1, fp
 800c0e6:	464b      	mov	r3, r9
 800c0e8:	4630      	mov	r0, r6
 800c0ea:	9503      	str	r5, [sp, #12]
 800c0ec:	f7fc ff58 	bl	8008fa0 <printf>
 800c0f0:	f10b 0b01 	add.w	fp, fp, #1
 800c0f4:	e7c0      	b.n	800c078 <ArtNetNode::Print()+0xdc>
 800c0f6:	b00b      	add	sp, #44	; 0x2c
 800c0f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c0fc:	080191e0 	stmdaeq	r1, {r5, r6, r7, r8, ip, pc}
 800c100:	08019427 	stmdaeq	r1, {r0, r1, r2, r5, sl, ip, pc}
 800c104:	080191ee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, r8, ip, pc}
 800c108:	08019203 	stmdaeq	r1, {r0, r1, r9, ip, pc}
 800c10c:	08019215 	stmdaeq	r1, {r0, r2, r4, r9, ip, pc}
 800c110:	08019227 	stmdaeq	r1, {r0, r1, r2, r5, r9, ip, pc}
 800c114:	080191cf 	stmdaeq	r1, {r0, r1, r2, r3, r6, r7, r8, ip, pc}
 800c118:	08019230 	stmdaeq	r1, {r4, r5, r9, ip, pc}
 800c11c:	080191cb 	stmdaeq	r1, {r0, r1, r3, r6, r7, r8, ip, pc}
 800c120:	080191d3 	stmdaeq	r1, {r0, r1, r4, r6, r7, r8, ip, pc}
 800c124:	080191db 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, r8, ip, pc}
 800c128:	08019258 	stmdaeq	r1, {r3, r4, r6, r9, ip, pc}
 800c12c:	0801925f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r9, ip, pc}
 800c130:	08019267 	stmdaeq	r1, {r0, r1, r2, r5, r6, r9, ip, pc}
 800c134:	200136bc 			; <UNDEFINED> instruction: 0x200136bc

0800c138 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>:
 800c138:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c13a:	88c5      	ldrh	r5, [r0, #6]
 800c13c:	8886      	ldrh	r6, [r0, #4]
 800c13e:	42b5      	cmp	r5, r6
 800c140:	d216      	bcs.n	800c170 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x38>
 800c142:	4604      	mov	r4, r0
 800c144:	6800      	ldr	r0, [r0, #0]
 800c146:	4428      	add	r0, r5
 800c148:	1b75      	subs	r5, r6, r5
 800c14a:	7a26      	ldrb	r6, [r4, #8]
 800c14c:	b923      	cbnz	r3, 800c158 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x20>
 800c14e:	b926      	cbnz	r6, 800c15a <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x22>
 800c150:	9200      	str	r2, [sp, #0]
 800c152:	460b      	mov	r3, r1
 800c154:	4a09      	ldr	r2, [pc, #36]	; (800c17c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x44>)
 800c156:	e003      	b.n	800c160 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 800c158:	b166      	cbz	r6, 800c174 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x3c>
 800c15a:	460b      	mov	r3, r1
 800c15c:	9200      	str	r2, [sp, #0]
 800c15e:	4a08      	ldr	r2, [pc, #32]	; (800c180 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x48>)
 800c160:	4629      	mov	r1, r5
 800c162:	f7fc ff45 	bl	8008ff0 <snprintf>
 800c166:	4285      	cmp	r5, r0
 800c168:	bfa2      	ittt	ge
 800c16a:	88e3      	ldrhge	r3, [r4, #6]
 800c16c:	181b      	addge	r3, r3, r0
 800c16e:	80e3      	strhge	r3, [r4, #6]
 800c170:	b002      	add	sp, #8
 800c172:	bd70      	pop	{r4, r5, r6, pc}
 800c174:	9200      	str	r2, [sp, #0]
 800c176:	460b      	mov	r3, r1
 800c178:	4a02      	ldr	r2, [pc, #8]	; (800c184 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x4c>)
 800c17a:	e7f1      	b.n	800c160 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 800c17c:	08018359 	stmdaeq	r1, {r0, r3, r4, r6, r8, r9, pc}
 800c180:	08018350 	stmdaeq	r1, {r4, r6, r8, r9, pc}
 800c184:	0801835a 	stmdaeq	r1, {r1, r3, r4, r6, r8, r9, pc}

0800c188 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>:
 800c188:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c18a:	88c5      	ldrh	r5, [r0, #6]
 800c18c:	8886      	ldrh	r6, [r0, #4]
 800c18e:	42b5      	cmp	r5, r6
 800c190:	d216      	bcs.n	800c1c0 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x38>
 800c192:	4604      	mov	r4, r0
 800c194:	6800      	ldr	r0, [r0, #0]
 800c196:	4428      	add	r0, r5
 800c198:	1b75      	subs	r5, r6, r5
 800c19a:	7a26      	ldrb	r6, [r4, #8]
 800c19c:	b923      	cbnz	r3, 800c1a8 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x20>
 800c19e:	b926      	cbnz	r6, 800c1aa <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x22>
 800c1a0:	9200      	str	r2, [sp, #0]
 800c1a2:	460b      	mov	r3, r1
 800c1a4:	4a09      	ldr	r2, [pc, #36]	; (800c1cc <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x44>)
 800c1a6:	e003      	b.n	800c1b0 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800c1a8:	b166      	cbz	r6, 800c1c4 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x3c>
 800c1aa:	460b      	mov	r3, r1
 800c1ac:	9200      	str	r2, [sp, #0]
 800c1ae:	4a08      	ldr	r2, [pc, #32]	; (800c1d0 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x48>)
 800c1b0:	4629      	mov	r1, r5
 800c1b2:	f7fc ff1d 	bl	8008ff0 <snprintf>
 800c1b6:	4285      	cmp	r5, r0
 800c1b8:	bfa2      	ittt	ge
 800c1ba:	88e3      	ldrhge	r3, [r4, #6]
 800c1bc:	181b      	addge	r3, r3, r0
 800c1be:	80e3      	strhge	r3, [r4, #6]
 800c1c0:	b002      	add	sp, #8
 800c1c2:	bd70      	pop	{r4, r5, r6, pc}
 800c1c4:	9200      	str	r2, [sp, #0]
 800c1c6:	460b      	mov	r3, r1
 800c1c8:	4a02      	ldr	r2, [pc, #8]	; (800c1d4 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x4c>)
 800c1ca:	e7f1      	b.n	800c1b0 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800c1cc:	0801836c 	stmdaeq	r1, {r2, r3, r5, r6, r8, r9, pc}
 800c1d0:	08018361 	stmdaeq	r1, {r0, r5, r6, r8, r9, pc}
 800c1d4:	0801836d 	stmdaeq	r1, {r0, r2, r3, r5, r6, r8, r9, pc}

0800c1d8 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>:
 800c1d8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c1da:	460b      	mov	r3, r1
 800c1dc:	8885      	ldrh	r5, [r0, #4]
 800c1de:	88c1      	ldrh	r1, [r0, #6]
 800c1e0:	42a9      	cmp	r1, r5
 800c1e2:	d214      	bcs.n	800c20e <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x36>
 800c1e4:	4604      	mov	r4, r0
 800c1e6:	6800      	ldr	r0, [r0, #0]
 800c1e8:	1a6d      	subs	r5, r5, r1
 800c1ea:	4408      	add	r0, r1
 800c1ec:	7a21      	ldrb	r1, [r4, #8]
 800c1ee:	b91a      	cbnz	r2, 800c1f8 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x20>
 800c1f0:	b919      	cbnz	r1, 800c1fa <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x22>
 800c1f2:	4a0a      	ldr	r2, [pc, #40]	; (800c21c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x44>)
 800c1f4:	9100      	str	r1, [sp, #0]
 800c1f6:	e002      	b.n	800c1fe <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 800c1f8:	b159      	cbz	r1, 800c212 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x3a>
 800c1fa:	9200      	str	r2, [sp, #0]
 800c1fc:	4a08      	ldr	r2, [pc, #32]	; (800c220 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x48>)
 800c1fe:	4629      	mov	r1, r5
 800c200:	f7fc fef6 	bl	8008ff0 <snprintf>
 800c204:	4285      	cmp	r5, r0
 800c206:	bfa2      	ittt	ge
 800c208:	88e3      	ldrhge	r3, [r4, #6]
 800c20a:	181b      	addge	r3, r3, r0
 800c20c:	80e3      	strhge	r3, [r4, #6]
 800c20e:	b003      	add	sp, #12
 800c210:	bd30      	pop	{r4, r5, pc}
 800c212:	2201      	movs	r2, #1
 800c214:	9200      	str	r2, [sp, #0]
 800c216:	4a03      	ldr	r2, [pc, #12]	; (800c224 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x4c>)
 800c218:	e7f1      	b.n	800c1fe <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 800c21a:	bf00      	nop
 800c21c:	08018359 	stmdaeq	r1, {r0, r3, r4, r6, r8, r9, pc}
 800c220:	08018350 	stmdaeq	r1, {r4, r6, r8, r9, pc}
 800c224:	0801835a 	stmdaeq	r1, {r1, r3, r4, r6, r8, r9, pc}

0800c228 <strncpy.isra.0>:
 800c228:	1e4b      	subs	r3, r1, #1
 800c22a:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800c22e:	b909      	cbnz	r1, 800c234 <strncpy.isra.0+0xc>
 800c230:	f009 bd80 	b.w	8015d34 <memset>
 800c234:	3a01      	subs	r2, #1
 800c236:	f800 1b01 	strb.w	r1, [r0], #1
 800c23a:	d1f6      	bne.n	800c22a <strncpy.isra.0+0x2>
 800c23c:	4770      	bx	lr
	...

0800c240 <ArtNetParams::ArtNetParams(ArtNetParamsStore*)>:
 800c240:	b510      	push	{r4, lr}
 800c242:	2287      	movs	r2, #135	; 0x87
 800c244:	4604      	mov	r4, r0
 800c246:	f840 1b04 	str.w	r1, [r0], #4
 800c24a:	2100      	movs	r1, #0
 800c24c:	f009 fd72 	bl	8015d34 <memset>
 800c250:	2301      	movs	r3, #1
 800c252:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800c256:	f240 3302 	movw	r3, #770	; 0x302
 800c25a:	f8a4 306c 	strh.w	r3, [r4, #108]	; 0x6c
 800c25e:	2304      	movs	r3, #4
 800c260:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 800c264:	4b07      	ldr	r3, [pc, #28]	; (800c284 <ArtNetParams::ArtNetParams(ArtNetParamsStore*)+0x44>)
 800c266:	4620      	mov	r0, r4
 800c268:	785a      	ldrb	r2, [r3, #1]
 800c26a:	f884 2064 	strb.w	r2, [r4, #100]	; 0x64
 800c26e:	781b      	ldrb	r3, [r3, #0]
 800c270:	f884 3065 	strb.w	r3, [r4, #101]	; 0x65
 800c274:	230a      	movs	r3, #10
 800c276:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 800c27a:	23ff      	movs	r3, #255	; 0xff
 800c27c:	f884 307a 	strb.w	r3, [r4, #122]	; 0x7a
 800c280:	bd10      	pop	{r4, pc}
 800c282:	bf00      	nop
 800c284:	08019423 	stmdaeq	r1, {r0, r1, r5, sl, ip, pc}

0800c288 <ArtNetParams::Load()>:
 800c288:	b508      	push	{r3, lr}
 800c28a:	2300      	movs	r3, #0
 800c28c:	4601      	mov	r1, r0
 800c28e:	6043      	str	r3, [r0, #4]
 800c290:	f8a0 3062 	strh.w	r3, [r0, #98]	; 0x62
 800c294:	6800      	ldr	r0, [r0, #0]
 800c296:	b120      	cbz	r0, 800c2a2 <ArtNetParams::Load()+0x1a>
 800c298:	6803      	ldr	r3, [r0, #0]
 800c29a:	3104      	adds	r1, #4
 800c29c:	68db      	ldr	r3, [r3, #12]
 800c29e:	4798      	blx	r3
 800c2a0:	2001      	movs	r0, #1
 800c2a2:	bd08      	pop	{r3, pc}

0800c2a4 <ArtNetParams::Load(char const*, unsigned int)>:
 800c2a4:	6803      	ldr	r3, [r0, #0]
 800c2a6:	b1e3      	cbz	r3, 800c2e2 <ArtNetParams::Load(char const*, unsigned int)+0x3e>
 800c2a8:	2300      	movs	r3, #0
 800c2aa:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c2ac:	460d      	mov	r5, r1
 800c2ae:	4616      	mov	r6, r2
 800c2b0:	4604      	mov	r4, r0
 800c2b2:	6043      	str	r3, [r0, #4]
 800c2b4:	f8a0 3062 	strh.w	r3, [r0, #98]	; 0x62
 800c2b8:	4602      	mov	r2, r0
 800c2ba:	490a      	ldr	r1, [pc, #40]	; (800c2e4 <ArtNetParams::Load(char const*, unsigned int)+0x40>)
 800c2bc:	4668      	mov	r0, sp
 800c2be:	f008 fdd3 	bl	8014e68 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800c2c2:	4632      	mov	r2, r6
 800c2c4:	4629      	mov	r1, r5
 800c2c6:	4668      	mov	r0, sp
 800c2c8:	f008 fdd2 	bl	8014e70 <ReadConfigFile::Read(char const*, unsigned int)>
 800c2cc:	4621      	mov	r1, r4
 800c2ce:	f851 0b04 	ldr.w	r0, [r1], #4
 800c2d2:	6803      	ldr	r3, [r0, #0]
 800c2d4:	689b      	ldr	r3, [r3, #8]
 800c2d6:	4798      	blx	r3
 800c2d8:	4668      	mov	r0, sp
 800c2da:	f008 fdc8 	bl	8014e6e <ReadConfigFile::~ReadConfigFile()>
 800c2de:	b002      	add	sp, #8
 800c2e0:	bd70      	pop	{r4, r5, r6, pc}
 800c2e2:	4770      	bx	lr
 800c2e4:	0800c6ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, sl, lr, pc}

0800c2e8 <ArtNetParams::SetBool(unsigned char, unsigned int)>:
 800c2e8:	6843      	ldr	r3, [r0, #4]
 800c2ea:	b111      	cbz	r1, 800c2f2 <ArtNetParams::SetBool(unsigned char, unsigned int)+0xa>
 800c2ec:	4313      	orrs	r3, r2
 800c2ee:	6043      	str	r3, [r0, #4]
 800c2f0:	4770      	bx	lr
 800c2f2:	ea23 0302 	bic.w	r3, r3, r2
 800c2f6:	e7fa      	b.n	800c2ee <ArtNetParams::SetBool(unsigned char, unsigned int)+0x6>

0800c2f8 <ArtNetParams::callbackFunction(char const*)>:
 800c2f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c2fc:	460e      	mov	r6, r1
 800c2fe:	b0a5      	sub	sp, #148	; 0x94
 800c300:	4604      	mov	r4, r0
 800c302:	49a7      	ldr	r1, [pc, #668]	; (800c5a0 <ArtNetParams::callbackFunction(char const*)+0x2a8>)
 800c304:	4630      	mov	r0, r6
 800c306:	f10d 0205 	add.w	r2, sp, #5
 800c30a:	f008 ff13 	bl	8015134 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800c30e:	b930      	cbnz	r0, 800c31e <ArtNetParams::callbackFunction(char const*)+0x26>
 800c310:	2220      	movs	r2, #32
 800c312:	4620      	mov	r0, r4
 800c314:	f89d 1005 	ldrb.w	r1, [sp, #5]
 800c318:	f7ff ffe6 	bl	800c2e8 <ArtNetParams::SetBool(unsigned char, unsigned int)>
 800c31c:	e010      	b.n	800c340 <ArtNetParams::callbackFunction(char const*)+0x48>
 800c31e:	2311      	movs	r3, #17
 800c320:	4630      	mov	r0, r6
 800c322:	9303      	str	r3, [sp, #12]
 800c324:	499f      	ldr	r1, [pc, #636]	; (800c5a4 <ArtNetParams::callbackFunction(char const*)+0x2ac>)
 800c326:	ab03      	add	r3, sp, #12
 800c328:	f104 0210 	add.w	r2, r4, #16
 800c32c:	f008 fdd4 	bl	8014ed8 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800c330:	b948      	cbnz	r0, 800c346 <ArtNetParams::callbackFunction(char const*)+0x4e>
 800c332:	9b03      	ldr	r3, [sp, #12]
 800c334:	4423      	add	r3, r4
 800c336:	7418      	strb	r0, [r3, #16]
 800c338:	6863      	ldr	r3, [r4, #4]
 800c33a:	f043 0302 	orr.w	r3, r3, #2
 800c33e:	6063      	str	r3, [r4, #4]
 800c340:	b025      	add	sp, #148	; 0x94
 800c342:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c346:	233f      	movs	r3, #63	; 0x3f
 800c348:	4630      	mov	r0, r6
 800c34a:	9303      	str	r3, [sp, #12]
 800c34c:	4996      	ldr	r1, [pc, #600]	; (800c5a8 <ArtNetParams::callbackFunction(char const*)+0x2b0>)
 800c34e:	ab03      	add	r3, sp, #12
 800c350:	f104 0222 	add.w	r2, r4, #34	; 0x22
 800c354:	f008 fdc0 	bl	8014ed8 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800c358:	b938      	cbnz	r0, 800c36a <ArtNetParams::callbackFunction(char const*)+0x72>
 800c35a:	9b03      	ldr	r3, [sp, #12]
 800c35c:	4423      	add	r3, r4
 800c35e:	f883 0022 	strb.w	r0, [r3, #34]	; 0x22
 800c362:	6863      	ldr	r3, [r4, #4]
 800c364:	f043 0301 	orr.w	r3, r3, #1
 800c368:	e7e9      	b.n	800c33e <ArtNetParams::callbackFunction(char const*)+0x46>
 800c36a:	4630      	mov	r0, r6
 800c36c:	498f      	ldr	r1, [pc, #572]	; (800c5ac <ArtNetParams::callbackFunction(char const*)+0x2b4>)
 800c36e:	f10d 0206 	add.w	r2, sp, #6
 800c372:	f008 fe2d 	bl	8014fd0 <Sscan::HexUint16(char const*, char const*, unsigned short&)>
 800c376:	b940      	cbnz	r0, 800c38a <ArtNetParams::callbackFunction(char const*)+0x92>
 800c378:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800c37c:	ba5b      	rev16	r3, r3
 800c37e:	f8a4 3064 	strh.w	r3, [r4, #100]	; 0x64
 800c382:	6863      	ldr	r3, [r4, #4]
 800c384:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800c388:	e7d9      	b.n	800c33e <ArtNetParams::callbackFunction(char const*)+0x46>
 800c38a:	4630      	mov	r0, r6
 800c38c:	4988      	ldr	r1, [pc, #544]	; (800c5b0 <ArtNetParams::callbackFunction(char const*)+0x2b8>)
 800c38e:	f10d 0205 	add.w	r2, sp, #5
 800c392:	f008 fecf 	bl	8015134 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800c396:	b958      	cbnz	r0, 800c3b0 <ArtNetParams::callbackFunction(char const*)+0xb8>
 800c398:	f89d 2005 	ldrb.w	r2, [sp, #5]
 800c39c:	6863      	ldr	r3, [r4, #4]
 800c39e:	2a0a      	cmp	r2, #10
 800c3a0:	f884 2066 	strb.w	r2, [r4, #102]	; 0x66
 800c3a4:	bf14      	ite	ne
 800c3a6:	f443 6300 	orrne.w	r3, r3, #2048	; 0x800
 800c3aa:	f423 6300 	biceq.w	r3, r3, #2048	; 0x800
 800c3ae:	e7c6      	b.n	800c33e <ArtNetParams::callbackFunction(char const*)+0x46>
 800c3b0:	4630      	mov	r0, r6
 800c3b2:	4980      	ldr	r1, [pc, #512]	; (800c5b4 <ArtNetParams::callbackFunction(char const*)+0x2bc>)
 800c3b4:	f10d 0205 	add.w	r2, sp, #5
 800c3b8:	f008 febc 	bl	8015134 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800c3bc:	b910      	cbnz	r0, 800c3c4 <ArtNetParams::callbackFunction(char const*)+0xcc>
 800c3be:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 800c3c2:	e7a6      	b.n	800c312 <ArtNetParams::callbackFunction(char const*)+0x1a>
 800c3c4:	4630      	mov	r0, r6
 800c3c6:	497c      	ldr	r1, [pc, #496]	; (800c5b8 <ArtNetParams::callbackFunction(char const*)+0x2c0>)
 800c3c8:	f10d 0205 	add.w	r2, sp, #5
 800c3cc:	f008 feb2 	bl	8015134 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800c3d0:	b950      	cbnz	r0, 800c3e8 <ArtNetParams::callbackFunction(char const*)+0xf0>
 800c3d2:	f89d 2005 	ldrb.w	r2, [sp, #5]
 800c3d6:	6863      	ldr	r3, [r4, #4]
 800c3d8:	7222      	strb	r2, [r4, #8]
 800c3da:	b112      	cbz	r2, 800c3e2 <ArtNetParams::callbackFunction(char const*)+0xea>
 800c3dc:	f043 0304 	orr.w	r3, r3, #4
 800c3e0:	e7ad      	b.n	800c33e <ArtNetParams::callbackFunction(char const*)+0x46>
 800c3e2:	f023 0304 	bic.w	r3, r3, #4
 800c3e6:	e7aa      	b.n	800c33e <ArtNetParams::callbackFunction(char const*)+0x46>
 800c3e8:	4630      	mov	r0, r6
 800c3ea:	4974      	ldr	r1, [pc, #464]	; (800c5bc <ArtNetParams::callbackFunction(char const*)+0x2c4>)
 800c3ec:	f10d 0205 	add.w	r2, sp, #5
 800c3f0:	f008 fea0 	bl	8015134 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800c3f4:	b950      	cbnz	r0, 800c40c <ArtNetParams::callbackFunction(char const*)+0x114>
 800c3f6:	f89d 2005 	ldrb.w	r2, [sp, #5]
 800c3fa:	6863      	ldr	r3, [r4, #4]
 800c3fc:	7262      	strb	r2, [r4, #9]
 800c3fe:	b112      	cbz	r2, 800c406 <ArtNetParams::callbackFunction(char const*)+0x10e>
 800c400:	f043 0308 	orr.w	r3, r3, #8
 800c404:	e79b      	b.n	800c33e <ArtNetParams::callbackFunction(char const*)+0x46>
 800c406:	f023 0308 	bic.w	r3, r3, #8
 800c40a:	e798      	b.n	800c33e <ArtNetParams::callbackFunction(char const*)+0x46>
 800c40c:	2303      	movs	r3, #3
 800c40e:	4630      	mov	r0, r6
 800c410:	9303      	str	r3, [sp, #12]
 800c412:	496b      	ldr	r1, [pc, #428]	; (800c5c0 <ArtNetParams::callbackFunction(char const*)+0x2c8>)
 800c414:	ab03      	add	r3, sp, #12
 800c416:	aa04      	add	r2, sp, #16
 800c418:	f008 fd5e 	bl	8014ed8 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800c41c:	b9f0      	cbnz	r0, 800c45c <ArtNetParams::callbackFunction(char const*)+0x164>
 800c41e:	f89d 2010 	ldrb.w	r2, [sp, #16]
 800c422:	6863      	ldr	r3, [r4, #4]
 800c424:	f042 0220 	orr.w	r2, r2, #32
 800c428:	2a6c      	cmp	r2, #108	; 0x6c
 800c42a:	d111      	bne.n	800c450 <ArtNetParams::callbackFunction(char const*)+0x158>
 800c42c:	f89d 2011 	ldrb.w	r2, [sp, #17]
 800c430:	f042 0220 	orr.w	r2, r2, #32
 800c434:	2a74      	cmp	r2, #116	; 0x74
 800c436:	d10b      	bne.n	800c450 <ArtNetParams::callbackFunction(char const*)+0x158>
 800c438:	f89d 2012 	ldrb.w	r2, [sp, #18]
 800c43c:	f042 0220 	orr.w	r2, r2, #32
 800c440:	2a70      	cmp	r2, #112	; 0x70
 800c442:	d105      	bne.n	800c450 <ArtNetParams::callbackFunction(char const*)+0x158>
 800c444:	2201      	movs	r2, #1
 800c446:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800c44a:	f884 206f 	strb.w	r2, [r4, #111]	; 0x6f
 800c44e:	e776      	b.n	800c33e <ArtNetParams::callbackFunction(char const*)+0x46>
 800c450:	2200      	movs	r2, #0
 800c452:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
 800c456:	f884 206f 	strb.w	r2, [r4, #111]	; 0x6f
 800c45a:	e770      	b.n	800c33e <ArtNetParams::callbackFunction(char const*)+0x46>
 800c45c:	2304      	movs	r3, #4
 800c45e:	4630      	mov	r0, r6
 800c460:	9303      	str	r3, [sp, #12]
 800c462:	4958      	ldr	r1, [pc, #352]	; (800c5c4 <ArtNetParams::callbackFunction(char const*)+0x2cc>)
 800c464:	ab03      	add	r3, sp, #12
 800c466:	aa04      	add	r2, sp, #16
 800c468:	f008 fd36 	bl	8014ed8 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800c46c:	b9c0      	cbnz	r0, 800c4a0 <ArtNetParams::callbackFunction(char const*)+0x1a8>
 800c46e:	2304      	movs	r3, #4
 800c470:	4a55      	ldr	r2, [pc, #340]	; (800c5c8 <ArtNetParams::callbackFunction(char const*)+0x2d0>)
 800c472:	a904      	add	r1, sp, #16
 800c474:	3b01      	subs	r3, #1
 800c476:	d30c      	bcc.n	800c492 <ArtNetParams::callbackFunction(char const*)+0x19a>
 800c478:	f811 5b01 	ldrb.w	r5, [r1], #1
 800c47c:	f812 0b01 	ldrb.w	r0, [r2], #1
 800c480:	4285      	cmp	r5, r0
 800c482:	d0f7      	beq.n	800c474 <ArtNetParams::callbackFunction(char const*)+0x17c>
 800c484:	2200      	movs	r2, #0
 800c486:	6863      	ldr	r3, [r4, #4]
 800c488:	f884 2074 	strb.w	r2, [r4, #116]	; 0x74
 800c48c:	f423 0380 	bic.w	r3, r3, #4194304	; 0x400000
 800c490:	e755      	b.n	800c33e <ArtNetParams::callbackFunction(char const*)+0x46>
 800c492:	2301      	movs	r3, #1
 800c494:	f884 3074 	strb.w	r3, [r4, #116]	; 0x74
 800c498:	6863      	ldr	r3, [r4, #4]
 800c49a:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 800c49e:	e74e      	b.n	800c33e <ArtNetParams::callbackFunction(char const*)+0x46>
 800c4a0:	2500      	movs	r5, #0
 800c4a2:	4f4a      	ldr	r7, [pc, #296]	; (800c5cc <ArtNetParams::callbackFunction(char const*)+0x2d4>)
 800c4a4:	f8df 8128 	ldr.w	r8, [pc, #296]	; 800c5d0 <ArtNetParams::callbackFunction(char const*)+0x2d8>
 800c4a8:	f8df 9128 	ldr.w	r9, [pc, #296]	; 800c5d4 <ArtNetParams::callbackFunction(char const*)+0x2dc>
 800c4ac:	f8df a128 	ldr.w	sl, [pc, #296]	; 800c5d8 <ArtNetParams::callbackFunction(char const*)+0x2e0>
 800c4b0:	4639      	mov	r1, r7
 800c4b2:	4630      	mov	r0, r6
 800c4b4:	f10d 0205 	add.w	r2, sp, #5
 800c4b8:	f008 fe3c 	bl	8015134 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800c4bc:	b9a0      	cbnz	r0, 800c4e8 <ArtNetParams::callbackFunction(char const*)+0x1f0>
 800c4be:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800c4c2:	f89d 0005 	ldrb.w	r0, [sp, #5]
 800c4c6:	6862      	ldr	r2, [r4, #4]
 800c4c8:	280f      	cmp	r0, #15
 800c4ca:	fa03 f305 	lsl.w	r3, r3, r5
 800c4ce:	eb04 0105 	add.w	r1, r4, r5
 800c4d2:	d803      	bhi.n	800c4dc <ArtNetParams::callbackFunction(char const*)+0x1e4>
 800c4d4:	f881 006b 	strb.w	r0, [r1, #107]	; 0x6b
 800c4d8:	4313      	orrs	r3, r2
 800c4da:	e730      	b.n	800c33e <ArtNetParams::callbackFunction(char const*)+0x46>
 800c4dc:	3501      	adds	r5, #1
 800c4de:	f881 506b 	strb.w	r5, [r1, #107]	; 0x6b
 800c4e2:	ea22 0303 	bic.w	r3, r2, r3
 800c4e6:	e72a      	b.n	800c33e <ArtNetParams::callbackFunction(char const*)+0x46>
 800c4e8:	f04f 0b12 	mov.w	fp, #18
 800c4ec:	2303      	movs	r3, #3
 800c4ee:	fb0b fb05 	mul.w	fp, fp, r5
 800c4f2:	9303      	str	r3, [sp, #12]
 800c4f4:	4630      	mov	r0, r6
 800c4f6:	ab03      	add	r3, sp, #12
 800c4f8:	aa04      	add	r2, sp, #16
 800c4fa:	eb08 010b 	add.w	r1, r8, fp
 800c4fe:	f008 fceb 	bl	8014ed8 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800c502:	b9f0      	cbnz	r0, 800c542 <ArtNetParams::callbackFunction(char const*)+0x24a>
 800c504:	f44f 2380 	mov.w	r3, #262144	; 0x40000
 800c508:	f89d 1010 	ldrb.w	r1, [sp, #16]
 800c50c:	40ab      	lsls	r3, r5
 800c50e:	f041 0120 	orr.w	r1, r1, #32
 800c512:	296c      	cmp	r1, #108	; 0x6c
 800c514:	6862      	ldr	r2, [r4, #4]
 800c516:	4425      	add	r5, r4
 800c518:	d10f      	bne.n	800c53a <ArtNetParams::callbackFunction(char const*)+0x242>
 800c51a:	f89d 1011 	ldrb.w	r1, [sp, #17]
 800c51e:	f041 0120 	orr.w	r1, r1, #32
 800c522:	2974      	cmp	r1, #116	; 0x74
 800c524:	d109      	bne.n	800c53a <ArtNetParams::callbackFunction(char const*)+0x242>
 800c526:	f89d 1012 	ldrb.w	r1, [sp, #18]
 800c52a:	f041 0120 	orr.w	r1, r1, #32
 800c52e:	2970      	cmp	r1, #112	; 0x70
 800c530:	d103      	bne.n	800c53a <ArtNetParams::callbackFunction(char const*)+0x242>
 800c532:	2101      	movs	r1, #1
 800c534:	f885 1070 	strb.w	r1, [r5, #112]	; 0x70
 800c538:	e7ce      	b.n	800c4d8 <ArtNetParams::callbackFunction(char const*)+0x1e0>
 800c53a:	2100      	movs	r1, #0
 800c53c:	f885 1070 	strb.w	r1, [r5, #112]	; 0x70
 800c540:	e7cf      	b.n	800c4e2 <ArtNetParams::callbackFunction(char const*)+0x1ea>
 800c542:	2304      	movs	r3, #4
 800c544:	4630      	mov	r0, r6
 800c546:	9303      	str	r3, [sp, #12]
 800c548:	aa04      	add	r2, sp, #16
 800c54a:	ab03      	add	r3, sp, #12
 800c54c:	eb09 1105 	add.w	r1, r9, r5, lsl #4
 800c550:	f008 fcc2 	bl	8014ed8 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800c554:	2305      	movs	r3, #5
 800c556:	2800      	cmp	r0, #0
 800c558:	d140      	bne.n	800c5dc <ArtNetParams::callbackFunction(char const*)+0x2e4>
 800c55a:	4a1b      	ldr	r2, [pc, #108]	; (800c5c8 <ArtNetParams::callbackFunction(char const*)+0x2d0>)
 800c55c:	a904      	add	r1, sp, #16
 800c55e:	3b01      	subs	r3, #1
 800c560:	d012      	beq.n	800c588 <ArtNetParams::callbackFunction(char const*)+0x290>
 800c562:	f811 6b01 	ldrb.w	r6, [r1], #1
 800c566:	f812 0b01 	ldrb.w	r0, [r2], #1
 800c56a:	4286      	cmp	r6, r0
 800c56c:	d0f7      	beq.n	800c55e <ArtNetParams::callbackFunction(char const*)+0x266>
 800c56e:	2100      	movs	r1, #0
 800c570:	1962      	adds	r2, r4, r5
 800c572:	6863      	ldr	r3, [r4, #4]
 800c574:	f882 1075 	strb.w	r1, [r2, #117]	; 0x75
 800c578:	f44f 0200 	mov.w	r2, #8388608	; 0x800000
 800c57c:	fa02 f505 	lsl.w	r5, r2, r5
 800c580:	ea23 0505 	bic.w	r5, r3, r5
 800c584:	6065      	str	r5, [r4, #4]
 800c586:	e6db      	b.n	800c340 <ArtNetParams::callbackFunction(char const*)+0x48>
 800c588:	2201      	movs	r2, #1
 800c58a:	1963      	adds	r3, r4, r5
 800c58c:	f883 2075 	strb.w	r2, [r3, #117]	; 0x75
 800c590:	f44f 0300 	mov.w	r3, #8388608	; 0x800000
 800c594:	fa03 f505 	lsl.w	r5, r3, r5
 800c598:	6863      	ldr	r3, [r4, #4]
 800c59a:	432b      	orrs	r3, r5
 800c59c:	e6cf      	b.n	800c33e <ArtNetParams::callbackFunction(char const*)+0x46>
 800c59e:	bf00      	nop
 800c5a0:	080192fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r9, ip, pc}
 800c5a4:	08019369 	stmdaeq	r1, {r0, r3, r5, r6, r8, r9, ip, pc}
 800c5a8:	08019355 	stmdaeq	r1, {r0, r2, r4, r6, r8, r9, ip, pc}
 800c5ac:	0801935f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r8, r9, ip, pc}
 800c5b0:	080193ea 	stmdaeq	r1, {r1, r3, r5, r6, r7, r8, r9, ip, pc}
 800c5b4:	080193d4 	stmdaeq	r1, {r2, r4, r6, r7, r8, r9, ip, pc}
 800c5b8:	08019404 	stmdaeq	r1, {r2, sl, ip, pc}
 800c5bc:	08019408 	stmdaeq	r1, {r3, sl, ip, pc}
 800c5c0:	0801a232 	stmdaeq	r1, {r1, r4, r5, r9, sp, pc}
 800c5c4:	0801940f 	stmdaeq	r1, {r0, r1, r2, r3, sl, ip, pc}
 800c5c8:	0801929a 	stmdaeq	r1, {r1, r3, r4, r7, r9, ip, pc}
 800c5cc:	0801a24a 	stmdaeq	r1, {r1, r3, r6, r9, sp, pc}
 800c5d0:	0801a31a 	stmdaeq	r1, {r1, r3, r4, r8, r9, sp, pc}
 800c5d4:	08019315 	stmdaeq	r1, {r0, r2, r4, r8, r9, ip, pc}
 800c5d8:	0801a37d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r8, r9, sp, pc}
 800c5dc:	9303      	str	r3, [sp, #12]
 800c5de:	4630      	mov	r0, r6
 800c5e0:	ab03      	add	r3, sp, #12
 800c5e2:	aa04      	add	r2, sp, #16
 800c5e4:	eb0a 010b 	add.w	r1, sl, fp
 800c5e8:	f008 fc76 	bl	8014ed8 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800c5ec:	bb68      	cbnz	r0, 800c64a <ArtNetParams::callbackFunction(char const*)+0x352>
 800c5ee:	2301      	movs	r3, #1
 800c5f0:	f894 207a 	ldrb.w	r2, [r4, #122]	; 0x7a
 800c5f4:	40ab      	lsls	r3, r5
 800c5f6:	ea22 0303 	bic.w	r3, r2, r3
 800c5fa:	f89d 2010 	ldrb.w	r2, [sp, #16]
 800c5fe:	f884 307a 	strb.w	r3, [r4, #122]	; 0x7a
 800c602:	f042 0220 	orr.w	r2, r2, #32
 800c606:	2a69      	cmp	r2, #105	; 0x69
 800c608:	d118      	bne.n	800c63c <ArtNetParams::callbackFunction(char const*)+0x344>
 800c60a:	f89d 2011 	ldrb.w	r2, [sp, #17]
 800c60e:	f042 0220 	orr.w	r2, r2, #32
 800c612:	2a6e      	cmp	r2, #110	; 0x6e
 800c614:	d112      	bne.n	800c63c <ArtNetParams::callbackFunction(char const*)+0x344>
 800c616:	f89d 2012 	ldrb.w	r2, [sp, #18]
 800c61a:	f042 0220 	orr.w	r2, r2, #32
 800c61e:	2a70      	cmp	r2, #112	; 0x70
 800c620:	d10c      	bne.n	800c63c <ArtNetParams::callbackFunction(char const*)+0x344>
 800c622:	f89d 2013 	ldrb.w	r2, [sp, #19]
 800c626:	f042 0220 	orr.w	r2, r2, #32
 800c62a:	2a75      	cmp	r2, #117	; 0x75
 800c62c:	d106      	bne.n	800c63c <ArtNetParams::callbackFunction(char const*)+0x344>
 800c62e:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800c632:	f042 0220 	orr.w	r2, r2, #32
 800c636:	2a74      	cmp	r2, #116	; 0x74
 800c638:	f43f ae82 	beq.w	800c340 <ArtNetParams::callbackFunction(char const*)+0x48>
 800c63c:	2201      	movs	r2, #1
 800c63e:	fa02 f505 	lsl.w	r5, r2, r5
 800c642:	432b      	orrs	r3, r5
 800c644:	f884 307a 	strb.w	r3, [r4, #122]	; 0x7a
 800c648:	e67a      	b.n	800c340 <ArtNetParams::callbackFunction(char const*)+0x48>
 800c64a:	2118      	movs	r1, #24
 800c64c:	4b15      	ldr	r3, [pc, #84]	; (800c6a4 <ArtNetParams::callbackFunction(char const*)+0x3ac>)
 800c64e:	4630      	mov	r0, r6
 800c650:	fb01 3105 	mla	r1, r1, r5, r3
 800c654:	aa02      	add	r2, sp, #8
 800c656:	f008 fce6 	bl	8015026 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 800c65a:	b968      	cbnz	r0, 800c678 <ArtNetParams::callbackFunction(char const*)+0x380>
 800c65c:	9902      	ldr	r1, [sp, #8]
 800c65e:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 800c662:	f8c3 107b 	str.w	r1, [r3, #123]	; 0x7b
 800c666:	2301      	movs	r3, #1
 800c668:	40ab      	lsls	r3, r5
 800c66a:	f8b4 2062 	ldrh.w	r2, [r4, #98]	; 0x62
 800c66e:	b29b      	uxth	r3, r3
 800c670:	b1a1      	cbz	r1, 800c69c <ArtNetParams::callbackFunction(char const*)+0x3a4>
 800c672:	4313      	orrs	r3, r2
 800c674:	f8a4 3062 	strh.w	r3, [r4, #98]	; 0x62
 800c678:	3501      	adds	r5, #1
 800c67a:	2d04      	cmp	r5, #4
 800c67c:	f107 0710 	add.w	r7, r7, #16
 800c680:	f47f af16 	bne.w	800c4b0 <ArtNetParams::callbackFunction(char const*)+0x1b8>
 800c684:	4630      	mov	r0, r6
 800c686:	4908      	ldr	r1, [pc, #32]	; (800c6a8 <ArtNetParams::callbackFunction(char const*)+0x3b0>)
 800c688:	f10d 0205 	add.w	r2, sp, #5
 800c68c:	f008 fd52 	bl	8015134 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800c690:	2800      	cmp	r0, #0
 800c692:	f47f ae55 	bne.w	800c340 <ArtNetParams::callbackFunction(char const*)+0x48>
 800c696:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 800c69a:	e63a      	b.n	800c312 <ArtNetParams::callbackFunction(char const*)+0x1a>
 800c69c:	ea22 0303 	bic.w	r3, r2, r3
 800c6a0:	e7e8      	b.n	800c674 <ArtNetParams::callbackFunction(char const*)+0x37c>
 800c6a2:	bf00      	nop
 800c6a4:	08019374 	stmdaeq	r1, {r2, r4, r5, r6, r8, r9, ip, pc}
 800c6a8:	08019307 	stmdaeq	r1, {r0, r1, r2, r8, r9, ip, pc}

0800c6ac <ArtNetParams::staticCallbackFunction(void*, char const*)>:
 800c6ac:	f7ff be24 	b.w	800c2f8 <ArtNetParams::callbackFunction(char const*)>

0800c6b0 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)>:
 800c6b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c6b4:	4604      	mov	r4, r0
 800c6b6:	4615      	mov	r5, r2
 800c6b8:	461e      	mov	r6, r3
 800c6ba:	b086      	sub	sp, #24
 800c6bc:	3004      	adds	r0, #4
 800c6be:	2900      	cmp	r1, #0
 800c6c0:	f000 814b 	beq.w	800c95a <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x2aa>
 800c6c4:	2287      	movs	r2, #135	; 0x87
 800c6c6:	f009 fb1e 	bl	8015d06 <memmove>
 800c6ca:	4633      	mov	r3, r6
 800c6cc:	462a      	mov	r2, r5
 800c6ce:	49a6      	ldr	r1, [pc, #664]	; (800c968 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x2b8>)
 800c6d0:	a803      	add	r0, sp, #12
 800c6d2:	f008 faf9 	bl	8014cc8 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800c6d6:	2500      	movs	r5, #0
 800c6d8:	4ea4      	ldr	r6, [pc, #656]	; (800c96c <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x2bc>)
 800c6da:	f8df 8294 	ldr.w	r8, [pc, #660]	; 800c970 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x2c0>
 800c6de:	4fa5      	ldr	r7, [pc, #660]	; (800c974 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x2c4>)
 800c6e0:	f894 307a 	ldrb.w	r3, [r4, #122]	; 0x7a
 800c6e4:	4631      	mov	r1, r6
 800c6e6:	412b      	asrs	r3, r5
 800c6e8:	f013 0f01 	tst.w	r3, #1
 800c6ec:	ea6f 0303 	mvn.w	r3, r3
 800c6f0:	bf0c      	ite	eq
 800c6f2:	4642      	moveq	r2, r8
 800c6f4:	463a      	movne	r2, r7
 800c6f6:	f003 0301 	and.w	r3, r3, #1
 800c6fa:	a803      	add	r0, sp, #12
 800c6fc:	3501      	adds	r5, #1
 800c6fe:	f7ff fd43 	bl	800c188 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800c702:	2d04      	cmp	r5, #4
 800c704:	f106 0612 	add.w	r6, r6, #18
 800c708:	d1ea      	bne.n	800c6e0 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x30>
 800c70a:	6863      	ldr	r3, [r4, #4]
 800c70c:	7a22      	ldrb	r2, [r4, #8]
 800c70e:	499a      	ldr	r1, [pc, #616]	; (800c978 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x2c8>)
 800c710:	f3c3 0380 	ubfx	r3, r3, #2, #1
 800c714:	a803      	add	r0, sp, #12
 800c716:	f7ff fd0f 	bl	800c138 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800c71a:	6863      	ldr	r3, [r4, #4]
 800c71c:	7a62      	ldrb	r2, [r4, #9]
 800c71e:	4997      	ldr	r1, [pc, #604]	; (800c97c <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x2cc>)
 800c720:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 800c724:	a803      	add	r0, sp, #12
 800c726:	f7ff fd07 	bl	800c138 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800c72a:	4995      	ldr	r1, [pc, #596]	; (800c980 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x2d0>)
 800c72c:	a803      	add	r0, sp, #12
 800c72e:	f008 fb51 	bl	8014dd4 <PropertiesBuilder::AddComment(char const*)>
 800c732:	2500      	movs	r5, #0
 800c734:	f44f 5800 	mov.w	r8, #8192	; 0x2000
 800c738:	4e92      	ldr	r6, [pc, #584]	; (800c984 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x2d4>)
 800c73a:	f104 076b 	add.w	r7, r4, #107	; 0x6b
 800c73e:	6862      	ldr	r2, [r4, #4]
 800c740:	fa08 f305 	lsl.w	r3, r8, r5
 800c744:	4393      	bics	r3, r2
 800c746:	bf0c      	ite	eq
 800c748:	2301      	moveq	r3, #1
 800c74a:	2300      	movne	r3, #0
 800c74c:	4631      	mov	r1, r6
 800c74e:	f817 2b01 	ldrb.w	r2, [r7], #1
 800c752:	a803      	add	r0, sp, #12
 800c754:	3501      	adds	r5, #1
 800c756:	f7ff fcef 	bl	800c138 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800c75a:	2d04      	cmp	r5, #4
 800c75c:	f106 0610 	add.w	r6, r6, #16
 800c760:	d1ed      	bne.n	800c73e <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x8e>
 800c762:	4989      	ldr	r1, [pc, #548]	; (800c988 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x2d8>)
 800c764:	a803      	add	r0, sp, #12
 800c766:	f008 fb35 	bl	8014dd4 <PropertiesBuilder::AddComment(char const*)>
 800c76a:	6863      	ldr	r3, [r4, #4]
 800c76c:	f104 0622 	add.w	r6, r4, #34	; 0x22
 800c770:	f013 0501 	ands.w	r5, r3, #1
 800c774:	d108      	bne.n	800c788 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0xd8>
 800c776:	4b85      	ldr	r3, [pc, #532]	; (800c98c <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x2dc>)
 800c778:	223f      	movs	r2, #63	; 0x3f
 800c77a:	6819      	ldr	r1, [r3, #0]
 800c77c:	4630      	mov	r0, r6
 800c77e:	3156      	adds	r1, #86	; 0x56
 800c780:	f7ff fd52 	bl	800c228 <strncpy.isra.0>
 800c784:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 800c788:	6863      	ldr	r3, [r4, #4]
 800c78a:	4632      	mov	r2, r6
 800c78c:	f003 0301 	and.w	r3, r3, #1
 800c790:	497f      	ldr	r1, [pc, #508]	; (800c990 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x2e0>)
 800c792:	a803      	add	r0, sp, #12
 800c794:	f7ff fcf8 	bl	800c188 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800c798:	6863      	ldr	r3, [r4, #4]
 800c79a:	f104 0610 	add.w	r6, r4, #16
 800c79e:	f013 0502 	ands.w	r5, r3, #2
 800c7a2:	d108      	bne.n	800c7b6 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x106>
 800c7a4:	4b79      	ldr	r3, [pc, #484]	; (800c98c <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x2dc>)
 800c7a6:	2211      	movs	r2, #17
 800c7a8:	6819      	ldr	r1, [r3, #0]
 800c7aa:	4630      	mov	r0, r6
 800c7ac:	3144      	adds	r1, #68	; 0x44
 800c7ae:	f7ff fd3b 	bl	800c228 <strncpy.isra.0>
 800c7b2:	f884 5021 	strb.w	r5, [r4, #33]	; 0x21
 800c7b6:	6863      	ldr	r3, [r4, #4]
 800c7b8:	4632      	mov	r2, r6
 800c7ba:	4976      	ldr	r1, [pc, #472]	; (800c994 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x2e4>)
 800c7bc:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800c7c0:	a803      	add	r0, sp, #12
 800c7c2:	f7ff fce1 	bl	800c188 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800c7c6:	2104      	movs	r1, #4
 800c7c8:	f8b4 2064 	ldrh.w	r2, [r4, #100]	; 0x64
 800c7cc:	6863      	ldr	r3, [r4, #4]
 800c7ce:	ba52      	rev16	r2, r2
 800c7d0:	f3c3 2380 	ubfx	r3, r3, #10, #1
 800c7d4:	b292      	uxth	r2, r2
 800c7d6:	9100      	str	r1, [sp, #0]
 800c7d8:	a803      	add	r0, sp, #12
 800c7da:	496f      	ldr	r1, [pc, #444]	; (800c998 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x2e8>)
 800c7dc:	f008 fb14 	bl	8014e08 <PropertiesBuilder::AddHex(char const*, unsigned int, bool, unsigned int)>
 800c7e0:	496e      	ldr	r1, [pc, #440]	; (800c99c <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x2ec>)
 800c7e2:	a803      	add	r0, sp, #12
 800c7e4:	f008 faf6 	bl	8014dd4 <PropertiesBuilder::AddComment(char const*)>
 800c7e8:	6862      	ldr	r2, [r4, #4]
 800c7ea:	496d      	ldr	r1, [pc, #436]	; (800c9a0 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x2f0>)
 800c7ec:	f3c2 1240 	ubfx	r2, r2, #5, #1
 800c7f0:	a803      	add	r0, sp, #12
 800c7f2:	f7ff fcf1 	bl	800c1d8 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800c7f6:	f8df 91ac 	ldr.w	r9, [pc, #428]	; 800c9a4 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x2f4>
 800c7fa:	f894 206f 	ldrb.w	r2, [r4, #111]	; 0x6f
 800c7fe:	6863      	ldr	r3, [r4, #4]
 800c800:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 800c9a8 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x2f8>
 800c804:	4969      	ldr	r1, [pc, #420]	; (800c9ac <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x2fc>)
 800c806:	2a00      	cmp	r2, #0
 800c808:	bf0c      	ite	eq
 800c80a:	464a      	moveq	r2, r9
 800c80c:	4642      	movne	r2, r8
 800c80e:	f3c3 4340 	ubfx	r3, r3, #17, #1
 800c812:	a803      	add	r0, sp, #12
 800c814:	f7ff fcb8 	bl	800c188 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800c818:	f894 0074 	ldrb.w	r0, [r4, #116]	; 0x74
 800c81c:	6863      	ldr	r3, [r4, #4]
 800c81e:	4964      	ldr	r1, [pc, #400]	; (800c9b0 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x300>)
 800c820:	4a64      	ldr	r2, [pc, #400]	; (800c9b4 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x304>)
 800c822:	f3c3 5380 	ubfx	r3, r3, #22, #1
 800c826:	2800      	cmp	r0, #0
 800c828:	bf18      	it	ne
 800c82a:	460a      	movne	r2, r1
 800c82c:	4962      	ldr	r1, [pc, #392]	; (800c9b8 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x308>)
 800c82e:	a803      	add	r0, sp, #12
 800c830:	f7ff fcaa 	bl	800c188 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800c834:	2500      	movs	r5, #0
 800c836:	4e61      	ldr	r6, [pc, #388]	; (800c9bc <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x30c>)
 800c838:	f8df a184 	ldr.w	sl, [pc, #388]	; 800c9c0 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x310>
 800c83c:	f104 0770 	add.w	r7, r4, #112	; 0x70
 800c840:	f44f 2380 	mov.w	r3, #262144	; 0x40000
 800c844:	6861      	ldr	r1, [r4, #4]
 800c846:	40ab      	lsls	r3, r5
 800c848:	438b      	bics	r3, r1
 800c84a:	f04f 0112 	mov.w	r1, #18
 800c84e:	f817 2b01 	ldrb.w	r2, [r7], #1
 800c852:	bf0c      	ite	eq
 800c854:	2301      	moveq	r3, #1
 800c856:	2300      	movne	r3, #0
 800c858:	fb01 a105 	mla	r1, r1, r5, sl
 800c85c:	2a00      	cmp	r2, #0
 800c85e:	bf0c      	ite	eq
 800c860:	464a      	moveq	r2, r9
 800c862:	4642      	movne	r2, r8
 800c864:	a803      	add	r0, sp, #12
 800c866:	f7ff fc8f 	bl	800c188 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800c86a:	f44f 0300 	mov.w	r3, #8388608	; 0x800000
 800c86e:	6862      	ldr	r2, [r4, #4]
 800c870:	40ab      	lsls	r3, r5
 800c872:	4393      	bics	r3, r2
 800c874:	7938      	ldrb	r0, [r7, #4]
 800c876:	494e      	ldr	r1, [pc, #312]	; (800c9b0 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x300>)
 800c878:	4a4e      	ldr	r2, [pc, #312]	; (800c9b4 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x304>)
 800c87a:	bf0c      	ite	eq
 800c87c:	2301      	moveq	r3, #1
 800c87e:	2300      	movne	r3, #0
 800c880:	3501      	adds	r5, #1
 800c882:	2800      	cmp	r0, #0
 800c884:	bf18      	it	ne
 800c886:	460a      	movne	r2, r1
 800c888:	4631      	mov	r1, r6
 800c88a:	a803      	add	r0, sp, #12
 800c88c:	f7ff fc7c 	bl	800c188 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800c890:	2d04      	cmp	r5, #4
 800c892:	f106 0610 	add.w	r6, r6, #16
 800c896:	d1d3      	bne.n	800c840 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x190>
 800c898:	6863      	ldr	r3, [r4, #4]
 800c89a:	f894 2066 	ldrb.w	r2, [r4, #102]	; 0x66
 800c89e:	f3c3 23c0 	ubfx	r3, r3, #11, #1
 800c8a2:	4948      	ldr	r1, [pc, #288]	; (800c9c4 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x314>)
 800c8a4:	a803      	add	r0, sp, #12
 800c8a6:	f7ff fc47 	bl	800c138 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800c8aa:	6862      	ldr	r2, [r4, #4]
 800c8ac:	4946      	ldr	r1, [pc, #280]	; (800c9c8 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x318>)
 800c8ae:	f3c2 3200 	ubfx	r2, r2, #12, #1
 800c8b2:	a803      	add	r0, sp, #12
 800c8b4:	f7ff fc90 	bl	800c1d8 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800c8b8:	4944      	ldr	r1, [pc, #272]	; (800c9cc <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x31c>)
 800c8ba:	a803      	add	r0, sp, #12
 800c8bc:	f008 fa8a 	bl	8014dd4 <PropertiesBuilder::AddComment(char const*)>
 800c8c0:	2500      	movs	r5, #0
 800c8c2:	2601      	movs	r6, #1
 800c8c4:	f8df 8108 	ldr.w	r8, [pc, #264]	; 800c9d0 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x320>
 800c8c8:	4f30      	ldr	r7, [pc, #192]	; (800c98c <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x2dc>)
 800c8ca:	f8b4 2062 	ldrh.w	r2, [r4, #98]	; 0x62
 800c8ce:	fa06 f305 	lsl.w	r3, r6, r5
 800c8d2:	b29b      	uxth	r3, r3
 800c8d4:	401a      	ands	r2, r3
 800c8d6:	4293      	cmp	r3, r2
 800c8d8:	bf0c      	ite	eq
 800c8da:	2301      	moveq	r3, #1
 800c8dc:	2300      	movne	r3, #0
 800c8de:	f105 021c 	add.w	r2, r5, #28
 800c8e2:	d008      	beq.n	800c8f6 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x246>
 800c8e4:	6839      	ldr	r1, [r7, #0]
 800c8e6:	eb01 1105 	add.w	r1, r1, r5, lsl #4
 800c8ea:	f8d1 0810 	ldr.w	r0, [r1, #2064]	; 0x810
 800c8ee:	eb04 0182 	add.w	r1, r4, r2, lsl #2
 800c8f2:	f8c1 000b 	str.w	r0, [r1, #11]
 800c8f6:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 800c8fa:	4641      	mov	r1, r8
 800c8fc:	f8d2 200b 	ldr.w	r2, [r2, #11]
 800c900:	a803      	add	r0, sp, #12
 800c902:	3501      	adds	r5, #1
 800c904:	f008 fa22 	bl	8014d4c <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 800c908:	2d04      	cmp	r5, #4
 800c90a:	f108 0818 	add.w	r8, r8, #24
 800c90e:	d1dc      	bne.n	800c8ca <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x21a>
 800c910:	4930      	ldr	r1, [pc, #192]	; (800c9d4 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x324>)
 800c912:	a803      	add	r0, sp, #12
 800c914:	f008 fa5e 	bl	8014dd4 <PropertiesBuilder::AddComment(char const*)>
 800c918:	6862      	ldr	r2, [r4, #4]
 800c91a:	492f      	ldr	r1, [pc, #188]	; (800c9d8 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x328>)
 800c91c:	f3c2 62c0 	ubfx	r2, r2, #27, #1
 800c920:	a803      	add	r0, sp, #12
 800c922:	f7ff fc59 	bl	800c1d8 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800c926:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800c92a:	b17b      	cbz	r3, 800c94c <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x29c>
 800c92c:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800c930:	9b03      	ldr	r3, [sp, #12]
 800c932:	4413      	add	r3, r2
 800c934:	227d      	movs	r2, #125	; 0x7d
 800c936:	f803 2c01 	strb.w	r2, [r3, #-1]
 800c93a:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800c93e:	9903      	ldr	r1, [sp, #12]
 800c940:	54ca      	strb	r2, [r1, r3]
 800c942:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800c946:	3301      	adds	r3, #1
 800c948:	f8ad 3012 	strh.w	r3, [sp, #18]
 800c94c:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800c950:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800c952:	601a      	str	r2, [r3, #0]
 800c954:	b006      	add	sp, #24
 800c956:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c95a:	6823      	ldr	r3, [r4, #0]
 800c95c:	4601      	mov	r1, r0
 800c95e:	681a      	ldr	r2, [r3, #0]
 800c960:	4618      	mov	r0, r3
 800c962:	68d2      	ldr	r2, [r2, #12]
 800c964:	4790      	blx	r2
 800c966:	e6b0      	b.n	800c6ca <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)+0x1a>
 800c968:	08019418 	stmdaeq	r1, {r3, r4, sl, ip, pc}
 800c96c:	0801a37d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r8, r9, sp, pc}
 800c970:	0801929f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r7, r9, ip, pc}
 800c974:	080192a5 	stmdaeq	r1, {r0, r2, r5, r7, r9, ip, pc}
 800c978:	08019404 	stmdaeq	r1, {r2, sl, ip, pc}
 800c97c:	08019408 	stmdaeq	r1, {r3, sl, ip, pc}
 800c980:	080192bb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r7, r9, ip, pc}
 800c984:	0801a24a 	stmdaeq	r1, {r1, r3, r6, r9, sp, pc}
 800c988:	080192d4 	stmdaeq	r1, {r2, r4, r6, r7, r9, ip, pc}
 800c98c:	2000313c 	andcs	r3, r0, ip, lsr r1
 800c990:	08019355 	stmdaeq	r1, {r0, r2, r4, r6, r8, r9, ip, pc}
 800c994:	08019369 	stmdaeq	r1, {r0, r3, r5, r6, r8, r9, ip, pc}
 800c998:	0801935f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r8, r9, ip, pc}
 800c99c:	080192d9 	stmdaeq	r1, {r0, r3, r4, r6, r7, r9, ip, pc}
 800c9a0:	080192fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r9, ip, pc}
 800c9a4:	080192ac 	stmdaeq	r1, {r2, r3, r5, r7, r9, ip, pc}
 800c9a8:	080192b0 	stmdaeq	r1, {r4, r5, r7, r9, ip, pc}
 800c9ac:	0801a232 	stmdaeq	r1, {r1, r4, r5, r9, sp, pc}
 800c9b0:	0801929a 	stmdaeq	r1, {r1, r3, r4, r7, r9, ip, pc}
 800c9b4:	080192b4 	stmdaeq	r1, {r2, r4, r5, r7, r9, ip, pc}
 800c9b8:	0801940f 	stmdaeq	r1, {r0, r1, r2, r3, sl, ip, pc}
 800c9bc:	08019315 	stmdaeq	r1, {r0, r2, r4, r8, r9, ip, pc}
 800c9c0:	0801a31a 	stmdaeq	r1, {r1, r3, r4, r8, r9, sp, pc}
 800c9c4:	080193ea 	stmdaeq	r1, {r1, r3, r5, r6, r7, r8, r9, ip, pc}
 800c9c8:	080193d4 	stmdaeq	r1, {r2, r4, r6, r7, r8, r9, ip, pc}
 800c9cc:	080192e8 	stmdaeq	r1, {r3, r5, r6, r7, r9, ip, pc}
 800c9d0:	08019374 	stmdaeq	r1, {r2, r4, r5, r6, r8, r9, ip, pc}
 800c9d4:	080192f2 	stmdaeq	r1, {r1, r4, r5, r6, r7, r9, ip, pc}
 800c9d8:	08019307 	stmdaeq	r1, {r0, r1, r2, r8, r9, ip, pc}

0800c9dc <ArtNetParams::Save(char*, unsigned int, unsigned int&)>:
 800c9dc:	b513      	push	{r0, r1, r4, lr}
 800c9de:	6804      	ldr	r4, [r0, #0]
 800c9e0:	b914      	cbnz	r4, 800c9e8 <ArtNetParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800c9e2:	601c      	str	r4, [r3, #0]
 800c9e4:	b002      	add	sp, #8
 800c9e6:	bd10      	pop	{r4, pc}
 800c9e8:	9300      	str	r3, [sp, #0]
 800c9ea:	4613      	mov	r3, r2
 800c9ec:	460a      	mov	r2, r1
 800c9ee:	2100      	movs	r1, #0
 800c9f0:	f7ff fe5e 	bl	800c6b0 <ArtNetParams::Builder(artnetparams::Params const*, char*, unsigned int, unsigned int&)>
 800c9f4:	e7f6      	b.n	800c9e4 <ArtNetParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800c9f6 <ArtNetParams::Set(ArtNetNode*)>:
 800c9f6:	6843      	ldr	r3, [r0, #4]
 800c9f8:	2b00      	cmp	r3, #0
 800c9fa:	f000 808d 	beq.w	800cb18 <ArtNetParams::Set(ArtNetNode*)+0x122>
 800c9fe:	079a      	lsls	r2, r3, #30
 800ca00:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ca04:	4604      	mov	r4, r0
 800ca06:	460d      	mov	r5, r1
 800ca08:	d504      	bpl.n	800ca14 <ArtNetParams::Set(ArtNetNode*)+0x1e>
 800ca0a:	f100 0110 	add.w	r1, r0, #16
 800ca0e:	4628      	mov	r0, r5
 800ca10:	f7fd ff0e 	bl	800a830 <ArtNetNode::SetShortName(char const*)>
 800ca14:	6863      	ldr	r3, [r4, #4]
 800ca16:	07db      	lsls	r3, r3, #31
 800ca18:	d504      	bpl.n	800ca24 <ArtNetParams::Set(ArtNetNode*)+0x2e>
 800ca1a:	4628      	mov	r0, r5
 800ca1c:	f104 0122 	add.w	r1, r4, #34	; 0x22
 800ca20:	f7fd ff2e 	bl	800a880 <ArtNetNode::SetLongName(char const*)>
 800ca24:	6863      	ldr	r3, [r4, #4]
 800ca26:	075f      	lsls	r7, r3, #29
 800ca28:	d504      	bpl.n	800ca34 <ArtNetParams::Set(ArtNetNode*)+0x3e>
 800ca2a:	2200      	movs	r2, #0
 800ca2c:	4628      	mov	r0, r5
 800ca2e:	7a21      	ldrb	r1, [r4, #8]
 800ca30:	f7fe fa73 	bl	800af1a <ArtNetNode::SetNetSwitch(unsigned char, unsigned int)>
 800ca34:	6863      	ldr	r3, [r4, #4]
 800ca36:	071e      	lsls	r6, r3, #28
 800ca38:	d504      	bpl.n	800ca44 <ArtNetParams::Set(ArtNetNode*)+0x4e>
 800ca3a:	2200      	movs	r2, #0
 800ca3c:	4628      	mov	r0, r5
 800ca3e:	7a61      	ldrb	r1, [r4, #9]
 800ca40:	f7fe fa3d 	bl	800aebe <ArtNetNode::SetSubnetSwitch(unsigned char, unsigned int)>
 800ca44:	6863      	ldr	r3, [r4, #4]
 800ca46:	0558      	lsls	r0, r3, #21
 800ca48:	d504      	bpl.n	800ca54 <ArtNetParams::Set(ArtNetNode*)+0x5e>
 800ca4a:	4628      	mov	r0, r5
 800ca4c:	f104 0164 	add.w	r1, r4, #100	; 0x64
 800ca50:	f7fd ffe0 	bl	800aa14 <ArtNetNode::SetOemValue(unsigned char const*)>
 800ca54:	6863      	ldr	r3, [r4, #4]
 800ca56:	2600      	movs	r6, #0
 800ca58:	0519      	lsls	r1, r3, #20
 800ca5a:	bf44      	itt	mi
 800ca5c:	f44f 727a 	movmi.w	r2, #1000	; 0x3e8
 800ca60:	f894 3066 	ldrbmi.w	r3, [r4, #102]	; 0x66
 800ca64:	f44f 2880 	mov.w	r8, #262144	; 0x40000
 800ca68:	bf44      	itt	mi
 800ca6a:	4353      	mulmi	r3, r2
 800ca6c:	f8c5 36d0 	strmi.w	r3, [r5, #1744]	; 0x6d0
 800ca70:	6863      	ldr	r3, [r4, #4]
 800ca72:	f44f 0900 	mov.w	r9, #8388608	; 0x800000
 800ca76:	04da      	lsls	r2, r3, #19
 800ca78:	bf48      	it	mi
 800ca7a:	2301      	movmi	r3, #1
 800ca7c:	f04f 0a01 	mov.w	sl, #1
 800ca80:	bf48      	it	mi
 800ca82:	f885 36e0 	strbmi.w	r3, [r5, #1760]	; 0x6e0
 800ca86:	f104 0770 	add.w	r7, r4, #112	; 0x70
 800ca8a:	6863      	ldr	r3, [r4, #4]
 800ca8c:	fa08 f206 	lsl.w	r2, r8, r6
 800ca90:	ea32 0303 	bics.w	r3, r2, r3
 800ca94:	bf0c      	ite	eq
 800ca96:	783a      	ldrbeq	r2, [r7, #0]
 800ca98:	f894 206f 	ldrbne.w	r2, [r4, #111]	; 0x6f
 800ca9c:	4631      	mov	r1, r6
 800ca9e:	4628      	mov	r0, r5
 800caa0:	f7fe fa9a 	bl	800afd8 <ArtNetNode::SetMergeMode(unsigned int, lightset::MergeMode)>
 800caa4:	6863      	ldr	r3, [r4, #4]
 800caa6:	fa09 f206 	lsl.w	r2, r9, r6
 800caaa:	ea32 0303 	bics.w	r3, r2, r3
 800caae:	bf0c      	ite	eq
 800cab0:	797a      	ldrbeq	r2, [r7, #5]
 800cab2:	f894 2074 	ldrbne.w	r2, [r4, #116]	; 0x74
 800cab6:	4631      	mov	r1, r6
 800cab8:	4628      	mov	r0, r5
 800caba:	f7fe fa5c 	bl	800af76 <ArtNetNode::SetPortProtocol(unsigned int, artnet::PortProtocol)>
 800cabe:	f8b4 2062 	ldrh.w	r2, [r4, #98]	; 0x62
 800cac2:	fa0a f306 	lsl.w	r3, sl, r6
 800cac6:	b29b      	uxth	r3, r3
 800cac8:	4393      	bics	r3, r2
 800caca:	d109      	bne.n	800cae0 <ArtNetParams::Set(ArtNetNode*)+0xea>
 800cacc:	f106 031c 	add.w	r3, r6, #28
 800cad0:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 800cad4:	4631      	mov	r1, r6
 800cad6:	4628      	mov	r0, r5
 800cad8:	f8d3 200b 	ldr.w	r2, [r3, #11]
 800cadc:	f7fe fd96 	bl	800b60c <ArtNetNode::SetDestinationIp(unsigned int, unsigned int)>
 800cae0:	3601      	adds	r6, #1
 800cae2:	2e04      	cmp	r6, #4
 800cae4:	f107 0701 	add.w	r7, r7, #1
 800cae8:	d1cf      	bne.n	800ca8a <ArtNetParams::Set(ArtNetNode*)+0x94>
 800caea:	4631      	mov	r1, r6
 800caec:	4628      	mov	r0, r5
 800caee:	f894 206f 	ldrb.w	r2, [r4, #111]	; 0x6f
 800caf2:	f7fe fa71 	bl	800afd8 <ArtNetNode::SetMergeMode(unsigned int, lightset::MergeMode)>
 800caf6:	4631      	mov	r1, r6
 800caf8:	4628      	mov	r0, r5
 800cafa:	f894 2074 	ldrb.w	r2, [r4, #116]	; 0x74
 800cafe:	3601      	adds	r6, #1
 800cb00:	f7fe fa39 	bl	800af76 <ArtNetNode::SetPortProtocol(unsigned int, artnet::PortProtocol)>
 800cb04:	2e08      	cmp	r6, #8
 800cb06:	d1f0      	bne.n	800caea <ArtNetParams::Set(ArtNetNode*)+0xf4>
 800cb08:	6863      	ldr	r3, [r4, #4]
 800cb0a:	011b      	lsls	r3, r3, #4
 800cb0c:	bf44      	itt	mi
 800cb0e:	2301      	movmi	r3, #1
 800cb10:	f885 30a0 	strbmi.w	r3, [r5, #160]	; 0xa0
 800cb14:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800cb18:	4770      	bx	lr

0800cb1a <ArtNetParams::Dump()>:
 800cb1a:	4770      	bx	lr

0800cb1c <ArtNetNode::HandleTrigger()>:
 800cb1c:	f890 30b2 	ldrb.w	r3, [r0, #178]	; 0xb2
 800cb20:	4601      	mov	r1, r0
 800cb22:	2bff      	cmp	r3, #255	; 0xff
 800cb24:	d103      	bne.n	800cb2e <ArtNetNode::HandleTrigger()+0x12>
 800cb26:	f890 20b3 	ldrb.w	r2, [r0, #179]	; 0xb3
 800cb2a:	2aff      	cmp	r2, #255	; 0xff
 800cb2c:	d009      	beq.n	800cb42 <ArtNetNode::HandleTrigger()+0x26>
 800cb2e:	f891 2042 	ldrb.w	r2, [r1, #66]	; 0x42
 800cb32:	429a      	cmp	r2, r3
 800cb34:	d10a      	bne.n	800cb4c <ArtNetNode::HandleTrigger()+0x30>
 800cb36:	f891 20b3 	ldrb.w	r2, [r1, #179]	; 0xb3
 800cb3a:	f891 3043 	ldrb.w	r3, [r1, #67]	; 0x43
 800cb3e:	429a      	cmp	r2, r3
 800cb40:	d104      	bne.n	800cb4c <ArtNetNode::HandleTrigger()+0x30>
 800cb42:	6988      	ldr	r0, [r1, #24]
 800cb44:	31b4      	adds	r1, #180	; 0xb4
 800cb46:	6803      	ldr	r3, [r0, #0]
 800cb48:	689b      	ldr	r3, [r3, #8]
 800cb4a:	4718      	bx	r3
 800cb4c:	4770      	bx	lr
	...

0800cb50 <e131::universe_to_multicast_ip(unsigned short)>:
 800cb50:	b513      	push	{r0, r1, r4, lr}
 800cb52:	4604      	mov	r4, r0
 800cb54:	a901      	add	r1, sp, #4
 800cb56:	4806      	ldr	r0, [pc, #24]	; (800cb70 <e131::universe_to_multicast_ip(unsigned short)+0x20>)
 800cb58:	f009 f81a 	bl	8015b90 <inet_aton>
 800cb5c:	9801      	ldr	r0, [sp, #4]
 800cb5e:	ea40 6004 	orr.w	r0, r0, r4, lsl #24
 800cb62:	0224      	lsls	r4, r4, #8
 800cb64:	f404 047f 	and.w	r4, r4, #16711680	; 0xff0000
 800cb68:	4320      	orrs	r0, r4
 800cb6a:	b002      	add	sp, #8
 800cb6c:	bd10      	pop	{r4, pc}
 800cb6e:	bf00      	nop
 800cb70:	08019429 	stmdaeq	r1, {r0, r3, r5, sl, ip, pc}

0800cb74 <memset.constprop.0.isra.0>:
 800cb74:	2300      	movs	r3, #0
 800cb76:	4401      	add	r1, r0
 800cb78:	4288      	cmp	r0, r1
 800cb7a:	d002      	beq.n	800cb82 <memset.constprop.0.isra.0+0xe>
 800cb7c:	f800 3b01 	strb.w	r3, [r0], #1
 800cb80:	e7fa      	b.n	800cb78 <memset.constprop.0.isra.0+0x4>
 800cb82:	4770      	bx	lr

0800cb84 <memcpy.isra.0>:
 800cb84:	3801      	subs	r0, #1
 800cb86:	440a      	add	r2, r1
 800cb88:	4291      	cmp	r1, r2
 800cb8a:	d004      	beq.n	800cb96 <memcpy.isra.0+0x12>
 800cb8c:	f811 3b01 	ldrb.w	r3, [r1], #1
 800cb90:	f800 3f01 	strb.w	r3, [r0, #1]!
 800cb94:	e7f8      	b.n	800cb88 <memcpy.isra.0+0x4>
 800cb96:	4770      	bx	lr

0800cb98 <lightset::Data::IOutput(LightSet*, unsigned int) const>:
 800cb98:	f240 6304 	movw	r3, #1540	; 0x604
 800cb9c:	b470      	push	{r4, r5, r6}
 800cb9e:	4605      	mov	r5, r0
 800cba0:	4608      	mov	r0, r1
 800cba2:	4353      	muls	r3, r2
 800cba4:	4611      	mov	r1, r2
 800cba6:	f503 6480 	add.w	r4, r3, #1024	; 0x400
 800cbaa:	18ea      	adds	r2, r5, r3
 800cbac:	6803      	ldr	r3, [r0, #0]
 800cbae:	691e      	ldr	r6, [r3, #16]
 800cbb0:	f8d2 3600 	ldr.w	r3, [r2, #1536]	; 0x600
 800cbb4:	46b4      	mov	ip, r6
 800cbb6:	192a      	adds	r2, r5, r4
 800cbb8:	bc70      	pop	{r4, r5, r6}
 800cbba:	4760      	bx	ip

0800cbbc <E131Bridge::Start()>:
 800cbbc:	6943      	ldr	r3, [r0, #20]
 800cbbe:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800cbc0:	4604      	mov	r4, r0
 800cbc2:	b35b      	cbz	r3, 800cc1c <E131Bridge::Start()+0x60>
 800cbc4:	6983      	ldr	r3, [r0, #24]
 800cbc6:	b9cb      	cbnz	r3, 800cbfc <E131Bridge::Start()+0x40>
 800cbc8:	a901      	add	r1, sp, #4
 800cbca:	4818      	ldr	r0, [pc, #96]	; (800cc2c <E131Bridge::Start()+0x70>)
 800cbcc:	f008 ffe0 	bl	8015b90 <inet_aton>
 800cbd0:	9b01      	ldr	r3, [sp, #4]
 800cbd2:	f240 207e 	movw	r0, #638	; 0x27e
 800cbd6:	f043 4356 	orr.w	r3, r3, #3590324224	; 0xd6000000
 800cbda:	f443 037a 	orr.w	r3, r3, #16384000	; 0xfa0000
 800cbde:	6223      	str	r3, [r4, #32]
 800cbe0:	f008 ffd2 	bl	8015b88 <operator new(unsigned int)>
 800cbe4:	61a0      	str	r0, [r4, #24]
 800cbe6:	4620      	mov	r0, r4
 800cbe8:	f000 fdc6 	bl	800d778 <E131Bridge::FillDataPacket()>
 800cbec:	f44f 608f 	mov.w	r0, #1144	; 0x478
 800cbf0:	f008 ffca 	bl	8015b88 <operator new(unsigned int)>
 800cbf4:	61e0      	str	r0, [r4, #28]
 800cbf6:	4620      	mov	r0, r4
 800cbf8:	f000 fd14 	bl	800d624 <E131Bridge::FillDiscoveryPacket()>
 800cbfc:	2500      	movs	r5, #0
 800cbfe:	270c      	movs	r7, #12
 800cc00:	f204 7632 	addw	r6, r4, #1842	; 0x732
 800cc04:	fb07 f305 	mul.w	r3, r7, r5
 800cc08:	5cf3      	ldrb	r3, [r6, r3]
 800cc0a:	b123      	cbz	r3, 800cc16 <E131Bridge::Start()+0x5a>
 800cc0c:	6960      	ldr	r0, [r4, #20]
 800cc0e:	4629      	mov	r1, r5
 800cc10:	6803      	ldr	r3, [r0, #0]
 800cc12:	689b      	ldr	r3, [r3, #8]
 800cc14:	4798      	blx	r3
 800cc16:	3501      	adds	r5, #1
 800cc18:	2d08      	cmp	r5, #8
 800cc1a:	d1f3      	bne.n	800cc04 <E131Bridge::Start()+0x48>
 800cc1c:	2102      	movs	r1, #2
 800cc1e:	4b04      	ldr	r3, [pc, #16]	; (800cc30 <E131Bridge::Start()+0x74>)
 800cc20:	6818      	ldr	r0, [r3, #0]
 800cc22:	b003      	add	sp, #12
 800cc24:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800cc28:	f008 be84 	b.w	8015934 <LedBlink::SetMode(ledblink::Mode)>
 800cc2c:	08019429 	stmdaeq	r1, {r0, r3, r5, sl, ip, pc}
 800cc30:	20013de0 	andcs	r3, r1, r0, ror #27

0800cc34 <E131Bridge::Stop()>:
 800cc34:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cc38:	2500      	movs	r5, #0
 800cc3a:	2301      	movs	r3, #1
 800cc3c:	4604      	mov	r4, r0
 800cc3e:	f240 6804 	movw	r8, #1540	; 0x604
 800cc42:	462e      	mov	r6, r5
 800cc44:	f880 34f4 	strb.w	r3, [r0, #1268]	; 0x4f4
 800cc48:	f500 67aa 	add.w	r7, r0, #1360	; 0x550
 800cc4c:	6860      	ldr	r0, [r4, #4]
 800cc4e:	b118      	cbz	r0, 800cc58 <E131Bridge::Stop()+0x24>
 800cc50:	6803      	ldr	r3, [r0, #0]
 800cc52:	4629      	mov	r1, r5
 800cc54:	68db      	ldr	r3, [r3, #12]
 800cc56:	4798      	blx	r3
 800cc58:	f7fe fb38 	bl	800b2cc <lightset::Data::Get()>
 800cc5c:	2344      	movs	r3, #68	; 0x44
 800cc5e:	fb08 0005 	mla	r0, r8, r5, r0
 800cc62:	436b      	muls	r3, r5
 800cc64:	3501      	adds	r5, #1
 800cc66:	2d08      	cmp	r5, #8
 800cc68:	f8c0 6600 	str.w	r6, [r0, #1536]	; 0x600
 800cc6c:	54fe      	strb	r6, [r7, r3]
 800cc6e:	d1ed      	bne.n	800cc4c <E131Bridge::Stop()+0x18>
 800cc70:	6963      	ldr	r3, [r4, #20]
 800cc72:	b17b      	cbz	r3, 800cc94 <E131Bridge::Stop()+0x60>
 800cc74:	2500      	movs	r5, #0
 800cc76:	270c      	movs	r7, #12
 800cc78:	f204 7632 	addw	r6, r4, #1842	; 0x732
 800cc7c:	fb07 f305 	mul.w	r3, r7, r5
 800cc80:	5cf3      	ldrb	r3, [r6, r3]
 800cc82:	b123      	cbz	r3, 800cc8e <E131Bridge::Stop()+0x5a>
 800cc84:	6960      	ldr	r0, [r4, #20]
 800cc86:	4629      	mov	r1, r5
 800cc88:	6803      	ldr	r3, [r0, #0]
 800cc8a:	68db      	ldr	r3, [r3, #12]
 800cc8c:	4798      	blx	r3
 800cc8e:	3501      	adds	r5, #1
 800cc90:	2d08      	cmp	r5, #8
 800cc92:	d1f3      	bne.n	800cc7c <E131Bridge::Stop()+0x48>
 800cc94:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800cc98:	4b02      	ldr	r3, [pc, #8]	; (800cca4 <E131Bridge::Stop()+0x70>)
 800cc9a:	2100      	movs	r1, #0
 800cc9c:	6818      	ldr	r0, [r3, #0]
 800cc9e:	f008 be49 	b.w	8015934 <LedBlink::SetMode(ledblink::Mode)>
 800cca2:	bf00      	nop
 800cca4:	20013de0 	andcs	r3, r1, r0, ror #27

0800cca8 <E131Bridge::SetSourceName(char const*)>:
 800cca8:	223f      	movs	r2, #63	; 0x3f
 800ccaa:	b510      	push	{r4, lr}
 800ccac:	f100 0334 	add.w	r3, r0, #52	; 0x34
 800ccb0:	3901      	subs	r1, #1
 800ccb2:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800ccb6:	b92c      	cbnz	r4, 800ccc4 <E131Bridge::SetSourceName(char const*)+0x1c>
 800ccb8:	441a      	add	r2, r3
 800ccba:	4293      	cmp	r3, r2
 800ccbc:	d006      	beq.n	800cccc <E131Bridge::SetSourceName(char const*)+0x24>
 800ccbe:	f803 4b01 	strb.w	r4, [r3], #1
 800ccc2:	e7fa      	b.n	800ccba <E131Bridge::SetSourceName(char const*)+0x12>
 800ccc4:	3a01      	subs	r2, #1
 800ccc6:	f803 4b01 	strb.w	r4, [r3], #1
 800ccca:	d1f2      	bne.n	800ccb2 <E131Bridge::SetSourceName(char const*)+0xa>
 800cccc:	2300      	movs	r3, #0
 800ccce:	f880 3073 	strb.w	r3, [r0, #115]	; 0x73
 800ccd2:	bd10      	pop	{r4, pc}

0800ccd4 <E131Bridge::E131Bridge()>:
 800ccd4:	2300      	movs	r3, #0
 800ccd6:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800ccda:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ccdc:	e9c0 2300 	strd	r2, r3, [r0]
 800cce0:	2201      	movs	r2, #1
 800cce2:	4604      	mov	r4, r0
 800cce4:	2764      	movs	r7, #100	; 0x64
 800cce6:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800ccea:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800ccee:	e9c0 3307 	strd	r3, r3, [r0, #28]
 800ccf2:	6743      	str	r3, [r0, #116]	; 0x74
 800ccf4:	4b1e      	ldr	r3, [pc, #120]	; (800cd70 <E131Bridge::E131Bridge()+0x9c>)
 800ccf6:	7202      	strb	r2, [r0, #8]
 800ccf8:	b093      	sub	sp, #76	; 0x4c
 800ccfa:	6018      	str	r0, [r3, #0]
 800ccfc:	f500 65a2 	add.w	r5, r0, #1296	; 0x510
 800cd00:	f500 62e6 	add.w	r2, r0, #1840	; 0x730
 800cd04:	f500 66f2 	add.w	r6, r0, #1936	; 0x790
 800cd08:	4628      	mov	r0, r5
 800cd0a:	2144      	movs	r1, #68	; 0x44
 800cd0c:	f7ff ff32 	bl	800cb74 <memset.constprop.0.isra.0>
 800cd10:	4610      	mov	r0, r2
 800cd12:	210c      	movs	r1, #12
 800cd14:	f7ff ff2e 	bl	800cb74 <memset.constprop.0.isra.0>
 800cd18:	320c      	adds	r2, #12
 800cd1a:	f802 7c03 	strb.w	r7, [r2, #-3]
 800cd1e:	42b2      	cmp	r2, r6
 800cd20:	f105 0544 	add.w	r5, r5, #68	; 0x44
 800cd24:	d1f0      	bne.n	800cd08 <E131Bridge::E131Bridge()+0x34>
 800cd26:	f204 40f4 	addw	r0, r4, #1268	; 0x4f4
 800cd2a:	211c      	movs	r1, #28
 800cd2c:	f7ff ff22 	bl	800cb74 <memset.constprop.0.isra.0>
 800cd30:	2301      	movs	r3, #1
 800cd32:	4d10      	ldr	r5, [pc, #64]	; (800cd74 <E131Bridge::E131Bridge()+0xa0>)
 800cd34:	f884 350c 	strb.w	r3, [r4, #1292]	; 0x50c
 800cd38:	4a0f      	ldr	r2, [pc, #60]	; (800cd78 <E131Bridge::E131Bridge()+0xa4>)
 800cd3a:	682b      	ldr	r3, [r5, #0]
 800cd3c:	2140      	movs	r1, #64	; 0x40
 800cd3e:	331c      	adds	r3, #28
 800cd40:	9200      	str	r2, [sp, #0]
 800cd42:	a802      	add	r0, sp, #8
 800cd44:	4a0d      	ldr	r2, [pc, #52]	; (800cd7c <E131Bridge::E131Bridge()+0xa8>)
 800cd46:	f7fc f953 	bl	8008ff0 <snprintf>
 800cd4a:	4620      	mov	r0, r4
 800cd4c:	a902      	add	r1, sp, #8
 800cd4e:	f7ff ffab 	bl	800cca8 <E131Bridge::SetSourceName(char const*)>
 800cd52:	f44f 51ae 	mov.w	r1, #5568	; 0x15c0
 800cd56:	6828      	ldr	r0, [r5, #0]
 800cd58:	f005 feec 	bl	8012b34 <Network::Begin(unsigned short)>
 800cd5c:	4621      	mov	r1, r4
 800cd5e:	4b08      	ldr	r3, [pc, #32]	; (800cd80 <E131Bridge::E131Bridge()+0xac>)
 800cd60:	f841 0b24 	str.w	r0, [r1], #36
 800cd64:	6818      	ldr	r0, [r3, #0]
 800cd66:	f008 fe6b 	bl	8015a40 <Hardware::GetUuid(unsigned char*)>
 800cd6a:	4620      	mov	r0, r4
 800cd6c:	b013      	add	sp, #76	; 0x4c
 800cd6e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cd70:	2000314c 	andcs	r3, r0, ip, asr #2
 800cd74:	200136bc 			; <UNDEFINED> instruction: 0x200136bc
 800cd78:	080186b2 	stmdaeq	r1, {r1, r4, r5, r7, r9, sl, pc}
 800cd7c:	08019435 	stmdaeq	r1, {r0, r2, r4, r5, sl, ip, pc}
 800cd80:	20013de4 	andcs	r3, r1, r4, ror #27

0800cd84 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>:
 800cd84:	b570      	push	{r4, r5, r6, lr}
 800cd86:	4604      	mov	r4, r0
 800cd88:	2300      	movs	r3, #0
 800cd8a:	2544      	movs	r5, #68	; 0x44
 800cd8c:	4610      	mov	r0, r2
 800cd8e:	f504 62a2 	add.w	r2, r4, #1296	; 0x510
 800cd92:	4299      	cmp	r1, r3
 800cd94:	d004      	beq.n	800cda0 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0x1c>
 800cd96:	fb05 f603 	mul.w	r6, r5, r3
 800cd9a:	5b96      	ldrh	r6, [r2, r6]
 800cd9c:	4286      	cmp	r6, r0
 800cd9e:	d00e      	beq.n	800cdbe <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0x3a>
 800cda0:	3301      	adds	r3, #1
 800cda2:	2b08      	cmp	r3, #8
 800cda4:	d1f5      	bne.n	800cd92 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0xe>
 800cda6:	4b06      	ldr	r3, [pc, #24]	; (800cdc0 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0x3c>)
 800cda8:	6824      	ldr	r4, [r4, #0]
 800cdaa:	681d      	ldr	r5, [r3, #0]
 800cdac:	f7ff fed0 	bl	800cb50 <e131::universe_to_multicast_ip(unsigned short)>
 800cdb0:	4621      	mov	r1, r4
 800cdb2:	4602      	mov	r2, r0
 800cdb4:	4628      	mov	r0, r5
 800cdb6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cdba:	f005 becf 	b.w	8012b5c <Network::LeaveGroup(int, unsigned int)>
 800cdbe:	bd70      	pop	{r4, r5, r6, pc}
 800cdc0:	200136bc 			; <UNDEFINED> instruction: 0x200136bc

0800cdc4 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)>:
 800cdc4:	b570      	push	{r4, r5, r6, lr}
 800cdc6:	4604      	mov	r4, r0
 800cdc8:	461d      	mov	r5, r3
 800cdca:	b191      	cbz	r1, 800cdf2 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x2e>
 800cdcc:	f8b0 2506 	ldrh.w	r2, [r0, #1286]	; 0x506
 800cdd0:	f200 5606 	addw	r6, r0, #1286	; 0x506
 800cdd4:	b99a      	cbnz	r2, 800cdfe <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x3a>
 800cdd6:	4b0e      	ldr	r3, [pc, #56]	; (800ce10 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x4c>)
 800cdd8:	8035      	strh	r5, [r6, #0]
 800cdda:	4628      	mov	r0, r5
 800cddc:	6826      	ldr	r6, [r4, #0]
 800cdde:	681c      	ldr	r4, [r3, #0]
 800cde0:	f7ff feb6 	bl	800cb50 <e131::universe_to_multicast_ip(unsigned short)>
 800cde4:	4631      	mov	r1, r6
 800cde6:	4602      	mov	r2, r0
 800cde8:	4620      	mov	r0, r4
 800cdea:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cdee:	f005 beb2 	b.w	8012b56 <Network::JoinGroup(int, unsigned int)>
 800cdf2:	b15a      	cbz	r2, 800ce0c <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x48>
 800cdf4:	f8b0 2508 	ldrh.w	r2, [r0, #1288]	; 0x508
 800cdf8:	f500 66a1 	add.w	r6, r0, #1288	; 0x508
 800cdfc:	e7ea      	b.n	800cdd4 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x10>
 800cdfe:	42aa      	cmp	r2, r5
 800ce00:	d004      	beq.n	800ce0c <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x48>
 800ce02:	2108      	movs	r1, #8
 800ce04:	4620      	mov	r0, r4
 800ce06:	f7ff ffbd 	bl	800cd84 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>
 800ce0a:	e7e4      	b.n	800cdd6 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x12>
 800ce0c:	bd70      	pop	{r4, r5, r6, pc}
 800ce0e:	bf00      	nop
 800ce10:	200136bc 			; <UNDEFINED> instruction: 0x200136bc

0800ce14 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)>:
 800ce14:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ce18:	4604      	mov	r4, r0
 800ce1a:	460d      	mov	r5, r1
 800ce1c:	461e      	mov	r6, r3
 800ce1e:	bb02      	cbnz	r2, 800ce62 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x4e>
 800ce20:	2907      	cmp	r1, #7
 800ce22:	d843      	bhi.n	800ceac <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x98>
 800ce24:	230c      	movs	r3, #12
 800ce26:	fb03 0301 	mla	r3, r3, r1, r0
 800ce2a:	f893 2732 	ldrb.w	r2, [r3, #1842]	; 0x732
 800ce2e:	b12a      	cbz	r2, 800ce3c <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x28>
 800ce30:	f8b3 3730 	ldrh.w	r3, [r3, #1840]	; 0x730
 800ce34:	42b3      	cmp	r3, r6
 800ce36:	d109      	bne.n	800ce4c <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x38>
 800ce38:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ce3c:	f890 250a 	ldrb.w	r2, [r0, #1290]	; 0x50a
 800ce40:	3201      	adds	r2, #1
 800ce42:	f880 250a 	strb.w	r2, [r0, #1290]	; 0x50a
 800ce46:	2201      	movs	r2, #1
 800ce48:	f883 2732 	strb.w	r2, [r3, #1842]	; 0x732
 800ce4c:	210c      	movs	r1, #12
 800ce4e:	fb01 4405 	mla	r4, r1, r5, r4
 800ce52:	4630      	mov	r0, r6
 800ce54:	f8a4 6730 	strh.w	r6, [r4, #1840]	; 0x730
 800ce58:	f7ff fe7a 	bl	800cb50 <e131::universe_to_multicast_ip(unsigned short)>
 800ce5c:	f8c4 0734 	str.w	r0, [r4, #1844]	; 0x734
 800ce60:	e7ea      	b.n	800ce38 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 800ce62:	2a02      	cmp	r2, #2
 800ce64:	d122      	bne.n	800ceac <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x98>
 800ce66:	2907      	cmp	r1, #7
 800ce68:	d8e6      	bhi.n	800ce38 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 800ce6a:	2344      	movs	r3, #68	; 0x44
 800ce6c:	fb03 0301 	mla	r3, r3, r1, r0
 800ce70:	f893 2512 	ldrb.w	r2, [r3, #1298]	; 0x512
 800ce74:	b152      	cbz	r2, 800ce8c <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x78>
 800ce76:	2200      	movs	r2, #0
 800ce78:	f883 2512 	strb.w	r2, [r3, #1298]	; 0x512
 800ce7c:	f890 350b 	ldrb.w	r3, [r0, #1291]	; 0x50b
 800ce80:	4632      	mov	r2, r6
 800ce82:	3b01      	subs	r3, #1
 800ce84:	f880 350b 	strb.w	r3, [r0, #1291]	; 0x50b
 800ce88:	f7ff ff7c 	bl	800cd84 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>
 800ce8c:	210c      	movs	r1, #12
 800ce8e:	fb01 4505 	mla	r5, r1, r5, r4
 800ce92:	f895 3732 	ldrb.w	r3, [r5, #1842]	; 0x732
 800ce96:	2b00      	cmp	r3, #0
 800ce98:	d0ce      	beq.n	800ce38 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 800ce9a:	2300      	movs	r3, #0
 800ce9c:	f885 3732 	strb.w	r3, [r5, #1842]	; 0x732
 800cea0:	f894 350a 	ldrb.w	r3, [r4, #1290]	; 0x50a
 800cea4:	3b01      	subs	r3, #1
 800cea6:	f884 350a 	strb.w	r3, [r4, #1290]	; 0x50a
 800ceaa:	e7c5      	b.n	800ce38 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 800ceac:	2344      	movs	r3, #68	; 0x44
 800ceae:	fb03 4305 	mla	r3, r3, r5, r4
 800ceb2:	f893 2512 	ldrb.w	r2, [r3, #1298]	; 0x512
 800ceb6:	b1d2      	cbz	r2, 800ceee <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0xda>
 800ceb8:	f8b3 3510 	ldrh.w	r3, [r3, #1296]	; 0x510
 800cebc:	42b3      	cmp	r3, r6
 800cebe:	d0bb      	beq.n	800ce38 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 800cec0:	4632      	mov	r2, r6
 800cec2:	4629      	mov	r1, r5
 800cec4:	4620      	mov	r0, r4
 800cec6:	f7ff ff5d 	bl	800cd84 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>
 800ceca:	4b0d      	ldr	r3, [pc, #52]	; (800cf00 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0xec>)
 800cecc:	4630      	mov	r0, r6
 800cece:	681f      	ldr	r7, [r3, #0]
 800ced0:	f8d4 8000 	ldr.w	r8, [r4]
 800ced4:	f7ff fe3c 	bl	800cb50 <e131::universe_to_multicast_ip(unsigned short)>
 800ced8:	4641      	mov	r1, r8
 800ceda:	4602      	mov	r2, r0
 800cedc:	4638      	mov	r0, r7
 800cede:	f005 fe3a 	bl	8012b56 <Network::JoinGroup(int, unsigned int)>
 800cee2:	2144      	movs	r1, #68	; 0x44
 800cee4:	fb01 4405 	mla	r4, r1, r5, r4
 800cee8:	f8a4 6510 	strh.w	r6, [r4, #1296]	; 0x510
 800ceec:	e7a4      	b.n	800ce38 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 800ceee:	f894 250b 	ldrb.w	r2, [r4, #1291]	; 0x50b
 800cef2:	3201      	adds	r2, #1
 800cef4:	f884 250b 	strb.w	r2, [r4, #1291]	; 0x50b
 800cef8:	2201      	movs	r2, #1
 800cefa:	f883 2512 	strb.w	r2, [r3, #1298]	; 0x512
 800cefe:	e7e4      	b.n	800ceca <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0xb6>
 800cf00:	200136bc 			; <UNDEFINED> instruction: 0x200136bc

0800cf04 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>:
 800cf04:	b953      	cbnz	r3, 800cf1c <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const+0x18>
 800cf06:	2907      	cmp	r1, #7
 800cf08:	d811      	bhi.n	800cf2e <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const+0x2a>
 800cf0a:	230c      	movs	r3, #12
 800cf0c:	fb03 0001 	mla	r0, r3, r1, r0
 800cf10:	f8b0 3730 	ldrh.w	r3, [r0, #1840]	; 0x730
 800cf14:	f890 0732 	ldrb.w	r0, [r0, #1842]	; 0x732
 800cf18:	8013      	strh	r3, [r2, #0]
 800cf1a:	4770      	bx	lr
 800cf1c:	2344      	movs	r3, #68	; 0x44
 800cf1e:	fb03 0001 	mla	r0, r3, r1, r0
 800cf22:	f8b0 3510 	ldrh.w	r3, [r0, #1296]	; 0x510
 800cf26:	f890 0512 	ldrb.w	r0, [r0, #1298]	; 0x512
 800cf2a:	8013      	strh	r3, [r2, #0]
 800cf2c:	4770      	bx	lr
 800cf2e:	4618      	mov	r0, r3
 800cf30:	4770      	bx	lr

0800cf32 <E131Bridge::UpdateMergeStatus(unsigned int)>:
 800cf32:	f890 34f5 	ldrb.w	r3, [r0, #1269]	; 0x4f5
 800cf36:	b923      	cbnz	r3, 800cf42 <E131Bridge::UpdateMergeStatus(unsigned int)+0x10>
 800cf38:	2301      	movs	r3, #1
 800cf3a:	f880 34f5 	strb.w	r3, [r0, #1269]	; 0x4f5
 800cf3e:	f880 34f8 	strb.w	r3, [r0, #1272]	; 0x4f8
 800cf42:	2344      	movs	r3, #68	; 0x44
 800cf44:	fb03 0001 	mla	r0, r3, r1, r0
 800cf48:	2301      	movs	r3, #1
 800cf4a:	f880 3551 	strb.w	r3, [r0, #1361]	; 0x551
 800cf4e:	4770      	bx	lr

0800cf50 <E131Bridge::CheckMergeTimeouts(unsigned int)>:
 800cf50:	4602      	mov	r2, r0
 800cf52:	2044      	movs	r0, #68	; 0x44
 800cf54:	4348      	muls	r0, r1
 800cf56:	b570      	push	{r4, r5, r6, lr}
 800cf58:	1815      	adds	r5, r2, r0
 800cf5a:	460c      	mov	r4, r1
 800cf5c:	68d3      	ldr	r3, [r2, #12]
 800cf5e:	f8d5 1514 	ldr.w	r1, [r5, #1300]	; 0x514
 800cf62:	1a5b      	subs	r3, r3, r1
 800cf64:	f242 7110 	movw	r1, #10000	; 0x2710
 800cf68:	428b      	cmp	r3, r1
 800cf6a:	d90a      	bls.n	800cf82 <E131Bridge::CheckMergeTimeouts(unsigned int)+0x32>
 800cf6c:	2600      	movs	r6, #0
 800cf6e:	f200 501c 	addw	r0, r0, #1308	; 0x51c
 800cf72:	2110      	movs	r1, #16
 800cf74:	f8c5 6518 	str.w	r6, [r5, #1304]	; 0x518
 800cf78:	4410      	add	r0, r2
 800cf7a:	f7ff fdfb 	bl	800cb74 <memset.constprop.0.isra.0>
 800cf7e:	f885 6551 	strb.w	r6, [r5, #1361]	; 0x551
 800cf82:	2044      	movs	r0, #68	; 0x44
 800cf84:	4344      	muls	r4, r0
 800cf86:	1915      	adds	r5, r2, r4
 800cf88:	f8d5 1530 	ldr.w	r1, [r5, #1328]	; 0x530
 800cf8c:	68d3      	ldr	r3, [r2, #12]
 800cf8e:	1a5b      	subs	r3, r3, r1
 800cf90:	f242 7110 	movw	r1, #10000	; 0x2710
 800cf94:	428b      	cmp	r3, r1
 800cf96:	d90a      	bls.n	800cfae <E131Bridge::CheckMergeTimeouts(unsigned int)+0x5e>
 800cf98:	2600      	movs	r6, #0
 800cf9a:	f504 64a7 	add.w	r4, r4, #1336	; 0x538
 800cf9e:	2110      	movs	r1, #16
 800cfa0:	f8c5 6534 	str.w	r6, [r5, #1332]	; 0x534
 800cfa4:	1910      	adds	r0, r2, r4
 800cfa6:	f7ff fde5 	bl	800cb74 <memset.constprop.0.isra.0>
 800cfaa:	f885 6551 	strb.w	r6, [r5, #1361]	; 0x551
 800cfae:	4611      	mov	r1, r2
 800cfb0:	2300      	movs	r3, #0
 800cfb2:	f502 7008 	add.w	r0, r2, #544	; 0x220
 800cfb6:	f891 4551 	ldrb.w	r4, [r1, #1361]	; 0x551
 800cfba:	3144      	adds	r1, #68	; 0x44
 800cfbc:	4281      	cmp	r1, r0
 800cfbe:	ea43 0304 	orr.w	r3, r3, r4
 800cfc2:	d1f8      	bne.n	800cfb6 <E131Bridge::CheckMergeTimeouts(unsigned int)+0x66>
 800cfc4:	b923      	cbnz	r3, 800cfd0 <E131Bridge::CheckMergeTimeouts(unsigned int)+0x80>
 800cfc6:	2101      	movs	r1, #1
 800cfc8:	f882 34f5 	strb.w	r3, [r2, #1269]	; 0x4f5
 800cfcc:	f882 14f8 	strb.w	r1, [r2, #1272]	; 0x4f8
 800cfd0:	bd70      	pop	{r4, r5, r6, pc}

0800cfd2 <E131Bridge::IsPriorityTimeOut(unsigned int) const>:
 800cfd2:	2244      	movs	r2, #68	; 0x44
 800cfd4:	fb02 0101 	mla	r1, r2, r1, r0
 800cfd8:	68c3      	ldr	r3, [r0, #12]
 800cfda:	f8d1 0530 	ldr.w	r0, [r1, #1328]	; 0x530
 800cfde:	b510      	push	{r4, lr}
 800cfe0:	1a1a      	subs	r2, r3, r0
 800cfe2:	f8d1 4514 	ldr.w	r4, [r1, #1300]	; 0x514
 800cfe6:	f8d1 0534 	ldr.w	r0, [r1, #1332]	; 0x534
 800cfea:	f8d1 1518 	ldr.w	r1, [r1, #1304]	; 0x518
 800cfee:	b171      	cbz	r1, 800d00e <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x3c>
 800cff0:	1b1b      	subs	r3, r3, r4
 800cff2:	b128      	cbz	r0, 800d000 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x2e>
 800cff4:	f242 700f 	movw	r0, #9999	; 0x270f
 800cff8:	4283      	cmp	r3, r0
 800cffa:	d90d      	bls.n	800d018 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x46>
 800cffc:	4282      	cmp	r2, r0
 800cffe:	e002      	b.n	800d006 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x34>
 800d000:	f242 7010 	movw	r0, #10000	; 0x2710
 800d004:	4283      	cmp	r3, r0
 800d006:	bf94      	ite	ls
 800d008:	2000      	movls	r0, #0
 800d00a:	2001      	movhi	r0, #1
 800d00c:	bd10      	pop	{r4, pc}
 800d00e:	2800      	cmp	r0, #0
 800d010:	d0fc      	beq.n	800d00c <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x3a>
 800d012:	f242 7010 	movw	r0, #10000	; 0x2710
 800d016:	e7f1      	b.n	800cffc <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x2a>
 800d018:	2000      	movs	r0, #0
 800d01a:	e7f7      	b.n	800d00c <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x3a>

0800d01c <E131Bridge::isIpCidMatch(e131bridge::Source const*) const>:
 800d01c:	684a      	ldr	r2, [r1, #4]
 800d01e:	6f83      	ldr	r3, [r0, #120]	; 0x78
 800d020:	b510      	push	{r4, lr}
 800d022:	429a      	cmp	r2, r3
 800d024:	d10b      	bne.n	800d03e <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x22>
 800d026:	f100 0392 	add.w	r3, r0, #146	; 0x92
 800d02a:	3108      	adds	r1, #8
 800d02c:	30a2      	adds	r0, #162	; 0xa2
 800d02e:	4298      	cmp	r0, r3
 800d030:	d007      	beq.n	800d042 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x26>
 800d032:	f811 4b01 	ldrb.w	r4, [r1], #1
 800d036:	f813 2b01 	ldrb.w	r2, [r3], #1
 800d03a:	4294      	cmp	r4, r2
 800d03c:	d0f7      	beq.n	800d02e <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x12>
 800d03e:	2000      	movs	r0, #0
 800d040:	bd10      	pop	{r4, pc}
 800d042:	2001      	movs	r0, #1
 800d044:	e7fc      	b.n	800d040 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x24>
	...

0800d048 <E131Bridge::SetNetworkDataLossCondition(bool, bool)>:
 800d048:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d04c:	2301      	movs	r3, #1
 800d04e:	4605      	mov	r5, r0
 800d050:	4690      	mov	r8, r2
 800d052:	460f      	mov	r7, r1
 800d054:	f880 34f8 	strb.w	r3, [r0, #1272]	; 0x4f8
 800d058:	2900      	cmp	r1, #0
 800d05a:	d03d      	beq.n	800d0d8 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x90>
 800d05c:	2a00      	cmp	r2, #0
 800d05e:	d03b      	beq.n	800d0d8 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x90>
 800d060:	2600      	movs	r6, #0
 800d062:	f240 6804 	movw	r8, #1540	; 0x604
 800d066:	4637      	mov	r7, r6
 800d068:	f8c0 34f4 	str.w	r3, [r0, #1268]	; 0x4f4
 800d06c:	f880 350c 	strb.w	r3, [r0, #1292]	; 0x50c
 800d070:	f200 541c 	addw	r4, r0, #1308	; 0x51c
 800d074:	f894 3036 	ldrb.w	r3, [r4, #54]	; 0x36
 800d078:	b1e3      	cbz	r3, 800d0b4 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x6c>
 800d07a:	6868      	ldr	r0, [r5, #4]
 800d07c:	4631      	mov	r1, r6
 800d07e:	6803      	ldr	r3, [r0, #0]
 800d080:	68db      	ldr	r3, [r3, #12]
 800d082:	4798      	blx	r3
 800d084:	2110      	movs	r1, #16
 800d086:	4620      	mov	r0, r4
 800d088:	f844 7c04 	str.w	r7, [r4, #-4]
 800d08c:	f7ff fd72 	bl	800cb74 <memset.constprop.0.isra.0>
 800d090:	2110      	movs	r1, #16
 800d092:	f104 001c 	add.w	r0, r4, #28
 800d096:	61a7      	str	r7, [r4, #24]
 800d098:	f7ff fd6c 	bl	800cb74 <memset.constprop.0.isra.0>
 800d09c:	f7fe f916 	bl	800b2cc <lightset::Data::Get()>
 800d0a0:	fb08 0006 	mla	r0, r8, r6, r0
 800d0a4:	f8c0 7600 	str.w	r7, [r0, #1536]	; 0x600
 800d0a8:	f884 7034 	strb.w	r7, [r4, #52]	; 0x34
 800d0ac:	f884 7036 	strb.w	r7, [r4, #54]	; 0x36
 800d0b0:	f884 7035 	strb.w	r7, [r4, #53]	; 0x35
 800d0b4:	3601      	adds	r6, #1
 800d0b6:	2e08      	cmp	r6, #8
 800d0b8:	f104 0444 	add.w	r4, r4, #68	; 0x44
 800d0bc:	d1da      	bne.n	800d074 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x2c>
 800d0be:	4b25      	ldr	r3, [pc, #148]	; (800d154 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x10c>)
 800d0c0:	2102      	movs	r1, #2
 800d0c2:	6818      	ldr	r0, [r3, #0]
 800d0c4:	f008 fc36 	bl	8015934 <LedBlink::SetMode(ledblink::Mode)>
 800d0c8:	f895 350d 	ldrb.w	r3, [r5, #1293]	; 0x50d
 800d0cc:	f023 0302 	bic.w	r3, r3, #2
 800d0d0:	f885 350d 	strb.w	r3, [r5, #1293]	; 0x50d
 800d0d4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d0d8:	2600      	movs	r6, #0
 800d0da:	f240 6b04 	movw	fp, #1540	; 0x604
 800d0de:	46b1      	mov	r9, r6
 800d0e0:	f505 64a7 	add.w	r4, r5, #1336	; 0x538
 800d0e4:	7ea3      	ldrb	r3, [r4, #26]
 800d0e6:	b373      	cbz	r3, 800d146 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xfe>
 800d0e8:	b15f      	cbz	r7, 800d102 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xba>
 800d0ea:	f854 3c20 	ldr.w	r3, [r4, #-32]
 800d0ee:	b143      	cbz	r3, 800d102 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xba>
 800d0f0:	2110      	movs	r1, #16
 800d0f2:	f844 9c20 	str.w	r9, [r4, #-32]
 800d0f6:	f1a4 001c 	sub.w	r0, r4, #28
 800d0fa:	f7ff fd3b 	bl	800cb74 <memset.constprop.0.isra.0>
 800d0fe:	f884 9019 	strb.w	r9, [r4, #25]
 800d102:	f1b8 0f00 	cmp.w	r8, #0
 800d106:	d00a      	beq.n	800d11e <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xd6>
 800d108:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800d10c:	b13b      	cbz	r3, 800d11e <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xd6>
 800d10e:	2110      	movs	r1, #16
 800d110:	4620      	mov	r0, r4
 800d112:	f844 9c04 	str.w	r9, [r4, #-4]
 800d116:	f7ff fd2d 	bl	800cb74 <memset.constprop.0.isra.0>
 800d11a:	f884 9019 	strb.w	r9, [r4, #25]
 800d11e:	f895 a4f5 	ldrb.w	sl, [r5, #1269]	; 0x4f5
 800d122:	f1ba 0f00 	cmp.w	sl, #0
 800d126:	d10e      	bne.n	800d146 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xfe>
 800d128:	6868      	ldr	r0, [r5, #4]
 800d12a:	4631      	mov	r1, r6
 800d12c:	6803      	ldr	r3, [r0, #0]
 800d12e:	68db      	ldr	r3, [r3, #12]
 800d130:	4798      	blx	r3
 800d132:	f7fe f8cb 	bl	800b2cc <lightset::Data::Get()>
 800d136:	fb0b 0006 	mla	r0, fp, r6, r0
 800d13a:	f8c0 a600 	str.w	sl, [r0, #1536]	; 0x600
 800d13e:	f884 a018 	strb.w	sl, [r4, #24]
 800d142:	f884 a01a 	strb.w	sl, [r4, #26]
 800d146:	3601      	adds	r6, #1
 800d148:	2e08      	cmp	r6, #8
 800d14a:	f104 0444 	add.w	r4, r4, #68	; 0x44
 800d14e:	d1c9      	bne.n	800d0e4 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x9c>
 800d150:	e7b5      	b.n	800d0be <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x76>
 800d152:	bf00      	nop
 800d154:	20013de0 	andcs	r3, r1, r0, ror #27

0800d158 <E131Bridge::HandleDmx()>:
 800d158:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d15c:	4604      	mov	r4, r0
 800d15e:	2600      	movs	r6, #0
 800d160:	f8b0 70f7 	ldrh.w	r7, [r0, #247]	; 0xf7
 800d164:	f100 09fa 	add.w	r9, r0, #250	; 0xfa
 800d168:	ba7f      	rev16	r7, r7
 800d16a:	b2bf      	uxth	r7, r7
 800d16c:	3f01      	subs	r7, #1
 800d16e:	f200 551c 	addw	r5, r0, #1308	; 0x51c
 800d172:	f815 3c0a 	ldrb.w	r3, [r5, #-10]
 800d176:	b353      	cbz	r3, 800d1ce <E131Bridge::HandleDmx()+0x76>
 800d178:	f835 3c0c 	ldrh.w	r3, [r5, #-12]
 800d17c:	f8b4 20ed 	ldrh.w	r2, [r4, #237]	; 0xed
 800d180:	ba5b      	rev16	r3, r3
 800d182:	b29b      	uxth	r3, r3
 800d184:	429a      	cmp	r2, r3
 800d186:	d122      	bne.n	800d1ce <E131Bridge::HandleDmx()+0x76>
 800d188:	f855 3c04 	ldr.w	r3, [r5, #-4]
 800d18c:	f1a5 0108 	sub.w	r1, r5, #8
 800d190:	4620      	mov	r0, r4
 800d192:	9300      	str	r3, [sp, #0]
 800d194:	f7ff ff42 	bl	800d01c <E131Bridge::isIpCidMatch(e131bridge::Source const*) const>
 800d198:	f105 0114 	add.w	r1, r5, #20
 800d19c:	4682      	mov	sl, r0
 800d19e:	4620      	mov	r0, r4
 800d1a0:	f7ff ff3c 	bl	800d01c <E131Bridge::isIpCidMatch(e131bridge::Source const*) const>
 800d1a4:	f8d5 b018 	ldr.w	fp, [r5, #24]
 800d1a8:	4680      	mov	r8, r0
 800d1aa:	f1ba 0f00 	cmp.w	sl, #0
 800d1ae:	d016      	beq.n	800d1de <E131Bridge::HandleDmx()+0x86>
 800d1b0:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800d1b4:	7c2a      	ldrb	r2, [r5, #16]
 800d1b6:	742b      	strb	r3, [r5, #16]
 800d1b8:	3313      	adds	r3, #19
 800d1ba:	1a9b      	subs	r3, r3, r2
 800d1bc:	b2db      	uxtb	r3, r3
 800d1be:	2b13      	cmp	r3, #19
 800d1c0:	d905      	bls.n	800d1ce <E131Bridge::HandleDmx()+0x76>
 800d1c2:	f994 20ec 	ldrsb.w	r2, [r4, #236]	; 0xec
 800d1c6:	f894 30ec 	ldrb.w	r3, [r4, #236]	; 0xec
 800d1ca:	2a00      	cmp	r2, #0
 800d1cc:	da10      	bge.n	800d1f0 <E131Bridge::HandleDmx()+0x98>
 800d1ce:	3601      	adds	r6, #1
 800d1d0:	2e08      	cmp	r6, #8
 800d1d2:	f105 0544 	add.w	r5, r5, #68	; 0x44
 800d1d6:	d1cc      	bne.n	800d172 <E131Bridge::HandleDmx()+0x1a>
 800d1d8:	b003      	add	sp, #12
 800d1da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d1de:	2800      	cmp	r0, #0
 800d1e0:	d0ef      	beq.n	800d1c2 <E131Bridge::HandleDmx()+0x6a>
 800d1e2:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800d1e6:	f895 202c 	ldrb.w	r2, [r5, #44]	; 0x2c
 800d1ea:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
 800d1ee:	e7e3      	b.n	800d1b8 <E131Bridge::HandleDmx()+0x60>
 800d1f0:	065a      	lsls	r2, r3, #25
 800d1f2:	d50b      	bpl.n	800d20c <E131Bridge::HandleDmx()+0xb4>
 800d1f4:	f1ba 0f00 	cmp.w	sl, #0
 800d1f8:	d102      	bne.n	800d200 <E131Bridge::HandleDmx()+0xa8>
 800d1fa:	f1b8 0f00 	cmp.w	r8, #0
 800d1fe:	d0e6      	beq.n	800d1ce <E131Bridge::HandleDmx()+0x76>
 800d200:	4642      	mov	r2, r8
 800d202:	4651      	mov	r1, sl
 800d204:	4620      	mov	r0, r4
 800d206:	f7ff ff1f 	bl	800d048 <E131Bridge::SetNetworkDataLossCondition(bool, bool)>
 800d20a:	e7e0      	b.n	800d1ce <E131Bridge::HandleDmx()+0x76>
 800d20c:	f894 34f5 	ldrb.w	r3, [r4, #1269]	; 0x4f5
 800d210:	b133      	cbz	r3, 800d220 <E131Bridge::HandleDmx()+0xc8>
 800d212:	f894 34fa 	ldrb.w	r3, [r4, #1274]	; 0x4fa
 800d216:	b91b      	cbnz	r3, 800d220 <E131Bridge::HandleDmx()+0xc8>
 800d218:	4631      	mov	r1, r6
 800d21a:	4620      	mov	r0, r4
 800d21c:	f7ff fe98 	bl	800cf50 <E131Bridge::CheckMergeTimeouts(unsigned int)>
 800d220:	f894 30e8 	ldrb.w	r3, [r4, #232]	; 0xe8
 800d224:	f894 250c 	ldrb.w	r2, [r4, #1292]	; 0x50c
 800d228:	4293      	cmp	r3, r2
 800d22a:	d259      	bcs.n	800d2e0 <E131Bridge::HandleDmx()+0x188>
 800d22c:	4631      	mov	r1, r6
 800d22e:	4620      	mov	r0, r4
 800d230:	9301      	str	r3, [sp, #4]
 800d232:	f7ff fece 	bl	800cfd2 <E131Bridge::IsPriorityTimeOut(unsigned int) const>
 800d236:	2800      	cmp	r0, #0
 800d238:	d0c9      	beq.n	800d1ce <E131Bridge::HandleDmx()+0x76>
 800d23a:	9b01      	ldr	r3, [sp, #4]
 800d23c:	f884 350c 	strb.w	r3, [r4, #1292]	; 0x50c
 800d240:	9b00      	ldr	r3, [sp, #0]
 800d242:	2b00      	cmp	r3, #0
 800d244:	d154      	bne.n	800d2f0 <E131Bridge::HandleDmx()+0x198>
 800d246:	f1bb 0f00 	cmp.w	fp, #0
 800d24a:	d15c      	bne.n	800d306 <E131Bridge::HandleDmx()+0x1ae>
 800d24c:	6fa3      	ldr	r3, [r4, #120]	; 0x78
 800d24e:	2210      	movs	r2, #16
 800d250:	f845 3c04 	str.w	r3, [r5, #-4]
 800d254:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800d258:	4628      	mov	r0, r5
 800d25a:	742b      	strb	r3, [r5, #16]
 800d25c:	f104 0192 	add.w	r1, r4, #146	; 0x92
 800d260:	f7ff fc90 	bl	800cb84 <memcpy.isra.0>
 800d264:	68e3      	ldr	r3, [r4, #12]
 800d266:	463a      	mov	r2, r7
 800d268:	4649      	mov	r1, r9
 800d26a:	4630      	mov	r0, r6
 800d26c:	f845 3c08 	str.w	r3, [r5, #-8]
 800d270:	f7fe f838 	bl	800b2e4 <lightset::Data::SetSourceA(unsigned int, unsigned char const*, unsigned int)>
 800d274:	f894 30ec 	ldrb.w	r3, [r4, #236]	; 0xec
 800d278:	069b      	lsls	r3, r3, #26
 800d27a:	f100 80ad 	bmi.w	800d3d8 <E131Bridge::HandleDmx()+0x280>
 800d27e:	f8b4 30e9 	ldrh.w	r3, [r4, #233]	; 0xe9
 800d282:	b29a      	uxth	r2, r3
 800d284:	2a00      	cmp	r2, #0
 800d286:	f000 80ab 	beq.w	800d3e0 <E131Bridge::HandleDmx()+0x288>
 800d28a:	f894 24f7 	ldrb.w	r2, [r4, #1271]	; 0x4f7
 800d28e:	2a00      	cmp	r2, #0
 800d290:	f040 80a6 	bne.w	800d3e0 <E131Bridge::HandleDmx()+0x288>
 800d294:	ba5b      	rev16	r3, r3
 800d296:	b29b      	uxth	r3, r3
 800d298:	f1ba 0f00 	cmp.w	sl, #0
 800d29c:	f040 8099 	bne.w	800d3d2 <E131Bridge::HandleDmx()+0x27a>
 800d2a0:	f1b8 0f00 	cmp.w	r8, #0
 800d2a4:	f040 8095 	bne.w	800d3d2 <E131Bridge::HandleDmx()+0x27a>
 800d2a8:	69aa      	ldr	r2, [r5, #24]
 800d2aa:	f855 1c04 	ldr.w	r1, [r5, #-4]
 800d2ae:	3a00      	subs	r2, #0
 800d2b0:	bf18      	it	ne
 800d2b2:	2201      	movne	r2, #1
 800d2b4:	3900      	subs	r1, #0
 800d2b6:	bf18      	it	ne
 800d2b8:	2101      	movne	r1, #1
 800d2ba:	4620      	mov	r0, r4
 800d2bc:	f7ff fd82 	bl	800cdc4 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)>
 800d2c0:	f240 1301 	movw	r3, #257	; 0x101
 800d2c4:	f8a4 34f6 	strh.w	r3, [r4, #1270]	; 0x4f6
 800d2c8:	f894 34fb 	ldrb.w	r3, [r4, #1275]	; 0x4fb
 800d2cc:	2b00      	cmp	r3, #0
 800d2ce:	f040 808c 	bne.w	800d3ea <E131Bridge::HandleDmx()+0x292>
 800d2d2:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800d2d6:	f043 0302 	orr.w	r3, r3, #2
 800d2da:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 800d2de:	e776      	b.n	800d1ce <E131Bridge::HandleDmx()+0x76>
 800d2e0:	d9ae      	bls.n	800d240 <E131Bridge::HandleDmx()+0xe8>
 800d2e2:	2200      	movs	r2, #0
 800d2e4:	f845 2c04 	str.w	r2, [r5, #-4]
 800d2e8:	61aa      	str	r2, [r5, #24]
 800d2ea:	f884 24f5 	strb.w	r2, [r4, #1269]	; 0x4f5
 800d2ee:	e7a5      	b.n	800d23c <E131Bridge::HandleDmx()+0xe4>
 800d2f0:	f1ba 0f00 	cmp.w	sl, #0
 800d2f4:	f000 8092 	beq.w	800d41c <E131Bridge::HandleDmx()+0x2c4>
 800d2f8:	f1bb 0f00 	cmp.w	fp, #0
 800d2fc:	d15c      	bne.n	800d3b8 <E131Bridge::HandleDmx()+0x260>
 800d2fe:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800d302:	742b      	strb	r3, [r5, #16]
 800d304:	e7ae      	b.n	800d264 <E131Bridge::HandleDmx()+0x10c>
 800d306:	f1b8 0f00 	cmp.w	r8, #0
 800d30a:	d03b      	beq.n	800d384 <E131Bridge::HandleDmx()+0x22c>
 800d30c:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800d310:	f240 6b04 	movw	fp, #1540	; 0x604
 800d314:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
 800d318:	68e3      	ldr	r3, [r4, #12]
 800d31a:	fb0b fb06 	mul.w	fp, fp, r6
 800d31e:	616b      	str	r3, [r5, #20]
 800d320:	f7fd ffd4 	bl	800b2cc <lightset::Data::Get()>
 800d324:	4603      	mov	r3, r0
 800d326:	f50b 7000 	add.w	r0, fp, #512	; 0x200
 800d32a:	463a      	mov	r2, r7
 800d32c:	4649      	mov	r1, r9
 800d32e:	4418      	add	r0, r3
 800d330:	9300      	str	r3, [sp, #0]
 800d332:	f7ff fc27 	bl	800cb84 <memcpy.isra.0>
 800d336:	9b00      	ldr	r3, [sp, #0]
 800d338:	f50b 6080 	add.w	r0, fp, #1024	; 0x400
 800d33c:	eb03 020b 	add.w	r2, r3, fp
 800d340:	f8c2 7600 	str.w	r7, [r2, #1536]	; 0x600
 800d344:	4649      	mov	r1, r9
 800d346:	463a      	mov	r2, r7
 800d348:	4418      	add	r0, r3
 800d34a:	f7ff fc1b 	bl	800cb84 <memcpy.isra.0>
 800d34e:	e791      	b.n	800d274 <E131Bridge::HandleDmx()+0x11c>
 800d350:	6fa3      	ldr	r3, [r4, #120]	; 0x78
 800d352:	2210      	movs	r2, #16
 800d354:	61ab      	str	r3, [r5, #24]
 800d356:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800d35a:	f104 0192 	add.w	r1, r4, #146	; 0x92
 800d35e:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
 800d362:	f105 001c 	add.w	r0, r5, #28
 800d366:	f7ff fc0d 	bl	800cb84 <memcpy.isra.0>
 800d36a:	68e3      	ldr	r3, [r4, #12]
 800d36c:	4631      	mov	r1, r6
 800d36e:	4620      	mov	r0, r4
 800d370:	616b      	str	r3, [r5, #20]
 800d372:	f7ff fdde 	bl	800cf32 <E131Bridge::UpdateMergeStatus(unsigned int)>
 800d376:	463a      	mov	r2, r7
 800d378:	4649      	mov	r1, r9
 800d37a:	4630      	mov	r0, r6
 800d37c:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 800d37e:	f7fd fff7 	bl	800b370 <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>
 800d382:	e777      	b.n	800d274 <E131Bridge::HandleDmx()+0x11c>
 800d384:	6fa3      	ldr	r3, [r4, #120]	; 0x78
 800d386:	2210      	movs	r2, #16
 800d388:	f845 3c04 	str.w	r3, [r5, #-4]
 800d38c:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800d390:	4628      	mov	r0, r5
 800d392:	742b      	strb	r3, [r5, #16]
 800d394:	f104 0192 	add.w	r1, r4, #146	; 0x92
 800d398:	f7ff fbf4 	bl	800cb84 <memcpy.isra.0>
 800d39c:	68e3      	ldr	r3, [r4, #12]
 800d39e:	4631      	mov	r1, r6
 800d3a0:	4620      	mov	r0, r4
 800d3a2:	f845 3c08 	str.w	r3, [r5, #-8]
 800d3a6:	f7ff fdc4 	bl	800cf32 <E131Bridge::UpdateMergeStatus(unsigned int)>
 800d3aa:	463a      	mov	r2, r7
 800d3ac:	4649      	mov	r1, r9
 800d3ae:	4630      	mov	r0, r6
 800d3b0:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 800d3b2:	f7fd ffb4 	bl	800b31e <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>
 800d3b6:	e75d      	b.n	800d274 <E131Bridge::HandleDmx()+0x11c>
 800d3b8:	f1b8 0f00 	cmp.w	r8, #0
 800d3bc:	d103      	bne.n	800d3c6 <E131Bridge::HandleDmx()+0x26e>
 800d3be:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800d3c2:	742b      	strb	r3, [r5, #16]
 800d3c4:	e7ea      	b.n	800d39c <E131Bridge::HandleDmx()+0x244>
 800d3c6:	481b      	ldr	r0, [pc, #108]	; (800d434 <E131Bridge::HandleDmx()+0x2dc>)
 800d3c8:	b003      	add	sp, #12
 800d3ca:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d3ce:	f7fb bde7 	b.w	8008fa0 <printf>
 800d3d2:	4642      	mov	r2, r8
 800d3d4:	4651      	mov	r1, sl
 800d3d6:	e770      	b.n	800d2ba <E131Bridge::HandleDmx()+0x162>
 800d3d8:	f04f 0300 	mov.w	r3, #0
 800d3dc:	f884 34f7 	strb.w	r3, [r4, #1271]	; 0x4f7
 800d3e0:	f894 34f6 	ldrb.w	r3, [r4, #1270]	; 0x4f6
 800d3e4:	2b00      	cmp	r3, #0
 800d3e6:	f47f af6f 	bne.w	800d2c8 <E131Bridge::HandleDmx()+0x170>
 800d3ea:	f8d4 8004 	ldr.w	r8, [r4, #4]
 800d3ee:	f7fd ff6d 	bl	800b2cc <lightset::Data::Get()>
 800d3f2:	4632      	mov	r2, r6
 800d3f4:	4641      	mov	r1, r8
 800d3f6:	f7ff fbcf 	bl	800cb98 <lightset::Data::IOutput(LightSet*, unsigned int) const>
 800d3fa:	f895 3036 	ldrb.w	r3, [r5, #54]	; 0x36
 800d3fe:	2b00      	cmp	r3, #0
 800d400:	f47f af67 	bne.w	800d2d2 <E131Bridge::HandleDmx()+0x17a>
 800d404:	6860      	ldr	r0, [r4, #4]
 800d406:	4631      	mov	r1, r6
 800d408:	6803      	ldr	r3, [r0, #0]
 800d40a:	689b      	ldr	r3, [r3, #8]
 800d40c:	4798      	blx	r3
 800d40e:	f04f 0301 	mov.w	r3, #1
 800d412:	f884 34f8 	strb.w	r3, [r4, #1272]	; 0x4f8
 800d416:	f885 3036 	strb.w	r3, [r5, #54]	; 0x36
 800d41a:	e75a      	b.n	800d2d2 <E131Bridge::HandleDmx()+0x17a>
 800d41c:	f1bb 0f00 	cmp.w	fp, #0
 800d420:	d096      	beq.n	800d350 <E131Bridge::HandleDmx()+0x1f8>
 800d422:	f1b8 0f00 	cmp.w	r8, #0
 800d426:	d0ce      	beq.n	800d3c6 <E131Bridge::HandleDmx()+0x26e>
 800d428:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800d42c:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
 800d430:	e79b      	b.n	800d36a <E131Bridge::HandleDmx()+0x212>
 800d432:	bf00      	nop
 800d434:	0801943e 	stmdaeq	r1, {r1, r2, r3, r4, r5, sl, ip, pc}

0800d438 <E131Bridge::IsStatusChanged()>:
 800d438:	4603      	mov	r3, r0
 800d43a:	f890 04f8 	ldrb.w	r0, [r0, #1272]	; 0x4f8
 800d43e:	b110      	cbz	r0, 800d446 <E131Bridge::IsStatusChanged()+0xe>
 800d440:	2200      	movs	r2, #0
 800d442:	f883 24f8 	strb.w	r2, [r3, #1272]	; 0x4f8
 800d446:	4770      	bx	lr

0800d448 <E131Bridge::Clear(unsigned int)>:
 800d448:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d44a:	460d      	mov	r5, r1
 800d44c:	4604      	mov	r4, r0
 800d44e:	6847      	ldr	r7, [r0, #4]
 800d450:	f7fd ff3c 	bl	800b2cc <lightset::Data::Get()>
 800d454:	f240 6204 	movw	r2, #1540	; 0x604
 800d458:	4606      	mov	r6, r0
 800d45a:	436a      	muls	r2, r5
 800d45c:	f502 6080 	add.w	r0, r2, #1024	; 0x400
 800d460:	4430      	add	r0, r6
 800d462:	f44f 7100 	mov.w	r1, #512	; 0x200
 800d466:	f7ff fb85 	bl	800cb74 <memset.constprop.0.isra.0>
 800d46a:	4432      	add	r2, r6
 800d46c:	4630      	mov	r0, r6
 800d46e:	2644      	movs	r6, #68	; 0x44
 800d470:	f44f 7300 	mov.w	r3, #512	; 0x200
 800d474:	fb06 4605 	mla	r6, r6, r5, r4
 800d478:	f8c2 3600 	str.w	r3, [r2, #1536]	; 0x600
 800d47c:	4639      	mov	r1, r7
 800d47e:	462a      	mov	r2, r5
 800d480:	f7ff fb8a 	bl	800cb98 <lightset::Data::IOutput(LightSet*, unsigned int) const>
 800d484:	f896 3512 	ldrb.w	r3, [r6, #1298]	; 0x512
 800d488:	b153      	cbz	r3, 800d4a0 <E131Bridge::Clear(unsigned int)+0x58>
 800d48a:	f896 3552 	ldrb.w	r3, [r6, #1362]	; 0x552
 800d48e:	b93b      	cbnz	r3, 800d4a0 <E131Bridge::Clear(unsigned int)+0x58>
 800d490:	6860      	ldr	r0, [r4, #4]
 800d492:	4629      	mov	r1, r5
 800d494:	6803      	ldr	r3, [r0, #0]
 800d496:	689b      	ldr	r3, [r3, #8]
 800d498:	4798      	blx	r3
 800d49a:	2301      	movs	r3, #1
 800d49c:	f886 3552 	strb.w	r3, [r6, #1362]	; 0x552
 800d4a0:	2300      	movs	r3, #0
 800d4a2:	f884 34f4 	strb.w	r3, [r4, #1268]	; 0x4f4
 800d4a6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800d4a8 <E131Bridge::IsValidRoot()>:
 800d4a8:	4a0d      	ldr	r2, [pc, #52]	; (800d4e0 <E131Bridge::IsValidRoot()+0x38>)
 800d4aa:	b530      	push	{r4, r5, lr}
 800d4ac:	f100 0380 	add.w	r3, r0, #128	; 0x80
 800d4b0:	f100 058c 	add.w	r5, r0, #140	; 0x8c
 800d4b4:	42ab      	cmp	r3, r5
 800d4b6:	d007      	beq.n	800d4c8 <E131Bridge::IsValidRoot()+0x20>
 800d4b8:	f813 4b01 	ldrb.w	r4, [r3], #1
 800d4bc:	f812 1b01 	ldrb.w	r1, [r2], #1
 800d4c0:	428c      	cmp	r4, r1
 800d4c2:	d0f7      	beq.n	800d4b4 <E131Bridge::IsValidRoot()+0xc>
 800d4c4:	2000      	movs	r0, #0
 800d4c6:	e008      	b.n	800d4da <E131Bridge::IsValidRoot()+0x32>
 800d4c8:	f8d0 008e 	ldr.w	r0, [r0, #142]	; 0x8e
 800d4cc:	f1b0 6f80 	cmp.w	r0, #67108864	; 0x4000000
 800d4d0:	d004      	beq.n	800d4dc <E131Bridge::IsValidRoot()+0x34>
 800d4d2:	f100 4378 	add.w	r3, r0, #4160749568	; 0xf8000000
 800d4d6:	4258      	negs	r0, r3
 800d4d8:	4158      	adcs	r0, r3
 800d4da:	bd30      	pop	{r4, r5, pc}
 800d4dc:	2001      	movs	r0, #1
 800d4de:	e7fc      	b.n	800d4da <E131Bridge::IsValidRoot()+0x32>
 800d4e0:	080194ee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, sl, ip, pc}

0800d4e4 <E131Bridge::IsValidDataPacket()>:
 800d4e4:	f890 30f1 	ldrb.w	r3, [r0, #241]	; 0xf1
 800d4e8:	2b02      	cmp	r3, #2
 800d4ea:	d10d      	bne.n	800d508 <E131Bridge::IsValidDataPacket()+0x24>
 800d4ec:	f890 30f2 	ldrb.w	r3, [r0, #242]	; 0xf2
 800d4f0:	2ba1      	cmp	r3, #161	; 0xa1
 800d4f2:	d109      	bne.n	800d508 <E131Bridge::IsValidDataPacket()+0x24>
 800d4f4:	f8b0 30f3 	ldrh.w	r3, [r0, #243]	; 0xf3
 800d4f8:	b933      	cbnz	r3, 800d508 <E131Bridge::IsValidDataPacket()+0x24>
 800d4fa:	f8b0 00f5 	ldrh.w	r0, [r0, #245]	; 0xf5
 800d4fe:	f5a0 7380 	sub.w	r3, r0, #256	; 0x100
 800d502:	4258      	negs	r0, r3
 800d504:	4158      	adcs	r0, r3
 800d506:	4770      	bx	lr
 800d508:	2000      	movs	r0, #0
 800d50a:	4770      	bx	lr

0800d50c <E131Bridge::Run()>:
 800d50c:	b530      	push	{r4, r5, lr}
 800d50e:	4601      	mov	r1, r0
 800d510:	4604      	mov	r4, r0
 800d512:	b085      	sub	sp, #20
 800d514:	f10d 030e 	add.w	r3, sp, #14
 800d518:	f811 0b7c 	ldrb.w	r0, [r1], #124
 800d51c:	f44f 628f 	mov.w	r2, #1144	; 0x478
 800d520:	9300      	str	r3, [sp, #0]
 800d522:	f104 0378 	add.w	r3, r4, #120	; 0x78
 800d526:	f004 fdd9 	bl	80120dc <udp_recv>
 800d52a:	4b3c      	ldr	r3, [pc, #240]	; (800d61c <E131Bridge::Run()+0x110>)
 800d52c:	681d      	ldr	r5, [r3, #0]
 800d52e:	60e5      	str	r5, [r4, #12]
 800d530:	2800      	cmp	r0, #0
 800d532:	d13b      	bne.n	800d5ac <E131Bridge::Run()+0xa0>
 800d534:	f894 350b 	ldrb.w	r3, [r4, #1291]	; 0x50b
 800d538:	b183      	cbz	r3, 800d55c <E131Bridge::Run()+0x50>
 800d53a:	f894 34f9 	ldrb.w	r3, [r4, #1273]	; 0x4f9
 800d53e:	bb73      	cbnz	r3, 800d59e <E131Bridge::Run()+0x92>
 800d540:	6923      	ldr	r3, [r4, #16]
 800d542:	1aed      	subs	r5, r5, r3
 800d544:	f640 13c3 	movw	r3, #2499	; 0x9c3
 800d548:	429d      	cmp	r5, r3
 800d54a:	d928      	bls.n	800d59e <E131Bridge::Run()+0x92>
 800d54c:	6863      	ldr	r3, [r4, #4]
 800d54e:	b9eb      	cbnz	r3, 800d58c <E131Bridge::Run()+0x80>
 800d550:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800d554:	f023 0302 	bic.w	r3, r3, #2
 800d558:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 800d55c:	6963      	ldr	r3, [r4, #20]
 800d55e:	b12b      	cbz	r3, 800d56c <E131Bridge::Run()+0x60>
 800d560:	4620      	mov	r0, r4
 800d562:	f000 f94f 	bl	800d804 <E131Bridge::HandleDmxIn()>
 800d566:	4620      	mov	r0, r4
 800d568:	f000 f8ca 	bl	800d700 <E131Bridge::SendDiscoveryPacket()>
 800d56c:	7a23      	ldrb	r3, [r4, #8]
 800d56e:	b15b      	cbz	r3, 800d588 <E131Bridge::Run()+0x7c>
 800d570:	4b2b      	ldr	r3, [pc, #172]	; (800d620 <E131Bridge::Run()+0x114>)
 800d572:	6818      	ldr	r0, [r3, #0]
 800d574:	6883      	ldr	r3, [r0, #8]
 800d576:	2b04      	cmp	r3, #4
 800d578:	d006      	beq.n	800d588 <E131Bridge::Run()+0x7c>
 800d57a:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800d57e:	2b00      	cmp	r3, #0
 800d580:	d049      	beq.n	800d616 <E131Bridge::Run()+0x10a>
 800d582:	2103      	movs	r1, #3
 800d584:	f008 f9d6 	bl	8015934 <LedBlink::SetMode(ledblink::Mode)>
 800d588:	b005      	add	sp, #20
 800d58a:	bd30      	pop	{r4, r5, pc}
 800d58c:	f894 34f4 	ldrb.w	r3, [r4, #1268]	; 0x4f4
 800d590:	2b00      	cmp	r3, #0
 800d592:	d1dd      	bne.n	800d550 <E131Bridge::Run()+0x44>
 800d594:	2201      	movs	r2, #1
 800d596:	4620      	mov	r0, r4
 800d598:	4611      	mov	r1, r2
 800d59a:	f7ff fd55 	bl	800d048 <E131Bridge::SetNetworkDataLossCondition(bool, bool)>
 800d59e:	e9d4 3203 	ldrd	r3, r2, [r4, #12]
 800d5a2:	1a9b      	subs	r3, r3, r2
 800d5a4:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800d5a8:	d3d8      	bcc.n	800d55c <E131Bridge::Run()+0x50>
 800d5aa:	e7d1      	b.n	800d550 <E131Bridge::Run()+0x44>
 800d5ac:	4620      	mov	r0, r4
 800d5ae:	f7ff ff7b 	bl	800d4a8 <E131Bridge::IsValidRoot()>
 800d5b2:	2800      	cmp	r0, #0
 800d5b4:	d0e8      	beq.n	800d588 <E131Bridge::Run()+0x7c>
 800d5b6:	2300      	movs	r3, #0
 800d5b8:	f884 34f4 	strb.w	r3, [r4, #1268]	; 0x4f4
 800d5bc:	f894 34f6 	ldrb.w	r3, [r4, #1270]	; 0x4f6
 800d5c0:	6125      	str	r5, [r4, #16]
 800d5c2:	b15b      	cbz	r3, 800d5dc <E131Bridge::Run()+0xd0>
 800d5c4:	f894 34f7 	ldrb.w	r3, [r4, #1271]	; 0x4f7
 800d5c8:	b943      	cbnz	r3, 800d5dc <E131Bridge::Run()+0xd0>
 800d5ca:	f8d4 24fc 	ldr.w	r2, [r4, #1276]	; 0x4fc
 800d5ce:	1aad      	subs	r5, r5, r2
 800d5d0:	f640 12c3 	movw	r2, #2499	; 0x9c3
 800d5d4:	4295      	cmp	r5, r2
 800d5d6:	bf88      	it	hi
 800d5d8:	f884 34f6 	strbhi.w	r3, [r4, #1270]	; 0x4f6
 800d5dc:	6863      	ldr	r3, [r4, #4]
 800d5de:	2b00      	cmp	r3, #0
 800d5e0:	d0bc      	beq.n	800d55c <E131Bridge::Run()+0x50>
 800d5e2:	f8d4 308e 	ldr.w	r3, [r4, #142]	; 0x8e
 800d5e6:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 800d5ea:	ba1a      	rev	r2, r3
 800d5ec:	d108      	bne.n	800d600 <E131Bridge::Run()+0xf4>
 800d5ee:	4620      	mov	r0, r4
 800d5f0:	f7ff ff78 	bl	800d4e4 <E131Bridge::IsValidDataPacket()>
 800d5f4:	2800      	cmp	r0, #0
 800d5f6:	d0b1      	beq.n	800d55c <E131Bridge::Run()+0x50>
 800d5f8:	4620      	mov	r0, r4
 800d5fa:	f7ff fdad 	bl	800d158 <E131Bridge::HandleDmx()>
 800d5fe:	e7ad      	b.n	800d55c <E131Bridge::Run()+0x50>
 800d600:	2a08      	cmp	r2, #8
 800d602:	d1ab      	bne.n	800d55c <E131Bridge::Run()+0x50>
 800d604:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800d608:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800d60c:	d1a6      	bne.n	800d55c <E131Bridge::Run()+0x50>
 800d60e:	4620      	mov	r0, r4
 800d610:	f000 f996 	bl	800d940 <E131Bridge::HandleSynchronization()>
 800d614:	e7a2      	b.n	800d55c <E131Bridge::Run()+0x50>
 800d616:	2102      	movs	r1, #2
 800d618:	e7b4      	b.n	800d584 <E131Bridge::Run()+0x78>
 800d61a:	bf00      	nop
 800d61c:	20013e04 	andcs	r3, r1, r4, lsl #28
 800d620:	20013de0 	andcs	r3, r1, r0, ror #27

0800d624 <E131Bridge::FillDiscoveryPacket()>:
 800d624:	2200      	movs	r2, #0
 800d626:	f890 350a 	ldrb.w	r3, [r0, #1290]	; 0x50a
 800d62a:	b510      	push	{r4, lr}
 800d62c:	333c      	adds	r3, #60	; 0x3c
 800d62e:	005b      	lsls	r3, r3, #1
 800d630:	f8a0 3504 	strh.w	r3, [r0, #1284]	; 0x504
 800d634:	69c3      	ldr	r3, [r0, #28]
 800d636:	f503 618f 	add.w	r1, r3, #1144	; 0x478
 800d63a:	428b      	cmp	r3, r1
 800d63c:	d002      	beq.n	800d644 <E131Bridge::FillDiscoveryPacket()+0x20>
 800d63e:	f803 2b01 	strb.w	r2, [r3], #1
 800d642:	e7fa      	b.n	800d63a <E131Bridge::FillDiscoveryPacket()+0x16>
 800d644:	69c3      	ldr	r3, [r0, #28]
 800d646:	492d      	ldr	r1, [pc, #180]	; (800d6fc <E131Bridge::FillDiscoveryPacket()+0xd8>)
 800d648:	701a      	strb	r2, [r3, #0]
 800d64a:	2210      	movs	r2, #16
 800d64c:	705a      	strb	r2, [r3, #1]
 800d64e:	1d1a      	adds	r2, r3, #4
 800d650:	3310      	adds	r3, #16
 800d652:	4293      	cmp	r3, r2
 800d654:	d004      	beq.n	800d660 <E131Bridge::FillDiscoveryPacket()+0x3c>
 800d656:	f811 4b01 	ldrb.w	r4, [r1], #1
 800d65a:	f802 4b01 	strb.w	r4, [r2], #1
 800d65e:	e7f8      	b.n	800d652 <E131Bridge::FillDiscoveryPacket()+0x2e>
 800d660:	f890 250a 	ldrb.w	r2, [r0, #1290]	; 0x50a
 800d664:	69c3      	ldr	r3, [r0, #28]
 800d666:	3234      	adds	r2, #52	; 0x34
 800d668:	0052      	lsls	r2, r2, #1
 800d66a:	f442 42e0 	orr.w	r2, r2, #28672	; 0x7000
 800d66e:	ba52      	rev16	r2, r2
 800d670:	821a      	strh	r2, [r3, #16]
 800d672:	2200      	movs	r2, #0
 800d674:	749a      	strb	r2, [r3, #18]
 800d676:	74da      	strb	r2, [r3, #19]
 800d678:	751a      	strb	r2, [r3, #20]
 800d67a:	2208      	movs	r2, #8
 800d67c:	f100 0124 	add.w	r1, r0, #36	; 0x24
 800d680:	755a      	strb	r2, [r3, #21]
 800d682:	f100 0434 	add.w	r4, r0, #52	; 0x34
 800d686:	3316      	adds	r3, #22
 800d688:	42a1      	cmp	r1, r4
 800d68a:	d004      	beq.n	800d696 <E131Bridge::FillDiscoveryPacket()+0x72>
 800d68c:	f811 2b01 	ldrb.w	r2, [r1], #1
 800d690:	f803 2b01 	strb.w	r2, [r3], #1
 800d694:	e7f8      	b.n	800d688 <E131Bridge::FillDiscoveryPacket()+0x64>
 800d696:	f890 250a 	ldrb.w	r2, [r0, #1290]	; 0x50a
 800d69a:	69c3      	ldr	r3, [r0, #28]
 800d69c:	3229      	adds	r2, #41	; 0x29
 800d69e:	0052      	lsls	r2, r2, #1
 800d6a0:	f442 42e0 	orr.w	r2, r2, #28672	; 0x7000
 800d6a4:	ba52      	rev16	r2, r2
 800d6a6:	84da      	strh	r2, [r3, #38]	; 0x26
 800d6a8:	2200      	movs	r2, #0
 800d6aa:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 800d6ae:	f883 2029 	strb.w	r2, [r3, #41]	; 0x29
 800d6b2:	f883 202a 	strb.w	r2, [r3, #42]	; 0x2a
 800d6b6:	2202      	movs	r2, #2
 800d6b8:	332c      	adds	r3, #44	; 0x2c
 800d6ba:	f803 2c01 	strb.w	r2, [r3, #-1]
 800d6be:	f100 0474 	add.w	r4, r0, #116	; 0x74
 800d6c2:	42a1      	cmp	r1, r4
 800d6c4:	d004      	beq.n	800d6d0 <E131Bridge::FillDiscoveryPacket()+0xac>
 800d6c6:	f811 2b01 	ldrb.w	r2, [r1], #1
 800d6ca:	f803 2b01 	strb.w	r2, [r3], #1
 800d6ce:	e7f8      	b.n	800d6c2 <E131Bridge::FillDiscoveryPacket()+0x9e>
 800d6d0:	f890 350a 	ldrb.w	r3, [r0, #1290]	; 0x50a
 800d6d4:	69c2      	ldr	r2, [r0, #28]
 800d6d6:	3304      	adds	r3, #4
 800d6d8:	005b      	lsls	r3, r3, #1
 800d6da:	f443 43e0 	orr.w	r3, r3, #28672	; 0x7000
 800d6de:	ba5b      	rev16	r3, r3
 800d6e0:	f8a2 3070 	strh.w	r3, [r2, #112]	; 0x70
 800d6e4:	2300      	movs	r3, #0
 800d6e6:	f882 3072 	strb.w	r3, [r2, #114]	; 0x72
 800d6ea:	f882 3073 	strb.w	r3, [r2, #115]	; 0x73
 800d6ee:	f882 3074 	strb.w	r3, [r2, #116]	; 0x74
 800d6f2:	2301      	movs	r3, #1
 800d6f4:	f882 3075 	strb.w	r3, [r2, #117]	; 0x75
 800d6f8:	bd10      	pop	{r4, pc}
 800d6fa:	bf00      	nop
 800d6fc:	080194ee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, sl, ip, pc}

0800d700 <E131Bridge::SendDiscoveryPacket()>:
 800d700:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800d702:	f242 710f 	movw	r1, #9999	; 0x270f
 800d706:	68c2      	ldr	r2, [r0, #12]
 800d708:	f8d0 3500 	ldr.w	r3, [r0, #1280]	; 0x500
 800d70c:	4604      	mov	r4, r0
 800d70e:	1ad3      	subs	r3, r2, r3
 800d710:	428b      	cmp	r3, r1
 800d712:	d924      	bls.n	800d75e <E131Bridge::SendDiscoveryPacket()+0x5e>
 800d714:	f890 350a 	ldrb.w	r3, [r0, #1290]	; 0x50a
 800d718:	f8c0 2500 	str.w	r2, [r0, #1280]	; 0x500
 800d71c:	b1ab      	cbz	r3, 800d74a <E131Bridge::SendDiscoveryPacket()+0x4a>
 800d71e:	2500      	movs	r5, #0
 800d720:	462e      	mov	r6, r5
 800d722:	2300      	movs	r3, #0
 800d724:	4629      	mov	r1, r5
 800d726:	4620      	mov	r0, r4
 800d728:	f10d 020e 	add.w	r2, sp, #14
 800d72c:	f7ff fbea 	bl	800cf04 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 800d730:	b140      	cbz	r0, 800d744 <E131Bridge::SendDiscoveryPacket()+0x44>
 800d732:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800d736:	69e2      	ldr	r2, [r4, #28]
 800d738:	f106 013c 	add.w	r1, r6, #60	; 0x3c
 800d73c:	ba5b      	rev16	r3, r3
 800d73e:	f822 3011 	strh.w	r3, [r2, r1, lsl #1]
 800d742:	3601      	adds	r6, #1
 800d744:	3501      	adds	r5, #1
 800d746:	2d08      	cmp	r5, #8
 800d748:	d1eb      	bne.n	800d722 <E131Bridge::SendDiscoveryPacket()+0x22>
 800d74a:	f44f 53ae 	mov.w	r3, #5568	; 0x15c0
 800d74e:	f8b4 2504 	ldrh.w	r2, [r4, #1284]	; 0x504
 800d752:	9300      	str	r3, [sp, #0]
 800d754:	69e1      	ldr	r1, [r4, #28]
 800d756:	6a23      	ldr	r3, [r4, #32]
 800d758:	7820      	ldrb	r0, [r4, #0]
 800d75a:	f004 fd1b 	bl	8012194 <udp_send>
 800d75e:	b004      	add	sp, #16
 800d760:	bd70      	pop	{r4, r5, r6, pc}

0800d762 <memcpy.isra.0>:
 800d762:	3801      	subs	r0, #1
 800d764:	440a      	add	r2, r1
 800d766:	4291      	cmp	r1, r2
 800d768:	d004      	beq.n	800d774 <memcpy.isra.0+0x12>
 800d76a:	f811 3b01 	ldrb.w	r3, [r1], #1
 800d76e:	f800 3f01 	strb.w	r3, [r0, #1]!
 800d772:	e7f8      	b.n	800d766 <memcpy.isra.0+0x4>
 800d774:	4770      	bx	lr
	...

0800d778 <E131Bridge::FillDataPacket()>:
 800d778:	b570      	push	{r4, r5, r6, lr}
 800d77a:	2400      	movs	r4, #0
 800d77c:	2610      	movs	r6, #16
 800d77e:	4605      	mov	r5, r0
 800d780:	6980      	ldr	r0, [r0, #24]
 800d782:	220c      	movs	r2, #12
 800d784:	7046      	strb	r6, [r0, #1]
 800d786:	7004      	strb	r4, [r0, #0]
 800d788:	7084      	strb	r4, [r0, #2]
 800d78a:	70c4      	strb	r4, [r0, #3]
 800d78c:	491c      	ldr	r1, [pc, #112]	; (800d800 <E131Bridge::FillDataPacket()+0x88>)
 800d78e:	3004      	adds	r0, #4
 800d790:	f7ff ffe7 	bl	800d762 <memcpy.isra.0>
 800d794:	2304      	movs	r3, #4
 800d796:	4632      	mov	r2, r6
 800d798:	2602      	movs	r6, #2
 800d79a:	69a8      	ldr	r0, [r5, #24]
 800d79c:	f105 0124 	add.w	r1, r5, #36	; 0x24
 800d7a0:	7543      	strb	r3, [r0, #21]
 800d7a2:	7484      	strb	r4, [r0, #18]
 800d7a4:	74c4      	strb	r4, [r0, #19]
 800d7a6:	7504      	strb	r4, [r0, #20]
 800d7a8:	3016      	adds	r0, #22
 800d7aa:	f7ff ffda 	bl	800d762 <memcpy.isra.0>
 800d7ae:	69a8      	ldr	r0, [r5, #24]
 800d7b0:	2240      	movs	r2, #64	; 0x40
 800d7b2:	f880 4028 	strb.w	r4, [r0, #40]	; 0x28
 800d7b6:	f880 4029 	strb.w	r4, [r0, #41]	; 0x29
 800d7ba:	f880 402a 	strb.w	r4, [r0, #42]	; 0x2a
 800d7be:	f880 602b 	strb.w	r6, [r0, #43]	; 0x2b
 800d7c2:	f105 0134 	add.w	r1, r5, #52	; 0x34
 800d7c6:	302c      	adds	r0, #44	; 0x2c
 800d7c8:	f7ff ffcb 	bl	800d762 <memcpy.isra.0>
 800d7cc:	22a1      	movs	r2, #161	; 0xa1
 800d7ce:	69ab      	ldr	r3, [r5, #24]
 800d7d0:	f883 4070 	strb.w	r4, [r3, #112]	; 0x70
 800d7d4:	f883 406d 	strb.w	r4, [r3, #109]	; 0x6d
 800d7d8:	f883 406e 	strb.w	r4, [r3, #110]	; 0x6e
 800d7dc:	69ab      	ldr	r3, [r5, #24]
 800d7de:	f883 6075 	strb.w	r6, [r3, #117]	; 0x75
 800d7e2:	69ab      	ldr	r3, [r5, #24]
 800d7e4:	f883 2076 	strb.w	r2, [r3, #118]	; 0x76
 800d7e8:	2201      	movs	r2, #1
 800d7ea:	69ab      	ldr	r3, [r5, #24]
 800d7ec:	f883 4077 	strb.w	r4, [r3, #119]	; 0x77
 800d7f0:	f883 4078 	strb.w	r4, [r3, #120]	; 0x78
 800d7f4:	f883 4079 	strb.w	r4, [r3, #121]	; 0x79
 800d7f8:	f883 207a 	strb.w	r2, [r3, #122]	; 0x7a
 800d7fc:	bd70      	pop	{r4, r5, r6, pc}
 800d7fe:	bf00      	nop
 800d800:	080194ee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, sl, ip, pc}

0800d804 <E131Bridge::HandleDmxIn()>:
 800d804:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d808:	4604      	mov	r4, r0
 800d80a:	4605      	mov	r5, r0
 800d80c:	2600      	movs	r6, #0
 800d80e:	4f4a      	ldr	r7, [pc, #296]	; (800d938 <E131Bridge::HandleDmxIn()+0x134>)
 800d810:	f8df 8128 	ldr.w	r8, [pc, #296]	; 800d93c <E131Bridge::HandleDmxIn()+0x138>
 800d814:	b085      	sub	sp, #20
 800d816:	f895 3732 	ldrb.w	r3, [r5, #1842]	; 0x732
 800d81a:	2b00      	cmp	r3, #0
 800d81c:	d061      	beq.n	800d8e2 <E131Bridge::HandleDmxIn()+0xde>
 800d81e:	6960      	ldr	r0, [r4, #20]
 800d820:	4631      	mov	r1, r6
 800d822:	6803      	ldr	r3, [r0, #0]
 800d824:	aa02      	add	r2, sp, #8
 800d826:	f8d3 9010 	ldr.w	r9, [r3, #16]
 800d82a:	ab03      	add	r3, sp, #12
 800d82c:	47c8      	blx	r9
 800d82e:	4601      	mov	r1, r0
 800d830:	2800      	cmp	r0, #0
 800d832:	d05e      	beq.n	800d8f2 <E131Bridge::HandleDmxIn()+0xee>
 800d834:	9b02      	ldr	r3, [sp, #8]
 800d836:	69a0      	ldr	r0, [r4, #24]
 800d838:	b29b      	uxth	r3, r3
 800d83a:	f103 026d 	add.w	r2, r3, #109	; 0x6d
 800d83e:	f442 42e0 	orr.w	r2, r2, #28672	; 0x7000
 800d842:	ba52      	rev16	r2, r2
 800d844:	8202      	strh	r2, [r0, #16]
 800d846:	f103 0257 	add.w	r2, r3, #87	; 0x57
 800d84a:	f442 42e0 	orr.w	r2, r2, #28672	; 0x7000
 800d84e:	ba52      	rev16	r2, r2
 800d850:	84c2      	strh	r2, [r0, #38]	; 0x26
 800d852:	f895 2739 	ldrb.w	r2, [r5, #1849]	; 0x739
 800d856:	330a      	adds	r3, #10
 800d858:	f880 206c 	strb.w	r2, [r0, #108]	; 0x6c
 800d85c:	f895 2738 	ldrb.w	r2, [r5, #1848]	; 0x738
 800d860:	f443 43e0 	orr.w	r3, r3, #28672	; 0x7000
 800d864:	1c50      	adds	r0, r2, #1
 800d866:	f885 0738 	strb.w	r0, [r5, #1848]	; 0x738
 800d86a:	69a0      	ldr	r0, [r4, #24]
 800d86c:	ba5b      	rev16	r3, r3
 800d86e:	f880 206f 	strb.w	r2, [r0, #111]	; 0x6f
 800d872:	f8b5 2730 	ldrh.w	r2, [r5, #1840]	; 0x730
 800d876:	69a0      	ldr	r0, [r4, #24]
 800d878:	ba52      	rev16	r2, r2
 800d87a:	f8a0 2071 	strh.w	r2, [r0, #113]	; 0x71
 800d87e:	f8a0 3073 	strh.w	r3, [r0, #115]	; 0x73
 800d882:	9a02      	ldr	r2, [sp, #8]
 800d884:	307d      	adds	r0, #125	; 0x7d
 800d886:	f7ff ff6c 	bl	800d762 <memcpy.isra.0>
 800d88a:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800d88e:	69a1      	ldr	r1, [r4, #24]
 800d890:	ba53      	rev16	r3, r2
 800d892:	f8a1 307b 	strh.w	r3, [r1, #123]	; 0x7b
 800d896:	f44f 53ae 	mov.w	r3, #5568	; 0x15c0
 800d89a:	327d      	adds	r2, #125	; 0x7d
 800d89c:	9300      	str	r3, [sp, #0]
 800d89e:	f8d5 3734 	ldr.w	r3, [r5, #1844]	; 0x734
 800d8a2:	b292      	uxth	r2, r2
 800d8a4:	7820      	ldrb	r0, [r4, #0]
 800d8a6:	f004 fc75 	bl	8012194 <udp_send>
 800d8aa:	2201      	movs	r2, #1
 800d8ac:	6839      	ldr	r1, [r7, #0]
 800d8ae:	fa02 f306 	lsl.w	r3, r2, r6
 800d8b2:	ea33 0001 	bics.w	r0, r3, r1
 800d8b6:	d014      	beq.n	800d8e2 <E131Bridge::HandleDmxIn()+0xde>
 800d8b8:	4319      	orrs	r1, r3
 800d8ba:	6039      	str	r1, [r7, #0]
 800d8bc:	f894 150d 	ldrb.w	r1, [r4, #1293]	; 0x50d
 800d8c0:	4311      	orrs	r1, r2
 800d8c2:	f884 150d 	strb.w	r1, [r4, #1293]	; 0x50d
 800d8c6:	fab3 f383 	clz	r3, r3
 800d8ca:	b2db      	uxtb	r3, r3
 800d8cc:	3b17      	subs	r3, #23
 800d8ce:	4093      	lsls	r3, r2
 800d8d0:	fa02 f303 	lsl.w	r3, r2, r3
 800d8d4:	f8d8 2000 	ldr.w	r2, [r8]
 800d8d8:	4313      	orrs	r3, r2
 800d8da:	f483 1360 	eor.w	r3, r3, #3670016	; 0x380000
 800d8de:	f8c8 3000 	str.w	r3, [r8]
 800d8e2:	3601      	adds	r6, #1
 800d8e4:	2e08      	cmp	r6, #8
 800d8e6:	f105 050c 	add.w	r5, r5, #12
 800d8ea:	d194      	bne.n	800d816 <E131Bridge::HandleDmxIn()+0x12>
 800d8ec:	b005      	add	sp, #20
 800d8ee:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d8f2:	9b03      	ldr	r3, [sp, #12]
 800d8f4:	2b00      	cmp	r3, #0
 800d8f6:	d1f4      	bne.n	800d8e2 <E131Bridge::HandleDmxIn()+0xde>
 800d8f8:	2201      	movs	r2, #1
 800d8fa:	6839      	ldr	r1, [r7, #0]
 800d8fc:	fa02 f306 	lsl.w	r3, r2, r6
 800d900:	ea21 0103 	bic.w	r1, r1, r3
 800d904:	6039      	str	r1, [r7, #0]
 800d906:	fab3 f383 	clz	r3, r3
 800d90a:	b2db      	uxtb	r3, r3
 800d90c:	3b17      	subs	r3, #23
 800d90e:	4093      	lsls	r3, r2
 800d910:	fa02 f303 	lsl.w	r3, r2, r3
 800d914:	f8d8 2000 	ldr.w	r2, [r8]
 800d918:	ea22 0203 	bic.w	r2, r2, r3
 800d91c:	f482 1260 	eor.w	r2, r2, #3670016	; 0x380000
 800d920:	f8c8 2000 	str.w	r2, [r8]
 800d924:	2900      	cmp	r1, #0
 800d926:	d1dc      	bne.n	800d8e2 <E131Bridge::HandleDmxIn()+0xde>
 800d928:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800d92c:	f023 0301 	bic.w	r3, r3, #1
 800d930:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 800d934:	e7d5      	b.n	800d8e2 <E131Bridge::HandleDmxIn()+0xde>
 800d936:	bf00      	nop
 800d938:	20003150 	andcs	r3, r0, r0, asr r1
 800d93c:	20013dec 	andcs	r3, r1, ip, ror #27

0800d940 <E131Bridge::HandleSynchronization()>:
 800d940:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d944:	f8b0 30a9 	ldrh.w	r3, [r0, #169]	; 0xa9
 800d948:	f8b0 2506 	ldrh.w	r2, [r0, #1286]	; 0x506
 800d94c:	ba5b      	rev16	r3, r3
 800d94e:	b29b      	uxth	r3, r3
 800d950:	429a      	cmp	r2, r3
 800d952:	4604      	mov	r4, r0
 800d954:	d00a      	beq.n	800d96c <E131Bridge::HandleSynchronization()+0x2c>
 800d956:	f8b0 2508 	ldrh.w	r2, [r0, #1288]	; 0x508
 800d95a:	429a      	cmp	r2, r3
 800d95c:	d006      	beq.n	800d96c <E131Bridge::HandleSynchronization()+0x2c>
 800d95e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d962:	4b23      	ldr	r3, [pc, #140]	; (800d9f0 <E131Bridge::HandleSynchronization()+0xb0>)
 800d964:	2102      	movs	r1, #2
 800d966:	6818      	ldr	r0, [r3, #0]
 800d968:	f007 bfe4 	b.w	8015934 <LedBlink::SetMode(ledblink::Mode)>
 800d96c:	2500      	movs	r5, #0
 800d96e:	4627      	mov	r7, r4
 800d970:	46a9      	mov	r9, r5
 800d972:	68e3      	ldr	r3, [r4, #12]
 800d974:	4e1f      	ldr	r6, [pc, #124]	; (800d9f4 <E131Bridge::HandleSynchronization()+0xb4>)
 800d976:	f8df 8080 	ldr.w	r8, [pc, #128]	; 800d9f8 <E131Bridge::HandleSynchronization()+0xb8>
 800d97a:	f8c4 34fc 	str.w	r3, [r4, #1276]	; 0x4fc
 800d97e:	f897 3512 	ldrb.w	r3, [r7, #1298]	; 0x512
 800d982:	b323      	cbz	r3, 800d9ce <E131Bridge::HandleSynchronization()+0x8e>
 800d984:	f8d8 3000 	ldr.w	r3, [r8]
 800d988:	6860      	ldr	r0, [r4, #4]
 800d98a:	07da      	lsls	r2, r3, #31
 800d98c:	bf5c      	itt	pl
 800d98e:	2301      	movpl	r3, #1
 800d990:	f8c8 3000 	strpl.w	r3, [r8]
 800d994:	6803      	ldr	r3, [r0, #0]
 800d996:	4629      	mov	r1, r5
 800d998:	f8d3 a010 	ldr.w	sl, [r3, #16]
 800d99c:	f506 6280 	add.w	r2, r6, #1024	; 0x400
 800d9a0:	f8d6 3600 	ldr.w	r3, [r6, #1536]	; 0x600
 800d9a4:	47d0      	blx	sl
 800d9a6:	f897 3552 	ldrb.w	r3, [r7, #1362]	; 0x552
 800d9aa:	b93b      	cbnz	r3, 800d9bc <E131Bridge::HandleSynchronization()+0x7c>
 800d9ac:	6860      	ldr	r0, [r4, #4]
 800d9ae:	4629      	mov	r1, r5
 800d9b0:	6803      	ldr	r3, [r0, #0]
 800d9b2:	689b      	ldr	r3, [r3, #8]
 800d9b4:	4798      	blx	r3
 800d9b6:	2301      	movs	r3, #1
 800d9b8:	f887 3552 	strb.w	r3, [r7, #1362]	; 0x552
 800d9bc:	f8d8 3000 	ldr.w	r3, [r8]
 800d9c0:	f8c6 9600 	str.w	r9, [r6, #1536]	; 0x600
 800d9c4:	07db      	lsls	r3, r3, #31
 800d9c6:	bf5c      	itt	pl
 800d9c8:	2301      	movpl	r3, #1
 800d9ca:	f8c8 3000 	strpl.w	r3, [r8]
 800d9ce:	3501      	adds	r5, #1
 800d9d0:	2d08      	cmp	r5, #8
 800d9d2:	f107 0744 	add.w	r7, r7, #68	; 0x44
 800d9d6:	f206 6604 	addw	r6, r6, #1540	; 0x604
 800d9da:	d1d0      	bne.n	800d97e <E131Bridge::HandleSynchronization()+0x3e>
 800d9dc:	6f60      	ldr	r0, [r4, #116]	; 0x74
 800d9de:	b120      	cbz	r0, 800d9ea <E131Bridge::HandleSynchronization()+0xaa>
 800d9e0:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d9e4:	6803      	ldr	r3, [r0, #0]
 800d9e6:	689b      	ldr	r3, [r3, #8]
 800d9e8:	4718      	bx	r3
 800d9ea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d9ee:	bf00      	nop
 800d9f0:	20013de0 	andcs	r3, r1, r0, ror #27
 800d9f4:	2000011c 	andcs	r0, r0, ip, lsl r1
 800d9f8:	20000118 	andcs	r0, r0, r8, lsl r1

0800d9fc <E131Bridge::Print()>:
 800d9fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800da00:	2500      	movs	r5, #0
 800da02:	4604      	mov	r4, r0
 800da04:	b08c      	sub	sp, #48	; 0x30
 800da06:	a902      	add	r1, sp, #8
 800da08:	3024      	adds	r0, #36	; 0x24
 800da0a:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800da0e:	f001 faf3 	bl	800eff8 <uuid_unparse>
 800da12:	482c      	ldr	r0, [pc, #176]	; (800dac4 <E131Bridge::Print()+0xc8>)
 800da14:	f7fb fac4 	bl	8008fa0 <printf>
 800da18:	4b2b      	ldr	r3, [pc, #172]	; (800dac8 <E131Bridge::Print()+0xcc>)
 800da1a:	482c      	ldr	r0, [pc, #176]	; (800dacc <E131Bridge::Print()+0xd0>)
 800da1c:	7819      	ldrb	r1, [r3, #0]
 800da1e:	785a      	ldrb	r2, [r3, #1]
 800da20:	f7fb fabe 	bl	8008fa0 <printf>
 800da24:	482a      	ldr	r0, [pc, #168]	; (800dad0 <E131Bridge::Print()+0xd4>)
 800da26:	a902      	add	r1, sp, #8
 800da28:	f7fb faba 	bl	8008fa0 <printf>
 800da2c:	f894 350b 	ldrb.w	r3, [r4, #1291]	; 0x50b
 800da30:	b303      	cbz	r3, 800da74 <E131Bridge::Print()+0x78>
 800da32:	4828      	ldr	r0, [pc, #160]	; (800dad4 <E131Bridge::Print()+0xd8>)
 800da34:	f7fb fab4 	bl	8008fa0 <printf>
 800da38:	4e27      	ldr	r6, [pc, #156]	; (800dad8 <E131Bridge::Print()+0xdc>)
 800da3a:	4f28      	ldr	r7, [pc, #160]	; (800dadc <E131Bridge::Print()+0xe0>)
 800da3c:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 800dae0 <E131Bridge::Print()+0xe4>
 800da40:	2301      	movs	r3, #1
 800da42:	4629      	mov	r1, r5
 800da44:	4620      	mov	r0, r4
 800da46:	f10d 0206 	add.w	r2, sp, #6
 800da4a:	f7ff fa5b 	bl	800cf04 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 800da4e:	b170      	cbz	r0, 800da6e <E131Bridge::Print()+0x72>
 800da50:	2344      	movs	r3, #68	; 0x44
 800da52:	436b      	muls	r3, r5
 800da54:	f204 524c 	addw	r2, r4, #1356	; 0x54c
 800da58:	58d3      	ldr	r3, [r2, r3]
 800da5a:	4629      	mov	r1, r5
 800da5c:	2b00      	cmp	r3, #0
 800da5e:	bf0c      	ite	eq
 800da60:	4633      	moveq	r3, r6
 800da62:	463b      	movne	r3, r7
 800da64:	4640      	mov	r0, r8
 800da66:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800da6a:	f7fb fa99 	bl	8008fa0 <printf>
 800da6e:	3501      	adds	r5, #1
 800da70:	2d08      	cmp	r5, #8
 800da72:	d1e5      	bne.n	800da40 <E131Bridge::Print()+0x44>
 800da74:	f894 350a 	ldrb.w	r3, [r4, #1290]	; 0x50a
 800da78:	b1d3      	cbz	r3, 800dab0 <E131Bridge::Print()+0xb4>
 800da7a:	481a      	ldr	r0, [pc, #104]	; (800dae4 <E131Bridge::Print()+0xe8>)
 800da7c:	f7fb fa90 	bl	8008fa0 <printf>
 800da80:	2500      	movs	r5, #0
 800da82:	4e19      	ldr	r6, [pc, #100]	; (800dae8 <E131Bridge::Print()+0xec>)
 800da84:	2300      	movs	r3, #0
 800da86:	4629      	mov	r1, r5
 800da88:	4620      	mov	r0, r4
 800da8a:	f10d 0206 	add.w	r2, sp, #6
 800da8e:	f7ff fa39 	bl	800cf04 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 800da92:	b150      	cbz	r0, 800daaa <E131Bridge::Print()+0xae>
 800da94:	230c      	movs	r3, #12
 800da96:	436b      	muls	r3, r5
 800da98:	f204 7239 	addw	r2, r4, #1849	; 0x739
 800da9c:	5cd3      	ldrb	r3, [r2, r3]
 800da9e:	4629      	mov	r1, r5
 800daa0:	4630      	mov	r0, r6
 800daa2:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800daa6:	f7fb fa7b 	bl	8008fa0 <printf>
 800daaa:	3501      	adds	r5, #1
 800daac:	2d08      	cmp	r5, #8
 800daae:	d1e9      	bne.n	800da84 <E131Bridge::Print()+0x88>
 800dab0:	f894 34fb 	ldrb.w	r3, [r4, #1275]	; 0x4fb
 800dab4:	b113      	cbz	r3, 800dabc <E131Bridge::Print()+0xc0>
 800dab6:	480d      	ldr	r0, [pc, #52]	; (800daec <E131Bridge::Print()+0xf0>)
 800dab8:	f7fb fa72 	bl	8008fa0 <printf>
 800dabc:	b00c      	add	sp, #48	; 0x30
 800dabe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800dac2:	bf00      	nop
 800dac4:	0801946b 	stmdaeq	r1, {r0, r1, r3, r5, r6, sl, ip, pc}
 800dac8:	080194fa 	stmdaeq	r1, {r1, r3, r4, r5, r6, r7, sl, ip, pc}
 800dacc:	08019473 	stmdaeq	r1, {r0, r1, r4, r5, r6, sl, ip, pc}
 800dad0:	08019486 	stmdaeq	r1, {r1, r2, r7, sl, ip, pc}
 800dad4:	08019227 	stmdaeq	r1, {r0, r1, r2, r5, r9, ip, pc}
 800dad8:	080191cb 	stmdaeq	r1, {r0, r1, r3, r6, r7, r8, ip, pc}
 800dadc:	080191cf 	stmdaeq	r1, {r0, r1, r2, r3, r6, r7, r8, ip, pc}
 800dae0:	08019496 	stmdaeq	r1, {r1, r2, r4, r7, sl, ip, pc}
 800dae4:	0801925f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r9, ip, pc}
 800dae8:	080194b5 	stmdaeq	r1, {r0, r2, r4, r5, r7, sl, ip, pc}
 800daec:	080194d4 	stmdaeq	r1, {r2, r4, r6, r7, sl, ip, pc}

0800daf0 <LLRPDevice::~LLRPDevice()>:
 800daf0:	4770      	bx	lr

0800daf2 <LLRPDevice::CopyUID(unsigned char*)>:
 800daf2:	4770      	bx	lr

0800daf4 <LLRPDevice::CopyCID(unsigned char*)>:
 800daf4:	4770      	bx	lr

0800daf6 <LLRPDevice::LLRPHandleRdmCommand(unsigned char const*)>:
 800daf6:	2000      	movs	r0, #0
 800daf8:	4770      	bx	lr

0800dafa <LLRPDevice::~LLRPDevice()>:
 800dafa:	b510      	push	{r4, lr}
 800dafc:	4604      	mov	r4, r0
 800dafe:	f008 f83f 	bl	8015b80 <operator delete(void*)>
 800db02:	4620      	mov	r0, r4
 800db04:	bd10      	pop	{r4, pc}

0800db06 <memcpy.isra.0>:
 800db06:	3801      	subs	r0, #1
 800db08:	440a      	add	r2, r1
 800db0a:	4291      	cmp	r1, r2
 800db0c:	d004      	beq.n	800db18 <memcpy.isra.0+0x12>
 800db0e:	f811 3b01 	ldrb.w	r3, [r1], #1
 800db12:	f800 3f01 	strb.w	r3, [r0, #1]!
 800db16:	e7f8      	b.n	800db0a <memcpy.isra.0+0x4>
 800db18:	4770      	bx	lr
	...

0800db1c <LLRPDevice::LLRPDevice()>:
 800db1c:	b513      	push	{r0, r1, r4, lr}
 800db1e:	4604      	mov	r4, r0
 800db20:	4b09      	ldr	r3, [pc, #36]	; (800db48 <LLRPDevice::LLRPDevice()+0x2c>)
 800db22:	a901      	add	r1, sp, #4
 800db24:	6003      	str	r3, [r0, #0]
 800db26:	4809      	ldr	r0, [pc, #36]	; (800db4c <LLRPDevice::LLRPDevice()+0x30>)
 800db28:	f008 f832 	bl	8015b90 <inet_aton>
 800db2c:	9a01      	ldr	r2, [sp, #4]
 800db2e:	4b08      	ldr	r3, [pc, #32]	; (800db50 <LLRPDevice::LLRPDevice()+0x34>)
 800db30:	a901      	add	r1, sp, #4
 800db32:	4808      	ldr	r0, [pc, #32]	; (800db54 <LLRPDevice::LLRPDevice()+0x38>)
 800db34:	601a      	str	r2, [r3, #0]
 800db36:	f008 f82b 	bl	8015b90 <inet_aton>
 800db3a:	4620      	mov	r0, r4
 800db3c:	4b06      	ldr	r3, [pc, #24]	; (800db58 <LLRPDevice::LLRPDevice()+0x3c>)
 800db3e:	9a01      	ldr	r2, [sp, #4]
 800db40:	601a      	str	r2, [r3, #0]
 800db42:	b002      	add	sp, #8
 800db44:	bd10      	pop	{r4, pc}
 800db46:	bf00      	nop
 800db48:	080195ac 	stmdaeq	r1, {r2, r3, r5, r7, r8, sl, ip, pc}
 800db4c:	080194fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, sl, ip, pc}
 800db50:	20003158 	andcs	r3, r0, r8, asr r1
 800db54:	0801950c 	stmdaeq	r1, {r2, r3, r8, sl, ip, pc}
 800db58:	2000315c 	andcs	r3, r0, ip, asr r1

0800db5c <LLRPDevice::HandleRequestMessage()>:
 800db5c:	b570      	push	{r4, r5, r6, lr}
 800db5e:	4b23      	ldr	r3, [pc, #140]	; (800dbec <LLRPDevice::HandleRequestMessage()+0x90>)
 800db60:	b086      	sub	sp, #24
 800db62:	681c      	ldr	r4, [r3, #0]
 800db64:	4605      	mov	r5, r0
 800db66:	f104 0617 	add.w	r6, r4, #23
 800db6a:	2210      	movs	r2, #16
 800db6c:	4631      	mov	r1, r6
 800db6e:	a802      	add	r0, sp, #8
 800db70:	f7ff ffc9 	bl	800db06 <memcpy.isra.0>
 800db74:	2343      	movs	r3, #67	; 0x43
 800db76:	74a3      	strb	r3, [r4, #18]
 800db78:	682b      	ldr	r3, [r5, #0]
 800db7a:	4631      	mov	r1, r6
 800db7c:	4628      	mov	r0, r5
 800db7e:	68db      	ldr	r3, [r3, #12]
 800db80:	4798      	blx	r3
 800db82:	232c      	movs	r3, #44	; 0x2c
 800db84:	f884 3029 	strb.w	r3, [r4, #41]	; 0x29
 800db88:	2300      	movs	r3, #0
 800db8a:	f884 302a 	strb.w	r3, [r4, #42]	; 0x2a
 800db8e:	f884 302b 	strb.w	r3, [r4, #43]	; 0x2b
 800db92:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 800db96:	2302      	movs	r3, #2
 800db98:	2210      	movs	r2, #16
 800db9a:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 800db9e:	a902      	add	r1, sp, #8
 800dba0:	f104 002e 	add.w	r0, r4, #46	; 0x2e
 800dba4:	f7ff ffaf 	bl	800db06 <memcpy.isra.0>
 800dba8:	2311      	movs	r3, #17
 800dbaa:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800dbae:	2301      	movs	r3, #1
 800dbb0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800dbb4:	682b      	ldr	r3, [r5, #0]
 800dbb6:	4628      	mov	r0, r5
 800dbb8:	f104 0146 	add.w	r1, r4, #70	; 0x46
 800dbbc:	689b      	ldr	r3, [r3, #8]
 800dbbe:	4798      	blx	r3
 800dbc0:	4b0b      	ldr	r3, [pc, #44]	; (800dbf0 <LLRPDevice::HandleRequestMessage()+0x94>)
 800dbc2:	f104 014c 	add.w	r1, r4, #76	; 0x4c
 800dbc6:	6818      	ldr	r0, [r3, #0]
 800dbc8:	f004 ffba 	bl	8012b40 <Network::MacAddressCopyTo(unsigned char*)>
 800dbcc:	23ff      	movs	r3, #255	; 0xff
 800dbce:	f884 3052 	strb.w	r3, [r4, #82]	; 0x52
 800dbd2:	f241 53c1 	movw	r3, #5569	; 0x15c1
 800dbd6:	4807      	ldr	r0, [pc, #28]	; (800dbf4 <LLRPDevice::HandleRequestMessage()+0x98>)
 800dbd8:	9300      	str	r3, [sp, #0]
 800dbda:	4b07      	ldr	r3, [pc, #28]	; (800dbf8 <LLRPDevice::HandleRequestMessage()+0x9c>)
 800dbdc:	2253      	movs	r2, #83	; 0x53
 800dbde:	4621      	mov	r1, r4
 800dbe0:	681b      	ldr	r3, [r3, #0]
 800dbe2:	7800      	ldrb	r0, [r0, #0]
 800dbe4:	f004 fad6 	bl	8012194 <udp_send>
 800dbe8:	b006      	add	sp, #24
 800dbea:	bd70      	pop	{r4, r5, r6, pc}
 800dbec:	20003160 	andcs	r3, r0, r0, ror #2
 800dbf0:	200136bc 			; <UNDEFINED> instruction: 0x200136bc
 800dbf4:	20000000 	andcs	r0, r0, r0
 800dbf8:	2000315c 	andcs	r3, r0, ip, asr r1

0800dbfc <LLRPDevice::HandleRdmCommand()>:
 800dbfc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800dc00:	4b22      	ldr	r3, [pc, #136]	; (800dc8c <LLRPDevice::HandleRdmCommand()+0x90>)
 800dc02:	b086      	sub	sp, #24
 800dc04:	681c      	ldr	r4, [r3, #0]
 800dc06:	6803      	ldr	r3, [r0, #0]
 800dc08:	f104 0946 	add.w	r9, r4, #70	; 0x46
 800dc0c:	4649      	mov	r1, r9
 800dc0e:	691b      	ldr	r3, [r3, #16]
 800dc10:	4607      	mov	r7, r0
 800dc12:	4798      	blx	r3
 800dc14:	4605      	mov	r5, r0
 800dc16:	2800      	cmp	r0, #0
 800dc18:	d034      	beq.n	800dc84 <LLRPDevice::HandleRdmCommand()+0x88>
 800dc1a:	7803      	ldrb	r3, [r0, #0]
 800dc1c:	2bcc      	cmp	r3, #204	; 0xcc
 800dc1e:	d131      	bne.n	800dc84 <LLRPDevice::HandleRdmCommand()+0x88>
 800dc20:	f104 0a17 	add.w	sl, r4, #23
 800dc24:	2210      	movs	r2, #16
 800dc26:	4651      	mov	r1, sl
 800dc28:	a802      	add	r0, sp, #8
 800dc2a:	f7ff ff6c 	bl	800db06 <memcpy.isra.0>
 800dc2e:	78ae      	ldrb	r6, [r5, #2]
 800dc30:	4651      	mov	r1, sl
 800dc32:	f106 0837 	add.w	r8, r6, #55	; 0x37
 800dc36:	fa5f f888 	uxtb.w	r8, r8
 800dc3a:	f884 8012 	strb.w	r8, [r4, #18]
 800dc3e:	683b      	ldr	r3, [r7, #0]
 800dc40:	4638      	mov	r0, r7
 800dc42:	68db      	ldr	r3, [r3, #12]
 800dc44:	4798      	blx	r3
 800dc46:	f106 0320 	add.w	r3, r6, #32
 800dc4a:	2210      	movs	r2, #16
 800dc4c:	f884 3029 	strb.w	r3, [r4, #41]	; 0x29
 800dc50:	a902      	add	r1, sp, #8
 800dc52:	f104 002e 	add.w	r0, r4, #46	; 0x2e
 800dc56:	f7ff ff56 	bl	800db06 <memcpy.isra.0>
 800dc5a:	1d73      	adds	r3, r6, #5
 800dc5c:	1c72      	adds	r2, r6, #1
 800dc5e:	4648      	mov	r0, r9
 800dc60:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800dc64:	b2d2      	uxtb	r2, r2
 800dc66:	1c69      	adds	r1, r5, #1
 800dc68:	f7ff ff4d 	bl	800db06 <memcpy.isra.0>
 800dc6c:	f241 53c1 	movw	r3, #5569	; 0x15c1
 800dc70:	4807      	ldr	r0, [pc, #28]	; (800dc90 <LLRPDevice::HandleRdmCommand()+0x94>)
 800dc72:	9300      	str	r3, [sp, #0]
 800dc74:	4b07      	ldr	r3, [pc, #28]	; (800dc94 <LLRPDevice::HandleRdmCommand()+0x98>)
 800dc76:	4621      	mov	r1, r4
 800dc78:	681b      	ldr	r3, [r3, #0]
 800dc7a:	7800      	ldrb	r0, [r0, #0]
 800dc7c:	f108 0210 	add.w	r2, r8, #16
 800dc80:	f004 fa88 	bl	8012194 <udp_send>
 800dc84:	b006      	add	sp, #24
 800dc86:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800dc8a:	bf00      	nop
 800dc8c:	20003160 	andcs	r3, r0, r0, ror #2
 800dc90:	20000000 	andcs	r0, r0, r0
 800dc94:	2000315c 	andcs	r3, r0, ip, asr r1

0800dc98 <LLRPDevice::Run()>:
 800dc98:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800dc9a:	4604      	mov	r4, r0
 800dc9c:	4d0e      	ldr	r5, [pc, #56]	; (800dcd8 <LLRPDevice::Run()+0x40>)
 800dc9e:	480f      	ldr	r0, [pc, #60]	; (800dcdc <LLRPDevice::Run()+0x44>)
 800dca0:	4629      	mov	r1, r5
 800dca2:	4a0f      	ldr	r2, [pc, #60]	; (800dce0 <LLRPDevice::Run()+0x48>)
 800dca4:	7800      	ldrb	r0, [r0, #0]
 800dca6:	f10d 0306 	add.w	r3, sp, #6
 800dcaa:	f004 fa4d 	bl	8012148 <udp_recv2>
 800dcae:	2841      	cmp	r0, #65	; 0x41
 800dcb0:	d908      	bls.n	800dcc4 <LLRPDevice::Run()+0x2c>
 800dcb2:	682b      	ldr	r3, [r5, #0]
 800dcb4:	f8d3 302a 	ldr.w	r3, [r3, #42]	; 0x2a
 800dcb8:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800dcbc:	ba1a      	rev	r2, r3
 800dcbe:	d003      	beq.n	800dcc8 <LLRPDevice::Run()+0x30>
 800dcc0:	2a03      	cmp	r2, #3
 800dcc2:	d005      	beq.n	800dcd0 <LLRPDevice::Run()+0x38>
 800dcc4:	b003      	add	sp, #12
 800dcc6:	bd30      	pop	{r4, r5, pc}
 800dcc8:	4620      	mov	r0, r4
 800dcca:	f7ff ff47 	bl	800db5c <LLRPDevice::HandleRequestMessage()>
 800dcce:	e7f9      	b.n	800dcc4 <LLRPDevice::Run()+0x2c>
 800dcd0:	4620      	mov	r0, r4
 800dcd2:	f7ff ff93 	bl	800dbfc <LLRPDevice::HandleRdmCommand()>
 800dcd6:	e7f5      	b.n	800dcc4 <LLRPDevice::Run()+0x2c>
 800dcd8:	20003160 	andcs	r3, r0, r0, ror #2
 800dcdc:	20000000 	andcs	r0, r0, r0
 800dce0:	20003154 	andcs	r3, r0, r4, asr r1

0800dce4 <LLRPDevice::Print()>:
 800dce4:	b507      	push	{r0, r1, r2, lr}
 800dce6:	4811      	ldr	r0, [pc, #68]	; (800dd2c <LLRPDevice::Print()+0x48>)
 800dce8:	f7fb f95a 	bl	8008fa0 <printf>
 800dcec:	f241 51c1 	movw	r1, #5569	; 0x15c1
 800dcf0:	480f      	ldr	r0, [pc, #60]	; (800dd30 <LLRPDevice::Print()+0x4c>)
 800dcf2:	f7fb f955 	bl	8008fa0 <printf>
 800dcf6:	4b0f      	ldr	r3, [pc, #60]	; (800dd34 <LLRPDevice::Print()+0x50>)
 800dcf8:	480f      	ldr	r0, [pc, #60]	; (800dd38 <LLRPDevice::Print()+0x54>)
 800dcfa:	6819      	ldr	r1, [r3, #0]
 800dcfc:	0e0b      	lsrs	r3, r1, #24
 800dcfe:	9300      	str	r3, [sp, #0]
 800dd00:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800dd04:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800dd08:	b2c9      	uxtb	r1, r1
 800dd0a:	f7fb f949 	bl	8008fa0 <printf>
 800dd0e:	4b0b      	ldr	r3, [pc, #44]	; (800dd3c <LLRPDevice::Print()+0x58>)
 800dd10:	480b      	ldr	r0, [pc, #44]	; (800dd40 <LLRPDevice::Print()+0x5c>)
 800dd12:	6819      	ldr	r1, [r3, #0]
 800dd14:	0e0b      	lsrs	r3, r1, #24
 800dd16:	9300      	str	r3, [sp, #0]
 800dd18:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800dd1c:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800dd20:	b2c9      	uxtb	r1, r1
 800dd22:	f7fb f93d 	bl	8008fa0 <printf>
 800dd26:	b003      	add	sp, #12
 800dd28:	f85d fb04 	ldr.w	pc, [sp], #4
 800dd2c:	0801951c 	stmdaeq	r1, {r2, r3, r4, r8, sl, ip, pc}
 800dd30:	08019537 	stmdaeq	r1, {r0, r1, r2, r4, r5, r8, sl, ip, pc}
 800dd34:	20003158 	andcs	r3, r0, r8, asr r1
 800dd38:	08019555 	stmdaeq	r1, {r0, r2, r4, r6, r8, sl, ip, pc}
 800dd3c:	2000315c 	andcs	r3, r0, ip, asr r1
 800dd40:	0801957c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r8, sl, ip, pc}

0800dd44 <RDMNetDevice::Print()>:
 800dd44:	2300      	movs	r3, #0
 800dd46:	b510      	push	{r4, lr}
 800dd48:	4604      	mov	r4, r0
 800dd4a:	b08a      	sub	sp, #40	; 0x28
 800dd4c:	4669      	mov	r1, sp
 800dd4e:	480a      	ldr	r0, [pc, #40]	; (800dd78 <RDMNetDevice::Print()+0x34>)
 800dd50:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800dd54:	f001 f950 	bl	800eff8 <uuid_unparse>
 800dd58:	4808      	ldr	r0, [pc, #32]	; (800dd7c <RDMNetDevice::Print()+0x38>)
 800dd5a:	f7fb f921 	bl	8008fa0 <printf>
 800dd5e:	4669      	mov	r1, sp
 800dd60:	4807      	ldr	r0, [pc, #28]	; (800dd80 <RDMNetDevice::Print()+0x3c>)
 800dd62:	f7fb f91d 	bl	8008fa0 <printf>
 800dd66:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 800dd6a:	f7ff ffbb 	bl	800dce4 <LLRPDevice::Print()>
 800dd6e:	4620      	mov	r0, r4
 800dd70:	f000 fa64 	bl	800e23c <RDMDeviceResponder::Print()>
 800dd74:	b00a      	add	sp, #40	; 0x28
 800dd76:	bd10      	pop	{r4, pc}
 800dd78:	20003263 	andcs	r3, r0, r3, ror #4
 800dd7c:	080195c0 	stmdaeq	r1, {r6, r7, r8, sl, ip, pc}
 800dd80:	080195c8 	stmdaeq	r1, {r3, r6, r7, r8, sl, ip, pc}

0800dd84 <RDMSensors::RDMSensors()>:
 800dd84:	2200      	movs	r2, #0
 800dd86:	6002      	str	r2, [r0, #0]
 800dd88:	7102      	strb	r2, [r0, #4]
 800dd8a:	4a01      	ldr	r2, [pc, #4]	; (800dd90 <RDMSensors::RDMSensors()+0xc>)
 800dd8c:	6010      	str	r0, [r2, #0]
 800dd8e:	4770      	bx	lr
 800dd90:	20003274 	andcs	r3, r0, r4, ror r2

0800dd94 <RDMSensors::~RDMSensors()>:
 800dd94:	b570      	push	{r4, r5, r6, lr}
 800dd96:	2500      	movs	r5, #0
 800dd98:	4604      	mov	r4, r0
 800dd9a:	462e      	mov	r6, r5
 800dd9c:	7923      	ldrb	r3, [r4, #4]
 800dd9e:	6820      	ldr	r0, [r4, #0]
 800dda0:	42ab      	cmp	r3, r5
 800dda2:	d90a      	bls.n	800ddba <RDMSensors::~RDMSensors()+0x26>
 800dda4:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 800dda8:	b128      	cbz	r0, 800ddb6 <RDMSensors::~RDMSensors()+0x22>
 800ddaa:	6803      	ldr	r3, [r0, #0]
 800ddac:	685b      	ldr	r3, [r3, #4]
 800ddae:	4798      	blx	r3
 800ddb0:	6823      	ldr	r3, [r4, #0]
 800ddb2:	f843 6025 	str.w	r6, [r3, r5, lsl #2]
 800ddb6:	3501      	adds	r5, #1
 800ddb8:	e7f0      	b.n	800dd9c <RDMSensors::~RDMSensors()+0x8>
 800ddba:	b108      	cbz	r0, 800ddc0 <RDMSensors::~RDMSensors()+0x2c>
 800ddbc:	f007 fee2 	bl	8015b84 <operator delete[](void*)>
 800ddc0:	4620      	mov	r0, r4
 800ddc2:	bd70      	pop	{r4, r5, r6, pc}

0800ddc4 <RDMSubDevices::RDMSubDevices()>:
 800ddc4:	2200      	movs	r2, #0
 800ddc6:	6002      	str	r2, [r0, #0]
 800ddc8:	8082      	strh	r2, [r0, #4]
 800ddca:	4a01      	ldr	r2, [pc, #4]	; (800ddd0 <RDMSubDevices::RDMSubDevices()+0xc>)
 800ddcc:	6010      	str	r0, [r2, #0]
 800ddce:	4770      	bx	lr
 800ddd0:	20003278 	andcs	r3, r0, r8, ror r2

0800ddd4 <RDMSubDevices::~RDMSubDevices()>:
 800ddd4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ddd6:	2500      	movs	r5, #0
 800ddd8:	4604      	mov	r4, r0
 800ddda:	462f      	mov	r7, r5
 800dddc:	88a3      	ldrh	r3, [r4, #4]
 800ddde:	6820      	ldr	r0, [r4, #0]
 800dde0:	42ab      	cmp	r3, r5
 800dde2:	d90a      	bls.n	800ddfa <RDMSubDevices::~RDMSubDevices()+0x26>
 800dde4:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 800dde8:	00ae      	lsls	r6, r5, #2
 800ddea:	b110      	cbz	r0, 800ddf2 <RDMSubDevices::~RDMSubDevices()+0x1e>
 800ddec:	6803      	ldr	r3, [r0, #0]
 800ddee:	685b      	ldr	r3, [r3, #4]
 800ddf0:	4798      	blx	r3
 800ddf2:	6823      	ldr	r3, [r4, #0]
 800ddf4:	3501      	adds	r5, #1
 800ddf6:	519f      	str	r7, [r3, r6]
 800ddf8:	e7f0      	b.n	800dddc <RDMSubDevices::~RDMSubDevices()+0x8>
 800ddfa:	b108      	cbz	r0, 800de00 <RDMSubDevices::~RDMSubDevices()+0x2c>
 800ddfc:	f007 fec2 	bl	8015b84 <operator delete[](void*)>
 800de00:	4620      	mov	r0, r4
 800de02:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800de04 <RDMSubDevices::GetInfo(unsigned short)>:
 800de04:	6803      	ldr	r3, [r0, #0]
 800de06:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 800de0a:	3901      	subs	r1, #1
 800de0c:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800de10:	3010      	adds	r0, #16
 800de12:	4770      	bx	lr

0800de14 <RDMSubDevices::GetLabel(unsigned short, TRDMDeviceInfoData*)>:
 800de14:	f101 4380 	add.w	r3, r1, #1073741824	; 0x40000000
 800de18:	6800      	ldr	r0, [r0, #0]
 800de1a:	3b01      	subs	r3, #1
 800de1c:	4611      	mov	r1, r2
 800de1e:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 800de22:	f000 b82f 	b.w	800de84 <RDMSubDevice::GetLabel(TRDMDeviceInfoData*)>

0800de26 <RDMSubDevices::SetLabel(unsigned short, char const*, unsigned char)>:
 800de26:	b410      	push	{r4}
 800de28:	460c      	mov	r4, r1
 800de2a:	6800      	ldr	r0, [r0, #0]
 800de2c:	f104 4480 	add.w	r4, r4, #1073741824	; 0x40000000
 800de30:	3c01      	subs	r4, #1
 800de32:	4611      	mov	r1, r2
 800de34:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
 800de38:	461a      	mov	r2, r3
 800de3a:	bc10      	pop	{r4}
 800de3c:	f000 b837 	b.w	800deae <RDMSubDevice::SetLabel(char const*, unsigned char)>

0800de40 <RDMSubDevices::GetFactoryDefaults()>:
 800de40:	b538      	push	{r3, r4, r5, lr}
 800de42:	4605      	mov	r5, r0
 800de44:	2400      	movs	r4, #0
 800de46:	88ab      	ldrh	r3, [r5, #4]
 800de48:	42a3      	cmp	r3, r4
 800de4a:	d90a      	bls.n	800de62 <RDMSubDevices::GetFactoryDefaults()+0x22>
 800de4c:	682b      	ldr	r3, [r5, #0]
 800de4e:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 800de52:	b908      	cbnz	r0, 800de58 <RDMSubDevices::GetFactoryDefaults()+0x18>
 800de54:	3401      	adds	r4, #1
 800de56:	e7f6      	b.n	800de46 <RDMSubDevices::GetFactoryDefaults()+0x6>
 800de58:	f000 f85e 	bl	800df18 <RDMSubDevice::GetFactoryDefaults()>
 800de5c:	2800      	cmp	r0, #0
 800de5e:	d1f9      	bne.n	800de54 <RDMSubDevices::GetFactoryDefaults()+0x14>
 800de60:	bd38      	pop	{r3, r4, r5, pc}
 800de62:	2001      	movs	r0, #1
 800de64:	e7fc      	b.n	800de60 <RDMSubDevices::GetFactoryDefaults()+0x20>

0800de66 <RDMSubDevices::SetFactoryDefaults()>:
 800de66:	b538      	push	{r3, r4, r5, lr}
 800de68:	4605      	mov	r5, r0
 800de6a:	2400      	movs	r4, #0
 800de6c:	88ab      	ldrh	r3, [r5, #4]
 800de6e:	42a3      	cmp	r3, r4
 800de70:	d907      	bls.n	800de82 <RDMSubDevices::SetFactoryDefaults()+0x1c>
 800de72:	682b      	ldr	r3, [r5, #0]
 800de74:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 800de78:	b108      	cbz	r0, 800de7e <RDMSubDevices::SetFactoryDefaults()+0x18>
 800de7a:	f000 f827 	bl	800decc <RDMSubDevice::SetFactoryDefaults()>
 800de7e:	3401      	adds	r4, #1
 800de80:	e7f4      	b.n	800de6c <RDMSubDevices::SetFactoryDefaults()+0x6>
 800de82:	bd38      	pop	{r3, r4, r5, pc}

0800de84 <RDMSubDevice::GetLabel(TRDMDeviceInfoData*)>:
 800de84:	f100 0316 	add.w	r3, r0, #22
 800de88:	600b      	str	r3, [r1, #0]
 800de8a:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800de8e:	710b      	strb	r3, [r1, #4]
 800de90:	4770      	bx	lr

0800de92 <RDMSubDevice::SetLabel(char const*)>:
 800de92:	2300      	movs	r3, #0
 800de94:	b510      	push	{r4, lr}
 800de96:	f100 0216 	add.w	r2, r0, #22
 800de9a:	5ccc      	ldrb	r4, [r1, r3]
 800de9c:	b124      	cbz	r4, 800dea8 <RDMSubDevice::SetLabel(char const*)+0x16>
 800de9e:	3301      	adds	r3, #1
 800dea0:	2b20      	cmp	r3, #32
 800dea2:	f802 4b01 	strb.w	r4, [r2], #1
 800dea6:	d1f8      	bne.n	800de9a <RDMSubDevice::SetLabel(char const*)+0x8>
 800dea8:	f880 3036 	strb.w	r3, [r0, #54]	; 0x36
 800deac:	bd10      	pop	{r4, pc}

0800deae <RDMSubDevice::SetLabel(char const*, unsigned char)>:
 800deae:	2300      	movs	r3, #0
 800deb0:	b530      	push	{r4, r5, lr}
 800deb2:	f100 0416 	add.w	r4, r0, #22
 800deb6:	429a      	cmp	r2, r3
 800deb8:	d905      	bls.n	800dec6 <RDMSubDevice::SetLabel(char const*, unsigned char)+0x18>
 800deba:	5ccd      	ldrb	r5, [r1, r3]
 800debc:	3301      	adds	r3, #1
 800debe:	2b20      	cmp	r3, #32
 800dec0:	f804 5b01 	strb.w	r5, [r4], #1
 800dec4:	d1f7      	bne.n	800deb6 <RDMSubDevice::SetLabel(char const*, unsigned char)+0x8>
 800dec6:	f880 3036 	strb.w	r3, [r0, #54]	; 0x36
 800deca:	bd30      	pop	{r4, r5, pc}

0800decc <RDMSubDevice::SetFactoryDefaults()>:
 800decc:	7a03      	ldrb	r3, [r0, #8]
 800dece:	b510      	push	{r4, lr}
 800ded0:	b94b      	cbnz	r3, 800dee6 <RDMSubDevice::SetFactoryDefaults()+0x1a>
 800ded2:	f100 0138 	add.w	r1, r0, #56	; 0x38
 800ded6:	f7ff ffdc 	bl	800de92 <RDMSubDevice::SetLabel(char const*)>
 800deda:	8983      	ldrh	r3, [r0, #12]
 800dedc:	8243      	strh	r3, [r0, #18]
 800dede:	7b83      	ldrb	r3, [r0, #14]
 800dee0:	7503      	strb	r3, [r0, #20]
 800dee2:	2301      	movs	r3, #1
 800dee4:	7203      	strb	r3, [r0, #8]
 800dee6:	bd10      	pop	{r4, pc}

0800dee8 <RDMSubDevice::CalculateChecksum()>:
 800dee8:	4602      	mov	r2, r0
 800deea:	b510      	push	{r4, lr}
 800deec:	8a43      	ldrh	r3, [r0, #18]
 800deee:	7d00      	ldrb	r0, [r0, #20]
 800def0:	f892 4036 	ldrb.w	r4, [r2, #54]	; 0x36
 800def4:	4403      	add	r3, r0
 800def6:	b298      	uxth	r0, r3
 800def8:	f102 0316 	add.w	r3, r2, #22
 800defc:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
 800df00:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
 800df04:	32ea      	adds	r2, #234	; 0xea
 800df06:	18d1      	adds	r1, r2, r3
 800df08:	428c      	cmp	r4, r1
 800df0a:	d904      	bls.n	800df16 <RDMSubDevice::CalculateChecksum()+0x2e>
 800df0c:	f813 1b01 	ldrb.w	r1, [r3], #1
 800df10:	4408      	add	r0, r1
 800df12:	b280      	uxth	r0, r0
 800df14:	e7f7      	b.n	800df06 <RDMSubDevice::CalculateChecksum()+0x1e>
 800df16:	bd10      	pop	{r4, pc}

0800df18 <RDMSubDevice::GetFactoryDefaults()>:
 800df18:	7a03      	ldrb	r3, [r0, #8]
 800df1a:	b510      	push	{r4, lr}
 800df1c:	4604      	mov	r4, r0
 800df1e:	b133      	cbz	r3, 800df2e <RDMSubDevice::GetFactoryDefaults()+0x16>
 800df20:	f7ff ffe2 	bl	800dee8 <RDMSubDevice::CalculateChecksum()>
 800df24:	8963      	ldrh	r3, [r4, #10]
 800df26:	4283      	cmp	r3, r0
 800df28:	bf1c      	itt	ne
 800df2a:	2300      	movne	r3, #0
 800df2c:	7223      	strbne	r3, [r4, #8]
 800df2e:	7a20      	ldrb	r0, [r4, #8]
 800df30:	bd10      	pop	{r4, pc}

0800df32 <memcpy.isra.0>:
 800df32:	f007 bedd 	b.w	8015cf0 <memcpy>
	...

0800df38 <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)>:
 800df38:	b510      	push	{r4, lr}
 800df3a:	6001      	str	r1, [r0, #0]
 800df3c:	2100      	movs	r1, #0
 800df3e:	4604      	mov	r4, r0
 800df40:	6041      	str	r1, [r0, #4]
 800df42:	2220      	movs	r2, #32
 800df44:	3008      	adds	r0, #8
 800df46:	f007 fef5 	bl	8015d34 <memset>
 800df4a:	4b03      	ldr	r3, [pc, #12]	; (800df58 <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)+0x20>)
 800df4c:	4620      	mov	r0, r4
 800df4e:	62a3      	str	r3, [r4, #40]	; 0x28
 800df50:	237f      	movs	r3, #127	; 0x7f
 800df52:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 800df56:	bd10      	pop	{r4, pc}
 800df58:	ff7fff00 			; <UNDEFINED> instruction: 0xff7fff00

0800df5c <RDMDeviceParams::Load()>:
 800df5c:	4601      	mov	r1, r0
 800df5e:	6800      	ldr	r0, [r0, #0]
 800df60:	b130      	cbz	r0, 800df70 <RDMDeviceParams::Load()+0x14>
 800df62:	b508      	push	{r3, lr}
 800df64:	6803      	ldr	r3, [r0, #0]
 800df66:	3104      	adds	r1, #4
 800df68:	68db      	ldr	r3, [r3, #12]
 800df6a:	4798      	blx	r3
 800df6c:	2001      	movs	r0, #1
 800df6e:	bd08      	pop	{r3, pc}
 800df70:	4770      	bx	lr

0800df72 <RDMDeviceParams::Set(RDMDevice*)>:
 800df72:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800df74:	6843      	ldr	r3, [r0, #4]
 800df76:	460c      	mov	r4, r1
 800df78:	07d9      	lsls	r1, r3, #31
 800df7a:	4605      	mov	r5, r0
 800df7c:	d518      	bpl.n	800dfb0 <RDMDeviceParams::Set(RDMDevice*)+0x3e>
 800df7e:	f890 6028 	ldrb.w	r6, [r0, #40]	; 0x28
 800df82:	f894 3052 	ldrb.w	r3, [r4, #82]	; 0x52
 800df86:	2e20      	cmp	r6, #32
 800df88:	bf28      	it	cs
 800df8a:	2620      	movcs	r6, #32
 800df8c:	f100 0108 	add.w	r1, r0, #8
 800df90:	b1e3      	cbz	r3, 800dfcc <RDMDeviceParams::Set(RDMDevice*)+0x5a>
 800df92:	f104 070a 	add.w	r7, r4, #10
 800df96:	4638      	mov	r0, r7
 800df98:	4632      	mov	r2, r6
 800df9a:	f7ff ffca 	bl	800df32 <memcpy.isra.0>
 800df9e:	6fa0      	ldr	r0, [r4, #120]	; 0x78
 800dfa0:	f884 602a 	strb.w	r6, [r4, #42]	; 0x2a
 800dfa4:	b120      	cbz	r0, 800dfb0 <RDMDeviceParams::Set(RDMDevice*)+0x3e>
 800dfa6:	6803      	ldr	r3, [r0, #0]
 800dfa8:	4632      	mov	r2, r6
 800dfaa:	4639      	mov	r1, r7
 800dfac:	689b      	ldr	r3, [r3, #8]
 800dfae:	4798      	blx	r3
 800dfb0:	686b      	ldr	r3, [r5, #4]
 800dfb2:	079a      	lsls	r2, r3, #30
 800dfb4:	bf44      	itt	mi
 800dfb6:	f8b5 2029 	ldrhmi.w	r2, [r5, #41]	; 0x29
 800dfba:	f8a4 204c 	strhmi.w	r2, [r4, #76]	; 0x4c
 800dfbe:	075b      	lsls	r3, r3, #29
 800dfc0:	bf44      	itt	mi
 800dfc2:	f8b5 302b 	ldrhmi.w	r3, [r5, #43]	; 0x2b
 800dfc6:	f8a4 304e 	strhmi.w	r3, [r4, #78]	; 0x4e
 800dfca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800dfcc:	4632      	mov	r2, r6
 800dfce:	f104 0053 	add.w	r0, r4, #83	; 0x53
 800dfd2:	f7ff ffae 	bl	800df32 <memcpy.isra.0>
 800dfd6:	f884 6073 	strb.w	r6, [r4, #115]	; 0x73
 800dfda:	e7e9      	b.n	800dfb0 <RDMDeviceParams::Set(RDMDevice*)+0x3e>

0800dfdc <RDMDeviceParams::Dump()>:
 800dfdc:	4770      	bx	lr

0800dfde <RDMDeviceResponder::PersonalityUpdate(LightSet*)>:
 800dfde:	4770      	bx	lr

0800dfe0 <RDMDeviceResponder::DmxStartAddressUpdate()>:
 800dfe0:	4770      	bx	lr
	...

0800dfe4 <RDMDeviceResponder::~RDMDeviceResponder()>:
 800dfe4:	b510      	push	{r4, lr}
 800dfe6:	4604      	mov	r4, r0
 800dfe8:	4b05      	ldr	r3, [pc, #20]	; (800e000 <RDMDeviceResponder::~RDMDeviceResponder()+0x1c>)
 800dfea:	f840 3b8c 	str.w	r3, [r0], #140
 800dfee:	f7ff fef1 	bl	800ddd4 <RDMSubDevices::~RDMSubDevices()>
 800dff2:	f104 0084 	add.w	r0, r4, #132	; 0x84
 800dff6:	f7ff fecd 	bl	800dd94 <RDMSensors::~RDMSensors()>
 800dffa:	4620      	mov	r0, r4
 800dffc:	bd10      	pop	{r4, pc}
 800dffe:	bf00      	nop
 800e000:	080196ac 	stmdaeq	r1, {r2, r3, r5, r7, r9, sl, ip, pc}

0800e004 <RDMDeviceResponder::~RDMDeviceResponder()>:
 800e004:	b510      	push	{r4, lr}
 800e006:	4604      	mov	r4, r0
 800e008:	f7ff ffec 	bl	800dfe4 <RDMDeviceResponder::~RDMDeviceResponder()>
 800e00c:	4620      	mov	r0, r4
 800e00e:	f007 fdb7 	bl	8015b80 <operator delete(void*)>
 800e012:	4620      	mov	r0, r4
 800e014:	bd10      	pop	{r4, pc}

0800e016 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>:
 800e016:	b470      	push	{r4, r5, r6}
 800e018:	790a      	ldrb	r2, [r1, #4]
 800e01a:	680b      	ldr	r3, [r1, #0]
 800e01c:	2a20      	cmp	r2, #32
 800e01e:	bf28      	it	cs
 800e020:	2220      	movcs	r2, #32
 800e022:	f890 1052 	ldrb.w	r1, [r0, #82]	; 0x52
 800e026:	189c      	adds	r4, r3, r2
 800e028:	b189      	cbz	r1, 800e04e <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x38>
 800e02a:	f100 010a 	add.w	r1, r0, #10
 800e02e:	460d      	mov	r5, r1
 800e030:	42a3      	cmp	r3, r4
 800e032:	d004      	beq.n	800e03e <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x28>
 800e034:	f813 6b01 	ldrb.w	r6, [r3], #1
 800e038:	f805 6b01 	strb.w	r6, [r5], #1
 800e03c:	e7f8      	b.n	800e030 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x1a>
 800e03e:	f880 202a 	strb.w	r2, [r0, #42]	; 0x2a
 800e042:	6f80      	ldr	r0, [r0, #120]	; 0x78
 800e044:	b170      	cbz	r0, 800e064 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x4e>
 800e046:	bc70      	pop	{r4, r5, r6}
 800e048:	6803      	ldr	r3, [r0, #0]
 800e04a:	689b      	ldr	r3, [r3, #8]
 800e04c:	4718      	bx	r3
 800e04e:	f100 0153 	add.w	r1, r0, #83	; 0x53
 800e052:	42a3      	cmp	r3, r4
 800e054:	d004      	beq.n	800e060 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x4a>
 800e056:	f813 5b01 	ldrb.w	r5, [r3], #1
 800e05a:	f801 5b01 	strb.w	r5, [r1], #1
 800e05e:	e7f8      	b.n	800e052 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x3c>
 800e060:	f880 2073 	strb.w	r2, [r0, #115]	; 0x73
 800e064:	bc70      	pop	{r4, r5, r6}
 800e066:	4770      	bx	lr

0800e068 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)>:
 800e068:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800e06a:	4604      	mov	r4, r0
 800e06c:	1d07      	adds	r7, r0, #4
 800e06e:	4638      	mov	r0, r7
 800e070:	460e      	mov	r6, r1
 800e072:	4615      	mov	r5, r2
 800e074:	f000 fec4 	bl	800ee00 <RDMDevice::RDMDevice()>
 800e078:	4620      	mov	r0, r4
 800e07a:	4b27      	ldr	r3, [pc, #156]	; (800e118 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0xb0>)
 800e07c:	f840 3b80 	str.w	r3, [r0], #128
 800e080:	f000 fcce 	bl	800ea20 <RDMIdentify::RDMIdentify()>
 800e084:	f104 0084 	add.w	r0, r4, #132	; 0x84
 800e088:	f7ff fe7c 	bl	800dd84 <RDMSensors::RDMSensors()>
 800e08c:	f104 008c 	add.w	r0, r4, #140	; 0x8c
 800e090:	f7ff fe98 	bl	800ddc4 <RDMSubDevices::RDMSubDevices()>
 800e094:	4b21      	ldr	r3, [pc, #132]	; (800e11c <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0xb4>)
 800e096:	2200      	movs	r2, #0
 800e098:	601c      	str	r4, [r3, #0]
 800e09a:	2365      	movs	r3, #101	; 0x65
 800e09c:	f884 30c3 	strb.w	r3, [r4, #195]	; 0xc3
 800e0a0:	f44f 73b7 	mov.w	r3, #366	; 0x16e
 800e0a4:	f8c4 30c4 	str.w	r3, [r4, #196]	; 0xc4
 800e0a8:	2301      	movs	r3, #1
 800e0aa:	f8c4 6094 	str.w	r6, [r4, #148]	; 0x94
 800e0ae:	f8a4 30c8 	strh.w	r3, [r4, #200]	; 0xc8
 800e0b2:	f8c4 20cc 	str.w	r2, [r4, #204]	; 0xcc
 800e0b6:	f104 039d 	add.w	r3, r4, #157	; 0x9d
 800e0ba:	f104 01b0 	add.w	r1, r4, #176	; 0xb0
 800e0be:	428b      	cmp	r3, r1
 800e0c0:	d002      	beq.n	800e0c8 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x60>
 800e0c2:	f803 2b01 	strb.w	r2, [r3], #1
 800e0c6:	e7fa      	b.n	800e0be <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x56>
 800e0c8:	2200      	movs	r2, #0
 800e0ca:	f104 01c3 	add.w	r1, r4, #195	; 0xc3
 800e0ce:	428b      	cmp	r3, r1
 800e0d0:	d002      	beq.n	800e0d8 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x70>
 800e0d2:	f803 2b01 	strb.w	r2, [r3], #1
 800e0d6:	e7fa      	b.n	800e0ce <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x66>
 800e0d8:	f884 50aa 	strb.w	r5, [r4, #170]	; 0xaa
 800e0dc:	f7fa fc4c 	bl	8008978 <RDMSoftwareVersion::GetVersion()>
 800e0e0:	f8c4 0098 	str.w	r0, [r4, #152]	; 0x98
 800e0e4:	f7fa fc4c 	bl	8008980 <RDMSoftwareVersion::GetVersionLength()>
 800e0e8:	f8d4 3094 	ldr.w	r3, [r4, #148]	; 0x94
 800e0ec:	f884 009c 	strb.w	r0, [r4, #156]	; 0x9c
 800e0f0:	681b      	ldr	r3, [r3, #0]
 800e0f2:	685b      	ldr	r3, [r3, #4]
 800e0f4:	b91b      	cbnz	r3, 800e0fe <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x96>
 800e0f6:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800e0fa:	f8a4 30c8 	strh.w	r3, [r4, #200]	; 0xc8
 800e0fe:	4b08      	ldr	r3, [pc, #32]	; (800e120 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0xb8>)
 800e100:	4638      	mov	r0, r7
 800e102:	9300      	str	r3, [sp, #0]
 800e104:	231c      	movs	r3, #28
 800e106:	4669      	mov	r1, sp
 800e108:	f88d 3004 	strb.w	r3, [sp, #4]
 800e10c:	f7ff ff83 	bl	800e016 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>
 800e110:	4620      	mov	r0, r4
 800e112:	b003      	add	sp, #12
 800e114:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e116:	bf00      	nop
 800e118:	080196ac 	stmdaeq	r1, {r2, r3, r5, r7, r9, sl, ip, pc}
 800e11c:	2000327c 	andcs	r3, r0, ip, ror r2
 800e120:	08019687 	stmdaeq	r1, {r0, r1, r2, r7, r9, sl, ip, pc}

0800e124 <RDMDeviceResponder::Init()>:
 800e124:	2301      	movs	r3, #1
 800e126:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800e128:	4604      	mov	r4, r0
 800e12a:	f06f 050d 	mvn.w	r5, #13
 800e12e:	f880 3056 	strb.w	r3, [r0, #86]	; 0x56
 800e132:	f100 0357 	add.w	r3, r0, #87	; 0x57
 800e136:	9300      	str	r3, [sp, #0]
 800e138:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 800e13c:	4669      	mov	r1, sp
 800e13e:	3004      	adds	r0, #4
 800e140:	f88d 3004 	strb.w	r3, [sp, #4]
 800e144:	f7ff ff67 	bl	800e016 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>
 800e148:	f894 3077 	ldrb.w	r3, [r4, #119]	; 0x77
 800e14c:	f894 002e 	ldrb.w	r0, [r4, #46]	; 0x2e
 800e150:	f104 020e 	add.w	r2, r4, #14
 800e154:	1b2d      	subs	r5, r5, r4
 800e156:	18a9      	adds	r1, r5, r2
 800e158:	4288      	cmp	r0, r1
 800e15a:	d904      	bls.n	800e166 <RDMDeviceResponder::Init()+0x42>
 800e15c:	f812 1b01 	ldrb.w	r1, [r2], #1
 800e160:	440b      	add	r3, r1
 800e162:	b29b      	uxth	r3, r3
 800e164:	e7f7      	b.n	800e156 <RDMDeviceResponder::Init()+0x32>
 800e166:	f8a4 3078 	strh.w	r3, [r4, #120]	; 0x78
 800e16a:	f7fa fc0b 	bl	8008984 <RDMSoftwareVersion::GetVersionId()>
 800e16e:	2201      	movs	r2, #1
 800e170:	f884 209d 	strb.w	r2, [r4, #157]	; 0x9d
 800e174:	2200      	movs	r2, #0
 800e176:	f8b4 3050 	ldrh.w	r3, [r4, #80]	; 0x50
 800e17a:	f8a4 209e 	strh.w	r2, [r4, #158]	; 0x9e
 800e17e:	f884 20a0 	strb.w	r2, [r4, #160]	; 0xa0
 800e182:	f884 30a2 	strb.w	r3, [r4, #162]	; 0xa2
 800e186:	0a1a      	lsrs	r2, r3, #8
 800e188:	0e03      	lsrs	r3, r0, #24
 800e18a:	f884 30a3 	strb.w	r3, [r4, #163]	; 0xa3
 800e18e:	0c03      	lsrs	r3, r0, #16
 800e190:	f884 30a4 	strb.w	r3, [r4, #164]	; 0xa4
 800e194:	0a03      	lsrs	r3, r0, #8
 800e196:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 800e19a:	f8d4 3094 	ldr.w	r3, [r4, #148]	; 0x94
 800e19e:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
 800e1a2:	f884 00a6 	strb.w	r0, [r4, #166]	; 0xa6
 800e1a6:	681b      	ldr	r3, [r3, #0]
 800e1a8:	f8b4 6090 	ldrh.w	r6, [r4, #144]	; 0x90
 800e1ac:	685d      	ldr	r5, [r3, #4]
 800e1ae:	bb05      	cbnz	r5, 800e1f2 <RDMDeviceResponder::Init()+0xce>
 800e1b0:	f8b4 30c8 	ldrh.w	r3, [r4, #200]	; 0xc8
 800e1b4:	f884 50a7 	strb.w	r5, [r4, #167]	; 0xa7
 800e1b8:	0a1a      	lsrs	r2, r3, #8
 800e1ba:	f884 50a8 	strb.w	r5, [r4, #168]	; 0xa8
 800e1be:	f884 20ab 	strb.w	r2, [r4, #171]	; 0xab
 800e1c2:	f884 30ac 	strb.w	r3, [r4, #172]	; 0xac
 800e1c6:	2301      	movs	r3, #1
 800e1c8:	f884 30a9 	strb.w	r3, [r4, #169]	; 0xa9
 800e1cc:	0a33      	lsrs	r3, r6, #8
 800e1ce:	f884 30ad 	strb.w	r3, [r4, #173]	; 0xad
 800e1d2:	f894 3088 	ldrb.w	r3, [r4, #136]	; 0x88
 800e1d6:	f884 60ae 	strb.w	r6, [r4, #174]	; 0xae
 800e1da:	f884 30af 	strb.w	r3, [r4, #175]	; 0xaf
 800e1de:	f104 01b0 	add.w	r1, r4, #176	; 0xb0
 800e1e2:	f104 039d 	add.w	r3, r4, #157	; 0x9d
 800e1e6:	428b      	cmp	r3, r1
 800e1e8:	d01e      	beq.n	800e228 <RDMDeviceResponder::Init()+0x104>
 800e1ea:	f813 2b01 	ldrb.w	r2, [r3], #1
 800e1ee:	749a      	strb	r2, [r3, #18]
 800e1f0:	e7f9      	b.n	800e1e6 <RDMDeviceResponder::Init()+0xc2>
 800e1f2:	682b      	ldr	r3, [r5, #0]
 800e1f4:	4628      	mov	r0, r5
 800e1f6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800e1f8:	4798      	blx	r3
 800e1fa:	0a00      	lsrs	r0, r0, #8
 800e1fc:	f884 00a7 	strb.w	r0, [r4, #167]	; 0xa7
 800e200:	682b      	ldr	r3, [r5, #0]
 800e202:	4628      	mov	r0, r5
 800e204:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800e206:	4798      	blx	r3
 800e208:	f884 00a8 	strb.w	r0, [r4, #168]	; 0xa8
 800e20c:	682b      	ldr	r3, [r5, #0]
 800e20e:	4628      	mov	r0, r5
 800e210:	6a1b      	ldr	r3, [r3, #32]
 800e212:	4798      	blx	r3
 800e214:	0a00      	lsrs	r0, r0, #8
 800e216:	f884 00ab 	strb.w	r0, [r4, #171]	; 0xab
 800e21a:	682b      	ldr	r3, [r5, #0]
 800e21c:	4628      	mov	r0, r5
 800e21e:	6a1b      	ldr	r3, [r3, #32]
 800e220:	4798      	blx	r3
 800e222:	f884 00ac 	strb.w	r0, [r4, #172]	; 0xac
 800e226:	e7ce      	b.n	800e1c6 <RDMDeviceResponder::Init()+0xa2>
 800e228:	f894 30ac 	ldrb.w	r3, [r4, #172]	; 0xac
 800e22c:	f894 20a9 	ldrb.w	r2, [r4, #169]	; 0xa9
 800e230:	4413      	add	r3, r2
 800e232:	f8a4 30c6 	strh.w	r3, [r4, #198]	; 0xc6
 800e236:	b002      	add	sp, #8
 800e238:	bd70      	pop	{r4, r5, r6, pc}
	...

0800e23c <RDMDeviceResponder::Print()>:
 800e23c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800e23e:	4604      	mov	r4, r0
 800e240:	3004      	adds	r0, #4
 800e242:	f000 fe53 	bl	800eeec <RDMDevice::Print()>
 800e246:	f8d4 3094 	ldr.w	r3, [r4, #148]	; 0x94
 800e24a:	481d      	ldr	r0, [pc, #116]	; (800e2c0 <RDMDeviceResponder::Print()+0x84>)
 800e24c:	681d      	ldr	r5, [r3, #0]
 800e24e:	f895 6028 	ldrb.w	r6, [r5, #40]	; 0x28
 800e252:	f7fa fea5 	bl	8008fa0 <printf>
 800e256:	f894 209e 	ldrb.w	r2, [r4, #158]	; 0x9e
 800e25a:	f894 109d 	ldrb.w	r1, [r4, #157]	; 0x9d
 800e25e:	4819      	ldr	r0, [pc, #100]	; (800e2c4 <RDMDeviceResponder::Print()+0x88>)
 800e260:	f7fa fe9e 	bl	8008fa0 <printf>
 800e264:	f894 30ac 	ldrb.w	r3, [r4, #172]	; 0xac
 800e268:	f894 10ab 	ldrb.w	r1, [r4, #171]	; 0xab
 800e26c:	4816      	ldr	r0, [pc, #88]	; (800e2c8 <RDMDeviceResponder::Print()+0x8c>)
 800e26e:	eb03 2101 	add.w	r1, r3, r1, lsl #8
 800e272:	f7fa fe95 	bl	8008fa0 <printf>
 800e276:	f894 30a8 	ldrb.w	r3, [r4, #168]	; 0xa8
 800e27a:	f894 10a7 	ldrb.w	r1, [r4, #167]	; 0xa7
 800e27e:	3508      	adds	r5, #8
 800e280:	eb03 2101 	add.w	r1, r3, r1, lsl #8
 800e284:	4811      	ldr	r0, [pc, #68]	; (800e2cc <RDMDeviceResponder::Print()+0x90>)
 800e286:	f7fa fe8b 	bl	8008fa0 <printf>
 800e28a:	4633      	mov	r3, r6
 800e28c:	f894 20aa 	ldrb.w	r2, [r4, #170]	; 0xaa
 800e290:	f894 10a9 	ldrb.w	r1, [r4, #169]	; 0xa9
 800e294:	9500      	str	r5, [sp, #0]
 800e296:	480e      	ldr	r0, [pc, #56]	; (800e2d0 <RDMDeviceResponder::Print()+0x94>)
 800e298:	f7fa fe82 	bl	8008fa0 <printf>
 800e29c:	f894 10ad 	ldrb.w	r1, [r4, #173]	; 0xad
 800e2a0:	f894 30ae 	ldrb.w	r3, [r4, #174]	; 0xae
 800e2a4:	480b      	ldr	r0, [pc, #44]	; (800e2d4 <RDMDeviceResponder::Print()+0x98>)
 800e2a6:	eb03 2101 	add.w	r1, r3, r1, lsl #8
 800e2aa:	f7fa fe79 	bl	8008fa0 <printf>
 800e2ae:	f894 10af 	ldrb.w	r1, [r4, #175]	; 0xaf
 800e2b2:	4809      	ldr	r0, [pc, #36]	; (800e2d8 <RDMDeviceResponder::Print()+0x9c>)
 800e2b4:	b002      	add	sp, #8
 800e2b6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e2ba:	f7fa be71 	b.w	8008fa0 <printf>
 800e2be:	bf00      	nop
 800e2c0:	080195d3 	stmdaeq	r1, {r0, r1, r4, r6, r7, r8, sl, ip, pc}
 800e2c4:	080195f0 	stmdaeq	r1, {r4, r5, r6, r7, r8, sl, ip, pc}
 800e2c8:	08019609 	stmdaeq	r1, {r0, r3, r9, sl, ip, pc}
 800e2cc:	08019621 	stmdaeq	r1, {r0, r5, r9, sl, ip, pc}
 800e2d0:	08019639 	stmdaeq	r1, {r0, r3, r4, r5, r9, sl, ip, pc}
 800e2d4:	08019657 	stmdaeq	r1, {r0, r1, r2, r4, r6, r9, sl, ip, pc}
 800e2d8:	0801966f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r9, sl, ip, pc}

0800e2dc <memcmp>:
 800e2dc:	b510      	push	{r4, lr}
 800e2de:	3901      	subs	r1, #1
 800e2e0:	4402      	add	r2, r0
 800e2e2:	4290      	cmp	r0, r2
 800e2e4:	d008      	beq.n	800e2f8 <memcmp+0x1c>
 800e2e6:	7803      	ldrb	r3, [r0, #0]
 800e2e8:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800e2ec:	42a3      	cmp	r3, r4
 800e2ee:	d001      	beq.n	800e2f4 <memcmp+0x18>
 800e2f0:	1b18      	subs	r0, r3, r4
 800e2f2:	bd10      	pop	{r4, pc}
 800e2f4:	3001      	adds	r0, #1
 800e2f6:	e7f4      	b.n	800e2e2 <memcmp+0x6>
 800e2f8:	2000      	movs	r0, #0
 800e2fa:	e7fa      	b.n	800e2f2 <memcmp+0x16>

0800e2fc <memcpy.isra.0>:
 800e2fc:	3801      	subs	r0, #1
 800e2fe:	440a      	add	r2, r1
 800e300:	4291      	cmp	r1, r2
 800e302:	d004      	beq.n	800e30e <memcpy.isra.0+0x12>
 800e304:	f811 3b01 	ldrb.w	r3, [r1], #1
 800e308:	f800 3f01 	strb.w	r3, [r0, #1]!
 800e30c:	e7f8      	b.n	800e300 <memcpy.isra.0+0x4>
 800e30e:	4770      	bx	lr

0800e310 <RDMDeviceResponder::SetFactoryDefaults()>:
 800e310:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e312:	4604      	mov	r4, r0
 800e314:	f06f 050d 	mvn.w	r5, #13
 800e318:	f100 0357 	add.w	r3, r0, #87	; 0x57
 800e31c:	9300      	str	r3, [sp, #0]
 800e31e:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 800e322:	4669      	mov	r1, sp
 800e324:	3004      	adds	r0, #4
 800e326:	f88d 3004 	strb.w	r3, [sp, #4]
 800e32a:	f7ff fe74 	bl	800e016 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>
 800e32e:	f894 3077 	ldrb.w	r3, [r4, #119]	; 0x77
 800e332:	f894 002e 	ldrb.w	r0, [r4, #46]	; 0x2e
 800e336:	f104 020e 	add.w	r2, r4, #14
 800e33a:	1b2d      	subs	r5, r5, r4
 800e33c:	18a9      	adds	r1, r5, r2
 800e33e:	4288      	cmp	r0, r1
 800e340:	d904      	bls.n	800e34c <RDMDeviceResponder::SetFactoryDefaults()+0x3c>
 800e342:	f812 1b01 	ldrb.w	r1, [r2], #1
 800e346:	440b      	add	r3, r1
 800e348:	b29b      	uxth	r3, r3
 800e34a:	e7f7      	b.n	800e33c <RDMDeviceResponder::SetFactoryDefaults()+0x2c>
 800e34c:	f8a4 3078 	strh.w	r3, [r4, #120]	; 0x78
 800e350:	2301      	movs	r3, #1
 800e352:	f884 30a9 	strb.w	r3, [r4, #169]	; 0xa9
 800e356:	f8d4 3094 	ldr.w	r3, [r4, #148]	; 0x94
 800e35a:	681b      	ldr	r3, [r3, #0]
 800e35c:	685d      	ldr	r5, [r3, #4]
 800e35e:	682b      	ldr	r3, [r5, #0]
 800e360:	4628      	mov	r0, r5
 800e362:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800e364:	4798      	blx	r3
 800e366:	0a00      	lsrs	r0, r0, #8
 800e368:	f884 00a7 	strb.w	r0, [r4, #167]	; 0xa7
 800e36c:	682b      	ldr	r3, [r5, #0]
 800e36e:	4628      	mov	r0, r5
 800e370:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800e372:	4798      	blx	r3
 800e374:	f884 00a8 	strb.w	r0, [r4, #168]	; 0xa8
 800e378:	682b      	ldr	r3, [r5, #0]
 800e37a:	4628      	mov	r0, r5
 800e37c:	6a1b      	ldr	r3, [r3, #32]
 800e37e:	4798      	blx	r3
 800e380:	0a00      	lsrs	r0, r0, #8
 800e382:	f884 00ab 	strb.w	r0, [r4, #171]	; 0xab
 800e386:	682b      	ldr	r3, [r5, #0]
 800e388:	4628      	mov	r0, r5
 800e38a:	6a1b      	ldr	r3, [r3, #32]
 800e38c:	4798      	blx	r3
 800e38e:	6823      	ldr	r3, [r4, #0]
 800e390:	f884 00ac 	strb.w	r0, [r4, #172]	; 0xac
 800e394:	4629      	mov	r1, r5
 800e396:	689b      	ldr	r3, [r3, #8]
 800e398:	4620      	mov	r0, r4
 800e39a:	4798      	blx	r3
 800e39c:	f8b4 50c8 	ldrh.w	r5, [r4, #200]	; 0xc8
 800e3a0:	1e6b      	subs	r3, r5, #1
 800e3a2:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800e3a6:	d217      	bcs.n	800e3d8 <RDMDeviceResponder::SetFactoryDefaults()+0xc8>
 800e3a8:	f894 30a9 	ldrb.w	r3, [r4, #169]	; 0xa9
 800e3ac:	f8d4 2094 	ldr.w	r2, [r4, #148]	; 0x94
 800e3b0:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800e3b4:	3b01      	subs	r3, #1
 800e3b6:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800e3ba:	4629      	mov	r1, r5
 800e3bc:	6858      	ldr	r0, [r3, #4]
 800e3be:	6803      	ldr	r3, [r0, #0]
 800e3c0:	69db      	ldr	r3, [r3, #28]
 800e3c2:	4798      	blx	r3
 800e3c4:	b120      	cbz	r0, 800e3d0 <RDMDeviceResponder::SetFactoryDefaults()+0xc0>
 800e3c6:	0a2b      	lsrs	r3, r5, #8
 800e3c8:	f884 30ab 	strb.w	r3, [r4, #171]	; 0xab
 800e3cc:	f884 50ac 	strb.w	r5, [r4, #172]	; 0xac
 800e3d0:	6823      	ldr	r3, [r4, #0]
 800e3d2:	4620      	mov	r0, r4
 800e3d4:	68db      	ldr	r3, [r3, #12]
 800e3d6:	4798      	blx	r3
 800e3d8:	2213      	movs	r2, #19
 800e3da:	f104 019d 	add.w	r1, r4, #157	; 0x9d
 800e3de:	f104 00b0 	add.w	r0, r4, #176	; 0xb0
 800e3e2:	f7ff ff8b 	bl	800e2fc <memcpy.isra.0>
 800e3e6:	f104 008c 	add.w	r0, r4, #140	; 0x8c
 800e3ea:	f7ff fd3c 	bl	800de66 <RDMSubDevices::SetFactoryDefaults()>
 800e3ee:	f894 30ac 	ldrb.w	r3, [r4, #172]	; 0xac
 800e3f2:	f894 20a9 	ldrb.w	r2, [r4, #169]	; 0xa9
 800e3f6:	f8d4 00cc 	ldr.w	r0, [r4, #204]	; 0xcc
 800e3fa:	4413      	add	r3, r2
 800e3fc:	f8a4 30c6 	strh.w	r3, [r4, #198]	; 0xc6
 800e400:	2301      	movs	r3, #1
 800e402:	f884 30c5 	strb.w	r3, [r4, #197]	; 0xc5
 800e406:	b128      	cbz	r0, 800e414 <RDMDeviceResponder::SetFactoryDefaults()+0x104>
 800e408:	6803      	ldr	r3, [r0, #0]
 800e40a:	689b      	ldr	r3, [r3, #8]
 800e40c:	b003      	add	sp, #12
 800e40e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800e412:	4718      	bx	r3
 800e414:	b003      	add	sp, #12
 800e416:	bd30      	pop	{r4, r5, pc}

0800e418 <RDMHandler::RDMHandler(bool)>:
 800e418:	2200      	movs	r2, #0
 800e41a:	7001      	strb	r1, [r0, #0]
 800e41c:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800e420:	7042      	strb	r2, [r0, #1]
 800e422:	4770      	bx	lr

0800e424 <RDMHandler::HandleString(char const*, unsigned int)>:
 800e424:	6883      	ldr	r3, [r0, #8]
 800e426:	75da      	strb	r2, [r3, #23]
 800e428:	3318      	adds	r3, #24
 800e42a:	440a      	add	r2, r1
 800e42c:	4291      	cmp	r1, r2
 800e42e:	d004      	beq.n	800e43a <RDMHandler::HandleString(char const*, unsigned int)+0x16>
 800e430:	f811 0b01 	ldrb.w	r0, [r1], #1
 800e434:	f803 0b01 	strb.w	r0, [r3], #1
 800e438:	e7f8      	b.n	800e42c <RDMHandler::HandleString(char const*, unsigned int)+0x8>
 800e43a:	4770      	bx	lr

0800e43c <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)>:
 800e43c:	b570      	push	{r4, r5, r6, lr}
 800e43e:	e9d0 4301 	ldrd	r4, r3, [r0, #4]
 800e442:	25cc      	movs	r5, #204	; 0xcc
 800e444:	701d      	strb	r5, [r3, #0]
 800e446:	7825      	ldrb	r5, [r4, #0]
 800e448:	705d      	strb	r5, [r3, #1]
 800e44a:	7ba5      	ldrb	r5, [r4, #14]
 800e44c:	73dd      	strb	r5, [r3, #15]
 800e44e:	2500      	movs	r5, #0
 800e450:	745d      	strb	r5, [r3, #17]
 800e452:	7c65      	ldrb	r5, [r4, #17]
 800e454:	749d      	strb	r5, [r3, #18]
 800e456:	7ca5      	ldrb	r5, [r4, #18]
 800e458:	74dd      	strb	r5, [r3, #19]
 800e45a:	7ce5      	ldrb	r5, [r4, #19]
 800e45c:	3501      	adds	r5, #1
 800e45e:	751d      	strb	r5, [r3, #20]
 800e460:	7d25      	ldrb	r5, [r4, #20]
 800e462:	755d      	strb	r5, [r3, #21]
 800e464:	7d65      	ldrb	r5, [r4, #21]
 800e466:	759d      	strb	r5, [r3, #22]
 800e468:	b119      	cbz	r1, 800e472 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x36>
 800e46a:	1e4d      	subs	r5, r1, #1
 800e46c:	2d01      	cmp	r5, #1
 800e46e:	d921      	bls.n	800e4b4 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x78>
 800e470:	bd70      	pop	{r4, r5, r6, pc}
 800e472:	7dda      	ldrb	r2, [r3, #23]
 800e474:	7419      	strb	r1, [r3, #16]
 800e476:	3218      	adds	r2, #24
 800e478:	709a      	strb	r2, [r3, #2]
 800e47a:	4a16      	ldr	r2, [pc, #88]	; (800e4d4 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x98>)
 800e47c:	f104 0108 	add.w	r1, r4, #8
 800e480:	6812      	ldr	r2, [r2, #0]
 800e482:	1cdd      	adds	r5, r3, #3
 800e484:	3204      	adds	r2, #4
 800e486:	340e      	adds	r4, #14
 800e488:	f811 6b01 	ldrb.w	r6, [r1], #1
 800e48c:	f805 6b01 	strb.w	r6, [r5], #1
 800e490:	f812 6b01 	ldrb.w	r6, [r2], #1
 800e494:	42a1      	cmp	r1, r4
 800e496:	716e      	strb	r6, [r5, #5]
 800e498:	d1f6      	bne.n	800e488 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x4c>
 800e49a:	2200      	movs	r2, #0
 800e49c:	7899      	ldrb	r1, [r3, #2]
 800e49e:	4613      	mov	r3, r2
 800e4a0:	6884      	ldr	r4, [r0, #8]
 800e4a2:	4291      	cmp	r1, r2
 800e4a4:	eb04 0502 	add.w	r5, r4, r2
 800e4a8:	d90d      	bls.n	800e4c6 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x8a>
 800e4aa:	5ca5      	ldrb	r5, [r4, r2]
 800e4ac:	3201      	adds	r2, #1
 800e4ae:	442b      	add	r3, r5
 800e4b0:	b29b      	uxth	r3, r3
 800e4b2:	e7f6      	b.n	800e4a2 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x66>
 800e4b4:	7419      	strb	r1, [r3, #16]
 800e4b6:	2102      	movs	r1, #2
 800e4b8:	251a      	movs	r5, #26
 800e4ba:	75d9      	strb	r1, [r3, #23]
 800e4bc:	0a11      	lsrs	r1, r2, #8
 800e4be:	709d      	strb	r5, [r3, #2]
 800e4c0:	7619      	strb	r1, [r3, #24]
 800e4c2:	765a      	strb	r2, [r3, #25]
 800e4c4:	e7d9      	b.n	800e47a <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x3e>
 800e4c6:	0a1a      	lsrs	r2, r3, #8
 800e4c8:	702a      	strb	r2, [r5, #0]
 800e4ca:	6882      	ldr	r2, [r0, #8]
 800e4cc:	440a      	add	r2, r1
 800e4ce:	7053      	strb	r3, [r2, #1]
 800e4d0:	e7ce      	b.n	800e470 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x34>
 800e4d2:	bf00      	nop
 800e4d4:	2000327c 	andcs	r3, r0, ip, ror r2

0800e4d8 <RDMHandler::RespondMessageAck()>:
 800e4d8:	6843      	ldr	r3, [r0, #4]
 800e4da:	7d9a      	ldrb	r2, [r3, #22]
 800e4dc:	b90a      	cbnz	r2, 800e4e2 <RDMHandler::RespondMessageAck()+0xa>
 800e4de:	2218      	movs	r2, #24
 800e4e0:	705a      	strb	r2, [r3, #1]
 800e4e2:	2200      	movs	r2, #0
 800e4e4:	4611      	mov	r1, r2
 800e4e6:	f7ff bfa9 	b.w	800e43c <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)>
	...

0800e4ec <RDMHandler::GetDeviceInfo(unsigned short)>:
 800e4ec:	b538      	push	{r3, r4, r5, lr}
 800e4ee:	4b18      	ldr	r3, [pc, #96]	; (800e550 <RDMHandler::GetDeviceInfo(unsigned short)+0x64>)
 800e4f0:	4605      	mov	r5, r0
 800e4f2:	681c      	ldr	r4, [r3, #0]
 800e4f4:	b349      	cbz	r1, 800e54a <RDMHandler::GetDeviceInfo(unsigned short)+0x5e>
 800e4f6:	f104 008c 	add.w	r0, r4, #140	; 0x8c
 800e4fa:	f7ff fc83 	bl	800de04 <RDMSubDevices::GetInfo(unsigned short)>
 800e4fe:	b1b8      	cbz	r0, 800e530 <RDMHandler::GetDeviceInfo(unsigned short)+0x44>
 800e500:	8803      	ldrh	r3, [r0, #0]
 800e502:	0a1b      	lsrs	r3, r3, #8
 800e504:	f884 30ba 	strb.w	r3, [r4, #186]	; 0xba
 800e508:	8803      	ldrh	r3, [r0, #0]
 800e50a:	f884 30bb 	strb.w	r3, [r4, #187]	; 0xbb
 800e50e:	7903      	ldrb	r3, [r0, #4]
 800e510:	f884 30bc 	strb.w	r3, [r4, #188]	; 0xbc
 800e514:	7943      	ldrb	r3, [r0, #5]
 800e516:	f884 30bd 	strb.w	r3, [r4, #189]	; 0xbd
 800e51a:	8843      	ldrh	r3, [r0, #2]
 800e51c:	0a1b      	lsrs	r3, r3, #8
 800e51e:	f884 30be 	strb.w	r3, [r4, #190]	; 0xbe
 800e522:	8843      	ldrh	r3, [r0, #2]
 800e524:	f884 30bf 	strb.w	r3, [r4, #191]	; 0xbf
 800e528:	f890 3027 	ldrb.w	r3, [r0, #39]	; 0x27
 800e52c:	f884 30c2 	strb.w	r3, [r4, #194]	; 0xc2
 800e530:	f104 01b0 	add.w	r1, r4, #176	; 0xb0
 800e534:	2213      	movs	r2, #19
 800e536:	68a8      	ldr	r0, [r5, #8]
 800e538:	75c2      	strb	r2, [r0, #23]
 800e53a:	3018      	adds	r0, #24
 800e53c:	f7ff fede 	bl	800e2fc <memcpy.isra.0>
 800e540:	4628      	mov	r0, r5
 800e542:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800e546:	f7ff bfc7 	b.w	800e4d8 <RDMHandler::RespondMessageAck()>
 800e54a:	f104 019d 	add.w	r1, r4, #157	; 0x9d
 800e54e:	e7f1      	b.n	800e534 <RDMHandler::GetDeviceInfo(unsigned short)+0x48>
 800e550:	2000327c 	andcs	r3, r0, ip, ror r2

0800e554 <RDMHandler::GetFactoryDefaults(unsigned short)>:
 800e554:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e556:	2301      	movs	r3, #1
 800e558:	6886      	ldr	r6, [r0, #8]
 800e55a:	4605      	mov	r5, r0
 800e55c:	75f3      	strb	r3, [r6, #23]
 800e55e:	4b1c      	ldr	r3, [pc, #112]	; (800e5d0 <RDMHandler::GetFactoryDefaults(unsigned short)+0x7c>)
 800e560:	681c      	ldr	r4, [r3, #0]
 800e562:	f894 30c5 	ldrb.w	r3, [r4, #197]	; 0xc5
 800e566:	b37b      	cbz	r3, 800e5c8 <RDMHandler::GetFactoryDefaults(unsigned short)+0x74>
 800e568:	f06f 0c0d 	mvn.w	ip, #13
 800e56c:	f8b4 1078 	ldrh.w	r1, [r4, #120]	; 0x78
 800e570:	f894 3077 	ldrb.w	r3, [r4, #119]	; 0x77
 800e574:	f894 702e 	ldrb.w	r7, [r4, #46]	; 0x2e
 800e578:	f104 020e 	add.w	r2, r4, #14
 800e57c:	ebac 0c04 	sub.w	ip, ip, r4
 800e580:	eb0c 0002 	add.w	r0, ip, r2
 800e584:	42b8      	cmp	r0, r7
 800e586:	d204      	bcs.n	800e592 <RDMHandler::GetFactoryDefaults(unsigned short)+0x3e>
 800e588:	f812 0b01 	ldrb.w	r0, [r2], #1
 800e58c:	4403      	add	r3, r0
 800e58e:	b29b      	uxth	r3, r3
 800e590:	e7f6      	b.n	800e580 <RDMHandler::GetFactoryDefaults(unsigned short)+0x2c>
 800e592:	4299      	cmp	r1, r3
 800e594:	d008      	beq.n	800e5a8 <RDMHandler::GetFactoryDefaults(unsigned short)+0x54>
 800e596:	2300      	movs	r3, #0
 800e598:	f884 30c5 	strb.w	r3, [r4, #197]	; 0xc5
 800e59c:	7633      	strb	r3, [r6, #24]
 800e59e:	4628      	mov	r0, r5
 800e5a0:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800e5a4:	f7ff bf98 	b.w	800e4d8 <RDMHandler::RespondMessageAck()>
 800e5a8:	f894 30ac 	ldrb.w	r3, [r4, #172]	; 0xac
 800e5ac:	f894 10a9 	ldrb.w	r1, [r4, #169]	; 0xa9
 800e5b0:	f8b4 20c6 	ldrh.w	r2, [r4, #198]	; 0xc6
 800e5b4:	440b      	add	r3, r1
 800e5b6:	429a      	cmp	r2, r3
 800e5b8:	d1ed      	bne.n	800e596 <RDMHandler::GetFactoryDefaults(unsigned short)+0x42>
 800e5ba:	f104 008c 	add.w	r0, r4, #140	; 0x8c
 800e5be:	f7ff fc3f 	bl	800de40 <RDMSubDevices::GetFactoryDefaults()>
 800e5c2:	4603      	mov	r3, r0
 800e5c4:	2800      	cmp	r0, #0
 800e5c6:	d0e7      	beq.n	800e598 <RDMHandler::GetFactoryDefaults(unsigned short)+0x44>
 800e5c8:	f894 30c5 	ldrb.w	r3, [r4, #197]	; 0xc5
 800e5cc:	e7e6      	b.n	800e59c <RDMHandler::GetFactoryDefaults(unsigned short)+0x48>
 800e5ce:	bf00      	nop
 800e5d0:	2000327c 	andcs	r3, r0, ip, ror r2

0800e5d4 <RDMHandler::GetDeviceModelDescription(unsigned short)>:
 800e5d4:	b510      	push	{r4, lr}
 800e5d6:	4604      	mov	r4, r0
 800e5d8:	220e      	movs	r2, #14
 800e5da:	4904      	ldr	r1, [pc, #16]	; (800e5ec <RDMHandler::GetDeviceModelDescription(unsigned short)+0x18>)
 800e5dc:	f7ff ff22 	bl	800e424 <RDMHandler::HandleString(char const*, unsigned int)>
 800e5e0:	4620      	mov	r0, r4
 800e5e2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e5e6:	f7ff bf77 	b.w	800e4d8 <RDMHandler::RespondMessageAck()>
 800e5ea:	bf00      	nop
 800e5ec:	080186b2 	stmdaeq	r1, {r1, r4, r5, r7, r9, sl, pc}

0800e5f0 <RDMHandler::GetManufacturerLabel(unsigned short)>:
 800e5f0:	b510      	push	{r4, lr}
 800e5f2:	4604      	mov	r4, r0
 800e5f4:	4b05      	ldr	r3, [pc, #20]	; (800e60c <RDMHandler::GetManufacturerLabel(unsigned short)+0x1c>)
 800e5f6:	6819      	ldr	r1, [r3, #0]
 800e5f8:	f891 204f 	ldrb.w	r2, [r1, #79]	; 0x4f
 800e5fc:	312f      	adds	r1, #47	; 0x2f
 800e5fe:	f7ff ff11 	bl	800e424 <RDMHandler::HandleString(char const*, unsigned int)>
 800e602:	4620      	mov	r0, r4
 800e604:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e608:	f7ff bf66 	b.w	800e4d8 <RDMHandler::RespondMessageAck()>
 800e60c:	2000327c 	andcs	r3, r0, ip, ror r2

0800e610 <RDMHandler::GetDeviceLabel(unsigned short)>:
 800e610:	4b0d      	ldr	r3, [pc, #52]	; (800e648 <RDMHandler::GetDeviceLabel(unsigned short)+0x38>)
 800e612:	b513      	push	{r0, r1, r4, lr}
 800e614:	4604      	mov	r4, r0
 800e616:	6818      	ldr	r0, [r3, #0]
 800e618:	b171      	cbz	r1, 800e638 <RDMHandler::GetDeviceLabel(unsigned short)+0x28>
 800e61a:	466a      	mov	r2, sp
 800e61c:	308c      	adds	r0, #140	; 0x8c
 800e61e:	f7ff fbf9 	bl	800de14 <RDMSubDevices::GetLabel(unsigned short, TRDMDeviceInfoData*)>
 800e622:	4620      	mov	r0, r4
 800e624:	f89d 2004 	ldrb.w	r2, [sp, #4]
 800e628:	9900      	ldr	r1, [sp, #0]
 800e62a:	f7ff fefb 	bl	800e424 <RDMHandler::HandleString(char const*, unsigned int)>
 800e62e:	4620      	mov	r0, r4
 800e630:	f7ff ff52 	bl	800e4d8 <RDMHandler::RespondMessageAck()>
 800e634:	b002      	add	sp, #8
 800e636:	bd10      	pop	{r4, pc}
 800e638:	f100 030e 	add.w	r3, r0, #14
 800e63c:	9300      	str	r3, [sp, #0]
 800e63e:	f890 302e 	ldrb.w	r3, [r0, #46]	; 0x2e
 800e642:	f88d 3004 	strb.w	r3, [sp, #4]
 800e646:	e7ec      	b.n	800e622 <RDMHandler::GetDeviceLabel(unsigned short)+0x12>
 800e648:	2000327c 	andcs	r3, r0, ip, ror r2

0800e64c <RDMHandler::GetIdentifyDevice(unsigned short)>:
 800e64c:	2201      	movs	r2, #1
 800e64e:	6883      	ldr	r3, [r0, #8]
 800e650:	75da      	strb	r2, [r3, #23]
 800e652:	4a02      	ldr	r2, [pc, #8]	; (800e65c <RDMHandler::GetIdentifyDevice(unsigned short)+0x10>)
 800e654:	7812      	ldrb	r2, [r2, #0]
 800e656:	761a      	strb	r2, [r3, #24]
 800e658:	f7ff bf3e 	b.w	800e4d8 <RDMHandler::RespondMessageAck()>
 800e65c:	20003280 	andcs	r3, r0, r0, lsl #5

0800e660 <RDMHandler::RespondMessageNack(unsigned short)>:
 800e660:	460a      	mov	r2, r1
 800e662:	2102      	movs	r1, #2
 800e664:	f7ff beea 	b.w	800e43c <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)>

0800e668 <RDMHandler::SetResetDevice(bool, unsigned short)>:
 800e668:	b510      	push	{r4, lr}
 800e66a:	6843      	ldr	r3, [r0, #4]
 800e66c:	4604      	mov	r4, r0
 800e66e:	7d9a      	ldrb	r2, [r3, #22]
 800e670:	2a01      	cmp	r2, #1
 800e672:	d004      	beq.n	800e67e <RDMHandler::SetResetDevice(bool, unsigned short)+0x16>
 800e674:	2101      	movs	r1, #1
 800e676:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e67a:	f7ff bff1 	b.w	800e660 <RDMHandler::RespondMessageNack(unsigned short)>
 800e67e:	7ddb      	ldrb	r3, [r3, #23]
 800e680:	2b01      	cmp	r3, #1
 800e682:	d003      	beq.n	800e68c <RDMHandler::SetResetDevice(bool, unsigned short)+0x24>
 800e684:	2bff      	cmp	r3, #255	; 0xff
 800e686:	d001      	beq.n	800e68c <RDMHandler::SetResetDevice(bool, unsigned short)+0x24>
 800e688:	2106      	movs	r1, #6
 800e68a:	e7f4      	b.n	800e676 <RDMHandler::SetResetDevice(bool, unsigned short)+0xe>
 800e68c:	2100      	movs	r1, #0
 800e68e:	68a2      	ldr	r2, [r4, #8]
 800e690:	2bff      	cmp	r3, #255	; 0xff
 800e692:	75d1      	strb	r1, [r2, #23]
 800e694:	d102      	bne.n	800e69c <RDMHandler::SetResetDevice(bool, unsigned short)+0x34>
 800e696:	2104      	movs	r1, #4
 800e698:	4620      	mov	r0, r4
 800e69a:	e7ec      	b.n	800e676 <RDMHandler::SetResetDevice(bool, unsigned short)+0xe>
 800e69c:	4b03      	ldr	r3, [pc, #12]	; (800e6ac <RDMHandler::SetResetDevice(bool, unsigned short)+0x44>)
 800e69e:	6818      	ldr	r0, [r3, #0]
 800e6a0:	f007 f9ec 	bl	8015a7c <Hardware::Reboot()>
 800e6a4:	2800      	cmp	r0, #0
 800e6a6:	d0f6      	beq.n	800e696 <RDMHandler::SetResetDevice(bool, unsigned short)+0x2e>
 800e6a8:	bd10      	pop	{r4, pc}
 800e6aa:	bf00      	nop
 800e6ac:	20013de4 	andcs	r3, r1, r4, ror #27

0800e6b0 <RDMHandler::SetIdentifyDevice(bool, unsigned short)>:
 800e6b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e6b2:	6843      	ldr	r3, [r0, #4]
 800e6b4:	460d      	mov	r5, r1
 800e6b6:	7d99      	ldrb	r1, [r3, #22]
 800e6b8:	4604      	mov	r4, r0
 800e6ba:	2901      	cmp	r1, #1
 800e6bc:	d004      	beq.n	800e6c8 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x18>
 800e6be:	2101      	movs	r1, #1
 800e6c0:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800e6c4:	f7ff bfcc 	b.w	800e660 <RDMHandler::RespondMessageNack(unsigned short)>
 800e6c8:	7ddb      	ldrb	r3, [r3, #23]
 800e6ca:	2b01      	cmp	r3, #1
 800e6cc:	d901      	bls.n	800e6d2 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x22>
 800e6ce:	2106      	movs	r1, #6
 800e6d0:	e7f6      	b.n	800e6c0 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x10>
 800e6d2:	4a12      	ldr	r2, [pc, #72]	; (800e71c <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x6c>)
 800e6d4:	4f12      	ldr	r7, [pc, #72]	; (800e720 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x70>)
 800e6d6:	6816      	ldr	r6, [r2, #0]
 800e6d8:	4a12      	ldr	r2, [pc, #72]	; (800e724 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x74>)
 800e6da:	6810      	ldr	r0, [r2, #0]
 800e6dc:	4a12      	ldr	r2, [pc, #72]	; (800e728 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x78>)
 800e6de:	b983      	cbnz	r3, 800e702 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x52>
 800e6e0:	2102      	movs	r1, #2
 800e6e2:	7013      	strb	r3, [r2, #0]
 800e6e4:	f007 f926 	bl	8015934 <LedBlink::SetMode(ledblink::Mode)>
 800e6e8:	7839      	ldrb	r1, [r7, #0]
 800e6ea:	b111      	cbz	r1, 800e6f2 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x42>
 800e6ec:	4630      	mov	r0, r6
 800e6ee:	f000 f99e 	bl	800ea2e <RDMIdentify::Off(rdm::identify::Mode)>
 800e6f2:	b98d      	cbnz	r5, 800e718 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x68>
 800e6f4:	68a3      	ldr	r3, [r4, #8]
 800e6f6:	4620      	mov	r0, r4
 800e6f8:	75dd      	strb	r5, [r3, #23]
 800e6fa:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800e6fe:	f7ff beeb 	b.w	800e4d8 <RDMHandler::RespondMessageAck()>
 800e702:	7011      	strb	r1, [r2, #0]
 800e704:	2104      	movs	r1, #4
 800e706:	f007 f915 	bl	8015934 <LedBlink::SetMode(ledblink::Mode)>
 800e70a:	7839      	ldrb	r1, [r7, #0]
 800e70c:	2900      	cmp	r1, #0
 800e70e:	d0f0      	beq.n	800e6f2 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x42>
 800e710:	4630      	mov	r0, r6
 800e712:	f000 f98b 	bl	800ea2c <RDMIdentify::On(rdm::identify::Mode)>
 800e716:	e7ec      	b.n	800e6f2 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x42>
 800e718:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e71a:	bf00      	nop
 800e71c:	20003284 	andcs	r3, r0, r4, lsl #5
 800e720:	20003281 	andcs	r3, r0, r1, lsl #5
 800e724:	20013de0 	andcs	r3, r1, r0, ror #27
 800e728:	20003280 	andcs	r3, r0, r0, lsl #5

0800e72c <RDMHandler::SetFactoryDefaults(bool, unsigned short)>:
 800e72c:	b538      	push	{r3, r4, r5, lr}
 800e72e:	6843      	ldr	r3, [r0, #4]
 800e730:	4604      	mov	r4, r0
 800e732:	7d9b      	ldrb	r3, [r3, #22]
 800e734:	460d      	mov	r5, r1
 800e736:	b123      	cbz	r3, 800e742 <RDMHandler::SetFactoryDefaults(bool, unsigned short)+0x16>
 800e738:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800e73c:	2101      	movs	r1, #1
 800e73e:	f7ff bf8f 	b.w	800e660 <RDMHandler::RespondMessageNack(unsigned short)>
 800e742:	4b06      	ldr	r3, [pc, #24]	; (800e75c <RDMHandler::SetFactoryDefaults(bool, unsigned short)+0x30>)
 800e744:	6818      	ldr	r0, [r3, #0]
 800e746:	f7ff fde3 	bl	800e310 <RDMDeviceResponder::SetFactoryDefaults()>
 800e74a:	b935      	cbnz	r5, 800e75a <RDMHandler::SetFactoryDefaults(bool, unsigned short)+0x2e>
 800e74c:	68a3      	ldr	r3, [r4, #8]
 800e74e:	4620      	mov	r0, r4
 800e750:	75dd      	strb	r5, [r3, #23]
 800e752:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800e756:	f7ff bebf 	b.w	800e4d8 <RDMHandler::RespondMessageAck()>
 800e75a:	bd38      	pop	{r3, r4, r5, pc}
 800e75c:	2000327c 	andcs	r3, r0, ip, ror r2

0800e760 <RDMHandler::SetDeviceLabel(bool, unsigned short)>:
 800e760:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800e762:	6845      	ldr	r5, [r0, #4]
 800e764:	460e      	mov	r6, r1
 800e766:	7dab      	ldrb	r3, [r5, #22]
 800e768:	4604      	mov	r4, r0
 800e76a:	2b20      	cmp	r3, #32
 800e76c:	4611      	mov	r1, r2
 800e76e:	d905      	bls.n	800e77c <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x1c>
 800e770:	2101      	movs	r1, #1
 800e772:	b002      	add	sp, #8
 800e774:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e778:	f7ff bf72 	b.w	800e660 <RDMHandler::RespondMessageNack(unsigned short)>
 800e77c:	4a0d      	ldr	r2, [pc, #52]	; (800e7b4 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x54>)
 800e77e:	6810      	ldr	r0, [r2, #0]
 800e780:	f105 0217 	add.w	r2, r5, #23
 800e784:	b159      	cbz	r1, 800e79e <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x3e>
 800e786:	308c      	adds	r0, #140	; 0x8c
 800e788:	f7ff fb4d 	bl	800de26 <RDMSubDevices::SetLabel(unsigned short, char const*, unsigned char)>
 800e78c:	b97e      	cbnz	r6, 800e7ae <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x4e>
 800e78e:	4620      	mov	r0, r4
 800e790:	68a3      	ldr	r3, [r4, #8]
 800e792:	75de      	strb	r6, [r3, #23]
 800e794:	b002      	add	sp, #8
 800e796:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e79a:	f7ff be9d 	b.w	800e4d8 <RDMHandler::RespondMessageAck()>
 800e79e:	4669      	mov	r1, sp
 800e7a0:	3004      	adds	r0, #4
 800e7a2:	9200      	str	r2, [sp, #0]
 800e7a4:	f88d 3004 	strb.w	r3, [sp, #4]
 800e7a8:	f7ff fc35 	bl	800e016 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>
 800e7ac:	e7ee      	b.n	800e78c <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x2c>
 800e7ae:	b002      	add	sp, #8
 800e7b0:	bd70      	pop	{r4, r5, r6, pc}
 800e7b2:	bf00      	nop
 800e7b4:	2000327c 	andcs	r3, r0, ip, ror r2

0800e7b8 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)>:
 800e7b8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e7bc:	4616      	mov	r6, r2
 800e7be:	2700      	movs	r7, #0
 800e7c0:	f006 04ef 	and.w	r4, r6, #239	; 0xef
 800e7c4:	2c20      	cmp	r4, #32
 800e7c6:	46be      	mov	lr, r7
 800e7c8:	f89d 801c 	ldrb.w	r8, [sp, #28]
 800e7cc:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 800e7d0:	d004      	beq.n	800e7dc <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x24>
 800e7d2:	2105      	movs	r1, #5
 800e7d4:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e7d8:	f7ff bf42 	b.w	800e660 <RDMHandler::RespondMessageNack(unsigned short)>
 800e7dc:	4c2d      	ldr	r4, [pc, #180]	; (800e894 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xdc>)
 800e7de:	6824      	ldr	r4, [r4, #0]
 800e7e0:	88a4      	ldrh	r4, [r4, #4]
 800e7e2:	4294      	cmp	r4, r2
 800e7e4:	d205      	bcs.n	800e7f2 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x3a>
 800e7e6:	f64f 74ff 	movw	r4, #65535	; 0xffff
 800e7ea:	42a2      	cmp	r2, r4
 800e7ec:	d001      	beq.n	800e7f2 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x3a>
 800e7ee:	2109      	movs	r1, #9
 800e7f0:	e7f0      	b.n	800e7d4 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1c>
 800e7f2:	f04f 0c14 	mov.w	ip, #20
 800e7f6:	2400      	movs	r4, #0
 800e7f8:	4d27      	ldr	r5, [pc, #156]	; (800e898 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xe0>)
 800e7fa:	f8b5 9000 	ldrh.w	r9, [r5]
 800e7fe:	4599      	cmp	r9, r3
 800e800:	bf02      	ittt	eq
 800e802:	462c      	moveq	r4, r5
 800e804:	7daf      	ldrbeq	r7, [r5, #22]
 800e806:	f895 e017 	ldrbeq.w	lr, [r5, #23]
 800e80a:	f1bc 0c01 	subs.w	ip, ip, #1
 800e80e:	f105 0518 	add.w	r5, r5, #24
 800e812:	d1f2      	bne.n	800e7fa <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x42>
 800e814:	b90c      	cbnz	r4, 800e81a <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x62>
 800e816:	2100      	movs	r1, #0
 800e818:	e7dc      	b.n	800e7d4 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1c>
 800e81a:	7803      	ldrb	r3, [r0, #0]
 800e81c:	b19b      	cbz	r3, 800e846 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x8e>
 800e81e:	2f00      	cmp	r7, #0
 800e820:	d0f9      	beq.n	800e816 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x5e>
 800e822:	2e20      	cmp	r6, #32
 800e824:	d121      	bne.n	800e86a <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xb2>
 800e826:	2900      	cmp	r1, #0
 800e828:	d131      	bne.n	800e88e <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xd6>
 800e82a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800e82e:	429a      	cmp	r2, r3
 800e830:	d0dd      	beq.n	800e7ee <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x36>
 800e832:	6863      	ldr	r3, [r4, #4]
 800e834:	b913      	cbnz	r3, 800e83c <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x84>
 800e836:	68a1      	ldr	r1, [r4, #8]
 800e838:	07cd      	lsls	r5, r1, #31
 800e83a:	d5ca      	bpl.n	800e7d2 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1a>
 800e83c:	7d21      	ldrb	r1, [r4, #20]
 800e83e:	4541      	cmp	r1, r8
 800e840:	d005      	beq.n	800e84e <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x96>
 800e842:	2101      	movs	r1, #1
 800e844:	e7c6      	b.n	800e7d4 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1c>
 800e846:	f1be 0f00 	cmp.w	lr, #0
 800e84a:	d1ea      	bne.n	800e822 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x6a>
 800e84c:	e7e3      	b.n	800e816 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x5e>
 800e84e:	68a1      	ldr	r1, [r4, #8]
 800e850:	eb00 0461 	add.w	r4, r0, r1, asr #1
 800e854:	104d      	asrs	r5, r1, #1
 800e856:	07c9      	lsls	r1, r1, #31
 800e858:	bf48      	it	mi
 800e85a:	5941      	ldrmi	r1, [r0, r5]
 800e85c:	4620      	mov	r0, r4
 800e85e:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e862:	bf48      	it	mi
 800e864:	58cb      	ldrmi	r3, [r1, r3]
 800e866:	4611      	mov	r1, r2
 800e868:	4718      	bx	r3
 800e86a:	e9d4 5303 	ldrd	r5, r3, [r4, #12]
 800e86e:	f003 0401 	and.w	r4, r3, #1
 800e872:	b90d      	cbnz	r5, 800e878 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xc0>
 800e874:	2c00      	cmp	r4, #0
 800e876:	d0ac      	beq.n	800e7d2 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1a>
 800e878:	105e      	asrs	r6, r3, #1
 800e87a:	eb00 0363 	add.w	r3, r0, r3, asr #1
 800e87e:	b10c      	cbz	r4, 800e884 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xcc>
 800e880:	5980      	ldr	r0, [r0, r6]
 800e882:	5945      	ldr	r5, [r0, r5]
 800e884:	4618      	mov	r0, r3
 800e886:	462b      	mov	r3, r5
 800e888:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e88c:	4718      	bx	r3
 800e88e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e892:	bf00      	nop
 800e894:	20003278 	andcs	r3, r0, r8, ror r2
 800e898:	080196c4 	stmdaeq	r1, {r2, r6, r7, r9, sl, ip, pc}

0800e89c <RDMHandler::HandleData(unsigned char const*, unsigned char*)>:
 800e89c:	23ff      	movs	r3, #255	; 0xff
 800e89e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e8a2:	7013      	strb	r3, [r2, #0]
 800e8a4:	e9c0 1201 	strd	r1, r2, [r0, #4]
 800e8a8:	7d0b      	ldrb	r3, [r1, #20]
 800e8aa:	f891 8015 	ldrb.w	r8, [r1, #21]
 800e8ae:	f101 0b02 	add.w	fp, r1, #2
 800e8b2:	eb08 2803 	add.w	r8, r8, r3, lsl #8
 800e8b6:	4b57      	ldr	r3, [pc, #348]	; (800ea14 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x178>)
 800e8b8:	4607      	mov	r7, r0
 800e8ba:	460d      	mov	r5, r1
 800e8bc:	4614      	mov	r4, r2
 800e8be:	4956      	ldr	r1, [pc, #344]	; (800ea18 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x17c>)
 800e8c0:	2206      	movs	r2, #6
 800e8c2:	4658      	mov	r0, fp
 800e8c4:	f8d3 9000 	ldr.w	r9, [r3]
 800e8c8:	f7ff fd08 	bl	800e2dc <memcmp>
 800e8cc:	f109 0604 	add.w	r6, r9, #4
 800e8d0:	4682      	mov	sl, r0
 800e8d2:	2202      	movs	r2, #2
 800e8d4:	4631      	mov	r1, r6
 800e8d6:	4658      	mov	r0, fp
 800e8d8:	fa1f f888 	uxth.w	r8, r8
 800e8dc:	f7ff fcfe 	bl	800e2dc <memcmp>
 800e8e0:	b928      	cbnz	r0, 800e8ee <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x52>
 800e8e2:	2204      	movs	r2, #4
 800e8e4:	494c      	ldr	r1, [pc, #304]	; (800ea18 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x17c>)
 800e8e6:	18a8      	adds	r0, r5, r2
 800e8e8:	f7ff fcf8 	bl	800e2dc <memcmp>
 800e8ec:	b160      	cbz	r0, 800e908 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x6c>
 800e8ee:	4631      	mov	r1, r6
 800e8f0:	2206      	movs	r2, #6
 800e8f2:	4658      	mov	r0, fp
 800e8f4:	f7ff fcf2 	bl	800e2dc <memcmp>
 800e8f8:	4601      	mov	r1, r0
 800e8fa:	b130      	cbz	r0, 800e90a <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x6e>
 800e8fc:	f1ba 0f00 	cmp.w	sl, #0
 800e900:	d04a      	beq.n	800e998 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0xfc>
 800e902:	b003      	add	sp, #12
 800e904:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e908:	2101      	movs	r1, #1
 800e90a:	2301      	movs	r3, #1
 800e90c:	7cea      	ldrb	r2, [r5, #19]
 800e90e:	2a10      	cmp	r2, #16
 800e910:	d16e      	bne.n	800e9f0 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x154>
 800e912:	f1b8 0f01 	cmp.w	r8, #1
 800e916:	d142      	bne.n	800e99e <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x102>
 800e918:	787b      	ldrb	r3, [r7, #1]
 800e91a:	2b00      	cmp	r3, #0
 800e91c:	d1f1      	bne.n	800e902 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800e91e:	2206      	movs	r2, #6
 800e920:	4631      	mov	r1, r6
 800e922:	f105 0017 	add.w	r0, r5, #23
 800e926:	f7ff fcd9 	bl	800e2dc <memcmp>
 800e92a:	2800      	cmp	r0, #0
 800e92c:	dce9      	bgt.n	800e902 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800e92e:	2206      	movs	r2, #6
 800e930:	4630      	mov	r0, r6
 800e932:	f105 011d 	add.w	r1, r5, #29
 800e936:	f7ff fcd1 	bl	800e2dc <memcmp>
 800e93a:	2800      	cmp	r0, #0
 800e93c:	dce1      	bgt.n	800e902 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800e93e:	23fe      	movs	r3, #254	; 0xfe
 800e940:	7023      	strb	r3, [r4, #0]
 800e942:	7063      	strb	r3, [r4, #1]
 800e944:	70a3      	strb	r3, [r4, #2]
 800e946:	70e3      	strb	r3, [r4, #3]
 800e948:	7123      	strb	r3, [r4, #4]
 800e94a:	7163      	strb	r3, [r4, #5]
 800e94c:	71a3      	strb	r3, [r4, #6]
 800e94e:	23aa      	movs	r3, #170	; 0xaa
 800e950:	4622      	mov	r2, r4
 800e952:	71e3      	strb	r3, [r4, #7]
 800e954:	f240 53fa 	movw	r3, #1530	; 0x5fa
 800e958:	f109 090a 	add.w	r9, r9, #10
 800e95c:	7831      	ldrb	r1, [r6, #0]
 800e95e:	3202      	adds	r2, #2
 800e960:	f061 0155 	orn	r1, r1, #85	; 0x55
 800e964:	7191      	strb	r1, [r2, #6]
 800e966:	f816 1b01 	ldrb.w	r1, [r6], #1
 800e96a:	f041 0155 	orr.w	r1, r1, #85	; 0x55
 800e96e:	71d1      	strb	r1, [r2, #7]
 800e970:	f816 1c01 	ldrb.w	r1, [r6, #-1]
 800e974:	454e      	cmp	r6, r9
 800e976:	440b      	add	r3, r1
 800e978:	b29b      	uxth	r3, r3
 800e97a:	d1ef      	bne.n	800e95c <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0xc0>
 800e97c:	0a1a      	lsrs	r2, r3, #8
 800e97e:	f062 0155 	orn	r1, r2, #85	; 0x55
 800e982:	f042 0255 	orr.w	r2, r2, #85	; 0x55
 800e986:	7562      	strb	r2, [r4, #21]
 800e988:	f063 0255 	orn	r2, r3, #85	; 0x55
 800e98c:	f043 0355 	orr.w	r3, r3, #85	; 0x55
 800e990:	7521      	strb	r1, [r4, #20]
 800e992:	75a2      	strb	r2, [r4, #22]
 800e994:	75e3      	strb	r3, [r4, #23]
 800e996:	e7b4      	b.n	800e902 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800e998:	4651      	mov	r1, sl
 800e99a:	4653      	mov	r3, sl
 800e99c:	e7b6      	b.n	800e90c <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x70>
 800e99e:	f1b8 0f03 	cmp.w	r8, #3
 800e9a2:	d118      	bne.n	800e9d6 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x13a>
 800e9a4:	7daa      	ldrb	r2, [r5, #22]
 800e9a6:	2a00      	cmp	r2, #0
 800e9a8:	d1ab      	bne.n	800e902 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800e9aa:	707a      	strb	r2, [r7, #1]
 800e9ac:	f1ba 0f00 	cmp.w	sl, #0
 800e9b0:	d0a7      	beq.n	800e902 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800e9b2:	2b00      	cmp	r3, #0
 800e9b4:	d0a5      	beq.n	800e902 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800e9b6:	2302      	movs	r3, #2
 800e9b8:	75e3      	strb	r3, [r4, #23]
 800e9ba:	4b18      	ldr	r3, [pc, #96]	; (800ea1c <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x180>)
 800e9bc:	7622      	strb	r2, [r4, #24]
 800e9be:	681b      	ldr	r3, [r3, #0]
 800e9c0:	7662      	strb	r2, [r4, #25]
 800e9c2:	889b      	ldrh	r3, [r3, #4]
 800e9c4:	b10b      	cbz	r3, 800e9ca <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x12e>
 800e9c6:	2302      	movs	r3, #2
 800e9c8:	7663      	strb	r3, [r4, #25]
 800e9ca:	4638      	mov	r0, r7
 800e9cc:	b003      	add	sp, #12
 800e9ce:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e9d2:	f7ff bd81 	b.w	800e4d8 <RDMHandler::RespondMessageAck()>
 800e9d6:	f1b8 0f02 	cmp.w	r8, #2
 800e9da:	d192      	bne.n	800e902 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800e9dc:	7daa      	ldrb	r2, [r5, #22]
 800e9de:	2a00      	cmp	r2, #0
 800e9e0:	d18f      	bne.n	800e902 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800e9e2:	2101      	movs	r1, #1
 800e9e4:	7079      	strb	r1, [r7, #1]
 800e9e6:	2b00      	cmp	r3, #0
 800e9e8:	d08b      	beq.n	800e902 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800e9ea:	f884 8017 	strb.w	r8, [r4, #23]
 800e9ee:	e7e4      	b.n	800e9ba <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x11e>
 800e9f0:	7c68      	ldrb	r0, [r5, #17]
 800e9f2:	7cab      	ldrb	r3, [r5, #18]
 800e9f4:	f1ba 0f00 	cmp.w	sl, #0
 800e9f8:	eb03 2300 	add.w	r3, r3, r0, lsl #8
 800e9fc:	b29b      	uxth	r3, r3
 800e9fe:	9301      	str	r3, [sp, #4]
 800ea00:	7dab      	ldrb	r3, [r5, #22]
 800ea02:	bf08      	it	eq
 800ea04:	2101      	moveq	r1, #1
 800ea06:	9300      	str	r3, [sp, #0]
 800ea08:	4638      	mov	r0, r7
 800ea0a:	4643      	mov	r3, r8
 800ea0c:	f7ff fed4 	bl	800e7b8 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)>
 800ea10:	e777      	b.n	800e902 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800ea12:	bf00      	nop
 800ea14:	2000327c 	andcs	r3, r0, ip, ror r2
 800ea18:	080196bc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r9, sl, ip, pc}
 800ea1c:	20003278 	andcs	r3, r0, r8, ror r2

0800ea20 <RDMIdentify::RDMIdentify()>:
 800ea20:	4b01      	ldr	r3, [pc, #4]	; (800ea28 <RDMIdentify::RDMIdentify()+0x8>)
 800ea22:	6018      	str	r0, [r3, #0]
 800ea24:	4770      	bx	lr
 800ea26:	bf00      	nop
 800ea28:	20003284 	andcs	r3, r0, r4, lsl #5

0800ea2c <RDMIdentify::On(rdm::identify::Mode)>:
 800ea2c:	4770      	bx	lr

0800ea2e <RDMIdentify::Off(rdm::identify::Mode)>:
 800ea2e:	4770      	bx	lr

0800ea30 <memcpy.constprop.0.isra.0>:
 800ea30:	3801      	subs	r0, #1
 800ea32:	1d0a      	adds	r2, r1, #4
 800ea34:	4291      	cmp	r1, r2
 800ea36:	d004      	beq.n	800ea42 <memcpy.constprop.0.isra.0+0x12>
 800ea38:	f811 3b01 	ldrb.w	r3, [r1], #1
 800ea3c:	f800 3f01 	strb.w	r3, [r0, #1]!
 800ea40:	e7f8      	b.n	800ea34 <memcpy.constprop.0.isra.0+0x4>
 800ea42:	4770      	bx	lr

0800ea44 <RDMHandler::GetInterfaceList(unsigned short)>:
 800ea44:	4a08      	ldr	r2, [pc, #32]	; (800ea68 <RDMHandler::GetInterfaceList(unsigned short)+0x24>)
 800ea46:	6883      	ldr	r3, [r0, #8]
 800ea48:	6812      	ldr	r2, [r2, #0]
 800ea4a:	6852      	ldr	r2, [r2, #4]
 800ea4c:	0e11      	lsrs	r1, r2, #24
 800ea4e:	7619      	strb	r1, [r3, #24]
 800ea50:	0c11      	lsrs	r1, r2, #16
 800ea52:	7659      	strb	r1, [r3, #25]
 800ea54:	76da      	strb	r2, [r3, #27]
 800ea56:	0a11      	lsrs	r1, r2, #8
 800ea58:	2200      	movs	r2, #0
 800ea5a:	771a      	strb	r2, [r3, #28]
 800ea5c:	2206      	movs	r2, #6
 800ea5e:	7699      	strb	r1, [r3, #26]
 800ea60:	775a      	strb	r2, [r3, #29]
 800ea62:	75da      	strb	r2, [r3, #23]
 800ea64:	f7ff bd38 	b.w	800e4d8 <RDMHandler::RespondMessageAck()>
 800ea68:	200136bc 			; <UNDEFINED> instruction: 0x200136bc

0800ea6c <RDMHandler::GetInterfaceName(unsigned short)>:
 800ea6c:	b538      	push	{r3, r4, r5, lr}
 800ea6e:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800ea72:	4604      	mov	r4, r0
 800ea74:	3117      	adds	r1, #23
 800ea76:	f105 0018 	add.w	r0, r5, #24
 800ea7a:	f7ff ffd9 	bl	800ea30 <memcpy.constprop.0.isra.0>
 800ea7e:	4a0d      	ldr	r2, [pc, #52]	; (800eab4 <RDMHandler::GetInterfaceName(unsigned short)+0x48>)
 800ea80:	f105 001c 	add.w	r0, r5, #28
 800ea84:	6813      	ldr	r3, [r2, #0]
 800ea86:	33a2      	adds	r3, #162	; 0xa2
 800ea88:	f813 1b01 	ldrb.w	r1, [r3], #1
 800ea8c:	f800 1b01 	strb.w	r1, [r0], #1
 800ea90:	2900      	cmp	r1, #0
 800ea92:	d1f9      	bne.n	800ea88 <RDMHandler::GetInterfaceName(unsigned short)+0x1c>
 800ea94:	6812      	ldr	r2, [r2, #0]
 800ea96:	32a2      	adds	r2, #162	; 0xa2
 800ea98:	4611      	mov	r1, r2
 800ea9a:	460b      	mov	r3, r1
 800ea9c:	7818      	ldrb	r0, [r3, #0]
 800ea9e:	3101      	adds	r1, #1
 800eaa0:	2800      	cmp	r0, #0
 800eaa2:	d1fa      	bne.n	800ea9a <RDMHandler::GetInterfaceName(unsigned short)+0x2e>
 800eaa4:	1a9b      	subs	r3, r3, r2
 800eaa6:	3304      	adds	r3, #4
 800eaa8:	75eb      	strb	r3, [r5, #23]
 800eaaa:	4620      	mov	r0, r4
 800eaac:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800eab0:	f7ff bd12 	b.w	800e4d8 <RDMHandler::RespondMessageAck()>
 800eab4:	200136bc 			; <UNDEFINED> instruction: 0x200136bc

0800eab8 <RDMHandler::GetHardwareAddress(unsigned short)>:
 800eab8:	b538      	push	{r3, r4, r5, lr}
 800eaba:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800eabe:	4604      	mov	r4, r0
 800eac0:	3117      	adds	r1, #23
 800eac2:	f105 0018 	add.w	r0, r5, #24
 800eac6:	f7ff ffb3 	bl	800ea30 <memcpy.constprop.0.isra.0>
 800eaca:	4b06      	ldr	r3, [pc, #24]	; (800eae4 <RDMHandler::GetHardwareAddress(unsigned short)+0x2c>)
 800eacc:	f105 011c 	add.w	r1, r5, #28
 800ead0:	6818      	ldr	r0, [r3, #0]
 800ead2:	f004 f835 	bl	8012b40 <Network::MacAddressCopyTo(unsigned char*)>
 800ead6:	230a      	movs	r3, #10
 800ead8:	75eb      	strb	r3, [r5, #23]
 800eada:	4620      	mov	r0, r4
 800eadc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800eae0:	f7ff bcfa 	b.w	800e4d8 <RDMHandler::RespondMessageAck()>
 800eae4:	200136bc 			; <UNDEFINED> instruction: 0x200136bc

0800eae8 <RDMHandler::GetDHCPMode(unsigned short)>:
 800eae8:	b538      	push	{r3, r4, r5, lr}
 800eaea:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800eaee:	4604      	mov	r4, r0
 800eaf0:	3117      	adds	r1, #23
 800eaf2:	f105 0018 	add.w	r0, r5, #24
 800eaf6:	f7ff ff9b 	bl	800ea30 <memcpy.constprop.0.isra.0>
 800eafa:	4b05      	ldr	r3, [pc, #20]	; (800eb10 <RDMHandler::GetDHCPMode(unsigned short)+0x28>)
 800eafc:	4620      	mov	r0, r4
 800eafe:	681b      	ldr	r3, [r3, #0]
 800eb00:	785b      	ldrb	r3, [r3, #1]
 800eb02:	772b      	strb	r3, [r5, #28]
 800eb04:	2305      	movs	r3, #5
 800eb06:	75eb      	strb	r3, [r5, #23]
 800eb08:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800eb0c:	f7ff bce4 	b.w	800e4d8 <RDMHandler::RespondMessageAck()>
 800eb10:	200136bc 			; <UNDEFINED> instruction: 0x200136bc

0800eb14 <RDMHandler::SetDHCPMode(bool, unsigned short)>:
 800eb14:	4b10      	ldr	r3, [pc, #64]	; (800eb58 <RDMHandler::SetDHCPMode(bool, unsigned short)+0x44>)
 800eb16:	b510      	push	{r4, lr}
 800eb18:	681b      	ldr	r3, [r3, #0]
 800eb1a:	4604      	mov	r4, r0
 800eb1c:	781a      	ldrb	r2, [r3, #0]
 800eb1e:	b922      	cbnz	r2, 800eb2a <RDMHandler::SetDHCPMode(bool, unsigned short)+0x16>
 800eb20:	210b      	movs	r1, #11
 800eb22:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800eb26:	f7ff bd9b 	b.w	800e660 <RDMHandler::RespondMessageNack(unsigned short)>
 800eb2a:	6842      	ldr	r2, [r0, #4]
 800eb2c:	7ed2      	ldrb	r2, [r2, #27]
 800eb2e:	2a01      	cmp	r2, #1
 800eb30:	d109      	bne.n	800eb46 <RDMHandler::SetDHCPMode(bool, unsigned short)+0x32>
 800eb32:	f8d3 20bc 	ldr.w	r2, [r3, #188]	; 0xbc
 800eb36:	f042 0204 	orr.w	r2, r2, #4
 800eb3a:	f8c3 20bc 	str.w	r2, [r3, #188]	; 0xbc
 800eb3e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800eb42:	f7ff bcc9 	b.w	800e4d8 <RDMHandler::RespondMessageAck()>
 800eb46:	b92a      	cbnz	r2, 800eb54 <RDMHandler::SetDHCPMode(bool, unsigned short)+0x40>
 800eb48:	4618      	mov	r0, r3
 800eb4a:	4611      	mov	r1, r2
 800eb4c:	f004 fa70 	bl	8013030 <Network::SetQueuedStaticIp(unsigned int, unsigned int)>
 800eb50:	4620      	mov	r0, r4
 800eb52:	e7f4      	b.n	800eb3e <RDMHandler::SetDHCPMode(bool, unsigned short)+0x2a>
 800eb54:	2106      	movs	r1, #6
 800eb56:	e7e4      	b.n	800eb22 <RDMHandler::SetDHCPMode(bool, unsigned short)+0xe>
 800eb58:	200136bc 			; <UNDEFINED> instruction: 0x200136bc

0800eb5c <RDMHandler::GetNameServers(unsigned short)>:
 800eb5c:	6842      	ldr	r2, [r0, #4]
 800eb5e:	7dd2      	ldrb	r2, [r2, #23]
 800eb60:	2a02      	cmp	r2, #2
 800eb62:	d902      	bls.n	800eb6a <RDMHandler::GetNameServers(unsigned short)+0xe>
 800eb64:	2106      	movs	r1, #6
 800eb66:	f7ff bd7b 	b.w	800e660 <RDMHandler::RespondMessageNack(unsigned short)>
 800eb6a:	2200      	movs	r2, #0
 800eb6c:	6883      	ldr	r3, [r0, #8]
 800eb6e:	765a      	strb	r2, [r3, #25]
 800eb70:	769a      	strb	r2, [r3, #26]
 800eb72:	76da      	strb	r2, [r3, #27]
 800eb74:	771a      	strb	r2, [r3, #28]
 800eb76:	2205      	movs	r2, #5
 800eb78:	75da      	strb	r2, [r3, #23]
 800eb7a:	f7ff bcad 	b.w	800e4d8 <RDMHandler::RespondMessageAck()>
	...

0800eb80 <RDMHandler::GetZeroconf(unsigned short)>:
 800eb80:	b538      	push	{r3, r4, r5, lr}
 800eb82:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800eb86:	4604      	mov	r4, r0
 800eb88:	3117      	adds	r1, #23
 800eb8a:	f105 0018 	add.w	r0, r5, #24
 800eb8e:	f7ff ff4f 	bl	800ea30 <memcpy.constprop.0.isra.0>
 800eb92:	4b06      	ldr	r3, [pc, #24]	; (800ebac <RDMHandler::GetZeroconf(unsigned short)+0x2c>)
 800eb94:	681a      	ldr	r2, [r3, #0]
 800eb96:	7893      	ldrb	r3, [r2, #2]
 800eb98:	b103      	cbz	r3, 800eb9c <RDMHandler::GetZeroconf(unsigned short)+0x1c>
 800eb9a:	78d3      	ldrb	r3, [r2, #3]
 800eb9c:	772b      	strb	r3, [r5, #28]
 800eb9e:	2305      	movs	r3, #5
 800eba0:	75eb      	strb	r3, [r5, #23]
 800eba2:	4620      	mov	r0, r4
 800eba4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800eba8:	f7ff bc96 	b.w	800e4d8 <RDMHandler::RespondMessageAck()>
 800ebac:	200136bc 			; <UNDEFINED> instruction: 0x200136bc

0800ebb0 <RDMHandler::SetZeroconf(bool, unsigned short)>:
 800ebb0:	4b10      	ldr	r3, [pc, #64]	; (800ebf4 <RDMHandler::SetZeroconf(bool, unsigned short)+0x44>)
 800ebb2:	b510      	push	{r4, lr}
 800ebb4:	681b      	ldr	r3, [r3, #0]
 800ebb6:	4604      	mov	r4, r0
 800ebb8:	789a      	ldrb	r2, [r3, #2]
 800ebba:	b922      	cbnz	r2, 800ebc6 <RDMHandler::SetZeroconf(bool, unsigned short)+0x16>
 800ebbc:	210b      	movs	r1, #11
 800ebbe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ebc2:	f7ff bd4d 	b.w	800e660 <RDMHandler::RespondMessageNack(unsigned short)>
 800ebc6:	6842      	ldr	r2, [r0, #4]
 800ebc8:	7ed2      	ldrb	r2, [r2, #27]
 800ebca:	2a01      	cmp	r2, #1
 800ebcc:	d109      	bne.n	800ebe2 <RDMHandler::SetZeroconf(bool, unsigned short)+0x32>
 800ebce:	f8d3 20bc 	ldr.w	r2, [r3, #188]	; 0xbc
 800ebd2:	f042 0208 	orr.w	r2, r2, #8
 800ebd6:	f8c3 20bc 	str.w	r2, [r3, #188]	; 0xbc
 800ebda:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ebde:	f7ff bc7b 	b.w	800e4d8 <RDMHandler::RespondMessageAck()>
 800ebe2:	b92a      	cbnz	r2, 800ebf0 <RDMHandler::SetZeroconf(bool, unsigned short)+0x40>
 800ebe4:	4618      	mov	r0, r3
 800ebe6:	4611      	mov	r1, r2
 800ebe8:	f004 fa22 	bl	8013030 <Network::SetQueuedStaticIp(unsigned int, unsigned int)>
 800ebec:	4620      	mov	r0, r4
 800ebee:	e7f4      	b.n	800ebda <RDMHandler::SetZeroconf(bool, unsigned short)+0x2a>
 800ebf0:	2106      	movs	r1, #6
 800ebf2:	e7e4      	b.n	800ebbe <RDMHandler::SetZeroconf(bool, unsigned short)+0xe>
 800ebf4:	200136bc 			; <UNDEFINED> instruction: 0x200136bc

0800ebf8 <RDMHandler::RenewDhcp(bool, unsigned short)>:
 800ebf8:	4b09      	ldr	r3, [pc, #36]	; (800ec20 <RDMHandler::RenewDhcp(bool, unsigned short)+0x28>)
 800ebfa:	b510      	push	{r4, lr}
 800ebfc:	681b      	ldr	r3, [r3, #0]
 800ebfe:	4604      	mov	r4, r0
 800ec00:	785a      	ldrb	r2, [r3, #1]
 800ec02:	b922      	cbnz	r2, 800ec0e <RDMHandler::RenewDhcp(bool, unsigned short)+0x16>
 800ec04:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ec08:	210b      	movs	r1, #11
 800ec0a:	f7ff bd29 	b.w	800e660 <RDMHandler::RespondMessageNack(unsigned short)>
 800ec0e:	4618      	mov	r0, r3
 800ec10:	f004 f9c4 	bl	8012f9c <Network::EnableDhcp()>
 800ec14:	4620      	mov	r0, r4
 800ec16:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ec1a:	f7ff bc5d 	b.w	800e4d8 <RDMHandler::RespondMessageAck()>
 800ec1e:	bf00      	nop
 800ec20:	200136bc 			; <UNDEFINED> instruction: 0x200136bc

0800ec24 <RDMHandler::GetAddressNetmask(unsigned short)>:
 800ec24:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ec26:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800ec2a:	4e0f      	ldr	r6, [pc, #60]	; (800ec68 <RDMHandler::GetAddressNetmask(unsigned short)+0x44>)
 800ec2c:	4604      	mov	r4, r0
 800ec2e:	6833      	ldr	r3, [r6, #0]
 800ec30:	f105 0018 	add.w	r0, r5, #24
 800ec34:	691b      	ldr	r3, [r3, #16]
 800ec36:	3117      	adds	r1, #23
 800ec38:	9301      	str	r3, [sp, #4]
 800ec3a:	f7ff fef9 	bl	800ea30 <memcpy.constprop.0.isra.0>
 800ec3e:	a901      	add	r1, sp, #4
 800ec40:	f105 001c 	add.w	r0, r5, #28
 800ec44:	f7ff fef4 	bl	800ea30 <memcpy.constprop.0.isra.0>
 800ec48:	6836      	ldr	r6, [r6, #0]
 800ec4a:	69b0      	ldr	r0, [r6, #24]
 800ec4c:	f7f9 f936 	bl	8007ebc <__popcountsi2>
 800ec50:	f885 0020 	strb.w	r0, [r5, #32]
 800ec54:	7873      	ldrb	r3, [r6, #1]
 800ec56:	4620      	mov	r0, r4
 800ec58:	f885 3021 	strb.w	r3, [r5, #33]	; 0x21
 800ec5c:	230a      	movs	r3, #10
 800ec5e:	75eb      	strb	r3, [r5, #23]
 800ec60:	f7ff fc3a 	bl	800e4d8 <RDMHandler::RespondMessageAck()>
 800ec64:	b002      	add	sp, #8
 800ec66:	bd70      	pop	{r4, r5, r6, pc}
 800ec68:	200136bc 			; <UNDEFINED> instruction: 0x200136bc

0800ec6c <RDMHandler::GetStaticAddress(unsigned short)>:
 800ec6c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ec6e:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800ec72:	4e0e      	ldr	r6, [pc, #56]	; (800ecac <RDMHandler::GetStaticAddress(unsigned short)+0x40>)
 800ec74:	4604      	mov	r4, r0
 800ec76:	6833      	ldr	r3, [r6, #0]
 800ec78:	f105 0018 	add.w	r0, r5, #24
 800ec7c:	691b      	ldr	r3, [r3, #16]
 800ec7e:	3117      	adds	r1, #23
 800ec80:	9301      	str	r3, [sp, #4]
 800ec82:	f7ff fed5 	bl	800ea30 <memcpy.constprop.0.isra.0>
 800ec86:	a901      	add	r1, sp, #4
 800ec88:	f105 001c 	add.w	r0, r5, #28
 800ec8c:	f7ff fed0 	bl	800ea30 <memcpy.constprop.0.isra.0>
 800ec90:	6833      	ldr	r3, [r6, #0]
 800ec92:	6998      	ldr	r0, [r3, #24]
 800ec94:	f7f9 f912 	bl	8007ebc <__popcountsi2>
 800ec98:	2309      	movs	r3, #9
 800ec9a:	f885 0020 	strb.w	r0, [r5, #32]
 800ec9e:	75eb      	strb	r3, [r5, #23]
 800eca0:	4620      	mov	r0, r4
 800eca2:	f7ff fc19 	bl	800e4d8 <RDMHandler::RespondMessageAck()>
 800eca6:	b002      	add	sp, #8
 800eca8:	bd70      	pop	{r4, r5, r6, pc}
 800ecaa:	bf00      	nop
 800ecac:	200136bc 			; <UNDEFINED> instruction: 0x200136bc

0800ecb0 <RDMHandler::SetStaticAddress(bool, unsigned short)>:
 800ecb0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ecb2:	6845      	ldr	r5, [r0, #4]
 800ecb4:	4604      	mov	r4, r0
 800ecb6:	7dab      	ldrb	r3, [r5, #22]
 800ecb8:	2b09      	cmp	r3, #9
 800ecba:	d005      	beq.n	800ecc8 <RDMHandler::SetStaticAddress(bool, unsigned short)+0x18>
 800ecbc:	2101      	movs	r1, #1
 800ecbe:	b003      	add	sp, #12
 800ecc0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800ecc4:	f7ff bccc 	b.w	800e660 <RDMHandler::RespondMessageNack(unsigned short)>
 800ecc8:	f105 011b 	add.w	r1, r5, #27
 800eccc:	a801      	add	r0, sp, #4
 800ecce:	f7ff feaf 	bl	800ea30 <memcpy.constprop.0.isra.0>
 800ecd2:	4b09      	ldr	r3, [pc, #36]	; (800ecf8 <RDMHandler::SetStaticAddress(bool, unsigned short)+0x48>)
 800ecd4:	7fea      	ldrb	r2, [r5, #31]
 800ecd6:	6818      	ldr	r0, [r3, #0]
 800ecd8:	9901      	ldr	r1, [sp, #4]
 800ecda:	b132      	cbz	r2, 800ecea <RDMHandler::SetStaticAddress(bool, unsigned short)+0x3a>
 800ecdc:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800ece0:	f1c2 0220 	rsb	r2, r2, #32
 800ece4:	fa03 f202 	lsl.w	r2, r3, r2
 800ece8:	ba12      	rev	r2, r2
 800ecea:	f004 f9a1 	bl	8013030 <Network::SetQueuedStaticIp(unsigned int, unsigned int)>
 800ecee:	4620      	mov	r0, r4
 800ecf0:	f7ff fbf2 	bl	800e4d8 <RDMHandler::RespondMessageAck()>
 800ecf4:	b003      	add	sp, #12
 800ecf6:	bd30      	pop	{r4, r5, pc}
 800ecf8:	200136bc 			; <UNDEFINED> instruction: 0x200136bc

0800ecfc <RDMHandler::ApplyConfiguration(bool, unsigned short)>:
 800ecfc:	4b08      	ldr	r3, [pc, #32]	; (800ed20 <RDMHandler::ApplyConfiguration(bool, unsigned short)+0x24>)
 800ecfe:	b510      	push	{r4, lr}
 800ed00:	4604      	mov	r4, r0
 800ed02:	6818      	ldr	r0, [r3, #0]
 800ed04:	f004 f9a1 	bl	801304a <Network::ApplyQueuedConfig()>
 800ed08:	b120      	cbz	r0, 800ed14 <RDMHandler::ApplyConfiguration(bool, unsigned short)+0x18>
 800ed0a:	4620      	mov	r0, r4
 800ed0c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ed10:	f7ff bbe2 	b.w	800e4d8 <RDMHandler::RespondMessageAck()>
 800ed14:	4620      	mov	r0, r4
 800ed16:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ed1a:	2101      	movs	r1, #1
 800ed1c:	f7ff bca0 	b.w	800e660 <RDMHandler::RespondMessageNack(unsigned short)>
 800ed20:	200136bc 			; <UNDEFINED> instruction: 0x200136bc

0800ed24 <RDMHandler::GetDefaultRoute(unsigned short)>:
 800ed24:	4b0c      	ldr	r3, [pc, #48]	; (800ed58 <RDMHandler::GetDefaultRoute(unsigned short)+0x34>)
 800ed26:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ed28:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800ed2c:	681b      	ldr	r3, [r3, #0]
 800ed2e:	4604      	mov	r4, r0
 800ed30:	695b      	ldr	r3, [r3, #20]
 800ed32:	f105 0018 	add.w	r0, r5, #24
 800ed36:	3117      	adds	r1, #23
 800ed38:	9301      	str	r3, [sp, #4]
 800ed3a:	f7ff fe79 	bl	800ea30 <memcpy.constprop.0.isra.0>
 800ed3e:	a901      	add	r1, sp, #4
 800ed40:	f105 001c 	add.w	r0, r5, #28
 800ed44:	f7ff fe74 	bl	800ea30 <memcpy.constprop.0.isra.0>
 800ed48:	2308      	movs	r3, #8
 800ed4a:	4620      	mov	r0, r4
 800ed4c:	75eb      	strb	r3, [r5, #23]
 800ed4e:	f7ff fbc3 	bl	800e4d8 <RDMHandler::RespondMessageAck()>
 800ed52:	b003      	add	sp, #12
 800ed54:	bd30      	pop	{r4, r5, pc}
 800ed56:	bf00      	nop
 800ed58:	200136bc 			; <UNDEFINED> instruction: 0x200136bc

0800ed5c <RDMHandler::SetDefaultRoute(bool, unsigned short)>:
 800ed5c:	210b      	movs	r1, #11
 800ed5e:	f7ff bc7f 	b.w	800e660 <RDMHandler::RespondMessageNack(unsigned short)>
	...

0800ed64 <RDMHandler::GetHostName(unsigned short)>:
 800ed64:	4b0a      	ldr	r3, [pc, #40]	; (800ed90 <RDMHandler::GetHostName(unsigned short)+0x2c>)
 800ed66:	b510      	push	{r4, lr}
 800ed68:	6819      	ldr	r1, [r3, #0]
 800ed6a:	4604      	mov	r4, r0
 800ed6c:	311c      	adds	r1, #28
 800ed6e:	460b      	mov	r3, r1
 800ed70:	461a      	mov	r2, r3
 800ed72:	7810      	ldrb	r0, [r2, #0]
 800ed74:	3301      	adds	r3, #1
 800ed76:	2800      	cmp	r0, #0
 800ed78:	d1fa      	bne.n	800ed70 <RDMHandler::GetHostName(unsigned short)+0xc>
 800ed7a:	1a52      	subs	r2, r2, r1
 800ed7c:	4620      	mov	r0, r4
 800ed7e:	b292      	uxth	r2, r2
 800ed80:	f7ff fb50 	bl	800e424 <RDMHandler::HandleString(char const*, unsigned int)>
 800ed84:	4620      	mov	r0, r4
 800ed86:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ed8a:	f7ff bba5 	b.w	800e4d8 <RDMHandler::RespondMessageAck()>
 800ed8e:	bf00      	nop
 800ed90:	200136bc 			; <UNDEFINED> instruction: 0x200136bc

0800ed94 <RDMHandler::SetHostName(bool, unsigned short)>:
 800ed94:	b510      	push	{r4, lr}
 800ed96:	6841      	ldr	r1, [r0, #4]
 800ed98:	4604      	mov	r4, r0
 800ed9a:	7d8b      	ldrb	r3, [r1, #22]
 800ed9c:	2b3f      	cmp	r3, #63	; 0x3f
 800ed9e:	d904      	bls.n	800edaa <RDMHandler::SetHostName(bool, unsigned short)+0x16>
 800eda0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800eda4:	2102      	movs	r1, #2
 800eda6:	f7ff bc5b 	b.w	800e660 <RDMHandler::RespondMessageNack(unsigned short)>
 800edaa:	2200      	movs	r2, #0
 800edac:	440b      	add	r3, r1
 800edae:	75da      	strb	r2, [r3, #23]
 800edb0:	4b04      	ldr	r3, [pc, #16]	; (800edc4 <RDMHandler::SetHostName(bool, unsigned short)+0x30>)
 800edb2:	3117      	adds	r1, #23
 800edb4:	6818      	ldr	r0, [r3, #0]
 800edb6:	f004 f8b0 	bl	8012f1a <Network::SetHostName(char const*)>
 800edba:	4620      	mov	r0, r4
 800edbc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800edc0:	f7ff bb8a 	b.w	800e4d8 <RDMHandler::RespondMessageAck()>
 800edc4:	200136bc 			; <UNDEFINED> instruction: 0x200136bc

0800edc8 <RDMHandler::GetDomainName(unsigned short)>:
 800edc8:	4b0a      	ldr	r3, [pc, #40]	; (800edf4 <RDMHandler::GetDomainName(unsigned short)+0x2c>)
 800edca:	b510      	push	{r4, lr}
 800edcc:	6819      	ldr	r1, [r3, #0]
 800edce:	4604      	mov	r4, r0
 800edd0:	315c      	adds	r1, #92	; 0x5c
 800edd2:	460b      	mov	r3, r1
 800edd4:	461a      	mov	r2, r3
 800edd6:	7810      	ldrb	r0, [r2, #0]
 800edd8:	3301      	adds	r3, #1
 800edda:	2800      	cmp	r0, #0
 800eddc:	d1fa      	bne.n	800edd4 <RDMHandler::GetDomainName(unsigned short)+0xc>
 800edde:	1a52      	subs	r2, r2, r1
 800ede0:	4620      	mov	r0, r4
 800ede2:	b292      	uxth	r2, r2
 800ede4:	f7ff fb1e 	bl	800e424 <RDMHandler::HandleString(char const*, unsigned int)>
 800ede8:	4620      	mov	r0, r4
 800edea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800edee:	f7ff bb73 	b.w	800e4d8 <RDMHandler::RespondMessageAck()>
 800edf2:	bf00      	nop
 800edf4:	200136bc 			; <UNDEFINED> instruction: 0x200136bc

0800edf8 <RDMHandler::SetDomainName(bool, unsigned short)>:
 800edf8:	210b      	movs	r1, #11
 800edfa:	f7ff bc31 	b.w	800e660 <RDMHandler::RespondMessageNack(unsigned short)>
	...

0800ee00 <RDMDevice::RDMDevice()>:
 800ee00:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ee02:	4b35      	ldr	r3, [pc, #212]	; (800eed8 <RDMDevice::RDMDevice()+0xd8>)
 800ee04:	4a35      	ldr	r2, [pc, #212]	; (800eedc <RDMDevice::RDMDevice()+0xdc>)
 800ee06:	7859      	ldrb	r1, [r3, #1]
 800ee08:	4604      	mov	r4, r0
 800ee0a:	f880 1050 	strb.w	r1, [r0, #80]	; 0x50
 800ee0e:	7818      	ldrb	r0, [r3, #0]
 800ee10:	2300      	movs	r3, #0
 800ee12:	4615      	mov	r5, r2
 800ee14:	f884 0051 	strb.w	r0, [r4, #81]	; 0x51
 800ee18:	f884 3052 	strb.w	r3, [r4, #82]	; 0x52
 800ee1c:	f884 3073 	strb.w	r3, [r4, #115]	; 0x73
 800ee20:	f8a4 3074 	strh.w	r3, [r4, #116]	; 0x74
 800ee24:	67a3      	str	r3, [r4, #120]	; 0x78
 800ee26:	4613      	mov	r3, r2
 800ee28:	781e      	ldrb	r6, [r3, #0]
 800ee2a:	3201      	adds	r2, #1
 800ee2c:	2e00      	cmp	r6, #0
 800ee2e:	d1fa      	bne.n	800ee26 <RDMDevice::RDMDevice()+0x26>
 800ee30:	1b5b      	subs	r3, r3, r5
 800ee32:	2b20      	cmp	r3, #32
 800ee34:	bf28      	it	cs
 800ee36:	2320      	movcs	r3, #32
 800ee38:	f104 052b 	add.w	r5, r4, #43	; 0x2b
 800ee3c:	462e      	mov	r6, r5
 800ee3e:	461a      	mov	r2, r3
 800ee40:	4f26      	ldr	r7, [pc, #152]	; (800eedc <RDMDevice::RDMDevice()+0xdc>)
 800ee42:	3a01      	subs	r2, #1
 800ee44:	d304      	bcc.n	800ee50 <RDMDevice::RDMDevice()+0x50>
 800ee46:	f817 cb01 	ldrb.w	ip, [r7], #1
 800ee4a:	f806 cb01 	strb.w	ip, [r6], #1
 800ee4e:	e7f8      	b.n	800ee42 <RDMDevice::RDMDevice()+0x42>
 800ee50:	f884 304b 	strb.w	r3, [r4, #75]	; 0x4b
 800ee54:	4b22      	ldr	r3, [pc, #136]	; (800eee0 <RDMDevice::RDMDevice()+0xe0>)
 800ee56:	7020      	strb	r0, [r4, #0]
 800ee58:	7061      	strb	r1, [r4, #1]
 800ee5a:	6818      	ldr	r0, [r3, #0]
 800ee5c:	4669      	mov	r1, sp
 800ee5e:	f003 fe6f 	bl	8012b40 <Network::MacAddressCopyTo(unsigned char*)>
 800ee62:	f89d 3002 	ldrb.w	r3, [sp, #2]
 800ee66:	f89d 2003 	ldrb.w	r2, [sp, #3]
 800ee6a:	70a3      	strb	r3, [r4, #2]
 800ee6c:	7263      	strb	r3, [r4, #9]
 800ee6e:	4b1d      	ldr	r3, [pc, #116]	; (800eee4 <RDMDevice::RDMDevice()+0xe4>)
 800ee70:	70e2      	strb	r2, [r4, #3]
 800ee72:	7222      	strb	r2, [r4, #8]
 800ee74:	461a      	mov	r2, r3
 800ee76:	f89d 1004 	ldrb.w	r1, [sp, #4]
 800ee7a:	f89d 0005 	ldrb.w	r0, [sp, #5]
 800ee7e:	7121      	strb	r1, [r4, #4]
 800ee80:	7160      	strb	r0, [r4, #5]
 800ee82:	71a0      	strb	r0, [r4, #6]
 800ee84:	71e1      	strb	r1, [r4, #7]
 800ee86:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800ee8a:	2900      	cmp	r1, #0
 800ee8c:	d1fb      	bne.n	800ee86 <RDMDevice::RDMDevice()+0x86>
 800ee8e:	1a9b      	subs	r3, r3, r2
 800ee90:	2b20      	cmp	r3, #32
 800ee92:	bf28      	it	cs
 800ee94:	2320      	movcs	r3, #32
 800ee96:	461a      	mov	r2, r3
 800ee98:	4912      	ldr	r1, [pc, #72]	; (800eee4 <RDMDevice::RDMDevice()+0xe4>)
 800ee9a:	3a01      	subs	r2, #1
 800ee9c:	d304      	bcc.n	800eea8 <RDMDevice::RDMDevice()+0xa8>
 800ee9e:	f811 0b01 	ldrb.w	r0, [r1], #1
 800eea2:	f805 0b01 	strb.w	r0, [r5], #1
 800eea6:	e7f8      	b.n	800ee9a <RDMDevice::RDMDevice()+0x9a>
 800eea8:	f884 304b 	strb.w	r3, [r4, #75]	; 0x4b
 800eeac:	f06f 2380 	mvn.w	r3, #2147516416	; 0x80008000
 800eeb0:	64e3      	str	r3, [r4, #76]	; 0x4c
 800eeb2:	2319      	movs	r3, #25
 800eeb4:	4a0c      	ldr	r2, [pc, #48]	; (800eee8 <RDMDevice::RDMDevice()+0xe8>)
 800eeb6:	f884 3073 	strb.w	r3, [r4, #115]	; 0x73
 800eeba:	f104 006c 	add.w	r0, r4, #108	; 0x6c
 800eebe:	f104 0353 	add.w	r3, r4, #83	; 0x53
 800eec2:	4298      	cmp	r0, r3
 800eec4:	d004      	beq.n	800eed0 <RDMDevice::RDMDevice()+0xd0>
 800eec6:	f812 1b01 	ldrb.w	r1, [r2], #1
 800eeca:	f803 1b01 	strb.w	r1, [r3], #1
 800eece:	e7f8      	b.n	800eec2 <RDMDevice::RDMDevice()+0xc2>
 800eed0:	4620      	mov	r0, r4
 800eed2:	b003      	add	sp, #12
 800eed4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800eed6:	bf00      	nop
 800eed8:	08019992 	stmdaeq	r1, {r1, r4, r7, r8, fp, ip, pc}
 800eedc:	08019994 	stmdaeq	r1, {r2, r4, r7, r8, fp, ip, pc}
 800eee0:	200136bc 			; <UNDEFINED> instruction: 0x200136bc
 800eee4:	08019161 	stmdaeq	r1, {r0, r5, r6, r8, ip, pc}
 800eee8:	08019978 	stmdaeq	r1, {r3, r4, r5, r6, r8, fp, ip, pc}

0800eeec <RDMDevice::Print()>:
 800eeec:	b513      	push	{r0, r1, r4, lr}
 800eeee:	4604      	mov	r4, r0
 800eef0:	4818      	ldr	r0, [pc, #96]	; (800ef54 <RDMDevice::Print()+0x68>)
 800eef2:	f7fa f855 	bl	8008fa0 <printf>
 800eef6:	f894 104b 	ldrb.w	r1, [r4, #75]	; 0x4b
 800eefa:	f104 022b 	add.w	r2, r4, #43	; 0x2b
 800eefe:	4816      	ldr	r0, [pc, #88]	; (800ef58 <RDMDevice::Print()+0x6c>)
 800ef00:	f7fa f84e 	bl	8008fa0 <printf>
 800ef04:	7862      	ldrb	r2, [r4, #1]
 800ef06:	7821      	ldrb	r1, [r4, #0]
 800ef08:	4814      	ldr	r0, [pc, #80]	; (800ef5c <RDMDevice::Print()+0x70>)
 800ef0a:	f7fa f849 	bl	8008fa0 <printf>
 800ef0e:	79a3      	ldrb	r3, [r4, #6]
 800ef10:	7a22      	ldrb	r2, [r4, #8]
 800ef12:	7a61      	ldrb	r1, [r4, #9]
 800ef14:	9300      	str	r3, [sp, #0]
 800ef16:	4812      	ldr	r0, [pc, #72]	; (800ef60 <RDMDevice::Print()+0x74>)
 800ef18:	79e3      	ldrb	r3, [r4, #7]
 800ef1a:	f7fa f841 	bl	8008fa0 <printf>
 800ef1e:	f894 102a 	ldrb.w	r1, [r4, #42]	; 0x2a
 800ef22:	f104 020a 	add.w	r2, r4, #10
 800ef26:	480f      	ldr	r0, [pc, #60]	; (800ef64 <RDMDevice::Print()+0x78>)
 800ef28:	f7fa f83a 	bl	8008fa0 <printf>
 800ef2c:	f8b4 104c 	ldrh.w	r1, [r4, #76]	; 0x4c
 800ef30:	f894 204c 	ldrb.w	r2, [r4, #76]	; 0x4c
 800ef34:	0a09      	lsrs	r1, r1, #8
 800ef36:	480c      	ldr	r0, [pc, #48]	; (800ef68 <RDMDevice::Print()+0x7c>)
 800ef38:	f7fa f832 	bl	8008fa0 <printf>
 800ef3c:	f8b4 104e 	ldrh.w	r1, [r4, #78]	; 0x4e
 800ef40:	f894 204e 	ldrb.w	r2, [r4, #78]	; 0x4e
 800ef44:	4809      	ldr	r0, [pc, #36]	; (800ef6c <RDMDevice::Print()+0x80>)
 800ef46:	0a09      	lsrs	r1, r1, #8
 800ef48:	b002      	add	sp, #8
 800ef4a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ef4e:	f7fa b827 	b.w	8008fa0 <printf>
 800ef52:	bf00      	nop
 800ef54:	080198a4 	stmdaeq	r1, {r2, r5, r7, fp, ip, pc}
 800ef58:	080198be 	stmdaeq	r1, {r1, r2, r3, r4, r5, r7, fp, ip, pc}
 800ef5c:	080198d9 	stmdaeq	r1, {r0, r3, r4, r6, r7, fp, ip, pc}
 800ef60:	080198f8 	stmdaeq	r1, {r3, r4, r5, r6, r7, fp, ip, pc}
 800ef64:	0801991f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r8, fp, ip, pc}
 800ef68:	0801993a 	stmdaeq	r1, {r1, r3, r4, r5, r8, fp, ip, pc}
 800ef6c:	08019959 	stmdaeq	r1, {r0, r3, r4, r6, r8, fp, ip, pc}

0800ef70 <uuid_unparse_x>:
 800ef70:	4603      	mov	r3, r0
 800ef72:	b530      	push	{r4, r5, lr}
 800ef74:	4608      	mov	r0, r1
 800ef76:	4611      	mov	r1, r2
 800ef78:	681a      	ldr	r2, [r3, #0]
 800ef7a:	b08f      	sub	sp, #60	; 0x3c
 800ef7c:	ba12      	rev	r2, r2
 800ef7e:	920a      	str	r2, [sp, #40]	; 0x28
 800ef80:	889a      	ldrh	r2, [r3, #4]
 800ef82:	891c      	ldrh	r4, [r3, #8]
 800ef84:	ba52      	rev16	r2, r2
 800ef86:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800ef8a:	88da      	ldrh	r2, [r3, #6]
 800ef8c:	ba64      	rev16	r4, r4
 800ef8e:	ba52      	rev16	r2, r2
 800ef90:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 800ef94:	f8ad 4030 	strh.w	r4, [sp, #48]	; 0x30
 800ef98:	f103 020a 	add.w	r2, r3, #10
 800ef9c:	f10d 0432 	add.w	r4, sp, #50	; 0x32
 800efa0:	3310      	adds	r3, #16
 800efa2:	4293      	cmp	r3, r2
 800efa4:	d122      	bne.n	800efec <uuid_unparse_x+0x7c>
 800efa6:	f89d 2037 	ldrb.w	r2, [sp, #55]	; 0x37
 800efaa:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 800efae:	9208      	str	r2, [sp, #32]
 800efb0:	f89d 2036 	ldrb.w	r2, [sp, #54]	; 0x36
 800efb4:	0a1b      	lsrs	r3, r3, #8
 800efb6:	9207      	str	r2, [sp, #28]
 800efb8:	f89d 2035 	ldrb.w	r2, [sp, #53]	; 0x35
 800efbc:	9301      	str	r3, [sp, #4]
 800efbe:	9206      	str	r2, [sp, #24]
 800efc0:	f89d 2034 	ldrb.w	r2, [sp, #52]	; 0x34
 800efc4:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 800efc8:	9205      	str	r2, [sp, #20]
 800efca:	f89d 2033 	ldrb.w	r2, [sp, #51]	; 0x33
 800efce:	9300      	str	r3, [sp, #0]
 800efd0:	9204      	str	r2, [sp, #16]
 800efd2:	f89d 2032 	ldrb.w	r2, [sp, #50]	; 0x32
 800efd6:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 800efda:	9203      	str	r2, [sp, #12]
 800efdc:	f89d 2030 	ldrb.w	r2, [sp, #48]	; 0x30
 800efe0:	9202      	str	r2, [sp, #8]
 800efe2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800efe4:	f7f9 ffec 	bl	8008fc0 <sprintf>
 800efe8:	b00f      	add	sp, #60	; 0x3c
 800efea:	bd30      	pop	{r4, r5, pc}
 800efec:	f812 5b01 	ldrb.w	r5, [r2], #1
 800eff0:	f804 5b01 	strb.w	r5, [r4], #1
 800eff4:	e7d5      	b.n	800efa2 <uuid_unparse_x+0x32>
	...

0800eff8 <uuid_unparse>:
 800eff8:	4a01      	ldr	r2, [pc, #4]	; (800f000 <uuid_unparse+0x8>)
 800effa:	f7ff bfb9 	b.w	800ef70 <uuid_unparse_x>
 800effe:	bf00      	nop
 800f000:	080199b0 	stmdaeq	r1, {r4, r5, r7, r8, fp, ip, pc}

0800f004 <WS28xxDmxMulti::SetDmxStartAddress(unsigned short)>:
 800f004:	2000      	movs	r0, #0
 800f006:	4770      	bx	lr

0800f008 <WS28xxDmxMulti::GetDmxStartAddress()>:
 800f008:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800f00c:	4770      	bx	lr

0800f00e <WS28xxDmxMulti::GetDmxFootprint()>:
 800f00e:	2000      	movs	r0, #0
 800f010:	4770      	bx	lr

0800f012 <WS28xxDmxMulti::Start(unsigned int)>:
 800f012:	b538      	push	{r3, r4, r5, lr}
 800f014:	6b03      	ldr	r3, [r0, #48]	; 0x30
 800f016:	4604      	mov	r4, r0
 800f018:	460d      	mov	r5, r1
 800f01a:	b923      	cbnz	r3, 800f026 <WS28xxDmxMulti::Start(unsigned int)+0x14>
 800f01c:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 800f01e:	b110      	cbz	r0, 800f026 <WS28xxDmxMulti::Start(unsigned int)+0x14>
 800f020:	6803      	ldr	r3, [r0, #0]
 800f022:	689b      	ldr	r3, [r3, #8]
 800f024:	4798      	blx	r3
 800f026:	2301      	movs	r3, #1
 800f028:	fa03 f105 	lsl.w	r1, r3, r5
 800f02c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800f02e:	430b      	orrs	r3, r1
 800f030:	6323      	str	r3, [r4, #48]	; 0x30
 800f032:	bd38      	pop	{r3, r4, r5, pc}

0800f034 <WS28xxDmxMulti::~WS28xxDmxMulti()>:
 800f034:	b538      	push	{r3, r4, r5, lr}
 800f036:	4b06      	ldr	r3, [pc, #24]	; (800f050 <WS28xxDmxMulti::~WS28xxDmxMulti()+0x1c>)
 800f038:	6a85      	ldr	r5, [r0, #40]	; 0x28
 800f03a:	4604      	mov	r4, r0
 800f03c:	6003      	str	r3, [r0, #0]
 800f03e:	b12d      	cbz	r5, 800f04c <WS28xxDmxMulti::~WS28xxDmxMulti()+0x18>
 800f040:	4628      	mov	r0, r5
 800f042:	f001 faa3 	bl	801058c <WS28xxMulti::~WS28xxMulti()>
 800f046:	4628      	mov	r0, r5
 800f048:	f006 fd9a 	bl	8015b80 <operator delete(void*)>
 800f04c:	4620      	mov	r0, r4
 800f04e:	bd38      	pop	{r3, r4, r5, pc}
 800f050:	08019a34 	stmdaeq	r1, {r2, r4, r5, r9, fp, ip, pc}

0800f054 <WS28xxDmxMulti::~WS28xxDmxMulti()>:
 800f054:	b510      	push	{r4, lr}
 800f056:	4604      	mov	r4, r0
 800f058:	f7ff ffec 	bl	800f034 <WS28xxDmxMulti::~WS28xxDmxMulti()>
 800f05c:	4620      	mov	r0, r4
 800f05e:	f006 fd8f 	bl	8015b80 <operator delete(void*)>
 800f062:	4620      	mov	r0, r4
 800f064:	bd10      	pop	{r4, pc}

0800f066 <WS28xxDmxMulti::Blackout(bool)>:
 800f066:	b538      	push	{r3, r4, r5, lr}
 800f068:	4604      	mov	r4, r0
 800f06a:	460d      	mov	r5, r1
 800f06c:	f880 1034 	strb.w	r1, [r0, #52]	; 0x34
 800f070:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800f072:	f001 fb41 	bl	80106f8 <WS28xxMulti::IsUpdating()>
 800f076:	2800      	cmp	r0, #0
 800f078:	d1fa      	bne.n	800f070 <WS28xxDmxMulti::Blackout(bool)+0xa>
 800f07a:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800f07c:	b11d      	cbz	r5, 800f086 <WS28xxDmxMulti::Blackout(bool)+0x20>
 800f07e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800f082:	f001 bb1b 	b.w	80106bc <WS28xxMulti::Blackout()>
 800f086:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800f08a:	f001 baa7 	b.w	80105dc <WS28xxMulti::Update()>

0800f08e <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)>:
 800f08e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f092:	6a06      	ldr	r6, [r0, #32]
 800f094:	4690      	mov	r8, r2
 800f096:	f001 0203 	and.w	r2, r1, #3
 800f09a:	b087      	sub	sp, #28
 800f09c:	2a02      	cmp	r2, #2
 800f09e:	4699      	mov	r9, r3
 800f0a0:	4604      	mov	r4, r0
 800f0a2:	fbb3 f3f6 	udiv	r3, r3, r6
 800f0a6:	9104      	str	r1, [sp, #16]
 800f0a8:	6946      	ldr	r6, [r0, #20]
 800f0aa:	ea4f 0a91 	mov.w	sl, r1, lsr #2
 800f0ae:	d038      	beq.n	800f122 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x94>
 800f0b0:	2a03      	cmp	r2, #3
 800f0b2:	d038      	beq.n	800f126 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x98>
 800f0b4:	2a01      	cmp	r2, #1
 800f0b6:	d02e      	beq.n	800f116 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x88>
 800f0b8:	429e      	cmp	r6, r3
 800f0ba:	bf28      	it	cs
 800f0bc:	461e      	movcs	r6, r3
 800f0be:	2500      	movs	r5, #0
 800f0c0:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800f0c2:	f001 fb19 	bl	80106f8 <WS28xxMulti::IsUpdating()>
 800f0c6:	2800      	cmp	r0, #0
 800f0c8:	d1fa      	bne.n	800f0c0 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x32>
 800f0ca:	6a23      	ldr	r3, [r4, #32]
 800f0cc:	4647      	mov	r7, r8
 800f0ce:	2b03      	cmp	r3, #3
 800f0d0:	d02d      	beq.n	800f12e <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xa0>
 800f0d2:	42b5      	cmp	r5, r6
 800f0d4:	d24e      	bcs.n	800f174 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xe6>
 800f0d6:	eba7 0308 	sub.w	r3, r7, r8
 800f0da:	4599      	cmp	r9, r3
 800f0dc:	d94a      	bls.n	800f174 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xe6>
 800f0de:	f04f 0b00 	mov.w	fp, #0
 800f0e2:	69a3      	ldr	r3, [r4, #24]
 800f0e4:	f897 f000 	pld	[r7]
 800f0e8:	436b      	muls	r3, r5
 800f0ea:	9305      	str	r3, [sp, #20]
 800f0ec:	69a3      	ldr	r3, [r4, #24]
 800f0ee:	fa1f f28b 	uxth.w	r2, fp
 800f0f2:	4293      	cmp	r3, r2
 800f0f4:	f10b 0b01 	add.w	fp, fp, #1
 800f0f8:	d939      	bls.n	800f16e <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xe0>
 800f0fa:	78fb      	ldrb	r3, [r7, #3]
 800f0fc:	9905      	ldr	r1, [sp, #20]
 800f0fe:	9302      	str	r3, [sp, #8]
 800f100:	78bb      	ldrb	r3, [r7, #2]
 800f102:	440a      	add	r2, r1
 800f104:	9301      	str	r3, [sp, #4]
 800f106:	787b      	ldrb	r3, [r7, #1]
 800f108:	4651      	mov	r1, sl
 800f10a:	9300      	str	r3, [sp, #0]
 800f10c:	783b      	ldrb	r3, [r7, #0]
 800f10e:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800f110:	f001 fb62 	bl	80107d8 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
 800f114:	e7ea      	b.n	800f0ec <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x5e>
 800f116:	6845      	ldr	r5, [r0, #4]
 800f118:	442b      	add	r3, r5
 800f11a:	429e      	cmp	r6, r3
 800f11c:	bf28      	it	cs
 800f11e:	461e      	movcs	r6, r3
 800f120:	e7ce      	b.n	800f0c0 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x32>
 800f122:	6885      	ldr	r5, [r0, #8]
 800f124:	e7f8      	b.n	800f118 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x8a>
 800f126:	68c5      	ldr	r5, [r0, #12]
 800f128:	e7f6      	b.n	800f118 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x8a>
 800f12a:	3501      	adds	r5, #1
 800f12c:	3703      	adds	r7, #3
 800f12e:	42b5      	cmp	r5, r6
 800f130:	d220      	bcs.n	800f174 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xe6>
 800f132:	eba7 0308 	sub.w	r3, r7, r8
 800f136:	4599      	cmp	r9, r3
 800f138:	d91c      	bls.n	800f174 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xe6>
 800f13a:	f04f 0b00 	mov.w	fp, #0
 800f13e:	69a3      	ldr	r3, [r4, #24]
 800f140:	f897 f000 	pld	[r7]
 800f144:	436b      	muls	r3, r5
 800f146:	9305      	str	r3, [sp, #20]
 800f148:	69a3      	ldr	r3, [r4, #24]
 800f14a:	fa1f f28b 	uxth.w	r2, fp
 800f14e:	4293      	cmp	r3, r2
 800f150:	f10b 0b01 	add.w	fp, fp, #1
 800f154:	d9e9      	bls.n	800f12a <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x9c>
 800f156:	78bb      	ldrb	r3, [r7, #2]
 800f158:	9905      	ldr	r1, [sp, #20]
 800f15a:	9301      	str	r3, [sp, #4]
 800f15c:	787b      	ldrb	r3, [r7, #1]
 800f15e:	440a      	add	r2, r1
 800f160:	9300      	str	r3, [sp, #0]
 800f162:	4651      	mov	r1, sl
 800f164:	783b      	ldrb	r3, [r7, #0]
 800f166:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800f168:	f001 fb0c 	bl	8010784 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 800f16c:	e7ec      	b.n	800f148 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xba>
 800f16e:	3501      	adds	r5, #1
 800f170:	3704      	adds	r7, #4
 800f172:	e7ae      	b.n	800f0d2 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x44>
 800f174:	6923      	ldr	r3, [r4, #16]
 800f176:	9a04      	ldr	r2, [sp, #16]
 800f178:	4293      	cmp	r3, r2
 800f17a:	d105      	bne.n	800f188 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xfa>
 800f17c:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800f17e:	b007      	add	sp, #28
 800f180:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f184:	f001 ba2a 	b.w	80105dc <WS28xxMulti::Update()>
 800f188:	b007      	add	sp, #28
 800f18a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0800f190 <WS28xxDmxMulti::Print()>:
 800f190:	b510      	push	{r4, lr}
 800f192:	4604      	mov	r4, r0
 800f194:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800f196:	f001 f9ff 	bl	8010598 <WS28xxMulti::Print()>
 800f19a:	4807      	ldr	r0, [pc, #28]	; (800f1b8 <WS28xxDmxMulti::Print()+0x28>)
 800f19c:	f7f9 ff00 	bl	8008fa0 <printf>
 800f1a0:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800f1a2:	4806      	ldr	r0, [pc, #24]	; (800f1bc <WS28xxDmxMulti::Print()+0x2c>)
 800f1a4:	f7f9 fefc 	bl	8008fa0 <printf>
 800f1a8:	e9d4 2105 	ldrd	r2, r1, [r4, #20]
 800f1ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f1b0:	4803      	ldr	r0, [pc, #12]	; (800f1c0 <WS28xxDmxMulti::Print()+0x30>)
 800f1b2:	f7f9 bef5 	b.w	8008fa0 <printf>
 800f1b6:	bf00      	nop
 800f1b8:	080199e1 	stmdaeq	r1, {r0, r5, r6, r7, r8, fp, ip, pc}
 800f1bc:	080199f7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, r7, r8, fp, ip, pc}
 800f1c0:	08019a06 	stmdaeq	r1, {r1, r2, r9, fp, ip, pc}

0800f1c4 <WS28xxDmxMulti::Stop(unsigned int)>:
 800f1c4:	6b03      	ldr	r3, [r0, #48]	; 0x30
 800f1c6:	b570      	push	{r4, r5, r6, lr}
 800f1c8:	40cb      	lsrs	r3, r1
 800f1ca:	07db      	lsls	r3, r3, #31
 800f1cc:	4604      	mov	r4, r0
 800f1ce:	460d      	mov	r5, r1
 800f1d0:	d50b      	bpl.n	800f1ea <WS28xxDmxMulti::Stop(unsigned int)+0x26>
 800f1d2:	f44f 7300 	mov.w	r3, #512	; 0x200
 800f1d6:	4a0a      	ldr	r2, [pc, #40]	; (800f200 <WS28xxDmxMulti::Stop(unsigned int)+0x3c>)
 800f1d8:	f7ff ff59 	bl	800f08e <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)>
 800f1dc:	2301      	movs	r3, #1
 800f1de:	fa03 f505 	lsl.w	r5, r3, r5
 800f1e2:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800f1e4:	ea23 0305 	bic.w	r3, r3, r5
 800f1e8:	6323      	str	r3, [r4, #48]	; 0x30
 800f1ea:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800f1ec:	b933      	cbnz	r3, 800f1fc <WS28xxDmxMulti::Stop(unsigned int)+0x38>
 800f1ee:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800f1f0:	b120      	cbz	r0, 800f1fc <WS28xxDmxMulti::Stop(unsigned int)+0x38>
 800f1f2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f1f6:	6803      	ldr	r3, [r0, #0]
 800f1f8:	68db      	ldr	r3, [r3, #12]
 800f1fa:	4718      	bx	r3
 800f1fc:	bd70      	pop	{r4, r5, r6, pc}
 800f1fe:	bf00      	nop
 800f200:	20003288 	andcs	r3, r0, r8, lsl #5

0800f204 <WS28xxDmxMulti::WS28xxDmxMulti(PixelDmxConfiguration&)>:
 800f204:	4b16      	ldr	r3, [pc, #88]	; (800f260 <WS28xxDmxMulti::WS28xxDmxMulti(PixelDmxConfiguration&)+0x5c>)
 800f206:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800f208:	6003      	str	r3, [r0, #0]
 800f20a:	2300      	movs	r3, #0
 800f20c:	460d      	mov	r5, r1
 800f20e:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 800f212:	6303      	str	r3, [r0, #48]	; 0x30
 800f214:	f880 3034 	strb.w	r3, [r0, #52]	; 0x34
 800f218:	f100 031c 	add.w	r3, r0, #28
 800f21c:	9301      	str	r3, [sp, #4]
 800f21e:	f100 0314 	add.w	r3, r0, #20
 800f222:	f100 0220 	add.w	r2, r0, #32
 800f226:	4604      	mov	r4, r0
 800f228:	2108      	movs	r1, #8
 800f22a:	9300      	str	r3, [sp, #0]
 800f22c:	1d03      	adds	r3, r0, #4
 800f22e:	4628      	mov	r0, r5
 800f230:	f000 fbe2 	bl	800f9f8 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&, unsigned int&, unsigned int&)>
 800f234:	2010      	movs	r0, #16
 800f236:	f006 fca7 	bl	8015b88 <operator new(unsigned int)>
 800f23a:	4606      	mov	r6, r0
 800f23c:	4629      	mov	r1, r5
 800f23e:	f001 f869 	bl	8010314 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)>
 800f242:	4630      	mov	r0, r6
 800f244:	62a6      	str	r6, [r4, #40]	; 0x28
 800f246:	f001 fa39 	bl	80106bc <WS28xxMulti::Blackout()>
 800f24a:	69ab      	ldr	r3, [r5, #24]
 800f24c:	4628      	mov	r0, r5
 800f24e:	61a3      	str	r3, [r4, #24]
 800f250:	696b      	ldr	r3, [r5, #20]
 800f252:	6263      	str	r3, [r4, #36]	; 0x24
 800f254:	f000 fc2a 	bl	800faac <PixelDmxConfiguration::Dump()>
 800f258:	4620      	mov	r0, r4
 800f25a:	b002      	add	sp, #8
 800f25c:	bd70      	pop	{r4, r5, r6, pc}
 800f25e:	bf00      	nop
 800f260:	08019a34 	stmdaeq	r1, {r2, r4, r5, r9, fp, ip, pc}

0800f264 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>:
 800f264:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800f266:	88c5      	ldrh	r5, [r0, #6]
 800f268:	8886      	ldrh	r6, [r0, #4]
 800f26a:	42b5      	cmp	r5, r6
 800f26c:	d216      	bcs.n	800f29c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x38>
 800f26e:	4604      	mov	r4, r0
 800f270:	6800      	ldr	r0, [r0, #0]
 800f272:	4428      	add	r0, r5
 800f274:	1b75      	subs	r5, r6, r5
 800f276:	7a26      	ldrb	r6, [r4, #8]
 800f278:	b923      	cbnz	r3, 800f284 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x20>
 800f27a:	b926      	cbnz	r6, 800f286 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x22>
 800f27c:	9200      	str	r2, [sp, #0]
 800f27e:	460b      	mov	r3, r1
 800f280:	4a09      	ldr	r2, [pc, #36]	; (800f2a8 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x44>)
 800f282:	e003      	b.n	800f28c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 800f284:	b166      	cbz	r6, 800f2a0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x3c>
 800f286:	460b      	mov	r3, r1
 800f288:	9200      	str	r2, [sp, #0]
 800f28a:	4a08      	ldr	r2, [pc, #32]	; (800f2ac <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x48>)
 800f28c:	4629      	mov	r1, r5
 800f28e:	f7f9 feaf 	bl	8008ff0 <snprintf>
 800f292:	4285      	cmp	r5, r0
 800f294:	bfa2      	ittt	ge
 800f296:	88e3      	ldrhge	r3, [r4, #6]
 800f298:	181b      	addge	r3, r3, r0
 800f29a:	80e3      	strhge	r3, [r4, #6]
 800f29c:	b002      	add	sp, #8
 800f29e:	bd70      	pop	{r4, r5, r6, pc}
 800f2a0:	9200      	str	r2, [sp, #0]
 800f2a2:	460b      	mov	r3, r1
 800f2a4:	4a02      	ldr	r2, [pc, #8]	; (800f2b0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x4c>)
 800f2a6:	e7f1      	b.n	800f28c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 800f2a8:	08018359 	stmdaeq	r1, {r0, r3, r4, r6, r8, r9, pc}
 800f2ac:	08018350 	stmdaeq	r1, {r4, r6, r8, r9, pc}
 800f2b0:	0801835a 	stmdaeq	r1, {r1, r3, r4, r6, r8, r9, pc}

0800f2b4 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>:
 800f2b4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800f2b6:	88c5      	ldrh	r5, [r0, #6]
 800f2b8:	8886      	ldrh	r6, [r0, #4]
 800f2ba:	42b5      	cmp	r5, r6
 800f2bc:	d216      	bcs.n	800f2ec <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x38>
 800f2be:	4604      	mov	r4, r0
 800f2c0:	6800      	ldr	r0, [r0, #0]
 800f2c2:	4428      	add	r0, r5
 800f2c4:	1b75      	subs	r5, r6, r5
 800f2c6:	7a26      	ldrb	r6, [r4, #8]
 800f2c8:	b923      	cbnz	r3, 800f2d4 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x20>
 800f2ca:	b926      	cbnz	r6, 800f2d6 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x22>
 800f2cc:	9200      	str	r2, [sp, #0]
 800f2ce:	460b      	mov	r3, r1
 800f2d0:	4a09      	ldr	r2, [pc, #36]	; (800f2f8 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x44>)
 800f2d2:	e003      	b.n	800f2dc <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800f2d4:	b166      	cbz	r6, 800f2f0 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x3c>
 800f2d6:	460b      	mov	r3, r1
 800f2d8:	9200      	str	r2, [sp, #0]
 800f2da:	4a08      	ldr	r2, [pc, #32]	; (800f2fc <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x48>)
 800f2dc:	4629      	mov	r1, r5
 800f2de:	f7f9 fe87 	bl	8008ff0 <snprintf>
 800f2e2:	4285      	cmp	r5, r0
 800f2e4:	bfa2      	ittt	ge
 800f2e6:	88e3      	ldrhge	r3, [r4, #6]
 800f2e8:	181b      	addge	r3, r3, r0
 800f2ea:	80e3      	strhge	r3, [r4, #6]
 800f2ec:	b002      	add	sp, #8
 800f2ee:	bd70      	pop	{r4, r5, r6, pc}
 800f2f0:	9200      	str	r2, [sp, #0]
 800f2f2:	460b      	mov	r3, r1
 800f2f4:	4a02      	ldr	r2, [pc, #8]	; (800f300 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x4c>)
 800f2f6:	e7f1      	b.n	800f2dc <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800f2f8:	08018359 	stmdaeq	r1, {r0, r3, r4, r6, r8, r9, pc}
 800f2fc:	08018350 	stmdaeq	r1, {r4, r6, r8, r9, pc}
 800f300:	0801835a 	stmdaeq	r1, {r1, r3, r4, r6, r8, r9, pc}

0800f304 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>:
 800f304:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800f306:	88c5      	ldrh	r5, [r0, #6]
 800f308:	8886      	ldrh	r6, [r0, #4]
 800f30a:	42b5      	cmp	r5, r6
 800f30c:	d216      	bcs.n	800f33c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x38>
 800f30e:	4604      	mov	r4, r0
 800f310:	6800      	ldr	r0, [r0, #0]
 800f312:	4428      	add	r0, r5
 800f314:	1b75      	subs	r5, r6, r5
 800f316:	7a26      	ldrb	r6, [r4, #8]
 800f318:	b923      	cbnz	r3, 800f324 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x20>
 800f31a:	b926      	cbnz	r6, 800f326 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x22>
 800f31c:	9200      	str	r2, [sp, #0]
 800f31e:	460b      	mov	r3, r1
 800f320:	4a09      	ldr	r2, [pc, #36]	; (800f348 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x44>)
 800f322:	e003      	b.n	800f32c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800f324:	b166      	cbz	r6, 800f340 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x3c>
 800f326:	460b      	mov	r3, r1
 800f328:	9200      	str	r2, [sp, #0]
 800f32a:	4a08      	ldr	r2, [pc, #32]	; (800f34c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x48>)
 800f32c:	4629      	mov	r1, r5
 800f32e:	f7f9 fe5f 	bl	8008ff0 <snprintf>
 800f332:	4285      	cmp	r5, r0
 800f334:	bfa2      	ittt	ge
 800f336:	88e3      	ldrhge	r3, [r4, #6]
 800f338:	181b      	addge	r3, r3, r0
 800f33a:	80e3      	strhge	r3, [r4, #6]
 800f33c:	b002      	add	sp, #8
 800f33e:	bd70      	pop	{r4, r5, r6, pc}
 800f340:	9200      	str	r2, [sp, #0]
 800f342:	460b      	mov	r3, r1
 800f344:	4a02      	ldr	r2, [pc, #8]	; (800f350 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x4c>)
 800f346:	e7f1      	b.n	800f32c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800f348:	0801836c 	stmdaeq	r1, {r2, r3, r5, r6, r8, r9, pc}
 800f34c:	08018361 	stmdaeq	r1, {r0, r5, r6, r8, r9, pc}
 800f350:	0801836d 	stmdaeq	r1, {r0, r2, r3, r5, r6, r8, r9, pc}

0800f354 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>:
 800f354:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800f358:	4699      	mov	r9, r3
 800f35a:	8885      	ldrh	r5, [r0, #4]
 800f35c:	88c3      	ldrh	r3, [r0, #6]
 800f35e:	4604      	mov	r4, r0
 800f360:	42ab      	cmp	r3, r5
 800f362:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
 800f366:	d227      	bcs.n	800f3b8 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x64>
 800f368:	6826      	ldr	r6, [r4, #0]
 800f36a:	4610      	mov	r0, r2
 800f36c:	460f      	mov	r7, r1
 800f36e:	f894 a008 	ldrb.w	sl, [r4, #8]
 800f372:	441e      	add	r6, r3
 800f374:	1aed      	subs	r5, r5, r3
 800f376:	f7f8 fbf9 	bl	8007b6c <__aeabi_f2d>
 800f37a:	f1b9 0f00 	cmp.w	r9, #0
 800f37e:	d109      	bne.n	800f394 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x40>
 800f380:	f1ba 0f00 	cmp.w	sl, #0
 800f384:	d109      	bne.n	800f39a <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x46>
 800f386:	463b      	mov	r3, r7
 800f388:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800f38c:	4a0f      	ldr	r2, [pc, #60]	; (800f3cc <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x78>)
 800f38e:	f8cd 8000 	str.w	r8, [sp]
 800f392:	e008      	b.n	800f3a6 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x52>
 800f394:	f1ba 0f00 	cmp.w	sl, #0
 800f398:	d011      	beq.n	800f3be <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x6a>
 800f39a:	463b      	mov	r3, r7
 800f39c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800f3a0:	4a0b      	ldr	r2, [pc, #44]	; (800f3d0 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x7c>)
 800f3a2:	f8cd 8000 	str.w	r8, [sp]
 800f3a6:	4629      	mov	r1, r5
 800f3a8:	4630      	mov	r0, r6
 800f3aa:	f7f9 fe21 	bl	8008ff0 <snprintf>
 800f3ae:	4285      	cmp	r5, r0
 800f3b0:	bfa2      	ittt	ge
 800f3b2:	88e3      	ldrhge	r3, [r4, #6]
 800f3b4:	181b      	addge	r3, r3, r0
 800f3b6:	80e3      	strhge	r3, [r4, #6]
 800f3b8:	b004      	add	sp, #16
 800f3ba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800f3be:	463b      	mov	r3, r7
 800f3c0:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800f3c4:	4a03      	ldr	r2, [pc, #12]	; (800f3d4 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x80>)
 800f3c6:	f8cd 8000 	str.w	r8, [sp]
 800f3ca:	e7ec      	b.n	800f3a6 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x52>
 800f3cc:	08019a6b 	stmdaeq	r1, {r0, r1, r3, r5, r6, r9, fp, ip, pc}
 800f3d0:	08019a60 	stmdaeq	r1, {r5, r6, r9, fp, ip, pc}
 800f3d4:	08019a6c 	stmdaeq	r1, {r2, r3, r5, r6, r9, fp, ip, pc}

0800f3d8 <WS28xxDmxParams::WS28xxDmxParams(WS28xxDmxParamsStore*)>:
 800f3d8:	2300      	movs	r3, #0
 800f3da:	4a1c      	ldr	r2, [pc, #112]	; (800f44c <WS28xxDmxParams::WS28xxDmxParams(WS28xxDmxParamsStore*)+0x74>)
 800f3dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800f3de:	e9c0 3201 	strd	r3, r2, [r0, #4]
 800f3e2:	f44f 6210 	mov.w	r2, #2304	; 0x900
 800f3e6:	81c2      	strh	r2, [r0, #14]
 800f3e8:	223d      	movs	r2, #61	; 0x3d
 800f3ea:	8202      	strh	r2, [r0, #16]
 800f3ec:	f240 12ff 	movw	r2, #511	; 0x1ff
 800f3f0:	8242      	strh	r2, [r0, #18]
 800f3f2:	2206      	movs	r2, #6
 800f3f4:	2601      	movs	r6, #1
 800f3f6:	75c2      	strb	r2, [r0, #23]
 800f3f8:	f647 7cf0 	movw	ip, #32752	; 0x7ff0
 800f3fc:	461a      	mov	r2, r3
 800f3fe:	6001      	str	r1, [r0, #0]
 800f400:	7303      	strb	r3, [r0, #12]
 800f402:	7546      	strb	r6, [r0, #21]
 800f404:	7583      	strb	r3, [r0, #22]
 800f406:	8303      	strh	r3, [r0, #24]
 800f408:	f100 011a 	add.w	r1, r0, #26
 800f40c:	f821 6b02 	strh.w	r6, [r1], #2
 800f410:	b1aa      	cbz	r2, 800f43e <WS28xxDmxParams::WS28xxDmxParams(WS28xxDmxParamsStore*)+0x66>
 800f412:	f831 3c04 	ldrh.w	r3, [r1, #-4]
 800f416:	1d1c      	adds	r4, r3, #4
 800f418:	3307      	adds	r3, #7
 800f41a:	b2a5      	uxth	r5, r4
 800f41c:	b29f      	uxth	r7, r3
 800f41e:	f404 44fe 	and.w	r4, r4, #32512	; 0x7f00
 800f422:	f403 43fe 	and.w	r3, r3, #32512	; 0x7f00
 800f426:	429c      	cmp	r4, r3
 800f428:	d105      	bne.n	800f436 <WS28xxDmxParams::WS28xxDmxParams(WS28xxDmxParamsStore*)+0x5e>
 800f42a:	f005 03f0 	and.w	r3, r5, #240	; 0xf0
 800f42e:	f007 04f0 	and.w	r4, r7, #240	; 0xf0
 800f432:	42a3      	cmp	r3, r4
 800f434:	d001      	beq.n	800f43a <WS28xxDmxParams::WS28xxDmxParams(WS28xxDmxParamsStore*)+0x62>
 800f436:	ea07 050c 	and.w	r5, r7, ip
 800f43a:	f821 5c02 	strh.w	r5, [r1, #-2]
 800f43e:	3201      	adds	r2, #1
 800f440:	2a08      	cmp	r2, #8
 800f442:	d1e3      	bne.n	800f40c <WS28xxDmxParams::WS28xxDmxParams(WS28xxDmxParamsStore*)+0x34>
 800f444:	2300      	movs	r3, #0
 800f446:	f880 302a 	strb.w	r3, [r0, #42]	; 0x2a
 800f44a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f44c:	0100aa03 	tsteq	r0, r3, lsl #20

0800f450 <WS28xxDmxParams::Load()>:
 800f450:	b508      	push	{r3, lr}
 800f452:	2300      	movs	r3, #0
 800f454:	4601      	mov	r1, r0
 800f456:	6043      	str	r3, [r0, #4]
 800f458:	6800      	ldr	r0, [r0, #0]
 800f45a:	b120      	cbz	r0, 800f466 <WS28xxDmxParams::Load()+0x16>
 800f45c:	6803      	ldr	r3, [r0, #0]
 800f45e:	3104      	adds	r1, #4
 800f460:	68db      	ldr	r3, [r3, #12]
 800f462:	4798      	blx	r3
 800f464:	2001      	movs	r0, #1
 800f466:	bd08      	pop	{r3, pc}

0800f468 <WS28xxDmxParams::Load(char const*, unsigned int)>:
 800f468:	6803      	ldr	r3, [r0, #0]
 800f46a:	b1d3      	cbz	r3, 800f4a2 <WS28xxDmxParams::Load(char const*, unsigned int)+0x3a>
 800f46c:	2300      	movs	r3, #0
 800f46e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800f470:	460d      	mov	r5, r1
 800f472:	4616      	mov	r6, r2
 800f474:	4604      	mov	r4, r0
 800f476:	6043      	str	r3, [r0, #4]
 800f478:	4602      	mov	r2, r0
 800f47a:	490a      	ldr	r1, [pc, #40]	; (800f4a4 <WS28xxDmxParams::Load(char const*, unsigned int)+0x3c>)
 800f47c:	4668      	mov	r0, sp
 800f47e:	f005 fcf3 	bl	8014e68 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800f482:	4632      	mov	r2, r6
 800f484:	4629      	mov	r1, r5
 800f486:	4668      	mov	r0, sp
 800f488:	f005 fcf2 	bl	8014e70 <ReadConfigFile::Read(char const*, unsigned int)>
 800f48c:	4621      	mov	r1, r4
 800f48e:	f851 0b04 	ldr.w	r0, [r1], #4
 800f492:	6803      	ldr	r3, [r0, #0]
 800f494:	689b      	ldr	r3, [r3, #8]
 800f496:	4798      	blx	r3
 800f498:	4668      	mov	r0, sp
 800f49a:	f005 fce8 	bl	8014e6e <ReadConfigFile::~ReadConfigFile()>
 800f49e:	b002      	add	sp, #8
 800f4a0:	bd70      	pop	{r4, r5, r6, pc}
 800f4a2:	4770      	bx	lr
 800f4a4:	0800f6fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r9, sl, ip, sp, lr, pc}

0800f4a8 <WS28xxDmxParams::callbackFunction(char const*)>:
 800f4a8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f4ac:	2308      	movs	r3, #8
 800f4ae:	460d      	mov	r5, r1
 800f4b0:	b089      	sub	sp, #36	; 0x24
 800f4b2:	4604      	mov	r4, r0
 800f4b4:	9302      	str	r3, [sp, #8]
 800f4b6:	4628      	mov	r0, r5
 800f4b8:	4984      	ldr	r1, [pc, #528]	; (800f6cc <WS28xxDmxParams::callbackFunction(char const*)+0x224>)
 800f4ba:	446b      	add	r3, sp
 800f4bc:	aa04      	add	r2, sp, #16
 800f4be:	f005 fd0b 	bl	8014ed8 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800f4c2:	b9a0      	cbnz	r0, 800f4ee <WS28xxDmxParams::callbackFunction(char const*)+0x46>
 800f4c4:	9b02      	ldr	r3, [sp, #8]
 800f4c6:	3320      	adds	r3, #32
 800f4c8:	446b      	add	r3, sp
 800f4ca:	f803 0c10 	strb.w	r0, [r3, #-16]
 800f4ce:	a804      	add	r0, sp, #16
 800f4d0:	f000 fe1a 	bl	8010108 <PixelType::GetType(char const*)>
 800f4d4:	280e      	cmp	r0, #14
 800f4d6:	bf08      	it	eq
 800f4d8:	2203      	moveq	r2, #3
 800f4da:	6863      	ldr	r3, [r4, #4]
 800f4dc:	bf19      	ittee	ne
 800f4de:	7220      	strbne	r0, [r4, #8]
 800f4e0:	f043 0301 	orrne.w	r3, r3, #1
 800f4e4:	7222      	strbeq	r2, [r4, #8]
 800f4e6:	f023 0301 	biceq.w	r3, r3, #1
 800f4ea:	6063      	str	r3, [r4, #4]
 800f4ec:	e033      	b.n	800f556 <WS28xxDmxParams::callbackFunction(char const*)+0xae>
 800f4ee:	4628      	mov	r0, r5
 800f4f0:	4977      	ldr	r1, [pc, #476]	; (800f6d0 <WS28xxDmxParams::callbackFunction(char const*)+0x228>)
 800f4f2:	f10d 0202 	add.w	r2, sp, #2
 800f4f6:	f005 fdd6 	bl	80150a6 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800f4fa:	b990      	cbnz	r0, 800f522 <WS28xxDmxParams::callbackFunction(char const*)+0x7a>
 800f4fc:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800f500:	6863      	ldr	r3, [r4, #4]
 800f502:	1e51      	subs	r1, r2, #1
 800f504:	f5b1 7f2a 	cmp.w	r1, #680	; 0x2a8
 800f508:	bf2d      	iteet	cs
 800f50a:	f06f 0255 	mvncs.w	r2, #85	; 0x55
 800f50e:	f8a4 2009 	strhcc.w	r2, [r4, #9]
 800f512:	f043 0302 	orrcc.w	r3, r3, #2
 800f516:	7262      	strbcs	r2, [r4, #9]
 800f518:	bf24      	itt	cs
 800f51a:	72a0      	strbcs	r0, [r4, #10]
 800f51c:	f023 0302 	biccs.w	r3, r3, #2
 800f520:	e7e3      	b.n	800f4ea <WS28xxDmxParams::callbackFunction(char const*)+0x42>
 800f522:	2303      	movs	r3, #3
 800f524:	4628      	mov	r0, r5
 800f526:	9302      	str	r3, [sp, #8]
 800f528:	496a      	ldr	r1, [pc, #424]	; (800f6d4 <WS28xxDmxParams::callbackFunction(char const*)+0x22c>)
 800f52a:	ab02      	add	r3, sp, #8
 800f52c:	aa04      	add	r2, sp, #16
 800f52e:	f005 fcd3 	bl	8014ed8 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800f532:	b998      	cbnz	r0, 800f55c <WS28xxDmxParams::callbackFunction(char const*)+0xb4>
 800f534:	9b02      	ldr	r3, [sp, #8]
 800f536:	3320      	adds	r3, #32
 800f538:	446b      	add	r3, sp
 800f53a:	f803 0c10 	strb.w	r0, [r3, #-16]
 800f53e:	a804      	add	r0, sp, #16
 800f540:	f000 fe06 	bl	8010150 <PixelType::GetMap(char const*)>
 800f544:	6863      	ldr	r3, [r4, #4]
 800f546:	2806      	cmp	r0, #6
 800f548:	bf14      	ite	ne
 800f54a:	f443 7300 	orrne.w	r3, r3, #512	; 0x200
 800f54e:	f423 7300 	biceq.w	r3, r3, #512	; 0x200
 800f552:	6063      	str	r3, [r4, #4]
 800f554:	75e0      	strb	r0, [r4, #23]
 800f556:	b009      	add	sp, #36	; 0x24
 800f558:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f55c:	4628      	mov	r0, r5
 800f55e:	495e      	ldr	r1, [pc, #376]	; (800f6d8 <WS28xxDmxParams::callbackFunction(char const*)+0x230>)
 800f560:	aa01      	add	r2, sp, #4
 800f562:	f005 fcd2 	bl	8014f0a <Sscan::Float(char const*, char const*, float&)>
 800f566:	b960      	cbnz	r0, 800f582 <WS28xxDmxParams::callbackFunction(char const*)+0xda>
 800f568:	9801      	ldr	r0, [sp, #4]
 800f56a:	f000 fe53 	bl	8010214 <PixelType::ConvertTxH(float)>
 800f56e:	6863      	ldr	r3, [r4, #4]
 800f570:	b120      	cbz	r0, 800f57c <WS28xxDmxParams::callbackFunction(char const*)+0xd4>
 800f572:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800f576:	6063      	str	r3, [r4, #4]
 800f578:	7620      	strb	r0, [r4, #24]
 800f57a:	e7ec      	b.n	800f556 <WS28xxDmxParams::callbackFunction(char const*)+0xae>
 800f57c:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800f580:	e7f9      	b.n	800f576 <WS28xxDmxParams::callbackFunction(char const*)+0xce>
 800f582:	4628      	mov	r0, r5
 800f584:	4955      	ldr	r1, [pc, #340]	; (800f6dc <WS28xxDmxParams::callbackFunction(char const*)+0x234>)
 800f586:	aa01      	add	r2, sp, #4
 800f588:	f005 fcbf 	bl	8014f0a <Sscan::Float(char const*, char const*, float&)>
 800f58c:	b960      	cbnz	r0, 800f5a8 <WS28xxDmxParams::callbackFunction(char const*)+0x100>
 800f58e:	9801      	ldr	r0, [sp, #4]
 800f590:	f000 fe40 	bl	8010214 <PixelType::ConvertTxH(float)>
 800f594:	6863      	ldr	r3, [r4, #4]
 800f596:	b120      	cbz	r0, 800f5a2 <WS28xxDmxParams::callbackFunction(char const*)+0xfa>
 800f598:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 800f59c:	6063      	str	r3, [r4, #4]
 800f59e:	7660      	strb	r0, [r4, #25]
 800f5a0:	e7d9      	b.n	800f556 <WS28xxDmxParams::callbackFunction(char const*)+0xae>
 800f5a2:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800f5a6:	e7f9      	b.n	800f59c <WS28xxDmxParams::callbackFunction(char const*)+0xf4>
 800f5a8:	4628      	mov	r0, r5
 800f5aa:	494d      	ldr	r1, [pc, #308]	; (800f6e0 <WS28xxDmxParams::callbackFunction(char const*)+0x238>)
 800f5ac:	f10d 0202 	add.w	r2, sp, #2
 800f5b0:	f005 fd79 	bl	80150a6 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800f5b4:	b998      	cbnz	r0, 800f5de <WS28xxDmxParams::callbackFunction(char const*)+0x136>
 800f5b6:	f240 25a6 	movw	r5, #678	; 0x2a6
 800f5ba:	f8bd 1002 	ldrh.w	r1, [sp, #2]
 800f5be:	6863      	ldr	r3, [r4, #4]
 800f5c0:	1e8a      	subs	r2, r1, #2
 800f5c2:	b292      	uxth	r2, r2
 800f5c4:	42aa      	cmp	r2, r5
 800f5c6:	bf81      	itttt	hi
 800f5c8:	2201      	movhi	r2, #1
 800f5ca:	75a0      	strbhi	r0, [r4, #22]
 800f5cc:	7562      	strbhi	r2, [r4, #21]
 800f5ce:	f423 7380 	bichi.w	r3, r3, #256	; 0x100
 800f5d2:	bf9c      	itt	ls
 800f5d4:	f8a4 1015 	strhls.w	r1, [r4, #21]
 800f5d8:	f443 7380 	orrls.w	r3, r3, #256	; 0x100
 800f5dc:	e785      	b.n	800f4ea <WS28xxDmxParams::callbackFunction(char const*)+0x42>
 800f5de:	4628      	mov	r0, r5
 800f5e0:	4940      	ldr	r1, [pc, #256]	; (800f6e4 <WS28xxDmxParams::callbackFunction(char const*)+0x23c>)
 800f5e2:	aa03      	add	r2, sp, #12
 800f5e4:	f005 fd7d 	bl	80150e2 <Sscan::Uint32(char const*, char const*, unsigned int&)>
 800f5e8:	b960      	cbnz	r0, 800f604 <WS28xxDmxParams::callbackFunction(char const*)+0x15c>
 800f5ea:	9a03      	ldr	r2, [sp, #12]
 800f5ec:	493e      	ldr	r1, [pc, #248]	; (800f6e8 <WS28xxDmxParams::callbackFunction(char const*)+0x240>)
 800f5ee:	6863      	ldr	r3, [r4, #4]
 800f5f0:	428a      	cmp	r2, r1
 800f5f2:	bf14      	ite	ne
 800f5f4:	f043 0310 	orrne.w	r3, r3, #16
 800f5f8:	f023 0310 	biceq.w	r3, r3, #16
 800f5fc:	6063      	str	r3, [r4, #4]
 800f5fe:	f8c4 200e 	str.w	r2, [r4, #14]
 800f602:	e7a8      	b.n	800f556 <WS28xxDmxParams::callbackFunction(char const*)+0xae>
 800f604:	4628      	mov	r0, r5
 800f606:	4939      	ldr	r1, [pc, #228]	; (800f6ec <WS28xxDmxParams::callbackFunction(char const*)+0x244>)
 800f608:	f10d 0201 	add.w	r2, sp, #1
 800f60c:	f005 fd92 	bl	8015134 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800f610:	b988      	cbnz	r0, 800f636 <WS28xxDmxParams::callbackFunction(char const*)+0x18e>
 800f612:	f89d 1001 	ldrb.w	r1, [sp, #1]
 800f616:	6863      	ldr	r3, [r4, #4]
 800f618:	1e4a      	subs	r2, r1, #1
 800f61a:	b2d2      	uxtb	r2, r2
 800f61c:	2afd      	cmp	r2, #253	; 0xfd
 800f61e:	bf83      	ittte	hi
 800f620:	f023 0320 	bichi.w	r3, r3, #32
 800f624:	6063      	strhi	r3, [r4, #4]
 800f626:	23ff      	movhi	r3, #255	; 0xff
 800f628:	f043 0320 	orrls.w	r3, r3, #32
 800f62c:	bf9a      	itte	ls
 800f62e:	6063      	strls	r3, [r4, #4]
 800f630:	74a1      	strbls	r1, [r4, #18]
 800f632:	74a3      	strbhi	r3, [r4, #18]
 800f634:	e78f      	b.n	800f556 <WS28xxDmxParams::callbackFunction(char const*)+0xae>
 800f636:	2600      	movs	r6, #0
 800f638:	2712      	movs	r7, #18
 800f63a:	f8df 80b4 	ldr.w	r8, [pc, #180]	; 800f6f0 <WS28xxDmxParams::callbackFunction(char const*)+0x248>
 800f63e:	f104 091a 	add.w	r9, r4, #26
 800f642:	4628      	mov	r0, r5
 800f644:	fb07 8106 	mla	r1, r7, r6, r8
 800f648:	f10d 0202 	add.w	r2, sp, #2
 800f64c:	f005 fd2b 	bl	80150a6 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800f650:	b950      	cbnz	r0, 800f668 <WS28xxDmxParams::callbackFunction(char const*)+0x1c0>
 800f652:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800f656:	f829 3016 	strh.w	r3, [r9, r6, lsl #1]
 800f65a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800f65e:	fa03 f206 	lsl.w	r2, r3, r6
 800f662:	6863      	ldr	r3, [r4, #4]
 800f664:	4313      	orrs	r3, r2
 800f666:	6063      	str	r3, [r4, #4]
 800f668:	3601      	adds	r6, #1
 800f66a:	2e08      	cmp	r6, #8
 800f66c:	d1e9      	bne.n	800f642 <WS28xxDmxParams::callbackFunction(char const*)+0x19a>
 800f66e:	4628      	mov	r0, r5
 800f670:	4920      	ldr	r1, [pc, #128]	; (800f6f4 <WS28xxDmxParams::callbackFunction(char const*)+0x24c>)
 800f672:	f10d 0201 	add.w	r2, sp, #1
 800f676:	f005 fd5d 	bl	8015134 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800f67a:	b970      	cbnz	r0, 800f69a <WS28xxDmxParams::callbackFunction(char const*)+0x1f2>
 800f67c:	f89d 2001 	ldrb.w	r2, [sp, #1]
 800f680:	6863      	ldr	r3, [r4, #4]
 800f682:	1e91      	subs	r1, r2, #2
 800f684:	2906      	cmp	r1, #6
 800f686:	bf8d      	iteet	hi
 800f688:	2201      	movhi	r2, #1
 800f68a:	74e2      	strbls	r2, [r4, #19]
 800f68c:	f043 0340 	orrls.w	r3, r3, #64	; 0x40
 800f690:	74e2      	strbhi	r2, [r4, #19]
 800f692:	bf88      	it	hi
 800f694:	f023 0340 	bichi.w	r3, r3, #64	; 0x40
 800f698:	e727      	b.n	800f4ea <WS28xxDmxParams::callbackFunction(char const*)+0x42>
 800f69a:	4628      	mov	r0, r5
 800f69c:	4916      	ldr	r1, [pc, #88]	; (800f6f8 <WS28xxDmxParams::callbackFunction(char const*)+0x250>)
 800f69e:	f10d 0201 	add.w	r2, sp, #1
 800f6a2:	f005 fd47 	bl	8015134 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800f6a6:	2800      	cmp	r0, #0
 800f6a8:	f47f af55 	bne.w	800f556 <WS28xxDmxParams::callbackFunction(char const*)+0xae>
 800f6ac:	f89d 2001 	ldrb.w	r2, [sp, #1]
 800f6b0:	6863      	ldr	r3, [r4, #4]
 800f6b2:	1e51      	subs	r1, r2, #1
 800f6b4:	2904      	cmp	r1, #4
 800f6b6:	bf99      	ittee	ls
 800f6b8:	f884 202a 	strbls.w	r2, [r4, #42]	; 0x2a
 800f6bc:	f443 1380 	orrls.w	r3, r3, #1048576	; 0x100000
 800f6c0:	f884 002a 	strbhi.w	r0, [r4, #42]	; 0x2a
 800f6c4:	f423 1380 	bichi.w	r3, r3, #1048576	; 0x100000
 800f6c8:	e70f      	b.n	800f4ea <WS28xxDmxParams::callbackFunction(char const*)+0x42>
 800f6ca:	bf00      	nop
 800f6cc:	0801a1bf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r7, r8, sp, pc}
 800f6d0:	0801a1c8 	stmdaeq	r1, {r3, r6, r7, r8, sp, pc}
 800f6d4:	0801a1af 	stmdaeq	r1, {r0, r1, r2, r3, r5, r7, r8, sp, pc}
 800f6d8:	0801a1d2 	stmdaeq	r1, {r1, r4, r6, r7, r8, sp, pc}
 800f6dc:	0801a1da 	stmdaeq	r1, {r1, r3, r4, r6, r7, r8, sp, pc}
 800f6e0:	0801a18d 	stmdaeq	r1, {r0, r2, r3, r7, r8, sp, pc}
 800f6e4:	0801a17e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r8, sp, pc}
 800f6e8:	003d0900 	eorseq	r0, sp, r0, lsl #18
 800f6ec:	0801a19d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r8, sp, pc}
 800f6f0:	0801a28a 	stmdaeq	r1, {r1, r3, r7, r9, sp, pc}
 800f6f4:	0801a173 	stmdaeq	r1, {r0, r1, r4, r5, r6, r8, sp, pc}
 800f6f8:	0801a23d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r9, sp, pc}

0800f6fc <WS28xxDmxParams::staticCallbackFunction(void*, char const*)>:
 800f6fc:	f7ff bed4 	b.w	800f4a8 <WS28xxDmxParams::callbackFunction(char const*)>

0800f700 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)>:
 800f700:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f704:	4604      	mov	r4, r0
 800f706:	4615      	mov	r5, r2
 800f708:	461e      	mov	r6, r3
 800f70a:	b086      	sub	sp, #24
 800f70c:	3004      	adds	r0, #4
 800f70e:	2900      	cmp	r1, #0
 800f710:	f000 808e 	beq.w	800f830 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x130>
 800f714:	2227      	movs	r2, #39	; 0x27
 800f716:	f006 faf6 	bl	8015d06 <memmove>
 800f71a:	4633      	mov	r3, r6
 800f71c:	462a      	mov	r2, r5
 800f71e:	497b      	ldr	r1, [pc, #492]	; (800f90c <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x20c>)
 800f720:	a803      	add	r0, sp, #12
 800f722:	f005 fad1 	bl	8014cc8 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800f726:	7a20      	ldrb	r0, [r4, #8]
 800f728:	f000 fce2 	bl	80100f0 <PixelType::GetType(pixel::Type)>
 800f72c:	6863      	ldr	r3, [r4, #4]
 800f72e:	4602      	mov	r2, r0
 800f730:	4977      	ldr	r1, [pc, #476]	; (800f910 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x210>)
 800f732:	f003 0301 	and.w	r3, r3, #1
 800f736:	a803      	add	r0, sp, #12
 800f738:	f7ff fde4 	bl	800f304 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800f73c:	6863      	ldr	r3, [r4, #4]
 800f73e:	f8b4 2009 	ldrh.w	r2, [r4, #9]
 800f742:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800f746:	4973      	ldr	r1, [pc, #460]	; (800f914 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x214>)
 800f748:	a803      	add	r0, sp, #12
 800f74a:	f7ff fdb3 	bl	800f2b4 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800f74e:	4972      	ldr	r1, [pc, #456]	; (800f918 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x218>)
 800f750:	a803      	add	r0, sp, #12
 800f752:	f005 fb3f 	bl	8014dd4 <PropertiesBuilder::AddComment(char const*)>
 800f756:	6863      	ldr	r3, [r4, #4]
 800f758:	059e      	lsls	r6, r3, #22
 800f75a:	d403      	bmi.n	800f764 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x64>
 800f75c:	7a20      	ldrb	r0, [r4, #8]
 800f75e:	f000 f9a6 	bl	800faae <PixelConfiguration::GetRgbMapping(pixel::Type)>
 800f762:	75e0      	strb	r0, [r4, #23]
 800f764:	7de0      	ldrb	r0, [r4, #23]
 800f766:	f000 fd1b 	bl	80101a0 <PixelType::GetMap(pixel::Map)>
 800f76a:	6863      	ldr	r3, [r4, #4]
 800f76c:	4602      	mov	r2, r0
 800f76e:	f3c3 2340 	ubfx	r3, r3, #9, #1
 800f772:	496a      	ldr	r1, [pc, #424]	; (800f91c <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x21c>)
 800f774:	a803      	add	r0, sp, #12
 800f776:	f7ff fdc5 	bl	800f304 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800f77a:	6863      	ldr	r3, [r4, #4]
 800f77c:	f403 6340 	and.w	r3, r3, #3072	; 0xc00
 800f780:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 800f784:	d011      	beq.n	800f7aa <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0xaa>
 800f786:	f10d 020b 	add.w	r2, sp, #11
 800f78a:	7a20      	ldrb	r0, [r4, #8]
 800f78c:	f10d 010a 	add.w	r1, sp, #10
 800f790:	f000 f99c 	bl	800facc <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)>
 800f794:	6863      	ldr	r3, [r4, #4]
 800f796:	055d      	lsls	r5, r3, #21
 800f798:	bf5c      	itt	pl
 800f79a:	f89d 200a 	ldrbpl.w	r2, [sp, #10]
 800f79e:	7622      	strbpl	r2, [r4, #24]
 800f7a0:	0518      	lsls	r0, r3, #20
 800f7a2:	bf5c      	itt	pl
 800f7a4:	f89d 300b 	ldrbpl.w	r3, [sp, #11]
 800f7a8:	7663      	strbpl	r3, [r4, #25]
 800f7aa:	495d      	ldr	r1, [pc, #372]	; (800f920 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x220>)
 800f7ac:	a803      	add	r0, sp, #12
 800f7ae:	f005 fb11 	bl	8014dd4 <PropertiesBuilder::AddComment(char const*)>
 800f7b2:	7e20      	ldrb	r0, [r4, #24]
 800f7b4:	f000 fd00 	bl	80101b8 <PixelType::ConvertTxH(unsigned char)>
 800f7b8:	2502      	movs	r5, #2
 800f7ba:	6863      	ldr	r3, [r4, #4]
 800f7bc:	4602      	mov	r2, r0
 800f7be:	4959      	ldr	r1, [pc, #356]	; (800f924 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x224>)
 800f7c0:	f3c3 2380 	ubfx	r3, r3, #10, #1
 800f7c4:	9500      	str	r5, [sp, #0]
 800f7c6:	a803      	add	r0, sp, #12
 800f7c8:	f7ff fdc4 	bl	800f354 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>
 800f7cc:	7e60      	ldrb	r0, [r4, #25]
 800f7ce:	f000 fcf3 	bl	80101b8 <PixelType::ConvertTxH(unsigned char)>
 800f7d2:	6863      	ldr	r3, [r4, #4]
 800f7d4:	4602      	mov	r2, r0
 800f7d6:	f3c3 23c0 	ubfx	r3, r3, #11, #1
 800f7da:	4953      	ldr	r1, [pc, #332]	; (800f928 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x228>)
 800f7dc:	9500      	str	r5, [sp, #0]
 800f7de:	a803      	add	r0, sp, #12
 800f7e0:	f7ff fdb8 	bl	800f354 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>
 800f7e4:	4951      	ldr	r1, [pc, #324]	; (800f92c <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x22c>)
 800f7e6:	a803      	add	r0, sp, #12
 800f7e8:	f005 faf4 	bl	8014dd4 <PropertiesBuilder::AddComment(char const*)>
 800f7ec:	6863      	ldr	r3, [r4, #4]
 800f7ee:	f8b4 2015 	ldrh.w	r2, [r4, #21]
 800f7f2:	494f      	ldr	r1, [pc, #316]	; (800f930 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x230>)
 800f7f4:	f3c3 2300 	ubfx	r3, r3, #8, #1
 800f7f8:	a803      	add	r0, sp, #12
 800f7fa:	f7ff fd5b 	bl	800f2b4 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800f7fe:	494d      	ldr	r1, [pc, #308]	; (800f934 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x234>)
 800f800:	a803      	add	r0, sp, #12
 800f802:	f005 fae7 	bl	8014dd4 <PropertiesBuilder::AddComment(char const*)>
 800f806:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 800f80a:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800f80e:	42a9      	cmp	r1, r5
 800f810:	d224      	bcs.n	800f85c <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x15c>
 800f812:	9803      	ldr	r0, [sp, #12]
 800f814:	1a6d      	subs	r5, r5, r1
 800f816:	4408      	add	r0, r1
 800f818:	6861      	ldr	r1, [r4, #4]
 800f81a:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800f81e:	06c9      	lsls	r1, r1, #27
 800f820:	f8d4 300e 	ldr.w	r3, [r4, #14]
 800f824:	d40b      	bmi.n	800f83e <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x13e>
 800f826:	b962      	cbnz	r2, 800f842 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x142>
 800f828:	9300      	str	r3, [sp, #0]
 800f82a:	4a43      	ldr	r2, [pc, #268]	; (800f938 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x238>)
 800f82c:	4b43      	ldr	r3, [pc, #268]	; (800f93c <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x23c>)
 800f82e:	e00b      	b.n	800f848 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x148>
 800f830:	6823      	ldr	r3, [r4, #0]
 800f832:	4601      	mov	r1, r0
 800f834:	681a      	ldr	r2, [r3, #0]
 800f836:	4618      	mov	r0, r3
 800f838:	68d2      	ldr	r2, [r2, #12]
 800f83a:	4790      	blx	r2
 800f83c:	e76d      	b.n	800f71a <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x1a>
 800f83e:	2a00      	cmp	r2, #0
 800f840:	d05f      	beq.n	800f902 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x202>
 800f842:	9300      	str	r3, [sp, #0]
 800f844:	4a3e      	ldr	r2, [pc, #248]	; (800f940 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x240>)
 800f846:	4b3d      	ldr	r3, [pc, #244]	; (800f93c <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x23c>)
 800f848:	4629      	mov	r1, r5
 800f84a:	f7f9 fbd1 	bl	8008ff0 <snprintf>
 800f84e:	4285      	cmp	r5, r0
 800f850:	bfa2      	ittt	ge
 800f852:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800f856:	18c0      	addge	r0, r0, r3
 800f858:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800f85c:	4939      	ldr	r1, [pc, #228]	; (800f944 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x244>)
 800f85e:	a803      	add	r0, sp, #12
 800f860:	f005 fab8 	bl	8014dd4 <PropertiesBuilder::AddComment(char const*)>
 800f864:	6863      	ldr	r3, [r4, #4]
 800f866:	7ca2      	ldrb	r2, [r4, #18]
 800f868:	4937      	ldr	r1, [pc, #220]	; (800f948 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x248>)
 800f86a:	f3c3 1340 	ubfx	r3, r3, #5, #1
 800f86e:	a803      	add	r0, sp, #12
 800f870:	f7ff fcf8 	bl	800f264 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800f874:	2500      	movs	r5, #0
 800f876:	f44f 5880 	mov.w	r8, #4096	; 0x1000
 800f87a:	4e34      	ldr	r6, [pc, #208]	; (800f94c <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x24c>)
 800f87c:	f104 071a 	add.w	r7, r4, #26
 800f880:	6862      	ldr	r2, [r4, #4]
 800f882:	fa08 f305 	lsl.w	r3, r8, r5
 800f886:	4393      	bics	r3, r2
 800f888:	bf0c      	ite	eq
 800f88a:	2301      	moveq	r3, #1
 800f88c:	2300      	movne	r3, #0
 800f88e:	4631      	mov	r1, r6
 800f890:	f837 2b02 	ldrh.w	r2, [r7], #2
 800f894:	a803      	add	r0, sp, #12
 800f896:	3501      	adds	r5, #1
 800f898:	f7ff fd0c 	bl	800f2b4 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800f89c:	2d08      	cmp	r5, #8
 800f89e:	f106 0612 	add.w	r6, r6, #18
 800f8a2:	d1ed      	bne.n	800f880 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x180>
 800f8a4:	6863      	ldr	r3, [r4, #4]
 800f8a6:	7ce2      	ldrb	r2, [r4, #19]
 800f8a8:	f3c3 1380 	ubfx	r3, r3, #6, #1
 800f8ac:	4928      	ldr	r1, [pc, #160]	; (800f950 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x250>)
 800f8ae:	a803      	add	r0, sp, #12
 800f8b0:	f7ff fcd8 	bl	800f264 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800f8b4:	4927      	ldr	r1, [pc, #156]	; (800f954 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x254>)
 800f8b6:	a803      	add	r0, sp, #12
 800f8b8:	f005 fa8c 	bl	8014dd4 <PropertiesBuilder::AddComment(char const*)>
 800f8bc:	6863      	ldr	r3, [r4, #4]
 800f8be:	f894 202a 	ldrb.w	r2, [r4, #42]	; 0x2a
 800f8c2:	f3c3 5300 	ubfx	r3, r3, #20, #1
 800f8c6:	4924      	ldr	r1, [pc, #144]	; (800f958 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x258>)
 800f8c8:	a803      	add	r0, sp, #12
 800f8ca:	f7ff fccb 	bl	800f264 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800f8ce:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800f8d2:	b17b      	cbz	r3, 800f8f4 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x1f4>
 800f8d4:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800f8d8:	9b03      	ldr	r3, [sp, #12]
 800f8da:	4413      	add	r3, r2
 800f8dc:	227d      	movs	r2, #125	; 0x7d
 800f8de:	f803 2c01 	strb.w	r2, [r3, #-1]
 800f8e2:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800f8e6:	9903      	ldr	r1, [sp, #12]
 800f8e8:	54ca      	strb	r2, [r1, r3]
 800f8ea:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800f8ee:	3301      	adds	r3, #1
 800f8f0:	f8ad 3012 	strh.w	r3, [sp, #18]
 800f8f4:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800f8f8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800f8fa:	601a      	str	r2, [r3, #0]
 800f8fc:	b006      	add	sp, #24
 800f8fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f902:	9300      	str	r3, [sp, #0]
 800f904:	4a15      	ldr	r2, [pc, #84]	; (800f95c <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x25c>)
 800f906:	4b0d      	ldr	r3, [pc, #52]	; (800f93c <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x23c>)
 800f908:	e79e      	b.n	800f848 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x148>
 800f90a:	bf00      	nop
 800f90c:	0801a1e2 	stmdaeq	r1, {r1, r5, r6, r7, r8, sp, pc}
 800f910:	0801a1bf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r7, r8, sp, pc}
 800f914:	0801a1c8 	stmdaeq	r1, {r3, r6, r7, r8, sp, pc}
 800f918:	08019a75 	stmdaeq	r1, {r0, r2, r4, r5, r6, r9, fp, ip, pc}
 800f91c:	0801a1af 	stmdaeq	r1, {r0, r1, r2, r3, r5, r7, r8, sp, pc}
 800f920:	08019a89 	stmdaeq	r1, {r0, r3, r7, r9, fp, ip, pc}
 800f924:	0801a1d2 	stmdaeq	r1, {r1, r4, r6, r7, r8, sp, pc}
 800f928:	0801a1da 	stmdaeq	r1, {r1, r3, r4, r6, r7, r8, sp, pc}
 800f92c:	08019a9f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r7, r9, fp, ip, pc}
 800f930:	0801a18d 	stmdaeq	r1, {r0, r2, r3, r7, r8, sp, pc}
 800f934:	08019aa8 	stmdaeq	r1, {r3, r5, r7, r9, fp, ip, pc}
 800f938:	08018359 	stmdaeq	r1, {r0, r3, r4, r6, r8, r9, pc}
 800f93c:	0801a17e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r8, sp, pc}
 800f940:	08018350 	stmdaeq	r1, {r4, r6, r8, r9, pc}
 800f944:	08019aba 	stmdaeq	r1, {r1, r3, r4, r5, r7, r9, fp, ip, pc}
 800f948:	0801a19d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r8, sp, pc}
 800f94c:	0801a28a 	stmdaeq	r1, {r1, r3, r7, r9, sp, pc}
 800f950:	0801a173 	stmdaeq	r1, {r0, r1, r4, r5, r6, r8, sp, pc}
 800f954:	08019ac8 	stmdaeq	r1, {r3, r6, r7, r9, fp, ip, pc}
 800f958:	0801a23d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r9, sp, pc}
 800f95c:	0801835a 	stmdaeq	r1, {r1, r3, r4, r6, r8, r9, pc}

0800f960 <WS28xxDmxParams::Save(char*, unsigned int, unsigned int&)>:
 800f960:	b513      	push	{r0, r1, r4, lr}
 800f962:	6804      	ldr	r4, [r0, #0]
 800f964:	b914      	cbnz	r4, 800f96c <WS28xxDmxParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800f966:	601c      	str	r4, [r3, #0]
 800f968:	b002      	add	sp, #8
 800f96a:	bd10      	pop	{r4, pc}
 800f96c:	9300      	str	r3, [sp, #0]
 800f96e:	4613      	mov	r3, r2
 800f970:	460a      	mov	r2, r1
 800f972:	2100      	movs	r1, #0
 800f974:	f7ff fec4 	bl	800f700 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)>
 800f978:	e7f6      	b.n	800f968 <WS28xxDmxParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800f97a <WS28xxDmxParams::Set(PixelDmxConfiguration*)>:
 800f97a:	6843      	ldr	r3, [r0, #4]
 800f97c:	07da      	lsls	r2, r3, #31
 800f97e:	bf44      	itt	mi
 800f980:	7a02      	ldrbmi	r2, [r0, #8]
 800f982:	600a      	strmi	r2, [r1, #0]
 800f984:	079a      	lsls	r2, r3, #30
 800f986:	d505      	bpl.n	800f994 <WS28xxDmxParams::Set(PixelDmxConfiguration*)+0x1a>
 800f988:	f8b0 2009 	ldrh.w	r2, [r0, #9]
 800f98c:	2a00      	cmp	r2, #0
 800f98e:	bf08      	it	eq
 800f990:	22aa      	moveq	r2, #170	; 0xaa
 800f992:	604a      	str	r2, [r1, #4]
 800f994:	059a      	lsls	r2, r3, #22
 800f996:	bf44      	itt	mi
 800f998:	7dc2      	ldrbmi	r2, [r0, #23]
 800f99a:	608a      	strmi	r2, [r1, #8]
 800f99c:	055a      	lsls	r2, r3, #21
 800f99e:	bf44      	itt	mi
 800f9a0:	7e02      	ldrbmi	r2, [r0, #24]
 800f9a2:	740a      	strbmi	r2, [r1, #16]
 800f9a4:	051a      	lsls	r2, r3, #20
 800f9a6:	bf44      	itt	mi
 800f9a8:	7e42      	ldrbmi	r2, [r0, #25]
 800f9aa:	744a      	strbmi	r2, [r1, #17]
 800f9ac:	06da      	lsls	r2, r3, #27
 800f9ae:	bf44      	itt	mi
 800f9b0:	f8d0 200e 	ldrmi.w	r2, [r0, #14]
 800f9b4:	60ca      	strmi	r2, [r1, #12]
 800f9b6:	069a      	lsls	r2, r3, #26
 800f9b8:	bf44      	itt	mi
 800f9ba:	7c82      	ldrbmi	r2, [r0, #18]
 800f9bc:	748a      	strbmi	r2, [r1, #18]
 800f9be:	075a      	lsls	r2, r3, #29
 800f9c0:	d50f      	bpl.n	800f9e2 <WS28xxDmxParams::Set(PixelDmxConfiguration*)+0x68>
 800f9c2:	7ac2      	ldrb	r2, [r0, #11]
 800f9c4:	b510      	push	{r4, lr}
 800f9c6:	7b04      	ldrb	r4, [r0, #12]
 800f9c8:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
 800f9cc:	838a      	strh	r2, [r1, #28]
 800f9ce:	05da      	lsls	r2, r3, #23
 800f9d0:	bf44      	itt	mi
 800f9d2:	f8b0 2015 	ldrhmi.w	r2, [r0, #21]
 800f9d6:	618a      	strmi	r2, [r1, #24]
 800f9d8:	065c      	lsls	r4, r3, #25
 800f9da:	bf44      	itt	mi
 800f9dc:	7cc3      	ldrbmi	r3, [r0, #19]
 800f9de:	614b      	strmi	r3, [r1, #20]
 800f9e0:	bd10      	pop	{r4, pc}
 800f9e2:	05da      	lsls	r2, r3, #23
 800f9e4:	bf44      	itt	mi
 800f9e6:	f8b0 2015 	ldrhmi.w	r2, [r0, #21]
 800f9ea:	618a      	strmi	r2, [r1, #24]
 800f9ec:	065b      	lsls	r3, r3, #25
 800f9ee:	bf44      	itt	mi
 800f9f0:	7cc3      	ldrbmi	r3, [r0, #19]
 800f9f2:	614b      	strmi	r3, [r1, #20]
 800f9f4:	4770      	bx	lr

0800f9f6 <WS28xxDmxParams::Dump()>:
 800f9f6:	4770      	bx	lr

0800f9f8 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&, unsigned int&, unsigned int&)>:
 800f9f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f9fc:	460e      	mov	r6, r1
 800f9fe:	4611      	mov	r1, r2
 800fa00:	4604      	mov	r4, r0
 800fa02:	4690      	mov	r8, r2
 800fa04:	461d      	mov	r5, r3
 800fa06:	9f06      	ldr	r7, [sp, #24]
 800fa08:	f000 f86e 	bl	800fae8 <PixelConfiguration::Validate(unsigned int&)>
 800fa0c:	2e01      	cmp	r6, #1
 800fa0e:	d009      	beq.n	800fa24 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&, unsigned int&, unsigned int&)+0x2c>
 800fa10:	7ce2      	ldrb	r2, [r4, #19]
 800fa12:	b93a      	cbnz	r2, 800fa24 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&, unsigned int&, unsigned int&)+0x2c>
 800fa14:	2e04      	cmp	r6, #4
 800fa16:	d141      	bne.n	800fa9c <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&, unsigned int&, unsigned int&)+0xa4>
 800fa18:	2303      	movs	r3, #3
 800fa1a:	6023      	str	r3, [r4, #0]
 800fa1c:	4641      	mov	r1, r8
 800fa1e:	4620      	mov	r0, r4
 800fa20:	f000 f862 	bl	800fae8 <PixelConfiguration::Validate(unsigned int&)>
 800fa24:	6823      	ldr	r3, [r4, #0]
 800fa26:	2b07      	cmp	r3, #7
 800fa28:	bf0d      	iteet	eq
 800fa2a:	f44f 7380 	moveq.w	r3, #256	; 0x100
 800fa2e:	f44f 73aa 	movne.w	r3, #340	; 0x154
 800fa32:	22aa      	movne	r2, #170	; 0xaa
 800fa34:	2180      	moveq	r1, #128	; 0x80
 800fa36:	bf15      	itete	ne
 800fa38:	e9c5 2300 	strdne	r2, r3, [r5]
 800fa3c:	e9c5 1300 	strdeq	r1, r3, [r5]
 800fa40:	f44f 73ff 	movne.w	r3, #510	; 0x1fe
 800fa44:	f44f 73c0 	moveq.w	r3, #384	; 0x180
 800fa48:	69a2      	ldr	r2, [r4, #24]
 800fa4a:	60ab      	str	r3, [r5, #8]
 800fa4c:	6863      	ldr	r3, [r4, #4]
 800fa4e:	b10a      	cbz	r2, 800fa54 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&, unsigned int&, unsigned int&)+0x5c>
 800fa50:	4293      	cmp	r3, r2
 800fa52:	d200      	bcs.n	800fa56 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&, unsigned int&, unsigned int&)+0x5e>
 800fa54:	61a3      	str	r3, [r4, #24]
 800fa56:	69a2      	ldr	r2, [r4, #24]
 800fa58:	fbb3 f3f2 	udiv	r3, r3, r2
 800fa5c:	603b      	str	r3, [r7, #0]
 800fa5e:	6963      	ldr	r3, [r4, #20]
 800fa60:	42b3      	cmp	r3, r6
 800fa62:	bf94      	ite	ls
 800fa64:	6163      	strls	r3, [r4, #20]
 800fa66:	6166      	strhi	r6, [r4, #20]
 800fa68:	682b      	ldr	r3, [r5, #0]
 800fa6a:	2e01      	cmp	r6, #1
 800fa6c:	f103 0201 	add.w	r2, r3, #1
 800fa70:	683b      	ldr	r3, [r7, #0]
 800fa72:	fbb3 f3f2 	udiv	r3, r3, r2
 800fa76:	9a07      	ldr	r2, [sp, #28]
 800fa78:	f103 0101 	add.w	r1, r3, #1
 800fa7c:	6011      	str	r1, [r2, #0]
 800fa7e:	bf09      	itett	eq
 800fa80:	682b      	ldreq	r3, [r5, #0]
 800fa82:	6962      	ldrne	r2, [r4, #20]
 800fa84:	1c5a      	addeq	r2, r3, #1
 800fa86:	683b      	ldreq	r3, [r7, #0]
 800fa88:	bf16      	itet	ne
 800fa8a:	f102 32ff 	addne.w	r2, r2, #4294967295	; 0xffffffff
 800fa8e:	fbb3 f3f2 	udiveq	r3, r3, r2
 800fa92:	eb03 0382 	addne.w	r3, r3, r2, lsl #2
 800fa96:	60eb      	str	r3, [r5, #12]
 800fa98:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800fa9c:	6823      	ldr	r3, [r4, #0]
 800fa9e:	2b00      	cmp	r3, #0
 800faa0:	d0bc      	beq.n	800fa1c <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&, unsigned int&, unsigned int&)+0x24>
 800faa2:	3b0b      	subs	r3, #11
 800faa4:	2b01      	cmp	r3, #1
 800faa6:	bf88      	it	hi
 800faa8:	6022      	strhi	r2, [r4, #0]
 800faaa:	e7b7      	b.n	800fa1c <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&, unsigned int&, unsigned int&)+0x24>

0800faac <PixelDmxConfiguration::Dump()>:
 800faac:	4770      	bx	lr

0800faae <PixelConfiguration::GetRgbMapping(pixel::Type)>:
 800faae:	f020 0308 	bic.w	r3, r0, #8
 800fab2:	2b01      	cmp	r3, #1
 800fab4:	d006      	beq.n	800fac4 <PixelConfiguration::GetRgbMapping(pixel::Type)+0x16>
 800fab6:	2808      	cmp	r0, #8
 800fab8:	d006      	beq.n	800fac8 <PixelConfiguration::GetRgbMapping(pixel::Type)+0x1a>
 800faba:	280a      	cmp	r0, #10
 800fabc:	bf14      	ite	ne
 800fabe:	2002      	movne	r0, #2
 800fac0:	2005      	moveq	r0, #5
 800fac2:	4770      	bx	lr
 800fac4:	2000      	movs	r0, #0
 800fac6:	4770      	bx	lr
 800fac8:	2004      	movs	r0, #4
 800faca:	4770      	bx	lr

0800facc <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)>:
 800facc:	23c0      	movs	r3, #192	; 0xc0
 800face:	2803      	cmp	r0, #3
 800fad0:	700b      	strb	r3, [r1, #0]
 800fad2:	d006      	beq.n	800fae2 <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)+0x16>
 800fad4:	3808      	subs	r0, #8
 800fad6:	2803      	cmp	r0, #3
 800fad8:	bf34      	ite	cc
 800fada:	23fc      	movcc	r3, #252	; 0xfc
 800fadc:	23f0      	movcs	r3, #240	; 0xf0
 800fade:	7013      	strb	r3, [r2, #0]
 800fae0:	4770      	bx	lr
 800fae2:	23f8      	movs	r3, #248	; 0xf8
 800fae4:	e7fb      	b.n	800fade <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)+0x12>
	...

0800fae8 <PixelConfiguration::Validate(unsigned int&)>:
 800fae8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800faea:	e9d0 5300 	ldrd	r5, r3, [r0]
 800faee:	2d07      	cmp	r5, #7
 800faf0:	4604      	mov	r4, r0
 800faf2:	6882      	ldr	r2, [r0, #8]
 800faf4:	d129      	bne.n	800fb4a <PixelConfiguration::Validate(unsigned int&)+0x62>
 800faf6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800fafa:	bf28      	it	cs
 800fafc:	f44f 7300 	movcs.w	r3, #512	; 0x200
 800fb00:	6043      	str	r3, [r0, #4]
 800fb02:	2304      	movs	r3, #4
 800fb04:	600b      	str	r3, [r1, #0]
 800fb06:	2301      	movs	r3, #1
 800fb08:	2a06      	cmp	r2, #6
 800fb0a:	74e3      	strb	r3, [r4, #19]
 800fb0c:	d103      	bne.n	800fb16 <PixelConfiguration::Validate(unsigned int&)+0x2e>
 800fb0e:	4628      	mov	r0, r5
 800fb10:	f7ff ffcd 	bl	800faae <PixelConfiguration::GetRgbMapping(pixel::Type)>
 800fb14:	60a0      	str	r0, [r4, #8]
 800fb16:	7c63      	ldrb	r3, [r4, #17]
 800fb18:	7c22      	ldrb	r2, [r4, #16]
 800fb1a:	4628      	mov	r0, r5
 800fb1c:	429a      	cmp	r2, r3
 800fb1e:	bf28      	it	cs
 800fb20:	2300      	movcs	r3, #0
 800fb22:	f10d 0207 	add.w	r2, sp, #7
 800fb26:	bf28      	it	cs
 800fb28:	8223      	strhcs	r3, [r4, #16]
 800fb2a:	f10d 0106 	add.w	r1, sp, #6
 800fb2e:	f7ff ffcd 	bl	800facc <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)>
 800fb32:	7c23      	ldrb	r3, [r4, #16]
 800fb34:	b913      	cbnz	r3, 800fb3c <PixelConfiguration::Validate(unsigned int&)+0x54>
 800fb36:	f89d 3006 	ldrb.w	r3, [sp, #6]
 800fb3a:	7423      	strb	r3, [r4, #16]
 800fb3c:	7c63      	ldrb	r3, [r4, #17]
 800fb3e:	b913      	cbnz	r3, 800fb46 <PixelConfiguration::Validate(unsigned int&)+0x5e>
 800fb40:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800fb44:	7463      	strb	r3, [r4, #17]
 800fb46:	4b1a      	ldr	r3, [pc, #104]	; (800fbb0 <PixelConfiguration::Validate(unsigned int&)+0xc8>)
 800fb48:	e020      	b.n	800fb8c <PixelConfiguration::Validate(unsigned int&)+0xa4>
 800fb4a:	f5b3 7f2a 	cmp.w	r3, #680	; 0x2a8
 800fb4e:	bf28      	it	cs
 800fb50:	f44f 732a 	movcs.w	r3, #680	; 0x2a8
 800fb54:	6043      	str	r3, [r0, #4]
 800fb56:	2303      	movs	r3, #3
 800fb58:	600b      	str	r3, [r1, #0]
 800fb5a:	f1a5 030b 	sub.w	r3, r5, #11
 800fb5e:	2b01      	cmp	r3, #1
 800fb60:	d806      	bhi.n	800fb70 <PixelConfiguration::Validate(unsigned int&)+0x88>
 800fb62:	7c83      	ldrb	r3, [r0, #18]
 800fb64:	2b1f      	cmp	r3, #31
 800fb66:	d81d      	bhi.n	800fba4 <PixelConfiguration::Validate(unsigned int&)+0xbc>
 800fb68:	f043 03e0 	orr.w	r3, r3, #224	; 0xe0
 800fb6c:	74a3      	strb	r3, [r4, #18]
 800fb6e:	e000      	b.n	800fb72 <PixelConfiguration::Validate(unsigned int&)+0x8a>
 800fb70:	b9d5      	cbnz	r5, 800fba8 <PixelConfiguration::Validate(unsigned int&)+0xc0>
 800fb72:	2300      	movs	r3, #0
 800fb74:	f44f 417f 	mov.w	r1, #65280	; 0xff00
 800fb78:	2a06      	cmp	r2, #6
 800fb7a:	bf08      	it	eq
 800fb7c:	60a3      	streq	r3, [r4, #8]
 800fb7e:	2d0d      	cmp	r5, #13
 800fb80:	74e3      	strb	r3, [r4, #19]
 800fb82:	8221      	strh	r1, [r4, #16]
 800fb84:	68e3      	ldr	r3, [r4, #12]
 800fb86:	d109      	bne.n	800fb9c <PixelConfiguration::Validate(unsigned int&)+0xb4>
 800fb88:	b913      	cbnz	r3, 800fb90 <PixelConfiguration::Validate(unsigned int&)+0xa8>
 800fb8a:	4b0a      	ldr	r3, [pc, #40]	; (800fbb4 <PixelConfiguration::Validate(unsigned int&)+0xcc>)
 800fb8c:	60e3      	str	r3, [r4, #12]
 800fb8e:	e003      	b.n	800fb98 <PixelConfiguration::Validate(unsigned int&)+0xb0>
 800fb90:	4a09      	ldr	r2, [pc, #36]	; (800fbb8 <PixelConfiguration::Validate(unsigned int&)+0xd0>)
 800fb92:	4293      	cmp	r3, r2
 800fb94:	d900      	bls.n	800fb98 <PixelConfiguration::Validate(unsigned int&)+0xb0>
 800fb96:	60e2      	str	r2, [r4, #12]
 800fb98:	b003      	add	sp, #12
 800fb9a:	bd30      	pop	{r4, r5, pc}
 800fb9c:	2b00      	cmp	r3, #0
 800fb9e:	d0f4      	beq.n	800fb8a <PixelConfiguration::Validate(unsigned int&)+0xa2>
 800fba0:	4a06      	ldr	r2, [pc, #24]	; (800fbbc <PixelConfiguration::Validate(unsigned int&)+0xd4>)
 800fba2:	e7f6      	b.n	800fb92 <PixelConfiguration::Validate(unsigned int&)+0xaa>
 800fba4:	23ff      	movs	r3, #255	; 0xff
 800fba6:	e7e1      	b.n	800fb6c <PixelConfiguration::Validate(unsigned int&)+0x84>
 800fba8:	2d0d      	cmp	r5, #13
 800fbaa:	d0e2      	beq.n	800fb72 <PixelConfiguration::Validate(unsigned int&)+0x8a>
 800fbac:	e7ab      	b.n	800fb06 <PixelConfiguration::Validate(unsigned int&)+0x1e>
 800fbae:	bf00      	nop
 800fbb0:	0061a800 	rsbeq	sl, r1, r0, lsl #16
 800fbb4:	003d0900 	eorseq	r0, sp, r0, lsl #18
 800fbb8:	00e4e1c0 	rsceq	lr, r4, r0, asr #3
 800fbbc:	017d7840 	cmneq	sp, r0, asr #16

0800fbc0 <PixelConfiguration::Dump()>:
 800fbc0:	4770      	bx	lr
	...

0800fbc4 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>:
 800fbc4:	b507      	push	{r0, r1, r2, lr}
 800fbc6:	b2d3      	uxtb	r3, r2
 800fbc8:	9301      	str	r3, [sp, #4]
 800fbca:	f3c2 2307 	ubfx	r3, r2, #8, #8
 800fbce:	9300      	str	r3, [sp, #0]
 800fbd0:	f3c2 4307 	ubfx	r3, r2, #16, #8
 800fbd4:	460a      	mov	r2, r1
 800fbd6:	4601      	mov	r1, r0
 800fbd8:	4803      	ldr	r0, [pc, #12]	; (800fbe8 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x24>)
 800fbda:	6800      	ldr	r0, [r0, #0]
 800fbdc:	f000 fdd2 	bl	8010784 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 800fbe0:	b003      	add	sp, #12
 800fbe2:	f85d fb04 	ldr.w	pc, [sp], #4
 800fbe6:	bf00      	nop
 800fbe8:	20003594 	mulcs	r0, r4, r5

0800fbec <PixelPatterns::Clear(unsigned int) [clone .isra.0]>:
 800fbec:	b570      	push	{r4, r5, r6, lr}
 800fbee:	4605      	mov	r5, r0
 800fbf0:	2400      	movs	r4, #0
 800fbf2:	4e06      	ldr	r6, [pc, #24]	; (800fc0c <PixelPatterns::Clear(unsigned int) [clone .isra.0]+0x20>)
 800fbf4:	6833      	ldr	r3, [r6, #0]
 800fbf6:	42a3      	cmp	r3, r4
 800fbf8:	d906      	bls.n	800fc08 <PixelPatterns::Clear(unsigned int) [clone .isra.0]+0x1c>
 800fbfa:	4621      	mov	r1, r4
 800fbfc:	2200      	movs	r2, #0
 800fbfe:	4628      	mov	r0, r5
 800fc00:	f7ff ffe0 	bl	800fbc4 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800fc04:	3401      	adds	r4, #1
 800fc06:	e7f5      	b.n	800fbf4 <PixelPatterns::Clear(unsigned int) [clone .isra.0]+0x8>
 800fc08:	bd70      	pop	{r4, r5, r6, pc}
 800fc0a:	bf00      	nop
 800fc0c:	20003590 	mulcs	r0, r0, r5

0800fc10 <PixelPatterns::PixelPatterns(unsigned int)>:
 800fc10:	2908      	cmp	r1, #8
 800fc12:	bf28      	it	cs
 800fc14:	2108      	movcs	r1, #8
 800fc16:	4b0b      	ldr	r3, [pc, #44]	; (800fc44 <PixelPatterns::PixelPatterns(unsigned int)+0x34>)
 800fc18:	4a0b      	ldr	r2, [pc, #44]	; (800fc48 <PixelPatterns::PixelPatterns(unsigned int)+0x38>)
 800fc1a:	681b      	ldr	r3, [r3, #0]
 800fc1c:	b510      	push	{r4, lr}
 800fc1e:	6013      	str	r3, [r2, #0]
 800fc20:	4a0a      	ldr	r2, [pc, #40]	; (800fc4c <PixelPatterns::PixelPatterns(unsigned int)+0x3c>)
 800fc22:	6011      	str	r1, [r2, #0]
 800fc24:	685a      	ldr	r2, [r3, #4]
 800fc26:	4b0a      	ldr	r3, [pc, #40]	; (800fc50 <PixelPatterns::PixelPatterns(unsigned int)+0x40>)
 800fc28:	2100      	movs	r1, #0
 800fc2a:	601a      	str	r2, [r3, #0]
 800fc2c:	2208      	movs	r2, #8
 800fc2e:	4b09      	ldr	r3, [pc, #36]	; (800fc54 <PixelPatterns::PixelPatterns(unsigned int)+0x44>)
 800fc30:	681c      	ldr	r4, [r3, #0]
 800fc32:	4b09      	ldr	r3, [pc, #36]	; (800fc58 <PixelPatterns::PixelPatterns(unsigned int)+0x48>)
 800fc34:	3a01      	subs	r2, #1
 800fc36:	61d9      	str	r1, [r3, #28]
 800fc38:	601c      	str	r4, [r3, #0]
 800fc3a:	6199      	str	r1, [r3, #24]
 800fc3c:	f103 0320 	add.w	r3, r3, #32
 800fc40:	d1f8      	bne.n	800fc34 <PixelPatterns::PixelPatterns(unsigned int)+0x24>
 800fc42:	bd10      	pop	{r4, pc}
 800fc44:	2000ada0 	andcs	sl, r0, r0, lsr #27
 800fc48:	20003594 	mulcs	r0, r4, r5
 800fc4c:	20003588 	andcs	r3, r0, r8, lsl #11
 800fc50:	20003590 	mulcs	r0, r0, r5
 800fc54:	20013e04 	andcs	r3, r1, r4, lsl #28
 800fc58:	20003488 	andcs	r3, r0, r8, lsl #9

0800fc5c <PixelPatterns::RainbowCycle(unsigned int, unsigned int, pixelpatterns::Direction)>:
 800fc5c:	b5e0      	push	{r5, r6, r7, lr}
 800fc5e:	4608      	mov	r0, r1
 800fc60:	460d      	mov	r5, r1
 800fc62:	4617      	mov	r7, r2
 800fc64:	461e      	mov	r6, r3
 800fc66:	f7ff ffc1 	bl	800fbec <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800fc6a:	2301      	movs	r3, #1
 800fc6c:	4905      	ldr	r1, [pc, #20]	; (800fc84 <PixelPatterns::RainbowCycle(unsigned int, unsigned int, pixelpatterns::Direction)+0x28>)
 800fc6e:	22ff      	movs	r2, #255	; 0xff
 800fc70:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 800fc74:	61cb      	str	r3, [r1, #28]
 800fc76:	2300      	movs	r3, #0
 800fc78:	604f      	str	r7, [r1, #4]
 800fc7a:	e9c1 2304 	strd	r2, r3, [r1, #16]
 800fc7e:	618e      	str	r6, [r1, #24]
 800fc80:	bde0      	pop	{r5, r6, r7, pc}
 800fc82:	bf00      	nop
 800fc84:	20003488 	andcs	r3, r0, r8, lsl #9

0800fc88 <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>:
 800fc88:	b5e0      	push	{r5, r6, r7, lr}
 800fc8a:	4608      	mov	r0, r1
 800fc8c:	460d      	mov	r5, r1
 800fc8e:	461e      	mov	r6, r3
 800fc90:	4617      	mov	r7, r2
 800fc92:	f7ff ffab 	bl	800fbec <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800fc96:	2302      	movs	r3, #2
 800fc98:	4907      	ldr	r1, [pc, #28]	; (800fcb8 <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x30>)
 800fc9a:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 800fc9e:	61cb      	str	r3, [r1, #28]
 800fca0:	9b04      	ldr	r3, [sp, #16]
 800fca2:	e9c1 7602 	strd	r7, r6, [r1, #8]
 800fca6:	604b      	str	r3, [r1, #4]
 800fca8:	4b04      	ldr	r3, [pc, #16]	; (800fcbc <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x34>)
 800fcaa:	681b      	ldr	r3, [r3, #0]
 800fcac:	610b      	str	r3, [r1, #16]
 800fcae:	2300      	movs	r3, #0
 800fcb0:	614b      	str	r3, [r1, #20]
 800fcb2:	9b05      	ldr	r3, [sp, #20]
 800fcb4:	618b      	str	r3, [r1, #24]
 800fcb6:	bde0      	pop	{r5, r6, r7, pc}
 800fcb8:	20003488 	andcs	r3, r0, r8, lsl #9
 800fcbc:	20003590 	mulcs	r0, r0, r5

0800fcc0 <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>:
 800fcc0:	b5e0      	push	{r5, r6, r7, lr}
 800fcc2:	4608      	mov	r0, r1
 800fcc4:	460d      	mov	r5, r1
 800fcc6:	461f      	mov	r7, r3
 800fcc8:	4616      	mov	r6, r2
 800fcca:	f7ff ff8f 	bl	800fbec <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800fcce:	2303      	movs	r3, #3
 800fcd0:	4906      	ldr	r1, [pc, #24]	; (800fcec <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x2c>)
 800fcd2:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 800fcd6:	61cb      	str	r3, [r1, #28]
 800fcd8:	4b05      	ldr	r3, [pc, #20]	; (800fcf0 <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x30>)
 800fcda:	604f      	str	r7, [r1, #4]
 800fcdc:	681b      	ldr	r3, [r3, #0]
 800fcde:	608e      	str	r6, [r1, #8]
 800fce0:	610b      	str	r3, [r1, #16]
 800fce2:	2300      	movs	r3, #0
 800fce4:	614b      	str	r3, [r1, #20]
 800fce6:	9b04      	ldr	r3, [sp, #16]
 800fce8:	618b      	str	r3, [r1, #24]
 800fcea:	bde0      	pop	{r5, r6, r7, pc}
 800fcec:	20003488 	andcs	r3, r0, r8, lsl #9
 800fcf0:	20003590 	mulcs	r0, r0, r5

0800fcf4 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)>:
 800fcf4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fcf6:	4608      	mov	r0, r1
 800fcf8:	460d      	mov	r5, r1
 800fcfa:	461f      	mov	r7, r3
 800fcfc:	4616      	mov	r6, r2
 800fcfe:	f7ff ff75 	bl	800fbec <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800fd02:	2304      	movs	r3, #4
 800fd04:	4c12      	ldr	r4, [pc, #72]	; (800fd50 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x5c>)
 800fd06:	4913      	ldr	r1, [pc, #76]	; (800fd54 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x60>)
 800fd08:	6820      	ldr	r0, [r4, #0]
 800fd0a:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 800fd0e:	61cb      	str	r3, [r1, #28]
 800fd10:	1e43      	subs	r3, r0, #1
 800fd12:	005b      	lsls	r3, r3, #1
 800fd14:	b29b      	uxth	r3, r3
 800fd16:	610b      	str	r3, [r1, #16]
 800fd18:	2300      	movs	r3, #0
 800fd1a:	4d0f      	ldr	r5, [pc, #60]	; (800fd58 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x64>)
 800fd1c:	614b      	str	r3, [r1, #20]
 800fd1e:	682b      	ldr	r3, [r5, #0]
 800fd20:	604f      	str	r7, [r1, #4]
 800fd22:	608e      	str	r6, [r1, #8]
 800fd24:	b993      	cbnz	r3, 800fd4c <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x58>
 800fd26:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 800fd2a:	4298      	cmp	r0, r3
 800fd2c:	bf2c      	ite	cs
 800fd2e:	f04f 30ff 	movcs.w	r0, #4294967295	; 0xffffffff
 800fd32:	0080      	lslcc	r0, r0, #2
 800fd34:	f005 ff2a 	bl	8015b8c <operator new[](unsigned int)>
 800fd38:	2200      	movs	r2, #0
 800fd3a:	6823      	ldr	r3, [r4, #0]
 800fd3c:	6028      	str	r0, [r5, #0]
 800fd3e:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 800fd42:	4298      	cmp	r0, r3
 800fd44:	d002      	beq.n	800fd4c <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x58>
 800fd46:	f840 2b04 	str.w	r2, [r0], #4
 800fd4a:	e7fa      	b.n	800fd42 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x4e>
 800fd4c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800fd4e:	bf00      	nop
 800fd50:	20003590 	mulcs	r0, r0, r5
 800fd54:	20003488 	andcs	r3, r0, r8, lsl #9
 800fd58:	2000358c 	andcs	r3, r0, ip, lsl #11

0800fd5c <PixelPatterns::Fade(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>:
 800fd5c:	b5e0      	push	{r5, r6, r7, lr}
 800fd5e:	4608      	mov	r0, r1
 800fd60:	460d      	mov	r5, r1
 800fd62:	461e      	mov	r6, r3
 800fd64:	4617      	mov	r7, r2
 800fd66:	f7ff ff41 	bl	800fbec <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800fd6a:	2305      	movs	r3, #5
 800fd6c:	4907      	ldr	r1, [pc, #28]	; (800fd8c <PixelPatterns::Fade(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x30>)
 800fd6e:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 800fd72:	61cb      	str	r3, [r1, #28]
 800fd74:	9b05      	ldr	r3, [sp, #20]
 800fd76:	e9c1 7602 	strd	r7, r6, [r1, #8]
 800fd7a:	604b      	str	r3, [r1, #4]
 800fd7c:	9b04      	ldr	r3, [sp, #16]
 800fd7e:	610b      	str	r3, [r1, #16]
 800fd80:	2300      	movs	r3, #0
 800fd82:	614b      	str	r3, [r1, #20]
 800fd84:	9b06      	ldr	r3, [sp, #24]
 800fd86:	618b      	str	r3, [r1, #24]
 800fd88:	bde0      	pop	{r5, r6, r7, pc}
 800fd8a:	bf00      	nop
 800fd8c:	20003488 	andcs	r3, r0, r8, lsl #9

0800fd90 <PixelPatterns::Wheel(unsigned char)>:
 800fd90:	43c9      	mvns	r1, r1
 800fd92:	b2c9      	uxtb	r1, r1
 800fd94:	2954      	cmp	r1, #84	; 0x54
 800fd96:	d809      	bhi.n	800fdac <PixelPatterns::Wheel(unsigned char)+0x1c>
 800fd98:	eba1 0081 	sub.w	r0, r1, r1, lsl #2
 800fd9c:	3801      	subs	r0, #1
 800fd9e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 800fda2:	b2c3      	uxtb	r3, r0
 800fda4:	b2c8      	uxtb	r0, r1
 800fda6:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 800fdaa:	4770      	bx	lr
 800fdac:	29a9      	cmp	r1, #169	; 0xa9
 800fdae:	d80b      	bhi.n	800fdc8 <PixelPatterns::Wheel(unsigned char)+0x38>
 800fdb0:	3955      	subs	r1, #85	; 0x55
 800fdb2:	b2c9      	uxtb	r1, r1
 800fdb4:	eb01 0041 	add.w	r0, r1, r1, lsl #1
 800fdb8:	eba1 0181 	sub.w	r1, r1, r1, lsl #2
 800fdbc:	b2c3      	uxtb	r3, r0
 800fdbe:	1e48      	subs	r0, r1, #1
 800fdc0:	b2c0      	uxtb	r0, r0
 800fdc2:	ea40 2003 	orr.w	r0, r0, r3, lsl #8
 800fdc6:	4770      	bx	lr
 800fdc8:	3156      	adds	r1, #86	; 0x56
 800fdca:	b2c9      	uxtb	r1, r1
 800fdcc:	eba1 0081 	sub.w	r0, r1, r1, lsl #2
 800fdd0:	3801      	subs	r0, #1
 800fdd2:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 800fdd6:	b2c3      	uxtb	r3, r0
 800fdd8:	b2c8      	uxtb	r0, r1
 800fdda:	0400      	lsls	r0, r0, #16
 800fddc:	e7f1      	b.n	800fdc2 <PixelPatterns::Wheel(unsigned char)+0x32>
	...

0800fde0 <PixelPatterns::Increment(unsigned int)>:
 800fde0:	4a0d      	ldr	r2, [pc, #52]	; (800fe18 <PixelPatterns::Increment(unsigned int)+0x38>)
 800fde2:	b510      	push	{r4, lr}
 800fde4:	014c      	lsls	r4, r1, #5
 800fde6:	eb02 1141 	add.w	r1, r2, r1, lsl #5
 800fdea:	e9d1 3005 	ldrd	r3, r0, [r1, #20]
 800fdee:	b930      	cbnz	r0, 800fdfe <PixelPatterns::Increment(unsigned int)+0x1e>
 800fdf0:	690a      	ldr	r2, [r1, #16]
 800fdf2:	3301      	adds	r3, #1
 800fdf4:	4293      	cmp	r3, r2
 800fdf6:	bf18      	it	ne
 800fdf8:	4618      	movne	r0, r3
 800fdfa:	6148      	str	r0, [r1, #20]
 800fdfc:	bd10      	pop	{r4, pc}
 800fdfe:	b92b      	cbnz	r3, 800fe0c <PixelPatterns::Increment(unsigned int)+0x2c>
 800fe00:	4422      	add	r2, r4
 800fe02:	6913      	ldr	r3, [r2, #16]
 800fe04:	3b01      	subs	r3, #1
 800fe06:	b29b      	uxth	r3, r3
 800fe08:	6153      	str	r3, [r2, #20]
 800fe0a:	e7f7      	b.n	800fdfc <PixelPatterns::Increment(unsigned int)+0x1c>
 800fe0c:	3b01      	subs	r3, #1
 800fe0e:	614b      	str	r3, [r1, #20]
 800fe10:	2b00      	cmp	r3, #0
 800fe12:	d1f3      	bne.n	800fdfc <PixelPatterns::Increment(unsigned int)+0x1c>
 800fe14:	e7f4      	b.n	800fe00 <PixelPatterns::Increment(unsigned int)+0x20>
 800fe16:	bf00      	nop
 800fe18:	20003488 	andcs	r3, r0, r8, lsl #9

0800fe1c <PixelPatterns::RainbowCycleUpdate(unsigned int)>:
 800fe1c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800fe20:	4605      	mov	r5, r0
 800fe22:	460c      	mov	r4, r1
 800fe24:	2700      	movs	r7, #0
 800fe26:	4b11      	ldr	r3, [pc, #68]	; (800fe6c <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x50>)
 800fe28:	f8df 9044 	ldr.w	r9, [pc, #68]	; 800fe70 <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x54>
 800fe2c:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800fe30:	f8d3 8014 	ldr.w	r8, [r3, #20]
 800fe34:	f8d9 3000 	ldr.w	r3, [r9]
 800fe38:	b2be      	uxth	r6, r7
 800fe3a:	42b3      	cmp	r3, r6
 800fe3c:	f107 0701 	add.w	r7, r7, #1
 800fe40:	d90d      	bls.n	800fe5e <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x42>
 800fe42:	0231      	lsls	r1, r6, #8
 800fe44:	fbb1 f1f3 	udiv	r1, r1, r3
 800fe48:	4441      	add	r1, r8
 800fe4a:	4628      	mov	r0, r5
 800fe4c:	b2c9      	uxtb	r1, r1
 800fe4e:	f7ff ff9f 	bl	800fd90 <PixelPatterns::Wheel(unsigned char)>
 800fe52:	4631      	mov	r1, r6
 800fe54:	4602      	mov	r2, r0
 800fe56:	4620      	mov	r0, r4
 800fe58:	f7ff feb4 	bl	800fbc4 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800fe5c:	e7ea      	b.n	800fe34 <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x18>
 800fe5e:	4621      	mov	r1, r4
 800fe60:	4628      	mov	r0, r5
 800fe62:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800fe66:	f7ff bfbb 	b.w	800fde0 <PixelPatterns::Increment(unsigned int)>
 800fe6a:	bf00      	nop
 800fe6c:	20003488 	andcs	r3, r0, r8, lsl #9
 800fe70:	20003590 	mulcs	r0, r0, r5

0800fe74 <PixelPatterns::TheaterChaseUpdate(unsigned int)>:
 800fe74:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fe78:	4605      	mov	r5, r0
 800fe7a:	460c      	mov	r4, r1
 800fe7c:	f04f 0b00 	mov.w	fp, #0
 800fe80:	4b12      	ldr	r3, [pc, #72]	; (800fecc <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x58>)
 800fe82:	f8df 904c 	ldr.w	r9, [pc, #76]	; 800fed0 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x5c>
 800fe86:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800fe8a:	f8d3 8014 	ldr.w	r8, [r3, #20]
 800fe8e:	f8df a044 	ldr.w	sl, [pc, #68]	; 800fed4 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x60>
 800fe92:	e9d3 6702 	ldrd	r6, r7, [r3, #8]
 800fe96:	f8d9 3000 	ldr.w	r3, [r9]
 800fe9a:	fa1f f18b 	uxth.w	r1, fp
 800fe9e:	428b      	cmp	r3, r1
 800fea0:	d90e      	bls.n	800fec0 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x4c>
 800fea2:	eb08 0301 	add.w	r3, r8, r1
 800fea6:	fb0a f303 	mul.w	r3, sl, r3
 800feaa:	f1b3 3f55 	cmp.w	r3, #1431655765	; 0x55555555
 800feae:	bf94      	ite	ls
 800feb0:	4632      	movls	r2, r6
 800feb2:	463a      	movhi	r2, r7
 800feb4:	4620      	mov	r0, r4
 800feb6:	f7ff fe85 	bl	800fbc4 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800feba:	f10b 0b01 	add.w	fp, fp, #1
 800febe:	e7ea      	b.n	800fe96 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x22>
 800fec0:	4621      	mov	r1, r4
 800fec2:	4628      	mov	r0, r5
 800fec4:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fec8:	f7ff bf8a 	b.w	800fde0 <PixelPatterns::Increment(unsigned int)>
 800fecc:	20003488 	andcs	r3, r0, r8, lsl #9
 800fed0:	20003590 	mulcs	r0, r0, r5
 800fed4:	aaaaaaab 	bge	6aba988 <__stack_size+0x6ab8988>

0800fed8 <PixelPatterns::ColourWipeUpdate(unsigned int)>:
 800fed8:	b538      	push	{r3, r4, r5, lr}
 800feda:	460c      	mov	r4, r1
 800fedc:	4605      	mov	r5, r0
 800fede:	4b07      	ldr	r3, [pc, #28]	; (800fefc <PixelPatterns::ColourWipeUpdate(unsigned int)+0x24>)
 800fee0:	4620      	mov	r0, r4
 800fee2:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800fee6:	6959      	ldr	r1, [r3, #20]
 800fee8:	689a      	ldr	r2, [r3, #8]
 800feea:	f7ff fe6b 	bl	800fbc4 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800feee:	4621      	mov	r1, r4
 800fef0:	4628      	mov	r0, r5
 800fef2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800fef6:	f7ff bf73 	b.w	800fde0 <PixelPatterns::Increment(unsigned int)>
 800fefa:	bf00      	nop
 800fefc:	20003488 	andcs	r3, r0, r8, lsl #9

0800ff00 <PixelPatterns::ScannerUpdate(unsigned int)>:
 800ff00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ff04:	468a      	mov	sl, r1
 800ff06:	f04f 0900 	mov.w	r9, #0
 800ff0a:	4b27      	ldr	r3, [pc, #156]	; (800ffa8 <PixelPatterns::ScannerUpdate(unsigned int)+0xa8>)
 800ff0c:	b085      	sub	sp, #20
 800ff0e:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800ff12:	e9d3 7604 	ldrd	r7, r6, [r3, #16]
 800ff16:	689d      	ldr	r5, [r3, #8]
 800ff18:	f8df b090 	ldr.w	fp, [pc, #144]	; 800ffac <PixelPatterns::ScannerUpdate(unsigned int)+0xac>
 800ff1c:	00b3      	lsls	r3, r6, #2
 800ff1e:	f8df 8090 	ldr.w	r8, [pc, #144]	; 800ffb0 <PixelPatterns::ScannerUpdate(unsigned int)+0xb0>
 800ff22:	9002      	str	r0, [sp, #8]
 800ff24:	9301      	str	r3, [sp, #4]
 800ff26:	1bbf      	subs	r7, r7, r6
 800ff28:	f8db 2000 	ldr.w	r2, [fp]
 800ff2c:	fa1f f489 	uxth.w	r4, r9
 800ff30:	42a2      	cmp	r2, r4
 800ff32:	d932      	bls.n	800ff9a <PixelPatterns::ScannerUpdate(unsigned int)+0x9a>
 800ff34:	42a6      	cmp	r6, r4
 800ff36:	d10b      	bne.n	800ff50 <PixelPatterns::ScannerUpdate(unsigned int)+0x50>
 800ff38:	462a      	mov	r2, r5
 800ff3a:	4631      	mov	r1, r6
 800ff3c:	4650      	mov	r0, sl
 800ff3e:	f7ff fe41 	bl	800fbc4 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800ff42:	f8d8 2000 	ldr.w	r2, [r8]
 800ff46:	9b01      	ldr	r3, [sp, #4]
 800ff48:	50d5      	str	r5, [r2, r3]
 800ff4a:	f109 0901 	add.w	r9, r9, #1
 800ff4e:	e7eb      	b.n	800ff28 <PixelPatterns::ScannerUpdate(unsigned int)+0x28>
 800ff50:	42a7      	cmp	r7, r4
 800ff52:	d109      	bne.n	800ff68 <PixelPatterns::ScannerUpdate(unsigned int)+0x68>
 800ff54:	462a      	mov	r2, r5
 800ff56:	4639      	mov	r1, r7
 800ff58:	4650      	mov	r0, sl
 800ff5a:	f7ff fe33 	bl	800fbc4 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800ff5e:	f8d8 2000 	ldr.w	r2, [r8]
 800ff62:	f842 5024 	str.w	r5, [r2, r4, lsl #2]
 800ff66:	e7f0      	b.n	800ff4a <PixelPatterns::ScannerUpdate(unsigned int)+0x4a>
 800ff68:	f8d8 2000 	ldr.w	r2, [r8]
 800ff6c:	4650      	mov	r0, sl
 800ff6e:	f852 1024 	ldr.w	r1, [r2, r4, lsl #2]
 800ff72:	f3c1 2246 	ubfx	r2, r1, #9, #7
 800ff76:	f3c1 4c46 	ubfx	ip, r1, #17, #7
 800ff7a:	0212      	lsls	r2, r2, #8
 800ff7c:	ea42 420c 	orr.w	r2, r2, ip, lsl #16
 800ff80:	f3c1 0146 	ubfx	r1, r1, #1, #7
 800ff84:	430a      	orrs	r2, r1
 800ff86:	4621      	mov	r1, r4
 800ff88:	9203      	str	r2, [sp, #12]
 800ff8a:	f7ff fe1b 	bl	800fbc4 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800ff8e:	f8d8 1000 	ldr.w	r1, [r8]
 800ff92:	9a03      	ldr	r2, [sp, #12]
 800ff94:	f841 2024 	str.w	r2, [r1, r4, lsl #2]
 800ff98:	e7d7      	b.n	800ff4a <PixelPatterns::ScannerUpdate(unsigned int)+0x4a>
 800ff9a:	4651      	mov	r1, sl
 800ff9c:	9802      	ldr	r0, [sp, #8]
 800ff9e:	b005      	add	sp, #20
 800ffa0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ffa4:	f7ff bf1c 	b.w	800fde0 <PixelPatterns::Increment(unsigned int)>
 800ffa8:	20003488 	andcs	r3, r0, r8, lsl #9
 800ffac:	20003590 	mulcs	r0, r0, r5
 800ffb0:	2000358c 	andcs	r3, r0, ip, lsl #11

0800ffb4 <PixelPatterns::FadeUpdate(unsigned int)>:
 800ffb4:	4b22      	ldr	r3, [pc, #136]	; (8010040 <PixelPatterns::FadeUpdate(unsigned int)+0x8c>)
 800ffb6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ffba:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800ffbe:	4604      	mov	r4, r0
 800ffc0:	e9d3 0704 	ldrd	r0, r7, [r3, #16]
 800ffc4:	460d      	mov	r5, r1
 800ffc6:	e9d3 2102 	ldrd	r2, r1, [r3, #8]
 800ffca:	f3c1 2307 	ubfx	r3, r1, #8, #8
 800ffce:	437b      	muls	r3, r7
 800ffd0:	1bc6      	subs	r6, r0, r7
 800ffd2:	f3c2 2c07 	ubfx	ip, r2, #8, #8
 800ffd6:	fb06 330c 	mla	r3, r6, ip, r3
 800ffda:	fbb3 f3f0 	udiv	r3, r3, r0
 800ffde:	021b      	lsls	r3, r3, #8
 800ffe0:	fa1f fc83 	uxth.w	ip, r3
 800ffe4:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800ffe8:	437b      	muls	r3, r7
 800ffea:	f3c2 4e07 	ubfx	lr, r2, #16, #8
 800ffee:	fb06 330e 	mla	r3, r6, lr, r3
 800fff2:	fbb3 f3f0 	udiv	r3, r3, r0
 800fff6:	041b      	lsls	r3, r3, #16
 800fff8:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 800fffc:	ea4c 0303 	orr.w	r3, ip, r3
 8010000:	fa5f fc82 	uxtb.w	ip, r2
 8010004:	b2ca      	uxtb	r2, r1
 8010006:	437a      	muls	r2, r7
 8010008:	fb06 220c 	mla	r2, r6, ip, r2
 801000c:	fbb2 f2f0 	udiv	r2, r2, r0
 8010010:	2700      	movs	r7, #0
 8010012:	b2d2      	uxtb	r2, r2
 8010014:	f8df 802c 	ldr.w	r8, [pc, #44]	; 8010044 <PixelPatterns::FadeUpdate(unsigned int)+0x90>
 8010018:	ea43 0602 	orr.w	r6, r3, r2
 801001c:	f8d8 3000 	ldr.w	r3, [r8]
 8010020:	42bb      	cmp	r3, r7
 8010022:	d906      	bls.n	8010032 <PixelPatterns::FadeUpdate(unsigned int)+0x7e>
 8010024:	4639      	mov	r1, r7
 8010026:	4632      	mov	r2, r6
 8010028:	4628      	mov	r0, r5
 801002a:	f7ff fdcb 	bl	800fbc4 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 801002e:	3701      	adds	r7, #1
 8010030:	e7f4      	b.n	801001c <PixelPatterns::FadeUpdate(unsigned int)+0x68>
 8010032:	4629      	mov	r1, r5
 8010034:	4620      	mov	r0, r4
 8010036:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801003a:	f7ff bed1 	b.w	800fde0 <PixelPatterns::Increment(unsigned int)>
 801003e:	bf00      	nop
 8010040:	20003488 	andcs	r3, r0, r8, lsl #9
 8010044:	20003590 	mulcs	r0, r0, r5

08010048 <PixelPatterns::PortUpdate(unsigned int, unsigned int)>:
 8010048:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801004a:	4b12      	ldr	r3, [pc, #72]	; (8010094 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x4c>)
 801004c:	014e      	lsls	r6, r1, #5
 801004e:	599c      	ldr	r4, [r3, r6]
 8010050:	eb03 1541 	add.w	r5, r3, r1, lsl #5
 8010054:	686f      	ldr	r7, [r5, #4]
 8010056:	1b14      	subs	r4, r2, r4
 8010058:	42bc      	cmp	r4, r7
 801005a:	d319      	bcc.n	8010090 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x48>
 801005c:	519a      	str	r2, [r3, r6]
 801005e:	69eb      	ldr	r3, [r5, #28]
 8010060:	3b01      	subs	r3, #1
 8010062:	2b04      	cmp	r3, #4
 8010064:	d814      	bhi.n	8010090 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x48>
 8010066:	e8df f003 	tbb	[pc, r3]
 801006a:	0d0a0703 	stceq	7, cr0, [sl, #-12]
 801006e:	f7ff0010 			; <UNDEFINED> instruction: 0xf7ff0010
 8010072:	fed4 2001 	cdp2	0, 13, cr2, cr4, cr1, {0}
 8010076:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010078:	f7ff fefc 	bl	800fe74 <PixelPatterns::TheaterChaseUpdate(unsigned int)>
 801007c:	e7fa      	b.n	8010074 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 801007e:	f7ff ff2b 	bl	800fed8 <PixelPatterns::ColourWipeUpdate(unsigned int)>
 8010082:	e7f7      	b.n	8010074 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 8010084:	f7ff ff3c 	bl	800ff00 <PixelPatterns::ScannerUpdate(unsigned int)>
 8010088:	e7f4      	b.n	8010074 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 801008a:	f7ff ff93 	bl	800ffb4 <PixelPatterns::FadeUpdate(unsigned int)>
 801008e:	e7f1      	b.n	8010074 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 8010090:	2000      	movs	r0, #0
 8010092:	e7f0      	b.n	8010076 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2e>
 8010094:	20003488 	andcs	r3, r0, r8, lsl #9

08010098 <PixelPatterns::Run()>:
 8010098:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801009c:	4f11      	ldr	r7, [pc, #68]	; (80100e4 <PixelPatterns::Run()+0x4c>)
 801009e:	4605      	mov	r5, r0
 80100a0:	6838      	ldr	r0, [r7, #0]
 80100a2:	f000 fb29 	bl	80106f8 <WS28xxMulti::IsUpdating()>
 80100a6:	4604      	mov	r4, r0
 80100a8:	b9c8      	cbnz	r0, 80100de <PixelPatterns::Run()+0x46>
 80100aa:	4606      	mov	r6, r0
 80100ac:	4b0e      	ldr	r3, [pc, #56]	; (80100e8 <PixelPatterns::Run()+0x50>)
 80100ae:	f8df 903c 	ldr.w	r9, [pc, #60]	; 80100ec <PixelPatterns::Run()+0x54>
 80100b2:	f8d3 8000 	ldr.w	r8, [r3]
 80100b6:	f8d9 3000 	ldr.w	r3, [r9]
 80100ba:	b2f1      	uxtb	r1, r6
 80100bc:	428b      	cmp	r3, r1
 80100be:	f106 0601 	add.w	r6, r6, #1
 80100c2:	d906      	bls.n	80100d2 <PixelPatterns::Run()+0x3a>
 80100c4:	4642      	mov	r2, r8
 80100c6:	4628      	mov	r0, r5
 80100c8:	f7ff ffbe 	bl	8010048 <PixelPatterns::PortUpdate(unsigned int, unsigned int)>
 80100cc:	4304      	orrs	r4, r0
 80100ce:	b2e4      	uxtb	r4, r4
 80100d0:	e7f1      	b.n	80100b6 <PixelPatterns::Run()+0x1e>
 80100d2:	b124      	cbz	r4, 80100de <PixelPatterns::Run()+0x46>
 80100d4:	6838      	ldr	r0, [r7, #0]
 80100d6:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80100da:	f000 ba7f 	b.w	80105dc <WS28xxMulti::Update()>
 80100de:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80100e2:	bf00      	nop
 80100e4:	20003594 	mulcs	r0, r4, r5
 80100e8:	20013e04 	andcs	r3, r1, r4, lsl #28
 80100ec:	20003588 	andcs	r3, r0, r8, lsl #11

080100f0 <PixelType::GetType(pixel::Type)>:
 80100f0:	280d      	cmp	r0, #13
 80100f2:	bfda      	itte	le
 80100f4:	4b02      	ldrle	r3, [pc, #8]	; (8010100 <PixelType::GetType(pixel::Type)+0x10>)
 80100f6:	eb03 00c0 	addle.w	r0, r3, r0, lsl #3
 80100fa:	4802      	ldrgt	r0, [pc, #8]	; (8010104 <PixelType::GetType(pixel::Type)+0x14>)
 80100fc:	4770      	bx	lr
 80100fe:	bf00      	nop
 8010100:	08019aff 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r7, r9, fp, ip, pc}
 8010104:	08019ad5 	stmdaeq	r1, {r0, r2, r4, r6, r7, r9, fp, ip, pc}

08010108 <PixelType::GetType(char const*)>:
 8010108:	b5f0      	push	{r4, r5, r6, r7, lr}
 801010a:	4604      	mov	r4, r0
 801010c:	2000      	movs	r0, #0
 801010e:	490f      	ldr	r1, [pc, #60]	; (801014c <PixelType::GetType(char const*)+0x44>)
 8010110:	1e66      	subs	r6, r4, #1
 8010112:	1e4d      	subs	r5, r1, #1
 8010114:	f816 3f01 	ldrb.w	r3, [r6, #1]!
 8010118:	461f      	mov	r7, r3
 801011a:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 801011e:	2a19      	cmp	r2, #25
 8010120:	f815 2f01 	ldrb.w	r2, [r5, #1]!
 8010124:	bf98      	it	ls
 8010126:	f103 0720 	addls.w	r7, r3, #32
 801012a:	f1a2 0c41 	sub.w	ip, r2, #65	; 0x41
 801012e:	f1bc 0f19 	cmp.w	ip, #25
 8010132:	bf98      	it	ls
 8010134:	3220      	addls	r2, #32
 8010136:	42ba      	cmp	r2, r7
 8010138:	d102      	bne.n	8010140 <PixelType::GetType(char const*)+0x38>
 801013a:	2b00      	cmp	r3, #0
 801013c:	d1ea      	bne.n	8010114 <PixelType::GetType(char const*)+0xc>
 801013e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010140:	3001      	adds	r0, #1
 8010142:	280e      	cmp	r0, #14
 8010144:	f101 0108 	add.w	r1, r1, #8
 8010148:	d1e2      	bne.n	8010110 <PixelType::GetType(char const*)+0x8>
 801014a:	e7f8      	b.n	801013e <PixelType::GetType(char const*)+0x36>
 801014c:	08019aff 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r7, r9, fp, ip, pc}

08010150 <PixelType::GetMap(char const*)>:
 8010150:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010152:	4605      	mov	r5, r0
 8010154:	2000      	movs	r0, #0
 8010156:	4b11      	ldr	r3, [pc, #68]	; (801019c <PixelType::GetMap(char const*)+0x4c>)
 8010158:	1e5c      	subs	r4, r3, #1
 801015a:	1e6e      	subs	r6, r5, #1
 801015c:	f103 0c02 	add.w	ip, r3, #2
 8010160:	f814 2f01 	ldrb.w	r2, [r4, #1]!
 8010164:	4617      	mov	r7, r2
 8010166:	f1a2 0141 	sub.w	r1, r2, #65	; 0x41
 801016a:	2919      	cmp	r1, #25
 801016c:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8010170:	bf98      	it	ls
 8010172:	f102 0720 	addls.w	r7, r2, #32
 8010176:	f1a1 0e41 	sub.w	lr, r1, #65	; 0x41
 801017a:	f1be 0f19 	cmp.w	lr, #25
 801017e:	bf98      	it	ls
 8010180:	3120      	addls	r1, #32
 8010182:	42b9      	cmp	r1, r7
 8010184:	d005      	beq.n	8010192 <PixelType::GetMap(char const*)+0x42>
 8010186:	3001      	adds	r0, #1
 8010188:	2806      	cmp	r0, #6
 801018a:	f103 0304 	add.w	r3, r3, #4
 801018e:	d1e3      	bne.n	8010158 <PixelType::GetMap(char const*)+0x8>
 8010190:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010192:	2a00      	cmp	r2, #0
 8010194:	d0fc      	beq.n	8010190 <PixelType::GetMap(char const*)+0x40>
 8010196:	4564      	cmp	r4, ip
 8010198:	d1e2      	bne.n	8010160 <PixelType::GetMap(char const*)+0x10>
 801019a:	e7f9      	b.n	8010190 <PixelType::GetMap(char const*)+0x40>
 801019c:	08019ae7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, r9, fp, ip, pc}

080101a0 <PixelType::GetMap(pixel::Map)>:
 80101a0:	2805      	cmp	r0, #5
 80101a2:	bfda      	itte	le
 80101a4:	4b02      	ldrle	r3, [pc, #8]	; (80101b0 <PixelType::GetMap(pixel::Map)+0x10>)
 80101a6:	eb03 0080 	addle.w	r0, r3, r0, lsl #2
 80101aa:	4802      	ldrgt	r0, [pc, #8]	; (80101b4 <PixelType::GetMap(pixel::Map)+0x14>)
 80101ac:	4770      	bx	lr
 80101ae:	bf00      	nop
 80101b0:	08019ae7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, r9, fp, ip, pc}
 80101b4:	08019add 	stmdaeq	r1, {r0, r2, r3, r4, r6, r7, r9, fp, ip, pc}

080101b8 <PixelType::ConvertTxH(unsigned char)>:
 80101b8:	28f0      	cmp	r0, #240	; 0xf0
 80101ba:	d010      	beq.n	80101de <PixelType::ConvertTxH(unsigned char)+0x26>
 80101bc:	d807      	bhi.n	80101ce <PixelType::ConvertTxH(unsigned char)+0x16>
 80101be:	28c0      	cmp	r0, #192	; 0xc0
 80101c0:	d00f      	beq.n	80101e2 <PixelType::ConvertTxH(unsigned char)+0x2a>
 80101c2:	28e0      	cmp	r0, #224	; 0xe0
 80101c4:	d00f      	beq.n	80101e6 <PixelType::ConvertTxH(unsigned char)+0x2e>
 80101c6:	2880      	cmp	r0, #128	; 0x80
 80101c8:	d113      	bne.n	80101f2 <PixelType::ConvertTxH(unsigned char)+0x3a>
 80101ca:	480b      	ldr	r0, [pc, #44]	; (80101f8 <PixelType::ConvertTxH(unsigned char)+0x40>)
 80101cc:	4770      	bx	lr
 80101ce:	28fc      	cmp	r0, #252	; 0xfc
 80101d0:	d00b      	beq.n	80101ea <PixelType::ConvertTxH(unsigned char)+0x32>
 80101d2:	28fe      	cmp	r0, #254	; 0xfe
 80101d4:	d00b      	beq.n	80101ee <PixelType::ConvertTxH(unsigned char)+0x36>
 80101d6:	28f8      	cmp	r0, #248	; 0xf8
 80101d8:	d10b      	bne.n	80101f2 <PixelType::ConvertTxH(unsigned char)+0x3a>
 80101da:	4808      	ldr	r0, [pc, #32]	; (80101fc <PixelType::ConvertTxH(unsigned char)+0x44>)
 80101dc:	4770      	bx	lr
 80101de:	4808      	ldr	r0, [pc, #32]	; (8010200 <PixelType::ConvertTxH(unsigned char)+0x48>)
 80101e0:	4770      	bx	lr
 80101e2:	4808      	ldr	r0, [pc, #32]	; (8010204 <PixelType::ConvertTxH(unsigned char)+0x4c>)
 80101e4:	4770      	bx	lr
 80101e6:	4808      	ldr	r0, [pc, #32]	; (8010208 <PixelType::ConvertTxH(unsigned char)+0x50>)
 80101e8:	4770      	bx	lr
 80101ea:	4808      	ldr	r0, [pc, #32]	; (801020c <PixelType::ConvertTxH(unsigned char)+0x54>)
 80101ec:	4770      	bx	lr
 80101ee:	4808      	ldr	r0, [pc, #32]	; (8010210 <PixelType::ConvertTxH(unsigned char)+0x58>)
 80101f0:	4770      	bx	lr
 80101f2:	2000      	movs	r0, #0
 80101f4:	4770      	bx	lr
 80101f6:	bf00      	nop
 80101f8:	3e200000 	cdpcc	0, 2, cr0, cr0, cr0, {0}
 80101fc:	3f480000 	svccc	0x00480000
 8010200:	3f200000 	svccc	0x00200000
 8010204:	3ea00000 	cdpcc	0, 10, cr0, cr0, cr0, {0}
 8010208:	3ef00000 	cdpcc	0, 15, cr0, cr0, cr0, {0}
 801020c:	3f700000 	svccc	0x00700000
 8010210:	3f8c0000 	svccc	0x008c0000

08010214 <PixelType::ConvertTxH(float)>:
 8010214:	b510      	push	{r4, lr}
 8010216:	491d      	ldr	r1, [pc, #116]	; (801028c <PixelType::ConvertTxH(float)+0x78>)
 8010218:	4604      	mov	r4, r0
 801021a:	f7f7 f971 	bl	8007500 <__aeabi_fcmplt>
 801021e:	bb30      	cbnz	r0, 801026e <PixelType::ConvertTxH(float)+0x5a>
 8010220:	4620      	mov	r0, r4
 8010222:	491b      	ldr	r1, [pc, #108]	; (8010290 <PixelType::ConvertTxH(float)+0x7c>)
 8010224:	f7f7 f96c 	bl	8007500 <__aeabi_fcmplt>
 8010228:	bb18      	cbnz	r0, 8010272 <PixelType::ConvertTxH(float)+0x5e>
 801022a:	4620      	mov	r0, r4
 801022c:	4919      	ldr	r1, [pc, #100]	; (8010294 <PixelType::ConvertTxH(float)+0x80>)
 801022e:	f7f7 f967 	bl	8007500 <__aeabi_fcmplt>
 8010232:	bb00      	cbnz	r0, 8010276 <PixelType::ConvertTxH(float)+0x62>
 8010234:	4620      	mov	r0, r4
 8010236:	4918      	ldr	r1, [pc, #96]	; (8010298 <PixelType::ConvertTxH(float)+0x84>)
 8010238:	f7f7 f962 	bl	8007500 <__aeabi_fcmplt>
 801023c:	b9e8      	cbnz	r0, 801027a <PixelType::ConvertTxH(float)+0x66>
 801023e:	4620      	mov	r0, r4
 8010240:	4916      	ldr	r1, [pc, #88]	; (801029c <PixelType::ConvertTxH(float)+0x88>)
 8010242:	f7f7 f95d 	bl	8007500 <__aeabi_fcmplt>
 8010246:	b9d0      	cbnz	r0, 801027e <PixelType::ConvertTxH(float)+0x6a>
 8010248:	4620      	mov	r0, r4
 801024a:	4915      	ldr	r1, [pc, #84]	; (80102a0 <PixelType::ConvertTxH(float)+0x8c>)
 801024c:	f7f7 f958 	bl	8007500 <__aeabi_fcmplt>
 8010250:	b9b8      	cbnz	r0, 8010282 <PixelType::ConvertTxH(float)+0x6e>
 8010252:	4620      	mov	r0, r4
 8010254:	4913      	ldr	r1, [pc, #76]	; (80102a4 <PixelType::ConvertTxH(float)+0x90>)
 8010256:	f7f7 f953 	bl	8007500 <__aeabi_fcmplt>
 801025a:	b9a0      	cbnz	r0, 8010286 <PixelType::ConvertTxH(float)+0x72>
 801025c:	4620      	mov	r0, r4
 801025e:	4912      	ldr	r1, [pc, #72]	; (80102a8 <PixelType::ConvertTxH(float)+0x94>)
 8010260:	f7f7 f94e 	bl	8007500 <__aeabi_fcmplt>
 8010264:	2800      	cmp	r0, #0
 8010266:	bf14      	ite	ne
 8010268:	20fe      	movne	r0, #254	; 0xfe
 801026a:	2000      	moveq	r0, #0
 801026c:	bd10      	pop	{r4, pc}
 801026e:	2000      	movs	r0, #0
 8010270:	e7fc      	b.n	801026c <PixelType::ConvertTxH(float)+0x58>
 8010272:	2080      	movs	r0, #128	; 0x80
 8010274:	e7fa      	b.n	801026c <PixelType::ConvertTxH(float)+0x58>
 8010276:	20c0      	movs	r0, #192	; 0xc0
 8010278:	e7f8      	b.n	801026c <PixelType::ConvertTxH(float)+0x58>
 801027a:	20e0      	movs	r0, #224	; 0xe0
 801027c:	e7f6      	b.n	801026c <PixelType::ConvertTxH(float)+0x58>
 801027e:	20f0      	movs	r0, #240	; 0xf0
 8010280:	e7f4      	b.n	801026c <PixelType::ConvertTxH(float)+0x58>
 8010282:	20f8      	movs	r0, #248	; 0xf8
 8010284:	e7f2      	b.n	801026c <PixelType::ConvertTxH(float)+0x58>
 8010286:	20fc      	movs	r0, #252	; 0xfc
 8010288:	e7f0      	b.n	801026c <PixelType::ConvertTxH(float)+0x58>
 801028a:	bf00      	nop
 801028c:	3da00000 	stccc	0, cr0, [r0]
 8010290:	3e700000 	cdpcc	0, 7, cr0, cr0, cr0, {0}
 8010294:	3ec80000 	cdpcc	0, 12, cr0, cr8, cr0, {0}
 8010298:	3f0c0000 	svccc	0x000c0000
 801029c:	3f340000 	svccc	0x00340000
 80102a0:	3f5c0000 	svccc	0x005c0000
 80102a4:	3f820000 	svccc	0x00820000
 80102a8:	3f960000 	svccc	0x00960000

080102ac <TIMER4_IRQHandler>:
 80102ac:	f3bf 8f5f 	dmb	sy
 80102b0:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80102b4:	f8d3 2c10 	ldr.w	r2, [r3, #3088]	; 0xc10
 80102b8:	0791      	lsls	r1, r2, #30
 80102ba:	d520      	bpl.n	80102fe <TIMER4_IRQHandler+0x52>
 80102bc:	f503 3398 	add.w	r3, r3, #77824	; 0x13000
 80102c0:	f8d3 1400 	ldr.w	r1, [r3, #1024]	; 0x400
 80102c4:	f021 0101 	bic.w	r1, r1, #1
 80102c8:	f8c3 1400 	str.w	r1, [r3, #1024]	; 0x400
 80102cc:	f8d3 140c 	ldr.w	r1, [r3, #1036]	; 0x40c
 80102d0:	f421 7100 	bic.w	r1, r1, #512	; 0x200
 80102d4:	f8c3 140c 	str.w	r1, [r3, #1036]	; 0x40c
 80102d8:	f8d3 140c 	ldr.w	r1, [r3, #1036]	; 0x40c
 80102dc:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 80102e0:	f8c3 140c 	str.w	r1, [r3, #1036]	; 0x40c
 80102e4:	f8d3 140c 	ldr.w	r1, [r3, #1036]	; 0x40c
 80102e8:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
 80102ec:	f8c3 140c 	str.w	r1, [r3, #1036]	; 0x40c
 80102f0:	21c0      	movs	r1, #192	; 0xc0
 80102f2:	f5a3 5300 	sub.w	r3, r3, #8192	; 0x2000
 80102f6:	6159      	str	r1, [r3, #20]
 80102f8:	2100      	movs	r1, #0
 80102fa:	4b05      	ldr	r3, [pc, #20]	; (8010310 <TIMER4_IRQHandler+0x64>)
 80102fc:	7019      	strb	r1, [r3, #0]
 80102fe:	43d2      	mvns	r2, r2
 8010300:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8010304:	f8c3 2c10 	str.w	r2, [r3, #3088]	; 0xc10
 8010308:	f3bf 8f5f 	dmb	sy
 801030c:	4770      	bx	lr
 801030e:	bf00      	nop
 8010310:	2000359c 	mulcs	r0, ip, r5

08010314 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)>:
 8010314:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010318:	23aa      	movs	r3, #170	; 0xaa
 801031a:	f04f 0903 	mov.w	r9, #3
 801031e:	2400      	movs	r4, #0
 8010320:	e9c0 9300 	strd	r9, r3, [r0]
 8010324:	2306      	movs	r3, #6
 8010326:	460e      	mov	r6, r1
 8010328:	4605      	mov	r5, r0
 801032a:	e9c0 3402 	strd	r3, r4, [r0, #8]
 801032e:	4b8f      	ldr	r3, [pc, #572]	; (801056c <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x258>)
 8010330:	b08d      	sub	sp, #52	; 0x34
 8010332:	4669      	mov	r1, sp
 8010334:	6018      	str	r0, [r3, #0]
 8010336:	4630      	mov	r0, r6
 8010338:	f7ff fbd6 	bl	800fae8 <PixelConfiguration::Validate(unsigned int&)>
 801033c:	4630      	mov	r0, r6
 801033e:	f7ff fc3f 	bl	800fbc0 <PixelConfiguration::Dump()>
 8010342:	6833      	ldr	r3, [r6, #0]
 8010344:	68b2      	ldr	r2, [r6, #8]
 8010346:	602b      	str	r3, [r5, #0]
 8010348:	60aa      	str	r2, [r5, #8]
 801034a:	6873      	ldr	r3, [r6, #4]
 801034c:	9a00      	ldr	r2, [sp, #0]
 801034e:	606b      	str	r3, [r5, #4]
 8010350:	4353      	muls	r3, r2
 8010352:	fa03 f309 	lsl.w	r3, r3, r9
 8010356:	60eb      	str	r3, [r5, #12]
 8010358:	7c30      	ldrb	r0, [r6, #16]
 801035a:	f7f7 fdaf 	bl	8007ebc <__popcountsi2>
 801035e:	4680      	mov	r8, r0
 8010360:	7c70      	ldrb	r0, [r6, #17]
 8010362:	f7f7 fdab 	bl	8007ebc <__popcountsi2>
 8010366:	4e82      	ldr	r6, [pc, #520]	; (8010570 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x25c>)
 8010368:	4607      	mov	r7, r0
 801036a:	f240 6004 	movw	r0, #1540	; 0x604
 801036e:	f006 f8a7 	bl	80164c0 <rcu_periph_clock_enable>
 8010372:	464a      	mov	r2, r9
 8010374:	2110      	movs	r1, #16
 8010376:	4630      	mov	r0, r6
 8010378:	23c0      	movs	r3, #192	; 0xc0
 801037a:	f006 f805 	bl	8016388 <gpio_init>
 801037e:	23c0      	movs	r3, #192	; 0xc0
 8010380:	f240 600d 	movw	r0, #1549	; 0x60d
 8010384:	6173      	str	r3, [r6, #20]
 8010386:	f506 5610 	add.w	r6, r6, #9216	; 0x2400
 801038a:	f006 f899 	bl	80164c0 <rcu_periph_clock_enable>
 801038e:	4630      	mov	r0, r6
 8010390:	f006 fa0a 	bl	80167a8 <timer_deinit>
 8010394:	4b77      	ldr	r3, [pc, #476]	; (8010574 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x260>)
 8010396:	f04f 0996 	mov.w	r9, #150	; 0x96
 801039a:	f8c3 4424 	str.w	r4, [r3, #1060]	; 0x424
 801039e:	2395      	movs	r3, #149	; 0x95
 80103a0:	4630      	mov	r0, r6
 80103a2:	a901      	add	r1, sp, #4
 80103a4:	9303      	str	r3, [sp, #12]
 80103a6:	9401      	str	r4, [sp, #4]
 80103a8:	f8ad 4008 	strh.w	r4, [sp, #8]
 80103ac:	f8ad 4010 	strh.w	r4, [sp, #16]
 80103b0:	f006 faa0 	bl	80168f4 <timer_init>
 80103b4:	4621      	mov	r1, r4
 80103b6:	4630      	mov	r0, r6
 80103b8:	f006 fb4e 	bl	8016a58 <timer_master_slave_mode_config>
 80103bc:	4630      	mov	r0, r6
 80103be:	2130      	movs	r1, #48	; 0x30
 80103c0:	f006 fb3a 	bl	8016a38 <timer_master_output_trigger_source_select>
 80103c4:	4621      	mov	r1, r4
 80103c6:	4630      	mov	r0, r6
 80103c8:	2210      	movs	r2, #16
 80103ca:	f006 faf9 	bl	80169c0 <timer_channel_output_mode_config>
 80103ce:	4630      	mov	r0, r6
 80103d0:	2210      	movs	r2, #16
 80103d2:	2101      	movs	r1, #1
 80103d4:	f006 faf4 	bl	80169c0 <timer_channel_output_mode_config>
 80103d8:	4630      	mov	r0, r6
 80103da:	2210      	movs	r2, #16
 80103dc:	2102      	movs	r1, #2
 80103de:	f006 faef 	bl	80169c0 <timer_channel_output_mode_config>
 80103e2:	4621      	mov	r1, r4
 80103e4:	4630      	mov	r0, r6
 80103e6:	2201      	movs	r2, #1
 80103e8:	f006 fb10 	bl	8016a0c <timer_channel_output_pulse_value_config>
 80103ec:	fb09 f208 	mul.w	r2, r9, r8
 80103f0:	4630      	mov	r0, r6
 80103f2:	2101      	movs	r1, #1
 80103f4:	f3c2 02cf 	ubfx	r2, r2, #3, #16
 80103f8:	f006 fb08 	bl	8016a0c <timer_channel_output_pulse_value_config>
 80103fc:	fb09 f207 	mul.w	r2, r9, r7
 8010400:	2102      	movs	r1, #2
 8010402:	f3c2 02cf 	ubfx	r2, r2, #3, #16
 8010406:	4630      	mov	r0, r6
 8010408:	f006 fb00 	bl	8016a0c <timer_channel_output_pulse_value_config>
 801040c:	f5a6 3694 	sub.w	r6, r6, #75776	; 0x12800
 8010410:	f240 7003 	movw	r0, #1795	; 0x703
 8010414:	f006 f854 	bl	80164c0 <rcu_periph_clock_enable>
 8010418:	4630      	mov	r0, r6
 801041a:	f006 f9c5 	bl	80167a8 <timer_deinit>
 801041e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8010422:	f8c3 4c24 	str.w	r4, [r3, #3108]	; 0xc24
 8010426:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 801042a:	4630      	mov	r0, r6
 801042c:	a901      	add	r1, sp, #4
 801042e:	9303      	str	r3, [sp, #12]
 8010430:	9401      	str	r4, [sp, #4]
 8010432:	f8ad 4008 	strh.w	r4, [sp, #8]
 8010436:	f8ad 4010 	strh.w	r4, [sp, #16]
 801043a:	f006 fa5b 	bl	80168f4 <timer_init>
 801043e:	4621      	mov	r1, r4
 8010440:	4630      	mov	r0, r6
 8010442:	f006 fb09 	bl	8016a58 <timer_master_slave_mode_config>
 8010446:	4630      	mov	r0, r6
 8010448:	2107      	movs	r1, #7
 801044a:	f006 fafd 	bl	8016a48 <timer_slave_mode_select>
 801044e:	4630      	mov	r0, r6
 8010450:	2130      	movs	r1, #48	; 0x30
 8010452:	f006 fae9 	bl	8016a28 <timer_input_trigger_source_select>
 8010456:	4621      	mov	r1, r4
 8010458:	4630      	mov	r0, r6
 801045a:	2210      	movs	r2, #16
 801045c:	f006 fab0 	bl	80169c0 <timer_channel_output_mode_config>
 8010460:	89aa      	ldrh	r2, [r5, #12]
 8010462:	4621      	mov	r1, r4
 8010464:	4630      	mov	r0, r6
 8010466:	f006 fad1 	bl	8016a0c <timer_channel_output_pulse_value_config>
 801046a:	2102      	movs	r1, #2
 801046c:	4630      	mov	r0, r6
 801046e:	f006 fb00 	bl	8016a72 <timer_interrupt_enable>
 8010472:	f44f 2280 	mov.w	r2, #262144	; 0x40000
 8010476:	f44f 7800 	mov.w	r8, #512	; 0x200
 801047a:	2701      	movs	r7, #1
 801047c:	f44f 6b00 	mov.w	fp, #2048	; 0x800
 8010480:	f44f 5900 	mov.w	r9, #8192	; 0x2000
 8010484:	4b3c      	ldr	r3, [pc, #240]	; (8010578 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x264>)
 8010486:	f506 36fc 	add.w	r6, r6, #129024	; 0x1f800
 801048a:	f883 4332 	strb.w	r4, [r3, #818]	; 0x332
 801048e:	f240 5001 	movw	r0, #1281	; 0x501
 8010492:	605a      	str	r2, [r3, #4]
 8010494:	f006 f814 	bl	80164c0 <rcu_periph_clock_enable>
 8010498:	2102      	movs	r1, #2
 801049a:	4630      	mov	r0, r6
 801049c:	f005 fe7c 	bl	8016198 <dma_deinit>
 80104a0:	a805      	add	r0, sp, #20
 80104a2:	f005 fe97 	bl	80161d4 <dma_struct_para_init>
 80104a6:	4a35      	ldr	r2, [pc, #212]	; (801057c <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x268>)
 80104a8:	4b35      	ldr	r3, [pc, #212]	; (8010580 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x26c>)
 80104aa:	4630      	mov	r0, r6
 80104ac:	e9cd 2805 	strd	r2, r8, [sp, #20]
 80104b0:	2102      	movs	r1, #2
 80104b2:	aa05      	add	r2, sp, #20
 80104b4:	9307      	str	r3, [sp, #28]
 80104b6:	f8cd b020 	str.w	fp, [sp, #32]
 80104ba:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 80104be:	f8ad 402c 	strh.w	r4, [sp, #44]	; 0x2c
 80104c2:	f88d 702e 	strb.w	r7, [sp, #46]	; 0x2e
 80104c6:	f005 fe8f 	bl	80161e8 <dma_init>
 80104ca:	4630      	mov	r0, r6
 80104cc:	2102      	movs	r1, #2
 80104ce:	f005 febc 	bl	801624a <dma_circulation_disable>
 80104d2:	4630      	mov	r0, r6
 80104d4:	2102      	movs	r1, #2
 80104d6:	f005 fec0 	bl	801625a <dma_memory_to_memory_disable>
 80104da:	2104      	movs	r1, #4
 80104dc:	4630      	mov	r0, r6
 80104de:	f005 fe5b 	bl	8016198 <dma_deinit>
 80104e2:	a805      	add	r0, sp, #20
 80104e4:	f005 fe76 	bl	80161d4 <dma_struct_para_init>
 80104e8:	4a26      	ldr	r2, [pc, #152]	; (8010584 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x270>)
 80104ea:	f8df a09c 	ldr.w	sl, [pc, #156]	; 8010588 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x274>
 80104ee:	9207      	str	r2, [sp, #28]
 80104f0:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80104f4:	9208      	str	r2, [sp, #32]
 80104f6:	f44f 7280 	mov.w	r2, #256	; 0x100
 80104fa:	4630      	mov	r0, r6
 80104fc:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8010500:	2104      	movs	r1, #4
 8010502:	aa05      	add	r2, sp, #20
 8010504:	f8cd a014 	str.w	sl, [sp, #20]
 8010508:	f88d 702e 	strb.w	r7, [sp, #46]	; 0x2e
 801050c:	f8cd 8018 	str.w	r8, [sp, #24]
 8010510:	f005 fe6a 	bl	80161e8 <dma_init>
 8010514:	4630      	mov	r0, r6
 8010516:	2104      	movs	r1, #4
 8010518:	f005 fe97 	bl	801624a <dma_circulation_disable>
 801051c:	4630      	mov	r0, r6
 801051e:	2104      	movs	r1, #4
 8010520:	f005 fe9b 	bl	801625a <dma_memory_to_memory_disable>
 8010524:	4621      	mov	r1, r4
 8010526:	4630      	mov	r0, r6
 8010528:	f005 fe36 	bl	8016198 <dma_deinit>
 801052c:	a805      	add	r0, sp, #20
 801052e:	f005 fe51 	bl	80161d4 <dma_struct_para_init>
 8010532:	4b13      	ldr	r3, [pc, #76]	; (8010580 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x26c>)
 8010534:	aa05      	add	r2, sp, #20
 8010536:	4621      	mov	r1, r4
 8010538:	4630      	mov	r0, r6
 801053a:	e9cd 3b07 	strd	r3, fp, [sp, #28]
 801053e:	e9cd a805 	strd	sl, r8, [sp, #20]
 8010542:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8010546:	f8ad 402c 	strh.w	r4, [sp, #44]	; 0x2c
 801054a:	f88d 702e 	strb.w	r7, [sp, #46]	; 0x2e
 801054e:	f005 fe4b 	bl	80161e8 <dma_init>
 8010552:	4621      	mov	r1, r4
 8010554:	4630      	mov	r0, r6
 8010556:	f005 fe78 	bl	801624a <dma_circulation_disable>
 801055a:	4630      	mov	r0, r6
 801055c:	4621      	mov	r1, r4
 801055e:	f005 fe7c 	bl	801625a <dma_memory_to_memory_disable>
 8010562:	4628      	mov	r0, r5
 8010564:	b00d      	add	sp, #52	; 0x34
 8010566:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801056a:	bf00      	nop
 801056c:	2000ada0 	andcs	sl, r0, r0, lsr #27
 8010570:	40011000 	andmi	r1, r1, r0
 8010574:	40013000 	andmi	r3, r1, r0
 8010578:	e000e100 	and	lr, r0, r0, lsl #2
 801057c:	40011010 	andmi	r1, r1, r0, lsl r0
 8010580:	08019ba0 	stmdaeq	r1, {r5, r7, r8, r9, fp, ip, pc}
 8010584:	200035a0 	andcs	r3, r0, r0, lsr #11
 8010588:	40011014 	andmi	r1, r1, r4, lsl r0

0801058c <WS28xxMulti::~WS28xxMulti()>:
 801058c:	2200      	movs	r2, #0
 801058e:	4b01      	ldr	r3, [pc, #4]	; (8010594 <WS28xxMulti::~WS28xxMulti()+0x8>)
 8010590:	601a      	str	r2, [r3, #0]
 8010592:	4770      	bx	lr
 8010594:	2000ada0 	andcs	sl, r0, r0, lsr #27

08010598 <WS28xxMulti::Print()>:
 8010598:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801059a:	4604      	mov	r4, r0
 801059c:	480c      	ldr	r0, [pc, #48]	; (80105d0 <WS28xxMulti::Print()+0x38>)
 801059e:	f7f8 fcff 	bl	8008fa0 <printf>
 80105a2:	6820      	ldr	r0, [r4, #0]
 80105a4:	f7ff fda4 	bl	80100f0 <PixelType::GetType(pixel::Type)>
 80105a8:	4605      	mov	r5, r0
 80105aa:	68a0      	ldr	r0, [r4, #8]
 80105ac:	6826      	ldr	r6, [r4, #0]
 80105ae:	f7ff fdf7 	bl	80101a0 <PixelType::GetMap(pixel::Map)>
 80105b2:	68a2      	ldr	r2, [r4, #8]
 80105b4:	4603      	mov	r3, r0
 80105b6:	4629      	mov	r1, r5
 80105b8:	9200      	str	r2, [sp, #0]
 80105ba:	4806      	ldr	r0, [pc, #24]	; (80105d4 <WS28xxMulti::Print()+0x3c>)
 80105bc:	4632      	mov	r2, r6
 80105be:	f7f8 fcef 	bl	8008fa0 <printf>
 80105c2:	6861      	ldr	r1, [r4, #4]
 80105c4:	4804      	ldr	r0, [pc, #16]	; (80105d8 <WS28xxMulti::Print()+0x40>)
 80105c6:	b002      	add	sp, #8
 80105c8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80105cc:	f7f8 bce8 	b.w	8008fa0 <printf>
 80105d0:	08019b6f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r8, r9, fp, ip, pc}
 80105d4:	08019b76 	stmdaeq	r1, {r1, r2, r4, r5, r6, r8, r9, fp, ip, pc}
 80105d8:	08019b92 	stmdaeq	r1, {r1, r4, r7, r8, r9, fp, ip, pc}

080105dc <WS28xxMulti::Update()>:
 80105dc:	2201      	movs	r2, #1
 80105de:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80105e0:	4e30      	ldr	r6, [pc, #192]	; (80106a4 <WS28xxMulti::Update()+0xc8>)
 80105e2:	4b31      	ldr	r3, [pc, #196]	; (80106a8 <WS28xxMulti::Update()+0xcc>)
 80105e4:	4605      	mov	r5, r0
 80105e6:	4630      	mov	r0, r6
 80105e8:	701a      	strb	r2, [r3, #0]
 80105ea:	2700      	movs	r7, #0
 80105ec:	f006 f9df 	bl	80169ae <timer_disable>
 80105f0:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80105f4:	4c2d      	ldr	r4, [pc, #180]	; (80106ac <WS28xxMulti::Update()+0xd0>)
 80105f6:	f8c3 7c24 	str.w	r7, [r3, #3108]	; 0xc24
 80105fa:	4620      	mov	r0, r4
 80105fc:	f006 f9d7 	bl	80169ae <timer_disable>
 8010600:	4b2b      	ldr	r3, [pc, #172]	; (80106b0 <WS28xxMulti::Update()+0xd4>)
 8010602:	492c      	ldr	r1, [pc, #176]	; (80106b4 <WS28xxMulti::Update()+0xd8>)
 8010604:	f8c3 7424 	str.w	r7, [r3, #1060]	; 0x424
 8010608:	f503 4350 	add.w	r3, r3, #53248	; 0xd000
 801060c:	f8d3 2430 	ldr.w	r2, [r3, #1072]	; 0x430
 8010610:	4620      	mov	r0, r4
 8010612:	f022 0201 	bic.w	r2, r2, #1
 8010616:	f8c3 2430 	str.w	r2, [r3, #1072]	; 0x430
 801061a:	f8c3 143c 	str.w	r1, [r3, #1084]	; 0x43c
 801061e:	89aa      	ldrh	r2, [r5, #12]
 8010620:	f8c3 2434 	str.w	r2, [r3, #1076]	; 0x434
 8010624:	f8d3 2430 	ldr.w	r2, [r3, #1072]	; 0x430
 8010628:	f042 0201 	orr.w	r2, r2, #1
 801062c:	f8c3 2430 	str.w	r2, [r3, #1072]	; 0x430
 8010630:	f8d3 2458 	ldr.w	r2, [r3, #1112]	; 0x458
 8010634:	f022 0201 	bic.w	r2, r2, #1
 8010638:	f8c3 2458 	str.w	r2, [r3, #1112]	; 0x458
 801063c:	4a1e      	ldr	r2, [pc, #120]	; (80106b8 <WS28xxMulti::Update()+0xdc>)
 801063e:	f8c3 2464 	str.w	r2, [r3, #1124]	; 0x464
 8010642:	89aa      	ldrh	r2, [r5, #12]
 8010644:	f8c3 245c 	str.w	r2, [r3, #1116]	; 0x45c
 8010648:	f8d3 2458 	ldr.w	r2, [r3, #1112]	; 0x458
 801064c:	f042 0201 	orr.w	r2, r2, #1
 8010650:	f8c3 2458 	str.w	r2, [r3, #1112]	; 0x458
 8010654:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 8010658:	f022 0201 	bic.w	r2, r2, #1
 801065c:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408
 8010660:	f8c3 1414 	str.w	r1, [r3, #1044]	; 0x414
 8010664:	89aa      	ldrh	r2, [r5, #12]
 8010666:	f44f 7100 	mov.w	r1, #512	; 0x200
 801066a:	f8c3 240c 	str.w	r2, [r3, #1036]	; 0x40c
 801066e:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 8010672:	f042 0201 	orr.w	r2, r2, #1
 8010676:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408
 801067a:	f006 f99d 	bl	80169b8 <timer_dma_enable>
 801067e:	4620      	mov	r0, r4
 8010680:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8010684:	f006 f998 	bl	80169b8 <timer_dma_enable>
 8010688:	4620      	mov	r0, r4
 801068a:	f44f 6100 	mov.w	r1, #2048	; 0x800
 801068e:	f006 f993 	bl	80169b8 <timer_dma_enable>
 8010692:	4630      	mov	r0, r6
 8010694:	f006 f986 	bl	80169a4 <timer_enable>
 8010698:	4620      	mov	r0, r4
 801069a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 801069e:	f006 b981 	b.w	80169a4 <timer_enable>
 80106a2:	bf00      	nop
 80106a4:	40000c00 	andmi	r0, r0, r0, lsl #24
 80106a8:	2000359c 	mulcs	r0, ip, r5
 80106ac:	40013400 	andmi	r3, r1, r0, lsl #8
 80106b0:	40013000 	andmi	r3, r1, r0
 80106b4:	08019ba0 	stmdaeq	r1, {r5, r7, r8, r9, fp, ip, pc}
 80106b8:	200035a0 	andcs	r3, r0, r0, lsr #11

080106bc <WS28xxMulti::Blackout()>:
 80106bc:	b510      	push	{r4, lr}
 80106be:	4c0c      	ldr	r4, [pc, #48]	; (80106f0 <WS28xxMulti::Blackout()+0x34>)
 80106c0:	f3bf 8f5f 	dmb	sy
 80106c4:	7822      	ldrb	r2, [r4, #0]
 80106c6:	f002 03ff 	and.w	r3, r2, #255	; 0xff
 80106ca:	2a00      	cmp	r2, #0
 80106cc:	d1f8      	bne.n	80106c0 <WS28xxMulti::Blackout()+0x4>
 80106ce:	21c0      	movs	r1, #192	; 0xc0
 80106d0:	4a08      	ldr	r2, [pc, #32]	; (80106f4 <WS28xxMulti::Blackout()+0x38>)
 80106d2:	3301      	adds	r3, #1
 80106d4:	f5b3 5f70 	cmp.w	r3, #15360	; 0x3c00
 80106d8:	f822 1b02 	strh.w	r1, [r2], #2
 80106dc:	d1f9      	bne.n	80106d2 <WS28xxMulti::Blackout()+0x16>
 80106de:	f7ff ff7d 	bl	80105dc <WS28xxMulti::Update()>
 80106e2:	f3bf 8f5f 	dmb	sy
 80106e6:	7823      	ldrb	r3, [r4, #0]
 80106e8:	2b00      	cmp	r3, #0
 80106ea:	d1fa      	bne.n	80106e2 <WS28xxMulti::Blackout()+0x26>
 80106ec:	bd10      	pop	{r4, pc}
 80106ee:	bf00      	nop
 80106f0:	2000359c 	mulcs	r0, ip, r5
 80106f4:	200035a0 	andcs	r3, r0, r0, lsr #11

080106f8 <WS28xxMulti::IsUpdating()>:
 80106f8:	f3bf 8f5f 	dmb	sy
 80106fc:	4b01      	ldr	r3, [pc, #4]	; (8010704 <WS28xxMulti::IsUpdating()+0xc>)
 80106fe:	7818      	ldrb	r0, [r3, #0]
 8010700:	4770      	bx	lr
 8010702:	bf00      	nop
 8010704:	2000359c 	mulcs	r0, ip, r5

08010708 <WS28xxMulti::SetColour(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>:
 8010708:	b5f0      	push	{r4, r5, r6, r7, lr}
 801070a:	f04f 0c80 	mov.w	ip, #128	; 0x80
 801070e:	2400      	movs	r4, #0
 8010710:	2501      	movs	r5, #1
 8010712:	4f1a      	ldr	r7, [pc, #104]	; (801077c <WS28xxMulti::SetColour(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x74>)
 8010714:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8010718:	4819      	ldr	r0, [pc, #100]	; (8010780 <WS28xxMulti::SetColour(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x78>)
 801071a:	eb07 1702 	add.w	r7, r7, r2, lsl #4
 801071e:	3106      	adds	r1, #6
 8010720:	b2c9      	uxtb	r1, r1
 8010722:	4438      	add	r0, r7
 8010724:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
 8010728:	f101 6108 	add.w	r1, r1, #142606336	; 0x8800000
 801072c:	f501 71c0 	add.w	r1, r1, #384	; 0x180
 8010730:	eb01 01c7 	add.w	r1, r1, r7, lsl #3
 8010734:	f89d e014 	ldrb.w	lr, [sp, #20]
 8010738:	f89d 6018 	ldrb.w	r6, [sp, #24]
 801073c:	0092      	lsls	r2, r2, #2
 801073e:	0089      	lsls	r1, r1, #2
 8010740:	ea13 0f0c 	tst.w	r3, ip
 8010744:	f5a2 6080 	sub.w	r0, r2, #1024	; 0x400
 8010748:	bf16      	itet	ne
 801074a:	f5a2 6080 	subne.w	r0, r2, #1024	; 0x400
 801074e:	6005      	streq	r5, [r0, #0]
 8010750:	6004      	strne	r4, [r0, #0]
 8010752:	ea1e 0f0c 	tst.w	lr, ip
 8010756:	f5a2 7000 	sub.w	r0, r2, #512	; 0x200
 801075a:	bf16      	itet	ne
 801075c:	f5a2 7000 	subne.w	r0, r2, #512	; 0x200
 8010760:	6005      	streq	r5, [r0, #0]
 8010762:	6004      	strne	r4, [r0, #0]
 8010764:	ea16 0f0c 	tst.w	r6, ip
 8010768:	bf0c      	ite	eq
 801076a:	6015      	streq	r5, [r2, #0]
 801076c:	6014      	strne	r4, [r2, #0]
 801076e:	3240      	adds	r2, #64	; 0x40
 8010770:	4291      	cmp	r1, r2
 8010772:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 8010776:	d1e3      	bne.n	8010740 <WS28xxMulti::SetColour(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x38>
 8010778:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801077a:	bf00      	nop
 801077c:	200035a0 	andcs	r3, r0, r0, lsr #11
 8010780:	e1100020 	tst	r0, r0, lsr #32

08010784 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>:
 8010784:	b470      	push	{r4, r5, r6}
 8010786:	461c      	mov	r4, r3
 8010788:	6883      	ldr	r3, [r0, #8]
 801078a:	f89d 500c 	ldrb.w	r5, [sp, #12]
 801078e:	f89d 6010 	ldrb.w	r6, [sp, #16]
 8010792:	2b05      	cmp	r3, #5
 8010794:	d80a      	bhi.n	80107ac <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x28>
 8010796:	e8df f003 	tbb	[pc, r3]
 801079a:	1b18120f 	blne	8614fde <__exidx_end+0x5fa7da>
 801079e:	46330903 	ldrtmi	r0, [r3], -r3, lsl #18
 80107a2:	9504      	str	r5, [sp, #16]
 80107a4:	9403      	str	r4, [sp, #12]
 80107a6:	bc70      	pop	{r4, r5, r6}
 80107a8:	f7ff bfae 	b.w	8010708 <WS28xxMulti::SetColour(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 80107ac:	4633      	mov	r3, r6
 80107ae:	9404      	str	r4, [sp, #16]
 80107b0:	9503      	str	r5, [sp, #12]
 80107b2:	bc70      	pop	{r4, r5, r6}
 80107b4:	f7ff bfa8 	b.w	8010708 <WS28xxMulti::SetColour(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 80107b8:	4623      	mov	r3, r4
 80107ba:	9604      	str	r6, [sp, #16]
 80107bc:	e7f8      	b.n	80107b0 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x2c>
 80107be:	4623      	mov	r3, r4
 80107c0:	9504      	str	r5, [sp, #16]
 80107c2:	9603      	str	r6, [sp, #12]
 80107c4:	bc70      	pop	{r4, r5, r6}
 80107c6:	f7ff bf9f 	b.w	8010708 <WS28xxMulti::SetColour(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 80107ca:	462b      	mov	r3, r5
 80107cc:	9604      	str	r6, [sp, #16]
 80107ce:	e7e9      	b.n	80107a4 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x20>
 80107d0:	462b      	mov	r3, r5
 80107d2:	9404      	str	r4, [sp, #16]
 80107d4:	e7f5      	b.n	80107c2 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x3e>
 80107d6:	bf00      	nop

080107d8 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>:
 80107d8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80107da:	2080      	movs	r0, #128	; 0x80
 80107dc:	2400      	movs	r4, #0
 80107de:	2501      	movs	r5, #1
 80107e0:	4e1a      	ldr	r6, [pc, #104]	; (801084c <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)+0x74>)
 80107e2:	3106      	adds	r1, #6
 80107e4:	eb06 1682 	add.w	r6, r6, r2, lsl #6
 80107e8:	4a19      	ldr	r2, [pc, #100]	; (8010850 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)+0x78>)
 80107ea:	b2c9      	uxtb	r1, r1
 80107ec:	4432      	add	r2, r6
 80107ee:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
 80107f2:	f101 6108 	add.w	r1, r1, #142606336	; 0x8800000
 80107f6:	f501 7100 	add.w	r1, r1, #512	; 0x200
 80107fa:	eb01 01c6 	add.w	r1, r1, r6, lsl #3
 80107fe:	f89d c014 	ldrb.w	ip, [sp, #20]
 8010802:	f89d e018 	ldrb.w	lr, [sp, #24]
 8010806:	f89d 601c 	ldrb.w	r6, [sp, #28]
 801080a:	0092      	lsls	r2, r2, #2
 801080c:	0089      	lsls	r1, r1, #2
 801080e:	f5a2 67c0 	sub.w	r7, r2, #1536	; 0x600
 8010812:	ea1c 0f00 	tst.w	ip, r0
 8010816:	bf0c      	ite	eq
 8010818:	603d      	streq	r5, [r7, #0]
 801081a:	603c      	strne	r4, [r7, #0]
 801081c:	f5a2 6780 	sub.w	r7, r2, #1024	; 0x400
 8010820:	4203      	tst	r3, r0
 8010822:	bf0c      	ite	eq
 8010824:	603d      	streq	r5, [r7, #0]
 8010826:	603c      	strne	r4, [r7, #0]
 8010828:	ea1e 0f00 	tst.w	lr, r0
 801082c:	f5a2 7700 	sub.w	r7, r2, #512	; 0x200
 8010830:	bf0c      	ite	eq
 8010832:	603d      	streq	r5, [r7, #0]
 8010834:	603c      	strne	r4, [r7, #0]
 8010836:	4206      	tst	r6, r0
 8010838:	bf0c      	ite	eq
 801083a:	6015      	streq	r5, [r2, #0]
 801083c:	6014      	strne	r4, [r2, #0]
 801083e:	3240      	adds	r2, #64	; 0x40
 8010840:	4291      	cmp	r1, r2
 8010842:	ea4f 0050 	mov.w	r0, r0, lsr #1
 8010846:	d1e2      	bne.n	801080e <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)+0x36>
 8010848:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801084a:	bf00      	nop
 801084c:	200035a0 	andcs	r3, r0, r0, lsr #11
 8010850:	e1100030 	tst	r0, r0, lsr r0

08010854 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>:
 8010854:	2300      	movs	r3, #0
 8010856:	2020      	movs	r0, #32
 8010858:	b510      	push	{r4, lr}
 801085a:	4a04      	ldr	r2, [pc, #16]	; (801086c <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x18>)
 801085c:	428b      	cmp	r3, r1
 801085e:	d004      	beq.n	801086a <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x16>
 8010860:	f852 4b04 	ldr.w	r4, [r2], #4
 8010864:	3301      	adds	r3, #1
 8010866:	4420      	add	r0, r4
 8010868:	e7f8      	b.n	801085c <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x8>
 801086a:	bd10      	pop	{r4, pc}
 801086c:	08019ba4 	stmdaeq	r1, {r2, r5, r7, r8, r9, fp, ip, pc}

08010870 <SpiFlashStore::Init()>:
 8010870:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010874:	f8df 8120 	ldr.w	r8, [pc, #288]	; 8010998 <SpiFlashStore::Init()+0x128>
 8010878:	4607      	mov	r7, r0
 801087a:	b085      	sub	sp, #20
 801087c:	f8d8 0000 	ldr.w	r0, [r8]
 8010880:	f000 fd02 	bl	8011288 <FlashRom::GetSectorSize() const>
 8010884:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
 8010888:	4605      	mov	r5, r0
 801088a:	f040 8083 	bne.w	8010994 <SpiFlashStore::Init()+0x124>
 801088e:	f8d8 0000 	ldr.w	r0, [r8]
 8010892:	f000 fcf1 	bl	8011278 <FlashRom::GetSize() const>
 8010896:	4b41      	ldr	r3, [pc, #260]	; (801099c <SpiFlashStore::Init()+0x12c>)
 8010898:	f5a0 5180 	sub.w	r1, r0, #4096	; 0x1000
 801089c:	f3c1 060b 	ubfx	r6, r1, #0, #12
 80108a0:	6019      	str	r1, [r3, #0]
 80108a2:	2e00      	cmp	r6, #0
 80108a4:	d176      	bne.n	8010994 <SpiFlashStore::Init()+0x124>
 80108a6:	4c3e      	ldr	r4, [pc, #248]	; (80109a0 <SpiFlashStore::Init()+0x130>)
 80108a8:	ab03      	add	r3, sp, #12
 80108aa:	9300      	str	r3, [sp, #0]
 80108ac:	462a      	mov	r2, r5
 80108ae:	4623      	mov	r3, r4
 80108b0:	f8d8 0000 	ldr.w	r0, [r8]
 80108b4:	f000 fceb 	bl	801128e <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)>
 80108b8:	7823      	ldrb	r3, [r4, #0]
 80108ba:	2b41      	cmp	r3, #65	; 0x41
 80108bc:	bf1c      	itt	ne
 80108be:	2341      	movne	r3, #65	; 0x41
 80108c0:	7023      	strbne	r3, [r4, #0]
 80108c2:	7863      	ldrb	r3, [r4, #1]
 80108c4:	bf14      	ite	ne
 80108c6:	4635      	movne	r5, r6
 80108c8:	2501      	moveq	r5, #1
 80108ca:	2b76      	cmp	r3, #118	; 0x76
 80108cc:	bf1c      	itt	ne
 80108ce:	2376      	movne	r3, #118	; 0x76
 80108d0:	7063      	strbne	r3, [r4, #1]
 80108d2:	78a3      	ldrb	r3, [r4, #2]
 80108d4:	bf18      	it	ne
 80108d6:	2500      	movne	r5, #0
 80108d8:	2b56      	cmp	r3, #86	; 0x56
 80108da:	bf1c      	itt	ne
 80108dc:	2356      	movne	r3, #86	; 0x56
 80108de:	70a3      	strbne	r3, [r4, #2]
 80108e0:	78e3      	ldrb	r3, [r4, #3]
 80108e2:	bf18      	it	ne
 80108e4:	2500      	movne	r5, #0
 80108e6:	2b10      	cmp	r3, #16
 80108e8:	d01c      	beq.n	8010924 <SpiFlashStore::Init()+0xb4>
 80108ea:	2310      	movs	r3, #16
 80108ec:	70e3      	strb	r3, [r4, #3]
 80108ee:	2201      	movs	r2, #1
 80108f0:	2500      	movs	r5, #0
 80108f2:	f04f 09ff 	mov.w	r9, #255	; 0xff
 80108f6:	4b2b      	ldr	r3, [pc, #172]	; (80109a4 <SpiFlashStore::Init()+0x134>)
 80108f8:	f8df 80ac 	ldr.w	r8, [pc, #172]	; 80109a8 <SpiFlashStore::Init()+0x138>
 80108fc:	701a      	strb	r2, [r3, #0]
 80108fe:	4631      	mov	r1, r6
 8010900:	4638      	mov	r0, r7
 8010902:	f7ff ffa7 	bl	8010854 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 8010906:	1823      	adds	r3, r4, r0
 8010908:	5425      	strb	r5, [r4, r0]
 801090a:	705d      	strb	r5, [r3, #1]
 801090c:	709d      	strb	r5, [r3, #2]
 801090e:	70dd      	strb	r5, [r3, #3]
 8010910:	f858 3b04 	ldr.w	r3, [r8], #4
 8010914:	1d02      	adds	r2, r0, #4
 8010916:	4403      	add	r3, r0
 8010918:	4293      	cmp	r3, r2
 801091a:	d931      	bls.n	8010980 <SpiFlashStore::Init()+0x110>
 801091c:	f804 9002 	strb.w	r9, [r4, r2]
 8010920:	3201      	adds	r2, #1
 8010922:	e7f9      	b.n	8010918 <SpiFlashStore::Init()+0xa8>
 8010924:	2d00      	cmp	r5, #0
 8010926:	d0e2      	beq.n	80108ee <SpiFlashStore::Init()+0x7e>
 8010928:	f04f 0900 	mov.w	r9, #0
 801092c:	46c8      	mov	r8, r9
 801092e:	f8df a07c 	ldr.w	sl, [pc, #124]	; 80109ac <SpiFlashStore::Init()+0x13c>
 8010932:	f8da b000 	ldr.w	fp, [sl]
 8010936:	4631      	mov	r1, r6
 8010938:	4638      	mov	r0, r7
 801093a:	f7ff ff8b 	bl	8010854 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 801093e:	5c23      	ldrb	r3, [r4, r0]
 8010940:	2bff      	cmp	r3, #255	; 0xff
 8010942:	d114      	bne.n	801096e <SpiFlashStore::Init()+0xfe>
 8010944:	1823      	adds	r3, r4, r0
 8010946:	785a      	ldrb	r2, [r3, #1]
 8010948:	2aff      	cmp	r2, #255	; 0xff
 801094a:	d110      	bne.n	801096e <SpiFlashStore::Init()+0xfe>
 801094c:	789a      	ldrb	r2, [r3, #2]
 801094e:	2aff      	cmp	r2, #255	; 0xff
 8010950:	d10d      	bne.n	801096e <SpiFlashStore::Init()+0xfe>
 8010952:	78da      	ldrb	r2, [r3, #3]
 8010954:	2aff      	cmp	r2, #255	; 0xff
 8010956:	d10a      	bne.n	801096e <SpiFlashStore::Init()+0xfe>
 8010958:	46a9      	mov	r9, r5
 801095a:	f04f 0b01 	mov.w	fp, #1
 801095e:	f804 8000 	strb.w	r8, [r4, r0]
 8010962:	f883 8001 	strb.w	r8, [r3, #1]
 8010966:	f883 8002 	strb.w	r8, [r3, #2]
 801096a:	f883 8003 	strb.w	r8, [r3, #3]
 801096e:	3601      	adds	r6, #1
 8010970:	2e1c      	cmp	r6, #28
 8010972:	d1e0      	bne.n	8010936 <SpiFlashStore::Init()+0xc6>
 8010974:	f1b9 0f00 	cmp.w	r9, #0
 8010978:	d008      	beq.n	801098c <SpiFlashStore::Init()+0x11c>
 801097a:	f8ca b000 	str.w	fp, [sl]
 801097e:	e005      	b.n	801098c <SpiFlashStore::Init()+0x11c>
 8010980:	3601      	adds	r6, #1
 8010982:	2e1c      	cmp	r6, #28
 8010984:	d1bb      	bne.n	80108fe <SpiFlashStore::Init()+0x8e>
 8010986:	2501      	movs	r5, #1
 8010988:	4b08      	ldr	r3, [pc, #32]	; (80109ac <SpiFlashStore::Init()+0x13c>)
 801098a:	601d      	str	r5, [r3, #0]
 801098c:	4628      	mov	r0, r5
 801098e:	b005      	add	sp, #20
 8010990:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010994:	2500      	movs	r5, #0
 8010996:	e7f9      	b.n	801098c <SpiFlashStore::Init()+0x11c>
 8010998:	2000bdd8 	ldrdcs	fp, [r0], -r8
 801099c:	2000bda8 	andcs	fp, r0, r8, lsr #27
 80109a0:	2000ada8 	andcs	sl, r0, r8, lsr #27
 80109a4:	2000bdbc 			; <UNDEFINED> instruction: 0x2000bdbc
 80109a8:	08019ba4 	stmdaeq	r1, {r2, r5, r7, r8, r9, fp, ip, pc}
 80109ac:	2000bdb4 			; <UNDEFINED> instruction: 0x2000bdb4

080109b0 <SpiFlashStore::SpiFlashStore()>:
 80109b0:	b538      	push	{r3, r4, r5, lr}
 80109b2:	4b0d      	ldr	r3, [pc, #52]	; (80109e8 <SpiFlashStore::SpiFlashStore()+0x38>)
 80109b4:	4604      	mov	r4, r0
 80109b6:	6018      	str	r0, [r3, #0]
 80109b8:	4b0c      	ldr	r3, [pc, #48]	; (80109ec <SpiFlashStore::SpiFlashStore()+0x3c>)
 80109ba:	4d0d      	ldr	r5, [pc, #52]	; (80109f0 <SpiFlashStore::SpiFlashStore()+0x40>)
 80109bc:	681b      	ldr	r3, [r3, #0]
 80109be:	781b      	ldrb	r3, [r3, #0]
 80109c0:	b113      	cbz	r3, 80109c8 <SpiFlashStore::SpiFlashStore()+0x18>
 80109c2:	f7ff ff55 	bl	8010870 <SpiFlashStore::Init()>
 80109c6:	7028      	strb	r0, [r5, #0]
 80109c8:	782b      	ldrb	r3, [r5, #0]
 80109ca:	b153      	cbz	r3, 80109e2 <SpiFlashStore::SpiFlashStore()+0x32>
 80109cc:	2320      	movs	r3, #32
 80109ce:	2200      	movs	r2, #0
 80109d0:	4908      	ldr	r1, [pc, #32]	; (80109f4 <SpiFlashStore::SpiFlashStore()+0x44>)
 80109d2:	f851 0b04 	ldr.w	r0, [r1], #4
 80109d6:	3201      	adds	r2, #1
 80109d8:	2a1c      	cmp	r2, #28
 80109da:	4403      	add	r3, r0
 80109dc:	d1f9      	bne.n	80109d2 <SpiFlashStore::SpiFlashStore()+0x22>
 80109de:	4a06      	ldr	r2, [pc, #24]	; (80109f8 <SpiFlashStore::SpiFlashStore()+0x48>)
 80109e0:	6013      	str	r3, [r2, #0]
 80109e2:	4620      	mov	r0, r4
 80109e4:	bd38      	pop	{r3, r4, r5, pc}
 80109e6:	bf00      	nop
 80109e8:	2000bdb8 			; <UNDEFINED> instruction: 0x2000bdb8
 80109ec:	2000bdd8 	ldrdcs	fp, [r0], -r8
 80109f0:	2000bdac 	andcs	fp, r0, ip, lsr #27
 80109f4:	08019ba4 	stmdaeq	r1, {r2, r5, r7, r8, r9, fp, ip, pc}
 80109f8:	2000bdb0 			; <UNDEFINED> instruction: 0x2000bdb0

080109fc <SpiFlashStore::ResetSetList(spiflashstore::Store)>:
 80109fc:	b508      	push	{r3, lr}
 80109fe:	f7ff ff29 	bl	8010854 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 8010a02:	2300      	movs	r3, #0
 8010a04:	4904      	ldr	r1, [pc, #16]	; (8010a18 <SpiFlashStore::ResetSetList(spiflashstore::Store)+0x1c>)
 8010a06:	1842      	adds	r2, r0, r1
 8010a08:	540b      	strb	r3, [r1, r0]
 8010a0a:	7053      	strb	r3, [r2, #1]
 8010a0c:	7093      	strb	r3, [r2, #2]
 8010a0e:	70d3      	strb	r3, [r2, #3]
 8010a10:	2201      	movs	r2, #1
 8010a12:	4b02      	ldr	r3, [pc, #8]	; (8010a1c <SpiFlashStore::ResetSetList(spiflashstore::Store)+0x20>)
 8010a14:	601a      	str	r2, [r3, #0]
 8010a16:	bd08      	pop	{r3, pc}
 8010a18:	2000ada8 	andcs	sl, r0, r8, lsr #27
 8010a1c:	2000bdb4 			; <UNDEFINED> instruction: 0x2000bdb4

08010a20 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>:
 8010a20:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010a24:	461c      	mov	r4, r3
 8010a26:	4b19      	ldr	r3, [pc, #100]	; (8010a8c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x6c>)
 8010a28:	4615      	mov	r5, r2
 8010a2a:	781f      	ldrb	r7, [r3, #0]
 8010a2c:	9e07      	ldr	r6, [sp, #28]
 8010a2e:	b35f      	cbz	r7, 8010a88 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x68>
 8010a30:	f7ff ff10 	bl	8010854 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 8010a34:	f04f 0c00 	mov.w	ip, #0
 8010a38:	4a15      	ldr	r2, [pc, #84]	; (8010a90 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x70>)
 8010a3a:	1941      	adds	r1, r0, r5
 8010a3c:	1e63      	subs	r3, r4, #1
 8010a3e:	9c06      	ldr	r4, [sp, #24]
 8010a40:	4411      	add	r1, r2
 8010a42:	440c      	add	r4, r1
 8010a44:	42a1      	cmp	r1, r4
 8010a46:	d00a      	beq.n	8010a5e <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x3e>
 8010a48:	f891 8000 	ldrb.w	r8, [r1]
 8010a4c:	f813 ef01 	ldrb.w	lr, [r3, #1]!
 8010a50:	3101      	adds	r1, #1
 8010a52:	45f0      	cmp	r8, lr
 8010a54:	bf1c      	itt	ne
 8010a56:	f801 ec01 	strbne.w	lr, [r1, #-1]
 8010a5a:	46bc      	movne	ip, r7
 8010a5c:	e7f2      	b.n	8010a44 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x24>
 8010a5e:	f1bc 0f00 	cmp.w	ip, #0
 8010a62:	d011      	beq.n	8010a88 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x68>
 8010a64:	4b0b      	ldr	r3, [pc, #44]	; (8010a94 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x74>)
 8010a66:	6819      	ldr	r1, [r3, #0]
 8010a68:	b109      	cbz	r1, 8010a6e <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x4e>
 8010a6a:	2906      	cmp	r1, #6
 8010a6c:	d101      	bne.n	8010a72 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 8010a6e:	2101      	movs	r1, #1
 8010a70:	6019      	str	r1, [r3, #0]
 8010a72:	4b09      	ldr	r3, [pc, #36]	; (8010a98 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x78>)
 8010a74:	6819      	ldr	r1, [r3, #0]
 8010a76:	4b09      	ldr	r3, [pc, #36]	; (8010a9c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x7c>)
 8010a78:	6019      	str	r1, [r3, #0]
 8010a7a:	b12d      	cbz	r5, 8010a88 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x68>
 8010a7c:	b126      	cbz	r6, 8010a88 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x68>
 8010a7e:	9b08      	ldr	r3, [sp, #32]
 8010a80:	4418      	add	r0, r3
 8010a82:	5813      	ldr	r3, [r2, r0]
 8010a84:	4333      	orrs	r3, r6
 8010a86:	5013      	str	r3, [r2, r0]
 8010a88:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010a8c:	2000bdac 	andcs	fp, r0, ip, lsr #27
 8010a90:	2000ada8 	andcs	sl, r0, r8, lsr #27
 8010a94:	2000bdb4 			; <UNDEFINED> instruction: 0x2000bdb4
 8010a98:	20013e04 	andcs	r3, r1, r4, lsl #28
 8010a9c:	2000ada4 	andcs	sl, r0, r4, lsr #27

08010aa0 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>:
 8010aa0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010aa4:	461d      	mov	r5, r3
 8010aa6:	4b15      	ldr	r3, [pc, #84]	; (8010afc <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x5c>)
 8010aa8:	b085      	sub	sp, #20
 8010aaa:	781b      	ldrb	r3, [r3, #0]
 8010aac:	4607      	mov	r7, r0
 8010aae:	4688      	mov	r8, r1
 8010ab0:	4614      	mov	r4, r2
 8010ab2:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 8010ab6:	b1eb      	cbz	r3, 8010af4 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x54>
 8010ab8:	f7ff fecc 	bl	8010854 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 8010abc:	4910      	ldr	r1, [pc, #64]	; (8010b00 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x60>)
 8010abe:	4a11      	ldr	r2, [pc, #68]	; (8010b04 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x64>)
 8010ac0:	7809      	ldrb	r1, [r1, #0]
 8010ac2:	eb00 0309 	add.w	r3, r0, r9
 8010ac6:	189e      	adds	r6, r3, r2
 8010ac8:	b951      	cbnz	r1, 8010ae0 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x40>
 8010aca:	589b      	ldr	r3, [r3, r2]
 8010acc:	b143      	cbz	r3, 8010ae0 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x40>
 8010ace:	3c01      	subs	r4, #1
 8010ad0:	4435      	add	r5, r6
 8010ad2:	42b5      	cmp	r5, r6
 8010ad4:	d00e      	beq.n	8010af4 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x54>
 8010ad6:	f816 3b01 	ldrb.w	r3, [r6], #1
 8010ada:	f804 3f01 	strb.w	r3, [r4, #1]!
 8010ade:	e7f8      	b.n	8010ad2 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x32>
 8010ae0:	2300      	movs	r3, #0
 8010ae2:	464a      	mov	r2, r9
 8010ae4:	e9cd 3301 	strd	r3, r3, [sp, #4]
 8010ae8:	4641      	mov	r1, r8
 8010aea:	4623      	mov	r3, r4
 8010aec:	4638      	mov	r0, r7
 8010aee:	9500      	str	r5, [sp, #0]
 8010af0:	f7ff ff96 	bl	8010a20 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8010af4:	b005      	add	sp, #20
 8010af6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010afa:	bf00      	nop
 8010afc:	2000bdac 	andcs	fp, r0, ip, lsr #27
 8010b00:	2000bdbc 			; <UNDEFINED> instruction: 0x2000bdbc
 8010b04:	2000ada8 	andcs	sl, r0, r8, lsr #27

08010b08 <SpiFlashStore::Flash()>:
 8010b08:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8010b0a:	4c25      	ldr	r4, [pc, #148]	; (8010ba0 <SpiFlashStore::Flash()+0x98>)
 8010b0c:	6820      	ldr	r0, [r4, #0]
 8010b0e:	2800      	cmp	r0, #0
 8010b10:	d043      	beq.n	8010b9a <SpiFlashStore::Flash()+0x92>
 8010b12:	3801      	subs	r0, #1
 8010b14:	2805      	cmp	r0, #5
 8010b16:	d831      	bhi.n	8010b7c <SpiFlashStore::Flash()+0x74>
 8010b18:	e8df f000 	tbb	[pc, r0]
 8010b1c:	2e140b03 	vnmlscs.f64	d0, d4, d3
 8010b20:	4b203025 	blmi	881cbbc <__exidx_end+0x8023b8>
 8010b24:	681a      	ldr	r2, [r3, #0]
 8010b26:	4b20      	ldr	r3, [pc, #128]	; (8010ba8 <SpiFlashStore::Flash()+0xa0>)
 8010b28:	601a      	str	r2, [r3, #0]
 8010b2a:	2302      	movs	r3, #2
 8010b2c:	6023      	str	r3, [r4, #0]
 8010b2e:	2001      	movs	r0, #1
 8010b30:	e033      	b.n	8010b9a <SpiFlashStore::Flash()+0x92>
 8010b32:	4b1c      	ldr	r3, [pc, #112]	; (8010ba4 <SpiFlashStore::Flash()+0x9c>)
 8010b34:	4a1c      	ldr	r2, [pc, #112]	; (8010ba8 <SpiFlashStore::Flash()+0xa0>)
 8010b36:	681b      	ldr	r3, [r3, #0]
 8010b38:	6812      	ldr	r2, [r2, #0]
 8010b3a:	1a9b      	subs	r3, r3, r2
 8010b3c:	2b63      	cmp	r3, #99	; 0x63
 8010b3e:	d9f6      	bls.n	8010b2e <SpiFlashStore::Flash()+0x26>
 8010b40:	2303      	movs	r3, #3
 8010b42:	e7f3      	b.n	8010b2c <SpiFlashStore::Flash()+0x24>
 8010b44:	4919      	ldr	r1, [pc, #100]	; (8010bac <SpiFlashStore::Flash()+0xa4>)
 8010b46:	481a      	ldr	r0, [pc, #104]	; (8010bb0 <SpiFlashStore::Flash()+0xa8>)
 8010b48:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8010b4c:	6809      	ldr	r1, [r1, #0]
 8010b4e:	6800      	ldr	r0, [r0, #0]
 8010b50:	ab03      	add	r3, sp, #12
 8010b52:	f000 fbab 	bl	80112ac <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)>
 8010b56:	2800      	cmp	r0, #0
 8010b58:	d0e9      	beq.n	8010b2e <SpiFlashStore::Flash()+0x26>
 8010b5a:	4b12      	ldr	r3, [pc, #72]	; (8010ba4 <SpiFlashStore::Flash()+0x9c>)
 8010b5c:	681a      	ldr	r2, [r3, #0]
 8010b5e:	4b12      	ldr	r3, [pc, #72]	; (8010ba8 <SpiFlashStore::Flash()+0xa0>)
 8010b60:	601a      	str	r2, [r3, #0]
 8010b62:	2305      	movs	r3, #5
 8010b64:	e7e2      	b.n	8010b2c <SpiFlashStore::Flash()+0x24>
 8010b66:	4b0f      	ldr	r3, [pc, #60]	; (8010ba4 <SpiFlashStore::Flash()+0x9c>)
 8010b68:	4a0f      	ldr	r2, [pc, #60]	; (8010ba8 <SpiFlashStore::Flash()+0xa0>)
 8010b6a:	681b      	ldr	r3, [r3, #0]
 8010b6c:	6812      	ldr	r2, [r2, #0]
 8010b6e:	1a9b      	subs	r3, r3, r2
 8010b70:	2b63      	cmp	r3, #99	; 0x63
 8010b72:	d9dc      	bls.n	8010b2e <SpiFlashStore::Flash()+0x26>
 8010b74:	2304      	movs	r3, #4
 8010b76:	e7d9      	b.n	8010b2c <SpiFlashStore::Flash()+0x24>
 8010b78:	2306      	movs	r3, #6
 8010b7a:	e7d7      	b.n	8010b2c <SpiFlashStore::Flash()+0x24>
 8010b7c:	ab03      	add	r3, sp, #12
 8010b7e:	4a0d      	ldr	r2, [pc, #52]	; (8010bb4 <SpiFlashStore::Flash()+0xac>)
 8010b80:	490a      	ldr	r1, [pc, #40]	; (8010bac <SpiFlashStore::Flash()+0xa4>)
 8010b82:	480b      	ldr	r0, [pc, #44]	; (8010bb0 <SpiFlashStore::Flash()+0xa8>)
 8010b84:	9300      	str	r3, [sp, #0]
 8010b86:	6812      	ldr	r2, [r2, #0]
 8010b88:	4b0b      	ldr	r3, [pc, #44]	; (8010bb8 <SpiFlashStore::Flash()+0xb0>)
 8010b8a:	6809      	ldr	r1, [r1, #0]
 8010b8c:	6800      	ldr	r0, [r0, #0]
 8010b8e:	f000 fc2d 	bl	80113ec <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)>
 8010b92:	2800      	cmp	r0, #0
 8010b94:	d0cb      	beq.n	8010b2e <SpiFlashStore::Flash()+0x26>
 8010b96:	2000      	movs	r0, #0
 8010b98:	6020      	str	r0, [r4, #0]
 8010b9a:	b004      	add	sp, #16
 8010b9c:	bd10      	pop	{r4, pc}
 8010b9e:	bf00      	nop
 8010ba0:	2000bdb4 			; <UNDEFINED> instruction: 0x2000bdb4
 8010ba4:	20013e04 	andcs	r3, r1, r4, lsl #28
 8010ba8:	2000ada4 	andcs	sl, r0, r4, lsr #27
 8010bac:	2000bda8 	andcs	fp, r0, r8, lsr #27
 8010bb0:	2000bdd8 	ldrdcs	fp, [r0], -r8
 8010bb4:	2000bdb0 			; <UNDEFINED> instruction: 0x2000bdb0
 8010bb8:	2000ada8 	andcs	sl, r0, r8, lsr #27

08010bbc <StoreArtNet::~StoreArtNet()>:
 8010bbc:	4770      	bx	lr

08010bbe <non-virtual thunk to StoreArtNet::~StoreArtNet()>:
 8010bbe:	3804      	subs	r0, #4
 8010bc0:	4770      	bx	lr
	...

08010bc4 <StoreArtNet::Update(artnetparams::Params const*)>:
 8010bc4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8010bc6:	2200      	movs	r2, #0
 8010bc8:	460b      	mov	r3, r1
 8010bca:	2187      	movs	r1, #135	; 0x87
 8010bcc:	e9cd 2201 	strd	r2, r2, [sp, #4]
 8010bd0:	4804      	ldr	r0, [pc, #16]	; (8010be4 <StoreArtNet::Update(artnetparams::Params const*)+0x20>)
 8010bd2:	9100      	str	r1, [sp, #0]
 8010bd4:	6800      	ldr	r0, [r0, #0]
 8010bd6:	2101      	movs	r1, #1
 8010bd8:	f7ff ff22 	bl	8010a20 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8010bdc:	b005      	add	sp, #20
 8010bde:	f85d fb04 	ldr.w	pc, [sp], #4
 8010be2:	bf00      	nop
 8010be4:	2000bdb8 			; <UNDEFINED> instruction: 0x2000bdb8

08010be8 <StoreArtNet::SaveShortName(char const*)>:
 8010be8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8010bea:	460b      	mov	r3, r1
 8010bec:	2202      	movs	r2, #2
 8010bee:	2100      	movs	r1, #0
 8010bf0:	e9cd 2101 	strd	r2, r1, [sp, #4]
 8010bf4:	2212      	movs	r2, #18
 8010bf6:	4805      	ldr	r0, [pc, #20]	; (8010c0c <StoreArtNet::SaveShortName(char const*)+0x24>)
 8010bf8:	9200      	str	r2, [sp, #0]
 8010bfa:	2101      	movs	r1, #1
 8010bfc:	220c      	movs	r2, #12
 8010bfe:	6800      	ldr	r0, [r0, #0]
 8010c00:	f7ff ff0e 	bl	8010a20 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8010c04:	b005      	add	sp, #20
 8010c06:	f85d fb04 	ldr.w	pc, [sp], #4
 8010c0a:	bf00      	nop
 8010c0c:	2000bdb8 			; <UNDEFINED> instruction: 0x2000bdb8

08010c10 <non-virtual thunk to StoreArtNet::SaveShortName(char const*)>:
 8010c10:	f1a0 0004 	sub.w	r0, r0, #4
 8010c14:	f7ff bfe8 	b.w	8010be8 <StoreArtNet::SaveShortName(char const*)>

08010c18 <StoreArtNet::SaveLongName(char const*)>:
 8010c18:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8010c1a:	460b      	mov	r3, r1
 8010c1c:	2200      	movs	r2, #0
 8010c1e:	2101      	movs	r1, #1
 8010c20:	e9cd 1201 	strd	r1, r2, [sp, #4]
 8010c24:	2240      	movs	r2, #64	; 0x40
 8010c26:	4804      	ldr	r0, [pc, #16]	; (8010c38 <StoreArtNet::SaveLongName(char const*)+0x20>)
 8010c28:	9200      	str	r2, [sp, #0]
 8010c2a:	6800      	ldr	r0, [r0, #0]
 8010c2c:	221e      	movs	r2, #30
 8010c2e:	f7ff fef7 	bl	8010a20 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8010c32:	b005      	add	sp, #20
 8010c34:	f85d fb04 	ldr.w	pc, [sp], #4
 8010c38:	2000bdb8 			; <UNDEFINED> instruction: 0x2000bdb8

08010c3c <non-virtual thunk to StoreArtNet::SaveLongName(char const*)>:
 8010c3c:	f1a0 0004 	sub.w	r0, r0, #4
 8010c40:	f7ff bfea 	b.w	8010c18 <StoreArtNet::SaveLongName(char const*)>

08010c44 <StoreArtNet::SaveUniverseSwitch(unsigned int, unsigned char)>:
 8010c44:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8010c46:	2300      	movs	r3, #0
 8010c48:	9302      	str	r3, [sp, #8]
 8010c4a:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8010c4e:	4608      	mov	r0, r1
 8010c50:	408b      	lsls	r3, r1
 8010c52:	2101      	movs	r1, #1
 8010c54:	f88d 2017 	strb.w	r2, [sp, #23]
 8010c58:	f100 0267 	add.w	r2, r0, #103	; 0x67
 8010c5c:	4805      	ldr	r0, [pc, #20]	; (8010c74 <StoreArtNet::SaveUniverseSwitch(unsigned int, unsigned char)+0x30>)
 8010c5e:	9301      	str	r3, [sp, #4]
 8010c60:	9100      	str	r1, [sp, #0]
 8010c62:	6800      	ldr	r0, [r0, #0]
 8010c64:	f10d 0317 	add.w	r3, sp, #23
 8010c68:	f7ff feda 	bl	8010a20 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8010c6c:	b007      	add	sp, #28
 8010c6e:	f85d fb04 	ldr.w	pc, [sp], #4
 8010c72:	bf00      	nop
 8010c74:	2000bdb8 			; <UNDEFINED> instruction: 0x2000bdb8

08010c78 <non-virtual thunk to StoreArtNet::SaveUniverseSwitch(unsigned int, unsigned char)>:
 8010c78:	f1a0 0004 	sub.w	r0, r0, #4
 8010c7c:	f7ff bfe2 	b.w	8010c44 <StoreArtNet::SaveUniverseSwitch(unsigned int, unsigned char)>

08010c80 <StoreArtNet::SaveNetSwitch(unsigned char)>:
 8010c80:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8010c82:	2204      	movs	r2, #4
 8010c84:	2300      	movs	r3, #0
 8010c86:	f88d 1017 	strb.w	r1, [sp, #23]
 8010c8a:	2101      	movs	r1, #1
 8010c8c:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8010c90:	4804      	ldr	r0, [pc, #16]	; (8010ca4 <StoreArtNet::SaveNetSwitch(unsigned char)+0x24>)
 8010c92:	9100      	str	r1, [sp, #0]
 8010c94:	6800      	ldr	r0, [r0, #0]
 8010c96:	f10d 0317 	add.w	r3, sp, #23
 8010c9a:	f7ff fec1 	bl	8010a20 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8010c9e:	b007      	add	sp, #28
 8010ca0:	f85d fb04 	ldr.w	pc, [sp], #4
 8010ca4:	2000bdb8 			; <UNDEFINED> instruction: 0x2000bdb8

08010ca8 <non-virtual thunk to StoreArtNet::SaveNetSwitch(unsigned char)>:
 8010ca8:	f1a0 0004 	sub.w	r0, r0, #4
 8010cac:	f7ff bfe8 	b.w	8010c80 <StoreArtNet::SaveNetSwitch(unsigned char)>

08010cb0 <StoreArtNet::SaveSubnetSwitch(unsigned char)>:
 8010cb0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8010cb2:	2308      	movs	r3, #8
 8010cb4:	2200      	movs	r2, #0
 8010cb6:	f88d 1017 	strb.w	r1, [sp, #23]
 8010cba:	2101      	movs	r1, #1
 8010cbc:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8010cc0:	4805      	ldr	r0, [pc, #20]	; (8010cd8 <StoreArtNet::SaveSubnetSwitch(unsigned char)+0x28>)
 8010cc2:	9100      	str	r1, [sp, #0]
 8010cc4:	2205      	movs	r2, #5
 8010cc6:	6800      	ldr	r0, [r0, #0]
 8010cc8:	f10d 0317 	add.w	r3, sp, #23
 8010ccc:	f7ff fea8 	bl	8010a20 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8010cd0:	b007      	add	sp, #28
 8010cd2:	f85d fb04 	ldr.w	pc, [sp], #4
 8010cd6:	bf00      	nop
 8010cd8:	2000bdb8 			; <UNDEFINED> instruction: 0x2000bdb8

08010cdc <non-virtual thunk to StoreArtNet::SaveSubnetSwitch(unsigned char)>:
 8010cdc:	f1a0 0004 	sub.w	r0, r0, #4
 8010ce0:	f7ff bfe6 	b.w	8010cb0 <StoreArtNet::SaveSubnetSwitch(unsigned char)>

08010ce4 <StoreArtNet::SaveMergeMode(unsigned int, lightset::MergeMode)>:
 8010ce4:	b530      	push	{r4, r5, lr}
 8010ce6:	b087      	sub	sp, #28
 8010ce8:	460c      	mov	r4, r1
 8010cea:	4d0f      	ldr	r5, [pc, #60]	; (8010d28 <StoreArtNet::SaveMergeMode(unsigned int, lightset::MergeMode)+0x44>)
 8010cec:	9205      	str	r2, [sp, #20]
 8010cee:	b951      	cbnz	r1, 8010d06 <StoreArtNet::SaveMergeMode(unsigned int, lightset::MergeMode)+0x22>
 8010cf0:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8010cf4:	9102      	str	r1, [sp, #8]
 8010cf6:	2101      	movs	r1, #1
 8010cf8:	226b      	movs	r2, #107	; 0x6b
 8010cfa:	e9cd 1300 	strd	r1, r3, [sp]
 8010cfe:	6828      	ldr	r0, [r5, #0]
 8010d00:	ab05      	add	r3, sp, #20
 8010d02:	f7ff fe8d 	bl	8010a20 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8010d06:	2300      	movs	r3, #0
 8010d08:	9302      	str	r3, [sp, #8]
 8010d0a:	f44f 2380 	mov.w	r3, #262144	; 0x40000
 8010d0e:	2101      	movs	r1, #1
 8010d10:	40a3      	lsls	r3, r4
 8010d12:	9301      	str	r3, [sp, #4]
 8010d14:	6828      	ldr	r0, [r5, #0]
 8010d16:	9100      	str	r1, [sp, #0]
 8010d18:	ab05      	add	r3, sp, #20
 8010d1a:	f104 026c 	add.w	r2, r4, #108	; 0x6c
 8010d1e:	f7ff fe7f 	bl	8010a20 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8010d22:	b007      	add	sp, #28
 8010d24:	bd30      	pop	{r4, r5, pc}
 8010d26:	bf00      	nop
 8010d28:	2000bdb8 			; <UNDEFINED> instruction: 0x2000bdb8

08010d2c <non-virtual thunk to StoreArtNet::SaveMergeMode(unsigned int, lightset::MergeMode)>:
 8010d2c:	f1a0 0004 	sub.w	r0, r0, #4
 8010d30:	f7ff bfd8 	b.w	8010ce4 <StoreArtNet::SaveMergeMode(unsigned int, lightset::MergeMode)>

08010d34 <StoreArtNet::SavePortProtocol(unsigned int, artnet::PortProtocol)>:
 8010d34:	b530      	push	{r4, r5, lr}
 8010d36:	b087      	sub	sp, #28
 8010d38:	460c      	mov	r4, r1
 8010d3a:	4d0f      	ldr	r5, [pc, #60]	; (8010d78 <StoreArtNet::SavePortProtocol(unsigned int, artnet::PortProtocol)+0x44>)
 8010d3c:	9205      	str	r2, [sp, #20]
 8010d3e:	b951      	cbnz	r1, 8010d56 <StoreArtNet::SavePortProtocol(unsigned int, artnet::PortProtocol)+0x22>
 8010d40:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8010d44:	9102      	str	r1, [sp, #8]
 8010d46:	2101      	movs	r1, #1
 8010d48:	2270      	movs	r2, #112	; 0x70
 8010d4a:	e9cd 1300 	strd	r1, r3, [sp]
 8010d4e:	6828      	ldr	r0, [r5, #0]
 8010d50:	ab05      	add	r3, sp, #20
 8010d52:	f7ff fe65 	bl	8010a20 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8010d56:	2300      	movs	r3, #0
 8010d58:	9302      	str	r3, [sp, #8]
 8010d5a:	f44f 0300 	mov.w	r3, #8388608	; 0x800000
 8010d5e:	2101      	movs	r1, #1
 8010d60:	40a3      	lsls	r3, r4
 8010d62:	9301      	str	r3, [sp, #4]
 8010d64:	6828      	ldr	r0, [r5, #0]
 8010d66:	9100      	str	r1, [sp, #0]
 8010d68:	ab05      	add	r3, sp, #20
 8010d6a:	f104 0271 	add.w	r2, r4, #113	; 0x71
 8010d6e:	f7ff fe57 	bl	8010a20 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8010d72:	b007      	add	sp, #28
 8010d74:	bd30      	pop	{r4, r5, pc}
 8010d76:	bf00      	nop
 8010d78:	2000bdb8 			; <UNDEFINED> instruction: 0x2000bdb8

08010d7c <non-virtual thunk to StoreArtNet::SavePortProtocol(unsigned int, artnet::PortProtocol)>:
 8010d7c:	f1a0 0004 	sub.w	r0, r0, #4
 8010d80:	f7ff bfd8 	b.w	8010d34 <StoreArtNet::SavePortProtocol(unsigned int, artnet::PortProtocol)>

08010d84 <StoreArtNet::~StoreArtNet()>:
 8010d84:	b510      	push	{r4, lr}
 8010d86:	4604      	mov	r4, r0
 8010d88:	f004 fefa 	bl	8015b80 <operator delete(void*)>
 8010d8c:	4620      	mov	r0, r4
 8010d8e:	bd10      	pop	{r4, pc}

08010d90 <non-virtual thunk to StoreArtNet::~StoreArtNet()>:
 8010d90:	f1a0 0004 	sub.w	r0, r0, #4
 8010d94:	e7f6      	b.n	8010d84 <StoreArtNet::~StoreArtNet()>
	...

08010d98 <StoreArtNet::Copy(artnetparams::Params*)>:
 8010d98:	2300      	movs	r3, #0
 8010d9a:	b507      	push	{r0, r1, r2, lr}
 8010d9c:	4805      	ldr	r0, [pc, #20]	; (8010db4 <StoreArtNet::Copy(artnetparams::Params*)+0x1c>)
 8010d9e:	9300      	str	r3, [sp, #0]
 8010da0:	460a      	mov	r2, r1
 8010da2:	2387      	movs	r3, #135	; 0x87
 8010da4:	2101      	movs	r1, #1
 8010da6:	6800      	ldr	r0, [r0, #0]
 8010da8:	f7ff fe7a 	bl	8010aa0 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 8010dac:	b003      	add	sp, #12
 8010dae:	f85d fb04 	ldr.w	pc, [sp], #4
 8010db2:	bf00      	nop
 8010db4:	2000bdb8 			; <UNDEFINED> instruction: 0x2000bdb8

08010db8 <StoreArtNet::StoreArtNet()>:
 8010db8:	4a04      	ldr	r2, [pc, #16]	; (8010dcc <StoreArtNet::StoreArtNet()+0x14>)
 8010dba:	f102 0108 	add.w	r1, r2, #8
 8010dbe:	323c      	adds	r2, #60	; 0x3c
 8010dc0:	6042      	str	r2, [r0, #4]
 8010dc2:	4a03      	ldr	r2, [pc, #12]	; (8010dd0 <StoreArtNet::StoreArtNet()+0x18>)
 8010dc4:	6001      	str	r1, [r0, #0]
 8010dc6:	6010      	str	r0, [r2, #0]
 8010dc8:	4770      	bx	lr
 8010dca:	bf00      	nop
 8010dcc:	08019c14 	stmdaeq	r1, {r2, r4, sl, fp, ip, pc}
 8010dd0:	2000bdc0 	andcs	fp, r0, r0, asr #27

08010dd4 <StoreDisplayUdf::~StoreDisplayUdf()>:
 8010dd4:	4770      	bx	lr
	...

08010dd8 <StoreDisplayUdf::Copy(displayudfparams::Params*)>:
 8010dd8:	2300      	movs	r3, #0
 8010dda:	b507      	push	{r0, r1, r2, lr}
 8010ddc:	4805      	ldr	r0, [pc, #20]	; (8010df4 <StoreDisplayUdf::Copy(displayudfparams::Params*)+0x1c>)
 8010dde:	9300      	str	r3, [sp, #0]
 8010de0:	460a      	mov	r2, r1
 8010de2:	2322      	movs	r3, #34	; 0x22
 8010de4:	210f      	movs	r1, #15
 8010de6:	6800      	ldr	r0, [r0, #0]
 8010de8:	f7ff fe5a 	bl	8010aa0 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 8010dec:	b003      	add	sp, #12
 8010dee:	f85d fb04 	ldr.w	pc, [sp], #4
 8010df2:	bf00      	nop
 8010df4:	2000bdb8 			; <UNDEFINED> instruction: 0x2000bdb8

08010df8 <StoreDisplayUdf::Update(displayudfparams::Params const*)>:
 8010df8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8010dfa:	2200      	movs	r2, #0
 8010dfc:	460b      	mov	r3, r1
 8010dfe:	2122      	movs	r1, #34	; 0x22
 8010e00:	e9cd 2201 	strd	r2, r2, [sp, #4]
 8010e04:	4804      	ldr	r0, [pc, #16]	; (8010e18 <StoreDisplayUdf::Update(displayudfparams::Params const*)+0x20>)
 8010e06:	9100      	str	r1, [sp, #0]
 8010e08:	6800      	ldr	r0, [r0, #0]
 8010e0a:	210f      	movs	r1, #15
 8010e0c:	f7ff fe08 	bl	8010a20 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8010e10:	b005      	add	sp, #20
 8010e12:	f85d fb04 	ldr.w	pc, [sp], #4
 8010e16:	bf00      	nop
 8010e18:	2000bdb8 			; <UNDEFINED> instruction: 0x2000bdb8

08010e1c <StoreDisplayUdf::~StoreDisplayUdf()>:
 8010e1c:	b510      	push	{r4, lr}
 8010e1e:	4604      	mov	r4, r0
 8010e20:	f004 feae 	bl	8015b80 <operator delete(void*)>
 8010e24:	4620      	mov	r0, r4
 8010e26:	bd10      	pop	{r4, pc}

08010e28 <StoreDisplayUdf::StoreDisplayUdf()>:
 8010e28:	4a02      	ldr	r2, [pc, #8]	; (8010e34 <StoreDisplayUdf::StoreDisplayUdf()+0xc>)
 8010e2a:	6002      	str	r2, [r0, #0]
 8010e2c:	4a02      	ldr	r2, [pc, #8]	; (8010e38 <StoreDisplayUdf::StoreDisplayUdf()+0x10>)
 8010e2e:	6010      	str	r0, [r2, #0]
 8010e30:	4770      	bx	lr
 8010e32:	bf00      	nop
 8010e34:	08019c7c 	stmdaeq	r1, {r2, r3, r4, r5, r6, sl, fp, ip, pc}
 8010e38:	2000bdc4 	andcs	fp, r0, r4, asr #27

08010e3c <StoreNetwork::~StoreNetwork()>:
 8010e3c:	4770      	bx	lr

08010e3e <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 8010e3e:	3804      	subs	r0, #4
 8010e40:	4770      	bx	lr
	...

08010e44 <StoreNetwork::Update(TNetworkParams const*)>:
 8010e44:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8010e46:	2200      	movs	r2, #0
 8010e48:	460b      	mov	r3, r1
 8010e4a:	215e      	movs	r1, #94	; 0x5e
 8010e4c:	e9cd 2201 	strd	r2, r2, [sp, #4]
 8010e50:	4804      	ldr	r0, [pc, #16]	; (8010e64 <StoreNetwork::Update(TNetworkParams const*)+0x20>)
 8010e52:	9100      	str	r1, [sp, #0]
 8010e54:	6800      	ldr	r0, [r0, #0]
 8010e56:	4611      	mov	r1, r2
 8010e58:	f7ff fde2 	bl	8010a20 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8010e5c:	b005      	add	sp, #20
 8010e5e:	f85d fb04 	ldr.w	pc, [sp], #4
 8010e62:	bf00      	nop
 8010e64:	2000bdb8 			; <UNDEFINED> instruction: 0x2000bdb8

08010e68 <StoreNetwork::SaveGatewayIp(unsigned int)>:
 8010e68:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8010e6a:	2308      	movs	r3, #8
 8010e6c:	9105      	str	r1, [sp, #20]
 8010e6e:	2100      	movs	r1, #0
 8010e70:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8010e74:	2304      	movs	r3, #4
 8010e76:	4805      	ldr	r0, [pc, #20]	; (8010e8c <StoreNetwork::SaveGatewayIp(unsigned int)+0x24>)
 8010e78:	9300      	str	r3, [sp, #0]
 8010e7a:	220c      	movs	r2, #12
 8010e7c:	6800      	ldr	r0, [r0, #0]
 8010e7e:	ab05      	add	r3, sp, #20
 8010e80:	f7ff fdce 	bl	8010a20 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8010e84:	b007      	add	sp, #28
 8010e86:	f85d fb04 	ldr.w	pc, [sp], #4
 8010e8a:	bf00      	nop
 8010e8c:	2000bdb8 			; <UNDEFINED> instruction: 0x2000bdb8

08010e90 <non-virtual thunk to StoreNetwork::SaveGatewayIp(unsigned int)>:
 8010e90:	f1a0 0004 	sub.w	r0, r0, #4
 8010e94:	e7e8      	b.n	8010e68 <StoreNetwork::SaveGatewayIp(unsigned int)>
 8010e96:	bf00      	nop

08010e98 <StoreNetwork::SaveNetMask(unsigned int)>:
 8010e98:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8010e9a:	2304      	movs	r3, #4
 8010e9c:	9105      	str	r1, [sp, #20]
 8010e9e:	2100      	movs	r1, #0
 8010ea0:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8010ea4:	4804      	ldr	r0, [pc, #16]	; (8010eb8 <StoreNetwork::SaveNetMask(unsigned int)+0x20>)
 8010ea6:	9300      	str	r3, [sp, #0]
 8010ea8:	2208      	movs	r2, #8
 8010eaa:	6800      	ldr	r0, [r0, #0]
 8010eac:	ab05      	add	r3, sp, #20
 8010eae:	f7ff fdb7 	bl	8010a20 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8010eb2:	b007      	add	sp, #28
 8010eb4:	f85d fb04 	ldr.w	pc, [sp], #4
 8010eb8:	2000bdb8 			; <UNDEFINED> instruction: 0x2000bdb8

08010ebc <non-virtual thunk to StoreNetwork::SaveNetMask(unsigned int)>:
 8010ebc:	f1a0 0004 	sub.w	r0, r0, #4
 8010ec0:	e7ea      	b.n	8010e98 <StoreNetwork::SaveNetMask(unsigned int)>
 8010ec2:	bf00      	nop

08010ec4 <StoreNetwork::SaveIp(unsigned int)>:
 8010ec4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8010ec6:	2302      	movs	r3, #2
 8010ec8:	9105      	str	r1, [sp, #20]
 8010eca:	2100      	movs	r1, #0
 8010ecc:	2204      	movs	r2, #4
 8010ece:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8010ed2:	4804      	ldr	r0, [pc, #16]	; (8010ee4 <StoreNetwork::SaveIp(unsigned int)+0x20>)
 8010ed4:	9200      	str	r2, [sp, #0]
 8010ed6:	6800      	ldr	r0, [r0, #0]
 8010ed8:	ab05      	add	r3, sp, #20
 8010eda:	f7ff fda1 	bl	8010a20 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8010ede:	b007      	add	sp, #28
 8010ee0:	f85d fb04 	ldr.w	pc, [sp], #4
 8010ee4:	2000bdb8 			; <UNDEFINED> instruction: 0x2000bdb8

08010ee8 <non-virtual thunk to StoreNetwork::SaveIp(unsigned int)>:
 8010ee8:	f1a0 0004 	sub.w	r0, r0, #4
 8010eec:	e7ea      	b.n	8010ec4 <StoreNetwork::SaveIp(unsigned int)>
 8010eee:	bf00      	nop

08010ef0 <StoreNetwork::SaveHostName(char const*, unsigned int)>:
 8010ef0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8010ef2:	460b      	mov	r3, r1
 8010ef4:	2020      	movs	r0, #32
 8010ef6:	2100      	movs	r1, #0
 8010ef8:	2a40      	cmp	r2, #64	; 0x40
 8010efa:	bf28      	it	cs
 8010efc:	2240      	movcs	r2, #64	; 0x40
 8010efe:	e9cd 0101 	strd	r0, r1, [sp, #4]
 8010f02:	4804      	ldr	r0, [pc, #16]	; (8010f14 <StoreNetwork::SaveHostName(char const*, unsigned int)+0x24>)
 8010f04:	9200      	str	r2, [sp, #0]
 8010f06:	6800      	ldr	r0, [r0, #0]
 8010f08:	2215      	movs	r2, #21
 8010f0a:	f7ff fd89 	bl	8010a20 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8010f0e:	b005      	add	sp, #20
 8010f10:	f85d fb04 	ldr.w	pc, [sp], #4
 8010f14:	2000bdb8 			; <UNDEFINED> instruction: 0x2000bdb8

08010f18 <non-virtual thunk to StoreNetwork::SaveHostName(char const*, unsigned int)>:
 8010f18:	f1a0 0004 	sub.w	r0, r0, #4
 8010f1c:	e7e8      	b.n	8010ef0 <StoreNetwork::SaveHostName(char const*, unsigned int)>
 8010f1e:	bf00      	nop

08010f20 <StoreNetwork::~StoreNetwork()>:
 8010f20:	b510      	push	{r4, lr}
 8010f22:	4604      	mov	r4, r0
 8010f24:	f004 fe2c 	bl	8015b80 <operator delete(void*)>
 8010f28:	4620      	mov	r0, r4
 8010f2a:	bd10      	pop	{r4, pc}

08010f2c <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 8010f2c:	f1a0 0004 	sub.w	r0, r0, #4
 8010f30:	e7f6      	b.n	8010f20 <StoreNetwork::~StoreNetwork()>
	...

08010f34 <StoreNetwork::Copy(TNetworkParams*)>:
 8010f34:	b507      	push	{r0, r1, r2, lr}
 8010f36:	460a      	mov	r2, r1
 8010f38:	2100      	movs	r1, #0
 8010f3a:	4804      	ldr	r0, [pc, #16]	; (8010f4c <StoreNetwork::Copy(TNetworkParams*)+0x18>)
 8010f3c:	9100      	str	r1, [sp, #0]
 8010f3e:	235e      	movs	r3, #94	; 0x5e
 8010f40:	6800      	ldr	r0, [r0, #0]
 8010f42:	f7ff fdad 	bl	8010aa0 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 8010f46:	b003      	add	sp, #12
 8010f48:	f85d fb04 	ldr.w	pc, [sp], #4
 8010f4c:	2000bdb8 			; <UNDEFINED> instruction: 0x2000bdb8

08010f50 <StoreNetwork::StoreNetwork()>:
 8010f50:	4a03      	ldr	r2, [pc, #12]	; (8010f60 <StoreNetwork::StoreNetwork()+0x10>)
 8010f52:	6002      	str	r2, [r0, #0]
 8010f54:	322c      	adds	r2, #44	; 0x2c
 8010f56:	6042      	str	r2, [r0, #4]
 8010f58:	4a02      	ldr	r2, [pc, #8]	; (8010f64 <StoreNetwork::StoreNetwork()+0x14>)
 8010f5a:	6010      	str	r0, [r2, #0]
 8010f5c:	4770      	bx	lr
 8010f5e:	bf00      	nop
 8010f60:	08019c94 	stmdaeq	r1, {r2, r4, r7, sl, fp, ip, pc}
 8010f64:	2000bdc8 	andcs	fp, r0, r8, asr #27

08010f68 <StoreRDMDevice::~StoreRDMDevice()>:
 8010f68:	4770      	bx	lr

08010f6a <non-virtual thunk to StoreRDMDevice::~StoreRDMDevice()>:
 8010f6a:	3804      	subs	r0, #4
 8010f6c:	4770      	bx	lr
	...

08010f70 <StoreRDMDevice::Update(TRDMDeviceParams const*)>:
 8010f70:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8010f72:	2200      	movs	r2, #0
 8010f74:	460b      	mov	r3, r1
 8010f76:	2129      	movs	r1, #41	; 0x29
 8010f78:	e9cd 2201 	strd	r2, r2, [sp, #4]
 8010f7c:	4804      	ldr	r0, [pc, #16]	; (8010f90 <StoreRDMDevice::Update(TRDMDeviceParams const*)+0x20>)
 8010f7e:	9100      	str	r1, [sp, #0]
 8010f80:	6800      	ldr	r0, [r0, #0]
 8010f82:	210b      	movs	r1, #11
 8010f84:	f7ff fd4c 	bl	8010a20 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8010f88:	b005      	add	sp, #20
 8010f8a:	f85d fb04 	ldr.w	pc, [sp], #4
 8010f8e:	bf00      	nop
 8010f90:	2000bdb8 			; <UNDEFINED> instruction: 0x2000bdb8

08010f94 <StoreRDMDevice::SaveLabel(char const*, unsigned char)>:
 8010f94:	b570      	push	{r4, r5, r6, lr}
 8010f96:	2401      	movs	r4, #1
 8010f98:	2600      	movs	r6, #0
 8010f9a:	4d0c      	ldr	r5, [pc, #48]	; (8010fcc <StoreRDMDevice::SaveLabel(char const*, unsigned char)+0x38>)
 8010f9c:	b086      	sub	sp, #24
 8010f9e:	460b      	mov	r3, r1
 8010fa0:	6828      	ldr	r0, [r5, #0]
 8010fa2:	f88d 2017 	strb.w	r2, [sp, #23]
 8010fa6:	9200      	str	r2, [sp, #0]
 8010fa8:	210b      	movs	r1, #11
 8010faa:	2204      	movs	r2, #4
 8010fac:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8010fb0:	f7ff fd36 	bl	8010a20 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8010fb4:	2224      	movs	r2, #36	; 0x24
 8010fb6:	210b      	movs	r1, #11
 8010fb8:	e9cd 4601 	strd	r4, r6, [sp, #4]
 8010fbc:	6828      	ldr	r0, [r5, #0]
 8010fbe:	9400      	str	r4, [sp, #0]
 8010fc0:	f10d 0317 	add.w	r3, sp, #23
 8010fc4:	f7ff fd2c 	bl	8010a20 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8010fc8:	b006      	add	sp, #24
 8010fca:	bd70      	pop	{r4, r5, r6, pc}
 8010fcc:	2000bdb8 			; <UNDEFINED> instruction: 0x2000bdb8

08010fd0 <non-virtual thunk to StoreRDMDevice::SaveLabel(char const*, unsigned char)>:
 8010fd0:	f1a0 0004 	sub.w	r0, r0, #4
 8010fd4:	e7de      	b.n	8010f94 <StoreRDMDevice::SaveLabel(char const*, unsigned char)>
 8010fd6:	bf00      	nop

08010fd8 <StoreRDMDevice::~StoreRDMDevice()>:
 8010fd8:	b510      	push	{r4, lr}
 8010fda:	4604      	mov	r4, r0
 8010fdc:	f004 fdd0 	bl	8015b80 <operator delete(void*)>
 8010fe0:	4620      	mov	r0, r4
 8010fe2:	bd10      	pop	{r4, pc}

08010fe4 <non-virtual thunk to StoreRDMDevice::~StoreRDMDevice()>:
 8010fe4:	f1a0 0004 	sub.w	r0, r0, #4
 8010fe8:	e7f6      	b.n	8010fd8 <StoreRDMDevice::~StoreRDMDevice()>
	...

08010fec <StoreRDMDevice::Copy(TRDMDeviceParams*)>:
 8010fec:	2300      	movs	r3, #0
 8010fee:	b507      	push	{r0, r1, r2, lr}
 8010ff0:	4805      	ldr	r0, [pc, #20]	; (8011008 <StoreRDMDevice::Copy(TRDMDeviceParams*)+0x1c>)
 8010ff2:	9300      	str	r3, [sp, #0]
 8010ff4:	460a      	mov	r2, r1
 8010ff6:	2329      	movs	r3, #41	; 0x29
 8010ff8:	210b      	movs	r1, #11
 8010ffa:	6800      	ldr	r0, [r0, #0]
 8010ffc:	f7ff fd50 	bl	8010aa0 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 8011000:	b003      	add	sp, #12
 8011002:	f85d fb04 	ldr.w	pc, [sp], #4
 8011006:	bf00      	nop
 8011008:	2000bdb8 			; <UNDEFINED> instruction: 0x2000bdb8

0801100c <StoreRDMDevice::StoreRDMDevice()>:
 801100c:	4a03      	ldr	r2, [pc, #12]	; (801101c <StoreRDMDevice::StoreRDMDevice()+0x10>)
 801100e:	6002      	str	r2, [r0, #0]
 8011010:	321c      	adds	r2, #28
 8011012:	6042      	str	r2, [r0, #4]
 8011014:	4a02      	ldr	r2, [pc, #8]	; (8011020 <StoreRDMDevice::StoreRDMDevice()+0x14>)
 8011016:	6010      	str	r0, [r2, #0]
 8011018:	4770      	bx	lr
 801101a:	bf00      	nop
 801101c:	08019ce4 	stmdaeq	r1, {r2, r5, r6, r7, sl, fp, ip, pc}
 8011020:	2000bdcc 	andcs	fp, r0, ip, asr #27

08011024 <StoreRemoteConfig::~StoreRemoteConfig()>:
 8011024:	4770      	bx	lr
	...

08011028 <StoreRemoteConfig::Copy(TRemoteConfigParams*)>:
 8011028:	2300      	movs	r3, #0
 801102a:	b507      	push	{r0, r1, r2, lr}
 801102c:	4805      	ldr	r0, [pc, #20]	; (8011044 <StoreRemoteConfig::Copy(TRemoteConfigParams*)+0x1c>)
 801102e:	9300      	str	r3, [sp, #0]
 8011030:	460a      	mov	r2, r1
 8011032:	2320      	movs	r3, #32
 8011034:	210c      	movs	r1, #12
 8011036:	6800      	ldr	r0, [r0, #0]
 8011038:	f7ff fd32 	bl	8010aa0 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 801103c:	b003      	add	sp, #12
 801103e:	f85d fb04 	ldr.w	pc, [sp], #4
 8011042:	bf00      	nop
 8011044:	2000bdb8 			; <UNDEFINED> instruction: 0x2000bdb8

08011048 <StoreRemoteConfig::Update(TRemoteConfigParams const*)>:
 8011048:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801104a:	2200      	movs	r2, #0
 801104c:	460b      	mov	r3, r1
 801104e:	2120      	movs	r1, #32
 8011050:	e9cd 2201 	strd	r2, r2, [sp, #4]
 8011054:	4804      	ldr	r0, [pc, #16]	; (8011068 <StoreRemoteConfig::Update(TRemoteConfigParams const*)+0x20>)
 8011056:	9100      	str	r1, [sp, #0]
 8011058:	6800      	ldr	r0, [r0, #0]
 801105a:	210c      	movs	r1, #12
 801105c:	f7ff fce0 	bl	8010a20 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8011060:	b005      	add	sp, #20
 8011062:	f85d fb04 	ldr.w	pc, [sp], #4
 8011066:	bf00      	nop
 8011068:	2000bdb8 			; <UNDEFINED> instruction: 0x2000bdb8

0801106c <StoreRemoteConfig::~StoreRemoteConfig()>:
 801106c:	b510      	push	{r4, lr}
 801106e:	4604      	mov	r4, r0
 8011070:	f004 fd86 	bl	8015b80 <operator delete(void*)>
 8011074:	4620      	mov	r0, r4
 8011076:	bd10      	pop	{r4, pc}

08011078 <StoreRemoteConfig::StoreRemoteConfig()>:
 8011078:	4a02      	ldr	r2, [pc, #8]	; (8011084 <StoreRemoteConfig::StoreRemoteConfig()+0xc>)
 801107a:	6002      	str	r2, [r0, #0]
 801107c:	4a02      	ldr	r2, [pc, #8]	; (8011088 <StoreRemoteConfig::StoreRemoteConfig()+0x10>)
 801107e:	6010      	str	r0, [r2, #0]
 8011080:	4770      	bx	lr
 8011082:	bf00      	nop
 8011084:	08019d14 	stmdaeq	r1, {r2, r4, r8, sl, fp, ip, pc}
 8011088:	2000bdd0 	ldrdcs	fp, [r0], -r0

0801108c <StoreWS28xxDmx::~StoreWS28xxDmx()>:
 801108c:	4770      	bx	lr

0801108e <non-virtual thunk to StoreWS28xxDmx::~StoreWS28xxDmx()>:
 801108e:	3804      	subs	r0, #4
 8011090:	4770      	bx	lr
	...

08011094 <StoreWS28xxDmx::Update(TWS28xxDmxParams const*)>:
 8011094:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8011096:	2200      	movs	r2, #0
 8011098:	460b      	mov	r3, r1
 801109a:	2127      	movs	r1, #39	; 0x27
 801109c:	e9cd 2201 	strd	r2, r2, [sp, #4]
 80110a0:	4804      	ldr	r0, [pc, #16]	; (80110b4 <StoreWS28xxDmx::Update(TWS28xxDmxParams const*)+0x20>)
 80110a2:	9100      	str	r1, [sp, #0]
 80110a4:	6800      	ldr	r0, [r0, #0]
 80110a6:	2103      	movs	r1, #3
 80110a8:	f7ff fcba 	bl	8010a20 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 80110ac:	b005      	add	sp, #20
 80110ae:	f85d fb04 	ldr.w	pc, [sp], #4
 80110b2:	bf00      	nop
 80110b4:	2000bdb8 			; <UNDEFINED> instruction: 0x2000bdb8

080110b8 <StoreWS28xxDmx::SaveDmxStartAddress(unsigned short)>:
 80110b8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80110ba:	2304      	movs	r3, #4
 80110bc:	2200      	movs	r2, #0
 80110be:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80110c2:	2302      	movs	r3, #2
 80110c4:	4806      	ldr	r0, [pc, #24]	; (80110e0 <StoreWS28xxDmx::SaveDmxStartAddress(unsigned short)+0x28>)
 80110c6:	9300      	str	r3, [sp, #0]
 80110c8:	f8ad 1016 	strh.w	r1, [sp, #22]
 80110cc:	2207      	movs	r2, #7
 80110ce:	2103      	movs	r1, #3
 80110d0:	6800      	ldr	r0, [r0, #0]
 80110d2:	f10d 0316 	add.w	r3, sp, #22
 80110d6:	f7ff fca3 	bl	8010a20 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 80110da:	b007      	add	sp, #28
 80110dc:	f85d fb04 	ldr.w	pc, [sp], #4
 80110e0:	2000bdb8 			; <UNDEFINED> instruction: 0x2000bdb8

080110e4 <non-virtual thunk to StoreWS28xxDmx::SaveDmxStartAddress(unsigned short)>:
 80110e4:	f1a0 0004 	sub.w	r0, r0, #4
 80110e8:	e7e6      	b.n	80110b8 <StoreWS28xxDmx::SaveDmxStartAddress(unsigned short)>
 80110ea:	bf00      	nop

080110ec <StoreWS28xxDmx::SaveTestPattern(unsigned char)>:
 80110ec:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80110ee:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
 80110f2:	2200      	movs	r2, #0
 80110f4:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80110f8:	2301      	movs	r3, #1
 80110fa:	4807      	ldr	r0, [pc, #28]	; (8011118 <StoreWS28xxDmx::SaveTestPattern(unsigned char)+0x2c>)
 80110fc:	9300      	str	r3, [sp, #0]
 80110fe:	f88d 1017 	strb.w	r1, [sp, #23]
 8011102:	2226      	movs	r2, #38	; 0x26
 8011104:	2103      	movs	r1, #3
 8011106:	6800      	ldr	r0, [r0, #0]
 8011108:	f10d 0317 	add.w	r3, sp, #23
 801110c:	f7ff fc88 	bl	8010a20 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8011110:	b007      	add	sp, #28
 8011112:	f85d fb04 	ldr.w	pc, [sp], #4
 8011116:	bf00      	nop
 8011118:	2000bdb8 			; <UNDEFINED> instruction: 0x2000bdb8

0801111c <non-virtual thunk to StoreWS28xxDmx::SaveTestPattern(unsigned char)>:
 801111c:	f1a0 0004 	sub.w	r0, r0, #4
 8011120:	e7e4      	b.n	80110ec <StoreWS28xxDmx::SaveTestPattern(unsigned char)>
 8011122:	bf00      	nop

08011124 <StoreWS28xxDmx::SaveMap(unsigned char)>:
 8011124:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8011126:	f44f 7300 	mov.w	r3, #512	; 0x200
 801112a:	2200      	movs	r2, #0
 801112c:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8011130:	2301      	movs	r3, #1
 8011132:	4807      	ldr	r0, [pc, #28]	; (8011150 <StoreWS28xxDmx::SaveMap(unsigned char)+0x2c>)
 8011134:	9300      	str	r3, [sp, #0]
 8011136:	f88d 1017 	strb.w	r1, [sp, #23]
 801113a:	2213      	movs	r2, #19
 801113c:	2103      	movs	r1, #3
 801113e:	6800      	ldr	r0, [r0, #0]
 8011140:	f10d 0317 	add.w	r3, sp, #23
 8011144:	f7ff fc6c 	bl	8010a20 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8011148:	b007      	add	sp, #28
 801114a:	f85d fb04 	ldr.w	pc, [sp], #4
 801114e:	bf00      	nop
 8011150:	2000bdb8 			; <UNDEFINED> instruction: 0x2000bdb8

08011154 <non-virtual thunk to StoreWS28xxDmx::SaveMap(unsigned char)>:
 8011154:	f1a0 0004 	sub.w	r0, r0, #4
 8011158:	e7e4      	b.n	8011124 <StoreWS28xxDmx::SaveMap(unsigned char)>
 801115a:	bf00      	nop

0801115c <StoreWS28xxDmx::SaveGroupingCount(unsigned short)>:
 801115c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 801115e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8011162:	2200      	movs	r2, #0
 8011164:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8011168:	2302      	movs	r3, #2
 801116a:	4807      	ldr	r0, [pc, #28]	; (8011188 <StoreWS28xxDmx::SaveGroupingCount(unsigned short)+0x2c>)
 801116c:	9300      	str	r3, [sp, #0]
 801116e:	f8ad 1016 	strh.w	r1, [sp, #22]
 8011172:	2211      	movs	r2, #17
 8011174:	2103      	movs	r1, #3
 8011176:	6800      	ldr	r0, [r0, #0]
 8011178:	f10d 0316 	add.w	r3, sp, #22
 801117c:	f7ff fc50 	bl	8010a20 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 8011180:	b007      	add	sp, #28
 8011182:	f85d fb04 	ldr.w	pc, [sp], #4
 8011186:	bf00      	nop
 8011188:	2000bdb8 			; <UNDEFINED> instruction: 0x2000bdb8

0801118c <non-virtual thunk to StoreWS28xxDmx::SaveGroupingCount(unsigned short)>:
 801118c:	f1a0 0004 	sub.w	r0, r0, #4
 8011190:	e7e4      	b.n	801115c <StoreWS28xxDmx::SaveGroupingCount(unsigned short)>
 8011192:	bf00      	nop

08011194 <StoreWS28xxDmx::SaveCount(unsigned short)>:
 8011194:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8011196:	2302      	movs	r3, #2
 8011198:	2200      	movs	r2, #0
 801119a:	e9cd 3201 	strd	r3, r2, [sp, #4]
 801119e:	4807      	ldr	r0, [pc, #28]	; (80111bc <StoreWS28xxDmx::SaveCount(unsigned short)+0x28>)
 80111a0:	9300      	str	r3, [sp, #0]
 80111a2:	f8ad 1016 	strh.w	r1, [sp, #22]
 80111a6:	2205      	movs	r2, #5
 80111a8:	2103      	movs	r1, #3
 80111aa:	6800      	ldr	r0, [r0, #0]
 80111ac:	f10d 0316 	add.w	r3, sp, #22
 80111b0:	f7ff fc36 	bl	8010a20 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 80111b4:	b007      	add	sp, #28
 80111b6:	f85d fb04 	ldr.w	pc, [sp], #4
 80111ba:	bf00      	nop
 80111bc:	2000bdb8 			; <UNDEFINED> instruction: 0x2000bdb8

080111c0 <non-virtual thunk to StoreWS28xxDmx::SaveCount(unsigned short)>:
 80111c0:	f1a0 0004 	sub.w	r0, r0, #4
 80111c4:	e7e6      	b.n	8011194 <StoreWS28xxDmx::SaveCount(unsigned short)>
 80111c6:	bf00      	nop

080111c8 <StoreWS28xxDmx::SaveType(unsigned char)>:
 80111c8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80111ca:	2301      	movs	r3, #1
 80111cc:	2200      	movs	r2, #0
 80111ce:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80111d2:	4807      	ldr	r0, [pc, #28]	; (80111f0 <StoreWS28xxDmx::SaveType(unsigned char)+0x28>)
 80111d4:	9300      	str	r3, [sp, #0]
 80111d6:	f88d 1017 	strb.w	r1, [sp, #23]
 80111da:	2204      	movs	r2, #4
 80111dc:	2103      	movs	r1, #3
 80111de:	6800      	ldr	r0, [r0, #0]
 80111e0:	f10d 0317 	add.w	r3, sp, #23
 80111e4:	f7ff fc1c 	bl	8010a20 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 80111e8:	b007      	add	sp, #28
 80111ea:	f85d fb04 	ldr.w	pc, [sp], #4
 80111ee:	bf00      	nop
 80111f0:	2000bdb8 			; <UNDEFINED> instruction: 0x2000bdb8

080111f4 <non-virtual thunk to StoreWS28xxDmx::SaveType(unsigned char)>:
 80111f4:	f1a0 0004 	sub.w	r0, r0, #4
 80111f8:	e7e6      	b.n	80111c8 <StoreWS28xxDmx::SaveType(unsigned char)>
 80111fa:	bf00      	nop

080111fc <StoreWS28xxDmx::~StoreWS28xxDmx()>:
 80111fc:	b510      	push	{r4, lr}
 80111fe:	4604      	mov	r4, r0
 8011200:	f004 fcbe 	bl	8015b80 <operator delete(void*)>
 8011204:	4620      	mov	r0, r4
 8011206:	bd10      	pop	{r4, pc}

08011208 <non-virtual thunk to StoreWS28xxDmx::~StoreWS28xxDmx()>:
 8011208:	f1a0 0004 	sub.w	r0, r0, #4
 801120c:	e7f6      	b.n	80111fc <StoreWS28xxDmx::~StoreWS28xxDmx()>
	...

08011210 <StoreWS28xxDmx::Copy(TWS28xxDmxParams*)>:
 8011210:	2300      	movs	r3, #0
 8011212:	b507      	push	{r0, r1, r2, lr}
 8011214:	4805      	ldr	r0, [pc, #20]	; (801122c <StoreWS28xxDmx::Copy(TWS28xxDmxParams*)+0x1c>)
 8011216:	9300      	str	r3, [sp, #0]
 8011218:	460a      	mov	r2, r1
 801121a:	2327      	movs	r3, #39	; 0x27
 801121c:	2103      	movs	r1, #3
 801121e:	6800      	ldr	r0, [r0, #0]
 8011220:	f7ff fc3e 	bl	8010aa0 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 8011224:	b003      	add	sp, #12
 8011226:	f85d fb04 	ldr.w	pc, [sp], #4
 801122a:	bf00      	nop
 801122c:	2000bdb8 			; <UNDEFINED> instruction: 0x2000bdb8

08011230 <StoreWS28xxDmx::StoreWS28xxDmx()>:
 8011230:	4a03      	ldr	r2, [pc, #12]	; (8011240 <StoreWS28xxDmx::StoreWS28xxDmx()+0x10>)
 8011232:	6002      	str	r2, [r0, #0]
 8011234:	3230      	adds	r2, #48	; 0x30
 8011236:	6042      	str	r2, [r0, #4]
 8011238:	4a02      	ldr	r2, [pc, #8]	; (8011244 <StoreWS28xxDmx::StoreWS28xxDmx()+0x14>)
 801123a:	6010      	str	r0, [r2, #0]
 801123c:	4770      	bx	lr
 801123e:	bf00      	nop
 8011240:	08019d2c 	stmdaeq	r1, {r2, r3, r5, r8, sl, fp, ip, pc}
 8011244:	2000bdd4 	ldrdcs	fp, [r0], -r4

08011248 <FlashRom::FlashRom()>:
 8011248:	4b07      	ldr	r3, [pc, #28]	; (8011268 <FlashRom::FlashRom()+0x20>)
 801124a:	b510      	push	{r4, lr}
 801124c:	6018      	str	r0, [r3, #0]
 801124e:	2301      	movs	r3, #1
 8011250:	4604      	mov	r4, r0
 8011252:	7003      	strb	r3, [r0, #0]
 8011254:	4b05      	ldr	r3, [pc, #20]	; (801126c <FlashRom::FlashRom()+0x24>)
 8011256:	4906      	ldr	r1, [pc, #24]	; (8011270 <FlashRom::FlashRom()+0x28>)
 8011258:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 801125c:	4805      	ldr	r0, [pc, #20]	; (8011274 <FlashRom::FlashRom()+0x2c>)
 801125e:	029a      	lsls	r2, r3, #10
 8011260:	f7f7 fe9e 	bl	8008fa0 <printf>
 8011264:	4620      	mov	r0, r4
 8011266:	bd10      	pop	{r4, pc}
 8011268:	2000bdd8 	ldrdcs	fp, [r0], -r8
 801126c:	1ffff700 	svcne	0x00fff700
 8011270:	08019d7c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r8, sl, fp, ip, pc}
 8011274:	08019d85 	stmdaeq	r1, {r0, r2, r7, r8, sl, fp, ip, pc}

08011278 <FlashRom::GetSize() const>:
 8011278:	4b02      	ldr	r3, [pc, #8]	; (8011284 <FlashRom::GetSize() const+0xc>)
 801127a:	f8b3 00e0 	ldrh.w	r0, [r3, #224]	; 0xe0
 801127e:	0280      	lsls	r0, r0, #10
 8011280:	4770      	bx	lr
 8011282:	bf00      	nop
 8011284:	1ffff700 	svcne	0x00fff700

08011288 <FlashRom::GetSectorSize() const>:
 8011288:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 801128c:	4770      	bx	lr

0801128e <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)>:
 801128e:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 8011292:	441a      	add	r2, r3
 8011294:	4293      	cmp	r3, r2
 8011296:	d004      	beq.n	80112a2 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)+0x14>
 8011298:	f851 0b04 	ldr.w	r0, [r1], #4
 801129c:	f843 0b04 	str.w	r0, [r3], #4
 80112a0:	e7f8      	b.n	8011294 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)+0x6>
 80112a2:	2200      	movs	r2, #0
 80112a4:	9b00      	ldr	r3, [sp, #0]
 80112a6:	2001      	movs	r0, #1
 80112a8:	601a      	str	r2, [r3, #0]
 80112aa:	4770      	bx	lr

080112ac <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)>:
 80112ac:	2000      	movs	r0, #0
 80112ae:	b538      	push	{r3, r4, r5, lr}
 80112b0:	4c47      	ldr	r4, [pc, #284]	; (80113d0 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x124>)
 80112b2:	6018      	str	r0, [r3, #0]
 80112b4:	6823      	ldr	r3, [r4, #0]
 80112b6:	2b04      	cmp	r3, #4
 80112b8:	f200 8082 	bhi.w	80113c0 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x114>
 80112bc:	e8df f003 	tbb	[pc, r3]
 80112c0:	78452003 	stmdavc	r5, {r0, r1, sp}^
 80112c4:	4b430080 	blmi	90d14cc <__exidx_end+0x10b6cc8>
 80112c8:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 80112cc:	6019      	str	r1, [r3, #0]
 80112ce:	4b42      	ldr	r3, [pc, #264]	; (80113d8 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 80112d0:	601a      	str	r2, [r3, #0]
 80112d2:	4b42      	ldr	r3, [pc, #264]	; (80113dc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x130>)
 80112d4:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 80112d8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80112dc:	4b40      	ldr	r3, [pc, #256]	; (80113e0 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 80112de:	d807      	bhi.n	80112f0 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x44>
 80112e0:	2201      	movs	r2, #1
 80112e2:	701a      	strb	r2, [r3, #0]
 80112e4:	f004 ffc2 	bl	801626c <fmc_bank0_unlock>
 80112e8:	2301      	movs	r3, #1
 80112ea:	6023      	str	r3, [r4, #0]
 80112ec:	2000      	movs	r0, #0
 80112ee:	e026      	b.n	801133e <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x92>
 80112f0:	4a3c      	ldr	r2, [pc, #240]	; (80113e4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x138>)
 80112f2:	4291      	cmp	r1, r2
 80112f4:	d3f4      	bcc.n	80112e0 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x34>
 80112f6:	2200      	movs	r2, #0
 80112f8:	701a      	strb	r2, [r3, #0]
 80112fa:	f004 ffc5 	bl	8016288 <fmc_bank1_unlock>
 80112fe:	e7f3      	b.n	80112e8 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 8011300:	4d37      	ldr	r5, [pc, #220]	; (80113e0 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 8011302:	782b      	ldrb	r3, [r5, #0]
 8011304:	b15b      	cbz	r3, 801131e <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x72>
 8011306:	f004 ffdd 	bl	80162c4 <fmc_bank0_state_get>
 801130a:	2801      	cmp	r0, #1
 801130c:	d0ee      	beq.n	80112ec <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x40>
 801130e:	7829      	ldrb	r1, [r5, #0]
 8011310:	4b35      	ldr	r3, [pc, #212]	; (80113e8 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 8011312:	b939      	cbnz	r1, 8011324 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x78>
 8011314:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8011316:	f022 0202 	bic.w	r2, r2, #2
 801131a:	651a      	str	r2, [r3, #80]	; 0x50
 801131c:	e006      	b.n	801132c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x80>
 801131e:	f004 ffe5 	bl	80162ec <fmc_bank1_state_get>
 8011322:	e7f2      	b.n	801130a <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x5e>
 8011324:	691a      	ldr	r2, [r3, #16]
 8011326:	f022 0202 	bic.w	r2, r2, #2
 801132a:	611a      	str	r2, [r3, #16]
 801132c:	4b2a      	ldr	r3, [pc, #168]	; (80113d8 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 801132e:	681b      	ldr	r3, [r3, #0]
 8011330:	b94b      	cbnz	r3, 8011346 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x9a>
 8011332:	b129      	cbz	r1, 8011340 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x94>
 8011334:	f004 ffb6 	bl	80162a4 <fmc_bank0_lock>
 8011338:	2300      	movs	r3, #0
 801133a:	2001      	movs	r0, #1
 801133c:	6023      	str	r3, [r4, #0]
 801133e:	bd38      	pop	{r3, r4, r5, pc}
 8011340:	f004 ffb8 	bl	80162b4 <fmc_bank1_lock>
 8011344:	e7f8      	b.n	8011338 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x8c>
 8011346:	2302      	movs	r3, #2
 8011348:	e7cf      	b.n	80112ea <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3e>
 801134a:	4923      	ldr	r1, [pc, #140]	; (80113d8 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 801134c:	680b      	ldr	r3, [r1, #0]
 801134e:	2b00      	cmp	r3, #0
 8011350:	d0ca      	beq.n	80112e8 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 8011352:	4b23      	ldr	r3, [pc, #140]	; (80113e0 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 8011354:	4a1f      	ldr	r2, [pc, #124]	; (80113d4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x128>)
 8011356:	7818      	ldrb	r0, [r3, #0]
 8011358:	4b23      	ldr	r3, [pc, #140]	; (80113e8 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 801135a:	b190      	cbz	r0, 8011382 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0xd6>
 801135c:	6918      	ldr	r0, [r3, #16]
 801135e:	f040 0002 	orr.w	r0, r0, #2
 8011362:	6118      	str	r0, [r3, #16]
 8011364:	6810      	ldr	r0, [r2, #0]
 8011366:	6158      	str	r0, [r3, #20]
 8011368:	6918      	ldr	r0, [r3, #16]
 801136a:	f040 0040 	orr.w	r0, r0, #64	; 0x40
 801136e:	6118      	str	r0, [r3, #16]
 8011370:	680b      	ldr	r3, [r1, #0]
 8011372:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8011376:	600b      	str	r3, [r1, #0]
 8011378:	6813      	ldr	r3, [r2, #0]
 801137a:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 801137e:	6013      	str	r3, [r2, #0]
 8011380:	e7b2      	b.n	80112e8 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 8011382:	6d18      	ldr	r0, [r3, #80]	; 0x50
 8011384:	f040 0002 	orr.w	r0, r0, #2
 8011388:	6518      	str	r0, [r3, #80]	; 0x50
 801138a:	6810      	ldr	r0, [r2, #0]
 801138c:	6558      	str	r0, [r3, #84]	; 0x54
 801138e:	69dd      	ldr	r5, [r3, #28]
 8011390:	07ad      	lsls	r5, r5, #30
 8011392:	bf48      	it	mi
 8011394:	6158      	strmi	r0, [r3, #20]
 8011396:	4814      	ldr	r0, [pc, #80]	; (80113e8 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 8011398:	6d03      	ldr	r3, [r0, #80]	; 0x50
 801139a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801139e:	6503      	str	r3, [r0, #80]	; 0x50
 80113a0:	680b      	ldr	r3, [r1, #0]
 80113a2:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
 80113a6:	600b      	str	r3, [r1, #0]
 80113a8:	6813      	ldr	r3, [r2, #0]
 80113aa:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 80113ae:	e7e6      	b.n	801137e <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0xd2>
 80113b0:	4b0b      	ldr	r3, [pc, #44]	; (80113e0 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 80113b2:	781a      	ldrb	r2, [r3, #0]
 80113b4:	4b0c      	ldr	r3, [pc, #48]	; (80113e8 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 80113b6:	b132      	cbz	r2, 80113c6 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x11a>
 80113b8:	691a      	ldr	r2, [r3, #16]
 80113ba:	f022 0201 	bic.w	r2, r2, #1
 80113be:	611a      	str	r2, [r3, #16]
 80113c0:	2000      	movs	r0, #0
 80113c2:	6020      	str	r0, [r4, #0]
 80113c4:	e7bb      	b.n	801133e <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x92>
 80113c6:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 80113c8:	f022 0201 	bic.w	r2, r2, #1
 80113cc:	651a      	str	r2, [r3, #80]	; 0x50
 80113ce:	e7f7      	b.n	80113c0 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x114>
 80113d0:	2000bde0 	andcs	fp, r0, r0, ror #27
 80113d4:	2000bde4 	andcs	fp, r0, r4, ror #27
 80113d8:	2000bdf0 	strdcs	fp, [r0], -r0
 80113dc:	1ffff700 	svcne	0x00fff700
 80113e0:	2000bdec 	andcs	fp, r0, ip, ror #27
 80113e4:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 80113e8:	40022000 	andmi	r2, r2, r0

080113ec <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)>:
 80113ec:	b570      	push	{r4, r5, r6, lr}
 80113ee:	2400      	movs	r4, #0
 80113f0:	9804      	ldr	r0, [sp, #16]
 80113f2:	6004      	str	r4, [r0, #0]
 80113f4:	4c48      	ldr	r4, [pc, #288]	; (8011518 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x12c>)
 80113f6:	6820      	ldr	r0, [r4, #0]
 80113f8:	2804      	cmp	r0, #4
 80113fa:	d848      	bhi.n	801148e <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xa2>
 80113fc:	e8df f000 	tbb	[pc, r0]
 8011400:	22847c03 	addcs	r7, r4, #768	; 0x300
 8011404:	48450047 	stmdami	r5, {r0, r1, r2, r6}^
 8011408:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 801140c:	6001      	str	r1, [r0, #0]
 801140e:	4844      	ldr	r0, [pc, #272]	; (8011520 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 8011410:	6003      	str	r3, [r0, #0]
 8011412:	4b44      	ldr	r3, [pc, #272]	; (8011524 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 8011414:	601a      	str	r2, [r3, #0]
 8011416:	4b44      	ldr	r3, [pc, #272]	; (8011528 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x13c>)
 8011418:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 801141c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8011420:	4b42      	ldr	r3, [pc, #264]	; (801152c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 8011422:	d807      	bhi.n	8011434 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x48>
 8011424:	2201      	movs	r2, #1
 8011426:	701a      	strb	r2, [r3, #0]
 8011428:	f004 ff20 	bl	801626c <fmc_bank0_unlock>
 801142c:	2303      	movs	r3, #3
 801142e:	6023      	str	r3, [r4, #0]
 8011430:	2000      	movs	r0, #0
 8011432:	e026      	b.n	8011482 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x96>
 8011434:	4a3e      	ldr	r2, [pc, #248]	; (8011530 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x144>)
 8011436:	4291      	cmp	r1, r2
 8011438:	d3f4      	bcc.n	8011424 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x38>
 801143a:	2200      	movs	r2, #0
 801143c:	701a      	strb	r2, [r3, #0]
 801143e:	f004 ff23 	bl	8016288 <fmc_bank1_unlock>
 8011442:	e7f3      	b.n	801142c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 8011444:	4d39      	ldr	r5, [pc, #228]	; (801152c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 8011446:	782b      	ldrb	r3, [r5, #0]
 8011448:	b15b      	cbz	r3, 8011462 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x76>
 801144a:	f004 ff3b 	bl	80162c4 <fmc_bank0_state_get>
 801144e:	2801      	cmp	r0, #1
 8011450:	d0ee      	beq.n	8011430 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x44>
 8011452:	7829      	ldrb	r1, [r5, #0]
 8011454:	4b37      	ldr	r3, [pc, #220]	; (8011534 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 8011456:	b939      	cbnz	r1, 8011468 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x7c>
 8011458:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 801145a:	f022 0201 	bic.w	r2, r2, #1
 801145e:	651a      	str	r2, [r3, #80]	; 0x50
 8011460:	e006      	b.n	8011470 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x84>
 8011462:	f004 ff43 	bl	80162ec <fmc_bank1_state_get>
 8011466:	e7f2      	b.n	801144e <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x62>
 8011468:	691a      	ldr	r2, [r3, #16]
 801146a:	f022 0201 	bic.w	r2, r2, #1
 801146e:	611a      	str	r2, [r3, #16]
 8011470:	4b2c      	ldr	r3, [pc, #176]	; (8011524 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 8011472:	681b      	ldr	r3, [r3, #0]
 8011474:	b94b      	cbnz	r3, 801148a <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x9e>
 8011476:	b129      	cbz	r1, 8011484 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x98>
 8011478:	f004 ff14 	bl	80162a4 <fmc_bank0_lock>
 801147c:	2300      	movs	r3, #0
 801147e:	2001      	movs	r0, #1
 8011480:	6023      	str	r3, [r4, #0]
 8011482:	bd70      	pop	{r4, r5, r6, pc}
 8011484:	f004 ff16 	bl	80162b4 <fmc_bank1_lock>
 8011488:	e7f8      	b.n	801147c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x90>
 801148a:	2304      	movs	r3, #4
 801148c:	e7cf      	b.n	801142e <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x42>
 801148e:	4a25      	ldr	r2, [pc, #148]	; (8011524 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 8011490:	6813      	ldr	r3, [r2, #0]
 8011492:	2b03      	cmp	r3, #3
 8011494:	d91a      	bls.n	80114cc <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xe0>
 8011496:	4b25      	ldr	r3, [pc, #148]	; (801152c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 8011498:	7819      	ldrb	r1, [r3, #0]
 801149a:	4b26      	ldr	r3, [pc, #152]	; (8011534 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 801149c:	b189      	cbz	r1, 80114c2 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xd6>
 801149e:	6919      	ldr	r1, [r3, #16]
 80114a0:	f041 0101 	orr.w	r1, r1, #1
 80114a4:	6119      	str	r1, [r3, #16]
 80114a6:	4d1e      	ldr	r5, [pc, #120]	; (8011520 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 80114a8:	481c      	ldr	r0, [pc, #112]	; (801151c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x130>)
 80114aa:	6829      	ldr	r1, [r5, #0]
 80114ac:	6803      	ldr	r3, [r0, #0]
 80114ae:	f851 6b04 	ldr.w	r6, [r1], #4
 80114b2:	f843 6b04 	str.w	r6, [r3], #4
 80114b6:	6003      	str	r3, [r0, #0]
 80114b8:	6813      	ldr	r3, [r2, #0]
 80114ba:	6029      	str	r1, [r5, #0]
 80114bc:	3b04      	subs	r3, #4
 80114be:	6013      	str	r3, [r2, #0]
 80114c0:	e7b4      	b.n	801142c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 80114c2:	6d19      	ldr	r1, [r3, #80]	; 0x50
 80114c4:	f041 0101 	orr.w	r1, r1, #1
 80114c8:	6519      	str	r1, [r3, #80]	; 0x50
 80114ca:	e7ec      	b.n	80114a6 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xba>
 80114cc:	2b00      	cmp	r3, #0
 80114ce:	d0ad      	beq.n	801142c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 80114d0:	4b16      	ldr	r3, [pc, #88]	; (801152c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 80114d2:	781a      	ldrb	r2, [r3, #0]
 80114d4:	4b17      	ldr	r3, [pc, #92]	; (8011534 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 80114d6:	b152      	cbz	r2, 80114ee <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x102>
 80114d8:	691a      	ldr	r2, [r3, #16]
 80114da:	f042 0201 	orr.w	r2, r2, #1
 80114de:	611a      	str	r2, [r3, #16]
 80114e0:	4a0f      	ldr	r2, [pc, #60]	; (8011520 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 80114e2:	4b0e      	ldr	r3, [pc, #56]	; (801151c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x130>)
 80114e4:	6812      	ldr	r2, [r2, #0]
 80114e6:	681b      	ldr	r3, [r3, #0]
 80114e8:	6812      	ldr	r2, [r2, #0]
 80114ea:	601a      	str	r2, [r3, #0]
 80114ec:	e79e      	b.n	801142c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 80114ee:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 80114f0:	f042 0201 	orr.w	r2, r2, #1
 80114f4:	651a      	str	r2, [r3, #80]	; 0x50
 80114f6:	e7f3      	b.n	80114e0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xf4>
 80114f8:	4b0c      	ldr	r3, [pc, #48]	; (801152c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 80114fa:	781a      	ldrb	r2, [r3, #0]
 80114fc:	4b0d      	ldr	r3, [pc, #52]	; (8011534 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 80114fe:	b132      	cbz	r2, 801150e <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x122>
 8011500:	691a      	ldr	r2, [r3, #16]
 8011502:	f022 0202 	bic.w	r2, r2, #2
 8011506:	611a      	str	r2, [r3, #16]
 8011508:	2000      	movs	r0, #0
 801150a:	6020      	str	r0, [r4, #0]
 801150c:	e7b9      	b.n	8011482 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x96>
 801150e:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8011510:	f022 0202 	bic.w	r2, r2, #2
 8011514:	651a      	str	r2, [r3, #80]	; 0x50
 8011516:	e7f7      	b.n	8011508 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x11c>
 8011518:	2000bde0 	andcs	fp, r0, r0, ror #27
 801151c:	2000bddc 	ldrdcs	fp, [r0], -ip
 8011520:	2000bde8 	andcs	fp, r0, r8, ror #27
 8011524:	2000bdf0 	strdcs	fp, [r0], -r0
 8011528:	1ffff700 	svcne	0x00fff700
 801152c:	2000bdec 	andcs	fp, r0, ip, ror #27
 8011530:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 8011534:	40022000 	andmi	r2, r2, r0

08011538 <net_init>:
 8011538:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801153c:	460c      	mov	r4, r1
 801153e:	4616      	mov	r6, r2
 8011540:	9f06      	ldr	r7, [sp, #24]
 8011542:	4a22      	ldr	r2, [pc, #136]	; (80115cc <net_init+0x94>)
 8011544:	461d      	mov	r5, r3
 8011546:	1e43      	subs	r3, r0, #1
 8011548:	3005      	adds	r0, #5
 801154a:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 801154e:	4283      	cmp	r3, r0
 8011550:	f802 1b01 	strb.w	r1, [r2], #1
 8011554:	d1f9      	bne.n	801154a <net_init+0x12>
 8011556:	4623      	mov	r3, r4
 8011558:	4a1d      	ldr	r2, [pc, #116]	; (80115d0 <net_init+0x98>)
 801155a:	f104 010c 	add.w	r1, r4, #12
 801155e:	f813 0b01 	ldrb.w	r0, [r3], #1
 8011562:	428b      	cmp	r3, r1
 8011564:	f802 0b01 	strb.w	r0, [r2], #1
 8011568:	d1f9      	bne.n	801155e <net_init+0x26>
 801156a:	f04f 0800 	mov.w	r8, #0
 801156e:	4918      	ldr	r1, [pc, #96]	; (80115d0 <net_init+0x98>)
 8011570:	4816      	ldr	r0, [pc, #88]	; (80115cc <net_init+0x94>)
 8011572:	f002 fdce 	bl	8014112 <ip_init>
 8011576:	4815      	ldr	r0, [pc, #84]	; (80115cc <net_init+0x94>)
 8011578:	f000 f8d8 	bl	801172c <rfc3927_init>
 801157c:	f887 8000 	strb.w	r8, [r7]
 8011580:	782b      	ldrb	r3, [r5, #0]
 8011582:	b163      	cbz	r3, 801159e <net_init+0x66>
 8011584:	4632      	mov	r2, r6
 8011586:	4912      	ldr	r1, [pc, #72]	; (80115d0 <net_init+0x98>)
 8011588:	4810      	ldr	r0, [pc, #64]	; (80115cc <net_init+0x94>)
 801158a:	f002 fad3 	bl	8013b34 <dhcp_client>
 801158e:	4540      	cmp	r0, r8
 8011590:	da05      	bge.n	801159e <net_init+0x66>
 8011592:	480f      	ldr	r0, [pc, #60]	; (80115d0 <net_init+0x98>)
 8011594:	f885 8000 	strb.w	r8, [r5]
 8011598:	f000 f8d4 	bl	8011744 <rfc3927>
 801159c:	7038      	strb	r0, [r7, #0]
 801159e:	490c      	ldr	r1, [pc, #48]	; (80115d0 <net_init+0x98>)
 80115a0:	480a      	ldr	r0, [pc, #40]	; (80115cc <net_init+0x94>)
 80115a2:	f002 f8d7 	bl	8013754 <arp_init>
 80115a6:	480a      	ldr	r0, [pc, #40]	; (80115d0 <net_init+0x98>)
 80115a8:	f002 fdaa 	bl	8014100 <ip_set_ip>
 80115ac:	f000 fa32 	bl	8011a14 <tcp_init>
 80115b0:	4a07      	ldr	r2, [pc, #28]	; (80115d0 <net_init+0x98>)
 80115b2:	1e63      	subs	r3, r4, #1
 80115b4:	340b      	adds	r4, #11
 80115b6:	f812 1b01 	ldrb.w	r1, [r2], #1
 80115ba:	f803 1f01 	strb.w	r1, [r3, #1]!
 80115be:	429c      	cmp	r4, r3
 80115c0:	d1f9      	bne.n	80115b6 <net_init+0x7e>
 80115c2:	782a      	ldrb	r2, [r5, #0]
 80115c4:	4b03      	ldr	r3, [pc, #12]	; (80115d4 <net_init+0x9c>)
 80115c6:	701a      	strb	r2, [r3, #0]
 80115c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80115cc:	2000be00 	andcs	fp, r0, r0, lsl #28
 80115d0:	2000bdf4 	strdcs	fp, [r0], -r4
 80115d4:	2000be06 	andcs	fp, r0, r6, lsl #28

080115d8 <net_shutdown>:
 80115d8:	b508      	push	{r3, lr}
 80115da:	f002 fda5 	bl	8014128 <ip_shutdown>
 80115de:	4b04      	ldr	r3, [pc, #16]	; (80115f0 <net_shutdown+0x18>)
 80115e0:	781b      	ldrb	r3, [r3, #0]
 80115e2:	b11b      	cbz	r3, 80115ec <net_shutdown+0x14>
 80115e4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80115e8:	f002 bbac 	b.w	8013d44 <dhcp_client_release>
 80115ec:	bd08      	pop	{r3, pc}
 80115ee:	bf00      	nop
 80115f0:	2000be06 	andcs	fp, r0, r6, lsl #28

080115f4 <net_set_ip>:
 80115f4:	b510      	push	{r4, lr}
 80115f6:	4c05      	ldr	r4, [pc, #20]	; (801160c <net_set_ip+0x18>)
 80115f8:	6020      	str	r0, [r4, #0]
 80115fa:	4621      	mov	r1, r4
 80115fc:	4804      	ldr	r0, [pc, #16]	; (8011610 <net_set_ip+0x1c>)
 80115fe:	f002 f8a9 	bl	8013754 <arp_init>
 8011602:	4620      	mov	r0, r4
 8011604:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011608:	f002 bd7a 	b.w	8014100 <ip_set_ip>
 801160c:	2000bdf4 	strdcs	fp, [r0], -r4
 8011610:	2000be00 	andcs	fp, r0, r0, lsl #28

08011614 <net_set_gw>:
 8011614:	4b02      	ldr	r3, [pc, #8]	; (8011620 <net_set_gw+0xc>)
 8011616:	6098      	str	r0, [r3, #8]
 8011618:	4618      	mov	r0, r3
 801161a:	f002 bd71 	b.w	8014100 <ip_set_ip>
 801161e:	bf00      	nop
 8011620:	2000bdf4 	strdcs	fp, [r0], -r4

08011624 <net_set_dhcp>:
 8011624:	b570      	push	{r4, r5, r6, lr}
 8011626:	2400      	movs	r4, #0
 8011628:	4605      	mov	r5, r0
 801162a:	7014      	strb	r4, [r2, #0]
 801162c:	4616      	mov	r6, r2
 801162e:	4810      	ldr	r0, [pc, #64]	; (8011670 <net_set_dhcp+0x4c>)
 8011630:	460a      	mov	r2, r1
 8011632:	4910      	ldr	r1, [pc, #64]	; (8011674 <net_set_dhcp+0x50>)
 8011634:	f002 fa7e 	bl	8013b34 <dhcp_client>
 8011638:	42a0      	cmp	r0, r4
 801163a:	da17      	bge.n	801166c <net_set_dhcp+0x48>
 801163c:	480d      	ldr	r0, [pc, #52]	; (8011674 <net_set_dhcp+0x50>)
 801163e:	f000 f881 	bl	8011744 <rfc3927>
 8011642:	7030      	strb	r0, [r6, #0]
 8011644:	490b      	ldr	r1, [pc, #44]	; (8011674 <net_set_dhcp+0x50>)
 8011646:	480a      	ldr	r0, [pc, #40]	; (8011670 <net_set_dhcp+0x4c>)
 8011648:	f002 f884 	bl	8013754 <arp_init>
 801164c:	4809      	ldr	r0, [pc, #36]	; (8011674 <net_set_dhcp+0x50>)
 801164e:	f002 fd57 	bl	8014100 <ip_set_ip>
 8011652:	4a08      	ldr	r2, [pc, #32]	; (8011674 <net_set_dhcp+0x50>)
 8011654:	1e6b      	subs	r3, r5, #1
 8011656:	350b      	adds	r5, #11
 8011658:	f812 1b01 	ldrb.w	r1, [r2], #1
 801165c:	f803 1f01 	strb.w	r1, [r3, #1]!
 8011660:	42ab      	cmp	r3, r5
 8011662:	d1f9      	bne.n	8011658 <net_set_dhcp+0x34>
 8011664:	4b04      	ldr	r3, [pc, #16]	; (8011678 <net_set_dhcp+0x54>)
 8011666:	4620      	mov	r0, r4
 8011668:	701c      	strb	r4, [r3, #0]
 801166a:	bd70      	pop	{r4, r5, r6, pc}
 801166c:	2401      	movs	r4, #1
 801166e:	e7e9      	b.n	8011644 <net_set_dhcp+0x20>
 8011670:	2000be00 	andcs	fp, r0, r0, lsl #28
 8011674:	2000bdf4 	strdcs	fp, [r0], -r4
 8011678:	2000be06 	andcs	fp, r0, r6, lsl #28

0801167c <net_dhcp_release>:
 801167c:	b508      	push	{r3, lr}
 801167e:	f002 fb61 	bl	8013d44 <dhcp_client_release>
 8011682:	2200      	movs	r2, #0
 8011684:	4b01      	ldr	r3, [pc, #4]	; (801168c <net_dhcp_release+0x10>)
 8011686:	701a      	strb	r2, [r3, #0]
 8011688:	bd08      	pop	{r3, pc}
 801168a:	bf00      	nop
 801168c:	2000be06 	andcs	fp, r0, r6, lsl #28

08011690 <net_set_zeroconf>:
 8011690:	b538      	push	{r3, r4, r5, lr}
 8011692:	4604      	mov	r4, r0
 8011694:	480c      	ldr	r0, [pc, #48]	; (80116c8 <net_set_zeroconf+0x38>)
 8011696:	f000 f855 	bl	8011744 <rfc3927>
 801169a:	4605      	mov	r5, r0
 801169c:	b190      	cbz	r0, 80116c4 <net_set_zeroconf+0x34>
 801169e:	490a      	ldr	r1, [pc, #40]	; (80116c8 <net_set_zeroconf+0x38>)
 80116a0:	480a      	ldr	r0, [pc, #40]	; (80116cc <net_set_zeroconf+0x3c>)
 80116a2:	f002 f857 	bl	8013754 <arp_init>
 80116a6:	4808      	ldr	r0, [pc, #32]	; (80116c8 <net_set_zeroconf+0x38>)
 80116a8:	f002 fd2a 	bl	8014100 <ip_set_ip>
 80116ac:	4a06      	ldr	r2, [pc, #24]	; (80116c8 <net_set_zeroconf+0x38>)
 80116ae:	1e63      	subs	r3, r4, #1
 80116b0:	340b      	adds	r4, #11
 80116b2:	f812 1b01 	ldrb.w	r1, [r2], #1
 80116b6:	f803 1f01 	strb.w	r1, [r3, #1]!
 80116ba:	42a3      	cmp	r3, r4
 80116bc:	d1f9      	bne.n	80116b2 <net_set_zeroconf+0x22>
 80116be:	2200      	movs	r2, #0
 80116c0:	4b03      	ldr	r3, [pc, #12]	; (80116d0 <net_set_zeroconf+0x40>)
 80116c2:	701a      	strb	r2, [r3, #0]
 80116c4:	4628      	mov	r0, r5
 80116c6:	bd38      	pop	{r3, r4, r5, pc}
 80116c8:	2000bdf4 	strdcs	fp, [r0], -r4
 80116cc:	2000be00 	andcs	fp, r0, r0, lsl #28
 80116d0:	2000be06 	andcs	fp, r0, r6, lsl #28

080116d4 <net_handle>:
 80116d4:	b510      	push	{r4, lr}
 80116d6:	4c0c      	ldr	r4, [pc, #48]	; (8011708 <net_handle+0x34>)
 80116d8:	4620      	mov	r0, r4
 80116da:	f005 fb49 	bl	8016d70 <emac_eth_recv>
 80116de:	2800      	cmp	r0, #0
 80116e0:	dd07      	ble.n	80116f2 <net_handle+0x1e>
 80116e2:	6820      	ldr	r0, [r4, #0]
 80116e4:	8983      	ldrh	r3, [r0, #12]
 80116e6:	2b08      	cmp	r3, #8
 80116e8:	d107      	bne.n	80116fa <net_handle+0x26>
 80116ea:	f002 fd24 	bl	8014136 <ip_handle>
 80116ee:	f005 fb53 	bl	8016d98 <emac_free_pkt>
 80116f2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80116f6:	f000 b809 	b.w	801170c <net_timers_run>
 80116fa:	f5b3 6fc1 	cmp.w	r3, #1544	; 0x608
 80116fe:	d1f6      	bne.n	80116ee <net_handle+0x1a>
 8011700:	f002 f8ae 	bl	8013860 <arp_handle>
 8011704:	e7f3      	b.n	80116ee <net_handle+0x1a>
 8011706:	bf00      	nop
 8011708:	2000be08 	andcs	fp, r0, r8, lsl #28

0801170c <net_timers_run>:
 801170c:	4b05      	ldr	r3, [pc, #20]	; (8011724 <net_timers_run+0x18>)
 801170e:	4a06      	ldr	r2, [pc, #24]	; (8011728 <net_timers_run+0x1c>)
 8011710:	681b      	ldr	r3, [r3, #0]
 8011712:	6811      	ldr	r1, [r2, #0]
 8011714:	4299      	cmp	r1, r3
 8011716:	d803      	bhi.n	8011720 <net_timers_run+0x14>
 8011718:	3364      	adds	r3, #100	; 0x64
 801171a:	6013      	str	r3, [r2, #0]
 801171c:	f002 bc52 	b.w	8013fc4 <igmp_timer>
 8011720:	4770      	bx	lr
 8011722:	bf00      	nop
 8011724:	20013e04 	andcs	r3, r1, r4, lsl #28
 8011728:	2000be0c 	andcs	fp, r0, ip, lsl #28

0801172c <rfc3927_init>:
 801172c:	4b04      	ldr	r3, [pc, #16]	; (8011740 <rfc3927_init+0x14>)
 801172e:	1d82      	adds	r2, r0, #6
 8011730:	4290      	cmp	r0, r2
 8011732:	d100      	bne.n	8011736 <rfc3927_init+0xa>
 8011734:	4770      	bx	lr
 8011736:	f810 1b01 	ldrb.w	r1, [r0], #1
 801173a:	f803 1b01 	strb.w	r1, [r3], #1
 801173e:	e7f7      	b.n	8011730 <rfc3927_init+0x4>
 8011740:	2000be10 	andcs	fp, r0, r0, lsl lr

08011744 <rfc3927>:
 8011744:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011748:	4605      	mov	r5, r0
 801174a:	26ff      	movs	r6, #255	; 0xff
 801174c:	4b18      	ldr	r3, [pc, #96]	; (80117b0 <rfc3927+0x6c>)
 801174e:	4f19      	ldr	r7, [pc, #100]	; (80117b4 <rfc3927+0x70>)
 8011750:	791a      	ldrb	r2, [r3, #4]
 8011752:	78dc      	ldrb	r4, [r3, #3]
 8011754:	f8df 8060 	ldr.w	r8, [pc, #96]	; 80117b8 <rfc3927+0x74>
 8011758:	eb04 2402 	add.w	r4, r4, r2, lsl #8
 801175c:	f8d7 9000 	ldr.w	r9, [r7]
 8011760:	f8df b058 	ldr.w	fp, [pc, #88]	; 80117bc <rfc3927+0x78>
 8011764:	f8df a058 	ldr.w	sl, [pc, #88]	; 80117c0 <rfc3927+0x7c>
 8011768:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
 801176c:	4659      	mov	r1, fp
 801176e:	4620      	mov	r0, r4
 8011770:	f002 f8c4 	bl	80138fc <arp_cache_lookup>
 8011774:	b938      	cbnz	r0, 8011786 <rfc3927+0x42>
 8011776:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801177a:	2001      	movs	r0, #1
 801177c:	602c      	str	r4, [r5, #0]
 801177e:	60ac      	str	r4, [r5, #8]
 8011780:	606b      	str	r3, [r5, #4]
 8011782:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011786:	ba24      	rev	r4, r4
 8011788:	3401      	adds	r4, #1
 801178a:	3e01      	subs	r6, #1
 801178c:	ba24      	rev	r4, r4
 801178e:	b2b6      	uxth	r6, r6
 8011790:	4554      	cmp	r4, sl
 8011792:	bf08      	it	eq
 8011794:	4644      	moveq	r4, r8
 8011796:	b12e      	cbz	r6, 80117a4 <rfc3927+0x60>
 8011798:	683b      	ldr	r3, [r7, #0]
 801179a:	eba3 0309 	sub.w	r3, r3, r9
 801179e:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 80117a2:	d3e3      	bcc.n	801176c <rfc3927+0x28>
 80117a4:	2000      	movs	r0, #0
 80117a6:	e9c5 0001 	strd	r0, r0, [r5, #4]
 80117aa:	6028      	str	r0, [r5, #0]
 80117ac:	e7e9      	b.n	8011782 <rfc3927+0x3e>
 80117ae:	bf00      	nop
 80117b0:	2000be10 	andcs	fp, r0, r0, lsl lr
 80117b4:	20013e04 	andcs	r3, r1, r4, lsl #28
 80117b8:	0100fea9 	smlatbeq	r0, r9, lr, pc	; <UNPREDICTABLE>
 80117bc:	2000be18 	andcs	fp, r0, r8, lsl lr
 80117c0:	fffefea9 			; <UNDEFINED> instruction: 0xfffefea9

080117c4 <_init_tcb>:
 80117c4:	b510      	push	{r4, lr}
 80117c6:	4603      	mov	r3, r0
 80117c8:	2400      	movs	r4, #0
 80117ca:	f100 0244 	add.w	r2, r0, #68	; 0x44
 80117ce:	4293      	cmp	r3, r2
 80117d0:	d10d      	bne.n	80117ee <_init_tcb+0x2a>
 80117d2:	4b08      	ldr	r3, [pc, #32]	; (80117f4 <_init_tcb+0x30>)
 80117d4:	f640 3268 	movw	r2, #2920	; 0xb68
 80117d8:	681b      	ldr	r3, [r3, #0]
 80117da:	8702      	strh	r2, [r0, #56]	; 0x38
 80117dc:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80117e0:	6283      	str	r3, [r0, #40]	; 0x28
 80117e2:	6243      	str	r3, [r0, #36]	; 0x24
 80117e4:	2301      	movs	r3, #1
 80117e6:	8001      	strh	r1, [r0, #0]
 80117e8:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
 80117ec:	bd10      	pop	{r4, pc}
 80117ee:	f803 4b01 	strb.w	r4, [r3], #1
 80117f2:	e7ec      	b.n	80117ce <_init_tcb+0xa>
 80117f4:	20013e04 	andcs	r3, r1, r4, lsl #28

080117f8 <memcpy.isra.0>:
 80117f8:	3801      	subs	r0, #1
 80117fa:	440a      	add	r2, r1
 80117fc:	4291      	cmp	r1, r2
 80117fe:	d100      	bne.n	8011802 <memcpy.isra.0+0xa>
 8011800:	4770      	bx	lr
 8011802:	f811 3b01 	ldrb.w	r3, [r1], #1
 8011806:	f800 3f01 	strb.w	r3, [r0, #1]!
 801180a:	e7f7      	b.n	80117fc <memcpy.isra.0+0x4>

0801180c <_bswap32>:
 801180c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801180e:	2204      	movs	r2, #4
 8011810:	f100 052a 	add.w	r5, r0, #42	; 0x2a
 8011814:	4629      	mov	r1, r5
 8011816:	4604      	mov	r4, r0
 8011818:	eb0d 0002 	add.w	r0, sp, r2
 801181c:	f7ff ffec 	bl	80117f8 <memcpy.isra.0>
 8011820:	2204      	movs	r2, #4
 8011822:	9b01      	ldr	r3, [sp, #4]
 8011824:	eb0d 0102 	add.w	r1, sp, r2
 8011828:	ba1b      	rev	r3, r3
 801182a:	4628      	mov	r0, r5
 801182c:	9301      	str	r3, [sp, #4]
 801182e:	f7ff ffe3 	bl	80117f8 <memcpy.isra.0>
 8011832:	2204      	movs	r2, #4
 8011834:	3426      	adds	r4, #38	; 0x26
 8011836:	eb0d 0002 	add.w	r0, sp, r2
 801183a:	4621      	mov	r1, r4
 801183c:	f7ff ffdc 	bl	80117f8 <memcpy.isra.0>
 8011840:	2204      	movs	r2, #4
 8011842:	9b01      	ldr	r3, [sp, #4]
 8011844:	4620      	mov	r0, r4
 8011846:	ba1b      	rev	r3, r3
 8011848:	eb0d 0102 	add.w	r1, sp, r2
 801184c:	9301      	str	r3, [sp, #4]
 801184e:	f7ff ffd3 	bl	80117f8 <memcpy.isra.0>
 8011852:	b003      	add	sp, #12
 8011854:	bd30      	pop	{r4, r5, pc}
	...

08011858 <_tcp_send_package>:
 8011858:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801185c:	7a0b      	ldrb	r3, [r1, #8]
 801185e:	4605      	mov	r5, r0
 8011860:	f013 0f02 	tst.w	r3, #2
 8011864:	bf0c      	ite	eq
 8011866:	f04f 0905 	moveq.w	r9, #5
 801186a:	f04f 0906 	movne.w	r9, #6
 801186e:	f04f 0800 	mov.w	r8, #0
 8011872:	4c4b      	ldr	r4, [pc, #300]	; (80119a0 <_tcp_send_package+0x148>)
 8011874:	460f      	mov	r7, r1
 8011876:	8e06      	ldrh	r6, [r0, #48]	; 0x30
 8011878:	f100 0108 	add.w	r1, r0, #8
 801187c:	2206      	movs	r2, #6
 801187e:	4620      	mov	r0, r4
 8011880:	f7ff ffba 	bl	80117f8 <memcpy.isra.0>
 8011884:	4a47      	ldr	r2, [pc, #284]	; (80119a4 <_tcp_send_package+0x14c>)
 8011886:	eb06 0689 	add.w	r6, r6, r9, lsl #2
 801188a:	8813      	ldrh	r3, [r2, #0]
 801188c:	b2b6      	uxth	r6, r6
 801188e:	1c59      	adds	r1, r3, #1
 8011890:	8263      	strh	r3, [r4, #18]
 8011892:	f105 0a04 	add.w	sl, r5, #4
 8011896:	f106 0314 	add.w	r3, r6, #20
 801189a:	ba5b      	rev16	r3, r3
 801189c:	8011      	strh	r1, [r2, #0]
 801189e:	f104 001e 	add.w	r0, r4, #30
 80118a2:	2204      	movs	r2, #4
 80118a4:	4651      	mov	r1, sl
 80118a6:	8223      	strh	r3, [r4, #16]
 80118a8:	f7ff ffa6 	bl	80117f8 <memcpy.isra.0>
 80118ac:	2114      	movs	r1, #20
 80118ae:	f104 000e 	add.w	r0, r4, #14
 80118b2:	f884 8018 	strb.w	r8, [r4, #24]
 80118b6:	f884 8019 	strb.w	r8, [r4, #25]
 80118ba:	f002 fc55 	bl	8014168 <net_chksum>
 80118be:	882b      	ldrh	r3, [r5, #0]
 80118c0:	ea4f 1909 	mov.w	r9, r9, lsl #4
 80118c4:	8463      	strh	r3, [r4, #34]	; 0x22
 80118c6:	886b      	ldrh	r3, [r5, #2]
 80118c8:	8320      	strh	r0, [r4, #24]
 80118ca:	84a3      	strh	r3, [r4, #36]	; 0x24
 80118cc:	683b      	ldr	r3, [r7, #0]
 80118ce:	8f2a      	ldrh	r2, [r5, #56]	; 0x38
 80118d0:	f8c4 3026 	str.w	r3, [r4, #38]	; 0x26
 80118d4:	687b      	ldr	r3, [r7, #4]
 80118d6:	f884 902e 	strb.w	r9, [r4, #46]	; 0x2e
 80118da:	f8c4 302a 	str.w	r3, [r4, #42]	; 0x2a
 80118de:	7a3b      	ldrb	r3, [r7, #8]
 80118e0:	8622      	strh	r2, [r4, #48]	; 0x30
 80118e2:	f884 302f 	strb.w	r3, [r4, #47]	; 0x2f
 80118e6:	079b      	lsls	r3, r3, #30
 80118e8:	bf48      	it	mi
 80118ea:	2302      	movmi	r3, #2
 80118ec:	8baa      	ldrh	r2, [r5, #28]
 80118ee:	bf44      	itt	mi
 80118f0:	f884 3036 	strbmi.w	r3, [r4, #54]	; 0x36
 80118f4:	2304      	movmi	r3, #4
 80118f6:	86a2      	strh	r2, [r4, #52]	; 0x34
 80118f8:	bf41      	itttt	mi
 80118fa:	f884 3037 	strbmi.w	r3, [r4, #55]	; 0x37
 80118fe:	4622      	movmi	r2, r4
 8011900:	f24b 4305 	movwmi	r3, #46085	; 0xb405
 8011904:	f822 3f38 	strhmi.w	r3, [r2, #56]!
 8011908:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 801190a:	f884 8032 	strb.w	r8, [r4, #50]	; 0x32
 801190e:	f884 8033 	strb.w	r8, [r4, #51]	; 0x33
 8011912:	bf58      	it	pl
 8011914:	f104 0236 	addpl.w	r2, r4, #54	; 0x36
 8011918:	2b00      	cmp	r3, #0
 801191a:	d13f      	bne.n	801199c <_tcp_send_package+0x144>
 801191c:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 801191e:	4820      	ldr	r0, [pc, #128]	; (80119a0 <_tcp_send_package+0x148>)
 8011920:	ba5b      	rev16	r3, r3
 8011922:	8463      	strh	r3, [r4, #34]	; 0x22
 8011924:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 8011926:	ba5b      	rev16	r3, r3
 8011928:	84a3      	strh	r3, [r4, #36]	; 0x24
 801192a:	f7ff ff6f 	bl	801180c <_bswap32>
 801192e:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 8011930:	a801      	add	r0, sp, #4
 8011932:	ba5b      	rev16	r3, r3
 8011934:	8623      	strh	r3, [r4, #48]	; 0x30
 8011936:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8011938:	220c      	movs	r2, #12
 801193a:	ba5b      	rev16	r3, r3
 801193c:	491a      	ldr	r1, [pc, #104]	; (80119a8 <_tcp_send_package+0x150>)
 801193e:	86a3      	strh	r3, [r4, #52]	; 0x34
 8011940:	f7ff ff5a 	bl	80117f8 <memcpy.isra.0>
 8011944:	2204      	movs	r2, #4
 8011946:	4919      	ldr	r1, [pc, #100]	; (80119ac <_tcp_send_package+0x154>)
 8011948:	4817      	ldr	r0, [pc, #92]	; (80119a8 <_tcp_send_package+0x150>)
 801194a:	f7ff ff55 	bl	80117f8 <memcpy.isra.0>
 801194e:	2204      	movs	r2, #4
 8011950:	4651      	mov	r1, sl
 8011952:	4817      	ldr	r0, [pc, #92]	; (80119b0 <_tcp_send_package+0x158>)
 8011954:	f7ff ff50 	bl	80117f8 <memcpy.isra.0>
 8011958:	2300      	movs	r3, #0
 801195a:	77a3      	strb	r3, [r4, #30]
 801195c:	2306      	movs	r3, #6
 801195e:	f106 010c 	add.w	r1, r6, #12
 8011962:	77e3      	strb	r3, [r4, #31]
 8011964:	4810      	ldr	r0, [pc, #64]	; (80119a8 <_tcp_send_package+0x150>)
 8011966:	ba73      	rev16	r3, r6
 8011968:	8423      	strh	r3, [r4, #32]
 801196a:	f002 fbfd 	bl	8014168 <net_chksum>
 801196e:	a901      	add	r1, sp, #4
 8011970:	4605      	mov	r5, r0
 8011972:	220c      	movs	r2, #12
 8011974:	480c      	ldr	r0, [pc, #48]	; (80119a8 <_tcp_send_package+0x150>)
 8011976:	f7ff ff3f 	bl	80117f8 <memcpy.isra.0>
 801197a:	4809      	ldr	r0, [pc, #36]	; (80119a0 <_tcp_send_package+0x148>)
 801197c:	f106 0122 	add.w	r1, r6, #34	; 0x22
 8011980:	8665      	strh	r5, [r4, #50]	; 0x32
 8011982:	b004      	add	sp, #16
 8011984:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011988:	f005 ba0a 	b.w	8016da0 <emac_eth_send>
 801198c:	6ae9      	ldr	r1, [r5, #44]	; 0x2c
 801198e:	5cc9      	ldrb	r1, [r1, r3]
 8011990:	54d1      	strb	r1, [r2, r3]
 8011992:	3301      	adds	r3, #1
 8011994:	8e29      	ldrh	r1, [r5, #48]	; 0x30
 8011996:	4299      	cmp	r1, r3
 8011998:	d8f8      	bhi.n	801198c <_tcp_send_package+0x134>
 801199a:	e7bf      	b.n	801191c <_tcp_send_package+0xc4>
 801199c:	2300      	movs	r3, #0
 801199e:	e7f9      	b.n	8011994 <_tcp_send_package+0x13c>
 80119a0:	2000c9d4 	ldrdcs	ip, [r0], -r4
 80119a4:	2000be1e 	andcs	fp, r0, lr, lsl lr
 80119a8:	2000c9ea 	andcs	ip, r0, sl, ror #19
 80119ac:	2000bdf4 	strdcs	fp, [r0], -r4
 80119b0:	2000c9ee 	andcs	ip, r0, lr, ror #19

080119b4 <_send_reset>:
 80119b4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80119b6:	f890 302f 	ldrb.w	r3, [r0, #47]	; 0x2f
 80119ba:	4604      	mov	r4, r0
 80119bc:	075a      	lsls	r2, r3, #29
 80119be:	460e      	mov	r6, r1
 80119c0:	d421      	bmi.n	8011a06 <_send_reset+0x52>
 80119c2:	2204      	movs	r2, #4
 80119c4:	f013 0310 	ands.w	r3, r3, #16
 80119c8:	f88d 200c 	strb.w	r2, [sp, #12]
 80119cc:	d01d      	beq.n	8011a0a <_send_reset+0x56>
 80119ce:	f100 012a 	add.w	r1, r0, #42	; 0x2a
 80119d2:	4668      	mov	r0, sp
 80119d4:	f7ff ff10 	bl	80117f8 <memcpy.isra.0>
 80119d8:	9b00      	ldr	r3, [sp, #0]
 80119da:	9301      	str	r3, [sp, #4]
 80119dc:	f894 302f 	ldrb.w	r3, [r4, #47]	; 0x2f
 80119e0:	4668      	mov	r0, sp
 80119e2:	f3c3 0540 	ubfx	r5, r3, #1, #1
 80119e6:	f104 0126 	add.w	r1, r4, #38	; 0x26
 80119ea:	07db      	lsls	r3, r3, #31
 80119ec:	f04f 0204 	mov.w	r2, #4
 80119f0:	bf48      	it	mi
 80119f2:	3501      	addmi	r5, #1
 80119f4:	f7ff ff00 	bl	80117f8 <memcpy.isra.0>
 80119f8:	9b00      	ldr	r3, [sp, #0]
 80119fa:	4630      	mov	r0, r6
 80119fc:	441d      	add	r5, r3
 80119fe:	a901      	add	r1, sp, #4
 8011a00:	9502      	str	r5, [sp, #8]
 8011a02:	f7ff ff29 	bl	8011858 <_tcp_send_package>
 8011a06:	b004      	add	sp, #16
 8011a08:	bd70      	pop	{r4, r5, r6, pc}
 8011a0a:	9301      	str	r3, [sp, #4]
 8011a0c:	2314      	movs	r3, #20
 8011a0e:	f88d 300c 	strb.w	r3, [sp, #12]
 8011a12:	e7e3      	b.n	80119dc <_send_reset+0x28>

08011a14 <tcp_init>:
 8011a14:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011a16:	2206      	movs	r2, #6
 8011a18:	4c0e      	ldr	r4, [pc, #56]	; (8011a54 <tcp_init+0x40>)
 8011a1a:	490f      	ldr	r1, [pc, #60]	; (8011a58 <tcp_init+0x44>)
 8011a1c:	18a0      	adds	r0, r4, r2
 8011a1e:	f7ff feeb 	bl	80117f8 <memcpy.isra.0>
 8011a22:	2308      	movs	r3, #8
 8011a24:	2204      	movs	r2, #4
 8011a26:	2500      	movs	r5, #0
 8011a28:	7323      	strb	r3, [r4, #12]
 8011a2a:	4b0c      	ldr	r3, [pc, #48]	; (8011a5c <tcp_init+0x48>)
 8011a2c:	eb0d 0102 	add.w	r1, sp, r2
 8011a30:	681b      	ldr	r3, [r3, #0]
 8011a32:	f104 001a 	add.w	r0, r4, #26
 8011a36:	9301      	str	r3, [sp, #4]
 8011a38:	7365      	strb	r5, [r4, #13]
 8011a3a:	f7ff fedd 	bl	80117f8 <memcpy.isra.0>
 8011a3e:	2345      	movs	r3, #69	; 0x45
 8011a40:	73a3      	strb	r3, [r4, #14]
 8011a42:	2340      	movs	r3, #64	; 0x40
 8011a44:	7523      	strb	r3, [r4, #20]
 8011a46:	75a3      	strb	r3, [r4, #22]
 8011a48:	2306      	movs	r3, #6
 8011a4a:	73e5      	strb	r5, [r4, #15]
 8011a4c:	7565      	strb	r5, [r4, #21]
 8011a4e:	75e3      	strb	r3, [r4, #23]
 8011a50:	b003      	add	sp, #12
 8011a52:	bd30      	pop	{r4, r5, pc}
 8011a54:	2000c9d4 	ldrdcs	ip, [r0], -r4
 8011a58:	2000be00 	andcs	fp, r0, r0, lsl #28
 8011a5c:	2000bdf4 	strdcs	fp, [r0], -r4

08011a60 <tcp_handle>:
 8011a60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011a64:	4605      	mov	r5, r0
 8011a66:	8c43      	ldrh	r3, [r0, #34]	; 0x22
 8011a68:	b085      	sub	sp, #20
 8011a6a:	ba5b      	rev16	r3, r3
 8011a6c:	8443      	strh	r3, [r0, #34]	; 0x22
 8011a6e:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 8011a70:	f8b0 b010 	ldrh.w	fp, [r0, #16]
 8011a74:	ba5b      	rev16	r3, r3
 8011a76:	8483      	strh	r3, [r0, #36]	; 0x24
 8011a78:	f890 802e 	ldrb.w	r8, [r0, #46]	; 0x2e
 8011a7c:	f7ff fec6 	bl	801180c <_bswap32>
 8011a80:	8e2b      	ldrh	r3, [r5, #48]	; 0x30
 8011a82:	4ca6      	ldr	r4, [pc, #664]	; (8011d1c <tcp_handle+0x2bc>)
 8011a84:	ba5b      	rev16	r3, r3
 8011a86:	862b      	strh	r3, [r5, #48]	; 0x30
 8011a88:	8eab      	ldrh	r3, [r5, #52]	; 0x34
 8011a8a:	8822      	ldrh	r2, [r4, #0]
 8011a8c:	ba5b      	rev16	r3, r3
 8011a8e:	86ab      	strh	r3, [r5, #52]	; 0x34
 8011a90:	8cab      	ldrh	r3, [r5, #36]	; 0x24
 8011a92:	429a      	cmp	r2, r3
 8011a94:	d14d      	bne.n	8011b32 <tcp_handle+0xd2>
 8011a96:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8011a9a:	2b01      	cmp	r3, #1
 8011a9c:	d00d      	beq.n	8011aba <tcp_handle+0x5a>
 8011a9e:	2204      	movs	r2, #4
 8011aa0:	4668      	mov	r0, sp
 8011aa2:	f105 011a 	add.w	r1, r5, #26
 8011aa6:	f7ff fea7 	bl	80117f8 <memcpy.isra.0>
 8011aaa:	8862      	ldrh	r2, [r4, #2]
 8011aac:	8c6b      	ldrh	r3, [r5, #34]	; 0x22
 8011aae:	429a      	cmp	r2, r3
 8011ab0:	d13f      	bne.n	8011b32 <tcp_handle+0xd2>
 8011ab2:	6862      	ldr	r2, [r4, #4]
 8011ab4:	9b00      	ldr	r3, [sp, #0]
 8011ab6:	429a      	cmp	r2, r3
 8011ab8:	d13b      	bne.n	8011b32 <tcp_handle+0xd2>
 8011aba:	2204      	movs	r2, #4
 8011abc:	f105 012a 	add.w	r1, r5, #42	; 0x2a
 8011ac0:	eb0d 0002 	add.w	r0, sp, r2
 8011ac4:	f7ff fe98 	bl	80117f8 <memcpy.isra.0>
 8011ac8:	2204      	movs	r2, #4
 8011aca:	f105 0126 	add.w	r1, r5, #38	; 0x26
 8011ace:	eb0d 0002 	add.w	r0, sp, r2
 8011ad2:	9e01      	ldr	r6, [sp, #4]
 8011ad4:	f7ff fe90 	bl	80117f8 <memcpy.isra.0>
 8011ad8:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 8011adc:	9f01      	ldr	r7, [sp, #4]
 8011ade:	2a01      	cmp	r2, #1
 8011ae0:	f8b5 a030 	ldrh.w	sl, [r5, #48]	; 0x30
 8011ae4:	d01b      	beq.n	8011b1e <tcp_handle+0xbe>
 8011ae6:	1ed3      	subs	r3, r2, #3
 8011ae8:	2b07      	cmp	r3, #7
 8011aea:	d822      	bhi.n	8011b32 <tcp_handle+0xd2>
 8011aec:	ea4f 1318 	mov.w	r3, r8, lsr #4
 8011af0:	f64f 78ec 	movw	r8, #65516	; 0xffec
 8011af4:	fa9b fb9b 	rev16.w	fp, fp
 8011af8:	eba8 0883 	sub.w	r8, r8, r3, lsl #2
 8011afc:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 8011afe:	44d8      	add	r8, fp
 8011b00:	f895 002f 	ldrb.w	r0, [r5, #47]	; 0x2f
 8011b04:	ea4f 0983 	mov.w	r9, r3, lsl #2
 8011b08:	fa1f f888 	uxth.w	r8, r8
 8011b0c:	2900      	cmp	r1, #0
 8011b0e:	d142      	bne.n	8011b96 <tcp_handle+0x136>
 8011b10:	f1b8 0f00 	cmp.w	r8, #0
 8011b14:	d16b      	bne.n	8011bee <tcp_handle+0x18e>
 8011b16:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8011b18:	42bb      	cmp	r3, r7
 8011b1a:	d168      	bne.n	8011bee <tcp_handle+0x18e>
 8011b1c:	e048      	b.n	8011bb0 <tcp_handle+0x150>
 8011b1e:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 8011b22:	075a      	lsls	r2, r3, #29
 8011b24:	d405      	bmi.n	8011b32 <tcp_handle+0xd2>
 8011b26:	06d8      	lsls	r0, r3, #27
 8011b28:	d506      	bpl.n	8011b38 <tcp_handle+0xd8>
 8011b2a:	4628      	mov	r0, r5
 8011b2c:	497b      	ldr	r1, [pc, #492]	; (8011d1c <tcp_handle+0x2bc>)
 8011b2e:	f7ff ff41 	bl	80119b4 <_send_reset>
 8011b32:	b005      	add	sp, #20
 8011b34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011b38:	0799      	lsls	r1, r3, #30
 8011b3a:	d5fa      	bpl.n	8011b32 <tcp_handle+0xd2>
 8011b3c:	f895 2023 	ldrb.w	r2, [r5, #35]	; 0x23
 8011b40:	f895 3022 	ldrb.w	r3, [r5, #34]	; 0x22
 8011b44:	4668      	mov	r0, sp
 8011b46:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8011b4a:	f105 011a 	add.w	r1, r5, #26
 8011b4e:	2204      	movs	r2, #4
 8011b50:	8063      	strh	r3, [r4, #2]
 8011b52:	f7ff fe51 	bl	80117f8 <memcpy.isra.0>
 8011b56:	2206      	movs	r2, #6
 8011b58:	9b00      	ldr	r3, [sp, #0]
 8011b5a:	18a9      	adds	r1, r5, r2
 8011b5c:	4870      	ldr	r0, [pc, #448]	; (8011d20 <tcp_handle+0x2c0>)
 8011b5e:	6063      	str	r3, [r4, #4]
 8011b60:	f7ff fe4a 	bl	80117f8 <memcpy.isra.0>
 8011b64:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8011b66:	1c7b      	adds	r3, r7, #1
 8011b68:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8011b6c:	6363      	str	r3, [r4, #52]	; 0x34
 8011b6e:	2312      	movs	r3, #18
 8011b70:	486a      	ldr	r0, [pc, #424]	; (8011d1c <tcp_handle+0x2bc>)
 8011b72:	a901      	add	r1, sp, #4
 8011b74:	f88d 300c 	strb.w	r3, [sp, #12]
 8011b78:	e9c4 7608 	strd	r7, r6, [r4, #32]
 8011b7c:	63e7      	str	r7, [r4, #60]	; 0x3c
 8011b7e:	f8c4 a018 	str.w	sl, [r4, #24]
 8011b82:	f7ff fe69 	bl	8011858 <_tcp_send_package>
 8011b86:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8011b88:	1c5a      	adds	r2, r3, #1
 8011b8a:	e9c4 3204 	strd	r3, r2, [r4, #16]
 8011b8e:	2303      	movs	r3, #3
 8011b90:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8011b94:	e7cd      	b.n	8011b32 <tcp_handle+0xd2>
 8011b96:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8011b98:	eba3 0c07 	sub.w	ip, r3, r7
 8011b9c:	f1b8 0f00 	cmp.w	r8, #0
 8011ba0:	d10d      	bne.n	8011bbe <tcp_handle+0x15e>
 8011ba2:	f1bc 0f00 	cmp.w	ip, #0
 8011ba6:	dc22      	bgt.n	8011bee <tcp_handle+0x18e>
 8011ba8:	1afb      	subs	r3, r7, r3
 8011baa:	1a5b      	subs	r3, r3, r1
 8011bac:	2b00      	cmp	r3, #0
 8011bae:	da1e      	bge.n	8011bee <tcp_handle+0x18e>
 8011bb0:	0743      	lsls	r3, r0, #29
 8011bb2:	d530      	bpl.n	8011c16 <tcp_handle+0x1b6>
 8011bb4:	8821      	ldrh	r1, [r4, #0]
 8011bb6:	4859      	ldr	r0, [pc, #356]	; (8011d1c <tcp_handle+0x2bc>)
 8011bb8:	f7ff fe04 	bl	80117c4 <_init_tcb>
 8011bbc:	e7b9      	b.n	8011b32 <tcp_handle+0xd2>
 8011bbe:	f1bc 0f00 	cmp.w	ip, #0
 8011bc2:	dc06      	bgt.n	8011bd2 <tcp_handle+0x172>
 8011bc4:	eba7 0c03 	sub.w	ip, r7, r3
 8011bc8:	ebac 0c01 	sub.w	ip, ip, r1
 8011bcc:	f1bc 0f00 	cmp.w	ip, #0
 8011bd0:	dbee      	blt.n	8011bb0 <tcp_handle+0x150>
 8011bd2:	eb08 0c07 	add.w	ip, r8, r7
 8011bd6:	f103 0e01 	add.w	lr, r3, #1
 8011bda:	ebae 0e0c 	sub.w	lr, lr, ip
 8011bde:	f1be 0f00 	cmp.w	lr, #0
 8011be2:	dc04      	bgt.n	8011bee <tcp_handle+0x18e>
 8011be4:	43db      	mvns	r3, r3
 8011be6:	1a5b      	subs	r3, r3, r1
 8011be8:	eb13 0f0c 	cmn.w	r3, ip
 8011bec:	d4e0      	bmi.n	8011bb0 <tcp_handle+0x150>
 8011bee:	0742      	lsls	r2, r0, #29
 8011bf0:	d505      	bpl.n	8011bfe <tcp_handle+0x19e>
 8011bf2:	8821      	ldrh	r1, [r4, #0]
 8011bf4:	4849      	ldr	r0, [pc, #292]	; (8011d1c <tcp_handle+0x2bc>)
 8011bf6:	f7ff fde5 	bl	80117c4 <_init_tcb>
 8011bfa:	2301      	movs	r3, #1
 8011bfc:	e7c8      	b.n	8011b90 <tcp_handle+0x130>
 8011bfe:	6963      	ldr	r3, [r4, #20]
 8011c00:	9301      	str	r3, [sp, #4]
 8011c02:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8011c04:	9302      	str	r3, [sp, #8]
 8011c06:	2310      	movs	r3, #16
 8011c08:	4844      	ldr	r0, [pc, #272]	; (8011d1c <tcp_handle+0x2bc>)
 8011c0a:	a901      	add	r1, sp, #4
 8011c0c:	f88d 300c 	strb.w	r3, [sp, #12]
 8011c10:	f7ff fe22 	bl	8011858 <_tcp_send_package>
 8011c14:	e78d      	b.n	8011b32 <tcp_handle+0xd2>
 8011c16:	0781      	lsls	r1, r0, #30
 8011c18:	d505      	bpl.n	8011c26 <tcp_handle+0x1c6>
 8011c1a:	2a03      	cmp	r2, #3
 8011c1c:	d0ed      	beq.n	8011bfa <tcp_handle+0x19a>
 8011c1e:	4628      	mov	r0, r5
 8011c20:	493e      	ldr	r1, [pc, #248]	; (8011d1c <tcp_handle+0x2bc>)
 8011c22:	f7ff fec7 	bl	80119b4 <_send_reset>
 8011c26:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 8011c2a:	06da      	lsls	r2, r3, #27
 8011c2c:	d581      	bpl.n	8011b32 <tcp_handle+0xd2>
 8011c2e:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8011c32:	3b03      	subs	r3, #3
 8011c34:	2b07      	cmp	r3, #7
 8011c36:	d818      	bhi.n	8011c6a <tcp_handle+0x20a>
 8011c38:	e8df f003 	tbb	[pc, r3]
 8011c3c:	76767604 	ldrbtvc	r7, [r6], -r4, lsl #12
 8011c40:	a69d7676 			; <UNDEFINED> instruction: 0xa69d7676
 8011c44:	6923      	ldr	r3, [r4, #16]
 8011c46:	1b9b      	subs	r3, r3, r6
 8011c48:	2b00      	cmp	r3, #0
 8011c4a:	dc0a      	bgt.n	8011c62 <tcp_handle+0x202>
 8011c4c:	6963      	ldr	r3, [r4, #20]
 8011c4e:	1af3      	subs	r3, r6, r3
 8011c50:	2b00      	cmp	r3, #0
 8011c52:	dc06      	bgt.n	8011c62 <tcp_handle+0x202>
 8011c54:	2304      	movs	r3, #4
 8011c56:	e9c4 7608 	strd	r7, r6, [r4, #32]
 8011c5a:	f8c4 a018 	str.w	sl, [r4, #24]
 8011c5e:	6126      	str	r6, [r4, #16]
 8011c60:	e796      	b.n	8011b90 <tcp_handle+0x130>
 8011c62:	4628      	mov	r0, r5
 8011c64:	492d      	ldr	r1, [pc, #180]	; (8011d1c <tcp_handle+0x2bc>)
 8011c66:	f7ff fea5 	bl	80119b4 <_send_reset>
 8011c6a:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8011c6e:	3b04      	subs	r3, #4
 8011c70:	2b02      	cmp	r3, #2
 8011c72:	d830      	bhi.n	8011cd6 <tcp_handle+0x276>
 8011c74:	f1b8 0f00 	cmp.w	r8, #0
 8011c78:	d02d      	beq.n	8011cd6 <tcp_handle+0x276>
 8011c7a:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8011c7c:	42bb      	cmp	r3, r7
 8011c7e:	f040 8092 	bne.w	8011da6 <tcp_handle+0x346>
 8011c82:	f240 53b6 	movw	r3, #1462	; 0x5b6
 8011c86:	f8df a09c 	ldr.w	sl, [pc, #156]	; 8011d24 <tcp_handle+0x2c4>
 8011c8a:	f105 0122 	add.w	r1, r5, #34	; 0x22
 8011c8e:	f8ba 7000 	ldrh.w	r7, [sl]
 8011c92:	4642      	mov	r2, r8
 8011c94:	435f      	muls	r7, r3
 8011c96:	1d38      	adds	r0, r7, #4
 8011c98:	4449      	add	r1, r9
 8011c9a:	4450      	add	r0, sl
 8011c9c:	f7ff fdac 	bl	80117f8 <memcpy.isra.0>
 8011ca0:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 8011ca2:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8011ca4:	f2a2 52b4 	subw	r2, r2, #1460	; 0x5b4
 8011ca8:	8722      	strh	r2, [r4, #56]	; 0x38
 8011caa:	6962      	ldr	r2, [r4, #20]
 8011cac:	4443      	add	r3, r8
 8011cae:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8011cb2:	6363      	str	r3, [r4, #52]	; 0x34
 8011cb4:	2310      	movs	r3, #16
 8011cb6:	4457      	add	r7, sl
 8011cb8:	4818      	ldr	r0, [pc, #96]	; (8011d1c <tcp_handle+0x2bc>)
 8011cba:	f8a7 85b8 	strh.w	r8, [r7, #1464]	; 0x5b8
 8011cbe:	a901      	add	r1, sp, #4
 8011cc0:	f88d 300c 	strb.w	r3, [sp, #12]
 8011cc4:	f7ff fdc8 	bl	8011858 <_tcp_send_package>
 8011cc8:	f8ba 3000 	ldrh.w	r3, [sl]
 8011ccc:	3301      	adds	r3, #1
 8011cce:	f003 0301 	and.w	r3, r3, #1
 8011cd2:	f8aa 3000 	strh.w	r3, [sl]
 8011cd6:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8011cda:	2b02      	cmp	r3, #2
 8011cdc:	f67f af29 	bls.w	8011b32 <tcp_handle+0xd2>
 8011ce0:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 8011ce4:	07db      	lsls	r3, r3, #31
 8011ce6:	f57f af24 	bpl.w	8011b32 <tcp_handle+0xd2>
 8011cea:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8011cec:	6962      	ldr	r2, [r4, #20]
 8011cee:	3301      	adds	r3, #1
 8011cf0:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8011cf4:	6363      	str	r3, [r4, #52]	; 0x34
 8011cf6:	2310      	movs	r3, #16
 8011cf8:	4808      	ldr	r0, [pc, #32]	; (8011d1c <tcp_handle+0x2bc>)
 8011cfa:	a901      	add	r1, sp, #4
 8011cfc:	f88d 300c 	strb.w	r3, [sp, #12]
 8011d00:	f7ff fdaa 	bl	8011858 <_tcp_send_package>
 8011d04:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8011d08:	2b05      	cmp	r3, #5
 8011d0a:	d054      	beq.n	8011db6 <tcp_handle+0x356>
 8011d0c:	d84e      	bhi.n	8011dac <tcp_handle+0x34c>
 8011d0e:	3b03      	subs	r3, #3
 8011d10:	2b01      	cmp	r3, #1
 8011d12:	f63f af0e 	bhi.w	8011b32 <tcp_handle+0xd2>
 8011d16:	2307      	movs	r3, #7
 8011d18:	e73a      	b.n	8011b90 <tcp_handle+0x130>
 8011d1a:	bf00      	nop
 8011d1c:	2000c990 	mulcs	r0, r0, r9
 8011d20:	2000c998 	mulcs	r0, r8, r9
 8011d24:	2000be20 	andcs	fp, r0, r0, lsr #28
 8011d28:	6923      	ldr	r3, [r4, #16]
 8011d2a:	1b99      	subs	r1, r3, r6
 8011d2c:	d513      	bpl.n	8011d56 <tcp_handle+0x2f6>
 8011d2e:	6962      	ldr	r2, [r4, #20]
 8011d30:	1ab2      	subs	r2, r6, r2
 8011d32:	2a00      	cmp	r2, #0
 8011d34:	dc0f      	bgt.n	8011d56 <tcp_handle+0x2f6>
 8011d36:	6126      	str	r6, [r4, #16]
 8011d38:	6a23      	ldr	r3, [r4, #32]
 8011d3a:	1bda      	subs	r2, r3, r7
 8011d3c:	2a00      	cmp	r2, #0
 8011d3e:	db05      	blt.n	8011d4c <tcp_handle+0x2ec>
 8011d40:	42bb      	cmp	r3, r7
 8011d42:	d192      	bne.n	8011c6a <tcp_handle+0x20a>
 8011d44:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8011d46:	1b9b      	subs	r3, r3, r6
 8011d48:	2b00      	cmp	r3, #0
 8011d4a:	dc8e      	bgt.n	8011c6a <tcp_handle+0x20a>
 8011d4c:	e9c4 7608 	strd	r7, r6, [r4, #32]
 8011d50:	f8c4 a018 	str.w	sl, [r4, #24]
 8011d54:	e789      	b.n	8011c6a <tcp_handle+0x20a>
 8011d56:	1af3      	subs	r3, r6, r3
 8011d58:	2b00      	cmp	r3, #0
 8011d5a:	dc06      	bgt.n	8011d6a <tcp_handle+0x30a>
 8011d5c:	2900      	cmp	r1, #0
 8011d5e:	dc84      	bgt.n	8011c6a <tcp_handle+0x20a>
 8011d60:	6963      	ldr	r3, [r4, #20]
 8011d62:	1af3      	subs	r3, r6, r3
 8011d64:	2b00      	cmp	r3, #0
 8011d66:	dc80      	bgt.n	8011c6a <tcp_handle+0x20a>
 8011d68:	e7e6      	b.n	8011d38 <tcp_handle+0x2d8>
 8011d6a:	6963      	ldr	r3, [r4, #20]
 8011d6c:	1b9a      	subs	r2, r3, r6
 8011d6e:	2a00      	cmp	r2, #0
 8011d70:	f6bf af7b 	bge.w	8011c6a <tcp_handle+0x20a>
 8011d74:	e744      	b.n	8011c00 <tcp_handle+0x1a0>
 8011d76:	6963      	ldr	r3, [r4, #20]
 8011d78:	42b3      	cmp	r3, r6
 8011d7a:	f47f af76 	bne.w	8011c6a <tcp_handle+0x20a>
 8011d7e:	8821      	ldrh	r1, [r4, #0]
 8011d80:	480f      	ldr	r0, [pc, #60]	; (8011dc0 <tcp_handle+0x360>)
 8011d82:	f7ff fd1f 	bl	80117c4 <_init_tcb>
 8011d86:	e770      	b.n	8011c6a <tcp_handle+0x20a>
 8011d88:	6963      	ldr	r3, [r4, #20]
 8011d8a:	42b3      	cmp	r3, r6
 8011d8c:	f47f af6d 	bne.w	8011c6a <tcp_handle+0x20a>
 8011d90:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8011d92:	480b      	ldr	r0, [pc, #44]	; (8011dc0 <tcp_handle+0x360>)
 8011d94:	9302      	str	r3, [sp, #8]
 8011d96:	2310      	movs	r3, #16
 8011d98:	a901      	add	r1, sp, #4
 8011d9a:	9601      	str	r6, [sp, #4]
 8011d9c:	f88d 300c 	strb.w	r3, [sp, #12]
 8011da0:	f7ff fd5a 	bl	8011858 <_tcp_send_package>
 8011da4:	e761      	b.n	8011c6a <tcp_handle+0x20a>
 8011da6:	6962      	ldr	r2, [r4, #20]
 8011da8:	9201      	str	r2, [sp, #4]
 8011daa:	e72b      	b.n	8011c04 <tcp_handle+0x1a4>
 8011dac:	2b06      	cmp	r3, #6
 8011dae:	f47f aec0 	bne.w	8011b32 <tcp_handle+0xd2>
 8011db2:	230a      	movs	r3, #10
 8011db4:	e6ec      	b.n	8011b90 <tcp_handle+0x130>
 8011db6:	6963      	ldr	r3, [r4, #20]
 8011db8:	42b3      	cmp	r3, r6
 8011dba:	d0fa      	beq.n	8011db2 <tcp_handle+0x352>
 8011dbc:	2308      	movs	r3, #8
 8011dbe:	e6e7      	b.n	8011b90 <tcp_handle+0x130>
 8011dc0:	2000c990 	mulcs	r0, r0, r9

08011dc4 <tcp_begin>:
 8011dc4:	b508      	push	{r3, lr}
 8011dc6:	4b0a      	ldr	r3, [pc, #40]	; (8011df0 <tcp_begin+0x2c>)
 8011dc8:	4601      	mov	r1, r0
 8011dca:	881a      	ldrh	r2, [r3, #0]
 8011dcc:	4282      	cmp	r2, r0
 8011dce:	d102      	bne.n	8011dd6 <tcp_begin+0x12>
 8011dd0:	f893 0040 	ldrb.w	r0, [r3, #64]	; 0x40
 8011dd4:	b130      	cbz	r0, 8011de4 <tcp_begin+0x20>
 8011dd6:	b12a      	cbz	r2, 8011de4 <tcp_begin+0x20>
 8011dd8:	4806      	ldr	r0, [pc, #24]	; (8011df4 <tcp_begin+0x30>)
 8011dda:	f003 fcc5 	bl	8015768 <console_error>
 8011dde:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8011de2:	bd08      	pop	{r3, pc}
 8011de4:	4802      	ldr	r0, [pc, #8]	; (8011df0 <tcp_begin+0x2c>)
 8011de6:	8019      	strh	r1, [r3, #0]
 8011de8:	f7ff fcec 	bl	80117c4 <_init_tcb>
 8011dec:	2000      	movs	r0, #0
 8011dee:	e7f8      	b.n	8011de2 <tcp_begin+0x1e>
 8011df0:	2000c990 	mulcs	r0, r0, r9
 8011df4:	08019dae 	stmdaeq	r1, {r1, r2, r3, r5, r7, r8, sl, fp, ip, pc}

08011df8 <tcp_write>:
 8011df8:	f240 53b4 	movw	r3, #1460	; 0x5b4
 8011dfc:	429a      	cmp	r2, r3
 8011dfe:	bf28      	it	cs
 8011e00:	461a      	movcs	r2, r3
 8011e02:	2344      	movs	r3, #68	; 0x44
 8011e04:	b530      	push	{r4, r5, lr}
 8011e06:	4c0d      	ldr	r4, [pc, #52]	; (8011e3c <tcp_write+0x44>)
 8011e08:	b085      	sub	sp, #20
 8011e0a:	fb03 4400 	mla	r4, r3, r0, r4
 8011e0e:	6963      	ldr	r3, [r4, #20]
 8011e10:	4615      	mov	r5, r2
 8011e12:	9301      	str	r3, [sp, #4]
 8011e14:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8011e16:	62e1      	str	r1, [r4, #44]	; 0x2c
 8011e18:	9302      	str	r3, [sp, #8]
 8011e1a:	2318      	movs	r3, #24
 8011e1c:	8622      	strh	r2, [r4, #48]	; 0x30
 8011e1e:	4620      	mov	r0, r4
 8011e20:	a901      	add	r1, sp, #4
 8011e22:	f88d 300c 	strb.w	r3, [sp, #12]
 8011e26:	f7ff fd17 	bl	8011858 <_tcp_send_package>
 8011e2a:	2300      	movs	r3, #0
 8011e2c:	6962      	ldr	r2, [r4, #20]
 8011e2e:	62e3      	str	r3, [r4, #44]	; 0x2c
 8011e30:	442a      	add	r2, r5
 8011e32:	8623      	strh	r3, [r4, #48]	; 0x30
 8011e34:	6162      	str	r2, [r4, #20]
 8011e36:	b005      	add	sp, #20
 8011e38:	bd30      	pop	{r4, r5, pc}
 8011e3a:	bf00      	nop
 8011e3c:	2000c990 	mulcs	r0, r0, r9

08011e40 <tcp_read>:
 8011e40:	2344      	movs	r3, #68	; 0x44
 8011e42:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011e44:	4c1c      	ldr	r4, [pc, #112]	; (8011eb8 <tcp_read+0x78>)
 8011e46:	b085      	sub	sp, #20
 8011e48:	fb03 4400 	mla	r4, r3, r0, r4
 8011e4c:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8011e50:	2b07      	cmp	r3, #7
 8011e52:	d112      	bne.n	8011e7a <tcp_read+0x3a>
 8011e54:	6963      	ldr	r3, [r4, #20]
 8011e56:	4620      	mov	r0, r4
 8011e58:	9301      	str	r3, [sp, #4]
 8011e5a:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8011e5c:	a901      	add	r1, sp, #4
 8011e5e:	9302      	str	r3, [sp, #8]
 8011e60:	2311      	movs	r3, #17
 8011e62:	f88d 300c 	strb.w	r3, [sp, #12]
 8011e66:	f7ff fcf7 	bl	8011858 <_tcp_send_package>
 8011e6a:	2309      	movs	r3, #9
 8011e6c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8011e70:	6963      	ldr	r3, [r4, #20]
 8011e72:	3301      	adds	r3, #1
 8011e74:	6163      	str	r3, [r4, #20]
 8011e76:	2000      	movs	r0, #0
 8011e78:	e01b      	b.n	8011eb2 <tcp_read+0x72>
 8011e7a:	f44f 6337 	mov.w	r3, #2928	; 0xb70
 8011e7e:	4358      	muls	r0, r3
 8011e80:	4a0e      	ldr	r2, [pc, #56]	; (8011ebc <tcp_read+0x7c>)
 8011e82:	1817      	adds	r7, r2, r0
 8011e84:	887b      	ldrh	r3, [r7, #2]
 8011e86:	5a15      	ldrh	r5, [r2, r0]
 8011e88:	429d      	cmp	r5, r3
 8011e8a:	d0f4      	beq.n	8011e76 <tcp_read+0x36>
 8011e8c:	f240 55b6 	movw	r5, #1462	; 0x5b6
 8011e90:	435d      	muls	r5, r3
 8011e92:	1d06      	adds	r6, r0, #4
 8011e94:	442e      	add	r6, r5
 8011e96:	4416      	add	r6, r2
 8011e98:	4428      	add	r0, r5
 8011e9a:	600e      	str	r6, [r1, #0]
 8011e9c:	4402      	add	r2, r0
 8011e9e:	f8b2 05b8 	ldrh.w	r0, [r2, #1464]	; 0x5b8
 8011ea2:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 8011ea4:	3301      	adds	r3, #1
 8011ea6:	f202 52b4 	addw	r2, r2, #1460	; 0x5b4
 8011eaa:	f003 0301 	and.w	r3, r3, #1
 8011eae:	8722      	strh	r2, [r4, #56]	; 0x38
 8011eb0:	807b      	strh	r3, [r7, #2]
 8011eb2:	b005      	add	sp, #20
 8011eb4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011eb6:	bf00      	nop
 8011eb8:	2000c990 	mulcs	r0, r0, r9
 8011ebc:	2000be20 	andcs	fp, r0, r0, lsr #28

08011ec0 <memcpy.isra.0>:
 8011ec0:	3801      	subs	r0, #1
 8011ec2:	440a      	add	r2, r1
 8011ec4:	4291      	cmp	r1, r2
 8011ec6:	d100      	bne.n	8011eca <memcpy.isra.0+0xa>
 8011ec8:	4770      	bx	lr
 8011eca:	f811 3b01 	ldrb.w	r3, [r1], #1
 8011ece:	f800 3f01 	strb.w	r3, [r0, #1]!
 8011ed2:	e7f7      	b.n	8011ec4 <memcpy.isra.0+0x4>

08011ed4 <net_memcpy>:
 8011ed4:	ea41 0300 	orr.w	r3, r1, r0
 8011ed8:	079b      	lsls	r3, r3, #30
 8011eda:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011edc:	d115      	bne.n	8011f0a <net_memcpy+0x36>
 8011ede:	f022 0303 	bic.w	r3, r2, #3
 8011ee2:	1f04      	subs	r4, r0, #4
 8011ee4:	0895      	lsrs	r5, r2, #2
 8011ee6:	18ce      	adds	r6, r1, r3
 8011ee8:	42b1      	cmp	r1, r6
 8011eea:	d109      	bne.n	8011f00 <net_memcpy+0x2c>
 8011eec:	f06f 0403 	mvn.w	r4, #3
 8011ef0:	fb04 2205 	mla	r2, r4, r5, r2
 8011ef4:	4403      	add	r3, r0
 8011ef6:	3b01      	subs	r3, #1
 8011ef8:	440a      	add	r2, r1
 8011efa:	4291      	cmp	r1, r2
 8011efc:	d107      	bne.n	8011f0e <net_memcpy+0x3a>
 8011efe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011f00:	f851 7b04 	ldr.w	r7, [r1], #4
 8011f04:	f844 7f04 	str.w	r7, [r4, #4]!
 8011f08:	e7ee      	b.n	8011ee8 <net_memcpy+0x14>
 8011f0a:	4603      	mov	r3, r0
 8011f0c:	e7f3      	b.n	8011ef6 <net_memcpy+0x22>
 8011f0e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8011f12:	f803 4f01 	strb.w	r4, [r3, #1]!
 8011f16:	e7f0      	b.n	8011efa <net_memcpy+0x26>

08011f18 <udp_set_ip>:
 8011f18:	2204      	movs	r2, #4
 8011f1a:	b513      	push	{r0, r1, r4, lr}
 8011f1c:	4604      	mov	r4, r0
 8011f1e:	6803      	ldr	r3, [r0, #0]
 8011f20:	eb0d 0102 	add.w	r1, sp, r2
 8011f24:	4808      	ldr	r0, [pc, #32]	; (8011f48 <udp_set_ip+0x30>)
 8011f26:	9301      	str	r3, [sp, #4]
 8011f28:	f7ff ffca 	bl	8011ec0 <memcpy.isra.0>
 8011f2c:	6862      	ldr	r2, [r4, #4]
 8011f2e:	4b07      	ldr	r3, [pc, #28]	; (8011f4c <udp_set_ip+0x34>)
 8011f30:	43d1      	mvns	r1, r2
 8011f32:	6019      	str	r1, [r3, #0]
 8011f34:	6823      	ldr	r3, [r4, #0]
 8011f36:	4013      	ands	r3, r2
 8011f38:	4a05      	ldr	r2, [pc, #20]	; (8011f50 <udp_set_ip+0x38>)
 8011f3a:	6013      	str	r3, [r2, #0]
 8011f3c:	68a2      	ldr	r2, [r4, #8]
 8011f3e:	4b05      	ldr	r3, [pc, #20]	; (8011f54 <udp_set_ip+0x3c>)
 8011f40:	601a      	str	r2, [r3, #0]
 8011f42:	b002      	add	sp, #8
 8011f44:	bd10      	pop	{r4, pc}
 8011f46:	bf00      	nop
 8011f48:	20012caa 	andcs	r2, r1, sl, lsr #25
 8011f4c:	2000cfc0 	andcs	ip, r0, r0, asr #31
 8011f50:	2000cfc8 	andcs	ip, r0, r8, asr #31
 8011f54:	2000cfc4 	andcs	ip, r0, r4, asr #31

08011f58 <udp_init>:
 8011f58:	b570      	push	{r4, r5, r6, lr}
 8011f5a:	2200      	movs	r2, #0
 8011f5c:	2508      	movs	r5, #8
 8011f5e:	460e      	mov	r6, r1
 8011f60:	4b12      	ldr	r3, [pc, #72]	; (8011fac <udp_init+0x54>)
 8011f62:	4913      	ldr	r1, [pc, #76]	; (8011fb0 <udp_init+0x58>)
 8011f64:	3d01      	subs	r5, #1
 8011f66:	801a      	strh	r2, [r3, #0]
 8011f68:	805a      	strh	r2, [r3, #2]
 8011f6a:	f841 2b04 	str.w	r2, [r1], #4
 8011f6e:	f603 3394 	addw	r3, r3, #2964	; 0xb94
 8011f72:	d1f7      	bne.n	8011f64 <udp_init+0xc>
 8011f74:	2206      	movs	r2, #6
 8011f76:	4c0f      	ldr	r4, [pc, #60]	; (8011fb4 <udp_init+0x5c>)
 8011f78:	4b0f      	ldr	r3, [pc, #60]	; (8011fb8 <udp_init+0x60>)
 8011f7a:	4601      	mov	r1, r0
 8011f7c:	18a0      	adds	r0, r4, r2
 8011f7e:	801d      	strh	r5, [r3, #0]
 8011f80:	f7ff ff9e 	bl	8011ec0 <memcpy.isra.0>
 8011f84:	2308      	movs	r3, #8
 8011f86:	7323      	strb	r3, [r4, #12]
 8011f88:	2345      	movs	r3, #69	; 0x45
 8011f8a:	73a3      	strb	r3, [r4, #14]
 8011f8c:	2340      	movs	r3, #64	; 0x40
 8011f8e:	7523      	strb	r3, [r4, #20]
 8011f90:	75a3      	strb	r3, [r4, #22]
 8011f92:	2311      	movs	r3, #17
 8011f94:	4630      	mov	r0, r6
 8011f96:	7365      	strb	r5, [r4, #13]
 8011f98:	73e5      	strb	r5, [r4, #15]
 8011f9a:	7565      	strb	r5, [r4, #21]
 8011f9c:	75e3      	strb	r3, [r4, #23]
 8011f9e:	f7ff ffbb 	bl	8011f18 <udp_set_ip>
 8011fa2:	f884 5028 	strb.w	r5, [r4, #40]	; 0x28
 8011fa6:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 8011faa:	bd70      	pop	{r4, r5, r6, pc}
 8011fac:	2000cff0 	strdcs	ip, [r0], -r0
 8011fb0:	2000cfd0 	ldrdcs	ip, [r0], -r0
 8011fb4:	20012c90 	mulcs	r1, r0, ip
 8011fb8:	2000cfcc 	andcs	ip, r0, ip, asr #31

08011fbc <udp_shutdown>:
 8011fbc:	4770      	bx	lr
	...

08011fc0 <udp_handle>:
 8011fc0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8011fc4:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 8011fc6:	4607      	mov	r7, r0
 8011fc8:	ba5b      	rev16	r3, r3
 8011fca:	b29b      	uxth	r3, r3
 8011fcc:	f1a3 0244 	sub.w	r2, r3, #68	; 0x44
 8011fd0:	2a01      	cmp	r2, #1
 8011fd2:	d904      	bls.n	8011fde <udp_handle+0x1e>
 8011fd4:	2b7b      	cmp	r3, #123	; 0x7b
 8011fd6:	d002      	beq.n	8011fde <udp_handle+0x1e>
 8011fd8:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8011fdc:	d308      	bcc.n	8011ff0 <udp_handle+0x30>
 8011fde:	2400      	movs	r4, #0
 8011fe0:	4a1f      	ldr	r2, [pc, #124]	; (8012060 <udp_handle+0xa0>)
 8011fe2:	f852 1b04 	ldr.w	r1, [r2], #4
 8011fe6:	4299      	cmp	r1, r3
 8011fe8:	d005      	beq.n	8011ff6 <udp_handle+0x36>
 8011fea:	3401      	adds	r4, #1
 8011fec:	2c08      	cmp	r4, #8
 8011fee:	d1f8      	bne.n	8011fe2 <udp_handle+0x22>
 8011ff0:	b002      	add	sp, #8
 8011ff2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011ff6:	f640 3394 	movw	r3, #2964	; 0xb94
 8011ffa:	8cfe      	ldrh	r6, [r7, #38]	; 0x26
 8011ffc:	435c      	muls	r4, r3
 8011ffe:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 8012002:	ba76      	rev16	r6, r6
 8012004:	3e08      	subs	r6, #8
 8012006:	b2b6      	uxth	r6, r6
 8012008:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 801200c:	bf28      	it	cs
 801200e:	f44f 66b8 	movcs.w	r6, #1472	; 0x5c0
 8012012:	f8df 8050 	ldr.w	r8, [pc, #80]	; 8012064 <udp_handle+0xa4>
 8012016:	1d20      	adds	r0, r4, #4
 8012018:	f838 5004 	ldrh.w	r5, [r8, r4]
 801201c:	4632      	mov	r2, r6
 801201e:	435d      	muls	r5, r3
 8012020:	4428      	add	r0, r5
 8012022:	f107 012a 	add.w	r1, r7, #42	; 0x2a
 8012026:	4440      	add	r0, r8
 8012028:	f7ff ff4a 	bl	8011ec0 <memcpy.isra.0>
 801202c:	2204      	movs	r2, #4
 801202e:	f107 011a 	add.w	r1, r7, #26
 8012032:	eb0d 0002 	add.w	r0, sp, r2
 8012036:	f7ff ff43 	bl	8011ec0 <memcpy.isra.0>
 801203a:	9a01      	ldr	r2, [sp, #4]
 801203c:	192b      	adds	r3, r5, r4
 801203e:	4443      	add	r3, r8
 8012040:	f8c3 25c4 	str.w	r2, [r3, #1476]	; 0x5c4
 8012044:	8c7a      	ldrh	r2, [r7, #34]	; 0x22
 8012046:	f8a3 65ca 	strh.w	r6, [r3, #1482]	; 0x5ca
 801204a:	ba52      	rev16	r2, r2
 801204c:	f8a3 25c8 	strh.w	r2, [r3, #1480]	; 0x5c8
 8012050:	f838 3004 	ldrh.w	r3, [r8, r4]
 8012054:	3301      	adds	r3, #1
 8012056:	f003 0301 	and.w	r3, r3, #1
 801205a:	f828 3004 	strh.w	r3, [r8, r4]
 801205e:	e7c7      	b.n	8011ff0 <udp_handle+0x30>
 8012060:	2000cfd0 	ldrdcs	ip, [r0], -r0
 8012064:	2000cff0 	strdcs	ip, [r0], -r0

08012068 <udp_bind>:
 8012068:	4a0a      	ldr	r2, [pc, #40]	; (8012094 <udp_bind+0x2c>)
 801206a:	4603      	mov	r3, r0
 801206c:	b510      	push	{r4, lr}
 801206e:	2000      	movs	r0, #0
 8012070:	4614      	mov	r4, r2
 8012072:	f852 1b04 	ldr.w	r1, [r2], #4
 8012076:	4299      	cmp	r1, r3
 8012078:	d008      	beq.n	801208c <udp_bind+0x24>
 801207a:	b141      	cbz	r1, 801208e <udp_bind+0x26>
 801207c:	3001      	adds	r0, #1
 801207e:	2808      	cmp	r0, #8
 8012080:	d1f7      	bne.n	8012072 <udp_bind+0xa>
 8012082:	4805      	ldr	r0, [pc, #20]	; (8012098 <udp_bind+0x30>)
 8012084:	f003 fb70 	bl	8015768 <console_error>
 8012088:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801208c:	bd10      	pop	{r4, pc}
 801208e:	f844 3020 	str.w	r3, [r4, r0, lsl #2]
 8012092:	e7fb      	b.n	801208c <udp_bind+0x24>
 8012094:	2000cfd0 	ldrdcs	ip, [r0], -r0
 8012098:	08019dce 	stmdaeq	r1, {r1, r2, r3, r6, r7, r8, sl, fp, ip, pc}

0801209c <udp_unbind>:
 801209c:	4a0c      	ldr	r2, [pc, #48]	; (80120d0 <udp_unbind+0x34>)
 801209e:	2300      	movs	r3, #0
 80120a0:	4611      	mov	r1, r2
 80120a2:	b510      	push	{r4, lr}
 80120a4:	f852 4b04 	ldr.w	r4, [r2], #4
 80120a8:	4284      	cmp	r4, r0
 80120aa:	d108      	bne.n	80120be <udp_unbind+0x22>
 80120ac:	2000      	movs	r0, #0
 80120ae:	f640 3294 	movw	r2, #2964	; 0xb94
 80120b2:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 80120b6:	4353      	muls	r3, r2
 80120b8:	4a06      	ldr	r2, [pc, #24]	; (80120d4 <udp_unbind+0x38>)
 80120ba:	5098      	str	r0, [r3, r2]
 80120bc:	bd10      	pop	{r4, pc}
 80120be:	3301      	adds	r3, #1
 80120c0:	2b08      	cmp	r3, #8
 80120c2:	d1ef      	bne.n	80120a4 <udp_unbind+0x8>
 80120c4:	4804      	ldr	r0, [pc, #16]	; (80120d8 <udp_unbind+0x3c>)
 80120c6:	f003 fb4f 	bl	8015768 <console_error>
 80120ca:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80120ce:	e7f5      	b.n	80120bc <udp_unbind+0x20>
 80120d0:	2000cfd0 	ldrdcs	ip, [r0], -r0
 80120d4:	2000cff0 	strdcs	ip, [r0], -r0
 80120d8:	08019dd3 	stmdaeq	r1, {r0, r1, r4, r6, r7, r8, sl, fp, ip, pc}

080120dc <udp_recv>:
 80120dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80120e0:	4604      	mov	r4, r0
 80120e2:	4698      	mov	r8, r3
 80120e4:	f640 3394 	movw	r3, #2964	; 0xb94
 80120e8:	435c      	muls	r4, r3
 80120ea:	4608      	mov	r0, r1
 80120ec:	4915      	ldr	r1, [pc, #84]	; (8012144 <udp_recv+0x68>)
 80120ee:	190f      	adds	r7, r1, r4
 80120f0:	f8b7 c002 	ldrh.w	ip, [r7, #2]
 80120f4:	5b0b      	ldrh	r3, [r1, r4]
 80120f6:	4563      	cmp	r3, ip
 80120f8:	d021      	beq.n	801213e <udp_recv+0x62>
 80120fa:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 80120fe:	fb03 fc0c 	mul.w	ip, r3, ip
 8012102:	eb0c 0604 	add.w	r6, ip, r4
 8012106:	440e      	add	r6, r1
 8012108:	f8b6 55ca 	ldrh.w	r5, [r6, #1482]	; 0x5ca
 801210c:	3404      	adds	r4, #4
 801210e:	4295      	cmp	r5, r2
 8012110:	bf28      	it	cs
 8012112:	4615      	movcs	r5, r2
 8012114:	4464      	add	r4, ip
 8012116:	462a      	mov	r2, r5
 8012118:	4421      	add	r1, r4
 801211a:	f7ff fedb 	bl	8011ed4 <net_memcpy>
 801211e:	f8d6 35c4 	ldr.w	r3, [r6, #1476]	; 0x5c4
 8012122:	f8c8 3000 	str.w	r3, [r8]
 8012126:	f8b6 25c8 	ldrh.w	r2, [r6, #1480]	; 0x5c8
 801212a:	9b06      	ldr	r3, [sp, #24]
 801212c:	801a      	strh	r2, [r3, #0]
 801212e:	887b      	ldrh	r3, [r7, #2]
 8012130:	3301      	adds	r3, #1
 8012132:	f003 0301 	and.w	r3, r3, #1
 8012136:	807b      	strh	r3, [r7, #2]
 8012138:	4628      	mov	r0, r5
 801213a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801213e:	2500      	movs	r5, #0
 8012140:	e7fa      	b.n	8012138 <udp_recv+0x5c>
 8012142:	bf00      	nop
 8012144:	2000cff0 	strdcs	ip, [r0], -r0

08012148 <udp_recv2>:
 8012148:	b5f0      	push	{r4, r5, r6, r7, lr}
 801214a:	f640 3594 	movw	r5, #2964	; 0xb94
 801214e:	4368      	muls	r0, r5
 8012150:	4c0f      	ldr	r4, [pc, #60]	; (8012190 <udp_recv2+0x48>)
 8012152:	1827      	adds	r7, r4, r0
 8012154:	887d      	ldrh	r5, [r7, #2]
 8012156:	5a26      	ldrh	r6, [r4, r0]
 8012158:	42ae      	cmp	r6, r5
 801215a:	d017      	beq.n	801218c <udp_recv2+0x44>
 801215c:	f44f 6cb9 	mov.w	ip, #1480	; 0x5c8
 8012160:	fb0c f505 	mul.w	r5, ip, r5
 8012164:	1d06      	adds	r6, r0, #4
 8012166:	442e      	add	r6, r5
 8012168:	4405      	add	r5, r0
 801216a:	4426      	add	r6, r4
 801216c:	442c      	add	r4, r5
 801216e:	600e      	str	r6, [r1, #0]
 8012170:	f8d4 15c4 	ldr.w	r1, [r4, #1476]	; 0x5c4
 8012174:	6011      	str	r1, [r2, #0]
 8012176:	f8b4 25c8 	ldrh.w	r2, [r4, #1480]	; 0x5c8
 801217a:	801a      	strh	r2, [r3, #0]
 801217c:	887b      	ldrh	r3, [r7, #2]
 801217e:	f8b4 05ca 	ldrh.w	r0, [r4, #1482]	; 0x5ca
 8012182:	3301      	adds	r3, #1
 8012184:	f003 0301 	and.w	r3, r3, #1
 8012188:	807b      	strh	r3, [r7, #2]
 801218a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801218c:	2000      	movs	r0, #0
 801218e:	e7fc      	b.n	801218a <udp_recv2+0x42>
 8012190:	2000cff0 	strdcs	ip, [r0], -r0

08012194 <udp_send>:
 8012194:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8012198:	f8df 9134 	ldr.w	r9, [pc, #308]	; 80122d0 <udp_send+0x13c>
 801219c:	461c      	mov	r4, r3
 801219e:	f859 3020 	ldr.w	r3, [r9, r0, lsl #2]
 80121a2:	4607      	mov	r7, r0
 80121a4:	4688      	mov	r8, r1
 80121a6:	4616      	mov	r6, r2
 80121a8:	2b00      	cmp	r3, #0
 80121aa:	f000 808e 	beq.w	80122ca <udp_send+0x136>
 80121ae:	1c63      	adds	r3, r4, #1
 80121b0:	d144      	bne.n	801223c <udp_send+0xa8>
 80121b2:	4848      	ldr	r0, [pc, #288]	; (80122d4 <udp_send+0x140>)
 80121b4:	2107      	movs	r1, #7
 80121b6:	4602      	mov	r2, r0
 80121b8:	23ff      	movs	r3, #255	; 0xff
 80121ba:	e001      	b.n	80121c0 <udp_send+0x2c>
 80121bc:	f800 3b01 	strb.w	r3, [r0], #1
 80121c0:	3901      	subs	r1, #1
 80121c2:	d1fb      	bne.n	80121bc <udp_send+0x28>
 80121c4:	7793      	strb	r3, [r2, #30]
 80121c6:	77d3      	strb	r3, [r2, #31]
 80121c8:	f882 3020 	strb.w	r3, [r2, #32]
 80121cc:	f882 3021 	strb.w	r3, [r2, #33]	; 0x21
 80121d0:	2500      	movs	r5, #0
 80121d2:	f8df a104 	ldr.w	sl, [pc, #260]	; 80122d8 <udp_send+0x144>
 80121d6:	4c3f      	ldr	r4, [pc, #252]	; (80122d4 <udp_send+0x140>)
 80121d8:	f8ba 3000 	ldrh.w	r3, [sl]
 80121dc:	2114      	movs	r1, #20
 80121de:	8263      	strh	r3, [r4, #18]
 80121e0:	f106 031c 	add.w	r3, r6, #28
 80121e4:	ba5b      	rev16	r3, r3
 80121e6:	f104 000e 	add.w	r0, r4, #14
 80121ea:	8223      	strh	r3, [r4, #16]
 80121ec:	7625      	strb	r5, [r4, #24]
 80121ee:	7665      	strb	r5, [r4, #25]
 80121f0:	f001 ffba 	bl	8014168 <net_chksum>
 80121f4:	f859 3027 	ldr.w	r3, [r9, r7, lsl #2]
 80121f8:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 80121fc:	ba5b      	rev16	r3, r3
 80121fe:	8463      	strh	r3, [r4, #34]	; 0x22
 8012200:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8012204:	4632      	mov	r2, r6
 8012206:	ba5b      	rev16	r3, r3
 8012208:	84a3      	strh	r3, [r4, #36]	; 0x24
 801220a:	f106 0308 	add.w	r3, r6, #8
 801220e:	ba5b      	rev16	r3, r3
 8012210:	bf28      	it	cs
 8012212:	f44f 62b8 	movcs.w	r2, #1472	; 0x5c0
 8012216:	4641      	mov	r1, r8
 8012218:	8320      	strh	r0, [r4, #24]
 801221a:	f104 002a 	add.w	r0, r4, #42	; 0x2a
 801221e:	84e3      	strh	r3, [r4, #38]	; 0x26
 8012220:	f7ff fe58 	bl	8011ed4 <net_memcpy>
 8012224:	4620      	mov	r0, r4
 8012226:	f106 012a 	add.w	r1, r6, #42	; 0x2a
 801222a:	f004 fdb9 	bl	8016da0 <emac_eth_send>
 801222e:	f8ba 3000 	ldrh.w	r3, [sl]
 8012232:	4628      	mov	r0, r5
 8012234:	3301      	adds	r3, #1
 8012236:	f8aa 3000 	strh.w	r3, [sl]
 801223a:	e037      	b.n	80122ac <udp_send+0x118>
 801223c:	4b27      	ldr	r3, [pc, #156]	; (80122dc <udp_send+0x148>)
 801223e:	681b      	ldr	r3, [r3, #0]
 8012240:	43a3      	bics	r3, r4
 8012242:	d10f      	bne.n	8012264 <udp_send+0xd0>
 8012244:	2307      	movs	r3, #7
 8012246:	21ff      	movs	r1, #255	; 0xff
 8012248:	4a22      	ldr	r2, [pc, #136]	; (80122d4 <udp_send+0x140>)
 801224a:	e001      	b.n	8012250 <udp_send+0xbc>
 801224c:	f802 1b01 	strb.w	r1, [r2], #1
 8012250:	3b01      	subs	r3, #1
 8012252:	d1fb      	bne.n	801224c <udp_send+0xb8>
 8012254:	2204      	movs	r2, #4
 8012256:	4822      	ldr	r0, [pc, #136]	; (80122e0 <udp_send+0x14c>)
 8012258:	eb0d 0102 	add.w	r1, sp, r2
 801225c:	9401      	str	r4, [sp, #4]
 801225e:	f7ff fe2f 	bl	8011ec0 <memcpy.isra.0>
 8012262:	e7b5      	b.n	80121d0 <udp_send+0x3c>
 8012264:	f004 03e0 	and.w	r3, r4, #224	; 0xe0
 8012268:	2be0      	cmp	r3, #224	; 0xe0
 801226a:	d10e      	bne.n	801228a <udp_send+0xf6>
 801226c:	491d      	ldr	r1, [pc, #116]	; (80122e4 <udp_send+0x150>)
 801226e:	f3c4 2306 	ubfx	r3, r4, #8, #7
 8012272:	70cb      	strb	r3, [r1, #3]
 8012274:	f3c4 4307 	ubfx	r3, r4, #16, #8
 8012278:	710b      	strb	r3, [r1, #4]
 801227a:	f3c4 6307 	ubfx	r3, r4, #24, #8
 801227e:	2206      	movs	r2, #6
 8012280:	4814      	ldr	r0, [pc, #80]	; (80122d4 <udp_send+0x140>)
 8012282:	714b      	strb	r3, [r1, #5]
 8012284:	f7ff fe1c 	bl	8011ec0 <memcpy.isra.0>
 8012288:	e7e4      	b.n	8012254 <udp_send+0xc0>
 801228a:	4b17      	ldr	r3, [pc, #92]	; (80122e8 <udp_send+0x154>)
 801228c:	681b      	ldr	r3, [r3, #0]
 801228e:	43a3      	bics	r3, r4
 8012290:	d00f      	beq.n	80122b2 <udp_send+0x11e>
 8012292:	4d16      	ldr	r5, [pc, #88]	; (80122ec <udp_send+0x158>)
 8012294:	490f      	ldr	r1, [pc, #60]	; (80122d4 <udp_send+0x140>)
 8012296:	6828      	ldr	r0, [r5, #0]
 8012298:	f001 fb30 	bl	80138fc <arp_cache_lookup>
 801229c:	682b      	ldr	r3, [r5, #0]
 801229e:	4298      	cmp	r0, r3
 80122a0:	d0d8      	beq.n	8012254 <udp_send+0xc0>
 80122a2:	4813      	ldr	r0, [pc, #76]	; (80122f0 <udp_send+0x15c>)
 80122a4:	f003 fa60 	bl	8015768 <console_error>
 80122a8:	f06f 0002 	mvn.w	r0, #2
 80122ac:	b002      	add	sp, #8
 80122ae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80122b2:	4620      	mov	r0, r4
 80122b4:	4907      	ldr	r1, [pc, #28]	; (80122d4 <udp_send+0x140>)
 80122b6:	f001 fb21 	bl	80138fc <arp_cache_lookup>
 80122ba:	42a0      	cmp	r0, r4
 80122bc:	d0ca      	beq.n	8012254 <udp_send+0xc0>
 80122be:	480d      	ldr	r0, [pc, #52]	; (80122f4 <udp_send+0x160>)
 80122c0:	f003 fa52 	bl	8015768 <console_error>
 80122c4:	f06f 0001 	mvn.w	r0, #1
 80122c8:	e7f0      	b.n	80122ac <udp_send+0x118>
 80122ca:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80122ce:	e7ed      	b.n	80122ac <udp_send+0x118>
 80122d0:	2000cfd0 	ldrdcs	ip, [r0], -r0
 80122d4:	20012c90 	mulcs	r1, r0, ip
 80122d8:	2000cfcc 	andcs	ip, r0, ip, asr #31
 80122dc:	2000cfc0 	andcs	ip, r0, r0, asr #31
 80122e0:	20012cae 	andcs	r2, r1, lr, lsr #25
 80122e4:	20000004 	andcs	r0, r0, r4
 80122e8:	2000cfc8 	andcs	ip, r0, r8, asr #31
 80122ec:	2000cfc4 	andcs	ip, r0, r4, asr #31
 80122f0:	08019ddb 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, r8, sl, fp, ip, pc}
 80122f4:	08019e01 	stmdaeq	r1, {r0, r9, sl, fp, ip, pc}

080122f8 <strlen>:
 80122f8:	4603      	mov	r3, r0
 80122fa:	461a      	mov	r2, r3
 80122fc:	7811      	ldrb	r1, [r2, #0]
 80122fe:	3301      	adds	r3, #1
 8012300:	2900      	cmp	r1, #0
 8012302:	d1fa      	bne.n	80122fa <strlen+0x2>
 8012304:	1a10      	subs	r0, r2, r0
 8012306:	4770      	bx	lr

08012308 <strcmp>:
 8012308:	1e43      	subs	r3, r0, #1
 801230a:	3901      	subs	r1, #1
 801230c:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8012310:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 8012314:	4290      	cmp	r0, r2
 8012316:	d102      	bne.n	801231e <strcmp+0x16>
 8012318:	2800      	cmp	r0, #0
 801231a:	d1f7      	bne.n	801230c <strcmp+0x4>
 801231c:	4770      	bx	lr
 801231e:	1a80      	subs	r0, r0, r2
 8012320:	4770      	bx	lr

08012322 <strcpy.isra.0>:
 8012322:	3801      	subs	r0, #1
 8012324:	f811 3b01 	ldrb.w	r3, [r1], #1
 8012328:	f800 3f01 	strb.w	r3, [r0, #1]!
 801232c:	2b00      	cmp	r3, #0
 801232e:	d1f9      	bne.n	8012324 <strcpy.isra.0+0x2>
 8012330:	4770      	bx	lr

08012332 <strcat.isra.0>:
 8012332:	b538      	push	{r3, r4, r5, lr}
 8012334:	4604      	mov	r4, r0
 8012336:	460d      	mov	r5, r1
 8012338:	f7ff ffde 	bl	80122f8 <strlen>
 801233c:	4629      	mov	r1, r5
 801233e:	4420      	add	r0, r4
 8012340:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8012344:	f7ff bfed 	b.w	8012322 <strcpy.isra.0>

08012348 <MDNS::MDNS()>:
 8012348:	b513      	push	{r0, r1, r4, lr}
 801234a:	4604      	mov	r4, r0
 801234c:	a901      	add	r1, sp, #4
 801234e:	4804      	ldr	r0, [pc, #16]	; (8012360 <MDNS::MDNS()+0x18>)
 8012350:	f003 fc1e 	bl	8015b90 <inet_aton>
 8012354:	4620      	mov	r0, r4
 8012356:	4b03      	ldr	r3, [pc, #12]	; (8012364 <MDNS::MDNS()+0x1c>)
 8012358:	9a01      	ldr	r2, [sp, #4]
 801235a:	601a      	str	r2, [r3, #0]
 801235c:	b002      	add	sp, #8
 801235e:	bd10      	pop	{r4, pc}
 8012360:	08019e21 	stmdaeq	r1, {r0, r5, r9, sl, fp, ip, pc}
 8012364:	20013284 	andcs	r3, r1, r4, lsl #5

08012368 <MDNS::SetName(char const*)>:
 8012368:	b538      	push	{r3, r4, r5, lr}
 801236a:	4d0b      	ldr	r5, [pc, #44]	; (8012398 <MDNS::SetName(char const*)+0x30>)
 801236c:	460c      	mov	r4, r1
 801236e:	6828      	ldr	r0, [r5, #0]
 8012370:	b108      	cbz	r0, 8012376 <MDNS::SetName(char const*)+0xe>
 8012372:	f003 fc07 	bl	8015b84 <operator delete[](void*)>
 8012376:	4620      	mov	r0, r4
 8012378:	f7ff ffbe 	bl	80122f8 <strlen>
 801237c:	3007      	adds	r0, #7
 801237e:	f003 fc05 	bl	8015b8c <operator new[](unsigned int)>
 8012382:	4621      	mov	r1, r4
 8012384:	6028      	str	r0, [r5, #0]
 8012386:	f7ff ffcc 	bl	8012322 <strcpy.isra.0>
 801238a:	6828      	ldr	r0, [r5, #0]
 801238c:	4903      	ldr	r1, [pc, #12]	; (801239c <MDNS::SetName(char const*)+0x34>)
 801238e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8012392:	f7ff bfce 	b.w	8012332 <strcat.isra.0>
 8012396:	bf00      	nop
 8012398:	200136b4 			; <UNDEFINED> instruction: 0x200136b4
 801239c:	08019e31 	stmdaeq	r1, {r0, r4, r5, r9, sl, fp, ip, pc}

080123a0 <MDNS::DecodeDNSNameNotation(char const*, char*)>:
 80123a0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80123a4:	f04f 0e00 	mov.w	lr, #0
 80123a8:	262e      	movs	r6, #46	; 0x2e
 80123aa:	4675      	mov	r5, lr
 80123ac:	4694      	mov	ip, r2
 80123ae:	4f1d      	ldr	r7, [pc, #116]	; (8012424 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x84>)
 80123b0:	4a1d      	ldr	r2, [pc, #116]	; (8012428 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x88>)
 80123b2:	780b      	ldrb	r3, [r1, #0]
 80123b4:	1c68      	adds	r0, r5, #1
 80123b6:	b383      	cbz	r3, 801241a <MDNS::DecodeDNSNameNotation(char const*, char*)+0x7a>
 80123b8:	2b3f      	cmp	r3, #63	; 0x3f
 80123ba:	d91d      	bls.n	80123f8 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x58>
 80123bc:	f1be 0f00 	cmp.w	lr, #0
 80123c0:	bf08      	it	eq
 80123c2:	4605      	moveq	r5, r0
 80123c4:	2000      	movs	r0, #0
 80123c6:	7849      	ldrb	r1, [r1, #1]
 80123c8:	ea07 2303 	and.w	r3, r7, r3, lsl #8
 80123cc:	430b      	orrs	r3, r1
 80123ce:	6811      	ldr	r1, [r2, #0]
 80123d0:	5ccc      	ldrb	r4, [r1, r3]
 80123d2:	3301      	adds	r3, #1
 80123d4:	440b      	add	r3, r1
 80123d6:	42a0      	cmp	r0, r4
 80123d8:	5c19      	ldrb	r1, [r3, r0]
 80123da:	d309      	bcc.n	80123f0 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x50>
 80123dc:	f04f 0e01 	mov.w	lr, #1
 80123e0:	1919      	adds	r1, r3, r4
 80123e2:	4464      	add	r4, ip
 80123e4:	780b      	ldrb	r3, [r1, #0]
 80123e6:	b10b      	cbz	r3, 80123ec <MDNS::DecodeDNSNameNotation(char const*, char*)+0x4c>
 80123e8:	f804 6b01 	strb.w	r6, [r4], #1
 80123ec:	46a4      	mov	ip, r4
 80123ee:	e7e0      	b.n	80123b2 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x12>
 80123f0:	f80c 1000 	strb.w	r1, [ip, r0]
 80123f4:	3001      	adds	r0, #1
 80123f6:	e7ee      	b.n	80123d6 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x36>
 80123f8:	4688      	mov	r8, r1
 80123fa:	eb0c 0403 	add.w	r4, ip, r3
 80123fe:	f818 9f01 	ldrb.w	r9, [r8, #1]!
 8012402:	f80c 9b01 	strb.w	r9, [ip], #1
 8012406:	4564      	cmp	r4, ip
 8012408:	d1f9      	bne.n	80123fe <MDNS::DecodeDNSNameNotation(char const*, char*)+0x5e>
 801240a:	f103 0c01 	add.w	ip, r3, #1
 801240e:	4461      	add	r1, ip
 8012410:	f1be 0f00 	cmp.w	lr, #0
 8012414:	d1e6      	bne.n	80123e4 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x44>
 8012416:	18c5      	adds	r5, r0, r3
 8012418:	e7e4      	b.n	80123e4 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x44>
 801241a:	f88c 3000 	strb.w	r3, [ip]
 801241e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012422:	bf00      	nop
 8012424:	ffff3f00 			; <UNDEFINED> instruction: 0xffff3f00
 8012428:	200136b8 			; <UNDEFINED> instruction: 0x200136b8

0801242c <MDNS::FindFirstDotFromRight(char const*) const>:
 801242c:	b510      	push	{r4, lr}
 801242e:	4608      	mov	r0, r1
 8012430:	460c      	mov	r4, r1
 8012432:	f7ff ff61 	bl	80122f8 <strlen>
 8012436:	4420      	add	r0, r4
 8012438:	42a0      	cmp	r0, r4
 801243a:	d903      	bls.n	8012444 <MDNS::FindFirstDotFromRight(char const*) const+0x18>
 801243c:	f810 3901 	ldrb.w	r3, [r0], #-1
 8012440:	2b2e      	cmp	r3, #46	; 0x2e
 8012442:	d1f9      	bne.n	8012438 <MDNS::FindFirstDotFromRight(char const*) const+0xc>
 8012444:	3001      	adds	r0, #1
 8012446:	bd10      	pop	{r4, pc}

08012448 <MDNS::WriteDnsName(char const*, char*, bool)>:
 8012448:	4610      	mov	r0, r2
 801244a:	b5f0      	push	{r4, r5, r6, r7, lr}
 801244c:	460f      	mov	r7, r1
 801244e:	1c44      	adds	r4, r0, #1
 8012450:	463d      	mov	r5, r7
 8012452:	f817 6b01 	ldrb.w	r6, [r7], #1
 8012456:	b126      	cbz	r6, 8012462 <MDNS::WriteDnsName(char const*, char*, bool)+0x1a>
 8012458:	2e2e      	cmp	r6, #46	; 0x2e
 801245a:	d002      	beq.n	8012462 <MDNS::WriteDnsName(char const*, char*, bool)+0x1a>
 801245c:	f804 6b01 	strb.w	r6, [r4], #1
 8012460:	e7f6      	b.n	8012450 <MDNS::WriteDnsName(char const*, char*, bool)+0x8>
 8012462:	1a69      	subs	r1, r5, r1
 8012464:	7001      	strb	r1, [r0, #0]
 8012466:	7829      	ldrb	r1, [r5, #0]
 8012468:	b921      	cbnz	r1, 8012474 <MDNS::WriteDnsName(char const*, char*, bool)+0x2c>
 801246a:	b10b      	cbz	r3, 8012470 <MDNS::WriteDnsName(char const*, char*, bool)+0x28>
 801246c:	f804 1b01 	strb.w	r1, [r4], #1
 8012470:	1aa0      	subs	r0, r4, r2
 8012472:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012474:	4620      	mov	r0, r4
 8012476:	1c69      	adds	r1, r5, #1
 8012478:	e7e8      	b.n	801244c <MDNS::WriteDnsName(char const*, char*, bool)+0x4>
	...

0801247c <MDNS::CreateAnswerLocalIpAddress()>:
 801247c:	2384      	movs	r3, #132	; 0x84
 801247e:	b510      	push	{r4, lr}
 8012480:	4c0f      	ldr	r4, [pc, #60]	; (80124c0 <MDNS::CreateAnswerLocalIpAddress()+0x44>)
 8012482:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8012486:	80e3      	strh	r3, [r4, #6]
 8012488:	2300      	movs	r3, #0
 801248a:	490e      	ldr	r1, [pc, #56]	; (80124c4 <MDNS::CreateAnswerLocalIpAddress()+0x48>)
 801248c:	e9c4 2302 	strd	r2, r3, [r4, #8]
 8012490:	6809      	ldr	r1, [r1, #0]
 8012492:	f104 0210 	add.w	r2, r4, #16
 8012496:	2301      	movs	r3, #1
 8012498:	f7ff ffd6 	bl	8012448 <MDNS::WriteDnsName(char const*, char*, bool)>
 801249c:	490a      	ldr	r1, [pc, #40]	; (80124c8 <MDNS::CreateAnswerLocalIpAddress()+0x4c>)
 801249e:	1813      	adds	r3, r2, r0
 80124a0:	5011      	str	r1, [r2, r0]
 80124a2:	f04f 42f0 	mov.w	r2, #2013265920	; 0x78000000
 80124a6:	605a      	str	r2, [r3, #4]
 80124a8:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80124ac:	811a      	strh	r2, [r3, #8]
 80124ae:	4a07      	ldr	r2, [pc, #28]	; (80124cc <MDNS::CreateAnswerLocalIpAddress()+0x50>)
 80124b0:	6812      	ldr	r2, [r2, #0]
 80124b2:	6912      	ldr	r2, [r2, #16]
 80124b4:	f8c3 200a 	str.w	r2, [r3, #10]
 80124b8:	1b1b      	subs	r3, r3, r4
 80124ba:	330a      	adds	r3, #10
 80124bc:	6023      	str	r3, [r4, #0]
 80124be:	bd10      	pop	{r4, pc}
 80124c0:	20013288 	andcs	r3, r1, r8, lsl #5
 80124c4:	200136b4 			; <UNDEFINED> instruction: 0x200136b4
 80124c8:	01800100 	orreq	r0, r0, r0, lsl #2
 80124cc:	200136bc 			; <UNDEFINED> instruction: 0x200136bc

080124d0 <MDNS::Start()>:
 80124d0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80124d2:	4c1e      	ldr	r4, [pc, #120]	; (801254c <MDNS::Start()+0x7c>)
 80124d4:	f241 41e9 	movw	r1, #5353	; 0x14e9
 80124d8:	4605      	mov	r5, r0
 80124da:	6820      	ldr	r0, [r4, #0]
 80124dc:	f000 fb2a 	bl	8012b34 <Network::Begin(unsigned short)>
 80124e0:	4e1b      	ldr	r6, [pc, #108]	; (8012550 <MDNS::Start()+0x80>)
 80124e2:	4f1c      	ldr	r7, [pc, #112]	; (8012554 <MDNS::Start()+0x84>)
 80124e4:	4601      	mov	r1, r0
 80124e6:	6030      	str	r0, [r6, #0]
 80124e8:	683a      	ldr	r2, [r7, #0]
 80124ea:	6820      	ldr	r0, [r4, #0]
 80124ec:	f000 fb33 	bl	8012b56 <Network::JoinGroup(int, unsigned int)>
 80124f0:	4b19      	ldr	r3, [pc, #100]	; (8012558 <MDNS::Start()+0x88>)
 80124f2:	681b      	ldr	r3, [r3, #0]
 80124f4:	b923      	cbnz	r3, 8012500 <MDNS::Start()+0x30>
 80124f6:	6821      	ldr	r1, [r4, #0]
 80124f8:	4628      	mov	r0, r5
 80124fa:	311c      	adds	r1, #28
 80124fc:	f7ff ff34 	bl	8012368 <MDNS::SetName(char const*)>
 8012500:	4628      	mov	r0, r5
 8012502:	f7ff ffbb 	bl	801247c <MDNS::CreateAnswerLocalIpAddress()>
 8012506:	f241 43e9 	movw	r3, #5353	; 0x14e9
 801250a:	4914      	ldr	r1, [pc, #80]	; (801255c <MDNS::Start()+0x8c>)
 801250c:	7830      	ldrb	r0, [r6, #0]
 801250e:	f851 2b04 	ldr.w	r2, [r1], #4
 8012512:	9300      	str	r3, [sp, #0]
 8012514:	b292      	uxth	r2, r2
 8012516:	683b      	ldr	r3, [r7, #0]
 8012518:	f7ff fe3c 	bl	8012194 <udp_send>
 801251c:	223f      	movs	r2, #63	; 0x3f
 801251e:	6820      	ldr	r0, [r4, #0]
 8012520:	4c0f      	ldr	r4, [pc, #60]	; (8012560 <MDNS::Start()+0x90>)
 8012522:	f100 035c 	add.w	r3, r0, #92	; 0x5c
 8012526:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 801252a:	b929      	cbnz	r1, 8012538 <MDNS::Start()+0x68>
 801252c:	441a      	add	r2, r3
 801252e:	4293      	cmp	r3, r2
 8012530:	d006      	beq.n	8012540 <MDNS::Start()+0x70>
 8012532:	f803 1b01 	strb.w	r1, [r3], #1
 8012536:	e7fa      	b.n	801252e <MDNS::Start()+0x5e>
 8012538:	3a01      	subs	r2, #1
 801253a:	f803 1b01 	strb.w	r1, [r3], #1
 801253e:	d1f2      	bne.n	8012526 <MDNS::Start()+0x56>
 8012540:	2300      	movs	r3, #0
 8012542:	f880 309b 	strb.w	r3, [r0, #155]	; 0x9b
 8012546:	b003      	add	sp, #12
 8012548:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801254a:	bf00      	nop
 801254c:	200136bc 			; <UNDEFINED> instruction: 0x200136bc
 8012550:	2000000c 	andcs	r0, r0, ip
 8012554:	20013284 	andcs	r3, r1, r4, lsl #5
 8012558:	200136b4 			; <UNDEFINED> instruction: 0x200136b4
 801255c:	20013288 	andcs	r3, r1, r8, lsl #5
 8012560:	08019e31 	stmdaeq	r1, {r0, r4, r5, r9, sl, fp, ip, pc}

08012564 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)>:
 8012564:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012568:	4c1b      	ldr	r4, [pc, #108]	; (80125d8 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x74>)
 801256a:	ea4f 1c01 	mov.w	ip, r1, lsl #4
 801256e:	eb04 1501 	add.w	r5, r4, r1, lsl #4
 8012572:	2300      	movs	r3, #0
 8012574:	f854 100c 	ldr.w	r1, [r4, ip]
 8012578:	4607      	mov	r7, r0
 801257a:	f7ff ff65 	bl	8012448 <MDNS::WriteDnsName(char const*, char*, bool)>
 801257e:	2301      	movs	r3, #1
 8012580:	7bac      	ldrb	r4, [r5, #14]
 8012582:	4616      	mov	r6, r2
 8012584:	4915      	ldr	r1, [pc, #84]	; (80125dc <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x78>)
 8012586:	4402      	add	r2, r0
 8012588:	4815      	ldr	r0, [pc, #84]	; (80125e0 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x7c>)
 801258a:	429c      	cmp	r4, r3
 801258c:	bf18      	it	ne
 801258e:	4601      	movne	r1, r0
 8012590:	4638      	mov	r0, r7
 8012592:	f7ff ff59 	bl	8012448 <MDNS::WriteDnsName(char const*, char*, bool)>
 8012596:	4b13      	ldr	r3, [pc, #76]	; (80125e4 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x80>)
 8012598:	1814      	adds	r4, r2, r0
 801259a:	5013      	str	r3, [r2, r0]
 801259c:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 80125a0:	6063      	str	r3, [r4, #4]
 80125a2:	4b11      	ldr	r3, [pc, #68]	; (80125e8 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x84>)
 80125a4:	f8d3 8000 	ldr.w	r8, [r3]
 80125a8:	4640      	mov	r0, r8
 80125aa:	f7ff fea5 	bl	80122f8 <strlen>
 80125ae:	f100 0308 	add.w	r3, r0, #8
 80125b2:	ba5b      	rev16	r3, r3
 80125b4:	8123      	strh	r3, [r4, #8]
 80125b6:	2300      	movs	r3, #0
 80125b8:	f8c4 300a 	str.w	r3, [r4, #10]
 80125bc:	89ab      	ldrh	r3, [r5, #12]
 80125be:	f104 0210 	add.w	r2, r4, #16
 80125c2:	ba5b      	rev16	r3, r3
 80125c4:	81e3      	strh	r3, [r4, #14]
 80125c6:	4641      	mov	r1, r8
 80125c8:	2301      	movs	r3, #1
 80125ca:	4638      	mov	r0, r7
 80125cc:	f7ff ff3c 	bl	8012448 <MDNS::WriteDnsName(char const*, char*, bool)>
 80125d0:	4410      	add	r0, r2
 80125d2:	1b80      	subs	r0, r0, r6
 80125d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80125d8:	2001348c 	andcs	r3, r1, ip, lsl #9
 80125dc:	08019e2d 	stmdaeq	r1, {r0, r2, r3, r5, r9, sl, fp, ip, pc}
 80125e0:	08019e4a 	stmdaeq	r1, {r1, r3, r6, r9, sl, fp, ip, pc}
 80125e4:	01802100 	orreq	r2, r0, r0, lsl #2
 80125e8:	200136b4 			; <UNDEFINED> instruction: 0x200136b4

080125ec <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)>:
 80125ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80125f0:	4e19      	ldr	r6, [pc, #100]	; (8012658 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x6c>)
 80125f2:	010f      	lsls	r7, r1, #4
 80125f4:	eb06 1501 	add.w	r5, r6, r1, lsl #4
 80125f8:	2300      	movs	r3, #0
 80125fa:	59f1      	ldr	r1, [r6, r7]
 80125fc:	4604      	mov	r4, r0
 80125fe:	f7ff ff23 	bl	8012448 <MDNS::WriteDnsName(char const*, char*, bool)>
 8012602:	2301      	movs	r3, #1
 8012604:	7bae      	ldrb	r6, [r5, #14]
 8012606:	4690      	mov	r8, r2
 8012608:	4914      	ldr	r1, [pc, #80]	; (801265c <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x70>)
 801260a:	4402      	add	r2, r0
 801260c:	4814      	ldr	r0, [pc, #80]	; (8012660 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x74>)
 801260e:	429e      	cmp	r6, r3
 8012610:	bf18      	it	ne
 8012612:	4601      	movne	r1, r0
 8012614:	4620      	mov	r0, r4
 8012616:	f7ff ff17 	bl	8012448 <MDNS::WriteDnsName(char const*, char*, bool)>
 801261a:	4b12      	ldr	r3, [pc, #72]	; (8012664 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x78>)
 801261c:	1816      	adds	r6, r2, r0
 801261e:	5013      	str	r3, [r2, r0]
 8012620:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 8012624:	68a8      	ldr	r0, [r5, #8]
 8012626:	6073      	str	r3, [r6, #4]
 8012628:	f106 040b 	add.w	r4, r6, #11
 801262c:	b938      	cbnz	r0, 801263e <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x52>
 801262e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8012632:	72b0      	strb	r0, [r6, #10]
 8012634:	8133      	strh	r3, [r6, #8]
 8012636:	eba4 0008 	sub.w	r0, r4, r8
 801263a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801263e:	f7ff fe5b 	bl	80122f8 <strlen>
 8012642:	4607      	mov	r7, r0
 8012644:	1c43      	adds	r3, r0, #1
 8012646:	72b0      	strb	r0, [r6, #10]
 8012648:	ba5b      	rev16	r3, r3
 801264a:	4620      	mov	r0, r4
 801264c:	68a9      	ldr	r1, [r5, #8]
 801264e:	8133      	strh	r3, [r6, #8]
 8012650:	f7ff fe67 	bl	8012322 <strcpy.isra.0>
 8012654:	443c      	add	r4, r7
 8012656:	e7ee      	b.n	8012636 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x4a>
 8012658:	2001348c 	andcs	r3, r1, ip, lsl #9
 801265c:	08019e2d 	stmdaeq	r1, {r0, r2, r3, r5, r9, sl, fp, ip, pc}
 8012660:	08019e4a 	stmdaeq	r1, {r1, r3, r6, r9, sl, fp, ip, pc}
 8012664:	01801000 	orreq	r1, r0, r0

08012668 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)>:
 8012668:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801266c:	f8df 8060 	ldr.w	r8, [pc, #96]	; 80126d0 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x68>
 8012670:	ea4f 1901 	mov.w	r9, r1, lsl #4
 8012674:	eb08 1501 	add.w	r5, r8, r1, lsl #4
 8012678:	6869      	ldr	r1, [r5, #4]
 801267a:	2301      	movs	r3, #1
 801267c:	4607      	mov	r7, r0
 801267e:	f7ff fee3 	bl	8012448 <MDNS::WriteDnsName(char const*, char*, bool)>
 8012682:	4b14      	ldr	r3, [pc, #80]	; (80126d4 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x6c>)
 8012684:	f858 8009 	ldr.w	r8, [r8, r9]
 8012688:	5013      	str	r3, [r2, r0]
 801268a:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 801268e:	1816      	adds	r6, r2, r0
 8012690:	6073      	str	r3, [r6, #4]
 8012692:	4640      	mov	r0, r8
 8012694:	4614      	mov	r4, r2
 8012696:	f7ff fe2f 	bl	80122f8 <strlen>
 801269a:	f100 030d 	add.w	r3, r0, #13
 801269e:	ba5b      	rev16	r3, r3
 80126a0:	4641      	mov	r1, r8
 80126a2:	8133      	strh	r3, [r6, #8]
 80126a4:	f106 020a 	add.w	r2, r6, #10
 80126a8:	2300      	movs	r3, #0
 80126aa:	4638      	mov	r0, r7
 80126ac:	f7ff fecc 	bl	8012448 <MDNS::WriteDnsName(char const*, char*, bool)>
 80126b0:	2301      	movs	r3, #1
 80126b2:	4402      	add	r2, r0
 80126b4:	7bad      	ldrb	r5, [r5, #14]
 80126b6:	4808      	ldr	r0, [pc, #32]	; (80126d8 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x70>)
 80126b8:	4908      	ldr	r1, [pc, #32]	; (80126dc <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x74>)
 80126ba:	429d      	cmp	r5, r3
 80126bc:	bf18      	it	ne
 80126be:	4601      	movne	r1, r0
 80126c0:	4638      	mov	r0, r7
 80126c2:	f7ff fec1 	bl	8012448 <MDNS::WriteDnsName(char const*, char*, bool)>
 80126c6:	4410      	add	r0, r2
 80126c8:	1b00      	subs	r0, r0, r4
 80126ca:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80126ce:	bf00      	nop
 80126d0:	2001348c 	andcs	r3, r1, ip, lsl #9
 80126d4:	01000c00 	tsteq	r0, r0, lsl #24
 80126d8:	08019e4a 	stmdaeq	r1, {r1, r3, r6, r9, sl, fp, ip, pc}
 80126dc:	08019e2d 	stmdaeq	r1, {r0, r2, r3, r5, r9, sl, fp, ip, pc}

080126e0 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)>:
 80126e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80126e2:	460f      	mov	r7, r1
 80126e4:	2301      	movs	r3, #1
 80126e6:	490f      	ldr	r1, [pc, #60]	; (8012724 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x44>)
 80126e8:	4606      	mov	r6, r0
 80126ea:	f7ff fead 	bl	8012448 <MDNS::WriteDnsName(char const*, char*, bool)>
 80126ee:	4b0e      	ldr	r3, [pc, #56]	; (8012728 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x48>)
 80126f0:	490e      	ldr	r1, [pc, #56]	; (801272c <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x4c>)
 80126f2:	5013      	str	r3, [r2, r0]
 80126f4:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 80126f8:	eb01 1107 	add.w	r1, r1, r7, lsl #4
 80126fc:	684f      	ldr	r7, [r1, #4]
 80126fe:	1815      	adds	r5, r2, r0
 8012700:	606b      	str	r3, [r5, #4]
 8012702:	4638      	mov	r0, r7
 8012704:	4614      	mov	r4, r2
 8012706:	f7ff fdf7 	bl	80122f8 <strlen>
 801270a:	1c83      	adds	r3, r0, #2
 801270c:	ba5b      	rev16	r3, r3
 801270e:	812b      	strh	r3, [r5, #8]
 8012710:	f105 020a 	add.w	r2, r5, #10
 8012714:	2301      	movs	r3, #1
 8012716:	4639      	mov	r1, r7
 8012718:	4630      	mov	r0, r6
 801271a:	f7ff fe95 	bl	8012448 <MDNS::WriteDnsName(char const*, char*, bool)>
 801271e:	4410      	add	r0, r2
 8012720:	1b00      	subs	r0, r0, r4
 8012722:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8012724:	08019e38 	stmdaeq	r1, {r3, r4, r5, r9, sl, fp, ip, pc}
 8012728:	01000c00 	tsteq	r0, r0, lsl #24
 801272c:	2001348c 	andcs	r3, r1, ip, lsl #9

08012730 <MDNS::CreateMDNSMessage(unsigned int)>:
 8012730:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012732:	2384      	movs	r3, #132	; 0x84
 8012734:	4d19      	ldr	r5, [pc, #100]	; (801279c <MDNS::CreateMDNSMessage(unsigned int)+0x6c>)
 8012736:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 801273a:	80eb      	strh	r3, [r5, #6]
 801273c:	f44f 7380 	mov.w	r3, #256	; 0x100
 8012740:	f105 0410 	add.w	r4, r5, #16
 8012744:	e9c5 2302 	strd	r2, r3, [r5, #8]
 8012748:	4622      	mov	r2, r4
 801274a:	4606      	mov	r6, r0
 801274c:	460f      	mov	r7, r1
 801274e:	f7ff ff09 	bl	8012564 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)>
 8012752:	4404      	add	r4, r0
 8012754:	4622      	mov	r2, r4
 8012756:	4639      	mov	r1, r7
 8012758:	4630      	mov	r0, r6
 801275a:	f7ff ff47 	bl	80125ec <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)>
 801275e:	4404      	add	r4, r0
 8012760:	4622      	mov	r2, r4
 8012762:	4639      	mov	r1, r7
 8012764:	4630      	mov	r0, r6
 8012766:	f7ff ffbb 	bl	80126e0 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)>
 801276a:	4404      	add	r4, r0
 801276c:	4622      	mov	r2, r4
 801276e:	4639      	mov	r1, r7
 8012770:	4630      	mov	r0, r6
 8012772:	f7ff ff79 	bl	8012668 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)>
 8012776:	4b0a      	ldr	r3, [pc, #40]	; (80127a0 <MDNS::CreateMDNSMessage(unsigned int)+0x70>)
 8012778:	4404      	add	r4, r0
 801277a:	f853 2b10 	ldr.w	r2, [r3], #16
 801277e:	1e60      	subs	r0, r4, #1
 8012780:	3a0c      	subs	r2, #12
 8012782:	4611      	mov	r1, r2
 8012784:	3901      	subs	r1, #1
 8012786:	d304      	bcc.n	8012792 <MDNS::CreateMDNSMessage(unsigned int)+0x62>
 8012788:	f813 6b01 	ldrb.w	r6, [r3], #1
 801278c:	f800 6f01 	strb.w	r6, [r0, #1]!
 8012790:	e7f8      	b.n	8012784 <MDNS::CreateMDNSMessage(unsigned int)+0x54>
 8012792:	4414      	add	r4, r2
 8012794:	4a03      	ldr	r2, [pc, #12]	; (80127a4 <MDNS::CreateMDNSMessage(unsigned int)+0x74>)
 8012796:	1aa4      	subs	r4, r4, r2
 8012798:	602c      	str	r4, [r5, #0]
 801279a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801279c:	200134b0 			; <UNDEFINED> instruction: 0x200134b0
 80127a0:	20013288 	andcs	r3, r1, r8, lsl #5
 80127a4:	200134b4 			; <UNDEFINED> instruction: 0x200134b4

080127a8 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>:
 80127a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80127ac:	4d3f      	ldr	r5, [pc, #252]	; (80128ac <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x104>)
 80127ae:	b085      	sub	sp, #20
 80127b0:	682c      	ldr	r4, [r5, #0]
 80127b2:	4680      	mov	r8, r0
 80127b4:	460f      	mov	r7, r1
 80127b6:	4616      	mov	r6, r2
 80127b8:	f89d b038 	ldrb.w	fp, [sp, #56]	; 0x38
 80127bc:	f8dd a03c 	ldr.w	sl, [sp, #60]	; 0x3c
 80127c0:	b11c      	cbz	r4, 80127ca <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x22>
 80127c2:	692a      	ldr	r2, [r5, #16]
 80127c4:	2a00      	cmp	r2, #0
 80127c6:	d16d      	bne.n	80128a4 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xfc>
 80127c8:	2401      	movs	r4, #1
 80127ca:	eb05 1204 	add.w	r2, r5, r4, lsl #4
 80127ce:	ea4f 1904 	mov.w	r9, r4, lsl #4
 80127d2:	8193      	strh	r3, [r2, #12]
 80127d4:	f882 b00e 	strb.w	fp, [r2, #14]
 80127d8:	2f00      	cmp	r7, #0
 80127da:	d153      	bne.n	8012884 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xdc>
 80127dc:	4630      	mov	r0, r6
 80127de:	f7ff fd8b 	bl	80122f8 <strlen>
 80127e2:	4f33      	ldr	r7, [pc, #204]	; (80128b0 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x108>)
 80127e4:	683b      	ldr	r3, [r7, #0]
 80127e6:	331c      	adds	r3, #28
 80127e8:	4418      	add	r0, r3
 80127ea:	f7ff fd85 	bl	80122f8 <strlen>
 80127ee:	3001      	adds	r0, #1
 80127f0:	f003 f9cc 	bl	8015b8c <operator new[](unsigned int)>
 80127f4:	6839      	ldr	r1, [r7, #0]
 80127f6:	f845 0009 	str.w	r0, [r5, r9]
 80127fa:	311c      	adds	r1, #28
 80127fc:	f7ff fd91 	bl	8012322 <strcpy.isra.0>
 8012800:	f855 0009 	ldr.w	r0, [r5, r9]
 8012804:	4631      	mov	r1, r6
 8012806:	f7ff fd94 	bl	8012332 <strcat.isra.0>
 801280a:	4631      	mov	r1, r6
 801280c:	4640      	mov	r0, r8
 801280e:	f7ff fe0d 	bl	801242c <MDNS::FindFirstDotFromRight(char const*) const>
 8012812:	eb05 0709 	add.w	r7, r5, r9
 8012816:	4605      	mov	r5, r0
 8012818:	f7ff fd6e 	bl	80122f8 <strlen>
 801281c:	300d      	adds	r0, #13
 801281e:	f003 f9b5 	bl	8015b8c <operator new[](unsigned int)>
 8012822:	4629      	mov	r1, r5
 8012824:	6078      	str	r0, [r7, #4]
 8012826:	f7ff fd7c 	bl	8012322 <strcpy.isra.0>
 801282a:	4922      	ldr	r1, [pc, #136]	; (80128b4 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x10c>)
 801282c:	6878      	ldr	r0, [r7, #4]
 801282e:	f7ff fd80 	bl	8012332 <strcat.isra.0>
 8012832:	4921      	ldr	r1, [pc, #132]	; (80128b8 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x110>)
 8012834:	4b21      	ldr	r3, [pc, #132]	; (80128bc <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x114>)
 8012836:	6878      	ldr	r0, [r7, #4]
 8012838:	f1bb 0f01 	cmp.w	fp, #1
 801283c:	bf18      	it	ne
 801283e:	4619      	movne	r1, r3
 8012840:	f7ff fd77 	bl	8012332 <strcat.isra.0>
 8012844:	f1ba 0f00 	cmp.w	sl, #0
 8012848:	d009      	beq.n	801285e <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xb6>
 801284a:	4650      	mov	r0, sl
 801284c:	f7ff fd54 	bl	80122f8 <strlen>
 8012850:	3001      	adds	r0, #1
 8012852:	f003 f99b 	bl	8015b8c <operator new[](unsigned int)>
 8012856:	4651      	mov	r1, sl
 8012858:	60b8      	str	r0, [r7, #8]
 801285a:	f7ff fd62 	bl	8012322 <strcpy.isra.0>
 801285e:	4621      	mov	r1, r4
 8012860:	4640      	mov	r0, r8
 8012862:	f7ff ff65 	bl	8012730 <MDNS::CreateMDNSMessage(unsigned int)>
 8012866:	f241 43e9 	movw	r3, #5353	; 0x14e9
 801286a:	4915      	ldr	r1, [pc, #84]	; (80128c0 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x118>)
 801286c:	4815      	ldr	r0, [pc, #84]	; (80128c4 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x11c>)
 801286e:	f851 2b04 	ldr.w	r2, [r1], #4
 8012872:	9300      	str	r3, [sp, #0]
 8012874:	4b14      	ldr	r3, [pc, #80]	; (80128c8 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x120>)
 8012876:	7800      	ldrb	r0, [r0, #0]
 8012878:	681b      	ldr	r3, [r3, #0]
 801287a:	b292      	uxth	r2, r2
 801287c:	f7ff fc8a 	bl	8012194 <udp_send>
 8012880:	2001      	movs	r0, #1
 8012882:	e010      	b.n	80128a6 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xfe>
 8012884:	4638      	mov	r0, r7
 8012886:	f7ff fd37 	bl	80122f8 <strlen>
 801288a:	9003      	str	r0, [sp, #12]
 801288c:	4630      	mov	r0, r6
 801288e:	f7ff fd33 	bl	80122f8 <strlen>
 8012892:	9b03      	ldr	r3, [sp, #12]
 8012894:	4418      	add	r0, r3
 8012896:	3001      	adds	r0, #1
 8012898:	f003 f978 	bl	8015b8c <operator new[](unsigned int)>
 801289c:	4639      	mov	r1, r7
 801289e:	f845 0009 	str.w	r0, [r5, r9]
 80128a2:	e7ab      	b.n	80127fc <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x54>
 80128a4:	2000      	movs	r0, #0
 80128a6:	b005      	add	sp, #20
 80128a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80128ac:	2001348c 	andcs	r3, r1, ip, lsl #9
 80128b0:	200136bc 			; <UNDEFINED> instruction: 0x200136bc
 80128b4:	0801838f 	stmdaeq	r1, {r0, r1, r2, r3, r7, r8, r9, pc}
 80128b8:	08019e2d 	stmdaeq	r1, {r0, r2, r3, r5, r9, sl, fp, ip, pc}
 80128bc:	08019e4a 	stmdaeq	r1, {r1, r3, r6, r9, sl, fp, ip, pc}
 80128c0:	200134b0 			; <UNDEFINED> instruction: 0x200134b0
 80128c4:	2000000c 	andcs	r0, r0, ip
 80128c8:	20013284 	andcs	r3, r1, r4, lsl #5

080128cc <MDNS::HandleRequest(unsigned short)>:
 80128cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80128d0:	4605      	mov	r5, r0
 80128d2:	2700      	movs	r7, #0
 80128d4:	f04f 080c 	mov.w	r8, #12
 80128d8:	b0c5      	sub	sp, #276	; 0x114
 80128da:	f8df a0c4 	ldr.w	sl, [pc, #196]	; 80129a0 <MDNS::HandleRequest(unsigned short)+0xd4>
 80128de:	f8df b0c4 	ldr.w	fp, [pc, #196]	; 80129a4 <MDNS::HandleRequest(unsigned short)+0xd8>
 80128e2:	9103      	str	r1, [sp, #12]
 80128e4:	9b03      	ldr	r3, [sp, #12]
 80128e6:	42bb      	cmp	r3, r7
 80128e8:	d956      	bls.n	8012998 <MDNS::HandleRequest(unsigned short)+0xcc>
 80128ea:	f8da 1000 	ldr.w	r1, [sl]
 80128ee:	aa04      	add	r2, sp, #16
 80128f0:	4441      	add	r1, r8
 80128f2:	4628      	mov	r0, r5
 80128f4:	f7ff fd54 	bl	80123a0 <MDNS::DecodeDNSNameNotation(char const*, char*)>
 80128f8:	f8da 2000 	ldr.w	r2, [sl]
 80128fc:	4440      	add	r0, r8
 80128fe:	1813      	adds	r3, r2, r0
 8012900:	885b      	ldrh	r3, [r3, #2]
 8012902:	f100 0804 	add.w	r8, r0, #4
 8012906:	ba5b      	rev16	r3, r3
 8012908:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 801290c:	2b01      	cmp	r3, #1
 801290e:	d13e      	bne.n	801298e <MDNS::HandleRequest(unsigned short)+0xc2>
 8012910:	5a14      	ldrh	r4, [r2, r0]
 8012912:	4b25      	ldr	r3, [pc, #148]	; (80129a8 <MDNS::HandleRequest(unsigned short)+0xdc>)
 8012914:	ba64      	rev16	r4, r4
 8012916:	6818      	ldr	r0, [r3, #0]
 8012918:	a904      	add	r1, sp, #16
 801291a:	b2a4      	uxth	r4, r4
 801291c:	f7ff fcf4 	bl	8012308 <strcmp>
 8012920:	b970      	cbnz	r0, 8012940 <MDNS::HandleRequest(unsigned short)+0x74>
 8012922:	2c01      	cmp	r4, #1
 8012924:	d10c      	bne.n	8012940 <MDNS::HandleRequest(unsigned short)+0x74>
 8012926:	f241 43e9 	movw	r3, #5353	; 0x14e9
 801292a:	4920      	ldr	r1, [pc, #128]	; (80129ac <MDNS::HandleRequest(unsigned short)+0xe0>)
 801292c:	4820      	ldr	r0, [pc, #128]	; (80129b0 <MDNS::HandleRequest(unsigned short)+0xe4>)
 801292e:	f851 2b04 	ldr.w	r2, [r1], #4
 8012932:	9300      	str	r3, [sp, #0]
 8012934:	4b1f      	ldr	r3, [pc, #124]	; (80129b4 <MDNS::HandleRequest(unsigned short)+0xe8>)
 8012936:	7800      	ldrb	r0, [r0, #0]
 8012938:	681b      	ldr	r3, [r3, #0]
 801293a:	b292      	uxth	r2, r2
 801293c:	f7ff fc2a 	bl	8012194 <udp_send>
 8012940:	481d      	ldr	r0, [pc, #116]	; (80129b8 <MDNS::HandleRequest(unsigned short)+0xec>)
 8012942:	a904      	add	r1, sp, #16
 8012944:	f7ff fce0 	bl	8012308 <strcmp>
 8012948:	f04f 0900 	mov.w	r9, #0
 801294c:	4e1b      	ldr	r6, [pc, #108]	; (80129bc <MDNS::HandleRequest(unsigned short)+0xf0>)
 801294e:	9002      	str	r0, [sp, #8]
 8012950:	6833      	ldr	r3, [r6, #0]
 8012952:	b1c3      	cbz	r3, 8012986 <MDNS::HandleRequest(unsigned short)+0xba>
 8012954:	9b02      	ldr	r3, [sp, #8]
 8012956:	b123      	cbz	r3, 8012962 <MDNS::HandleRequest(unsigned short)+0x96>
 8012958:	6870      	ldr	r0, [r6, #4]
 801295a:	a904      	add	r1, sp, #16
 801295c:	f7ff fcd4 	bl	8012308 <strcmp>
 8012960:	b988      	cbnz	r0, 8012986 <MDNS::HandleRequest(unsigned short)+0xba>
 8012962:	2c0c      	cmp	r4, #12
 8012964:	d10f      	bne.n	8012986 <MDNS::HandleRequest(unsigned short)+0xba>
 8012966:	4649      	mov	r1, r9
 8012968:	4628      	mov	r0, r5
 801296a:	f7ff fee1 	bl	8012730 <MDNS::CreateMDNSMessage(unsigned int)>
 801296e:	f241 43e9 	movw	r3, #5353	; 0x14e9
 8012972:	480f      	ldr	r0, [pc, #60]	; (80129b0 <MDNS::HandleRequest(unsigned short)+0xe4>)
 8012974:	9300      	str	r3, [sp, #0]
 8012976:	4b0f      	ldr	r3, [pc, #60]	; (80129b4 <MDNS::HandleRequest(unsigned short)+0xe8>)
 8012978:	f8bb 2000 	ldrh.w	r2, [fp]
 801297c:	681b      	ldr	r3, [r3, #0]
 801297e:	4910      	ldr	r1, [pc, #64]	; (80129c0 <MDNS::HandleRequest(unsigned short)+0xf4>)
 8012980:	7800      	ldrb	r0, [r0, #0]
 8012982:	f7ff fc07 	bl	8012194 <udp_send>
 8012986:	3610      	adds	r6, #16
 8012988:	f1b9 0f00 	cmp.w	r9, #0
 801298c:	d001      	beq.n	8012992 <MDNS::HandleRequest(unsigned short)+0xc6>
 801298e:	3701      	adds	r7, #1
 8012990:	e7a8      	b.n	80128e4 <MDNS::HandleRequest(unsigned short)+0x18>
 8012992:	f04f 0901 	mov.w	r9, #1
 8012996:	e7db      	b.n	8012950 <MDNS::HandleRequest(unsigned short)+0x84>
 8012998:	b045      	add	sp, #276	; 0x114
 801299a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801299e:	bf00      	nop
 80129a0:	200136b8 			; <UNDEFINED> instruction: 0x200136b8
 80129a4:	200134b0 			; <UNDEFINED> instruction: 0x200134b0
 80129a8:	200136b4 			; <UNDEFINED> instruction: 0x200136b4
 80129ac:	20013288 	andcs	r3, r1, r8, lsl #5
 80129b0:	2000000c 	andcs	r0, r0, ip
 80129b4:	20013284 	andcs	r3, r1, r4, lsl #5
 80129b8:	08019e38 	stmdaeq	r1, {r3, r4, r5, r9, sl, fp, ip, pc}
 80129bc:	2001348c 	andcs	r3, r1, ip, lsl #9
 80129c0:	200134b4 			; <UNDEFINED> instruction: 0x200134b4

080129c4 <MDNS::Parse()>:
 80129c4:	4b08      	ldr	r3, [pc, #32]	; (80129e8 <MDNS::Parse()+0x24>)
 80129c6:	681a      	ldr	r2, [r3, #0]
 80129c8:	8853      	ldrh	r3, [r2, #2]
 80129ca:	ba5b      	rev16	r3, r3
 80129cc:	b299      	uxth	r1, r3
 80129ce:	041b      	lsls	r3, r3, #16
 80129d0:	d408      	bmi.n	80129e4 <MDNS::Parse()+0x20>
 80129d2:	0b8b      	lsrs	r3, r1, #14
 80129d4:	d106      	bne.n	80129e4 <MDNS::Parse()+0x20>
 80129d6:	8891      	ldrh	r1, [r2, #4]
 80129d8:	b28b      	uxth	r3, r1
 80129da:	b11b      	cbz	r3, 80129e4 <MDNS::Parse()+0x20>
 80129dc:	ba49      	rev16	r1, r1
 80129de:	b289      	uxth	r1, r1
 80129e0:	f7ff bf74 	b.w	80128cc <MDNS::HandleRequest(unsigned short)>
 80129e4:	4770      	bx	lr
 80129e6:	bf00      	nop
 80129e8:	200136b8 			; <UNDEFINED> instruction: 0x200136b8

080129ec <MDNS::Run()>:
 80129ec:	b538      	push	{r3, r4, r5, lr}
 80129ee:	4d0c      	ldr	r5, [pc, #48]	; (8012a20 <MDNS::Run()+0x34>)
 80129f0:	4604      	mov	r4, r0
 80129f2:	480c      	ldr	r0, [pc, #48]	; (8012a24 <MDNS::Run()+0x38>)
 80129f4:	462b      	mov	r3, r5
 80129f6:	4a0c      	ldr	r2, [pc, #48]	; (8012a28 <MDNS::Run()+0x3c>)
 80129f8:	490c      	ldr	r1, [pc, #48]	; (8012a2c <MDNS::Run()+0x40>)
 80129fa:	7800      	ldrb	r0, [r0, #0]
 80129fc:	f7ff fba4 	bl	8012148 <udp_recv2>
 8012a00:	4b0b      	ldr	r3, [pc, #44]	; (8012a30 <MDNS::Run()+0x44>)
 8012a02:	882a      	ldrh	r2, [r5, #0]
 8012a04:	8018      	strh	r0, [r3, #0]
 8012a06:	f241 43e9 	movw	r3, #5353	; 0x14e9
 8012a0a:	429a      	cmp	r2, r3
 8012a0c:	d106      	bne.n	8012a1c <MDNS::Run()+0x30>
 8012a0e:	280c      	cmp	r0, #12
 8012a10:	d904      	bls.n	8012a1c <MDNS::Run()+0x30>
 8012a12:	4620      	mov	r0, r4
 8012a14:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8012a18:	f7ff bfd4 	b.w	80129c4 <MDNS::Parse()>
 8012a1c:	bd38      	pop	{r3, r4, r5, pc}
 8012a1e:	bf00      	nop
 8012a20:	20013280 	andcs	r3, r1, r0, lsl #5
 8012a24:	2000000c 	andcs	r0, r0, ip
 8012a28:	2001327c 	andcs	r3, r1, ip, ror r2
 8012a2c:	200136b8 			; <UNDEFINED> instruction: 0x200136b8
 8012a30:	200134ac 	andcs	r3, r1, ip, lsr #9

08012a34 <MDNS::Print()>:
 8012a34:	b510      	push	{r4, lr}
 8012a36:	4816      	ldr	r0, [pc, #88]	; (8012a90 <MDNS::Print()+0x5c>)
 8012a38:	f7f6 fab2 	bl	8008fa0 <printf>
 8012a3c:	4b15      	ldr	r3, [pc, #84]	; (8012a94 <MDNS::Print()+0x60>)
 8012a3e:	681b      	ldr	r3, [r3, #0]
 8012a40:	3301      	adds	r3, #1
 8012a42:	d104      	bne.n	8012a4e <MDNS::Print()+0x1a>
 8012a44:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012a48:	4813      	ldr	r0, [pc, #76]	; (8012a98 <MDNS::Print()+0x64>)
 8012a4a:	f7f6 baa9 	b.w	8008fa0 <printf>
 8012a4e:	4b13      	ldr	r3, [pc, #76]	; (8012a9c <MDNS::Print()+0x68>)
 8012a50:	4c13      	ldr	r4, [pc, #76]	; (8012aa0 <MDNS::Print()+0x6c>)
 8012a52:	6819      	ldr	r1, [r3, #0]
 8012a54:	4813      	ldr	r0, [pc, #76]	; (8012aa4 <MDNS::Print()+0x70>)
 8012a56:	f7f6 faa3 	bl	8008fa0 <printf>
 8012a5a:	6823      	ldr	r3, [r4, #0]
 8012a5c:	b14b      	cbz	r3, 8012a72 <MDNS::Print()+0x3e>
 8012a5e:	4a12      	ldr	r2, [pc, #72]	; (8012aa8 <MDNS::Print()+0x74>)
 8012a60:	68a3      	ldr	r3, [r4, #8]
 8012a62:	6861      	ldr	r1, [r4, #4]
 8012a64:	2b00      	cmp	r3, #0
 8012a66:	bf08      	it	eq
 8012a68:	4613      	moveq	r3, r2
 8012a6a:	4810      	ldr	r0, [pc, #64]	; (8012aac <MDNS::Print()+0x78>)
 8012a6c:	89a2      	ldrh	r2, [r4, #12]
 8012a6e:	f7f6 fa97 	bl	8008fa0 <printf>
 8012a72:	6923      	ldr	r3, [r4, #16]
 8012a74:	b15b      	cbz	r3, 8012a8e <MDNS::Print()+0x5a>
 8012a76:	69a3      	ldr	r3, [r4, #24]
 8012a78:	4a0b      	ldr	r2, [pc, #44]	; (8012aa8 <MDNS::Print()+0x74>)
 8012a7a:	6961      	ldr	r1, [r4, #20]
 8012a7c:	2b00      	cmp	r3, #0
 8012a7e:	bf08      	it	eq
 8012a80:	4613      	moveq	r3, r2
 8012a82:	480a      	ldr	r0, [pc, #40]	; (8012aac <MDNS::Print()+0x78>)
 8012a84:	8ba2      	ldrh	r2, [r4, #28]
 8012a86:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012a8a:	f7f6 ba89 	b.w	8008fa0 <printf>
 8012a8e:	bd10      	pop	{r4, pc}
 8012a90:	08019e55 	stmdaeq	r1, {r0, r2, r4, r6, r9, sl, fp, ip, pc}
 8012a94:	2000000c 	andcs	r0, r0, ip
 8012a98:	08019e5b 	stmdaeq	r1, {r0, r1, r3, r4, r6, r9, sl, fp, ip, pc}
 8012a9c:	200136b4 			; <UNDEFINED> instruction: 0x200136b4
 8012aa0:	2001348c 	andcs	r3, r1, ip, lsl #9
 8012aa4:	08019e69 	stmdaeq	r1, {r0, r3, r5, r6, r9, sl, fp, ip, pc}
 8012aa8:	080186b1 	stmdaeq	r1, {r0, r4, r5, r7, r9, sl, pc}
 8012aac:	08019e75 	stmdaeq	r1, {r0, r2, r4, r5, r6, r9, sl, fp, ip, pc}

08012ab0 <strncpy.constprop.0.isra.0>:
 8012ab0:	233f      	movs	r3, #63	; 0x3f
 8012ab2:	3901      	subs	r1, #1
 8012ab4:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 8012ab8:	b92a      	cbnz	r2, 8012ac6 <strncpy.constprop.0.isra.0+0x16>
 8012aba:	4403      	add	r3, r0
 8012abc:	4298      	cmp	r0, r3
 8012abe:	d007      	beq.n	8012ad0 <strncpy.constprop.0.isra.0+0x20>
 8012ac0:	f800 2b01 	strb.w	r2, [r0], #1
 8012ac4:	e7fa      	b.n	8012abc <strncpy.constprop.0.isra.0+0xc>
 8012ac6:	3b01      	subs	r3, #1
 8012ac8:	f800 2b01 	strb.w	r2, [r0], #1
 8012acc:	d1f2      	bne.n	8012ab4 <strncpy.constprop.0.isra.0+0x4>
 8012ace:	4770      	bx	lr
 8012ad0:	4770      	bx	lr
	...

08012ad4 <Network::Network()>:
 8012ad4:	4a11      	ldr	r2, [pc, #68]	; (8012b1c <Network::Network()+0x48>)
 8012ad6:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8012ada:	6010      	str	r0, [r2, #0]
 8012adc:	2201      	movs	r2, #1
 8012ade:	2300      	movs	r3, #0
 8012ae0:	e9c0 1200 	strd	r1, r2, [r0]
 8012ae4:	2200      	movs	r2, #0
 8012ae6:	e9c0 332f 	strd	r3, r3, [r0, #188]	; 0xbc
 8012aea:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8012aee:	490c      	ldr	r1, [pc, #48]	; (8012b20 <Network::Network()+0x4c>)
 8012af0:	60c2      	str	r2, [r0, #12]
 8012af2:	f8c0 30b4 	str.w	r3, [r0, #180]	; 0xb4
 8012af6:	f8c0 30c4 	str.w	r3, [r0, #196]	; 0xc4
 8012afa:	f880 309c 	strb.w	r3, [r0, #156]	; 0x9c
 8012afe:	6083      	str	r3, [r0, #8]
 8012b00:	6183      	str	r3, [r0, #24]
 8012b02:	7703      	strb	r3, [r0, #28]
 8012b04:	f880 305c 	strb.w	r3, [r0, #92]	; 0x5c
 8012b08:	f100 02a2 	add.w	r2, r0, #162	; 0xa2
 8012b0c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8012b10:	f802 3b01 	strb.w	r3, [r2], #1
 8012b14:	2b00      	cmp	r3, #0
 8012b16:	d1f9      	bne.n	8012b0c <Network::Network()+0x38>
 8012b18:	4770      	bx	lr
 8012b1a:	bf00      	nop
 8012b1c:	200136bc 			; <UNDEFINED> instruction: 0x200136bc
 8012b20:	08019e80 	stmdaeq	r1, {r7, r9, sl, fp, ip, pc}

08012b24 <Network::Shutdown()>:
 8012b24:	b508      	push	{r3, lr}
 8012b26:	30b8      	adds	r0, #184	; 0xb8
 8012b28:	f002 f814 	bl	8014b54 <NetworkDisplay::ShowShutdown()>
 8012b2c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8012b30:	f7fe bd52 	b.w	80115d8 <net_shutdown>

08012b34 <Network::Begin(unsigned short)>:
 8012b34:	4608      	mov	r0, r1
 8012b36:	f7ff ba97 	b.w	8012068 <udp_bind>

08012b3a <Network::End(unsigned short)>:
 8012b3a:	4608      	mov	r0, r1
 8012b3c:	f7ff baae 	b.w	801209c <udp_unbind>

08012b40 <Network::MacAddressCopyTo(unsigned char*)>:
 8012b40:	f100 039c 	add.w	r3, r0, #156	; 0x9c
 8012b44:	3901      	subs	r1, #1
 8012b46:	30a2      	adds	r0, #162	; 0xa2
 8012b48:	f813 2b01 	ldrb.w	r2, [r3], #1
 8012b4c:	4283      	cmp	r3, r0
 8012b4e:	f801 2f01 	strb.w	r2, [r1, #1]!
 8012b52:	d1f9      	bne.n	8012b48 <Network::MacAddressCopyTo(unsigned char*)+0x8>
 8012b54:	4770      	bx	lr

08012b56 <Network::JoinGroup(int, unsigned int)>:
 8012b56:	4610      	mov	r0, r2
 8012b58:	f001 ba4e 	b.w	8013ff8 <igmp_join>

08012b5c <Network::LeaveGroup(int, unsigned int)>:
 8012b5c:	4610      	mov	r0, r2
 8012b5e:	f001 ba77 	b.w	8014050 <igmp_leave>

08012b62 <Network::SetDefaultIp()>:
 8012b62:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 8012b66:	f890 209f 	ldrb.w	r2, [r0, #159]	; 0x9f
 8012b6a:	041b      	lsls	r3, r3, #16
 8012b6c:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 8012b70:	f890 20a1 	ldrb.w	r2, [r0, #161]	; 0xa1
 8012b74:	3302      	adds	r3, #2
 8012b76:	eb03 6302 	add.w	r3, r3, r2, lsl #24
 8012b7a:	22ff      	movs	r2, #255	; 0xff
 8012b7c:	6103      	str	r3, [r0, #16]
 8012b7e:	e9c0 3205 	strd	r3, r2, [r0, #20]
 8012b82:	4770      	bx	lr

08012b84 <Network::Init(NetworkParamsStore*)>:
 8012b84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012b88:	b08d      	sub	sp, #52	; 0x34
 8012b8a:	4604      	mov	r4, r0
 8012b8c:	a808      	add	r0, sp, #32
 8012b8e:	f000 fb25 	bl	80131dc <NetworkParams::NetworkParams(NetworkParamsStore*)>
 8012b92:	a808      	add	r0, sp, #32
 8012b94:	f000 fb32 	bl	80131fc <NetworkParams::Load()>
 8012b98:	b110      	cbz	r0, 8012ba0 <Network::Init(NetworkParamsStore*)+0x1c>
 8012b9a:	a808      	add	r0, sp, #32
 8012b9c:	f000 fd99 	bl	80136d2 <NetworkParams::Dump()>
 8012ba0:	f104 05b8 	add.w	r5, r4, #184	; 0xb8
 8012ba4:	f8df 829c 	ldr.w	r8, [pc, #668]	; 8012e44 <Network::Init(NetworkParamsStore*)+0x2c0>
 8012ba8:	4628      	mov	r0, r5
 8012baa:	f104 079c 	add.w	r7, r4, #156	; 0x9c
 8012bae:	f001 ffb3 	bl	8014b18 <NetworkDisplay::ShowEmacStart()>
 8012bb2:	4638      	mov	r0, r7
 8012bb4:	f004 f830 	bl	8016c18 <emac_start>
 8012bb8:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8012bbc:	f104 061c 	add.w	r6, r4, #28
 8012bc0:	9309      	str	r3, [sp, #36]	; 0x24
 8012bc2:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8012bc6:	930a      	str	r3, [sp, #40]	; 0x28
 8012bc8:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8012bcc:	930b      	str	r3, [sp, #44]	; 0x2c
 8012bce:	f898 3014 	ldrb.w	r3, [r8, #20]
 8012bd2:	7063      	strb	r3, [r4, #1]
 8012bd4:	f8d8 3000 	ldr.w	r3, [r8]
 8012bd8:	f013 0240 	ands.w	r2, r3, #64	; 0x40
 8012bdc:	bf18      	it	ne
 8012bde:	f8d8 2055 	ldrne.w	r2, [r8, #85]	; 0x55
 8012be2:	061b      	lsls	r3, r3, #24
 8012be4:	bf58      	it	pl
 8012be6:	2300      	movpl	r3, #0
 8012be8:	60a2      	str	r2, [r4, #8]
 8012bea:	bf48      	it	mi
 8012bec:	f8d8 3059 	ldrmi.w	r3, [r8, #89]	; 0x59
 8012bf0:	60e3      	str	r3, [r4, #12]
 8012bf2:	f898 3015 	ldrb.w	r3, [r8, #21]
 8012bf6:	2b00      	cmp	r3, #0
 8012bf8:	d15e      	bne.n	8012cb8 <Network::Init(NetworkParamsStore*)+0x134>
 8012bfa:	4632      	mov	r2, r6
 8012bfc:	4892      	ldr	r0, [pc, #584]	; (8012e48 <Network::Init(NetworkParamsStore*)+0x2c4>)
 8012bfe:	f810 1b01 	ldrb.w	r1, [r0], #1
 8012c02:	f103 0c01 	add.w	ip, r3, #1
 8012c06:	b119      	cbz	r1, 8012c10 <Network::Init(NetworkParamsStore*)+0x8c>
 8012c08:	4663      	mov	r3, ip
 8012c0a:	f802 1b01 	strb.w	r1, [r2], #1
 8012c0e:	e7f6      	b.n	8012bfe <Network::Init(NetworkParamsStore*)+0x7a>
 8012c10:	f894 209f 	ldrb.w	r2, [r4, #159]	; 0x9f
 8012c14:	18e1      	adds	r1, r4, r3
 8012c16:	0910      	lsrs	r0, r2, #4
 8012c18:	2a9f      	cmp	r2, #159	; 0x9f
 8012c1a:	f002 020f 	and.w	r2, r2, #15
 8012c1e:	bf94      	ite	ls
 8012c20:	3030      	addls	r0, #48	; 0x30
 8012c22:	3037      	addhi	r0, #55	; 0x37
 8012c24:	2a09      	cmp	r2, #9
 8012c26:	bf94      	ite	ls
 8012c28:	3230      	addls	r2, #48	; 0x30
 8012c2a:	3237      	addhi	r2, #55	; 0x37
 8012c2c:	44a4      	add	ip, r4
 8012c2e:	7708      	strb	r0, [r1, #28]
 8012c30:	f88c 201c 	strb.w	r2, [ip, #28]
 8012c34:	f894 20a0 	ldrb.w	r2, [r4, #160]	; 0xa0
 8012c38:	f103 0e02 	add.w	lr, r3, #2
 8012c3c:	0910      	lsrs	r0, r2, #4
 8012c3e:	2a9f      	cmp	r2, #159	; 0x9f
 8012c40:	f002 020f 	and.w	r2, r2, #15
 8012c44:	bf94      	ite	ls
 8012c46:	3030      	addls	r0, #48	; 0x30
 8012c48:	3037      	addhi	r0, #55	; 0x37
 8012c4a:	f103 0903 	add.w	r9, r3, #3
 8012c4e:	2a09      	cmp	r2, #9
 8012c50:	44a6      	add	lr, r4
 8012c52:	f88e 001c 	strb.w	r0, [lr, #28]
 8012c56:	bf94      	ite	ls
 8012c58:	3230      	addls	r2, #48	; 0x30
 8012c5a:	3237      	addhi	r2, #55	; 0x37
 8012c5c:	eb04 0009 	add.w	r0, r4, r9
 8012c60:	7702      	strb	r2, [r0, #28]
 8012c62:	f894 20a1 	ldrb.w	r2, [r4, #161]	; 0xa1
 8012c66:	f103 0c04 	add.w	ip, r3, #4
 8012c6a:	0910      	lsrs	r0, r2, #4
 8012c6c:	2a9f      	cmp	r2, #159	; 0x9f
 8012c6e:	f002 020f 	and.w	r2, r2, #15
 8012c72:	bf94      	ite	ls
 8012c74:	3030      	addls	r0, #48	; 0x30
 8012c76:	3037      	addhi	r0, #55	; 0x37
 8012c78:	3305      	adds	r3, #5
 8012c7a:	2a09      	cmp	r2, #9
 8012c7c:	4423      	add	r3, r4
 8012c7e:	44a4      	add	ip, r4
 8012c80:	bf94      	ite	ls
 8012c82:	3230      	addls	r2, #48	; 0x30
 8012c84:	3237      	addhi	r2, #55	; 0x37
 8012c86:	f88c 001c 	strb.w	r0, [ip, #28]
 8012c8a:	771a      	strb	r2, [r3, #28]
 8012c8c:	2300      	movs	r3, #0
 8012c8e:	f881 3022 	strb.w	r3, [r1, #34]	; 0x22
 8012c92:	7863      	ldrb	r3, [r4, #1]
 8012c94:	b95b      	cbnz	r3, 8012cae <Network::Init(NetworkParamsStore*)+0x12a>
 8012c96:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012c98:	b9b3      	cbnz	r3, 8012cc8 <Network::Init(NetworkParamsStore*)+0x144>
 8012c9a:	4620      	mov	r0, r4
 8012c9c:	f7ff ff61 	bl	8012b62 <Network::SetDefaultIp()>
 8012ca0:	6923      	ldr	r3, [r4, #16]
 8012ca2:	69a2      	ldr	r2, [r4, #24]
 8012ca4:	9309      	str	r3, [sp, #36]	; 0x24
 8012ca6:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 8012caa:	7863      	ldrb	r3, [r4, #1]
 8012cac:	b19b      	cbz	r3, 8012cd6 <Network::Init(NetworkParamsStore*)+0x152>
 8012cae:	2101      	movs	r1, #1
 8012cb0:	4628      	mov	r0, r5
 8012cb2:	f001 ff55 	bl	8014b60 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 8012cb6:	e00e      	b.n	8012cd6 <Network::Init(NetworkParamsStore*)+0x152>
 8012cb8:	4630      	mov	r0, r6
 8012cba:	4964      	ldr	r1, [pc, #400]	; (8012e4c <Network::Init(NetworkParamsStore*)+0x2c8>)
 8012cbc:	f7ff fef8 	bl	8012ab0 <strncpy.constprop.0.isra.0>
 8012cc0:	2300      	movs	r3, #0
 8012cc2:	f884 305b 	strb.w	r3, [r4, #91]	; 0x5b
 8012cc6:	e7e4      	b.n	8012c92 <Network::Init(NetworkParamsStore*)+0x10e>
 8012cc8:	69a1      	ldr	r1, [r4, #24]
 8012cca:	e9d4 2304 	ldrd	r2, r3, [r4, #16]
 8012cce:	4053      	eors	r3, r2
 8012cd0:	420b      	tst	r3, r1
 8012cd2:	d000      	beq.n	8012cd6 <Network::Init(NetworkParamsStore*)+0x152>
 8012cd4:	920b      	str	r2, [sp, #44]	; 0x2c
 8012cd6:	1ce3      	adds	r3, r4, #3
 8012cd8:	f104 0a01 	add.w	sl, r4, #1
 8012cdc:	9304      	str	r3, [sp, #16]
 8012cde:	9300      	str	r3, [sp, #0]
 8012ce0:	4632      	mov	r2, r6
 8012ce2:	4653      	mov	r3, sl
 8012ce4:	4638      	mov	r0, r7
 8012ce6:	a909      	add	r1, sp, #36	; 0x24
 8012ce8:	f7fe fc26 	bl	8011538 <net_init>
 8012cec:	78e3      	ldrb	r3, [r4, #3]
 8012cee:	b11b      	cbz	r3, 8012cf8 <Network::Init(NetworkParamsStore*)+0x174>
 8012cf0:	2104      	movs	r1, #4
 8012cf2:	4628      	mov	r0, r5
 8012cf4:	f001 ff34 	bl	8014b60 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 8012cf8:	f898 305d 	ldrb.w	r3, [r8, #93]	; 0x5d
 8012cfc:	9302      	str	r3, [sp, #8]
 8012cfe:	f898 3014 	ldrb.w	r3, [r8, #20]
 8012d02:	9a02      	ldr	r2, [sp, #8]
 8012d04:	9306      	str	r3, [sp, #24]
 8012d06:	233c      	movs	r3, #60	; 0x3c
 8012d08:	4353      	muls	r3, r2
 8012d0a:	9305      	str	r3, [sp, #20]
 8012d0c:	78e3      	ldrb	r3, [r4, #3]
 8012d0e:	b95b      	cbnz	r3, 8012d28 <Network::Init(NetworkParamsStore*)+0x1a4>
 8012d10:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012d12:	4628      	mov	r0, r5
 8012d14:	6123      	str	r3, [r4, #16]
 8012d16:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8012d18:	61a3      	str	r3, [r4, #24]
 8012d1a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8012d1c:	6163      	str	r3, [r4, #20]
 8012d1e:	f001 ff01 	bl	8014b24 <NetworkDisplay::ShowIp()>
 8012d22:	b00d      	add	sp, #52	; 0x34
 8012d24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012d28:	9b02      	ldr	r3, [sp, #8]
 8012d2a:	2b00      	cmp	r3, #0
 8012d2c:	d0f0      	beq.n	8012d10 <Network::Init(NetworkParamsStore*)+0x18c>
 8012d2e:	9b06      	ldr	r3, [sp, #24]
 8012d30:	2b00      	cmp	r3, #0
 8012d32:	d0ed      	beq.n	8012d10 <Network::Init(NetworkParamsStore*)+0x18c>
 8012d34:	f8df b118 	ldr.w	fp, [pc, #280]	; 8012e50 <Network::Init(NetworkParamsStore*)+0x2cc>
 8012d38:	2104      	movs	r1, #4
 8012d3a:	f8db 0000 	ldr.w	r0, [fp]
 8012d3e:	f002 fdf9 	bl	8015934 <LedBlink::SetMode(ledblink::Mode)>
 8012d42:	2103      	movs	r1, #3
 8012d44:	4628      	mov	r0, r5
 8012d46:	f001 ff0b 	bl	8014b60 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 8012d4a:	2000      	movs	r0, #0
 8012d4c:	f003 f8fe 	bl	8015f4c <time>
 8012d50:	9007      	str	r0, [sp, #28]
 8012d52:	f8df 8100 	ldr.w	r8, [pc, #256]	; 8012e54 <Network::Init(NetworkParamsStore*)+0x2d0>
 8012d56:	2000      	movs	r0, #0
 8012d58:	f003 f8f8 	bl	8015f4c <time>
 8012d5c:	9b07      	ldr	r3, [sp, #28]
 8012d5e:	1ac0      	subs	r0, r0, r3
 8012d60:	9b05      	ldr	r3, [sp, #20]
 8012d62:	4298      	cmp	r0, r3
 8012d64:	da54      	bge.n	8012e10 <Network::Init(NetworkParamsStore*)+0x28c>
 8012d66:	f8db 2000 	ldr.w	r2, [fp]
 8012d6a:	6910      	ldr	r0, [r2, #16]
 8012d6c:	b1c0      	cbz	r0, 8012da0 <Network::Init(NetworkParamsStore*)+0x21c>
 8012d6e:	f8df c0e8 	ldr.w	ip, [pc, #232]	; 8012e58 <Network::Init(NetworkParamsStore*)+0x2d4>
 8012d72:	6991      	ldr	r1, [r2, #24]
 8012d74:	f8dc 3000 	ldr.w	r3, [ip]
 8012d78:	1a5b      	subs	r3, r3, r1
 8012d7a:	4298      	cmp	r0, r3
 8012d7c:	d810      	bhi.n	8012da0 <Network::Init(NetworkParamsStore*)+0x21c>
 8012d7e:	f8dc 1000 	ldr.w	r1, [ip]
 8012d82:	f8d8 3000 	ldr.w	r3, [r8]
 8012d86:	6191      	str	r1, [r2, #24]
 8012d88:	6951      	ldr	r1, [r2, #20]
 8012d8a:	f423 1360 	bic.w	r3, r3, #3670016	; 0x380000
 8012d8e:	2901      	cmp	r1, #1
 8012d90:	f081 0001 	eor.w	r0, r1, #1
 8012d94:	bf08      	it	eq
 8012d96:	f483 1360 	eoreq.w	r3, r3, #3670016	; 0x380000
 8012d9a:	6150      	str	r0, [r2, #20]
 8012d9c:	f8c8 3000 	str.w	r3, [r8]
 8012da0:	4b2e      	ldr	r3, [pc, #184]	; (8012e5c <Network::Init(NetworkParamsStore*)+0x2d8>)
 8012da2:	f8d8 2000 	ldr.w	r2, [r8]
 8012da6:	6819      	ldr	r1, [r3, #0]
 8012da8:	428a      	cmp	r2, r1
 8012daa:	d0d4      	beq.n	8012d56 <Network::Init(NetworkParamsStore*)+0x1d2>
 8012dac:	2110      	movs	r1, #16
 8012dae:	482c      	ldr	r0, [pc, #176]	; (8012e60 <Network::Init(NetworkParamsStore*)+0x2dc>)
 8012db0:	601a      	str	r2, [r3, #0]
 8012db2:	f003 fb3f 	bl	8016434 <gpio_bit_reset>
 8012db6:	f3bf 8f6f 	isb	sy
 8012dba:	2318      	movs	r3, #24
 8012dbc:	f44f 0900 	mov.w	r9, #8388608	; 0x800000
 8012dc0:	f8df 809c 	ldr.w	r8, [pc, #156]	; 8012e60 <Network::Init(NetworkParamsStore*)+0x2dc>
 8012dc4:	9303      	str	r3, [sp, #12]
 8012dc6:	4b23      	ldr	r3, [pc, #140]	; (8012e54 <Network::Init(NetworkParamsStore*)+0x2d0>)
 8012dc8:	2104      	movs	r1, #4
 8012dca:	681b      	ldr	r3, [r3, #0]
 8012dcc:	4640      	mov	r0, r8
 8012dce:	ea19 0f03 	tst.w	r9, r3
 8012dd2:	d01a      	beq.n	8012e0a <Network::Init(NetworkParamsStore*)+0x286>
 8012dd4:	f003 fb2c 	bl	8016430 <gpio_bit_set>
 8012dd8:	f3bf 8f6f 	isb	sy
 8012ddc:	2108      	movs	r1, #8
 8012dde:	4640      	mov	r0, r8
 8012de0:	f003 fb28 	bl	8016434 <gpio_bit_reset>
 8012de4:	f3bf 8f6f 	isb	sy
 8012de8:	2108      	movs	r1, #8
 8012dea:	4640      	mov	r0, r8
 8012dec:	f003 fb20 	bl	8016430 <gpio_bit_set>
 8012df0:	9b03      	ldr	r3, [sp, #12]
 8012df2:	ea4f 0959 	mov.w	r9, r9, lsr #1
 8012df6:	3b01      	subs	r3, #1
 8012df8:	9303      	str	r3, [sp, #12]
 8012dfa:	d1e4      	bne.n	8012dc6 <Network::Init(NetworkParamsStore*)+0x242>
 8012dfc:	2110      	movs	r1, #16
 8012dfe:	4818      	ldr	r0, [pc, #96]	; (8012e60 <Network::Init(NetworkParamsStore*)+0x2dc>)
 8012e00:	f003 fb16 	bl	8016430 <gpio_bit_set>
 8012e04:	f3bf 8f6f 	isb	sy
 8012e08:	e7a3      	b.n	8012d52 <Network::Init(NetworkParamsStore*)+0x1ce>
 8012e0a:	f003 fb13 	bl	8016434 <gpio_bit_reset>
 8012e0e:	e7e3      	b.n	8012dd8 <Network::Init(NetworkParamsStore*)+0x254>
 8012e10:	2101      	movs	r1, #1
 8012e12:	4628      	mov	r0, r5
 8012e14:	f001 fea4 	bl	8014b60 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 8012e18:	2101      	movs	r1, #1
 8012e1a:	f8db 0000 	ldr.w	r0, [fp]
 8012e1e:	f002 fd89 	bl	8015934 <LedBlink::SetMode(ledblink::Mode)>
 8012e22:	2301      	movs	r3, #1
 8012e24:	7063      	strb	r3, [r4, #1]
 8012e26:	2300      	movs	r3, #0
 8012e28:	70e3      	strb	r3, [r4, #3]
 8012e2a:	9b04      	ldr	r3, [sp, #16]
 8012e2c:	4632      	mov	r2, r6
 8012e2e:	9300      	str	r3, [sp, #0]
 8012e30:	4638      	mov	r0, r7
 8012e32:	4653      	mov	r3, sl
 8012e34:	a909      	add	r1, sp, #36	; 0x24
 8012e36:	f7fe fb7f 	bl	8011538 <net_init>
 8012e3a:	7863      	ldrb	r3, [r4, #1]
 8012e3c:	2b00      	cmp	r3, #0
 8012e3e:	f43f af65 	beq.w	8012d0c <Network::Init(NetworkParamsStore*)+0x188>
 8012e42:	e765      	b.n	8012d10 <Network::Init(NetworkParamsStore*)+0x18c>
 8012e44:	200136c0 	andcs	r3, r1, r0, asr #13
 8012e48:	08019e85 	stmdaeq	r1, {r0, r2, r7, r9, sl, fp, ip, pc}
 8012e4c:	200136d5 	ldrdcs	r3, [r1], -r5
 8012e50:	20013de0 	andcs	r3, r1, r0, ror #27
 8012e54:	20013dec 	andcs	r3, r1, ip, ror #27
 8012e58:	20013e04 	andcs	r3, r1, r4, lsl #28
 8012e5c:	20013de8 	andcs	r3, r1, r8, ror #27
 8012e60:	40011800 	andmi	r1, r1, r0, lsl #16

08012e64 <Network::SetIp(unsigned int)>:
 8012e64:	7843      	ldrb	r3, [r0, #1]
 8012e66:	b570      	push	{r4, r5, r6, lr}
 8012e68:	4604      	mov	r4, r0
 8012e6a:	460d      	mov	r5, r1
 8012e6c:	2600      	movs	r6, #0
 8012e6e:	b113      	cbz	r3, 8012e76 <Network::SetIp(unsigned int)+0x12>
 8012e70:	7046      	strb	r6, [r0, #1]
 8012e72:	f7fe fc03 	bl	801167c <net_dhcp_release>
 8012e76:	70e6      	strb	r6, [r4, #3]
 8012e78:	b975      	cbnz	r5, 8012e98 <Network::SetIp(unsigned int)+0x34>
 8012e7a:	4620      	mov	r0, r4
 8012e7c:	f7ff fe71 	bl	8012b62 <Network::SetDefaultIp()>
 8012e80:	6920      	ldr	r0, [r4, #16]
 8012e82:	f7fe fbb7 	bl	80115f4 <net_set_ip>
 8012e86:	34b8      	adds	r4, #184	; 0xb8
 8012e88:	4620      	mov	r0, r4
 8012e8a:	f001 fe4b 	bl	8014b24 <NetworkDisplay::ShowIp()>
 8012e8e:	4620      	mov	r0, r4
 8012e90:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012e94:	f001 be4c 	b.w	8014b30 <NetworkDisplay::ShowNetMask()>
 8012e98:	4628      	mov	r0, r5
 8012e9a:	f7fe fbab 	bl	80115f4 <net_set_ip>
 8012e9e:	f8d4 00b4 	ldr.w	r0, [r4, #180]	; 0xb4
 8012ea2:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8012ea6:	2800      	cmp	r0, #0
 8012ea8:	d0ed      	beq.n	8012e86 <Network::SetIp(unsigned int)+0x22>
 8012eaa:	6803      	ldr	r3, [r0, #0]
 8012eac:	4629      	mov	r1, r5
 8012eae:	689b      	ldr	r3, [r3, #8]
 8012eb0:	4798      	blx	r3
 8012eb2:	f8d4 00b4 	ldr.w	r0, [r4, #180]	; 0xb4
 8012eb6:	2100      	movs	r1, #0
 8012eb8:	6803      	ldr	r3, [r0, #0]
 8012eba:	699b      	ldr	r3, [r3, #24]
 8012ebc:	4798      	blx	r3
 8012ebe:	e7e2      	b.n	8012e86 <Network::SetIp(unsigned int)+0x22>

08012ec0 <Network::SetNetmask(unsigned int)>:
 8012ec0:	6982      	ldr	r2, [r0, #24]
 8012ec2:	b510      	push	{r4, lr}
 8012ec4:	428a      	cmp	r2, r1
 8012ec6:	4604      	mov	r4, r0
 8012ec8:	d00f      	beq.n	8012eea <Network::SetNetmask(unsigned int)+0x2a>
 8012eca:	6181      	str	r1, [r0, #24]
 8012ecc:	f8d0 00b4 	ldr.w	r0, [r0, #180]	; 0xb4
 8012ed0:	b110      	cbz	r0, 8012ed8 <Network::SetNetmask(unsigned int)+0x18>
 8012ed2:	6803      	ldr	r3, [r0, #0]
 8012ed4:	68db      	ldr	r3, [r3, #12]
 8012ed6:	4798      	blx	r3
 8012ed8:	34b8      	adds	r4, #184	; 0xb8
 8012eda:	4620      	mov	r0, r4
 8012edc:	f001 fe22 	bl	8014b24 <NetworkDisplay::ShowIp()>
 8012ee0:	4620      	mov	r0, r4
 8012ee2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012ee6:	f001 be23 	b.w	8014b30 <NetworkDisplay::ShowNetMask()>
 8012eea:	bd10      	pop	{r4, pc}

08012eec <Network::SetGatewayIp(unsigned int)>:
 8012eec:	b538      	push	{r3, r4, r5, lr}
 8012eee:	6943      	ldr	r3, [r0, #20]
 8012ef0:	4604      	mov	r4, r0
 8012ef2:	428b      	cmp	r3, r1
 8012ef4:	460d      	mov	r5, r1
 8012ef6:	d00f      	beq.n	8012f18 <Network::SetGatewayIp(unsigned int)+0x2c>
 8012ef8:	4608      	mov	r0, r1
 8012efa:	f7fe fb8b 	bl	8011614 <net_set_gw>
 8012efe:	f8d4 00b4 	ldr.w	r0, [r4, #180]	; 0xb4
 8012f02:	b118      	cbz	r0, 8012f0c <Network::SetGatewayIp(unsigned int)+0x20>
 8012f04:	6803      	ldr	r3, [r0, #0]
 8012f06:	4629      	mov	r1, r5
 8012f08:	691b      	ldr	r3, [r3, #16]
 8012f0a:	4798      	blx	r3
 8012f0c:	f104 00b8 	add.w	r0, r4, #184	; 0xb8
 8012f10:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8012f14:	f001 be12 	b.w	8014b3c <NetworkDisplay::ShowGatewayIp()>
 8012f18:	bd38      	pop	{r3, r4, r5, pc}

08012f1a <Network::SetHostName(char const*)>:
 8012f1a:	b570      	push	{r4, r5, r6, lr}
 8012f1c:	4604      	mov	r4, r0
 8012f1e:	f100 051c 	add.w	r5, r0, #28
 8012f22:	4628      	mov	r0, r5
 8012f24:	f7ff fdc4 	bl	8012ab0 <strncpy.constprop.0.isra.0>
 8012f28:	2300      	movs	r3, #0
 8012f2a:	f8d4 00b4 	ldr.w	r0, [r4, #180]	; 0xb4
 8012f2e:	f884 305b 	strb.w	r3, [r4, #91]	; 0x5b
 8012f32:	b158      	cbz	r0, 8012f4c <Network::SetHostName(char const*)+0x32>
 8012f34:	6803      	ldr	r3, [r0, #0]
 8012f36:	695e      	ldr	r6, [r3, #20]
 8012f38:	462b      	mov	r3, r5
 8012f3a:	461a      	mov	r2, r3
 8012f3c:	7811      	ldrb	r1, [r2, #0]
 8012f3e:	3301      	adds	r3, #1
 8012f40:	2900      	cmp	r1, #0
 8012f42:	d1fa      	bne.n	8012f3a <Network::SetHostName(char const*)+0x20>
 8012f44:	1b52      	subs	r2, r2, r5
 8012f46:	4629      	mov	r1, r5
 8012f48:	b292      	uxth	r2, r2
 8012f4a:	47b0      	blx	r6
 8012f4c:	f104 00b8 	add.w	r0, r4, #184	; 0xb8
 8012f50:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012f54:	f001 bdf8 	b.w	8014b48 <NetworkDisplay::ShowHostName()>

08012f58 <Network::SetZeroconf()>:
 8012f58:	b530      	push	{r4, r5, lr}
 8012f5a:	b085      	sub	sp, #20
 8012f5c:	4604      	mov	r4, r0
 8012f5e:	a801      	add	r0, sp, #4
 8012f60:	f7fe fb96 	bl	8011690 <net_set_zeroconf>
 8012f64:	70e0      	strb	r0, [r4, #3]
 8012f66:	b170      	cbz	r0, 8012f86 <Network::SetZeroconf()+0x2e>
 8012f68:	9b01      	ldr	r3, [sp, #4]
 8012f6a:	f8d4 00b4 	ldr.w	r0, [r4, #180]	; 0xb4
 8012f6e:	6123      	str	r3, [r4, #16]
 8012f70:	9b02      	ldr	r3, [sp, #8]
 8012f72:	61a3      	str	r3, [r4, #24]
 8012f74:	9b03      	ldr	r3, [sp, #12]
 8012f76:	6163      	str	r3, [r4, #20]
 8012f78:	2300      	movs	r3, #0
 8012f7a:	7063      	strb	r3, [r4, #1]
 8012f7c:	b118      	cbz	r0, 8012f86 <Network::SetZeroconf()+0x2e>
 8012f7e:	6803      	ldr	r3, [r0, #0]
 8012f80:	2101      	movs	r1, #1
 8012f82:	699b      	ldr	r3, [r3, #24]
 8012f84:	4798      	blx	r3
 8012f86:	f104 05b8 	add.w	r5, r4, #184	; 0xb8
 8012f8a:	4628      	mov	r0, r5
 8012f8c:	f001 fdca 	bl	8014b24 <NetworkDisplay::ShowIp()>
 8012f90:	4628      	mov	r0, r5
 8012f92:	f001 fdcd 	bl	8014b30 <NetworkDisplay::ShowNetMask()>
 8012f96:	78e0      	ldrb	r0, [r4, #3]
 8012f98:	b005      	add	sp, #20
 8012f9a:	bd30      	pop	{r4, r5, pc}

08012f9c <Network::EnableDhcp()>:
 8012f9c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012f9e:	4e23      	ldr	r6, [pc, #140]	; (801302c <Network::EnableDhcp()+0x90>)
 8012fa0:	4604      	mov	r4, r0
 8012fa2:	6833      	ldr	r3, [r6, #0]
 8012fa4:	b085      	sub	sp, #20
 8012fa6:	791f      	ldrb	r7, [r3, #4]
 8012fa8:	b137      	cbz	r7, 8012fb8 <Network::EnableDhcp()+0x1c>
 8012faa:	2200      	movs	r2, #0
 8012fac:	2104      	movs	r1, #4
 8012fae:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8012fb2:	711a      	strb	r2, [r3, #4]
 8012fb4:	f003 f9be 	bl	8016334 <fwdgt_config>
 8012fb8:	f104 05b8 	add.w	r5, r4, #184	; 0xb8
 8012fbc:	2101      	movs	r1, #1
 8012fbe:	4628      	mov	r0, r5
 8012fc0:	f001 fdce 	bl	8014b60 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 8012fc4:	1ce2      	adds	r2, r4, #3
 8012fc6:	f104 011c 	add.w	r1, r4, #28
 8012fca:	a801      	add	r0, sp, #4
 8012fcc:	f7fe fb2a 	bl	8011624 <net_set_dhcp>
 8012fd0:	78e3      	ldrb	r3, [r4, #3]
 8012fd2:	7060      	strb	r0, [r4, #1]
 8012fd4:	b343      	cbz	r3, 8013028 <Network::EnableDhcp()+0x8c>
 8012fd6:	2104      	movs	r1, #4
 8012fd8:	4628      	mov	r0, r5
 8012fda:	f001 fdc1 	bl	8014b60 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 8012fde:	b16f      	cbz	r7, 8012ffc <Network::EnableDhcp()+0x60>
 8012fe0:	2102      	movs	r1, #2
 8012fe2:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8012fe6:	6836      	ldr	r6, [r6, #0]
 8012fe8:	f003 f9a4 	bl	8016334 <fwdgt_config>
 8012fec:	2801      	cmp	r0, #1
 8012fee:	bf0c      	ite	eq
 8012ff0:	2301      	moveq	r3, #1
 8012ff2:	2300      	movne	r3, #0
 8012ff4:	7133      	strb	r3, [r6, #4]
 8012ff6:	d101      	bne.n	8012ffc <Network::EnableDhcp()+0x60>
 8012ff8:	f003 f98c 	bl	8016314 <fwdgt_enable>
 8012ffc:	9b01      	ldr	r3, [sp, #4]
 8012ffe:	f8d4 00b4 	ldr.w	r0, [r4, #180]	; 0xb4
 8013002:	6123      	str	r3, [r4, #16]
 8013004:	9b02      	ldr	r3, [sp, #8]
 8013006:	61a3      	str	r3, [r4, #24]
 8013008:	9b03      	ldr	r3, [sp, #12]
 801300a:	6163      	str	r3, [r4, #20]
 801300c:	b118      	cbz	r0, 8013016 <Network::EnableDhcp()+0x7a>
 801300e:	6803      	ldr	r3, [r0, #0]
 8013010:	7861      	ldrb	r1, [r4, #1]
 8013012:	699b      	ldr	r3, [r3, #24]
 8013014:	4798      	blx	r3
 8013016:	4628      	mov	r0, r5
 8013018:	f001 fd84 	bl	8014b24 <NetworkDisplay::ShowIp()>
 801301c:	4628      	mov	r0, r5
 801301e:	f001 fd87 	bl	8014b30 <NetworkDisplay::ShowNetMask()>
 8013022:	7860      	ldrb	r0, [r4, #1]
 8013024:	b005      	add	sp, #20
 8013026:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013028:	2102      	movs	r1, #2
 801302a:	e7d5      	b.n	8012fd8 <Network::EnableDhcp()+0x3c>
 801302c:	20013de4 	andcs	r3, r1, r4, ror #27

08013030 <Network::SetQueuedStaticIp(unsigned int, unsigned int)>:
 8013030:	b109      	cbz	r1, 8013036 <Network::SetQueuedStaticIp(unsigned int, unsigned int)+0x6>
 8013032:	f8c0 10c0 	str.w	r1, [r0, #192]	; 0xc0
 8013036:	b10a      	cbz	r2, 801303c <Network::SetQueuedStaticIp(unsigned int, unsigned int)+0xc>
 8013038:	f8c0 20c4 	str.w	r2, [r0, #196]	; 0xc4
 801303c:	f8d0 30bc 	ldr.w	r3, [r0, #188]	; 0xbc
 8013040:	f043 0303 	orr.w	r3, r3, #3
 8013044:	f8c0 30bc 	str.w	r3, [r0, #188]	; 0xbc
 8013048:	4770      	bx	lr

0801304a <Network::ApplyQueuedConfig()>:
 801304a:	f8d0 30bc 	ldr.w	r3, [r0, #188]	; 0xbc
 801304e:	b510      	push	{r4, lr}
 8013050:	4604      	mov	r4, r0
 8013052:	b3c3      	cbz	r3, 80130c6 <Network::ApplyQueuedConfig()+0x7c>
 8013054:	079a      	lsls	r2, r3, #30
 8013056:	d01a      	beq.n	801308e <Network::ApplyQueuedConfig()+0x44>
 8013058:	079b      	lsls	r3, r3, #30
 801305a:	d509      	bpl.n	8013070 <Network::ApplyQueuedConfig()+0x26>
 801305c:	f8d0 10c4 	ldr.w	r1, [r0, #196]	; 0xc4
 8013060:	f7ff ff2e 	bl	8012ec0 <Network::SetNetmask(unsigned int)>
 8013064:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 8013068:	f023 0302 	bic.w	r3, r3, #2
 801306c:	f8c4 30bc 	str.w	r3, [r4, #188]	; 0xbc
 8013070:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 8013074:	07d9      	lsls	r1, r3, #31
 8013076:	d50a      	bpl.n	801308e <Network::ApplyQueuedConfig()+0x44>
 8013078:	4620      	mov	r0, r4
 801307a:	f8d4 10c0 	ldr.w	r1, [r4, #192]	; 0xc0
 801307e:	f7ff fef1 	bl	8012e64 <Network::SetIp(unsigned int)>
 8013082:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 8013086:	f023 0301 	bic.w	r3, r3, #1
 801308a:	f8c4 30bc 	str.w	r3, [r4, #188]	; 0xbc
 801308e:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 8013092:	075a      	lsls	r2, r3, #29
 8013094:	d508      	bpl.n	80130a8 <Network::ApplyQueuedConfig()+0x5e>
 8013096:	4620      	mov	r0, r4
 8013098:	f7ff ff80 	bl	8012f9c <Network::EnableDhcp()>
 801309c:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 80130a0:	f023 0304 	bic.w	r3, r3, #4
 80130a4:	f8c4 30bc 	str.w	r3, [r4, #188]	; 0xbc
 80130a8:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 80130ac:	071b      	lsls	r3, r3, #28
 80130ae:	d508      	bpl.n	80130c2 <Network::ApplyQueuedConfig()+0x78>
 80130b0:	4620      	mov	r0, r4
 80130b2:	f7ff ff51 	bl	8012f58 <Network::SetZeroconf()>
 80130b6:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 80130ba:	f023 0308 	bic.w	r3, r3, #8
 80130be:	f8c4 30bc 	str.w	r3, [r4, #188]	; 0xbc
 80130c2:	2001      	movs	r0, #1
 80130c4:	e000      	b.n	80130c8 <Network::ApplyQueuedConfig()+0x7e>
 80130c6:	4618      	mov	r0, r3
 80130c8:	bd10      	pop	{r4, pc}
	...

080130cc <Network::Print()>:
 80130cc:	b530      	push	{r4, r5, lr}
 80130ce:	4604      	mov	r4, r0
 80130d0:	b085      	sub	sp, #20
 80130d2:	4832      	ldr	r0, [pc, #200]	; (801319c <Network::Print()+0xd0>)
 80130d4:	f7f5 ff64 	bl	8008fa0 <printf>
 80130d8:	f104 011c 	add.w	r1, r4, #28
 80130dc:	4830      	ldr	r0, [pc, #192]	; (80131a0 <Network::Print()+0xd4>)
 80130de:	f7f5 ff5f 	bl	8008fa0 <printf>
 80130e2:	6861      	ldr	r1, [r4, #4]
 80130e4:	f104 02a2 	add.w	r2, r4, #162	; 0xa2
 80130e8:	482e      	ldr	r0, [pc, #184]	; (80131a4 <Network::Print()+0xd8>)
 80130ea:	f7f5 ff59 	bl	8008fa0 <printf>
 80130ee:	69a0      	ldr	r0, [r4, #24]
 80130f0:	f7f4 fee4 	bl	8007ebc <__popcountsi2>
 80130f4:	6925      	ldr	r5, [r4, #16]
 80130f6:	9001      	str	r0, [sp, #4]
 80130f8:	0e2b      	lsrs	r3, r5, #24
 80130fa:	9300      	str	r3, [sp, #0]
 80130fc:	f3c5 2207 	ubfx	r2, r5, #8, #8
 8013100:	f3c5 4307 	ubfx	r3, r5, #16, #8
 8013104:	b2e9      	uxtb	r1, r5
 8013106:	4828      	ldr	r0, [pc, #160]	; (80131a8 <Network::Print()+0xdc>)
 8013108:	f7f5 ff4a 	bl	8008fa0 <printf>
 801310c:	69a1      	ldr	r1, [r4, #24]
 801310e:	4827      	ldr	r0, [pc, #156]	; (80131ac <Network::Print()+0xe0>)
 8013110:	0e0b      	lsrs	r3, r1, #24
 8013112:	f3c1 2207 	ubfx	r2, r1, #8, #8
 8013116:	9300      	str	r3, [sp, #0]
 8013118:	f3c1 4307 	ubfx	r3, r1, #16, #8
 801311c:	b2c9      	uxtb	r1, r1
 801311e:	f7f5 ff3f 	bl	8008fa0 <printf>
 8013122:	6961      	ldr	r1, [r4, #20]
 8013124:	4822      	ldr	r0, [pc, #136]	; (80131b0 <Network::Print()+0xe4>)
 8013126:	0e0b      	lsrs	r3, r1, #24
 8013128:	f3c1 2207 	ubfx	r2, r1, #8, #8
 801312c:	9300      	str	r3, [sp, #0]
 801312e:	f3c1 4307 	ubfx	r3, r1, #16, #8
 8013132:	b2c9      	uxtb	r1, r1
 8013134:	f7f5 ff34 	bl	8008fa0 <printf>
 8013138:	69a3      	ldr	r3, [r4, #24]
 801313a:	6921      	ldr	r1, [r4, #16]
 801313c:	481d      	ldr	r0, [pc, #116]	; (80131b4 <Network::Print()+0xe8>)
 801313e:	ea61 0103 	orn	r1, r1, r3
 8013142:	0e0b      	lsrs	r3, r1, #24
 8013144:	f3c1 2207 	ubfx	r2, r1, #8, #8
 8013148:	9300      	str	r3, [sp, #0]
 801314a:	f3c1 4307 	ubfx	r3, r1, #16, #8
 801314e:	b2c9      	uxtb	r1, r1
 8013150:	f7f5 ff26 	bl	8008fa0 <printf>
 8013154:	f894 30a1 	ldrb.w	r3, [r4, #161]	; 0xa1
 8013158:	f894 209d 	ldrb.w	r2, [r4, #157]	; 0x9d
 801315c:	9302      	str	r3, [sp, #8]
 801315e:	f894 30a0 	ldrb.w	r3, [r4, #160]	; 0xa0
 8013162:	f894 109c 	ldrb.w	r1, [r4, #156]	; 0x9c
 8013166:	9301      	str	r3, [sp, #4]
 8013168:	f894 309f 	ldrb.w	r3, [r4, #159]	; 0x9f
 801316c:	4812      	ldr	r0, [pc, #72]	; (80131b8 <Network::Print()+0xec>)
 801316e:	9300      	str	r3, [sp, #0]
 8013170:	f894 309e 	ldrb.w	r3, [r4, #158]	; 0x9e
 8013174:	f7f5 ff14 	bl	8008fa0 <printf>
 8013178:	4b10      	ldr	r3, [pc, #64]	; (80131bc <Network::Print()+0xf0>)
 801317a:	681b      	ldr	r3, [r3, #0]
 801317c:	78da      	ldrb	r2, [r3, #3]
 801317e:	b952      	cbnz	r2, 8013196 <Network::Print()+0xca>
 8013180:	785b      	ldrb	r3, [r3, #1]
 8013182:	2b00      	cmp	r3, #0
 8013184:	bf14      	ite	ne
 8013186:	2144      	movne	r1, #68	; 0x44
 8013188:	2153      	moveq	r1, #83	; 0x53
 801318a:	480d      	ldr	r0, [pc, #52]	; (80131c0 <Network::Print()+0xf4>)
 801318c:	b005      	add	sp, #20
 801318e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8013192:	f7f5 bf05 	b.w	8008fa0 <printf>
 8013196:	215a      	movs	r1, #90	; 0x5a
 8013198:	e7f7      	b.n	801318a <Network::Print()+0xbe>
 801319a:	bf00      	nop
 801319c:	08019e91 	stmdaeq	r1, {r0, r4, r7, r9, sl, fp, ip, pc}
 80131a0:	08019e9a 	stmdaeq	r1, {r1, r3, r4, r7, r9, sl, fp, ip, pc}
 80131a4:	08019eab 	stmdaeq	r1, {r0, r1, r3, r5, r7, r9, sl, fp, ip, pc}
 80131a8:	08019ec0 	stmdaeq	r1, {r6, r7, r9, sl, fp, ip, pc}
 80131ac:	08019edd 	stmdaeq	r1, {r0, r2, r3, r4, r6, r7, r9, sl, fp, ip, pc}
 80131b0:	08019ef7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, r7, r9, sl, fp, ip, pc}
 80131b4:	08019f11 	stmdaeq	r1, {r0, r4, r8, r9, sl, fp, ip, pc}
 80131b8:	08019f2b 	stmdaeq	r1, {r0, r1, r3, r5, r8, r9, sl, fp, ip, pc}
 80131bc:	200136bc 			; <UNDEFINED> instruction: 0x200136bc
 80131c0:	08019f57 	stmdaeq	r1, {r0, r1, r2, r4, r6, r8, r9, sl, fp, ip, pc}

080131c4 <Network::TcpBegin(unsigned short)>:
 80131c4:	4608      	mov	r0, r1
 80131c6:	f7fe bdfd 	b.w	8011dc4 <tcp_begin>

080131ca <Network::TcpRead(int, unsigned char const**)>:
 80131ca:	4608      	mov	r0, r1
 80131cc:	4611      	mov	r1, r2
 80131ce:	f7fe be37 	b.w	8011e40 <tcp_read>

080131d2 <Network::TcpWrite(int, unsigned char const*, unsigned short)>:
 80131d2:	4608      	mov	r0, r1
 80131d4:	4611      	mov	r1, r2
 80131d6:	461a      	mov	r2, r3
 80131d8:	f7fe be0e 	b.w	8011df8 <tcp_write>

080131dc <NetworkParams::NetworkParams(NetworkParamsStore*)>:
 80131dc:	4b06      	ldr	r3, [pc, #24]	; (80131f8 <NetworkParams::NetworkParams(NetworkParamsStore*)+0x1c>)
 80131de:	b510      	push	{r4, lr}
 80131e0:	225e      	movs	r2, #94	; 0x5e
 80131e2:	4604      	mov	r4, r0
 80131e4:	6001      	str	r1, [r0, #0]
 80131e6:	2100      	movs	r1, #0
 80131e8:	4618      	mov	r0, r3
 80131ea:	f002 fda3 	bl	8015d34 <memset>
 80131ee:	2201      	movs	r2, #1
 80131f0:	7502      	strb	r2, [r0, #20]
 80131f2:	4620      	mov	r0, r4
 80131f4:	bd10      	pop	{r4, pc}
 80131f6:	bf00      	nop
 80131f8:	200136c0 	andcs	r3, r1, r0, asr #13

080131fc <NetworkParams::Load()>:
 80131fc:	b508      	push	{r3, lr}
 80131fe:	2300      	movs	r3, #0
 8013200:	4905      	ldr	r1, [pc, #20]	; (8013218 <NetworkParams::Load()+0x1c>)
 8013202:	6800      	ldr	r0, [r0, #0]
 8013204:	700b      	strb	r3, [r1, #0]
 8013206:	704b      	strb	r3, [r1, #1]
 8013208:	708b      	strb	r3, [r1, #2]
 801320a:	70cb      	strb	r3, [r1, #3]
 801320c:	b118      	cbz	r0, 8013216 <NetworkParams::Load()+0x1a>
 801320e:	6803      	ldr	r3, [r0, #0]
 8013210:	68db      	ldr	r3, [r3, #12]
 8013212:	4798      	blx	r3
 8013214:	2001      	movs	r0, #1
 8013216:	bd08      	pop	{r3, pc}
 8013218:	200136c0 	andcs	r3, r1, r0, asr #13

0801321c <NetworkParams::Load(char const*, unsigned int)>:
 801321c:	6803      	ldr	r3, [r0, #0]
 801321e:	b1eb      	cbz	r3, 801325c <NetworkParams::Load(char const*, unsigned int)+0x40>
 8013220:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8013222:	2300      	movs	r3, #0
 8013224:	460e      	mov	r6, r1
 8013226:	4617      	mov	r7, r2
 8013228:	4605      	mov	r5, r0
 801322a:	4c0d      	ldr	r4, [pc, #52]	; (8013260 <NetworkParams::Load(char const*, unsigned int)+0x44>)
 801322c:	4602      	mov	r2, r0
 801322e:	490d      	ldr	r1, [pc, #52]	; (8013264 <NetworkParams::Load(char const*, unsigned int)+0x48>)
 8013230:	4668      	mov	r0, sp
 8013232:	7023      	strb	r3, [r4, #0]
 8013234:	7063      	strb	r3, [r4, #1]
 8013236:	70a3      	strb	r3, [r4, #2]
 8013238:	70e3      	strb	r3, [r4, #3]
 801323a:	f001 fe15 	bl	8014e68 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 801323e:	463a      	mov	r2, r7
 8013240:	4631      	mov	r1, r6
 8013242:	4668      	mov	r0, sp
 8013244:	f001 fe14 	bl	8014e70 <ReadConfigFile::Read(char const*, unsigned int)>
 8013248:	6828      	ldr	r0, [r5, #0]
 801324a:	4621      	mov	r1, r4
 801324c:	6803      	ldr	r3, [r0, #0]
 801324e:	689b      	ldr	r3, [r3, #8]
 8013250:	4798      	blx	r3
 8013252:	4668      	mov	r0, sp
 8013254:	f001 fe0b 	bl	8014e6e <ReadConfigFile::~ReadConfigFile()>
 8013258:	b003      	add	sp, #12
 801325a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801325c:	4770      	bx	lr
 801325e:	bf00      	nop
 8013260:	200136c0 	andcs	r3, r1, r0, asr #13
 8013264:	08013405 	stmdaeq	r1, {r0, r2, sl, ip, sp}

08013268 <NetworkParams::callbackFunction(char const*)>:
 8013268:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 801326a:	460d      	mov	r5, r1
 801326c:	f10d 0203 	add.w	r2, sp, #3
 8013270:	4628      	mov	r0, r5
 8013272:	495b      	ldr	r1, [pc, #364]	; (80133e0 <NetworkParams::callbackFunction(char const*)+0x178>)
 8013274:	f001 ff5e 	bl	8015134 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8013278:	b980      	cbnz	r0, 801329c <NetworkParams::callbackFunction(char const*)+0x34>
 801327a:	495a      	ldr	r1, [pc, #360]	; (80133e4 <NetworkParams::callbackFunction(char const*)+0x17c>)
 801327c:	f89d 2003 	ldrb.w	r2, [sp, #3]
 8013280:	680b      	ldr	r3, [r1, #0]
 8013282:	b142      	cbz	r2, 8013296 <NetworkParams::callbackFunction(char const*)+0x2e>
 8013284:	f023 0301 	bic.w	r3, r3, #1
 8013288:	3a00      	subs	r2, #0
 801328a:	bf18      	it	ne
 801328c:	2201      	movne	r2, #1
 801328e:	600b      	str	r3, [r1, #0]
 8013290:	750a      	strb	r2, [r1, #20]
 8013292:	b004      	add	sp, #16
 8013294:	bd70      	pop	{r4, r5, r6, pc}
 8013296:	f043 0301 	orr.w	r3, r3, #1
 801329a:	e7f5      	b.n	8013288 <NetworkParams::callbackFunction(char const*)+0x20>
 801329c:	4628      	mov	r0, r5
 801329e:	4952      	ldr	r1, [pc, #328]	; (80133e8 <NetworkParams::callbackFunction(char const*)+0x180>)
 80132a0:	f10d 0203 	add.w	r2, sp, #3
 80132a4:	f001 ff46 	bl	8015134 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 80132a8:	b988      	cbnz	r0, 80132ce <NetworkParams::callbackFunction(char const*)+0x66>
 80132aa:	4a4e      	ldr	r2, [pc, #312]	; (80133e4 <NetworkParams::callbackFunction(char const*)+0x17c>)
 80132ac:	f89d 1003 	ldrb.w	r1, [sp, #3]
 80132b0:	6813      	ldr	r3, [r2, #0]
 80132b2:	1e4c      	subs	r4, r1, #1
 80132b4:	2c04      	cmp	r4, #4
 80132b6:	bf97      	itett	ls
 80132b8:	f443 7380 	orrls.w	r3, r3, #256	; 0x100
 80132bc:	f423 7380 	bichi.w	r3, r3, #256	; 0x100
 80132c0:	6013      	strls	r3, [r2, #0]
 80132c2:	f882 105d 	strbls.w	r1, [r2, #93]	; 0x5d
 80132c6:	bf84      	itt	hi
 80132c8:	6013      	strhi	r3, [r2, #0]
 80132ca:	f882 005d 	strbhi.w	r0, [r2, #93]	; 0x5d
 80132ce:	4628      	mov	r0, r5
 80132d0:	4946      	ldr	r1, [pc, #280]	; (80133ec <NetworkParams::callbackFunction(char const*)+0x184>)
 80132d2:	aa01      	add	r2, sp, #4
 80132d4:	f001 fea7 	bl	8015026 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 80132d8:	b9d0      	cbnz	r0, 8013310 <NetworkParams::callbackFunction(char const*)+0xa8>
 80132da:	9b01      	ldr	r3, [sp, #4]
 80132dc:	b2d9      	uxtb	r1, r3
 80132de:	29ac      	cmp	r1, #172	; 0xac
 80132e0:	f3c3 2207 	ubfx	r2, r3, #8, #8
 80132e4:	d00a      	beq.n	80132fc <NetworkParams::callbackFunction(char const*)+0x94>
 80132e6:	29c0      	cmp	r1, #192	; 0xc0
 80132e8:	d00c      	beq.n	8013304 <NetworkParams::callbackFunction(char const*)+0x9c>
 80132ea:	290a      	cmp	r1, #10
 80132ec:	d10d      	bne.n	801330a <NetworkParams::callbackFunction(char const*)+0xa2>
 80132ee:	4a3d      	ldr	r2, [pc, #244]	; (80133e4 <NetworkParams::callbackFunction(char const*)+0x17c>)
 80132f0:	6053      	str	r3, [r2, #4]
 80132f2:	6813      	ldr	r3, [r2, #0]
 80132f4:	f043 0302 	orr.w	r3, r3, #2
 80132f8:	6013      	str	r3, [r2, #0]
 80132fa:	e7ca      	b.n	8013292 <NetworkParams::callbackFunction(char const*)+0x2a>
 80132fc:	3a10      	subs	r2, #16
 80132fe:	2a0f      	cmp	r2, #15
 8013300:	d8c7      	bhi.n	8013292 <NetworkParams::callbackFunction(char const*)+0x2a>
 8013302:	e7f4      	b.n	80132ee <NetworkParams::callbackFunction(char const*)+0x86>
 8013304:	2aa8      	cmp	r2, #168	; 0xa8
 8013306:	d1c4      	bne.n	8013292 <NetworkParams::callbackFunction(char const*)+0x2a>
 8013308:	e7f1      	b.n	80132ee <NetworkParams::callbackFunction(char const*)+0x86>
 801330a:	2b00      	cmp	r3, #0
 801330c:	d0ef      	beq.n	80132ee <NetworkParams::callbackFunction(char const*)+0x86>
 801330e:	e7c0      	b.n	8013292 <NetworkParams::callbackFunction(char const*)+0x2a>
 8013310:	4628      	mov	r0, r5
 8013312:	4937      	ldr	r1, [pc, #220]	; (80133f0 <NetworkParams::callbackFunction(char const*)+0x188>)
 8013314:	aa01      	add	r2, sp, #4
 8013316:	f001 fe86 	bl	8015026 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 801331a:	b970      	cbnz	r0, 801333a <NetworkParams::callbackFunction(char const*)+0xd2>
 801331c:	9a01      	ldr	r2, [sp, #4]
 801331e:	2a00      	cmp	r2, #0
 8013320:	d0b7      	beq.n	8013292 <NetworkParams::callbackFunction(char const*)+0x2a>
 8013322:	ba13      	rev	r3, r2
 8013324:	43d9      	mvns	r1, r3
 8013326:	ea13 0351 	ands.w	r3, r3, r1, lsr #1
 801332a:	d1b2      	bne.n	8013292 <NetworkParams::callbackFunction(char const*)+0x2a>
 801332c:	4b2d      	ldr	r3, [pc, #180]	; (80133e4 <NetworkParams::callbackFunction(char const*)+0x17c>)
 801332e:	609a      	str	r2, [r3, #8]
 8013330:	681a      	ldr	r2, [r3, #0]
 8013332:	f042 0204 	orr.w	r2, r2, #4
 8013336:	601a      	str	r2, [r3, #0]
 8013338:	e7ab      	b.n	8013292 <NetworkParams::callbackFunction(char const*)+0x2a>
 801333a:	4628      	mov	r0, r5
 801333c:	492d      	ldr	r1, [pc, #180]	; (80133f4 <NetworkParams::callbackFunction(char const*)+0x18c>)
 801333e:	aa01      	add	r2, sp, #4
 8013340:	f001 fe71 	bl	8015026 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 8013344:	4c27      	ldr	r4, [pc, #156]	; (80133e4 <NetworkParams::callbackFunction(char const*)+0x17c>)
 8013346:	b930      	cbnz	r0, 8013356 <NetworkParams::callbackFunction(char const*)+0xee>
 8013348:	9b01      	ldr	r3, [sp, #4]
 801334a:	60e3      	str	r3, [r4, #12]
 801334c:	6823      	ldr	r3, [r4, #0]
 801334e:	f043 0308 	orr.w	r3, r3, #8
 8013352:	6023      	str	r3, [r4, #0]
 8013354:	e79d      	b.n	8013292 <NetworkParams::callbackFunction(char const*)+0x2a>
 8013356:	233f      	movs	r3, #63	; 0x3f
 8013358:	4628      	mov	r0, r5
 801335a:	9302      	str	r3, [sp, #8]
 801335c:	4926      	ldr	r1, [pc, #152]	; (80133f8 <NetworkParams::callbackFunction(char const*)+0x190>)
 801335e:	ab02      	add	r3, sp, #8
 8013360:	f104 0215 	add.w	r2, r4, #21
 8013364:	f001 fdb8 	bl	8014ed8 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 8013368:	b930      	cbnz	r0, 8013378 <NetworkParams::callbackFunction(char const*)+0x110>
 801336a:	9b02      	ldr	r3, [sp, #8]
 801336c:	4423      	add	r3, r4
 801336e:	7558      	strb	r0, [r3, #21]
 8013370:	6823      	ldr	r3, [r4, #0]
 8013372:	f043 0320 	orr.w	r3, r3, #32
 8013376:	e7ec      	b.n	8013352 <NetworkParams::callbackFunction(char const*)+0xea>
 8013378:	4628      	mov	r0, r5
 801337a:	4920      	ldr	r1, [pc, #128]	; (80133fc <NetworkParams::callbackFunction(char const*)+0x194>)
 801337c:	aa01      	add	r2, sp, #4
 801337e:	f001 fe52 	bl	8015026 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 8013382:	b958      	cbnz	r0, 801339c <NetworkParams::callbackFunction(char const*)+0x134>
 8013384:	9a01      	ldr	r2, [sp, #4]
 8013386:	6823      	ldr	r3, [r4, #0]
 8013388:	b12a      	cbz	r2, 8013396 <NetworkParams::callbackFunction(char const*)+0x12e>
 801338a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801338e:	6023      	str	r3, [r4, #0]
 8013390:	f8c4 2055 	str.w	r2, [r4, #85]	; 0x55
 8013394:	e77d      	b.n	8013292 <NetworkParams::callbackFunction(char const*)+0x2a>
 8013396:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 801339a:	e7f8      	b.n	801338e <NetworkParams::callbackFunction(char const*)+0x126>
 801339c:	4628      	mov	r0, r5
 801339e:	4918      	ldr	r1, [pc, #96]	; (8013400 <NetworkParams::callbackFunction(char const*)+0x198>)
 80133a0:	aa03      	add	r2, sp, #12
 80133a2:	f001 fdb2 	bl	8014f0a <Sscan::Float(char const*, char const*, float&)>
 80133a6:	2800      	cmp	r0, #0
 80133a8:	f47f af73 	bne.w	8013292 <NetworkParams::callbackFunction(char const*)+0x2a>
 80133ac:	9e03      	ldr	r6, [sp, #12]
 80133ae:	6825      	ldr	r5, [r4, #0]
 80133b0:	4630      	mov	r0, r6
 80133b2:	f7f4 f8cd 	bl	8007550 <__aeabi_f2iz>
 80133b6:	300c      	adds	r0, #12
 80133b8:	281a      	cmp	r0, #26
 80133ba:	d80a      	bhi.n	80133d2 <NetworkParams::callbackFunction(char const*)+0x16a>
 80133bc:	2100      	movs	r1, #0
 80133be:	4630      	mov	r0, r6
 80133c0:	f7f4 f894 	bl	80074ec <__aeabi_fcmpeq>
 80133c4:	b928      	cbnz	r0, 80133d2 <NetworkParams::callbackFunction(char const*)+0x16a>
 80133c6:	f8c4 6059 	str.w	r6, [r4, #89]	; 0x59
 80133ca:	f045 0580 	orr.w	r5, r5, #128	; 0x80
 80133ce:	6025      	str	r5, [r4, #0]
 80133d0:	e75f      	b.n	8013292 <NetworkParams::callbackFunction(char const*)+0x2a>
 80133d2:	2300      	movs	r3, #0
 80133d4:	f025 0580 	bic.w	r5, r5, #128	; 0x80
 80133d8:	f8c4 3059 	str.w	r3, [r4, #89]	; 0x59
 80133dc:	e7f7      	b.n	80133ce <NetworkParams::callbackFunction(char const*)+0x166>
 80133de:	bf00      	nop
 80133e0:	08019fd4 	stmdaeq	r1, {r2, r4, r6, r7, r8, r9, sl, fp, ip, pc}
 80133e4:	200136c0 	andcs	r3, r1, r0, asr #13
 80133e8:	08019fb2 	stmdaeq	r1, {r1, r4, r5, r7, r8, r9, sl, fp, ip, pc}
 80133ec:	08019f7d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r8, r9, sl, fp, ip, pc}
 80133f0:	08019fcb 	stmdaeq	r1, {r0, r1, r3, r6, r7, r8, r9, sl, fp, ip, pc}
 80133f4:	08019fa2 	stmdaeq	r1, {r1, r5, r7, r8, r9, sl, fp, ip, pc}
 80133f8:	08019fc2 	stmdaeq	r1, {r1, r6, r7, r8, r9, sl, fp, ip, pc}
 80133fc:	08019f88 	stmdaeq	r1, {r3, r7, r8, r9, sl, fp, ip, pc}
 8013400:	08019f93 	stmdaeq	r1, {r0, r1, r4, r7, r8, r9, sl, fp, ip, pc}

08013404 <NetworkParams::staticCallbackFunction(void*, char const*)>:
 8013404:	f7ff bf30 	b.w	8013268 <NetworkParams::callbackFunction(char const*)>

08013408 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)>:
 8013408:	b5f0      	push	{r4, r5, r6, r7, lr}
 801340a:	4614      	mov	r4, r2
 801340c:	461d      	mov	r5, r3
 801340e:	b089      	sub	sp, #36	; 0x24
 8013410:	2900      	cmp	r1, #0
 8013412:	d040      	beq.n	8013496 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x8e>
 8013414:	225e      	movs	r2, #94	; 0x5e
 8013416:	4891      	ldr	r0, [pc, #580]	; (801365c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x254>)
 8013418:	f002 fc75 	bl	8015d06 <memmove>
 801341c:	4622      	mov	r2, r4
 801341e:	462b      	mov	r3, r5
 8013420:	498f      	ldr	r1, [pc, #572]	; (8013660 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x258>)
 8013422:	a805      	add	r0, sp, #20
 8013424:	f001 fc50 	bl	8014cc8 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 8013428:	4c8c      	ldr	r4, [pc, #560]	; (801365c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x254>)
 801342a:	6823      	ldr	r3, [r4, #0]
 801342c:	0798      	lsls	r0, r3, #30
 801342e:	bf5f      	itttt	pl
 8013430:	4a8c      	ldrpl	r2, [pc, #560]	; (8013664 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x25c>)
 8013432:	6812      	ldrpl	r2, [r2, #0]
 8013434:	6912      	ldrpl	r2, [r2, #16]
 8013436:	6062      	strpl	r2, [r4, #4]
 8013438:	0759      	lsls	r1, r3, #29
 801343a:	bf5f      	itttt	pl
 801343c:	4a89      	ldrpl	r2, [pc, #548]	; (8013664 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x25c>)
 801343e:	6812      	ldrpl	r2, [r2, #0]
 8013440:	6992      	ldrpl	r2, [r2, #24]
 8013442:	60a2      	strpl	r2, [r4, #8]
 8013444:	071a      	lsls	r2, r3, #28
 8013446:	bf5f      	itttt	pl
 8013448:	4a86      	ldrpl	r2, [pc, #536]	; (8013664 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x25c>)
 801344a:	6812      	ldrpl	r2, [r2, #0]
 801344c:	6952      	ldrpl	r2, [r2, #20]
 801344e:	60e2      	strpl	r2, [r4, #12]
 8013450:	069f      	lsls	r7, r3, #26
 8013452:	d40c      	bmi.n	801346e <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x66>
 8013454:	223f      	movs	r2, #63	; 0x3f
 8013456:	4b83      	ldr	r3, [pc, #524]	; (8013664 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x25c>)
 8013458:	4883      	ldr	r0, [pc, #524]	; (8013668 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x260>)
 801345a:	681b      	ldr	r3, [r3, #0]
 801345c:	331b      	adds	r3, #27
 801345e:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8013462:	b9f1      	cbnz	r1, 80134a2 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x9a>
 8013464:	f002 fc66 	bl	8015d34 <memset>
 8013468:	2300      	movs	r3, #0
 801346a:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801346e:	f8bd 101a 	ldrh.w	r1, [sp, #26]
 8013472:	f8bd 5018 	ldrh.w	r5, [sp, #24]
 8013476:	42a9      	cmp	r1, r5
 8013478:	d226      	bcs.n	80134c8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xc0>
 801347a:	9805      	ldr	r0, [sp, #20]
 801347c:	1a6d      	subs	r5, r5, r1
 801347e:	4408      	add	r0, r1
 8013480:	6821      	ldr	r1, [r4, #0]
 8013482:	f89d 201c 	ldrb.w	r2, [sp, #28]
 8013486:	07ce      	lsls	r6, r1, #31
 8013488:	7d23      	ldrb	r3, [r4, #20]
 801348a:	d40f      	bmi.n	80134ac <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xa4>
 801348c:	b97a      	cbnz	r2, 80134ae <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xa6>
 801348e:	9300      	str	r3, [sp, #0]
 8013490:	4a76      	ldr	r2, [pc, #472]	; (801366c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x264>)
 8013492:	4b77      	ldr	r3, [pc, #476]	; (8013670 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x268>)
 8013494:	e00e      	b.n	80134b4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xac>
 8013496:	6800      	ldr	r0, [r0, #0]
 8013498:	4970      	ldr	r1, [pc, #448]	; (801365c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x254>)
 801349a:	6803      	ldr	r3, [r0, #0]
 801349c:	68db      	ldr	r3, [r3, #12]
 801349e:	4798      	blx	r3
 80134a0:	e7bc      	b.n	801341c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x14>
 80134a2:	3a01      	subs	r2, #1
 80134a4:	f800 1b01 	strb.w	r1, [r0], #1
 80134a8:	d1d9      	bne.n	801345e <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x56>
 80134aa:	e7dd      	b.n	8013468 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x60>
 80134ac:	b30a      	cbz	r2, 80134f2 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xea>
 80134ae:	9300      	str	r3, [sp, #0]
 80134b0:	4a70      	ldr	r2, [pc, #448]	; (8013674 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x26c>)
 80134b2:	4b6f      	ldr	r3, [pc, #444]	; (8013670 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x268>)
 80134b4:	4629      	mov	r1, r5
 80134b6:	f7f5 fd9b 	bl	8008ff0 <snprintf>
 80134ba:	4285      	cmp	r5, r0
 80134bc:	bfa2      	ittt	ge
 80134be:	f8bd 301a 	ldrhge.w	r3, [sp, #26]
 80134c2:	18c0      	addge	r0, r0, r3
 80134c4:	f8ad 001a 	strhge.w	r0, [sp, #26]
 80134c8:	f8bd 101a 	ldrh.w	r1, [sp, #26]
 80134cc:	f8bd 5018 	ldrh.w	r5, [sp, #24]
 80134d0:	42a9      	cmp	r1, r5
 80134d2:	d221      	bcs.n	8013518 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x110>
 80134d4:	9805      	ldr	r0, [sp, #20]
 80134d6:	1a6d      	subs	r5, r5, r1
 80134d8:	4408      	add	r0, r1
 80134da:	6821      	ldr	r1, [r4, #0]
 80134dc:	f89d 201c 	ldrb.w	r2, [sp, #28]
 80134e0:	05c9      	lsls	r1, r1, #23
 80134e2:	f894 305d 	ldrb.w	r3, [r4, #93]	; 0x5d
 80134e6:	d408      	bmi.n	80134fa <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xf2>
 80134e8:	b94a      	cbnz	r2, 80134fe <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xf6>
 80134ea:	9300      	str	r3, [sp, #0]
 80134ec:	4a5f      	ldr	r2, [pc, #380]	; (801366c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x264>)
 80134ee:	4b62      	ldr	r3, [pc, #392]	; (8013678 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x270>)
 80134f0:	e008      	b.n	8013504 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xfc>
 80134f2:	9300      	str	r3, [sp, #0]
 80134f4:	4a61      	ldr	r2, [pc, #388]	; (801367c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x274>)
 80134f6:	4b5e      	ldr	r3, [pc, #376]	; (8013670 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x268>)
 80134f8:	e7dc      	b.n	80134b4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xac>
 80134fa:	2a00      	cmp	r2, #0
 80134fc:	d03e      	beq.n	801357c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x174>
 80134fe:	9300      	str	r3, [sp, #0]
 8013500:	4a5c      	ldr	r2, [pc, #368]	; (8013674 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x26c>)
 8013502:	4b5d      	ldr	r3, [pc, #372]	; (8013678 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x270>)
 8013504:	4629      	mov	r1, r5
 8013506:	f7f5 fd73 	bl	8008ff0 <snprintf>
 801350a:	4285      	cmp	r5, r0
 801350c:	bfa2      	ittt	ge
 801350e:	f8bd 301a 	ldrhge.w	r3, [sp, #26]
 8013512:	18c0      	addge	r0, r0, r3
 8013514:	f8ad 001a 	strhge.w	r0, [sp, #26]
 8013518:	4959      	ldr	r1, [pc, #356]	; (8013680 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x278>)
 801351a:	a805      	add	r0, sp, #20
 801351c:	f001 fc5a 	bl	8014dd4 <PropertiesBuilder::AddComment(char const*)>
 8013520:	6823      	ldr	r3, [r4, #0]
 8013522:	6862      	ldr	r2, [r4, #4]
 8013524:	4957      	ldr	r1, [pc, #348]	; (8013684 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x27c>)
 8013526:	f3c3 0340 	ubfx	r3, r3, #1, #1
 801352a:	a805      	add	r0, sp, #20
 801352c:	f001 fc0e 	bl	8014d4c <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 8013530:	6823      	ldr	r3, [r4, #0]
 8013532:	68a2      	ldr	r2, [r4, #8]
 8013534:	4954      	ldr	r1, [pc, #336]	; (8013688 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x280>)
 8013536:	f3c3 0380 	ubfx	r3, r3, #2, #1
 801353a:	a805      	add	r0, sp, #20
 801353c:	f001 fc06 	bl	8014d4c <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 8013540:	6823      	ldr	r3, [r4, #0]
 8013542:	4952      	ldr	r1, [pc, #328]	; (801368c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x284>)
 8013544:	68e2      	ldr	r2, [r4, #12]
 8013546:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 801354a:	a805      	add	r0, sp, #20
 801354c:	f001 fbfe 	bl	8014d4c <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 8013550:	f8bd 101a 	ldrh.w	r1, [sp, #26]
 8013554:	f8bd 5018 	ldrh.w	r5, [sp, #24]
 8013558:	42a9      	cmp	r1, r5
 801355a:	d222      	bcs.n	80135a2 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x19a>
 801355c:	6823      	ldr	r3, [r4, #0]
 801355e:	9805      	ldr	r0, [sp, #20]
 8013560:	f013 0f20 	tst.w	r3, #32
 8013564:	f89d 201c 	ldrb.w	r2, [sp, #28]
 8013568:	4b3f      	ldr	r3, [pc, #252]	; (8013668 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x260>)
 801356a:	4408      	add	r0, r1
 801356c:	eba5 0501 	sub.w	r5, r5, r1
 8013570:	d108      	bne.n	8013584 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x17c>
 8013572:	b94a      	cbnz	r2, 8013588 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x180>
 8013574:	9300      	str	r3, [sp, #0]
 8013576:	4a46      	ldr	r2, [pc, #280]	; (8013690 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x288>)
 8013578:	4b46      	ldr	r3, [pc, #280]	; (8013694 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x28c>)
 801357a:	e008      	b.n	801358e <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x186>
 801357c:	9300      	str	r3, [sp, #0]
 801357e:	4a3f      	ldr	r2, [pc, #252]	; (801367c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x274>)
 8013580:	4b3d      	ldr	r3, [pc, #244]	; (8013678 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x270>)
 8013582:	e7bf      	b.n	8013504 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xfc>
 8013584:	2a00      	cmp	r2, #0
 8013586:	d035      	beq.n	80135f4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1ec>
 8013588:	9300      	str	r3, [sp, #0]
 801358a:	4a43      	ldr	r2, [pc, #268]	; (8013698 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x290>)
 801358c:	4b41      	ldr	r3, [pc, #260]	; (8013694 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x28c>)
 801358e:	4629      	mov	r1, r5
 8013590:	f7f5 fd2e 	bl	8008ff0 <snprintf>
 8013594:	4285      	cmp	r5, r0
 8013596:	bfa2      	ittt	ge
 8013598:	f8bd 301a 	ldrhge.w	r3, [sp, #26]
 801359c:	18c0      	addge	r0, r0, r3
 801359e:	f8ad 001a 	strhge.w	r0, [sp, #26]
 80135a2:	493e      	ldr	r1, [pc, #248]	; (801369c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x294>)
 80135a4:	a805      	add	r0, sp, #20
 80135a6:	f001 fc15 	bl	8014dd4 <PropertiesBuilder::AddComment(char const*)>
 80135aa:	6823      	ldr	r3, [r4, #0]
 80135ac:	f8d4 2055 	ldr.w	r2, [r4, #85]	; 0x55
 80135b0:	f3c3 1380 	ubfx	r3, r3, #6, #1
 80135b4:	493a      	ldr	r1, [pc, #232]	; (80136a0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x298>)
 80135b6:	a805      	add	r0, sp, #20
 80135b8:	f001 fbc8 	bl	8014d4c <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 80135bc:	f8bd 301a 	ldrh.w	r3, [sp, #26]
 80135c0:	f8bd 5018 	ldrh.w	r5, [sp, #24]
 80135c4:	42ab      	cmp	r3, r5
 80135c6:	d22a      	bcs.n	801361e <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x216>
 80135c8:	9f05      	ldr	r7, [sp, #20]
 80135ca:	f8d4 0059 	ldr.w	r0, [r4, #89]	; 0x59
 80135ce:	441f      	add	r7, r3
 80135d0:	1aed      	subs	r5, r5, r3
 80135d2:	f7f4 facb 	bl	8007b6c <__aeabi_f2d>
 80135d6:	6823      	ldr	r3, [r4, #0]
 80135d8:	f89d 601c 	ldrb.w	r6, [sp, #28]
 80135dc:	f013 0f80 	tst.w	r3, #128	; 0x80
 80135e0:	f04f 0301 	mov.w	r3, #1
 80135e4:	d10a      	bne.n	80135fc <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f4>
 80135e6:	b956      	cbnz	r6, 80135fe <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f6>
 80135e8:	9300      	str	r3, [sp, #0]
 80135ea:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80135ee:	4b2d      	ldr	r3, [pc, #180]	; (80136a4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x29c>)
 80135f0:	4a2d      	ldr	r2, [pc, #180]	; (80136a8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x2a0>)
 80135f2:	e009      	b.n	8013608 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x200>
 80135f4:	9300      	str	r3, [sp, #0]
 80135f6:	4a2d      	ldr	r2, [pc, #180]	; (80136ac <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x2a4>)
 80135f8:	4b26      	ldr	r3, [pc, #152]	; (8013694 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x28c>)
 80135fa:	e7c8      	b.n	801358e <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x186>
 80135fc:	b346      	cbz	r6, 8013650 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x248>
 80135fe:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8013602:	9300      	str	r3, [sp, #0]
 8013604:	4a2a      	ldr	r2, [pc, #168]	; (80136b0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x2a8>)
 8013606:	4b27      	ldr	r3, [pc, #156]	; (80136a4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x29c>)
 8013608:	4629      	mov	r1, r5
 801360a:	4638      	mov	r0, r7
 801360c:	f7f5 fcf0 	bl	8008ff0 <snprintf>
 8013610:	4285      	cmp	r5, r0
 8013612:	bfa2      	ittt	ge
 8013614:	f8bd 301a 	ldrhge.w	r3, [sp, #26]
 8013618:	18c0      	addge	r0, r0, r3
 801361a:	f8ad 001a 	strhge.w	r0, [sp, #26]
 801361e:	f89d 301c 	ldrb.w	r3, [sp, #28]
 8013622:	b17b      	cbz	r3, 8013644 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x23c>
 8013624:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8013628:	9b05      	ldr	r3, [sp, #20]
 801362a:	4413      	add	r3, r2
 801362c:	227d      	movs	r2, #125	; 0x7d
 801362e:	f803 2c01 	strb.w	r2, [r3, #-1]
 8013632:	f8bd 301a 	ldrh.w	r3, [sp, #26]
 8013636:	9905      	ldr	r1, [sp, #20]
 8013638:	54ca      	strb	r2, [r1, r3]
 801363a:	f8bd 301a 	ldrh.w	r3, [sp, #26]
 801363e:	3301      	adds	r3, #1
 8013640:	f8ad 301a 	strh.w	r3, [sp, #26]
 8013644:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8013648:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801364a:	601a      	str	r2, [r3, #0]
 801364c:	b009      	add	sp, #36	; 0x24
 801364e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013650:	9300      	str	r3, [sp, #0]
 8013652:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8013656:	4b13      	ldr	r3, [pc, #76]	; (80136a4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x29c>)
 8013658:	4a16      	ldr	r2, [pc, #88]	; (80136b4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x2ac>)
 801365a:	e7d5      	b.n	8013608 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x200>
 801365c:	200136c0 	andcs	r3, r1, r0, asr #13
 8013660:	08019fdd 	stmdaeq	r1, {r0, r2, r3, r4, r6, r7, r8, r9, sl, fp, ip, pc}
 8013664:	200136bc 			; <UNDEFINED> instruction: 0x200136bc
 8013668:	200136d5 	ldrdcs	r3, [r1], -r5
 801366c:	08018359 	stmdaeq	r1, {r0, r3, r4, r6, r8, r9, pc}
 8013670:	08019fd4 	stmdaeq	r1, {r2, r4, r6, r7, r8, r9, sl, fp, ip, pc}
 8013674:	08018350 	stmdaeq	r1, {r4, r6, r8, r9, pc}
 8013678:	08019fb2 	stmdaeq	r1, {r1, r4, r5, r7, r8, r9, sl, fp, ip, pc}
 801367c:	0801835a 	stmdaeq	r1, {r1, r3, r4, r6, r8, r9, pc}
 8013680:	08019f68 	stmdaeq	r1, {r3, r5, r6, r8, r9, sl, fp, ip, pc}
 8013684:	08019f7d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r8, r9, sl, fp, ip, pc}
 8013688:	08019fcb 	stmdaeq	r1, {r0, r1, r3, r6, r7, r8, r9, sl, fp, ip, pc}
 801368c:	08019fa2 	stmdaeq	r1, {r1, r5, r7, r8, r9, sl, fp, ip, pc}
 8013690:	0801836c 	stmdaeq	r1, {r2, r3, r5, r6, r8, r9, pc}
 8013694:	08019fc2 	stmdaeq	r1, {r1, r6, r7, r8, r9, sl, fp, ip, pc}
 8013698:	08018361 	stmdaeq	r1, {r0, r5, r6, r8, r9, pc}
 801369c:	08019f72 	stmdaeq	r1, {r1, r4, r5, r6, r8, r9, sl, fp, ip, pc}
 80136a0:	08019f88 	stmdaeq	r1, {r3, r7, r8, r9, sl, fp, ip, pc}
 80136a4:	08019f93 	stmdaeq	r1, {r0, r1, r4, r7, r8, r9, sl, fp, ip, pc}
 80136a8:	08019a6b 	stmdaeq	r1, {r0, r1, r3, r5, r6, r9, fp, ip, pc}
 80136ac:	0801836d 	stmdaeq	r1, {r0, r2, r3, r5, r6, r8, r9, pc}
 80136b0:	08019a60 	stmdaeq	r1, {r5, r6, r9, fp, ip, pc}
 80136b4:	08019a6c 	stmdaeq	r1, {r2, r3, r5, r6, r9, fp, ip, pc}

080136b8 <NetworkParams::Save(char*, unsigned int, unsigned int&)>:
 80136b8:	b513      	push	{r0, r1, r4, lr}
 80136ba:	6804      	ldr	r4, [r0, #0]
 80136bc:	b914      	cbnz	r4, 80136c4 <NetworkParams::Save(char*, unsigned int, unsigned int&)+0xc>
 80136be:	601c      	str	r4, [r3, #0]
 80136c0:	b002      	add	sp, #8
 80136c2:	bd10      	pop	{r4, pc}
 80136c4:	9300      	str	r3, [sp, #0]
 80136c6:	4613      	mov	r3, r2
 80136c8:	460a      	mov	r2, r1
 80136ca:	2100      	movs	r1, #0
 80136cc:	f7ff fe9c 	bl	8013408 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)>
 80136d0:	e7f6      	b.n	80136c0 <NetworkParams::Save(char*, unsigned int, unsigned int&)+0x8>

080136d2 <NetworkParams::Dump()>:
 80136d2:	4770      	bx	lr

080136d4 <memcpy.isra.0>:
 80136d4:	3801      	subs	r0, #1
 80136d6:	440a      	add	r2, r1
 80136d8:	4291      	cmp	r1, r2
 80136da:	d100      	bne.n	80136de <memcpy.isra.0+0xa>
 80136dc:	4770      	bx	lr
 80136de:	f811 3b01 	ldrb.w	r3, [r1], #1
 80136e2:	f800 3f01 	strb.w	r3, [r0, #1]!
 80136e6:	e7f7      	b.n	80136d8 <memcpy.isra.0+0x4>

080136e8 <arp_announce>:
 80136e8:	4803      	ldr	r0, [pc, #12]	; (80136f8 <arp_announce+0x10>)
 80136ea:	69c3      	ldr	r3, [r0, #28]
 80136ec:	b113      	cbz	r3, 80136f4 <arp_announce+0xc>
 80136ee:	212a      	movs	r1, #42	; 0x2a
 80136f0:	f003 bb56 	b.w	8016da0 <emac_eth_send>
 80136f4:	4770      	bx	lr
 80136f6:	bf00      	nop
 80136f8:	20013720 	andcs	r3, r1, r0, lsr #14

080136fc <arp_handle_request>:
 80136fc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80136fe:	2204      	movs	r2, #4
 8013700:	f100 0126 	add.w	r1, r0, #38	; 0x26
 8013704:	4604      	mov	r4, r0
 8013706:	eb0d 0002 	add.w	r0, sp, r2
 801370a:	f7ff ffe3 	bl	80136d4 <memcpy.isra.0>
 801370e:	4b0d      	ldr	r3, [pc, #52]	; (8013744 <arp_handle_request+0x48>)
 8013710:	9a01      	ldr	r2, [sp, #4]
 8013712:	69db      	ldr	r3, [r3, #28]
 8013714:	429a      	cmp	r2, r3
 8013716:	d113      	bne.n	8013740 <arp_handle_request+0x44>
 8013718:	2206      	movs	r2, #6
 801371a:	4d0b      	ldr	r5, [pc, #44]	; (8013748 <arp_handle_request+0x4c>)
 801371c:	18a1      	adds	r1, r4, r2
 801371e:	4628      	mov	r0, r5
 8013720:	f7ff ffd8 	bl	80136d4 <memcpy.isra.0>
 8013724:	f104 0116 	add.w	r1, r4, #22
 8013728:	f105 0020 	add.w	r0, r5, #32
 801372c:	2206      	movs	r2, #6
 801372e:	f7ff ffd1 	bl	80136d4 <memcpy.isra.0>
 8013732:	69e3      	ldr	r3, [r4, #28]
 8013734:	212a      	movs	r1, #42	; 0x2a
 8013736:	4628      	mov	r0, r5
 8013738:	f8c5 3026 	str.w	r3, [r5, #38]	; 0x26
 801373c:	f003 fb30 	bl	8016da0 <emac_eth_send>
 8013740:	b003      	add	sp, #12
 8013742:	bd30      	pop	{r4, r5, pc}
 8013744:	20013720 	andcs	r3, r1, r0, lsr #14
 8013748:	2001374c 	andcs	r3, r1, ip, asr #14

0801374c <arp_handle_reply>:
 801374c:	69c1      	ldr	r1, [r0, #28]
 801374e:	3016      	adds	r0, #22
 8013750:	f000 b8ac 	b.w	80138ac <arp_cache_update>

08013754 <arp_init>:
 8013754:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013758:	4604      	mov	r4, r0
 801375a:	460d      	mov	r5, r1
 801375c:	f000 f88c 	bl	8013878 <arp_cache_init>
 8013760:	2206      	movs	r2, #6
 8013762:	4621      	mov	r1, r4
 8013764:	482e      	ldr	r0, [pc, #184]	; (8013820 <arp_init+0xcc>)
 8013766:	682f      	ldr	r7, [r5, #0]
 8013768:	f7ff ffb4 	bl	80136d4 <memcpy.isra.0>
 801376c:	4b2d      	ldr	r3, [pc, #180]	; (8013824 <arp_init+0xd0>)
 801376e:	2507      	movs	r5, #7
 8013770:	461e      	mov	r6, r3
 8013772:	22ff      	movs	r2, #255	; 0xff
 8013774:	3d01      	subs	r5, #1
 8013776:	d146      	bne.n	8013806 <arp_init+0xb2>
 8013778:	4b2b      	ldr	r3, [pc, #172]	; (8013828 <arp_init+0xd4>)
 801377a:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 801382c <arp_init+0xd8>
 801377e:	2206      	movs	r2, #6
 8013780:	e9c6 3803 	strd	r3, r8, [r6, #12]
 8013784:	f44f 7380 	mov.w	r3, #256	; 0x100
 8013788:	4621      	mov	r1, r4
 801378a:	4829      	ldr	r0, [pc, #164]	; (8013830 <arp_init+0xdc>)
 801378c:	82b3      	strh	r3, [r6, #20]
 801378e:	f7ff ffa1 	bl	80136d4 <memcpy.isra.0>
 8013792:	2307      	movs	r3, #7
 8013794:	4a27      	ldr	r2, [pc, #156]	; (8013834 <arp_init+0xe0>)
 8013796:	61f7      	str	r7, [r6, #28]
 8013798:	3b01      	subs	r3, #1
 801379a:	d137      	bne.n	801380c <arp_init+0xb8>
 801379c:	2206      	movs	r2, #6
 801379e:	4621      	mov	r1, r4
 80137a0:	4825      	ldr	r0, [pc, #148]	; (8013838 <arp_init+0xe4>)
 80137a2:	f8c6 7026 	str.w	r7, [r6, #38]	; 0x26
 80137a6:	f7ff ff95 	bl	80136d4 <memcpy.isra.0>
 80137aa:	4a24      	ldr	r2, [pc, #144]	; (801383c <arp_init+0xe8>)
 80137ac:	2306      	movs	r3, #6
 80137ae:	4615      	mov	r5, r2
 80137b0:	21ff      	movs	r1, #255	; 0xff
 80137b2:	3b01      	subs	r3, #1
 80137b4:	d22d      	bcs.n	8013812 <arp_init+0xbe>
 80137b6:	4b1c      	ldr	r3, [pc, #112]	; (8013828 <arp_init+0xd4>)
 80137b8:	2206      	movs	r2, #6
 80137ba:	e9c5 3803 	strd	r3, r8, [r5, #12]
 80137be:	f44f 7380 	mov.w	r3, #256	; 0x100
 80137c2:	4621      	mov	r1, r4
 80137c4:	481e      	ldr	r0, [pc, #120]	; (8013840 <arp_init+0xec>)
 80137c6:	82ab      	strh	r3, [r5, #20]
 80137c8:	f7ff ff84 	bl	80136d4 <memcpy.isra.0>
 80137cc:	2307      	movs	r3, #7
 80137ce:	2100      	movs	r1, #0
 80137d0:	4a1c      	ldr	r2, [pc, #112]	; (8013844 <arp_init+0xf0>)
 80137d2:	61ef      	str	r7, [r5, #28]
 80137d4:	3b01      	subs	r3, #1
 80137d6:	d11f      	bne.n	8013818 <arp_init+0xc4>
 80137d8:	2206      	movs	r2, #6
 80137da:	4d1b      	ldr	r5, [pc, #108]	; (8013848 <arp_init+0xf4>)
 80137dc:	4621      	mov	r1, r4
 80137de:	18a8      	adds	r0, r5, r2
 80137e0:	f7ff ff78 	bl	80136d4 <memcpy.isra.0>
 80137e4:	4b10      	ldr	r3, [pc, #64]	; (8013828 <arp_init+0xd4>)
 80137e6:	4621      	mov	r1, r4
 80137e8:	e9c5 3803 	strd	r3, r8, [r5, #12]
 80137ec:	f44f 7300 	mov.w	r3, #512	; 0x200
 80137f0:	f105 0016 	add.w	r0, r5, #22
 80137f4:	2206      	movs	r2, #6
 80137f6:	82ab      	strh	r3, [r5, #20]
 80137f8:	f7ff ff6c 	bl	80136d4 <memcpy.isra.0>
 80137fc:	61ef      	str	r7, [r5, #28]
 80137fe:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8013802:	f7ff bf71 	b.w	80136e8 <arp_announce>
 8013806:	f803 2b01 	strb.w	r2, [r3], #1
 801380a:	e7b3      	b.n	8013774 <arp_init+0x20>
 801380c:	f802 5b01 	strb.w	r5, [r2], #1
 8013810:	e7c2      	b.n	8013798 <arp_init+0x44>
 8013812:	f802 1b01 	strb.w	r1, [r2], #1
 8013816:	e7cc      	b.n	80137b2 <arp_init+0x5e>
 8013818:	f802 1b01 	strb.w	r1, [r2], #1
 801381c:	e7da      	b.n	80137d4 <arp_init+0x80>
 801381e:	bf00      	nop
 8013820:	20013726 	andcs	r3, r1, r6, lsr #14
 8013824:	20013720 	andcs	r3, r1, r0, lsr #14
 8013828:	01000608 	tsteq	r0, r8, lsl #12
 801382c:	04060008 	streq	r0, [r6], #-8
 8013830:	20013736 	andcs	r3, r1, r6, lsr r7
 8013834:	20013740 	andcs	r3, r1, r0, asr #14
 8013838:	2001377e 	andcs	r3, r1, lr, ror r7
 801383c:	20013778 	andcs	r3, r1, r8, ror r7
 8013840:	2001378e 	andcs	r3, r1, lr, lsl #15
 8013844:	20013798 	mulcs	r1, r8, r7
 8013848:	2001374c 	andcs	r3, r1, ip, asr #14

0801384c <arp_send_request>:
 801384c:	4b03      	ldr	r3, [pc, #12]	; (801385c <arp_send_request+0x10>)
 801384e:	212a      	movs	r1, #42	; 0x2a
 8013850:	f8c3 0026 	str.w	r0, [r3, #38]	; 0x26
 8013854:	4618      	mov	r0, r3
 8013856:	f003 baa3 	b.w	8016da0 <emac_eth_send>
 801385a:	bf00      	nop
 801385c:	20013778 	andcs	r3, r1, r8, ror r7

08013860 <arp_handle>:
 8013860:	8a83      	ldrh	r3, [r0, #20]
 8013862:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8013866:	d003      	beq.n	8013870 <arp_handle+0x10>
 8013868:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801386c:	d002      	beq.n	8013874 <arp_handle+0x14>
 801386e:	4770      	bx	lr
 8013870:	f7ff bf44 	b.w	80136fc <arp_handle_request>
 8013874:	f7ff bf6a 	b.w	801374c <arp_handle_reply>

08013878 <arp_cache_init>:
 8013878:	2300      	movs	r3, #0
 801387a:	4618      	mov	r0, r3
 801387c:	4a09      	ldr	r2, [pc, #36]	; (80138a4 <arp_cache_init+0x2c>)
 801387e:	b510      	push	{r4, lr}
 8013880:	8013      	strh	r3, [r2, #0]
 8013882:	4a09      	ldr	r2, [pc, #36]	; (80138a8 <arp_cache_init+0x30>)
 8013884:	4611      	mov	r1, r2
 8013886:	f842 0c04 	str.w	r0, [r2, #-4]
 801388a:	1d94      	adds	r4, r2, #6
 801388c:	42a1      	cmp	r1, r4
 801388e:	d105      	bne.n	801389c <arp_cache_init+0x24>
 8013890:	3303      	adds	r3, #3
 8013892:	2b60      	cmp	r3, #96	; 0x60
 8013894:	f102 020c 	add.w	r2, r2, #12
 8013898:	d1f4      	bne.n	8013884 <arp_cache_init+0xc>
 801389a:	bd10      	pop	{r4, pc}
 801389c:	f801 0b01 	strb.w	r0, [r1], #1
 80138a0:	e7f4      	b.n	801388c <arp_cache_init+0x14>
 80138a2:	bf00      	nop
 80138a4:	20013924 	andcs	r3, r1, r4, lsr #18
 80138a8:	200137a8 	andcs	r3, r1, r8, lsr #15

080138ac <arp_cache_update>:
 80138ac:	b5f0      	push	{r4, r5, r6, r7, lr}
 80138ae:	4e11      	ldr	r6, [pc, #68]	; (80138f4 <arp_cache_update+0x48>)
 80138b0:	8833      	ldrh	r3, [r6, #0]
 80138b2:	2b20      	cmp	r3, #32
 80138b4:	d018      	beq.n	80138e8 <arp_cache_update+0x3c>
 80138b6:	2400      	movs	r4, #0
 80138b8:	220c      	movs	r2, #12
 80138ba:	4d0f      	ldr	r5, [pc, #60]	; (80138f8 <arp_cache_update+0x4c>)
 80138bc:	b2a7      	uxth	r7, r4
 80138be:	42bb      	cmp	r3, r7
 80138c0:	d80b      	bhi.n	80138da <arp_cache_update+0x2e>
 80138c2:	fb02 5203 	mla	r2, r2, r3, r5
 80138c6:	1d84      	adds	r4, r0, #6
 80138c8:	3203      	adds	r2, #3
 80138ca:	42a0      	cmp	r0, r4
 80138cc:	d10d      	bne.n	80138ea <arp_cache_update+0x3e>
 80138ce:	220c      	movs	r2, #12
 80138d0:	435a      	muls	r2, r3
 80138d2:	3301      	adds	r3, #1
 80138d4:	50a9      	str	r1, [r5, r2]
 80138d6:	8033      	strh	r3, [r6, #0]
 80138d8:	e006      	b.n	80138e8 <arp_cache_update+0x3c>
 80138da:	3401      	adds	r4, #1
 80138dc:	fb02 5704 	mla	r7, r2, r4, r5
 80138e0:	f857 7c0c 	ldr.w	r7, [r7, #-12]
 80138e4:	428f      	cmp	r7, r1
 80138e6:	d1e9      	bne.n	80138bc <arp_cache_update+0x10>
 80138e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80138ea:	f810 7b01 	ldrb.w	r7, [r0], #1
 80138ee:	f802 7f01 	strb.w	r7, [r2, #1]!
 80138f2:	e7ea      	b.n	80138ca <arp_cache_update+0x1e>
 80138f4:	20013924 	andcs	r3, r1, r4, lsr #18
 80138f8:	200137a4 	andcs	r3, r1, r4, lsr #15

080138fc <arp_cache_lookup>:
 80138fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013900:	2200      	movs	r2, #0
 8013902:	4606      	mov	r6, r0
 8013904:	460c      	mov	r4, r1
 8013906:	200c      	movs	r0, #12
 8013908:	f8df 8084 	ldr.w	r8, [pc, #132]	; 8013990 <arp_cache_lookup+0x94>
 801390c:	fb00 f302 	mul.w	r3, r0, r2
 8013910:	f853 1008 	ldr.w	r1, [r3, r8]
 8013914:	42b1      	cmp	r1, r6
 8013916:	d10d      	bne.n	8013934 <arp_cache_lookup+0x38>
 8013918:	3304      	adds	r3, #4
 801391a:	4443      	add	r3, r8
 801391c:	3c01      	subs	r4, #1
 801391e:	1d9a      	adds	r2, r3, #6
 8013920:	4293      	cmp	r3, r2
 8013922:	d102      	bne.n	801392a <arp_cache_lookup+0x2e>
 8013924:	4630      	mov	r0, r6
 8013926:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801392a:	f813 1b01 	ldrb.w	r1, [r3], #1
 801392e:	f804 1f01 	strb.w	r1, [r4, #1]!
 8013932:	e7f5      	b.n	8013920 <arp_cache_lookup+0x24>
 8013934:	b111      	cbz	r1, 801393c <arp_cache_lookup+0x40>
 8013936:	3201      	adds	r2, #1
 8013938:	2a20      	cmp	r2, #32
 801393a:	d1e7      	bne.n	801390c <arp_cache_lookup+0x10>
 801393c:	2704      	movs	r7, #4
 801393e:	f8df a054 	ldr.w	sl, [pc, #84]	; 8013994 <arp_cache_lookup+0x98>
 8013942:	f8ba 5000 	ldrh.w	r5, [sl]
 8013946:	3f01      	subs	r7, #1
 8013948:	f017 07ff 	ands.w	r7, r7, #255	; 0xff
 801394c:	d101      	bne.n	8013952 <arp_cache_lookup+0x56>
 801394e:	463e      	mov	r6, r7
 8013950:	e7e8      	b.n	8013924 <arp_cache_lookup+0x28>
 8013952:	4630      	mov	r0, r6
 8013954:	f7ff ff7a 	bl	801384c <arp_send_request>
 8013958:	f44f 3900 	mov.w	r9, #131072	; 0x20000
 801395c:	f1b9 0901 	subs.w	r9, r9, #1
 8013960:	f8ba 3000 	ldrh.w	r3, [sl]
 8013964:	d011      	beq.n	801398a <arp_cache_lookup+0x8e>
 8013966:	429d      	cmp	r5, r3
 8013968:	d00c      	beq.n	8013984 <arp_cache_lookup+0x88>
 801396a:	230c      	movs	r3, #12
 801396c:	fb03 8505 	mla	r5, r3, r5, r8
 8013970:	3c01      	subs	r4, #1
 8013972:	1d2b      	adds	r3, r5, #4
 8013974:	350a      	adds	r5, #10
 8013976:	42ab      	cmp	r3, r5
 8013978:	d0d4      	beq.n	8013924 <arp_cache_lookup+0x28>
 801397a:	f813 2b01 	ldrb.w	r2, [r3], #1
 801397e:	f804 2f01 	strb.w	r2, [r4, #1]!
 8013982:	e7f8      	b.n	8013976 <arp_cache_lookup+0x7a>
 8013984:	f7fd fea6 	bl	80116d4 <net_handle>
 8013988:	e7e8      	b.n	801395c <arp_cache_lookup+0x60>
 801398a:	429d      	cmp	r5, r3
 801398c:	d0db      	beq.n	8013946 <arp_cache_lookup+0x4a>
 801398e:	e7ec      	b.n	801396a <arp_cache_lookup+0x6e>
 8013990:	200137a4 	andcs	r3, r1, r4, lsr #15
 8013994:	20013924 	andcs	r3, r1, r4, lsr #18

08013998 <_parse_response>:
 8013998:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801399c:	460c      	mov	r4, r1
 801399e:	4e5b      	ldr	r6, [pc, #364]	; (8013b0c <_parse_response+0x174>)
 80139a0:	f5ad 7d15 	sub.w	sp, sp, #596	; 0x254
 80139a4:	6837      	ldr	r7, [r6, #0]
 80139a6:	b2c5      	uxtb	r5, r0
 80139a8:	f10d 0826 	add.w	r8, sp, #38	; 0x26
 80139ac:	f7fd fe92 	bl	80116d4 <net_handle>
 80139b0:	f44f 7209 	mov.w	r2, #548	; 0x224
 80139b4:	4628      	mov	r0, r5
 80139b6:	f8cd 8000 	str.w	r8, [sp]
 80139ba:	ab0a      	add	r3, sp, #40	; 0x28
 80139bc:	a90b      	add	r1, sp, #44	; 0x2c
 80139be:	f7fe fb8d 	bl	80120dc <udp_recv>
 80139c2:	2800      	cmp	r0, #0
 80139c4:	d05f      	beq.n	8013a86 <_parse_response+0xee>
 80139c6:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
 80139ca:	2b43      	cmp	r3, #67	; 0x43
 80139cc:	d15b      	bne.n	8013a86 <_parse_response+0xee>
 80139ce:	aa12      	add	r2, sp, #72	; 0x48
 80139d0:	1e63      	subs	r3, r4, #1
 80139d2:	1d61      	adds	r1, r4, #5
 80139d4:	428b      	cmp	r3, r1
 80139d6:	d150      	bne.n	8013a7a <_parse_response+0xe2>
 80139d8:	2100      	movs	r1, #0
 80139da:	ab0b      	add	r3, sp, #44	; 0x2c
 80139dc:	181c      	adds	r4, r3, r0
 80139de:	4608      	mov	r0, r1
 80139e0:	4b4b      	ldr	r3, [pc, #300]	; (8013b10 <_parse_response+0x178>)
 80139e2:	e9cd 1104 	strd	r1, r1, [sp, #16]
 80139e6:	781a      	ldrb	r2, [r3, #0]
 80139e8:	f893 b001 	ldrb.w	fp, [r3, #1]
 80139ec:	f893 c002 	ldrb.w	ip, [r3, #2]
 80139f0:	78dd      	ldrb	r5, [r3, #3]
 80139f2:	4b48      	ldr	r3, [pc, #288]	; (8013b14 <_parse_response+0x17c>)
 80139f4:	9207      	str	r2, [sp, #28]
 80139f6:	781a      	ldrb	r2, [r3, #0]
 80139f8:	789f      	ldrb	r7, [r3, #2]
 80139fa:	78de      	ldrb	r6, [r3, #3]
 80139fc:	9206      	str	r2, [sp, #24]
 80139fe:	785a      	ldrb	r2, [r3, #1]
 8013a00:	4b45      	ldr	r3, [pc, #276]	; (8013b18 <_parse_response+0x180>)
 8013a02:	9203      	str	r2, [sp, #12]
 8013a04:	f893 a000 	ldrb.w	sl, [r3]
 8013a08:	f893 9001 	ldrb.w	r9, [r3, #1]
 8013a0c:	f893 8002 	ldrb.w	r8, [r3, #2]
 8013a10:	f893 e003 	ldrb.w	lr, [r3, #3]
 8013a14:	ab47      	add	r3, sp, #284	; 0x11c
 8013a16:	42a3      	cmp	r3, r4
 8013a18:	d33f      	bcc.n	8013a9a <_parse_response+0x102>
 8013a1a:	9b04      	ldr	r3, [sp, #16]
 8013a1c:	b143      	cbz	r3, 8013a30 <_parse_response+0x98>
 8013a1e:	4b3e      	ldr	r3, [pc, #248]	; (8013b18 <_parse_response+0x180>)
 8013a20:	f883 a000 	strb.w	sl, [r3]
 8013a24:	f883 9001 	strb.w	r9, [r3, #1]
 8013a28:	f883 8002 	strb.w	r8, [r3, #2]
 8013a2c:	f883 e003 	strb.w	lr, [r3, #3]
 8013a30:	9b05      	ldr	r3, [sp, #20]
 8013a32:	b133      	cbz	r3, 8013a42 <_parse_response+0xaa>
 8013a34:	4b37      	ldr	r3, [pc, #220]	; (8013b14 <_parse_response+0x17c>)
 8013a36:	9a06      	ldr	r2, [sp, #24]
 8013a38:	709f      	strb	r7, [r3, #2]
 8013a3a:	701a      	strb	r2, [r3, #0]
 8013a3c:	9a03      	ldr	r2, [sp, #12]
 8013a3e:	70de      	strb	r6, [r3, #3]
 8013a40:	705a      	strb	r2, [r3, #1]
 8013a42:	b139      	cbz	r1, 8013a54 <_parse_response+0xbc>
 8013a44:	4b32      	ldr	r3, [pc, #200]	; (8013b10 <_parse_response+0x178>)
 8013a46:	9a07      	ldr	r2, [sp, #28]
 8013a48:	f883 b001 	strb.w	fp, [r3, #1]
 8013a4c:	701a      	strb	r2, [r3, #0]
 8013a4e:	f883 c002 	strb.w	ip, [r3, #2]
 8013a52:	70dd      	strb	r5, [r3, #3]
 8013a54:	2802      	cmp	r0, #2
 8013a56:	d10c      	bne.n	8013a72 <_parse_response+0xda>
 8013a58:	4b30      	ldr	r3, [pc, #192]	; (8013b1c <_parse_response+0x184>)
 8013a5a:	f89d 203c 	ldrb.w	r2, [sp, #60]	; 0x3c
 8013a5e:	701a      	strb	r2, [r3, #0]
 8013a60:	f89d 203d 	ldrb.w	r2, [sp, #61]	; 0x3d
 8013a64:	705a      	strb	r2, [r3, #1]
 8013a66:	f89d 203e 	ldrb.w	r2, [sp, #62]	; 0x3e
 8013a6a:	709a      	strb	r2, [r3, #2]
 8013a6c:	f89d 203f 	ldrb.w	r2, [sp, #63]	; 0x3f
 8013a70:	70da      	strb	r2, [r3, #3]
 8013a72:	f50d 7d15 	add.w	sp, sp, #596	; 0x254
 8013a76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013a7a:	f812 cb01 	ldrb.w	ip, [r2], #1
 8013a7e:	f813 ef01 	ldrb.w	lr, [r3, #1]!
 8013a82:	45e6      	cmp	lr, ip
 8013a84:	d0a6      	beq.n	80139d4 <_parse_response+0x3c>
 8013a86:	6833      	ldr	r3, [r6, #0]
 8013a88:	1bdb      	subs	r3, r3, r7
 8013a8a:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 8013a8e:	d38b      	bcc.n	80139a8 <_parse_response+0x10>
 8013a90:	2800      	cmp	r0, #0
 8013a92:	d1a1      	bne.n	80139d8 <_parse_response+0x40>
 8013a94:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8013a98:	e7eb      	b.n	8013a72 <_parse_response+0xda>
 8013a9a:	781a      	ldrb	r2, [r3, #0]
 8013a9c:	2a35      	cmp	r2, #53	; 0x35
 8013a9e:	d011      	beq.n	8013ac4 <_parse_response+0x12c>
 8013aa0:	d808      	bhi.n	8013ab4 <_parse_response+0x11c>
 8013aa2:	2a01      	cmp	r2, #1
 8013aa4:	d011      	beq.n	8013aca <_parse_response+0x132>
 8013aa6:	2a03      	cmp	r2, #3
 8013aa8:	d01a      	beq.n	8013ae0 <_parse_response+0x148>
 8013aaa:	b14a      	cbz	r2, 8013ac0 <_parse_response+0x128>
 8013aac:	1c9a      	adds	r2, r3, #2
 8013aae:	785b      	ldrb	r3, [r3, #1]
 8013ab0:	4413      	add	r3, r2
 8013ab2:	e7b0      	b.n	8013a16 <_parse_response+0x7e>
 8013ab4:	2a36      	cmp	r2, #54	; 0x36
 8013ab6:	d01f      	beq.n	8013af8 <_parse_response+0x160>
 8013ab8:	2aff      	cmp	r2, #255	; 0xff
 8013aba:	d1f7      	bne.n	8013aac <_parse_response+0x114>
 8013abc:	4623      	mov	r3, r4
 8013abe:	e7aa      	b.n	8013a16 <_parse_response+0x7e>
 8013ac0:	3301      	adds	r3, #1
 8013ac2:	e7a8      	b.n	8013a16 <_parse_response+0x7e>
 8013ac4:	7898      	ldrb	r0, [r3, #2]
 8013ac6:	3303      	adds	r3, #3
 8013ac8:	e7a5      	b.n	8013a16 <_parse_response+0x7e>
 8013aca:	f893 a002 	ldrb.w	sl, [r3, #2]
 8013ace:	f893 9003 	ldrb.w	r9, [r3, #3]
 8013ad2:	f893 8004 	ldrb.w	r8, [r3, #4]
 8013ad6:	f893 e005 	ldrb.w	lr, [r3, #5]
 8013ada:	9204      	str	r2, [sp, #16]
 8013adc:	3306      	adds	r3, #6
 8013ade:	e79a      	b.n	8013a16 <_parse_response+0x7e>
 8013ae0:	789a      	ldrb	r2, [r3, #2]
 8013ae2:	791f      	ldrb	r7, [r3, #4]
 8013ae4:	9206      	str	r2, [sp, #24]
 8013ae6:	78da      	ldrb	r2, [r3, #3]
 8013ae8:	795e      	ldrb	r6, [r3, #5]
 8013aea:	9203      	str	r2, [sp, #12]
 8013aec:	785a      	ldrb	r2, [r3, #1]
 8013aee:	4413      	add	r3, r2
 8013af0:	2201      	movs	r2, #1
 8013af2:	3302      	adds	r3, #2
 8013af4:	9205      	str	r2, [sp, #20]
 8013af6:	e78e      	b.n	8013a16 <_parse_response+0x7e>
 8013af8:	789a      	ldrb	r2, [r3, #2]
 8013afa:	f893 b003 	ldrb.w	fp, [r3, #3]
 8013afe:	f893 c004 	ldrb.w	ip, [r3, #4]
 8013b02:	795d      	ldrb	r5, [r3, #5]
 8013b04:	2101      	movs	r1, #1
 8013b06:	9207      	str	r2, [sp, #28]
 8013b08:	3306      	adds	r3, #6
 8013b0a:	e784      	b.n	8013a16 <_parse_response+0x7e>
 8013b0c:	20013e04 	andcs	r3, r1, r4, lsl #28
 8013b10:	20013b58 	andcs	r3, r1, r8, asr fp
 8013b14:	20013928 	andcs	r3, r1, r8, lsr #18
 8013b18:	20013930 	andcs	r3, r1, r0, lsr r9
 8013b1c:	2001392c 	andcs	r3, r1, ip, lsr #18

08013b20 <memcpy.isra.0>:
 8013b20:	3801      	subs	r0, #1
 8013b22:	440a      	add	r2, r1
 8013b24:	4291      	cmp	r1, r2
 8013b26:	d100      	bne.n	8013b2a <memcpy.isra.0+0xa>
 8013b28:	4770      	bx	lr
 8013b2a:	f811 3b01 	ldrb.w	r3, [r1], #1
 8013b2e:	f800 3f01 	strb.w	r3, [r0, #1]!
 8013b32:	e7f7      	b.n	8013b24 <memcpy.isra.0+0x4>

08013b34 <dhcp_client>:
 8013b34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013b38:	b087      	sub	sp, #28
 8013b3a:	9203      	str	r2, [sp, #12]
 8013b3c:	4a77      	ldr	r2, [pc, #476]	; (8013d1c <dhcp_client+0x1e8>)
 8013b3e:	460f      	mov	r7, r1
 8013b40:	4605      	mov	r5, r0
 8013b42:	f44f 7309 	mov.w	r3, #548	; 0x224
 8013b46:	4614      	mov	r4, r2
 8013b48:	2100      	movs	r1, #0
 8013b4a:	3b01      	subs	r3, #1
 8013b4c:	f802 1b01 	strb.w	r1, [r2], #1
 8013b50:	d1fb      	bne.n	8013b4a <dhcp_client+0x16>
 8013b52:	f240 1301 	movw	r3, #257	; 0x101
 8013b56:	2206      	movs	r2, #6
 8013b58:	4629      	mov	r1, r5
 8013b5a:	4871      	ldr	r0, [pc, #452]	; (8013d20 <dhcp_client+0x1ec>)
 8013b5c:	8023      	strh	r3, [r4, #0]
 8013b5e:	70a2      	strb	r2, [r4, #2]
 8013b60:	f7ff ffde 	bl	8013b20 <memcpy.isra.0>
 8013b64:	4b6f      	ldr	r3, [pc, #444]	; (8013d24 <dhcp_client+0x1f0>)
 8013b66:	2044      	movs	r0, #68	; 0x44
 8013b68:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
 8013b6c:	f240 1335 	movw	r3, #309	; 0x135
 8013b70:	f8a4 30f0 	strh.w	r3, [r4, #240]	; 0xf0
 8013b74:	f7fe fa78 	bl	8012068 <udp_bind>
 8013b78:	1e06      	subs	r6, r0, #0
 8013b7a:	f2c0 80c9 	blt.w	8013d10 <dhcp_client+0x1dc>
 8013b7e:	f04f 0915 	mov.w	r9, #21
 8013b82:	f8df a198 	ldr.w	sl, [pc, #408]	; 8013d1c <dhcp_client+0x1e8>
 8013b86:	f1b9 0901 	subs.w	r9, r9, #1
 8013b8a:	d11f      	bne.n	8013bcc <dhcp_client+0x98>
 8013b8c:	464c      	mov	r4, r9
 8013b8e:	2044      	movs	r0, #68	; 0x44
 8013b90:	f7fe fa84 	bl	801209c <udp_unbind>
 8013b94:	2c00      	cmp	r4, #0
 8013b96:	f000 80be 	beq.w	8013d16 <dhcp_client+0x1e2>
 8013b9a:	2204      	movs	r2, #4
 8013b9c:	4962      	ldr	r1, [pc, #392]	; (8013d28 <dhcp_client+0x1f4>)
 8013b9e:	a805      	add	r0, sp, #20
 8013ba0:	f7ff ffbe 	bl	8013b20 <memcpy.isra.0>
 8013ba4:	9b05      	ldr	r3, [sp, #20]
 8013ba6:	2204      	movs	r2, #4
 8013ba8:	4960      	ldr	r1, [pc, #384]	; (8013d2c <dhcp_client+0x1f8>)
 8013baa:	603b      	str	r3, [r7, #0]
 8013bac:	a805      	add	r0, sp, #20
 8013bae:	f7ff ffb7 	bl	8013b20 <memcpy.isra.0>
 8013bb2:	9b05      	ldr	r3, [sp, #20]
 8013bb4:	a805      	add	r0, sp, #20
 8013bb6:	60bb      	str	r3, [r7, #8]
 8013bb8:	2204      	movs	r2, #4
 8013bba:	495d      	ldr	r1, [pc, #372]	; (8013d30 <dhcp_client+0x1fc>)
 8013bbc:	f7ff ffb0 	bl	8013b20 <memcpy.isra.0>
 8013bc0:	2000      	movs	r0, #0
 8013bc2:	9b05      	ldr	r3, [sp, #20]
 8013bc4:	607b      	str	r3, [r7, #4]
 8013bc6:	b007      	add	sp, #28
 8013bc8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013bcc:	f643 5301 	movw	r3, #15617	; 0x3d01
 8013bd0:	f240 1807 	movw	r8, #263	; 0x107
 8013bd4:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 8013bd8:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 8013bdc:	782b      	ldrb	r3, [r5, #0]
 8013bde:	4a55      	ldr	r2, [pc, #340]	; (8013d34 <dhcp_client+0x200>)
 8013be0:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 8013be4:	786b      	ldrb	r3, [r5, #1]
 8013be6:	fa5f fb86 	uxtb.w	fp, r6
 8013bea:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 8013bee:	78ab      	ldrb	r3, [r5, #2]
 8013bf0:	4651      	mov	r1, sl
 8013bf2:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 8013bf6:	78eb      	ldrb	r3, [r5, #3]
 8013bf8:	4658      	mov	r0, fp
 8013bfa:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 8013bfe:	792b      	ldrb	r3, [r5, #4]
 8013c00:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 8013c04:	796b      	ldrb	r3, [r5, #5]
 8013c06:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 8013c0a:	4b4b      	ldr	r3, [pc, #300]	; (8013d38 <dhcp_client+0x204>)
 8013c0c:	e9c4 233f 	strd	r2, r3, [r4, #252]	; 0xfc
 8013c10:	23ff      	movs	r3, #255	; 0xff
 8013c12:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8013c16:	2343      	movs	r3, #67	; 0x43
 8013c18:	f240 1205 	movw	r2, #261	; 0x105
 8013c1c:	9300      	str	r3, [sp, #0]
 8013c1e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8013c22:	f7fe fab7 	bl	8012194 <udp_send>
 8013c26:	4629      	mov	r1, r5
 8013c28:	4630      	mov	r0, r6
 8013c2a:	f7ff feb5 	bl	8013998 <_parse_response>
 8013c2e:	2802      	cmp	r0, #2
 8013c30:	d1a9      	bne.n	8013b86 <dhcp_client+0x52>
 8013c32:	f643 5303 	movw	r3, #15619	; 0x3d03
 8013c36:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 8013c3a:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 8013c3e:	782b      	ldrb	r3, [r5, #0]
 8013c40:	f8df c0f8 	ldr.w	ip, [pc, #248]	; 8013d3c <dhcp_client+0x208>
 8013c44:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 8013c48:	786b      	ldrb	r3, [r5, #1]
 8013c4a:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 8013c4e:	78ab      	ldrb	r3, [r5, #2]
 8013c50:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 8013c54:	78eb      	ldrb	r3, [r5, #3]
 8013c56:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 8013c5a:	792b      	ldrb	r3, [r5, #4]
 8013c5c:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 8013c60:	796b      	ldrb	r3, [r5, #5]
 8013c62:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 8013c66:	f240 4332 	movw	r3, #1074	; 0x432
 8013c6a:	f8a4 30fc 	strh.w	r3, [r4, #252]	; 0xfc
 8013c6e:	4b2e      	ldr	r3, [pc, #184]	; (8013d28 <dhcp_client+0x1f4>)
 8013c70:	881a      	ldrh	r2, [r3, #0]
 8013c72:	885b      	ldrh	r3, [r3, #2]
 8013c74:	f8a4 20fe 	strh.w	r2, [r4, #254]	; 0xfe
 8013c78:	f8a4 3100 	strh.w	r3, [r4, #256]	; 0x100
 8013c7c:	f240 4336 	movw	r3, #1078	; 0x436
 8013c80:	f8a4 3102 	strh.w	r3, [r4, #258]	; 0x102
 8013c84:	4b2e      	ldr	r3, [pc, #184]	; (8013d40 <dhcp_client+0x20c>)
 8013c86:	221e      	movs	r2, #30
 8013c88:	681b      	ldr	r3, [r3, #0]
 8013c8a:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
 8013c8e:	230c      	movs	r3, #12
 8013c90:	f8a4 3108 	strh.w	r3, [r4, #264]	; 0x108
 8013c94:	9b03      	ldr	r3, [sp, #12]
 8013c96:	1e58      	subs	r0, r3, #1
 8013c98:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 8013c9c:	f1a2 0e1e 	sub.w	lr, r2, #30
 8013ca0:	1c51      	adds	r1, r2, #1
 8013ca2:	bb8b      	cbnz	r3, 8013d08 <dhcp_client+0x1d4>
 8013ca4:	2037      	movs	r0, #55	; 0x37
 8013ca6:	18a3      	adds	r3, r4, r2
 8013ca8:	f883 00ec 	strb.w	r0, [r3, #236]	; 0xec
 8013cac:	2006      	movs	r0, #6
 8013cae:	4421      	add	r1, r4
 8013cb0:	f881 00ec 	strb.w	r0, [r1, #236]	; 0xec
 8013cb4:	2103      	movs	r1, #3
 8013cb6:	f883 10ef 	strb.w	r1, [r3, #239]	; 0xef
 8013cba:	210f      	movs	r1, #15
 8013cbc:	f883 10f1 	strb.w	r1, [r3, #241]	; 0xf1
 8013cc0:	213a      	movs	r1, #58	; 0x3a
 8013cc2:	f883 10f2 	strb.w	r1, [r3, #242]	; 0xf2
 8013cc6:	213b      	movs	r1, #59	; 0x3b
 8013cc8:	f04f 0801 	mov.w	r8, #1
 8013ccc:	f883 10f3 	strb.w	r1, [r3, #243]	; 0xf3
 8013cd0:	21ff      	movs	r1, #255	; 0xff
 8013cd2:	f883 00f0 	strb.w	r0, [r3, #240]	; 0xf0
 8013cd6:	f883 10f4 	strb.w	r1, [r3, #244]	; 0xf4
 8013cda:	f883 80ee 	strb.w	r8, [r3, #238]	; 0xee
 8013cde:	2343      	movs	r3, #67	; 0x43
 8013ce0:	32f5      	adds	r2, #245	; 0xf5
 8013ce2:	f884 e109 	strb.w	lr, [r4, #265]	; 0x109
 8013ce6:	4651      	mov	r1, sl
 8013ce8:	9300      	str	r3, [sp, #0]
 8013cea:	b292      	uxth	r2, r2
 8013cec:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8013cf0:	4658      	mov	r0, fp
 8013cf2:	f7fe fa4f 	bl	8012194 <udp_send>
 8013cf6:	4629      	mov	r1, r5
 8013cf8:	4630      	mov	r0, r6
 8013cfa:	f7ff fe4d 	bl	8013998 <_parse_response>
 8013cfe:	2805      	cmp	r0, #5
 8013d00:	f47f af41 	bne.w	8013b86 <dhcp_client+0x52>
 8013d04:	4644      	mov	r4, r8
 8013d06:	e742      	b.n	8013b8e <dhcp_client+0x5a>
 8013d08:	460a      	mov	r2, r1
 8013d0a:	f80c 3b01 	strb.w	r3, [ip], #1
 8013d0e:	e7c3      	b.n	8013c98 <dhcp_client+0x164>
 8013d10:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8013d14:	e757      	b.n	8013bc6 <dhcp_client+0x92>
 8013d16:	f06f 0001 	mvn.w	r0, #1
 8013d1a:	e754      	b.n	8013bc6 <dhcp_client+0x92>
 8013d1c:	20013934 	andcs	r3, r1, r4, lsr r9
 8013d20:	20013950 	andcs	r3, r1, r0, asr r9
 8013d24:	63538263 	cmpvs	r3, #805306374	; 0x30000006
 8013d28:	2001392c 	andcs	r3, r1, ip, lsr #18
 8013d2c:	20013928 	andcs	r3, r1, r8, lsr #18
 8013d30:	20013930 	andcs	r3, r1, r0, lsr r9
 8013d34:	03010637 	movweq	r0, #5687	; 0x1637
 8013d38:	3b3a0f06 	blcc	8e97958 <__exidx_end+0xe7d154>
 8013d3c:	20013a3e 	andcs	r3, r1, lr, lsr sl
 8013d40:	20013b58 	andcs	r3, r1, r8, asr fp

08013d44 <dhcp_client_release>:
 8013d44:	b507      	push	{r0, r1, r2, lr}
 8013d46:	2044      	movs	r0, #68	; 0x44
 8013d48:	f7fe f98e 	bl	8012068 <udp_bind>
 8013d4c:	f243 6307 	movw	r3, #13831	; 0x3607
 8013d50:	4911      	ldr	r1, [pc, #68]	; (8013d98 <dhcp_client_release+0x54>)
 8013d52:	b2c0      	uxtb	r0, r0
 8013d54:	f8a1 30f2 	strh.w	r3, [r1, #242]	; 0xf2
 8013d58:	2304      	movs	r3, #4
 8013d5a:	f881 30f4 	strb.w	r3, [r1, #244]	; 0xf4
 8013d5e:	4b0f      	ldr	r3, [pc, #60]	; (8013d9c <dhcp_client_release+0x58>)
 8013d60:	781a      	ldrb	r2, [r3, #0]
 8013d62:	f881 20f5 	strb.w	r2, [r1, #245]	; 0xf5
 8013d66:	785a      	ldrb	r2, [r3, #1]
 8013d68:	f881 20f6 	strb.w	r2, [r1, #246]	; 0xf6
 8013d6c:	789a      	ldrb	r2, [r3, #2]
 8013d6e:	78db      	ldrb	r3, [r3, #3]
 8013d70:	f881 20f7 	strb.w	r2, [r1, #247]	; 0xf7
 8013d74:	f881 30f8 	strb.w	r3, [r1, #248]	; 0xf8
 8013d78:	23ff      	movs	r3, #255	; 0xff
 8013d7a:	f881 30f9 	strb.w	r3, [r1, #249]	; 0xf9
 8013d7e:	2343      	movs	r3, #67	; 0x43
 8013d80:	22fa      	movs	r2, #250	; 0xfa
 8013d82:	9300      	str	r3, [sp, #0]
 8013d84:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8013d88:	f7fe fa04 	bl	8012194 <udp_send>
 8013d8c:	2044      	movs	r0, #68	; 0x44
 8013d8e:	b003      	add	sp, #12
 8013d90:	f85d eb04 	ldr.w	lr, [sp], #4
 8013d94:	f7fe b982 	b.w	801209c <udp_unbind>
 8013d98:	20013934 	andcs	r3, r1, r4, lsr r9
 8013d9c:	20013b58 	andcs	r3, r1, r8, asr fp

08013da0 <memcpy.isra.0>:
 8013da0:	3801      	subs	r0, #1
 8013da2:	440a      	add	r2, r1
 8013da4:	4291      	cmp	r1, r2
 8013da6:	d100      	bne.n	8013daa <memcpy.isra.0+0xa>
 8013da8:	4770      	bx	lr
 8013daa:	f811 3b01 	ldrb.w	r3, [r1], #1
 8013dae:	f800 3f01 	strb.w	r3, [r0, #1]!
 8013db2:	e7f7      	b.n	8013da4 <memcpy.isra.0+0x4>

08013db4 <_send_report>:
 8013db4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8013db6:	491c      	ldr	r1, [pc, #112]	; (8013e28 <_send_report+0x74>)
 8013db8:	4c1c      	ldr	r4, [pc, #112]	; (8013e2c <_send_report+0x78>)
 8013dba:	f3c0 2306 	ubfx	r3, r0, #8, #7
 8013dbe:	9001      	str	r0, [sp, #4]
 8013dc0:	70cb      	strb	r3, [r1, #3]
 8013dc2:	f3c0 4307 	ubfx	r3, r0, #16, #8
 8013dc6:	f3c0 6007 	ubfx	r0, r0, #24, #8
 8013dca:	710b      	strb	r3, [r1, #4]
 8013dcc:	7148      	strb	r0, [r1, #5]
 8013dce:	2206      	movs	r2, #6
 8013dd0:	4620      	mov	r0, r4
 8013dd2:	f7ff ffe5 	bl	8013da0 <memcpy.isra.0>
 8013dd6:	2204      	movs	r2, #4
 8013dd8:	2700      	movs	r7, #0
 8013dda:	4d15      	ldr	r5, [pc, #84]	; (8013e30 <_send_report+0x7c>)
 8013ddc:	eb0d 0102 	add.w	r1, sp, r2
 8013de0:	882b      	ldrh	r3, [r5, #0]
 8013de2:	f104 001e 	add.w	r0, r4, #30
 8013de6:	f104 060e 	add.w	r6, r4, #14
 8013dea:	8263      	strh	r3, [r4, #18]
 8013dec:	f7ff ffd8 	bl	8013da0 <memcpy.isra.0>
 8013df0:	2118      	movs	r1, #24
 8013df2:	4630      	mov	r0, r6
 8013df4:	8327      	strh	r7, [r4, #24]
 8013df6:	f000 f9b7 	bl	8014168 <net_chksum>
 8013dfa:	2204      	movs	r2, #4
 8013dfc:	8320      	strh	r0, [r4, #24]
 8013dfe:	eb0d 0102 	add.w	r1, sp, r2
 8013e02:	f104 002a 	add.w	r0, r4, #42	; 0x2a
 8013e06:	f7ff ffcb 	bl	8013da0 <memcpy.isra.0>
 8013e0a:	2120      	movs	r1, #32
 8013e0c:	4630      	mov	r0, r6
 8013e0e:	8527      	strh	r7, [r4, #40]	; 0x28
 8013e10:	f000 f9aa 	bl	8014168 <net_chksum>
 8013e14:	212e      	movs	r1, #46	; 0x2e
 8013e16:	8520      	strh	r0, [r4, #40]	; 0x28
 8013e18:	4620      	mov	r0, r4
 8013e1a:	f002 ffc1 	bl	8016da0 <emac_eth_send>
 8013e1e:	882b      	ldrh	r3, [r5, #0]
 8013e20:	3301      	adds	r3, #1
 8013e22:	802b      	strh	r3, [r5, #0]
 8013e24:	b003      	add	sp, #12
 8013e26:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013e28:	20013cb4 			; <UNDEFINED> instruction: 0x20013cb4
 8013e2c:	20013cbc 			; <UNDEFINED> instruction: 0x20013cbc
 8013e30:	20013c7c 	andcs	r3, r1, ip, ror ip

08013e34 <igmp_set_ip>:
 8013e34:	b507      	push	{r0, r1, r2, lr}
 8013e36:	2204      	movs	r2, #4
 8013e38:	6803      	ldr	r3, [r0, #0]
 8013e3a:	eb0d 0102 	add.w	r1, sp, r2
 8013e3e:	4806      	ldr	r0, [pc, #24]	; (8013e58 <igmp_set_ip+0x24>)
 8013e40:	9301      	str	r3, [sp, #4]
 8013e42:	f7ff ffad 	bl	8013da0 <memcpy.isra.0>
 8013e46:	2204      	movs	r2, #4
 8013e48:	4804      	ldr	r0, [pc, #16]	; (8013e5c <igmp_set_ip+0x28>)
 8013e4a:	eb0d 0102 	add.w	r1, sp, r2
 8013e4e:	f7ff ffa7 	bl	8013da0 <memcpy.isra.0>
 8013e52:	b003      	add	sp, #12
 8013e54:	f85d fb04 	ldr.w	pc, [sp], #4
 8013e58:	20013cd6 	ldrdcs	r3, [r1], -r6
 8013e5c:	20013c9e 	mulcs	r1, lr, ip

08013e60 <igmp_init>:
 8013e60:	2200      	movs	r2, #0
 8013e62:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8013e66:	4605      	mov	r5, r0
 8013e68:	4608      	mov	r0, r1
 8013e6a:	4611      	mov	r1, r2
 8013e6c:	4b23      	ldr	r3, [pc, #140]	; (8013efc <igmp_init+0x9c>)
 8013e6e:	f103 0408 	add.w	r4, r3, #8
 8013e72:	42a3      	cmp	r3, r4
 8013e74:	d13e      	bne.n	8013ef4 <igmp_init+0x94>
 8013e76:	3201      	adds	r2, #1
 8013e78:	2a24      	cmp	r2, #36	; 0x24
 8013e7a:	d1f8      	bne.n	8013e6e <igmp_init+0xe>
 8013e7c:	2600      	movs	r6, #0
 8013e7e:	4b20      	ldr	r3, [pc, #128]	; (8013f00 <igmp_init+0xa0>)
 8013e80:	4c20      	ldr	r4, [pc, #128]	; (8013f04 <igmp_init+0xa4>)
 8013e82:	601e      	str	r6, [r3, #0]
 8013e84:	4b20      	ldr	r3, [pc, #128]	; (8013f08 <igmp_init+0xa8>)
 8013e86:	f44f 5700 	mov.w	r7, #8192	; 0x2000
 8013e8a:	801e      	strh	r6, [r3, #0]
 8013e8c:	f7ff ffd2 	bl	8013e34 <igmp_set_ip>
 8013e90:	2201      	movs	r2, #1
 8013e92:	4b1e      	ldr	r3, [pc, #120]	; (8013f0c <igmp_init+0xac>)
 8013e94:	4629      	mov	r1, r5
 8013e96:	801a      	strh	r2, [r3, #0]
 8013e98:	225e      	movs	r2, #94	; 0x5e
 8013e9a:	709a      	strb	r2, [r3, #2]
 8013e9c:	2206      	movs	r2, #6
 8013e9e:	18a0      	adds	r0, r4, r2
 8013ea0:	f7ff ff7e 	bl	8013da0 <memcpy.isra.0>
 8013ea4:	f240 4394 	movw	r3, #1172	; 0x494
 8013ea8:	8463      	strh	r3, [r4, #34]	; 0x22
 8013eaa:	2316      	movs	r3, #22
 8013eac:	f8df 9060 	ldr.w	r9, [pc, #96]	; 8013f10 <igmp_init+0xb0>
 8013eb0:	f8df 8060 	ldr.w	r8, [pc, #96]	; 8013f14 <igmp_init+0xb4>
 8013eb4:	84e3      	strh	r3, [r4, #38]	; 0x26
 8013eb6:	f8c4 9014 	str.w	r9, [r4, #20]
 8013eba:	4b17      	ldr	r3, [pc, #92]	; (8013f18 <igmp_init+0xb8>)
 8013ebc:	f8c4 800c 	str.w	r8, [r4, #12]
 8013ec0:	8227      	strh	r7, [r4, #16]
 8013ec2:	84a6      	strh	r6, [r4, #36]	; 0x24
 8013ec4:	4c15      	ldr	r4, [pc, #84]	; (8013f1c <igmp_init+0xbc>)
 8013ec6:	2206      	movs	r2, #6
 8013ec8:	6023      	str	r3, [r4, #0]
 8013eca:	f44f 7300 	mov.w	r3, #512	; 0x200
 8013ece:	18a0      	adds	r0, r4, r2
 8013ed0:	80a3      	strh	r3, [r4, #4]
 8013ed2:	4629      	mov	r1, r5
 8013ed4:	f7ff ff64 	bl	8013da0 <memcpy.isra.0>
 8013ed8:	23e0      	movs	r3, #224	; 0xe0
 8013eda:	83e3      	strh	r3, [r4, #30]
 8013edc:	f44f 13b8 	mov.w	r3, #1507328	; 0x170000
 8013ee0:	4a0f      	ldr	r2, [pc, #60]	; (8013f20 <igmp_init+0xc0>)
 8013ee2:	f8c4 9014 	str.w	r9, [r4, #20]
 8013ee6:	e9c4 2308 	strd	r2, r3, [r4, #32]
 8013eea:	f8c4 800c 	str.w	r8, [r4, #12]
 8013eee:	8227      	strh	r7, [r4, #16]
 8013ef0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8013ef4:	f803 1b01 	strb.w	r1, [r3], #1
 8013ef8:	e7bb      	b.n	8013e72 <igmp_init+0x12>
 8013efa:	bf00      	nop
 8013efc:	20013b5c 	andcs	r3, r1, ip, asr fp
 8013f00:	20013c80 	andcs	r3, r1, r0, lsl #25
 8013f04:	20013cbc 			; <UNDEFINED> instruction: 0x20013cbc
 8013f08:	20013c7c 	andcs	r3, r1, ip, ror ip
 8013f0c:	20013cb4 			; <UNDEFINED> instruction: 0x20013cb4
 8013f10:	02010040 	andeq	r0, r1, #64	; 0x40
 8013f14:	00460008 	subeq	r0, r6, r8
 8013f18:	005e0001 	subseq	r0, lr, r1
 8013f1c:	20013c84 	andcs	r3, r1, r4, lsl #25
 8013f20:	04940200 	ldreq	r0, [r4], #512	; 0x200

08013f24 <igmp_handle>:
 8013f24:	7b83      	ldrb	r3, [r0, #14]
 8013f26:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8013f2a:	2b45      	cmp	r3, #69	; 0x45
 8013f2c:	d116      	bne.n	8013f5c <igmp_handle+0x38>
 8013f2e:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 8013f32:	2b11      	cmp	r3, #17
 8013f34:	d112      	bne.n	8013f5c <igmp_handle+0x38>
 8013f36:	4b20      	ldr	r3, [pc, #128]	; (8013fb8 <igmp_handle+0x94>)
 8013f38:	f100 051e 	add.w	r5, r0, #30
 8013f3c:	9300      	str	r3, [sp, #0]
 8013f3e:	466a      	mov	r2, sp
 8013f40:	462b      	mov	r3, r5
 8013f42:	f100 0622 	add.w	r6, r0, #34	; 0x22
 8013f46:	42b3      	cmp	r3, r6
 8013f48:	d10b      	bne.n	8013f62 <igmp_handle+0x3e>
 8013f4a:	2401      	movs	r4, #1
 8013f4c:	2100      	movs	r1, #0
 8013f4e:	f04f 0c01 	mov.w	ip, #1
 8013f52:	4b1a      	ldr	r3, [pc, #104]	; (8013fbc <igmp_handle+0x98>)
 8013f54:	4a1a      	ldr	r2, [pc, #104]	; (8013fc0 <igmp_handle+0x9c>)
 8013f56:	681f      	ldr	r7, [r3, #0]
 8013f58:	428f      	cmp	r7, r1
 8013f5a:	d10a      	bne.n	8013f72 <igmp_handle+0x4e>
 8013f5c:	b003      	add	sp, #12
 8013f5e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013f62:	f813 4b01 	ldrb.w	r4, [r3], #1
 8013f66:	f812 1b01 	ldrb.w	r1, [r2], #1
 8013f6a:	428c      	cmp	r4, r1
 8013f6c:	d0eb      	beq.n	8013f46 <igmp_handle+0x22>
 8013f6e:	2400      	movs	r4, #0
 8013f70:	e7ec      	b.n	8013f4c <igmp_handle+0x28>
 8013f72:	6813      	ldr	r3, [r2, #0]
 8013f74:	9301      	str	r3, [sp, #4]
 8013f76:	b924      	cbnz	r4, 8013f82 <igmp_handle+0x5e>
 8013f78:	462b      	mov	r3, r5
 8013f7a:	f10d 0e04 	add.w	lr, sp, #4
 8013f7e:	42b3      	cmp	r3, r6
 8013f80:	d10e      	bne.n	8013fa0 <igmp_handle+0x7c>
 8013f82:	f892 e005 	ldrb.w	lr, [r2, #5]
 8013f86:	f890 3023 	ldrb.w	r3, [r0, #35]	; 0x23
 8013f8a:	f1be 0f01 	cmp.w	lr, #1
 8013f8e:	d110      	bne.n	8013fb2 <igmp_handle+0x8e>
 8013f90:	f892 e004 	ldrb.w	lr, [r2, #4]
 8013f94:	459e      	cmp	lr, r3
 8013f96:	d909      	bls.n	8013fac <igmp_handle+0x88>
 8013f98:	085b      	lsrs	r3, r3, #1
 8013f9a:	3301      	adds	r3, #1
 8013f9c:	7113      	strb	r3, [r2, #4]
 8013f9e:	e005      	b.n	8013fac <igmp_handle+0x88>
 8013fa0:	f813 9b01 	ldrb.w	r9, [r3], #1
 8013fa4:	f81e 8b01 	ldrb.w	r8, [lr], #1
 8013fa8:	45c1      	cmp	r9, r8
 8013faa:	d0e8      	beq.n	8013f7e <igmp_handle+0x5a>
 8013fac:	3101      	adds	r1, #1
 8013fae:	3208      	adds	r2, #8
 8013fb0:	e7d2      	b.n	8013f58 <igmp_handle+0x34>
 8013fb2:	f882 c005 	strb.w	ip, [r2, #5]
 8013fb6:	e7ef      	b.n	8013f98 <igmp_handle+0x74>
 8013fb8:	010000e0 	smlatteq	r0, r0, r0, r0
 8013fbc:	20013c80 	andcs	r3, r1, r0, lsl #25
 8013fc0:	20013b5c 	andcs	r3, r1, ip, asr fp

08013fc4 <igmp_timer>:
 8013fc4:	b570      	push	{r4, r5, r6, lr}
 8013fc6:	2500      	movs	r5, #0
 8013fc8:	2602      	movs	r6, #2
 8013fca:	4c0a      	ldr	r4, [pc, #40]	; (8013ff4 <igmp_timer+0x30>)
 8013fcc:	7963      	ldrb	r3, [r4, #5]
 8013fce:	2b01      	cmp	r3, #1
 8013fd0:	d109      	bne.n	8013fe6 <igmp_timer+0x22>
 8013fd2:	7923      	ldrb	r3, [r4, #4]
 8013fd4:	b13b      	cbz	r3, 8013fe6 <igmp_timer+0x22>
 8013fd6:	3b01      	subs	r3, #1
 8013fd8:	b2db      	uxtb	r3, r3
 8013fda:	7123      	strb	r3, [r4, #4]
 8013fdc:	b91b      	cbnz	r3, 8013fe6 <igmp_timer+0x22>
 8013fde:	6820      	ldr	r0, [r4, #0]
 8013fe0:	f7ff fee8 	bl	8013db4 <_send_report>
 8013fe4:	7166      	strb	r6, [r4, #5]
 8013fe6:	3501      	adds	r5, #1
 8013fe8:	2d24      	cmp	r5, #36	; 0x24
 8013fea:	f104 0408 	add.w	r4, r4, #8
 8013fee:	d1ed      	bne.n	8013fcc <igmp_timer+0x8>
 8013ff0:	bd70      	pop	{r4, r5, r6, pc}
 8013ff2:	bf00      	nop
 8013ff4:	20013b5c 	andcs	r3, r1, ip, asr fp

08013ff8 <igmp_join>:
 8013ff8:	b538      	push	{r3, r4, r5, lr}
 8013ffa:	f000 03e0 	and.w	r3, r0, #224	; 0xe0
 8013ffe:	2be0      	cmp	r3, #224	; 0xe0
 8014000:	d11b      	bne.n	801403a <igmp_join+0x42>
 8014002:	4911      	ldr	r1, [pc, #68]	; (8014048 <igmp_join+0x50>)
 8014004:	680c      	ldr	r4, [r1, #0]
 8014006:	2c24      	cmp	r4, #36	; 0x24
 8014008:	d01a      	beq.n	8014040 <igmp_join+0x48>
 801400a:	2300      	movs	r3, #0
 801400c:	4a0f      	ldr	r2, [pc, #60]	; (801404c <igmp_join+0x54>)
 801400e:	429c      	cmp	r4, r3
 8014010:	dc0d      	bgt.n	801402e <igmp_join+0x36>
 8014012:	f44f 7381 	mov.w	r3, #258	; 0x102
 8014016:	f842 0034 	str.w	r0, [r2, r4, lsl #3]
 801401a:	eb02 02c4 	add.w	r2, r2, r4, lsl #3
 801401e:	8093      	strh	r3, [r2, #4]
 8014020:	1c63      	adds	r3, r4, #1
 8014022:	600b      	str	r3, [r1, #0]
 8014024:	f7ff fec6 	bl	8013db4 <_send_report>
 8014028:	4623      	mov	r3, r4
 801402a:	4618      	mov	r0, r3
 801402c:	bd38      	pop	{r3, r4, r5, pc}
 801402e:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 8014032:	4285      	cmp	r5, r0
 8014034:	d0f9      	beq.n	801402a <igmp_join+0x32>
 8014036:	3301      	adds	r3, #1
 8014038:	e7e9      	b.n	801400e <igmp_join+0x16>
 801403a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 801403e:	e7f4      	b.n	801402a <igmp_join+0x32>
 8014040:	f06f 0301 	mvn.w	r3, #1
 8014044:	e7f1      	b.n	801402a <igmp_join+0x32>
 8014046:	bf00      	nop
 8014048:	20013c80 	andcs	r3, r1, r0, lsl #25
 801404c:	20013b5c 	andcs	r3, r1, ip, asr fp

08014050 <igmp_leave>:
 8014050:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8014054:	2600      	movs	r6, #0
 8014056:	4f1c      	ldr	r7, [pc, #112]	; (80140c8 <igmp_leave+0x78>)
 8014058:	f857 3036 	ldr.w	r3, [r7, r6, lsl #3]
 801405c:	4283      	cmp	r3, r0
 801405e:	d007      	beq.n	8014070 <igmp_leave+0x20>
 8014060:	3601      	adds	r6, #1
 8014062:	2e24      	cmp	r6, #36	; 0x24
 8014064:	d1f8      	bne.n	8014058 <igmp_leave+0x8>
 8014066:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801406a:	b002      	add	sp, #8
 801406c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014070:	2400      	movs	r4, #0
 8014072:	f8df 8058 	ldr.w	r8, [pc, #88]	; 80140cc <igmp_leave+0x7c>
 8014076:	4d16      	ldr	r5, [pc, #88]	; (80140d0 <igmp_leave+0x80>)
 8014078:	f8b8 3000 	ldrh.w	r3, [r8]
 801407c:	2118      	movs	r1, #24
 801407e:	9001      	str	r0, [sp, #4]
 8014080:	4814      	ldr	r0, [pc, #80]	; (80140d4 <igmp_leave+0x84>)
 8014082:	826b      	strh	r3, [r5, #18]
 8014084:	832c      	strh	r4, [r5, #24]
 8014086:	f000 f86f 	bl	8014168 <net_chksum>
 801408a:	2204      	movs	r2, #4
 801408c:	8328      	strh	r0, [r5, #24]
 801408e:	eb0d 0102 	add.w	r1, sp, r2
 8014092:	f105 002a 	add.w	r0, r5, #42	; 0x2a
 8014096:	f7ff fe83 	bl	8013da0 <memcpy.isra.0>
 801409a:	2120      	movs	r1, #32
 801409c:	f105 000e 	add.w	r0, r5, #14
 80140a0:	852c      	strh	r4, [r5, #40]	; 0x28
 80140a2:	f000 f861 	bl	8014168 <net_chksum>
 80140a6:	212e      	movs	r1, #46	; 0x2e
 80140a8:	8528      	strh	r0, [r5, #40]	; 0x28
 80140aa:	4628      	mov	r0, r5
 80140ac:	f002 fe78 	bl	8016da0 <emac_eth_send>
 80140b0:	f8b8 3000 	ldrh.w	r3, [r8]
 80140b4:	f847 4036 	str.w	r4, [r7, r6, lsl #3]
 80140b8:	3301      	adds	r3, #1
 80140ba:	eb07 06c6 	add.w	r6, r7, r6, lsl #3
 80140be:	4620      	mov	r0, r4
 80140c0:	f8a8 3000 	strh.w	r3, [r8]
 80140c4:	80b4      	strh	r4, [r6, #4]
 80140c6:	e7d0      	b.n	801406a <igmp_leave+0x1a>
 80140c8:	20013b5c 	andcs	r3, r1, ip, asr fp
 80140cc:	20013c7c 	andcs	r3, r1, ip, ror ip
 80140d0:	20013c84 	andcs	r3, r1, r4, lsl #25
 80140d4:	20013cca 	andcs	r3, r1, sl, asr #25

080140d8 <igmp_shutdown>:
 80140d8:	b570      	push	{r4, r5, r6, lr}
 80140da:	2500      	movs	r5, #0
 80140dc:	462e      	mov	r6, r5
 80140de:	4c07      	ldr	r4, [pc, #28]	; (80140fc <igmp_shutdown+0x24>)
 80140e0:	6820      	ldr	r0, [r4, #0]
 80140e2:	b120      	cbz	r0, 80140ee <igmp_shutdown+0x16>
 80140e4:	f7ff ffb4 	bl	8014050 <igmp_leave>
 80140e8:	6026      	str	r6, [r4, #0]
 80140ea:	7166      	strb	r6, [r4, #5]
 80140ec:	7126      	strb	r6, [r4, #4]
 80140ee:	3501      	adds	r5, #1
 80140f0:	2d24      	cmp	r5, #36	; 0x24
 80140f2:	f104 0408 	add.w	r4, r4, #8
 80140f6:	d1f3      	bne.n	80140e0 <igmp_shutdown+0x8>
 80140f8:	bd70      	pop	{r4, r5, r6, pc}
 80140fa:	bf00      	nop
 80140fc:	20013b5c 	andcs	r3, r1, ip, asr fp

08014100 <ip_set_ip>:
 8014100:	b510      	push	{r4, lr}
 8014102:	4604      	mov	r4, r0
 8014104:	f7fd ff08 	bl	8011f18 <udp_set_ip>
 8014108:	4620      	mov	r0, r4
 801410a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801410e:	f7ff be91 	b.w	8013e34 <igmp_set_ip>

08014112 <ip_init>:
 8014112:	b538      	push	{r3, r4, r5, lr}
 8014114:	4604      	mov	r4, r0
 8014116:	460d      	mov	r5, r1
 8014118:	f7fd ff1e 	bl	8011f58 <udp_init>
 801411c:	4629      	mov	r1, r5
 801411e:	4620      	mov	r0, r4
 8014120:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8014124:	f7ff be9c 	b.w	8013e60 <igmp_init>

08014128 <ip_shutdown>:
 8014128:	b508      	push	{r3, lr}
 801412a:	f7ff ffd5 	bl	80140d8 <igmp_shutdown>
 801412e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8014132:	f7fd bf43 	b.w	8011fbc <udp_shutdown>

08014136 <ip_handle>:
 8014136:	7b82      	ldrb	r2, [r0, #14]
 8014138:	7dc3      	ldrb	r3, [r0, #23]
 801413a:	2a45      	cmp	r2, #69	; 0x45
 801413c:	d003      	beq.n	8014146 <ip_handle+0x10>
 801413e:	2b02      	cmp	r3, #2
 8014140:	d111      	bne.n	8014166 <ip_handle+0x30>
 8014142:	f7ff beef 	b.w	8013f24 <igmp_handle>
 8014146:	2b06      	cmp	r3, #6
 8014148:	d00b      	beq.n	8014162 <ip_handle+0x2c>
 801414a:	d804      	bhi.n	8014156 <ip_handle+0x20>
 801414c:	2b01      	cmp	r3, #1
 801414e:	d006      	beq.n	801415e <ip_handle+0x28>
 8014150:	2b02      	cmp	r3, #2
 8014152:	d0f6      	beq.n	8014142 <ip_handle+0xc>
 8014154:	4770      	bx	lr
 8014156:	2b11      	cmp	r3, #17
 8014158:	d105      	bne.n	8014166 <ip_handle+0x30>
 801415a:	f7fd bf31 	b.w	8011fc0 <udp_handle>
 801415e:	f000 b82b 	b.w	80141b8 <icmp_handle>
 8014162:	f7fd bc7d 	b.w	8011a60 <tcp_handle>
 8014166:	4770      	bx	lr

08014168 <net_chksum>:
 8014168:	2300      	movs	r3, #0
 801416a:	f021 0201 	bic.w	r2, r1, #1
 801416e:	b530      	push	{r4, r5, lr}
 8014170:	4402      	add	r2, r0
 8014172:	084c      	lsrs	r4, r1, #1
 8014174:	4290      	cmp	r0, r2
 8014176:	d10e      	bne.n	8014196 <net_chksum+0x2e>
 8014178:	f06f 0201 	mvn.w	r2, #1
 801417c:	fb02 1104 	mla	r1, r2, r4, r1
 8014180:	b121      	cbz	r1, 801418c <net_chksum+0x24>
 8014182:	7802      	ldrb	r2, [r0, #0]
 8014184:	0212      	lsls	r2, r2, #8
 8014186:	ba52      	rev16	r2, r2
 8014188:	b292      	uxth	r2, r2
 801418a:	4413      	add	r3, r2
 801418c:	0c1a      	lsrs	r2, r3, #16
 801418e:	d106      	bne.n	801419e <net_chksum+0x36>
 8014190:	43d8      	mvns	r0, r3
 8014192:	b280      	uxth	r0, r0
 8014194:	bd30      	pop	{r4, r5, pc}
 8014196:	f830 5b02 	ldrh.w	r5, [r0], #2
 801419a:	442b      	add	r3, r5
 801419c:	e7ea      	b.n	8014174 <net_chksum+0xc>
 801419e:	b29b      	uxth	r3, r3
 80141a0:	e7f3      	b.n	801418a <net_chksum+0x22>

080141a2 <memcpy.isra.0>:
 80141a2:	3801      	subs	r0, #1
 80141a4:	440a      	add	r2, r1
 80141a6:	4291      	cmp	r1, r2
 80141a8:	d100      	bne.n	80141ac <memcpy.isra.0+0xa>
 80141aa:	4770      	bx	lr
 80141ac:	f811 3b01 	ldrb.w	r3, [r1], #1
 80141b0:	f800 3f01 	strb.w	r3, [r0, #1]!
 80141b4:	e7f7      	b.n	80141a6 <memcpy.isra.0+0x4>
	...

080141b8 <icmp_handle>:
 80141b8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80141ba:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 80141be:	4604      	mov	r4, r0
 80141c0:	2b08      	cmp	r3, #8
 80141c2:	d13e      	bne.n	8014242 <icmp_handle+0x8a>
 80141c4:	f890 5023 	ldrb.w	r5, [r0, #35]	; 0x23
 80141c8:	2d00      	cmp	r5, #0
 80141ca:	d13a      	bne.n	8014242 <icmp_handle+0x8a>
 80141cc:	1d86      	adds	r6, r0, #6
 80141ce:	4631      	mov	r1, r6
 80141d0:	2206      	movs	r2, #6
 80141d2:	f7ff ffe6 	bl	80141a2 <memcpy.isra.0>
 80141d6:	4630      	mov	r0, r6
 80141d8:	2206      	movs	r2, #6
 80141da:	491b      	ldr	r1, [pc, #108]	; (8014248 <icmp_handle+0x90>)
 80141dc:	f7ff ffe1 	bl	80141a2 <memcpy.isra.0>
 80141e0:	8a63      	ldrh	r3, [r4, #18]
 80141e2:	f104 061a 	add.w	r6, r4, #26
 80141e6:	43db      	mvns	r3, r3
 80141e8:	4631      	mov	r1, r6
 80141ea:	2204      	movs	r2, #4
 80141ec:	8263      	strh	r3, [r4, #18]
 80141ee:	f104 001e 	add.w	r0, r4, #30
 80141f2:	f7ff ffd6 	bl	80141a2 <memcpy.isra.0>
 80141f6:	2204      	movs	r2, #4
 80141f8:	4b14      	ldr	r3, [pc, #80]	; (801424c <icmp_handle+0x94>)
 80141fa:	eb0d 0102 	add.w	r1, sp, r2
 80141fe:	681b      	ldr	r3, [r3, #0]
 8014200:	4630      	mov	r0, r6
 8014202:	f104 060e 	add.w	r6, r4, #14
 8014206:	9301      	str	r3, [sp, #4]
 8014208:	f7ff ffcb 	bl	80141a2 <memcpy.isra.0>
 801420c:	2114      	movs	r1, #20
 801420e:	4630      	mov	r0, r6
 8014210:	7625      	strb	r5, [r4, #24]
 8014212:	7665      	strb	r5, [r4, #25]
 8014214:	f7ff ffa8 	bl	8014168 <net_chksum>
 8014218:	8a21      	ldrh	r1, [r4, #16]
 801421a:	8320      	strh	r0, [r4, #24]
 801421c:	ba49      	rev16	r1, r1
 801421e:	b289      	uxth	r1, r1
 8014220:	4630      	mov	r0, r6
 8014222:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8014226:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 801422a:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 801422e:	f7ff ff9b 	bl	8014168 <net_chksum>
 8014232:	8a21      	ldrh	r1, [r4, #16]
 8014234:	84a0      	strh	r0, [r4, #36]	; 0x24
 8014236:	ba49      	rev16	r1, r1
 8014238:	b289      	uxth	r1, r1
 801423a:	4620      	mov	r0, r4
 801423c:	310e      	adds	r1, #14
 801423e:	f002 fdaf 	bl	8016da0 <emac_eth_send>
 8014242:	b002      	add	sp, #8
 8014244:	bd70      	pop	{r4, r5, r6, pc}
 8014246:	bf00      	nop
 8014248:	2000be00 	andcs	fp, r0, r0, lsl #28
 801424c:	2000bdf4 	strdcs	fp, [r0], -r4

08014250 <Display::Write(unsigned char, char const*) [clone .isra.0]>:
 8014250:	b430      	push	{r4, r5}
 8014252:	b168      	cbz	r0, 8014270 <Display::Write(unsigned char, char const*) [clone .isra.0]+0x20>
 8014254:	2300      	movs	r3, #0
 8014256:	7905      	ldrb	r5, [r0, #4]
 8014258:	5cd4      	ldrb	r4, [r2, r3]
 801425a:	b11c      	cbz	r4, 8014264 <Display::Write(unsigned char, char const*) [clone .isra.0]+0x14>
 801425c:	1c5c      	adds	r4, r3, #1
 801425e:	429d      	cmp	r5, r3
 8014260:	4623      	mov	r3, r4
 8014262:	dcf9      	bgt.n	8014258 <Display::Write(unsigned char, char const*) [clone .isra.0]+0x8>
 8014264:	6804      	ldr	r4, [r0, #0]
 8014266:	b2db      	uxtb	r3, r3
 8014268:	69e4      	ldr	r4, [r4, #28]
 801426a:	46a4      	mov	ip, r4
 801426c:	bc30      	pop	{r4, r5}
 801426e:	4760      	bx	ip
 8014270:	bc30      	pop	{r4, r5}
 8014272:	4770      	bx	lr

08014274 <Display::ClearLine(unsigned char) [clone .isra.0]>:
 8014274:	b110      	cbz	r0, 801427c <Display::ClearLine(unsigned char) [clone .isra.0]+0x8>
 8014276:	6803      	ldr	r3, [r0, #0]
 8014278:	691b      	ldr	r3, [r3, #16]
 801427a:	4718      	bx	r3
 801427c:	4770      	bx	lr

0801427e <Display::Status(Display7SegmentMessage)>:
 801427e:	7c43      	ldrb	r3, [r0, #17]
 8014280:	b513      	push	{r0, r1, r4, lr}
 8014282:	4604      	mov	r4, r0
 8014284:	b19b      	cbz	r3, 80142ae <Display::Status(Display7SegmentMessage)+0x30>
 8014286:	43c9      	mvns	r1, r1
 8014288:	2312      	movs	r3, #18
 801428a:	7a00      	ldrb	r0, [r0, #8]
 801428c:	f88d 3004 	strb.w	r3, [sp, #4]
 8014290:	f3c1 2307 	ubfx	r3, r1, #8, #8
 8014294:	f88d 1006 	strb.w	r1, [sp, #6]
 8014298:	f88d 3005 	strb.w	r3, [sp, #5]
 801429c:	f002 fe18 	bl	8016ed0 <gd32_i2c_set_address(unsigned char)>
 80142a0:	68e0      	ldr	r0, [r4, #12]
 80142a2:	f002 fe0d 	bl	8016ec0 <gd32_i2c_set_baudrate(unsigned int)>
 80142a6:	2103      	movs	r1, #3
 80142a8:	a801      	add	r0, sp, #4
 80142aa:	f002 fe17 	bl	8016edc <gd32_i2c_write(char const*, unsigned int)>
 80142ae:	b002      	add	sp, #8
 80142b0:	bd10      	pop	{r4, pc}
	...

080142b4 <DisplayUdf::DisplayUdf()>:
 80142b4:	b510      	push	{r4, lr}
 80142b6:	4604      	mov	r4, r0
 80142b8:	f000 fff4 	bl	80152a4 <Display::Display()>
 80142bc:	2202      	movs	r2, #2
 80142be:	2300      	movs	r3, #0
 80142c0:	e9c4 2314 	strd	r2, r3, [r4, #80]	; 0x50
 80142c4:	4b05      	ldr	r3, [pc, #20]	; (80142dc <DisplayUdf::DisplayUdf()+0x28>)
 80142c6:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 80142ca:	601c      	str	r4, [r3, #0]
 80142cc:	2301      	movs	r3, #1
 80142ce:	f802 3b01 	strb.w	r3, [r2], #1
 80142d2:	3301      	adds	r3, #1
 80142d4:	2b15      	cmp	r3, #21
 80142d6:	d1fa      	bne.n	80142ce <DisplayUdf::DisplayUdf()+0x1a>
 80142d8:	4620      	mov	r0, r4
 80142da:	bd10      	pop	{r4, pc}
 80142dc:	20013cec 	andcs	r3, r1, ip, ror #25

080142e0 <DisplayUdf::SetTitle(char const*, ...)>:
 80142e0:	b40e      	push	{r1, r2, r3}
 80142e2:	b517      	push	{r0, r1, r2, r4, lr}
 80142e4:	ab05      	add	r3, sp, #20
 80142e6:	f853 2b04 	ldr.w	r2, [r3], #4
 80142ea:	4604      	mov	r4, r0
 80142ec:	211f      	movs	r1, #31
 80142ee:	301c      	adds	r0, #28
 80142f0:	9301      	str	r3, [sp, #4]
 80142f2:	f7f4 fe95 	bl	8009020 <vsnprintf>
 80142f6:	2300      	movs	r3, #0
 80142f8:	4404      	add	r4, r0
 80142fa:	7723      	strb	r3, [r4, #28]
 80142fc:	b003      	add	sp, #12
 80142fe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014302:	b003      	add	sp, #12
 8014304:	4770      	bx	lr
	...

08014308 <DisplayUdf::ShowEmacStart()>:
 8014308:	b510      	push	{r4, lr}
 801430a:	4604      	mov	r4, r0
 801430c:	f890 103e 	ldrb.w	r1, [r0, #62]	; 0x3e
 8014310:	6980      	ldr	r0, [r0, #24]
 8014312:	f7ff ffaf 	bl	8014274 <Display::ClearLine(unsigned char) [clone .isra.0]>
 8014316:	4620      	mov	r0, r4
 8014318:	4a02      	ldr	r2, [pc, #8]	; (8014324 <DisplayUdf::ShowEmacStart()+0x1c>)
 801431a:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 801431e:	f7f3 ff39 	bl	8008194 <Display::Printf(unsigned char, char const*, ...)>
 8014322:	bd10      	pop	{r4, pc}
 8014324:	08019fe9 	stmdaeq	r1, {r0, r3, r5, r6, r7, r8, r9, sl, fp, ip, pc}

08014328 <DisplayUdf::ShowIpAddress()>:
 8014328:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801432c:	4604      	mov	r4, r0
 801432e:	f890 103e 	ldrb.w	r1, [r0, #62]	; 0x3e
 8014332:	b086      	sub	sp, #24
 8014334:	6980      	ldr	r0, [r0, #24]
 8014336:	f7ff ff9d 	bl	8014274 <Display::ClearLine(unsigned char) [clone .isra.0]>
 801433a:	4b13      	ldr	r3, [pc, #76]	; (8014388 <DisplayUdf::ShowIpAddress()+0x60>)
 801433c:	f894 703e 	ldrb.w	r7, [r4, #62]	; 0x3e
 8014340:	681d      	ldr	r5, [r3, #0]
 8014342:	69a8      	ldr	r0, [r5, #24]
 8014344:	692e      	ldr	r6, [r5, #16]
 8014346:	f7f3 fdb9 	bl	8007ebc <__popcountsi2>
 801434a:	78eb      	ldrb	r3, [r5, #3]
 801434c:	fa5f f886 	uxtb.w	r8, r6
 8014350:	f3c6 2907 	ubfx	r9, r6, #8, #8
 8014354:	f3c6 4a07 	ubfx	sl, r6, #16, #8
 8014358:	0e36      	lsrs	r6, r6, #24
 801435a:	b99b      	cbnz	r3, 8014384 <DisplayUdf::ShowIpAddress()+0x5c>
 801435c:	786b      	ldrb	r3, [r5, #1]
 801435e:	2b00      	cmp	r3, #0
 8014360:	bf14      	ite	ne
 8014362:	2244      	movne	r2, #68	; 0x44
 8014364:	2253      	moveq	r2, #83	; 0x53
 8014366:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801436a:	4643      	mov	r3, r8
 801436c:	4639      	mov	r1, r7
 801436e:	4620      	mov	r0, r4
 8014370:	e9cd a601 	strd	sl, r6, [sp, #4]
 8014374:	4a05      	ldr	r2, [pc, #20]	; (801438c <DisplayUdf::ShowIpAddress()+0x64>)
 8014376:	f8cd 9000 	str.w	r9, [sp]
 801437a:	f7f3 ff0b 	bl	8008194 <Display::Printf(unsigned char, char const*, ...)>
 801437e:	b006      	add	sp, #24
 8014380:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8014384:	225a      	movs	r2, #90	; 0x5a
 8014386:	e7ee      	b.n	8014366 <DisplayUdf::ShowIpAddress()+0x3e>
 8014388:	200136bc 			; <UNDEFINED> instruction: 0x200136bc
 801438c:	08019ff8 	stmdaeq	r1, {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}

08014390 <DisplayUdf::ShowNetmask()>:
 8014390:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8014392:	4604      	mov	r4, r0
 8014394:	4b0b      	ldr	r3, [pc, #44]	; (80143c4 <DisplayUdf::ShowNetmask()+0x34>)
 8014396:	681b      	ldr	r3, [r3, #0]
 8014398:	699b      	ldr	r3, [r3, #24]
 801439a:	0e1a      	lsrs	r2, r3, #24
 801439c:	9202      	str	r2, [sp, #8]
 801439e:	f3c3 4207 	ubfx	r2, r3, #16, #8
 80143a2:	9201      	str	r2, [sp, #4]
 80143a4:	f3c3 2207 	ubfx	r2, r3, #8, #8
 80143a8:	9200      	str	r2, [sp, #0]
 80143aa:	f890 1048 	ldrb.w	r1, [r0, #72]	; 0x48
 80143ae:	4a06      	ldr	r2, [pc, #24]	; (80143c8 <DisplayUdf::ShowNetmask()+0x38>)
 80143b0:	b2db      	uxtb	r3, r3
 80143b2:	f7f3 feef 	bl	8008194 <Display::Printf(unsigned char, char const*, ...)>
 80143b6:	4620      	mov	r0, r4
 80143b8:	b004      	add	sp, #16
 80143ba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80143be:	f7ff bfb3 	b.w	8014328 <DisplayUdf::ShowIpAddress()>
 80143c2:	bf00      	nop
 80143c4:	200136bc 			; <UNDEFINED> instruction: 0x200136bc
 80143c8:	0801a00a 	stmdaeq	r1, {r1, r3, sp, pc}

080143cc <DisplayUdf::ShowGatewayIp()>:
 80143cc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80143ce:	4604      	mov	r4, r0
 80143d0:	f890 104e 	ldrb.w	r1, [r0, #78]	; 0x4e
 80143d4:	6980      	ldr	r0, [r0, #24]
 80143d6:	f7ff ff4d 	bl	8014274 <Display::ClearLine(unsigned char) [clone .isra.0]>
 80143da:	4b0a      	ldr	r3, [pc, #40]	; (8014404 <DisplayUdf::ShowGatewayIp()+0x38>)
 80143dc:	4620      	mov	r0, r4
 80143de:	681b      	ldr	r3, [r3, #0]
 80143e0:	f894 104e 	ldrb.w	r1, [r4, #78]	; 0x4e
 80143e4:	695b      	ldr	r3, [r3, #20]
 80143e6:	0e1a      	lsrs	r2, r3, #24
 80143e8:	9202      	str	r2, [sp, #8]
 80143ea:	f3c3 4207 	ubfx	r2, r3, #16, #8
 80143ee:	9201      	str	r2, [sp, #4]
 80143f0:	f3c3 2207 	ubfx	r2, r3, #8, #8
 80143f4:	9200      	str	r2, [sp, #0]
 80143f6:	b2db      	uxtb	r3, r3
 80143f8:	4a03      	ldr	r2, [pc, #12]	; (8014408 <DisplayUdf::ShowGatewayIp()+0x3c>)
 80143fa:	f7f3 fecb 	bl	8008194 <Display::Printf(unsigned char, char const*, ...)>
 80143fe:	b004      	add	sp, #16
 8014400:	bd10      	pop	{r4, pc}
 8014402:	bf00      	nop
 8014404:	200136bc 			; <UNDEFINED> instruction: 0x200136bc
 8014408:	0801a019 	stmdaeq	r1, {r0, r3, r4, sp, pc}

0801440c <DisplayUdf::ShowHostName()>:
 801440c:	b510      	push	{r4, lr}
 801440e:	4604      	mov	r4, r0
 8014410:	f890 1043 	ldrb.w	r1, [r0, #67]	; 0x43
 8014414:	6980      	ldr	r0, [r0, #24]
 8014416:	f7ff ff2d 	bl	8014274 <Display::ClearLine(unsigned char) [clone .isra.0]>
 801441a:	4b05      	ldr	r3, [pc, #20]	; (8014430 <DisplayUdf::ShowHostName()+0x24>)
 801441c:	f894 1043 	ldrb.w	r1, [r4, #67]	; 0x43
 8014420:	681a      	ldr	r2, [r3, #0]
 8014422:	69a0      	ldr	r0, [r4, #24]
 8014424:	321c      	adds	r2, #28
 8014426:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801442a:	f7ff bf11 	b.w	8014250 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 801442e:	bf00      	nop
 8014430:	200136bc 			; <UNDEFINED> instruction: 0x200136bc

08014434 <DisplayUdf::Show()>:
 8014434:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8014436:	4604      	mov	r4, r0
 8014438:	21ff      	movs	r1, #255	; 0xff
 801443a:	f100 033c 	add.w	r3, r0, #60	; 0x3c
 801443e:	f100 0250 	add.w	r2, r0, #80	; 0x50
 8014442:	f813 0b01 	ldrb.w	r0, [r3], #1
 8014446:	2806      	cmp	r0, #6
 8014448:	bf88      	it	hi
 801444a:	f803 1c01 	strbhi.w	r1, [r3, #-1]
 801444e:	429a      	cmp	r2, r3
 8014450:	d1f7      	bne.n	8014442 <DisplayUdf::Show()+0xe>
 8014452:	2501      	movs	r5, #1
 8014454:	4629      	mov	r1, r5
 8014456:	3501      	adds	r5, #1
 8014458:	69a0      	ldr	r0, [r4, #24]
 801445a:	b2ed      	uxtb	r5, r5
 801445c:	f7ff ff0a 	bl	8014274 <Display::ClearLine(unsigned char) [clone .isra.0]>
 8014460:	2d06      	cmp	r5, #6
 8014462:	d1f7      	bne.n	8014454 <DisplayUdf::Show()+0x20>
 8014464:	f894 103c 	ldrb.w	r1, [r4, #60]	; 0x3c
 8014468:	69a0      	ldr	r0, [r4, #24]
 801446a:	f104 021c 	add.w	r2, r4, #28
 801446e:	f7ff feef 	bl	8014250 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 8014472:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 8014476:	69a0      	ldr	r0, [r4, #24]
 8014478:	4a0d      	ldr	r2, [pc, #52]	; (80144b0 <DisplayUdf::Show()+0x7c>)
 801447a:	f7ff fee9 	bl	8014250 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 801447e:	4b0d      	ldr	r3, [pc, #52]	; (80144b4 <DisplayUdf::Show()+0x80>)
 8014480:	4a0d      	ldr	r2, [pc, #52]	; (80144b8 <DisplayUdf::Show()+0x84>)
 8014482:	f894 103f 	ldrb.w	r1, [r4, #63]	; 0x3f
 8014486:	9300      	str	r3, [sp, #0]
 8014488:	4620      	mov	r0, r4
 801448a:	2303      	movs	r3, #3
 801448c:	f7f3 fe82 	bl	8008194 <Display::Printf(unsigned char, char const*, ...)>
 8014490:	4620      	mov	r0, r4
 8014492:	f7ff ff49 	bl	8014328 <DisplayUdf::ShowIpAddress()>
 8014496:	4620      	mov	r0, r4
 8014498:	f7ff ff98 	bl	80143cc <DisplayUdf::ShowGatewayIp()>
 801449c:	4620      	mov	r0, r4
 801449e:	f7ff ff77 	bl	8014390 <DisplayUdf::ShowNetmask()>
 80144a2:	4620      	mov	r0, r4
 80144a4:	b003      	add	sp, #12
 80144a6:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80144aa:	f7ff bfaf 	b.w	801440c <DisplayUdf::ShowHostName()>
 80144ae:	bf00      	nop
 80144b0:	080186b2 	stmdaeq	r1, {r1, r4, r5, r7, r9, sl, pc}
 80144b4:	20013d84 	andcs	r3, r1, r4, lsl #27
 80144b8:	0801a028 	stmdaeq	r1, {r3, r5, sp, pc}

080144bc <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)>:
 80144bc:	3901      	subs	r1, #1
 80144be:	b510      	push	{r4, lr}
 80144c0:	4604      	mov	r4, r0
 80144c2:	2903      	cmp	r1, #3
 80144c4:	d814      	bhi.n	80144f0 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x34>
 80144c6:	e8df f001 	tbb	[pc, r1]
 80144ca:	281b1402 	ldmdacs	fp, {r1, sl, ip}
 80144ce:	4b14      	ldr	r3, [pc, #80]	; (8014520 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 80144d0:	f44f 41b6 	mov.w	r1, #23296	; 0x5b00
 80144d4:	6818      	ldr	r0, [r3, #0]
 80144d6:	f7ff fed2 	bl	801427e <Display::Status(Display7SegmentMessage)>
 80144da:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 80144de:	69a0      	ldr	r0, [r4, #24]
 80144e0:	f7ff fec8 	bl	8014274 <Display::ClearLine(unsigned char) [clone .isra.0]>
 80144e4:	4a0f      	ldr	r2, [pc, #60]	; (8014524 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x68>)
 80144e6:	4620      	mov	r0, r4
 80144e8:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 80144ec:	f7f3 fe52 	bl	8008194 <Display::Printf(unsigned char, char const*, ...)>
 80144f0:	bd10      	pop	{r4, pc}
 80144f2:	f248 0180 	movw	r1, #32896	; 0x8080
 80144f6:	4b0a      	ldr	r3, [pc, #40]	; (8014520 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 80144f8:	6818      	ldr	r0, [r3, #0]
 80144fa:	f7ff fec0 	bl	801427e <Display::Status(Display7SegmentMessage)>
 80144fe:	e7f7      	b.n	80144f0 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x34>
 8014500:	4b07      	ldr	r3, [pc, #28]	; (8014520 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 8014502:	f44f 41b6 	mov.w	r1, #23296	; 0x5b00
 8014506:	6818      	ldr	r0, [r3, #0]
 8014508:	f7ff feb9 	bl	801427e <Display::Status(Display7SegmentMessage)>
 801450c:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 8014510:	69a0      	ldr	r0, [r4, #24]
 8014512:	f7ff feaf 	bl	8014274 <Display::ClearLine(unsigned char) [clone .isra.0]>
 8014516:	4a04      	ldr	r2, [pc, #16]	; (8014528 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x6c>)
 8014518:	e7e5      	b.n	80144e6 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x2a>
 801451a:	f645 3179 	movw	r1, #23417	; 0x5b79
 801451e:	e7ea      	b.n	80144f6 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x3a>
 8014520:	20013cf4 	strdcs	r3, [r1], -r4
 8014524:	0801a037 	stmdaeq	r1, {r0, r1, r2, r4, r5, sp, pc}
 8014528:	0801a045 	stmdaeq	r1, {r0, r2, r6, sp, pc}

0801452c <DisplayUdf::ShowShutdown()>:
 801452c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014530:	4604      	mov	r4, r0
 8014532:	6980      	ldr	r0, [r0, #24]
 8014534:	b308      	cbz	r0, 801457a <DisplayUdf::ShowShutdown()+0x4e>
 8014536:	f890 8005 	ldrb.w	r8, [r0, #5]
 801453a:	6803      	ldr	r3, [r0, #0]
 801453c:	f108 35ff 	add.w	r5, r8, #4294967295	; 0xffffffff
 8014540:	b2ed      	uxtb	r5, r5
 8014542:	462a      	mov	r2, r5
 8014544:	2100      	movs	r1, #0
 8014546:	6a1b      	ldr	r3, [r3, #32]
 8014548:	7907      	ldrb	r7, [r0, #4]
 801454a:	2600      	movs	r6, #0
 801454c:	4798      	blx	r3
 801454e:	3f01      	subs	r7, #1
 8014550:	42b7      	cmp	r7, r6
 8014552:	69a0      	ldr	r0, [r4, #24]
 8014554:	d906      	bls.n	8014564 <DisplayUdf::ShowShutdown()+0x38>
 8014556:	b118      	cbz	r0, 8014560 <DisplayUdf::ShowShutdown()+0x34>
 8014558:	6803      	ldr	r3, [r0, #0]
 801455a:	2120      	movs	r1, #32
 801455c:	695b      	ldr	r3, [r3, #20]
 801455e:	4798      	blx	r3
 8014560:	3601      	adds	r6, #1
 8014562:	e7f5      	b.n	8014550 <DisplayUdf::ShowShutdown()+0x24>
 8014564:	b120      	cbz	r0, 8014570 <DisplayUdf::ShowShutdown()+0x44>
 8014566:	6803      	ldr	r3, [r0, #0]
 8014568:	462a      	mov	r2, r5
 801456a:	2100      	movs	r1, #0
 801456c:	6a1b      	ldr	r3, [r3, #32]
 801456e:	4798      	blx	r3
 8014570:	4641      	mov	r1, r8
 8014572:	4a05      	ldr	r2, [pc, #20]	; (8014588 <DisplayUdf::ShowShutdown()+0x5c>)
 8014574:	69a0      	ldr	r0, [r4, #24]
 8014576:	f7ff fe6b 	bl	8014250 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 801457a:	f44f 41de 	mov.w	r1, #28416	; 0x6f00
 801457e:	4620      	mov	r0, r4
 8014580:	f7ff fe7d 	bl	801427e <Display::Status(Display7SegmentMessage)>
 8014584:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014588:	0801a053 	stmdaeq	r1, {r0, r1, r4, r6, sp, pc}

0801458c <DisplayUdf::Set(unsigned char, displayudf::Labels)>:
 801458c:	1e4b      	subs	r3, r1, #1
 801458e:	2b05      	cmp	r3, #5
 8014590:	b530      	push	{r4, r5, lr}
 8014592:	d80f      	bhi.n	80145b4 <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x28>
 8014594:	2300      	movs	r3, #0
 8014596:	f100 043c 	add.w	r4, r0, #60	; 0x3c
 801459a:	f814 5b01 	ldrb.w	r5, [r4], #1
 801459e:	428d      	cmp	r5, r1
 80145a0:	d109      	bne.n	80145b6 <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x2a>
 80145a2:	1884      	adds	r4, r0, r2
 80145a4:	f894 403c 	ldrb.w	r4, [r4, #60]	; 0x3c
 80145a8:	4403      	add	r3, r0
 80145aa:	f883 403c 	strb.w	r4, [r3, #60]	; 0x3c
 80145ae:	4410      	add	r0, r2
 80145b0:	f880 103c 	strb.w	r1, [r0, #60]	; 0x3c
 80145b4:	bd30      	pop	{r4, r5, pc}
 80145b6:	3301      	adds	r3, #1
 80145b8:	2b14      	cmp	r3, #20
 80145ba:	d1ee      	bne.n	801459a <DisplayUdf::Set(unsigned char, displayudf::Labels)+0xe>
 80145bc:	e7f7      	b.n	80145ae <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x22>
	...

080145c0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>:
 80145c0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80145c2:	88c5      	ldrh	r5, [r0, #6]
 80145c4:	8886      	ldrh	r6, [r0, #4]
 80145c6:	42b5      	cmp	r5, r6
 80145c8:	d216      	bcs.n	80145f8 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x38>
 80145ca:	4604      	mov	r4, r0
 80145cc:	6800      	ldr	r0, [r0, #0]
 80145ce:	4428      	add	r0, r5
 80145d0:	1b75      	subs	r5, r6, r5
 80145d2:	7a26      	ldrb	r6, [r4, #8]
 80145d4:	b923      	cbnz	r3, 80145e0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x20>
 80145d6:	b926      	cbnz	r6, 80145e2 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x22>
 80145d8:	9200      	str	r2, [sp, #0]
 80145da:	460b      	mov	r3, r1
 80145dc:	4a09      	ldr	r2, [pc, #36]	; (8014604 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x44>)
 80145de:	e003      	b.n	80145e8 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 80145e0:	b166      	cbz	r6, 80145fc <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x3c>
 80145e2:	460b      	mov	r3, r1
 80145e4:	9200      	str	r2, [sp, #0]
 80145e6:	4a08      	ldr	r2, [pc, #32]	; (8014608 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x48>)
 80145e8:	4629      	mov	r1, r5
 80145ea:	f7f4 fd01 	bl	8008ff0 <snprintf>
 80145ee:	4285      	cmp	r5, r0
 80145f0:	bfa2      	ittt	ge
 80145f2:	88e3      	ldrhge	r3, [r4, #6]
 80145f4:	181b      	addge	r3, r3, r0
 80145f6:	80e3      	strhge	r3, [r4, #6]
 80145f8:	b002      	add	sp, #8
 80145fa:	bd70      	pop	{r4, r5, r6, pc}
 80145fc:	9200      	str	r2, [sp, #0]
 80145fe:	460b      	mov	r3, r1
 8014600:	4a02      	ldr	r2, [pc, #8]	; (801460c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x4c>)
 8014602:	e7f1      	b.n	80145e8 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 8014604:	08018359 	stmdaeq	r1, {r0, r3, r4, r6, r8, r9, pc}
 8014608:	08018350 	stmdaeq	r1, {r4, r6, r8, r9, pc}
 801460c:	0801835a 	stmdaeq	r1, {r1, r3, r4, r6, r8, r9, pc}

08014610 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>:
 8014610:	b510      	push	{r4, lr}
 8014612:	2220      	movs	r2, #32
 8014614:	4604      	mov	r4, r0
 8014616:	f840 1b04 	str.w	r1, [r0], #4
 801461a:	2100      	movs	r1, #0
 801461c:	f001 fb8a 	bl	8015d34 <memset>
 8014620:	f647 7305 	movw	r3, #32517	; 0x7f05
 8014624:	4620      	mov	r0, r4
 8014626:	84a3      	strh	r3, [r4, #36]	; 0x24
 8014628:	bd10      	pop	{r4, pc}

0801462a <DisplayUdfParams::Load()>:
 801462a:	b508      	push	{r3, lr}
 801462c:	2300      	movs	r3, #0
 801462e:	4601      	mov	r1, r0
 8014630:	6043      	str	r3, [r0, #4]
 8014632:	6800      	ldr	r0, [r0, #0]
 8014634:	b120      	cbz	r0, 8014640 <DisplayUdfParams::Load()+0x16>
 8014636:	6803      	ldr	r3, [r0, #0]
 8014638:	3104      	adds	r1, #4
 801463a:	68db      	ldr	r3, [r3, #12]
 801463c:	4798      	blx	r3
 801463e:	2001      	movs	r0, #1
 8014640:	bd08      	pop	{r3, pc}
	...

08014644 <DisplayUdfParams::Load(char const*, unsigned int)>:
 8014644:	6803      	ldr	r3, [r0, #0]
 8014646:	b1d3      	cbz	r3, 801467e <DisplayUdfParams::Load(char const*, unsigned int)+0x3a>
 8014648:	2300      	movs	r3, #0
 801464a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801464c:	460d      	mov	r5, r1
 801464e:	4616      	mov	r6, r2
 8014650:	4604      	mov	r4, r0
 8014652:	6043      	str	r3, [r0, #4]
 8014654:	4602      	mov	r2, r0
 8014656:	490a      	ldr	r1, [pc, #40]	; (8014680 <DisplayUdfParams::Load(char const*, unsigned int)+0x3c>)
 8014658:	4668      	mov	r0, sp
 801465a:	f000 fc05 	bl	8014e68 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 801465e:	4632      	mov	r2, r6
 8014660:	4629      	mov	r1, r5
 8014662:	4668      	mov	r0, sp
 8014664:	f000 fc04 	bl	8014e70 <ReadConfigFile::Read(char const*, unsigned int)>
 8014668:	4621      	mov	r1, r4
 801466a:	f851 0b04 	ldr.w	r0, [r1], #4
 801466e:	6803      	ldr	r3, [r0, #0]
 8014670:	689b      	ldr	r3, [r3, #8]
 8014672:	4798      	blx	r3
 8014674:	4668      	mov	r0, sp
 8014676:	f000 fbfa 	bl	8014e6e <ReadConfigFile::~ReadConfigFile()>
 801467a:	b002      	add	sp, #8
 801467c:	bd70      	pop	{r4, r5, r6, pc}
 801467e:	4770      	bx	lr
 8014680:	08014749 	stmdaeq	r1, {r0, r3, r6, r8, r9, sl, lr}

08014684 <DisplayUdfParams::callbackFunction(char const*)>:
 8014684:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8014686:	460e      	mov	r6, r1
 8014688:	4604      	mov	r4, r0
 801468a:	492b      	ldr	r1, [pc, #172]	; (8014738 <DisplayUdfParams::callbackFunction(char const*)+0xb4>)
 801468c:	4630      	mov	r0, r6
 801468e:	f10d 0207 	add.w	r2, sp, #7
 8014692:	f000 fd4f 	bl	8015134 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8014696:	b968      	cbnz	r0, 80146b4 <DisplayUdfParams::callbackFunction(char const*)+0x30>
 8014698:	f89d 2007 	ldrb.w	r2, [sp, #7]
 801469c:	6863      	ldr	r3, [r4, #4]
 801469e:	2a7f      	cmp	r2, #127	; 0x7f
 80146a0:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
 80146a4:	bf14      	ite	ne
 80146a6:	f043 5300 	orrne.w	r3, r3, #536870912	; 0x20000000
 80146aa:	f023 5300 	biceq.w	r3, r3, #536870912	; 0x20000000
 80146ae:	6063      	str	r3, [r4, #4]
 80146b0:	b003      	add	sp, #12
 80146b2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80146b4:	4630      	mov	r0, r6
 80146b6:	4921      	ldr	r1, [pc, #132]	; (801473c <DisplayUdfParams::callbackFunction(char const*)+0xb8>)
 80146b8:	f10d 0207 	add.w	r2, sp, #7
 80146bc:	f000 fd3a 	bl	8015134 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 80146c0:	b958      	cbnz	r0, 80146da <DisplayUdfParams::callbackFunction(char const*)+0x56>
 80146c2:	f89d 2007 	ldrb.w	r2, [sp, #7]
 80146c6:	6863      	ldr	r3, [r4, #4]
 80146c8:	2a05      	cmp	r2, #5
 80146ca:	f884 2024 	strb.w	r2, [r4, #36]	; 0x24
 80146ce:	bf14      	ite	ne
 80146d0:	f043 5380 	orrne.w	r3, r3, #268435456	; 0x10000000
 80146d4:	f023 5380 	biceq.w	r3, r3, #268435456	; 0x10000000
 80146d8:	e7e9      	b.n	80146ae <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 80146da:	4630      	mov	r0, r6
 80146dc:	4918      	ldr	r1, [pc, #96]	; (8014740 <DisplayUdfParams::callbackFunction(char const*)+0xbc>)
 80146de:	f10d 0207 	add.w	r2, sp, #7
 80146e2:	f000 fd27 	bl	8015134 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 80146e6:	b948      	cbnz	r0, 80146fc <DisplayUdfParams::callbackFunction(char const*)+0x78>
 80146e8:	f89d 2007 	ldrb.w	r2, [sp, #7]
 80146ec:	6863      	ldr	r3, [r4, #4]
 80146ee:	b112      	cbz	r2, 80146f6 <DisplayUdfParams::callbackFunction(char const*)+0x72>
 80146f0:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 80146f4:	e7db      	b.n	80146ae <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 80146f6:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 80146fa:	e7d8      	b.n	80146ae <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 80146fc:	2500      	movs	r5, #0
 80146fe:	4f11      	ldr	r7, [pc, #68]	; (8014744 <DisplayUdfParams::callbackFunction(char const*)+0xc0>)
 8014700:	4630      	mov	r0, r6
 8014702:	f857 1b04 	ldr.w	r1, [r7], #4
 8014706:	f10d 0207 	add.w	r2, sp, #7
 801470a:	f000 fd13 	bl	8015134 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 801470e:	b978      	cbnz	r0, 8014730 <DisplayUdfParams::callbackFunction(char const*)+0xac>
 8014710:	2301      	movs	r3, #1
 8014712:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8014716:	6862      	ldr	r2, [r4, #4]
 8014718:	1e4e      	subs	r6, r1, #1
 801471a:	2e05      	cmp	r6, #5
 801471c:	fa03 f305 	lsl.w	r3, r3, r5
 8014720:	4425      	add	r5, r4
 8014722:	bf99      	ittee	ls
 8014724:	7229      	strbls	r1, [r5, #8]
 8014726:	4313      	orrls	r3, r2
 8014728:	7228      	strbhi	r0, [r5, #8]
 801472a:	ea22 0303 	bichi.w	r3, r2, r3
 801472e:	e7be      	b.n	80146ae <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 8014730:	3501      	adds	r5, #1
 8014732:	2d14      	cmp	r5, #20
 8014734:	d1e4      	bne.n	8014700 <DisplayUdfParams::callbackFunction(char const*)+0x7c>
 8014736:	e7bb      	b.n	80146b0 <DisplayUdfParams::callbackFunction(char const*)+0x2c>
 8014738:	0801a112 	stmdaeq	r1, {r1, r4, r8, sp, pc}
 801473c:	0801a0da 	stmdaeq	r1, {r1, r3, r4, r6, r7, sp, pc}
 8014740:	0801a0e8 	stmdaeq	r1, {r3, r5, r6, r7, sp, pc}
 8014744:	0801a064 	stmdaeq	r1, {r2, r5, r6, sp, pc}

08014748 <DisplayUdfParams::staticCallbackFunction(void*, char const*)>:
 8014748:	f7ff bf9c 	b.w	8014684 <DisplayUdfParams::callbackFunction(char const*)>

0801474c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)>:
 801474c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014750:	4604      	mov	r4, r0
 8014752:	4615      	mov	r5, r2
 8014754:	461e      	mov	r6, r3
 8014756:	b086      	sub	sp, #24
 8014758:	3004      	adds	r0, #4
 801475a:	b379      	cbz	r1, 80147bc <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x70>
 801475c:	2222      	movs	r2, #34	; 0x22
 801475e:	f001 fad2 	bl	8015d06 <memmove>
 8014762:	462a      	mov	r2, r5
 8014764:	4633      	mov	r3, r6
 8014766:	493d      	ldr	r1, [pc, #244]	; (801485c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x110>)
 8014768:	a803      	add	r0, sp, #12
 801476a:	f000 faad 	bl	8014cc8 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 801476e:	6863      	ldr	r3, [r4, #4]
 8014770:	f894 2025 	ldrb.w	r2, [r4, #37]	; 0x25
 8014774:	493a      	ldr	r1, [pc, #232]	; (8014860 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x114>)
 8014776:	f3c3 7340 	ubfx	r3, r3, #29, #1
 801477a:	a803      	add	r0, sp, #12
 801477c:	f7ff ff20 	bl	80145c0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 8014780:	6863      	ldr	r3, [r4, #4]
 8014782:	4938      	ldr	r1, [pc, #224]	; (8014864 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x118>)
 8014784:	f894 2024 	ldrb.w	r2, [r4, #36]	; 0x24
 8014788:	f3c3 7300 	ubfx	r3, r3, #28, #1
 801478c:	a803      	add	r0, sp, #12
 801478e:	f7ff ff17 	bl	80145c0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 8014792:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 8014796:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 801479a:	42a9      	cmp	r1, r5
 801479c:	d227      	bcs.n	80147ee <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xa2>
 801479e:	6863      	ldr	r3, [r4, #4]
 80147a0:	9803      	ldr	r0, [sp, #12]
 80147a2:	f013 4380 	ands.w	r3, r3, #1073741824	; 0x40000000
 80147a6:	f89d 2014 	ldrb.w	r2, [sp, #20]
 80147aa:	4408      	add	r0, r1
 80147ac:	eba5 0501 	sub.w	r5, r5, r1
 80147b0:	d10b      	bne.n	80147ca <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x7e>
 80147b2:	b962      	cbnz	r2, 80147ce <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x82>
 80147b4:	9200      	str	r2, [sp, #0]
 80147b6:	4b2c      	ldr	r3, [pc, #176]	; (8014868 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>)
 80147b8:	4a2c      	ldr	r2, [pc, #176]	; (801486c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x120>)
 80147ba:	e00e      	b.n	80147da <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x8e>
 80147bc:	6823      	ldr	r3, [r4, #0]
 80147be:	4601      	mov	r1, r0
 80147c0:	681a      	ldr	r2, [r3, #0]
 80147c2:	4618      	mov	r0, r3
 80147c4:	68d2      	ldr	r2, [r2, #12]
 80147c6:	4790      	blx	r2
 80147c8:	e7cb      	b.n	8014762 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x16>
 80147ca:	2a00      	cmp	r2, #0
 80147cc:	d041      	beq.n	8014852 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x106>
 80147ce:	3b00      	subs	r3, #0
 80147d0:	bf18      	it	ne
 80147d2:	2301      	movne	r3, #1
 80147d4:	4a26      	ldr	r2, [pc, #152]	; (8014870 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x124>)
 80147d6:	9300      	str	r3, [sp, #0]
 80147d8:	4b23      	ldr	r3, [pc, #140]	; (8014868 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>)
 80147da:	4629      	mov	r1, r5
 80147dc:	f7f4 fc08 	bl	8008ff0 <snprintf>
 80147e0:	4285      	cmp	r5, r0
 80147e2:	bfa2      	ittt	ge
 80147e4:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 80147e8:	181b      	addge	r3, r3, r0
 80147ea:	f8ad 3012 	strhge.w	r3, [sp, #18]
 80147ee:	2500      	movs	r5, #0
 80147f0:	2701      	movs	r7, #1
 80147f2:	4e20      	ldr	r6, [pc, #128]	; (8014874 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x128>)
 80147f4:	f104 0808 	add.w	r8, r4, #8
 80147f8:	f856 1b04 	ldr.w	r1, [r6], #4
 80147fc:	780b      	ldrb	r3, [r1, #0]
 80147fe:	b15b      	cbz	r3, 8014818 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xcc>
 8014800:	6862      	ldr	r2, [r4, #4]
 8014802:	fa07 f305 	lsl.w	r3, r7, r5
 8014806:	4393      	bics	r3, r2
 8014808:	bf0c      	ite	eq
 801480a:	2301      	moveq	r3, #1
 801480c:	2300      	movne	r3, #0
 801480e:	f818 2005 	ldrb.w	r2, [r8, r5]
 8014812:	a803      	add	r0, sp, #12
 8014814:	f7ff fed4 	bl	80145c0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 8014818:	3501      	adds	r5, #1
 801481a:	2d14      	cmp	r5, #20
 801481c:	d1ec      	bne.n	80147f8 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xac>
 801481e:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8014822:	b17b      	cbz	r3, 8014844 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xf8>
 8014824:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8014828:	9b03      	ldr	r3, [sp, #12]
 801482a:	4413      	add	r3, r2
 801482c:	227d      	movs	r2, #125	; 0x7d
 801482e:	f803 2c01 	strb.w	r2, [r3, #-1]
 8014832:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8014836:	9903      	ldr	r1, [sp, #12]
 8014838:	54ca      	strb	r2, [r1, r3]
 801483a:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801483e:	3301      	adds	r3, #1
 8014840:	f8ad 3012 	strh.w	r3, [sp, #18]
 8014844:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8014848:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801484a:	601a      	str	r2, [r3, #0]
 801484c:	b006      	add	sp, #24
 801484e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014852:	2301      	movs	r3, #1
 8014854:	4a08      	ldr	r2, [pc, #32]	; (8014878 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x12c>)
 8014856:	9300      	str	r3, [sp, #0]
 8014858:	4b03      	ldr	r3, [pc, #12]	; (8014868 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>)
 801485a:	e7be      	b.n	80147da <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x8e>
 801485c:	0801a106 	stmdaeq	r1, {r1, r2, r8, sp, pc}
 8014860:	0801a112 	stmdaeq	r1, {r1, r4, r8, sp, pc}
 8014864:	0801a0da 	stmdaeq	r1, {r1, r3, r4, r6, r7, sp, pc}
 8014868:	0801a0e8 	stmdaeq	r1, {r3, r5, r6, r7, sp, pc}
 801486c:	08018359 	stmdaeq	r1, {r0, r3, r4, r6, r8, r9, pc}
 8014870:	08018350 	stmdaeq	r1, {r4, r6, r8, r9, pc}
 8014874:	0801a064 	stmdaeq	r1, {r2, r5, r6, sp, pc}
 8014878:	0801835a 	stmdaeq	r1, {r1, r3, r4, r6, r8, r9, pc}

0801487c <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)>:
 801487c:	b513      	push	{r0, r1, r4, lr}
 801487e:	6804      	ldr	r4, [r0, #0]
 8014880:	b914      	cbnz	r4, 8014888 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)+0xc>
 8014882:	601c      	str	r4, [r3, #0]
 8014884:	b002      	add	sp, #8
 8014886:	bd10      	pop	{r4, pc}
 8014888:	9300      	str	r3, [sp, #0]
 801488a:	4613      	mov	r3, r2
 801488c:	460a      	mov	r2, r1
 801488e:	2100      	movs	r1, #0
 8014890:	f7ff ff5c 	bl	801474c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)>
 8014894:	e7f6      	b.n	8014884 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)+0x8>

08014896 <DisplayUdfParams::Set(DisplayUdf*)>:
 8014896:	6843      	ldr	r3, [r0, #4]
 8014898:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801489c:	009a      	lsls	r2, r3, #2
 801489e:	4604      	mov	r4, r0
 80148a0:	460e      	mov	r6, r1
 80148a2:	d506      	bpl.n	80148b2 <DisplayUdfParams::Set(DisplayUdf*)+0x1c>
 80148a4:	6988      	ldr	r0, [r1, #24]
 80148a6:	b120      	cbz	r0, 80148b2 <DisplayUdfParams::Set(DisplayUdf*)+0x1c>
 80148a8:	6803      	ldr	r3, [r0, #0]
 80148aa:	f894 1025 	ldrb.w	r1, [r4, #37]	; 0x25
 80148ae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80148b0:	4798      	blx	r3
 80148b2:	6863      	ldr	r3, [r4, #4]
 80148b4:	69b0      	ldr	r0, [r6, #24]
 80148b6:	00db      	lsls	r3, r3, #3
 80148b8:	bf41      	itttt	mi
 80148ba:	f64e 2260 	movwmi	r2, #60000	; 0xea60
 80148be:	f894 3024 	ldrbmi.w	r3, [r4, #36]	; 0x24
 80148c2:	4353      	mulmi	r3, r2
 80148c4:	6173      	strmi	r3, [r6, #20]
 80148c6:	6861      	ldr	r1, [r4, #4]
 80148c8:	f3c1 7180 	ubfx	r1, r1, #30, #1
 80148cc:	b110      	cbz	r0, 80148d4 <DisplayUdfParams::Set(DisplayUdf*)+0x3e>
 80148ce:	6803      	ldr	r3, [r0, #0]
 80148d0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80148d2:	4798      	blx	r3
 80148d4:	2500      	movs	r5, #0
 80148d6:	2701      	movs	r7, #1
 80148d8:	f104 0808 	add.w	r8, r4, #8
 80148dc:	6862      	ldr	r2, [r4, #4]
 80148de:	fa07 f305 	lsl.w	r3, r7, r5
 80148e2:	4393      	bics	r3, r2
 80148e4:	d105      	bne.n	80148f2 <DisplayUdfParams::Set(DisplayUdf*)+0x5c>
 80148e6:	462a      	mov	r2, r5
 80148e8:	4630      	mov	r0, r6
 80148ea:	f818 1005 	ldrb.w	r1, [r8, r5]
 80148ee:	f7ff fe4d 	bl	801458c <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 80148f2:	3501      	adds	r5, #1
 80148f4:	2d14      	cmp	r5, #20
 80148f6:	d1f1      	bne.n	80148dc <DisplayUdfParams::Set(DisplayUdf*)+0x46>
 80148f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080148fc <DisplayUdfParams::Dump()>:
 80148fc:	4770      	bx	lr

080148fe <DisplayUdf::ShowNodeName(ArtNetNode*)>:
 80148fe:	b570      	push	{r4, r5, r6, lr}
 8014900:	4605      	mov	r5, r0
 8014902:	6980      	ldr	r0, [r0, #24]
 8014904:	460c      	mov	r4, r1
 8014906:	b120      	cbz	r0, 8014912 <DisplayUdf::ShowNodeName(ArtNetNode*)+0x14>
 8014908:	6803      	ldr	r3, [r0, #0]
 801490a:	f895 1042 	ldrb.w	r1, [r5, #66]	; 0x42
 801490e:	691b      	ldr	r3, [r3, #16]
 8014910:	4798      	blx	r3
 8014912:	69a8      	ldr	r0, [r5, #24]
 8014914:	f104 0244 	add.w	r2, r4, #68	; 0x44
 8014918:	b190      	cbz	r0, 8014940 <DisplayUdf::ShowNodeName(ArtNetNode*)+0x42>
 801491a:	2300      	movs	r3, #0
 801491c:	7906      	ldrb	r6, [r0, #4]
 801491e:	3443      	adds	r4, #67	; 0x43
 8014920:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8014924:	b119      	cbz	r1, 801492e <DisplayUdf::ShowNodeName(ArtNetNode*)+0x30>
 8014926:	1c59      	adds	r1, r3, #1
 8014928:	429e      	cmp	r6, r3
 801492a:	460b      	mov	r3, r1
 801492c:	dcf8      	bgt.n	8014920 <DisplayUdf::ShowNodeName(ArtNetNode*)+0x22>
 801492e:	6801      	ldr	r1, [r0, #0]
 8014930:	b2db      	uxtb	r3, r3
 8014932:	69cc      	ldr	r4, [r1, #28]
 8014934:	f895 1042 	ldrb.w	r1, [r5, #66]	; 0x42
 8014938:	46a4      	mov	ip, r4
 801493a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801493e:	4760      	bx	ip
 8014940:	bd70      	pop	{r4, r5, r6, pc}
	...

08014944 <DisplayUdf::ShowUniverse(ArtNetNode*)>:
 8014944:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014948:	460c      	mov	r4, r1
 801494a:	b08b      	sub	sp, #44	; 0x2c
 801494c:	4606      	mov	r6, r0
 801494e:	2301      	movs	r3, #1
 8014950:	2100      	movs	r1, #0
 8014952:	4620      	mov	r0, r4
 8014954:	f10d 0227 	add.w	r2, sp, #39	; 0x27
 8014958:	f7f6 f9c0 	bl	800acdc <ArtNetNode::GetUniverseSwitch(unsigned int, unsigned char&, lightset::PortDir) const>
 801495c:	b350      	cbz	r0, 80149b4 <DisplayUdf::ShowUniverse(ArtNetNode*)+0x70>
 801495e:	2100      	movs	r1, #0
 8014960:	4620      	mov	r0, r4
 8014962:	f896 9040 	ldrb.w	r9, [r6, #64]	; 0x40
 8014966:	f7f6 f9d3 	bl	800ad10 <ArtNetNode::GetNetSwitch(unsigned int) const>
 801496a:	2100      	movs	r1, #0
 801496c:	4605      	mov	r5, r0
 801496e:	4620      	mov	r0, r4
 8014970:	f7f6 f9ca 	bl	800ad08 <ArtNetNode::GetSubnetSwitch(unsigned int) const>
 8014974:	2100      	movs	r1, #0
 8014976:	4607      	mov	r7, r0
 8014978:	4620      	mov	r0, r4
 801497a:	f89d a027 	ldrb.w	sl, [sp, #39]	; 0x27
 801497e:	f7f6 fb56 	bl	800b02e <ArtNetNode::GetMergeMode(unsigned int) const>
 8014982:	4a2d      	ldr	r2, [pc, #180]	; (8014a38 <DisplayUdf::ShowUniverse(ArtNetNode*)+0xf4>)
 8014984:	4b2d      	ldr	r3, [pc, #180]	; (8014a3c <DisplayUdf::ShowUniverse(ArtNetNode*)+0xf8>)
 8014986:	2100      	movs	r1, #0
 8014988:	2800      	cmp	r0, #0
 801498a:	bf0c      	ite	eq
 801498c:	4690      	moveq	r8, r2
 801498e:	4698      	movne	r8, r3
 8014990:	4620      	mov	r0, r4
 8014992:	f7f6 fb1b 	bl	800afcc <ArtNetNode::GetPortProtocol(unsigned int) const>
 8014996:	4a2a      	ldr	r2, [pc, #168]	; (8014a40 <DisplayUdf::ShowUniverse(ArtNetNode*)+0xfc>)
 8014998:	4b2a      	ldr	r3, [pc, #168]	; (8014a44 <DisplayUdf::ShowUniverse(ArtNetNode*)+0x100>)
 801499a:	4649      	mov	r1, r9
 801499c:	2800      	cmp	r0, #0
 801499e:	bf18      	it	ne
 80149a0:	4613      	movne	r3, r2
 80149a2:	e9cd 7a00 	strd	r7, sl, [sp]
 80149a6:	e9cd 8302 	strd	r8, r3, [sp, #8]
 80149aa:	4630      	mov	r0, r6
 80149ac:	462b      	mov	r3, r5
 80149ae:	4a26      	ldr	r2, [pc, #152]	; (8014a48 <DisplayUdf::ShowUniverse(ArtNetNode*)+0x104>)
 80149b0:	f7f3 fbf0 	bl	8008194 <Display::Printf(unsigned char, char const*, ...)>
 80149b4:	2500      	movs	r5, #0
 80149b6:	f8df a08c 	ldr.w	sl, [pc, #140]	; 8014a44 <DisplayUdf::ShowUniverse(ArtNetNode*)+0x100>
 80149ba:	4629      	mov	r1, r5
 80149bc:	2301      	movs	r3, #1
 80149be:	4620      	mov	r0, r4
 80149c0:	f10d 0227 	add.w	r2, sp, #39	; 0x27
 80149c4:	f7f6 f98a 	bl	800acdc <ArtNetNode::GetUniverseSwitch(unsigned int, unsigned char&, lightset::PortDir) const>
 80149c8:	46a9      	mov	r9, r5
 80149ca:	3501      	adds	r5, #1
 80149cc:	b378      	cbz	r0, 8014a2e <DisplayUdf::ShowUniverse(ArtNetNode*)+0xea>
 80149ce:	f106 0343 	add.w	r3, r6, #67	; 0x43
 80149d2:	2100      	movs	r1, #0
 80149d4:	4620      	mov	r0, r4
 80149d6:	f813 b005 	ldrb.w	fp, [r3, r5]
 80149da:	f7f6 f999 	bl	800ad10 <ArtNetNode::GetNetSwitch(unsigned int) const>
 80149de:	2100      	movs	r1, #0
 80149e0:	4607      	mov	r7, r0
 80149e2:	4620      	mov	r0, r4
 80149e4:	f7f6 f990 	bl	800ad08 <ArtNetNode::GetSubnetSwitch(unsigned int) const>
 80149e8:	f89d 3027 	ldrb.w	r3, [sp, #39]	; 0x27
 80149ec:	4680      	mov	r8, r0
 80149ee:	4649      	mov	r1, r9
 80149f0:	4620      	mov	r0, r4
 80149f2:	9307      	str	r3, [sp, #28]
 80149f4:	f7f6 fb1b 	bl	800b02e <ArtNetNode::GetMergeMode(unsigned int) const>
 80149f8:	4b10      	ldr	r3, [pc, #64]	; (8014a3c <DisplayUdf::ShowUniverse(ArtNetNode*)+0xf8>)
 80149fa:	4a0f      	ldr	r2, [pc, #60]	; (8014a38 <DisplayUdf::ShowUniverse(ArtNetNode*)+0xf4>)
 80149fc:	4649      	mov	r1, r9
 80149fe:	2800      	cmp	r0, #0
 8014a00:	bf18      	it	ne
 8014a02:	461a      	movne	r2, r3
 8014a04:	4620      	mov	r0, r4
 8014a06:	9206      	str	r2, [sp, #24]
 8014a08:	f7f6 fae0 	bl	800afcc <ArtNetNode::GetPortProtocol(unsigned int) const>
 8014a0c:	490c      	ldr	r1, [pc, #48]	; (8014a40 <DisplayUdf::ShowUniverse(ArtNetNode*)+0xfc>)
 8014a0e:	9a06      	ldr	r2, [sp, #24]
 8014a10:	2800      	cmp	r0, #0
 8014a12:	bf08      	it	eq
 8014a14:	4651      	moveq	r1, sl
 8014a16:	9b07      	ldr	r3, [sp, #28]
 8014a18:	9104      	str	r1, [sp, #16]
 8014a1a:	e9cd 8301 	strd	r8, r3, [sp, #4]
 8014a1e:	9203      	str	r2, [sp, #12]
 8014a20:	462b      	mov	r3, r5
 8014a22:	4659      	mov	r1, fp
 8014a24:	4630      	mov	r0, r6
 8014a26:	4a09      	ldr	r2, [pc, #36]	; (8014a4c <DisplayUdf::ShowUniverse(ArtNetNode*)+0x108>)
 8014a28:	9700      	str	r7, [sp, #0]
 8014a2a:	f7f3 fbb3 	bl	8008194 <Display::Printf(unsigned char, char const*, ...)>
 8014a2e:	2d04      	cmp	r5, #4
 8014a30:	d1c3      	bne.n	80149ba <DisplayUdf::ShowUniverse(ArtNetNode*)+0x76>
 8014a32:	b00b      	add	sp, #44	; 0x2c
 8014a34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014a38:	080191cb 	stmdaeq	r1, {r0, r1, r3, r6, r7, r8, ip, pc}
 8014a3c:	080191cf 	stmdaeq	r1, {r0, r1, r2, r3, r6, r7, r8, ip, pc}
 8014a40:	080191db 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, r8, ip, pc}
 8014a44:	0801a11c 	stmdaeq	r1, {r2, r3, r4, r8, sp, pc}
 8014a48:	0801a121 	stmdaeq	r1, {r0, r5, r8, sp, pc}
 8014a4c:	0801a135 	stmdaeq	r1, {r0, r2, r4, r5, r8, sp, pc}

08014a50 <DisplayUdf::ShowDestinationIp(ArtNetNode*)>:
 8014a50:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8014a54:	4606      	mov	r6, r0
 8014a56:	2541      	movs	r5, #65	; 0x41
 8014a58:	f8df 903c 	ldr.w	r9, [pc, #60]	; 8014a98 <DisplayUdf::ShowDestinationIp(ArtNetNode*)+0x48>
 8014a5c:	b085      	sub	sp, #20
 8014a5e:	f100 084a 	add.w	r8, r0, #74	; 0x4a
 8014a62:	f501 6780 	add.w	r7, r1, #1024	; 0x400
 8014a66:	012b      	lsls	r3, r5, #4
 8014a68:	58fc      	ldr	r4, [r7, r3]
 8014a6a:	464a      	mov	r2, r9
 8014a6c:	0e23      	lsrs	r3, r4, #24
 8014a6e:	9303      	str	r3, [sp, #12]
 8014a70:	f3c4 4307 	ubfx	r3, r4, #16, #8
 8014a74:	9302      	str	r3, [sp, #8]
 8014a76:	f3c4 2307 	ubfx	r3, r4, #8, #8
 8014a7a:	b2e4      	uxtb	r4, r4
 8014a7c:	9301      	str	r3, [sp, #4]
 8014a7e:	9400      	str	r4, [sp, #0]
 8014a80:	462b      	mov	r3, r5
 8014a82:	4630      	mov	r0, r6
 8014a84:	f818 1b01 	ldrb.w	r1, [r8], #1
 8014a88:	3501      	adds	r5, #1
 8014a8a:	f7f3 fb83 	bl	8008194 <Display::Printf(unsigned char, char const*, ...)>
 8014a8e:	2d45      	cmp	r5, #69	; 0x45
 8014a90:	d1e9      	bne.n	8014a66 <DisplayUdf::ShowDestinationIp(ArtNetNode*)+0x16>
 8014a92:	b005      	add	sp, #20
 8014a94:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8014a98:	0801a14b 	stmdaeq	r1, {r0, r1, r3, r6, r8, sp, pc}

08014a9c <DisplayUdf::Show(ArtNetNode*)>:
 8014a9c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8014a9e:	4604      	mov	r4, r0
 8014aa0:	460d      	mov	r5, r1
 8014aa2:	f7ff fcc7 	bl	8014434 <DisplayUdf::Show()>
 8014aa6:	4629      	mov	r1, r5
 8014aa8:	4620      	mov	r0, r4
 8014aaa:	f7ff ff28 	bl	80148fe <DisplayUdf::ShowNodeName(ArtNetNode*)>
 8014aae:	4629      	mov	r1, r5
 8014ab0:	4620      	mov	r0, r4
 8014ab2:	f7ff ff47 	bl	8014944 <DisplayUdf::ShowUniverse(ArtNetNode*)>
 8014ab6:	4629      	mov	r1, r5
 8014ab8:	4620      	mov	r0, r4
 8014aba:	f7ff ffc9 	bl	8014a50 <DisplayUdf::ShowDestinationIp(ArtNetNode*)>
 8014abe:	f895 26e2 	ldrb.w	r2, [r5, #1762]	; 0x6e2
 8014ac2:	f895 36e3 	ldrb.w	r3, [r5, #1763]	; 0x6e3
 8014ac6:	f894 1041 	ldrb.w	r1, [r4, #65]	; 0x41
 8014aca:	4413      	add	r3, r2
 8014acc:	4620      	mov	r0, r4
 8014ace:	4a0d      	ldr	r2, [pc, #52]	; (8014b04 <DisplayUdf::Show(ArtNetNode*)+0x68>)
 8014ad0:	f7f3 fb60 	bl	8008194 <Display::Printf(unsigned char, char const*, ...)>
 8014ad4:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8014ad6:	f894 104f 	ldrb.w	r1, [r4, #79]	; 0x4f
 8014ada:	2a02      	cmp	r2, #2
 8014adc:	d001      	beq.n	8014ae2 <DisplayUdf::Show(ArtNetNode*)+0x46>
 8014ade:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8014ae0:	b92b      	cbnz	r3, 8014aee <DisplayUdf::Show(ArtNetNode*)+0x52>
 8014ae2:	4620      	mov	r0, r4
 8014ae4:	4a08      	ldr	r2, [pc, #32]	; (8014b08 <DisplayUdf::Show(ArtNetNode*)+0x6c>)
 8014ae6:	f7f3 fb55 	bl	8008194 <Display::Printf(unsigned char, char const*, ...)>
 8014aea:	b003      	add	sp, #12
 8014aec:	bd30      	pop	{r4, r5, pc}
 8014aee:	4807      	ldr	r0, [pc, #28]	; (8014b0c <DisplayUdf::Show(ArtNetNode*)+0x70>)
 8014af0:	9300      	str	r3, [sp, #0]
 8014af2:	4b07      	ldr	r3, [pc, #28]	; (8014b10 <DisplayUdf::Show(ArtNetNode*)+0x74>)
 8014af4:	2a00      	cmp	r2, #0
 8014af6:	bf08      	it	eq
 8014af8:	4603      	moveq	r3, r0
 8014afa:	4620      	mov	r0, r4
 8014afc:	4a05      	ldr	r2, [pc, #20]	; (8014b14 <DisplayUdf::Show(ArtNetNode*)+0x78>)
 8014afe:	f7f3 fb49 	bl	8008194 <Display::Printf(unsigned char, char const*, ...)>
 8014b02:	e7f2      	b.n	8014aea <DisplayUdf::Show(ArtNetNode*)+0x4e>
 8014b04:	0801a15b 	stmdaeq	r1, {r0, r1, r3, r4, r6, r8, sp, pc}
 8014b08:	0801a162 	stmdaeq	r1, {r1, r5, r6, r8, sp, pc}
 8014b0c:	080192ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, r9, ip, pc}
 8014b10:	080192e1 	stmdaeq	r1, {r0, r5, r6, r7, r9, ip, pc}
 8014b14:	0801a169 	stmdaeq	r1, {r0, r3, r5, r6, r8, sp, pc}

08014b18 <NetworkDisplay::ShowEmacStart()>:
 8014b18:	4b01      	ldr	r3, [pc, #4]	; (8014b20 <NetworkDisplay::ShowEmacStart()+0x8>)
 8014b1a:	6818      	ldr	r0, [r3, #0]
 8014b1c:	f7ff bbf4 	b.w	8014308 <DisplayUdf::ShowEmacStart()>
 8014b20:	20013cec 	andcs	r3, r1, ip, ror #25

08014b24 <NetworkDisplay::ShowIp()>:
 8014b24:	4b01      	ldr	r3, [pc, #4]	; (8014b2c <NetworkDisplay::ShowIp()+0x8>)
 8014b26:	6818      	ldr	r0, [r3, #0]
 8014b28:	f7ff bbfe 	b.w	8014328 <DisplayUdf::ShowIpAddress()>
 8014b2c:	20013cec 	andcs	r3, r1, ip, ror #25

08014b30 <NetworkDisplay::ShowNetMask()>:
 8014b30:	4b01      	ldr	r3, [pc, #4]	; (8014b38 <NetworkDisplay::ShowNetMask()+0x8>)
 8014b32:	6818      	ldr	r0, [r3, #0]
 8014b34:	f7ff bc2c 	b.w	8014390 <DisplayUdf::ShowNetmask()>
 8014b38:	20013cec 	andcs	r3, r1, ip, ror #25

08014b3c <NetworkDisplay::ShowGatewayIp()>:
 8014b3c:	4b01      	ldr	r3, [pc, #4]	; (8014b44 <NetworkDisplay::ShowGatewayIp()+0x8>)
 8014b3e:	6818      	ldr	r0, [r3, #0]
 8014b40:	f7ff bc44 	b.w	80143cc <DisplayUdf::ShowGatewayIp()>
 8014b44:	20013cec 	andcs	r3, r1, ip, ror #25

08014b48 <NetworkDisplay::ShowHostName()>:
 8014b48:	4b01      	ldr	r3, [pc, #4]	; (8014b50 <NetworkDisplay::ShowHostName()+0x8>)
 8014b4a:	6818      	ldr	r0, [r3, #0]
 8014b4c:	f7ff bc5e 	b.w	801440c <DisplayUdf::ShowHostName()>
 8014b50:	20013cec 	andcs	r3, r1, ip, ror #25

08014b54 <NetworkDisplay::ShowShutdown()>:
 8014b54:	4b01      	ldr	r3, [pc, #4]	; (8014b5c <NetworkDisplay::ShowShutdown()+0x8>)
 8014b56:	6818      	ldr	r0, [r3, #0]
 8014b58:	f7ff bce8 	b.w	801452c <DisplayUdf::ShowShutdown()>
 8014b5c:	20013cec 	andcs	r3, r1, ip, ror #25

08014b60 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>:
 8014b60:	4b01      	ldr	r3, [pc, #4]	; (8014b68 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)+0x8>)
 8014b62:	6818      	ldr	r0, [r3, #0]
 8014b64:	f7ff bcaa 	b.w	80144bc <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)>
 8014b68:	20013cec 	andcs	r3, r1, ip, ror #25

08014b6c <properties::convert_json_file(char*, unsigned short, bool)>:
 8014b6c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014b70:	7803      	ldrb	r3, [r0, #0]
 8014b72:	2b7b      	cmp	r3, #123	; 0x7b
 8014b74:	d170      	bne.n	8014c58 <properties::convert_json_file(char*, unsigned short, bool)+0xec>
 8014b76:	b322      	cbz	r2, 8014bc2 <properties::convert_json_file(char*, unsigned short, bool)+0x56>
 8014b78:	2301      	movs	r3, #1
 8014b7a:	4606      	mov	r6, r0
 8014b7c:	461c      	mov	r4, r3
 8014b7e:	2a00      	cmp	r2, #0
 8014b80:	bf0c      	ite	eq
 8014b82:	f04f 0c0a 	moveq.w	ip, #10
 8014b86:	f04f 0c00 	movne.w	ip, #0
 8014b8a:	273d      	movs	r7, #61	; 0x3d
 8014b8c:	4299      	cmp	r1, r3
 8014b8e:	d960      	bls.n	8014c52 <properties::convert_json_file(char*, unsigned short, bool)+0xe6>
 8014b90:	4299      	cmp	r1, r3
 8014b92:	4602      	mov	r2, r0
 8014b94:	f890 e000 	ldrb.w	lr, [r0]
 8014b98:	f103 0301 	add.w	r3, r3, #1
 8014b9c:	f100 0001 	add.w	r0, r0, #1
 8014ba0:	d846      	bhi.n	8014c30 <properties::convert_json_file(char*, unsigned short, bool)+0xc4>
 8014ba2:	1aa0      	subs	r0, r4, r2
 8014ba4:	4615      	mov	r5, r2
 8014ba6:	1884      	adds	r4, r0, r2
 8014ba8:	f812 8b01 	ldrb.w	r8, [r2], #1
 8014bac:	f103 0e01 	add.w	lr, r3, #1
 8014bb0:	f1b8 0f22 	cmp.w	r8, #34	; 0x22
 8014bb4:	d053      	beq.n	8014c5e <properties::convert_json_file(char*, unsigned short, bool)+0xf2>
 8014bb6:	4299      	cmp	r1, r3
 8014bb8:	d957      	bls.n	8014c6a <properties::convert_json_file(char*, unsigned short, bool)+0xfe>
 8014bba:	4673      	mov	r3, lr
 8014bbc:	f806 8b01 	strb.w	r8, [r6], #1
 8014bc0:	e7f0      	b.n	8014ba4 <properties::convert_json_file(char*, unsigned short, bool)+0x38>
 8014bc2:	2323      	movs	r3, #35	; 0x23
 8014bc4:	f800 3b01 	strb.w	r3, [r0], #1
 8014bc8:	4605      	mov	r5, r0
 8014bca:	2301      	movs	r3, #1
 8014bcc:	4299      	cmp	r1, r3
 8014bce:	d92d      	bls.n	8014c2c <properties::convert_json_file(char*, unsigned short, bool)+0xc0>
 8014bd0:	f815 4b01 	ldrb.w	r4, [r5], #1
 8014bd4:	2c22      	cmp	r4, #34	; 0x22
 8014bd6:	d001      	beq.n	8014bdc <properties::convert_json_file(char*, unsigned short, bool)+0x70>
 8014bd8:	3301      	adds	r3, #1
 8014bda:	e7f7      	b.n	8014bcc <properties::convert_json_file(char*, unsigned short, bool)+0x60>
 8014bdc:	46ac      	mov	ip, r5
 8014bde:	4606      	mov	r6, r0
 8014be0:	2701      	movs	r7, #1
 8014be2:	f89c e000 	ldrb.w	lr, [ip]
 8014be6:	4665      	mov	r5, ip
 8014be8:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 8014bec:	4630      	mov	r0, r6
 8014bee:	463c      	mov	r4, r7
 8014bf0:	f10c 0c01 	add.w	ip, ip, #1
 8014bf4:	f106 0601 	add.w	r6, r6, #1
 8014bf8:	f107 0701 	add.w	r7, r7, #1
 8014bfc:	d007      	beq.n	8014c0e <properties::convert_json_file(char*, unsigned short, bool)+0xa2>
 8014bfe:	3301      	adds	r3, #1
 8014c00:	4299      	cmp	r1, r3
 8014c02:	4665      	mov	r5, ip
 8014c04:	f806 ec01 	strb.w	lr, [r6, #-1]
 8014c08:	d8eb      	bhi.n	8014be2 <properties::convert_json_file(char*, unsigned short, bool)+0x76>
 8014c0a:	463c      	mov	r4, r7
 8014c0c:	4630      	mov	r0, r6
 8014c0e:	4606      	mov	r6, r0
 8014c10:	200a      	movs	r0, #10
 8014c12:	3401      	adds	r4, #1
 8014c14:	f806 0b01 	strb.w	r0, [r6], #1
 8014c18:	4628      	mov	r0, r5
 8014c1a:	f815 7b01 	ldrb.w	r7, [r5], #1
 8014c1e:	2f7b      	cmp	r7, #123	; 0x7b
 8014c20:	d0ad      	beq.n	8014b7e <properties::convert_json_file(char*, unsigned short, bool)+0x12>
 8014c22:	1c5f      	adds	r7, r3, #1
 8014c24:	4299      	cmp	r1, r3
 8014c26:	463b      	mov	r3, r7
 8014c28:	d8f6      	bhi.n	8014c18 <properties::convert_json_file(char*, unsigned short, bool)+0xac>
 8014c2a:	e7a8      	b.n	8014b7e <properties::convert_json_file(char*, unsigned short, bool)+0x12>
 8014c2c:	2401      	movs	r4, #1
 8014c2e:	e7ee      	b.n	8014c0e <properties::convert_json_file(char*, unsigned short, bool)+0xa2>
 8014c30:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 8014c34:	d1ac      	bne.n	8014b90 <properties::convert_json_file(char*, unsigned short, bool)+0x24>
 8014c36:	4602      	mov	r2, r0
 8014c38:	e7b3      	b.n	8014ba2 <properties::convert_json_file(char*, unsigned short, bool)+0x36>
 8014c3a:	283a      	cmp	r0, #58	; 0x3a
 8014c3c:	d115      	bne.n	8014c6a <properties::convert_json_file(char*, unsigned short, bool)+0xfe>
 8014c3e:	462b      	mov	r3, r5
 8014c40:	e01b      	b.n	8014c7a <properties::convert_json_file(char*, unsigned short, bool)+0x10e>
 8014c42:	4686      	mov	lr, r0
 8014c44:	e027      	b.n	8014c96 <properties::convert_json_file(char*, unsigned short, bool)+0x12a>
 8014c46:	4673      	mov	r3, lr
 8014c48:	f806 cb01 	strb.w	ip, [r6], #1
 8014c4c:	3401      	adds	r4, #1
 8014c4e:	3301      	adds	r3, #1
 8014c50:	e79c      	b.n	8014b8c <properties::convert_json_file(char*, unsigned short, bool)+0x20>
 8014c52:	4620      	mov	r0, r4
 8014c54:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014c58:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8014c5c:	e7fa      	b.n	8014c54 <properties::convert_json_file(char*, unsigned short, bool)+0xe8>
 8014c5e:	4630      	mov	r0, r6
 8014c60:	f800 7b01 	strb.w	r7, [r0], #1
 8014c64:	469e      	mov	lr, r3
 8014c66:	4606      	mov	r6, r0
 8014c68:	3401      	adds	r4, #1
 8014c6a:	4571      	cmp	r1, lr
 8014c6c:	462b      	mov	r3, r5
 8014c6e:	7828      	ldrb	r0, [r5, #0]
 8014c70:	f10e 0e01 	add.w	lr, lr, #1
 8014c74:	f105 0501 	add.w	r5, r5, #1
 8014c78:	d8df      	bhi.n	8014c3a <properties::convert_json_file(char*, unsigned short, bool)+0xce>
 8014c7a:	781d      	ldrb	r5, [r3, #0]
 8014c7c:	461a      	mov	r2, r3
 8014c7e:	2d2f      	cmp	r5, #47	; 0x2f
 8014c80:	4670      	mov	r0, lr
 8014c82:	f103 0301 	add.w	r3, r3, #1
 8014c86:	f10e 0e01 	add.w	lr, lr, #1
 8014c8a:	d8da      	bhi.n	8014c42 <properties::convert_json_file(char*, unsigned short, bool)+0xd6>
 8014c8c:	4281      	cmp	r1, r0
 8014c8e:	d8f4      	bhi.n	8014c7a <properties::convert_json_file(char*, unsigned short, bool)+0x10e>
 8014c90:	2d22      	cmp	r5, #34	; 0x22
 8014c92:	bf08      	it	eq
 8014c94:	461a      	moveq	r2, r3
 8014c96:	4610      	mov	r0, r2
 8014c98:	f810 5b01 	ldrb.w	r5, [r0], #1
 8014c9c:	f10e 0301 	add.w	r3, lr, #1
 8014ca0:	2d22      	cmp	r5, #34	; 0x22
 8014ca2:	d0d0      	beq.n	8014c46 <properties::convert_json_file(char*, unsigned short, bool)+0xda>
 8014ca4:	2d2c      	cmp	r5, #44	; 0x2c
 8014ca6:	d0ce      	beq.n	8014c46 <properties::convert_json_file(char*, unsigned short, bool)+0xda>
 8014ca8:	2d7d      	cmp	r5, #125	; 0x7d
 8014caa:	d0cc      	beq.n	8014c46 <properties::convert_json_file(char*, unsigned short, bool)+0xda>
 8014cac:	4571      	cmp	r1, lr
 8014cae:	d9ce      	bls.n	8014c4e <properties::convert_json_file(char*, unsigned short, bool)+0xe2>
 8014cb0:	f1a5 0e20 	sub.w	lr, r5, #32
 8014cb4:	f1be 0f5a 	cmp.w	lr, #90	; 0x5a
 8014cb8:	d803      	bhi.n	8014cc2 <properties::convert_json_file(char*, unsigned short, bool)+0x156>
 8014cba:	4602      	mov	r2, r0
 8014cbc:	f806 5b01 	strb.w	r5, [r6], #1
 8014cc0:	3401      	adds	r4, #1
 8014cc2:	469e      	mov	lr, r3
 8014cc4:	e7e7      	b.n	8014c96 <properties::convert_json_file(char*, unsigned short, bool)+0x12a>
	...

08014cc8 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>:
 8014cc8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8014ccc:	6002      	str	r2, [r0, #0]
 8014cce:	4614      	mov	r4, r2
 8014cd0:	2200      	movs	r2, #0
 8014cd2:	4606      	mov	r6, r0
 8014cd4:	460f      	mov	r7, r1
 8014cd6:	80c2      	strh	r2, [r0, #6]
 8014cd8:	4a1b      	ldr	r2, [pc, #108]	; (8014d48 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x80>)
 8014cda:	8083      	strh	r3, [r0, #4]
 8014cdc:	7810      	ldrb	r0, [r2, #0]
 8014cde:	f000 0001 	and.w	r0, r0, #1
 8014ce2:	7230      	strb	r0, [r6, #8]
 8014ce4:	463d      	mov	r5, r7
 8014ce6:	782a      	ldrb	r2, [r5, #0]
 8014ce8:	3701      	adds	r7, #1
 8014cea:	2a00      	cmp	r2, #0
 8014cec:	d1fa      	bne.n	8014ce4 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x1c>
 8014cee:	1a6d      	subs	r5, r5, r1
 8014cf0:	b29b      	uxth	r3, r3
 8014cf2:	b1d0      	cbz	r0, 8014d2a <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x62>
 8014cf4:	1d2f      	adds	r7, r5, #4
 8014cf6:	429f      	cmp	r7, r3
 8014cf8:	d814      	bhi.n	8014d24 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 8014cfa:	f04f 087b 	mov.w	r8, #123	; 0x7b
 8014cfe:	f04f 0922 	mov.w	r9, #34	; 0x22
 8014d02:	462a      	mov	r2, r5
 8014d04:	f884 8000 	strb.w	r8, [r4]
 8014d08:	f884 9001 	strb.w	r9, [r4, #1]
 8014d0c:	1ca0      	adds	r0, r4, #2
 8014d0e:	f000 fffa 	bl	8015d06 <memmove>
 8014d12:	223a      	movs	r2, #58	; 0x3a
 8014d14:	1963      	adds	r3, r4, r5
 8014d16:	3505      	adds	r5, #5
 8014d18:	f883 9002 	strb.w	r9, [r3, #2]
 8014d1c:	70da      	strb	r2, [r3, #3]
 8014d1e:	80f5      	strh	r5, [r6, #6]
 8014d20:	f804 8007 	strb.w	r8, [r4, r7]
 8014d24:	4630      	mov	r0, r6
 8014d26:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8014d2a:	1caf      	adds	r7, r5, #2
 8014d2c:	429f      	cmp	r7, r3
 8014d2e:	d8f9      	bhi.n	8014d24 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 8014d30:	4620      	mov	r0, r4
 8014d32:	2323      	movs	r3, #35	; 0x23
 8014d34:	462a      	mov	r2, r5
 8014d36:	f800 3b01 	strb.w	r3, [r0], #1
 8014d3a:	f000 ffe4 	bl	8015d06 <memmove>
 8014d3e:	230a      	movs	r3, #10
 8014d40:	442c      	add	r4, r5
 8014d42:	7063      	strb	r3, [r4, #1]
 8014d44:	80f7      	strh	r7, [r6, #6]
 8014d46:	e7ed      	b.n	8014d24 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 8014d48:	20013cf0 	strdcs	r3, [r1], -r0

08014d4c <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>:
 8014d4c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014d4e:	469c      	mov	ip, r3
 8014d50:	8885      	ldrh	r5, [r0, #4]
 8014d52:	88c3      	ldrh	r3, [r0, #6]
 8014d54:	b085      	sub	sp, #20
 8014d56:	42ab      	cmp	r3, r5
 8014d58:	d302      	bcc.n	8014d60 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x14>
 8014d5a:	2000      	movs	r0, #0
 8014d5c:	b005      	add	sp, #20
 8014d5e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014d60:	4604      	mov	r4, r0
 8014d62:	6800      	ldr	r0, [r0, #0]
 8014d64:	1aed      	subs	r5, r5, r3
 8014d66:	4418      	add	r0, r3
 8014d68:	b2d6      	uxtb	r6, r2
 8014d6a:	f3c2 2707 	ubfx	r7, r2, #8, #8
 8014d6e:	f3c2 4307 	ubfx	r3, r2, #16, #8
 8014d72:	f894 e008 	ldrb.w	lr, [r4, #8]
 8014d76:	0e12      	lsrs	r2, r2, #24
 8014d78:	f1bc 0f00 	cmp.w	ip, #0
 8014d7c:	d109      	bne.n	8014d92 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x46>
 8014d7e:	f1be 0f00 	cmp.w	lr, #0
 8014d82:	d109      	bne.n	8014d98 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x4c>
 8014d84:	e9cd 3202 	strd	r3, r2, [sp, #8]
 8014d88:	e9cd 6700 	strd	r6, r7, [sp]
 8014d8c:	460b      	mov	r3, r1
 8014d8e:	4a0e      	ldr	r2, [pc, #56]	; (8014dc8 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x7c>)
 8014d90:	e008      	b.n	8014da4 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x58>
 8014d92:	f1be 0f00 	cmp.w	lr, #0
 8014d96:	d00f      	beq.n	8014db8 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x6c>
 8014d98:	e9cd 3202 	strd	r3, r2, [sp, #8]
 8014d9c:	460b      	mov	r3, r1
 8014d9e:	e9cd 6700 	strd	r6, r7, [sp]
 8014da2:	4a0a      	ldr	r2, [pc, #40]	; (8014dcc <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x80>)
 8014da4:	4629      	mov	r1, r5
 8014da6:	f7f4 f923 	bl	8008ff0 <snprintf>
 8014daa:	4285      	cmp	r5, r0
 8014dac:	dbd5      	blt.n	8014d5a <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0xe>
 8014dae:	88e3      	ldrh	r3, [r4, #6]
 8014db0:	4403      	add	r3, r0
 8014db2:	80e3      	strh	r3, [r4, #6]
 8014db4:	2001      	movs	r0, #1
 8014db6:	e7d1      	b.n	8014d5c <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x10>
 8014db8:	e9cd 3202 	strd	r3, r2, [sp, #8]
 8014dbc:	e9cd 6700 	strd	r6, r7, [sp]
 8014dc0:	460b      	mov	r3, r1
 8014dc2:	4a03      	ldr	r2, [pc, #12]	; (8014dd0 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x84>)
 8014dc4:	e7ee      	b.n	8014da4 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x58>
 8014dc6:	bf00      	nop
 8014dc8:	0801a202 	stmdaeq	r1, {r1, r9, sp, pc}
 8014dcc:	0801a1ee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, r8, sp, pc}
 8014dd0:	0801a203 	stmdaeq	r1, {r0, r1, r9, sp, pc}

08014dd4 <PropertiesBuilder::AddComment(char const*)>:
 8014dd4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014dd6:	7a06      	ldrb	r6, [r0, #8]
 8014dd8:	b996      	cbnz	r6, 8014e00 <PropertiesBuilder::AddComment(char const*)+0x2c>
 8014dda:	4604      	mov	r4, r0
 8014ddc:	88c0      	ldrh	r0, [r0, #6]
 8014dde:	88a5      	ldrh	r5, [r4, #4]
 8014de0:	42a8      	cmp	r0, r5
 8014de2:	d20d      	bcs.n	8014e00 <PropertiesBuilder::AddComment(char const*)+0x2c>
 8014de4:	6827      	ldr	r7, [r4, #0]
 8014de6:	1a2d      	subs	r5, r5, r0
 8014de8:	460b      	mov	r3, r1
 8014dea:	4a06      	ldr	r2, [pc, #24]	; (8014e04 <PropertiesBuilder::AddComment(char const*)+0x30>)
 8014dec:	4629      	mov	r1, r5
 8014dee:	4438      	add	r0, r7
 8014df0:	f7f4 f8fe 	bl	8008ff0 <snprintf>
 8014df4:	4285      	cmp	r5, r0
 8014df6:	bfa1      	itttt	ge
 8014df8:	2601      	movge	r6, #1
 8014dfa:	88e3      	ldrhge	r3, [r4, #6]
 8014dfc:	18c0      	addge	r0, r0, r3
 8014dfe:	80e0      	strhge	r0, [r4, #6]
 8014e00:	4630      	mov	r0, r6
 8014e02:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014e04:	0801a213 	stmdaeq	r1, {r0, r1, r4, r9, sp, pc}

08014e08 <PropertiesBuilder::AddHex(char const*, unsigned int, bool, unsigned int)>:
 8014e08:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8014e0a:	88c5      	ldrh	r5, [r0, #6]
 8014e0c:	8887      	ldrh	r7, [r0, #4]
 8014e0e:	9e08      	ldr	r6, [sp, #32]
 8014e10:	42bd      	cmp	r5, r7
 8014e12:	d302      	bcc.n	8014e1a <PropertiesBuilder::AddHex(char const*, unsigned int, bool, unsigned int)+0x12>
 8014e14:	2000      	movs	r0, #0
 8014e16:	b003      	add	sp, #12
 8014e18:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014e1a:	4604      	mov	r4, r0
 8014e1c:	6800      	ldr	r0, [r0, #0]
 8014e1e:	4428      	add	r0, r5
 8014e20:	1b7d      	subs	r5, r7, r5
 8014e22:	7a27      	ldrb	r7, [r4, #8]
 8014e24:	b92b      	cbnz	r3, 8014e32 <PropertiesBuilder::AddHex(char const*, unsigned int, bool, unsigned int)+0x2a>
 8014e26:	b92f      	cbnz	r7, 8014e34 <PropertiesBuilder::AddHex(char const*, unsigned int, bool, unsigned int)+0x2c>
 8014e28:	e9cd 6200 	strd	r6, r2, [sp]
 8014e2c:	460b      	mov	r3, r1
 8014e2e:	4a0b      	ldr	r2, [pc, #44]	; (8014e5c <PropertiesBuilder::AddHex(char const*, unsigned int, bool, unsigned int)+0x54>)
 8014e30:	e004      	b.n	8014e3c <PropertiesBuilder::AddHex(char const*, unsigned int, bool, unsigned int)+0x34>
 8014e32:	b16f      	cbz	r7, 8014e50 <PropertiesBuilder::AddHex(char const*, unsigned int, bool, unsigned int)+0x48>
 8014e34:	460b      	mov	r3, r1
 8014e36:	e9cd 6200 	strd	r6, r2, [sp]
 8014e3a:	4a09      	ldr	r2, [pc, #36]	; (8014e60 <PropertiesBuilder::AddHex(char const*, unsigned int, bool, unsigned int)+0x58>)
 8014e3c:	4629      	mov	r1, r5
 8014e3e:	f7f4 f8d7 	bl	8008ff0 <snprintf>
 8014e42:	4285      	cmp	r5, r0
 8014e44:	dbe6      	blt.n	8014e14 <PropertiesBuilder::AddHex(char const*, unsigned int, bool, unsigned int)+0xc>
 8014e46:	88e3      	ldrh	r3, [r4, #6]
 8014e48:	4403      	add	r3, r0
 8014e4a:	80e3      	strh	r3, [r4, #6]
 8014e4c:	2001      	movs	r0, #1
 8014e4e:	e7e2      	b.n	8014e16 <PropertiesBuilder::AddHex(char const*, unsigned int, bool, unsigned int)+0xe>
 8014e50:	e9cd 6200 	strd	r6, r2, [sp]
 8014e54:	460b      	mov	r3, r1
 8014e56:	4a03      	ldr	r2, [pc, #12]	; (8014e64 <PropertiesBuilder::AddHex(char const*, unsigned int, bool, unsigned int)+0x5c>)
 8014e58:	e7f0      	b.n	8014e3c <PropertiesBuilder::AddHex(char const*, unsigned int, bool, unsigned int)+0x34>
 8014e5a:	bf00      	nop
 8014e5c:	0801a228 	stmdaeq	r1, {r3, r5, r9, sp, pc}
 8014e60:	0801a21b 	stmdaeq	r1, {r0, r1, r3, r4, r9, sp, pc}
 8014e64:	0801a229 	stmdaeq	r1, {r0, r3, r5, r9, sp, pc}

08014e68 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>:
 8014e68:	e9c0 1200 	strd	r1, r2, [r0]
 8014e6c:	4770      	bx	lr

08014e6e <ReadConfigFile::~ReadConfigFile()>:
 8014e6e:	4770      	bx	lr

08014e70 <ReadConfigFile::Read(char const*, unsigned int)>:
 8014e70:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014e74:	4606      	mov	r6, r0
 8014e76:	460d      	mov	r5, r1
 8014e78:	4614      	mov	r4, r2
 8014e7a:	f04f 0800 	mov.w	r8, #0
 8014e7e:	b090      	sub	sp, #64	; 0x40
 8014e80:	b33c      	cbz	r4, 8014ed2 <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 8014e82:	466b      	mov	r3, sp
 8014e84:	462a      	mov	r2, r5
 8014e86:	4619      	mov	r1, r3
 8014e88:	7817      	ldrb	r7, [r2, #0]
 8014e8a:	4610      	mov	r0, r2
 8014e8c:	2f0d      	cmp	r7, #13
 8014e8e:	f102 0201 	add.w	r2, r2, #1
 8014e92:	d013      	beq.n	8014ebc <ReadConfigFile::Read(char const*, unsigned int)+0x4c>
 8014e94:	2f0a      	cmp	r7, #10
 8014e96:	d011      	beq.n	8014ebc <ReadConfigFile::Read(char const*, unsigned int)+0x4c>
 8014e98:	f803 7b01 	strb.w	r7, [r3], #1
 8014e9c:	1a58      	subs	r0, r3, r1
 8014e9e:	283f      	cmp	r0, #63	; 0x3f
 8014ea0:	4615      	mov	r5, r2
 8014ea2:	dc16      	bgt.n	8014ed2 <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 8014ea4:	3c01      	subs	r4, #1
 8014ea6:	d1ef      	bne.n	8014e88 <ReadConfigFile::Read(char const*, unsigned int)+0x18>
 8014ea8:	f89d 2000 	ldrb.w	r2, [sp]
 8014eac:	2a60      	cmp	r2, #96	; 0x60
 8014eae:	d9e7      	bls.n	8014e80 <ReadConfigFile::Read(char const*, unsigned int)+0x10>
 8014eb0:	f883 8000 	strb.w	r8, [r3]
 8014eb4:	e9d6 3000 	ldrd	r3, r0, [r6]
 8014eb8:	4798      	blx	r3
 8014eba:	e7e1      	b.n	8014e80 <ReadConfigFile::Read(char const*, unsigned int)+0x10>
 8014ebc:	4605      	mov	r5, r0
 8014ebe:	2c00      	cmp	r4, #0
 8014ec0:	d0f2      	beq.n	8014ea8 <ReadConfigFile::Read(char const*, unsigned int)+0x38>
 8014ec2:	f810 2b01 	ldrb.w	r2, [r0], #1
 8014ec6:	2a0d      	cmp	r2, #13
 8014ec8:	d001      	beq.n	8014ece <ReadConfigFile::Read(char const*, unsigned int)+0x5e>
 8014eca:	2a0a      	cmp	r2, #10
 8014ecc:	d1ec      	bne.n	8014ea8 <ReadConfigFile::Read(char const*, unsigned int)+0x38>
 8014ece:	3c01      	subs	r4, #1
 8014ed0:	e7f4      	b.n	8014ebc <ReadConfigFile::Read(char const*, unsigned int)+0x4c>
 8014ed2:	b010      	add	sp, #64	; 0x40
 8014ed4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08014ed8 <Sscan::Char(char const*, char const*, char*, unsigned int&)>:
 8014ed8:	b570      	push	{r4, r5, r6, lr}
 8014eda:	4615      	mov	r5, r2
 8014edc:	461c      	mov	r4, r3
 8014ede:	f000 f946 	bl	801516e <Sscan::checkName(char const*, char const*)>
 8014ee2:	b160      	cbz	r0, 8014efe <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x26>
 8014ee4:	2100      	movs	r1, #0
 8014ee6:	5c43      	ldrb	r3, [r0, r1]
 8014ee8:	6826      	ldr	r6, [r4, #0]
 8014eea:	b28a      	uxth	r2, r1
 8014eec:	b123      	cbz	r3, 8014ef8 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x20>
 8014eee:	42b2      	cmp	r2, r6
 8014ef0:	d207      	bcs.n	8014f02 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2a>
 8014ef2:	546b      	strb	r3, [r5, r1]
 8014ef4:	3101      	adds	r1, #1
 8014ef6:	e7f6      	b.n	8014ee6 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0xe>
 8014ef8:	2000      	movs	r0, #0
 8014efa:	6022      	str	r2, [r4, #0]
 8014efc:	bd70      	pop	{r4, r5, r6, pc}
 8014efe:	2001      	movs	r0, #1
 8014f00:	e7fc      	b.n	8014efc <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x24>
 8014f02:	2b0a      	cmp	r3, #10
 8014f04:	d0f8      	beq.n	8014ef8 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x20>
 8014f06:	2002      	movs	r0, #2
 8014f08:	e7f8      	b.n	8014efc <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x24>

08014f0a <Sscan::Float(char const*, char const*, float&)>:
 8014f0a:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8014f0e:	4616      	mov	r6, r2
 8014f10:	f000 f92d 	bl	801516e <Sscan::checkName(char const*, char const*)>
 8014f14:	2800      	cmp	r0, #0
 8014f16:	d059      	beq.n	8014fcc <Sscan::Float(char const*, char const*, float&)+0xc2>
 8014f18:	4604      	mov	r4, r0
 8014f1a:	7803      	ldrb	r3, [r0, #0]
 8014f1c:	2b2d      	cmp	r3, #45	; 0x2d
 8014f1e:	bf08      	it	eq
 8014f20:	3401      	addeq	r4, #1
 8014f22:	7823      	ldrb	r3, [r4, #0]
 8014f24:	bf0c      	ite	eq
 8014f26:	f04f 0801 	moveq.w	r8, #1
 8014f2a:	f04f 0800 	movne.w	r8, #0
 8014f2e:	f013 0fdf 	tst.w	r3, #223	; 0xdf
 8014f32:	d103      	bne.n	8014f3c <Sscan::Float(char const*, char const*, float&)+0x32>
 8014f34:	2702      	movs	r7, #2
 8014f36:	4638      	mov	r0, r7
 8014f38:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8014f3c:	2000      	movs	r0, #0
 8014f3e:	220a      	movs	r2, #10
 8014f40:	7823      	ldrb	r3, [r4, #0]
 8014f42:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 8014f46:	2909      	cmp	r1, #9
 8014f48:	d8f4      	bhi.n	8014f34 <Sscan::Float(char const*, char const*, float&)+0x2a>
 8014f4a:	fb02 3000 	mla	r0, r2, r0, r3
 8014f4e:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8014f52:	3830      	subs	r0, #48	; 0x30
 8014f54:	2b2e      	cmp	r3, #46	; 0x2e
 8014f56:	d002      	beq.n	8014f5e <Sscan::Float(char const*, char const*, float&)+0x54>
 8014f58:	f013 0fdf 	tst.w	r3, #223	; 0xdf
 8014f5c:	d1f0      	bne.n	8014f40 <Sscan::Float(char const*, char const*, float&)+0x36>
 8014f5e:	f7f2 fa29 	bl	80073b4 <__aeabi_ui2f>
 8014f62:	6030      	str	r0, [r6, #0]
 8014f64:	7823      	ldrb	r3, [r4, #0]
 8014f66:	4605      	mov	r5, r0
 8014f68:	2b2e      	cmp	r3, #46	; 0x2e
 8014f6a:	d008      	beq.n	8014f7e <Sscan::Float(char const*, char const*, float&)+0x74>
 8014f6c:	f1b8 0f00 	cmp.w	r8, #0
 8014f70:	d101      	bne.n	8014f76 <Sscan::Float(char const*, char const*, float&)+0x6c>
 8014f72:	2700      	movs	r7, #0
 8014f74:	e7df      	b.n	8014f36 <Sscan::Float(char const*, char const*, float&)+0x2c>
 8014f76:	f100 4500 	add.w	r5, r0, #2147483648	; 0x80000000
 8014f7a:	6035      	str	r5, [r6, #0]
 8014f7c:	e7f9      	b.n	8014f72 <Sscan::Float(char const*, char const*, float&)+0x68>
 8014f7e:	f04f 0901 	mov.w	r9, #1
 8014f82:	2000      	movs	r0, #0
 8014f84:	220a      	movs	r2, #10
 8014f86:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8014f8a:	f013 07df 	ands.w	r7, r3, #223	; 0xdf
 8014f8e:	d007      	beq.n	8014fa0 <Sscan::Float(char const*, char const*, float&)+0x96>
 8014f90:	3b30      	subs	r3, #48	; 0x30
 8014f92:	2b09      	cmp	r3, #9
 8014f94:	d8ce      	bhi.n	8014f34 <Sscan::Float(char const*, char const*, float&)+0x2a>
 8014f96:	fb02 3000 	mla	r0, r2, r0, r3
 8014f9a:	fb02 f909 	mul.w	r9, r2, r9
 8014f9e:	e7f2      	b.n	8014f86 <Sscan::Float(char const*, char const*, float&)+0x7c>
 8014fa0:	f7f2 fa08 	bl	80073b4 <__aeabi_ui2f>
 8014fa4:	4604      	mov	r4, r0
 8014fa6:	4648      	mov	r0, r9
 8014fa8:	f7f2 fa04 	bl	80073b4 <__aeabi_ui2f>
 8014fac:	4601      	mov	r1, r0
 8014fae:	4620      	mov	r0, r4
 8014fb0:	f7f2 fee8 	bl	8007d84 <__aeabi_fdiv>
 8014fb4:	4629      	mov	r1, r5
 8014fb6:	f7f2 f94d 	bl	8007254 <__addsf3>
 8014fba:	f1b8 0f00 	cmp.w	r8, #0
 8014fbe:	d101      	bne.n	8014fc4 <Sscan::Float(char const*, char const*, float&)+0xba>
 8014fc0:	6030      	str	r0, [r6, #0]
 8014fc2:	e7d6      	b.n	8014f72 <Sscan::Float(char const*, char const*, float&)+0x68>
 8014fc4:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
 8014fc8:	6030      	str	r0, [r6, #0]
 8014fca:	e7b4      	b.n	8014f36 <Sscan::Float(char const*, char const*, float&)+0x2c>
 8014fcc:	2701      	movs	r7, #1
 8014fce:	e7b2      	b.n	8014f36 <Sscan::Float(char const*, char const*, float&)+0x2c>

08014fd0 <Sscan::HexUint16(char const*, char const*, unsigned short&)>:
 8014fd0:	b538      	push	{r3, r4, r5, lr}
 8014fd2:	4614      	mov	r4, r2
 8014fd4:	f000 f8cb 	bl	801516e <Sscan::checkName(char const*, char const*)>
 8014fd8:	b908      	cbnz	r0, 8014fde <Sscan::HexUint16(char const*, char const*, unsigned short&)+0xe>
 8014fda:	2001      	movs	r0, #1
 8014fdc:	bd38      	pop	{r3, r4, r5, pc}
 8014fde:	2100      	movs	r1, #0
 8014fe0:	4602      	mov	r2, r0
 8014fe2:	8021      	strh	r1, [r4, #0]
 8014fe4:	5c50      	ldrb	r0, [r2, r1]
 8014fe6:	b1b0      	cbz	r0, 8015016 <Sscan::HexUint16(char const*, char const*, unsigned short&)+0x46>
 8014fe8:	2904      	cmp	r1, #4
 8014fea:	d018      	beq.n	801501e <Sscan::HexUint16(char const*, char const*, unsigned short&)+0x4e>
 8014fec:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 8014ff0:	2b09      	cmp	r3, #9
 8014ff2:	d904      	bls.n	8014ffe <Sscan::HexUint16(char const*, char const*, unsigned short&)+0x2e>
 8014ff4:	f040 0520 	orr.w	r5, r0, #32
 8014ff8:	3d61      	subs	r5, #97	; 0x61
 8014ffa:	2d05      	cmp	r5, #5
 8014ffc:	d8ed      	bhi.n	8014fda <Sscan::HexUint16(char const*, char const*, unsigned short&)+0xa>
 8014ffe:	2839      	cmp	r0, #57	; 0x39
 8015000:	bf84      	itt	hi
 8015002:	f040 0320 	orrhi.w	r3, r0, #32
 8015006:	3b57      	subhi	r3, #87	; 0x57
 8015008:	8820      	ldrh	r0, [r4, #0]
 801500a:	b2db      	uxtb	r3, r3
 801500c:	ea43 1300 	orr.w	r3, r3, r0, lsl #4
 8015010:	8023      	strh	r3, [r4, #0]
 8015012:	3101      	adds	r1, #1
 8015014:	e7e6      	b.n	8014fe4 <Sscan::HexUint16(char const*, char const*, unsigned short&)+0x14>
 8015016:	2904      	cmp	r1, #4
 8015018:	bf18      	it	ne
 801501a:	2002      	movne	r0, #2
 801501c:	e7de      	b.n	8014fdc <Sscan::HexUint16(char const*, char const*, unsigned short&)+0xc>
 801501e:	3820      	subs	r0, #32
 8015020:	bf18      	it	ne
 8015022:	2001      	movne	r0, #1
 8015024:	e7da      	b.n	8014fdc <Sscan::HexUint16(char const*, char const*, unsigned short&)+0xc>

08015026 <Sscan::IpAddress(char const*, char const*, unsigned int&)>:
 8015026:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8015028:	4615      	mov	r5, r2
 801502a:	f000 f8a0 	bl	801516e <Sscan::checkName(char const*, char const*)>
 801502e:	b3c0      	cbz	r0, 80150a2 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x7c>
 8015030:	2400      	movs	r4, #0
 8015032:	270a      	movs	r7, #10
 8015034:	ae01      	add	r6, sp, #4
 8015036:	4603      	mov	r3, r0
 8015038:	2100      	movs	r1, #0
 801503a:	f100 0c04 	add.w	ip, r0, #4
 801503e:	4618      	mov	r0, r3
 8015040:	f810 2b01 	ldrb.w	r2, [r0], #1
 8015044:	2a2e      	cmp	r2, #46	; 0x2e
 8015046:	d00e      	beq.n	8015066 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x40>
 8015048:	b16a      	cbz	r2, 8015066 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x40>
 801504a:	4560      	cmp	r0, ip
 801504c:	d102      	bne.n	8015054 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x2e>
 801504e:	2002      	movs	r0, #2
 8015050:	b003      	add	sp, #12
 8015052:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8015054:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 8015058:	2b09      	cmp	r3, #9
 801505a:	d8f8      	bhi.n	801504e <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 801505c:	fb07 2101 	mla	r1, r7, r1, r2
 8015060:	4603      	mov	r3, r0
 8015062:	3930      	subs	r1, #48	; 0x30
 8015064:	e7eb      	b.n	801503e <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x18>
 8015066:	29ff      	cmp	r1, #255	; 0xff
 8015068:	d8f1      	bhi.n	801504e <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 801506a:	3401      	adds	r4, #1
 801506c:	2c03      	cmp	r4, #3
 801506e:	f806 1b01 	strb.w	r1, [r6], #1
 8015072:	d1e0      	bne.n	8015036 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x10>
 8015074:	2400      	movs	r4, #0
 8015076:	220a      	movs	r2, #10
 8015078:	1d1e      	adds	r6, r3, #4
 801507a:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 801507e:	f011 00df 	ands.w	r0, r1, #223	; 0xdf
 8015082:	d007      	beq.n	8015094 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x6e>
 8015084:	429e      	cmp	r6, r3
 8015086:	d0e2      	beq.n	801504e <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 8015088:	3930      	subs	r1, #48	; 0x30
 801508a:	2909      	cmp	r1, #9
 801508c:	d8df      	bhi.n	801504e <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 801508e:	fb02 1404 	mla	r4, r2, r4, r1
 8015092:	e7f2      	b.n	801507a <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x54>
 8015094:	2cff      	cmp	r4, #255	; 0xff
 8015096:	d8da      	bhi.n	801504e <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 8015098:	f88d 4007 	strb.w	r4, [sp, #7]
 801509c:	9b01      	ldr	r3, [sp, #4]
 801509e:	602b      	str	r3, [r5, #0]
 80150a0:	e7d6      	b.n	8015050 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x2a>
 80150a2:	2001      	movs	r0, #1
 80150a4:	e7d4      	b.n	8015050 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x2a>

080150a6 <Sscan::Uint16(char const*, char const*, unsigned short&)>:
 80150a6:	b538      	push	{r3, r4, r5, lr}
 80150a8:	4615      	mov	r5, r2
 80150aa:	f000 f860 	bl	801516e <Sscan::checkName(char const*, char const*)>
 80150ae:	b1a0      	cbz	r0, 80150da <Sscan::Uint16(char const*, char const*, unsigned short&)+0x34>
 80150b0:	4604      	mov	r4, r0
 80150b2:	2100      	movs	r1, #0
 80150b4:	220a      	movs	r2, #10
 80150b6:	7823      	ldrb	r3, [r4, #0]
 80150b8:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
 80150bc:	2809      	cmp	r0, #9
 80150be:	d80e      	bhi.n	80150de <Sscan::Uint16(char const*, char const*, unsigned short&)+0x38>
 80150c0:	fb02 3101 	mla	r1, r2, r1, r3
 80150c4:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 80150c8:	3930      	subs	r1, #48	; 0x30
 80150ca:	f013 00df 	ands.w	r0, r3, #223	; 0xdf
 80150ce:	d1f2      	bne.n	80150b6 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x10>
 80150d0:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
 80150d4:	d203      	bcs.n	80150de <Sscan::Uint16(char const*, char const*, unsigned short&)+0x38>
 80150d6:	8029      	strh	r1, [r5, #0]
 80150d8:	bd38      	pop	{r3, r4, r5, pc}
 80150da:	2001      	movs	r0, #1
 80150dc:	e7fc      	b.n	80150d8 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x32>
 80150de:	2002      	movs	r0, #2
 80150e0:	e7fa      	b.n	80150d8 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x32>

080150e2 <Sscan::Uint32(char const*, char const*, unsigned int&)>:
 80150e2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80150e4:	4615      	mov	r5, r2
 80150e6:	f000 f842 	bl	801516e <Sscan::checkName(char const*, char const*)>
 80150ea:	b1f8      	cbz	r0, 801512c <Sscan::Uint32(char const*, char const*, unsigned int&)+0x4a>
 80150ec:	2300      	movs	r3, #0
 80150ee:	4604      	mov	r4, r0
 80150f0:	461e      	mov	r6, r3
 80150f2:	270a      	movs	r7, #10
 80150f4:	7822      	ldrb	r2, [r4, #0]
 80150f6:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
 80150fa:	2909      	cmp	r1, #9
 80150fc:	d818      	bhi.n	8015130 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x4e>
 80150fe:	fba3 3107 	umull	r3, r1, r3, r7
 8015102:	fb07 1106 	mla	r1, r7, r6, r1
 8015106:	3b30      	subs	r3, #48	; 0x30
 8015108:	f141 31ff 	adc.w	r1, r1, #4294967295	; 0xffffffff
 801510c:	18d3      	adds	r3, r2, r3
 801510e:	f141 0600 	adc.w	r6, r1, #0
 8015112:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8015116:	f011 00df 	ands.w	r0, r1, #223	; 0xdf
 801511a:	d1eb      	bne.n	80150f4 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x12>
 801511c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8015120:	429a      	cmp	r2, r3
 8015122:	eb70 0206 	sbcs.w	r2, r0, r6
 8015126:	d303      	bcc.n	8015130 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x4e>
 8015128:	602b      	str	r3, [r5, #0]
 801512a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801512c:	2001      	movs	r0, #1
 801512e:	e7fc      	b.n	801512a <Sscan::Uint32(char const*, char const*, unsigned int&)+0x48>
 8015130:	2002      	movs	r0, #2
 8015132:	e7fa      	b.n	801512a <Sscan::Uint32(char const*, char const*, unsigned int&)+0x48>

08015134 <Sscan::Uint8(char const*, char const*, unsigned char&)>:
 8015134:	b538      	push	{r3, r4, r5, lr}
 8015136:	4615      	mov	r5, r2
 8015138:	f000 f819 	bl	801516e <Sscan::checkName(char const*, char const*)>
 801513c:	b198      	cbz	r0, 8015166 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x32>
 801513e:	4604      	mov	r4, r0
 8015140:	2100      	movs	r1, #0
 8015142:	220a      	movs	r2, #10
 8015144:	7823      	ldrb	r3, [r4, #0]
 8015146:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
 801514a:	2809      	cmp	r0, #9
 801514c:	d80d      	bhi.n	801516a <Sscan::Uint8(char const*, char const*, unsigned char&)+0x36>
 801514e:	fb02 3101 	mla	r1, r2, r1, r3
 8015152:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8015156:	3930      	subs	r1, #48	; 0x30
 8015158:	f013 00df 	ands.w	r0, r3, #223	; 0xdf
 801515c:	d1f2      	bne.n	8015144 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x10>
 801515e:	29ff      	cmp	r1, #255	; 0xff
 8015160:	d803      	bhi.n	801516a <Sscan::Uint8(char const*, char const*, unsigned char&)+0x36>
 8015162:	7029      	strb	r1, [r5, #0]
 8015164:	bd38      	pop	{r3, r4, r5, pc}
 8015166:	2001      	movs	r0, #1
 8015168:	e7fc      	b.n	8015164 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>
 801516a:	2002      	movs	r0, #2
 801516c:	e7fa      	b.n	8015164 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>

0801516e <Sscan::checkName(char const*, char const*)>:
 801516e:	4603      	mov	r3, r0
 8015170:	b510      	push	{r4, lr}
 8015172:	3901      	subs	r1, #1
 8015174:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 8015178:	461c      	mov	r4, r3
 801517a:	f813 2b01 	ldrb.w	r2, [r3], #1
 801517e:	b120      	cbz	r0, 801518a <Sscan::checkName(char const*, char const*)+0x1c>
 8015180:	b10a      	cbz	r2, 8015186 <Sscan::checkName(char const*, char const*)+0x18>
 8015182:	4290      	cmp	r0, r2
 8015184:	d0f6      	beq.n	8015174 <Sscan::checkName(char const*, char const*)+0x6>
 8015186:	2000      	movs	r0, #0
 8015188:	e006      	b.n	8015198 <Sscan::checkName(char const*, char const*)+0x2a>
 801518a:	2a3d      	cmp	r2, #61	; 0x3d
 801518c:	d104      	bne.n	8015198 <Sscan::checkName(char const*, char const*)+0x2a>
 801518e:	7860      	ldrb	r0, [r4, #1]
 8015190:	f010 00df 	ands.w	r0, r0, #223	; 0xdf
 8015194:	d000      	beq.n	8015198 <Sscan::checkName(char const*, char const*)+0x2a>
 8015196:	1c60      	adds	r0, r4, #1
 8015198:	bd10      	pop	{r4, pc}

0801519a <LightSet::GetSlotInfo(unsigned short, lightset::SlotInfo&)>:
 801519a:	2300      	movs	r3, #0
 801519c:	2001      	movs	r0, #1
 801519e:	7093      	strb	r3, [r2, #2]
 80151a0:	8010      	strh	r0, [r2, #0]
 80151a2:	4770      	bx	lr

080151a4 <Display::PrintInfo() [clone .isra.0]>:
 80151a4:	b910      	cbnz	r0, 80151ac <Display::PrintInfo() [clone .isra.0]+0x8>
 80151a6:	4803      	ldr	r0, [pc, #12]	; (80151b4 <Display::PrintInfo() [clone .isra.0]+0x10>)
 80151a8:	f000 bde9 	b.w	8015d7e <puts>
 80151ac:	6803      	ldr	r3, [r0, #0]
 80151ae:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80151b0:	4718      	bx	r3
 80151b2:	bf00      	nop
 80151b4:	0801a3c5 	stmdaeq	r1, {r0, r2, r6, r7, r8, r9, sp, pc}

080151b8 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>:
 80151b8:	b513      	push	{r0, r1, r4, lr}
 80151ba:	4604      	mov	r4, r0
 80151bc:	0a13      	lsrs	r3, r2, #8
 80151be:	7800      	ldrb	r0, [r0, #0]
 80151c0:	f88d 1004 	strb.w	r1, [sp, #4]
 80151c4:	f88d 3005 	strb.w	r3, [sp, #5]
 80151c8:	f88d 2006 	strb.w	r2, [sp, #6]
 80151cc:	f001 fe80 	bl	8016ed0 <gd32_i2c_set_address(unsigned char)>
 80151d0:	6860      	ldr	r0, [r4, #4]
 80151d2:	f001 fe75 	bl	8016ec0 <gd32_i2c_set_baudrate(unsigned int)>
 80151d6:	2103      	movs	r1, #3
 80151d8:	a801      	add	r0, sp, #4
 80151da:	f001 fe7f 	bl	8016edc <gd32_i2c_write(char const*, unsigned int)>
 80151de:	b002      	add	sp, #8
 80151e0:	bd10      	pop	{r4, pc}

080151e2 <HAL_I2C::IsConnected_(unsigned char, unsigned int)>:
 80151e2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80151e4:	460d      	mov	r5, r1
 80151e6:	4604      	mov	r4, r0
 80151e8:	f001 fe72 	bl	8016ed0 <gd32_i2c_set_address(unsigned char)>
 80151ec:	4628      	mov	r0, r5
 80151ee:	f001 fe67 	bl	8016ec0 <gd32_i2c_set_baudrate(unsigned int)>
 80151f2:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 80151f6:	2b07      	cmp	r3, #7
 80151f8:	d902      	bls.n	8015200 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x1e>
 80151fa:	3c50      	subs	r4, #80	; 0x50
 80151fc:	2c0f      	cmp	r4, #15
 80151fe:	d809      	bhi.n	8015214 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x32>
 8015200:	2101      	movs	r1, #1
 8015202:	f10d 0007 	add.w	r0, sp, #7
 8015206:	f001 fecf 	bl	8016fa8 <gd32_i2c_read(char*, unsigned int)>
 801520a:	fab0 f080 	clz	r0, r0
 801520e:	0940      	lsrs	r0, r0, #5
 8015210:	b003      	add	sp, #12
 8015212:	bd30      	pop	{r4, r5, pc}
 8015214:	2100      	movs	r1, #0
 8015216:	4608      	mov	r0, r1
 8015218:	f001 fe60 	bl	8016edc <gd32_i2c_write(char const*, unsigned int)>
 801521c:	e7f5      	b.n	801520a <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x28>

0801521e <Display::Detect7Segment()>:
 801521e:	b538      	push	{r3, r4, r5, lr}
 8015220:	68c1      	ldr	r1, [r0, #12]
 8015222:	4604      	mov	r4, r0
 8015224:	7a00      	ldrb	r0, [r0, #8]
 8015226:	f7ff ffdc 	bl	80151e2 <HAL_I2C::IsConnected_(unsigned char, unsigned int)>
 801522a:	7460      	strb	r0, [r4, #17]
 801522c:	b170      	cbz	r0, 801524c <Display::Detect7Segment()+0x2e>
 801522e:	2200      	movs	r2, #0
 8015230:	f104 0508 	add.w	r5, r4, #8
 8015234:	4611      	mov	r1, r2
 8015236:	4628      	mov	r0, r5
 8015238:	f7ff ffbe 	bl	80151b8 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 801523c:	7c63      	ldrb	r3, [r4, #17]
 801523e:	b12b      	cbz	r3, 801524c <Display::Detect7Segment()+0x2e>
 8015240:	f24c 02ff 	movw	r2, #49407	; 0xc0ff
 8015244:	2112      	movs	r1, #18
 8015246:	4628      	mov	r0, r5
 8015248:	f7ff ffb6 	bl	80151b8 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 801524c:	bd38      	pop	{r3, r4, r5, pc}

0801524e <Display::Detect(display::Type)>:
 801524e:	2902      	cmp	r1, #2
 8015250:	b538      	push	{r3, r4, r5, lr}
 8015252:	4604      	mov	r4, r0
 8015254:	d014      	beq.n	8015280 <Display::Detect(display::Type)+0x32>
 8015256:	2904      	cmp	r1, #4
 8015258:	d01b      	beq.n	8015292 <Display::Detect(display::Type)+0x44>
 801525a:	69a0      	ldr	r0, [r4, #24]
 801525c:	b168      	cbz	r0, 801527a <Display::Detect(display::Type)+0x2c>
 801525e:	6803      	ldr	r3, [r0, #0]
 8015260:	689b      	ldr	r3, [r3, #8]
 8015262:	4798      	blx	r3
 8015264:	4603      	mov	r3, r0
 8015266:	69a0      	ldr	r0, [r4, #24]
 8015268:	b9ab      	cbnz	r3, 8015296 <Display::Detect(display::Type)+0x48>
 801526a:	b110      	cbz	r0, 8015272 <Display::Detect(display::Type)+0x24>
 801526c:	6803      	ldr	r3, [r0, #0]
 801526e:	685b      	ldr	r3, [r3, #4]
 8015270:	4798      	blx	r3
 8015272:	2300      	movs	r3, #0
 8015274:	61a3      	str	r3, [r4, #24]
 8015276:	2304      	movs	r3, #4
 8015278:	6023      	str	r3, [r4, #0]
 801527a:	2300      	movs	r3, #0
 801527c:	6163      	str	r3, [r4, #20]
 801527e:	e010      	b.n	80152a2 <Display::Detect(display::Type)+0x54>
 8015280:	2018      	movs	r0, #24
 8015282:	f000 fc81 	bl	8015b88 <operator new(unsigned int)>
 8015286:	4605      	mov	r5, r0
 8015288:	2100      	movs	r1, #0
 801528a:	f000 f89b 	bl	80153c4 <Ssd1306::Ssd1306(TOledPanel)>
 801528e:	61a5      	str	r5, [r4, #24]
 8015290:	e7e3      	b.n	801525a <Display::Detect(display::Type)+0xc>
 8015292:	6001      	str	r1, [r0, #0]
 8015294:	e7e1      	b.n	801525a <Display::Detect(display::Type)+0xc>
 8015296:	6803      	ldr	r3, [r0, #0]
 8015298:	68db      	ldr	r3, [r3, #12]
 801529a:	4798      	blx	r3
 801529c:	69a3      	ldr	r3, [r4, #24]
 801529e:	2b00      	cmp	r3, #0
 80152a0:	d0eb      	beq.n	801527a <Display::Detect(display::Type)+0x2c>
 80152a2:	bd38      	pop	{r3, r4, r5, pc}

080152a4 <Display::Display()>:
 80152a4:	2304      	movs	r3, #4
 80152a6:	b510      	push	{r4, lr}
 80152a8:	6003      	str	r3, [r0, #0]
 80152aa:	4b0d      	ldr	r3, [pc, #52]	; (80152e0 <Display::Display()+0x3c>)
 80152ac:	4604      	mov	r4, r0
 80152ae:	681b      	ldr	r3, [r3, #0]
 80152b0:	4a0c      	ldr	r2, [pc, #48]	; (80152e4 <Display::Display()+0x40>)
 80152b2:	6043      	str	r3, [r0, #4]
 80152b4:	2321      	movs	r3, #33	; 0x21
 80152b6:	7203      	strb	r3, [r0, #8]
 80152b8:	4b0b      	ldr	r3, [pc, #44]	; (80152e8 <Display::Display()+0x44>)
 80152ba:	2102      	movs	r1, #2
 80152bc:	60c3      	str	r3, [r0, #12]
 80152be:	2300      	movs	r3, #0
 80152c0:	e9c0 2305 	strd	r2, r3, [r0, #20]
 80152c4:	8203      	strh	r3, [r0, #16]
 80152c6:	4b09      	ldr	r3, [pc, #36]	; (80152ec <Display::Display()+0x48>)
 80152c8:	6018      	str	r0, [r3, #0]
 80152ca:	f7ff ffc0 	bl	801524e <Display::Detect(display::Type)>
 80152ce:	4620      	mov	r0, r4
 80152d0:	f7ff ffa5 	bl	801521e <Display::Detect7Segment()>
 80152d4:	69a0      	ldr	r0, [r4, #24]
 80152d6:	f7ff ff65 	bl	80151a4 <Display::PrintInfo() [clone .isra.0]>
 80152da:	4620      	mov	r0, r4
 80152dc:	bd10      	pop	{r4, pc}
 80152de:	bf00      	nop
 80152e0:	20013e04 	andcs	r3, r1, r4, lsl #28
 80152e4:	000493e0 	andeq	r9, r4, r0, ror #7
 80152e8:	00061a80 	andeq	r1, r6, r0, lsl #21
 80152ec:	20013cf4 	strdcs	r3, [r1], -r4

080152f0 <Ssd1306::~Ssd1306()>:
 80152f0:	4770      	bx	lr

080152f2 <Ssd1306::SetCursor(unsigned int)>:
 80152f2:	4770      	bx	lr

080152f4 <Ssd1306::PrintInfo()>:
 80152f4:	b410      	push	{r4}
 80152f6:	4906      	ldr	r1, [pc, #24]	; (8015310 <Ssd1306::PrintInfo()+0x1c>)
 80152f8:	7c44      	ldrb	r4, [r0, #17]
 80152fa:	7903      	ldrb	r3, [r0, #4]
 80152fc:	7942      	ldrb	r2, [r0, #5]
 80152fe:	4805      	ldr	r0, [pc, #20]	; (8015314 <Ssd1306::PrintInfo()+0x20>)
 8015300:	2c00      	cmp	r4, #0
 8015302:	bf08      	it	eq
 8015304:	4601      	moveq	r1, r0
 8015306:	4804      	ldr	r0, [pc, #16]	; (8015318 <Ssd1306::PrintInfo()+0x24>)
 8015308:	bc10      	pop	{r4}
 801530a:	f7f3 be49 	b.w	8008fa0 <printf>
 801530e:	bf00      	nop
 8015310:	0801a3d6 	stmdaeq	r1, {r1, r2, r4, r6, r7, r8, r9, sp, pc}
 8015314:	0801a3dd 	stmdaeq	r1, {r0, r2, r3, r4, r6, r7, r8, r9, sp, pc}
 8015318:	0801a3e5 	stmdaeq	r1, {r0, r2, r5, r6, r7, r8, r9, sp, pc}

0801531c <Ssd1306::~Ssd1306()>:
 801531c:	b510      	push	{r4, lr}
 801531e:	4604      	mov	r4, r0
 8015320:	f000 fc2e 	bl	8015b80 <operator delete(void*)>
 8015324:	4620      	mov	r0, r4
 8015326:	bd10      	pop	{r4, pc}

08015328 <HAL_I2C::Setup()>:
 8015328:	b510      	push	{r4, lr}
 801532a:	4604      	mov	r4, r0
 801532c:	7800      	ldrb	r0, [r0, #0]
 801532e:	f001 fdcf 	bl	8016ed0 <gd32_i2c_set_address(unsigned char)>
 8015332:	6860      	ldr	r0, [r4, #4]
 8015334:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015338:	f001 bdc2 	b.w	8016ec0 <gd32_i2c_set_baudrate(unsigned int)>

0801533c <Ssd1306::PutChar(int)>:
 801533c:	b510      	push	{r4, lr}
 801533e:	f1a1 0420 	sub.w	r4, r1, #32
 8015342:	2c5f      	cmp	r4, #95	; 0x5f
 8015344:	bf88      	it	hi
 8015346:	2400      	movhi	r4, #0
 8015348:	3008      	adds	r0, #8
 801534a:	f7ff ffed 	bl	8015328 <HAL_I2C::Setup()>
 801534e:	4804      	ldr	r0, [pc, #16]	; (8015360 <Ssd1306::PutChar(int)+0x24>)
 8015350:	ebc4 04c4 	rsb	r4, r4, r4, lsl #3
 8015354:	4420      	add	r0, r4
 8015356:	2107      	movs	r1, #7
 8015358:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801535c:	f001 bdbe 	b.w	8016edc <gd32_i2c_write(char const*, unsigned int)>
 8015360:	0801a3f8 	stmdaeq	r1, {r3, r4, r5, r6, r7, r8, r9, sp, pc}

08015364 <Ssd1306::PutString(char const*)>:
 8015364:	b538      	push	{r3, r4, r5, lr}
 8015366:	4605      	mov	r5, r0
 8015368:	1e4c      	subs	r4, r1, #1
 801536a:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 801536e:	b119      	cbz	r1, 8015378 <Ssd1306::PutString(char const*)+0x14>
 8015370:	4628      	mov	r0, r5
 8015372:	f7ff ffe3 	bl	801533c <Ssd1306::PutChar(int)>
 8015376:	e7f8      	b.n	801536a <Ssd1306::PutString(char const*)+0x6>
 8015378:	bd38      	pop	{r3, r4, r5, pc}

0801537a <Ssd1306::Text(char const*, unsigned int)>:
 801537a:	b570      	push	{r4, r5, r6, lr}
 801537c:	7903      	ldrb	r3, [r0, #4]
 801537e:	4605      	mov	r5, r0
 8015380:	460c      	mov	r4, r1
 8015382:	4293      	cmp	r3, r2
 8015384:	bf94      	ite	ls
 8015386:	18ce      	addls	r6, r1, r3
 8015388:	188e      	addhi	r6, r1, r2
 801538a:	42b4      	cmp	r4, r6
 801538c:	d005      	beq.n	801539a <Ssd1306::Text(char const*, unsigned int)+0x20>
 801538e:	4628      	mov	r0, r5
 8015390:	f814 1b01 	ldrb.w	r1, [r4], #1
 8015394:	f7ff ffd2 	bl	801533c <Ssd1306::PutChar(int)>
 8015398:	e7f7      	b.n	801538a <Ssd1306::Text(char const*, unsigned int)+0x10>
 801539a:	bd70      	pop	{r4, r5, r6, pc}

0801539c <Ssd1306::InitMembers()>:
 801539c:	7c03      	ldrb	r3, [r0, #16]
 801539e:	b12b      	cbz	r3, 80153ac <Ssd1306::InitMembers()+0x10>
 80153a0:	3b01      	subs	r3, #1
 80153a2:	2b01      	cmp	r3, #1
 80153a4:	d908      	bls.n	80153b8 <Ssd1306::InitMembers()+0x1c>
 80153a6:	f640 0315 	movw	r3, #2069	; 0x815
 80153aa:	e007      	b.n	80153bc <Ssd1306::InitMembers()+0x20>
 80153ac:	f640 0315 	movw	r3, #2069	; 0x815
 80153b0:	8083      	strh	r3, [r0, #4]
 80153b2:	2308      	movs	r3, #8
 80153b4:	6143      	str	r3, [r0, #20]
 80153b6:	4770      	bx	lr
 80153b8:	f240 4315 	movw	r3, #1045	; 0x415
 80153bc:	8083      	strh	r3, [r0, #4]
 80153be:	2304      	movs	r3, #4
 80153c0:	e7f8      	b.n	80153b4 <Ssd1306::InitMembers()+0x18>
	...

080153c4 <Ssd1306::Ssd1306(TOledPanel)>:
 80153c4:	4a08      	ldr	r2, [pc, #32]	; (80153e8 <Ssd1306::Ssd1306(TOledPanel)+0x24>)
 80153c6:	b508      	push	{r3, lr}
 80153c8:	6002      	str	r2, [r0, #0]
 80153ca:	227f      	movs	r2, #127	; 0x7f
 80153cc:	80c2      	strh	r2, [r0, #6]
 80153ce:	223c      	movs	r2, #60	; 0x3c
 80153d0:	7202      	strb	r2, [r0, #8]
 80153d2:	4a06      	ldr	r2, [pc, #24]	; (80153ec <Ssd1306::Ssd1306(TOledPanel)+0x28>)
 80153d4:	7401      	strb	r1, [r0, #16]
 80153d6:	60c2      	str	r2, [r0, #12]
 80153d8:	2200      	movs	r2, #0
 80153da:	7442      	strb	r2, [r0, #17]
 80153dc:	4a04      	ldr	r2, [pc, #16]	; (80153f0 <Ssd1306::Ssd1306(TOledPanel)+0x2c>)
 80153de:	6010      	str	r0, [r2, #0]
 80153e0:	f7ff ffdc 	bl	801539c <Ssd1306::InitMembers()>
 80153e4:	bd08      	pop	{r3, pc}
 80153e6:	bf00      	nop
 80153e8:	0801a6d0 	stmdaeq	r1, {r4, r6, r7, r9, sl, sp, pc}
 80153ec:	00061a80 	andeq	r1, r6, r0, lsl #21
 80153f0:	20013d80 	andcs	r3, r1, r0, lsl #27

080153f4 <Ssd1306::SendCommand(unsigned char)>:
 80153f4:	2300      	movs	r3, #0
 80153f6:	b507      	push	{r0, r1, r2, lr}
 80153f8:	3008      	adds	r0, #8
 80153fa:	f88d 3004 	strb.w	r3, [sp, #4]
 80153fe:	f88d 1005 	strb.w	r1, [sp, #5]
 8015402:	f7ff ff91 	bl	8015328 <HAL_I2C::Setup()>
 8015406:	2102      	movs	r1, #2
 8015408:	a801      	add	r0, sp, #4
 801540a:	f001 fd67 	bl	8016edc <gd32_i2c_write(char const*, unsigned int)>
 801540e:	b003      	add	sp, #12
 8015410:	f85d fb04 	ldr.w	pc, [sp], #4

08015414 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>:
 8015414:	2914      	cmp	r1, #20
 8015416:	b570      	push	{r4, r5, r6, lr}
 8015418:	4605      	mov	r5, r0
 801541a:	4616      	mov	r6, r2
 801541c:	d81c      	bhi.n	8015458 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 801541e:	7943      	ldrb	r3, [r0, #5]
 8015420:	4293      	cmp	r3, r2
 8015422:	d919      	bls.n	8015458 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 8015424:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8015428:	7c43      	ldrb	r3, [r0, #17]
 801542a:	004c      	lsls	r4, r1, #1
 801542c:	b2e4      	uxtb	r4, r4
 801542e:	b10b      	cbz	r3, 8015434 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x20>
 8015430:	3404      	adds	r4, #4
 8015432:	b2e4      	uxtb	r4, r4
 8015434:	4628      	mov	r0, r5
 8015436:	f004 010e 	and.w	r1, r4, #14
 801543a:	f7ff ffdb 	bl	80153f4 <Ssd1306::SendCommand(unsigned char)>
 801543e:	0921      	lsrs	r1, r4, #4
 8015440:	4628      	mov	r0, r5
 8015442:	f041 0110 	orr.w	r1, r1, #16
 8015446:	f7ff ffd5 	bl	80153f4 <Ssd1306::SendCommand(unsigned char)>
 801544a:	4628      	mov	r0, r5
 801544c:	f046 01b0 	orr.w	r1, r6, #176	; 0xb0
 8015450:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015454:	f7ff bfce 	b.w	80153f4 <Ssd1306::SendCommand(unsigned char)>
 8015458:	bd70      	pop	{r4, r5, r6, pc}

0801545a <Ssd1306::TextLine(unsigned char, char const*, unsigned int)>:
 801545a:	b570      	push	{r4, r5, r6, lr}
 801545c:	4604      	mov	r4, r0
 801545e:	4615      	mov	r5, r2
 8015460:	461e      	mov	r6, r3
 8015462:	b171      	cbz	r1, 8015482 <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x28>
 8015464:	7943      	ldrb	r3, [r0, #5]
 8015466:	428b      	cmp	r3, r1
 8015468:	d30b      	bcc.n	8015482 <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x28>
 801546a:	3901      	subs	r1, #1
 801546c:	b2ca      	uxtb	r2, r1
 801546e:	2100      	movs	r1, #0
 8015470:	f7ff ffd0 	bl	8015414 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8015474:	4632      	mov	r2, r6
 8015476:	4629      	mov	r1, r5
 8015478:	4620      	mov	r0, r4
 801547a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801547e:	f7ff bf7c 	b.w	801537a <Ssd1306::Text(char const*, unsigned int)>
 8015482:	bd70      	pop	{r4, r5, r6, pc}

08015484 <Ssd1306::ClearLine(unsigned char)>:
 8015484:	b538      	push	{r3, r4, r5, lr}
 8015486:	4605      	mov	r5, r0
 8015488:	b1b9      	cbz	r1, 80154ba <Ssd1306::ClearLine(unsigned char)+0x36>
 801548a:	7943      	ldrb	r3, [r0, #5]
 801548c:	428b      	cmp	r3, r1
 801548e:	d314      	bcc.n	80154ba <Ssd1306::ClearLine(unsigned char)+0x36>
 8015490:	3901      	subs	r1, #1
 8015492:	b2cc      	uxtb	r4, r1
 8015494:	4622      	mov	r2, r4
 8015496:	2100      	movs	r1, #0
 8015498:	f7ff ffbc 	bl	8015414 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 801549c:	f105 0008 	add.w	r0, r5, #8
 80154a0:	f7ff ff42 	bl	8015328 <HAL_I2C::Setup()>
 80154a4:	2181      	movs	r1, #129	; 0x81
 80154a6:	4805      	ldr	r0, [pc, #20]	; (80154bc <Ssd1306::ClearLine(unsigned char)+0x38>)
 80154a8:	f001 fd18 	bl	8016edc <gd32_i2c_write(char const*, unsigned int)>
 80154ac:	4622      	mov	r2, r4
 80154ae:	4628      	mov	r0, r5
 80154b0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80154b4:	2100      	movs	r1, #0
 80154b6:	f7ff bfad 	b.w	8015414 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 80154ba:	bd38      	pop	{r3, r4, r5, pc}
 80154bc:	20013cf8 	strdcs	r3, [r1], -r8

080154c0 <Ssd1306::SetSleep(bool)>:
 80154c0:	b111      	cbz	r1, 80154c8 <Ssd1306::SetSleep(bool)+0x8>
 80154c2:	21ae      	movs	r1, #174	; 0xae
 80154c4:	f7ff bf96 	b.w	80153f4 <Ssd1306::SendCommand(unsigned char)>
 80154c8:	21af      	movs	r1, #175	; 0xaf
 80154ca:	e7fb      	b.n	80154c4 <Ssd1306::SetSleep(bool)+0x4>

080154cc <Ssd1306::SetContrast(unsigned char)>:
 80154cc:	b538      	push	{r3, r4, r5, lr}
 80154ce:	4604      	mov	r4, r0
 80154d0:	460d      	mov	r5, r1
 80154d2:	7181      	strb	r1, [r0, #6]
 80154d4:	2181      	movs	r1, #129	; 0x81
 80154d6:	f7ff ff8d 	bl	80153f4 <Ssd1306::SendCommand(unsigned char)>
 80154da:	4629      	mov	r1, r5
 80154dc:	4620      	mov	r0, r4
 80154de:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80154e2:	f7ff bf87 	b.w	80153f4 <Ssd1306::SendCommand(unsigned char)>

080154e6 <Ssd1306::SetFlipVertically(bool)>:
 80154e6:	b510      	push	{r4, lr}
 80154e8:	4604      	mov	r4, r0
 80154ea:	71c1      	strb	r1, [r0, #7]
 80154ec:	b141      	cbz	r1, 8015500 <Ssd1306::SetFlipVertically(bool)+0x1a>
 80154ee:	21c0      	movs	r1, #192	; 0xc0
 80154f0:	f7ff ff80 	bl	80153f4 <Ssd1306::SendCommand(unsigned char)>
 80154f4:	21a0      	movs	r1, #160	; 0xa0
 80154f6:	4620      	mov	r0, r4
 80154f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80154fc:	f7ff bf7a 	b.w	80153f4 <Ssd1306::SendCommand(unsigned char)>
 8015500:	21c8      	movs	r1, #200	; 0xc8
 8015502:	f7ff ff77 	bl	80153f4 <Ssd1306::SendCommand(unsigned char)>
 8015506:	21a1      	movs	r1, #161	; 0xa1
 8015508:	e7f5      	b.n	80154f6 <Ssd1306::SetFlipVertically(bool)+0x10>
	...

0801550c <Ssd1306::CheckSH1106()>:
 801550c:	b570      	push	{r4, r5, r6, lr}
 801550e:	4604      	mov	r4, r0
 8015510:	b086      	sub	sp, #24
 8015512:	2100      	movs	r1, #0
 8015514:	f7ff ff6e 	bl	80153f4 <Ssd1306::SendCommand(unsigned char)>
 8015518:	2190      	movs	r1, #144	; 0x90
 801551a:	4620      	mov	r0, r4
 801551c:	f7ff ff6a 	bl	80153f4 <Ssd1306::SendCommand(unsigned char)>
 8015520:	21b0      	movs	r1, #176	; 0xb0
 8015522:	4620      	mov	r0, r4
 8015524:	f7ff ff66 	bl	80153f4 <Ssd1306::SendCommand(unsigned char)>
 8015528:	4b22      	ldr	r3, [pc, #136]	; (80155b4 <Ssd1306::CheckSH1106()+0xa8>)
 801552a:	f104 0608 	add.w	r6, r4, #8
 801552e:	6818      	ldr	r0, [r3, #0]
 8015530:	791b      	ldrb	r3, [r3, #4]
 8015532:	ad02      	add	r5, sp, #8
 8015534:	9002      	str	r0, [sp, #8]
 8015536:	4630      	mov	r0, r6
 8015538:	712b      	strb	r3, [r5, #4]
 801553a:	f7ff fef5 	bl	8015328 <HAL_I2C::Setup()>
 801553e:	2105      	movs	r1, #5
 8015540:	4628      	mov	r0, r5
 8015542:	f001 fccb 	bl	8016edc <gd32_i2c_write(char const*, unsigned int)>
 8015546:	2100      	movs	r1, #0
 8015548:	4620      	mov	r0, r4
 801554a:	f7ff ff53 	bl	80153f4 <Ssd1306::SendCommand(unsigned char)>
 801554e:	2190      	movs	r1, #144	; 0x90
 8015550:	4620      	mov	r0, r4
 8015552:	f7ff ff4f 	bl	80153f4 <Ssd1306::SendCommand(unsigned char)>
 8015556:	21b0      	movs	r1, #176	; 0xb0
 8015558:	4620      	mov	r0, r4
 801555a:	f7ff ff4b 	bl	80153f4 <Ssd1306::SendCommand(unsigned char)>
 801555e:	2300      	movs	r3, #0
 8015560:	9304      	str	r3, [sp, #16]
 8015562:	f88d 3014 	strb.w	r3, [sp, #20]
 8015566:	2340      	movs	r3, #64	; 0x40
 8015568:	4630      	mov	r0, r6
 801556a:	f88d 3007 	strb.w	r3, [sp, #7]
 801556e:	f7ff fedb 	bl	8015328 <HAL_I2C::Setup()>
 8015572:	2101      	movs	r1, #1
 8015574:	f10d 0007 	add.w	r0, sp, #7
 8015578:	f001 fcb0 	bl	8016edc <gd32_i2c_write(char const*, unsigned int)>
 801557c:	4630      	mov	r0, r6
 801557e:	f7ff fed3 	bl	8015328 <HAL_I2C::Setup()>
 8015582:	2105      	movs	r1, #5
 8015584:	a804      	add	r0, sp, #16
 8015586:	f001 fd0f 	bl	8016fa8 <gd32_i2c_read(char*, unsigned int)>
 801558a:	2201      	movs	r2, #1
 801558c:	5cab      	ldrb	r3, [r5, r2]
 801558e:	a904      	add	r1, sp, #16
 8015590:	3201      	adds	r2, #1
 8015592:	4411      	add	r1, r2
 8015594:	f811 1c01 	ldrb.w	r1, [r1, #-1]
 8015598:	428b      	cmp	r3, r1
 801559a:	d006      	beq.n	80155aa <Ssd1306::CheckSH1106()+0x9e>
 801559c:	1a5b      	subs	r3, r3, r1
 801559e:	fab3 f383 	clz	r3, r3
 80155a2:	095b      	lsrs	r3, r3, #5
 80155a4:	7463      	strb	r3, [r4, #17]
 80155a6:	b006      	add	sp, #24
 80155a8:	bd70      	pop	{r4, r5, r6, pc}
 80155aa:	2a05      	cmp	r2, #5
 80155ac:	d1ee      	bne.n	801558c <Ssd1306::CheckSH1106()+0x80>
 80155ae:	2300      	movs	r3, #0
 80155b0:	e7f5      	b.n	801559e <Ssd1306::CheckSH1106()+0x92>
 80155b2:	bf00      	nop
 80155b4:	0801a3f1 	stmdaeq	r1, {r0, r4, r5, r6, r7, r8, r9, sp, pc}

080155b8 <Ssd1306::Cls()>:
 80155b8:	7c43      	ldrb	r3, [r0, #17]
 80155ba:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80155be:	2b00      	cmp	r3, #0
 80155c0:	bf0c      	ite	eq
 80155c2:	2500      	moveq	r5, #0
 80155c4:	2504      	movne	r5, #4
 80155c6:	4604      	mov	r4, r0
 80155c8:	2600      	movs	r6, #0
 80155ca:	f1a5 077f 	sub.w	r7, r5, #127	; 0x7f
 80155ce:	f045 0810 	orr.w	r8, r5, #16
 80155d2:	b2ff      	uxtb	r7, r7
 80155d4:	6963      	ldr	r3, [r4, #20]
 80155d6:	4629      	mov	r1, r5
 80155d8:	42b3      	cmp	r3, r6
 80155da:	4620      	mov	r0, r4
 80155dc:	d91b      	bls.n	8015616 <Ssd1306::Cls()+0x5e>
 80155de:	f7ff ff09 	bl	80153f4 <Ssd1306::SendCommand(unsigned char)>
 80155e2:	4641      	mov	r1, r8
 80155e4:	4620      	mov	r0, r4
 80155e6:	f7ff ff05 	bl	80153f4 <Ssd1306::SendCommand(unsigned char)>
 80155ea:	f066 014f 	orn	r1, r6, #79	; 0x4f
 80155ee:	4620      	mov	r0, r4
 80155f0:	b2c9      	uxtb	r1, r1
 80155f2:	f7ff feff 	bl	80153f4 <Ssd1306::SendCommand(unsigned char)>
 80155f6:	7c23      	ldrb	r3, [r4, #16]
 80155f8:	b123      	cbz	r3, 8015604 <Ssd1306::Cls()+0x4c>
 80155fa:	3b01      	subs	r3, #1
 80155fc:	2b01      	cmp	r3, #1
 80155fe:	d901      	bls.n	8015604 <Ssd1306::Cls()+0x4c>
 8015600:	3601      	adds	r6, #1
 8015602:	e7e7      	b.n	80155d4 <Ssd1306::Cls()+0x1c>
 8015604:	f104 0008 	add.w	r0, r4, #8
 8015608:	f7ff fe8e 	bl	8015328 <HAL_I2C::Setup()>
 801560c:	4639      	mov	r1, r7
 801560e:	4808      	ldr	r0, [pc, #32]	; (8015630 <Ssd1306::Cls()+0x78>)
 8015610:	f001 fc64 	bl	8016edc <gd32_i2c_write(char const*, unsigned int)>
 8015614:	e7f4      	b.n	8015600 <Ssd1306::Cls()+0x48>
 8015616:	f7ff feed 	bl	80153f4 <Ssd1306::SendCommand(unsigned char)>
 801561a:	4641      	mov	r1, r8
 801561c:	4620      	mov	r0, r4
 801561e:	f7ff fee9 	bl	80153f4 <Ssd1306::SendCommand(unsigned char)>
 8015622:	4620      	mov	r0, r4
 8015624:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8015628:	21b0      	movs	r1, #176	; 0xb0
 801562a:	f7ff bee3 	b.w	80153f4 <Ssd1306::SendCommand(unsigned char)>
 801562e:	bf00      	nop
 8015630:	20013cf8 	strdcs	r3, [r1], -r8

08015634 <Ssd1306::Start()>:
 8015634:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8015636:	7a04      	ldrb	r4, [r0, #8]
 8015638:	68c6      	ldr	r6, [r0, #12]
 801563a:	4605      	mov	r5, r0
 801563c:	4620      	mov	r0, r4
 801563e:	f001 fc47 	bl	8016ed0 <gd32_i2c_set_address(unsigned char)>
 8015642:	4630      	mov	r0, r6
 8015644:	f001 fc3c 	bl	8016ec0 <gd32_i2c_set_baudrate(unsigned int)>
 8015648:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 801564c:	2b07      	cmp	r3, #7
 801564e:	d902      	bls.n	8015656 <Ssd1306::Start()+0x22>
 8015650:	3c50      	subs	r4, #80	; 0x50
 8015652:	2c0f      	cmp	r4, #15
 8015654:	d80f      	bhi.n	8015676 <Ssd1306::Start()+0x42>
 8015656:	2101      	movs	r1, #1
 8015658:	f10d 0007 	add.w	r0, sp, #7
 801565c:	f001 fca4 	bl	8016fa8 <gd32_i2c_read(char*, unsigned int)>
 8015660:	fab0 f480 	clz	r4, r0
 8015664:	0964      	lsrs	r4, r4, #5
 8015666:	b35c      	cbz	r4, 80156c0 <Ssd1306::Start()+0x8c>
 8015668:	7c2e      	ldrb	r6, [r5, #16]
 801566a:	b14e      	cbz	r6, 8015680 <Ssd1306::Start()+0x4c>
 801566c:	3e01      	subs	r6, #1
 801566e:	2e01      	cmp	r6, #1
 8015670:	d929      	bls.n	80156c6 <Ssd1306::Start()+0x92>
 8015672:	2400      	movs	r4, #0
 8015674:	e024      	b.n	80156c0 <Ssd1306::Start()+0x8c>
 8015676:	2100      	movs	r1, #0
 8015678:	4608      	mov	r0, r1
 801567a:	f001 fc2f 	bl	8016edc <gd32_i2c_write(char const*, unsigned int)>
 801567e:	e7ef      	b.n	8015660 <Ssd1306::Start()+0x2c>
 8015680:	4f16      	ldr	r7, [pc, #88]	; (80156dc <Ssd1306::Start()+0xa8>)
 8015682:	4628      	mov	r0, r5
 8015684:	f817 1b01 	ldrb.w	r1, [r7], #1
 8015688:	3601      	adds	r6, #1
 801568a:	f7ff feb3 	bl	80153f4 <Ssd1306::SendCommand(unsigned char)>
 801568e:	2e18      	cmp	r6, #24
 8015690:	d1f7      	bne.n	8015682 <Ssd1306::Start()+0x4e>
 8015692:	2300      	movs	r3, #0
 8015694:	4a12      	ldr	r2, [pc, #72]	; (80156e0 <Ssd1306::Start()+0xac>)
 8015696:	4618      	mov	r0, r3
 8015698:	4611      	mov	r1, r2
 801569a:	3301      	adds	r3, #1
 801569c:	2b86      	cmp	r3, #134	; 0x86
 801569e:	f802 0b01 	strb.w	r0, [r2], #1
 80156a2:	d1fa      	bne.n	801569a <Ssd1306::Start()+0x66>
 80156a4:	2340      	movs	r3, #64	; 0x40
 80156a6:	4628      	mov	r0, r5
 80156a8:	700b      	strb	r3, [r1, #0]
 80156aa:	f7ff ff2f 	bl	801550c <Ssd1306::CheckSH1106()>
 80156ae:	4628      	mov	r0, r5
 80156b0:	f7ff ff82 	bl	80155b8 <Ssd1306::Cls()>
 80156b4:	21af      	movs	r1, #175	; 0xaf
 80156b6:	4628      	mov	r0, r5
 80156b8:	f7ff fe9c 	bl	80153f4 <Ssd1306::SendCommand(unsigned char)>
 80156bc:	2301      	movs	r3, #1
 80156be:	71eb      	strb	r3, [r5, #7]
 80156c0:	4620      	mov	r0, r4
 80156c2:	b003      	add	sp, #12
 80156c4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80156c6:	2600      	movs	r6, #0
 80156c8:	4f06      	ldr	r7, [pc, #24]	; (80156e4 <Ssd1306::Start()+0xb0>)
 80156ca:	4628      	mov	r0, r5
 80156cc:	f817 1b01 	ldrb.w	r1, [r7], #1
 80156d0:	3601      	adds	r6, #1
 80156d2:	f7ff fe8f 	bl	80153f4 <Ssd1306::SendCommand(unsigned char)>
 80156d6:	2e18      	cmp	r6, #24
 80156d8:	d1f7      	bne.n	80156ca <Ssd1306::Start()+0x96>
 80156da:	e7da      	b.n	8015692 <Ssd1306::Start()+0x5e>
 80156dc:	0801a6b0 	stmdaeq	r1, {r4, r5, r7, r9, sl, sp, pc}
 80156e0:	20013cf8 	strdcs	r3, [r1], -r8
 80156e4:	0801a698 	stmdaeq	r1, {r3, r4, r7, r9, sl, sp, pc}

080156e8 <console_init>:
 80156e8:	b508      	push	{r3, lr}
 80156ea:	f000 fc3b 	bl	8015f64 <uart0_init>
 80156ee:	4804      	ldr	r0, [pc, #16]	; (8015700 <console_init+0x18>)
 80156f0:	f000 fc68 	bl	8015fc4 <uart0_puts>
 80156f4:	4803      	ldr	r0, [pc, #12]	; (8015704 <console_init+0x1c>)
 80156f6:	f000 fc65 	bl	8015fc4 <uart0_puts>
 80156fa:	2000      	movs	r0, #0
 80156fc:	bd08      	pop	{r3, pc}
 80156fe:	bf00      	nop
 8015700:	08017f63 	stmdaeq	r1, {r0, r1, r5, r6, r8, r9, sl, fp, ip, sp, lr}
 8015704:	0801a708 	stmdaeq	r1, {r3, r8, r9, sl, sp, pc}

08015708 <console_putc>:
 8015708:	280a      	cmp	r0, #10
 801570a:	b510      	push	{r4, lr}
 801570c:	4604      	mov	r4, r0
 801570e:	d102      	bne.n	8015716 <console_putc+0xe>
 8015710:	200d      	movs	r0, #13
 8015712:	f000 fc37 	bl	8015f84 <uart0_putc>
 8015716:	4620      	mov	r0, r4
 8015718:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801571c:	f000 bc32 	b.w	8015f84 <uart0_putc>

08015720 <console_puts>:
 8015720:	f000 bc50 	b.w	8015fc4 <uart0_puts>

08015724 <console_set_fg_color>:
 8015724:	2807      	cmp	r0, #7
 8015726:	d810      	bhi.n	801574a <console_set_fg_color+0x26>
 8015728:	e8df f000 	tbb	[pc, r0]
 801572c:	0b090704 	bleq	8257344 <__exidx_end+0x23cb40>
 8015730:	0d0f0f0f 	stceq	15, cr0, [pc, #-60]	; 80156fc <console_init+0x14>
 8015734:	4806      	ldr	r0, [pc, #24]	; (8015750 <console_set_fg_color+0x2c>)
 8015736:	f000 bc45 	b.w	8015fc4 <uart0_puts>
 801573a:	4806      	ldr	r0, [pc, #24]	; (8015754 <console_set_fg_color+0x30>)
 801573c:	e7fb      	b.n	8015736 <console_set_fg_color+0x12>
 801573e:	4806      	ldr	r0, [pc, #24]	; (8015758 <console_set_fg_color+0x34>)
 8015740:	e7f9      	b.n	8015736 <console_set_fg_color+0x12>
 8015742:	4806      	ldr	r0, [pc, #24]	; (801575c <console_set_fg_color+0x38>)
 8015744:	e7f7      	b.n	8015736 <console_set_fg_color+0x12>
 8015746:	4806      	ldr	r0, [pc, #24]	; (8015760 <console_set_fg_color+0x3c>)
 8015748:	e7f5      	b.n	8015736 <console_set_fg_color+0x12>
 801574a:	4806      	ldr	r0, [pc, #24]	; (8015764 <console_set_fg_color+0x40>)
 801574c:	e7f3      	b.n	8015736 <console_set_fg_color+0x12>
 801574e:	bf00      	nop
 8015750:	0801a70e 	stmdaeq	r1, {r1, r2, r3, r8, r9, sl, sp, pc}
 8015754:	0801a714 	stmdaeq	r1, {r2, r4, r8, r9, sl, sp, pc}
 8015758:	0801a71a 	stmdaeq	r1, {r1, r3, r4, r8, r9, sl, sp, pc}
 801575c:	0801a720 	stmdaeq	r1, {r5, r8, r9, sl, sp, pc}
 8015760:	08017f63 	stmdaeq	r1, {r0, r1, r5, r6, r8, r9, sl, fp, ip, sp, lr}
 8015764:	0801a726 	stmdaeq	r1, {r1, r2, r5, r8, r9, sl, sp, pc}

08015768 <console_error>:
 8015768:	b510      	push	{r4, lr}
 801576a:	4604      	mov	r4, r0
 801576c:	4805      	ldr	r0, [pc, #20]	; (8015784 <console_error+0x1c>)
 801576e:	f000 fc29 	bl	8015fc4 <uart0_puts>
 8015772:	4620      	mov	r0, r4
 8015774:	f000 fc26 	bl	8015fc4 <uart0_puts>
 8015778:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801577c:	4802      	ldr	r0, [pc, #8]	; (8015788 <console_error+0x20>)
 801577e:	f000 bc21 	b.w	8015fc4 <uart0_puts>
 8015782:	bf00      	nop
 8015784:	0801a714 	stmdaeq	r1, {r2, r4, r8, r9, sl, sp, pc}
 8015788:	08017f63 	stmdaeq	r1, {r0, r1, r5, r6, r8, r9, sl, fp, ip, sp, lr}

0801578c <console_status>:
 801578c:	b510      	push	{r4, lr}
 801578e:	460c      	mov	r4, r1
 8015790:	b280      	uxth	r0, r0
 8015792:	f7ff ffc7 	bl	8015724 <console_set_fg_color>
 8015796:	4807      	ldr	r0, [pc, #28]	; (80157b4 <console_status+0x28>)
 8015798:	f000 fc14 	bl	8015fc4 <uart0_puts>
 801579c:	4620      	mov	r0, r4
 801579e:	f000 fc11 	bl	8015fc4 <uart0_puts>
 80157a2:	200a      	movs	r0, #10
 80157a4:	f7ff ffb0 	bl	8015708 <console_putc>
 80157a8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80157ac:	4802      	ldr	r0, [pc, #8]	; (80157b8 <console_status+0x2c>)
 80157ae:	f000 bc09 	b.w	8015fc4 <uart0_puts>
 80157b2:	bf00      	nop
 80157b4:	0801a708 	stmdaeq	r1, {r3, r8, r9, sl, sp, pc}
 80157b8:	08017f63 	stmdaeq	r1, {r0, r1, r5, r6, r8, r9, sl, fp, ip, sp, lr}

080157bc <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>:
 80157bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80157c0:	4617      	mov	r7, r2
 80157c2:	461e      	mov	r6, r3
 80157c4:	4d14      	ldr	r5, [pc, #80]	; (8015818 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x5c>)
 80157c6:	4b15      	ldr	r3, [pc, #84]	; (801581c <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x60>)
 80157c8:	b086      	sub	sp, #24
 80157ca:	6018      	str	r0, [r3, #0]
 80157cc:	4604      	mov	r4, r0
 80157ce:	f105 0803 	add.w	r8, r5, #3
 80157d2:	2203      	movs	r2, #3
 80157d4:	4628      	mov	r0, r5
 80157d6:	f000 fa96 	bl	8015d06 <memmove>
 80157da:	4639      	mov	r1, r7
 80157dc:	220b      	movs	r2, #11
 80157de:	4640      	mov	r0, r8
 80157e0:	f000 fa91 	bl	8015d06 <memmove>
 80157e4:	f105 030e 	add.w	r3, r5, #14
 80157e8:	4631      	mov	r1, r6
 80157ea:	2208      	movs	r2, #8
 80157ec:	4618      	mov	r0, r3
 80157ee:	f000 fa8a 	bl	8015d06 <memmove>
 80157f2:	2308      	movs	r3, #8
 80157f4:	e9cd 8303 	strd	r8, r3, [sp, #12]
 80157f8:	230b      	movs	r3, #11
 80157fa:	9302      	str	r3, [sp, #8]
 80157fc:	4b08      	ldr	r3, [pc, #32]	; (8015820 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x64>)
 80157fe:	9005      	str	r0, [sp, #20]
 8015800:	e9cd 5300 	strd	r5, r3, [sp]
 8015804:	213f      	movs	r1, #63	; 0x3f
 8015806:	2303      	movs	r3, #3
 8015808:	4a06      	ldr	r2, [pc, #24]	; (8015824 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x68>)
 801580a:	4807      	ldr	r0, [pc, #28]	; (8015828 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x6c>)
 801580c:	f7f3 fbf0 	bl	8008ff0 <snprintf>
 8015810:	4620      	mov	r0, r4
 8015812:	b006      	add	sp, #24
 8015814:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015818:	20013d84 	andcs	r3, r1, r4, lsl #27
 801581c:	20013ddc 	ldrdcs	r3, [r1], -ip
 8015820:	080186b2 	stmdaeq	r1, {r1, r4, r5, r7, r9, sl, pc}
 8015824:	0801a72c 	stmdaeq	r1, {r2, r3, r5, r8, r9, sl, sp, pc}
 8015828:	20013d9a 	mulcs	r1, sl, sp

0801582c <FirmwareVersion::Print(char const*)>:
 801582c:	b510      	push	{r4, lr}
 801582e:	460c      	mov	r4, r1
 8015830:	4804      	ldr	r0, [pc, #16]	; (8015844 <FirmwareVersion::Print(char const*)+0x18>)
 8015832:	f000 faa4 	bl	8015d7e <puts>
 8015836:	b124      	cbz	r4, 8015842 <FirmwareVersion::Print(char const*)+0x16>
 8015838:	4620      	mov	r0, r4
 801583a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801583e:	f000 ba9e 	b.w	8015d7e <puts>
 8015842:	bd10      	pop	{r4, pc}
 8015844:	20013d9a 	mulcs	r1, sl, sp

08015848 <BitBanging595::BitBanging595()>:
 8015848:	4b2c      	ldr	r3, [pc, #176]	; (80158fc <BitBanging595::BitBanging595()+0xb4>)
 801584a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801584e:	6018      	str	r0, [r3, #0]
 8015850:	4604      	mov	r4, r0
 8015852:	f240 6006 	movw	r0, #1542	; 0x606
 8015856:	f000 fe33 	bl	80164c0 <rcu_periph_clock_enable>
 801585a:	f240 6006 	movw	r0, #1542	; 0x606
 801585e:	f000 fe2f 	bl	80164c0 <rcu_periph_clock_enable>
 8015862:	f240 6006 	movw	r0, #1542	; 0x606
 8015866:	f000 fe2b 	bl	80164c0 <rcu_periph_clock_enable>
 801586a:	2304      	movs	r3, #4
 801586c:	2203      	movs	r2, #3
 801586e:	2110      	movs	r1, #16
 8015870:	4823      	ldr	r0, [pc, #140]	; (8015900 <BitBanging595::BitBanging595()+0xb8>)
 8015872:	f000 fd89 	bl	8016388 <gpio_init>
 8015876:	2308      	movs	r3, #8
 8015878:	2203      	movs	r2, #3
 801587a:	2110      	movs	r1, #16
 801587c:	4820      	ldr	r0, [pc, #128]	; (8015900 <BitBanging595::BitBanging595()+0xb8>)
 801587e:	f000 fd83 	bl	8016388 <gpio_init>
 8015882:	2310      	movs	r3, #16
 8015884:	2203      	movs	r2, #3
 8015886:	4619      	mov	r1, r3
 8015888:	481d      	ldr	r0, [pc, #116]	; (8015900 <BitBanging595::BitBanging595()+0xb8>)
 801588a:	f000 fd7d 	bl	8016388 <gpio_init>
 801588e:	2208      	movs	r2, #8
 8015890:	2110      	movs	r1, #16
 8015892:	4b1c      	ldr	r3, [pc, #112]	; (8015904 <BitBanging595::BitBanging595()+0xbc>)
 8015894:	481a      	ldr	r0, [pc, #104]	; (8015900 <BitBanging595::BitBanging595()+0xb8>)
 8015896:	f8c3 2810 	str.w	r2, [r3, #2064]	; 0x810
 801589a:	f8c3 1810 	str.w	r1, [r3, #2064]	; 0x810
 801589e:	f000 fdc9 	bl	8016434 <gpio_bit_reset>
 80158a2:	f3bf 8f6f 	isb	sy
 80158a6:	2518      	movs	r5, #24
 80158a8:	f44f 0600 	mov.w	r6, #8388608	; 0x800000
 80158ac:	f8df 8058 	ldr.w	r8, [pc, #88]	; 8015908 <BitBanging595::BitBanging595()+0xc0>
 80158b0:	4f13      	ldr	r7, [pc, #76]	; (8015900 <BitBanging595::BitBanging595()+0xb8>)
 80158b2:	f8d8 3000 	ldr.w	r3, [r8]
 80158b6:	2104      	movs	r1, #4
 80158b8:	421e      	tst	r6, r3
 80158ba:	4638      	mov	r0, r7
 80158bc:	d01a      	beq.n	80158f4 <BitBanging595::BitBanging595()+0xac>
 80158be:	f000 fdb7 	bl	8016430 <gpio_bit_set>
 80158c2:	f3bf 8f6f 	isb	sy
 80158c6:	2108      	movs	r1, #8
 80158c8:	480d      	ldr	r0, [pc, #52]	; (8015900 <BitBanging595::BitBanging595()+0xb8>)
 80158ca:	f000 fdb3 	bl	8016434 <gpio_bit_reset>
 80158ce:	f3bf 8f6f 	isb	sy
 80158d2:	2108      	movs	r1, #8
 80158d4:	480a      	ldr	r0, [pc, #40]	; (8015900 <BitBanging595::BitBanging595()+0xb8>)
 80158d6:	f000 fdab 	bl	8016430 <gpio_bit_set>
 80158da:	3d01      	subs	r5, #1
 80158dc:	ea4f 0656 	mov.w	r6, r6, lsr #1
 80158e0:	d1e7      	bne.n	80158b2 <BitBanging595::BitBanging595()+0x6a>
 80158e2:	2110      	movs	r1, #16
 80158e4:	4806      	ldr	r0, [pc, #24]	; (8015900 <BitBanging595::BitBanging595()+0xb8>)
 80158e6:	f000 fda3 	bl	8016430 <gpio_bit_set>
 80158ea:	f3bf 8f6f 	isb	sy
 80158ee:	4620      	mov	r0, r4
 80158f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80158f4:	f000 fd9e 	bl	8016434 <gpio_bit_reset>
 80158f8:	e7e3      	b.n	80158c2 <BitBanging595::BitBanging595()+0x7a>
 80158fa:	bf00      	nop
 80158fc:	20013df0 	strdcs	r3, [r1], -r0
 8015900:	40011800 	andmi	r1, r1, r0, lsl #16
 8015904:	40011000 	andmi	r1, r1, r0
 8015908:	20013dec 	andcs	r3, r1, ip, ror #27

0801590c <LedBlink::LedBlink()>:
 801590c:	b510      	push	{r4, lr}
 801590e:	4604      	mov	r4, r0
 8015910:	f7ff ff9a 	bl	8015848 <BitBanging595::BitBanging595()>
 8015914:	2300      	movs	r3, #0
 8015916:	2205      	movs	r2, #5
 8015918:	e9c4 3201 	strd	r3, r2, [r4, #4]
 801591c:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 8015920:	60e3      	str	r3, [r4, #12]
 8015922:	e9c4 2304 	strd	r2, r3, [r4, #16]
 8015926:	61a3      	str	r3, [r4, #24]
 8015928:	4b01      	ldr	r3, [pc, #4]	; (8015930 <LedBlink::LedBlink()+0x24>)
 801592a:	4620      	mov	r0, r4
 801592c:	601c      	str	r4, [r3, #0]
 801592e:	bd10      	pop	{r4, pc}
 8015930:	20013de0 	andcs	r3, r1, r0, ror #27

08015934 <LedBlink::SetMode(ledblink::Mode)>:
 8015934:	6883      	ldr	r3, [r0, #8]
 8015936:	428b      	cmp	r3, r1
 8015938:	d02c      	beq.n	8015994 <LedBlink::SetMode(ledblink::Mode)+0x60>
 801593a:	1e4b      	subs	r3, r1, #1
 801593c:	6081      	str	r1, [r0, #8]
 801593e:	2b03      	cmp	r3, #3
 8015940:	d803      	bhi.n	801594a <LedBlink::SetMode(ledblink::Mode)+0x16>
 8015942:	e8df f003 	tbb	[pc, r3]
 8015946:	231e180f 	tstcs	lr, #983040	; 0xf0000
 801594a:	2300      	movs	r3, #0
 801594c:	4a12      	ldr	r2, [pc, #72]	; (8015998 <LedBlink::SetMode(ledblink::Mode)+0x64>)
 801594e:	6043      	str	r3, [r0, #4]
 8015950:	6103      	str	r3, [r0, #16]
 8015952:	6813      	ldr	r3, [r2, #0]
 8015954:	f443 1360 	orr.w	r3, r3, #3670016	; 0x380000
 8015958:	6013      	str	r3, [r2, #0]
 801595a:	68c0      	ldr	r0, [r0, #12]
 801595c:	b1d0      	cbz	r0, 8015994 <LedBlink::SetMode(ledblink::Mode)+0x60>
 801595e:	6803      	ldr	r3, [r0, #0]
 8015960:	689b      	ldr	r3, [r3, #8]
 8015962:	4718      	bx	r3
 8015964:	23ff      	movs	r3, #255	; 0xff
 8015966:	6043      	str	r3, [r0, #4]
 8015968:	2300      	movs	r3, #0
 801596a:	4a0b      	ldr	r2, [pc, #44]	; (8015998 <LedBlink::SetMode(ledblink::Mode)+0x64>)
 801596c:	6103      	str	r3, [r0, #16]
 801596e:	6813      	ldr	r3, [r2, #0]
 8015970:	f423 1360 	bic.w	r3, r3, #3670016	; 0x380000
 8015974:	e7f0      	b.n	8015958 <LedBlink::SetMode(ledblink::Mode)+0x24>
 8015976:	2301      	movs	r3, #1
 8015978:	6043      	str	r3, [r0, #4]
 801597a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 801597e:	6103      	str	r3, [r0, #16]
 8015980:	e7eb      	b.n	801595a <LedBlink::SetMode(ledblink::Mode)+0x26>
 8015982:	2303      	movs	r3, #3
 8015984:	6043      	str	r3, [r0, #4]
 8015986:	f240 134d 	movw	r3, #333	; 0x14d
 801598a:	e7f8      	b.n	801597e <LedBlink::SetMode(ledblink::Mode)+0x4a>
 801598c:	2305      	movs	r3, #5
 801598e:	6043      	str	r3, [r0, #4]
 8015990:	23c8      	movs	r3, #200	; 0xc8
 8015992:	e7f4      	b.n	801597e <LedBlink::SetMode(ledblink::Mode)+0x4a>
 8015994:	4770      	bx	lr
 8015996:	bf00      	nop
 8015998:	20013dec 	andcs	r3, r1, ip, ror #27

0801599c <Hardware::Hardware()>:
 801599c:	b570      	push	{r4, r5, r6, lr}
 801599e:	2400      	movs	r4, #0
 80159a0:	4b25      	ldr	r3, [pc, #148]	; (8015a38 <Hardware::Hardware()+0x9c>)
 80159a2:	b090      	sub	sp, #64	; 0x40
 80159a4:	6004      	str	r4, [r0, #0]
 80159a6:	7104      	strb	r4, [r0, #4]
 80159a8:	4e24      	ldr	r6, [pc, #144]	; (8015a3c <Hardware::Hardware()+0xa0>)
 80159aa:	6018      	str	r0, [r3, #0]
 80159ac:	4605      	mov	r5, r0
 80159ae:	f7ff fe9b 	bl	80156e8 <console_init>
 80159b2:	f000 fb17 	bl	8015fe4 <systick_config>
 80159b6:	f001 fcf9 	bl	80173ac <udelay_init()>
 80159ba:	f001 fca9 	bl	8017310 <micros_init()>
 80159be:	f240 7004 	movw	r0, #1796	; 0x704
 80159c2:	f000 fd7d 	bl	80164c0 <rcu_periph_clock_enable>
 80159c6:	4630      	mov	r0, r6
 80159c8:	f000 feee 	bl	80167a8 <timer_deinit>
 80159cc:	2377      	movs	r3, #119	; 0x77
 80159ce:	f8ad 300c 	strh.w	r3, [sp, #12]
 80159d2:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80159d6:	a903      	add	r1, sp, #12
 80159d8:	4630      	mov	r0, r6
 80159da:	9305      	str	r3, [sp, #20]
 80159dc:	f000 ff8a 	bl	80168f4 <timer_init>
 80159e0:	4630      	mov	r0, r6
 80159e2:	f000 ffdf 	bl	80169a4 <timer_enable>
 80159e6:	f001 f9dd 	bl	8016da4 <gd32_adc_init()>
 80159ea:	231b      	movs	r3, #27
 80159ec:	e9cd 340a 	strd	r3, r4, [sp, #40]	; 0x28
 80159f0:	237a      	movs	r3, #122	; 0x7a
 80159f2:	a807      	add	r0, sp, #28
 80159f4:	930c      	str	r3, [sp, #48]	; 0x30
 80159f6:	e9cd 4408 	strd	r4, r4, [sp, #32]
 80159fa:	9407      	str	r4, [sp, #28]
 80159fc:	940f      	str	r4, [sp, #60]	; 0x3c
 80159fe:	f000 fa17 	bl	8015e30 <mktime>
 8015a02:	4621      	mov	r1, r4
 8015a04:	e9cd 0401 	strd	r0, r4, [sp, #4]
 8015a08:	a801      	add	r0, sp, #4
 8015a0a:	f000 fa87 	bl	8015f1c <settimeofday>
 8015a0e:	f240 701b 	movw	r0, #1819	; 0x71b
 8015a12:	f000 fd55 	bl	80164c0 <rcu_periph_clock_enable>
 8015a16:	f240 701c 	movw	r0, #1820	; 0x71c
 8015a1a:	f000 fd51 	bl	80164c0 <rcu_periph_clock_enable>
 8015a1e:	f000 fd47 	bl	80164b0 <pmu_backup_write_enable>
 8015a22:	f000 fb83 	bl	801612c <bkp_deinit>
 8015a26:	4621      	mov	r1, r4
 8015a28:	2002      	movs	r0, #2
 8015a2a:	f000 fb87 	bl	801613c <bkp_data_write>
 8015a2e:	f001 fa13 	bl	8016e58 <gd32_i2c_begin()>
 8015a32:	4628      	mov	r0, r5
 8015a34:	b010      	add	sp, #64	; 0x40
 8015a36:	bd70      	pop	{r4, r5, r6, pc}
 8015a38:	20013de4 	andcs	r3, r1, r4, ror #27
 8015a3c:	40001000 	andmi	r1, r0, r0

08015a40 <Hardware::GetUuid(unsigned char*)>:
 8015a40:	4a0c      	ldr	r2, [pc, #48]	; (8015a74 <Hardware::GetUuid(unsigned char*)+0x34>)
 8015a42:	b084      	sub	sp, #16
 8015a44:	f8d2 37e8 	ldr.w	r3, [r2, #2024]	; 0x7e8
 8015a48:	9300      	str	r3, [sp, #0]
 8015a4a:	f8d2 07ec 	ldr.w	r0, [r2, #2028]	; 0x7ec
 8015a4e:	9001      	str	r0, [sp, #4]
 8015a50:	f8d2 27f0 	ldr.w	r2, [r2, #2032]	; 0x7f0
 8015a54:	4403      	add	r3, r0
 8015a56:	4413      	add	r3, r2
 8015a58:	9202      	str	r2, [sp, #8]
 8015a5a:	466a      	mov	r2, sp
 8015a5c:	9303      	str	r3, [sp, #12]
 8015a5e:	1e4b      	subs	r3, r1, #1
 8015a60:	310f      	adds	r1, #15
 8015a62:	428b      	cmp	r3, r1
 8015a64:	d004      	beq.n	8015a70 <Hardware::GetUuid(unsigned char*)+0x30>
 8015a66:	f812 0b01 	ldrb.w	r0, [r2], #1
 8015a6a:	f803 0f01 	strb.w	r0, [r3, #1]!
 8015a6e:	e7f8      	b.n	8015a62 <Hardware::GetUuid(unsigned char*)+0x22>
 8015a70:	b004      	add	sp, #16
 8015a72:	4770      	bx	lr
 8015a74:	1ffff000 	svcne	0x00fff000

08015a78 <Hardware::SetTime(tm const*)>:
 8015a78:	2000      	movs	r0, #0
 8015a7a:	4770      	bx	lr

08015a7c <Hardware::Reboot()>:
 8015a7c:	6803      	ldr	r3, [r0, #0]
 8015a7e:	4604      	mov	r4, r0
 8015a80:	b580      	push	{r7, lr}
 8015a82:	b153      	cbz	r3, 8015a9a <Hardware::Reboot()+0x1e>
 8015a84:	2300      	movs	r3, #0
 8015a86:	2104      	movs	r1, #4
 8015a88:	7103      	strb	r3, [r0, #4]
 8015a8a:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8015a8e:	f000 fc51 	bl	8016334 <fwdgt_config>
 8015a92:	6820      	ldr	r0, [r4, #0]
 8015a94:	6803      	ldr	r3, [r0, #0]
 8015a96:	689b      	ldr	r3, [r3, #8]
 8015a98:	4798      	blx	r3
 8015a9a:	2102      	movs	r1, #2
 8015a9c:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8015aa0:	f000 fc48 	bl	8016334 <fwdgt_config>
 8015aa4:	2801      	cmp	r0, #1
 8015aa6:	bf0c      	ite	eq
 8015aa8:	2301      	moveq	r3, #1
 8015aaa:	2300      	movne	r3, #0
 8015aac:	7123      	strb	r3, [r4, #4]
 8015aae:	d101      	bne.n	8015ab4 <Hardware::Reboot()+0x38>
 8015ab0:	f000 fc30 	bl	8016314 <fwdgt_enable>
 8015ab4:	2208      	movs	r2, #8
 8015ab6:	4f2d      	ldr	r7, [pc, #180]	; (8015b6c <Hardware::Reboot()+0xf0>)
 8015ab8:	4d2d      	ldr	r5, [pc, #180]	; (8015b70 <Hardware::Reboot()+0xf4>)
 8015aba:	683b      	ldr	r3, [r7, #0]
 8015abc:	4c2d      	ldr	r4, [pc, #180]	; (8015b74 <Hardware::Reboot()+0xf8>)
 8015abe:	605a      	str	r2, [r3, #4]
 8015ac0:	227d      	movs	r2, #125	; 0x7d
 8015ac2:	611a      	str	r2, [r3, #16]
 8015ac4:	2200      	movs	r2, #0
 8015ac6:	6839      	ldr	r1, [r7, #0]
 8015ac8:	f8df c0ac 	ldr.w	ip, [pc, #172]	; 8015b78 <Hardware::Reboot()+0xfc>
 8015acc:	f8d1 e010 	ldr.w	lr, [r1, #16]
 8015ad0:	682b      	ldr	r3, [r5, #0]
 8015ad2:	f8dc 9000 	ldr.w	r9, [ip]
 8015ad6:	f8df 80a4 	ldr.w	r8, [pc, #164]	; 8015b7c <Hardware::Reboot()+0x100>
 8015ada:	f1be 0f00 	cmp.w	lr, #0
 8015ade:	d014      	beq.n	8015b0a <Hardware::Reboot()+0x8e>
 8015ae0:	f8d8 0000 	ldr.w	r0, [r8]
 8015ae4:	698e      	ldr	r6, [r1, #24]
 8015ae6:	1b80      	subs	r0, r0, r6
 8015ae8:	4586      	cmp	lr, r0
 8015aea:	d80e      	bhi.n	8015b0a <Hardware::Reboot()+0x8e>
 8015aec:	f8d8 2000 	ldr.w	r2, [r8]
 8015af0:	f423 1360 	bic.w	r3, r3, #3670016	; 0x380000
 8015af4:	618a      	str	r2, [r1, #24]
 8015af6:	694a      	ldr	r2, [r1, #20]
 8015af8:	2a01      	cmp	r2, #1
 8015afa:	f082 0001 	eor.w	r0, r2, #1
 8015afe:	bf18      	it	ne
 8015b00:	2201      	movne	r2, #1
 8015b02:	6148      	str	r0, [r1, #20]
 8015b04:	bf08      	it	eq
 8015b06:	f483 1360 	eoreq.w	r3, r3, #3670016	; 0x380000
 8015b0a:	454b      	cmp	r3, r9
 8015b0c:	d0e5      	beq.n	8015ada <Hardware::Reboot()+0x5e>
 8015b0e:	b102      	cbz	r2, 8015b12 <Hardware::Reboot()+0x96>
 8015b10:	602b      	str	r3, [r5, #0]
 8015b12:	2110      	movs	r1, #16
 8015b14:	4620      	mov	r0, r4
 8015b16:	f8cc 3000 	str.w	r3, [ip]
 8015b1a:	f000 fc8b 	bl	8016434 <gpio_bit_reset>
 8015b1e:	f3bf 8f6f 	isb	sy
 8015b22:	2618      	movs	r6, #24
 8015b24:	f44f 0800 	mov.w	r8, #8388608	; 0x800000
 8015b28:	682b      	ldr	r3, [r5, #0]
 8015b2a:	2104      	movs	r1, #4
 8015b2c:	ea18 0f03 	tst.w	r8, r3
 8015b30:	4620      	mov	r0, r4
 8015b32:	d018      	beq.n	8015b66 <Hardware::Reboot()+0xea>
 8015b34:	f000 fc7c 	bl	8016430 <gpio_bit_set>
 8015b38:	f3bf 8f6f 	isb	sy
 8015b3c:	2108      	movs	r1, #8
 8015b3e:	4620      	mov	r0, r4
 8015b40:	f000 fc78 	bl	8016434 <gpio_bit_reset>
 8015b44:	f3bf 8f6f 	isb	sy
 8015b48:	2108      	movs	r1, #8
 8015b4a:	4620      	mov	r0, r4
 8015b4c:	f000 fc70 	bl	8016430 <gpio_bit_set>
 8015b50:	3e01      	subs	r6, #1
 8015b52:	ea4f 0858 	mov.w	r8, r8, lsr #1
 8015b56:	d1e7      	bne.n	8015b28 <Hardware::Reboot()+0xac>
 8015b58:	2110      	movs	r1, #16
 8015b5a:	4620      	mov	r0, r4
 8015b5c:	f000 fc68 	bl	8016430 <gpio_bit_set>
 8015b60:	f3bf 8f6f 	isb	sy
 8015b64:	e7ae      	b.n	8015ac4 <Hardware::Reboot()+0x48>
 8015b66:	f000 fc65 	bl	8016434 <gpio_bit_reset>
 8015b6a:	e7e5      	b.n	8015b38 <Hardware::Reboot()+0xbc>
 8015b6c:	20013de0 	andcs	r3, r1, r0, ror #27
 8015b70:	20013dec 	andcs	r3, r1, ip, ror #27
 8015b74:	40011800 	andmi	r1, r1, r0, lsl #16
 8015b78:	20013de8 	andcs	r3, r1, r8, ror #27
 8015b7c:	20013e04 	andcs	r3, r1, r4, lsl #28

08015b80 <operator delete(void*)>:
 8015b80:	f000 b890 	b.w	8015ca4 <free>

08015b84 <operator delete[](void*)>:
 8015b84:	f000 b88e 	b.w	8015ca4 <free>

08015b88 <operator new(unsigned int)>:
 8015b88:	f000 b842 	b.w	8015c10 <malloc>

08015b8c <operator new[](unsigned int)>:
 8015b8c:	f000 b840 	b.w	8015c10 <malloc>

08015b90 <inet_aton>:
 8015b90:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8015b92:	f04f 0c0a 	mov.w	ip, #10
 8015b96:	2500      	movs	r5, #0
 8015b98:	ae01      	add	r6, sp, #4
 8015b9a:	4603      	mov	r3, r0
 8015b9c:	2200      	movs	r2, #0
 8015b9e:	1d07      	adds	r7, r0, #4
 8015ba0:	e007      	b.n	8015bb2 <inet_aton+0x22>
 8015ba2:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8015ba6:	2b09      	cmp	r3, #9
 8015ba8:	d820      	bhi.n	8015bec <inet_aton+0x5c>
 8015baa:	4603      	mov	r3, r0
 8015bac:	fb0c 4202 	mla	r2, ip, r2, r4
 8015bb0:	3a30      	subs	r2, #48	; 0x30
 8015bb2:	4618      	mov	r0, r3
 8015bb4:	f810 4b01 	ldrb.w	r4, [r0], #1
 8015bb8:	2c2e      	cmp	r4, #46	; 0x2e
 8015bba:	d111      	bne.n	8015be0 <inet_aton+0x50>
 8015bbc:	3501      	adds	r5, #1
 8015bbe:	2d03      	cmp	r5, #3
 8015bc0:	f806 2b01 	strb.w	r2, [r6], #1
 8015bc4:	d1e9      	bne.n	8015b9a <inet_aton+0xa>
 8015bc6:	2200      	movs	r2, #0
 8015bc8:	250a      	movs	r5, #10
 8015bca:	1d1c      	adds	r4, r3, #4
 8015bcc:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8015bd0:	f010 0fdf 	tst.w	r0, #223	; 0xdf
 8015bd4:	d10d      	bne.n	8015bf2 <inet_aton+0x62>
 8015bd6:	f88d 2007 	strb.w	r2, [sp, #7]
 8015bda:	b9b1      	cbnz	r1, 8015c0a <inet_aton+0x7a>
 8015bdc:	2001      	movs	r0, #1
 8015bde:	e006      	b.n	8015bee <inet_aton+0x5e>
 8015be0:	2c00      	cmp	r4, #0
 8015be2:	d0eb      	beq.n	8015bbc <inet_aton+0x2c>
 8015be4:	2c0a      	cmp	r4, #10
 8015be6:	d0e9      	beq.n	8015bbc <inet_aton+0x2c>
 8015be8:	42b8      	cmp	r0, r7
 8015bea:	d1da      	bne.n	8015ba2 <inet_aton+0x12>
 8015bec:	2000      	movs	r0, #0
 8015bee:	b003      	add	sp, #12
 8015bf0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8015bf2:	280a      	cmp	r0, #10
 8015bf4:	d0ef      	beq.n	8015bd6 <inet_aton+0x46>
 8015bf6:	42a3      	cmp	r3, r4
 8015bf8:	d0f8      	beq.n	8015bec <inet_aton+0x5c>
 8015bfa:	f1a0 0630 	sub.w	r6, r0, #48	; 0x30
 8015bfe:	2e09      	cmp	r6, #9
 8015c00:	d8f4      	bhi.n	8015bec <inet_aton+0x5c>
 8015c02:	fb05 0202 	mla	r2, r5, r2, r0
 8015c06:	3a30      	subs	r2, #48	; 0x30
 8015c08:	e7e0      	b.n	8015bcc <inet_aton+0x3c>
 8015c0a:	9b01      	ldr	r3, [sp, #4]
 8015c0c:	600b      	str	r3, [r1, #0]
 8015c0e:	e7e5      	b.n	8015bdc <inet_aton+0x4c>

08015c10 <malloc>:
 8015c10:	b538      	push	{r3, r4, r5, lr}
 8015c12:	4604      	mov	r4, r0
 8015c14:	4601      	mov	r1, r0
 8015c16:	481c      	ldr	r0, [pc, #112]	; (8015c88 <malloc+0x78>)
 8015c18:	f7f3 f9c2 	bl	8008fa0 <printf>
 8015c1c:	b17c      	cbz	r4, 8015c3e <malloc+0x2e>
 8015c1e:	4b1b      	ldr	r3, [pc, #108]	; (8015c8c <malloc+0x7c>)
 8015c20:	6818      	ldr	r0, [r3, #0]
 8015c22:	b978      	cbnz	r0, 8015c44 <malloc+0x34>
 8015c24:	4a1a      	ldr	r2, [pc, #104]	; (8015c90 <malloc+0x80>)
 8015c26:	f104 031b 	add.w	r3, r4, #27
 8015c2a:	6811      	ldr	r1, [r2, #0]
 8015c2c:	4819      	ldr	r0, [pc, #100]	; (8015c94 <malloc+0x84>)
 8015c2e:	f023 030f 	bic.w	r3, r3, #15
 8015c32:	440b      	add	r3, r1
 8015c34:	4283      	cmp	r3, r0
 8015c36:	d921      	bls.n	8015c7c <malloc+0x6c>
 8015c38:	4817      	ldr	r0, [pc, #92]	; (8015c98 <malloc+0x88>)
 8015c3a:	f7f3 f9b1 	bl	8008fa0 <printf>
 8015c3e:	2500      	movs	r5, #0
 8015c40:	4628      	mov	r0, r5
 8015c42:	bd38      	pop	{r3, r4, r5, pc}
 8015c44:	4284      	cmp	r4, r0
 8015c46:	d80a      	bhi.n	8015c5e <malloc+0x4e>
 8015c48:	685a      	ldr	r2, [r3, #4]
 8015c4a:	6899      	ldr	r1, [r3, #8]
 8015c4c:	3201      	adds	r2, #1
 8015c4e:	428a      	cmp	r2, r1
 8015c50:	605a      	str	r2, [r3, #4]
 8015c52:	d900      	bls.n	8015c56 <malloc+0x46>
 8015c54:	609a      	str	r2, [r3, #8]
 8015c56:	68d9      	ldr	r1, [r3, #12]
 8015c58:	b919      	cbnz	r1, 8015c62 <malloc+0x52>
 8015c5a:	4604      	mov	r4, r0
 8015c5c:	e7e2      	b.n	8015c24 <malloc+0x14>
 8015c5e:	3310      	adds	r3, #16
 8015c60:	e7de      	b.n	8015c20 <malloc+0x10>
 8015c62:	4604      	mov	r4, r0
 8015c64:	688a      	ldr	r2, [r1, #8]
 8015c66:	60da      	str	r2, [r3, #12]
 8015c68:	2300      	movs	r3, #0
 8015c6a:	f101 050c 	add.w	r5, r1, #12
 8015c6e:	608b      	str	r3, [r1, #8]
 8015c70:	4622      	mov	r2, r4
 8015c72:	462b      	mov	r3, r5
 8015c74:	4809      	ldr	r0, [pc, #36]	; (8015c9c <malloc+0x8c>)
 8015c76:	f7f3 f993 	bl	8008fa0 <printf>
 8015c7a:	e7e1      	b.n	8015c40 <malloc+0x30>
 8015c7c:	6013      	str	r3, [r2, #0]
 8015c7e:	4b08      	ldr	r3, [pc, #32]	; (8015ca0 <malloc+0x90>)
 8015c80:	e9c1 3400 	strd	r3, r4, [r1]
 8015c84:	e7f0      	b.n	8015c68 <malloc+0x58>
 8015c86:	bf00      	nop
 8015c88:	0801a750 	stmdaeq	r1, {r4, r6, r8, r9, sl, sp, pc}
 8015c8c:	20000014 	andcs	r0, r0, r4, lsl r0
 8015c90:	20000010 	andcs	r0, r0, r0, lsl r0
 8015c94:	2001e000 	andcs	lr, r1, r0
 8015c98:	0801a75c 	stmdaeq	r1, {r2, r3, r4, r6, r8, r9, sl, sp, pc}
 8015c9c:	0801a778 	stmdaeq	r1, {r3, r4, r5, r6, r8, r9, sl, sp, pc}
 8015ca0:	424c4d43 	submi	r4, ip, #4288	; 0x10c0

08015ca4 <free>:
 8015ca4:	b538      	push	{r3, r4, r5, lr}
 8015ca6:	4604      	mov	r4, r0
 8015ca8:	b1c8      	cbz	r0, 8015cde <free+0x3a>
 8015caa:	f1a0 050c 	sub.w	r5, r0, #12
 8015cae:	4602      	mov	r2, r0
 8015cb0:	4629      	mov	r1, r5
 8015cb2:	480c      	ldr	r0, [pc, #48]	; (8015ce4 <free+0x40>)
 8015cb4:	f7f3 f974 	bl	8008fa0 <printf>
 8015cb8:	f854 2c0c 	ldr.w	r2, [r4, #-12]
 8015cbc:	4b0a      	ldr	r3, [pc, #40]	; (8015ce8 <free+0x44>)
 8015cbe:	429a      	cmp	r2, r3
 8015cc0:	d10d      	bne.n	8015cde <free+0x3a>
 8015cc2:	4b0a      	ldr	r3, [pc, #40]	; (8015cec <free+0x48>)
 8015cc4:	681a      	ldr	r2, [r3, #0]
 8015cc6:	b152      	cbz	r2, 8015cde <free+0x3a>
 8015cc8:	f854 1c08 	ldr.w	r1, [r4, #-8]
 8015ccc:	4291      	cmp	r1, r2
 8015cce:	d107      	bne.n	8015ce0 <free+0x3c>
 8015cd0:	68da      	ldr	r2, [r3, #12]
 8015cd2:	f844 2c04 	str.w	r2, [r4, #-4]
 8015cd6:	685a      	ldr	r2, [r3, #4]
 8015cd8:	60dd      	str	r5, [r3, #12]
 8015cda:	3a01      	subs	r2, #1
 8015cdc:	605a      	str	r2, [r3, #4]
 8015cde:	bd38      	pop	{r3, r4, r5, pc}
 8015ce0:	3310      	adds	r3, #16
 8015ce2:	e7ef      	b.n	8015cc4 <free+0x20>
 8015ce4:	0801a7a3 	stmdaeq	r1, {r0, r1, r5, r7, r8, r9, sl, sp, pc}
 8015ce8:	424c4d43 	submi	r4, ip, #4288	; 0x10c0
 8015cec:	20000014 	andcs	r0, r0, r4, lsl r0

08015cf0 <memcpy>:
 8015cf0:	b510      	push	{r4, lr}
 8015cf2:	1e43      	subs	r3, r0, #1
 8015cf4:	440a      	add	r2, r1
 8015cf6:	4291      	cmp	r1, r2
 8015cf8:	d100      	bne.n	8015cfc <memcpy+0xc>
 8015cfa:	bd10      	pop	{r4, pc}
 8015cfc:	f811 4b01 	ldrb.w	r4, [r1], #1
 8015d00:	f803 4f01 	strb.w	r4, [r3, #1]!
 8015d04:	e7f7      	b.n	8015cf6 <memcpy+0x6>

08015d06 <memmove>:
 8015d06:	4288      	cmp	r0, r1
 8015d08:	b510      	push	{r4, lr}
 8015d0a:	eb01 0302 	add.w	r3, r1, r2
 8015d0e:	d208      	bcs.n	8015d22 <memmove+0x1c>
 8015d10:	1e42      	subs	r2, r0, #1
 8015d12:	4299      	cmp	r1, r3
 8015d14:	d100      	bne.n	8015d18 <memmove+0x12>
 8015d16:	bd10      	pop	{r4, pc}
 8015d18:	f811 4b01 	ldrb.w	r4, [r1], #1
 8015d1c:	f802 4f01 	strb.w	r4, [r2, #1]!
 8015d20:	e7f7      	b.n	8015d12 <memmove+0xc>
 8015d22:	4601      	mov	r1, r0
 8015d24:	4402      	add	r2, r0
 8015d26:	428a      	cmp	r2, r1
 8015d28:	d0f5      	beq.n	8015d16 <memmove+0x10>
 8015d2a:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8015d2e:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8015d32:	e7f8      	b.n	8015d26 <memmove+0x20>

08015d34 <memset>:
 8015d34:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015d36:	b1e2      	cbz	r2, 8015d72 <memset+0x3e>
 8015d38:	4603      	mov	r3, r0
 8015d3a:	b2c9      	uxtb	r1, r1
 8015d3c:	075c      	lsls	r4, r3, #29
 8015d3e:	d114      	bne.n	8015d6a <memset+0x36>
 8015d40:	ea41 2401 	orr.w	r4, r1, r1, lsl #8
 8015d44:	ea44 4704 	orr.w	r7, r4, r4, lsl #16
 8015d48:	463d      	mov	r5, r7
 8015d4a:	f022 0407 	bic.w	r4, r2, #7
 8015d4e:	08d6      	lsrs	r6, r2, #3
 8015d50:	441c      	add	r4, r3
 8015d52:	42a3      	cmp	r3, r4
 8015d54:	d10e      	bne.n	8015d74 <memset+0x40>
 8015d56:	f06f 0307 	mvn.w	r3, #7
 8015d5a:	fb03 2206 	mla	r2, r3, r6, r2
 8015d5e:	4422      	add	r2, r4
 8015d60:	4294      	cmp	r4, r2
 8015d62:	d006      	beq.n	8015d72 <memset+0x3e>
 8015d64:	f804 1b01 	strb.w	r1, [r4], #1
 8015d68:	e7fa      	b.n	8015d60 <memset+0x2c>
 8015d6a:	3a01      	subs	r2, #1
 8015d6c:	f803 1b01 	strb.w	r1, [r3], #1
 8015d70:	d1e4      	bne.n	8015d3c <memset+0x8>
 8015d72:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8015d74:	f843 7b08 	str.w	r7, [r3], #8
 8015d78:	f843 5c04 	str.w	r5, [r3, #-4]
 8015d7c:	e7e9      	b.n	8015d52 <memset+0x1e>

08015d7e <puts>:
 8015d7e:	b508      	push	{r3, lr}
 8015d80:	f7ff fcce 	bl	8015720 <console_puts>
 8015d84:	200a      	movs	r0, #10
 8015d86:	f7ff fcbf 	bl	8015708 <console_putc>
 8015d8a:	2001      	movs	r0, #1
 8015d8c:	bd08      	pop	{r3, pc}
	...

08015d90 <strtok>:
 8015d90:	b530      	push	{r4, r5, lr}
 8015d92:	b910      	cbnz	r0, 8015d9a <strtok+0xa>
 8015d94:	4b12      	ldr	r3, [pc, #72]	; (8015de0 <strtok+0x50>)
 8015d96:	6818      	ldr	r0, [r3, #0]
 8015d98:	b158      	cbz	r0, 8015db2 <strtok+0x22>
 8015d9a:	4603      	mov	r3, r0
 8015d9c:	460d      	mov	r5, r1
 8015d9e:	4618      	mov	r0, r3
 8015da0:	f813 2b01 	ldrb.w	r2, [r3], #1
 8015da4:	f815 4b01 	ldrb.w	r4, [r5], #1
 8015da8:	b924      	cbnz	r4, 8015db4 <strtok+0x24>
 8015daa:	b94a      	cbnz	r2, 8015dc0 <strtok+0x30>
 8015dac:	4610      	mov	r0, r2
 8015dae:	4b0c      	ldr	r3, [pc, #48]	; (8015de0 <strtok+0x50>)
 8015db0:	601a      	str	r2, [r3, #0]
 8015db2:	bd30      	pop	{r4, r5, pc}
 8015db4:	42a2      	cmp	r2, r4
 8015db6:	d1f5      	bne.n	8015da4 <strtok+0x14>
 8015db8:	e7f0      	b.n	8015d9c <strtok+0xc>
 8015dba:	4613      	mov	r3, r2
 8015dbc:	e00c      	b.n	8015dd8 <strtok+0x48>
 8015dbe:	b914      	cbnz	r4, 8015dc6 <strtok+0x36>
 8015dc0:	460d      	mov	r5, r1
 8015dc2:	f813 2b01 	ldrb.w	r2, [r3], #1
 8015dc6:	f815 4b01 	ldrb.w	r4, [r5], #1
 8015dca:	42a2      	cmp	r2, r4
 8015dcc:	d1f7      	bne.n	8015dbe <strtok+0x2e>
 8015dce:	2a00      	cmp	r2, #0
 8015dd0:	d0f3      	beq.n	8015dba <strtok+0x2a>
 8015dd2:	2200      	movs	r2, #0
 8015dd4:	f803 2c01 	strb.w	r2, [r3, #-1]
 8015dd8:	4a01      	ldr	r2, [pc, #4]	; (8015de0 <strtok+0x50>)
 8015dda:	6013      	str	r3, [r2, #0]
 8015ddc:	e7e9      	b.n	8015db2 <strtok+0x22>
 8015dde:	bf00      	nop
 8015de0:	20013df4 	strdcs	r3, [r1], -r4

08015de4 <isleapyear>:
 8015de4:	2264      	movs	r2, #100	; 0x64
 8015de6:	fb90 f3f2 	sdiv	r3, r0, r2
 8015dea:	fb02 0313 	mls	r3, r2, r3, r0
 8015dee:	b94b      	cbnz	r3, 8015e04 <isleapyear+0x20>
 8015df0:	f44f 73c8 	mov.w	r3, #400	; 0x190
 8015df4:	fb90 f2f3 	sdiv	r2, r0, r3
 8015df8:	fb03 0012 	mls	r0, r3, r2, r0
 8015dfc:	fab0 f080 	clz	r0, r0
 8015e00:	0940      	lsrs	r0, r0, #5
 8015e02:	4770      	bx	lr
 8015e04:	f010 0f03 	tst.w	r0, #3
 8015e08:	bf0c      	ite	eq
 8015e0a:	2001      	moveq	r0, #1
 8015e0c:	2000      	movne	r0, #0
 8015e0e:	4770      	bx	lr

08015e10 <getdaysofmonth>:
 8015e10:	b510      	push	{r4, lr}
 8015e12:	4604      	mov	r4, r0
 8015e14:	2c01      	cmp	r4, #1
 8015e16:	4608      	mov	r0, r1
 8015e18:	d102      	bne.n	8015e20 <getdaysofmonth+0x10>
 8015e1a:	f7ff ffe3 	bl	8015de4 <isleapyear>
 8015e1e:	b918      	cbnz	r0, 8015e28 <getdaysofmonth+0x18>
 8015e20:	4b02      	ldr	r3, [pc, #8]	; (8015e2c <getdaysofmonth+0x1c>)
 8015e22:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8015e26:	bd10      	pop	{r4, pc}
 8015e28:	201d      	movs	r0, #29
 8015e2a:	e7fc      	b.n	8015e26 <getdaysofmonth+0x16>
 8015e2c:	0801a7cc 	stmdaeq	r1, {r2, r3, r6, r7, r8, r9, sl, sp, pc}

08015e30 <mktime>:
 8015e30:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015e34:	4604      	mov	r4, r0
 8015e36:	2800      	cmp	r0, #0
 8015e38:	d042      	beq.n	8015ec0 <mktime+0x90>
 8015e3a:	6941      	ldr	r1, [r0, #20]
 8015e3c:	f1a1 0346 	sub.w	r3, r1, #70	; 0x46
 8015e40:	2b45      	cmp	r3, #69	; 0x45
 8015e42:	d83d      	bhi.n	8015ec0 <mktime+0x90>
 8015e44:	2600      	movs	r6, #0
 8015e46:	f240 75b2 	movw	r5, #1970	; 0x7b2
 8015e4a:	f240 186d 	movw	r8, #365	; 0x16d
 8015e4e:	f201 776b 	addw	r7, r1, #1899	; 0x76b
 8015e52:	42af      	cmp	r7, r5
 8015e54:	da23      	bge.n	8015e9e <mktime+0x6e>
 8015e56:	6927      	ldr	r7, [r4, #16]
 8015e58:	2f0b      	cmp	r7, #11
 8015e5a:	d831      	bhi.n	8015ec0 <mktime+0x90>
 8015e5c:	2500      	movs	r5, #0
 8015e5e:	42af      	cmp	r7, r5
 8015e60:	d128      	bne.n	8015eb4 <mktime+0x84>
 8015e62:	68e5      	ldr	r5, [r4, #12]
 8015e64:	2d00      	cmp	r5, #0
 8015e66:	dd2b      	ble.n	8015ec0 <mktime+0x90>
 8015e68:	4638      	mov	r0, r7
 8015e6a:	f7ff ffd1 	bl	8015e10 <getdaysofmonth>
 8015e6e:	4285      	cmp	r5, r0
 8015e70:	dc26      	bgt.n	8015ec0 <mktime+0x90>
 8015e72:	2318      	movs	r3, #24
 8015e74:	3d01      	subs	r5, #1
 8015e76:	4435      	add	r5, r6
 8015e78:	435d      	muls	r5, r3
 8015e7a:	68a3      	ldr	r3, [r4, #8]
 8015e7c:	2b17      	cmp	r3, #23
 8015e7e:	d81f      	bhi.n	8015ec0 <mktime+0x90>
 8015e80:	203c      	movs	r0, #60	; 0x3c
 8015e82:	442b      	add	r3, r5
 8015e84:	fb00 f503 	mul.w	r5, r0, r3
 8015e88:	6863      	ldr	r3, [r4, #4]
 8015e8a:	2b3b      	cmp	r3, #59	; 0x3b
 8015e8c:	d818      	bhi.n	8015ec0 <mktime+0x90>
 8015e8e:	442b      	add	r3, r5
 8015e90:	4343      	muls	r3, r0
 8015e92:	6820      	ldr	r0, [r4, #0]
 8015e94:	283b      	cmp	r0, #59	; 0x3b
 8015e96:	d813      	bhi.n	8015ec0 <mktime+0x90>
 8015e98:	4418      	add	r0, r3
 8015e9a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015e9e:	4628      	mov	r0, r5
 8015ea0:	f7ff ffa0 	bl	8015de4 <isleapyear>
 8015ea4:	2800      	cmp	r0, #0
 8015ea6:	bf14      	ite	ne
 8015ea8:	f44f 73b7 	movne.w	r3, #366	; 0x16e
 8015eac:	4643      	moveq	r3, r8
 8015eae:	3501      	adds	r5, #1
 8015eb0:	441e      	add	r6, r3
 8015eb2:	e7ce      	b.n	8015e52 <mktime+0x22>
 8015eb4:	4628      	mov	r0, r5
 8015eb6:	f7ff ffab 	bl	8015e10 <getdaysofmonth>
 8015eba:	3501      	adds	r5, #1
 8015ebc:	4406      	add	r6, r0
 8015ebe:	e7ce      	b.n	8015e5e <mktime+0x2e>
 8015ec0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8015ec4:	e7e9      	b.n	8015e9a <mktime+0x6a>
	...

08015ec8 <gettimeofday>:
 8015ec8:	b538      	push	{r3, r4, r5, lr}
 8015eca:	4b10      	ldr	r3, [pc, #64]	; (8015f0c <gettimeofday+0x44>)
 8015ecc:	4a10      	ldr	r2, [pc, #64]	; (8015f10 <gettimeofday+0x48>)
 8015ece:	681b      	ldr	r3, [r3, #0]
 8015ed0:	6814      	ldr	r4, [r2, #0]
 8015ed2:	6013      	str	r3, [r2, #0]
 8015ed4:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8015ed8:	429c      	cmp	r4, r3
 8015eda:	bf2c      	ite	cs
 8015edc:	1ae4      	subcs	r4, r4, r3
 8015ede:	1b1c      	subcc	r4, r3, r4
 8015ee0:	4354      	muls	r4, r2
 8015ee2:	4b0c      	ldr	r3, [pc, #48]	; (8015f14 <gettimeofday+0x4c>)
 8015ee4:	4605      	mov	r5, r0
 8015ee6:	e9d3 2100 	ldrd	r2, r1, [r3]
 8015eea:	18a4      	adds	r4, r4, r2
 8015eec:	f141 0100 	adc.w	r1, r1, #0
 8015ef0:	e9c3 4100 	strd	r4, r1, [r3]
 8015ef4:	4620      	mov	r0, r4
 8015ef6:	2300      	movs	r3, #0
 8015ef8:	4a07      	ldr	r2, [pc, #28]	; (8015f18 <gettimeofday+0x50>)
 8015efa:	f7f1 fb4f 	bl	800759c <__aeabi_uldivmod>
 8015efe:	4b06      	ldr	r3, [pc, #24]	; (8015f18 <gettimeofday+0x50>)
 8015f00:	6028      	str	r0, [r5, #0]
 8015f02:	fb03 4410 	mls	r4, r3, r0, r4
 8015f06:	2000      	movs	r0, #0
 8015f08:	606c      	str	r4, [r5, #4]
 8015f0a:	bd38      	pop	{r3, r4, r5, pc}
 8015f0c:	20013e04 	andcs	r3, r1, r4, lsl #28
 8015f10:	20013e00 	andcs	r3, r1, r0, lsl #28
 8015f14:	20013df8 	strdcs	r3, [r1], -r8
 8015f18:	000f4240 	andeq	r4, pc, r0, asr #4

08015f1c <settimeofday>:
 8015f1c:	4b07      	ldr	r3, [pc, #28]	; (8015f3c <settimeofday+0x20>)
 8015f1e:	b510      	push	{r4, lr}
 8015f20:	681a      	ldr	r2, [r3, #0]
 8015f22:	4b07      	ldr	r3, [pc, #28]	; (8015f40 <settimeofday+0x24>)
 8015f24:	6804      	ldr	r4, [r0, #0]
 8015f26:	601a      	str	r2, [r3, #0]
 8015f28:	6843      	ldr	r3, [r0, #4]
 8015f2a:	4806      	ldr	r0, [pc, #24]	; (8015f44 <settimeofday+0x28>)
 8015f2c:	17da      	asrs	r2, r3, #31
 8015f2e:	fbc4 3200 	smlal	r3, r2, r4, r0
 8015f32:	4905      	ldr	r1, [pc, #20]	; (8015f48 <settimeofday+0x2c>)
 8015f34:	2000      	movs	r0, #0
 8015f36:	e9c1 3200 	strd	r3, r2, [r1]
 8015f3a:	bd10      	pop	{r4, pc}
 8015f3c:	20013e04 	andcs	r3, r1, r4, lsl #28
 8015f40:	20013e00 	andcs	r3, r1, r0, lsl #28
 8015f44:	000f4240 	andeq	r4, pc, r0, asr #4
 8015f48:	20013df8 	strdcs	r3, [r1], -r8

08015f4c <time>:
 8015f4c:	b513      	push	{r0, r1, r4, lr}
 8015f4e:	4604      	mov	r4, r0
 8015f50:	2100      	movs	r1, #0
 8015f52:	4668      	mov	r0, sp
 8015f54:	f7ff ffb8 	bl	8015ec8 <gettimeofday>
 8015f58:	9800      	ldr	r0, [sp, #0]
 8015f5a:	b104      	cbz	r4, 8015f5e <time+0x12>
 8015f5c:	6020      	str	r0, [r4, #0]
 8015f5e:	b002      	add	sp, #8
 8015f60:	bd10      	pop	{r4, pc}
	...

08015f64 <uart0_init>:
 8015f64:	2301      	movs	r3, #1
 8015f66:	b507      	push	{r0, r1, r2, lr}
 8015f68:	2208      	movs	r2, #8
 8015f6a:	9300      	str	r3, [sp, #0]
 8015f6c:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
 8015f70:	2300      	movs	r3, #0
 8015f72:	4803      	ldr	r0, [pc, #12]	; (8015f80 <uart0_init+0x1c>)
 8015f74:	f001 f8b8 	bl	80170e8 <gd32_uart_begin>
 8015f78:	b003      	add	sp, #12
 8015f7a:	f85d fb04 	ldr.w	pc, [sp], #4
 8015f7e:	bf00      	nop
 8015f80:	40013800 	andmi	r3, r1, r0, lsl #16

08015f84 <uart0_putc>:
 8015f84:	280a      	cmp	r0, #10
 8015f86:	b538      	push	{r3, r4, r5, lr}
 8015f88:	4604      	mov	r4, r0
 8015f8a:	d10a      	bne.n	8015fa2 <uart0_putc+0x1e>
 8015f8c:	4d0b      	ldr	r5, [pc, #44]	; (8015fbc <uart0_putc+0x38>)
 8015f8e:	2107      	movs	r1, #7
 8015f90:	4628      	mov	r0, r5
 8015f92:	f000 fe39 	bl	8016c08 <usart_flag_get>
 8015f96:	2800      	cmp	r0, #0
 8015f98:	d0f9      	beq.n	8015f8e <uart0_putc+0xa>
 8015f9a:	220d      	movs	r2, #13
 8015f9c:	4b08      	ldr	r3, [pc, #32]	; (8015fc0 <uart0_putc+0x3c>)
 8015f9e:	f8c3 2804 	str.w	r2, [r3, #2052]	; 0x804
 8015fa2:	4d06      	ldr	r5, [pc, #24]	; (8015fbc <uart0_putc+0x38>)
 8015fa4:	2107      	movs	r1, #7
 8015fa6:	4628      	mov	r0, r5
 8015fa8:	f000 fe2e 	bl	8016c08 <usart_flag_get>
 8015fac:	2800      	cmp	r0, #0
 8015fae:	d0f9      	beq.n	8015fa4 <uart0_putc+0x20>
 8015fb0:	4b03      	ldr	r3, [pc, #12]	; (8015fc0 <uart0_putc+0x3c>)
 8015fb2:	b2e4      	uxtb	r4, r4
 8015fb4:	f8c3 4804 	str.w	r4, [r3, #2052]	; 0x804
 8015fb8:	bd38      	pop	{r3, r4, r5, pc}
 8015fba:	bf00      	nop
 8015fbc:	40013800 	andmi	r3, r1, r0, lsl #16
 8015fc0:	40013000 	andmi	r3, r1, r0

08015fc4 <uart0_puts>:
 8015fc4:	b510      	push	{r4, lr}
 8015fc6:	1e44      	subs	r4, r0, #1
 8015fc8:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8015fcc:	b903      	cbnz	r3, 8015fd0 <uart0_puts+0xc>
 8015fce:	bd10      	pop	{r4, pc}
 8015fd0:	2b0a      	cmp	r3, #10
 8015fd2:	d102      	bne.n	8015fda <uart0_puts+0x16>
 8015fd4:	200d      	movs	r0, #13
 8015fd6:	f7ff ffd5 	bl	8015f84 <uart0_putc>
 8015fda:	7820      	ldrb	r0, [r4, #0]
 8015fdc:	f7ff ffd2 	bl	8015f84 <uart0_putc>
 8015fe0:	e7f2      	b.n	8015fc8 <uart0_puts+0x4>
	...

08015fe4 <systick_config>:
 8015fe4:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8015fe8:	4b0b      	ldr	r3, [pc, #44]	; (8016018 <systick_config+0x34>)
 8015fea:	681b      	ldr	r3, [r3, #0]
 8015fec:	fbb3 f3f2 	udiv	r3, r3, r2
 8015ff0:	3b01      	subs	r3, #1
 8015ff2:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8015ff6:	d20d      	bcs.n	8016014 <systick_config+0x30>
 8015ff8:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8015ffc:	21f0      	movs	r1, #240	; 0xf0
 8015ffe:	6153      	str	r3, [r2, #20]
 8016000:	4b06      	ldr	r3, [pc, #24]	; (801601c <systick_config+0x38>)
 8016002:	2007      	movs	r0, #7
 8016004:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 8016008:	2100      	movs	r1, #0
 801600a:	6191      	str	r1, [r2, #24]
 801600c:	6110      	str	r0, [r2, #16]
 801600e:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 8016012:	4770      	bx	lr
 8016014:	e7fe      	b.n	8016014 <systick_config+0x30>
 8016016:	bf00      	nop
 8016018:	200000e4 	andcs	r0, r0, r4, ror #1
 801601c:	e000ed00 	and	lr, r0, r0, lsl #26

08016020 <SysTick_Handler>:
 8016020:	4a02      	ldr	r2, [pc, #8]	; (801602c <SysTick_Handler+0xc>)
 8016022:	6813      	ldr	r3, [r2, #0]
 8016024:	3301      	adds	r3, #1
 8016026:	6013      	str	r3, [r2, #0]
 8016028:	4770      	bx	lr
 801602a:	bf00      	nop
 801602c:	20013e04 	andcs	r3, r1, r4, lsl #28

08016030 <SystemInit>:
 8016030:	4b3a      	ldr	r3, [pc, #232]	; (801611c <SystemInit+0xec>)
 8016032:	681a      	ldr	r2, [r3, #0]
 8016034:	f042 0201 	orr.w	r2, r2, #1
 8016038:	601a      	str	r2, [r3, #0]
 801603a:	6859      	ldr	r1, [r3, #4]
 801603c:	4a38      	ldr	r2, [pc, #224]	; (8016120 <SystemInit+0xf0>)
 801603e:	400a      	ands	r2, r1
 8016040:	605a      	str	r2, [r3, #4]
 8016042:	681a      	ldr	r2, [r3, #0]
 8016044:	f44f 017f 	mov.w	r1, #16711680	; 0xff0000
 8016048:	f022 7284 	bic.w	r2, r2, #17301504	; 0x1080000
 801604c:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8016050:	601a      	str	r2, [r3, #0]
 8016052:	681a      	ldr	r2, [r3, #0]
 8016054:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8016058:	601a      	str	r2, [r3, #0]
 801605a:	685a      	ldr	r2, [r3, #4]
 801605c:	f022 5203 	bic.w	r2, r2, #549453824	; 0x20c00000
 8016060:	f422 127c 	bic.w	r2, r2, #4128768	; 0x3f0000
 8016064:	605a      	str	r2, [r3, #4]
 8016066:	681a      	ldr	r2, [r3, #0]
 8016068:	f022 52a0 	bic.w	r2, r2, #335544320	; 0x14000000
 801606c:	601a      	str	r2, [r3, #0]
 801606e:	2200      	movs	r2, #0
 8016070:	62da      	str	r2, [r3, #44]	; 0x2c
 8016072:	6099      	str	r1, [r3, #8]
 8016074:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 8016078:	f8d3 2090 	ldr.w	r2, [r3, #144]	; 0x90
 801607c:	f022 5280 	bic.w	r2, r2, #268435456	; 0x10000000
 8016080:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
 8016084:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
 8016088:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
 801608c:	4a25      	ldr	r2, [pc, #148]	; (8016124 <SystemInit+0xf4>)
 801608e:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
 8016092:	681a      	ldr	r2, [r3, #0]
 8016094:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8016098:	601a      	str	r2, [r3, #0]
 801609a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801609e:	6819      	ldr	r1, [r3, #0]
 80160a0:	0389      	lsls	r1, r1, #14
 80160a2:	d401      	bmi.n	80160a8 <SystemInit+0x78>
 80160a4:	3a01      	subs	r2, #1
 80160a6:	d1fa      	bne.n	801609e <SystemInit+0x6e>
 80160a8:	681a      	ldr	r2, [r3, #0]
 80160aa:	0392      	lsls	r2, r2, #14
 80160ac:	d400      	bmi.n	80160b0 <SystemInit+0x80>
 80160ae:	e7fe      	b.n	80160ae <SystemInit+0x7e>
 80160b0:	685a      	ldr	r2, [r3, #4]
 80160b2:	605a      	str	r2, [r3, #4]
 80160b4:	685a      	ldr	r2, [r3, #4]
 80160b6:	605a      	str	r2, [r3, #4]
 80160b8:	685a      	ldr	r2, [r3, #4]
 80160ba:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80160be:	605a      	str	r2, [r3, #4]
 80160c0:	685a      	ldr	r2, [r3, #4]
 80160c2:	f022 5200 	bic.w	r2, r2, #536870912	; 0x20000000
 80160c6:	f422 127c 	bic.w	r2, r2, #4128768	; 0x3f0000
 80160ca:	605a      	str	r2, [r3, #4]
 80160cc:	685a      	ldr	r2, [r3, #4]
 80160ce:	f442 1204 	orr.w	r2, r2, #2162688	; 0x210000
 80160d2:	605a      	str	r2, [r3, #4]
 80160d4:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 80160d6:	4a14      	ldr	r2, [pc, #80]	; (8016128 <SystemInit+0xf8>)
 80160d8:	400a      	ands	r2, r1
 80160da:	62da      	str	r2, [r3, #44]	; 0x2c
 80160dc:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80160de:	f442 3285 	orr.w	r2, r2, #68096	; 0x10a00
 80160e2:	f042 0244 	orr.w	r2, r2, #68	; 0x44
 80160e6:	62da      	str	r2, [r3, #44]	; 0x2c
 80160e8:	681a      	ldr	r2, [r3, #0]
 80160ea:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 80160ee:	601a      	str	r2, [r3, #0]
 80160f0:	681a      	ldr	r2, [r3, #0]
 80160f2:	0110      	lsls	r0, r2, #4
 80160f4:	d5fc      	bpl.n	80160f0 <SystemInit+0xc0>
 80160f6:	681a      	ldr	r2, [r3, #0]
 80160f8:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 80160fc:	601a      	str	r2, [r3, #0]
 80160fe:	681a      	ldr	r2, [r3, #0]
 8016100:	0191      	lsls	r1, r2, #6
 8016102:	d5fc      	bpl.n	80160fe <SystemInit+0xce>
 8016104:	685a      	ldr	r2, [r3, #4]
 8016106:	f022 0203 	bic.w	r2, r2, #3
 801610a:	605a      	str	r2, [r3, #4]
 801610c:	685a      	ldr	r2, [r3, #4]
 801610e:	f042 0202 	orr.w	r2, r2, #2
 8016112:	605a      	str	r2, [r3, #4]
 8016114:	685a      	ldr	r2, [r3, #4]
 8016116:	0712      	lsls	r2, r2, #28
 8016118:	d5fc      	bpl.n	8016114 <SystemInit+0xe4>
 801611a:	4770      	bx	lr
 801611c:	40021000 	andmi	r1, r2, r0
 8016120:	e0ff000c 	rscs	r0, pc, ip
 8016124:	20003010 	andcs	r3, r0, r0, lsl r0
 8016128:	fffef000 			; <UNDEFINED> instruction: 0xfffef000

0801612c <bkp_deinit>:
 801612c:	b508      	push	{r3, lr}
 801612e:	f000 f9e9 	bl	8016504 <rcu_bkp_reset_enable>
 8016132:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8016136:	f000 b9ed 	b.w	8016514 <rcu_bkp_reset_disable>
	...

0801613c <bkp_data_write>:
 801613c:	f1a0 030b 	sub.w	r3, r0, #11
 8016140:	2b1f      	cmp	r3, #31
 8016142:	d804      	bhi.n	801614e <bkp_data_write+0x12>
 8016144:	4b07      	ldr	r3, [pc, #28]	; (8016164 <bkp_data_write+0x28>)
 8016146:	4403      	add	r3, r0
 8016148:	009b      	lsls	r3, r3, #2
 801614a:	8019      	strh	r1, [r3, #0]
 801614c:	4770      	bx	lr
 801614e:	1e43      	subs	r3, r0, #1
 8016150:	2b09      	cmp	r3, #9
 8016152:	bf9f      	itttt	ls
 8016154:	f100 5080 	addls.w	r0, r0, #268435456	; 0x10000000
 8016158:	f500 50d8 	addls.w	r0, r0, #6912	; 0x1b00
 801615c:	0080      	lslls	r0, r0, #2
 801615e:	8001      	strhls	r1, [r0, #0]
 8016160:	4770      	bx	lr
 8016162:	bf00      	nop
 8016164:	10001b05 	andne	r1, r0, r5, lsl #22

08016168 <bkp_data_read>:
 8016168:	f1a0 030b 	sub.w	r3, r0, #11
 801616c:	2b1f      	cmp	r3, #31
 801616e:	d805      	bhi.n	801617c <bkp_data_read+0x14>
 8016170:	4b08      	ldr	r3, [pc, #32]	; (8016194 <bkp_data_read+0x2c>)
 8016172:	4403      	add	r3, r0
 8016174:	009b      	lsls	r3, r3, #2
 8016176:	8818      	ldrh	r0, [r3, #0]
 8016178:	b280      	uxth	r0, r0
 801617a:	4770      	bx	lr
 801617c:	1e43      	subs	r3, r0, #1
 801617e:	2b09      	cmp	r3, #9
 8016180:	d806      	bhi.n	8016190 <bkp_data_read+0x28>
 8016182:	f100 5080 	add.w	r0, r0, #268435456	; 0x10000000
 8016186:	f500 50d8 	add.w	r0, r0, #6912	; 0x1b00
 801618a:	0080      	lsls	r0, r0, #2
 801618c:	8800      	ldrh	r0, [r0, #0]
 801618e:	e7f3      	b.n	8016178 <bkp_data_read+0x10>
 8016190:	2000      	movs	r0, #0
 8016192:	4770      	bx	lr
 8016194:	10001b05 	andne	r1, r0, r5, lsl #22

08016198 <dma_deinit>:
 8016198:	2314      	movs	r3, #20
 801619a:	fb03 0301 	mla	r3, r3, r1, r0
 801619e:	689a      	ldr	r2, [r3, #8]
 80161a0:	b530      	push	{r4, r5, lr}
 80161a2:	f022 0201 	bic.w	r2, r2, #1
 80161a6:	609a      	str	r2, [r3, #8]
 80161a8:	2200      	movs	r2, #0
 80161aa:	609a      	str	r2, [r3, #8]
 80161ac:	60da      	str	r2, [r3, #12]
 80161ae:	611a      	str	r2, [r3, #16]
 80161b0:	615a      	str	r2, [r3, #20]
 80161b2:	230f      	movs	r3, #15
 80161b4:	6844      	ldr	r4, [r0, #4]
 80161b6:	008d      	lsls	r5, r1, #2
 80161b8:	40ab      	lsls	r3, r5
 80161ba:	4323      	orrs	r3, r4
 80161bc:	6043      	str	r3, [r0, #4]
 80161be:	4b04      	ldr	r3, [pc, #16]	; (80161d0 <dma_deinit+0x38>)
 80161c0:	4298      	cmp	r0, r3
 80161c2:	d103      	bne.n	80161cc <dma_deinit+0x34>
 80161c4:	2905      	cmp	r1, #5
 80161c6:	bf08      	it	eq
 80161c8:	f8c3 2300 	streq.w	r2, [r3, #768]	; 0x300
 80161cc:	bd30      	pop	{r4, r5, pc}
 80161ce:	bf00      	nop
 80161d0:	40020400 	andmi	r0, r2, r0, lsl #8

080161d4 <dma_struct_para_init>:
 80161d4:	2300      	movs	r3, #0
 80161d6:	e9c0 3300 	strd	r3, r3, [r0]
 80161da:	e9c0 3302 	strd	r3, r3, [r0, #8]
 80161de:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80161e2:	8303      	strh	r3, [r0, #24]
 80161e4:	7683      	strb	r3, [r0, #26]
 80161e6:	4770      	bx	lr

080161e8 <dma_init>:
 80161e8:	2314      	movs	r3, #20
 80161ea:	fb03 0101 	mla	r1, r3, r1, r0
 80161ee:	6813      	ldr	r3, [r2, #0]
 80161f0:	b510      	push	{r4, lr}
 80161f2:	610b      	str	r3, [r1, #16]
 80161f4:	6893      	ldr	r3, [r2, #8]
 80161f6:	614b      	str	r3, [r1, #20]
 80161f8:	8a13      	ldrh	r3, [r2, #16]
 80161fa:	60cb      	str	r3, [r1, #12]
 80161fc:	68d4      	ldr	r4, [r2, #12]
 80161fe:	6853      	ldr	r3, [r2, #4]
 8016200:	6888      	ldr	r0, [r1, #8]
 8016202:	4323      	orrs	r3, r4
 8016204:	6954      	ldr	r4, [r2, #20]
 8016206:	f420 507c 	bic.w	r0, r0, #16128	; 0x3f00
 801620a:	4323      	orrs	r3, r4
 801620c:	4303      	orrs	r3, r0
 801620e:	608b      	str	r3, [r1, #8]
 8016210:	7e13      	ldrb	r3, [r2, #24]
 8016212:	2b01      	cmp	r3, #1
 8016214:	688b      	ldr	r3, [r1, #8]
 8016216:	bf0c      	ite	eq
 8016218:	f043 0340 	orreq.w	r3, r3, #64	; 0x40
 801621c:	f023 0340 	bicne.w	r3, r3, #64	; 0x40
 8016220:	608b      	str	r3, [r1, #8]
 8016222:	7e53      	ldrb	r3, [r2, #25]
 8016224:	2b01      	cmp	r3, #1
 8016226:	688b      	ldr	r3, [r1, #8]
 8016228:	bf0c      	ite	eq
 801622a:	f043 0380 	orreq.w	r3, r3, #128	; 0x80
 801622e:	f023 0380 	bicne.w	r3, r3, #128	; 0x80
 8016232:	608b      	str	r3, [r1, #8]
 8016234:	7e93      	ldrb	r3, [r2, #26]
 8016236:	b923      	cbnz	r3, 8016242 <dma_init+0x5a>
 8016238:	688b      	ldr	r3, [r1, #8]
 801623a:	f023 0310 	bic.w	r3, r3, #16
 801623e:	608b      	str	r3, [r1, #8]
 8016240:	bd10      	pop	{r4, pc}
 8016242:	688b      	ldr	r3, [r1, #8]
 8016244:	f043 0310 	orr.w	r3, r3, #16
 8016248:	e7f9      	b.n	801623e <dma_init+0x56>

0801624a <dma_circulation_disable>:
 801624a:	2314      	movs	r3, #20
 801624c:	4359      	muls	r1, r3
 801624e:	3008      	adds	r0, #8
 8016250:	580b      	ldr	r3, [r1, r0]
 8016252:	f023 0320 	bic.w	r3, r3, #32
 8016256:	500b      	str	r3, [r1, r0]
 8016258:	4770      	bx	lr

0801625a <dma_memory_to_memory_disable>:
 801625a:	2314      	movs	r3, #20
 801625c:	4359      	muls	r1, r3
 801625e:	3008      	adds	r0, #8
 8016260:	580b      	ldr	r3, [r1, r0]
 8016262:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8016266:	500b      	str	r3, [r1, r0]
 8016268:	4770      	bx	lr
	...

0801626c <fmc_bank0_unlock>:
 801626c:	4b04      	ldr	r3, [pc, #16]	; (8016280 <fmc_bank0_unlock+0x14>)
 801626e:	691a      	ldr	r2, [r3, #16]
 8016270:	0612      	lsls	r2, r2, #24
 8016272:	bf41      	itttt	mi
 8016274:	4a03      	ldrmi	r2, [pc, #12]	; (8016284 <fmc_bank0_unlock+0x18>)
 8016276:	605a      	strmi	r2, [r3, #4]
 8016278:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 801627c:	605a      	strmi	r2, [r3, #4]
 801627e:	4770      	bx	lr
 8016280:	40022000 	andmi	r2, r2, r0
 8016284:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

08016288 <fmc_bank1_unlock>:
 8016288:	4b04      	ldr	r3, [pc, #16]	; (801629c <fmc_bank1_unlock+0x14>)
 801628a:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 801628c:	0612      	lsls	r2, r2, #24
 801628e:	bf41      	itttt	mi
 8016290:	4a03      	ldrmi	r2, [pc, #12]	; (80162a0 <fmc_bank1_unlock+0x18>)
 8016292:	645a      	strmi	r2, [r3, #68]	; 0x44
 8016294:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 8016298:	645a      	strmi	r2, [r3, #68]	; 0x44
 801629a:	4770      	bx	lr
 801629c:	40022000 	andmi	r2, r2, r0
 80162a0:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

080162a4 <fmc_bank0_lock>:
 80162a4:	4a02      	ldr	r2, [pc, #8]	; (80162b0 <fmc_bank0_lock+0xc>)
 80162a6:	6913      	ldr	r3, [r2, #16]
 80162a8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80162ac:	6113      	str	r3, [r2, #16]
 80162ae:	4770      	bx	lr
 80162b0:	40022000 	andmi	r2, r2, r0

080162b4 <fmc_bank1_lock>:
 80162b4:	4a02      	ldr	r2, [pc, #8]	; (80162c0 <fmc_bank1_lock+0xc>)
 80162b6:	6d13      	ldr	r3, [r2, #80]	; 0x50
 80162b8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80162bc:	6513      	str	r3, [r2, #80]	; 0x50
 80162be:	4770      	bx	lr
 80162c0:	40022000 	andmi	r2, r2, r0

080162c4 <fmc_bank0_state_get>:
 80162c4:	4b08      	ldr	r3, [pc, #32]	; (80162e8 <fmc_bank0_state_get+0x24>)
 80162c6:	68da      	ldr	r2, [r3, #12]
 80162c8:	07d1      	lsls	r1, r2, #31
 80162ca:	d409      	bmi.n	80162e0 <fmc_bank0_state_get+0x1c>
 80162cc:	68da      	ldr	r2, [r3, #12]
 80162ce:	06d2      	lsls	r2, r2, #27
 80162d0:	d408      	bmi.n	80162e4 <fmc_bank0_state_get+0x20>
 80162d2:	68db      	ldr	r3, [r3, #12]
 80162d4:	f013 0f04 	tst.w	r3, #4
 80162d8:	bf0c      	ite	eq
 80162da:	2000      	moveq	r0, #0
 80162dc:	2002      	movne	r0, #2
 80162de:	4770      	bx	lr
 80162e0:	2001      	movs	r0, #1
 80162e2:	4770      	bx	lr
 80162e4:	2003      	movs	r0, #3
 80162e6:	4770      	bx	lr
 80162e8:	40022000 	andmi	r2, r2, r0

080162ec <fmc_bank1_state_get>:
 80162ec:	4b08      	ldr	r3, [pc, #32]	; (8016310 <fmc_bank1_state_get+0x24>)
 80162ee:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 80162f0:	07d1      	lsls	r1, r2, #31
 80162f2:	d409      	bmi.n	8016308 <fmc_bank1_state_get+0x1c>
 80162f4:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 80162f6:	06d2      	lsls	r2, r2, #27
 80162f8:	d408      	bmi.n	801630c <fmc_bank1_state_get+0x20>
 80162fa:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80162fc:	f013 0f04 	tst.w	r3, #4
 8016300:	bf0c      	ite	eq
 8016302:	2000      	moveq	r0, #0
 8016304:	2002      	movne	r0, #2
 8016306:	4770      	bx	lr
 8016308:	2001      	movs	r0, #1
 801630a:	4770      	bx	lr
 801630c:	2003      	movs	r0, #3
 801630e:	4770      	bx	lr
 8016310:	40022000 	andmi	r2, r2, r0

08016314 <fwdgt_enable>:
 8016314:	f64c 42cc 	movw	r2, #52428	; 0xcccc
 8016318:	4b01      	ldr	r3, [pc, #4]	; (8016320 <fwdgt_enable+0xc>)
 801631a:	601a      	str	r2, [r3, #0]
 801631c:	4770      	bx	lr
 801631e:	bf00      	nop
 8016320:	40003000 	andmi	r3, r0, r0

08016324 <fwdgt_counter_reload>:
 8016324:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
 8016328:	4b01      	ldr	r3, [pc, #4]	; (8016330 <fwdgt_counter_reload+0xc>)
 801632a:	601a      	str	r2, [r3, #0]
 801632c:	4770      	bx	lr
 801632e:	bf00      	nop
 8016330:	40003000 	andmi	r3, r0, r0

08016334 <fwdgt_config>:
 8016334:	f245 5355 	movw	r3, #21845	; 0x5555
 8016338:	4a11      	ldr	r2, [pc, #68]	; (8016380 <fwdgt_config+0x4c>)
 801633a:	b510      	push	{r4, lr}
 801633c:	4c11      	ldr	r4, [pc, #68]	; (8016384 <fwdgt_config+0x50>)
 801633e:	6013      	str	r3, [r2, #0]
 8016340:	68d3      	ldr	r3, [r2, #12]
 8016342:	3c01      	subs	r4, #1
 8016344:	f003 0301 	and.w	r3, r3, #1
 8016348:	d013      	beq.n	8016372 <fwdgt_config+0x3e>
 801634a:	2b00      	cmp	r3, #0
 801634c:	d1f8      	bne.n	8016340 <fwdgt_config+0xc>
 801634e:	6051      	str	r1, [r2, #4]
 8016350:	490c      	ldr	r1, [pc, #48]	; (8016384 <fwdgt_config+0x50>)
 8016352:	4a0b      	ldr	r2, [pc, #44]	; (8016380 <fwdgt_config+0x4c>)
 8016354:	68d3      	ldr	r3, [r2, #12]
 8016356:	3901      	subs	r1, #1
 8016358:	f003 0302 	and.w	r3, r3, #2
 801635c:	d00d      	beq.n	801637a <fwdgt_config+0x46>
 801635e:	2b00      	cmp	r3, #0
 8016360:	d1f8      	bne.n	8016354 <fwdgt_config+0x20>
 8016362:	f64a 23aa 	movw	r3, #43690	; 0xaaaa
 8016366:	f3c0 000b 	ubfx	r0, r0, #0, #12
 801636a:	6090      	str	r0, [r2, #8]
 801636c:	2001      	movs	r0, #1
 801636e:	6013      	str	r3, [r2, #0]
 8016370:	e002      	b.n	8016378 <fwdgt_config+0x44>
 8016372:	2b00      	cmp	r3, #0
 8016374:	d0eb      	beq.n	801634e <fwdgt_config+0x1a>
 8016376:	2000      	movs	r0, #0
 8016378:	bd10      	pop	{r4, pc}
 801637a:	2b00      	cmp	r3, #0
 801637c:	d1fb      	bne.n	8016376 <fwdgt_config+0x42>
 801637e:	e7f0      	b.n	8016362 <fwdgt_config+0x2e>
 8016380:	40003000 	andmi	r3, r0, r0
 8016384:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

08016388 <gpio_init>:
 8016388:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801638c:	f04f 0c0f 	mov.w	ip, #15
 8016390:	06cf      	lsls	r7, r1, #27
 8016392:	f04f 0400 	mov.w	r4, #0
 8016396:	f04f 0701 	mov.w	r7, #1
 801639a:	f001 050f 	and.w	r5, r1, #15
 801639e:	bf48      	it	mi
 80163a0:	4315      	orrmi	r5, r2
 80163a2:	fa23 f204 	lsr.w	r2, r3, r4
 80163a6:	07d6      	lsls	r6, r2, #31
 80163a8:	d510      	bpl.n	80163cc <gpio_init+0x44>
 80163aa:	00a2      	lsls	r2, r4, #2
 80163ac:	6806      	ldr	r6, [r0, #0]
 80163ae:	fa0c fe02 	lsl.w	lr, ip, r2
 80163b2:	ea26 060e 	bic.w	r6, r6, lr
 80163b6:	fa05 f202 	lsl.w	r2, r5, r2
 80163ba:	2928      	cmp	r1, #40	; 0x28
 80163bc:	ea42 0206 	orr.w	r2, r2, r6
 80163c0:	d128      	bne.n	8016414 <gpio_init+0x8c>
 80163c2:	fa07 f604 	lsl.w	r6, r7, r4
 80163c6:	401e      	ands	r6, r3
 80163c8:	6146      	str	r6, [r0, #20]
 80163ca:	6002      	str	r2, [r0, #0]
 80163cc:	3401      	adds	r4, #1
 80163ce:	2c08      	cmp	r4, #8
 80163d0:	d1e7      	bne.n	80163a2 <gpio_init+0x1a>
 80163d2:	2600      	movs	r6, #0
 80163d4:	f04f 0c0f 	mov.w	ip, #15
 80163d8:	2701      	movs	r7, #1
 80163da:	f106 0208 	add.w	r2, r6, #8
 80163de:	fa23 f402 	lsr.w	r4, r3, r2
 80163e2:	07e4      	lsls	r4, r4, #31
 80163e4:	d511      	bpl.n	801640a <gpio_init+0x82>
 80163e6:	00b4      	lsls	r4, r6, #2
 80163e8:	f8d0 e004 	ldr.w	lr, [r0, #4]
 80163ec:	fa0c f804 	lsl.w	r8, ip, r4
 80163f0:	ea2e 0e08 	bic.w	lr, lr, r8
 80163f4:	fa05 f404 	lsl.w	r4, r5, r4
 80163f8:	2928      	cmp	r1, #40	; 0x28
 80163fa:	ea44 040e 	orr.w	r4, r4, lr
 80163fe:	d110      	bne.n	8016422 <gpio_init+0x9a>
 8016400:	fa07 f202 	lsl.w	r2, r7, r2
 8016404:	401a      	ands	r2, r3
 8016406:	6142      	str	r2, [r0, #20]
 8016408:	6044      	str	r4, [r0, #4]
 801640a:	3601      	adds	r6, #1
 801640c:	2e08      	cmp	r6, #8
 801640e:	d1e4      	bne.n	80163da <gpio_init+0x52>
 8016410:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016414:	2948      	cmp	r1, #72	; 0x48
 8016416:	bf02      	ittt	eq
 8016418:	fa07 f604 	lsleq.w	r6, r7, r4
 801641c:	401e      	andeq	r6, r3
 801641e:	6106      	streq	r6, [r0, #16]
 8016420:	e7d3      	b.n	80163ca <gpio_init+0x42>
 8016422:	2948      	cmp	r1, #72	; 0x48
 8016424:	bf02      	ittt	eq
 8016426:	fa07 f202 	lsleq.w	r2, r7, r2
 801642a:	401a      	andeq	r2, r3
 801642c:	6102      	streq	r2, [r0, #16]
 801642e:	e7eb      	b.n	8016408 <gpio_init+0x80>

08016430 <gpio_bit_set>:
 8016430:	6101      	str	r1, [r0, #16]
 8016432:	4770      	bx	lr

08016434 <gpio_bit_reset>:
 8016434:	6141      	str	r1, [r0, #20]
 8016436:	4770      	bx	lr

08016438 <gpio_pin_remap_config>:
 8016438:	2800      	cmp	r0, #0
 801643a:	4a16      	ldr	r2, [pc, #88]	; (8016494 <gpio_pin_remap_config+0x5c>)
 801643c:	b530      	push	{r4, r5, lr}
 801643e:	f400 1540 	and.w	r5, r0, #3145728	; 0x300000
 8016442:	bfb4      	ite	lt
 8016444:	69d3      	ldrlt	r3, [r2, #28]
 8016446:	6853      	ldrge	r3, [r2, #4]
 8016448:	f5b5 1f40 	cmp.w	r5, #3145728	; 0x300000
 801644c:	b284      	uxth	r4, r0
 801644e:	d110      	bne.n	8016472 <gpio_pin_remap_config+0x3a>
 8016450:	6855      	ldr	r5, [r2, #4]
 8016452:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 8016456:	f025 6570 	bic.w	r5, r5, #251658240	; 0xf000000
 801645a:	6055      	str	r5, [r2, #4]
 801645c:	b119      	cbz	r1, 8016466 <gpio_pin_remap_config+0x2e>
 801645e:	0d42      	lsrs	r2, r0, #21
 8016460:	0112      	lsls	r2, r2, #4
 8016462:	4094      	lsls	r4, r2
 8016464:	4323      	orrs	r3, r4
 8016466:	4a0b      	ldr	r2, [pc, #44]	; (8016494 <gpio_pin_remap_config+0x5c>)
 8016468:	2800      	cmp	r0, #0
 801646a:	bfb4      	ite	lt
 801646c:	61d3      	strlt	r3, [r2, #28]
 801646e:	6053      	strge	r3, [r2, #4]
 8016470:	bd30      	pop	{r4, r5, pc}
 8016472:	02c2      	lsls	r2, r0, #11
 8016474:	bf4d      	iteet	mi
 8016476:	2203      	movmi	r2, #3
 8016478:	0d42      	lsrpl	r2, r0, #21
 801647a:	0112      	lslpl	r2, r2, #4
 801647c:	f3c0 4503 	ubfxmi	r5, r0, #16, #4
 8016480:	bf4c      	ite	mi
 8016482:	40aa      	lslmi	r2, r5
 8016484:	fa04 f202 	lslpl.w	r2, r4, r2
 8016488:	ea23 0302 	bic.w	r3, r3, r2
 801648c:	f043 6370 	orr.w	r3, r3, #251658240	; 0xf000000
 8016490:	e7e4      	b.n	801645c <gpio_pin_remap_config+0x24>
 8016492:	bf00      	nop
 8016494:	40010000 	andmi	r0, r1, r0

08016498 <gpio_ethernet_phy_select>:
 8016498:	4b04      	ldr	r3, [pc, #16]	; (80164ac <gpio_ethernet_phy_select+0x14>)
 801649a:	6859      	ldr	r1, [r3, #4]
 801649c:	f421 0100 	bic.w	r1, r1, #8388608	; 0x800000
 80164a0:	6059      	str	r1, [r3, #4]
 80164a2:	685a      	ldr	r2, [r3, #4]
 80164a4:	4302      	orrs	r2, r0
 80164a6:	605a      	str	r2, [r3, #4]
 80164a8:	4770      	bx	lr
 80164aa:	bf00      	nop
 80164ac:	40010000 	andmi	r0, r1, r0

080164b0 <pmu_backup_write_enable>:
 80164b0:	4a02      	ldr	r2, [pc, #8]	; (80164bc <pmu_backup_write_enable+0xc>)
 80164b2:	6813      	ldr	r3, [r2, #0]
 80164b4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80164b8:	6013      	str	r3, [r2, #0]
 80164ba:	4770      	bx	lr
 80164bc:	40007000 	andmi	r7, r0, r0

080164c0 <rcu_periph_clock_enable>:
 80164c0:	2201      	movs	r2, #1
 80164c2:	0983      	lsrs	r3, r0, #6
 80164c4:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80164c8:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 80164cc:	6819      	ldr	r1, [r3, #0]
 80164ce:	f000 001f 	and.w	r0, r0, #31
 80164d2:	fa02 f000 	lsl.w	r0, r2, r0
 80164d6:	4308      	orrs	r0, r1
 80164d8:	6018      	str	r0, [r3, #0]
 80164da:	4770      	bx	lr

080164dc <rcu_periph_clock_disable>:
 80164dc:	2101      	movs	r1, #1
 80164de:	0983      	lsrs	r3, r0, #6
 80164e0:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80164e4:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 80164e8:	681a      	ldr	r2, [r3, #0]
 80164ea:	f000 001f 	and.w	r0, r0, #31
 80164ee:	fa01 f000 	lsl.w	r0, r1, r0
 80164f2:	ea22 0000 	bic.w	r0, r2, r0
 80164f6:	6018      	str	r0, [r3, #0]
 80164f8:	4770      	bx	lr

080164fa <rcu_periph_reset_enable>:
 80164fa:	f7ff bfe1 	b.w	80164c0 <rcu_periph_clock_enable>

080164fe <rcu_periph_reset_disable>:
 80164fe:	f7ff bfed 	b.w	80164dc <rcu_periph_clock_disable>
	...

08016504 <rcu_bkp_reset_enable>:
 8016504:	4a02      	ldr	r2, [pc, #8]	; (8016510 <rcu_bkp_reset_enable+0xc>)
 8016506:	6a13      	ldr	r3, [r2, #32]
 8016508:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 801650c:	6213      	str	r3, [r2, #32]
 801650e:	4770      	bx	lr
 8016510:	40021000 	andmi	r1, r2, r0

08016514 <rcu_bkp_reset_disable>:
 8016514:	4a02      	ldr	r2, [pc, #8]	; (8016520 <rcu_bkp_reset_disable+0xc>)
 8016516:	6a13      	ldr	r3, [r2, #32]
 8016518:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 801651c:	6213      	str	r3, [r2, #32]
 801651e:	4770      	bx	lr
 8016520:	40021000 	andmi	r1, r2, r0

08016524 <rcu_ckout0_config>:
 8016524:	b510      	push	{r4, lr}
 8016526:	4c07      	ldr	r4, [pc, #28]	; (8016544 <rcu_ckout0_config+0x20>)
 8016528:	6862      	ldr	r2, [r4, #4]
 801652a:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 801652e:	4302      	orrs	r2, r0
 8016530:	6062      	str	r2, [r4, #4]
 8016532:	f8d4 3080 	ldr.w	r3, [r4, #128]	; 0x80
 8016536:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 801653a:	430b      	orrs	r3, r1
 801653c:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 8016540:	bd10      	pop	{r4, pc}
 8016542:	bf00      	nop
 8016544:	40021000 	andmi	r1, r2, r0

08016548 <rcu_pll2_config>:
 8016548:	4b04      	ldr	r3, [pc, #16]	; (801655c <rcu_pll2_config+0x14>)
 801654a:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 801654c:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
 8016550:	62d9      	str	r1, [r3, #44]	; 0x2c
 8016552:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8016554:	4302      	orrs	r2, r0
 8016556:	62da      	str	r2, [r3, #44]	; 0x2c
 8016558:	4770      	bx	lr
 801655a:	bf00      	nop
 801655c:	40021000 	andmi	r1, r2, r0

08016560 <rcu_adc_clock_config>:
 8016560:	490c      	ldr	r1, [pc, #48]	; (8016594 <rcu_adc_clock_config+0x34>)
 8016562:	2805      	cmp	r0, #5
 8016564:	684b      	ldr	r3, [r1, #4]
 8016566:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 801656a:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 801656e:	d006      	beq.n	801657e <rcu_adc_clock_config+0x1e>
 8016570:	d803      	bhi.n	801657a <rcu_adc_clock_config+0x1a>
 8016572:	2804      	cmp	r0, #4
 8016574:	d10a      	bne.n	801658c <rcu_adc_clock_config+0x2c>
 8016576:	604b      	str	r3, [r1, #4]
 8016578:	4770      	bx	lr
 801657a:	2807      	cmp	r0, #7
 801657c:	d1fb      	bne.n	8016576 <rcu_adc_clock_config+0x16>
 801657e:	4a06      	ldr	r2, [pc, #24]	; (8016598 <rcu_adc_clock_config+0x38>)
 8016580:	ea02 3080 	and.w	r0, r2, r0, lsl #14
 8016584:	4303      	orrs	r3, r0
 8016586:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 801658a:	e7f4      	b.n	8016576 <rcu_adc_clock_config+0x16>
 801658c:	ea43 3380 	orr.w	r3, r3, r0, lsl #14
 8016590:	e7f1      	b.n	8016576 <rcu_adc_clock_config+0x16>
 8016592:	bf00      	nop
 8016594:	40021000 	andmi	r1, r2, r0
 8016598:	fffec000 			; <UNDEFINED> instruction: 0xfffec000

0801659c <rcu_flag_get>:
 801659c:	0983      	lsrs	r3, r0, #6
 801659e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80165a2:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 80165a6:	681b      	ldr	r3, [r3, #0]
 80165a8:	f000 001f 	and.w	r0, r0, #31
 80165ac:	fa23 f000 	lsr.w	r0, r3, r0
 80165b0:	f000 0001 	and.w	r0, r0, #1
 80165b4:	4770      	bx	lr
	...

080165b8 <rcu_osci_stab_wait>:
 80165b8:	281c      	cmp	r0, #28
 80165ba:	b508      	push	{r3, lr}
 80165bc:	d056      	beq.n	801666c <rcu_osci_stab_wait+0xb4>
 80165be:	d812      	bhi.n	80165e6 <rcu_osci_stab_wait+0x2e>
 80165c0:	2818      	cmp	r0, #24
 80165c2:	d04a      	beq.n	801665a <rcu_osci_stab_wait+0xa2>
 80165c4:	d804      	bhi.n	80165d0 <rcu_osci_stab_wait+0x18>
 80165c6:	b398      	cbz	r0, 8016630 <rcu_osci_stab_wait+0x78>
 80165c8:	2810      	cmp	r0, #16
 80165ca:	d022      	beq.n	8016612 <rcu_osci_stab_wait+0x5a>
 80165cc:	2000      	movs	r0, #0
 80165ce:	bd08      	pop	{r3, pc}
 80165d0:	281a      	cmp	r0, #26
 80165d2:	d1fb      	bne.n	80165cc <rcu_osci_stab_wait+0x14>
 80165d4:	4a2f      	ldr	r2, [pc, #188]	; (8016694 <rcu_osci_stab_wait+0xdc>)
 80165d6:	201b      	movs	r0, #27
 80165d8:	f7ff ffe0 	bl	801659c <rcu_flag_get>
 80165dc:	b908      	cbnz	r0, 80165e2 <rcu_osci_stab_wait+0x2a>
 80165de:	3a01      	subs	r2, #1
 80165e0:	d1f9      	bne.n	80165d6 <rcu_osci_stab_wait+0x1e>
 80165e2:	201b      	movs	r0, #27
 80165e4:	e01e      	b.n	8016624 <rcu_osci_stab_wait+0x6c>
 80165e6:	f5b0 6f10 	cmp.w	r0, #2304	; 0x900
 80165ea:	d02b      	beq.n	8016644 <rcu_osci_stab_wait+0x8c>
 80165ec:	f242 431c 	movw	r3, #9244	; 0x241c
 80165f0:	4298      	cmp	r0, r3
 80165f2:	d044      	beq.n	801667e <rcu_osci_stab_wait+0xc6>
 80165f4:	f5b0 6f00 	cmp.w	r0, #2048	; 0x800
 80165f8:	d1e8      	bne.n	80165cc <rcu_osci_stab_wait+0x14>
 80165fa:	f06f 427c 	mvn.w	r2, #4227858432	; 0xfc000000
 80165fe:	f640 0001 	movw	r0, #2049	; 0x801
 8016602:	f7ff ffcb 	bl	801659c <rcu_flag_get>
 8016606:	b908      	cbnz	r0, 801660c <rcu_osci_stab_wait+0x54>
 8016608:	3a01      	subs	r2, #1
 801660a:	d1f8      	bne.n	80165fe <rcu_osci_stab_wait+0x46>
 801660c:	f640 0001 	movw	r0, #2049	; 0x801
 8016610:	e008      	b.n	8016624 <rcu_osci_stab_wait+0x6c>
 8016612:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8016616:	2011      	movs	r0, #17
 8016618:	f7ff ffc0 	bl	801659c <rcu_flag_get>
 801661c:	b908      	cbnz	r0, 8016622 <rcu_osci_stab_wait+0x6a>
 801661e:	3a01      	subs	r2, #1
 8016620:	d1f9      	bne.n	8016616 <rcu_osci_stab_wait+0x5e>
 8016622:	2011      	movs	r0, #17
 8016624:	f7ff ffba 	bl	801659c <rcu_flag_get>
 8016628:	3800      	subs	r0, #0
 801662a:	bf18      	it	ne
 801662c:	2001      	movne	r0, #1
 801662e:	e7ce      	b.n	80165ce <rcu_osci_stab_wait+0x16>
 8016630:	f44f 62a0 	mov.w	r2, #1280	; 0x500
 8016634:	2001      	movs	r0, #1
 8016636:	f7ff ffb1 	bl	801659c <rcu_flag_get>
 801663a:	b908      	cbnz	r0, 8016640 <rcu_osci_stab_wait+0x88>
 801663c:	3a01      	subs	r2, #1
 801663e:	d1f9      	bne.n	8016634 <rcu_osci_stab_wait+0x7c>
 8016640:	2001      	movs	r0, #1
 8016642:	e7ef      	b.n	8016624 <rcu_osci_stab_wait+0x6c>
 8016644:	4a13      	ldr	r2, [pc, #76]	; (8016694 <rcu_osci_stab_wait+0xdc>)
 8016646:	f640 1001 	movw	r0, #2305	; 0x901
 801664a:	f7ff ffa7 	bl	801659c <rcu_flag_get>
 801664e:	b908      	cbnz	r0, 8016654 <rcu_osci_stab_wait+0x9c>
 8016650:	3a01      	subs	r2, #1
 8016652:	d1f8      	bne.n	8016646 <rcu_osci_stab_wait+0x8e>
 8016654:	f640 1001 	movw	r0, #2305	; 0x901
 8016658:	e7e4      	b.n	8016624 <rcu_osci_stab_wait+0x6c>
 801665a:	4a0e      	ldr	r2, [pc, #56]	; (8016694 <rcu_osci_stab_wait+0xdc>)
 801665c:	2019      	movs	r0, #25
 801665e:	f7ff ff9d 	bl	801659c <rcu_flag_get>
 8016662:	b908      	cbnz	r0, 8016668 <rcu_osci_stab_wait+0xb0>
 8016664:	3a01      	subs	r2, #1
 8016666:	d1f9      	bne.n	801665c <rcu_osci_stab_wait+0xa4>
 8016668:	2019      	movs	r0, #25
 801666a:	e7db      	b.n	8016624 <rcu_osci_stab_wait+0x6c>
 801666c:	4a09      	ldr	r2, [pc, #36]	; (8016694 <rcu_osci_stab_wait+0xdc>)
 801666e:	201d      	movs	r0, #29
 8016670:	f7ff ff94 	bl	801659c <rcu_flag_get>
 8016674:	b908      	cbnz	r0, 801667a <rcu_osci_stab_wait+0xc2>
 8016676:	3a01      	subs	r2, #1
 8016678:	d1f9      	bne.n	801666e <rcu_osci_stab_wait+0xb6>
 801667a:	201d      	movs	r0, #29
 801667c:	e7d2      	b.n	8016624 <rcu_osci_stab_wait+0x6c>
 801667e:	4a05      	ldr	r2, [pc, #20]	; (8016694 <rcu_osci_stab_wait+0xdc>)
 8016680:	f242 401d 	movw	r0, #9245	; 0x241d
 8016684:	f7ff ff8a 	bl	801659c <rcu_flag_get>
 8016688:	b908      	cbnz	r0, 801668e <rcu_osci_stab_wait+0xd6>
 801668a:	3a01      	subs	r2, #1
 801668c:	d1f8      	bne.n	8016680 <rcu_osci_stab_wait+0xc8>
 801668e:	f242 401d 	movw	r0, #9245	; 0x241d
 8016692:	e7c7      	b.n	8016624 <rcu_osci_stab_wait+0x6c>
 8016694:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

08016698 <rcu_osci_on>:
 8016698:	f7ff bf12 	b.w	80164c0 <rcu_periph_clock_enable>

0801669c <rcu_clock_freq_get>:
 801669c:	4b3d      	ldr	r3, [pc, #244]	; (8016794 <rcu_clock_freq_get+0xf8>)
 801669e:	b5f0      	push	{r4, r5, r6, r7, lr}
 80166a0:	4604      	mov	r4, r0
 80166a2:	461f      	mov	r7, r3
 80166a4:	b089      	sub	sp, #36	; 0x24
 80166a6:	ad04      	add	r5, sp, #16
 80166a8:	f103 0610 	add.w	r6, r3, #16
 80166ac:	462a      	mov	r2, r5
 80166ae:	6818      	ldr	r0, [r3, #0]
 80166b0:	6859      	ldr	r1, [r3, #4]
 80166b2:	3308      	adds	r3, #8
 80166b4:	c203      	stmia	r2!, {r0, r1}
 80166b6:	42b3      	cmp	r3, r6
 80166b8:	4615      	mov	r5, r2
 80166ba:	d1f7      	bne.n	80166ac <rcu_clock_freq_get+0x10>
 80166bc:	466b      	mov	r3, sp
 80166be:	6938      	ldr	r0, [r7, #16]
 80166c0:	6871      	ldr	r1, [r6, #4]
 80166c2:	4a35      	ldr	r2, [pc, #212]	; (8016798 <rcu_clock_freq_get+0xfc>)
 80166c4:	c303      	stmia	r3!, {r0, r1}
 80166c6:	c303      	stmia	r3!, {r0, r1}
 80166c8:	6853      	ldr	r3, [r2, #4]
 80166ca:	f3c3 0381 	ubfx	r3, r3, #2, #2
 80166ce:	2b01      	cmp	r3, #1
 80166d0:	d052      	beq.n	8016778 <rcu_clock_freq_get+0xdc>
 80166d2:	2b02      	cmp	r3, #2
 80166d4:	d152      	bne.n	801677c <rcu_clock_freq_get+0xe0>
 80166d6:	6853      	ldr	r3, [r2, #4]
 80166d8:	03dd      	lsls	r5, r3, #15
 80166da:	d523      	bpl.n	8016724 <rcu_clock_freq_get+0x88>
 80166dc:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 80166de:	f413 3f80 	tst.w	r3, #65536	; 0x10000
 80166e2:	4b2e      	ldr	r3, [pc, #184]	; (801679c <rcu_clock_freq_get+0x100>)
 80166e4:	d00e      	beq.n	8016704 <rcu_clock_freq_get+0x68>
 80166e6:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 80166e8:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
 80166ea:	f3c1 1103 	ubfx	r1, r1, #4, #4
 80166ee:	f3c0 2003 	ubfx	r0, r0, #8, #4
 80166f2:	3101      	adds	r1, #1
 80166f4:	280f      	cmp	r0, #15
 80166f6:	f100 0502 	add.w	r5, r0, #2
 80166fa:	fbb3 f3f1 	udiv	r3, r3, r1
 80166fe:	bf08      	it	eq
 8016700:	2514      	moveq	r5, #20
 8016702:	436b      	muls	r3, r5
 8016704:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 8016706:	f001 010f 	and.w	r1, r1, #15
 801670a:	3101      	adds	r1, #1
 801670c:	fbb3 f3f1 	udiv	r3, r3, r1
 8016710:	6851      	ldr	r1, [r2, #4]
 8016712:	6850      	ldr	r0, [r2, #4]
 8016714:	f3c1 4183 	ubfx	r1, r1, #18, #4
 8016718:	0080      	lsls	r0, r0, #2
 801671a:	d505      	bpl.n	8016728 <rcu_clock_freq_get+0x8c>
 801671c:	f041 0110 	orr.w	r1, r1, #16
 8016720:	3101      	adds	r1, #1
 8016722:	e027      	b.n	8016774 <rcu_clock_freq_get+0xd8>
 8016724:	4b1e      	ldr	r3, [pc, #120]	; (80167a0 <rcu_clock_freq_get+0x104>)
 8016726:	e7f3      	b.n	8016710 <rcu_clock_freq_get+0x74>
 8016728:	290d      	cmp	r1, #13
 801672a:	d120      	bne.n	801676e <rcu_clock_freq_get+0xd2>
 801672c:	2006      	movs	r0, #6
 801672e:	0859      	lsrs	r1, r3, #1
 8016730:	fb00 1303 	mla	r3, r0, r3, r1
 8016734:	6851      	ldr	r1, [r2, #4]
 8016736:	f3c1 1103 	ubfx	r1, r1, #4, #4
 801673a:	3120      	adds	r1, #32
 801673c:	4469      	add	r1, sp
 801673e:	f811 1c10 	ldrb.w	r1, [r1, #-16]
 8016742:	fa23 f001 	lsr.w	r0, r3, r1
 8016746:	6851      	ldr	r1, [r2, #4]
 8016748:	6852      	ldr	r2, [r2, #4]
 801674a:	f3c1 2102 	ubfx	r1, r1, #8, #3
 801674e:	f3c2 22c2 	ubfx	r2, r2, #11, #3
 8016752:	3120      	adds	r1, #32
 8016754:	3220      	adds	r2, #32
 8016756:	4469      	add	r1, sp
 8016758:	446a      	add	r2, sp
 801675a:	f811 1c20 	ldrb.w	r1, [r1, #-32]
 801675e:	f812 2c18 	ldrb.w	r2, [r2, #-24]
 8016762:	2c03      	cmp	r4, #3
 8016764:	d813      	bhi.n	801678e <rcu_clock_freq_get+0xf2>
 8016766:	e8df f004 	tbb	[pc, r4]
 801676a:	100e0c0b 	andne	r0, lr, fp, lsl #24
 801676e:	290f      	cmp	r1, #15
 8016770:	d0d6      	beq.n	8016720 <rcu_clock_freq_get+0x84>
 8016772:	3102      	adds	r1, #2
 8016774:	434b      	muls	r3, r1
 8016776:	e7dd      	b.n	8016734 <rcu_clock_freq_get+0x98>
 8016778:	4b08      	ldr	r3, [pc, #32]	; (801679c <rcu_clock_freq_get+0x100>)
 801677a:	e7db      	b.n	8016734 <rcu_clock_freq_get+0x98>
 801677c:	4b09      	ldr	r3, [pc, #36]	; (80167a4 <rcu_clock_freq_get+0x108>)
 801677e:	e7d9      	b.n	8016734 <rcu_clock_freq_get+0x98>
 8016780:	4618      	mov	r0, r3
 8016782:	b009      	add	sp, #36	; 0x24
 8016784:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8016786:	40c8      	lsrs	r0, r1
 8016788:	e7fb      	b.n	8016782 <rcu_clock_freq_get+0xe6>
 801678a:	40d0      	lsrs	r0, r2
 801678c:	e7f9      	b.n	8016782 <rcu_clock_freq_get+0xe6>
 801678e:	2000      	movs	r0, #0
 8016790:	e7f7      	b.n	8016782 <rcu_clock_freq_get+0xe6>
 8016792:	bf00      	nop
 8016794:	08017ef5 	stmdaeq	r1, {r0, r2, r4, r5, r6, r7, r9, sl, fp, ip, sp, lr}
 8016798:	40021000 	andmi	r1, r2, r0
 801679c:	017d7840 	cmneq	sp, r0, asr #16
 80167a0:	003d0900 	eorseq	r0, sp, r0, lsl #18
 80167a4:	007a1200 	rsbseq	r1, sl, r0, lsl #4

080167a8 <timer_deinit>:
 80167a8:	b508      	push	{r3, lr}
 80167aa:	4b4e      	ldr	r3, [pc, #312]	; (80168e4 <timer_deinit+0x13c>)
 80167ac:	4298      	cmp	r0, r3
 80167ae:	f000 8092 	beq.w	80168d6 <timer_deinit+0x12e>
 80167b2:	d822      	bhi.n	80167fa <timer_deinit+0x52>
 80167b4:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
 80167b8:	4298      	cmp	r0, r3
 80167ba:	d062      	beq.n	8016882 <timer_deinit+0xda>
 80167bc:	d80b      	bhi.n	80167d6 <timer_deinit+0x2e>
 80167be:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 80167c2:	4298      	cmp	r0, r3
 80167c4:	d04f      	beq.n	8016866 <timer_deinit+0xbe>
 80167c6:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80167ca:	4298      	cmp	r0, r3
 80167cc:	d052      	beq.n	8016874 <timer_deinit+0xcc>
 80167ce:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80167d2:	d041      	beq.n	8016858 <timer_deinit+0xb0>
 80167d4:	bd08      	pop	{r3, pc}
 80167d6:	4b44      	ldr	r3, [pc, #272]	; (80168e8 <timer_deinit+0x140>)
 80167d8:	4298      	cmp	r0, r3
 80167da:	d059      	beq.n	8016890 <timer_deinit+0xe8>
 80167dc:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80167e0:	4298      	cmp	r0, r3
 80167e2:	d071      	beq.n	80168c8 <timer_deinit+0x120>
 80167e4:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 80167e8:	4298      	cmp	r0, r3
 80167ea:	d1f3      	bne.n	80167d4 <timer_deinit+0x2c>
 80167ec:	f240 4004 	movw	r0, #1028	; 0x404
 80167f0:	f7ff fe83 	bl	80164fa <rcu_periph_reset_enable>
 80167f4:	f240 4004 	movw	r0, #1028	; 0x404
 80167f8:	e02a      	b.n	8016850 <timer_deinit+0xa8>
 80167fa:	4b3c      	ldr	r3, [pc, #240]	; (80168ec <timer_deinit+0x144>)
 80167fc:	4298      	cmp	r0, r3
 80167fe:	d055      	beq.n	80168ac <timer_deinit+0x104>
 8016800:	d812      	bhi.n	8016828 <timer_deinit+0x80>
 8016802:	f5a3 5300 	sub.w	r3, r3, #8192	; 0x2000
 8016806:	4298      	cmp	r0, r3
 8016808:	d01c      	beq.n	8016844 <timer_deinit+0x9c>
 801680a:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 801680e:	4298      	cmp	r0, r3
 8016810:	d045      	beq.n	801689e <timer_deinit+0xf6>
 8016812:	f5a3 338a 	sub.w	r3, r3, #70656	; 0x11400
 8016816:	4298      	cmp	r0, r3
 8016818:	d1dc      	bne.n	80167d4 <timer_deinit+0x2c>
 801681a:	f44f 6081 	mov.w	r0, #1032	; 0x408
 801681e:	f7ff fe6c 	bl	80164fa <rcu_periph_reset_enable>
 8016822:	f44f 6081 	mov.w	r0, #1032	; 0x408
 8016826:	e013      	b.n	8016850 <timer_deinit+0xa8>
 8016828:	4b31      	ldr	r3, [pc, #196]	; (80168f0 <timer_deinit+0x148>)
 801682a:	4298      	cmp	r0, r3
 801682c:	d045      	beq.n	80168ba <timer_deinit+0x112>
 801682e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8016832:	4298      	cmp	r0, r3
 8016834:	d1ce      	bne.n	80167d4 <timer_deinit+0x2c>
 8016836:	f240 3015 	movw	r0, #789	; 0x315
 801683a:	f7ff fe5e 	bl	80164fa <rcu_periph_reset_enable>
 801683e:	f240 3015 	movw	r0, #789	; 0x315
 8016842:	e005      	b.n	8016850 <timer_deinit+0xa8>
 8016844:	f240 300b 	movw	r0, #779	; 0x30b
 8016848:	f7ff fe57 	bl	80164fa <rcu_periph_reset_enable>
 801684c:	f240 300b 	movw	r0, #779	; 0x30b
 8016850:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8016854:	f7ff be53 	b.w	80164fe <rcu_periph_reset_disable>
 8016858:	f44f 6080 	mov.w	r0, #1024	; 0x400
 801685c:	f7ff fe4d 	bl	80164fa <rcu_periph_reset_enable>
 8016860:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8016864:	e7f4      	b.n	8016850 <timer_deinit+0xa8>
 8016866:	f240 4001 	movw	r0, #1025	; 0x401
 801686a:	f7ff fe46 	bl	80164fa <rcu_periph_reset_enable>
 801686e:	f240 4001 	movw	r0, #1025	; 0x401
 8016872:	e7ed      	b.n	8016850 <timer_deinit+0xa8>
 8016874:	f240 4002 	movw	r0, #1026	; 0x402
 8016878:	f7ff fe3f 	bl	80164fa <rcu_periph_reset_enable>
 801687c:	f240 4002 	movw	r0, #1026	; 0x402
 8016880:	e7e6      	b.n	8016850 <timer_deinit+0xa8>
 8016882:	f240 4003 	movw	r0, #1027	; 0x403
 8016886:	f7ff fe38 	bl	80164fa <rcu_periph_reset_enable>
 801688a:	f240 4003 	movw	r0, #1027	; 0x403
 801688e:	e7df      	b.n	8016850 <timer_deinit+0xa8>
 8016890:	f240 4005 	movw	r0, #1029	; 0x405
 8016894:	f7ff fe31 	bl	80164fa <rcu_periph_reset_enable>
 8016898:	f240 4005 	movw	r0, #1029	; 0x405
 801689c:	e7d8      	b.n	8016850 <timer_deinit+0xa8>
 801689e:	f240 300d 	movw	r0, #781	; 0x30d
 80168a2:	f7ff fe2a 	bl	80164fa <rcu_periph_reset_enable>
 80168a6:	f240 300d 	movw	r0, #781	; 0x30d
 80168aa:	e7d1      	b.n	8016850 <timer_deinit+0xa8>
 80168ac:	f240 3013 	movw	r0, #787	; 0x313
 80168b0:	f7ff fe23 	bl	80164fa <rcu_periph_reset_enable>
 80168b4:	f240 3013 	movw	r0, #787	; 0x313
 80168b8:	e7ca      	b.n	8016850 <timer_deinit+0xa8>
 80168ba:	f44f 7045 	mov.w	r0, #788	; 0x314
 80168be:	f7ff fe1c 	bl	80164fa <rcu_periph_reset_enable>
 80168c2:	f44f 7045 	mov.w	r0, #788	; 0x314
 80168c6:	e7c3      	b.n	8016850 <timer_deinit+0xa8>
 80168c8:	f240 4006 	movw	r0, #1030	; 0x406
 80168cc:	f7ff fe15 	bl	80164fa <rcu_periph_reset_enable>
 80168d0:	f240 4006 	movw	r0, #1030	; 0x406
 80168d4:	e7bc      	b.n	8016850 <timer_deinit+0xa8>
 80168d6:	f240 4007 	movw	r0, #1031	; 0x407
 80168da:	f7ff fe0e 	bl	80164fa <rcu_periph_reset_enable>
 80168de:	f240 4007 	movw	r0, #1031	; 0x407
 80168e2:	e7b5      	b.n	8016850 <timer_deinit+0xa8>
 80168e4:	40001c00 	andmi	r1, r0, r0, lsl #24
 80168e8:	40001400 	andmi	r1, r0, r0, lsl #8
 80168ec:	40014c00 	andmi	r4, r1, r0, lsl #24
 80168f0:	40015000 	andmi	r5, r1, r0

080168f4 <timer_init>:
 80168f4:	880b      	ldrh	r3, [r1, #0]
 80168f6:	6283      	str	r3, [r0, #40]	; 0x28
 80168f8:	4b26      	ldr	r3, [pc, #152]	; (8016994 <timer_init+0xa0>)
 80168fa:	4298      	cmp	r0, r3
 80168fc:	d018      	beq.n	8016930 <timer_init+0x3c>
 80168fe:	f420 6240 	bic.w	r2, r0, #3072	; 0xc00
 8016902:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 8016906:	f420 6380 	bic.w	r3, r0, #1024	; 0x400
 801690a:	d011      	beq.n	8016930 <timer_init+0x3c>
 801690c:	4a22      	ldr	r2, [pc, #136]	; (8016998 <timer_init+0xa4>)
 801690e:	4290      	cmp	r0, r2
 8016910:	d00e      	beq.n	8016930 <timer_init+0x3c>
 8016912:	f502 52c0 	add.w	r2, r2, #6144	; 0x1800
 8016916:	4290      	cmp	r0, r2
 8016918:	d00a      	beq.n	8016930 <timer_init+0x3c>
 801691a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 801691e:	4293      	cmp	r3, r2
 8016920:	d006      	beq.n	8016930 <timer_init+0x3c>
 8016922:	f5a2 329c 	sub.w	r2, r2, #79872	; 0x13800
 8016926:	4293      	cmp	r3, r2
 8016928:	d002      	beq.n	8016930 <timer_init+0x3c>
 801692a:	4b1c      	ldr	r3, [pc, #112]	; (801699c <timer_init+0xa8>)
 801692c:	4298      	cmp	r0, r3
 801692e:	d10f      	bne.n	8016950 <timer_init+0x5c>
 8016930:	6803      	ldr	r3, [r0, #0]
 8016932:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8016936:	6003      	str	r3, [r0, #0]
 8016938:	884b      	ldrh	r3, [r1, #2]
 801693a:	6802      	ldr	r2, [r0, #0]
 801693c:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8016940:	4313      	orrs	r3, r2
 8016942:	6003      	str	r3, [r0, #0]
 8016944:	888b      	ldrh	r3, [r1, #4]
 8016946:	6802      	ldr	r2, [r0, #0]
 8016948:	f003 0310 	and.w	r3, r3, #16
 801694c:	4313      	orrs	r3, r2
 801694e:	6003      	str	r3, [r0, #0]
 8016950:	688b      	ldr	r3, [r1, #8]
 8016952:	62c3      	str	r3, [r0, #44]	; 0x2c
 8016954:	4b12      	ldr	r3, [pc, #72]	; (80169a0 <timer_init+0xac>)
 8016956:	4298      	cmp	r0, r3
 8016958:	d003      	beq.n	8016962 <timer_init+0x6e>
 801695a:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 801695e:	4298      	cmp	r0, r3
 8016960:	d104      	bne.n	801696c <timer_init+0x78>
 8016962:	6943      	ldr	r3, [r0, #20]
 8016964:	f043 0301 	orr.w	r3, r3, #1
 8016968:	6143      	str	r3, [r0, #20]
 801696a:	4770      	bx	lr
 801696c:	6803      	ldr	r3, [r0, #0]
 801696e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8016972:	6003      	str	r3, [r0, #0]
 8016974:	898b      	ldrh	r3, [r1, #12]
 8016976:	6802      	ldr	r2, [r0, #0]
 8016978:	f403 7340 	and.w	r3, r3, #768	; 0x300
 801697c:	4313      	orrs	r3, r2
 801697e:	6003      	str	r3, [r0, #0]
 8016980:	4b04      	ldr	r3, [pc, #16]	; (8016994 <timer_init+0xa0>)
 8016982:	4298      	cmp	r0, r3
 8016984:	d002      	beq.n	801698c <timer_init+0x98>
 8016986:	4b04      	ldr	r3, [pc, #16]	; (8016998 <timer_init+0xa4>)
 8016988:	4298      	cmp	r0, r3
 801698a:	d1ea      	bne.n	8016962 <timer_init+0x6e>
 801698c:	7b8b      	ldrb	r3, [r1, #14]
 801698e:	6303      	str	r3, [r0, #48]	; 0x30
 8016990:	e7e7      	b.n	8016962 <timer_init+0x6e>
 8016992:	bf00      	nop
 8016994:	40012c00 	andmi	r2, r1, r0, lsl #24
 8016998:	40013400 	andmi	r3, r1, r0, lsl #8
 801699c:	40002000 	andmi	r2, r0, r0
 80169a0:	40001000 	andmi	r1, r0, r0

080169a4 <timer_enable>:
 80169a4:	6803      	ldr	r3, [r0, #0]
 80169a6:	f043 0301 	orr.w	r3, r3, #1
 80169aa:	6003      	str	r3, [r0, #0]
 80169ac:	4770      	bx	lr

080169ae <timer_disable>:
 80169ae:	6803      	ldr	r3, [r0, #0]
 80169b0:	f023 0301 	bic.w	r3, r3, #1
 80169b4:	6003      	str	r3, [r0, #0]
 80169b6:	4770      	bx	lr

080169b8 <timer_dma_enable>:
 80169b8:	68c3      	ldr	r3, [r0, #12]
 80169ba:	4319      	orrs	r1, r3
 80169bc:	60c1      	str	r1, [r0, #12]
 80169be:	4770      	bx	lr

080169c0 <timer_channel_output_mode_config>:
 80169c0:	2903      	cmp	r1, #3
 80169c2:	d81a      	bhi.n	80169fa <timer_channel_output_mode_config+0x3a>
 80169c4:	e8df f001 	tbb	[pc, r1]
 80169c8:	1a120a02 	bne	84991d8 <__exidx_end+0x47e9d4>
 80169cc:	6983      	ldr	r3, [r0, #24]
 80169ce:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80169d2:	6183      	str	r3, [r0, #24]
 80169d4:	6983      	ldr	r3, [r0, #24]
 80169d6:	431a      	orrs	r2, r3
 80169d8:	6182      	str	r2, [r0, #24]
 80169da:	4770      	bx	lr
 80169dc:	6983      	ldr	r3, [r0, #24]
 80169de:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80169e2:	6183      	str	r3, [r0, #24]
 80169e4:	6983      	ldr	r3, [r0, #24]
 80169e6:	ea43 2202 	orr.w	r2, r3, r2, lsl #8
 80169ea:	e7f5      	b.n	80169d8 <timer_channel_output_mode_config+0x18>
 80169ec:	69c3      	ldr	r3, [r0, #28]
 80169ee:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80169f2:	61c3      	str	r3, [r0, #28]
 80169f4:	69c3      	ldr	r3, [r0, #28]
 80169f6:	431a      	orrs	r2, r3
 80169f8:	61c2      	str	r2, [r0, #28]
 80169fa:	4770      	bx	lr
 80169fc:	69c3      	ldr	r3, [r0, #28]
 80169fe:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8016a02:	61c3      	str	r3, [r0, #28]
 8016a04:	69c3      	ldr	r3, [r0, #28]
 8016a06:	ea43 2202 	orr.w	r2, r3, r2, lsl #8
 8016a0a:	e7f5      	b.n	80169f8 <timer_channel_output_mode_config+0x38>

08016a0c <timer_channel_output_pulse_value_config>:
 8016a0c:	2903      	cmp	r1, #3
 8016a0e:	d80a      	bhi.n	8016a26 <timer_channel_output_pulse_value_config+0x1a>
 8016a10:	e8df f001 	tbb	[pc, r1]
 8016a14:	08060402 	stmdaeq	r6, {r1, sl}
 8016a18:	6342      	str	r2, [r0, #52]	; 0x34
 8016a1a:	4770      	bx	lr
 8016a1c:	6382      	str	r2, [r0, #56]	; 0x38
 8016a1e:	4770      	bx	lr
 8016a20:	63c2      	str	r2, [r0, #60]	; 0x3c
 8016a22:	4770      	bx	lr
 8016a24:	6402      	str	r2, [r0, #64]	; 0x40
 8016a26:	4770      	bx	lr

08016a28 <timer_input_trigger_source_select>:
 8016a28:	6882      	ldr	r2, [r0, #8]
 8016a2a:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8016a2e:	6082      	str	r2, [r0, #8]
 8016a30:	6883      	ldr	r3, [r0, #8]
 8016a32:	430b      	orrs	r3, r1
 8016a34:	6083      	str	r3, [r0, #8]
 8016a36:	4770      	bx	lr

08016a38 <timer_master_output_trigger_source_select>:
 8016a38:	6842      	ldr	r2, [r0, #4]
 8016a3a:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8016a3e:	6042      	str	r2, [r0, #4]
 8016a40:	6843      	ldr	r3, [r0, #4]
 8016a42:	430b      	orrs	r3, r1
 8016a44:	6043      	str	r3, [r0, #4]
 8016a46:	4770      	bx	lr

08016a48 <timer_slave_mode_select>:
 8016a48:	6882      	ldr	r2, [r0, #8]
 8016a4a:	f022 0207 	bic.w	r2, r2, #7
 8016a4e:	6082      	str	r2, [r0, #8]
 8016a50:	6883      	ldr	r3, [r0, #8]
 8016a52:	430b      	orrs	r3, r1
 8016a54:	6083      	str	r3, [r0, #8]
 8016a56:	4770      	bx	lr

08016a58 <timer_master_slave_mode_config>:
 8016a58:	2980      	cmp	r1, #128	; 0x80
 8016a5a:	d104      	bne.n	8016a66 <timer_master_slave_mode_config+0xe>
 8016a5c:	6883      	ldr	r3, [r0, #8]
 8016a5e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8016a62:	6083      	str	r3, [r0, #8]
 8016a64:	4770      	bx	lr
 8016a66:	2900      	cmp	r1, #0
 8016a68:	d1fc      	bne.n	8016a64 <timer_master_slave_mode_config+0xc>
 8016a6a:	6883      	ldr	r3, [r0, #8]
 8016a6c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8016a70:	e7f7      	b.n	8016a62 <timer_master_slave_mode_config+0xa>

08016a72 <timer_interrupt_enable>:
 8016a72:	68c3      	ldr	r3, [r0, #12]
 8016a74:	430b      	orrs	r3, r1
 8016a76:	60c3      	str	r3, [r0, #12]
 8016a78:	4770      	bx	lr
	...

08016a7c <usart_deinit>:
 8016a7c:	b508      	push	{r3, lr}
 8016a7e:	4b2d      	ldr	r3, [pc, #180]	; (8016b34 <usart_deinit+0xb8>)
 8016a80:	4298      	cmp	r0, r3
 8016a82:	d050      	beq.n	8016b26 <usart_deinit+0xaa>
 8016a84:	d817      	bhi.n	8016ab6 <usart_deinit+0x3a>
 8016a86:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 8016a8a:	4298      	cmp	r0, r3
 8016a8c:	d044      	beq.n	8016b18 <usart_deinit+0x9c>
 8016a8e:	d808      	bhi.n	8016aa2 <usart_deinit+0x26>
 8016a90:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8016a94:	4298      	cmp	r0, r3
 8016a96:	d02a      	beq.n	8016aee <usart_deinit+0x72>
 8016a98:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8016a9c:	4298      	cmp	r0, r3
 8016a9e:	d02d      	beq.n	8016afc <usart_deinit+0x80>
 8016aa0:	bd08      	pop	{r3, pc}
 8016aa2:	4b25      	ldr	r3, [pc, #148]	; (8016b38 <usart_deinit+0xbc>)
 8016aa4:	4298      	cmp	r0, r3
 8016aa6:	d1fb      	bne.n	8016aa0 <usart_deinit+0x24>
 8016aa8:	f240 4014 	movw	r0, #1044	; 0x414
 8016aac:	f7ff fd25 	bl	80164fa <rcu_periph_reset_enable>
 8016ab0:	f240 4014 	movw	r0, #1044	; 0x414
 8016ab4:	e017      	b.n	8016ae6 <usart_deinit+0x6a>
 8016ab6:	4b21      	ldr	r3, [pc, #132]	; (8016b3c <usart_deinit+0xc0>)
 8016ab8:	4298      	cmp	r0, r3
 8016aba:	d00e      	beq.n	8016ada <usart_deinit+0x5e>
 8016abc:	f503 5360 	add.w	r3, r3, #14336	; 0x3800
 8016ac0:	4298      	cmp	r0, r3
 8016ac2:	d022      	beq.n	8016b0a <usart_deinit+0x8e>
 8016ac4:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
 8016ac8:	4298      	cmp	r0, r3
 8016aca:	d1e9      	bne.n	8016aa0 <usart_deinit+0x24>
 8016acc:	f641 601f 	movw	r0, #7711	; 0x1e1f
 8016ad0:	f7ff fd13 	bl	80164fa <rcu_periph_reset_enable>
 8016ad4:	f641 601f 	movw	r0, #7711	; 0x1e1f
 8016ad8:	e005      	b.n	8016ae6 <usart_deinit+0x6a>
 8016ada:	f240 300e 	movw	r0, #782	; 0x30e
 8016ade:	f7ff fd0c 	bl	80164fa <rcu_periph_reset_enable>
 8016ae2:	f240 300e 	movw	r0, #782	; 0x30e
 8016ae6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8016aea:	f7ff bd08 	b.w	80164fe <rcu_periph_reset_disable>
 8016aee:	f240 4011 	movw	r0, #1041	; 0x411
 8016af2:	f7ff fd02 	bl	80164fa <rcu_periph_reset_enable>
 8016af6:	f240 4011 	movw	r0, #1041	; 0x411
 8016afa:	e7f4      	b.n	8016ae6 <usart_deinit+0x6a>
 8016afc:	f240 4012 	movw	r0, #1042	; 0x412
 8016b00:	f7ff fcfb 	bl	80164fa <rcu_periph_reset_enable>
 8016b04:	f240 4012 	movw	r0, #1042	; 0x412
 8016b08:	e7ed      	b.n	8016ae6 <usart_deinit+0x6a>
 8016b0a:	f641 5018 	movw	r0, #7448	; 0x1d18
 8016b0e:	f7ff fcf4 	bl	80164fa <rcu_periph_reset_enable>
 8016b12:	f641 5018 	movw	r0, #7448	; 0x1d18
 8016b16:	e7e6      	b.n	8016ae6 <usart_deinit+0x6a>
 8016b18:	f240 4013 	movw	r0, #1043	; 0x413
 8016b1c:	f7ff fced 	bl	80164fa <rcu_periph_reset_enable>
 8016b20:	f240 4013 	movw	r0, #1043	; 0x413
 8016b24:	e7df      	b.n	8016ae6 <usart_deinit+0x6a>
 8016b26:	f641 601e 	movw	r0, #7710	; 0x1e1e
 8016b2a:	f7ff fce6 	bl	80164fa <rcu_periph_reset_enable>
 8016b2e:	f641 601e 	movw	r0, #7710	; 0x1e1e
 8016b32:	e7d8      	b.n	8016ae6 <usart_deinit+0x6a>
 8016b34:	40007800 	andmi	r7, r0, r0, lsl #16
 8016b38:	40005000 	andmi	r5, r0, r0
 8016b3c:	40013800 	andmi	r3, r1, r0, lsl #16

08016b40 <usart_baudrate_set>:
 8016b40:	b538      	push	{r3, r4, r5, lr}
 8016b42:	4b16      	ldr	r3, [pc, #88]	; (8016b9c <usart_baudrate_set+0x5c>)
 8016b44:	4604      	mov	r4, r0
 8016b46:	4298      	cmp	r0, r3
 8016b48:	460d      	mov	r5, r1
 8016b4a:	d025      	beq.n	8016b98 <usart_baudrate_set+0x58>
 8016b4c:	d816      	bhi.n	8016b7c <usart_baudrate_set+0x3c>
 8016b4e:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 8016b52:	4298      	cmp	r0, r3
 8016b54:	d020      	beq.n	8016b98 <usart_baudrate_set+0x58>
 8016b56:	d80f      	bhi.n	8016b78 <usart_baudrate_set+0x38>
 8016b58:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8016b5c:	4298      	cmp	r0, r3
 8016b5e:	d01b      	beq.n	8016b98 <usart_baudrate_set+0x58>
 8016b60:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8016b64:	429c      	cmp	r4, r3
 8016b66:	d017      	beq.n	8016b98 <usart_baudrate_set+0x58>
 8016b68:	2000      	movs	r0, #0
 8016b6a:	eb00 0355 	add.w	r3, r0, r5, lsr #1
 8016b6e:	fbb3 f1f5 	udiv	r1, r3, r5
 8016b72:	b289      	uxth	r1, r1
 8016b74:	60a1      	str	r1, [r4, #8]
 8016b76:	bd38      	pop	{r3, r4, r5, pc}
 8016b78:	4b09      	ldr	r3, [pc, #36]	; (8016ba0 <usart_baudrate_set+0x60>)
 8016b7a:	e7f3      	b.n	8016b64 <usart_baudrate_set+0x24>
 8016b7c:	4b09      	ldr	r3, [pc, #36]	; (8016ba4 <usart_baudrate_set+0x64>)
 8016b7e:	4298      	cmp	r0, r3
 8016b80:	d006      	beq.n	8016b90 <usart_baudrate_set+0x50>
 8016b82:	f503 5360 	add.w	r3, r3, #14336	; 0x3800
 8016b86:	4298      	cmp	r0, r3
 8016b88:	d002      	beq.n	8016b90 <usart_baudrate_set+0x50>
 8016b8a:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
 8016b8e:	e7e9      	b.n	8016b64 <usart_baudrate_set+0x24>
 8016b90:	2003      	movs	r0, #3
 8016b92:	f7ff fd83 	bl	801669c <rcu_clock_freq_get>
 8016b96:	e7e8      	b.n	8016b6a <usart_baudrate_set+0x2a>
 8016b98:	2002      	movs	r0, #2
 8016b9a:	e7fa      	b.n	8016b92 <usart_baudrate_set+0x52>
 8016b9c:	40007800 	andmi	r7, r0, r0, lsl #16
 8016ba0:	40005000 	andmi	r5, r0, r0
 8016ba4:	40013800 	andmi	r3, r1, r0, lsl #16

08016ba8 <usart_parity_config>:
 8016ba8:	68c2      	ldr	r2, [r0, #12]
 8016baa:	f422 62c0 	bic.w	r2, r2, #1536	; 0x600
 8016bae:	60c2      	str	r2, [r0, #12]
 8016bb0:	68c3      	ldr	r3, [r0, #12]
 8016bb2:	430b      	orrs	r3, r1
 8016bb4:	60c3      	str	r3, [r0, #12]
 8016bb6:	4770      	bx	lr

08016bb8 <usart_word_length_set>:
 8016bb8:	68c2      	ldr	r2, [r0, #12]
 8016bba:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8016bbe:	60c2      	str	r2, [r0, #12]
 8016bc0:	68c3      	ldr	r3, [r0, #12]
 8016bc2:	430b      	orrs	r3, r1
 8016bc4:	60c3      	str	r3, [r0, #12]
 8016bc6:	4770      	bx	lr

08016bc8 <usart_stop_bit_set>:
 8016bc8:	6902      	ldr	r2, [r0, #16]
 8016bca:	f422 5240 	bic.w	r2, r2, #12288	; 0x3000
 8016bce:	6102      	str	r2, [r0, #16]
 8016bd0:	6903      	ldr	r3, [r0, #16]
 8016bd2:	430b      	orrs	r3, r1
 8016bd4:	6103      	str	r3, [r0, #16]
 8016bd6:	4770      	bx	lr

08016bd8 <usart_transmit_config>:
 8016bd8:	68c3      	ldr	r3, [r0, #12]
 8016bda:	f023 0308 	bic.w	r3, r3, #8
 8016bde:	430b      	orrs	r3, r1
 8016be0:	60c3      	str	r3, [r0, #12]
 8016be2:	4770      	bx	lr

08016be4 <usart_receive_config>:
 8016be4:	68c3      	ldr	r3, [r0, #12]
 8016be6:	f023 0304 	bic.w	r3, r3, #4
 8016bea:	430b      	orrs	r3, r1
 8016bec:	60c3      	str	r3, [r0, #12]
 8016bee:	4770      	bx	lr

08016bf0 <usart_hardware_flow_rts_config>:
 8016bf0:	6943      	ldr	r3, [r0, #20]
 8016bf2:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8016bf6:	430b      	orrs	r3, r1
 8016bf8:	6143      	str	r3, [r0, #20]
 8016bfa:	4770      	bx	lr

08016bfc <usart_hardware_flow_cts_config>:
 8016bfc:	6943      	ldr	r3, [r0, #20]
 8016bfe:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8016c02:	430b      	orrs	r3, r1
 8016c04:	6143      	str	r3, [r0, #20]
 8016c06:	4770      	bx	lr

08016c08 <usart_flag_get>:
 8016c08:	098b      	lsrs	r3, r1, #6
 8016c0a:	5818      	ldr	r0, [r3, r0]
 8016c0c:	f001 011f 	and.w	r1, r1, #31
 8016c10:	40c8      	lsrs	r0, r1
 8016c12:	f000 0001 	and.w	r0, r0, #1
 8016c16:	4770      	bx	lr

08016c18 <emac_start>:
 8016c18:	b510      	push	{r4, lr}
 8016c1a:	4604      	mov	r4, r0
 8016c1c:	f240 6002 	movw	r0, #1538	; 0x602
 8016c20:	f7ff fc4e 	bl	80164c0 <rcu_periph_clock_enable>
 8016c24:	f240 6003 	movw	r0, #1539	; 0x603
 8016c28:	f7ff fc4a 	bl	80164c0 <rcu_periph_clock_enable>
 8016c2c:	f240 6004 	movw	r0, #1540	; 0x604
 8016c30:	f7ff fc46 	bl	80164c0 <rcu_periph_clock_enable>
 8016c34:	f44f 7380 	mov.w	r3, #256	; 0x100
 8016c38:	2203      	movs	r2, #3
 8016c3a:	2118      	movs	r1, #24
 8016c3c:	4846      	ldr	r0, [pc, #280]	; (8016d58 <emac_start+0x140>)
 8016c3e:	f7ff fba3 	bl	8016388 <gpio_init>
 8016c42:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 8016c46:	f7ff fc3b 	bl	80164c0 <rcu_periph_clock_enable>
 8016c4a:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 8016c4e:	f7ff fc7b 	bl	8016548 <rcu_pll2_config>
 8016c52:	201c      	movs	r0, #28
 8016c54:	f7ff fd20 	bl	8016698 <rcu_osci_on>
 8016c58:	201c      	movs	r0, #28
 8016c5a:	f7ff fcad 	bl	80165b8 <rcu_osci_stab_wait>
 8016c5e:	2100      	movs	r1, #0
 8016c60:	f04f 6030 	mov.w	r0, #184549376	; 0xb000000
 8016c64:	f7ff fc5e 	bl	8016524 <rcu_ckout0_config>
 8016c68:	f44f 0000 	mov.w	r0, #8388608	; 0x800000
 8016c6c:	f7ff fc14 	bl	8016498 <gpio_ethernet_phy_select>
 8016c70:	2302      	movs	r3, #2
 8016c72:	2203      	movs	r2, #3
 8016c74:	2104      	movs	r1, #4
 8016c76:	4838      	ldr	r0, [pc, #224]	; (8016d58 <emac_start+0x140>)
 8016c78:	f7ff fb86 	bl	8016388 <gpio_init>
 8016c7c:	2304      	movs	r3, #4
 8016c7e:	2203      	movs	r2, #3
 8016c80:	2118      	movs	r1, #24
 8016c82:	4835      	ldr	r0, [pc, #212]	; (8016d58 <emac_start+0x140>)
 8016c84:	f7ff fb80 	bl	8016388 <gpio_init>
 8016c88:	2380      	movs	r3, #128	; 0x80
 8016c8a:	2203      	movs	r2, #3
 8016c8c:	2104      	movs	r1, #4
 8016c8e:	4832      	ldr	r0, [pc, #200]	; (8016d58 <emac_start+0x140>)
 8016c90:	f7ff fb7a 	bl	8016388 <gpio_init>
 8016c94:	2302      	movs	r3, #2
 8016c96:	2203      	movs	r2, #3
 8016c98:	2118      	movs	r1, #24
 8016c9a:	4830      	ldr	r0, [pc, #192]	; (8016d5c <emac_start+0x144>)
 8016c9c:	f7ff fb74 	bl	8016388 <gpio_init>
 8016ca0:	2310      	movs	r3, #16
 8016ca2:	2203      	movs	r2, #3
 8016ca4:	2104      	movs	r1, #4
 8016ca6:	482d      	ldr	r0, [pc, #180]	; (8016d5c <emac_start+0x144>)
 8016ca8:	f7ff fb6e 	bl	8016388 <gpio_init>
 8016cac:	2320      	movs	r3, #32
 8016cae:	2203      	movs	r2, #3
 8016cb0:	2104      	movs	r1, #4
 8016cb2:	482a      	ldr	r0, [pc, #168]	; (8016d5c <emac_start+0x144>)
 8016cb4:	f7ff fb68 	bl	8016388 <gpio_init>
 8016cb8:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8016cbc:	2203      	movs	r2, #3
 8016cbe:	2118      	movs	r1, #24
 8016cc0:	4827      	ldr	r0, [pc, #156]	; (8016d60 <emac_start+0x148>)
 8016cc2:	f7ff fb61 	bl	8016388 <gpio_init>
 8016cc6:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8016cca:	2203      	movs	r2, #3
 8016ccc:	2118      	movs	r1, #24
 8016cce:	4824      	ldr	r0, [pc, #144]	; (8016d60 <emac_start+0x148>)
 8016cd0:	f7ff fb5a 	bl	8016388 <gpio_init>
 8016cd4:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8016cd8:	2203      	movs	r2, #3
 8016cda:	2118      	movs	r1, #24
 8016cdc:	4820      	ldr	r0, [pc, #128]	; (8016d60 <emac_start+0x148>)
 8016cde:	f7ff fb53 	bl	8016388 <gpio_init>
 8016ce2:	f240 500e 	movw	r0, #1294	; 0x50e
 8016ce6:	f7ff fbeb 	bl	80164c0 <rcu_periph_clock_enable>
 8016cea:	f240 500f 	movw	r0, #1295	; 0x50f
 8016cee:	f7ff fbe7 	bl	80164c0 <rcu_periph_clock_enable>
 8016cf2:	f44f 60a2 	mov.w	r0, #1296	; 0x510
 8016cf6:	f7ff fbe3 	bl	80164c0 <rcu_periph_clock_enable>
 8016cfa:	f001 f831 	bl	8017d60 <enet_deinit>
 8016cfe:	f000 fc89 	bl	8017614 <enet_software_reset>
 8016d02:	b900      	cbnz	r0, 8016d06 <emac_start+0xee>
 8016d04:	e7fe      	b.n	8016d04 <emac_start+0xec>
 8016d06:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 8016d0a:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8016d0e:	2001      	movs	r0, #1
 8016d10:	f000 fe04 	bl	801791c <enet_init>
 8016d14:	4b13      	ldr	r3, [pc, #76]	; (8016d64 <emac_start+0x14c>)
 8016d16:	6018      	str	r0, [r3, #0]
 8016d18:	681b      	ldr	r3, [r3, #0]
 8016d1a:	b903      	cbnz	r3, 8016d1e <emac_start+0x106>
 8016d1c:	e7fe      	b.n	8016d1c <emac_start+0x104>
 8016d1e:	4620      	mov	r0, r4
 8016d20:	f000 fb70 	bl	8017404 <mac_address_get>
 8016d24:	4621      	mov	r1, r4
 8016d26:	2000      	movs	r0, #0
 8016d28:	f000 fd58 	bl	80177dc <enet_mac_address_set>
 8016d2c:	f44f 00e0 	mov.w	r0, #7340032	; 0x700000
 8016d30:	f000 fc84 	bl	801763c <enet_descriptors_chain_init>
 8016d34:	f44f 2060 	mov.w	r0, #917504	; 0xe0000
 8016d38:	f000 fc80 	bl	801763c <enet_descriptors_chain_init>
 8016d3c:	f44f 0140 	mov.w	r1, #12582912	; 0xc00000
 8016d40:	4809      	ldr	r0, [pc, #36]	; (8016d68 <emac_start+0x150>)
 8016d42:	f000 fd45 	bl	80177d0 <enet_transmit_checksum_config>
 8016d46:	f44f 0140 	mov.w	r1, #12582912	; 0xc00000
 8016d4a:	4808      	ldr	r0, [pc, #32]	; (8016d6c <emac_start+0x154>)
 8016d4c:	f000 fd40 	bl	80177d0 <enet_transmit_checksum_config>
 8016d50:	f000 ff7e 	bl	8017c50 <enet_enable>
 8016d54:	2001      	movs	r0, #1
 8016d56:	bd10      	pop	{r4, pc}
 8016d58:	40010800 	andmi	r0, r1, r0, lsl #16
 8016d5c:	40011000 	andmi	r1, r1, r0
 8016d60:	40010c00 	andmi	r0, r1, r0, lsl #24
 8016d64:	20013e08 	andcs	r3, r1, r8, lsl #28
 8016d68:	2001866c 	andcs	r8, r1, ip, ror #12
 8016d6c:	2001867c 	andcs	r8, r1, ip, ror r6

08016d70 <emac_eth_recv>:
 8016d70:	b538      	push	{r3, r4, r5, lr}
 8016d72:	4605      	mov	r5, r0
 8016d74:	f000 ffc4 	bl	8017d00 <enet_rxframe_size_get>
 8016d78:	4604      	mov	r4, r0
 8016d7a:	b138      	cbz	r0, 8016d8c <emac_eth_recv+0x1c>
 8016d7c:	4b05      	ldr	r3, [pc, #20]	; (8016d94 <emac_eth_recv+0x24>)
 8016d7e:	2105      	movs	r1, #5
 8016d80:	6818      	ldr	r0, [r3, #0]
 8016d82:	f000 ff6c 	bl	8017c5e <enet_desc_information_get>
 8016d86:	6028      	str	r0, [r5, #0]
 8016d88:	4620      	mov	r0, r4
 8016d8a:	bd38      	pop	{r3, r4, r5, pc}
 8016d8c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8016d90:	e7fb      	b.n	8016d8a <emac_eth_recv+0x1a>
 8016d92:	bf00      	nop
 8016d94:	20013e18 	andcs	r3, r1, r8, lsl lr

08016d98 <emac_free_pkt>:
 8016d98:	2100      	movs	r1, #0
 8016d9a:	4608      	mov	r0, r1
 8016d9c:	f000 bc96 	b.w	80176cc <enet_frame_receive>

08016da0 <emac_eth_send>:
 8016da0:	f000 bcd4 	b.w	801774c <enet_frame_transmit>

08016da4 <gd32_adc_init()>:
 8016da4:	b510      	push	{r4, lr}
 8016da6:	f240 6009 	movw	r0, #1545	; 0x609
 8016daa:	4c21      	ldr	r4, [pc, #132]	; (8016e30 <gd32_adc_init()+0x8c>)
 8016dac:	f7ff fb88 	bl	80164c0 <rcu_periph_clock_enable>
 8016db0:	2005      	movs	r0, #5
 8016db2:	f7ff fbd5 	bl	8016560 <rcu_adc_clock_config>
 8016db6:	4620      	mov	r0, r4
 8016db8:	2201      	movs	r2, #1
 8016dba:	f44f 7180 	mov.w	r1, #256	; 0x100
 8016dbe:	f000 fb43 	bl	8017448 <adc_special_function_config>
 8016dc2:	f44f 42e0 	mov.w	r2, #28672	; 0x7000
 8016dc6:	4620      	mov	r0, r4
 8016dc8:	2102      	movs	r1, #2
 8016dca:	f000 fbdd 	bl	8017588 <adc_external_trigger_source_config>
 8016dce:	2100      	movs	r1, #0
 8016dd0:	4620      	mov	r0, r4
 8016dd2:	f000 fb61 	bl	8017498 <adc_data_alignment_config>
 8016dd6:	2000      	movs	r0, #0
 8016dd8:	f000 fb26 	bl	8017428 <adc_mode_config>
 8016ddc:	2202      	movs	r2, #2
 8016dde:	4620      	mov	r0, r4
 8016de0:	4611      	mov	r1, r2
 8016de2:	f000 fb85 	bl	80174f0 <adc_channel_length_config>
 8016de6:	4620      	mov	r0, r4
 8016de8:	2307      	movs	r3, #7
 8016dea:	2210      	movs	r2, #16
 8016dec:	2100      	movs	r1, #0
 8016dee:	f000 fb9c 	bl	801752a <adc_inserted_channel_config>
 8016df2:	2307      	movs	r3, #7
 8016df4:	4620      	mov	r0, r4
 8016df6:	2211      	movs	r2, #17
 8016df8:	2101      	movs	r1, #1
 8016dfa:	f000 fb96 	bl	801752a <adc_inserted_channel_config>
 8016dfe:	2201      	movs	r2, #1
 8016e00:	2102      	movs	r1, #2
 8016e02:	4620      	mov	r0, r4
 8016e04:	f000 fbd1 	bl	80175aa <adc_external_trigger_config>
 8016e08:	f000 fb68 	bl	80174dc <adc_tempsensor_vrefint_enable>
 8016e0c:	4620      	mov	r0, r4
 8016e0e:	f000 fb4c 	bl	80174aa <adc_enable>
 8016e12:	2100      	movs	r1, #0
 8016e14:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8016e18:	f000 fadc 	bl	80173d4 <udelay(unsigned int, unsigned int)>
 8016e1c:	4620      	mov	r0, r4
 8016e1e:	f000 fb4c 	bl	80174ba <adc_calibration_enable>
 8016e22:	4620      	mov	r0, r4
 8016e24:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016e28:	2102      	movs	r1, #2
 8016e2a:	f000 bbd9 	b.w	80175e0 <adc_software_trigger_enable>
 8016e2e:	bf00      	nop
 8016e30:	40012400 	andmi	r2, r1, r0, lsl #8

08016e34 <_stop() [clone .isra.0]>:
 8016e34:	b508      	push	{r3, lr}
 8016e36:	4806      	ldr	r0, [pc, #24]	; (8016e50 <_stop() [clone .isra.0]+0x1c>)
 8016e38:	f001 f822 	bl	8017e80 <i2c_stop_on_bus>
 8016e3c:	f640 73ff 	movw	r3, #4095	; 0xfff
 8016e40:	4a04      	ldr	r2, [pc, #16]	; (8016e54 <_stop() [clone .isra.0]+0x20>)
 8016e42:	f8d2 1400 	ldr.w	r1, [r2, #1024]	; 0x400
 8016e46:	0589      	lsls	r1, r1, #22
 8016e48:	d501      	bpl.n	8016e4e <_stop() [clone .isra.0]+0x1a>
 8016e4a:	3b01      	subs	r3, #1
 8016e4c:	d1f9      	bne.n	8016e42 <_stop() [clone .isra.0]+0xe>
 8016e4e:	bd08      	pop	{r3, pc}
 8016e50:	40005400 	andmi	r5, r0, r0, lsl #8
 8016e54:	40005000 	andmi	r5, r0, r0

08016e58 <gd32_i2c_begin()>:
 8016e58:	b510      	push	{r4, lr}
 8016e5a:	f240 7015 	movw	r0, #1813	; 0x715
 8016e5e:	f7ff fb2f 	bl	80164c0 <rcu_periph_clock_enable>
 8016e62:	4c15      	ldr	r4, [pc, #84]	; (8016eb8 <gd32_i2c_begin()+0x60>)
 8016e64:	f240 6003 	movw	r0, #1539	; 0x603
 8016e68:	f7ff fb2a 	bl	80164c0 <rcu_periph_clock_enable>
 8016e6c:	f240 6003 	movw	r0, #1539	; 0x603
 8016e70:	f7ff fb26 	bl	80164c0 <rcu_periph_clock_enable>
 8016e74:	4620      	mov	r0, r4
 8016e76:	f44f 7380 	mov.w	r3, #256	; 0x100
 8016e7a:	2203      	movs	r2, #3
 8016e7c:	211c      	movs	r1, #28
 8016e7e:	f7ff fa83 	bl	8016388 <gpio_init>
 8016e82:	f44f 7300 	mov.w	r3, #512	; 0x200
 8016e86:	2203      	movs	r2, #3
 8016e88:	4620      	mov	r0, r4
 8016e8a:	211c      	movs	r1, #28
 8016e8c:	f7ff fa7c 	bl	8016388 <gpio_init>
 8016e90:	f5a4 4438 	sub.w	r4, r4, #47104	; 0xb800
 8016e94:	2101      	movs	r1, #1
 8016e96:	2002      	movs	r0, #2
 8016e98:	f7ff face 	bl	8016438 <gpio_pin_remap_config>
 8016e9c:	4620      	mov	r0, r4
 8016e9e:	4907      	ldr	r1, [pc, #28]	; (8016ebc <gd32_i2c_begin()+0x64>)
 8016ea0:	2200      	movs	r2, #0
 8016ea2:	f000 ff6b 	bl	8017d7c <i2c_clock_config>
 8016ea6:	4620      	mov	r0, r4
 8016ea8:	f000 ffe0 	bl	8017e6c <i2c_enable>
 8016eac:	4620      	mov	r0, r4
 8016eae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016eb2:	2101      	movs	r1, #1
 8016eb4:	f000 bfc0 	b.w	8017e38 <i2c_ack_config>
 8016eb8:	40010c00 	andmi	r0, r1, r0, lsl #24
 8016ebc:	00061a80 	andeq	r1, r6, r0, lsl #21

08016ec0 <gd32_i2c_set_baudrate(unsigned int)>:
 8016ec0:	4601      	mov	r1, r0
 8016ec2:	2200      	movs	r2, #0
 8016ec4:	4801      	ldr	r0, [pc, #4]	; (8016ecc <gd32_i2c_set_baudrate(unsigned int)+0xc>)
 8016ec6:	f000 bf59 	b.w	8017d7c <i2c_clock_config>
 8016eca:	bf00      	nop
 8016ecc:	40005400 	andmi	r5, r0, r0, lsl #8

08016ed0 <gd32_i2c_set_address(unsigned char)>:
 8016ed0:	4b01      	ldr	r3, [pc, #4]	; (8016ed8 <gd32_i2c_set_address(unsigned char)+0x8>)
 8016ed2:	0040      	lsls	r0, r0, #1
 8016ed4:	7018      	strb	r0, [r3, #0]
 8016ed6:	4770      	bx	lr
 8016ed8:	20013e0c 	andcs	r3, r1, ip, lsl #28

08016edc <gd32_i2c_write(char const*, unsigned int)>:
 8016edc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016ede:	4604      	mov	r4, r0
 8016ee0:	460f      	mov	r7, r1
 8016ee2:	f640 75ff 	movw	r5, #4095	; 0xfff
 8016ee6:	4e2e      	ldr	r6, [pc, #184]	; (8016fa0 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8016ee8:	f240 6101 	movw	r1, #1537	; 0x601
 8016eec:	4630      	mov	r0, r6
 8016eee:	f000 ffd1 	bl	8017e94 <i2c_flag_get>
 8016ef2:	b138      	cbz	r0, 8016f04 <gd32_i2c_write(char const*, unsigned int)+0x28>
 8016ef4:	3d01      	subs	r5, #1
 8016ef6:	d1f7      	bne.n	8016ee8 <gd32_i2c_write(char const*, unsigned int)+0xc>
 8016ef8:	f7ff ff9c 	bl	8016e34 <_stop() [clone .isra.0]>
 8016efc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8016f00:	4240      	negs	r0, r0
 8016f02:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016f04:	4826      	ldr	r0, [pc, #152]	; (8016fa0 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8016f06:	f000 ffb6 	bl	8017e76 <i2c_start_on_bus>
 8016f0a:	f640 75ff 	movw	r5, #4095	; 0xfff
 8016f0e:	4e24      	ldr	r6, [pc, #144]	; (8016fa0 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8016f10:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8016f14:	4630      	mov	r0, r6
 8016f16:	f000 ffbd 	bl	8017e94 <i2c_flag_get>
 8016f1a:	bb68      	cbnz	r0, 8016f78 <gd32_i2c_write(char const*, unsigned int)+0x9c>
 8016f1c:	3d01      	subs	r5, #1
 8016f1e:	d1f7      	bne.n	8016f10 <gd32_i2c_write(char const*, unsigned int)+0x34>
 8016f20:	e7ea      	b.n	8016ef8 <gd32_i2c_write(char const*, unsigned int)+0x1c>
 8016f22:	f240 5101 	movw	r1, #1281	; 0x501
 8016f26:	481e      	ldr	r0, [pc, #120]	; (8016fa0 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8016f28:	f000 ffbc 	bl	8017ea4 <i2c_flag_clear>
 8016f2c:	f640 75ff 	movw	r5, #4095	; 0xfff
 8016f30:	4e1b      	ldr	r6, [pc, #108]	; (8016fa0 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8016f32:	f240 5107 	movw	r1, #1287	; 0x507
 8016f36:	4630      	mov	r0, r6
 8016f38:	f000 ffac 	bl	8017e94 <i2c_flag_get>
 8016f3c:	2801      	cmp	r0, #1
 8016f3e:	d114      	bne.n	8016f6a <gd32_i2c_write(char const*, unsigned int)+0x8e>
 8016f40:	4e17      	ldr	r6, [pc, #92]	; (8016fa0 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8016f42:	4427      	add	r7, r4
 8016f44:	42a7      	cmp	r7, r4
 8016f46:	d013      	beq.n	8016f70 <gd32_i2c_write(char const*, unsigned int)+0x94>
 8016f48:	4630      	mov	r0, r6
 8016f4a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8016f4e:	f000 ff9c 	bl	8017e8a <i2c_data_transmit>
 8016f52:	f640 75ff 	movw	r5, #4095	; 0xfff
 8016f56:	f240 5102 	movw	r1, #1282	; 0x502
 8016f5a:	4630      	mov	r0, r6
 8016f5c:	f000 ff9a 	bl	8017e94 <i2c_flag_get>
 8016f60:	2800      	cmp	r0, #0
 8016f62:	d1ef      	bne.n	8016f44 <gd32_i2c_write(char const*, unsigned int)+0x68>
 8016f64:	3d01      	subs	r5, #1
 8016f66:	d1f6      	bne.n	8016f56 <gd32_i2c_write(char const*, unsigned int)+0x7a>
 8016f68:	e7c6      	b.n	8016ef8 <gd32_i2c_write(char const*, unsigned int)+0x1c>
 8016f6a:	3d01      	subs	r5, #1
 8016f6c:	d1e1      	bne.n	8016f32 <gd32_i2c_write(char const*, unsigned int)+0x56>
 8016f6e:	e7c3      	b.n	8016ef8 <gd32_i2c_write(char const*, unsigned int)+0x1c>
 8016f70:	f7ff ff60 	bl	8016e34 <_stop() [clone .isra.0]>
 8016f74:	2000      	movs	r0, #0
 8016f76:	e7c3      	b.n	8016f00 <gd32_i2c_write(char const*, unsigned int)+0x24>
 8016f78:	4b0a      	ldr	r3, [pc, #40]	; (8016fa4 <gd32_i2c_write(char const*, unsigned int)+0xc8>)
 8016f7a:	f06f 0201 	mvn.w	r2, #1
 8016f7e:	7819      	ldrb	r1, [r3, #0]
 8016f80:	4807      	ldr	r0, [pc, #28]	; (8016fa0 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8016f82:	f000 ff6b 	bl	8017e5c <i2c_master_addressing>
 8016f86:	f640 75ff 	movw	r5, #4095	; 0xfff
 8016f8a:	4e05      	ldr	r6, [pc, #20]	; (8016fa0 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8016f8c:	f240 5101 	movw	r1, #1281	; 0x501
 8016f90:	4630      	mov	r0, r6
 8016f92:	f000 ff7f 	bl	8017e94 <i2c_flag_get>
 8016f96:	2800      	cmp	r0, #0
 8016f98:	d1c3      	bne.n	8016f22 <gd32_i2c_write(char const*, unsigned int)+0x46>
 8016f9a:	3d01      	subs	r5, #1
 8016f9c:	d1f6      	bne.n	8016f8c <gd32_i2c_write(char const*, unsigned int)+0xb0>
 8016f9e:	e7ab      	b.n	8016ef8 <gd32_i2c_write(char const*, unsigned int)+0x1c>
 8016fa0:	40005400 	andmi	r5, r0, r0, lsl #8
 8016fa4:	20013e0c 	andcs	r3, r1, ip, lsl #28

08016fa8 <gd32_i2c_read(char*, unsigned int)>:
 8016fa8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8016fac:	4680      	mov	r8, r0
 8016fae:	460c      	mov	r4, r1
 8016fb0:	f640 76ff 	movw	r6, #4095	; 0xfff
 8016fb4:	4f49      	ldr	r7, [pc, #292]	; (80170dc <gd32_i2c_read(char*, unsigned int)+0x134>)
 8016fb6:	f240 6101 	movw	r1, #1537	; 0x601
 8016fba:	4638      	mov	r0, r7
 8016fbc:	f000 ff6a 	bl	8017e94 <i2c_flag_get>
 8016fc0:	4605      	mov	r5, r0
 8016fc2:	b128      	cbz	r0, 8016fd0 <gd32_i2c_read(char*, unsigned int)+0x28>
 8016fc4:	3e01      	subs	r6, #1
 8016fc6:	d1f6      	bne.n	8016fb6 <gd32_i2c_read(char*, unsigned int)+0xe>
 8016fc8:	f7ff ff34 	bl	8016e34 <_stop() [clone .isra.0]>
 8016fcc:	2504      	movs	r5, #4
 8016fce:	e082      	b.n	80170d6 <gd32_i2c_read(char*, unsigned int)+0x12e>
 8016fd0:	2c02      	cmp	r4, #2
 8016fd2:	d103      	bne.n	8016fdc <gd32_i2c_read(char*, unsigned int)+0x34>
 8016fd4:	4601      	mov	r1, r0
 8016fd6:	4841      	ldr	r0, [pc, #260]	; (80170dc <gd32_i2c_read(char*, unsigned int)+0x134>)
 8016fd8:	f000 ff37 	bl	8017e4a <i2c_ackpos_config>
 8016fdc:	483f      	ldr	r0, [pc, #252]	; (80170dc <gd32_i2c_read(char*, unsigned int)+0x134>)
 8016fde:	f000 ff4a 	bl	8017e76 <i2c_start_on_bus>
 8016fe2:	f640 76ff 	movw	r6, #4095	; 0xfff
 8016fe6:	4f3d      	ldr	r7, [pc, #244]	; (80170dc <gd32_i2c_read(char*, unsigned int)+0x134>)
 8016fe8:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8016fec:	4638      	mov	r0, r7
 8016fee:	f000 ff51 	bl	8017e94 <i2c_flag_get>
 8016ff2:	b910      	cbnz	r0, 8016ffa <gd32_i2c_read(char*, unsigned int)+0x52>
 8016ff4:	3e01      	subs	r6, #1
 8016ff6:	d1f7      	bne.n	8016fe8 <gd32_i2c_read(char*, unsigned int)+0x40>
 8016ff8:	e7e6      	b.n	8016fc8 <gd32_i2c_read(char*, unsigned int)+0x20>
 8016ffa:	4b39      	ldr	r3, [pc, #228]	; (80170e0 <gd32_i2c_read(char*, unsigned int)+0x138>)
 8016ffc:	2201      	movs	r2, #1
 8016ffe:	7819      	ldrb	r1, [r3, #0]
 8017000:	4836      	ldr	r0, [pc, #216]	; (80170dc <gd32_i2c_read(char*, unsigned int)+0x134>)
 8017002:	f000 ff2b 	bl	8017e5c <i2c_master_addressing>
 8017006:	2c02      	cmp	r4, #2
 8017008:	d803      	bhi.n	8017012 <gd32_i2c_read(char*, unsigned int)+0x6a>
 801700a:	2100      	movs	r1, #0
 801700c:	4833      	ldr	r0, [pc, #204]	; (80170dc <gd32_i2c_read(char*, unsigned int)+0x134>)
 801700e:	f000 ff13 	bl	8017e38 <i2c_ack_config>
 8017012:	f640 76ff 	movw	r6, #4095	; 0xfff
 8017016:	4f31      	ldr	r7, [pc, #196]	; (80170dc <gd32_i2c_read(char*, unsigned int)+0x134>)
 8017018:	f240 5101 	movw	r1, #1281	; 0x501
 801701c:	4638      	mov	r0, r7
 801701e:	f000 ff39 	bl	8017e94 <i2c_flag_get>
 8017022:	b910      	cbnz	r0, 801702a <gd32_i2c_read(char*, unsigned int)+0x82>
 8017024:	3e01      	subs	r6, #1
 8017026:	d1f7      	bne.n	8017018 <gd32_i2c_read(char*, unsigned int)+0x70>
 8017028:	e7ce      	b.n	8016fc8 <gd32_i2c_read(char*, unsigned int)+0x20>
 801702a:	f240 5101 	movw	r1, #1281	; 0x501
 801702e:	482b      	ldr	r0, [pc, #172]	; (80170dc <gd32_i2c_read(char*, unsigned int)+0x134>)
 8017030:	f000 ff38 	bl	8017ea4 <i2c_flag_clear>
 8017034:	2c01      	cmp	r4, #1
 8017036:	d102      	bne.n	801703e <gd32_i2c_read(char*, unsigned int)+0x96>
 8017038:	4828      	ldr	r0, [pc, #160]	; (80170dc <gd32_i2c_read(char*, unsigned int)+0x134>)
 801703a:	f000 ff21 	bl	8017e80 <i2c_stop_on_bus>
 801703e:	f640 77ff 	movw	r7, #4095	; 0xfff
 8017042:	4e26      	ldr	r6, [pc, #152]	; (80170dc <gd32_i2c_read(char*, unsigned int)+0x134>)
 8017044:	b3ac      	cbz	r4, 80170b2 <gd32_i2c_read(char*, unsigned int)+0x10a>
 8017046:	2c03      	cmp	r4, #3
 8017048:	d121      	bne.n	801708e <gd32_i2c_read(char*, unsigned int)+0xe6>
 801704a:	f640 79ff 	movw	r9, #4095	; 0xfff
 801704e:	f240 5102 	movw	r1, #1282	; 0x502
 8017052:	4630      	mov	r0, r6
 8017054:	f000 ff1e 	bl	8017e94 <i2c_flag_get>
 8017058:	b918      	cbnz	r0, 8017062 <gd32_i2c_read(char*, unsigned int)+0xba>
 801705a:	f1b9 0901 	subs.w	r9, r9, #1
 801705e:	d1f6      	bne.n	801704e <gd32_i2c_read(char*, unsigned int)+0xa6>
 8017060:	e7b2      	b.n	8016fc8 <gd32_i2c_read(char*, unsigned int)+0x20>
 8017062:	2100      	movs	r1, #0
 8017064:	4630      	mov	r0, r6
 8017066:	f000 fee7 	bl	8017e38 <i2c_ack_config>
 801706a:	f240 5106 	movw	r1, #1286	; 0x506
 801706e:	4630      	mov	r0, r6
 8017070:	f000 ff10 	bl	8017e94 <i2c_flag_get>
 8017074:	b138      	cbz	r0, 8017086 <gd32_i2c_read(char*, unsigned int)+0xde>
 8017076:	4630      	mov	r0, r6
 8017078:	f000 ff09 	bl	8017e8e <i2c_data_receive>
 801707c:	f640 77ff 	movw	r7, #4095	; 0xfff
 8017080:	f808 0b01 	strb.w	r0, [r8], #1
 8017084:	3c01      	subs	r4, #1
 8017086:	3f01      	subs	r7, #1
 8017088:	2f00      	cmp	r7, #0
 801708a:	dcdb      	bgt.n	8017044 <gd32_i2c_read(char*, unsigned int)+0x9c>
 801708c:	e79c      	b.n	8016fc8 <gd32_i2c_read(char*, unsigned int)+0x20>
 801708e:	2c02      	cmp	r4, #2
 8017090:	d1eb      	bne.n	801706a <gd32_i2c_read(char*, unsigned int)+0xc2>
 8017092:	f640 79ff 	movw	r9, #4095	; 0xfff
 8017096:	f240 5102 	movw	r1, #1282	; 0x502
 801709a:	4630      	mov	r0, r6
 801709c:	f000 fefa 	bl	8017e94 <i2c_flag_get>
 80170a0:	b918      	cbnz	r0, 80170aa <gd32_i2c_read(char*, unsigned int)+0x102>
 80170a2:	f1b9 0901 	subs.w	r9, r9, #1
 80170a6:	d1f6      	bne.n	8017096 <gd32_i2c_read(char*, unsigned int)+0xee>
 80170a8:	e78e      	b.n	8016fc8 <gd32_i2c_read(char*, unsigned int)+0x20>
 80170aa:	4630      	mov	r0, r6
 80170ac:	f000 fee8 	bl	8017e80 <i2c_stop_on_bus>
 80170b0:	e7db      	b.n	801706a <gd32_i2c_read(char*, unsigned int)+0xc2>
 80170b2:	f640 73ff 	movw	r3, #4095	; 0xfff
 80170b6:	4a0b      	ldr	r2, [pc, #44]	; (80170e4 <gd32_i2c_read(char*, unsigned int)+0x13c>)
 80170b8:	f8d2 1400 	ldr.w	r1, [r2, #1024]	; 0x400
 80170bc:	0589      	lsls	r1, r1, #22
 80170be:	d502      	bpl.n	80170c6 <gd32_i2c_read(char*, unsigned int)+0x11e>
 80170c0:	3b01      	subs	r3, #1
 80170c2:	d1f9      	bne.n	80170b8 <gd32_i2c_read(char*, unsigned int)+0x110>
 80170c4:	e782      	b.n	8016fcc <gd32_i2c_read(char*, unsigned int)+0x24>
 80170c6:	2101      	movs	r1, #1
 80170c8:	4804      	ldr	r0, [pc, #16]	; (80170dc <gd32_i2c_read(char*, unsigned int)+0x134>)
 80170ca:	f000 feb5 	bl	8017e38 <i2c_ack_config>
 80170ce:	2101      	movs	r1, #1
 80170d0:	4802      	ldr	r0, [pc, #8]	; (80170dc <gd32_i2c_read(char*, unsigned int)+0x134>)
 80170d2:	f000 feba 	bl	8017e4a <i2c_ackpos_config>
 80170d6:	4628      	mov	r0, r5
 80170d8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80170dc:	40005400 	andmi	r5, r0, r0, lsl #8
 80170e0:	20013e0c 	andcs	r3, r1, ip, lsl #28
 80170e4:	40005000 	andmi	r5, r0, r0

080170e8 <gd32_uart_begin>:
 80170e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80170ea:	461d      	mov	r5, r3
 80170ec:	4b81      	ldr	r3, [pc, #516]	; (80172f4 <gd32_uart_begin+0x20c>)
 80170ee:	4604      	mov	r4, r0
 80170f0:	4298      	cmp	r0, r3
 80170f2:	460f      	mov	r7, r1
 80170f4:	4616      	mov	r6, r2
 80170f6:	d05b      	beq.n	80171b0 <gd32_uart_begin+0xc8>
 80170f8:	d80b      	bhi.n	8017112 <gd32_uart_begin+0x2a>
 80170fa:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 80170fe:	4298      	cmp	r0, r3
 8017100:	d045      	beq.n	801718e <gd32_uart_begin+0xa6>
 8017102:	d84b      	bhi.n	801719c <gd32_uart_begin+0xb4>
 8017104:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8017108:	4298      	cmp	r0, r3
 801710a:	d039      	beq.n	8017180 <gd32_uart_begin+0x98>
 801710c:	f240 7012 	movw	r0, #1810	; 0x712
 8017110:	e038      	b.n	8017184 <gd32_uart_begin+0x9c>
 8017112:	4b79      	ldr	r3, [pc, #484]	; (80172f8 <gd32_uart_begin+0x210>)
 8017114:	4298      	cmp	r0, r3
 8017116:	d006      	beq.n	8017126 <gd32_uart_begin+0x3e>
 8017118:	f503 5360 	add.w	r3, r3, #14336	; 0x3800
 801711c:	4298      	cmp	r0, r3
 801711e:	d044      	beq.n	80171aa <gd32_uart_begin+0xc2>
 8017120:	f641 201f 	movw	r0, #6687	; 0x1a1f
 8017124:	e046      	b.n	80171b4 <gd32_uart_begin+0xcc>
 8017126:	f240 600e 	movw	r0, #1550	; 0x60e
 801712a:	f7ff f9c9 	bl	80164c0 <rcu_periph_clock_enable>
 801712e:	f240 6002 	movw	r0, #1538	; 0x602
 8017132:	f7ff f9c5 	bl	80164c0 <rcu_periph_clock_enable>
 8017136:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 801713a:	f7ff f9c1 	bl	80164c0 <rcu_periph_clock_enable>
 801713e:	4b6d      	ldr	r3, [pc, #436]	; (80172f4 <gd32_uart_begin+0x20c>)
 8017140:	429c      	cmp	r4, r3
 8017142:	f000 80c5 	beq.w	80172d0 <gd32_uart_begin+0x1e8>
 8017146:	d83a      	bhi.n	80171be <gd32_uart_begin+0xd6>
 8017148:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 801714c:	429c      	cmp	r4, r3
 801714e:	f000 809e 	beq.w	801728e <gd32_uart_begin+0x1a6>
 8017152:	f200 80a9 	bhi.w	80172a8 <gd32_uart_begin+0x1c0>
 8017156:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 801715a:	429c      	cmp	r4, r3
 801715c:	d04d      	beq.n	80171fa <gd32_uart_begin+0x112>
 801715e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8017162:	2203      	movs	r2, #3
 8017164:	2118      	movs	r1, #24
 8017166:	4865      	ldr	r0, [pc, #404]	; (80172fc <gd32_uart_begin+0x214>)
 8017168:	f7ff f90e 	bl	8016388 <gpio_init>
 801716c:	2104      	movs	r1, #4
 801716e:	4863      	ldr	r0, [pc, #396]	; (80172fc <gd32_uart_begin+0x214>)
 8017170:	f44f 7300 	mov.w	r3, #512	; 0x200
 8017174:	2203      	movs	r2, #3
 8017176:	f7ff f907 	bl	8016388 <gpio_init>
 801717a:	2101      	movs	r1, #1
 801717c:	4860      	ldr	r0, [pc, #384]	; (8017300 <gd32_uart_begin+0x218>)
 801717e:	e04a      	b.n	8017216 <gd32_uart_begin+0x12e>
 8017180:	f240 7011 	movw	r0, #1809	; 0x711
 8017184:	f7ff f99c 	bl	80164c0 <rcu_periph_clock_enable>
 8017188:	f240 6005 	movw	r0, #1541	; 0x605
 801718c:	e7d1      	b.n	8017132 <gd32_uart_begin+0x4a>
 801718e:	f240 7013 	movw	r0, #1811	; 0x713
 8017192:	f7ff f995 	bl	80164c0 <rcu_periph_clock_enable>
 8017196:	f240 6004 	movw	r0, #1540	; 0x604
 801719a:	e7ca      	b.n	8017132 <gd32_uart_begin+0x4a>
 801719c:	f240 7014 	movw	r0, #1812	; 0x714
 80171a0:	f7ff f98e 	bl	80164c0 <rcu_periph_clock_enable>
 80171a4:	f240 6004 	movw	r0, #1540	; 0x604
 80171a8:	e7ec      	b.n	8017184 <gd32_uart_begin+0x9c>
 80171aa:	f641 1018 	movw	r0, #6424	; 0x1918
 80171ae:	e7f0      	b.n	8017192 <gd32_uart_begin+0xaa>
 80171b0:	f641 201e 	movw	r0, #6686	; 0x1a1e
 80171b4:	f7ff f984 	bl	80164c0 <rcu_periph_clock_enable>
 80171b8:	f240 6006 	movw	r0, #1542	; 0x606
 80171bc:	e7b9      	b.n	8017132 <gd32_uart_begin+0x4a>
 80171be:	4b4e      	ldr	r3, [pc, #312]	; (80172f8 <gd32_uart_begin+0x210>)
 80171c0:	429c      	cmp	r4, r3
 80171c2:	d00b      	beq.n	80171dc <gd32_uart_begin+0xf4>
 80171c4:	f503 5360 	add.w	r3, r3, #14336	; 0x3800
 80171c8:	429c      	cmp	r4, r3
 80171ca:	d079      	beq.n	80172c0 <gd32_uart_begin+0x1d8>
 80171cc:	2302      	movs	r3, #2
 80171ce:	2203      	movs	r2, #3
 80171d0:	2118      	movs	r1, #24
 80171d2:	484c      	ldr	r0, [pc, #304]	; (8017304 <gd32_uart_begin+0x21c>)
 80171d4:	f7ff f8d8 	bl	8016388 <gpio_init>
 80171d8:	2301      	movs	r3, #1
 80171da:	e081      	b.n	80172e0 <gd32_uart_begin+0x1f8>
 80171dc:	f44f 7300 	mov.w	r3, #512	; 0x200
 80171e0:	2203      	movs	r2, #3
 80171e2:	2118      	movs	r1, #24
 80171e4:	4848      	ldr	r0, [pc, #288]	; (8017308 <gd32_uart_begin+0x220>)
 80171e6:	f7ff f8cf 	bl	8016388 <gpio_init>
 80171ea:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80171ee:	2203      	movs	r2, #3
 80171f0:	2104      	movs	r1, #4
 80171f2:	4845      	ldr	r0, [pc, #276]	; (8017308 <gd32_uart_begin+0x220>)
 80171f4:	f7ff f8c8 	bl	8016388 <gpio_init>
 80171f8:	e00f      	b.n	801721a <gd32_uart_begin+0x132>
 80171fa:	2320      	movs	r3, #32
 80171fc:	2203      	movs	r2, #3
 80171fe:	2118      	movs	r1, #24
 8017200:	483e      	ldr	r0, [pc, #248]	; (80172fc <gd32_uart_begin+0x214>)
 8017202:	f7ff f8c1 	bl	8016388 <gpio_init>
 8017206:	2104      	movs	r1, #4
 8017208:	483c      	ldr	r0, [pc, #240]	; (80172fc <gd32_uart_begin+0x214>)
 801720a:	2340      	movs	r3, #64	; 0x40
 801720c:	2203      	movs	r2, #3
 801720e:	f7ff f8bb 	bl	8016388 <gpio_init>
 8017212:	2101      	movs	r1, #1
 8017214:	2008      	movs	r0, #8
 8017216:	f7ff f90f 	bl	8016438 <gpio_pin_remap_config>
 801721a:	4620      	mov	r0, r4
 801721c:	f7ff fc2e 	bl	8016a7c <usart_deinit>
 8017220:	68e3      	ldr	r3, [r4, #12]
 8017222:	4639      	mov	r1, r7
 8017224:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8017228:	60e3      	str	r3, [r4, #12]
 801722a:	4620      	mov	r0, r4
 801722c:	f7ff fc88 	bl	8016b40 <usart_baudrate_set>
 8017230:	2e09      	cmp	r6, #9
 8017232:	bf0c      	ite	eq
 8017234:	f44f 5180 	moveq.w	r1, #4096	; 0x1000
 8017238:	2100      	movne	r1, #0
 801723a:	4620      	mov	r0, r4
 801723c:	f7ff fcbc 	bl	8016bb8 <usart_word_length_set>
 8017240:	9b06      	ldr	r3, [sp, #24]
 8017242:	4620      	mov	r0, r4
 8017244:	2b02      	cmp	r3, #2
 8017246:	bf0c      	ite	eq
 8017248:	f44f 5100 	moveq.w	r1, #8192	; 0x2000
 801724c:	2100      	movne	r1, #0
 801724e:	f7ff fcbb 	bl	8016bc8 <usart_stop_bit_set>
 8017252:	2d01      	cmp	r5, #1
 8017254:	d048      	beq.n	80172e8 <gd32_uart_begin+0x200>
 8017256:	2d02      	cmp	r5, #2
 8017258:	d149      	bne.n	80172ee <gd32_uart_begin+0x206>
 801725a:	f44f 6180 	mov.w	r1, #1024	; 0x400
 801725e:	4620      	mov	r0, r4
 8017260:	f7ff fca2 	bl	8016ba8 <usart_parity_config>
 8017264:	2100      	movs	r1, #0
 8017266:	4620      	mov	r0, r4
 8017268:	f7ff fcc2 	bl	8016bf0 <usart_hardware_flow_rts_config>
 801726c:	2100      	movs	r1, #0
 801726e:	4620      	mov	r0, r4
 8017270:	f7ff fcc4 	bl	8016bfc <usart_hardware_flow_cts_config>
 8017274:	2104      	movs	r1, #4
 8017276:	4620      	mov	r0, r4
 8017278:	f7ff fcb4 	bl	8016be4 <usart_receive_config>
 801727c:	2108      	movs	r1, #8
 801727e:	4620      	mov	r0, r4
 8017280:	f7ff fcaa 	bl	8016bd8 <usart_transmit_config>
 8017284:	68e3      	ldr	r3, [r4, #12]
 8017286:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 801728a:	60e3      	str	r3, [r4, #12]
 801728c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801728e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8017292:	2203      	movs	r2, #3
 8017294:	2118      	movs	r1, #24
 8017296:	481d      	ldr	r0, [pc, #116]	; (801730c <gd32_uart_begin+0x224>)
 8017298:	f7ff f876 	bl	8016388 <gpio_init>
 801729c:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80172a0:	2203      	movs	r2, #3
 80172a2:	2104      	movs	r1, #4
 80172a4:	4819      	ldr	r0, [pc, #100]	; (801730c <gd32_uart_begin+0x224>)
 80172a6:	e7a5      	b.n	80171f4 <gd32_uart_begin+0x10c>
 80172a8:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80172ac:	2203      	movs	r2, #3
 80172ae:	2118      	movs	r1, #24
 80172b0:	4816      	ldr	r0, [pc, #88]	; (801730c <gd32_uart_begin+0x224>)
 80172b2:	f7ff f869 	bl	8016388 <gpio_init>
 80172b6:	2304      	movs	r3, #4
 80172b8:	2203      	movs	r2, #3
 80172ba:	4619      	mov	r1, r3
 80172bc:	480f      	ldr	r0, [pc, #60]	; (80172fc <gd32_uart_begin+0x214>)
 80172be:	e799      	b.n	80171f4 <gd32_uart_begin+0x10c>
 80172c0:	2340      	movs	r3, #64	; 0x40
 80172c2:	2203      	movs	r2, #3
 80172c4:	2118      	movs	r1, #24
 80172c6:	4811      	ldr	r0, [pc, #68]	; (801730c <gd32_uart_begin+0x224>)
 80172c8:	f7ff f85e 	bl	8016388 <gpio_init>
 80172cc:	2380      	movs	r3, #128	; 0x80
 80172ce:	e7e7      	b.n	80172a0 <gd32_uart_begin+0x1b8>
 80172d0:	f44f 7380 	mov.w	r3, #256	; 0x100
 80172d4:	2203      	movs	r2, #3
 80172d6:	2118      	movs	r1, #24
 80172d8:	480a      	ldr	r0, [pc, #40]	; (8017304 <gd32_uart_begin+0x21c>)
 80172da:	f7ff f855 	bl	8016388 <gpio_init>
 80172de:	2380      	movs	r3, #128	; 0x80
 80172e0:	2203      	movs	r2, #3
 80172e2:	2104      	movs	r1, #4
 80172e4:	4807      	ldr	r0, [pc, #28]	; (8017304 <gd32_uart_begin+0x21c>)
 80172e6:	e785      	b.n	80171f4 <gd32_uart_begin+0x10c>
 80172e8:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 80172ec:	e7b7      	b.n	801725e <gd32_uart_begin+0x176>
 80172ee:	2100      	movs	r1, #0
 80172f0:	e7b5      	b.n	801725e <gd32_uart_begin+0x176>
 80172f2:	bf00      	nop
 80172f4:	40007800 	andmi	r7, r0, r0, lsl #16
 80172f8:	40013800 	andmi	r3, r1, r0, lsl #16
 80172fc:	40011400 	andmi	r1, r1, r0, lsl #8
 8017300:	00140030 	andseq	r0, r4, r0, lsr r0
 8017304:	40011800 	andmi	r1, r1, r0, lsl #16
 8017308:	40010800 	andmi	r0, r1, r0, lsl #16
 801730c:	40011000 	andmi	r1, r1, r0

08017310 <micros_init()>:
 8017310:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8017312:	2400      	movs	r4, #0
 8017314:	f04f 36ff 	mov.w	r6, #4294967295	; 0xffffffff
 8017318:	4d22      	ldr	r5, [pc, #136]	; (80173a4 <micros_init()+0x94>)
 801731a:	f240 6013 	movw	r0, #1555	; 0x613
 801731e:	f7ff f8cf 	bl	80164c0 <rcu_periph_clock_enable>
 8017322:	4628      	mov	r0, r5
 8017324:	f7ff fa40 	bl	80167a8 <timer_deinit>
 8017328:	4b1f      	ldr	r3, [pc, #124]	; (80173a8 <micros_init()+0x98>)
 801732a:	4628      	mov	r0, r5
 801732c:	f8c3 4c24 	str.w	r4, [r3, #3108]	; 0xc24
 8017330:	4669      	mov	r1, sp
 8017332:	9400      	str	r4, [sp, #0]
 8017334:	f8ad 4004 	strh.w	r4, [sp, #4]
 8017338:	9602      	str	r6, [sp, #8]
 801733a:	f8ad 400c 	strh.w	r4, [sp, #12]
 801733e:	f7ff fad9 	bl	80168f4 <timer_init>
 8017342:	4628      	mov	r0, r5
 8017344:	4621      	mov	r1, r4
 8017346:	f7ff fb87 	bl	8016a58 <timer_master_slave_mode_config>
 801734a:	4628      	mov	r0, r5
 801734c:	2107      	movs	r1, #7
 801734e:	f7ff fb7b 	bl	8016a48 <timer_slave_mode_select>
 8017352:	2120      	movs	r1, #32
 8017354:	4628      	mov	r0, r5
 8017356:	f7ff fb67 	bl	8016a28 <timer_input_trigger_source_select>
 801735a:	4628      	mov	r0, r5
 801735c:	f7ff fb22 	bl	80169a4 <timer_enable>
 8017360:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8017364:	f240 6014 	movw	r0, #1556	; 0x614
 8017368:	f7ff f8aa 	bl	80164c0 <rcu_periph_clock_enable>
 801736c:	4628      	mov	r0, r5
 801736e:	f7ff fa1b 	bl	80167a8 <timer_deinit>
 8017372:	2377      	movs	r3, #119	; 0x77
 8017374:	626c      	str	r4, [r5, #36]	; 0x24
 8017376:	4669      	mov	r1, sp
 8017378:	4628      	mov	r0, r5
 801737a:	9300      	str	r3, [sp, #0]
 801737c:	f8ad 4004 	strh.w	r4, [sp, #4]
 8017380:	9602      	str	r6, [sp, #8]
 8017382:	f8ad 400c 	strh.w	r4, [sp, #12]
 8017386:	f7ff fab5 	bl	80168f4 <timer_init>
 801738a:	4621      	mov	r1, r4
 801738c:	4628      	mov	r0, r5
 801738e:	f7ff fb63 	bl	8016a58 <timer_master_slave_mode_config>
 8017392:	2120      	movs	r1, #32
 8017394:	4628      	mov	r0, r5
 8017396:	f7ff fb4f 	bl	8016a38 <timer_master_output_trigger_source_select>
 801739a:	4628      	mov	r0, r5
 801739c:	f7ff fb02 	bl	80169a4 <timer_enable>
 80173a0:	b004      	add	sp, #16
 80173a2:	bd70      	pop	{r4, r5, r6, pc}
 80173a4:	40014c00 	andmi	r4, r1, r0, lsl #24
 80173a8:	40014000 	andmi	r4, r1, r0

080173ac <udelay_init()>:
 80173ac:	4a07      	ldr	r2, [pc, #28]	; (80173cc <udelay_init()+0x20>)
 80173ae:	f8d2 30fc 	ldr.w	r3, [r2, #252]	; 0xfc
 80173b2:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80173b6:	f8c2 30fc 	str.w	r3, [r2, #252]	; 0xfc
 80173ba:	2200      	movs	r2, #0
 80173bc:	4b04      	ldr	r3, [pc, #16]	; (80173d0 <udelay_init()+0x24>)
 80173be:	605a      	str	r2, [r3, #4]
 80173c0:	681a      	ldr	r2, [r3, #0]
 80173c2:	f042 0201 	orr.w	r2, r2, #1
 80173c6:	601a      	str	r2, [r3, #0]
 80173c8:	4770      	bx	lr
 80173ca:	bf00      	nop
 80173cc:	e000ed00 	and	lr, r0, r0, lsl #26
 80173d0:	e0001000 	and	r1, r0, r0

080173d4 <udelay(unsigned int, unsigned int)>:
 80173d4:	2378      	movs	r3, #120	; 0x78
 80173d6:	b510      	push	{r4, lr}
 80173d8:	4358      	muls	r0, r3
 80173da:	b909      	cbnz	r1, 80173e0 <udelay(unsigned int, unsigned int)+0xc>
 80173dc:	4b08      	ldr	r3, [pc, #32]	; (8017400 <udelay(unsigned int, unsigned int)+0x2c>)
 80173de:	6859      	ldr	r1, [r3, #4]
 80173e0:	2300      	movs	r3, #0
 80173e2:	4c07      	ldr	r4, [pc, #28]	; (8017400 <udelay(unsigned int, unsigned int)+0x2c>)
 80173e4:	6862      	ldr	r2, [r4, #4]
 80173e6:	4291      	cmp	r1, r2
 80173e8:	d0fc      	beq.n	80173e4 <udelay(unsigned int, unsigned int)+0x10>
 80173ea:	bf28      	it	cs
 80173ec:	f103 33ff 	addcs.w	r3, r3, #4294967295	; 0xffffffff
 80173f0:	1a5b      	subs	r3, r3, r1
 80173f2:	4413      	add	r3, r2
 80173f4:	4283      	cmp	r3, r0
 80173f6:	d300      	bcc.n	80173fa <udelay(unsigned int, unsigned int)+0x26>
 80173f8:	bd10      	pop	{r4, pc}
 80173fa:	4611      	mov	r1, r2
 80173fc:	e7f2      	b.n	80173e4 <udelay(unsigned int, unsigned int)+0x10>
 80173fe:	bf00      	nop
 8017400:	e0001000 	and	r1, r0, r0

08017404 <mac_address_get>:
 8017404:	2102      	movs	r1, #2
 8017406:	4a07      	ldr	r2, [pc, #28]	; (8017424 <mac_address_get+0x20>)
 8017408:	f8d2 37e8 	ldr.w	r3, [r2, #2024]	; 0x7e8
 801740c:	f8d2 27ec 	ldr.w	r2, [r2, #2028]	; 0x7ec
 8017410:	7001      	strb	r1, [r0, #0]
 8017412:	7042      	strb	r2, [r0, #1]
 8017414:	0e1a      	lsrs	r2, r3, #24
 8017416:	7082      	strb	r2, [r0, #2]
 8017418:	0c1a      	lsrs	r2, r3, #16
 801741a:	70c2      	strb	r2, [r0, #3]
 801741c:	0a1a      	lsrs	r2, r3, #8
 801741e:	7102      	strb	r2, [r0, #4]
 8017420:	7143      	strb	r3, [r0, #5]
 8017422:	4770      	bx	lr
 8017424:	1ffff000 	svcne	0x00fff000

08017428 <adc_mode_config>:
 8017428:	4b06      	ldr	r3, [pc, #24]	; (8017444 <adc_mode_config+0x1c>)
 801742a:	f8d3 1404 	ldr.w	r1, [r3, #1028]	; 0x404
 801742e:	f421 2170 	bic.w	r1, r1, #983040	; 0xf0000
 8017432:	f8c3 1404 	str.w	r1, [r3, #1028]	; 0x404
 8017436:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 801743a:	4302      	orrs	r2, r0
 801743c:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 8017440:	4770      	bx	lr
 8017442:	bf00      	nop
 8017444:	40012000 	andmi	r2, r1, r0

08017448 <adc_special_function_config>:
 8017448:	b510      	push	{r4, lr}
 801744a:	f401 7380 	and.w	r3, r1, #256	; 0x100
 801744e:	f401 6480 	and.w	r4, r1, #1024	; 0x400
 8017452:	f001 0102 	and.w	r1, r1, #2
 8017456:	b17a      	cbz	r2, 8017478 <adc_special_function_config+0x30>
 8017458:	b11b      	cbz	r3, 8017462 <adc_special_function_config+0x1a>
 801745a:	6843      	ldr	r3, [r0, #4]
 801745c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8017460:	6043      	str	r3, [r0, #4]
 8017462:	b11c      	cbz	r4, 801746c <adc_special_function_config+0x24>
 8017464:	6843      	ldr	r3, [r0, #4]
 8017466:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 801746a:	6043      	str	r3, [r0, #4]
 801746c:	b119      	cbz	r1, 8017476 <adc_special_function_config+0x2e>
 801746e:	6883      	ldr	r3, [r0, #8]
 8017470:	f043 0302 	orr.w	r3, r3, #2
 8017474:	6083      	str	r3, [r0, #8]
 8017476:	bd10      	pop	{r4, pc}
 8017478:	b11b      	cbz	r3, 8017482 <adc_special_function_config+0x3a>
 801747a:	6843      	ldr	r3, [r0, #4]
 801747c:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8017480:	6043      	str	r3, [r0, #4]
 8017482:	b11c      	cbz	r4, 801748c <adc_special_function_config+0x44>
 8017484:	6843      	ldr	r3, [r0, #4]
 8017486:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 801748a:	6043      	str	r3, [r0, #4]
 801748c:	2900      	cmp	r1, #0
 801748e:	d0f2      	beq.n	8017476 <adc_special_function_config+0x2e>
 8017490:	6883      	ldr	r3, [r0, #8]
 8017492:	f023 0302 	bic.w	r3, r3, #2
 8017496:	e7ed      	b.n	8017474 <adc_special_function_config+0x2c>

08017498 <adc_data_alignment_config>:
 8017498:	6883      	ldr	r3, [r0, #8]
 801749a:	b119      	cbz	r1, 80174a4 <adc_data_alignment_config+0xc>
 801749c:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 80174a0:	6083      	str	r3, [r0, #8]
 80174a2:	4770      	bx	lr
 80174a4:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80174a8:	e7fa      	b.n	80174a0 <adc_data_alignment_config+0x8>

080174aa <adc_enable>:
 80174aa:	6883      	ldr	r3, [r0, #8]
 80174ac:	07db      	lsls	r3, r3, #31
 80174ae:	bf5e      	ittt	pl
 80174b0:	6883      	ldrpl	r3, [r0, #8]
 80174b2:	f043 0301 	orrpl.w	r3, r3, #1
 80174b6:	6083      	strpl	r3, [r0, #8]
 80174b8:	4770      	bx	lr

080174ba <adc_calibration_enable>:
 80174ba:	6883      	ldr	r3, [r0, #8]
 80174bc:	f100 0208 	add.w	r2, r0, #8
 80174c0:	f043 0308 	orr.w	r3, r3, #8
 80174c4:	6083      	str	r3, [r0, #8]
 80174c6:	6813      	ldr	r3, [r2, #0]
 80174c8:	0719      	lsls	r1, r3, #28
 80174ca:	d4fc      	bmi.n	80174c6 <adc_calibration_enable+0xc>
 80174cc:	6883      	ldr	r3, [r0, #8]
 80174ce:	f043 0304 	orr.w	r3, r3, #4
 80174d2:	6083      	str	r3, [r0, #8]
 80174d4:	6813      	ldr	r3, [r2, #0]
 80174d6:	075b      	lsls	r3, r3, #29
 80174d8:	d4fc      	bmi.n	80174d4 <adc_calibration_enable+0x1a>
 80174da:	4770      	bx	lr

080174dc <adc_tempsensor_vrefint_enable>:
 80174dc:	4a03      	ldr	r2, [pc, #12]	; (80174ec <adc_tempsensor_vrefint_enable+0x10>)
 80174de:	f8d2 3408 	ldr.w	r3, [r2, #1032]	; 0x408
 80174e2:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 80174e6:	f8c2 3408 	str.w	r3, [r2, #1032]	; 0x408
 80174ea:	4770      	bx	lr
 80174ec:	40012000 	andmi	r2, r1, r0

080174f0 <adc_channel_length_config>:
 80174f0:	2901      	cmp	r1, #1
 80174f2:	d002      	beq.n	80174fa <adc_channel_length_config+0xa>
 80174f4:	2902      	cmp	r1, #2
 80174f6:	d00c      	beq.n	8017512 <adc_channel_length_config+0x22>
 80174f8:	4770      	bx	lr
 80174fa:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80174fc:	3a01      	subs	r2, #1
 80174fe:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 8017502:	62c3      	str	r3, [r0, #44]	; 0x2c
 8017504:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8017506:	0512      	lsls	r2, r2, #20
 8017508:	f402 0270 	and.w	r2, r2, #15728640	; 0xf00000
 801750c:	431a      	orrs	r2, r3
 801750e:	62c2      	str	r2, [r0, #44]	; 0x2c
 8017510:	4770      	bx	lr
 8017512:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8017514:	3a01      	subs	r2, #1
 8017516:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 801751a:	6383      	str	r3, [r0, #56]	; 0x38
 801751c:	6b83      	ldr	r3, [r0, #56]	; 0x38
 801751e:	0512      	lsls	r2, r2, #20
 8017520:	f402 1240 	and.w	r2, r2, #3145728	; 0x300000
 8017524:	431a      	orrs	r2, r3
 8017526:	6382      	str	r2, [r0, #56]	; 0x38
 8017528:	4770      	bx	lr

0801752a <adc_inserted_channel_config>:
 801752a:	b530      	push	{r4, r5, lr}
 801752c:	6b84      	ldr	r4, [r0, #56]	; 0x38
 801752e:	6b85      	ldr	r5, [r0, #56]	; 0x38
 8017530:	f3c4 5401 	ubfx	r4, r4, #20, #2
 8017534:	1a61      	subs	r1, r4, r1
 8017536:	f06f 0404 	mvn.w	r4, #4
 801753a:	4361      	muls	r1, r4
 801753c:	241f      	movs	r4, #31
 801753e:	310f      	adds	r1, #15
 8017540:	408c      	lsls	r4, r1
 8017542:	ea25 0504 	bic.w	r5, r5, r4
 8017546:	fa02 f101 	lsl.w	r1, r2, r1
 801754a:	4329      	orrs	r1, r5
 801754c:	2a09      	cmp	r2, #9
 801754e:	6381      	str	r1, [r0, #56]	; 0x38
 8017550:	d80b      	bhi.n	801756a <adc_inserted_channel_config+0x40>
 8017552:	eb02 0142 	add.w	r1, r2, r2, lsl #1
 8017556:	2207      	movs	r2, #7
 8017558:	6904      	ldr	r4, [r0, #16]
 801755a:	408a      	lsls	r2, r1
 801755c:	ea24 0402 	bic.w	r4, r4, r2
 8017560:	fa03 f201 	lsl.w	r2, r3, r1
 8017564:	4322      	orrs	r2, r4
 8017566:	6102      	str	r2, [r0, #16]
 8017568:	bd30      	pop	{r4, r5, pc}
 801756a:	2a11      	cmp	r2, #17
 801756c:	d8fc      	bhi.n	8017568 <adc_inserted_channel_config+0x3e>
 801756e:	2407      	movs	r4, #7
 8017570:	3a0a      	subs	r2, #10
 8017572:	68c1      	ldr	r1, [r0, #12]
 8017574:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8017578:	4094      	lsls	r4, r2
 801757a:	ea21 0104 	bic.w	r1, r1, r4
 801757e:	fa03 f202 	lsl.w	r2, r3, r2
 8017582:	430a      	orrs	r2, r1
 8017584:	60c2      	str	r2, [r0, #12]
 8017586:	e7ef      	b.n	8017568 <adc_inserted_channel_config+0x3e>

08017588 <adc_external_trigger_source_config>:
 8017588:	2901      	cmp	r1, #1
 801758a:	d002      	beq.n	8017592 <adc_external_trigger_source_config+0xa>
 801758c:	2902      	cmp	r1, #2
 801758e:	d008      	beq.n	80175a2 <adc_external_trigger_source_config+0x1a>
 8017590:	4770      	bx	lr
 8017592:	6883      	ldr	r3, [r0, #8]
 8017594:	f423 2360 	bic.w	r3, r3, #917504	; 0xe0000
 8017598:	6083      	str	r3, [r0, #8]
 801759a:	6883      	ldr	r3, [r0, #8]
 801759c:	431a      	orrs	r2, r3
 801759e:	6082      	str	r2, [r0, #8]
 80175a0:	4770      	bx	lr
 80175a2:	6883      	ldr	r3, [r0, #8]
 80175a4:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80175a8:	e7f6      	b.n	8017598 <adc_external_trigger_source_config+0x10>

080175aa <adc_external_trigger_config>:
 80175aa:	f001 0301 	and.w	r3, r1, #1
 80175ae:	f001 0102 	and.w	r1, r1, #2
 80175b2:	b152      	cbz	r2, 80175ca <adc_external_trigger_config+0x20>
 80175b4:	b11b      	cbz	r3, 80175be <adc_external_trigger_config+0x14>
 80175b6:	6883      	ldr	r3, [r0, #8]
 80175b8:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80175bc:	6083      	str	r3, [r0, #8]
 80175be:	b119      	cbz	r1, 80175c8 <adc_external_trigger_config+0x1e>
 80175c0:	6883      	ldr	r3, [r0, #8]
 80175c2:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80175c6:	6083      	str	r3, [r0, #8]
 80175c8:	4770      	bx	lr
 80175ca:	b11b      	cbz	r3, 80175d4 <adc_external_trigger_config+0x2a>
 80175cc:	6883      	ldr	r3, [r0, #8]
 80175ce:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 80175d2:	6083      	str	r3, [r0, #8]
 80175d4:	2900      	cmp	r1, #0
 80175d6:	d0f7      	beq.n	80175c8 <adc_external_trigger_config+0x1e>
 80175d8:	6883      	ldr	r3, [r0, #8]
 80175da:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 80175de:	e7f2      	b.n	80175c6 <adc_external_trigger_config+0x1c>

080175e0 <adc_software_trigger_enable>:
 80175e0:	07ca      	lsls	r2, r1, #31
 80175e2:	bf42      	ittt	mi
 80175e4:	6883      	ldrmi	r3, [r0, #8]
 80175e6:	f443 0380 	orrmi.w	r3, r3, #4194304	; 0x400000
 80175ea:	6083      	strmi	r3, [r0, #8]
 80175ec:	078b      	lsls	r3, r1, #30
 80175ee:	bf42      	ittt	mi
 80175f0:	6883      	ldrmi	r3, [r0, #8]
 80175f2:	f443 1300 	orrmi.w	r3, r3, #2097152	; 0x200000
 80175f6:	6083      	strmi	r3, [r0, #8]
 80175f8:	4770      	bx	lr

080175fa <enet_delay>:
 80175fa:	2300      	movs	r3, #0
 80175fc:	b082      	sub	sp, #8
 80175fe:	9301      	str	r3, [sp, #4]
 8017600:	9001      	str	r0, [sp, #4]
 8017602:	9b01      	ldr	r3, [sp, #4]
 8017604:	b90b      	cbnz	r3, 801760a <enet_delay+0x10>
 8017606:	b002      	add	sp, #8
 8017608:	4770      	bx	lr
 801760a:	9b01      	ldr	r3, [sp, #4]
 801760c:	3b01      	subs	r3, #1
 801760e:	9301      	str	r3, [sp, #4]
 8017610:	e7f7      	b.n	8017602 <enet_delay+0x8>
	...

08017614 <enet_software_reset>:
 8017614:	4b07      	ldr	r3, [pc, #28]	; (8017634 <enet_software_reset+0x20>)
 8017616:	681a      	ldr	r2, [r3, #0]
 8017618:	f042 0201 	orr.w	r2, r2, #1
 801761c:	601a      	str	r2, [r3, #0]
 801761e:	4a06      	ldr	r2, [pc, #24]	; (8017638 <enet_software_reset+0x24>)
 8017620:	6819      	ldr	r1, [r3, #0]
 8017622:	07c9      	lsls	r1, r1, #31
 8017624:	d501      	bpl.n	801762a <enet_software_reset+0x16>
 8017626:	3a01      	subs	r2, #1
 8017628:	d1fa      	bne.n	8017620 <enet_software_reset+0xc>
 801762a:	6818      	ldr	r0, [r3, #0]
 801762c:	43c0      	mvns	r0, r0
 801762e:	f000 0001 	and.w	r0, r0, #1
 8017632:	4770      	bx	lr
 8017634:	40029000 	andmi	r9, r2, r0
 8017638:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

0801763c <enet_descriptors_chain_init>:
 801763c:	f5b0 0fe0 	cmp.w	r0, #7340032	; 0x700000
 8017640:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017642:	4a19      	ldr	r2, [pc, #100]	; (80176a8 <enet_descriptors_chain_init+0x6c>)
 8017644:	d125      	bne.n	8017692 <enet_descriptors_chain_init+0x56>
 8017646:	2500      	movs	r5, #0
 8017648:	f44f 1680 	mov.w	r6, #1048576	; 0x100000
 801764c:	2002      	movs	r0, #2
 801764e:	4b17      	ldr	r3, [pc, #92]	; (80176ac <enet_descriptors_chain_init+0x70>)
 8017650:	4c17      	ldr	r4, [pc, #92]	; (80176b0 <enet_descriptors_chain_init+0x74>)
 8017652:	6113      	str	r3, [r2, #16]
 8017654:	4a17      	ldr	r2, [pc, #92]	; (80176b4 <enet_descriptors_chain_init+0x78>)
 8017656:	6013      	str	r3, [r2, #0]
 8017658:	2200      	movs	r2, #0
 801765a:	f240 5ef4 	movw	lr, #1524	; 0x5f4
 801765e:	4916      	ldr	r1, [pc, #88]	; (80176b8 <enet_descriptors_chain_init+0x7c>)
 8017660:	f100 3cff 	add.w	ip, r0, #4294967295	; 0xffffffff
 8017664:	600a      	str	r2, [r1, #0]
 8017666:	4915      	ldr	r1, [pc, #84]	; (80176bc <enet_descriptors_chain_init+0x80>)
 8017668:	600a      	str	r2, [r1, #0]
 801766a:	f103 0110 	add.w	r1, r3, #16
 801766e:	fb0e 4702 	mla	r7, lr, r2, r4
 8017672:	f841 7c08 	str.w	r7, [r1, #-8]
 8017676:	4594      	cmp	ip, r2
 8017678:	bf94      	ite	ls
 801767a:	461f      	movls	r7, r3
 801767c:	460f      	movhi	r7, r1
 801767e:	3201      	adds	r2, #1
 8017680:	4290      	cmp	r0, r2
 8017682:	e941 6504 	strd	r6, r5, [r1, #-16]
 8017686:	f841 7c04 	str.w	r7, [r1, #-4]
 801768a:	f101 0110 	add.w	r1, r1, #16
 801768e:	d1ee      	bne.n	801766e <enet_descriptors_chain_init+0x32>
 8017690:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017692:	4b0b      	ldr	r3, [pc, #44]	; (80176c0 <enet_descriptors_chain_init+0x84>)
 8017694:	f244 55f4 	movw	r5, #17908	; 0x45f4
 8017698:	60d3      	str	r3, [r2, #12]
 801769a:	4a0a      	ldr	r2, [pc, #40]	; (80176c4 <enet_descriptors_chain_init+0x88>)
 801769c:	f04f 4600 	mov.w	r6, #2147483648	; 0x80000000
 80176a0:	200a      	movs	r0, #10
 80176a2:	4c09      	ldr	r4, [pc, #36]	; (80176c8 <enet_descriptors_chain_init+0x8c>)
 80176a4:	6013      	str	r3, [r2, #0]
 80176a6:	e7d7      	b.n	8017658 <enet_descriptors_chain_init+0x1c>
 80176a8:	40029000 	andmi	r9, r2, r0
 80176ac:	2001866c 	andcs	r8, r1, ip, ror #12
 80176b0:	20017a84 	andcs	r7, r1, r4, lsl #21
 80176b4:	20013e1c 	andcs	r3, r1, ip, lsl lr
 80176b8:	20013e10 	andcs	r3, r1, r0, lsl lr
 80176bc:	20013e14 	andcs	r3, r1, r4, lsl lr
 80176c0:	200179e4 	andcs	r7, r1, r4, ror #19
 80176c4:	20013e18 	andcs	r3, r1, r8, lsl lr
 80176c8:	20013e5c 	andcs	r3, r1, ip, asr lr

080176cc <enet_frame_receive>:
 80176cc:	4a1d      	ldr	r2, [pc, #116]	; (8017744 <enet_frame_receive+0x78>)
 80176ce:	b510      	push	{r4, lr}
 80176d0:	6813      	ldr	r3, [r2, #0]
 80176d2:	681b      	ldr	r3, [r3, #0]
 80176d4:	2b00      	cmp	r3, #0
 80176d6:	db33      	blt.n	8017740 <enet_frame_receive+0x74>
 80176d8:	b970      	cbnz	r0, 80176f8 <enet_frame_receive+0x2c>
 80176da:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
 80176de:	6813      	ldr	r3, [r2, #0]
 80176e0:	6019      	str	r1, [r3, #0]
 80176e2:	4919      	ldr	r1, [pc, #100]	; (8017748 <enet_frame_receive+0x7c>)
 80176e4:	6948      	ldr	r0, [r1, #20]
 80176e6:	0604      	lsls	r4, r0, #24
 80176e8:	d419      	bmi.n	801771e <enet_frame_receive+0x52>
 80176ea:	6859      	ldr	r1, [r3, #4]
 80176ec:	0448      	lsls	r0, r1, #17
 80176ee:	d51b      	bpl.n	8017728 <enet_frame_receive+0x5c>
 80176f0:	68db      	ldr	r3, [r3, #12]
 80176f2:	2001      	movs	r0, #1
 80176f4:	6013      	str	r3, [r2, #0]
 80176f6:	bd10      	pop	{r4, pc}
 80176f8:	f403 4403 	and.w	r4, r3, #33536	; 0x8300
 80176fc:	f5b4 7f40 	cmp.w	r4, #768	; 0x300
 8017700:	d11e      	bne.n	8017740 <enet_frame_receive+0x74>
 8017702:	f3c3 430d 	ubfx	r3, r3, #16, #14
 8017706:	3b04      	subs	r3, #4
 8017708:	428b      	cmp	r3, r1
 801770a:	d819      	bhi.n	8017740 <enet_frame_receive+0x74>
 801770c:	2100      	movs	r1, #0
 801770e:	4299      	cmp	r1, r3
 8017710:	6814      	ldr	r4, [r2, #0]
 8017712:	d2e2      	bcs.n	80176da <enet_frame_receive+0xe>
 8017714:	68a4      	ldr	r4, [r4, #8]
 8017716:	5d0c      	ldrb	r4, [r1, r4]
 8017718:	5444      	strb	r4, [r0, r1]
 801771a:	3101      	adds	r1, #1
 801771c:	e7f7      	b.n	801770e <enet_frame_receive+0x42>
 801771e:	2080      	movs	r0, #128	; 0x80
 8017720:	6148      	str	r0, [r1, #20]
 8017722:	2000      	movs	r0, #0
 8017724:	6088      	str	r0, [r1, #8]
 8017726:	e7e0      	b.n	80176ea <enet_frame_receive+0x1e>
 8017728:	f411 4f00 	tst.w	r1, #32768	; 0x8000
 801772c:	4906      	ldr	r1, [pc, #24]	; (8017748 <enet_frame_receive+0x7c>)
 801772e:	bf05      	ittet	eq
 8017730:	3310      	addeq	r3, #16
 8017732:	6809      	ldreq	r1, [r1, #0]
 8017734:	68cb      	ldrne	r3, [r1, #12]
 8017736:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 801773a:	bf08      	it	eq
 801773c:	185b      	addeq	r3, r3, r1
 801773e:	e7d8      	b.n	80176f2 <enet_frame_receive+0x26>
 8017740:	2000      	movs	r0, #0
 8017742:	e7d8      	b.n	80176f6 <enet_frame_receive+0x2a>
 8017744:	20013e18 	andcs	r3, r1, r8, lsl lr
 8017748:	40029000 	andmi	r9, r2, r0

0801774c <enet_frame_transmit>:
 801774c:	4a1e      	ldr	r2, [pc, #120]	; (80177c8 <enet_frame_transmit+0x7c>)
 801774e:	b530      	push	{r4, r5, lr}
 8017750:	6813      	ldr	r3, [r2, #0]
 8017752:	681b      	ldr	r3, [r3, #0]
 8017754:	2b00      	cmp	r3, #0
 8017756:	db34      	blt.n	80177c2 <enet_frame_transmit+0x76>
 8017758:	f240 53f4 	movw	r3, #1524	; 0x5f4
 801775c:	4299      	cmp	r1, r3
 801775e:	d830      	bhi.n	80177c2 <enet_frame_transmit+0x76>
 8017760:	b9e8      	cbnz	r0, 801779e <enet_frame_transmit+0x52>
 8017762:	6813      	ldr	r3, [r2, #0]
 8017764:	4819      	ldr	r0, [pc, #100]	; (80177cc <enet_frame_transmit+0x80>)
 8017766:	6059      	str	r1, [r3, #4]
 8017768:	6819      	ldr	r1, [r3, #0]
 801776a:	f041 4130 	orr.w	r1, r1, #2952790016	; 0xb0000000
 801776e:	6019      	str	r1, [r3, #0]
 8017770:	6941      	ldr	r1, [r0, #20]
 8017772:	6944      	ldr	r4, [r0, #20]
 8017774:	f001 0104 	and.w	r1, r1, #4
 8017778:	f004 0420 	and.w	r4, r4, #32
 801777c:	4321      	orrs	r1, r4
 801777e:	d110      	bne.n	80177a2 <enet_frame_transmit+0x56>
 8017780:	6819      	ldr	r1, [r3, #0]
 8017782:	02c8      	lsls	r0, r1, #11
 8017784:	d511      	bpl.n	80177aa <enet_frame_transmit+0x5e>
 8017786:	68db      	ldr	r3, [r3, #12]
 8017788:	2001      	movs	r0, #1
 801778a:	6013      	str	r3, [r2, #0]
 801778c:	bd30      	pop	{r4, r5, pc}
 801778e:	5cc5      	ldrb	r5, [r0, r3]
 8017790:	68a4      	ldr	r4, [r4, #8]
 8017792:	551d      	strb	r5, [r3, r4]
 8017794:	3301      	adds	r3, #1
 8017796:	428b      	cmp	r3, r1
 8017798:	6814      	ldr	r4, [r2, #0]
 801779a:	d1f8      	bne.n	801778e <enet_frame_transmit+0x42>
 801779c:	e7e1      	b.n	8017762 <enet_frame_transmit+0x16>
 801779e:	2300      	movs	r3, #0
 80177a0:	e7f9      	b.n	8017796 <enet_frame_transmit+0x4a>
 80177a2:	6141      	str	r1, [r0, #20]
 80177a4:	2100      	movs	r1, #0
 80177a6:	6041      	str	r1, [r0, #4]
 80177a8:	e7ea      	b.n	8017780 <enet_frame_transmit+0x34>
 80177aa:	f411 1f00 	tst.w	r1, #2097152	; 0x200000
 80177ae:	4907      	ldr	r1, [pc, #28]	; (80177cc <enet_frame_transmit+0x80>)
 80177b0:	bf05      	ittet	eq
 80177b2:	3310      	addeq	r3, #16
 80177b4:	6809      	ldreq	r1, [r1, #0]
 80177b6:	690b      	ldrne	r3, [r1, #16]
 80177b8:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 80177bc:	bf08      	it	eq
 80177be:	185b      	addeq	r3, r3, r1
 80177c0:	e7e2      	b.n	8017788 <enet_frame_transmit+0x3c>
 80177c2:	2000      	movs	r0, #0
 80177c4:	e7e2      	b.n	801778c <enet_frame_transmit+0x40>
 80177c6:	bf00      	nop
 80177c8:	20013e1c 	andcs	r3, r1, ip, lsl lr
 80177cc:	40029000 	andmi	r9, r2, r0

080177d0 <enet_transmit_checksum_config>:
 80177d0:	6803      	ldr	r3, [r0, #0]
 80177d2:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 80177d6:	430b      	orrs	r3, r1
 80177d8:	6003      	str	r3, [r0, #0]
 80177da:	4770      	bx	lr

080177dc <enet_mac_address_set>:
 80177dc:	888a      	ldrh	r2, [r1, #4]
 80177de:	4b03      	ldr	r3, [pc, #12]	; (80177ec <enet_mac_address_set+0x10>)
 80177e0:	50c2      	str	r2, [r0, r3]
 80177e2:	680a      	ldr	r2, [r1, #0]
 80177e4:	3304      	adds	r3, #4
 80177e6:	50c2      	str	r2, [r0, r3]
 80177e8:	4770      	bx	lr
 80177ea:	bf00      	nop
 80177ec:	40028040 	andmi	r8, r2, r0, asr #32

080177f0 <enet_rx_enable>:
 80177f0:	4a05      	ldr	r2, [pc, #20]	; (8017808 <enet_rx_enable+0x18>)
 80177f2:	6813      	ldr	r3, [r2, #0]
 80177f4:	f043 0304 	orr.w	r3, r3, #4
 80177f8:	6013      	str	r3, [r2, #0]
 80177fa:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 80177fe:	6993      	ldr	r3, [r2, #24]
 8017800:	f043 0302 	orr.w	r3, r3, #2
 8017804:	6193      	str	r3, [r2, #24]
 8017806:	4770      	bx	lr
 8017808:	40028000 	andmi	r8, r2, r0

0801780c <enet_phy_write_read>:
 801780c:	b530      	push	{r4, r5, lr}
 801780e:	4604      	mov	r4, r0
 8017810:	4d13      	ldr	r5, [pc, #76]	; (8017860 <enet_phy_write_read+0x54>)
 8017812:	0192      	lsls	r2, r2, #6
 8017814:	6928      	ldr	r0, [r5, #16]
 8017816:	f402 62f8 	and.w	r2, r2, #1984	; 0x7c0
 801781a:	f420 407f 	bic.w	r0, r0, #65280	; 0xff00
 801781e:	f020 00c3 	bic.w	r0, r0, #195	; 0xc3
 8017822:	4302      	orrs	r2, r0
 8017824:	02c9      	lsls	r1, r1, #11
 8017826:	b289      	uxth	r1, r1
 8017828:	2c02      	cmp	r4, #2
 801782a:	ea42 0204 	orr.w	r2, r2, r4
 801782e:	ea42 0201 	orr.w	r2, r2, r1
 8017832:	bf08      	it	eq
 8017834:	8819      	ldrheq	r1, [r3, #0]
 8017836:	f042 0201 	orr.w	r2, r2, #1
 801783a:	bf08      	it	eq
 801783c:	6169      	streq	r1, [r5, #20]
 801783e:	612a      	str	r2, [r5, #16]
 8017840:	4907      	ldr	r1, [pc, #28]	; (8017860 <enet_phy_write_read+0x54>)
 8017842:	4a08      	ldr	r2, [pc, #32]	; (8017864 <enet_phy_write_read+0x58>)
 8017844:	6908      	ldr	r0, [r1, #16]
 8017846:	07c0      	lsls	r0, r0, #31
 8017848:	d501      	bpl.n	801784e <enet_phy_write_read+0x42>
 801784a:	3a01      	subs	r2, #1
 801784c:	d1fa      	bne.n	8017844 <enet_phy_write_read+0x38>
 801784e:	690a      	ldr	r2, [r1, #16]
 8017850:	43d2      	mvns	r2, r2
 8017852:	f002 0001 	and.w	r0, r2, #1
 8017856:	b90c      	cbnz	r4, 801785c <enet_phy_write_read+0x50>
 8017858:	694a      	ldr	r2, [r1, #20]
 801785a:	801a      	strh	r2, [r3, #0]
 801785c:	bd30      	pop	{r4, r5, pc}
 801785e:	bf00      	nop
 8017860:	40028000 	andmi	r8, r2, r0
 8017864:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

08017868 <enet_phy_config>:
 8017868:	4b22      	ldr	r3, [pc, #136]	; (80178f4 <enet_phy_config+0x8c>)
 801786a:	b513      	push	{r0, r1, r4, lr}
 801786c:	2001      	movs	r0, #1
 801786e:	691c      	ldr	r4, [r3, #16]
 8017870:	f7fe ff14 	bl	801669c <rcu_clock_freq_get>
 8017874:	4b20      	ldr	r3, [pc, #128]	; (80178f8 <enet_phy_config+0x90>)
 8017876:	4a21      	ldr	r2, [pc, #132]	; (80178fc <enet_phy_config+0x94>)
 8017878:	4403      	add	r3, r0
 801787a:	4293      	cmp	r3, r2
 801787c:	f024 041c 	bic.w	r4, r4, #28
 8017880:	d220      	bcs.n	80178c4 <enet_phy_config+0x5c>
 8017882:	f044 0408 	orr.w	r4, r4, #8
 8017886:	4b1b      	ldr	r3, [pc, #108]	; (80178f4 <enet_phy_config+0x8c>)
 8017888:	2200      	movs	r2, #0
 801788a:	611c      	str	r4, [r3, #16]
 801788c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8017890:	2101      	movs	r1, #1
 8017892:	f8ad 3006 	strh.w	r3, [sp, #6]
 8017896:	2002      	movs	r0, #2
 8017898:	f10d 0306 	add.w	r3, sp, #6
 801789c:	f7ff ffb6 	bl	801780c <enet_phy_write_read>
 80178a0:	b310      	cbz	r0, 80178e8 <enet_phy_config+0x80>
 80178a2:	2200      	movs	r2, #0
 80178a4:	4816      	ldr	r0, [pc, #88]	; (8017900 <enet_phy_config+0x98>)
 80178a6:	f7ff fea8 	bl	80175fa <enet_delay>
 80178aa:	2101      	movs	r1, #1
 80178ac:	4610      	mov	r0, r2
 80178ae:	f10d 0306 	add.w	r3, sp, #6
 80178b2:	f7ff ffab 	bl	801780c <enet_phy_write_read>
 80178b6:	b1b8      	cbz	r0, 80178e8 <enet_phy_config+0x80>
 80178b8:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 80178bc:	43c0      	mvns	r0, r0
 80178be:	f3c0 30c0 	ubfx	r0, r0, #15, #1
 80178c2:	e012      	b.n	80178ea <enet_phy_config+0x82>
 80178c4:	4b0f      	ldr	r3, [pc, #60]	; (8017904 <enet_phy_config+0x9c>)
 80178c6:	4a10      	ldr	r2, [pc, #64]	; (8017908 <enet_phy_config+0xa0>)
 80178c8:	4403      	add	r3, r0
 80178ca:	4293      	cmp	r3, r2
 80178cc:	d802      	bhi.n	80178d4 <enet_phy_config+0x6c>
 80178ce:	f044 040c 	orr.w	r4, r4, #12
 80178d2:	e7d8      	b.n	8017886 <enet_phy_config+0x1e>
 80178d4:	4b0d      	ldr	r3, [pc, #52]	; (801790c <enet_phy_config+0xa4>)
 80178d6:	4a0e      	ldr	r2, [pc, #56]	; (8017910 <enet_phy_config+0xa8>)
 80178d8:	4403      	add	r3, r0
 80178da:	4293      	cmp	r3, r2
 80178dc:	d3d3      	bcc.n	8017886 <enet_phy_config+0x1e>
 80178de:	4b0d      	ldr	r3, [pc, #52]	; (8017914 <enet_phy_config+0xac>)
 80178e0:	4a0d      	ldr	r2, [pc, #52]	; (8017918 <enet_phy_config+0xb0>)
 80178e2:	4403      	add	r3, r0
 80178e4:	4293      	cmp	r3, r2
 80178e6:	d902      	bls.n	80178ee <enet_phy_config+0x86>
 80178e8:	2000      	movs	r0, #0
 80178ea:	b002      	add	sp, #8
 80178ec:	bd10      	pop	{r4, pc}
 80178ee:	f044 0404 	orr.w	r4, r4, #4
 80178f2:	e7c8      	b.n	8017886 <enet_phy_config+0x1e>
 80178f4:	40028000 	andmi	r8, r2, r0
 80178f8:	feced300 	cdp2	3, 12, cr13, cr14, cr0, {0}
 80178fc:	00e4e1c0 	rsceq	lr, r4, r0, asr #3
 8017900:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 8017904:	fde9f140 	stc2l	1, cr15, [r9, #256]!	; 0x100
 8017908:	017d783f 	cmneq	sp, pc, lsr r8
 801790c:	fc6c7900 	stc2l	9, cr7, [ip], #-0	; <UNPREDICTABLE>
 8017910:	02625a00 	rsbeq	r5, r2, #0, 20
 8017914:	fa0a1f00 	blx	829f51c <__exidx_end+0x284d18>
 8017918:	01312d00 	teqeq	r1, r0, lsl #26

0801791c <enet_init>:
 801791c:	2300      	movs	r3, #0
 801791e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8017920:	4604      	mov	r4, r0
 8017922:	460d      	mov	r5, r1
 8017924:	4616      	mov	r6, r2
 8017926:	f8ad 3006 	strh.w	r3, [sp, #6]
 801792a:	f7ff ff9d 	bl	8017868 <enet_phy_config>
 801792e:	2800      	cmp	r0, #0
 8017930:	d039      	beq.n	80179a6 <enet_init+0x8a>
 8017932:	4b3c      	ldr	r3, [pc, #240]	; (8017a24 <enet_init+0x108>)
 8017934:	4a3c      	ldr	r2, [pc, #240]	; (8017a28 <enet_init+0x10c>)
 8017936:	6819      	ldr	r1, [r3, #0]
 8017938:	f44f 50a8 	mov.w	r0, #5376	; 0x1500
 801793c:	400a      	ands	r2, r1
 801793e:	601a      	str	r2, [r3, #0]
 8017940:	2200      	movs	r2, #0
 8017942:	605a      	str	r2, [r3, #4]
 8017944:	609a      	str	r2, [r3, #8]
 8017946:	60da      	str	r2, [r3, #12]
 8017948:	6999      	ldr	r1, [r3, #24]
 801794a:	2c01      	cmp	r4, #1
 801794c:	f021 01be 	bic.w	r1, r1, #190	; 0xbe
 8017950:	ea4f 4101 	mov.w	r1, r1, lsl #16
 8017954:	ea4f 4111 	mov.w	r1, r1, lsr #16
 8017958:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 801795c:	6199      	str	r1, [r3, #24]
 801795e:	4933      	ldr	r1, [pc, #204]	; (8017a2c <enet_init+0x110>)
 8017960:	f8c1 0080 	str.w	r0, [r1, #128]	; 0x80
 8017964:	61da      	str	r2, [r3, #28]
 8017966:	6988      	ldr	r0, [r1, #24]
 8017968:	4b31      	ldr	r3, [pc, #196]	; (8017a30 <enet_init+0x114>)
 801796a:	ea03 0300 	and.w	r3, r3, r0
 801796e:	f043 7308 	orr.w	r3, r3, #35651584	; 0x2200000
 8017972:	618b      	str	r3, [r1, #24]
 8017974:	680b      	ldr	r3, [r1, #0]
 8017976:	4b2f      	ldr	r3, [pc, #188]	; (8017a34 <enet_init+0x118>)
 8017978:	600b      	str	r3, [r1, #0]
 801797a:	d01e      	beq.n	80179ba <enet_init+0x9e>
 801797c:	08e3      	lsrs	r3, r4, #3
 801797e:	0861      	lsrs	r1, r4, #1
 8017980:	f401 5100 	and.w	r1, r1, #8192	; 0x2000
 8017984:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8017988:	430b      	orrs	r3, r1
 801798a:	f8ad 3006 	strh.w	r3, [sp, #6]
 801798e:	2101      	movs	r1, #1
 8017990:	2002      	movs	r0, #2
 8017992:	f10d 0306 	add.w	r3, sp, #6
 8017996:	f7ff ff39 	bl	801780c <enet_phy_write_read>
 801799a:	b158      	cbz	r0, 80179b4 <enet_init+0x98>
 801799c:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 80179a0:	f7ff fe2b 	bl	80175fa <enet_delay>
 80179a4:	e05f      	b.n	8017a66 <enet_init+0x14a>
 80179a6:	4824      	ldr	r0, [pc, #144]	; (8017a38 <enet_init+0x11c>)
 80179a8:	f7ff fe27 	bl	80175fa <enet_delay>
 80179ac:	f7ff ff5c 	bl	8017868 <enet_phy_config>
 80179b0:	2800      	cmp	r0, #0
 80179b2:	d1be      	bne.n	8017932 <enet_init+0x16>
 80179b4:	2000      	movs	r0, #0
 80179b6:	b003      	add	sp, #12
 80179b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80179ba:	4614      	mov	r4, r2
 80179bc:	4f1f      	ldr	r7, [pc, #124]	; (8017a3c <enet_init+0x120>)
 80179be:	2201      	movs	r2, #1
 80179c0:	2000      	movs	r0, #0
 80179c2:	4611      	mov	r1, r2
 80179c4:	f10d 0306 	add.w	r3, sp, #6
 80179c8:	f7ff ff20 	bl	801780c <enet_phy_write_read>
 80179cc:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 80179d0:	3401      	adds	r4, #1
 80179d2:	f002 0204 	and.w	r2, r2, #4
 80179d6:	f8ad 2006 	strh.w	r2, [sp, #6]
 80179da:	b912      	cbnz	r2, 80179e2 <enet_init+0xc6>
 80179dc:	42bc      	cmp	r4, r7
 80179de:	d1ee      	bne.n	80179be <enet_init+0xa2>
 80179e0:	e7e8      	b.n	80179b4 <enet_init+0x98>
 80179e2:	42bc      	cmp	r4, r7
 80179e4:	d0e6      	beq.n	80179b4 <enet_init+0x98>
 80179e6:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 80179ea:	2101      	movs	r1, #1
 80179ec:	f8ad 2006 	strh.w	r2, [sp, #6]
 80179f0:	2002      	movs	r0, #2
 80179f2:	2200      	movs	r2, #0
 80179f4:	f7ff ff0a 	bl	801780c <enet_phy_write_read>
 80179f8:	2800      	cmp	r0, #0
 80179fa:	d0db      	beq.n	80179b4 <enet_init+0x98>
 80179fc:	2400      	movs	r4, #0
 80179fe:	4f0f      	ldr	r7, [pc, #60]	; (8017a3c <enet_init+0x120>)
 8017a00:	2201      	movs	r2, #1
 8017a02:	2000      	movs	r0, #0
 8017a04:	4611      	mov	r1, r2
 8017a06:	f10d 0306 	add.w	r3, sp, #6
 8017a0a:	f7ff feff 	bl	801780c <enet_phy_write_read>
 8017a0e:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8017a12:	3401      	adds	r4, #1
 8017a14:	f002 0220 	and.w	r2, r2, #32
 8017a18:	f8ad 2006 	strh.w	r2, [sp, #6]
 8017a1c:	b982      	cbnz	r2, 8017a40 <enet_init+0x124>
 8017a1e:	42bc      	cmp	r4, r7
 8017a20:	d1ee      	bne.n	8017a00 <enet_init+0xe4>
 8017a22:	e7c7      	b.n	80179b4 <enet_init+0x98>
 8017a24:	40028000 	andmi	r8, r2, r0
 8017a28:	fd30810f 	ldc2	1, cr8, [r0, #-60]!	; 0xffffffc4
 8017a2c:	40029000 	andmi	r9, r2, r0
 8017a30:	f8de3f23 			; <UNDEFINED> instruction: 0xf8de3f23
 8017a34:	02c16000 	sbceq	r6, r1, #0
 8017a38:	008fffff 	strdeq	pc, [pc], pc	; <UNPREDICTABLE>
 8017a3c:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 8017a40:	42bc      	cmp	r4, r7
 8017a42:	d0b7      	beq.n	80179b4 <enet_init+0x98>
 8017a44:	2101      	movs	r1, #1
 8017a46:	2210      	movs	r2, #16
 8017a48:	2000      	movs	r0, #0
 8017a4a:	f7ff fedf 	bl	801780c <enet_phy_write_read>
 8017a4e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8017a52:	f013 0f04 	tst.w	r3, #4
 8017a56:	bf14      	ite	ne
 8017a58:	f44f 6400 	movne.w	r4, #2048	; 0x800
 8017a5c:	2400      	moveq	r4, #0
 8017a5e:	0799      	lsls	r1, r3, #30
 8017a60:	d401      	bmi.n	8017a66 <enet_init+0x14a>
 8017a62:	f444 4480 	orr.w	r4, r4, #16384	; 0x4000
 8017a66:	4b64      	ldr	r3, [pc, #400]	; (8017bf8 <enet_init+0x2dc>)
 8017a68:	056a      	lsls	r2, r5, #21
 8017a6a:	6818      	ldr	r0, [r3, #0]
 8017a6c:	f420 40b0 	bic.w	r0, r0, #22528	; 0x5800
 8017a70:	ea44 0400 	orr.w	r4, r4, r0
 8017a74:	601c      	str	r4, [r3, #0]
 8017a76:	d50c      	bpl.n	8017a92 <enet_init+0x176>
 8017a78:	681a      	ldr	r2, [r3, #0]
 8017a7a:	f005 6580 	and.w	r5, r5, #67108864	; 0x4000000
 8017a7e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8017a82:	601a      	str	r2, [r3, #0]
 8017a84:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8017a88:	6999      	ldr	r1, [r3, #24]
 8017a8a:	f021 6180 	bic.w	r1, r1, #67108864	; 0x4000000
 8017a8e:	430d      	orrs	r5, r1
 8017a90:	619d      	str	r5, [r3, #24]
 8017a92:	4959      	ldr	r1, [pc, #356]	; (8017bf8 <enet_init+0x2dc>)
 8017a94:	4b59      	ldr	r3, [pc, #356]	; (8017bfc <enet_init+0x2e0>)
 8017a96:	684a      	ldr	r2, [r1, #4]
 8017a98:	4316      	orrs	r6, r2
 8017a9a:	604e      	str	r6, [r1, #4]
 8017a9c:	681a      	ldr	r2, [r3, #0]
 8017a9e:	07d7      	lsls	r7, r2, #31
 8017aa0:	d510      	bpl.n	8017ac4 <enet_init+0x1a8>
 8017aa2:	685a      	ldr	r2, [r3, #4]
 8017aa4:	680c      	ldr	r4, [r1, #0]
 8017aa6:	f002 0080 	and.w	r0, r2, #128	; 0x80
 8017aaa:	f024 0480 	bic.w	r4, r4, #128	; 0x80
 8017aae:	4320      	orrs	r0, r4
 8017ab0:	6008      	str	r0, [r1, #0]
 8017ab2:	4853      	ldr	r0, [pc, #332]	; (8017c00 <enet_init+0x2e4>)
 8017ab4:	0892      	lsrs	r2, r2, #2
 8017ab6:	6981      	ldr	r1, [r0, #24]
 8017ab8:	f002 02c0 	and.w	r2, r2, #192	; 0xc0
 8017abc:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8017ac0:	430a      	orrs	r2, r1
 8017ac2:	6182      	str	r2, [r0, #24]
 8017ac4:	681a      	ldr	r2, [r3, #0]
 8017ac6:	0796      	lsls	r6, r2, #30
 8017ac8:	d508      	bpl.n	8017adc <enet_init+0x1c0>
 8017aca:	494d      	ldr	r1, [pc, #308]	; (8017c00 <enet_init+0x2e4>)
 8017acc:	6898      	ldr	r0, [r3, #8]
 8017ace:	680a      	ldr	r2, [r1, #0]
 8017ad0:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 8017ad4:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8017ad8:	4302      	orrs	r2, r0
 8017ada:	600a      	str	r2, [r1, #0]
 8017adc:	681a      	ldr	r2, [r3, #0]
 8017ade:	0755      	lsls	r5, r2, #29
 8017ae0:	d508      	bpl.n	8017af4 <enet_init+0x1d8>
 8017ae2:	4947      	ldr	r1, [pc, #284]	; (8017c00 <enet_init+0x2e4>)
 8017ae4:	68d8      	ldr	r0, [r3, #12]
 8017ae6:	680a      	ldr	r2, [r1, #0]
 8017ae8:	f422 027e 	bic.w	r2, r2, #16646144	; 0xfe0000
 8017aec:	f422 527c 	bic.w	r2, r2, #16128	; 0x3f00
 8017af0:	4302      	orrs	r2, r0
 8017af2:	600a      	str	r2, [r1, #0]
 8017af4:	681a      	ldr	r2, [r3, #0]
 8017af6:	0714      	lsls	r4, r2, #28
 8017af8:	d508      	bpl.n	8017b0c <enet_init+0x1f0>
 8017afa:	4941      	ldr	r1, [pc, #260]	; (8017c00 <enet_init+0x2e4>)
 8017afc:	6918      	ldr	r0, [r3, #16]
 8017afe:	680a      	ldr	r2, [r1, #0]
 8017b00:	f422 4240 	bic.w	r2, r2, #49152	; 0xc000
 8017b04:	f022 0202 	bic.w	r2, r2, #2
 8017b08:	4302      	orrs	r2, r0
 8017b0a:	600a      	str	r2, [r1, #0]
 8017b0c:	681a      	ldr	r2, [r3, #0]
 8017b0e:	06d0      	lsls	r0, r2, #27
 8017b10:	d506      	bpl.n	8017b20 <enet_init+0x204>
 8017b12:	493b      	ldr	r1, [pc, #236]	; (8017c00 <enet_init+0x2e4>)
 8017b14:	4a3b      	ldr	r2, [pc, #236]	; (8017c04 <enet_init+0x2e8>)
 8017b16:	6988      	ldr	r0, [r1, #24]
 8017b18:	4002      	ands	r2, r0
 8017b1a:	6958      	ldr	r0, [r3, #20]
 8017b1c:	4302      	orrs	r2, r0
 8017b1e:	618a      	str	r2, [r1, #24]
 8017b20:	681a      	ldr	r2, [r3, #0]
 8017b22:	0691      	lsls	r1, r2, #26
 8017b24:	d508      	bpl.n	8017b38 <enet_init+0x21c>
 8017b26:	4936      	ldr	r1, [pc, #216]	; (8017c00 <enet_init+0x2e4>)
 8017b28:	6998      	ldr	r0, [r3, #24]
 8017b2a:	698a      	ldr	r2, [r1, #24]
 8017b2c:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
 8017b30:	f022 0204 	bic.w	r2, r2, #4
 8017b34:	4302      	orrs	r2, r0
 8017b36:	618a      	str	r2, [r1, #24]
 8017b38:	681a      	ldr	r2, [r3, #0]
 8017b3a:	0652      	lsls	r2, r2, #25
 8017b3c:	d506      	bpl.n	8017b4c <enet_init+0x230>
 8017b3e:	492e      	ldr	r1, [pc, #184]	; (8017bf8 <enet_init+0x2dc>)
 8017b40:	69d8      	ldr	r0, [r3, #28]
 8017b42:	69ca      	ldr	r2, [r1, #28]
 8017b44:	0c52      	lsrs	r2, r2, #17
 8017b46:	0452      	lsls	r2, r2, #17
 8017b48:	4302      	orrs	r2, r0
 8017b4a:	61ca      	str	r2, [r1, #28]
 8017b4c:	681a      	ldr	r2, [r3, #0]
 8017b4e:	0617      	lsls	r7, r2, #24
 8017b50:	d517      	bpl.n	8017b82 <enet_init+0x266>
 8017b52:	4c29      	ldr	r4, [pc, #164]	; (8017bf8 <enet_init+0x2dc>)
 8017b54:	6a1a      	ldr	r2, [r3, #32]
 8017b56:	69a0      	ldr	r0, [r4, #24]
 8017b58:	f422 417f 	bic.w	r1, r2, #65280	; 0xff00
 8017b5c:	f020 00be 	bic.w	r0, r0, #190	; 0xbe
 8017b60:	0400      	lsls	r0, r0, #16
 8017b62:	0c00      	lsrs	r0, r0, #16
 8017b64:	f021 0141 	bic.w	r1, r1, #65	; 0x41
 8017b68:	4301      	orrs	r1, r0
 8017b6a:	4825      	ldr	r0, [pc, #148]	; (8017c00 <enet_init+0x2e4>)
 8017b6c:	61a1      	str	r1, [r4, #24]
 8017b6e:	f8d0 1080 	ldr.w	r1, [r0, #128]	; 0x80
 8017b72:	0a12      	lsrs	r2, r2, #8
 8017b74:	f021 0177 	bic.w	r1, r1, #119	; 0x77
 8017b78:	f002 0277 	and.w	r2, r2, #119	; 0x77
 8017b7c:	430a      	orrs	r2, r1
 8017b7e:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 8017b82:	681a      	ldr	r2, [r3, #0]
 8017b84:	05d6      	lsls	r6, r2, #23
 8017b86:	bf42      	ittt	mi
 8017b88:	6a59      	ldrmi	r1, [r3, #36]	; 0x24
 8017b8a:	4a1b      	ldrmi	r2, [pc, #108]	; (8017bf8 <enet_init+0x2dc>)
 8017b8c:	6091      	strmi	r1, [r2, #8]
 8017b8e:	681a      	ldr	r2, [r3, #0]
 8017b90:	0595      	lsls	r5, r2, #22
 8017b92:	bf42      	ittt	mi
 8017b94:	4a18      	ldrmi	r2, [pc, #96]	; (8017bf8 <enet_init+0x2dc>)
 8017b96:	6a99      	ldrmi	r1, [r3, #40]	; 0x28
 8017b98:	60d1      	strmi	r1, [r2, #12]
 8017b9a:	681a      	ldr	r2, [r3, #0]
 8017b9c:	0554      	lsls	r4, r2, #21
 8017b9e:	d508      	bpl.n	8017bb2 <enet_init+0x296>
 8017ba0:	4915      	ldr	r1, [pc, #84]	; (8017bf8 <enet_init+0x2dc>)
 8017ba2:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 8017ba4:	684a      	ldr	r2, [r1, #4]
 8017ba6:	f422 62fb 	bic.w	r2, r2, #2008	; 0x7d8
 8017baa:	f022 0206 	bic.w	r2, r2, #6
 8017bae:	4302      	orrs	r2, r0
 8017bb0:	604a      	str	r2, [r1, #4]
 8017bb2:	681a      	ldr	r2, [r3, #0]
 8017bb4:	0510      	lsls	r0, r2, #20
 8017bb6:	d508      	bpl.n	8017bca <enet_init+0x2ae>
 8017bb8:	490f      	ldr	r1, [pc, #60]	; (8017bf8 <enet_init+0x2dc>)
 8017bba:	6b18      	ldr	r0, [r3, #48]	; 0x30
 8017bbc:	680a      	ldr	r2, [r1, #0]
 8017bbe:	f422 3291 	bic.w	r2, r2, #74240	; 0x12200
 8017bc2:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8017bc6:	4302      	orrs	r2, r0
 8017bc8:	600a      	str	r2, [r1, #0]
 8017bca:	681a      	ldr	r2, [r3, #0]
 8017bcc:	04d1      	lsls	r1, r2, #19
 8017bce:	d506      	bpl.n	8017bde <enet_init+0x2c2>
 8017bd0:	4909      	ldr	r1, [pc, #36]	; (8017bf8 <enet_init+0x2dc>)
 8017bd2:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8017bd4:	680a      	ldr	r2, [r1, #0]
 8017bd6:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 8017bda:	4302      	orrs	r2, r0
 8017bdc:	600a      	str	r2, [r1, #0]
 8017bde:	681a      	ldr	r2, [r3, #0]
 8017be0:	0492      	lsls	r2, r2, #18
 8017be2:	d506      	bpl.n	8017bf2 <enet_init+0x2d6>
 8017be4:	4904      	ldr	r1, [pc, #16]	; (8017bf8 <enet_init+0x2dc>)
 8017be6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017be8:	680a      	ldr	r2, [r1, #0]
 8017bea:	f422 2260 	bic.w	r2, r2, #917504	; 0xe0000
 8017bee:	4313      	orrs	r3, r2
 8017bf0:	600b      	str	r3, [r1, #0]
 8017bf2:	2001      	movs	r0, #1
 8017bf4:	e6df      	b.n	80179b6 <enet_init+0x9a>
 8017bf6:	bf00      	nop
 8017bf8:	40028000 	andmi	r8, r2, r0
 8017bfc:	20013e20 	andcs	r3, r1, r0, lsr #28
 8017c00:	40029000 	andmi	r9, r2, r0
 8017c04:	fdde3fe7 	ldc2l	15, cr3, [lr, #924]	; 0x39c

08017c08 <enet_txfifo_flush>:
 8017c08:	4b06      	ldr	r3, [pc, #24]	; (8017c24 <enet_txfifo_flush+0x1c>)
 8017c0a:	4807      	ldr	r0, [pc, #28]	; (8017c28 <enet_txfifo_flush+0x20>)
 8017c0c:	699a      	ldr	r2, [r3, #24]
 8017c0e:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8017c12:	619a      	str	r2, [r3, #24]
 8017c14:	699a      	ldr	r2, [r3, #24]
 8017c16:	02d2      	lsls	r2, r2, #11
 8017c18:	d502      	bpl.n	8017c20 <enet_txfifo_flush+0x18>
 8017c1a:	3801      	subs	r0, #1
 8017c1c:	d1fa      	bne.n	8017c14 <enet_txfifo_flush+0xc>
 8017c1e:	4770      	bx	lr
 8017c20:	2001      	movs	r0, #1
 8017c22:	4770      	bx	lr
 8017c24:	40029000 	andmi	r9, r2, r0
 8017c28:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

08017c2c <enet_tx_enable>:
 8017c2c:	4a06      	ldr	r2, [pc, #24]	; (8017c48 <enet_tx_enable+0x1c>)
 8017c2e:	b508      	push	{r3, lr}
 8017c30:	6813      	ldr	r3, [r2, #0]
 8017c32:	f043 0308 	orr.w	r3, r3, #8
 8017c36:	6013      	str	r3, [r2, #0]
 8017c38:	f7ff ffe6 	bl	8017c08 <enet_txfifo_flush>
 8017c3c:	4a03      	ldr	r2, [pc, #12]	; (8017c4c <enet_tx_enable+0x20>)
 8017c3e:	6993      	ldr	r3, [r2, #24]
 8017c40:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8017c44:	6193      	str	r3, [r2, #24]
 8017c46:	bd08      	pop	{r3, pc}
 8017c48:	40028000 	andmi	r8, r2, r0
 8017c4c:	40029000 	andmi	r9, r2, r0

08017c50 <enet_enable>:
 8017c50:	b508      	push	{r3, lr}
 8017c52:	f7ff ffeb 	bl	8017c2c <enet_tx_enable>
 8017c56:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8017c5a:	f7ff bdc9 	b.w	80177f0 <enet_rx_enable>

08017c5e <enet_desc_information_get>:
 8017c5e:	2905      	cmp	r1, #5
 8017c60:	d817      	bhi.n	8017c92 <enet_desc_information_get+0x34>
 8017c62:	e8df f001 	tbb	[pc, r1]
 8017c66:	03091012 	movweq	r1, #36882	; 0x9012
 8017c6a:	68401007 	stmdavs	r0, {r0, r1, r2, ip}^
 8017c6e:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8017c72:	4770      	bx	lr
 8017c74:	88c0      	ldrh	r0, [r0, #6]
 8017c76:	e7fa      	b.n	8017c6e <enet_desc_information_get+0x10>
 8017c78:	8840      	ldrh	r0, [r0, #2]
 8017c7a:	f3c0 000d 	ubfx	r0, r0, #0, #14
 8017c7e:	2804      	cmp	r0, #4
 8017c80:	d90a      	bls.n	8017c98 <enet_desc_information_get+0x3a>
 8017c82:	3804      	subs	r0, #4
 8017c84:	4770      	bx	lr
 8017c86:	6880      	ldr	r0, [r0, #8]
 8017c88:	4770      	bx	lr
 8017c8a:	6800      	ldr	r0, [r0, #0]
 8017c8c:	f3c0 00c3 	ubfx	r0, r0, #3, #4
 8017c90:	4770      	bx	lr
 8017c92:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8017c96:	4770      	bx	lr
 8017c98:	2000      	movs	r0, #0
 8017c9a:	4770      	bx	lr

08017c9c <enet_rxframe_drop>:
 8017c9c:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8017ca0:	4814      	ldr	r0, [pc, #80]	; (8017cf4 <enet_rxframe_drop+0x58>)
 8017ca2:	b510      	push	{r4, lr}
 8017ca4:	6802      	ldr	r2, [r0, #0]
 8017ca6:	4914      	ldr	r1, [pc, #80]	; (8017cf8 <enet_rxframe_drop+0x5c>)
 8017ca8:	6854      	ldr	r4, [r2, #4]
 8017caa:	6013      	str	r3, [r2, #0]
 8017cac:	f414 4f80 	tst.w	r4, #16384	; 0x4000
 8017cb0:	680b      	ldr	r3, [r1, #0]
 8017cb2:	d009      	beq.n	8017cc8 <enet_rxframe_drop+0x2c>
 8017cb4:	b12b      	cbz	r3, 8017cc2 <enet_rxframe_drop+0x26>
 8017cb6:	68da      	ldr	r2, [r3, #12]
 8017cb8:	6002      	str	r2, [r0, #0]
 8017cba:	681a      	ldr	r2, [r3, #0]
 8017cbc:	b1ba      	cbz	r2, 8017cee <enet_rxframe_drop+0x52>
 8017cbe:	600a      	str	r2, [r1, #0]
 8017cc0:	bd10      	pop	{r4, pc}
 8017cc2:	68d3      	ldr	r3, [r2, #12]
 8017cc4:	6003      	str	r3, [r0, #0]
 8017cc6:	e7fb      	b.n	8017cc0 <enet_rxframe_drop+0x24>
 8017cc8:	f414 4f00 	tst.w	r4, #32768	; 0x8000
 8017ccc:	4c0b      	ldr	r4, [pc, #44]	; (8017cfc <enet_rxframe_drop+0x60>)
 8017cce:	d006      	beq.n	8017cde <enet_rxframe_drop+0x42>
 8017cd0:	68e2      	ldr	r2, [r4, #12]
 8017cd2:	6002      	str	r2, [r0, #0]
 8017cd4:	2b00      	cmp	r3, #0
 8017cd6:	d0f3      	beq.n	8017cc0 <enet_rxframe_drop+0x24>
 8017cd8:	681b      	ldr	r3, [r3, #0]
 8017cda:	600b      	str	r3, [r1, #0]
 8017cdc:	e7f0      	b.n	8017cc0 <enet_rxframe_drop+0x24>
 8017cde:	6824      	ldr	r4, [r4, #0]
 8017ce0:	3210      	adds	r2, #16
 8017ce2:	f3c4 0484 	ubfx	r4, r4, #2, #5
 8017ce6:	4422      	add	r2, r4
 8017ce8:	6002      	str	r2, [r0, #0]
 8017cea:	2b00      	cmp	r3, #0
 8017cec:	d0e8      	beq.n	8017cc0 <enet_rxframe_drop+0x24>
 8017cee:	3310      	adds	r3, #16
 8017cf0:	e7f3      	b.n	8017cda <enet_rxframe_drop+0x3e>
 8017cf2:	bf00      	nop
 8017cf4:	20013e18 	andcs	r3, r1, r8, lsl lr
 8017cf8:	20013e10 	andcs	r3, r1, r0, lsl lr
 8017cfc:	40029000 	andmi	r9, r2, r0

08017d00 <enet_rxframe_size_get>:
 8017d00:	b508      	push	{r3, lr}
 8017d02:	4b0c      	ldr	r3, [pc, #48]	; (8017d34 <enet_rxframe_size_get+0x34>)
 8017d04:	681b      	ldr	r3, [r3, #0]
 8017d06:	6818      	ldr	r0, [r3, #0]
 8017d08:	2800      	cmp	r0, #0
 8017d0a:	db10      	blt.n	8017d2e <enet_rxframe_size_get+0x2e>
 8017d0c:	f400 4303 	and.w	r3, r0, #33536	; 0x8300
 8017d10:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8017d14:	d003      	beq.n	8017d1e <enet_rxframe_size_get+0x1e>
 8017d16:	f7ff ffc1 	bl	8017c9c <enet_rxframe_drop>
 8017d1a:	2001      	movs	r0, #1
 8017d1c:	bd08      	pop	{r3, pc}
 8017d1e:	f000 0321 	and.w	r3, r0, #33	; 0x21
 8017d22:	2b21      	cmp	r3, #33	; 0x21
 8017d24:	d0f7      	beq.n	8017d16 <enet_rxframe_size_get+0x16>
 8017d26:	f3c0 400d 	ubfx	r0, r0, #16, #14
 8017d2a:	3804      	subs	r0, #4
 8017d2c:	e7f6      	b.n	8017d1c <enet_rxframe_size_get+0x1c>
 8017d2e:	2000      	movs	r0, #0
 8017d30:	e7f4      	b.n	8017d1c <enet_rxframe_size_get+0x1c>
 8017d32:	bf00      	nop
 8017d34:	20013e18 	andcs	r3, r1, r8, lsl lr

08017d38 <enet_initpara_reset>:
 8017d38:	2200      	movs	r2, #0
 8017d3a:	4b08      	ldr	r3, [pc, #32]	; (8017d5c <enet_initpara_reset+0x24>)
 8017d3c:	e9c3 2200 	strd	r2, r2, [r3]
 8017d40:	e9c3 2202 	strd	r2, r2, [r3, #8]
 8017d44:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8017d48:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8017d4c:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8017d50:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 8017d54:	e9c3 220c 	strd	r2, r2, [r3, #48]	; 0x30
 8017d58:	639a      	str	r2, [r3, #56]	; 0x38
 8017d5a:	4770      	bx	lr
 8017d5c:	20013e20 	andcs	r3, r1, r0, lsr #28

08017d60 <enet_deinit>:
 8017d60:	b508      	push	{r3, lr}
 8017d62:	f640 200e 	movw	r0, #2574	; 0xa0e
 8017d66:	f7fe fbc8 	bl	80164fa <rcu_periph_reset_enable>
 8017d6a:	f640 200e 	movw	r0, #2574	; 0xa0e
 8017d6e:	f7fe fbc6 	bl	80164fe <rcu_periph_reset_disable>
 8017d72:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8017d76:	f7ff bfdf 	b.w	8017d38 <enet_initpara_reset>
	...

08017d7c <i2c_clock_config>:
 8017d7c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8017d7e:	4605      	mov	r5, r0
 8017d80:	2002      	movs	r0, #2
 8017d82:	460c      	mov	r4, r1
 8017d84:	4617      	mov	r7, r2
 8017d86:	f7fe fc89 	bl	801669c <rcu_clock_freq_get>
 8017d8a:	4927      	ldr	r1, [pc, #156]	; (8017e28 <i2c_clock_config+0xac>)
 8017d8c:	4a27      	ldr	r2, [pc, #156]	; (8017e2c <i2c_clock_config+0xb0>)
 8017d8e:	fbb0 f1f1 	udiv	r1, r0, r1
 8017d92:	4290      	cmp	r0, r2
 8017d94:	bf94      	ite	ls
 8017d96:	460b      	movls	r3, r1
 8017d98:	233f      	movhi	r3, #63	; 0x3f
 8017d9a:	686e      	ldr	r6, [r5, #4]
 8017d9c:	4a24      	ldr	r2, [pc, #144]	; (8017e30 <i2c_clock_config+0xb4>)
 8017d9e:	f026 063f 	bic.w	r6, r6, #63	; 0x3f
 8017da2:	431e      	orrs	r6, r3
 8017da4:	4294      	cmp	r4, r2
 8017da6:	606e      	str	r6, [r5, #4]
 8017da8:	d816      	bhi.n	8017dd8 <i2c_clock_config+0x5c>
 8017daa:	3101      	adds	r1, #1
 8017dac:	293e      	cmp	r1, #62	; 0x3e
 8017dae:	d90d      	bls.n	8017dcc <i2c_clock_config+0x50>
 8017db0:	233f      	movs	r3, #63	; 0x3f
 8017db2:	622b      	str	r3, [r5, #32]
 8017db4:	0064      	lsls	r4, r4, #1
 8017db6:	fbb0 f4f4 	udiv	r4, r0, r4
 8017dba:	2c04      	cmp	r4, #4
 8017dbc:	bf38      	it	cc
 8017dbe:	2404      	movcc	r4, #4
 8017dc0:	69e8      	ldr	r0, [r5, #28]
 8017dc2:	f3c4 040b 	ubfx	r4, r4, #0, #12
 8017dc6:	4304      	orrs	r4, r0
 8017dc8:	61ec      	str	r4, [r5, #28]
 8017dca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8017dcc:	2902      	cmp	r1, #2
 8017dce:	d801      	bhi.n	8017dd4 <i2c_clock_config+0x58>
 8017dd0:	2302      	movs	r3, #2
 8017dd2:	e7ee      	b.n	8017db2 <i2c_clock_config+0x36>
 8017dd4:	6229      	str	r1, [r5, #32]
 8017dd6:	e7ed      	b.n	8017db4 <i2c_clock_config+0x38>
 8017dd8:	4a16      	ldr	r2, [pc, #88]	; (8017e34 <i2c_clock_config+0xb8>)
 8017dda:	4294      	cmp	r4, r2
 8017ddc:	d8f5      	bhi.n	8017dca <i2c_clock_config+0x4e>
 8017dde:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8017de2:	4353      	muls	r3, r2
 8017de4:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8017de8:	fbb3 f3f2 	udiv	r3, r3, r2
 8017dec:	3301      	adds	r3, #1
 8017dee:	622b      	str	r3, [r5, #32]
 8017df0:	b997      	cbnz	r7, 8017e18 <i2c_clock_config+0x9c>
 8017df2:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8017df6:	fbb0 f4f4 	udiv	r4, r0, r4
 8017dfa:	69eb      	ldr	r3, [r5, #28]
 8017dfc:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8017e00:	61eb      	str	r3, [r5, #28]
 8017e02:	f3c4 030b 	ubfx	r3, r4, #0, #12
 8017e06:	b90b      	cbnz	r3, 8017e0c <i2c_clock_config+0x90>
 8017e08:	f044 0401 	orr.w	r4, r4, #1
 8017e0c:	69eb      	ldr	r3, [r5, #28]
 8017e0e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8017e12:	61eb      	str	r3, [r5, #28]
 8017e14:	69e8      	ldr	r0, [r5, #28]
 8017e16:	e7d6      	b.n	8017dc6 <i2c_clock_config+0x4a>
 8017e18:	2119      	movs	r1, #25
 8017e1a:	434c      	muls	r4, r1
 8017e1c:	69eb      	ldr	r3, [r5, #28]
 8017e1e:	fbb0 f4f4 	udiv	r4, r0, r4
 8017e22:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8017e26:	e7eb      	b.n	8017e00 <i2c_clock_config+0x84>
 8017e28:	000f4240 	andeq	r4, pc, r0, asr #4
 8017e2c:	03c14dbf 	biceq	r4, r1, #12224	; 0x2fc0
 8017e30:	000186a0 	andeq	r8, r1, r0, lsr #13
 8017e34:	00061a80 	andeq	r1, r6, r0, lsl #21

08017e38 <i2c_ack_config>:
 8017e38:	6803      	ldr	r3, [r0, #0]
 8017e3a:	2901      	cmp	r1, #1
 8017e3c:	bf0c      	ite	eq
 8017e3e:	f443 6380 	orreq.w	r3, r3, #1024	; 0x400
 8017e42:	f423 6380 	bicne.w	r3, r3, #1024	; 0x400
 8017e46:	6003      	str	r3, [r0, #0]
 8017e48:	4770      	bx	lr

08017e4a <i2c_ackpos_config>:
 8017e4a:	6803      	ldr	r3, [r0, #0]
 8017e4c:	b919      	cbnz	r1, 8017e56 <i2c_ackpos_config+0xc>
 8017e4e:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8017e52:	6003      	str	r3, [r0, #0]
 8017e54:	4770      	bx	lr
 8017e56:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8017e5a:	e7fa      	b.n	8017e52 <i2c_ackpos_config+0x8>

08017e5c <i2c_master_addressing>:
 8017e5c:	3202      	adds	r2, #2
 8017e5e:	bf0c      	ite	eq
 8017e60:	f021 0101 	biceq.w	r1, r1, #1
 8017e64:	f041 0101 	orrne.w	r1, r1, #1
 8017e68:	6101      	str	r1, [r0, #16]
 8017e6a:	4770      	bx	lr

08017e6c <i2c_enable>:
 8017e6c:	6803      	ldr	r3, [r0, #0]
 8017e6e:	f043 0301 	orr.w	r3, r3, #1
 8017e72:	6003      	str	r3, [r0, #0]
 8017e74:	4770      	bx	lr

08017e76 <i2c_start_on_bus>:
 8017e76:	6803      	ldr	r3, [r0, #0]
 8017e78:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8017e7c:	6003      	str	r3, [r0, #0]
 8017e7e:	4770      	bx	lr

08017e80 <i2c_stop_on_bus>:
 8017e80:	6803      	ldr	r3, [r0, #0]
 8017e82:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8017e86:	6003      	str	r3, [r0, #0]
 8017e88:	4770      	bx	lr

08017e8a <i2c_data_transmit>:
 8017e8a:	6101      	str	r1, [r0, #16]
 8017e8c:	4770      	bx	lr

08017e8e <i2c_data_receive>:
 8017e8e:	6900      	ldr	r0, [r0, #16]
 8017e90:	b2c0      	uxtb	r0, r0
 8017e92:	4770      	bx	lr

08017e94 <i2c_flag_get>:
 8017e94:	098b      	lsrs	r3, r1, #6
 8017e96:	5818      	ldr	r0, [r3, r0]
 8017e98:	f001 011f 	and.w	r1, r1, #31
 8017e9c:	40c8      	lsrs	r0, r1
 8017e9e:	f000 0001 	and.w	r0, r0, #1
 8017ea2:	4770      	bx	lr

08017ea4 <i2c_flag_clear>:
 8017ea4:	f240 5301 	movw	r3, #1281	; 0x501
 8017ea8:	4299      	cmp	r1, r3
 8017eaa:	b510      	push	{r4, lr}
 8017eac:	d102      	bne.n	8017eb4 <i2c_flag_clear+0x10>
 8017eae:	6943      	ldr	r3, [r0, #20]
 8017eb0:	6983      	ldr	r3, [r0, #24]
 8017eb2:	bd10      	pop	{r4, pc}
 8017eb4:	2201      	movs	r2, #1
 8017eb6:	098c      	lsrs	r4, r1, #6
 8017eb8:	5823      	ldr	r3, [r4, r0]
 8017eba:	f001 011f 	and.w	r1, r1, #31
 8017ebe:	fa02 f101 	lsl.w	r1, r2, r1
 8017ec2:	ea23 0101 	bic.w	r1, r3, r1
 8017ec6:	5021      	str	r1, [r4, r0]
 8017ec8:	e7f3      	b.n	8017eb2 <i2c_flag_clear+0xe>
	...

Disassembly of section .rodata:

08017ecc <vtable for DisplayHandler-0x10c>:
 8017ecc:	00000003 	andeq	r0, r0, r3
 8017ed0:	000000aa 	andeq	r0, r0, sl, lsr #1
 8017ed4:	00000006 	andeq	r0, r0, r6
 8017ed8:	00000000 	andeq	r0, r0, r0
 8017edc:	01ff0000 	mvnseq	r0, r0
 8017ee0:	00000001 	andeq	r0, r0, r1
 8017ee4:	00000001 	andeq	r0, r0, r1
 8017ee8:	00000001 	andeq	r0, r0, r1
 8017eec:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 8017ef0:	0074654e 	rsbseq	r6, r4, lr, asr #10
	...
 8017efc:	03020100 	movweq	r0, #8448	; 0x2100
 8017f00:	08070604 	stmdaeq	r7, {r2, r9, sl}
 8017f04:	00000009 	andeq	r0, r0, r9
 8017f08:	03020100 	movweq	r0, #8448	; 0x2100
 8017f0c:	3a343104 	bcc	8d24324 <__exidx_end+0xd09b20>
 8017f10:	353a3634 	ldrcc	r3, [sl, #-1588]!	; 0xfffff9cc
 8017f14:	614a0039 	cmpvs	sl, r9, lsr r0
 8017f18:	3732206e 	ldrcc	r2, [r2, -lr, rrx]!
 8017f1c:	32303220 	eorscc	r3, r0, #32, 4
 8017f20:	74450032 	strbvc	r0, [r5], #-50	; 0xffffffce
 8017f24:	6e726568 	cdpvs	5, 7, cr6, cr2, cr8, {3}
 8017f28:	41207465 			; <UNDEFINED> instruction: 0x41207465
 8017f2c:	4e2d7472 	mcrmi	4, 1, r7, cr13, cr2, {3}
 8017f30:	34207465 	strtcc	r7, [r0], #-1125	; 0xfffffb9b
 8017f34:	646f4e20 	strbtvs	r4, [pc], #-3616	; 8017f3c <_etext+0x70>
 8017f38:	5b1b2065 	blpl	86e00d4 <__exidx_end+0x6c58d0>
 8017f3c:	506d3233 	rsbpl	r3, sp, r3, lsr r2
 8017f40:	6c657869 	stclvs	8, cr7, [r5], #-420	; 0xfffffe5c
 8017f44:	6e6f6320 	cdpvs	3, 6, cr6, cr15, cr0, {1}
 8017f48:	6c6f7274 	sfmvs	f7, 2, [pc], #-464	; 8017d80 <i2c_clock_config+0x4>
 8017f4c:	2072656c 	rsbscs	r6, r2, ip, ror #10
 8017f50:	2f78347b 	svccs	0x0078347b
 8017f54:	34207838 	strtcc	r7, [r0], #-2104	; 0xfffff7c8
 8017f58:	696e5520 	stmdbvs	lr!, {r5, r8, sl, ip, lr}^
 8017f5c:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8017f60:	1b7d7365 	blne	9f74cfc <__exidx_end+0x1f5a4f8>
 8017f64:	6d37335b 	ldcvs	3, cr3, [r7, #-364]!	; 0xfffffe94
 8017f68:	745f2e00 	ldrbvc	r2, [pc], #-3584	; 8017f70 <_etext+0xa4>
 8017f6c:	00707466 	rsbseq	r7, r0, r6, ror #8
 8017f70:	74685f2e 	strbtvc	r5, [r8], #-3886	; 0xfffff0d2
 8017f74:	6e007074 	mcrvs	0, 0, r7, cr0, cr4, {3}
 8017f78:	3d65646f 	cfstrdcc	mvd6, [r5, #-444]!	; 0xfffffe44
 8017f7c:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 8017f80:	2074654e 	rsbscs	r6, r4, lr, asr #10
 8017f84:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
 8017f88:	7241006c 	subvc	r0, r1, #108	; 0x6c
 8017f8c:	654e2d74 	strbvs	r2, [lr, #-3444]	; 0xfffff28c
 8017f90:	69502074 	ldmdbvs	r0, {r2, r4, r5, r6, sp}^
 8017f94:	206c6578 	rsbcs	r6, ip, r8, ror r5
 8017f98:	252d6425 	strcs	r6, [sp, #-1061]!	; 0xfffffbdb
 8017f9c:	64253a73 	strtvs	r3, [r5], #-2675	; 0xfffff58d
 8017fa0:	61724f00 	cmnvs	r2, r0, lsl #30
 8017fa4:	2065676e 	rsbcs	r6, r5, lr, ror #14
 8017fa8:	5a206950 	bpl	88324f0 <__exidx_end+0x817cec>
 8017fac:	206f7265 	rsbcs	r7, pc, r5, ror #4
 8017fb0:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
 8017fb4:	7241006c 	subvc	r0, r1, #108	; 0x6c
 8017fb8:	74654e74 	strbtvc	r4, [r5], #-3700	; 0xfffff18c
 8017fbc:	78695020 	stmdavc	r9!, {r5, ip, lr}^
 8017fc0:	38206c65 	stmdacc	r0!, {r0, r2, r5, r6, sl, fp, sp, lr}
 8017fc4:	7864253a 	stmdavc	r4!, {r1, r3, r4, r5, r8, sl, sp}^
 8017fc8:	25006425 	strcs	r6, [r0, #-1061]	; 0xfffffbdb
 8017fcc:	64253a73 	strtvs	r3, [r5], #-2675	; 0xfffff58d
 8017fd0:	64254720 	strtvs	r4, [r5], #-1824	; 0xfffff8e0
 8017fd4:	00732520 	rsbseq	r2, r3, r0, lsr #10

08017fd8 <vtable for DisplayHandler>:
	...
 8017fe0:	08007f41 	stmdaeq	r0, {r0, r6, r8, r9, sl, fp, ip, sp, lr}
 8017fe4:	08007fcd 	stmdaeq	r0, {r0, r2, r3, r6, r7, r8, r9, sl, fp, ip, sp, lr}
 8017fe8:	080080a5 	stmdaeq	r0, {r0, r2, r5, r7, pc}

08017fec <vtable for DisplayUdfHandler>:
	...
 8017ff4:	08007f43 	stmdaeq	r0, {r0, r1, r6, r8, r9, sl, fp, ip, sp, lr}
 8017ff8:	08007fd9 	stmdaeq	r0, {r0, r3, r4, r6, r7, r8, r9, sl, fp, ip, sp, lr}
 8017ffc:	08008061 	stmdaeq	r0, {r0, r5, r6, pc}
 8018000:	08007f45 	stmdaeq	r0, {r0, r2, r6, r8, r9, sl, fp, ip, sp, lr}
 8018004:	0800804d 	stmdaeq	r0, {r0, r2, r3, r6, pc}
 8018008:	08008039 	stmdaeq	r0, {r0, r3, r4, r5, pc}
 801800c:	08008025 	stmdaeq	r0, {r0, r2, r5, pc}
 8018010:	08008011 	stmdaeq	r0, {r0, r4, pc}
 8018014:	08007ffd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr}

08018018 <vtable for ArtNetReboot>:
	...
 8018020:	08007f47 	stmdaeq	r0, {r0, r1, r2, r6, r8, r9, sl, fp, ip, sp, lr}
 8018024:	08007fc1 	stmdaeq	r0, {r0, r6, r7, r8, r9, sl, fp, ip, sp, lr}
 8018028:	08007f9d 	stmdaeq	r0, {r0, r2, r3, r4, r7, r8, r9, sl, fp, ip, sp, lr}

0801802c <vtable for PixelDmxStartStop>:
	...
 8018034:	08007f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp, ip, sp, lr}
 8018038:	08007fe5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr}
 801803c:	08007f4d 	stmdaeq	r0, {r0, r2, r3, r6, r8, r9, sl, fp, ip, sp, lr}
 8018040:	08007f5d 	stmdaeq	r0, {r0, r2, r3, r4, r6, r8, r9, sl, fp, ip, sp, lr}

08018044 <vtable for RDMNetDevice>:
	...
 801804c:	080080f5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, pc}
 8018050:	0800811d 	stmdaeq	r0, {r0, r2, r3, r4, r8, pc}
 8018054:	0800dfdf 	stmdaeq	r0, {r0, r1, r2, r3, r4, r6, r7, r8, r9, sl, fp, ip, lr, pc}
 8018058:	0800dfe1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}
 801805c:	08007f6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r8, r9, sl, fp, ip, sp, lr}
 8018060:	08007f81 	stmdaeq	r0, {r0, r7, r8, r9, sl, fp, ip, sp, lr}
 8018064:	08008075 	stmdaeq	r0, {r0, r2, r4, r5, r6, pc}
 8018068:	ffffff30 			; <UNDEFINED> instruction: 0xffffff30
 801806c:	00000000 	andeq	r0, r0, r0
 8018070:	08008115 	stmdaeq	r0, {r0, r2, r4, r8, pc}
 8018074:	0800812f 	stmdaeq	r0, {r0, r1, r2, r3, r5, r8, pc}
 8018078:	08007f79 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, sp, lr}
 801807c:	08007f91 	stmdaeq	r0, {r0, r4, r7, r8, r9, sl, fp, ip, sp, lr}
 8018080:	08008089 	stmdaeq	r0, {r0, r3, r7, pc}

08018084 <vtable for FactoryDefaults>:
	...
 801808c:	08007f99 	stmdaeq	r0, {r0, r3, r4, r7, r8, r9, sl, fp, ip, sp, lr}
 8018090:	08007ff1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr}
 8018094:	08008165 	stmdaeq	r0, {r0, r2, r5, r6, r8, pc}

08018098 <CSWTCH.102>:
 8018098:	444e4f4f 	strbmi	r4, [lr], #-3919	; 0xfffff0b1
 801809c:	 	eorcc	r3, lr, r6, asr #2

0801809d <SOFTWARE_VERSION>:
 801809d:	00302e31 	eorseq	r2, r0, r1, lsr lr

080180a1 <SOFTWARE_VERSION>:
 80180a1:	00302e31 	eorseq	r2, r0, r1, lsr lr
 80180a5:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80180a9:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80180ad:	2c64252e 	cfstr64cs	mvdx2, [r4], #-184	; 0xffffff48
 80180b1:	252c7325 	strcs	r7, [ip, #-805]!	; 0xfffffcdb
 80180b5:	64252c73 	strtvs	r2, [r5], #-3187	; 0xfffff38d
 80180b9:	0a73252c 	beq	9ce1571 <__exidx_end+0x1cc6d6d>
 80180bd:	2e642500 	cdpcs	5, 6, cr2, cr4, cr0, {0}
 80180c1:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80180c5:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80180c9:	2c73252c 	cfldr64cs	mvdx2, [r3], #-176	; 0xffffff50
 80180cd:	252c7325 	strcs	r7, [ip, #-805]!	; 0xfffffcdb
 80180d1:	4f000a64 	svcmi	0x00000a64
 80180d5:	664f006e 	strbvs	r0, [pc], -lr, rrx
 80180d9:	69640066 	stmdbvs	r4!, {r1, r2, r5, r6}^
 80180dd:	616c7073 	smcvs	50947	; 0xc703
 80180e1:	73253a79 			; <UNDEFINED> instruction: 0x73253a79
 80180e5:	6674000a 	ldrbtvs	r0, [r4], -sl
 80180e9:	253a7074 	ldrcs	r7, [sl, #-116]!	; 0xffffff8c
 80180ed:	76000a73 			; <UNDEFINED> instruction: 0x76000a73
 80180f1:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 80180f5:	253a6e6f 	ldrcs	r6, [sl, #-3695]!	; 0xfffff191
 80180f9:	70750073 	rsbsvc	r0, r5, r3, ror r0
 80180fd:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 8018101:	7525203a 	strvc	r2, [r5, #-58]!	; 0xffffffc6
 8018105:	45000a73 	strmi	r0, [r0, #-2675]	; 0xfffff58d
 8018109:	524f5252 	subpl	r5, pc, #536870917	; 0x20000005
 801810d:	65673f23 	strbvs	r3, [r7, #-3875]!	; 0xfffff0dd
 8018111:	74000a74 	strvc	r0, [r0], #-2676	; 0xfffff58c
 8018115:	23707466 	cmncs	r0, #1711276032	; 0x66000000
 8018119:	73696400 	cmnvc	r9, #0, 8
 801811d:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8018121:	52450023 	subpl	r0, r5, #35	; 0x23
 8018125:	23524f52 	cmpcs	r2, #328	; 0x148
 8018129:	45000a21 	strmi	r0, [r0, #-2593]	; 0xfffff5df
 801812d:	524f5252 	subpl	r5, pc, #536870917	; 0x20000005
 8018131:	000a3f23 	andeq	r3, sl, r3, lsr #30
 8018135:	6f626572 	svcvs	0x00626572
 8018139:	2323746f 			; <UNDEFINED> instruction: 0x2323746f
 801813d:	73696c00 	cmnvc	r9, #0, 24
 8018141:	6c002374 	stcvs	3, cr2, [r0], {116}	; 0x74
 8018145:	23747369 	cmncs	r4, #-1543503871	; 0xa4000001
 8018149:	7075002a 	rsbsvc	r0, r5, sl, lsr #32
 801814d:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 8018151:	65760023 	ldrbvs	r0, [r6, #-35]!	; 0xffffffdd
 8018155:	6f697372 	svcvs	0x00697372
 8018159:	6700236e 	strvs	r2, [r0, -lr, ror #6]
 801815d:	00237465 	eoreq	r7, r3, r5, ror #8
 8018161:	74636166 	strbtvc	r6, [r3], #-358	; 0xfffffe9a
 8018165:	2379726f 	cmncs	r9, #-268435450	; 0xf0000006
 8018169:	 	subvc	r0, r1, #35	; 0x23

0801816b <s_Node>:
 801816b:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 801816f:	0074654e 	rsbseq	r6, r4, lr, asr #10
	...
 801817b:	41730000 	cmnmi	r3, r0
 801817f:	45204e43 	strmi	r4, [r0, #-3651]!	; 0xfffff1bd
 8018183:	31332e31 	teqcc	r3, r1, lsr lr
	...
 801818f:	2043534f 	subcs	r5, r3, pc, asr #6
 8018193:	76726553 			; <UNDEFINED> instruction: 0x76726553
 8018197:	00007265 	andeq	r7, r0, r5, ror #4
 801819b:	00000000 	andeq	r0, r0, r0
 801819f:	544c0000 	strbpl	r0, [ip], #-0
 80181a3:	00000043 	andeq	r0, r0, r3, asr #32
	...
 80181b3:	2043534f 	subcs	r5, r3, pc, asr #6
 80181b7:	65696c43 	strbvs	r6, [r9, #-3139]!	; 0xfffff3bd
 80181bb:	0000746e 	andeq	r7, r0, lr, ror #8
 80181bf:	00000000 	andeq	r0, r0, r0
 80181c3:	44520000 	ldrbmi	r0, [r2], #-0
 80181c7:	74654e4d 	strbtvc	r4, [r5], #-3661	; 0xfffff1b3
 80181cb:	524c4c20 	subpl	r4, ip, #32, 24	; 0x2000
 80181cf:	6e4f2050 	mcrvs	0, 2, r2, cr15, cr0, {2}
 80181d3:	0000796c 	andeq	r7, r0, ip, ror #18
 80181d7:	776f6853 			; <UNDEFINED> instruction: 0x776f6853
 80181db:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
	...
 80181e7:	494d0000 	stmdbmi	sp, {}^	; <UNPREDICTABLE>
 80181eb:	00004944 	andeq	r4, r0, r4, asr #18
	...
 80181fb:	00504444 	subseq	r4, r0, r4, asr #8
	...

0801820d <s_Output>:
 801820d:	00584d44 	subseq	r4, r8, r4, asr #26
	...
 8018219:	004d4452 	subeq	r4, sp, r2, asr r4
	...
 8018225:	696e6f4d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
 8018229:	00726f74 	rsbseq	r6, r2, r4, ror pc
 801822d:	00000000 	andeq	r0, r0, r0
 8018231:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
 8018235:	0000006c 	andeq	r0, r0, ip, rrx
 8018239:	00000000 	andeq	r0, r0, r0
 801823d:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
 8018241:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
 8018245:	00000000 	andeq	r0, r0, r0
 8018249:	0043534f 	subeq	r5, r3, pc, asr #6
	...
 8018255:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 8018259:	00006769 	andeq	r6, r0, r9, ror #14
 801825d:	00000000 	andeq	r0, r0, r0
 8018261:	70657453 	rsbvc	r7, r5, r3, asr r4
 8018265:	00726570 	rsbseq	r6, r2, r0, ror r5
 8018269:	00000000 	andeq	r0, r0, r0
 801826d:	79616c50 	stmdbvc	r1!, {r4, r6, sl, fp, sp, lr}^
 8018271:	00007265 	andeq	r7, r0, r5, ror #4
 8018275:	00000000 	andeq	r0, r0, r0
 8018279:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 801827d:	0074654e 	rsbseq	r6, r4, lr, asr #10
 8018281:	00000000 	andeq	r0, r0, r0
 8018285:	69726553 	ldmdbvs	r2!, {r0, r1, r4, r6, r8, sl, sp, lr}^
 8018289:	00006c61 	andeq	r6, r0, r1, ror #24
 801828d:	00000000 	andeq	r0, r0, r0
 8018291:	20424752 	subcs	r4, r2, r2, asr r7
 8018295:	656e6150 	strbvs	r6, [lr, #-336]!	; 0xfffffeb0
 8018299:	0000006c 	andeq	r0, r0, ip, rrx
 801829d:	 	strne	r0, [r0, #-0]

080182a0 <RemoteConfig::s_GET>:
 80182a0:	08009b15 	stmdaeq	r0, {r0, r2, r4, r8, r9, fp, ip, pc}
 80182a4:	00000000 	andeq	r0, r0, r0
 80182a8:	08018135 	stmdaeq	r1, {r0, r2, r4, r5, r8, pc}
 80182ac:	00000008 	andeq	r0, r0, r8
 80182b0:	08009041 	stmdaeq	r0, {r0, r6, ip, pc}
 80182b4:	00000000 	andeq	r0, r0, r0
 80182b8:	0801813e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r8, pc}
 80182bc:	00000005 	andeq	r0, r0, r5
 80182c0:	08009041 	stmdaeq	r0, {r0, r6, ip, pc}
 80182c4:	00000000 	andeq	r0, r0, r0
 80182c8:	08018144 	stmdaeq	r1, {r2, r6, r8, pc}
 80182cc:	00000006 	andeq	r0, r0, r6
 80182d0:	08009225 	stmdaeq	r0, {r0, r2, r5, r9, ip, pc}
 80182d4:	00000000 	andeq	r0, r0, r0
 80182d8:	0801814b 	stmdaeq	r1, {r0, r1, r3, r6, r8, pc}
 80182dc:	00000007 	andeq	r0, r0, r7
 80182e0:	080091e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8, ip, pc}
 80182e4:	00000000 	andeq	r0, r0, r0
 80182e8:	08018153 	stmdaeq	r1, {r0, r1, r4, r6, r8, pc}
 80182ec:	00000008 	andeq	r0, r0, r8
 80182f0:	08009121 	stmdaeq	r0, {r0, r5, r8, ip, pc}
 80182f4:	00000000 	andeq	r0, r0, r0
 80182f8:	0801811a 	stmdaeq	r1, {r1, r3, r4, r8, pc}
 80182fc:	00000008 	andeq	r0, r0, r8
 8018300:	0800947d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, sl, ip, pc}
 8018304:	00000000 	andeq	r0, r0, r0
 8018308:	0801815c 	stmdaeq	r1, {r2, r3, r4, r6, r8, pc}
 801830c:	00010004 	andeq	r0, r1, r4
 8018310:	08009195 	stmdaeq	r0, {r0, r2, r4, r7, r8, ip, pc}
 8018314:	00000000 	andeq	r0, r0, r0
 8018318:	08018114 	stmdaeq	r1, {r2, r4, r8, pc}
 801831c:	00000005 	andeq	r0, r0, r5
 8018320:	08009805 	stmdaeq	r0, {r0, r2, fp, ip, pc}
 8018324:	00000000 	andeq	r0, r0, r0
 8018328:	08018161 	stmdaeq	r1, {r0, r5, r6, r8, pc}
 801832c:	00000009 	andeq	r0, r0, r9

08018330 <RemoteConfig::s_SET>:
 8018330:	08009175 	stmdaeq	r0, {r0, r2, r4, r5, r6, r8, ip, pc}
 8018334:	00000000 	andeq	r0, r0, r0
 8018338:	08018114 	stmdaeq	r1, {r2, r4, r8, pc}
 801833c:	00010005 	andeq	r0, r1, r5
 8018340:	08009271 	stmdaeq	r0, {r0, r4, r5, r6, r9, ip, pc}
 8018344:	00000000 	andeq	r0, r0, r0
 8018348:	0801811a 	stmdaeq	r1, {r1, r3, r4, r8, pc}
 801834c:	00010008 	andeq	r0, r1, r8
 8018350:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 8018354:	2c64253a 	cfstr64cs	mvdx2, [r4], #-232	; 0xffffff18
 8018358:	73252300 			; <UNDEFINED> instruction: 0x73252300
 801835c:	0a64253d 	beq	9921858 <__exidx_end+0x1907054>
 8018360:	73252200 			; <UNDEFINED> instruction: 0x73252200
 8018364:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8018368:	002c2273 	eoreq	r2, ip, r3, ror r2
 801836c:	3d732523 	cfldr64cc	mvdx2, [r3, #-140]!	; 0xffffff74
 8018370:	000a7325 	andeq	r7, sl, r5, lsr #6
 8018374:	6f626552 	svcvs	0x00626552
 8018378:	6e69746f 	cdpvs	4, 6, cr7, cr9, cr15, {3}
 801837c:	2e2e2067 	cdpcs	0, 2, cr2, cr14, cr7, {3}
 8018380:	52000a2e 	andpl	r0, r0, #188416	; 0x2e000
 8018384:	6f6f6265 	svcvs	0x006f6265
 8018388:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 801838c:	2e2e2e20 	cdpcs	14, 2, cr2, cr14, cr0, {1}
 8018390:	6f637200 	svcvs	0x00637200
 8018394:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 8018398:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 801839c:	74656e00 	strbtvc	r6, [r5], #-3584	; 0xfffff200
 80183a0:	6b726f77 	blvs	9cb4184 <__exidx_end+0x1c99980>
 80183a4:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 80183a8:	73696400 	cmnvc	r9, #0, 8
 80183ac:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 80183b0:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 80183b4:	74726100 	ldrbtvc	r6, [r2], #-256	; 0xffffff00
 80183b8:	2e74656e 	cdpcs	5, 7, cr6, cr4, cr14, {3}
 80183bc:	00747874 	rsbseq	r7, r4, r4, ror r8
 80183c0:	69766564 	ldmdbvs	r6!, {r2, r5, r6, r8, sl, sp, lr}^
 80183c4:	2e736563 	cdpcs	5, 7, cr6, cr3, cr3, {3}
 80183c8:	00747874 	rsbseq	r7, r4, r4, ror r8

080183cc <RemoteConfig::s_TXT>:
 80183cc:	08009485 	stmdaeq	r0, {r0, r2, r7, sl, ip, pc}
 80183d0:	00000000 	andeq	r0, r0, r0
 80183d4:	08009735 	stmdaeq	r0, {r0, r2, r4, r5, r8, r9, sl, ip, pc}
 80183d8:	00000000 	andeq	r0, r0, r0
 80183dc:	08018391 	stmdaeq	r1, {r0, r4, r7, r8, r9, pc}
 80183e0:	0000000b 	andeq	r0, r0, fp
 80183e4:	0000000c 	andeq	r0, r0, ip
 80183e8:	080094b1 	stmdaeq	r0, {r0, r4, r5, r7, sl, ip, pc}
 80183ec:	00000000 	andeq	r0, r0, r0
 80183f0:	08009765 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, sl, ip, pc}
 80183f4:	00000000 	andeq	r0, r0, r0
 80183f8:	0801839d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r8, r9, pc}
 80183fc:	0000000b 	andeq	r0, r0, fp
 8018400:	00000000 	andeq	r0, r0, r0
 8018404:	08009535 	stmdaeq	r0, {r0, r2, r4, r5, r8, sl, ip, pc}
 8018408:	00000000 	andeq	r0, r0, r0
 801840c:	080097dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, sl, ip, pc}
 8018410:	00000000 	andeq	r0, r0, r0
 8018414:	080183a9 	stmdaeq	r1, {r0, r3, r5, r7, r8, r9, pc}
 8018418:	0000000b 	andeq	r0, r0, fp
 801841c:	0000000f 	andeq	r0, r0, pc
 8018420:	080094dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, sl, ip, pc}
 8018424:	00000000 	andeq	r0, r0, r0
 8018428:	0800978d 	stmdaeq	r0, {r0, r2, r3, r7, r8, r9, sl, ip, pc}
 801842c:	00000000 	andeq	r0, r0, r0
 8018430:	080183b5 	stmdaeq	r1, {r0, r2, r4, r5, r7, r8, r9, pc}
 8018434:	0000000a 	andeq	r0, r0, sl
 8018438:	00000001 	andeq	r0, r0, r1
 801843c:	08009509 	stmdaeq	r0, {r0, r3, r8, sl, ip, pc}
 8018440:	00000000 	andeq	r0, r0, r0
 8018444:	080097b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8, r9, sl, ip, pc}
 8018448:	00000000 	andeq	r0, r0, r0
 801844c:	080183c0 	stmdaeq	r1, {r6, r7, r8, r9, pc}
 8018450:	0000000b 	andeq	r0, r0, fp
 8018454:	00000003 	andeq	r0, r0, r3
 8018458:	00544547 	subseq	r4, r4, r7, asr #10
 801845c:	54534f50 	ldrbpl	r4, [r3], #-3920	; 0xfffff0b0
 8018460:	54544800 	ldrbpl	r4, [r4], #-2048	; 0xfffff800
 8018464:	0a200050 	beq	88185ac <__exidx_end+0x7fdda8>
 8018468:	312e3100 			; <UNDEFINED> instruction: 0x312e3100
 801846c:	43003a00 	movwmi	r3, #2560	; 0xa00
 8018470:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
 8018474:	542d746e 	strtpl	r7, [sp], #-1134	; 0xfffffb92
 8018478:	00657079 	rsbeq	r7, r5, r9, ror r0
 801847c:	61003b20 	tstvs	r0, r0, lsr #22
 8018480:	696c7070 	stmdbvs	ip!, {r4, r5, r6, ip, sp, lr}^
 8018484:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
 8018488:	6a2f6e6f 	bvs	8bf3e4c <__exidx_end+0xbd9648>
 801848c:	006e6f73 	rsbeq	r6, lr, r3, ror pc
 8018490:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
 8018494:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	; 0xfffffe6c
 8018498:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
 801849c:	2f006874 	svccs	0x00006874
 80184a0:	65646e69 	strbvs	r6, [r4, #-3689]!	; 0xfffff197
 80184a4:	74682e78 	strbtvc	r2, [r8], #-3704	; 0xfffff188
 80184a8:	2f006c6d 	svccs	0x00006c6d
 80184ac:	6c797473 	cfldrdvs	mvd7, [r9], #-460	; 0xfffffe34
 80184b0:	632e7365 			; <UNDEFINED> instruction: 0x632e7365
 80184b4:	2f007373 	svccs	0x00007373
 80184b8:	65646e69 	strbvs	r6, [r4, #-3689]!	; 0xfffff197
 80184bc:	736a2e78 	cmnvc	sl, #120, 28	; 0x780
 80184c0:	736a2f00 	cmnvc	sl, #0, 30
 80184c4:	002f6e6f 	eoreq	r6, pc, pc, ror #28
 80184c8:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 80184cc:	72657600 	rsbvc	r7, r5, #0, 12
 80184d0:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 80184d4:	74707500 	ldrbtvc	r7, [r0], #-1280	; 0xfffffb00
 80184d8:	00656d69 	rsbeq	r6, r5, r9, ror #26
 80184dc:	70736964 	rsbsvc	r6, r3, r4, ror #18
 80184e0:	0079616c 	rsbseq	r6, r9, ip, ror #2
 80184e4:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 80184e8:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 80184ec:	6a2f0079 	bvs	8bd86d8 <__exidx_end+0xbbded4>
 80184f0:	2f6e6f73 	svccs	0x006e6f73
 80184f4:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 80184f8:	72006e6f 	andvc	r6, r0, #1776	; 0x6f0
 80184fc:	6f6f6265 	svcvs	0x006f6265
 8018500:	64690074 	strbtvs	r0, [r9], #-116	; 0xffffff8c
 8018504:	69746e65 	ldmdbvs	r4!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
 8018508:	3c007966 			; <UNDEFINED> instruction: 0x3c007966
 801850c:	434f4421 	movtmi	r4, #62497	; 0xf421
 8018510:	45505954 	ldrbmi	r5, [r0, #-2388]	; 0xfffff6ac
 8018514:	6d746820 	ldclvs	8, cr6, [r4, #-128]!	; 0xffffff80
 8018518:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
 801851c:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8018520:	683c0a3e 	ldmdavs	ip!, {r1, r2, r3, r4, r5, r9, fp}
 8018524:	3e646165 	powccsz	f6, f4, f5
 8018528:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
 801852c:	533e656c 	teqpl	lr, #108, 10	; 0x1b000000
 8018530:	696d6275 	stmdbvs	sp!, {r0, r2, r4, r5, r6, r9, sp, lr}^
 8018534:	742f3c74 	strtvc	r3, [pc], #-3188	; 801853c <RemoteConfig::s_TXT+0x170>
 8018538:	656c7469 	strbvs	r7, [ip, #-1129]!	; 0xfffffb97
 801853c:	682f3c3e 	stmdavs	pc!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8018540:	3e646165 	powccsz	f6, f4, f5
 8018544:	6f623c0a 	svcvs	0x00623c0a
 8018548:	3c3e7964 			; <UNDEFINED> instruction: 0x3c3e7964
 801854c:	4f3e3168 	svcmi	0x003e3168
 8018550:	682f3c4b 	stmdavs	pc!, {r0, r1, r3, r6, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8018554:	2f3c3e31 	svccs	0x003c3e31
 8018558:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 801855c:	2f3c0a3e 	svccs	0x003c0a3e
 8018560:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8018564:	52000a3e 	andpl	r0, r0, #253952	; 0x3e000
 8018568:	65757165 	ldrbvs	r7, [r5, #-357]!	; 0xfffffe9b
 801856c:	45207473 	strmi	r7, [r0, #-1139]!	; 0xfffffb8d
 8018570:	7469746e 	strbtvc	r7, [r9], #-1134	; 0xfffffb92
 8018574:	6f542079 	svcvs	0x00542079
 8018578:	614c206f 	cmpvs	ip, pc, rrx
 801857c:	00656772 	rsbeq	r6, r5, r2, ror r7
 8018580:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 8018584:	6e756f46 	cdpvs	15, 7, cr6, cr5, cr6, {2}
 8018588:	65520064 	ldrbvs	r0, [r2, #-100]	; 0xffffff9c
 801858c:	73657571 	cmnvc	r5, #473956352	; 0x1c400000
 8018590:	52552d74 	subspl	r2, r5, #116, 26	; 0x1d00
 8018594:	6f542049 	svcvs	0x00542049
 8018598:	6f4c206f 	svcvs	0x004c206f
 801859c:	5600676e 	strpl	r6, [r0], -lr, ror #14
 80185a0:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 80185a4:	4e206e6f 	cdpmi	14, 2, cr6, cr0, cr15, {3}
 80185a8:	5320746f 			; <UNDEFINED> instruction: 0x5320746f
 80185ac:	6f707075 	svcvs	0x00707075
 80185b0:	64657472 	strbtvs	r7, [r5], #-1138	; 0xfffffb8e
 80185b4:	74654d00 	strbtvc	r4, [r5], #-3328	; 0xfffff300
 80185b8:	20646f68 	rsbcs	r6, r4, r8, ror #30
 80185bc:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 80185c0:	6c706d49 	ldclvs	13, cr6, [r0], #-292	; 0xfffffedc
 80185c4:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 80185c8:	00646574 	rsbeq	r6, r4, r4, ror r5
 80185cc:	20646142 	rsbcs	r6, r4, r2, asr #2
 80185d0:	75716552 	ldrbvc	r6, [r1, #-1362]!	; 0xfffffaae
 80185d4:	00747365 	rsbseq	r7, r4, r5, ror #6
 80185d8:	6e6b6e55 	mcrvs	14, 3, r6, cr11, cr5, {2}
 80185dc:	206e776f 	rsbcs	r7, lr, pc, ror #14
 80185e0:	6f727245 	svcvs	0x00727245
 80185e4:	6e490072 	mcrvs	0, 2, r0, cr9, cr2, {3}
 80185e8:	6e726574 	mrcvs	5, 3, r6, cr2, cr4, {3}
 80185ec:	53206c61 			; <UNDEFINED> instruction: 0x53206c61
 80185f0:	65767265 	ldrbvs	r7, [r6, #-613]!	; 0xfffffd9b
 80185f4:	72452072 	subvc	r2, r5, #114	; 0x72
 80185f8:	00726f72 	rsbseq	r6, r2, r2, ror pc
 80185fc:	3c004b4f 			; <UNDEFINED> instruction: 0x3c004b4f
 8018600:	434f4421 	movtmi	r4, #62497	; 0xf421
 8018604:	45505954 	ldrbmi	r5, [r0, #-2388]	; 0xfffff6ac
 8018608:	6d746820 	ldclvs	8, cr6, [r4, #-128]!	; 0xffffff80
 801860c:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
 8018610:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8018614:	683c0a3e 	ldmdavs	ip!, {r1, r2, r3, r4, r5, r9, fp}
 8018618:	3e646165 	powccsz	f6, f4, f5
 801861c:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
 8018620:	253e656c 	ldrcs	r6, [lr, #-1388]!	; 0xfffffa94
 8018624:	73252075 			; <UNDEFINED> instruction: 0x73252075
 8018628:	69742f3c 	ldmdbvs	r4!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 801862c:	3e656c74 	mcrcc	12, 3, r6, cr5, cr4, {3}
 8018630:	65682f3c 	strbvs	r2, [r8, #-3900]!	; 0xfffff0c4
 8018634:	0a3e6461 	beq	8fb17c0 <__exidx_end+0xf96fbc>
 8018638:	646f623c 	strbtvs	r6, [pc], #-572	; 8018640 <RemoteConfig::s_TXT+0x274>
 801863c:	683c3e79 	ldmdavs	ip!, {r0, r3, r4, r5, r6, r9, sl, fp, ip, sp}
 8018640:	73253e31 			; <UNDEFINED> instruction: 0x73253e31
 8018644:	31682f3c 	cmncc	r8, ip, lsr pc
 8018648:	622f3c3e 	eorvs	r3, pc, #15872	; 0x3e00
 801864c:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 8018650:	682f3c0a 	stmdavs	pc!, {r1, r3, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8018654:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 8018658:	5448000a 	strbpl	r0, [r8], #-10
 801865c:	312f5054 	qsubcc	r5, r4, pc	; <UNPREDICTABLE>
 8018660:	2520312e 	strcs	r3, [r0, #-302]!	; 0xfffffed2
 8018664:	73252075 			; <UNDEFINED> instruction: 0x73252075
 8018668:	65530a0d 	ldrbvs	r0, [r3, #-2573]	; 0xfffff5f3
 801866c:	72657672 	rsbvc	r7, r5, #119537664	; 0x7200000
 8018670:	7325203a 			; <UNDEFINED> instruction: 0x7325203a
 8018674:	6f430a0d 	svcvs	0x00430a0d
 8018678:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 801867c:	79542d74 	ldmdbvc	r4, {r2, r4, r5, r6, r8, sl, fp, sp}^
 8018680:	203a6570 	eorscs	r6, sl, r0, ror r5
 8018684:	0a0d7325 	beq	8375320 <__exidx_end+0x35ab1c>
 8018688:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
 801868c:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	; 0xfffffe6c
 8018690:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
 8018694:	203a6874 	eorscs	r6, sl, r4, ror r8
 8018698:	0a0d7525 	beq	8375b34 <__exidx_end+0x35b330>
 801869c:	6e6e6f43 	cdpvs	15, 6, cr6, cr14, cr3, {2}
 80186a0:	69746365 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sp, lr}^
 80186a4:	203a6e6f 	eorscs	r6, sl, pc, ror #28
 80186a8:	736f6c63 	cmnvc	pc, #25344	; 0x6300
 80186ac:	0d0a0d65 	stceq	13, cr0, [sl, #-404]	; 0xfffffe6c
 80186b0:	4447000a 	strbmi	r0, [r7], #-10
 80186b4:	32463233 	subcc	r3, r6, #805306371	; 0x30000003
 80186b8:	5f433730 	svcpl	0x00433730
 80186bc:	4c415645 	mcrrmi	6, 4, r5, r1, cr5
	...

080186c1 <contentType>:
 80186c1:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 80186c5:	6d74682f 	ldclvs	8, cr6, [r4, #-188]!	; 0xffffff44
 80186c9:	0000006c 	andeq	r0, r0, ip, rrx
	...
 80186e1:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 80186e5:	7373632f 	cmnvc	r3, #-1140850688	; 0xbc000000
	...
 8018701:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 8018705:	76616a2f 	strbtvc	r6, [r1], -pc, lsr #20
 8018709:	72637361 	rsbvc	r7, r3, #-2080374783	; 0x84000001
 801870d:	00747069 	rsbseq	r7, r4, r9, rrx
	...
 8018721:	6c707061 	ldclvs	0, cr7, [r0], #-388	; 0xfffffe7c
 8018725:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
 8018729:	2f6e6f69 	svccs	0x006e6f69
 801872d:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
	...

08018741 <RemoteConfigConst::PARAMS_DISABLE>:
 8018741:	61736964 	cmnvs	r3, r4, ror #18
 8018745:	00656c62 	rsbeq	r6, r5, r2, ror #24

08018749 <RemoteConfigConst::PARAMS_FILE_NAME>:
 8018749:	6e6f6372 	mcrvs	3, 3, r6, cr15, cr2, {3}
 801874d:	2e676966 	vnmulcs.f16	s13, s14, s13	; <UNPREDICTABLE>
 8018751:	00747874 	rsbseq	r7, r4, r4, ror r8

08018755 <RemoteConfigConst::PARAMS_DISPLAY_NAME>:
 8018755:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8018759:	5f79616c 	svcpl	0x0079616c
 801875d:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

08018762 <RemoteConfigConst::PARAMS_DISABLE_WRITE>:
 8018762:	61736964 	cmnvs	r3, r4, ror #18
 8018766:	5f656c62 	svcpl	0x00656c62
 801876a:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
 801876e:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

08018770 <RemoteConfigConst::PARAMS_ENABLE_REBOOT>:
 8018770:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 8018774:	725f656c 	subsvc	r6, pc, #108, 10	; 0x1b000000
 8018778:	6f6f6265 	svcvs	0x006f6265
 801877c:	 	mcrvs	0, 3, r0, cr5, cr4, {3}

0801877e <RemoteConfigConst::PARAMS_ENABLE_UPTIME>:
 801877e:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 8018782:	755f656c 	ldrbvc	r6, [pc, #-1388]	; 801821e <s_Output+0x11>
 8018786:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 801878a:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

0801878c <RemoteConfigConst::PARAMS_ENABLE_FACTORY>:
 801878c:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 8018790:	665f656c 	ldrbvs	r6, [pc], -ip, ror #10
 8018794:	6f746361 	svcvs	0x00746361
 8018798:	7b007972 	blvc	8036d68 <__exidx_end+0x1c564>
 801879c:	73696c22 	cmnvc	r9, #8704	; 0x2200
 80187a0:	7b3a2274 	blvc	8ea1178 <__exidx_end+0xe86974>
 80187a4:	22706922 	rsbscs	r6, r0, #557056	; 0x88000
 80187a8:	6425223a 	strtvs	r2, [r5], #-570	; 0xfffffdc6
 80187ac:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 80187b0:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80187b4:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 80187b8:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 80187bc:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 80187c0:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 80187c4:	65646f6e 	strbvs	r6, [r4, #-3950]!	; 0xfffff092
 80187c8:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 80187cc:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 80187d0:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 80187d4:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 80187d8:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 80187dc:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 80187e0:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 80187e4:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 80187e8:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 80187ec:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 80187f0:	253a2274 	ldrcs	r2, [sl, #-628]!	; 0xfffffd8c
 80187f4:	7d7d7d64 	ldclvc	13, cr7, [sp, #-400]!	; 0xfffffe70
 80187f8:	227b007d 	rsbscs	r0, fp, #125	; 0x7d
 80187fc:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8018800:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 8018804:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 8018808:	2c22732a 	stccs	3, cr7, [r2], #-168	; 0xffffff58
 801880c:	616f6222 	cmnvs	pc, r2, lsr #4
 8018810:	3a226472 	bcc	88b19e0 <__exidx_end+0x8971dc>
 8018814:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 8018818:	7562222c 	strbvc	r2, [r2, #-556]!	; 0xfffffdd4
 801881c:	22646c69 	rsbcs	r6, r4, #26880	; 0x6900
 8018820:	64227b3a 	strtvs	r7, [r2], #-2874	; 0xfffff4c6
 8018824:	22657461 	rsbcs	r7, r5, #1627389952	; 0x61000000
 8018828:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 801882c:	2c22732a 	stccs	3, cr7, [r2], #-168	; 0xffffff58
 8018830:	6d697422 	cfstrdvs	mvd7, [r9, #-136]!	; 0xffffff78
 8018834:	223a2265 	eorscs	r2, sl, #1342177286	; 0x50000006
 8018838:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
 801883c:	007d7d22 	rsbseq	r7, sp, r2, lsr #26
 8018840:	7075227b 	rsbsvc	r2, r5, fp, ror r2
 8018844:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 8018848:	75253a22 	strvc	r3, [r5, #-2594]!	; 0xfffff5de
 801884c:	7b000a7d 	blvc	801b248 <__exidx_end+0xa44>
 8018850:	73696422 	cmnvc	r9, #570425344	; 0x22000000
 8018854:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8018858:	64253a22 	strtvs	r3, [r5], #-2594	; 0xfffff5de
 801885c:	227b007d 	rsbscs	r0, fp, #125	; 0x7d
 8018860:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8018864:	7b3a2273 	blvc	8ea1238 <__exidx_end+0xe86a34>
 8018868:	74726122 	ldrbtvc	r6, [r2], #-290	; 0xfffffede
 801886c:	2e74656e 	cdpcs	5, 7, cr6, cr4, cr14, {3}
 8018870:	22747874 	rsbscs	r7, r4, #116, 16	; 0x740000
 8018874:	7241223a 	subvc	r2, r1, #-1610612733	; 0xa0000003
 8018878:	654e2d74 	strbvs	r2, [lr, #-3444]	; 0xfffff28c
 801887c:	222c2274 	eorcs	r2, ip, #116, 4	; 0x40000007
 8018880:	69766564 	ldmdbvs	r6!, {r2, r5, r6, r8, sl, sp, lr}^
 8018884:	2e736563 	cdpcs	5, 7, cr6, cr3, cr3, {3}
 8018888:	22747874 	rsbscs	r7, r4, #116, 16	; 0x740000
 801888c:	4d44223a 	sfmmi	f2, 2, [r4, #-232]	; 0xffffff18
 8018890:	69502058 	ldmdbvs	r0, {r3, r4, r6, sp}^
 8018894:	226c6578 	rsbcs	r6, ip, #120, 10	; 0x1e000000
 8018898:	6964222c 	stmdbvs	r4!, {r2, r3, r5, r9, sp}^
 801889c:	616c7073 	smcvs	50947	; 0xc703
 80188a0:	78742e79 	ldmdavc	r4!, {r0, r3, r4, r5, r6, r9, sl, fp, sp}^
 80188a4:	223a2274 	eorscs	r2, sl, #116, 4	; 0x40000007
 80188a8:	70736944 	rsbsvc	r6, r3, r4, asr #18
 80188ac:	2079616c 	rsbscs	r6, r9, ip, ror #2
 80188b0:	22464455 	subcs	r4, r6, #1426063360	; 0x55000000
 80188b4:	656e222c 	strbvs	r2, [lr, #-556]!	; 0xfffffdd4
 80188b8:	726f7774 	rsbvc	r7, pc, #116, 14	; 0x1d00000
 80188bc:	78742e6b 	ldmdavc	r4!, {r0, r1, r3, r5, r6, r9, sl, fp, sp}^
 80188c0:	223a2274 	eorscs	r2, sl, #116, 4	; 0x40000007
 80188c4:	7774654e 	ldrbvc	r6, [r4, -lr, asr #10]!
 80188c8:	226b726f 	rsbcs	r7, fp, #-268435450	; 0xf0000006
 80188cc:	6372222c 	cmnvs	r2, #44, 4	; 0xc0000002
 80188d0:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 80188d4:	78742e67 	ldmdavc	r4!, {r0, r1, r2, r5, r6, r9, sl, fp, sp}^
 80188d8:	223a2274 	eorscs	r2, sl, #116, 4	; 0x40000007
 80188dc:	6f6d6552 	svcvs	0x006d6552
 80188e0:	63206574 			; <UNDEFINED> instruction: 0x63206574
 80188e4:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 80188e8:	61727567 	cmnvs	r2, r7, ror #10
 80188ec:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 80188f0:	007d7d22 	rsbseq	r7, sp, r2, lsr #26

080188f4 <index_html>:
 80188f4:	4f44213c 	svcmi	0x0044213c
 80188f8:	50595443 	subspl	r5, r9, r3, asr #8
 80188fc:	74682045 	strbtvc	r2, [r8], #-69	; 0xffffffbb
 8018900:	0a3e6c6d 	beq	8fb3abc <__exidx_end+0xf992b8>
 8018904:	6d74683c 	ldclvs	8, cr6, [r4, #-240]!	; 0xffffff10
 8018908:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
 801890c:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
 8018910:	3c090a3e 			; <UNDEFINED> instruction: 0x3c090a3e
 8018914:	6b6e696c 	blvs	9bb2ecc <__exidx_end+0x1b986c8>
 8018918:	6c657220 	sfmvs	f7, 2, [r5], #-128	; 0xffffff80
 801891c:	7473223d 	ldrbtvc	r2, [r3], #-573	; 0xfffffdc3
 8018920:	73656c79 	cmnvc	r5, #30976	; 0x7900
 8018924:	74656568 	strbtvc	r6, [r5], #-1384	; 0xfffffa98
 8018928:	72682022 	rsbvc	r2, r8, #34	; 0x22
 801892c:	223d6665 	eorscs	r6, sp, #105906176	; 0x6500000
 8018930:	6c797473 	cfldrdvs	mvd7, [r9], #-460	; 0xfffffe34
 8018934:	632e7365 			; <UNDEFINED> instruction: 0x632e7365
 8018938:	20227373 	eorcs	r7, r2, r3, ror r3
 801893c:	090a3e2f 	stmdbeq	sl, {r0, r1, r2, r3, r5, r9, sl, fp, ip, sp}
 8018940:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
 8018944:	3c3e656c 	cfldr32cc	mvfx6, [lr], #-432	; 0xfffffe50
 8018948:	7469742f 	strbtvc	r7, [r9], #-1071	; 0xfffffbd1
 801894c:	0a3e656c 	beq	8fb1f04 <__exidx_end+0xf97700>
 8018950:	65682f3c 	strbvs	r2, [r8, #-3900]!	; 0xfffff0c4
 8018954:	0a3e6461 	beq	8fb1ae0 <__exidx_end+0xf972dc>
 8018958:	646f623c 	strbtvs	r6, [pc], #-572	; 8018960 <index_html+0x6c>
 801895c:	090a3e79 	stmdbeq	sl, {r0, r3, r4, r5, r6, r9, sl, fp, ip, sp}
 8018960:	6165683c 	cmnvs	r5, ip, lsr r8
 8018964:	3e726564 	cdpcc	5, 7, cr6, cr2, cr4, {3}
 8018968:	206c753c 	rsbcs	r7, ip, ip, lsr r5
 801896c:	223d6469 	eorscs	r6, sp, #1761607680	; 0x69000000
 8018970:	694c6469 	stmdbvs	ip, {r0, r3, r5, r6, sl, sp, lr}^
 8018974:	3e227473 	mcrcc	4, 1, r7, cr2, cr3, {3}
 8018978:	6c752f3c 	ldclvs	15, cr2, [r5], #-240	; 0xffffff10
 801897c:	682f3c3e 	stmdavs	pc!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8018980:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 8018984:	090a3e72 	stmdbeq	sl, {r1, r4, r5, r6, r9, sl, fp, ip, sp}
 8018988:	3c3e703c 	ldccc	0, cr7, [lr], #-240	; 0xffffff10
 801898c:	656c6573 	strbvs	r6, [ip, #-1395]!	; 0xfffffa8d
 8018990:	69207463 	stmdbvs	r0!, {r0, r1, r5, r6, sl, ip, sp, lr}
 8018994:	69223d64 	stmdbvs	r2!, {r2, r5, r6, r8, sl, fp, ip, sp}
 8018998:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
 801899c:	6f746365 	svcvs	0x00746365
 80189a0:	20227972 	eorcs	r7, r2, r2, ror r9
 80189a4:	68636e6f 	stmdavs	r3!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 80189a8:	65676e61 	strbvs	r6, [r7, #-3681]!	; 0xfffff19f
 80189ac:	6567223d 	strbvs	r2, [r7, #-573]!	; 0xfffffdc3
 80189b0:	78745f74 	ldmdavc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 80189b4:	68742874 	ldmdavs	r4!, {r2, r4, r5, r6, fp, sp}^
 80189b8:	762e7369 	strtvc	r7, [lr], -r9, ror #6
 80189bc:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
 80189c0:	3c3e2229 	lfmcc	f2, 4, [lr], #-164	; 0xffffff5c
 80189c4:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
 80189c8:	3e746365 	cdpcc	3, 7, cr6, cr4, cr5, {3}
 80189cc:	3e702f3c 	mrccc	15, 3, r2, cr0, cr12, {1}
 80189d0:	743c090a 	ldrtvc	r0, [ip], #-2314	; 0xfffff6f6
 80189d4:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
 80189d8:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
 80189dc:	54646922 	strbtpl	r6, [r4], #-2338	; 0xfffff6de
 80189e0:	20227478 	eorcs	r7, r2, r8, ror r4
 80189e4:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 80189e8:	273d7265 	ldrcs	r7, [sp, -r5, ror #4]!
 80189ec:	3c3e2731 	ldccc	7, cr2, [lr], #-196	; 0xffffff3c
 80189f0:	6261742f 	rsbvs	r7, r1, #788529152	; 0x2f000000
 80189f4:	0a3e656c 	beq	8fb1fac <__exidx_end+0xf977a8>
 80189f8:	6f663c09 	svcvs	0x00663c09
 80189fc:	7265746f 	rsbvc	r7, r5, #1862270976	; 0x6f000000
 8018a00:	6c753c3e 	ldclvs	12, cr3, [r5], #-248	; 0xffffff08
 8018a04:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
 8018a08:	56646922 	strbtpl	r6, [r4], -r2, lsr #18
 8018a0c:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8018a10:	3e226e6f 	cdpcc	14, 2, cr6, cr2, cr15, {3}
 8018a14:	6c752f3c 	ldclvs	15, cr2, [r5], #-240	; 0xffffff10
 8018a18:	662f3c3e 			; <UNDEFINED> instruction: 0x662f3c3e
 8018a1c:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
 8018a20:	090a3e72 	stmdbeq	sl, {r1, r4, r5, r6, r9, sl, fp, ip, sp}
 8018a24:	7263733c 	rsbvc	r7, r3, #60, 6	; 0xf0000000
 8018a28:	20747069 	rsbscs	r7, r4, r9, rrx
 8018a2c:	3d637273 	sfmcc	f7, 2, [r3, #-460]!	; 0xfffffe34
 8018a30:	646e6922 	strbtvs	r6, [lr], #-2338	; 0xfffff6de
 8018a34:	6a2e7865 	bvs	8bb6bd0 <__exidx_end+0xb9c3cc>
 8018a38:	3c3e2273 	lfmcc	f2, 4, [lr], #-460	; 0xfffffe34
 8018a3c:	7263732f 	rsbvc	r7, r3, #-1140850688	; 0xbc000000
 8018a40:	3e747069 	cdpcc	0, 7, cr7, cr4, cr9, {3}
 8018a44:	622f3c0a 	eorvs	r3, pc, #2560	; 0xa00
 8018a48:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 8018a4c:	682f3c0a 	stmdavs	pc!, {r1, r3, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8018a50:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 8018a54:	 	svcvs	0x0062000a

08018a56 <styles_css>:
 8018a56:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 8018a5a:	200a7b20 	andcs	r7, sl, r0, lsr #22
 8018a5e:	63616220 	cmnvs	r1, #32, 4
 8018a62:	6f72676b 	svcvs	0x0072676b
 8018a66:	2d646e75 	stclcs	14, cr6, [r4, #-468]!	; 0xfffffe2c
 8018a6a:	6f6c6f63 	svcvs	0x006c6f63
 8018a6e:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
 8018a72:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
 8018a76:	30322c30 	eorscc	r2, r2, r0, lsr ip
 8018a7a:	2930322c 	ldmdbcs	r0!, {r2, r3, r5, r9, ip, sp}
 8018a7e:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 8018a82:	6f6c6f63 	svcvs	0x006c6f63
 8018a86:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
 8018a8a:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
 8018a8e:	202c3535 	eorcs	r3, ip, r5, lsr r5
 8018a92:	2c353532 	cfldr32cs	mvfx3, [r5], #-200	; 0xffffff38
 8018a96:	35353220 	ldrcc	r3, [r5, #-544]!	; 0xfffffde0
 8018a9a:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
 8018a9e:	6c750a0a 			; <UNDEFINED> instruction: 0x6c750a0a
 8018aa2:	200a7b20 	andcs	r7, sl, r0, lsr #22
 8018aa6:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 8018aaa:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8018aae:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 8018ab2:	0a3b7865 	beq	8ef6c4e <__exidx_end+0xedc44a>
 8018ab6:	6c0a0a7d 			; <UNDEFINED> instruction: 0x6c0a0a7d
 8018aba:	0a7b2069 	beq	9ee0c66 <__exidx_end+0x1ec6462>
 8018abe:	696c2020 	stmdbvs	ip!, {r5, sp}^
 8018ac2:	732d7473 			; <UNDEFINED> instruction: 0x732d7473
 8018ac6:	656c7974 	strbvs	r7, [ip, #-2420]!	; 0xfffff68c
 8018aca:	6f6e203a 	svcvs	0x006e203a
 8018ace:	0a3b656e 	beq	8ef208e <__exidx_end+0xed788a>
 8018ad2:	616d2020 	cmnvs	sp, r0, lsr #32
 8018ad6:	6e696772 	mcrvs	7, 3, r6, cr9, cr2, {3}
 8018ada:	7031203a 	eorsvc	r2, r1, sl, lsr r0
 8018ade:	70352078 	eorsvc	r2, r5, r8, ror r0
 8018ae2:	7d0a3b78 	vstrvc	d3, [sl, #-480]	; 0xfffffe20
 8018ae6:	65680a0a 	strbvs	r0, [r8, #-2570]!	; 0xfffff5f6
 8018aea:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 8018aee:	200a7b20 	andcs	r7, sl, r0, lsr #22
 8018af2:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 8018af6:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8018afa:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 8018afe:	0a3b7865 	beq	8ef6c9a <__exidx_end+0xedc496>
 8018b02:	6f622020 	svcvs	0x00622020
 8018b06:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
 8018b0a:	6461722d 	strbtvs	r7, [r1], #-557	; 0xfffffdd3
 8018b0e:	3a737569 	bcc	9cf60ba <__exidx_end+0x1cdb8b6>
 8018b12:	78703420 	ldmdavc	r0!, {r5, sl, ip, sp}^
 8018b16:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 8018b1a:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 8018b1e:	203a7265 	eorscs	r7, sl, r5, ror #4
 8018b22:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8018b26:	72672064 	rsbvc	r2, r7, #100	; 0x64
 8018b2a:	31207965 			; <UNDEFINED> instruction: 0x31207965
 8018b2e:	0a3b7870 	beq	8ef6cf6 <__exidx_end+0xedc4f2>
 8018b32:	660a0a7d 			; <UNDEFINED> instruction: 0x660a0a7d
 8018b36:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
 8018b3a:	0a7b2072 	beq	9ee0d0a <__exidx_end+0x1ec6506>
 8018b3e:	69642020 	stmdbvs	r4!, {r5, sp}^
 8018b42:	616c7073 	smcvs	50947	; 0xc703
 8018b46:	66203a79 			; <UNDEFINED> instruction: 0x66203a79
 8018b4a:	3b78656c 	blcc	9e32102 <__exidx_end+0x1e178fe>
 8018b4e:	6a20200a 	bvs	8820b7e <__exidx_end+0x80637a>
 8018b52:	69747375 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r8, r9, ip, sp, lr}^
 8018b56:	632d7966 			; <UNDEFINED> instruction: 0x632d7966
 8018b5a:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
 8018b5e:	203a746e 	eorscs	r7, sl, lr, ror #8
 8018b62:	746e6563 	strbtvc	r6, [lr], #-1379	; 0xfffffa9d
 8018b66:	0a3b7265 	beq	8ef5502 <__exidx_end+0xedacfe>
 8018b6a:	6f622020 	svcvs	0x00622020
 8018b6e:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
 8018b72:	6461722d 	strbtvs	r7, [r1], #-557	; 0xfffffdd3
 8018b76:	3a737569 	bcc	9cf6122 <__exidx_end+0x1cdb91e>
 8018b7a:	78703420 	ldmdavc	r0!, {r5, sl, ip, sp}^
 8018b7e:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 8018b82:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 8018b86:	203a7265 	eorscs	r7, sl, r5, ror #4
 8018b8a:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8018b8e:	72672064 	rsbvc	r2, r7, #100	; 0x64
 8018b92:	31207965 			; <UNDEFINED> instruction: 0x31207965
 8018b96:	0a3b7870 	beq	8ef6d5e <__exidx_end+0xedc55a>
 8018b9a:	00000a7d 	andeq	r0, r0, sp, ror sl
	...

08018ba0 <HttpContent>:
 8018ba0:	080184ac 	stmdaeq	r1, {r2, r3, r5, r7, sl, pc}
 8018ba4:	08018a56 	stmdaeq	r1, {r1, r2, r4, r6, r9, fp, pc}
 8018ba8:	080184b8 	stmdaeq	r1, {r3, r4, r5, r7, sl, pc}
 8018bac:	08018bb8 	stmdaeq	r1, {r3, r4, r5, r7, r8, r9, fp, pc}
 8018bb0:	080184a0 	stmdaeq	r1, {r5, r7, sl, pc}
 8018bb4:	080188f4 	stmdaeq	r1, {r2, r4, r5, r6, r7, fp, pc}

08018bb8 <index_js>:
 8018bb8:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8018bbc:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8018bc0:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8018bc4:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 8018bc8:	534a7465 	movtpl	r7, #42085	; 0xa465
 8018bcc:	6a284e4f 	bvs	8a2c510 <__exidx_end+0xa11d0c>
 8018bd0:	296e6f73 	stmdbcs	lr!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8018bd4:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 8018bd8:	74656c09 	strbtvc	r6, [r5], #-3081	; 0xfffff3f7
 8018bdc:	6c727520 	cfldr64vs	mvdx7, [r2], #-128	; 0xffffff80
 8018be0:	6a2f273d 	bvs	8be28dc <__exidx_end+0xbc80d8>
 8018be4:	2f6e6f73 	svccs	0x006e6f73
 8018be8:	202b2027 	eorcs	r2, fp, r7, lsr #32
 8018bec:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 8018bf0:	09090a3b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r9, fp}
 8018bf4:	20797274 	rsbscs	r7, r9, r4, ror r2
 8018bf8:	09090a7b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r6, r9, fp}
 8018bfc:	656c0909 	strbvs	r0, [ip, #-2313]!	; 0xfffff6f7
 8018c00:	65722074 	ldrbvs	r2, [r2, #-116]!	; 0xffffff8c
 8018c04:	77613d73 			; <UNDEFINED> instruction: 0x77613d73
 8018c08:	20746961 	rsbscs	r6, r4, r1, ror #18
 8018c0c:	63746566 	cmnvs	r4, #427819008	; 0x19800000
 8018c10:	72752868 	rsbsvc	r2, r5, #104, 16	; 0x680000
 8018c14:	0a3b296c 	beq	8ee31cc <__exidx_end+0xec89c8>
 8018c18:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 8018c1c:	75746572 	ldrbvc	r6, [r4, #-1394]!	; 0xfffffa8e
 8018c20:	61206e72 			; <UNDEFINED> instruction: 0x61206e72
 8018c24:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 8018c28:	73657220 	cmnvc	r5, #32, 4
 8018c2c:	6f736a2e 	svcvs	0x00736a2e
 8018c30:	3b29286e 	blcc	8a62df0 <__exidx_end+0xa485ec>
 8018c34:	7d09090a 	vstrvc.16	s0, [r9, #-20]	; 0xffffffec	; <UNPREDICTABLE>
 8018c38:	74616320 	strbtvc	r6, [r1], #-800	; 0xfffffce0
 8018c3c:	28206863 	stmdacs	r0!, {r0, r1, r5, r6, fp, sp, lr}
 8018c40:	6f727265 	svcvs	0x00727265
 8018c44:	7b202972 	blvc	8823214 <__exidx_end+0x808a10>
 8018c48:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8018c4c:	6e6f6309 	cdpvs	3, 6, cr6, cr15, cr9, {0}
 8018c50:	656c6f73 	strbvs	r6, [ip, #-3955]!	; 0xfffff08d
 8018c54:	676f6c2e 	strbvs	r6, [pc, -lr, lsr #24]!
 8018c58:	72726528 	rsbsvc	r6, r2, #40, 10	; 0xa000000
 8018c5c:	3b29726f 	blcc	8a75620 <__exidx_end+0xa5ae1c>
 8018c60:	7d09090a 	vstrvc.16	s0, [r9, #-20]	; 0xffffffec	; <UNPREDICTABLE>
 8018c64:	0a0a7d0a 	beq	82b8094 <__exidx_end+0x29d890>
 8018c68:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8018c6c:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8018c70:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8018c74:	72206e6f 	eorvc	r6, r0, #1776	; 0x6f0
 8018c78:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 8018c7c:	73694c72 	cmnvc	r9, #29184	; 0x7200
 8018c80:	20292874 	eorcs	r2, r9, r4, ror r8
 8018c84:	09090a7b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r6, r9, fp}
 8018c88:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8018c8c:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8018c90:	6177613d 	cmnvs	r7, sp, lsr r1
 8018c94:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8018c98:	534a7465 	movtpl	r7, #42085	; 0xa465
 8018c9c:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8018ca0:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8018ca4:	0a3b2927 	beq	8ee3148 <__exidx_end+0xec8944>
 8018ca8:	6f640909 	svcvs	0x00640909
 8018cac:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 8018cb0:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 8018cb4:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
 8018cb8:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 8018cbc:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 8018cc0:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 8018cc4:	73694c64 	cmnvc	r9, #100, 24	; 0x6400
 8018cc8:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 8018ccc:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
 8018cd0:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
 8018cd4:	3c223d4c 	stccc	13, cr3, [r2], #-304	; 0xfffffed0
 8018cd8:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
 8018cdc:	73696c2b 	cmnvc	r9, #11008	; 0x2b00
 8018ce0:	696c2e74 	stmdbvs	ip!, {r2, r4, r5, r6, r9, sl, fp, sp}^
 8018ce4:	6e2e7473 	mcrvs	4, 1, r7, cr14, cr3, {3}
 8018ce8:	2b656d61 	blcs	9974274 <__exidx_end+0x1959a70>
 8018cec:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8018c6c <index_js+0xb4>
 8018cf0:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8018cf4:	2b223e69 	blcs	88a86a0 <__exidx_end+0x88de9c>
 8018cf8:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8018cfc:	73696c2e 	cmnvc	r9, #11776	; 0x2e00
 8018d00:	6f6e2e74 	svcvs	0x006e2e74
 8018d04:	742e6564 	strtvc	r6, [lr], #-1380	; 0xfffffa9c
 8018d08:	2b657079 	blcs	9974ef4 <__exidx_end+0x195a6f0>
 8018d0c:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8018c8c <index_js+0xd4>
 8018d10:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8018d14:	2b223e69 	blcs	88a86c0 <__exidx_end+0x88debc>
 8018d18:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8018d1c:	73696c2e 	cmnvc	r9, #11776	; 0x2e00
 8018d20:	6f6e2e74 	svcvs	0x006e2e74
 8018d24:	702e6564 	eorvc	r6, lr, r4, ror #10
 8018d28:	2e74726f 	cdpcs	2, 7, cr7, cr4, cr15, {3}
 8018d2c:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 8018d30:	2f3c222b 	svccs	0x003c222b
 8018d34:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
 8018d38:	0a7d0a3b 	beq	9f5b62c <__exidx_end+0x1f40e28>
 8018d3c:	7973610a 	ldmdbvc	r3!, {r1, r3, r8, sp, lr}^
 8018d40:	6620636e 	strtvs	r6, [r0], -lr, ror #6
 8018d44:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 8018d48:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 8018d4c:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 8018d50:	69447265 	stmdbvs	r4, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8018d54:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 8018d58:	2879726f 	ldmdacs	r9!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
 8018d5c:	0a7b2029 	beq	9ee0e08 <__exidx_end+0x1ec6604>
 8018d60:	6c090909 			; <UNDEFINED> instruction: 0x6c090909
 8018d64:	64207465 	strtvs	r7, [r0], #-1125	; 0xfffffb9b
 8018d68:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
 8018d6c:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8018d70:	6177613d 	cmnvs	r7, sp, lsr r1
 8018d74:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8018d78:	534a7465 	movtpl	r7, #42085	; 0xa465
 8018d7c:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8018d80:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8018d84:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8018d88:	3b292779 	blcc	8a62b74 <__exidx_end+0xa48370>
 8018d8c:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8018d90:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8018d94:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8018d98:	0a22223d 	beq	88a1694 <__exidx_end+0x886e90>
 8018d9c:	6c090909 			; <UNDEFINED> instruction: 0x6c090909
 8018da0:	66207465 	strtvs	r7, [r0], -r5, ror #8
 8018da4:	6e656c69 	cdpvs	12, 6, cr6, cr5, cr9, {3}
 8018da8:	73656d61 	cmnvc	r5, #6208	; 0x1840
 8018dac:	6a624f3d 	bvs	98acaa8 <__exidx_end+0x18922a4>
 8018db0:	2e746365 	cdpcs	3, 7, cr6, cr4, cr5, {3}
 8018db4:	7379656b 	cmnvc	r9, #448790528	; 0x1ac00000
 8018db8:	72696428 	rsbvc	r6, r9, #40, 8	; 0x28000000
 8018dbc:	6f746365 	svcvs	0x00746365
 8018dc0:	225b7972 	subscs	r7, fp, #1867776	; 0x1c8000
 8018dc4:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8018dc8:	295d2273 	ldmdbcs	sp, {r0, r1, r4, r5, r6, r9, sp}^
 8018dcc:	09090a3b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r9, fp}
 8018dd0:	6c696609 	stclvs	6, cr6, [r9], #-36	; 0xffffffdc
 8018dd4:	6d616e65 	stclvs	14, cr6, [r1, #-404]!	; 0xfffffe6c
 8018dd8:	662e7365 	strtvs	r7, [lr], -r5, ror #6
 8018ddc:	6145726f 	cmpvs	r5, pc, ror #4
 8018de0:	66286863 	strtvs	r6, [r8], -r3, ror #16
 8018de4:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 8018de8:	286e6f69 	stmdacs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 8018dec:	2979656b 	ldmdbcs	r9!, {r0, r1, r3, r5, r6, r8, sl, sp, lr}^
 8018df0:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 8018df4:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 8018df8:	20726176 	rsbscs	r6, r2, r6, ror r1
 8018dfc:	756c6176 	strbvc	r6, [ip, #-374]!	; 0xfffffe8a
 8018e00:	203d2065 	eorscs	r2, sp, r5, rrx
 8018e04:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8018e08:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8018e0c:	66225b79 			; <UNDEFINED> instruction: 0x66225b79
 8018e10:	73656c69 	cmnvc	r5, #26880	; 0x6900
 8018e14:	6b5b5d22 	blvs	96f02a4 <__exidx_end+0x16d5aa0>
 8018e18:	3b5d7965 	blcc	97773b4 <__exidx_end+0x175cbb0>
 8018e1c:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8018e20:	74680909 	strbtvc	r0, [r8], #-2313	; 0xfffff6f7
 8018e24:	3d2b6c6d 	stccc	12, cr6, [fp, #-436]!	; 0xfffffe4c
 8018e28:	706f3c22 	rsbvc	r3, pc, r2, lsr #24
 8018e2c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8018e30:	6c617620 	stclvs	6, cr7, [r1], #-128	; 0xffffff80
 8018e34:	223d6575 	eorscs	r6, sp, #490733568	; 0x1d400000
 8018e38:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 8018e3c:	223e222b 	eorscs	r2, lr, #-1342177278	; 0xb0000002
 8018e40:	6c61762b 	stclvs	6, cr7, [r1], #-172	; 0xffffff54
 8018e44:	222b6575 	eorcs	r6, fp, #490733568	; 0x1d400000
 8018e48:	706f2f3c 	rsbvc	r2, pc, ip, lsr pc	; <UNPREDICTABLE>
 8018e4c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8018e50:	0a3b223e 	beq	8ee1750 <__exidx_end+0xec6f4c>
 8018e54:	7d090909 	vstrvc.16	s0, [r9, #-18]	; 0xffffffee	; <UNPREDICTABLE>
 8018e58:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 8018e5c:	6f640909 	svcvs	0x00640909
 8018e60:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 8018e64:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 8018e68:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
 8018e6c:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 8018e70:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 8018e74:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 8018e78:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
 8018e7c:	6f746365 	svcvs	0x00746365
 8018e80:	29227972 	stmdbcs	r2!, {r1, r4, r5, r6, r8, fp, ip, sp, lr}
 8018e84:	6e6e692e 	vmulvs.f16	s13, s28, s29	; <UNPREDICTABLE>
 8018e88:	54487265 	strbpl	r7, [r8], #-613	; 0xfffffd9b
 8018e8c:	683d4c4d 	ldmdavs	sp!, {r0, r2, r3, r6, sl, fp, lr}
 8018e90:	3b6c6d74 	blcc	9b34468 <__exidx_end+0x1b19c64>
 8018e94:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8018e98:	5f746567 	svcpl	0x00746567
 8018e9c:	28747874 	ldmdacs	r4!, {r2, r4, r5, r6, fp, ip, sp, lr}^
 8018ea0:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8018ea4:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 8018ea8:	5d305b73 	fldmdbxpl	r0!, {d5-d61}	;@ Deprecated
 8018eac:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
 8018eb0:	73610a0a 	cmnvc	r1, #40960	; 0xa000
 8018eb4:	20636e79 	rsbcs	r6, r3, r9, ror lr
 8018eb8:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 8018ebc:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8018ec0:	6e657220 	cdpvs	2, 6, cr7, cr5, cr0, {1}
 8018ec4:	56726564 	ldrbtpl	r6, [r2], -r4, ror #10
 8018ec8:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8018ecc:	29286e6f 	stmdbcs	r8!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
 8018ed0:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 8018ed4:	74656c09 	strbtvc	r6, [r5], #-3081	; 0xfffff3f7
 8018ed8:	72657620 	rsbvc	r7, r5, #32, 12	; 0x2000000
 8018edc:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 8018ee0:	6177613d 	cmnvs	r7, sp, lsr r1
 8018ee4:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8018ee8:	534a7465 	movtpl	r7, #42085	; 0xa465
 8018eec:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8018ef0:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8018ef4:	276e6f69 	strbcs	r6, [lr, -r9, ror #30]!
 8018ef8:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 8018efc:	636f6409 	cmnvs	pc, #150994944	; 0x9000000
 8018f00:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
 8018f04:	65672e74 	strbvs	r2, [r7, #-3700]!	; 0xfffff18c
 8018f08:	656c4574 	strbvs	r4, [ip, #-1396]!	; 0xfffffa8c
 8018f0c:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
 8018f10:	64497942 	strbvs	r7, [r9], #-2370	; 0xfffff6be
 8018f14:	64692228 	strbtvs	r2, [r9], #-552	; 0xfffffdd8
 8018f18:	73726556 	cmnvc	r2, #360710144	; 0x15800000
 8018f1c:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 8018f20:	6e692e29 	cdpvs	14, 6, cr2, cr9, cr9, {1}
 8018f24:	4872656e 	ldmdami	r2!, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^
 8018f28:	3d4c4d54 	stclcc	13, cr4, [ip, #-336]	; 0xfffffeb0
 8018f2c:	696c3c22 	stmdbvs	ip!, {r1, r5, sl, fp, ip, sp}^
 8018f30:	2b22563e 	blcs	88ae830 <__exidx_end+0x89402c>
 8018f34:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8018f38:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 8018f3c:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8018f40:	2b6e6f69 	blcs	9bb4cec <__exidx_end+0x1b9a4e8>
 8018f44:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8018ec4 <index_js+0x30c>
 8018f48:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8018f4c:	2b223e69 	blcs	88a88f8 <__exidx_end+0x88e0f4>
 8018f50:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8018f54:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 8018f58:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
 8018f5c:	61642e64 	cmnvs	r4, r4, ror #28
 8018f60:	222b6574 	eorcs	r6, fp, #116, 10	; 0x1d000000
 8018f64:	696c2f3c 	stmdbvs	ip!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 8018f68:	696c3c3e 	stmdbvs	ip!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}^
 8018f6c:	762b223e 			; <UNDEFINED> instruction: 0x762b223e
 8018f70:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8018f74:	622e6e6f 	eorvs	r6, lr, #1776	; 0x6f0
 8018f78:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
 8018f7c:	6d69742e 	cfstrdvs	mvd7, [r9, #-184]!	; 0xffffff48
 8018f80:	3c222b65 			; <UNDEFINED> instruction: 0x3c222b65
 8018f84:	3e696c2f 	cdpcc	12, 6, cr6, cr9, cr15, {1}
 8018f88:	3e696c3c 	mcrcc	12, 3, r6, cr9, cr12, {1}
 8018f8c:	65762b22 	ldrbvs	r2, [r6, #-2850]!	; 0xfffff4de
 8018f90:	6f697372 	svcvs	0x00697372
 8018f94:	6f622e6e 	svcvs	0x00622e6e
 8018f98:	2b647261 	blcs	9935924 <__exidx_end+0x191b120>
 8018f9c:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8018f1c <index_js+0x364>
 8018fa0:	3b223e69 	blcc	88a894c <__exidx_end+0x88e148>
 8018fa4:	0a0a7d0a 	beq	82b83d4 <__exidx_end+0x29dbd0>
 8018fa8:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8018fac:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8018fb0:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8018fb4:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 8018fb8:	745f7465 	ldrbvc	r7, [pc], #-1125	; 8018fc0 <index_js+0x408>
 8018fbc:	73287478 			; <UNDEFINED> instruction: 0x73287478
 8018fc0:	20296c65 	eorcs	r6, r9, r5, ror #24
 8018fc4:	6c090a7b 			; <UNDEFINED> instruction: 0x6c090a7b
 8018fc8:	74207465 	strtvc	r7, [r0], #-1125	; 0xfffffb9b
 8018fcc:	613d7478 	teqvs	sp, r8, ror r4
 8018fd0:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 8018fd4:	74656720 	strbtvc	r6, [r5], #-1824	; 0xfffff8e0
 8018fd8:	4e4f534a 	cdpmi	3, 4, cr5, cr15, cr10, {2}
 8018fdc:	6c657328 	stclvs	3, cr7, [r5], #-160	; 0xffffff60
 8018fe0:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 8018fe4:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8018fe8:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8018fec:	3b22223d 	blcc	88a18e8 <__exidx_end+0x8870e4>
 8018ff0:	624f090a 	subvs	r0, pc, #163840	; 0x28000
 8018ff4:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
 8018ff8:	79656b2e 	stmdbvc	r5!, {r1, r2, r3, r5, r8, r9, fp, sp, lr}^
 8018ffc:	78742873 	ldmdavc	r4!, {r0, r1, r4, r5, r6, fp, sp}^
 8019000:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
 8019004:	2e295d6c 	cdpcs	13, 2, cr5, cr9, cr12, {3}
 8019008:	45726f66 	ldrbmi	r6, [r2, #-3942]!	; 0xfffff09a
 801900c:	28686361 	stmdacs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
 8019010:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 8019014:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8019018:	79656b28 	stmdbvc	r5!, {r3, r5, r8, r9, fp, sp, lr}^
 801901c:	0a7b2029 	beq	9ee10c8 <__exidx_end+0x1ec68c4>
 8019020:	61760909 	cmnvs	r6, r9, lsl #18
 8019024:	61762072 	cmnvs	r6, r2, ror r0
 8019028:	2065756c 	rsbcs	r7, r5, ip, ror #10
 801902c:	7874203d 	ldmdavc	r4!, {r0, r2, r3, r4, r5, sp}^
 8019030:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
 8019034:	6b5b5d6c 	blvs	96f05ec <__exidx_end+0x16d5de8>
 8019038:	3b5d7965 	blcc	97775d4 <__exidx_end+0x175cdd0>
 801903c:	2009090a 	andcs	r0, r9, sl, lsl #18
 8019040:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8019044:	3c223d2b 	stccc	13, cr3, [r2], #-172	; 0xffffff54
 8019048:	3c3e7274 	lfmcc	f7, 4, [lr], #-464	; 0xfffffe30
 801904c:	223e6474 	eorscs	r6, lr, #116, 8	; 0x74000000
 8019050:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 8019054:	2f3c222b 	svccs	0x003c222b
 8019058:	3c3e6474 	cfldrscc	mvf6, [lr], #-464	; 0xfffffe30
 801905c:	223e6474 	eorscs	r6, lr, #116, 8	; 0x74000000
 8019060:	6c61762b 	stclvs	6, cr7, [r1], #-172	; 0xffffff54
 8019064:	222b6575 	eorcs	r6, fp, #490733568	; 0x1d400000
 8019068:	64742f3c 	ldrbtvs	r2, [r4], #-3900	; 0xfffff0c4
 801906c:	742f3c3e 	strtvc	r3, [pc], #-3134	; 8019074 <index_js+0x4bc>
 8019070:	3b223e72 	blcc	88a8a40 <__exidx_end+0x88e23c>
 8019074:	297d090a 	ldmdbcs	sp!, {r1, r3, r8, fp}^
 8019078:	64090a3b 	strvs	r0, [r9], #-2619	; 0xfffff5c5
 801907c:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
 8019080:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 8019084:	45746567 	ldrbmi	r6, [r4, #-1383]!	; 0xfffffa99
 8019088:	656d656c 	strbvs	r6, [sp, #-1388]!	; 0xfffffa94
 801908c:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
 8019090:	22286449 	eorcs	r6, r8, #1224736768	; 0x49000000
 8019094:	78546469 	ldmdavc	r4, {r0, r3, r5, r6, sl, sp, lr}^
 8019098:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 801909c:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
 80190a0:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
 80190a4:	74683d4c 	strbtvc	r3, [r8], #-3404	; 0xfffff2b4
 80190a8:	0a3b6c6d 	beq	8ef4264 <__exidx_end+0xed9a60>
 80190ac:	720a0a7d 	andvc	r0, sl, #512000	; 0x7d000
 80190b0:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 80190b4:	73694c72 	cmnvc	r9, #29184	; 0x7200
 80190b8:	3b292874 	blcc	8a63290 <__exidx_end+0xa48a8c>
 80190bc:	6e65720a 	cdpvs	2, 6, cr7, cr5, cr10, {0}
 80190c0:	44726564 	ldrbtmi	r6, [r2], #-1380	; 0xfffffa9c
 80190c4:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
 80190c8:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 80190cc:	0a3b2928 	beq	8ee3574 <__exidx_end+0xec8d70>
 80190d0:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 80190d4:	65567265 	ldrbvs	r7, [r6, #-613]	; 0xfffffd9b
 80190d8:	6f697372 	svcvs	0x00697372
 80190dc:	3b29286e 	blcc	8a6329c <__exidx_end+0xa48a98>
 80190e0:	2020000a 	eorcs	r0, r0, sl
 80190e4:	76696e55 			; <UNDEFINED> instruction: 0x76696e55
 80190e8:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 80190ec:	72612073 	rsbvc	r2, r1, #115	; 0x73
 80190f0:	616d2065 	cmnvs	sp, r5, rrx
 80190f4:	65707070 	ldrbvs	r7, [r0, #-112]!	; 0xffffff90
 80190f8:	312b2064 			; <UNDEFINED> instruction: 0x312b2064
 80190fc:	0000000a 	andeq	r0, r0, sl

08019100 <vtable for ArtNet4Node>:
	...
 8019108:	0800a4bd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, sl, sp, pc}
 801910c:	0800a5ab 	stmdaeq	r0, {r0, r1, r3, r5, r7, r8, sl, sp, pc}
 8019110:	0800a461 	stmdaeq	r0, {r0, r5, r6, sl, sp, pc}
 8019114:	0800a4dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, sl, sp, pc}
 8019118:	0800a5bd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, r8, sl, sp, pc}
 801911c:	0800a5a3 	stmdaeq	r0, {r0, r1, r5, r7, r8, sl, sp, pc}

08019120 <ArtNetMsgConst::START>:
 8019120:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
 8019124:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 8019128:	74724120 	ldrbtvc	r4, [r2], #-288	; 0xfffffee0
 801912c:	74654e2d 	strbtvc	r4, [r5], #-3629	; 0xfffff1d3
	...

08019131 <ArtNetMsgConst::PARAMS>:
 8019131:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 8019135:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 8019139:	20676e69 	rsbcs	r6, r7, r9, ror #28
 801913d:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 8019141:	0074654e 	rsbseq	r6, r4, lr, asr #10

08019145 <ArtNetMsgConst::STARTED>:
 8019145:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 8019149:	2074654e 	rsbscs	r6, r4, lr, asr #10
 801914d:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8019151:	00646574 	rsbeq	r6, r4, r4, ror r5
 8019155:	25207325 	strcs	r7, [r0, #-805]!	; 0xfffffcdb
 8019159:	64252073 	strtvs	r2, [r5], #-115	; 0xffffff8d
 801915d:	00732520 	rsbseq	r2, r3, r0, lsr #10
 8019161:	70747468 	rsbsvc	r7, r4, r8, ror #8
 8019165:	672f2f3a 			; <UNDEFINED> instruction: 0x672f2f3a
 8019169:	2d323364 	ldccs	3, cr3, [r2, #-400]!	; 0xfffffe70
 801916d:	2e786d64 	cdpcs	13, 7, cr6, cr8, cr4, {3}
 8019171:	0067726f 	rsbeq	r7, r7, pc, ror #4
 8019175:	65626d45 	strbvs	r6, [r2, #-3397]!	; 0xfffff2bb
 8019179:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
	...

0801917e <artnet::NODE_ID>:
 801917e:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 8019182:	0074654e 	rsbseq	r6, r4, lr, asr #10

08019186 <defaults::SHORT_NAME>:
 8019186:	20567641 	subscs	r7, r6, r1, asr #12
 801918a:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 801918e:	2074654e 	rsbscs	r6, r4, lr, asr #10
 8019192:	65646f4e 	strbvs	r6, [r4, #-3918]!	; 0xfffff0b2
	...

08019197 <artnet::NODE_ID>:
 8019197:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 801919b:	0074654e 	rsbseq	r6, r4, lr, asr #10
 801919f:	78343025 	ldmdavc	r4!, {r0, r2, r5, ip, sp}
 80191a3:	30255b20 	eorcc	r5, r5, r0, lsr #22
 80191a7:	205d6434 	subscs	r6, sp, r4, lsr r4
 80191ab:	41207325 			; <UNDEFINED> instruction: 0x41207325
 80191af:	 	tstmi	r0, r6, ror r6

080191b2 <artnet::NODE_ID>:
 80191b2:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 80191b6:	0074654e 	rsbseq	r6, r4, lr, asr #10
 80191ba:	52206f4e 	eorpl	r6, r0, #312	; 0x138
 80191be:	72204d44 	eorvc	r4, r0, #68, 26	; 0x1100
 80191c2:	6f707365 	svcvs	0x00707365
 80191c6:	0a65736e 	beq	9975f86 <__exidx_end+0x195b782>
 80191ca:	50544800 	subspl	r4, r4, r0, lsl #16
 80191ce:	50544c00 	subspl	r4, r4, r0, lsl #24
 80191d2:	74724100 	ldrbtvc	r4, [r2], #-256	; 0xffffff00
 80191d6:	74654e2d 	strbtvc	r4, [r5], #-3629	; 0xfffff1d3
 80191da:	43417300 	movtmi	r7, #4864	; 0x1300
 80191de:	6f4e004e 	svcvs	0x004e004e
 80191e2:	25206564 	strcs	r6, [r0, #-1380]!	; 0xfffffa9c
 80191e6:	255b2064 	ldrbcs	r2, [fp, #-100]	; 0xffffff9c
 80191ea:	000a5d75 	andeq	r5, sl, r5, ror sp
 80191ee:	72694620 	rsbvc	r4, r9, #32, 12	; 0x2000000
 80191f2:	7261776d 	rsbvc	r7, r1, #28573696	; 0x1b40000
 80191f6:	20202065 	eorcs	r2, r0, r5, rrx
 80191fa:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 80191fe:	0a64252e 	beq	99226be <__exidx_end+0x1907eba>
 8019202:	68532000 	ldmdavs	r3, {sp}^
 8019206:	2074726f 	rsbscs	r7, r4, pc, ror #4
 801920a:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 801920e:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8019212:	20000a73 	andcs	r0, r0, r3, ror sl
 8019216:	676e6f4c 	strbvs	r6, [lr, -ip, asr #30]!
 801921a:	6d616e20 	stclvs	14, cr6, [r1, #-128]!	; 0xffffff80
 801921e:	3a202065 	bcc	88213ba <__exidx_end+0x806bb6>
 8019222:	0a732520 	beq	9ce26aa <__exidx_end+0x1cc7ea6>
 8019226:	754f2000 	strbvc	r2, [pc, #-0]	; 801922e <artnet::NODE_ID+0x7c>
 801922a:	74757074 	ldrbtvc	r7, [r5], #-116	; 0xffffff8c
 801922e:	2020000a 	eorcs	r0, r0, sl
 8019232:	74726f50 	ldrbtvc	r6, [r2], #-3920	; 0xfffff0b0
 8019236:	64322520 	ldrtvs	r2, [r2], #-1312	; 0xfffffae0
 801923a:	3a642520 	bcc	99226c2 <__exidx_end+0x1907ebe>
 801923e:	322d255b 	eorcc	r2, sp, #381681664	; 0x16c00000
 8019242:	2d253a64 	vstmdbcs	r5!, {s6-s105}
 8019246:	253a6432 	ldrcs	r6, [sl, #-1074]!	; 0xfffffbce
 801924a:	5d64322d 	sfmpl	f3, 2, [r4, #-180]!	; 0xffffff4c
 801924e:	7534253a 	ldrvc	r2, [r4, #-1338]!	; 0xfffffac6
 8019252:	73255b20 			; <UNDEFINED> instruction: 0x73255b20
 8019256:	7b20005d 	blvc	88193d2 <__exidx_end+0x7febce>
 801925a:	0a7d7325 	beq	9f75ef6 <__exidx_end+0x1f5b6f2>
 801925e:	6e492000 	cdpvs	0, 4, cr2, cr9, cr0, {0}
 8019262:	0a747570 	beq	9d3682a <__exidx_end+0x1d1c026>
 8019266:	50202000 	eorpl	r2, r0, r0
 801926a:	2074726f 	rsbscs	r7, r4, pc, ror #4
 801926e:	20643225 	rsbcs	r3, r4, r5, lsr #4
 8019272:	5b3a6425 	blpl	8eb230e <__exidx_end+0xe97b0a>
 8019276:	64322d25 	ldrtvs	r2, [r2], #-3365	; 0xfffff2db
 801927a:	322d253a 	eorcc	r2, sp, #243269632	; 0xe800000
 801927e:	2d253a64 	vstmdbcs	r5!, {s6-s105}
 8019282:	3a5d6432 	bcc	9772352 <__exidx_end+0x1757b4e>
 8019286:	20753425 	rsbscs	r3, r5, r5, lsr #8
 801928a:	25203e2d 	strcs	r3, [r0, #-3629]!	; 0xfffff1d3
 801928e:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8019292:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8019296:	000a6425 	andeq	r6, sl, r5, lsr #8
 801929a:	6e636173 	mcrvs	1, 3, r6, cr3, cr3, {3}
 801929e:	706e6900 	rsbvc	r6, lr, r0, lsl #18
 80192a2:	6f007475 	svcvs	0x00007475
 80192a6:	75707475 	ldrbvc	r7, [r0, #-1141]!	; 0xfffffb8b
 80192aa:	74680074 	strbtvc	r0, [r8], #-116	; 0xffffff8c
 80192ae:	746c0070 	strbtvc	r0, [ip], #-112	; 0xffffff90
 80192b2:	72610070 	rsbvc	r0, r1, #112	; 0x70
 80192b6:	74656e74 	strbtvc	r6, [r5], #-3700	; 0xfffff18c
 80192ba:	6c754d00 	ldclvs	13, cr4, [r5], #-0
 80192be:	70206974 	eorvc	r6, r0, r4, ror r9
 80192c2:	2074726f 	rsbscs	r7, r4, pc, ror #4
 80192c6:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 80192ca:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 80192ce:	6f697461 	svcvs	0x00697461
 80192d2:	6f4e006e 	svcvs	0x004e006e
 80192d6:	44006564 	strmi	r6, [r0], #-1380	; 0xfffffa9c
 80192da:	522f584d 	eorpl	r5, pc, #5046272	; 0x4d0000
 80192de:	4f204d44 	svcmi	0x00204d44
 80192e2:	75707475 	ldrbvc	r7, [r0, #-1141]!	; 0xfffffb8b
 80192e6:	4d440074 	stclmi	0, cr0, [r4, #-464]	; 0xfffffe30
 80192ea:	6e492058 	mcrvs	0, 2, r2, cr9, cr8, {2}
 80192ee:	00747570 	rsbseq	r7, r4, r0, ror r5
 80192f2:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 80192f6:	2074654e 	rsbscs	r6, r4, lr, asr #10
 80192fa:	 	mcrvs	0, 3, r0, cr5, cr4, {1}

080192fc <ArtNetParamsConst::ENABLE_RDM>:
 80192fc:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 8019300:	725f656c 	subsvc	r6, pc, #108, 10	; 0x1b000000
 8019304:	 	stcvs	13, cr6, [r0, #-400]	; 0xfffffe70

08019307 <ArtNetParamsConst::MAP_UNIVERSE0>:
 8019307:	5f70616d 	svcpl	0x0070616d
 801930b:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 801930f:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8019313:	 	rsbsvc	r0, r0, #48	; 0x30

08019315 <ArtNetParamsConst::PROTOCOL_PORT>:
 8019315:	746f7270 	strbtvc	r7, [pc], #-624	; 801931d <ArtNetParamsConst::PROTOCOL_PORT+0x8>
 8019319:	6c6f636f 	stclvs	3, cr6, [pc], #-444	; 8019164 <ArtNetMsgConst::STARTED+0x1f>
 801931d:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8019321:	00615f74 	rsbeq	r5, r1, r4, ror pc
 8019325:	746f7270 	strbtvc	r7, [pc], #-624	; 801932d <ArtNetParamsConst::PROTOCOL_PORT+0x18>
 8019329:	6c6f636f 	stclvs	3, cr6, [pc], #-444	; 8019174 <ArtNetMsgConst::STARTED+0x2f>
 801932d:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8019331:	00625f74 	rsbeq	r5, r2, r4, ror pc
 8019335:	746f7270 	strbtvc	r7, [pc], #-624	; 801933d <ArtNetParamsConst::PROTOCOL_PORT+0x28>
 8019339:	6c6f636f 	stclvs	3, cr6, [pc], #-444	; 8019184 <artnet::NODE_ID+0x6>
 801933d:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8019341:	00635f74 	rsbeq	r5, r3, r4, ror pc
 8019345:	746f7270 	strbtvc	r7, [pc], #-624	; 801934d <ArtNetParamsConst::PROTOCOL_PORT+0x38>
 8019349:	6c6f636f 	stclvs	3, cr6, [pc], #-444	; 8019194 <defaults::SHORT_NAME+0xe>
 801934d:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8019351:	00645f74 	rsbeq	r5, r4, r4, ror pc

08019355 <ArtNetParamsConst::NODE_LONG_NAME>:
 8019355:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
 8019359:	6d616e5f 	stclvs	14, cr6, [r1, #-380]!	; 0xfffffe84
 801935d:	 	strbvs	r0, [pc, #-101]!	; 8019300 <ArtNetParamsConst::ENABLE_RDM+0x4>

0801935f <ArtNetParamsConst::NODE_OEM_VALUE>:
 801935f:	5f6d656f 	svcpl	0x006d656f
 8019363:	756c6176 	strbvc	r6, [ip, #-374]!	; 0xfffffe8a
 8019367:	 	ldmdavs	r3!, {r0, r2, r5, r6}^

08019369 <ArtNetParamsConst::NODE_SHORT_NAME>:
 8019369:	726f6873 	rsbvc	r6, pc, #7536640	; 0x730000
 801936d:	616e5f74 	smcvs	58868	; 0xe5f4
 8019371:	 	strvs	r6, [r0], #-1389	; 0xfffffa93

08019374 <ArtNetParamsConst::DESTINATION_IP_PORT>:
 8019374:	74736564 	ldrbtvc	r6, [r3], #-1380	; 0xfffffa9c
 8019378:	74616e69 	strbtvc	r6, [r1], #-3689	; 0xfffff197
 801937c:	5f6e6f69 	svcpl	0x006e6f69
 8019380:	705f7069 	subsvc	r7, pc, r9, rrx
 8019384:	5f74726f 	svcpl	0x0074726f
 8019388:	00000061 	andeq	r0, r0, r1, rrx
 801938c:	74736564 	ldrbtvc	r6, [r3], #-1380	; 0xfffffa9c
 8019390:	74616e69 	strbtvc	r6, [r1], #-3689	; 0xfffff197
 8019394:	5f6e6f69 	svcpl	0x006e6f69
 8019398:	705f7069 	subsvc	r7, pc, r9, rrx
 801939c:	5f74726f 	svcpl	0x0074726f
 80193a0:	00000062 	andeq	r0, r0, r2, rrx
 80193a4:	74736564 	ldrbtvc	r6, [r3], #-1380	; 0xfffffa9c
 80193a8:	74616e69 	strbtvc	r6, [r1], #-3689	; 0xfffff197
 80193ac:	5f6e6f69 	svcpl	0x006e6f69
 80193b0:	705f7069 	subsvc	r7, pc, r9, rrx
 80193b4:	5f74726f 	svcpl	0x0074726f
 80193b8:	00000063 	andeq	r0, r0, r3, rrx
 80193bc:	74736564 	ldrbtvc	r6, [r3], #-1380	; 0xfffffa9c
 80193c0:	74616e69 	strbtvc	r6, [r1], #-3689	; 0xfffff197
 80193c4:	5f6e6f69 	svcpl	0x006e6f69
 80193c8:	705f7069 	subsvc	r7, pc, r9, rrx
 80193cc:	5f74726f 	svcpl	0x0074726f
 80193d0:	00000064 	andeq	r0, r0, r4, rrx

080193d4 <ArtNetParamsConst::DISABLE_MERGE_TIMEOUT>:
 80193d4:	61736964 	cmnvs	r3, r4, ror #18
 80193d8:	5f656c62 	svcpl	0x00656c62
 80193dc:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 80193e0:	69745f65 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
 80193e4:	756f656d 	strbvc	r6, [pc, #-1389]!	; 8018e7f <index_js+0x2c7>
 80193e8:	 	strbvs	r0, [lr, #-116]!	; 0xffffff8c

080193ea <ArtNetParamsConst::NODE_NETWORK_DATA_LOSS_TIMEOUT>:
 80193ea:	7774656e 	ldrbvc	r6, [r4, -lr, ror #10]!
 80193ee:	5f6b726f 	svcpl	0x006b726f
 80193f2:	61746164 	cmnvs	r4, r4, ror #2
 80193f6:	736f6c5f 	cmnvc	pc, #24320	; 0x5f00
 80193fa:	69745f73 	ldmdbvs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 80193fe:	756f656d 	strbvc	r6, [pc, #-1389]!	; 8018e99 <index_js+0x2e1>
 8019402:	 	strbvs	r0, [lr, #-116]!	; 0xffffff8c

08019404 <ArtNetParamsConst::NET>:
 8019404:	0074656e 	rsbseq	r6, r4, lr, ror #10

08019408 <ArtNetParamsConst::SUBNET>:
 8019408:	6e627573 	mcrvs	5, 3, r7, cr2, cr3, {3}
 801940c:	 	andvc	r7, r0, r5, ror #8

0801940f <ArtNetParamsConst::PROTOCOL>:
 801940f:	746f7270 	strbtvc	r7, [pc], #-624	; 8019417 <ArtNetParamsConst::PROTOCOL+0x8>
 8019413:	6c6f636f 	stclvs	3, cr6, [pc], #-444	; 801925c <artnet::NODE_ID+0xaa>
	...

08019418 <ArtNetParamsConst::FILE_NAME>:
 8019418:	6e747261 	cdpvs	2, 7, cr7, cr4, cr1, {3}
 801941c:	742e7465 	strtvc	r7, [lr], #-1125	; 0xfffffb9b
 8019420:	 			; <UNDEFINED> instruction: 0xff007478

08019423 <ArtNetConst::OEM_ID>:
 8019423:	 	ldrsheq	pc, [r0], #-255	; 0xffffff01	; <UNPREDICTABLE>

08019425 <ArtNetConst::ESTA_ID>:
 8019425:	 	strcc	r0, [r1, #-80]	; 0xffffffb0

08019427 <ArtNetConst::VERSION>:
 8019427:	33323501 	teqcc	r2, #4194304	; 0x400000
 801942b:	35322e39 	ldrcc	r2, [r2, #-3641]!	; 0xfffff1c7
 801942f:	2e302e35 	mrccs	14, 1, r2, cr0, cr5, {1}
 8019433:	2e250030 	mcrcs	0, 1, r0, cr5, cr0, {1}
 8019437:	20733834 	rsbscs	r3, r3, r4, lsr r8
 801943b:	30007325 	andcc	r7, r0, r5, lsr #6
 801943f:	6f4e202e 	svcvs	0x004e202e
 8019443:	73616320 	cmnvc	r1, #32, 6	; 0x80000000
 8019447:	6d207365 	stcvs	3, cr7, [r0, #-404]!	; 0xfffffe6c
 801944b:	68637461 	stmdavs	r3!, {r0, r5, r6, sl, ip, sp, lr}^
 801944f:	202c6465 	eorcs	r6, ip, r5, ror #8
 8019453:	73696874 	cmnvc	r9, #116, 16	; 0x740000
 8019457:	6f687320 	svcvs	0x00687320
 801945b:	6e646c75 	mcrvs	12, 3, r6, cr4, cr5, {3}
 801945f:	68207427 	stmdavs	r0!, {r0, r1, r2, r5, sl, ip, sp, lr}
 8019463:	65707061 	ldrbvs	r7, [r0, #-97]!	; 0xffffff9f
 8019467:	000a216e 	andeq	r2, sl, lr, ror #2
 801946b:	64697242 	strbtvs	r7, [r9], #-578	; 0xfffffdbe
 801946f:	000a6567 	andeq	r6, sl, r7, ror #10
 8019473:	72694620 	rsbvc	r4, r9, #32, 12	; 0x2000000
 8019477:	7261776d 	rsbvc	r7, r1, #28573696	; 0x1b40000
 801947b:	203a2065 	eorscs	r2, sl, r5, rrx
 801947f:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8019483:	20000a64 	andcs	r0, r0, r4, ror #20
 8019487:	20444943 	subcs	r4, r4, r3, asr #18
 801948b:	20202020 	eorcs	r2, r0, r0, lsr #32
 801948f:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8019493:	20000a73 	andcs	r0, r0, r3, ror sl
 8019497:	726f5020 	rsbvc	r5, pc, #32
 801949b:	32252074 	eorcc	r2, r5, #116	; 0x74
 801949f:	6e552064 	cdpvs	0, 5, cr2, cr5, cr4, {3}
 80194a3:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
 80194a7:	25206573 	strcs	r6, [r0, #-1395]!	; 0xfffffa8d
 80194ab:	2064332d 	rsbcs	r3, r4, sp, lsr #6
 80194af:	5d73255b 	cfldr64pl	mvdx2, [r3, #-364]!	; 0xfffffe94
 80194b3:	2020000a 	eorcs	r0, r0, sl
 80194b7:	74726f50 	ldrbtvc	r6, [r2], #-3920	; 0xfffff0b0
 80194bb:	64322520 	ldrtvs	r2, [r2], #-1312	; 0xfffffae0
 80194bf:	696e5520 	stmdbvs	lr!, {r5, r8, sl, ip, lr}^
 80194c3:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 80194c7:	2d252065 	stccs	0, cr2, [r5, #-404]!	; 0xfffffe6c
 80194cb:	5b206433 	blpl	883259f <__exidx_end+0x817d9b>
 80194cf:	0a5d6425 	beq	977256b <__exidx_end+0x1757d67>
 80194d3:	79532000 	ldmdbvc	r3, {sp}^
 80194d7:	7268636e 	rsbvc	r6, r8, #-1207959551	; 0xb8000001
 80194db:	7a696e6f 	bvc	9a74e9f <__exidx_end+0x1a5a69b>
 80194df:	73692065 	cmnvc	r9, #101	; 0x65
 80194e3:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 80194e7:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
 80194eb:	 	tstmi	r0, r4, ror #20

080194ee <E117Const::ACN_PACKET_IDENTIFIER>:
 80194ee:	2d435341 	stclcs	3, cr5, [r3, #-260]	; 0xfffffefc
 80194f2:	312e3145 			; <UNDEFINED> instruction: 0x312e3145
 80194f6:	00000037 	andeq	r0, r0, r7, lsr r0

080194fa <E131BridgeConst::VERSION>:
 80194fa:	33321801 	teqcc	r2, #65536	; 0x10000
 80194fe:	35322e39 	ldrcc	r2, [r2, #-3641]!	; 0xfffff1c7
 8019502:	35322e35 	ldrcc	r2, [r2, #-3637]!	; 0xfffff1cb
 8019506:	33312e30 	teqcc	r1, #48, 28	; 0x300
 801950a:	33320033 	teqcc	r2, #51	; 0x33
 801950e:	35322e39 	ldrcc	r2, [r2, #-3641]!	; 0xfffff1c7
 8019512:	35322e35 	ldrcc	r2, [r2, #-3637]!	; 0xfffff1cb
 8019516:	33312e30 	teqcc	r1, #48, 28	; 0x300
 801951a:	4c4c0034 	mcrrmi	0, 3, r0, ip, cr4
 801951e:	44205052 	strtmi	r5, [r0], #-82	; 0xffffffae
 8019522:	63697665 	cmnvs	r9, #105906176	; 0x6500000
 8019526:	6f632065 	svcvs	0x00632065
 801952a:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 801952e:	74617275 	strbtvc	r7, [r1], #-629	; 0xfffffd8b
 8019532:	0a6e6f69 	beq	9bb52de <__exidx_end+0x1b9aada>
 8019536:	6f502000 	svcvs	0x00502000
 801953a:	55207472 	strpl	r7, [r0, #-1138]!	; 0xfffffb8e
 801953e:	20205044 	eorcs	r5, r0, r4, asr #32
 8019542:	20202020 	eorcs	r2, r0, r0, lsr #32
 8019546:	20202020 	eorcs	r2, r0, r0, lsr #32
 801954a:	20202020 	eorcs	r2, r0, r0, lsr #32
 801954e:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8019552:	20000a64 	andcs	r0, r0, r4, ror #20
 8019556:	746c754d 	strbtvc	r7, [ip], #-1357	; 0xfffffab3
 801955a:	73616369 	cmnvc	r1, #-1543503871	; 0xa4000001
 801955e:	6f6a2074 	svcvs	0x006a2074
 8019562:	52206e69 	eorpl	r6, r0, #1680	; 0x690
 8019566:	65757165 	ldrbvs	r7, [r5, #-357]!	; 0xfffffe9b
 801956a:	3a207473 	bcc	883673e <__exidx_end+0x81bf3a>
 801956e:	2e642520 	cdpcs	5, 6, cr2, cr4, cr0, {1}
 8019572:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8019576:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 801957a:	4d20000a 	stcmi	0, cr0, [r0, #-40]!	; 0xffffffd8
 801957e:	69746c75 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, sl, fp, sp, lr}^
 8019582:	74736163 	ldrbtvc	r6, [r3], #-355	; 0xfffffe9d
 8019586:	73655220 	cmnvc	r5, #32, 4
 801958a:	736e6f70 	cmnvc	lr, #112, 30	; 0x1c0
 801958e:	20202065 	eorcs	r2, r0, r5, rrx
 8019592:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8019596:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801959a:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 801959e:	0a64252e 	beq	9922a5e <__exidx_end+0x190825a>
	...

080195a4 <vtable for LLRPDevice>:
	...
 80195ac:	0800daf1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r9, fp, ip, lr, pc}
 80195b0:	0800dafb 	stmdaeq	r0, {r0, r1, r3, r4, r5, r6, r7, r9, fp, ip, lr, pc}
 80195b4:	0800daf3 	stmdaeq	r0, {r0, r1, r4, r5, r6, r7, r9, fp, ip, lr, pc}
 80195b8:	0800daf5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r9, fp, ip, lr, pc}
 80195bc:	0800daf7 	stmdaeq	r0, {r0, r1, r2, r4, r5, r6, r7, r9, fp, ip, lr, pc}
 80195c0:	4e4d4452 	mcrmi	4, 2, r4, cr13, cr2, {2}
 80195c4:	000a7465 	andeq	r7, sl, r5, ror #8
 80195c8:	44494320 	strbmi	r4, [r9], #-800	; 0xfffffce0
 80195cc:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 80195d0:	52000a73 	andpl	r0, r0, #471040	; 0x73000
 80195d4:	52204d44 	eorpl	r4, r0, #68, 26	; 0x1100
 80195d8:	6f707365 	svcvs	0x00707365
 80195dc:	7265646e 	rsbvc	r6, r5, #1845493760	; 0x6e000000
 80195e0:	6e6f6320 	cdpvs	3, 6, cr6, cr15, cr0, {1}
 80195e4:	75676966 	strbvc	r6, [r7, #-2406]!	; 0xfffff69a
 80195e8:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
 80195ec:	000a6e6f 	andeq	r6, sl, pc, ror #28
 80195f0:	6f725020 	svcvs	0x00725020
 80195f4:	6f636f74 	svcvs	0x00636f74
 80195f8:	6556206c 	ldrbvs	r2, [r6, #-108]	; 0xffffff94
 80195fc:	6f697372 	svcvs	0x00697372
 8019600:	6425206e 	strtvs	r2, [r5], #-110	; 0xffffff92
 8019604:	0a64252e 	beq	9922ac4 <__exidx_end+0x19082c0>
 8019608:	4d442000 	stclmi	0, cr2, [r4, #-0]
 801960c:	64412058 	strbvs	r2, [r1], #-88	; 0xffffffa8
 8019610:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
 8019614:	20202073 	eorcs	r2, r0, r3, ror r0
 8019618:	3a202020 	bcc	88216a0 <__exidx_end+0x806e9c>
 801961c:	0a642520 	beq	9922aa4 <__exidx_end+0x19082a0>
 8019620:	4d442000 	stclmi	0, cr2, [r4, #-0]
 8019624:	6f462058 	svcvs	0x00462058
 8019628:	7270746f 	rsbsvc	r7, r0, #1862270976	; 0x6f000000
 801962c:	20746e69 	rsbscs	r6, r4, r9, ror #28
 8019630:	3a202020 	bcc	88216b8 <__exidx_end+0x806eb4>
 8019634:	0a642520 	beq	9922abc <__exidx_end+0x19082b8>
 8019638:	65502000 	ldrbvs	r2, [r0, #-0]
 801963c:	6e6f7372 	mcrvs	3, 3, r7, cr15, cr2, {3}
 8019640:	74696c61 	strbtvc	r6, [r9], #-3169	; 0xfffff39f
 8019644:	64252079 	strtvs	r2, [r5], #-121	; 0xffffff87
 8019648:	20666f20 	rsbcs	r6, r6, r0, lsr #30
 801964c:	5b206425 	blpl	88326e8 <__exidx_end+0x817ee4>
 8019650:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
 8019654:	20000a5d 	andcs	r0, r0, sp, asr sl
 8019658:	20627553 	rsbcs	r7, r2, r3, asr r5
 801965c:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
 8019660:	20736563 	rsbscs	r6, r3, r3, ror #10
 8019664:	20202020 	eorcs	r2, r0, r0, lsr #32
 8019668:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 801966c:	20000a64 	andcs	r0, r0, r4, ror #20
 8019670:	736e6553 	cmnvc	lr, #348127232	; 0x14c00000
 8019674:	2073726f 	rsbscs	r7, r3, pc, ror #4
 8019678:	20202020 	eorcs	r2, r0, r0, lsr #32
 801967c:	20202020 	eorcs	r2, r0, r0, lsr #32
 8019680:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8019684:	 	strmi	r0, [r0, -r4, ror #20]

08019687 <DEVICE_LABEL>:
 8019687:	32334447 	eorscc	r4, r3, #1191182336	; 0x47000000
 801968b:	37303246 	ldrcc	r3, [r0, -r6, asr #4]!
 801968f:	56455f43 	strbpl	r5, [r5], -r3, asr #30
 8019693:	52204c41 	eorpl	r4, r0, #16640	; 0x4100
 8019697:	52204d44 	eorpl	r4, r0, #68, 26	; 0x1100
 801969b:	6f707365 	svcvs	0x00707365
 801969f:	7265646e 	rsbvc	r6, r5, #1845493760	; 0x6e000000
	...

080196a4 <vtable for RDMDeviceResponder>:
	...
 80196ac:	0800dfe5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}
 80196b0:	0800e005 	stmdaeq	r0, {r0, r2, sp, lr, pc}
 80196b4:	0800dfdf 	stmdaeq	r0, {r0, r1, r2, r3, r4, r6, r7, r8, r9, sl, fp, ip, lr, pc}
 80196b8:	0800dfe1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}

080196bc <UID_ALL>:
 80196bc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 80196c0:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>

080196c4 <RDMHandler::PID_DEFINITIONS>:
 80196c4:	00000060 	andeq	r0, r0, r0, rrx
 80196c8:	0800e4ed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, sl, sp, lr, pc}
	...
 80196d8:	01010000 	mrseq	r0, (UNDEF: 1)
 80196dc:	00000080 	andeq	r0, r0, r0, lsl #1
 80196e0:	0800e5d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, sl, sp, lr, pc}
	...
 80196f0:	01010100 	mrseq	r0, (UNDEF: 17)
 80196f4:	00000081 	andeq	r0, r0, r1, lsl #1
 80196f8:	0800e5f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, sl, sp, lr, pc}
	...
 8019708:	01010100 	mrseq	r0, (UNDEF: 17)
 801970c:	00000082 	andeq	r0, r0, r2, lsl #1
 8019710:	0800e611 	stmdaeq	r0, {r0, r4, r9, sl, sp, lr, pc}
 8019714:	00000000 	andeq	r0, r0, r0
 8019718:	0800e761 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, sp, lr, pc}
 801971c:	00000000 	andeq	r0, r0, r0
 8019720:	01010100 	mrseq	r0, (UNDEF: 17)
 8019724:	00000090 	muleq	r0, r0, r0
 8019728:	0800e555 	stmdaeq	r0, {r0, r2, r4, r6, r8, sl, sp, lr, pc}
 801972c:	00000000 	andeq	r0, r0, r0
 8019730:	0800e72d 	stmdaeq	r0, {r0, r2, r3, r5, r8, r9, sl, sp, lr, pc}
 8019734:	00000000 	andeq	r0, r0, r0
 8019738:	01010100 	mrseq	r0, (UNDEF: 17)
 801973c:	00001000 	andeq	r1, r0, r0
 8019740:	0800e64d 	stmdaeq	r0, {r0, r2, r3, r6, r9, sl, sp, lr, pc}
 8019744:	00000000 	andeq	r0, r0, r0
 8019748:	0800e6b1 	stmdaeq	r0, {r0, r4, r5, r7, r9, sl, sp, lr, pc}
 801974c:	00000000 	andeq	r0, r0, r0
 8019750:	01010000 	mrseq	r0, (UNDEF: 1)
 8019754:	00001001 	andeq	r1, r0, r1
	...
 8019760:	0800e669 	stmdaeq	r0, {r0, r3, r5, r6, r9, sl, sp, lr, pc}
 8019764:	00000000 	andeq	r0, r0, r0
 8019768:	01010100 	mrseq	r0, (UNDEF: 17)
 801976c:	00000700 	andeq	r0, r0, r0, lsl #14
 8019770:	0800ea45 	stmdaeq	r0, {r0, r2, r6, r9, fp, sp, lr, pc}
	...
 8019780:	01000000 	mrseq	r0, (UNDEF: 0)
 8019784:	00000701 	andeq	r0, r0, r1, lsl #14
 8019788:	0800ea6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, fp, sp, lr, pc}
	...
 8019798:	01000004 	tsteq	r0, r4
 801979c:	00000702 	andeq	r0, r0, r2, lsl #14
 80197a0:	0800eab9 	stmdaeq	r0, {r0, r3, r4, r5, r7, r9, fp, sp, lr, pc}
	...
 80197b0:	01000004 	tsteq	r0, r4
 80197b4:	00000703 	andeq	r0, r0, r3, lsl #14
 80197b8:	0800eae9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r9, fp, sp, lr, pc}
 80197bc:	00000000 	andeq	r0, r0, r0
 80197c0:	0800eb15 	stmdaeq	r0, {r0, r2, r4, r8, r9, fp, sp, lr, pc}
 80197c4:	00000000 	andeq	r0, r0, r0
 80197c8:	01000004 	tsteq	r0, r4
 80197cc:	00000704 	andeq	r0, r0, r4, lsl #14
 80197d0:	0800eb81 	stmdaeq	r0, {r0, r7, r8, r9, fp, sp, lr, pc}
 80197d4:	00000000 	andeq	r0, r0, r0
 80197d8:	0800ebb1 	stmdaeq	r0, {r0, r4, r5, r7, r8, r9, fp, sp, lr, pc}
 80197dc:	00000000 	andeq	r0, r0, r0
 80197e0:	01000004 	tsteq	r0, r4
 80197e4:	00000705 	andeq	r0, r0, r5, lsl #14
 80197e8:	0800ec25 	stmdaeq	r0, {r0, r2, r5, sl, fp, sp, lr, pc}
	...
 80197f8:	01000004 	tsteq	r0, r4
 80197fc:	00000707 	andeq	r0, r0, r7, lsl #14
	...
 8019808:	0800ebf9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, r9, fp, sp, lr, pc}
 801980c:	00000000 	andeq	r0, r0, r0
 8019810:	01000004 	tsteq	r0, r4
 8019814:	00000706 	andeq	r0, r0, r6, lsl #14
 8019818:	0800ec6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, sl, fp, sp, lr, pc}
 801981c:	00000000 	andeq	r0, r0, r0
 8019820:	0800ecb1 	stmdaeq	r0, {r0, r4, r5, r7, sl, fp, sp, lr, pc}
 8019824:	00000000 	andeq	r0, r0, r0
 8019828:	01000004 	tsteq	r0, r4
 801982c:	00000709 	andeq	r0, r0, r9, lsl #14
	...
 8019838:	0800ecfd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, sl, fp, sp, lr, pc}
 801983c:	00000000 	andeq	r0, r0, r0
 8019840:	01000004 	tsteq	r0, r4
 8019844:	0000070b 	andeq	r0, r0, fp, lsl #14
 8019848:	0800eb5d 	stmdaeq	r0, {r0, r2, r3, r4, r6, r8, r9, fp, sp, lr, pc}
	...
 8019858:	01000001 	tsteq	r0, r1
 801985c:	0000070a 	andeq	r0, r0, sl, lsl #14
 8019860:	0800ed25 	stmdaeq	r0, {r0, r2, r5, r8, sl, fp, sp, lr, pc}
 8019864:	00000000 	andeq	r0, r0, r0
 8019868:	0800ed5d 	stmdaeq	r0, {r0, r2, r3, r4, r6, r8, sl, fp, sp, lr, pc}
 801986c:	00000000 	andeq	r0, r0, r0
 8019870:	01000004 	tsteq	r0, r4
 8019874:	0000070c 	andeq	r0, r0, ip, lsl #14
 8019878:	0800ed65 	stmdaeq	r0, {r0, r2, r5, r6, r8, sl, fp, sp, lr, pc}
 801987c:	00000000 	andeq	r0, r0, r0
 8019880:	0800ed95 	stmdaeq	r0, {r0, r2, r4, r7, r8, sl, fp, sp, lr, pc}
 8019884:	00000000 	andeq	r0, r0, r0
 8019888:	01000000 	mrseq	r0, (UNDEF: 0)
 801988c:	0000070d 	andeq	r0, r0, sp, lsl #14
 8019890:	0800edc9 	stmdaeq	r0, {r0, r3, r6, r7, r8, sl, fp, sp, lr, pc}
 8019894:	00000000 	andeq	r0, r0, r0
 8019898:	0800edf9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, sp, lr, pc}
 801989c:	00000000 	andeq	r0, r0, r0
 80198a0:	01000000 	mrseq	r0, (UNDEF: 0)
 80198a4:	204d4452 	subcs	r4, sp, r2, asr r4
 80198a8:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
 80198ac:	63206563 			; <UNDEFINED> instruction: 0x63206563
 80198b0:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 80198b4:	61727567 	cmnvs	r2, r7, ror #10
 80198b8:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 80198bc:	4d20000a 	stcmi	0, cr0, [r0, #-40]!	; 0xffffffd8
 80198c0:	66756e61 	ldrbtvs	r6, [r5], -r1, ror #28
 80198c4:	75746361 	ldrbvc	r6, [r4, #-865]!	; 0xfffffc9f
 80198c8:	20726572 	rsbscs	r6, r2, r2, ror r5
 80198cc:	656d614e 	strbvs	r6, [sp, #-334]!	; 0xfffffeb2
 80198d0:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 80198d4:	0a732a2e 	beq	9ce4194 <__exidx_end+0x1cc9990>
 80198d8:	614d2000 	mrsvs	r2, (UNDEF: 77)
 80198dc:	6166756e 	cmnvs	r6, lr, ror #10
 80198e0:	72757463 	rsbsvc	r7, r5, #1660944384	; 0x63000000
 80198e4:	49207265 	stmdbmi	r0!, {r0, r2, r5, r6, r9, ip, sp, lr}
 80198e8:	20202044 	eorcs	r2, r0, r4, asr #32
 80198ec:	2e25203a 	mcrcs	0, 1, r2, cr5, cr10, {1}
 80198f0:	2e255832 	mcrcs	8, 1, r5, cr5, cr2, {1}
 80198f4:	000a5832 	andeq	r5, sl, r2, lsr r8
 80198f8:	72655320 	rsbvc	r5, r5, #32, 6	; 0x80000000
 80198fc:	206c6169 	rsbcs	r6, ip, r9, ror #2
 8019900:	626d754e 	rsbvs	r7, sp, #327155712	; 0x13800000
 8019904:	20207265 	eorcs	r7, r0, r5, ror #4
 8019908:	3a202020 	bcc	8821990 <__exidx_end+0x80718c>
 801990c:	322e2520 	eorcc	r2, lr, #32, 10	; 0x8000000
 8019910:	322e2558 	eorcc	r2, lr, #88, 10	; 0x16000000
 8019914:	322e2558 	eorcc	r2, lr, #88, 10	; 0x16000000
 8019918:	322e2558 	eorcc	r2, lr, #88, 10	; 0x16000000
 801991c:	20000a58 	andcs	r0, r0, r8, asr sl
 8019920:	746f6f52 	strbtvc	r6, [pc], #-3922	; 8019928 <RDMHandler::PID_DEFINITIONS+0x264>
 8019924:	62616c20 	rsbvs	r6, r1, #32, 24	; 0x2000
 8019928:	20206c65 	eorcs	r6, r0, r5, ror #24
 801992c:	20202020 	eorcs	r2, r0, r0, lsr #32
 8019930:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8019934:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
 8019938:	5020000a 	eorpl	r0, r0, sl
 801993c:	75646f72 	strbvc	r6, [r4, #-3954]!	; 0xfffff08e
 8019940:	43207463 			; <UNDEFINED> instruction: 0x43207463
 8019944:	67657461 	strbvs	r7, [r5, -r1, ror #8]!
 8019948:	2079726f 	rsbscs	r7, r9, pc, ror #4
 801994c:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8019950:	2558322e 	ldrbcs	r3, [r8, #-558]	; 0xfffffdd2
 8019954:	0a58322e 	beq	9626214 <__exidx_end+0x160ba10>
 8019958:	72502000 	subsvc	r2, r0, #0
 801995c:	6375646f 	cmnvs	r5, #1862270976	; 0x6f000000
 8019960:	65442074 	strbvs	r2, [r4, #-116]	; 0xffffff8c
 8019964:	6c696174 	stfvse	f6, [r9], #-464	; 0xfffffe30
 8019968:	20202020 	eorcs	r2, r0, r0, lsr #32
 801996c:	2e25203a 	mcrcs	0, 1, r2, cr5, cr10, {1}
 8019970:	2e255832 	mcrcs	8, 1, r5, cr5, cr2, {1}
 8019974:	000a5832 	andeq	r5, sl, r2, lsr r8

08019978 <DEVICE_LABEL>:
 8019978:	32334447 	eorscc	r4, r3, #1191182336	; 0x47000000
 801997c:	37303246 	ldrcc	r3, [r0, -r6, asr #4]!
 8019980:	56455f43 	strbpl	r5, [r5], -r3, asr #30
 8019984:	52204c41 	eorpl	r4, r0, #16640	; 0x4100
 8019988:	44204d44 	strtmi	r4, [r0], #-3396	; 0xfffff2bc
 801998c:	63697665 	cmnvs	r9, #105906176	; 0x6500000
 8019990:	 	subseq	r0, r0, r5, rrx

08019992 <RDMConst::MANUFACTURER_ID>:
 8019992:	 	strbtvc	r0, [r8], #-80	; 0xffffffb0

08019994 <RDMConst::MANUFACTURER_NAME>:
 8019994:	70747468 	rsbsvc	r7, r4, r8, ror #8
 8019998:	772f2f3a 			; <UNDEFINED> instruction: 0x772f2f3a
 801999c:	6f2e7777 	svcvs	0x002e7777
 80199a0:	676e6172 			; <UNDEFINED> instruction: 0x676e6172
 80199a4:	2d697065 	stclcs	0, cr7, [r9, #-404]!	; 0xfffffe6c
 80199a8:	2e786d64 	cdpcs	13, 7, cr6, cr8, cr4, {3}
 80199ac:	0067726f 	rsbeq	r7, r7, pc, ror #4
 80199b0:	78383025 	ldmdavc	r8!, {r0, r2, r5, ip, sp}
 80199b4:	3430252d 	ldrtcc	r2, [r0], #-1325	; 0xfffffad3
 80199b8:	30252d78 	eorcc	r2, r5, r8, ror sp
 80199bc:	252d7834 	strcs	r7, [sp, #-2100]!	; 0xfffff7cc
 80199c0:	25783230 	ldrbcs	r3, [r8, #-560]!	; 0xfffffdd0
 80199c4:	2d783230 	lfmcs	f3, 2, [r8, #-192]!	; 0xffffff40
 80199c8:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 80199cc:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 80199d0:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 80199d4:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 80199d8:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 80199dc:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 80199e0:	78695000 	stmdavc	r9!, {ip, lr}^
 80199e4:	44206c65 	strtmi	r6, [r0], #-3173	; 0xfffff39b
 80199e8:	7020584d 	eorvc	r5, r0, sp, asr #16
 80199ec:	6d617261 	sfmvs	f7, 2, [r1, #-388]!	; 0xfffffe7c
 80199f0:	72657465 	rsbvc	r7, r5, #1694498816	; 0x65000000
 80199f4:	20000a73 	andcs	r0, r0, r3, ror sl
 80199f8:	7074754f 	rsbsvc	r7, r4, pc, asr #10
 80199fc:	20737475 	rsbscs	r7, r3, r5, ror r4
 8019a00:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8019a04:	4720000a 	strmi	r0, [r0, -sl]!
 8019a08:	70756f72 	rsbsvc	r6, r5, r2, ror pc
 8019a0c:	20676e69 	rsbcs	r6, r7, r9, ror #28
 8019a10:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 8019a14:	203a2074 	eorscs	r2, sl, r4, ror r0
 8019a18:	5b206425 	blpl	8832ab4 <__exidx_end+0x8182b0>
 8019a1c:	756f7247 	strbvc	r7, [pc, #-583]!	; 80197dd <RDMHandler::PID_DEFINITIONS+0x119>
 8019a20:	3a207370 	bcc	88367e8 <__exidx_end+0x81bfe4>
 8019a24:	5d642520 	cfstr64pl	mvdx2, [r4, #-128]!	; 0xffffff80
 8019a28:	0000000a 	andeq	r0, r0, sl

08019a2c <vtable for WS28xxDmxMulti>:
	...
 8019a34:	0800f035 	stmdaeq	r0, {r0, r2, r4, r5, ip, sp, lr, pc}
 8019a38:	0800f055 	stmdaeq	r0, {r0, r2, r4, r6, ip, sp, lr, pc}
 8019a3c:	0800f013 	stmdaeq	r0, {r0, r1, r4, ip, sp, lr, pc}
 8019a40:	0800f1c5 	stmdaeq	r0, {r0, r2, r6, r7, r8, ip, sp, lr, pc}
 8019a44:	0800f08f 	stmdaeq	r0, {r0, r1, r2, r3, r7, ip, sp, lr, pc}
 8019a48:	0800f067 	stmdaeq	r0, {r0, r1, r2, r5, r6, ip, sp, lr, pc}
 8019a4c:	0800f191 	stmdaeq	r0, {r0, r4, r7, r8, ip, sp, lr, pc}
 8019a50:	0800f005 	stmdaeq	r0, {r0, r2, ip, sp, lr, pc}
 8019a54:	0800f009 	stmdaeq	r0, {r0, r3, ip, sp, lr, pc}
 8019a58:	0800f00f 	stmdaeq	r0, {r0, r1, r2, r3, ip, sp, lr, pc}
 8019a5c:	0801519b 	stmdaeq	r1, {r0, r1, r3, r4, r7, r8, ip, lr}
 8019a60:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 8019a64:	2a2e253a 	bcs	8ba2f54 <__exidx_end+0xb88750>
 8019a68:	23002c66 	movwcs	r2, #3174	; 0xc66
 8019a6c:	253d7325 	ldrcs	r7, [sp, #-805]!	; 0xfffffcdb
 8019a70:	0a662a2e 	beq	99a4330 <__exidx_end+0x1989b2c>
 8019a74:	65764f00 	ldrbvs	r4, [r6, #-3840]!	; 0xfffff100
 8019a78:	69727772 	ldmdbvs	r2!, {r1, r4, r5, r6, r8, r9, sl, ip, sp, lr}^
 8019a7c:	64206574 	strtvs	r6, [r0], #-1396	; 0xfffffa8c
 8019a80:	73617461 	cmnvc	r1, #1627389952	; 0x61000000
 8019a84:	74656568 	strbtvc	r6, [r5], #-1384	; 0xfffffa98
 8019a88:	65764f00 	ldrbvs	r4, [r6, #-3840]!	; 0xfffff100
 8019a8c:	69727772 	ldmdbvs	r2!, {r1, r4, r5, r6, r8, r9, sl, ip, sp, lr}^
 8019a90:	74206574 	strtvc	r6, [r0], #-1396	; 0xfffffa8c
 8019a94:	6e696d69 	cdpvs	13, 6, cr6, cr9, cr9, {3}
 8019a98:	75282067 	strvc	r2, [r8, #-103]!	; 0xffffff99
 8019a9c:	47002973 	smlsdxmi	r0, r3, r9, r2
 8019aa0:	70756f72 	rsbsvc	r6, r5, r2, ror pc
 8019aa4:	00676e69 	rsbeq	r6, r7, r9, ror #28
 8019aa8:	636f6c43 	cmnvs	pc, #17152	; 0x4300
 8019aac:	6162206b 	cmnvs	r2, fp, rrx
 8019ab0:	20646573 	rsbcs	r6, r4, r3, ror r5
 8019ab4:	70696863 	rsbvc	r6, r9, r3, ror #16
 8019ab8:	50410073 	subpl	r0, r1, r3, ror r0
 8019abc:	32303141 	eorscc	r3, r0, #1073741840	; 0x40000010
 8019ac0:	394b532f 	stmdbcc	fp, {r0, r1, r2, r3, r5, r8, r9, ip, lr}^
 8019ac4:	00323238 	eorseq	r3, r2, r8, lsr r2
 8019ac8:	74736554 	ldrbtvc	r6, [r3], #-1364	; 0xfffffaac
 8019acc:	74617020 	strbtvc	r7, [r1], #-32	; 0xffffffe0
 8019ad0:	6e726574 	mrcvs	5, 3, r6, cr2, cr4, {3}
 8019ad4:	6b6e5500 	blvs	9baeedc <__exidx_end+0x1b946d8>
 8019ad8:	6e776f6e 	cdpvs	15, 7, cr6, cr7, cr14, {3}
 8019adc:	646e5500 	strbtvs	r5, [lr], #-1280	; 0xfffffb00
 8019ae0:	6e696665 	cdpvs	6, 6, cr6, cr9, cr5, {3}
 8019ae4:	 	andpl	r6, r0, #1694498816	; 0x65000000

08019ae7 <PixelType::MAPS>:
 8019ae7:	00424752 	subeq	r4, r2, r2, asr r7
 8019aeb:	00474252 	subeq	r4, r7, r2, asr r2
 8019aef:	00425247 	subeq	r5, r2, r7, asr #4
 8019af3:	00524247 	subseq	r4, r2, r7, asr #4
 8019af7:	00475242 	subeq	r5, r7, r2, asr #4
 8019afb:	00524742 	subseq	r4, r2, r2, asr #14

08019aff <PixelType::TYPES>:
 8019aff:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 8019b03:	00003130 	andeq	r3, r0, r0, lsr r1
 8019b07:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 8019b0b:	00003131 	andeq	r3, r0, r1, lsr r1
 8019b0f:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 8019b13:	00003231 	andeq	r3, r0, r1, lsr r2
 8019b17:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 8019b1b:	00423231 	subeq	r3, r2, r1, lsr r2
 8019b1f:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 8019b23:	00003331 	andeq	r3, r0, r1, lsr r3
 8019b27:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 8019b2b:	00003531 	andeq	r3, r0, r1, lsr r5
 8019b2f:	38364b53 	ldmdacc	r6!, {r0, r1, r4, r6, r8, r9, fp, lr}
 8019b33:	00003231 	andeq	r3, r0, r1, lsr r2
 8019b37:	38364b53 	ldmdacc	r6!, {r0, r1, r4, r6, r8, r9, fp, lr}
 8019b3b:	00573231 	subseq	r3, r7, r1, lsr r2
 8019b3f:	31534355 	cmpcc	r3, r5, asr r3
 8019b43:	00333039 	eorseq	r3, r3, r9, lsr r0
 8019b47:	32534355 	subscc	r4, r3, #1409286145	; 0x54000001
 8019b4b:	00333039 	eorseq	r3, r3, r9, lsr r0
 8019b4f:	38385343 	ldmdacc	r8!, {r0, r1, r6, r8, r9, ip, lr}
 8019b53:	00003231 	andeq	r3, r0, r1, lsr r2
 8019b57:	31415041 	cmpcc	r1, r1, asr #32
 8019b5b:	00003230 	andeq	r3, r0, r0, lsr r2
 8019b5f:	38394b53 	ldmdacc	r9!, {r0, r1, r4, r6, r8, r9, fp, lr}
 8019b63:	00003232 	andeq	r3, r0, r2, lsr r2
 8019b67:	31383950 	teqcc	r8, r0, asr r9
 8019b6b:	00000033 	andeq	r0, r0, r3, lsr r0
 8019b6f:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
 8019b73:	20000a6c 	andcs	r0, r0, ip, ror #20
 8019b77:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
 8019b7b:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8019b7f:	5b207325 	blpl	883681b <__exidx_end+0x81c017>
 8019b83:	205d6425 	subscs	r6, sp, r5, lsr #8
 8019b87:	7325202d 			; <UNDEFINED> instruction: 0x7325202d
 8019b8b:	64255b20 	strtvs	r5, [r5], #-2848	; 0xfffff4e0
 8019b8f:	20000a5d 	andcs	r0, r0, sp, asr sl
 8019b93:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
 8019b97:	203a2074 	eorscs	r2, sl, r4, ror r0
 8019b9b:	000a6425 	andeq	r6, sl, r5, lsr #8
	...

08019ba0 <s_GPIO_PINs>:
 8019ba0:	000000c0 	andeq	r0, r0, r0, asr #1

08019ba4 <s_aStorSize>:
 8019ba4:	00000060 	andeq	r0, r0, r0, rrx
 8019ba8:	00000090 	muleq	r0, r0, r0
 8019bac:	00000020 	andeq	r0, r0, r0, lsr #32
 8019bb0:	00000040 	andeq	r0, r0, r0, asr #32
 8019bb4:	00000060 	andeq	r0, r0, r0, rrx
 8019bb8:	00000040 	andeq	r0, r0, r0, asr #32
 8019bbc:	00000020 	andeq	r0, r0, r0, lsr #32
 8019bc0:	00000020 	andeq	r0, r0, r0, lsr #32
 8019bc4:	000001e0 	andeq	r0, r0, r0, ror #3
 8019bc8:	00000040 	andeq	r0, r0, r0, asr #32
 8019bcc:	00000020 	andeq	r0, r0, r0, lsr #32
 8019bd0:	00000060 	andeq	r0, r0, r0, rrx
 8019bd4:	00000030 	andeq	r0, r0, r0, lsr r0
 8019bd8:	00000020 	andeq	r0, r0, r0, lsr #32
 8019bdc:	000003b0 			; <UNDEFINED> instruction: 0x000003b0
 8019be0:	00000030 	andeq	r0, r0, r0, lsr r0
 8019be4:	00000040 	andeq	r0, r0, r0, asr #32
 8019be8:	00000020 	andeq	r0, r0, r0, lsr #32
 8019bec:	00000060 	andeq	r0, r0, r0, rrx
 8019bf0:	00000020 	andeq	r0, r0, r0, lsr #32
 8019bf4:	00000400 	andeq	r0, r0, r0, lsl #8
 8019bf8:	00000020 	andeq	r0, r0, r0, lsr #32
 8019bfc:	00000020 	andeq	r0, r0, r0, lsr #32
 8019c00:	00000040 	andeq	r0, r0, r0, asr #32
 8019c04:	00000060 	andeq	r0, r0, r0, rrx
 8019c08:	00000020 	andeq	r0, r0, r0, lsr #32
 8019c0c:	00000020 	andeq	r0, r0, r0, lsr #32
 8019c10:	00000020 	andeq	r0, r0, r0, lsr #32

08019c14 <vtable for StoreArtNet>:
	...
 8019c1c:	08010bbd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r7, r8, r9, fp}
 8019c20:	08010d85 	stmdaeq	r1, {r0, r2, r7, r8, sl, fp}
 8019c24:	08010bc5 	stmdaeq	r1, {r0, r2, r6, r7, r8, r9, fp}
 8019c28:	08010d99 	stmdaeq	r1, {r0, r3, r4, r7, r8, sl, fp}
 8019c2c:	08010be9 	stmdaeq	r1, {r0, r3, r5, r6, r7, r8, r9, fp}
 8019c30:	08010c19 	stmdaeq	r1, {r0, r3, r4, sl, fp}
 8019c34:	08010c45 	stmdaeq	r1, {r0, r2, r6, sl, fp}
 8019c38:	08010c81 	stmdaeq	r1, {r0, r7, sl, fp}
 8019c3c:	08010cb1 	stmdaeq	r1, {r0, r4, r5, r7, sl, fp}
 8019c40:	08010ce5 	stmdaeq	r1, {r0, r2, r5, r6, r7, sl, fp}
 8019c44:	08010d35 	stmdaeq	r1, {r0, r2, r4, r5, r8, sl, fp}
 8019c48:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 8019c4c:	00000000 	andeq	r0, r0, r0
 8019c50:	08010bbf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r7, r8, r9, fp}
 8019c54:	08010d91 	stmdaeq	r1, {r0, r4, r7, r8, sl, fp}
 8019c58:	08010c11 	stmdaeq	r1, {r0, r4, sl, fp}
 8019c5c:	08010c3d 	stmdaeq	r1, {r0, r2, r3, r4, r5, sl, fp}
 8019c60:	08010c79 	stmdaeq	r1, {r0, r3, r4, r5, r6, sl, fp}
 8019c64:	08010ca9 	stmdaeq	r1, {r0, r3, r5, r7, sl, fp}
 8019c68:	08010cdd 	stmdaeq	r1, {r0, r2, r3, r4, r6, r7, sl, fp}
 8019c6c:	08010d2d 	stmdaeq	r1, {r0, r2, r3, r5, r8, sl, fp}
 8019c70:	08010d7d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r8, sl, fp}

08019c74 <vtable for StoreDisplayUdf>:
	...
 8019c7c:	08010dd5 	stmdaeq	r1, {r0, r2, r4, r6, r7, r8, sl, fp}
 8019c80:	08010e1d 	stmdaeq	r1, {r0, r2, r3, r4, r9, sl, fp}
 8019c84:	08010df9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, r8, sl, fp}
 8019c88:	08010dd9 	stmdaeq	r1, {r0, r3, r4, r6, r7, r8, sl, fp}

08019c8c <vtable for StoreNetwork>:
	...
 8019c94:	08010e3d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r9, sl, fp}
 8019c98:	08010f21 	stmdaeq	r1, {r0, r5, r8, r9, sl, fp}
 8019c9c:	08010e45 	stmdaeq	r1, {r0, r2, r6, r9, sl, fp}
 8019ca0:	08010f35 	stmdaeq	r1, {r0, r2, r4, r5, r8, r9, sl, fp}
 8019ca4:	08010ec5 	stmdaeq	r1, {r0, r2, r6, r7, r9, sl, fp}
 8019ca8:	08010e99 	stmdaeq	r1, {r0, r3, r4, r7, r9, sl, fp}
 8019cac:	08010e69 	stmdaeq	r1, {r0, r3, r5, r6, r9, sl, fp}
 8019cb0:	08010ef1 	stmdaeq	r1, {r0, r4, r5, r6, r7, r9, sl, fp}
 8019cb4:	08008135 	stmdaeq	r0, {r0, r2, r4, r5, r8, pc}
 8019cb8:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 8019cbc:	00000000 	andeq	r0, r0, r0
 8019cc0:	08010e3f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r9, sl, fp}
 8019cc4:	08010f2d 	stmdaeq	r1, {r0, r2, r3, r5, r8, r9, sl, fp}
 8019cc8:	08010ee9 	stmdaeq	r1, {r0, r3, r5, r6, r7, r9, sl, fp}
 8019ccc:	08010ebd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r7, r9, sl, fp}
 8019cd0:	08010e91 	stmdaeq	r1, {r0, r4, r7, r9, sl, fp}
 8019cd4:	08010f19 	stmdaeq	r1, {r0, r3, r4, r8, r9, sl, fp}
 8019cd8:	0800815d 	stmdaeq	r0, {r0, r2, r3, r4, r6, r8, pc}

08019cdc <vtable for StoreRDMDevice>:
	...
 8019ce4:	08010f69 	stmdaeq	r1, {r0, r3, r5, r6, r8, r9, sl, fp}
 8019ce8:	08010fd9 	stmdaeq	r1, {r0, r3, r4, r6, r7, r8, r9, sl, fp}
 8019cec:	08010f71 	stmdaeq	r1, {r0, r4, r5, r6, r8, r9, sl, fp}
 8019cf0:	08010fed 	stmdaeq	r1, {r0, r2, r3, r5, r6, r7, r8, r9, sl, fp}
 8019cf4:	08010f95 	stmdaeq	r1, {r0, r2, r4, r7, r8, r9, sl, fp}
 8019cf8:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 8019cfc:	00000000 	andeq	r0, r0, r0
 8019d00:	08010f6b 	stmdaeq	r1, {r0, r1, r3, r5, r6, r8, r9, sl, fp}
 8019d04:	08010fe5 	stmdaeq	r1, {r0, r2, r5, r6, r7, r8, r9, sl, fp}
 8019d08:	08010fd1 	stmdaeq	r1, {r0, r4, r6, r7, r8, r9, sl, fp}

08019d0c <vtable for StoreRemoteConfig>:
	...
 8019d14:	08011025 	stmdaeq	r1, {r0, r2, r5, ip}
 8019d18:	0801106d 	stmdaeq	r1, {r0, r2, r3, r5, r6, ip}
 8019d1c:	08011049 	stmdaeq	r1, {r0, r3, r6, ip}
 8019d20:	08011029 	stmdaeq	r1, {r0, r3, r5, ip}

08019d24 <vtable for StoreWS28xxDmx>:
	...
 8019d2c:	0801108d 	stmdaeq	r1, {r0, r2, r3, r7, ip}
 8019d30:	080111fd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r7, r8, ip}
 8019d34:	08011095 	stmdaeq	r1, {r0, r2, r4, r7, ip}
 8019d38:	08011211 	stmdaeq	r1, {r0, r4, r9, ip}
 8019d3c:	080111c9 	stmdaeq	r1, {r0, r3, r6, r7, r8, ip}
 8019d40:	08011195 	stmdaeq	r1, {r0, r2, r4, r7, r8, ip}
 8019d44:	0801115d 	stmdaeq	r1, {r0, r2, r3, r4, r6, r8, ip}
 8019d48:	08011125 	stmdaeq	r1, {r0, r2, r5, r8, ip}
 8019d4c:	080110ed 	stmdaeq	r1, {r0, r2, r3, r5, r6, r7, ip}
 8019d50:	080110b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, ip}
 8019d54:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 8019d58:	00000000 	andeq	r0, r0, r0
 8019d5c:	0801108f 	stmdaeq	r1, {r0, r1, r2, r3, r7, ip}
 8019d60:	08011209 	stmdaeq	r1, {r0, r3, r9, ip}
 8019d64:	080111f5 	stmdaeq	r1, {r0, r2, r4, r5, r6, r7, r8, ip}
 8019d68:	080111c1 	stmdaeq	r1, {r0, r6, r7, r8, ip}
 8019d6c:	0801118d 	stmdaeq	r1, {r0, r2, r3, r7, r8, ip}
 8019d70:	08011155 	stmdaeq	r1, {r0, r2, r4, r6, r8, ip}
 8019d74:	0801111d 	stmdaeq	r1, {r0, r2, r3, r4, r8, ip}
 8019d78:	080110e5 	stmdaeq	r1, {r0, r2, r5, r6, r7, ip}
 8019d7c:	32334447 	eorscc	r4, r3, #1191182336	; 0x47000000
 8019d80:	37303246 	ldrcc	r3, [r0, -r6, asr #4]!
 8019d84:	74654400 	strbtvc	r4, [r5], #-1024	; 0xfffffc00
 8019d88:	65746365 	ldrbvs	r6, [r4, #-869]!	; 0xfffffc9b
 8019d8c:	73252064 			; <UNDEFINED> instruction: 0x73252064
 8019d90:	74697720 	strbtvc	r7, [r9], #-1824	; 0xfffff8e0
 8019d94:	6f742068 	svcvs	0x00742068
 8019d98:	206c6174 	rsbcs	r6, ip, r4, ror r1
 8019d9c:	62206425 	eorvs	r6, r0, #620756992	; 0x25000000
 8019da0:	73657479 	cmnvc	r5, #2030043136	; 0x79000000
 8019da4:	64255b20 	strtvs	r5, [r5], #-2848	; 0xfffff4e0
 8019da8:	5d426b20 	vstrpl	d22, [r2, #-128]	; 0xffffff80
 8019dac:	6374000a 	cmnvs	r4, #10
 8019db0:	65625f70 	strbvs	r5, [r2, #-3952]!	; 0xfffff090
 8019db4:	3a6e6967 	bcc	9bb4358 <__exidx_end+0x1b99b54>
 8019db8:	6f6f7420 	svcvs	0x006f7420
 8019dbc:	6e616d20 	cdpvs	13, 6, cr6, cr1, cr0, {1}
 8019dc0:	6f632079 	svcvs	0x00632079
 8019dc4:	63656e6e 	cmnvs	r5, #1760	; 0x6e0
 8019dc8:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8019dcc:	69620073 	stmdbvs	r2!, {r0, r1, r4, r5, r6}^
 8019dd0:	7500646e 	strvc	r6, [r0, #-1134]	; 0xfffffb92
 8019dd4:	6e69626e 	cdpvs	2, 6, cr6, cr9, cr14, {3}
 8019dd8:	41000a64 	tstmi	r0, r4, ror #20
 8019ddc:	6c205052 	stcvs	0, cr5, [r0], #-328	; 0xfffffeb8
 8019de0:	756b6f6f 	strbvc	r6, [fp, #-3951]!	; 0xfffff091
 8019de4:	61662070 	smcvs	25088	; 0x6200
 8019de8:	64656c69 	strbtvs	r6, [r5], #-3177	; 0xfffff397
 8019dec:	203e2d20 	eorscs	r2, lr, r0, lsr #26
 8019df0:	61666564 	cmnvs	r6, r4, ror #10
 8019df4:	20746c75 	rsbscs	r6, r4, r5, ror ip
 8019df8:	65746167 	ldrbvs	r6, [r4, #-359]!	; 0xfffffe99
 8019dfc:	0a796177 	beq	9e723e0 <__exidx_end+0x1e57bdc>
 8019e00:	50524100 	subspl	r4, r2, r0, lsl #2
 8019e04:	6f6f6c20 	svcvs	0x006f6c20
 8019e08:	2070756b 	rsbscs	r7, r0, fp, ror #10
 8019e0c:	6c696166 	stfvse	f6, [r9], #-408	; 0xfffffe68
 8019e10:	000a6465 	andeq	r6, sl, r5, ror #8

08019e14 <NetworkConst::MSG_NETWORK_INIT>:
 8019e14:	7774654e 	ldrbvc	r6, [r4, -lr, asr #10]!
 8019e18:	206b726f 	rsbcs	r7, fp, pc, ror #4
 8019e1c:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
 8019e20:	34323200 	ldrtcc	r3, [r2], #-512	; 0xfffffe00
 8019e24:	302e302e 	eorcc	r3, lr, lr, lsr #32
 8019e28:	3135322e 	teqcc	r5, lr, lsr #4
 8019e2c:	63745f00 	cmnvs	r4, #0, 30
 8019e30:	6f6c2e70 	svcvs	0x006c2e70
 8019e34:	006c6163 	rsbeq	r6, ip, r3, ror #2
 8019e38:	7265735f 	rsbvc	r7, r5, #2080374785	; 0x7c000001
 8019e3c:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
 8019e40:	645f2e73 	ldrbvs	r2, [pc], #-3699	; 8019e48 <NetworkConst::MSG_NETWORK_INIT+0x34>
 8019e44:	732d736e 			; <UNDEFINED> instruction: 0x732d736e
 8019e48:	755f2e64 	ldrbvc	r2, [pc, #-3684]	; 8018fec <index_js+0x434>
 8019e4c:	6c2e7064 	stcvs	0, cr7, [lr], #-400	; 0xfffffe70
 8019e50:	6c61636f 	stclvs	3, cr6, [r1], #-444	; 0xfffffe44
 8019e54:	4e446d00 	cdpmi	13, 4, cr6, cr4, cr0, {0}
 8019e58:	20000a53 	andcs	r0, r0, r3, asr sl
 8019e5c:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 8019e60:	6e6e7572 	mcrvs	5, 3, r7, cr14, cr2, {3}
 8019e64:	0a676e69 	beq	99f5810 <__exidx_end+0x19db00c>
 8019e68:	614e2000 	mrsvs	r2, (UNDEF: 78)
 8019e6c:	3a20656d 	bcc	8833428 <__exidx_end+0x818c24>
 8019e70:	0a732520 	beq	9ce32f8 <__exidx_end+0x1cc8af4>
 8019e74:	73252000 			; <UNDEFINED> instruction: 0x73252000
 8019e78:	20642520 	rsbcs	r2, r4, r0, lsr #10
 8019e7c:	000a7325 	andeq	r7, sl, r5, lsr #6
 8019e80:	30687465 	rsbcc	r7, r8, r5, ror #8
 8019e84:	67696700 	strbvs	r6, [r9, -r0, lsl #14]!
 8019e88:	76656461 	strbtvc	r6, [r5], -r1, ror #8
 8019e8c:	5f656369 	svcpl	0x00656369
 8019e90:	74654e00 	strbtvc	r4, [r5], #-3584	; 0xfffff200
 8019e94:	6b726f77 	blvs	9cb5c78 <__exidx_end+0x1c9b474>
 8019e98:	4820000a 	stmdami	r0!, {r1, r3}
 8019e9c:	6e74736f 	cdpvs	3, 7, cr7, cr4, cr15, {3}
 8019ea0:	20656d61 	rsbcs	r6, r5, r1, ror #26
 8019ea4:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8019ea8:	20000a73 	andcs	r0, r0, r3, ror sl
 8019eac:	614e6649 	cmpvs	lr, r9, asr #12
 8019eb0:	2020656d 	eorcs	r6, r0, sp, ror #10
 8019eb4:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8019eb8:	203a6425 	eorscs	r6, sl, r5, lsr #8
 8019ebc:	000a7325 	andeq	r7, sl, r5, lsr #6
 8019ec0:	656e4920 	strbvs	r4, [lr, #-2336]!	; 0xfffff6e0
 8019ec4:	20202074 	eorcs	r2, r0, r4, ror r0
 8019ec8:	3a202020 	bcc	8821f50 <__exidx_end+0x80774c>
 8019ecc:	2e642520 	cdpcs	5, 6, cr2, cr4, cr0, {1}
 8019ed0:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8019ed4:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8019ed8:	0a64252f 	beq	992339c <__exidx_end+0x1908b98>
 8019edc:	654e2000 	strbvs	r2, [lr, #-0]
 8019ee0:	73616d74 	cmnvc	r1, #116, 26	; 0x1d00
 8019ee4:	2020206b 	eorcs	r2, r0, fp, rrx
 8019ee8:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8019eec:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8019ef0:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8019ef4:	20000a64 	andcs	r0, r0, r4, ror #20
 8019ef8:	65746147 	ldrbvs	r6, [r4, #-327]!	; 0xfffffeb9
 8019efc:	20796177 	rsbscs	r6, r9, r7, ror r1
 8019f00:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8019f04:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8019f08:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8019f0c:	0a64252e 	beq	99233cc <__exidx_end+0x1908bc8>
 8019f10:	72422000 	subvc	r2, r2, #0
 8019f14:	6364616f 	cmnvs	r4, #-1073741797	; 0xc000001b
 8019f18:	20747361 	rsbscs	r7, r4, r1, ror #6
 8019f1c:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8019f20:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8019f24:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8019f28:	20000a64 	andcs	r0, r0, r4, ror #20
 8019f2c:	2063614d 	rsbcs	r6, r3, sp, asr #2
 8019f30:	20202020 	eorcs	r2, r0, r0, lsr #32
 8019f34:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8019f38:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8019f3c:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 8019f40:	2e253a78 			; <UNDEFINED> instruction: 0x2e253a78
 8019f44:	253a7832 	ldrcs	r7, [sl, #-2098]!	; 0xfffff7ce
 8019f48:	3a78322e 	bcc	9e26808 <__exidx_end+0x1e0c004>
 8019f4c:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8019f50:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 8019f54:	20000a78 	andcs	r0, r0, r8, ror sl
 8019f58:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
 8019f5c:	20202020 	eorcs	r2, r0, r0, lsr #32
 8019f60:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8019f64:	000a6325 	andeq	r6, sl, r5, lsr #6
 8019f68:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
 8019f6c:	49206369 	stmdbmi	r0!, {r0, r3, r5, r6, r8, r9, sp, lr}
 8019f70:	544e0050 	strbpl	r0, [lr], #-80	; 0xffffffb0
 8019f74:	65532050 	ldrbvs	r2, [r3, #-80]	; 0xffffffb0
 8019f78:	72657672 	rsbvc	r7, r5, #119537664	; 0x7200000
	...

08019f7d <NetworkParamsConst::IP_ADDRESS>:
 8019f7d:	615f7069 	cmpvs	pc, r9, rrx
 8019f81:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0xfffffb9c
 8019f85:	 	mcrvs	3, 0, r7, cr0, cr3, {3}

08019f88 <NetworkParamsConst::NTP_SERVER>:
 8019f88:	5f70746e 	svcpl	0x0070746e
 8019f8c:	76726573 			; <UNDEFINED> instruction: 0x76726573
 8019f90:	 	cdpvs	2, 0, cr7, cr0, cr5, {3}

08019f93 <NetworkParamsConst::NTP_UTC_OFFSET>:
 8019f93:	5f70746e 	svcpl	0x0070746e
 8019f97:	5f637475 	svcpl	0x00637475
 8019f9b:	7366666f 	cmnvc	r6, #116391936	; 0x6f00000
 8019f9f:	 	strvs	r7, [r0], #-1125	; 0xfffffb9b

08019fa2 <NetworkParamsConst::DEFAULT_GATEWAY>:
 8019fa2:	61666564 	cmnvs	r6, r4, ror #10
 8019fa6:	5f746c75 	svcpl	0x00746c75
 8019faa:	65746167 	ldrbvs	r6, [r4, #-359]!	; 0xfffffe99
 8019fae:	00796177 	rsbseq	r6, r9, r7, ror r1

08019fb2 <NetworkParamsConst::DHCP_RETRY_TIME>:
 8019fb2:	70636864 	rsbvc	r6, r3, r4, ror #16
 8019fb6:	7465725f 	strbtvc	r7, [r5], #-607	; 0xfffffda1
 8019fba:	745f7972 	ldrbvc	r7, [pc], #-2418	; 8019fc2 <NetworkParamsConst::HOSTNAME>
 8019fbe:	00656d69 	rsbeq	r6, r5, r9, ror #26

08019fc2 <NetworkParamsConst::HOSTNAME>:
 8019fc2:	74736f68 	ldrbtvc	r6, [r3], #-3944	; 0xfffff098
 8019fc6:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

08019fcb <NetworkParamsConst::NET_MASK>:
 8019fcb:	5f74656e 	svcpl	0x0074656e
 8019fcf:	6b73616d 	blvs	9cf258b <__exidx_end+0x1cd7d87>
	...

08019fd4 <NetworkParamsConst::USE_DHCP>:
 8019fd4:	5f657375 	svcpl	0x00657375
 8019fd8:	70636864 	rsbvc	r6, r3, r4, ror #16
	...

08019fdd <NetworkParamsConst::FILE_NAME>:
 8019fdd:	7774656e 	ldrbvc	r6, [r4, -lr, ror #10]!
 8019fe1:	2e6b726f 	cdpcs	2, 6, cr7, cr11, cr15, {3}
 8019fe5:	00747874 	rsbseq	r7, r4, r4, ror r8
 8019fe9:	65687445 	strbvs	r7, [r8, #-1093]!	; 0xfffffbbb
 8019fed:	74656e72 	strbtvc	r6, [r5], #-3698	; 0xfffff18e
 8019ff1:	61747320 	cmnvs	r4, r0, lsr #6
 8019ff5:	25007472 	strcs	r7, [r0, #-1138]	; 0xfffffb8e
 8019ff9:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8019ffd:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801a001:	252f6425 	strcs	r6, [pc, #-1061]!	; 8019be4 <s_aStorSize+0x40>
 801a005:	63252064 			; <UNDEFINED> instruction: 0x63252064
 801a009:	203a4e00 	eorscs	r4, sl, r0, lsl #28
 801a00d:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801a011:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 801a015:	0064252e 	rsbeq	r2, r4, lr, lsr #10
 801a019:	25203a47 	strcs	r3, [r0, #-2631]!	; 0xfffff5b9
 801a01d:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 801a021:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801a025:	46006425 	strmi	r6, [r0], -r5, lsr #8
 801a029:	776d7269 	strbvc	r7, [sp, -r9, ror #4]!
 801a02d:	20657261 	rsbcs	r7, r5, r1, ror #4
 801a031:	2a2e2556 	bcs	8ba3591 <__exidx_end+0xb88d8d>
 801a035:	48440073 	stmdami	r4, {r0, r1, r4, r5, r6}^
 801a039:	72205043 	eorvc	r5, r0, #67	; 0x43
 801a03d:	77656e65 	strbvc	r6, [r5, -r5, ror #28]!
 801a041:	00676e69 	rsbeq	r6, r7, r9, ror #28
 801a045:	50434844 	subpl	r4, r3, r4, asr #16
 801a049:	74657220 	strbtvc	r7, [r5], #-544	; 0xfffffde0
 801a04d:	6e697972 			; <UNDEFINED> instruction: 0x6e697972
 801a051:	654e0067 	strbvs	r0, [lr, #-103]	; 0xffffff99
 801a055:	726f7774 	rsbvc	r7, pc, #116, 14	; 0x1d00000
 801a059:	6873206b 	ldmdavs	r3!, {r0, r1, r3, r5, r6, sp}^
 801a05d:	6f647475 	svcvs	0x00647475
 801a061:	 			; <UNDEFINED> instruction: 0xf8006e77

0801a064 <pArray>:
 801a064:	0801a0f8 	stmdaeq	r1, {r3, r4, r5, r6, r7, sp, pc}
 801a068:	0801a0b4 	stmdaeq	r1, {r2, r4, r5, r7, sp, pc}
 801a06c:	08019f7d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r8, r9, sl, fp, ip, pc}
 801a070:	0801a0fe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r7, sp, pc}
 801a074:	0801a374 	stmdaeq	r1, {r2, r4, r5, r6, r8, r9, sp, pc}
 801a078:	0801a0bf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r7, sp, pc}
 801a07c:	08019369 	stmdaeq	r1, {r0, r3, r5, r6, r8, r9, ip, pc}
 801a080:	08019fc2 	stmdaeq	r1, {r1, r6, r7, r8, r9, sl, fp, ip, pc}
 801a084:	0801a24a 	stmdaeq	r1, {r1, r3, r6, r9, sp, pc}
 801a088:	0801a25a 	stmdaeq	r1, {r1, r3, r4, r6, r9, sp, pc}
 801a08c:	0801a26a 	stmdaeq	r1, {r1, r3, r5, r6, r9, sp, pc}
 801a090:	0801a27a 	stmdaeq	r1, {r1, r3, r4, r5, r6, r9, sp, pc}
 801a094:	08019fcb 	stmdaeq	r1, {r0, r1, r3, r6, r7, r8, r9, sl, fp, ip, pc}
 801a098:	0801a362 	stmdaeq	r1, {r1, r5, r6, r8, r9, sp, pc}
 801a09c:	08019374 	stmdaeq	r1, {r2, r4, r5, r6, r8, r9, ip, pc}
 801a0a0:	0801938c 	stmdaeq	r1, {r2, r3, r7, r8, r9, ip, pc}
 801a0a4:	080193a4 	stmdaeq	r1, {r2, r5, r7, r8, r9, ip, pc}
 801a0a8:	080193bc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r8, r9, ip, pc}
 801a0ac:	08019fa2 	stmdaeq	r1, {r1, r5, r7, r8, r9, sl, fp, ip, pc}
 801a0b0:	0801a0cc 	stmdaeq	r1, {r2, r3, r6, r7, sp, pc}

0801a0b4 <DisplayUdfParamsConst::BOARD_NAME>:
 801a0b4:	72616f62 	rsbvc	r6, r1, #392	; 0x188
 801a0b8:	616e5f64 	cmnvs	lr, r4, ror #30
 801a0bc:	 	tstvs	r0, sp, ror #10

0801a0bf <DisplayUdfParamsConst::ACTIVE_PORTS>:
 801a0bf:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 801a0c3:	705f6576 	subsvc	r6, pc, r6, ror r5	; <UNPREDICTABLE>
 801a0c7:	7374726f 	cmnvc	r4, #-268435450	; 0xf0000006
	...

0801a0cc <DisplayUdfParamsConst::DMX_DIRECTION>:
 801a0cc:	5f786d64 	svcpl	0x00786d64
 801a0d0:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 801a0d4:	6f697463 	svcvs	0x00697463
 801a0d8:	 	ldclvs	0, cr0, [r3], #-440	; 0xfffffe48

0801a0da <DisplayUdfParamsConst::SLEEP_TIMEOUT>:
 801a0da:	65656c73 	strbvs	r6, [r5, #-3187]!	; 0xfffff38d
 801a0de:	69745f70 	ldmdbvs	r4!, {r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 801a0e2:	756f656d 	strbvc	r6, [pc, #-1389]!	; 8019b7d <PixelType::TYPES+0x7e>
 801a0e6:	 	stclvs	0, cr0, [r6], #-464	; 0xfffffe30

0801a0e8 <DisplayUdfParamsConst::FLIP_VERTICALLY>:
 801a0e8:	70696c66 	rsbvc	r6, r9, r6, ror #24
 801a0ec:	7265765f 	rsbvc	r7, r5, #99614720	; 0x5f00000
 801a0f0:	61636974 	smcvs	13972	; 0x3694
 801a0f4:	00796c6c 	rsbseq	r6, r9, ip, ror #24

0801a0f8 <DisplayUdfParamsConst::TITLE>:
 801a0f8:	6c746974 			; <UNDEFINED> instruction: 0x6c746974
 801a0fc:	 	ldrbvs	r0, [r6, #-101]!	; 0xffffff9b

0801a0fe <DisplayUdfParamsConst::VERSION>:
 801a0fe:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 801a102:	006e6f69 	rsbeq	r6, lr, r9, ror #30

0801a106 <DisplayUdfParamsConst::FILE_NAME>:
 801a106:	70736964 	rsbsvc	r6, r3, r4, ror #18
 801a10a:	2e79616c 	rpwcsez	f6, f1, #4.0
 801a10e:	00747874 	rsbseq	r7, r4, r4, ror r8

0801a112 <DisplayUdfParamsConst::INTENSITY>:
 801a112:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
 801a116:	7469736e 	strbtvc	r7, [r9], #-878	; 0xfffffc92
 801a11a:	20200079 	eorcs	r0, r0, r9, ror r0
 801a11e:	4f002020 	svcmi	0x00002020
 801a122:	2e25203a 	mcrcs	0, 1, r2, cr5, cr10, {1}
 801a126:	253a6432 	ldrcs	r6, [sl, #-1074]!	; 0xfffffbce
 801a12a:	64253a64 	strtvs	r3, [r5], #-2660	; 0xfffff59c
 801a12e:	20632520 	rsbcs	r2, r3, r0, lsr #10
 801a132:	4f007325 	svcmi	0x00007325
 801a136:	203a6425 	eorscs	r6, sl, r5, lsr #8
 801a13a:	64322e25 	ldrtvs	r2, [r2], #-3621	; 0xfffff1db
 801a13e:	3a64253a 	bcc	992362e <__exidx_end+0x1908e2a>
 801a142:	25206425 	strcs	r6, [r0, #-1061]!	; 0xfffffbdb
 801a146:	73252063 			; <UNDEFINED> instruction: 0x73252063
 801a14a:	3a632500 	bcc	98e3552 <__exidx_end+0x18c8d4e>
 801a14e:	2e642520 	cdpcs	5, 6, cr2, cr4, cr0, {1}
 801a152:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801a156:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 801a15a:	3a504100 	bcc	942a562 <__exidx_end+0x140fd5e>
 801a15e:	00642520 	rsbeq	r2, r4, r0, lsr #10
 801a162:	44206f4e 	strtmi	r6, [r0], #-3918	; 0xfffff0b2
 801a166:	4400584d 	strmi	r5, [r0], #-2125	; 0xfffff7b3
 801a16a:	2520584d 	strcs	r5, [r0, #-2125]!	; 0xfffff7b3
 801a16e:	64252073 	strtvs	r2, [r5], #-115	; 0xffffff8d
	...

0801a173 <DevicesParamsConst::ACTIVE_OUT>:
 801a173:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 801a177:	6f5f6576 	svcvs	0x005f6576
 801a17b:	 	movwvs	r7, #1141	; 0x475

0801a17e <DevicesParamsConst::SPI_SPEED_HZ>:
 801a17e:	636f6c63 	cmnvs	pc, #25344	; 0x6300
 801a182:	70735f6b 	rsbsvc	r5, r3, fp, ror #30
 801a186:	5f646565 	svcpl	0x00646565
 801a18a:	 			; <UNDEFINED> instruction: 0x6c007a68

0801a18d <DevicesParamsConst::GROUPING_COUNT>:
 801a18d:	5f64656c 	svcpl	0x0064656c
 801a191:	756f7267 	strbvc	r7, [pc, #-615]!	; 8019f32 <NetworkConst::MSG_NETWORK_INIT+0x11e>
 801a195:	6f635f70 	svcvs	0x00635f70
 801a199:	00746e75 	rsbseq	r6, r4, r5, ror lr

0801a19d <DevicesParamsConst::GLOBAL_BRIGHTNESS>:
 801a19d:	626f6c67 	rsbvs	r6, pc, #26368	; 0x6700
 801a1a1:	625f6c61 	subsvs	r6, pc, #24832	; 0x6100
 801a1a5:	68676972 	stmdavs	r7!, {r1, r4, r5, r6, r8, fp, sp, lr}^
 801a1a9:	73656e74 	cmnvc	r5, #116, 28	; 0x740
 801a1ad:	 	strbvs	r0, [ip, #-115]!	; 0xffffff8d

0801a1af <DevicesParamsConst::MAP>:
 801a1af:	5f64656c 	svcpl	0x0064656c
 801a1b3:	5f626772 	svcpl	0x00626772
 801a1b7:	7070616d 	rsbsvc	r6, r0, sp, ror #2
 801a1bb:	00676e69 	rsbeq	r6, r7, r9, ror #28

0801a1bf <DevicesParamsConst::TYPE>:
 801a1bf:	5f64656c 	svcpl	0x0064656c
 801a1c3:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
	...

0801a1c8 <DevicesParamsConst::COUNT>:
 801a1c8:	5f64656c 	svcpl	0x0064656c
 801a1cc:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 801a1d0:	 	strbvs	r0, [ip, #-116]!	; 0xffffff8c

0801a1d2 <DevicesParamsConst::LED_T0H>:
 801a1d2:	5f64656c 	svcpl	0x0064656c
 801a1d6:	00683074 	rsbeq	r3, r8, r4, ror r0

0801a1da <DevicesParamsConst::LED_T1H>:
 801a1da:	5f64656c 	svcpl	0x0064656c
 801a1de:	00683174 	rsbeq	r3, r8, r4, ror r1

0801a1e2 <DevicesParamsConst::FILE_NAME>:
 801a1e2:	69766564 	ldmdbvs	r6!, {r2, r5, r6, r8, sl, sp, lr}^
 801a1e6:	2e736563 	cdpcs	5, 7, cr6, cr3, cr3, {3}
 801a1ea:	00747874 	rsbseq	r7, r4, r4, ror r8
 801a1ee:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 801a1f2:	6425223a 	strtvs	r2, [r5], #-570	; 0xfffffdc6
 801a1f6:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801a1fa:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801a1fe:	002c2264 	eoreq	r2, ip, r4, ror #4
 801a202:	3d732523 	cfldr64cc	mvdx2, [r3, #-140]!	; 0xffffff74
 801a206:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801a20a:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 801a20e:	0a64252e 	beq	99236ce <__exidx_end+0x1908eca>
 801a212:	25202300 	strcs	r2, [r0, #-768]!	; 0xfffffd00
 801a216:	0a232073 	beq	88e23ea <__exidx_end+0x8c7be6>
 801a21a:	73252200 			; <UNDEFINED> instruction: 0x73252200
 801a21e:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 801a222:	22782a2e 	rsbscs	r2, r8, #188416	; 0x2e000
 801a226:	2523002c 	strcs	r0, [r3, #-44]!	; 0xffffffd4
 801a22a:	2e253d73 	mcrcs	13, 1, r3, cr5, cr3, {3}
 801a22e:	000a782a 	andeq	r7, sl, sl, lsr #16

0801a232 <LightSetParamsConst::MERGE_MODE>:
 801a232:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 801a236:	6f6d5f65 	svcvs	0x006d5f65
 801a23a:	 	strvc	r6, [r0], #-1380	; 0xfffffa9c

0801a23d <LightSetParamsConst::TEST_PATTERN>:
 801a23d:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
 801a241:	7461705f 	strbtvc	r7, [r1], #-95	; 0xffffffa1
 801a245:	6e726574 	mrcvs	5, 3, r6, cr2, cr4, {3}
	...

0801a24a <LightSetParamsConst::UNIVERSE_PORT>:
 801a24a:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 801a24e:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 801a252:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 801a256:	00615f74 	rsbeq	r5, r1, r4, ror pc
 801a25a:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 801a25e:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 801a262:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 801a266:	00625f74 	rsbeq	r5, r2, r4, ror pc
 801a26a:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 801a26e:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 801a272:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 801a276:	00635f74 	rsbeq	r5, r3, r4, ror pc
 801a27a:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 801a27e:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 801a282:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 801a286:	00645f74 	rsbeq	r5, r4, r4, ror pc

0801a28a <LightSetParamsConst::START_UNI_PORT>:
 801a28a:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801a28e:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801a292:	6f705f69 	svcvs	0x00705f69
 801a296:	315f7472 	cmpcc	pc, r2, ror r4	; <UNPREDICTABLE>
 801a29a:	74730000 	ldrbtvc	r0, [r3], #-0
 801a29e:	5f747261 	svcpl	0x00747261
 801a2a2:	5f696e75 	svcpl	0x00696e75
 801a2a6:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 801a2aa:	0000325f 	andeq	r3, r0, pc, asr r2
 801a2ae:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801a2b2:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801a2b6:	6f705f69 	svcvs	0x00705f69
 801a2ba:	335f7472 	cmpcc	pc, #1912602624	; 0x72000000
 801a2be:	74730000 	ldrbtvc	r0, [r3], #-0
 801a2c2:	5f747261 	svcpl	0x00747261
 801a2c6:	5f696e75 	svcpl	0x00696e75
 801a2ca:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 801a2ce:	0000345f 	andeq	r3, r0, pc, asr r4
 801a2d2:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801a2d6:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801a2da:	6f705f69 	svcvs	0x00705f69
 801a2de:	355f7472 	ldrbcc	r7, [pc, #-1138]	; 8019e74 <NetworkConst::MSG_NETWORK_INIT+0x60>
 801a2e2:	74730000 	ldrbtvc	r0, [r3], #-0
 801a2e6:	5f747261 	svcpl	0x00747261
 801a2ea:	5f696e75 	svcpl	0x00696e75
 801a2ee:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 801a2f2:	0000365f 	andeq	r3, r0, pc, asr r6
 801a2f6:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801a2fa:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801a2fe:	6f705f69 	svcvs	0x00705f69
 801a302:	375f7472 			; <UNDEFINED> instruction: 0x375f7472
 801a306:	74730000 	ldrbtvc	r0, [r3], #-0
 801a30a:	5f747261 	svcpl	0x00747261
 801a30e:	5f696e75 	svcpl	0x00696e75
 801a312:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 801a316:	0000385f 	andeq	r3, r0, pc, asr r8

0801a31a <LightSetParamsConst::MERGE_MODE_PORT>:
 801a31a:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 801a31e:	6f6d5f65 	svcvs	0x006d5f65
 801a322:	705f6564 	subsvc	r6, pc, r4, ror #10
 801a326:	5f74726f 	svcpl	0x0074726f
 801a32a:	656d0061 	strbvs	r0, [sp, #-97]!	; 0xffffff9f
 801a32e:	5f656772 	svcpl	0x00656772
 801a332:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
 801a336:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 801a33a:	00625f74 	rsbeq	r5, r2, r4, ror pc
 801a33e:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 801a342:	6f6d5f65 	svcvs	0x006d5f65
 801a346:	705f6564 	subsvc	r6, pc, r4, ror #10
 801a34a:	5f74726f 	svcpl	0x0074726f
 801a34e:	656d0063 	strbvs	r0, [sp, #-99]!	; 0xffffff9d
 801a352:	5f656772 	svcpl	0x00656772
 801a356:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
 801a35a:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 801a35e:	00645f74 	rsbeq	r5, r4, r4, ror pc

0801a362 <LightSetParamsConst::DMX_START_ADDRESS>:
 801a362:	5f786d64 	svcpl	0x00786d64
 801a366:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 801a36a:	64615f74 	strbtvs	r5, [r1], #-3956	; 0xfffff08c
 801a36e:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
 801a372:	 	mrcvs	0, 3, r0, cr5, cr3, {3}

0801a374 <LightSetParamsConst::UNIVERSE>:
 801a374:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 801a378:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
	...

0801a37d <LightSetParamsConst::DIRECTION>:
 801a37d:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 801a381:	6f697463 	svcvs	0x00697463
 801a385:	6f705f6e 	svcvs	0x00705f6e
 801a389:	615f7472 	cmpvs	pc, r2, ror r4	; <UNPREDICTABLE>
 801a38d:	69640000 	stmdbvs	r4!, {}^	; <UNPREDICTABLE>
 801a391:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 801a395:	5f6e6f69 	svcpl	0x006e6f69
 801a399:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 801a39d:	0000625f 	andeq	r6, r0, pc, asr r2
 801a3a1:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 801a3a5:	6f697463 	svcvs	0x00697463
 801a3a9:	6f705f6e 	svcvs	0x00705f6e
 801a3ad:	635f7472 	cmpvs	pc, #1912602624	; 0x72000000
 801a3b1:	69640000 	stmdbvs	r4!, {}^	; <UNPREDICTABLE>
 801a3b5:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 801a3b9:	5f6e6f69 	svcpl	0x006e6f69
 801a3bd:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 801a3c1:	0000645f 	andeq	r6, r0, pc, asr r4
 801a3c5:	64206f4e 	strtvs	r6, [r0], #-3918	; 0xfffff0b2
 801a3c9:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
 801a3cd:	66207961 	strtvs	r7, [r0], -r1, ror #18
 801a3d1:	646e756f 	strbtvs	r7, [lr], #-1391	; 0xfffffa91
 801a3d5:	31485300 	mrscc	r5, (UNDEF: 120)
 801a3d9:	00363031 	eorseq	r3, r6, r1, lsr r0
 801a3dd:	31445353 	cmpcc	r4, r3, asr r3
 801a3e1:	00363033 	eorseq	r3, r6, r3, lsr r0
 801a3e5:	28207325 	stmdacs	r0!, {r0, r2, r5, r8, r9, ip, sp, lr}
 801a3e9:	252c6425 	strcs	r6, [ip, #-1061]!	; 0xfffffbdb
 801a3ed:	000a2964 	andeq	r2, sl, r4, ror #18
 801a3f1:	aaeeaa40 	bge	7bc4cf9 <__stack_size+0x7bc2cf9>
 801a3f5:	 	andmi	r0, r0, lr, ror #1

0801a3f8 <_OledFont8x6>:
 801a3f8:	00000040 	andeq	r0, r0, r0, asr #32
 801a3fc:	40000000 	andmi	r0, r0, r0
 801a400:	005f0000 	subseq	r0, pc, r0
 801a404:	00400000 	subeq	r0, r0, r0
 801a408:	00070007 	andeq	r0, r7, r7
 801a40c:	7f144000 	svcvc	0x00144000
 801a410:	00147f14 	andseq	r7, r4, r4, lsl pc
 801a414:	7f2a2440 	svcvc	0x002a2440
 801a418:	4000122a 	andmi	r1, r0, sl, lsr #4
 801a41c:	64081323 	strvs	r1, [r8], #-803	; 0xfffffcdd
 801a420:	36400062 	strbcc	r0, [r0], -r2, rrx
 801a424:	50205649 	eorpl	r5, r0, r9, asr #12
 801a428:	08004000 	stmdaeq	r0, {lr}
 801a42c:	00000307 	andeq	r0, r0, r7, lsl #6
 801a430:	221c0040 	andscs	r0, ip, #64	; 0x40
 801a434:	40000041 	andmi	r0, r0, r1, asr #32
 801a438:	1c224100 	stfnes	f4, [r2], #-0
 801a43c:	2a400000 	bcs	901a444 <__exidx_end+0xfffc40>
 801a440:	2a1c7f1c 	bcs	873a0b8 <__exidx_end+0x71f8b4>
 801a444:	08084000 	stmdaeq	r8, {lr}
 801a448:	0008083e 	andeq	r0, r8, lr, lsr r8
 801a44c:	70800040 	addvc	r0, r0, r0, asr #32
 801a450:	40000030 	andmi	r0, r0, r0, lsr r0
 801a454:	08080808 	stmdaeq	r8, {r3, fp}
 801a458:	00400008 	subeq	r0, r0, r8
 801a45c:	00606000 	rsbeq	r6, r0, r0
 801a460:	10204000 	eorne	r4, r0, r0
 801a464:	00020408 	andeq	r0, r2, r8, lsl #8
 801a468:	49513e40 	ldmdbmi	r1, {r6, r9, sl, fp, ip, sp}^
 801a46c:	40003e45 	andmi	r3, r0, r5, asr #28
 801a470:	407f4200 	rsbsmi	r4, pc, r0, lsl #4
 801a474:	72400000 	subvc	r0, r0, #0
 801a478:	46494949 	strbmi	r4, [r9], -r9, asr #18
 801a47c:	41214000 			; <UNDEFINED> instruction: 0x41214000
 801a480:	00334d49 	eorseq	r4, r3, r9, asr #26
 801a484:	12141840 	andsne	r1, r4, #64, 16	; 0x400000
 801a488:	4000107f 	andmi	r1, r0, pc, ror r0
 801a48c:	45454527 	strbmi	r4, [r5, #-1319]	; 0xfffffad9
 801a490:	3c400039 	mcrrcc	0, 3, r0, r0, cr9
 801a494:	3149494a 	cmpcc	r9, sl, asr #18
 801a498:	21414000 	mrscs	r4, (UNDEF: 65)
 801a49c:	00070911 	andeq	r0, r7, r1, lsl r9
 801a4a0:	49493640 	stmdbmi	r9, {r6, r9, sl, ip, sp}^
 801a4a4:	40003649 	andmi	r3, r0, r9, asr #12
 801a4a8:	29494946 	stmdbcs	r9, {r1, r2, r6, r8, fp, lr}^
 801a4ac:	0040001e 	subeq	r0, r0, lr, lsl r0
 801a4b0:	00001400 	andeq	r1, r0, r0, lsl #8
 801a4b4:	40004000 	andmi	r4, r0, r0
 801a4b8:	00000034 	andeq	r0, r0, r4, lsr r0
 801a4bc:	14080040 	strne	r0, [r8], #-64	; 0xffffffc0
 801a4c0:	40004122 	andmi	r4, r0, r2, lsr #2
 801a4c4:	14141414 	ldrne	r1, [r4], #-1044	; 0xfffffbec
 801a4c8:	00400014 	subeq	r0, r0, r4, lsl r0
 801a4cc:	08142241 	ldmdaeq	r4, {r0, r6, r9, sp}
 801a4d0:	01024000 	mrseq	r4, (UNDEF: 2)
 801a4d4:	00060959 	andeq	r0, r6, r9, asr r9
 801a4d8:	5d413e40 	stclpl	14, cr3, [r1, #-256]	; 0xffffff00
 801a4dc:	40004e59 	andmi	r4, r0, r9, asr lr
 801a4e0:	1211127c 	andsne	r1, r1, #124, 4	; 0xc0000007
 801a4e4:	7f40007c 	svcvc	0x0040007c
 801a4e8:	36494949 	strbcc	r4, [r9], -r9, asr #18
 801a4ec:	413e4000 	teqmi	lr, r0
 801a4f0:	00224141 	eoreq	r4, r2, r1, asr #2
 801a4f4:	41417f40 	cmpmi	r1, r0, asr #30
 801a4f8:	40003e41 	andmi	r3, r0, r1, asr #28
 801a4fc:	4949497f 	stmdbmi	r9, {r0, r1, r2, r3, r4, r5, r6, r8, fp, lr}^
 801a500:	7f400041 	svcvc	0x00400041
 801a504:	01090909 	tsteq	r9, r9, lsl #18
 801a508:	413e4000 	teqmi	lr, r0
 801a50c:	00735141 	rsbseq	r5, r3, r1, asr #2
 801a510:	08087f40 	stmdaeq	r8, {r6, r8, r9, sl, fp, ip, sp, lr}
 801a514:	40007f08 	andmi	r7, r0, r8, lsl #30
 801a518:	417f4100 	cmnmi	pc, r0, lsl #2
 801a51c:	20400000 	subcs	r0, r0, r0
 801a520:	013f4140 	teqeq	pc, r0, asr #2
 801a524:	087f4000 	ldmdaeq	pc!, {lr}^	; <UNPREDICTABLE>
 801a528:	00412214 	subeq	r2, r1, r4, lsl r2
 801a52c:	40407f40 	submi	r7, r0, r0, asr #30
 801a530:	40004040 	andmi	r4, r0, r0, asr #32
 801a534:	021c027f 	andseq	r0, ip, #-268435449	; 0xf0000007
 801a538:	7f40007f 	svcvc	0x0040007f
 801a53c:	7f100804 	svcvc	0x00100804
 801a540:	413e4000 	teqmi	lr, r0
 801a544:	003e4141 	eorseq	r4, lr, r1, asr #2
 801a548:	09097f40 	stmdbeq	r9, {r6, r8, r9, sl, fp, ip, sp, lr}
 801a54c:	40000609 	andmi	r0, r0, r9, lsl #12
 801a550:	2151413e 	cmpcs	r1, lr, lsr r1
 801a554:	7f40005e 	svcvc	0x0040005e
 801a558:	46291909 	strtmi	r1, [r9], -r9, lsl #18
 801a55c:	49264000 	stmdbmi	r6!, {lr}
 801a560:	00324949 	eorseq	r4, r2, r9, asr #18
 801a564:	7f010340 	svcvc	0x00010340
 801a568:	40000301 	andmi	r0, r0, r1, lsl #6
 801a56c:	4040403f 	submi	r4, r0, pc, lsr r0
 801a570:	1f40003f 	svcne	0x0040003f
 801a574:	1f204020 	svcne	0x00204020
 801a578:	403f4000 	eorsmi	r4, pc, r0
 801a57c:	003f4038 	eorseq	r4, pc, r8, lsr r0	; <UNPREDICTABLE>
 801a580:	08146340 	ldmdaeq	r4, {r6, r8, r9, sp, lr}
 801a584:	40006314 	andmi	r6, r0, r4, lsl r3
 801a588:	04780403 	ldrbteq	r0, [r8], #-1027	; 0xfffffbfd
 801a58c:	61400003 	cmpvs	r0, r3
 801a590:	434d4959 	movtmi	r4, #55641	; 0xd959
 801a594:	7f004000 	svcvc	0x00004000
 801a598:	00414141 	subeq	r4, r1, r1, asr #2
 801a59c:	08040240 	stmdaeq	r4, {r6, r9}
 801a5a0:	40002010 	andmi	r2, r0, r0, lsl r0
 801a5a4:	41414100 	mrsmi	r4, (UNDEF: 81)
 801a5a8:	0440007f 	strbeq	r0, [r0], #-127	; 0xffffff81
 801a5ac:	04020102 	streq	r0, [r2], #-258	; 0xfffffefe
 801a5b0:	40404000 	submi	r4, r0, r0
 801a5b4:	00404040 	subeq	r4, r0, r0, asr #32
 801a5b8:	07030040 	streq	r0, [r3, -r0, asr #32]
 801a5bc:	40000008 	andmi	r0, r0, r8
 801a5c0:	78545420 	ldmdavc	r4, {r5, sl, ip, lr}^
 801a5c4:	7f400040 	svcvc	0x00400040
 801a5c8:	38444428 	stmdacc	r4, {r3, r5, sl, lr}^
 801a5cc:	44384000 	ldrtmi	r4, [r8], #-0
 801a5d0:	00284444 	eoreq	r4, r8, r4, asr #8
 801a5d4:	44443840 	strbmi	r3, [r4], #-2112	; 0xfffff7c0
 801a5d8:	40007f28 	andmi	r7, r0, r8, lsr #30
 801a5dc:	54545438 	ldrbpl	r5, [r4], #-1080	; 0xfffffbc8
 801a5e0:	00400018 	subeq	r0, r0, r8, lsl r0
 801a5e4:	02097e08 	andeq	r7, r9, #8, 28	; 0x80
 801a5e8:	a4184000 	ldrge	r4, [r8], #-0
 801a5ec:	00789ca4 	rsbseq	r9, r8, r4, lsr #25
 801a5f0:	04087f40 	streq	r7, [r8], #-3904	; 0xfffff0c0
 801a5f4:	40007804 	andmi	r7, r0, r4, lsl #16
 801a5f8:	407d4400 	rsbsmi	r4, sp, r0, lsl #8
 801a5fc:	20400000 	subcs	r0, r0, r0
 801a600:	003d4040 	eorseq	r4, sp, r0, asr #32
 801a604:	107f4000 	rsbsne	r4, pc, r0
 801a608:	00004428 	andeq	r4, r0, r8, lsr #8
 801a60c:	7f410040 	svcvc	0x00410040
 801a610:	40000040 	andmi	r0, r0, r0, asr #32
 801a614:	0478047c 	ldrbteq	r0, [r8], #-1148	; 0xfffffb84
 801a618:	7c400078 	mcrrvc	0, 7, r0, r0, cr8
 801a61c:	78040408 	stmdavc	r4, {r3, sl}
 801a620:	44384000 	ldrtmi	r4, [r8], #-0
 801a624:	00384444 	eorseq	r4, r8, r4, asr #8
 801a628:	2418fc40 	ldrcs	pc, [r8], #-3136	; 0xfffff3c0
 801a62c:	40001824 	andmi	r1, r0, r4, lsr #16
 801a630:	18242418 	stmdane	r4!, {r3, r4, sl, sp}
 801a634:	7c4000fc 	mcrrvc	0, 15, r0, r0, cr12
 801a638:	08040408 	stmdaeq	r4, {r3, sl}
 801a63c:	54484000 	strbpl	r4, [r8], #-0
 801a640:	00245454 	eoreq	r5, r4, r4, asr r4
 801a644:	3f040440 	svccc	0x00040440
 801a648:	40002444 	andmi	r2, r0, r4, asr #8
 801a64c:	2040403c 	subcs	r4, r0, ip, lsr r0
 801a650:	1c40007c 	mcrrne	0, 7, r0, r0, cr12
 801a654:	1c204020 	stcne	0, cr4, [r0], #-128	; 0xffffff80
 801a658:	403c4000 	eorsmi	r4, ip, r0
 801a65c:	003c4030 	eorseq	r4, ip, r0, lsr r0
 801a660:	10284440 	eorne	r4, r8, r0, asr #8
 801a664:	40004428 	andmi	r4, r0, r8, lsr #8
 801a668:	9090904c 	addsls	r9, r0, ip, asr #32
 801a66c:	4440007c 	strbmi	r0, [r0], #-124	; 0xffffff84
 801a670:	444c5464 	strbmi	r5, [ip], #-1124	; 0xfffffb9c
 801a674:	08004000 	stmdaeq	r0, {lr}
 801a678:	00004136 	andeq	r4, r0, r6, lsr r1
 801a67c:	77000040 	strvc	r0, [r0, -r0, asr #32]
 801a680:	40000000 	andmi	r0, r0, r0
 801a684:	08364100 	ldmdaeq	r6!, {r8, lr}
 801a688:	02400000 	subeq	r0, r0, #0
 801a68c:	02040201 	andeq	r0, r4, #268435456	; 0x10000000
 801a690:	263c4000 	ldrtcs	r4, [ip], -r0
 801a694:	003c2623 	eorseq	r2, ip, r3, lsr #12

0801a698 <oled_128x32_init>:
 801a698:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 801a69c:	4000d31f 	andmi	sp, r0, pc, lsl r3
 801a6a0:	0020148d 	eoreq	r1, r0, sp, lsl #9
 801a6a4:	02dac8a1 	sbcseq	ip, sl, #10551296	; 0xa10000
 801a6a8:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 801a6ac:	a6a440db 	ssatge	r4, #5, fp, asr #1

0801a6b0 <oled_128x64_init>:
 801a6b0:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 801a6b4:	4000d33f 	andmi	sp, r0, pc, lsr r3
 801a6b8:	0020148d 	eoreq	r1, r0, sp, lsl #9
 801a6bc:	12dac8a1 	sbcsne	ip, sl, #10551296	; 0xa10000
 801a6c0:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 801a6c4:	a6a440db 	ssatge	r4, #5, fp, asr #1

0801a6c8 <vtable for Ssd1306>:
	...
 801a6d0:	080152f1 	stmdaeq	r1, {r0, r4, r5, r6, r7, r9, ip, lr}
 801a6d4:	0801531d 	stmdaeq	r1, {r0, r2, r3, r4, r8, r9, ip, lr}
 801a6d8:	08015635 	stmdaeq	r1, {r0, r2, r4, r5, r9, sl, ip, lr}
 801a6dc:	080155b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, r8, sl, ip, lr}
 801a6e0:	08015485 	stmdaeq	r1, {r0, r2, r7, sl, ip, lr}
 801a6e4:	0801533d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r8, r9, ip, lr}
 801a6e8:	08015365 	stmdaeq	r1, {r0, r2, r5, r6, r8, r9, ip, lr}
 801a6ec:	0801545b 	stmdaeq	r1, {r0, r1, r3, r4, r6, sl, ip, lr}
 801a6f0:	08015415 	stmdaeq	r1, {r0, r2, r4, sl, ip, lr}
 801a6f4:	080152f3 	stmdaeq	r1, {r0, r1, r4, r5, r6, r7, r9, ip, lr}
 801a6f8:	080154c1 	stmdaeq	r1, {r0, r6, r7, sl, ip, lr}
 801a6fc:	080154cd 	stmdaeq	r1, {r0, r2, r3, r6, r7, sl, ip, lr}
 801a700:	080154e7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, sl, ip, lr}
 801a704:	080152f5 	stmdaeq	r1, {r0, r2, r4, r5, r6, r7, r9, ip, lr}
 801a708:	30345b1b 	eorscc	r5, r4, fp, lsl fp
 801a70c:	5b1b006d 	blpl	86da8c8 <__exidx_end+0x6c00c4>
 801a710:	006d3033 	rsbeq	r3, sp, r3, lsr r0
 801a714:	31335b1b 	teqcc	r3, fp, lsl fp
 801a718:	5b1b006d 	blpl	86da8d4 <__exidx_end+0x6c00d0>
 801a71c:	006d3233 	rsbeq	r3, sp, r3, lsr r2
 801a720:	33335b1b 	teqcc	r3, #27648	; 0x6c00
 801a724:	5b1b006d 	blpl	86da8e0 <__exidx_end+0x6c00dc>
 801a728:	006d3933 	rsbeq	r3, sp, r3, lsr r9
 801a72c:	2e25565b 	mcrcs	6, 1, r5, cr5, cr11, {2}
 801a730:	205d732a 	subscs	r7, sp, sl, lsr #6
 801a734:	43207325 			; <UNDEFINED> instruction: 0x43207325
 801a738:	69706d6f 	ldmdbvs	r0!, {r0, r1, r2, r3, r5, r6, r8, sl, fp, sp, lr}^
 801a73c:	2064656c 	rsbcs	r6, r4, ip, ror #10
 801a740:	25206e6f 	strcs	r6, [r0, #-3695]!	; 0xfffff191
 801a744:	20732a2e 	rsbscs	r2, r3, lr, lsr #20
 801a748:	25207461 	strcs	r7, [r0, #-1121]!	; 0xfffffb9f
 801a74c:	00732a2e 	rsbseq	r2, r3, lr, lsr #20
 801a750:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 801a754:	203a636f 	eorscs	r6, sl, pc, ror #6
 801a758:	000a7525 	andeq	r7, sl, r5, lsr #10
 801a75c:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 801a760:	203a636f 	eorscs	r6, sl, pc, ror #6
 801a764:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
 801a768:	62203e20 	eorvs	r3, r0, #32, 28	; 0x200
 801a76c:	6b636f6c 	blvs	98f6524 <__exidx_end+0x18dbd20>
 801a770:	6d696c5f 	stclvs	12, cr6, [r9, #-380]!	; 0xfffffe84
 801a774:	000a7469 	andeq	r7, sl, r9, ror #8
 801a778:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 801a77c:	203a636f 	eorscs	r6, sl, pc, ror #6
 801a780:	6f6c4270 	svcvs	0x006c4270
 801a784:	65486b63 	strbvs	r6, [r8, #-2915]	; 0xfffff49d
 801a788:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 801a78c:	2c70253d 	cfldr64cs	mvdx2, [r0], #-244	; 0xffffff0c
 801a790:	7a697320 	bvc	9a77418 <__exidx_end+0x1a5cc14>
 801a794:	64253d65 	strtvs	r3, [r5], #-3429	; 0xfffff29b
 801a798:	6164202c 	cmnvs	r4, ip, lsr #32
 801a79c:	253d6174 	ldrcs	r6, [sp, #-372]!	; 0xfffffe8c
 801a7a0:	66000a70 			; <UNDEFINED> instruction: 0x66000a70
 801a7a4:	3a656572 	bcc	9973d74 <__exidx_end+0x1959570>
 801a7a8:	6c427020 	mcrrvs	0, 2, r7, r2, cr0
 801a7ac:	486b636f 	stmdami	fp!, {r0, r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 801a7b0:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 801a7b4:	203d2072 	eorscs	r2, sp, r2, ror r0
 801a7b8:	202c7025 	eorcs	r7, ip, r5, lsr #32
 801a7bc:	6f6c4270 	svcvs	0x006c4270
 801a7c0:	3d206b63 	fstmdbxcc	r0!, {d6-d54}	;@ Deprecated
 801a7c4:	0a702520 	beq	9c23c4c <__exidx_end+0x1c09448>
 801a7c8:	00000000 	andeq	r0, r0, r0

0801a7cc <days_of_month>:
 801a7cc:	0000001f 	andeq	r0, r0, pc, lsl r0
 801a7d0:	0000001c 	andeq	r0, r0, ip, lsl r0
 801a7d4:	0000001f 	andeq	r0, r0, pc, lsl r0
 801a7d8:	0000001e 	andeq	r0, r0, lr, lsl r0
 801a7dc:	0000001f 	andeq	r0, r0, pc, lsl r0
 801a7e0:	0000001e 	andeq	r0, r0, lr, lsl r0
 801a7e4:	0000001f 	andeq	r0, r0, pc, lsl r0
 801a7e8:	0000001f 	andeq	r0, r0, pc, lsl r0
 801a7ec:	0000001e 	andeq	r0, r0, lr, lsl r0
 801a7f0:	0000001f 	andeq	r0, r0, pc, lsl r0
 801a7f4:	0000001e 	andeq	r0, r0, lr, lsl r0
 801a7f8:	0000001f 	andeq	r0, r0, pc, lsl r0

Disassembly of section .ARM:

0801a7fc <__exidx_start>:
 801a7fc:	7ffecdd0 	svcvc	0x00fecdd0
 801a800:	00000001 	andeq	r0, r0, r1

Disassembly of section .ARM.attributes:

0801a804 <.ARM.attributes>:
 801a804:	00002e41 	andeq	r2, r0, r1, asr #28
 801a808:	61656100 	cmnvs	r5, r0, lsl #2
 801a80c:	01006962 	tsteq	r0, r2, ror #18
 801a810:	00000024 	andeq	r0, r0, r4, lsr #32
 801a814:	726f4305 	rsbvc	r4, pc, #335544320	; 0x14000000
 801a818:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
 801a81c:	0600334d 	streq	r3, [r0], -sp, asr #6
 801a820:	094d070a 	stmdbeq	sp, {r1, r3, r8, r9, sl}^
 801a824:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
 801a828:	17011501 	strne	r1, [r1, -r1, lsl #10]
 801a82c:	1a011803 	bne	8060840 <__exidx_end+0x4603c>
 801a830:	Address 0x000000000801a830 is out of bounds.


Disassembly of section .data:

20000000 <LLRPDevice::m_nHandleLLRP>:
20000000:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

20000004 <s_multicast_mac>:
20000004:	005e0001 	subseq	r0, lr, r1
20000008:	00000000 	andeq	r0, r0, r0

2000000c <MDNS::s_nHandle>:
2000000c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

20000010 <next_block>:
20000010:	2001d000 	andcs	sp, r1, r0

20000014 <s_block_bucket>:
20000014:	00000010 	andeq	r0, r0, r0, lsl r0
	...
20000024:	00000020 	andeq	r0, r0, r0, lsr #32
	...
20000034:	00000040 	andeq	r0, r0, r0, asr #32
	...
20000044:	00000060 	andeq	r0, r0, r0, rrx
	...
20000054:	00000080 	andeq	r0, r0, r0, lsl #1
	...
20000064:	00000100 	andeq	r0, r0, r0, lsl #2
	...
20000074:	00000140 	andeq	r0, r0, r0, asr #2
	...
20000084:	00000180 	andeq	r0, r0, r0, lsl #3
	...
20000094:	00000200 	andeq	r0, r0, r0, lsl #4
	...
200000a4:	00000300 	andeq	r0, r0, r0, lsl #6
	...
200000b4:	00000400 	andeq	r0, r0, r0, lsl #8
	...
200000c4:	00000500 	andeq	r0, r0, r0, lsl #10
	...

200000e4 <SystemCoreClock>:
200000e4:	07270e00 	streq	r0, [r7, -r0, lsl #28]!

Disassembly of section .bss:

200000e8 <outptr>:
200000e8:	00000000 	andeq	r0, r0, r0

200000ec <RemoteConfig::s_pUdpBuffer>:
200000ec:	00000000 	andeq	r0, r0, r0

200000f0 <RemoteConfig::s_RemoteConfigListBin>:
	...

20000114 <RemoteConfig::s_pThis>:
20000114:	00000000 	andeq	r0, r0, r0

20000118 <guard variable for lightset::Data::Get()::instance>:
20000118:	00000000 	andeq	r0, r0, r0

2000011c <lightset::Data::Get()::instance>:
	...

2000313c <ArtNetNode::s_pThis>:
2000313c:	00000000 	andeq	r0, r0, r0

20003140 <s_ReceivingMask>:
20003140:	00000000 	andeq	r0, r0, r0

20003144 <ip>:
20003144:	00000000 	andeq	r0, r0, r0

20003148 <ip>:
20003148:	00000000 	andeq	r0, r0, r0

2000314c <E131Bridge::s_pThis>:
2000314c:	00000000 	andeq	r0, r0, r0

20003150 <s_ReceivingMask>:
20003150:	00000000 	andeq	r0, r0, r0

20003154 <LLRPDevice::s_nIpAddressFrom>:
20003154:	00000000 	andeq	r0, r0, r0

20003158 <LLRPDevice::m_nIpAddresLLRPRequest>:
20003158:	00000000 	andeq	r0, r0, r0

2000315c <LLRPDevice::m_nIpAddressLLRPResponse>:
2000315c:	00000000 	andeq	r0, r0, r0

20003160 <LLRPDevice::m_pLLRP>:
20003160:	00000000 	andeq	r0, r0, r0

20003164 <RDMNetDevice::s_RdmCommand>:
	...

20003263 <RDMNetDevice::s_Cid>:
	...

20003274 <RDMSensors::s_pThis>:
20003274:	00000000 	andeq	r0, r0, r0

20003278 <RDMSubDevices::s_pThis>:
20003278:	00000000 	andeq	r0, r0, r0

2000327c <RDMDeviceResponder::s_pThis>:
2000327c:	00000000 	andeq	r0, r0, r0

20003280 <RDMIdentify::m_bIsEnabled>:
	...

20003281 <RDMIdentify::m_nMode>:
20003281:	 	andeq	r0, r0, r0

20003284 <RDMIdentify::s_pThis>:
20003284:	00000000 	andeq	r0, r0, r0

20003288 <s_StopBuffer>:
	...

20003488 <PixelPatterns::m_PortConfig>:
	...

20003588 <PixelPatterns::m_nActivePorts>:
20003588:	00000000 	andeq	r0, r0, r0

2000358c <PixelPatterns::m_pScannerColours>:
2000358c:	00000000 	andeq	r0, r0, r0

20003590 <PixelPatterns::m_nCount>:
20003590:	00000000 	andeq	r0, r0, r0

20003594 <PixelPatterns::m_pOutput>:
20003594:	00000000 	andeq	r0, r0, r0

20003598 <PixelTestPattern::s_Pattern>:
20003598:	00000000 	andeq	r0, r0, r0

2000359c <sv_isRunning>:
2000359c:	00000000 	andeq	r0, r0, r0

200035a0 <s_T0H>:
	...

2000ada0 <WS28xxMulti::s_pThis>:
2000ada0:	00000000 	andeq	r0, r0, r0

2000ada4 <SpiFlashStore::s_nWaitMillis>:
2000ada4:	00000000 	andeq	r0, r0, r0

2000ada8 <SpiFlashStore::s_SpiFlashData>:
	...

2000bda8 <SpiFlashStore::s_nStartAddress>:
2000bda8:	00000000 	andeq	r0, r0, r0

2000bdac <SpiFlashStore::s_bHaveFlashChip>:
2000bdac:	00000000 	andeq	r0, r0, r0

2000bdb0 <SpiFlashStore::s_nSpiFlashStoreSize>:
2000bdb0:	00000000 	andeq	r0, r0, r0

2000bdb4 <SpiFlashStore::s_State>:
2000bdb4:	00000000 	andeq	r0, r0, r0

2000bdb8 <SpiFlashStore::s_pThis>:
2000bdb8:	00000000 	andeq	r0, r0, r0

2000bdbc <SpiFlashStore::s_bIsNew>:
2000bdbc:	00000000 	andeq	r0, r0, r0

2000bdc0 <StoreArtNet::s_pThis>:
2000bdc0:	00000000 	andeq	r0, r0, r0

2000bdc4 <StoreDisplayUdf::s_pThis>:
2000bdc4:	00000000 	andeq	r0, r0, r0

2000bdc8 <StoreNetwork::s_pThis>:
2000bdc8:	00000000 	andeq	r0, r0, r0

2000bdcc <StoreRDMDevice::s_pThis>:
2000bdcc:	00000000 	andeq	r0, r0, r0

2000bdd0 <StoreRemoteConfig::s_pThis>:
2000bdd0:	00000000 	andeq	r0, r0, r0

2000bdd4 <StoreWS28xxDmx::s_pThis>:
2000bdd4:	00000000 	andeq	r0, r0, r0

2000bdd8 <FlashRom::s_pThis>:
2000bdd8:	00000000 	andeq	r0, r0, r0

2000bddc <flashrom::s_nAddress>:
2000bddc:	00000000 	andeq	r0, r0, r0

2000bde0 <flashrom::s_State>:
2000bde0:	00000000 	andeq	r0, r0, r0

2000bde4 <flashrom::s_nPage>:
2000bde4:	00000000 	andeq	r0, r0, r0

2000bde8 <flashrom::s_pData>:
2000bde8:	00000000 	andeq	r0, r0, r0

2000bdec <flashrom::s_isBank0>:
2000bdec:	00000000 	andeq	r0, r0, r0

2000bdf0 <flashrom::s_nLength>:
2000bdf0:	00000000 	andeq	r0, r0, r0

2000bdf4 <g_ip_info>:
	...

2000be00 <g_mac_address>:
2000be00:	00000000 	andeq	r0, r0, r0
	...

2000be06 <s_is_dhcp>:
	...

2000be08 <s_p>:
2000be08:	00000000 	andeq	r0, r0, r0

2000be0c <s_ticker>:
2000be0c:	00000000 	andeq	r0, r0, r0

2000be10 <s_mac_address>:
	...

2000be18 <s_mac_address_arp_reply>:
2000be18:	00000000 	andeq	r0, r0, r0
	...

2000be1e <s_id>:
	...

2000be20 <s_recv_queue>:
	...

2000c990 <s_tcb>:
	...

2000c9d4 <s_tcp>:
	...

2000cfc0 <broadcast_mask>:
2000cfc0:	00000000 	andeq	r0, r0, r0

2000cfc4 <gw_ip>:
2000cfc4:	00000000 	andeq	r0, r0, r0

2000cfc8 <on_network_mask>:
2000cfc8:	00000000 	andeq	r0, r0, r0

2000cfcc <s_id>:
2000cfcc:	00000000 	andeq	r0, r0, r0

2000cfd0 <s_ports_allowed>:
	...

2000cff0 <s_recv_queue>:
	...

20012c90 <s_send_packet>:
	...

2001327c <MDNS::s_nRemoteIp>:
2001327c:	00000000 	andeq	r0, r0, r0

20013280 <MDNS::s_nRemotePort>:
20013280:	00000000 	andeq	r0, r0, r0

20013284 <MDNS::s_nMulticastIp>:
20013284:	00000000 	andeq	r0, r0, r0

20013288 <MDNS::s_AnswerLocalIp>:
	...

2001348c <MDNS::s_ServiceRecords>:
	...

200134ac <MDNS::s_nBytesReceived>:
200134ac:	00000000 	andeq	r0, r0, r0

200134b0 <MDNS::s_ServiceRecordsData>:
	...

200136b4 <MDNS::s_pName>:
200136b4:	00000000 	andeq	r0, r0, r0

200136b8 <MDNS::s_pBuffer>:
200136b8:	00000000 	andeq	r0, r0, r0

200136bc <Network::s_pThis>:
200136bc:	00000000 	andeq	r0, r0, r0

200136c0 <NetworkParams::m_tNetworkParams>:
	...

20013720 <s_arp_announce>:
	...

2001374c <s_arp_reply>:
	...

20013778 <s_arp_request>:
	...

200137a4 <s_arp_records>:
	...

20013924 <s_entry_current>:
20013924:	00000000 	andeq	r0, r0, r0

20013928 <s_dhcp_allocated_gw>:
20013928:	00000000 	andeq	r0, r0, r0

2001392c <s_dhcp_allocated_ip>:
2001392c:	00000000 	andeq	r0, r0, r0

20013930 <s_dhcp_allocated_netmask>:
20013930:	00000000 	andeq	r0, r0, r0

20013934 <s_dhcp_message>:
	...

20013b58 <s_dhcp_server_ip>:
20013b58:	00000000 	andeq	r0, r0, r0

20013b5c <s_groups>:
	...

20013c7c <s_id>:
20013c7c:	00000000 	andeq	r0, r0, r0

20013c80 <s_joins_allowed_index>:
20013c80:	00000000 	andeq	r0, r0, r0

20013c84 <s_leave>:
	...

20013cb4 <s_multicast_mac>:
	...

20013cbc <s_report>:
	...

20013cec <DisplayUdf::s_pThis>:
20013cec:	00000000 	andeq	r0, r0, r0

20013cf0 <PropertiesConfig::s_Config>:
20013cf0:	00000000 	andeq	r0, r0, r0

20013cf4 <Display::s_pThis>:
20013cf4:	00000000 	andeq	r0, r0, r0

20013cf8 <_ClearBuffer>:
	...

20013d80 <Ssd1306::s_pThis>:
20013d80:	00000000 	andeq	r0, r0, r0

20013d84 <FirmwareVersion::s_FirmwareVersion>:
	...

20013d9a <FirmwareVersion::s_Print>:
	...

20013ddc <FirmwareVersion::s_pThis>:
20013ddc:	00000000 	andeq	r0, r0, r0

20013de0 <LedBlink::s_pThis>:
20013de0:	00000000 	andeq	r0, r0, r0

20013de4 <Hardware::s_pThis>:
20013de4:	00000000 	andeq	r0, r0, r0

20013de8 <BitBanging595::s_nDataPrevious>:
20013de8:	00000000 	andeq	r0, r0, r0

20013dec <BitBanging595::s_nData>:
20013dec:	00000000 	andeq	r0, r0, r0

20013df0 <BitBanging595::s_pThis>:
20013df0:	00000000 	andeq	r0, r0, r0

20013df4 <last.0>:
20013df4:	00000000 	andeq	r0, r0, r0

20013df8 <s_micros>:
	...

20013e00 <set_timer>:
20013e00:	00000000 	andeq	r0, r0, r0

20013e04 <s_nSysTickMillis>:
20013e04:	00000000 	andeq	r0, r0, r0

20013e08 <enet_init_status>:
20013e08:	00000000 	andeq	r0, r0, r0

20013e0c <s_nAddress>:
20013e0c:	00000000 	andeq	r0, r0, r0

20013e10 <dma_current_ptp_rxdesc>:
20013e10:	00000000 	andeq	r0, r0, r0

20013e14 <dma_current_ptp_txdesc>:
20013e14:	00000000 	andeq	r0, r0, r0

20013e18 <dma_current_rxdesc>:
20013e18:	00000000 	andeq	r0, r0, r0

20013e1c <dma_current_txdesc>:
20013e1c:	00000000 	andeq	r0, r0, r0

20013e20 <enet_initpara>:
	...

20013e5c <rx_buff>:
	...

200179e4 <rxdesc_tab>:
	...

20017a84 <tx_buff>:
	...

2001866c <txdesc_tab>:
	...

Disassembly of section .heap:

2001d000 <heap_low>:
	...

Disassembly of section .stack:

2001e000 <_sp-0x2000>:
	...
