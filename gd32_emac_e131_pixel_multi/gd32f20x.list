
build_gd32/main.elf:     file format elf32-littlearm


Disassembly of section .vectors:

08007000 <__gVectors>:
 8007000:	20040000 	andcs	r0, r4, r0
 8007004:	0800857d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r8, sl, pc}
 8007008:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 800700c:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007010:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007014:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007018:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
	...
 800702c:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007030:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007034:	00000000 	andeq	r0, r0, r0
 8007038:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 800703c:	080138cd 	stmdaeq	r1, {r0, r2, r3, r6, r7, fp, ip, sp}
 8007040:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007044:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007048:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 800704c:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007050:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007054:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007058:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 800705c:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007060:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007064:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007068:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 800706c:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007070:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007074:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007078:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 800707c:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007080:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007084:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007088:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 800708c:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007090:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007094:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007098:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 800709c:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 80070a0:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 80070a4:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 80070a8:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 80070ac:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 80070b0:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 80070b4:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 80070b8:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 80070bc:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 80070c0:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 80070c4:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 80070c8:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 80070cc:	00000000 	andeq	r0, r0, r0
 80070d0:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 80070d4:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 80070d8:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 80070dc:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 80070e0:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 80070e4:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 80070e8:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 80070ec:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 80070f0:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 80070f4:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 80070f8:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 80070fc:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007100:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007104:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007108:	0800d685 	stmdaeq	r0, {r0, r2, r7, r9, sl, ip, lr, pc}
 800710c:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007110:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007114:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007118:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 800711c:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007120:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007124:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007128:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 800712c:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007130:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007134:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007138:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 800713c:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007140:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007144:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007148:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 800714c:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007150:	00000000 	andeq	r0, r0, r0
 8007154:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007158:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 800715c:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007160:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007164:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
	...
 8007178:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 800717c:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007180:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 8007184:	00000000 	andeq	r0, r0, r0
 8007188:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 800718c:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
	...
 80071a0:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}
 80071a4:	080085c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, pc}

Disassembly of section .text:

080071a8 <net_init>:
 80071a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80071ac:	460c      	mov	r4, r1
 80071ae:	4616      	mov	r6, r2
 80071b0:	9f06      	ldr	r7, [sp, #24]
 80071b2:	4a22      	ldr	r2, [pc, #136]	; (800723c <net_init+0x94>)
 80071b4:	461d      	mov	r5, r3
 80071b6:	1e43      	subs	r3, r0, #1
 80071b8:	3005      	adds	r0, #5
 80071ba:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 80071be:	4283      	cmp	r3, r0
 80071c0:	f802 1b01 	strb.w	r1, [r2], #1
 80071c4:	d1f9      	bne.n	80071ba <net_init+0x12>
 80071c6:	4623      	mov	r3, r4
 80071c8:	4a1d      	ldr	r2, [pc, #116]	; (8007240 <net_init+0x98>)
 80071ca:	f104 010c 	add.w	r1, r4, #12
 80071ce:	f813 0b01 	ldrb.w	r0, [r3], #1
 80071d2:	428b      	cmp	r3, r1
 80071d4:	f802 0b01 	strb.w	r0, [r2], #1
 80071d8:	d1f9      	bne.n	80071ce <net_init+0x26>
 80071da:	f04f 0800 	mov.w	r8, #0
 80071de:	4918      	ldr	r1, [pc, #96]	; (8007240 <net_init+0x98>)
 80071e0:	4816      	ldr	r0, [pc, #88]	; (800723c <net_init+0x94>)
 80071e2:	f000 f9a7 	bl	8007534 <ip_init>
 80071e6:	4815      	ldr	r0, [pc, #84]	; (800723c <net_init+0x94>)
 80071e8:	f000 f83c 	bl	8007264 <rfc3927_init>
 80071ec:	f887 8000 	strb.w	r8, [r7]
 80071f0:	782b      	ldrb	r3, [r5, #0]
 80071f2:	b163      	cbz	r3, 800720e <net_init+0x66>
 80071f4:	4632      	mov	r2, r6
 80071f6:	4912      	ldr	r1, [pc, #72]	; (8007240 <net_init+0x98>)
 80071f8:	4810      	ldr	r0, [pc, #64]	; (800723c <net_init+0x94>)
 80071fa:	f00a fbed 	bl	80119d8 <dhcp_client>
 80071fe:	4540      	cmp	r0, r8
 8007200:	da05      	bge.n	800720e <net_init+0x66>
 8007202:	480f      	ldr	r0, [pc, #60]	; (8007240 <net_init+0x98>)
 8007204:	f885 8000 	strb.w	r8, [r5]
 8007208:	f008 fd68 	bl	800fcdc <rfc3927>
 800720c:	7038      	strb	r0, [r7, #0]
 800720e:	490c      	ldr	r1, [pc, #48]	; (8007240 <net_init+0x98>)
 8007210:	480a      	ldr	r0, [pc, #40]	; (800723c <net_init+0x94>)
 8007212:	f000 f883 	bl	800731c <arp_init>
 8007216:	480a      	ldr	r0, [pc, #40]	; (8007240 <net_init+0x98>)
 8007218:	f00a fdfe 	bl	8011e18 <ip_set_ip>
 800721c:	f000 f82e 	bl	800727c <tcp_init>
 8007220:	4a07      	ldr	r2, [pc, #28]	; (8007240 <net_init+0x98>)
 8007222:	1e63      	subs	r3, r4, #1
 8007224:	340b      	adds	r4, #11
 8007226:	f812 1b01 	ldrb.w	r1, [r2], #1
 800722a:	f803 1f01 	strb.w	r1, [r3, #1]!
 800722e:	429c      	cmp	r4, r3
 8007230:	d1f9      	bne.n	8007226 <net_init+0x7e>
 8007232:	782a      	ldrb	r2, [r5, #0]
 8007234:	4b03      	ldr	r3, [pc, #12]	; (8007244 <net_init+0x9c>)
 8007236:	701a      	strb	r2, [r3, #0]
 8007238:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800723c:	20014e50 	andcs	r4, r1, r0, asr lr
 8007240:	20014e44 	andcs	r4, r1, r4, asr #28
 8007244:	20014e56 	andcs	r4, r1, r6, asr lr

08007248 <net_shutdown>:
 8007248:	b508      	push	{r3, lr}
 800724a:	f000 f97e 	bl	800754a <ip_shutdown>
 800724e:	4b04      	ldr	r3, [pc, #16]	; (8007260 <net_shutdown+0x18>)
 8007250:	781b      	ldrb	r3, [r3, #0]
 8007252:	b11b      	cbz	r3, 800725c <net_shutdown+0x14>
 8007254:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8007258:	f00a bcc6 	b.w	8011be8 <dhcp_client_release>
 800725c:	bd08      	pop	{r3, pc}
 800725e:	bf00      	nop
 8007260:	20014e56 	andcs	r4, r1, r6, asr lr

08007264 <rfc3927_init>:
 8007264:	4b04      	ldr	r3, [pc, #16]	; (8007278 <rfc3927_init+0x14>)
 8007266:	1d82      	adds	r2, r0, #6
 8007268:	4290      	cmp	r0, r2
 800726a:	d100      	bne.n	800726e <rfc3927_init+0xa>
 800726c:	4770      	bx	lr
 800726e:	f810 1b01 	ldrb.w	r1, [r0], #1
 8007272:	f803 1b01 	strb.w	r1, [r3], #1
 8007276:	e7f7      	b.n	8007268 <rfc3927_init+0x4>
 8007278:	20014e60 	andcs	r4, r1, r0, ror #28

0800727c <tcp_init>:
 800727c:	2206      	movs	r2, #6
 800727e:	b513      	push	{r0, r1, r4, lr}
 8007280:	4c0b      	ldr	r4, [pc, #44]	; (80072b0 <tcp_init+0x34>)
 8007282:	490c      	ldr	r1, [pc, #48]	; (80072b4 <tcp_init+0x38>)
 8007284:	18a0      	adds	r0, r4, r2
 8007286:	f008 fd83 	bl	800fd90 <memcpy.isra.0>
 800728a:	2308      	movs	r3, #8
 800728c:	2204      	movs	r2, #4
 800728e:	81a3      	strh	r3, [r4, #12]
 8007290:	4b09      	ldr	r3, [pc, #36]	; (80072b8 <tcp_init+0x3c>)
 8007292:	eb0d 0102 	add.w	r1, sp, r2
 8007296:	681b      	ldr	r3, [r3, #0]
 8007298:	f104 001a 	add.w	r0, r4, #26
 800729c:	9301      	str	r3, [sp, #4]
 800729e:	f008 fd77 	bl	800fd90 <memcpy.isra.0>
 80072a2:	2345      	movs	r3, #69	; 0x45
 80072a4:	81e3      	strh	r3, [r4, #14]
 80072a6:	4b05      	ldr	r3, [pc, #20]	; (80072bc <tcp_init+0x40>)
 80072a8:	6163      	str	r3, [r4, #20]
 80072aa:	b002      	add	sp, #8
 80072ac:	bd10      	pop	{r4, pc}
 80072ae:	bf00      	nop
 80072b0:	20015a28 	andcs	r5, r1, r8, lsr #20
 80072b4:	20014e50 	andcs	r4, r1, r0, asr lr
 80072b8:	20014e44 	andcs	r4, r1, r4, asr #28
 80072bc:	06400040 	strbeq	r0, [r0], -r0, asr #32

080072c0 <udp_init>:
 80072c0:	b570      	push	{r4, r5, r6, lr}
 80072c2:	2200      	movs	r2, #0
 80072c4:	2408      	movs	r4, #8
 80072c6:	460e      	mov	r6, r1
 80072c8:	4b0d      	ldr	r3, [pc, #52]	; (8007300 <udp_init+0x40>)
 80072ca:	490e      	ldr	r1, [pc, #56]	; (8007304 <udp_init+0x44>)
 80072cc:	3c01      	subs	r4, #1
 80072ce:	801a      	strh	r2, [r3, #0]
 80072d0:	805a      	strh	r2, [r3, #2]
 80072d2:	f841 2b04 	str.w	r2, [r1], #4
 80072d6:	f603 3394 	addw	r3, r3, #2964	; 0xb94
 80072da:	d1f7      	bne.n	80072cc <udp_init+0xc>
 80072dc:	2206      	movs	r2, #6
 80072de:	4d0a      	ldr	r5, [pc, #40]	; (8007308 <udp_init+0x48>)
 80072e0:	4b0a      	ldr	r3, [pc, #40]	; (800730c <udp_init+0x4c>)
 80072e2:	4601      	mov	r1, r0
 80072e4:	18a8      	adds	r0, r5, r2
 80072e6:	801c      	strh	r4, [r3, #0]
 80072e8:	f008 fed6 	bl	8010098 <memcpy.isra.0>
 80072ec:	4b08      	ldr	r3, [pc, #32]	; (8007310 <udp_init+0x50>)
 80072ee:	4630      	mov	r0, r6
 80072f0:	60eb      	str	r3, [r5, #12]
 80072f2:	4b08      	ldr	r3, [pc, #32]	; (8007314 <udp_init+0x54>)
 80072f4:	616b      	str	r3, [r5, #20]
 80072f6:	f008 fef7 	bl	80100e8 <udp_set_ip>
 80072fa:	852c      	strh	r4, [r5, #40]	; 0x28
 80072fc:	bd70      	pop	{r4, r5, r6, pc}
 80072fe:	bf00      	nop
 8007300:	20016044 	andcs	r6, r1, r4, asr #32
 8007304:	20016024 	andcs	r6, r1, r4, lsr #32
 8007308:	2001bce4 	andcs	fp, r1, r4, ror #25
 800730c:	20016020 	andcs	r6, r1, r0, lsr #32
 8007310:	00450008 	subeq	r0, r5, r8
 8007314:	11400040 	cmpne	r0, r0, asr #32

08007318 <udp_shutdown>:
 8007318:	4770      	bx	lr
	...

0800731c <arp_init>:
 800731c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007320:	4604      	mov	r4, r0
 8007322:	460d      	mov	r5, r1
 8007324:	f000 f876 	bl	8007414 <arp_cache_init>
 8007328:	2206      	movs	r2, #6
 800732a:	4621      	mov	r1, r4
 800732c:	482e      	ldr	r0, [pc, #184]	; (80073e8 <arp_init+0xcc>)
 800732e:	682f      	ldr	r7, [r5, #0]
 8007330:	f00a f9d6 	bl	80116e0 <memcpy.isra.0>
 8007334:	4b2d      	ldr	r3, [pc, #180]	; (80073ec <arp_init+0xd0>)
 8007336:	2507      	movs	r5, #7
 8007338:	461e      	mov	r6, r3
 800733a:	22ff      	movs	r2, #255	; 0xff
 800733c:	3d01      	subs	r5, #1
 800733e:	d146      	bne.n	80073ce <arp_init+0xb2>
 8007340:	4b2b      	ldr	r3, [pc, #172]	; (80073f0 <arp_init+0xd4>)
 8007342:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 80073f4 <arp_init+0xd8>
 8007346:	2206      	movs	r2, #6
 8007348:	e9c6 3803 	strd	r3, r8, [r6, #12]
 800734c:	f44f 7380 	mov.w	r3, #256	; 0x100
 8007350:	4621      	mov	r1, r4
 8007352:	4829      	ldr	r0, [pc, #164]	; (80073f8 <arp_init+0xdc>)
 8007354:	82b3      	strh	r3, [r6, #20]
 8007356:	f00a f9c3 	bl	80116e0 <memcpy.isra.0>
 800735a:	2307      	movs	r3, #7
 800735c:	4a27      	ldr	r2, [pc, #156]	; (80073fc <arp_init+0xe0>)
 800735e:	61f7      	str	r7, [r6, #28]
 8007360:	3b01      	subs	r3, #1
 8007362:	d137      	bne.n	80073d4 <arp_init+0xb8>
 8007364:	2206      	movs	r2, #6
 8007366:	4621      	mov	r1, r4
 8007368:	4825      	ldr	r0, [pc, #148]	; (8007400 <arp_init+0xe4>)
 800736a:	f8c6 7026 	str.w	r7, [r6, #38]	; 0x26
 800736e:	f00a f9b7 	bl	80116e0 <memcpy.isra.0>
 8007372:	4a24      	ldr	r2, [pc, #144]	; (8007404 <arp_init+0xe8>)
 8007374:	2306      	movs	r3, #6
 8007376:	4615      	mov	r5, r2
 8007378:	21ff      	movs	r1, #255	; 0xff
 800737a:	3b01      	subs	r3, #1
 800737c:	d22d      	bcs.n	80073da <arp_init+0xbe>
 800737e:	4b1c      	ldr	r3, [pc, #112]	; (80073f0 <arp_init+0xd4>)
 8007380:	2206      	movs	r2, #6
 8007382:	e9c5 3803 	strd	r3, r8, [r5, #12]
 8007386:	f44f 7380 	mov.w	r3, #256	; 0x100
 800738a:	4621      	mov	r1, r4
 800738c:	481e      	ldr	r0, [pc, #120]	; (8007408 <arp_init+0xec>)
 800738e:	82ab      	strh	r3, [r5, #20]
 8007390:	f00a f9a6 	bl	80116e0 <memcpy.isra.0>
 8007394:	2307      	movs	r3, #7
 8007396:	2100      	movs	r1, #0
 8007398:	4a1c      	ldr	r2, [pc, #112]	; (800740c <arp_init+0xf0>)
 800739a:	61ef      	str	r7, [r5, #28]
 800739c:	3b01      	subs	r3, #1
 800739e:	d11f      	bne.n	80073e0 <arp_init+0xc4>
 80073a0:	2206      	movs	r2, #6
 80073a2:	4d1b      	ldr	r5, [pc, #108]	; (8007410 <arp_init+0xf4>)
 80073a4:	4621      	mov	r1, r4
 80073a6:	18a8      	adds	r0, r5, r2
 80073a8:	f00a f99a 	bl	80116e0 <memcpy.isra.0>
 80073ac:	4b10      	ldr	r3, [pc, #64]	; (80073f0 <arp_init+0xd4>)
 80073ae:	4621      	mov	r1, r4
 80073b0:	e9c5 3803 	strd	r3, r8, [r5, #12]
 80073b4:	f44f 7300 	mov.w	r3, #512	; 0x200
 80073b8:	f105 0016 	add.w	r0, r5, #22
 80073bc:	2206      	movs	r2, #6
 80073be:	82ab      	strh	r3, [r5, #20]
 80073c0:	f00a f98e 	bl	80116e0 <memcpy.isra.0>
 80073c4:	61ef      	str	r7, [r5, #28]
 80073c6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80073ca:	f00a b993 	b.w	80116f4 <arp_announce>
 80073ce:	f803 2b01 	strb.w	r2, [r3], #1
 80073d2:	e7b3      	b.n	800733c <arp_init+0x20>
 80073d4:	f802 5b01 	strb.w	r5, [r2], #1
 80073d8:	e7c2      	b.n	8007360 <arp_init+0x44>
 80073da:	f802 1b01 	strb.w	r1, [r2], #1
 80073de:	e7cc      	b.n	800737a <arp_init+0x5e>
 80073e0:	f802 1b01 	strb.w	r1, [r2], #1
 80073e4:	e7da      	b.n	800739c <arp_init+0x80>
 80073e6:	bf00      	nop
 80073e8:	2001c77a 	andcs	ip, r1, sl, ror r7
 80073ec:	2001c774 	andcs	ip, r1, r4, ror r7
 80073f0:	01000608 	tsteq	r0, r8, lsl #12
 80073f4:	04060008 	streq	r0, [r6], #-8
 80073f8:	2001c78a 	andcs	ip, r1, sl, lsl #15
 80073fc:	2001c794 	mulcs	r1, r4, r7
 8007400:	2001c7d2 	ldrdcs	ip, [r1], -r2
 8007404:	2001c7cc 	andcs	ip, r1, ip, asr #15
 8007408:	2001c7e2 	andcs	ip, r1, r2, ror #15
 800740c:	2001c7ec 	andcs	ip, r1, ip, ror #15
 8007410:	2001c7a0 	andcs	ip, r1, r0, lsr #15

08007414 <arp_cache_init>:
 8007414:	2300      	movs	r3, #0
 8007416:	4618      	mov	r0, r3
 8007418:	4a09      	ldr	r2, [pc, #36]	; (8007440 <arp_cache_init+0x2c>)
 800741a:	b510      	push	{r4, lr}
 800741c:	8013      	strh	r3, [r2, #0]
 800741e:	4a09      	ldr	r2, [pc, #36]	; (8007444 <arp_cache_init+0x30>)
 8007420:	4611      	mov	r1, r2
 8007422:	f842 0c04 	str.w	r0, [r2, #-4]
 8007426:	1d94      	adds	r4, r2, #6
 8007428:	42a1      	cmp	r1, r4
 800742a:	d105      	bne.n	8007438 <arp_cache_init+0x24>
 800742c:	3303      	adds	r3, #3
 800742e:	2b60      	cmp	r3, #96	; 0x60
 8007430:	f102 020c 	add.w	r2, r2, #12
 8007434:	d1f4      	bne.n	8007420 <arp_cache_init+0xc>
 8007436:	bd10      	pop	{r4, pc}
 8007438:	f801 0b01 	strb.w	r0, [r1], #1
 800743c:	e7f4      	b.n	8007428 <arp_cache_init+0x14>
 800743e:	bf00      	nop
 8007440:	2001c978 	andcs	ip, r1, r8, ror r9
 8007444:	2001c7fc 	strdcs	ip, [r1], -ip	; <UNPREDICTABLE>

08007448 <igmp_init>:
 8007448:	2200      	movs	r2, #0
 800744a:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800744e:	4605      	mov	r5, r0
 8007450:	4608      	mov	r0, r1
 8007452:	4611      	mov	r1, r2
 8007454:	4b23      	ldr	r3, [pc, #140]	; (80074e4 <igmp_init+0x9c>)
 8007456:	f103 0408 	add.w	r4, r3, #8
 800745a:	42a3      	cmp	r3, r4
 800745c:	d13e      	bne.n	80074dc <igmp_init+0x94>
 800745e:	3201      	adds	r2, #1
 8007460:	2a24      	cmp	r2, #36	; 0x24
 8007462:	d1f8      	bne.n	8007456 <igmp_init+0xe>
 8007464:	2600      	movs	r6, #0
 8007466:	4b20      	ldr	r3, [pc, #128]	; (80074e8 <igmp_init+0xa0>)
 8007468:	4c20      	ldr	r4, [pc, #128]	; (80074ec <igmp_init+0xa4>)
 800746a:	601e      	str	r6, [r3, #0]
 800746c:	4b20      	ldr	r3, [pc, #128]	; (80074f0 <igmp_init+0xa8>)
 800746e:	f44f 5700 	mov.w	r7, #8192	; 0x2000
 8007472:	801e      	strh	r6, [r3, #0]
 8007474:	f00a fc30 	bl	8011cd8 <igmp_set_ip>
 8007478:	2201      	movs	r2, #1
 800747a:	4b1e      	ldr	r3, [pc, #120]	; (80074f4 <igmp_init+0xac>)
 800747c:	4629      	mov	r1, r5
 800747e:	801a      	strh	r2, [r3, #0]
 8007480:	225e      	movs	r2, #94	; 0x5e
 8007482:	709a      	strb	r2, [r3, #2]
 8007484:	2206      	movs	r2, #6
 8007486:	18a0      	adds	r0, r4, r2
 8007488:	f00a fbdc 	bl	8011c44 <memcpy.isra.0>
 800748c:	f240 4394 	movw	r3, #1172	; 0x494
 8007490:	8463      	strh	r3, [r4, #34]	; 0x22
 8007492:	2316      	movs	r3, #22
 8007494:	f8df 9060 	ldr.w	r9, [pc, #96]	; 80074f8 <igmp_init+0xb0>
 8007498:	f8df 8060 	ldr.w	r8, [pc, #96]	; 80074fc <igmp_init+0xb4>
 800749c:	84e3      	strh	r3, [r4, #38]	; 0x26
 800749e:	f8c4 9014 	str.w	r9, [r4, #20]
 80074a2:	4b17      	ldr	r3, [pc, #92]	; (8007500 <igmp_init+0xb8>)
 80074a4:	f8c4 800c 	str.w	r8, [r4, #12]
 80074a8:	8227      	strh	r7, [r4, #16]
 80074aa:	84a6      	strh	r6, [r4, #36]	; 0x24
 80074ac:	4c15      	ldr	r4, [pc, #84]	; (8007504 <igmp_init+0xbc>)
 80074ae:	2206      	movs	r2, #6
 80074b0:	6023      	str	r3, [r4, #0]
 80074b2:	f44f 7300 	mov.w	r3, #512	; 0x200
 80074b6:	18a0      	adds	r0, r4, r2
 80074b8:	80a3      	strh	r3, [r4, #4]
 80074ba:	4629      	mov	r1, r5
 80074bc:	f00a fbc2 	bl	8011c44 <memcpy.isra.0>
 80074c0:	23e0      	movs	r3, #224	; 0xe0
 80074c2:	83e3      	strh	r3, [r4, #30]
 80074c4:	f44f 13b8 	mov.w	r3, #1507328	; 0x170000
 80074c8:	4a0f      	ldr	r2, [pc, #60]	; (8007508 <igmp_init+0xc0>)
 80074ca:	f8c4 9014 	str.w	r9, [r4, #20]
 80074ce:	e9c4 2308 	strd	r2, r3, [r4, #32]
 80074d2:	f8c4 800c 	str.w	r8, [r4, #12]
 80074d6:	8227      	strh	r7, [r4, #16]
 80074d8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80074dc:	f803 1b01 	strb.w	r1, [r3], #1
 80074e0:	e7bb      	b.n	800745a <igmp_init+0x12>
 80074e2:	bf00      	nop
 80074e4:	2001cbb0 			; <UNDEFINED> instruction: 0x2001cbb0
 80074e8:	2001ccd4 	ldrdcs	ip, [r1], -r4
 80074ec:	2001cd10 	andcs	ip, r1, r0, lsl sp
 80074f0:	2001ccd0 	ldrdcs	ip, [r1], -r0
 80074f4:	2001cd08 	andcs	ip, r1, r8, lsl #26
 80074f8:	02010040 	andeq	r0, r1, #64	; 0x40
 80074fc:	00460008 	subeq	r0, r6, r8
 8007500:	005e0001 	subseq	r0, lr, r1
 8007504:	2001ccd8 	ldrdcs	ip, [r1], -r8
 8007508:	04940200 	ldreq	r0, [r4], #512	; 0x200

0800750c <igmp_shutdown>:
 800750c:	b570      	push	{r4, r5, r6, lr}
 800750e:	2500      	movs	r5, #0
 8007510:	462e      	mov	r6, r5
 8007512:	4c07      	ldr	r4, [pc, #28]	; (8007530 <igmp_shutdown+0x24>)
 8007514:	6820      	ldr	r0, [r4, #0]
 8007516:	b120      	cbz	r0, 8007522 <igmp_shutdown+0x16>
 8007518:	f00a fc3a 	bl	8011d90 <igmp_leave>
 800751c:	6026      	str	r6, [r4, #0]
 800751e:	7166      	strb	r6, [r4, #5]
 8007520:	7126      	strb	r6, [r4, #4]
 8007522:	3501      	adds	r5, #1
 8007524:	2d24      	cmp	r5, #36	; 0x24
 8007526:	f104 0408 	add.w	r4, r4, #8
 800752a:	d1f3      	bne.n	8007514 <igmp_shutdown+0x8>
 800752c:	bd70      	pop	{r4, r5, r6, pc}
 800752e:	bf00      	nop
 8007530:	2001cbb0 			; <UNDEFINED> instruction: 0x2001cbb0

08007534 <ip_init>:
 8007534:	b538      	push	{r3, r4, r5, lr}
 8007536:	4604      	mov	r4, r0
 8007538:	460d      	mov	r5, r1
 800753a:	f7ff fec1 	bl	80072c0 <udp_init>
 800753e:	4629      	mov	r1, r5
 8007540:	4620      	mov	r0, r4
 8007542:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8007546:	f7ff bf7f 	b.w	8007448 <igmp_init>

0800754a <ip_shutdown>:
 800754a:	b508      	push	{r3, lr}
 800754c:	f7ff ffde 	bl	800750c <igmp_shutdown>
 8007550:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8007554:	f7ff bee0 	b.w	8007318 <udp_shutdown>

08007558 <console_init>:
 8007558:	b508      	push	{r3, lr}
 800755a:	f00c f959 	bl	8013810 <uart0_init>
 800755e:	4804      	ldr	r0, [pc, #16]	; (8007570 <console_init+0x18>)
 8007560:	f00c f986 	bl	8013870 <uart0_puts>
 8007564:	4803      	ldr	r0, [pc, #12]	; (8007574 <console_init+0x1c>)
 8007566:	f00c f983 	bl	8013870 <uart0_puts>
 800756a:	2000      	movs	r0, #0
 800756c:	bd08      	pop	{r3, pc}
 800756e:	bf00      	nop
 8007570:	0801581a 	stmdaeq	r1, {r1, r3, r4, fp, ip, lr}
 8007574:	08017dcc 	stmdaeq	r1, {r2, r3, r6, r7, r8, sl, fp, ip, sp, lr}

08007578 <net_handle>:
 8007578:	b510      	push	{r4, lr}
 800757a:	4c0c      	ldr	r4, [pc, #48]	; (80075ac <net_handle+0x34>)
 800757c:	4620      	mov	r0, r4
 800757e:	f00d f843 	bl	8014608 <emac_eth_recv>
 8007582:	2800      	cmp	r0, #0
 8007584:	dd07      	ble.n	8007596 <net_handle+0x1e>
 8007586:	6820      	ldr	r0, [r4, #0]
 8007588:	8983      	ldrh	r3, [r0, #12]
 800758a:	2b08      	cmp	r3, #8
 800758c:	d107      	bne.n	800759e <net_handle+0x26>
 800758e:	f000 fa6f 	bl	8007a70 <ip_handle>
 8007592:	f00d f84d 	bl	8014630 <emac_free_pkt>
 8007596:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800759a:	f008 bb8f 	b.w	800fcbc <net_timers_run>
 800759e:	f5b3 6fc1 	cmp.w	r3, #1544	; 0x608
 80075a2:	d1f6      	bne.n	8007592 <net_handle+0x1a>
 80075a4:	f000 fa08 	bl	80079b8 <arp_handle>
 80075a8:	e7f3      	b.n	8007592 <net_handle+0x1a>
 80075aa:	bf00      	nop
 80075ac:	20014e58 	andcs	r4, r1, r8, asr lr

080075b0 <tcp_handle>:
 80075b0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80075b4:	4605      	mov	r5, r0
 80075b6:	8c43      	ldrh	r3, [r0, #34]	; 0x22
 80075b8:	f8b0 8010 	ldrh.w	r8, [r0, #16]
 80075bc:	ba5b      	rev16	r3, r3
 80075be:	8443      	strh	r3, [r0, #34]	; 0x22
 80075c0:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 80075c2:	f890 902e 	ldrb.w	r9, [r0, #46]	; 0x2e
 80075c6:	ba5b      	rev16	r3, r3
 80075c8:	8483      	strh	r3, [r0, #36]	; 0x24
 80075ca:	f008 fbeb 	bl	800fda4 <_bswap32>
 80075ce:	8e2b      	ldrh	r3, [r5, #48]	; 0x30
 80075d0:	4ca5      	ldr	r4, [pc, #660]	; (8007868 <tcp_handle+0x2b8>)
 80075d2:	ba5b      	rev16	r3, r3
 80075d4:	862b      	strh	r3, [r5, #48]	; 0x30
 80075d6:	8eab      	ldrh	r3, [r5, #52]	; 0x34
 80075d8:	8822      	ldrh	r2, [r4, #0]
 80075da:	ba5b      	rev16	r3, r3
 80075dc:	86ab      	strh	r3, [r5, #52]	; 0x34
 80075de:	8cab      	ldrh	r3, [r5, #36]	; 0x24
 80075e0:	429a      	cmp	r2, r3
 80075e2:	d14d      	bne.n	8007680 <tcp_handle+0xd0>
 80075e4:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 80075e8:	2b01      	cmp	r3, #1
 80075ea:	d00d      	beq.n	8007608 <tcp_handle+0x58>
 80075ec:	2204      	movs	r2, #4
 80075ee:	4668      	mov	r0, sp
 80075f0:	f105 011a 	add.w	r1, r5, #26
 80075f4:	f008 fbcc 	bl	800fd90 <memcpy.isra.0>
 80075f8:	8862      	ldrh	r2, [r4, #2]
 80075fa:	8c6b      	ldrh	r3, [r5, #34]	; 0x22
 80075fc:	429a      	cmp	r2, r3
 80075fe:	d13f      	bne.n	8007680 <tcp_handle+0xd0>
 8007600:	6862      	ldr	r2, [r4, #4]
 8007602:	9b00      	ldr	r3, [sp, #0]
 8007604:	429a      	cmp	r2, r3
 8007606:	d13b      	bne.n	8007680 <tcp_handle+0xd0>
 8007608:	2204      	movs	r2, #4
 800760a:	f105 012a 	add.w	r1, r5, #42	; 0x2a
 800760e:	eb0d 0002 	add.w	r0, sp, r2
 8007612:	f008 fbbd 	bl	800fd90 <memcpy.isra.0>
 8007616:	2204      	movs	r2, #4
 8007618:	f105 0126 	add.w	r1, r5, #38	; 0x26
 800761c:	eb0d 0002 	add.w	r0, sp, r2
 8007620:	9e01      	ldr	r6, [sp, #4]
 8007622:	f008 fbb5 	bl	800fd90 <memcpy.isra.0>
 8007626:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 800762a:	9f01      	ldr	r7, [sp, #4]
 800762c:	2a01      	cmp	r2, #1
 800762e:	f8b5 a030 	ldrh.w	sl, [r5, #48]	; 0x30
 8007632:	d01b      	beq.n	800766c <tcp_handle+0xbc>
 8007634:	1ed3      	subs	r3, r2, #3
 8007636:	2b07      	cmp	r3, #7
 8007638:	d822      	bhi.n	8007680 <tcp_handle+0xd0>
 800763a:	fa98 f198 	rev16.w	r1, r8
 800763e:	f64f 78ec 	movw	r8, #65516	; 0xffec
 8007642:	ea4f 1319 	mov.w	r3, r9, lsr #4
 8007646:	eba8 0883 	sub.w	r8, r8, r3, lsl #2
 800764a:	4488      	add	r8, r1
 800764c:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 800764e:	f895 002f 	ldrb.w	r0, [r5, #47]	; 0x2f
 8007652:	ea4f 0983 	mov.w	r9, r3, lsl #2
 8007656:	fa1f f888 	uxth.w	r8, r8
 800765a:	2900      	cmp	r1, #0
 800765c:	d142      	bne.n	80076e4 <tcp_handle+0x134>
 800765e:	f1b8 0f00 	cmp.w	r8, #0
 8007662:	d16b      	bne.n	800773c <tcp_handle+0x18c>
 8007664:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007666:	42bb      	cmp	r3, r7
 8007668:	d168      	bne.n	800773c <tcp_handle+0x18c>
 800766a:	e048      	b.n	80076fe <tcp_handle+0x14e>
 800766c:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 8007670:	075a      	lsls	r2, r3, #29
 8007672:	d405      	bmi.n	8007680 <tcp_handle+0xd0>
 8007674:	06d8      	lsls	r0, r3, #27
 8007676:	d506      	bpl.n	8007686 <tcp_handle+0xd6>
 8007678:	4628      	mov	r0, r5
 800767a:	497b      	ldr	r1, [pc, #492]	; (8007868 <tcp_handle+0x2b8>)
 800767c:	f008 fc5e 	bl	800ff3c <_send_reset>
 8007680:	b004      	add	sp, #16
 8007682:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007686:	0799      	lsls	r1, r3, #30
 8007688:	d5fa      	bpl.n	8007680 <tcp_handle+0xd0>
 800768a:	f895 2023 	ldrb.w	r2, [r5, #35]	; 0x23
 800768e:	f895 3022 	ldrb.w	r3, [r5, #34]	; 0x22
 8007692:	4668      	mov	r0, sp
 8007694:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8007698:	f105 011a 	add.w	r1, r5, #26
 800769c:	2204      	movs	r2, #4
 800769e:	8063      	strh	r3, [r4, #2]
 80076a0:	f008 fb76 	bl	800fd90 <memcpy.isra.0>
 80076a4:	2206      	movs	r2, #6
 80076a6:	9b00      	ldr	r3, [sp, #0]
 80076a8:	18a9      	adds	r1, r5, r2
 80076aa:	4870      	ldr	r0, [pc, #448]	; (800786c <tcp_handle+0x2bc>)
 80076ac:	6063      	str	r3, [r4, #4]
 80076ae:	f008 fb6f 	bl	800fd90 <memcpy.isra.0>
 80076b2:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80076b4:	1c7b      	adds	r3, r7, #1
 80076b6:	e9cd 2301 	strd	r2, r3, [sp, #4]
 80076ba:	6363      	str	r3, [r4, #52]	; 0x34
 80076bc:	2312      	movs	r3, #18
 80076be:	486a      	ldr	r0, [pc, #424]	; (8007868 <tcp_handle+0x2b8>)
 80076c0:	a901      	add	r1, sp, #4
 80076c2:	f88d 300c 	strb.w	r3, [sp, #12]
 80076c6:	e9c4 7608 	strd	r7, r6, [r4, #32]
 80076ca:	63e7      	str	r7, [r4, #60]	; 0x3c
 80076cc:	f8c4 a018 	str.w	sl, [r4, #24]
 80076d0:	f008 fb8e 	bl	800fdf0 <_tcp_send_package>
 80076d4:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80076d6:	1c5a      	adds	r2, r3, #1
 80076d8:	e9c4 3204 	strd	r3, r2, [r4, #16]
 80076dc:	2303      	movs	r3, #3
 80076de:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 80076e2:	e7cd      	b.n	8007680 <tcp_handle+0xd0>
 80076e4:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80076e6:	eba3 0c07 	sub.w	ip, r3, r7
 80076ea:	f1b8 0f00 	cmp.w	r8, #0
 80076ee:	d10d      	bne.n	800770c <tcp_handle+0x15c>
 80076f0:	f1bc 0f00 	cmp.w	ip, #0
 80076f4:	dc22      	bgt.n	800773c <tcp_handle+0x18c>
 80076f6:	1afb      	subs	r3, r7, r3
 80076f8:	1a5b      	subs	r3, r3, r1
 80076fa:	2b00      	cmp	r3, #0
 80076fc:	da1e      	bge.n	800773c <tcp_handle+0x18c>
 80076fe:	0743      	lsls	r3, r0, #29
 8007700:	d530      	bpl.n	8007764 <tcp_handle+0x1b4>
 8007702:	8821      	ldrh	r1, [r4, #0]
 8007704:	4858      	ldr	r0, [pc, #352]	; (8007868 <tcp_handle+0x2b8>)
 8007706:	f008 fb29 	bl	800fd5c <_init_tcb>
 800770a:	e7b9      	b.n	8007680 <tcp_handle+0xd0>
 800770c:	f1bc 0f00 	cmp.w	ip, #0
 8007710:	dc06      	bgt.n	8007720 <tcp_handle+0x170>
 8007712:	eba7 0c03 	sub.w	ip, r7, r3
 8007716:	ebac 0c01 	sub.w	ip, ip, r1
 800771a:	f1bc 0f00 	cmp.w	ip, #0
 800771e:	dbee      	blt.n	80076fe <tcp_handle+0x14e>
 8007720:	eb08 0c07 	add.w	ip, r8, r7
 8007724:	f103 0e01 	add.w	lr, r3, #1
 8007728:	ebae 0e0c 	sub.w	lr, lr, ip
 800772c:	f1be 0f00 	cmp.w	lr, #0
 8007730:	dc04      	bgt.n	800773c <tcp_handle+0x18c>
 8007732:	43db      	mvns	r3, r3
 8007734:	1a5b      	subs	r3, r3, r1
 8007736:	eb13 0f0c 	cmn.w	r3, ip
 800773a:	d4e0      	bmi.n	80076fe <tcp_handle+0x14e>
 800773c:	0742      	lsls	r2, r0, #29
 800773e:	d505      	bpl.n	800774c <tcp_handle+0x19c>
 8007740:	8821      	ldrh	r1, [r4, #0]
 8007742:	4849      	ldr	r0, [pc, #292]	; (8007868 <tcp_handle+0x2b8>)
 8007744:	f008 fb0a 	bl	800fd5c <_init_tcb>
 8007748:	2301      	movs	r3, #1
 800774a:	e7c8      	b.n	80076de <tcp_handle+0x12e>
 800774c:	6963      	ldr	r3, [r4, #20]
 800774e:	9301      	str	r3, [sp, #4]
 8007750:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8007752:	9302      	str	r3, [sp, #8]
 8007754:	2310      	movs	r3, #16
 8007756:	4844      	ldr	r0, [pc, #272]	; (8007868 <tcp_handle+0x2b8>)
 8007758:	a901      	add	r1, sp, #4
 800775a:	f88d 300c 	strb.w	r3, [sp, #12]
 800775e:	f008 fb47 	bl	800fdf0 <_tcp_send_package>
 8007762:	e78d      	b.n	8007680 <tcp_handle+0xd0>
 8007764:	0781      	lsls	r1, r0, #30
 8007766:	d505      	bpl.n	8007774 <tcp_handle+0x1c4>
 8007768:	2a03      	cmp	r2, #3
 800776a:	d0ed      	beq.n	8007748 <tcp_handle+0x198>
 800776c:	4628      	mov	r0, r5
 800776e:	493e      	ldr	r1, [pc, #248]	; (8007868 <tcp_handle+0x2b8>)
 8007770:	f008 fbe4 	bl	800ff3c <_send_reset>
 8007774:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 8007778:	06da      	lsls	r2, r3, #27
 800777a:	d581      	bpl.n	8007680 <tcp_handle+0xd0>
 800777c:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8007780:	3b03      	subs	r3, #3
 8007782:	2b07      	cmp	r3, #7
 8007784:	d818      	bhi.n	80077b8 <tcp_handle+0x208>
 8007786:	e8df f003 	tbb	[pc, r3]
 800778a:	75757504 	ldrbvc	r7, [r5, #-1284]!	; 0xfffffafc
 800778e:	a59c7575 	ldrge	r7, [ip, #1397]	; 0x575
 8007792:	6923      	ldr	r3, [r4, #16]
 8007794:	1b9b      	subs	r3, r3, r6
 8007796:	2b00      	cmp	r3, #0
 8007798:	dc0a      	bgt.n	80077b0 <tcp_handle+0x200>
 800779a:	6963      	ldr	r3, [r4, #20]
 800779c:	1af3      	subs	r3, r6, r3
 800779e:	2b00      	cmp	r3, #0
 80077a0:	dc06      	bgt.n	80077b0 <tcp_handle+0x200>
 80077a2:	2304      	movs	r3, #4
 80077a4:	e9c4 7608 	strd	r7, r6, [r4, #32]
 80077a8:	f8c4 a018 	str.w	sl, [r4, #24]
 80077ac:	6126      	str	r6, [r4, #16]
 80077ae:	e796      	b.n	80076de <tcp_handle+0x12e>
 80077b0:	4628      	mov	r0, r5
 80077b2:	492d      	ldr	r1, [pc, #180]	; (8007868 <tcp_handle+0x2b8>)
 80077b4:	f008 fbc2 	bl	800ff3c <_send_reset>
 80077b8:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 80077bc:	3b04      	subs	r3, #4
 80077be:	2b02      	cmp	r3, #2
 80077c0:	d830      	bhi.n	8007824 <tcp_handle+0x274>
 80077c2:	f1b8 0f00 	cmp.w	r8, #0
 80077c6:	d02d      	beq.n	8007824 <tcp_handle+0x274>
 80077c8:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80077ca:	42bb      	cmp	r3, r7
 80077cc:	f040 8091 	bne.w	80078f2 <tcp_handle+0x342>
 80077d0:	f240 53b6 	movw	r3, #1462	; 0x5b6
 80077d4:	f8df a098 	ldr.w	sl, [pc, #152]	; 8007870 <tcp_handle+0x2c0>
 80077d8:	f105 0122 	add.w	r1, r5, #34	; 0x22
 80077dc:	f8ba 7000 	ldrh.w	r7, [sl]
 80077e0:	4642      	mov	r2, r8
 80077e2:	435f      	muls	r7, r3
 80077e4:	1d38      	adds	r0, r7, #4
 80077e6:	4449      	add	r1, r9
 80077e8:	4450      	add	r0, sl
 80077ea:	f008 fad1 	bl	800fd90 <memcpy.isra.0>
 80077ee:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 80077f0:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80077f2:	f2a2 52b4 	subw	r2, r2, #1460	; 0x5b4
 80077f6:	8722      	strh	r2, [r4, #56]	; 0x38
 80077f8:	6962      	ldr	r2, [r4, #20]
 80077fa:	4443      	add	r3, r8
 80077fc:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8007800:	6363      	str	r3, [r4, #52]	; 0x34
 8007802:	2310      	movs	r3, #16
 8007804:	4457      	add	r7, sl
 8007806:	4818      	ldr	r0, [pc, #96]	; (8007868 <tcp_handle+0x2b8>)
 8007808:	f8a7 85b8 	strh.w	r8, [r7, #1464]	; 0x5b8
 800780c:	a901      	add	r1, sp, #4
 800780e:	f88d 300c 	strb.w	r3, [sp, #12]
 8007812:	f008 faed 	bl	800fdf0 <_tcp_send_package>
 8007816:	f8ba 3000 	ldrh.w	r3, [sl]
 800781a:	3301      	adds	r3, #1
 800781c:	f003 0301 	and.w	r3, r3, #1
 8007820:	f8aa 3000 	strh.w	r3, [sl]
 8007824:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8007828:	2b02      	cmp	r3, #2
 800782a:	f67f af29 	bls.w	8007680 <tcp_handle+0xd0>
 800782e:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 8007832:	07db      	lsls	r3, r3, #31
 8007834:	f57f af24 	bpl.w	8007680 <tcp_handle+0xd0>
 8007838:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800783a:	6962      	ldr	r2, [r4, #20]
 800783c:	3301      	adds	r3, #1
 800783e:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8007842:	6363      	str	r3, [r4, #52]	; 0x34
 8007844:	2310      	movs	r3, #16
 8007846:	4808      	ldr	r0, [pc, #32]	; (8007868 <tcp_handle+0x2b8>)
 8007848:	a901      	add	r1, sp, #4
 800784a:	f88d 300c 	strb.w	r3, [sp, #12]
 800784e:	f008 facf 	bl	800fdf0 <_tcp_send_package>
 8007852:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8007856:	2b05      	cmp	r3, #5
 8007858:	d053      	beq.n	8007902 <tcp_handle+0x352>
 800785a:	d84d      	bhi.n	80078f8 <tcp_handle+0x348>
 800785c:	3b03      	subs	r3, #3
 800785e:	2b01      	cmp	r3, #1
 8007860:	f63f af0e 	bhi.w	8007680 <tcp_handle+0xd0>
 8007864:	2307      	movs	r3, #7
 8007866:	e73a      	b.n	80076de <tcp_handle+0x12e>
 8007868:	200159e4 	andcs	r5, r1, r4, ror #19
 800786c:	200159ec 	andcs	r5, r1, ip, ror #19
 8007870:	20014e74 	andcs	r4, r1, r4, ror lr
 8007874:	6923      	ldr	r3, [r4, #16]
 8007876:	1b99      	subs	r1, r3, r6
 8007878:	d513      	bpl.n	80078a2 <tcp_handle+0x2f2>
 800787a:	6962      	ldr	r2, [r4, #20]
 800787c:	1ab2      	subs	r2, r6, r2
 800787e:	2a00      	cmp	r2, #0
 8007880:	dc0f      	bgt.n	80078a2 <tcp_handle+0x2f2>
 8007882:	6126      	str	r6, [r4, #16]
 8007884:	6a23      	ldr	r3, [r4, #32]
 8007886:	1bda      	subs	r2, r3, r7
 8007888:	2a00      	cmp	r2, #0
 800788a:	db05      	blt.n	8007898 <tcp_handle+0x2e8>
 800788c:	42bb      	cmp	r3, r7
 800788e:	d193      	bne.n	80077b8 <tcp_handle+0x208>
 8007890:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007892:	1b9b      	subs	r3, r3, r6
 8007894:	2b00      	cmp	r3, #0
 8007896:	dc8f      	bgt.n	80077b8 <tcp_handle+0x208>
 8007898:	e9c4 7608 	strd	r7, r6, [r4, #32]
 800789c:	f8c4 a018 	str.w	sl, [r4, #24]
 80078a0:	e78a      	b.n	80077b8 <tcp_handle+0x208>
 80078a2:	1af3      	subs	r3, r6, r3
 80078a4:	2b00      	cmp	r3, #0
 80078a6:	dc06      	bgt.n	80078b6 <tcp_handle+0x306>
 80078a8:	2900      	cmp	r1, #0
 80078aa:	dc85      	bgt.n	80077b8 <tcp_handle+0x208>
 80078ac:	6963      	ldr	r3, [r4, #20]
 80078ae:	1af3      	subs	r3, r6, r3
 80078b0:	2b00      	cmp	r3, #0
 80078b2:	dc81      	bgt.n	80077b8 <tcp_handle+0x208>
 80078b4:	e7e6      	b.n	8007884 <tcp_handle+0x2d4>
 80078b6:	6963      	ldr	r3, [r4, #20]
 80078b8:	1b9a      	subs	r2, r3, r6
 80078ba:	2a00      	cmp	r2, #0
 80078bc:	f6bf af7c 	bge.w	80077b8 <tcp_handle+0x208>
 80078c0:	e745      	b.n	800774e <tcp_handle+0x19e>
 80078c2:	6963      	ldr	r3, [r4, #20]
 80078c4:	42b3      	cmp	r3, r6
 80078c6:	f47f af77 	bne.w	80077b8 <tcp_handle+0x208>
 80078ca:	8821      	ldrh	r1, [r4, #0]
 80078cc:	480f      	ldr	r0, [pc, #60]	; (800790c <tcp_handle+0x35c>)
 80078ce:	f008 fa45 	bl	800fd5c <_init_tcb>
 80078d2:	e771      	b.n	80077b8 <tcp_handle+0x208>
 80078d4:	6963      	ldr	r3, [r4, #20]
 80078d6:	42b3      	cmp	r3, r6
 80078d8:	f47f af6e 	bne.w	80077b8 <tcp_handle+0x208>
 80078dc:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80078de:	480b      	ldr	r0, [pc, #44]	; (800790c <tcp_handle+0x35c>)
 80078e0:	9302      	str	r3, [sp, #8]
 80078e2:	2310      	movs	r3, #16
 80078e4:	a901      	add	r1, sp, #4
 80078e6:	9601      	str	r6, [sp, #4]
 80078e8:	f88d 300c 	strb.w	r3, [sp, #12]
 80078ec:	f008 fa80 	bl	800fdf0 <_tcp_send_package>
 80078f0:	e762      	b.n	80077b8 <tcp_handle+0x208>
 80078f2:	6962      	ldr	r2, [r4, #20]
 80078f4:	9201      	str	r2, [sp, #4]
 80078f6:	e72c      	b.n	8007752 <tcp_handle+0x1a2>
 80078f8:	2b06      	cmp	r3, #6
 80078fa:	f47f aec1 	bne.w	8007680 <tcp_handle+0xd0>
 80078fe:	230a      	movs	r3, #10
 8007900:	e6ed      	b.n	80076de <tcp_handle+0x12e>
 8007902:	6963      	ldr	r3, [r4, #20]
 8007904:	42b3      	cmp	r3, r6
 8007906:	d0fa      	beq.n	80078fe <tcp_handle+0x34e>
 8007908:	2308      	movs	r3, #8
 800790a:	e6e8      	b.n	80076de <tcp_handle+0x12e>
 800790c:	200159e4 	andcs	r5, r1, r4, ror #19

08007910 <udp_handle>:
 8007910:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8007914:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 8007916:	4607      	mov	r7, r0
 8007918:	ba5b      	rev16	r3, r3
 800791a:	b29b      	uxth	r3, r3
 800791c:	f1a3 0244 	sub.w	r2, r3, #68	; 0x44
 8007920:	2a01      	cmp	r2, #1
 8007922:	d904      	bls.n	800792e <udp_handle+0x1e>
 8007924:	2b7b      	cmp	r3, #123	; 0x7b
 8007926:	d002      	beq.n	800792e <udp_handle+0x1e>
 8007928:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800792c:	d308      	bcc.n	8007940 <udp_handle+0x30>
 800792e:	2400      	movs	r4, #0
 8007930:	4a1f      	ldr	r2, [pc, #124]	; (80079b0 <udp_handle+0xa0>)
 8007932:	f852 1b04 	ldr.w	r1, [r2], #4
 8007936:	4299      	cmp	r1, r3
 8007938:	d005      	beq.n	8007946 <udp_handle+0x36>
 800793a:	3401      	adds	r4, #1
 800793c:	2c08      	cmp	r4, #8
 800793e:	d1f8      	bne.n	8007932 <udp_handle+0x22>
 8007940:	b002      	add	sp, #8
 8007942:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007946:	f640 3394 	movw	r3, #2964	; 0xb94
 800794a:	8cfe      	ldrh	r6, [r7, #38]	; 0x26
 800794c:	435c      	muls	r4, r3
 800794e:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 8007952:	ba76      	rev16	r6, r6
 8007954:	3e08      	subs	r6, #8
 8007956:	b2b6      	uxth	r6, r6
 8007958:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 800795c:	bf28      	it	cs
 800795e:	f44f 66b8 	movcs.w	r6, #1472	; 0x5c0
 8007962:	f8df 8050 	ldr.w	r8, [pc, #80]	; 80079b4 <udp_handle+0xa4>
 8007966:	1d20      	adds	r0, r4, #4
 8007968:	f838 5004 	ldrh.w	r5, [r8, r4]
 800796c:	4632      	mov	r2, r6
 800796e:	435d      	muls	r5, r3
 8007970:	4428      	add	r0, r5
 8007972:	f107 012a 	add.w	r1, r7, #42	; 0x2a
 8007976:	4440      	add	r0, r8
 8007978:	f008 fb8e 	bl	8010098 <memcpy.isra.0>
 800797c:	2204      	movs	r2, #4
 800797e:	f107 011a 	add.w	r1, r7, #26
 8007982:	eb0d 0002 	add.w	r0, sp, r2
 8007986:	f008 fb87 	bl	8010098 <memcpy.isra.0>
 800798a:	9a01      	ldr	r2, [sp, #4]
 800798c:	192b      	adds	r3, r5, r4
 800798e:	4443      	add	r3, r8
 8007990:	f8c3 25c4 	str.w	r2, [r3, #1476]	; 0x5c4
 8007994:	8c7a      	ldrh	r2, [r7, #34]	; 0x22
 8007996:	f8a3 65ca 	strh.w	r6, [r3, #1482]	; 0x5ca
 800799a:	ba52      	rev16	r2, r2
 800799c:	f8a3 25c8 	strh.w	r2, [r3, #1480]	; 0x5c8
 80079a0:	f838 3004 	ldrh.w	r3, [r8, r4]
 80079a4:	3301      	adds	r3, #1
 80079a6:	f003 0301 	and.w	r3, r3, #1
 80079aa:	f828 3004 	strh.w	r3, [r8, r4]
 80079ae:	e7c7      	b.n	8007940 <udp_handle+0x30>
 80079b0:	20016024 	andcs	r6, r1, r4, lsr #32
 80079b4:	20016044 	andcs	r6, r1, r4, asr #32

080079b8 <arp_handle>:
 80079b8:	8a83      	ldrh	r3, [r0, #20]
 80079ba:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80079be:	d003      	beq.n	80079c8 <arp_handle+0x10>
 80079c0:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80079c4:	d002      	beq.n	80079cc <arp_handle+0x14>
 80079c6:	4770      	bx	lr
 80079c8:	f009 be9e 	b.w	8011708 <arp_handle_request>
 80079cc:	f009 bec4 	b.w	8011758 <arp_handle_reply>

080079d0 <igmp_handle>:
 80079d0:	7b83      	ldrb	r3, [r0, #14]
 80079d2:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80079d6:	2b45      	cmp	r3, #69	; 0x45
 80079d8:	d116      	bne.n	8007a08 <igmp_handle+0x38>
 80079da:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 80079de:	2b11      	cmp	r3, #17
 80079e0:	d112      	bne.n	8007a08 <igmp_handle+0x38>
 80079e2:	4b20      	ldr	r3, [pc, #128]	; (8007a64 <igmp_handle+0x94>)
 80079e4:	f100 051e 	add.w	r5, r0, #30
 80079e8:	9300      	str	r3, [sp, #0]
 80079ea:	466a      	mov	r2, sp
 80079ec:	462b      	mov	r3, r5
 80079ee:	f100 0622 	add.w	r6, r0, #34	; 0x22
 80079f2:	42b3      	cmp	r3, r6
 80079f4:	d10b      	bne.n	8007a0e <igmp_handle+0x3e>
 80079f6:	2401      	movs	r4, #1
 80079f8:	2100      	movs	r1, #0
 80079fa:	f04f 0c01 	mov.w	ip, #1
 80079fe:	4b1a      	ldr	r3, [pc, #104]	; (8007a68 <igmp_handle+0x98>)
 8007a00:	4a1a      	ldr	r2, [pc, #104]	; (8007a6c <igmp_handle+0x9c>)
 8007a02:	681f      	ldr	r7, [r3, #0]
 8007a04:	428f      	cmp	r7, r1
 8007a06:	d10a      	bne.n	8007a1e <igmp_handle+0x4e>
 8007a08:	b003      	add	sp, #12
 8007a0a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8007a0e:	f813 4b01 	ldrb.w	r4, [r3], #1
 8007a12:	f812 1b01 	ldrb.w	r1, [r2], #1
 8007a16:	428c      	cmp	r4, r1
 8007a18:	d0eb      	beq.n	80079f2 <igmp_handle+0x22>
 8007a1a:	2400      	movs	r4, #0
 8007a1c:	e7ec      	b.n	80079f8 <igmp_handle+0x28>
 8007a1e:	6813      	ldr	r3, [r2, #0]
 8007a20:	9301      	str	r3, [sp, #4]
 8007a22:	b924      	cbnz	r4, 8007a2e <igmp_handle+0x5e>
 8007a24:	462b      	mov	r3, r5
 8007a26:	f10d 0e04 	add.w	lr, sp, #4
 8007a2a:	42b3      	cmp	r3, r6
 8007a2c:	d10e      	bne.n	8007a4c <igmp_handle+0x7c>
 8007a2e:	f892 e005 	ldrb.w	lr, [r2, #5]
 8007a32:	f890 3023 	ldrb.w	r3, [r0, #35]	; 0x23
 8007a36:	f1be 0f01 	cmp.w	lr, #1
 8007a3a:	d110      	bne.n	8007a5e <igmp_handle+0x8e>
 8007a3c:	f892 e004 	ldrb.w	lr, [r2, #4]
 8007a40:	459e      	cmp	lr, r3
 8007a42:	d909      	bls.n	8007a58 <igmp_handle+0x88>
 8007a44:	085b      	lsrs	r3, r3, #1
 8007a46:	3301      	adds	r3, #1
 8007a48:	7113      	strb	r3, [r2, #4]
 8007a4a:	e005      	b.n	8007a58 <igmp_handle+0x88>
 8007a4c:	f813 9b01 	ldrb.w	r9, [r3], #1
 8007a50:	f81e 8b01 	ldrb.w	r8, [lr], #1
 8007a54:	45c1      	cmp	r9, r8
 8007a56:	d0e8      	beq.n	8007a2a <igmp_handle+0x5a>
 8007a58:	3101      	adds	r1, #1
 8007a5a:	3208      	adds	r2, #8
 8007a5c:	e7d2      	b.n	8007a04 <igmp_handle+0x34>
 8007a5e:	f882 c005 	strb.w	ip, [r2, #5]
 8007a62:	e7ef      	b.n	8007a44 <igmp_handle+0x74>
 8007a64:	010000e0 	smlatteq	r0, r0, r0, r0
 8007a68:	2001ccd4 	ldrdcs	ip, [r1], -r4
 8007a6c:	2001cbb0 			; <UNDEFINED> instruction: 0x2001cbb0

08007a70 <ip_handle>:
 8007a70:	7b82      	ldrb	r2, [r0, #14]
 8007a72:	7dc3      	ldrb	r3, [r0, #23]
 8007a74:	2a45      	cmp	r2, #69	; 0x45
 8007a76:	d003      	beq.n	8007a80 <ip_handle+0x10>
 8007a78:	2b02      	cmp	r3, #2
 8007a7a:	d111      	bne.n	8007aa0 <ip_handle+0x30>
 8007a7c:	f7ff bfa8 	b.w	80079d0 <igmp_handle>
 8007a80:	2b06      	cmp	r3, #6
 8007a82:	d00b      	beq.n	8007a9c <ip_handle+0x2c>
 8007a84:	d804      	bhi.n	8007a90 <ip_handle+0x20>
 8007a86:	2b01      	cmp	r3, #1
 8007a88:	d006      	beq.n	8007a98 <ip_handle+0x28>
 8007a8a:	2b02      	cmp	r3, #2
 8007a8c:	d0f6      	beq.n	8007a7c <ip_handle+0xc>
 8007a8e:	4770      	bx	lr
 8007a90:	2b11      	cmp	r3, #17
 8007a92:	d105      	bne.n	8007aa0 <ip_handle+0x30>
 8007a94:	f7ff bf3c 	b.w	8007910 <udp_handle>
 8007a98:	f000 b804 	b.w	8007aa4 <icmp_handle>
 8007a9c:	f7ff bd88 	b.w	80075b0 <tcp_handle>
 8007aa0:	4770      	bx	lr
	...

08007aa4 <icmp_handle>:
 8007aa4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8007aa6:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 8007aaa:	4604      	mov	r4, r0
 8007aac:	2b08      	cmp	r3, #8
 8007aae:	d13e      	bne.n	8007b2e <icmp_handle+0x8a>
 8007ab0:	f890 5023 	ldrb.w	r5, [r0, #35]	; 0x23
 8007ab4:	2d00      	cmp	r5, #0
 8007ab6:	d13a      	bne.n	8007b2e <icmp_handle+0x8a>
 8007ab8:	1d86      	adds	r6, r0, #6
 8007aba:	4631      	mov	r1, r6
 8007abc:	2206      	movs	r2, #6
 8007abe:	f00a f9cd 	bl	8011e5c <memcpy.isra.0>
 8007ac2:	4630      	mov	r0, r6
 8007ac4:	2206      	movs	r2, #6
 8007ac6:	491b      	ldr	r1, [pc, #108]	; (8007b34 <icmp_handle+0x90>)
 8007ac8:	f00a f9c8 	bl	8011e5c <memcpy.isra.0>
 8007acc:	8a63      	ldrh	r3, [r4, #18]
 8007ace:	f104 061a 	add.w	r6, r4, #26
 8007ad2:	43db      	mvns	r3, r3
 8007ad4:	4631      	mov	r1, r6
 8007ad6:	2204      	movs	r2, #4
 8007ad8:	8263      	strh	r3, [r4, #18]
 8007ada:	f104 001e 	add.w	r0, r4, #30
 8007ade:	f00a f9bd 	bl	8011e5c <memcpy.isra.0>
 8007ae2:	2204      	movs	r2, #4
 8007ae4:	4b14      	ldr	r3, [pc, #80]	; (8007b38 <icmp_handle+0x94>)
 8007ae6:	eb0d 0102 	add.w	r1, sp, r2
 8007aea:	681b      	ldr	r3, [r3, #0]
 8007aec:	4630      	mov	r0, r6
 8007aee:	f104 060e 	add.w	r6, r4, #14
 8007af2:	9301      	str	r3, [sp, #4]
 8007af4:	f00a f9b2 	bl	8011e5c <memcpy.isra.0>
 8007af8:	2114      	movs	r1, #20
 8007afa:	4630      	mov	r0, r6
 8007afc:	7625      	strb	r5, [r4, #24]
 8007afe:	7665      	strb	r5, [r4, #25]
 8007b00:	f00a f993 	bl	8011e2a <net_chksum>
 8007b04:	8a21      	ldrh	r1, [r4, #16]
 8007b06:	8320      	strh	r0, [r4, #24]
 8007b08:	ba49      	rev16	r1, r1
 8007b0a:	b289      	uxth	r1, r1
 8007b0c:	4630      	mov	r0, r6
 8007b0e:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8007b12:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8007b16:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 8007b1a:	f00a f986 	bl	8011e2a <net_chksum>
 8007b1e:	8a21      	ldrh	r1, [r4, #16]
 8007b20:	84a0      	strh	r0, [r4, #36]	; 0x24
 8007b22:	ba49      	rev16	r1, r1
 8007b24:	b289      	uxth	r1, r1
 8007b26:	4620      	mov	r0, r4
 8007b28:	310e      	adds	r1, #14
 8007b2a:	f00c fd85 	bl	8014638 <emac_eth_send>
 8007b2e:	b002      	add	sp, #8
 8007b30:	bd70      	pop	{r4, r5, r6, pc}
 8007b32:	bf00      	nop
 8007b34:	20014e50 	andcs	r4, r1, r0, asr lr
 8007b38:	20014e44 	andcs	r4, r1, r4, asr #28

08007b3c <__aeabi_d2f>:
 8007b3c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8007b40:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8007b44:	bf24      	itt	cs
 8007b46:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8007b4a:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8007b4e:	d90d      	bls.n	8007b6c <__aeabi_d2f+0x30>
 8007b50:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8007b54:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8007b58:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8007b5c:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8007b60:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8007b64:	bf08      	it	eq
 8007b66:	f020 0001 	biceq.w	r0, r0, #1
 8007b6a:	4770      	bx	lr
 8007b6c:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8007b70:	d121      	bne.n	8007bb6 <__aeabi_d2f+0x7a>
 8007b72:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8007b76:	bfbc      	itt	lt
 8007b78:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8007b7c:	4770      	bxlt	lr
 8007b7e:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8007b82:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8007b86:	f1c2 0218 	rsb	r2, r2, #24
 8007b8a:	f1c2 0c20 	rsb	ip, r2, #32
 8007b8e:	fa10 f30c 	lsls.w	r3, r0, ip
 8007b92:	fa20 f002 	lsr.w	r0, r0, r2
 8007b96:	bf18      	it	ne
 8007b98:	f040 0001 	orrne.w	r0, r0, #1
 8007b9c:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8007ba0:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8007ba4:	fa03 fc0c 	lsl.w	ip, r3, ip
 8007ba8:	ea40 000c 	orr.w	r0, r0, ip
 8007bac:	fa23 f302 	lsr.w	r3, r3, r2
 8007bb0:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8007bb4:	e7cc      	b.n	8007b50 <__aeabi_d2f+0x14>
 8007bb6:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8007bba:	d107      	bne.n	8007bcc <__aeabi_d2f+0x90>
 8007bbc:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8007bc0:	bf1e      	ittt	ne
 8007bc2:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8007bc6:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8007bca:	4770      	bxne	lr
 8007bcc:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8007bd0:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8007bd4:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007bd8:	4770      	bx	lr
 8007bda:	bf00      	nop

08007bdc <__aeabi_frsub>:
 8007bdc:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
 8007be0:	e002      	b.n	8007be8 <__addsf3>
 8007be2:	bf00      	nop

08007be4 <__aeabi_fsub>:
 8007be4:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

08007be8 <__addsf3>:
 8007be8:	0042      	lsls	r2, r0, #1
 8007bea:	bf1f      	itttt	ne
 8007bec:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8007bf0:	ea92 0f03 	teqne	r2, r3
 8007bf4:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8007bf8:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8007bfc:	d06a      	beq.n	8007cd4 <__addsf3+0xec>
 8007bfe:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8007c02:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8007c06:	bfc1      	itttt	gt
 8007c08:	18d2      	addgt	r2, r2, r3
 8007c0a:	4041      	eorgt	r1, r0
 8007c0c:	4048      	eorgt	r0, r1
 8007c0e:	4041      	eorgt	r1, r0
 8007c10:	bfb8      	it	lt
 8007c12:	425b      	neglt	r3, r3
 8007c14:	2b19      	cmp	r3, #25
 8007c16:	bf88      	it	hi
 8007c18:	4770      	bxhi	lr
 8007c1a:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8007c1e:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007c22:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 8007c26:	bf18      	it	ne
 8007c28:	4240      	negne	r0, r0
 8007c2a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8007c2e:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8007c32:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 8007c36:	bf18      	it	ne
 8007c38:	4249      	negne	r1, r1
 8007c3a:	ea92 0f03 	teq	r2, r3
 8007c3e:	d03f      	beq.n	8007cc0 <__addsf3+0xd8>
 8007c40:	f1a2 0201 	sub.w	r2, r2, #1
 8007c44:	fa41 fc03 	asr.w	ip, r1, r3
 8007c48:	eb10 000c 	adds.w	r0, r0, ip
 8007c4c:	f1c3 0320 	rsb	r3, r3, #32
 8007c50:	fa01 f103 	lsl.w	r1, r1, r3
 8007c54:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8007c58:	d502      	bpl.n	8007c60 <__addsf3+0x78>
 8007c5a:	4249      	negs	r1, r1
 8007c5c:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8007c60:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
 8007c64:	d313      	bcc.n	8007c8e <__addsf3+0xa6>
 8007c66:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 8007c6a:	d306      	bcc.n	8007c7a <__addsf3+0x92>
 8007c6c:	0840      	lsrs	r0, r0, #1
 8007c6e:	ea4f 0131 	mov.w	r1, r1, rrx
 8007c72:	f102 0201 	add.w	r2, r2, #1
 8007c76:	2afe      	cmp	r2, #254	; 0xfe
 8007c78:	d251      	bcs.n	8007d1e <__addsf3+0x136>
 8007c7a:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
 8007c7e:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8007c82:	bf08      	it	eq
 8007c84:	f020 0001 	biceq.w	r0, r0, #1
 8007c88:	ea40 0003 	orr.w	r0, r0, r3
 8007c8c:	4770      	bx	lr
 8007c8e:	0049      	lsls	r1, r1, #1
 8007c90:	eb40 0000 	adc.w	r0, r0, r0
 8007c94:	3a01      	subs	r2, #1
 8007c96:	bf28      	it	cs
 8007c98:	f5b0 0f00 	cmpcs.w	r0, #8388608	; 0x800000
 8007c9c:	d2ed      	bcs.n	8007c7a <__addsf3+0x92>
 8007c9e:	fab0 fc80 	clz	ip, r0
 8007ca2:	f1ac 0c08 	sub.w	ip, ip, #8
 8007ca6:	ebb2 020c 	subs.w	r2, r2, ip
 8007caa:	fa00 f00c 	lsl.w	r0, r0, ip
 8007cae:	bfaa      	itet	ge
 8007cb0:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8007cb4:	4252      	neglt	r2, r2
 8007cb6:	4318      	orrge	r0, r3
 8007cb8:	bfbc      	itt	lt
 8007cba:	40d0      	lsrlt	r0, r2
 8007cbc:	4318      	orrlt	r0, r3
 8007cbe:	4770      	bx	lr
 8007cc0:	f092 0f00 	teq	r2, #0
 8007cc4:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
 8007cc8:	bf06      	itte	eq
 8007cca:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
 8007cce:	3201      	addeq	r2, #1
 8007cd0:	3b01      	subne	r3, #1
 8007cd2:	e7b5      	b.n	8007c40 <__addsf3+0x58>
 8007cd4:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8007cd8:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8007cdc:	bf18      	it	ne
 8007cde:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8007ce2:	d021      	beq.n	8007d28 <__addsf3+0x140>
 8007ce4:	ea92 0f03 	teq	r2, r3
 8007ce8:	d004      	beq.n	8007cf4 <__addsf3+0x10c>
 8007cea:	f092 0f00 	teq	r2, #0
 8007cee:	bf08      	it	eq
 8007cf0:	4608      	moveq	r0, r1
 8007cf2:	4770      	bx	lr
 8007cf4:	ea90 0f01 	teq	r0, r1
 8007cf8:	bf1c      	itt	ne
 8007cfa:	2000      	movne	r0, #0
 8007cfc:	4770      	bxne	lr
 8007cfe:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
 8007d02:	d104      	bne.n	8007d0e <__addsf3+0x126>
 8007d04:	0040      	lsls	r0, r0, #1
 8007d06:	bf28      	it	cs
 8007d08:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
 8007d0c:	4770      	bx	lr
 8007d0e:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
 8007d12:	bf3c      	itt	cc
 8007d14:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
 8007d18:	4770      	bxcc	lr
 8007d1a:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8007d1e:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
 8007d22:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007d26:	4770      	bx	lr
 8007d28:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8007d2c:	bf16      	itet	ne
 8007d2e:	4608      	movne	r0, r1
 8007d30:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8007d34:	4601      	movne	r1, r0
 8007d36:	0242      	lsls	r2, r0, #9
 8007d38:	bf06      	itte	eq
 8007d3a:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8007d3e:	ea90 0f01 	teqeq	r0, r1
 8007d42:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
 8007d46:	4770      	bx	lr

08007d48 <__aeabi_ui2f>:
 8007d48:	f04f 0300 	mov.w	r3, #0
 8007d4c:	e004      	b.n	8007d58 <__aeabi_i2f+0x8>
 8007d4e:	bf00      	nop

08007d50 <__aeabi_i2f>:
 8007d50:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
 8007d54:	bf48      	it	mi
 8007d56:	4240      	negmi	r0, r0
 8007d58:	ea5f 0c00 	movs.w	ip, r0
 8007d5c:	bf08      	it	eq
 8007d5e:	4770      	bxeq	lr
 8007d60:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
 8007d64:	4601      	mov	r1, r0
 8007d66:	f04f 0000 	mov.w	r0, #0
 8007d6a:	e01c      	b.n	8007da6 <__aeabi_l2f+0x2a>

08007d6c <__aeabi_ul2f>:
 8007d6c:	ea50 0201 	orrs.w	r2, r0, r1
 8007d70:	bf08      	it	eq
 8007d72:	4770      	bxeq	lr
 8007d74:	f04f 0300 	mov.w	r3, #0
 8007d78:	e00a      	b.n	8007d90 <__aeabi_l2f+0x14>
 8007d7a:	bf00      	nop

08007d7c <__aeabi_l2f>:
 8007d7c:	ea50 0201 	orrs.w	r2, r0, r1
 8007d80:	bf08      	it	eq
 8007d82:	4770      	bxeq	lr
 8007d84:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
 8007d88:	d502      	bpl.n	8007d90 <__aeabi_l2f+0x14>
 8007d8a:	4240      	negs	r0, r0
 8007d8c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8007d90:	ea5f 0c01 	movs.w	ip, r1
 8007d94:	bf02      	ittt	eq
 8007d96:	4684      	moveq	ip, r0
 8007d98:	4601      	moveq	r1, r0
 8007d9a:	2000      	moveq	r0, #0
 8007d9c:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
 8007da0:	bf08      	it	eq
 8007da2:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
 8007da6:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
 8007daa:	fabc f28c 	clz	r2, ip
 8007dae:	3a08      	subs	r2, #8
 8007db0:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8007db4:	db10      	blt.n	8007dd8 <__aeabi_l2f+0x5c>
 8007db6:	fa01 fc02 	lsl.w	ip, r1, r2
 8007dba:	4463      	add	r3, ip
 8007dbc:	fa00 fc02 	lsl.w	ip, r0, r2
 8007dc0:	f1c2 0220 	rsb	r2, r2, #32
 8007dc4:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8007dc8:	fa20 f202 	lsr.w	r2, r0, r2
 8007dcc:	eb43 0002 	adc.w	r0, r3, r2
 8007dd0:	bf08      	it	eq
 8007dd2:	f020 0001 	biceq.w	r0, r0, #1
 8007dd6:	4770      	bx	lr
 8007dd8:	f102 0220 	add.w	r2, r2, #32
 8007ddc:	fa01 fc02 	lsl.w	ip, r1, r2
 8007de0:	f1c2 0220 	rsb	r2, r2, #32
 8007de4:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8007de8:	fa21 f202 	lsr.w	r2, r1, r2
 8007dec:	eb43 0002 	adc.w	r0, r3, r2
 8007df0:	bf08      	it	eq
 8007df2:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8007df6:	4770      	bx	lr

08007df8 <__gesf2>:
 8007df8:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
 8007dfc:	e006      	b.n	8007e0c <__cmpsf2+0x4>
 8007dfe:	bf00      	nop

08007e00 <__lesf2>:
 8007e00:	f04f 0c01 	mov.w	ip, #1
 8007e04:	e002      	b.n	8007e0c <__cmpsf2+0x4>
 8007e06:	bf00      	nop

08007e08 <__cmpsf2>:
 8007e08:	f04f 0c01 	mov.w	ip, #1
 8007e0c:	f84d cd04 	str.w	ip, [sp, #-4]!
 8007e10:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8007e14:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8007e18:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8007e1c:	bf18      	it	ne
 8007e1e:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8007e22:	d011      	beq.n	8007e48 <__cmpsf2+0x40>
 8007e24:	b001      	add	sp, #4
 8007e26:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
 8007e2a:	bf18      	it	ne
 8007e2c:	ea90 0f01 	teqne	r0, r1
 8007e30:	bf58      	it	pl
 8007e32:	ebb2 0003 	subspl.w	r0, r2, r3
 8007e36:	bf88      	it	hi
 8007e38:	17c8      	asrhi	r0, r1, #31
 8007e3a:	bf38      	it	cc
 8007e3c:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
 8007e40:	bf18      	it	ne
 8007e42:	f040 0001 	orrne.w	r0, r0, #1
 8007e46:	4770      	bx	lr
 8007e48:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8007e4c:	d102      	bne.n	8007e54 <__cmpsf2+0x4c>
 8007e4e:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 8007e52:	d105      	bne.n	8007e60 <__cmpsf2+0x58>
 8007e54:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 8007e58:	d1e4      	bne.n	8007e24 <__cmpsf2+0x1c>
 8007e5a:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 8007e5e:	d0e1      	beq.n	8007e24 <__cmpsf2+0x1c>
 8007e60:	f85d 0b04 	ldr.w	r0, [sp], #4
 8007e64:	4770      	bx	lr
 8007e66:	bf00      	nop

08007e68 <__aeabi_cfrcmple>:
 8007e68:	4684      	mov	ip, r0
 8007e6a:	4608      	mov	r0, r1
 8007e6c:	4661      	mov	r1, ip
 8007e6e:	e7ff      	b.n	8007e70 <__aeabi_cfcmpeq>

08007e70 <__aeabi_cfcmpeq>:
 8007e70:	b50f      	push	{r0, r1, r2, r3, lr}
 8007e72:	f7ff ffc9 	bl	8007e08 <__cmpsf2>
 8007e76:	2800      	cmp	r0, #0
 8007e78:	bf48      	it	mi
 8007e7a:	f110 0f00 	cmnmi.w	r0, #0
 8007e7e:	bd0f      	pop	{r0, r1, r2, r3, pc}

08007e80 <__aeabi_fcmpeq>:
 8007e80:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007e84:	f7ff fff4 	bl	8007e70 <__aeabi_cfcmpeq>
 8007e88:	bf0c      	ite	eq
 8007e8a:	2001      	moveq	r0, #1
 8007e8c:	2000      	movne	r0, #0
 8007e8e:	f85d fb08 	ldr.w	pc, [sp], #8
 8007e92:	bf00      	nop

08007e94 <__aeabi_fcmplt>:
 8007e94:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007e98:	f7ff ffea 	bl	8007e70 <__aeabi_cfcmpeq>
 8007e9c:	bf34      	ite	cc
 8007e9e:	2001      	movcc	r0, #1
 8007ea0:	2000      	movcs	r0, #0
 8007ea2:	f85d fb08 	ldr.w	pc, [sp], #8
 8007ea6:	bf00      	nop

08007ea8 <__aeabi_fcmple>:
 8007ea8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007eac:	f7ff ffe0 	bl	8007e70 <__aeabi_cfcmpeq>
 8007eb0:	bf94      	ite	ls
 8007eb2:	2001      	movls	r0, #1
 8007eb4:	2000      	movhi	r0, #0
 8007eb6:	f85d fb08 	ldr.w	pc, [sp], #8
 8007eba:	bf00      	nop

08007ebc <__aeabi_fcmpge>:
 8007ebc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007ec0:	f7ff ffd2 	bl	8007e68 <__aeabi_cfrcmple>
 8007ec4:	bf94      	ite	ls
 8007ec6:	2001      	movls	r0, #1
 8007ec8:	2000      	movhi	r0, #0
 8007eca:	f85d fb08 	ldr.w	pc, [sp], #8
 8007ece:	bf00      	nop

08007ed0 <__aeabi_fcmpgt>:
 8007ed0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007ed4:	f7ff ffc8 	bl	8007e68 <__aeabi_cfrcmple>
 8007ed8:	bf34      	ite	cc
 8007eda:	2001      	movcc	r0, #1
 8007edc:	2000      	movcs	r0, #0
 8007ede:	f85d fb08 	ldr.w	pc, [sp], #8
 8007ee2:	bf00      	nop

08007ee4 <__aeabi_f2iz>:
 8007ee4:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8007ee8:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 8007eec:	d30f      	bcc.n	8007f0e <__aeabi_f2iz+0x2a>
 8007eee:	f04f 039e 	mov.w	r3, #158	; 0x9e
 8007ef2:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 8007ef6:	d90d      	bls.n	8007f14 <__aeabi_f2iz+0x30>
 8007ef8:	ea4f 2300 	mov.w	r3, r0, lsl #8
 8007efc:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8007f00:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8007f04:	fa23 f002 	lsr.w	r0, r3, r2
 8007f08:	bf18      	it	ne
 8007f0a:	4240      	negne	r0, r0
 8007f0c:	4770      	bx	lr
 8007f0e:	f04f 0000 	mov.w	r0, #0
 8007f12:	4770      	bx	lr
 8007f14:	f112 0f61 	cmn.w	r2, #97	; 0x61
 8007f18:	d101      	bne.n	8007f1e <__aeabi_f2iz+0x3a>
 8007f1a:	0242      	lsls	r2, r0, #9
 8007f1c:	d105      	bne.n	8007f2a <__aeabi_f2iz+0x46>
 8007f1e:	f010 4000 	ands.w	r0, r0, #2147483648	; 0x80000000
 8007f22:	bf08      	it	eq
 8007f24:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8007f28:	4770      	bx	lr
 8007f2a:	f04f 0000 	mov.w	r0, #0
 8007f2e:	4770      	bx	lr

08007f30 <__aeabi_uldivmod>:
 8007f30:	b953      	cbnz	r3, 8007f48 <__aeabi_uldivmod+0x18>
 8007f32:	b94a      	cbnz	r2, 8007f48 <__aeabi_uldivmod+0x18>
 8007f34:	2900      	cmp	r1, #0
 8007f36:	bf08      	it	eq
 8007f38:	2800      	cmpeq	r0, #0
 8007f3a:	bf1c      	itt	ne
 8007f3c:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 8007f40:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 8007f44:	f000 b80c 	b.w	8007f60 <__aeabi_idiv0>
 8007f48:	f1ad 0c08 	sub.w	ip, sp, #8
 8007f4c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8007f50:	f001 fb66 	bl	8009620 <__udivmoddi4>
 8007f54:	f8dd e004 	ldr.w	lr, [sp, #4]
 8007f58:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8007f5c:	b004      	add	sp, #16
 8007f5e:	4770      	bx	lr

08007f60 <__aeabi_idiv0>:
 8007f60:	4770      	bx	lr
 8007f62:	bf00      	nop

08007f64 <__aeabi_drsub>:
 8007f64:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8007f68:	e002      	b.n	8007f70 <__adddf3>
 8007f6a:	bf00      	nop

08007f6c <__aeabi_dsub>:
 8007f6c:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

08007f70 <__adddf3>:
 8007f70:	b530      	push	{r4, r5, lr}
 8007f72:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8007f76:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8007f7a:	ea94 0f05 	teq	r4, r5
 8007f7e:	bf08      	it	eq
 8007f80:	ea90 0f02 	teqeq	r0, r2
 8007f84:	bf1f      	itttt	ne
 8007f86:	ea54 0c00 	orrsne.w	ip, r4, r0
 8007f8a:	ea55 0c02 	orrsne.w	ip, r5, r2
 8007f8e:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8007f92:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8007f96:	f000 80e2 	beq.w	800815e <__adddf3+0x1ee>
 8007f9a:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8007f9e:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8007fa2:	bfb8      	it	lt
 8007fa4:	426d      	neglt	r5, r5
 8007fa6:	dd0c      	ble.n	8007fc2 <__adddf3+0x52>
 8007fa8:	442c      	add	r4, r5
 8007faa:	ea80 0202 	eor.w	r2, r0, r2
 8007fae:	ea81 0303 	eor.w	r3, r1, r3
 8007fb2:	ea82 0000 	eor.w	r0, r2, r0
 8007fb6:	ea83 0101 	eor.w	r1, r3, r1
 8007fba:	ea80 0202 	eor.w	r2, r0, r2
 8007fbe:	ea81 0303 	eor.w	r3, r1, r3
 8007fc2:	2d36      	cmp	r5, #54	; 0x36
 8007fc4:	bf88      	it	hi
 8007fc6:	bd30      	pophi	{r4, r5, pc}
 8007fc8:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8007fcc:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8007fd0:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8007fd4:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8007fd8:	d002      	beq.n	8007fe0 <__adddf3+0x70>
 8007fda:	4240      	negs	r0, r0
 8007fdc:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8007fe0:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8007fe4:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8007fe8:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8007fec:	d002      	beq.n	8007ff4 <__adddf3+0x84>
 8007fee:	4252      	negs	r2, r2
 8007ff0:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8007ff4:	ea94 0f05 	teq	r4, r5
 8007ff8:	f000 80a7 	beq.w	800814a <__adddf3+0x1da>
 8007ffc:	f1a4 0401 	sub.w	r4, r4, #1
 8008000:	f1d5 0e20 	rsbs	lr, r5, #32
 8008004:	db0d      	blt.n	8008022 <__adddf3+0xb2>
 8008006:	fa02 fc0e 	lsl.w	ip, r2, lr
 800800a:	fa22 f205 	lsr.w	r2, r2, r5
 800800e:	1880      	adds	r0, r0, r2
 8008010:	f141 0100 	adc.w	r1, r1, #0
 8008014:	fa03 f20e 	lsl.w	r2, r3, lr
 8008018:	1880      	adds	r0, r0, r2
 800801a:	fa43 f305 	asr.w	r3, r3, r5
 800801e:	4159      	adcs	r1, r3
 8008020:	e00e      	b.n	8008040 <__adddf3+0xd0>
 8008022:	f1a5 0520 	sub.w	r5, r5, #32
 8008026:	f10e 0e20 	add.w	lr, lr, #32
 800802a:	2a01      	cmp	r2, #1
 800802c:	fa03 fc0e 	lsl.w	ip, r3, lr
 8008030:	bf28      	it	cs
 8008032:	f04c 0c02 	orrcs.w	ip, ip, #2
 8008036:	fa43 f305 	asr.w	r3, r3, r5
 800803a:	18c0      	adds	r0, r0, r3
 800803c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8008040:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8008044:	d507      	bpl.n	8008056 <__adddf3+0xe6>
 8008046:	f04f 0e00 	mov.w	lr, #0
 800804a:	f1dc 0c00 	rsbs	ip, ip, #0
 800804e:	eb7e 0000 	sbcs.w	r0, lr, r0
 8008052:	eb6e 0101 	sbc.w	r1, lr, r1
 8008056:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 800805a:	d31b      	bcc.n	8008094 <__adddf3+0x124>
 800805c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 8008060:	d30c      	bcc.n	800807c <__adddf3+0x10c>
 8008062:	0849      	lsrs	r1, r1, #1
 8008064:	ea5f 0030 	movs.w	r0, r0, rrx
 8008068:	ea4f 0c3c 	mov.w	ip, ip, rrx
 800806c:	f104 0401 	add.w	r4, r4, #1
 8008070:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8008074:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8008078:	f080 809a 	bcs.w	80081b0 <__adddf3+0x240>
 800807c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8008080:	bf08      	it	eq
 8008082:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8008086:	f150 0000 	adcs.w	r0, r0, #0
 800808a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800808e:	ea41 0105 	orr.w	r1, r1, r5
 8008092:	bd30      	pop	{r4, r5, pc}
 8008094:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8008098:	4140      	adcs	r0, r0
 800809a:	eb41 0101 	adc.w	r1, r1, r1
 800809e:	3c01      	subs	r4, #1
 80080a0:	bf28      	it	cs
 80080a2:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80080a6:	d2e9      	bcs.n	800807c <__adddf3+0x10c>
 80080a8:	f091 0f00 	teq	r1, #0
 80080ac:	bf04      	itt	eq
 80080ae:	4601      	moveq	r1, r0
 80080b0:	2000      	moveq	r0, #0
 80080b2:	fab1 f381 	clz	r3, r1
 80080b6:	bf08      	it	eq
 80080b8:	3320      	addeq	r3, #32
 80080ba:	f1a3 030b 	sub.w	r3, r3, #11
 80080be:	f1b3 0220 	subs.w	r2, r3, #32
 80080c2:	da0c      	bge.n	80080de <__adddf3+0x16e>
 80080c4:	320c      	adds	r2, #12
 80080c6:	dd08      	ble.n	80080da <__adddf3+0x16a>
 80080c8:	f102 0c14 	add.w	ip, r2, #20
 80080cc:	f1c2 020c 	rsb	r2, r2, #12
 80080d0:	fa01 f00c 	lsl.w	r0, r1, ip
 80080d4:	fa21 f102 	lsr.w	r1, r1, r2
 80080d8:	e00c      	b.n	80080f4 <__adddf3+0x184>
 80080da:	f102 0214 	add.w	r2, r2, #20
 80080de:	bfd8      	it	le
 80080e0:	f1c2 0c20 	rsble	ip, r2, #32
 80080e4:	fa01 f102 	lsl.w	r1, r1, r2
 80080e8:	fa20 fc0c 	lsr.w	ip, r0, ip
 80080ec:	bfdc      	itt	le
 80080ee:	ea41 010c 	orrle.w	r1, r1, ip
 80080f2:	4090      	lslle	r0, r2
 80080f4:	1ae4      	subs	r4, r4, r3
 80080f6:	bfa2      	ittt	ge
 80080f8:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80080fc:	4329      	orrge	r1, r5
 80080fe:	bd30      	popge	{r4, r5, pc}
 8008100:	ea6f 0404 	mvn.w	r4, r4
 8008104:	3c1f      	subs	r4, #31
 8008106:	da1c      	bge.n	8008142 <__adddf3+0x1d2>
 8008108:	340c      	adds	r4, #12
 800810a:	dc0e      	bgt.n	800812a <__adddf3+0x1ba>
 800810c:	f104 0414 	add.w	r4, r4, #20
 8008110:	f1c4 0220 	rsb	r2, r4, #32
 8008114:	fa20 f004 	lsr.w	r0, r0, r4
 8008118:	fa01 f302 	lsl.w	r3, r1, r2
 800811c:	ea40 0003 	orr.w	r0, r0, r3
 8008120:	fa21 f304 	lsr.w	r3, r1, r4
 8008124:	ea45 0103 	orr.w	r1, r5, r3
 8008128:	bd30      	pop	{r4, r5, pc}
 800812a:	f1c4 040c 	rsb	r4, r4, #12
 800812e:	f1c4 0220 	rsb	r2, r4, #32
 8008132:	fa20 f002 	lsr.w	r0, r0, r2
 8008136:	fa01 f304 	lsl.w	r3, r1, r4
 800813a:	ea40 0003 	orr.w	r0, r0, r3
 800813e:	4629      	mov	r1, r5
 8008140:	bd30      	pop	{r4, r5, pc}
 8008142:	fa21 f004 	lsr.w	r0, r1, r4
 8008146:	4629      	mov	r1, r5
 8008148:	bd30      	pop	{r4, r5, pc}
 800814a:	f094 0f00 	teq	r4, #0
 800814e:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 8008152:	bf06      	itte	eq
 8008154:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8008158:	3401      	addeq	r4, #1
 800815a:	3d01      	subne	r5, #1
 800815c:	e74e      	b.n	8007ffc <__adddf3+0x8c>
 800815e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8008162:	bf18      	it	ne
 8008164:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8008168:	d029      	beq.n	80081be <__adddf3+0x24e>
 800816a:	ea94 0f05 	teq	r4, r5
 800816e:	bf08      	it	eq
 8008170:	ea90 0f02 	teqeq	r0, r2
 8008174:	d005      	beq.n	8008182 <__adddf3+0x212>
 8008176:	ea54 0c00 	orrs.w	ip, r4, r0
 800817a:	bf04      	itt	eq
 800817c:	4619      	moveq	r1, r3
 800817e:	4610      	moveq	r0, r2
 8008180:	bd30      	pop	{r4, r5, pc}
 8008182:	ea91 0f03 	teq	r1, r3
 8008186:	bf1e      	ittt	ne
 8008188:	2100      	movne	r1, #0
 800818a:	2000      	movne	r0, #0
 800818c:	bd30      	popne	{r4, r5, pc}
 800818e:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8008192:	d105      	bne.n	80081a0 <__adddf3+0x230>
 8008194:	0040      	lsls	r0, r0, #1
 8008196:	4149      	adcs	r1, r1
 8008198:	bf28      	it	cs
 800819a:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 800819e:	bd30      	pop	{r4, r5, pc}
 80081a0:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80081a4:	bf3c      	itt	cc
 80081a6:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80081aa:	bd30      	popcc	{r4, r5, pc}
 80081ac:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80081b0:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80081b4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80081b8:	f04f 0000 	mov.w	r0, #0
 80081bc:	bd30      	pop	{r4, r5, pc}
 80081be:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80081c2:	bf1a      	itte	ne
 80081c4:	4619      	movne	r1, r3
 80081c6:	4610      	movne	r0, r2
 80081c8:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80081cc:	bf1c      	itt	ne
 80081ce:	460b      	movne	r3, r1
 80081d0:	4602      	movne	r2, r0
 80081d2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80081d6:	bf06      	itte	eq
 80081d8:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80081dc:	ea91 0f03 	teqeq	r1, r3
 80081e0:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 80081e4:	bd30      	pop	{r4, r5, pc}
 80081e6:	bf00      	nop

080081e8 <__aeabi_ui2d>:
 80081e8:	f090 0f00 	teq	r0, #0
 80081ec:	bf04      	itt	eq
 80081ee:	2100      	moveq	r1, #0
 80081f0:	4770      	bxeq	lr
 80081f2:	b530      	push	{r4, r5, lr}
 80081f4:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80081f8:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80081fc:	f04f 0500 	mov.w	r5, #0
 8008200:	f04f 0100 	mov.w	r1, #0
 8008204:	e750      	b.n	80080a8 <__adddf3+0x138>
 8008206:	bf00      	nop

08008208 <__aeabi_i2d>:
 8008208:	f090 0f00 	teq	r0, #0
 800820c:	bf04      	itt	eq
 800820e:	2100      	moveq	r1, #0
 8008210:	4770      	bxeq	lr
 8008212:	b530      	push	{r4, r5, lr}
 8008214:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8008218:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800821c:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8008220:	bf48      	it	mi
 8008222:	4240      	negmi	r0, r0
 8008224:	f04f 0100 	mov.w	r1, #0
 8008228:	e73e      	b.n	80080a8 <__adddf3+0x138>
 800822a:	bf00      	nop

0800822c <__aeabi_f2d>:
 800822c:	0042      	lsls	r2, r0, #1
 800822e:	ea4f 01e2 	mov.w	r1, r2, asr #3
 8008232:	ea4f 0131 	mov.w	r1, r1, rrx
 8008236:	ea4f 7002 	mov.w	r0, r2, lsl #28
 800823a:	bf1f      	itttt	ne
 800823c:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 8008240:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8008244:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8008248:	4770      	bxne	lr
 800824a:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800824e:	bf08      	it	eq
 8008250:	4770      	bxeq	lr
 8008252:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8008256:	bf04      	itt	eq
 8008258:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 800825c:	4770      	bxeq	lr
 800825e:	b530      	push	{r4, r5, lr}
 8008260:	f44f 7460 	mov.w	r4, #896	; 0x380
 8008264:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8008268:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 800826c:	e71c      	b.n	80080a8 <__adddf3+0x138>
 800826e:	bf00      	nop

08008270 <__aeabi_ul2d>:
 8008270:	ea50 0201 	orrs.w	r2, r0, r1
 8008274:	bf08      	it	eq
 8008276:	4770      	bxeq	lr
 8008278:	b530      	push	{r4, r5, lr}
 800827a:	f04f 0500 	mov.w	r5, #0
 800827e:	e00a      	b.n	8008296 <__aeabi_l2d+0x16>

08008280 <__aeabi_l2d>:
 8008280:	ea50 0201 	orrs.w	r2, r0, r1
 8008284:	bf08      	it	eq
 8008286:	4770      	bxeq	lr
 8008288:	b530      	push	{r4, r5, lr}
 800828a:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 800828e:	d502      	bpl.n	8008296 <__aeabi_l2d+0x16>
 8008290:	4240      	negs	r0, r0
 8008292:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8008296:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800829a:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800829e:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80082a2:	f43f aed8 	beq.w	8008056 <__adddf3+0xe6>
 80082a6:	f04f 0203 	mov.w	r2, #3
 80082aa:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80082ae:	bf18      	it	ne
 80082b0:	3203      	addne	r2, #3
 80082b2:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80082b6:	bf18      	it	ne
 80082b8:	3203      	addne	r2, #3
 80082ba:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80082be:	f1c2 0320 	rsb	r3, r2, #32
 80082c2:	fa00 fc03 	lsl.w	ip, r0, r3
 80082c6:	fa20 f002 	lsr.w	r0, r0, r2
 80082ca:	fa01 fe03 	lsl.w	lr, r1, r3
 80082ce:	ea40 000e 	orr.w	r0, r0, lr
 80082d2:	fa21 f102 	lsr.w	r1, r1, r2
 80082d6:	4414      	add	r4, r2
 80082d8:	e6bd      	b.n	8008056 <__adddf3+0xe6>
 80082da:	bf00      	nop

080082dc <__aeabi_fmul>:
 80082dc:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80082e0:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 80082e4:	bf1e      	ittt	ne
 80082e6:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 80082ea:	ea92 0f0c 	teqne	r2, ip
 80082ee:	ea93 0f0c 	teqne	r3, ip
 80082f2:	d06f      	beq.n	80083d4 <__aeabi_fmul+0xf8>
 80082f4:	441a      	add	r2, r3
 80082f6:	ea80 0c01 	eor.w	ip, r0, r1
 80082fa:	0240      	lsls	r0, r0, #9
 80082fc:	bf18      	it	ne
 80082fe:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 8008302:	d01e      	beq.n	8008342 <__aeabi_fmul+0x66>
 8008304:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8008308:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 800830c:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 8008310:	fba0 3101 	umull	r3, r1, r0, r1
 8008314:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8008318:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 800831c:	bf3e      	ittt	cc
 800831e:	0049      	lslcc	r1, r1, #1
 8008320:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 8008324:	005b      	lslcc	r3, r3, #1
 8008326:	ea40 0001 	orr.w	r0, r0, r1
 800832a:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
 800832e:	2afd      	cmp	r2, #253	; 0xfd
 8008330:	d81d      	bhi.n	800836e <__aeabi_fmul+0x92>
 8008332:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8008336:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 800833a:	bf08      	it	eq
 800833c:	f020 0001 	biceq.w	r0, r0, #1
 8008340:	4770      	bx	lr
 8008342:	f090 0f00 	teq	r0, #0
 8008346:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 800834a:	bf08      	it	eq
 800834c:	0249      	lsleq	r1, r1, #9
 800834e:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8008352:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 8008356:	3a7f      	subs	r2, #127	; 0x7f
 8008358:	bfc2      	ittt	gt
 800835a:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 800835e:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8008362:	4770      	bxgt	lr
 8008364:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8008368:	f04f 0300 	mov.w	r3, #0
 800836c:	3a01      	subs	r2, #1
 800836e:	dc5d      	bgt.n	800842c <__aeabi_fmul+0x150>
 8008370:	f112 0f19 	cmn.w	r2, #25
 8008374:	bfdc      	itt	le
 8008376:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
 800837a:	4770      	bxle	lr
 800837c:	f1c2 0200 	rsb	r2, r2, #0
 8008380:	0041      	lsls	r1, r0, #1
 8008382:	fa21 f102 	lsr.w	r1, r1, r2
 8008386:	f1c2 0220 	rsb	r2, r2, #32
 800838a:	fa00 fc02 	lsl.w	ip, r0, r2
 800838e:	ea5f 0031 	movs.w	r0, r1, rrx
 8008392:	f140 0000 	adc.w	r0, r0, #0
 8008396:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 800839a:	bf08      	it	eq
 800839c:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 80083a0:	4770      	bx	lr
 80083a2:	f092 0f00 	teq	r2, #0
 80083a6:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 80083aa:	bf02      	ittt	eq
 80083ac:	0040      	lsleq	r0, r0, #1
 80083ae:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 80083b2:	3a01      	subeq	r2, #1
 80083b4:	d0f9      	beq.n	80083aa <__aeabi_fmul+0xce>
 80083b6:	ea40 000c 	orr.w	r0, r0, ip
 80083ba:	f093 0f00 	teq	r3, #0
 80083be:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 80083c2:	bf02      	ittt	eq
 80083c4:	0049      	lsleq	r1, r1, #1
 80083c6:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 80083ca:	3b01      	subeq	r3, #1
 80083cc:	d0f9      	beq.n	80083c2 <__aeabi_fmul+0xe6>
 80083ce:	ea41 010c 	orr.w	r1, r1, ip
 80083d2:	e78f      	b.n	80082f4 <__aeabi_fmul+0x18>
 80083d4:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 80083d8:	ea92 0f0c 	teq	r2, ip
 80083dc:	bf18      	it	ne
 80083de:	ea93 0f0c 	teqne	r3, ip
 80083e2:	d00a      	beq.n	80083fa <__aeabi_fmul+0x11e>
 80083e4:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 80083e8:	bf18      	it	ne
 80083ea:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 80083ee:	d1d8      	bne.n	80083a2 <__aeabi_fmul+0xc6>
 80083f0:	ea80 0001 	eor.w	r0, r0, r1
 80083f4:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 80083f8:	4770      	bx	lr
 80083fa:	f090 0f00 	teq	r0, #0
 80083fe:	bf17      	itett	ne
 8008400:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
 8008404:	4608      	moveq	r0, r1
 8008406:	f091 0f00 	teqne	r1, #0
 800840a:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
 800840e:	d014      	beq.n	800843a <__aeabi_fmul+0x15e>
 8008410:	ea92 0f0c 	teq	r2, ip
 8008414:	d101      	bne.n	800841a <__aeabi_fmul+0x13e>
 8008416:	0242      	lsls	r2, r0, #9
 8008418:	d10f      	bne.n	800843a <__aeabi_fmul+0x15e>
 800841a:	ea93 0f0c 	teq	r3, ip
 800841e:	d103      	bne.n	8008428 <__aeabi_fmul+0x14c>
 8008420:	024b      	lsls	r3, r1, #9
 8008422:	bf18      	it	ne
 8008424:	4608      	movne	r0, r1
 8008426:	d108      	bne.n	800843a <__aeabi_fmul+0x15e>
 8008428:	ea80 0001 	eor.w	r0, r0, r1
 800842c:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8008430:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8008434:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8008438:	4770      	bx	lr
 800843a:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 800843e:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
 8008442:	4770      	bx	lr

08008444 <__aeabi_fdiv>:
 8008444:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8008448:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 800844c:	bf1e      	ittt	ne
 800844e:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8008452:	ea92 0f0c 	teqne	r2, ip
 8008456:	ea93 0f0c 	teqne	r3, ip
 800845a:	d069      	beq.n	8008530 <__aeabi_fdiv+0xec>
 800845c:	eba2 0203 	sub.w	r2, r2, r3
 8008460:	ea80 0c01 	eor.w	ip, r0, r1
 8008464:	0249      	lsls	r1, r1, #9
 8008466:	ea4f 2040 	mov.w	r0, r0, lsl #9
 800846a:	d037      	beq.n	80084dc <__aeabi_fdiv+0x98>
 800846c:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8008470:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 8008474:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8008478:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 800847c:	428b      	cmp	r3, r1
 800847e:	bf38      	it	cc
 8008480:	005b      	lslcc	r3, r3, #1
 8008482:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
 8008486:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
 800848a:	428b      	cmp	r3, r1
 800848c:	bf24      	itt	cs
 800848e:	1a5b      	subcs	r3, r3, r1
 8008490:	ea40 000c 	orrcs.w	r0, r0, ip
 8008494:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 8008498:	bf24      	itt	cs
 800849a:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 800849e:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80084a2:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 80084a6:	bf24      	itt	cs
 80084a8:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 80084ac:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80084b0:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 80084b4:	bf24      	itt	cs
 80084b6:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 80084ba:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 80084be:	011b      	lsls	r3, r3, #4
 80084c0:	bf18      	it	ne
 80084c2:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 80084c6:	d1e0      	bne.n	800848a <__aeabi_fdiv+0x46>
 80084c8:	2afd      	cmp	r2, #253	; 0xfd
 80084ca:	f63f af50 	bhi.w	800836e <__aeabi_fmul+0x92>
 80084ce:	428b      	cmp	r3, r1
 80084d0:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 80084d4:	bf08      	it	eq
 80084d6:	f020 0001 	biceq.w	r0, r0, #1
 80084da:	4770      	bx	lr
 80084dc:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 80084e0:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 80084e4:	327f      	adds	r2, #127	; 0x7f
 80084e6:	bfc2      	ittt	gt
 80084e8:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 80084ec:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 80084f0:	4770      	bxgt	lr
 80084f2:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80084f6:	f04f 0300 	mov.w	r3, #0
 80084fa:	3a01      	subs	r2, #1
 80084fc:	e737      	b.n	800836e <__aeabi_fmul+0x92>
 80084fe:	f092 0f00 	teq	r2, #0
 8008502:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8008506:	bf02      	ittt	eq
 8008508:	0040      	lsleq	r0, r0, #1
 800850a:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 800850e:	3a01      	subeq	r2, #1
 8008510:	d0f9      	beq.n	8008506 <__aeabi_fdiv+0xc2>
 8008512:	ea40 000c 	orr.w	r0, r0, ip
 8008516:	f093 0f00 	teq	r3, #0
 800851a:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 800851e:	bf02      	ittt	eq
 8008520:	0049      	lsleq	r1, r1, #1
 8008522:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8008526:	3b01      	subeq	r3, #1
 8008528:	d0f9      	beq.n	800851e <__aeabi_fdiv+0xda>
 800852a:	ea41 010c 	orr.w	r1, r1, ip
 800852e:	e795      	b.n	800845c <__aeabi_fdiv+0x18>
 8008530:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8008534:	ea92 0f0c 	teq	r2, ip
 8008538:	d108      	bne.n	800854c <__aeabi_fdiv+0x108>
 800853a:	0242      	lsls	r2, r0, #9
 800853c:	f47f af7d 	bne.w	800843a <__aeabi_fmul+0x15e>
 8008540:	ea93 0f0c 	teq	r3, ip
 8008544:	f47f af70 	bne.w	8008428 <__aeabi_fmul+0x14c>
 8008548:	4608      	mov	r0, r1
 800854a:	e776      	b.n	800843a <__aeabi_fmul+0x15e>
 800854c:	ea93 0f0c 	teq	r3, ip
 8008550:	d104      	bne.n	800855c <__aeabi_fdiv+0x118>
 8008552:	024b      	lsls	r3, r1, #9
 8008554:	f43f af4c 	beq.w	80083f0 <__aeabi_fmul+0x114>
 8008558:	4608      	mov	r0, r1
 800855a:	e76e      	b.n	800843a <__aeabi_fmul+0x15e>
 800855c:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8008560:	bf18      	it	ne
 8008562:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8008566:	d1ca      	bne.n	80084fe <__aeabi_fdiv+0xba>
 8008568:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
 800856c:	f47f af5c 	bne.w	8008428 <__aeabi_fmul+0x14c>
 8008570:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
 8008574:	f47f af3c 	bne.w	80083f0 <__aeabi_fmul+0x114>
 8008578:	e75f      	b.n	800843a <__aeabi_fmul+0x15e>
 800857a:	bf00      	nop

0800857c <Reset_Handler>:
 800857c:	2100      	movs	r1, #0
 800857e:	e003      	b.n	8008588 <DataInit>

08008580 <CopyData>:
 8008580:	4b0a      	ldr	r3, [pc, #40]	; (80085ac <Zerobss+0x10>)
 8008582:	585b      	ldr	r3, [r3, r1]
 8008584:	5043      	str	r3, [r0, r1]
 8008586:	3104      	adds	r1, #4

08008588 <DataInit>:
 8008588:	4809      	ldr	r0, [pc, #36]	; (80085b0 <Zerobss+0x14>)
 800858a:	4b0a      	ldr	r3, [pc, #40]	; (80085b4 <Zerobss+0x18>)
 800858c:	1842      	adds	r2, r0, r1
 800858e:	429a      	cmp	r2, r3
 8008590:	d3f6      	bcc.n	8008580 <CopyData>
 8008592:	4a09      	ldr	r2, [pc, #36]	; (80085b8 <Zerobss+0x1c>)
 8008594:	e002      	b.n	800859c <Zerobss>

08008596 <FillZerobss>:
 8008596:	2300      	movs	r3, #0
 8008598:	f842 3b04 	str.w	r3, [r2], #4

0800859c <Zerobss>:
 800859c:	4b07      	ldr	r3, [pc, #28]	; (80085bc <Zerobss+0x20>)
 800859e:	429a      	cmp	r2, r3
 80085a0:	d3f9      	bcc.n	8008596 <FillZerobss>
 80085a2:	f00b f99b 	bl	80138dc <SystemInit>
 80085a6:	f000 f99d 	bl	80088e4 <main>
 80085aa:	4770      	bx	lr
 80085ac:	08017ec8 	stmdaeq	r1, {r3, r6, r7, r9, sl, fp, ip, sp, lr}
 80085b0:	20000000 	andcs	r0, r0, r0
 80085b4:	200000e8 	andcs	r0, r0, r8, ror #1
 80085b8:	200000e8 	andcs	r0, r0, r8, ror #1
 80085bc:	2002a734 	andcs	sl, r2, r4, lsr r7

080085c0 <ADC0_1_IRQHandler>:
 80085c0:	e7fe      	b.n	80085c0 <ADC0_1_IRQHandler>

080085c2 <memcpy>:
 80085c2:	b510      	push	{r4, lr}
 80085c4:	1e43      	subs	r3, r0, #1
 80085c6:	440a      	add	r2, r1
 80085c8:	4291      	cmp	r1, r2
 80085ca:	d100      	bne.n	80085ce <memcpy+0xc>
 80085cc:	bd10      	pop	{r4, pc}
 80085ce:	f811 4b01 	ldrb.w	r4, [r1], #1
 80085d2:	f803 4f01 	strb.w	r4, [r3, #1]!
 80085d6:	e7f7      	b.n	80085c8 <memcpy+0x6>

080085d8 <DisplayHandler::~DisplayHandler()>:
 80085d8:	4770      	bx	lr

080085da <PixelDmxStartStop::~PixelDmxStartStop()>:
 80085da:	4770      	bx	lr

080085dc <PixelDmxStartStop::Start()>:
 80085dc:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80085e0:	4b01      	ldr	r3, [pc, #4]	; (80085e8 <PixelDmxStartStop::Start()+0xc>)
 80085e2:	f8c3 2c10 	str.w	r2, [r3, #3088]	; 0xc10
 80085e6:	4770      	bx	lr
 80085e8:	40010000 	andmi	r0, r1, r0

080085ec <PixelDmxStartStop::Stop()>:
 80085ec:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80085f0:	4b01      	ldr	r3, [pc, #4]	; (80085f8 <PixelDmxStartStop::Stop()+0xc>)
 80085f2:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 80085f6:	4770      	bx	lr
 80085f8:	40010000 	andmi	r0, r1, r0

080085fc <RDMNetDevice::CopyUID(unsigned char*)>:
 80085fc:	460b      	mov	r3, r1
 80085fe:	2206      	movs	r2, #6
 8008600:	1d01      	adds	r1, r0, #4
 8008602:	4618      	mov	r0, r3
 8008604:	f7ff bfdd 	b.w	80085c2 <memcpy>

08008608 <non-virtual thunk to RDMNetDevice::CopyUID(unsigned char*)>:
 8008608:	f1a0 00cc 	sub.w	r0, r0, #204	; 0xcc
 800860c:	e7f6      	b.n	80085fc <RDMNetDevice::CopyUID(unsigned char*)>
	...

08008610 <RDMNetDevice::CopyCID(unsigned char*)>:
 8008610:	4608      	mov	r0, r1
 8008612:	2210      	movs	r2, #16
 8008614:	4901      	ldr	r1, [pc, #4]	; (800861c <RDMNetDevice::CopyCID(unsigned char*)+0xc>)
 8008616:	f7ff bfd4 	b.w	80085c2 <memcpy>
 800861a:	bf00      	nop
 800861c:	2000c287 	andcs	ip, r0, r7, lsl #5

08008620 <non-virtual thunk to RDMNetDevice::CopyCID(unsigned char*)>:
 8008620:	f1a0 00cc 	sub.w	r0, r0, #204	; 0xcc
 8008624:	e7f4      	b.n	8008610 <RDMNetDevice::CopyCID(unsigned char*)>
 8008626:	bf00      	nop

08008628 <FactoryDefaults::~FactoryDefaults()>:
 8008628:	4770      	bx	lr

0800862a <Reboot::~Reboot()>:
 800862a:	4770      	bx	lr

0800862c <Reboot::Run()>:
 800862c:	b508      	push	{r3, lr}
 800862e:	4b05      	ldr	r3, [pc, #20]	; (8008644 <Reboot::Run()+0x18>)
 8008630:	6818      	ldr	r0, [r3, #0]
 8008632:	f001 fa5d 	bl	8009af0 <E131Bridge::Stop()>
 8008636:	4b04      	ldr	r3, [pc, #16]	; (8008648 <Reboot::Run()+0x1c>)
 8008638:	6818      	ldr	r0, [r3, #0]
 800863a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800863e:	f005 ba25 	b.w	800da8c <WS28xxMulti::Blackout()>
 8008642:	bf00      	nop
 8008644:	2000c170 	andcs	ip, r0, r0, ror r1
 8008648:	20013dc4 	andcs	r3, r1, r4, asr #27

0800864c <Reboot::~Reboot()>:
 800864c:	b510      	push	{r4, lr}
 800864e:	4604      	mov	r4, r0
 8008650:	f00a fef0 	bl	8013434 <operator delete(void*)>
 8008654:	4620      	mov	r0, r4
 8008656:	bd10      	pop	{r4, pc}

08008658 <DisplayHandler::~DisplayHandler()>:
 8008658:	b510      	push	{r4, lr}
 800865a:	4604      	mov	r4, r0
 800865c:	f00a feea 	bl	8013434 <operator delete(void*)>
 8008660:	4620      	mov	r0, r4
 8008662:	bd10      	pop	{r4, pc}

08008664 <PixelDmxStartStop::~PixelDmxStartStop()>:
 8008664:	b510      	push	{r4, lr}
 8008666:	4604      	mov	r4, r0
 8008668:	f00a fee4 	bl	8013434 <operator delete(void*)>
 800866c:	4620      	mov	r0, r4
 800866e:	bd10      	pop	{r4, pc}

08008670 <FactoryDefaults::~FactoryDefaults()>:
 8008670:	b510      	push	{r4, lr}
 8008672:	4604      	mov	r4, r0
 8008674:	f00a fede 	bl	8013434 <operator delete(void*)>
 8008678:	4620      	mov	r0, r4
 800867a:	bd10      	pop	{r4, pc}

0800867c <RDMNetDevice::LLRPHandleRdmCommand(unsigned char const*)>:
 800867c:	b510      	push	{r4, lr}
 800867e:	4c03      	ldr	r4, [pc, #12]	; (800868c <RDMNetDevice::LLRPHandleRdmCommand(unsigned char const*)+0x10>)
 8008680:	30d0      	adds	r0, #208	; 0xd0
 8008682:	4622      	mov	r2, r4
 8008684:	f003 fb40 	bl	800bd08 <RDMHandler::HandleData(unsigned char const*, unsigned char*)>
 8008688:	4620      	mov	r0, r4
 800868a:	bd10      	pop	{r4, pc}
 800868c:	2000c188 	andcs	ip, r0, r8, lsl #3

08008690 <non-virtual thunk to RDMNetDevice::LLRPHandleRdmCommand(unsigned char const*)>:
 8008690:	f1a0 00cc 	sub.w	r0, r0, #204	; 0xcc
 8008694:	e7f2      	b.n	800867c <RDMNetDevice::LLRPHandleRdmCommand(unsigned char const*)>
 8008696:	bf00      	nop

08008698 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>:
 8008698:	b110      	cbz	r0, 80086a0 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]+0x8>
 800869a:	6803      	ldr	r3, [r0, #0]
 800869c:	6a1b      	ldr	r3, [r3, #32]
 800869e:	4718      	bx	r3
 80086a0:	4770      	bx	lr

080086a2 <Display::PutChar(int) [clone .isra.0]>:
 80086a2:	b110      	cbz	r0, 80086aa <Display::PutChar(int) [clone .isra.0]+0x8>
 80086a4:	6803      	ldr	r3, [r0, #0]
 80086a6:	695b      	ldr	r3, [r3, #20]
 80086a8:	4718      	bx	r3
 80086aa:	4770      	bx	lr

080086ac <DisplayHandler::Print(unsigned int)>:
 80086ac:	b538      	push	{r3, r4, r5, lr}
 80086ae:	7903      	ldrb	r3, [r0, #4]
 80086b0:	b1f3      	cbz	r3, 80086f0 <DisplayHandler::Print(unsigned int)+0x44>
 80086b2:	2904      	cmp	r1, #4
 80086b4:	bf98      	it	ls
 80086b6:	4b0f      	ldrls	r3, [pc, #60]	; (80086f4 <DisplayHandler::Print(unsigned int)+0x48>)
 80086b8:	4d0f      	ldr	r5, [pc, #60]	; (80086f8 <DisplayHandler::Print(unsigned int)+0x4c>)
 80086ba:	bf98      	it	ls
 80086bc:	5c5c      	ldrbls	r4, [r3, r1]
 80086be:	682b      	ldr	r3, [r5, #0]
 80086c0:	bf88      	it	hi
 80086c2:	2455      	movhi	r4, #85	; 0x55
 80086c4:	6998      	ldr	r0, [r3, #24]
 80086c6:	b178      	cbz	r0, 80086e8 <DisplayHandler::Print(unsigned int)+0x3c>
 80086c8:	7901      	ldrb	r1, [r0, #4]
 80086ca:	3901      	subs	r1, #1
 80086cc:	b2c9      	uxtb	r1, r1
 80086ce:	b168      	cbz	r0, 80086ec <DisplayHandler::Print(unsigned int)+0x40>
 80086d0:	7942      	ldrb	r2, [r0, #5]
 80086d2:	3a01      	subs	r2, #1
 80086d4:	b2d2      	uxtb	r2, r2
 80086d6:	f7ff ffdf 	bl	8008698 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 80086da:	682b      	ldr	r3, [r5, #0]
 80086dc:	4621      	mov	r1, r4
 80086de:	6998      	ldr	r0, [r3, #24]
 80086e0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80086e4:	f7ff bfdd 	b.w	80086a2 <Display::PutChar(int) [clone .isra.0]>
 80086e8:	4601      	mov	r1, r0
 80086ea:	e7ee      	b.n	80086ca <DisplayHandler::Print(unsigned int)+0x1e>
 80086ec:	4602      	mov	r2, r0
 80086ee:	e7f0      	b.n	80086d2 <DisplayHandler::Print(unsigned int)+0x26>
 80086f0:	bd38      	pop	{r3, r4, r5, pc}
 80086f2:	bf00      	nop
 80086f4:	08015924 	stmdaeq	r1, {r2, r5, r8, fp, ip, lr}
 80086f8:	2001cd48 	andcs	ip, r1, r8, asr #26

080086fc <RDMNetDevice::~RDMNetDevice()>:
 80086fc:	b510      	push	{r4, lr}
 80086fe:	4604      	mov	r4, r0
 8008700:	4b05      	ldr	r3, [pc, #20]	; (8008718 <RDMNetDevice::~RDMNetDevice()+0x1c>)
 8008702:	f840 3b88 	str.w	r3, [r0], #136
 8008706:	f002 fd9d 	bl	800b244 <RDMSubDevices::~RDMSubDevices()>
 800870a:	f104 0080 	add.w	r0, r4, #128	; 0x80
 800870e:	f002 fd79 	bl	800b204 <RDMSensors::~RDMSensors()>
 8008712:	4620      	mov	r0, r4
 8008714:	bd10      	pop	{r4, pc}
 8008716:	bf00      	nop
 8008718:	08015d54 	stmdaeq	r1, {r2, r4, r6, r8, sl, fp, ip, lr}

0800871c <non-virtual thunk to RDMNetDevice::~RDMNetDevice()>:
 800871c:	f1a0 00cc 	sub.w	r0, r0, #204	; 0xcc
 8008720:	e7ec      	b.n	80086fc <RDMNetDevice::~RDMNetDevice()>
 8008722:	bf00      	nop

08008724 <RDMNetDevice::~RDMNetDevice()>:
 8008724:	b510      	push	{r4, lr}
 8008726:	4604      	mov	r4, r0
 8008728:	f7ff ffe8 	bl	80086fc <RDMNetDevice::~RDMNetDevice()>
 800872c:	4620      	mov	r0, r4
 800872e:	f00a fe81 	bl	8013434 <operator delete(void*)>
 8008732:	4620      	mov	r0, r4
 8008734:	bd10      	pop	{r4, pc}

08008736 <non-virtual thunk to RDMNetDevice::~RDMNetDevice()>:
 8008736:	f1a0 00cc 	sub.w	r0, r0, #204	; 0xcc
 800873a:	e7f3      	b.n	8008724 <RDMNetDevice::~RDMNetDevice()>

0800873c <Display::SetSleep(bool)>:
 800873c:	b538      	push	{r3, r4, r5, lr}
 800873e:	4604      	mov	r4, r0
 8008740:	6980      	ldr	r0, [r0, #24]
 8008742:	460d      	mov	r5, r1
 8008744:	b138      	cbz	r0, 8008756 <Display::SetSleep(bool)+0x1a>
 8008746:	6803      	ldr	r3, [r0, #0]
 8008748:	7421      	strb	r1, [r4, #16]
 800874a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800874c:	4798      	blx	r3
 800874e:	b915      	cbnz	r5, 8008756 <Display::SetSleep(bool)+0x1a>
 8008750:	4b01      	ldr	r3, [pc, #4]	; (8008758 <Display::SetSleep(bool)+0x1c>)
 8008752:	681b      	ldr	r3, [r3, #0]
 8008754:	6063      	str	r3, [r4, #4]
 8008756:	bd38      	pop	{r3, r4, r5, pc}
 8008758:	2001ce4c 	andcs	ip, r1, ip, asr #28

0800875c <Display::Printf(unsigned char, char const*, ...)>:
 800875c:	b40c      	push	{r2, r3}
 800875e:	b570      	push	{r4, r5, r6, lr}
 8008760:	6984      	ldr	r4, [r0, #24]
 8008762:	4605      	mov	r5, r0
 8008764:	460e      	mov	r6, r1
 8008766:	b08a      	sub	sp, #40	; 0x28
 8008768:	b174      	cbz	r4, 8008788 <Display::Printf(unsigned char, char const*, ...)+0x2c>
 800876a:	ab0f      	add	r3, sp, #60	; 0x3c
 800876c:	2120      	movs	r1, #32
 800876e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8008770:	a802      	add	r0, sp, #8
 8008772:	9301      	str	r3, [sp, #4]
 8008774:	f000 ff44 	bl	8009600 <vsnprintf>
 8008778:	4604      	mov	r4, r0
 800877a:	69a8      	ldr	r0, [r5, #24]
 800877c:	4631      	mov	r1, r6
 800877e:	6803      	ldr	r3, [r0, #0]
 8008780:	aa02      	add	r2, sp, #8
 8008782:	69dd      	ldr	r5, [r3, #28]
 8008784:	b2a3      	uxth	r3, r4
 8008786:	47a8      	blx	r5
 8008788:	4620      	mov	r0, r4
 800878a:	b00a      	add	sp, #40	; 0x28
 800878c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8008790:	b002      	add	sp, #8
 8008792:	4770      	bx	lr

08008794 <Display::TextStatus(char const*)>:
 8008794:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008798:	4604      	mov	r4, r0
 800879a:	6980      	ldr	r0, [r0, #24]
 800879c:	460d      	mov	r5, r1
 800879e:	b360      	cbz	r0, 80087fa <Display::TextStatus(char const*)+0x66>
 80087a0:	7947      	ldrb	r7, [r0, #5]
 80087a2:	2100      	movs	r1, #0
 80087a4:	1e7e      	subs	r6, r7, #1
 80087a6:	b2f6      	uxtb	r6, r6
 80087a8:	4632      	mov	r2, r6
 80087aa:	f890 9004 	ldrb.w	r9, [r0, #4]
 80087ae:	f04f 0800 	mov.w	r8, #0
 80087b2:	f7ff ff71 	bl	8008698 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 80087b6:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 80087ba:	45c1      	cmp	r9, r8
 80087bc:	69a0      	ldr	r0, [r4, #24]
 80087be:	d816      	bhi.n	80087ee <Display::TextStatus(char const*)+0x5a>
 80087c0:	4632      	mov	r2, r6
 80087c2:	2100      	movs	r1, #0
 80087c4:	f7ff ff68 	bl	8008698 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 80087c8:	69a0      	ldr	r0, [r4, #24]
 80087ca:	b1b0      	cbz	r0, 80087fa <Display::TextStatus(char const*)+0x66>
 80087cc:	2300      	movs	r3, #0
 80087ce:	7901      	ldrb	r1, [r0, #4]
 80087d0:	5cea      	ldrb	r2, [r5, r3]
 80087d2:	b11a      	cbz	r2, 80087dc <Display::TextStatus(char const*)+0x48>
 80087d4:	1c5a      	adds	r2, r3, #1
 80087d6:	4299      	cmp	r1, r3
 80087d8:	4613      	mov	r3, r2
 80087da:	dcf9      	bgt.n	80087d0 <Display::TextStatus(char const*)+0x3c>
 80087dc:	6802      	ldr	r2, [r0, #0]
 80087de:	4639      	mov	r1, r7
 80087e0:	69d4      	ldr	r4, [r2, #28]
 80087e2:	b2db      	uxtb	r3, r3
 80087e4:	462a      	mov	r2, r5
 80087e6:	46a4      	mov	ip, r4
 80087e8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80087ec:	4760      	bx	ip
 80087ee:	2120      	movs	r1, #32
 80087f0:	f7ff ff57 	bl	80086a2 <Display::PutChar(int) [clone .isra.0]>
 80087f4:	f108 0801 	add.w	r8, r8, #1
 80087f8:	e7df      	b.n	80087ba <Display::TextStatus(char const*)+0x26>
 80087fa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

080087fe <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>:
 80087fe:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008800:	4605      	mov	r5, r0
 8008802:	461e      	mov	r6, r3
 8008804:	460f      	mov	r7, r1
 8008806:	4614      	mov	r4, r2
 8008808:	f7ff ffc4 	bl	8008794 <Display::TextStatus(char const*)>
 800880c:	7c6b      	ldrb	r3, [r5, #17]
 800880e:	b19b      	cbz	r3, 8008838 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x3a>
 8008810:	43e2      	mvns	r2, r4
 8008812:	2312      	movs	r3, #18
 8008814:	7a28      	ldrb	r0, [r5, #8]
 8008816:	f88d 3004 	strb.w	r3, [sp, #4]
 800881a:	f3c2 2307 	ubfx	r3, r2, #8, #8
 800881e:	f88d 3005 	strb.w	r3, [sp, #5]
 8008822:	f88d 2006 	strb.w	r2, [sp, #6]
 8008826:	f00b ff9f 	bl	8014768 <gd32_i2c_set_address(unsigned char)>
 800882a:	68e8      	ldr	r0, [r5, #12]
 800882c:	f00b ff94 	bl	8014758 <gd32_i2c_set_baudrate(unsigned int)>
 8008830:	2103      	movs	r1, #3
 8008832:	a801      	add	r0, sp, #4
 8008834:	f00b ff9e 	bl	8014774 <gd32_i2c_write(char const*, unsigned int)>
 8008838:	1c73      	adds	r3, r6, #1
 800883a:	d006      	beq.n	800884a <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x4c>
 800883c:	4639      	mov	r1, r7
 800883e:	4630      	mov	r0, r6
 8008840:	b003      	add	sp, #12
 8008842:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8008846:	f00a bc93 	b.w	8013170 <console_status>
 800884a:	b003      	add	sp, #12
 800884c:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08008850 <display::timeout::gpio_init()>:
 8008850:	b510      	push	{r4, lr}
 8008852:	f240 6003 	movw	r0, #1539	; 0x603
 8008856:	f00b fa81 	bl	8013d5c <rcu_periph_clock_enable>
 800885a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800885e:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8008862:	2203      	movs	r2, #3
 8008864:	2148      	movs	r1, #72	; 0x48
 8008866:	4801      	ldr	r0, [pc, #4]	; (800886c <display::timeout::gpio_init()+0x1c>)
 8008868:	f00b b9e0 	b.w	8013c2c <gpio_init>
 800886c:	40010c00 	andmi	r0, r1, r0, lsl #24

08008870 <display::timeout::gpio_renew()>:
 8008870:	4b03      	ldr	r3, [pc, #12]	; (8008880 <display::timeout::gpio_renew()+0x10>)
 8008872:	f8d3 0c08 	ldr.w	r0, [r3, #3080]	; 0xc08
 8008876:	f480 4080 	eor.w	r0, r0, #16384	; 0x4000
 800887a:	f3c0 3080 	ubfx	r0, r0, #14, #1
 800887e:	4770      	bx	lr
 8008880:	40010000 	andmi	r0, r1, r0

08008884 <StoreNetwork::SaveDhcp(bool)>:
 8008884:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8008886:	2301      	movs	r3, #1
 8008888:	f88d 1017 	strb.w	r1, [sp, #23]
 800888c:	2100      	movs	r1, #0
 800888e:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8008892:	4805      	ldr	r0, [pc, #20]	; (80088a8 <StoreNetwork::SaveDhcp(bool)+0x24>)
 8008894:	9300      	str	r3, [sp, #0]
 8008896:	2214      	movs	r2, #20
 8008898:	6800      	ldr	r0, [r0, #0]
 800889a:	f10d 0317 	add.w	r3, sp, #23
 800889e:	f006 fcfb 	bl	800f298 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 80088a2:	b007      	add	sp, #28
 80088a4:	f85d fb04 	ldr.w	pc, [sp], #4
 80088a8:	20014e08 	andcs	r4, r1, r8, lsl #28

080088ac <non-virtual thunk to StoreNetwork::SaveDhcp(bool)>:
 80088ac:	f1a0 0004 	sub.w	r0, r0, #4
 80088b0:	e7e8      	b.n	8008884 <StoreNetwork::SaveDhcp(bool)>
 80088b2:	bf00      	nop

080088b4 <FactoryDefaults::Set()>:
 80088b4:	b508      	push	{r3, lr}
 80088b6:	4b08      	ldr	r3, [pc, #32]	; (80088d8 <FactoryDefaults::Set()+0x24>)
 80088b8:	2100      	movs	r1, #0
 80088ba:	6818      	ldr	r0, [r3, #0]
 80088bc:	f005 fb52 	bl	800df64 <RemoteConfig::SetDisable(bool)>
 80088c0:	4b06      	ldr	r3, [pc, #24]	; (80088dc <FactoryDefaults::Set()+0x28>)
 80088c2:	210b      	movs	r1, #11
 80088c4:	6818      	ldr	r0, [r3, #0]
 80088c6:	f006 fcd5 	bl	800f274 <SpiFlashStore::ResetSetList(spiflashstore::Store)>
 80088ca:	4b05      	ldr	r3, [pc, #20]	; (80088e0 <FactoryDefaults::Set()+0x2c>)
 80088cc:	2101      	movs	r1, #1
 80088ce:	6818      	ldr	r0, [r3, #0]
 80088d0:	f7ff ffd8 	bl	8008884 <StoreNetwork::SaveDhcp(bool)>
 80088d4:	bd08      	pop	{r3, pc}
 80088d6:	bf00      	nop
 80088d8:	20013df0 	strdcs	r3, [r1], -r0
 80088dc:	20014e08 	andcs	r4, r1, r8, lsl #28
 80088e0:	20014e18 	andcs	r4, r1, r8, lsl lr

080088e4 <main>:
 80088e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80088e8:	2601      	movs	r6, #1
 80088ea:	f5ad 5dc6 	sub.w	sp, sp, #6336	; 0x18c0
 80088ee:	b087      	sub	sp, #28
 80088f0:	a80e      	add	r0, sp, #56	; 0x38
 80088f2:	f00a fcf1 	bl	80132d8 <Hardware::Hardware()>
 80088f6:	a88d      	add	r0, sp, #564	; 0x234
 80088f8:	f008 f942 	bl	8010b80 <Network::Network()>
 80088fc:	a816      	add	r0, sp, #88	; 0x58
 80088fe:	f00a fc95 	bl	801322c <LedBlink::LedBlink()>
 8008902:	a877      	add	r0, sp, #476	; 0x1dc
 8008904:	f009 fae6 	bl	8011ed4 <DisplayUdf::DisplayUdf()>
 8008908:	4aba      	ldr	r2, [pc, #744]	; (8008bf4 <main+0x310>)
 800890a:	4bbb      	ldr	r3, [pc, #748]	; (8008bf8 <main+0x314>)
 800890c:	49bb      	ldr	r1, [pc, #748]	; (8008bfc <main+0x318>)
 800890e:	a806      	add	r0, sp, #24
 8008910:	f00a fc46 	bl	80131a0 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>
 8008914:	a807      	add	r0, sp, #28
 8008916:	f006 fff1 	bl	800f8fc <FlashRom::FlashRom()>
 800891a:	a808      	add	r0, sp, #32
 800891c:	f006 fc84 	bl	800f228 <SpiFlashStore::SpiFlashStore()>
 8008920:	49b7      	ldr	r1, [pc, #732]	; (8008c00 <main+0x31c>)
 8008922:	a806      	add	r0, sp, #24
 8008924:	f00a fc74 	bl	8013210 <FirmwareVersion::Print(char const*)>
 8008928:	4bb6      	ldr	r3, [pc, #728]	; (8008c04 <main+0x320>)
 800892a:	2004      	movs	r0, #4
 800892c:	611e      	str	r6, [r3, #16]
 800892e:	f00a fd85 	bl	801343c <operator new(unsigned int)>
 8008932:	4bb5      	ldr	r3, [pc, #724]	; (8008c08 <main+0x324>)
 8008934:	ac0e      	add	r4, sp, #56	; 0x38
 8008936:	f844 0914 	str.w	r0, [r4], #-20
 800893a:	6003      	str	r3, [r0, #0]
 800893c:	2008      	movs	r0, #8
 800893e:	f00a fd7d 	bl	801343c <operator new(unsigned int)>
 8008942:	4bb2      	ldr	r3, [pc, #712]	; (8008c0c <main+0x328>)
 8008944:	2500      	movs	r5, #0
 8008946:	6003      	str	r3, [r0, #0]
 8008948:	4bb1      	ldr	r3, [pc, #708]	; (8008c10 <main+0x32c>)
 800894a:	f44f 62c0 	mov.w	r2, #1536	; 0x600
 800894e:	681b      	ldr	r3, [r3, #0]
 8008950:	49b0      	ldr	r1, [pc, #704]	; (8008c14 <main+0x330>)
 8008952:	3b00      	subs	r3, #0
 8008954:	bf18      	it	ne
 8008956:	2301      	movne	r3, #1
 8008958:	9018      	str	r0, [sp, #96]	; 0x60
 800895a:	7103      	strb	r3, [r0, #4]
 800895c:	2303      	movs	r3, #3
 800895e:	a877      	add	r0, sp, #476	; 0x1dc
 8008960:	f7ff ff4d 	bl	80087fe <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008964:	a810      	add	r0, sp, #64	; 0x40
 8008966:	f006 fe4d 	bl	800f604 <StoreNetwork::StoreNetwork()>
 800896a:	ab8d      	add	r3, sp, #564	; 0x234
 800896c:	4618      	mov	r0, r3
 800896e:	aa11      	add	r2, sp, #68	; 0x44
 8008970:	a910      	add	r1, sp, #64	; 0x40
 8008972:	f8c3 20b4 	str.w	r2, [r3, #180]	; 0xb4
 8008976:	f008 f95b 	bl	8010c30 <Network::Init(NetworkParamsStore*)>
 800897a:	a88d      	add	r0, sp, #564	; 0x234
 800897c:	f008 fbaa 	bl	80110d4 <Network::Print()>
 8008980:	2303      	movs	r3, #3
 8008982:	f44f 62e0 	mov.w	r2, #1792	; 0x700
 8008986:	49a4      	ldr	r1, [pc, #656]	; (8008c18 <main+0x334>)
 8008988:	a877      	add	r0, sp, #476	; 0x1dc
 800898a:	f7ff ff38 	bl	80087fe <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 800898e:	4620      	mov	r0, r4
 8008990:	f007 fd38 	bl	8010404 <MDNS::MDNS()>
 8008994:	4620      	mov	r0, r4
 8008996:	f007 fdf5 	bl	8010584 <MDNS::Start()>
 800899a:	f642 1305 	movw	r3, #10501	; 0x2905
 800899e:	4629      	mov	r1, r5
 80089a0:	4a9e      	ldr	r2, [pc, #632]	; (8008c1c <main+0x338>)
 80089a2:	4620      	mov	r0, r4
 80089a4:	e9cd 5500 	strd	r5, r5, [sp]
 80089a8:	f007 ff56 	bl	8010858 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 80089ac:	4b9c      	ldr	r3, [pc, #624]	; (8008c20 <main+0x33c>)
 80089ae:	4629      	mov	r1, r5
 80089b0:	4a9c      	ldr	r2, [pc, #624]	; (8008c24 <main+0x340>)
 80089b2:	e9cd 6300 	strd	r6, r3, [sp]
 80089b6:	4620      	mov	r0, r4
 80089b8:	2350      	movs	r3, #80	; 0x50
 80089ba:	f007 ff4d 	bl	8010858 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 80089be:	4620      	mov	r0, r4
 80089c0:	f008 f890 	bl	8010ae4 <MDNS::Print()>
 80089c4:	2303      	movs	r3, #3
 80089c6:	f44f 42cc 	mov.w	r2, #26112	; 0x6600
 80089ca:	4997      	ldr	r1, [pc, #604]	; (8008c28 <main+0x344>)
 80089cc:	a877      	add	r0, sp, #476	; 0x1dc
 80089ce:	f7ff ff16 	bl	80087fe <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 80089d2:	a80a      	add	r0, sp, #40	; 0x28
 80089d4:	f006 fd82 	bl	800f4dc <StoreE131::StoreE131()>
 80089d8:	a90a      	add	r1, sp, #40	; 0x28
 80089da:	a836      	add	r0, sp, #216	; 0xd8
 80089dc:	f001 ffdc 	bl	800a998 <E131Params::E131Params(E131ParamsStore*)>
 80089e0:	f60d 10c8 	addw	r0, sp, #2504	; 0x9c8
 80089e4:	f001 f8d4 	bl	8009b90 <E131Bridge::E131Bridge()>
 80089e8:	a836      	add	r0, sp, #216	; 0xd8
 80089ea:	f001 fff5 	bl	800a9d8 <E131Params::Load()>
 80089ee:	b138      	cbz	r0, 8008a00 <main+0x11c>
 80089f0:	a836      	add	r0, sp, #216	; 0xd8
 80089f2:	f60d 11c8 	addw	r1, sp, #2504	; 0x9c8
 80089f6:	f002 fa30 	bl	800ae5a <E131Params::Set(E131Bridge*)>
 80089fa:	a836      	add	r0, sp, #216	; 0xd8
 80089fc:	f002 fa66 	bl	800aecc <E131Params::Dump()>
 8008a00:	4e8a      	ldr	r6, [pc, #552]	; (8008c2c <main+0x348>)
 8008a02:	ad1c      	add	r5, sp, #112	; 0x70
 8008a04:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 8008a06:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8008a08:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 8008a0c:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 8008a10:	a812      	add	r0, sp, #72	; 0x48
 8008a12:	f006 ff67 	bl	800f8e4 <StoreWS28xxDmx::StoreWS28xxDmx()>
 8008a16:	a912      	add	r1, sp, #72	; 0x48
 8008a18:	a852      	add	r0, sp, #328	; 0x148
 8008a1a:	f003 fed9 	bl	800c7d0 <WS28xxDmxParams::WS28xxDmxParams(WS28xxDmxParamsStore*)>
 8008a1e:	a852      	add	r0, sp, #328	; 0x148
 8008a20:	f003 fefe 	bl	800c820 <WS28xxDmxParams::Load()>
 8008a24:	b130      	cbz	r0, 8008a34 <main+0x150>
 8008a26:	a852      	add	r0, sp, #328	; 0x148
 8008a28:	a91c      	add	r1, sp, #112	; 0x70
 8008a2a:	f004 f998 	bl	800cd5e <WS28xxDmxParams::Set(PixelDmxConfiguration*)>
 8008a2e:	a852      	add	r0, sp, #328	; 0x148
 8008a30:	f004 f9d3 	bl	800cdda <WS28xxDmxParams::Dump()>
 8008a34:	a91c      	add	r1, sp, #112	; 0x70
 8008a36:	a869      	add	r0, sp, #420	; 0x1a4
 8008a38:	f003 fde0 	bl	800c5fc <WS28xxDmxMulti::WS28xxDmxMulti(PixelDmxConfiguration&)>
 8008a3c:	2004      	movs	r0, #4
 8008a3e:	f00a fcfd 	bl	801343c <operator new(unsigned int)>
 8008a42:	4b7b      	ldr	r3, [pc, #492]	; (8008c30 <main+0x34c>)
 8008a44:	4605      	mov	r5, r0
 8008a46:	6003      	str	r3, [r0, #0]
 8008a48:	2203      	movs	r2, #3
 8008a4a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8008a4e:	2110      	movs	r1, #16
 8008a50:	4878      	ldr	r0, [pc, #480]	; (8008c34 <main+0x350>)
 8008a52:	f00b f8eb 	bl	8013c2c <gpio_init>
 8008a56:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8008a5a:	4b77      	ldr	r3, [pc, #476]	; (8008c38 <main+0x354>)
 8008a5c:	f44f 5a80 	mov.w	sl, #4096	; 0x1000
 8008a60:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 8008a64:	9574      	str	r5, [sp, #464]	; 0x1d0
 8008a66:	2500      	movs	r5, #0
 8008a68:	4629      	mov	r1, r5
 8008a6a:	f8dd 91c0 	ldr.w	r9, [sp, #448]	; 0x1c0
 8008a6e:	9e72      	ldr	r6, [sp, #456]	; 0x1c8
 8008a70:	ab69      	add	r3, sp, #420	; 0x1a4
 8008a72:	42b5      	cmp	r5, r6
 8008a74:	f040 81e0 	bne.w	8008e38 <main+0x554>
 8008a78:	f89d 8172 	ldrb.w	r8, [sp, #370]	; 0x172
 8008a7c:	ab52      	add	r3, sp, #328	; 0x148
 8008a7e:	f1b8 0f00 	cmp.w	r8, #0
 8008a82:	f000 8243 	beq.w	8008f0c <main+0x628>
 8008a86:	2001      	movs	r0, #1
 8008a88:	f00a fcd8 	bl	801343c <operator new(unsigned int)>
 8008a8c:	4631      	mov	r1, r6
 8008a8e:	4607      	mov	r7, r0
 8008a90:	f004 faa6 	bl	800cfe0 <PixelPatterns::PixelPatterns(unsigned int)>
 8008a94:	4b69      	ldr	r3, [pc, #420]	; (8008c3c <main+0x358>)
 8008a96:	f1b8 0f05 	cmp.w	r8, #5
 8008a9a:	f8c3 8000 	str.w	r8, [r3]
 8008a9e:	f340 81f4 	ble.w	8008e8a <main+0x5a6>
 8008aa2:	2300      	movs	r3, #0
 8008aa4:	4d66      	ldr	r5, [pc, #408]	; (8008c40 <main+0x35c>)
 8008aa6:	f44f 42fe 	mov.w	r2, #32512	; 0x7f00
 8008aaa:	4966      	ldr	r1, [pc, #408]	; (8008c44 <main+0x360>)
 8008aac:	f8cd 39cc 	str.w	r3, [sp, #2508]	; 0x9cc
 8008ab0:	a877      	add	r0, sp, #476	; 0x1dc
 8008ab2:	2303      	movs	r3, #3
 8008ab4:	f7ff fea3 	bl	80087fe <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008ab8:	682b      	ldr	r3, [r5, #0]
 8008aba:	6818      	ldr	r0, [r3, #0]
 8008abc:	f004 fd04 	bl	800d4c8 <PixelType::GetType(pixel::Type)>
 8008ac0:	682b      	ldr	r3, [r5, #0]
 8008ac2:	2120      	movs	r1, #32
 8008ac4:	685b      	ldr	r3, [r3, #4]
 8008ac6:	4a60      	ldr	r2, [pc, #384]	; (8008c48 <main+0x364>)
 8008ac8:	e9cd 0300 	strd	r0, r3, [sp]
 8008acc:	4633      	mov	r3, r6
 8008ace:	a824      	add	r0, sp, #144	; 0x90
 8008ad0:	f000 fd7e 	bl	80095d0 <snprintf>
 8008ad4:	4a5d      	ldr	r2, [pc, #372]	; (8008c4c <main+0x368>)
 8008ad6:	2120      	movs	r1, #32
 8008ad8:	a82d      	add	r0, sp, #180	; 0xb4
 8008ada:	f000 fd79 	bl	80095d0 <snprintf>
 8008ade:	4605      	mov	r5, r0
 8008ae0:	202c      	movs	r0, #44	; 0x2c
 8008ae2:	f00a fcab 	bl	801343c <operator new(unsigned int)>
 8008ae6:	2200      	movs	r2, #0
 8008ae8:	4603      	mov	r3, r0
 8008aea:	6042      	str	r2, [r0, #4]
 8008aec:	6282      	str	r2, [r0, #40]	; 0x28
 8008aee:	f100 0c28 	add.w	ip, r0, #40	; 0x28
 8008af2:	f823 2b08 	strh.w	r2, [r3], #8
 8008af6:	aa24      	add	r2, sp, #144	; 0x90
 8008af8:	f812 1b01 	ldrb.w	r1, [r2], #1
 8008afc:	b111      	cbz	r1, 8008b04 <main+0x220>
 8008afe:	4563      	cmp	r3, ip
 8008b00:	f040 8207 	bne.w	8008f12 <main+0x62e>
 8008b04:	2201      	movs	r2, #1
 8008b06:	900b      	str	r0, [sp, #44]	; 0x2c
 8008b08:	a90b      	add	r1, sp, #44	; 0x2c
 8008b0a:	a8bf      	add	r0, sp, #764	; 0x2fc
 8008b0c:	ab0b      	add	r3, sp, #44	; 0x2c
 8008b0e:	f002 fce3 	bl	800b4d8 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)>
 8008b12:	a8f2      	add	r0, sp, #968	; 0x3c8
 8008b14:	f002 fa3a 	bl	800af8c <LLRPDevice::LLRPDevice()>
 8008b18:	4b4d      	ldr	r3, [pc, #308]	; (8008c50 <main+0x36c>)
 8008b1a:	2100      	movs	r1, #0
 8008b1c:	93bf      	str	r3, [sp, #764]	; 0x2fc
 8008b1e:	3324      	adds	r3, #36	; 0x24
 8008b20:	93f2      	str	r3, [sp, #968]	; 0x3c8
 8008b22:	a8f3      	add	r0, sp, #972	; 0x3cc
 8008b24:	f002 feae 	bl	800b884 <RDMHandler::RDMHandler(bool)>
 8008b28:	4b4a      	ldr	r3, [pc, #296]	; (8008c54 <main+0x370>)
 8008b2a:	494b      	ldr	r1, [pc, #300]	; (8008c58 <main+0x374>)
 8008b2c:	6818      	ldr	r0, [r3, #0]
 8008b2e:	f00a fc27 	bl	8013380 <Hardware::GetUuid(unsigned char*)>
 8008b32:	b2ed      	uxtb	r5, r5
 8008b34:	f89d 3350 	ldrb.w	r3, [sp, #848]	; 0x350
 8008b38:	2d20      	cmp	r5, #32
 8008b3a:	f50d 793f 	add.w	r9, sp, #764	; 0x2fc
 8008b3e:	bf28      	it	cs
 8008b40:	2520      	movcs	r5, #32
 8008b42:	2b00      	cmp	r3, #0
 8008b44:	f000 81eb 	beq.w	8008f1e <main+0x63a>
 8008b48:	f20d 3a0a 	addw	sl, sp, #778	; 0x30a
 8008b4c:	462a      	mov	r2, r5
 8008b4e:	4650      	mov	r0, sl
 8008b50:	a92d      	add	r1, sp, #180	; 0xb4
 8008b52:	f7ff fd36 	bl	80085c2 <memcpy>
 8008b56:	f8d9 0078 	ldr.w	r0, [r9, #120]	; 0x78
 8008b5a:	f889 502e 	strb.w	r5, [r9, #46]	; 0x2e
 8008b5e:	b120      	cbz	r0, 8008b6a <main+0x286>
 8008b60:	6803      	ldr	r3, [r0, #0]
 8008b62:	462a      	mov	r2, r5
 8008b64:	4651      	mov	r1, sl
 8008b66:	689b      	ldr	r3, [r3, #8]
 8008b68:	4798      	blx	r3
 8008b6a:	4b3c      	ldr	r3, [pc, #240]	; (8008c5c <main+0x378>)
 8008b6c:	2004      	movs	r0, #4
 8008b6e:	93d3      	str	r3, [sp, #844]	; 0x34c
 8008b70:	f00a fc64 	bl	801343c <operator new(unsigned int)>
 8008b74:	4b3a      	ldr	r3, [pc, #232]	; (8008c60 <main+0x37c>)
 8008b76:	adbf      	add	r5, sp, #764	; 0x2fc
 8008b78:	6003      	str	r3, [r0, #0]
 8008b7a:	f8c5 00c8 	str.w	r0, [r5, #200]	; 0xc8
 8008b7e:	4628      	mov	r0, r5
 8008b80:	f002 fd08 	bl	800b594 <RDMDeviceResponder::Init()>
 8008b84:	a814      	add	r0, sp, #80	; 0x50
 8008b86:	f006 fd9b 	bl	800f6c0 <StoreRDMDevice::StoreRDMDevice()>
 8008b8a:	a914      	add	r1, sp, #80	; 0x50
 8008b8c:	a85d      	add	r0, sp, #372	; 0x174
 8008b8e:	f002 fc0b 	bl	800b3a8 <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)>
 8008b92:	a85d      	add	r0, sp, #372	; 0x174
 8008b94:	f002 fc1a 	bl	800b3cc <RDMDeviceParams::Load()>
 8008b98:	b130      	cbz	r0, 8008ba8 <main+0x2c4>
 8008b9a:	a85d      	add	r0, sp, #372	; 0x174
 8008b9c:	a9c0      	add	r1, sp, #768	; 0x300
 8008b9e:	f002 fc20 	bl	800b3e2 <RDMDeviceParams::Set(RDMDevice*)>
 8008ba2:	a85d      	add	r0, sp, #372	; 0x174
 8008ba4:	f002 fc52 	bl	800b44c <RDMDeviceParams::Dump()>
 8008ba8:	abbf      	add	r3, sp, #764	; 0x2fc
 8008baa:	aa15      	add	r2, sp, #84	; 0x54
 8008bac:	4618      	mov	r0, r3
 8008bae:	679a      	str	r2, [r3, #120]	; 0x78
 8008bb0:	f002 fb00 	bl	800b1b4 <RDMNetDevice::Print()>
 8008bb4:	f60d 10c8 	addw	r0, sp, #2504	; 0x9c8
 8008bb8:	f001 fe24 	bl	800a804 <E131Bridge::Print()>
 8008bbc:	a869      	add	r0, sp, #420	; 0x1a4
 8008bbe:	f003 fce5 	bl	800c58c <WS28xxDmxMulti::Print()>
 8008bc2:	4632      	mov	r2, r6
 8008bc4:	4927      	ldr	r1, [pc, #156]	; (8008c64 <main+0x380>)
 8008bc6:	a877      	add	r0, sp, #476	; 0x1dc
 8008bc8:	f009 f99a 	bl	8011f00 <DisplayUdf::SetTitle(char const*, ...)>
 8008bcc:	2202      	movs	r2, #2
 8008bce:	a877      	add	r0, sp, #476	; 0x1dc
 8008bd0:	4611      	mov	r1, r2
 8008bd2:	f009 faeb 	bl	80121ac <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8008bd6:	2207      	movs	r2, #7
 8008bd8:	2103      	movs	r1, #3
 8008bda:	a877      	add	r0, sp, #476	; 0x1dc
 8008bdc:	f009 fae6 	bl	80121ac <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8008be0:	2203      	movs	r2, #3
 8008be2:	2104      	movs	r1, #4
 8008be4:	a877      	add	r0, sp, #476	; 0x1dc
 8008be6:	f009 fae1 	bl	80121ac <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8008bea:	2204      	movs	r2, #4
 8008bec:	2105      	movs	r1, #5
 8008bee:	a877      	add	r0, sp, #476	; 0x1dc
 8008bf0:	e03a      	b.n	8008c68 <main+0x384>
 8008bf2:	bf00      	nop
 8008bf4:	080157dd 	stmdaeq	r1, {r0, r2, r3, r4, r6, r7, r8, r9, sl, ip, lr}
 8008bf8:	080157d4 	stmdaeq	r1, {r2, r4, r6, r7, r8, r9, sl, ip, lr}
 8008bfc:	08015929 	stmdaeq	r1, {r0, r3, r5, r8, fp, ip, lr}
 8008c00:	080157e9 	stmdaeq	r1, {r0, r3, r5, r6, r7, r8, r9, sl, ip, lr}
 8008c04:	40011000 	andmi	r1, r1, r0
 8008c08:	08015918 	stmdaeq	r1, {r3, r4, r8, fp, ip, lr}
 8008c0c:	08015898 	stmdaeq	r1, {r3, r4, r7, fp, ip, lr}
 8008c10:	2001cd48 	andcs	ip, r1, r8, asr #26
 8008c14:	0801751d 	stmdaeq	r1, {r0, r2, r3, r4, r8, sl, ip, sp, lr}
 8008c18:	0801750c 	stmdaeq	r1, {r2, r3, r8, sl, ip, sp, lr}
 8008c1c:	08015820 	stmdaeq	r1, {r5, fp, ip, lr}
 8008c20:	08015830 	stmdaeq	r1, {r4, r5, fp, ip, lr}
 8008c24:	08015829 	stmdaeq	r1, {r0, r3, r5, fp, ip, lr}
 8008c28:	08015a2d 	stmdaeq	r1, {r0, r2, r3, r5, r9, fp, ip, lr}
 8008c2c:	0801579c 	stmdaeq	r1, {r2, r3, r4, r7, r8, r9, sl, ip, lr}
 8008c30:	080158ac 	stmdaeq	r1, {r2, r3, r5, r7, fp, ip, lr}
 8008c34:	40010c00 	andmi	r0, r1, r0, lsl #24
 8008c38:	40010000 	andmi	r0, r1, r0
 8008c3c:	2000c5bc 			; <UNDEFINED> instruction: 0x2000c5bc
 8008c40:	20013dc4 	andcs	r3, r1, r4, asr #27
 8008c44:	08015c38 	stmdaeq	r1, {r3, r4, r5, sl, fp, ip, lr}
 8008c48:	08015846 	stmdaeq	r1, {r1, r2, r6, fp, ip, lr}
 8008c4c:	0801585a 	stmdaeq	r1, {r1, r3, r4, r6, fp, ip, lr}
 8008c50:	080158c4 	stmdaeq	r1, {r2, r6, r7, fp, ip, lr}
 8008c54:	2001ce38 	andcs	ip, r1, r8, lsr lr
 8008c58:	2000c287 	andcs	ip, r0, r7, lsl #5
 8008c5c:	06010100 	streq	r0, [r1], -r0, lsl #2
 8008c60:	08015904 	stmdaeq	r1, {r2, r8, fp, ip, lr}
 8008c64:	0801586a 	stmdaeq	r1, {r1, r3, r5, r6, fp, ip, lr}
 8008c68:	f009 faa0 	bl	80121ac <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8008c6c:	ad1c      	add	r5, sp, #112	; 0x70
 8008c6e:	2201      	movs	r2, #1
 8008c70:	2106      	movs	r1, #6
 8008c72:	a877      	add	r0, sp, #476	; 0x1dc
 8008c74:	f009 fa9a 	bl	80121ac <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8008c78:	6828      	ldr	r0, [r5, #0]
 8008c7a:	f004 fc25 	bl	800d4c8 <PixelType::GetType(pixel::Type)>
 8008c7e:	4606      	mov	r6, r0
 8008c80:	68a8      	ldr	r0, [r5, #8]
 8008c82:	f8d5 9004 	ldr.w	r9, [r5, #4]
 8008c86:	f8d5 a018 	ldr.w	sl, [r5, #24]
 8008c8a:	f004 fc75 	bl	800d578 <PixelType::GetMap(pixel::Map)>
 8008c8e:	4633      	mov	r3, r6
 8008c90:	2107      	movs	r1, #7
 8008c92:	4aab      	ldr	r2, [pc, #684]	; (8008f40 <main+0x65c>)
 8008c94:	e9cd a001 	strd	sl, r0, [sp, #4]
 8008c98:	f8cd 9000 	str.w	r9, [sp]
 8008c9c:	a877      	add	r0, sp, #476	; 0x1dc
 8008c9e:	f7ff fd5d 	bl	800875c <Display::Printf(unsigned char, char const*, ...)>
 8008ca2:	a80c      	add	r0, sp, #48	; 0x30
 8008ca4:	f006 fbe6 	bl	800f474 <StoreDisplayUdf::StoreDisplayUdf()>
 8008ca8:	a90c      	add	r1, sp, #48	; 0x30
 8008caa:	a848      	add	r0, sp, #288	; 0x120
 8008cac:	f009 fac0 	bl	8012230 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 8008cb0:	a848      	add	r0, sp, #288	; 0x120
 8008cb2:	f009 faca 	bl	801224a <DisplayUdfParams::Load()>
 8008cb6:	b130      	cbz	r0, 8008cc6 <main+0x3e2>
 8008cb8:	a848      	add	r0, sp, #288	; 0x120
 8008cba:	a977      	add	r1, sp, #476	; 0x1dc
 8008cbc:	f009 fbfd 	bl	80124ba <DisplayUdfParams::Set(DisplayUdf*)>
 8008cc0:	a848      	add	r0, sp, #288	; 0x120
 8008cc2:	f009 fc2d 	bl	8012520 <DisplayUdfParams::Dump()>
 8008cc6:	f60d 11c8 	addw	r1, sp, #2504	; 0x9c8
 8008cca:	a877      	add	r0, sp, #476	; 0x1dc
 8008ccc:	f009 fc2a 	bl	8012524 <DisplayUdf::Show(E131Bridge*)>
 8008cd0:	f1b8 0f00 	cmp.w	r8, #0
 8008cd4:	d011      	beq.n	8008cfa <main+0x416>
 8008cd6:	987d      	ldr	r0, [sp, #500]	; 0x1f4
 8008cd8:	ab77      	add	r3, sp, #476	; 0x1dc
 8008cda:	b118      	cbz	r0, 8008ce4 <main+0x400>
 8008cdc:	6803      	ldr	r3, [r0, #0]
 8008cde:	2106      	movs	r1, #6
 8008ce0:	691b      	ldr	r3, [r3, #16]
 8008ce2:	4798      	blx	r3
 8008ce4:	4640      	mov	r0, r8
 8008ce6:	f004 f9a1 	bl	800d02c <PixelPatterns::GetName(pixelpatterns::Pattern)>
 8008cea:	2106      	movs	r1, #6
 8008cec:	4603      	mov	r3, r0
 8008cee:	4a95      	ldr	r2, [pc, #596]	; (8008f44 <main+0x660>)
 8008cf0:	f8cd 8000 	str.w	r8, [sp]
 8008cf4:	a877      	add	r0, sp, #476	; 0x1dc
 8008cf6:	f7ff fd31 	bl	800875c <Display::Printf(unsigned char, char const*, ...)>
 8008cfa:	2203      	movs	r2, #3
 8008cfc:	2101      	movs	r1, #1
 8008cfe:	f89d 3ed3 	ldrb.w	r3, [sp, #3795]	; 0xed3
 8008d02:	a8f6      	add	r0, sp, #984	; 0x3d8
 8008d04:	f005 f8d2 	bl	800deac <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>
 8008d08:	a80d      	add	r0, sp, #52	; 0x34
 8008d0a:	f006 fd0f 	bl	800f72c <StoreRemoteConfig::StoreRemoteConfig()>
 8008d0e:	a90d      	add	r1, sp, #52	; 0x34
 8008d10:	a83f      	add	r0, sp, #252	; 0xfc
 8008d12:	f005 fbcb 	bl	800e4ac <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 8008d16:	a83f      	add	r0, sp, #252	; 0xfc
 8008d18:	f005 fbd2 	bl	800e4c0 <RemoteConfigParams::Load()>
 8008d1c:	b130      	cbz	r0, 8008d2c <main+0x448>
 8008d1e:	a83f      	add	r0, sp, #252	; 0xfc
 8008d20:	a9f6      	add	r1, sp, #984	; 0x3d8
 8008d22:	f005 fcf4 	bl	800e70e <RemoteConfigParams::Set(RemoteConfig*)>
 8008d26:	a83f      	add	r0, sp, #252	; 0xfc
 8008d28:	f005 fd15 	bl	800e756 <RemoteConfigParams::Dump()>
 8008d2c:	a808      	add	r0, sp, #32
 8008d2e:	f006 fb1d 	bl	800f36c <SpiFlashStore::Flash()>
 8008d32:	2800      	cmp	r0, #0
 8008d34:	d1fa      	bne.n	8008d2c <main+0x448>
 8008d36:	4d84      	ldr	r5, [pc, #528]	; (8008f48 <main+0x664>)
 8008d38:	2303      	movs	r3, #3
 8008d3a:	f44f 42fa 	mov.w	r2, #32000	; 0x7d00
 8008d3e:	4983      	ldr	r1, [pc, #524]	; (8008f4c <main+0x668>)
 8008d40:	a877      	add	r0, sp, #476	; 0x1dc
 8008d42:	f7ff fd5c 	bl	80087fe <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008d46:	f241 51c1 	movw	r1, #5569	; 0x15c1
 8008d4a:	6828      	ldr	r0, [r5, #0]
 8008d4c:	f007 ff48 	bl	8010be0 <Network::Begin(unsigned short)>
 8008d50:	4b7f      	ldr	r3, [pc, #508]	; (8008f50 <main+0x66c>)
 8008d52:	4601      	mov	r1, r0
 8008d54:	6018      	str	r0, [r3, #0]
 8008d56:	4b7f      	ldr	r3, [pc, #508]	; (8008f54 <main+0x670>)
 8008d58:	6828      	ldr	r0, [r5, #0]
 8008d5a:	681a      	ldr	r2, [r3, #0]
 8008d5c:	f007 ff51 	bl	8010c02 <Network::JoinGroup(int, unsigned int)>
 8008d60:	2302      	movs	r3, #2
 8008d62:	f248 0280 	movw	r2, #32896	; 0x8080
 8008d66:	497c      	ldr	r1, [pc, #496]	; (8008f58 <main+0x674>)
 8008d68:	a877      	add	r0, sp, #476	; 0x1dc
 8008d6a:	f7ff fd48 	bl	80087fe <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008d6e:	2303      	movs	r3, #3
 8008d70:	f44f 42fa 	mov.w	r2, #32000	; 0x7d00
 8008d74:	4979      	ldr	r1, [pc, #484]	; (8008f5c <main+0x678>)
 8008d76:	a877      	add	r0, sp, #476	; 0x1dc
 8008d78:	f7ff fd41 	bl	80087fe <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008d7c:	f60d 10c8 	addw	r0, sp, #2504	; 0x9c8
 8008d80:	f000 fe7a 	bl	8009a78 <E131Bridge::Start()>
 8008d84:	2302      	movs	r3, #2
 8008d86:	f248 0280 	movw	r2, #32896	; 0x8080
 8008d8a:	4975      	ldr	r1, [pc, #468]	; (8008f60 <main+0x67c>)
 8008d8c:	a877      	add	r0, sp, #476	; 0x1dc
 8008d8e:	f7ff fd36 	bl	80087fe <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008d92:	2102      	movs	r1, #2
 8008d94:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8008d98:	f00a ff1e 	bl	8013bd8 <fwdgt_config>
 8008d9c:	2801      	cmp	r0, #1
 8008d9e:	bf0c      	ite	eq
 8008da0:	2301      	moveq	r3, #1
 8008da2:	2300      	movne	r3, #0
 8008da4:	f88d 303c 	strb.w	r3, [sp, #60]	; 0x3c
 8008da8:	d101      	bne.n	8008dae <main+0x4ca>
 8008daa:	f00a ff05 	bl	8013bb8 <fwdgt_enable>
 8008dae:	4e6d      	ldr	r6, [pc, #436]	; (8008f64 <main+0x680>)
 8008db0:	f8df 81b4 	ldr.w	r8, [pc, #436]	; 8008f68 <main+0x684>
 8008db4:	adf2      	add	r5, sp, #968	; 0x3c8
 8008db6:	f00a ff07 	bl	8013bc8 <fwdgt_counter_reload>
 8008dba:	f7fe fbdd 	bl	8007578 <net_handle>
 8008dbe:	f60d 10c8 	addw	r0, sp, #2504	; 0x9c8
 8008dc2:	f001 fac7 	bl	800a354 <E131Bridge::Run()>
 8008dc6:	a8f6      	add	r0, sp, #984	; 0x3d8
 8008dc8:	f005 fa20 	bl	800e20c <RemoteConfig::Run()>
 8008dcc:	4628      	mov	r0, r5
 8008dce:	f002 f99b 	bl	800b108 <LLRPDevice::Run()>
 8008dd2:	a808      	add	r0, sp, #32
 8008dd4:	f006 faca 	bl	800f36c <SpiFlashStore::Flash()>
 8008dd8:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8008dda:	b192      	cbz	r2, 8008e02 <main+0x51e>
 8008ddc:	6833      	ldr	r3, [r6, #0]
 8008dde:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8008de0:	1a5b      	subs	r3, r3, r1
 8008de2:	429a      	cmp	r2, r3
 8008de4:	d80d      	bhi.n	8008e02 <main+0x51e>
 8008de6:	6833      	ldr	r3, [r6, #0]
 8008de8:	931b      	str	r3, [sp, #108]	; 0x6c
 8008dea:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8008dec:	2b01      	cmp	r3, #1
 8008dee:	f083 0201 	eor.w	r2, r3, #1
 8008df2:	bf18      	it	ne
 8008df4:	2301      	movne	r3, #1
 8008df6:	921a      	str	r2, [sp, #104]	; 0x68
 8008df8:	bf15      	itete	ne
 8008dfa:	4a5c      	ldrne	r2, [pc, #368]	; (8008f6c <main+0x688>)
 8008dfc:	4a5b      	ldreq	r2, [pc, #364]	; (8008f6c <main+0x688>)
 8008dfe:	6113      	strne	r3, [r2, #16]
 8008e00:	6153      	streq	r3, [r2, #20]
 8008e02:	997c      	ldr	r1, [sp, #496]	; 0x1f0
 8008e04:	aa77      	add	r2, sp, #476	; 0x1dc
 8008e06:	b161      	cbz	r1, 8008e22 <main+0x53e>
 8008e08:	7c13      	ldrb	r3, [r2, #16]
 8008e0a:	2b00      	cmp	r3, #0
 8008e0c:	f040 8090 	bne.w	8008f30 <main+0x64c>
 8008e10:	6833      	ldr	r3, [r6, #0]
 8008e12:	6852      	ldr	r2, [r2, #4]
 8008e14:	1a9b      	subs	r3, r3, r2
 8008e16:	4299      	cmp	r1, r3
 8008e18:	d203      	bcs.n	8008e22 <main+0x53e>
 8008e1a:	2101      	movs	r1, #1
 8008e1c:	a877      	add	r0, sp, #476	; 0x1dc
 8008e1e:	f7ff fc8d 	bl	800873c <Display::SetSleep(bool)>
 8008e22:	b12f      	cbz	r7, 8008e30 <main+0x54c>
 8008e24:	f8d8 3000 	ldr.w	r3, [r8]
 8008e28:	b113      	cbz	r3, 8008e30 <main+0x54c>
 8008e2a:	4638      	mov	r0, r7
 8008e2c:	f004 fb20 	bl	800d470 <PixelPatterns::Run()>
 8008e30:	4620      	mov	r0, r4
 8008e32:	f007 fe33 	bl	8010a9c <MDNS::Run()>
 8008e36:	e7be      	b.n	8008db6 <main+0x4d2>
 8008e38:	2d07      	cmp	r5, #7
 8008e3a:	d814      	bhi.n	8008e66 <main+0x582>
 8008e3c:	aa52      	add	r2, sp, #328	; 0x148
 8008e3e:	6852      	ldr	r2, [r2, #4]
 8008e40:	fa0a f305 	lsl.w	r3, sl, r5
 8008e44:	4393      	bics	r3, r2
 8008e46:	bf0c      	ite	eq
 8008e48:	f04f 0801 	moveq.w	r8, #1
 8008e4c:	f04f 0800 	movne.w	r8, #0
 8008e50:	ab52      	add	r3, sp, #328	; 0x148
 8008e52:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8008e56:	8b5f      	ldrh	r7, [r3, #26]
 8008e58:	eb01 0b09 	add.w	fp, r1, r9
 8008e5c:	1a7f      	subs	r7, r7, r1
 8008e5e:	4559      	cmp	r1, fp
 8008e60:	d105      	bne.n	8008e6e <main+0x58a>
 8008e62:	3501      	adds	r5, #1
 8008e64:	e605      	b.n	8008a72 <main+0x18e>
 8008e66:	f04f 0800 	mov.w	r8, #0
 8008e6a:	4647      	mov	r7, r8
 8008e6c:	e7f4      	b.n	8008e58 <main+0x574>
 8008e6e:	f1b8 0f00 	cmp.w	r8, #0
 8008e72:	d008      	beq.n	8008e86 <main+0x5a2>
 8008e74:	187b      	adds	r3, r7, r1
 8008e76:	2201      	movs	r2, #1
 8008e78:	b29b      	uxth	r3, r3
 8008e7a:	f60d 10c8 	addw	r0, sp, #2504	; 0x9c8
 8008e7e:	9105      	str	r1, [sp, #20]
 8008e80:	f000 ff24 	bl	8009ccc <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)>
 8008e84:	9905      	ldr	r1, [sp, #20]
 8008e86:	3101      	adds	r1, #1
 8008e88:	e7e9      	b.n	8008e5e <main+0x57a>
 8008e8a:	f04f 0b00 	mov.w	fp, #0
 8008e8e:	465d      	mov	r5, fp
 8008e90:	f8df 90dc 	ldr.w	r9, [pc, #220]	; 8008f70 <main+0x68c>
 8008e94:	f108 3aff 	add.w	sl, r8, #4294967295	; 0xffffffff
 8008e98:	f1ba 0f04 	cmp.w	sl, #4
 8008e9c:	d80a      	bhi.n	8008eb4 <main+0x5d0>
 8008e9e:	e8df f00a 	tbb	[pc, sl]
 8008ea2:	21190f03 	tstcs	r9, r3, lsl #30
 8008ea6:	23000029 	movwcs	r0, #41	; 0x29
 8008eaa:	2264      	movs	r2, #100	; 0x64
 8008eac:	4659      	mov	r1, fp
 8008eae:	4638      	mov	r0, r7
 8008eb0:	f004 f8c8 	bl	800d044 <PixelPatterns::RainbowCycle(unsigned int, unsigned int, pixelpatterns::Direction)>
 8008eb4:	f10b 0b01 	add.w	fp, fp, #1
 8008eb8:	f1bb 0f08 	cmp.w	fp, #8
 8008ebc:	d1ec      	bne.n	8008e98 <main+0x5b4>
 8008ebe:	e5f0      	b.n	8008aa2 <main+0x1be>
 8008ec0:	2364      	movs	r3, #100	; 0x64
 8008ec2:	2200      	movs	r2, #0
 8008ec4:	9300      	str	r3, [sp, #0]
 8008ec6:	4659      	mov	r1, fp
 8008ec8:	464b      	mov	r3, r9
 8008eca:	4638      	mov	r0, r7
 8008ecc:	9501      	str	r5, [sp, #4]
 8008ece:	f004 f8cf 	bl	800d070 <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>
 8008ed2:	e7ef      	b.n	8008eb4 <main+0x5d0>
 8008ed4:	2364      	movs	r3, #100	; 0x64
 8008ed6:	464a      	mov	r2, r9
 8008ed8:	4659      	mov	r1, fp
 8008eda:	4638      	mov	r0, r7
 8008edc:	9500      	str	r5, [sp, #0]
 8008ede:	f004 f8e3 	bl	800d0a8 <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>
 8008ee2:	e7e7      	b.n	8008eb4 <main+0x5d0>
 8008ee4:	2364      	movs	r3, #100	; 0x64
 8008ee6:	f06f 427f 	mvn.w	r2, #4278190080	; 0xff000000
 8008eea:	4659      	mov	r1, fp
 8008eec:	4638      	mov	r0, r7
 8008eee:	f004 f8f5 	bl	800d0dc <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)>
 8008ef2:	e7df      	b.n	8008eb4 <main+0x5d0>
 8008ef4:	230a      	movs	r3, #10
 8008ef6:	2264      	movs	r2, #100	; 0x64
 8008ef8:	4659      	mov	r1, fp
 8008efa:	e9cd 3200 	strd	r3, r2, [sp]
 8008efe:	4638      	mov	r0, r7
 8008f00:	464b      	mov	r3, r9
 8008f02:	2200      	movs	r2, #0
 8008f04:	9502      	str	r5, [sp, #8]
 8008f06:	f004 f91d 	bl	800d144 <PixelPatterns::Fade(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>
 8008f0a:	e7d3      	b.n	8008eb4 <main+0x5d0>
 8008f0c:	4647      	mov	r7, r8
 8008f0e:	ab69      	add	r3, sp, #420	; 0x1a4
 8008f10:	e5c8      	b.n	8008aa4 <main+0x1c0>
 8008f12:	f803 1b01 	strb.w	r1, [r3], #1
 8008f16:	6a81      	ldr	r1, [r0, #40]	; 0x28
 8008f18:	3101      	adds	r1, #1
 8008f1a:	6281      	str	r1, [r0, #40]	; 0x28
 8008f1c:	e5ec      	b.n	8008af8 <main+0x214>
 8008f1e:	462a      	mov	r2, r5
 8008f20:	a92d      	add	r1, sp, #180	; 0xb4
 8008f22:	f20d 3051 	addw	r0, sp, #849	; 0x351
 8008f26:	f7ff fb4c 	bl	80085c2 <memcpy>
 8008f2a:	f889 5075 	strb.w	r5, [r9, #117]	; 0x75
 8008f2e:	e61c      	b.n	8008b6a <main+0x286>
 8008f30:	f7ff fc9e 	bl	8008870 <display::timeout::gpio_renew()>
 8008f34:	2800      	cmp	r0, #0
 8008f36:	f43f af74 	beq.w	8008e22 <main+0x53e>
 8008f3a:	2100      	movs	r1, #0
 8008f3c:	e76e      	b.n	8008e1c <main+0x538>
 8008f3e:	bf00      	nop
 8008f40:	0801587b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, fp, ip, lr}
 8008f44:	08015888 	stmdaeq	r1, {r3, r7, fp, ip, lr}
 8008f48:	2001c710 	andcs	ip, r1, r0, lsl r7
 8008f4c:	08015c5a 	stmdaeq	r1, {r1, r3, r4, r6, sl, fp, ip, lr}
 8008f50:	20000000 	andcs	r0, r0, r0
 8008f54:	2000c17c 	andcs	ip, r0, ip, ror r1
 8008f58:	08015c4b 	stmdaeq	r1, {r0, r1, r3, r6, sl, fp, ip, lr}
 8008f5c:	08015a19 	stmdaeq	r1, {r0, r3, r4, r9, fp, ip, lr}
 8008f60:	08015a44 	stmdaeq	r1, {r2, r6, r9, fp, ip, lr}
 8008f64:	2001ce4c 	andcs	ip, r1, ip, asr #28
 8008f68:	2000c5bc 			; <UNDEFINED> instruction: 0x2000c5bc
 8008f6c:	40011000 	andmi	r1, r1, r0
 8008f70:	00646464 	rsbeq	r6, r4, r4, ror #8

08008f74 <RDMSoftwareVersion::GetVersion()>:
 8008f74:	4800      	ldr	r0, [pc, #0]	; (8008f78 <RDMSoftwareVersion::GetVersion()+0x4>)
 8008f76:	4770      	bx	lr
 8008f78:	0801592d 	stmdaeq	r1, {r0, r2, r3, r5, r8, fp, ip, lr}

08008f7c <RDMSoftwareVersion::GetVersionLength()>:
 8008f7c:	2003      	movs	r0, #3
 8008f7e:	4770      	bx	lr

08008f80 <RDMSoftwareVersion::GetVersionId()>:
 8008f80:	4800      	ldr	r0, [pc, #0]	; (8008f84 <RDMSoftwareVersion::GetVersionId()+0x4>)
 8008f82:	4770      	bx	lr
 8008f84:	62360b7f 	eorsvs	r0, r6, #130048	; 0x1fc00

08008f88 <_itostr>:
 8008f88:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008f8a:	0fc7      	lsrs	r7, r0, #31
 8008f8c:	b091      	sub	sp, #68	; 0x44
 8008f8e:	bf18      	it	ne
 8008f90:	4240      	negne	r0, r0
 8008f92:	f10d 043f 	add.w	r4, sp, #63	; 0x3f
 8008f96:	b9c8      	cbnz	r0, 8008fcc <_itostr+0x44>
 8008f98:	2330      	movs	r3, #48	; 0x30
 8008f9a:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8008f9e:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 8008fa2:	b132      	cbz	r2, 8008fb2 <_itostr+0x2a>
 8008fa4:	4668      	mov	r0, sp
 8008fa6:	2530      	movs	r5, #48	; 0x30
 8008fa8:	1ae6      	subs	r6, r4, r3
 8008faa:	4296      	cmp	r6, r2
 8008fac:	da01      	bge.n	8008fb2 <_itostr+0x2a>
 8008fae:	4283      	cmp	r3, r0
 8008fb0:	d81c      	bhi.n	8008fec <_itostr+0x64>
 8008fb2:	b117      	cbz	r7, 8008fba <_itostr+0x32>
 8008fb4:	222d      	movs	r2, #45	; 0x2d
 8008fb6:	f803 2901 	strb.w	r2, [r3], #-1
 8008fba:	3301      	adds	r3, #1
 8008fbc:	1ae0      	subs	r0, r4, r3
 8008fbe:	3901      	subs	r1, #1
 8008fc0:	aa10      	add	r2, sp, #64	; 0x40
 8008fc2:	4293      	cmp	r3, r2
 8008fc4:	d315      	bcc.n	8008ff2 <_itostr+0x6a>
 8008fc6:	3001      	adds	r0, #1
 8008fc8:	b011      	add	sp, #68	; 0x44
 8008fca:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008fcc:	4623      	mov	r3, r4
 8008fce:	250a      	movs	r5, #10
 8008fd0:	46ec      	mov	ip, sp
 8008fd2:	fb90 f6f5 	sdiv	r6, r0, r5
 8008fd6:	fb05 0016 	mls	r0, r5, r6, r0
 8008fda:	3030      	adds	r0, #48	; 0x30
 8008fdc:	f803 0901 	strb.w	r0, [r3], #-1
 8008fe0:	4630      	mov	r0, r6
 8008fe2:	2e00      	cmp	r6, #0
 8008fe4:	d0dd      	beq.n	8008fa2 <_itostr+0x1a>
 8008fe6:	4563      	cmp	r3, ip
 8008fe8:	d1f3      	bne.n	8008fd2 <_itostr+0x4a>
 8008fea:	e7da      	b.n	8008fa2 <_itostr+0x1a>
 8008fec:	f803 5901 	strb.w	r5, [r3], #-1
 8008ff0:	e7da      	b.n	8008fa8 <_itostr+0x20>
 8008ff2:	f813 2b01 	ldrb.w	r2, [r3], #1
 8008ff6:	f801 2f01 	strb.w	r2, [r1, #1]!
 8008ffa:	e7e1      	b.n	8008fc0 <_itostr+0x38>

08008ffc <_xputch>:
 8008ffc:	4603      	mov	r3, r0
 8008ffe:	b410      	push	{r4}
 8009000:	4c08      	ldr	r4, [pc, #32]	; (8009024 <_xputch+0x28>)
 8009002:	68da      	ldr	r2, [r3, #12]
 8009004:	4608      	mov	r0, r1
 8009006:	6821      	ldr	r1, [r4, #0]
 8009008:	3201      	adds	r2, #1
 800900a:	60da      	str	r2, [r3, #12]
 800900c:	b139      	cbz	r1, 800901e <_xputch+0x22>
 800900e:	691b      	ldr	r3, [r3, #16]
 8009010:	429a      	cmp	r2, r3
 8009012:	da02      	bge.n	800901a <_xputch+0x1e>
 8009014:	1c4b      	adds	r3, r1, #1
 8009016:	6023      	str	r3, [r4, #0]
 8009018:	7008      	strb	r0, [r1, #0]
 800901a:	bc10      	pop	{r4}
 800901c:	4770      	bx	lr
 800901e:	bc10      	pop	{r4}
 8009020:	f00a b86e 	b.w	8013100 <console_putc>
 8009024:	200000e8 	andcs	r0, r0, r8, ror #1

08009028 <_format_int>:
 8009028:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800902c:	4698      	mov	r8, r3
 800902e:	b091      	sub	sp, #68	; 0x44
 8009030:	ea52 0308 	orrs.w	r3, r2, r8
 8009034:	4606      	mov	r6, r0
 8009036:	4617      	mov	r7, r2
 8009038:	f10d 053f 	add.w	r5, sp, #63	; 0x3f
 800903c:	d133      	bne.n	80090a6 <_format_int+0x7e>
 800903e:	2330      	movs	r3, #48	; 0x30
 8009040:	f10d 043e 	add.w	r4, sp, #62	; 0x3e
 8009044:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8009048:	6833      	ldr	r3, [r6, #0]
 800904a:	07d8      	lsls	r0, r3, #31
 800904c:	d507      	bpl.n	800905e <_format_int+0x36>
 800904e:	466a      	mov	r2, sp
 8009050:	2030      	movs	r0, #48	; 0x30
 8009052:	6871      	ldr	r1, [r6, #4]
 8009054:	1b2f      	subs	r7, r5, r4
 8009056:	428f      	cmp	r7, r1
 8009058:	da01      	bge.n	800905e <_format_int+0x36>
 800905a:	4294      	cmp	r4, r2
 800905c:	d839      	bhi.n	80090d2 <_format_int+0xaa>
 800905e:	0699      	lsls	r1, r3, #26
 8009060:	d507      	bpl.n	8009072 <_format_int+0x4a>
 8009062:	466a      	mov	r2, sp
 8009064:	2030      	movs	r0, #48	; 0x30
 8009066:	68b1      	ldr	r1, [r6, #8]
 8009068:	1b2f      	subs	r7, r5, r4
 800906a:	428f      	cmp	r7, r1
 800906c:	da01      	bge.n	8009072 <_format_int+0x4a>
 800906e:	4294      	cmp	r4, r2
 8009070:	d832      	bhi.n	80090d8 <_format_int+0xb0>
 8009072:	071a      	lsls	r2, r3, #28
 8009074:	bf44      	itt	mi
 8009076:	222d      	movmi	r2, #45	; 0x2d
 8009078:	f804 2901 	strbmi.w	r2, [r4], #-1
 800907c:	065b      	lsls	r3, r3, #25
 800907e:	d407      	bmi.n	8009090 <_format_int+0x68>
 8009080:	466b      	mov	r3, sp
 8009082:	2120      	movs	r1, #32
 8009084:	68b2      	ldr	r2, [r6, #8]
 8009086:	1b28      	subs	r0, r5, r4
 8009088:	4290      	cmp	r0, r2
 800908a:	da01      	bge.n	8009090 <_format_int+0x68>
 800908c:	429c      	cmp	r4, r3
 800908e:	d826      	bhi.n	80090de <_format_int+0xb6>
 8009090:	1b2d      	subs	r5, r5, r4
 8009092:	3401      	adds	r4, #1
 8009094:	ab10      	add	r3, sp, #64	; 0x40
 8009096:	429c      	cmp	r4, r3
 8009098:	d324      	bcc.n	80090e4 <_format_int+0xbc>
 800909a:	68b3      	ldr	r3, [r6, #8]
 800909c:	42ab      	cmp	r3, r5
 800909e:	dc27      	bgt.n	80090f0 <_format_int+0xc8>
 80090a0:	b011      	add	sp, #68	; 0x44
 80090a2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80090a6:	462c      	mov	r4, r5
 80090a8:	46e9      	mov	r9, sp
 80090aa:	4638      	mov	r0, r7
 80090ac:	4641      	mov	r1, r8
 80090ae:	220a      	movs	r2, #10
 80090b0:	2300      	movs	r3, #0
 80090b2:	f7fe ff3d 	bl	8007f30 <__aeabi_uldivmod>
 80090b6:	3230      	adds	r2, #48	; 0x30
 80090b8:	f804 2901 	strb.w	r2, [r4], #-1
 80090bc:	463a      	mov	r2, r7
 80090be:	4643      	mov	r3, r8
 80090c0:	2a0a      	cmp	r2, #10
 80090c2:	f173 0300 	sbcs.w	r3, r3, #0
 80090c6:	4607      	mov	r7, r0
 80090c8:	4688      	mov	r8, r1
 80090ca:	d3bd      	bcc.n	8009048 <_format_int+0x20>
 80090cc:	454c      	cmp	r4, r9
 80090ce:	d1ec      	bne.n	80090aa <_format_int+0x82>
 80090d0:	e7ba      	b.n	8009048 <_format_int+0x20>
 80090d2:	f804 0901 	strb.w	r0, [r4], #-1
 80090d6:	e7bd      	b.n	8009054 <_format_int+0x2c>
 80090d8:	f804 0901 	strb.w	r0, [r4], #-1
 80090dc:	e7c4      	b.n	8009068 <_format_int+0x40>
 80090de:	f804 1901 	strb.w	r1, [r4], #-1
 80090e2:	e7d0      	b.n	8009086 <_format_int+0x5e>
 80090e4:	4630      	mov	r0, r6
 80090e6:	f814 1b01 	ldrb.w	r1, [r4], #1
 80090ea:	f7ff ff87 	bl	8008ffc <_xputch>
 80090ee:	e7d1      	b.n	8009094 <_format_int+0x6c>
 80090f0:	2120      	movs	r1, #32
 80090f2:	4630      	mov	r0, r6
 80090f4:	f7ff ff82 	bl	8008ffc <_xputch>
 80090f8:	3501      	adds	r5, #1
 80090fa:	e7ce      	b.n	800909a <_format_int+0x72>

080090fc <_format_hex>:
 80090fc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80090fe:	b091      	sub	sp, #68	; 0x44
 8009100:	4606      	mov	r6, r0
 8009102:	6804      	ldr	r4, [r0, #0]
 8009104:	f10d 023f 	add.w	r2, sp, #63	; 0x3f
 8009108:	bb61      	cbnz	r1, 8009164 <_format_hex+0x68>
 800910a:	2330      	movs	r3, #48	; 0x30
 800910c:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8009110:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 8009114:	07e5      	lsls	r5, r4, #31
 8009116:	d507      	bpl.n	8009128 <_format_hex+0x2c>
 8009118:	4669      	mov	r1, sp
 800911a:	2530      	movs	r5, #48	; 0x30
 800911c:	6870      	ldr	r0, [r6, #4]
 800911e:	1ad7      	subs	r7, r2, r3
 8009120:	4287      	cmp	r7, r0
 8009122:	da01      	bge.n	8009128 <_format_hex+0x2c>
 8009124:	428b      	cmp	r3, r1
 8009126:	d831      	bhi.n	800918c <_format_hex+0x90>
 8009128:	06a0      	lsls	r0, r4, #26
 800912a:	d507      	bpl.n	800913c <_format_hex+0x40>
 800912c:	4669      	mov	r1, sp
 800912e:	2530      	movs	r5, #48	; 0x30
 8009130:	68b0      	ldr	r0, [r6, #8]
 8009132:	1ad7      	subs	r7, r2, r3
 8009134:	4287      	cmp	r7, r0
 8009136:	da01      	bge.n	800913c <_format_hex+0x40>
 8009138:	428b      	cmp	r3, r1
 800913a:	d82a      	bhi.n	8009192 <_format_hex+0x96>
 800913c:	0661      	lsls	r1, r4, #25
 800913e:	d407      	bmi.n	8009150 <_format_hex+0x54>
 8009140:	4669      	mov	r1, sp
 8009142:	2420      	movs	r4, #32
 8009144:	68b0      	ldr	r0, [r6, #8]
 8009146:	1ad5      	subs	r5, r2, r3
 8009148:	4285      	cmp	r5, r0
 800914a:	da01      	bge.n	8009150 <_format_hex+0x54>
 800914c:	428b      	cmp	r3, r1
 800914e:	d823      	bhi.n	8009198 <_format_hex+0x9c>
 8009150:	1ad5      	subs	r5, r2, r3
 8009152:	1c5c      	adds	r4, r3, #1
 8009154:	ab10      	add	r3, sp, #64	; 0x40
 8009156:	429c      	cmp	r4, r3
 8009158:	d321      	bcc.n	800919e <_format_hex+0xa2>
 800915a:	68b3      	ldr	r3, [r6, #8]
 800915c:	429d      	cmp	r5, r3
 800915e:	db24      	blt.n	80091aa <_format_hex+0xae>
 8009160:	b011      	add	sp, #68	; 0x44
 8009162:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009164:	f014 0f02 	tst.w	r4, #2
 8009168:	bf0c      	ite	eq
 800916a:	2757      	moveq	r7, #87	; 0x57
 800916c:	2737      	movne	r7, #55	; 0x37
 800916e:	4613      	mov	r3, r2
 8009170:	466d      	mov	r5, sp
 8009172:	f001 000f 	and.w	r0, r1, #15
 8009176:	2809      	cmp	r0, #9
 8009178:	bf94      	ite	ls
 800917a:	3030      	addls	r0, #48	; 0x30
 800917c:	19c0      	addhi	r0, r0, r7
 800917e:	0909      	lsrs	r1, r1, #4
 8009180:	f803 0901 	strb.w	r0, [r3], #-1
 8009184:	d0c6      	beq.n	8009114 <_format_hex+0x18>
 8009186:	42ab      	cmp	r3, r5
 8009188:	d1f3      	bne.n	8009172 <_format_hex+0x76>
 800918a:	e7c3      	b.n	8009114 <_format_hex+0x18>
 800918c:	f803 5901 	strb.w	r5, [r3], #-1
 8009190:	e7c5      	b.n	800911e <_format_hex+0x22>
 8009192:	f803 5901 	strb.w	r5, [r3], #-1
 8009196:	e7cc      	b.n	8009132 <_format_hex+0x36>
 8009198:	f803 4901 	strb.w	r4, [r3], #-1
 800919c:	e7d3      	b.n	8009146 <_format_hex+0x4a>
 800919e:	4630      	mov	r0, r6
 80091a0:	f814 1b01 	ldrb.w	r1, [r4], #1
 80091a4:	f7ff ff2a 	bl	8008ffc <_xputch>
 80091a8:	e7d4      	b.n	8009154 <_format_hex+0x58>
 80091aa:	2120      	movs	r1, #32
 80091ac:	4630      	mov	r0, r6
 80091ae:	f7ff ff25 	bl	8008ffc <_xputch>
 80091b2:	3501      	adds	r5, #1
 80091b4:	e7d1      	b.n	800915a <_format_hex+0x5e>
	...

080091b8 <_vprintf>:
 80091b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80091bc:	4614      	mov	r4, r2
 80091be:	2200      	movs	r2, #0
 80091c0:	460b      	mov	r3, r1
 80091c2:	f04f 0800 	mov.w	r8, #0
 80091c6:	b099      	sub	sp, #100	; 0x64
 80091c8:	e9cd 2006 	strd	r2, r0, [sp, #24]
 80091cc:	af08      	add	r7, sp, #32
 80091ce:	7819      	ldrb	r1, [r3, #0]
 80091d0:	b919      	cbnz	r1, 80091da <_vprintf+0x22>
 80091d2:	9806      	ldr	r0, [sp, #24]
 80091d4:	b019      	add	sp, #100	; 0x64
 80091d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80091da:	2925      	cmp	r1, #37	; 0x25
 80091dc:	f103 0601 	add.w	r6, r3, #1
 80091e0:	d004      	beq.n	80091ec <_vprintf+0x34>
 80091e2:	a803      	add	r0, sp, #12
 80091e4:	f7ff ff0a 	bl	8008ffc <_xputch>
 80091e8:	4633      	mov	r3, r6
 80091ea:	e7f0      	b.n	80091ce <_vprintf+0x16>
 80091ec:	2200      	movs	r2, #0
 80091ee:	e9cd 2203 	strd	r2, r2, [sp, #12]
 80091f2:	9205      	str	r2, [sp, #20]
 80091f4:	785a      	ldrb	r2, [r3, #1]
 80091f6:	2a30      	cmp	r2, #48	; 0x30
 80091f8:	d129      	bne.n	800924e <_vprintf+0x96>
 80091fa:	2220      	movs	r2, #32
 80091fc:	9203      	str	r2, [sp, #12]
 80091fe:	1c9e      	adds	r6, r3, #2
 8009200:	2200      	movs	r2, #0
 8009202:	4635      	mov	r5, r6
 8009204:	4613      	mov	r3, r2
 8009206:	f04f 0c0a 	mov.w	ip, #10
 800920a:	7829      	ldrb	r1, [r5, #0]
 800920c:	462e      	mov	r6, r5
 800920e:	f1a1 0030 	sub.w	r0, r1, #48	; 0x30
 8009212:	2809      	cmp	r0, #9
 8009214:	f105 0501 	add.w	r5, r5, #1
 8009218:	d91d      	bls.n	8009256 <_vprintf+0x9e>
 800921a:	b12a      	cbz	r2, 8009228 <_vprintf+0x70>
 800921c:	9305      	str	r3, [sp, #20]
 800921e:	b11b      	cbz	r3, 8009228 <_vprintf+0x70>
 8009220:	9b03      	ldr	r3, [sp, #12]
 8009222:	f043 0310 	orr.w	r3, r3, #16
 8009226:	9303      	str	r3, [sp, #12]
 8009228:	292e      	cmp	r1, #46	; 0x2e
 800922a:	d123      	bne.n	8009274 <_vprintf+0xbc>
 800922c:	7873      	ldrb	r3, [r6, #1]
 800922e:	2b2a      	cmp	r3, #42	; 0x2a
 8009230:	d015      	beq.n	800925e <_vprintf+0xa6>
 8009232:	2100      	movs	r1, #0
 8009234:	250a      	movs	r5, #10
 8009236:	460a      	mov	r2, r1
 8009238:	1c70      	adds	r0, r6, #1
 800923a:	7803      	ldrb	r3, [r0, #0]
 800923c:	4606      	mov	r6, r0
 800923e:	3b30      	subs	r3, #48	; 0x30
 8009240:	2b09      	cmp	r3, #9
 8009242:	f100 0001 	add.w	r0, r0, #1
 8009246:	d959      	bls.n	80092fc <_vprintf+0x144>
 8009248:	b181      	cbz	r1, 800926c <_vprintf+0xb4>
 800924a:	9204      	str	r2, [sp, #16]
 800924c:	e00e      	b.n	800926c <_vprintf+0xb4>
 800924e:	2a2d      	cmp	r2, #45	; 0x2d
 8009250:	d1d6      	bne.n	8009200 <_vprintf+0x48>
 8009252:	2240      	movs	r2, #64	; 0x40
 8009254:	e7d2      	b.n	80091fc <_vprintf+0x44>
 8009256:	2201      	movs	r2, #1
 8009258:	fb0c 0303 	mla	r3, ip, r3, r0
 800925c:	e7d5      	b.n	800920a <_vprintf+0x52>
 800925e:	f854 3b04 	ldr.w	r3, [r4], #4
 8009262:	3602      	adds	r6, #2
 8009264:	2b00      	cmp	r3, #0
 8009266:	bfb8      	it	lt
 8009268:	425b      	neglt	r3, r3
 800926a:	9304      	str	r3, [sp, #16]
 800926c:	9b03      	ldr	r3, [sp, #12]
 800926e:	f043 0301 	orr.w	r3, r3, #1
 8009272:	9303      	str	r3, [sp, #12]
 8009274:	7833      	ldrb	r3, [r6, #0]
 8009276:	2b6c      	cmp	r3, #108	; 0x6c
 8009278:	bf04      	itt	eq
 800927a:	9b03      	ldreq	r3, [sp, #12]
 800927c:	3601      	addeq	r6, #1
 800927e:	7831      	ldrb	r1, [r6, #0]
 8009280:	bf04      	itt	eq
 8009282:	f043 0304 	orreq.w	r3, r3, #4
 8009286:	9303      	streq	r3, [sp, #12]
 8009288:	2958      	cmp	r1, #88	; 0x58
 800928a:	f000 8171 	beq.w	8009570 <_vprintf+0x3b8>
 800928e:	f1a1 0363 	sub.w	r3, r1, #99	; 0x63
 8009292:	b2da      	uxtb	r2, r3
 8009294:	2a15      	cmp	r2, #21
 8009296:	d8a4      	bhi.n	80091e2 <_vprintf+0x2a>
 8009298:	2b15      	cmp	r3, #21
 800929a:	d8a2      	bhi.n	80091e2 <_vprintf+0x2a>
 800929c:	a201      	add	r2, pc, #4	; (adr r2, 80092a4 <_vprintf+0xec>)
 800929e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80092a2:	bf00      	nop
 80092a4:	08009305 	stmdaeq	r0, {r0, r2, r8, r9, ip, pc}
 80092a8:	08009317 	stmdaeq	r0, {r0, r1, r2, r4, r8, r9, ip, pc}
 80092ac:	080091e3 	stmdaeq	r0, {r0, r1, r5, r6, r7, r8, ip, pc}
 80092b0:	0800934d 	stmdaeq	r0, {r0, r2, r3, r6, r8, r9, ip, pc}
 80092b4:	080091e3 	stmdaeq	r0, {r0, r1, r5, r6, r7, r8, ip, pc}
 80092b8:	080091e3 	stmdaeq	r0, {r0, r1, r5, r6, r7, r8, ip, pc}
 80092bc:	08009317 	stmdaeq	r0, {r0, r1, r2, r4, r8, r9, ip, pc}
 80092c0:	080091e3 	stmdaeq	r0, {r0, r1, r5, r6, r7, r8, ip, pc}
 80092c4:	080091e3 	stmdaeq	r0, {r0, r1, r5, r6, r7, r8, ip, pc}
 80092c8:	080091e3 	stmdaeq	r0, {r0, r1, r5, r6, r7, r8, ip, pc}
 80092cc:	080091e3 	stmdaeq	r0, {r0, r1, r5, r6, r7, r8, ip, pc}
 80092d0:	080091e3 	stmdaeq	r0, {r0, r1, r5, r6, r7, r8, ip, pc}
 80092d4:	080091e3 	stmdaeq	r0, {r0, r1, r5, r6, r7, r8, ip, pc}
 80092d8:	080094b3 	stmdaeq	r0, {r0, r1, r4, r5, r7, sl, ip, pc}
 80092dc:	080091e3 	stmdaeq	r0, {r0, r1, r5, r6, r7, r8, ip, pc}
 80092e0:	080091e3 	stmdaeq	r0, {r0, r1, r5, r6, r7, r8, ip, pc}
 80092e4:	080094db 	stmdaeq	r0, {r0, r1, r3, r4, r6, r7, sl, ip, pc}
 80092e8:	080091e3 	stmdaeq	r0, {r0, r1, r5, r6, r7, r8, ip, pc}
 80092ec:	08009551 	stmdaeq	r0, {r0, r4, r6, r8, sl, ip, pc}
 80092f0:	080091e3 	stmdaeq	r0, {r0, r1, r5, r6, r7, r8, ip, pc}
 80092f4:	080091e3 	stmdaeq	r0, {r0, r1, r5, r6, r7, r8, ip, pc}
 80092f8:	08009579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip, pc}
 80092fc:	2101      	movs	r1, #1
 80092fe:	fb05 3202 	mla	r2, r5, r2, r3
 8009302:	e79a      	b.n	800923a <_vprintf+0x82>
 8009304:	4625      	mov	r5, r4
 8009306:	a803      	add	r0, sp, #12
 8009308:	f855 1b04 	ldr.w	r1, [r5], #4
 800930c:	f7ff fe76 	bl	8008ffc <_xputch>
 8009310:	462c      	mov	r4, r5
 8009312:	3601      	adds	r6, #1
 8009314:	e768      	b.n	80091e8 <_vprintf+0x30>
 8009316:	9903      	ldr	r1, [sp, #12]
 8009318:	074d      	lsls	r5, r1, #29
 800931a:	bf51      	iteee	pl
 800931c:	4625      	movpl	r5, r4
 800931e:	3407      	addmi	r4, #7
 8009320:	f024 0407 	bicmi.w	r4, r4, #7
 8009324:	4625      	movmi	r5, r4
 8009326:	bf55      	itete	pl
 8009328:	f855 2b04 	ldrpl.w	r2, [r5], #4
 800932c:	6863      	ldrmi	r3, [r4, #4]
 800932e:	17d3      	asrpl	r3, r2, #31
 8009330:	f855 2b08 	ldrmi.w	r2, [r5], #8
 8009334:	2b00      	cmp	r3, #0
 8009336:	da05      	bge.n	8009344 <_vprintf+0x18c>
 8009338:	f041 0108 	orr.w	r1, r1, #8
 800933c:	4252      	negs	r2, r2
 800933e:	9103      	str	r1, [sp, #12]
 8009340:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8009344:	a803      	add	r0, sp, #12
 8009346:	f7ff fe6f 	bl	8009028 <_format_int>
 800934a:	e7e1      	b.n	8009310 <_vprintf+0x158>
 800934c:	3407      	adds	r4, #7
 800934e:	f024 0507 	bic.w	r5, r4, #7
 8009352:	e8f5 0102 	ldrd	r0, r1, [r5], #8
 8009356:	f7fe fbf1 	bl	8007b3c <__aeabi_d2f>
 800935a:	9b03      	ldr	r3, [sp, #12]
 800935c:	4641      	mov	r1, r8
 800935e:	07dc      	lsls	r4, r3, #31
 8009360:	bf54      	ite	pl
 8009362:	f04f 0a06 	movpl.w	sl, #6
 8009366:	f8dd a010 	ldrmi.w	sl, [sp, #16]
 800936a:	4681      	mov	r9, r0
 800936c:	f7fe fd92 	bl	8007e94 <__aeabi_fcmplt>
 8009370:	2800      	cmp	r0, #0
 8009372:	d063      	beq.n	800943c <_vprintf+0x284>
 8009374:	232d      	movs	r3, #45	; 0x2d
 8009376:	f109 4900 	add.w	r9, r9, #2147483648	; 0x80000000
 800937a:	f88d 3020 	strb.w	r3, [sp, #32]
 800937e:	f10d 0b21 	add.w	fp, sp, #33	; 0x21
 8009382:	4648      	mov	r0, r9
 8009384:	f7fe fdae 	bl	8007ee4 <__aeabi_f2iz>
 8009388:	4659      	mov	r1, fp
 800938a:	2200      	movs	r2, #0
 800938c:	4604      	mov	r4, r0
 800938e:	f7ff fdfb 	bl	8008f88 <_itostr>
 8009392:	eb0b 0200 	add.w	r2, fp, r0
 8009396:	e9cd 2000 	strd	r2, r0, [sp]
 800939a:	4620      	mov	r0, r4
 800939c:	f7fe fcd8 	bl	8007d50 <__aeabi_i2f>
 80093a0:	4601      	mov	r1, r0
 80093a2:	4648      	mov	r0, r9
 80093a4:	f7fe fc1e 	bl	8007be4 <__aeabi_fsub>
 80093a8:	222e      	movs	r2, #46	; 0x2e
 80093aa:	4601      	mov	r1, r0
 80093ac:	200a      	movs	r0, #10
 80093ae:	9b00      	ldr	r3, [sp, #0]
 80093b0:	f10a 0901 	add.w	r9, sl, #1
 80093b4:	1c5c      	adds	r4, r3, #1
 80093b6:	9b01      	ldr	r3, [sp, #4]
 80093b8:	f80b 2003 	strb.w	r2, [fp, r3]
 80093bc:	4603      	mov	r3, r0
 80093be:	f1ba 0f00 	cmp.w	sl, #0
 80093c2:	dc3d      	bgt.n	8009440 <_vprintf+0x288>
 80093c4:	9100      	str	r1, [sp, #0]
 80093c6:	f7fe fcc3 	bl	8007d50 <__aeabi_i2f>
 80093ca:	9900      	ldr	r1, [sp, #0]
 80093cc:	f7fe ff86 	bl	80082dc <__aeabi_fmul>
 80093d0:	f7fe fd88 	bl	8007ee4 <__aeabi_f2iz>
 80093d4:	464a      	mov	r2, r9
 80093d6:	4621      	mov	r1, r4
 80093d8:	f7ff fdd6 	bl	8008f88 <_itostr>
 80093dc:	4404      	add	r4, r0
 80093de:	1be0      	subs	r0, r4, r7
 80093e0:	1e44      	subs	r4, r0, #1
 80093e2:	5d3b      	ldrb	r3, [r7, r4]
 80093e4:	193a      	adds	r2, r7, r4
 80093e6:	2b34      	cmp	r3, #52	; 0x34
 80093e8:	d910      	bls.n	800940c <_vprintf+0x254>
 80093ea:	f812 1c01 	ldrb.w	r1, [r2, #-1]
 80093ee:	1e53      	subs	r3, r2, #1
 80093f0:	292e      	cmp	r1, #46	; 0x2e
 80093f2:	d02c      	beq.n	800944e <_vprintf+0x296>
 80093f4:	469c      	mov	ip, r3
 80093f6:	f04f 0e30 	mov.w	lr, #48	; 0x30
 80093fa:	4663      	mov	r3, ip
 80093fc:	f81c 1901 	ldrb.w	r1, [ip], #-1
 8009400:	2939      	cmp	r1, #57	; 0x39
 8009402:	d021      	beq.n	8009448 <_vprintf+0x290>
 8009404:	292e      	cmp	r1, #46	; 0x2e
 8009406:	d022      	beq.n	800944e <_vprintf+0x296>
 8009408:	3101      	adds	r1, #1
 800940a:	7019      	strb	r1, [r3, #0]
 800940c:	f104 0360 	add.w	r3, r4, #96	; 0x60
 8009410:	446b      	add	r3, sp
 8009412:	f813 3c41 	ldrb.w	r3, [r3, #-65]
 8009416:	2b2e      	cmp	r3, #46	; 0x2e
 8009418:	bf08      	it	eq
 800941a:	f104 34ff 	addeq.w	r4, r4, #4294967295	; 0xffffffff
 800941e:	46a1      	mov	r9, r4
 8009420:	9b05      	ldr	r3, [sp, #20]
 8009422:	4599      	cmp	r9, r3
 8009424:	db3e      	blt.n	80094a4 <_vprintf+0x2ec>
 8009426:	46b9      	mov	r9, r7
 8009428:	2c00      	cmp	r4, #0
 800942a:	f77f af71 	ble.w	8009310 <_vprintf+0x158>
 800942e:	f819 1b01 	ldrb.w	r1, [r9], #1
 8009432:	a803      	add	r0, sp, #12
 8009434:	f7ff fde2 	bl	8008ffc <_xputch>
 8009438:	3c01      	subs	r4, #1
 800943a:	e7f5      	b.n	8009428 <_vprintf+0x270>
 800943c:	46bb      	mov	fp, r7
 800943e:	e7a0      	b.n	8009382 <_vprintf+0x1ca>
 8009440:	4358      	muls	r0, r3
 8009442:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
 8009446:	e7ba      	b.n	80093be <_vprintf+0x206>
 8009448:	f88c e001 	strb.w	lr, [ip, #1]
 800944c:	e7d5      	b.n	80093fa <_vprintf+0x242>
 800944e:	f04f 0c30 	mov.w	ip, #48	; 0x30
 8009452:	3b01      	subs	r3, #1
 8009454:	7819      	ldrb	r1, [r3, #0]
 8009456:	2939      	cmp	r1, #57	; 0x39
 8009458:	d112      	bne.n	8009480 <_vprintf+0x2c8>
 800945a:	42bb      	cmp	r3, r7
 800945c:	d20d      	bcs.n	800947a <_vprintf+0x2c2>
 800945e:	1c5c      	adds	r4, r3, #1
 8009460:	1c99      	adds	r1, r3, #2
 8009462:	428c      	cmp	r4, r1
 8009464:	eba2 0203 	sub.w	r2, r2, r3
 8009468:	d913      	bls.n	8009492 <_vprintf+0x2da>
 800946a:	3201      	adds	r2, #1
 800946c:	441a      	add	r2, r3
 800946e:	42a2      	cmp	r2, r4
 8009470:	d10b      	bne.n	800948a <_vprintf+0x2d2>
 8009472:	2231      	movs	r2, #49	; 0x31
 8009474:	4604      	mov	r4, r0
 8009476:	705a      	strb	r2, [r3, #1]
 8009478:	e7c8      	b.n	800940c <_vprintf+0x254>
 800947a:	f803 c901 	strb.w	ip, [r3], #-1
 800947e:	e7e9      	b.n	8009454 <_vprintf+0x29c>
 8009480:	42bb      	cmp	r3, r7
 8009482:	d3ec      	bcc.n	800945e <_vprintf+0x2a6>
 8009484:	292d      	cmp	r1, #45	; 0x2d
 8009486:	d0ea      	beq.n	800945e <_vprintf+0x2a6>
 8009488:	e7be      	b.n	8009408 <_vprintf+0x250>
 800948a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800948e:	7021      	strb	r1, [r4, #0]
 8009490:	e7ed      	b.n	800946e <_vprintf+0x2b6>
 8009492:	4414      	add	r4, r2
 8009494:	440a      	add	r2, r1
 8009496:	428a      	cmp	r2, r1
 8009498:	d0eb      	beq.n	8009472 <_vprintf+0x2ba>
 800949a:	f814 cd01 	ldrb.w	ip, [r4, #-1]!
 800949e:	f802 cd01 	strb.w	ip, [r2, #-1]!
 80094a2:	e7f8      	b.n	8009496 <_vprintf+0x2de>
 80094a4:	2120      	movs	r1, #32
 80094a6:	a803      	add	r0, sp, #12
 80094a8:	f7ff fda8 	bl	8008ffc <_xputch>
 80094ac:	f109 0901 	add.w	r9, r9, #1
 80094b0:	e7b6      	b.n	8009420 <_vprintf+0x268>
 80094b2:	2308      	movs	r3, #8
 80094b4:	4625      	mov	r5, r4
 80094b6:	9305      	str	r3, [sp, #20]
 80094b8:	2320      	movs	r3, #32
 80094ba:	2130      	movs	r1, #48	; 0x30
 80094bc:	f855 4b04 	ldr.w	r4, [r5], #4
 80094c0:	a803      	add	r0, sp, #12
 80094c2:	9303      	str	r3, [sp, #12]
 80094c4:	f7ff fd9a 	bl	8008ffc <_xputch>
 80094c8:	2178      	movs	r1, #120	; 0x78
 80094ca:	a803      	add	r0, sp, #12
 80094cc:	f7ff fd96 	bl	8008ffc <_xputch>
 80094d0:	4621      	mov	r1, r4
 80094d2:	a803      	add	r0, sp, #12
 80094d4:	f7ff fe12 	bl	80090fc <_format_hex>
 80094d8:	e71a      	b.n	8009310 <_vprintf+0x158>
 80094da:	4625      	mov	r5, r4
 80094dc:	2400      	movs	r4, #0
 80094de:	f855 9b04 	ldr.w	r9, [r5], #4
 80094e2:	f819 3004 	ldrb.w	r3, [r9, r4]
 80094e6:	b993      	cbnz	r3, 800950e <_vprintf+0x356>
 80094e8:	9b03      	ldr	r3, [sp, #12]
 80094ea:	07d9      	lsls	r1, r3, #31
 80094ec:	d503      	bpl.n	80094f6 <_vprintf+0x33e>
 80094ee:	9b04      	ldr	r3, [sp, #16]
 80094f0:	429c      	cmp	r4, r3
 80094f2:	bfa8      	it	ge
 80094f4:	461c      	movge	r4, r3
 80094f6:	9b03      	ldr	r3, [sp, #12]
 80094f8:	f104 0a01 	add.w	sl, r4, #1
 80094fc:	065a      	lsls	r2, r3, #25
 80094fe:	d403      	bmi.n	8009508 <_vprintf+0x350>
 8009500:	9b05      	ldr	r3, [sp, #20]
 8009502:	429c      	cmp	r4, r3
 8009504:	db05      	blt.n	8009512 <_vprintf+0x35a>
 8009506:	4654      	mov	r4, sl
 8009508:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 800950c:	e00d      	b.n	800952a <_vprintf+0x372>
 800950e:	3401      	adds	r4, #1
 8009510:	e7e7      	b.n	80094e2 <_vprintf+0x32a>
 8009512:	2120      	movs	r1, #32
 8009514:	a803      	add	r0, sp, #12
 8009516:	f7ff fd71 	bl	8008ffc <_xputch>
 800951a:	4654      	mov	r4, sl
 800951c:	e7eb      	b.n	80094f6 <_vprintf+0x33e>
 800951e:	a803      	add	r0, sp, #12
 8009520:	f7ff fd6c 	bl	8008ffc <_xputch>
 8009524:	9b04      	ldr	r3, [sp, #16]
 8009526:	3b01      	subs	r3, #1
 8009528:	9304      	str	r3, [sp, #16]
 800952a:	9b03      	ldr	r3, [sp, #12]
 800952c:	07db      	lsls	r3, r3, #31
 800952e:	d501      	bpl.n	8009534 <_vprintf+0x37c>
 8009530:	9b04      	ldr	r3, [sp, #16]
 8009532:	b11b      	cbz	r3, 800953c <_vprintf+0x384>
 8009534:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 8009538:	2900      	cmp	r1, #0
 800953a:	d1f0      	bne.n	800951e <_vprintf+0x366>
 800953c:	9b05      	ldr	r3, [sp, #20]
 800953e:	429c      	cmp	r4, r3
 8009540:	f6bf aee6 	bge.w	8009310 <_vprintf+0x158>
 8009544:	2120      	movs	r1, #32
 8009546:	a803      	add	r0, sp, #12
 8009548:	f7ff fd58 	bl	8008ffc <_xputch>
 800954c:	3401      	adds	r4, #1
 800954e:	e7f5      	b.n	800953c <_vprintf+0x384>
 8009550:	9b03      	ldr	r3, [sp, #12]
 8009552:	f013 0304 	ands.w	r3, r3, #4
 8009556:	bf1d      	ittte	ne
 8009558:	3407      	addne	r4, #7
 800955a:	f024 0407 	bicne.w	r4, r4, #7
 800955e:	4625      	movne	r5, r4
 8009560:	4625      	moveq	r5, r4
 8009562:	bf1a      	itte	ne
 8009564:	f855 2b08 	ldrne.w	r2, [r5], #8
 8009568:	6863      	ldrne	r3, [r4, #4]
 800956a:	f855 2b04 	ldreq.w	r2, [r5], #4
 800956e:	e6e9      	b.n	8009344 <_vprintf+0x18c>
 8009570:	9b03      	ldr	r3, [sp, #12]
 8009572:	f043 0302 	orr.w	r3, r3, #2
 8009576:	9303      	str	r3, [sp, #12]
 8009578:	4625      	mov	r5, r4
 800957a:	f855 1b04 	ldr.w	r1, [r5], #4
 800957e:	e7a8      	b.n	80094d2 <_vprintf+0x31a>

08009580 <printf>:
 8009580:	b40f      	push	{r0, r1, r2, r3}
 8009582:	b507      	push	{r0, r1, r2, lr}
 8009584:	aa04      	add	r2, sp, #16
 8009586:	f852 1b04 	ldr.w	r1, [r2], #4
 800958a:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800958e:	9201      	str	r2, [sp, #4]
 8009590:	f7ff fe12 	bl	80091b8 <_vprintf>
 8009594:	b003      	add	sp, #12
 8009596:	f85d eb04 	ldr.w	lr, [sp], #4
 800959a:	b004      	add	sp, #16
 800959c:	4770      	bx	lr
	...

080095a0 <sprintf>:
 80095a0:	b40e      	push	{r1, r2, r3}
 80095a2:	b517      	push	{r0, r1, r2, r4, lr}
 80095a4:	4c09      	ldr	r4, [pc, #36]	; (80095cc <sprintf+0x2c>)
 80095a6:	aa05      	add	r2, sp, #20
 80095a8:	f852 1b04 	ldr.w	r1, [r2], #4
 80095ac:	6020      	str	r0, [r4, #0]
 80095ae:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 80095b2:	9201      	str	r2, [sp, #4]
 80095b4:	f7ff fe00 	bl	80091b8 <_vprintf>
 80095b8:	2300      	movs	r3, #0
 80095ba:	6822      	ldr	r2, [r4, #0]
 80095bc:	6023      	str	r3, [r4, #0]
 80095be:	7013      	strb	r3, [r2, #0]
 80095c0:	b003      	add	sp, #12
 80095c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80095c6:	b003      	add	sp, #12
 80095c8:	4770      	bx	lr
 80095ca:	bf00      	nop
 80095cc:	200000e8 	andcs	r0, r0, r8, ror #1

080095d0 <snprintf>:
 80095d0:	b40c      	push	{r2, r3}
 80095d2:	460b      	mov	r3, r1
 80095d4:	b513      	push	{r0, r1, r4, lr}
 80095d6:	4c09      	ldr	r4, [pc, #36]	; (80095fc <snprintf+0x2c>)
 80095d8:	aa04      	add	r2, sp, #16
 80095da:	f852 1b04 	ldr.w	r1, [r2], #4
 80095de:	6020      	str	r0, [r4, #0]
 80095e0:	4618      	mov	r0, r3
 80095e2:	9201      	str	r2, [sp, #4]
 80095e4:	f7ff fde8 	bl	80091b8 <_vprintf>
 80095e8:	2300      	movs	r3, #0
 80095ea:	6822      	ldr	r2, [r4, #0]
 80095ec:	6023      	str	r3, [r4, #0]
 80095ee:	7013      	strb	r3, [r2, #0]
 80095f0:	b002      	add	sp, #8
 80095f2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80095f6:	b002      	add	sp, #8
 80095f8:	4770      	bx	lr
 80095fa:	bf00      	nop
 80095fc:	200000e8 	andcs	r0, r0, r8, ror #1

08009600 <vsnprintf>:
 8009600:	b538      	push	{r3, r4, r5, lr}
 8009602:	4605      	mov	r5, r0
 8009604:	4c05      	ldr	r4, [pc, #20]	; (800961c <vsnprintf+0x1c>)
 8009606:	4608      	mov	r0, r1
 8009608:	4611      	mov	r1, r2
 800960a:	461a      	mov	r2, r3
 800960c:	6025      	str	r5, [r4, #0]
 800960e:	f7ff fdd3 	bl	80091b8 <_vprintf>
 8009612:	2300      	movs	r3, #0
 8009614:	6822      	ldr	r2, [r4, #0]
 8009616:	6023      	str	r3, [r4, #0]
 8009618:	7013      	strb	r3, [r2, #0]
 800961a:	bd38      	pop	{r3, r4, r5, pc}
 800961c:	200000e8 	andcs	r0, r0, r8, ror #1

08009620 <__udivmoddi4>:
 8009620:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009624:	9e08      	ldr	r6, [sp, #32]
 8009626:	460d      	mov	r5, r1
 8009628:	4604      	mov	r4, r0
 800962a:	468e      	mov	lr, r1
 800962c:	2b00      	cmp	r3, #0
 800962e:	d14c      	bne.n	80096ca <__udivmoddi4+0xaa>
 8009630:	428a      	cmp	r2, r1
 8009632:	4694      	mov	ip, r2
 8009634:	d967      	bls.n	8009706 <__udivmoddi4+0xe6>
 8009636:	fab2 f382 	clz	r3, r2
 800963a:	b153      	cbz	r3, 8009652 <__udivmoddi4+0x32>
 800963c:	fa02 fc03 	lsl.w	ip, r2, r3
 8009640:	f1c3 0220 	rsb	r2, r3, #32
 8009644:	fa01 fe03 	lsl.w	lr, r1, r3
 8009648:	fa20 f202 	lsr.w	r2, r0, r2
 800964c:	ea42 0e0e 	orr.w	lr, r2, lr
 8009650:	409c      	lsls	r4, r3
 8009652:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8009656:	fbbe f1f7 	udiv	r1, lr, r7
 800965a:	fa1f f58c 	uxth.w	r5, ip
 800965e:	fb07 ee11 	mls	lr, r7, r1, lr
 8009662:	fb01 f005 	mul.w	r0, r1, r5
 8009666:	0c22      	lsrs	r2, r4, #16
 8009668:	ea42 420e 	orr.w	r2, r2, lr, lsl #16
 800966c:	4290      	cmp	r0, r2
 800966e:	d90a      	bls.n	8009686 <__udivmoddi4+0x66>
 8009670:	eb1c 0202 	adds.w	r2, ip, r2
 8009674:	f101 3eff 	add.w	lr, r1, #4294967295	; 0xffffffff
 8009678:	f080 8119 	bcs.w	80098ae <__udivmoddi4+0x28e>
 800967c:	4290      	cmp	r0, r2
 800967e:	f240 8116 	bls.w	80098ae <__udivmoddi4+0x28e>
 8009682:	3902      	subs	r1, #2
 8009684:	4462      	add	r2, ip
 8009686:	1a12      	subs	r2, r2, r0
 8009688:	fbb2 f0f7 	udiv	r0, r2, r7
 800968c:	fb07 2210 	mls	r2, r7, r0, r2
 8009690:	fb00 f505 	mul.w	r5, r0, r5
 8009694:	b2a4      	uxth	r4, r4
 8009696:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 800969a:	42a5      	cmp	r5, r4
 800969c:	d90a      	bls.n	80096b4 <__udivmoddi4+0x94>
 800969e:	eb1c 0404 	adds.w	r4, ip, r4
 80096a2:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
 80096a6:	f080 8104 	bcs.w	80098b2 <__udivmoddi4+0x292>
 80096aa:	42a5      	cmp	r5, r4
 80096ac:	f240 8101 	bls.w	80098b2 <__udivmoddi4+0x292>
 80096b0:	4464      	add	r4, ip
 80096b2:	3802      	subs	r0, #2
 80096b4:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 80096b8:	2100      	movs	r1, #0
 80096ba:	1b64      	subs	r4, r4, r5
 80096bc:	b11e      	cbz	r6, 80096c6 <__udivmoddi4+0xa6>
 80096be:	40dc      	lsrs	r4, r3
 80096c0:	2300      	movs	r3, #0
 80096c2:	e9c6 4300 	strd	r4, r3, [r6]
 80096c6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80096ca:	428b      	cmp	r3, r1
 80096cc:	d908      	bls.n	80096e0 <__udivmoddi4+0xc0>
 80096ce:	2e00      	cmp	r6, #0
 80096d0:	f000 80ea 	beq.w	80098a8 <__udivmoddi4+0x288>
 80096d4:	2100      	movs	r1, #0
 80096d6:	e9c6 0500 	strd	r0, r5, [r6]
 80096da:	4608      	mov	r0, r1
 80096dc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80096e0:	fab3 f183 	clz	r1, r3
 80096e4:	2900      	cmp	r1, #0
 80096e6:	d148      	bne.n	800977a <__udivmoddi4+0x15a>
 80096e8:	42ab      	cmp	r3, r5
 80096ea:	d302      	bcc.n	80096f2 <__udivmoddi4+0xd2>
 80096ec:	4282      	cmp	r2, r0
 80096ee:	f200 80f8 	bhi.w	80098e2 <__udivmoddi4+0x2c2>
 80096f2:	1a84      	subs	r4, r0, r2
 80096f4:	eb65 0203 	sbc.w	r2, r5, r3
 80096f8:	2001      	movs	r0, #1
 80096fa:	4696      	mov	lr, r2
 80096fc:	2e00      	cmp	r6, #0
 80096fe:	d0e2      	beq.n	80096c6 <__udivmoddi4+0xa6>
 8009700:	e9c6 4e00 	strd	r4, lr, [r6]
 8009704:	e7df      	b.n	80096c6 <__udivmoddi4+0xa6>
 8009706:	b902      	cbnz	r2, 800970a <__udivmoddi4+0xea>
 8009708:	deff      	udf	#255	; 0xff
 800970a:	fab2 f382 	clz	r3, r2
 800970e:	2b00      	cmp	r3, #0
 8009710:	f040 808e 	bne.w	8009830 <__udivmoddi4+0x210>
 8009714:	1a88      	subs	r0, r1, r2
 8009716:	2101      	movs	r1, #1
 8009718:	0c17      	lsrs	r7, r2, #16
 800971a:	fa1f fe82 	uxth.w	lr, r2
 800971e:	fbb0 f5f7 	udiv	r5, r0, r7
 8009722:	fb07 0015 	mls	r0, r7, r5, r0
 8009726:	0c22      	lsrs	r2, r4, #16
 8009728:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800972c:	fb0e f005 	mul.w	r0, lr, r5
 8009730:	4290      	cmp	r0, r2
 8009732:	d908      	bls.n	8009746 <__udivmoddi4+0x126>
 8009734:	eb1c 0202 	adds.w	r2, ip, r2
 8009738:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 800973c:	d202      	bcs.n	8009744 <__udivmoddi4+0x124>
 800973e:	4290      	cmp	r0, r2
 8009740:	f200 80cc 	bhi.w	80098dc <__udivmoddi4+0x2bc>
 8009744:	4645      	mov	r5, r8
 8009746:	1a12      	subs	r2, r2, r0
 8009748:	fbb2 f0f7 	udiv	r0, r2, r7
 800974c:	fb07 2210 	mls	r2, r7, r0, r2
 8009750:	fb0e fe00 	mul.w	lr, lr, r0
 8009754:	b2a4      	uxth	r4, r4
 8009756:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 800975a:	45a6      	cmp	lr, r4
 800975c:	d908      	bls.n	8009770 <__udivmoddi4+0x150>
 800975e:	eb1c 0404 	adds.w	r4, ip, r4
 8009762:	f100 32ff 	add.w	r2, r0, #4294967295	; 0xffffffff
 8009766:	d202      	bcs.n	800976e <__udivmoddi4+0x14e>
 8009768:	45a6      	cmp	lr, r4
 800976a:	f200 80b4 	bhi.w	80098d6 <__udivmoddi4+0x2b6>
 800976e:	4610      	mov	r0, r2
 8009770:	eba4 040e 	sub.w	r4, r4, lr
 8009774:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8009778:	e7a0      	b.n	80096bc <__udivmoddi4+0x9c>
 800977a:	f1c1 0720 	rsb	r7, r1, #32
 800977e:	408b      	lsls	r3, r1
 8009780:	fa22 fc07 	lsr.w	ip, r2, r7
 8009784:	ea4c 0c03 	orr.w	ip, ip, r3
 8009788:	fa25 fa07 	lsr.w	sl, r5, r7
 800978c:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8009790:	fbba f8f9 	udiv	r8, sl, r9
 8009794:	408d      	lsls	r5, r1
 8009796:	fa20 f307 	lsr.w	r3, r0, r7
 800979a:	fb09 aa18 	mls	sl, r9, r8, sl
 800979e:	fa1f fe8c 	uxth.w	lr, ip
 80097a2:	432b      	orrs	r3, r5
 80097a4:	fa00 f501 	lsl.w	r5, r0, r1
 80097a8:	fb08 f00e 	mul.w	r0, r8, lr
 80097ac:	0c1c      	lsrs	r4, r3, #16
 80097ae:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
 80097b2:	42a0      	cmp	r0, r4
 80097b4:	fa02 f201 	lsl.w	r2, r2, r1
 80097b8:	d90b      	bls.n	80097d2 <__udivmoddi4+0x1b2>
 80097ba:	eb1c 0404 	adds.w	r4, ip, r4
 80097be:	f108 3aff 	add.w	sl, r8, #4294967295	; 0xffffffff
 80097c2:	f080 8086 	bcs.w	80098d2 <__udivmoddi4+0x2b2>
 80097c6:	42a0      	cmp	r0, r4
 80097c8:	f240 8083 	bls.w	80098d2 <__udivmoddi4+0x2b2>
 80097cc:	f1a8 0802 	sub.w	r8, r8, #2
 80097d0:	4464      	add	r4, ip
 80097d2:	1a24      	subs	r4, r4, r0
 80097d4:	b298      	uxth	r0, r3
 80097d6:	fbb4 f3f9 	udiv	r3, r4, r9
 80097da:	fb09 4413 	mls	r4, r9, r3, r4
 80097de:	fb03 fe0e 	mul.w	lr, r3, lr
 80097e2:	ea40 4404 	orr.w	r4, r0, r4, lsl #16
 80097e6:	45a6      	cmp	lr, r4
 80097e8:	d908      	bls.n	80097fc <__udivmoddi4+0x1dc>
 80097ea:	eb1c 0404 	adds.w	r4, ip, r4
 80097ee:	f103 30ff 	add.w	r0, r3, #4294967295	; 0xffffffff
 80097f2:	d26a      	bcs.n	80098ca <__udivmoddi4+0x2aa>
 80097f4:	45a6      	cmp	lr, r4
 80097f6:	d968      	bls.n	80098ca <__udivmoddi4+0x2aa>
 80097f8:	3b02      	subs	r3, #2
 80097fa:	4464      	add	r4, ip
 80097fc:	ea43 4008 	orr.w	r0, r3, r8, lsl #16
 8009800:	fba0 9302 	umull	r9, r3, r0, r2
 8009804:	eba4 040e 	sub.w	r4, r4, lr
 8009808:	429c      	cmp	r4, r3
 800980a:	46c8      	mov	r8, r9
 800980c:	469e      	mov	lr, r3
 800980e:	d354      	bcc.n	80098ba <__udivmoddi4+0x29a>
 8009810:	d051      	beq.n	80098b6 <__udivmoddi4+0x296>
 8009812:	2e00      	cmp	r6, #0
 8009814:	d067      	beq.n	80098e6 <__udivmoddi4+0x2c6>
 8009816:	ebb5 0308 	subs.w	r3, r5, r8
 800981a:	eb64 040e 	sbc.w	r4, r4, lr
 800981e:	40cb      	lsrs	r3, r1
 8009820:	fa04 f707 	lsl.w	r7, r4, r7
 8009824:	431f      	orrs	r7, r3
 8009826:	40cc      	lsrs	r4, r1
 8009828:	e9c6 7400 	strd	r7, r4, [r6]
 800982c:	2100      	movs	r1, #0
 800982e:	e74a      	b.n	80096c6 <__udivmoddi4+0xa6>
 8009830:	fa02 fc03 	lsl.w	ip, r2, r3
 8009834:	f1c3 0020 	rsb	r0, r3, #32
 8009838:	40c1      	lsrs	r1, r0
 800983a:	409d      	lsls	r5, r3
 800983c:	fa24 f000 	lsr.w	r0, r4, r0
 8009840:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8009844:	4328      	orrs	r0, r5
 8009846:	fbb1 f5f7 	udiv	r5, r1, r7
 800984a:	fb07 1115 	mls	r1, r7, r5, r1
 800984e:	fa1f fe8c 	uxth.w	lr, ip
 8009852:	0c02      	lsrs	r2, r0, #16
 8009854:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8009858:	fb05 f10e 	mul.w	r1, r5, lr
 800985c:	4291      	cmp	r1, r2
 800985e:	fa04 f403 	lsl.w	r4, r4, r3
 8009862:	d908      	bls.n	8009876 <__udivmoddi4+0x256>
 8009864:	eb1c 0202 	adds.w	r2, ip, r2
 8009868:	f105 38ff 	add.w	r8, r5, #4294967295	; 0xffffffff
 800986c:	d22f      	bcs.n	80098ce <__udivmoddi4+0x2ae>
 800986e:	4291      	cmp	r1, r2
 8009870:	d92d      	bls.n	80098ce <__udivmoddi4+0x2ae>
 8009872:	3d02      	subs	r5, #2
 8009874:	4462      	add	r2, ip
 8009876:	1a52      	subs	r2, r2, r1
 8009878:	fbb2 f1f7 	udiv	r1, r2, r7
 800987c:	fb07 2211 	mls	r2, r7, r1, r2
 8009880:	b280      	uxth	r0, r0
 8009882:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 8009886:	fb01 f20e 	mul.w	r2, r1, lr
 800988a:	4282      	cmp	r2, r0
 800988c:	d908      	bls.n	80098a0 <__udivmoddi4+0x280>
 800988e:	eb1c 0000 	adds.w	r0, ip, r0
 8009892:	f101 38ff 	add.w	r8, r1, #4294967295	; 0xffffffff
 8009896:	d216      	bcs.n	80098c6 <__udivmoddi4+0x2a6>
 8009898:	4282      	cmp	r2, r0
 800989a:	d914      	bls.n	80098c6 <__udivmoddi4+0x2a6>
 800989c:	3902      	subs	r1, #2
 800989e:	4460      	add	r0, ip
 80098a0:	1a80      	subs	r0, r0, r2
 80098a2:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 80098a6:	e73a      	b.n	800971e <__udivmoddi4+0xfe>
 80098a8:	4631      	mov	r1, r6
 80098aa:	4630      	mov	r0, r6
 80098ac:	e70b      	b.n	80096c6 <__udivmoddi4+0xa6>
 80098ae:	4671      	mov	r1, lr
 80098b0:	e6e9      	b.n	8009686 <__udivmoddi4+0x66>
 80098b2:	4610      	mov	r0, r2
 80098b4:	e6fe      	b.n	80096b4 <__udivmoddi4+0x94>
 80098b6:	454d      	cmp	r5, r9
 80098b8:	d2ab      	bcs.n	8009812 <__udivmoddi4+0x1f2>
 80098ba:	ebb9 0802 	subs.w	r8, r9, r2
 80098be:	eb63 0e0c 	sbc.w	lr, r3, ip
 80098c2:	3801      	subs	r0, #1
 80098c4:	e7a5      	b.n	8009812 <__udivmoddi4+0x1f2>
 80098c6:	4641      	mov	r1, r8
 80098c8:	e7ea      	b.n	80098a0 <__udivmoddi4+0x280>
 80098ca:	4603      	mov	r3, r0
 80098cc:	e796      	b.n	80097fc <__udivmoddi4+0x1dc>
 80098ce:	4645      	mov	r5, r8
 80098d0:	e7d1      	b.n	8009876 <__udivmoddi4+0x256>
 80098d2:	46d0      	mov	r8, sl
 80098d4:	e77d      	b.n	80097d2 <__udivmoddi4+0x1b2>
 80098d6:	4464      	add	r4, ip
 80098d8:	3802      	subs	r0, #2
 80098da:	e749      	b.n	8009770 <__udivmoddi4+0x150>
 80098dc:	3d02      	subs	r5, #2
 80098de:	4462      	add	r2, ip
 80098e0:	e731      	b.n	8009746 <__udivmoddi4+0x126>
 80098e2:	4608      	mov	r0, r1
 80098e4:	e70a      	b.n	80096fc <__udivmoddi4+0xdc>
 80098e6:	4631      	mov	r1, r6
 80098e8:	e6ed      	b.n	80096c6 <__udivmoddi4+0xa6>
 80098ea:	bf00      	nop

080098ec <e131::universe_to_multicast_ip(unsigned short)>:
 80098ec:	b513      	push	{r0, r1, r4, lr}
 80098ee:	4604      	mov	r4, r0
 80098f0:	a901      	add	r1, sp, #4
 80098f2:	4806      	ldr	r0, [pc, #24]	; (800990c <e131::universe_to_multicast_ip(unsigned short)+0x20>)
 80098f4:	f009 fda6 	bl	8013444 <inet_aton>
 80098f8:	9801      	ldr	r0, [sp, #4]
 80098fa:	ea40 6004 	orr.w	r0, r0, r4, lsl #24
 80098fe:	0224      	lsls	r4, r4, #8
 8009900:	f404 047f 	and.w	r4, r4, #16711680	; 0xff0000
 8009904:	4320      	orrs	r0, r4
 8009906:	b002      	add	sp, #8
 8009908:	bd10      	pop	{r4, pc}
 800990a:	bf00      	nop
 800990c:	08015931 	stmdaeq	r1, {r0, r4, r5, r8, fp, ip, lr}

08009910 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]>:
 8009910:	f240 6304 	movw	r3, #1540	; 0x604
 8009914:	fb03 0001 	mla	r0, r3, r1, r0
 8009918:	2300      	movs	r3, #0
 800991a:	b510      	push	{r4, lr}
 800991c:	4293      	cmp	r3, r2
 800991e:	d100      	bne.n	8009922 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]+0x12>
 8009920:	bd10      	pop	{r4, pc}
 8009922:	f810 4b01 	ldrb.w	r4, [r0], #1
 8009926:	3301      	adds	r3, #1
 8009928:	f890 11ff 	ldrb.w	r1, [r0, #511]	; 0x1ff
 800992c:	42a1      	cmp	r1, r4
 800992e:	bf38      	it	cc
 8009930:	4621      	movcc	r1, r4
 8009932:	f880 13ff 	strb.w	r1, [r0, #1023]	; 0x3ff
 8009936:	e7f1      	b.n	800991c <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]+0xc>

08009938 <memset.constprop.0.isra.0>:
 8009938:	2300      	movs	r3, #0
 800993a:	4401      	add	r1, r0
 800993c:	4288      	cmp	r0, r1
 800993e:	d100      	bne.n	8009942 <memset.constprop.0.isra.0+0xa>
 8009940:	4770      	bx	lr
 8009942:	f800 3b01 	strb.w	r3, [r0], #1
 8009946:	e7f9      	b.n	800993c <memset.constprop.0.isra.0+0x4>

08009948 <memcpy.isra.0>:
 8009948:	3801      	subs	r0, #1
 800994a:	440a      	add	r2, r1
 800994c:	4291      	cmp	r1, r2
 800994e:	d100      	bne.n	8009952 <memcpy.isra.0+0xa>
 8009950:	4770      	bx	lr
 8009952:	f811 3b01 	ldrb.w	r3, [r1], #1
 8009956:	f800 3f01 	strb.w	r3, [r0, #1]!
 800995a:	e7f7      	b.n	800994c <memcpy.isra.0+0x4>

0800995c <lightset::Data::Get()>:
 800995c:	4b03      	ldr	r3, [pc, #12]	; (800996c <lightset::Data::Get()+0x10>)
 800995e:	4804      	ldr	r0, [pc, #16]	; (8009970 <lightset::Data::Get()+0x14>)
 8009960:	681a      	ldr	r2, [r3, #0]
 8009962:	07d2      	lsls	r2, r2, #31
 8009964:	bf5c      	itt	pl
 8009966:	2201      	movpl	r2, #1
 8009968:	601a      	strpl	r2, [r3, #0]
 800996a:	4770      	bx	lr
 800996c:	200000ec 	andcs	r0, r0, ip, ror #1
 8009970:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>

08009974 <lightset::Data::SetSourceA(unsigned int, unsigned char const*, unsigned int)>:
 8009974:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009978:	4615      	mov	r5, r2
 800997a:	460f      	mov	r7, r1
 800997c:	4604      	mov	r4, r0
 800997e:	f7ff ffed 	bl	800995c <lightset::Data::Get()>
 8009982:	f240 6304 	movw	r3, #1540	; 0x604
 8009986:	4606      	mov	r6, r0
 8009988:	435c      	muls	r4, r3
 800998a:	eb00 0804 	add.w	r8, r0, r4
 800998e:	462a      	mov	r2, r5
 8009990:	4639      	mov	r1, r7
 8009992:	4640      	mov	r0, r8
 8009994:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8009998:	f7ff ffd6 	bl	8009948 <memcpy.isra.0>
 800999c:	462a      	mov	r2, r5
 800999e:	4639      	mov	r1, r7
 80099a0:	f8c8 5600 	str.w	r5, [r8, #1536]	; 0x600
 80099a4:	1930      	adds	r0, r6, r4
 80099a6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80099aa:	f7ff bfcd 	b.w	8009948 <memcpy.isra.0>

080099ae <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>:
 80099ae:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80099b2:	4680      	mov	r8, r0
 80099b4:	f240 6404 	movw	r4, #1540	; 0x604
 80099b8:	4615      	mov	r5, r2
 80099ba:	460f      	mov	r7, r1
 80099bc:	4699      	mov	r9, r3
 80099be:	f7ff ffcd 	bl	800995c <lightset::Data::Get()>
 80099c2:	fb04 f408 	mul.w	r4, r4, r8
 80099c6:	eb00 0a04 	add.w	sl, r0, r4
 80099ca:	4606      	mov	r6, r0
 80099cc:	462a      	mov	r2, r5
 80099ce:	4639      	mov	r1, r7
 80099d0:	4650      	mov	r0, sl
 80099d2:	f7ff ffb9 	bl	8009948 <memcpy.isra.0>
 80099d6:	f8ca 5600 	str.w	r5, [sl, #1536]	; 0x600
 80099da:	f1b9 0f00 	cmp.w	r9, #0
 80099de:	d106      	bne.n	80099ee <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)+0x40>
 80099e0:	462a      	mov	r2, r5
 80099e2:	4641      	mov	r1, r8
 80099e4:	4630      	mov	r0, r6
 80099e6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80099ea:	f7ff bf91 	b.w	8009910 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]>
 80099ee:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80099f2:	462a      	mov	r2, r5
 80099f4:	4639      	mov	r1, r7
 80099f6:	1930      	adds	r0, r6, r4
 80099f8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80099fc:	f7ff bfa4 	b.w	8009948 <memcpy.isra.0>

08009a00 <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>:
 8009a00:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8009a04:	4616      	mov	r6, r2
 8009a06:	4699      	mov	r9, r3
 8009a08:	4680      	mov	r8, r0
 8009a0a:	460f      	mov	r7, r1
 8009a0c:	f7ff ffa6 	bl	800995c <lightset::Data::Get()>
 8009a10:	f240 6404 	movw	r4, #1540	; 0x604
 8009a14:	4605      	mov	r5, r0
 8009a16:	fb04 f408 	mul.w	r4, r4, r8
 8009a1a:	f504 7000 	add.w	r0, r4, #512	; 0x200
 8009a1e:	4632      	mov	r2, r6
 8009a20:	4639      	mov	r1, r7
 8009a22:	4428      	add	r0, r5
 8009a24:	f7ff ff90 	bl	8009948 <memcpy.isra.0>
 8009a28:	192b      	adds	r3, r5, r4
 8009a2a:	f8c3 6600 	str.w	r6, [r3, #1536]	; 0x600
 8009a2e:	f1b9 0f00 	cmp.w	r9, #0
 8009a32:	d106      	bne.n	8009a42 <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)+0x42>
 8009a34:	4632      	mov	r2, r6
 8009a36:	4641      	mov	r1, r8
 8009a38:	4628      	mov	r0, r5
 8009a3a:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8009a3e:	f7ff bf67 	b.w	8009910 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]>
 8009a42:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8009a46:	4632      	mov	r2, r6
 8009a48:	4639      	mov	r1, r7
 8009a4a:	1928      	adds	r0, r5, r4
 8009a4c:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8009a50:	f7ff bf7a 	b.w	8009948 <memcpy.isra.0>

08009a54 <lightset::Data::IOutput(LightSet*, unsigned int) const>:
 8009a54:	f240 6304 	movw	r3, #1540	; 0x604
 8009a58:	b470      	push	{r4, r5, r6}
 8009a5a:	4605      	mov	r5, r0
 8009a5c:	4608      	mov	r0, r1
 8009a5e:	4353      	muls	r3, r2
 8009a60:	4611      	mov	r1, r2
 8009a62:	f503 6480 	add.w	r4, r3, #1024	; 0x400
 8009a66:	18ea      	adds	r2, r5, r3
 8009a68:	6803      	ldr	r3, [r0, #0]
 8009a6a:	691e      	ldr	r6, [r3, #16]
 8009a6c:	f8d2 3600 	ldr.w	r3, [r2, #1536]	; 0x600
 8009a70:	46b4      	mov	ip, r6
 8009a72:	192a      	adds	r2, r5, r4
 8009a74:	bc70      	pop	{r4, r5, r6}
 8009a76:	4760      	bx	ip

08009a78 <E131Bridge::Start()>:
 8009a78:	6943      	ldr	r3, [r0, #20]
 8009a7a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8009a7c:	4604      	mov	r4, r0
 8009a7e:	b35b      	cbz	r3, 8009ad8 <E131Bridge::Start()+0x60>
 8009a80:	6983      	ldr	r3, [r0, #24]
 8009a82:	b9cb      	cbnz	r3, 8009ab8 <E131Bridge::Start()+0x40>
 8009a84:	a901      	add	r1, sp, #4
 8009a86:	4818      	ldr	r0, [pc, #96]	; (8009ae8 <E131Bridge::Start()+0x70>)
 8009a88:	f009 fcdc 	bl	8013444 <inet_aton>
 8009a8c:	9b01      	ldr	r3, [sp, #4]
 8009a8e:	f240 207e 	movw	r0, #638	; 0x27e
 8009a92:	f043 4356 	orr.w	r3, r3, #3590324224	; 0xd6000000
 8009a96:	f443 037a 	orr.w	r3, r3, #16384000	; 0xfa0000
 8009a9a:	6223      	str	r3, [r4, #32]
 8009a9c:	f009 fcce 	bl	801343c <operator new(unsigned int)>
 8009aa0:	61a0      	str	r0, [r4, #24]
 8009aa2:	4620      	mov	r0, r4
 8009aa4:	f000 fd8c 	bl	800a5c0 <E131Bridge::FillDataPacket()>
 8009aa8:	f44f 608f 	mov.w	r0, #1144	; 0x478
 8009aac:	f009 fcc6 	bl	801343c <operator new(unsigned int)>
 8009ab0:	61e0      	str	r0, [r4, #28]
 8009ab2:	4620      	mov	r0, r4
 8009ab4:	f000 fcda 	bl	800a46c <E131Bridge::FillDiscoveryPacket()>
 8009ab8:	2500      	movs	r5, #0
 8009aba:	270c      	movs	r7, #12
 8009abc:	f604 5692 	addw	r6, r4, #3474	; 0xd92
 8009ac0:	fb07 f305 	mul.w	r3, r7, r5
 8009ac4:	5cf3      	ldrb	r3, [r6, r3]
 8009ac6:	b123      	cbz	r3, 8009ad2 <E131Bridge::Start()+0x5a>
 8009ac8:	6960      	ldr	r0, [r4, #20]
 8009aca:	4629      	mov	r1, r5
 8009acc:	6803      	ldr	r3, [r0, #0]
 8009ace:	689b      	ldr	r3, [r3, #8]
 8009ad0:	4798      	blx	r3
 8009ad2:	3501      	adds	r5, #1
 8009ad4:	2d20      	cmp	r5, #32
 8009ad6:	d1f3      	bne.n	8009ac0 <E131Bridge::Start()+0x48>
 8009ad8:	2102      	movs	r1, #2
 8009ada:	4b04      	ldr	r3, [pc, #16]	; (8009aec <E131Bridge::Start()+0x74>)
 8009adc:	6818      	ldr	r0, [r3, #0]
 8009ade:	b003      	add	sp, #12
 8009ae0:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8009ae4:	f009 bbc4 	b.w	8013270 <LedBlink::SetMode(ledblink::Mode)>
 8009ae8:	08015931 	stmdaeq	r1, {r0, r4, r5, r8, fp, ip, lr}
 8009aec:	2001ce34 	andcs	ip, r1, r4, lsr lr

08009af0 <E131Bridge::Stop()>:
 8009af0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009af4:	2500      	movs	r5, #0
 8009af6:	2301      	movs	r3, #1
 8009af8:	4604      	mov	r4, r0
 8009afa:	f240 6804 	movw	r8, #1540	; 0x604
 8009afe:	462e      	mov	r6, r5
 8009b00:	f880 34f4 	strb.w	r3, [r0, #1268]	; 0x4f4
 8009b04:	f500 67aa 	add.w	r7, r0, #1360	; 0x550
 8009b08:	6860      	ldr	r0, [r4, #4]
 8009b0a:	b118      	cbz	r0, 8009b14 <E131Bridge::Stop()+0x24>
 8009b0c:	6803      	ldr	r3, [r0, #0]
 8009b0e:	4629      	mov	r1, r5
 8009b10:	68db      	ldr	r3, [r3, #12]
 8009b12:	4798      	blx	r3
 8009b14:	f7ff ff22 	bl	800995c <lightset::Data::Get()>
 8009b18:	2344      	movs	r3, #68	; 0x44
 8009b1a:	fb08 0005 	mla	r0, r8, r5, r0
 8009b1e:	436b      	muls	r3, r5
 8009b20:	3501      	adds	r5, #1
 8009b22:	2d20      	cmp	r5, #32
 8009b24:	f8c0 6600 	str.w	r6, [r0, #1536]	; 0x600
 8009b28:	54fe      	strb	r6, [r7, r3]
 8009b2a:	d1ed      	bne.n	8009b08 <E131Bridge::Stop()+0x18>
 8009b2c:	6963      	ldr	r3, [r4, #20]
 8009b2e:	b17b      	cbz	r3, 8009b50 <E131Bridge::Stop()+0x60>
 8009b30:	2500      	movs	r5, #0
 8009b32:	270c      	movs	r7, #12
 8009b34:	f604 5692 	addw	r6, r4, #3474	; 0xd92
 8009b38:	fb07 f305 	mul.w	r3, r7, r5
 8009b3c:	5cf3      	ldrb	r3, [r6, r3]
 8009b3e:	b123      	cbz	r3, 8009b4a <E131Bridge::Stop()+0x5a>
 8009b40:	6960      	ldr	r0, [r4, #20]
 8009b42:	4629      	mov	r1, r5
 8009b44:	6803      	ldr	r3, [r0, #0]
 8009b46:	68db      	ldr	r3, [r3, #12]
 8009b48:	4798      	blx	r3
 8009b4a:	3501      	adds	r5, #1
 8009b4c:	2d20      	cmp	r5, #32
 8009b4e:	d1f3      	bne.n	8009b38 <E131Bridge::Stop()+0x48>
 8009b50:	4b03      	ldr	r3, [pc, #12]	; (8009b60 <E131Bridge::Stop()+0x70>)
 8009b52:	2100      	movs	r1, #0
 8009b54:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8009b58:	6818      	ldr	r0, [r3, #0]
 8009b5a:	f009 bb89 	b.w	8013270 <LedBlink::SetMode(ledblink::Mode)>
 8009b5e:	bf00      	nop
 8009b60:	2001ce34 	andcs	ip, r1, r4, lsr lr

08009b64 <E131Bridge::SetSourceName(char const*)>:
 8009b64:	233f      	movs	r3, #63	; 0x3f
 8009b66:	b510      	push	{r4, lr}
 8009b68:	f100 0234 	add.w	r2, r0, #52	; 0x34
 8009b6c:	3901      	subs	r1, #1
 8009b6e:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 8009b72:	b92c      	cbnz	r4, 8009b80 <E131Bridge::SetSourceName(char const*)+0x1c>
 8009b74:	4413      	add	r3, r2
 8009b76:	429a      	cmp	r2, r3
 8009b78:	d006      	beq.n	8009b88 <E131Bridge::SetSourceName(char const*)+0x24>
 8009b7a:	f802 4b01 	strb.w	r4, [r2], #1
 8009b7e:	e7fa      	b.n	8009b76 <E131Bridge::SetSourceName(char const*)+0x12>
 8009b80:	3b01      	subs	r3, #1
 8009b82:	f802 4b01 	strb.w	r4, [r2], #1
 8009b86:	d1f2      	bne.n	8009b6e <E131Bridge::SetSourceName(char const*)+0xa>
 8009b88:	2300      	movs	r3, #0
 8009b8a:	f880 3073 	strb.w	r3, [r0, #115]	; 0x73
 8009b8e:	bd10      	pop	{r4, pc}

08009b90 <E131Bridge::E131Bridge()>:
 8009b90:	2300      	movs	r3, #0
 8009b92:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8009b96:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009b98:	e9c0 2300 	strd	r2, r3, [r0]
 8009b9c:	2201      	movs	r2, #1
 8009b9e:	4604      	mov	r4, r0
 8009ba0:	2764      	movs	r7, #100	; 0x64
 8009ba2:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8009ba6:	e9c0 3305 	strd	r3, r3, [r0, #20]
 8009baa:	e9c0 3307 	strd	r3, r3, [r0, #28]
 8009bae:	6743      	str	r3, [r0, #116]	; 0x74
 8009bb0:	4b1e      	ldr	r3, [pc, #120]	; (8009c2c <E131Bridge::E131Bridge()+0x9c>)
 8009bb2:	7202      	strb	r2, [r0, #8]
 8009bb4:	b093      	sub	sp, #76	; 0x4c
 8009bb6:	6018      	str	r0, [r3, #0]
 8009bb8:	f500 65a2 	add.w	r5, r0, #1296	; 0x510
 8009bbc:	f500 6259 	add.w	r2, r0, #3472	; 0xd90
 8009bc0:	f500 6671 	add.w	r6, r0, #3856	; 0xf10
 8009bc4:	4628      	mov	r0, r5
 8009bc6:	2144      	movs	r1, #68	; 0x44
 8009bc8:	f7ff feb6 	bl	8009938 <memset.constprop.0.isra.0>
 8009bcc:	4610      	mov	r0, r2
 8009bce:	210c      	movs	r1, #12
 8009bd0:	f7ff feb2 	bl	8009938 <memset.constprop.0.isra.0>
 8009bd4:	320c      	adds	r2, #12
 8009bd6:	f802 7c03 	strb.w	r7, [r2, #-3]
 8009bda:	42b2      	cmp	r2, r6
 8009bdc:	f105 0544 	add.w	r5, r5, #68	; 0x44
 8009be0:	d1f0      	bne.n	8009bc4 <E131Bridge::E131Bridge()+0x34>
 8009be2:	f204 40f4 	addw	r0, r4, #1268	; 0x4f4
 8009be6:	211c      	movs	r1, #28
 8009be8:	f7ff fea6 	bl	8009938 <memset.constprop.0.isra.0>
 8009bec:	2301      	movs	r3, #1
 8009bee:	4d10      	ldr	r5, [pc, #64]	; (8009c30 <E131Bridge::E131Bridge()+0xa0>)
 8009bf0:	f884 350c 	strb.w	r3, [r4, #1292]	; 0x50c
 8009bf4:	4a0f      	ldr	r2, [pc, #60]	; (8009c34 <E131Bridge::E131Bridge()+0xa4>)
 8009bf6:	682b      	ldr	r3, [r5, #0]
 8009bf8:	2140      	movs	r1, #64	; 0x40
 8009bfa:	331c      	adds	r3, #28
 8009bfc:	9200      	str	r2, [sp, #0]
 8009bfe:	a802      	add	r0, sp, #8
 8009c00:	4a0d      	ldr	r2, [pc, #52]	; (8009c38 <E131Bridge::E131Bridge()+0xa8>)
 8009c02:	f7ff fce5 	bl	80095d0 <snprintf>
 8009c06:	4620      	mov	r0, r4
 8009c08:	a902      	add	r1, sp, #8
 8009c0a:	f7ff ffab 	bl	8009b64 <E131Bridge::SetSourceName(char const*)>
 8009c0e:	f44f 51ae 	mov.w	r1, #5568	; 0x15c0
 8009c12:	6828      	ldr	r0, [r5, #0]
 8009c14:	f006 ffe4 	bl	8010be0 <Network::Begin(unsigned short)>
 8009c18:	4621      	mov	r1, r4
 8009c1a:	4b08      	ldr	r3, [pc, #32]	; (8009c3c <E131Bridge::E131Bridge()+0xac>)
 8009c1c:	f841 0b24 	str.w	r0, [r1], #36
 8009c20:	6818      	ldr	r0, [r3, #0]
 8009c22:	f009 fbad 	bl	8013380 <Hardware::GetUuid(unsigned char*)>
 8009c26:	4620      	mov	r0, r4
 8009c28:	b013      	add	sp, #76	; 0x4c
 8009c2a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009c2c:	2000c170 	andcs	ip, r0, r0, ror r1
 8009c30:	2001c710 	andcs	ip, r1, r0, lsl r7
 8009c34:	08015946 	stmdaeq	r1, {r1, r2, r6, r8, fp, ip, lr}
 8009c38:	0801593d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r8, fp, ip, lr}
 8009c3c:	2001ce38 	andcs	ip, r1, r8, lsr lr

08009c40 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>:
 8009c40:	b570      	push	{r4, r5, r6, lr}
 8009c42:	4604      	mov	r4, r0
 8009c44:	2300      	movs	r3, #0
 8009c46:	2544      	movs	r5, #68	; 0x44
 8009c48:	4610      	mov	r0, r2
 8009c4a:	f504 62a2 	add.w	r2, r4, #1296	; 0x510
 8009c4e:	4299      	cmp	r1, r3
 8009c50:	d004      	beq.n	8009c5c <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0x1c>
 8009c52:	fb05 f603 	mul.w	r6, r5, r3
 8009c56:	5b96      	ldrh	r6, [r2, r6]
 8009c58:	4286      	cmp	r6, r0
 8009c5a:	d00e      	beq.n	8009c7a <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0x3a>
 8009c5c:	3301      	adds	r3, #1
 8009c5e:	2b20      	cmp	r3, #32
 8009c60:	d1f5      	bne.n	8009c4e <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0xe>
 8009c62:	4b06      	ldr	r3, [pc, #24]	; (8009c7c <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0x3c>)
 8009c64:	6825      	ldr	r5, [r4, #0]
 8009c66:	681c      	ldr	r4, [r3, #0]
 8009c68:	f7ff fe40 	bl	80098ec <e131::universe_to_multicast_ip(unsigned short)>
 8009c6c:	4629      	mov	r1, r5
 8009c6e:	4602      	mov	r2, r0
 8009c70:	4620      	mov	r0, r4
 8009c72:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009c76:	f006 bfc7 	b.w	8010c08 <Network::LeaveGroup(int, unsigned int)>
 8009c7a:	bd70      	pop	{r4, r5, r6, pc}
 8009c7c:	2001c710 	andcs	ip, r1, r0, lsl r7

08009c80 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)>:
 8009c80:	b570      	push	{r4, r5, r6, lr}
 8009c82:	4604      	mov	r4, r0
 8009c84:	461d      	mov	r5, r3
 8009c86:	b1c1      	cbz	r1, 8009cba <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x3a>
 8009c88:	f8b0 2506 	ldrh.w	r2, [r0, #1286]	; 0x506
 8009c8c:	f200 5606 	addw	r6, r0, #1286	; 0x506
 8009c90:	b12a      	cbz	r2, 8009c9e <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x1e>
 8009c92:	42aa      	cmp	r2, r5
 8009c94:	d017      	beq.n	8009cc6 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x46>
 8009c96:	2120      	movs	r1, #32
 8009c98:	4620      	mov	r0, r4
 8009c9a:	f7ff ffd1 	bl	8009c40 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>
 8009c9e:	4b0a      	ldr	r3, [pc, #40]	; (8009cc8 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x48>)
 8009ca0:	8035      	strh	r5, [r6, #0]
 8009ca2:	4628      	mov	r0, r5
 8009ca4:	6826      	ldr	r6, [r4, #0]
 8009ca6:	681c      	ldr	r4, [r3, #0]
 8009ca8:	f7ff fe20 	bl	80098ec <e131::universe_to_multicast_ip(unsigned short)>
 8009cac:	4631      	mov	r1, r6
 8009cae:	4602      	mov	r2, r0
 8009cb0:	4620      	mov	r0, r4
 8009cb2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009cb6:	f006 bfa4 	b.w	8010c02 <Network::JoinGroup(int, unsigned int)>
 8009cba:	b122      	cbz	r2, 8009cc6 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x46>
 8009cbc:	f8b0 2508 	ldrh.w	r2, [r0, #1288]	; 0x508
 8009cc0:	f500 66a1 	add.w	r6, r0, #1288	; 0x508
 8009cc4:	e7e4      	b.n	8009c90 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x10>
 8009cc6:	bd70      	pop	{r4, r5, r6, pc}
 8009cc8:	2001c710 	andcs	ip, r1, r0, lsl r7

08009ccc <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)>:
 8009ccc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009cd0:	4604      	mov	r4, r0
 8009cd2:	460d      	mov	r5, r1
 8009cd4:	461e      	mov	r6, r3
 8009cd6:	bb02      	cbnz	r2, 8009d1a <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x4e>
 8009cd8:	291f      	cmp	r1, #31
 8009cda:	d843      	bhi.n	8009d64 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x98>
 8009cdc:	230c      	movs	r3, #12
 8009cde:	fb03 0301 	mla	r3, r3, r1, r0
 8009ce2:	f893 2d92 	ldrb.w	r2, [r3, #3474]	; 0xd92
 8009ce6:	b12a      	cbz	r2, 8009cf4 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x28>
 8009ce8:	f8b3 3d90 	ldrh.w	r3, [r3, #3472]	; 0xd90
 8009cec:	42b3      	cmp	r3, r6
 8009cee:	d109      	bne.n	8009d04 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x38>
 8009cf0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009cf4:	f890 250a 	ldrb.w	r2, [r0, #1290]	; 0x50a
 8009cf8:	3201      	adds	r2, #1
 8009cfa:	f880 250a 	strb.w	r2, [r0, #1290]	; 0x50a
 8009cfe:	2201      	movs	r2, #1
 8009d00:	f883 2d92 	strb.w	r2, [r3, #3474]	; 0xd92
 8009d04:	230c      	movs	r3, #12
 8009d06:	fb03 4405 	mla	r4, r3, r5, r4
 8009d0a:	4630      	mov	r0, r6
 8009d0c:	f8a4 6d90 	strh.w	r6, [r4, #3472]	; 0xd90
 8009d10:	f7ff fdec 	bl	80098ec <e131::universe_to_multicast_ip(unsigned short)>
 8009d14:	f8c4 0d94 	str.w	r0, [r4, #3476]	; 0xd94
 8009d18:	e7ea      	b.n	8009cf0 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 8009d1a:	2a02      	cmp	r2, #2
 8009d1c:	d122      	bne.n	8009d64 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x98>
 8009d1e:	291f      	cmp	r1, #31
 8009d20:	d8e6      	bhi.n	8009cf0 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 8009d22:	2344      	movs	r3, #68	; 0x44
 8009d24:	fb03 0301 	mla	r3, r3, r1, r0
 8009d28:	f893 2512 	ldrb.w	r2, [r3, #1298]	; 0x512
 8009d2c:	b152      	cbz	r2, 8009d44 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x78>
 8009d2e:	2200      	movs	r2, #0
 8009d30:	f883 2512 	strb.w	r2, [r3, #1298]	; 0x512
 8009d34:	f890 350b 	ldrb.w	r3, [r0, #1291]	; 0x50b
 8009d38:	4632      	mov	r2, r6
 8009d3a:	3b01      	subs	r3, #1
 8009d3c:	f880 350b 	strb.w	r3, [r0, #1291]	; 0x50b
 8009d40:	f7ff ff7e 	bl	8009c40 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>
 8009d44:	230c      	movs	r3, #12
 8009d46:	fb03 4505 	mla	r5, r3, r5, r4
 8009d4a:	f895 3d92 	ldrb.w	r3, [r5, #3474]	; 0xd92
 8009d4e:	2b00      	cmp	r3, #0
 8009d50:	d0ce      	beq.n	8009cf0 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 8009d52:	2300      	movs	r3, #0
 8009d54:	f885 3d92 	strb.w	r3, [r5, #3474]	; 0xd92
 8009d58:	f894 350a 	ldrb.w	r3, [r4, #1290]	; 0x50a
 8009d5c:	3b01      	subs	r3, #1
 8009d5e:	f884 350a 	strb.w	r3, [r4, #1290]	; 0x50a
 8009d62:	e7c5      	b.n	8009cf0 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 8009d64:	2344      	movs	r3, #68	; 0x44
 8009d66:	fb03 4305 	mla	r3, r3, r5, r4
 8009d6a:	f893 2512 	ldrb.w	r2, [r3, #1298]	; 0x512
 8009d6e:	b1d2      	cbz	r2, 8009da6 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0xda>
 8009d70:	f8b3 3510 	ldrh.w	r3, [r3, #1296]	; 0x510
 8009d74:	42b3      	cmp	r3, r6
 8009d76:	d0bb      	beq.n	8009cf0 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 8009d78:	4632      	mov	r2, r6
 8009d7a:	4629      	mov	r1, r5
 8009d7c:	4620      	mov	r0, r4
 8009d7e:	f7ff ff5f 	bl	8009c40 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>
 8009d82:	4b0d      	ldr	r3, [pc, #52]	; (8009db8 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0xec>)
 8009d84:	4630      	mov	r0, r6
 8009d86:	681f      	ldr	r7, [r3, #0]
 8009d88:	f8d4 8000 	ldr.w	r8, [r4]
 8009d8c:	f7ff fdae 	bl	80098ec <e131::universe_to_multicast_ip(unsigned short)>
 8009d90:	4641      	mov	r1, r8
 8009d92:	4602      	mov	r2, r0
 8009d94:	4638      	mov	r0, r7
 8009d96:	f006 ff34 	bl	8010c02 <Network::JoinGroup(int, unsigned int)>
 8009d9a:	2344      	movs	r3, #68	; 0x44
 8009d9c:	fb03 4305 	mla	r3, r3, r5, r4
 8009da0:	f8a3 6510 	strh.w	r6, [r3, #1296]	; 0x510
 8009da4:	e7a4      	b.n	8009cf0 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 8009da6:	f894 250b 	ldrb.w	r2, [r4, #1291]	; 0x50b
 8009daa:	3201      	adds	r2, #1
 8009dac:	f884 250b 	strb.w	r2, [r4, #1291]	; 0x50b
 8009db0:	2201      	movs	r2, #1
 8009db2:	f883 2512 	strb.w	r2, [r3, #1298]	; 0x512
 8009db6:	e7e4      	b.n	8009d82 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0xb6>
 8009db8:	2001c710 	andcs	ip, r1, r0, lsl r7

08009dbc <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>:
 8009dbc:	b953      	cbnz	r3, 8009dd4 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const+0x18>
 8009dbe:	291f      	cmp	r1, #31
 8009dc0:	d811      	bhi.n	8009de6 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const+0x2a>
 8009dc2:	230c      	movs	r3, #12
 8009dc4:	fb03 0001 	mla	r0, r3, r1, r0
 8009dc8:	f8b0 3d90 	ldrh.w	r3, [r0, #3472]	; 0xd90
 8009dcc:	f890 0d92 	ldrb.w	r0, [r0, #3474]	; 0xd92
 8009dd0:	8013      	strh	r3, [r2, #0]
 8009dd2:	4770      	bx	lr
 8009dd4:	2344      	movs	r3, #68	; 0x44
 8009dd6:	fb03 0001 	mla	r0, r3, r1, r0
 8009dda:	f8b0 3510 	ldrh.w	r3, [r0, #1296]	; 0x510
 8009dde:	f890 0512 	ldrb.w	r0, [r0, #1298]	; 0x512
 8009de2:	8013      	strh	r3, [r2, #0]
 8009de4:	4770      	bx	lr
 8009de6:	4618      	mov	r0, r3
 8009de8:	4770      	bx	lr

08009dea <E131Bridge::UpdateMergeStatus(unsigned int)>:
 8009dea:	f890 34f5 	ldrb.w	r3, [r0, #1269]	; 0x4f5
 8009dee:	b923      	cbnz	r3, 8009dfa <E131Bridge::UpdateMergeStatus(unsigned int)+0x10>
 8009df0:	2301      	movs	r3, #1
 8009df2:	f880 34f5 	strb.w	r3, [r0, #1269]	; 0x4f5
 8009df6:	f880 34f8 	strb.w	r3, [r0, #1272]	; 0x4f8
 8009dfa:	2344      	movs	r3, #68	; 0x44
 8009dfc:	fb03 0001 	mla	r0, r3, r1, r0
 8009e00:	2301      	movs	r3, #1
 8009e02:	f880 3551 	strb.w	r3, [r0, #1361]	; 0x551
 8009e06:	4770      	bx	lr

08009e08 <E131Bridge::CheckMergeTimeouts(unsigned int)>:
 8009e08:	4602      	mov	r2, r0
 8009e0a:	2044      	movs	r0, #68	; 0x44
 8009e0c:	4348      	muls	r0, r1
 8009e0e:	b570      	push	{r4, r5, r6, lr}
 8009e10:	1815      	adds	r5, r2, r0
 8009e12:	460c      	mov	r4, r1
 8009e14:	68d3      	ldr	r3, [r2, #12]
 8009e16:	f8d5 1514 	ldr.w	r1, [r5, #1300]	; 0x514
 8009e1a:	1a5b      	subs	r3, r3, r1
 8009e1c:	f242 7110 	movw	r1, #10000	; 0x2710
 8009e20:	428b      	cmp	r3, r1
 8009e22:	d90a      	bls.n	8009e3a <E131Bridge::CheckMergeTimeouts(unsigned int)+0x32>
 8009e24:	2600      	movs	r6, #0
 8009e26:	f200 501c 	addw	r0, r0, #1308	; 0x51c
 8009e2a:	2110      	movs	r1, #16
 8009e2c:	f8c5 6518 	str.w	r6, [r5, #1304]	; 0x518
 8009e30:	4410      	add	r0, r2
 8009e32:	f7ff fd81 	bl	8009938 <memset.constprop.0.isra.0>
 8009e36:	f885 6551 	strb.w	r6, [r5, #1361]	; 0x551
 8009e3a:	2344      	movs	r3, #68	; 0x44
 8009e3c:	435c      	muls	r4, r3
 8009e3e:	1915      	adds	r5, r2, r4
 8009e40:	f8d5 1530 	ldr.w	r1, [r5, #1328]	; 0x530
 8009e44:	68d3      	ldr	r3, [r2, #12]
 8009e46:	1a5b      	subs	r3, r3, r1
 8009e48:	f242 7110 	movw	r1, #10000	; 0x2710
 8009e4c:	428b      	cmp	r3, r1
 8009e4e:	d90a      	bls.n	8009e66 <E131Bridge::CheckMergeTimeouts(unsigned int)+0x5e>
 8009e50:	2600      	movs	r6, #0
 8009e52:	f504 64a7 	add.w	r4, r4, #1336	; 0x538
 8009e56:	2110      	movs	r1, #16
 8009e58:	f8c5 6534 	str.w	r6, [r5, #1332]	; 0x534
 8009e5c:	1910      	adds	r0, r2, r4
 8009e5e:	f7ff fd6b 	bl	8009938 <memset.constprop.0.isra.0>
 8009e62:	f885 6551 	strb.w	r6, [r5, #1361]	; 0x551
 8009e66:	4611      	mov	r1, r2
 8009e68:	2300      	movs	r3, #0
 8009e6a:	f502 6008 	add.w	r0, r2, #2176	; 0x880
 8009e6e:	f891 4551 	ldrb.w	r4, [r1, #1361]	; 0x551
 8009e72:	3144      	adds	r1, #68	; 0x44
 8009e74:	4281      	cmp	r1, r0
 8009e76:	ea43 0304 	orr.w	r3, r3, r4
 8009e7a:	d1f8      	bne.n	8009e6e <E131Bridge::CheckMergeTimeouts(unsigned int)+0x66>
 8009e7c:	b923      	cbnz	r3, 8009e88 <E131Bridge::CheckMergeTimeouts(unsigned int)+0x80>
 8009e7e:	2101      	movs	r1, #1
 8009e80:	f882 34f5 	strb.w	r3, [r2, #1269]	; 0x4f5
 8009e84:	f882 14f8 	strb.w	r1, [r2, #1272]	; 0x4f8
 8009e88:	bd70      	pop	{r4, r5, r6, pc}

08009e8a <E131Bridge::IsPriorityTimeOut(unsigned int) const>:
 8009e8a:	2244      	movs	r2, #68	; 0x44
 8009e8c:	fb02 0101 	mla	r1, r2, r1, r0
 8009e90:	68c3      	ldr	r3, [r0, #12]
 8009e92:	b510      	push	{r4, lr}
 8009e94:	f8d1 2530 	ldr.w	r2, [r1, #1328]	; 0x530
 8009e98:	f8d1 4518 	ldr.w	r4, [r1, #1304]	; 0x518
 8009e9c:	f8d1 0534 	ldr.w	r0, [r1, #1332]	; 0x534
 8009ea0:	1a9a      	subs	r2, r3, r2
 8009ea2:	b184      	cbz	r4, 8009ec6 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x3c>
 8009ea4:	f8d1 1514 	ldr.w	r1, [r1, #1300]	; 0x514
 8009ea8:	1a5b      	subs	r3, r3, r1
 8009eaa:	b128      	cbz	r0, 8009eb8 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x2e>
 8009eac:	f242 700f 	movw	r0, #9999	; 0x270f
 8009eb0:	4283      	cmp	r3, r0
 8009eb2:	d90d      	bls.n	8009ed0 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x46>
 8009eb4:	4282      	cmp	r2, r0
 8009eb6:	e002      	b.n	8009ebe <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x34>
 8009eb8:	f242 7010 	movw	r0, #10000	; 0x2710
 8009ebc:	4283      	cmp	r3, r0
 8009ebe:	bf94      	ite	ls
 8009ec0:	2000      	movls	r0, #0
 8009ec2:	2001      	movhi	r0, #1
 8009ec4:	bd10      	pop	{r4, pc}
 8009ec6:	2800      	cmp	r0, #0
 8009ec8:	d0fc      	beq.n	8009ec4 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x3a>
 8009eca:	f242 7010 	movw	r0, #10000	; 0x2710
 8009ece:	e7f1      	b.n	8009eb4 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x2a>
 8009ed0:	2000      	movs	r0, #0
 8009ed2:	e7f7      	b.n	8009ec4 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x3a>

08009ed4 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const>:
 8009ed4:	684a      	ldr	r2, [r1, #4]
 8009ed6:	6f83      	ldr	r3, [r0, #120]	; 0x78
 8009ed8:	b510      	push	{r4, lr}
 8009eda:	429a      	cmp	r2, r3
 8009edc:	d10d      	bne.n	8009efa <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x26>
 8009ede:	f100 0392 	add.w	r3, r0, #146	; 0x92
 8009ee2:	3108      	adds	r1, #8
 8009ee4:	30a2      	adds	r0, #162	; 0xa2
 8009ee6:	4283      	cmp	r3, r0
 8009ee8:	d101      	bne.n	8009eee <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x1a>
 8009eea:	2001      	movs	r0, #1
 8009eec:	bd10      	pop	{r4, pc}
 8009eee:	f811 4b01 	ldrb.w	r4, [r1], #1
 8009ef2:	f813 2b01 	ldrb.w	r2, [r3], #1
 8009ef6:	4294      	cmp	r4, r2
 8009ef8:	d0f5      	beq.n	8009ee6 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x12>
 8009efa:	2000      	movs	r0, #0
 8009efc:	e7f6      	b.n	8009eec <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x18>
	...

08009f00 <E131Bridge::SetNetworkDataLossCondition(bool, bool)>:
 8009f00:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009f04:	2301      	movs	r3, #1
 8009f06:	4605      	mov	r5, r0
 8009f08:	4690      	mov	r8, r2
 8009f0a:	460f      	mov	r7, r1
 8009f0c:	f880 34f8 	strb.w	r3, [r0, #1272]	; 0x4f8
 8009f10:	2900      	cmp	r1, #0
 8009f12:	d03d      	beq.n	8009f90 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x90>
 8009f14:	2a00      	cmp	r2, #0
 8009f16:	d03b      	beq.n	8009f90 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x90>
 8009f18:	2600      	movs	r6, #0
 8009f1a:	f240 6804 	movw	r8, #1540	; 0x604
 8009f1e:	4637      	mov	r7, r6
 8009f20:	f8c0 34f4 	str.w	r3, [r0, #1268]	; 0x4f4
 8009f24:	f880 350c 	strb.w	r3, [r0, #1292]	; 0x50c
 8009f28:	f200 541c 	addw	r4, r0, #1308	; 0x51c
 8009f2c:	f894 3036 	ldrb.w	r3, [r4, #54]	; 0x36
 8009f30:	b1e3      	cbz	r3, 8009f6c <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x6c>
 8009f32:	6868      	ldr	r0, [r5, #4]
 8009f34:	4631      	mov	r1, r6
 8009f36:	6803      	ldr	r3, [r0, #0]
 8009f38:	68db      	ldr	r3, [r3, #12]
 8009f3a:	4798      	blx	r3
 8009f3c:	2110      	movs	r1, #16
 8009f3e:	4620      	mov	r0, r4
 8009f40:	f844 7c04 	str.w	r7, [r4, #-4]
 8009f44:	f7ff fcf8 	bl	8009938 <memset.constprop.0.isra.0>
 8009f48:	2110      	movs	r1, #16
 8009f4a:	f104 001c 	add.w	r0, r4, #28
 8009f4e:	61a7      	str	r7, [r4, #24]
 8009f50:	f7ff fcf2 	bl	8009938 <memset.constprop.0.isra.0>
 8009f54:	f7ff fd02 	bl	800995c <lightset::Data::Get()>
 8009f58:	fb08 0006 	mla	r0, r8, r6, r0
 8009f5c:	f8c0 7600 	str.w	r7, [r0, #1536]	; 0x600
 8009f60:	f884 7034 	strb.w	r7, [r4, #52]	; 0x34
 8009f64:	f884 7036 	strb.w	r7, [r4, #54]	; 0x36
 8009f68:	f884 7035 	strb.w	r7, [r4, #53]	; 0x35
 8009f6c:	3601      	adds	r6, #1
 8009f6e:	2e20      	cmp	r6, #32
 8009f70:	f104 0444 	add.w	r4, r4, #68	; 0x44
 8009f74:	d1da      	bne.n	8009f2c <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x2c>
 8009f76:	4b25      	ldr	r3, [pc, #148]	; (800a00c <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x10c>)
 8009f78:	2102      	movs	r1, #2
 8009f7a:	6818      	ldr	r0, [r3, #0]
 8009f7c:	f009 f978 	bl	8013270 <LedBlink::SetMode(ledblink::Mode)>
 8009f80:	f895 350d 	ldrb.w	r3, [r5, #1293]	; 0x50d
 8009f84:	f023 0302 	bic.w	r3, r3, #2
 8009f88:	f885 350d 	strb.w	r3, [r5, #1293]	; 0x50d
 8009f8c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009f90:	2600      	movs	r6, #0
 8009f92:	f240 6b04 	movw	fp, #1540	; 0x604
 8009f96:	46b1      	mov	r9, r6
 8009f98:	f505 64a7 	add.w	r4, r5, #1336	; 0x538
 8009f9c:	7ea3      	ldrb	r3, [r4, #26]
 8009f9e:	b373      	cbz	r3, 8009ffe <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xfe>
 8009fa0:	b15f      	cbz	r7, 8009fba <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xba>
 8009fa2:	f854 3c20 	ldr.w	r3, [r4, #-32]
 8009fa6:	b143      	cbz	r3, 8009fba <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xba>
 8009fa8:	2110      	movs	r1, #16
 8009faa:	f844 9c20 	str.w	r9, [r4, #-32]
 8009fae:	f1a4 001c 	sub.w	r0, r4, #28
 8009fb2:	f7ff fcc1 	bl	8009938 <memset.constprop.0.isra.0>
 8009fb6:	f884 9019 	strb.w	r9, [r4, #25]
 8009fba:	f1b8 0f00 	cmp.w	r8, #0
 8009fbe:	d00a      	beq.n	8009fd6 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xd6>
 8009fc0:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8009fc4:	b13b      	cbz	r3, 8009fd6 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xd6>
 8009fc6:	2110      	movs	r1, #16
 8009fc8:	4620      	mov	r0, r4
 8009fca:	f844 9c04 	str.w	r9, [r4, #-4]
 8009fce:	f7ff fcb3 	bl	8009938 <memset.constprop.0.isra.0>
 8009fd2:	f884 9019 	strb.w	r9, [r4, #25]
 8009fd6:	f895 a4f5 	ldrb.w	sl, [r5, #1269]	; 0x4f5
 8009fda:	f1ba 0f00 	cmp.w	sl, #0
 8009fde:	d10e      	bne.n	8009ffe <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xfe>
 8009fe0:	6868      	ldr	r0, [r5, #4]
 8009fe2:	4631      	mov	r1, r6
 8009fe4:	6803      	ldr	r3, [r0, #0]
 8009fe6:	68db      	ldr	r3, [r3, #12]
 8009fe8:	4798      	blx	r3
 8009fea:	f7ff fcb7 	bl	800995c <lightset::Data::Get()>
 8009fee:	fb0b 0006 	mla	r0, fp, r6, r0
 8009ff2:	f8c0 a600 	str.w	sl, [r0, #1536]	; 0x600
 8009ff6:	f884 a018 	strb.w	sl, [r4, #24]
 8009ffa:	f884 a01a 	strb.w	sl, [r4, #26]
 8009ffe:	3601      	adds	r6, #1
 800a000:	2e20      	cmp	r6, #32
 800a002:	f104 0444 	add.w	r4, r4, #68	; 0x44
 800a006:	d1c9      	bne.n	8009f9c <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x9c>
 800a008:	e7b5      	b.n	8009f76 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x76>
 800a00a:	bf00      	nop
 800a00c:	2001ce34 	andcs	ip, r1, r4, lsr lr

0800a010 <E131Bridge::HandleDmx()>:
 800a010:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a014:	4604      	mov	r4, r0
 800a016:	2600      	movs	r6, #0
 800a018:	f8b0 70f7 	ldrh.w	r7, [r0, #247]	; 0xf7
 800a01c:	f100 09fa 	add.w	r9, r0, #250	; 0xfa
 800a020:	ba7f      	rev16	r7, r7
 800a022:	b2bf      	uxth	r7, r7
 800a024:	3f01      	subs	r7, #1
 800a026:	f200 551c 	addw	r5, r0, #1308	; 0x51c
 800a02a:	f815 3c0a 	ldrb.w	r3, [r5, #-10]
 800a02e:	b353      	cbz	r3, 800a086 <E131Bridge::HandleDmx()+0x76>
 800a030:	f835 3c0c 	ldrh.w	r3, [r5, #-12]
 800a034:	f8b4 20ed 	ldrh.w	r2, [r4, #237]	; 0xed
 800a038:	ba5b      	rev16	r3, r3
 800a03a:	b29b      	uxth	r3, r3
 800a03c:	429a      	cmp	r2, r3
 800a03e:	d122      	bne.n	800a086 <E131Bridge::HandleDmx()+0x76>
 800a040:	f855 3c04 	ldr.w	r3, [r5, #-4]
 800a044:	f1a5 0108 	sub.w	r1, r5, #8
 800a048:	4620      	mov	r0, r4
 800a04a:	9300      	str	r3, [sp, #0]
 800a04c:	f7ff ff42 	bl	8009ed4 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const>
 800a050:	f105 0114 	add.w	r1, r5, #20
 800a054:	4682      	mov	sl, r0
 800a056:	4620      	mov	r0, r4
 800a058:	f7ff ff3c 	bl	8009ed4 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const>
 800a05c:	f8d5 b018 	ldr.w	fp, [r5, #24]
 800a060:	4680      	mov	r8, r0
 800a062:	f1ba 0f00 	cmp.w	sl, #0
 800a066:	d016      	beq.n	800a096 <E131Bridge::HandleDmx()+0x86>
 800a068:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800a06c:	7c2a      	ldrb	r2, [r5, #16]
 800a06e:	742b      	strb	r3, [r5, #16]
 800a070:	3313      	adds	r3, #19
 800a072:	1a9b      	subs	r3, r3, r2
 800a074:	b2db      	uxtb	r3, r3
 800a076:	2b13      	cmp	r3, #19
 800a078:	d905      	bls.n	800a086 <E131Bridge::HandleDmx()+0x76>
 800a07a:	f994 20ec 	ldrsb.w	r2, [r4, #236]	; 0xec
 800a07e:	f894 30ec 	ldrb.w	r3, [r4, #236]	; 0xec
 800a082:	2a00      	cmp	r2, #0
 800a084:	da10      	bge.n	800a0a8 <E131Bridge::HandleDmx()+0x98>
 800a086:	3601      	adds	r6, #1
 800a088:	2e20      	cmp	r6, #32
 800a08a:	f105 0544 	add.w	r5, r5, #68	; 0x44
 800a08e:	d1cc      	bne.n	800a02a <E131Bridge::HandleDmx()+0x1a>
 800a090:	b003      	add	sp, #12
 800a092:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a096:	2800      	cmp	r0, #0
 800a098:	d0ef      	beq.n	800a07a <E131Bridge::HandleDmx()+0x6a>
 800a09a:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800a09e:	f895 202c 	ldrb.w	r2, [r5, #44]	; 0x2c
 800a0a2:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
 800a0a6:	e7e3      	b.n	800a070 <E131Bridge::HandleDmx()+0x60>
 800a0a8:	065a      	lsls	r2, r3, #25
 800a0aa:	d50b      	bpl.n	800a0c4 <E131Bridge::HandleDmx()+0xb4>
 800a0ac:	f1ba 0f00 	cmp.w	sl, #0
 800a0b0:	d102      	bne.n	800a0b8 <E131Bridge::HandleDmx()+0xa8>
 800a0b2:	f1b8 0f00 	cmp.w	r8, #0
 800a0b6:	d0e6      	beq.n	800a086 <E131Bridge::HandleDmx()+0x76>
 800a0b8:	4642      	mov	r2, r8
 800a0ba:	4651      	mov	r1, sl
 800a0bc:	4620      	mov	r0, r4
 800a0be:	f7ff ff1f 	bl	8009f00 <E131Bridge::SetNetworkDataLossCondition(bool, bool)>
 800a0c2:	e7e0      	b.n	800a086 <E131Bridge::HandleDmx()+0x76>
 800a0c4:	f894 34f5 	ldrb.w	r3, [r4, #1269]	; 0x4f5
 800a0c8:	b133      	cbz	r3, 800a0d8 <E131Bridge::HandleDmx()+0xc8>
 800a0ca:	f894 34fa 	ldrb.w	r3, [r4, #1274]	; 0x4fa
 800a0ce:	b91b      	cbnz	r3, 800a0d8 <E131Bridge::HandleDmx()+0xc8>
 800a0d0:	4631      	mov	r1, r6
 800a0d2:	4620      	mov	r0, r4
 800a0d4:	f7ff fe98 	bl	8009e08 <E131Bridge::CheckMergeTimeouts(unsigned int)>
 800a0d8:	f894 30e8 	ldrb.w	r3, [r4, #232]	; 0xe8
 800a0dc:	f894 250c 	ldrb.w	r2, [r4, #1292]	; 0x50c
 800a0e0:	4293      	cmp	r3, r2
 800a0e2:	d259      	bcs.n	800a198 <E131Bridge::HandleDmx()+0x188>
 800a0e4:	4631      	mov	r1, r6
 800a0e6:	4620      	mov	r0, r4
 800a0e8:	9301      	str	r3, [sp, #4]
 800a0ea:	f7ff fece 	bl	8009e8a <E131Bridge::IsPriorityTimeOut(unsigned int) const>
 800a0ee:	2800      	cmp	r0, #0
 800a0f0:	d0c9      	beq.n	800a086 <E131Bridge::HandleDmx()+0x76>
 800a0f2:	9b01      	ldr	r3, [sp, #4]
 800a0f4:	f884 350c 	strb.w	r3, [r4, #1292]	; 0x50c
 800a0f8:	9b00      	ldr	r3, [sp, #0]
 800a0fa:	2b00      	cmp	r3, #0
 800a0fc:	d154      	bne.n	800a1a8 <E131Bridge::HandleDmx()+0x198>
 800a0fe:	f1bb 0f00 	cmp.w	fp, #0
 800a102:	d15c      	bne.n	800a1be <E131Bridge::HandleDmx()+0x1ae>
 800a104:	6fa3      	ldr	r3, [r4, #120]	; 0x78
 800a106:	2210      	movs	r2, #16
 800a108:	f845 3c04 	str.w	r3, [r5, #-4]
 800a10c:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800a110:	4628      	mov	r0, r5
 800a112:	742b      	strb	r3, [r5, #16]
 800a114:	f104 0192 	add.w	r1, r4, #146	; 0x92
 800a118:	f7ff fc16 	bl	8009948 <memcpy.isra.0>
 800a11c:	68e3      	ldr	r3, [r4, #12]
 800a11e:	463a      	mov	r2, r7
 800a120:	4649      	mov	r1, r9
 800a122:	4630      	mov	r0, r6
 800a124:	f845 3c08 	str.w	r3, [r5, #-8]
 800a128:	f7ff fc24 	bl	8009974 <lightset::Data::SetSourceA(unsigned int, unsigned char const*, unsigned int)>
 800a12c:	f894 30ec 	ldrb.w	r3, [r4, #236]	; 0xec
 800a130:	069b      	lsls	r3, r3, #26
 800a132:	f100 80ad 	bmi.w	800a290 <E131Bridge::HandleDmx()+0x280>
 800a136:	f8b4 30e9 	ldrh.w	r3, [r4, #233]	; 0xe9
 800a13a:	b29a      	uxth	r2, r3
 800a13c:	2a00      	cmp	r2, #0
 800a13e:	f000 80ab 	beq.w	800a298 <E131Bridge::HandleDmx()+0x288>
 800a142:	f894 24f7 	ldrb.w	r2, [r4, #1271]	; 0x4f7
 800a146:	2a00      	cmp	r2, #0
 800a148:	f040 80a6 	bne.w	800a298 <E131Bridge::HandleDmx()+0x288>
 800a14c:	ba5b      	rev16	r3, r3
 800a14e:	b29b      	uxth	r3, r3
 800a150:	f1ba 0f00 	cmp.w	sl, #0
 800a154:	f040 8099 	bne.w	800a28a <E131Bridge::HandleDmx()+0x27a>
 800a158:	f1b8 0f00 	cmp.w	r8, #0
 800a15c:	f040 8095 	bne.w	800a28a <E131Bridge::HandleDmx()+0x27a>
 800a160:	69aa      	ldr	r2, [r5, #24]
 800a162:	f855 1c04 	ldr.w	r1, [r5, #-4]
 800a166:	3a00      	subs	r2, #0
 800a168:	bf18      	it	ne
 800a16a:	2201      	movne	r2, #1
 800a16c:	3900      	subs	r1, #0
 800a16e:	bf18      	it	ne
 800a170:	2101      	movne	r1, #1
 800a172:	4620      	mov	r0, r4
 800a174:	f7ff fd84 	bl	8009c80 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)>
 800a178:	f240 1301 	movw	r3, #257	; 0x101
 800a17c:	f8a4 34f6 	strh.w	r3, [r4, #1270]	; 0x4f6
 800a180:	f894 34fb 	ldrb.w	r3, [r4, #1275]	; 0x4fb
 800a184:	2b00      	cmp	r3, #0
 800a186:	f040 808c 	bne.w	800a2a2 <E131Bridge::HandleDmx()+0x292>
 800a18a:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800a18e:	f043 0302 	orr.w	r3, r3, #2
 800a192:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 800a196:	e776      	b.n	800a086 <E131Bridge::HandleDmx()+0x76>
 800a198:	d9ae      	bls.n	800a0f8 <E131Bridge::HandleDmx()+0xe8>
 800a19a:	2200      	movs	r2, #0
 800a19c:	f845 2c04 	str.w	r2, [r5, #-4]
 800a1a0:	61aa      	str	r2, [r5, #24]
 800a1a2:	f884 24f5 	strb.w	r2, [r4, #1269]	; 0x4f5
 800a1a6:	e7a5      	b.n	800a0f4 <E131Bridge::HandleDmx()+0xe4>
 800a1a8:	f1ba 0f00 	cmp.w	sl, #0
 800a1ac:	f000 8092 	beq.w	800a2d4 <E131Bridge::HandleDmx()+0x2c4>
 800a1b0:	f1bb 0f00 	cmp.w	fp, #0
 800a1b4:	d15c      	bne.n	800a270 <E131Bridge::HandleDmx()+0x260>
 800a1b6:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800a1ba:	742b      	strb	r3, [r5, #16]
 800a1bc:	e7ae      	b.n	800a11c <E131Bridge::HandleDmx()+0x10c>
 800a1be:	f1b8 0f00 	cmp.w	r8, #0
 800a1c2:	d03b      	beq.n	800a23c <E131Bridge::HandleDmx()+0x22c>
 800a1c4:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800a1c8:	f240 6b04 	movw	fp, #1540	; 0x604
 800a1cc:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
 800a1d0:	68e3      	ldr	r3, [r4, #12]
 800a1d2:	fb0b fb06 	mul.w	fp, fp, r6
 800a1d6:	616b      	str	r3, [r5, #20]
 800a1d8:	f7ff fbc0 	bl	800995c <lightset::Data::Get()>
 800a1dc:	4603      	mov	r3, r0
 800a1de:	f50b 7000 	add.w	r0, fp, #512	; 0x200
 800a1e2:	463a      	mov	r2, r7
 800a1e4:	4649      	mov	r1, r9
 800a1e6:	4418      	add	r0, r3
 800a1e8:	9300      	str	r3, [sp, #0]
 800a1ea:	f7ff fbad 	bl	8009948 <memcpy.isra.0>
 800a1ee:	9b00      	ldr	r3, [sp, #0]
 800a1f0:	f50b 6080 	add.w	r0, fp, #1024	; 0x400
 800a1f4:	eb03 020b 	add.w	r2, r3, fp
 800a1f8:	f8c2 7600 	str.w	r7, [r2, #1536]	; 0x600
 800a1fc:	4649      	mov	r1, r9
 800a1fe:	463a      	mov	r2, r7
 800a200:	4418      	add	r0, r3
 800a202:	f7ff fba1 	bl	8009948 <memcpy.isra.0>
 800a206:	e791      	b.n	800a12c <E131Bridge::HandleDmx()+0x11c>
 800a208:	6fa3      	ldr	r3, [r4, #120]	; 0x78
 800a20a:	2210      	movs	r2, #16
 800a20c:	61ab      	str	r3, [r5, #24]
 800a20e:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800a212:	f104 0192 	add.w	r1, r4, #146	; 0x92
 800a216:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
 800a21a:	f105 001c 	add.w	r0, r5, #28
 800a21e:	f7ff fb93 	bl	8009948 <memcpy.isra.0>
 800a222:	68e3      	ldr	r3, [r4, #12]
 800a224:	4631      	mov	r1, r6
 800a226:	4620      	mov	r0, r4
 800a228:	616b      	str	r3, [r5, #20]
 800a22a:	f7ff fdde 	bl	8009dea <E131Bridge::UpdateMergeStatus(unsigned int)>
 800a22e:	463a      	mov	r2, r7
 800a230:	4649      	mov	r1, r9
 800a232:	4630      	mov	r0, r6
 800a234:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 800a236:	f7ff fbe3 	bl	8009a00 <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>
 800a23a:	e777      	b.n	800a12c <E131Bridge::HandleDmx()+0x11c>
 800a23c:	6fa3      	ldr	r3, [r4, #120]	; 0x78
 800a23e:	2210      	movs	r2, #16
 800a240:	f845 3c04 	str.w	r3, [r5, #-4]
 800a244:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800a248:	4628      	mov	r0, r5
 800a24a:	742b      	strb	r3, [r5, #16]
 800a24c:	f104 0192 	add.w	r1, r4, #146	; 0x92
 800a250:	f7ff fb7a 	bl	8009948 <memcpy.isra.0>
 800a254:	68e3      	ldr	r3, [r4, #12]
 800a256:	4631      	mov	r1, r6
 800a258:	4620      	mov	r0, r4
 800a25a:	f845 3c08 	str.w	r3, [r5, #-8]
 800a25e:	f7ff fdc4 	bl	8009dea <E131Bridge::UpdateMergeStatus(unsigned int)>
 800a262:	463a      	mov	r2, r7
 800a264:	4649      	mov	r1, r9
 800a266:	4630      	mov	r0, r6
 800a268:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 800a26a:	f7ff fba0 	bl	80099ae <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>
 800a26e:	e75d      	b.n	800a12c <E131Bridge::HandleDmx()+0x11c>
 800a270:	f1b8 0f00 	cmp.w	r8, #0
 800a274:	d103      	bne.n	800a27e <E131Bridge::HandleDmx()+0x26e>
 800a276:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800a27a:	742b      	strb	r3, [r5, #16]
 800a27c:	e7ea      	b.n	800a254 <E131Bridge::HandleDmx()+0x244>
 800a27e:	481b      	ldr	r0, [pc, #108]	; (800a2ec <E131Bridge::HandleDmx()+0x2dc>)
 800a280:	b003      	add	sp, #12
 800a282:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a286:	f7ff b97b 	b.w	8009580 <printf>
 800a28a:	4642      	mov	r2, r8
 800a28c:	4651      	mov	r1, sl
 800a28e:	e770      	b.n	800a172 <E131Bridge::HandleDmx()+0x162>
 800a290:	f04f 0300 	mov.w	r3, #0
 800a294:	f884 34f7 	strb.w	r3, [r4, #1271]	; 0x4f7
 800a298:	f894 34f6 	ldrb.w	r3, [r4, #1270]	; 0x4f6
 800a29c:	2b00      	cmp	r3, #0
 800a29e:	f47f af6f 	bne.w	800a180 <E131Bridge::HandleDmx()+0x170>
 800a2a2:	f8d4 8004 	ldr.w	r8, [r4, #4]
 800a2a6:	f7ff fb59 	bl	800995c <lightset::Data::Get()>
 800a2aa:	4632      	mov	r2, r6
 800a2ac:	4641      	mov	r1, r8
 800a2ae:	f7ff fbd1 	bl	8009a54 <lightset::Data::IOutput(LightSet*, unsigned int) const>
 800a2b2:	f895 3036 	ldrb.w	r3, [r5, #54]	; 0x36
 800a2b6:	2b00      	cmp	r3, #0
 800a2b8:	f47f af67 	bne.w	800a18a <E131Bridge::HandleDmx()+0x17a>
 800a2bc:	6860      	ldr	r0, [r4, #4]
 800a2be:	4631      	mov	r1, r6
 800a2c0:	6803      	ldr	r3, [r0, #0]
 800a2c2:	689b      	ldr	r3, [r3, #8]
 800a2c4:	4798      	blx	r3
 800a2c6:	f04f 0301 	mov.w	r3, #1
 800a2ca:	f884 34f8 	strb.w	r3, [r4, #1272]	; 0x4f8
 800a2ce:	f885 3036 	strb.w	r3, [r5, #54]	; 0x36
 800a2d2:	e75a      	b.n	800a18a <E131Bridge::HandleDmx()+0x17a>
 800a2d4:	f1bb 0f00 	cmp.w	fp, #0
 800a2d8:	d096      	beq.n	800a208 <E131Bridge::HandleDmx()+0x1f8>
 800a2da:	f1b8 0f00 	cmp.w	r8, #0
 800a2de:	d0ce      	beq.n	800a27e <E131Bridge::HandleDmx()+0x26e>
 800a2e0:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800a2e4:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
 800a2e8:	e79b      	b.n	800a222 <E131Bridge::HandleDmx()+0x212>
 800a2ea:	bf00      	nop
 800a2ec:	08015950 	stmdaeq	r1, {r4, r6, r8, fp, ip, lr}

0800a2f0 <E131Bridge::IsValidRoot()>:
 800a2f0:	b530      	push	{r4, r5, lr}
 800a2f2:	4a0d      	ldr	r2, [pc, #52]	; (800a328 <E131Bridge::IsValidRoot()+0x38>)
 800a2f4:	f100 0380 	add.w	r3, r0, #128	; 0x80
 800a2f8:	f100 018c 	add.w	r1, r0, #140	; 0x8c
 800a2fc:	4299      	cmp	r1, r3
 800a2fe:	d109      	bne.n	800a314 <E131Bridge::IsValidRoot()+0x24>
 800a300:	f8d0 008e 	ldr.w	r0, [r0, #142]	; 0x8e
 800a304:	f1b0 6f80 	cmp.w	r0, #67108864	; 0x4000000
 800a308:	d00c      	beq.n	800a324 <E131Bridge::IsValidRoot()+0x34>
 800a30a:	f100 4378 	add.w	r3, r0, #4160749568	; 0xf8000000
 800a30e:	4258      	negs	r0, r3
 800a310:	4158      	adcs	r0, r3
 800a312:	bd30      	pop	{r4, r5, pc}
 800a314:	f813 5b01 	ldrb.w	r5, [r3], #1
 800a318:	f812 4b01 	ldrb.w	r4, [r2], #1
 800a31c:	42a5      	cmp	r5, r4
 800a31e:	d0ed      	beq.n	800a2fc <E131Bridge::IsValidRoot()+0xc>
 800a320:	2000      	movs	r0, #0
 800a322:	e7f6      	b.n	800a312 <E131Bridge::IsValidRoot()+0x22>
 800a324:	2001      	movs	r0, #1
 800a326:	e7f4      	b.n	800a312 <E131Bridge::IsValidRoot()+0x22>
 800a328:	08015b34 	stmdaeq	r1, {r2, r4, r5, r8, r9, fp, ip, lr}

0800a32c <E131Bridge::IsValidDataPacket()>:
 800a32c:	f890 30f1 	ldrb.w	r3, [r0, #241]	; 0xf1
 800a330:	2b02      	cmp	r3, #2
 800a332:	d10d      	bne.n	800a350 <E131Bridge::IsValidDataPacket()+0x24>
 800a334:	f890 30f2 	ldrb.w	r3, [r0, #242]	; 0xf2
 800a338:	2ba1      	cmp	r3, #161	; 0xa1
 800a33a:	d109      	bne.n	800a350 <E131Bridge::IsValidDataPacket()+0x24>
 800a33c:	f8b0 30f3 	ldrh.w	r3, [r0, #243]	; 0xf3
 800a340:	b933      	cbnz	r3, 800a350 <E131Bridge::IsValidDataPacket()+0x24>
 800a342:	f8b0 00f5 	ldrh.w	r0, [r0, #245]	; 0xf5
 800a346:	f5a0 7380 	sub.w	r3, r0, #256	; 0x100
 800a34a:	4258      	negs	r0, r3
 800a34c:	4158      	adcs	r0, r3
 800a34e:	4770      	bx	lr
 800a350:	2000      	movs	r0, #0
 800a352:	4770      	bx	lr

0800a354 <E131Bridge::Run()>:
 800a354:	b530      	push	{r4, r5, lr}
 800a356:	4601      	mov	r1, r0
 800a358:	4604      	mov	r4, r0
 800a35a:	b085      	sub	sp, #20
 800a35c:	f10d 030e 	add.w	r3, sp, #14
 800a360:	f811 0b7c 	ldrb.w	r0, [r1], #124
 800a364:	f44f 628f 	mov.w	r2, #1144	; 0x478
 800a368:	9300      	str	r3, [sp, #0]
 800a36a:	f104 0378 	add.w	r3, r4, #120	; 0x78
 800a36e:	f005 ff15 	bl	801019c <udp_recv>
 800a372:	4b3c      	ldr	r3, [pc, #240]	; (800a464 <E131Bridge::Run()+0x110>)
 800a374:	681d      	ldr	r5, [r3, #0]
 800a376:	60e5      	str	r5, [r4, #12]
 800a378:	2800      	cmp	r0, #0
 800a37a:	d13b      	bne.n	800a3f4 <E131Bridge::Run()+0xa0>
 800a37c:	f894 350b 	ldrb.w	r3, [r4, #1291]	; 0x50b
 800a380:	b183      	cbz	r3, 800a3a4 <E131Bridge::Run()+0x50>
 800a382:	f894 24f9 	ldrb.w	r2, [r4, #1273]	; 0x4f9
 800a386:	6923      	ldr	r3, [r4, #16]
 800a388:	bb6a      	cbnz	r2, 800a3e6 <E131Bridge::Run()+0x92>
 800a38a:	1aed      	subs	r5, r5, r3
 800a38c:	f640 13c3 	movw	r3, #2499	; 0x9c3
 800a390:	429d      	cmp	r5, r3
 800a392:	d928      	bls.n	800a3e6 <E131Bridge::Run()+0x92>
 800a394:	6863      	ldr	r3, [r4, #4]
 800a396:	b9eb      	cbnz	r3, 800a3d4 <E131Bridge::Run()+0x80>
 800a398:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800a39c:	f023 0302 	bic.w	r3, r3, #2
 800a3a0:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 800a3a4:	6963      	ldr	r3, [r4, #20]
 800a3a6:	b12b      	cbz	r3, 800a3b4 <E131Bridge::Run()+0x60>
 800a3a8:	4620      	mov	r0, r4
 800a3aa:	f000 f94f 	bl	800a64c <E131Bridge::HandleDmxIn()>
 800a3ae:	4620      	mov	r0, r4
 800a3b0:	f000 f8ca 	bl	800a548 <E131Bridge::SendDiscoveryPacket()>
 800a3b4:	7a23      	ldrb	r3, [r4, #8]
 800a3b6:	b15b      	cbz	r3, 800a3d0 <E131Bridge::Run()+0x7c>
 800a3b8:	4b2b      	ldr	r3, [pc, #172]	; (800a468 <E131Bridge::Run()+0x114>)
 800a3ba:	6818      	ldr	r0, [r3, #0]
 800a3bc:	6843      	ldr	r3, [r0, #4]
 800a3be:	2b04      	cmp	r3, #4
 800a3c0:	d006      	beq.n	800a3d0 <E131Bridge::Run()+0x7c>
 800a3c2:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800a3c6:	2b00      	cmp	r3, #0
 800a3c8:	d049      	beq.n	800a45e <E131Bridge::Run()+0x10a>
 800a3ca:	2103      	movs	r1, #3
 800a3cc:	f008 ff50 	bl	8013270 <LedBlink::SetMode(ledblink::Mode)>
 800a3d0:	b005      	add	sp, #20
 800a3d2:	bd30      	pop	{r4, r5, pc}
 800a3d4:	f894 34f4 	ldrb.w	r3, [r4, #1268]	; 0x4f4
 800a3d8:	2b00      	cmp	r3, #0
 800a3da:	d1dd      	bne.n	800a398 <E131Bridge::Run()+0x44>
 800a3dc:	2201      	movs	r2, #1
 800a3de:	4620      	mov	r0, r4
 800a3e0:	4611      	mov	r1, r2
 800a3e2:	f7ff fd8d 	bl	8009f00 <E131Bridge::SetNetworkDataLossCondition(bool, bool)>
 800a3e6:	e9d4 3203 	ldrd	r3, r2, [r4, #12]
 800a3ea:	1a9b      	subs	r3, r3, r2
 800a3ec:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800a3f0:	d3d8      	bcc.n	800a3a4 <E131Bridge::Run()+0x50>
 800a3f2:	e7d1      	b.n	800a398 <E131Bridge::Run()+0x44>
 800a3f4:	4620      	mov	r0, r4
 800a3f6:	f7ff ff7b 	bl	800a2f0 <E131Bridge::IsValidRoot()>
 800a3fa:	2800      	cmp	r0, #0
 800a3fc:	d0e8      	beq.n	800a3d0 <E131Bridge::Run()+0x7c>
 800a3fe:	2300      	movs	r3, #0
 800a400:	f884 34f4 	strb.w	r3, [r4, #1268]	; 0x4f4
 800a404:	f894 34f6 	ldrb.w	r3, [r4, #1270]	; 0x4f6
 800a408:	6125      	str	r5, [r4, #16]
 800a40a:	b15b      	cbz	r3, 800a424 <E131Bridge::Run()+0xd0>
 800a40c:	f894 34f7 	ldrb.w	r3, [r4, #1271]	; 0x4f7
 800a410:	b943      	cbnz	r3, 800a424 <E131Bridge::Run()+0xd0>
 800a412:	f8d4 24fc 	ldr.w	r2, [r4, #1276]	; 0x4fc
 800a416:	1aad      	subs	r5, r5, r2
 800a418:	f640 12c3 	movw	r2, #2499	; 0x9c3
 800a41c:	4295      	cmp	r5, r2
 800a41e:	bf88      	it	hi
 800a420:	f884 34f6 	strbhi.w	r3, [r4, #1270]	; 0x4f6
 800a424:	6863      	ldr	r3, [r4, #4]
 800a426:	2b00      	cmp	r3, #0
 800a428:	d0bc      	beq.n	800a3a4 <E131Bridge::Run()+0x50>
 800a42a:	f8d4 308e 	ldr.w	r3, [r4, #142]	; 0x8e
 800a42e:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 800a432:	ba1a      	rev	r2, r3
 800a434:	d108      	bne.n	800a448 <E131Bridge::Run()+0xf4>
 800a436:	4620      	mov	r0, r4
 800a438:	f7ff ff78 	bl	800a32c <E131Bridge::IsValidDataPacket()>
 800a43c:	2800      	cmp	r0, #0
 800a43e:	d0b1      	beq.n	800a3a4 <E131Bridge::Run()+0x50>
 800a440:	4620      	mov	r0, r4
 800a442:	f7ff fde5 	bl	800a010 <E131Bridge::HandleDmx()>
 800a446:	e7ad      	b.n	800a3a4 <E131Bridge::Run()+0x50>
 800a448:	2a08      	cmp	r2, #8
 800a44a:	d1ab      	bne.n	800a3a4 <E131Bridge::Run()+0x50>
 800a44c:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800a450:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800a454:	d1a6      	bne.n	800a3a4 <E131Bridge::Run()+0x50>
 800a456:	4620      	mov	r0, r4
 800a458:	f000 f976 	bl	800a748 <E131Bridge::HandleSynchronization()>
 800a45c:	e7a2      	b.n	800a3a4 <E131Bridge::Run()+0x50>
 800a45e:	2102      	movs	r1, #2
 800a460:	e7b4      	b.n	800a3cc <E131Bridge::Run()+0x78>
 800a462:	bf00      	nop
 800a464:	2001ce4c 	andcs	ip, r1, ip, asr #28
 800a468:	2001ce34 	andcs	ip, r1, r4, lsr lr

0800a46c <E131Bridge::FillDiscoveryPacket()>:
 800a46c:	2200      	movs	r2, #0
 800a46e:	f890 350a 	ldrb.w	r3, [r0, #1290]	; 0x50a
 800a472:	b510      	push	{r4, lr}
 800a474:	333c      	adds	r3, #60	; 0x3c
 800a476:	005b      	lsls	r3, r3, #1
 800a478:	f8a0 3504 	strh.w	r3, [r0, #1284]	; 0x504
 800a47c:	69c3      	ldr	r3, [r0, #28]
 800a47e:	f503 618f 	add.w	r1, r3, #1144	; 0x478
 800a482:	428b      	cmp	r3, r1
 800a484:	d14b      	bne.n	800a51e <E131Bridge::FillDiscoveryPacket()+0xb2>
 800a486:	69c3      	ldr	r3, [r0, #28]
 800a488:	492e      	ldr	r1, [pc, #184]	; (800a544 <E131Bridge::FillDiscoveryPacket()+0xd8>)
 800a48a:	701a      	strb	r2, [r3, #0]
 800a48c:	2210      	movs	r2, #16
 800a48e:	705a      	strb	r2, [r3, #1]
 800a490:	1d1a      	adds	r2, r3, #4
 800a492:	3310      	adds	r3, #16
 800a494:	4293      	cmp	r3, r2
 800a496:	d145      	bne.n	800a524 <E131Bridge::FillDiscoveryPacket()+0xb8>
 800a498:	f890 250a 	ldrb.w	r2, [r0, #1290]	; 0x50a
 800a49c:	69c3      	ldr	r3, [r0, #28]
 800a49e:	3234      	adds	r2, #52	; 0x34
 800a4a0:	0052      	lsls	r2, r2, #1
 800a4a2:	f442 42e0 	orr.w	r2, r2, #28672	; 0x7000
 800a4a6:	ba52      	rev16	r2, r2
 800a4a8:	821a      	strh	r2, [r3, #16]
 800a4aa:	2200      	movs	r2, #0
 800a4ac:	749a      	strb	r2, [r3, #18]
 800a4ae:	74da      	strb	r2, [r3, #19]
 800a4b0:	751a      	strb	r2, [r3, #20]
 800a4b2:	2208      	movs	r2, #8
 800a4b4:	f100 0124 	add.w	r1, r0, #36	; 0x24
 800a4b8:	755a      	strb	r2, [r3, #21]
 800a4ba:	3316      	adds	r3, #22
 800a4bc:	f100 0234 	add.w	r2, r0, #52	; 0x34
 800a4c0:	4291      	cmp	r1, r2
 800a4c2:	d134      	bne.n	800a52e <E131Bridge::FillDiscoveryPacket()+0xc2>
 800a4c4:	f890 250a 	ldrb.w	r2, [r0, #1290]	; 0x50a
 800a4c8:	69c3      	ldr	r3, [r0, #28]
 800a4ca:	3229      	adds	r2, #41	; 0x29
 800a4cc:	0052      	lsls	r2, r2, #1
 800a4ce:	f442 42e0 	orr.w	r2, r2, #28672	; 0x7000
 800a4d2:	ba52      	rev16	r2, r2
 800a4d4:	84da      	strh	r2, [r3, #38]	; 0x26
 800a4d6:	2200      	movs	r2, #0
 800a4d8:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 800a4dc:	f883 2029 	strb.w	r2, [r3, #41]	; 0x29
 800a4e0:	f883 202a 	strb.w	r2, [r3, #42]	; 0x2a
 800a4e4:	2202      	movs	r2, #2
 800a4e6:	332c      	adds	r3, #44	; 0x2c
 800a4e8:	f803 2c01 	strb.w	r2, [r3, #-1]
 800a4ec:	f100 0274 	add.w	r2, r0, #116	; 0x74
 800a4f0:	4291      	cmp	r1, r2
 800a4f2:	d121      	bne.n	800a538 <E131Bridge::FillDiscoveryPacket()+0xcc>
 800a4f4:	f890 350a 	ldrb.w	r3, [r0, #1290]	; 0x50a
 800a4f8:	69c2      	ldr	r2, [r0, #28]
 800a4fa:	3304      	adds	r3, #4
 800a4fc:	005b      	lsls	r3, r3, #1
 800a4fe:	f443 43e0 	orr.w	r3, r3, #28672	; 0x7000
 800a502:	ba5b      	rev16	r3, r3
 800a504:	f8a2 3070 	strh.w	r3, [r2, #112]	; 0x70
 800a508:	2300      	movs	r3, #0
 800a50a:	f882 3072 	strb.w	r3, [r2, #114]	; 0x72
 800a50e:	f882 3073 	strb.w	r3, [r2, #115]	; 0x73
 800a512:	f882 3074 	strb.w	r3, [r2, #116]	; 0x74
 800a516:	2301      	movs	r3, #1
 800a518:	f882 3075 	strb.w	r3, [r2, #117]	; 0x75
 800a51c:	bd10      	pop	{r4, pc}
 800a51e:	f803 2b01 	strb.w	r2, [r3], #1
 800a522:	e7ae      	b.n	800a482 <E131Bridge::FillDiscoveryPacket()+0x16>
 800a524:	f811 4b01 	ldrb.w	r4, [r1], #1
 800a528:	f802 4b01 	strb.w	r4, [r2], #1
 800a52c:	e7b2      	b.n	800a494 <E131Bridge::FillDiscoveryPacket()+0x28>
 800a52e:	f811 4b01 	ldrb.w	r4, [r1], #1
 800a532:	f803 4b01 	strb.w	r4, [r3], #1
 800a536:	e7c3      	b.n	800a4c0 <E131Bridge::FillDiscoveryPacket()+0x54>
 800a538:	f811 4b01 	ldrb.w	r4, [r1], #1
 800a53c:	f803 4b01 	strb.w	r4, [r3], #1
 800a540:	e7d6      	b.n	800a4f0 <E131Bridge::FillDiscoveryPacket()+0x84>
 800a542:	bf00      	nop
 800a544:	08015b34 	stmdaeq	r1, {r2, r4, r5, r8, r9, fp, ip, lr}

0800a548 <E131Bridge::SendDiscoveryPacket()>:
 800a548:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800a54a:	f242 710f 	movw	r1, #9999	; 0x270f
 800a54e:	68c2      	ldr	r2, [r0, #12]
 800a550:	f8d0 3500 	ldr.w	r3, [r0, #1280]	; 0x500
 800a554:	4604      	mov	r4, r0
 800a556:	1ad3      	subs	r3, r2, r3
 800a558:	428b      	cmp	r3, r1
 800a55a:	d924      	bls.n	800a5a6 <E131Bridge::SendDiscoveryPacket()+0x5e>
 800a55c:	f890 350a 	ldrb.w	r3, [r0, #1290]	; 0x50a
 800a560:	f8c0 2500 	str.w	r2, [r0, #1280]	; 0x500
 800a564:	b1ab      	cbz	r3, 800a592 <E131Bridge::SendDiscoveryPacket()+0x4a>
 800a566:	2500      	movs	r5, #0
 800a568:	462e      	mov	r6, r5
 800a56a:	2300      	movs	r3, #0
 800a56c:	4629      	mov	r1, r5
 800a56e:	4620      	mov	r0, r4
 800a570:	f10d 020e 	add.w	r2, sp, #14
 800a574:	f7ff fc22 	bl	8009dbc <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 800a578:	b140      	cbz	r0, 800a58c <E131Bridge::SendDiscoveryPacket()+0x44>
 800a57a:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800a57e:	69e2      	ldr	r2, [r4, #28]
 800a580:	f106 013c 	add.w	r1, r6, #60	; 0x3c
 800a584:	ba5b      	rev16	r3, r3
 800a586:	f822 3011 	strh.w	r3, [r2, r1, lsl #1]
 800a58a:	3601      	adds	r6, #1
 800a58c:	3501      	adds	r5, #1
 800a58e:	2d20      	cmp	r5, #32
 800a590:	d1eb      	bne.n	800a56a <E131Bridge::SendDiscoveryPacket()+0x22>
 800a592:	f44f 53ae 	mov.w	r3, #5568	; 0x15c0
 800a596:	f8b4 2504 	ldrh.w	r2, [r4, #1284]	; 0x504
 800a59a:	9300      	str	r3, [sp, #0]
 800a59c:	69e1      	ldr	r1, [r4, #28]
 800a59e:	6a23      	ldr	r3, [r4, #32]
 800a5a0:	7820      	ldrb	r0, [r4, #0]
 800a5a2:	f005 fe57 	bl	8010254 <udp_send>
 800a5a6:	b004      	add	sp, #16
 800a5a8:	bd70      	pop	{r4, r5, r6, pc}

0800a5aa <memcpy.isra.0>:
 800a5aa:	3801      	subs	r0, #1
 800a5ac:	440a      	add	r2, r1
 800a5ae:	4291      	cmp	r1, r2
 800a5b0:	d100      	bne.n	800a5b4 <memcpy.isra.0+0xa>
 800a5b2:	4770      	bx	lr
 800a5b4:	f811 3b01 	ldrb.w	r3, [r1], #1
 800a5b8:	f800 3f01 	strb.w	r3, [r0, #1]!
 800a5bc:	e7f7      	b.n	800a5ae <memcpy.isra.0+0x4>
	...

0800a5c0 <E131Bridge::FillDataPacket()>:
 800a5c0:	b570      	push	{r4, r5, r6, lr}
 800a5c2:	2400      	movs	r4, #0
 800a5c4:	2610      	movs	r6, #16
 800a5c6:	4605      	mov	r5, r0
 800a5c8:	6980      	ldr	r0, [r0, #24]
 800a5ca:	220c      	movs	r2, #12
 800a5cc:	7046      	strb	r6, [r0, #1]
 800a5ce:	7004      	strb	r4, [r0, #0]
 800a5d0:	7084      	strb	r4, [r0, #2]
 800a5d2:	70c4      	strb	r4, [r0, #3]
 800a5d4:	491c      	ldr	r1, [pc, #112]	; (800a648 <E131Bridge::FillDataPacket()+0x88>)
 800a5d6:	3004      	adds	r0, #4
 800a5d8:	f7ff ffe7 	bl	800a5aa <memcpy.isra.0>
 800a5dc:	2304      	movs	r3, #4
 800a5de:	4632      	mov	r2, r6
 800a5e0:	2602      	movs	r6, #2
 800a5e2:	69a8      	ldr	r0, [r5, #24]
 800a5e4:	f105 0124 	add.w	r1, r5, #36	; 0x24
 800a5e8:	7543      	strb	r3, [r0, #21]
 800a5ea:	7484      	strb	r4, [r0, #18]
 800a5ec:	74c4      	strb	r4, [r0, #19]
 800a5ee:	7504      	strb	r4, [r0, #20]
 800a5f0:	3016      	adds	r0, #22
 800a5f2:	f7ff ffda 	bl	800a5aa <memcpy.isra.0>
 800a5f6:	69a8      	ldr	r0, [r5, #24]
 800a5f8:	2240      	movs	r2, #64	; 0x40
 800a5fa:	f880 4028 	strb.w	r4, [r0, #40]	; 0x28
 800a5fe:	f880 4029 	strb.w	r4, [r0, #41]	; 0x29
 800a602:	f880 402a 	strb.w	r4, [r0, #42]	; 0x2a
 800a606:	f880 602b 	strb.w	r6, [r0, #43]	; 0x2b
 800a60a:	f105 0134 	add.w	r1, r5, #52	; 0x34
 800a60e:	302c      	adds	r0, #44	; 0x2c
 800a610:	f7ff ffcb 	bl	800a5aa <memcpy.isra.0>
 800a614:	22a1      	movs	r2, #161	; 0xa1
 800a616:	69ab      	ldr	r3, [r5, #24]
 800a618:	f883 4070 	strb.w	r4, [r3, #112]	; 0x70
 800a61c:	f883 406d 	strb.w	r4, [r3, #109]	; 0x6d
 800a620:	f883 406e 	strb.w	r4, [r3, #110]	; 0x6e
 800a624:	69ab      	ldr	r3, [r5, #24]
 800a626:	f883 6075 	strb.w	r6, [r3, #117]	; 0x75
 800a62a:	69ab      	ldr	r3, [r5, #24]
 800a62c:	f883 2076 	strb.w	r2, [r3, #118]	; 0x76
 800a630:	2201      	movs	r2, #1
 800a632:	69ab      	ldr	r3, [r5, #24]
 800a634:	f883 4077 	strb.w	r4, [r3, #119]	; 0x77
 800a638:	f883 4078 	strb.w	r4, [r3, #120]	; 0x78
 800a63c:	f883 4079 	strb.w	r4, [r3, #121]	; 0x79
 800a640:	f883 207a 	strb.w	r2, [r3, #122]	; 0x7a
 800a644:	bd70      	pop	{r4, r5, r6, pc}
 800a646:	bf00      	nop
 800a648:	08015b34 	stmdaeq	r1, {r2, r4, r5, r8, r9, fp, ip, lr}

0800a64c <E131Bridge::HandleDmxIn()>:
 800a64c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800a650:	4604      	mov	r4, r0
 800a652:	4605      	mov	r5, r0
 800a654:	2600      	movs	r6, #0
 800a656:	4f3b      	ldr	r7, [pc, #236]	; (800a744 <E131Bridge::HandleDmxIn()+0xf8>)
 800a658:	f895 3d92 	ldrb.w	r3, [r5, #3474]	; 0xd92
 800a65c:	2b00      	cmp	r3, #0
 800a65e:	d058      	beq.n	800a712 <E131Bridge::HandleDmxIn()+0xc6>
 800a660:	6960      	ldr	r0, [r4, #20]
 800a662:	4631      	mov	r1, r6
 800a664:	6803      	ldr	r3, [r0, #0]
 800a666:	aa02      	add	r2, sp, #8
 800a668:	f8d3 8010 	ldr.w	r8, [r3, #16]
 800a66c:	ab03      	add	r3, sp, #12
 800a66e:	47c0      	blx	r8
 800a670:	4601      	mov	r1, r0
 800a672:	2800      	cmp	r0, #0
 800a674:	d055      	beq.n	800a722 <E131Bridge::HandleDmxIn()+0xd6>
 800a676:	9a02      	ldr	r2, [sp, #8]
 800a678:	69a0      	ldr	r0, [r4, #24]
 800a67a:	b293      	uxth	r3, r2
 800a67c:	f103 0c6d 	add.w	ip, r3, #109	; 0x6d
 800a680:	f44c 4ce0 	orr.w	ip, ip, #28672	; 0x7000
 800a684:	fa9c fc9c 	rev16.w	ip, ip
 800a688:	f8a0 c010 	strh.w	ip, [r0, #16]
 800a68c:	f103 0c57 	add.w	ip, r3, #87	; 0x57
 800a690:	f44c 4ce0 	orr.w	ip, ip, #28672	; 0x7000
 800a694:	fa9c fc9c 	rev16.w	ip, ip
 800a698:	f8a0 c026 	strh.w	ip, [r0, #38]	; 0x26
 800a69c:	f895 cd99 	ldrb.w	ip, [r5, #3481]	; 0xd99
 800a6a0:	330a      	adds	r3, #10
 800a6a2:	f880 c06c 	strb.w	ip, [r0, #108]	; 0x6c
 800a6a6:	f895 cd98 	ldrb.w	ip, [r5, #3480]	; 0xd98
 800a6aa:	f443 43e0 	orr.w	r3, r3, #28672	; 0x7000
 800a6ae:	f10c 0001 	add.w	r0, ip, #1
 800a6b2:	f885 0d98 	strb.w	r0, [r5, #3480]	; 0xd98
 800a6b6:	69a0      	ldr	r0, [r4, #24]
 800a6b8:	ba5b      	rev16	r3, r3
 800a6ba:	f880 c06f 	strb.w	ip, [r0, #111]	; 0x6f
 800a6be:	f8b5 cd90 	ldrh.w	ip, [r5, #3472]	; 0xd90
 800a6c2:	69a0      	ldr	r0, [r4, #24]
 800a6c4:	fa9c fc9c 	rev16.w	ip, ip
 800a6c8:	f8a0 c071 	strh.w	ip, [r0, #113]	; 0x71
 800a6cc:	f8a0 3073 	strh.w	r3, [r0, #115]	; 0x73
 800a6d0:	307d      	adds	r0, #125	; 0x7d
 800a6d2:	f7ff ff6a 	bl	800a5aa <memcpy.isra.0>
 800a6d6:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800a6da:	69a1      	ldr	r1, [r4, #24]
 800a6dc:	ba53      	rev16	r3, r2
 800a6de:	f8a1 307b 	strh.w	r3, [r1, #123]	; 0x7b
 800a6e2:	f44f 53ae 	mov.w	r3, #5568	; 0x15c0
 800a6e6:	327d      	adds	r2, #125	; 0x7d
 800a6e8:	9300      	str	r3, [sp, #0]
 800a6ea:	f8d5 3d94 	ldr.w	r3, [r5, #3476]	; 0xd94
 800a6ee:	b292      	uxth	r2, r2
 800a6f0:	7820      	ldrb	r0, [r4, #0]
 800a6f2:	f005 fdaf 	bl	8010254 <udp_send>
 800a6f6:	2301      	movs	r3, #1
 800a6f8:	683a      	ldr	r2, [r7, #0]
 800a6fa:	40b3      	lsls	r3, r6
 800a6fc:	ea33 0102 	bics.w	r1, r3, r2
 800a700:	d007      	beq.n	800a712 <E131Bridge::HandleDmxIn()+0xc6>
 800a702:	4313      	orrs	r3, r2
 800a704:	603b      	str	r3, [r7, #0]
 800a706:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800a70a:	f043 0301 	orr.w	r3, r3, #1
 800a70e:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 800a712:	3601      	adds	r6, #1
 800a714:	2e20      	cmp	r6, #32
 800a716:	f105 050c 	add.w	r5, r5, #12
 800a71a:	d19d      	bne.n	800a658 <E131Bridge::HandleDmxIn()+0xc>
 800a71c:	b004      	add	sp, #16
 800a71e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a722:	9b03      	ldr	r3, [sp, #12]
 800a724:	2b00      	cmp	r3, #0
 800a726:	d1f4      	bne.n	800a712 <E131Bridge::HandleDmxIn()+0xc6>
 800a728:	2201      	movs	r2, #1
 800a72a:	683b      	ldr	r3, [r7, #0]
 800a72c:	40b2      	lsls	r2, r6
 800a72e:	ea23 0302 	bic.w	r3, r3, r2
 800a732:	603b      	str	r3, [r7, #0]
 800a734:	2b00      	cmp	r3, #0
 800a736:	d1ec      	bne.n	800a712 <E131Bridge::HandleDmxIn()+0xc6>
 800a738:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800a73c:	f023 0301 	bic.w	r3, r3, #1
 800a740:	e7e5      	b.n	800a70e <E131Bridge::HandleDmxIn()+0xc2>
 800a742:	bf00      	nop
 800a744:	2000c174 	andcs	ip, r0, r4, ror r1

0800a748 <E131Bridge::HandleSynchronization()>:
 800a748:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a74c:	f8b0 30a9 	ldrh.w	r3, [r0, #169]	; 0xa9
 800a750:	f8b0 2506 	ldrh.w	r2, [r0, #1286]	; 0x506
 800a754:	ba5b      	rev16	r3, r3
 800a756:	b29b      	uxth	r3, r3
 800a758:	429a      	cmp	r2, r3
 800a75a:	4604      	mov	r4, r0
 800a75c:	d00a      	beq.n	800a774 <E131Bridge::HandleSynchronization()+0x2c>
 800a75e:	f8b0 2508 	ldrh.w	r2, [r0, #1288]	; 0x508
 800a762:	429a      	cmp	r2, r3
 800a764:	d006      	beq.n	800a774 <E131Bridge::HandleSynchronization()+0x2c>
 800a766:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a76a:	4b23      	ldr	r3, [pc, #140]	; (800a7f8 <E131Bridge::HandleSynchronization()+0xb0>)
 800a76c:	2102      	movs	r1, #2
 800a76e:	6818      	ldr	r0, [r3, #0]
 800a770:	f008 bd7e 	b.w	8013270 <LedBlink::SetMode(ledblink::Mode)>
 800a774:	2500      	movs	r5, #0
 800a776:	4627      	mov	r7, r4
 800a778:	46a9      	mov	r9, r5
 800a77a:	68e3      	ldr	r3, [r4, #12]
 800a77c:	4e1f      	ldr	r6, [pc, #124]	; (800a7fc <E131Bridge::HandleSynchronization()+0xb4>)
 800a77e:	f8df 8080 	ldr.w	r8, [pc, #128]	; 800a800 <E131Bridge::HandleSynchronization()+0xb8>
 800a782:	f8c4 34fc 	str.w	r3, [r4, #1276]	; 0x4fc
 800a786:	f897 3512 	ldrb.w	r3, [r7, #1298]	; 0x512
 800a78a:	b323      	cbz	r3, 800a7d6 <E131Bridge::HandleSynchronization()+0x8e>
 800a78c:	f8d8 3000 	ldr.w	r3, [r8]
 800a790:	6860      	ldr	r0, [r4, #4]
 800a792:	07da      	lsls	r2, r3, #31
 800a794:	bf5c      	itt	pl
 800a796:	2301      	movpl	r3, #1
 800a798:	f8c8 3000 	strpl.w	r3, [r8]
 800a79c:	6803      	ldr	r3, [r0, #0]
 800a79e:	4629      	mov	r1, r5
 800a7a0:	f8d3 a010 	ldr.w	sl, [r3, #16]
 800a7a4:	f506 6280 	add.w	r2, r6, #1024	; 0x400
 800a7a8:	f8d6 3600 	ldr.w	r3, [r6, #1536]	; 0x600
 800a7ac:	47d0      	blx	sl
 800a7ae:	f897 3552 	ldrb.w	r3, [r7, #1362]	; 0x552
 800a7b2:	b93b      	cbnz	r3, 800a7c4 <E131Bridge::HandleSynchronization()+0x7c>
 800a7b4:	6860      	ldr	r0, [r4, #4]
 800a7b6:	4629      	mov	r1, r5
 800a7b8:	6803      	ldr	r3, [r0, #0]
 800a7ba:	689b      	ldr	r3, [r3, #8]
 800a7bc:	4798      	blx	r3
 800a7be:	2301      	movs	r3, #1
 800a7c0:	f887 3552 	strb.w	r3, [r7, #1362]	; 0x552
 800a7c4:	f8d8 3000 	ldr.w	r3, [r8]
 800a7c8:	f8c6 9600 	str.w	r9, [r6, #1536]	; 0x600
 800a7cc:	07db      	lsls	r3, r3, #31
 800a7ce:	bf5c      	itt	pl
 800a7d0:	2301      	movpl	r3, #1
 800a7d2:	f8c8 3000 	strpl.w	r3, [r8]
 800a7d6:	3501      	adds	r5, #1
 800a7d8:	2d20      	cmp	r5, #32
 800a7da:	f107 0744 	add.w	r7, r7, #68	; 0x44
 800a7de:	f206 6604 	addw	r6, r6, #1540	; 0x604
 800a7e2:	d1d0      	bne.n	800a786 <E131Bridge::HandleSynchronization()+0x3e>
 800a7e4:	6f60      	ldr	r0, [r4, #116]	; 0x74
 800a7e6:	b120      	cbz	r0, 800a7f2 <E131Bridge::HandleSynchronization()+0xaa>
 800a7e8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a7ec:	6803      	ldr	r3, [r0, #0]
 800a7ee:	689b      	ldr	r3, [r3, #8]
 800a7f0:	4718      	bx	r3
 800a7f2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a7f6:	bf00      	nop
 800a7f8:	2001ce34 	andcs	ip, r1, r4, lsr lr
 800a7fc:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 800a800:	200000ec 	andcs	r0, r0, ip, ror #1

0800a804 <E131Bridge::Print()>:
 800a804:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a808:	2500      	movs	r5, #0
 800a80a:	4604      	mov	r4, r0
 800a80c:	b08c      	sub	sp, #48	; 0x30
 800a80e:	a902      	add	r1, sp, #8
 800a810:	3024      	adds	r0, #36	; 0x24
 800a812:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800a816:	f000 fb9d 	bl	800af54 <uuid_unparse>
 800a81a:	482c      	ldr	r0, [pc, #176]	; (800a8cc <E131Bridge::Print()+0xc8>)
 800a81c:	f7fe feb0 	bl	8009580 <printf>
 800a820:	4b2b      	ldr	r3, [pc, #172]	; (800a8d0 <E131Bridge::Print()+0xcc>)
 800a822:	482c      	ldr	r0, [pc, #176]	; (800a8d4 <E131Bridge::Print()+0xd0>)
 800a824:	7819      	ldrb	r1, [r3, #0]
 800a826:	785a      	ldrb	r2, [r3, #1]
 800a828:	f7fe feaa 	bl	8009580 <printf>
 800a82c:	482a      	ldr	r0, [pc, #168]	; (800a8d8 <E131Bridge::Print()+0xd4>)
 800a82e:	a902      	add	r1, sp, #8
 800a830:	f7fe fea6 	bl	8009580 <printf>
 800a834:	f894 350b 	ldrb.w	r3, [r4, #1291]	; 0x50b
 800a838:	b303      	cbz	r3, 800a87c <E131Bridge::Print()+0x78>
 800a83a:	4828      	ldr	r0, [pc, #160]	; (800a8dc <E131Bridge::Print()+0xd8>)
 800a83c:	f7fe fea0 	bl	8009580 <printf>
 800a840:	4e27      	ldr	r6, [pc, #156]	; (800a8e0 <E131Bridge::Print()+0xdc>)
 800a842:	4f28      	ldr	r7, [pc, #160]	; (800a8e4 <E131Bridge::Print()+0xe0>)
 800a844:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 800a8e8 <E131Bridge::Print()+0xe4>
 800a848:	2301      	movs	r3, #1
 800a84a:	4629      	mov	r1, r5
 800a84c:	4620      	mov	r0, r4
 800a84e:	f10d 0206 	add.w	r2, sp, #6
 800a852:	f7ff fab3 	bl	8009dbc <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 800a856:	b170      	cbz	r0, 800a876 <E131Bridge::Print()+0x72>
 800a858:	2344      	movs	r3, #68	; 0x44
 800a85a:	436b      	muls	r3, r5
 800a85c:	f204 524c 	addw	r2, r4, #1356	; 0x54c
 800a860:	58d3      	ldr	r3, [r2, r3]
 800a862:	4629      	mov	r1, r5
 800a864:	2b00      	cmp	r3, #0
 800a866:	bf0c      	ite	eq
 800a868:	4633      	moveq	r3, r6
 800a86a:	463b      	movne	r3, r7
 800a86c:	4640      	mov	r0, r8
 800a86e:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800a872:	f7fe fe85 	bl	8009580 <printf>
 800a876:	3501      	adds	r5, #1
 800a878:	2d20      	cmp	r5, #32
 800a87a:	d1e5      	bne.n	800a848 <E131Bridge::Print()+0x44>
 800a87c:	f894 350a 	ldrb.w	r3, [r4, #1290]	; 0x50a
 800a880:	b1d3      	cbz	r3, 800a8b8 <E131Bridge::Print()+0xb4>
 800a882:	481a      	ldr	r0, [pc, #104]	; (800a8ec <E131Bridge::Print()+0xe8>)
 800a884:	f7fe fe7c 	bl	8009580 <printf>
 800a888:	2500      	movs	r5, #0
 800a88a:	4e19      	ldr	r6, [pc, #100]	; (800a8f0 <E131Bridge::Print()+0xec>)
 800a88c:	2300      	movs	r3, #0
 800a88e:	4629      	mov	r1, r5
 800a890:	4620      	mov	r0, r4
 800a892:	f10d 0206 	add.w	r2, sp, #6
 800a896:	f7ff fa91 	bl	8009dbc <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 800a89a:	b150      	cbz	r0, 800a8b2 <E131Bridge::Print()+0xae>
 800a89c:	230c      	movs	r3, #12
 800a89e:	436b      	muls	r3, r5
 800a8a0:	f604 5299 	addw	r2, r4, #3481	; 0xd99
 800a8a4:	5cd3      	ldrb	r3, [r2, r3]
 800a8a6:	4629      	mov	r1, r5
 800a8a8:	4630      	mov	r0, r6
 800a8aa:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800a8ae:	f7fe fe67 	bl	8009580 <printf>
 800a8b2:	3501      	adds	r5, #1
 800a8b4:	2d20      	cmp	r5, #32
 800a8b6:	d1e9      	bne.n	800a88c <E131Bridge::Print()+0x88>
 800a8b8:	f894 34fb 	ldrb.w	r3, [r4, #1275]	; 0x4fb
 800a8bc:	b113      	cbz	r3, 800a8c4 <E131Bridge::Print()+0xc0>
 800a8be:	480d      	ldr	r0, [pc, #52]	; (800a8f4 <E131Bridge::Print()+0xf0>)
 800a8c0:	f7fe fe5e 	bl	8009580 <printf>
 800a8c4:	b00c      	add	sp, #48	; 0x30
 800a8c6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a8ca:	bf00      	nop
 800a8cc:	08015985 	stmdaeq	r1, {r0, r2, r7, r8, fp, ip, lr}
 800a8d0:	08015b40 	stmdaeq	r1, {r6, r8, r9, fp, ip, lr}
 800a8d4:	0801598d 	stmdaeq	r1, {r0, r2, r3, r7, r8, fp, ip, lr}
 800a8d8:	080159a0 	stmdaeq	r1, {r5, r7, r8, fp, ip, lr}
 800a8dc:	080159b0 	stmdaeq	r1, {r4, r5, r7, r8, fp, ip, lr}
 800a8e0:	0801597d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r8, fp, ip, lr}
 800a8e4:	08015981 	stmdaeq	r1, {r0, r7, r8, fp, ip, lr}
 800a8e8:	080159b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, r8, fp, ip, lr}
 800a8ec:	080159d8 	stmdaeq	r1, {r3, r4, r6, r7, r8, fp, ip, lr}
 800a8f0:	080159e0 	stmdaeq	r1, {r5, r6, r7, r8, fp, ip, lr}
 800a8f4:	080159ff 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r7, r8, fp, ip, lr}

0800a8f8 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>:
 800a8f8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a8fa:	88c6      	ldrh	r6, [r0, #6]
 800a8fc:	8885      	ldrh	r5, [r0, #4]
 800a8fe:	42ae      	cmp	r6, r5
 800a900:	d216      	bcs.n	800a930 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x38>
 800a902:	4604      	mov	r4, r0
 800a904:	6800      	ldr	r0, [r0, #0]
 800a906:	1bad      	subs	r5, r5, r6
 800a908:	4430      	add	r0, r6
 800a90a:	7a26      	ldrb	r6, [r4, #8]
 800a90c:	b923      	cbnz	r3, 800a918 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x20>
 800a90e:	b926      	cbnz	r6, 800a91a <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x22>
 800a910:	9200      	str	r2, [sp, #0]
 800a912:	460b      	mov	r3, r1
 800a914:	4a09      	ldr	r2, [pc, #36]	; (800a93c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x44>)
 800a916:	e003      	b.n	800a920 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800a918:	b166      	cbz	r6, 800a934 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x3c>
 800a91a:	460b      	mov	r3, r1
 800a91c:	9200      	str	r2, [sp, #0]
 800a91e:	4a08      	ldr	r2, [pc, #32]	; (800a940 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x48>)
 800a920:	4629      	mov	r1, r5
 800a922:	f7fe fe55 	bl	80095d0 <snprintf>
 800a926:	4285      	cmp	r5, r0
 800a928:	bfa2      	ittt	ge
 800a92a:	88e3      	ldrhge	r3, [r4, #6]
 800a92c:	181b      	addge	r3, r3, r0
 800a92e:	80e3      	strhge	r3, [r4, #6]
 800a930:	b002      	add	sp, #8
 800a932:	bd70      	pop	{r4, r5, r6, pc}
 800a934:	9200      	str	r2, [sp, #0]
 800a936:	460b      	mov	r3, r1
 800a938:	4a02      	ldr	r2, [pc, #8]	; (800a944 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x4c>)
 800a93a:	e7f1      	b.n	800a920 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800a93c:	08015a62 	stmdaeq	r1, {r1, r5, r6, r9, fp, ip, lr}
 800a940:	08015a57 	stmdaeq	r1, {r0, r1, r2, r4, r6, r9, fp, ip, lr}
 800a944:	08015a63 	stmdaeq	r1, {r0, r1, r5, r6, r9, fp, ip, lr}

0800a948 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>:
 800a948:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800a94a:	460b      	mov	r3, r1
 800a94c:	8885      	ldrh	r5, [r0, #4]
 800a94e:	88c1      	ldrh	r1, [r0, #6]
 800a950:	42a9      	cmp	r1, r5
 800a952:	d214      	bcs.n	800a97e <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x36>
 800a954:	4604      	mov	r4, r0
 800a956:	6800      	ldr	r0, [r0, #0]
 800a958:	1a6d      	subs	r5, r5, r1
 800a95a:	4408      	add	r0, r1
 800a95c:	7a21      	ldrb	r1, [r4, #8]
 800a95e:	b91a      	cbnz	r2, 800a968 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x20>
 800a960:	b919      	cbnz	r1, 800a96a <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x22>
 800a962:	4a0a      	ldr	r2, [pc, #40]	; (800a98c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x44>)
 800a964:	9100      	str	r1, [sp, #0]
 800a966:	e002      	b.n	800a96e <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 800a968:	b159      	cbz	r1, 800a982 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x3a>
 800a96a:	9200      	str	r2, [sp, #0]
 800a96c:	4a08      	ldr	r2, [pc, #32]	; (800a990 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x48>)
 800a96e:	4629      	mov	r1, r5
 800a970:	f7fe fe2e 	bl	80095d0 <snprintf>
 800a974:	4285      	cmp	r5, r0
 800a976:	bfa2      	ittt	ge
 800a978:	88e3      	ldrhge	r3, [r4, #6]
 800a97a:	181b      	addge	r3, r3, r0
 800a97c:	80e3      	strhge	r3, [r4, #6]
 800a97e:	b003      	add	sp, #12
 800a980:	bd30      	pop	{r4, r5, pc}
 800a982:	2201      	movs	r2, #1
 800a984:	9200      	str	r2, [sp, #0]
 800a986:	4a03      	ldr	r2, [pc, #12]	; (800a994 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x4c>)
 800a988:	e7f1      	b.n	800a96e <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 800a98a:	bf00      	nop
 800a98c:	08015a73 	stmdaeq	r1, {r0, r1, r4, r5, r6, r9, fp, ip, lr}
 800a990:	08015a6a 	stmdaeq	r1, {r1, r3, r5, r6, r9, fp, ip, lr}
 800a994:	08015a74 	stmdaeq	r1, {r2, r4, r5, r6, r9, fp, ip, lr}

0800a998 <E131Params::E131Params(E131ParamsStore*)>:
 800a998:	b510      	push	{r4, lr}
 800a99a:	221a      	movs	r2, #26
 800a99c:	4604      	mov	r4, r0
 800a99e:	f840 1b04 	str.w	r1, [r0], #4
 800a9a2:	2100      	movs	r1, #0
 800a9a4:	f008 fe20 	bl	80135e8 <memset>
 800a9a8:	2300      	movs	r3, #0
 800a9aa:	2201      	movs	r2, #1
 800a9ac:	7323      	strb	r3, [r4, #12]
 800a9ae:	72e2      	strb	r2, [r4, #11]
 800a9b0:	73a3      	strb	r3, [r4, #14]
 800a9b2:	2202      	movs	r2, #2
 800a9b4:	7423      	strb	r3, [r4, #16]
 800a9b6:	74a3      	strb	r3, [r4, #18]
 800a9b8:	f246 43ff 	movw	r3, #25855	; 0x64ff
 800a9bc:	7362      	strb	r2, [r4, #13]
 800a9be:	83e3      	strh	r3, [r4, #30]
 800a9c0:	2203      	movs	r2, #3
 800a9c2:	f246 4364 	movw	r3, #25700	; 0x6464
 800a9c6:	73e2      	strb	r2, [r4, #15]
 800a9c8:	8423      	strh	r3, [r4, #32]
 800a9ca:	2204      	movs	r2, #4
 800a9cc:	2364      	movs	r3, #100	; 0x64
 800a9ce:	4620      	mov	r0, r4
 800a9d0:	7462      	strb	r2, [r4, #17]
 800a9d2:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 800a9d6:	bd10      	pop	{r4, pc}

0800a9d8 <E131Params::Load()>:
 800a9d8:	b508      	push	{r3, lr}
 800a9da:	2300      	movs	r3, #0
 800a9dc:	4601      	mov	r1, r0
 800a9de:	6043      	str	r3, [r0, #4]
 800a9e0:	6800      	ldr	r0, [r0, #0]
 800a9e2:	b120      	cbz	r0, 800a9ee <E131Params::Load()+0x16>
 800a9e4:	6803      	ldr	r3, [r0, #0]
 800a9e6:	3104      	adds	r1, #4
 800a9e8:	68db      	ldr	r3, [r3, #12]
 800a9ea:	4798      	blx	r3
 800a9ec:	2001      	movs	r0, #1
 800a9ee:	bd08      	pop	{r3, pc}

0800a9f0 <E131Params::Load(char const*, unsigned int)>:
 800a9f0:	6803      	ldr	r3, [r0, #0]
 800a9f2:	b1d3      	cbz	r3, 800aa2a <E131Params::Load(char const*, unsigned int)+0x3a>
 800a9f4:	2300      	movs	r3, #0
 800a9f6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a9f8:	460d      	mov	r5, r1
 800a9fa:	4616      	mov	r6, r2
 800a9fc:	4604      	mov	r4, r0
 800a9fe:	6043      	str	r3, [r0, #4]
 800aa00:	4602      	mov	r2, r0
 800aa02:	490a      	ldr	r1, [pc, #40]	; (800aa2c <E131Params::Load(char const*, unsigned int)+0x3c>)
 800aa04:	4668      	mov	r0, sp
 800aa06:	f007 ff65 	bl	80128d4 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800aa0a:	4632      	mov	r2, r6
 800aa0c:	4629      	mov	r1, r5
 800aa0e:	4668      	mov	r0, sp
 800aa10:	f007 ff64 	bl	80128dc <ReadConfigFile::Read(char const*, unsigned int)>
 800aa14:	4621      	mov	r1, r4
 800aa16:	f851 0b04 	ldr.w	r0, [r1], #4
 800aa1a:	6803      	ldr	r3, [r0, #0]
 800aa1c:	689b      	ldr	r3, [r3, #8]
 800aa1e:	4798      	blx	r3
 800aa20:	4668      	mov	r0, sp
 800aa22:	f007 ff5a 	bl	80128da <ReadConfigFile::~ReadConfigFile()>
 800aa26:	b002      	add	sp, #8
 800aa28:	bd70      	pop	{r4, r5, r6, pc}
 800aa2a:	4770      	bx	lr
 800aa2c:	0800abf9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, r9, fp, sp, pc}

0800aa30 <E131Params::callbackFunction(char const*)>:
 800aa30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800aa34:	4604      	mov	r4, r0
 800aa36:	460e      	mov	r6, r1
 800aa38:	2500      	movs	r5, #0
 800aa3a:	f8df 91a4 	ldr.w	r9, [pc, #420]	; 800abe0 <E131Params::callbackFunction(char const*)+0x1b0>
 800aa3e:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 800abe4 <E131Params::callbackFunction(char const*)+0x1b4>
 800aa42:	f8df a1a4 	ldr.w	sl, [pc, #420]	; 800abe8 <E131Params::callbackFunction(char const*)+0x1b8>
 800aa46:	f8df b1a4 	ldr.w	fp, [pc, #420]	; 800abec <E131Params::callbackFunction(char const*)+0x1bc>
 800aa4a:	b087      	sub	sp, #28
 800aa4c:	4649      	mov	r1, r9
 800aa4e:	4630      	mov	r0, r6
 800aa50:	f10d 0202 	add.w	r2, sp, #2
 800aa54:	f008 f833 	bl	8012abe <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800aa58:	b9c8      	cbnz	r0, 800aa8e <E131Params::callbackFunction(char const*)+0x5e>
 800aa5a:	f64f 16fe 	movw	r6, #63998	; 0xf9fe
 800aa5e:	2110      	movs	r1, #16
 800aa60:	f8bd 0002 	ldrh.w	r0, [sp, #2]
 800aa64:	6863      	ldr	r3, [r4, #4]
 800aa66:	1e42      	subs	r2, r0, #1
 800aa68:	b292      	uxth	r2, r2
 800aa6a:	42b2      	cmp	r2, r6
 800aa6c:	ea4f 0245 	mov.w	r2, r5, lsl #1
 800aa70:	fa01 f105 	lsl.w	r1, r1, r5
 800aa74:	bf85      	ittet	hi
 800aa76:	1912      	addhi	r2, r2, r4
 800aa78:	3501      	addhi	r5, #1
 800aa7a:	1912      	addls	r2, r2, r4
 800aa7c:	f8a2 500b 	strhhi.w	r5, [r2, #11]
 800aa80:	bf8e      	itee	hi
 800aa82:	438b      	bichi	r3, r1
 800aa84:	f8a2 000b 	strhls.w	r0, [r2, #11]
 800aa88:	430b      	orrls	r3, r1
 800aa8a:	6063      	str	r3, [r4, #4]
 800aa8c:	e02b      	b.n	800aae6 <E131Params::callbackFunction(char const*)+0xb6>
 800aa8e:	2712      	movs	r7, #18
 800aa90:	2303      	movs	r3, #3
 800aa92:	436f      	muls	r7, r5
 800aa94:	9301      	str	r3, [sp, #4]
 800aa96:	4630      	mov	r0, r6
 800aa98:	ab01      	add	r3, sp, #4
 800aa9a:	aa02      	add	r2, sp, #8
 800aa9c:	eb0a 0107 	add.w	r1, sl, r7
 800aaa0:	f007 ff50 	bl	8012944 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800aaa4:	bb10      	cbnz	r0, 800aaec <E131Params::callbackFunction(char const*)+0xbc>
 800aaa6:	f44f 7380 	mov.w	r3, #256	; 0x100
 800aaaa:	f89d 1008 	ldrb.w	r1, [sp, #8]
 800aaae:	40ab      	lsls	r3, r5
 800aab0:	f041 0120 	orr.w	r1, r1, #32
 800aab4:	296c      	cmp	r1, #108	; 0x6c
 800aab6:	6862      	ldr	r2, [r4, #4]
 800aab8:	4425      	add	r5, r4
 800aaba:	d10f      	bne.n	800aadc <E131Params::callbackFunction(char const*)+0xac>
 800aabc:	f89d 1009 	ldrb.w	r1, [sp, #9]
 800aac0:	f041 0120 	orr.w	r1, r1, #32
 800aac4:	2974      	cmp	r1, #116	; 0x74
 800aac6:	d109      	bne.n	800aadc <E131Params::callbackFunction(char const*)+0xac>
 800aac8:	f89d 100a 	ldrb.w	r1, [sp, #10]
 800aacc:	f041 0120 	orr.w	r1, r1, #32
 800aad0:	2970      	cmp	r1, #112	; 0x70
 800aad2:	d103      	bne.n	800aadc <E131Params::callbackFunction(char const*)+0xac>
 800aad4:	2101      	movs	r1, #1
 800aad6:	7529      	strb	r1, [r5, #20]
 800aad8:	4313      	orrs	r3, r2
 800aada:	e7d6      	b.n	800aa8a <E131Params::callbackFunction(char const*)+0x5a>
 800aadc:	2100      	movs	r1, #0
 800aade:	ea22 0203 	bic.w	r2, r2, r3
 800aae2:	7529      	strb	r1, [r5, #20]
 800aae4:	6062      	str	r2, [r4, #4]
 800aae6:	b007      	add	sp, #28
 800aae8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800aaec:	2305      	movs	r3, #5
 800aaee:	4630      	mov	r0, r6
 800aaf0:	9301      	str	r3, [sp, #4]
 800aaf2:	aa02      	add	r2, sp, #8
 800aaf4:	ab01      	add	r3, sp, #4
 800aaf6:	eb0b 0107 	add.w	r1, fp, r7
 800aafa:	f007 ff23 	bl	8012944 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800aafe:	bb40      	cbnz	r0, 800ab52 <E131Params::callbackFunction(char const*)+0x122>
 800ab00:	2201      	movs	r2, #1
 800ab02:	7fa3      	ldrb	r3, [r4, #30]
 800ab04:	40aa      	lsls	r2, r5
 800ab06:	ea23 0302 	bic.w	r3, r3, r2
 800ab0a:	f89d 2008 	ldrb.w	r2, [sp, #8]
 800ab0e:	77a3      	strb	r3, [r4, #30]
 800ab10:	f042 0220 	orr.w	r2, r2, #32
 800ab14:	2a69      	cmp	r2, #105	; 0x69
 800ab16:	d117      	bne.n	800ab48 <E131Params::callbackFunction(char const*)+0x118>
 800ab18:	f89d 2009 	ldrb.w	r2, [sp, #9]
 800ab1c:	f042 0220 	orr.w	r2, r2, #32
 800ab20:	2a6e      	cmp	r2, #110	; 0x6e
 800ab22:	d111      	bne.n	800ab48 <E131Params::callbackFunction(char const*)+0x118>
 800ab24:	f89d 200a 	ldrb.w	r2, [sp, #10]
 800ab28:	f042 0220 	orr.w	r2, r2, #32
 800ab2c:	2a70      	cmp	r2, #112	; 0x70
 800ab2e:	d10b      	bne.n	800ab48 <E131Params::callbackFunction(char const*)+0x118>
 800ab30:	f89d 200b 	ldrb.w	r2, [sp, #11]
 800ab34:	f042 0220 	orr.w	r2, r2, #32
 800ab38:	2a75      	cmp	r2, #117	; 0x75
 800ab3a:	d105      	bne.n	800ab48 <E131Params::callbackFunction(char const*)+0x118>
 800ab3c:	f89d 200c 	ldrb.w	r2, [sp, #12]
 800ab40:	f042 0220 	orr.w	r2, r2, #32
 800ab44:	2a74      	cmp	r2, #116	; 0x74
 800ab46:	d0ce      	beq.n	800aae6 <E131Params::callbackFunction(char const*)+0xb6>
 800ab48:	2201      	movs	r2, #1
 800ab4a:	40aa      	lsls	r2, r5
 800ab4c:	4313      	orrs	r3, r2
 800ab4e:	77a3      	strb	r3, [r4, #30]
 800ab50:	e7c9      	b.n	800aae6 <E131Params::callbackFunction(char const*)+0xb6>
 800ab52:	4641      	mov	r1, r8
 800ab54:	4630      	mov	r0, r6
 800ab56:	f10d 0201 	add.w	r2, sp, #1
 800ab5a:	f007 fff7 	bl	8012b4c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800ab5e:	b998      	cbnz	r0, 800ab88 <E131Params::callbackFunction(char const*)+0x158>
 800ab60:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 800ab64:	f89d 1001 	ldrb.w	r1, [sp, #1]
 800ab68:	40aa      	lsls	r2, r5
 800ab6a:	1e48      	subs	r0, r1, #1
 800ab6c:	b2c0      	uxtb	r0, r0
 800ab6e:	28c7      	cmp	r0, #199	; 0xc7
 800ab70:	6863      	ldr	r3, [r4, #4]
 800ab72:	4425      	add	r5, r4
 800ab74:	d803      	bhi.n	800ab7e <E131Params::callbackFunction(char const*)+0x14e>
 800ab76:	2964      	cmp	r1, #100	; 0x64
 800ab78:	d001      	beq.n	800ab7e <E131Params::callbackFunction(char const*)+0x14e>
 800ab7a:	77e9      	strb	r1, [r5, #31]
 800ab7c:	e7ac      	b.n	800aad8 <E131Params::callbackFunction(char const*)+0xa8>
 800ab7e:	2164      	movs	r1, #100	; 0x64
 800ab80:	ea23 0302 	bic.w	r3, r3, r2
 800ab84:	77e9      	strb	r1, [r5, #31]
 800ab86:	e780      	b.n	800aa8a <E131Params::callbackFunction(char const*)+0x5a>
 800ab88:	3501      	adds	r5, #1
 800ab8a:	2d04      	cmp	r5, #4
 800ab8c:	f109 0910 	add.w	r9, r9, #16
 800ab90:	f108 0812 	add.w	r8, r8, #18
 800ab94:	f47f af5a 	bne.w	800aa4c <E131Params::callbackFunction(char const*)+0x1c>
 800ab98:	4630      	mov	r0, r6
 800ab9a:	4915      	ldr	r1, [pc, #84]	; (800abf0 <E131Params::callbackFunction(char const*)+0x1c0>)
 800ab9c:	f10d 0201 	add.w	r2, sp, #1
 800aba0:	f007 ffd4 	bl	8012b4c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800aba4:	b948      	cbnz	r0, 800abba <E131Params::callbackFunction(char const*)+0x18a>
 800aba6:	f89d 2001 	ldrb.w	r2, [sp, #1]
 800abaa:	6863      	ldr	r3, [r4, #4]
 800abac:	b112      	cbz	r2, 800abb4 <E131Params::callbackFunction(char const*)+0x184>
 800abae:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 800abb2:	e76a      	b.n	800aa8a <E131Params::callbackFunction(char const*)+0x5a>
 800abb4:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800abb8:	e767      	b.n	800aa8a <E131Params::callbackFunction(char const*)+0x5a>
 800abba:	4630      	mov	r0, r6
 800abbc:	490d      	ldr	r1, [pc, #52]	; (800abf4 <E131Params::callbackFunction(char const*)+0x1c4>)
 800abbe:	f10d 0201 	add.w	r2, sp, #1
 800abc2:	f007 ffc3 	bl	8012b4c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800abc6:	2800      	cmp	r0, #0
 800abc8:	d18d      	bne.n	800aae6 <E131Params::callbackFunction(char const*)+0xb6>
 800abca:	f89d 2001 	ldrb.w	r2, [sp, #1]
 800abce:	6863      	ldr	r3, [r4, #4]
 800abd0:	b112      	cbz	r2, 800abd8 <E131Params::callbackFunction(char const*)+0x1a8>
 800abd2:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800abd6:	e758      	b.n	800aa8a <E131Params::callbackFunction(char const*)+0x5a>
 800abd8:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800abdc:	e755      	b.n	800aa8a <E131Params::callbackFunction(char const*)+0x5a>
 800abde:	bf00      	nop
 800abe0:	0801790c 	stmdaeq	r1, {r2, r3, r8, fp, ip, sp, lr}
 800abe4:	08015ae3 	stmdaeq	r1, {r0, r1, r5, r6, r7, r9, fp, ip, lr}
 800abe8:	080179dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r8, fp, ip, sp, lr}
 800abec:	08017a3f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r9, fp, ip, sp, lr}
 800abf0:	08015ac1 	stmdaeq	r1, {r0, r6, r7, r9, fp, ip, lr}
 800abf4:	08015aab 	stmdaeq	r1, {r0, r1, r3, r5, r7, r9, fp, ip, lr}

0800abf8 <E131Params::staticCallbackFunction(void*, char const*)>:
 800abf8:	f7ff bf1a 	b.w	800aa30 <E131Params::callbackFunction(char const*)>

0800abfc <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)>:
 800abfc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ac00:	4604      	mov	r4, r0
 800ac02:	4615      	mov	r5, r2
 800ac04:	461e      	mov	r6, r3
 800ac06:	b087      	sub	sp, #28
 800ac08:	3004      	adds	r0, #4
 800ac0a:	2900      	cmp	r1, #0
 800ac0c:	d045      	beq.n	800ac9a <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x9e>
 800ac0e:	221f      	movs	r2, #31
 800ac10:	f008 fcd3 	bl	80135ba <memmove>
 800ac14:	4633      	mov	r3, r6
 800ac16:	462a      	mov	r2, r5
 800ac18:	4978      	ldr	r1, [pc, #480]	; (800adfc <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x200>)
 800ac1a:	a803      	add	r0, sp, #12
 800ac1c:	f007 fdba 	bl	8012794 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800ac20:	2500      	movs	r5, #0
 800ac22:	4e77      	ldr	r6, [pc, #476]	; (800ae00 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x204>)
 800ac24:	f8df 81dc 	ldr.w	r8, [pc, #476]	; 800ae04 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x208>
 800ac28:	4f77      	ldr	r7, [pc, #476]	; (800ae08 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x20c>)
 800ac2a:	7fa3      	ldrb	r3, [r4, #30]
 800ac2c:	4631      	mov	r1, r6
 800ac2e:	412b      	asrs	r3, r5
 800ac30:	f013 0f01 	tst.w	r3, #1
 800ac34:	ea6f 0303 	mvn.w	r3, r3
 800ac38:	bf0c      	ite	eq
 800ac3a:	4642      	moveq	r2, r8
 800ac3c:	463a      	movne	r2, r7
 800ac3e:	f003 0301 	and.w	r3, r3, #1
 800ac42:	a803      	add	r0, sp, #12
 800ac44:	3501      	adds	r5, #1
 800ac46:	f7ff fe57 	bl	800a8f8 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800ac4a:	2d04      	cmp	r5, #4
 800ac4c:	f106 0612 	add.w	r6, r6, #18
 800ac50:	d1eb      	bne.n	800ac2a <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x2e>
 800ac52:	2600      	movs	r6, #0
 800ac54:	f8df a1b4 	ldr.w	sl, [pc, #436]	; 800ae0c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x210>
 800ac58:	4f6d      	ldr	r7, [pc, #436]	; (800ae10 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x214>)
 800ac5a:	f8df 81b8 	ldr.w	r8, [pc, #440]	; 800ae14 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x218>
 800ac5e:	f8df 91b8 	ldr.w	r9, [pc, #440]	; 800ae18 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x21c>
 800ac62:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 800ac66:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800ac6a:	eb04 0346 	add.w	r3, r4, r6, lsl #1
 800ac6e:	42a9      	cmp	r1, r5
 800ac70:	f8b3 300b 	ldrh.w	r3, [r3, #11]
 800ac74:	f8d4 c004 	ldr.w	ip, [r4, #4]
 800ac78:	d225      	bcs.n	800acc6 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xca>
 800ac7a:	2210      	movs	r2, #16
 800ac7c:	9803      	ldr	r0, [sp, #12]
 800ac7e:	40b2      	lsls	r2, r6
 800ac80:	ea32 0c0c 	bics.w	ip, r2, ip
 800ac84:	4408      	add	r0, r1
 800ac86:	eba5 0501 	sub.w	r5, r5, r1
 800ac8a:	f89d 1014 	ldrb.w	r1, [sp, #20]
 800ac8e:	d00b      	beq.n	800aca8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xac>
 800ac90:	b961      	cbnz	r1, 800acac <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xb0>
 800ac92:	9300      	str	r3, [sp, #0]
 800ac94:	464a      	mov	r2, r9
 800ac96:	4653      	mov	r3, sl
 800ac98:	e00b      	b.n	800acb2 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xb6>
 800ac9a:	6823      	ldr	r3, [r4, #0]
 800ac9c:	4601      	mov	r1, r0
 800ac9e:	681a      	ldr	r2, [r3, #0]
 800aca0:	4618      	mov	r0, r3
 800aca2:	68d2      	ldr	r2, [r2, #12]
 800aca4:	4790      	blx	r2
 800aca6:	e7b5      	b.n	800ac14 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x18>
 800aca8:	2900      	cmp	r1, #0
 800acaa:	d05f      	beq.n	800ad6c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x170>
 800acac:	9300      	str	r3, [sp, #0]
 800acae:	463a      	mov	r2, r7
 800acb0:	4653      	mov	r3, sl
 800acb2:	4629      	mov	r1, r5
 800acb4:	f7fe fc8c 	bl	80095d0 <snprintf>
 800acb8:	4285      	cmp	r5, r0
 800acba:	bfa2      	ittt	ge
 800acbc:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800acc0:	18c0      	addge	r0, r0, r3
 800acc2:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800acc6:	3601      	adds	r6, #1
 800acc8:	2e04      	cmp	r6, #4
 800acca:	f10a 0a10 	add.w	sl, sl, #16
 800acce:	d1c8      	bne.n	800ac62 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x66>
 800acd0:	4952      	ldr	r1, [pc, #328]	; (800ae1c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x220>)
 800acd2:	a803      	add	r0, sp, #12
 800acd4:	f007 fde4 	bl	80128a0 <PropertiesBuilder::AddComment(char const*)>
 800acd8:	2500      	movs	r5, #0
 800acda:	f44f 7a80 	mov.w	sl, #256	; 0x100
 800acde:	4e50      	ldr	r6, [pc, #320]	; (800ae20 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x224>)
 800ace0:	f8df 9140 	ldr.w	r9, [pc, #320]	; 800ae24 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x228>
 800ace4:	f8df 8140 	ldr.w	r8, [pc, #320]	; 800ae28 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x22c>
 800ace8:	f104 0714 	add.w	r7, r4, #20
 800acec:	6861      	ldr	r1, [r4, #4]
 800acee:	fa0a f305 	lsl.w	r3, sl, r5
 800acf2:	f817 2b01 	ldrb.w	r2, [r7], #1
 800acf6:	438b      	bics	r3, r1
 800acf8:	bf0c      	ite	eq
 800acfa:	2301      	moveq	r3, #1
 800acfc:	2300      	movne	r3, #0
 800acfe:	4631      	mov	r1, r6
 800ad00:	2a00      	cmp	r2, #0
 800ad02:	bf0c      	ite	eq
 800ad04:	464a      	moveq	r2, r9
 800ad06:	4642      	movne	r2, r8
 800ad08:	a803      	add	r0, sp, #12
 800ad0a:	3501      	adds	r5, #1
 800ad0c:	f7ff fdf4 	bl	800a8f8 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800ad10:	2d04      	cmp	r5, #4
 800ad12:	f106 0612 	add.w	r6, r6, #18
 800ad16:	d1e9      	bne.n	800acec <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xf0>
 800ad18:	4944      	ldr	r1, [pc, #272]	; (800ae2c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x230>)
 800ad1a:	a803      	add	r0, sp, #12
 800ad1c:	f007 fdc0 	bl	80128a0 <PropertiesBuilder::AddComment(char const*)>
 800ad20:	2600      	movs	r6, #0
 800ad22:	f8df b10c 	ldr.w	fp, [pc, #268]	; 800ae30 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x234>
 800ad26:	f8df 80e8 	ldr.w	r8, [pc, #232]	; 800ae10 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x214>
 800ad2a:	f8df 90e8 	ldr.w	r9, [pc, #232]	; 800ae14 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x218>
 800ad2e:	f8df a0e8 	ldr.w	sl, [pc, #232]	; 800ae18 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x21c>
 800ad32:	f104 071f 	add.w	r7, r4, #31
 800ad36:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 800ad3a:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800ad3e:	f817 3b01 	ldrb.w	r3, [r7], #1
 800ad42:	42a9      	cmp	r1, r5
 800ad44:	f8d4 c004 	ldr.w	ip, [r4, #4]
 800ad48:	d223      	bcs.n	800ad92 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x196>
 800ad4a:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 800ad4e:	9803      	ldr	r0, [sp, #12]
 800ad50:	40b2      	lsls	r2, r6
 800ad52:	ea32 0c0c 	bics.w	ip, r2, ip
 800ad56:	4408      	add	r0, r1
 800ad58:	eba5 0501 	sub.w	r5, r5, r1
 800ad5c:	f89d 1014 	ldrb.w	r1, [sp, #20]
 800ad60:	d008      	beq.n	800ad74 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x178>
 800ad62:	b949      	cbnz	r1, 800ad78 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x17c>
 800ad64:	9300      	str	r3, [sp, #0]
 800ad66:	4652      	mov	r2, sl
 800ad68:	465b      	mov	r3, fp
 800ad6a:	e008      	b.n	800ad7e <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x182>
 800ad6c:	9300      	str	r3, [sp, #0]
 800ad6e:	4642      	mov	r2, r8
 800ad70:	4653      	mov	r3, sl
 800ad72:	e79e      	b.n	800acb2 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xb6>
 800ad74:	2900      	cmp	r1, #0
 800ad76:	d03d      	beq.n	800adf4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1f8>
 800ad78:	9300      	str	r3, [sp, #0]
 800ad7a:	4642      	mov	r2, r8
 800ad7c:	465b      	mov	r3, fp
 800ad7e:	4629      	mov	r1, r5
 800ad80:	f7fe fc26 	bl	80095d0 <snprintf>
 800ad84:	4285      	cmp	r5, r0
 800ad86:	bfa2      	ittt	ge
 800ad88:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800ad8c:	18c0      	addge	r0, r0, r3
 800ad8e:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800ad92:	3601      	adds	r6, #1
 800ad94:	2e04      	cmp	r6, #4
 800ad96:	f10b 0b12 	add.w	fp, fp, #18
 800ad9a:	d1cc      	bne.n	800ad36 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x13a>
 800ad9c:	4925      	ldr	r1, [pc, #148]	; (800ae34 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x238>)
 800ad9e:	a803      	add	r0, sp, #12
 800ada0:	f007 fd7e 	bl	80128a0 <PropertiesBuilder::AddComment(char const*)>
 800ada4:	6862      	ldr	r2, [r4, #4]
 800ada6:	4924      	ldr	r1, [pc, #144]	; (800ae38 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x23c>)
 800ada8:	f3c2 3200 	ubfx	r2, r2, #12, #1
 800adac:	a803      	add	r0, sp, #12
 800adae:	f7ff fdcb 	bl	800a948 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800adb2:	6862      	ldr	r2, [r4, #4]
 800adb4:	4921      	ldr	r1, [pc, #132]	; (800ae3c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x240>)
 800adb6:	f3c2 3240 	ubfx	r2, r2, #13, #1
 800adba:	a803      	add	r0, sp, #12
 800adbc:	f7ff fdc4 	bl	800a948 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800adc0:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800adc4:	b17b      	cbz	r3, 800ade6 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1ea>
 800adc6:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800adca:	9b03      	ldr	r3, [sp, #12]
 800adcc:	4413      	add	r3, r2
 800adce:	227d      	movs	r2, #125	; 0x7d
 800add0:	f803 2c01 	strb.w	r2, [r3, #-1]
 800add4:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800add8:	9903      	ldr	r1, [sp, #12]
 800adda:	54ca      	strb	r2, [r1, r3]
 800addc:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800ade0:	3301      	adds	r3, #1
 800ade2:	f8ad 3012 	strh.w	r3, [sp, #18]
 800ade6:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800adea:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800adec:	601a      	str	r2, [r3, #0]
 800adee:	b007      	add	sp, #28
 800adf0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800adf4:	9300      	str	r3, [sp, #0]
 800adf6:	464a      	mov	r2, r9
 800adf8:	465b      	mov	r3, fp
 800adfa:	e7c0      	b.n	800ad7e <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x182>
 800adfc:	08015b2b 	stmdaeq	r1, {r0, r1, r3, r5, r8, r9, fp, ip, lr}
 800ae00:	08017a3f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r9, fp, ip, sp, lr}
 800ae04:	08015a7b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r9, fp, ip, lr}
 800ae08:	08015a81 	stmdaeq	r1, {r0, r7, r9, fp, ip, lr}
 800ae0c:	0801790c 	stmdaeq	r1, {r2, r3, r8, fp, ip, sp, lr}
 800ae10:	08015a6a 	stmdaeq	r1, {r1, r3, r5, r6, r9, fp, ip, lr}
 800ae14:	08015a74 	stmdaeq	r1, {r2, r4, r5, r6, r9, fp, ip, lr}
 800ae18:	08015a73 	stmdaeq	r1, {r0, r1, r4, r5, r6, r9, fp, ip, lr}
 800ae1c:	08015a90 	stmdaeq	r1, {r4, r7, r9, fp, ip, lr}
 800ae20:	080179dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r8, fp, ip, sp, lr}
 800ae24:	08015a8c 	stmdaeq	r1, {r2, r3, r7, r9, fp, ip, lr}
 800ae28:	08015a88 	stmdaeq	r1, {r3, r7, r9, fp, ip, lr}
 800ae2c:	08015a9b 	stmdaeq	r1, {r0, r1, r3, r4, r7, r9, fp, ip, lr}
 800ae30:	08015ae3 	stmdaeq	r1, {r0, r1, r5, r6, r7, r9, fp, ip, lr}
 800ae34:	08015aa5 	stmdaeq	r1, {r0, r2, r5, r7, r9, fp, ip, lr}
 800ae38:	08015ac1 	stmdaeq	r1, {r0, r6, r7, r9, fp, ip, lr}
 800ae3c:	08015aab 	stmdaeq	r1, {r0, r1, r3, r5, r7, r9, fp, ip, lr}

0800ae40 <E131Params::Save(char*, unsigned int, unsigned int&)>:
 800ae40:	b513      	push	{r0, r1, r4, lr}
 800ae42:	6804      	ldr	r4, [r0, #0]
 800ae44:	b914      	cbnz	r4, 800ae4c <E131Params::Save(char*, unsigned int, unsigned int&)+0xc>
 800ae46:	601c      	str	r4, [r3, #0]
 800ae48:	b002      	add	sp, #8
 800ae4a:	bd10      	pop	{r4, pc}
 800ae4c:	9300      	str	r3, [sp, #0]
 800ae4e:	4613      	mov	r3, r2
 800ae50:	460a      	mov	r2, r1
 800ae52:	2100      	movs	r1, #0
 800ae54:	f7ff fed2 	bl	800abfc <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)>
 800ae58:	e7f6      	b.n	800ae48 <E131Params::Save(char*, unsigned int, unsigned int&)+0x8>

0800ae5a <E131Params::Set(E131Bridge*)>:
 800ae5a:	6843      	ldr	r3, [r0, #4]
 800ae5c:	2b00      	cmp	r3, #0
 800ae5e:	d034      	beq.n	800aeca <E131Params::Set(E131Bridge*)+0x70>
 800ae60:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ae64:	2300      	movs	r3, #0
 800ae66:	f44f 7680 	mov.w	r6, #256	; 0x100
 800ae6a:	f04f 0e44 	mov.w	lr, #68	; 0x44
 800ae6e:	f44f 3780 	mov.w	r7, #65536	; 0x10000
 800ae72:	f100 0214 	add.w	r2, r0, #20
 800ae76:	f201 5c4c 	addw	ip, r1, #1356	; 0x54c
 800ae7a:	6845      	ldr	r5, [r0, #4]
 800ae7c:	fa06 f403 	lsl.w	r4, r6, r3
 800ae80:	43ac      	bics	r4, r5
 800ae82:	bf02      	ittt	eq
 800ae84:	fb0e f403 	muleq.w	r4, lr, r3
 800ae88:	f892 8000 	ldrbeq.w	r8, [r2]
 800ae8c:	f84c 8004 	streq.w	r8, [ip, r4]
 800ae90:	fa07 f403 	lsl.w	r4, r7, r3
 800ae94:	43ac      	bics	r4, r5
 800ae96:	d106      	bne.n	800aea6 <E131Params::Set(E131Bridge*)+0x4c>
 800ae98:	7ad5      	ldrb	r5, [r2, #11]
 800ae9a:	1e6c      	subs	r4, r5, #1
 800ae9c:	b2e4      	uxtb	r4, r4
 800ae9e:	2cc7      	cmp	r4, #199	; 0xc7
 800aea0:	bf98      	it	ls
 800aea2:	f881 5d99 	strbls.w	r5, [r1, #3481]	; 0xd99
 800aea6:	3301      	adds	r3, #1
 800aea8:	2b04      	cmp	r3, #4
 800aeaa:	f102 0201 	add.w	r2, r2, #1
 800aeae:	d1e4      	bne.n	800ae7a <E131Params::Set(E131Bridge*)+0x20>
 800aeb0:	6843      	ldr	r3, [r0, #4]
 800aeb2:	04da      	lsls	r2, r3, #19
 800aeb4:	bf44      	itt	mi
 800aeb6:	2201      	movmi	r2, #1
 800aeb8:	f881 24f9 	strbmi.w	r2, [r1, #1273]	; 0x4f9
 800aebc:	049b      	lsls	r3, r3, #18
 800aebe:	bf44      	itt	mi
 800aec0:	2301      	movmi	r3, #1
 800aec2:	f881 34fa 	strbmi.w	r3, [r1, #1274]	; 0x4fa
 800aec6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800aeca:	4770      	bx	lr

0800aecc <E131Params::Dump()>:
 800aecc:	4770      	bx	lr

0800aece <uuid_unparse_x>:
 800aece:	4603      	mov	r3, r0
 800aed0:	b530      	push	{r4, r5, lr}
 800aed2:	4608      	mov	r0, r1
 800aed4:	4611      	mov	r1, r2
 800aed6:	681a      	ldr	r2, [r3, #0]
 800aed8:	b08f      	sub	sp, #60	; 0x3c
 800aeda:	ba12      	rev	r2, r2
 800aedc:	920a      	str	r2, [sp, #40]	; 0x28
 800aede:	889a      	ldrh	r2, [r3, #4]
 800aee0:	891c      	ldrh	r4, [r3, #8]
 800aee2:	ba52      	rev16	r2, r2
 800aee4:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800aee8:	88da      	ldrh	r2, [r3, #6]
 800aeea:	ba64      	rev16	r4, r4
 800aeec:	ba52      	rev16	r2, r2
 800aeee:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 800aef2:	f8ad 4030 	strh.w	r4, [sp, #48]	; 0x30
 800aef6:	f103 020a 	add.w	r2, r3, #10
 800aefa:	f10d 0432 	add.w	r4, sp, #50	; 0x32
 800aefe:	3310      	adds	r3, #16
 800af00:	4293      	cmp	r3, r2
 800af02:	d122      	bne.n	800af4a <uuid_unparse_x+0x7c>
 800af04:	f89d 2037 	ldrb.w	r2, [sp, #55]	; 0x37
 800af08:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 800af0c:	9208      	str	r2, [sp, #32]
 800af0e:	f89d 2036 	ldrb.w	r2, [sp, #54]	; 0x36
 800af12:	0a1b      	lsrs	r3, r3, #8
 800af14:	9207      	str	r2, [sp, #28]
 800af16:	f89d 2035 	ldrb.w	r2, [sp, #53]	; 0x35
 800af1a:	9301      	str	r3, [sp, #4]
 800af1c:	9206      	str	r2, [sp, #24]
 800af1e:	f89d 2034 	ldrb.w	r2, [sp, #52]	; 0x34
 800af22:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 800af26:	9205      	str	r2, [sp, #20]
 800af28:	f89d 2033 	ldrb.w	r2, [sp, #51]	; 0x33
 800af2c:	9300      	str	r3, [sp, #0]
 800af2e:	9204      	str	r2, [sp, #16]
 800af30:	f89d 2032 	ldrb.w	r2, [sp, #50]	; 0x32
 800af34:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 800af38:	9203      	str	r2, [sp, #12]
 800af3a:	f89d 2030 	ldrb.w	r2, [sp, #48]	; 0x30
 800af3e:	9202      	str	r2, [sp, #8]
 800af40:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800af42:	f7fe fb2d 	bl	80095a0 <sprintf>
 800af46:	b00f      	add	sp, #60	; 0x3c
 800af48:	bd30      	pop	{r4, r5, pc}
 800af4a:	f812 5b01 	ldrb.w	r5, [r2], #1
 800af4e:	f804 5b01 	strb.w	r5, [r4], #1
 800af52:	e7d5      	b.n	800af00 <uuid_unparse_x+0x32>

0800af54 <uuid_unparse>:
 800af54:	4a01      	ldr	r2, [pc, #4]	; (800af5c <uuid_unparse+0x8>)
 800af56:	f7ff bfba 	b.w	800aece <uuid_unparse_x>
 800af5a:	bf00      	nop
 800af5c:	08015b42 	stmdaeq	r1, {r1, r6, r8, r9, fp, ip, lr}

0800af60 <LLRPDevice::~LLRPDevice()>:
 800af60:	4770      	bx	lr

0800af62 <LLRPDevice::CopyUID(unsigned char*)>:
 800af62:	4770      	bx	lr

0800af64 <LLRPDevice::CopyCID(unsigned char*)>:
 800af64:	4770      	bx	lr

0800af66 <LLRPDevice::LLRPHandleRdmCommand(unsigned char const*)>:
 800af66:	2000      	movs	r0, #0
 800af68:	4770      	bx	lr

0800af6a <LLRPDevice::~LLRPDevice()>:
 800af6a:	b510      	push	{r4, lr}
 800af6c:	4604      	mov	r4, r0
 800af6e:	f008 fa61 	bl	8013434 <operator delete(void*)>
 800af72:	4620      	mov	r0, r4
 800af74:	bd10      	pop	{r4, pc}

0800af76 <memcpy.isra.0>:
 800af76:	3801      	subs	r0, #1
 800af78:	440a      	add	r2, r1
 800af7a:	4291      	cmp	r1, r2
 800af7c:	d100      	bne.n	800af80 <memcpy.isra.0+0xa>
 800af7e:	4770      	bx	lr
 800af80:	f811 3b01 	ldrb.w	r3, [r1], #1
 800af84:	f800 3f01 	strb.w	r3, [r0, #1]!
 800af88:	e7f7      	b.n	800af7a <memcpy.isra.0+0x4>
	...

0800af8c <LLRPDevice::LLRPDevice()>:
 800af8c:	b513      	push	{r0, r1, r4, lr}
 800af8e:	4604      	mov	r4, r0
 800af90:	4b09      	ldr	r3, [pc, #36]	; (800afb8 <LLRPDevice::LLRPDevice()+0x2c>)
 800af92:	a901      	add	r1, sp, #4
 800af94:	6003      	str	r3, [r0, #0]
 800af96:	4809      	ldr	r0, [pc, #36]	; (800afbc <LLRPDevice::LLRPDevice()+0x30>)
 800af98:	f008 fa54 	bl	8013444 <inet_aton>
 800af9c:	9a01      	ldr	r2, [sp, #4]
 800af9e:	4b08      	ldr	r3, [pc, #32]	; (800afc0 <LLRPDevice::LLRPDevice()+0x34>)
 800afa0:	a901      	add	r1, sp, #4
 800afa2:	4808      	ldr	r0, [pc, #32]	; (800afc4 <LLRPDevice::LLRPDevice()+0x38>)
 800afa4:	601a      	str	r2, [r3, #0]
 800afa6:	f008 fa4d 	bl	8013444 <inet_aton>
 800afaa:	4620      	mov	r0, r4
 800afac:	4b06      	ldr	r3, [pc, #24]	; (800afc8 <LLRPDevice::LLRPDevice()+0x3c>)
 800afae:	9a01      	ldr	r2, [sp, #4]
 800afb0:	601a      	str	r2, [r3, #0]
 800afb2:	b002      	add	sp, #8
 800afb4:	bd10      	pop	{r4, pc}
 800afb6:	bf00      	nop
 800afb8:	08015c24 	stmdaeq	r1, {r2, r5, sl, fp, ip, lr}
 800afbc:	08015b73 	stmdaeq	r1, {r0, r1, r4, r5, r6, r8, r9, fp, ip, lr}
 800afc0:	2000c17c 	andcs	ip, r0, ip, ror r1
 800afc4:	08015b83 	stmdaeq	r1, {r0, r1, r7, r8, r9, fp, ip, lr}
 800afc8:	2000c180 	andcs	ip, r0, r0, lsl #3

0800afcc <LLRPDevice::HandleRequestMessage()>:
 800afcc:	b570      	push	{r4, r5, r6, lr}
 800afce:	4b23      	ldr	r3, [pc, #140]	; (800b05c <LLRPDevice::HandleRequestMessage()+0x90>)
 800afd0:	b086      	sub	sp, #24
 800afd2:	681c      	ldr	r4, [r3, #0]
 800afd4:	4605      	mov	r5, r0
 800afd6:	f104 0617 	add.w	r6, r4, #23
 800afda:	2210      	movs	r2, #16
 800afdc:	4631      	mov	r1, r6
 800afde:	a802      	add	r0, sp, #8
 800afe0:	f7ff ffc9 	bl	800af76 <memcpy.isra.0>
 800afe4:	2343      	movs	r3, #67	; 0x43
 800afe6:	74a3      	strb	r3, [r4, #18]
 800afe8:	682b      	ldr	r3, [r5, #0]
 800afea:	4631      	mov	r1, r6
 800afec:	4628      	mov	r0, r5
 800afee:	68db      	ldr	r3, [r3, #12]
 800aff0:	4798      	blx	r3
 800aff2:	232c      	movs	r3, #44	; 0x2c
 800aff4:	f884 3029 	strb.w	r3, [r4, #41]	; 0x29
 800aff8:	2300      	movs	r3, #0
 800affa:	f884 302a 	strb.w	r3, [r4, #42]	; 0x2a
 800affe:	f884 302b 	strb.w	r3, [r4, #43]	; 0x2b
 800b002:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 800b006:	2302      	movs	r3, #2
 800b008:	2210      	movs	r2, #16
 800b00a:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 800b00e:	a902      	add	r1, sp, #8
 800b010:	f104 002e 	add.w	r0, r4, #46	; 0x2e
 800b014:	f7ff ffaf 	bl	800af76 <memcpy.isra.0>
 800b018:	2311      	movs	r3, #17
 800b01a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800b01e:	2301      	movs	r3, #1
 800b020:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800b024:	682b      	ldr	r3, [r5, #0]
 800b026:	4628      	mov	r0, r5
 800b028:	f104 0146 	add.w	r1, r4, #70	; 0x46
 800b02c:	689b      	ldr	r3, [r3, #8]
 800b02e:	4798      	blx	r3
 800b030:	4b0b      	ldr	r3, [pc, #44]	; (800b060 <LLRPDevice::HandleRequestMessage()+0x94>)
 800b032:	f104 014c 	add.w	r1, r4, #76	; 0x4c
 800b036:	6818      	ldr	r0, [r3, #0]
 800b038:	f005 fdd8 	bl	8010bec <Network::MacAddressCopyTo(unsigned char*)>
 800b03c:	23ff      	movs	r3, #255	; 0xff
 800b03e:	f884 3052 	strb.w	r3, [r4, #82]	; 0x52
 800b042:	f241 53c1 	movw	r3, #5569	; 0x15c1
 800b046:	4807      	ldr	r0, [pc, #28]	; (800b064 <LLRPDevice::HandleRequestMessage()+0x98>)
 800b048:	9300      	str	r3, [sp, #0]
 800b04a:	4b07      	ldr	r3, [pc, #28]	; (800b068 <LLRPDevice::HandleRequestMessage()+0x9c>)
 800b04c:	2253      	movs	r2, #83	; 0x53
 800b04e:	4621      	mov	r1, r4
 800b050:	681b      	ldr	r3, [r3, #0]
 800b052:	7800      	ldrb	r0, [r0, #0]
 800b054:	f005 f8fe 	bl	8010254 <udp_send>
 800b058:	b006      	add	sp, #24
 800b05a:	bd70      	pop	{r4, r5, r6, pc}
 800b05c:	2000c184 	andcs	ip, r0, r4, lsl #3
 800b060:	2001c710 	andcs	ip, r1, r0, lsl r7
 800b064:	20000000 	andcs	r0, r0, r0
 800b068:	2000c180 	andcs	ip, r0, r0, lsl #3

0800b06c <LLRPDevice::HandleRdmCommand()>:
 800b06c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b070:	4b22      	ldr	r3, [pc, #136]	; (800b0fc <LLRPDevice::HandleRdmCommand()+0x90>)
 800b072:	b086      	sub	sp, #24
 800b074:	681c      	ldr	r4, [r3, #0]
 800b076:	6803      	ldr	r3, [r0, #0]
 800b078:	f104 0946 	add.w	r9, r4, #70	; 0x46
 800b07c:	4649      	mov	r1, r9
 800b07e:	691b      	ldr	r3, [r3, #16]
 800b080:	4607      	mov	r7, r0
 800b082:	4798      	blx	r3
 800b084:	4605      	mov	r5, r0
 800b086:	2800      	cmp	r0, #0
 800b088:	d034      	beq.n	800b0f4 <LLRPDevice::HandleRdmCommand()+0x88>
 800b08a:	7803      	ldrb	r3, [r0, #0]
 800b08c:	2bcc      	cmp	r3, #204	; 0xcc
 800b08e:	d131      	bne.n	800b0f4 <LLRPDevice::HandleRdmCommand()+0x88>
 800b090:	f104 0a17 	add.w	sl, r4, #23
 800b094:	2210      	movs	r2, #16
 800b096:	4651      	mov	r1, sl
 800b098:	a802      	add	r0, sp, #8
 800b09a:	f7ff ff6c 	bl	800af76 <memcpy.isra.0>
 800b09e:	78ae      	ldrb	r6, [r5, #2]
 800b0a0:	4651      	mov	r1, sl
 800b0a2:	f106 0837 	add.w	r8, r6, #55	; 0x37
 800b0a6:	fa5f f888 	uxtb.w	r8, r8
 800b0aa:	f884 8012 	strb.w	r8, [r4, #18]
 800b0ae:	683b      	ldr	r3, [r7, #0]
 800b0b0:	4638      	mov	r0, r7
 800b0b2:	68db      	ldr	r3, [r3, #12]
 800b0b4:	4798      	blx	r3
 800b0b6:	f106 0320 	add.w	r3, r6, #32
 800b0ba:	2210      	movs	r2, #16
 800b0bc:	f884 3029 	strb.w	r3, [r4, #41]	; 0x29
 800b0c0:	a902      	add	r1, sp, #8
 800b0c2:	f104 002e 	add.w	r0, r4, #46	; 0x2e
 800b0c6:	f7ff ff56 	bl	800af76 <memcpy.isra.0>
 800b0ca:	1d73      	adds	r3, r6, #5
 800b0cc:	1c72      	adds	r2, r6, #1
 800b0ce:	4648      	mov	r0, r9
 800b0d0:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800b0d4:	b2d2      	uxtb	r2, r2
 800b0d6:	1c69      	adds	r1, r5, #1
 800b0d8:	f7ff ff4d 	bl	800af76 <memcpy.isra.0>
 800b0dc:	f241 53c1 	movw	r3, #5569	; 0x15c1
 800b0e0:	4807      	ldr	r0, [pc, #28]	; (800b100 <LLRPDevice::HandleRdmCommand()+0x94>)
 800b0e2:	9300      	str	r3, [sp, #0]
 800b0e4:	4b07      	ldr	r3, [pc, #28]	; (800b104 <LLRPDevice::HandleRdmCommand()+0x98>)
 800b0e6:	4621      	mov	r1, r4
 800b0e8:	681b      	ldr	r3, [r3, #0]
 800b0ea:	7800      	ldrb	r0, [r0, #0]
 800b0ec:	f108 0210 	add.w	r2, r8, #16
 800b0f0:	f005 f8b0 	bl	8010254 <udp_send>
 800b0f4:	b006      	add	sp, #24
 800b0f6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800b0fa:	bf00      	nop
 800b0fc:	2000c184 	andcs	ip, r0, r4, lsl #3
 800b100:	20000000 	andcs	r0, r0, r0
 800b104:	2000c180 	andcs	ip, r0, r0, lsl #3

0800b108 <LLRPDevice::Run()>:
 800b108:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b10a:	4604      	mov	r4, r0
 800b10c:	4d0e      	ldr	r5, [pc, #56]	; (800b148 <LLRPDevice::Run()+0x40>)
 800b10e:	480f      	ldr	r0, [pc, #60]	; (800b14c <LLRPDevice::Run()+0x44>)
 800b110:	4629      	mov	r1, r5
 800b112:	4a0f      	ldr	r2, [pc, #60]	; (800b150 <LLRPDevice::Run()+0x48>)
 800b114:	7800      	ldrb	r0, [r0, #0]
 800b116:	f10d 0306 	add.w	r3, sp, #6
 800b11a:	f005 f875 	bl	8010208 <udp_recv2>
 800b11e:	2841      	cmp	r0, #65	; 0x41
 800b120:	d908      	bls.n	800b134 <LLRPDevice::Run()+0x2c>
 800b122:	682b      	ldr	r3, [r5, #0]
 800b124:	f8d3 302a 	ldr.w	r3, [r3, #42]	; 0x2a
 800b128:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800b12c:	ba1a      	rev	r2, r3
 800b12e:	d003      	beq.n	800b138 <LLRPDevice::Run()+0x30>
 800b130:	2a03      	cmp	r2, #3
 800b132:	d005      	beq.n	800b140 <LLRPDevice::Run()+0x38>
 800b134:	b003      	add	sp, #12
 800b136:	bd30      	pop	{r4, r5, pc}
 800b138:	4620      	mov	r0, r4
 800b13a:	f7ff ff47 	bl	800afcc <LLRPDevice::HandleRequestMessage()>
 800b13e:	e7f9      	b.n	800b134 <LLRPDevice::Run()+0x2c>
 800b140:	4620      	mov	r0, r4
 800b142:	f7ff ff93 	bl	800b06c <LLRPDevice::HandleRdmCommand()>
 800b146:	e7f5      	b.n	800b134 <LLRPDevice::Run()+0x2c>
 800b148:	2000c184 	andcs	ip, r0, r4, lsl #3
 800b14c:	20000000 	andcs	r0, r0, r0
 800b150:	2000c178 	andcs	ip, r0, r8, ror r1

0800b154 <LLRPDevice::Print()>:
 800b154:	b507      	push	{r0, r1, r2, lr}
 800b156:	4811      	ldr	r0, [pc, #68]	; (800b19c <LLRPDevice::Print()+0x48>)
 800b158:	f7fe fa12 	bl	8009580 <printf>
 800b15c:	f241 51c1 	movw	r1, #5569	; 0x15c1
 800b160:	480f      	ldr	r0, [pc, #60]	; (800b1a0 <LLRPDevice::Print()+0x4c>)
 800b162:	f7fe fa0d 	bl	8009580 <printf>
 800b166:	4b0f      	ldr	r3, [pc, #60]	; (800b1a4 <LLRPDevice::Print()+0x50>)
 800b168:	480f      	ldr	r0, [pc, #60]	; (800b1a8 <LLRPDevice::Print()+0x54>)
 800b16a:	6819      	ldr	r1, [r3, #0]
 800b16c:	0e0b      	lsrs	r3, r1, #24
 800b16e:	9300      	str	r3, [sp, #0]
 800b170:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800b174:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800b178:	b2c9      	uxtb	r1, r1
 800b17a:	f7fe fa01 	bl	8009580 <printf>
 800b17e:	4b0b      	ldr	r3, [pc, #44]	; (800b1ac <LLRPDevice::Print()+0x58>)
 800b180:	480b      	ldr	r0, [pc, #44]	; (800b1b0 <LLRPDevice::Print()+0x5c>)
 800b182:	6819      	ldr	r1, [r3, #0]
 800b184:	0e0b      	lsrs	r3, r1, #24
 800b186:	9300      	str	r3, [sp, #0]
 800b188:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800b18c:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800b190:	b2c9      	uxtb	r1, r1
 800b192:	f7fe f9f5 	bl	8009580 <printf>
 800b196:	b003      	add	sp, #12
 800b198:	f85d fb04 	ldr.w	pc, [sp], #4
 800b19c:	08015b93 	stmdaeq	r1, {r0, r1, r4, r7, r8, r9, fp, ip, lr}
 800b1a0:	08015bae 	stmdaeq	r1, {r1, r2, r3, r5, r7, r8, r9, fp, ip, lr}
 800b1a4:	2000c17c 	andcs	ip, r0, ip, ror r1
 800b1a8:	08015bcc 	stmdaeq	r1, {r2, r3, r6, r7, r8, r9, fp, ip, lr}
 800b1ac:	2000c180 	andcs	ip, r0, r0, lsl #3
 800b1b0:	08015bf3 	stmdaeq	r1, {r0, r1, r4, r5, r6, r7, r8, r9, fp, ip, lr}

0800b1b4 <RDMNetDevice::Print()>:
 800b1b4:	2300      	movs	r3, #0
 800b1b6:	b510      	push	{r4, lr}
 800b1b8:	4604      	mov	r4, r0
 800b1ba:	b08a      	sub	sp, #40	; 0x28
 800b1bc:	4669      	mov	r1, sp
 800b1be:	480a      	ldr	r0, [pc, #40]	; (800b1e8 <RDMNetDevice::Print()+0x34>)
 800b1c0:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800b1c4:	f7ff fec6 	bl	800af54 <uuid_unparse>
 800b1c8:	4808      	ldr	r0, [pc, #32]	; (800b1ec <RDMNetDevice::Print()+0x38>)
 800b1ca:	f7fe f9d9 	bl	8009580 <printf>
 800b1ce:	4669      	mov	r1, sp
 800b1d0:	4807      	ldr	r0, [pc, #28]	; (800b1f0 <RDMNetDevice::Print()+0x3c>)
 800b1d2:	f7fe f9d5 	bl	8009580 <printf>
 800b1d6:	f104 00cc 	add.w	r0, r4, #204	; 0xcc
 800b1da:	f7ff ffbb 	bl	800b154 <LLRPDevice::Print()>
 800b1de:	4620      	mov	r0, r4
 800b1e0:	f000 fa62 	bl	800b6a8 <RDMDeviceResponder::Print()>
 800b1e4:	b00a      	add	sp, #40	; 0x28
 800b1e6:	bd10      	pop	{r4, pc}
 800b1e8:	2000c287 	andcs	ip, r0, r7, lsl #5
 800b1ec:	08015c6a 	stmdaeq	r1, {r1, r3, r5, r6, sl, fp, ip, lr}
 800b1f0:	08015c72 	stmdaeq	r1, {r1, r4, r5, r6, sl, fp, ip, lr}

0800b1f4 <RDMSensors::RDMSensors()>:
 800b1f4:	2200      	movs	r2, #0
 800b1f6:	6002      	str	r2, [r0, #0]
 800b1f8:	7102      	strb	r2, [r0, #4]
 800b1fa:	4a01      	ldr	r2, [pc, #4]	; (800b200 <RDMSensors::RDMSensors()+0xc>)
 800b1fc:	6010      	str	r0, [r2, #0]
 800b1fe:	4770      	bx	lr
 800b200:	2000c298 	mulcs	r0, r8, r2

0800b204 <RDMSensors::~RDMSensors()>:
 800b204:	b570      	push	{r4, r5, r6, lr}
 800b206:	2500      	movs	r5, #0
 800b208:	4604      	mov	r4, r0
 800b20a:	462e      	mov	r6, r5
 800b20c:	7923      	ldrb	r3, [r4, #4]
 800b20e:	6820      	ldr	r0, [r4, #0]
 800b210:	42ab      	cmp	r3, r5
 800b212:	d804      	bhi.n	800b21e <RDMSensors::~RDMSensors()+0x1a>
 800b214:	b108      	cbz	r0, 800b21a <RDMSensors::~RDMSensors()+0x16>
 800b216:	f008 f90f 	bl	8013438 <operator delete[](void*)>
 800b21a:	4620      	mov	r0, r4
 800b21c:	bd70      	pop	{r4, r5, r6, pc}
 800b21e:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 800b222:	b128      	cbz	r0, 800b230 <RDMSensors::~RDMSensors()+0x2c>
 800b224:	6803      	ldr	r3, [r0, #0]
 800b226:	685b      	ldr	r3, [r3, #4]
 800b228:	4798      	blx	r3
 800b22a:	6823      	ldr	r3, [r4, #0]
 800b22c:	f843 6025 	str.w	r6, [r3, r5, lsl #2]
 800b230:	3501      	adds	r5, #1
 800b232:	e7eb      	b.n	800b20c <RDMSensors::~RDMSensors()+0x8>

0800b234 <RDMSubDevices::RDMSubDevices()>:
 800b234:	2200      	movs	r2, #0
 800b236:	6002      	str	r2, [r0, #0]
 800b238:	8082      	strh	r2, [r0, #4]
 800b23a:	4a01      	ldr	r2, [pc, #4]	; (800b240 <RDMSubDevices::RDMSubDevices()+0xc>)
 800b23c:	6010      	str	r0, [r2, #0]
 800b23e:	4770      	bx	lr
 800b240:	2000c29c 	mulcs	r0, ip, r2

0800b244 <RDMSubDevices::~RDMSubDevices()>:
 800b244:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b246:	2500      	movs	r5, #0
 800b248:	4604      	mov	r4, r0
 800b24a:	462e      	mov	r6, r5
 800b24c:	88a3      	ldrh	r3, [r4, #4]
 800b24e:	6820      	ldr	r0, [r4, #0]
 800b250:	42ab      	cmp	r3, r5
 800b252:	d804      	bhi.n	800b25e <RDMSubDevices::~RDMSubDevices()+0x1a>
 800b254:	b108      	cbz	r0, 800b25a <RDMSubDevices::~RDMSubDevices()+0x16>
 800b256:	f008 f8ef 	bl	8013438 <operator delete[](void*)>
 800b25a:	4620      	mov	r0, r4
 800b25c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b25e:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 800b262:	00af      	lsls	r7, r5, #2
 800b264:	b110      	cbz	r0, 800b26c <RDMSubDevices::~RDMSubDevices()+0x28>
 800b266:	6803      	ldr	r3, [r0, #0]
 800b268:	685b      	ldr	r3, [r3, #4]
 800b26a:	4798      	blx	r3
 800b26c:	6823      	ldr	r3, [r4, #0]
 800b26e:	3501      	adds	r5, #1
 800b270:	51de      	str	r6, [r3, r7]
 800b272:	e7eb      	b.n	800b24c <RDMSubDevices::~RDMSubDevices()+0x8>

0800b274 <RDMSubDevices::GetInfo(unsigned short)>:
 800b274:	6803      	ldr	r3, [r0, #0]
 800b276:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 800b27a:	3901      	subs	r1, #1
 800b27c:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800b280:	3010      	adds	r0, #16
 800b282:	4770      	bx	lr

0800b284 <RDMSubDevices::GetLabel(unsigned short, TRDMDeviceInfoData*)>:
 800b284:	f101 4380 	add.w	r3, r1, #1073741824	; 0x40000000
 800b288:	6800      	ldr	r0, [r0, #0]
 800b28a:	3b01      	subs	r3, #1
 800b28c:	4611      	mov	r1, r2
 800b28e:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 800b292:	f000 b82f 	b.w	800b2f4 <RDMSubDevice::GetLabel(TRDMDeviceInfoData*)>

0800b296 <RDMSubDevices::SetLabel(unsigned short, char const*, unsigned char)>:
 800b296:	b410      	push	{r4}
 800b298:	460c      	mov	r4, r1
 800b29a:	6800      	ldr	r0, [r0, #0]
 800b29c:	f104 4480 	add.w	r4, r4, #1073741824	; 0x40000000
 800b2a0:	3c01      	subs	r4, #1
 800b2a2:	4611      	mov	r1, r2
 800b2a4:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
 800b2a8:	461a      	mov	r2, r3
 800b2aa:	bc10      	pop	{r4}
 800b2ac:	f000 b837 	b.w	800b31e <RDMSubDevice::SetLabel(char const*, unsigned char)>

0800b2b0 <RDMSubDevices::GetFactoryDefaults()>:
 800b2b0:	b538      	push	{r3, r4, r5, lr}
 800b2b2:	4605      	mov	r5, r0
 800b2b4:	2400      	movs	r4, #0
 800b2b6:	88ab      	ldrh	r3, [r5, #4]
 800b2b8:	42a3      	cmp	r3, r4
 800b2ba:	d801      	bhi.n	800b2c0 <RDMSubDevices::GetFactoryDefaults()+0x10>
 800b2bc:	2001      	movs	r0, #1
 800b2be:	e009      	b.n	800b2d4 <RDMSubDevices::GetFactoryDefaults()+0x24>
 800b2c0:	682b      	ldr	r3, [r5, #0]
 800b2c2:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 800b2c6:	b908      	cbnz	r0, 800b2cc <RDMSubDevices::GetFactoryDefaults()+0x1c>
 800b2c8:	3401      	adds	r4, #1
 800b2ca:	e7f4      	b.n	800b2b6 <RDMSubDevices::GetFactoryDefaults()+0x6>
 800b2cc:	f000 f85c 	bl	800b388 <RDMSubDevice::GetFactoryDefaults()>
 800b2d0:	2800      	cmp	r0, #0
 800b2d2:	d1f9      	bne.n	800b2c8 <RDMSubDevices::GetFactoryDefaults()+0x18>
 800b2d4:	bd38      	pop	{r3, r4, r5, pc}

0800b2d6 <RDMSubDevices::SetFactoryDefaults()>:
 800b2d6:	b538      	push	{r3, r4, r5, lr}
 800b2d8:	4605      	mov	r5, r0
 800b2da:	2400      	movs	r4, #0
 800b2dc:	88ab      	ldrh	r3, [r5, #4]
 800b2de:	42a3      	cmp	r3, r4
 800b2e0:	d800      	bhi.n	800b2e4 <RDMSubDevices::SetFactoryDefaults()+0xe>
 800b2e2:	bd38      	pop	{r3, r4, r5, pc}
 800b2e4:	682b      	ldr	r3, [r5, #0]
 800b2e6:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 800b2ea:	b108      	cbz	r0, 800b2f0 <RDMSubDevices::SetFactoryDefaults()+0x1a>
 800b2ec:	f000 f826 	bl	800b33c <RDMSubDevice::SetFactoryDefaults()>
 800b2f0:	3401      	adds	r4, #1
 800b2f2:	e7f3      	b.n	800b2dc <RDMSubDevices::SetFactoryDefaults()+0x6>

0800b2f4 <RDMSubDevice::GetLabel(TRDMDeviceInfoData*)>:
 800b2f4:	f100 0316 	add.w	r3, r0, #22
 800b2f8:	600b      	str	r3, [r1, #0]
 800b2fa:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800b2fe:	710b      	strb	r3, [r1, #4]
 800b300:	4770      	bx	lr

0800b302 <RDMSubDevice::SetLabel(char const*)>:
 800b302:	2300      	movs	r3, #0
 800b304:	b510      	push	{r4, lr}
 800b306:	f100 0416 	add.w	r4, r0, #22
 800b30a:	5cca      	ldrb	r2, [r1, r3]
 800b30c:	b122      	cbz	r2, 800b318 <RDMSubDevice::SetLabel(char const*)+0x16>
 800b30e:	3301      	adds	r3, #1
 800b310:	2b20      	cmp	r3, #32
 800b312:	f804 2b01 	strb.w	r2, [r4], #1
 800b316:	d1f8      	bne.n	800b30a <RDMSubDevice::SetLabel(char const*)+0x8>
 800b318:	f880 3036 	strb.w	r3, [r0, #54]	; 0x36
 800b31c:	bd10      	pop	{r4, pc}

0800b31e <RDMSubDevice::SetLabel(char const*, unsigned char)>:
 800b31e:	2300      	movs	r3, #0
 800b320:	b530      	push	{r4, r5, lr}
 800b322:	f100 0416 	add.w	r4, r0, #22
 800b326:	429a      	cmp	r2, r3
 800b328:	d905      	bls.n	800b336 <RDMSubDevice::SetLabel(char const*, unsigned char)+0x18>
 800b32a:	5ccd      	ldrb	r5, [r1, r3]
 800b32c:	3301      	adds	r3, #1
 800b32e:	2b20      	cmp	r3, #32
 800b330:	f804 5b01 	strb.w	r5, [r4], #1
 800b334:	d1f7      	bne.n	800b326 <RDMSubDevice::SetLabel(char const*, unsigned char)+0x8>
 800b336:	f880 3036 	strb.w	r3, [r0, #54]	; 0x36
 800b33a:	bd30      	pop	{r4, r5, pc}

0800b33c <RDMSubDevice::SetFactoryDefaults()>:
 800b33c:	7a03      	ldrb	r3, [r0, #8]
 800b33e:	b510      	push	{r4, lr}
 800b340:	b94b      	cbnz	r3, 800b356 <RDMSubDevice::SetFactoryDefaults()+0x1a>
 800b342:	f100 0138 	add.w	r1, r0, #56	; 0x38
 800b346:	f7ff ffdc 	bl	800b302 <RDMSubDevice::SetLabel(char const*)>
 800b34a:	8983      	ldrh	r3, [r0, #12]
 800b34c:	8243      	strh	r3, [r0, #18]
 800b34e:	7b83      	ldrb	r3, [r0, #14]
 800b350:	7503      	strb	r3, [r0, #20]
 800b352:	2301      	movs	r3, #1
 800b354:	7203      	strb	r3, [r0, #8]
 800b356:	bd10      	pop	{r4, pc}

0800b358 <RDMSubDevice::CalculateChecksum()>:
 800b358:	4602      	mov	r2, r0
 800b35a:	b510      	push	{r4, lr}
 800b35c:	8a43      	ldrh	r3, [r0, #18]
 800b35e:	7d01      	ldrb	r1, [r0, #20]
 800b360:	f892 4036 	ldrb.w	r4, [r2, #54]	; 0x36
 800b364:	440b      	add	r3, r1
 800b366:	b298      	uxth	r0, r3
 800b368:	f102 0316 	add.w	r3, r2, #22
 800b36c:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
 800b370:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
 800b374:	32ea      	adds	r2, #234	; 0xea
 800b376:	18d1      	adds	r1, r2, r3
 800b378:	428c      	cmp	r4, r1
 800b37a:	d800      	bhi.n	800b37e <RDMSubDevice::CalculateChecksum()+0x26>
 800b37c:	bd10      	pop	{r4, pc}
 800b37e:	f813 1b01 	ldrb.w	r1, [r3], #1
 800b382:	4408      	add	r0, r1
 800b384:	b280      	uxth	r0, r0
 800b386:	e7f6      	b.n	800b376 <RDMSubDevice::CalculateChecksum()+0x1e>

0800b388 <RDMSubDevice::GetFactoryDefaults()>:
 800b388:	7a03      	ldrb	r3, [r0, #8]
 800b38a:	b510      	push	{r4, lr}
 800b38c:	4604      	mov	r4, r0
 800b38e:	b133      	cbz	r3, 800b39e <RDMSubDevice::GetFactoryDefaults()+0x16>
 800b390:	f7ff ffe2 	bl	800b358 <RDMSubDevice::CalculateChecksum()>
 800b394:	8963      	ldrh	r3, [r4, #10]
 800b396:	4283      	cmp	r3, r0
 800b398:	bf1c      	itt	ne
 800b39a:	2300      	movne	r3, #0
 800b39c:	7223      	strbne	r3, [r4, #8]
 800b39e:	7a20      	ldrb	r0, [r4, #8]
 800b3a0:	bd10      	pop	{r4, pc}

0800b3a2 <memcpy.isra.0>:
 800b3a2:	f008 b8ff 	b.w	80135a4 <memcpy>
	...

0800b3a8 <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)>:
 800b3a8:	b510      	push	{r4, lr}
 800b3aa:	6001      	str	r1, [r0, #0]
 800b3ac:	2100      	movs	r1, #0
 800b3ae:	4604      	mov	r4, r0
 800b3b0:	6041      	str	r1, [r0, #4]
 800b3b2:	2220      	movs	r2, #32
 800b3b4:	3008      	adds	r0, #8
 800b3b6:	f008 f917 	bl	80135e8 <memset>
 800b3ba:	4b03      	ldr	r3, [pc, #12]	; (800b3c8 <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)+0x20>)
 800b3bc:	4620      	mov	r0, r4
 800b3be:	62a3      	str	r3, [r4, #40]	; 0x28
 800b3c0:	237f      	movs	r3, #127	; 0x7f
 800b3c2:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 800b3c6:	bd10      	pop	{r4, pc}
 800b3c8:	ff7fff00 			; <UNDEFINED> instruction: 0xff7fff00

0800b3cc <RDMDeviceParams::Load()>:
 800b3cc:	4601      	mov	r1, r0
 800b3ce:	6800      	ldr	r0, [r0, #0]
 800b3d0:	b130      	cbz	r0, 800b3e0 <RDMDeviceParams::Load()+0x14>
 800b3d2:	b508      	push	{r3, lr}
 800b3d4:	6803      	ldr	r3, [r0, #0]
 800b3d6:	3104      	adds	r1, #4
 800b3d8:	68db      	ldr	r3, [r3, #12]
 800b3da:	4798      	blx	r3
 800b3dc:	2001      	movs	r0, #1
 800b3de:	bd08      	pop	{r3, pc}
 800b3e0:	4770      	bx	lr

0800b3e2 <RDMDeviceParams::Set(RDMDevice*)>:
 800b3e2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b3e4:	6843      	ldr	r3, [r0, #4]
 800b3e6:	460c      	mov	r4, r1
 800b3e8:	07d9      	lsls	r1, r3, #31
 800b3ea:	4605      	mov	r5, r0
 800b3ec:	d518      	bpl.n	800b420 <RDMDeviceParams::Set(RDMDevice*)+0x3e>
 800b3ee:	f890 6028 	ldrb.w	r6, [r0, #40]	; 0x28
 800b3f2:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 800b3f6:	2e20      	cmp	r6, #32
 800b3f8:	bf28      	it	cs
 800b3fa:	2620      	movcs	r6, #32
 800b3fc:	f100 0108 	add.w	r1, r0, #8
 800b400:	b1e3      	cbz	r3, 800b43c <RDMDeviceParams::Set(RDMDevice*)+0x5a>
 800b402:	f104 070a 	add.w	r7, r4, #10
 800b406:	4638      	mov	r0, r7
 800b408:	4632      	mov	r2, r6
 800b40a:	f7ff ffca 	bl	800b3a2 <memcpy.isra.0>
 800b40e:	6f60      	ldr	r0, [r4, #116]	; 0x74
 800b410:	f884 602a 	strb.w	r6, [r4, #42]	; 0x2a
 800b414:	b120      	cbz	r0, 800b420 <RDMDeviceParams::Set(RDMDevice*)+0x3e>
 800b416:	6803      	ldr	r3, [r0, #0]
 800b418:	4632      	mov	r2, r6
 800b41a:	4639      	mov	r1, r7
 800b41c:	689b      	ldr	r3, [r3, #8]
 800b41e:	4798      	blx	r3
 800b420:	686b      	ldr	r3, [r5, #4]
 800b422:	079a      	lsls	r2, r3, #30
 800b424:	bf44      	itt	mi
 800b426:	f8b5 2029 	ldrhmi.w	r2, [r5, #41]	; 0x29
 800b42a:	f8a4 204c 	strhmi.w	r2, [r4, #76]	; 0x4c
 800b42e:	075b      	lsls	r3, r3, #29
 800b430:	bf44      	itt	mi
 800b432:	f8b5 302b 	ldrhmi.w	r3, [r5, #43]	; 0x2b
 800b436:	f8a4 304e 	strhmi.w	r3, [r4, #78]	; 0x4e
 800b43a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b43c:	4632      	mov	r2, r6
 800b43e:	f104 0051 	add.w	r0, r4, #81	; 0x51
 800b442:	f7ff ffae 	bl	800b3a2 <memcpy.isra.0>
 800b446:	f884 6071 	strb.w	r6, [r4, #113]	; 0x71
 800b44a:	e7e9      	b.n	800b420 <RDMDeviceParams::Set(RDMDevice*)+0x3e>

0800b44c <RDMDeviceParams::Dump()>:
 800b44c:	4770      	bx	lr

0800b44e <RDMDeviceResponder::PersonalityUpdate(LightSet*)>:
 800b44e:	4770      	bx	lr

0800b450 <RDMDeviceResponder::DmxStartAddressUpdate()>:
 800b450:	4770      	bx	lr
	...

0800b454 <RDMDeviceResponder::~RDMDeviceResponder()>:
 800b454:	b510      	push	{r4, lr}
 800b456:	4604      	mov	r4, r0
 800b458:	4b05      	ldr	r3, [pc, #20]	; (800b470 <RDMDeviceResponder::~RDMDeviceResponder()+0x1c>)
 800b45a:	f840 3b88 	str.w	r3, [r0], #136
 800b45e:	f7ff fef1 	bl	800b244 <RDMSubDevices::~RDMSubDevices()>
 800b462:	f104 0080 	add.w	r0, r4, #128	; 0x80
 800b466:	f7ff fecd 	bl	800b204 <RDMSensors::~RDMSensors()>
 800b46a:	4620      	mov	r0, r4
 800b46c:	bd10      	pop	{r4, pc}
 800b46e:	bf00      	nop
 800b470:	08015d54 	stmdaeq	r1, {r2, r4, r6, r8, sl, fp, ip, lr}

0800b474 <RDMDeviceResponder::~RDMDeviceResponder()>:
 800b474:	b510      	push	{r4, lr}
 800b476:	4604      	mov	r4, r0
 800b478:	f7ff ffec 	bl	800b454 <RDMDeviceResponder::~RDMDeviceResponder()>
 800b47c:	4620      	mov	r0, r4
 800b47e:	f007 ffd9 	bl	8013434 <operator delete(void*)>
 800b482:	4620      	mov	r0, r4
 800b484:	bd10      	pop	{r4, pc}

0800b486 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>:
 800b486:	b470      	push	{r4, r5, r6}
 800b488:	790a      	ldrb	r2, [r1, #4]
 800b48a:	680b      	ldr	r3, [r1, #0]
 800b48c:	2a20      	cmp	r2, #32
 800b48e:	bf28      	it	cs
 800b490:	2220      	movcs	r2, #32
 800b492:	f890 1050 	ldrb.w	r1, [r0, #80]	; 0x50
 800b496:	189c      	adds	r4, r3, r2
 800b498:	b189      	cbz	r1, 800b4be <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x38>
 800b49a:	f100 010a 	add.w	r1, r0, #10
 800b49e:	460d      	mov	r5, r1
 800b4a0:	42a3      	cmp	r3, r4
 800b4a2:	d107      	bne.n	800b4b4 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x2e>
 800b4a4:	f880 202a 	strb.w	r2, [r0, #42]	; 0x2a
 800b4a8:	6f40      	ldr	r0, [r0, #116]	; 0x74
 800b4aa:	b170      	cbz	r0, 800b4ca <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x44>
 800b4ac:	bc70      	pop	{r4, r5, r6}
 800b4ae:	6803      	ldr	r3, [r0, #0]
 800b4b0:	689b      	ldr	r3, [r3, #8]
 800b4b2:	4718      	bx	r3
 800b4b4:	f813 6b01 	ldrb.w	r6, [r3], #1
 800b4b8:	f805 6b01 	strb.w	r6, [r5], #1
 800b4bc:	e7f0      	b.n	800b4a0 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x1a>
 800b4be:	f100 0151 	add.w	r1, r0, #81	; 0x51
 800b4c2:	42a3      	cmp	r3, r4
 800b4c4:	d103      	bne.n	800b4ce <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x48>
 800b4c6:	f880 2071 	strb.w	r2, [r0, #113]	; 0x71
 800b4ca:	bc70      	pop	{r4, r5, r6}
 800b4cc:	4770      	bx	lr
 800b4ce:	f813 5b01 	ldrb.w	r5, [r3], #1
 800b4d2:	f801 5b01 	strb.w	r5, [r1], #1
 800b4d6:	e7f4      	b.n	800b4c2 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x3c>

0800b4d8 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)>:
 800b4d8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800b4da:	4604      	mov	r4, r0
 800b4dc:	1d07      	adds	r7, r0, #4
 800b4de:	4638      	mov	r0, r7
 800b4e0:	460e      	mov	r6, r1
 800b4e2:	4615      	mov	r5, r2
 800b4e4:	f000 fed0 	bl	800c288 <RDMDevice::RDMDevice()>
 800b4e8:	4620      	mov	r0, r4
 800b4ea:	4b27      	ldr	r3, [pc, #156]	; (800b588 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0xb0>)
 800b4ec:	f840 3b7c 	str.w	r3, [r0], #124
 800b4f0:	f000 fcda 	bl	800bea8 <RDMIdentify::RDMIdentify()>
 800b4f4:	f104 0080 	add.w	r0, r4, #128	; 0x80
 800b4f8:	f7ff fe7c 	bl	800b1f4 <RDMSensors::RDMSensors()>
 800b4fc:	f104 0088 	add.w	r0, r4, #136	; 0x88
 800b500:	f7ff fe98 	bl	800b234 <RDMSubDevices::RDMSubDevices()>
 800b504:	4b21      	ldr	r3, [pc, #132]	; (800b58c <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0xb4>)
 800b506:	2200      	movs	r2, #0
 800b508:	601c      	str	r4, [r3, #0]
 800b50a:	2365      	movs	r3, #101	; 0x65
 800b50c:	f884 30bf 	strb.w	r3, [r4, #191]	; 0xbf
 800b510:	f44f 73b7 	mov.w	r3, #366	; 0x16e
 800b514:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 800b518:	2301      	movs	r3, #1
 800b51a:	f8c4 6090 	str.w	r6, [r4, #144]	; 0x90
 800b51e:	f8a4 30c4 	strh.w	r3, [r4, #196]	; 0xc4
 800b522:	f8c4 20c8 	str.w	r2, [r4, #200]	; 0xc8
 800b526:	f104 0399 	add.w	r3, r4, #153	; 0x99
 800b52a:	f104 01ac 	add.w	r1, r4, #172	; 0xac
 800b52e:	428b      	cmp	r3, r1
 800b530:	d123      	bne.n	800b57a <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0xa2>
 800b532:	2100      	movs	r1, #0
 800b534:	f104 02bf 	add.w	r2, r4, #191	; 0xbf
 800b538:	4293      	cmp	r3, r2
 800b53a:	d121      	bne.n	800b580 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0xa8>
 800b53c:	f884 50a6 	strb.w	r5, [r4, #166]	; 0xa6
 800b540:	f7fd fd18 	bl	8008f74 <RDMSoftwareVersion::GetVersion()>
 800b544:	f8c4 0094 	str.w	r0, [r4, #148]	; 0x94
 800b548:	f7fd fd18 	bl	8008f7c <RDMSoftwareVersion::GetVersionLength()>
 800b54c:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800b550:	f884 0098 	strb.w	r0, [r4, #152]	; 0x98
 800b554:	681b      	ldr	r3, [r3, #0]
 800b556:	685b      	ldr	r3, [r3, #4]
 800b558:	b91b      	cbnz	r3, 800b562 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x8a>
 800b55a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800b55e:	f8a4 30c4 	strh.w	r3, [r4, #196]	; 0xc4
 800b562:	4b0b      	ldr	r3, [pc, #44]	; (800b590 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0xb8>)
 800b564:	4638      	mov	r0, r7
 800b566:	9300      	str	r3, [sp, #0]
 800b568:	2317      	movs	r3, #23
 800b56a:	4669      	mov	r1, sp
 800b56c:	f88d 3004 	strb.w	r3, [sp, #4]
 800b570:	f7ff ff89 	bl	800b486 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>
 800b574:	4620      	mov	r0, r4
 800b576:	b003      	add	sp, #12
 800b578:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b57a:	f803 2b01 	strb.w	r2, [r3], #1
 800b57e:	e7d6      	b.n	800b52e <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x56>
 800b580:	f803 1b01 	strb.w	r1, [r3], #1
 800b584:	e7d8      	b.n	800b538 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x60>
 800b586:	bf00      	nop
 800b588:	08015d54 	stmdaeq	r1, {r2, r4, r6, r8, sl, fp, ip, lr}
 800b58c:	2000c2a0 	andcs	ip, r0, r0, lsr #5
 800b590:	08015d31 	stmdaeq	r1, {r0, r4, r5, r8, sl, fp, ip, lr}

0800b594 <RDMDeviceResponder::Init()>:
 800b594:	2301      	movs	r3, #1
 800b596:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b598:	4604      	mov	r4, r0
 800b59a:	f06f 050d 	mvn.w	r5, #13
 800b59e:	f880 3054 	strb.w	r3, [r0, #84]	; 0x54
 800b5a2:	f100 0355 	add.w	r3, r0, #85	; 0x55
 800b5a6:	9300      	str	r3, [sp, #0]
 800b5a8:	f890 3075 	ldrb.w	r3, [r0, #117]	; 0x75
 800b5ac:	4669      	mov	r1, sp
 800b5ae:	3004      	adds	r0, #4
 800b5b0:	f88d 3004 	strb.w	r3, [sp, #4]
 800b5b4:	f7ff ff67 	bl	800b486 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>
 800b5b8:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800b5bc:	f894 002e 	ldrb.w	r0, [r4, #46]	; 0x2e
 800b5c0:	f104 020e 	add.w	r2, r4, #14
 800b5c4:	1b2d      	subs	r5, r5, r4
 800b5c6:	18a9      	adds	r1, r5, r2
 800b5c8:	4288      	cmp	r0, r1
 800b5ca:	d84b      	bhi.n	800b664 <RDMDeviceResponder::Init()+0xd0>
 800b5cc:	f8a4 3076 	strh.w	r3, [r4, #118]	; 0x76
 800b5d0:	f7fd fcd6 	bl	8008f80 <RDMSoftwareVersion::GetVersionId()>
 800b5d4:	2201      	movs	r2, #1
 800b5d6:	f884 2099 	strb.w	r2, [r4, #153]	; 0x99
 800b5da:	2200      	movs	r2, #0
 800b5dc:	f8b4 3050 	ldrh.w	r3, [r4, #80]	; 0x50
 800b5e0:	f8a4 209a 	strh.w	r2, [r4, #154]	; 0x9a
 800b5e4:	f884 209c 	strb.w	r2, [r4, #156]	; 0x9c
 800b5e8:	f884 309e 	strb.w	r3, [r4, #158]	; 0x9e
 800b5ec:	0a1a      	lsrs	r2, r3, #8
 800b5ee:	0e03      	lsrs	r3, r0, #24
 800b5f0:	f884 309f 	strb.w	r3, [r4, #159]	; 0x9f
 800b5f4:	0c03      	lsrs	r3, r0, #16
 800b5f6:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
 800b5fa:	0a03      	lsrs	r3, r0, #8
 800b5fc:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
 800b600:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800b604:	f884 209d 	strb.w	r2, [r4, #157]	; 0x9d
 800b608:	f884 00a2 	strb.w	r0, [r4, #162]	; 0xa2
 800b60c:	681b      	ldr	r3, [r3, #0]
 800b60e:	f8b4 608c 	ldrh.w	r6, [r4, #140]	; 0x8c
 800b612:	685d      	ldr	r5, [r3, #4]
 800b614:	bb5d      	cbnz	r5, 800b66e <RDMDeviceResponder::Init()+0xda>
 800b616:	f8b4 00c4 	ldrh.w	r0, [r4, #196]	; 0xc4
 800b61a:	f884 50a3 	strb.w	r5, [r4, #163]	; 0xa3
 800b61e:	0a03      	lsrs	r3, r0, #8
 800b620:	f884 50a4 	strb.w	r5, [r4, #164]	; 0xa4
 800b624:	f884 30a7 	strb.w	r3, [r4, #167]	; 0xa7
 800b628:	2301      	movs	r3, #1
 800b62a:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 800b62e:	0a33      	lsrs	r3, r6, #8
 800b630:	f884 30a9 	strb.w	r3, [r4, #169]	; 0xa9
 800b634:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 800b638:	b2c0      	uxtb	r0, r0
 800b63a:	f884 30ab 	strb.w	r3, [r4, #171]	; 0xab
 800b63e:	f884 00a8 	strb.w	r0, [r4, #168]	; 0xa8
 800b642:	f884 60aa 	strb.w	r6, [r4, #170]	; 0xaa
 800b646:	f104 0399 	add.w	r3, r4, #153	; 0x99
 800b64a:	f104 02ac 	add.w	r2, r4, #172	; 0xac
 800b64e:	4293      	cmp	r3, r2
 800b650:	d126      	bne.n	800b6a0 <RDMDeviceResponder::Init()+0x10c>
 800b652:	f894 30a8 	ldrb.w	r3, [r4, #168]	; 0xa8
 800b656:	f894 20a5 	ldrb.w	r2, [r4, #165]	; 0xa5
 800b65a:	4413      	add	r3, r2
 800b65c:	f8a4 30c2 	strh.w	r3, [r4, #194]	; 0xc2
 800b660:	b002      	add	sp, #8
 800b662:	bd70      	pop	{r4, r5, r6, pc}
 800b664:	f812 1b01 	ldrb.w	r1, [r2], #1
 800b668:	440b      	add	r3, r1
 800b66a:	b29b      	uxth	r3, r3
 800b66c:	e7ab      	b.n	800b5c6 <RDMDeviceResponder::Init()+0x32>
 800b66e:	682b      	ldr	r3, [r5, #0]
 800b670:	4628      	mov	r0, r5
 800b672:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b674:	4798      	blx	r3
 800b676:	0a00      	lsrs	r0, r0, #8
 800b678:	f884 00a3 	strb.w	r0, [r4, #163]	; 0xa3
 800b67c:	682b      	ldr	r3, [r5, #0]
 800b67e:	4628      	mov	r0, r5
 800b680:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b682:	4798      	blx	r3
 800b684:	f884 00a4 	strb.w	r0, [r4, #164]	; 0xa4
 800b688:	682b      	ldr	r3, [r5, #0]
 800b68a:	4628      	mov	r0, r5
 800b68c:	6a1b      	ldr	r3, [r3, #32]
 800b68e:	4798      	blx	r3
 800b690:	0a00      	lsrs	r0, r0, #8
 800b692:	f884 00a7 	strb.w	r0, [r4, #167]	; 0xa7
 800b696:	682b      	ldr	r3, [r5, #0]
 800b698:	4628      	mov	r0, r5
 800b69a:	6a1b      	ldr	r3, [r3, #32]
 800b69c:	4798      	blx	r3
 800b69e:	e7c3      	b.n	800b628 <RDMDeviceResponder::Init()+0x94>
 800b6a0:	f813 1b01 	ldrb.w	r1, [r3], #1
 800b6a4:	7499      	strb	r1, [r3, #18]
 800b6a6:	e7d2      	b.n	800b64e <RDMDeviceResponder::Init()+0xba>

0800b6a8 <RDMDeviceResponder::Print()>:
 800b6a8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b6aa:	4604      	mov	r4, r0
 800b6ac:	3004      	adds	r0, #4
 800b6ae:	f000 fe5d 	bl	800c36c <RDMDevice::Print()>
 800b6b2:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800b6b6:	481c      	ldr	r0, [pc, #112]	; (800b728 <RDMDeviceResponder::Print()+0x80>)
 800b6b8:	681d      	ldr	r5, [r3, #0]
 800b6ba:	6aae      	ldr	r6, [r5, #40]	; 0x28
 800b6bc:	f7fd ff60 	bl	8009580 <printf>
 800b6c0:	f894 209a 	ldrb.w	r2, [r4, #154]	; 0x9a
 800b6c4:	f894 1099 	ldrb.w	r1, [r4, #153]	; 0x99
 800b6c8:	4818      	ldr	r0, [pc, #96]	; (800b72c <RDMDeviceResponder::Print()+0x84>)
 800b6ca:	f7fd ff59 	bl	8009580 <printf>
 800b6ce:	f894 30a8 	ldrb.w	r3, [r4, #168]	; 0xa8
 800b6d2:	f894 10a7 	ldrb.w	r1, [r4, #167]	; 0xa7
 800b6d6:	4816      	ldr	r0, [pc, #88]	; (800b730 <RDMDeviceResponder::Print()+0x88>)
 800b6d8:	eb03 2101 	add.w	r1, r3, r1, lsl #8
 800b6dc:	f7fd ff50 	bl	8009580 <printf>
 800b6e0:	f894 30a4 	ldrb.w	r3, [r4, #164]	; 0xa4
 800b6e4:	f894 10a3 	ldrb.w	r1, [r4, #163]	; 0xa3
 800b6e8:	3508      	adds	r5, #8
 800b6ea:	eb03 2101 	add.w	r1, r3, r1, lsl #8
 800b6ee:	4811      	ldr	r0, [pc, #68]	; (800b734 <RDMDeviceResponder::Print()+0x8c>)
 800b6f0:	f7fd ff46 	bl	8009580 <printf>
 800b6f4:	f894 20a6 	ldrb.w	r2, [r4, #166]	; 0xa6
 800b6f8:	f894 10a5 	ldrb.w	r1, [r4, #165]	; 0xa5
 800b6fc:	b2f3      	uxtb	r3, r6
 800b6fe:	9500      	str	r5, [sp, #0]
 800b700:	480d      	ldr	r0, [pc, #52]	; (800b738 <RDMDeviceResponder::Print()+0x90>)
 800b702:	f7fd ff3d 	bl	8009580 <printf>
 800b706:	f894 10a9 	ldrb.w	r1, [r4, #169]	; 0xa9
 800b70a:	f894 30aa 	ldrb.w	r3, [r4, #170]	; 0xaa
 800b70e:	480b      	ldr	r0, [pc, #44]	; (800b73c <RDMDeviceResponder::Print()+0x94>)
 800b710:	eb03 2101 	add.w	r1, r3, r1, lsl #8
 800b714:	f7fd ff34 	bl	8009580 <printf>
 800b718:	f894 10ab 	ldrb.w	r1, [r4, #171]	; 0xab
 800b71c:	4808      	ldr	r0, [pc, #32]	; (800b740 <RDMDeviceResponder::Print()+0x98>)
 800b71e:	b002      	add	sp, #8
 800b720:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b724:	f7fd bf2c 	b.w	8009580 <printf>
 800b728:	08015c7d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, sl, fp, ip, lr}
 800b72c:	08015c9a 	stmdaeq	r1, {r1, r3, r4, r7, sl, fp, ip, lr}
 800b730:	08015cb3 	stmdaeq	r1, {r0, r1, r4, r5, r7, sl, fp, ip, lr}
 800b734:	08015ccb 	stmdaeq	r1, {r0, r1, r3, r6, r7, sl, fp, ip, lr}
 800b738:	08015ce3 	stmdaeq	r1, {r0, r1, r5, r6, r7, sl, fp, ip, lr}
 800b73c:	08015d01 	stmdaeq	r1, {r0, r8, sl, fp, ip, lr}
 800b740:	08015d19 	stmdaeq	r1, {r0, r3, r4, r8, sl, fp, ip, lr}

0800b744 <memcmp>:
 800b744:	b510      	push	{r4, lr}
 800b746:	3901      	subs	r1, #1
 800b748:	4402      	add	r2, r0
 800b74a:	4290      	cmp	r0, r2
 800b74c:	d101      	bne.n	800b752 <memcmp+0xe>
 800b74e:	2000      	movs	r0, #0
 800b750:	e005      	b.n	800b75e <memcmp+0x1a>
 800b752:	7803      	ldrb	r3, [r0, #0]
 800b754:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800b758:	42a3      	cmp	r3, r4
 800b75a:	d001      	beq.n	800b760 <memcmp+0x1c>
 800b75c:	1b18      	subs	r0, r3, r4
 800b75e:	bd10      	pop	{r4, pc}
 800b760:	3001      	adds	r0, #1
 800b762:	e7f2      	b.n	800b74a <memcmp+0x6>

0800b764 <memcpy.isra.0>:
 800b764:	3801      	subs	r0, #1
 800b766:	440a      	add	r2, r1
 800b768:	4291      	cmp	r1, r2
 800b76a:	d100      	bne.n	800b76e <memcpy.isra.0+0xa>
 800b76c:	4770      	bx	lr
 800b76e:	f811 3b01 	ldrb.w	r3, [r1], #1
 800b772:	f800 3f01 	strb.w	r3, [r0, #1]!
 800b776:	e7f7      	b.n	800b768 <memcpy.isra.0+0x4>

0800b778 <RDMDeviceResponder::SetFactoryDefaults()>:
 800b778:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b77a:	4604      	mov	r4, r0
 800b77c:	f06f 050d 	mvn.w	r5, #13
 800b780:	f100 0355 	add.w	r3, r0, #85	; 0x55
 800b784:	9300      	str	r3, [sp, #0]
 800b786:	f890 3075 	ldrb.w	r3, [r0, #117]	; 0x75
 800b78a:	4669      	mov	r1, sp
 800b78c:	3004      	adds	r0, #4
 800b78e:	f88d 3004 	strb.w	r3, [sp, #4]
 800b792:	f7ff fe78 	bl	800b486 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>
 800b796:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800b79a:	f894 002e 	ldrb.w	r0, [r4, #46]	; 0x2e
 800b79e:	f104 020e 	add.w	r2, r4, #14
 800b7a2:	1b2d      	subs	r5, r5, r4
 800b7a4:	18a9      	adds	r1, r5, r2
 800b7a6:	4288      	cmp	r0, r1
 800b7a8:	d865      	bhi.n	800b876 <RDMDeviceResponder::SetFactoryDefaults()+0xfe>
 800b7aa:	f8a4 3076 	strh.w	r3, [r4, #118]	; 0x76
 800b7ae:	2301      	movs	r3, #1
 800b7b0:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 800b7b4:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800b7b8:	681b      	ldr	r3, [r3, #0]
 800b7ba:	685d      	ldr	r5, [r3, #4]
 800b7bc:	b1f5      	cbz	r5, 800b7fc <RDMDeviceResponder::SetFactoryDefaults()+0x84>
 800b7be:	682b      	ldr	r3, [r5, #0]
 800b7c0:	4628      	mov	r0, r5
 800b7c2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b7c4:	4798      	blx	r3
 800b7c6:	0a00      	lsrs	r0, r0, #8
 800b7c8:	f884 00a3 	strb.w	r0, [r4, #163]	; 0xa3
 800b7cc:	682b      	ldr	r3, [r5, #0]
 800b7ce:	4628      	mov	r0, r5
 800b7d0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b7d2:	4798      	blx	r3
 800b7d4:	f884 00a4 	strb.w	r0, [r4, #164]	; 0xa4
 800b7d8:	682b      	ldr	r3, [r5, #0]
 800b7da:	4628      	mov	r0, r5
 800b7dc:	6a1b      	ldr	r3, [r3, #32]
 800b7de:	4798      	blx	r3
 800b7e0:	0a00      	lsrs	r0, r0, #8
 800b7e2:	f884 00a7 	strb.w	r0, [r4, #167]	; 0xa7
 800b7e6:	682b      	ldr	r3, [r5, #0]
 800b7e8:	4628      	mov	r0, r5
 800b7ea:	6a1b      	ldr	r3, [r3, #32]
 800b7ec:	4798      	blx	r3
 800b7ee:	6823      	ldr	r3, [r4, #0]
 800b7f0:	f884 00a8 	strb.w	r0, [r4, #168]	; 0xa8
 800b7f4:	4629      	mov	r1, r5
 800b7f6:	4620      	mov	r0, r4
 800b7f8:	689b      	ldr	r3, [r3, #8]
 800b7fa:	4798      	blx	r3
 800b7fc:	f8b4 50c4 	ldrh.w	r5, [r4, #196]	; 0xc4
 800b800:	1e6b      	subs	r3, r5, #1
 800b802:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800b806:	d218      	bcs.n	800b83a <RDMDeviceResponder::SetFactoryDefaults()+0xc2>
 800b808:	f894 30a5 	ldrb.w	r3, [r4, #165]	; 0xa5
 800b80c:	f8d4 2090 	ldr.w	r2, [r4, #144]	; 0x90
 800b810:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800b814:	3b01      	subs	r3, #1
 800b816:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800b81a:	6858      	ldr	r0, [r3, #4]
 800b81c:	b168      	cbz	r0, 800b83a <RDMDeviceResponder::SetFactoryDefaults()+0xc2>
 800b81e:	6803      	ldr	r3, [r0, #0]
 800b820:	4629      	mov	r1, r5
 800b822:	69db      	ldr	r3, [r3, #28]
 800b824:	4798      	blx	r3
 800b826:	b120      	cbz	r0, 800b832 <RDMDeviceResponder::SetFactoryDefaults()+0xba>
 800b828:	0a2b      	lsrs	r3, r5, #8
 800b82a:	f884 30a7 	strb.w	r3, [r4, #167]	; 0xa7
 800b82e:	f884 50a8 	strb.w	r5, [r4, #168]	; 0xa8
 800b832:	6823      	ldr	r3, [r4, #0]
 800b834:	4620      	mov	r0, r4
 800b836:	68db      	ldr	r3, [r3, #12]
 800b838:	4798      	blx	r3
 800b83a:	2213      	movs	r2, #19
 800b83c:	f104 0199 	add.w	r1, r4, #153	; 0x99
 800b840:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 800b844:	f7ff ff8e 	bl	800b764 <memcpy.isra.0>
 800b848:	f104 0088 	add.w	r0, r4, #136	; 0x88
 800b84c:	f7ff fd43 	bl	800b2d6 <RDMSubDevices::SetFactoryDefaults()>
 800b850:	f894 30a8 	ldrb.w	r3, [r4, #168]	; 0xa8
 800b854:	f894 20a5 	ldrb.w	r2, [r4, #165]	; 0xa5
 800b858:	f8d4 00c8 	ldr.w	r0, [r4, #200]	; 0xc8
 800b85c:	4413      	add	r3, r2
 800b85e:	f8a4 30c2 	strh.w	r3, [r4, #194]	; 0xc2
 800b862:	2301      	movs	r3, #1
 800b864:	f884 30c1 	strb.w	r3, [r4, #193]	; 0xc1
 800b868:	b150      	cbz	r0, 800b880 <RDMDeviceResponder::SetFactoryDefaults()+0x108>
 800b86a:	6803      	ldr	r3, [r0, #0]
 800b86c:	689b      	ldr	r3, [r3, #8]
 800b86e:	b003      	add	sp, #12
 800b870:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800b874:	4718      	bx	r3
 800b876:	f812 1b01 	ldrb.w	r1, [r2], #1
 800b87a:	440b      	add	r3, r1
 800b87c:	b29b      	uxth	r3, r3
 800b87e:	e791      	b.n	800b7a4 <RDMDeviceResponder::SetFactoryDefaults()+0x2c>
 800b880:	b003      	add	sp, #12
 800b882:	bd30      	pop	{r4, r5, pc}

0800b884 <RDMHandler::RDMHandler(bool)>:
 800b884:	2200      	movs	r2, #0
 800b886:	7001      	strb	r1, [r0, #0]
 800b888:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800b88c:	7042      	strb	r2, [r0, #1]
 800b88e:	4770      	bx	lr

0800b890 <RDMHandler::HandleString(char const*, unsigned int)>:
 800b890:	6883      	ldr	r3, [r0, #8]
 800b892:	75da      	strb	r2, [r3, #23]
 800b894:	3318      	adds	r3, #24
 800b896:	440a      	add	r2, r1
 800b898:	4291      	cmp	r1, r2
 800b89a:	d100      	bne.n	800b89e <RDMHandler::HandleString(char const*, unsigned int)+0xe>
 800b89c:	4770      	bx	lr
 800b89e:	f811 0b01 	ldrb.w	r0, [r1], #1
 800b8a2:	f803 0b01 	strb.w	r0, [r3], #1
 800b8a6:	e7f7      	b.n	800b898 <RDMHandler::HandleString(char const*, unsigned int)+0x8>

0800b8a8 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)>:
 800b8a8:	b570      	push	{r4, r5, r6, lr}
 800b8aa:	e9d0 4301 	ldrd	r4, r3, [r0, #4]
 800b8ae:	25cc      	movs	r5, #204	; 0xcc
 800b8b0:	701d      	strb	r5, [r3, #0]
 800b8b2:	7825      	ldrb	r5, [r4, #0]
 800b8b4:	705d      	strb	r5, [r3, #1]
 800b8b6:	7ba5      	ldrb	r5, [r4, #14]
 800b8b8:	73dd      	strb	r5, [r3, #15]
 800b8ba:	2500      	movs	r5, #0
 800b8bc:	745d      	strb	r5, [r3, #17]
 800b8be:	7c65      	ldrb	r5, [r4, #17]
 800b8c0:	749d      	strb	r5, [r3, #18]
 800b8c2:	7ca5      	ldrb	r5, [r4, #18]
 800b8c4:	74dd      	strb	r5, [r3, #19]
 800b8c6:	7ce5      	ldrb	r5, [r4, #19]
 800b8c8:	3501      	adds	r5, #1
 800b8ca:	751d      	strb	r5, [r3, #20]
 800b8cc:	7d25      	ldrb	r5, [r4, #20]
 800b8ce:	755d      	strb	r5, [r3, #21]
 800b8d0:	7d65      	ldrb	r5, [r4, #21]
 800b8d2:	759d      	strb	r5, [r3, #22]
 800b8d4:	b119      	cbz	r1, 800b8de <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x36>
 800b8d6:	1e4d      	subs	r5, r1, #1
 800b8d8:	2d01      	cmp	r5, #1
 800b8da:	d922      	bls.n	800b922 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x7a>
 800b8dc:	bd70      	pop	{r4, r5, r6, pc}
 800b8de:	7dda      	ldrb	r2, [r3, #23]
 800b8e0:	7419      	strb	r1, [r3, #16]
 800b8e2:	3218      	adds	r2, #24
 800b8e4:	709a      	strb	r2, [r3, #2]
 800b8e6:	4a16      	ldr	r2, [pc, #88]	; (800b940 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x98>)
 800b8e8:	f104 0108 	add.w	r1, r4, #8
 800b8ec:	6812      	ldr	r2, [r2, #0]
 800b8ee:	1cdd      	adds	r5, r3, #3
 800b8f0:	3204      	adds	r2, #4
 800b8f2:	340e      	adds	r4, #14
 800b8f4:	f811 6b01 	ldrb.w	r6, [r1], #1
 800b8f8:	f805 6b01 	strb.w	r6, [r5], #1
 800b8fc:	f812 6b01 	ldrb.w	r6, [r2], #1
 800b900:	42a1      	cmp	r1, r4
 800b902:	716e      	strb	r6, [r5, #5]
 800b904:	d1f6      	bne.n	800b8f4 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x4c>
 800b906:	2200      	movs	r2, #0
 800b908:	7899      	ldrb	r1, [r3, #2]
 800b90a:	4613      	mov	r3, r2
 800b90c:	6884      	ldr	r4, [r0, #8]
 800b90e:	428a      	cmp	r2, r1
 800b910:	eb04 0502 	add.w	r5, r4, r2
 800b914:	d30e      	bcc.n	800b934 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x8c>
 800b916:	0a1a      	lsrs	r2, r3, #8
 800b918:	702a      	strb	r2, [r5, #0]
 800b91a:	6882      	ldr	r2, [r0, #8]
 800b91c:	440a      	add	r2, r1
 800b91e:	7053      	strb	r3, [r2, #1]
 800b920:	e7dc      	b.n	800b8dc <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x34>
 800b922:	7419      	strb	r1, [r3, #16]
 800b924:	2102      	movs	r1, #2
 800b926:	251a      	movs	r5, #26
 800b928:	75d9      	strb	r1, [r3, #23]
 800b92a:	0a11      	lsrs	r1, r2, #8
 800b92c:	709d      	strb	r5, [r3, #2]
 800b92e:	7619      	strb	r1, [r3, #24]
 800b930:	765a      	strb	r2, [r3, #25]
 800b932:	e7d8      	b.n	800b8e6 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x3e>
 800b934:	5ca5      	ldrb	r5, [r4, r2]
 800b936:	3201      	adds	r2, #1
 800b938:	442b      	add	r3, r5
 800b93a:	b29b      	uxth	r3, r3
 800b93c:	e7e7      	b.n	800b90e <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x66>
 800b93e:	bf00      	nop
 800b940:	2000c2a0 	andcs	ip, r0, r0, lsr #5

0800b944 <RDMHandler::RespondMessageAck()>:
 800b944:	6843      	ldr	r3, [r0, #4]
 800b946:	7d9a      	ldrb	r2, [r3, #22]
 800b948:	b90a      	cbnz	r2, 800b94e <RDMHandler::RespondMessageAck()+0xa>
 800b94a:	2218      	movs	r2, #24
 800b94c:	705a      	strb	r2, [r3, #1]
 800b94e:	2200      	movs	r2, #0
 800b950:	4611      	mov	r1, r2
 800b952:	f7ff bfa9 	b.w	800b8a8 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)>
	...

0800b958 <RDMHandler::GetDeviceInfo(unsigned short)>:
 800b958:	b538      	push	{r3, r4, r5, lr}
 800b95a:	4b18      	ldr	r3, [pc, #96]	; (800b9bc <RDMHandler::GetDeviceInfo(unsigned short)+0x64>)
 800b95c:	4605      	mov	r5, r0
 800b95e:	681c      	ldr	r4, [r3, #0]
 800b960:	b349      	cbz	r1, 800b9b6 <RDMHandler::GetDeviceInfo(unsigned short)+0x5e>
 800b962:	f104 0088 	add.w	r0, r4, #136	; 0x88
 800b966:	f7ff fc85 	bl	800b274 <RDMSubDevices::GetInfo(unsigned short)>
 800b96a:	b1b8      	cbz	r0, 800b99c <RDMHandler::GetDeviceInfo(unsigned short)+0x44>
 800b96c:	8803      	ldrh	r3, [r0, #0]
 800b96e:	0a1b      	lsrs	r3, r3, #8
 800b970:	f884 30b6 	strb.w	r3, [r4, #182]	; 0xb6
 800b974:	8803      	ldrh	r3, [r0, #0]
 800b976:	f884 30b7 	strb.w	r3, [r4, #183]	; 0xb7
 800b97a:	7903      	ldrb	r3, [r0, #4]
 800b97c:	f884 30b8 	strb.w	r3, [r4, #184]	; 0xb8
 800b980:	7943      	ldrb	r3, [r0, #5]
 800b982:	f884 30b9 	strb.w	r3, [r4, #185]	; 0xb9
 800b986:	8843      	ldrh	r3, [r0, #2]
 800b988:	0a1b      	lsrs	r3, r3, #8
 800b98a:	f884 30ba 	strb.w	r3, [r4, #186]	; 0xba
 800b98e:	8843      	ldrh	r3, [r0, #2]
 800b990:	f884 30bb 	strb.w	r3, [r4, #187]	; 0xbb
 800b994:	f890 3027 	ldrb.w	r3, [r0, #39]	; 0x27
 800b998:	f884 30be 	strb.w	r3, [r4, #190]	; 0xbe
 800b99c:	f104 01ac 	add.w	r1, r4, #172	; 0xac
 800b9a0:	2213      	movs	r2, #19
 800b9a2:	68a8      	ldr	r0, [r5, #8]
 800b9a4:	75c2      	strb	r2, [r0, #23]
 800b9a6:	3018      	adds	r0, #24
 800b9a8:	f7ff fedc 	bl	800b764 <memcpy.isra.0>
 800b9ac:	4628      	mov	r0, r5
 800b9ae:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800b9b2:	f7ff bfc7 	b.w	800b944 <RDMHandler::RespondMessageAck()>
 800b9b6:	f104 0199 	add.w	r1, r4, #153	; 0x99
 800b9ba:	e7f1      	b.n	800b9a0 <RDMHandler::GetDeviceInfo(unsigned short)+0x48>
 800b9bc:	2000c2a0 	andcs	ip, r0, r0, lsr #5

0800b9c0 <RDMHandler::GetFactoryDefaults(unsigned short)>:
 800b9c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b9c2:	2301      	movs	r3, #1
 800b9c4:	6886      	ldr	r6, [r0, #8]
 800b9c6:	4605      	mov	r5, r0
 800b9c8:	75f3      	strb	r3, [r6, #23]
 800b9ca:	4b1c      	ldr	r3, [pc, #112]	; (800ba3c <RDMHandler::GetFactoryDefaults(unsigned short)+0x7c>)
 800b9cc:	681c      	ldr	r4, [r3, #0]
 800b9ce:	f894 30c1 	ldrb.w	r3, [r4, #193]	; 0xc1
 800b9d2:	b37b      	cbz	r3, 800ba34 <RDMHandler::GetFactoryDefaults(unsigned short)+0x74>
 800b9d4:	f06f 0c0d 	mvn.w	ip, #13
 800b9d8:	f8b4 1076 	ldrh.w	r1, [r4, #118]	; 0x76
 800b9dc:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800b9e0:	f894 002e 	ldrb.w	r0, [r4, #46]	; 0x2e
 800b9e4:	f104 020e 	add.w	r2, r4, #14
 800b9e8:	ebac 0c04 	sub.w	ip, ip, r4
 800b9ec:	eb0c 0702 	add.w	r7, ip, r2
 800b9f0:	4287      	cmp	r7, r0
 800b9f2:	d30a      	bcc.n	800ba0a <RDMHandler::GetFactoryDefaults(unsigned short)+0x4a>
 800b9f4:	4299      	cmp	r1, r3
 800b9f6:	d00d      	beq.n	800ba14 <RDMHandler::GetFactoryDefaults(unsigned short)+0x54>
 800b9f8:	2300      	movs	r3, #0
 800b9fa:	f884 30c1 	strb.w	r3, [r4, #193]	; 0xc1
 800b9fe:	7633      	strb	r3, [r6, #24]
 800ba00:	4628      	mov	r0, r5
 800ba02:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800ba06:	f7ff bf9d 	b.w	800b944 <RDMHandler::RespondMessageAck()>
 800ba0a:	f812 7b01 	ldrb.w	r7, [r2], #1
 800ba0e:	443b      	add	r3, r7
 800ba10:	b29b      	uxth	r3, r3
 800ba12:	e7eb      	b.n	800b9ec <RDMHandler::GetFactoryDefaults(unsigned short)+0x2c>
 800ba14:	f894 30a8 	ldrb.w	r3, [r4, #168]	; 0xa8
 800ba18:	f894 10a5 	ldrb.w	r1, [r4, #165]	; 0xa5
 800ba1c:	f8b4 20c2 	ldrh.w	r2, [r4, #194]	; 0xc2
 800ba20:	440b      	add	r3, r1
 800ba22:	429a      	cmp	r2, r3
 800ba24:	d1e8      	bne.n	800b9f8 <RDMHandler::GetFactoryDefaults(unsigned short)+0x38>
 800ba26:	f104 0088 	add.w	r0, r4, #136	; 0x88
 800ba2a:	f7ff fc41 	bl	800b2b0 <RDMSubDevices::GetFactoryDefaults()>
 800ba2e:	4603      	mov	r3, r0
 800ba30:	2800      	cmp	r0, #0
 800ba32:	d0e2      	beq.n	800b9fa <RDMHandler::GetFactoryDefaults(unsigned short)+0x3a>
 800ba34:	f894 30c1 	ldrb.w	r3, [r4, #193]	; 0xc1
 800ba38:	e7e1      	b.n	800b9fe <RDMHandler::GetFactoryDefaults(unsigned short)+0x3e>
 800ba3a:	bf00      	nop
 800ba3c:	2000c2a0 	andcs	ip, r0, r0, lsr #5

0800ba40 <RDMHandler::GetDeviceModelDescription(unsigned short)>:
 800ba40:	b510      	push	{r4, lr}
 800ba42:	4604      	mov	r4, r0
 800ba44:	2209      	movs	r2, #9
 800ba46:	4904      	ldr	r1, [pc, #16]	; (800ba58 <RDMHandler::GetDeviceModelDescription(unsigned short)+0x18>)
 800ba48:	f7ff ff22 	bl	800b890 <RDMHandler::HandleString(char const*, unsigned int)>
 800ba4c:	4620      	mov	r0, r4
 800ba4e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ba52:	f7ff bf77 	b.w	800b944 <RDMHandler::RespondMessageAck()>
 800ba56:	bf00      	nop
 800ba58:	08015946 	stmdaeq	r1, {r1, r2, r6, r8, fp, ip, lr}

0800ba5c <RDMHandler::GetManufacturerLabel(unsigned short)>:
 800ba5c:	b510      	push	{r4, lr}
 800ba5e:	4604      	mov	r4, r0
 800ba60:	4b05      	ldr	r3, [pc, #20]	; (800ba78 <RDMHandler::GetManufacturerLabel(unsigned short)+0x1c>)
 800ba62:	6819      	ldr	r1, [r3, #0]
 800ba64:	f891 204f 	ldrb.w	r2, [r1, #79]	; 0x4f
 800ba68:	312f      	adds	r1, #47	; 0x2f
 800ba6a:	f7ff ff11 	bl	800b890 <RDMHandler::HandleString(char const*, unsigned int)>
 800ba6e:	4620      	mov	r0, r4
 800ba70:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ba74:	f7ff bf66 	b.w	800b944 <RDMHandler::RespondMessageAck()>
 800ba78:	2000c2a0 	andcs	ip, r0, r0, lsr #5

0800ba7c <RDMHandler::GetDeviceLabel(unsigned short)>:
 800ba7c:	4b0d      	ldr	r3, [pc, #52]	; (800bab4 <RDMHandler::GetDeviceLabel(unsigned short)+0x38>)
 800ba7e:	b513      	push	{r0, r1, r4, lr}
 800ba80:	4604      	mov	r4, r0
 800ba82:	6818      	ldr	r0, [r3, #0]
 800ba84:	b171      	cbz	r1, 800baa4 <RDMHandler::GetDeviceLabel(unsigned short)+0x28>
 800ba86:	466a      	mov	r2, sp
 800ba88:	3088      	adds	r0, #136	; 0x88
 800ba8a:	f7ff fbfb 	bl	800b284 <RDMSubDevices::GetLabel(unsigned short, TRDMDeviceInfoData*)>
 800ba8e:	4620      	mov	r0, r4
 800ba90:	f89d 2004 	ldrb.w	r2, [sp, #4]
 800ba94:	9900      	ldr	r1, [sp, #0]
 800ba96:	f7ff fefb 	bl	800b890 <RDMHandler::HandleString(char const*, unsigned int)>
 800ba9a:	4620      	mov	r0, r4
 800ba9c:	f7ff ff52 	bl	800b944 <RDMHandler::RespondMessageAck()>
 800baa0:	b002      	add	sp, #8
 800baa2:	bd10      	pop	{r4, pc}
 800baa4:	f100 030e 	add.w	r3, r0, #14
 800baa8:	9300      	str	r3, [sp, #0]
 800baaa:	f890 302e 	ldrb.w	r3, [r0, #46]	; 0x2e
 800baae:	f88d 3004 	strb.w	r3, [sp, #4]
 800bab2:	e7ec      	b.n	800ba8e <RDMHandler::GetDeviceLabel(unsigned short)+0x12>
 800bab4:	2000c2a0 	andcs	ip, r0, r0, lsr #5

0800bab8 <RDMHandler::GetIdentifyDevice(unsigned short)>:
 800bab8:	2201      	movs	r2, #1
 800baba:	6883      	ldr	r3, [r0, #8]
 800babc:	75da      	strb	r2, [r3, #23]
 800babe:	4a02      	ldr	r2, [pc, #8]	; (800bac8 <RDMHandler::GetIdentifyDevice(unsigned short)+0x10>)
 800bac0:	7812      	ldrb	r2, [r2, #0]
 800bac2:	761a      	strb	r2, [r3, #24]
 800bac4:	f7ff bf3e 	b.w	800b944 <RDMHandler::RespondMessageAck()>
 800bac8:	2000c2a4 	andcs	ip, r0, r4, lsr #5

0800bacc <RDMHandler::RespondMessageNack(unsigned short)>:
 800bacc:	460a      	mov	r2, r1
 800bace:	2102      	movs	r1, #2
 800bad0:	f7ff beea 	b.w	800b8a8 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)>

0800bad4 <RDMHandler::SetResetDevice(bool, unsigned short)>:
 800bad4:	b510      	push	{r4, lr}
 800bad6:	6843      	ldr	r3, [r0, #4]
 800bad8:	4604      	mov	r4, r0
 800bada:	7d9a      	ldrb	r2, [r3, #22]
 800badc:	2a01      	cmp	r2, #1
 800bade:	d004      	beq.n	800baea <RDMHandler::SetResetDevice(bool, unsigned short)+0x16>
 800bae0:	2101      	movs	r1, #1
 800bae2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bae6:	f7ff bff1 	b.w	800bacc <RDMHandler::RespondMessageNack(unsigned short)>
 800baea:	7ddb      	ldrb	r3, [r3, #23]
 800baec:	2b01      	cmp	r3, #1
 800baee:	d003      	beq.n	800baf8 <RDMHandler::SetResetDevice(bool, unsigned short)+0x24>
 800baf0:	2bff      	cmp	r3, #255	; 0xff
 800baf2:	d001      	beq.n	800baf8 <RDMHandler::SetResetDevice(bool, unsigned short)+0x24>
 800baf4:	2106      	movs	r1, #6
 800baf6:	e7f4      	b.n	800bae2 <RDMHandler::SetResetDevice(bool, unsigned short)+0xe>
 800baf8:	2100      	movs	r1, #0
 800bafa:	68a2      	ldr	r2, [r4, #8]
 800bafc:	2bff      	cmp	r3, #255	; 0xff
 800bafe:	75d1      	strb	r1, [r2, #23]
 800bb00:	d102      	bne.n	800bb08 <RDMHandler::SetResetDevice(bool, unsigned short)+0x34>
 800bb02:	2104      	movs	r1, #4
 800bb04:	4620      	mov	r0, r4
 800bb06:	e7ec      	b.n	800bae2 <RDMHandler::SetResetDevice(bool, unsigned short)+0xe>
 800bb08:	4b03      	ldr	r3, [pc, #12]	; (800bb18 <RDMHandler::SetResetDevice(bool, unsigned short)+0x44>)
 800bb0a:	6818      	ldr	r0, [r3, #0]
 800bb0c:	f007 fc54 	bl	80133b8 <Hardware::Reboot()>
 800bb10:	2800      	cmp	r0, #0
 800bb12:	d0f6      	beq.n	800bb02 <RDMHandler::SetResetDevice(bool, unsigned short)+0x2e>
 800bb14:	bd10      	pop	{r4, pc}
 800bb16:	bf00      	nop
 800bb18:	2001ce38 	andcs	ip, r1, r8, lsr lr

0800bb1c <RDMHandler::SetIdentifyDevice(bool, unsigned short)>:
 800bb1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800bb1e:	6843      	ldr	r3, [r0, #4]
 800bb20:	460d      	mov	r5, r1
 800bb22:	7d99      	ldrb	r1, [r3, #22]
 800bb24:	4604      	mov	r4, r0
 800bb26:	2901      	cmp	r1, #1
 800bb28:	d004      	beq.n	800bb34 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x18>
 800bb2a:	2101      	movs	r1, #1
 800bb2c:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800bb30:	f7ff bfcc 	b.w	800bacc <RDMHandler::RespondMessageNack(unsigned short)>
 800bb34:	7ddb      	ldrb	r3, [r3, #23]
 800bb36:	2b01      	cmp	r3, #1
 800bb38:	d901      	bls.n	800bb3e <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x22>
 800bb3a:	2106      	movs	r1, #6
 800bb3c:	e7f6      	b.n	800bb2c <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x10>
 800bb3e:	4a12      	ldr	r2, [pc, #72]	; (800bb88 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x6c>)
 800bb40:	4f12      	ldr	r7, [pc, #72]	; (800bb8c <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x70>)
 800bb42:	6816      	ldr	r6, [r2, #0]
 800bb44:	4a12      	ldr	r2, [pc, #72]	; (800bb90 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x74>)
 800bb46:	6810      	ldr	r0, [r2, #0]
 800bb48:	4a12      	ldr	r2, [pc, #72]	; (800bb94 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x78>)
 800bb4a:	b983      	cbnz	r3, 800bb6e <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x52>
 800bb4c:	2102      	movs	r1, #2
 800bb4e:	7013      	strb	r3, [r2, #0]
 800bb50:	f007 fb8e 	bl	8013270 <LedBlink::SetMode(ledblink::Mode)>
 800bb54:	7839      	ldrb	r1, [r7, #0]
 800bb56:	b111      	cbz	r1, 800bb5e <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x42>
 800bb58:	4630      	mov	r0, r6
 800bb5a:	f000 f9ac 	bl	800beb6 <RDMIdentify::Off(rdm::identify::Mode)>
 800bb5e:	b98d      	cbnz	r5, 800bb84 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x68>
 800bb60:	68a3      	ldr	r3, [r4, #8]
 800bb62:	4620      	mov	r0, r4
 800bb64:	75dd      	strb	r5, [r3, #23]
 800bb66:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800bb6a:	f7ff beeb 	b.w	800b944 <RDMHandler::RespondMessageAck()>
 800bb6e:	7011      	strb	r1, [r2, #0]
 800bb70:	2104      	movs	r1, #4
 800bb72:	f007 fb7d 	bl	8013270 <LedBlink::SetMode(ledblink::Mode)>
 800bb76:	7839      	ldrb	r1, [r7, #0]
 800bb78:	2900      	cmp	r1, #0
 800bb7a:	d0f0      	beq.n	800bb5e <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x42>
 800bb7c:	4630      	mov	r0, r6
 800bb7e:	f000 f999 	bl	800beb4 <RDMIdentify::On(rdm::identify::Mode)>
 800bb82:	e7ec      	b.n	800bb5e <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x42>
 800bb84:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800bb86:	bf00      	nop
 800bb88:	2000c2a8 	andcs	ip, r0, r8, lsr #5
 800bb8c:	2000c2a5 	andcs	ip, r0, r5, lsr #5
 800bb90:	2001ce34 	andcs	ip, r1, r4, lsr lr
 800bb94:	2000c2a4 	andcs	ip, r0, r4, lsr #5

0800bb98 <RDMHandler::SetFactoryDefaults(bool, unsigned short)>:
 800bb98:	b538      	push	{r3, r4, r5, lr}
 800bb9a:	6843      	ldr	r3, [r0, #4]
 800bb9c:	4604      	mov	r4, r0
 800bb9e:	7d9b      	ldrb	r3, [r3, #22]
 800bba0:	460d      	mov	r5, r1
 800bba2:	b123      	cbz	r3, 800bbae <RDMHandler::SetFactoryDefaults(bool, unsigned short)+0x16>
 800bba4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800bba8:	2101      	movs	r1, #1
 800bbaa:	f7ff bf8f 	b.w	800bacc <RDMHandler::RespondMessageNack(unsigned short)>
 800bbae:	4b06      	ldr	r3, [pc, #24]	; (800bbc8 <RDMHandler::SetFactoryDefaults(bool, unsigned short)+0x30>)
 800bbb0:	6818      	ldr	r0, [r3, #0]
 800bbb2:	f7ff fde1 	bl	800b778 <RDMDeviceResponder::SetFactoryDefaults()>
 800bbb6:	b935      	cbnz	r5, 800bbc6 <RDMHandler::SetFactoryDefaults(bool, unsigned short)+0x2e>
 800bbb8:	68a3      	ldr	r3, [r4, #8]
 800bbba:	4620      	mov	r0, r4
 800bbbc:	75dd      	strb	r5, [r3, #23]
 800bbbe:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800bbc2:	f7ff bebf 	b.w	800b944 <RDMHandler::RespondMessageAck()>
 800bbc6:	bd38      	pop	{r3, r4, r5, pc}
 800bbc8:	2000c2a0 	andcs	ip, r0, r0, lsr #5

0800bbcc <RDMHandler::SetDeviceLabel(bool, unsigned short)>:
 800bbcc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800bbce:	6845      	ldr	r5, [r0, #4]
 800bbd0:	460e      	mov	r6, r1
 800bbd2:	7dab      	ldrb	r3, [r5, #22]
 800bbd4:	4604      	mov	r4, r0
 800bbd6:	2b20      	cmp	r3, #32
 800bbd8:	4611      	mov	r1, r2
 800bbda:	d905      	bls.n	800bbe8 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x1c>
 800bbdc:	2101      	movs	r1, #1
 800bbde:	b002      	add	sp, #8
 800bbe0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bbe4:	f7ff bf72 	b.w	800bacc <RDMHandler::RespondMessageNack(unsigned short)>
 800bbe8:	4a0d      	ldr	r2, [pc, #52]	; (800bc20 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x54>)
 800bbea:	6810      	ldr	r0, [r2, #0]
 800bbec:	f105 0217 	add.w	r2, r5, #23
 800bbf0:	b159      	cbz	r1, 800bc0a <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x3e>
 800bbf2:	3088      	adds	r0, #136	; 0x88
 800bbf4:	f7ff fb4f 	bl	800b296 <RDMSubDevices::SetLabel(unsigned short, char const*, unsigned char)>
 800bbf8:	b97e      	cbnz	r6, 800bc1a <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x4e>
 800bbfa:	4620      	mov	r0, r4
 800bbfc:	68a3      	ldr	r3, [r4, #8]
 800bbfe:	75de      	strb	r6, [r3, #23]
 800bc00:	b002      	add	sp, #8
 800bc02:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bc06:	f7ff be9d 	b.w	800b944 <RDMHandler::RespondMessageAck()>
 800bc0a:	4669      	mov	r1, sp
 800bc0c:	3004      	adds	r0, #4
 800bc0e:	9200      	str	r2, [sp, #0]
 800bc10:	f88d 3004 	strb.w	r3, [sp, #4]
 800bc14:	f7ff fc37 	bl	800b486 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>
 800bc18:	e7ee      	b.n	800bbf8 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x2c>
 800bc1a:	b002      	add	sp, #8
 800bc1c:	bd70      	pop	{r4, r5, r6, pc}
 800bc1e:	bf00      	nop
 800bc20:	2000c2a0 	andcs	ip, r0, r0, lsr #5

0800bc24 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)>:
 800bc24:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800bc28:	4616      	mov	r6, r2
 800bc2a:	2700      	movs	r7, #0
 800bc2c:	f006 04ef 	and.w	r4, r6, #239	; 0xef
 800bc30:	2c20      	cmp	r4, #32
 800bc32:	46be      	mov	lr, r7
 800bc34:	f89d 801c 	ldrb.w	r8, [sp, #28]
 800bc38:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 800bc3c:	d004      	beq.n	800bc48 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x24>
 800bc3e:	2105      	movs	r1, #5
 800bc40:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800bc44:	f7ff bf42 	b.w	800bacc <RDMHandler::RespondMessageNack(unsigned short)>
 800bc48:	4c2d      	ldr	r4, [pc, #180]	; (800bd00 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xdc>)
 800bc4a:	6824      	ldr	r4, [r4, #0]
 800bc4c:	88a4      	ldrh	r4, [r4, #4]
 800bc4e:	4294      	cmp	r4, r2
 800bc50:	d205      	bcs.n	800bc5e <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x3a>
 800bc52:	f64f 74ff 	movw	r4, #65535	; 0xffff
 800bc56:	42a2      	cmp	r2, r4
 800bc58:	d001      	beq.n	800bc5e <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x3a>
 800bc5a:	2109      	movs	r1, #9
 800bc5c:	e7f0      	b.n	800bc40 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1c>
 800bc5e:	f04f 0c14 	mov.w	ip, #20
 800bc62:	2400      	movs	r4, #0
 800bc64:	4d27      	ldr	r5, [pc, #156]	; (800bd04 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xe0>)
 800bc66:	f8b5 9000 	ldrh.w	r9, [r5]
 800bc6a:	4599      	cmp	r9, r3
 800bc6c:	bf02      	ittt	eq
 800bc6e:	462c      	moveq	r4, r5
 800bc70:	7daf      	ldrbeq	r7, [r5, #22]
 800bc72:	f895 e017 	ldrbeq.w	lr, [r5, #23]
 800bc76:	f1bc 0c01 	subs.w	ip, ip, #1
 800bc7a:	f105 0518 	add.w	r5, r5, #24
 800bc7e:	d1f2      	bne.n	800bc66 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x42>
 800bc80:	b90c      	cbnz	r4, 800bc86 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x62>
 800bc82:	2100      	movs	r1, #0
 800bc84:	e7dc      	b.n	800bc40 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1c>
 800bc86:	7803      	ldrb	r3, [r0, #0]
 800bc88:	b19b      	cbz	r3, 800bcb2 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x8e>
 800bc8a:	2f00      	cmp	r7, #0
 800bc8c:	d0f9      	beq.n	800bc82 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x5e>
 800bc8e:	2e20      	cmp	r6, #32
 800bc90:	d121      	bne.n	800bcd6 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xb2>
 800bc92:	2900      	cmp	r1, #0
 800bc94:	d131      	bne.n	800bcfa <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xd6>
 800bc96:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800bc9a:	429a      	cmp	r2, r3
 800bc9c:	d0dd      	beq.n	800bc5a <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x36>
 800bc9e:	6863      	ldr	r3, [r4, #4]
 800bca0:	b913      	cbnz	r3, 800bca8 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x84>
 800bca2:	68a1      	ldr	r1, [r4, #8]
 800bca4:	07cd      	lsls	r5, r1, #31
 800bca6:	d5ca      	bpl.n	800bc3e <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1a>
 800bca8:	7d21      	ldrb	r1, [r4, #20]
 800bcaa:	4541      	cmp	r1, r8
 800bcac:	d005      	beq.n	800bcba <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x96>
 800bcae:	2101      	movs	r1, #1
 800bcb0:	e7c6      	b.n	800bc40 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1c>
 800bcb2:	f1be 0f00 	cmp.w	lr, #0
 800bcb6:	d1ea      	bne.n	800bc8e <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x6a>
 800bcb8:	e7e3      	b.n	800bc82 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x5e>
 800bcba:	68a1      	ldr	r1, [r4, #8]
 800bcbc:	eb00 0461 	add.w	r4, r0, r1, asr #1
 800bcc0:	104d      	asrs	r5, r1, #1
 800bcc2:	07c9      	lsls	r1, r1, #31
 800bcc4:	bf48      	it	mi
 800bcc6:	5941      	ldrmi	r1, [r0, r5]
 800bcc8:	4620      	mov	r0, r4
 800bcca:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800bcce:	bf48      	it	mi
 800bcd0:	58cb      	ldrmi	r3, [r1, r3]
 800bcd2:	4611      	mov	r1, r2
 800bcd4:	4718      	bx	r3
 800bcd6:	e9d4 5303 	ldrd	r5, r3, [r4, #12]
 800bcda:	f003 0401 	and.w	r4, r3, #1
 800bcde:	b90d      	cbnz	r5, 800bce4 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xc0>
 800bce0:	2c00      	cmp	r4, #0
 800bce2:	d0ac      	beq.n	800bc3e <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1a>
 800bce4:	105e      	asrs	r6, r3, #1
 800bce6:	eb00 0363 	add.w	r3, r0, r3, asr #1
 800bcea:	b10c      	cbz	r4, 800bcf0 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xcc>
 800bcec:	5980      	ldr	r0, [r0, r6]
 800bcee:	5945      	ldr	r5, [r0, r5]
 800bcf0:	4618      	mov	r0, r3
 800bcf2:	462b      	mov	r3, r5
 800bcf4:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800bcf8:	4718      	bx	r3
 800bcfa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800bcfe:	bf00      	nop
 800bd00:	2000c29c 	mulcs	r0, ip, r2
 800bd04:	08015d6c 	stmdaeq	r1, {r2, r3, r5, r6, r8, sl, fp, ip, lr}

0800bd08 <RDMHandler::HandleData(unsigned char const*, unsigned char*)>:
 800bd08:	23ff      	movs	r3, #255	; 0xff
 800bd0a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bd0e:	7013      	strb	r3, [r2, #0]
 800bd10:	e9c0 1201 	strd	r1, r2, [r0, #4]
 800bd14:	7d0b      	ldrb	r3, [r1, #20]
 800bd16:	f891 8015 	ldrb.w	r8, [r1, #21]
 800bd1a:	f101 0902 	add.w	r9, r1, #2
 800bd1e:	eb08 2803 	add.w	r8, r8, r3, lsl #8
 800bd22:	4b5e      	ldr	r3, [pc, #376]	; (800be9c <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x194>)
 800bd24:	b085      	sub	sp, #20
 800bd26:	681b      	ldr	r3, [r3, #0]
 800bd28:	4607      	mov	r7, r0
 800bd2a:	460d      	mov	r5, r1
 800bd2c:	4614      	mov	r4, r2
 800bd2e:	4648      	mov	r0, r9
 800bd30:	2206      	movs	r2, #6
 800bd32:	f891 a013 	ldrb.w	sl, [r1, #19]
 800bd36:	495a      	ldr	r1, [pc, #360]	; (800bea0 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x198>)
 800bd38:	1d1e      	adds	r6, r3, #4
 800bd3a:	9303      	str	r3, [sp, #12]
 800bd3c:	f7ff fd02 	bl	800b744 <memcmp>
 800bd40:	2202      	movs	r2, #2
 800bd42:	4683      	mov	fp, r0
 800bd44:	4631      	mov	r1, r6
 800bd46:	4648      	mov	r0, r9
 800bd48:	fa1f f888 	uxth.w	r8, r8
 800bd4c:	f7ff fcfa 	bl	800b744 <memcmp>
 800bd50:	b928      	cbnz	r0, 800bd5e <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x56>
 800bd52:	2204      	movs	r2, #4
 800bd54:	4952      	ldr	r1, [pc, #328]	; (800bea0 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x198>)
 800bd56:	18a8      	adds	r0, r5, r2
 800bd58:	f7ff fcf4 	bl	800b744 <memcmp>
 800bd5c:	b160      	cbz	r0, 800bd78 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x70>
 800bd5e:	4631      	mov	r1, r6
 800bd60:	2206      	movs	r2, #6
 800bd62:	4648      	mov	r0, r9
 800bd64:	f7ff fcee 	bl	800b744 <memcmp>
 800bd68:	4601      	mov	r1, r0
 800bd6a:	b130      	cbz	r0, 800bd7a <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x72>
 800bd6c:	f1bb 0f00 	cmp.w	fp, #0
 800bd70:	d04b      	beq.n	800be0a <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x102>
 800bd72:	b005      	add	sp, #20
 800bd74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bd78:	2101      	movs	r1, #1
 800bd7a:	2301      	movs	r3, #1
 800bd7c:	f1ba 0f10 	cmp.w	sl, #16
 800bd80:	d17a      	bne.n	800be78 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x170>
 800bd82:	f1b8 0f01 	cmp.w	r8, #1
 800bd86:	d143      	bne.n	800be10 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x108>
 800bd88:	787b      	ldrb	r3, [r7, #1]
 800bd8a:	2b00      	cmp	r3, #0
 800bd8c:	d1f1      	bne.n	800bd72 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x6a>
 800bd8e:	2206      	movs	r2, #6
 800bd90:	4631      	mov	r1, r6
 800bd92:	f105 0017 	add.w	r0, r5, #23
 800bd96:	f7ff fcd5 	bl	800b744 <memcmp>
 800bd9a:	2800      	cmp	r0, #0
 800bd9c:	dce9      	bgt.n	800bd72 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x6a>
 800bd9e:	2206      	movs	r2, #6
 800bda0:	4630      	mov	r0, r6
 800bda2:	f105 011d 	add.w	r1, r5, #29
 800bda6:	f7ff fccd 	bl	800b744 <memcmp>
 800bdaa:	2800      	cmp	r0, #0
 800bdac:	dce1      	bgt.n	800bd72 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x6a>
 800bdae:	23fe      	movs	r3, #254	; 0xfe
 800bdb0:	7023      	strb	r3, [r4, #0]
 800bdb2:	7063      	strb	r3, [r4, #1]
 800bdb4:	70a3      	strb	r3, [r4, #2]
 800bdb6:	70e3      	strb	r3, [r4, #3]
 800bdb8:	7123      	strb	r3, [r4, #4]
 800bdba:	7163      	strb	r3, [r4, #5]
 800bdbc:	71a3      	strb	r3, [r4, #6]
 800bdbe:	23aa      	movs	r3, #170	; 0xaa
 800bdc0:	71e3      	strb	r3, [r4, #7]
 800bdc2:	9b03      	ldr	r3, [sp, #12]
 800bdc4:	4622      	mov	r2, r4
 800bdc6:	f103 090a 	add.w	r9, r3, #10
 800bdca:	f240 53fa 	movw	r3, #1530	; 0x5fa
 800bdce:	7831      	ldrb	r1, [r6, #0]
 800bdd0:	3202      	adds	r2, #2
 800bdd2:	f061 0155 	orn	r1, r1, #85	; 0x55
 800bdd6:	7191      	strb	r1, [r2, #6]
 800bdd8:	f816 1b01 	ldrb.w	r1, [r6], #1
 800bddc:	f041 0155 	orr.w	r1, r1, #85	; 0x55
 800bde0:	71d1      	strb	r1, [r2, #7]
 800bde2:	f816 1c01 	ldrb.w	r1, [r6, #-1]
 800bde6:	454e      	cmp	r6, r9
 800bde8:	440b      	add	r3, r1
 800bdea:	b29b      	uxth	r3, r3
 800bdec:	d1ef      	bne.n	800bdce <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0xc6>
 800bdee:	0a1a      	lsrs	r2, r3, #8
 800bdf0:	f062 0155 	orn	r1, r2, #85	; 0x55
 800bdf4:	f042 0255 	orr.w	r2, r2, #85	; 0x55
 800bdf8:	7562      	strb	r2, [r4, #21]
 800bdfa:	f063 0255 	orn	r2, r3, #85	; 0x55
 800bdfe:	f043 0355 	orr.w	r3, r3, #85	; 0x55
 800be02:	7521      	strb	r1, [r4, #20]
 800be04:	75a2      	strb	r2, [r4, #22]
 800be06:	75e3      	strb	r3, [r4, #23]
 800be08:	e7b3      	b.n	800bd72 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x6a>
 800be0a:	4659      	mov	r1, fp
 800be0c:	465b      	mov	r3, fp
 800be0e:	e7b5      	b.n	800bd7c <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x74>
 800be10:	f1b8 0f03 	cmp.w	r8, #3
 800be14:	d11a      	bne.n	800be4c <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x144>
 800be16:	7daa      	ldrb	r2, [r5, #22]
 800be18:	2a00      	cmp	r2, #0
 800be1a:	d1aa      	bne.n	800bd72 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x6a>
 800be1c:	707a      	strb	r2, [r7, #1]
 800be1e:	f1bb 0f00 	cmp.w	fp, #0
 800be22:	d0a6      	beq.n	800bd72 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x6a>
 800be24:	2b00      	cmp	r3, #0
 800be26:	d0a4      	beq.n	800bd72 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x6a>
 800be28:	2302      	movs	r3, #2
 800be2a:	75e3      	strb	r3, [r4, #23]
 800be2c:	4b1d      	ldr	r3, [pc, #116]	; (800bea4 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x19c>)
 800be2e:	7622      	strb	r2, [r4, #24]
 800be30:	681b      	ldr	r3, [r3, #0]
 800be32:	7662      	strb	r2, [r4, #25]
 800be34:	889b      	ldrh	r3, [r3, #4]
 800be36:	3b00      	subs	r3, #0
 800be38:	bf18      	it	ne
 800be3a:	2301      	movne	r3, #1
 800be3c:	005b      	lsls	r3, r3, #1
 800be3e:	4638      	mov	r0, r7
 800be40:	7663      	strb	r3, [r4, #25]
 800be42:	b005      	add	sp, #20
 800be44:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800be48:	f7ff bd7c 	b.w	800b944 <RDMHandler::RespondMessageAck()>
 800be4c:	f1b8 0f02 	cmp.w	r8, #2
 800be50:	d18f      	bne.n	800bd72 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x6a>
 800be52:	7daa      	ldrb	r2, [r5, #22]
 800be54:	2a00      	cmp	r2, #0
 800be56:	d18c      	bne.n	800bd72 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x6a>
 800be58:	2101      	movs	r1, #1
 800be5a:	7079      	strb	r1, [r7, #1]
 800be5c:	2b00      	cmp	r3, #0
 800be5e:	d088      	beq.n	800bd72 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x6a>
 800be60:	4b10      	ldr	r3, [pc, #64]	; (800bea4 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x19c>)
 800be62:	f884 8017 	strb.w	r8, [r4, #23]
 800be66:	681b      	ldr	r3, [r3, #0]
 800be68:	7622      	strb	r2, [r4, #24]
 800be6a:	7662      	strb	r2, [r4, #25]
 800be6c:	889b      	ldrh	r3, [r3, #4]
 800be6e:	3b00      	subs	r3, #0
 800be70:	bf18      	it	ne
 800be72:	2301      	movne	r3, #1
 800be74:	408b      	lsls	r3, r1
 800be76:	e7e2      	b.n	800be3e <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x136>
 800be78:	7c6a      	ldrb	r2, [r5, #17]
 800be7a:	7cab      	ldrb	r3, [r5, #18]
 800be7c:	f1bb 0f00 	cmp.w	fp, #0
 800be80:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 800be84:	b29b      	uxth	r3, r3
 800be86:	9301      	str	r3, [sp, #4]
 800be88:	7dab      	ldrb	r3, [r5, #22]
 800be8a:	4652      	mov	r2, sl
 800be8c:	9300      	str	r3, [sp, #0]
 800be8e:	bf08      	it	eq
 800be90:	2101      	moveq	r1, #1
 800be92:	4643      	mov	r3, r8
 800be94:	4638      	mov	r0, r7
 800be96:	f7ff fec5 	bl	800bc24 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)>
 800be9a:	e76a      	b.n	800bd72 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x6a>
 800be9c:	2000c2a0 	andcs	ip, r0, r0, lsr #5
 800bea0:	08015d64 	stmdaeq	r1, {r2, r5, r6, r8, sl, fp, ip, lr}
 800bea4:	2000c29c 	mulcs	r0, ip, r2

0800bea8 <RDMIdentify::RDMIdentify()>:
 800bea8:	4b01      	ldr	r3, [pc, #4]	; (800beb0 <RDMIdentify::RDMIdentify()+0x8>)
 800beaa:	6018      	str	r0, [r3, #0]
 800beac:	4770      	bx	lr
 800beae:	bf00      	nop
 800beb0:	2000c2a8 	andcs	ip, r0, r8, lsr #5

0800beb4 <RDMIdentify::On(rdm::identify::Mode)>:
 800beb4:	4770      	bx	lr

0800beb6 <RDMIdentify::Off(rdm::identify::Mode)>:
 800beb6:	4770      	bx	lr

0800beb8 <memcpy.constprop.0.isra.0>:
 800beb8:	3801      	subs	r0, #1
 800beba:	1d0b      	adds	r3, r1, #4
 800bebc:	4299      	cmp	r1, r3
 800bebe:	d100      	bne.n	800bec2 <memcpy.constprop.0.isra.0+0xa>
 800bec0:	4770      	bx	lr
 800bec2:	f811 2b01 	ldrb.w	r2, [r1], #1
 800bec6:	f800 2f01 	strb.w	r2, [r0, #1]!
 800beca:	e7f7      	b.n	800bebc <memcpy.constprop.0.isra.0+0x4>

0800becc <RDMHandler::GetInterfaceList(unsigned short)>:
 800becc:	4a08      	ldr	r2, [pc, #32]	; (800bef0 <RDMHandler::GetInterfaceList(unsigned short)+0x24>)
 800bece:	6883      	ldr	r3, [r0, #8]
 800bed0:	6812      	ldr	r2, [r2, #0]
 800bed2:	6852      	ldr	r2, [r2, #4]
 800bed4:	0e11      	lsrs	r1, r2, #24
 800bed6:	7619      	strb	r1, [r3, #24]
 800bed8:	0c11      	lsrs	r1, r2, #16
 800beda:	7659      	strb	r1, [r3, #25]
 800bedc:	76da      	strb	r2, [r3, #27]
 800bede:	0a11      	lsrs	r1, r2, #8
 800bee0:	2200      	movs	r2, #0
 800bee2:	771a      	strb	r2, [r3, #28]
 800bee4:	2206      	movs	r2, #6
 800bee6:	7699      	strb	r1, [r3, #26]
 800bee8:	775a      	strb	r2, [r3, #29]
 800beea:	75da      	strb	r2, [r3, #23]
 800beec:	f7ff bd2a 	b.w	800b944 <RDMHandler::RespondMessageAck()>
 800bef0:	2001c710 	andcs	ip, r1, r0, lsl r7

0800bef4 <RDMHandler::GetInterfaceName(unsigned short)>:
 800bef4:	b538      	push	{r3, r4, r5, lr}
 800bef6:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800befa:	4604      	mov	r4, r0
 800befc:	3117      	adds	r1, #23
 800befe:	f105 0018 	add.w	r0, r5, #24
 800bf02:	f7ff ffd9 	bl	800beb8 <memcpy.constprop.0.isra.0>
 800bf06:	4a0d      	ldr	r2, [pc, #52]	; (800bf3c <RDMHandler::GetInterfaceName(unsigned short)+0x48>)
 800bf08:	f105 001c 	add.w	r0, r5, #28
 800bf0c:	6813      	ldr	r3, [r2, #0]
 800bf0e:	33a2      	adds	r3, #162	; 0xa2
 800bf10:	f813 1b01 	ldrb.w	r1, [r3], #1
 800bf14:	f800 1b01 	strb.w	r1, [r0], #1
 800bf18:	2900      	cmp	r1, #0
 800bf1a:	d1f9      	bne.n	800bf10 <RDMHandler::GetInterfaceName(unsigned short)+0x1c>
 800bf1c:	6812      	ldr	r2, [r2, #0]
 800bf1e:	32a2      	adds	r2, #162	; 0xa2
 800bf20:	4611      	mov	r1, r2
 800bf22:	460b      	mov	r3, r1
 800bf24:	7818      	ldrb	r0, [r3, #0]
 800bf26:	3101      	adds	r1, #1
 800bf28:	2800      	cmp	r0, #0
 800bf2a:	d1fa      	bne.n	800bf22 <RDMHandler::GetInterfaceName(unsigned short)+0x2e>
 800bf2c:	1a9b      	subs	r3, r3, r2
 800bf2e:	3304      	adds	r3, #4
 800bf30:	75eb      	strb	r3, [r5, #23]
 800bf32:	4620      	mov	r0, r4
 800bf34:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800bf38:	f7ff bd04 	b.w	800b944 <RDMHandler::RespondMessageAck()>
 800bf3c:	2001c710 	andcs	ip, r1, r0, lsl r7

0800bf40 <RDMHandler::GetHardwareAddress(unsigned short)>:
 800bf40:	b538      	push	{r3, r4, r5, lr}
 800bf42:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800bf46:	4604      	mov	r4, r0
 800bf48:	3117      	adds	r1, #23
 800bf4a:	f105 0018 	add.w	r0, r5, #24
 800bf4e:	f7ff ffb3 	bl	800beb8 <memcpy.constprop.0.isra.0>
 800bf52:	4b06      	ldr	r3, [pc, #24]	; (800bf6c <RDMHandler::GetHardwareAddress(unsigned short)+0x2c>)
 800bf54:	f105 011c 	add.w	r1, r5, #28
 800bf58:	6818      	ldr	r0, [r3, #0]
 800bf5a:	f004 fe47 	bl	8010bec <Network::MacAddressCopyTo(unsigned char*)>
 800bf5e:	230a      	movs	r3, #10
 800bf60:	75eb      	strb	r3, [r5, #23]
 800bf62:	4620      	mov	r0, r4
 800bf64:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800bf68:	f7ff bcec 	b.w	800b944 <RDMHandler::RespondMessageAck()>
 800bf6c:	2001c710 	andcs	ip, r1, r0, lsl r7

0800bf70 <RDMHandler::GetDHCPMode(unsigned short)>:
 800bf70:	b538      	push	{r3, r4, r5, lr}
 800bf72:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800bf76:	4604      	mov	r4, r0
 800bf78:	3117      	adds	r1, #23
 800bf7a:	f105 0018 	add.w	r0, r5, #24
 800bf7e:	f7ff ff9b 	bl	800beb8 <memcpy.constprop.0.isra.0>
 800bf82:	4b05      	ldr	r3, [pc, #20]	; (800bf98 <RDMHandler::GetDHCPMode(unsigned short)+0x28>)
 800bf84:	4620      	mov	r0, r4
 800bf86:	681b      	ldr	r3, [r3, #0]
 800bf88:	785b      	ldrb	r3, [r3, #1]
 800bf8a:	772b      	strb	r3, [r5, #28]
 800bf8c:	2305      	movs	r3, #5
 800bf8e:	75eb      	strb	r3, [r5, #23]
 800bf90:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800bf94:	f7ff bcd6 	b.w	800b944 <RDMHandler::RespondMessageAck()>
 800bf98:	2001c710 	andcs	ip, r1, r0, lsl r7

0800bf9c <RDMHandler::SetDHCPMode(bool, unsigned short)>:
 800bf9c:	4b10      	ldr	r3, [pc, #64]	; (800bfe0 <RDMHandler::SetDHCPMode(bool, unsigned short)+0x44>)
 800bf9e:	b510      	push	{r4, lr}
 800bfa0:	681b      	ldr	r3, [r3, #0]
 800bfa2:	4604      	mov	r4, r0
 800bfa4:	7819      	ldrb	r1, [r3, #0]
 800bfa6:	6842      	ldr	r2, [r0, #4]
 800bfa8:	b921      	cbnz	r1, 800bfb4 <RDMHandler::SetDHCPMode(bool, unsigned short)+0x18>
 800bfaa:	210b      	movs	r1, #11
 800bfac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bfb0:	f7ff bd8c 	b.w	800bacc <RDMHandler::RespondMessageNack(unsigned short)>
 800bfb4:	7ed2      	ldrb	r2, [r2, #27]
 800bfb6:	2a01      	cmp	r2, #1
 800bfb8:	d109      	bne.n	800bfce <RDMHandler::SetDHCPMode(bool, unsigned short)+0x32>
 800bfba:	f8d3 20bc 	ldr.w	r2, [r3, #188]	; 0xbc
 800bfbe:	f042 0204 	orr.w	r2, r2, #4
 800bfc2:	f8c3 20bc 	str.w	r2, [r3, #188]	; 0xbc
 800bfc6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bfca:	f7ff bcbb 	b.w	800b944 <RDMHandler::RespondMessageAck()>
 800bfce:	b92a      	cbnz	r2, 800bfdc <RDMHandler::SetDHCPMode(bool, unsigned short)+0x40>
 800bfd0:	4618      	mov	r0, r3
 800bfd2:	4611      	mov	r1, r2
 800bfd4:	f005 f830 	bl	8011038 <Network::SetQueuedStaticIp(unsigned int, unsigned int)>
 800bfd8:	4620      	mov	r0, r4
 800bfda:	e7f4      	b.n	800bfc6 <RDMHandler::SetDHCPMode(bool, unsigned short)+0x2a>
 800bfdc:	2106      	movs	r1, #6
 800bfde:	e7e5      	b.n	800bfac <RDMHandler::SetDHCPMode(bool, unsigned short)+0x10>
 800bfe0:	2001c710 	andcs	ip, r1, r0, lsl r7

0800bfe4 <RDMHandler::GetNameServers(unsigned short)>:
 800bfe4:	6842      	ldr	r2, [r0, #4]
 800bfe6:	7dd2      	ldrb	r2, [r2, #23]
 800bfe8:	2a02      	cmp	r2, #2
 800bfea:	d902      	bls.n	800bff2 <RDMHandler::GetNameServers(unsigned short)+0xe>
 800bfec:	2106      	movs	r1, #6
 800bfee:	f7ff bd6d 	b.w	800bacc <RDMHandler::RespondMessageNack(unsigned short)>
 800bff2:	2200      	movs	r2, #0
 800bff4:	6883      	ldr	r3, [r0, #8]
 800bff6:	765a      	strb	r2, [r3, #25]
 800bff8:	769a      	strb	r2, [r3, #26]
 800bffa:	76da      	strb	r2, [r3, #27]
 800bffc:	771a      	strb	r2, [r3, #28]
 800bffe:	2205      	movs	r2, #5
 800c000:	75da      	strb	r2, [r3, #23]
 800c002:	f7ff bc9f 	b.w	800b944 <RDMHandler::RespondMessageAck()>
	...

0800c008 <RDMHandler::GetZeroconf(unsigned short)>:
 800c008:	b538      	push	{r3, r4, r5, lr}
 800c00a:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800c00e:	4604      	mov	r4, r0
 800c010:	3117      	adds	r1, #23
 800c012:	f105 0018 	add.w	r0, r5, #24
 800c016:	f7ff ff4f 	bl	800beb8 <memcpy.constprop.0.isra.0>
 800c01a:	4b06      	ldr	r3, [pc, #24]	; (800c034 <RDMHandler::GetZeroconf(unsigned short)+0x2c>)
 800c01c:	681a      	ldr	r2, [r3, #0]
 800c01e:	7893      	ldrb	r3, [r2, #2]
 800c020:	b103      	cbz	r3, 800c024 <RDMHandler::GetZeroconf(unsigned short)+0x1c>
 800c022:	78d3      	ldrb	r3, [r2, #3]
 800c024:	772b      	strb	r3, [r5, #28]
 800c026:	2305      	movs	r3, #5
 800c028:	75eb      	strb	r3, [r5, #23]
 800c02a:	4620      	mov	r0, r4
 800c02c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c030:	f7ff bc88 	b.w	800b944 <RDMHandler::RespondMessageAck()>
 800c034:	2001c710 	andcs	ip, r1, r0, lsl r7

0800c038 <RDMHandler::SetZeroconf(bool, unsigned short)>:
 800c038:	4b10      	ldr	r3, [pc, #64]	; (800c07c <RDMHandler::SetZeroconf(bool, unsigned short)+0x44>)
 800c03a:	b510      	push	{r4, lr}
 800c03c:	681b      	ldr	r3, [r3, #0]
 800c03e:	4604      	mov	r4, r0
 800c040:	7899      	ldrb	r1, [r3, #2]
 800c042:	6842      	ldr	r2, [r0, #4]
 800c044:	b921      	cbnz	r1, 800c050 <RDMHandler::SetZeroconf(bool, unsigned short)+0x18>
 800c046:	210b      	movs	r1, #11
 800c048:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c04c:	f7ff bd3e 	b.w	800bacc <RDMHandler::RespondMessageNack(unsigned short)>
 800c050:	7ed2      	ldrb	r2, [r2, #27]
 800c052:	2a01      	cmp	r2, #1
 800c054:	d109      	bne.n	800c06a <RDMHandler::SetZeroconf(bool, unsigned short)+0x32>
 800c056:	f8d3 20bc 	ldr.w	r2, [r3, #188]	; 0xbc
 800c05a:	f042 0208 	orr.w	r2, r2, #8
 800c05e:	f8c3 20bc 	str.w	r2, [r3, #188]	; 0xbc
 800c062:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c066:	f7ff bc6d 	b.w	800b944 <RDMHandler::RespondMessageAck()>
 800c06a:	b92a      	cbnz	r2, 800c078 <RDMHandler::SetZeroconf(bool, unsigned short)+0x40>
 800c06c:	4618      	mov	r0, r3
 800c06e:	4611      	mov	r1, r2
 800c070:	f004 ffe2 	bl	8011038 <Network::SetQueuedStaticIp(unsigned int, unsigned int)>
 800c074:	4620      	mov	r0, r4
 800c076:	e7f4      	b.n	800c062 <RDMHandler::SetZeroconf(bool, unsigned short)+0x2a>
 800c078:	2106      	movs	r1, #6
 800c07a:	e7e5      	b.n	800c048 <RDMHandler::SetZeroconf(bool, unsigned short)+0x10>
 800c07c:	2001c710 	andcs	ip, r1, r0, lsl r7

0800c080 <RDMHandler::RenewDhcp(bool, unsigned short)>:
 800c080:	4b09      	ldr	r3, [pc, #36]	; (800c0a8 <RDMHandler::RenewDhcp(bool, unsigned short)+0x28>)
 800c082:	b510      	push	{r4, lr}
 800c084:	681b      	ldr	r3, [r3, #0]
 800c086:	4604      	mov	r4, r0
 800c088:	785a      	ldrb	r2, [r3, #1]
 800c08a:	b922      	cbnz	r2, 800c096 <RDMHandler::RenewDhcp(bool, unsigned short)+0x16>
 800c08c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c090:	210b      	movs	r1, #11
 800c092:	f7ff bd1b 	b.w	800bacc <RDMHandler::RespondMessageNack(unsigned short)>
 800c096:	4618      	mov	r0, r3
 800c098:	f004 ff84 	bl	8010fa4 <Network::EnableDhcp()>
 800c09c:	4620      	mov	r0, r4
 800c09e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c0a2:	f7ff bc4f 	b.w	800b944 <RDMHandler::RespondMessageAck()>
 800c0a6:	bf00      	nop
 800c0a8:	2001c710 	andcs	ip, r1, r0, lsl r7

0800c0ac <RDMHandler::GetAddressNetmask(unsigned short)>:
 800c0ac:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c0ae:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800c0b2:	4e0f      	ldr	r6, [pc, #60]	; (800c0f0 <RDMHandler::GetAddressNetmask(unsigned short)+0x44>)
 800c0b4:	4604      	mov	r4, r0
 800c0b6:	6833      	ldr	r3, [r6, #0]
 800c0b8:	f105 0018 	add.w	r0, r5, #24
 800c0bc:	691b      	ldr	r3, [r3, #16]
 800c0be:	3117      	adds	r1, #23
 800c0c0:	9301      	str	r3, [sp, #4]
 800c0c2:	f7ff fef9 	bl	800beb8 <memcpy.constprop.0.isra.0>
 800c0c6:	a901      	add	r1, sp, #4
 800c0c8:	f105 001c 	add.w	r0, r5, #28
 800c0cc:	f7ff fef4 	bl	800beb8 <memcpy.constprop.0.isra.0>
 800c0d0:	6836      	ldr	r6, [r6, #0]
 800c0d2:	69b0      	ldr	r0, [r6, #24]
 800c0d4:	f009 fb4e 	bl	8015774 <__popcountsi2>
 800c0d8:	f885 0020 	strb.w	r0, [r5, #32]
 800c0dc:	7873      	ldrb	r3, [r6, #1]
 800c0de:	4620      	mov	r0, r4
 800c0e0:	f885 3021 	strb.w	r3, [r5, #33]	; 0x21
 800c0e4:	230a      	movs	r3, #10
 800c0e6:	75eb      	strb	r3, [r5, #23]
 800c0e8:	f7ff fc2c 	bl	800b944 <RDMHandler::RespondMessageAck()>
 800c0ec:	b002      	add	sp, #8
 800c0ee:	bd70      	pop	{r4, r5, r6, pc}
 800c0f0:	2001c710 	andcs	ip, r1, r0, lsl r7

0800c0f4 <RDMHandler::GetStaticAddress(unsigned short)>:
 800c0f4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c0f6:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800c0fa:	4e0e      	ldr	r6, [pc, #56]	; (800c134 <RDMHandler::GetStaticAddress(unsigned short)+0x40>)
 800c0fc:	4604      	mov	r4, r0
 800c0fe:	6833      	ldr	r3, [r6, #0]
 800c100:	f105 0018 	add.w	r0, r5, #24
 800c104:	691b      	ldr	r3, [r3, #16]
 800c106:	3117      	adds	r1, #23
 800c108:	9301      	str	r3, [sp, #4]
 800c10a:	f7ff fed5 	bl	800beb8 <memcpy.constprop.0.isra.0>
 800c10e:	a901      	add	r1, sp, #4
 800c110:	f105 001c 	add.w	r0, r5, #28
 800c114:	f7ff fed0 	bl	800beb8 <memcpy.constprop.0.isra.0>
 800c118:	6833      	ldr	r3, [r6, #0]
 800c11a:	6998      	ldr	r0, [r3, #24]
 800c11c:	f009 fb2a 	bl	8015774 <__popcountsi2>
 800c120:	2309      	movs	r3, #9
 800c122:	f885 0020 	strb.w	r0, [r5, #32]
 800c126:	75eb      	strb	r3, [r5, #23]
 800c128:	4620      	mov	r0, r4
 800c12a:	f7ff fc0b 	bl	800b944 <RDMHandler::RespondMessageAck()>
 800c12e:	b002      	add	sp, #8
 800c130:	bd70      	pop	{r4, r5, r6, pc}
 800c132:	bf00      	nop
 800c134:	2001c710 	andcs	ip, r1, r0, lsl r7

0800c138 <RDMHandler::SetStaticAddress(bool, unsigned short)>:
 800c138:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c13a:	6845      	ldr	r5, [r0, #4]
 800c13c:	4604      	mov	r4, r0
 800c13e:	7dab      	ldrb	r3, [r5, #22]
 800c140:	2b09      	cmp	r3, #9
 800c142:	d005      	beq.n	800c150 <RDMHandler::SetStaticAddress(bool, unsigned short)+0x18>
 800c144:	2101      	movs	r1, #1
 800c146:	b003      	add	sp, #12
 800c148:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800c14c:	f7ff bcbe 	b.w	800bacc <RDMHandler::RespondMessageNack(unsigned short)>
 800c150:	f105 011b 	add.w	r1, r5, #27
 800c154:	a801      	add	r0, sp, #4
 800c156:	f7ff feaf 	bl	800beb8 <memcpy.constprop.0.isra.0>
 800c15a:	4b09      	ldr	r3, [pc, #36]	; (800c180 <RDMHandler::SetStaticAddress(bool, unsigned short)+0x48>)
 800c15c:	7fea      	ldrb	r2, [r5, #31]
 800c15e:	6818      	ldr	r0, [r3, #0]
 800c160:	9901      	ldr	r1, [sp, #4]
 800c162:	b12a      	cbz	r2, 800c170 <RDMHandler::SetStaticAddress(bool, unsigned short)+0x38>
 800c164:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800c168:	f1c2 0220 	rsb	r2, r2, #32
 800c16c:	4093      	lsls	r3, r2
 800c16e:	ba1a      	rev	r2, r3
 800c170:	f004 ff62 	bl	8011038 <Network::SetQueuedStaticIp(unsigned int, unsigned int)>
 800c174:	4620      	mov	r0, r4
 800c176:	f7ff fbe5 	bl	800b944 <RDMHandler::RespondMessageAck()>
 800c17a:	b003      	add	sp, #12
 800c17c:	bd30      	pop	{r4, r5, pc}
 800c17e:	bf00      	nop
 800c180:	2001c710 	andcs	ip, r1, r0, lsl r7

0800c184 <RDMHandler::ApplyConfiguration(bool, unsigned short)>:
 800c184:	4b08      	ldr	r3, [pc, #32]	; (800c1a8 <RDMHandler::ApplyConfiguration(bool, unsigned short)+0x24>)
 800c186:	b510      	push	{r4, lr}
 800c188:	4604      	mov	r4, r0
 800c18a:	6818      	ldr	r0, [r3, #0]
 800c18c:	f004 ff61 	bl	8011052 <Network::ApplyQueuedConfig()>
 800c190:	b120      	cbz	r0, 800c19c <RDMHandler::ApplyConfiguration(bool, unsigned short)+0x18>
 800c192:	4620      	mov	r0, r4
 800c194:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c198:	f7ff bbd4 	b.w	800b944 <RDMHandler::RespondMessageAck()>
 800c19c:	4620      	mov	r0, r4
 800c19e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c1a2:	2101      	movs	r1, #1
 800c1a4:	f7ff bc92 	b.w	800bacc <RDMHandler::RespondMessageNack(unsigned short)>
 800c1a8:	2001c710 	andcs	ip, r1, r0, lsl r7

0800c1ac <RDMHandler::GetDefaultRoute(unsigned short)>:
 800c1ac:	4b0c      	ldr	r3, [pc, #48]	; (800c1e0 <RDMHandler::GetDefaultRoute(unsigned short)+0x34>)
 800c1ae:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c1b0:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800c1b4:	681b      	ldr	r3, [r3, #0]
 800c1b6:	4604      	mov	r4, r0
 800c1b8:	695b      	ldr	r3, [r3, #20]
 800c1ba:	f105 0018 	add.w	r0, r5, #24
 800c1be:	3117      	adds	r1, #23
 800c1c0:	9301      	str	r3, [sp, #4]
 800c1c2:	f7ff fe79 	bl	800beb8 <memcpy.constprop.0.isra.0>
 800c1c6:	a901      	add	r1, sp, #4
 800c1c8:	f105 001c 	add.w	r0, r5, #28
 800c1cc:	f7ff fe74 	bl	800beb8 <memcpy.constprop.0.isra.0>
 800c1d0:	2308      	movs	r3, #8
 800c1d2:	4620      	mov	r0, r4
 800c1d4:	75eb      	strb	r3, [r5, #23]
 800c1d6:	f7ff fbb5 	bl	800b944 <RDMHandler::RespondMessageAck()>
 800c1da:	b003      	add	sp, #12
 800c1dc:	bd30      	pop	{r4, r5, pc}
 800c1de:	bf00      	nop
 800c1e0:	2001c710 	andcs	ip, r1, r0, lsl r7

0800c1e4 <RDMHandler::SetDefaultRoute(bool, unsigned short)>:
 800c1e4:	210b      	movs	r1, #11
 800c1e6:	f7ff bc71 	b.w	800bacc <RDMHandler::RespondMessageNack(unsigned short)>
	...

0800c1ec <RDMHandler::GetHostName(unsigned short)>:
 800c1ec:	4b0a      	ldr	r3, [pc, #40]	; (800c218 <RDMHandler::GetHostName(unsigned short)+0x2c>)
 800c1ee:	b510      	push	{r4, lr}
 800c1f0:	6819      	ldr	r1, [r3, #0]
 800c1f2:	4604      	mov	r4, r0
 800c1f4:	311c      	adds	r1, #28
 800c1f6:	460b      	mov	r3, r1
 800c1f8:	461a      	mov	r2, r3
 800c1fa:	7810      	ldrb	r0, [r2, #0]
 800c1fc:	3301      	adds	r3, #1
 800c1fe:	2800      	cmp	r0, #0
 800c200:	d1fa      	bne.n	800c1f8 <RDMHandler::GetHostName(unsigned short)+0xc>
 800c202:	1a52      	subs	r2, r2, r1
 800c204:	4620      	mov	r0, r4
 800c206:	b292      	uxth	r2, r2
 800c208:	f7ff fb42 	bl	800b890 <RDMHandler::HandleString(char const*, unsigned int)>
 800c20c:	4620      	mov	r0, r4
 800c20e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c212:	f7ff bb97 	b.w	800b944 <RDMHandler::RespondMessageAck()>
 800c216:	bf00      	nop
 800c218:	2001c710 	andcs	ip, r1, r0, lsl r7

0800c21c <RDMHandler::SetHostName(bool, unsigned short)>:
 800c21c:	b510      	push	{r4, lr}
 800c21e:	6841      	ldr	r1, [r0, #4]
 800c220:	4604      	mov	r4, r0
 800c222:	7d8b      	ldrb	r3, [r1, #22]
 800c224:	2b3f      	cmp	r3, #63	; 0x3f
 800c226:	d904      	bls.n	800c232 <RDMHandler::SetHostName(bool, unsigned short)+0x16>
 800c228:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c22c:	2102      	movs	r1, #2
 800c22e:	f7ff bc4d 	b.w	800bacc <RDMHandler::RespondMessageNack(unsigned short)>
 800c232:	2200      	movs	r2, #0
 800c234:	440b      	add	r3, r1
 800c236:	75da      	strb	r2, [r3, #23]
 800c238:	4b04      	ldr	r3, [pc, #16]	; (800c24c <RDMHandler::SetHostName(bool, unsigned short)+0x30>)
 800c23a:	3117      	adds	r1, #23
 800c23c:	6818      	ldr	r0, [r3, #0]
 800c23e:	f004 fe6f 	bl	8010f20 <Network::SetHostName(char const*)>
 800c242:	4620      	mov	r0, r4
 800c244:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c248:	f7ff bb7c 	b.w	800b944 <RDMHandler::RespondMessageAck()>
 800c24c:	2001c710 	andcs	ip, r1, r0, lsl r7

0800c250 <RDMHandler::GetDomainName(unsigned short)>:
 800c250:	4b0a      	ldr	r3, [pc, #40]	; (800c27c <RDMHandler::GetDomainName(unsigned short)+0x2c>)
 800c252:	b510      	push	{r4, lr}
 800c254:	6819      	ldr	r1, [r3, #0]
 800c256:	4604      	mov	r4, r0
 800c258:	315c      	adds	r1, #92	; 0x5c
 800c25a:	460b      	mov	r3, r1
 800c25c:	461a      	mov	r2, r3
 800c25e:	7810      	ldrb	r0, [r2, #0]
 800c260:	3301      	adds	r3, #1
 800c262:	2800      	cmp	r0, #0
 800c264:	d1fa      	bne.n	800c25c <RDMHandler::GetDomainName(unsigned short)+0xc>
 800c266:	1a52      	subs	r2, r2, r1
 800c268:	4620      	mov	r0, r4
 800c26a:	b292      	uxth	r2, r2
 800c26c:	f7ff fb10 	bl	800b890 <RDMHandler::HandleString(char const*, unsigned int)>
 800c270:	4620      	mov	r0, r4
 800c272:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c276:	f7ff bb65 	b.w	800b944 <RDMHandler::RespondMessageAck()>
 800c27a:	bf00      	nop
 800c27c:	2001c710 	andcs	ip, r1, r0, lsl r7

0800c280 <RDMHandler::SetDomainName(bool, unsigned short)>:
 800c280:	210b      	movs	r1, #11
 800c282:	f7ff bc23 	b.w	800bacc <RDMHandler::RespondMessageNack(unsigned short)>
	...

0800c288 <RDMDevice::RDMDevice()>:
 800c288:	4a33      	ldr	r2, [pc, #204]	; (800c358 <RDMDevice::RDMDevice()+0xd0>)
 800c28a:	2300      	movs	r3, #0
 800c28c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c28e:	4604      	mov	r4, r0
 800c290:	4611      	mov	r1, r2
 800c292:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
 800c296:	f880 3071 	strb.w	r3, [r0, #113]	; 0x71
 800c29a:	f8a0 3072 	strh.w	r3, [r0, #114]	; 0x72
 800c29e:	6743      	str	r3, [r0, #116]	; 0x74
 800c2a0:	4613      	mov	r3, r2
 800c2a2:	7818      	ldrb	r0, [r3, #0]
 800c2a4:	3201      	adds	r2, #1
 800c2a6:	2800      	cmp	r0, #0
 800c2a8:	d1fa      	bne.n	800c2a0 <RDMDevice::RDMDevice()+0x18>
 800c2aa:	1a5b      	subs	r3, r3, r1
 800c2ac:	2b20      	cmp	r3, #32
 800c2ae:	bf28      	it	cs
 800c2b0:	2320      	movcs	r3, #32
 800c2b2:	f104 052b 	add.w	r5, r4, #43	; 0x2b
 800c2b6:	4629      	mov	r1, r5
 800c2b8:	461a      	mov	r2, r3
 800c2ba:	4827      	ldr	r0, [pc, #156]	; (800c358 <RDMDevice::RDMDevice()+0xd0>)
 800c2bc:	3a01      	subs	r2, #1
 800c2be:	d23b      	bcs.n	800c338 <RDMDevice::RDMDevice()+0xb0>
 800c2c0:	f884 304b 	strb.w	r3, [r4, #75]	; 0x4b
 800c2c4:	4b25      	ldr	r3, [pc, #148]	; (800c35c <RDMDevice::RDMDevice()+0xd4>)
 800c2c6:	4669      	mov	r1, sp
 800c2c8:	781a      	ldrb	r2, [r3, #0]
 800c2ca:	7022      	strb	r2, [r4, #0]
 800c2cc:	785b      	ldrb	r3, [r3, #1]
 800c2ce:	7063      	strb	r3, [r4, #1]
 800c2d0:	4b23      	ldr	r3, [pc, #140]	; (800c360 <RDMDevice::RDMDevice()+0xd8>)
 800c2d2:	6818      	ldr	r0, [r3, #0]
 800c2d4:	f004 fc8a 	bl	8010bec <Network::MacAddressCopyTo(unsigned char*)>
 800c2d8:	f89d 3002 	ldrb.w	r3, [sp, #2]
 800c2dc:	f89d 2003 	ldrb.w	r2, [sp, #3]
 800c2e0:	70a3      	strb	r3, [r4, #2]
 800c2e2:	7263      	strb	r3, [r4, #9]
 800c2e4:	4b1f      	ldr	r3, [pc, #124]	; (800c364 <RDMDevice::RDMDevice()+0xdc>)
 800c2e6:	70e2      	strb	r2, [r4, #3]
 800c2e8:	7222      	strb	r2, [r4, #8]
 800c2ea:	461a      	mov	r2, r3
 800c2ec:	f89d 1004 	ldrb.w	r1, [sp, #4]
 800c2f0:	f89d 0005 	ldrb.w	r0, [sp, #5]
 800c2f4:	7121      	strb	r1, [r4, #4]
 800c2f6:	7160      	strb	r0, [r4, #5]
 800c2f8:	71a0      	strb	r0, [r4, #6]
 800c2fa:	71e1      	strb	r1, [r4, #7]
 800c2fc:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800c300:	2900      	cmp	r1, #0
 800c302:	d1fb      	bne.n	800c2fc <RDMDevice::RDMDevice()+0x74>
 800c304:	1a9b      	subs	r3, r3, r2
 800c306:	2b20      	cmp	r3, #32
 800c308:	bf28      	it	cs
 800c30a:	2320      	movcs	r3, #32
 800c30c:	461a      	mov	r2, r3
 800c30e:	4915      	ldr	r1, [pc, #84]	; (800c364 <RDMDevice::RDMDevice()+0xdc>)
 800c310:	3a01      	subs	r2, #1
 800c312:	d216      	bcs.n	800c342 <RDMDevice::RDMDevice()+0xba>
 800c314:	f884 304b 	strb.w	r3, [r4, #75]	; 0x4b
 800c318:	f06f 2380 	mvn.w	r3, #2147516416	; 0x80008000
 800c31c:	64e3      	str	r3, [r4, #76]	; 0x4c
 800c31e:	2314      	movs	r3, #20
 800c320:	4a11      	ldr	r2, [pc, #68]	; (800c368 <RDMDevice::RDMDevice()+0xe0>)
 800c322:	f884 3071 	strb.w	r3, [r4, #113]	; 0x71
 800c326:	f104 0165 	add.w	r1, r4, #101	; 0x65
 800c32a:	f104 0351 	add.w	r3, r4, #81	; 0x51
 800c32e:	4299      	cmp	r1, r3
 800c330:	d10c      	bne.n	800c34c <RDMDevice::RDMDevice()+0xc4>
 800c332:	4620      	mov	r0, r4
 800c334:	b002      	add	sp, #8
 800c336:	bd70      	pop	{r4, r5, r6, pc}
 800c338:	f810 6b01 	ldrb.w	r6, [r0], #1
 800c33c:	f801 6b01 	strb.w	r6, [r1], #1
 800c340:	e7bc      	b.n	800c2bc <RDMDevice::RDMDevice()+0x34>
 800c342:	f811 0b01 	ldrb.w	r0, [r1], #1
 800c346:	f805 0b01 	strb.w	r0, [r5], #1
 800c34a:	e7e1      	b.n	800c310 <RDMDevice::RDMDevice()+0x88>
 800c34c:	f812 0b01 	ldrb.w	r0, [r2], #1
 800c350:	f803 0b01 	strb.w	r0, [r3], #1
 800c354:	e7eb      	b.n	800c32e <RDMDevice::RDMDevice()+0xa6>
 800c356:	bf00      	nop
 800c358:	0801604b 	stmdaeq	r1, {r0, r1, r3, r6, sp, lr}
 800c35c:	08016049 	stmdaeq	r1, {r0, r3, r6, sp, lr}
 800c360:	2001c710 	andcs	ip, r1, r0, lsl r7
 800c364:	08015f4c 	stmdaeq	r1, {r2, r3, r6, r8, r9, sl, fp, ip, lr}
 800c368:	08016034 	stmdaeq	r1, {r2, r4, r5, sp, lr}

0800c36c <RDMDevice::Print()>:
 800c36c:	b513      	push	{r0, r1, r4, lr}
 800c36e:	4604      	mov	r4, r0
 800c370:	4818      	ldr	r0, [pc, #96]	; (800c3d4 <RDMDevice::Print()+0x68>)
 800c372:	f7fd f905 	bl	8009580 <printf>
 800c376:	f894 104b 	ldrb.w	r1, [r4, #75]	; 0x4b
 800c37a:	f104 022b 	add.w	r2, r4, #43	; 0x2b
 800c37e:	4816      	ldr	r0, [pc, #88]	; (800c3d8 <RDMDevice::Print()+0x6c>)
 800c380:	f7fd f8fe 	bl	8009580 <printf>
 800c384:	7862      	ldrb	r2, [r4, #1]
 800c386:	7821      	ldrb	r1, [r4, #0]
 800c388:	4814      	ldr	r0, [pc, #80]	; (800c3dc <RDMDevice::Print()+0x70>)
 800c38a:	f7fd f8f9 	bl	8009580 <printf>
 800c38e:	79a3      	ldrb	r3, [r4, #6]
 800c390:	7a22      	ldrb	r2, [r4, #8]
 800c392:	7a61      	ldrb	r1, [r4, #9]
 800c394:	9300      	str	r3, [sp, #0]
 800c396:	4812      	ldr	r0, [pc, #72]	; (800c3e0 <RDMDevice::Print()+0x74>)
 800c398:	79e3      	ldrb	r3, [r4, #7]
 800c39a:	f7fd f8f1 	bl	8009580 <printf>
 800c39e:	f894 102a 	ldrb.w	r1, [r4, #42]	; 0x2a
 800c3a2:	f104 020a 	add.w	r2, r4, #10
 800c3a6:	480f      	ldr	r0, [pc, #60]	; (800c3e4 <RDMDevice::Print()+0x78>)
 800c3a8:	f7fd f8ea 	bl	8009580 <printf>
 800c3ac:	f8b4 104c 	ldrh.w	r1, [r4, #76]	; 0x4c
 800c3b0:	f894 204c 	ldrb.w	r2, [r4, #76]	; 0x4c
 800c3b4:	0a09      	lsrs	r1, r1, #8
 800c3b6:	480c      	ldr	r0, [pc, #48]	; (800c3e8 <RDMDevice::Print()+0x7c>)
 800c3b8:	f7fd f8e2 	bl	8009580 <printf>
 800c3bc:	f8b4 104e 	ldrh.w	r1, [r4, #78]	; 0x4e
 800c3c0:	f894 204e 	ldrb.w	r2, [r4, #78]	; 0x4e
 800c3c4:	4809      	ldr	r0, [pc, #36]	; (800c3ec <RDMDevice::Print()+0x80>)
 800c3c6:	0a09      	lsrs	r1, r1, #8
 800c3c8:	b002      	add	sp, #8
 800c3ca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c3ce:	f7fd b8d7 	b.w	8009580 <printf>
 800c3d2:	bf00      	nop
 800c3d4:	08015f60 	stmdaeq	r1, {r5, r6, r8, r9, sl, fp, ip, lr}
 800c3d8:	08015f7a 	stmdaeq	r1, {r1, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}
 800c3dc:	08015f95 	stmdaeq	r1, {r0, r2, r4, r7, r8, r9, sl, fp, ip, lr}
 800c3e0:	08015fb4 	stmdaeq	r1, {r2, r4, r5, r7, r8, r9, sl, fp, ip, lr}
 800c3e4:	08015fdb 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, r8, r9, sl, fp, ip, lr}
 800c3e8:	08015ff6 	stmdaeq	r1, {r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
 800c3ec:	08016015 	stmdaeq	r1, {r0, r2, r4, sp, lr}

0800c3f0 <WS28xxDmxMulti::SetDmxStartAddress(unsigned short)>:
 800c3f0:	2000      	movs	r0, #0
 800c3f2:	4770      	bx	lr

0800c3f4 <WS28xxDmxMulti::GetDmxStartAddress()>:
 800c3f4:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800c3f8:	4770      	bx	lr

0800c3fa <WS28xxDmxMulti::GetDmxFootprint()>:
 800c3fa:	2000      	movs	r0, #0
 800c3fc:	4770      	bx	lr

0800c3fe <WS28xxDmxMulti::Start(unsigned int)>:
 800c3fe:	b538      	push	{r3, r4, r5, lr}
 800c400:	6b03      	ldr	r3, [r0, #48]	; 0x30
 800c402:	4604      	mov	r4, r0
 800c404:	460d      	mov	r5, r1
 800c406:	b923      	cbnz	r3, 800c412 <WS28xxDmxMulti::Start(unsigned int)+0x14>
 800c408:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 800c40a:	b110      	cbz	r0, 800c412 <WS28xxDmxMulti::Start(unsigned int)+0x14>
 800c40c:	6803      	ldr	r3, [r0, #0]
 800c40e:	689b      	ldr	r3, [r3, #8]
 800c410:	4798      	blx	r3
 800c412:	2301      	movs	r3, #1
 800c414:	fa03 f105 	lsl.w	r1, r3, r5
 800c418:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800c41a:	430b      	orrs	r3, r1
 800c41c:	6323      	str	r3, [r4, #48]	; 0x30
 800c41e:	bd38      	pop	{r3, r4, r5, pc}

0800c420 <WS28xxDmxMulti::~WS28xxDmxMulti()>:
 800c420:	b538      	push	{r3, r4, r5, lr}
 800c422:	4b06      	ldr	r3, [pc, #24]	; (800c43c <WS28xxDmxMulti::~WS28xxDmxMulti()+0x1c>)
 800c424:	6a85      	ldr	r5, [r0, #40]	; 0x28
 800c426:	4604      	mov	r4, r0
 800c428:	6003      	str	r3, [r0, #0]
 800c42a:	b12d      	cbz	r5, 800c438 <WS28xxDmxMulti::~WS28xxDmxMulti()+0x18>
 800c42c:	4628      	mov	r0, r5
 800c42e:	f001 fa8d 	bl	800d94c <WS28xxMulti::~WS28xxMulti()>
 800c432:	4628      	mov	r0, r5
 800c434:	f006 fffe 	bl	8013434 <operator delete(void*)>
 800c438:	4620      	mov	r0, r4
 800c43a:	bd38      	pop	{r3, r4, r5, pc}
 800c43c:	080160b8 	stmdaeq	r1, {r3, r4, r5, r7, sp, lr}

0800c440 <WS28xxDmxMulti::~WS28xxDmxMulti()>:
 800c440:	b510      	push	{r4, lr}
 800c442:	4604      	mov	r4, r0
 800c444:	f7ff ffec 	bl	800c420 <WS28xxDmxMulti::~WS28xxDmxMulti()>
 800c448:	4620      	mov	r0, r4
 800c44a:	f006 fff3 	bl	8013434 <operator delete(void*)>
 800c44e:	4620      	mov	r0, r4
 800c450:	bd10      	pop	{r4, pc}

0800c452 <WS28xxDmxMulti::Blackout(bool)>:
 800c452:	b538      	push	{r3, r4, r5, lr}
 800c454:	4604      	mov	r4, r0
 800c456:	460d      	mov	r5, r1
 800c458:	f880 1034 	strb.w	r1, [r0, #52]	; 0x34
 800c45c:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800c45e:	f001 fb33 	bl	800dac8 <WS28xxMulti::IsUpdating()>
 800c462:	2800      	cmp	r0, #0
 800c464:	d1fa      	bne.n	800c45c <WS28xxDmxMulti::Blackout(bool)+0xa>
 800c466:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800c468:	b11d      	cbz	r5, 800c472 <WS28xxDmxMulti::Blackout(bool)+0x20>
 800c46a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c46e:	f001 bb0d 	b.w	800da8c <WS28xxMulti::Blackout()>
 800c472:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c476:	f001 ba91 	b.w	800d99c <WS28xxMulti::Update()>

0800c47a <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)>:
 800c47a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c47e:	69c4      	ldr	r4, [r0, #28]
 800c480:	b087      	sub	sp, #28
 800c482:	fbb1 faf4 	udiv	sl, r1, r4
 800c486:	fb04 141a 	mls	r4, r4, sl, r1
 800c48a:	461f      	mov	r7, r3
 800c48c:	4605      	mov	r5, r0
 800c48e:	4691      	mov	r9, r2
 800c490:	6a03      	ldr	r3, [r0, #32]
 800c492:	6946      	ldr	r6, [r0, #20]
 800c494:	9104      	str	r1, [sp, #16]
 800c496:	2c03      	cmp	r4, #3
 800c498:	d830      	bhi.n	800c4fc <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x82>
 800c49a:	e8df f004 	tbb	[pc, r4]
 800c49e:	2f2d2802 	svccs	0x002d2802
 800c4a2:	fbb7 f3f3 	udiv	r3, r7, r3
 800c4a6:	429e      	cmp	r6, r3
 800c4a8:	bf28      	it	cs
 800c4aa:	461e      	movcs	r6, r3
 800c4ac:	6aa8      	ldr	r0, [r5, #40]	; 0x28
 800c4ae:	f001 fb0b 	bl	800dac8 <WS28xxMulti::IsUpdating()>
 800c4b2:	2800      	cmp	r0, #0
 800c4b4:	d1fa      	bne.n	800c4ac <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x32>
 800c4b6:	6a2b      	ldr	r3, [r5, #32]
 800c4b8:	46c8      	mov	r8, r9
 800c4ba:	2b03      	cmp	r3, #3
 800c4bc:	d044      	beq.n	800c548 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xce>
 800c4be:	42b4      	cmp	r4, r6
 800c4c0:	d244      	bcs.n	800c54c <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xd2>
 800c4c2:	eba8 0309 	sub.w	r3, r8, r9
 800c4c6:	429f      	cmp	r7, r3
 800c4c8:	d940      	bls.n	800c54c <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xd2>
 800c4ca:	f04f 0b00 	mov.w	fp, #0
 800c4ce:	69ab      	ldr	r3, [r5, #24]
 800c4d0:	f898 f000 	pld	[r8]
 800c4d4:	4363      	muls	r3, r4
 800c4d6:	9305      	str	r3, [sp, #20]
 800c4d8:	69ab      	ldr	r3, [r5, #24]
 800c4da:	fa1f f28b 	uxth.w	r2, fp
 800c4de:	429a      	cmp	r2, r3
 800c4e0:	f10b 0b01 	add.w	fp, fp, #1
 800c4e4:	d33c      	bcc.n	800c560 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xe6>
 800c4e6:	3401      	adds	r4, #1
 800c4e8:	f108 0804 	add.w	r8, r8, #4
 800c4ec:	e7e7      	b.n	800c4be <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x44>
 800c4ee:	6844      	ldr	r4, [r0, #4]
 800c4f0:	fbb7 f3f3 	udiv	r3, r7, r3
 800c4f4:	4423      	add	r3, r4
 800c4f6:	e7d6      	b.n	800c4a6 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x2c>
 800c4f8:	6884      	ldr	r4, [r0, #8]
 800c4fa:	e7f9      	b.n	800c4f0 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x76>
 800c4fc:	68c4      	ldr	r4, [r0, #12]
 800c4fe:	e7f7      	b.n	800c4f0 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x76>
 800c500:	f898 3002 	ldrb.w	r3, [r8, #2]
 800c504:	9905      	ldr	r1, [sp, #20]
 800c506:	9301      	str	r3, [sp, #4]
 800c508:	f898 3001 	ldrb.w	r3, [r8, #1]
 800c50c:	440a      	add	r2, r1
 800c50e:	9300      	str	r3, [sp, #0]
 800c510:	4651      	mov	r1, sl
 800c512:	f898 3000 	ldrb.w	r3, [r8]
 800c516:	6aa8      	ldr	r0, [r5, #40]	; 0x28
 800c518:	f001 fb1c 	bl	800db54 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 800c51c:	e00a      	b.n	800c534 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xba>
 800c51e:	eba8 0309 	sub.w	r3, r8, r9
 800c522:	429f      	cmp	r7, r3
 800c524:	d912      	bls.n	800c54c <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xd2>
 800c526:	f04f 0b00 	mov.w	fp, #0
 800c52a:	69ab      	ldr	r3, [r5, #24]
 800c52c:	f898 f000 	pld	[r8]
 800c530:	4363      	muls	r3, r4
 800c532:	9305      	str	r3, [sp, #20]
 800c534:	69ab      	ldr	r3, [r5, #24]
 800c536:	fa1f f28b 	uxth.w	r2, fp
 800c53a:	429a      	cmp	r2, r3
 800c53c:	f10b 0b01 	add.w	fp, fp, #1
 800c540:	d3de      	bcc.n	800c500 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x86>
 800c542:	3401      	adds	r4, #1
 800c544:	f108 0803 	add.w	r8, r8, #3
 800c548:	42b4      	cmp	r4, r6
 800c54a:	d3e8      	bcc.n	800c51e <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xa4>
 800c54c:	692b      	ldr	r3, [r5, #16]
 800c54e:	9a04      	ldr	r2, [sp, #16]
 800c550:	4293      	cmp	r3, r2
 800c552:	d117      	bne.n	800c584 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x10a>
 800c554:	6aa8      	ldr	r0, [r5, #40]	; 0x28
 800c556:	b007      	add	sp, #28
 800c558:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c55c:	f001 ba1e 	b.w	800d99c <WS28xxMulti::Update()>
 800c560:	f898 3003 	ldrb.w	r3, [r8, #3]
 800c564:	9905      	ldr	r1, [sp, #20]
 800c566:	9302      	str	r3, [sp, #8]
 800c568:	f898 3002 	ldrb.w	r3, [r8, #2]
 800c56c:	440a      	add	r2, r1
 800c56e:	9301      	str	r3, [sp, #4]
 800c570:	f898 3001 	ldrb.w	r3, [r8, #1]
 800c574:	4651      	mov	r1, sl
 800c576:	9300      	str	r3, [sp, #0]
 800c578:	f898 3000 	ldrb.w	r3, [r8]
 800c57c:	6aa8      	ldr	r0, [r5, #40]	; 0x28
 800c57e:	f001 fb13 	bl	800dba8 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
 800c582:	e7a9      	b.n	800c4d8 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x5e>
 800c584:	b007      	add	sp, #28
 800c586:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0800c58c <WS28xxDmxMulti::Print()>:
 800c58c:	b510      	push	{r4, lr}
 800c58e:	4604      	mov	r4, r0
 800c590:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800c592:	f001 f9e1 	bl	800d958 <WS28xxMulti::Print()>
 800c596:	4807      	ldr	r0, [pc, #28]	; (800c5b4 <WS28xxDmxMulti::Print()+0x28>)
 800c598:	f7fc fff2 	bl	8009580 <printf>
 800c59c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800c59e:	4806      	ldr	r0, [pc, #24]	; (800c5b8 <WS28xxDmxMulti::Print()+0x2c>)
 800c5a0:	f7fc ffee 	bl	8009580 <printf>
 800c5a4:	e9d4 2105 	ldrd	r2, r1, [r4, #20]
 800c5a8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c5ac:	4803      	ldr	r0, [pc, #12]	; (800c5bc <WS28xxDmxMulti::Print()+0x30>)
 800c5ae:	f7fc bfe7 	b.w	8009580 <printf>
 800c5b2:	bf00      	nop
 800c5b4:	08016067 	stmdaeq	r1, {r0, r1, r2, r5, r6, sp, lr}
 800c5b8:	0801607d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, sp, lr}
 800c5bc:	0801608c 	stmdaeq	r1, {r2, r3, r7, sp, lr}

0800c5c0 <WS28xxDmxMulti::Stop(unsigned int)>:
 800c5c0:	6b03      	ldr	r3, [r0, #48]	; 0x30
 800c5c2:	b570      	push	{r4, r5, r6, lr}
 800c5c4:	40cb      	lsrs	r3, r1
 800c5c6:	07db      	lsls	r3, r3, #31
 800c5c8:	4604      	mov	r4, r0
 800c5ca:	460d      	mov	r5, r1
 800c5cc:	d50a      	bpl.n	800c5e4 <WS28xxDmxMulti::Stop(unsigned int)+0x24>
 800c5ce:	f44f 7300 	mov.w	r3, #512	; 0x200
 800c5d2:	4a09      	ldr	r2, [pc, #36]	; (800c5f8 <WS28xxDmxMulti::Stop(unsigned int)+0x38>)
 800c5d4:	f7ff ff51 	bl	800c47a <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)>
 800c5d8:	2201      	movs	r2, #1
 800c5da:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800c5dc:	40aa      	lsls	r2, r5
 800c5de:	ea23 0302 	bic.w	r3, r3, r2
 800c5e2:	6323      	str	r3, [r4, #48]	; 0x30
 800c5e4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800c5e6:	b933      	cbnz	r3, 800c5f6 <WS28xxDmxMulti::Stop(unsigned int)+0x36>
 800c5e8:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800c5ea:	b120      	cbz	r0, 800c5f6 <WS28xxDmxMulti::Stop(unsigned int)+0x36>
 800c5ec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c5f0:	6803      	ldr	r3, [r0, #0]
 800c5f2:	68db      	ldr	r3, [r3, #12]
 800c5f4:	4718      	bx	r3
 800c5f6:	bd70      	pop	{r4, r5, r6, pc}
 800c5f8:	2000c2ac 	andcs	ip, r0, ip, lsr #5

0800c5fc <WS28xxDmxMulti::WS28xxDmxMulti(PixelDmxConfiguration&)>:
 800c5fc:	4b16      	ldr	r3, [pc, #88]	; (800c658 <WS28xxDmxMulti::WS28xxDmxMulti(PixelDmxConfiguration&)+0x5c>)
 800c5fe:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c600:	6003      	str	r3, [r0, #0]
 800c602:	2300      	movs	r3, #0
 800c604:	460d      	mov	r5, r1
 800c606:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 800c60a:	6303      	str	r3, [r0, #48]	; 0x30
 800c60c:	f880 3034 	strb.w	r3, [r0, #52]	; 0x34
 800c610:	f100 031c 	add.w	r3, r0, #28
 800c614:	9301      	str	r3, [sp, #4]
 800c616:	f100 0314 	add.w	r3, r0, #20
 800c61a:	f100 0220 	add.w	r2, r0, #32
 800c61e:	4604      	mov	r4, r0
 800c620:	2108      	movs	r1, #8
 800c622:	9300      	str	r3, [sp, #0]
 800c624:	1d03      	adds	r3, r0, #4
 800c626:	4628      	mov	r0, r5
 800c628:	f000 fbd8 	bl	800cddc <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&, unsigned int&, unsigned int&)>
 800c62c:	2010      	movs	r0, #16
 800c62e:	f006 ff05 	bl	801343c <operator new(unsigned int)>
 800c632:	4606      	mov	r6, r0
 800c634:	4629      	mov	r1, r5
 800c636:	f001 f855 	bl	800d6e4 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)>
 800c63a:	4630      	mov	r0, r6
 800c63c:	62a6      	str	r6, [r4, #40]	; 0x28
 800c63e:	f001 fa25 	bl	800da8c <WS28xxMulti::Blackout()>
 800c642:	69ab      	ldr	r3, [r5, #24]
 800c644:	4628      	mov	r0, r5
 800c646:	61a3      	str	r3, [r4, #24]
 800c648:	696b      	ldr	r3, [r5, #20]
 800c64a:	6263      	str	r3, [r4, #36]	; 0x24
 800c64c:	f000 fc1b 	bl	800ce86 <PixelDmxConfiguration::Dump()>
 800c650:	4620      	mov	r0, r4
 800c652:	b002      	add	sp, #8
 800c654:	bd70      	pop	{r4, r5, r6, pc}
 800c656:	bf00      	nop
 800c658:	080160b8 	stmdaeq	r1, {r3, r4, r5, r7, sp, lr}

0800c65c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>:
 800c65c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c65e:	88c6      	ldrh	r6, [r0, #6]
 800c660:	8885      	ldrh	r5, [r0, #4]
 800c662:	42ae      	cmp	r6, r5
 800c664:	d216      	bcs.n	800c694 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x38>
 800c666:	4604      	mov	r4, r0
 800c668:	6800      	ldr	r0, [r0, #0]
 800c66a:	1bad      	subs	r5, r5, r6
 800c66c:	4430      	add	r0, r6
 800c66e:	7a26      	ldrb	r6, [r4, #8]
 800c670:	b923      	cbnz	r3, 800c67c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x20>
 800c672:	b926      	cbnz	r6, 800c67e <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x22>
 800c674:	9200      	str	r2, [sp, #0]
 800c676:	460b      	mov	r3, r1
 800c678:	4a09      	ldr	r2, [pc, #36]	; (800c6a0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x44>)
 800c67a:	e003      	b.n	800c684 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 800c67c:	b166      	cbz	r6, 800c698 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x3c>
 800c67e:	460b      	mov	r3, r1
 800c680:	9200      	str	r2, [sp, #0]
 800c682:	4a08      	ldr	r2, [pc, #32]	; (800c6a4 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x48>)
 800c684:	4629      	mov	r1, r5
 800c686:	f7fc ffa3 	bl	80095d0 <snprintf>
 800c68a:	4285      	cmp	r5, r0
 800c68c:	bfa2      	ittt	ge
 800c68e:	88e3      	ldrhge	r3, [r4, #6]
 800c690:	181b      	addge	r3, r3, r0
 800c692:	80e3      	strhge	r3, [r4, #6]
 800c694:	b002      	add	sp, #8
 800c696:	bd70      	pop	{r4, r5, r6, pc}
 800c698:	9200      	str	r2, [sp, #0]
 800c69a:	460b      	mov	r3, r1
 800c69c:	4a02      	ldr	r2, [pc, #8]	; (800c6a8 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x4c>)
 800c69e:	e7f1      	b.n	800c684 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 800c6a0:	08015a73 	stmdaeq	r1, {r0, r1, r4, r5, r6, r9, fp, ip, lr}
 800c6a4:	08015a6a 	stmdaeq	r1, {r1, r3, r5, r6, r9, fp, ip, lr}
 800c6a8:	08015a74 	stmdaeq	r1, {r2, r4, r5, r6, r9, fp, ip, lr}

0800c6ac <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>:
 800c6ac:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c6ae:	88c6      	ldrh	r6, [r0, #6]
 800c6b0:	8885      	ldrh	r5, [r0, #4]
 800c6b2:	42ae      	cmp	r6, r5
 800c6b4:	d216      	bcs.n	800c6e4 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x38>
 800c6b6:	4604      	mov	r4, r0
 800c6b8:	6800      	ldr	r0, [r0, #0]
 800c6ba:	1bad      	subs	r5, r5, r6
 800c6bc:	4430      	add	r0, r6
 800c6be:	7a26      	ldrb	r6, [r4, #8]
 800c6c0:	b923      	cbnz	r3, 800c6cc <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x20>
 800c6c2:	b926      	cbnz	r6, 800c6ce <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x22>
 800c6c4:	9200      	str	r2, [sp, #0]
 800c6c6:	460b      	mov	r3, r1
 800c6c8:	4a09      	ldr	r2, [pc, #36]	; (800c6f0 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x44>)
 800c6ca:	e003      	b.n	800c6d4 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800c6cc:	b166      	cbz	r6, 800c6e8 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x3c>
 800c6ce:	460b      	mov	r3, r1
 800c6d0:	9200      	str	r2, [sp, #0]
 800c6d2:	4a08      	ldr	r2, [pc, #32]	; (800c6f4 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x48>)
 800c6d4:	4629      	mov	r1, r5
 800c6d6:	f7fc ff7b 	bl	80095d0 <snprintf>
 800c6da:	4285      	cmp	r5, r0
 800c6dc:	bfa2      	ittt	ge
 800c6de:	88e3      	ldrhge	r3, [r4, #6]
 800c6e0:	181b      	addge	r3, r3, r0
 800c6e2:	80e3      	strhge	r3, [r4, #6]
 800c6e4:	b002      	add	sp, #8
 800c6e6:	bd70      	pop	{r4, r5, r6, pc}
 800c6e8:	9200      	str	r2, [sp, #0]
 800c6ea:	460b      	mov	r3, r1
 800c6ec:	4a02      	ldr	r2, [pc, #8]	; (800c6f8 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x4c>)
 800c6ee:	e7f1      	b.n	800c6d4 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800c6f0:	08015a73 	stmdaeq	r1, {r0, r1, r4, r5, r6, r9, fp, ip, lr}
 800c6f4:	08015a6a 	stmdaeq	r1, {r1, r3, r5, r6, r9, fp, ip, lr}
 800c6f8:	08015a74 	stmdaeq	r1, {r2, r4, r5, r6, r9, fp, ip, lr}

0800c6fc <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>:
 800c6fc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c6fe:	88c6      	ldrh	r6, [r0, #6]
 800c700:	8885      	ldrh	r5, [r0, #4]
 800c702:	42ae      	cmp	r6, r5
 800c704:	d216      	bcs.n	800c734 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x38>
 800c706:	4604      	mov	r4, r0
 800c708:	6800      	ldr	r0, [r0, #0]
 800c70a:	1bad      	subs	r5, r5, r6
 800c70c:	4430      	add	r0, r6
 800c70e:	7a26      	ldrb	r6, [r4, #8]
 800c710:	b923      	cbnz	r3, 800c71c <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x20>
 800c712:	b926      	cbnz	r6, 800c71e <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x22>
 800c714:	9200      	str	r2, [sp, #0]
 800c716:	460b      	mov	r3, r1
 800c718:	4a09      	ldr	r2, [pc, #36]	; (800c740 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x44>)
 800c71a:	e003      	b.n	800c724 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800c71c:	b166      	cbz	r6, 800c738 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x3c>
 800c71e:	460b      	mov	r3, r1
 800c720:	9200      	str	r2, [sp, #0]
 800c722:	4a08      	ldr	r2, [pc, #32]	; (800c744 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x48>)
 800c724:	4629      	mov	r1, r5
 800c726:	f7fc ff53 	bl	80095d0 <snprintf>
 800c72a:	4285      	cmp	r5, r0
 800c72c:	bfa2      	ittt	ge
 800c72e:	88e3      	ldrhge	r3, [r4, #6]
 800c730:	181b      	addge	r3, r3, r0
 800c732:	80e3      	strhge	r3, [r4, #6]
 800c734:	b002      	add	sp, #8
 800c736:	bd70      	pop	{r4, r5, r6, pc}
 800c738:	9200      	str	r2, [sp, #0]
 800c73a:	460b      	mov	r3, r1
 800c73c:	4a02      	ldr	r2, [pc, #8]	; (800c748 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x4c>)
 800c73e:	e7f1      	b.n	800c724 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800c740:	08015a62 	stmdaeq	r1, {r1, r5, r6, r9, fp, ip, lr}
 800c744:	08015a57 	stmdaeq	r1, {r0, r1, r2, r4, r6, r9, fp, ip, lr}
 800c748:	08015a63 	stmdaeq	r1, {r0, r1, r5, r6, r9, fp, ip, lr}

0800c74c <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>:
 800c74c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800c750:	4699      	mov	r9, r3
 800c752:	8885      	ldrh	r5, [r0, #4]
 800c754:	88c3      	ldrh	r3, [r0, #6]
 800c756:	4604      	mov	r4, r0
 800c758:	42ab      	cmp	r3, r5
 800c75a:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
 800c75e:	d227      	bcs.n	800c7b0 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x64>
 800c760:	6826      	ldr	r6, [r4, #0]
 800c762:	4610      	mov	r0, r2
 800c764:	460f      	mov	r7, r1
 800c766:	f894 a008 	ldrb.w	sl, [r4, #8]
 800c76a:	441e      	add	r6, r3
 800c76c:	1aed      	subs	r5, r5, r3
 800c76e:	f7fb fd5d 	bl	800822c <__aeabi_f2d>
 800c772:	f1b9 0f00 	cmp.w	r9, #0
 800c776:	d109      	bne.n	800c78c <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x40>
 800c778:	f1ba 0f00 	cmp.w	sl, #0
 800c77c:	d109      	bne.n	800c792 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x46>
 800c77e:	463b      	mov	r3, r7
 800c780:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800c784:	4a0f      	ldr	r2, [pc, #60]	; (800c7c4 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x78>)
 800c786:	f8cd 8000 	str.w	r8, [sp]
 800c78a:	e008      	b.n	800c79e <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x52>
 800c78c:	f1ba 0f00 	cmp.w	sl, #0
 800c790:	d011      	beq.n	800c7b6 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x6a>
 800c792:	463b      	mov	r3, r7
 800c794:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800c798:	4a0b      	ldr	r2, [pc, #44]	; (800c7c8 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x7c>)
 800c79a:	f8cd 8000 	str.w	r8, [sp]
 800c79e:	4629      	mov	r1, r5
 800c7a0:	4630      	mov	r0, r6
 800c7a2:	f7fc ff15 	bl	80095d0 <snprintf>
 800c7a6:	4285      	cmp	r5, r0
 800c7a8:	bfa2      	ittt	ge
 800c7aa:	88e3      	ldrhge	r3, [r4, #6]
 800c7ac:	181b      	addge	r3, r3, r0
 800c7ae:	80e3      	strhge	r3, [r4, #6]
 800c7b0:	b004      	add	sp, #16
 800c7b2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c7b6:	463b      	mov	r3, r7
 800c7b8:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800c7bc:	4a03      	ldr	r2, [pc, #12]	; (800c7cc <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x80>)
 800c7be:	f8cd 8000 	str.w	r8, [sp]
 800c7c2:	e7ec      	b.n	800c79e <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x52>
 800c7c4:	080160ef 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r7, sp, lr}
 800c7c8:	080160e4 	stmdaeq	r1, {r2, r5, r6, r7, sp, lr}
 800c7cc:	080160f0 	stmdaeq	r1, {r4, r5, r6, r7, sp, lr}

0800c7d0 <WS28xxDmxParams::WS28xxDmxParams(WS28xxDmxParamsStore*)>:
 800c7d0:	2200      	movs	r2, #0
 800c7d2:	6001      	str	r1, [r0, #0]
 800c7d4:	4910      	ldr	r1, [pc, #64]	; (800c818 <WS28xxDmxParams::WS28xxDmxParams(WS28xxDmxParamsStore*)+0x48>)
 800c7d6:	f44f 3c80 	mov.w	ip, #65536	; 0x10000
 800c7da:	e9c0 2101 	strd	r2, r1, [r0, #4]
 800c7de:	f44f 6110 	mov.w	r1, #2304	; 0x900
 800c7e2:	81c1      	strh	r1, [r0, #14]
 800c7e4:	213d      	movs	r1, #61	; 0x3d
 800c7e6:	8201      	strh	r1, [r0, #16]
 800c7e8:	f240 11ff 	movw	r1, #511	; 0x1ff
 800c7ec:	8241      	strh	r1, [r0, #18]
 800c7ee:	2101      	movs	r1, #1
 800c7f0:	7541      	strb	r1, [r0, #21]
 800c7f2:	2106      	movs	r1, #6
 800c7f4:	75c1      	strb	r1, [r0, #23]
 800c7f6:	4909      	ldr	r1, [pc, #36]	; (800c81c <WS28xxDmxParams::WS28xxDmxParams(WS28xxDmxParamsStore*)+0x4c>)
 800c7f8:	7302      	strb	r2, [r0, #12]
 800c7fa:	e9c0 c106 	strd	ip, r1, [r0, #24]
 800c7fe:	f101 1108 	add.w	r1, r1, #524296	; 0x80008
 800c802:	6201      	str	r1, [r0, #32]
 800c804:	f101 1108 	add.w	r1, r1, #524296	; 0x80008
 800c808:	6241      	str	r1, [r0, #36]	; 0x24
 800c80a:	211d      	movs	r1, #29
 800c80c:	7582      	strb	r2, [r0, #22]
 800c80e:	8501      	strh	r1, [r0, #40]	; 0x28
 800c810:	f880 202a 	strb.w	r2, [r0, #42]	; 0x2a
 800c814:	4770      	bx	lr
 800c816:	bf00      	nop
 800c818:	0100aa03 	tsteq	r0, r3, lsl #20
 800c81c:	00090005 	andeq	r0, r9, r5

0800c820 <WS28xxDmxParams::Load()>:
 800c820:	b508      	push	{r3, lr}
 800c822:	2300      	movs	r3, #0
 800c824:	4601      	mov	r1, r0
 800c826:	6043      	str	r3, [r0, #4]
 800c828:	6800      	ldr	r0, [r0, #0]
 800c82a:	b120      	cbz	r0, 800c836 <WS28xxDmxParams::Load()+0x16>
 800c82c:	6803      	ldr	r3, [r0, #0]
 800c82e:	3104      	adds	r1, #4
 800c830:	68db      	ldr	r3, [r3, #12]
 800c832:	4798      	blx	r3
 800c834:	2001      	movs	r0, #1
 800c836:	bd08      	pop	{r3, pc}

0800c838 <WS28xxDmxParams::Load(char const*, unsigned int)>:
 800c838:	6803      	ldr	r3, [r0, #0]
 800c83a:	b1d3      	cbz	r3, 800c872 <WS28xxDmxParams::Load(char const*, unsigned int)+0x3a>
 800c83c:	2300      	movs	r3, #0
 800c83e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c840:	460d      	mov	r5, r1
 800c842:	4616      	mov	r6, r2
 800c844:	4604      	mov	r4, r0
 800c846:	6043      	str	r3, [r0, #4]
 800c848:	4602      	mov	r2, r0
 800c84a:	490a      	ldr	r1, [pc, #40]	; (800c874 <WS28xxDmxParams::Load(char const*, unsigned int)+0x3c>)
 800c84c:	4668      	mov	r0, sp
 800c84e:	f006 f841 	bl	80128d4 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800c852:	4632      	mov	r2, r6
 800c854:	4629      	mov	r1, r5
 800c856:	4668      	mov	r0, sp
 800c858:	f006 f840 	bl	80128dc <ReadConfigFile::Read(char const*, unsigned int)>
 800c85c:	4621      	mov	r1, r4
 800c85e:	f851 0b04 	ldr.w	r0, [r1], #4
 800c862:	6803      	ldr	r3, [r0, #0]
 800c864:	689b      	ldr	r3, [r3, #8]
 800c866:	4798      	blx	r3
 800c868:	4668      	mov	r0, sp
 800c86a:	f006 f836 	bl	80128da <ReadConfigFile::~ReadConfigFile()>
 800c86e:	b002      	add	sp, #8
 800c870:	bd70      	pop	{r4, r5, r6, pc}
 800c872:	4770      	bx	lr
 800c874:	0800cae1 	stmdaeq	r0, {r0, r5, r6, r7, r9, fp, lr, pc}

0800c878 <WS28xxDmxParams::callbackFunction(char const*)>:
 800c878:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c87c:	2308      	movs	r3, #8
 800c87e:	460d      	mov	r5, r1
 800c880:	b088      	sub	sp, #32
 800c882:	4604      	mov	r4, r0
 800c884:	9302      	str	r3, [sp, #8]
 800c886:	4628      	mov	r0, r5
 800c888:	4989      	ldr	r1, [pc, #548]	; (800cab0 <WS28xxDmxParams::callbackFunction(char const*)+0x238>)
 800c88a:	446b      	add	r3, sp
 800c88c:	aa04      	add	r2, sp, #16
 800c88e:	f006 f859 	bl	8012944 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800c892:	b9a0      	cbnz	r0, 800c8be <WS28xxDmxParams::callbackFunction(char const*)+0x46>
 800c894:	9b02      	ldr	r3, [sp, #8]
 800c896:	3320      	adds	r3, #32
 800c898:	446b      	add	r3, sp
 800c89a:	f803 0c10 	strb.w	r0, [r3, #-16]
 800c89e:	a804      	add	r0, sp, #16
 800c8a0:	f000 fe1e 	bl	800d4e0 <PixelType::GetType(char const*)>
 800c8a4:	280e      	cmp	r0, #14
 800c8a6:	bf08      	it	eq
 800c8a8:	2203      	moveq	r2, #3
 800c8aa:	6863      	ldr	r3, [r4, #4]
 800c8ac:	bf19      	ittee	ne
 800c8ae:	7220      	strbne	r0, [r4, #8]
 800c8b0:	f043 0301 	orrne.w	r3, r3, #1
 800c8b4:	7222      	strbeq	r2, [r4, #8]
 800c8b6:	f023 0301 	biceq.w	r3, r3, #1
 800c8ba:	6063      	str	r3, [r4, #4]
 800c8bc:	e033      	b.n	800c926 <WS28xxDmxParams::callbackFunction(char const*)+0xae>
 800c8be:	4628      	mov	r0, r5
 800c8c0:	497c      	ldr	r1, [pc, #496]	; (800cab4 <WS28xxDmxParams::callbackFunction(char const*)+0x23c>)
 800c8c2:	f10d 0202 	add.w	r2, sp, #2
 800c8c6:	f006 f8fa 	bl	8012abe <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800c8ca:	b990      	cbnz	r0, 800c8f2 <WS28xxDmxParams::callbackFunction(char const*)+0x7a>
 800c8cc:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800c8d0:	6863      	ldr	r3, [r4, #4]
 800c8d2:	1e51      	subs	r1, r2, #1
 800c8d4:	f5b1 7f2a 	cmp.w	r1, #680	; 0x2a8
 800c8d8:	bf2d      	iteet	cs
 800c8da:	f06f 0255 	mvncs.w	r2, #85	; 0x55
 800c8de:	f8a4 2009 	strhcc.w	r2, [r4, #9]
 800c8e2:	f043 0302 	orrcc.w	r3, r3, #2
 800c8e6:	7262      	strbcs	r2, [r4, #9]
 800c8e8:	bf24      	itt	cs
 800c8ea:	72a0      	strbcs	r0, [r4, #10]
 800c8ec:	f023 0302 	biccs.w	r3, r3, #2
 800c8f0:	e7e3      	b.n	800c8ba <WS28xxDmxParams::callbackFunction(char const*)+0x42>
 800c8f2:	2303      	movs	r3, #3
 800c8f4:	4628      	mov	r0, r5
 800c8f6:	9302      	str	r3, [sp, #8]
 800c8f8:	496f      	ldr	r1, [pc, #444]	; (800cab8 <WS28xxDmxParams::callbackFunction(char const*)+0x240>)
 800c8fa:	ab02      	add	r3, sp, #8
 800c8fc:	aa04      	add	r2, sp, #16
 800c8fe:	f006 f821 	bl	8012944 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800c902:	b998      	cbnz	r0, 800c92c <WS28xxDmxParams::callbackFunction(char const*)+0xb4>
 800c904:	9b02      	ldr	r3, [sp, #8]
 800c906:	3320      	adds	r3, #32
 800c908:	446b      	add	r3, sp
 800c90a:	f803 0c10 	strb.w	r0, [r3, #-16]
 800c90e:	a804      	add	r0, sp, #16
 800c910:	f000 fe0a 	bl	800d528 <PixelType::GetMap(char const*)>
 800c914:	6863      	ldr	r3, [r4, #4]
 800c916:	2806      	cmp	r0, #6
 800c918:	bf14      	ite	ne
 800c91a:	f443 7300 	orrne.w	r3, r3, #512	; 0x200
 800c91e:	f423 7300 	biceq.w	r3, r3, #512	; 0x200
 800c922:	6063      	str	r3, [r4, #4]
 800c924:	75e0      	strb	r0, [r4, #23]
 800c926:	b008      	add	sp, #32
 800c928:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c92c:	4628      	mov	r0, r5
 800c92e:	4963      	ldr	r1, [pc, #396]	; (800cabc <WS28xxDmxParams::callbackFunction(char const*)+0x244>)
 800c930:	aa01      	add	r2, sp, #4
 800c932:	f006 f820 	bl	8012976 <Sscan::Float(char const*, char const*, float&)>
 800c936:	b960      	cbnz	r0, 800c952 <WS28xxDmxParams::callbackFunction(char const*)+0xda>
 800c938:	9801      	ldr	r0, [sp, #4]
 800c93a:	f000 fe57 	bl	800d5ec <PixelType::ConvertTxH(float)>
 800c93e:	6863      	ldr	r3, [r4, #4]
 800c940:	b120      	cbz	r0, 800c94c <WS28xxDmxParams::callbackFunction(char const*)+0xd4>
 800c942:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800c946:	6063      	str	r3, [r4, #4]
 800c948:	7620      	strb	r0, [r4, #24]
 800c94a:	e7ec      	b.n	800c926 <WS28xxDmxParams::callbackFunction(char const*)+0xae>
 800c94c:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800c950:	e7f9      	b.n	800c946 <WS28xxDmxParams::callbackFunction(char const*)+0xce>
 800c952:	4628      	mov	r0, r5
 800c954:	495a      	ldr	r1, [pc, #360]	; (800cac0 <WS28xxDmxParams::callbackFunction(char const*)+0x248>)
 800c956:	aa01      	add	r2, sp, #4
 800c958:	f006 f80d 	bl	8012976 <Sscan::Float(char const*, char const*, float&)>
 800c95c:	b960      	cbnz	r0, 800c978 <WS28xxDmxParams::callbackFunction(char const*)+0x100>
 800c95e:	9801      	ldr	r0, [sp, #4]
 800c960:	f000 fe44 	bl	800d5ec <PixelType::ConvertTxH(float)>
 800c964:	6863      	ldr	r3, [r4, #4]
 800c966:	b120      	cbz	r0, 800c972 <WS28xxDmxParams::callbackFunction(char const*)+0xfa>
 800c968:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 800c96c:	6063      	str	r3, [r4, #4]
 800c96e:	7660      	strb	r0, [r4, #25]
 800c970:	e7d9      	b.n	800c926 <WS28xxDmxParams::callbackFunction(char const*)+0xae>
 800c972:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800c976:	e7f9      	b.n	800c96c <WS28xxDmxParams::callbackFunction(char const*)+0xf4>
 800c978:	4628      	mov	r0, r5
 800c97a:	4952      	ldr	r1, [pc, #328]	; (800cac4 <WS28xxDmxParams::callbackFunction(char const*)+0x24c>)
 800c97c:	f10d 0202 	add.w	r2, sp, #2
 800c980:	f006 f89d 	bl	8012abe <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800c984:	b998      	cbnz	r0, 800c9ae <WS28xxDmxParams::callbackFunction(char const*)+0x136>
 800c986:	f240 25a6 	movw	r5, #678	; 0x2a6
 800c98a:	f8bd 1002 	ldrh.w	r1, [sp, #2]
 800c98e:	6863      	ldr	r3, [r4, #4]
 800c990:	1e8a      	subs	r2, r1, #2
 800c992:	b292      	uxth	r2, r2
 800c994:	42aa      	cmp	r2, r5
 800c996:	bf81      	itttt	hi
 800c998:	2201      	movhi	r2, #1
 800c99a:	75a0      	strbhi	r0, [r4, #22]
 800c99c:	7562      	strbhi	r2, [r4, #21]
 800c99e:	f423 7380 	bichi.w	r3, r3, #256	; 0x100
 800c9a2:	bf9c      	itt	ls
 800c9a4:	f8a4 1015 	strhls.w	r1, [r4, #21]
 800c9a8:	f443 7380 	orrls.w	r3, r3, #256	; 0x100
 800c9ac:	e785      	b.n	800c8ba <WS28xxDmxParams::callbackFunction(char const*)+0x42>
 800c9ae:	4628      	mov	r0, r5
 800c9b0:	4945      	ldr	r1, [pc, #276]	; (800cac8 <WS28xxDmxParams::callbackFunction(char const*)+0x250>)
 800c9b2:	aa03      	add	r2, sp, #12
 800c9b4:	f006 f8a1 	bl	8012afa <Sscan::Uint32(char const*, char const*, unsigned int&)>
 800c9b8:	b960      	cbnz	r0, 800c9d4 <WS28xxDmxParams::callbackFunction(char const*)+0x15c>
 800c9ba:	9a03      	ldr	r2, [sp, #12]
 800c9bc:	4943      	ldr	r1, [pc, #268]	; (800cacc <WS28xxDmxParams::callbackFunction(char const*)+0x254>)
 800c9be:	6863      	ldr	r3, [r4, #4]
 800c9c0:	428a      	cmp	r2, r1
 800c9c2:	bf14      	ite	ne
 800c9c4:	f043 0310 	orrne.w	r3, r3, #16
 800c9c8:	f023 0310 	biceq.w	r3, r3, #16
 800c9cc:	6063      	str	r3, [r4, #4]
 800c9ce:	f8c4 200e 	str.w	r2, [r4, #14]
 800c9d2:	e7a8      	b.n	800c926 <WS28xxDmxParams::callbackFunction(char const*)+0xae>
 800c9d4:	4628      	mov	r0, r5
 800c9d6:	493e      	ldr	r1, [pc, #248]	; (800cad0 <WS28xxDmxParams::callbackFunction(char const*)+0x258>)
 800c9d8:	f10d 0201 	add.w	r2, sp, #1
 800c9dc:	f006 f8b6 	bl	8012b4c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800c9e0:	b988      	cbnz	r0, 800ca06 <WS28xxDmxParams::callbackFunction(char const*)+0x18e>
 800c9e2:	f89d 1001 	ldrb.w	r1, [sp, #1]
 800c9e6:	6863      	ldr	r3, [r4, #4]
 800c9e8:	1e4a      	subs	r2, r1, #1
 800c9ea:	b2d2      	uxtb	r2, r2
 800c9ec:	2afd      	cmp	r2, #253	; 0xfd
 800c9ee:	bf83      	ittte	hi
 800c9f0:	f023 0320 	bichi.w	r3, r3, #32
 800c9f4:	6063      	strhi	r3, [r4, #4]
 800c9f6:	23ff      	movhi	r3, #255	; 0xff
 800c9f8:	f043 0320 	orrls.w	r3, r3, #32
 800c9fc:	bf9a      	itte	ls
 800c9fe:	6063      	strls	r3, [r4, #4]
 800ca00:	74a1      	strbls	r1, [r4, #18]
 800ca02:	74a3      	strbhi	r3, [r4, #18]
 800ca04:	e78f      	b.n	800c926 <WS28xxDmxParams::callbackFunction(char const*)+0xae>
 800ca06:	2600      	movs	r6, #0
 800ca08:	f04f 0812 	mov.w	r8, #18
 800ca0c:	f44f 5a80 	mov.w	sl, #4096	; 0x1000
 800ca10:	f8df 90c0 	ldr.w	r9, [pc, #192]	; 800cad4 <WS28xxDmxParams::callbackFunction(char const*)+0x25c>
 800ca14:	f104 071a 	add.w	r7, r4, #26
 800ca18:	4628      	mov	r0, r5
 800ca1a:	fb08 9106 	mla	r1, r8, r6, r9
 800ca1e:	f10d 0202 	add.w	r2, sp, #2
 800ca22:	f006 f84c 	bl	8012abe <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800ca26:	b940      	cbnz	r0, 800ca3a <WS28xxDmxParams::callbackFunction(char const*)+0x1c2>
 800ca28:	f8bd 1002 	ldrh.w	r1, [sp, #2]
 800ca2c:	6863      	ldr	r3, [r4, #4]
 800ca2e:	fa0a f206 	lsl.w	r2, sl, r6
 800ca32:	b1e9      	cbz	r1, 800ca70 <WS28xxDmxParams::callbackFunction(char const*)+0x1f8>
 800ca34:	431a      	orrs	r2, r3
 800ca36:	8039      	strh	r1, [r7, #0]
 800ca38:	6062      	str	r2, [r4, #4]
 800ca3a:	3601      	adds	r6, #1
 800ca3c:	2e08      	cmp	r6, #8
 800ca3e:	f107 0702 	add.w	r7, r7, #2
 800ca42:	d1e9      	bne.n	800ca18 <WS28xxDmxParams::callbackFunction(char const*)+0x1a0>
 800ca44:	4628      	mov	r0, r5
 800ca46:	4924      	ldr	r1, [pc, #144]	; (800cad8 <WS28xxDmxParams::callbackFunction(char const*)+0x260>)
 800ca48:	f10d 0201 	add.w	r2, sp, #1
 800ca4c:	f006 f87e 	bl	8012b4c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800ca50:	b9a8      	cbnz	r0, 800ca7e <WS28xxDmxParams::callbackFunction(char const*)+0x206>
 800ca52:	f89d 2001 	ldrb.w	r2, [sp, #1]
 800ca56:	6863      	ldr	r3, [r4, #4]
 800ca58:	1e91      	subs	r1, r2, #2
 800ca5a:	2906      	cmp	r1, #6
 800ca5c:	bf8d      	iteet	hi
 800ca5e:	2201      	movhi	r2, #1
 800ca60:	74e2      	strbls	r2, [r4, #19]
 800ca62:	f043 0340 	orrls.w	r3, r3, #64	; 0x40
 800ca66:	74e2      	strbhi	r2, [r4, #19]
 800ca68:	bf88      	it	hi
 800ca6a:	f023 0340 	bichi.w	r3, r3, #64	; 0x40
 800ca6e:	e724      	b.n	800c8ba <WS28xxDmxParams::callbackFunction(char const*)+0x42>
 800ca70:	00b1      	lsls	r1, r6, #2
 800ca72:	3101      	adds	r1, #1
 800ca74:	ea23 0302 	bic.w	r3, r3, r2
 800ca78:	8039      	strh	r1, [r7, #0]
 800ca7a:	6063      	str	r3, [r4, #4]
 800ca7c:	e7dd      	b.n	800ca3a <WS28xxDmxParams::callbackFunction(char const*)+0x1c2>
 800ca7e:	4628      	mov	r0, r5
 800ca80:	4916      	ldr	r1, [pc, #88]	; (800cadc <WS28xxDmxParams::callbackFunction(char const*)+0x264>)
 800ca82:	f10d 0201 	add.w	r2, sp, #1
 800ca86:	f006 f861 	bl	8012b4c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800ca8a:	2800      	cmp	r0, #0
 800ca8c:	f47f af4b 	bne.w	800c926 <WS28xxDmxParams::callbackFunction(char const*)+0xae>
 800ca90:	f89d 2001 	ldrb.w	r2, [sp, #1]
 800ca94:	6863      	ldr	r3, [r4, #4]
 800ca96:	1e51      	subs	r1, r2, #1
 800ca98:	2904      	cmp	r1, #4
 800ca9a:	bf99      	ittee	ls
 800ca9c:	f884 202a 	strbls.w	r2, [r4, #42]	; 0x2a
 800caa0:	f443 1380 	orrls.w	r3, r3, #1048576	; 0x100000
 800caa4:	f884 002a 	strbhi.w	r0, [r4, #42]	; 0x2a
 800caa8:	f423 1380 	bichi.w	r3, r3, #1048576	; 0x100000
 800caac:	e705      	b.n	800c8ba <WS28xxDmxParams::callbackFunction(char const*)+0x42>
 800caae:	bf00      	nop
 800cab0:	080178a3 	stmdaeq	r1, {r0, r1, r5, r7, fp, ip, sp, lr}
 800cab4:	080178ac 	stmdaeq	r1, {r2, r3, r5, r7, fp, ip, sp, lr}
 800cab8:	08017893 	stmdaeq	r1, {r0, r1, r4, r7, fp, ip, sp, lr}
 800cabc:	080178b6 	stmdaeq	r1, {r1, r2, r4, r5, r7, fp, ip, sp, lr}
 800cac0:	080178be 	stmdaeq	r1, {r1, r2, r3, r4, r5, r7, fp, ip, sp, lr}
 800cac4:	08017871 	stmdaeq	r1, {r0, r4, r5, r6, fp, ip, sp, lr}
 800cac8:	08017862 	stmdaeq	r1, {r1, r5, r6, fp, ip, sp, lr}
 800cacc:	003d0900 	eorseq	r0, sp, r0, lsl #18
 800cad0:	08017881 	stmdaeq	r1, {r0, r7, fp, ip, sp, lr}
 800cad4:	0801794c 	stmdaeq	r1, {r2, r3, r6, r8, fp, ip, sp, lr}
 800cad8:	08017857 	stmdaeq	r1, {r0, r1, r2, r4, r6, fp, ip, sp, lr}
 800cadc:	080178ff 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r7, fp, ip, sp, lr}

0800cae0 <WS28xxDmxParams::staticCallbackFunction(void*, char const*)>:
 800cae0:	f7ff beca 	b.w	800c878 <WS28xxDmxParams::callbackFunction(char const*)>

0800cae4 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)>:
 800cae4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cae8:	4604      	mov	r4, r0
 800caea:	4615      	mov	r5, r2
 800caec:	461e      	mov	r6, r3
 800caee:	b086      	sub	sp, #24
 800caf0:	3004      	adds	r0, #4
 800caf2:	2900      	cmp	r1, #0
 800caf4:	f000 808f 	beq.w	800cc16 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x132>
 800caf8:	2227      	movs	r2, #39	; 0x27
 800cafa:	f006 fd5e 	bl	80135ba <memmove>
 800cafe:	4633      	mov	r3, r6
 800cb00:	462a      	mov	r2, r5
 800cb02:	497b      	ldr	r1, [pc, #492]	; (800ccf0 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x20c>)
 800cb04:	a803      	add	r0, sp, #12
 800cb06:	f005 fe45 	bl	8012794 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800cb0a:	7a20      	ldrb	r0, [r4, #8]
 800cb0c:	f000 fcdc 	bl	800d4c8 <PixelType::GetType(pixel::Type)>
 800cb10:	6863      	ldr	r3, [r4, #4]
 800cb12:	4602      	mov	r2, r0
 800cb14:	4977      	ldr	r1, [pc, #476]	; (800ccf4 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x210>)
 800cb16:	f003 0301 	and.w	r3, r3, #1
 800cb1a:	a803      	add	r0, sp, #12
 800cb1c:	f7ff fdee 	bl	800c6fc <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800cb20:	6863      	ldr	r3, [r4, #4]
 800cb22:	f8b4 2009 	ldrh.w	r2, [r4, #9]
 800cb26:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800cb2a:	4973      	ldr	r1, [pc, #460]	; (800ccf8 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x214>)
 800cb2c:	a803      	add	r0, sp, #12
 800cb2e:	f7ff fdbd 	bl	800c6ac <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800cb32:	4972      	ldr	r1, [pc, #456]	; (800ccfc <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x218>)
 800cb34:	a803      	add	r0, sp, #12
 800cb36:	f005 feb3 	bl	80128a0 <PropertiesBuilder::AddComment(char const*)>
 800cb3a:	6863      	ldr	r3, [r4, #4]
 800cb3c:	059e      	lsls	r6, r3, #22
 800cb3e:	d403      	bmi.n	800cb48 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x64>
 800cb40:	7a20      	ldrb	r0, [r4, #8]
 800cb42:	f000 f9a1 	bl	800ce88 <PixelConfiguration::GetRgbMapping(pixel::Type)>
 800cb46:	75e0      	strb	r0, [r4, #23]
 800cb48:	7de0      	ldrb	r0, [r4, #23]
 800cb4a:	f000 fd15 	bl	800d578 <PixelType::GetMap(pixel::Map)>
 800cb4e:	6863      	ldr	r3, [r4, #4]
 800cb50:	4602      	mov	r2, r0
 800cb52:	f3c3 2340 	ubfx	r3, r3, #9, #1
 800cb56:	496a      	ldr	r1, [pc, #424]	; (800cd00 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x21c>)
 800cb58:	a803      	add	r0, sp, #12
 800cb5a:	f7ff fdcf 	bl	800c6fc <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800cb5e:	6863      	ldr	r3, [r4, #4]
 800cb60:	f403 6340 	and.w	r3, r3, #3072	; 0xc00
 800cb64:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 800cb68:	d011      	beq.n	800cb8e <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0xaa>
 800cb6a:	f10d 020b 	add.w	r2, sp, #11
 800cb6e:	7a20      	ldrb	r0, [r4, #8]
 800cb70:	f10d 010a 	add.w	r1, sp, #10
 800cb74:	f000 f992 	bl	800ce9c <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)>
 800cb78:	6863      	ldr	r3, [r4, #4]
 800cb7a:	055d      	lsls	r5, r3, #21
 800cb7c:	bf5c      	itt	pl
 800cb7e:	f89d 200a 	ldrbpl.w	r2, [sp, #10]
 800cb82:	7622      	strbpl	r2, [r4, #24]
 800cb84:	0518      	lsls	r0, r3, #20
 800cb86:	bf5c      	itt	pl
 800cb88:	f89d 300b 	ldrbpl.w	r3, [sp, #11]
 800cb8c:	7663      	strbpl	r3, [r4, #25]
 800cb8e:	495d      	ldr	r1, [pc, #372]	; (800cd04 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x220>)
 800cb90:	a803      	add	r0, sp, #12
 800cb92:	f005 fe85 	bl	80128a0 <PropertiesBuilder::AddComment(char const*)>
 800cb96:	7e20      	ldrb	r0, [r4, #24]
 800cb98:	f000 fcfa 	bl	800d590 <PixelType::ConvertTxH(unsigned char)>
 800cb9c:	2502      	movs	r5, #2
 800cb9e:	6863      	ldr	r3, [r4, #4]
 800cba0:	4602      	mov	r2, r0
 800cba2:	4959      	ldr	r1, [pc, #356]	; (800cd08 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x224>)
 800cba4:	f3c3 2380 	ubfx	r3, r3, #10, #1
 800cba8:	9500      	str	r5, [sp, #0]
 800cbaa:	a803      	add	r0, sp, #12
 800cbac:	f7ff fdce 	bl	800c74c <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>
 800cbb0:	7e60      	ldrb	r0, [r4, #25]
 800cbb2:	f000 fced 	bl	800d590 <PixelType::ConvertTxH(unsigned char)>
 800cbb6:	6863      	ldr	r3, [r4, #4]
 800cbb8:	4602      	mov	r2, r0
 800cbba:	f3c3 23c0 	ubfx	r3, r3, #11, #1
 800cbbe:	4953      	ldr	r1, [pc, #332]	; (800cd0c <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x228>)
 800cbc0:	9500      	str	r5, [sp, #0]
 800cbc2:	a803      	add	r0, sp, #12
 800cbc4:	f7ff fdc2 	bl	800c74c <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>
 800cbc8:	4951      	ldr	r1, [pc, #324]	; (800cd10 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x22c>)
 800cbca:	a803      	add	r0, sp, #12
 800cbcc:	f005 fe68 	bl	80128a0 <PropertiesBuilder::AddComment(char const*)>
 800cbd0:	6863      	ldr	r3, [r4, #4]
 800cbd2:	f8b4 2015 	ldrh.w	r2, [r4, #21]
 800cbd6:	f3c3 2300 	ubfx	r3, r3, #8, #1
 800cbda:	494e      	ldr	r1, [pc, #312]	; (800cd14 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x230>)
 800cbdc:	a803      	add	r0, sp, #12
 800cbde:	f7ff fd65 	bl	800c6ac <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800cbe2:	494d      	ldr	r1, [pc, #308]	; (800cd18 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x234>)
 800cbe4:	a803      	add	r0, sp, #12
 800cbe6:	f005 fe5b 	bl	80128a0 <PropertiesBuilder::AddComment(char const*)>
 800cbea:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800cbee:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800cbf2:	f8d4 300e 	ldr.w	r3, [r4, #14]
 800cbf6:	42aa      	cmp	r2, r5
 800cbf8:	6861      	ldr	r1, [r4, #4]
 800cbfa:	d222      	bcs.n	800cc42 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x15e>
 800cbfc:	9803      	ldr	r0, [sp, #12]
 800cbfe:	06c9      	lsls	r1, r1, #27
 800cc00:	4410      	add	r0, r2
 800cc02:	eba5 0502 	sub.w	r5, r5, r2
 800cc06:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800cc0a:	d40b      	bmi.n	800cc24 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x140>
 800cc0c:	b962      	cbnz	r2, 800cc28 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x144>
 800cc0e:	9300      	str	r3, [sp, #0]
 800cc10:	4a42      	ldr	r2, [pc, #264]	; (800cd1c <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x238>)
 800cc12:	4b43      	ldr	r3, [pc, #268]	; (800cd20 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x23c>)
 800cc14:	e00b      	b.n	800cc2e <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x14a>
 800cc16:	6823      	ldr	r3, [r4, #0]
 800cc18:	4601      	mov	r1, r0
 800cc1a:	681a      	ldr	r2, [r3, #0]
 800cc1c:	4618      	mov	r0, r3
 800cc1e:	68d2      	ldr	r2, [r2, #12]
 800cc20:	4790      	blx	r2
 800cc22:	e76c      	b.n	800cafe <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x1a>
 800cc24:	2a00      	cmp	r2, #0
 800cc26:	d05f      	beq.n	800cce8 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x204>
 800cc28:	9300      	str	r3, [sp, #0]
 800cc2a:	4a3e      	ldr	r2, [pc, #248]	; (800cd24 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x240>)
 800cc2c:	4b3c      	ldr	r3, [pc, #240]	; (800cd20 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x23c>)
 800cc2e:	4629      	mov	r1, r5
 800cc30:	f7fc fcce 	bl	80095d0 <snprintf>
 800cc34:	4285      	cmp	r5, r0
 800cc36:	bfa2      	ittt	ge
 800cc38:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800cc3c:	18c0      	addge	r0, r0, r3
 800cc3e:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800cc42:	4939      	ldr	r1, [pc, #228]	; (800cd28 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x244>)
 800cc44:	a803      	add	r0, sp, #12
 800cc46:	f005 fe2b 	bl	80128a0 <PropertiesBuilder::AddComment(char const*)>
 800cc4a:	6863      	ldr	r3, [r4, #4]
 800cc4c:	7ca2      	ldrb	r2, [r4, #18]
 800cc4e:	4937      	ldr	r1, [pc, #220]	; (800cd2c <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x248>)
 800cc50:	f3c3 1340 	ubfx	r3, r3, #5, #1
 800cc54:	a803      	add	r0, sp, #12
 800cc56:	f7ff fd01 	bl	800c65c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800cc5a:	2500      	movs	r5, #0
 800cc5c:	f44f 5880 	mov.w	r8, #4096	; 0x1000
 800cc60:	4e33      	ldr	r6, [pc, #204]	; (800cd30 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x24c>)
 800cc62:	f104 071a 	add.w	r7, r4, #26
 800cc66:	6862      	ldr	r2, [r4, #4]
 800cc68:	fa08 f305 	lsl.w	r3, r8, r5
 800cc6c:	4393      	bics	r3, r2
 800cc6e:	bf0c      	ite	eq
 800cc70:	2301      	moveq	r3, #1
 800cc72:	2300      	movne	r3, #0
 800cc74:	4631      	mov	r1, r6
 800cc76:	f837 2b02 	ldrh.w	r2, [r7], #2
 800cc7a:	a803      	add	r0, sp, #12
 800cc7c:	3501      	adds	r5, #1
 800cc7e:	f7ff fd15 	bl	800c6ac <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800cc82:	2d08      	cmp	r5, #8
 800cc84:	f106 0612 	add.w	r6, r6, #18
 800cc88:	d1ed      	bne.n	800cc66 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x182>
 800cc8a:	6863      	ldr	r3, [r4, #4]
 800cc8c:	7ce2      	ldrb	r2, [r4, #19]
 800cc8e:	f3c3 1380 	ubfx	r3, r3, #6, #1
 800cc92:	4928      	ldr	r1, [pc, #160]	; (800cd34 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x250>)
 800cc94:	a803      	add	r0, sp, #12
 800cc96:	f7ff fce1 	bl	800c65c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800cc9a:	4927      	ldr	r1, [pc, #156]	; (800cd38 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x254>)
 800cc9c:	a803      	add	r0, sp, #12
 800cc9e:	f005 fdff 	bl	80128a0 <PropertiesBuilder::AddComment(char const*)>
 800cca2:	6863      	ldr	r3, [r4, #4]
 800cca4:	f894 202a 	ldrb.w	r2, [r4, #42]	; 0x2a
 800cca8:	f3c3 5300 	ubfx	r3, r3, #20, #1
 800ccac:	4923      	ldr	r1, [pc, #140]	; (800cd3c <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x258>)
 800ccae:	a803      	add	r0, sp, #12
 800ccb0:	f7ff fcd4 	bl	800c65c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800ccb4:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800ccb8:	b17b      	cbz	r3, 800ccda <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x1f6>
 800ccba:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800ccbe:	9b03      	ldr	r3, [sp, #12]
 800ccc0:	4413      	add	r3, r2
 800ccc2:	227d      	movs	r2, #125	; 0x7d
 800ccc4:	f803 2c01 	strb.w	r2, [r3, #-1]
 800ccc8:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800cccc:	9903      	ldr	r1, [sp, #12]
 800ccce:	54ca      	strb	r2, [r1, r3]
 800ccd0:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800ccd4:	3301      	adds	r3, #1
 800ccd6:	f8ad 3012 	strh.w	r3, [sp, #18]
 800ccda:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800ccde:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800cce0:	601a      	str	r2, [r3, #0]
 800cce2:	b006      	add	sp, #24
 800cce4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cce8:	9300      	str	r3, [sp, #0]
 800ccea:	4a15      	ldr	r2, [pc, #84]	; (800cd40 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x25c>)
 800ccec:	4b0c      	ldr	r3, [pc, #48]	; (800cd20 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x23c>)
 800ccee:	e79e      	b.n	800cc2e <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x14a>
 800ccf0:	080178c6 	stmdaeq	r1, {r1, r2, r6, r7, fp, ip, sp, lr}
 800ccf4:	080178a3 	stmdaeq	r1, {r0, r1, r5, r7, fp, ip, sp, lr}
 800ccf8:	080178ac 	stmdaeq	r1, {r2, r3, r5, r7, fp, ip, sp, lr}
 800ccfc:	080160f9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, sp, lr}
 800cd00:	08017893 	stmdaeq	r1, {r0, r1, r4, r7, fp, ip, sp, lr}
 800cd04:	0801610d 	stmdaeq	r1, {r0, r2, r3, r8, sp, lr}
 800cd08:	080178b6 	stmdaeq	r1, {r1, r2, r4, r5, r7, fp, ip, sp, lr}
 800cd0c:	080178be 	stmdaeq	r1, {r1, r2, r3, r4, r5, r7, fp, ip, sp, lr}
 800cd10:	08016123 	stmdaeq	r1, {r0, r1, r5, r8, sp, lr}
 800cd14:	08017871 	stmdaeq	r1, {r0, r4, r5, r6, fp, ip, sp, lr}
 800cd18:	0801612c 	stmdaeq	r1, {r2, r3, r5, r8, sp, lr}
 800cd1c:	08015a73 	stmdaeq	r1, {r0, r1, r4, r5, r6, r9, fp, ip, lr}
 800cd20:	08017862 	stmdaeq	r1, {r1, r5, r6, fp, ip, sp, lr}
 800cd24:	08015a6a 	stmdaeq	r1, {r1, r3, r5, r6, r9, fp, ip, lr}
 800cd28:	0801613e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r8, sp, lr}
 800cd2c:	08017881 	stmdaeq	r1, {r0, r7, fp, ip, sp, lr}
 800cd30:	0801794c 	stmdaeq	r1, {r2, r3, r6, r8, fp, ip, sp, lr}
 800cd34:	08017857 	stmdaeq	r1, {r0, r1, r2, r4, r6, fp, ip, sp, lr}
 800cd38:	0801614c 	stmdaeq	r1, {r2, r3, r6, r8, sp, lr}
 800cd3c:	080178ff 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r7, fp, ip, sp, lr}
 800cd40:	08015a74 	stmdaeq	r1, {r2, r4, r5, r6, r9, fp, ip, lr}

0800cd44 <WS28xxDmxParams::Save(char*, unsigned int, unsigned int&)>:
 800cd44:	b513      	push	{r0, r1, r4, lr}
 800cd46:	6804      	ldr	r4, [r0, #0]
 800cd48:	b914      	cbnz	r4, 800cd50 <WS28xxDmxParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800cd4a:	601c      	str	r4, [r3, #0]
 800cd4c:	b002      	add	sp, #8
 800cd4e:	bd10      	pop	{r4, pc}
 800cd50:	9300      	str	r3, [sp, #0]
 800cd52:	4613      	mov	r3, r2
 800cd54:	460a      	mov	r2, r1
 800cd56:	2100      	movs	r1, #0
 800cd58:	f7ff fec4 	bl	800cae4 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)>
 800cd5c:	e7f6      	b.n	800cd4c <WS28xxDmxParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800cd5e <WS28xxDmxParams::Set(PixelDmxConfiguration*)>:
 800cd5e:	6843      	ldr	r3, [r0, #4]
 800cd60:	07da      	lsls	r2, r3, #31
 800cd62:	bf44      	itt	mi
 800cd64:	7a02      	ldrbmi	r2, [r0, #8]
 800cd66:	600a      	strmi	r2, [r1, #0]
 800cd68:	079a      	lsls	r2, r3, #30
 800cd6a:	d505      	bpl.n	800cd78 <WS28xxDmxParams::Set(PixelDmxConfiguration*)+0x1a>
 800cd6c:	f8b0 2009 	ldrh.w	r2, [r0, #9]
 800cd70:	2a00      	cmp	r2, #0
 800cd72:	bf08      	it	eq
 800cd74:	22aa      	moveq	r2, #170	; 0xaa
 800cd76:	604a      	str	r2, [r1, #4]
 800cd78:	059a      	lsls	r2, r3, #22
 800cd7a:	bf44      	itt	mi
 800cd7c:	7dc2      	ldrbmi	r2, [r0, #23]
 800cd7e:	608a      	strmi	r2, [r1, #8]
 800cd80:	055a      	lsls	r2, r3, #21
 800cd82:	bf44      	itt	mi
 800cd84:	7e02      	ldrbmi	r2, [r0, #24]
 800cd86:	740a      	strbmi	r2, [r1, #16]
 800cd88:	051a      	lsls	r2, r3, #20
 800cd8a:	bf44      	itt	mi
 800cd8c:	7e42      	ldrbmi	r2, [r0, #25]
 800cd8e:	744a      	strbmi	r2, [r1, #17]
 800cd90:	06da      	lsls	r2, r3, #27
 800cd92:	bf44      	itt	mi
 800cd94:	f8d0 200e 	ldrmi.w	r2, [r0, #14]
 800cd98:	60ca      	strmi	r2, [r1, #12]
 800cd9a:	069a      	lsls	r2, r3, #26
 800cd9c:	bf44      	itt	mi
 800cd9e:	7c82      	ldrbmi	r2, [r0, #18]
 800cda0:	748a      	strbmi	r2, [r1, #18]
 800cda2:	075a      	lsls	r2, r3, #29
 800cda4:	d50f      	bpl.n	800cdc6 <WS28xxDmxParams::Set(PixelDmxConfiguration*)+0x68>
 800cda6:	7ac2      	ldrb	r2, [r0, #11]
 800cda8:	b510      	push	{r4, lr}
 800cdaa:	7b04      	ldrb	r4, [r0, #12]
 800cdac:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
 800cdb0:	838a      	strh	r2, [r1, #28]
 800cdb2:	05da      	lsls	r2, r3, #23
 800cdb4:	bf44      	itt	mi
 800cdb6:	f8b0 2015 	ldrhmi.w	r2, [r0, #21]
 800cdba:	618a      	strmi	r2, [r1, #24]
 800cdbc:	065c      	lsls	r4, r3, #25
 800cdbe:	bf44      	itt	mi
 800cdc0:	7cc3      	ldrbmi	r3, [r0, #19]
 800cdc2:	614b      	strmi	r3, [r1, #20]
 800cdc4:	bd10      	pop	{r4, pc}
 800cdc6:	05da      	lsls	r2, r3, #23
 800cdc8:	bf44      	itt	mi
 800cdca:	f8b0 2015 	ldrhmi.w	r2, [r0, #21]
 800cdce:	618a      	strmi	r2, [r1, #24]
 800cdd0:	065b      	lsls	r3, r3, #25
 800cdd2:	bf44      	itt	mi
 800cdd4:	7cc3      	ldrbmi	r3, [r0, #19]
 800cdd6:	614b      	strmi	r3, [r1, #20]
 800cdd8:	4770      	bx	lr

0800cdda <WS28xxDmxParams::Dump()>:
 800cdda:	4770      	bx	lr

0800cddc <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&, unsigned int&, unsigned int&)>:
 800cddc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cde0:	460e      	mov	r6, r1
 800cde2:	4611      	mov	r1, r2
 800cde4:	4604      	mov	r4, r0
 800cde6:	4690      	mov	r8, r2
 800cde8:	461d      	mov	r5, r3
 800cdea:	9f06      	ldr	r7, [sp, #24]
 800cdec:	f000 f864 	bl	800ceb8 <PixelConfiguration::Validate(unsigned int&)>
 800cdf0:	2e01      	cmp	r6, #1
 800cdf2:	d009      	beq.n	800ce08 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&, unsigned int&, unsigned int&)+0x2c>
 800cdf4:	7ce2      	ldrb	r2, [r4, #19]
 800cdf6:	b93a      	cbnz	r2, 800ce08 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&, unsigned int&, unsigned int&)+0x2c>
 800cdf8:	2e04      	cmp	r6, #4
 800cdfa:	d13c      	bne.n	800ce76 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&, unsigned int&, unsigned int&)+0x9a>
 800cdfc:	2303      	movs	r3, #3
 800cdfe:	6023      	str	r3, [r4, #0]
 800ce00:	4641      	mov	r1, r8
 800ce02:	4620      	mov	r0, r4
 800ce04:	f000 f858 	bl	800ceb8 <PixelConfiguration::Validate(unsigned int&)>
 800ce08:	6823      	ldr	r3, [r4, #0]
 800ce0a:	2b07      	cmp	r3, #7
 800ce0c:	bf15      	itete	ne
 800ce0e:	f44f 72aa 	movne.w	r2, #340	; 0x154
 800ce12:	f44f 7280 	moveq.w	r2, #256	; 0x100
 800ce16:	21aa      	movne	r1, #170	; 0xaa
 800ce18:	2180      	moveq	r1, #128	; 0x80
 800ce1a:	bf14      	ite	ne
 800ce1c:	f44f 73ff 	movne.w	r3, #510	; 0x1fe
 800ce20:	f44f 73c0 	moveq.w	r3, #384	; 0x180
 800ce24:	e9c5 1200 	strd	r1, r2, [r5]
 800ce28:	69a2      	ldr	r2, [r4, #24]
 800ce2a:	60ab      	str	r3, [r5, #8]
 800ce2c:	6863      	ldr	r3, [r4, #4]
 800ce2e:	b10a      	cbz	r2, 800ce34 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&, unsigned int&, unsigned int&)+0x58>
 800ce30:	429a      	cmp	r2, r3
 800ce32:	d900      	bls.n	800ce36 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&, unsigned int&, unsigned int&)+0x5a>
 800ce34:	61a3      	str	r3, [r4, #24]
 800ce36:	69a2      	ldr	r2, [r4, #24]
 800ce38:	fbb3 f3f2 	udiv	r3, r3, r2
 800ce3c:	603b      	str	r3, [r7, #0]
 800ce3e:	6963      	ldr	r3, [r4, #20]
 800ce40:	42b3      	cmp	r3, r6
 800ce42:	bf94      	ite	ls
 800ce44:	6163      	strls	r3, [r4, #20]
 800ce46:	6166      	strhi	r6, [r4, #20]
 800ce48:	682b      	ldr	r3, [r5, #0]
 800ce4a:	683a      	ldr	r2, [r7, #0]
 800ce4c:	3301      	adds	r3, #1
 800ce4e:	fbb2 f2f3 	udiv	r2, r2, r3
 800ce52:	9b07      	ldr	r3, [sp, #28]
 800ce54:	3201      	adds	r2, #1
 800ce56:	601a      	str	r2, [r3, #0]
 800ce58:	2e01      	cmp	r6, #1
 800ce5a:	bf01      	itttt	eq
 800ce5c:	682b      	ldreq	r3, [r5, #0]
 800ce5e:	683a      	ldreq	r2, [r7, #0]
 800ce60:	3301      	addeq	r3, #1
 800ce62:	fbb2 f2f3 	udiveq	r2, r2, r3
 800ce66:	bf1e      	ittt	ne
 800ce68:	6963      	ldrne	r3, [r4, #20]
 800ce6a:	435a      	mulne	r2, r3
 800ce6c:	f102 32ff 	addne.w	r2, r2, #4294967295	; 0xffffffff
 800ce70:	60ea      	str	r2, [r5, #12]
 800ce72:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ce76:	6823      	ldr	r3, [r4, #0]
 800ce78:	2b00      	cmp	r3, #0
 800ce7a:	d0c1      	beq.n	800ce00 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&, unsigned int&, unsigned int&)+0x24>
 800ce7c:	3b0b      	subs	r3, #11
 800ce7e:	2b01      	cmp	r3, #1
 800ce80:	bf88      	it	hi
 800ce82:	6022      	strhi	r2, [r4, #0]
 800ce84:	e7bc      	b.n	800ce00 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&, unsigned int&, unsigned int&)+0x24>

0800ce86 <PixelDmxConfiguration::Dump()>:
 800ce86:	4770      	bx	lr

0800ce88 <PixelConfiguration::GetRgbMapping(pixel::Type)>:
 800ce88:	3801      	subs	r0, #1
 800ce8a:	2809      	cmp	r0, #9
 800ce8c:	bf9a      	itte	ls
 800ce8e:	4b02      	ldrls	r3, [pc, #8]	; (800ce98 <PixelConfiguration::GetRgbMapping(pixel::Type)+0x10>)
 800ce90:	5618      	ldrsbls	r0, [r3, r0]
 800ce92:	2002      	movhi	r0, #2
 800ce94:	4770      	bx	lr
 800ce96:	bf00      	nop
 800ce98:	08016159 	stmdaeq	r1, {r0, r3, r4, r6, r8, sp, lr}

0800ce9c <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)>:
 800ce9c:	23c0      	movs	r3, #192	; 0xc0
 800ce9e:	2803      	cmp	r0, #3
 800cea0:	700b      	strb	r3, [r1, #0]
 800cea2:	d006      	beq.n	800ceb2 <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)+0x16>
 800cea4:	3808      	subs	r0, #8
 800cea6:	2803      	cmp	r0, #3
 800cea8:	bf34      	ite	cc
 800ceaa:	23fc      	movcc	r3, #252	; 0xfc
 800ceac:	23f0      	movcs	r3, #240	; 0xf0
 800ceae:	7013      	strb	r3, [r2, #0]
 800ceb0:	4770      	bx	lr
 800ceb2:	23f8      	movs	r3, #248	; 0xf8
 800ceb4:	e7fb      	b.n	800ceae <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)+0x12>
	...

0800ceb8 <PixelConfiguration::Validate(unsigned int&)>:
 800ceb8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ceba:	e9d0 5300 	ldrd	r5, r3, [r0]
 800cebe:	2d07      	cmp	r5, #7
 800cec0:	4604      	mov	r4, r0
 800cec2:	6882      	ldr	r2, [r0, #8]
 800cec4:	d129      	bne.n	800cf1a <PixelConfiguration::Validate(unsigned int&)+0x62>
 800cec6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800ceca:	bf28      	it	cs
 800cecc:	f44f 7300 	movcs.w	r3, #512	; 0x200
 800ced0:	6043      	str	r3, [r0, #4]
 800ced2:	2304      	movs	r3, #4
 800ced4:	600b      	str	r3, [r1, #0]
 800ced6:	2301      	movs	r3, #1
 800ced8:	2a06      	cmp	r2, #6
 800ceda:	74e3      	strb	r3, [r4, #19]
 800cedc:	d103      	bne.n	800cee6 <PixelConfiguration::Validate(unsigned int&)+0x2e>
 800cede:	4628      	mov	r0, r5
 800cee0:	f7ff ffd2 	bl	800ce88 <PixelConfiguration::GetRgbMapping(pixel::Type)>
 800cee4:	60a0      	str	r0, [r4, #8]
 800cee6:	7c63      	ldrb	r3, [r4, #17]
 800cee8:	7c22      	ldrb	r2, [r4, #16]
 800ceea:	4628      	mov	r0, r5
 800ceec:	429a      	cmp	r2, r3
 800ceee:	bf28      	it	cs
 800cef0:	2300      	movcs	r3, #0
 800cef2:	f10d 0207 	add.w	r2, sp, #7
 800cef6:	bf28      	it	cs
 800cef8:	8223      	strhcs	r3, [r4, #16]
 800cefa:	f10d 0106 	add.w	r1, sp, #6
 800cefe:	f7ff ffcd 	bl	800ce9c <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)>
 800cf02:	7c23      	ldrb	r3, [r4, #16]
 800cf04:	b913      	cbnz	r3, 800cf0c <PixelConfiguration::Validate(unsigned int&)+0x54>
 800cf06:	f89d 3006 	ldrb.w	r3, [sp, #6]
 800cf0a:	7423      	strb	r3, [r4, #16]
 800cf0c:	7c63      	ldrb	r3, [r4, #17]
 800cf0e:	b913      	cbnz	r3, 800cf16 <PixelConfiguration::Validate(unsigned int&)+0x5e>
 800cf10:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800cf14:	7463      	strb	r3, [r4, #17]
 800cf16:	4b1a      	ldr	r3, [pc, #104]	; (800cf80 <PixelConfiguration::Validate(unsigned int&)+0xc8>)
 800cf18:	e020      	b.n	800cf5c <PixelConfiguration::Validate(unsigned int&)+0xa4>
 800cf1a:	f5b3 7f2a 	cmp.w	r3, #680	; 0x2a8
 800cf1e:	bf28      	it	cs
 800cf20:	f44f 732a 	movcs.w	r3, #680	; 0x2a8
 800cf24:	6043      	str	r3, [r0, #4]
 800cf26:	2303      	movs	r3, #3
 800cf28:	600b      	str	r3, [r1, #0]
 800cf2a:	f1a5 030b 	sub.w	r3, r5, #11
 800cf2e:	2b01      	cmp	r3, #1
 800cf30:	d806      	bhi.n	800cf40 <PixelConfiguration::Validate(unsigned int&)+0x88>
 800cf32:	7c83      	ldrb	r3, [r0, #18]
 800cf34:	2b1f      	cmp	r3, #31
 800cf36:	d81d      	bhi.n	800cf74 <PixelConfiguration::Validate(unsigned int&)+0xbc>
 800cf38:	f043 03e0 	orr.w	r3, r3, #224	; 0xe0
 800cf3c:	74a3      	strb	r3, [r4, #18]
 800cf3e:	e000      	b.n	800cf42 <PixelConfiguration::Validate(unsigned int&)+0x8a>
 800cf40:	b9d5      	cbnz	r5, 800cf78 <PixelConfiguration::Validate(unsigned int&)+0xc0>
 800cf42:	2300      	movs	r3, #0
 800cf44:	f44f 417f 	mov.w	r1, #65280	; 0xff00
 800cf48:	2a06      	cmp	r2, #6
 800cf4a:	bf08      	it	eq
 800cf4c:	60a3      	streq	r3, [r4, #8]
 800cf4e:	2d0d      	cmp	r5, #13
 800cf50:	74e3      	strb	r3, [r4, #19]
 800cf52:	8221      	strh	r1, [r4, #16]
 800cf54:	68e3      	ldr	r3, [r4, #12]
 800cf56:	d109      	bne.n	800cf6c <PixelConfiguration::Validate(unsigned int&)+0xb4>
 800cf58:	b913      	cbnz	r3, 800cf60 <PixelConfiguration::Validate(unsigned int&)+0xa8>
 800cf5a:	4b0a      	ldr	r3, [pc, #40]	; (800cf84 <PixelConfiguration::Validate(unsigned int&)+0xcc>)
 800cf5c:	60e3      	str	r3, [r4, #12]
 800cf5e:	e003      	b.n	800cf68 <PixelConfiguration::Validate(unsigned int&)+0xb0>
 800cf60:	4a09      	ldr	r2, [pc, #36]	; (800cf88 <PixelConfiguration::Validate(unsigned int&)+0xd0>)
 800cf62:	4293      	cmp	r3, r2
 800cf64:	d900      	bls.n	800cf68 <PixelConfiguration::Validate(unsigned int&)+0xb0>
 800cf66:	60e2      	str	r2, [r4, #12]
 800cf68:	b003      	add	sp, #12
 800cf6a:	bd30      	pop	{r4, r5, pc}
 800cf6c:	2b00      	cmp	r3, #0
 800cf6e:	d0f4      	beq.n	800cf5a <PixelConfiguration::Validate(unsigned int&)+0xa2>
 800cf70:	4a06      	ldr	r2, [pc, #24]	; (800cf8c <PixelConfiguration::Validate(unsigned int&)+0xd4>)
 800cf72:	e7f6      	b.n	800cf62 <PixelConfiguration::Validate(unsigned int&)+0xaa>
 800cf74:	23ff      	movs	r3, #255	; 0xff
 800cf76:	e7e1      	b.n	800cf3c <PixelConfiguration::Validate(unsigned int&)+0x84>
 800cf78:	2d0d      	cmp	r5, #13
 800cf7a:	d1ac      	bne.n	800ced6 <PixelConfiguration::Validate(unsigned int&)+0x1e>
 800cf7c:	e7e1      	b.n	800cf42 <PixelConfiguration::Validate(unsigned int&)+0x8a>
 800cf7e:	bf00      	nop
 800cf80:	0061a800 	rsbeq	sl, r1, r0, lsl #16
 800cf84:	003d0900 	eorseq	r0, sp, r0, lsl #18
 800cf88:	00e4e1c0 	rsceq	lr, r4, r0, asr #3
 800cf8c:	017d7840 	cmneq	sp, r0, asr #16

0800cf90 <PixelConfiguration::Dump()>:
 800cf90:	4770      	bx	lr
	...

0800cf94 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>:
 800cf94:	b507      	push	{r0, r1, r2, lr}
 800cf96:	b2d3      	uxtb	r3, r2
 800cf98:	9301      	str	r3, [sp, #4]
 800cf9a:	f3c2 2307 	ubfx	r3, r2, #8, #8
 800cf9e:	9300      	str	r3, [sp, #0]
 800cfa0:	f3c2 4307 	ubfx	r3, r2, #16, #8
 800cfa4:	460a      	mov	r2, r1
 800cfa6:	4601      	mov	r1, r0
 800cfa8:	4803      	ldr	r0, [pc, #12]	; (800cfb8 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x24>)
 800cfaa:	6800      	ldr	r0, [r0, #0]
 800cfac:	f000 fdd2 	bl	800db54 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 800cfb0:	b003      	add	sp, #12
 800cfb2:	f85d fb04 	ldr.w	pc, [sp], #4
 800cfb6:	bf00      	nop
 800cfb8:	2000c5b8 			; <UNDEFINED> instruction: 0x2000c5b8

0800cfbc <PixelPatterns::Clear(unsigned int) [clone .isra.0]>:
 800cfbc:	b570      	push	{r4, r5, r6, lr}
 800cfbe:	4605      	mov	r5, r0
 800cfc0:	2400      	movs	r4, #0
 800cfc2:	4e06      	ldr	r6, [pc, #24]	; (800cfdc <PixelPatterns::Clear(unsigned int) [clone .isra.0]+0x20>)
 800cfc4:	6833      	ldr	r3, [r6, #0]
 800cfc6:	429c      	cmp	r4, r3
 800cfc8:	d300      	bcc.n	800cfcc <PixelPatterns::Clear(unsigned int) [clone .isra.0]+0x10>
 800cfca:	bd70      	pop	{r4, r5, r6, pc}
 800cfcc:	4621      	mov	r1, r4
 800cfce:	2200      	movs	r2, #0
 800cfd0:	4628      	mov	r0, r5
 800cfd2:	f7ff ffdf 	bl	800cf94 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800cfd6:	3401      	adds	r4, #1
 800cfd8:	e7f4      	b.n	800cfc4 <PixelPatterns::Clear(unsigned int) [clone .isra.0]+0x8>
 800cfda:	bf00      	nop
 800cfdc:	2000c5b4 			; <UNDEFINED> instruction: 0x2000c5b4

0800cfe0 <PixelPatterns::PixelPatterns(unsigned int)>:
 800cfe0:	2908      	cmp	r1, #8
 800cfe2:	bf28      	it	cs
 800cfe4:	2108      	movcs	r1, #8
 800cfe6:	4b0b      	ldr	r3, [pc, #44]	; (800d014 <PixelPatterns::PixelPatterns(unsigned int)+0x34>)
 800cfe8:	4a0b      	ldr	r2, [pc, #44]	; (800d018 <PixelPatterns::PixelPatterns(unsigned int)+0x38>)
 800cfea:	681b      	ldr	r3, [r3, #0]
 800cfec:	b510      	push	{r4, lr}
 800cfee:	6013      	str	r3, [r2, #0]
 800cff0:	4a0a      	ldr	r2, [pc, #40]	; (800d01c <PixelPatterns::PixelPatterns(unsigned int)+0x3c>)
 800cff2:	6011      	str	r1, [r2, #0]
 800cff4:	685a      	ldr	r2, [r3, #4]
 800cff6:	4b0a      	ldr	r3, [pc, #40]	; (800d020 <PixelPatterns::PixelPatterns(unsigned int)+0x40>)
 800cff8:	2100      	movs	r1, #0
 800cffa:	601a      	str	r2, [r3, #0]
 800cffc:	2208      	movs	r2, #8
 800cffe:	4b09      	ldr	r3, [pc, #36]	; (800d024 <PixelPatterns::PixelPatterns(unsigned int)+0x44>)
 800d000:	681c      	ldr	r4, [r3, #0]
 800d002:	4b09      	ldr	r3, [pc, #36]	; (800d028 <PixelPatterns::PixelPatterns(unsigned int)+0x48>)
 800d004:	3a01      	subs	r2, #1
 800d006:	61d9      	str	r1, [r3, #28]
 800d008:	601c      	str	r4, [r3, #0]
 800d00a:	6199      	str	r1, [r3, #24]
 800d00c:	f103 0320 	add.w	r3, r3, #32
 800d010:	d1f8      	bne.n	800d004 <PixelPatterns::PixelPatterns(unsigned int)+0x24>
 800d012:	bd10      	pop	{r4, pc}
 800d014:	20013dc4 	andcs	r3, r1, r4, asr #27
 800d018:	2000c5b8 			; <UNDEFINED> instruction: 0x2000c5b8
 800d01c:	2000c5ac 	andcs	ip, r0, ip, lsr #11
 800d020:	2000c5b4 			; <UNDEFINED> instruction: 0x2000c5b4
 800d024:	2001ce4c 	andcs	ip, r1, ip, asr #28
 800d028:	2000c4ac 	andcs	ip, r0, ip, lsr #9

0800d02c <PixelPatterns::GetName(pixelpatterns::Pattern)>:
 800d02c:	2805      	cmp	r0, #5
 800d02e:	bfdd      	ittte	le
 800d030:	220e      	movle	r2, #14
 800d032:	4b02      	ldrle	r3, [pc, #8]	; (800d03c <PixelPatterns::GetName(pixelpatterns::Pattern)+0x10>)
 800d034:	fb02 3000 	mlale	r0, r2, r0, r3
 800d038:	4801      	ldrgt	r0, [pc, #4]	; (800d040 <PixelPatterns::GetName(pixelpatterns::Pattern)+0x14>)
 800d03a:	4770      	bx	lr
 800d03c:	0801616b 	stmdaeq	r1, {r0, r1, r3, r5, r6, r8, sp, lr}
 800d040:	08016163 	stmdaeq	r1, {r0, r1, r5, r6, r8, sp, lr}

0800d044 <PixelPatterns::RainbowCycle(unsigned int, unsigned int, pixelpatterns::Direction)>:
 800d044:	b5e0      	push	{r5, r6, r7, lr}
 800d046:	4608      	mov	r0, r1
 800d048:	460d      	mov	r5, r1
 800d04a:	4617      	mov	r7, r2
 800d04c:	461e      	mov	r6, r3
 800d04e:	f7ff ffb5 	bl	800cfbc <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800d052:	2301      	movs	r3, #1
 800d054:	4905      	ldr	r1, [pc, #20]	; (800d06c <PixelPatterns::RainbowCycle(unsigned int, unsigned int, pixelpatterns::Direction)+0x28>)
 800d056:	22ff      	movs	r2, #255	; 0xff
 800d058:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 800d05c:	61cb      	str	r3, [r1, #28]
 800d05e:	2300      	movs	r3, #0
 800d060:	604f      	str	r7, [r1, #4]
 800d062:	e9c1 2304 	strd	r2, r3, [r1, #16]
 800d066:	618e      	str	r6, [r1, #24]
 800d068:	bde0      	pop	{r5, r6, r7, pc}
 800d06a:	bf00      	nop
 800d06c:	2000c4ac 	andcs	ip, r0, ip, lsr #9

0800d070 <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>:
 800d070:	b5e0      	push	{r5, r6, r7, lr}
 800d072:	4608      	mov	r0, r1
 800d074:	460d      	mov	r5, r1
 800d076:	461e      	mov	r6, r3
 800d078:	4617      	mov	r7, r2
 800d07a:	f7ff ff9f 	bl	800cfbc <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800d07e:	2302      	movs	r3, #2
 800d080:	4907      	ldr	r1, [pc, #28]	; (800d0a0 <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x30>)
 800d082:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 800d086:	61cb      	str	r3, [r1, #28]
 800d088:	9b04      	ldr	r3, [sp, #16]
 800d08a:	e9c1 7602 	strd	r7, r6, [r1, #8]
 800d08e:	604b      	str	r3, [r1, #4]
 800d090:	4b04      	ldr	r3, [pc, #16]	; (800d0a4 <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x34>)
 800d092:	681b      	ldr	r3, [r3, #0]
 800d094:	610b      	str	r3, [r1, #16]
 800d096:	2300      	movs	r3, #0
 800d098:	614b      	str	r3, [r1, #20]
 800d09a:	9b05      	ldr	r3, [sp, #20]
 800d09c:	618b      	str	r3, [r1, #24]
 800d09e:	bde0      	pop	{r5, r6, r7, pc}
 800d0a0:	2000c4ac 	andcs	ip, r0, ip, lsr #9
 800d0a4:	2000c5b4 			; <UNDEFINED> instruction: 0x2000c5b4

0800d0a8 <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>:
 800d0a8:	b5e0      	push	{r5, r6, r7, lr}
 800d0aa:	4608      	mov	r0, r1
 800d0ac:	460d      	mov	r5, r1
 800d0ae:	461f      	mov	r7, r3
 800d0b0:	4616      	mov	r6, r2
 800d0b2:	f7ff ff83 	bl	800cfbc <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800d0b6:	2303      	movs	r3, #3
 800d0b8:	4906      	ldr	r1, [pc, #24]	; (800d0d4 <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x2c>)
 800d0ba:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 800d0be:	61cb      	str	r3, [r1, #28]
 800d0c0:	4b05      	ldr	r3, [pc, #20]	; (800d0d8 <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x30>)
 800d0c2:	604f      	str	r7, [r1, #4]
 800d0c4:	681b      	ldr	r3, [r3, #0]
 800d0c6:	608e      	str	r6, [r1, #8]
 800d0c8:	610b      	str	r3, [r1, #16]
 800d0ca:	2300      	movs	r3, #0
 800d0cc:	614b      	str	r3, [r1, #20]
 800d0ce:	9b04      	ldr	r3, [sp, #16]
 800d0d0:	618b      	str	r3, [r1, #24]
 800d0d2:	bde0      	pop	{r5, r6, r7, pc}
 800d0d4:	2000c4ac 	andcs	ip, r0, ip, lsr #9
 800d0d8:	2000c5b4 			; <UNDEFINED> instruction: 0x2000c5b4

0800d0dc <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)>:
 800d0dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d0de:	4608      	mov	r0, r1
 800d0e0:	460d      	mov	r5, r1
 800d0e2:	461f      	mov	r7, r3
 800d0e4:	4616      	mov	r6, r2
 800d0e6:	f7ff ff69 	bl	800cfbc <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800d0ea:	2304      	movs	r3, #4
 800d0ec:	4c12      	ldr	r4, [pc, #72]	; (800d138 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x5c>)
 800d0ee:	4913      	ldr	r1, [pc, #76]	; (800d13c <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x60>)
 800d0f0:	6820      	ldr	r0, [r4, #0]
 800d0f2:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 800d0f6:	61cb      	str	r3, [r1, #28]
 800d0f8:	1e43      	subs	r3, r0, #1
 800d0fa:	005b      	lsls	r3, r3, #1
 800d0fc:	b29b      	uxth	r3, r3
 800d0fe:	610b      	str	r3, [r1, #16]
 800d100:	2300      	movs	r3, #0
 800d102:	4d0f      	ldr	r5, [pc, #60]	; (800d140 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x64>)
 800d104:	614b      	str	r3, [r1, #20]
 800d106:	682b      	ldr	r3, [r5, #0]
 800d108:	604f      	str	r7, [r1, #4]
 800d10a:	608e      	str	r6, [r1, #8]
 800d10c:	b97b      	cbnz	r3, 800d12e <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x52>
 800d10e:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 800d112:	4298      	cmp	r0, r3
 800d114:	bf2c      	ite	cs
 800d116:	f04f 30ff 	movcs.w	r0, #4294967295	; 0xffffffff
 800d11a:	0080      	lslcc	r0, r0, #2
 800d11c:	f006 f990 	bl	8013440 <operator new[](unsigned int)>
 800d120:	2200      	movs	r2, #0
 800d122:	6823      	ldr	r3, [r4, #0]
 800d124:	6028      	str	r0, [r5, #0]
 800d126:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 800d12a:	4298      	cmp	r0, r3
 800d12c:	d100      	bne.n	800d130 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x54>
 800d12e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d130:	f840 2b04 	str.w	r2, [r0], #4
 800d134:	e7f9      	b.n	800d12a <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x4e>
 800d136:	bf00      	nop
 800d138:	2000c5b4 			; <UNDEFINED> instruction: 0x2000c5b4
 800d13c:	2000c4ac 	andcs	ip, r0, ip, lsr #9
 800d140:	2000c5b0 			; <UNDEFINED> instruction: 0x2000c5b0

0800d144 <PixelPatterns::Fade(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>:
 800d144:	b5e0      	push	{r5, r6, r7, lr}
 800d146:	4608      	mov	r0, r1
 800d148:	460d      	mov	r5, r1
 800d14a:	461e      	mov	r6, r3
 800d14c:	4617      	mov	r7, r2
 800d14e:	f7ff ff35 	bl	800cfbc <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800d152:	2305      	movs	r3, #5
 800d154:	4907      	ldr	r1, [pc, #28]	; (800d174 <PixelPatterns::Fade(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x30>)
 800d156:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 800d15a:	61cb      	str	r3, [r1, #28]
 800d15c:	9b05      	ldr	r3, [sp, #20]
 800d15e:	e9c1 7602 	strd	r7, r6, [r1, #8]
 800d162:	604b      	str	r3, [r1, #4]
 800d164:	9b04      	ldr	r3, [sp, #16]
 800d166:	610b      	str	r3, [r1, #16]
 800d168:	2300      	movs	r3, #0
 800d16a:	614b      	str	r3, [r1, #20]
 800d16c:	9b06      	ldr	r3, [sp, #24]
 800d16e:	618b      	str	r3, [r1, #24]
 800d170:	bde0      	pop	{r5, r6, r7, pc}
 800d172:	bf00      	nop
 800d174:	2000c4ac 	andcs	ip, r0, ip, lsr #9

0800d178 <PixelPatterns::Wheel(unsigned char)>:
 800d178:	43cb      	mvns	r3, r1
 800d17a:	b2db      	uxtb	r3, r3
 800d17c:	2b54      	cmp	r3, #84	; 0x54
 800d17e:	d809      	bhi.n	800d194 <PixelPatterns::Wheel(unsigned char)+0x1c>
 800d180:	eba3 0383 	sub.w	r3, r3, r3, lsl #2
 800d184:	b2db      	uxtb	r3, r3
 800d186:	1e5a      	subs	r2, r3, #1
 800d188:	4258      	negs	r0, r3
 800d18a:	b2d2      	uxtb	r2, r2
 800d18c:	b2c0      	uxtb	r0, r0
 800d18e:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 800d192:	4770      	bx	lr
 800d194:	2ba9      	cmp	r3, #169	; 0xa9
 800d196:	d809      	bhi.n	800d1ac <PixelPatterns::Wheel(unsigned char)+0x34>
 800d198:	f1c1 01aa 	rsb	r1, r1, #170	; 0xaa
 800d19c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 800d1a0:	b2c9      	uxtb	r1, r1
 800d1a2:	43c8      	mvns	r0, r1
 800d1a4:	b2c0      	uxtb	r0, r0
 800d1a6:	ea40 2001 	orr.w	r0, r0, r1, lsl #8
 800d1aa:	4770      	bx	lr
 800d1ac:	f1c1 0155 	rsb	r1, r1, #85	; 0x55
 800d1b0:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 800d1b4:	b2c9      	uxtb	r1, r1
 800d1b6:	0208      	lsls	r0, r1, #8
 800d1b8:	f480 407f 	eor.w	r0, r0, #65280	; 0xff00
 800d1bc:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 800d1c0:	4770      	bx	lr
	...

0800d1c4 <PixelPatterns::Increment(unsigned int)>:
 800d1c4:	4a0d      	ldr	r2, [pc, #52]	; (800d1fc <PixelPatterns::Increment(unsigned int)+0x38>)
 800d1c6:	b510      	push	{r4, lr}
 800d1c8:	014c      	lsls	r4, r1, #5
 800d1ca:	eb02 1141 	add.w	r1, r2, r1, lsl #5
 800d1ce:	e9d1 3005 	ldrd	r3, r0, [r1, #20]
 800d1d2:	b930      	cbnz	r0, 800d1e2 <PixelPatterns::Increment(unsigned int)+0x1e>
 800d1d4:	690a      	ldr	r2, [r1, #16]
 800d1d6:	3301      	adds	r3, #1
 800d1d8:	4293      	cmp	r3, r2
 800d1da:	bf18      	it	ne
 800d1dc:	4618      	movne	r0, r3
 800d1de:	6148      	str	r0, [r1, #20]
 800d1e0:	bd10      	pop	{r4, pc}
 800d1e2:	b92b      	cbnz	r3, 800d1f0 <PixelPatterns::Increment(unsigned int)+0x2c>
 800d1e4:	4422      	add	r2, r4
 800d1e6:	6913      	ldr	r3, [r2, #16]
 800d1e8:	3b01      	subs	r3, #1
 800d1ea:	b29b      	uxth	r3, r3
 800d1ec:	6153      	str	r3, [r2, #20]
 800d1ee:	e7f7      	b.n	800d1e0 <PixelPatterns::Increment(unsigned int)+0x1c>
 800d1f0:	3b01      	subs	r3, #1
 800d1f2:	614b      	str	r3, [r1, #20]
 800d1f4:	2b00      	cmp	r3, #0
 800d1f6:	d1f3      	bne.n	800d1e0 <PixelPatterns::Increment(unsigned int)+0x1c>
 800d1f8:	e7f4      	b.n	800d1e4 <PixelPatterns::Increment(unsigned int)+0x20>
 800d1fa:	bf00      	nop
 800d1fc:	2000c4ac 	andcs	ip, r0, ip, lsr #9

0800d200 <PixelPatterns::RainbowCycleUpdate(unsigned int)>:
 800d200:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800d204:	4605      	mov	r5, r0
 800d206:	460c      	mov	r4, r1
 800d208:	2700      	movs	r7, #0
 800d20a:	4b11      	ldr	r3, [pc, #68]	; (800d250 <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x50>)
 800d20c:	f8df 8044 	ldr.w	r8, [pc, #68]	; 800d254 <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x54>
 800d210:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800d214:	f8d3 9014 	ldr.w	r9, [r3, #20]
 800d218:	f8d8 3000 	ldr.w	r3, [r8]
 800d21c:	b2be      	uxth	r6, r7
 800d21e:	42b3      	cmp	r3, r6
 800d220:	f107 0701 	add.w	r7, r7, #1
 800d224:	d805      	bhi.n	800d232 <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x32>
 800d226:	4621      	mov	r1, r4
 800d228:	4628      	mov	r0, r5
 800d22a:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800d22e:	f7ff bfc9 	b.w	800d1c4 <PixelPatterns::Increment(unsigned int)>
 800d232:	0231      	lsls	r1, r6, #8
 800d234:	fbb1 f1f3 	udiv	r1, r1, r3
 800d238:	4449      	add	r1, r9
 800d23a:	4628      	mov	r0, r5
 800d23c:	b2c9      	uxtb	r1, r1
 800d23e:	f7ff ff9b 	bl	800d178 <PixelPatterns::Wheel(unsigned char)>
 800d242:	4631      	mov	r1, r6
 800d244:	4602      	mov	r2, r0
 800d246:	4620      	mov	r0, r4
 800d248:	f7ff fea4 	bl	800cf94 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800d24c:	e7e4      	b.n	800d218 <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x18>
 800d24e:	bf00      	nop
 800d250:	2000c4ac 	andcs	ip, r0, ip, lsr #9
 800d254:	2000c5b4 			; <UNDEFINED> instruction: 0x2000c5b4

0800d258 <PixelPatterns::TheaterChaseUpdate(unsigned int)>:
 800d258:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d25c:	4605      	mov	r5, r0
 800d25e:	460c      	mov	r4, r1
 800d260:	f04f 0b00 	mov.w	fp, #0
 800d264:	4b11      	ldr	r3, [pc, #68]	; (800d2ac <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x54>)
 800d266:	4e12      	ldr	r6, [pc, #72]	; (800d2b0 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x58>)
 800d268:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800d26c:	f8d3 9014 	ldr.w	r9, [r3, #20]
 800d270:	f8df a040 	ldr.w	sl, [pc, #64]	; 800d2b4 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x5c>
 800d274:	e9d3 7802 	ldrd	r7, r8, [r3, #8]
 800d278:	6833      	ldr	r3, [r6, #0]
 800d27a:	fa1f f18b 	uxth.w	r1, fp
 800d27e:	428b      	cmp	r3, r1
 800d280:	d805      	bhi.n	800d28e <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x36>
 800d282:	4621      	mov	r1, r4
 800d284:	4628      	mov	r0, r5
 800d286:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d28a:	f7ff bf9b 	b.w	800d1c4 <PixelPatterns::Increment(unsigned int)>
 800d28e:	eb09 0301 	add.w	r3, r9, r1
 800d292:	fb0a f303 	mul.w	r3, sl, r3
 800d296:	f1b3 3f55 	cmp.w	r3, #1431655765	; 0x55555555
 800d29a:	bf94      	ite	ls
 800d29c:	463a      	movls	r2, r7
 800d29e:	4642      	movhi	r2, r8
 800d2a0:	4620      	mov	r0, r4
 800d2a2:	f7ff fe77 	bl	800cf94 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800d2a6:	f10b 0b01 	add.w	fp, fp, #1
 800d2aa:	e7e5      	b.n	800d278 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x20>
 800d2ac:	2000c4ac 	andcs	ip, r0, ip, lsr #9
 800d2b0:	2000c5b4 			; <UNDEFINED> instruction: 0x2000c5b4
 800d2b4:	aaaaaaab 	bge	6ab7d68 <__stack_size+0x6ab5568>

0800d2b8 <PixelPatterns::ColourWipeUpdate(unsigned int)>:
 800d2b8:	b538      	push	{r3, r4, r5, lr}
 800d2ba:	460c      	mov	r4, r1
 800d2bc:	4605      	mov	r5, r0
 800d2be:	4b07      	ldr	r3, [pc, #28]	; (800d2dc <PixelPatterns::ColourWipeUpdate(unsigned int)+0x24>)
 800d2c0:	4620      	mov	r0, r4
 800d2c2:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800d2c6:	6959      	ldr	r1, [r3, #20]
 800d2c8:	689a      	ldr	r2, [r3, #8]
 800d2ca:	f7ff fe63 	bl	800cf94 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800d2ce:	4621      	mov	r1, r4
 800d2d0:	4628      	mov	r0, r5
 800d2d2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d2d6:	f7ff bf75 	b.w	800d1c4 <PixelPatterns::Increment(unsigned int)>
 800d2da:	bf00      	nop
 800d2dc:	2000c4ac 	andcs	ip, r0, ip, lsr #9

0800d2e0 <PixelPatterns::ScannerUpdate(unsigned int)>:
 800d2e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d2e4:	468b      	mov	fp, r1
 800d2e6:	f04f 0900 	mov.w	r9, #0
 800d2ea:	4b27      	ldr	r3, [pc, #156]	; (800d388 <PixelPatterns::ScannerUpdate(unsigned int)+0xa8>)
 800d2ec:	b085      	sub	sp, #20
 800d2ee:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800d2f2:	e9d3 7604 	ldrd	r7, r6, [r3, #16]
 800d2f6:	689d      	ldr	r5, [r3, #8]
 800d2f8:	f8df a090 	ldr.w	sl, [pc, #144]	; 800d38c <PixelPatterns::ScannerUpdate(unsigned int)+0xac>
 800d2fc:	00b3      	lsls	r3, r6, #2
 800d2fe:	f8df 8090 	ldr.w	r8, [pc, #144]	; 800d390 <PixelPatterns::ScannerUpdate(unsigned int)+0xb0>
 800d302:	9002      	str	r0, [sp, #8]
 800d304:	9301      	str	r3, [sp, #4]
 800d306:	1bbf      	subs	r7, r7, r6
 800d308:	f8da 2000 	ldr.w	r2, [sl]
 800d30c:	fa1f f489 	uxth.w	r4, r9
 800d310:	42a2      	cmp	r2, r4
 800d312:	d806      	bhi.n	800d322 <PixelPatterns::ScannerUpdate(unsigned int)+0x42>
 800d314:	4659      	mov	r1, fp
 800d316:	9802      	ldr	r0, [sp, #8]
 800d318:	b005      	add	sp, #20
 800d31a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d31e:	f7ff bf51 	b.w	800d1c4 <PixelPatterns::Increment(unsigned int)>
 800d322:	42a6      	cmp	r6, r4
 800d324:	d10b      	bne.n	800d33e <PixelPatterns::ScannerUpdate(unsigned int)+0x5e>
 800d326:	462a      	mov	r2, r5
 800d328:	4631      	mov	r1, r6
 800d32a:	4658      	mov	r0, fp
 800d32c:	f7ff fe32 	bl	800cf94 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800d330:	f8d8 2000 	ldr.w	r2, [r8]
 800d334:	9b01      	ldr	r3, [sp, #4]
 800d336:	50d5      	str	r5, [r2, r3]
 800d338:	f109 0901 	add.w	r9, r9, #1
 800d33c:	e7e4      	b.n	800d308 <PixelPatterns::ScannerUpdate(unsigned int)+0x28>
 800d33e:	42a7      	cmp	r7, r4
 800d340:	d109      	bne.n	800d356 <PixelPatterns::ScannerUpdate(unsigned int)+0x76>
 800d342:	462a      	mov	r2, r5
 800d344:	4639      	mov	r1, r7
 800d346:	4658      	mov	r0, fp
 800d348:	f7ff fe24 	bl	800cf94 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800d34c:	f8d8 2000 	ldr.w	r2, [r8]
 800d350:	f842 5024 	str.w	r5, [r2, r4, lsl #2]
 800d354:	e7f0      	b.n	800d338 <PixelPatterns::ScannerUpdate(unsigned int)+0x58>
 800d356:	f8d8 2000 	ldr.w	r2, [r8]
 800d35a:	4658      	mov	r0, fp
 800d35c:	f852 1024 	ldr.w	r1, [r2, r4, lsl #2]
 800d360:	f3c1 2246 	ubfx	r2, r1, #9, #7
 800d364:	f3c1 4c46 	ubfx	ip, r1, #17, #7
 800d368:	0212      	lsls	r2, r2, #8
 800d36a:	ea42 420c 	orr.w	r2, r2, ip, lsl #16
 800d36e:	f3c1 0146 	ubfx	r1, r1, #1, #7
 800d372:	430a      	orrs	r2, r1
 800d374:	4621      	mov	r1, r4
 800d376:	9203      	str	r2, [sp, #12]
 800d378:	f7ff fe0c 	bl	800cf94 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800d37c:	f8d8 1000 	ldr.w	r1, [r8]
 800d380:	9a03      	ldr	r2, [sp, #12]
 800d382:	f841 2024 	str.w	r2, [r1, r4, lsl #2]
 800d386:	e7d7      	b.n	800d338 <PixelPatterns::ScannerUpdate(unsigned int)+0x58>
 800d388:	2000c4ac 	andcs	ip, r0, ip, lsr #9
 800d38c:	2000c5b4 			; <UNDEFINED> instruction: 0x2000c5b4
 800d390:	2000c5b0 			; <UNDEFINED> instruction: 0x2000c5b0

0800d394 <PixelPatterns::FadeUpdate(unsigned int)>:
 800d394:	4a20      	ldr	r2, [pc, #128]	; (800d418 <PixelPatterns::FadeUpdate(unsigned int)+0x84>)
 800d396:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d39a:	eb02 1241 	add.w	r2, r2, r1, lsl #5
 800d39e:	e9d2 c302 	ldrd	ip, r3, [r2, #8]
 800d3a2:	460e      	mov	r6, r1
 800d3a4:	e9d2 1704 	ldrd	r1, r7, [r2, #16]
 800d3a8:	f3c3 2207 	ubfx	r2, r3, #8, #8
 800d3ac:	437a      	muls	r2, r7
 800d3ae:	f3cc 2407 	ubfx	r4, ip, #8, #8
 800d3b2:	4605      	mov	r5, r0
 800d3b4:	1bc8      	subs	r0, r1, r7
 800d3b6:	fb00 2204 	mla	r2, r0, r4, r2
 800d3ba:	f3c3 4407 	ubfx	r4, r3, #16, #8
 800d3be:	437c      	muls	r4, r7
 800d3c0:	b2db      	uxtb	r3, r3
 800d3c2:	437b      	muls	r3, r7
 800d3c4:	f3cc 4e07 	ubfx	lr, ip, #16, #8
 800d3c8:	fb00 440e 	mla	r4, r0, lr, r4
 800d3cc:	fa5f fc8c 	uxtb.w	ip, ip
 800d3d0:	fb00 330c 	mla	r3, r0, ip, r3
 800d3d4:	fbb2 f2f1 	udiv	r2, r2, r1
 800d3d8:	fbb4 f4f1 	udiv	r4, r4, r1
 800d3dc:	fbb3 f3f1 	udiv	r3, r3, r1
 800d3e0:	2700      	movs	r7, #0
 800d3e2:	0212      	lsls	r2, r2, #8
 800d3e4:	0424      	lsls	r4, r4, #16
 800d3e6:	b292      	uxth	r2, r2
 800d3e8:	f404 047f 	and.w	r4, r4, #16711680	; 0xff0000
 800d3ec:	4314      	orrs	r4, r2
 800d3ee:	b2db      	uxtb	r3, r3
 800d3f0:	f8df 8028 	ldr.w	r8, [pc, #40]	; 800d41c <PixelPatterns::FadeUpdate(unsigned int)+0x88>
 800d3f4:	431c      	orrs	r4, r3
 800d3f6:	f8d8 3000 	ldr.w	r3, [r8]
 800d3fa:	429f      	cmp	r7, r3
 800d3fc:	d305      	bcc.n	800d40a <PixelPatterns::FadeUpdate(unsigned int)+0x76>
 800d3fe:	4631      	mov	r1, r6
 800d400:	4628      	mov	r0, r5
 800d402:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800d406:	f7ff bedd 	b.w	800d1c4 <PixelPatterns::Increment(unsigned int)>
 800d40a:	4639      	mov	r1, r7
 800d40c:	4622      	mov	r2, r4
 800d40e:	4630      	mov	r0, r6
 800d410:	f7ff fdc0 	bl	800cf94 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800d414:	3701      	adds	r7, #1
 800d416:	e7ee      	b.n	800d3f6 <PixelPatterns::FadeUpdate(unsigned int)+0x62>
 800d418:	2000c4ac 	andcs	ip, r0, ip, lsr #9
 800d41c:	2000c5b4 			; <UNDEFINED> instruction: 0x2000c5b4

0800d420 <PixelPatterns::PortUpdate(unsigned int, unsigned int)>:
 800d420:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d422:	4b12      	ldr	r3, [pc, #72]	; (800d46c <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x4c>)
 800d424:	014e      	lsls	r6, r1, #5
 800d426:	599c      	ldr	r4, [r3, r6]
 800d428:	eb03 1541 	add.w	r5, r3, r1, lsl #5
 800d42c:	686f      	ldr	r7, [r5, #4]
 800d42e:	1b14      	subs	r4, r2, r4
 800d430:	42bc      	cmp	r4, r7
 800d432:	d319      	bcc.n	800d468 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x48>
 800d434:	519a      	str	r2, [r3, r6]
 800d436:	69eb      	ldr	r3, [r5, #28]
 800d438:	3b01      	subs	r3, #1
 800d43a:	2b04      	cmp	r3, #4
 800d43c:	d814      	bhi.n	800d468 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x48>
 800d43e:	e8df f003 	tbb	[pc, r3]
 800d442:	0d0a0703 	stceq	7, cr0, [sl, #-12]
 800d446:	f7ff0010 			; <UNDEFINED> instruction: 0xf7ff0010
 800d44a:	feda 2001 	cdp2	0, 13, cr2, cr10, cr1, {0}
 800d44e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d450:	f7ff ff02 	bl	800d258 <PixelPatterns::TheaterChaseUpdate(unsigned int)>
 800d454:	e7fa      	b.n	800d44c <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 800d456:	f7ff ff2f 	bl	800d2b8 <PixelPatterns::ColourWipeUpdate(unsigned int)>
 800d45a:	e7f7      	b.n	800d44c <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 800d45c:	f7ff ff40 	bl	800d2e0 <PixelPatterns::ScannerUpdate(unsigned int)>
 800d460:	e7f4      	b.n	800d44c <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 800d462:	f7ff ff97 	bl	800d394 <PixelPatterns::FadeUpdate(unsigned int)>
 800d466:	e7f1      	b.n	800d44c <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 800d468:	2000      	movs	r0, #0
 800d46a:	e7f0      	b.n	800d44e <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2e>
 800d46c:	2000c4ac 	andcs	ip, r0, ip, lsr #9

0800d470 <PixelPatterns::Run()>:
 800d470:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800d474:	4f11      	ldr	r7, [pc, #68]	; (800d4bc <PixelPatterns::Run()+0x4c>)
 800d476:	4606      	mov	r6, r0
 800d478:	6838      	ldr	r0, [r7, #0]
 800d47a:	f000 fb25 	bl	800dac8 <WS28xxMulti::IsUpdating()>
 800d47e:	4604      	mov	r4, r0
 800d480:	b9c8      	cbnz	r0, 800d4b6 <PixelPatterns::Run()+0x46>
 800d482:	4605      	mov	r5, r0
 800d484:	4b0e      	ldr	r3, [pc, #56]	; (800d4c0 <PixelPatterns::Run()+0x50>)
 800d486:	f8df 803c 	ldr.w	r8, [pc, #60]	; 800d4c4 <PixelPatterns::Run()+0x54>
 800d48a:	f8d3 9000 	ldr.w	r9, [r3]
 800d48e:	f8d8 3000 	ldr.w	r3, [r8]
 800d492:	b2e9      	uxtb	r1, r5
 800d494:	428b      	cmp	r3, r1
 800d496:	f105 0501 	add.w	r5, r5, #1
 800d49a:	d805      	bhi.n	800d4a8 <PixelPatterns::Run()+0x38>
 800d49c:	b15c      	cbz	r4, 800d4b6 <PixelPatterns::Run()+0x46>
 800d49e:	6838      	ldr	r0, [r7, #0]
 800d4a0:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800d4a4:	f000 ba7a 	b.w	800d99c <WS28xxMulti::Update()>
 800d4a8:	464a      	mov	r2, r9
 800d4aa:	4630      	mov	r0, r6
 800d4ac:	f7ff ffb8 	bl	800d420 <PixelPatterns::PortUpdate(unsigned int, unsigned int)>
 800d4b0:	4320      	orrs	r0, r4
 800d4b2:	b2c4      	uxtb	r4, r0
 800d4b4:	e7eb      	b.n	800d48e <PixelPatterns::Run()+0x1e>
 800d4b6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800d4ba:	bf00      	nop
 800d4bc:	2000c5b8 			; <UNDEFINED> instruction: 0x2000c5b8
 800d4c0:	2001ce4c 	andcs	ip, r1, ip, asr #28
 800d4c4:	2000c5ac 	andcs	ip, r0, ip, lsr #11

0800d4c8 <PixelType::GetType(pixel::Type)>:
 800d4c8:	280d      	cmp	r0, #13
 800d4ca:	bfda      	itte	le
 800d4cc:	4b02      	ldrle	r3, [pc, #8]	; (800d4d8 <PixelType::GetType(pixel::Type)+0x10>)
 800d4ce:	eb03 00c0 	addle.w	r0, r3, r0, lsl #3
 800d4d2:	4802      	ldrgt	r0, [pc, #8]	; (800d4dc <PixelType::GetType(pixel::Type)+0x14>)
 800d4d4:	4770      	bx	lr
 800d4d6:	bf00      	nop
 800d4d8:	080161e1 	stmdaeq	r1, {r0, r5, r6, r7, r8, sp, lr}
 800d4dc:	08016163 	stmdaeq	r1, {r0, r1, r5, r6, r8, sp, lr}

0800d4e0 <PixelType::GetType(char const*)>:
 800d4e0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d4e2:	4604      	mov	r4, r0
 800d4e4:	2000      	movs	r0, #0
 800d4e6:	490f      	ldr	r1, [pc, #60]	; (800d524 <PixelType::GetType(char const*)+0x44>)
 800d4e8:	1e67      	subs	r7, r4, #1
 800d4ea:	1e4e      	subs	r6, r1, #1
 800d4ec:	f817 2f01 	ldrb.w	r2, [r7, #1]!
 800d4f0:	4615      	mov	r5, r2
 800d4f2:	f1a2 0341 	sub.w	r3, r2, #65	; 0x41
 800d4f6:	2b19      	cmp	r3, #25
 800d4f8:	f816 3f01 	ldrb.w	r3, [r6, #1]!
 800d4fc:	bf98      	it	ls
 800d4fe:	f102 0520 	addls.w	r5, r2, #32
 800d502:	f1a3 0c41 	sub.w	ip, r3, #65	; 0x41
 800d506:	f1bc 0f19 	cmp.w	ip, #25
 800d50a:	bf98      	it	ls
 800d50c:	3320      	addls	r3, #32
 800d50e:	42ab      	cmp	r3, r5
 800d510:	d005      	beq.n	800d51e <PixelType::GetType(char const*)+0x3e>
 800d512:	3001      	adds	r0, #1
 800d514:	280e      	cmp	r0, #14
 800d516:	f101 0108 	add.w	r1, r1, #8
 800d51a:	d1e5      	bne.n	800d4e8 <PixelType::GetType(char const*)+0x8>
 800d51c:	e001      	b.n	800d522 <PixelType::GetType(char const*)+0x42>
 800d51e:	2a00      	cmp	r2, #0
 800d520:	d1e4      	bne.n	800d4ec <PixelType::GetType(char const*)+0xc>
 800d522:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d524:	080161e1 	stmdaeq	r1, {r0, r5, r6, r7, r8, sp, lr}

0800d528 <PixelType::GetMap(char const*)>:
 800d528:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d52a:	4605      	mov	r5, r0
 800d52c:	2000      	movs	r0, #0
 800d52e:	4b11      	ldr	r3, [pc, #68]	; (800d574 <PixelType::GetMap(char const*)+0x4c>)
 800d530:	1e5c      	subs	r4, r3, #1
 800d532:	1e6e      	subs	r6, r5, #1
 800d534:	f103 0c02 	add.w	ip, r3, #2
 800d538:	f814 2f01 	ldrb.w	r2, [r4, #1]!
 800d53c:	4617      	mov	r7, r2
 800d53e:	f1a2 0141 	sub.w	r1, r2, #65	; 0x41
 800d542:	2919      	cmp	r1, #25
 800d544:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 800d548:	bf98      	it	ls
 800d54a:	f102 0720 	addls.w	r7, r2, #32
 800d54e:	f1a1 0e41 	sub.w	lr, r1, #65	; 0x41
 800d552:	f1be 0f19 	cmp.w	lr, #25
 800d556:	bf98      	it	ls
 800d558:	3120      	addls	r1, #32
 800d55a:	42b9      	cmp	r1, r7
 800d55c:	d005      	beq.n	800d56a <PixelType::GetMap(char const*)+0x42>
 800d55e:	3001      	adds	r0, #1
 800d560:	2806      	cmp	r0, #6
 800d562:	f103 0304 	add.w	r3, r3, #4
 800d566:	d1e3      	bne.n	800d530 <PixelType::GetMap(char const*)+0x8>
 800d568:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d56a:	2a00      	cmp	r2, #0
 800d56c:	d0fc      	beq.n	800d568 <PixelType::GetMap(char const*)+0x40>
 800d56e:	4564      	cmp	r4, ip
 800d570:	d1e2      	bne.n	800d538 <PixelType::GetMap(char const*)+0x10>
 800d572:	e7f9      	b.n	800d568 <PixelType::GetMap(char const*)+0x40>
 800d574:	080161c9 	stmdaeq	r1, {r0, r3, r6, r7, r8, sp, lr}

0800d578 <PixelType::GetMap(pixel::Map)>:
 800d578:	2805      	cmp	r0, #5
 800d57a:	bfda      	itte	le
 800d57c:	4b02      	ldrle	r3, [pc, #8]	; (800d588 <PixelType::GetMap(pixel::Map)+0x10>)
 800d57e:	eb03 0080 	addle.w	r0, r3, r0, lsl #2
 800d582:	4802      	ldrgt	r0, [pc, #8]	; (800d58c <PixelType::GetMap(pixel::Map)+0x14>)
 800d584:	4770      	bx	lr
 800d586:	bf00      	nop
 800d588:	080161c9 	stmdaeq	r1, {r0, r3, r6, r7, r8, sp, lr}
 800d58c:	080161bf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r7, r8, sp, lr}

0800d590 <PixelType::ConvertTxH(unsigned char)>:
 800d590:	28f0      	cmp	r0, #240	; 0xf0
 800d592:	d010      	beq.n	800d5b6 <PixelType::ConvertTxH(unsigned char)+0x26>
 800d594:	d807      	bhi.n	800d5a6 <PixelType::ConvertTxH(unsigned char)+0x16>
 800d596:	28c0      	cmp	r0, #192	; 0xc0
 800d598:	d00f      	beq.n	800d5ba <PixelType::ConvertTxH(unsigned char)+0x2a>
 800d59a:	28e0      	cmp	r0, #224	; 0xe0
 800d59c:	d00f      	beq.n	800d5be <PixelType::ConvertTxH(unsigned char)+0x2e>
 800d59e:	2880      	cmp	r0, #128	; 0x80
 800d5a0:	d113      	bne.n	800d5ca <PixelType::ConvertTxH(unsigned char)+0x3a>
 800d5a2:	480b      	ldr	r0, [pc, #44]	; (800d5d0 <PixelType::ConvertTxH(unsigned char)+0x40>)
 800d5a4:	4770      	bx	lr
 800d5a6:	28fc      	cmp	r0, #252	; 0xfc
 800d5a8:	d00b      	beq.n	800d5c2 <PixelType::ConvertTxH(unsigned char)+0x32>
 800d5aa:	28fe      	cmp	r0, #254	; 0xfe
 800d5ac:	d00b      	beq.n	800d5c6 <PixelType::ConvertTxH(unsigned char)+0x36>
 800d5ae:	28f8      	cmp	r0, #248	; 0xf8
 800d5b0:	d10b      	bne.n	800d5ca <PixelType::ConvertTxH(unsigned char)+0x3a>
 800d5b2:	4808      	ldr	r0, [pc, #32]	; (800d5d4 <PixelType::ConvertTxH(unsigned char)+0x44>)
 800d5b4:	4770      	bx	lr
 800d5b6:	4808      	ldr	r0, [pc, #32]	; (800d5d8 <PixelType::ConvertTxH(unsigned char)+0x48>)
 800d5b8:	4770      	bx	lr
 800d5ba:	4808      	ldr	r0, [pc, #32]	; (800d5dc <PixelType::ConvertTxH(unsigned char)+0x4c>)
 800d5bc:	4770      	bx	lr
 800d5be:	4808      	ldr	r0, [pc, #32]	; (800d5e0 <PixelType::ConvertTxH(unsigned char)+0x50>)
 800d5c0:	4770      	bx	lr
 800d5c2:	4808      	ldr	r0, [pc, #32]	; (800d5e4 <PixelType::ConvertTxH(unsigned char)+0x54>)
 800d5c4:	4770      	bx	lr
 800d5c6:	4808      	ldr	r0, [pc, #32]	; (800d5e8 <PixelType::ConvertTxH(unsigned char)+0x58>)
 800d5c8:	4770      	bx	lr
 800d5ca:	2000      	movs	r0, #0
 800d5cc:	4770      	bx	lr
 800d5ce:	bf00      	nop
 800d5d0:	3e200000 	cdpcc	0, 2, cr0, cr0, cr0, {0}
 800d5d4:	3f480000 	svccc	0x00480000
 800d5d8:	3f200000 	svccc	0x00200000
 800d5dc:	3ea00000 	cdpcc	0, 10, cr0, cr0, cr0, {0}
 800d5e0:	3ef00000 	cdpcc	0, 15, cr0, cr0, cr0, {0}
 800d5e4:	3f700000 	svccc	0x00700000
 800d5e8:	3f8c0000 	svccc	0x008c0000

0800d5ec <PixelType::ConvertTxH(float)>:
 800d5ec:	b510      	push	{r4, lr}
 800d5ee:	491d      	ldr	r1, [pc, #116]	; (800d664 <PixelType::ConvertTxH(float)+0x78>)
 800d5f0:	4604      	mov	r4, r0
 800d5f2:	f7fa fc4f 	bl	8007e94 <__aeabi_fcmplt>
 800d5f6:	bb30      	cbnz	r0, 800d646 <PixelType::ConvertTxH(float)+0x5a>
 800d5f8:	4620      	mov	r0, r4
 800d5fa:	491b      	ldr	r1, [pc, #108]	; (800d668 <PixelType::ConvertTxH(float)+0x7c>)
 800d5fc:	f7fa fc4a 	bl	8007e94 <__aeabi_fcmplt>
 800d600:	bb18      	cbnz	r0, 800d64a <PixelType::ConvertTxH(float)+0x5e>
 800d602:	4620      	mov	r0, r4
 800d604:	4919      	ldr	r1, [pc, #100]	; (800d66c <PixelType::ConvertTxH(float)+0x80>)
 800d606:	f7fa fc45 	bl	8007e94 <__aeabi_fcmplt>
 800d60a:	bb00      	cbnz	r0, 800d64e <PixelType::ConvertTxH(float)+0x62>
 800d60c:	4620      	mov	r0, r4
 800d60e:	4918      	ldr	r1, [pc, #96]	; (800d670 <PixelType::ConvertTxH(float)+0x84>)
 800d610:	f7fa fc40 	bl	8007e94 <__aeabi_fcmplt>
 800d614:	b9e8      	cbnz	r0, 800d652 <PixelType::ConvertTxH(float)+0x66>
 800d616:	4620      	mov	r0, r4
 800d618:	4916      	ldr	r1, [pc, #88]	; (800d674 <PixelType::ConvertTxH(float)+0x88>)
 800d61a:	f7fa fc3b 	bl	8007e94 <__aeabi_fcmplt>
 800d61e:	b9d0      	cbnz	r0, 800d656 <PixelType::ConvertTxH(float)+0x6a>
 800d620:	4620      	mov	r0, r4
 800d622:	4915      	ldr	r1, [pc, #84]	; (800d678 <PixelType::ConvertTxH(float)+0x8c>)
 800d624:	f7fa fc36 	bl	8007e94 <__aeabi_fcmplt>
 800d628:	b9b8      	cbnz	r0, 800d65a <PixelType::ConvertTxH(float)+0x6e>
 800d62a:	4620      	mov	r0, r4
 800d62c:	4913      	ldr	r1, [pc, #76]	; (800d67c <PixelType::ConvertTxH(float)+0x90>)
 800d62e:	f7fa fc31 	bl	8007e94 <__aeabi_fcmplt>
 800d632:	b9a0      	cbnz	r0, 800d65e <PixelType::ConvertTxH(float)+0x72>
 800d634:	4620      	mov	r0, r4
 800d636:	4912      	ldr	r1, [pc, #72]	; (800d680 <PixelType::ConvertTxH(float)+0x94>)
 800d638:	f7fa fc2c 	bl	8007e94 <__aeabi_fcmplt>
 800d63c:	2800      	cmp	r0, #0
 800d63e:	bf14      	ite	ne
 800d640:	20fe      	movne	r0, #254	; 0xfe
 800d642:	2000      	moveq	r0, #0
 800d644:	bd10      	pop	{r4, pc}
 800d646:	2000      	movs	r0, #0
 800d648:	e7fc      	b.n	800d644 <PixelType::ConvertTxH(float)+0x58>
 800d64a:	2080      	movs	r0, #128	; 0x80
 800d64c:	e7fa      	b.n	800d644 <PixelType::ConvertTxH(float)+0x58>
 800d64e:	20c0      	movs	r0, #192	; 0xc0
 800d650:	e7f8      	b.n	800d644 <PixelType::ConvertTxH(float)+0x58>
 800d652:	20e0      	movs	r0, #224	; 0xe0
 800d654:	e7f6      	b.n	800d644 <PixelType::ConvertTxH(float)+0x58>
 800d656:	20f0      	movs	r0, #240	; 0xf0
 800d658:	e7f4      	b.n	800d644 <PixelType::ConvertTxH(float)+0x58>
 800d65a:	20f8      	movs	r0, #248	; 0xf8
 800d65c:	e7f2      	b.n	800d644 <PixelType::ConvertTxH(float)+0x58>
 800d65e:	20fc      	movs	r0, #252	; 0xfc
 800d660:	e7f0      	b.n	800d644 <PixelType::ConvertTxH(float)+0x58>
 800d662:	bf00      	nop
 800d664:	3da00000 	stccc	0, cr0, [r0]
 800d668:	3e700000 	cdpcc	0, 7, cr0, cr0, cr0, {0}
 800d66c:	3ec80000 	cdpcc	0, 12, cr0, cr8, cr0, {0}
 800d670:	3f0c0000 	svccc	0x000c0000
 800d674:	3f340000 	svccc	0x00340000
 800d678:	3f5c0000 	svccc	0x005c0000
 800d67c:	3f820000 	svccc	0x00820000
 800d680:	3f960000 	svccc	0x00960000

0800d684 <TIMER4_IRQHandler>:
 800d684:	f3bf 8f5f 	dmb	sy
 800d688:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800d68c:	f8d3 2c10 	ldr.w	r2, [r3, #3088]	; 0xc10
 800d690:	0791      	lsls	r1, r2, #30
 800d692:	d51c      	bpl.n	800d6ce <TIMER4_IRQHandler+0x4a>
 800d694:	f503 3398 	add.w	r3, r3, #77824	; 0x13000
 800d698:	f8d3 1400 	ldr.w	r1, [r3, #1024]	; 0x400
 800d69c:	f021 0101 	bic.w	r1, r1, #1
 800d6a0:	f8c3 1400 	str.w	r1, [r3, #1024]	; 0x400
 800d6a4:	f8d3 140c 	ldr.w	r1, [r3, #1036]	; 0x40c
 800d6a8:	f421 7100 	bic.w	r1, r1, #512	; 0x200
 800d6ac:	f8c3 140c 	str.w	r1, [r3, #1036]	; 0x40c
 800d6b0:	f8d3 140c 	ldr.w	r1, [r3, #1036]	; 0x40c
 800d6b4:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800d6b8:	f8c3 140c 	str.w	r1, [r3, #1036]	; 0x40c
 800d6bc:	f8d3 140c 	ldr.w	r1, [r3, #1036]	; 0x40c
 800d6c0:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
 800d6c4:	f8c3 140c 	str.w	r1, [r3, #1036]	; 0x40c
 800d6c8:	2100      	movs	r1, #0
 800d6ca:	4b05      	ldr	r3, [pc, #20]	; (800d6e0 <TIMER4_IRQHandler+0x5c>)
 800d6cc:	7019      	strb	r1, [r3, #0]
 800d6ce:	43d2      	mvns	r2, r2
 800d6d0:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800d6d4:	f8c3 2c10 	str.w	r2, [r3, #3088]	; 0xc10
 800d6d8:	f3bf 8f5f 	dmb	sy
 800d6dc:	4770      	bx	lr
 800d6de:	bf00      	nop
 800d6e0:	2000c5c0 	andcs	ip, r0, r0, asr #11

0800d6e4 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)>:
 800d6e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d6e8:	23aa      	movs	r3, #170	; 0xaa
 800d6ea:	f04f 0903 	mov.w	r9, #3
 800d6ee:	2400      	movs	r4, #0
 800d6f0:	e9c0 9300 	strd	r9, r3, [r0]
 800d6f4:	2306      	movs	r3, #6
 800d6f6:	460e      	mov	r6, r1
 800d6f8:	4605      	mov	r5, r0
 800d6fa:	e9c0 3402 	strd	r3, r4, [r0, #8]
 800d6fe:	4b8c      	ldr	r3, [pc, #560]	; (800d930 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x24c>)
 800d700:	b08d      	sub	sp, #52	; 0x34
 800d702:	4669      	mov	r1, sp
 800d704:	6018      	str	r0, [r3, #0]
 800d706:	4630      	mov	r0, r6
 800d708:	f7ff fbd6 	bl	800ceb8 <PixelConfiguration::Validate(unsigned int&)>
 800d70c:	4630      	mov	r0, r6
 800d70e:	f7ff fc3f 	bl	800cf90 <PixelConfiguration::Dump()>
 800d712:	6833      	ldr	r3, [r6, #0]
 800d714:	68b2      	ldr	r2, [r6, #8]
 800d716:	602b      	str	r3, [r5, #0]
 800d718:	60aa      	str	r2, [r5, #8]
 800d71a:	6873      	ldr	r3, [r6, #4]
 800d71c:	9a00      	ldr	r2, [sp, #0]
 800d71e:	606b      	str	r3, [r5, #4]
 800d720:	4353      	muls	r3, r2
 800d722:	fa03 f309 	lsl.w	r3, r3, r9
 800d726:	60eb      	str	r3, [r5, #12]
 800d728:	7c30      	ldrb	r0, [r6, #16]
 800d72a:	f008 f823 	bl	8015774 <__popcountsi2>
 800d72e:	4680      	mov	r8, r0
 800d730:	7c70      	ldrb	r0, [r6, #17]
 800d732:	f008 f81f 	bl	8015774 <__popcountsi2>
 800d736:	4e7f      	ldr	r6, [pc, #508]	; (800d934 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x250>)
 800d738:	4607      	mov	r7, r0
 800d73a:	f240 6004 	movw	r0, #1540	; 0x604
 800d73e:	f006 fb0d 	bl	8013d5c <rcu_periph_clock_enable>
 800d742:	464a      	mov	r2, r9
 800d744:	2110      	movs	r1, #16
 800d746:	4630      	mov	r0, r6
 800d748:	f44f 537f 	mov.w	r3, #16320	; 0x3fc0
 800d74c:	f006 fa6e 	bl	8013c2c <gpio_init>
 800d750:	f44f 537f 	mov.w	r3, #16320	; 0x3fc0
 800d754:	f240 600d 	movw	r0, #1549	; 0x60d
 800d758:	6173      	str	r3, [r6, #20]
 800d75a:	f506 5610 	add.w	r6, r6, #9216	; 0x2400
 800d75e:	f006 fafd 	bl	8013d5c <rcu_periph_clock_enable>
 800d762:	4630      	mov	r0, r6
 800d764:	f006 fc6e 	bl	8014044 <timer_deinit>
 800d768:	2395      	movs	r3, #149	; 0x95
 800d76a:	f04f 0996 	mov.w	r9, #150	; 0x96
 800d76e:	4630      	mov	r0, r6
 800d770:	a901      	add	r1, sp, #4
 800d772:	9303      	str	r3, [sp, #12]
 800d774:	9401      	str	r4, [sp, #4]
 800d776:	f8ad 4008 	strh.w	r4, [sp, #8]
 800d77a:	f8ad 4010 	strh.w	r4, [sp, #16]
 800d77e:	f006 fd07 	bl	8014190 <timer_init>
 800d782:	4621      	mov	r1, r4
 800d784:	4630      	mov	r0, r6
 800d786:	f006 fdb0 	bl	80142ea <timer_master_slave_mode_config>
 800d78a:	4630      	mov	r0, r6
 800d78c:	2130      	movs	r1, #48	; 0x30
 800d78e:	f006 fd9c 	bl	80142ca <timer_master_output_trigger_source_select>
 800d792:	4621      	mov	r1, r4
 800d794:	4630      	mov	r0, r6
 800d796:	2210      	movs	r2, #16
 800d798:	f006 fd5b 	bl	8014252 <timer_channel_output_mode_config>
 800d79c:	4630      	mov	r0, r6
 800d79e:	2210      	movs	r2, #16
 800d7a0:	2101      	movs	r1, #1
 800d7a2:	f006 fd56 	bl	8014252 <timer_channel_output_mode_config>
 800d7a6:	4630      	mov	r0, r6
 800d7a8:	2210      	movs	r2, #16
 800d7aa:	2102      	movs	r1, #2
 800d7ac:	f006 fd51 	bl	8014252 <timer_channel_output_mode_config>
 800d7b0:	4621      	mov	r1, r4
 800d7b2:	4630      	mov	r0, r6
 800d7b4:	2201      	movs	r2, #1
 800d7b6:	f006 fd72 	bl	801429e <timer_channel_output_pulse_value_config>
 800d7ba:	fb09 f208 	mul.w	r2, r9, r8
 800d7be:	4630      	mov	r0, r6
 800d7c0:	2101      	movs	r1, #1
 800d7c2:	f3c2 02cf 	ubfx	r2, r2, #3, #16
 800d7c6:	f006 fd6a 	bl	801429e <timer_channel_output_pulse_value_config>
 800d7ca:	fb09 f207 	mul.w	r2, r9, r7
 800d7ce:	2102      	movs	r1, #2
 800d7d0:	f3c2 02cf 	ubfx	r2, r2, #3, #16
 800d7d4:	4630      	mov	r0, r6
 800d7d6:	f006 fd62 	bl	801429e <timer_channel_output_pulse_value_config>
 800d7da:	f5a6 3694 	sub.w	r6, r6, #75776	; 0x12800
 800d7de:	f240 7003 	movw	r0, #1795	; 0x703
 800d7e2:	f006 fabb 	bl	8013d5c <rcu_periph_clock_enable>
 800d7e6:	4630      	mov	r0, r6
 800d7e8:	f006 fc2c 	bl	8014044 <timer_deinit>
 800d7ec:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800d7f0:	4630      	mov	r0, r6
 800d7f2:	a901      	add	r1, sp, #4
 800d7f4:	9303      	str	r3, [sp, #12]
 800d7f6:	9401      	str	r4, [sp, #4]
 800d7f8:	f8ad 4008 	strh.w	r4, [sp, #8]
 800d7fc:	f8ad 4010 	strh.w	r4, [sp, #16]
 800d800:	f006 fcc6 	bl	8014190 <timer_init>
 800d804:	4621      	mov	r1, r4
 800d806:	4630      	mov	r0, r6
 800d808:	f006 fd6f 	bl	80142ea <timer_master_slave_mode_config>
 800d80c:	4630      	mov	r0, r6
 800d80e:	2107      	movs	r1, #7
 800d810:	f006 fd63 	bl	80142da <timer_slave_mode_select>
 800d814:	4630      	mov	r0, r6
 800d816:	2130      	movs	r1, #48	; 0x30
 800d818:	f006 fd4f 	bl	80142ba <timer_input_trigger_source_select>
 800d81c:	4621      	mov	r1, r4
 800d81e:	4630      	mov	r0, r6
 800d820:	2210      	movs	r2, #16
 800d822:	f006 fd16 	bl	8014252 <timer_channel_output_mode_config>
 800d826:	68ea      	ldr	r2, [r5, #12]
 800d828:	4621      	mov	r1, r4
 800d82a:	3201      	adds	r2, #1
 800d82c:	4630      	mov	r0, r6
 800d82e:	b292      	uxth	r2, r2
 800d830:	f006 fd35 	bl	801429e <timer_channel_output_pulse_value_config>
 800d834:	2102      	movs	r1, #2
 800d836:	4630      	mov	r0, r6
 800d838:	f006 fd64 	bl	8014304 <timer_interrupt_enable>
 800d83c:	f44f 2280 	mov.w	r2, #262144	; 0x40000
 800d840:	f44f 7780 	mov.w	r7, #256	; 0x100
 800d844:	f44f 6a80 	mov.w	sl, #1024	; 0x400
 800d848:	f44f 5900 	mov.w	r9, #8192	; 0x2000
 800d84c:	f04f 0801 	mov.w	r8, #1
 800d850:	4b39      	ldr	r3, [pc, #228]	; (800d938 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x254>)
 800d852:	f506 36fc 	add.w	r6, r6, #129024	; 0x1f800
 800d856:	f883 4332 	strb.w	r4, [r3, #818]	; 0x332
 800d85a:	f240 5001 	movw	r0, #1281	; 0x501
 800d85e:	605a      	str	r2, [r3, #4]
 800d860:	f006 fa7c 	bl	8013d5c <rcu_periph_clock_enable>
 800d864:	2102      	movs	r1, #2
 800d866:	4630      	mov	r0, r6
 800d868:	f006 f8ec 	bl	8013a44 <dma_deinit>
 800d86c:	a805      	add	r0, sp, #20
 800d86e:	f006 f907 	bl	8013a80 <dma_struct_para_init>
 800d872:	4a32      	ldr	r2, [pc, #200]	; (800d93c <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x258>)
 800d874:	4b32      	ldr	r3, [pc, #200]	; (800d940 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x25c>)
 800d876:	4630      	mov	r0, r6
 800d878:	e9cd 2705 	strd	r2, r7, [sp, #20]
 800d87c:	2102      	movs	r1, #2
 800d87e:	aa05      	add	r2, sp, #20
 800d880:	9307      	str	r3, [sp, #28]
 800d882:	f8cd a020 	str.w	sl, [sp, #32]
 800d886:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800d88a:	f8ad 402c 	strh.w	r4, [sp, #44]	; 0x2c
 800d88e:	f88d 802e 	strb.w	r8, [sp, #46]	; 0x2e
 800d892:	f006 f8ff 	bl	8013a94 <dma_init>
 800d896:	4630      	mov	r0, r6
 800d898:	2102      	movs	r1, #2
 800d89a:	f006 f92c 	bl	8013af6 <dma_circulation_disable>
 800d89e:	4630      	mov	r0, r6
 800d8a0:	2102      	movs	r1, #2
 800d8a2:	f006 f930 	bl	8013b06 <dma_memory_to_memory_disable>
 800d8a6:	2104      	movs	r1, #4
 800d8a8:	4630      	mov	r0, r6
 800d8aa:	f006 f8cb 	bl	8013a44 <dma_deinit>
 800d8ae:	a805      	add	r0, sp, #20
 800d8b0:	f006 f8e6 	bl	8013a80 <dma_struct_para_init>
 800d8b4:	4a23      	ldr	r2, [pc, #140]	; (800d944 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x260>)
 800d8b6:	f8df b090 	ldr.w	fp, [pc, #144]	; 800d948 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x264>
 800d8ba:	4630      	mov	r0, r6
 800d8bc:	e9cd 2a07 	strd	r2, sl, [sp, #28]
 800d8c0:	2104      	movs	r1, #4
 800d8c2:	aa05      	add	r2, sp, #20
 800d8c4:	e9cd b705 	strd	fp, r7, [sp, #20]
 800d8c8:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800d8cc:	f8ad 702c 	strh.w	r7, [sp, #44]	; 0x2c
 800d8d0:	f88d 802e 	strb.w	r8, [sp, #46]	; 0x2e
 800d8d4:	f006 f8de 	bl	8013a94 <dma_init>
 800d8d8:	4630      	mov	r0, r6
 800d8da:	2104      	movs	r1, #4
 800d8dc:	f006 f90b 	bl	8013af6 <dma_circulation_disable>
 800d8e0:	4630      	mov	r0, r6
 800d8e2:	2104      	movs	r1, #4
 800d8e4:	f006 f90f 	bl	8013b06 <dma_memory_to_memory_disable>
 800d8e8:	4621      	mov	r1, r4
 800d8ea:	4630      	mov	r0, r6
 800d8ec:	f006 f8aa 	bl	8013a44 <dma_deinit>
 800d8f0:	a805      	add	r0, sp, #20
 800d8f2:	f006 f8c5 	bl	8013a80 <dma_struct_para_init>
 800d8f6:	4b12      	ldr	r3, [pc, #72]	; (800d940 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x25c>)
 800d8f8:	aa05      	add	r2, sp, #20
 800d8fa:	4621      	mov	r1, r4
 800d8fc:	4630      	mov	r0, r6
 800d8fe:	e9cd 3a07 	strd	r3, sl, [sp, #28]
 800d902:	e9cd b705 	strd	fp, r7, [sp, #20]
 800d906:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800d90a:	f8ad 402c 	strh.w	r4, [sp, #44]	; 0x2c
 800d90e:	f88d 802e 	strb.w	r8, [sp, #46]	; 0x2e
 800d912:	f006 f8bf 	bl	8013a94 <dma_init>
 800d916:	4621      	mov	r1, r4
 800d918:	4630      	mov	r0, r6
 800d91a:	f006 f8ec 	bl	8013af6 <dma_circulation_disable>
 800d91e:	4630      	mov	r0, r6
 800d920:	4621      	mov	r1, r4
 800d922:	f006 f8f0 	bl	8013b06 <dma_memory_to_memory_disable>
 800d926:	4628      	mov	r0, r5
 800d928:	b00d      	add	sp, #52	; 0x34
 800d92a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d92e:	bf00      	nop
 800d930:	20013dc4 	andcs	r3, r1, r4, asr #27
 800d934:	40011000 	andmi	r1, r1, r0
 800d938:	e000e100 	and	lr, r0, r0, lsl #2
 800d93c:	40011010 	andmi	r1, r1, r0, lsl r0
 800d940:	08016282 	stmdaeq	r1, {r1, r7, r9, sp, lr}
 800d944:	2000c5c4 	andcs	ip, r0, r4, asr #11
 800d948:	40011014 	andmi	r1, r1, r4, lsl r0

0800d94c <WS28xxMulti::~WS28xxMulti()>:
 800d94c:	2200      	movs	r2, #0
 800d94e:	4b01      	ldr	r3, [pc, #4]	; (800d954 <WS28xxMulti::~WS28xxMulti()+0x8>)
 800d950:	601a      	str	r2, [r3, #0]
 800d952:	4770      	bx	lr
 800d954:	20013dc4 	andcs	r3, r1, r4, asr #27

0800d958 <WS28xxMulti::Print()>:
 800d958:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d95a:	4604      	mov	r4, r0
 800d95c:	480c      	ldr	r0, [pc, #48]	; (800d990 <WS28xxMulti::Print()+0x38>)
 800d95e:	f7fb fe0f 	bl	8009580 <printf>
 800d962:	6820      	ldr	r0, [r4, #0]
 800d964:	f7ff fdb0 	bl	800d4c8 <PixelType::GetType(pixel::Type)>
 800d968:	4605      	mov	r5, r0
 800d96a:	68a0      	ldr	r0, [r4, #8]
 800d96c:	6826      	ldr	r6, [r4, #0]
 800d96e:	f7ff fe03 	bl	800d578 <PixelType::GetMap(pixel::Map)>
 800d972:	68a2      	ldr	r2, [r4, #8]
 800d974:	4603      	mov	r3, r0
 800d976:	4629      	mov	r1, r5
 800d978:	9200      	str	r2, [sp, #0]
 800d97a:	4806      	ldr	r0, [pc, #24]	; (800d994 <WS28xxMulti::Print()+0x3c>)
 800d97c:	4632      	mov	r2, r6
 800d97e:	f7fb fdff 	bl	8009580 <printf>
 800d982:	6861      	ldr	r1, [r4, #4]
 800d984:	4804      	ldr	r0, [pc, #16]	; (800d998 <WS28xxMulti::Print()+0x40>)
 800d986:	b002      	add	sp, #8
 800d988:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d98c:	f7fb bdf8 	b.w	8009580 <printf>
 800d990:	08016251 	stmdaeq	r1, {r0, r4, r6, r9, sp, lr}
 800d994:	08016258 	stmdaeq	r1, {r3, r4, r6, r9, sp, lr}
 800d998:	08016274 	stmdaeq	r1, {r2, r4, r5, r6, r9, sp, lr}

0800d99c <WS28xxMulti::Update()>:
 800d99c:	2201      	movs	r2, #1
 800d99e:	b570      	push	{r4, r5, r6, lr}
 800d9a0:	f04f 4580 	mov.w	r5, #1073741824	; 0x40000000
 800d9a4:	4b33      	ldr	r3, [pc, #204]	; (800da74 <WS28xxMulti::Update()+0xd8>)
 800d9a6:	4c34      	ldr	r4, [pc, #208]	; (800da78 <WS28xxMulti::Update()+0xdc>)
 800d9a8:	701a      	strb	r2, [r3, #0]
 800d9aa:	2200      	movs	r2, #0
 800d9ac:	f8d5 3c00 	ldr.w	r3, [r5, #3072]	; 0xc00
 800d9b0:	4932      	ldr	r1, [pc, #200]	; (800da7c <WS28xxMulti::Update()+0xe0>)
 800d9b2:	f023 0301 	bic.w	r3, r3, #1
 800d9b6:	f8c5 3c00 	str.w	r3, [r5, #3072]	; 0xc00
 800d9ba:	f8c5 2c24 	str.w	r2, [r5, #3108]	; 0xc24
 800d9be:	f8d4 3400 	ldr.w	r3, [r4, #1024]	; 0x400
 800d9c2:	4e2f      	ldr	r6, [pc, #188]	; (800da80 <WS28xxMulti::Update()+0xe4>)
 800d9c4:	f023 0301 	bic.w	r3, r3, #1
 800d9c8:	f8c4 3400 	str.w	r3, [r4, #1024]	; 0x400
 800d9cc:	4b2d      	ldr	r3, [pc, #180]	; (800da84 <WS28xxMulti::Update()+0xe8>)
 800d9ce:	f8c4 2424 	str.w	r2, [r4, #1060]	; 0x424
 800d9d2:	f8d3 2430 	ldr.w	r2, [r3, #1072]	; 0x430
 800d9d6:	f022 0201 	bic.w	r2, r2, #1
 800d9da:	f8c3 2430 	str.w	r2, [r3, #1072]	; 0x430
 800d9de:	f8c3 143c 	str.w	r1, [r3, #1084]	; 0x43c
 800d9e2:	8982      	ldrh	r2, [r0, #12]
 800d9e4:	f8c3 2434 	str.w	r2, [r3, #1076]	; 0x434
 800d9e8:	f8d3 2430 	ldr.w	r2, [r3, #1072]	; 0x430
 800d9ec:	f042 0201 	orr.w	r2, r2, #1
 800d9f0:	f8c3 2430 	str.w	r2, [r3, #1072]	; 0x430
 800d9f4:	f8d3 2458 	ldr.w	r2, [r3, #1112]	; 0x458
 800d9f8:	f022 0201 	bic.w	r2, r2, #1
 800d9fc:	f8c3 2458 	str.w	r2, [r3, #1112]	; 0x458
 800da00:	4a21      	ldr	r2, [pc, #132]	; (800da88 <WS28xxMulti::Update()+0xec>)
 800da02:	f8c3 2464 	str.w	r2, [r3, #1124]	; 0x464
 800da06:	8982      	ldrh	r2, [r0, #12]
 800da08:	f8c3 245c 	str.w	r2, [r3, #1116]	; 0x45c
 800da0c:	f8d3 2458 	ldr.w	r2, [r3, #1112]	; 0x458
 800da10:	f042 0201 	orr.w	r2, r2, #1
 800da14:	f8c3 2458 	str.w	r2, [r3, #1112]	; 0x458
 800da18:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 800da1c:	f022 0201 	bic.w	r2, r2, #1
 800da20:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408
 800da24:	f8c3 1414 	str.w	r1, [r3, #1044]	; 0x414
 800da28:	8982      	ldrh	r2, [r0, #12]
 800da2a:	f44f 7100 	mov.w	r1, #512	; 0x200
 800da2e:	f8c3 240c 	str.w	r2, [r3, #1036]	; 0x40c
 800da32:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 800da36:	4630      	mov	r0, r6
 800da38:	f042 0201 	orr.w	r2, r2, #1
 800da3c:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408
 800da40:	f006 fc03 	bl	801424a <timer_dma_enable>
 800da44:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800da48:	4630      	mov	r0, r6
 800da4a:	f006 fbfe 	bl	801424a <timer_dma_enable>
 800da4e:	f44f 6100 	mov.w	r1, #2048	; 0x800
 800da52:	4630      	mov	r0, r6
 800da54:	f006 fbf9 	bl	801424a <timer_dma_enable>
 800da58:	f8d5 3c00 	ldr.w	r3, [r5, #3072]	; 0xc00
 800da5c:	f043 0301 	orr.w	r3, r3, #1
 800da60:	f8c5 3c00 	str.w	r3, [r5, #3072]	; 0xc00
 800da64:	f8d4 3400 	ldr.w	r3, [r4, #1024]	; 0x400
 800da68:	f043 0301 	orr.w	r3, r3, #1
 800da6c:	f8c4 3400 	str.w	r3, [r4, #1024]	; 0x400
 800da70:	bd70      	pop	{r4, r5, r6, pc}
 800da72:	bf00      	nop
 800da74:	2000c5c0 	andcs	ip, r0, r0, asr #11
 800da78:	40013000 	andmi	r3, r1, r0
 800da7c:	08016282 	stmdaeq	r1, {r1, r7, r9, sp, lr}
 800da80:	40013400 	andmi	r3, r1, r0, lsl #8
 800da84:	40020000 	andmi	r0, r2, r0
 800da88:	2000c5c4 	andcs	ip, r0, r4, asr #11

0800da8c <WS28xxMulti::Blackout()>:
 800da8c:	b510      	push	{r4, lr}
 800da8e:	4c0c      	ldr	r4, [pc, #48]	; (800dac0 <WS28xxMulti::Blackout()+0x34>)
 800da90:	f3bf 8f5f 	dmb	sy
 800da94:	7822      	ldrb	r2, [r4, #0]
 800da96:	f002 03ff 	and.w	r3, r2, #255	; 0xff
 800da9a:	2a00      	cmp	r2, #0
 800da9c:	d1f8      	bne.n	800da90 <WS28xxMulti::Blackout()+0x4>
 800da9e:	f44f 517f 	mov.w	r1, #16320	; 0x3fc0
 800daa2:	4a08      	ldr	r2, [pc, #32]	; (800dac4 <WS28xxMulti::Blackout()+0x38>)
 800daa4:	3301      	adds	r3, #1
 800daa6:	f5b3 5f70 	cmp.w	r3, #15360	; 0x3c00
 800daaa:	f822 1b02 	strh.w	r1, [r2], #2
 800daae:	d1f9      	bne.n	800daa4 <WS28xxMulti::Blackout()+0x18>
 800dab0:	f7ff ff74 	bl	800d99c <WS28xxMulti::Update()>
 800dab4:	f3bf 8f5f 	dmb	sy
 800dab8:	7823      	ldrb	r3, [r4, #0]
 800daba:	2b00      	cmp	r3, #0
 800dabc:	d1fa      	bne.n	800dab4 <WS28xxMulti::Blackout()+0x28>
 800dabe:	bd10      	pop	{r4, pc}
 800dac0:	2000c5c0 	andcs	ip, r0, r0, asr #11
 800dac4:	2000c5c4 	andcs	ip, r0, r4, asr #11

0800dac8 <WS28xxMulti::IsUpdating()>:
 800dac8:	f3bf 8f5f 	dmb	sy
 800dacc:	4b01      	ldr	r3, [pc, #4]	; (800dad4 <WS28xxMulti::IsUpdating()+0xc>)
 800dace:	7818      	ldrb	r0, [r3, #0]
 800dad0:	4770      	bx	lr
 800dad2:	bf00      	nop
 800dad4:	2000c5c0 	andcs	ip, r0, r0, asr #11

0800dad8 <WS28xxMulti::SetColour(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>:
 800dad8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800dada:	f04f 0c80 	mov.w	ip, #128	; 0x80
 800dade:	2400      	movs	r4, #0
 800dae0:	2501      	movs	r5, #1
 800dae2:	4f1a      	ldr	r7, [pc, #104]	; (800db4c <WS28xxMulti::SetColour(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x74>)
 800dae4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800dae8:	4819      	ldr	r0, [pc, #100]	; (800db50 <WS28xxMulti::SetColour(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x78>)
 800daea:	eb07 1702 	add.w	r7, r7, r2, lsl #4
 800daee:	3106      	adds	r1, #6
 800daf0:	b2c9      	uxtb	r1, r1
 800daf2:	4438      	add	r0, r7
 800daf4:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
 800daf8:	f101 6108 	add.w	r1, r1, #142606336	; 0x8800000
 800dafc:	f501 71c0 	add.w	r1, r1, #384	; 0x180
 800db00:	eb01 01c7 	add.w	r1, r1, r7, lsl #3
 800db04:	f89d e014 	ldrb.w	lr, [sp, #20]
 800db08:	f89d 6018 	ldrb.w	r6, [sp, #24]
 800db0c:	0092      	lsls	r2, r2, #2
 800db0e:	0089      	lsls	r1, r1, #2
 800db10:	ea13 0f0c 	tst.w	r3, ip
 800db14:	f5a2 6080 	sub.w	r0, r2, #1024	; 0x400
 800db18:	bf16      	itet	ne
 800db1a:	f5a2 6080 	subne.w	r0, r2, #1024	; 0x400
 800db1e:	6005      	streq	r5, [r0, #0]
 800db20:	6004      	strne	r4, [r0, #0]
 800db22:	ea1e 0f0c 	tst.w	lr, ip
 800db26:	f5a2 7000 	sub.w	r0, r2, #512	; 0x200
 800db2a:	bf16      	itet	ne
 800db2c:	f5a2 7000 	subne.w	r0, r2, #512	; 0x200
 800db30:	6005      	streq	r5, [r0, #0]
 800db32:	6004      	strne	r4, [r0, #0]
 800db34:	ea16 0f0c 	tst.w	r6, ip
 800db38:	bf0c      	ite	eq
 800db3a:	6015      	streq	r5, [r2, #0]
 800db3c:	6014      	strne	r4, [r2, #0]
 800db3e:	3240      	adds	r2, #64	; 0x40
 800db40:	4291      	cmp	r1, r2
 800db42:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 800db46:	d1e3      	bne.n	800db10 <WS28xxMulti::SetColour(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x38>
 800db48:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800db4a:	bf00      	nop
 800db4c:	2000c5c4 	andcs	ip, r0, r4, asr #11
 800db50:	e1100020 	tst	r0, r0, lsr #32

0800db54 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>:
 800db54:	b470      	push	{r4, r5, r6}
 800db56:	461c      	mov	r4, r3
 800db58:	6883      	ldr	r3, [r0, #8]
 800db5a:	f89d 500c 	ldrb.w	r5, [sp, #12]
 800db5e:	f89d 6010 	ldrb.w	r6, [sp, #16]
 800db62:	2b05      	cmp	r3, #5
 800db64:	d80a      	bhi.n	800db7c <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x28>
 800db66:	e8df f003 	tbb	[pc, r3]
 800db6a:	1b18120f 	blne	86123ae <__exidx_end+0x5fa4e6>
 800db6e:	46330903 	ldrtmi	r0, [r3], -r3, lsl #18
 800db72:	9504      	str	r5, [sp, #16]
 800db74:	9403      	str	r4, [sp, #12]
 800db76:	bc70      	pop	{r4, r5, r6}
 800db78:	f7ff bfae 	b.w	800dad8 <WS28xxMulti::SetColour(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 800db7c:	4633      	mov	r3, r6
 800db7e:	9404      	str	r4, [sp, #16]
 800db80:	9503      	str	r5, [sp, #12]
 800db82:	bc70      	pop	{r4, r5, r6}
 800db84:	f7ff bfa8 	b.w	800dad8 <WS28xxMulti::SetColour(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 800db88:	4623      	mov	r3, r4
 800db8a:	9604      	str	r6, [sp, #16]
 800db8c:	e7f8      	b.n	800db80 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x2c>
 800db8e:	4623      	mov	r3, r4
 800db90:	9504      	str	r5, [sp, #16]
 800db92:	9603      	str	r6, [sp, #12]
 800db94:	bc70      	pop	{r4, r5, r6}
 800db96:	f7ff bf9f 	b.w	800dad8 <WS28xxMulti::SetColour(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 800db9a:	462b      	mov	r3, r5
 800db9c:	9604      	str	r6, [sp, #16]
 800db9e:	e7e9      	b.n	800db74 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x20>
 800dba0:	462b      	mov	r3, r5
 800dba2:	9404      	str	r4, [sp, #16]
 800dba4:	e7f5      	b.n	800db92 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x3e>
 800dba6:	bf00      	nop

0800dba8 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>:
 800dba8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800dbaa:	2080      	movs	r0, #128	; 0x80
 800dbac:	2400      	movs	r4, #0
 800dbae:	2501      	movs	r5, #1
 800dbb0:	4e1a      	ldr	r6, [pc, #104]	; (800dc1c <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)+0x74>)
 800dbb2:	f89d c014 	ldrb.w	ip, [sp, #20]
 800dbb6:	eb06 1682 	add.w	r6, r6, r2, lsl #6
 800dbba:	1d8a      	adds	r2, r1, #6
 800dbbc:	4918      	ldr	r1, [pc, #96]	; (800dc20 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)+0x78>)
 800dbbe:	b2d2      	uxtb	r2, r2
 800dbc0:	4431      	add	r1, r6
 800dbc2:	eb02 01c1 	add.w	r1, r2, r1, lsl #3
 800dbc6:	f102 6208 	add.w	r2, r2, #142606336	; 0x8800000
 800dbca:	f502 7200 	add.w	r2, r2, #512	; 0x200
 800dbce:	eb02 02c6 	add.w	r2, r2, r6, lsl #3
 800dbd2:	f89d e018 	ldrb.w	lr, [sp, #24]
 800dbd6:	f89d 601c 	ldrb.w	r6, [sp, #28]
 800dbda:	0089      	lsls	r1, r1, #2
 800dbdc:	0092      	lsls	r2, r2, #2
 800dbde:	f5a1 67c0 	sub.w	r7, r1, #1536	; 0x600
 800dbe2:	ea1c 0f00 	tst.w	ip, r0
 800dbe6:	bf0c      	ite	eq
 800dbe8:	603d      	streq	r5, [r7, #0]
 800dbea:	603c      	strne	r4, [r7, #0]
 800dbec:	f5a1 6780 	sub.w	r7, r1, #1024	; 0x400
 800dbf0:	4203      	tst	r3, r0
 800dbf2:	bf0c      	ite	eq
 800dbf4:	603d      	streq	r5, [r7, #0]
 800dbf6:	603c      	strne	r4, [r7, #0]
 800dbf8:	ea1e 0f00 	tst.w	lr, r0
 800dbfc:	f5a1 7700 	sub.w	r7, r1, #512	; 0x200
 800dc00:	bf0c      	ite	eq
 800dc02:	603d      	streq	r5, [r7, #0]
 800dc04:	603c      	strne	r4, [r7, #0]
 800dc06:	4206      	tst	r6, r0
 800dc08:	bf0c      	ite	eq
 800dc0a:	600d      	streq	r5, [r1, #0]
 800dc0c:	600c      	strne	r4, [r1, #0]
 800dc0e:	3140      	adds	r1, #64	; 0x40
 800dc10:	428a      	cmp	r2, r1
 800dc12:	ea4f 0050 	mov.w	r0, r0, lsr #1
 800dc16:	d1e2      	bne.n	800dbde <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)+0x36>
 800dc18:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800dc1a:	bf00      	nop
 800dc1c:	2000c5c4 	andcs	ip, r0, r4, asr #11
 800dc20:	e1100030 	tst	r0, r0, lsr r0

0800dc24 <RemoteConfig::HandleList()>:
 800dc24:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800dc28:	6801      	ldr	r1, [r0, #0]
 800dc2a:	4604      	mov	r4, r0
 800dc2c:	2012      	movs	r0, #18
 800dc2e:	f04f 080c 	mov.w	r8, #12
 800dc32:	4a2b      	ldr	r2, [pc, #172]	; (800dce0 <RemoteConfig::HandleList()+0xbc>)
 800dc34:	4b2b      	ldr	r3, [pc, #172]	; (800dce4 <RemoteConfig::HandleList()+0xc0>)
 800dc36:	fb00 2201 	mla	r2, r0, r1, r2
 800dc3a:	6860      	ldr	r0, [r4, #4]
 800dc3c:	492a      	ldr	r1, [pc, #168]	; (800dce8 <RemoteConfig::HandleList()+0xc4>)
 800dc3e:	681b      	ldr	r3, [r3, #0]
 800dc40:	fb08 1100 	mla	r1, r8, r0, r1
 800dc44:	4e29      	ldr	r6, [pc, #164]	; (800dcec <RemoteConfig::HandleList()+0xc8>)
 800dc46:	482a      	ldr	r0, [pc, #168]	; (800dcf0 <RemoteConfig::HandleList()+0xcc>)
 800dc48:	691f      	ldr	r7, [r3, #16]
 800dc4a:	6835      	ldr	r5, [r6, #0]
 800dc4c:	f890 9009 	ldrb.w	r9, [r0, #9]
 800dc50:	b2fb      	uxtb	r3, r7
 800dc52:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 800dc56:	f3c7 4e07 	ubfx	lr, r7, #16, #8
 800dc5a:	f8d4 8008 	ldr.w	r8, [r4, #8]
 800dc5e:	b089      	sub	sp, #36	; 0x24
 800dc60:	3507      	adds	r5, #7
 800dc62:	0e3f      	lsrs	r7, r7, #24
 800dc64:	f1b9 0f00 	cmp.w	r9, #0
 800dc68:	d020      	beq.n	800dcac <RemoteConfig::HandleList()+0x88>
 800dc6a:	3009      	adds	r0, #9
 800dc6c:	e9cd 2103 	strd	r2, r1, [sp, #12]
 800dc70:	e9cd 8005 	strd	r8, r0, [sp, #20]
 800dc74:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 800dc78:	4628      	mov	r0, r5
 800dc7a:	e9cd e701 	strd	lr, r7, [sp, #4]
 800dc7e:	4a1d      	ldr	r2, [pc, #116]	; (800dcf4 <RemoteConfig::HandleList()+0xd0>)
 800dc80:	f8cd c000 	str.w	ip, [sp]
 800dc84:	f7fb fca4 	bl	80095d0 <snprintf>
 800dc88:	f8d4 35e4 	ldr.w	r3, [r4, #1508]	; 0x5e4
 800dc8c:	2b05      	cmp	r3, #5
 800dc8e:	d11a      	bne.n	800dcc6 <RemoteConfig::HandleList()+0xa2>
 800dc90:	f642 1305 	movw	r3, #10501	; 0x2905
 800dc94:	9300      	str	r3, [sp, #0]
 800dc96:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800dc9a:	b282      	uxth	r2, r0
 800dc9c:	4629      	mov	r1, r5
 800dc9e:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800dca2:	f002 fad7 	bl	8010254 <udp_send>
 800dca6:	b009      	add	sp, #36	; 0x24
 800dca8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800dcac:	e9cd 1804 	strd	r1, r8, [sp, #16]
 800dcb0:	e9cd 7202 	strd	r7, r2, [sp, #8]
 800dcb4:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 800dcb8:	4628      	mov	r0, r5
 800dcba:	e9cd ce00 	strd	ip, lr, [sp]
 800dcbe:	4a0e      	ldr	r2, [pc, #56]	; (800dcf8 <RemoteConfig::HandleList()+0xd4>)
 800dcc0:	f7fb fc86 	bl	80095d0 <snprintf>
 800dcc4:	e7e0      	b.n	800dc88 <RemoteConfig::HandleList()+0x64>
 800dcc6:	2b06      	cmp	r3, #6
 800dcc8:	d1ed      	bne.n	800dca6 <RemoteConfig::HandleList()+0x82>
 800dcca:	6833      	ldr	r3, [r6, #0]
 800dccc:	799b      	ldrb	r3, [r3, #6]
 800dcce:	2b2a      	cmp	r3, #42	; 0x2a
 800dcd0:	d1e9      	bne.n	800dca6 <RemoteConfig::HandleList()+0x82>
 800dcd2:	f642 1305 	movw	r3, #10501	; 0x2905
 800dcd6:	9300      	str	r3, [sp, #0]
 800dcd8:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800dcdc:	e7dd      	b.n	800dc9a <RemoteConfig::HandleList()+0x76>
 800dcde:	bf00      	nop
 800dce0:	0801634a 	stmdaeq	r1, {r1, r3, r6, r8, r9, sp, lr}
 800dce4:	2001c710 	andcs	ip, r1, r0, lsl r7
 800dce8:	080163ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, r8, r9, sp, lr}
 800dcec:	20013dc8 	andcs	r3, r1, r8, asr #27
 800dcf0:	20013dcc 	andcs	r3, r1, ip, asr #27
 800dcf4:	08016284 	stmdaeq	r1, {r2, r7, r9, sp, lr}
 800dcf8:	0801629d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r9, sp, lr}

0800dcfc <RemoteConfig::HandleDisplayGet()>:
 800dcfc:	f8d0 35e4 	ldr.w	r3, [r0, #1508]	; 0x5e4
 800dd00:	2b08      	cmp	r3, #8
 800dd02:	d11d      	bne.n	800dd40 <RemoteConfig::HandleDisplayGet()+0x44>
 800dd04:	4b0f      	ldr	r3, [pc, #60]	; (800dd44 <RemoteConfig::HandleDisplayGet()+0x48>)
 800dd06:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800dd08:	681b      	ldr	r3, [r3, #0]
 800dd0a:	4d0f      	ldr	r5, [pc, #60]	; (800dd48 <RemoteConfig::HandleDisplayGet()+0x4c>)
 800dd0c:	7c19      	ldrb	r1, [r3, #16]
 800dd0e:	4a0f      	ldr	r2, [pc, #60]	; (800dd4c <RemoteConfig::HandleDisplayGet()+0x50>)
 800dd10:	4b0f      	ldr	r3, [pc, #60]	; (800dd50 <RemoteConfig::HandleDisplayGet()+0x54>)
 800dd12:	4604      	mov	r4, r0
 800dd14:	2900      	cmp	r1, #0
 800dd16:	bf18      	it	ne
 800dd18:	4613      	movne	r3, r2
 800dd1a:	6828      	ldr	r0, [r5, #0]
 800dd1c:	f240 31ff 	movw	r1, #1023	; 0x3ff
 800dd20:	4a0c      	ldr	r2, [pc, #48]	; (800dd54 <RemoteConfig::HandleDisplayGet()+0x58>)
 800dd22:	f7fb fc55 	bl	80095d0 <snprintf>
 800dd26:	f642 1305 	movw	r3, #10501	; 0x2905
 800dd2a:	9300      	str	r3, [sp, #0]
 800dd2c:	b282      	uxth	r2, r0
 800dd2e:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800dd32:	6829      	ldr	r1, [r5, #0]
 800dd34:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800dd38:	f002 fa8c 	bl	8010254 <udp_send>
 800dd3c:	b003      	add	sp, #12
 800dd3e:	bd30      	pop	{r4, r5, pc}
 800dd40:	4770      	bx	lr
 800dd42:	bf00      	nop
 800dd44:	2001cd48 	andcs	ip, r1, r8, asr #26
 800dd48:	20013dc8 	andcs	r3, r1, r8, asr #27
 800dd4c:	080162b6 	stmdaeq	r1, {r1, r2, r4, r5, r7, r9, sp, lr}
 800dd50:	080162b3 	stmdaeq	r1, {r0, r1, r4, r5, r7, r9, sp, lr}
 800dd54:	080162ba 	stmdaeq	r1, {r1, r3, r4, r5, r7, r9, sp, lr}

0800dd58 <RemoteConfig::HandleTftpSet()>:
 800dd58:	f8d0 25e4 	ldr.w	r2, [r0, #1508]	; 0x5e4
 800dd5c:	2a06      	cmp	r2, #6
 800dd5e:	d109      	bne.n	800dd74 <RemoteConfig::HandleTftpSet()+0x1c>
 800dd60:	4a05      	ldr	r2, [pc, #20]	; (800dd78 <RemoteConfig::HandleTftpSet()+0x20>)
 800dd62:	6812      	ldr	r2, [r2, #0]
 800dd64:	7992      	ldrb	r2, [r2, #6]
 800dd66:	3a30      	subs	r2, #48	; 0x30
 800dd68:	bf18      	it	ne
 800dd6a:	2201      	movne	r2, #1
 800dd6c:	f880 25ec 	strb.w	r2, [r0, #1516]	; 0x5ec
 800dd70:	f000 bd70 	b.w	800e854 <RemoteConfig::PlatformHandleTftpSet()>
 800dd74:	4770      	bx	lr
 800dd76:	bf00      	nop
 800dd78:	20013dc8 	andcs	r3, r1, r8, asr #27

0800dd7c <RemoteConfig::HandleTftpGet()>:
 800dd7c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800dd7e:	4604      	mov	r4, r0
 800dd80:	f000 fd70 	bl	800e864 <RemoteConfig::PlatformHandleTftpGet()>
 800dd84:	f8d4 35e4 	ldr.w	r3, [r4, #1508]	; 0x5e4
 800dd88:	2b05      	cmp	r3, #5
 800dd8a:	d118      	bne.n	800ddbe <RemoteConfig::HandleTftpGet()+0x42>
 800dd8c:	f894 15ec 	ldrb.w	r1, [r4, #1516]	; 0x5ec
 800dd90:	4d0c      	ldr	r5, [pc, #48]	; (800ddc4 <RemoteConfig::HandleTftpGet()+0x48>)
 800dd92:	4a0d      	ldr	r2, [pc, #52]	; (800ddc8 <RemoteConfig::HandleTftpGet()+0x4c>)
 800dd94:	4b0d      	ldr	r3, [pc, #52]	; (800ddcc <RemoteConfig::HandleTftpGet()+0x50>)
 800dd96:	6828      	ldr	r0, [r5, #0]
 800dd98:	2900      	cmp	r1, #0
 800dd9a:	bf08      	it	eq
 800dd9c:	4613      	moveq	r3, r2
 800dd9e:	f240 31ff 	movw	r1, #1023	; 0x3ff
 800dda2:	4a0b      	ldr	r2, [pc, #44]	; (800ddd0 <RemoteConfig::HandleTftpGet()+0x54>)
 800dda4:	f7fb fc14 	bl	80095d0 <snprintf>
 800dda8:	f642 1305 	movw	r3, #10501	; 0x2905
 800ddac:	b282      	uxth	r2, r0
 800ddae:	9300      	str	r3, [sp, #0]
 800ddb0:	6829      	ldr	r1, [r5, #0]
 800ddb2:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800ddb6:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800ddba:	f002 fa4b 	bl	8010254 <udp_send>
 800ddbe:	b003      	add	sp, #12
 800ddc0:	bd30      	pop	{r4, r5, pc}
 800ddc2:	bf00      	nop
 800ddc4:	20013dc8 	andcs	r3, r1, r8, asr #27
 800ddc8:	080162b6 	stmdaeq	r1, {r1, r2, r4, r5, r7, r9, sp, lr}
 800ddcc:	080162b3 	stmdaeq	r1, {r0, r1, r4, r5, r7, r9, sp, lr}
 800ddd0:	080162c6 	stmdaeq	r1, {r1, r2, r6, r7, r9, sp, lr}

0800ddd4 <RemoteConfig::HandleVersion()>:
 800ddd4:	f8d0 35e4 	ldr.w	r3, [r0, #1508]	; 0x5e4
 800ddd8:	2b08      	cmp	r3, #8
 800ddda:	d116      	bne.n	800de0a <RemoteConfig::HandleVersion()+0x36>
 800dddc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ddde:	4d0b      	ldr	r5, [pc, #44]	; (800de0c <RemoteConfig::HandleVersion()+0x38>)
 800dde0:	4604      	mov	r4, r0
 800dde2:	f240 31ff 	movw	r1, #1023	; 0x3ff
 800dde6:	4b0a      	ldr	r3, [pc, #40]	; (800de10 <RemoteConfig::HandleVersion()+0x3c>)
 800dde8:	4a0a      	ldr	r2, [pc, #40]	; (800de14 <RemoteConfig::HandleVersion()+0x40>)
 800ddea:	6828      	ldr	r0, [r5, #0]
 800ddec:	f7fb fbf0 	bl	80095d0 <snprintf>
 800ddf0:	f642 1305 	movw	r3, #10501	; 0x2905
 800ddf4:	9300      	str	r3, [sp, #0]
 800ddf6:	b282      	uxth	r2, r0
 800ddf8:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800ddfc:	6829      	ldr	r1, [r5, #0]
 800ddfe:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800de02:	f002 fa27 	bl	8010254 <udp_send>
 800de06:	b003      	add	sp, #12
 800de08:	bd30      	pop	{r4, r5, pc}
 800de0a:	4770      	bx	lr
 800de0c:	20013dc8 	andcs	r3, r1, r8, asr #27
 800de10:	2001cdee 	andcs	ip, r1, lr, ror #27
 800de14:	080162cf 	stmdaeq	r1, {r0, r1, r2, r3, r6, r7, r9, sp, lr}

0800de18 <RemoteConfig::HandleUptime()>:
 800de18:	f890 35d7 	ldrb.w	r3, [r0, #1495]	; 0x5d7
 800de1c:	b1fb      	cbz	r3, 800de5e <RemoteConfig::HandleUptime()+0x46>
 800de1e:	4b10      	ldr	r3, [pc, #64]	; (800de60 <RemoteConfig::HandleUptime()+0x48>)
 800de20:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800de22:	681a      	ldr	r2, [r3, #0]
 800de24:	f8d0 35e4 	ldr.w	r3, [r0, #1508]	; 0x5e4
 800de28:	4604      	mov	r4, r0
 800de2a:	2b07      	cmp	r3, #7
 800de2c:	d115      	bne.n	800de5a <RemoteConfig::HandleUptime()+0x42>
 800de2e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800de32:	4d0c      	ldr	r5, [pc, #48]	; (800de64 <RemoteConfig::HandleUptime()+0x4c>)
 800de34:	fbb2 f3f3 	udiv	r3, r2, r3
 800de38:	f240 31ff 	movw	r1, #1023	; 0x3ff
 800de3c:	4a0a      	ldr	r2, [pc, #40]	; (800de68 <RemoteConfig::HandleUptime()+0x50>)
 800de3e:	6828      	ldr	r0, [r5, #0]
 800de40:	f7fb fbc6 	bl	80095d0 <snprintf>
 800de44:	f642 1305 	movw	r3, #10501	; 0x2905
 800de48:	9300      	str	r3, [sp, #0]
 800de4a:	b282      	uxth	r2, r0
 800de4c:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800de50:	6829      	ldr	r1, [r5, #0]
 800de52:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800de56:	f002 f9fd 	bl	8010254 <udp_send>
 800de5a:	b003      	add	sp, #12
 800de5c:	bd30      	pop	{r4, r5, pc}
 800de5e:	4770      	bx	lr
 800de60:	2001ce4c 	andcs	ip, r1, ip, asr #28
 800de64:	20013dc8 	andcs	r3, r1, r8, asr #27
 800de68:	080162da 	stmdaeq	r1, {r1, r3, r4, r6, r7, r9, sp, lr}

0800de6c <RemoteConfig::HandleDisplaySet()>:
 800de6c:	b538      	push	{r3, r4, r5, lr}
 800de6e:	f8d0 35e4 	ldr.w	r3, [r0, #1508]	; 0x5e4
 800de72:	2b09      	cmp	r3, #9
 800de74:	d113      	bne.n	800de9e <RemoteConfig::HandleDisplaySet()+0x32>
 800de76:	4b0a      	ldr	r3, [pc, #40]	; (800dea0 <RemoteConfig::HandleDisplaySet()+0x34>)
 800de78:	681c      	ldr	r4, [r3, #0]
 800de7a:	4b0a      	ldr	r3, [pc, #40]	; (800dea4 <RemoteConfig::HandleDisplaySet()+0x38>)
 800de7c:	69a0      	ldr	r0, [r4, #24]
 800de7e:	681b      	ldr	r3, [r3, #0]
 800de80:	7a5d      	ldrb	r5, [r3, #9]
 800de82:	f1a5 0330 	sub.w	r3, r5, #48	; 0x30
 800de86:	4259      	negs	r1, r3
 800de88:	4159      	adcs	r1, r3
 800de8a:	b140      	cbz	r0, 800de9e <RemoteConfig::HandleDisplaySet()+0x32>
 800de8c:	6803      	ldr	r3, [r0, #0]
 800de8e:	7421      	strb	r1, [r4, #16]
 800de90:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800de92:	4798      	blx	r3
 800de94:	2d30      	cmp	r5, #48	; 0x30
 800de96:	bf1e      	ittt	ne
 800de98:	4b03      	ldrne	r3, [pc, #12]	; (800dea8 <RemoteConfig::HandleDisplaySet()+0x3c>)
 800de9a:	681b      	ldrne	r3, [r3, #0]
 800de9c:	6063      	strne	r3, [r4, #4]
 800de9e:	bd38      	pop	{r3, r4, r5, pc}
 800dea0:	2001cd48 	andcs	ip, r1, r8, asr #26
 800dea4:	20013dc8 	andcs	r3, r1, r8, asr #27
 800dea8:	2001ce4c 	andcs	ip, r1, ip, asr #28

0800deac <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>:
 800deac:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800deb0:	f100 0a0c 	add.w	sl, r0, #12
 800deb4:	4604      	mov	r4, r0
 800deb6:	e9c0 1200 	strd	r1, r2, [r0]
 800deba:	6083      	str	r3, [r0, #8]
 800debc:	4650      	mov	r0, sl
 800debe:	4690      	mov	r8, r2
 800dec0:	4689      	mov	r9, r1
 800dec2:	461f      	mov	r7, r3
 800dec4:	f000 fd0e 	bl	800e8e4 <HttpDaemon::HttpDaemon()>
 800dec8:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800decc:	2500      	movs	r5, #0
 800dece:	4e16      	ldr	r6, [pc, #88]	; (800df28 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x7c>)
 800ded0:	f8df b058 	ldr.w	fp, [pc, #88]	; 800df2c <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x80>
 800ded4:	f8c4 35dc 	str.w	r3, [r4, #1500]	; 0x5dc
 800ded8:	4b15      	ldr	r3, [pc, #84]	; (800df30 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x84>)
 800deda:	4631      	mov	r1, r6
 800dedc:	f8db 0000 	ldr.w	r0, [fp]
 800dee0:	f8c4 55d4 	str.w	r5, [r4, #1492]	; 0x5d4
 800dee4:	f8a4 55d8 	strh.w	r5, [r4, #1496]	; 0x5d8
 800dee8:	f8c4 55e0 	str.w	r5, [r4, #1504]	; 0x5e0
 800deec:	f8c4 55e4 	str.w	r5, [r4, #1508]	; 0x5e4
 800def0:	f8c4 55e8 	str.w	r5, [r4, #1512]	; 0x5e8
 800def4:	f884 55ec 	strb.w	r5, [r4, #1516]	; 0x5ec
 800def8:	601c      	str	r4, [r3, #0]
 800defa:	f002 fe77 	bl	8010bec <Network::MacAddressCopyTo(unsigned char*)>
 800defe:	f642 1105 	movw	r1, #10501	; 0x2905
 800df02:	f8db 0000 	ldr.w	r0, [fp]
 800df06:	f886 9006 	strb.w	r9, [r6, #6]
 800df0a:	f886 8007 	strb.w	r8, [r6, #7]
 800df0e:	7237      	strb	r7, [r6, #8]
 800df10:	7275      	strb	r5, [r6, #9]
 800df12:	f002 fe65 	bl	8010be0 <Network::Begin(unsigned short)>
 800df16:	f8c4 05dc 	str.w	r0, [r4, #1500]	; 0x5dc
 800df1a:	4650      	mov	r0, sl
 800df1c:	f000 fcfa 	bl	800e914 <HttpDaemon::Start()>
 800df20:	4620      	mov	r0, r4
 800df22:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800df26:	bf00      	nop
 800df28:	20013dcc 	andcs	r3, r1, ip, asr #27
 800df2c:	2001c710 	andcs	ip, r1, r0, lsl r7
 800df30:	20013df0 	strdcs	r3, [r1], -r0

0800df34 <RemoteConfig::GetStringNode() const>:
 800df34:	2012      	movs	r0, #18
 800df36:	4b03      	ldr	r3, [pc, #12]	; (800df44 <RemoteConfig::GetStringNode() const+0x10>)
 800df38:	799a      	ldrb	r2, [r3, #6]
 800df3a:	4b03      	ldr	r3, [pc, #12]	; (800df48 <RemoteConfig::GetStringNode() const+0x14>)
 800df3c:	fb00 3002 	mla	r0, r0, r2, r3
 800df40:	4770      	bx	lr
 800df42:	bf00      	nop
 800df44:	20013dcc 	andcs	r3, r1, ip, asr #27
 800df48:	0801634a 	stmdaeq	r1, {r1, r3, r6, r8, r9, sp, lr}

0800df4c <RemoteConfig::GetStringOutput() const>:
 800df4c:	200c      	movs	r0, #12
 800df4e:	4b03      	ldr	r3, [pc, #12]	; (800df5c <RemoteConfig::GetStringOutput() const+0x10>)
 800df50:	79da      	ldrb	r2, [r3, #7]
 800df52:	4b03      	ldr	r3, [pc, #12]	; (800df60 <RemoteConfig::GetStringOutput() const+0x14>)
 800df54:	fb00 3002 	mla	r0, r0, r2, r3
 800df58:	4770      	bx	lr
 800df5a:	bf00      	nop
 800df5c:	20013dcc 	andcs	r3, r1, ip, asr #27
 800df60:	080163ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, r8, r9, sp, lr}

0800df64 <RemoteConfig::SetDisable(bool)>:
 800df64:	b538      	push	{r3, r4, r5, lr}
 800df66:	4604      	mov	r4, r0
 800df68:	f890 35d4 	ldrb.w	r3, [r0, #1492]	; 0x5d4
 800df6c:	b171      	cbz	r1, 800df8c <RemoteConfig::SetDisable(bool)+0x28>
 800df6e:	b963      	cbnz	r3, 800df8a <RemoteConfig::SetDisable(bool)+0x26>
 800df70:	4b0d      	ldr	r3, [pc, #52]	; (800dfa8 <RemoteConfig::SetDisable(bool)+0x44>)
 800df72:	f642 1105 	movw	r1, #10501	; 0x2905
 800df76:	6818      	ldr	r0, [r3, #0]
 800df78:	f002 fe35 	bl	8010be6 <Network::End(unsigned short)>
 800df7c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800df80:	f8c4 35dc 	str.w	r3, [r4, #1500]	; 0x5dc
 800df84:	2301      	movs	r3, #1
 800df86:	f884 35d4 	strb.w	r3, [r4, #1492]	; 0x5d4
 800df8a:	bd38      	pop	{r3, r4, r5, pc}
 800df8c:	2b00      	cmp	r3, #0
 800df8e:	d0fc      	beq.n	800df8a <RemoteConfig::SetDisable(bool)+0x26>
 800df90:	4b05      	ldr	r3, [pc, #20]	; (800dfa8 <RemoteConfig::SetDisable(bool)+0x44>)
 800df92:	460d      	mov	r5, r1
 800df94:	6818      	ldr	r0, [r3, #0]
 800df96:	f642 1105 	movw	r1, #10501	; 0x2905
 800df9a:	f002 fe21 	bl	8010be0 <Network::Begin(unsigned short)>
 800df9e:	f884 55d4 	strb.w	r5, [r4, #1492]	; 0x5d4
 800dfa2:	f8c4 05dc 	str.w	r0, [r4, #1500]	; 0x5dc
 800dfa6:	e7f0      	b.n	800df8a <RemoteConfig::SetDisable(bool)+0x26>
 800dfa8:	2001c710 	andcs	ip, r1, r0, lsl r7

0800dfac <RemoteConfig::SetDisplayName(char const*)>:
 800dfac:	2217      	movs	r2, #23
 800dfae:	4809      	ldr	r0, [pc, #36]	; (800dfd4 <RemoteConfig::SetDisplayName(char const*)+0x28>)
 800dfb0:	b508      	push	{r3, lr}
 800dfb2:	1e4b      	subs	r3, r1, #1
 800dfb4:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800dfb8:	b911      	cbnz	r1, 800dfc0 <RemoteConfig::SetDisplayName(char const*)+0x14>
 800dfba:	f005 fb15 	bl	80135e8 <memset>
 800dfbe:	e003      	b.n	800dfc8 <RemoteConfig::SetDisplayName(char const*)+0x1c>
 800dfc0:	3a01      	subs	r2, #1
 800dfc2:	f800 1b01 	strb.w	r1, [r0], #1
 800dfc6:	d1f5      	bne.n	800dfb4 <RemoteConfig::SetDisplayName(char const*)+0x8>
 800dfc8:	2200      	movs	r2, #0
 800dfca:	4b03      	ldr	r3, [pc, #12]	; (800dfd8 <RemoteConfig::SetDisplayName(char const*)+0x2c>)
 800dfcc:	f883 2020 	strb.w	r2, [r3, #32]
 800dfd0:	bd08      	pop	{r3, pc}
 800dfd2:	bf00      	nop
 800dfd4:	20013dd5 	ldrdcs	r3, [r1], -r5
 800dfd8:	20013dcc 	andcs	r3, r1, ip, asr #27

0800dfdc <RemoteConfig::HandleGet(void*, unsigned int)>:
 800dfdc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800dfde:	4604      	mov	r4, r0
 800dfe0:	4616      	mov	r6, r2
 800dfe2:	460d      	mov	r5, r1
 800dfe4:	4f2a      	ldr	r7, [pc, #168]	; (800e090 <RemoteConfig::HandleGet(void*, unsigned int)+0xb4>)
 800dfe6:	b085      	sub	sp, #20
 800dfe8:	b9b9      	cbnz	r1, 800e01a <RemoteConfig::HandleGet(void*, unsigned int)+0x3e>
 800dfea:	f44f 737f 	mov.w	r3, #1020	; 0x3fc
 800dfee:	6839      	ldr	r1, [r7, #0]
 800dff0:	aa03      	add	r2, sp, #12
 800dff2:	3105      	adds	r1, #5
 800dff4:	9303      	str	r3, [sp, #12]
 800dff6:	f000 fc03 	bl	800e800 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 800dffa:	1e03      	subs	r3, r0, #0
 800dffc:	da1d      	bge.n	800e03a <RemoteConfig::HandleGet(void*, unsigned int)+0x5e>
 800dffe:	f642 1305 	movw	r3, #10501	; 0x2905
 800e002:	220b      	movs	r2, #11
 800e004:	9300      	str	r3, [sp, #0]
 800e006:	4923      	ldr	r1, [pc, #140]	; (800e094 <RemoteConfig::HandleGet(void*, unsigned int)+0xb8>)
 800e008:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800e00c:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800e010:	f002 f920 	bl	8010254 <udp_send>
 800e014:	200c      	movs	r0, #12
 800e016:	b005      	add	sp, #20
 800e018:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e01a:	9203      	str	r2, [sp, #12]
 800e01c:	aa03      	add	r2, sp, #12
 800e01e:	6039      	str	r1, [r7, #0]
 800e020:	f000 fbee 	bl	800e800 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 800e024:	1e03      	subs	r3, r0, #0
 800e026:	da08      	bge.n	800e03a <RemoteConfig::HandleGet(void*, unsigned int)+0x5e>
 800e028:	2e0b      	cmp	r6, #11
 800e02a:	4632      	mov	r2, r6
 800e02c:	4628      	mov	r0, r5
 800e02e:	bf28      	it	cs
 800e030:	220b      	movcs	r2, #11
 800e032:	4918      	ldr	r1, [pc, #96]	; (800e094 <RemoteConfig::HandleGet(void*, unsigned int)+0xb8>)
 800e034:	f005 fab6 	bl	80135a4 <memcpy>
 800e038:	e7ec      	b.n	800e014 <RemoteConfig::HandleGet(void*, unsigned int)+0x38>
 800e03a:	221c      	movs	r2, #28
 800e03c:	4353      	muls	r3, r2
 800e03e:	4916      	ldr	r1, [pc, #88]	; (800e098 <RemoteConfig::HandleGet(void*, unsigned int)+0xbc>)
 800e040:	18ca      	adds	r2, r1, r3
 800e042:	6852      	ldr	r2, [r2, #4]
 800e044:	58cb      	ldr	r3, [r1, r3]
 800e046:	ea4f 0c62 	mov.w	ip, r2, asr #1
 800e04a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800e04e:	07d2      	lsls	r2, r2, #31
 800e050:	bf48      	it	mi
 800e052:	f854 200c 	ldrmi.w	r2, [r4, ip]
 800e056:	a903      	add	r1, sp, #12
 800e058:	bf48      	it	mi
 800e05a:	58d3      	ldrmi	r3, [r2, r3]
 800e05c:	4798      	blx	r3
 800e05e:	b96d      	cbnz	r5, 800e07c <RemoteConfig::HandleGet(void*, unsigned int)+0xa0>
 800e060:	f642 1305 	movw	r3, #10501	; 0x2905
 800e064:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800e068:	9300      	str	r3, [sp, #0]
 800e06a:	6839      	ldr	r1, [r7, #0]
 800e06c:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800e070:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800e074:	f002 f8ee 	bl	8010254 <udp_send>
 800e078:	9803      	ldr	r0, [sp, #12]
 800e07a:	e7cc      	b.n	800e016 <RemoteConfig::HandleGet(void*, unsigned int)+0x3a>
 800e07c:	9a03      	ldr	r2, [sp, #12]
 800e07e:	4628      	mov	r0, r5
 800e080:	42b2      	cmp	r2, r6
 800e082:	bf28      	it	cs
 800e084:	4632      	movcs	r2, r6
 800e086:	6839      	ldr	r1, [r7, #0]
 800e088:	f005 fa97 	bl	80135ba <memmove>
 800e08c:	e7f4      	b.n	800e078 <RemoteConfig::HandleGet(void*, unsigned int)+0x9c>
 800e08e:	bf00      	nop
 800e090:	20013dc8 	andcs	r3, r1, r8, asr #27
 800e094:	080162e7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, r9, sp, lr}
 800e098:	08016584 	stmdaeq	r1, {r2, r7, r8, sl, sp, lr}

0800e09c <RemoteConfig::HandleGetNoParams()>:
 800e09c:	2200      	movs	r2, #0
 800e09e:	4611      	mov	r1, r2
 800e0a0:	f7ff bf9c 	b.w	800dfdc <RemoteConfig::HandleGet(void*, unsigned int)>

0800e0a4 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)>:
 800e0a4:	b510      	push	{r4, lr}
 800e0a6:	460c      	mov	r4, r1
 800e0a8:	4b07      	ldr	r3, [pc, #28]	; (800e0c8 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x24>)
 800e0aa:	b08a      	sub	sp, #40	; 0x28
 800e0ac:	6819      	ldr	r1, [r3, #0]
 800e0ae:	a801      	add	r0, sp, #4
 800e0b0:	f000 f9fc 	bl	800e4ac <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 800e0b4:	4905      	ldr	r1, [pc, #20]	; (800e0cc <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x28>)
 800e0b6:	4623      	mov	r3, r4
 800e0b8:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800e0bc:	6809      	ldr	r1, [r1, #0]
 800e0be:	a801      	add	r0, sp, #4
 800e0c0:	f000 fb18 	bl	800e6f4 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>
 800e0c4:	b00a      	add	sp, #40	; 0x28
 800e0c6:	bd10      	pop	{r4, pc}
 800e0c8:	20014e20 	andcs	r4, r1, r0, lsr #28
 800e0cc:	20013dc8 	andcs	r3, r1, r8, asr #27

0800e0d0 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)>:
 800e0d0:	b513      	push	{r0, r1, r4, lr}
 800e0d2:	460c      	mov	r4, r1
 800e0d4:	4b07      	ldr	r3, [pc, #28]	; (800e0f4 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x24>)
 800e0d6:	a801      	add	r0, sp, #4
 800e0d8:	6819      	ldr	r1, [r3, #0]
 800e0da:	f003 f883 	bl	80111e4 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 800e0de:	4906      	ldr	r1, [pc, #24]	; (800e0f8 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x28>)
 800e0e0:	4623      	mov	r3, r4
 800e0e2:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800e0e6:	6809      	ldr	r1, [r1, #0]
 800e0e8:	a801      	add	r0, sp, #4
 800e0ea:	f003 faeb 	bl	80116c4 <NetworkParams::Save(char*, unsigned int, unsigned int&)>
 800e0ee:	b002      	add	sp, #8
 800e0f0:	bd10      	pop	{r4, pc}
 800e0f2:	bf00      	nop
 800e0f4:	20014e18 	andcs	r4, r1, r8, lsl lr
 800e0f8:	20013dc8 	andcs	r3, r1, r8, asr #27

0800e0fc <RemoteConfig::HandleGetE131Txt(unsigned int&)>:
 800e0fc:	b510      	push	{r4, lr}
 800e0fe:	460c      	mov	r4, r1
 800e100:	4b07      	ldr	r3, [pc, #28]	; (800e120 <RemoteConfig::HandleGetE131Txt(unsigned int&)+0x24>)
 800e102:	b08a      	sub	sp, #40	; 0x28
 800e104:	6819      	ldr	r1, [r3, #0]
 800e106:	a801      	add	r0, sp, #4
 800e108:	f7fc fc46 	bl	800a998 <E131Params::E131Params(E131ParamsStore*)>
 800e10c:	4905      	ldr	r1, [pc, #20]	; (800e124 <RemoteConfig::HandleGetE131Txt(unsigned int&)+0x28>)
 800e10e:	4623      	mov	r3, r4
 800e110:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800e114:	6809      	ldr	r1, [r1, #0]
 800e116:	a801      	add	r0, sp, #4
 800e118:	f7fc fe92 	bl	800ae40 <E131Params::Save(char*, unsigned int, unsigned int&)>
 800e11c:	b00a      	add	sp, #40	; 0x28
 800e11e:	bd10      	pop	{r4, pc}
 800e120:	20014e14 	andcs	r4, r1, r4, lsl lr
 800e124:	20013dc8 	andcs	r3, r1, r8, asr #27

0800e128 <RemoteConfig::HandleGetDevicesTxt(unsigned int&)>:
 800e128:	b510      	push	{r4, lr}
 800e12a:	460c      	mov	r4, r1
 800e12c:	4b07      	ldr	r3, [pc, #28]	; (800e14c <RemoteConfig::HandleGetDevicesTxt(unsigned int&)+0x24>)
 800e12e:	b08c      	sub	sp, #48	; 0x30
 800e130:	6819      	ldr	r1, [r3, #0]
 800e132:	a801      	add	r0, sp, #4
 800e134:	f7fe fb4c 	bl	800c7d0 <WS28xxDmxParams::WS28xxDmxParams(WS28xxDmxParamsStore*)>
 800e138:	4905      	ldr	r1, [pc, #20]	; (800e150 <RemoteConfig::HandleGetDevicesTxt(unsigned int&)+0x28>)
 800e13a:	4623      	mov	r3, r4
 800e13c:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800e140:	6809      	ldr	r1, [r1, #0]
 800e142:	a801      	add	r0, sp, #4
 800e144:	f7fe fdfe 	bl	800cd44 <WS28xxDmxParams::Save(char*, unsigned int, unsigned int&)>
 800e148:	b00c      	add	sp, #48	; 0x30
 800e14a:	bd10      	pop	{r4, pc}
 800e14c:	20014e24 	andcs	r4, r1, r4, lsr #28
 800e150:	20013dc8 	andcs	r3, r1, r8, asr #27

0800e154 <RemoteConfig::HandleGetDisplayTxt(unsigned int&)>:
 800e154:	b510      	push	{r4, lr}
 800e156:	460c      	mov	r4, r1
 800e158:	4b07      	ldr	r3, [pc, #28]	; (800e178 <RemoteConfig::HandleGetDisplayTxt(unsigned int&)+0x24>)
 800e15a:	b08a      	sub	sp, #40	; 0x28
 800e15c:	6819      	ldr	r1, [r3, #0]
 800e15e:	4668      	mov	r0, sp
 800e160:	f004 f866 	bl	8012230 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 800e164:	4905      	ldr	r1, [pc, #20]	; (800e17c <RemoteConfig::HandleGetDisplayTxt(unsigned int&)+0x28>)
 800e166:	4623      	mov	r3, r4
 800e168:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800e16c:	4668      	mov	r0, sp
 800e16e:	6809      	ldr	r1, [r1, #0]
 800e170:	f004 f996 	bl	80124a0 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)>
 800e174:	b00a      	add	sp, #40	; 0x28
 800e176:	bd10      	pop	{r4, pc}
 800e178:	20014e10 	andcs	r4, r1, r0, lsl lr
 800e17c:	20013dc8 	andcs	r3, r1, r8, asr #27

0800e180 <RemoteConfig::HandleSet(void*, unsigned int)>:
 800e180:	b530      	push	{r4, r5, lr}
 800e182:	b085      	sub	sp, #20
 800e184:	4604      	mov	r4, r0
 800e186:	9201      	str	r2, [sp, #4]
 800e188:	b9d1      	cbnz	r1, 800e1c0 <RemoteConfig::HandleSet(void*, unsigned int)+0x40>
 800e18a:	f240 33ff 	movw	r3, #1023	; 0x3ff
 800e18e:	9303      	str	r3, [sp, #12]
 800e190:	4b1b      	ldr	r3, [pc, #108]	; (800e200 <RemoteConfig::HandleSet(void*, unsigned int)+0x80>)
 800e192:	aa03      	add	r2, sp, #12
 800e194:	6819      	ldr	r1, [r3, #0]
 800e196:	3101      	adds	r1, #1
 800e198:	f000 fb32 	bl	800e800 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 800e19c:	2800      	cmp	r0, #0
 800e19e:	db0d      	blt.n	800e1bc <RemoteConfig::HandleSet(void*, unsigned int)+0x3c>
 800e1a0:	221c      	movs	r2, #28
 800e1a2:	4b18      	ldr	r3, [pc, #96]	; (800e204 <RemoteConfig::HandleSet(void*, unsigned int)+0x84>)
 800e1a4:	fb02 3300 	mla	r3, r2, r0, r3
 800e1a8:	68da      	ldr	r2, [r3, #12]
 800e1aa:	689b      	ldr	r3, [r3, #8]
 800e1ac:	1051      	asrs	r1, r2, #1
 800e1ae:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800e1b2:	07d2      	lsls	r2, r2, #31
 800e1b4:	bf44      	itt	mi
 800e1b6:	5862      	ldrmi	r2, [r4, r1]
 800e1b8:	58d3      	ldrmi	r3, [r2, r3]
 800e1ba:	4798      	blx	r3
 800e1bc:	b005      	add	sp, #20
 800e1be:	bd30      	pop	{r4, r5, pc}
 800e1c0:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 800e1c4:	4613      	mov	r3, r2
 800e1c6:	d8f9      	bhi.n	800e1bc <RemoteConfig::HandleSet(void*, unsigned int)+0x3c>
 800e1c8:	2200      	movs	r2, #0
 800e1ca:	460d      	mov	r5, r1
 800e1cc:	490e      	ldr	r1, [pc, #56]	; (800e208 <RemoteConfig::HandleSet(void*, unsigned int)+0x88>)
 800e1ce:	f8c0 25e8 	str.w	r2, [r0, #1512]	; 0x5e8
 800e1d2:	7809      	ldrb	r1, [r1, #0]
 800e1d4:	07c9      	lsls	r1, r1, #31
 800e1d6:	d50a      	bpl.n	800e1ee <RemoteConfig::HandleSet(void*, unsigned int)+0x6e>
 800e1d8:	7829      	ldrb	r1, [r5, #0]
 800e1da:	297b      	cmp	r1, #123	; 0x7b
 800e1dc:	d107      	bne.n	800e1ee <RemoteConfig::HandleSet(void*, unsigned int)+0x6e>
 800e1de:	3b01      	subs	r3, #1
 800e1e0:	b299      	uxth	r1, r3
 800e1e2:	4628      	mov	r0, r5
 800e1e4:	f004 fa24 	bl	8012630 <properties::convert_json_file(char*, unsigned short, bool)>
 800e1e8:	1e03      	subs	r3, r0, #0
 800e1ea:	dde7      	ble.n	800e1bc <RemoteConfig::HandleSet(void*, unsigned int)+0x3c>
 800e1ec:	b29b      	uxth	r3, r3
 800e1ee:	f8c4 35e4 	str.w	r3, [r4, #1508]	; 0x5e4
 800e1f2:	4b03      	ldr	r3, [pc, #12]	; (800e200 <RemoteConfig::HandleSet(void*, unsigned int)+0x80>)
 800e1f4:	4620      	mov	r0, r4
 800e1f6:	601d      	str	r5, [r3, #0]
 800e1f8:	aa01      	add	r2, sp, #4
 800e1fa:	1c69      	adds	r1, r5, #1
 800e1fc:	e7cc      	b.n	800e198 <RemoteConfig::HandleSet(void*, unsigned int)+0x18>
 800e1fe:	bf00      	nop
 800e200:	20013dc8 	andcs	r3, r1, r8, asr #27
 800e204:	08016584 	stmdaeq	r1, {r2, r7, r8, sl, sp, lr}
 800e208:	2001cd44 	andcs	ip, r1, r4, asr #26

0800e20c <RemoteConfig::Run()>:
 800e20c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800e210:	f890 55d4 	ldrb.w	r5, [r0, #1492]	; 0x5d4
 800e214:	2d00      	cmp	r5, #0
 800e216:	d15d      	bne.n	800e2d4 <RemoteConfig::Run()+0xc8>
 800e218:	4604      	mov	r4, r0
 800e21a:	4e4a      	ldr	r6, [pc, #296]	; (800e344 <RemoteConfig::Run()+0x138>)
 800e21c:	300c      	adds	r0, #12
 800e21e:	f000 fdf3 	bl	800ee08 <HttpDaemon::Run()>
 800e222:	4631      	mov	r1, r6
 800e224:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800e228:	f10d 030e 	add.w	r3, sp, #14
 800e22c:	f504 62bc 	add.w	r2, r4, #1504	; 0x5e0
 800e230:	f001 ffea 	bl	8010208 <udp_recv2>
 800e234:	2803      	cmp	r0, #3
 800e236:	f8c4 05e4 	str.w	r0, [r4, #1508]	; 0x5e4
 800e23a:	d94b      	bls.n	800e2d4 <RemoteConfig::Run()+0xc8>
 800e23c:	6831      	ldr	r1, [r6, #0]
 800e23e:	1e43      	subs	r3, r0, #1
 800e240:	5cca      	ldrb	r2, [r1, r3]
 800e242:	2a0a      	cmp	r2, #10
 800e244:	bf18      	it	ne
 800e246:	4603      	movne	r3, r0
 800e248:	f8c4 35e4 	str.w	r3, [r4, #1508]	; 0x5e4
 800e24c:	7808      	ldrb	r0, [r1, #0]
 800e24e:	283f      	cmp	r0, #63	; 0x3f
 800e250:	d135      	bne.n	800e2be <RemoteConfig::Run()+0xb2>
 800e252:	483d      	ldr	r0, [pc, #244]	; (800e348 <RemoteConfig::Run()+0x13c>)
 800e254:	462a      	mov	r2, r5
 800e256:	4607      	mov	r7, r0
 800e258:	3b01      	subs	r3, #1
 800e25a:	f8c4 35e4 	str.w	r3, [r4, #1508]	; 0x5e4
 800e25e:	7b86      	ldrb	r6, [r0, #14]
 800e260:	8985      	ldrh	r5, [r0, #12]
 800e262:	b176      	cbz	r6, 800e282 <RemoteConfig::Run()+0x76>
 800e264:	42ab      	cmp	r3, r5
 800e266:	d80e      	bhi.n	800e286 <RemoteConfig::Run()+0x7a>
 800e268:	3201      	adds	r2, #1
 800e26a:	2a09      	cmp	r2, #9
 800e26c:	f100 0010 	add.w	r0, r0, #16
 800e270:	d1f5      	bne.n	800e25e <RemoteConfig::Run()+0x52>
 800e272:	f642 1305 	movw	r3, #10501	; 0x2905
 800e276:	9300      	str	r3, [sp, #0]
 800e278:	2208      	movs	r2, #8
 800e27a:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800e27e:	4933      	ldr	r1, [pc, #204]	; (800e34c <RemoteConfig::Run()+0x140>)
 800e280:	e052      	b.n	800e328 <RemoteConfig::Run()+0x11c>
 800e282:	42ab      	cmp	r3, r5
 800e284:	d1f0      	bne.n	800e268 <RemoteConfig::Run()+0x5c>
 800e286:	6886      	ldr	r6, [r0, #8]
 800e288:	f101 0c01 	add.w	ip, r1, #1
 800e28c:	4435      	add	r5, r6
 800e28e:	42b5      	cmp	r5, r6
 800e290:	d10b      	bne.n	800e2aa <RemoteConfig::Run()+0x9e>
 800e292:	0113      	lsls	r3, r2, #4
 800e294:	eb07 1202 	add.w	r2, r7, r2, lsl #4
 800e298:	6852      	ldr	r2, [r2, #4]
 800e29a:	58fb      	ldr	r3, [r7, r3]
 800e29c:	1051      	asrs	r1, r2, #1
 800e29e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800e2a2:	07d2      	lsls	r2, r2, #31
 800e2a4:	d408      	bmi.n	800e2b8 <RemoteConfig::Run()+0xac>
 800e2a6:	4798      	blx	r3
 800e2a8:	e014      	b.n	800e2d4 <RemoteConfig::Run()+0xc8>
 800e2aa:	f81c 8b01 	ldrb.w	r8, [ip], #1
 800e2ae:	f816 eb01 	ldrb.w	lr, [r6], #1
 800e2b2:	45f0      	cmp	r8, lr
 800e2b4:	d0eb      	beq.n	800e28e <RemoteConfig::Run()+0x82>
 800e2b6:	e7d7      	b.n	800e268 <RemoteConfig::Run()+0x5c>
 800e2b8:	5862      	ldr	r2, [r4, r1]
 800e2ba:	58d3      	ldr	r3, [r2, r3]
 800e2bc:	e7f3      	b.n	800e2a6 <RemoteConfig::Run()+0x9a>
 800e2be:	f894 25d5 	ldrb.w	r2, [r4, #1493]	; 0x5d5
 800e2c2:	b93a      	cbnz	r2, 800e2d4 <RemoteConfig::Run()+0xc8>
 800e2c4:	2823      	cmp	r0, #35	; 0x23
 800e2c6:	d108      	bne.n	800e2da <RemoteConfig::Run()+0xce>
 800e2c8:	4611      	mov	r1, r2
 800e2ca:	4620      	mov	r0, r4
 800e2cc:	f8c4 25e8 	str.w	r2, [r4, #1512]	; 0x5e8
 800e2d0:	f7ff ff56 	bl	800e180 <RemoteConfig::HandleSet(void*, unsigned int)>
 800e2d4:	b004      	add	sp, #16
 800e2d6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e2da:	2821      	cmp	r0, #33	; 0x21
 800e2dc:	d1fa      	bne.n	800e2d4 <RemoteConfig::Run()+0xc8>
 800e2de:	3b01      	subs	r3, #1
 800e2e0:	2b05      	cmp	r3, #5
 800e2e2:	f8c4 35e4 	str.w	r3, [r4, #1508]	; 0x5e4
 800e2e6:	d918      	bls.n	800e31a <RemoteConfig::Run()+0x10e>
 800e2e8:	1c4a      	adds	r2, r1, #1
 800e2ea:	4610      	mov	r0, r2
 800e2ec:	4d18      	ldr	r5, [pc, #96]	; (800e350 <RemoteConfig::Run()+0x144>)
 800e2ee:	f101 0c06 	add.w	ip, r1, #6
 800e2f2:	4560      	cmp	r0, ip
 800e2f4:	d01d      	beq.n	800e332 <RemoteConfig::Run()+0x126>
 800e2f6:	f810 7b01 	ldrb.w	r7, [r0], #1
 800e2fa:	f815 6b01 	ldrb.w	r6, [r5], #1
 800e2fe:	42b7      	cmp	r7, r6
 800e300:	d0f7      	beq.n	800e2f2 <RemoteConfig::Run()+0xe6>
 800e302:	2b08      	cmp	r3, #8
 800e304:	d909      	bls.n	800e31a <RemoteConfig::Run()+0x10e>
 800e306:	4b13      	ldr	r3, [pc, #76]	; (800e354 <RemoteConfig::Run()+0x148>)
 800e308:	3109      	adds	r1, #9
 800e30a:	428a      	cmp	r2, r1
 800e30c:	d017      	beq.n	800e33e <RemoteConfig::Run()+0x132>
 800e30e:	f812 5b01 	ldrb.w	r5, [r2], #1
 800e312:	f813 0b01 	ldrb.w	r0, [r3], #1
 800e316:	4285      	cmp	r5, r0
 800e318:	d0f7      	beq.n	800e30a <RemoteConfig::Run()+0xfe>
 800e31a:	f642 1305 	movw	r3, #10501	; 0x2905
 800e31e:	2208      	movs	r2, #8
 800e320:	9300      	str	r3, [sp, #0]
 800e322:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 800e326:	490c      	ldr	r1, [pc, #48]	; (800e358 <RemoteConfig::Run()+0x14c>)
 800e328:	f894 05dc 	ldrb.w	r0, [r4, #1500]	; 0x5dc
 800e32c:	f001 ff92 	bl	8010254 <udp_send>
 800e330:	e7d0      	b.n	800e2d4 <RemoteConfig::Run()+0xc8>
 800e332:	2300      	movs	r3, #0
 800e334:	4a09      	ldr	r2, [pc, #36]	; (800e35c <RemoteConfig::Run()+0x150>)
 800e336:	011b      	lsls	r3, r3, #4
 800e338:	4620      	mov	r0, r4
 800e33a:	58d3      	ldr	r3, [r2, r3]
 800e33c:	e7b3      	b.n	800e2a6 <RemoteConfig::Run()+0x9a>
 800e33e:	2301      	movs	r3, #1
 800e340:	e7f8      	b.n	800e334 <RemoteConfig::Run()+0x128>
 800e342:	bf00      	nop
 800e344:	20013dc8 	andcs	r3, r1, r8, asr #27
 800e348:	0801647c 	stmdaeq	r1, {r2, r3, r4, r5, r6, sl, sp, lr}
 800e34c:	0801630b 	stmdaeq	r1, {r0, r1, r3, r8, r9, sp, lr}
 800e350:	080162f3 	stmdaeq	r1, {r0, r1, r4, r5, r6, r7, r9, sp, lr}
 800e354:	080162f9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, r9, sp, lr}
 800e358:	08016302 	stmdaeq	r1, {r1, r8, r9, sp, lr}
 800e35c:	0801650c 	stmdaeq	r1, {r2, r3, r8, sl, sp, lr}

0800e360 <RemoteConfig::HandleSetRconfig()>:
 800e360:	b510      	push	{r4, lr}
 800e362:	4604      	mov	r4, r0
 800e364:	4b09      	ldr	r3, [pc, #36]	; (800e38c <RemoteConfig::HandleSetRconfig()+0x2c>)
 800e366:	b08a      	sub	sp, #40	; 0x28
 800e368:	6819      	ldr	r1, [r3, #0]
 800e36a:	a801      	add	r0, sp, #4
 800e36c:	f000 f89e 	bl	800e4ac <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 800e370:	4b07      	ldr	r3, [pc, #28]	; (800e390 <RemoteConfig::HandleSetRconfig()+0x30>)
 800e372:	f8d4 25e4 	ldr.w	r2, [r4, #1508]	; 0x5e4
 800e376:	6819      	ldr	r1, [r3, #0]
 800e378:	a801      	add	r0, sp, #4
 800e37a:	f000 f8ad 	bl	800e4d8 <RemoteConfigParams::Load(char const*, unsigned int)>
 800e37e:	4621      	mov	r1, r4
 800e380:	a801      	add	r0, sp, #4
 800e382:	f000 f9c4 	bl	800e70e <RemoteConfigParams::Set(RemoteConfig*)>
 800e386:	b00a      	add	sp, #40	; 0x28
 800e388:	bd10      	pop	{r4, pc}
 800e38a:	bf00      	nop
 800e38c:	20014e20 	andcs	r4, r1, r0, lsr #28
 800e390:	20013dc8 	andcs	r3, r1, r8, asr #27

0800e394 <RemoteConfig::HandleSetNetworkTxt()>:
 800e394:	b513      	push	{r0, r1, r4, lr}
 800e396:	4604      	mov	r4, r0
 800e398:	4b06      	ldr	r3, [pc, #24]	; (800e3b4 <RemoteConfig::HandleSetNetworkTxt()+0x20>)
 800e39a:	a801      	add	r0, sp, #4
 800e39c:	6819      	ldr	r1, [r3, #0]
 800e39e:	f002 ff21 	bl	80111e4 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 800e3a2:	4b05      	ldr	r3, [pc, #20]	; (800e3b8 <RemoteConfig::HandleSetNetworkTxt()+0x24>)
 800e3a4:	f8d4 25e4 	ldr.w	r2, [r4, #1508]	; 0x5e4
 800e3a8:	6819      	ldr	r1, [r3, #0]
 800e3aa:	a801      	add	r0, sp, #4
 800e3ac:	f002 ff3a 	bl	8011224 <NetworkParams::Load(char const*, unsigned int)>
 800e3b0:	b002      	add	sp, #8
 800e3b2:	bd10      	pop	{r4, pc}
 800e3b4:	20014e18 	andcs	r4, r1, r8, lsl lr
 800e3b8:	20013dc8 	andcs	r3, r1, r8, asr #27

0800e3bc <RemoteConfig::HandleSetE131Txt()>:
 800e3bc:	b510      	push	{r4, lr}
 800e3be:	4604      	mov	r4, r0
 800e3c0:	4b07      	ldr	r3, [pc, #28]	; (800e3e0 <RemoteConfig::HandleSetE131Txt()+0x24>)
 800e3c2:	b08a      	sub	sp, #40	; 0x28
 800e3c4:	6819      	ldr	r1, [r3, #0]
 800e3c6:	a801      	add	r0, sp, #4
 800e3c8:	f7fc fae6 	bl	800a998 <E131Params::E131Params(E131ParamsStore*)>
 800e3cc:	4b05      	ldr	r3, [pc, #20]	; (800e3e4 <RemoteConfig::HandleSetE131Txt()+0x28>)
 800e3ce:	f8d4 25e4 	ldr.w	r2, [r4, #1508]	; 0x5e4
 800e3d2:	6819      	ldr	r1, [r3, #0]
 800e3d4:	a801      	add	r0, sp, #4
 800e3d6:	f7fc fb0b 	bl	800a9f0 <E131Params::Load(char const*, unsigned int)>
 800e3da:	b00a      	add	sp, #40	; 0x28
 800e3dc:	bd10      	pop	{r4, pc}
 800e3de:	bf00      	nop
 800e3e0:	20014e14 	andcs	r4, r1, r4, lsl lr
 800e3e4:	20013dc8 	andcs	r3, r1, r8, asr #27

0800e3e8 <RemoteConfig::HandleSetDevicesTxt()>:
 800e3e8:	b510      	push	{r4, lr}
 800e3ea:	4604      	mov	r4, r0
 800e3ec:	4b07      	ldr	r3, [pc, #28]	; (800e40c <RemoteConfig::HandleSetDevicesTxt()+0x24>)
 800e3ee:	b08c      	sub	sp, #48	; 0x30
 800e3f0:	6819      	ldr	r1, [r3, #0]
 800e3f2:	a801      	add	r0, sp, #4
 800e3f4:	f7fe f9ec 	bl	800c7d0 <WS28xxDmxParams::WS28xxDmxParams(WS28xxDmxParamsStore*)>
 800e3f8:	4b05      	ldr	r3, [pc, #20]	; (800e410 <RemoteConfig::HandleSetDevicesTxt()+0x28>)
 800e3fa:	f8d4 25e4 	ldr.w	r2, [r4, #1508]	; 0x5e4
 800e3fe:	6819      	ldr	r1, [r3, #0]
 800e400:	a801      	add	r0, sp, #4
 800e402:	f7fe fa19 	bl	800c838 <WS28xxDmxParams::Load(char const*, unsigned int)>
 800e406:	b00c      	add	sp, #48	; 0x30
 800e408:	bd10      	pop	{r4, pc}
 800e40a:	bf00      	nop
 800e40c:	20014e24 	andcs	r4, r1, r4, lsr #28
 800e410:	20013dc8 	andcs	r3, r1, r8, asr #27

0800e414 <RemoteConfig::HandleSetDisplayTxt()>:
 800e414:	b510      	push	{r4, lr}
 800e416:	4604      	mov	r4, r0
 800e418:	4b07      	ldr	r3, [pc, #28]	; (800e438 <RemoteConfig::HandleSetDisplayTxt()+0x24>)
 800e41a:	b08a      	sub	sp, #40	; 0x28
 800e41c:	6819      	ldr	r1, [r3, #0]
 800e41e:	4668      	mov	r0, sp
 800e420:	f003 ff06 	bl	8012230 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 800e424:	4b05      	ldr	r3, [pc, #20]	; (800e43c <RemoteConfig::HandleSetDisplayTxt()+0x28>)
 800e426:	4668      	mov	r0, sp
 800e428:	f8d4 25e4 	ldr.w	r2, [r4, #1508]	; 0x5e4
 800e42c:	6819      	ldr	r1, [r3, #0]
 800e42e:	f003 ff19 	bl	8012264 <DisplayUdfParams::Load(char const*, unsigned int)>
 800e432:	b00a      	add	sp, #40	; 0x28
 800e434:	bd10      	pop	{r4, pc}
 800e436:	bf00      	nop
 800e438:	20014e10 	andcs	r4, r1, r0, lsl lr
 800e43c:	20013dc8 	andcs	r3, r1, r8, asr #27

0800e440 <RemoteConfig::HandleFactory()>:
 800e440:	b538      	push	{r3, r4, r5, lr}
 800e442:	2400      	movs	r4, #0
 800e444:	4d04      	ldr	r5, [pc, #16]	; (800e458 <RemoteConfig::HandleFactory()+0x18>)
 800e446:	4621      	mov	r1, r4
 800e448:	6828      	ldr	r0, [r5, #0]
 800e44a:	3401      	adds	r4, #1
 800e44c:	f000 ff12 	bl	800f274 <SpiFlashStore::ResetSetList(spiflashstore::Store)>
 800e450:	2c1c      	cmp	r4, #28
 800e452:	d1f8      	bne.n	800e446 <RemoteConfig::HandleFactory()+0x6>
 800e454:	bd38      	pop	{r3, r4, r5, pc}
 800e456:	bf00      	nop
 800e458:	20014e08 	andcs	r4, r1, r8, lsl #28

0800e45c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>:
 800e45c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e45e:	460b      	mov	r3, r1
 800e460:	8885      	ldrh	r5, [r0, #4]
 800e462:	88c1      	ldrh	r1, [r0, #6]
 800e464:	42a9      	cmp	r1, r5
 800e466:	d214      	bcs.n	800e492 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x36>
 800e468:	4604      	mov	r4, r0
 800e46a:	6800      	ldr	r0, [r0, #0]
 800e46c:	1a6d      	subs	r5, r5, r1
 800e46e:	4408      	add	r0, r1
 800e470:	7a21      	ldrb	r1, [r4, #8]
 800e472:	b91a      	cbnz	r2, 800e47c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x20>
 800e474:	b919      	cbnz	r1, 800e47e <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x22>
 800e476:	4a0a      	ldr	r2, [pc, #40]	; (800e4a0 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x44>)
 800e478:	9100      	str	r1, [sp, #0]
 800e47a:	e002      	b.n	800e482 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 800e47c:	b159      	cbz	r1, 800e496 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x3a>
 800e47e:	9200      	str	r2, [sp, #0]
 800e480:	4a08      	ldr	r2, [pc, #32]	; (800e4a4 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x48>)
 800e482:	4629      	mov	r1, r5
 800e484:	f7fb f8a4 	bl	80095d0 <snprintf>
 800e488:	4285      	cmp	r5, r0
 800e48a:	bfa2      	ittt	ge
 800e48c:	88e3      	ldrhge	r3, [r4, #6]
 800e48e:	181b      	addge	r3, r3, r0
 800e490:	80e3      	strhge	r3, [r4, #6]
 800e492:	b003      	add	sp, #12
 800e494:	bd30      	pop	{r4, r5, pc}
 800e496:	2201      	movs	r2, #1
 800e498:	9200      	str	r2, [sp, #0]
 800e49a:	4a03      	ldr	r2, [pc, #12]	; (800e4a8 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x4c>)
 800e49c:	e7f1      	b.n	800e482 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 800e49e:	bf00      	nop
 800e4a0:	08015a73 	stmdaeq	r1, {r0, r1, r4, r5, r6, r9, fp, ip, lr}
 800e4a4:	08015a6a 	stmdaeq	r1, {r1, r3, r5, r6, r9, fp, ip, lr}
 800e4a8:	08015a74 	stmdaeq	r1, {r2, r4, r5, r6, r9, fp, ip, lr}

0800e4ac <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>:
 800e4ac:	b510      	push	{r4, lr}
 800e4ae:	4604      	mov	r4, r0
 800e4b0:	2220      	movs	r2, #32
 800e4b2:	f840 1b04 	str.w	r1, [r0], #4
 800e4b6:	2100      	movs	r1, #0
 800e4b8:	f005 f896 	bl	80135e8 <memset>
 800e4bc:	4620      	mov	r0, r4
 800e4be:	bd10      	pop	{r4, pc}

0800e4c0 <RemoteConfigParams::Load()>:
 800e4c0:	b508      	push	{r3, lr}
 800e4c2:	2300      	movs	r3, #0
 800e4c4:	4601      	mov	r1, r0
 800e4c6:	6043      	str	r3, [r0, #4]
 800e4c8:	6800      	ldr	r0, [r0, #0]
 800e4ca:	b120      	cbz	r0, 800e4d6 <RemoteConfigParams::Load()+0x16>
 800e4cc:	6803      	ldr	r3, [r0, #0]
 800e4ce:	3104      	adds	r1, #4
 800e4d0:	68db      	ldr	r3, [r3, #12]
 800e4d2:	4798      	blx	r3
 800e4d4:	2001      	movs	r0, #1
 800e4d6:	bd08      	pop	{r3, pc}

0800e4d8 <RemoteConfigParams::Load(char const*, unsigned int)>:
 800e4d8:	2300      	movs	r3, #0
 800e4da:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800e4dc:	460d      	mov	r5, r1
 800e4de:	4616      	mov	r6, r2
 800e4e0:	4604      	mov	r4, r0
 800e4e2:	6043      	str	r3, [r0, #4]
 800e4e4:	4602      	mov	r2, r0
 800e4e6:	490a      	ldr	r1, [pc, #40]	; (800e510 <RemoteConfigParams::Load(char const*, unsigned int)+0x38>)
 800e4e8:	4668      	mov	r0, sp
 800e4ea:	f004 f9f3 	bl	80128d4 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800e4ee:	4632      	mov	r2, r6
 800e4f0:	4629      	mov	r1, r5
 800e4f2:	4668      	mov	r0, sp
 800e4f4:	f004 f9f2 	bl	80128dc <ReadConfigFile::Read(char const*, unsigned int)>
 800e4f8:	4621      	mov	r1, r4
 800e4fa:	f851 0b04 	ldr.w	r0, [r1], #4
 800e4fe:	6803      	ldr	r3, [r0, #0]
 800e500:	689b      	ldr	r3, [r3, #8]
 800e502:	4798      	blx	r3
 800e504:	4668      	mov	r0, sp
 800e506:	f004 f9e8 	bl	80128da <ReadConfigFile::~ReadConfigFile()>
 800e50a:	b002      	add	sp, #8
 800e50c:	bd70      	pop	{r4, r5, r6, pc}
 800e50e:	bf00      	nop
 800e510:	0800e5d1 	stmdaeq	r0, {r0, r4, r6, r7, r8, sl, sp, lr, pc}

0800e514 <RemoteConfigParams::SetBool(unsigned char, unsigned int)>:
 800e514:	6843      	ldr	r3, [r0, #4]
 800e516:	b111      	cbz	r1, 800e51e <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0xa>
 800e518:	4313      	orrs	r3, r2
 800e51a:	6043      	str	r3, [r0, #4]
 800e51c:	4770      	bx	lr
 800e51e:	ea23 0302 	bic.w	r3, r3, r2
 800e522:	e7fa      	b.n	800e51a <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0x6>

0800e524 <RemoteConfigParams::callbackFunction(char const*)>:
 800e524:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e526:	460d      	mov	r5, r1
 800e528:	4604      	mov	r4, r0
 800e52a:	4923      	ldr	r1, [pc, #140]	; (800e5b8 <RemoteConfigParams::callbackFunction(char const*)+0x94>)
 800e52c:	4628      	mov	r0, r5
 800e52e:	f10d 0203 	add.w	r2, sp, #3
 800e532:	f004 fb0b 	bl	8012b4c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800e536:	b940      	cbnz	r0, 800e54a <RemoteConfigParams::callbackFunction(char const*)+0x26>
 800e538:	2201      	movs	r2, #1
 800e53a:	4620      	mov	r0, r4
 800e53c:	f89d 1003 	ldrb.w	r1, [sp, #3]
 800e540:	b003      	add	sp, #12
 800e542:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800e546:	f7ff bfe5 	b.w	800e514 <RemoteConfigParams::SetBool(unsigned char, unsigned int)>
 800e54a:	4628      	mov	r0, r5
 800e54c:	491b      	ldr	r1, [pc, #108]	; (800e5bc <RemoteConfigParams::callbackFunction(char const*)+0x98>)
 800e54e:	f10d 0203 	add.w	r2, sp, #3
 800e552:	f004 fafb 	bl	8012b4c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800e556:	b908      	cbnz	r0, 800e55c <RemoteConfigParams::callbackFunction(char const*)+0x38>
 800e558:	2202      	movs	r2, #2
 800e55a:	e7ee      	b.n	800e53a <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800e55c:	4628      	mov	r0, r5
 800e55e:	4918      	ldr	r1, [pc, #96]	; (800e5c0 <RemoteConfigParams::callbackFunction(char const*)+0x9c>)
 800e560:	f10d 0203 	add.w	r2, sp, #3
 800e564:	f004 faf2 	bl	8012b4c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800e568:	b908      	cbnz	r0, 800e56e <RemoteConfigParams::callbackFunction(char const*)+0x4a>
 800e56a:	2204      	movs	r2, #4
 800e56c:	e7e5      	b.n	800e53a <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800e56e:	4628      	mov	r0, r5
 800e570:	4914      	ldr	r1, [pc, #80]	; (800e5c4 <RemoteConfigParams::callbackFunction(char const*)+0xa0>)
 800e572:	f10d 0203 	add.w	r2, sp, #3
 800e576:	f004 fae9 	bl	8012b4c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800e57a:	b908      	cbnz	r0, 800e580 <RemoteConfigParams::callbackFunction(char const*)+0x5c>
 800e57c:	2208      	movs	r2, #8
 800e57e:	e7dc      	b.n	800e53a <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800e580:	4628      	mov	r0, r5
 800e582:	4911      	ldr	r1, [pc, #68]	; (800e5c8 <RemoteConfigParams::callbackFunction(char const*)+0xa4>)
 800e584:	f10d 0203 	add.w	r2, sp, #3
 800e588:	f004 fae0 	bl	8012b4c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800e58c:	b908      	cbnz	r0, 800e592 <RemoteConfigParams::callbackFunction(char const*)+0x6e>
 800e58e:	2220      	movs	r2, #32
 800e590:	e7d3      	b.n	800e53a <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800e592:	2317      	movs	r3, #23
 800e594:	4628      	mov	r0, r5
 800e596:	9301      	str	r3, [sp, #4]
 800e598:	490c      	ldr	r1, [pc, #48]	; (800e5cc <RemoteConfigParams::callbackFunction(char const*)+0xa8>)
 800e59a:	ab01      	add	r3, sp, #4
 800e59c:	f104 020c 	add.w	r2, r4, #12
 800e5a0:	f004 f9d0 	bl	8012944 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800e5a4:	b930      	cbnz	r0, 800e5b4 <RemoteConfigParams::callbackFunction(char const*)+0x90>
 800e5a6:	9b01      	ldr	r3, [sp, #4]
 800e5a8:	4423      	add	r3, r4
 800e5aa:	7318      	strb	r0, [r3, #12]
 800e5ac:	6863      	ldr	r3, [r4, #4]
 800e5ae:	f043 0310 	orr.w	r3, r3, #16
 800e5b2:	6063      	str	r3, [r4, #4]
 800e5b4:	b003      	add	sp, #12
 800e5b6:	bd30      	pop	{r4, r5, pc}
 800e5b8:	080168ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, fp, sp, lr}
 800e5bc:	0801690d 	stmdaeq	r1, {r0, r2, r3, r8, fp, sp, lr}
 800e5c0:	0801691b 	stmdaeq	r1, {r0, r1, r3, r4, r8, fp, sp, lr}
 800e5c4:	08016929 	stmdaeq	r1, {r0, r3, r5, r8, fp, sp, lr}
 800e5c8:	08016937 	stmdaeq	r1, {r0, r1, r2, r4, r5, r8, fp, sp, lr}
 800e5cc:	08016900 	stmdaeq	r1, {r8, fp, sp, lr}

0800e5d0 <RemoteConfigParams::staticCallbackFunction(void*, char const*)>:
 800e5d0:	f7ff bfa8 	b.w	800e524 <RemoteConfigParams::callbackFunction(char const*)>

0800e5d4 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>:
 800e5d4:	b570      	push	{r4, r5, r6, lr}
 800e5d6:	4604      	mov	r4, r0
 800e5d8:	4615      	mov	r5, r2
 800e5da:	461e      	mov	r6, r3
 800e5dc:	b086      	sub	sp, #24
 800e5de:	3004      	adds	r0, #4
 800e5e0:	2900      	cmp	r1, #0
 800e5e2:	d041      	beq.n	800e668 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x94>
 800e5e4:	2220      	movs	r2, #32
 800e5e6:	f004 ffe8 	bl	80135ba <memmove>
 800e5ea:	4633      	mov	r3, r6
 800e5ec:	462a      	mov	r2, r5
 800e5ee:	4937      	ldr	r1, [pc, #220]	; (800e6cc <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xf8>)
 800e5f0:	a803      	add	r0, sp, #12
 800e5f2:	f004 f8cf 	bl	8012794 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800e5f6:	6862      	ldr	r2, [r4, #4]
 800e5f8:	4935      	ldr	r1, [pc, #212]	; (800e6d0 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xfc>)
 800e5fa:	f002 0201 	and.w	r2, r2, #1
 800e5fe:	a803      	add	r0, sp, #12
 800e600:	f7ff ff2c 	bl	800e45c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800e604:	6862      	ldr	r2, [r4, #4]
 800e606:	4933      	ldr	r1, [pc, #204]	; (800e6d4 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x100>)
 800e608:	f3c2 0240 	ubfx	r2, r2, #1, #1
 800e60c:	a803      	add	r0, sp, #12
 800e60e:	f7ff ff25 	bl	800e45c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800e612:	6862      	ldr	r2, [r4, #4]
 800e614:	4930      	ldr	r1, [pc, #192]	; (800e6d8 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x104>)
 800e616:	f3c2 0280 	ubfx	r2, r2, #2, #1
 800e61a:	a803      	add	r0, sp, #12
 800e61c:	f7ff ff1e 	bl	800e45c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800e620:	6862      	ldr	r2, [r4, #4]
 800e622:	492e      	ldr	r1, [pc, #184]	; (800e6dc <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x108>)
 800e624:	f3c2 02c0 	ubfx	r2, r2, #3, #1
 800e628:	a803      	add	r0, sp, #12
 800e62a:	f7ff ff17 	bl	800e45c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800e62e:	6862      	ldr	r2, [r4, #4]
 800e630:	492b      	ldr	r1, [pc, #172]	; (800e6e0 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x10c>)
 800e632:	f3c2 1240 	ubfx	r2, r2, #5, #1
 800e636:	a803      	add	r0, sp, #12
 800e638:	f7ff ff10 	bl	800e45c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800e63c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800e640:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800e644:	6862      	ldr	r2, [r4, #4]
 800e646:	42ab      	cmp	r3, r5
 800e648:	d223      	bcs.n	800e692 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xbe>
 800e64a:	9803      	ldr	r0, [sp, #12]
 800e64c:	06d2      	lsls	r2, r2, #27
 800e64e:	4418      	add	r0, r3
 800e650:	eba5 0503 	sub.w	r5, r5, r3
 800e654:	f104 040c 	add.w	r4, r4, #12
 800e658:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800e65c:	d40b      	bmi.n	800e676 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa2>
 800e65e:	b95b      	cbnz	r3, 800e678 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa4>
 800e660:	4b20      	ldr	r3, [pc, #128]	; (800e6e4 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 800e662:	4a21      	ldr	r2, [pc, #132]	; (800e6e8 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x114>)
 800e664:	9400      	str	r4, [sp, #0]
 800e666:	e00a      	b.n	800e67e <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xaa>
 800e668:	6823      	ldr	r3, [r4, #0]
 800e66a:	4601      	mov	r1, r0
 800e66c:	681a      	ldr	r2, [r3, #0]
 800e66e:	4618      	mov	r0, r3
 800e670:	68d2      	ldr	r2, [r2, #12]
 800e672:	4790      	blx	r2
 800e674:	e7b9      	b.n	800e5ea <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x16>
 800e676:	b32b      	cbz	r3, 800e6c4 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xf0>
 800e678:	4b1a      	ldr	r3, [pc, #104]	; (800e6e4 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 800e67a:	4a1c      	ldr	r2, [pc, #112]	; (800e6ec <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x118>)
 800e67c:	9400      	str	r4, [sp, #0]
 800e67e:	4629      	mov	r1, r5
 800e680:	f7fa ffa6 	bl	80095d0 <snprintf>
 800e684:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800e688:	4285      	cmp	r5, r0
 800e68a:	bfa4      	itt	ge
 800e68c:	181b      	addge	r3, r3, r0
 800e68e:	f8ad 3012 	strhge.w	r3, [sp, #18]
 800e692:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800e696:	b17b      	cbz	r3, 800e6b8 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xe4>
 800e698:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800e69c:	9b03      	ldr	r3, [sp, #12]
 800e69e:	4413      	add	r3, r2
 800e6a0:	227d      	movs	r2, #125	; 0x7d
 800e6a2:	f803 2c01 	strb.w	r2, [r3, #-1]
 800e6a6:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800e6aa:	9903      	ldr	r1, [sp, #12]
 800e6ac:	54ca      	strb	r2, [r1, r3]
 800e6ae:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800e6b2:	3301      	adds	r3, #1
 800e6b4:	f8ad 3012 	strh.w	r3, [sp, #18]
 800e6b8:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800e6bc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800e6be:	601a      	str	r2, [r3, #0]
 800e6c0:	b006      	add	sp, #24
 800e6c2:	bd70      	pop	{r4, r5, r6, pc}
 800e6c4:	4b07      	ldr	r3, [pc, #28]	; (800e6e4 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 800e6c6:	4a0a      	ldr	r2, [pc, #40]	; (800e6f0 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x11c>)
 800e6c8:	9400      	str	r4, [sp, #0]
 800e6ca:	e7d8      	b.n	800e67e <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xaa>
 800e6cc:	080168f4 	stmdaeq	r1, {r2, r4, r5, r6, r7, fp, sp, lr}
 800e6d0:	080168ec 	stmdaeq	r1, {r2, r3, r5, r6, r7, fp, sp, lr}
 800e6d4:	0801690d 	stmdaeq	r1, {r0, r2, r3, r8, fp, sp, lr}
 800e6d8:	0801691b 	stmdaeq	r1, {r0, r1, r3, r4, r8, fp, sp, lr}
 800e6dc:	08016929 	stmdaeq	r1, {r0, r3, r5, r8, fp, sp, lr}
 800e6e0:	08016937 	stmdaeq	r1, {r0, r1, r2, r4, r5, r8, fp, sp, lr}
 800e6e4:	08016900 	stmdaeq	r1, {r8, fp, sp, lr}
 800e6e8:	08015a62 	stmdaeq	r1, {r1, r5, r6, r9, fp, ip, lr}
 800e6ec:	08015a57 	stmdaeq	r1, {r0, r1, r2, r4, r6, r9, fp, ip, lr}
 800e6f0:	08015a63 	stmdaeq	r1, {r0, r1, r5, r6, r9, fp, ip, lr}

0800e6f4 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>:
 800e6f4:	b513      	push	{r0, r1, r4, lr}
 800e6f6:	6804      	ldr	r4, [r0, #0]
 800e6f8:	b914      	cbnz	r4, 800e700 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800e6fa:	601c      	str	r4, [r3, #0]
 800e6fc:	b002      	add	sp, #8
 800e6fe:	bd10      	pop	{r4, pc}
 800e700:	9300      	str	r3, [sp, #0]
 800e702:	4613      	mov	r3, r2
 800e704:	460a      	mov	r2, r1
 800e706:	2100      	movs	r1, #0
 800e708:	f7ff ff64 	bl	800e5d4 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>
 800e70c:	e7f6      	b.n	800e6fc <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800e70e <RemoteConfigParams::Set(RemoteConfig*)>:
 800e70e:	b538      	push	{r3, r4, r5, lr}
 800e710:	460c      	mov	r4, r1
 800e712:	4605      	mov	r5, r0
 800e714:	6841      	ldr	r1, [r0, #4]
 800e716:	4620      	mov	r0, r4
 800e718:	f001 0101 	and.w	r1, r1, #1
 800e71c:	f7ff fc22 	bl	800df64 <RemoteConfig::SetDisable(bool)>
 800e720:	686b      	ldr	r3, [r5, #4]
 800e722:	f3c3 0240 	ubfx	r2, r3, #1, #1
 800e726:	f884 25d5 	strb.w	r2, [r4, #1493]	; 0x5d5
 800e72a:	f3c3 0280 	ubfx	r2, r3, #2, #1
 800e72e:	f884 25d6 	strb.w	r2, [r4, #1494]	; 0x5d6
 800e732:	f3c3 02c0 	ubfx	r2, r3, #3, #1
 800e736:	f884 25d7 	strb.w	r2, [r4, #1495]	; 0x5d7
 800e73a:	f3c3 1240 	ubfx	r2, r3, #5, #1
 800e73e:	06db      	lsls	r3, r3, #27
 800e740:	f884 25d8 	strb.w	r2, [r4, #1496]	; 0x5d8
 800e744:	d506      	bpl.n	800e754 <RemoteConfigParams::Set(RemoteConfig*)+0x46>
 800e746:	4620      	mov	r0, r4
 800e748:	f105 010c 	add.w	r1, r5, #12
 800e74c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800e750:	f7ff bc2c 	b.w	800dfac <RemoteConfig::SetDisplayName(char const*)>
 800e754:	bd38      	pop	{r3, r4, r5, pc}

0800e756 <RemoteConfigParams::Dump()>:
 800e756:	4770      	bx	lr

0800e758 <RemoteConfig::HandleReboot()>:
 800e758:	f890 35d6 	ldrb.w	r3, [r0, #1494]	; 0x5d6
 800e75c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e75e:	2b00      	cmp	r3, #0
 800e760:	d03d      	beq.n	800e7de <RemoteConfig::HandleReboot()+0x86>
 800e762:	2301      	movs	r3, #1
 800e764:	4c1f      	ldr	r4, [pc, #124]	; (800e7e4 <RemoteConfig::HandleReboot()+0x8c>)
 800e766:	f880 35d9 	strb.w	r3, [r0, #1497]	; 0x5d9
 800e76a:	6825      	ldr	r5, [r4, #0]
 800e76c:	69a8      	ldr	r0, [r5, #24]
 800e76e:	b138      	cbz	r0, 800e780 <RemoteConfig::HandleReboot()+0x28>
 800e770:	2100      	movs	r1, #0
 800e772:	6803      	ldr	r3, [r0, #0]
 800e774:	7429      	strb	r1, [r5, #16]
 800e776:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800e778:	4798      	blx	r3
 800e77a:	4b1b      	ldr	r3, [pc, #108]	; (800e7e8 <RemoteConfig::HandleReboot()+0x90>)
 800e77c:	681b      	ldr	r3, [r3, #0]
 800e77e:	606b      	str	r3, [r5, #4]
 800e780:	4d1a      	ldr	r5, [pc, #104]	; (800e7ec <RemoteConfig::HandleReboot()+0x94>)
 800e782:	6828      	ldr	r0, [r5, #0]
 800e784:	f000 fdf2 	bl	800f36c <SpiFlashStore::Flash()>
 800e788:	2800      	cmp	r0, #0
 800e78a:	d1fa      	bne.n	800e782 <RemoteConfig::HandleReboot()+0x2a>
 800e78c:	4b18      	ldr	r3, [pc, #96]	; (800e7f0 <RemoteConfig::HandleReboot()+0x98>)
 800e78e:	6818      	ldr	r0, [r3, #0]
 800e790:	f002 fa1e 	bl	8010bd0 <Network::Shutdown()>
 800e794:	4817      	ldr	r0, [pc, #92]	; (800e7f4 <RemoteConfig::HandleReboot()+0x9c>)
 800e796:	f7fa fef3 	bl	8009580 <printf>
 800e79a:	6823      	ldr	r3, [r4, #0]
 800e79c:	6998      	ldr	r0, [r3, #24]
 800e79e:	b110      	cbz	r0, 800e7a6 <RemoteConfig::HandleReboot()+0x4e>
 800e7a0:	6803      	ldr	r3, [r0, #0]
 800e7a2:	68db      	ldr	r3, [r3, #12]
 800e7a4:	4798      	blx	r3
 800e7a6:	6824      	ldr	r4, [r4, #0]
 800e7a8:	4913      	ldr	r1, [pc, #76]	; (800e7f8 <RemoteConfig::HandleReboot()+0xa0>)
 800e7aa:	4620      	mov	r0, r4
 800e7ac:	f7f9 fff2 	bl	8008794 <Display::TextStatus(char const*)>
 800e7b0:	7c63      	ldrb	r3, [r4, #17]
 800e7b2:	b183      	cbz	r3, 800e7d6 <RemoteConfig::HandleReboot()+0x7e>
 800e7b4:	f64b 7312 	movw	r3, #48914	; 0xbf12
 800e7b8:	f8ad 3004 	strh.w	r3, [sp, #4]
 800e7bc:	23bf      	movs	r3, #191	; 0xbf
 800e7be:	7a20      	ldrb	r0, [r4, #8]
 800e7c0:	f88d 3006 	strb.w	r3, [sp, #6]
 800e7c4:	f005 ffd0 	bl	8014768 <gd32_i2c_set_address(unsigned char)>
 800e7c8:	68e0      	ldr	r0, [r4, #12]
 800e7ca:	f005 ffc5 	bl	8014758 <gd32_i2c_set_baudrate(unsigned int)>
 800e7ce:	2103      	movs	r1, #3
 800e7d0:	a801      	add	r0, sp, #4
 800e7d2:	f005 ffcf 	bl	8014774 <gd32_i2c_write(char const*, unsigned int)>
 800e7d6:	4b09      	ldr	r3, [pc, #36]	; (800e7fc <RemoteConfig::HandleReboot()+0xa4>)
 800e7d8:	6818      	ldr	r0, [r3, #0]
 800e7da:	f004 fded 	bl	80133b8 <Hardware::Reboot()>
 800e7de:	b003      	add	sp, #12
 800e7e0:	bd30      	pop	{r4, r5, pc}
 800e7e2:	bf00      	nop
 800e7e4:	2001cd48 	andcs	ip, r1, r8, asr #26
 800e7e8:	2001ce4c 	andcs	ip, r1, ip, asr #28
 800e7ec:	20014e08 	andcs	r4, r1, r8, lsl #28
 800e7f0:	2001c710 	andcs	ip, r1, r0, lsl r7
 800e7f4:	0801652c 	stmdaeq	r1, {r2, r3, r5, r8, sl, sp, lr}
 800e7f8:	0801653b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r8, sl, sp, lr}
 800e7fc:	2001ce38 	andcs	ip, r1, r8, lsr lr

0800e800 <RemoteConfig::GetIndex(void const*, unsigned int&)>:
 800e800:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800e804:	2000      	movs	r0, #0
 800e806:	4d12      	ldr	r5, [pc, #72]	; (800e850 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x50>)
 800e808:	f10d 0c04 	add.w	ip, sp, #4
 800e80c:	6814      	ldr	r4, [r2, #0]
 800e80e:	7d2b      	ldrb	r3, [r5, #20]
 800e810:	692e      	ldr	r6, [r5, #16]
 800e812:	42a3      	cmp	r3, r4
 800e814:	bf34      	ite	cc
 800e816:	4664      	movcc	r4, ip
 800e818:	4614      	movcs	r4, r2
 800e81a:	9301      	str	r3, [sp, #4]
 800e81c:	6827      	ldr	r7, [r4, #0]
 800e81e:	460c      	mov	r4, r1
 800e820:	3e01      	subs	r6, #1
 800e822:	440f      	add	r7, r1
 800e824:	42bc      	cmp	r4, r7
 800e826:	d101      	bne.n	800e82c <RemoteConfig::GetIndex(void const*, unsigned int&)+0x2c>
 800e828:	6013      	str	r3, [r2, #0]
 800e82a:	e00c      	b.n	800e846 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x46>
 800e82c:	f894 8000 	ldrb.w	r8, [r4]
 800e830:	f816 ef01 	ldrb.w	lr, [r6, #1]!
 800e834:	45f0      	cmp	r8, lr
 800e836:	d009      	beq.n	800e84c <RemoteConfig::GetIndex(void const*, unsigned int&)+0x4c>
 800e838:	3001      	adds	r0, #1
 800e83a:	2805      	cmp	r0, #5
 800e83c:	f105 051c 	add.w	r5, r5, #28
 800e840:	d1e4      	bne.n	800e80c <RemoteConfig::GetIndex(void const*, unsigned int&)+0xc>
 800e842:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800e846:	b002      	add	sp, #8
 800e848:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e84c:	3401      	adds	r4, #1
 800e84e:	e7e9      	b.n	800e824 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x24>
 800e850:	08016584 	stmdaeq	r1, {r2, r7, r8, sl, sp, lr}

0800e854 <RemoteConfig::PlatformHandleTftpSet()>:
 800e854:	f890 15ec 	ldrb.w	r1, [r0, #1516]	; 0x5ec
 800e858:	b109      	cbz	r1, 800e85e <RemoteConfig::PlatformHandleTftpSet()+0xa>
 800e85a:	f24a 51a5 	movw	r1, #42405	; 0xa5a5
 800e85e:	2002      	movs	r0, #2
 800e860:	f005 b8c2 	b.w	80139e8 <bkp_data_write>

0800e864 <RemoteConfig::PlatformHandleTftpGet()>:
 800e864:	b510      	push	{r4, lr}
 800e866:	4604      	mov	r4, r0
 800e868:	2002      	movs	r0, #2
 800e86a:	f005 f8d3 	bl	8013a14 <bkp_data_read>
 800e86e:	f24a 53a5 	movw	r3, #42405	; 0xa5a5
 800e872:	1ac3      	subs	r3, r0, r3
 800e874:	4258      	negs	r0, r3
 800e876:	4158      	adcs	r0, r3
 800e878:	f884 05ec 	strb.w	r0, [r4, #1516]	; 0x5ec
 800e87c:	bd10      	pop	{r4, pc}

0800e87e <strcmp>:
 800e87e:	1e43      	subs	r3, r0, #1
 800e880:	3901      	subs	r1, #1
 800e882:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800e886:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800e88a:	4290      	cmp	r0, r2
 800e88c:	d001      	beq.n	800e892 <strcmp+0x14>
 800e88e:	1a80      	subs	r0, r0, r2
 800e890:	e001      	b.n	800e896 <strcmp+0x18>
 800e892:	2800      	cmp	r0, #0
 800e894:	d1f5      	bne.n	800e882 <strcmp+0x4>
 800e896:	4770      	bx	lr

0800e898 <strcasecmp>:
 800e898:	b530      	push	{r4, r5, lr}
 800e89a:	1e42      	subs	r2, r0, #1
 800e89c:	3901      	subs	r1, #1
 800e89e:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800e8a2:	4604      	mov	r4, r0
 800e8a4:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 800e8a8:	2b19      	cmp	r3, #25
 800e8aa:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800e8ae:	bf98      	it	ls
 800e8b0:	f100 0420 	addls.w	r4, r0, #32
 800e8b4:	f1a3 0541 	sub.w	r5, r3, #65	; 0x41
 800e8b8:	2d19      	cmp	r5, #25
 800e8ba:	bf98      	it	ls
 800e8bc:	3320      	addls	r3, #32
 800e8be:	42a3      	cmp	r3, r4
 800e8c0:	d001      	beq.n	800e8c6 <strcasecmp+0x2e>
 800e8c2:	1ae0      	subs	r0, r4, r3
 800e8c4:	e001      	b.n	800e8ca <strcasecmp+0x32>
 800e8c6:	2800      	cmp	r0, #0
 800e8c8:	d1e9      	bne.n	800e89e <strcasecmp+0x6>
 800e8ca:	bd30      	pop	{r4, r5, pc}

0800e8cc <PropertiesConfig::EnableJSON(bool)>:
 800e8cc:	4a04      	ldr	r2, [pc, #16]	; (800e8e0 <PropertiesConfig::EnableJSON(bool)+0x14>)
 800e8ce:	7813      	ldrb	r3, [r2, #0]
 800e8d0:	b118      	cbz	r0, 800e8da <PropertiesConfig::EnableJSON(bool)+0xe>
 800e8d2:	f043 0301 	orr.w	r3, r3, #1
 800e8d6:	7013      	strb	r3, [r2, #0]
 800e8d8:	4770      	bx	lr
 800e8da:	f003 03fe 	and.w	r3, r3, #254	; 0xfe
 800e8de:	e7fa      	b.n	800e8d6 <PropertiesConfig::EnableJSON(bool)+0xa>
 800e8e0:	2001cd44 	andcs	ip, r1, r4, asr #26

0800e8e4 <HttpDaemon::HttpDaemon()>:
 800e8e4:	4a0a      	ldr	r2, [pc, #40]	; (800e910 <HttpDaemon::HttpDaemon()+0x2c>)
 800e8e6:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800e8ea:	6002      	str	r2, [r0, #0]
 800e8ec:	2200      	movs	r2, #0
 800e8ee:	f44f 7c02 	mov.w	ip, #520	; 0x208
 800e8f2:	e9c0 1204 	strd	r1, r2, [r0, #16]
 800e8f6:	2102      	movs	r1, #2
 800e8f8:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800e8fc:	e9c0 c106 	strd	ip, r1, [r0, #24]
 800e900:	60c2      	str	r2, [r0, #12]
 800e902:	8402      	strh	r2, [r0, #32]
 800e904:	f8a0 25c2 	strh.w	r2, [r0, #1474]	; 0x5c2
 800e908:	f8c0 25c4 	str.w	r2, [r0, #1476]	; 0x5c4
 800e90c:	4770      	bx	lr
 800e90e:	bf00      	nop
 800e910:	0801686c 	stmdaeq	r1, {r2, r3, r5, r6, fp, sp, lr}

0800e914 <HttpDaemon::Start()>:
 800e914:	4b04      	ldr	r3, [pc, #16]	; (800e928 <HttpDaemon::Start()+0x14>)
 800e916:	b510      	push	{r4, lr}
 800e918:	2150      	movs	r1, #80	; 0x50
 800e91a:	4604      	mov	r4, r0
 800e91c:	6818      	ldr	r0, [r3, #0]
 800e91e:	f002 fc55 	bl	80111cc <Network::TcpBegin(unsigned short)>
 800e922:	6120      	str	r0, [r4, #16]
 800e924:	bd10      	pop	{r4, pc}
 800e926:	bf00      	nop
 800e928:	2001c710 	andcs	ip, r1, r0, lsl r7

0800e92c <HttpDaemon::ParseMethod(char*)>:
 800e92c:	b538      	push	{r3, r4, r5, lr}
 800e92e:	4604      	mov	r4, r0
 800e930:	4608      	mov	r0, r1
 800e932:	491a      	ldr	r1, [pc, #104]	; (800e99c <HttpDaemon::ParseMethod(char*)+0x70>)
 800e934:	f004 fe82 	bl	801363c <strtok>
 800e938:	4605      	mov	r5, r0
 800e93a:	b360      	cbz	r0, 800e996 <HttpDaemon::ParseMethod(char*)+0x6a>
 800e93c:	4918      	ldr	r1, [pc, #96]	; (800e9a0 <HttpDaemon::ParseMethod(char*)+0x74>)
 800e93e:	f7ff ff9e 	bl	800e87e <strcmp>
 800e942:	b128      	cbz	r0, 800e950 <HttpDaemon::ParseMethod(char*)+0x24>
 800e944:	4628      	mov	r0, r5
 800e946:	4917      	ldr	r1, [pc, #92]	; (800e9a4 <HttpDaemon::ParseMethod(char*)+0x78>)
 800e948:	f7ff ff99 	bl	800e87e <strcmp>
 800e94c:	bb18      	cbnz	r0, 800e996 <HttpDaemon::ParseMethod(char*)+0x6a>
 800e94e:	2001      	movs	r0, #1
 800e950:	61e0      	str	r0, [r4, #28]
 800e952:	4912      	ldr	r1, [pc, #72]	; (800e99c <HttpDaemon::ParseMethod(char*)+0x70>)
 800e954:	2000      	movs	r0, #0
 800e956:	f004 fe71 	bl	801363c <strtok>
 800e95a:	b910      	cbnz	r0, 800e962 <HttpDaemon::ParseMethod(char*)+0x36>
 800e95c:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800e960:	bd38      	pop	{r3, r4, r5, pc}
 800e962:	6060      	str	r0, [r4, #4]
 800e964:	4910      	ldr	r1, [pc, #64]	; (800e9a8 <HttpDaemon::ParseMethod(char*)+0x7c>)
 800e966:	2000      	movs	r0, #0
 800e968:	f004 fe68 	bl	801363c <strtok>
 800e96c:	2800      	cmp	r0, #0
 800e96e:	d0f5      	beq.n	800e95c <HttpDaemon::ParseMethod(char*)+0x30>
 800e970:	490e      	ldr	r1, [pc, #56]	; (800e9ac <HttpDaemon::ParseMethod(char*)+0x80>)
 800e972:	f7ff ff84 	bl	800e87e <strcmp>
 800e976:	2800      	cmp	r0, #0
 800e978:	d1f0      	bne.n	800e95c <HttpDaemon::ParseMethod(char*)+0x30>
 800e97a:	490d      	ldr	r1, [pc, #52]	; (800e9b0 <HttpDaemon::ParseMethod(char*)+0x84>)
 800e97c:	f004 fe5e 	bl	801363c <strtok>
 800e980:	2800      	cmp	r0, #0
 800e982:	d0eb      	beq.n	800e95c <HttpDaemon::ParseMethod(char*)+0x30>
 800e984:	490b      	ldr	r1, [pc, #44]	; (800e9b4 <HttpDaemon::ParseMethod(char*)+0x88>)
 800e986:	f7ff ff7a 	bl	800e87e <strcmp>
 800e98a:	2800      	cmp	r0, #0
 800e98c:	f240 10f9 	movw	r0, #505	; 0x1f9
 800e990:	bf08      	it	eq
 800e992:	20c8      	moveq	r0, #200	; 0xc8
 800e994:	e7e4      	b.n	800e960 <HttpDaemon::ParseMethod(char*)+0x34>
 800e996:	f240 10f5 	movw	r0, #501	; 0x1f5
 800e99a:	e7e1      	b.n	800e960 <HttpDaemon::ParseMethod(char*)+0x34>
 800e99c:	08016610 	stmdaeq	r1, {r4, r9, sl, sp, lr}
 800e9a0:	08016612 	stmdaeq	r1, {r1, r4, r9, sl, sp, lr}
 800e9a4:	08016616 	stmdaeq	r1, {r1, r2, r4, r9, sl, sp, lr}
 800e9a8:	08016680 	stmdaeq	r1, {r7, r9, sl, sp, lr}
 800e9ac:	0801661b 	stmdaeq	r1, {r0, r1, r3, r4, r9, sl, sp, lr}
 800e9b0:	08016620 	stmdaeq	r1, {r5, r9, sl, sp, lr}
 800e9b4:	08016623 	stmdaeq	r1, {r0, r1, r5, r9, sl, sp, lr}

0800e9b8 <HttpDaemon::ParseHeaderField(char*)>:
 800e9b8:	b538      	push	{r3, r4, r5, lr}
 800e9ba:	4605      	mov	r5, r0
 800e9bc:	4608      	mov	r0, r1
 800e9be:	491d      	ldr	r1, [pc, #116]	; (800ea34 <HttpDaemon::ParseHeaderField(char*)+0x7c>)
 800e9c0:	f004 fe3c 	bl	801363c <strtok>
 800e9c4:	4604      	mov	r4, r0
 800e9c6:	b910      	cbnz	r0, 800e9ce <HttpDaemon::ParseHeaderField(char*)+0x16>
 800e9c8:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800e9cc:	bd38      	pop	{r3, r4, r5, pc}
 800e9ce:	491a      	ldr	r1, [pc, #104]	; (800ea38 <HttpDaemon::ParseHeaderField(char*)+0x80>)
 800e9d0:	f7ff ff62 	bl	800e898 <strcasecmp>
 800e9d4:	b970      	cbnz	r0, 800e9f4 <HttpDaemon::ParseHeaderField(char*)+0x3c>
 800e9d6:	4919      	ldr	r1, [pc, #100]	; (800ea3c <HttpDaemon::ParseHeaderField(char*)+0x84>)
 800e9d8:	f004 fe30 	bl	801363c <strtok>
 800e9dc:	2800      	cmp	r0, #0
 800e9de:	d0f3      	beq.n	800e9c8 <HttpDaemon::ParseHeaderField(char*)+0x10>
 800e9e0:	4917      	ldr	r1, [pc, #92]	; (800ea40 <HttpDaemon::ParseHeaderField(char*)+0x88>)
 800e9e2:	f7ff ff4c 	bl	800e87e <strcmp>
 800e9e6:	b108      	cbz	r0, 800e9ec <HttpDaemon::ParseHeaderField(char*)+0x34>
 800e9e8:	20c8      	movs	r0, #200	; 0xc8
 800e9ea:	e7ef      	b.n	800e9cc <HttpDaemon::ParseHeaderField(char*)+0x14>
 800e9ec:	2301      	movs	r3, #1
 800e9ee:	f885 3020 	strb.w	r3, [r5, #32]
 800e9f2:	e7f9      	b.n	800e9e8 <HttpDaemon::ParseHeaderField(char*)+0x30>
 800e9f4:	4620      	mov	r0, r4
 800e9f6:	4913      	ldr	r1, [pc, #76]	; (800ea44 <HttpDaemon::ParseHeaderField(char*)+0x8c>)
 800e9f8:	f7ff ff4e 	bl	800e898 <strcasecmp>
 800e9fc:	4604      	mov	r4, r0
 800e9fe:	2800      	cmp	r0, #0
 800ea00:	d1f2      	bne.n	800e9e8 <HttpDaemon::ParseHeaderField(char*)+0x30>
 800ea02:	4911      	ldr	r1, [pc, #68]	; (800ea48 <HttpDaemon::ParseHeaderField(char*)+0x90>)
 800ea04:	f004 fe1a 	bl	801363c <strtok>
 800ea08:	2800      	cmp	r0, #0
 800ea0a:	d0dd      	beq.n	800e9c8 <HttpDaemon::ParseHeaderField(char*)+0x10>
 800ea0c:	1e42      	subs	r2, r0, #1
 800ea0e:	4623      	mov	r3, r4
 800ea10:	200a      	movs	r0, #10
 800ea12:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 800ea16:	b911      	cbnz	r1, 800ea1e <HttpDaemon::ParseHeaderField(char*)+0x66>
 800ea18:	f8a5 35c6 	strh.w	r3, [r5, #1478]	; 0x5c6
 800ea1c:	e7e4      	b.n	800e9e8 <HttpDaemon::ParseHeaderField(char*)+0x30>
 800ea1e:	3930      	subs	r1, #48	; 0x30
 800ea20:	2909      	cmp	r1, #9
 800ea22:	d8d1      	bhi.n	800e9c8 <HttpDaemon::ParseHeaderField(char*)+0x10>
 800ea24:	fb00 1303 	mla	r3, r0, r3, r1
 800ea28:	f5b3 6fb4 	cmp.w	r3, #1440	; 0x5a0
 800ea2c:	d9f1      	bls.n	800ea12 <HttpDaemon::ParseHeaderField(char*)+0x5a>
 800ea2e:	f240 109d 	movw	r0, #413	; 0x19d
 800ea32:	e7cb      	b.n	800e9cc <HttpDaemon::ParseHeaderField(char*)+0x14>
 800ea34:	08016627 	stmdaeq	r1, {r0, r1, r2, r5, r9, sl, sp, lr}
 800ea38:	08016629 	stmdaeq	r1, {r0, r3, r5, r9, sl, sp, lr}
 800ea3c:	08016636 	stmdaeq	r1, {r1, r2, r4, r5, r9, sl, sp, lr}
 800ea40:	08016639 	stmdaeq	r1, {r0, r3, r4, r5, r9, sl, sp, lr}
 800ea44:	0801664a 	stmdaeq	r1, {r1, r3, r6, r9, sl, sp, lr}
 800ea48:	08016610 	stmdaeq	r1, {r4, r9, sl, sp, lr}

0800ea4c <HttpDaemon::ParseRequest()>:
 800ea4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ea4e:	2400      	movs	r4, #0
 800ea50:	4605      	mov	r5, r0
 800ea52:	4622      	mov	r2, r4
 800ea54:	4626      	mov	r6, r4
 800ea56:	68c1      	ldr	r1, [r0, #12]
 800ea58:	f880 4020 	strb.w	r4, [r0, #32]
 800ea5c:	f8c0 45c4 	str.w	r4, [r0, #1476]	; 0x5c4
 800ea60:	8aab      	ldrh	r3, [r5, #20]
 800ea62:	42a3      	cmp	r3, r4
 800ea64:	d91e      	bls.n	800eaa4 <HttpDaemon::ParseRequest()+0x58>
 800ea66:	68eb      	ldr	r3, [r5, #12]
 800ea68:	5d18      	ldrb	r0, [r3, r4]
 800ea6a:	280a      	cmp	r0, #10
 800ea6c:	d10e      	bne.n	800ea8c <HttpDaemon::ParseRequest()+0x40>
 800ea6e:	4423      	add	r3, r4
 800ea70:	f803 6c01 	strb.w	r6, [r3, #-1]
 800ea74:	1c57      	adds	r7, r2, #1
 800ea76:	b962      	cbnz	r2, 800ea92 <HttpDaemon::ParseRequest()+0x46>
 800ea78:	4628      	mov	r0, r5
 800ea7a:	f7ff ff57 	bl	800e92c <HttpDaemon::ParseMethod(char*)>
 800ea7e:	28c8      	cmp	r0, #200	; 0xc8
 800ea80:	d111      	bne.n	800eaa6 <HttpDaemon::ParseRequest()+0x5a>
 800ea82:	463a      	mov	r2, r7
 800ea84:	68e9      	ldr	r1, [r5, #12]
 800ea86:	3401      	adds	r4, #1
 800ea88:	b2a4      	uxth	r4, r4
 800ea8a:	4421      	add	r1, r4
 800ea8c:	3401      	adds	r4, #1
 800ea8e:	b2a4      	uxth	r4, r4
 800ea90:	e7e6      	b.n	800ea60 <HttpDaemon::ParseRequest()+0x14>
 800ea92:	7808      	ldrb	r0, [r1, #0]
 800ea94:	b970      	cbnz	r0, 800eab4 <HttpDaemon::ParseRequest()+0x68>
 800ea96:	696b      	ldr	r3, [r5, #20]
 800ea98:	3b01      	subs	r3, #1
 800ea9a:	1b1b      	subs	r3, r3, r4
 800ea9c:	b29b      	uxth	r3, r3
 800ea9e:	f8a5 35c4 	strh.w	r3, [r5, #1476]	; 0x5c4
 800eaa2:	b90b      	cbnz	r3, 800eaa8 <HttpDaemon::ParseRequest()+0x5c>
 800eaa4:	20c8      	movs	r0, #200	; 0xc8
 800eaa6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800eaa8:	68ea      	ldr	r2, [r5, #12]
 800eaaa:	3401      	adds	r4, #1
 800eaac:	4414      	add	r4, r2
 800eaae:	60ac      	str	r4, [r5, #8]
 800eab0:	54e0      	strb	r0, [r4, r3]
 800eab2:	e7f7      	b.n	800eaa4 <HttpDaemon::ParseRequest()+0x58>
 800eab4:	4628      	mov	r0, r5
 800eab6:	f7ff ff7f 	bl	800e9b8 <HttpDaemon::ParseHeaderField(char*)>
 800eaba:	e7e0      	b.n	800ea7e <HttpDaemon::ParseRequest()+0x32>

0800eabc <HttpDaemon::HandleGetTxt()>:
 800eabc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800eac0:	6847      	ldr	r7, [r0, #4]
 800eac2:	4604      	mov	r4, r0
 800eac4:	1dbd      	adds	r5, r7, #6
 800eac6:	462b      	mov	r3, r5
 800eac8:	4618      	mov	r0, r3
 800eaca:	7802      	ldrb	r2, [r0, #0]
 800eacc:	3301      	adds	r3, #1
 800eace:	2a00      	cmp	r2, #0
 800ead0:	d1fa      	bne.n	800eac8 <HttpDaemon::HandleGetTxt()+0xc>
 800ead2:	1b40      	subs	r0, r0, r5
 800ead4:	2804      	cmp	r0, #4
 800ead6:	d803      	bhi.n	800eae0 <HttpDaemon::HandleGetTxt()+0x24>
 800ead8:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800eadc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800eae0:	3804      	subs	r0, #4
 800eae2:	4914      	ldr	r1, [pc, #80]	; (800eb34 <HttpDaemon::HandleGetTxt()+0x78>)
 800eae4:	4428      	add	r0, r5
 800eae6:	f7ff feca 	bl	800e87e <strcmp>
 800eaea:	2800      	cmp	r0, #0
 800eaec:	d1f4      	bne.n	800ead8 <HttpDaemon::HandleGetTxt()+0x1c>
 800eaee:	4b12      	ldr	r3, [pc, #72]	; (800eb38 <HttpDaemon::HandleGetTxt()+0x7c>)
 800eaf0:	2001      	movs	r0, #1
 800eaf2:	f893 8000 	ldrb.w	r8, [r3]
 800eaf6:	f7ff fee9 	bl	800e8cc <PropertiesConfig::EnableJSON(bool)>
 800eafa:	4b10      	ldr	r3, [pc, #64]	; (800eb3c <HttpDaemon::HandleGetTxt()+0x80>)
 800eafc:	f240 529b 	movw	r2, #1435	; 0x59b
 800eb00:	4629      	mov	r1, r5
 800eb02:	6818      	ldr	r0, [r3, #0]
 800eb04:	f7ff fa6a 	bl	800dfdc <RemoteConfig::HandleGet(void*, unsigned int)>
 800eb08:	4606      	mov	r6, r0
 800eb0a:	f008 0801 	and.w	r8, r8, #1
 800eb0e:	4640      	mov	r0, r8
 800eb10:	f7ff fedc 	bl	800e8cc <PropertiesConfig::EnableJSON(bool)>
 800eb14:	2e00      	cmp	r6, #0
 800eb16:	d0df      	beq.n	800ead8 <HttpDaemon::HandleGetTxt()+0x1c>
 800eb18:	f8a4 65c2 	strh.w	r6, [r4, #1474]	; 0x5c2
 800eb1c:	3606      	adds	r6, #6
 800eb1e:	3422      	adds	r4, #34	; 0x22
 800eb20:	4437      	add	r7, r6
 800eb22:	42bd      	cmp	r5, r7
 800eb24:	d101      	bne.n	800eb2a <HttpDaemon::HandleGetTxt()+0x6e>
 800eb26:	20c8      	movs	r0, #200	; 0xc8
 800eb28:	e7d8      	b.n	800eadc <HttpDaemon::HandleGetTxt()+0x20>
 800eb2a:	f815 3b01 	ldrb.w	r3, [r5], #1
 800eb2e:	f804 3b01 	strb.w	r3, [r4], #1
 800eb32:	e7f6      	b.n	800eb22 <HttpDaemon::HandleGetTxt()+0x66>
 800eb34:	08016571 	stmdaeq	r1, {r0, r4, r5, r6, r8, sl, sp, lr}
 800eb38:	2001cd44 	andcs	ip, r1, r4, asr #26
 800eb3c:	20013df0 	strdcs	r3, [r1], -r0

0800eb40 <HttpDaemon::HandleGet()>:
 800eb40:	b570      	push	{r4, r5, r6, lr}
 800eb42:	6845      	ldr	r5, [r0, #4]
 800eb44:	4604      	mov	r4, r0
 800eb46:	4943      	ldr	r1, [pc, #268]	; (800ec54 <HttpDaemon::HandleGet()+0x114>)
 800eb48:	4628      	mov	r0, r5
 800eb4a:	f7ff fe98 	bl	800e87e <strcmp>
 800eb4e:	b120      	cbz	r0, 800eb5a <HttpDaemon::HandleGet()+0x1a>
 800eb50:	4628      	mov	r0, r5
 800eb52:	4941      	ldr	r1, [pc, #260]	; (800ec58 <HttpDaemon::HandleGet()+0x118>)
 800eb54:	f7ff fe93 	bl	800e87e <strcmp>
 800eb58:	b960      	cbnz	r0, 800eb74 <HttpDaemon::HandleGet()+0x34>
 800eb5a:	4621      	mov	r1, r4
 800eb5c:	4b3f      	ldr	r3, [pc, #252]	; (800ec5c <HttpDaemon::HandleGet()+0x11c>)
 800eb5e:	4840      	ldr	r0, [pc, #256]	; (800ec60 <HttpDaemon::HandleGet()+0x120>)
 800eb60:	f841 3b22 	str.w	r3, [r1], #34
 800eb64:	f000 fa7a 	bl	800f05c <get_file_content(char const*, char*)>
 800eb68:	2800      	cmp	r0, #0
 800eb6a:	dd33      	ble.n	800ebd4 <HttpDaemon::HandleGet()+0x94>
 800eb6c:	f8a4 05c2 	strh.w	r0, [r4, #1474]	; 0x5c2
 800eb70:	20c8      	movs	r0, #200	; 0xc8
 800eb72:	bd70      	pop	{r4, r5, r6, pc}
 800eb74:	4628      	mov	r0, r5
 800eb76:	493b      	ldr	r1, [pc, #236]	; (800ec64 <HttpDaemon::HandleGet()+0x124>)
 800eb78:	f7ff fe81 	bl	800e87e <strcmp>
 800eb7c:	b928      	cbnz	r0, 800eb8a <HttpDaemon::HandleGet()+0x4a>
 800eb7e:	4621      	mov	r1, r4
 800eb80:	4b39      	ldr	r3, [pc, #228]	; (800ec68 <HttpDaemon::HandleGet()+0x128>)
 800eb82:	483a      	ldr	r0, [pc, #232]	; (800ec6c <HttpDaemon::HandleGet()+0x12c>)
 800eb84:	f841 3b22 	str.w	r3, [r1], #34
 800eb88:	e7ec      	b.n	800eb64 <HttpDaemon::HandleGet()+0x24>
 800eb8a:	4628      	mov	r0, r5
 800eb8c:	4938      	ldr	r1, [pc, #224]	; (800ec70 <HttpDaemon::HandleGet()+0x130>)
 800eb8e:	f7ff fe76 	bl	800e87e <strcmp>
 800eb92:	b198      	cbz	r0, 800ebbc <HttpDaemon::HandleGet()+0x7c>
 800eb94:	4a37      	ldr	r2, [pc, #220]	; (800ec74 <HttpDaemon::HandleGet()+0x134>)
 800eb96:	1e6b      	subs	r3, r5, #1
 800eb98:	1d69      	adds	r1, r5, #5
 800eb9a:	428b      	cmp	r3, r1
 800eb9c:	d114      	bne.n	800ebc8 <HttpDaemon::HandleGet()+0x88>
 800eb9e:	4b36      	ldr	r3, [pc, #216]	; (800ec78 <HttpDaemon::HandleGet()+0x138>)
 800eba0:	3506      	adds	r5, #6
 800eba2:	4628      	mov	r0, r5
 800eba4:	4935      	ldr	r1, [pc, #212]	; (800ec7c <HttpDaemon::HandleGet()+0x13c>)
 800eba6:	6023      	str	r3, [r4, #0]
 800eba8:	f7ff fe69 	bl	800e87e <strcmp>
 800ebac:	b9a8      	cbnz	r0, 800ebda <HttpDaemon::HandleGet()+0x9a>
 800ebae:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800ebb2:	f104 0022 	add.w	r0, r4, #34	; 0x22
 800ebb6:	f000 f9d9 	bl	800ef6c <remoteconfig::json_get_list(char*, unsigned short)>
 800ebba:	e7d5      	b.n	800eb68 <HttpDaemon::HandleGet()+0x28>
 800ebbc:	4621      	mov	r1, r4
 800ebbe:	4b30      	ldr	r3, [pc, #192]	; (800ec80 <HttpDaemon::HandleGet()+0x140>)
 800ebc0:	4830      	ldr	r0, [pc, #192]	; (800ec84 <HttpDaemon::HandleGet()+0x144>)
 800ebc2:	f841 3b22 	str.w	r3, [r1], #34
 800ebc6:	e7cd      	b.n	800eb64 <HttpDaemon::HandleGet()+0x24>
 800ebc8:	f812 0b01 	ldrb.w	r0, [r2], #1
 800ebcc:	f813 6f01 	ldrb.w	r6, [r3, #1]!
 800ebd0:	4286      	cmp	r6, r0
 800ebd2:	d0e2      	beq.n	800eb9a <HttpDaemon::HandleGet()+0x5a>
 800ebd4:	f44f 70ca 	mov.w	r0, #404	; 0x194
 800ebd8:	e7cb      	b.n	800eb72 <HttpDaemon::HandleGet()+0x32>
 800ebda:	4628      	mov	r0, r5
 800ebdc:	492a      	ldr	r1, [pc, #168]	; (800ec88 <HttpDaemon::HandleGet()+0x148>)
 800ebde:	f7ff fe4e 	bl	800e87e <strcmp>
 800ebe2:	b930      	cbnz	r0, 800ebf2 <HttpDaemon::HandleGet()+0xb2>
 800ebe4:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800ebe8:	f104 0022 	add.w	r0, r4, #34	; 0x22
 800ebec:	f000 f9f2 	bl	800efd4 <remoteconfig::json_get_version(char*, unsigned short)>
 800ebf0:	e7ba      	b.n	800eb68 <HttpDaemon::HandleGet()+0x28>
 800ebf2:	4628      	mov	r0, r5
 800ebf4:	4925      	ldr	r1, [pc, #148]	; (800ec8c <HttpDaemon::HandleGet()+0x14c>)
 800ebf6:	f7ff fe42 	bl	800e87e <strcmp>
 800ebfa:	b958      	cbnz	r0, 800ec14 <HttpDaemon::HandleGet()+0xd4>
 800ebfc:	4b24      	ldr	r3, [pc, #144]	; (800ec90 <HttpDaemon::HandleGet()+0x150>)
 800ebfe:	681b      	ldr	r3, [r3, #0]
 800ec00:	f893 35d7 	ldrb.w	r3, [r3, #1495]	; 0x5d7
 800ec04:	b31b      	cbz	r3, 800ec4e <HttpDaemon::HandleGet()+0x10e>
 800ec06:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800ec0a:	f104 0022 	add.w	r0, r4, #34	; 0x22
 800ec0e:	f000 f9fd 	bl	800f00c <remoteconfig::json_get_uptime(char*, unsigned short)>
 800ec12:	e7a9      	b.n	800eb68 <HttpDaemon::HandleGet()+0x28>
 800ec14:	4628      	mov	r0, r5
 800ec16:	491f      	ldr	r1, [pc, #124]	; (800ec94 <HttpDaemon::HandleGet()+0x154>)
 800ec18:	f7ff fe31 	bl	800e87e <strcmp>
 800ec1c:	b930      	cbnz	r0, 800ec2c <HttpDaemon::HandleGet()+0xec>
 800ec1e:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800ec22:	f104 0022 	add.w	r0, r4, #34	; 0x22
 800ec26:	f000 fa01 	bl	800f02c <remoteconfig::json_get_display(char*, unsigned short)>
 800ec2a:	e79d      	b.n	800eb68 <HttpDaemon::HandleGet()+0x28>
 800ec2c:	4628      	mov	r0, r5
 800ec2e:	491a      	ldr	r1, [pc, #104]	; (800ec98 <HttpDaemon::HandleGet()+0x158>)
 800ec30:	f7ff fe25 	bl	800e87e <strcmp>
 800ec34:	b930      	cbnz	r0, 800ec44 <HttpDaemon::HandleGet()+0x104>
 800ec36:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 800ec3a:	f104 0022 	add.w	r0, r4, #34	; 0x22
 800ec3e:	f000 fa05 	bl	800f04c <remoteconfig::json_get_directory(char*, unsigned short)>
 800ec42:	e791      	b.n	800eb68 <HttpDaemon::HandleGet()+0x28>
 800ec44:	4620      	mov	r0, r4
 800ec46:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ec4a:	f7ff bf37 	b.w	800eabc <HttpDaemon::HandleGetTxt()>
 800ec4e:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800ec52:	e78e      	b.n	800eb72 <HttpDaemon::HandleGet()+0x32>
 800ec54:	08016680 	stmdaeq	r1, {r7, r9, sl, sp, lr}
 800ec58:	08016659 	stmdaeq	r1, {r0, r3, r4, r6, r9, sl, sp, lr}
 800ec5c:	0801686c 	stmdaeq	r1, {r2, r3, r5, r6, fp, sp, lr}
 800ec60:	0801665a 	stmdaeq	r1, {r1, r3, r4, r6, r9, sl, sp, lr}
 800ec64:	08016665 	stmdaeq	r1, {r0, r2, r5, r6, r9, sl, sp, lr}
 800ec68:	0801688c 	stmdaeq	r1, {r2, r3, r7, fp, sp, lr}
 800ec6c:	08016666 	stmdaeq	r1, {r1, r2, r5, r6, r9, sl, sp, lr}
 800ec70:	08016671 	stmdaeq	r1, {r0, r4, r5, r6, r9, sl, sp, lr}
 800ec74:	0801667b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r9, sl, sp, lr}
 800ec78:	080168cc 	stmdaeq	r1, {r2, r3, r6, r7, fp, sp, lr}
 800ec7c:	08016682 	stmdaeq	r1, {r1, r7, r9, sl, sp, lr}
 800ec80:	080168ac 	stmdaeq	r1, {r2, r3, r5, r7, fp, sp, lr}
 800ec84:	08016672 	stmdaeq	r1, {r1, r4, r5, r6, r9, sl, sp, lr}
 800ec88:	08016687 	stmdaeq	r1, {r0, r1, r2, r7, r9, sl, sp, lr}
 800ec8c:	0801668f 	stmdaeq	r1, {r0, r1, r2, r3, r7, r9, sl, sp, lr}
 800ec90:	20013df0 	strdcs	r3, [r1], -r0
 800ec94:	08016696 	stmdaeq	r1, {r1, r2, r4, r7, r9, sl, sp, lr}
 800ec98:	0801669e 	stmdaeq	r1, {r1, r2, r3, r4, r7, r9, sl, sp, lr}

0800ec9c <HttpDaemon::HandlePost(bool)>:
 800ec9c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ec9e:	4604      	mov	r4, r0
 800eca0:	2900      	cmp	r1, #0
 800eca2:	f040 8091 	bne.w	800edc8 <HttpDaemon::HandlePost(bool)+0x12c>
 800eca6:	f890 3020 	ldrb.w	r3, [r0, #32]
 800ecaa:	2b00      	cmp	r3, #0
 800ecac:	d05d      	beq.n	800ed6a <HttpDaemon::HandlePost(bool)+0xce>
 800ecae:	6845      	ldr	r5, [r0, #4]
 800ecb0:	4948      	ldr	r1, [pc, #288]	; (800edd4 <HttpDaemon::HandlePost(bool)+0x138>)
 800ecb2:	4628      	mov	r0, r5
 800ecb4:	f7ff fde3 	bl	800e87e <strcmp>
 800ecb8:	2800      	cmp	r0, #0
 800ecba:	bf0c      	ite	eq
 800ecbc:	2301      	moveq	r3, #1
 800ecbe:	2300      	movne	r3, #0
 800ecc0:	f884 3021 	strb.w	r3, [r4, #33]	; 0x21
 800ecc4:	d055      	beq.n	800ed72 <HttpDaemon::HandlePost(bool)+0xd6>
 800ecc6:	4628      	mov	r0, r5
 800ecc8:	4943      	ldr	r1, [pc, #268]	; (800edd8 <HttpDaemon::HandlePost(bool)+0x13c>)
 800ecca:	f7ff fdd8 	bl	800e87e <strcmp>
 800ecce:	2800      	cmp	r0, #0
 800ecd0:	d04f      	beq.n	800ed72 <HttpDaemon::HandlePost(bool)+0xd6>
 800ecd2:	f44f 70ca 	mov.w	r0, #404	; 0x194
 800ecd6:	e04a      	b.n	800ed6e <HttpDaemon::HandlePost(bool)+0xd2>
 800ecd8:	4940      	ldr	r1, [pc, #256]	; (800eddc <HttpDaemon::HandlePost(bool)+0x140>)
 800ecda:	68a0      	ldr	r0, [r4, #8]
 800ecdc:	f10d 0207 	add.w	r2, sp, #7
 800ece0:	f003 ff34 	bl	8012b4c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800ece4:	b9e8      	cbnz	r0, 800ed22 <HttpDaemon::HandlePost(bool)+0x86>
 800ece6:	f89d 6007 	ldrb.w	r6, [sp, #7]
 800ecea:	4b3d      	ldr	r3, [pc, #244]	; (800ede0 <HttpDaemon::HandlePost(bool)+0x144>)
 800ecec:	fab6 f186 	clz	r1, r6
 800ecf0:	681d      	ldr	r5, [r3, #0]
 800ecf2:	0949      	lsrs	r1, r1, #5
 800ecf4:	69a8      	ldr	r0, [r5, #24]
 800ecf6:	b138      	cbz	r0, 800ed08 <HttpDaemon::HandlePost(bool)+0x6c>
 800ecf8:	6803      	ldr	r3, [r0, #0]
 800ecfa:	7429      	strb	r1, [r5, #16]
 800ecfc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ecfe:	4798      	blx	r3
 800ed00:	b116      	cbz	r6, 800ed08 <HttpDaemon::HandlePost(bool)+0x6c>
 800ed02:	4b38      	ldr	r3, [pc, #224]	; (800ede4 <HttpDaemon::HandlePost(bool)+0x148>)
 800ed04:	681b      	ldr	r3, [r3, #0]
 800ed06:	606b      	str	r3, [r5, #4]
 800ed08:	4620      	mov	r0, r4
 800ed0a:	4b37      	ldr	r3, [pc, #220]	; (800ede8 <HttpDaemon::HandlePost(bool)+0x14c>)
 800ed0c:	f240 519f 	movw	r1, #1439	; 0x59f
 800ed10:	4a36      	ldr	r2, [pc, #216]	; (800edec <HttpDaemon::HandlePost(bool)+0x150>)
 800ed12:	f840 3b22 	str.w	r3, [r0], #34
 800ed16:	f7fa fc5b 	bl	80095d0 <snprintf>
 800ed1a:	f8a4 05c2 	strh.w	r0, [r4, #1474]	; 0x5c2
 800ed1e:	20c8      	movs	r0, #200	; 0xc8
 800ed20:	e025      	b.n	800ed6e <HttpDaemon::HandlePost(bool)+0xd2>
 800ed22:	4933      	ldr	r1, [pc, #204]	; (800edf0 <HttpDaemon::HandlePost(bool)+0x154>)
 800ed24:	68a0      	ldr	r0, [r4, #8]
 800ed26:	f10d 0207 	add.w	r2, sp, #7
 800ed2a:	f003 ff0f 	bl	8012b4c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800ed2e:	b9e0      	cbnz	r0, 800ed6a <HttpDaemon::HandlePost(bool)+0xce>
 800ed30:	4b30      	ldr	r3, [pc, #192]	; (800edf4 <HttpDaemon::HandlePost(bool)+0x158>)
 800ed32:	6818      	ldr	r0, [r3, #0]
 800ed34:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800ed38:	b11b      	cbz	r3, 800ed42 <HttpDaemon::HandlePost(bool)+0xa6>
 800ed3a:	2104      	movs	r1, #4
 800ed3c:	f004 fa98 	bl	8013270 <LedBlink::SetMode(ledblink::Mode)>
 800ed40:	e7e2      	b.n	800ed08 <HttpDaemon::HandlePost(bool)+0x6c>
 800ed42:	2102      	movs	r1, #2
 800ed44:	e7fa      	b.n	800ed3c <HttpDaemon::HandlePost(bool)+0xa0>
 800ed46:	4b2c      	ldr	r3, [pc, #176]	; (800edf8 <HttpDaemon::HandlePost(bool)+0x15c>)
 800ed48:	2001      	movs	r0, #1
 800ed4a:	781d      	ldrb	r5, [r3, #0]
 800ed4c:	f7ff fdbe 	bl	800e8cc <PropertiesConfig::EnableJSON(bool)>
 800ed50:	4b2a      	ldr	r3, [pc, #168]	; (800edfc <HttpDaemon::HandlePost(bool)+0x160>)
 800ed52:	f8b4 25c4 	ldrh.w	r2, [r4, #1476]	; 0x5c4
 800ed56:	6818      	ldr	r0, [r3, #0]
 800ed58:	68a1      	ldr	r1, [r4, #8]
 800ed5a:	f005 0501 	and.w	r5, r5, #1
 800ed5e:	f7ff fa0f 	bl	800e180 <RemoteConfig::HandleSet(void*, unsigned int)>
 800ed62:	4628      	mov	r0, r5
 800ed64:	f7ff fdb2 	bl	800e8cc <PropertiesConfig::EnableJSON(bool)>
 800ed68:	e7ce      	b.n	800ed08 <HttpDaemon::HandlePost(bool)+0x6c>
 800ed6a:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800ed6e:	b002      	add	sp, #8
 800ed70:	bd70      	pop	{r4, r5, r6, pc}
 800ed72:	f8b4 35c6 	ldrh.w	r3, [r4, #1478]	; 0x5c6
 800ed76:	6962      	ldr	r2, [r4, #20]
 800ed78:	429a      	cmp	r2, r3
 800ed7a:	dbd0      	blt.n	800ed1e <HttpDaemon::HandlePost(bool)+0x82>
 800ed7c:	f8b4 35c4 	ldrh.w	r3, [r4, #1476]	; 0x5c4
 800ed80:	2b00      	cmp	r3, #0
 800ed82:	d0cc      	beq.n	800ed1e <HttpDaemon::HandlePost(bool)+0x82>
 800ed84:	f894 3021 	ldrb.w	r3, [r4, #33]	; 0x21
 800ed88:	2b00      	cmp	r3, #0
 800ed8a:	d0dc      	beq.n	800ed46 <HttpDaemon::HandlePost(bool)+0xaa>
 800ed8c:	2201      	movs	r2, #1
 800ed8e:	f8b4 15c4 	ldrh.w	r1, [r4, #1476]	; 0x5c4
 800ed92:	68a0      	ldr	r0, [r4, #8]
 800ed94:	f003 fc4c 	bl	8012630 <properties::convert_json_file(char*, unsigned short, bool)>
 800ed98:	2800      	cmp	r0, #0
 800ed9a:	dde6      	ble.n	800ed6a <HttpDaemon::HandlePost(bool)+0xce>
 800ed9c:	4918      	ldr	r1, [pc, #96]	; (800ee00 <HttpDaemon::HandlePost(bool)+0x164>)
 800ed9e:	68a0      	ldr	r0, [r4, #8]
 800eda0:	f10d 0207 	add.w	r2, sp, #7
 800eda4:	f003 fed2 	bl	8012b4c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800eda8:	2800      	cmp	r0, #0
 800edaa:	d195      	bne.n	800ecd8 <HttpDaemon::HandlePost(bool)+0x3c>
 800edac:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800edb0:	2b00      	cmp	r3, #0
 800edb2:	d0a9      	beq.n	800ed08 <HttpDaemon::HandlePost(bool)+0x6c>
 800edb4:	4b11      	ldr	r3, [pc, #68]	; (800edfc <HttpDaemon::HandlePost(bool)+0x160>)
 800edb6:	681b      	ldr	r3, [r3, #0]
 800edb8:	f893 35d6 	ldrb.w	r3, [r3, #1494]	; 0x5d6
 800edbc:	2b00      	cmp	r3, #0
 800edbe:	d0d4      	beq.n	800ed6a <HttpDaemon::HandlePost(bool)+0xce>
 800edc0:	4b10      	ldr	r3, [pc, #64]	; (800ee04 <HttpDaemon::HandlePost(bool)+0x168>)
 800edc2:	6818      	ldr	r0, [r3, #0]
 800edc4:	f004 faf8 	bl	80133b8 <Hardware::Reboot()>
 800edc8:	68c3      	ldr	r3, [r0, #12]
 800edca:	6083      	str	r3, [r0, #8]
 800edcc:	6943      	ldr	r3, [r0, #20]
 800edce:	f8a0 35c4 	strh.w	r3, [r0, #1476]	; 0x5c4
 800edd2:	e7d7      	b.n	800ed84 <HttpDaemon::HandlePost(bool)+0xe8>
 800edd4:	080166a8 	stmdaeq	r1, {r3, r5, r7, r9, sl, sp, lr}
 800edd8:	08016644 	stmdaeq	r1, {r2, r6, r9, sl, sp, lr}
 800eddc:	08016696 	stmdaeq	r1, {r1, r2, r4, r7, r9, sl, sp, lr}
 800ede0:	2001cd48 	andcs	ip, r1, r8, asr #26
 800ede4:	2001ce4c 	andcs	ip, r1, ip, asr #28
 800ede8:	0801686c 	stmdaeq	r1, {r2, r3, r5, r6, fp, sp, lr}
 800edec:	080166c5 	stmdaeq	r1, {r0, r2, r6, r7, r9, sl, sp, lr}
 800edf0:	080166bc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r9, sl, sp, lr}
 800edf4:	2001ce34 	andcs	ip, r1, r4, lsr lr
 800edf8:	2001cd44 	andcs	ip, r1, r4, asr #26
 800edfc:	20013df0 	strdcs	r3, [r1], -r0
 800ee00:	080166b5 	stmdaeq	r1, {r0, r2, r4, r5, r7, r9, sl, sp, lr}
 800ee04:	2001ce38 	andcs	ip, r1, r8, lsr lr

0800ee08 <HttpDaemon::Run()>:
 800ee08:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ee0a:	4e4a      	ldr	r6, [pc, #296]	; (800ef34 <HttpDaemon::Run()+0x12c>)
 800ee0c:	4604      	mov	r4, r0
 800ee0e:	6901      	ldr	r1, [r0, #16]
 800ee10:	f100 020c 	add.w	r2, r0, #12
 800ee14:	b085      	sub	sp, #20
 800ee16:	6830      	ldr	r0, [r6, #0]
 800ee18:	f002 f9db 	bl	80111d2 <Network::TcpRead(int, unsigned char const**)>
 800ee1c:	6160      	str	r0, [r4, #20]
 800ee1e:	2800      	cmp	r0, #0
 800ee20:	d061      	beq.n	800eee6 <HttpDaemon::Run()+0xde>
 800ee22:	69a3      	ldr	r3, [r4, #24]
 800ee24:	f5b3 7f02 	cmp.w	r3, #520	; 0x208
 800ee28:	d15f      	bne.n	800eeea <HttpDaemon::Run()+0xe2>
 800ee2a:	4620      	mov	r0, r4
 800ee2c:	f7ff fe0e 	bl	800ea4c <HttpDaemon::ParseRequest()>
 800ee30:	28c8      	cmp	r0, #200	; 0xc8
 800ee32:	61a0      	str	r0, [r4, #24]
 800ee34:	d106      	bne.n	800ee44 <HttpDaemon::Run()+0x3c>
 800ee36:	69e3      	ldr	r3, [r4, #28]
 800ee38:	2b00      	cmp	r3, #0
 800ee3a:	d147      	bne.n	800eecc <HttpDaemon::Run()+0xc4>
 800ee3c:	4620      	mov	r0, r4
 800ee3e:	f7ff fe7f 	bl	800eb40 <HttpDaemon::HandleGet()>
 800ee42:	61a0      	str	r0, [r4, #24]
 800ee44:	69a3      	ldr	r3, [r4, #24]
 800ee46:	f104 0722 	add.w	r7, r4, #34	; 0x22
 800ee4a:	2bc8      	cmp	r3, #200	; 0xc8
 800ee4c:	d06f      	beq.n	800ef2e <HttpDaemon::Run()+0x126>
 800ee4e:	f5b3 7fcf 	cmp.w	r3, #414	; 0x19e
 800ee52:	d062      	beq.n	800ef1a <HttpDaemon::Run()+0x112>
 800ee54:	dc52      	bgt.n	800eefc <HttpDaemon::Run()+0xf4>
 800ee56:	f5b3 7fca 	cmp.w	r3, #404	; 0x194
 800ee5a:	d060      	beq.n	800ef1e <HttpDaemon::Run()+0x116>
 800ee5c:	f240 129d 	movw	r2, #413	; 0x19d
 800ee60:	4293      	cmp	r3, r2
 800ee62:	d05e      	beq.n	800ef22 <HttpDaemon::Run()+0x11a>
 800ee64:	4d34      	ldr	r5, [pc, #208]	; (800ef38 <HttpDaemon::Run()+0x130>)
 800ee66:	4a35      	ldr	r2, [pc, #212]	; (800ef3c <HttpDaemon::Run()+0x134>)
 800ee68:	f5b3 7fc8 	cmp.w	r3, #400	; 0x190
 800ee6c:	bf18      	it	ne
 800ee6e:	4615      	movne	r5, r2
 800ee70:	4a33      	ldr	r2, [pc, #204]	; (800ef40 <HttpDaemon::Run()+0x138>)
 800ee72:	f240 519f 	movw	r1, #1439	; 0x59f
 800ee76:	6022      	str	r2, [r4, #0]
 800ee78:	4638      	mov	r0, r7
 800ee7a:	e9cd 5500 	strd	r5, r5, [sp]
 800ee7e:	4a31      	ldr	r2, [pc, #196]	; (800ef44 <HttpDaemon::Run()+0x13c>)
 800ee80:	f7fa fba6 	bl	80095d0 <snprintf>
 800ee84:	f8a4 05c2 	strh.w	r0, [r4, #1474]	; 0x5c2
 800ee88:	f8b4 35c2 	ldrh.w	r3, [r4, #1474]	; 0x5c2
 800ee8c:	f240 519f 	movw	r1, #1439	; 0x59f
 800ee90:	9303      	str	r3, [sp, #12]
 800ee92:	6823      	ldr	r3, [r4, #0]
 800ee94:	4a2c      	ldr	r2, [pc, #176]	; (800ef48 <HttpDaemon::Run()+0x140>)
 800ee96:	9302      	str	r3, [sp, #8]
 800ee98:	4b2c      	ldr	r3, [pc, #176]	; (800ef4c <HttpDaemon::Run()+0x144>)
 800ee9a:	68e0      	ldr	r0, [r4, #12]
 800ee9c:	e9cd 5300 	strd	r5, r3, [sp]
 800eea0:	69a3      	ldr	r3, [r4, #24]
 800eea2:	f7fa fb95 	bl	80095d0 <snprintf>
 800eea6:	e9d4 2103 	ldrd	r2, r1, [r4, #12]
 800eeaa:	b283      	uxth	r3, r0
 800eeac:	6830      	ldr	r0, [r6, #0]
 800eeae:	f002 f994 	bl	80111da <Network::TcpWrite(int, unsigned char const*, unsigned short)>
 800eeb2:	463a      	mov	r2, r7
 800eeb4:	f8b4 35c2 	ldrh.w	r3, [r4, #1474]	; 0x5c2
 800eeb8:	6921      	ldr	r1, [r4, #16]
 800eeba:	6830      	ldr	r0, [r6, #0]
 800eebc:	f002 f98d 	bl	80111da <Network::TcpWrite(int, unsigned char const*, unsigned short)>
 800eec0:	f44f 7202 	mov.w	r2, #520	; 0x208
 800eec4:	2302      	movs	r3, #2
 800eec6:	e9c4 2306 	strd	r2, r3, [r4, #24]
 800eeca:	e00c      	b.n	800eee6 <HttpDaemon::Run()+0xde>
 800eecc:	2b01      	cmp	r3, #1
 800eece:	d1b9      	bne.n	800ee44 <HttpDaemon::Run()+0x3c>
 800eed0:	2100      	movs	r1, #0
 800eed2:	4620      	mov	r0, r4
 800eed4:	f7ff fee2 	bl	800ec9c <HttpDaemon::HandlePost(bool)>
 800eed8:	28c8      	cmp	r0, #200	; 0xc8
 800eeda:	61a0      	str	r0, [r4, #24]
 800eedc:	d1b2      	bne.n	800ee44 <HttpDaemon::Run()+0x3c>
 800eede:	f8b4 35c4 	ldrh.w	r3, [r4, #1476]	; 0x5c4
 800eee2:	2b00      	cmp	r3, #0
 800eee4:	d1ae      	bne.n	800ee44 <HttpDaemon::Run()+0x3c>
 800eee6:	b005      	add	sp, #20
 800eee8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800eeea:	2bc8      	cmp	r3, #200	; 0xc8
 800eeec:	d1aa      	bne.n	800ee44 <HttpDaemon::Run()+0x3c>
 800eeee:	69e1      	ldr	r1, [r4, #28]
 800eef0:	2901      	cmp	r1, #1
 800eef2:	d1a7      	bne.n	800ee44 <HttpDaemon::Run()+0x3c>
 800eef4:	4620      	mov	r0, r4
 800eef6:	f7ff fed1 	bl	800ec9c <HttpDaemon::HandlePost(bool)>
 800eefa:	e7a2      	b.n	800ee42 <HttpDaemon::Run()+0x3a>
 800eefc:	f240 12f5 	movw	r2, #501	; 0x1f5
 800ef00:	4293      	cmp	r3, r2
 800ef02:	d010      	beq.n	800ef26 <HttpDaemon::Run()+0x11e>
 800ef04:	f240 12f9 	movw	r2, #505	; 0x1f9
 800ef08:	4293      	cmp	r3, r2
 800ef0a:	d00e      	beq.n	800ef2a <HttpDaemon::Run()+0x122>
 800ef0c:	4d10      	ldr	r5, [pc, #64]	; (800ef50 <HttpDaemon::Run()+0x148>)
 800ef0e:	4a0b      	ldr	r2, [pc, #44]	; (800ef3c <HttpDaemon::Run()+0x134>)
 800ef10:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800ef14:	bf18      	it	ne
 800ef16:	4615      	movne	r5, r2
 800ef18:	e7aa      	b.n	800ee70 <HttpDaemon::Run()+0x68>
 800ef1a:	4d0e      	ldr	r5, [pc, #56]	; (800ef54 <HttpDaemon::Run()+0x14c>)
 800ef1c:	e7a8      	b.n	800ee70 <HttpDaemon::Run()+0x68>
 800ef1e:	4d0e      	ldr	r5, [pc, #56]	; (800ef58 <HttpDaemon::Run()+0x150>)
 800ef20:	e7a6      	b.n	800ee70 <HttpDaemon::Run()+0x68>
 800ef22:	4d0e      	ldr	r5, [pc, #56]	; (800ef5c <HttpDaemon::Run()+0x154>)
 800ef24:	e7a4      	b.n	800ee70 <HttpDaemon::Run()+0x68>
 800ef26:	4d0e      	ldr	r5, [pc, #56]	; (800ef60 <HttpDaemon::Run()+0x158>)
 800ef28:	e7a2      	b.n	800ee70 <HttpDaemon::Run()+0x68>
 800ef2a:	4d0e      	ldr	r5, [pc, #56]	; (800ef64 <HttpDaemon::Run()+0x15c>)
 800ef2c:	e7a0      	b.n	800ee70 <HttpDaemon::Run()+0x68>
 800ef2e:	4d0e      	ldr	r5, [pc, #56]	; (800ef68 <HttpDaemon::Run()+0x160>)
 800ef30:	e7aa      	b.n	800ee88 <HttpDaemon::Run()+0x80>
 800ef32:	bf00      	nop
 800ef34:	2001c710 	andcs	ip, r1, r0, lsl r7
 800ef38:	08016721 	stmdaeq	r1, {r0, r5, r8, r9, sl, sp, lr}
 800ef3c:	080167a8 	stmdaeq	r1, {r3, r5, r7, r8, r9, sl, sp, lr}
 800ef40:	0801686c 	stmdaeq	r1, {r2, r3, r5, r6, fp, sp, lr}
 800ef44:	080167b9 	stmdaeq	r1, {r0, r3, r4, r5, r7, r8, r9, sl, sp, lr}
 800ef48:	08016814 	stmdaeq	r1, {r2, r4, fp, sp, lr}
 800ef4c:	08015946 	stmdaeq	r1, {r1, r2, r6, r8, fp, ip, lr}
 800ef50:	08016765 	stmdaeq	r1, {r0, r2, r5, r6, r8, r9, sl, sp, lr}
 800ef54:	08016750 	stmdaeq	r1, {r4, r6, r8, r9, sl, sp, lr}
 800ef58:	0801672d 	stmdaeq	r1, {r0, r2, r3, r5, r8, r9, sl, sp, lr}
 800ef5c:	08016737 	stmdaeq	r1, {r0, r1, r2, r4, r5, r8, r9, sl, sp, lr}
 800ef60:	0801677b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r8, r9, sl, sp, lr}
 800ef64:	08016792 	stmdaeq	r1, {r1, r4, r7, r8, r9, sl, sp, lr}
 800ef68:	080167b6 	stmdaeq	r1, {r1, r2, r4, r5, r7, r8, r9, sl, sp, lr}

0800ef6c <remoteconfig::json_get_list(char*, unsigned short)>:
 800ef6c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ef70:	4b14      	ldr	r3, [pc, #80]	; (800efc4 <remoteconfig::json_get_list(char*, unsigned short)+0x58>)
 800ef72:	f8df 8054 	ldr.w	r8, [pc, #84]	; 800efc8 <remoteconfig::json_get_list(char*, unsigned short)+0x5c>
 800ef76:	681b      	ldr	r3, [r3, #0]
 800ef78:	b088      	sub	sp, #32
 800ef7a:	4605      	mov	r5, r0
 800ef7c:	f8d8 0000 	ldr.w	r0, [r8]
 800ef80:	691c      	ldr	r4, [r3, #16]
 800ef82:	460e      	mov	r6, r1
 800ef84:	f7fe ffd6 	bl	800df34 <RemoteConfig::GetStringNode() const>
 800ef88:	4607      	mov	r7, r0
 800ef8a:	f8d8 0000 	ldr.w	r0, [r8]
 800ef8e:	f7fe ffdd 	bl	800df4c <RemoteConfig::GetStringOutput() const>
 800ef92:	4b0e      	ldr	r3, [pc, #56]	; (800efcc <remoteconfig::json_get_list(char*, unsigned short)+0x60>)
 800ef94:	4631      	mov	r1, r6
 800ef96:	7a1a      	ldrb	r2, [r3, #8]
 800ef98:	3309      	adds	r3, #9
 800ef9a:	9303      	str	r3, [sp, #12]
 800ef9c:	0e23      	lsrs	r3, r4, #24
 800ef9e:	9302      	str	r3, [sp, #8]
 800efa0:	f3c4 4307 	ubfx	r3, r4, #16, #8
 800efa4:	9301      	str	r3, [sp, #4]
 800efa6:	f3c4 2307 	ubfx	r3, r4, #8, #8
 800efaa:	e9cd 0205 	strd	r0, r2, [sp, #20]
 800efae:	9300      	str	r3, [sp, #0]
 800efb0:	4628      	mov	r0, r5
 800efb2:	4a07      	ldr	r2, [pc, #28]	; (800efd0 <remoteconfig::json_get_list(char*, unsigned short)+0x64>)
 800efb4:	9704      	str	r7, [sp, #16]
 800efb6:	b2e3      	uxtb	r3, r4
 800efb8:	f7fa fb0a 	bl	80095d0 <snprintf>
 800efbc:	b280      	uxth	r0, r0
 800efbe:	b008      	add	sp, #32
 800efc0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800efc4:	2001c710 	andcs	ip, r1, r0, lsl r7
 800efc8:	20013df0 	strdcs	r3, [r1], -r0
 800efcc:	20013dcc 	andcs	r3, r1, ip, asr #27
 800efd0:	08016946 	stmdaeq	r1, {r1, r2, r6, r8, fp, sp, lr}

0800efd4 <remoteconfig::json_get_version(char*, unsigned short)>:
 800efd4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800efd6:	2208      	movs	r2, #8
 800efd8:	4b09      	ldr	r3, [pc, #36]	; (800f000 <remoteconfig::json_get_version(char*, unsigned short)+0x2c>)
 800efda:	9204      	str	r2, [sp, #16]
 800efdc:	f1a3 020b 	sub.w	r2, r3, #11
 800efe0:	9203      	str	r2, [sp, #12]
 800efe2:	220b      	movs	r2, #11
 800efe4:	9202      	str	r2, [sp, #8]
 800efe6:	4a07      	ldr	r2, [pc, #28]	; (800f004 <remoteconfig::json_get_version(char*, unsigned short)+0x30>)
 800efe8:	9305      	str	r3, [sp, #20]
 800efea:	3b0e      	subs	r3, #14
 800efec:	9201      	str	r2, [sp, #4]
 800efee:	9300      	str	r3, [sp, #0]
 800eff0:	4a05      	ldr	r2, [pc, #20]	; (800f008 <remoteconfig::json_get_version(char*, unsigned short)+0x34>)
 800eff2:	2303      	movs	r3, #3
 800eff4:	f7fa faec 	bl	80095d0 <snprintf>
 800eff8:	b280      	uxth	r0, r0
 800effa:	b007      	add	sp, #28
 800effc:	f85d fb04 	ldr.w	pc, [sp], #4
 800f000:	2001cde6 	andcs	ip, r1, r6, ror #27
 800f004:	08015946 	stmdaeq	r1, {r1, r2, r6, r8, fp, ip, lr}
 800f008:	080169a5 	stmdaeq	r1, {r0, r2, r5, r7, r8, fp, sp, lr}

0800f00c <remoteconfig::json_get_uptime(char*, unsigned short)>:
 800f00c:	b508      	push	{r3, lr}
 800f00e:	4b05      	ldr	r3, [pc, #20]	; (800f024 <remoteconfig::json_get_uptime(char*, unsigned short)+0x18>)
 800f010:	681a      	ldr	r2, [r3, #0]
 800f012:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800f016:	fbb2 f3f3 	udiv	r3, r2, r3
 800f01a:	4a03      	ldr	r2, [pc, #12]	; (800f028 <remoteconfig::json_get_uptime(char*, unsigned short)+0x1c>)
 800f01c:	f7fa fad8 	bl	80095d0 <snprintf>
 800f020:	b280      	uxth	r0, r0
 800f022:	bd08      	pop	{r3, pc}
 800f024:	2001ce4c 	andcs	ip, r1, ip, asr #28
 800f028:	080169eb 	stmdaeq	r1, {r0, r1, r3, r5, r6, r7, r8, fp, sp, lr}

0800f02c <remoteconfig::json_get_display(char*, unsigned short)>:
 800f02c:	b508      	push	{r3, lr}
 800f02e:	4b05      	ldr	r3, [pc, #20]	; (800f044 <remoteconfig::json_get_display(char*, unsigned short)+0x18>)
 800f030:	4a05      	ldr	r2, [pc, #20]	; (800f048 <remoteconfig::json_get_display(char*, unsigned short)+0x1c>)
 800f032:	681b      	ldr	r3, [r3, #0]
 800f034:	7c1b      	ldrb	r3, [r3, #16]
 800f036:	f083 0301 	eor.w	r3, r3, #1
 800f03a:	f7fa fac9 	bl	80095d0 <snprintf>
 800f03e:	b280      	uxth	r0, r0
 800f040:	bd08      	pop	{r3, pc}
 800f042:	bf00      	nop
 800f044:	2001cd48 	andcs	ip, r1, r8, asr #26
 800f048:	080169fa 	stmdaeq	r1, {r1, r3, r4, r5, r6, r7, r8, fp, sp, lr}

0800f04c <remoteconfig::json_get_directory(char*, unsigned short)>:
 800f04c:	b508      	push	{r3, lr}
 800f04e:	4a02      	ldr	r2, [pc, #8]	; (800f058 <remoteconfig::json_get_directory(char*, unsigned short)+0xc>)
 800f050:	f7fa fabe 	bl	80095d0 <snprintf>
 800f054:	b280      	uxth	r0, r0
 800f056:	bd08      	pop	{r3, pc}
 800f058:	08016a09 	stmdaeq	r1, {r0, r3, r9, fp, sp, lr}

0800f05c <get_file_content(char const*, char*)>:
 800f05c:	2300      	movs	r3, #0
 800f05e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f060:	4a18      	ldr	r2, [pc, #96]	; (800f0c4 <get_file_content(char const*, char*)+0x68>)
 800f062:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 800f066:	1e47      	subs	r7, r0, #1
 800f068:	1e6e      	subs	r6, r5, #1
 800f06a:	f817 cf01 	ldrb.w	ip, [r7, #1]!
 800f06e:	f816 4f01 	ldrb.w	r4, [r6, #1]!
 800f072:	4564      	cmp	r4, ip
 800f074:	d00b      	beq.n	800f08e <get_file_content(char const*, char*)+0x32>
 800f076:	3301      	adds	r3, #1
 800f078:	2b03      	cmp	r3, #3
 800f07a:	d1f2      	bne.n	800f062 <get_file_content(char const*, char*)+0x6>
 800f07c:	2333      	movs	r3, #51	; 0x33
 800f07e:	4a12      	ldr	r2, [pc, #72]	; (800f0c8 <get_file_content(char const*, char*)+0x6c>)
 800f080:	4912      	ldr	r1, [pc, #72]	; (800f0cc <get_file_content(char const*, char*)+0x70>)
 800f082:	4813      	ldr	r0, [pc, #76]	; (800f0d0 <get_file_content(char const*, char*)+0x74>)
 800f084:	f7fa fa7c 	bl	8009580 <printf>
 800f088:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 800f08c:	e016      	b.n	800f0bc <get_file_content(char const*, char*)+0x60>
 800f08e:	2c00      	cmp	r4, #0
 800f090:	d1eb      	bne.n	800f06a <get_file_content(char const*, char*)+0xe>
 800f092:	460c      	mov	r4, r1
 800f094:	eb02 02c3 	add.w	r2, r2, r3, lsl #3
 800f098:	6853      	ldr	r3, [r2, #4]
 800f09a:	3b01      	subs	r3, #1
 800f09c:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800f0a0:	f804 2b01 	strb.w	r2, [r4], #1
 800f0a4:	2a00      	cmp	r2, #0
 800f0a6:	d1f9      	bne.n	800f09c <get_file_content(char const*, char*)+0x40>
 800f0a8:	1a64      	subs	r4, r4, r1
 800f0aa:	3c01      	subs	r4, #1
 800f0ac:	232e      	movs	r3, #46	; 0x2e
 800f0ae:	e9cd 5400 	strd	r5, r4, [sp]
 800f0b2:	4a06      	ldr	r2, [pc, #24]	; (800f0cc <get_file_content(char const*, char*)+0x70>)
 800f0b4:	4904      	ldr	r1, [pc, #16]	; (800f0c8 <get_file_content(char const*, char*)+0x6c>)
 800f0b6:	4807      	ldr	r0, [pc, #28]	; (800f0d4 <get_file_content(char const*, char*)+0x78>)
 800f0b8:	f7fa fa62 	bl	8009580 <printf>
 800f0bc:	4620      	mov	r0, r4
 800f0be:	b003      	add	sp, #12
 800f0c0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f0c2:	bf00      	nop
 800f0c4:	08016da4 	stmdaeq	r1, {r2, r5, r7, r8, sl, fp, sp, lr}
 800f0c8:	08016abf 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r7, r9, fp, sp, lr}
 800f0cc:	08016aa0 	stmdaeq	r1, {r5, r7, r9, fp, sp, lr}
 800f0d0:	08016aec 	stmdaeq	r1, {r2, r3, r5, r6, r7, r9, fp, sp, lr}
 800f0d4:	08016ad0 	stmdaeq	r1, {r4, r6, r7, r9, fp, sp, lr}

0800f0d8 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>:
 800f0d8:	2300      	movs	r3, #0
 800f0da:	2020      	movs	r0, #32
 800f0dc:	b510      	push	{r4, lr}
 800f0de:	4a04      	ldr	r2, [pc, #16]	; (800f0f0 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x18>)
 800f0e0:	428b      	cmp	r3, r1
 800f0e2:	d100      	bne.n	800f0e6 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0xe>
 800f0e4:	bd10      	pop	{r4, pc}
 800f0e6:	f852 4b04 	ldr.w	r4, [r2], #4
 800f0ea:	3301      	adds	r3, #1
 800f0ec:	4420      	add	r0, r4
 800f0ee:	e7f7      	b.n	800f0e0 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x8>
 800f0f0:	080172e8 	stmdaeq	r1, {r3, r5, r6, r7, r9, ip, sp, lr}

0800f0f4 <SpiFlashStore::Init()>:
 800f0f4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f0f8:	f8df 8114 	ldr.w	r8, [pc, #276]	; 800f210 <SpiFlashStore::Init()+0x11c>
 800f0fc:	4607      	mov	r7, r0
 800f0fe:	b085      	sub	sp, #20
 800f100:	f8d8 0000 	ldr.w	r0, [r8]
 800f104:	f000 fc1a 	bl	800f93c <FlashRom::GetSectorSize() const>
 800f108:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
 800f10c:	4605      	mov	r5, r0
 800f10e:	d17d      	bne.n	800f20c <SpiFlashStore::Init()+0x118>
 800f110:	f8d8 0000 	ldr.w	r0, [r8]
 800f114:	f000 fc0a 	bl	800f92c <FlashRom::GetSize() const>
 800f118:	4b3e      	ldr	r3, [pc, #248]	; (800f214 <SpiFlashStore::Init()+0x120>)
 800f11a:	f5a0 5180 	sub.w	r1, r0, #4096	; 0x1000
 800f11e:	f3c1 060b 	ubfx	r6, r1, #0, #12
 800f122:	6019      	str	r1, [r3, #0]
 800f124:	2e00      	cmp	r6, #0
 800f126:	d171      	bne.n	800f20c <SpiFlashStore::Init()+0x118>
 800f128:	4c3b      	ldr	r4, [pc, #236]	; (800f218 <SpiFlashStore::Init()+0x124>)
 800f12a:	ab03      	add	r3, sp, #12
 800f12c:	9300      	str	r3, [sp, #0]
 800f12e:	462a      	mov	r2, r5
 800f130:	4623      	mov	r3, r4
 800f132:	f8d8 0000 	ldr.w	r0, [r8]
 800f136:	f000 fc04 	bl	800f942 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)>
 800f13a:	7823      	ldrb	r3, [r4, #0]
 800f13c:	2b41      	cmp	r3, #65	; 0x41
 800f13e:	bf1c      	itt	ne
 800f140:	2341      	movne	r3, #65	; 0x41
 800f142:	7023      	strbne	r3, [r4, #0]
 800f144:	7863      	ldrb	r3, [r4, #1]
 800f146:	bf14      	ite	ne
 800f148:	4635      	movne	r5, r6
 800f14a:	2501      	moveq	r5, #1
 800f14c:	2b76      	cmp	r3, #118	; 0x76
 800f14e:	bf1c      	itt	ne
 800f150:	2376      	movne	r3, #118	; 0x76
 800f152:	7063      	strbne	r3, [r4, #1]
 800f154:	78a3      	ldrb	r3, [r4, #2]
 800f156:	bf18      	it	ne
 800f158:	2500      	movne	r5, #0
 800f15a:	2b56      	cmp	r3, #86	; 0x56
 800f15c:	bf1c      	itt	ne
 800f15e:	2356      	movne	r3, #86	; 0x56
 800f160:	70a3      	strbne	r3, [r4, #2]
 800f162:	78e3      	ldrb	r3, [r4, #3]
 800f164:	bf18      	it	ne
 800f166:	2500      	movne	r5, #0
 800f168:	2b10      	cmp	r3, #16
 800f16a:	d022      	beq.n	800f1b2 <SpiFlashStore::Init()+0xbe>
 800f16c:	2310      	movs	r3, #16
 800f16e:	70e3      	strb	r3, [r4, #3]
 800f170:	2201      	movs	r2, #1
 800f172:	2500      	movs	r5, #0
 800f174:	f04f 09ff 	mov.w	r9, #255	; 0xff
 800f178:	4b28      	ldr	r3, [pc, #160]	; (800f21c <SpiFlashStore::Init()+0x128>)
 800f17a:	f8df 80a4 	ldr.w	r8, [pc, #164]	; 800f220 <SpiFlashStore::Init()+0x12c>
 800f17e:	701a      	strb	r2, [r3, #0]
 800f180:	4631      	mov	r1, r6
 800f182:	4638      	mov	r0, r7
 800f184:	f7ff ffa8 	bl	800f0d8 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800f188:	1823      	adds	r3, r4, r0
 800f18a:	5425      	strb	r5, [r4, r0]
 800f18c:	705d      	strb	r5, [r3, #1]
 800f18e:	709d      	strb	r5, [r3, #2]
 800f190:	70dd      	strb	r5, [r3, #3]
 800f192:	f858 3b04 	ldr.w	r3, [r8], #4
 800f196:	1d02      	adds	r2, r0, #4
 800f198:	4403      	add	r3, r0
 800f19a:	429a      	cmp	r2, r3
 800f19c:	d332      	bcc.n	800f204 <SpiFlashStore::Init()+0x110>
 800f19e:	3601      	adds	r6, #1
 800f1a0:	2e1c      	cmp	r6, #28
 800f1a2:	d1ed      	bne.n	800f180 <SpiFlashStore::Init()+0x8c>
 800f1a4:	2501      	movs	r5, #1
 800f1a6:	4b1f      	ldr	r3, [pc, #124]	; (800f224 <SpiFlashStore::Init()+0x130>)
 800f1a8:	601d      	str	r5, [r3, #0]
 800f1aa:	4628      	mov	r0, r5
 800f1ac:	b005      	add	sp, #20
 800f1ae:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f1b2:	2d00      	cmp	r5, #0
 800f1b4:	d0dc      	beq.n	800f170 <SpiFlashStore::Init()+0x7c>
 800f1b6:	f04f 0900 	mov.w	r9, #0
 800f1ba:	46c8      	mov	r8, r9
 800f1bc:	4631      	mov	r1, r6
 800f1be:	4638      	mov	r0, r7
 800f1c0:	f7ff ff8a 	bl	800f0d8 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800f1c4:	5c23      	ldrb	r3, [r4, r0]
 800f1c6:	2bff      	cmp	r3, #255	; 0xff
 800f1c8:	d112      	bne.n	800f1f0 <SpiFlashStore::Init()+0xfc>
 800f1ca:	1823      	adds	r3, r4, r0
 800f1cc:	785a      	ldrb	r2, [r3, #1]
 800f1ce:	2aff      	cmp	r2, #255	; 0xff
 800f1d0:	d10e      	bne.n	800f1f0 <SpiFlashStore::Init()+0xfc>
 800f1d2:	789a      	ldrb	r2, [r3, #2]
 800f1d4:	2aff      	cmp	r2, #255	; 0xff
 800f1d6:	d10b      	bne.n	800f1f0 <SpiFlashStore::Init()+0xfc>
 800f1d8:	78da      	ldrb	r2, [r3, #3]
 800f1da:	2aff      	cmp	r2, #255	; 0xff
 800f1dc:	d108      	bne.n	800f1f0 <SpiFlashStore::Init()+0xfc>
 800f1de:	46a9      	mov	r9, r5
 800f1e0:	f804 8000 	strb.w	r8, [r4, r0]
 800f1e4:	f883 8001 	strb.w	r8, [r3, #1]
 800f1e8:	f883 8002 	strb.w	r8, [r3, #2]
 800f1ec:	f883 8003 	strb.w	r8, [r3, #3]
 800f1f0:	3601      	adds	r6, #1
 800f1f2:	2e1c      	cmp	r6, #28
 800f1f4:	d1e2      	bne.n	800f1bc <SpiFlashStore::Init()+0xc8>
 800f1f6:	f1b9 0f00 	cmp.w	r9, #0
 800f1fa:	d0d6      	beq.n	800f1aa <SpiFlashStore::Init()+0xb6>
 800f1fc:	2201      	movs	r2, #1
 800f1fe:	4b09      	ldr	r3, [pc, #36]	; (800f224 <SpiFlashStore::Init()+0x130>)
 800f200:	601a      	str	r2, [r3, #0]
 800f202:	e7d2      	b.n	800f1aa <SpiFlashStore::Init()+0xb6>
 800f204:	f804 9002 	strb.w	r9, [r4, r2]
 800f208:	3201      	adds	r2, #1
 800f20a:	e7c6      	b.n	800f19a <SpiFlashStore::Init()+0xa6>
 800f20c:	2500      	movs	r5, #0
 800f20e:	e7cc      	b.n	800f1aa <SpiFlashStore::Init()+0xb6>
 800f210:	20014e28 	andcs	r4, r1, r8, lsr #28
 800f214:	20014df8 	strdcs	r4, [r1], -r8
 800f218:	20013df8 	strdcs	r3, [r1], -r8
 800f21c:	20014e0c 	andcs	r4, r1, ip, lsl #28
 800f220:	080172e8 	stmdaeq	r1, {r3, r5, r6, r7, r9, ip, sp, lr}
 800f224:	20014e04 	andcs	r4, r1, r4, lsl #28

0800f228 <SpiFlashStore::SpiFlashStore()>:
 800f228:	b538      	push	{r3, r4, r5, lr}
 800f22a:	4b0d      	ldr	r3, [pc, #52]	; (800f260 <SpiFlashStore::SpiFlashStore()+0x38>)
 800f22c:	4604      	mov	r4, r0
 800f22e:	6018      	str	r0, [r3, #0]
 800f230:	4b0c      	ldr	r3, [pc, #48]	; (800f264 <SpiFlashStore::SpiFlashStore()+0x3c>)
 800f232:	4d0d      	ldr	r5, [pc, #52]	; (800f268 <SpiFlashStore::SpiFlashStore()+0x40>)
 800f234:	681b      	ldr	r3, [r3, #0]
 800f236:	781b      	ldrb	r3, [r3, #0]
 800f238:	b113      	cbz	r3, 800f240 <SpiFlashStore::SpiFlashStore()+0x18>
 800f23a:	f7ff ff5b 	bl	800f0f4 <SpiFlashStore::Init()>
 800f23e:	7028      	strb	r0, [r5, #0]
 800f240:	782b      	ldrb	r3, [r5, #0]
 800f242:	b153      	cbz	r3, 800f25a <SpiFlashStore::SpiFlashStore()+0x32>
 800f244:	2320      	movs	r3, #32
 800f246:	2200      	movs	r2, #0
 800f248:	4908      	ldr	r1, [pc, #32]	; (800f26c <SpiFlashStore::SpiFlashStore()+0x44>)
 800f24a:	f851 0b04 	ldr.w	r0, [r1], #4
 800f24e:	3201      	adds	r2, #1
 800f250:	2a1c      	cmp	r2, #28
 800f252:	4403      	add	r3, r0
 800f254:	d1f9      	bne.n	800f24a <SpiFlashStore::SpiFlashStore()+0x22>
 800f256:	4a06      	ldr	r2, [pc, #24]	; (800f270 <SpiFlashStore::SpiFlashStore()+0x48>)
 800f258:	6013      	str	r3, [r2, #0]
 800f25a:	4620      	mov	r0, r4
 800f25c:	bd38      	pop	{r3, r4, r5, pc}
 800f25e:	bf00      	nop
 800f260:	20014e08 	andcs	r4, r1, r8, lsl #28
 800f264:	20014e28 	andcs	r4, r1, r8, lsr #28
 800f268:	20014dfc 	strdcs	r4, [r1], -ip
 800f26c:	080172e8 	stmdaeq	r1, {r3, r5, r6, r7, r9, ip, sp, lr}
 800f270:	20014e00 	andcs	r4, r1, r0, lsl #28

0800f274 <SpiFlashStore::ResetSetList(spiflashstore::Store)>:
 800f274:	b508      	push	{r3, lr}
 800f276:	f7ff ff2f 	bl	800f0d8 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800f27a:	2300      	movs	r3, #0
 800f27c:	4904      	ldr	r1, [pc, #16]	; (800f290 <SpiFlashStore::ResetSetList(spiflashstore::Store)+0x1c>)
 800f27e:	1842      	adds	r2, r0, r1
 800f280:	540b      	strb	r3, [r1, r0]
 800f282:	7053      	strb	r3, [r2, #1]
 800f284:	7093      	strb	r3, [r2, #2]
 800f286:	70d3      	strb	r3, [r2, #3]
 800f288:	2201      	movs	r2, #1
 800f28a:	4b02      	ldr	r3, [pc, #8]	; (800f294 <SpiFlashStore::ResetSetList(spiflashstore::Store)+0x20>)
 800f28c:	601a      	str	r2, [r3, #0]
 800f28e:	bd08      	pop	{r3, pc}
 800f290:	20013df8 	strdcs	r3, [r1], -r8
 800f294:	20014e04 	andcs	r4, r1, r4, lsl #28

0800f298 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>:
 800f298:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f29c:	461c      	mov	r4, r3
 800f29e:	4b19      	ldr	r3, [pc, #100]	; (800f304 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x6c>)
 800f2a0:	4615      	mov	r5, r2
 800f2a2:	781f      	ldrb	r7, [r3, #0]
 800f2a4:	9e07      	ldr	r6, [sp, #28]
 800f2a6:	b307      	cbz	r7, 800f2ea <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800f2a8:	f7ff ff16 	bl	800f0d8 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800f2ac:	f04f 0c00 	mov.w	ip, #0
 800f2b0:	4a15      	ldr	r2, [pc, #84]	; (800f308 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x70>)
 800f2b2:	1941      	adds	r1, r0, r5
 800f2b4:	1e63      	subs	r3, r4, #1
 800f2b6:	9c06      	ldr	r4, [sp, #24]
 800f2b8:	4411      	add	r1, r2
 800f2ba:	440c      	add	r4, r1
 800f2bc:	42a1      	cmp	r1, r4
 800f2be:	d116      	bne.n	800f2ee <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x56>
 800f2c0:	f1bc 0f00 	cmp.w	ip, #0
 800f2c4:	d011      	beq.n	800f2ea <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800f2c6:	4b11      	ldr	r3, [pc, #68]	; (800f30c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x74>)
 800f2c8:	6819      	ldr	r1, [r3, #0]
 800f2ca:	b109      	cbz	r1, 800f2d0 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x38>
 800f2cc:	2906      	cmp	r1, #6
 800f2ce:	d101      	bne.n	800f2d4 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x3c>
 800f2d0:	2101      	movs	r1, #1
 800f2d2:	6019      	str	r1, [r3, #0]
 800f2d4:	4b0e      	ldr	r3, [pc, #56]	; (800f310 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x78>)
 800f2d6:	6819      	ldr	r1, [r3, #0]
 800f2d8:	4b0e      	ldr	r3, [pc, #56]	; (800f314 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x7c>)
 800f2da:	6019      	str	r1, [r3, #0]
 800f2dc:	b12d      	cbz	r5, 800f2ea <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800f2de:	b126      	cbz	r6, 800f2ea <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800f2e0:	9b08      	ldr	r3, [sp, #32]
 800f2e2:	4418      	add	r0, r3
 800f2e4:	5813      	ldr	r3, [r2, r0]
 800f2e6:	4333      	orrs	r3, r6
 800f2e8:	5013      	str	r3, [r2, r0]
 800f2ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f2ee:	f891 8000 	ldrb.w	r8, [r1]
 800f2f2:	f813 ef01 	ldrb.w	lr, [r3, #1]!
 800f2f6:	3101      	adds	r1, #1
 800f2f8:	45f0      	cmp	r8, lr
 800f2fa:	bf1c      	itt	ne
 800f2fc:	f801 ec01 	strbne.w	lr, [r1, #-1]
 800f300:	46bc      	movne	ip, r7
 800f302:	e7db      	b.n	800f2bc <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x24>
 800f304:	20014dfc 	strdcs	r4, [r1], -ip
 800f308:	20013df8 	strdcs	r3, [r1], -r8
 800f30c:	20014e04 	andcs	r4, r1, r4, lsl #28
 800f310:	2001ce4c 	andcs	ip, r1, ip, asr #28
 800f314:	20013df4 	strdcs	r3, [r1], -r4

0800f318 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>:
 800f318:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800f31c:	461d      	mov	r5, r3
 800f31e:	4b11      	ldr	r3, [pc, #68]	; (800f364 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x4c>)
 800f320:	4607      	mov	r7, r0
 800f322:	781b      	ldrb	r3, [r3, #0]
 800f324:	4614      	mov	r4, r2
 800f326:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 800f32a:	b1c3      	cbz	r3, 800f35e <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x46>
 800f32c:	f7ff fed4 	bl	800f0d8 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800f330:	4a0d      	ldr	r2, [pc, #52]	; (800f368 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x50>)
 800f332:	eb00 0608 	add.w	r6, r0, r8
 800f336:	5990      	ldr	r0, [r2, r6]
 800f338:	18b3      	adds	r3, r6, r2
 800f33a:	b140      	cbz	r0, 800f34e <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x36>
 800f33c:	3c01      	subs	r4, #1
 800f33e:	441d      	add	r5, r3
 800f340:	429d      	cmp	r5, r3
 800f342:	d00c      	beq.n	800f35e <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x46>
 800f344:	f813 2b01 	ldrb.w	r2, [r3], #1
 800f348:	f804 2f01 	strb.w	r2, [r4, #1]!
 800f34c:	e7f8      	b.n	800f340 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x28>
 800f34e:	e9cd 0001 	strd	r0, r0, [sp, #4]
 800f352:	4623      	mov	r3, r4
 800f354:	4642      	mov	r2, r8
 800f356:	4638      	mov	r0, r7
 800f358:	9500      	str	r5, [sp, #0]
 800f35a:	f7ff ff9d 	bl	800f298 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800f35e:	b004      	add	sp, #16
 800f360:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f364:	20014dfc 	strdcs	r4, [r1], -ip
 800f368:	20013df8 	strdcs	r3, [r1], -r8

0800f36c <SpiFlashStore::Flash()>:
 800f36c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800f36e:	4c25      	ldr	r4, [pc, #148]	; (800f404 <SpiFlashStore::Flash()+0x98>)
 800f370:	6820      	ldr	r0, [r4, #0]
 800f372:	2800      	cmp	r0, #0
 800f374:	d043      	beq.n	800f3fe <SpiFlashStore::Flash()+0x92>
 800f376:	3801      	subs	r0, #1
 800f378:	2805      	cmp	r0, #5
 800f37a:	d831      	bhi.n	800f3e0 <SpiFlashStore::Flash()+0x74>
 800f37c:	e8df f000 	tbb	[pc, r0]
 800f380:	2e140b03 	vnmlscs.f64	d0, d4, d3
 800f384:	4b203025 	blmi	881b420 <__exidx_end+0x803558>
 800f388:	681a      	ldr	r2, [r3, #0]
 800f38a:	4b20      	ldr	r3, [pc, #128]	; (800f40c <SpiFlashStore::Flash()+0xa0>)
 800f38c:	601a      	str	r2, [r3, #0]
 800f38e:	2302      	movs	r3, #2
 800f390:	6023      	str	r3, [r4, #0]
 800f392:	2001      	movs	r0, #1
 800f394:	e033      	b.n	800f3fe <SpiFlashStore::Flash()+0x92>
 800f396:	4b1c      	ldr	r3, [pc, #112]	; (800f408 <SpiFlashStore::Flash()+0x9c>)
 800f398:	4a1c      	ldr	r2, [pc, #112]	; (800f40c <SpiFlashStore::Flash()+0xa0>)
 800f39a:	681b      	ldr	r3, [r3, #0]
 800f39c:	6812      	ldr	r2, [r2, #0]
 800f39e:	1a9b      	subs	r3, r3, r2
 800f3a0:	2b63      	cmp	r3, #99	; 0x63
 800f3a2:	d9f6      	bls.n	800f392 <SpiFlashStore::Flash()+0x26>
 800f3a4:	2303      	movs	r3, #3
 800f3a6:	e7f3      	b.n	800f390 <SpiFlashStore::Flash()+0x24>
 800f3a8:	4919      	ldr	r1, [pc, #100]	; (800f410 <SpiFlashStore::Flash()+0xa4>)
 800f3aa:	481a      	ldr	r0, [pc, #104]	; (800f414 <SpiFlashStore::Flash()+0xa8>)
 800f3ac:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 800f3b0:	6809      	ldr	r1, [r1, #0]
 800f3b2:	6800      	ldr	r0, [r0, #0]
 800f3b4:	ab03      	add	r3, sp, #12
 800f3b6:	f000 fad3 	bl	800f960 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)>
 800f3ba:	2800      	cmp	r0, #0
 800f3bc:	d0e9      	beq.n	800f392 <SpiFlashStore::Flash()+0x26>
 800f3be:	4b12      	ldr	r3, [pc, #72]	; (800f408 <SpiFlashStore::Flash()+0x9c>)
 800f3c0:	681a      	ldr	r2, [r3, #0]
 800f3c2:	4b12      	ldr	r3, [pc, #72]	; (800f40c <SpiFlashStore::Flash()+0xa0>)
 800f3c4:	601a      	str	r2, [r3, #0]
 800f3c6:	2305      	movs	r3, #5
 800f3c8:	e7e2      	b.n	800f390 <SpiFlashStore::Flash()+0x24>
 800f3ca:	4b0f      	ldr	r3, [pc, #60]	; (800f408 <SpiFlashStore::Flash()+0x9c>)
 800f3cc:	4a0f      	ldr	r2, [pc, #60]	; (800f40c <SpiFlashStore::Flash()+0xa0>)
 800f3ce:	681b      	ldr	r3, [r3, #0]
 800f3d0:	6812      	ldr	r2, [r2, #0]
 800f3d2:	1a9b      	subs	r3, r3, r2
 800f3d4:	2b63      	cmp	r3, #99	; 0x63
 800f3d6:	d9dc      	bls.n	800f392 <SpiFlashStore::Flash()+0x26>
 800f3d8:	2304      	movs	r3, #4
 800f3da:	e7d9      	b.n	800f390 <SpiFlashStore::Flash()+0x24>
 800f3dc:	2306      	movs	r3, #6
 800f3de:	e7d7      	b.n	800f390 <SpiFlashStore::Flash()+0x24>
 800f3e0:	ab03      	add	r3, sp, #12
 800f3e2:	4a0d      	ldr	r2, [pc, #52]	; (800f418 <SpiFlashStore::Flash()+0xac>)
 800f3e4:	490a      	ldr	r1, [pc, #40]	; (800f410 <SpiFlashStore::Flash()+0xa4>)
 800f3e6:	480b      	ldr	r0, [pc, #44]	; (800f414 <SpiFlashStore::Flash()+0xa8>)
 800f3e8:	9300      	str	r3, [sp, #0]
 800f3ea:	6812      	ldr	r2, [r2, #0]
 800f3ec:	4b0b      	ldr	r3, [pc, #44]	; (800f41c <SpiFlashStore::Flash()+0xb0>)
 800f3ee:	6809      	ldr	r1, [r1, #0]
 800f3f0:	6800      	ldr	r0, [r0, #0]
 800f3f2:	f000 fb55 	bl	800faa0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)>
 800f3f6:	2800      	cmp	r0, #0
 800f3f8:	d0cb      	beq.n	800f392 <SpiFlashStore::Flash()+0x26>
 800f3fa:	2000      	movs	r0, #0
 800f3fc:	6020      	str	r0, [r4, #0]
 800f3fe:	b004      	add	sp, #16
 800f400:	bd10      	pop	{r4, pc}
 800f402:	bf00      	nop
 800f404:	20014e04 	andcs	r4, r1, r4, lsl #28
 800f408:	2001ce4c 	andcs	ip, r1, ip, asr #28
 800f40c:	20013df4 	strdcs	r3, [r1], -r4
 800f410:	20014df8 	strdcs	r4, [r1], -r8
 800f414:	20014e28 	andcs	r4, r1, r8, lsr #28
 800f418:	20014e00 	andcs	r4, r1, r0, lsl #28
 800f41c:	20013df8 	strdcs	r3, [r1], -r8

0800f420 <StoreDisplayUdf::~StoreDisplayUdf()>:
 800f420:	4770      	bx	lr
	...

0800f424 <StoreDisplayUdf::Copy(displayudfparams::Params*)>:
 800f424:	2300      	movs	r3, #0
 800f426:	b507      	push	{r0, r1, r2, lr}
 800f428:	4805      	ldr	r0, [pc, #20]	; (800f440 <StoreDisplayUdf::Copy(displayudfparams::Params*)+0x1c>)
 800f42a:	9300      	str	r3, [sp, #0]
 800f42c:	460a      	mov	r2, r1
 800f42e:	2322      	movs	r3, #34	; 0x22
 800f430:	210f      	movs	r1, #15
 800f432:	6800      	ldr	r0, [r0, #0]
 800f434:	f7ff ff70 	bl	800f318 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800f438:	b003      	add	sp, #12
 800f43a:	f85d fb04 	ldr.w	pc, [sp], #4
 800f43e:	bf00      	nop
 800f440:	20014e08 	andcs	r4, r1, r8, lsl #28

0800f444 <StoreDisplayUdf::Update(displayudfparams::Params const*)>:
 800f444:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800f446:	2200      	movs	r2, #0
 800f448:	460b      	mov	r3, r1
 800f44a:	2122      	movs	r1, #34	; 0x22
 800f44c:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800f450:	4804      	ldr	r0, [pc, #16]	; (800f464 <StoreDisplayUdf::Update(displayudfparams::Params const*)+0x20>)
 800f452:	9100      	str	r1, [sp, #0]
 800f454:	6800      	ldr	r0, [r0, #0]
 800f456:	210f      	movs	r1, #15
 800f458:	f7ff ff1e 	bl	800f298 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800f45c:	b005      	add	sp, #20
 800f45e:	f85d fb04 	ldr.w	pc, [sp], #4
 800f462:	bf00      	nop
 800f464:	20014e08 	andcs	r4, r1, r8, lsl #28

0800f468 <StoreDisplayUdf::~StoreDisplayUdf()>:
 800f468:	b510      	push	{r4, lr}
 800f46a:	4604      	mov	r4, r0
 800f46c:	f003 ffe2 	bl	8013434 <operator delete(void*)>
 800f470:	4620      	mov	r0, r4
 800f472:	bd10      	pop	{r4, pc}

0800f474 <StoreDisplayUdf::StoreDisplayUdf()>:
 800f474:	4a02      	ldr	r2, [pc, #8]	; (800f480 <StoreDisplayUdf::StoreDisplayUdf()+0xc>)
 800f476:	6002      	str	r2, [r0, #0]
 800f478:	4a02      	ldr	r2, [pc, #8]	; (800f484 <StoreDisplayUdf::StoreDisplayUdf()+0x10>)
 800f47a:	6010      	str	r0, [r2, #0]
 800f47c:	4770      	bx	lr
 800f47e:	bf00      	nop
 800f480:	08017360 	stmdaeq	r1, {r5, r6, r8, r9, ip, sp, lr}
 800f484:	20014e10 	andcs	r4, r1, r0, lsl lr

0800f488 <StoreE131::~StoreE131()>:
 800f488:	4770      	bx	lr
	...

0800f48c <StoreE131::Copy(e131params::Params*)>:
 800f48c:	2300      	movs	r3, #0
 800f48e:	b507      	push	{r0, r1, r2, lr}
 800f490:	4805      	ldr	r0, [pc, #20]	; (800f4a8 <StoreE131::Copy(e131params::Params*)+0x1c>)
 800f492:	9300      	str	r3, [sp, #0]
 800f494:	460a      	mov	r2, r1
 800f496:	231f      	movs	r3, #31
 800f498:	2104      	movs	r1, #4
 800f49a:	6800      	ldr	r0, [r0, #0]
 800f49c:	f7ff ff3c 	bl	800f318 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800f4a0:	b003      	add	sp, #12
 800f4a2:	f85d fb04 	ldr.w	pc, [sp], #4
 800f4a6:	bf00      	nop
 800f4a8:	20014e08 	andcs	r4, r1, r8, lsl #28

0800f4ac <StoreE131::Update(e131params::Params const*)>:
 800f4ac:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800f4ae:	2200      	movs	r2, #0
 800f4b0:	460b      	mov	r3, r1
 800f4b2:	211f      	movs	r1, #31
 800f4b4:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800f4b8:	4804      	ldr	r0, [pc, #16]	; (800f4cc <StoreE131::Update(e131params::Params const*)+0x20>)
 800f4ba:	9100      	str	r1, [sp, #0]
 800f4bc:	6800      	ldr	r0, [r0, #0]
 800f4be:	2104      	movs	r1, #4
 800f4c0:	f7ff feea 	bl	800f298 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800f4c4:	b005      	add	sp, #20
 800f4c6:	f85d fb04 	ldr.w	pc, [sp], #4
 800f4ca:	bf00      	nop
 800f4cc:	20014e08 	andcs	r4, r1, r8, lsl #28

0800f4d0 <StoreE131::~StoreE131()>:
 800f4d0:	b510      	push	{r4, lr}
 800f4d2:	4604      	mov	r4, r0
 800f4d4:	f003 ffae 	bl	8013434 <operator delete(void*)>
 800f4d8:	4620      	mov	r0, r4
 800f4da:	bd10      	pop	{r4, pc}

0800f4dc <StoreE131::StoreE131()>:
 800f4dc:	4a02      	ldr	r2, [pc, #8]	; (800f4e8 <StoreE131::StoreE131()+0xc>)
 800f4de:	6002      	str	r2, [r0, #0]
 800f4e0:	4a02      	ldr	r2, [pc, #8]	; (800f4ec <StoreE131::StoreE131()+0x10>)
 800f4e2:	6010      	str	r0, [r2, #0]
 800f4e4:	4770      	bx	lr
 800f4e6:	bf00      	nop
 800f4e8:	08017378 	stmdaeq	r1, {r3, r4, r5, r6, r8, r9, ip, sp, lr}
 800f4ec:	20014e14 	andcs	r4, r1, r4, lsl lr

0800f4f0 <StoreNetwork::~StoreNetwork()>:
 800f4f0:	4770      	bx	lr

0800f4f2 <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 800f4f2:	3804      	subs	r0, #4
 800f4f4:	4770      	bx	lr
	...

0800f4f8 <StoreNetwork::Update(TNetworkParams const*)>:
 800f4f8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800f4fa:	2200      	movs	r2, #0
 800f4fc:	460b      	mov	r3, r1
 800f4fe:	215e      	movs	r1, #94	; 0x5e
 800f500:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800f504:	4804      	ldr	r0, [pc, #16]	; (800f518 <StoreNetwork::Update(TNetworkParams const*)+0x20>)
 800f506:	9100      	str	r1, [sp, #0]
 800f508:	6800      	ldr	r0, [r0, #0]
 800f50a:	4611      	mov	r1, r2
 800f50c:	f7ff fec4 	bl	800f298 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800f510:	b005      	add	sp, #20
 800f512:	f85d fb04 	ldr.w	pc, [sp], #4
 800f516:	bf00      	nop
 800f518:	20014e08 	andcs	r4, r1, r8, lsl #28

0800f51c <StoreNetwork::SaveGatewayIp(unsigned int)>:
 800f51c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800f51e:	2308      	movs	r3, #8
 800f520:	9105      	str	r1, [sp, #20]
 800f522:	2100      	movs	r1, #0
 800f524:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800f528:	2304      	movs	r3, #4
 800f52a:	4805      	ldr	r0, [pc, #20]	; (800f540 <StoreNetwork::SaveGatewayIp(unsigned int)+0x24>)
 800f52c:	9300      	str	r3, [sp, #0]
 800f52e:	220c      	movs	r2, #12
 800f530:	6800      	ldr	r0, [r0, #0]
 800f532:	ab05      	add	r3, sp, #20
 800f534:	f7ff feb0 	bl	800f298 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800f538:	b007      	add	sp, #28
 800f53a:	f85d fb04 	ldr.w	pc, [sp], #4
 800f53e:	bf00      	nop
 800f540:	20014e08 	andcs	r4, r1, r8, lsl #28

0800f544 <non-virtual thunk to StoreNetwork::SaveGatewayIp(unsigned int)>:
 800f544:	f1a0 0004 	sub.w	r0, r0, #4
 800f548:	e7e8      	b.n	800f51c <StoreNetwork::SaveGatewayIp(unsigned int)>
 800f54a:	bf00      	nop

0800f54c <StoreNetwork::SaveNetMask(unsigned int)>:
 800f54c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800f54e:	2304      	movs	r3, #4
 800f550:	9105      	str	r1, [sp, #20]
 800f552:	2100      	movs	r1, #0
 800f554:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800f558:	4804      	ldr	r0, [pc, #16]	; (800f56c <StoreNetwork::SaveNetMask(unsigned int)+0x20>)
 800f55a:	9300      	str	r3, [sp, #0]
 800f55c:	2208      	movs	r2, #8
 800f55e:	6800      	ldr	r0, [r0, #0]
 800f560:	ab05      	add	r3, sp, #20
 800f562:	f7ff fe99 	bl	800f298 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800f566:	b007      	add	sp, #28
 800f568:	f85d fb04 	ldr.w	pc, [sp], #4
 800f56c:	20014e08 	andcs	r4, r1, r8, lsl #28

0800f570 <non-virtual thunk to StoreNetwork::SaveNetMask(unsigned int)>:
 800f570:	f1a0 0004 	sub.w	r0, r0, #4
 800f574:	e7ea      	b.n	800f54c <StoreNetwork::SaveNetMask(unsigned int)>
 800f576:	bf00      	nop

0800f578 <StoreNetwork::SaveIp(unsigned int)>:
 800f578:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800f57a:	2302      	movs	r3, #2
 800f57c:	9105      	str	r1, [sp, #20]
 800f57e:	2100      	movs	r1, #0
 800f580:	2204      	movs	r2, #4
 800f582:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800f586:	4804      	ldr	r0, [pc, #16]	; (800f598 <StoreNetwork::SaveIp(unsigned int)+0x20>)
 800f588:	9200      	str	r2, [sp, #0]
 800f58a:	6800      	ldr	r0, [r0, #0]
 800f58c:	ab05      	add	r3, sp, #20
 800f58e:	f7ff fe83 	bl	800f298 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800f592:	b007      	add	sp, #28
 800f594:	f85d fb04 	ldr.w	pc, [sp], #4
 800f598:	20014e08 	andcs	r4, r1, r8, lsl #28

0800f59c <non-virtual thunk to StoreNetwork::SaveIp(unsigned int)>:
 800f59c:	f1a0 0004 	sub.w	r0, r0, #4
 800f5a0:	e7ea      	b.n	800f578 <StoreNetwork::SaveIp(unsigned int)>
 800f5a2:	bf00      	nop

0800f5a4 <StoreNetwork::SaveHostName(char const*, unsigned int)>:
 800f5a4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800f5a6:	460b      	mov	r3, r1
 800f5a8:	2020      	movs	r0, #32
 800f5aa:	2100      	movs	r1, #0
 800f5ac:	2a40      	cmp	r2, #64	; 0x40
 800f5ae:	bf28      	it	cs
 800f5b0:	2240      	movcs	r2, #64	; 0x40
 800f5b2:	e9cd 0101 	strd	r0, r1, [sp, #4]
 800f5b6:	4804      	ldr	r0, [pc, #16]	; (800f5c8 <StoreNetwork::SaveHostName(char const*, unsigned int)+0x24>)
 800f5b8:	9200      	str	r2, [sp, #0]
 800f5ba:	6800      	ldr	r0, [r0, #0]
 800f5bc:	2215      	movs	r2, #21
 800f5be:	f7ff fe6b 	bl	800f298 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800f5c2:	b005      	add	sp, #20
 800f5c4:	f85d fb04 	ldr.w	pc, [sp], #4
 800f5c8:	20014e08 	andcs	r4, r1, r8, lsl #28

0800f5cc <non-virtual thunk to StoreNetwork::SaveHostName(char const*, unsigned int)>:
 800f5cc:	f1a0 0004 	sub.w	r0, r0, #4
 800f5d0:	e7e8      	b.n	800f5a4 <StoreNetwork::SaveHostName(char const*, unsigned int)>
 800f5d2:	bf00      	nop

0800f5d4 <StoreNetwork::~StoreNetwork()>:
 800f5d4:	b510      	push	{r4, lr}
 800f5d6:	4604      	mov	r4, r0
 800f5d8:	f003 ff2c 	bl	8013434 <operator delete(void*)>
 800f5dc:	4620      	mov	r0, r4
 800f5de:	bd10      	pop	{r4, pc}

0800f5e0 <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 800f5e0:	f1a0 0004 	sub.w	r0, r0, #4
 800f5e4:	e7f6      	b.n	800f5d4 <StoreNetwork::~StoreNetwork()>
	...

0800f5e8 <StoreNetwork::Copy(TNetworkParams*)>:
 800f5e8:	b507      	push	{r0, r1, r2, lr}
 800f5ea:	460a      	mov	r2, r1
 800f5ec:	2100      	movs	r1, #0
 800f5ee:	4804      	ldr	r0, [pc, #16]	; (800f600 <StoreNetwork::Copy(TNetworkParams*)+0x18>)
 800f5f0:	9100      	str	r1, [sp, #0]
 800f5f2:	235e      	movs	r3, #94	; 0x5e
 800f5f4:	6800      	ldr	r0, [r0, #0]
 800f5f6:	f7ff fe8f 	bl	800f318 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800f5fa:	b003      	add	sp, #12
 800f5fc:	f85d fb04 	ldr.w	pc, [sp], #4
 800f600:	20014e08 	andcs	r4, r1, r8, lsl #28

0800f604 <StoreNetwork::StoreNetwork()>:
 800f604:	4a03      	ldr	r2, [pc, #12]	; (800f614 <StoreNetwork::StoreNetwork()+0x10>)
 800f606:	6002      	str	r2, [r0, #0]
 800f608:	322c      	adds	r2, #44	; 0x2c
 800f60a:	6042      	str	r2, [r0, #4]
 800f60c:	4a02      	ldr	r2, [pc, #8]	; (800f618 <StoreNetwork::StoreNetwork()+0x14>)
 800f60e:	6010      	str	r0, [r2, #0]
 800f610:	4770      	bx	lr
 800f612:	bf00      	nop
 800f614:	08017390 	stmdaeq	r1, {r4, r7, r8, r9, ip, sp, lr}
 800f618:	20014e18 	andcs	r4, r1, r8, lsl lr

0800f61c <StoreRDMDevice::~StoreRDMDevice()>:
 800f61c:	4770      	bx	lr

0800f61e <non-virtual thunk to StoreRDMDevice::~StoreRDMDevice()>:
 800f61e:	3804      	subs	r0, #4
 800f620:	4770      	bx	lr
	...

0800f624 <StoreRDMDevice::Update(TRDMDeviceParams const*)>:
 800f624:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800f626:	2200      	movs	r2, #0
 800f628:	460b      	mov	r3, r1
 800f62a:	2129      	movs	r1, #41	; 0x29
 800f62c:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800f630:	4804      	ldr	r0, [pc, #16]	; (800f644 <StoreRDMDevice::Update(TRDMDeviceParams const*)+0x20>)
 800f632:	9100      	str	r1, [sp, #0]
 800f634:	6800      	ldr	r0, [r0, #0]
 800f636:	210b      	movs	r1, #11
 800f638:	f7ff fe2e 	bl	800f298 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800f63c:	b005      	add	sp, #20
 800f63e:	f85d fb04 	ldr.w	pc, [sp], #4
 800f642:	bf00      	nop
 800f644:	20014e08 	andcs	r4, r1, r8, lsl #28

0800f648 <StoreRDMDevice::SaveLabel(char const*, unsigned char)>:
 800f648:	b570      	push	{r4, r5, r6, lr}
 800f64a:	2401      	movs	r4, #1
 800f64c:	2600      	movs	r6, #0
 800f64e:	4d0c      	ldr	r5, [pc, #48]	; (800f680 <StoreRDMDevice::SaveLabel(char const*, unsigned char)+0x38>)
 800f650:	b086      	sub	sp, #24
 800f652:	460b      	mov	r3, r1
 800f654:	6828      	ldr	r0, [r5, #0]
 800f656:	f88d 2017 	strb.w	r2, [sp, #23]
 800f65a:	9200      	str	r2, [sp, #0]
 800f65c:	210b      	movs	r1, #11
 800f65e:	2204      	movs	r2, #4
 800f660:	e9cd 4601 	strd	r4, r6, [sp, #4]
 800f664:	f7ff fe18 	bl	800f298 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800f668:	2224      	movs	r2, #36	; 0x24
 800f66a:	210b      	movs	r1, #11
 800f66c:	e9cd 4601 	strd	r4, r6, [sp, #4]
 800f670:	6828      	ldr	r0, [r5, #0]
 800f672:	9400      	str	r4, [sp, #0]
 800f674:	f10d 0317 	add.w	r3, sp, #23
 800f678:	f7ff fe0e 	bl	800f298 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800f67c:	b006      	add	sp, #24
 800f67e:	bd70      	pop	{r4, r5, r6, pc}
 800f680:	20014e08 	andcs	r4, r1, r8, lsl #28

0800f684 <non-virtual thunk to StoreRDMDevice::SaveLabel(char const*, unsigned char)>:
 800f684:	f1a0 0004 	sub.w	r0, r0, #4
 800f688:	e7de      	b.n	800f648 <StoreRDMDevice::SaveLabel(char const*, unsigned char)>
 800f68a:	bf00      	nop

0800f68c <StoreRDMDevice::~StoreRDMDevice()>:
 800f68c:	b510      	push	{r4, lr}
 800f68e:	4604      	mov	r4, r0
 800f690:	f003 fed0 	bl	8013434 <operator delete(void*)>
 800f694:	4620      	mov	r0, r4
 800f696:	bd10      	pop	{r4, pc}

0800f698 <non-virtual thunk to StoreRDMDevice::~StoreRDMDevice()>:
 800f698:	f1a0 0004 	sub.w	r0, r0, #4
 800f69c:	e7f6      	b.n	800f68c <StoreRDMDevice::~StoreRDMDevice()>
	...

0800f6a0 <StoreRDMDevice::Copy(TRDMDeviceParams*)>:
 800f6a0:	2300      	movs	r3, #0
 800f6a2:	b507      	push	{r0, r1, r2, lr}
 800f6a4:	4805      	ldr	r0, [pc, #20]	; (800f6bc <StoreRDMDevice::Copy(TRDMDeviceParams*)+0x1c>)
 800f6a6:	9300      	str	r3, [sp, #0]
 800f6a8:	460a      	mov	r2, r1
 800f6aa:	2329      	movs	r3, #41	; 0x29
 800f6ac:	210b      	movs	r1, #11
 800f6ae:	6800      	ldr	r0, [r0, #0]
 800f6b0:	f7ff fe32 	bl	800f318 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800f6b4:	b003      	add	sp, #12
 800f6b6:	f85d fb04 	ldr.w	pc, [sp], #4
 800f6ba:	bf00      	nop
 800f6bc:	20014e08 	andcs	r4, r1, r8, lsl #28

0800f6c0 <StoreRDMDevice::StoreRDMDevice()>:
 800f6c0:	4a03      	ldr	r2, [pc, #12]	; (800f6d0 <StoreRDMDevice::StoreRDMDevice()+0x10>)
 800f6c2:	6002      	str	r2, [r0, #0]
 800f6c4:	321c      	adds	r2, #28
 800f6c6:	6042      	str	r2, [r0, #4]
 800f6c8:	4a02      	ldr	r2, [pc, #8]	; (800f6d4 <StoreRDMDevice::StoreRDMDevice()+0x14>)
 800f6ca:	6010      	str	r0, [r2, #0]
 800f6cc:	4770      	bx	lr
 800f6ce:	bf00      	nop
 800f6d0:	080173e0 	stmdaeq	r1, {r5, r6, r7, r8, r9, ip, sp, lr}
 800f6d4:	20014e1c 	andcs	r4, r1, ip, lsl lr

0800f6d8 <StoreRemoteConfig::~StoreRemoteConfig()>:
 800f6d8:	4770      	bx	lr
	...

0800f6dc <StoreRemoteConfig::Copy(TRemoteConfigParams*)>:
 800f6dc:	2300      	movs	r3, #0
 800f6de:	b507      	push	{r0, r1, r2, lr}
 800f6e0:	4805      	ldr	r0, [pc, #20]	; (800f6f8 <StoreRemoteConfig::Copy(TRemoteConfigParams*)+0x1c>)
 800f6e2:	9300      	str	r3, [sp, #0]
 800f6e4:	460a      	mov	r2, r1
 800f6e6:	2320      	movs	r3, #32
 800f6e8:	210c      	movs	r1, #12
 800f6ea:	6800      	ldr	r0, [r0, #0]
 800f6ec:	f7ff fe14 	bl	800f318 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800f6f0:	b003      	add	sp, #12
 800f6f2:	f85d fb04 	ldr.w	pc, [sp], #4
 800f6f6:	bf00      	nop
 800f6f8:	20014e08 	andcs	r4, r1, r8, lsl #28

0800f6fc <StoreRemoteConfig::Update(TRemoteConfigParams const*)>:
 800f6fc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800f6fe:	2200      	movs	r2, #0
 800f700:	460b      	mov	r3, r1
 800f702:	2120      	movs	r1, #32
 800f704:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800f708:	4804      	ldr	r0, [pc, #16]	; (800f71c <StoreRemoteConfig::Update(TRemoteConfigParams const*)+0x20>)
 800f70a:	9100      	str	r1, [sp, #0]
 800f70c:	6800      	ldr	r0, [r0, #0]
 800f70e:	210c      	movs	r1, #12
 800f710:	f7ff fdc2 	bl	800f298 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800f714:	b005      	add	sp, #20
 800f716:	f85d fb04 	ldr.w	pc, [sp], #4
 800f71a:	bf00      	nop
 800f71c:	20014e08 	andcs	r4, r1, r8, lsl #28

0800f720 <StoreRemoteConfig::~StoreRemoteConfig()>:
 800f720:	b510      	push	{r4, lr}
 800f722:	4604      	mov	r4, r0
 800f724:	f003 fe86 	bl	8013434 <operator delete(void*)>
 800f728:	4620      	mov	r0, r4
 800f72a:	bd10      	pop	{r4, pc}

0800f72c <StoreRemoteConfig::StoreRemoteConfig()>:
 800f72c:	4a02      	ldr	r2, [pc, #8]	; (800f738 <StoreRemoteConfig::StoreRemoteConfig()+0xc>)
 800f72e:	6002      	str	r2, [r0, #0]
 800f730:	4a02      	ldr	r2, [pc, #8]	; (800f73c <StoreRemoteConfig::StoreRemoteConfig()+0x10>)
 800f732:	6010      	str	r0, [r2, #0]
 800f734:	4770      	bx	lr
 800f736:	bf00      	nop
 800f738:	08017410 	stmdaeq	r1, {r4, sl, ip, sp, lr}
 800f73c:	20014e20 	andcs	r4, r1, r0, lsr #28

0800f740 <StoreWS28xxDmx::~StoreWS28xxDmx()>:
 800f740:	4770      	bx	lr

0800f742 <non-virtual thunk to StoreWS28xxDmx::~StoreWS28xxDmx()>:
 800f742:	3804      	subs	r0, #4
 800f744:	4770      	bx	lr
	...

0800f748 <StoreWS28xxDmx::Update(TWS28xxDmxParams const*)>:
 800f748:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800f74a:	2200      	movs	r2, #0
 800f74c:	460b      	mov	r3, r1
 800f74e:	2127      	movs	r1, #39	; 0x27
 800f750:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800f754:	4804      	ldr	r0, [pc, #16]	; (800f768 <StoreWS28xxDmx::Update(TWS28xxDmxParams const*)+0x20>)
 800f756:	9100      	str	r1, [sp, #0]
 800f758:	6800      	ldr	r0, [r0, #0]
 800f75a:	2103      	movs	r1, #3
 800f75c:	f7ff fd9c 	bl	800f298 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800f760:	b005      	add	sp, #20
 800f762:	f85d fb04 	ldr.w	pc, [sp], #4
 800f766:	bf00      	nop
 800f768:	20014e08 	andcs	r4, r1, r8, lsl #28

0800f76c <StoreWS28xxDmx::SaveDmxStartAddress(unsigned short)>:
 800f76c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800f76e:	2304      	movs	r3, #4
 800f770:	2200      	movs	r2, #0
 800f772:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800f776:	2302      	movs	r3, #2
 800f778:	4806      	ldr	r0, [pc, #24]	; (800f794 <StoreWS28xxDmx::SaveDmxStartAddress(unsigned short)+0x28>)
 800f77a:	9300      	str	r3, [sp, #0]
 800f77c:	f8ad 1016 	strh.w	r1, [sp, #22]
 800f780:	2207      	movs	r2, #7
 800f782:	2103      	movs	r1, #3
 800f784:	6800      	ldr	r0, [r0, #0]
 800f786:	f10d 0316 	add.w	r3, sp, #22
 800f78a:	f7ff fd85 	bl	800f298 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800f78e:	b007      	add	sp, #28
 800f790:	f85d fb04 	ldr.w	pc, [sp], #4
 800f794:	20014e08 	andcs	r4, r1, r8, lsl #28

0800f798 <non-virtual thunk to StoreWS28xxDmx::SaveDmxStartAddress(unsigned short)>:
 800f798:	f1a0 0004 	sub.w	r0, r0, #4
 800f79c:	e7e6      	b.n	800f76c <StoreWS28xxDmx::SaveDmxStartAddress(unsigned short)>
 800f79e:	bf00      	nop

0800f7a0 <StoreWS28xxDmx::SaveTestPattern(unsigned char)>:
 800f7a0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800f7a2:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
 800f7a6:	2200      	movs	r2, #0
 800f7a8:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800f7ac:	2301      	movs	r3, #1
 800f7ae:	4807      	ldr	r0, [pc, #28]	; (800f7cc <StoreWS28xxDmx::SaveTestPattern(unsigned char)+0x2c>)
 800f7b0:	9300      	str	r3, [sp, #0]
 800f7b2:	f88d 1017 	strb.w	r1, [sp, #23]
 800f7b6:	2226      	movs	r2, #38	; 0x26
 800f7b8:	2103      	movs	r1, #3
 800f7ba:	6800      	ldr	r0, [r0, #0]
 800f7bc:	f10d 0317 	add.w	r3, sp, #23
 800f7c0:	f7ff fd6a 	bl	800f298 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800f7c4:	b007      	add	sp, #28
 800f7c6:	f85d fb04 	ldr.w	pc, [sp], #4
 800f7ca:	bf00      	nop
 800f7cc:	20014e08 	andcs	r4, r1, r8, lsl #28

0800f7d0 <non-virtual thunk to StoreWS28xxDmx::SaveTestPattern(unsigned char)>:
 800f7d0:	f1a0 0004 	sub.w	r0, r0, #4
 800f7d4:	e7e4      	b.n	800f7a0 <StoreWS28xxDmx::SaveTestPattern(unsigned char)>
 800f7d6:	bf00      	nop

0800f7d8 <StoreWS28xxDmx::SaveMap(unsigned char)>:
 800f7d8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800f7da:	f44f 7300 	mov.w	r3, #512	; 0x200
 800f7de:	2200      	movs	r2, #0
 800f7e0:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800f7e4:	2301      	movs	r3, #1
 800f7e6:	4807      	ldr	r0, [pc, #28]	; (800f804 <StoreWS28xxDmx::SaveMap(unsigned char)+0x2c>)
 800f7e8:	9300      	str	r3, [sp, #0]
 800f7ea:	f88d 1017 	strb.w	r1, [sp, #23]
 800f7ee:	2213      	movs	r2, #19
 800f7f0:	2103      	movs	r1, #3
 800f7f2:	6800      	ldr	r0, [r0, #0]
 800f7f4:	f10d 0317 	add.w	r3, sp, #23
 800f7f8:	f7ff fd4e 	bl	800f298 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800f7fc:	b007      	add	sp, #28
 800f7fe:	f85d fb04 	ldr.w	pc, [sp], #4
 800f802:	bf00      	nop
 800f804:	20014e08 	andcs	r4, r1, r8, lsl #28

0800f808 <non-virtual thunk to StoreWS28xxDmx::SaveMap(unsigned char)>:
 800f808:	f1a0 0004 	sub.w	r0, r0, #4
 800f80c:	e7e4      	b.n	800f7d8 <StoreWS28xxDmx::SaveMap(unsigned char)>
 800f80e:	bf00      	nop

0800f810 <StoreWS28xxDmx::SaveGroupingCount(unsigned short)>:
 800f810:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800f812:	f44f 7380 	mov.w	r3, #256	; 0x100
 800f816:	2200      	movs	r2, #0
 800f818:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800f81c:	2302      	movs	r3, #2
 800f81e:	4807      	ldr	r0, [pc, #28]	; (800f83c <StoreWS28xxDmx::SaveGroupingCount(unsigned short)+0x2c>)
 800f820:	9300      	str	r3, [sp, #0]
 800f822:	f8ad 1016 	strh.w	r1, [sp, #22]
 800f826:	2211      	movs	r2, #17
 800f828:	2103      	movs	r1, #3
 800f82a:	6800      	ldr	r0, [r0, #0]
 800f82c:	f10d 0316 	add.w	r3, sp, #22
 800f830:	f7ff fd32 	bl	800f298 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800f834:	b007      	add	sp, #28
 800f836:	f85d fb04 	ldr.w	pc, [sp], #4
 800f83a:	bf00      	nop
 800f83c:	20014e08 	andcs	r4, r1, r8, lsl #28

0800f840 <non-virtual thunk to StoreWS28xxDmx::SaveGroupingCount(unsigned short)>:
 800f840:	f1a0 0004 	sub.w	r0, r0, #4
 800f844:	e7e4      	b.n	800f810 <StoreWS28xxDmx::SaveGroupingCount(unsigned short)>
 800f846:	bf00      	nop

0800f848 <StoreWS28xxDmx::SaveCount(unsigned short)>:
 800f848:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800f84a:	2302      	movs	r3, #2
 800f84c:	2200      	movs	r2, #0
 800f84e:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800f852:	4807      	ldr	r0, [pc, #28]	; (800f870 <StoreWS28xxDmx::SaveCount(unsigned short)+0x28>)
 800f854:	9300      	str	r3, [sp, #0]
 800f856:	f8ad 1016 	strh.w	r1, [sp, #22]
 800f85a:	2205      	movs	r2, #5
 800f85c:	2103      	movs	r1, #3
 800f85e:	6800      	ldr	r0, [r0, #0]
 800f860:	f10d 0316 	add.w	r3, sp, #22
 800f864:	f7ff fd18 	bl	800f298 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800f868:	b007      	add	sp, #28
 800f86a:	f85d fb04 	ldr.w	pc, [sp], #4
 800f86e:	bf00      	nop
 800f870:	20014e08 	andcs	r4, r1, r8, lsl #28

0800f874 <non-virtual thunk to StoreWS28xxDmx::SaveCount(unsigned short)>:
 800f874:	f1a0 0004 	sub.w	r0, r0, #4
 800f878:	e7e6      	b.n	800f848 <StoreWS28xxDmx::SaveCount(unsigned short)>
 800f87a:	bf00      	nop

0800f87c <StoreWS28xxDmx::SaveType(unsigned char)>:
 800f87c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800f87e:	2301      	movs	r3, #1
 800f880:	2200      	movs	r2, #0
 800f882:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800f886:	4807      	ldr	r0, [pc, #28]	; (800f8a4 <StoreWS28xxDmx::SaveType(unsigned char)+0x28>)
 800f888:	9300      	str	r3, [sp, #0]
 800f88a:	f88d 1017 	strb.w	r1, [sp, #23]
 800f88e:	2204      	movs	r2, #4
 800f890:	2103      	movs	r1, #3
 800f892:	6800      	ldr	r0, [r0, #0]
 800f894:	f10d 0317 	add.w	r3, sp, #23
 800f898:	f7ff fcfe 	bl	800f298 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800f89c:	b007      	add	sp, #28
 800f89e:	f85d fb04 	ldr.w	pc, [sp], #4
 800f8a2:	bf00      	nop
 800f8a4:	20014e08 	andcs	r4, r1, r8, lsl #28

0800f8a8 <non-virtual thunk to StoreWS28xxDmx::SaveType(unsigned char)>:
 800f8a8:	f1a0 0004 	sub.w	r0, r0, #4
 800f8ac:	e7e6      	b.n	800f87c <StoreWS28xxDmx::SaveType(unsigned char)>
 800f8ae:	bf00      	nop

0800f8b0 <StoreWS28xxDmx::~StoreWS28xxDmx()>:
 800f8b0:	b510      	push	{r4, lr}
 800f8b2:	4604      	mov	r4, r0
 800f8b4:	f003 fdbe 	bl	8013434 <operator delete(void*)>
 800f8b8:	4620      	mov	r0, r4
 800f8ba:	bd10      	pop	{r4, pc}

0800f8bc <non-virtual thunk to StoreWS28xxDmx::~StoreWS28xxDmx()>:
 800f8bc:	f1a0 0004 	sub.w	r0, r0, #4
 800f8c0:	e7f6      	b.n	800f8b0 <StoreWS28xxDmx::~StoreWS28xxDmx()>
	...

0800f8c4 <StoreWS28xxDmx::Copy(TWS28xxDmxParams*)>:
 800f8c4:	2300      	movs	r3, #0
 800f8c6:	b507      	push	{r0, r1, r2, lr}
 800f8c8:	4805      	ldr	r0, [pc, #20]	; (800f8e0 <StoreWS28xxDmx::Copy(TWS28xxDmxParams*)+0x1c>)
 800f8ca:	9300      	str	r3, [sp, #0]
 800f8cc:	460a      	mov	r2, r1
 800f8ce:	2327      	movs	r3, #39	; 0x27
 800f8d0:	2103      	movs	r1, #3
 800f8d2:	6800      	ldr	r0, [r0, #0]
 800f8d4:	f7ff fd20 	bl	800f318 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800f8d8:	b003      	add	sp, #12
 800f8da:	f85d fb04 	ldr.w	pc, [sp], #4
 800f8de:	bf00      	nop
 800f8e0:	20014e08 	andcs	r4, r1, r8, lsl #28

0800f8e4 <StoreWS28xxDmx::StoreWS28xxDmx()>:
 800f8e4:	4a03      	ldr	r2, [pc, #12]	; (800f8f4 <StoreWS28xxDmx::StoreWS28xxDmx()+0x10>)
 800f8e6:	6002      	str	r2, [r0, #0]
 800f8e8:	3230      	adds	r2, #48	; 0x30
 800f8ea:	6042      	str	r2, [r0, #4]
 800f8ec:	4a02      	ldr	r2, [pc, #8]	; (800f8f8 <StoreWS28xxDmx::StoreWS28xxDmx()+0x14>)
 800f8ee:	6010      	str	r0, [r2, #0]
 800f8f0:	4770      	bx	lr
 800f8f2:	bf00      	nop
 800f8f4:	08017428 	stmdaeq	r1, {r3, r5, sl, ip, sp, lr}
 800f8f8:	20014e24 	andcs	r4, r1, r4, lsr #28

0800f8fc <FlashRom::FlashRom()>:
 800f8fc:	4b07      	ldr	r3, [pc, #28]	; (800f91c <FlashRom::FlashRom()+0x20>)
 800f8fe:	b510      	push	{r4, lr}
 800f900:	6018      	str	r0, [r3, #0]
 800f902:	2301      	movs	r3, #1
 800f904:	4604      	mov	r4, r0
 800f906:	7003      	strb	r3, [r0, #0]
 800f908:	4b05      	ldr	r3, [pc, #20]	; (800f920 <FlashRom::FlashRom()+0x24>)
 800f90a:	4906      	ldr	r1, [pc, #24]	; (800f924 <FlashRom::FlashRom()+0x28>)
 800f90c:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800f910:	4805      	ldr	r0, [pc, #20]	; (800f928 <FlashRom::FlashRom()+0x2c>)
 800f912:	029a      	lsls	r2, r3, #10
 800f914:	f7f9 fe34 	bl	8009580 <printf>
 800f918:	4620      	mov	r0, r4
 800f91a:	bd10      	pop	{r4, pc}
 800f91c:	20014e28 	andcs	r4, r1, r8, lsr #28
 800f920:	1ffff700 	svcne	0x00fff700
 800f924:	08015946 	stmdaeq	r1, {r1, r2, r6, r8, fp, ip, lr}
 800f928:	08017478 	stmdaeq	r1, {r3, r4, r5, r6, sl, ip, sp, lr}

0800f92c <FlashRom::GetSize() const>:
 800f92c:	4b02      	ldr	r3, [pc, #8]	; (800f938 <FlashRom::GetSize() const+0xc>)
 800f92e:	f8b3 00e0 	ldrh.w	r0, [r3, #224]	; 0xe0
 800f932:	0280      	lsls	r0, r0, #10
 800f934:	4770      	bx	lr
 800f936:	bf00      	nop
 800f938:	1ffff700 	svcne	0x00fff700

0800f93c <FlashRom::GetSectorSize() const>:
 800f93c:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 800f940:	4770      	bx	lr

0800f942 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)>:
 800f942:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800f946:	441a      	add	r2, r3
 800f948:	4293      	cmp	r3, r2
 800f94a:	d104      	bne.n	800f956 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)+0x14>
 800f94c:	2200      	movs	r2, #0
 800f94e:	9b00      	ldr	r3, [sp, #0]
 800f950:	2001      	movs	r0, #1
 800f952:	601a      	str	r2, [r3, #0]
 800f954:	4770      	bx	lr
 800f956:	f851 0b04 	ldr.w	r0, [r1], #4
 800f95a:	f843 0b04 	str.w	r0, [r3], #4
 800f95e:	e7f3      	b.n	800f948 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)+0x6>

0800f960 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)>:
 800f960:	2000      	movs	r0, #0
 800f962:	b538      	push	{r3, r4, r5, lr}
 800f964:	4c47      	ldr	r4, [pc, #284]	; (800fa84 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x124>)
 800f966:	6018      	str	r0, [r3, #0]
 800f968:	6823      	ldr	r3, [r4, #0]
 800f96a:	2b04      	cmp	r3, #4
 800f96c:	f200 8082 	bhi.w	800fa74 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x114>
 800f970:	e8df f003 	tbb	[pc, r3]
 800f974:	78452003 	stmdavc	r5, {r0, r1, sp}^
 800f978:	4b430080 	blmi	90cfb80 <__exidx_end+0x10b7cb8>
 800f97c:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800f980:	6019      	str	r1, [r3, #0]
 800f982:	4b42      	ldr	r3, [pc, #264]	; (800fa8c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800f984:	601a      	str	r2, [r3, #0]
 800f986:	4b42      	ldr	r3, [pc, #264]	; (800fa90 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x130>)
 800f988:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800f98c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800f990:	4b40      	ldr	r3, [pc, #256]	; (800fa94 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800f992:	d807      	bhi.n	800f9a4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x44>
 800f994:	2201      	movs	r2, #1
 800f996:	701a      	strb	r2, [r3, #0]
 800f998:	f004 f8be 	bl	8013b18 <fmc_bank0_unlock>
 800f99c:	2301      	movs	r3, #1
 800f99e:	6023      	str	r3, [r4, #0]
 800f9a0:	2000      	movs	r0, #0
 800f9a2:	e026      	b.n	800f9f2 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x92>
 800f9a4:	4a3c      	ldr	r2, [pc, #240]	; (800fa98 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x138>)
 800f9a6:	4291      	cmp	r1, r2
 800f9a8:	d3f4      	bcc.n	800f994 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x34>
 800f9aa:	2200      	movs	r2, #0
 800f9ac:	701a      	strb	r2, [r3, #0]
 800f9ae:	f004 f8c1 	bl	8013b34 <fmc_bank1_unlock>
 800f9b2:	e7f3      	b.n	800f99c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 800f9b4:	4d37      	ldr	r5, [pc, #220]	; (800fa94 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800f9b6:	782b      	ldrb	r3, [r5, #0]
 800f9b8:	b15b      	cbz	r3, 800f9d2 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x72>
 800f9ba:	f004 f8d9 	bl	8013b70 <fmc_bank0_state_get>
 800f9be:	2801      	cmp	r0, #1
 800f9c0:	d0ee      	beq.n	800f9a0 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x40>
 800f9c2:	7829      	ldrb	r1, [r5, #0]
 800f9c4:	4b35      	ldr	r3, [pc, #212]	; (800fa9c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800f9c6:	b939      	cbnz	r1, 800f9d8 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x78>
 800f9c8:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800f9ca:	f022 0202 	bic.w	r2, r2, #2
 800f9ce:	651a      	str	r2, [r3, #80]	; 0x50
 800f9d0:	e006      	b.n	800f9e0 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x80>
 800f9d2:	f004 f8df 	bl	8013b94 <fmc_bank1_state_get>
 800f9d6:	e7f2      	b.n	800f9be <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x5e>
 800f9d8:	691a      	ldr	r2, [r3, #16]
 800f9da:	f022 0202 	bic.w	r2, r2, #2
 800f9de:	611a      	str	r2, [r3, #16]
 800f9e0:	4b2a      	ldr	r3, [pc, #168]	; (800fa8c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800f9e2:	681b      	ldr	r3, [r3, #0]
 800f9e4:	b94b      	cbnz	r3, 800f9fa <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x9a>
 800f9e6:	b129      	cbz	r1, 800f9f4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x94>
 800f9e8:	f004 f8b2 	bl	8013b50 <fmc_bank0_lock>
 800f9ec:	2300      	movs	r3, #0
 800f9ee:	2001      	movs	r0, #1
 800f9f0:	6023      	str	r3, [r4, #0]
 800f9f2:	bd38      	pop	{r3, r4, r5, pc}
 800f9f4:	f004 f8b4 	bl	8013b60 <fmc_bank1_lock>
 800f9f8:	e7f8      	b.n	800f9ec <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x8c>
 800f9fa:	2302      	movs	r3, #2
 800f9fc:	e7cf      	b.n	800f99e <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3e>
 800f9fe:	4923      	ldr	r1, [pc, #140]	; (800fa8c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800fa00:	680b      	ldr	r3, [r1, #0]
 800fa02:	2b00      	cmp	r3, #0
 800fa04:	d0ca      	beq.n	800f99c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 800fa06:	4b23      	ldr	r3, [pc, #140]	; (800fa94 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800fa08:	4a1f      	ldr	r2, [pc, #124]	; (800fa88 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x128>)
 800fa0a:	7818      	ldrb	r0, [r3, #0]
 800fa0c:	4b23      	ldr	r3, [pc, #140]	; (800fa9c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800fa0e:	b190      	cbz	r0, 800fa36 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0xd6>
 800fa10:	6918      	ldr	r0, [r3, #16]
 800fa12:	f040 0002 	orr.w	r0, r0, #2
 800fa16:	6118      	str	r0, [r3, #16]
 800fa18:	6810      	ldr	r0, [r2, #0]
 800fa1a:	6158      	str	r0, [r3, #20]
 800fa1c:	6918      	ldr	r0, [r3, #16]
 800fa1e:	f040 0040 	orr.w	r0, r0, #64	; 0x40
 800fa22:	6118      	str	r0, [r3, #16]
 800fa24:	680b      	ldr	r3, [r1, #0]
 800fa26:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 800fa2a:	600b      	str	r3, [r1, #0]
 800fa2c:	6813      	ldr	r3, [r2, #0]
 800fa2e:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800fa32:	6013      	str	r3, [r2, #0]
 800fa34:	e7b2      	b.n	800f99c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 800fa36:	6d18      	ldr	r0, [r3, #80]	; 0x50
 800fa38:	f040 0002 	orr.w	r0, r0, #2
 800fa3c:	6518      	str	r0, [r3, #80]	; 0x50
 800fa3e:	6810      	ldr	r0, [r2, #0]
 800fa40:	6558      	str	r0, [r3, #84]	; 0x54
 800fa42:	69dd      	ldr	r5, [r3, #28]
 800fa44:	07ad      	lsls	r5, r5, #30
 800fa46:	bf48      	it	mi
 800fa48:	6158      	strmi	r0, [r3, #20]
 800fa4a:	4814      	ldr	r0, [pc, #80]	; (800fa9c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800fa4c:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800fa4e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800fa52:	6503      	str	r3, [r0, #80]	; 0x50
 800fa54:	680b      	ldr	r3, [r1, #0]
 800fa56:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
 800fa5a:	600b      	str	r3, [r1, #0]
 800fa5c:	6813      	ldr	r3, [r2, #0]
 800fa5e:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800fa62:	e7e6      	b.n	800fa32 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0xd2>
 800fa64:	4b0b      	ldr	r3, [pc, #44]	; (800fa94 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800fa66:	781a      	ldrb	r2, [r3, #0]
 800fa68:	4b0c      	ldr	r3, [pc, #48]	; (800fa9c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800fa6a:	b132      	cbz	r2, 800fa7a <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x11a>
 800fa6c:	691a      	ldr	r2, [r3, #16]
 800fa6e:	f022 0201 	bic.w	r2, r2, #1
 800fa72:	611a      	str	r2, [r3, #16]
 800fa74:	2000      	movs	r0, #0
 800fa76:	6020      	str	r0, [r4, #0]
 800fa78:	e7bb      	b.n	800f9f2 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x92>
 800fa7a:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800fa7c:	f022 0201 	bic.w	r2, r2, #1
 800fa80:	651a      	str	r2, [r3, #80]	; 0x50
 800fa82:	e7f7      	b.n	800fa74 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x114>
 800fa84:	20014e30 	andcs	r4, r1, r0, lsr lr
 800fa88:	20014e34 	andcs	r4, r1, r4, lsr lr
 800fa8c:	20014e40 	andcs	r4, r1, r0, asr #28
 800fa90:	1ffff700 	svcne	0x00fff700
 800fa94:	20014e3c 	andcs	r4, r1, ip, lsr lr
 800fa98:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 800fa9c:	40022000 	andmi	r2, r2, r0

0800faa0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)>:
 800faa0:	b570      	push	{r4, r5, r6, lr}
 800faa2:	2400      	movs	r4, #0
 800faa4:	9804      	ldr	r0, [sp, #16]
 800faa6:	6004      	str	r4, [r0, #0]
 800faa8:	4c48      	ldr	r4, [pc, #288]	; (800fbcc <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x12c>)
 800faaa:	6820      	ldr	r0, [r4, #0]
 800faac:	2804      	cmp	r0, #4
 800faae:	d848      	bhi.n	800fb42 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xa2>
 800fab0:	e8df f000 	tbb	[pc, r0]
 800fab4:	22847c03 	addcs	r7, r4, #768	; 0x300
 800fab8:	48450047 	stmdami	r5, {r0, r1, r2, r6}^
 800fabc:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800fac0:	6001      	str	r1, [r0, #0]
 800fac2:	4844      	ldr	r0, [pc, #272]	; (800fbd4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 800fac4:	6003      	str	r3, [r0, #0]
 800fac6:	4b44      	ldr	r3, [pc, #272]	; (800fbd8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 800fac8:	601a      	str	r2, [r3, #0]
 800faca:	4b44      	ldr	r3, [pc, #272]	; (800fbdc <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x13c>)
 800facc:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800fad0:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800fad4:	4b42      	ldr	r3, [pc, #264]	; (800fbe0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800fad6:	d807      	bhi.n	800fae8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x48>
 800fad8:	2201      	movs	r2, #1
 800fada:	701a      	strb	r2, [r3, #0]
 800fadc:	f004 f81c 	bl	8013b18 <fmc_bank0_unlock>
 800fae0:	2303      	movs	r3, #3
 800fae2:	6023      	str	r3, [r4, #0]
 800fae4:	2000      	movs	r0, #0
 800fae6:	e026      	b.n	800fb36 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x96>
 800fae8:	4a3e      	ldr	r2, [pc, #248]	; (800fbe4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x144>)
 800faea:	4291      	cmp	r1, r2
 800faec:	d3f4      	bcc.n	800fad8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x38>
 800faee:	2200      	movs	r2, #0
 800faf0:	701a      	strb	r2, [r3, #0]
 800faf2:	f004 f81f 	bl	8013b34 <fmc_bank1_unlock>
 800faf6:	e7f3      	b.n	800fae0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800faf8:	4d39      	ldr	r5, [pc, #228]	; (800fbe0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800fafa:	782b      	ldrb	r3, [r5, #0]
 800fafc:	b15b      	cbz	r3, 800fb16 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x76>
 800fafe:	f004 f837 	bl	8013b70 <fmc_bank0_state_get>
 800fb02:	2801      	cmp	r0, #1
 800fb04:	d0ee      	beq.n	800fae4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x44>
 800fb06:	7829      	ldrb	r1, [r5, #0]
 800fb08:	4b37      	ldr	r3, [pc, #220]	; (800fbe8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800fb0a:	b939      	cbnz	r1, 800fb1c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x7c>
 800fb0c:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800fb0e:	f022 0201 	bic.w	r2, r2, #1
 800fb12:	651a      	str	r2, [r3, #80]	; 0x50
 800fb14:	e006      	b.n	800fb24 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x84>
 800fb16:	f004 f83d 	bl	8013b94 <fmc_bank1_state_get>
 800fb1a:	e7f2      	b.n	800fb02 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x62>
 800fb1c:	691a      	ldr	r2, [r3, #16]
 800fb1e:	f022 0201 	bic.w	r2, r2, #1
 800fb22:	611a      	str	r2, [r3, #16]
 800fb24:	4b2c      	ldr	r3, [pc, #176]	; (800fbd8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 800fb26:	681b      	ldr	r3, [r3, #0]
 800fb28:	b94b      	cbnz	r3, 800fb3e <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x9e>
 800fb2a:	b129      	cbz	r1, 800fb38 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x98>
 800fb2c:	f004 f810 	bl	8013b50 <fmc_bank0_lock>
 800fb30:	2300      	movs	r3, #0
 800fb32:	2001      	movs	r0, #1
 800fb34:	6023      	str	r3, [r4, #0]
 800fb36:	bd70      	pop	{r4, r5, r6, pc}
 800fb38:	f004 f812 	bl	8013b60 <fmc_bank1_lock>
 800fb3c:	e7f8      	b.n	800fb30 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x90>
 800fb3e:	2304      	movs	r3, #4
 800fb40:	e7cf      	b.n	800fae2 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x42>
 800fb42:	4a25      	ldr	r2, [pc, #148]	; (800fbd8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 800fb44:	6813      	ldr	r3, [r2, #0]
 800fb46:	2b03      	cmp	r3, #3
 800fb48:	d91a      	bls.n	800fb80 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xe0>
 800fb4a:	4b25      	ldr	r3, [pc, #148]	; (800fbe0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800fb4c:	7819      	ldrb	r1, [r3, #0]
 800fb4e:	4b26      	ldr	r3, [pc, #152]	; (800fbe8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800fb50:	b189      	cbz	r1, 800fb76 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xd6>
 800fb52:	6919      	ldr	r1, [r3, #16]
 800fb54:	f041 0101 	orr.w	r1, r1, #1
 800fb58:	6119      	str	r1, [r3, #16]
 800fb5a:	4d1e      	ldr	r5, [pc, #120]	; (800fbd4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 800fb5c:	481c      	ldr	r0, [pc, #112]	; (800fbd0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x130>)
 800fb5e:	6829      	ldr	r1, [r5, #0]
 800fb60:	6803      	ldr	r3, [r0, #0]
 800fb62:	f851 6b04 	ldr.w	r6, [r1], #4
 800fb66:	f843 6b04 	str.w	r6, [r3], #4
 800fb6a:	6003      	str	r3, [r0, #0]
 800fb6c:	6813      	ldr	r3, [r2, #0]
 800fb6e:	6029      	str	r1, [r5, #0]
 800fb70:	3b04      	subs	r3, #4
 800fb72:	6013      	str	r3, [r2, #0]
 800fb74:	e7b4      	b.n	800fae0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800fb76:	6d19      	ldr	r1, [r3, #80]	; 0x50
 800fb78:	f041 0101 	orr.w	r1, r1, #1
 800fb7c:	6519      	str	r1, [r3, #80]	; 0x50
 800fb7e:	e7ec      	b.n	800fb5a <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xba>
 800fb80:	2b00      	cmp	r3, #0
 800fb82:	d0ad      	beq.n	800fae0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800fb84:	4b16      	ldr	r3, [pc, #88]	; (800fbe0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800fb86:	781a      	ldrb	r2, [r3, #0]
 800fb88:	4b17      	ldr	r3, [pc, #92]	; (800fbe8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800fb8a:	b152      	cbz	r2, 800fba2 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x102>
 800fb8c:	691a      	ldr	r2, [r3, #16]
 800fb8e:	f042 0201 	orr.w	r2, r2, #1
 800fb92:	611a      	str	r2, [r3, #16]
 800fb94:	4a0f      	ldr	r2, [pc, #60]	; (800fbd4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 800fb96:	4b0e      	ldr	r3, [pc, #56]	; (800fbd0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x130>)
 800fb98:	6812      	ldr	r2, [r2, #0]
 800fb9a:	681b      	ldr	r3, [r3, #0]
 800fb9c:	6812      	ldr	r2, [r2, #0]
 800fb9e:	601a      	str	r2, [r3, #0]
 800fba0:	e79e      	b.n	800fae0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800fba2:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800fba4:	f042 0201 	orr.w	r2, r2, #1
 800fba8:	651a      	str	r2, [r3, #80]	; 0x50
 800fbaa:	e7f3      	b.n	800fb94 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xf4>
 800fbac:	4b0c      	ldr	r3, [pc, #48]	; (800fbe0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800fbae:	781a      	ldrb	r2, [r3, #0]
 800fbb0:	4b0d      	ldr	r3, [pc, #52]	; (800fbe8 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800fbb2:	b132      	cbz	r2, 800fbc2 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x122>
 800fbb4:	691a      	ldr	r2, [r3, #16]
 800fbb6:	f022 0202 	bic.w	r2, r2, #2
 800fbba:	611a      	str	r2, [r3, #16]
 800fbbc:	2000      	movs	r0, #0
 800fbbe:	6020      	str	r0, [r4, #0]
 800fbc0:	e7b9      	b.n	800fb36 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x96>
 800fbc2:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800fbc4:	f022 0202 	bic.w	r2, r2, #2
 800fbc8:	651a      	str	r2, [r3, #80]	; 0x50
 800fbca:	e7f7      	b.n	800fbbc <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x11c>
 800fbcc:	20014e30 	andcs	r4, r1, r0, lsr lr
 800fbd0:	20014e2c 	andcs	r4, r1, ip, lsr #28
 800fbd4:	20014e38 	andcs	r4, r1, r8, lsr lr
 800fbd8:	20014e40 	andcs	r4, r1, r0, asr #28
 800fbdc:	1ffff700 	svcne	0x00fff700
 800fbe0:	20014e3c 	andcs	r4, r1, ip, lsr lr
 800fbe4:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 800fbe8:	40022000 	andmi	r2, r2, r0

0800fbec <net_set_ip>:
 800fbec:	b510      	push	{r4, lr}
 800fbee:	4c05      	ldr	r4, [pc, #20]	; (800fc04 <net_set_ip+0x18>)
 800fbf0:	6020      	str	r0, [r4, #0]
 800fbf2:	4621      	mov	r1, r4
 800fbf4:	4804      	ldr	r0, [pc, #16]	; (800fc08 <net_set_ip+0x1c>)
 800fbf6:	f7f7 fb91 	bl	800731c <arp_init>
 800fbfa:	4620      	mov	r0, r4
 800fbfc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fc00:	f002 b90a 	b.w	8011e18 <ip_set_ip>
 800fc04:	20014e44 	andcs	r4, r1, r4, asr #28
 800fc08:	20014e50 	andcs	r4, r1, r0, asr lr

0800fc0c <net_set_dhcp>:
 800fc0c:	b570      	push	{r4, r5, r6, lr}
 800fc0e:	2400      	movs	r4, #0
 800fc10:	4605      	mov	r5, r0
 800fc12:	7014      	strb	r4, [r2, #0]
 800fc14:	4616      	mov	r6, r2
 800fc16:	4810      	ldr	r0, [pc, #64]	; (800fc58 <net_set_dhcp+0x4c>)
 800fc18:	460a      	mov	r2, r1
 800fc1a:	4910      	ldr	r1, [pc, #64]	; (800fc5c <net_set_dhcp+0x50>)
 800fc1c:	f001 fedc 	bl	80119d8 <dhcp_client>
 800fc20:	42a0      	cmp	r0, r4
 800fc22:	da17      	bge.n	800fc54 <net_set_dhcp+0x48>
 800fc24:	480d      	ldr	r0, [pc, #52]	; (800fc5c <net_set_dhcp+0x50>)
 800fc26:	f000 f859 	bl	800fcdc <rfc3927>
 800fc2a:	7030      	strb	r0, [r6, #0]
 800fc2c:	490b      	ldr	r1, [pc, #44]	; (800fc5c <net_set_dhcp+0x50>)
 800fc2e:	480a      	ldr	r0, [pc, #40]	; (800fc58 <net_set_dhcp+0x4c>)
 800fc30:	f7f7 fb74 	bl	800731c <arp_init>
 800fc34:	4809      	ldr	r0, [pc, #36]	; (800fc5c <net_set_dhcp+0x50>)
 800fc36:	f002 f8ef 	bl	8011e18 <ip_set_ip>
 800fc3a:	4a08      	ldr	r2, [pc, #32]	; (800fc5c <net_set_dhcp+0x50>)
 800fc3c:	1e6b      	subs	r3, r5, #1
 800fc3e:	350b      	adds	r5, #11
 800fc40:	f812 1b01 	ldrb.w	r1, [r2], #1
 800fc44:	f803 1f01 	strb.w	r1, [r3, #1]!
 800fc48:	42ab      	cmp	r3, r5
 800fc4a:	d1f9      	bne.n	800fc40 <net_set_dhcp+0x34>
 800fc4c:	4b04      	ldr	r3, [pc, #16]	; (800fc60 <net_set_dhcp+0x54>)
 800fc4e:	4620      	mov	r0, r4
 800fc50:	701c      	strb	r4, [r3, #0]
 800fc52:	bd70      	pop	{r4, r5, r6, pc}
 800fc54:	2401      	movs	r4, #1
 800fc56:	e7e9      	b.n	800fc2c <net_set_dhcp+0x20>
 800fc58:	20014e50 	andcs	r4, r1, r0, asr lr
 800fc5c:	20014e44 	andcs	r4, r1, r4, asr #28
 800fc60:	20014e56 	andcs	r4, r1, r6, asr lr

0800fc64 <net_dhcp_release>:
 800fc64:	b508      	push	{r3, lr}
 800fc66:	f001 ffbf 	bl	8011be8 <dhcp_client_release>
 800fc6a:	2200      	movs	r2, #0
 800fc6c:	4b01      	ldr	r3, [pc, #4]	; (800fc74 <net_dhcp_release+0x10>)
 800fc6e:	701a      	strb	r2, [r3, #0]
 800fc70:	bd08      	pop	{r3, pc}
 800fc72:	bf00      	nop
 800fc74:	20014e56 	andcs	r4, r1, r6, asr lr

0800fc78 <net_set_zeroconf>:
 800fc78:	b538      	push	{r3, r4, r5, lr}
 800fc7a:	4604      	mov	r4, r0
 800fc7c:	480c      	ldr	r0, [pc, #48]	; (800fcb0 <net_set_zeroconf+0x38>)
 800fc7e:	f000 f82d 	bl	800fcdc <rfc3927>
 800fc82:	4605      	mov	r5, r0
 800fc84:	b190      	cbz	r0, 800fcac <net_set_zeroconf+0x34>
 800fc86:	490a      	ldr	r1, [pc, #40]	; (800fcb0 <net_set_zeroconf+0x38>)
 800fc88:	480a      	ldr	r0, [pc, #40]	; (800fcb4 <net_set_zeroconf+0x3c>)
 800fc8a:	f7f7 fb47 	bl	800731c <arp_init>
 800fc8e:	4808      	ldr	r0, [pc, #32]	; (800fcb0 <net_set_zeroconf+0x38>)
 800fc90:	f002 f8c2 	bl	8011e18 <ip_set_ip>
 800fc94:	4a06      	ldr	r2, [pc, #24]	; (800fcb0 <net_set_zeroconf+0x38>)
 800fc96:	1e63      	subs	r3, r4, #1
 800fc98:	340b      	adds	r4, #11
 800fc9a:	f812 1b01 	ldrb.w	r1, [r2], #1
 800fc9e:	f803 1f01 	strb.w	r1, [r3, #1]!
 800fca2:	42a3      	cmp	r3, r4
 800fca4:	d1f9      	bne.n	800fc9a <net_set_zeroconf+0x22>
 800fca6:	2200      	movs	r2, #0
 800fca8:	4b03      	ldr	r3, [pc, #12]	; (800fcb8 <net_set_zeroconf+0x40>)
 800fcaa:	701a      	strb	r2, [r3, #0]
 800fcac:	4628      	mov	r0, r5
 800fcae:	bd38      	pop	{r3, r4, r5, pc}
 800fcb0:	20014e44 	andcs	r4, r1, r4, asr #28
 800fcb4:	20014e50 	andcs	r4, r1, r0, asr lr
 800fcb8:	20014e56 	andcs	r4, r1, r6, asr lr

0800fcbc <net_timers_run>:
 800fcbc:	4b05      	ldr	r3, [pc, #20]	; (800fcd4 <net_timers_run+0x18>)
 800fcbe:	4a06      	ldr	r2, [pc, #24]	; (800fcd8 <net_timers_run+0x1c>)
 800fcc0:	681b      	ldr	r3, [r3, #0]
 800fcc2:	6811      	ldr	r1, [r2, #0]
 800fcc4:	4299      	cmp	r1, r3
 800fcc6:	d803      	bhi.n	800fcd0 <net_timers_run+0x14>
 800fcc8:	3364      	adds	r3, #100	; 0x64
 800fcca:	6013      	str	r3, [r2, #0]
 800fccc:	f002 b81a 	b.w	8011d04 <igmp_timer>
 800fcd0:	4770      	bx	lr
 800fcd2:	bf00      	nop
 800fcd4:	2001ce4c 	andcs	ip, r1, ip, asr #28
 800fcd8:	20014e5c 	andcs	r4, r1, ip, asr lr

0800fcdc <rfc3927>:
 800fcdc:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fce0:	4606      	mov	r6, r0
 800fce2:	25ff      	movs	r5, #255	; 0xff
 800fce4:	4b18      	ldr	r3, [pc, #96]	; (800fd48 <rfc3927+0x6c>)
 800fce6:	4f19      	ldr	r7, [pc, #100]	; (800fd4c <rfc3927+0x70>)
 800fce8:	791a      	ldrb	r2, [r3, #4]
 800fcea:	78dc      	ldrb	r4, [r3, #3]
 800fcec:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800fd50 <rfc3927+0x74>
 800fcf0:	eb04 2402 	add.w	r4, r4, r2, lsl #8
 800fcf4:	f8d7 9000 	ldr.w	r9, [r7]
 800fcf8:	f8df b058 	ldr.w	fp, [pc, #88]	; 800fd54 <rfc3927+0x78>
 800fcfc:	f8df a058 	ldr.w	sl, [pc, #88]	; 800fd58 <rfc3927+0x7c>
 800fd00:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
 800fd04:	4659      	mov	r1, fp
 800fd06:	4620      	mov	r0, r4
 800fd08:	f001 fd5c 	bl	80117c4 <arp_cache_lookup>
 800fd0c:	b190      	cbz	r0, 800fd34 <rfc3927+0x58>
 800fd0e:	ba24      	rev	r4, r4
 800fd10:	3401      	adds	r4, #1
 800fd12:	3d01      	subs	r5, #1
 800fd14:	ba24      	rev	r4, r4
 800fd16:	b2ad      	uxth	r5, r5
 800fd18:	4554      	cmp	r4, sl
 800fd1a:	bf08      	it	eq
 800fd1c:	4644      	moveq	r4, r8
 800fd1e:	b18d      	cbz	r5, 800fd44 <rfc3927+0x68>
 800fd20:	683b      	ldr	r3, [r7, #0]
 800fd22:	eba3 0309 	sub.w	r3, r3, r9
 800fd26:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800fd2a:	d3eb      	bcc.n	800fd04 <rfc3927+0x28>
 800fd2c:	2400      	movs	r4, #0
 800fd2e:	4623      	mov	r3, r4
 800fd30:	4620      	mov	r0, r4
 800fd32:	e002      	b.n	800fd3a <rfc3927+0x5e>
 800fd34:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800fd38:	2001      	movs	r0, #1
 800fd3a:	e9c6 3401 	strd	r3, r4, [r6, #4]
 800fd3e:	6034      	str	r4, [r6, #0]
 800fd40:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fd44:	462c      	mov	r4, r5
 800fd46:	e7f2      	b.n	800fd2e <rfc3927+0x52>
 800fd48:	20014e60 	andcs	r4, r1, r0, ror #28
 800fd4c:	2001ce4c 	andcs	ip, r1, ip, asr #28
 800fd50:	0100fea9 	smlatbeq	r0, r9, lr, pc	; <UNPREDICTABLE>
 800fd54:	20014e68 	andcs	r4, r1, r8, ror #28
 800fd58:	fffefea9 			; <UNDEFINED> instruction: 0xfffefea9

0800fd5c <_init_tcb>:
 800fd5c:	b510      	push	{r4, lr}
 800fd5e:	4603      	mov	r3, r0
 800fd60:	2400      	movs	r4, #0
 800fd62:	f100 0244 	add.w	r2, r0, #68	; 0x44
 800fd66:	4293      	cmp	r3, r2
 800fd68:	d10d      	bne.n	800fd86 <_init_tcb+0x2a>
 800fd6a:	4b08      	ldr	r3, [pc, #32]	; (800fd8c <_init_tcb+0x30>)
 800fd6c:	f640 3268 	movw	r2, #2920	; 0xb68
 800fd70:	681b      	ldr	r3, [r3, #0]
 800fd72:	8702      	strh	r2, [r0, #56]	; 0x38
 800fd74:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800fd78:	6283      	str	r3, [r0, #40]	; 0x28
 800fd7a:	6243      	str	r3, [r0, #36]	; 0x24
 800fd7c:	2301      	movs	r3, #1
 800fd7e:	8001      	strh	r1, [r0, #0]
 800fd80:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
 800fd84:	bd10      	pop	{r4, pc}
 800fd86:	f803 4b01 	strb.w	r4, [r3], #1
 800fd8a:	e7ec      	b.n	800fd66 <_init_tcb+0xa>
 800fd8c:	2001ce4c 	andcs	ip, r1, ip, asr #28

0800fd90 <memcpy.isra.0>:
 800fd90:	3801      	subs	r0, #1
 800fd92:	440a      	add	r2, r1
 800fd94:	4291      	cmp	r1, r2
 800fd96:	d100      	bne.n	800fd9a <memcpy.isra.0+0xa>
 800fd98:	4770      	bx	lr
 800fd9a:	f811 3b01 	ldrb.w	r3, [r1], #1
 800fd9e:	f800 3f01 	strb.w	r3, [r0, #1]!
 800fda2:	e7f7      	b.n	800fd94 <memcpy.isra.0+0x4>

0800fda4 <_bswap32>:
 800fda4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800fda6:	2204      	movs	r2, #4
 800fda8:	f100 052a 	add.w	r5, r0, #42	; 0x2a
 800fdac:	4629      	mov	r1, r5
 800fdae:	4604      	mov	r4, r0
 800fdb0:	eb0d 0002 	add.w	r0, sp, r2
 800fdb4:	f7ff ffec 	bl	800fd90 <memcpy.isra.0>
 800fdb8:	2204      	movs	r2, #4
 800fdba:	9b01      	ldr	r3, [sp, #4]
 800fdbc:	eb0d 0102 	add.w	r1, sp, r2
 800fdc0:	ba1b      	rev	r3, r3
 800fdc2:	4628      	mov	r0, r5
 800fdc4:	9301      	str	r3, [sp, #4]
 800fdc6:	f7ff ffe3 	bl	800fd90 <memcpy.isra.0>
 800fdca:	2204      	movs	r2, #4
 800fdcc:	3426      	adds	r4, #38	; 0x26
 800fdce:	eb0d 0002 	add.w	r0, sp, r2
 800fdd2:	4621      	mov	r1, r4
 800fdd4:	f7ff ffdc 	bl	800fd90 <memcpy.isra.0>
 800fdd8:	2204      	movs	r2, #4
 800fdda:	9b01      	ldr	r3, [sp, #4]
 800fddc:	4620      	mov	r0, r4
 800fdde:	ba1b      	rev	r3, r3
 800fde0:	eb0d 0102 	add.w	r1, sp, r2
 800fde4:	9301      	str	r3, [sp, #4]
 800fde6:	f7ff ffd3 	bl	800fd90 <memcpy.isra.0>
 800fdea:	b003      	add	sp, #12
 800fdec:	bd30      	pop	{r4, r5, pc}
	...

0800fdf0 <_tcp_send_package>:
 800fdf0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800fdf4:	7a0b      	ldrb	r3, [r1, #8]
 800fdf6:	4605      	mov	r5, r0
 800fdf8:	f013 0f02 	tst.w	r3, #2
 800fdfc:	bf0c      	ite	eq
 800fdfe:	f04f 0805 	moveq.w	r8, #5
 800fe02:	f04f 0806 	movne.w	r8, #6
 800fe06:	f04f 0a00 	mov.w	sl, #0
 800fe0a:	4c47      	ldr	r4, [pc, #284]	; (800ff28 <_tcp_send_package+0x138>)
 800fe0c:	460f      	mov	r7, r1
 800fe0e:	8e06      	ldrh	r6, [r0, #48]	; 0x30
 800fe10:	f100 0108 	add.w	r1, r0, #8
 800fe14:	2206      	movs	r2, #6
 800fe16:	4620      	mov	r0, r4
 800fe18:	f7ff ffba 	bl	800fd90 <memcpy.isra.0>
 800fe1c:	4a43      	ldr	r2, [pc, #268]	; (800ff2c <_tcp_send_package+0x13c>)
 800fe1e:	eb06 0688 	add.w	r6, r6, r8, lsl #2
 800fe22:	8813      	ldrh	r3, [r2, #0]
 800fe24:	b2b6      	uxth	r6, r6
 800fe26:	1c59      	adds	r1, r3, #1
 800fe28:	8263      	strh	r3, [r4, #18]
 800fe2a:	f105 0904 	add.w	r9, r5, #4
 800fe2e:	f106 0314 	add.w	r3, r6, #20
 800fe32:	ba5b      	rev16	r3, r3
 800fe34:	8011      	strh	r1, [r2, #0]
 800fe36:	f104 001e 	add.w	r0, r4, #30
 800fe3a:	2204      	movs	r2, #4
 800fe3c:	4649      	mov	r1, r9
 800fe3e:	8223      	strh	r3, [r4, #16]
 800fe40:	f7ff ffa6 	bl	800fd90 <memcpy.isra.0>
 800fe44:	2114      	movs	r1, #20
 800fe46:	f104 000e 	add.w	r0, r4, #14
 800fe4a:	f8a4 a018 	strh.w	sl, [r4, #24]
 800fe4e:	f001 ffec 	bl	8011e2a <net_chksum>
 800fe52:	882b      	ldrh	r3, [r5, #0]
 800fe54:	ea4f 1808 	mov.w	r8, r8, lsl #4
 800fe58:	8463      	strh	r3, [r4, #34]	; 0x22
 800fe5a:	886b      	ldrh	r3, [r5, #2]
 800fe5c:	8320      	strh	r0, [r4, #24]
 800fe5e:	84a3      	strh	r3, [r4, #36]	; 0x24
 800fe60:	683b      	ldr	r3, [r7, #0]
 800fe62:	8f2a      	ldrh	r2, [r5, #56]	; 0x38
 800fe64:	f8c4 3026 	str.w	r3, [r4, #38]	; 0x26
 800fe68:	687b      	ldr	r3, [r7, #4]
 800fe6a:	f884 802e 	strb.w	r8, [r4, #46]	; 0x2e
 800fe6e:	f8c4 302a 	str.w	r3, [r4, #42]	; 0x2a
 800fe72:	7a3b      	ldrb	r3, [r7, #8]
 800fe74:	8622      	strh	r2, [r4, #48]	; 0x30
 800fe76:	f884 302f 	strb.w	r3, [r4, #47]	; 0x2f
 800fe7a:	079b      	lsls	r3, r3, #30
 800fe7c:	bf48      	it	mi
 800fe7e:	f240 4302 	movwmi	r3, #1026	; 0x402
 800fe82:	8baa      	ldrh	r2, [r5, #28]
 800fe84:	bf48      	it	mi
 800fe86:	86e3      	strhmi	r3, [r4, #54]	; 0x36
 800fe88:	86a2      	strh	r2, [r4, #52]	; 0x34
 800fe8a:	bf42      	ittt	mi
 800fe8c:	f24b 4305 	movwmi	r3, #46085	; 0xb405
 800fe90:	4622      	movmi	r2, r4
 800fe92:	f822 3f38 	strhmi.w	r3, [r2, #56]!
 800fe96:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800fe98:	f8a4 a032 	strh.w	sl, [r4, #50]	; 0x32
 800fe9c:	bf58      	it	pl
 800fe9e:	f104 0236 	addpl.w	r2, r4, #54	; 0x36
 800fea2:	2b00      	cmp	r3, #0
 800fea4:	d13e      	bne.n	800ff24 <_tcp_send_package+0x134>
 800fea6:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 800fea8:	481f      	ldr	r0, [pc, #124]	; (800ff28 <_tcp_send_package+0x138>)
 800feaa:	ba5b      	rev16	r3, r3
 800feac:	8463      	strh	r3, [r4, #34]	; 0x22
 800feae:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 800feb0:	ba5b      	rev16	r3, r3
 800feb2:	84a3      	strh	r3, [r4, #36]	; 0x24
 800feb4:	f7ff ff76 	bl	800fda4 <_bswap32>
 800feb8:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800feba:	a801      	add	r0, sp, #4
 800febc:	ba5b      	rev16	r3, r3
 800febe:	8623      	strh	r3, [r4, #48]	; 0x30
 800fec0:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800fec2:	220c      	movs	r2, #12
 800fec4:	ba5b      	rev16	r3, r3
 800fec6:	491a      	ldr	r1, [pc, #104]	; (800ff30 <_tcp_send_package+0x140>)
 800fec8:	86a3      	strh	r3, [r4, #52]	; 0x34
 800feca:	f7ff ff61 	bl	800fd90 <memcpy.isra.0>
 800fece:	2204      	movs	r2, #4
 800fed0:	4918      	ldr	r1, [pc, #96]	; (800ff34 <_tcp_send_package+0x144>)
 800fed2:	4817      	ldr	r0, [pc, #92]	; (800ff30 <_tcp_send_package+0x140>)
 800fed4:	f7ff ff5c 	bl	800fd90 <memcpy.isra.0>
 800fed8:	2204      	movs	r2, #4
 800feda:	4649      	mov	r1, r9
 800fedc:	4816      	ldr	r0, [pc, #88]	; (800ff38 <_tcp_send_package+0x148>)
 800fede:	f7ff ff57 	bl	800fd90 <memcpy.isra.0>
 800fee2:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 800fee6:	f106 010c 	add.w	r1, r6, #12
 800feea:	83e3      	strh	r3, [r4, #30]
 800feec:	4810      	ldr	r0, [pc, #64]	; (800ff30 <_tcp_send_package+0x140>)
 800feee:	ba73      	rev16	r3, r6
 800fef0:	8423      	strh	r3, [r4, #32]
 800fef2:	f001 ff9a 	bl	8011e2a <net_chksum>
 800fef6:	a901      	add	r1, sp, #4
 800fef8:	4605      	mov	r5, r0
 800fefa:	220c      	movs	r2, #12
 800fefc:	480c      	ldr	r0, [pc, #48]	; (800ff30 <_tcp_send_package+0x140>)
 800fefe:	f7ff ff47 	bl	800fd90 <memcpy.isra.0>
 800ff02:	4809      	ldr	r0, [pc, #36]	; (800ff28 <_tcp_send_package+0x138>)
 800ff04:	f106 0122 	add.w	r1, r6, #34	; 0x22
 800ff08:	8665      	strh	r5, [r4, #50]	; 0x32
 800ff0a:	b004      	add	sp, #16
 800ff0c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ff10:	f004 bb92 	b.w	8014638 <emac_eth_send>
 800ff14:	6ae9      	ldr	r1, [r5, #44]	; 0x2c
 800ff16:	5cc9      	ldrb	r1, [r1, r3]
 800ff18:	54d1      	strb	r1, [r2, r3]
 800ff1a:	3301      	adds	r3, #1
 800ff1c:	8e29      	ldrh	r1, [r5, #48]	; 0x30
 800ff1e:	4299      	cmp	r1, r3
 800ff20:	d8f8      	bhi.n	800ff14 <_tcp_send_package+0x124>
 800ff22:	e7c0      	b.n	800fea6 <_tcp_send_package+0xb6>
 800ff24:	2300      	movs	r3, #0
 800ff26:	e7f9      	b.n	800ff1c <_tcp_send_package+0x12c>
 800ff28:	20015a28 	andcs	r5, r1, r8, lsr #20
 800ff2c:	20014e70 	andcs	r4, r1, r0, ror lr
 800ff30:	20015a3e 	andcs	r5, r1, lr, lsr sl
 800ff34:	20014e44 	andcs	r4, r1, r4, asr #28
 800ff38:	20015a42 	andcs	r5, r1, r2, asr #20

0800ff3c <_send_reset>:
 800ff3c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800ff3e:	f890 302f 	ldrb.w	r3, [r0, #47]	; 0x2f
 800ff42:	4604      	mov	r4, r0
 800ff44:	075a      	lsls	r2, r3, #29
 800ff46:	460e      	mov	r6, r1
 800ff48:	d421      	bmi.n	800ff8e <_send_reset+0x52>
 800ff4a:	2204      	movs	r2, #4
 800ff4c:	f013 0310 	ands.w	r3, r3, #16
 800ff50:	f88d 200c 	strb.w	r2, [sp, #12]
 800ff54:	d01d      	beq.n	800ff92 <_send_reset+0x56>
 800ff56:	f100 012a 	add.w	r1, r0, #42	; 0x2a
 800ff5a:	4668      	mov	r0, sp
 800ff5c:	f7ff ff18 	bl	800fd90 <memcpy.isra.0>
 800ff60:	9b00      	ldr	r3, [sp, #0]
 800ff62:	9301      	str	r3, [sp, #4]
 800ff64:	f894 302f 	ldrb.w	r3, [r4, #47]	; 0x2f
 800ff68:	4668      	mov	r0, sp
 800ff6a:	f3c3 0540 	ubfx	r5, r3, #1, #1
 800ff6e:	f104 0126 	add.w	r1, r4, #38	; 0x26
 800ff72:	07db      	lsls	r3, r3, #31
 800ff74:	f04f 0204 	mov.w	r2, #4
 800ff78:	bf48      	it	mi
 800ff7a:	3501      	addmi	r5, #1
 800ff7c:	f7ff ff08 	bl	800fd90 <memcpy.isra.0>
 800ff80:	9b00      	ldr	r3, [sp, #0]
 800ff82:	4630      	mov	r0, r6
 800ff84:	441d      	add	r5, r3
 800ff86:	a901      	add	r1, sp, #4
 800ff88:	9502      	str	r5, [sp, #8]
 800ff8a:	f7ff ff31 	bl	800fdf0 <_tcp_send_package>
 800ff8e:	b004      	add	sp, #16
 800ff90:	bd70      	pop	{r4, r5, r6, pc}
 800ff92:	9301      	str	r3, [sp, #4]
 800ff94:	2314      	movs	r3, #20
 800ff96:	f88d 300c 	strb.w	r3, [sp, #12]
 800ff9a:	e7e3      	b.n	800ff64 <_send_reset+0x28>

0800ff9c <tcp_begin>:
 800ff9c:	b508      	push	{r3, lr}
 800ff9e:	4b0a      	ldr	r3, [pc, #40]	; (800ffc8 <tcp_begin+0x2c>)
 800ffa0:	4601      	mov	r1, r0
 800ffa2:	881a      	ldrh	r2, [r3, #0]
 800ffa4:	4282      	cmp	r2, r0
 800ffa6:	d102      	bne.n	800ffae <tcp_begin+0x12>
 800ffa8:	f893 0040 	ldrb.w	r0, [r3, #64]	; 0x40
 800ffac:	b130      	cbz	r0, 800ffbc <tcp_begin+0x20>
 800ffae:	b12a      	cbz	r2, 800ffbc <tcp_begin+0x20>
 800ffb0:	4806      	ldr	r0, [pc, #24]	; (800ffcc <tcp_begin+0x30>)
 800ffb2:	f003 f8cb 	bl	801314c <console_error>
 800ffb6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800ffba:	bd08      	pop	{r3, pc}
 800ffbc:	4802      	ldr	r0, [pc, #8]	; (800ffc8 <tcp_begin+0x2c>)
 800ffbe:	8019      	strh	r1, [r3, #0]
 800ffc0:	f7ff fecc 	bl	800fd5c <_init_tcb>
 800ffc4:	2000      	movs	r0, #0
 800ffc6:	e7f8      	b.n	800ffba <tcp_begin+0x1e>
 800ffc8:	200159e4 	andcs	r5, r1, r4, ror #19
 800ffcc:	080174a6 	stmdaeq	r1, {r1, r2, r5, r7, sl, ip, sp, lr}

0800ffd0 <tcp_write>:
 800ffd0:	f240 53b4 	movw	r3, #1460	; 0x5b4
 800ffd4:	429a      	cmp	r2, r3
 800ffd6:	bf28      	it	cs
 800ffd8:	461a      	movcs	r2, r3
 800ffda:	2344      	movs	r3, #68	; 0x44
 800ffdc:	b530      	push	{r4, r5, lr}
 800ffde:	4c0d      	ldr	r4, [pc, #52]	; (8010014 <tcp_write+0x44>)
 800ffe0:	b085      	sub	sp, #20
 800ffe2:	fb03 4400 	mla	r4, r3, r0, r4
 800ffe6:	6963      	ldr	r3, [r4, #20]
 800ffe8:	62e1      	str	r1, [r4, #44]	; 0x2c
 800ffea:	9301      	str	r3, [sp, #4]
 800ffec:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800ffee:	4620      	mov	r0, r4
 800fff0:	9302      	str	r3, [sp, #8]
 800fff2:	2318      	movs	r3, #24
 800fff4:	8622      	strh	r2, [r4, #48]	; 0x30
 800fff6:	a901      	add	r1, sp, #4
 800fff8:	4615      	mov	r5, r2
 800fffa:	f88d 300c 	strb.w	r3, [sp, #12]
 800fffe:	f7ff fef7 	bl	800fdf0 <_tcp_send_package>
 8010002:	2300      	movs	r3, #0
 8010004:	62e3      	str	r3, [r4, #44]	; 0x2c
 8010006:	8623      	strh	r3, [r4, #48]	; 0x30
 8010008:	6963      	ldr	r3, [r4, #20]
 801000a:	442b      	add	r3, r5
 801000c:	6163      	str	r3, [r4, #20]
 801000e:	b005      	add	sp, #20
 8010010:	bd30      	pop	{r4, r5, pc}
 8010012:	bf00      	nop
 8010014:	200159e4 	andcs	r5, r1, r4, ror #19

08010018 <tcp_read>:
 8010018:	2344      	movs	r3, #68	; 0x44
 801001a:	b5f0      	push	{r4, r5, r6, r7, lr}
 801001c:	4c1c      	ldr	r4, [pc, #112]	; (8010090 <tcp_read+0x78>)
 801001e:	b085      	sub	sp, #20
 8010020:	fb03 4400 	mla	r4, r3, r0, r4
 8010024:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8010028:	2b07      	cmp	r3, #7
 801002a:	d112      	bne.n	8010052 <tcp_read+0x3a>
 801002c:	6963      	ldr	r3, [r4, #20]
 801002e:	4620      	mov	r0, r4
 8010030:	9301      	str	r3, [sp, #4]
 8010032:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8010034:	a901      	add	r1, sp, #4
 8010036:	9302      	str	r3, [sp, #8]
 8010038:	2311      	movs	r3, #17
 801003a:	f88d 300c 	strb.w	r3, [sp, #12]
 801003e:	f7ff fed7 	bl	800fdf0 <_tcp_send_package>
 8010042:	2309      	movs	r3, #9
 8010044:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8010048:	6963      	ldr	r3, [r4, #20]
 801004a:	3301      	adds	r3, #1
 801004c:	6163      	str	r3, [r4, #20]
 801004e:	2000      	movs	r0, #0
 8010050:	e01b      	b.n	801008a <tcp_read+0x72>
 8010052:	f44f 6337 	mov.w	r3, #2928	; 0xb70
 8010056:	4358      	muls	r0, r3
 8010058:	4a0e      	ldr	r2, [pc, #56]	; (8010094 <tcp_read+0x7c>)
 801005a:	1817      	adds	r7, r2, r0
 801005c:	887b      	ldrh	r3, [r7, #2]
 801005e:	5a15      	ldrh	r5, [r2, r0]
 8010060:	429d      	cmp	r5, r3
 8010062:	d0f4      	beq.n	801004e <tcp_read+0x36>
 8010064:	f240 55b6 	movw	r5, #1462	; 0x5b6
 8010068:	435d      	muls	r5, r3
 801006a:	1d06      	adds	r6, r0, #4
 801006c:	442e      	add	r6, r5
 801006e:	4416      	add	r6, r2
 8010070:	4405      	add	r5, r0
 8010072:	600e      	str	r6, [r1, #0]
 8010074:	442a      	add	r2, r5
 8010076:	f8b2 05b8 	ldrh.w	r0, [r2, #1464]	; 0x5b8
 801007a:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 801007c:	3301      	adds	r3, #1
 801007e:	f202 52b4 	addw	r2, r2, #1460	; 0x5b4
 8010082:	f003 0301 	and.w	r3, r3, #1
 8010086:	8722      	strh	r2, [r4, #56]	; 0x38
 8010088:	807b      	strh	r3, [r7, #2]
 801008a:	b005      	add	sp, #20
 801008c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801008e:	bf00      	nop
 8010090:	200159e4 	andcs	r5, r1, r4, ror #19
 8010094:	20014e74 	andcs	r4, r1, r4, ror lr

08010098 <memcpy.isra.0>:
 8010098:	3801      	subs	r0, #1
 801009a:	440a      	add	r2, r1
 801009c:	4291      	cmp	r1, r2
 801009e:	d100      	bne.n	80100a2 <memcpy.isra.0+0xa>
 80100a0:	4770      	bx	lr
 80100a2:	f811 3b01 	ldrb.w	r3, [r1], #1
 80100a6:	f800 3f01 	strb.w	r3, [r0, #1]!
 80100aa:	e7f7      	b.n	801009c <memcpy.isra.0+0x4>

080100ac <net_memcpy>:
 80100ac:	ea40 0301 	orr.w	r3, r0, r1
 80100b0:	079b      	lsls	r3, r3, #30
 80100b2:	b570      	push	{r4, r5, r6, lr}
 80100b4:	d108      	bne.n	80100c8 <net_memcpy+0x1c>
 80100b6:	f022 0303 	bic.w	r3, r2, #3
 80100ba:	1f04      	subs	r4, r0, #4
 80100bc:	18cd      	adds	r5, r1, r3
 80100be:	42a9      	cmp	r1, r5
 80100c0:	d108      	bne.n	80100d4 <net_memcpy+0x28>
 80100c2:	1ad2      	subs	r2, r2, r3
 80100c4:	4403      	add	r3, r0
 80100c6:	e000      	b.n	80100ca <net_memcpy+0x1e>
 80100c8:	4603      	mov	r3, r0
 80100ca:	3b01      	subs	r3, #1
 80100cc:	440a      	add	r2, r1
 80100ce:	4291      	cmp	r1, r2
 80100d0:	d105      	bne.n	80100de <net_memcpy+0x32>
 80100d2:	bd70      	pop	{r4, r5, r6, pc}
 80100d4:	f851 6b04 	ldr.w	r6, [r1], #4
 80100d8:	f844 6f04 	str.w	r6, [r4, #4]!
 80100dc:	e7ef      	b.n	80100be <net_memcpy+0x12>
 80100de:	f811 4b01 	ldrb.w	r4, [r1], #1
 80100e2:	f803 4f01 	strb.w	r4, [r3, #1]!
 80100e6:	e7f2      	b.n	80100ce <net_memcpy+0x22>

080100e8 <udp_set_ip>:
 80100e8:	2204      	movs	r2, #4
 80100ea:	b513      	push	{r0, r1, r4, lr}
 80100ec:	4604      	mov	r4, r0
 80100ee:	6803      	ldr	r3, [r0, #0]
 80100f0:	eb0d 0102 	add.w	r1, sp, r2
 80100f4:	4808      	ldr	r0, [pc, #32]	; (8010118 <udp_set_ip+0x30>)
 80100f6:	9301      	str	r3, [sp, #4]
 80100f8:	f7ff ffce 	bl	8010098 <memcpy.isra.0>
 80100fc:	6862      	ldr	r2, [r4, #4]
 80100fe:	4b07      	ldr	r3, [pc, #28]	; (801011c <udp_set_ip+0x34>)
 8010100:	43d1      	mvns	r1, r2
 8010102:	6019      	str	r1, [r3, #0]
 8010104:	6823      	ldr	r3, [r4, #0]
 8010106:	4013      	ands	r3, r2
 8010108:	4a05      	ldr	r2, [pc, #20]	; (8010120 <udp_set_ip+0x38>)
 801010a:	6013      	str	r3, [r2, #0]
 801010c:	68a2      	ldr	r2, [r4, #8]
 801010e:	4b05      	ldr	r3, [pc, #20]	; (8010124 <udp_set_ip+0x3c>)
 8010110:	601a      	str	r2, [r3, #0]
 8010112:	b002      	add	sp, #8
 8010114:	bd10      	pop	{r4, pc}
 8010116:	bf00      	nop
 8010118:	2001bcfe 	strdcs	fp, [r1], -lr
 801011c:	20016014 	andcs	r6, r1, r4, lsl r0
 8010120:	2001601c 	andcs	r6, r1, ip, lsl r0
 8010124:	20016018 	andcs	r6, r1, r8, lsl r0

08010128 <udp_bind>:
 8010128:	4a0a      	ldr	r2, [pc, #40]	; (8010154 <udp_bind+0x2c>)
 801012a:	4603      	mov	r3, r0
 801012c:	b510      	push	{r4, lr}
 801012e:	2000      	movs	r0, #0
 8010130:	4614      	mov	r4, r2
 8010132:	f852 1b04 	ldr.w	r1, [r2], #4
 8010136:	4299      	cmp	r1, r3
 8010138:	d008      	beq.n	801014c <udp_bind+0x24>
 801013a:	b141      	cbz	r1, 801014e <udp_bind+0x26>
 801013c:	3001      	adds	r0, #1
 801013e:	2808      	cmp	r0, #8
 8010140:	d1f7      	bne.n	8010132 <udp_bind+0xa>
 8010142:	4805      	ldr	r0, [pc, #20]	; (8010158 <udp_bind+0x30>)
 8010144:	f003 f802 	bl	801314c <console_error>
 8010148:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801014c:	bd10      	pop	{r4, pc}
 801014e:	f844 3020 	str.w	r3, [r4, r0, lsl #2]
 8010152:	e7fb      	b.n	801014c <udp_bind+0x24>
 8010154:	20016024 	andcs	r6, r1, r4, lsr #32
 8010158:	080174c6 	stmdaeq	r1, {r1, r2, r6, r7, sl, ip, sp, lr}

0801015c <udp_unbind>:
 801015c:	4a0c      	ldr	r2, [pc, #48]	; (8010190 <udp_unbind+0x34>)
 801015e:	2300      	movs	r3, #0
 8010160:	4611      	mov	r1, r2
 8010162:	b510      	push	{r4, lr}
 8010164:	f852 4b04 	ldr.w	r4, [r2], #4
 8010168:	4284      	cmp	r4, r0
 801016a:	d108      	bne.n	801017e <udp_unbind+0x22>
 801016c:	2000      	movs	r0, #0
 801016e:	f640 3294 	movw	r2, #2964	; 0xb94
 8010172:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 8010176:	4353      	muls	r3, r2
 8010178:	4a06      	ldr	r2, [pc, #24]	; (8010194 <udp_unbind+0x38>)
 801017a:	50d0      	str	r0, [r2, r3]
 801017c:	bd10      	pop	{r4, pc}
 801017e:	3301      	adds	r3, #1
 8010180:	2b08      	cmp	r3, #8
 8010182:	d1ef      	bne.n	8010164 <udp_unbind+0x8>
 8010184:	4804      	ldr	r0, [pc, #16]	; (8010198 <udp_unbind+0x3c>)
 8010186:	f002 ffe1 	bl	801314c <console_error>
 801018a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801018e:	e7f5      	b.n	801017c <udp_unbind+0x20>
 8010190:	20016024 	andcs	r6, r1, r4, lsr #32
 8010194:	20016044 	andcs	r6, r1, r4, asr #32
 8010198:	080174cb 	stmdaeq	r1, {r0, r1, r3, r6, r7, sl, ip, sp, lr}

0801019c <udp_recv>:
 801019c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80101a0:	4604      	mov	r4, r0
 80101a2:	4698      	mov	r8, r3
 80101a4:	f640 3394 	movw	r3, #2964	; 0xb94
 80101a8:	435c      	muls	r4, r3
 80101aa:	4608      	mov	r0, r1
 80101ac:	4915      	ldr	r1, [pc, #84]	; (8010204 <udp_recv+0x68>)
 80101ae:	190f      	adds	r7, r1, r4
 80101b0:	f8b7 c002 	ldrh.w	ip, [r7, #2]
 80101b4:	5b0b      	ldrh	r3, [r1, r4]
 80101b6:	4563      	cmp	r3, ip
 80101b8:	d021      	beq.n	80101fe <udp_recv+0x62>
 80101ba:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 80101be:	fb03 fc0c 	mul.w	ip, r3, ip
 80101c2:	eb0c 0604 	add.w	r6, ip, r4
 80101c6:	440e      	add	r6, r1
 80101c8:	f8b6 55ca 	ldrh.w	r5, [r6, #1482]	; 0x5ca
 80101cc:	3404      	adds	r4, #4
 80101ce:	4295      	cmp	r5, r2
 80101d0:	bf28      	it	cs
 80101d2:	4615      	movcs	r5, r2
 80101d4:	4464      	add	r4, ip
 80101d6:	462a      	mov	r2, r5
 80101d8:	4421      	add	r1, r4
 80101da:	f7ff ff67 	bl	80100ac <net_memcpy>
 80101de:	f8d6 35c4 	ldr.w	r3, [r6, #1476]	; 0x5c4
 80101e2:	f8c8 3000 	str.w	r3, [r8]
 80101e6:	f8b6 25c8 	ldrh.w	r2, [r6, #1480]	; 0x5c8
 80101ea:	9b06      	ldr	r3, [sp, #24]
 80101ec:	801a      	strh	r2, [r3, #0]
 80101ee:	887b      	ldrh	r3, [r7, #2]
 80101f0:	3301      	adds	r3, #1
 80101f2:	f003 0301 	and.w	r3, r3, #1
 80101f6:	807b      	strh	r3, [r7, #2]
 80101f8:	4628      	mov	r0, r5
 80101fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80101fe:	2500      	movs	r5, #0
 8010200:	e7fa      	b.n	80101f8 <udp_recv+0x5c>
 8010202:	bf00      	nop
 8010204:	20016044 	andcs	r6, r1, r4, asr #32

08010208 <udp_recv2>:
 8010208:	b5f0      	push	{r4, r5, r6, r7, lr}
 801020a:	f640 3594 	movw	r5, #2964	; 0xb94
 801020e:	4368      	muls	r0, r5
 8010210:	4c0f      	ldr	r4, [pc, #60]	; (8010250 <udp_recv2+0x48>)
 8010212:	1827      	adds	r7, r4, r0
 8010214:	887d      	ldrh	r5, [r7, #2]
 8010216:	5a26      	ldrh	r6, [r4, r0]
 8010218:	42ae      	cmp	r6, r5
 801021a:	d017      	beq.n	801024c <udp_recv2+0x44>
 801021c:	f44f 6cb9 	mov.w	ip, #1480	; 0x5c8
 8010220:	fb0c f505 	mul.w	r5, ip, r5
 8010224:	1d06      	adds	r6, r0, #4
 8010226:	442e      	add	r6, r5
 8010228:	4405      	add	r5, r0
 801022a:	4426      	add	r6, r4
 801022c:	442c      	add	r4, r5
 801022e:	600e      	str	r6, [r1, #0]
 8010230:	f8d4 15c4 	ldr.w	r1, [r4, #1476]	; 0x5c4
 8010234:	6011      	str	r1, [r2, #0]
 8010236:	f8b4 25c8 	ldrh.w	r2, [r4, #1480]	; 0x5c8
 801023a:	801a      	strh	r2, [r3, #0]
 801023c:	887b      	ldrh	r3, [r7, #2]
 801023e:	f8b4 05ca 	ldrh.w	r0, [r4, #1482]	; 0x5ca
 8010242:	3301      	adds	r3, #1
 8010244:	f003 0301 	and.w	r3, r3, #1
 8010248:	807b      	strh	r3, [r7, #2]
 801024a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801024c:	2000      	movs	r0, #0
 801024e:	e7fc      	b.n	801024a <udp_recv2+0x42>
 8010250:	20016044 	andcs	r6, r1, r4, asr #32

08010254 <udp_send>:
 8010254:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8010258:	f8df 9130 	ldr.w	r9, [pc, #304]	; 801038c <udp_send+0x138>
 801025c:	461c      	mov	r4, r3
 801025e:	f859 3020 	ldr.w	r3, [r9, r0, lsl #2]
 8010262:	4607      	mov	r7, r0
 8010264:	4688      	mov	r8, r1
 8010266:	4616      	mov	r6, r2
 8010268:	2b00      	cmp	r3, #0
 801026a:	f000 808b 	beq.w	8010384 <udp_send+0x130>
 801026e:	1c63      	adds	r3, r4, #1
 8010270:	d141      	bne.n	80102f6 <udp_send+0xa2>
 8010272:	4a47      	ldr	r2, [pc, #284]	; (8010390 <udp_send+0x13c>)
 8010274:	2307      	movs	r3, #7
 8010276:	4611      	mov	r1, r2
 8010278:	20ff      	movs	r0, #255	; 0xff
 801027a:	e001      	b.n	8010280 <udp_send+0x2c>
 801027c:	f802 0b01 	strb.w	r0, [r2], #1
 8010280:	3b01      	subs	r3, #1
 8010282:	d1fb      	bne.n	801027c <udp_send+0x28>
 8010284:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8010288:	83cb      	strh	r3, [r1, #30]
 801028a:	840b      	strh	r3, [r1, #32]
 801028c:	2500      	movs	r5, #0
 801028e:	f8df a104 	ldr.w	sl, [pc, #260]	; 8010394 <udp_send+0x140>
 8010292:	4c3f      	ldr	r4, [pc, #252]	; (8010390 <udp_send+0x13c>)
 8010294:	f8ba 3000 	ldrh.w	r3, [sl]
 8010298:	2114      	movs	r1, #20
 801029a:	8263      	strh	r3, [r4, #18]
 801029c:	f106 031c 	add.w	r3, r6, #28
 80102a0:	ba5b      	rev16	r3, r3
 80102a2:	f104 000e 	add.w	r0, r4, #14
 80102a6:	8223      	strh	r3, [r4, #16]
 80102a8:	8325      	strh	r5, [r4, #24]
 80102aa:	f001 fdbe 	bl	8011e2a <net_chksum>
 80102ae:	f859 3027 	ldr.w	r3, [r9, r7, lsl #2]
 80102b2:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 80102b6:	ba5b      	rev16	r3, r3
 80102b8:	8463      	strh	r3, [r4, #34]	; 0x22
 80102ba:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 80102be:	4632      	mov	r2, r6
 80102c0:	ba5b      	rev16	r3, r3
 80102c2:	84a3      	strh	r3, [r4, #36]	; 0x24
 80102c4:	f106 0308 	add.w	r3, r6, #8
 80102c8:	ba5b      	rev16	r3, r3
 80102ca:	bf28      	it	cs
 80102cc:	f44f 62b8 	movcs.w	r2, #1472	; 0x5c0
 80102d0:	4641      	mov	r1, r8
 80102d2:	8320      	strh	r0, [r4, #24]
 80102d4:	f104 002a 	add.w	r0, r4, #42	; 0x2a
 80102d8:	84e3      	strh	r3, [r4, #38]	; 0x26
 80102da:	f7ff fee7 	bl	80100ac <net_memcpy>
 80102de:	4620      	mov	r0, r4
 80102e0:	f106 012a 	add.w	r1, r6, #42	; 0x2a
 80102e4:	f004 f9a8 	bl	8014638 <emac_eth_send>
 80102e8:	f8ba 3000 	ldrh.w	r3, [sl]
 80102ec:	4628      	mov	r0, r5
 80102ee:	3301      	adds	r3, #1
 80102f0:	f8aa 3000 	strh.w	r3, [sl]
 80102f4:	e037      	b.n	8010366 <udp_send+0x112>
 80102f6:	4b28      	ldr	r3, [pc, #160]	; (8010398 <udp_send+0x144>)
 80102f8:	681b      	ldr	r3, [r3, #0]
 80102fa:	43a3      	bics	r3, r4
 80102fc:	d10f      	bne.n	801031e <udp_send+0xca>
 80102fe:	2307      	movs	r3, #7
 8010300:	21ff      	movs	r1, #255	; 0xff
 8010302:	4a23      	ldr	r2, [pc, #140]	; (8010390 <udp_send+0x13c>)
 8010304:	e001      	b.n	801030a <udp_send+0xb6>
 8010306:	f802 1b01 	strb.w	r1, [r2], #1
 801030a:	3b01      	subs	r3, #1
 801030c:	d1fb      	bne.n	8010306 <udp_send+0xb2>
 801030e:	2204      	movs	r2, #4
 8010310:	4822      	ldr	r0, [pc, #136]	; (801039c <udp_send+0x148>)
 8010312:	eb0d 0102 	add.w	r1, sp, r2
 8010316:	9401      	str	r4, [sp, #4]
 8010318:	f7ff febe 	bl	8010098 <memcpy.isra.0>
 801031c:	e7b6      	b.n	801028c <udp_send+0x38>
 801031e:	f004 03e0 	and.w	r3, r4, #224	; 0xe0
 8010322:	2be0      	cmp	r3, #224	; 0xe0
 8010324:	d10e      	bne.n	8010344 <udp_send+0xf0>
 8010326:	491e      	ldr	r1, [pc, #120]	; (80103a0 <udp_send+0x14c>)
 8010328:	f3c4 2306 	ubfx	r3, r4, #8, #7
 801032c:	70cb      	strb	r3, [r1, #3]
 801032e:	f3c4 4307 	ubfx	r3, r4, #16, #8
 8010332:	710b      	strb	r3, [r1, #4]
 8010334:	f3c4 6307 	ubfx	r3, r4, #24, #8
 8010338:	2206      	movs	r2, #6
 801033a:	4815      	ldr	r0, [pc, #84]	; (8010390 <udp_send+0x13c>)
 801033c:	714b      	strb	r3, [r1, #5]
 801033e:	f7ff feab 	bl	8010098 <memcpy.isra.0>
 8010342:	e7e4      	b.n	801030e <udp_send+0xba>
 8010344:	4b17      	ldr	r3, [pc, #92]	; (80103a4 <udp_send+0x150>)
 8010346:	681b      	ldr	r3, [r3, #0]
 8010348:	43a3      	bics	r3, r4
 801034a:	d00f      	beq.n	801036c <udp_send+0x118>
 801034c:	4d16      	ldr	r5, [pc, #88]	; (80103a8 <udp_send+0x154>)
 801034e:	4910      	ldr	r1, [pc, #64]	; (8010390 <udp_send+0x13c>)
 8010350:	6828      	ldr	r0, [r5, #0]
 8010352:	f001 fa37 	bl	80117c4 <arp_cache_lookup>
 8010356:	682b      	ldr	r3, [r5, #0]
 8010358:	4298      	cmp	r0, r3
 801035a:	d0d8      	beq.n	801030e <udp_send+0xba>
 801035c:	4813      	ldr	r0, [pc, #76]	; (80103ac <udp_send+0x158>)
 801035e:	f002 fef5 	bl	801314c <console_error>
 8010362:	f06f 0002 	mvn.w	r0, #2
 8010366:	b002      	add	sp, #8
 8010368:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801036c:	4620      	mov	r0, r4
 801036e:	4908      	ldr	r1, [pc, #32]	; (8010390 <udp_send+0x13c>)
 8010370:	f001 fa28 	bl	80117c4 <arp_cache_lookup>
 8010374:	42a0      	cmp	r0, r4
 8010376:	d0ca      	beq.n	801030e <udp_send+0xba>
 8010378:	480d      	ldr	r0, [pc, #52]	; (80103b0 <udp_send+0x15c>)
 801037a:	f002 fee7 	bl	801314c <console_error>
 801037e:	f06f 0001 	mvn.w	r0, #1
 8010382:	e7f0      	b.n	8010366 <udp_send+0x112>
 8010384:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8010388:	e7ed      	b.n	8010366 <udp_send+0x112>
 801038a:	bf00      	nop
 801038c:	20016024 	andcs	r6, r1, r4, lsr #32
 8010390:	2001bce4 	andcs	fp, r1, r4, ror #25
 8010394:	20016020 	andcs	r6, r1, r0, lsr #32
 8010398:	20016014 	andcs	r6, r1, r4, lsl r0
 801039c:	2001bd02 	andcs	fp, r1, r2, lsl #26
 80103a0:	20000004 	andcs	r0, r0, r4
 80103a4:	2001601c 	andcs	r6, r1, ip, lsl r0
 80103a8:	20016018 	andcs	r6, r1, r8, lsl r0
 80103ac:	080174d3 	stmdaeq	r1, {r0, r1, r4, r6, r7, sl, ip, sp, lr}
 80103b0:	080174f9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, sl, ip, sp, lr}

080103b4 <strlen>:
 80103b4:	4603      	mov	r3, r0
 80103b6:	461a      	mov	r2, r3
 80103b8:	7811      	ldrb	r1, [r2, #0]
 80103ba:	3301      	adds	r3, #1
 80103bc:	2900      	cmp	r1, #0
 80103be:	d1fa      	bne.n	80103b6 <strlen+0x2>
 80103c0:	1a10      	subs	r0, r2, r0
 80103c2:	4770      	bx	lr

080103c4 <strcmp>:
 80103c4:	1e43      	subs	r3, r0, #1
 80103c6:	3901      	subs	r1, #1
 80103c8:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 80103cc:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 80103d0:	4290      	cmp	r0, r2
 80103d2:	d001      	beq.n	80103d8 <strcmp+0x14>
 80103d4:	1a80      	subs	r0, r0, r2
 80103d6:	e001      	b.n	80103dc <strcmp+0x18>
 80103d8:	2800      	cmp	r0, #0
 80103da:	d1f5      	bne.n	80103c8 <strcmp+0x4>
 80103dc:	4770      	bx	lr

080103de <strcpy.isra.0>:
 80103de:	3801      	subs	r0, #1
 80103e0:	f811 3b01 	ldrb.w	r3, [r1], #1
 80103e4:	f800 3f01 	strb.w	r3, [r0, #1]!
 80103e8:	2b00      	cmp	r3, #0
 80103ea:	d1f9      	bne.n	80103e0 <strcpy.isra.0+0x2>
 80103ec:	4770      	bx	lr

080103ee <strcat.isra.0>:
 80103ee:	b538      	push	{r3, r4, r5, lr}
 80103f0:	4604      	mov	r4, r0
 80103f2:	460d      	mov	r5, r1
 80103f4:	f7ff ffde 	bl	80103b4 <strlen>
 80103f8:	4629      	mov	r1, r5
 80103fa:	4420      	add	r0, r4
 80103fc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8010400:	f7ff bfed 	b.w	80103de <strcpy.isra.0>

08010404 <MDNS::MDNS()>:
 8010404:	b513      	push	{r0, r1, r4, lr}
 8010406:	4604      	mov	r4, r0
 8010408:	a901      	add	r1, sp, #4
 801040a:	4804      	ldr	r0, [pc, #16]	; (801041c <MDNS::MDNS()+0x18>)
 801040c:	f003 f81a 	bl	8013444 <inet_aton>
 8010410:	4620      	mov	r0, r4
 8010412:	4b03      	ldr	r3, [pc, #12]	; (8010420 <MDNS::MDNS()+0x1c>)
 8010414:	9a01      	ldr	r2, [sp, #4]
 8010416:	601a      	str	r2, [r3, #0]
 8010418:	b002      	add	sp, #8
 801041a:	bd10      	pop	{r4, pc}
 801041c:	08017534 	stmdaeq	r1, {r2, r4, r5, r8, sl, ip, sp, lr}
 8010420:	2001c2d8 	ldrdcs	ip, [r1], -r8

08010424 <MDNS::SetName(char const*)>:
 8010424:	b538      	push	{r3, r4, r5, lr}
 8010426:	4d0b      	ldr	r5, [pc, #44]	; (8010454 <MDNS::SetName(char const*)+0x30>)
 8010428:	460c      	mov	r4, r1
 801042a:	6828      	ldr	r0, [r5, #0]
 801042c:	b108      	cbz	r0, 8010432 <MDNS::SetName(char const*)+0xe>
 801042e:	f003 f803 	bl	8013438 <operator delete[](void*)>
 8010432:	4620      	mov	r0, r4
 8010434:	f7ff ffbe 	bl	80103b4 <strlen>
 8010438:	3007      	adds	r0, #7
 801043a:	f003 f801 	bl	8013440 <operator new[](unsigned int)>
 801043e:	4621      	mov	r1, r4
 8010440:	6028      	str	r0, [r5, #0]
 8010442:	f7ff ffcc 	bl	80103de <strcpy.isra.0>
 8010446:	6828      	ldr	r0, [r5, #0]
 8010448:	4903      	ldr	r1, [pc, #12]	; (8010458 <MDNS::SetName(char const*)+0x34>)
 801044a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801044e:	f7ff bfce 	b.w	80103ee <strcat.isra.0>
 8010452:	bf00      	nop
 8010454:	2001c708 	andcs	ip, r1, r8, lsl #14
 8010458:	08017544 	stmdaeq	r1, {r2, r6, r8, sl, ip, sp, lr}

0801045c <MDNS::DecodeDNSNameNotation(char const*, char*)>:
 801045c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010460:	f04f 0e00 	mov.w	lr, #0
 8010464:	f04f 0c2e 	mov.w	ip, #46	; 0x2e
 8010468:	4675      	mov	r5, lr
 801046a:	4e1b      	ldr	r6, [pc, #108]	; (80104d8 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x7c>)
 801046c:	4f1b      	ldr	r7, [pc, #108]	; (80104dc <MDNS::DecodeDNSNameNotation(char const*, char*)+0x80>)
 801046e:	780b      	ldrb	r3, [r1, #0]
 8010470:	1c68      	adds	r0, r5, #1
 8010472:	b913      	cbnz	r3, 801047a <MDNS::DecodeDNSNameNotation(char const*, char*)+0x1e>
 8010474:	7013      	strb	r3, [r2, #0]
 8010476:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801047a:	2b3f      	cmp	r3, #63	; 0x3f
 801047c:	d91c      	bls.n	80104b8 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x5c>
 801047e:	7849      	ldrb	r1, [r1, #1]
 8010480:	ea06 2303 	and.w	r3, r6, r3, lsl #8
 8010484:	430b      	orrs	r3, r1
 8010486:	6839      	ldr	r1, [r7, #0]
 8010488:	f1be 0f00 	cmp.w	lr, #0
 801048c:	bf08      	it	eq
 801048e:	4605      	moveq	r5, r0
 8010490:	5ccc      	ldrb	r4, [r1, r3]
 8010492:	3301      	adds	r3, #1
 8010494:	4419      	add	r1, r3
 8010496:	2300      	movs	r3, #0
 8010498:	42a3      	cmp	r3, r4
 801049a:	5cc8      	ldrb	r0, [r1, r3]
 801049c:	d309      	bcc.n	80104b2 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x56>
 801049e:	f04f 0e01 	mov.w	lr, #1
 80104a2:	4421      	add	r1, r4
 80104a4:	4414      	add	r4, r2
 80104a6:	780b      	ldrb	r3, [r1, #0]
 80104a8:	b10b      	cbz	r3, 80104ae <MDNS::DecodeDNSNameNotation(char const*, char*)+0x52>
 80104aa:	f804 cb01 	strb.w	ip, [r4], #1
 80104ae:	4622      	mov	r2, r4
 80104b0:	e7dd      	b.n	801046e <MDNS::DecodeDNSNameNotation(char const*, char*)+0x12>
 80104b2:	54d0      	strb	r0, [r2, r3]
 80104b4:	3301      	adds	r3, #1
 80104b6:	e7ef      	b.n	8010498 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x3c>
 80104b8:	4688      	mov	r8, r1
 80104ba:	18d4      	adds	r4, r2, r3
 80104bc:	f818 9f01 	ldrb.w	r9, [r8, #1]!
 80104c0:	f802 9b01 	strb.w	r9, [r2], #1
 80104c4:	4294      	cmp	r4, r2
 80104c6:	d1f9      	bne.n	80104bc <MDNS::DecodeDNSNameNotation(char const*, char*)+0x60>
 80104c8:	1c5a      	adds	r2, r3, #1
 80104ca:	4411      	add	r1, r2
 80104cc:	f1be 0f00 	cmp.w	lr, #0
 80104d0:	d1e9      	bne.n	80104a6 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x4a>
 80104d2:	181d      	adds	r5, r3, r0
 80104d4:	e7e7      	b.n	80104a6 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x4a>
 80104d6:	bf00      	nop
 80104d8:	ffff3f00 			; <UNDEFINED> instruction: 0xffff3f00
 80104dc:	2001c70c 	andcs	ip, r1, ip, lsl #14

080104e0 <MDNS::FindFirstDotFromRight(char const*) const>:
 80104e0:	b510      	push	{r4, lr}
 80104e2:	4608      	mov	r0, r1
 80104e4:	460c      	mov	r4, r1
 80104e6:	f7ff ff65 	bl	80103b4 <strlen>
 80104ea:	4420      	add	r0, r4
 80104ec:	42a0      	cmp	r0, r4
 80104ee:	d903      	bls.n	80104f8 <MDNS::FindFirstDotFromRight(char const*) const+0x18>
 80104f0:	f810 3901 	ldrb.w	r3, [r0], #-1
 80104f4:	2b2e      	cmp	r3, #46	; 0x2e
 80104f6:	d1f9      	bne.n	80104ec <MDNS::FindFirstDotFromRight(char const*) const+0xc>
 80104f8:	3001      	adds	r0, #1
 80104fa:	bd10      	pop	{r4, pc}

080104fc <MDNS::WriteDnsName(char const*, char*, bool)>:
 80104fc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80104fe:	4614      	mov	r4, r2
 8010500:	460f      	mov	r7, r1
 8010502:	1c60      	adds	r0, r4, #1
 8010504:	463d      	mov	r5, r7
 8010506:	f817 6b01 	ldrb.w	r6, [r7], #1
 801050a:	b946      	cbnz	r6, 801051e <MDNS::WriteDnsName(char const*, char*, bool)+0x22>
 801050c:	1a69      	subs	r1, r5, r1
 801050e:	7021      	strb	r1, [r4, #0]
 8010510:	7829      	ldrb	r1, [r5, #0]
 8010512:	b949      	cbnz	r1, 8010528 <MDNS::WriteDnsName(char const*, char*, bool)+0x2c>
 8010514:	b10b      	cbz	r3, 801051a <MDNS::WriteDnsName(char const*, char*, bool)+0x1e>
 8010516:	f800 1b01 	strb.w	r1, [r0], #1
 801051a:	1a80      	subs	r0, r0, r2
 801051c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801051e:	2e2e      	cmp	r6, #46	; 0x2e
 8010520:	d0f4      	beq.n	801050c <MDNS::WriteDnsName(char const*, char*, bool)+0x10>
 8010522:	f800 6b01 	strb.w	r6, [r0], #1
 8010526:	e7ed      	b.n	8010504 <MDNS::WriteDnsName(char const*, char*, bool)+0x8>
 8010528:	4604      	mov	r4, r0
 801052a:	1c69      	adds	r1, r5, #1
 801052c:	e7e8      	b.n	8010500 <MDNS::WriteDnsName(char const*, char*, bool)+0x4>
	...

08010530 <MDNS::CreateAnswerLocalIpAddress()>:
 8010530:	2384      	movs	r3, #132	; 0x84
 8010532:	b510      	push	{r4, lr}
 8010534:	4c0f      	ldr	r4, [pc, #60]	; (8010574 <MDNS::CreateAnswerLocalIpAddress()+0x44>)
 8010536:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 801053a:	80e3      	strh	r3, [r4, #6]
 801053c:	2300      	movs	r3, #0
 801053e:	490e      	ldr	r1, [pc, #56]	; (8010578 <MDNS::CreateAnswerLocalIpAddress()+0x48>)
 8010540:	e9c4 2302 	strd	r2, r3, [r4, #8]
 8010544:	6809      	ldr	r1, [r1, #0]
 8010546:	f104 0210 	add.w	r2, r4, #16
 801054a:	2301      	movs	r3, #1
 801054c:	f7ff ffd6 	bl	80104fc <MDNS::WriteDnsName(char const*, char*, bool)>
 8010550:	490a      	ldr	r1, [pc, #40]	; (801057c <MDNS::CreateAnswerLocalIpAddress()+0x4c>)
 8010552:	1813      	adds	r3, r2, r0
 8010554:	5011      	str	r1, [r2, r0]
 8010556:	f04f 42f0 	mov.w	r2, #2013265920	; 0x78000000
 801055a:	605a      	str	r2, [r3, #4]
 801055c:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8010560:	811a      	strh	r2, [r3, #8]
 8010562:	4a07      	ldr	r2, [pc, #28]	; (8010580 <MDNS::CreateAnswerLocalIpAddress()+0x50>)
 8010564:	6812      	ldr	r2, [r2, #0]
 8010566:	6912      	ldr	r2, [r2, #16]
 8010568:	f8c3 200a 	str.w	r2, [r3, #10]
 801056c:	1b1b      	subs	r3, r3, r4
 801056e:	330a      	adds	r3, #10
 8010570:	6023      	str	r3, [r4, #0]
 8010572:	bd10      	pop	{r4, pc}
 8010574:	2001c2dc 	ldrdcs	ip, [r1], -ip	; <UNPREDICTABLE>
 8010578:	2001c708 	andcs	ip, r1, r8, lsl #14
 801057c:	01800100 	orreq	r0, r0, r0, lsl #2
 8010580:	2001c710 	andcs	ip, r1, r0, lsl r7

08010584 <MDNS::Start()>:
 8010584:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8010586:	4c1d      	ldr	r4, [pc, #116]	; (80105fc <MDNS::Start()+0x78>)
 8010588:	f241 41e9 	movw	r1, #5353	; 0x14e9
 801058c:	4605      	mov	r5, r0
 801058e:	6820      	ldr	r0, [r4, #0]
 8010590:	f000 fb26 	bl	8010be0 <Network::Begin(unsigned short)>
 8010594:	4e1a      	ldr	r6, [pc, #104]	; (8010600 <MDNS::Start()+0x7c>)
 8010596:	4f1b      	ldr	r7, [pc, #108]	; (8010604 <MDNS::Start()+0x80>)
 8010598:	4601      	mov	r1, r0
 801059a:	6030      	str	r0, [r6, #0]
 801059c:	683a      	ldr	r2, [r7, #0]
 801059e:	6820      	ldr	r0, [r4, #0]
 80105a0:	f000 fb2f 	bl	8010c02 <Network::JoinGroup(int, unsigned int)>
 80105a4:	4b18      	ldr	r3, [pc, #96]	; (8010608 <MDNS::Start()+0x84>)
 80105a6:	681b      	ldr	r3, [r3, #0]
 80105a8:	b923      	cbnz	r3, 80105b4 <MDNS::Start()+0x30>
 80105aa:	6821      	ldr	r1, [r4, #0]
 80105ac:	4628      	mov	r0, r5
 80105ae:	311c      	adds	r1, #28
 80105b0:	f7ff ff38 	bl	8010424 <MDNS::SetName(char const*)>
 80105b4:	4628      	mov	r0, r5
 80105b6:	f7ff ffbb 	bl	8010530 <MDNS::CreateAnswerLocalIpAddress()>
 80105ba:	f241 43e9 	movw	r3, #5353	; 0x14e9
 80105be:	4913      	ldr	r1, [pc, #76]	; (801060c <MDNS::Start()+0x88>)
 80105c0:	7830      	ldrb	r0, [r6, #0]
 80105c2:	f831 2b04 	ldrh.w	r2, [r1], #4
 80105c6:	9300      	str	r3, [sp, #0]
 80105c8:	683b      	ldr	r3, [r7, #0]
 80105ca:	f7ff fe43 	bl	8010254 <udp_send>
 80105ce:	233f      	movs	r3, #63	; 0x3f
 80105d0:	6820      	ldr	r0, [r4, #0]
 80105d2:	4c0f      	ldr	r4, [pc, #60]	; (8010610 <MDNS::Start()+0x8c>)
 80105d4:	f100 025c 	add.w	r2, r0, #92	; 0x5c
 80105d8:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 80105dc:	b929      	cbnz	r1, 80105ea <MDNS::Start()+0x66>
 80105de:	4413      	add	r3, r2
 80105e0:	429a      	cmp	r2, r3
 80105e2:	d006      	beq.n	80105f2 <MDNS::Start()+0x6e>
 80105e4:	f802 1b01 	strb.w	r1, [r2], #1
 80105e8:	e7fa      	b.n	80105e0 <MDNS::Start()+0x5c>
 80105ea:	3b01      	subs	r3, #1
 80105ec:	f802 1b01 	strb.w	r1, [r2], #1
 80105f0:	d1f2      	bne.n	80105d8 <MDNS::Start()+0x54>
 80105f2:	2300      	movs	r3, #0
 80105f4:	f880 309b 	strb.w	r3, [r0, #155]	; 0x9b
 80105f8:	b003      	add	sp, #12
 80105fa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80105fc:	2001c710 	andcs	ip, r1, r0, lsl r7
 8010600:	2000000c 	andcs	r0, r0, ip
 8010604:	2001c2d8 	ldrdcs	ip, [r1], -r8
 8010608:	2001c708 	andcs	ip, r1, r8, lsl #14
 801060c:	2001c2dc 	ldrdcs	ip, [r1], -ip	; <UNPREDICTABLE>
 8010610:	08017544 	stmdaeq	r1, {r2, r6, r8, sl, ip, sp, lr}

08010614 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)>:
 8010614:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010618:	4c1b      	ldr	r4, [pc, #108]	; (8010688 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x74>)
 801061a:	ea4f 1c01 	mov.w	ip, r1, lsl #4
 801061e:	eb04 1501 	add.w	r5, r4, r1, lsl #4
 8010622:	2300      	movs	r3, #0
 8010624:	f854 100c 	ldr.w	r1, [r4, ip]
 8010628:	4607      	mov	r7, r0
 801062a:	f7ff ff67 	bl	80104fc <MDNS::WriteDnsName(char const*, char*, bool)>
 801062e:	2301      	movs	r3, #1
 8010630:	7bac      	ldrb	r4, [r5, #14]
 8010632:	4616      	mov	r6, r2
 8010634:	4915      	ldr	r1, [pc, #84]	; (801068c <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x78>)
 8010636:	4402      	add	r2, r0
 8010638:	4815      	ldr	r0, [pc, #84]	; (8010690 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x7c>)
 801063a:	429c      	cmp	r4, r3
 801063c:	bf18      	it	ne
 801063e:	4601      	movne	r1, r0
 8010640:	4638      	mov	r0, r7
 8010642:	f7ff ff5b 	bl	80104fc <MDNS::WriteDnsName(char const*, char*, bool)>
 8010646:	4b13      	ldr	r3, [pc, #76]	; (8010694 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x80>)
 8010648:	1814      	adds	r4, r2, r0
 801064a:	5013      	str	r3, [r2, r0]
 801064c:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 8010650:	6063      	str	r3, [r4, #4]
 8010652:	4b11      	ldr	r3, [pc, #68]	; (8010698 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x84>)
 8010654:	f8d3 8000 	ldr.w	r8, [r3]
 8010658:	4640      	mov	r0, r8
 801065a:	f7ff feab 	bl	80103b4 <strlen>
 801065e:	f100 0308 	add.w	r3, r0, #8
 8010662:	ba5b      	rev16	r3, r3
 8010664:	8123      	strh	r3, [r4, #8]
 8010666:	2300      	movs	r3, #0
 8010668:	f8c4 300a 	str.w	r3, [r4, #10]
 801066c:	89ab      	ldrh	r3, [r5, #12]
 801066e:	f104 0210 	add.w	r2, r4, #16
 8010672:	ba5b      	rev16	r3, r3
 8010674:	81e3      	strh	r3, [r4, #14]
 8010676:	4641      	mov	r1, r8
 8010678:	2301      	movs	r3, #1
 801067a:	4638      	mov	r0, r7
 801067c:	f7ff ff3e 	bl	80104fc <MDNS::WriteDnsName(char const*, char*, bool)>
 8010680:	4410      	add	r0, r2
 8010682:	1b80      	subs	r0, r0, r6
 8010684:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010688:	2001c4e0 	andcs	ip, r1, r0, ror #9
 801068c:	08017540 	stmdaeq	r1, {r6, r8, sl, ip, sp, lr}
 8010690:	0801755d 	stmdaeq	r1, {r0, r2, r3, r4, r6, r8, sl, ip, sp, lr}
 8010694:	01802100 	orreq	r2, r0, r0, lsl #2
 8010698:	2001c708 	andcs	ip, r1, r8, lsl #14

0801069c <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)>:
 801069c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80106a0:	4e19      	ldr	r6, [pc, #100]	; (8010708 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x6c>)
 80106a2:	010f      	lsls	r7, r1, #4
 80106a4:	eb06 1501 	add.w	r5, r6, r1, lsl #4
 80106a8:	2300      	movs	r3, #0
 80106aa:	59f1      	ldr	r1, [r6, r7]
 80106ac:	4604      	mov	r4, r0
 80106ae:	f7ff ff25 	bl	80104fc <MDNS::WriteDnsName(char const*, char*, bool)>
 80106b2:	2301      	movs	r3, #1
 80106b4:	7bae      	ldrb	r6, [r5, #14]
 80106b6:	4690      	mov	r8, r2
 80106b8:	4914      	ldr	r1, [pc, #80]	; (801070c <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x70>)
 80106ba:	4402      	add	r2, r0
 80106bc:	4814      	ldr	r0, [pc, #80]	; (8010710 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x74>)
 80106be:	429e      	cmp	r6, r3
 80106c0:	bf18      	it	ne
 80106c2:	4601      	movne	r1, r0
 80106c4:	4620      	mov	r0, r4
 80106c6:	f7ff ff19 	bl	80104fc <MDNS::WriteDnsName(char const*, char*, bool)>
 80106ca:	4b12      	ldr	r3, [pc, #72]	; (8010714 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x78>)
 80106cc:	1816      	adds	r6, r2, r0
 80106ce:	5013      	str	r3, [r2, r0]
 80106d0:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 80106d4:	68a8      	ldr	r0, [r5, #8]
 80106d6:	6073      	str	r3, [r6, #4]
 80106d8:	f106 040b 	add.w	r4, r6, #11
 80106dc:	b938      	cbnz	r0, 80106ee <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x52>
 80106de:	f44f 7380 	mov.w	r3, #256	; 0x100
 80106e2:	72b0      	strb	r0, [r6, #10]
 80106e4:	8133      	strh	r3, [r6, #8]
 80106e6:	eba4 0008 	sub.w	r0, r4, r8
 80106ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80106ee:	f7ff fe61 	bl	80103b4 <strlen>
 80106f2:	4607      	mov	r7, r0
 80106f4:	1c43      	adds	r3, r0, #1
 80106f6:	72b0      	strb	r0, [r6, #10]
 80106f8:	ba5b      	rev16	r3, r3
 80106fa:	4620      	mov	r0, r4
 80106fc:	68a9      	ldr	r1, [r5, #8]
 80106fe:	8133      	strh	r3, [r6, #8]
 8010700:	f7ff fe6d 	bl	80103de <strcpy.isra.0>
 8010704:	443c      	add	r4, r7
 8010706:	e7ee      	b.n	80106e6 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x4a>
 8010708:	2001c4e0 	andcs	ip, r1, r0, ror #9
 801070c:	08017540 	stmdaeq	r1, {r6, r8, sl, ip, sp, lr}
 8010710:	0801755d 	stmdaeq	r1, {r0, r2, r3, r4, r6, r8, sl, ip, sp, lr}
 8010714:	01801000 	orreq	r1, r0, r0

08010718 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)>:
 8010718:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801071c:	f8df 8060 	ldr.w	r8, [pc, #96]	; 8010780 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x68>
 8010720:	ea4f 1901 	mov.w	r9, r1, lsl #4
 8010724:	eb08 1501 	add.w	r5, r8, r1, lsl #4
 8010728:	6869      	ldr	r1, [r5, #4]
 801072a:	2301      	movs	r3, #1
 801072c:	4607      	mov	r7, r0
 801072e:	f7ff fee5 	bl	80104fc <MDNS::WriteDnsName(char const*, char*, bool)>
 8010732:	4b14      	ldr	r3, [pc, #80]	; (8010784 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x6c>)
 8010734:	f858 8009 	ldr.w	r8, [r8, r9]
 8010738:	5013      	str	r3, [r2, r0]
 801073a:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 801073e:	1816      	adds	r6, r2, r0
 8010740:	6073      	str	r3, [r6, #4]
 8010742:	4640      	mov	r0, r8
 8010744:	4614      	mov	r4, r2
 8010746:	f7ff fe35 	bl	80103b4 <strlen>
 801074a:	f100 030d 	add.w	r3, r0, #13
 801074e:	ba5b      	rev16	r3, r3
 8010750:	4641      	mov	r1, r8
 8010752:	8133      	strh	r3, [r6, #8]
 8010754:	f106 020a 	add.w	r2, r6, #10
 8010758:	2300      	movs	r3, #0
 801075a:	4638      	mov	r0, r7
 801075c:	f7ff fece 	bl	80104fc <MDNS::WriteDnsName(char const*, char*, bool)>
 8010760:	2301      	movs	r3, #1
 8010762:	4402      	add	r2, r0
 8010764:	7bad      	ldrb	r5, [r5, #14]
 8010766:	4808      	ldr	r0, [pc, #32]	; (8010788 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x70>)
 8010768:	4908      	ldr	r1, [pc, #32]	; (801078c <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x74>)
 801076a:	429d      	cmp	r5, r3
 801076c:	bf18      	it	ne
 801076e:	4601      	movne	r1, r0
 8010770:	4638      	mov	r0, r7
 8010772:	f7ff fec3 	bl	80104fc <MDNS::WriteDnsName(char const*, char*, bool)>
 8010776:	4410      	add	r0, r2
 8010778:	1b00      	subs	r0, r0, r4
 801077a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801077e:	bf00      	nop
 8010780:	2001c4e0 	andcs	ip, r1, r0, ror #9
 8010784:	01000c00 	tsteq	r0, r0, lsl #24
 8010788:	0801755d 	stmdaeq	r1, {r0, r2, r3, r4, r6, r8, sl, ip, sp, lr}
 801078c:	08017540 	stmdaeq	r1, {r6, r8, sl, ip, sp, lr}

08010790 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)>:
 8010790:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010792:	460f      	mov	r7, r1
 8010794:	2301      	movs	r3, #1
 8010796:	490f      	ldr	r1, [pc, #60]	; (80107d4 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x44>)
 8010798:	4606      	mov	r6, r0
 801079a:	f7ff feaf 	bl	80104fc <MDNS::WriteDnsName(char const*, char*, bool)>
 801079e:	4b0e      	ldr	r3, [pc, #56]	; (80107d8 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x48>)
 80107a0:	490e      	ldr	r1, [pc, #56]	; (80107dc <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x4c>)
 80107a2:	5013      	str	r3, [r2, r0]
 80107a4:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 80107a8:	eb01 1107 	add.w	r1, r1, r7, lsl #4
 80107ac:	684f      	ldr	r7, [r1, #4]
 80107ae:	1815      	adds	r5, r2, r0
 80107b0:	606b      	str	r3, [r5, #4]
 80107b2:	4638      	mov	r0, r7
 80107b4:	4614      	mov	r4, r2
 80107b6:	f7ff fdfd 	bl	80103b4 <strlen>
 80107ba:	1c83      	adds	r3, r0, #2
 80107bc:	ba5b      	rev16	r3, r3
 80107be:	812b      	strh	r3, [r5, #8]
 80107c0:	f105 020a 	add.w	r2, r5, #10
 80107c4:	2301      	movs	r3, #1
 80107c6:	4639      	mov	r1, r7
 80107c8:	4630      	mov	r0, r6
 80107ca:	f7ff fe97 	bl	80104fc <MDNS::WriteDnsName(char const*, char*, bool)>
 80107ce:	4410      	add	r0, r2
 80107d0:	1b00      	subs	r0, r0, r4
 80107d2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80107d4:	0801754b 	stmdaeq	r1, {r0, r1, r3, r6, r8, sl, ip, sp, lr}
 80107d8:	01000c00 	tsteq	r0, r0, lsl #24
 80107dc:	2001c4e0 	andcs	ip, r1, r0, ror #9

080107e0 <MDNS::CreateMDNSMessage(unsigned int)>:
 80107e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80107e2:	2384      	movs	r3, #132	; 0x84
 80107e4:	4d19      	ldr	r5, [pc, #100]	; (801084c <MDNS::CreateMDNSMessage(unsigned int)+0x6c>)
 80107e6:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80107ea:	80eb      	strh	r3, [r5, #6]
 80107ec:	f44f 7380 	mov.w	r3, #256	; 0x100
 80107f0:	f105 0410 	add.w	r4, r5, #16
 80107f4:	e9c5 2302 	strd	r2, r3, [r5, #8]
 80107f8:	4622      	mov	r2, r4
 80107fa:	4606      	mov	r6, r0
 80107fc:	460f      	mov	r7, r1
 80107fe:	f7ff ff09 	bl	8010614 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)>
 8010802:	4404      	add	r4, r0
 8010804:	4622      	mov	r2, r4
 8010806:	4639      	mov	r1, r7
 8010808:	4630      	mov	r0, r6
 801080a:	f7ff ff47 	bl	801069c <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)>
 801080e:	4404      	add	r4, r0
 8010810:	4622      	mov	r2, r4
 8010812:	4639      	mov	r1, r7
 8010814:	4630      	mov	r0, r6
 8010816:	f7ff ffbb 	bl	8010790 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)>
 801081a:	4404      	add	r4, r0
 801081c:	4622      	mov	r2, r4
 801081e:	4639      	mov	r1, r7
 8010820:	4630      	mov	r0, r6
 8010822:	f7ff ff79 	bl	8010718 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)>
 8010826:	4a0a      	ldr	r2, [pc, #40]	; (8010850 <MDNS::CreateMDNSMessage(unsigned int)+0x70>)
 8010828:	4404      	add	r4, r0
 801082a:	f852 3b10 	ldr.w	r3, [r2], #16
 801082e:	1e60      	subs	r0, r4, #1
 8010830:	3b0c      	subs	r3, #12
 8010832:	4619      	mov	r1, r3
 8010834:	3901      	subs	r1, #1
 8010836:	d204      	bcs.n	8010842 <MDNS::CreateMDNSMessage(unsigned int)+0x62>
 8010838:	441c      	add	r4, r3
 801083a:	4b06      	ldr	r3, [pc, #24]	; (8010854 <MDNS::CreateMDNSMessage(unsigned int)+0x74>)
 801083c:	1ae4      	subs	r4, r4, r3
 801083e:	602c      	str	r4, [r5, #0]
 8010840:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010842:	f812 6b01 	ldrb.w	r6, [r2], #1
 8010846:	f800 6f01 	strb.w	r6, [r0, #1]!
 801084a:	e7f3      	b.n	8010834 <MDNS::CreateMDNSMessage(unsigned int)+0x54>
 801084c:	2001c504 	andcs	ip, r1, r4, lsl #10
 8010850:	2001c2dc 	ldrdcs	ip, [r1], -ip	; <UNPREDICTABLE>
 8010854:	2001c508 	andcs	ip, r1, r8, lsl #10

08010858 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>:
 8010858:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801085c:	4d40      	ldr	r5, [pc, #256]	; (8010960 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x108>)
 801085e:	b085      	sub	sp, #20
 8010860:	682c      	ldr	r4, [r5, #0]
 8010862:	4680      	mov	r8, r0
 8010864:	460f      	mov	r7, r1
 8010866:	4616      	mov	r6, r2
 8010868:	f89d b038 	ldrb.w	fp, [sp, #56]	; 0x38
 801086c:	f8dd a03c 	ldr.w	sl, [sp, #60]	; 0x3c
 8010870:	b11c      	cbz	r4, 801087a <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x22>
 8010872:	692a      	ldr	r2, [r5, #16]
 8010874:	2a00      	cmp	r2, #0
 8010876:	d16e      	bne.n	8010956 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xfe>
 8010878:	2401      	movs	r4, #1
 801087a:	eb05 1204 	add.w	r2, r5, r4, lsl #4
 801087e:	ea4f 1904 	mov.w	r9, r4, lsl #4
 8010882:	8193      	strh	r3, [r2, #12]
 8010884:	f882 b00e 	strb.w	fp, [r2, #14]
 8010888:	2f00      	cmp	r7, #0
 801088a:	d154      	bne.n	8010936 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xde>
 801088c:	4b35      	ldr	r3, [pc, #212]	; (8010964 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x10c>)
 801088e:	6818      	ldr	r0, [r3, #0]
 8010890:	301c      	adds	r0, #28
 8010892:	f7ff fd8f 	bl	80103b4 <strlen>
 8010896:	4607      	mov	r7, r0
 8010898:	4630      	mov	r0, r6
 801089a:	f7ff fd8b 	bl	80103b4 <strlen>
 801089e:	4438      	add	r0, r7
 80108a0:	3001      	adds	r0, #1
 80108a2:	f002 fdcd 	bl	8013440 <operator new[](unsigned int)>
 80108a6:	4b2f      	ldr	r3, [pc, #188]	; (8010964 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x10c>)
 80108a8:	f845 0009 	str.w	r0, [r5, r9]
 80108ac:	6819      	ldr	r1, [r3, #0]
 80108ae:	311c      	adds	r1, #28
 80108b0:	f7ff fd95 	bl	80103de <strcpy.isra.0>
 80108b4:	f855 0009 	ldr.w	r0, [r5, r9]
 80108b8:	4631      	mov	r1, r6
 80108ba:	f7ff fd98 	bl	80103ee <strcat.isra.0>
 80108be:	4631      	mov	r1, r6
 80108c0:	4640      	mov	r0, r8
 80108c2:	f7ff fe0d 	bl	80104e0 <MDNS::FindFirstDotFromRight(char const*) const>
 80108c6:	eb05 0709 	add.w	r7, r5, r9
 80108ca:	4605      	mov	r5, r0
 80108cc:	f7ff fd72 	bl	80103b4 <strlen>
 80108d0:	300d      	adds	r0, #13
 80108d2:	f002 fdb5 	bl	8013440 <operator new[](unsigned int)>
 80108d6:	4629      	mov	r1, r5
 80108d8:	6078      	str	r0, [r7, #4]
 80108da:	f7ff fd80 	bl	80103de <strcpy.isra.0>
 80108de:	4922      	ldr	r1, [pc, #136]	; (8010968 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x110>)
 80108e0:	6878      	ldr	r0, [r7, #4]
 80108e2:	f7ff fd84 	bl	80103ee <strcat.isra.0>
 80108e6:	4921      	ldr	r1, [pc, #132]	; (801096c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x114>)
 80108e8:	4b21      	ldr	r3, [pc, #132]	; (8010970 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x118>)
 80108ea:	6878      	ldr	r0, [r7, #4]
 80108ec:	f1bb 0f01 	cmp.w	fp, #1
 80108f0:	bf18      	it	ne
 80108f2:	4619      	movne	r1, r3
 80108f4:	f7ff fd7b 	bl	80103ee <strcat.isra.0>
 80108f8:	f1ba 0f00 	cmp.w	sl, #0
 80108fc:	d009      	beq.n	8010912 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xba>
 80108fe:	4650      	mov	r0, sl
 8010900:	f7ff fd58 	bl	80103b4 <strlen>
 8010904:	3001      	adds	r0, #1
 8010906:	f002 fd9b 	bl	8013440 <operator new[](unsigned int)>
 801090a:	4651      	mov	r1, sl
 801090c:	60b8      	str	r0, [r7, #8]
 801090e:	f7ff fd66 	bl	80103de <strcpy.isra.0>
 8010912:	4621      	mov	r1, r4
 8010914:	4640      	mov	r0, r8
 8010916:	f7ff ff63 	bl	80107e0 <MDNS::CreateMDNSMessage(unsigned int)>
 801091a:	f241 43e9 	movw	r3, #5353	; 0x14e9
 801091e:	4915      	ldr	r1, [pc, #84]	; (8010974 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x11c>)
 8010920:	4815      	ldr	r0, [pc, #84]	; (8010978 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x120>)
 8010922:	f831 2b04 	ldrh.w	r2, [r1], #4
 8010926:	9300      	str	r3, [sp, #0]
 8010928:	4b14      	ldr	r3, [pc, #80]	; (801097c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x124>)
 801092a:	7800      	ldrb	r0, [r0, #0]
 801092c:	681b      	ldr	r3, [r3, #0]
 801092e:	f7ff fc91 	bl	8010254 <udp_send>
 8010932:	2001      	movs	r0, #1
 8010934:	e010      	b.n	8010958 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x100>
 8010936:	4638      	mov	r0, r7
 8010938:	f7ff fd3c 	bl	80103b4 <strlen>
 801093c:	9003      	str	r0, [sp, #12]
 801093e:	4630      	mov	r0, r6
 8010940:	f7ff fd38 	bl	80103b4 <strlen>
 8010944:	9b03      	ldr	r3, [sp, #12]
 8010946:	4418      	add	r0, r3
 8010948:	3001      	adds	r0, #1
 801094a:	f002 fd79 	bl	8013440 <operator new[](unsigned int)>
 801094e:	4639      	mov	r1, r7
 8010950:	f845 0009 	str.w	r0, [r5, r9]
 8010954:	e7ac      	b.n	80108b0 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x58>
 8010956:	2000      	movs	r0, #0
 8010958:	b005      	add	sp, #20
 801095a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801095e:	bf00      	nop
 8010960:	2001c4e0 	andcs	ip, r1, r0, ror #9
 8010964:	2001c710 	andcs	ip, r1, r0, lsl r7
 8010968:	08016547 	stmdaeq	r1, {r0, r1, r2, r6, r8, sl, sp, lr}
 801096c:	08017540 	stmdaeq	r1, {r6, r8, sl, ip, sp, lr}
 8010970:	0801755d 	stmdaeq	r1, {r0, r2, r3, r4, r6, r8, sl, ip, sp, lr}
 8010974:	2001c504 	andcs	ip, r1, r4, lsl #10
 8010978:	2000000c 	andcs	r0, r0, ip
 801097c:	2001c2d8 	ldrdcs	ip, [r1], -r8

08010980 <MDNS::HandleRequest(unsigned short)>:
 8010980:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010984:	4605      	mov	r5, r0
 8010986:	2700      	movs	r7, #0
 8010988:	f04f 080c 	mov.w	r8, #12
 801098c:	b0c5      	sub	sp, #276	; 0x114
 801098e:	f8df a0c0 	ldr.w	sl, [pc, #192]	; 8010a50 <MDNS::HandleRequest(unsigned short)+0xd0>
 8010992:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 8010a54 <MDNS::HandleRequest(unsigned short)+0xd4>
 8010996:	9103      	str	r1, [sp, #12]
 8010998:	9b03      	ldr	r3, [sp, #12]
 801099a:	42bb      	cmp	r3, r7
 801099c:	d802      	bhi.n	80109a4 <MDNS::HandleRequest(unsigned short)+0x24>
 801099e:	b045      	add	sp, #276	; 0x114
 80109a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80109a4:	f8da 1000 	ldr.w	r1, [sl]
 80109a8:	aa04      	add	r2, sp, #16
 80109aa:	4441      	add	r1, r8
 80109ac:	4628      	mov	r0, r5
 80109ae:	f7ff fd55 	bl	801045c <MDNS::DecodeDNSNameNotation(char const*, char*)>
 80109b2:	f8da 2000 	ldr.w	r2, [sl]
 80109b6:	4440      	add	r0, r8
 80109b8:	1813      	adds	r3, r2, r0
 80109ba:	885b      	ldrh	r3, [r3, #2]
 80109bc:	f100 0804 	add.w	r8, r0, #4
 80109c0:	ba5b      	rev16	r3, r3
 80109c2:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 80109c6:	2b01      	cmp	r3, #1
 80109c8:	d13d      	bne.n	8010a46 <MDNS::HandleRequest(unsigned short)+0xc6>
 80109ca:	5a14      	ldrh	r4, [r2, r0]
 80109cc:	4b22      	ldr	r3, [pc, #136]	; (8010a58 <MDNS::HandleRequest(unsigned short)+0xd8>)
 80109ce:	ba64      	rev16	r4, r4
 80109d0:	6818      	ldr	r0, [r3, #0]
 80109d2:	a904      	add	r1, sp, #16
 80109d4:	b2a4      	uxth	r4, r4
 80109d6:	f7ff fcf5 	bl	80103c4 <strcmp>
 80109da:	b968      	cbnz	r0, 80109f8 <MDNS::HandleRequest(unsigned short)+0x78>
 80109dc:	2c01      	cmp	r4, #1
 80109de:	d10b      	bne.n	80109f8 <MDNS::HandleRequest(unsigned short)+0x78>
 80109e0:	f241 43e9 	movw	r3, #5353	; 0x14e9
 80109e4:	491d      	ldr	r1, [pc, #116]	; (8010a5c <MDNS::HandleRequest(unsigned short)+0xdc>)
 80109e6:	481e      	ldr	r0, [pc, #120]	; (8010a60 <MDNS::HandleRequest(unsigned short)+0xe0>)
 80109e8:	f831 2b04 	ldrh.w	r2, [r1], #4
 80109ec:	9300      	str	r3, [sp, #0]
 80109ee:	4b1d      	ldr	r3, [pc, #116]	; (8010a64 <MDNS::HandleRequest(unsigned short)+0xe4>)
 80109f0:	7800      	ldrb	r0, [r0, #0]
 80109f2:	681b      	ldr	r3, [r3, #0]
 80109f4:	f7ff fc2e 	bl	8010254 <udp_send>
 80109f8:	481b      	ldr	r0, [pc, #108]	; (8010a68 <MDNS::HandleRequest(unsigned short)+0xe8>)
 80109fa:	a904      	add	r1, sp, #16
 80109fc:	f7ff fce2 	bl	80103c4 <strcmp>
 8010a00:	f04f 0900 	mov.w	r9, #0
 8010a04:	4e19      	ldr	r6, [pc, #100]	; (8010a6c <MDNS::HandleRequest(unsigned short)+0xec>)
 8010a06:	9002      	str	r0, [sp, #8]
 8010a08:	6833      	ldr	r3, [r6, #0]
 8010a0a:	b1c3      	cbz	r3, 8010a3e <MDNS::HandleRequest(unsigned short)+0xbe>
 8010a0c:	9b02      	ldr	r3, [sp, #8]
 8010a0e:	b123      	cbz	r3, 8010a1a <MDNS::HandleRequest(unsigned short)+0x9a>
 8010a10:	6870      	ldr	r0, [r6, #4]
 8010a12:	a904      	add	r1, sp, #16
 8010a14:	f7ff fcd6 	bl	80103c4 <strcmp>
 8010a18:	b988      	cbnz	r0, 8010a3e <MDNS::HandleRequest(unsigned short)+0xbe>
 8010a1a:	2c0c      	cmp	r4, #12
 8010a1c:	d10f      	bne.n	8010a3e <MDNS::HandleRequest(unsigned short)+0xbe>
 8010a1e:	4649      	mov	r1, r9
 8010a20:	4628      	mov	r0, r5
 8010a22:	f7ff fedd 	bl	80107e0 <MDNS::CreateMDNSMessage(unsigned int)>
 8010a26:	f241 43e9 	movw	r3, #5353	; 0x14e9
 8010a2a:	480d      	ldr	r0, [pc, #52]	; (8010a60 <MDNS::HandleRequest(unsigned short)+0xe0>)
 8010a2c:	9300      	str	r3, [sp, #0]
 8010a2e:	4b0d      	ldr	r3, [pc, #52]	; (8010a64 <MDNS::HandleRequest(unsigned short)+0xe4>)
 8010a30:	f8bb 2000 	ldrh.w	r2, [fp]
 8010a34:	681b      	ldr	r3, [r3, #0]
 8010a36:	490e      	ldr	r1, [pc, #56]	; (8010a70 <MDNS::HandleRequest(unsigned short)+0xf0>)
 8010a38:	7800      	ldrb	r0, [r0, #0]
 8010a3a:	f7ff fc0b 	bl	8010254 <udp_send>
 8010a3e:	3610      	adds	r6, #16
 8010a40:	f1b9 0f00 	cmp.w	r9, #0
 8010a44:	d001      	beq.n	8010a4a <MDNS::HandleRequest(unsigned short)+0xca>
 8010a46:	3701      	adds	r7, #1
 8010a48:	e7a6      	b.n	8010998 <MDNS::HandleRequest(unsigned short)+0x18>
 8010a4a:	f04f 0901 	mov.w	r9, #1
 8010a4e:	e7db      	b.n	8010a08 <MDNS::HandleRequest(unsigned short)+0x88>
 8010a50:	2001c70c 	andcs	ip, r1, ip, lsl #14
 8010a54:	2001c504 	andcs	ip, r1, r4, lsl #10
 8010a58:	2001c708 	andcs	ip, r1, r8, lsl #14
 8010a5c:	2001c2dc 	ldrdcs	ip, [r1], -ip	; <UNPREDICTABLE>
 8010a60:	2000000c 	andcs	r0, r0, ip
 8010a64:	2001c2d8 	ldrdcs	ip, [r1], -r8
 8010a68:	0801754b 	stmdaeq	r1, {r0, r1, r3, r6, r8, sl, ip, sp, lr}
 8010a6c:	2001c4e0 	andcs	ip, r1, r0, ror #9
 8010a70:	2001c508 	andcs	ip, r1, r8, lsl #10

08010a74 <MDNS::Parse()>:
 8010a74:	4b08      	ldr	r3, [pc, #32]	; (8010a98 <MDNS::Parse()+0x24>)
 8010a76:	681a      	ldr	r2, [r3, #0]
 8010a78:	8853      	ldrh	r3, [r2, #2]
 8010a7a:	ba5b      	rev16	r3, r3
 8010a7c:	b299      	uxth	r1, r3
 8010a7e:	041b      	lsls	r3, r3, #16
 8010a80:	d408      	bmi.n	8010a94 <MDNS::Parse()+0x20>
 8010a82:	0b89      	lsrs	r1, r1, #14
 8010a84:	d106      	bne.n	8010a94 <MDNS::Parse()+0x20>
 8010a86:	8891      	ldrh	r1, [r2, #4]
 8010a88:	b28b      	uxth	r3, r1
 8010a8a:	b11b      	cbz	r3, 8010a94 <MDNS::Parse()+0x20>
 8010a8c:	ba49      	rev16	r1, r1
 8010a8e:	b289      	uxth	r1, r1
 8010a90:	f7ff bf76 	b.w	8010980 <MDNS::HandleRequest(unsigned short)>
 8010a94:	4770      	bx	lr
 8010a96:	bf00      	nop
 8010a98:	2001c70c 	andcs	ip, r1, ip, lsl #14

08010a9c <MDNS::Run()>:
 8010a9c:	b538      	push	{r3, r4, r5, lr}
 8010a9e:	4d0c      	ldr	r5, [pc, #48]	; (8010ad0 <MDNS::Run()+0x34>)
 8010aa0:	4604      	mov	r4, r0
 8010aa2:	480c      	ldr	r0, [pc, #48]	; (8010ad4 <MDNS::Run()+0x38>)
 8010aa4:	462b      	mov	r3, r5
 8010aa6:	4a0c      	ldr	r2, [pc, #48]	; (8010ad8 <MDNS::Run()+0x3c>)
 8010aa8:	490c      	ldr	r1, [pc, #48]	; (8010adc <MDNS::Run()+0x40>)
 8010aaa:	7800      	ldrb	r0, [r0, #0]
 8010aac:	f7ff fbac 	bl	8010208 <udp_recv2>
 8010ab0:	4b0b      	ldr	r3, [pc, #44]	; (8010ae0 <MDNS::Run()+0x44>)
 8010ab2:	882a      	ldrh	r2, [r5, #0]
 8010ab4:	8018      	strh	r0, [r3, #0]
 8010ab6:	f241 43e9 	movw	r3, #5353	; 0x14e9
 8010aba:	429a      	cmp	r2, r3
 8010abc:	d106      	bne.n	8010acc <MDNS::Run()+0x30>
 8010abe:	280c      	cmp	r0, #12
 8010ac0:	d904      	bls.n	8010acc <MDNS::Run()+0x30>
 8010ac2:	4620      	mov	r0, r4
 8010ac4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8010ac8:	f7ff bfd4 	b.w	8010a74 <MDNS::Parse()>
 8010acc:	bd38      	pop	{r3, r4, r5, pc}
 8010ace:	bf00      	nop
 8010ad0:	2001c2d4 	ldrdcs	ip, [r1], -r4
 8010ad4:	2000000c 	andcs	r0, r0, ip
 8010ad8:	2001c2d0 	ldrdcs	ip, [r1], -r0
 8010adc:	2001c70c 	andcs	ip, r1, ip, lsl #14
 8010ae0:	2001c500 	andcs	ip, r1, r0, lsl #10

08010ae4 <MDNS::Print()>:
 8010ae4:	b510      	push	{r4, lr}
 8010ae6:	4816      	ldr	r0, [pc, #88]	; (8010b40 <MDNS::Print()+0x5c>)
 8010ae8:	f7f8 fd4a 	bl	8009580 <printf>
 8010aec:	4b15      	ldr	r3, [pc, #84]	; (8010b44 <MDNS::Print()+0x60>)
 8010aee:	681b      	ldr	r3, [r3, #0]
 8010af0:	3301      	adds	r3, #1
 8010af2:	d104      	bne.n	8010afe <MDNS::Print()+0x1a>
 8010af4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010af8:	4813      	ldr	r0, [pc, #76]	; (8010b48 <MDNS::Print()+0x64>)
 8010afa:	f7f8 bd41 	b.w	8009580 <printf>
 8010afe:	4b13      	ldr	r3, [pc, #76]	; (8010b4c <MDNS::Print()+0x68>)
 8010b00:	4c13      	ldr	r4, [pc, #76]	; (8010b50 <MDNS::Print()+0x6c>)
 8010b02:	6819      	ldr	r1, [r3, #0]
 8010b04:	4813      	ldr	r0, [pc, #76]	; (8010b54 <MDNS::Print()+0x70>)
 8010b06:	f7f8 fd3b 	bl	8009580 <printf>
 8010b0a:	6823      	ldr	r3, [r4, #0]
 8010b0c:	b14b      	cbz	r3, 8010b22 <MDNS::Print()+0x3e>
 8010b0e:	4a12      	ldr	r2, [pc, #72]	; (8010b58 <MDNS::Print()+0x74>)
 8010b10:	68a3      	ldr	r3, [r4, #8]
 8010b12:	6861      	ldr	r1, [r4, #4]
 8010b14:	2b00      	cmp	r3, #0
 8010b16:	bf08      	it	eq
 8010b18:	4613      	moveq	r3, r2
 8010b1a:	4810      	ldr	r0, [pc, #64]	; (8010b5c <MDNS::Print()+0x78>)
 8010b1c:	89a2      	ldrh	r2, [r4, #12]
 8010b1e:	f7f8 fd2f 	bl	8009580 <printf>
 8010b22:	6923      	ldr	r3, [r4, #16]
 8010b24:	b15b      	cbz	r3, 8010b3e <MDNS::Print()+0x5a>
 8010b26:	69a3      	ldr	r3, [r4, #24]
 8010b28:	4a0b      	ldr	r2, [pc, #44]	; (8010b58 <MDNS::Print()+0x74>)
 8010b2a:	6961      	ldr	r1, [r4, #20]
 8010b2c:	2b00      	cmp	r3, #0
 8010b2e:	bf08      	it	eq
 8010b30:	4613      	moveq	r3, r2
 8010b32:	480a      	ldr	r0, [pc, #40]	; (8010b5c <MDNS::Print()+0x78>)
 8010b34:	8ba2      	ldrh	r2, [r4, #28]
 8010b36:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010b3a:	f7f8 bd21 	b.w	8009580 <printf>
 8010b3e:	bd10      	pop	{r4, pc}
 8010b40:	08017568 	stmdaeq	r1, {r3, r5, r6, r8, sl, ip, sp, lr}
 8010b44:	2000000c 	andcs	r0, r0, ip
 8010b48:	0801756e 	stmdaeq	r1, {r1, r2, r3, r5, r6, r8, sl, ip, sp, lr}
 8010b4c:	2001c708 	andcs	ip, r1, r8, lsl #14
 8010b50:	2001c4e0 	andcs	ip, r1, r0, ror #9
 8010b54:	0801757c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r8, sl, ip, sp, lr}
 8010b58:	0801686b 	stmdaeq	r1, {r0, r1, r3, r5, r6, fp, sp, lr}
 8010b5c:	08017588 	stmdaeq	r1, {r3, r7, r8, sl, ip, sp, lr}

08010b60 <strncpy.constprop.0.isra.0>:
 8010b60:	233f      	movs	r3, #63	; 0x3f
 8010b62:	3901      	subs	r1, #1
 8010b64:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 8010b68:	b92a      	cbnz	r2, 8010b76 <strncpy.constprop.0.isra.0+0x16>
 8010b6a:	4403      	add	r3, r0
 8010b6c:	4298      	cmp	r0, r3
 8010b6e:	d006      	beq.n	8010b7e <strncpy.constprop.0.isra.0+0x1e>
 8010b70:	f800 2b01 	strb.w	r2, [r0], #1
 8010b74:	e7fa      	b.n	8010b6c <strncpy.constprop.0.isra.0+0xc>
 8010b76:	3b01      	subs	r3, #1
 8010b78:	f800 2b01 	strb.w	r2, [r0], #1
 8010b7c:	d1f2      	bne.n	8010b64 <strncpy.constprop.0.isra.0+0x4>
 8010b7e:	4770      	bx	lr

08010b80 <Network::Network()>:
 8010b80:	4a11      	ldr	r2, [pc, #68]	; (8010bc8 <Network::Network()+0x48>)
 8010b82:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8010b86:	6010      	str	r0, [r2, #0]
 8010b88:	2201      	movs	r2, #1
 8010b8a:	2300      	movs	r3, #0
 8010b8c:	e9c0 1200 	strd	r1, r2, [r0]
 8010b90:	2200      	movs	r2, #0
 8010b92:	e9c0 332f 	strd	r3, r3, [r0, #188]	; 0xbc
 8010b96:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8010b9a:	490c      	ldr	r1, [pc, #48]	; (8010bcc <Network::Network()+0x4c>)
 8010b9c:	60c2      	str	r2, [r0, #12]
 8010b9e:	f8c0 30b4 	str.w	r3, [r0, #180]	; 0xb4
 8010ba2:	f8c0 30c4 	str.w	r3, [r0, #196]	; 0xc4
 8010ba6:	f880 309c 	strb.w	r3, [r0, #156]	; 0x9c
 8010baa:	6083      	str	r3, [r0, #8]
 8010bac:	6183      	str	r3, [r0, #24]
 8010bae:	7703      	strb	r3, [r0, #28]
 8010bb0:	f880 305c 	strb.w	r3, [r0, #92]	; 0x5c
 8010bb4:	f100 02a2 	add.w	r2, r0, #162	; 0xa2
 8010bb8:	f811 3b01 	ldrb.w	r3, [r1], #1
 8010bbc:	f802 3b01 	strb.w	r3, [r2], #1
 8010bc0:	2b00      	cmp	r3, #0
 8010bc2:	d1f9      	bne.n	8010bb8 <Network::Network()+0x38>
 8010bc4:	4770      	bx	lr
 8010bc6:	bf00      	nop
 8010bc8:	2001c710 	andcs	ip, r1, r0, lsl r7
 8010bcc:	08017593 	stmdaeq	r1, {r0, r1, r4, r7, r8, sl, ip, sp, lr}

08010bd0 <Network::Shutdown()>:
 8010bd0:	b508      	push	{r3, lr}
 8010bd2:	30b8      	adds	r0, #184	; 0xb8
 8010bd4:	f001 fd20 	bl	8012618 <NetworkDisplay::ShowShutdown()>
 8010bd8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8010bdc:	f7f6 bb34 	b.w	8007248 <net_shutdown>

08010be0 <Network::Begin(unsigned short)>:
 8010be0:	4608      	mov	r0, r1
 8010be2:	f7ff baa1 	b.w	8010128 <udp_bind>

08010be6 <Network::End(unsigned short)>:
 8010be6:	4608      	mov	r0, r1
 8010be8:	f7ff bab8 	b.w	801015c <udp_unbind>

08010bec <Network::MacAddressCopyTo(unsigned char*)>:
 8010bec:	f100 039c 	add.w	r3, r0, #156	; 0x9c
 8010bf0:	3901      	subs	r1, #1
 8010bf2:	30a2      	adds	r0, #162	; 0xa2
 8010bf4:	f813 2b01 	ldrb.w	r2, [r3], #1
 8010bf8:	4283      	cmp	r3, r0
 8010bfa:	f801 2f01 	strb.w	r2, [r1, #1]!
 8010bfe:	d1f9      	bne.n	8010bf4 <Network::MacAddressCopyTo(unsigned char*)+0x8>
 8010c00:	4770      	bx	lr

08010c02 <Network::JoinGroup(int, unsigned int)>:
 8010c02:	4610      	mov	r0, r2
 8010c04:	f001 b898 	b.w	8011d38 <igmp_join>

08010c08 <Network::LeaveGroup(int, unsigned int)>:
 8010c08:	4610      	mov	r0, r2
 8010c0a:	f001 b8c1 	b.w	8011d90 <igmp_leave>

08010c0e <Network::SetDefaultIp()>:
 8010c0e:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 8010c12:	f890 209f 	ldrb.w	r2, [r0, #159]	; 0x9f
 8010c16:	041b      	lsls	r3, r3, #16
 8010c18:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 8010c1c:	f890 20a1 	ldrb.w	r2, [r0, #161]	; 0xa1
 8010c20:	3302      	adds	r3, #2
 8010c22:	eb03 6302 	add.w	r3, r3, r2, lsl #24
 8010c26:	22ff      	movs	r2, #255	; 0xff
 8010c28:	6103      	str	r3, [r0, #16]
 8010c2a:	e9c0 3205 	strd	r3, r2, [r0, #20]
 8010c2e:	4770      	bx	lr

08010c30 <Network::Init(NetworkParamsStore*)>:
 8010c30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010c34:	b08b      	sub	sp, #44	; 0x2c
 8010c36:	4604      	mov	r4, r0
 8010c38:	a806      	add	r0, sp, #24
 8010c3a:	f000 fad3 	bl	80111e4 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 8010c3e:	a806      	add	r0, sp, #24
 8010c40:	f000 fae0 	bl	8011204 <NetworkParams::Load()>
 8010c44:	b110      	cbz	r0, 8010c4c <Network::Init(NetworkParamsStore*)+0x1c>
 8010c46:	a806      	add	r0, sp, #24
 8010c48:	f000 fd49 	bl	80116de <NetworkParams::Dump()>
 8010c4c:	f104 05b8 	add.w	r5, r4, #184	; 0xb8
 8010c50:	f8df 822c 	ldr.w	r8, [pc, #556]	; 8010e80 <Network::Init(NetworkParamsStore*)+0x250>
 8010c54:	4628      	mov	r0, r5
 8010c56:	f104 079c 	add.w	r7, r4, #156	; 0x9c
 8010c5a:	f001 fcc5 	bl	80125e8 <NetworkDisplay::ShowEmacStart()>
 8010c5e:	4638      	mov	r0, r7
 8010c60:	f003 fc26 	bl	80144b0 <emac_start>
 8010c64:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8010c68:	f104 061c 	add.w	r6, r4, #28
 8010c6c:	9307      	str	r3, [sp, #28]
 8010c6e:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8010c72:	9308      	str	r3, [sp, #32]
 8010c74:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8010c78:	9309      	str	r3, [sp, #36]	; 0x24
 8010c7a:	f898 3014 	ldrb.w	r3, [r8, #20]
 8010c7e:	7063      	strb	r3, [r4, #1]
 8010c80:	f8d8 3000 	ldr.w	r3, [r8]
 8010c84:	f013 0240 	ands.w	r2, r3, #64	; 0x40
 8010c88:	bf18      	it	ne
 8010c8a:	f8d8 2055 	ldrne.w	r2, [r8, #85]	; 0x55
 8010c8e:	061b      	lsls	r3, r3, #24
 8010c90:	bf58      	it	pl
 8010c92:	2300      	movpl	r3, #0
 8010c94:	60a2      	str	r2, [r4, #8]
 8010c96:	bf48      	it	mi
 8010c98:	f8d8 3059 	ldrmi.w	r3, [r8, #89]	; 0x59
 8010c9c:	60e3      	str	r3, [r4, #12]
 8010c9e:	f898 3015 	ldrb.w	r3, [r8, #21]
 8010ca2:	2b00      	cmp	r3, #0
 8010ca4:	f040 80bc 	bne.w	8010e20 <Network::Init(NetworkParamsStore*)+0x1f0>
 8010ca8:	4630      	mov	r0, r6
 8010caa:	4976      	ldr	r1, [pc, #472]	; (8010e84 <Network::Init(NetworkParamsStore*)+0x254>)
 8010cac:	f811 2b01 	ldrb.w	r2, [r1], #1
 8010cb0:	f103 0c01 	add.w	ip, r3, #1
 8010cb4:	2a00      	cmp	r2, #0
 8010cb6:	f040 80af 	bne.w	8010e18 <Network::Init(NetworkParamsStore*)+0x1e8>
 8010cba:	f894 209f 	ldrb.w	r2, [r4, #159]	; 0x9f
 8010cbe:	18e1      	adds	r1, r4, r3
 8010cc0:	0910      	lsrs	r0, r2, #4
 8010cc2:	2a9f      	cmp	r2, #159	; 0x9f
 8010cc4:	f002 020f 	and.w	r2, r2, #15
 8010cc8:	bf94      	ite	ls
 8010cca:	3030      	addls	r0, #48	; 0x30
 8010ccc:	3037      	addhi	r0, #55	; 0x37
 8010cce:	2a09      	cmp	r2, #9
 8010cd0:	bf94      	ite	ls
 8010cd2:	3230      	addls	r2, #48	; 0x30
 8010cd4:	3237      	addhi	r2, #55	; 0x37
 8010cd6:	44a4      	add	ip, r4
 8010cd8:	7708      	strb	r0, [r1, #28]
 8010cda:	f88c 201c 	strb.w	r2, [ip, #28]
 8010cde:	f894 20a0 	ldrb.w	r2, [r4, #160]	; 0xa0
 8010ce2:	f103 0e02 	add.w	lr, r3, #2
 8010ce6:	0910      	lsrs	r0, r2, #4
 8010ce8:	2a9f      	cmp	r2, #159	; 0x9f
 8010cea:	f002 020f 	and.w	r2, r2, #15
 8010cee:	bf94      	ite	ls
 8010cf0:	3030      	addls	r0, #48	; 0x30
 8010cf2:	3037      	addhi	r0, #55	; 0x37
 8010cf4:	f103 0903 	add.w	r9, r3, #3
 8010cf8:	2a09      	cmp	r2, #9
 8010cfa:	44a6      	add	lr, r4
 8010cfc:	f88e 001c 	strb.w	r0, [lr, #28]
 8010d00:	bf94      	ite	ls
 8010d02:	3230      	addls	r2, #48	; 0x30
 8010d04:	3237      	addhi	r2, #55	; 0x37
 8010d06:	eb04 0009 	add.w	r0, r4, r9
 8010d0a:	7702      	strb	r2, [r0, #28]
 8010d0c:	f894 20a1 	ldrb.w	r2, [r4, #161]	; 0xa1
 8010d10:	f103 0c04 	add.w	ip, r3, #4
 8010d14:	0910      	lsrs	r0, r2, #4
 8010d16:	2a9f      	cmp	r2, #159	; 0x9f
 8010d18:	f002 020f 	and.w	r2, r2, #15
 8010d1c:	bf94      	ite	ls
 8010d1e:	3030      	addls	r0, #48	; 0x30
 8010d20:	3037      	addhi	r0, #55	; 0x37
 8010d22:	3305      	adds	r3, #5
 8010d24:	2a09      	cmp	r2, #9
 8010d26:	4423      	add	r3, r4
 8010d28:	44a4      	add	ip, r4
 8010d2a:	bf94      	ite	ls
 8010d2c:	3230      	addls	r2, #48	; 0x30
 8010d2e:	3237      	addhi	r2, #55	; 0x37
 8010d30:	f88c 001c 	strb.w	r0, [ip, #28]
 8010d34:	771a      	strb	r2, [r3, #28]
 8010d36:	2300      	movs	r3, #0
 8010d38:	f881 3022 	strb.w	r3, [r1, #34]	; 0x22
 8010d3c:	7863      	ldrb	r3, [r4, #1]
 8010d3e:	2b00      	cmp	r3, #0
 8010d40:	f040 8098 	bne.w	8010e74 <Network::Init(NetworkParamsStore*)+0x244>
 8010d44:	9b07      	ldr	r3, [sp, #28]
 8010d46:	2b00      	cmp	r3, #0
 8010d48:	d172      	bne.n	8010e30 <Network::Init(NetworkParamsStore*)+0x200>
 8010d4a:	4620      	mov	r0, r4
 8010d4c:	f7ff ff5f 	bl	8010c0e <Network::SetDefaultIp()>
 8010d50:	6923      	ldr	r3, [r4, #16]
 8010d52:	69a2      	ldr	r2, [r4, #24]
 8010d54:	9307      	str	r3, [sp, #28]
 8010d56:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8010d5a:	1ce3      	adds	r3, r4, #3
 8010d5c:	f104 0901 	add.w	r9, r4, #1
 8010d60:	9302      	str	r3, [sp, #8]
 8010d62:	9300      	str	r3, [sp, #0]
 8010d64:	4632      	mov	r2, r6
 8010d66:	464b      	mov	r3, r9
 8010d68:	4638      	mov	r0, r7
 8010d6a:	a907      	add	r1, sp, #28
 8010d6c:	f7f6 fa1c 	bl	80071a8 <net_init>
 8010d70:	78e3      	ldrb	r3, [r4, #3]
 8010d72:	b11b      	cbz	r3, 8010d7c <Network::Init(NetworkParamsStore*)+0x14c>
 8010d74:	2104      	movs	r1, #4
 8010d76:	4628      	mov	r0, r5
 8010d78:	f001 fc54 	bl	8012624 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 8010d7c:	f898 3014 	ldrb.w	r3, [r8, #20]
 8010d80:	f898 a05d 	ldrb.w	sl, [r8, #93]	; 0x5d
 8010d84:	9304      	str	r3, [sp, #16]
 8010d86:	233c      	movs	r3, #60	; 0x3c
 8010d88:	fb03 f30a 	mul.w	r3, r3, sl
 8010d8c:	f8df 80f8 	ldr.w	r8, [pc, #248]	; 8010e88 <Network::Init(NetworkParamsStore*)+0x258>
 8010d90:	f8df b0f8 	ldr.w	fp, [pc, #248]	; 8010e8c <Network::Init(NetworkParamsStore*)+0x25c>
 8010d94:	9303      	str	r3, [sp, #12]
 8010d96:	78e3      	ldrb	r3, [r4, #3]
 8010d98:	b393      	cbz	r3, 8010e00 <Network::Init(NetworkParamsStore*)+0x1d0>
 8010d9a:	f1ba 0f00 	cmp.w	sl, #0
 8010d9e:	d02f      	beq.n	8010e00 <Network::Init(NetworkParamsStore*)+0x1d0>
 8010da0:	9b04      	ldr	r3, [sp, #16]
 8010da2:	b36b      	cbz	r3, 8010e00 <Network::Init(NetworkParamsStore*)+0x1d0>
 8010da4:	2104      	movs	r1, #4
 8010da6:	f8d8 0000 	ldr.w	r0, [r8]
 8010daa:	f002 fa61 	bl	8013270 <LedBlink::SetMode(ledblink::Mode)>
 8010dae:	2103      	movs	r1, #3
 8010db0:	4628      	mov	r0, r5
 8010db2:	f001 fc37 	bl	8012624 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 8010db6:	2000      	movs	r0, #0
 8010db8:	f002 fd1e 	bl	80137f8 <time>
 8010dbc:	9005      	str	r0, [sp, #20]
 8010dbe:	2000      	movs	r0, #0
 8010dc0:	f002 fd1a 	bl	80137f8 <time>
 8010dc4:	9b05      	ldr	r3, [sp, #20]
 8010dc6:	4932      	ldr	r1, [pc, #200]	; (8010e90 <Network::Init(NetworkParamsStore*)+0x260>)
 8010dc8:	1ac0      	subs	r0, r0, r3
 8010dca:	9b03      	ldr	r3, [sp, #12]
 8010dcc:	4298      	cmp	r0, r3
 8010dce:	db37      	blt.n	8010e40 <Network::Init(NetworkParamsStore*)+0x210>
 8010dd0:	2101      	movs	r1, #1
 8010dd2:	4628      	mov	r0, r5
 8010dd4:	f001 fc26 	bl	8012624 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 8010dd8:	2101      	movs	r1, #1
 8010dda:	f8d8 0000 	ldr.w	r0, [r8]
 8010dde:	f002 fa47 	bl	8013270 <LedBlink::SetMode(ledblink::Mode)>
 8010de2:	2301      	movs	r3, #1
 8010de4:	7063      	strb	r3, [r4, #1]
 8010de6:	2300      	movs	r3, #0
 8010de8:	70e3      	strb	r3, [r4, #3]
 8010dea:	9b02      	ldr	r3, [sp, #8]
 8010dec:	4632      	mov	r2, r6
 8010dee:	9300      	str	r3, [sp, #0]
 8010df0:	4638      	mov	r0, r7
 8010df2:	464b      	mov	r3, r9
 8010df4:	a907      	add	r1, sp, #28
 8010df6:	f7f6 f9d7 	bl	80071a8 <net_init>
 8010dfa:	7863      	ldrb	r3, [r4, #1]
 8010dfc:	2b00      	cmp	r3, #0
 8010dfe:	d0ca      	beq.n	8010d96 <Network::Init(NetworkParamsStore*)+0x166>
 8010e00:	9b07      	ldr	r3, [sp, #28]
 8010e02:	4628      	mov	r0, r5
 8010e04:	6123      	str	r3, [r4, #16]
 8010e06:	9b08      	ldr	r3, [sp, #32]
 8010e08:	61a3      	str	r3, [r4, #24]
 8010e0a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8010e0c:	6163      	str	r3, [r4, #20]
 8010e0e:	f001 fbf1 	bl	80125f4 <NetworkDisplay::ShowIp()>
 8010e12:	b00b      	add	sp, #44	; 0x2c
 8010e14:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010e18:	4663      	mov	r3, ip
 8010e1a:	f800 2b01 	strb.w	r2, [r0], #1
 8010e1e:	e745      	b.n	8010cac <Network::Init(NetworkParamsStore*)+0x7c>
 8010e20:	4630      	mov	r0, r6
 8010e22:	491c      	ldr	r1, [pc, #112]	; (8010e94 <Network::Init(NetworkParamsStore*)+0x264>)
 8010e24:	f7ff fe9c 	bl	8010b60 <strncpy.constprop.0.isra.0>
 8010e28:	2300      	movs	r3, #0
 8010e2a:	f884 305b 	strb.w	r3, [r4, #91]	; 0x5b
 8010e2e:	e785      	b.n	8010d3c <Network::Init(NetworkParamsStore*)+0x10c>
 8010e30:	69a1      	ldr	r1, [r4, #24]
 8010e32:	e9d4 2304 	ldrd	r2, r3, [r4, #16]
 8010e36:	4053      	eors	r3, r2
 8010e38:	420b      	tst	r3, r1
 8010e3a:	bf18      	it	ne
 8010e3c:	9209      	strne	r2, [sp, #36]	; 0x24
 8010e3e:	e78c      	b.n	8010d5a <Network::Init(NetworkParamsStore*)+0x12a>
 8010e40:	f8d8 3000 	ldr.w	r3, [r8]
 8010e44:	f8d3 c00c 	ldr.w	ip, [r3, #12]
 8010e48:	f1bc 0f00 	cmp.w	ip, #0
 8010e4c:	d0b7      	beq.n	8010dbe <Network::Init(NetworkParamsStore*)+0x18e>
 8010e4e:	6808      	ldr	r0, [r1, #0]
 8010e50:	695a      	ldr	r2, [r3, #20]
 8010e52:	1a80      	subs	r0, r0, r2
 8010e54:	4584      	cmp	ip, r0
 8010e56:	d8b2      	bhi.n	8010dbe <Network::Init(NetworkParamsStore*)+0x18e>
 8010e58:	6808      	ldr	r0, [r1, #0]
 8010e5a:	6158      	str	r0, [r3, #20]
 8010e5c:	6918      	ldr	r0, [r3, #16]
 8010e5e:	2801      	cmp	r0, #1
 8010e60:	f080 0201 	eor.w	r2, r0, #1
 8010e64:	611a      	str	r2, [r3, #16]
 8010e66:	bf16      	itet	ne
 8010e68:	2301      	movne	r3, #1
 8010e6a:	f8cb 0014 	streq.w	r0, [fp, #20]
 8010e6e:	f8cb 3010 	strne.w	r3, [fp, #16]
 8010e72:	e7a4      	b.n	8010dbe <Network::Init(NetworkParamsStore*)+0x18e>
 8010e74:	2101      	movs	r1, #1
 8010e76:	4628      	mov	r0, r5
 8010e78:	f001 fbd4 	bl	8012624 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 8010e7c:	e76d      	b.n	8010d5a <Network::Init(NetworkParamsStore*)+0x12a>
 8010e7e:	bf00      	nop
 8010e80:	2001c714 	andcs	ip, r1, r4, lsl r7
 8010e84:	08017598 	stmdaeq	r1, {r3, r4, r7, r8, sl, ip, sp, lr}
 8010e88:	2001ce34 	andcs	ip, r1, r4, lsr lr
 8010e8c:	40011000 	andmi	r1, r1, r0
 8010e90:	2001ce4c 	andcs	ip, r1, ip, asr #28
 8010e94:	2001c729 	andcs	ip, r1, r9, lsr #14

08010e98 <Network::SetIp(unsigned int)>:
 8010e98:	7843      	ldrb	r3, [r0, #1]
 8010e9a:	b570      	push	{r4, r5, r6, lr}
 8010e9c:	4604      	mov	r4, r0
 8010e9e:	460d      	mov	r5, r1
 8010ea0:	2600      	movs	r6, #0
 8010ea2:	b113      	cbz	r3, 8010eaa <Network::SetIp(unsigned int)+0x12>
 8010ea4:	7046      	strb	r6, [r0, #1]
 8010ea6:	f7fe fedd 	bl	800fc64 <net_dhcp_release>
 8010eaa:	70e6      	strb	r6, [r4, #3]
 8010eac:	b975      	cbnz	r5, 8010ecc <Network::SetIp(unsigned int)+0x34>
 8010eae:	4620      	mov	r0, r4
 8010eb0:	f7ff fead 	bl	8010c0e <Network::SetDefaultIp()>
 8010eb4:	6920      	ldr	r0, [r4, #16]
 8010eb6:	f7fe fe99 	bl	800fbec <net_set_ip>
 8010eba:	34b8      	adds	r4, #184	; 0xb8
 8010ebc:	4620      	mov	r0, r4
 8010ebe:	f001 fb99 	bl	80125f4 <NetworkDisplay::ShowIp()>
 8010ec2:	4620      	mov	r0, r4
 8010ec4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010ec8:	f001 bb9a 	b.w	8012600 <NetworkDisplay::ShowNetMask()>
 8010ecc:	4628      	mov	r0, r5
 8010ece:	f7fe fe8d 	bl	800fbec <net_set_ip>
 8010ed2:	f8d4 00b4 	ldr.w	r0, [r4, #180]	; 0xb4
 8010ed6:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8010eda:	2800      	cmp	r0, #0
 8010edc:	d0ed      	beq.n	8010eba <Network::SetIp(unsigned int)+0x22>
 8010ede:	6803      	ldr	r3, [r0, #0]
 8010ee0:	4629      	mov	r1, r5
 8010ee2:	689b      	ldr	r3, [r3, #8]
 8010ee4:	4798      	blx	r3
 8010ee6:	f8d4 00b4 	ldr.w	r0, [r4, #180]	; 0xb4
 8010eea:	2100      	movs	r1, #0
 8010eec:	6803      	ldr	r3, [r0, #0]
 8010eee:	699b      	ldr	r3, [r3, #24]
 8010ef0:	4798      	blx	r3
 8010ef2:	e7e2      	b.n	8010eba <Network::SetIp(unsigned int)+0x22>

08010ef4 <Network::SetNetmask(unsigned int)>:
 8010ef4:	6982      	ldr	r2, [r0, #24]
 8010ef6:	b510      	push	{r4, lr}
 8010ef8:	428a      	cmp	r2, r1
 8010efa:	4604      	mov	r4, r0
 8010efc:	d00f      	beq.n	8010f1e <Network::SetNetmask(unsigned int)+0x2a>
 8010efe:	6181      	str	r1, [r0, #24]
 8010f00:	f8d0 00b4 	ldr.w	r0, [r0, #180]	; 0xb4
 8010f04:	b110      	cbz	r0, 8010f0c <Network::SetNetmask(unsigned int)+0x18>
 8010f06:	6803      	ldr	r3, [r0, #0]
 8010f08:	68db      	ldr	r3, [r3, #12]
 8010f0a:	4798      	blx	r3
 8010f0c:	34b8      	adds	r4, #184	; 0xb8
 8010f0e:	4620      	mov	r0, r4
 8010f10:	f001 fb70 	bl	80125f4 <NetworkDisplay::ShowIp()>
 8010f14:	4620      	mov	r0, r4
 8010f16:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010f1a:	f001 bb71 	b.w	8012600 <NetworkDisplay::ShowNetMask()>
 8010f1e:	bd10      	pop	{r4, pc}

08010f20 <Network::SetHostName(char const*)>:
 8010f20:	b570      	push	{r4, r5, r6, lr}
 8010f22:	4604      	mov	r4, r0
 8010f24:	f100 051c 	add.w	r5, r0, #28
 8010f28:	4628      	mov	r0, r5
 8010f2a:	f7ff fe19 	bl	8010b60 <strncpy.constprop.0.isra.0>
 8010f2e:	2300      	movs	r3, #0
 8010f30:	f8d4 00b4 	ldr.w	r0, [r4, #180]	; 0xb4
 8010f34:	f884 305b 	strb.w	r3, [r4, #91]	; 0x5b
 8010f38:	b158      	cbz	r0, 8010f52 <Network::SetHostName(char const*)+0x32>
 8010f3a:	6803      	ldr	r3, [r0, #0]
 8010f3c:	695e      	ldr	r6, [r3, #20]
 8010f3e:	462b      	mov	r3, r5
 8010f40:	461a      	mov	r2, r3
 8010f42:	7811      	ldrb	r1, [r2, #0]
 8010f44:	3301      	adds	r3, #1
 8010f46:	2900      	cmp	r1, #0
 8010f48:	d1fa      	bne.n	8010f40 <Network::SetHostName(char const*)+0x20>
 8010f4a:	1b52      	subs	r2, r2, r5
 8010f4c:	4629      	mov	r1, r5
 8010f4e:	b292      	uxth	r2, r2
 8010f50:	47b0      	blx	r6
 8010f52:	f104 00b8 	add.w	r0, r4, #184	; 0xb8
 8010f56:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010f5a:	f001 bb57 	b.w	801260c <NetworkDisplay::ShowHostName()>

08010f5e <Network::SetZeroconf()>:
 8010f5e:	b530      	push	{r4, r5, lr}
 8010f60:	b085      	sub	sp, #20
 8010f62:	4604      	mov	r4, r0
 8010f64:	a801      	add	r0, sp, #4
 8010f66:	f7fe fe87 	bl	800fc78 <net_set_zeroconf>
 8010f6a:	70e0      	strb	r0, [r4, #3]
 8010f6c:	b170      	cbz	r0, 8010f8c <Network::SetZeroconf()+0x2e>
 8010f6e:	9b01      	ldr	r3, [sp, #4]
 8010f70:	f8d4 00b4 	ldr.w	r0, [r4, #180]	; 0xb4
 8010f74:	6123      	str	r3, [r4, #16]
 8010f76:	9b02      	ldr	r3, [sp, #8]
 8010f78:	61a3      	str	r3, [r4, #24]
 8010f7a:	9b03      	ldr	r3, [sp, #12]
 8010f7c:	6163      	str	r3, [r4, #20]
 8010f7e:	2300      	movs	r3, #0
 8010f80:	7063      	strb	r3, [r4, #1]
 8010f82:	b118      	cbz	r0, 8010f8c <Network::SetZeroconf()+0x2e>
 8010f84:	6803      	ldr	r3, [r0, #0]
 8010f86:	2101      	movs	r1, #1
 8010f88:	699b      	ldr	r3, [r3, #24]
 8010f8a:	4798      	blx	r3
 8010f8c:	f104 05b8 	add.w	r5, r4, #184	; 0xb8
 8010f90:	4628      	mov	r0, r5
 8010f92:	f001 fb2f 	bl	80125f4 <NetworkDisplay::ShowIp()>
 8010f96:	4628      	mov	r0, r5
 8010f98:	f001 fb32 	bl	8012600 <NetworkDisplay::ShowNetMask()>
 8010f9c:	78e0      	ldrb	r0, [r4, #3]
 8010f9e:	b005      	add	sp, #20
 8010fa0:	bd30      	pop	{r4, r5, pc}
	...

08010fa4 <Network::EnableDhcp()>:
 8010fa4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010fa6:	4e23      	ldr	r6, [pc, #140]	; (8011034 <Network::EnableDhcp()+0x90>)
 8010fa8:	4604      	mov	r4, r0
 8010faa:	6833      	ldr	r3, [r6, #0]
 8010fac:	b085      	sub	sp, #20
 8010fae:	791f      	ldrb	r7, [r3, #4]
 8010fb0:	b137      	cbz	r7, 8010fc0 <Network::EnableDhcp()+0x1c>
 8010fb2:	2200      	movs	r2, #0
 8010fb4:	2104      	movs	r1, #4
 8010fb6:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8010fba:	711a      	strb	r2, [r3, #4]
 8010fbc:	f002 fe0c 	bl	8013bd8 <fwdgt_config>
 8010fc0:	f104 05b8 	add.w	r5, r4, #184	; 0xb8
 8010fc4:	2101      	movs	r1, #1
 8010fc6:	4628      	mov	r0, r5
 8010fc8:	f001 fb2c 	bl	8012624 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 8010fcc:	1ce2      	adds	r2, r4, #3
 8010fce:	f104 011c 	add.w	r1, r4, #28
 8010fd2:	a801      	add	r0, sp, #4
 8010fd4:	f7fe fe1a 	bl	800fc0c <net_set_dhcp>
 8010fd8:	78e3      	ldrb	r3, [r4, #3]
 8010fda:	7060      	strb	r0, [r4, #1]
 8010fdc:	b343      	cbz	r3, 8011030 <Network::EnableDhcp()+0x8c>
 8010fde:	2104      	movs	r1, #4
 8010fe0:	4628      	mov	r0, r5
 8010fe2:	f001 fb1f 	bl	8012624 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 8010fe6:	b16f      	cbz	r7, 8011004 <Network::EnableDhcp()+0x60>
 8010fe8:	2102      	movs	r1, #2
 8010fea:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8010fee:	6836      	ldr	r6, [r6, #0]
 8010ff0:	f002 fdf2 	bl	8013bd8 <fwdgt_config>
 8010ff4:	2801      	cmp	r0, #1
 8010ff6:	bf0c      	ite	eq
 8010ff8:	2301      	moveq	r3, #1
 8010ffa:	2300      	movne	r3, #0
 8010ffc:	7133      	strb	r3, [r6, #4]
 8010ffe:	d101      	bne.n	8011004 <Network::EnableDhcp()+0x60>
 8011000:	f002 fdda 	bl	8013bb8 <fwdgt_enable>
 8011004:	9b01      	ldr	r3, [sp, #4]
 8011006:	f8d4 00b4 	ldr.w	r0, [r4, #180]	; 0xb4
 801100a:	6123      	str	r3, [r4, #16]
 801100c:	9b02      	ldr	r3, [sp, #8]
 801100e:	61a3      	str	r3, [r4, #24]
 8011010:	9b03      	ldr	r3, [sp, #12]
 8011012:	6163      	str	r3, [r4, #20]
 8011014:	b118      	cbz	r0, 801101e <Network::EnableDhcp()+0x7a>
 8011016:	6803      	ldr	r3, [r0, #0]
 8011018:	7861      	ldrb	r1, [r4, #1]
 801101a:	699b      	ldr	r3, [r3, #24]
 801101c:	4798      	blx	r3
 801101e:	4628      	mov	r0, r5
 8011020:	f001 fae8 	bl	80125f4 <NetworkDisplay::ShowIp()>
 8011024:	4628      	mov	r0, r5
 8011026:	f001 faeb 	bl	8012600 <NetworkDisplay::ShowNetMask()>
 801102a:	7860      	ldrb	r0, [r4, #1]
 801102c:	b005      	add	sp, #20
 801102e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011030:	2102      	movs	r1, #2
 8011032:	e7d5      	b.n	8010fe0 <Network::EnableDhcp()+0x3c>
 8011034:	2001ce38 	andcs	ip, r1, r8, lsr lr

08011038 <Network::SetQueuedStaticIp(unsigned int, unsigned int)>:
 8011038:	b109      	cbz	r1, 801103e <Network::SetQueuedStaticIp(unsigned int, unsigned int)+0x6>
 801103a:	f8c0 10c0 	str.w	r1, [r0, #192]	; 0xc0
 801103e:	b10a      	cbz	r2, 8011044 <Network::SetQueuedStaticIp(unsigned int, unsigned int)+0xc>
 8011040:	f8c0 20c4 	str.w	r2, [r0, #196]	; 0xc4
 8011044:	f8d0 30bc 	ldr.w	r3, [r0, #188]	; 0xbc
 8011048:	f043 0303 	orr.w	r3, r3, #3
 801104c:	f8c0 30bc 	str.w	r3, [r0, #188]	; 0xbc
 8011050:	4770      	bx	lr

08011052 <Network::ApplyQueuedConfig()>:
 8011052:	f8d0 30bc 	ldr.w	r3, [r0, #188]	; 0xbc
 8011056:	b510      	push	{r4, lr}
 8011058:	4604      	mov	r4, r0
 801105a:	b3c3      	cbz	r3, 80110ce <Network::ApplyQueuedConfig()+0x7c>
 801105c:	079a      	lsls	r2, r3, #30
 801105e:	d01a      	beq.n	8011096 <Network::ApplyQueuedConfig()+0x44>
 8011060:	079b      	lsls	r3, r3, #30
 8011062:	d509      	bpl.n	8011078 <Network::ApplyQueuedConfig()+0x26>
 8011064:	f8d0 10c4 	ldr.w	r1, [r0, #196]	; 0xc4
 8011068:	f7ff ff44 	bl	8010ef4 <Network::SetNetmask(unsigned int)>
 801106c:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 8011070:	f023 0302 	bic.w	r3, r3, #2
 8011074:	f8c4 30bc 	str.w	r3, [r4, #188]	; 0xbc
 8011078:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 801107c:	07d9      	lsls	r1, r3, #31
 801107e:	d50a      	bpl.n	8011096 <Network::ApplyQueuedConfig()+0x44>
 8011080:	4620      	mov	r0, r4
 8011082:	f8d4 10c0 	ldr.w	r1, [r4, #192]	; 0xc0
 8011086:	f7ff ff07 	bl	8010e98 <Network::SetIp(unsigned int)>
 801108a:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 801108e:	f023 0301 	bic.w	r3, r3, #1
 8011092:	f8c4 30bc 	str.w	r3, [r4, #188]	; 0xbc
 8011096:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 801109a:	075a      	lsls	r2, r3, #29
 801109c:	d508      	bpl.n	80110b0 <Network::ApplyQueuedConfig()+0x5e>
 801109e:	4620      	mov	r0, r4
 80110a0:	f7ff ff80 	bl	8010fa4 <Network::EnableDhcp()>
 80110a4:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 80110a8:	f023 0304 	bic.w	r3, r3, #4
 80110ac:	f8c4 30bc 	str.w	r3, [r4, #188]	; 0xbc
 80110b0:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 80110b4:	071b      	lsls	r3, r3, #28
 80110b6:	d508      	bpl.n	80110ca <Network::ApplyQueuedConfig()+0x78>
 80110b8:	4620      	mov	r0, r4
 80110ba:	f7ff ff50 	bl	8010f5e <Network::SetZeroconf()>
 80110be:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 80110c2:	f023 0308 	bic.w	r3, r3, #8
 80110c6:	f8c4 30bc 	str.w	r3, [r4, #188]	; 0xbc
 80110ca:	2001      	movs	r0, #1
 80110cc:	e000      	b.n	80110d0 <Network::ApplyQueuedConfig()+0x7e>
 80110ce:	4618      	mov	r0, r3
 80110d0:	bd10      	pop	{r4, pc}
	...

080110d4 <Network::Print()>:
 80110d4:	b530      	push	{r4, r5, lr}
 80110d6:	4604      	mov	r4, r0
 80110d8:	b085      	sub	sp, #20
 80110da:	4832      	ldr	r0, [pc, #200]	; (80111a4 <Network::Print()+0xd0>)
 80110dc:	f7f8 fa50 	bl	8009580 <printf>
 80110e0:	f104 011c 	add.w	r1, r4, #28
 80110e4:	4830      	ldr	r0, [pc, #192]	; (80111a8 <Network::Print()+0xd4>)
 80110e6:	f7f8 fa4b 	bl	8009580 <printf>
 80110ea:	6861      	ldr	r1, [r4, #4]
 80110ec:	f104 02a2 	add.w	r2, r4, #162	; 0xa2
 80110f0:	482e      	ldr	r0, [pc, #184]	; (80111ac <Network::Print()+0xd8>)
 80110f2:	f7f8 fa45 	bl	8009580 <printf>
 80110f6:	69a0      	ldr	r0, [r4, #24]
 80110f8:	f004 fb3c 	bl	8015774 <__popcountsi2>
 80110fc:	6925      	ldr	r5, [r4, #16]
 80110fe:	9001      	str	r0, [sp, #4]
 8011100:	0e2b      	lsrs	r3, r5, #24
 8011102:	9300      	str	r3, [sp, #0]
 8011104:	f3c5 2207 	ubfx	r2, r5, #8, #8
 8011108:	f3c5 4307 	ubfx	r3, r5, #16, #8
 801110c:	b2e9      	uxtb	r1, r5
 801110e:	4828      	ldr	r0, [pc, #160]	; (80111b0 <Network::Print()+0xdc>)
 8011110:	f7f8 fa36 	bl	8009580 <printf>
 8011114:	69a1      	ldr	r1, [r4, #24]
 8011116:	4827      	ldr	r0, [pc, #156]	; (80111b4 <Network::Print()+0xe0>)
 8011118:	0e0b      	lsrs	r3, r1, #24
 801111a:	f3c1 2207 	ubfx	r2, r1, #8, #8
 801111e:	9300      	str	r3, [sp, #0]
 8011120:	f3c1 4307 	ubfx	r3, r1, #16, #8
 8011124:	b2c9      	uxtb	r1, r1
 8011126:	f7f8 fa2b 	bl	8009580 <printf>
 801112a:	6961      	ldr	r1, [r4, #20]
 801112c:	4822      	ldr	r0, [pc, #136]	; (80111b8 <Network::Print()+0xe4>)
 801112e:	0e0b      	lsrs	r3, r1, #24
 8011130:	f3c1 2207 	ubfx	r2, r1, #8, #8
 8011134:	9300      	str	r3, [sp, #0]
 8011136:	f3c1 4307 	ubfx	r3, r1, #16, #8
 801113a:	b2c9      	uxtb	r1, r1
 801113c:	f7f8 fa20 	bl	8009580 <printf>
 8011140:	69a3      	ldr	r3, [r4, #24]
 8011142:	6921      	ldr	r1, [r4, #16]
 8011144:	481d      	ldr	r0, [pc, #116]	; (80111bc <Network::Print()+0xe8>)
 8011146:	ea61 0103 	orn	r1, r1, r3
 801114a:	0e0b      	lsrs	r3, r1, #24
 801114c:	f3c1 2207 	ubfx	r2, r1, #8, #8
 8011150:	9300      	str	r3, [sp, #0]
 8011152:	f3c1 4307 	ubfx	r3, r1, #16, #8
 8011156:	b2c9      	uxtb	r1, r1
 8011158:	f7f8 fa12 	bl	8009580 <printf>
 801115c:	f894 30a1 	ldrb.w	r3, [r4, #161]	; 0xa1
 8011160:	f894 209d 	ldrb.w	r2, [r4, #157]	; 0x9d
 8011164:	9302      	str	r3, [sp, #8]
 8011166:	f894 30a0 	ldrb.w	r3, [r4, #160]	; 0xa0
 801116a:	f894 109c 	ldrb.w	r1, [r4, #156]	; 0x9c
 801116e:	9301      	str	r3, [sp, #4]
 8011170:	f894 309f 	ldrb.w	r3, [r4, #159]	; 0x9f
 8011174:	4812      	ldr	r0, [pc, #72]	; (80111c0 <Network::Print()+0xec>)
 8011176:	9300      	str	r3, [sp, #0]
 8011178:	f894 309e 	ldrb.w	r3, [r4, #158]	; 0x9e
 801117c:	f7f8 fa00 	bl	8009580 <printf>
 8011180:	4b10      	ldr	r3, [pc, #64]	; (80111c4 <Network::Print()+0xf0>)
 8011182:	681b      	ldr	r3, [r3, #0]
 8011184:	78da      	ldrb	r2, [r3, #3]
 8011186:	b952      	cbnz	r2, 801119e <Network::Print()+0xca>
 8011188:	785b      	ldrb	r3, [r3, #1]
 801118a:	2b00      	cmp	r3, #0
 801118c:	bf14      	ite	ne
 801118e:	2144      	movne	r1, #68	; 0x44
 8011190:	2153      	moveq	r1, #83	; 0x53
 8011192:	480d      	ldr	r0, [pc, #52]	; (80111c8 <Network::Print()+0xf4>)
 8011194:	b005      	add	sp, #20
 8011196:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801119a:	f7f8 b9f1 	b.w	8009580 <printf>
 801119e:	215a      	movs	r1, #90	; 0x5a
 80111a0:	e7f7      	b.n	8011192 <Network::Print()+0xbe>
 80111a2:	bf00      	nop
 80111a4:	080175a4 	stmdaeq	r1, {r2, r5, r7, r8, sl, ip, sp, lr}
 80111a8:	080175ad 	stmdaeq	r1, {r0, r2, r3, r5, r7, r8, sl, ip, sp, lr}
 80111ac:	080175be 	stmdaeq	r1, {r1, r2, r3, r4, r5, r7, r8, sl, ip, sp, lr}
 80111b0:	080175d3 	stmdaeq	r1, {r0, r1, r4, r6, r7, r8, sl, ip, sp, lr}
 80111b4:	080175f0 	stmdaeq	r1, {r4, r5, r6, r7, r8, sl, ip, sp, lr}
 80111b8:	0801760a 	stmdaeq	r1, {r1, r3, r9, sl, ip, sp, lr}
 80111bc:	08017624 	stmdaeq	r1, {r2, r5, r9, sl, ip, sp, lr}
 80111c0:	0801763e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r9, sl, ip, sp, lr}
 80111c4:	2001c710 	andcs	ip, r1, r0, lsl r7
 80111c8:	0801766a 	stmdaeq	r1, {r1, r3, r5, r6, r9, sl, ip, sp, lr}

080111cc <Network::TcpBegin(unsigned short)>:
 80111cc:	4608      	mov	r0, r1
 80111ce:	f7fe bee5 	b.w	800ff9c <tcp_begin>

080111d2 <Network::TcpRead(int, unsigned char const**)>:
 80111d2:	4608      	mov	r0, r1
 80111d4:	4611      	mov	r1, r2
 80111d6:	f7fe bf1f 	b.w	8010018 <tcp_read>

080111da <Network::TcpWrite(int, unsigned char const*, unsigned short)>:
 80111da:	4608      	mov	r0, r1
 80111dc:	4611      	mov	r1, r2
 80111de:	461a      	mov	r2, r3
 80111e0:	f7fe bef6 	b.w	800ffd0 <tcp_write>

080111e4 <NetworkParams::NetworkParams(NetworkParamsStore*)>:
 80111e4:	4b06      	ldr	r3, [pc, #24]	; (8011200 <NetworkParams::NetworkParams(NetworkParamsStore*)+0x1c>)
 80111e6:	b510      	push	{r4, lr}
 80111e8:	225e      	movs	r2, #94	; 0x5e
 80111ea:	4604      	mov	r4, r0
 80111ec:	6001      	str	r1, [r0, #0]
 80111ee:	2100      	movs	r1, #0
 80111f0:	4618      	mov	r0, r3
 80111f2:	f002 f9f9 	bl	80135e8 <memset>
 80111f6:	2201      	movs	r2, #1
 80111f8:	7502      	strb	r2, [r0, #20]
 80111fa:	4620      	mov	r0, r4
 80111fc:	bd10      	pop	{r4, pc}
 80111fe:	bf00      	nop
 8011200:	2001c714 	andcs	ip, r1, r4, lsl r7

08011204 <NetworkParams::Load()>:
 8011204:	b508      	push	{r3, lr}
 8011206:	2300      	movs	r3, #0
 8011208:	4905      	ldr	r1, [pc, #20]	; (8011220 <NetworkParams::Load()+0x1c>)
 801120a:	6800      	ldr	r0, [r0, #0]
 801120c:	700b      	strb	r3, [r1, #0]
 801120e:	704b      	strb	r3, [r1, #1]
 8011210:	708b      	strb	r3, [r1, #2]
 8011212:	70cb      	strb	r3, [r1, #3]
 8011214:	b118      	cbz	r0, 801121e <NetworkParams::Load()+0x1a>
 8011216:	6803      	ldr	r3, [r0, #0]
 8011218:	68db      	ldr	r3, [r3, #12]
 801121a:	4798      	blx	r3
 801121c:	2001      	movs	r0, #1
 801121e:	bd08      	pop	{r3, pc}
 8011220:	2001c714 	andcs	ip, r1, r4, lsl r7

08011224 <NetworkParams::Load(char const*, unsigned int)>:
 8011224:	6803      	ldr	r3, [r0, #0]
 8011226:	b1eb      	cbz	r3, 8011264 <NetworkParams::Load(char const*, unsigned int)+0x40>
 8011228:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801122a:	2300      	movs	r3, #0
 801122c:	460e      	mov	r6, r1
 801122e:	4617      	mov	r7, r2
 8011230:	4605      	mov	r5, r0
 8011232:	4c0d      	ldr	r4, [pc, #52]	; (8011268 <NetworkParams::Load(char const*, unsigned int)+0x44>)
 8011234:	4602      	mov	r2, r0
 8011236:	490d      	ldr	r1, [pc, #52]	; (801126c <NetworkParams::Load(char const*, unsigned int)+0x48>)
 8011238:	4668      	mov	r0, sp
 801123a:	7023      	strb	r3, [r4, #0]
 801123c:	7063      	strb	r3, [r4, #1]
 801123e:	70a3      	strb	r3, [r4, #2]
 8011240:	70e3      	strb	r3, [r4, #3]
 8011242:	f001 fb47 	bl	80128d4 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 8011246:	463a      	mov	r2, r7
 8011248:	4631      	mov	r1, r6
 801124a:	4668      	mov	r0, sp
 801124c:	f001 fb46 	bl	80128dc <ReadConfigFile::Read(char const*, unsigned int)>
 8011250:	6828      	ldr	r0, [r5, #0]
 8011252:	4621      	mov	r1, r4
 8011254:	6803      	ldr	r3, [r0, #0]
 8011256:	689b      	ldr	r3, [r3, #8]
 8011258:	4798      	blx	r3
 801125a:	4668      	mov	r0, sp
 801125c:	f001 fb3d 	bl	80128da <ReadConfigFile::~ReadConfigFile()>
 8011260:	b003      	add	sp, #12
 8011262:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011264:	4770      	bx	lr
 8011266:	bf00      	nop
 8011268:	2001c714 	andcs	ip, r1, r4, lsl r7
 801126c:	0801140d 	stmdaeq	r1, {r0, r2, r3, sl, ip}

08011270 <NetworkParams::callbackFunction(char const*)>:
 8011270:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8011272:	460d      	mov	r5, r1
 8011274:	f10d 0203 	add.w	r2, sp, #3
 8011278:	4628      	mov	r0, r5
 801127a:	495b      	ldr	r1, [pc, #364]	; (80113e8 <NetworkParams::callbackFunction(char const*)+0x178>)
 801127c:	f001 fc66 	bl	8012b4c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8011280:	b980      	cbnz	r0, 80112a4 <NetworkParams::callbackFunction(char const*)+0x34>
 8011282:	495a      	ldr	r1, [pc, #360]	; (80113ec <NetworkParams::callbackFunction(char const*)+0x17c>)
 8011284:	f89d 2003 	ldrb.w	r2, [sp, #3]
 8011288:	680b      	ldr	r3, [r1, #0]
 801128a:	b142      	cbz	r2, 801129e <NetworkParams::callbackFunction(char const*)+0x2e>
 801128c:	f023 0301 	bic.w	r3, r3, #1
 8011290:	3a00      	subs	r2, #0
 8011292:	bf18      	it	ne
 8011294:	2201      	movne	r2, #1
 8011296:	600b      	str	r3, [r1, #0]
 8011298:	750a      	strb	r2, [r1, #20]
 801129a:	b004      	add	sp, #16
 801129c:	bd70      	pop	{r4, r5, r6, pc}
 801129e:	f043 0301 	orr.w	r3, r3, #1
 80112a2:	e7f5      	b.n	8011290 <NetworkParams::callbackFunction(char const*)+0x20>
 80112a4:	4628      	mov	r0, r5
 80112a6:	4952      	ldr	r1, [pc, #328]	; (80113f0 <NetworkParams::callbackFunction(char const*)+0x180>)
 80112a8:	f10d 0203 	add.w	r2, sp, #3
 80112ac:	f001 fc4e 	bl	8012b4c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 80112b0:	b988      	cbnz	r0, 80112d6 <NetworkParams::callbackFunction(char const*)+0x66>
 80112b2:	4a4e      	ldr	r2, [pc, #312]	; (80113ec <NetworkParams::callbackFunction(char const*)+0x17c>)
 80112b4:	f89d 1003 	ldrb.w	r1, [sp, #3]
 80112b8:	6813      	ldr	r3, [r2, #0]
 80112ba:	1e4c      	subs	r4, r1, #1
 80112bc:	2c04      	cmp	r4, #4
 80112be:	bf97      	itett	ls
 80112c0:	f443 7380 	orrls.w	r3, r3, #256	; 0x100
 80112c4:	f423 7380 	bichi.w	r3, r3, #256	; 0x100
 80112c8:	6013      	strls	r3, [r2, #0]
 80112ca:	f882 105d 	strbls.w	r1, [r2, #93]	; 0x5d
 80112ce:	bf84      	itt	hi
 80112d0:	6013      	strhi	r3, [r2, #0]
 80112d2:	f882 005d 	strbhi.w	r0, [r2, #93]	; 0x5d
 80112d6:	4628      	mov	r0, r5
 80112d8:	4946      	ldr	r1, [pc, #280]	; (80113f4 <NetworkParams::callbackFunction(char const*)+0x184>)
 80112da:	aa01      	add	r2, sp, #4
 80112dc:	f001 fbae 	bl	8012a3c <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 80112e0:	b9d0      	cbnz	r0, 8011318 <NetworkParams::callbackFunction(char const*)+0xa8>
 80112e2:	9b01      	ldr	r3, [sp, #4]
 80112e4:	b2d9      	uxtb	r1, r3
 80112e6:	29ac      	cmp	r1, #172	; 0xac
 80112e8:	f3c3 2207 	ubfx	r2, r3, #8, #8
 80112ec:	d00a      	beq.n	8011304 <NetworkParams::callbackFunction(char const*)+0x94>
 80112ee:	29c0      	cmp	r1, #192	; 0xc0
 80112f0:	d00c      	beq.n	801130c <NetworkParams::callbackFunction(char const*)+0x9c>
 80112f2:	290a      	cmp	r1, #10
 80112f4:	d10d      	bne.n	8011312 <NetworkParams::callbackFunction(char const*)+0xa2>
 80112f6:	4a3d      	ldr	r2, [pc, #244]	; (80113ec <NetworkParams::callbackFunction(char const*)+0x17c>)
 80112f8:	6053      	str	r3, [r2, #4]
 80112fa:	6813      	ldr	r3, [r2, #0]
 80112fc:	f043 0302 	orr.w	r3, r3, #2
 8011300:	6013      	str	r3, [r2, #0]
 8011302:	e7ca      	b.n	801129a <NetworkParams::callbackFunction(char const*)+0x2a>
 8011304:	3a10      	subs	r2, #16
 8011306:	2a0f      	cmp	r2, #15
 8011308:	d8c7      	bhi.n	801129a <NetworkParams::callbackFunction(char const*)+0x2a>
 801130a:	e7f4      	b.n	80112f6 <NetworkParams::callbackFunction(char const*)+0x86>
 801130c:	2aa8      	cmp	r2, #168	; 0xa8
 801130e:	d1c4      	bne.n	801129a <NetworkParams::callbackFunction(char const*)+0x2a>
 8011310:	e7f1      	b.n	80112f6 <NetworkParams::callbackFunction(char const*)+0x86>
 8011312:	2b00      	cmp	r3, #0
 8011314:	d0ef      	beq.n	80112f6 <NetworkParams::callbackFunction(char const*)+0x86>
 8011316:	e7c0      	b.n	801129a <NetworkParams::callbackFunction(char const*)+0x2a>
 8011318:	4628      	mov	r0, r5
 801131a:	4937      	ldr	r1, [pc, #220]	; (80113f8 <NetworkParams::callbackFunction(char const*)+0x188>)
 801131c:	aa01      	add	r2, sp, #4
 801131e:	f001 fb8d 	bl	8012a3c <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 8011322:	b970      	cbnz	r0, 8011342 <NetworkParams::callbackFunction(char const*)+0xd2>
 8011324:	9a01      	ldr	r2, [sp, #4]
 8011326:	2a00      	cmp	r2, #0
 8011328:	d0b7      	beq.n	801129a <NetworkParams::callbackFunction(char const*)+0x2a>
 801132a:	ba13      	rev	r3, r2
 801132c:	43d9      	mvns	r1, r3
 801132e:	ea13 0351 	ands.w	r3, r3, r1, lsr #1
 8011332:	d1b2      	bne.n	801129a <NetworkParams::callbackFunction(char const*)+0x2a>
 8011334:	4b2d      	ldr	r3, [pc, #180]	; (80113ec <NetworkParams::callbackFunction(char const*)+0x17c>)
 8011336:	609a      	str	r2, [r3, #8]
 8011338:	681a      	ldr	r2, [r3, #0]
 801133a:	f042 0204 	orr.w	r2, r2, #4
 801133e:	601a      	str	r2, [r3, #0]
 8011340:	e7ab      	b.n	801129a <NetworkParams::callbackFunction(char const*)+0x2a>
 8011342:	4628      	mov	r0, r5
 8011344:	492d      	ldr	r1, [pc, #180]	; (80113fc <NetworkParams::callbackFunction(char const*)+0x18c>)
 8011346:	aa01      	add	r2, sp, #4
 8011348:	f001 fb78 	bl	8012a3c <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 801134c:	4c27      	ldr	r4, [pc, #156]	; (80113ec <NetworkParams::callbackFunction(char const*)+0x17c>)
 801134e:	b930      	cbnz	r0, 801135e <NetworkParams::callbackFunction(char const*)+0xee>
 8011350:	9b01      	ldr	r3, [sp, #4]
 8011352:	60e3      	str	r3, [r4, #12]
 8011354:	6823      	ldr	r3, [r4, #0]
 8011356:	f043 0308 	orr.w	r3, r3, #8
 801135a:	6023      	str	r3, [r4, #0]
 801135c:	e79d      	b.n	801129a <NetworkParams::callbackFunction(char const*)+0x2a>
 801135e:	233f      	movs	r3, #63	; 0x3f
 8011360:	4628      	mov	r0, r5
 8011362:	9302      	str	r3, [sp, #8]
 8011364:	4926      	ldr	r1, [pc, #152]	; (8011400 <NetworkParams::callbackFunction(char const*)+0x190>)
 8011366:	ab02      	add	r3, sp, #8
 8011368:	f104 0215 	add.w	r2, r4, #21
 801136c:	f001 faea 	bl	8012944 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 8011370:	b930      	cbnz	r0, 8011380 <NetworkParams::callbackFunction(char const*)+0x110>
 8011372:	9b02      	ldr	r3, [sp, #8]
 8011374:	4423      	add	r3, r4
 8011376:	7558      	strb	r0, [r3, #21]
 8011378:	6823      	ldr	r3, [r4, #0]
 801137a:	f043 0320 	orr.w	r3, r3, #32
 801137e:	e7ec      	b.n	801135a <NetworkParams::callbackFunction(char const*)+0xea>
 8011380:	4628      	mov	r0, r5
 8011382:	4920      	ldr	r1, [pc, #128]	; (8011404 <NetworkParams::callbackFunction(char const*)+0x194>)
 8011384:	aa01      	add	r2, sp, #4
 8011386:	f001 fb59 	bl	8012a3c <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 801138a:	b958      	cbnz	r0, 80113a4 <NetworkParams::callbackFunction(char const*)+0x134>
 801138c:	9a01      	ldr	r2, [sp, #4]
 801138e:	6823      	ldr	r3, [r4, #0]
 8011390:	b12a      	cbz	r2, 801139e <NetworkParams::callbackFunction(char const*)+0x12e>
 8011392:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8011396:	6023      	str	r3, [r4, #0]
 8011398:	f8c4 2055 	str.w	r2, [r4, #85]	; 0x55
 801139c:	e77d      	b.n	801129a <NetworkParams::callbackFunction(char const*)+0x2a>
 801139e:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80113a2:	e7f8      	b.n	8011396 <NetworkParams::callbackFunction(char const*)+0x126>
 80113a4:	4628      	mov	r0, r5
 80113a6:	4918      	ldr	r1, [pc, #96]	; (8011408 <NetworkParams::callbackFunction(char const*)+0x198>)
 80113a8:	aa03      	add	r2, sp, #12
 80113aa:	f001 fae4 	bl	8012976 <Sscan::Float(char const*, char const*, float&)>
 80113ae:	2800      	cmp	r0, #0
 80113b0:	f47f af73 	bne.w	801129a <NetworkParams::callbackFunction(char const*)+0x2a>
 80113b4:	9e03      	ldr	r6, [sp, #12]
 80113b6:	6825      	ldr	r5, [r4, #0]
 80113b8:	4630      	mov	r0, r6
 80113ba:	f7f6 fd93 	bl	8007ee4 <__aeabi_f2iz>
 80113be:	300c      	adds	r0, #12
 80113c0:	281a      	cmp	r0, #26
 80113c2:	d80a      	bhi.n	80113da <NetworkParams::callbackFunction(char const*)+0x16a>
 80113c4:	2100      	movs	r1, #0
 80113c6:	4630      	mov	r0, r6
 80113c8:	f7f6 fd5a 	bl	8007e80 <__aeabi_fcmpeq>
 80113cc:	b928      	cbnz	r0, 80113da <NetworkParams::callbackFunction(char const*)+0x16a>
 80113ce:	f8c4 6059 	str.w	r6, [r4, #89]	; 0x59
 80113d2:	f045 0580 	orr.w	r5, r5, #128	; 0x80
 80113d6:	6025      	str	r5, [r4, #0]
 80113d8:	e75f      	b.n	801129a <NetworkParams::callbackFunction(char const*)+0x2a>
 80113da:	2300      	movs	r3, #0
 80113dc:	f025 0580 	bic.w	r5, r5, #128	; 0x80
 80113e0:	f8c4 3059 	str.w	r3, [r4, #89]	; 0x59
 80113e4:	e7f7      	b.n	80113d6 <NetworkParams::callbackFunction(char const*)+0x166>
 80113e6:	bf00      	nop
 80113e8:	080176e7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, r9, sl, ip, sp, lr}
 80113ec:	2001c714 	andcs	ip, r1, r4, lsl r7
 80113f0:	080176c5 	stmdaeq	r1, {r0, r2, r6, r7, r9, sl, ip, sp, lr}
 80113f4:	08017690 	stmdaeq	r1, {r4, r7, r9, sl, ip, sp, lr}
 80113f8:	080176de 	stmdaeq	r1, {r1, r2, r3, r4, r6, r7, r9, sl, ip, sp, lr}
 80113fc:	080176b5 	stmdaeq	r1, {r0, r2, r4, r5, r7, r9, sl, ip, sp, lr}
 8011400:	080176d5 	stmdaeq	r1, {r0, r2, r4, r6, r7, r9, sl, ip, sp, lr}
 8011404:	0801769b 	stmdaeq	r1, {r0, r1, r3, r4, r7, r9, sl, ip, sp, lr}
 8011408:	080176a6 	stmdaeq	r1, {r1, r2, r5, r7, r9, sl, ip, sp, lr}

0801140c <NetworkParams::staticCallbackFunction(void*, char const*)>:
 801140c:	f7ff bf30 	b.w	8011270 <NetworkParams::callbackFunction(char const*)>

08011410 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)>:
 8011410:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011412:	4614      	mov	r4, r2
 8011414:	461d      	mov	r5, r3
 8011416:	b089      	sub	sp, #36	; 0x24
 8011418:	2900      	cmp	r1, #0
 801141a:	d02a      	beq.n	8011472 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x62>
 801141c:	225e      	movs	r2, #94	; 0x5e
 801141e:	4892      	ldr	r0, [pc, #584]	; (8011668 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x258>)
 8011420:	f002 f8cb 	bl	80135ba <memmove>
 8011424:	4622      	mov	r2, r4
 8011426:	462b      	mov	r3, r5
 8011428:	4990      	ldr	r1, [pc, #576]	; (801166c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x25c>)
 801142a:	a805      	add	r0, sp, #20
 801142c:	f001 f9b2 	bl	8012794 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 8011430:	4c8d      	ldr	r4, [pc, #564]	; (8011668 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x258>)
 8011432:	6823      	ldr	r3, [r4, #0]
 8011434:	0798      	lsls	r0, r3, #30
 8011436:	bf5f      	itttt	pl
 8011438:	4a8d      	ldrpl	r2, [pc, #564]	; (8011670 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x260>)
 801143a:	6812      	ldrpl	r2, [r2, #0]
 801143c:	6912      	ldrpl	r2, [r2, #16]
 801143e:	6062      	strpl	r2, [r4, #4]
 8011440:	0759      	lsls	r1, r3, #29
 8011442:	bf5f      	itttt	pl
 8011444:	4a8a      	ldrpl	r2, [pc, #552]	; (8011670 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x260>)
 8011446:	6812      	ldrpl	r2, [r2, #0]
 8011448:	6992      	ldrpl	r2, [r2, #24]
 801144a:	60a2      	strpl	r2, [r4, #8]
 801144c:	071a      	lsls	r2, r3, #28
 801144e:	bf5f      	itttt	pl
 8011450:	4a87      	ldrpl	r2, [pc, #540]	; (8011670 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x260>)
 8011452:	6812      	ldrpl	r2, [r2, #0]
 8011454:	6952      	ldrpl	r2, [r2, #20]
 8011456:	60e2      	strpl	r2, [r4, #12]
 8011458:	069f      	lsls	r7, r3, #26
 801145a:	d417      	bmi.n	801148c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x7c>
 801145c:	223f      	movs	r2, #63	; 0x3f
 801145e:	4b84      	ldr	r3, [pc, #528]	; (8011670 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x260>)
 8011460:	4884      	ldr	r0, [pc, #528]	; (8011674 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x264>)
 8011462:	681b      	ldr	r3, [r3, #0]
 8011464:	331b      	adds	r3, #27
 8011466:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 801146a:	b941      	cbnz	r1, 801147e <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x6e>
 801146c:	f002 f8bc 	bl	80135e8 <memset>
 8011470:	e009      	b.n	8011486 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x76>
 8011472:	6800      	ldr	r0, [r0, #0]
 8011474:	497c      	ldr	r1, [pc, #496]	; (8011668 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x258>)
 8011476:	6803      	ldr	r3, [r0, #0]
 8011478:	68db      	ldr	r3, [r3, #12]
 801147a:	4798      	blx	r3
 801147c:	e7d2      	b.n	8011424 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x14>
 801147e:	3a01      	subs	r2, #1
 8011480:	f800 1b01 	strb.w	r1, [r0], #1
 8011484:	d1ef      	bne.n	8011466 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x56>
 8011486:	2300      	movs	r3, #0
 8011488:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801148c:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8011490:	f8bd 5018 	ldrh.w	r5, [sp, #24]
 8011494:	7d23      	ldrb	r3, [r4, #20]
 8011496:	42aa      	cmp	r2, r5
 8011498:	6821      	ldr	r1, [r4, #0]
 801149a:	d21a      	bcs.n	80114d2 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xc2>
 801149c:	9805      	ldr	r0, [sp, #20]
 801149e:	07ce      	lsls	r6, r1, #31
 80114a0:	4410      	add	r0, r2
 80114a2:	eba5 0502 	sub.w	r5, r5, r2
 80114a6:	f89d 201c 	ldrb.w	r2, [sp, #28]
 80114aa:	d404      	bmi.n	80114b6 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xa6>
 80114ac:	b922      	cbnz	r2, 80114b8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xa8>
 80114ae:	9300      	str	r3, [sp, #0]
 80114b0:	4a71      	ldr	r2, [pc, #452]	; (8011678 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x268>)
 80114b2:	4b72      	ldr	r3, [pc, #456]	; (801167c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x26c>)
 80114b4:	e003      	b.n	80114be <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xae>
 80114b6:	b312      	cbz	r2, 80114fe <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xee>
 80114b8:	9300      	str	r3, [sp, #0]
 80114ba:	4a71      	ldr	r2, [pc, #452]	; (8011680 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x270>)
 80114bc:	4b6f      	ldr	r3, [pc, #444]	; (801167c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x26c>)
 80114be:	4629      	mov	r1, r5
 80114c0:	f7f8 f886 	bl	80095d0 <snprintf>
 80114c4:	f8bd 301a 	ldrh.w	r3, [sp, #26]
 80114c8:	4285      	cmp	r5, r0
 80114ca:	bfa4      	itt	ge
 80114cc:	181b      	addge	r3, r3, r0
 80114ce:	f8ad 301a 	strhge.w	r3, [sp, #26]
 80114d2:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 80114d6:	f8bd 5018 	ldrh.w	r5, [sp, #24]
 80114da:	f894 305d 	ldrb.w	r3, [r4, #93]	; 0x5d
 80114de:	42aa      	cmp	r2, r5
 80114e0:	6821      	ldr	r1, [r4, #0]
 80114e2:	d21f      	bcs.n	8011524 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x114>
 80114e4:	9805      	ldr	r0, [sp, #20]
 80114e6:	05c9      	lsls	r1, r1, #23
 80114e8:	4410      	add	r0, r2
 80114ea:	eba5 0502 	sub.w	r5, r5, r2
 80114ee:	f89d 201c 	ldrb.w	r2, [sp, #28]
 80114f2:	d408      	bmi.n	8011506 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xf6>
 80114f4:	b94a      	cbnz	r2, 801150a <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xfa>
 80114f6:	9300      	str	r3, [sp, #0]
 80114f8:	4a5f      	ldr	r2, [pc, #380]	; (8011678 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x268>)
 80114fa:	4b62      	ldr	r3, [pc, #392]	; (8011684 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x274>)
 80114fc:	e008      	b.n	8011510 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x100>
 80114fe:	9300      	str	r3, [sp, #0]
 8011500:	4a61      	ldr	r2, [pc, #388]	; (8011688 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x278>)
 8011502:	4b5e      	ldr	r3, [pc, #376]	; (801167c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x26c>)
 8011504:	e7db      	b.n	80114be <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xae>
 8011506:	2a00      	cmp	r2, #0
 8011508:	d03e      	beq.n	8011588 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x178>
 801150a:	9300      	str	r3, [sp, #0]
 801150c:	4a5c      	ldr	r2, [pc, #368]	; (8011680 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x270>)
 801150e:	4b5d      	ldr	r3, [pc, #372]	; (8011684 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x274>)
 8011510:	4629      	mov	r1, r5
 8011512:	f7f8 f85d 	bl	80095d0 <snprintf>
 8011516:	4285      	cmp	r5, r0
 8011518:	bfa2      	ittt	ge
 801151a:	f8bd 301a 	ldrhge.w	r3, [sp, #26]
 801151e:	18c0      	addge	r0, r0, r3
 8011520:	f8ad 001a 	strhge.w	r0, [sp, #26]
 8011524:	4959      	ldr	r1, [pc, #356]	; (801168c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x27c>)
 8011526:	a805      	add	r0, sp, #20
 8011528:	f001 f9ba 	bl	80128a0 <PropertiesBuilder::AddComment(char const*)>
 801152c:	6823      	ldr	r3, [r4, #0]
 801152e:	6862      	ldr	r2, [r4, #4]
 8011530:	4957      	ldr	r1, [pc, #348]	; (8011690 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x280>)
 8011532:	f3c3 0340 	ubfx	r3, r3, #1, #1
 8011536:	a805      	add	r0, sp, #20
 8011538:	f001 f96e 	bl	8012818 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 801153c:	6823      	ldr	r3, [r4, #0]
 801153e:	68a2      	ldr	r2, [r4, #8]
 8011540:	4954      	ldr	r1, [pc, #336]	; (8011694 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x284>)
 8011542:	f3c3 0380 	ubfx	r3, r3, #2, #1
 8011546:	a805      	add	r0, sp, #20
 8011548:	f001 f966 	bl	8012818 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 801154c:	6823      	ldr	r3, [r4, #0]
 801154e:	4952      	ldr	r1, [pc, #328]	; (8011698 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x288>)
 8011550:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 8011554:	68e2      	ldr	r2, [r4, #12]
 8011556:	a805      	add	r0, sp, #20
 8011558:	f001 f95e 	bl	8012818 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 801155c:	f8bd 301a 	ldrh.w	r3, [sp, #26]
 8011560:	f8bd 5018 	ldrh.w	r5, [sp, #24]
 8011564:	6821      	ldr	r1, [r4, #0]
 8011566:	42ab      	cmp	r3, r5
 8011568:	d221      	bcs.n	80115ae <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x19e>
 801156a:	9805      	ldr	r0, [sp, #20]
 801156c:	f011 0f20 	tst.w	r1, #32
 8011570:	4418      	add	r0, r3
 8011572:	eba5 0503 	sub.w	r5, r5, r3
 8011576:	f89d 201c 	ldrb.w	r2, [sp, #28]
 801157a:	4b3e      	ldr	r3, [pc, #248]	; (8011674 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x264>)
 801157c:	d108      	bne.n	8011590 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x180>
 801157e:	b94a      	cbnz	r2, 8011594 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x184>
 8011580:	9300      	str	r3, [sp, #0]
 8011582:	4a46      	ldr	r2, [pc, #280]	; (801169c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x28c>)
 8011584:	4b46      	ldr	r3, [pc, #280]	; (80116a0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x290>)
 8011586:	e008      	b.n	801159a <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x18a>
 8011588:	9300      	str	r3, [sp, #0]
 801158a:	4a3f      	ldr	r2, [pc, #252]	; (8011688 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x278>)
 801158c:	4b3d      	ldr	r3, [pc, #244]	; (8011684 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x274>)
 801158e:	e7bf      	b.n	8011510 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x100>
 8011590:	2a00      	cmp	r2, #0
 8011592:	d035      	beq.n	8011600 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f0>
 8011594:	9300      	str	r3, [sp, #0]
 8011596:	4a43      	ldr	r2, [pc, #268]	; (80116a4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x294>)
 8011598:	4b41      	ldr	r3, [pc, #260]	; (80116a0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x290>)
 801159a:	4629      	mov	r1, r5
 801159c:	f7f8 f818 	bl	80095d0 <snprintf>
 80115a0:	4285      	cmp	r5, r0
 80115a2:	bfa2      	ittt	ge
 80115a4:	f8bd 301a 	ldrhge.w	r3, [sp, #26]
 80115a8:	18c0      	addge	r0, r0, r3
 80115aa:	f8ad 001a 	strhge.w	r0, [sp, #26]
 80115ae:	493e      	ldr	r1, [pc, #248]	; (80116a8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x298>)
 80115b0:	a805      	add	r0, sp, #20
 80115b2:	f001 f975 	bl	80128a0 <PropertiesBuilder::AddComment(char const*)>
 80115b6:	6823      	ldr	r3, [r4, #0]
 80115b8:	f8d4 2055 	ldr.w	r2, [r4, #85]	; 0x55
 80115bc:	f3c3 1380 	ubfx	r3, r3, #6, #1
 80115c0:	493a      	ldr	r1, [pc, #232]	; (80116ac <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x29c>)
 80115c2:	a805      	add	r0, sp, #20
 80115c4:	f001 f928 	bl	8012818 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 80115c8:	f8d4 0059 	ldr.w	r0, [r4, #89]	; 0x59
 80115cc:	6827      	ldr	r7, [r4, #0]
 80115ce:	f8bd 301a 	ldrh.w	r3, [sp, #26]
 80115d2:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 80115d6:	42a3      	cmp	r3, r4
 80115d8:	d227      	bcs.n	801162a <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x21a>
 80115da:	9d05      	ldr	r5, [sp, #20]
 80115dc:	1ae4      	subs	r4, r4, r3
 80115de:	441d      	add	r5, r3
 80115e0:	f7f6 fe24 	bl	800822c <__aeabi_f2d>
 80115e4:	f017 0f80 	tst.w	r7, #128	; 0x80
 80115e8:	f04f 0301 	mov.w	r3, #1
 80115ec:	f89d 601c 	ldrb.w	r6, [sp, #28]
 80115f0:	d10a      	bne.n	8011608 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f8>
 80115f2:	b956      	cbnz	r6, 801160a <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1fa>
 80115f4:	9300      	str	r3, [sp, #0]
 80115f6:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80115fa:	4b2d      	ldr	r3, [pc, #180]	; (80116b0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x2a0>)
 80115fc:	4a2d      	ldr	r2, [pc, #180]	; (80116b4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x2a4>)
 80115fe:	e009      	b.n	8011614 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x204>
 8011600:	9300      	str	r3, [sp, #0]
 8011602:	4a2d      	ldr	r2, [pc, #180]	; (80116b8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x2a8>)
 8011604:	4b26      	ldr	r3, [pc, #152]	; (80116a0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x290>)
 8011606:	e7c8      	b.n	801159a <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x18a>
 8011608:	b346      	cbz	r6, 801165c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x24c>
 801160a:	e9cd 0102 	strd	r0, r1, [sp, #8]
 801160e:	9300      	str	r3, [sp, #0]
 8011610:	4a2a      	ldr	r2, [pc, #168]	; (80116bc <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x2ac>)
 8011612:	4b27      	ldr	r3, [pc, #156]	; (80116b0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x2a0>)
 8011614:	4621      	mov	r1, r4
 8011616:	4628      	mov	r0, r5
 8011618:	f7f7 ffda 	bl	80095d0 <snprintf>
 801161c:	f8bd 301a 	ldrh.w	r3, [sp, #26]
 8011620:	4284      	cmp	r4, r0
 8011622:	bfa4      	itt	ge
 8011624:	181b      	addge	r3, r3, r0
 8011626:	f8ad 301a 	strhge.w	r3, [sp, #26]
 801162a:	f89d 301c 	ldrb.w	r3, [sp, #28]
 801162e:	b17b      	cbz	r3, 8011650 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x240>
 8011630:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8011634:	9b05      	ldr	r3, [sp, #20]
 8011636:	4413      	add	r3, r2
 8011638:	227d      	movs	r2, #125	; 0x7d
 801163a:	f803 2c01 	strb.w	r2, [r3, #-1]
 801163e:	f8bd 301a 	ldrh.w	r3, [sp, #26]
 8011642:	9905      	ldr	r1, [sp, #20]
 8011644:	54ca      	strb	r2, [r1, r3]
 8011646:	f8bd 301a 	ldrh.w	r3, [sp, #26]
 801164a:	3301      	adds	r3, #1
 801164c:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011650:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8011654:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011656:	601a      	str	r2, [r3, #0]
 8011658:	b009      	add	sp, #36	; 0x24
 801165a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801165c:	9300      	str	r3, [sp, #0]
 801165e:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8011662:	4b13      	ldr	r3, [pc, #76]	; (80116b0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x2a0>)
 8011664:	4a16      	ldr	r2, [pc, #88]	; (80116c0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x2b0>)
 8011666:	e7d5      	b.n	8011614 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x204>
 8011668:	2001c714 	andcs	ip, r1, r4, lsl r7
 801166c:	080176f0 	stmdaeq	r1, {r4, r5, r6, r7, r9, sl, ip, sp, lr}
 8011670:	2001c710 	andcs	ip, r1, r0, lsl r7
 8011674:	2001c729 	andcs	ip, r1, r9, lsr #14
 8011678:	08015a73 	stmdaeq	r1, {r0, r1, r4, r5, r6, r9, fp, ip, lr}
 801167c:	080176e7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, r9, sl, ip, sp, lr}
 8011680:	08015a6a 	stmdaeq	r1, {r1, r3, r5, r6, r9, fp, ip, lr}
 8011684:	080176c5 	stmdaeq	r1, {r0, r2, r6, r7, r9, sl, ip, sp, lr}
 8011688:	08015a74 	stmdaeq	r1, {r2, r4, r5, r6, r9, fp, ip, lr}
 801168c:	0801767b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r9, sl, ip, sp, lr}
 8011690:	08017690 	stmdaeq	r1, {r4, r7, r9, sl, ip, sp, lr}
 8011694:	080176de 	stmdaeq	r1, {r1, r2, r3, r4, r6, r7, r9, sl, ip, sp, lr}
 8011698:	080176b5 	stmdaeq	r1, {r0, r2, r4, r5, r7, r9, sl, ip, sp, lr}
 801169c:	08015a62 	stmdaeq	r1, {r1, r5, r6, r9, fp, ip, lr}
 80116a0:	080176d5 	stmdaeq	r1, {r0, r2, r4, r6, r7, r9, sl, ip, sp, lr}
 80116a4:	08015a57 	stmdaeq	r1, {r0, r1, r2, r4, r6, r9, fp, ip, lr}
 80116a8:	08017685 	stmdaeq	r1, {r0, r2, r7, r9, sl, ip, sp, lr}
 80116ac:	0801769b 	stmdaeq	r1, {r0, r1, r3, r4, r7, r9, sl, ip, sp, lr}
 80116b0:	080176a6 	stmdaeq	r1, {r1, r2, r5, r7, r9, sl, ip, sp, lr}
 80116b4:	080160ef 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r7, sp, lr}
 80116b8:	08015a63 	stmdaeq	r1, {r0, r1, r5, r6, r9, fp, ip, lr}
 80116bc:	080160e4 	stmdaeq	r1, {r2, r5, r6, r7, sp, lr}
 80116c0:	080160f0 	stmdaeq	r1, {r4, r5, r6, r7, sp, lr}

080116c4 <NetworkParams::Save(char*, unsigned int, unsigned int&)>:
 80116c4:	b513      	push	{r0, r1, r4, lr}
 80116c6:	6804      	ldr	r4, [r0, #0]
 80116c8:	b914      	cbnz	r4, 80116d0 <NetworkParams::Save(char*, unsigned int, unsigned int&)+0xc>
 80116ca:	601c      	str	r4, [r3, #0]
 80116cc:	b002      	add	sp, #8
 80116ce:	bd10      	pop	{r4, pc}
 80116d0:	9300      	str	r3, [sp, #0]
 80116d2:	4613      	mov	r3, r2
 80116d4:	460a      	mov	r2, r1
 80116d6:	2100      	movs	r1, #0
 80116d8:	f7ff fe9a 	bl	8011410 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)>
 80116dc:	e7f6      	b.n	80116cc <NetworkParams::Save(char*, unsigned int, unsigned int&)+0x8>

080116de <NetworkParams::Dump()>:
 80116de:	4770      	bx	lr

080116e0 <memcpy.isra.0>:
 80116e0:	3801      	subs	r0, #1
 80116e2:	440a      	add	r2, r1
 80116e4:	4291      	cmp	r1, r2
 80116e6:	d100      	bne.n	80116ea <memcpy.isra.0+0xa>
 80116e8:	4770      	bx	lr
 80116ea:	f811 3b01 	ldrb.w	r3, [r1], #1
 80116ee:	f800 3f01 	strb.w	r3, [r0, #1]!
 80116f2:	e7f7      	b.n	80116e4 <memcpy.isra.0+0x4>

080116f4 <arp_announce>:
 80116f4:	4803      	ldr	r0, [pc, #12]	; (8011704 <arp_announce+0x10>)
 80116f6:	69c3      	ldr	r3, [r0, #28]
 80116f8:	b113      	cbz	r3, 8011700 <arp_announce+0xc>
 80116fa:	212a      	movs	r1, #42	; 0x2a
 80116fc:	f002 bf9c 	b.w	8014638 <emac_eth_send>
 8011700:	4770      	bx	lr
 8011702:	bf00      	nop
 8011704:	2001c774 	andcs	ip, r1, r4, ror r7

08011708 <arp_handle_request>:
 8011708:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801170a:	2204      	movs	r2, #4
 801170c:	f100 0126 	add.w	r1, r0, #38	; 0x26
 8011710:	4604      	mov	r4, r0
 8011712:	eb0d 0002 	add.w	r0, sp, r2
 8011716:	f7ff ffe3 	bl	80116e0 <memcpy.isra.0>
 801171a:	4b0d      	ldr	r3, [pc, #52]	; (8011750 <arp_handle_request+0x48>)
 801171c:	9a01      	ldr	r2, [sp, #4]
 801171e:	69db      	ldr	r3, [r3, #28]
 8011720:	429a      	cmp	r2, r3
 8011722:	d113      	bne.n	801174c <arp_handle_request+0x44>
 8011724:	2206      	movs	r2, #6
 8011726:	4d0b      	ldr	r5, [pc, #44]	; (8011754 <arp_handle_request+0x4c>)
 8011728:	18a1      	adds	r1, r4, r2
 801172a:	4628      	mov	r0, r5
 801172c:	f7ff ffd8 	bl	80116e0 <memcpy.isra.0>
 8011730:	f104 0116 	add.w	r1, r4, #22
 8011734:	f105 0020 	add.w	r0, r5, #32
 8011738:	2206      	movs	r2, #6
 801173a:	f7ff ffd1 	bl	80116e0 <memcpy.isra.0>
 801173e:	69e3      	ldr	r3, [r4, #28]
 8011740:	212a      	movs	r1, #42	; 0x2a
 8011742:	4628      	mov	r0, r5
 8011744:	f8c5 3026 	str.w	r3, [r5, #38]	; 0x26
 8011748:	f002 ff76 	bl	8014638 <emac_eth_send>
 801174c:	b003      	add	sp, #12
 801174e:	bd30      	pop	{r4, r5, pc}
 8011750:	2001c774 	andcs	ip, r1, r4, ror r7
 8011754:	2001c7a0 	andcs	ip, r1, r0, lsr #15

08011758 <arp_handle_reply>:
 8011758:	69c1      	ldr	r1, [r0, #28]
 801175a:	3016      	adds	r0, #22
 801175c:	f000 b80a 	b.w	8011774 <arp_cache_update>

08011760 <arp_send_request>:
 8011760:	4b03      	ldr	r3, [pc, #12]	; (8011770 <arp_send_request+0x10>)
 8011762:	212a      	movs	r1, #42	; 0x2a
 8011764:	f8c3 0026 	str.w	r0, [r3, #38]	; 0x26
 8011768:	4618      	mov	r0, r3
 801176a:	f002 bf65 	b.w	8014638 <emac_eth_send>
 801176e:	bf00      	nop
 8011770:	2001c7cc 	andcs	ip, r1, ip, asr #15

08011774 <arp_cache_update>:
 8011774:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011776:	4e11      	ldr	r6, [pc, #68]	; (80117bc <arp_cache_update+0x48>)
 8011778:	8833      	ldrh	r3, [r6, #0]
 801177a:	2b20      	cmp	r3, #32
 801177c:	d018      	beq.n	80117b0 <arp_cache_update+0x3c>
 801177e:	2400      	movs	r4, #0
 8011780:	220c      	movs	r2, #12
 8011782:	4d0f      	ldr	r5, [pc, #60]	; (80117c0 <arp_cache_update+0x4c>)
 8011784:	b2a7      	uxth	r7, r4
 8011786:	42bb      	cmp	r3, r7
 8011788:	d80b      	bhi.n	80117a2 <arp_cache_update+0x2e>
 801178a:	fb02 5203 	mla	r2, r2, r3, r5
 801178e:	1d84      	adds	r4, r0, #6
 8011790:	3203      	adds	r2, #3
 8011792:	42a0      	cmp	r0, r4
 8011794:	d10d      	bne.n	80117b2 <arp_cache_update+0x3e>
 8011796:	220c      	movs	r2, #12
 8011798:	435a      	muls	r2, r3
 801179a:	3301      	adds	r3, #1
 801179c:	50a9      	str	r1, [r5, r2]
 801179e:	8033      	strh	r3, [r6, #0]
 80117a0:	e006      	b.n	80117b0 <arp_cache_update+0x3c>
 80117a2:	3401      	adds	r4, #1
 80117a4:	fb02 5704 	mla	r7, r2, r4, r5
 80117a8:	f857 7c0c 	ldr.w	r7, [r7, #-12]
 80117ac:	428f      	cmp	r7, r1
 80117ae:	d1e9      	bne.n	8011784 <arp_cache_update+0x10>
 80117b0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80117b2:	f810 7b01 	ldrb.w	r7, [r0], #1
 80117b6:	f802 7f01 	strb.w	r7, [r2, #1]!
 80117ba:	e7ea      	b.n	8011792 <arp_cache_update+0x1e>
 80117bc:	2001c978 	andcs	ip, r1, r8, ror r9
 80117c0:	2001c7f8 	strdcs	ip, [r1], -r8

080117c4 <arp_cache_lookup>:
 80117c4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80117c8:	2200      	movs	r2, #0
 80117ca:	4606      	mov	r6, r0
 80117cc:	460c      	mov	r4, r1
 80117ce:	200c      	movs	r0, #12
 80117d0:	f8df 8084 	ldr.w	r8, [pc, #132]	; 8011858 <arp_cache_lookup+0x94>
 80117d4:	fb00 f302 	mul.w	r3, r0, r2
 80117d8:	f853 1008 	ldr.w	r1, [r3, r8]
 80117dc:	42b1      	cmp	r1, r6
 80117de:	d10d      	bne.n	80117fc <arp_cache_lookup+0x38>
 80117e0:	3304      	adds	r3, #4
 80117e2:	4443      	add	r3, r8
 80117e4:	3c01      	subs	r4, #1
 80117e6:	1d9a      	adds	r2, r3, #6
 80117e8:	4293      	cmp	r3, r2
 80117ea:	d102      	bne.n	80117f2 <arp_cache_lookup+0x2e>
 80117ec:	4630      	mov	r0, r6
 80117ee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80117f2:	f813 1b01 	ldrb.w	r1, [r3], #1
 80117f6:	f804 1f01 	strb.w	r1, [r4, #1]!
 80117fa:	e7f5      	b.n	80117e8 <arp_cache_lookup+0x24>
 80117fc:	b111      	cbz	r1, 8011804 <arp_cache_lookup+0x40>
 80117fe:	3201      	adds	r2, #1
 8011800:	2a20      	cmp	r2, #32
 8011802:	d1e7      	bne.n	80117d4 <arp_cache_lookup+0x10>
 8011804:	2704      	movs	r7, #4
 8011806:	f8df a054 	ldr.w	sl, [pc, #84]	; 801185c <arp_cache_lookup+0x98>
 801180a:	f8ba 5000 	ldrh.w	r5, [sl]
 801180e:	3f01      	subs	r7, #1
 8011810:	f017 07ff 	ands.w	r7, r7, #255	; 0xff
 8011814:	d101      	bne.n	801181a <arp_cache_lookup+0x56>
 8011816:	463e      	mov	r6, r7
 8011818:	e7e8      	b.n	80117ec <arp_cache_lookup+0x28>
 801181a:	4630      	mov	r0, r6
 801181c:	f7ff ffa0 	bl	8011760 <arp_send_request>
 8011820:	f44f 3900 	mov.w	r9, #131072	; 0x20000
 8011824:	f1b9 0901 	subs.w	r9, r9, #1
 8011828:	f8ba 3000 	ldrh.w	r3, [sl]
 801182c:	d011      	beq.n	8011852 <arp_cache_lookup+0x8e>
 801182e:	429d      	cmp	r5, r3
 8011830:	d00c      	beq.n	801184c <arp_cache_lookup+0x88>
 8011832:	230c      	movs	r3, #12
 8011834:	fb03 8505 	mla	r5, r3, r5, r8
 8011838:	3c01      	subs	r4, #1
 801183a:	1d2b      	adds	r3, r5, #4
 801183c:	350a      	adds	r5, #10
 801183e:	42ab      	cmp	r3, r5
 8011840:	d0d4      	beq.n	80117ec <arp_cache_lookup+0x28>
 8011842:	f813 2b01 	ldrb.w	r2, [r3], #1
 8011846:	f804 2f01 	strb.w	r2, [r4, #1]!
 801184a:	e7f8      	b.n	801183e <arp_cache_lookup+0x7a>
 801184c:	f7f5 fe94 	bl	8007578 <net_handle>
 8011850:	e7e8      	b.n	8011824 <arp_cache_lookup+0x60>
 8011852:	429d      	cmp	r5, r3
 8011854:	d0db      	beq.n	801180e <arp_cache_lookup+0x4a>
 8011856:	e7ec      	b.n	8011832 <arp_cache_lookup+0x6e>
 8011858:	2001c7f8 	strdcs	ip, [r1], -r8
 801185c:	2001c978 	andcs	ip, r1, r8, ror r9

08011860 <_parse_response>:
 8011860:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011864:	2400      	movs	r4, #0
 8011866:	460d      	mov	r5, r1
 8011868:	46a3      	mov	fp, r4
 801186a:	4627      	mov	r7, r4
 801186c:	46a2      	mov	sl, r4
 801186e:	46a1      	mov	r9, r4
 8011870:	46a0      	mov	r8, r4
 8011872:	4e4f      	ldr	r6, [pc, #316]	; (80119b0 <_parse_response+0x150>)
 8011874:	f5ad 7d17 	sub.w	sp, sp, #604	; 0x25c
 8011878:	6833      	ldr	r3, [r6, #0]
 801187a:	e9cd 4403 	strd	r4, r4, [sp, #12]
 801187e:	e9cd 4405 	strd	r4, r4, [sp, #20]
 8011882:	9009      	str	r0, [sp, #36]	; 0x24
 8011884:	9402      	str	r4, [sp, #8]
 8011886:	9407      	str	r4, [sp, #28]
 8011888:	9308      	str	r3, [sp, #32]
 801188a:	f7f5 fe75 	bl	8007578 <net_handle>
 801188e:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8011892:	9300      	str	r3, [sp, #0]
 8011894:	f44f 7209 	mov.w	r2, #548	; 0x224
 8011898:	f89d 0024 	ldrb.w	r0, [sp, #36]	; 0x24
 801189c:	ab0c      	add	r3, sp, #48	; 0x30
 801189e:	a90d      	add	r1, sp, #52	; 0x34
 80118a0:	f7fe fc7c 	bl	801019c <udp_recv>
 80118a4:	2800      	cmp	r0, #0
 80118a6:	d03e      	beq.n	8011926 <_parse_response+0xc6>
 80118a8:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 80118ac:	2b43      	cmp	r3, #67	; 0x43
 80118ae:	d13a      	bne.n	8011926 <_parse_response+0xc6>
 80118b0:	aa14      	add	r2, sp, #80	; 0x50
 80118b2:	1e6b      	subs	r3, r5, #1
 80118b4:	1d69      	adds	r1, r5, #5
 80118b6:	4299      	cmp	r1, r3
 80118b8:	d12f      	bne.n	801191a <_parse_response+0xba>
 80118ba:	2100      	movs	r1, #0
 80118bc:	ab0d      	add	r3, sp, #52	; 0x34
 80118be:	181d      	adds	r5, r3, r0
 80118c0:	468c      	mov	ip, r1
 80118c2:	460e      	mov	r6, r1
 80118c4:	4608      	mov	r0, r1
 80118c6:	ab49      	add	r3, sp, #292	; 0x124
 80118c8:	42ab      	cmp	r3, r5
 80118ca:	d337      	bcc.n	801193c <_parse_response+0xdc>
 80118cc:	b141      	cbz	r1, 80118e0 <_parse_response+0x80>
 80118ce:	4b39      	ldr	r3, [pc, #228]	; (80119b4 <_parse_response+0x154>)
 80118d0:	9a07      	ldr	r2, [sp, #28]
 80118d2:	f883 8003 	strb.w	r8, [r3, #3]
 80118d6:	709a      	strb	r2, [r3, #2]
 80118d8:	9a06      	ldr	r2, [sp, #24]
 80118da:	705a      	strb	r2, [r3, #1]
 80118dc:	9a05      	ldr	r2, [sp, #20]
 80118de:	701a      	strb	r2, [r3, #0]
 80118e0:	f1bc 0f00 	cmp.w	ip, #0
 80118e4:	d007      	beq.n	80118f6 <_parse_response+0x96>
 80118e6:	4b34      	ldr	r3, [pc, #208]	; (80119b8 <_parse_response+0x158>)
 80118e8:	9a04      	ldr	r2, [sp, #16]
 80118ea:	705c      	strb	r4, [r3, #1]
 80118ec:	70da      	strb	r2, [r3, #3]
 80118ee:	9a03      	ldr	r2, [sp, #12]
 80118f0:	709a      	strb	r2, [r3, #2]
 80118f2:	9a02      	ldr	r2, [sp, #8]
 80118f4:	701a      	strb	r2, [r3, #0]
 80118f6:	b13e      	cbz	r6, 8011908 <_parse_response+0xa8>
 80118f8:	4b30      	ldr	r3, [pc, #192]	; (80119bc <_parse_response+0x15c>)
 80118fa:	70df      	strb	r7, [r3, #3]
 80118fc:	f883 a002 	strb.w	sl, [r3, #2]
 8011900:	f883 9001 	strb.w	r9, [r3, #1]
 8011904:	f883 b000 	strb.w	fp, [r3]
 8011908:	2802      	cmp	r0, #2
 801190a:	d102      	bne.n	8011912 <_parse_response+0xb2>
 801190c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801190e:	4b2c      	ldr	r3, [pc, #176]	; (80119c0 <_parse_response+0x160>)
 8011910:	601a      	str	r2, [r3, #0]
 8011912:	f50d 7d17 	add.w	sp, sp, #604	; 0x25c
 8011916:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801191a:	f812 cb01 	ldrb.w	ip, [r2], #1
 801191e:	f813 ef01 	ldrb.w	lr, [r3, #1]!
 8011922:	45e6      	cmp	lr, ip
 8011924:	d0c7      	beq.n	80118b6 <_parse_response+0x56>
 8011926:	6833      	ldr	r3, [r6, #0]
 8011928:	9a08      	ldr	r2, [sp, #32]
 801192a:	1a9b      	subs	r3, r3, r2
 801192c:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 8011930:	d3ab      	bcc.n	801188a <_parse_response+0x2a>
 8011932:	2800      	cmp	r0, #0
 8011934:	d1c1      	bne.n	80118ba <_parse_response+0x5a>
 8011936:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 801193a:	e7ea      	b.n	8011912 <_parse_response+0xb2>
 801193c:	781a      	ldrb	r2, [r3, #0]
 801193e:	2a35      	cmp	r2, #53	; 0x35
 8011940:	d011      	beq.n	8011966 <_parse_response+0x106>
 8011942:	d808      	bhi.n	8011956 <_parse_response+0xf6>
 8011944:	2a01      	cmp	r2, #1
 8011946:	d011      	beq.n	801196c <_parse_response+0x10c>
 8011948:	2a03      	cmp	r2, #3
 801194a:	d019      	beq.n	8011980 <_parse_response+0x120>
 801194c:	b14a      	cbz	r2, 8011962 <_parse_response+0x102>
 801194e:	1c9a      	adds	r2, r3, #2
 8011950:	785b      	ldrb	r3, [r3, #1]
 8011952:	4413      	add	r3, r2
 8011954:	e7b8      	b.n	80118c8 <_parse_response+0x68>
 8011956:	2a36      	cmp	r2, #54	; 0x36
 8011958:	d01f      	beq.n	801199a <_parse_response+0x13a>
 801195a:	2aff      	cmp	r2, #255	; 0xff
 801195c:	d1f7      	bne.n	801194e <_parse_response+0xee>
 801195e:	462b      	mov	r3, r5
 8011960:	e7b2      	b.n	80118c8 <_parse_response+0x68>
 8011962:	3301      	adds	r3, #1
 8011964:	e7b0      	b.n	80118c8 <_parse_response+0x68>
 8011966:	7898      	ldrb	r0, [r3, #2]
 8011968:	3303      	adds	r3, #3
 801196a:	e7ad      	b.n	80118c8 <_parse_response+0x68>
 801196c:	f893 b002 	ldrb.w	fp, [r3, #2]
 8011970:	f893 9003 	ldrb.w	r9, [r3, #3]
 8011974:	f893 a004 	ldrb.w	sl, [r3, #4]
 8011978:	795f      	ldrb	r7, [r3, #5]
 801197a:	4616      	mov	r6, r2
 801197c:	3306      	adds	r3, #6
 801197e:	e7a3      	b.n	80118c8 <_parse_response+0x68>
 8011980:	789a      	ldrb	r2, [r3, #2]
 8011982:	78dc      	ldrb	r4, [r3, #3]
 8011984:	9202      	str	r2, [sp, #8]
 8011986:	791a      	ldrb	r2, [r3, #4]
 8011988:	f04f 0c01 	mov.w	ip, #1
 801198c:	9203      	str	r2, [sp, #12]
 801198e:	795a      	ldrb	r2, [r3, #5]
 8011990:	9204      	str	r2, [sp, #16]
 8011992:	785a      	ldrb	r2, [r3, #1]
 8011994:	4413      	add	r3, r2
 8011996:	3302      	adds	r3, #2
 8011998:	e796      	b.n	80118c8 <_parse_response+0x68>
 801199a:	789a      	ldrb	r2, [r3, #2]
 801199c:	f893 8005 	ldrb.w	r8, [r3, #5]
 80119a0:	9205      	str	r2, [sp, #20]
 80119a2:	78da      	ldrb	r2, [r3, #3]
 80119a4:	2101      	movs	r1, #1
 80119a6:	9206      	str	r2, [sp, #24]
 80119a8:	791a      	ldrb	r2, [r3, #4]
 80119aa:	3306      	adds	r3, #6
 80119ac:	9207      	str	r2, [sp, #28]
 80119ae:	e78b      	b.n	80118c8 <_parse_response+0x68>
 80119b0:	2001ce4c 	andcs	ip, r1, ip, asr #28
 80119b4:	2001cbac 	andcs	ip, r1, ip, lsr #23
 80119b8:	2001c97c 	andcs	ip, r1, ip, ror r9
 80119bc:	2001c984 	andcs	ip, r1, r4, lsl #19
 80119c0:	2001c980 	andcs	ip, r1, r0, lsl #19

080119c4 <memcpy.isra.0>:
 80119c4:	3801      	subs	r0, #1
 80119c6:	440a      	add	r2, r1
 80119c8:	4291      	cmp	r1, r2
 80119ca:	d100      	bne.n	80119ce <memcpy.isra.0+0xa>
 80119cc:	4770      	bx	lr
 80119ce:	f811 3b01 	ldrb.w	r3, [r1], #1
 80119d2:	f800 3f01 	strb.w	r3, [r0, #1]!
 80119d6:	e7f7      	b.n	80119c8 <memcpy.isra.0+0x4>

080119d8 <dhcp_client>:
 80119d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80119dc:	b087      	sub	sp, #28
 80119de:	9203      	str	r2, [sp, #12]
 80119e0:	4a77      	ldr	r2, [pc, #476]	; (8011bc0 <dhcp_client+0x1e8>)
 80119e2:	460f      	mov	r7, r1
 80119e4:	4605      	mov	r5, r0
 80119e6:	f44f 7309 	mov.w	r3, #548	; 0x224
 80119ea:	4614      	mov	r4, r2
 80119ec:	2100      	movs	r1, #0
 80119ee:	3b01      	subs	r3, #1
 80119f0:	f802 1b01 	strb.w	r1, [r2], #1
 80119f4:	d1fb      	bne.n	80119ee <dhcp_client+0x16>
 80119f6:	f240 1301 	movw	r3, #257	; 0x101
 80119fa:	2206      	movs	r2, #6
 80119fc:	4629      	mov	r1, r5
 80119fe:	4871      	ldr	r0, [pc, #452]	; (8011bc4 <dhcp_client+0x1ec>)
 8011a00:	8023      	strh	r3, [r4, #0]
 8011a02:	70a2      	strb	r2, [r4, #2]
 8011a04:	f7ff ffde 	bl	80119c4 <memcpy.isra.0>
 8011a08:	4b6f      	ldr	r3, [pc, #444]	; (8011bc8 <dhcp_client+0x1f0>)
 8011a0a:	2044      	movs	r0, #68	; 0x44
 8011a0c:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
 8011a10:	f240 1335 	movw	r3, #309	; 0x135
 8011a14:	f8a4 30f0 	strh.w	r3, [r4, #240]	; 0xf0
 8011a18:	f7fe fb86 	bl	8010128 <udp_bind>
 8011a1c:	1e06      	subs	r6, r0, #0
 8011a1e:	f2c0 80c9 	blt.w	8011bb4 <dhcp_client+0x1dc>
 8011a22:	f04f 0915 	mov.w	r9, #21
 8011a26:	f8df a198 	ldr.w	sl, [pc, #408]	; 8011bc0 <dhcp_client+0x1e8>
 8011a2a:	f1b9 0901 	subs.w	r9, r9, #1
 8011a2e:	d11f      	bne.n	8011a70 <dhcp_client+0x98>
 8011a30:	464c      	mov	r4, r9
 8011a32:	2044      	movs	r0, #68	; 0x44
 8011a34:	f7fe fb92 	bl	801015c <udp_unbind>
 8011a38:	2c00      	cmp	r4, #0
 8011a3a:	f000 80be 	beq.w	8011bba <dhcp_client+0x1e2>
 8011a3e:	2204      	movs	r2, #4
 8011a40:	4962      	ldr	r1, [pc, #392]	; (8011bcc <dhcp_client+0x1f4>)
 8011a42:	a805      	add	r0, sp, #20
 8011a44:	f7ff ffbe 	bl	80119c4 <memcpy.isra.0>
 8011a48:	9b05      	ldr	r3, [sp, #20]
 8011a4a:	2204      	movs	r2, #4
 8011a4c:	4960      	ldr	r1, [pc, #384]	; (8011bd0 <dhcp_client+0x1f8>)
 8011a4e:	603b      	str	r3, [r7, #0]
 8011a50:	a805      	add	r0, sp, #20
 8011a52:	f7ff ffb7 	bl	80119c4 <memcpy.isra.0>
 8011a56:	9b05      	ldr	r3, [sp, #20]
 8011a58:	a805      	add	r0, sp, #20
 8011a5a:	60bb      	str	r3, [r7, #8]
 8011a5c:	2204      	movs	r2, #4
 8011a5e:	495d      	ldr	r1, [pc, #372]	; (8011bd4 <dhcp_client+0x1fc>)
 8011a60:	f7ff ffb0 	bl	80119c4 <memcpy.isra.0>
 8011a64:	2000      	movs	r0, #0
 8011a66:	9b05      	ldr	r3, [sp, #20]
 8011a68:	607b      	str	r3, [r7, #4]
 8011a6a:	b007      	add	sp, #28
 8011a6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011a70:	f643 5301 	movw	r3, #15617	; 0x3d01
 8011a74:	f240 1807 	movw	r8, #263	; 0x107
 8011a78:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 8011a7c:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 8011a80:	782b      	ldrb	r3, [r5, #0]
 8011a82:	4a55      	ldr	r2, [pc, #340]	; (8011bd8 <dhcp_client+0x200>)
 8011a84:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 8011a88:	786b      	ldrb	r3, [r5, #1]
 8011a8a:	fa5f fb86 	uxtb.w	fp, r6
 8011a8e:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 8011a92:	78ab      	ldrb	r3, [r5, #2]
 8011a94:	4651      	mov	r1, sl
 8011a96:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 8011a9a:	78eb      	ldrb	r3, [r5, #3]
 8011a9c:	4658      	mov	r0, fp
 8011a9e:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 8011aa2:	792b      	ldrb	r3, [r5, #4]
 8011aa4:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 8011aa8:	796b      	ldrb	r3, [r5, #5]
 8011aaa:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 8011aae:	4b4b      	ldr	r3, [pc, #300]	; (8011bdc <dhcp_client+0x204>)
 8011ab0:	e9c4 233f 	strd	r2, r3, [r4, #252]	; 0xfc
 8011ab4:	23ff      	movs	r3, #255	; 0xff
 8011ab6:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 8011aba:	2343      	movs	r3, #67	; 0x43
 8011abc:	f240 1205 	movw	r2, #261	; 0x105
 8011ac0:	9300      	str	r3, [sp, #0]
 8011ac2:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8011ac6:	f7fe fbc5 	bl	8010254 <udp_send>
 8011aca:	4629      	mov	r1, r5
 8011acc:	4630      	mov	r0, r6
 8011ace:	f7ff fec7 	bl	8011860 <_parse_response>
 8011ad2:	2802      	cmp	r0, #2
 8011ad4:	d1a9      	bne.n	8011a2a <dhcp_client+0x52>
 8011ad6:	f643 5303 	movw	r3, #15619	; 0x3d03
 8011ada:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 8011ade:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 8011ae2:	782b      	ldrb	r3, [r5, #0]
 8011ae4:	f8df c0f8 	ldr.w	ip, [pc, #248]	; 8011be0 <dhcp_client+0x208>
 8011ae8:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 8011aec:	786b      	ldrb	r3, [r5, #1]
 8011aee:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 8011af2:	78ab      	ldrb	r3, [r5, #2]
 8011af4:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 8011af8:	78eb      	ldrb	r3, [r5, #3]
 8011afa:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 8011afe:	792b      	ldrb	r3, [r5, #4]
 8011b00:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 8011b04:	796b      	ldrb	r3, [r5, #5]
 8011b06:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 8011b0a:	f240 4332 	movw	r3, #1074	; 0x432
 8011b0e:	f8a4 30fc 	strh.w	r3, [r4, #252]	; 0xfc
 8011b12:	4b2e      	ldr	r3, [pc, #184]	; (8011bcc <dhcp_client+0x1f4>)
 8011b14:	881a      	ldrh	r2, [r3, #0]
 8011b16:	885b      	ldrh	r3, [r3, #2]
 8011b18:	f8a4 20fe 	strh.w	r2, [r4, #254]	; 0xfe
 8011b1c:	f8a4 3100 	strh.w	r3, [r4, #256]	; 0x100
 8011b20:	f240 4336 	movw	r3, #1078	; 0x436
 8011b24:	f8a4 3102 	strh.w	r3, [r4, #258]	; 0x102
 8011b28:	4b2e      	ldr	r3, [pc, #184]	; (8011be4 <dhcp_client+0x20c>)
 8011b2a:	221e      	movs	r2, #30
 8011b2c:	681b      	ldr	r3, [r3, #0]
 8011b2e:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
 8011b32:	230c      	movs	r3, #12
 8011b34:	f8a4 3108 	strh.w	r3, [r4, #264]	; 0x108
 8011b38:	9b03      	ldr	r3, [sp, #12]
 8011b3a:	1e58      	subs	r0, r3, #1
 8011b3c:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 8011b40:	f1a2 0e1e 	sub.w	lr, r2, #30
 8011b44:	1c51      	adds	r1, r2, #1
 8011b46:	bb8b      	cbnz	r3, 8011bac <dhcp_client+0x1d4>
 8011b48:	2037      	movs	r0, #55	; 0x37
 8011b4a:	18a3      	adds	r3, r4, r2
 8011b4c:	f883 00ec 	strb.w	r0, [r3, #236]	; 0xec
 8011b50:	2006      	movs	r0, #6
 8011b52:	4421      	add	r1, r4
 8011b54:	f881 00ec 	strb.w	r0, [r1, #236]	; 0xec
 8011b58:	2103      	movs	r1, #3
 8011b5a:	f883 10ef 	strb.w	r1, [r3, #239]	; 0xef
 8011b5e:	210f      	movs	r1, #15
 8011b60:	f883 10f1 	strb.w	r1, [r3, #241]	; 0xf1
 8011b64:	213a      	movs	r1, #58	; 0x3a
 8011b66:	f883 10f2 	strb.w	r1, [r3, #242]	; 0xf2
 8011b6a:	213b      	movs	r1, #59	; 0x3b
 8011b6c:	f04f 0801 	mov.w	r8, #1
 8011b70:	f883 10f3 	strb.w	r1, [r3, #243]	; 0xf3
 8011b74:	21ff      	movs	r1, #255	; 0xff
 8011b76:	f883 00f0 	strb.w	r0, [r3, #240]	; 0xf0
 8011b7a:	f883 10f4 	strb.w	r1, [r3, #244]	; 0xf4
 8011b7e:	f883 80ee 	strb.w	r8, [r3, #238]	; 0xee
 8011b82:	2343      	movs	r3, #67	; 0x43
 8011b84:	32f5      	adds	r2, #245	; 0xf5
 8011b86:	f884 e109 	strb.w	lr, [r4, #265]	; 0x109
 8011b8a:	4651      	mov	r1, sl
 8011b8c:	9300      	str	r3, [sp, #0]
 8011b8e:	b292      	uxth	r2, r2
 8011b90:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8011b94:	4658      	mov	r0, fp
 8011b96:	f7fe fb5d 	bl	8010254 <udp_send>
 8011b9a:	4629      	mov	r1, r5
 8011b9c:	4630      	mov	r0, r6
 8011b9e:	f7ff fe5f 	bl	8011860 <_parse_response>
 8011ba2:	2805      	cmp	r0, #5
 8011ba4:	f47f af41 	bne.w	8011a2a <dhcp_client+0x52>
 8011ba8:	4644      	mov	r4, r8
 8011baa:	e742      	b.n	8011a32 <dhcp_client+0x5a>
 8011bac:	460a      	mov	r2, r1
 8011bae:	f80c 3b01 	strb.w	r3, [ip], #1
 8011bb2:	e7c3      	b.n	8011b3c <dhcp_client+0x164>
 8011bb4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8011bb8:	e757      	b.n	8011a6a <dhcp_client+0x92>
 8011bba:	f06f 0001 	mvn.w	r0, #1
 8011bbe:	e754      	b.n	8011a6a <dhcp_client+0x92>
 8011bc0:	2001c988 	andcs	ip, r1, r8, lsl #19
 8011bc4:	2001c9a4 	andcs	ip, r1, r4, lsr #19
 8011bc8:	63538263 	cmpvs	r3, #805306374	; 0x30000006
 8011bcc:	2001c980 	andcs	ip, r1, r0, lsl #19
 8011bd0:	2001c97c 	andcs	ip, r1, ip, ror r9
 8011bd4:	2001c984 	andcs	ip, r1, r4, lsl #19
 8011bd8:	03010637 	movweq	r0, #5687	; 0x1637
 8011bdc:	3b3a0f06 	blcc	8e957fc <__exidx_end+0xe7d934>
 8011be0:	2001ca92 	mulcs	r1, r2, sl
 8011be4:	2001cbac 	andcs	ip, r1, ip, lsr #23

08011be8 <dhcp_client_release>:
 8011be8:	b507      	push	{r0, r1, r2, lr}
 8011bea:	2044      	movs	r0, #68	; 0x44
 8011bec:	f7fe fa9c 	bl	8010128 <udp_bind>
 8011bf0:	f243 6307 	movw	r3, #13831	; 0x3607
 8011bf4:	4911      	ldr	r1, [pc, #68]	; (8011c3c <dhcp_client_release+0x54>)
 8011bf6:	b2c0      	uxtb	r0, r0
 8011bf8:	f8a1 30f2 	strh.w	r3, [r1, #242]	; 0xf2
 8011bfc:	2304      	movs	r3, #4
 8011bfe:	f881 30f4 	strb.w	r3, [r1, #244]	; 0xf4
 8011c02:	4b0f      	ldr	r3, [pc, #60]	; (8011c40 <dhcp_client_release+0x58>)
 8011c04:	781a      	ldrb	r2, [r3, #0]
 8011c06:	f881 20f5 	strb.w	r2, [r1, #245]	; 0xf5
 8011c0a:	785a      	ldrb	r2, [r3, #1]
 8011c0c:	f881 20f6 	strb.w	r2, [r1, #246]	; 0xf6
 8011c10:	789a      	ldrb	r2, [r3, #2]
 8011c12:	78db      	ldrb	r3, [r3, #3]
 8011c14:	f881 20f7 	strb.w	r2, [r1, #247]	; 0xf7
 8011c18:	f881 30f8 	strb.w	r3, [r1, #248]	; 0xf8
 8011c1c:	23ff      	movs	r3, #255	; 0xff
 8011c1e:	f881 30f9 	strb.w	r3, [r1, #249]	; 0xf9
 8011c22:	2343      	movs	r3, #67	; 0x43
 8011c24:	22fa      	movs	r2, #250	; 0xfa
 8011c26:	9300      	str	r3, [sp, #0]
 8011c28:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8011c2c:	f7fe fb12 	bl	8010254 <udp_send>
 8011c30:	2044      	movs	r0, #68	; 0x44
 8011c32:	b003      	add	sp, #12
 8011c34:	f85d eb04 	ldr.w	lr, [sp], #4
 8011c38:	f7fe ba90 	b.w	801015c <udp_unbind>
 8011c3c:	2001c988 	andcs	ip, r1, r8, lsl #19
 8011c40:	2001cbac 	andcs	ip, r1, ip, lsr #23

08011c44 <memcpy.isra.0>:
 8011c44:	3801      	subs	r0, #1
 8011c46:	440a      	add	r2, r1
 8011c48:	4291      	cmp	r1, r2
 8011c4a:	d100      	bne.n	8011c4e <memcpy.isra.0+0xa>
 8011c4c:	4770      	bx	lr
 8011c4e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8011c52:	f800 3f01 	strb.w	r3, [r0, #1]!
 8011c56:	e7f7      	b.n	8011c48 <memcpy.isra.0+0x4>

08011c58 <_send_report>:
 8011c58:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8011c5a:	491c      	ldr	r1, [pc, #112]	; (8011ccc <_send_report+0x74>)
 8011c5c:	4c1c      	ldr	r4, [pc, #112]	; (8011cd0 <_send_report+0x78>)
 8011c5e:	f3c0 2306 	ubfx	r3, r0, #8, #7
 8011c62:	9001      	str	r0, [sp, #4]
 8011c64:	70cb      	strb	r3, [r1, #3]
 8011c66:	f3c0 4307 	ubfx	r3, r0, #16, #8
 8011c6a:	f3c0 6007 	ubfx	r0, r0, #24, #8
 8011c6e:	710b      	strb	r3, [r1, #4]
 8011c70:	7148      	strb	r0, [r1, #5]
 8011c72:	2206      	movs	r2, #6
 8011c74:	4620      	mov	r0, r4
 8011c76:	f7ff ffe5 	bl	8011c44 <memcpy.isra.0>
 8011c7a:	2204      	movs	r2, #4
 8011c7c:	2700      	movs	r7, #0
 8011c7e:	4d15      	ldr	r5, [pc, #84]	; (8011cd4 <_send_report+0x7c>)
 8011c80:	eb0d 0102 	add.w	r1, sp, r2
 8011c84:	882b      	ldrh	r3, [r5, #0]
 8011c86:	f104 001e 	add.w	r0, r4, #30
 8011c8a:	f104 060e 	add.w	r6, r4, #14
 8011c8e:	8263      	strh	r3, [r4, #18]
 8011c90:	f7ff ffd8 	bl	8011c44 <memcpy.isra.0>
 8011c94:	2118      	movs	r1, #24
 8011c96:	4630      	mov	r0, r6
 8011c98:	8327      	strh	r7, [r4, #24]
 8011c9a:	f000 f8c6 	bl	8011e2a <net_chksum>
 8011c9e:	2204      	movs	r2, #4
 8011ca0:	8320      	strh	r0, [r4, #24]
 8011ca2:	eb0d 0102 	add.w	r1, sp, r2
 8011ca6:	f104 002a 	add.w	r0, r4, #42	; 0x2a
 8011caa:	f7ff ffcb 	bl	8011c44 <memcpy.isra.0>
 8011cae:	2120      	movs	r1, #32
 8011cb0:	4630      	mov	r0, r6
 8011cb2:	8527      	strh	r7, [r4, #40]	; 0x28
 8011cb4:	f000 f8b9 	bl	8011e2a <net_chksum>
 8011cb8:	212e      	movs	r1, #46	; 0x2e
 8011cba:	8520      	strh	r0, [r4, #40]	; 0x28
 8011cbc:	4620      	mov	r0, r4
 8011cbe:	f002 fcbb 	bl	8014638 <emac_eth_send>
 8011cc2:	882b      	ldrh	r3, [r5, #0]
 8011cc4:	3301      	adds	r3, #1
 8011cc6:	802b      	strh	r3, [r5, #0]
 8011cc8:	b003      	add	sp, #12
 8011cca:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011ccc:	2001cd08 	andcs	ip, r1, r8, lsl #26
 8011cd0:	2001cd10 	andcs	ip, r1, r0, lsl sp
 8011cd4:	2001ccd0 	ldrdcs	ip, [r1], -r0

08011cd8 <igmp_set_ip>:
 8011cd8:	b507      	push	{r0, r1, r2, lr}
 8011cda:	2204      	movs	r2, #4
 8011cdc:	6803      	ldr	r3, [r0, #0]
 8011cde:	eb0d 0102 	add.w	r1, sp, r2
 8011ce2:	4806      	ldr	r0, [pc, #24]	; (8011cfc <igmp_set_ip+0x24>)
 8011ce4:	9301      	str	r3, [sp, #4]
 8011ce6:	f7ff ffad 	bl	8011c44 <memcpy.isra.0>
 8011cea:	2204      	movs	r2, #4
 8011cec:	4804      	ldr	r0, [pc, #16]	; (8011d00 <igmp_set_ip+0x28>)
 8011cee:	eb0d 0102 	add.w	r1, sp, r2
 8011cf2:	f7ff ffa7 	bl	8011c44 <memcpy.isra.0>
 8011cf6:	b003      	add	sp, #12
 8011cf8:	f85d fb04 	ldr.w	pc, [sp], #4
 8011cfc:	2001cd2a 	andcs	ip, r1, sl, lsr #26
 8011d00:	2001ccf2 	strdcs	ip, [r1], -r2

08011d04 <igmp_timer>:
 8011d04:	b570      	push	{r4, r5, r6, lr}
 8011d06:	2500      	movs	r5, #0
 8011d08:	2602      	movs	r6, #2
 8011d0a:	4c0a      	ldr	r4, [pc, #40]	; (8011d34 <igmp_timer+0x30>)
 8011d0c:	7963      	ldrb	r3, [r4, #5]
 8011d0e:	2b01      	cmp	r3, #1
 8011d10:	d109      	bne.n	8011d26 <igmp_timer+0x22>
 8011d12:	7923      	ldrb	r3, [r4, #4]
 8011d14:	b13b      	cbz	r3, 8011d26 <igmp_timer+0x22>
 8011d16:	3b01      	subs	r3, #1
 8011d18:	b2db      	uxtb	r3, r3
 8011d1a:	7123      	strb	r3, [r4, #4]
 8011d1c:	b91b      	cbnz	r3, 8011d26 <igmp_timer+0x22>
 8011d1e:	6820      	ldr	r0, [r4, #0]
 8011d20:	f7ff ff9a 	bl	8011c58 <_send_report>
 8011d24:	7166      	strb	r6, [r4, #5]
 8011d26:	3501      	adds	r5, #1
 8011d28:	2d24      	cmp	r5, #36	; 0x24
 8011d2a:	f104 0408 	add.w	r4, r4, #8
 8011d2e:	d1ed      	bne.n	8011d0c <igmp_timer+0x8>
 8011d30:	bd70      	pop	{r4, r5, r6, pc}
 8011d32:	bf00      	nop
 8011d34:	2001cbb0 			; <UNDEFINED> instruction: 0x2001cbb0

08011d38 <igmp_join>:
 8011d38:	b538      	push	{r3, r4, r5, lr}
 8011d3a:	f000 03e0 	and.w	r3, r0, #224	; 0xe0
 8011d3e:	2be0      	cmp	r3, #224	; 0xe0
 8011d40:	d11b      	bne.n	8011d7a <igmp_join+0x42>
 8011d42:	4911      	ldr	r1, [pc, #68]	; (8011d88 <igmp_join+0x50>)
 8011d44:	680c      	ldr	r4, [r1, #0]
 8011d46:	2c24      	cmp	r4, #36	; 0x24
 8011d48:	d01a      	beq.n	8011d80 <igmp_join+0x48>
 8011d4a:	2300      	movs	r3, #0
 8011d4c:	4a0f      	ldr	r2, [pc, #60]	; (8011d8c <igmp_join+0x54>)
 8011d4e:	429c      	cmp	r4, r3
 8011d50:	dc0d      	bgt.n	8011d6e <igmp_join+0x36>
 8011d52:	f44f 7381 	mov.w	r3, #258	; 0x102
 8011d56:	f842 0034 	str.w	r0, [r2, r4, lsl #3]
 8011d5a:	eb02 02c4 	add.w	r2, r2, r4, lsl #3
 8011d5e:	8093      	strh	r3, [r2, #4]
 8011d60:	1c63      	adds	r3, r4, #1
 8011d62:	600b      	str	r3, [r1, #0]
 8011d64:	f7ff ff78 	bl	8011c58 <_send_report>
 8011d68:	4623      	mov	r3, r4
 8011d6a:	4618      	mov	r0, r3
 8011d6c:	bd38      	pop	{r3, r4, r5, pc}
 8011d6e:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 8011d72:	4285      	cmp	r5, r0
 8011d74:	d0f9      	beq.n	8011d6a <igmp_join+0x32>
 8011d76:	3301      	adds	r3, #1
 8011d78:	e7e9      	b.n	8011d4e <igmp_join+0x16>
 8011d7a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8011d7e:	e7f4      	b.n	8011d6a <igmp_join+0x32>
 8011d80:	f06f 0301 	mvn.w	r3, #1
 8011d84:	e7f1      	b.n	8011d6a <igmp_join+0x32>
 8011d86:	bf00      	nop
 8011d88:	2001ccd4 	ldrdcs	ip, [r1], -r4
 8011d8c:	2001cbb0 			; <UNDEFINED> instruction: 0x2001cbb0

08011d90 <igmp_leave>:
 8011d90:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8011d94:	2600      	movs	r6, #0
 8011d96:	4f1c      	ldr	r7, [pc, #112]	; (8011e08 <igmp_leave+0x78>)
 8011d98:	f857 3036 	ldr.w	r3, [r7, r6, lsl #3]
 8011d9c:	4283      	cmp	r3, r0
 8011d9e:	d007      	beq.n	8011db0 <igmp_leave+0x20>
 8011da0:	3601      	adds	r6, #1
 8011da2:	2e24      	cmp	r6, #36	; 0x24
 8011da4:	d1f8      	bne.n	8011d98 <igmp_leave+0x8>
 8011da6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8011daa:	b002      	add	sp, #8
 8011dac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011db0:	2400      	movs	r4, #0
 8011db2:	f8df 8058 	ldr.w	r8, [pc, #88]	; 8011e0c <igmp_leave+0x7c>
 8011db6:	4d16      	ldr	r5, [pc, #88]	; (8011e10 <igmp_leave+0x80>)
 8011db8:	f8b8 3000 	ldrh.w	r3, [r8]
 8011dbc:	2118      	movs	r1, #24
 8011dbe:	9001      	str	r0, [sp, #4]
 8011dc0:	4814      	ldr	r0, [pc, #80]	; (8011e14 <igmp_leave+0x84>)
 8011dc2:	826b      	strh	r3, [r5, #18]
 8011dc4:	832c      	strh	r4, [r5, #24]
 8011dc6:	f000 f830 	bl	8011e2a <net_chksum>
 8011dca:	2204      	movs	r2, #4
 8011dcc:	8328      	strh	r0, [r5, #24]
 8011dce:	eb0d 0102 	add.w	r1, sp, r2
 8011dd2:	f105 002a 	add.w	r0, r5, #42	; 0x2a
 8011dd6:	f7ff ff35 	bl	8011c44 <memcpy.isra.0>
 8011dda:	2120      	movs	r1, #32
 8011ddc:	f105 000e 	add.w	r0, r5, #14
 8011de0:	852c      	strh	r4, [r5, #40]	; 0x28
 8011de2:	f000 f822 	bl	8011e2a <net_chksum>
 8011de6:	212e      	movs	r1, #46	; 0x2e
 8011de8:	8528      	strh	r0, [r5, #40]	; 0x28
 8011dea:	4628      	mov	r0, r5
 8011dec:	f002 fc24 	bl	8014638 <emac_eth_send>
 8011df0:	f8b8 3000 	ldrh.w	r3, [r8]
 8011df4:	f847 4036 	str.w	r4, [r7, r6, lsl #3]
 8011df8:	3301      	adds	r3, #1
 8011dfa:	eb07 07c6 	add.w	r7, r7, r6, lsl #3
 8011dfe:	4620      	mov	r0, r4
 8011e00:	f8a8 3000 	strh.w	r3, [r8]
 8011e04:	80bc      	strh	r4, [r7, #4]
 8011e06:	e7d0      	b.n	8011daa <igmp_leave+0x1a>
 8011e08:	2001cbb0 			; <UNDEFINED> instruction: 0x2001cbb0
 8011e0c:	2001ccd0 	ldrdcs	ip, [r1], -r0
 8011e10:	2001ccd8 	ldrdcs	ip, [r1], -r8
 8011e14:	2001cd1e 	andcs	ip, r1, lr, lsl sp

08011e18 <ip_set_ip>:
 8011e18:	b510      	push	{r4, lr}
 8011e1a:	4604      	mov	r4, r0
 8011e1c:	f7fe f964 	bl	80100e8 <udp_set_ip>
 8011e20:	4620      	mov	r0, r4
 8011e22:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011e26:	f7ff bf57 	b.w	8011cd8 <igmp_set_ip>

08011e2a <net_chksum>:
 8011e2a:	2300      	movs	r3, #0
 8011e2c:	f021 0201 	bic.w	r2, r1, #1
 8011e30:	b530      	push	{r4, r5, lr}
 8011e32:	1884      	adds	r4, r0, r2
 8011e34:	42a0      	cmp	r0, r4
 8011e36:	d10b      	bne.n	8011e50 <net_chksum+0x26>
 8011e38:	4291      	cmp	r1, r2
 8011e3a:	d004      	beq.n	8011e46 <net_chksum+0x1c>
 8011e3c:	7802      	ldrb	r2, [r0, #0]
 8011e3e:	0212      	lsls	r2, r2, #8
 8011e40:	ba52      	rev16	r2, r2
 8011e42:	b292      	uxth	r2, r2
 8011e44:	4413      	add	r3, r2
 8011e46:	0c1a      	lsrs	r2, r3, #16
 8011e48:	d106      	bne.n	8011e58 <net_chksum+0x2e>
 8011e4a:	43d8      	mvns	r0, r3
 8011e4c:	b280      	uxth	r0, r0
 8011e4e:	bd30      	pop	{r4, r5, pc}
 8011e50:	f830 5b02 	ldrh.w	r5, [r0], #2
 8011e54:	442b      	add	r3, r5
 8011e56:	e7ed      	b.n	8011e34 <net_chksum+0xa>
 8011e58:	b29b      	uxth	r3, r3
 8011e5a:	e7f3      	b.n	8011e44 <net_chksum+0x1a>

08011e5c <memcpy.isra.0>:
 8011e5c:	3801      	subs	r0, #1
 8011e5e:	440a      	add	r2, r1
 8011e60:	4291      	cmp	r1, r2
 8011e62:	d100      	bne.n	8011e66 <memcpy.isra.0+0xa>
 8011e64:	4770      	bx	lr
 8011e66:	f811 3b01 	ldrb.w	r3, [r1], #1
 8011e6a:	f800 3f01 	strb.w	r3, [r0, #1]!
 8011e6e:	e7f7      	b.n	8011e60 <memcpy.isra.0+0x4>

08011e70 <Display::Write(unsigned char, char const*) [clone .isra.0]>:
 8011e70:	b430      	push	{r4, r5}
 8011e72:	b168      	cbz	r0, 8011e90 <Display::Write(unsigned char, char const*) [clone .isra.0]+0x20>
 8011e74:	2300      	movs	r3, #0
 8011e76:	7905      	ldrb	r5, [r0, #4]
 8011e78:	5cd4      	ldrb	r4, [r2, r3]
 8011e7a:	b11c      	cbz	r4, 8011e84 <Display::Write(unsigned char, char const*) [clone .isra.0]+0x14>
 8011e7c:	1c5c      	adds	r4, r3, #1
 8011e7e:	429d      	cmp	r5, r3
 8011e80:	4623      	mov	r3, r4
 8011e82:	dcf9      	bgt.n	8011e78 <Display::Write(unsigned char, char const*) [clone .isra.0]+0x8>
 8011e84:	6804      	ldr	r4, [r0, #0]
 8011e86:	b2db      	uxtb	r3, r3
 8011e88:	69e4      	ldr	r4, [r4, #28]
 8011e8a:	46a4      	mov	ip, r4
 8011e8c:	bc30      	pop	{r4, r5}
 8011e8e:	4760      	bx	ip
 8011e90:	bc30      	pop	{r4, r5}
 8011e92:	4770      	bx	lr

08011e94 <Display::ClearLine(unsigned char) [clone .isra.0]>:
 8011e94:	b110      	cbz	r0, 8011e9c <Display::ClearLine(unsigned char) [clone .isra.0]+0x8>
 8011e96:	6803      	ldr	r3, [r0, #0]
 8011e98:	691b      	ldr	r3, [r3, #16]
 8011e9a:	4718      	bx	r3
 8011e9c:	4770      	bx	lr

08011e9e <Display::Status(Display7SegmentMessage)>:
 8011e9e:	7c43      	ldrb	r3, [r0, #17]
 8011ea0:	b513      	push	{r0, r1, r4, lr}
 8011ea2:	4604      	mov	r4, r0
 8011ea4:	b19b      	cbz	r3, 8011ece <Display::Status(Display7SegmentMessage)+0x30>
 8011ea6:	43c9      	mvns	r1, r1
 8011ea8:	2312      	movs	r3, #18
 8011eaa:	7a00      	ldrb	r0, [r0, #8]
 8011eac:	f88d 3004 	strb.w	r3, [sp, #4]
 8011eb0:	f3c1 2307 	ubfx	r3, r1, #8, #8
 8011eb4:	f88d 1006 	strb.w	r1, [sp, #6]
 8011eb8:	f88d 3005 	strb.w	r3, [sp, #5]
 8011ebc:	f002 fc54 	bl	8014768 <gd32_i2c_set_address(unsigned char)>
 8011ec0:	68e0      	ldr	r0, [r4, #12]
 8011ec2:	f002 fc49 	bl	8014758 <gd32_i2c_set_baudrate(unsigned int)>
 8011ec6:	2103      	movs	r1, #3
 8011ec8:	a801      	add	r0, sp, #4
 8011eca:	f002 fc53 	bl	8014774 <gd32_i2c_write(char const*, unsigned int)>
 8011ece:	b002      	add	sp, #8
 8011ed0:	bd10      	pop	{r4, pc}
	...

08011ed4 <DisplayUdf::DisplayUdf()>:
 8011ed4:	b510      	push	{r4, lr}
 8011ed6:	4604      	mov	r4, r0
 8011ed8:	f000 fef0 	bl	8012cbc <Display::Display()>
 8011edc:	2202      	movs	r2, #2
 8011ede:	2300      	movs	r3, #0
 8011ee0:	e9c4 2314 	strd	r2, r3, [r4, #80]	; 0x50
 8011ee4:	4b05      	ldr	r3, [pc, #20]	; (8011efc <DisplayUdf::DisplayUdf()+0x28>)
 8011ee6:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 8011eea:	601c      	str	r4, [r3, #0]
 8011eec:	2301      	movs	r3, #1
 8011eee:	f802 3b01 	strb.w	r3, [r2], #1
 8011ef2:	3301      	adds	r3, #1
 8011ef4:	2b15      	cmp	r3, #21
 8011ef6:	d1fa      	bne.n	8011eee <DisplayUdf::DisplayUdf()+0x1a>
 8011ef8:	4620      	mov	r0, r4
 8011efa:	bd10      	pop	{r4, pc}
 8011efc:	2001cd40 	andcs	ip, r1, r0, asr #26

08011f00 <DisplayUdf::SetTitle(char const*, ...)>:
 8011f00:	b40e      	push	{r1, r2, r3}
 8011f02:	b517      	push	{r0, r1, r2, r4, lr}
 8011f04:	ab05      	add	r3, sp, #20
 8011f06:	f853 2b04 	ldr.w	r2, [r3], #4
 8011f0a:	4604      	mov	r4, r0
 8011f0c:	211f      	movs	r1, #31
 8011f0e:	301c      	adds	r0, #28
 8011f10:	9301      	str	r3, [sp, #4]
 8011f12:	f7f7 fb75 	bl	8009600 <vsnprintf>
 8011f16:	2300      	movs	r3, #0
 8011f18:	4404      	add	r4, r0
 8011f1a:	7723      	strb	r3, [r4, #28]
 8011f1c:	b003      	add	sp, #12
 8011f1e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011f22:	b003      	add	sp, #12
 8011f24:	4770      	bx	lr
	...

08011f28 <DisplayUdf::ShowEmacStart()>:
 8011f28:	b510      	push	{r4, lr}
 8011f2a:	4604      	mov	r4, r0
 8011f2c:	f890 103e 	ldrb.w	r1, [r0, #62]	; 0x3e
 8011f30:	6980      	ldr	r0, [r0, #24]
 8011f32:	f7ff ffaf 	bl	8011e94 <Display::ClearLine(unsigned char) [clone .isra.0]>
 8011f36:	4620      	mov	r0, r4
 8011f38:	4a02      	ldr	r2, [pc, #8]	; (8011f44 <DisplayUdf::ShowEmacStart()+0x1c>)
 8011f3a:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 8011f3e:	f7f6 fc0d 	bl	800875c <Display::Printf(unsigned char, char const*, ...)>
 8011f42:	bd10      	pop	{r4, pc}
 8011f44:	080176fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r9, sl, ip, sp, lr}

08011f48 <DisplayUdf::ShowIpAddress()>:
 8011f48:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011f4c:	4604      	mov	r4, r0
 8011f4e:	f890 103e 	ldrb.w	r1, [r0, #62]	; 0x3e
 8011f52:	b086      	sub	sp, #24
 8011f54:	6980      	ldr	r0, [r0, #24]
 8011f56:	f7ff ff9d 	bl	8011e94 <Display::ClearLine(unsigned char) [clone .isra.0]>
 8011f5a:	4b13      	ldr	r3, [pc, #76]	; (8011fa8 <DisplayUdf::ShowIpAddress()+0x60>)
 8011f5c:	f894 703e 	ldrb.w	r7, [r4, #62]	; 0x3e
 8011f60:	681d      	ldr	r5, [r3, #0]
 8011f62:	69a8      	ldr	r0, [r5, #24]
 8011f64:	692e      	ldr	r6, [r5, #16]
 8011f66:	f003 fc05 	bl	8015774 <__popcountsi2>
 8011f6a:	78eb      	ldrb	r3, [r5, #3]
 8011f6c:	fa5f f886 	uxtb.w	r8, r6
 8011f70:	f3c6 2907 	ubfx	r9, r6, #8, #8
 8011f74:	f3c6 4a07 	ubfx	sl, r6, #16, #8
 8011f78:	0e36      	lsrs	r6, r6, #24
 8011f7a:	b99b      	cbnz	r3, 8011fa4 <DisplayUdf::ShowIpAddress()+0x5c>
 8011f7c:	786b      	ldrb	r3, [r5, #1]
 8011f7e:	2b00      	cmp	r3, #0
 8011f80:	bf14      	ite	ne
 8011f82:	2244      	movne	r2, #68	; 0x44
 8011f84:	2253      	moveq	r2, #83	; 0x53
 8011f86:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8011f8a:	4643      	mov	r3, r8
 8011f8c:	4639      	mov	r1, r7
 8011f8e:	4620      	mov	r0, r4
 8011f90:	e9cd a601 	strd	sl, r6, [sp, #4]
 8011f94:	4a05      	ldr	r2, [pc, #20]	; (8011fac <DisplayUdf::ShowIpAddress()+0x64>)
 8011f96:	f8cd 9000 	str.w	r9, [sp]
 8011f9a:	f7f6 fbdf 	bl	800875c <Display::Printf(unsigned char, char const*, ...)>
 8011f9e:	b006      	add	sp, #24
 8011fa0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011fa4:	225a      	movs	r2, #90	; 0x5a
 8011fa6:	e7ee      	b.n	8011f86 <DisplayUdf::ShowIpAddress()+0x3e>
 8011fa8:	2001c710 	andcs	ip, r1, r0, lsl r7
 8011fac:	0801770b 	stmdaeq	r1, {r0, r1, r3, r8, r9, sl, ip, sp, lr}

08011fb0 <DisplayUdf::ShowNetmask()>:
 8011fb0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8011fb2:	4604      	mov	r4, r0
 8011fb4:	4b0b      	ldr	r3, [pc, #44]	; (8011fe4 <DisplayUdf::ShowNetmask()+0x34>)
 8011fb6:	681b      	ldr	r3, [r3, #0]
 8011fb8:	699b      	ldr	r3, [r3, #24]
 8011fba:	0e1a      	lsrs	r2, r3, #24
 8011fbc:	9202      	str	r2, [sp, #8]
 8011fbe:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8011fc2:	9201      	str	r2, [sp, #4]
 8011fc4:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8011fc8:	9200      	str	r2, [sp, #0]
 8011fca:	f890 1048 	ldrb.w	r1, [r0, #72]	; 0x48
 8011fce:	4a06      	ldr	r2, [pc, #24]	; (8011fe8 <DisplayUdf::ShowNetmask()+0x38>)
 8011fd0:	b2db      	uxtb	r3, r3
 8011fd2:	f7f6 fbc3 	bl	800875c <Display::Printf(unsigned char, char const*, ...)>
 8011fd6:	4620      	mov	r0, r4
 8011fd8:	b004      	add	sp, #16
 8011fda:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011fde:	f7ff bfb3 	b.w	8011f48 <DisplayUdf::ShowIpAddress()>
 8011fe2:	bf00      	nop
 8011fe4:	2001c710 	andcs	ip, r1, r0, lsl r7
 8011fe8:	0801771d 	stmdaeq	r1, {r0, r2, r3, r4, r8, r9, sl, ip, sp, lr}

08011fec <DisplayUdf::ShowGatewayIp()>:
 8011fec:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8011fee:	4604      	mov	r4, r0
 8011ff0:	f890 104e 	ldrb.w	r1, [r0, #78]	; 0x4e
 8011ff4:	6980      	ldr	r0, [r0, #24]
 8011ff6:	f7ff ff4d 	bl	8011e94 <Display::ClearLine(unsigned char) [clone .isra.0]>
 8011ffa:	4b0a      	ldr	r3, [pc, #40]	; (8012024 <DisplayUdf::ShowGatewayIp()+0x38>)
 8011ffc:	4620      	mov	r0, r4
 8011ffe:	681b      	ldr	r3, [r3, #0]
 8012000:	f894 104e 	ldrb.w	r1, [r4, #78]	; 0x4e
 8012004:	695b      	ldr	r3, [r3, #20]
 8012006:	0e1a      	lsrs	r2, r3, #24
 8012008:	9202      	str	r2, [sp, #8]
 801200a:	f3c3 4207 	ubfx	r2, r3, #16, #8
 801200e:	9201      	str	r2, [sp, #4]
 8012010:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8012014:	9200      	str	r2, [sp, #0]
 8012016:	b2db      	uxtb	r3, r3
 8012018:	4a03      	ldr	r2, [pc, #12]	; (8012028 <DisplayUdf::ShowGatewayIp()+0x3c>)
 801201a:	f7f6 fb9f 	bl	800875c <Display::Printf(unsigned char, char const*, ...)>
 801201e:	b004      	add	sp, #16
 8012020:	bd10      	pop	{r4, pc}
 8012022:	bf00      	nop
 8012024:	2001c710 	andcs	ip, r1, r0, lsl r7
 8012028:	0801772c 	stmdaeq	r1, {r2, r3, r5, r8, r9, sl, ip, sp, lr}

0801202c <DisplayUdf::ShowHostName()>:
 801202c:	b510      	push	{r4, lr}
 801202e:	4604      	mov	r4, r0
 8012030:	f890 1043 	ldrb.w	r1, [r0, #67]	; 0x43
 8012034:	6980      	ldr	r0, [r0, #24]
 8012036:	f7ff ff2d 	bl	8011e94 <Display::ClearLine(unsigned char) [clone .isra.0]>
 801203a:	4b05      	ldr	r3, [pc, #20]	; (8012050 <DisplayUdf::ShowHostName()+0x24>)
 801203c:	f894 1043 	ldrb.w	r1, [r4, #67]	; 0x43
 8012040:	681a      	ldr	r2, [r3, #0]
 8012042:	69a0      	ldr	r0, [r4, #24]
 8012044:	321c      	adds	r2, #28
 8012046:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801204a:	f7ff bf11 	b.w	8011e70 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 801204e:	bf00      	nop
 8012050:	2001c710 	andcs	ip, r1, r0, lsl r7

08012054 <DisplayUdf::Show()>:
 8012054:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012056:	4604      	mov	r4, r0
 8012058:	21ff      	movs	r1, #255	; 0xff
 801205a:	f100 033c 	add.w	r3, r0, #60	; 0x3c
 801205e:	f100 0250 	add.w	r2, r0, #80	; 0x50
 8012062:	f813 0b01 	ldrb.w	r0, [r3], #1
 8012066:	2806      	cmp	r0, #6
 8012068:	bf88      	it	hi
 801206a:	f803 1c01 	strbhi.w	r1, [r3, #-1]
 801206e:	429a      	cmp	r2, r3
 8012070:	d1f7      	bne.n	8012062 <DisplayUdf::Show()+0xe>
 8012072:	2501      	movs	r5, #1
 8012074:	4629      	mov	r1, r5
 8012076:	3501      	adds	r5, #1
 8012078:	69a0      	ldr	r0, [r4, #24]
 801207a:	b2ed      	uxtb	r5, r5
 801207c:	f7ff ff0a 	bl	8011e94 <Display::ClearLine(unsigned char) [clone .isra.0]>
 8012080:	2d06      	cmp	r5, #6
 8012082:	d1f7      	bne.n	8012074 <DisplayUdf::Show()+0x20>
 8012084:	f894 103c 	ldrb.w	r1, [r4, #60]	; 0x3c
 8012088:	69a0      	ldr	r0, [r4, #24]
 801208a:	f104 021c 	add.w	r2, r4, #28
 801208e:	f7ff feef 	bl	8011e70 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 8012092:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 8012096:	69a0      	ldr	r0, [r4, #24]
 8012098:	4a0d      	ldr	r2, [pc, #52]	; (80120d0 <DisplayUdf::Show()+0x7c>)
 801209a:	f7ff fee9 	bl	8011e70 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 801209e:	4b0d      	ldr	r3, [pc, #52]	; (80120d4 <DisplayUdf::Show()+0x80>)
 80120a0:	4a0d      	ldr	r2, [pc, #52]	; (80120d8 <DisplayUdf::Show()+0x84>)
 80120a2:	f894 103f 	ldrb.w	r1, [r4, #63]	; 0x3f
 80120a6:	9300      	str	r3, [sp, #0]
 80120a8:	4620      	mov	r0, r4
 80120aa:	2303      	movs	r3, #3
 80120ac:	f7f6 fb56 	bl	800875c <Display::Printf(unsigned char, char const*, ...)>
 80120b0:	4620      	mov	r0, r4
 80120b2:	f7ff ff49 	bl	8011f48 <DisplayUdf::ShowIpAddress()>
 80120b6:	4620      	mov	r0, r4
 80120b8:	f7ff ff98 	bl	8011fec <DisplayUdf::ShowGatewayIp()>
 80120bc:	4620      	mov	r0, r4
 80120be:	f7ff ff77 	bl	8011fb0 <DisplayUdf::ShowNetmask()>
 80120c2:	4620      	mov	r0, r4
 80120c4:	b003      	add	sp, #12
 80120c6:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80120ca:	f7ff bfaf 	b.w	801202c <DisplayUdf::ShowHostName()>
 80120ce:	bf00      	nop
 80120d0:	08015946 	stmdaeq	r1, {r1, r2, r6, r8, fp, ip, lr}
 80120d4:	2001cdd8 	ldrdcs	ip, [r1], -r8
 80120d8:	0801773b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r8, r9, sl, ip, sp, lr}

080120dc <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)>:
 80120dc:	3901      	subs	r1, #1
 80120de:	b510      	push	{r4, lr}
 80120e0:	4604      	mov	r4, r0
 80120e2:	2903      	cmp	r1, #3
 80120e4:	d814      	bhi.n	8012110 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x34>
 80120e6:	e8df f001 	tbb	[pc, r1]
 80120ea:	281b1402 	ldmdacs	fp, {r1, sl, ip}
 80120ee:	4b14      	ldr	r3, [pc, #80]	; (8012140 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 80120f0:	f44f 41b6 	mov.w	r1, #23296	; 0x5b00
 80120f4:	6818      	ldr	r0, [r3, #0]
 80120f6:	f7ff fed2 	bl	8011e9e <Display::Status(Display7SegmentMessage)>
 80120fa:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 80120fe:	69a0      	ldr	r0, [r4, #24]
 8012100:	f7ff fec8 	bl	8011e94 <Display::ClearLine(unsigned char) [clone .isra.0]>
 8012104:	4a0f      	ldr	r2, [pc, #60]	; (8012144 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x68>)
 8012106:	4620      	mov	r0, r4
 8012108:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 801210c:	f7f6 fb26 	bl	800875c <Display::Printf(unsigned char, char const*, ...)>
 8012110:	bd10      	pop	{r4, pc}
 8012112:	f248 0180 	movw	r1, #32896	; 0x8080
 8012116:	4b0a      	ldr	r3, [pc, #40]	; (8012140 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 8012118:	6818      	ldr	r0, [r3, #0]
 801211a:	f7ff fec0 	bl	8011e9e <Display::Status(Display7SegmentMessage)>
 801211e:	e7f7      	b.n	8012110 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x34>
 8012120:	4b07      	ldr	r3, [pc, #28]	; (8012140 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 8012122:	f44f 41b6 	mov.w	r1, #23296	; 0x5b00
 8012126:	6818      	ldr	r0, [r3, #0]
 8012128:	f7ff feb9 	bl	8011e9e <Display::Status(Display7SegmentMessage)>
 801212c:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 8012130:	69a0      	ldr	r0, [r4, #24]
 8012132:	f7ff feaf 	bl	8011e94 <Display::ClearLine(unsigned char) [clone .isra.0]>
 8012136:	4a04      	ldr	r2, [pc, #16]	; (8012148 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x6c>)
 8012138:	e7e5      	b.n	8012106 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x2a>
 801213a:	f645 3179 	movw	r1, #23417	; 0x5b79
 801213e:	e7ea      	b.n	8012116 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x3a>
 8012140:	2001cd48 	andcs	ip, r1, r8, asr #26
 8012144:	0801774a 	stmdaeq	r1, {r1, r3, r6, r8, r9, sl, ip, sp, lr}
 8012148:	08017758 	stmdaeq	r1, {r3, r4, r6, r8, r9, sl, ip, sp, lr}

0801214c <DisplayUdf::ShowShutdown()>:
 801214c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012150:	4604      	mov	r4, r0
 8012152:	6980      	ldr	r0, [r0, #24]
 8012154:	b1d0      	cbz	r0, 801218c <DisplayUdf::ShowShutdown()+0x40>
 8012156:	f890 8005 	ldrb.w	r8, [r0, #5]
 801215a:	6803      	ldr	r3, [r0, #0]
 801215c:	f108 35ff 	add.w	r5, r8, #4294967295	; 0xffffffff
 8012160:	b2ed      	uxtb	r5, r5
 8012162:	462a      	mov	r2, r5
 8012164:	2100      	movs	r1, #0
 8012166:	6a1b      	ldr	r3, [r3, #32]
 8012168:	7906      	ldrb	r6, [r0, #4]
 801216a:	2700      	movs	r7, #0
 801216c:	4798      	blx	r3
 801216e:	3e01      	subs	r6, #1
 8012170:	42b7      	cmp	r7, r6
 8012172:	69a0      	ldr	r0, [r4, #24]
 8012174:	d311      	bcc.n	801219a <DisplayUdf::ShowShutdown()+0x4e>
 8012176:	b120      	cbz	r0, 8012182 <DisplayUdf::ShowShutdown()+0x36>
 8012178:	6803      	ldr	r3, [r0, #0]
 801217a:	462a      	mov	r2, r5
 801217c:	2100      	movs	r1, #0
 801217e:	6a1b      	ldr	r3, [r3, #32]
 8012180:	4798      	blx	r3
 8012182:	4641      	mov	r1, r8
 8012184:	4a08      	ldr	r2, [pc, #32]	; (80121a8 <DisplayUdf::ShowShutdown()+0x5c>)
 8012186:	69a0      	ldr	r0, [r4, #24]
 8012188:	f7ff fe72 	bl	8011e70 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 801218c:	f44f 41de 	mov.w	r1, #28416	; 0x6f00
 8012190:	4620      	mov	r0, r4
 8012192:	f7ff fe84 	bl	8011e9e <Display::Status(Display7SegmentMessage)>
 8012196:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801219a:	b118      	cbz	r0, 80121a4 <DisplayUdf::ShowShutdown()+0x58>
 801219c:	6803      	ldr	r3, [r0, #0]
 801219e:	2120      	movs	r1, #32
 80121a0:	695b      	ldr	r3, [r3, #20]
 80121a2:	4798      	blx	r3
 80121a4:	3701      	adds	r7, #1
 80121a6:	e7e3      	b.n	8012170 <DisplayUdf::ShowShutdown()+0x24>
 80121a8:	08017766 	stmdaeq	r1, {r1, r2, r5, r6, r8, r9, sl, ip, sp, lr}

080121ac <DisplayUdf::Set(unsigned char, displayudf::Labels)>:
 80121ac:	1e4b      	subs	r3, r1, #1
 80121ae:	2b05      	cmp	r3, #5
 80121b0:	b530      	push	{r4, r5, lr}
 80121b2:	d80f      	bhi.n	80121d4 <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x28>
 80121b4:	2300      	movs	r3, #0
 80121b6:	f100 043c 	add.w	r4, r0, #60	; 0x3c
 80121ba:	f814 5b01 	ldrb.w	r5, [r4], #1
 80121be:	428d      	cmp	r5, r1
 80121c0:	d109      	bne.n	80121d6 <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x2a>
 80121c2:	1884      	adds	r4, r0, r2
 80121c4:	f894 403c 	ldrb.w	r4, [r4, #60]	; 0x3c
 80121c8:	4403      	add	r3, r0
 80121ca:	f883 403c 	strb.w	r4, [r3, #60]	; 0x3c
 80121ce:	4410      	add	r0, r2
 80121d0:	f880 103c 	strb.w	r1, [r0, #60]	; 0x3c
 80121d4:	bd30      	pop	{r4, r5, pc}
 80121d6:	3301      	adds	r3, #1
 80121d8:	2b14      	cmp	r3, #20
 80121da:	d1ee      	bne.n	80121ba <DisplayUdf::Set(unsigned char, displayudf::Labels)+0xe>
 80121dc:	e7f7      	b.n	80121ce <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x22>
	...

080121e0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>:
 80121e0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80121e2:	88c6      	ldrh	r6, [r0, #6]
 80121e4:	8885      	ldrh	r5, [r0, #4]
 80121e6:	42ae      	cmp	r6, r5
 80121e8:	d216      	bcs.n	8012218 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x38>
 80121ea:	4604      	mov	r4, r0
 80121ec:	6800      	ldr	r0, [r0, #0]
 80121ee:	1bad      	subs	r5, r5, r6
 80121f0:	4430      	add	r0, r6
 80121f2:	7a26      	ldrb	r6, [r4, #8]
 80121f4:	b923      	cbnz	r3, 8012200 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x20>
 80121f6:	b926      	cbnz	r6, 8012202 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x22>
 80121f8:	9200      	str	r2, [sp, #0]
 80121fa:	460b      	mov	r3, r1
 80121fc:	4a09      	ldr	r2, [pc, #36]	; (8012224 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x44>)
 80121fe:	e003      	b.n	8012208 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 8012200:	b166      	cbz	r6, 801221c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x3c>
 8012202:	460b      	mov	r3, r1
 8012204:	9200      	str	r2, [sp, #0]
 8012206:	4a08      	ldr	r2, [pc, #32]	; (8012228 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x48>)
 8012208:	4629      	mov	r1, r5
 801220a:	f7f7 f9e1 	bl	80095d0 <snprintf>
 801220e:	4285      	cmp	r5, r0
 8012210:	bfa2      	ittt	ge
 8012212:	88e3      	ldrhge	r3, [r4, #6]
 8012214:	181b      	addge	r3, r3, r0
 8012216:	80e3      	strhge	r3, [r4, #6]
 8012218:	b002      	add	sp, #8
 801221a:	bd70      	pop	{r4, r5, r6, pc}
 801221c:	9200      	str	r2, [sp, #0]
 801221e:	460b      	mov	r3, r1
 8012220:	4a02      	ldr	r2, [pc, #8]	; (801222c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x4c>)
 8012222:	e7f1      	b.n	8012208 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 8012224:	08015a73 	stmdaeq	r1, {r0, r1, r4, r5, r6, r9, fp, ip, lr}
 8012228:	08015a6a 	stmdaeq	r1, {r1, r3, r5, r6, r9, fp, ip, lr}
 801222c:	08015a74 	stmdaeq	r1, {r2, r4, r5, r6, r9, fp, ip, lr}

08012230 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>:
 8012230:	b510      	push	{r4, lr}
 8012232:	2220      	movs	r2, #32
 8012234:	4604      	mov	r4, r0
 8012236:	f840 1b04 	str.w	r1, [r0], #4
 801223a:	2100      	movs	r1, #0
 801223c:	f001 f9d4 	bl	80135e8 <memset>
 8012240:	f647 7305 	movw	r3, #32517	; 0x7f05
 8012244:	4620      	mov	r0, r4
 8012246:	84a3      	strh	r3, [r4, #36]	; 0x24
 8012248:	bd10      	pop	{r4, pc}

0801224a <DisplayUdfParams::Load()>:
 801224a:	b508      	push	{r3, lr}
 801224c:	2300      	movs	r3, #0
 801224e:	4601      	mov	r1, r0
 8012250:	6043      	str	r3, [r0, #4]
 8012252:	6800      	ldr	r0, [r0, #0]
 8012254:	b120      	cbz	r0, 8012260 <DisplayUdfParams::Load()+0x16>
 8012256:	6803      	ldr	r3, [r0, #0]
 8012258:	3104      	adds	r1, #4
 801225a:	68db      	ldr	r3, [r3, #12]
 801225c:	4798      	blx	r3
 801225e:	2001      	movs	r0, #1
 8012260:	bd08      	pop	{r3, pc}
	...

08012264 <DisplayUdfParams::Load(char const*, unsigned int)>:
 8012264:	6803      	ldr	r3, [r0, #0]
 8012266:	b1d3      	cbz	r3, 801229e <DisplayUdfParams::Load(char const*, unsigned int)+0x3a>
 8012268:	2300      	movs	r3, #0
 801226a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801226c:	460d      	mov	r5, r1
 801226e:	4616      	mov	r6, r2
 8012270:	4604      	mov	r4, r0
 8012272:	6043      	str	r3, [r0, #4]
 8012274:	4602      	mov	r2, r0
 8012276:	490a      	ldr	r1, [pc, #40]	; (80122a0 <DisplayUdfParams::Load(char const*, unsigned int)+0x3c>)
 8012278:	4668      	mov	r0, sp
 801227a:	f000 fb2b 	bl	80128d4 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 801227e:	4632      	mov	r2, r6
 8012280:	4629      	mov	r1, r5
 8012282:	4668      	mov	r0, sp
 8012284:	f000 fb2a 	bl	80128dc <ReadConfigFile::Read(char const*, unsigned int)>
 8012288:	4621      	mov	r1, r4
 801228a:	f851 0b04 	ldr.w	r0, [r1], #4
 801228e:	6803      	ldr	r3, [r0, #0]
 8012290:	689b      	ldr	r3, [r3, #8]
 8012292:	4798      	blx	r3
 8012294:	4668      	mov	r0, sp
 8012296:	f000 fb20 	bl	80128da <ReadConfigFile::~ReadConfigFile()>
 801229a:	b002      	add	sp, #8
 801229c:	bd70      	pop	{r4, r5, r6, pc}
 801229e:	4770      	bx	lr
 80122a0:	0801236d 	stmdaeq	r1, {r0, r2, r3, r5, r6, r8, r9, sp}

080122a4 <DisplayUdfParams::callbackFunction(char const*)>:
 80122a4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80122a6:	460e      	mov	r6, r1
 80122a8:	4604      	mov	r4, r0
 80122aa:	492c      	ldr	r1, [pc, #176]	; (801235c <DisplayUdfParams::callbackFunction(char const*)+0xb8>)
 80122ac:	4630      	mov	r0, r6
 80122ae:	f10d 0207 	add.w	r2, sp, #7
 80122b2:	f000 fc4b 	bl	8012b4c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 80122b6:	b968      	cbnz	r0, 80122d4 <DisplayUdfParams::callbackFunction(char const*)+0x30>
 80122b8:	f89d 2007 	ldrb.w	r2, [sp, #7]
 80122bc:	6863      	ldr	r3, [r4, #4]
 80122be:	2a7f      	cmp	r2, #127	; 0x7f
 80122c0:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
 80122c4:	bf14      	ite	ne
 80122c6:	f043 5300 	orrne.w	r3, r3, #536870912	; 0x20000000
 80122ca:	f023 5300 	biceq.w	r3, r3, #536870912	; 0x20000000
 80122ce:	6063      	str	r3, [r4, #4]
 80122d0:	b003      	add	sp, #12
 80122d2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80122d4:	4630      	mov	r0, r6
 80122d6:	4922      	ldr	r1, [pc, #136]	; (8012360 <DisplayUdfParams::callbackFunction(char const*)+0xbc>)
 80122d8:	f10d 0207 	add.w	r2, sp, #7
 80122dc:	f000 fc36 	bl	8012b4c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 80122e0:	b958      	cbnz	r0, 80122fa <DisplayUdfParams::callbackFunction(char const*)+0x56>
 80122e2:	f89d 2007 	ldrb.w	r2, [sp, #7]
 80122e6:	6863      	ldr	r3, [r4, #4]
 80122e8:	2a05      	cmp	r2, #5
 80122ea:	f884 2024 	strb.w	r2, [r4, #36]	; 0x24
 80122ee:	bf14      	ite	ne
 80122f0:	f043 5380 	orrne.w	r3, r3, #268435456	; 0x10000000
 80122f4:	f023 5380 	biceq.w	r3, r3, #268435456	; 0x10000000
 80122f8:	e7e9      	b.n	80122ce <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 80122fa:	4630      	mov	r0, r6
 80122fc:	4919      	ldr	r1, [pc, #100]	; (8012364 <DisplayUdfParams::callbackFunction(char const*)+0xc0>)
 80122fe:	f10d 0207 	add.w	r2, sp, #7
 8012302:	f000 fc23 	bl	8012b4c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8012306:	b948      	cbnz	r0, 801231c <DisplayUdfParams::callbackFunction(char const*)+0x78>
 8012308:	f89d 2007 	ldrb.w	r2, [sp, #7]
 801230c:	6863      	ldr	r3, [r4, #4]
 801230e:	b112      	cbz	r2, 8012316 <DisplayUdfParams::callbackFunction(char const*)+0x72>
 8012310:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8012314:	e7db      	b.n	80122ce <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 8012316:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 801231a:	e7d8      	b.n	80122ce <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 801231c:	2500      	movs	r5, #0
 801231e:	4f12      	ldr	r7, [pc, #72]	; (8012368 <DisplayUdfParams::callbackFunction(char const*)+0xc4>)
 8012320:	4630      	mov	r0, r6
 8012322:	f857 1b04 	ldr.w	r1, [r7], #4
 8012326:	f10d 0207 	add.w	r2, sp, #7
 801232a:	f000 fc0f 	bl	8012b4c <Sscan::Uint8(char const*, char const*, unsigned char&)>
 801232e:	b980      	cbnz	r0, 8012352 <DisplayUdfParams::callbackFunction(char const*)+0xae>
 8012330:	2301      	movs	r3, #1
 8012332:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8012336:	40ab      	lsls	r3, r5
 8012338:	1e4e      	subs	r6, r1, #1
 801233a:	2e05      	cmp	r6, #5
 801233c:	6862      	ldr	r2, [r4, #4]
 801233e:	4425      	add	r5, r4
 8012340:	d802      	bhi.n	8012348 <DisplayUdfParams::callbackFunction(char const*)+0xa4>
 8012342:	7229      	strb	r1, [r5, #8]
 8012344:	4313      	orrs	r3, r2
 8012346:	e7c2      	b.n	80122ce <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 8012348:	ea22 0203 	bic.w	r2, r2, r3
 801234c:	7228      	strb	r0, [r5, #8]
 801234e:	6062      	str	r2, [r4, #4]
 8012350:	e7be      	b.n	80122d0 <DisplayUdfParams::callbackFunction(char const*)+0x2c>
 8012352:	3501      	adds	r5, #1
 8012354:	2d14      	cmp	r5, #20
 8012356:	d1e3      	bne.n	8012320 <DisplayUdfParams::callbackFunction(char const*)+0x7c>
 8012358:	e7ba      	b.n	80122d0 <DisplayUdfParams::callbackFunction(char const*)+0x2c>
 801235a:	bf00      	nop
 801235c:	08017826 	stmdaeq	r1, {r1, r2, r5, fp, ip, sp, lr}
 8012360:	080177ee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, r8, r9, sl, ip, sp, lr}
 8012364:	080177fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr}
 8012368:	08017778 	stmdaeq	r1, {r3, r4, r5, r6, r8, r9, sl, ip, sp, lr}

0801236c <DisplayUdfParams::staticCallbackFunction(void*, char const*)>:
 801236c:	f7ff bf9a 	b.w	80122a4 <DisplayUdfParams::callbackFunction(char const*)>

08012370 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)>:
 8012370:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012374:	4604      	mov	r4, r0
 8012376:	4615      	mov	r5, r2
 8012378:	461e      	mov	r6, r3
 801237a:	b086      	sub	sp, #24
 801237c:	3004      	adds	r0, #4
 801237e:	b379      	cbz	r1, 80123e0 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x70>
 8012380:	2222      	movs	r2, #34	; 0x22
 8012382:	f001 f91a 	bl	80135ba <memmove>
 8012386:	462a      	mov	r2, r5
 8012388:	4633      	mov	r3, r6
 801238a:	493d      	ldr	r1, [pc, #244]	; (8012480 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x110>)
 801238c:	a803      	add	r0, sp, #12
 801238e:	f000 fa01 	bl	8012794 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 8012392:	6863      	ldr	r3, [r4, #4]
 8012394:	f894 2025 	ldrb.w	r2, [r4, #37]	; 0x25
 8012398:	493a      	ldr	r1, [pc, #232]	; (8012484 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x114>)
 801239a:	f3c3 7340 	ubfx	r3, r3, #29, #1
 801239e:	a803      	add	r0, sp, #12
 80123a0:	f7ff ff1e 	bl	80121e0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 80123a4:	6863      	ldr	r3, [r4, #4]
 80123a6:	f894 2024 	ldrb.w	r2, [r4, #36]	; 0x24
 80123aa:	f3c3 7300 	ubfx	r3, r3, #28, #1
 80123ae:	4936      	ldr	r1, [pc, #216]	; (8012488 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x118>)
 80123b0:	a803      	add	r0, sp, #12
 80123b2:	f7ff ff15 	bl	80121e0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 80123b6:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80123ba:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 80123be:	6863      	ldr	r3, [r4, #4]
 80123c0:	42aa      	cmp	r2, r5
 80123c2:	d226      	bcs.n	8012412 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xa2>
 80123c4:	9803      	ldr	r0, [sp, #12]
 80123c6:	f013 4380 	ands.w	r3, r3, #1073741824	; 0x40000000
 80123ca:	4410      	add	r0, r2
 80123cc:	eba5 0502 	sub.w	r5, r5, r2
 80123d0:	f89d 2014 	ldrb.w	r2, [sp, #20]
 80123d4:	d10b      	bne.n	80123ee <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x7e>
 80123d6:	b962      	cbnz	r2, 80123f2 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x82>
 80123d8:	9200      	str	r2, [sp, #0]
 80123da:	4b2c      	ldr	r3, [pc, #176]	; (801248c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>)
 80123dc:	4a2c      	ldr	r2, [pc, #176]	; (8012490 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x120>)
 80123de:	e00e      	b.n	80123fe <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x8e>
 80123e0:	6823      	ldr	r3, [r4, #0]
 80123e2:	4601      	mov	r1, r0
 80123e4:	681a      	ldr	r2, [r3, #0]
 80123e6:	4618      	mov	r0, r3
 80123e8:	68d2      	ldr	r2, [r2, #12]
 80123ea:	4790      	blx	r2
 80123ec:	e7cb      	b.n	8012386 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x16>
 80123ee:	2a00      	cmp	r2, #0
 80123f0:	d041      	beq.n	8012476 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x106>
 80123f2:	3b00      	subs	r3, #0
 80123f4:	bf18      	it	ne
 80123f6:	2301      	movne	r3, #1
 80123f8:	4a26      	ldr	r2, [pc, #152]	; (8012494 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x124>)
 80123fa:	9300      	str	r3, [sp, #0]
 80123fc:	4b23      	ldr	r3, [pc, #140]	; (801248c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>)
 80123fe:	4629      	mov	r1, r5
 8012400:	f7f7 f8e6 	bl	80095d0 <snprintf>
 8012404:	4285      	cmp	r5, r0
 8012406:	bfa2      	ittt	ge
 8012408:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 801240c:	181b      	addge	r3, r3, r0
 801240e:	f8ad 3012 	strhge.w	r3, [sp, #18]
 8012412:	2500      	movs	r5, #0
 8012414:	2701      	movs	r7, #1
 8012416:	4e20      	ldr	r6, [pc, #128]	; (8012498 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x128>)
 8012418:	f104 0808 	add.w	r8, r4, #8
 801241c:	f856 1b04 	ldr.w	r1, [r6], #4
 8012420:	780b      	ldrb	r3, [r1, #0]
 8012422:	b15b      	cbz	r3, 801243c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xcc>
 8012424:	6862      	ldr	r2, [r4, #4]
 8012426:	fa07 f305 	lsl.w	r3, r7, r5
 801242a:	4393      	bics	r3, r2
 801242c:	bf0c      	ite	eq
 801242e:	2301      	moveq	r3, #1
 8012430:	2300      	movne	r3, #0
 8012432:	f818 2005 	ldrb.w	r2, [r8, r5]
 8012436:	a803      	add	r0, sp, #12
 8012438:	f7ff fed2 	bl	80121e0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 801243c:	3501      	adds	r5, #1
 801243e:	2d14      	cmp	r5, #20
 8012440:	d1ec      	bne.n	801241c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xac>
 8012442:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8012446:	b17b      	cbz	r3, 8012468 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xf8>
 8012448:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801244c:	9b03      	ldr	r3, [sp, #12]
 801244e:	4413      	add	r3, r2
 8012450:	227d      	movs	r2, #125	; 0x7d
 8012452:	f803 2c01 	strb.w	r2, [r3, #-1]
 8012456:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801245a:	9903      	ldr	r1, [sp, #12]
 801245c:	54ca      	strb	r2, [r1, r3]
 801245e:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8012462:	3301      	adds	r3, #1
 8012464:	f8ad 3012 	strh.w	r3, [sp, #18]
 8012468:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801246c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801246e:	601a      	str	r2, [r3, #0]
 8012470:	b006      	add	sp, #24
 8012472:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012476:	2301      	movs	r3, #1
 8012478:	4a08      	ldr	r2, [pc, #32]	; (801249c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x12c>)
 801247a:	9300      	str	r3, [sp, #0]
 801247c:	4b03      	ldr	r3, [pc, #12]	; (801248c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>)
 801247e:	e7be      	b.n	80123fe <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x8e>
 8012480:	0801781a 	stmdaeq	r1, {r1, r3, r4, fp, ip, sp, lr}
 8012484:	08017826 	stmdaeq	r1, {r1, r2, r5, fp, ip, sp, lr}
 8012488:	080177ee 	stmdaeq	r1, {r1, r2, r3, r5, r6, r7, r8, r9, sl, ip, sp, lr}
 801248c:	080177fc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr}
 8012490:	08015a73 	stmdaeq	r1, {r0, r1, r4, r5, r6, r9, fp, ip, lr}
 8012494:	08015a6a 	stmdaeq	r1, {r1, r3, r5, r6, r9, fp, ip, lr}
 8012498:	08017778 	stmdaeq	r1, {r3, r4, r5, r6, r8, r9, sl, ip, sp, lr}
 801249c:	08015a74 	stmdaeq	r1, {r2, r4, r5, r6, r9, fp, ip, lr}

080124a0 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)>:
 80124a0:	b513      	push	{r0, r1, r4, lr}
 80124a2:	6804      	ldr	r4, [r0, #0]
 80124a4:	b914      	cbnz	r4, 80124ac <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)+0xc>
 80124a6:	601c      	str	r4, [r3, #0]
 80124a8:	b002      	add	sp, #8
 80124aa:	bd10      	pop	{r4, pc}
 80124ac:	9300      	str	r3, [sp, #0]
 80124ae:	4613      	mov	r3, r2
 80124b0:	460a      	mov	r2, r1
 80124b2:	2100      	movs	r1, #0
 80124b4:	f7ff ff5c 	bl	8012370 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)>
 80124b8:	e7f6      	b.n	80124a8 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)+0x8>

080124ba <DisplayUdfParams::Set(DisplayUdf*)>:
 80124ba:	6843      	ldr	r3, [r0, #4]
 80124bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80124c0:	009a      	lsls	r2, r3, #2
 80124c2:	4604      	mov	r4, r0
 80124c4:	460e      	mov	r6, r1
 80124c6:	d506      	bpl.n	80124d6 <DisplayUdfParams::Set(DisplayUdf*)+0x1c>
 80124c8:	6988      	ldr	r0, [r1, #24]
 80124ca:	b120      	cbz	r0, 80124d6 <DisplayUdfParams::Set(DisplayUdf*)+0x1c>
 80124cc:	6803      	ldr	r3, [r0, #0]
 80124ce:	f894 1025 	ldrb.w	r1, [r4, #37]	; 0x25
 80124d2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80124d4:	4798      	blx	r3
 80124d6:	6863      	ldr	r3, [r4, #4]
 80124d8:	69b0      	ldr	r0, [r6, #24]
 80124da:	00db      	lsls	r3, r3, #3
 80124dc:	bf41      	itttt	mi
 80124de:	f64e 2260 	movwmi	r2, #60000	; 0xea60
 80124e2:	f894 3024 	ldrbmi.w	r3, [r4, #36]	; 0x24
 80124e6:	4353      	mulmi	r3, r2
 80124e8:	6173      	strmi	r3, [r6, #20]
 80124ea:	6861      	ldr	r1, [r4, #4]
 80124ec:	f3c1 7180 	ubfx	r1, r1, #30, #1
 80124f0:	b110      	cbz	r0, 80124f8 <DisplayUdfParams::Set(DisplayUdf*)+0x3e>
 80124f2:	6803      	ldr	r3, [r0, #0]
 80124f4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80124f6:	4798      	blx	r3
 80124f8:	2500      	movs	r5, #0
 80124fa:	2701      	movs	r7, #1
 80124fc:	f104 0808 	add.w	r8, r4, #8
 8012500:	6862      	ldr	r2, [r4, #4]
 8012502:	fa07 f305 	lsl.w	r3, r7, r5
 8012506:	4393      	bics	r3, r2
 8012508:	d105      	bne.n	8012516 <DisplayUdfParams::Set(DisplayUdf*)+0x5c>
 801250a:	462a      	mov	r2, r5
 801250c:	4630      	mov	r0, r6
 801250e:	f818 1005 	ldrb.w	r1, [r8, r5]
 8012512:	f7ff fe4b 	bl	80121ac <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8012516:	3501      	adds	r5, #1
 8012518:	2d14      	cmp	r5, #20
 801251a:	d1f1      	bne.n	8012500 <DisplayUdfParams::Set(DisplayUdf*)+0x46>
 801251c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012520 <DisplayUdfParams::Dump()>:
 8012520:	4770      	bx	lr
	...

08012524 <DisplayUdf::Show(E131Bridge*)>:
 8012524:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012528:	460e      	mov	r6, r1
 801252a:	4604      	mov	r4, r0
 801252c:	b085      	sub	sp, #20
 801252e:	f7ff fd91 	bl	8012054 <DisplayUdf::Show()>
 8012532:	f896 250b 	ldrb.w	r2, [r6, #1291]	; 0x50b
 8012536:	f896 350a 	ldrb.w	r3, [r6, #1290]	; 0x50a
 801253a:	4620      	mov	r0, r4
 801253c:	4413      	add	r3, r2
 801253e:	f894 1041 	ldrb.w	r1, [r4, #65]	; 0x41
 8012542:	4a21      	ldr	r2, [pc, #132]	; (80125c8 <DisplayUdf::Show(E131Bridge*)+0xa4>)
 8012544:	f7f6 f90a 	bl	800875c <Display::Printf(unsigned char, char const*, ...)>
 8012548:	2500      	movs	r5, #0
 801254a:	4f20      	ldr	r7, [pc, #128]	; (80125cc <DisplayUdf::Show(E131Bridge*)+0xa8>)
 801254c:	f8df 8080 	ldr.w	r8, [pc, #128]	; 80125d0 <DisplayUdf::Show(E131Bridge*)+0xac>
 8012550:	f8df 9080 	ldr.w	r9, [pc, #128]	; 80125d4 <DisplayUdf::Show(E131Bridge*)+0xb0>
 8012554:	2301      	movs	r3, #1
 8012556:	4629      	mov	r1, r5
 8012558:	4630      	mov	r0, r6
 801255a:	f10d 020e 	add.w	r2, sp, #14
 801255e:	f7f7 fc2d 	bl	8009dbc <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 8012562:	b1a8      	cbz	r0, 8012590 <DisplayUdf::Show(E131Bridge*)+0x6c>
 8012564:	2344      	movs	r3, #68	; 0x44
 8012566:	436b      	muls	r3, r5
 8012568:	f206 524c 	addw	r2, r6, #1356	; 0x54c
 801256c:	58d2      	ldr	r2, [r2, r3]
 801256e:	f8bd 000e 	ldrh.w	r0, [sp, #14]
 8012572:	2a00      	cmp	r2, #0
 8012574:	bf0c      	ite	eq
 8012576:	463b      	moveq	r3, r7
 8012578:	4643      	movne	r3, r8
 801257a:	e9cd 0300 	strd	r0, r3, [sp]
 801257e:	f104 0144 	add.w	r1, r4, #68	; 0x44
 8012582:	464a      	mov	r2, r9
 8012584:	4620      	mov	r0, r4
 8012586:	5d49      	ldrb	r1, [r1, r5]
 8012588:	f105 0341 	add.w	r3, r5, #65	; 0x41
 801258c:	f7f6 f8e6 	bl	800875c <Display::Printf(unsigned char, char const*, ...)>
 8012590:	3501      	adds	r5, #1
 8012592:	2d04      	cmp	r5, #4
 8012594:	d1de      	bne.n	8012554 <DisplayUdf::Show(E131Bridge*)+0x30>
 8012596:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8012598:	f894 104f 	ldrb.w	r1, [r4, #79]	; 0x4f
 801259c:	2a02      	cmp	r2, #2
 801259e:	d001      	beq.n	80125a4 <DisplayUdf::Show(E131Bridge*)+0x80>
 80125a0:	6d63      	ldr	r3, [r4, #84]	; 0x54
 80125a2:	b933      	cbnz	r3, 80125b2 <DisplayUdf::Show(E131Bridge*)+0x8e>
 80125a4:	4620      	mov	r0, r4
 80125a6:	4a0c      	ldr	r2, [pc, #48]	; (80125d8 <DisplayUdf::Show(E131Bridge*)+0xb4>)
 80125a8:	f7f6 f8d8 	bl	800875c <Display::Printf(unsigned char, char const*, ...)>
 80125ac:	b005      	add	sp, #20
 80125ae:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80125b2:	480a      	ldr	r0, [pc, #40]	; (80125dc <DisplayUdf::Show(E131Bridge*)+0xb8>)
 80125b4:	9300      	str	r3, [sp, #0]
 80125b6:	4b0a      	ldr	r3, [pc, #40]	; (80125e0 <DisplayUdf::Show(E131Bridge*)+0xbc>)
 80125b8:	2a00      	cmp	r2, #0
 80125ba:	bf08      	it	eq
 80125bc:	4603      	moveq	r3, r0
 80125be:	4620      	mov	r0, r4
 80125c0:	4a08      	ldr	r2, [pc, #32]	; (80125e4 <DisplayUdf::Show(E131Bridge*)+0xc0>)
 80125c2:	f7f6 f8cb 	bl	800875c <Display::Printf(unsigned char, char const*, ...)>
 80125c6:	e7f1      	b.n	80125ac <DisplayUdf::Show(E131Bridge*)+0x88>
 80125c8:	08017830 	stmdaeq	r1, {r4, r5, fp, ip, sp, lr}
 80125cc:	0801597d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r8, fp, ip, lr}
 80125d0:	08015981 	stmdaeq	r1, {r0, r7, r8, fp, ip, lr}
 80125d4:	08017837 	stmdaeq	r1, {r0, r1, r2, r4, r5, fp, ip, sp, lr}
 80125d8:	08017846 	stmdaeq	r1, {r1, r2, r6, fp, ip, sp, lr}
 80125dc:	08015a9f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r7, r9, fp, ip, lr}
 80125e0:	08015a94 	stmdaeq	r1, {r2, r4, r7, r9, fp, ip, lr}
 80125e4:	0801784d 	stmdaeq	r1, {r0, r2, r3, r6, fp, ip, sp, lr}

080125e8 <NetworkDisplay::ShowEmacStart()>:
 80125e8:	4b01      	ldr	r3, [pc, #4]	; (80125f0 <NetworkDisplay::ShowEmacStart()+0x8>)
 80125ea:	6818      	ldr	r0, [r3, #0]
 80125ec:	f7ff bc9c 	b.w	8011f28 <DisplayUdf::ShowEmacStart()>
 80125f0:	2001cd40 	andcs	ip, r1, r0, asr #26

080125f4 <NetworkDisplay::ShowIp()>:
 80125f4:	4b01      	ldr	r3, [pc, #4]	; (80125fc <NetworkDisplay::ShowIp()+0x8>)
 80125f6:	6818      	ldr	r0, [r3, #0]
 80125f8:	f7ff bca6 	b.w	8011f48 <DisplayUdf::ShowIpAddress()>
 80125fc:	2001cd40 	andcs	ip, r1, r0, asr #26

08012600 <NetworkDisplay::ShowNetMask()>:
 8012600:	4b01      	ldr	r3, [pc, #4]	; (8012608 <NetworkDisplay::ShowNetMask()+0x8>)
 8012602:	6818      	ldr	r0, [r3, #0]
 8012604:	f7ff bcd4 	b.w	8011fb0 <DisplayUdf::ShowNetmask()>
 8012608:	2001cd40 	andcs	ip, r1, r0, asr #26

0801260c <NetworkDisplay::ShowHostName()>:
 801260c:	4b01      	ldr	r3, [pc, #4]	; (8012614 <NetworkDisplay::ShowHostName()+0x8>)
 801260e:	6818      	ldr	r0, [r3, #0]
 8012610:	f7ff bd0c 	b.w	801202c <DisplayUdf::ShowHostName()>
 8012614:	2001cd40 	andcs	ip, r1, r0, asr #26

08012618 <NetworkDisplay::ShowShutdown()>:
 8012618:	4b01      	ldr	r3, [pc, #4]	; (8012620 <NetworkDisplay::ShowShutdown()+0x8>)
 801261a:	6818      	ldr	r0, [r3, #0]
 801261c:	f7ff bd96 	b.w	801214c <DisplayUdf::ShowShutdown()>
 8012620:	2001cd40 	andcs	ip, r1, r0, asr #26

08012624 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>:
 8012624:	4b01      	ldr	r3, [pc, #4]	; (801262c <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)+0x8>)
 8012626:	6818      	ldr	r0, [r3, #0]
 8012628:	f7ff bd58 	b.w	80120dc <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)>
 801262c:	2001cd40 	andcs	ip, r1, r0, asr #26

08012630 <properties::convert_json_file(char*, unsigned short, bool)>:
 8012630:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012634:	4603      	mov	r3, r0
 8012636:	7800      	ldrb	r0, [r0, #0]
 8012638:	287b      	cmp	r0, #123	; 0x7b
 801263a:	f040 80a2 	bne.w	8012782 <properties::convert_json_file(char*, unsigned short, bool)+0x152>
 801263e:	b17a      	cbz	r2, 8012660 <properties::convert_json_file(char*, unsigned short, bool)+0x30>
 8012640:	2401      	movs	r4, #1
 8012642:	461e      	mov	r6, r3
 8012644:	4620      	mov	r0, r4
 8012646:	2a00      	cmp	r2, #0
 8012648:	bf0c      	ite	eq
 801264a:	f04f 0c0a 	moveq.w	ip, #10
 801264e:	f04f 0c00 	movne.w	ip, #0
 8012652:	273d      	movs	r7, #61	; 0x3d
 8012654:	42a1      	cmp	r1, r4
 8012656:	d850      	bhi.n	80126fa <properties::convert_json_file(char*, unsigned short, bool)+0xca>
 8012658:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801265c:	463c      	mov	r4, r7
 801265e:	e7f2      	b.n	8012646 <properties::convert_json_file(char*, unsigned short, bool)+0x16>
 8012660:	2023      	movs	r0, #35	; 0x23
 8012662:	f803 0b01 	strb.w	r0, [r3], #1
 8012666:	461c      	mov	r4, r3
 8012668:	2701      	movs	r7, #1
 801266a:	42b9      	cmp	r1, r7
 801266c:	d811      	bhi.n	8012692 <properties::convert_json_file(char*, unsigned short, bool)+0x62>
 801266e:	2001      	movs	r0, #1
 8012670:	461e      	mov	r6, r3
 8012672:	230a      	movs	r3, #10
 8012674:	4625      	mov	r5, r4
 8012676:	f806 3b01 	strb.w	r3, [r6], #1
 801267a:	3001      	adds	r0, #1
 801267c:	462b      	mov	r3, r5
 801267e:	781c      	ldrb	r4, [r3, #0]
 8012680:	3501      	adds	r5, #1
 8012682:	2c7b      	cmp	r4, #123	; 0x7b
 8012684:	d0ea      	beq.n	801265c <properties::convert_json_file(char*, unsigned short, bool)+0x2c>
 8012686:	42b9      	cmp	r1, r7
 8012688:	f107 0401 	add.w	r4, r7, #1
 801268c:	d9db      	bls.n	8012646 <properties::convert_json_file(char*, unsigned short, bool)+0x16>
 801268e:	4627      	mov	r7, r4
 8012690:	e7f4      	b.n	801267c <properties::convert_json_file(char*, unsigned short, bool)+0x4c>
 8012692:	f814 0b01 	ldrb.w	r0, [r4], #1
 8012696:	2822      	cmp	r0, #34	; 0x22
 8012698:	d119      	bne.n	80126ce <properties::convert_json_file(char*, unsigned short, bool)+0x9e>
 801269a:	46a4      	mov	ip, r4
 801269c:	461d      	mov	r5, r3
 801269e:	2601      	movs	r6, #1
 80126a0:	f89c e000 	ldrb.w	lr, [ip]
 80126a4:	4664      	mov	r4, ip
 80126a6:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 80126aa:	462b      	mov	r3, r5
 80126ac:	4630      	mov	r0, r6
 80126ae:	f10c 0c01 	add.w	ip, ip, #1
 80126b2:	f105 0501 	add.w	r5, r5, #1
 80126b6:	f106 0601 	add.w	r6, r6, #1
 80126ba:	d0d9      	beq.n	8012670 <properties::convert_json_file(char*, unsigned short, bool)+0x40>
 80126bc:	3701      	adds	r7, #1
 80126be:	42b9      	cmp	r1, r7
 80126c0:	4664      	mov	r4, ip
 80126c2:	f805 ec01 	strb.w	lr, [r5, #-1]
 80126c6:	d8eb      	bhi.n	80126a0 <properties::convert_json_file(char*, unsigned short, bool)+0x70>
 80126c8:	4630      	mov	r0, r6
 80126ca:	462b      	mov	r3, r5
 80126cc:	e7d0      	b.n	8012670 <properties::convert_json_file(char*, unsigned short, bool)+0x40>
 80126ce:	3701      	adds	r7, #1
 80126d0:	e7cb      	b.n	801266a <properties::convert_json_file(char*, unsigned short, bool)+0x3a>
 80126d2:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 80126d6:	d110      	bne.n	80126fa <properties::convert_json_file(char*, unsigned short, bool)+0xca>
 80126d8:	eba0 0803 	sub.w	r8, r0, r3
 80126dc:	461a      	mov	r2, r3
 80126de:	eb08 0003 	add.w	r0, r8, r3
 80126e2:	f813 eb01 	ldrb.w	lr, [r3], #1
 80126e6:	1c65      	adds	r5, r4, #1
 80126e8:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 80126ec:	d04c      	beq.n	8012788 <properties::convert_json_file(char*, unsigned short, bool)+0x158>
 80126ee:	42a1      	cmp	r1, r4
 80126f0:	d911      	bls.n	8012716 <properties::convert_json_file(char*, unsigned short, bool)+0xe6>
 80126f2:	462c      	mov	r4, r5
 80126f4:	f806 eb01 	strb.w	lr, [r6], #1
 80126f8:	e7f0      	b.n	80126dc <properties::convert_json_file(char*, unsigned short, bool)+0xac>
 80126fa:	42a1      	cmp	r1, r4
 80126fc:	461d      	mov	r5, r3
 80126fe:	f893 e000 	ldrb.w	lr, [r3]
 8012702:	f104 0401 	add.w	r4, r4, #1
 8012706:	f103 0301 	add.w	r3, r3, #1
 801270a:	d8e2      	bhi.n	80126d2 <properties::convert_json_file(char*, unsigned short, bool)+0xa2>
 801270c:	462b      	mov	r3, r5
 801270e:	e7e3      	b.n	80126d8 <properties::convert_json_file(char*, unsigned short, bool)+0xa8>
 8012710:	f1be 0f3a 	cmp.w	lr, #58	; 0x3a
 8012714:	d009      	beq.n	801272a <properties::convert_json_file(char*, unsigned short, bool)+0xfa>
 8012716:	42a9      	cmp	r1, r5
 8012718:	4614      	mov	r4, r2
 801271a:	f892 e000 	ldrb.w	lr, [r2]
 801271e:	f105 0501 	add.w	r5, r5, #1
 8012722:	f102 0201 	add.w	r2, r2, #1
 8012726:	d8f3      	bhi.n	8012710 <properties::convert_json_file(char*, unsigned short, bool)+0xe0>
 8012728:	4622      	mov	r2, r4
 801272a:	7814      	ldrb	r4, [r2, #0]
 801272c:	4696      	mov	lr, r2
 801272e:	2c2f      	cmp	r4, #47	; 0x2f
 8012730:	462b      	mov	r3, r5
 8012732:	f102 0201 	add.w	r2, r2, #1
 8012736:	f105 0501 	add.w	r5, r5, #1
 801273a:	d81a      	bhi.n	8012772 <properties::convert_json_file(char*, unsigned short, bool)+0x142>
 801273c:	4299      	cmp	r1, r3
 801273e:	d8f4      	bhi.n	801272a <properties::convert_json_file(char*, unsigned short, bool)+0xfa>
 8012740:	2c22      	cmp	r4, #34	; 0x22
 8012742:	bf08      	it	eq
 8012744:	4696      	moveq	lr, r2
 8012746:	4673      	mov	r3, lr
 8012748:	f813 2b01 	ldrb.w	r2, [r3], #1
 801274c:	1c6c      	adds	r4, r5, #1
 801274e:	2a22      	cmp	r2, #34	; 0x22
 8012750:	d011      	beq.n	8012776 <properties::convert_json_file(char*, unsigned short, bool)+0x146>
 8012752:	2a2c      	cmp	r2, #44	; 0x2c
 8012754:	d00f      	beq.n	8012776 <properties::convert_json_file(char*, unsigned short, bool)+0x146>
 8012756:	2a7d      	cmp	r2, #125	; 0x7d
 8012758:	d00d      	beq.n	8012776 <properties::convert_json_file(char*, unsigned short, bool)+0x146>
 801275a:	42a9      	cmp	r1, r5
 801275c:	d90f      	bls.n	801277e <properties::convert_json_file(char*, unsigned short, bool)+0x14e>
 801275e:	f1a2 0520 	sub.w	r5, r2, #32
 8012762:	2d5a      	cmp	r5, #90	; 0x5a
 8012764:	d803      	bhi.n	801276e <properties::convert_json_file(char*, unsigned short, bool)+0x13e>
 8012766:	469e      	mov	lr, r3
 8012768:	f806 2b01 	strb.w	r2, [r6], #1
 801276c:	3001      	adds	r0, #1
 801276e:	4625      	mov	r5, r4
 8012770:	e7e9      	b.n	8012746 <properties::convert_json_file(char*, unsigned short, bool)+0x116>
 8012772:	461d      	mov	r5, r3
 8012774:	e7e7      	b.n	8012746 <properties::convert_json_file(char*, unsigned short, bool)+0x116>
 8012776:	462c      	mov	r4, r5
 8012778:	f806 cb01 	strb.w	ip, [r6], #1
 801277c:	3001      	adds	r0, #1
 801277e:	3401      	adds	r4, #1
 8012780:	e768      	b.n	8012654 <properties::convert_json_file(char*, unsigned short, bool)+0x24>
 8012782:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8012786:	e767      	b.n	8012658 <properties::convert_json_file(char*, unsigned short, bool)+0x28>
 8012788:	4625      	mov	r5, r4
 801278a:	f806 7b01 	strb.w	r7, [r6], #1
 801278e:	3001      	adds	r0, #1
 8012790:	e7c1      	b.n	8012716 <properties::convert_json_file(char*, unsigned short, bool)+0xe6>
	...

08012794 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>:
 8012794:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8012798:	6002      	str	r2, [r0, #0]
 801279a:	4614      	mov	r4, r2
 801279c:	2200      	movs	r2, #0
 801279e:	80c2      	strh	r2, [r0, #6]
 80127a0:	4a1c      	ldr	r2, [pc, #112]	; (8012814 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x80>)
 80127a2:	4606      	mov	r6, r0
 80127a4:	7812      	ldrb	r2, [r2, #0]
 80127a6:	8083      	strh	r3, [r0, #4]
 80127a8:	f002 0201 	and.w	r2, r2, #1
 80127ac:	7202      	strb	r2, [r0, #8]
 80127ae:	4608      	mov	r0, r1
 80127b0:	4605      	mov	r5, r0
 80127b2:	782f      	ldrb	r7, [r5, #0]
 80127b4:	3001      	adds	r0, #1
 80127b6:	2f00      	cmp	r7, #0
 80127b8:	d1fa      	bne.n	80127b0 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x1c>
 80127ba:	1a6d      	subs	r5, r5, r1
 80127bc:	b29b      	uxth	r3, r3
 80127be:	b1d2      	cbz	r2, 80127f6 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x62>
 80127c0:	1d2f      	adds	r7, r5, #4
 80127c2:	429f      	cmp	r7, r3
 80127c4:	d814      	bhi.n	80127f0 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 80127c6:	f04f 087b 	mov.w	r8, #123	; 0x7b
 80127ca:	f04f 0922 	mov.w	r9, #34	; 0x22
 80127ce:	462a      	mov	r2, r5
 80127d0:	f884 8000 	strb.w	r8, [r4]
 80127d4:	f884 9001 	strb.w	r9, [r4, #1]
 80127d8:	1ca0      	adds	r0, r4, #2
 80127da:	f000 feee 	bl	80135ba <memmove>
 80127de:	223a      	movs	r2, #58	; 0x3a
 80127e0:	1963      	adds	r3, r4, r5
 80127e2:	3505      	adds	r5, #5
 80127e4:	f883 9002 	strb.w	r9, [r3, #2]
 80127e8:	70da      	strb	r2, [r3, #3]
 80127ea:	80f5      	strh	r5, [r6, #6]
 80127ec:	f804 8007 	strb.w	r8, [r4, r7]
 80127f0:	4630      	mov	r0, r6
 80127f2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80127f6:	1caf      	adds	r7, r5, #2
 80127f8:	429f      	cmp	r7, r3
 80127fa:	d8f9      	bhi.n	80127f0 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 80127fc:	4620      	mov	r0, r4
 80127fe:	2323      	movs	r3, #35	; 0x23
 8012800:	462a      	mov	r2, r5
 8012802:	f800 3b01 	strb.w	r3, [r0], #1
 8012806:	f000 fed8 	bl	80135ba <memmove>
 801280a:	230a      	movs	r3, #10
 801280c:	442c      	add	r4, r5
 801280e:	7063      	strb	r3, [r4, #1]
 8012810:	80f7      	strh	r7, [r6, #6]
 8012812:	e7ed      	b.n	80127f0 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 8012814:	2001cd44 	andcs	ip, r1, r4, asr #26

08012818 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>:
 8012818:	b5f0      	push	{r4, r5, r6, r7, lr}
 801281a:	469c      	mov	ip, r3
 801281c:	8885      	ldrh	r5, [r0, #4]
 801281e:	88c3      	ldrh	r3, [r0, #6]
 8012820:	b085      	sub	sp, #20
 8012822:	42ab      	cmp	r3, r5
 8012824:	d302      	bcc.n	801282c <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x14>
 8012826:	2000      	movs	r0, #0
 8012828:	b005      	add	sp, #20
 801282a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801282c:	4604      	mov	r4, r0
 801282e:	6800      	ldr	r0, [r0, #0]
 8012830:	1aed      	subs	r5, r5, r3
 8012832:	4418      	add	r0, r3
 8012834:	b2d6      	uxtb	r6, r2
 8012836:	f3c2 2707 	ubfx	r7, r2, #8, #8
 801283a:	f3c2 4307 	ubfx	r3, r2, #16, #8
 801283e:	f894 e008 	ldrb.w	lr, [r4, #8]
 8012842:	0e12      	lsrs	r2, r2, #24
 8012844:	f1bc 0f00 	cmp.w	ip, #0
 8012848:	d109      	bne.n	801285e <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x46>
 801284a:	f1be 0f00 	cmp.w	lr, #0
 801284e:	d109      	bne.n	8012864 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x4c>
 8012850:	e9cd 3202 	strd	r3, r2, [sp, #8]
 8012854:	e9cd 6700 	strd	r6, r7, [sp]
 8012858:	460b      	mov	r3, r1
 801285a:	4a0e      	ldr	r2, [pc, #56]	; (8012894 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x7c>)
 801285c:	e008      	b.n	8012870 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x58>
 801285e:	f1be 0f00 	cmp.w	lr, #0
 8012862:	d00f      	beq.n	8012884 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x6c>
 8012864:	e9cd 3202 	strd	r3, r2, [sp, #8]
 8012868:	460b      	mov	r3, r1
 801286a:	e9cd 6700 	strd	r6, r7, [sp]
 801286e:	4a0a      	ldr	r2, [pc, #40]	; (8012898 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x80>)
 8012870:	4629      	mov	r1, r5
 8012872:	f7f6 fead 	bl	80095d0 <snprintf>
 8012876:	4285      	cmp	r5, r0
 8012878:	dbd5      	blt.n	8012826 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0xe>
 801287a:	88e3      	ldrh	r3, [r4, #6]
 801287c:	4403      	add	r3, r0
 801287e:	80e3      	strh	r3, [r4, #6]
 8012880:	2001      	movs	r0, #1
 8012882:	e7d1      	b.n	8012828 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x10>
 8012884:	e9cd 3202 	strd	r3, r2, [sp, #8]
 8012888:	e9cd 6700 	strd	r6, r7, [sp]
 801288c:	460b      	mov	r3, r1
 801288e:	4a03      	ldr	r2, [pc, #12]	; (801289c <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x84>)
 8012890:	e7ee      	b.n	8012870 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x58>
 8012892:	bf00      	nop
 8012894:	080178e6 	stmdaeq	r1, {r1, r2, r5, r6, r7, fp, ip, sp, lr}
 8012898:	080178d2 	stmdaeq	r1, {r1, r4, r6, r7, fp, ip, sp, lr}
 801289c:	080178e7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, fp, ip, sp, lr}

080128a0 <PropertiesBuilder::AddComment(char const*)>:
 80128a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80128a2:	7a06      	ldrb	r6, [r0, #8]
 80128a4:	b996      	cbnz	r6, 80128cc <PropertiesBuilder::AddComment(char const*)+0x2c>
 80128a6:	4604      	mov	r4, r0
 80128a8:	88c0      	ldrh	r0, [r0, #6]
 80128aa:	88a5      	ldrh	r5, [r4, #4]
 80128ac:	42a8      	cmp	r0, r5
 80128ae:	d20d      	bcs.n	80128cc <PropertiesBuilder::AddComment(char const*)+0x2c>
 80128b0:	6827      	ldr	r7, [r4, #0]
 80128b2:	1a2d      	subs	r5, r5, r0
 80128b4:	460b      	mov	r3, r1
 80128b6:	4a06      	ldr	r2, [pc, #24]	; (80128d0 <PropertiesBuilder::AddComment(char const*)+0x30>)
 80128b8:	4629      	mov	r1, r5
 80128ba:	4438      	add	r0, r7
 80128bc:	f7f6 fe88 	bl	80095d0 <snprintf>
 80128c0:	4285      	cmp	r5, r0
 80128c2:	bfa1      	itttt	ge
 80128c4:	2601      	movge	r6, #1
 80128c6:	88e3      	ldrhge	r3, [r4, #6]
 80128c8:	18c0      	addge	r0, r0, r3
 80128ca:	80e0      	strhge	r0, [r4, #6]
 80128cc:	4630      	mov	r0, r6
 80128ce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80128d0:	080178f7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, r7, fp, ip, sp, lr}

080128d4 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>:
 80128d4:	e9c0 1200 	strd	r1, r2, [r0]
 80128d8:	4770      	bx	lr

080128da <ReadConfigFile::~ReadConfigFile()>:
 80128da:	4770      	bx	lr

080128dc <ReadConfigFile::Read(char const*, unsigned int)>:
 80128dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80128e0:	4606      	mov	r6, r0
 80128e2:	460d      	mov	r5, r1
 80128e4:	4614      	mov	r4, r2
 80128e6:	f04f 0800 	mov.w	r8, #0
 80128ea:	b090      	sub	sp, #64	; 0x40
 80128ec:	b33c      	cbz	r4, 801293e <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 80128ee:	466b      	mov	r3, sp
 80128f0:	462a      	mov	r2, r5
 80128f2:	4619      	mov	r1, r3
 80128f4:	e007      	b.n	8012906 <ReadConfigFile::Read(char const*, unsigned int)+0x2a>
 80128f6:	f803 7b01 	strb.w	r7, [r3], #1
 80128fa:	1a58      	subs	r0, r3, r1
 80128fc:	283f      	cmp	r0, #63	; 0x3f
 80128fe:	4615      	mov	r5, r2
 8012900:	dc1d      	bgt.n	801293e <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 8012902:	3c01      	subs	r4, #1
 8012904:	d00f      	beq.n	8012926 <ReadConfigFile::Read(char const*, unsigned int)+0x4a>
 8012906:	7817      	ldrb	r7, [r2, #0]
 8012908:	4610      	mov	r0, r2
 801290a:	2f0d      	cmp	r7, #13
 801290c:	f102 0201 	add.w	r2, r2, #1
 8012910:	d001      	beq.n	8012916 <ReadConfigFile::Read(char const*, unsigned int)+0x3a>
 8012912:	2f0a      	cmp	r7, #10
 8012914:	d1ef      	bne.n	80128f6 <ReadConfigFile::Read(char const*, unsigned int)+0x1a>
 8012916:	4605      	mov	r5, r0
 8012918:	b12c      	cbz	r4, 8012926 <ReadConfigFile::Read(char const*, unsigned int)+0x4a>
 801291a:	f810 2b01 	ldrb.w	r2, [r0], #1
 801291e:	2a0d      	cmp	r2, #13
 8012920:	d00b      	beq.n	801293a <ReadConfigFile::Read(char const*, unsigned int)+0x5e>
 8012922:	2a0a      	cmp	r2, #10
 8012924:	d009      	beq.n	801293a <ReadConfigFile::Read(char const*, unsigned int)+0x5e>
 8012926:	f89d 2000 	ldrb.w	r2, [sp]
 801292a:	2a60      	cmp	r2, #96	; 0x60
 801292c:	d9de      	bls.n	80128ec <ReadConfigFile::Read(char const*, unsigned int)+0x10>
 801292e:	f883 8000 	strb.w	r8, [r3]
 8012932:	e9d6 3000 	ldrd	r3, r0, [r6]
 8012936:	4798      	blx	r3
 8012938:	e7d8      	b.n	80128ec <ReadConfigFile::Read(char const*, unsigned int)+0x10>
 801293a:	3c01      	subs	r4, #1
 801293c:	e7eb      	b.n	8012916 <ReadConfigFile::Read(char const*, unsigned int)+0x3a>
 801293e:	b010      	add	sp, #64	; 0x40
 8012940:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012944 <Sscan::Char(char const*, char const*, char*, unsigned int&)>:
 8012944:	b570      	push	{r4, r5, r6, lr}
 8012946:	4615      	mov	r5, r2
 8012948:	461c      	mov	r4, r3
 801294a:	f000 f91c 	bl	8012b86 <Sscan::checkName(char const*, char const*)>
 801294e:	b180      	cbz	r0, 8012972 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2e>
 8012950:	2100      	movs	r1, #0
 8012952:	5c43      	ldrb	r3, [r0, r1]
 8012954:	6826      	ldr	r6, [r4, #0]
 8012956:	b28a      	uxth	r2, r1
 8012958:	b143      	cbz	r3, 801296c <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x28>
 801295a:	42b2      	cmp	r2, r6
 801295c:	d303      	bcc.n	8012966 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x22>
 801295e:	2b0a      	cmp	r3, #10
 8012960:	d004      	beq.n	801296c <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x28>
 8012962:	2002      	movs	r0, #2
 8012964:	e004      	b.n	8012970 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2c>
 8012966:	546b      	strb	r3, [r5, r1]
 8012968:	3101      	adds	r1, #1
 801296a:	e7f2      	b.n	8012952 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0xe>
 801296c:	2000      	movs	r0, #0
 801296e:	6022      	str	r2, [r4, #0]
 8012970:	bd70      	pop	{r4, r5, r6, pc}
 8012972:	2001      	movs	r0, #1
 8012974:	e7fc      	b.n	8012970 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2c>

08012976 <Sscan::Float(char const*, char const*, float&)>:
 8012976:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801297a:	4616      	mov	r6, r2
 801297c:	f000 f903 	bl	8012b86 <Sscan::checkName(char const*, char const*)>
 8012980:	2800      	cmp	r0, #0
 8012982:	d059      	beq.n	8012a38 <Sscan::Float(char const*, char const*, float&)+0xc2>
 8012984:	4604      	mov	r4, r0
 8012986:	7803      	ldrb	r3, [r0, #0]
 8012988:	2b2d      	cmp	r3, #45	; 0x2d
 801298a:	bf08      	it	eq
 801298c:	3401      	addeq	r4, #1
 801298e:	7823      	ldrb	r3, [r4, #0]
 8012990:	bf0c      	ite	eq
 8012992:	f04f 0801 	moveq.w	r8, #1
 8012996:	f04f 0800 	movne.w	r8, #0
 801299a:	f013 0fdf 	tst.w	r3, #223	; 0xdf
 801299e:	d103      	bne.n	80129a8 <Sscan::Float(char const*, char const*, float&)+0x32>
 80129a0:	2702      	movs	r7, #2
 80129a2:	4638      	mov	r0, r7
 80129a4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80129a8:	2000      	movs	r0, #0
 80129aa:	220a      	movs	r2, #10
 80129ac:	7823      	ldrb	r3, [r4, #0]
 80129ae:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 80129b2:	2909      	cmp	r1, #9
 80129b4:	d8f4      	bhi.n	80129a0 <Sscan::Float(char const*, char const*, float&)+0x2a>
 80129b6:	fb02 3000 	mla	r0, r2, r0, r3
 80129ba:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 80129be:	3830      	subs	r0, #48	; 0x30
 80129c0:	2b2e      	cmp	r3, #46	; 0x2e
 80129c2:	d002      	beq.n	80129ca <Sscan::Float(char const*, char const*, float&)+0x54>
 80129c4:	f013 0fdf 	tst.w	r3, #223	; 0xdf
 80129c8:	d1f0      	bne.n	80129ac <Sscan::Float(char const*, char const*, float&)+0x36>
 80129ca:	f7f5 f9bd 	bl	8007d48 <__aeabi_ui2f>
 80129ce:	6030      	str	r0, [r6, #0]
 80129d0:	7823      	ldrb	r3, [r4, #0]
 80129d2:	4605      	mov	r5, r0
 80129d4:	2b2e      	cmp	r3, #46	; 0x2e
 80129d6:	d008      	beq.n	80129ea <Sscan::Float(char const*, char const*, float&)+0x74>
 80129d8:	f1b8 0f00 	cmp.w	r8, #0
 80129dc:	d101      	bne.n	80129e2 <Sscan::Float(char const*, char const*, float&)+0x6c>
 80129de:	2700      	movs	r7, #0
 80129e0:	e7df      	b.n	80129a2 <Sscan::Float(char const*, char const*, float&)+0x2c>
 80129e2:	f100 4500 	add.w	r5, r0, #2147483648	; 0x80000000
 80129e6:	6035      	str	r5, [r6, #0]
 80129e8:	e7f9      	b.n	80129de <Sscan::Float(char const*, char const*, float&)+0x68>
 80129ea:	f04f 0901 	mov.w	r9, #1
 80129ee:	2000      	movs	r0, #0
 80129f0:	220a      	movs	r2, #10
 80129f2:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 80129f6:	f013 07df 	ands.w	r7, r3, #223	; 0xdf
 80129fa:	d111      	bne.n	8012a20 <Sscan::Float(char const*, char const*, float&)+0xaa>
 80129fc:	f7f5 f9a4 	bl	8007d48 <__aeabi_ui2f>
 8012a00:	4604      	mov	r4, r0
 8012a02:	4648      	mov	r0, r9
 8012a04:	f7f5 f9a0 	bl	8007d48 <__aeabi_ui2f>
 8012a08:	4601      	mov	r1, r0
 8012a0a:	4620      	mov	r0, r4
 8012a0c:	f7f5 fd1a 	bl	8008444 <__aeabi_fdiv>
 8012a10:	4629      	mov	r1, r5
 8012a12:	f7f5 f8e9 	bl	8007be8 <__addsf3>
 8012a16:	f1b8 0f00 	cmp.w	r8, #0
 8012a1a:	d109      	bne.n	8012a30 <Sscan::Float(char const*, char const*, float&)+0xba>
 8012a1c:	6030      	str	r0, [r6, #0]
 8012a1e:	e7de      	b.n	80129de <Sscan::Float(char const*, char const*, float&)+0x68>
 8012a20:	3b30      	subs	r3, #48	; 0x30
 8012a22:	2b09      	cmp	r3, #9
 8012a24:	d8bc      	bhi.n	80129a0 <Sscan::Float(char const*, char const*, float&)+0x2a>
 8012a26:	fb02 3000 	mla	r0, r2, r0, r3
 8012a2a:	fb02 f909 	mul.w	r9, r2, r9
 8012a2e:	e7e0      	b.n	80129f2 <Sscan::Float(char const*, char const*, float&)+0x7c>
 8012a30:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
 8012a34:	6030      	str	r0, [r6, #0]
 8012a36:	e7b4      	b.n	80129a2 <Sscan::Float(char const*, char const*, float&)+0x2c>
 8012a38:	2701      	movs	r7, #1
 8012a3a:	e7b2      	b.n	80129a2 <Sscan::Float(char const*, char const*, float&)+0x2c>

08012a3c <Sscan::IpAddress(char const*, char const*, unsigned int&)>:
 8012a3c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8012a3e:	4615      	mov	r5, r2
 8012a40:	f000 f8a1 	bl	8012b86 <Sscan::checkName(char const*, char const*)>
 8012a44:	bb58      	cbnz	r0, 8012a9e <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x62>
 8012a46:	2001      	movs	r0, #1
 8012a48:	e027      	b.n	8012a9a <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5e>
 8012a4a:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 8012a4e:	2b09      	cmp	r3, #9
 8012a50:	d822      	bhi.n	8012a98 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 8012a52:	4603      	mov	r3, r0
 8012a54:	fb0c 2101 	mla	r1, ip, r1, r2
 8012a58:	3930      	subs	r1, #48	; 0x30
 8012a5a:	4618      	mov	r0, r3
 8012a5c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8012a60:	2a2e      	cmp	r2, #46	; 0x2e
 8012a62:	d115      	bne.n	8012a90 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x54>
 8012a64:	29ff      	cmp	r1, #255	; 0xff
 8012a66:	d817      	bhi.n	8012a98 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 8012a68:	3401      	adds	r4, #1
 8012a6a:	2c03      	cmp	r4, #3
 8012a6c:	f806 1b01 	strb.w	r1, [r6], #1
 8012a70:	d119      	bne.n	8012aa6 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x6a>
 8012a72:	2400      	movs	r4, #0
 8012a74:	260a      	movs	r6, #10
 8012a76:	1d1a      	adds	r2, r3, #4
 8012a78:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8012a7c:	f011 00df 	ands.w	r0, r1, #223	; 0xdf
 8012a80:	d115      	bne.n	8012aae <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x72>
 8012a82:	2cff      	cmp	r4, #255	; 0xff
 8012a84:	d808      	bhi.n	8012a98 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 8012a86:	f88d 4007 	strb.w	r4, [sp, #7]
 8012a8a:	9b01      	ldr	r3, [sp, #4]
 8012a8c:	602b      	str	r3, [r5, #0]
 8012a8e:	e004      	b.n	8012a9a <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5e>
 8012a90:	2a00      	cmp	r2, #0
 8012a92:	d0e7      	beq.n	8012a64 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 8012a94:	42b8      	cmp	r0, r7
 8012a96:	d1d8      	bne.n	8012a4a <Sscan::IpAddress(char const*, char const*, unsigned int&)+0xe>
 8012a98:	2002      	movs	r0, #2
 8012a9a:	b003      	add	sp, #12
 8012a9c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012a9e:	2400      	movs	r4, #0
 8012aa0:	f04f 0c0a 	mov.w	ip, #10
 8012aa4:	ae01      	add	r6, sp, #4
 8012aa6:	4603      	mov	r3, r0
 8012aa8:	2100      	movs	r1, #0
 8012aaa:	1d07      	adds	r7, r0, #4
 8012aac:	e7d5      	b.n	8012a5a <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x1e>
 8012aae:	4293      	cmp	r3, r2
 8012ab0:	d0f2      	beq.n	8012a98 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 8012ab2:	3930      	subs	r1, #48	; 0x30
 8012ab4:	2909      	cmp	r1, #9
 8012ab6:	d8ef      	bhi.n	8012a98 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x5c>
 8012ab8:	fb06 1404 	mla	r4, r6, r4, r1
 8012abc:	e7dc      	b.n	8012a78 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x3c>

08012abe <Sscan::Uint16(char const*, char const*, unsigned short&)>:
 8012abe:	b538      	push	{r3, r4, r5, lr}
 8012ac0:	4615      	mov	r5, r2
 8012ac2:	f000 f860 	bl	8012b86 <Sscan::checkName(char const*, char const*)>
 8012ac6:	b1a0      	cbz	r0, 8012af2 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x34>
 8012ac8:	4604      	mov	r4, r0
 8012aca:	2100      	movs	r1, #0
 8012acc:	220a      	movs	r2, #10
 8012ace:	7823      	ldrb	r3, [r4, #0]
 8012ad0:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
 8012ad4:	2809      	cmp	r0, #9
 8012ad6:	d80e      	bhi.n	8012af6 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x38>
 8012ad8:	fb02 3101 	mla	r1, r2, r1, r3
 8012adc:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8012ae0:	3930      	subs	r1, #48	; 0x30
 8012ae2:	f013 00df 	ands.w	r0, r3, #223	; 0xdf
 8012ae6:	d1f2      	bne.n	8012ace <Sscan::Uint16(char const*, char const*, unsigned short&)+0x10>
 8012ae8:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
 8012aec:	d203      	bcs.n	8012af6 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x38>
 8012aee:	8029      	strh	r1, [r5, #0]
 8012af0:	bd38      	pop	{r3, r4, r5, pc}
 8012af2:	2001      	movs	r0, #1
 8012af4:	e7fc      	b.n	8012af0 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x32>
 8012af6:	2002      	movs	r0, #2
 8012af8:	e7fa      	b.n	8012af0 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x32>

08012afa <Sscan::Uint32(char const*, char const*, unsigned int&)>:
 8012afa:	b570      	push	{r4, r5, r6, lr}
 8012afc:	4615      	mov	r5, r2
 8012afe:	f000 f842 	bl	8012b86 <Sscan::checkName(char const*, char const*)>
 8012b02:	b1f8      	cbz	r0, 8012b44 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x4a>
 8012b04:	2300      	movs	r3, #0
 8012b06:	4604      	mov	r4, r0
 8012b08:	461a      	mov	r2, r3
 8012b0a:	260a      	movs	r6, #10
 8012b0c:	7820      	ldrb	r0, [r4, #0]
 8012b0e:	f1a0 0130 	sub.w	r1, r0, #48	; 0x30
 8012b12:	2909      	cmp	r1, #9
 8012b14:	d818      	bhi.n	8012b48 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x4e>
 8012b16:	fba3 3106 	umull	r3, r1, r3, r6
 8012b1a:	fb06 1102 	mla	r1, r6, r2, r1
 8012b1e:	3b30      	subs	r3, #48	; 0x30
 8012b20:	f141 31ff 	adc.w	r1, r1, #4294967295	; 0xffffffff
 8012b24:	18c3      	adds	r3, r0, r3
 8012b26:	f141 0200 	adc.w	r2, r1, #0
 8012b2a:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8012b2e:	f011 00df 	ands.w	r0, r1, #223	; 0xdf
 8012b32:	d1eb      	bne.n	8012b0c <Sscan::Uint32(char const*, char const*, unsigned int&)+0x12>
 8012b34:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8012b38:	4299      	cmp	r1, r3
 8012b3a:	eb70 0202 	sbcs.w	r2, r0, r2
 8012b3e:	d303      	bcc.n	8012b48 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x4e>
 8012b40:	602b      	str	r3, [r5, #0]
 8012b42:	bd70      	pop	{r4, r5, r6, pc}
 8012b44:	2001      	movs	r0, #1
 8012b46:	e7fc      	b.n	8012b42 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x48>
 8012b48:	2002      	movs	r0, #2
 8012b4a:	e7fa      	b.n	8012b42 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x48>

08012b4c <Sscan::Uint8(char const*, char const*, unsigned char&)>:
 8012b4c:	b538      	push	{r3, r4, r5, lr}
 8012b4e:	4615      	mov	r5, r2
 8012b50:	f000 f819 	bl	8012b86 <Sscan::checkName(char const*, char const*)>
 8012b54:	b198      	cbz	r0, 8012b7e <Sscan::Uint8(char const*, char const*, unsigned char&)+0x32>
 8012b56:	4604      	mov	r4, r0
 8012b58:	2100      	movs	r1, #0
 8012b5a:	220a      	movs	r2, #10
 8012b5c:	7823      	ldrb	r3, [r4, #0]
 8012b5e:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
 8012b62:	2809      	cmp	r0, #9
 8012b64:	d80d      	bhi.n	8012b82 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x36>
 8012b66:	fb02 3101 	mla	r1, r2, r1, r3
 8012b6a:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8012b6e:	3930      	subs	r1, #48	; 0x30
 8012b70:	f013 00df 	ands.w	r0, r3, #223	; 0xdf
 8012b74:	d1f2      	bne.n	8012b5c <Sscan::Uint8(char const*, char const*, unsigned char&)+0x10>
 8012b76:	29ff      	cmp	r1, #255	; 0xff
 8012b78:	d803      	bhi.n	8012b82 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x36>
 8012b7a:	7029      	strb	r1, [r5, #0]
 8012b7c:	bd38      	pop	{r3, r4, r5, pc}
 8012b7e:	2001      	movs	r0, #1
 8012b80:	e7fc      	b.n	8012b7c <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>
 8012b82:	2002      	movs	r0, #2
 8012b84:	e7fa      	b.n	8012b7c <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>

08012b86 <Sscan::checkName(char const*, char const*)>:
 8012b86:	4603      	mov	r3, r0
 8012b88:	b510      	push	{r4, lr}
 8012b8a:	3901      	subs	r1, #1
 8012b8c:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 8012b90:	461c      	mov	r4, r3
 8012b92:	f813 2b01 	ldrb.w	r2, [r3], #1
 8012b96:	b120      	cbz	r0, 8012ba2 <Sscan::checkName(char const*, char const*)+0x1c>
 8012b98:	b10a      	cbz	r2, 8012b9e <Sscan::checkName(char const*, char const*)+0x18>
 8012b9a:	4290      	cmp	r0, r2
 8012b9c:	d0f6      	beq.n	8012b8c <Sscan::checkName(char const*, char const*)+0x6>
 8012b9e:	2000      	movs	r0, #0
 8012ba0:	e006      	b.n	8012bb0 <Sscan::checkName(char const*, char const*)+0x2a>
 8012ba2:	2a3d      	cmp	r2, #61	; 0x3d
 8012ba4:	d104      	bne.n	8012bb0 <Sscan::checkName(char const*, char const*)+0x2a>
 8012ba6:	7860      	ldrb	r0, [r4, #1]
 8012ba8:	f010 00df 	ands.w	r0, r0, #223	; 0xdf
 8012bac:	d000      	beq.n	8012bb0 <Sscan::checkName(char const*, char const*)+0x2a>
 8012bae:	1c60      	adds	r0, r4, #1
 8012bb0:	bd10      	pop	{r4, pc}

08012bb2 <LightSet::GetSlotInfo(unsigned short, lightset::SlotInfo&)>:
 8012bb2:	2300      	movs	r3, #0
 8012bb4:	2001      	movs	r0, #1
 8012bb6:	7093      	strb	r3, [r2, #2]
 8012bb8:	8010      	strh	r0, [r2, #0]
 8012bba:	4770      	bx	lr

08012bbc <Display::PrintInfo() [clone .isra.0]>:
 8012bbc:	b910      	cbnz	r0, 8012bc4 <Display::PrintInfo() [clone .isra.0]+0x8>
 8012bbe:	4803      	ldr	r0, [pc, #12]	; (8012bcc <Display::PrintInfo() [clone .isra.0]+0x10>)
 8012bc0:	f000 bd33 	b.w	801362a <puts>
 8012bc4:	6803      	ldr	r3, [r0, #0]
 8012bc6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8012bc8:	4718      	bx	r3
 8012bca:	bf00      	nop
 8012bcc:	08017a87 	stmdaeq	r1, {r0, r1, r2, r7, r9, fp, ip, sp, lr}

08012bd0 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>:
 8012bd0:	b513      	push	{r0, r1, r4, lr}
 8012bd2:	4604      	mov	r4, r0
 8012bd4:	0a13      	lsrs	r3, r2, #8
 8012bd6:	7800      	ldrb	r0, [r0, #0]
 8012bd8:	f88d 1004 	strb.w	r1, [sp, #4]
 8012bdc:	f88d 3005 	strb.w	r3, [sp, #5]
 8012be0:	f88d 2006 	strb.w	r2, [sp, #6]
 8012be4:	f001 fdc0 	bl	8014768 <gd32_i2c_set_address(unsigned char)>
 8012be8:	6860      	ldr	r0, [r4, #4]
 8012bea:	f001 fdb5 	bl	8014758 <gd32_i2c_set_baudrate(unsigned int)>
 8012bee:	2103      	movs	r1, #3
 8012bf0:	a801      	add	r0, sp, #4
 8012bf2:	f001 fdbf 	bl	8014774 <gd32_i2c_write(char const*, unsigned int)>
 8012bf6:	b002      	add	sp, #8
 8012bf8:	bd10      	pop	{r4, pc}

08012bfa <HAL_I2C::IsConnected_(unsigned char, unsigned int)>:
 8012bfa:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012bfc:	460d      	mov	r5, r1
 8012bfe:	4604      	mov	r4, r0
 8012c00:	f001 fdb2 	bl	8014768 <gd32_i2c_set_address(unsigned char)>
 8012c04:	4628      	mov	r0, r5
 8012c06:	f001 fda7 	bl	8014758 <gd32_i2c_set_baudrate(unsigned int)>
 8012c0a:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8012c0e:	2b07      	cmp	r3, #7
 8012c10:	d902      	bls.n	8012c18 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x1e>
 8012c12:	3c50      	subs	r4, #80	; 0x50
 8012c14:	2c0f      	cmp	r4, #15
 8012c16:	d809      	bhi.n	8012c2c <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x32>
 8012c18:	2101      	movs	r1, #1
 8012c1a:	f10d 0007 	add.w	r0, sp, #7
 8012c1e:	f001 fe0f 	bl	8014840 <gd32_i2c_read(char*, unsigned int)>
 8012c22:	fab0 f080 	clz	r0, r0
 8012c26:	0940      	lsrs	r0, r0, #5
 8012c28:	b003      	add	sp, #12
 8012c2a:	bd30      	pop	{r4, r5, pc}
 8012c2c:	2100      	movs	r1, #0
 8012c2e:	4608      	mov	r0, r1
 8012c30:	f001 fda0 	bl	8014774 <gd32_i2c_write(char const*, unsigned int)>
 8012c34:	e7f5      	b.n	8012c22 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x28>

08012c36 <Display::Detect7Segment()>:
 8012c36:	b538      	push	{r3, r4, r5, lr}
 8012c38:	68c1      	ldr	r1, [r0, #12]
 8012c3a:	4604      	mov	r4, r0
 8012c3c:	7a00      	ldrb	r0, [r0, #8]
 8012c3e:	f7ff ffdc 	bl	8012bfa <HAL_I2C::IsConnected_(unsigned char, unsigned int)>
 8012c42:	7460      	strb	r0, [r4, #17]
 8012c44:	b170      	cbz	r0, 8012c64 <Display::Detect7Segment()+0x2e>
 8012c46:	2200      	movs	r2, #0
 8012c48:	f104 0508 	add.w	r5, r4, #8
 8012c4c:	4611      	mov	r1, r2
 8012c4e:	4628      	mov	r0, r5
 8012c50:	f7ff ffbe 	bl	8012bd0 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 8012c54:	7c63      	ldrb	r3, [r4, #17]
 8012c56:	b12b      	cbz	r3, 8012c64 <Display::Detect7Segment()+0x2e>
 8012c58:	f24c 02ff 	movw	r2, #49407	; 0xc0ff
 8012c5c:	2112      	movs	r1, #18
 8012c5e:	4628      	mov	r0, r5
 8012c60:	f7ff ffb6 	bl	8012bd0 <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 8012c64:	bd38      	pop	{r3, r4, r5, pc}

08012c66 <Display::Detect(display::Type)>:
 8012c66:	2902      	cmp	r1, #2
 8012c68:	b538      	push	{r3, r4, r5, lr}
 8012c6a:	4604      	mov	r4, r0
 8012c6c:	d014      	beq.n	8012c98 <Display::Detect(display::Type)+0x32>
 8012c6e:	2904      	cmp	r1, #4
 8012c70:	d01b      	beq.n	8012caa <Display::Detect(display::Type)+0x44>
 8012c72:	69a0      	ldr	r0, [r4, #24]
 8012c74:	b168      	cbz	r0, 8012c92 <Display::Detect(display::Type)+0x2c>
 8012c76:	6803      	ldr	r3, [r0, #0]
 8012c78:	689b      	ldr	r3, [r3, #8]
 8012c7a:	4798      	blx	r3
 8012c7c:	4603      	mov	r3, r0
 8012c7e:	69a0      	ldr	r0, [r4, #24]
 8012c80:	b9ab      	cbnz	r3, 8012cae <Display::Detect(display::Type)+0x48>
 8012c82:	b110      	cbz	r0, 8012c8a <Display::Detect(display::Type)+0x24>
 8012c84:	6803      	ldr	r3, [r0, #0]
 8012c86:	685b      	ldr	r3, [r3, #4]
 8012c88:	4798      	blx	r3
 8012c8a:	2300      	movs	r3, #0
 8012c8c:	61a3      	str	r3, [r4, #24]
 8012c8e:	2304      	movs	r3, #4
 8012c90:	6023      	str	r3, [r4, #0]
 8012c92:	2300      	movs	r3, #0
 8012c94:	6163      	str	r3, [r4, #20]
 8012c96:	e010      	b.n	8012cba <Display::Detect(display::Type)+0x54>
 8012c98:	2018      	movs	r0, #24
 8012c9a:	f000 fbcf 	bl	801343c <operator new(unsigned int)>
 8012c9e:	4605      	mov	r5, r0
 8012ca0:	2100      	movs	r1, #0
 8012ca2:	f000 f89d 	bl	8012de0 <Ssd1306::Ssd1306(TOledPanel)>
 8012ca6:	61a5      	str	r5, [r4, #24]
 8012ca8:	e7e3      	b.n	8012c72 <Display::Detect(display::Type)+0xc>
 8012caa:	6001      	str	r1, [r0, #0]
 8012cac:	e7e1      	b.n	8012c72 <Display::Detect(display::Type)+0xc>
 8012cae:	6803      	ldr	r3, [r0, #0]
 8012cb0:	68db      	ldr	r3, [r3, #12]
 8012cb2:	4798      	blx	r3
 8012cb4:	69a3      	ldr	r3, [r4, #24]
 8012cb6:	2b00      	cmp	r3, #0
 8012cb8:	d0eb      	beq.n	8012c92 <Display::Detect(display::Type)+0x2c>
 8012cba:	bd38      	pop	{r3, r4, r5, pc}

08012cbc <Display::Display()>:
 8012cbc:	2304      	movs	r3, #4
 8012cbe:	b510      	push	{r4, lr}
 8012cc0:	6003      	str	r3, [r0, #0]
 8012cc2:	4b0f      	ldr	r3, [pc, #60]	; (8012d00 <Display::Display()+0x44>)
 8012cc4:	4604      	mov	r4, r0
 8012cc6:	681b      	ldr	r3, [r3, #0]
 8012cc8:	4a0e      	ldr	r2, [pc, #56]	; (8012d04 <Display::Display()+0x48>)
 8012cca:	6043      	str	r3, [r0, #4]
 8012ccc:	2321      	movs	r3, #33	; 0x21
 8012cce:	7203      	strb	r3, [r0, #8]
 8012cd0:	4b0d      	ldr	r3, [pc, #52]	; (8012d08 <Display::Display()+0x4c>)
 8012cd2:	2102      	movs	r1, #2
 8012cd4:	60c3      	str	r3, [r0, #12]
 8012cd6:	2300      	movs	r3, #0
 8012cd8:	e9c0 2305 	strd	r2, r3, [r0, #20]
 8012cdc:	8203      	strh	r3, [r0, #16]
 8012cde:	4b0b      	ldr	r3, [pc, #44]	; (8012d0c <Display::Display()+0x50>)
 8012ce0:	6018      	str	r0, [r3, #0]
 8012ce2:	f7ff ffc0 	bl	8012c66 <Display::Detect(display::Type)>
 8012ce6:	4620      	mov	r0, r4
 8012ce8:	f7ff ffa5 	bl	8012c36 <Display::Detect7Segment()>
 8012cec:	69a3      	ldr	r3, [r4, #24]
 8012cee:	b10b      	cbz	r3, 8012cf4 <Display::Display()+0x38>
 8012cf0:	f7f5 fdae 	bl	8008850 <display::timeout::gpio_init()>
 8012cf4:	69a0      	ldr	r0, [r4, #24]
 8012cf6:	f7ff ff61 	bl	8012bbc <Display::PrintInfo() [clone .isra.0]>
 8012cfa:	4620      	mov	r0, r4
 8012cfc:	bd10      	pop	{r4, pc}
 8012cfe:	bf00      	nop
 8012d00:	2001ce4c 	andcs	ip, r1, ip, asr #28
 8012d04:	000493e0 	andeq	r9, r4, r0, ror #7
 8012d08:	00061a80 	andeq	r1, r6, r0, lsl #21
 8012d0c:	2001cd48 	andcs	ip, r1, r8, asr #26

08012d10 <Ssd1306::~Ssd1306()>:
 8012d10:	4770      	bx	lr

08012d12 <Ssd1306::SetCursor(unsigned int)>:
 8012d12:	4770      	bx	lr

08012d14 <Ssd1306::PrintInfo()>:
 8012d14:	b410      	push	{r4}
 8012d16:	4906      	ldr	r1, [pc, #24]	; (8012d30 <Ssd1306::PrintInfo()+0x1c>)
 8012d18:	7c44      	ldrb	r4, [r0, #17]
 8012d1a:	7903      	ldrb	r3, [r0, #4]
 8012d1c:	7942      	ldrb	r2, [r0, #5]
 8012d1e:	4805      	ldr	r0, [pc, #20]	; (8012d34 <Ssd1306::PrintInfo()+0x20>)
 8012d20:	2c00      	cmp	r4, #0
 8012d22:	bf08      	it	eq
 8012d24:	4601      	moveq	r1, r0
 8012d26:	4804      	ldr	r0, [pc, #16]	; (8012d38 <Ssd1306::PrintInfo()+0x24>)
 8012d28:	bc10      	pop	{r4}
 8012d2a:	f7f6 bc29 	b.w	8009580 <printf>
 8012d2e:	bf00      	nop
 8012d30:	08017a98 	stmdaeq	r1, {r3, r4, r7, r9, fp, ip, sp, lr}
 8012d34:	08017a9f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r7, r9, fp, ip, sp, lr}
 8012d38:	08017aa7 	stmdaeq	r1, {r0, r1, r2, r5, r7, r9, fp, ip, sp, lr}

08012d3c <Ssd1306::~Ssd1306()>:
 8012d3c:	b510      	push	{r4, lr}
 8012d3e:	4604      	mov	r4, r0
 8012d40:	f000 fb78 	bl	8013434 <operator delete(void*)>
 8012d44:	4620      	mov	r0, r4
 8012d46:	bd10      	pop	{r4, pc}

08012d48 <HAL_I2C::Setup()>:
 8012d48:	b510      	push	{r4, lr}
 8012d4a:	4604      	mov	r4, r0
 8012d4c:	7800      	ldrb	r0, [r0, #0]
 8012d4e:	f001 fd0b 	bl	8014768 <gd32_i2c_set_address(unsigned char)>
 8012d52:	6860      	ldr	r0, [r4, #4]
 8012d54:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012d58:	f001 bcfe 	b.w	8014758 <gd32_i2c_set_baudrate(unsigned int)>

08012d5c <Ssd1306::PutChar(int)>:
 8012d5c:	b510      	push	{r4, lr}
 8012d5e:	f1a1 0420 	sub.w	r4, r1, #32
 8012d62:	2c5f      	cmp	r4, #95	; 0x5f
 8012d64:	bf88      	it	hi
 8012d66:	2400      	movhi	r4, #0
 8012d68:	3008      	adds	r0, #8
 8012d6a:	f7ff ffed 	bl	8012d48 <HAL_I2C::Setup()>
 8012d6e:	4804      	ldr	r0, [pc, #16]	; (8012d80 <Ssd1306::PutChar(int)+0x24>)
 8012d70:	ebc4 04c4 	rsb	r4, r4, r4, lsl #3
 8012d74:	4420      	add	r0, r4
 8012d76:	2107      	movs	r1, #7
 8012d78:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012d7c:	f001 bcfa 	b.w	8014774 <gd32_i2c_write(char const*, unsigned int)>
 8012d80:	08017abc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r9, fp, ip, sp, lr}

08012d84 <Ssd1306::PutString(char const*)>:
 8012d84:	b538      	push	{r3, r4, r5, lr}
 8012d86:	4605      	mov	r5, r0
 8012d88:	1e4c      	subs	r4, r1, #1
 8012d8a:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8012d8e:	b901      	cbnz	r1, 8012d92 <Ssd1306::PutString(char const*)+0xe>
 8012d90:	bd38      	pop	{r3, r4, r5, pc}
 8012d92:	4628      	mov	r0, r5
 8012d94:	f7ff ffe2 	bl	8012d5c <Ssd1306::PutChar(int)>
 8012d98:	e7f7      	b.n	8012d8a <Ssd1306::PutString(char const*)+0x6>

08012d9a <Ssd1306::Text(char const*, unsigned int)>:
 8012d9a:	b570      	push	{r4, r5, r6, lr}
 8012d9c:	7903      	ldrb	r3, [r0, #4]
 8012d9e:	4605      	mov	r5, r0
 8012da0:	460c      	mov	r4, r1
 8012da2:	4293      	cmp	r3, r2
 8012da4:	bf94      	ite	ls
 8012da6:	18ce      	addls	r6, r1, r3
 8012da8:	188e      	addhi	r6, r1, r2
 8012daa:	42b4      	cmp	r4, r6
 8012dac:	d100      	bne.n	8012db0 <Ssd1306::Text(char const*, unsigned int)+0x16>
 8012dae:	bd70      	pop	{r4, r5, r6, pc}
 8012db0:	4628      	mov	r0, r5
 8012db2:	f814 1b01 	ldrb.w	r1, [r4], #1
 8012db6:	f7ff ffd1 	bl	8012d5c <Ssd1306::PutChar(int)>
 8012dba:	e7f6      	b.n	8012daa <Ssd1306::Text(char const*, unsigned int)+0x10>

08012dbc <Ssd1306::InitMembers()>:
 8012dbc:	7c03      	ldrb	r3, [r0, #16]
 8012dbe:	b14b      	cbz	r3, 8012dd4 <Ssd1306::InitMembers()+0x18>
 8012dc0:	3b01      	subs	r3, #1
 8012dc2:	2b01      	cmp	r3, #1
 8012dc4:	d909      	bls.n	8012dda <Ssd1306::InitMembers()+0x1e>
 8012dc6:	2308      	movs	r3, #8
 8012dc8:	2204      	movs	r2, #4
 8012dca:	2115      	movs	r1, #21
 8012dcc:	7143      	strb	r3, [r0, #5]
 8012dce:	7101      	strb	r1, [r0, #4]
 8012dd0:	6142      	str	r2, [r0, #20]
 8012dd2:	4770      	bx	lr
 8012dd4:	2308      	movs	r3, #8
 8012dd6:	461a      	mov	r2, r3
 8012dd8:	e7f7      	b.n	8012dca <Ssd1306::InitMembers()+0xe>
 8012dda:	2304      	movs	r3, #4
 8012ddc:	e7fb      	b.n	8012dd6 <Ssd1306::InitMembers()+0x1a>
	...

08012de0 <Ssd1306::Ssd1306(TOledPanel)>:
 8012de0:	4a08      	ldr	r2, [pc, #32]	; (8012e04 <Ssd1306::Ssd1306(TOledPanel)+0x24>)
 8012de2:	b508      	push	{r3, lr}
 8012de4:	6002      	str	r2, [r0, #0]
 8012de6:	227f      	movs	r2, #127	; 0x7f
 8012de8:	80c2      	strh	r2, [r0, #6]
 8012dea:	223c      	movs	r2, #60	; 0x3c
 8012dec:	7202      	strb	r2, [r0, #8]
 8012dee:	4a06      	ldr	r2, [pc, #24]	; (8012e08 <Ssd1306::Ssd1306(TOledPanel)+0x28>)
 8012df0:	7401      	strb	r1, [r0, #16]
 8012df2:	60c2      	str	r2, [r0, #12]
 8012df4:	2200      	movs	r2, #0
 8012df6:	7442      	strb	r2, [r0, #17]
 8012df8:	4a04      	ldr	r2, [pc, #16]	; (8012e0c <Ssd1306::Ssd1306(TOledPanel)+0x2c>)
 8012dfa:	6010      	str	r0, [r2, #0]
 8012dfc:	f7ff ffde 	bl	8012dbc <Ssd1306::InitMembers()>
 8012e00:	bd08      	pop	{r3, pc}
 8012e02:	bf00      	nop
 8012e04:	08017d94 	stmdaeq	r1, {r2, r4, r7, r8, sl, fp, ip, sp, lr}
 8012e08:	00061a80 	andeq	r1, r6, r0, lsl #21
 8012e0c:	2001cdd4 	ldrdcs	ip, [r1], -r4

08012e10 <Ssd1306::SendCommand(unsigned char)>:
 8012e10:	2300      	movs	r3, #0
 8012e12:	b507      	push	{r0, r1, r2, lr}
 8012e14:	3008      	adds	r0, #8
 8012e16:	f88d 3004 	strb.w	r3, [sp, #4]
 8012e1a:	f88d 1005 	strb.w	r1, [sp, #5]
 8012e1e:	f7ff ff93 	bl	8012d48 <HAL_I2C::Setup()>
 8012e22:	2102      	movs	r1, #2
 8012e24:	a801      	add	r0, sp, #4
 8012e26:	f001 fca5 	bl	8014774 <gd32_i2c_write(char const*, unsigned int)>
 8012e2a:	b003      	add	sp, #12
 8012e2c:	f85d fb04 	ldr.w	pc, [sp], #4

08012e30 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>:
 8012e30:	2914      	cmp	r1, #20
 8012e32:	b570      	push	{r4, r5, r6, lr}
 8012e34:	4605      	mov	r5, r0
 8012e36:	4616      	mov	r6, r2
 8012e38:	d81c      	bhi.n	8012e74 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 8012e3a:	7943      	ldrb	r3, [r0, #5]
 8012e3c:	4293      	cmp	r3, r2
 8012e3e:	d919      	bls.n	8012e74 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 8012e40:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8012e44:	7c43      	ldrb	r3, [r0, #17]
 8012e46:	004c      	lsls	r4, r1, #1
 8012e48:	b2e4      	uxtb	r4, r4
 8012e4a:	b10b      	cbz	r3, 8012e50 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x20>
 8012e4c:	3404      	adds	r4, #4
 8012e4e:	b2e4      	uxtb	r4, r4
 8012e50:	4628      	mov	r0, r5
 8012e52:	f004 010e 	and.w	r1, r4, #14
 8012e56:	f7ff ffdb 	bl	8012e10 <Ssd1306::SendCommand(unsigned char)>
 8012e5a:	0921      	lsrs	r1, r4, #4
 8012e5c:	4628      	mov	r0, r5
 8012e5e:	f041 0110 	orr.w	r1, r1, #16
 8012e62:	f7ff ffd5 	bl	8012e10 <Ssd1306::SendCommand(unsigned char)>
 8012e66:	4628      	mov	r0, r5
 8012e68:	f046 01b0 	orr.w	r1, r6, #176	; 0xb0
 8012e6c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012e70:	f7ff bfce 	b.w	8012e10 <Ssd1306::SendCommand(unsigned char)>
 8012e74:	bd70      	pop	{r4, r5, r6, pc}

08012e76 <Ssd1306::TextLine(unsigned char, char const*, unsigned int)>:
 8012e76:	b570      	push	{r4, r5, r6, lr}
 8012e78:	4604      	mov	r4, r0
 8012e7a:	4615      	mov	r5, r2
 8012e7c:	461e      	mov	r6, r3
 8012e7e:	b171      	cbz	r1, 8012e9e <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x28>
 8012e80:	7943      	ldrb	r3, [r0, #5]
 8012e82:	428b      	cmp	r3, r1
 8012e84:	d30b      	bcc.n	8012e9e <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x28>
 8012e86:	3901      	subs	r1, #1
 8012e88:	b2ca      	uxtb	r2, r1
 8012e8a:	2100      	movs	r1, #0
 8012e8c:	f7ff ffd0 	bl	8012e30 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8012e90:	4632      	mov	r2, r6
 8012e92:	4629      	mov	r1, r5
 8012e94:	4620      	mov	r0, r4
 8012e96:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012e9a:	f7ff bf7e 	b.w	8012d9a <Ssd1306::Text(char const*, unsigned int)>
 8012e9e:	bd70      	pop	{r4, r5, r6, pc}

08012ea0 <Ssd1306::ClearLine(unsigned char)>:
 8012ea0:	b538      	push	{r3, r4, r5, lr}
 8012ea2:	4605      	mov	r5, r0
 8012ea4:	b1b9      	cbz	r1, 8012ed6 <Ssd1306::ClearLine(unsigned char)+0x36>
 8012ea6:	7943      	ldrb	r3, [r0, #5]
 8012ea8:	428b      	cmp	r3, r1
 8012eaa:	d314      	bcc.n	8012ed6 <Ssd1306::ClearLine(unsigned char)+0x36>
 8012eac:	3901      	subs	r1, #1
 8012eae:	b2cc      	uxtb	r4, r1
 8012eb0:	4622      	mov	r2, r4
 8012eb2:	2100      	movs	r1, #0
 8012eb4:	f7ff ffbc 	bl	8012e30 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8012eb8:	f105 0008 	add.w	r0, r5, #8
 8012ebc:	f7ff ff44 	bl	8012d48 <HAL_I2C::Setup()>
 8012ec0:	2181      	movs	r1, #129	; 0x81
 8012ec2:	4805      	ldr	r0, [pc, #20]	; (8012ed8 <Ssd1306::ClearLine(unsigned char)+0x38>)
 8012ec4:	f001 fc56 	bl	8014774 <gd32_i2c_write(char const*, unsigned int)>
 8012ec8:	4622      	mov	r2, r4
 8012eca:	4628      	mov	r0, r5
 8012ecc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8012ed0:	2100      	movs	r1, #0
 8012ed2:	f7ff bfad 	b.w	8012e30 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8012ed6:	bd38      	pop	{r3, r4, r5, pc}
 8012ed8:	2001cd4c 	andcs	ip, r1, ip, asr #26

08012edc <Ssd1306::SetSleep(bool)>:
 8012edc:	b111      	cbz	r1, 8012ee4 <Ssd1306::SetSleep(bool)+0x8>
 8012ede:	21ae      	movs	r1, #174	; 0xae
 8012ee0:	f7ff bf96 	b.w	8012e10 <Ssd1306::SendCommand(unsigned char)>
 8012ee4:	21af      	movs	r1, #175	; 0xaf
 8012ee6:	e7fb      	b.n	8012ee0 <Ssd1306::SetSleep(bool)+0x4>

08012ee8 <Ssd1306::SetContrast(unsigned char)>:
 8012ee8:	b538      	push	{r3, r4, r5, lr}
 8012eea:	4604      	mov	r4, r0
 8012eec:	460d      	mov	r5, r1
 8012eee:	7181      	strb	r1, [r0, #6]
 8012ef0:	2181      	movs	r1, #129	; 0x81
 8012ef2:	f7ff ff8d 	bl	8012e10 <Ssd1306::SendCommand(unsigned char)>
 8012ef6:	4629      	mov	r1, r5
 8012ef8:	4620      	mov	r0, r4
 8012efa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8012efe:	f7ff bf87 	b.w	8012e10 <Ssd1306::SendCommand(unsigned char)>

08012f02 <Ssd1306::SetFlipVertically(bool)>:
 8012f02:	b510      	push	{r4, lr}
 8012f04:	4604      	mov	r4, r0
 8012f06:	71c1      	strb	r1, [r0, #7]
 8012f08:	b141      	cbz	r1, 8012f1c <Ssd1306::SetFlipVertically(bool)+0x1a>
 8012f0a:	21c0      	movs	r1, #192	; 0xc0
 8012f0c:	f7ff ff80 	bl	8012e10 <Ssd1306::SendCommand(unsigned char)>
 8012f10:	21a0      	movs	r1, #160	; 0xa0
 8012f12:	4620      	mov	r0, r4
 8012f14:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012f18:	f7ff bf7a 	b.w	8012e10 <Ssd1306::SendCommand(unsigned char)>
 8012f1c:	21c8      	movs	r1, #200	; 0xc8
 8012f1e:	f7ff ff77 	bl	8012e10 <Ssd1306::SendCommand(unsigned char)>
 8012f22:	21a1      	movs	r1, #161	; 0xa1
 8012f24:	e7f5      	b.n	8012f12 <Ssd1306::SetFlipVertically(bool)+0x10>
	...

08012f28 <Ssd1306::CheckSH1106()>:
 8012f28:	b570      	push	{r4, r5, r6, lr}
 8012f2a:	4604      	mov	r4, r0
 8012f2c:	b086      	sub	sp, #24
 8012f2e:	2100      	movs	r1, #0
 8012f30:	f7ff ff6e 	bl	8012e10 <Ssd1306::SendCommand(unsigned char)>
 8012f34:	2190      	movs	r1, #144	; 0x90
 8012f36:	4620      	mov	r0, r4
 8012f38:	f7ff ff6a 	bl	8012e10 <Ssd1306::SendCommand(unsigned char)>
 8012f3c:	21b0      	movs	r1, #176	; 0xb0
 8012f3e:	4620      	mov	r0, r4
 8012f40:	f7ff ff66 	bl	8012e10 <Ssd1306::SendCommand(unsigned char)>
 8012f44:	4b22      	ldr	r3, [pc, #136]	; (8012fd0 <Ssd1306::CheckSH1106()+0xa8>)
 8012f46:	f104 0608 	add.w	r6, r4, #8
 8012f4a:	6818      	ldr	r0, [r3, #0]
 8012f4c:	791b      	ldrb	r3, [r3, #4]
 8012f4e:	ad02      	add	r5, sp, #8
 8012f50:	9002      	str	r0, [sp, #8]
 8012f52:	4630      	mov	r0, r6
 8012f54:	712b      	strb	r3, [r5, #4]
 8012f56:	f7ff fef7 	bl	8012d48 <HAL_I2C::Setup()>
 8012f5a:	2105      	movs	r1, #5
 8012f5c:	4628      	mov	r0, r5
 8012f5e:	f001 fc09 	bl	8014774 <gd32_i2c_write(char const*, unsigned int)>
 8012f62:	2100      	movs	r1, #0
 8012f64:	4620      	mov	r0, r4
 8012f66:	f7ff ff53 	bl	8012e10 <Ssd1306::SendCommand(unsigned char)>
 8012f6a:	2190      	movs	r1, #144	; 0x90
 8012f6c:	4620      	mov	r0, r4
 8012f6e:	f7ff ff4f 	bl	8012e10 <Ssd1306::SendCommand(unsigned char)>
 8012f72:	21b0      	movs	r1, #176	; 0xb0
 8012f74:	4620      	mov	r0, r4
 8012f76:	f7ff ff4b 	bl	8012e10 <Ssd1306::SendCommand(unsigned char)>
 8012f7a:	2300      	movs	r3, #0
 8012f7c:	9304      	str	r3, [sp, #16]
 8012f7e:	f88d 3014 	strb.w	r3, [sp, #20]
 8012f82:	2340      	movs	r3, #64	; 0x40
 8012f84:	4630      	mov	r0, r6
 8012f86:	f88d 3007 	strb.w	r3, [sp, #7]
 8012f8a:	f7ff fedd 	bl	8012d48 <HAL_I2C::Setup()>
 8012f8e:	2101      	movs	r1, #1
 8012f90:	f10d 0007 	add.w	r0, sp, #7
 8012f94:	f001 fbee 	bl	8014774 <gd32_i2c_write(char const*, unsigned int)>
 8012f98:	4630      	mov	r0, r6
 8012f9a:	f7ff fed5 	bl	8012d48 <HAL_I2C::Setup()>
 8012f9e:	2105      	movs	r1, #5
 8012fa0:	a804      	add	r0, sp, #16
 8012fa2:	f001 fc4d 	bl	8014840 <gd32_i2c_read(char*, unsigned int)>
 8012fa6:	2201      	movs	r2, #1
 8012fa8:	5cab      	ldrb	r3, [r5, r2]
 8012faa:	a904      	add	r1, sp, #16
 8012fac:	3201      	adds	r2, #1
 8012fae:	4411      	add	r1, r2
 8012fb0:	f811 1c01 	ldrb.w	r1, [r1, #-1]
 8012fb4:	428b      	cmp	r3, r1
 8012fb6:	d006      	beq.n	8012fc6 <Ssd1306::CheckSH1106()+0x9e>
 8012fb8:	1a5b      	subs	r3, r3, r1
 8012fba:	fab3 f383 	clz	r3, r3
 8012fbe:	095b      	lsrs	r3, r3, #5
 8012fc0:	7463      	strb	r3, [r4, #17]
 8012fc2:	b006      	add	sp, #24
 8012fc4:	bd70      	pop	{r4, r5, r6, pc}
 8012fc6:	2a05      	cmp	r2, #5
 8012fc8:	d1ee      	bne.n	8012fa8 <Ssd1306::CheckSH1106()+0x80>
 8012fca:	2300      	movs	r3, #0
 8012fcc:	e7f5      	b.n	8012fba <Ssd1306::CheckSH1106()+0x92>
 8012fce:	bf00      	nop
 8012fd0:	08017ab3 	stmdaeq	r1, {r0, r1, r4, r5, r7, r9, fp, ip, sp, lr}

08012fd4 <Ssd1306::Cls()>:
 8012fd4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012fd8:	4604      	mov	r4, r0
 8012fda:	2600      	movs	r6, #0
 8012fdc:	7c45      	ldrb	r5, [r0, #17]
 8012fde:	00ad      	lsls	r5, r5, #2
 8012fe0:	b2ed      	uxtb	r5, r5
 8012fe2:	f1a5 077f 	sub.w	r7, r5, #127	; 0x7f
 8012fe6:	f045 0810 	orr.w	r8, r5, #16
 8012fea:	b2ff      	uxtb	r7, r7
 8012fec:	6963      	ldr	r3, [r4, #20]
 8012fee:	4629      	mov	r1, r5
 8012ff0:	42b3      	cmp	r3, r6
 8012ff2:	4620      	mov	r0, r4
 8012ff4:	d80b      	bhi.n	801300e <Ssd1306::Cls()+0x3a>
 8012ff6:	f7ff ff0b 	bl	8012e10 <Ssd1306::SendCommand(unsigned char)>
 8012ffa:	4641      	mov	r1, r8
 8012ffc:	4620      	mov	r0, r4
 8012ffe:	f7ff ff07 	bl	8012e10 <Ssd1306::SendCommand(unsigned char)>
 8013002:	4620      	mov	r0, r4
 8013004:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8013008:	21b0      	movs	r1, #176	; 0xb0
 801300a:	f7ff bf01 	b.w	8012e10 <Ssd1306::SendCommand(unsigned char)>
 801300e:	f7ff feff 	bl	8012e10 <Ssd1306::SendCommand(unsigned char)>
 8013012:	4641      	mov	r1, r8
 8013014:	4620      	mov	r0, r4
 8013016:	f7ff fefb 	bl	8012e10 <Ssd1306::SendCommand(unsigned char)>
 801301a:	f066 014f 	orn	r1, r6, #79	; 0x4f
 801301e:	4620      	mov	r0, r4
 8013020:	b2c9      	uxtb	r1, r1
 8013022:	f7ff fef5 	bl	8012e10 <Ssd1306::SendCommand(unsigned char)>
 8013026:	7c23      	ldrb	r3, [r4, #16]
 8013028:	b123      	cbz	r3, 8013034 <Ssd1306::Cls()+0x60>
 801302a:	3b01      	subs	r3, #1
 801302c:	2b01      	cmp	r3, #1
 801302e:	d901      	bls.n	8013034 <Ssd1306::Cls()+0x60>
 8013030:	3601      	adds	r6, #1
 8013032:	e7db      	b.n	8012fec <Ssd1306::Cls()+0x18>
 8013034:	f104 0008 	add.w	r0, r4, #8
 8013038:	f7ff fe86 	bl	8012d48 <HAL_I2C::Setup()>
 801303c:	4639      	mov	r1, r7
 801303e:	4802      	ldr	r0, [pc, #8]	; (8013048 <Ssd1306::Cls()+0x74>)
 8013040:	f001 fb98 	bl	8014774 <gd32_i2c_write(char const*, unsigned int)>
 8013044:	e7f4      	b.n	8013030 <Ssd1306::Cls()+0x5c>
 8013046:	bf00      	nop
 8013048:	2001cd4c 	andcs	ip, r1, ip, asr #26

0801304c <Ssd1306::Start()>:
 801304c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801304e:	7a04      	ldrb	r4, [r0, #8]
 8013050:	68c6      	ldr	r6, [r0, #12]
 8013052:	4605      	mov	r5, r0
 8013054:	4620      	mov	r0, r4
 8013056:	f001 fb87 	bl	8014768 <gd32_i2c_set_address(unsigned char)>
 801305a:	4630      	mov	r0, r6
 801305c:	f001 fb7c 	bl	8014758 <gd32_i2c_set_baudrate(unsigned int)>
 8013060:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8013064:	2b07      	cmp	r3, #7
 8013066:	d902      	bls.n	801306e <Ssd1306::Start()+0x22>
 8013068:	3c50      	subs	r4, #80	; 0x50
 801306a:	2c0f      	cmp	r4, #15
 801306c:	d80f      	bhi.n	801308e <Ssd1306::Start()+0x42>
 801306e:	2101      	movs	r1, #1
 8013070:	f10d 0007 	add.w	r0, sp, #7
 8013074:	f001 fbe4 	bl	8014840 <gd32_i2c_read(char*, unsigned int)>
 8013078:	fab0 f480 	clz	r4, r0
 801307c:	0964      	lsrs	r4, r4, #5
 801307e:	b35c      	cbz	r4, 80130d8 <Ssd1306::Start()+0x8c>
 8013080:	7c2e      	ldrb	r6, [r5, #16]
 8013082:	b14e      	cbz	r6, 8013098 <Ssd1306::Start()+0x4c>
 8013084:	3e01      	subs	r6, #1
 8013086:	2e01      	cmp	r6, #1
 8013088:	d929      	bls.n	80130de <Ssd1306::Start()+0x92>
 801308a:	2400      	movs	r4, #0
 801308c:	e024      	b.n	80130d8 <Ssd1306::Start()+0x8c>
 801308e:	2100      	movs	r1, #0
 8013090:	4608      	mov	r0, r1
 8013092:	f001 fb6f 	bl	8014774 <gd32_i2c_write(char const*, unsigned int)>
 8013096:	e7ef      	b.n	8013078 <Ssd1306::Start()+0x2c>
 8013098:	4f16      	ldr	r7, [pc, #88]	; (80130f4 <Ssd1306::Start()+0xa8>)
 801309a:	4628      	mov	r0, r5
 801309c:	f817 1b01 	ldrb.w	r1, [r7], #1
 80130a0:	3601      	adds	r6, #1
 80130a2:	f7ff feb5 	bl	8012e10 <Ssd1306::SendCommand(unsigned char)>
 80130a6:	2e18      	cmp	r6, #24
 80130a8:	d1f7      	bne.n	801309a <Ssd1306::Start()+0x4e>
 80130aa:	2300      	movs	r3, #0
 80130ac:	4a12      	ldr	r2, [pc, #72]	; (80130f8 <Ssd1306::Start()+0xac>)
 80130ae:	4618      	mov	r0, r3
 80130b0:	4611      	mov	r1, r2
 80130b2:	3301      	adds	r3, #1
 80130b4:	2b86      	cmp	r3, #134	; 0x86
 80130b6:	f802 0b01 	strb.w	r0, [r2], #1
 80130ba:	d1fa      	bne.n	80130b2 <Ssd1306::Start()+0x66>
 80130bc:	2340      	movs	r3, #64	; 0x40
 80130be:	4628      	mov	r0, r5
 80130c0:	700b      	strb	r3, [r1, #0]
 80130c2:	f7ff ff31 	bl	8012f28 <Ssd1306::CheckSH1106()>
 80130c6:	4628      	mov	r0, r5
 80130c8:	f7ff ff84 	bl	8012fd4 <Ssd1306::Cls()>
 80130cc:	21af      	movs	r1, #175	; 0xaf
 80130ce:	4628      	mov	r0, r5
 80130d0:	f7ff fe9e 	bl	8012e10 <Ssd1306::SendCommand(unsigned char)>
 80130d4:	2301      	movs	r3, #1
 80130d6:	71eb      	strb	r3, [r5, #7]
 80130d8:	4620      	mov	r0, r4
 80130da:	b003      	add	sp, #12
 80130dc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80130de:	2600      	movs	r6, #0
 80130e0:	4f06      	ldr	r7, [pc, #24]	; (80130fc <Ssd1306::Start()+0xb0>)
 80130e2:	4628      	mov	r0, r5
 80130e4:	f817 1b01 	ldrb.w	r1, [r7], #1
 80130e8:	3601      	adds	r6, #1
 80130ea:	f7ff fe91 	bl	8012e10 <Ssd1306::SendCommand(unsigned char)>
 80130ee:	2e18      	cmp	r6, #24
 80130f0:	d1f7      	bne.n	80130e2 <Ssd1306::Start()+0x96>
 80130f2:	e7da      	b.n	80130aa <Ssd1306::Start()+0x5e>
 80130f4:	08017d74 	stmdaeq	r1, {r2, r4, r5, r6, r8, sl, fp, ip, sp, lr}
 80130f8:	2001cd4c 	andcs	ip, r1, ip, asr #26
 80130fc:	08017d5c 	stmdaeq	r1, {r2, r3, r4, r6, r8, sl, fp, ip, sp, lr}

08013100 <console_putc>:
 8013100:	f000 bb96 	b.w	8013830 <uart0_putc>

08013104 <console_puts>:
 8013104:	f000 bbb4 	b.w	8013870 <uart0_puts>

08013108 <console_set_fg_color>:
 8013108:	2807      	cmp	r0, #7
 801310a:	d810      	bhi.n	801312e <console_set_fg_color+0x26>
 801310c:	e8df f000 	tbb	[pc, r0]
 8013110:	0b090704 	bleq	8254d28 <__exidx_end+0x23ce60>
 8013114:	0d0f0f0f 	stceq	15, cr0, [pc, #-60]	; 80130e0 <Ssd1306::Start()+0x94>
 8013118:	4806      	ldr	r0, [pc, #24]	; (8013134 <console_set_fg_color+0x2c>)
 801311a:	f000 bba9 	b.w	8013870 <uart0_puts>
 801311e:	4806      	ldr	r0, [pc, #24]	; (8013138 <console_set_fg_color+0x30>)
 8013120:	e7fb      	b.n	801311a <console_set_fg_color+0x12>
 8013122:	4806      	ldr	r0, [pc, #24]	; (801313c <console_set_fg_color+0x34>)
 8013124:	e7f9      	b.n	801311a <console_set_fg_color+0x12>
 8013126:	4806      	ldr	r0, [pc, #24]	; (8013140 <console_set_fg_color+0x38>)
 8013128:	e7f7      	b.n	801311a <console_set_fg_color+0x12>
 801312a:	4806      	ldr	r0, [pc, #24]	; (8013144 <console_set_fg_color+0x3c>)
 801312c:	e7f5      	b.n	801311a <console_set_fg_color+0x12>
 801312e:	4806      	ldr	r0, [pc, #24]	; (8013148 <console_set_fg_color+0x40>)
 8013130:	e7f3      	b.n	801311a <console_set_fg_color+0x12>
 8013132:	bf00      	nop
 8013134:	08017dd2 	stmdaeq	r1, {r1, r4, r6, r7, r8, sl, fp, ip, sp, lr}
 8013138:	08017dd8 	stmdaeq	r1, {r3, r4, r6, r7, r8, sl, fp, ip, sp, lr}
 801313c:	08017dde 	stmdaeq	r1, {r1, r2, r3, r4, r6, r7, r8, sl, fp, ip, sp, lr}
 8013140:	08017de4 	stmdaeq	r1, {r2, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 8013144:	0801581a 	stmdaeq	r1, {r1, r3, r4, fp, ip, lr}
 8013148:	08017dea 	stmdaeq	r1, {r1, r3, r5, r6, r7, r8, sl, fp, ip, sp, lr}

0801314c <console_error>:
 801314c:	b510      	push	{r4, lr}
 801314e:	4604      	mov	r4, r0
 8013150:	4805      	ldr	r0, [pc, #20]	; (8013168 <console_error+0x1c>)
 8013152:	f000 fb8d 	bl	8013870 <uart0_puts>
 8013156:	4620      	mov	r0, r4
 8013158:	f000 fb8a 	bl	8013870 <uart0_puts>
 801315c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013160:	4802      	ldr	r0, [pc, #8]	; (801316c <console_error+0x20>)
 8013162:	f000 bb85 	b.w	8013870 <uart0_puts>
 8013166:	bf00      	nop
 8013168:	08017dd8 	stmdaeq	r1, {r3, r4, r6, r7, r8, sl, fp, ip, sp, lr}
 801316c:	0801581a 	stmdaeq	r1, {r1, r3, r4, fp, ip, lr}

08013170 <console_status>:
 8013170:	b510      	push	{r4, lr}
 8013172:	460c      	mov	r4, r1
 8013174:	b280      	uxth	r0, r0
 8013176:	f7ff ffc7 	bl	8013108 <console_set_fg_color>
 801317a:	4807      	ldr	r0, [pc, #28]	; (8013198 <console_status+0x28>)
 801317c:	f000 fb78 	bl	8013870 <uart0_puts>
 8013180:	4620      	mov	r0, r4
 8013182:	f000 fb75 	bl	8013870 <uart0_puts>
 8013186:	200a      	movs	r0, #10
 8013188:	f000 fb52 	bl	8013830 <uart0_putc>
 801318c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013190:	4802      	ldr	r0, [pc, #8]	; (801319c <console_status+0x2c>)
 8013192:	f000 bb6d 	b.w	8013870 <uart0_puts>
 8013196:	bf00      	nop
 8013198:	08017dcc 	stmdaeq	r1, {r2, r3, r6, r7, r8, sl, fp, ip, sp, lr}
 801319c:	0801581a 	stmdaeq	r1, {r1, r3, r4, fp, ip, lr}

080131a0 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>:
 80131a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80131a4:	4617      	mov	r7, r2
 80131a6:	461e      	mov	r6, r3
 80131a8:	4d14      	ldr	r5, [pc, #80]	; (80131fc <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x5c>)
 80131aa:	4b15      	ldr	r3, [pc, #84]	; (8013200 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x60>)
 80131ac:	b086      	sub	sp, #24
 80131ae:	6018      	str	r0, [r3, #0]
 80131b0:	4604      	mov	r4, r0
 80131b2:	f105 0803 	add.w	r8, r5, #3
 80131b6:	2203      	movs	r2, #3
 80131b8:	4628      	mov	r0, r5
 80131ba:	f000 f9fe 	bl	80135ba <memmove>
 80131be:	4639      	mov	r1, r7
 80131c0:	220b      	movs	r2, #11
 80131c2:	4640      	mov	r0, r8
 80131c4:	f000 f9f9 	bl	80135ba <memmove>
 80131c8:	f105 030e 	add.w	r3, r5, #14
 80131cc:	4631      	mov	r1, r6
 80131ce:	2208      	movs	r2, #8
 80131d0:	4618      	mov	r0, r3
 80131d2:	f000 f9f2 	bl	80135ba <memmove>
 80131d6:	2308      	movs	r3, #8
 80131d8:	e9cd 8303 	strd	r8, r3, [sp, #12]
 80131dc:	230b      	movs	r3, #11
 80131de:	9302      	str	r3, [sp, #8]
 80131e0:	4b08      	ldr	r3, [pc, #32]	; (8013204 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x64>)
 80131e2:	9005      	str	r0, [sp, #20]
 80131e4:	e9cd 5300 	strd	r5, r3, [sp]
 80131e8:	213f      	movs	r1, #63	; 0x3f
 80131ea:	2303      	movs	r3, #3
 80131ec:	4a06      	ldr	r2, [pc, #24]	; (8013208 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x68>)
 80131ee:	4807      	ldr	r0, [pc, #28]	; (801320c <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x6c>)
 80131f0:	f7f6 f9ee 	bl	80095d0 <snprintf>
 80131f4:	4620      	mov	r0, r4
 80131f6:	b006      	add	sp, #24
 80131f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80131fc:	2001cdd8 	ldrdcs	ip, [r1], -r8
 8013200:	2001ce30 	andcs	ip, r1, r0, lsr lr
 8013204:	08015946 	stmdaeq	r1, {r1, r2, r6, r8, fp, ip, lr}
 8013208:	08017df0 	stmdaeq	r1, {r4, r5, r6, r7, r8, sl, fp, ip, sp, lr}
 801320c:	2001cdee 	andcs	ip, r1, lr, ror #27

08013210 <FirmwareVersion::Print(char const*)>:
 8013210:	b510      	push	{r4, lr}
 8013212:	460c      	mov	r4, r1
 8013214:	4804      	ldr	r0, [pc, #16]	; (8013228 <FirmwareVersion::Print(char const*)+0x18>)
 8013216:	f000 fa08 	bl	801362a <puts>
 801321a:	b124      	cbz	r4, 8013226 <FirmwareVersion::Print(char const*)+0x16>
 801321c:	4620      	mov	r0, r4
 801321e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013222:	f000 ba02 	b.w	801362a <puts>
 8013226:	bd10      	pop	{r4, pc}
 8013228:	2001cdee 	andcs	ip, r1, lr, ror #27

0801322c <LedBlink::LedBlink()>:
 801322c:	b538      	push	{r3, r4, r5, lr}
 801322e:	2205      	movs	r2, #5
 8013230:	2300      	movs	r3, #0
 8013232:	e9c0 3200 	strd	r3, r2, [r0]
 8013236:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 801323a:	6083      	str	r3, [r0, #8]
 801323c:	e9c0 2303 	strd	r2, r3, [r0, #12]
 8013240:	6143      	str	r3, [r0, #20]
 8013242:	4b09      	ldr	r3, [pc, #36]	; (8013268 <LedBlink::LedBlink()+0x3c>)
 8013244:	4d09      	ldr	r5, [pc, #36]	; (801326c <LedBlink::LedBlink()+0x40>)
 8013246:	4604      	mov	r4, r0
 8013248:	6018      	str	r0, [r3, #0]
 801324a:	f240 6004 	movw	r0, #1540	; 0x604
 801324e:	f000 fd85 	bl	8013d5c <rcu_periph_clock_enable>
 8013252:	4628      	mov	r0, r5
 8013254:	2301      	movs	r3, #1
 8013256:	2203      	movs	r2, #3
 8013258:	2110      	movs	r1, #16
 801325a:	f000 fce7 	bl	8013c2c <gpio_init>
 801325e:	2301      	movs	r3, #1
 8013260:	4620      	mov	r0, r4
 8013262:	616b      	str	r3, [r5, #20]
 8013264:	bd38      	pop	{r3, r4, r5, pc}
 8013266:	bf00      	nop
 8013268:	2001ce34 	andcs	ip, r1, r4, lsr lr
 801326c:	40011000 	andmi	r1, r1, r0

08013270 <LedBlink::SetMode(ledblink::Mode)>:
 8013270:	6843      	ldr	r3, [r0, #4]
 8013272:	428b      	cmp	r3, r1
 8013274:	d02f      	beq.n	80132d6 <LedBlink::SetMode(ledblink::Mode)+0x66>
 8013276:	6041      	str	r1, [r0, #4]
 8013278:	2904      	cmp	r1, #4
 801327a:	d822      	bhi.n	80132c2 <LedBlink::SetMode(ledblink::Mode)+0x52>
 801327c:	e8df f001 	tbb	[pc, r1]
 8013280:	18120321 	ldmdane	r2, {r0, r5, r8, r9}
 8013284:	23ff001d 	mvnscs	r0, #29
 8013288:	6003      	str	r3, [r0, #0]
 801328a:	2300      	movs	r3, #0
 801328c:	2201      	movs	r2, #1
 801328e:	60c3      	str	r3, [r0, #12]
 8013290:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8013294:	f503 3388 	add.w	r3, r3, #69632	; 0x11000
 8013298:	611a      	str	r2, [r3, #16]
 801329a:	6880      	ldr	r0, [r0, #8]
 801329c:	b1d8      	cbz	r0, 80132d6 <LedBlink::SetMode(ledblink::Mode)+0x66>
 801329e:	6803      	ldr	r3, [r0, #0]
 80132a0:	689b      	ldr	r3, [r3, #8]
 80132a2:	4718      	bx	r3
 80132a4:	2301      	movs	r3, #1
 80132a6:	6003      	str	r3, [r0, #0]
 80132a8:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80132ac:	60c3      	str	r3, [r0, #12]
 80132ae:	e7f4      	b.n	801329a <LedBlink::SetMode(ledblink::Mode)+0x2a>
 80132b0:	2303      	movs	r3, #3
 80132b2:	6003      	str	r3, [r0, #0]
 80132b4:	f240 134d 	movw	r3, #333	; 0x14d
 80132b8:	e7f8      	b.n	80132ac <LedBlink::SetMode(ledblink::Mode)+0x3c>
 80132ba:	2305      	movs	r3, #5
 80132bc:	6003      	str	r3, [r0, #0]
 80132be:	23c8      	movs	r3, #200	; 0xc8
 80132c0:	e7f4      	b.n	80132ac <LedBlink::SetMode(ledblink::Mode)+0x3c>
 80132c2:	2300      	movs	r3, #0
 80132c4:	2201      	movs	r2, #1
 80132c6:	6003      	str	r3, [r0, #0]
 80132c8:	60c3      	str	r3, [r0, #12]
 80132ca:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80132ce:	f503 3388 	add.w	r3, r3, #69632	; 0x11000
 80132d2:	615a      	str	r2, [r3, #20]
 80132d4:	e7e1      	b.n	801329a <LedBlink::SetMode(ledblink::Mode)+0x2a>
 80132d6:	4770      	bx	lr

080132d8 <Hardware::Hardware()>:
 80132d8:	b570      	push	{r4, r5, r6, lr}
 80132da:	2400      	movs	r4, #0
 80132dc:	4b26      	ldr	r3, [pc, #152]	; (8013378 <Hardware::Hardware()+0xa0>)
 80132de:	b090      	sub	sp, #64	; 0x40
 80132e0:	6004      	str	r4, [r0, #0]
 80132e2:	7104      	strb	r4, [r0, #4]
 80132e4:	6018      	str	r0, [r3, #0]
 80132e6:	4605      	mov	r5, r0
 80132e8:	f7f4 f936 	bl	8007558 <console_init>
 80132ec:	f000 fad0 	bl	8013890 <systick_config>
 80132f0:	f001 fcb0 	bl	8014c54 <udelay_init()>
 80132f4:	f001 fc60 	bl	8014bb8 <micros_init()>
 80132f8:	f240 701b 	movw	r0, #1819	; 0x71b
 80132fc:	f000 fd2e 	bl	8013d5c <rcu_periph_clock_enable>
 8013300:	f240 701c 	movw	r0, #1820	; 0x71c
 8013304:	f000 fd2a 	bl	8013d5c <rcu_periph_clock_enable>
 8013308:	4e1c      	ldr	r6, [pc, #112]	; (801337c <Hardware::Hardware()+0xa4>)
 801330a:	f000 fd1f 	bl	8013d4c <pmu_backup_write_enable>
 801330e:	f000 fb63 	bl	80139d8 <bkp_deinit>
 8013312:	4621      	mov	r1, r4
 8013314:	2002      	movs	r0, #2
 8013316:	f000 fb67 	bl	80139e8 <bkp_data_write>
 801331a:	f240 7004 	movw	r0, #1796	; 0x704
 801331e:	f000 fd1d 	bl	8013d5c <rcu_periph_clock_enable>
 8013322:	4630      	mov	r0, r6
 8013324:	f000 fe8e 	bl	8014044 <timer_deinit>
 8013328:	2377      	movs	r3, #119	; 0x77
 801332a:	f8ad 300c 	strh.w	r3, [sp, #12]
 801332e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8013332:	a903      	add	r1, sp, #12
 8013334:	4630      	mov	r0, r6
 8013336:	9305      	str	r3, [sp, #20]
 8013338:	f000 ff2a 	bl	8014190 <timer_init>
 801333c:	4630      	mov	r0, r6
 801333e:	f000 ff7f 	bl	8014240 <timer_enable>
 8013342:	f001 f97b 	bl	801463c <gd32_adc_init()>
 8013346:	2213      	movs	r2, #19
 8013348:	2302      	movs	r3, #2
 801334a:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 801334e:	237a      	movs	r3, #122	; 0x7a
 8013350:	a807      	add	r0, sp, #28
 8013352:	930c      	str	r3, [sp, #48]	; 0x30
 8013354:	e9cd 4408 	strd	r4, r4, [sp, #32]
 8013358:	9407      	str	r4, [sp, #28]
 801335a:	940f      	str	r4, [sp, #60]	; 0x3c
 801335c:	f000 f9be 	bl	80136dc <mktime>
 8013360:	4621      	mov	r1, r4
 8013362:	e9cd 0401 	strd	r0, r4, [sp, #4]
 8013366:	a801      	add	r0, sp, #4
 8013368:	f000 fa2e 	bl	80137c8 <settimeofday>
 801336c:	f001 f9c0 	bl	80146f0 <gd32_i2c_begin()>
 8013370:	4628      	mov	r0, r5
 8013372:	b010      	add	sp, #64	; 0x40
 8013374:	bd70      	pop	{r4, r5, r6, pc}
 8013376:	bf00      	nop
 8013378:	2001ce38 	andcs	ip, r1, r8, lsr lr
 801337c:	40001000 	andmi	r1, r0, r0

08013380 <Hardware::GetUuid(unsigned char*)>:
 8013380:	4a0c      	ldr	r2, [pc, #48]	; (80133b4 <Hardware::GetUuid(unsigned char*)+0x34>)
 8013382:	b084      	sub	sp, #16
 8013384:	f8d2 37e8 	ldr.w	r3, [r2, #2024]	; 0x7e8
 8013388:	9300      	str	r3, [sp, #0]
 801338a:	f8d2 07ec 	ldr.w	r0, [r2, #2028]	; 0x7ec
 801338e:	9001      	str	r0, [sp, #4]
 8013390:	f8d2 27f0 	ldr.w	r2, [r2, #2032]	; 0x7f0
 8013394:	4403      	add	r3, r0
 8013396:	4413      	add	r3, r2
 8013398:	9202      	str	r2, [sp, #8]
 801339a:	466a      	mov	r2, sp
 801339c:	9303      	str	r3, [sp, #12]
 801339e:	1e4b      	subs	r3, r1, #1
 80133a0:	310f      	adds	r1, #15
 80133a2:	428b      	cmp	r3, r1
 80133a4:	d101      	bne.n	80133aa <Hardware::GetUuid(unsigned char*)+0x2a>
 80133a6:	b004      	add	sp, #16
 80133a8:	4770      	bx	lr
 80133aa:	f812 0b01 	ldrb.w	r0, [r2], #1
 80133ae:	f803 0f01 	strb.w	r0, [r3, #1]!
 80133b2:	e7f6      	b.n	80133a2 <Hardware::GetUuid(unsigned char*)+0x22>
 80133b4:	1ffff000 	svcne	0x00fff000

080133b8 <Hardware::Reboot()>:
 80133b8:	b508      	push	{r3, lr}
 80133ba:	6803      	ldr	r3, [r0, #0]
 80133bc:	4604      	mov	r4, r0
 80133be:	b153      	cbz	r3, 80133d6 <Hardware::Reboot()+0x1e>
 80133c0:	2300      	movs	r3, #0
 80133c2:	2104      	movs	r1, #4
 80133c4:	7103      	strb	r3, [r0, #4]
 80133c6:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80133ca:	f000 fc05 	bl	8013bd8 <fwdgt_config>
 80133ce:	6820      	ldr	r0, [r4, #0]
 80133d0:	6803      	ldr	r3, [r0, #0]
 80133d2:	689b      	ldr	r3, [r3, #8]
 80133d4:	4798      	blx	r3
 80133d6:	2102      	movs	r1, #2
 80133d8:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80133dc:	f000 fbfc 	bl	8013bd8 <fwdgt_config>
 80133e0:	2801      	cmp	r0, #1
 80133e2:	bf0c      	ite	eq
 80133e4:	2301      	moveq	r3, #1
 80133e6:	2300      	movne	r3, #0
 80133e8:	7123      	strb	r3, [r4, #4]
 80133ea:	d101      	bne.n	80133f0 <Hardware::Reboot()+0x38>
 80133ec:	f000 fbe4 	bl	8013bb8 <fwdgt_enable>
 80133f0:	2208      	movs	r2, #8
 80133f2:	4b0d      	ldr	r3, [pc, #52]	; (8013428 <Hardware::Reboot()+0x70>)
 80133f4:	2501      	movs	r5, #1
 80133f6:	681b      	ldr	r3, [r3, #0]
 80133f8:	480c      	ldr	r0, [pc, #48]	; (801342c <Hardware::Reboot()+0x74>)
 80133fa:	601a      	str	r2, [r3, #0]
 80133fc:	227d      	movs	r2, #125	; 0x7d
 80133fe:	490c      	ldr	r1, [pc, #48]	; (8013430 <Hardware::Reboot()+0x78>)
 8013400:	60da      	str	r2, [r3, #12]
 8013402:	68dc      	ldr	r4, [r3, #12]
 8013404:	b904      	cbnz	r4, 8013408 <Hardware::Reboot()+0x50>
 8013406:	e7fe      	b.n	8013406 <Hardware::Reboot()+0x4e>
 8013408:	6802      	ldr	r2, [r0, #0]
 801340a:	695e      	ldr	r6, [r3, #20]
 801340c:	1b92      	subs	r2, r2, r6
 801340e:	4294      	cmp	r4, r2
 8013410:	d8f8      	bhi.n	8013404 <Hardware::Reboot()+0x4c>
 8013412:	6802      	ldr	r2, [r0, #0]
 8013414:	615a      	str	r2, [r3, #20]
 8013416:	691a      	ldr	r2, [r3, #16]
 8013418:	2a01      	cmp	r2, #1
 801341a:	f082 0401 	eor.w	r4, r2, #1
 801341e:	611c      	str	r4, [r3, #16]
 8013420:	bf14      	ite	ne
 8013422:	610d      	strne	r5, [r1, #16]
 8013424:	614a      	streq	r2, [r1, #20]
 8013426:	e7ec      	b.n	8013402 <Hardware::Reboot()+0x4a>
 8013428:	2001ce34 	andcs	ip, r1, r4, lsr lr
 801342c:	2001ce4c 	andcs	ip, r1, ip, asr #28
 8013430:	40011000 	andmi	r1, r1, r0

08013434 <operator delete(void*)>:
 8013434:	f000 b890 	b.w	8013558 <free>

08013438 <operator delete[](void*)>:
 8013438:	f000 b88e 	b.w	8013558 <free>

0801343c <operator new(unsigned int)>:
 801343c:	f000 b842 	b.w	80134c4 <malloc>

08013440 <operator new[](unsigned int)>:
 8013440:	f000 b840 	b.w	80134c4 <malloc>

08013444 <inet_aton>:
 8013444:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8013446:	f04f 0c0a 	mov.w	ip, #10
 801344a:	2500      	movs	r5, #0
 801344c:	ae01      	add	r6, sp, #4
 801344e:	4603      	mov	r3, r0
 8013450:	2200      	movs	r2, #0
 8013452:	1d07      	adds	r7, r0, #4
 8013454:	e007      	b.n	8013466 <inet_aton+0x22>
 8013456:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 801345a:	2b09      	cmp	r3, #9
 801345c:	d820      	bhi.n	80134a0 <inet_aton+0x5c>
 801345e:	4603      	mov	r3, r0
 8013460:	fb0c 4202 	mla	r2, ip, r2, r4
 8013464:	3a30      	subs	r2, #48	; 0x30
 8013466:	4618      	mov	r0, r3
 8013468:	f810 4b01 	ldrb.w	r4, [r0], #1
 801346c:	2c2e      	cmp	r4, #46	; 0x2e
 801346e:	d111      	bne.n	8013494 <inet_aton+0x50>
 8013470:	3501      	adds	r5, #1
 8013472:	2d03      	cmp	r5, #3
 8013474:	f806 2b01 	strb.w	r2, [r6], #1
 8013478:	d1e9      	bne.n	801344e <inet_aton+0xa>
 801347a:	2200      	movs	r2, #0
 801347c:	250a      	movs	r5, #10
 801347e:	1d1c      	adds	r4, r3, #4
 8013480:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8013484:	f010 0fdf 	tst.w	r0, #223	; 0xdf
 8013488:	d10d      	bne.n	80134a6 <inet_aton+0x62>
 801348a:	f88d 2007 	strb.w	r2, [sp, #7]
 801348e:	b9b1      	cbnz	r1, 80134be <inet_aton+0x7a>
 8013490:	2001      	movs	r0, #1
 8013492:	e006      	b.n	80134a2 <inet_aton+0x5e>
 8013494:	2c00      	cmp	r4, #0
 8013496:	d0eb      	beq.n	8013470 <inet_aton+0x2c>
 8013498:	2c0a      	cmp	r4, #10
 801349a:	d0e9      	beq.n	8013470 <inet_aton+0x2c>
 801349c:	42b8      	cmp	r0, r7
 801349e:	d1da      	bne.n	8013456 <inet_aton+0x12>
 80134a0:	2000      	movs	r0, #0
 80134a2:	b003      	add	sp, #12
 80134a4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80134a6:	280a      	cmp	r0, #10
 80134a8:	d0ef      	beq.n	801348a <inet_aton+0x46>
 80134aa:	42a3      	cmp	r3, r4
 80134ac:	d0f8      	beq.n	80134a0 <inet_aton+0x5c>
 80134ae:	f1a0 0630 	sub.w	r6, r0, #48	; 0x30
 80134b2:	2e09      	cmp	r6, #9
 80134b4:	d8f4      	bhi.n	80134a0 <inet_aton+0x5c>
 80134b6:	fb05 0202 	mla	r2, r5, r2, r0
 80134ba:	3a30      	subs	r2, #48	; 0x30
 80134bc:	e7e0      	b.n	8013480 <inet_aton+0x3c>
 80134be:	9b01      	ldr	r3, [sp, #4]
 80134c0:	600b      	str	r3, [r1, #0]
 80134c2:	e7e5      	b.n	8013490 <inet_aton+0x4c>

080134c4 <malloc>:
 80134c4:	b538      	push	{r3, r4, r5, lr}
 80134c6:	4604      	mov	r4, r0
 80134c8:	4601      	mov	r1, r0
 80134ca:	481c      	ldr	r0, [pc, #112]	; (801353c <malloc+0x78>)
 80134cc:	f7f6 f858 	bl	8009580 <printf>
 80134d0:	b17c      	cbz	r4, 80134f2 <malloc+0x2e>
 80134d2:	4b1b      	ldr	r3, [pc, #108]	; (8013540 <malloc+0x7c>)
 80134d4:	6818      	ldr	r0, [r3, #0]
 80134d6:	b978      	cbnz	r0, 80134f8 <malloc+0x34>
 80134d8:	4a1a      	ldr	r2, [pc, #104]	; (8013544 <malloc+0x80>)
 80134da:	f104 031b 	add.w	r3, r4, #27
 80134de:	6811      	ldr	r1, [r2, #0]
 80134e0:	4819      	ldr	r0, [pc, #100]	; (8013548 <malloc+0x84>)
 80134e2:	f023 030f 	bic.w	r3, r3, #15
 80134e6:	440b      	add	r3, r1
 80134e8:	4283      	cmp	r3, r0
 80134ea:	d921      	bls.n	8013530 <malloc+0x6c>
 80134ec:	4817      	ldr	r0, [pc, #92]	; (801354c <malloc+0x88>)
 80134ee:	f7f6 f847 	bl	8009580 <printf>
 80134f2:	2500      	movs	r5, #0
 80134f4:	4628      	mov	r0, r5
 80134f6:	bd38      	pop	{r3, r4, r5, pc}
 80134f8:	4284      	cmp	r4, r0
 80134fa:	d80a      	bhi.n	8013512 <malloc+0x4e>
 80134fc:	685a      	ldr	r2, [r3, #4]
 80134fe:	6899      	ldr	r1, [r3, #8]
 8013500:	3201      	adds	r2, #1
 8013502:	428a      	cmp	r2, r1
 8013504:	605a      	str	r2, [r3, #4]
 8013506:	d900      	bls.n	801350a <malloc+0x46>
 8013508:	609a      	str	r2, [r3, #8]
 801350a:	68d9      	ldr	r1, [r3, #12]
 801350c:	b919      	cbnz	r1, 8013516 <malloc+0x52>
 801350e:	4604      	mov	r4, r0
 8013510:	e7e2      	b.n	80134d8 <malloc+0x14>
 8013512:	3310      	adds	r3, #16
 8013514:	e7de      	b.n	80134d4 <malloc+0x10>
 8013516:	4604      	mov	r4, r0
 8013518:	688a      	ldr	r2, [r1, #8]
 801351a:	60da      	str	r2, [r3, #12]
 801351c:	2300      	movs	r3, #0
 801351e:	f101 050c 	add.w	r5, r1, #12
 8013522:	608b      	str	r3, [r1, #8]
 8013524:	4622      	mov	r2, r4
 8013526:	462b      	mov	r3, r5
 8013528:	4809      	ldr	r0, [pc, #36]	; (8013550 <malloc+0x8c>)
 801352a:	f7f6 f829 	bl	8009580 <printf>
 801352e:	e7e1      	b.n	80134f4 <malloc+0x30>
 8013530:	6013      	str	r3, [r2, #0]
 8013532:	4b08      	ldr	r3, [pc, #32]	; (8013554 <malloc+0x90>)
 8013534:	e9c1 3400 	strd	r3, r4, [r1]
 8013538:	e7f0      	b.n	801351c <malloc+0x58>
 801353a:	bf00      	nop
 801353c:	08017e14 	stmdaeq	r1, {r2, r4, r9, sl, fp, ip, sp, lr}
 8013540:	20000014 	andcs	r0, r0, r4, lsl r0
 8013544:	20000010 	andcs	r0, r0, r0, lsl r0
 8013548:	2003d800 	andcs	sp, r3, r0, lsl #16
 801354c:	08017e20 	stmdaeq	r1, {r5, r9, sl, fp, ip, sp, lr}
 8013550:	08017e3c 	stmdaeq	r1, {r2, r3, r4, r5, r9, sl, fp, ip, sp, lr}
 8013554:	424c4d43 	submi	r4, ip, #4288	; 0x10c0

08013558 <free>:
 8013558:	b538      	push	{r3, r4, r5, lr}
 801355a:	4604      	mov	r4, r0
 801355c:	b1c8      	cbz	r0, 8013592 <free+0x3a>
 801355e:	f1a0 050c 	sub.w	r5, r0, #12
 8013562:	4602      	mov	r2, r0
 8013564:	4629      	mov	r1, r5
 8013566:	480c      	ldr	r0, [pc, #48]	; (8013598 <free+0x40>)
 8013568:	f7f6 f80a 	bl	8009580 <printf>
 801356c:	f854 2c0c 	ldr.w	r2, [r4, #-12]
 8013570:	4b0a      	ldr	r3, [pc, #40]	; (801359c <free+0x44>)
 8013572:	429a      	cmp	r2, r3
 8013574:	d10d      	bne.n	8013592 <free+0x3a>
 8013576:	4b0a      	ldr	r3, [pc, #40]	; (80135a0 <free+0x48>)
 8013578:	681a      	ldr	r2, [r3, #0]
 801357a:	b152      	cbz	r2, 8013592 <free+0x3a>
 801357c:	f854 1c08 	ldr.w	r1, [r4, #-8]
 8013580:	4291      	cmp	r1, r2
 8013582:	d107      	bne.n	8013594 <free+0x3c>
 8013584:	68da      	ldr	r2, [r3, #12]
 8013586:	f844 2c04 	str.w	r2, [r4, #-4]
 801358a:	685a      	ldr	r2, [r3, #4]
 801358c:	60dd      	str	r5, [r3, #12]
 801358e:	3a01      	subs	r2, #1
 8013590:	605a      	str	r2, [r3, #4]
 8013592:	bd38      	pop	{r3, r4, r5, pc}
 8013594:	3310      	adds	r3, #16
 8013596:	e7ef      	b.n	8013578 <free+0x20>
 8013598:	08017e67 	stmdaeq	r1, {r0, r1, r2, r5, r6, r9, sl, fp, ip, sp, lr}
 801359c:	424c4d43 	submi	r4, ip, #4288	; 0x10c0
 80135a0:	20000014 	andcs	r0, r0, r4, lsl r0

080135a4 <memcpy>:
 80135a4:	b510      	push	{r4, lr}
 80135a6:	1e43      	subs	r3, r0, #1
 80135a8:	440a      	add	r2, r1
 80135aa:	4291      	cmp	r1, r2
 80135ac:	d100      	bne.n	80135b0 <memcpy+0xc>
 80135ae:	bd10      	pop	{r4, pc}
 80135b0:	f811 4b01 	ldrb.w	r4, [r1], #1
 80135b4:	f803 4f01 	strb.w	r4, [r3, #1]!
 80135b8:	e7f7      	b.n	80135aa <memcpy+0x6>

080135ba <memmove>:
 80135ba:	4288      	cmp	r0, r1
 80135bc:	b510      	push	{r4, lr}
 80135be:	eb01 0302 	add.w	r3, r1, r2
 80135c2:	d208      	bcs.n	80135d6 <memmove+0x1c>
 80135c4:	1e42      	subs	r2, r0, #1
 80135c6:	4299      	cmp	r1, r3
 80135c8:	d100      	bne.n	80135cc <memmove+0x12>
 80135ca:	bd10      	pop	{r4, pc}
 80135cc:	f811 4b01 	ldrb.w	r4, [r1], #1
 80135d0:	f802 4f01 	strb.w	r4, [r2, #1]!
 80135d4:	e7f7      	b.n	80135c6 <memmove+0xc>
 80135d6:	4601      	mov	r1, r0
 80135d8:	4402      	add	r2, r0
 80135da:	428a      	cmp	r2, r1
 80135dc:	d0f5      	beq.n	80135ca <memmove+0x10>
 80135de:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80135e2:	f802 4d01 	strb.w	r4, [r2, #-1]!
 80135e6:	e7f8      	b.n	80135da <memmove+0x20>

080135e8 <memset>:
 80135e8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80135ea:	b1c2      	cbz	r2, 801361e <memset+0x36>
 80135ec:	4603      	mov	r3, r0
 80135ee:	b2c9      	uxtb	r1, r1
 80135f0:	075c      	lsls	r4, r3, #29
 80135f2:	d110      	bne.n	8013616 <memset+0x2e>
 80135f4:	ea41 2401 	orr.w	r4, r1, r1, lsl #8
 80135f8:	ea44 4704 	orr.w	r7, r4, r4, lsl #16
 80135fc:	463d      	mov	r5, r7
 80135fe:	461e      	mov	r6, r3
 8013600:	f022 0407 	bic.w	r4, r2, #7
 8013604:	441c      	add	r4, r3
 8013606:	42a6      	cmp	r6, r4
 8013608:	d10a      	bne.n	8013620 <memset+0x38>
 801360a:	4413      	add	r3, r2
 801360c:	429c      	cmp	r4, r3
 801360e:	d006      	beq.n	801361e <memset+0x36>
 8013610:	f804 1b01 	strb.w	r1, [r4], #1
 8013614:	e7fa      	b.n	801360c <memset+0x24>
 8013616:	3a01      	subs	r2, #1
 8013618:	f803 1b01 	strb.w	r1, [r3], #1
 801361c:	d1e8      	bne.n	80135f0 <memset+0x8>
 801361e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013620:	f846 7b08 	str.w	r7, [r6], #8
 8013624:	f846 5c04 	str.w	r5, [r6, #-4]
 8013628:	e7ed      	b.n	8013606 <memset+0x1e>

0801362a <puts>:
 801362a:	b508      	push	{r3, lr}
 801362c:	f7ff fd6a 	bl	8013104 <console_puts>
 8013630:	200a      	movs	r0, #10
 8013632:	f7ff fd65 	bl	8013100 <console_putc>
 8013636:	2001      	movs	r0, #1
 8013638:	bd08      	pop	{r3, pc}
	...

0801363c <strtok>:
 801363c:	b530      	push	{r4, r5, lr}
 801363e:	b910      	cbnz	r0, 8013646 <strtok+0xa>
 8013640:	4b12      	ldr	r3, [pc, #72]	; (801368c <strtok+0x50>)
 8013642:	6818      	ldr	r0, [r3, #0]
 8013644:	b158      	cbz	r0, 801365e <strtok+0x22>
 8013646:	4603      	mov	r3, r0
 8013648:	460d      	mov	r5, r1
 801364a:	4618      	mov	r0, r3
 801364c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8013650:	f815 4b01 	ldrb.w	r4, [r5], #1
 8013654:	b924      	cbnz	r4, 8013660 <strtok+0x24>
 8013656:	b94a      	cbnz	r2, 801366c <strtok+0x30>
 8013658:	4610      	mov	r0, r2
 801365a:	4b0c      	ldr	r3, [pc, #48]	; (801368c <strtok+0x50>)
 801365c:	601a      	str	r2, [r3, #0]
 801365e:	bd30      	pop	{r4, r5, pc}
 8013660:	42a2      	cmp	r2, r4
 8013662:	d1f5      	bne.n	8013650 <strtok+0x14>
 8013664:	e7f0      	b.n	8013648 <strtok+0xc>
 8013666:	4613      	mov	r3, r2
 8013668:	e00c      	b.n	8013684 <strtok+0x48>
 801366a:	b914      	cbnz	r4, 8013672 <strtok+0x36>
 801366c:	460d      	mov	r5, r1
 801366e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8013672:	f815 4b01 	ldrb.w	r4, [r5], #1
 8013676:	42a2      	cmp	r2, r4
 8013678:	d1f7      	bne.n	801366a <strtok+0x2e>
 801367a:	2a00      	cmp	r2, #0
 801367c:	d0f3      	beq.n	8013666 <strtok+0x2a>
 801367e:	2200      	movs	r2, #0
 8013680:	f803 2c01 	strb.w	r2, [r3, #-1]
 8013684:	4a01      	ldr	r2, [pc, #4]	; (801368c <strtok+0x50>)
 8013686:	6013      	str	r3, [r2, #0]
 8013688:	e7e9      	b.n	801365e <strtok+0x22>
 801368a:	bf00      	nop
 801368c:	2001ce3c 	andcs	ip, r1, ip, lsr lr

08013690 <isleapyear>:
 8013690:	2264      	movs	r2, #100	; 0x64
 8013692:	fb90 f3f2 	sdiv	r3, r0, r2
 8013696:	fb02 0313 	mls	r3, r2, r3, r0
 801369a:	b94b      	cbnz	r3, 80136b0 <isleapyear+0x20>
 801369c:	f44f 73c8 	mov.w	r3, #400	; 0x190
 80136a0:	fb90 f2f3 	sdiv	r2, r0, r3
 80136a4:	fb03 0012 	mls	r0, r3, r2, r0
 80136a8:	fab0 f080 	clz	r0, r0
 80136ac:	0940      	lsrs	r0, r0, #5
 80136ae:	4770      	bx	lr
 80136b0:	f010 0f03 	tst.w	r0, #3
 80136b4:	bf0c      	ite	eq
 80136b6:	2001      	moveq	r0, #1
 80136b8:	2000      	movne	r0, #0
 80136ba:	4770      	bx	lr

080136bc <getdaysofmonth>:
 80136bc:	b510      	push	{r4, lr}
 80136be:	4604      	mov	r4, r0
 80136c0:	2c01      	cmp	r4, #1
 80136c2:	4608      	mov	r0, r1
 80136c4:	d102      	bne.n	80136cc <getdaysofmonth+0x10>
 80136c6:	f7ff ffe3 	bl	8013690 <isleapyear>
 80136ca:	b918      	cbnz	r0, 80136d4 <getdaysofmonth+0x18>
 80136cc:	4b02      	ldr	r3, [pc, #8]	; (80136d8 <getdaysofmonth+0x1c>)
 80136ce:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 80136d2:	bd10      	pop	{r4, pc}
 80136d4:	201d      	movs	r0, #29
 80136d6:	e7fc      	b.n	80136d2 <getdaysofmonth+0x16>
 80136d8:	08017e90 	stmdaeq	r1, {r4, r7, r9, sl, fp, ip, sp, lr}

080136dc <mktime>:
 80136dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80136e0:	4604      	mov	r4, r0
 80136e2:	2800      	cmp	r0, #0
 80136e4:	d043      	beq.n	801376e <mktime+0x92>
 80136e6:	6941      	ldr	r1, [r0, #20]
 80136e8:	f1a1 0346 	sub.w	r3, r1, #70	; 0x46
 80136ec:	2b45      	cmp	r3, #69	; 0x45
 80136ee:	d83e      	bhi.n	801376e <mktime+0x92>
 80136f0:	2600      	movs	r6, #0
 80136f2:	f240 75b2 	movw	r5, #1970	; 0x7b2
 80136f6:	f240 186d 	movw	r8, #365	; 0x16d
 80136fa:	f201 776b 	addw	r7, r1, #1899	; 0x76b
 80136fe:	42af      	cmp	r7, r5
 8013700:	da24      	bge.n	801374c <mktime+0x70>
 8013702:	6927      	ldr	r7, [r4, #16]
 8013704:	2f0b      	cmp	r7, #11
 8013706:	d832      	bhi.n	801376e <mktime+0x92>
 8013708:	2500      	movs	r5, #0
 801370a:	42af      	cmp	r7, r5
 801370c:	d129      	bne.n	8013762 <mktime+0x86>
 801370e:	68e5      	ldr	r5, [r4, #12]
 8013710:	2d00      	cmp	r5, #0
 8013712:	dd2c      	ble.n	801376e <mktime+0x92>
 8013714:	4638      	mov	r0, r7
 8013716:	f7ff ffd1 	bl	80136bc <getdaysofmonth>
 801371a:	4285      	cmp	r5, r0
 801371c:	dc27      	bgt.n	801376e <mktime+0x92>
 801371e:	2318      	movs	r3, #24
 8013720:	3d01      	subs	r5, #1
 8013722:	4435      	add	r5, r6
 8013724:	435d      	muls	r5, r3
 8013726:	68a3      	ldr	r3, [r4, #8]
 8013728:	2b17      	cmp	r3, #23
 801372a:	d820      	bhi.n	801376e <mktime+0x92>
 801372c:	213c      	movs	r1, #60	; 0x3c
 801372e:	442b      	add	r3, r5
 8013730:	fb01 f203 	mul.w	r2, r1, r3
 8013734:	6863      	ldr	r3, [r4, #4]
 8013736:	2b3b      	cmp	r3, #59	; 0x3b
 8013738:	d819      	bhi.n	801376e <mktime+0x92>
 801373a:	6820      	ldr	r0, [r4, #0]
 801373c:	4413      	add	r3, r2
 801373e:	283b      	cmp	r0, #59	; 0x3b
 8013740:	fb01 f303 	mul.w	r3, r1, r3
 8013744:	d813      	bhi.n	801376e <mktime+0x92>
 8013746:	4418      	add	r0, r3
 8013748:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801374c:	4628      	mov	r0, r5
 801374e:	f7ff ff9f 	bl	8013690 <isleapyear>
 8013752:	2800      	cmp	r0, #0
 8013754:	bf14      	ite	ne
 8013756:	f44f 73b7 	movne.w	r3, #366	; 0x16e
 801375a:	4643      	moveq	r3, r8
 801375c:	3501      	adds	r5, #1
 801375e:	441e      	add	r6, r3
 8013760:	e7cd      	b.n	80136fe <mktime+0x22>
 8013762:	4628      	mov	r0, r5
 8013764:	f7ff ffaa 	bl	80136bc <getdaysofmonth>
 8013768:	3501      	adds	r5, #1
 801376a:	4406      	add	r6, r0
 801376c:	e7cd      	b.n	801370a <mktime+0x2e>
 801376e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8013772:	e7e9      	b.n	8013748 <mktime+0x6c>

08013774 <gettimeofday>:
 8013774:	b538      	push	{r3, r4, r5, lr}
 8013776:	4b10      	ldr	r3, [pc, #64]	; (80137b8 <gettimeofday+0x44>)
 8013778:	4a10      	ldr	r2, [pc, #64]	; (80137bc <gettimeofday+0x48>)
 801377a:	681b      	ldr	r3, [r3, #0]
 801377c:	6814      	ldr	r4, [r2, #0]
 801377e:	6013      	str	r3, [r2, #0]
 8013780:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8013784:	429c      	cmp	r4, r3
 8013786:	bf2c      	ite	cs
 8013788:	1ae4      	subcs	r4, r4, r3
 801378a:	1b1c      	subcc	r4, r3, r4
 801378c:	4354      	muls	r4, r2
 801378e:	4b0c      	ldr	r3, [pc, #48]	; (80137c0 <gettimeofday+0x4c>)
 8013790:	4605      	mov	r5, r0
 8013792:	e9d3 2100 	ldrd	r2, r1, [r3]
 8013796:	18a4      	adds	r4, r4, r2
 8013798:	f141 0100 	adc.w	r1, r1, #0
 801379c:	e9c3 4100 	strd	r4, r1, [r3]
 80137a0:	4620      	mov	r0, r4
 80137a2:	2300      	movs	r3, #0
 80137a4:	4a07      	ldr	r2, [pc, #28]	; (80137c4 <gettimeofday+0x50>)
 80137a6:	f7f4 fbc3 	bl	8007f30 <__aeabi_uldivmod>
 80137aa:	4b06      	ldr	r3, [pc, #24]	; (80137c4 <gettimeofday+0x50>)
 80137ac:	6028      	str	r0, [r5, #0]
 80137ae:	fb03 4410 	mls	r4, r3, r0, r4
 80137b2:	2000      	movs	r0, #0
 80137b4:	606c      	str	r4, [r5, #4]
 80137b6:	bd38      	pop	{r3, r4, r5, pc}
 80137b8:	2001ce4c 	andcs	ip, r1, ip, asr #28
 80137bc:	2001ce48 	andcs	ip, r1, r8, asr #28
 80137c0:	2001ce40 	andcs	ip, r1, r0, asr #28
 80137c4:	000f4240 	andeq	r4, pc, r0, asr #4

080137c8 <settimeofday>:
 80137c8:	4b07      	ldr	r3, [pc, #28]	; (80137e8 <settimeofday+0x20>)
 80137ca:	b510      	push	{r4, lr}
 80137cc:	681a      	ldr	r2, [r3, #0]
 80137ce:	4b07      	ldr	r3, [pc, #28]	; (80137ec <settimeofday+0x24>)
 80137d0:	6804      	ldr	r4, [r0, #0]
 80137d2:	601a      	str	r2, [r3, #0]
 80137d4:	6843      	ldr	r3, [r0, #4]
 80137d6:	4806      	ldr	r0, [pc, #24]	; (80137f0 <settimeofday+0x28>)
 80137d8:	17da      	asrs	r2, r3, #31
 80137da:	fbc4 3200 	smlal	r3, r2, r4, r0
 80137de:	4905      	ldr	r1, [pc, #20]	; (80137f4 <settimeofday+0x2c>)
 80137e0:	2000      	movs	r0, #0
 80137e2:	e9c1 3200 	strd	r3, r2, [r1]
 80137e6:	bd10      	pop	{r4, pc}
 80137e8:	2001ce4c 	andcs	ip, r1, ip, asr #28
 80137ec:	2001ce48 	andcs	ip, r1, r8, asr #28
 80137f0:	000f4240 	andeq	r4, pc, r0, asr #4
 80137f4:	2001ce40 	andcs	ip, r1, r0, asr #28

080137f8 <time>:
 80137f8:	b513      	push	{r0, r1, r4, lr}
 80137fa:	4604      	mov	r4, r0
 80137fc:	2100      	movs	r1, #0
 80137fe:	4668      	mov	r0, sp
 8013800:	f7ff ffb8 	bl	8013774 <gettimeofday>
 8013804:	9800      	ldr	r0, [sp, #0]
 8013806:	b104      	cbz	r4, 801380a <time+0x12>
 8013808:	6020      	str	r0, [r4, #0]
 801380a:	b002      	add	sp, #8
 801380c:	bd10      	pop	{r4, pc}
	...

08013810 <uart0_init>:
 8013810:	2301      	movs	r3, #1
 8013812:	b507      	push	{r0, r1, r2, lr}
 8013814:	2208      	movs	r2, #8
 8013816:	9300      	str	r3, [sp, #0]
 8013818:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
 801381c:	2300      	movs	r3, #0
 801381e:	4803      	ldr	r0, [pc, #12]	; (801382c <uart0_init+0x1c>)
 8013820:	f001 f8b2 	bl	8014988 <gd32_uart_begin>
 8013824:	b003      	add	sp, #12
 8013826:	f85d fb04 	ldr.w	pc, [sp], #4
 801382a:	bf00      	nop
 801382c:	40013800 	andmi	r3, r1, r0, lsl #16

08013830 <uart0_putc>:
 8013830:	280a      	cmp	r0, #10
 8013832:	b538      	push	{r3, r4, r5, lr}
 8013834:	4604      	mov	r4, r0
 8013836:	d10a      	bne.n	801384e <uart0_putc+0x1e>
 8013838:	4d0b      	ldr	r5, [pc, #44]	; (8013868 <uart0_putc+0x38>)
 801383a:	2107      	movs	r1, #7
 801383c:	4628      	mov	r0, r5
 801383e:	f000 fe2b 	bl	8014498 <usart_flag_get>
 8013842:	2800      	cmp	r0, #0
 8013844:	d0f9      	beq.n	801383a <uart0_putc+0xa>
 8013846:	220d      	movs	r2, #13
 8013848:	4b08      	ldr	r3, [pc, #32]	; (801386c <uart0_putc+0x3c>)
 801384a:	f8c3 2804 	str.w	r2, [r3, #2052]	; 0x804
 801384e:	4d06      	ldr	r5, [pc, #24]	; (8013868 <uart0_putc+0x38>)
 8013850:	2107      	movs	r1, #7
 8013852:	4628      	mov	r0, r5
 8013854:	f000 fe20 	bl	8014498 <usart_flag_get>
 8013858:	2800      	cmp	r0, #0
 801385a:	d0f9      	beq.n	8013850 <uart0_putc+0x20>
 801385c:	4b03      	ldr	r3, [pc, #12]	; (801386c <uart0_putc+0x3c>)
 801385e:	b2e4      	uxtb	r4, r4
 8013860:	f8c3 4804 	str.w	r4, [r3, #2052]	; 0x804
 8013864:	bd38      	pop	{r3, r4, r5, pc}
 8013866:	bf00      	nop
 8013868:	40013800 	andmi	r3, r1, r0, lsl #16
 801386c:	40013000 	andmi	r3, r1, r0

08013870 <uart0_puts>:
 8013870:	b510      	push	{r4, lr}
 8013872:	1e44      	subs	r4, r0, #1
 8013874:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8013878:	b903      	cbnz	r3, 801387c <uart0_puts+0xc>
 801387a:	bd10      	pop	{r4, pc}
 801387c:	2b0a      	cmp	r3, #10
 801387e:	d102      	bne.n	8013886 <uart0_puts+0x16>
 8013880:	200d      	movs	r0, #13
 8013882:	f7ff ffd5 	bl	8013830 <uart0_putc>
 8013886:	7820      	ldrb	r0, [r4, #0]
 8013888:	f7ff ffd2 	bl	8013830 <uart0_putc>
 801388c:	e7f2      	b.n	8013874 <uart0_puts+0x4>
	...

08013890 <systick_config>:
 8013890:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8013894:	4b0b      	ldr	r3, [pc, #44]	; (80138c4 <systick_config+0x34>)
 8013896:	681b      	ldr	r3, [r3, #0]
 8013898:	fbb3 f3f2 	udiv	r3, r3, r2
 801389c:	3b01      	subs	r3, #1
 801389e:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 80138a2:	d20d      	bcs.n	80138c0 <systick_config+0x30>
 80138a4:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 80138a8:	21f0      	movs	r1, #240	; 0xf0
 80138aa:	6153      	str	r3, [r2, #20]
 80138ac:	4b06      	ldr	r3, [pc, #24]	; (80138c8 <systick_config+0x38>)
 80138ae:	2007      	movs	r0, #7
 80138b0:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 80138b4:	2100      	movs	r1, #0
 80138b6:	6191      	str	r1, [r2, #24]
 80138b8:	6110      	str	r0, [r2, #16]
 80138ba:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 80138be:	4770      	bx	lr
 80138c0:	e7fe      	b.n	80138c0 <systick_config+0x30>
 80138c2:	bf00      	nop
 80138c4:	200000e4 	andcs	r0, r0, r4, ror #1
 80138c8:	e000ed00 	and	lr, r0, r0, lsl #26

080138cc <SysTick_Handler>:
 80138cc:	4a02      	ldr	r2, [pc, #8]	; (80138d8 <SysTick_Handler+0xc>)
 80138ce:	6813      	ldr	r3, [r2, #0]
 80138d0:	3301      	adds	r3, #1
 80138d2:	6013      	str	r3, [r2, #0]
 80138d4:	4770      	bx	lr
 80138d6:	bf00      	nop
 80138d8:	2001ce4c 	andcs	ip, r1, ip, asr #28

080138dc <SystemInit>:
 80138dc:	4b3a      	ldr	r3, [pc, #232]	; (80139c8 <SystemInit+0xec>)
 80138de:	681a      	ldr	r2, [r3, #0]
 80138e0:	f042 0201 	orr.w	r2, r2, #1
 80138e4:	601a      	str	r2, [r3, #0]
 80138e6:	6859      	ldr	r1, [r3, #4]
 80138e8:	4a38      	ldr	r2, [pc, #224]	; (80139cc <SystemInit+0xf0>)
 80138ea:	400a      	ands	r2, r1
 80138ec:	605a      	str	r2, [r3, #4]
 80138ee:	681a      	ldr	r2, [r3, #0]
 80138f0:	f44f 017f 	mov.w	r1, #16711680	; 0xff0000
 80138f4:	f022 7284 	bic.w	r2, r2, #17301504	; 0x1080000
 80138f8:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 80138fc:	601a      	str	r2, [r3, #0]
 80138fe:	681a      	ldr	r2, [r3, #0]
 8013900:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8013904:	601a      	str	r2, [r3, #0]
 8013906:	685a      	ldr	r2, [r3, #4]
 8013908:	f022 5203 	bic.w	r2, r2, #549453824	; 0x20c00000
 801390c:	f422 127c 	bic.w	r2, r2, #4128768	; 0x3f0000
 8013910:	605a      	str	r2, [r3, #4]
 8013912:	681a      	ldr	r2, [r3, #0]
 8013914:	f022 52a0 	bic.w	r2, r2, #335544320	; 0x14000000
 8013918:	601a      	str	r2, [r3, #0]
 801391a:	2200      	movs	r2, #0
 801391c:	62da      	str	r2, [r3, #44]	; 0x2c
 801391e:	6099      	str	r1, [r3, #8]
 8013920:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 8013924:	f8d3 2090 	ldr.w	r2, [r3, #144]	; 0x90
 8013928:	f022 5280 	bic.w	r2, r2, #268435456	; 0x10000000
 801392c:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
 8013930:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
 8013934:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
 8013938:	4a25      	ldr	r2, [pc, #148]	; (80139d0 <SystemInit+0xf4>)
 801393a:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
 801393e:	681a      	ldr	r2, [r3, #0]
 8013940:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8013944:	601a      	str	r2, [r3, #0]
 8013946:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801394a:	6819      	ldr	r1, [r3, #0]
 801394c:	0389      	lsls	r1, r1, #14
 801394e:	d401      	bmi.n	8013954 <SystemInit+0x78>
 8013950:	3a01      	subs	r2, #1
 8013952:	d1fa      	bne.n	801394a <SystemInit+0x6e>
 8013954:	681a      	ldr	r2, [r3, #0]
 8013956:	0392      	lsls	r2, r2, #14
 8013958:	d400      	bmi.n	801395c <SystemInit+0x80>
 801395a:	e7fe      	b.n	801395a <SystemInit+0x7e>
 801395c:	685a      	ldr	r2, [r3, #4]
 801395e:	605a      	str	r2, [r3, #4]
 8013960:	685a      	ldr	r2, [r3, #4]
 8013962:	605a      	str	r2, [r3, #4]
 8013964:	685a      	ldr	r2, [r3, #4]
 8013966:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 801396a:	605a      	str	r2, [r3, #4]
 801396c:	685a      	ldr	r2, [r3, #4]
 801396e:	f022 5200 	bic.w	r2, r2, #536870912	; 0x20000000
 8013972:	f422 127c 	bic.w	r2, r2, #4128768	; 0x3f0000
 8013976:	605a      	str	r2, [r3, #4]
 8013978:	685a      	ldr	r2, [r3, #4]
 801397a:	f442 1204 	orr.w	r2, r2, #2162688	; 0x210000
 801397e:	605a      	str	r2, [r3, #4]
 8013980:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8013982:	4a14      	ldr	r2, [pc, #80]	; (80139d4 <SystemInit+0xf8>)
 8013984:	400a      	ands	r2, r1
 8013986:	62da      	str	r2, [r3, #44]	; 0x2c
 8013988:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 801398a:	f442 3285 	orr.w	r2, r2, #68096	; 0x10a00
 801398e:	f042 0244 	orr.w	r2, r2, #68	; 0x44
 8013992:	62da      	str	r2, [r3, #44]	; 0x2c
 8013994:	681a      	ldr	r2, [r3, #0]
 8013996:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 801399a:	601a      	str	r2, [r3, #0]
 801399c:	681a      	ldr	r2, [r3, #0]
 801399e:	0110      	lsls	r0, r2, #4
 80139a0:	d5fc      	bpl.n	801399c <SystemInit+0xc0>
 80139a2:	681a      	ldr	r2, [r3, #0]
 80139a4:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 80139a8:	601a      	str	r2, [r3, #0]
 80139aa:	681a      	ldr	r2, [r3, #0]
 80139ac:	0191      	lsls	r1, r2, #6
 80139ae:	d5fc      	bpl.n	80139aa <SystemInit+0xce>
 80139b0:	685a      	ldr	r2, [r3, #4]
 80139b2:	f022 0203 	bic.w	r2, r2, #3
 80139b6:	605a      	str	r2, [r3, #4]
 80139b8:	685a      	ldr	r2, [r3, #4]
 80139ba:	f042 0202 	orr.w	r2, r2, #2
 80139be:	605a      	str	r2, [r3, #4]
 80139c0:	685a      	ldr	r2, [r3, #4]
 80139c2:	0712      	lsls	r2, r2, #28
 80139c4:	d5fc      	bpl.n	80139c0 <SystemInit+0xe4>
 80139c6:	4770      	bx	lr
 80139c8:	40021000 	andmi	r1, r2, r0
 80139cc:	e0ff000c 	rscs	r0, pc, ip
 80139d0:	20003010 	andcs	r3, r0, r0, lsl r0
 80139d4:	fffef000 			; <UNDEFINED> instruction: 0xfffef000

080139d8 <bkp_deinit>:
 80139d8:	b508      	push	{r3, lr}
 80139da:	f000 f9df 	bl	8013d9c <rcu_bkp_reset_enable>
 80139de:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80139e2:	f000 b9e3 	b.w	8013dac <rcu_bkp_reset_disable>
	...

080139e8 <bkp_data_write>:
 80139e8:	f1a0 030b 	sub.w	r3, r0, #11
 80139ec:	2b1f      	cmp	r3, #31
 80139ee:	d804      	bhi.n	80139fa <bkp_data_write+0x12>
 80139f0:	4b07      	ldr	r3, [pc, #28]	; (8013a10 <bkp_data_write+0x28>)
 80139f2:	4403      	add	r3, r0
 80139f4:	009b      	lsls	r3, r3, #2
 80139f6:	8019      	strh	r1, [r3, #0]
 80139f8:	4770      	bx	lr
 80139fa:	1e43      	subs	r3, r0, #1
 80139fc:	2b09      	cmp	r3, #9
 80139fe:	bf9f      	itttt	ls
 8013a00:	f100 5080 	addls.w	r0, r0, #268435456	; 0x10000000
 8013a04:	f500 50d8 	addls.w	r0, r0, #6912	; 0x1b00
 8013a08:	0080      	lslls	r0, r0, #2
 8013a0a:	8001      	strhls	r1, [r0, #0]
 8013a0c:	4770      	bx	lr
 8013a0e:	bf00      	nop
 8013a10:	10001b05 	andne	r1, r0, r5, lsl #22

08013a14 <bkp_data_read>:
 8013a14:	f1a0 030b 	sub.w	r3, r0, #11
 8013a18:	2b1f      	cmp	r3, #31
 8013a1a:	d805      	bhi.n	8013a28 <bkp_data_read+0x14>
 8013a1c:	4b08      	ldr	r3, [pc, #32]	; (8013a40 <bkp_data_read+0x2c>)
 8013a1e:	4403      	add	r3, r0
 8013a20:	009b      	lsls	r3, r3, #2
 8013a22:	8818      	ldrh	r0, [r3, #0]
 8013a24:	b280      	uxth	r0, r0
 8013a26:	4770      	bx	lr
 8013a28:	1e43      	subs	r3, r0, #1
 8013a2a:	2b09      	cmp	r3, #9
 8013a2c:	d806      	bhi.n	8013a3c <bkp_data_read+0x28>
 8013a2e:	f100 5080 	add.w	r0, r0, #268435456	; 0x10000000
 8013a32:	f500 50d8 	add.w	r0, r0, #6912	; 0x1b00
 8013a36:	0080      	lsls	r0, r0, #2
 8013a38:	8800      	ldrh	r0, [r0, #0]
 8013a3a:	e7f3      	b.n	8013a24 <bkp_data_read+0x10>
 8013a3c:	2000      	movs	r0, #0
 8013a3e:	4770      	bx	lr
 8013a40:	10001b05 	andne	r1, r0, r5, lsl #22

08013a44 <dma_deinit>:
 8013a44:	2314      	movs	r3, #20
 8013a46:	fb03 0301 	mla	r3, r3, r1, r0
 8013a4a:	689a      	ldr	r2, [r3, #8]
 8013a4c:	b530      	push	{r4, r5, lr}
 8013a4e:	f022 0201 	bic.w	r2, r2, #1
 8013a52:	609a      	str	r2, [r3, #8]
 8013a54:	2200      	movs	r2, #0
 8013a56:	609a      	str	r2, [r3, #8]
 8013a58:	60da      	str	r2, [r3, #12]
 8013a5a:	611a      	str	r2, [r3, #16]
 8013a5c:	615a      	str	r2, [r3, #20]
 8013a5e:	230f      	movs	r3, #15
 8013a60:	6844      	ldr	r4, [r0, #4]
 8013a62:	008d      	lsls	r5, r1, #2
 8013a64:	40ab      	lsls	r3, r5
 8013a66:	4323      	orrs	r3, r4
 8013a68:	6043      	str	r3, [r0, #4]
 8013a6a:	4b04      	ldr	r3, [pc, #16]	; (8013a7c <dma_deinit+0x38>)
 8013a6c:	4298      	cmp	r0, r3
 8013a6e:	d103      	bne.n	8013a78 <dma_deinit+0x34>
 8013a70:	2905      	cmp	r1, #5
 8013a72:	bf08      	it	eq
 8013a74:	f8c3 2300 	streq.w	r2, [r3, #768]	; 0x300
 8013a78:	bd30      	pop	{r4, r5, pc}
 8013a7a:	bf00      	nop
 8013a7c:	40020400 	andmi	r0, r2, r0, lsl #8

08013a80 <dma_struct_para_init>:
 8013a80:	2300      	movs	r3, #0
 8013a82:	e9c0 3300 	strd	r3, r3, [r0]
 8013a86:	e9c0 3302 	strd	r3, r3, [r0, #8]
 8013a8a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8013a8e:	8303      	strh	r3, [r0, #24]
 8013a90:	7683      	strb	r3, [r0, #26]
 8013a92:	4770      	bx	lr

08013a94 <dma_init>:
 8013a94:	2314      	movs	r3, #20
 8013a96:	fb03 0101 	mla	r1, r3, r1, r0
 8013a9a:	6813      	ldr	r3, [r2, #0]
 8013a9c:	b510      	push	{r4, lr}
 8013a9e:	610b      	str	r3, [r1, #16]
 8013aa0:	6893      	ldr	r3, [r2, #8]
 8013aa2:	614b      	str	r3, [r1, #20]
 8013aa4:	8a13      	ldrh	r3, [r2, #16]
 8013aa6:	60cb      	str	r3, [r1, #12]
 8013aa8:	68d4      	ldr	r4, [r2, #12]
 8013aaa:	6853      	ldr	r3, [r2, #4]
 8013aac:	6888      	ldr	r0, [r1, #8]
 8013aae:	4323      	orrs	r3, r4
 8013ab0:	6954      	ldr	r4, [r2, #20]
 8013ab2:	f420 507c 	bic.w	r0, r0, #16128	; 0x3f00
 8013ab6:	4323      	orrs	r3, r4
 8013ab8:	4303      	orrs	r3, r0
 8013aba:	608b      	str	r3, [r1, #8]
 8013abc:	7e13      	ldrb	r3, [r2, #24]
 8013abe:	2b01      	cmp	r3, #1
 8013ac0:	688b      	ldr	r3, [r1, #8]
 8013ac2:	bf0c      	ite	eq
 8013ac4:	f043 0340 	orreq.w	r3, r3, #64	; 0x40
 8013ac8:	f023 0340 	bicne.w	r3, r3, #64	; 0x40
 8013acc:	608b      	str	r3, [r1, #8]
 8013ace:	7e53      	ldrb	r3, [r2, #25]
 8013ad0:	2b01      	cmp	r3, #1
 8013ad2:	688b      	ldr	r3, [r1, #8]
 8013ad4:	bf0c      	ite	eq
 8013ad6:	f043 0380 	orreq.w	r3, r3, #128	; 0x80
 8013ada:	f023 0380 	bicne.w	r3, r3, #128	; 0x80
 8013ade:	608b      	str	r3, [r1, #8]
 8013ae0:	7e93      	ldrb	r3, [r2, #26]
 8013ae2:	b923      	cbnz	r3, 8013aee <dma_init+0x5a>
 8013ae4:	688b      	ldr	r3, [r1, #8]
 8013ae6:	f023 0310 	bic.w	r3, r3, #16
 8013aea:	608b      	str	r3, [r1, #8]
 8013aec:	bd10      	pop	{r4, pc}
 8013aee:	688b      	ldr	r3, [r1, #8]
 8013af0:	f043 0310 	orr.w	r3, r3, #16
 8013af4:	e7f9      	b.n	8013aea <dma_init+0x56>

08013af6 <dma_circulation_disable>:
 8013af6:	2314      	movs	r3, #20
 8013af8:	4359      	muls	r1, r3
 8013afa:	3008      	adds	r0, #8
 8013afc:	580b      	ldr	r3, [r1, r0]
 8013afe:	f023 0320 	bic.w	r3, r3, #32
 8013b02:	500b      	str	r3, [r1, r0]
 8013b04:	4770      	bx	lr

08013b06 <dma_memory_to_memory_disable>:
 8013b06:	2314      	movs	r3, #20
 8013b08:	4359      	muls	r1, r3
 8013b0a:	3008      	adds	r0, #8
 8013b0c:	580b      	ldr	r3, [r1, r0]
 8013b0e:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8013b12:	500b      	str	r3, [r1, r0]
 8013b14:	4770      	bx	lr
	...

08013b18 <fmc_bank0_unlock>:
 8013b18:	4b04      	ldr	r3, [pc, #16]	; (8013b2c <fmc_bank0_unlock+0x14>)
 8013b1a:	691a      	ldr	r2, [r3, #16]
 8013b1c:	0612      	lsls	r2, r2, #24
 8013b1e:	bf41      	itttt	mi
 8013b20:	4a03      	ldrmi	r2, [pc, #12]	; (8013b30 <fmc_bank0_unlock+0x18>)
 8013b22:	605a      	strmi	r2, [r3, #4]
 8013b24:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 8013b28:	605a      	strmi	r2, [r3, #4]
 8013b2a:	4770      	bx	lr
 8013b2c:	40022000 	andmi	r2, r2, r0
 8013b30:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

08013b34 <fmc_bank1_unlock>:
 8013b34:	4b04      	ldr	r3, [pc, #16]	; (8013b48 <fmc_bank1_unlock+0x14>)
 8013b36:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8013b38:	0612      	lsls	r2, r2, #24
 8013b3a:	bf41      	itttt	mi
 8013b3c:	4a03      	ldrmi	r2, [pc, #12]	; (8013b4c <fmc_bank1_unlock+0x18>)
 8013b3e:	645a      	strmi	r2, [r3, #68]	; 0x44
 8013b40:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 8013b44:	645a      	strmi	r2, [r3, #68]	; 0x44
 8013b46:	4770      	bx	lr
 8013b48:	40022000 	andmi	r2, r2, r0
 8013b4c:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

08013b50 <fmc_bank0_lock>:
 8013b50:	4a02      	ldr	r2, [pc, #8]	; (8013b5c <fmc_bank0_lock+0xc>)
 8013b52:	6913      	ldr	r3, [r2, #16]
 8013b54:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8013b58:	6113      	str	r3, [r2, #16]
 8013b5a:	4770      	bx	lr
 8013b5c:	40022000 	andmi	r2, r2, r0

08013b60 <fmc_bank1_lock>:
 8013b60:	4a02      	ldr	r2, [pc, #8]	; (8013b6c <fmc_bank1_lock+0xc>)
 8013b62:	6d13      	ldr	r3, [r2, #80]	; 0x50
 8013b64:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8013b68:	6513      	str	r3, [r2, #80]	; 0x50
 8013b6a:	4770      	bx	lr
 8013b6c:	40022000 	andmi	r2, r2, r0

08013b70 <fmc_bank0_state_get>:
 8013b70:	4b07      	ldr	r3, [pc, #28]	; (8013b90 <fmc_bank0_state_get+0x20>)
 8013b72:	68da      	ldr	r2, [r3, #12]
 8013b74:	07d1      	lsls	r1, r2, #31
 8013b76:	d407      	bmi.n	8013b88 <fmc_bank0_state_get+0x18>
 8013b78:	68da      	ldr	r2, [r3, #12]
 8013b7a:	06d2      	lsls	r2, r2, #27
 8013b7c:	d406      	bmi.n	8013b8c <fmc_bank0_state_get+0x1c>
 8013b7e:	68d8      	ldr	r0, [r3, #12]
 8013b80:	f3c0 0080 	ubfx	r0, r0, #2, #1
 8013b84:	0040      	lsls	r0, r0, #1
 8013b86:	4770      	bx	lr
 8013b88:	2001      	movs	r0, #1
 8013b8a:	4770      	bx	lr
 8013b8c:	2003      	movs	r0, #3
 8013b8e:	4770      	bx	lr
 8013b90:	40022000 	andmi	r2, r2, r0

08013b94 <fmc_bank1_state_get>:
 8013b94:	4b07      	ldr	r3, [pc, #28]	; (8013bb4 <fmc_bank1_state_get+0x20>)
 8013b96:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8013b98:	07d1      	lsls	r1, r2, #31
 8013b9a:	d407      	bmi.n	8013bac <fmc_bank1_state_get+0x18>
 8013b9c:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8013b9e:	06d2      	lsls	r2, r2, #27
 8013ba0:	d406      	bmi.n	8013bb0 <fmc_bank1_state_get+0x1c>
 8013ba2:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8013ba4:	f3c0 0080 	ubfx	r0, r0, #2, #1
 8013ba8:	0040      	lsls	r0, r0, #1
 8013baa:	4770      	bx	lr
 8013bac:	2001      	movs	r0, #1
 8013bae:	4770      	bx	lr
 8013bb0:	2003      	movs	r0, #3
 8013bb2:	4770      	bx	lr
 8013bb4:	40022000 	andmi	r2, r2, r0

08013bb8 <fwdgt_enable>:
 8013bb8:	f64c 42cc 	movw	r2, #52428	; 0xcccc
 8013bbc:	4b01      	ldr	r3, [pc, #4]	; (8013bc4 <fwdgt_enable+0xc>)
 8013bbe:	601a      	str	r2, [r3, #0]
 8013bc0:	4770      	bx	lr
 8013bc2:	bf00      	nop
 8013bc4:	40003000 	andmi	r3, r0, r0

08013bc8 <fwdgt_counter_reload>:
 8013bc8:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
 8013bcc:	4b01      	ldr	r3, [pc, #4]	; (8013bd4 <fwdgt_counter_reload+0xc>)
 8013bce:	601a      	str	r2, [r3, #0]
 8013bd0:	4770      	bx	lr
 8013bd2:	bf00      	nop
 8013bd4:	40003000 	andmi	r3, r0, r0

08013bd8 <fwdgt_config>:
 8013bd8:	f245 5355 	movw	r3, #21845	; 0x5555
 8013bdc:	4a11      	ldr	r2, [pc, #68]	; (8013c24 <fwdgt_config+0x4c>)
 8013bde:	b510      	push	{r4, lr}
 8013be0:	4c11      	ldr	r4, [pc, #68]	; (8013c28 <fwdgt_config+0x50>)
 8013be2:	6013      	str	r3, [r2, #0]
 8013be4:	68d3      	ldr	r3, [r2, #12]
 8013be6:	3c01      	subs	r4, #1
 8013be8:	f003 0301 	and.w	r3, r3, #1
 8013bec:	d013      	beq.n	8013c16 <fwdgt_config+0x3e>
 8013bee:	2b00      	cmp	r3, #0
 8013bf0:	d1f8      	bne.n	8013be4 <fwdgt_config+0xc>
 8013bf2:	6051      	str	r1, [r2, #4]
 8013bf4:	490c      	ldr	r1, [pc, #48]	; (8013c28 <fwdgt_config+0x50>)
 8013bf6:	4a0b      	ldr	r2, [pc, #44]	; (8013c24 <fwdgt_config+0x4c>)
 8013bf8:	68d3      	ldr	r3, [r2, #12]
 8013bfa:	3901      	subs	r1, #1
 8013bfc:	f003 0302 	and.w	r3, r3, #2
 8013c00:	d00d      	beq.n	8013c1e <fwdgt_config+0x46>
 8013c02:	2b00      	cmp	r3, #0
 8013c04:	d1f8      	bne.n	8013bf8 <fwdgt_config+0x20>
 8013c06:	f64a 23aa 	movw	r3, #43690	; 0xaaaa
 8013c0a:	f3c0 000b 	ubfx	r0, r0, #0, #12
 8013c0e:	6090      	str	r0, [r2, #8]
 8013c10:	2001      	movs	r0, #1
 8013c12:	6013      	str	r3, [r2, #0]
 8013c14:	e002      	b.n	8013c1c <fwdgt_config+0x44>
 8013c16:	2b00      	cmp	r3, #0
 8013c18:	d0eb      	beq.n	8013bf2 <fwdgt_config+0x1a>
 8013c1a:	2000      	movs	r0, #0
 8013c1c:	bd10      	pop	{r4, pc}
 8013c1e:	2b00      	cmp	r3, #0
 8013c20:	d1fb      	bne.n	8013c1a <fwdgt_config+0x42>
 8013c22:	e7f0      	b.n	8013c06 <fwdgt_config+0x2e>
 8013c24:	40003000 	andmi	r3, r0, r0
 8013c28:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

08013c2c <gpio_init>:
 8013c2c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013c30:	f04f 0c0f 	mov.w	ip, #15
 8013c34:	06cf      	lsls	r7, r1, #27
 8013c36:	f04f 0400 	mov.w	r4, #0
 8013c3a:	f04f 0701 	mov.w	r7, #1
 8013c3e:	f001 050f 	and.w	r5, r1, #15
 8013c42:	bf48      	it	mi
 8013c44:	4315      	orrmi	r5, r2
 8013c46:	fa23 f204 	lsr.w	r2, r3, r4
 8013c4a:	07d6      	lsls	r6, r2, #31
 8013c4c:	d510      	bpl.n	8013c70 <gpio_init+0x44>
 8013c4e:	00a2      	lsls	r2, r4, #2
 8013c50:	6806      	ldr	r6, [r0, #0]
 8013c52:	fa0c fe02 	lsl.w	lr, ip, r2
 8013c56:	ea26 060e 	bic.w	r6, r6, lr
 8013c5a:	fa05 f202 	lsl.w	r2, r5, r2
 8013c5e:	2928      	cmp	r1, #40	; 0x28
 8013c60:	ea42 0206 	orr.w	r2, r2, r6
 8013c64:	d128      	bne.n	8013cb8 <gpio_init+0x8c>
 8013c66:	fa07 f604 	lsl.w	r6, r7, r4
 8013c6a:	401e      	ands	r6, r3
 8013c6c:	6146      	str	r6, [r0, #20]
 8013c6e:	6002      	str	r2, [r0, #0]
 8013c70:	3401      	adds	r4, #1
 8013c72:	2c08      	cmp	r4, #8
 8013c74:	d1e7      	bne.n	8013c46 <gpio_init+0x1a>
 8013c76:	2600      	movs	r6, #0
 8013c78:	f04f 0c0f 	mov.w	ip, #15
 8013c7c:	2701      	movs	r7, #1
 8013c7e:	f106 0208 	add.w	r2, r6, #8
 8013c82:	fa23 f402 	lsr.w	r4, r3, r2
 8013c86:	07e4      	lsls	r4, r4, #31
 8013c88:	d511      	bpl.n	8013cae <gpio_init+0x82>
 8013c8a:	00b4      	lsls	r4, r6, #2
 8013c8c:	f8d0 e004 	ldr.w	lr, [r0, #4]
 8013c90:	fa0c f804 	lsl.w	r8, ip, r4
 8013c94:	ea2e 0e08 	bic.w	lr, lr, r8
 8013c98:	fa05 f404 	lsl.w	r4, r5, r4
 8013c9c:	2928      	cmp	r1, #40	; 0x28
 8013c9e:	ea44 040e 	orr.w	r4, r4, lr
 8013ca2:	d110      	bne.n	8013cc6 <gpio_init+0x9a>
 8013ca4:	fa07 f202 	lsl.w	r2, r7, r2
 8013ca8:	401a      	ands	r2, r3
 8013caa:	6142      	str	r2, [r0, #20]
 8013cac:	6044      	str	r4, [r0, #4]
 8013cae:	3601      	adds	r6, #1
 8013cb0:	2e08      	cmp	r6, #8
 8013cb2:	d1e4      	bne.n	8013c7e <gpio_init+0x52>
 8013cb4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013cb8:	2948      	cmp	r1, #72	; 0x48
 8013cba:	bf02      	ittt	eq
 8013cbc:	fa07 f604 	lsleq.w	r6, r7, r4
 8013cc0:	401e      	andeq	r6, r3
 8013cc2:	6106      	streq	r6, [r0, #16]
 8013cc4:	e7d3      	b.n	8013c6e <gpio_init+0x42>
 8013cc6:	2948      	cmp	r1, #72	; 0x48
 8013cc8:	bf02      	ittt	eq
 8013cca:	fa07 f202 	lsleq.w	r2, r7, r2
 8013cce:	401a      	andeq	r2, r3
 8013cd0:	6102      	streq	r2, [r0, #16]
 8013cd2:	e7eb      	b.n	8013cac <gpio_init+0x80>

08013cd4 <gpio_pin_remap_config>:
 8013cd4:	2800      	cmp	r0, #0
 8013cd6:	4a16      	ldr	r2, [pc, #88]	; (8013d30 <gpio_pin_remap_config+0x5c>)
 8013cd8:	b530      	push	{r4, r5, lr}
 8013cda:	f400 1540 	and.w	r5, r0, #3145728	; 0x300000
 8013cde:	bfb4      	ite	lt
 8013ce0:	69d3      	ldrlt	r3, [r2, #28]
 8013ce2:	6853      	ldrge	r3, [r2, #4]
 8013ce4:	f5b5 1f40 	cmp.w	r5, #3145728	; 0x300000
 8013ce8:	b284      	uxth	r4, r0
 8013cea:	d110      	bne.n	8013d0e <gpio_pin_remap_config+0x3a>
 8013cec:	6855      	ldr	r5, [r2, #4]
 8013cee:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 8013cf2:	f025 6570 	bic.w	r5, r5, #251658240	; 0xf000000
 8013cf6:	6055      	str	r5, [r2, #4]
 8013cf8:	b119      	cbz	r1, 8013d02 <gpio_pin_remap_config+0x2e>
 8013cfa:	0d42      	lsrs	r2, r0, #21
 8013cfc:	0112      	lsls	r2, r2, #4
 8013cfe:	4094      	lsls	r4, r2
 8013d00:	4323      	orrs	r3, r4
 8013d02:	4a0b      	ldr	r2, [pc, #44]	; (8013d30 <gpio_pin_remap_config+0x5c>)
 8013d04:	2800      	cmp	r0, #0
 8013d06:	bfb4      	ite	lt
 8013d08:	61d3      	strlt	r3, [r2, #28]
 8013d0a:	6053      	strge	r3, [r2, #4]
 8013d0c:	bd30      	pop	{r4, r5, pc}
 8013d0e:	02c2      	lsls	r2, r0, #11
 8013d10:	bf4d      	iteet	mi
 8013d12:	2203      	movmi	r2, #3
 8013d14:	0d42      	lsrpl	r2, r0, #21
 8013d16:	0112      	lslpl	r2, r2, #4
 8013d18:	f3c0 4503 	ubfxmi	r5, r0, #16, #4
 8013d1c:	bf4c      	ite	mi
 8013d1e:	40aa      	lslmi	r2, r5
 8013d20:	fa04 f202 	lslpl.w	r2, r4, r2
 8013d24:	ea23 0302 	bic.w	r3, r3, r2
 8013d28:	f043 6370 	orr.w	r3, r3, #251658240	; 0xf000000
 8013d2c:	e7e4      	b.n	8013cf8 <gpio_pin_remap_config+0x24>
 8013d2e:	bf00      	nop
 8013d30:	40010000 	andmi	r0, r1, r0

08013d34 <gpio_ethernet_phy_select>:
 8013d34:	4b04      	ldr	r3, [pc, #16]	; (8013d48 <gpio_ethernet_phy_select+0x14>)
 8013d36:	685a      	ldr	r2, [r3, #4]
 8013d38:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8013d3c:	605a      	str	r2, [r3, #4]
 8013d3e:	685a      	ldr	r2, [r3, #4]
 8013d40:	4302      	orrs	r2, r0
 8013d42:	605a      	str	r2, [r3, #4]
 8013d44:	4770      	bx	lr
 8013d46:	bf00      	nop
 8013d48:	40010000 	andmi	r0, r1, r0

08013d4c <pmu_backup_write_enable>:
 8013d4c:	4a02      	ldr	r2, [pc, #8]	; (8013d58 <pmu_backup_write_enable+0xc>)
 8013d4e:	6813      	ldr	r3, [r2, #0]
 8013d50:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8013d54:	6013      	str	r3, [r2, #0]
 8013d56:	4770      	bx	lr
 8013d58:	40007000 	andmi	r7, r0, r0

08013d5c <rcu_periph_clock_enable>:
 8013d5c:	2201      	movs	r2, #1
 8013d5e:	0983      	lsrs	r3, r0, #6
 8013d60:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8013d64:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 8013d68:	6819      	ldr	r1, [r3, #0]
 8013d6a:	f000 001f 	and.w	r0, r0, #31
 8013d6e:	4082      	lsls	r2, r0
 8013d70:	430a      	orrs	r2, r1
 8013d72:	601a      	str	r2, [r3, #0]
 8013d74:	4770      	bx	lr

08013d76 <rcu_periph_clock_disable>:
 8013d76:	2101      	movs	r1, #1
 8013d78:	0983      	lsrs	r3, r0, #6
 8013d7a:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8013d7e:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 8013d82:	681a      	ldr	r2, [r3, #0]
 8013d84:	f000 001f 	and.w	r0, r0, #31
 8013d88:	4081      	lsls	r1, r0
 8013d8a:	ea22 0201 	bic.w	r2, r2, r1
 8013d8e:	601a      	str	r2, [r3, #0]
 8013d90:	4770      	bx	lr

08013d92 <rcu_periph_reset_enable>:
 8013d92:	f7ff bfe3 	b.w	8013d5c <rcu_periph_clock_enable>

08013d96 <rcu_periph_reset_disable>:
 8013d96:	f7ff bfee 	b.w	8013d76 <rcu_periph_clock_disable>
	...

08013d9c <rcu_bkp_reset_enable>:
 8013d9c:	4a02      	ldr	r2, [pc, #8]	; (8013da8 <rcu_bkp_reset_enable+0xc>)
 8013d9e:	6a13      	ldr	r3, [r2, #32]
 8013da0:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8013da4:	6213      	str	r3, [r2, #32]
 8013da6:	4770      	bx	lr
 8013da8:	40021000 	andmi	r1, r2, r0

08013dac <rcu_bkp_reset_disable>:
 8013dac:	4a02      	ldr	r2, [pc, #8]	; (8013db8 <rcu_bkp_reset_disable+0xc>)
 8013dae:	6a13      	ldr	r3, [r2, #32]
 8013db0:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8013db4:	6213      	str	r3, [r2, #32]
 8013db6:	4770      	bx	lr
 8013db8:	40021000 	andmi	r1, r2, r0

08013dbc <rcu_ckout0_config>:
 8013dbc:	4a06      	ldr	r2, [pc, #24]	; (8013dd8 <rcu_ckout0_config+0x1c>)
 8013dbe:	6853      	ldr	r3, [r2, #4]
 8013dc0:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 8013dc4:	4303      	orrs	r3, r0
 8013dc6:	6053      	str	r3, [r2, #4]
 8013dc8:	f8d2 3080 	ldr.w	r3, [r2, #128]	; 0x80
 8013dcc:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8013dd0:	430b      	orrs	r3, r1
 8013dd2:	f8c2 3080 	str.w	r3, [r2, #128]	; 0x80
 8013dd6:	4770      	bx	lr
 8013dd8:	40021000 	andmi	r1, r2, r0

08013ddc <rcu_pll2_config>:
 8013ddc:	4b04      	ldr	r3, [pc, #16]	; (8013df0 <rcu_pll2_config+0x14>)
 8013dde:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8013de0:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
 8013de4:	62da      	str	r2, [r3, #44]	; 0x2c
 8013de6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8013de8:	4302      	orrs	r2, r0
 8013dea:	62da      	str	r2, [r3, #44]	; 0x2c
 8013dec:	4770      	bx	lr
 8013dee:	bf00      	nop
 8013df0:	40021000 	andmi	r1, r2, r0

08013df4 <rcu_adc_clock_config>:
 8013df4:	490c      	ldr	r1, [pc, #48]	; (8013e28 <rcu_adc_clock_config+0x34>)
 8013df6:	2805      	cmp	r0, #5
 8013df8:	684b      	ldr	r3, [r1, #4]
 8013dfa:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8013dfe:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 8013e02:	d006      	beq.n	8013e12 <rcu_adc_clock_config+0x1e>
 8013e04:	d803      	bhi.n	8013e0e <rcu_adc_clock_config+0x1a>
 8013e06:	2804      	cmp	r0, #4
 8013e08:	d10a      	bne.n	8013e20 <rcu_adc_clock_config+0x2c>
 8013e0a:	604b      	str	r3, [r1, #4]
 8013e0c:	4770      	bx	lr
 8013e0e:	2807      	cmp	r0, #7
 8013e10:	d1fb      	bne.n	8013e0a <rcu_adc_clock_config+0x16>
 8013e12:	4a06      	ldr	r2, [pc, #24]	; (8013e2c <rcu_adc_clock_config+0x38>)
 8013e14:	ea02 3280 	and.w	r2, r2, r0, lsl #14
 8013e18:	4313      	orrs	r3, r2
 8013e1a:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8013e1e:	e7f4      	b.n	8013e0a <rcu_adc_clock_config+0x16>
 8013e20:	ea43 3380 	orr.w	r3, r3, r0, lsl #14
 8013e24:	e7f1      	b.n	8013e0a <rcu_adc_clock_config+0x16>
 8013e26:	bf00      	nop
 8013e28:	40021000 	andmi	r1, r2, r0
 8013e2c:	fffec000 			; <UNDEFINED> instruction: 0xfffec000

08013e30 <rcu_flag_get>:
 8013e30:	0983      	lsrs	r3, r0, #6
 8013e32:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8013e36:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 8013e3a:	681a      	ldr	r2, [r3, #0]
 8013e3c:	2301      	movs	r3, #1
 8013e3e:	f000 001f 	and.w	r0, r0, #31
 8013e42:	4083      	lsls	r3, r0
 8013e44:	4213      	tst	r3, r2
 8013e46:	bf14      	ite	ne
 8013e48:	2001      	movne	r0, #1
 8013e4a:	2000      	moveq	r0, #0
 8013e4c:	4770      	bx	lr
	...

08013e50 <rcu_osci_stab_wait>:
 8013e50:	281c      	cmp	r0, #28
 8013e52:	b508      	push	{r3, lr}
 8013e54:	d056      	beq.n	8013f04 <rcu_osci_stab_wait+0xb4>
 8013e56:	d812      	bhi.n	8013e7e <rcu_osci_stab_wait+0x2e>
 8013e58:	2818      	cmp	r0, #24
 8013e5a:	d04a      	beq.n	8013ef2 <rcu_osci_stab_wait+0xa2>
 8013e5c:	d804      	bhi.n	8013e68 <rcu_osci_stab_wait+0x18>
 8013e5e:	b398      	cbz	r0, 8013ec8 <rcu_osci_stab_wait+0x78>
 8013e60:	2810      	cmp	r0, #16
 8013e62:	d022      	beq.n	8013eaa <rcu_osci_stab_wait+0x5a>
 8013e64:	2000      	movs	r0, #0
 8013e66:	bd08      	pop	{r3, pc}
 8013e68:	281a      	cmp	r0, #26
 8013e6a:	d1fb      	bne.n	8013e64 <rcu_osci_stab_wait+0x14>
 8013e6c:	492f      	ldr	r1, [pc, #188]	; (8013f2c <rcu_osci_stab_wait+0xdc>)
 8013e6e:	201b      	movs	r0, #27
 8013e70:	f7ff ffde 	bl	8013e30 <rcu_flag_get>
 8013e74:	b908      	cbnz	r0, 8013e7a <rcu_osci_stab_wait+0x2a>
 8013e76:	3901      	subs	r1, #1
 8013e78:	d1f9      	bne.n	8013e6e <rcu_osci_stab_wait+0x1e>
 8013e7a:	201b      	movs	r0, #27
 8013e7c:	e01e      	b.n	8013ebc <rcu_osci_stab_wait+0x6c>
 8013e7e:	f5b0 6f10 	cmp.w	r0, #2304	; 0x900
 8013e82:	d02b      	beq.n	8013edc <rcu_osci_stab_wait+0x8c>
 8013e84:	f242 431c 	movw	r3, #9244	; 0x241c
 8013e88:	4298      	cmp	r0, r3
 8013e8a:	d044      	beq.n	8013f16 <rcu_osci_stab_wait+0xc6>
 8013e8c:	f5b0 6f00 	cmp.w	r0, #2048	; 0x800
 8013e90:	d1e8      	bne.n	8013e64 <rcu_osci_stab_wait+0x14>
 8013e92:	f06f 417c 	mvn.w	r1, #4227858432	; 0xfc000000
 8013e96:	f640 0001 	movw	r0, #2049	; 0x801
 8013e9a:	f7ff ffc9 	bl	8013e30 <rcu_flag_get>
 8013e9e:	b908      	cbnz	r0, 8013ea4 <rcu_osci_stab_wait+0x54>
 8013ea0:	3901      	subs	r1, #1
 8013ea2:	d1f8      	bne.n	8013e96 <rcu_osci_stab_wait+0x46>
 8013ea4:	f640 0001 	movw	r0, #2049	; 0x801
 8013ea8:	e008      	b.n	8013ebc <rcu_osci_stab_wait+0x6c>
 8013eaa:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8013eae:	2011      	movs	r0, #17
 8013eb0:	f7ff ffbe 	bl	8013e30 <rcu_flag_get>
 8013eb4:	b908      	cbnz	r0, 8013eba <rcu_osci_stab_wait+0x6a>
 8013eb6:	3901      	subs	r1, #1
 8013eb8:	d1f9      	bne.n	8013eae <rcu_osci_stab_wait+0x5e>
 8013eba:	2011      	movs	r0, #17
 8013ebc:	f7ff ffb8 	bl	8013e30 <rcu_flag_get>
 8013ec0:	3800      	subs	r0, #0
 8013ec2:	bf18      	it	ne
 8013ec4:	2001      	movne	r0, #1
 8013ec6:	e7ce      	b.n	8013e66 <rcu_osci_stab_wait+0x16>
 8013ec8:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8013ecc:	2001      	movs	r0, #1
 8013ece:	f7ff ffaf 	bl	8013e30 <rcu_flag_get>
 8013ed2:	b908      	cbnz	r0, 8013ed8 <rcu_osci_stab_wait+0x88>
 8013ed4:	3901      	subs	r1, #1
 8013ed6:	d1f9      	bne.n	8013ecc <rcu_osci_stab_wait+0x7c>
 8013ed8:	2001      	movs	r0, #1
 8013eda:	e7ef      	b.n	8013ebc <rcu_osci_stab_wait+0x6c>
 8013edc:	4913      	ldr	r1, [pc, #76]	; (8013f2c <rcu_osci_stab_wait+0xdc>)
 8013ede:	f640 1001 	movw	r0, #2305	; 0x901
 8013ee2:	f7ff ffa5 	bl	8013e30 <rcu_flag_get>
 8013ee6:	b908      	cbnz	r0, 8013eec <rcu_osci_stab_wait+0x9c>
 8013ee8:	3901      	subs	r1, #1
 8013eea:	d1f8      	bne.n	8013ede <rcu_osci_stab_wait+0x8e>
 8013eec:	f640 1001 	movw	r0, #2305	; 0x901
 8013ef0:	e7e4      	b.n	8013ebc <rcu_osci_stab_wait+0x6c>
 8013ef2:	490e      	ldr	r1, [pc, #56]	; (8013f2c <rcu_osci_stab_wait+0xdc>)
 8013ef4:	2019      	movs	r0, #25
 8013ef6:	f7ff ff9b 	bl	8013e30 <rcu_flag_get>
 8013efa:	b908      	cbnz	r0, 8013f00 <rcu_osci_stab_wait+0xb0>
 8013efc:	3901      	subs	r1, #1
 8013efe:	d1f9      	bne.n	8013ef4 <rcu_osci_stab_wait+0xa4>
 8013f00:	2019      	movs	r0, #25
 8013f02:	e7db      	b.n	8013ebc <rcu_osci_stab_wait+0x6c>
 8013f04:	4909      	ldr	r1, [pc, #36]	; (8013f2c <rcu_osci_stab_wait+0xdc>)
 8013f06:	201d      	movs	r0, #29
 8013f08:	f7ff ff92 	bl	8013e30 <rcu_flag_get>
 8013f0c:	b908      	cbnz	r0, 8013f12 <rcu_osci_stab_wait+0xc2>
 8013f0e:	3901      	subs	r1, #1
 8013f10:	d1f9      	bne.n	8013f06 <rcu_osci_stab_wait+0xb6>
 8013f12:	201d      	movs	r0, #29
 8013f14:	e7d2      	b.n	8013ebc <rcu_osci_stab_wait+0x6c>
 8013f16:	4905      	ldr	r1, [pc, #20]	; (8013f2c <rcu_osci_stab_wait+0xdc>)
 8013f18:	f242 401d 	movw	r0, #9245	; 0x241d
 8013f1c:	f7ff ff88 	bl	8013e30 <rcu_flag_get>
 8013f20:	b908      	cbnz	r0, 8013f26 <rcu_osci_stab_wait+0xd6>
 8013f22:	3901      	subs	r1, #1
 8013f24:	d1f8      	bne.n	8013f18 <rcu_osci_stab_wait+0xc8>
 8013f26:	f242 401d 	movw	r0, #9245	; 0x241d
 8013f2a:	e7c7      	b.n	8013ebc <rcu_osci_stab_wait+0x6c>
 8013f2c:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

08013f30 <rcu_osci_on>:
 8013f30:	f7ff bf14 	b.w	8013d5c <rcu_periph_clock_enable>

08013f34 <rcu_clock_freq_get>:
 8013f34:	4b3e      	ldr	r3, [pc, #248]	; (8014030 <rcu_clock_freq_get+0xfc>)
 8013f36:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013f38:	4604      	mov	r4, r0
 8013f3a:	461f      	mov	r7, r3
 8013f3c:	b089      	sub	sp, #36	; 0x24
 8013f3e:	ad04      	add	r5, sp, #16
 8013f40:	f103 0610 	add.w	r6, r3, #16
 8013f44:	462a      	mov	r2, r5
 8013f46:	6818      	ldr	r0, [r3, #0]
 8013f48:	6859      	ldr	r1, [r3, #4]
 8013f4a:	3308      	adds	r3, #8
 8013f4c:	c203      	stmia	r2!, {r0, r1}
 8013f4e:	42b3      	cmp	r3, r6
 8013f50:	4615      	mov	r5, r2
 8013f52:	d1f7      	bne.n	8013f44 <rcu_clock_freq_get+0x10>
 8013f54:	466b      	mov	r3, sp
 8013f56:	6938      	ldr	r0, [r7, #16]
 8013f58:	6871      	ldr	r1, [r6, #4]
 8013f5a:	4a36      	ldr	r2, [pc, #216]	; (8014034 <rcu_clock_freq_get+0x100>)
 8013f5c:	c303      	stmia	r3!, {r0, r1}
 8013f5e:	c303      	stmia	r3!, {r0, r1}
 8013f60:	6853      	ldr	r3, [r2, #4]
 8013f62:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8013f66:	2b01      	cmp	r3, #1
 8013f68:	d053      	beq.n	8014012 <rcu_clock_freq_get+0xde>
 8013f6a:	2b02      	cmp	r3, #2
 8013f6c:	d153      	bne.n	8014016 <rcu_clock_freq_get+0xe2>
 8013f6e:	6853      	ldr	r3, [r2, #4]
 8013f70:	03dd      	lsls	r5, r3, #15
 8013f72:	d523      	bpl.n	8013fbc <rcu_clock_freq_get+0x88>
 8013f74:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 8013f76:	f413 3f80 	tst.w	r3, #65536	; 0x10000
 8013f7a:	4b2f      	ldr	r3, [pc, #188]	; (8014038 <rcu_clock_freq_get+0x104>)
 8013f7c:	d00e      	beq.n	8013f9c <rcu_clock_freq_get+0x68>
 8013f7e:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 8013f80:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
 8013f82:	f3c1 1103 	ubfx	r1, r1, #4, #4
 8013f86:	f3c0 2003 	ubfx	r0, r0, #8, #4
 8013f8a:	3101      	adds	r1, #1
 8013f8c:	280f      	cmp	r0, #15
 8013f8e:	f100 0502 	add.w	r5, r0, #2
 8013f92:	fbb3 f3f1 	udiv	r3, r3, r1
 8013f96:	bf08      	it	eq
 8013f98:	2514      	moveq	r5, #20
 8013f9a:	436b      	muls	r3, r5
 8013f9c:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 8013f9e:	f001 010f 	and.w	r1, r1, #15
 8013fa2:	3101      	adds	r1, #1
 8013fa4:	fbb3 f3f1 	udiv	r3, r3, r1
 8013fa8:	6851      	ldr	r1, [r2, #4]
 8013faa:	6850      	ldr	r0, [r2, #4]
 8013fac:	f3c1 4183 	ubfx	r1, r1, #18, #4
 8013fb0:	0080      	lsls	r0, r0, #2
 8013fb2:	d505      	bpl.n	8013fc0 <rcu_clock_freq_get+0x8c>
 8013fb4:	f041 0110 	orr.w	r1, r1, #16
 8013fb8:	3101      	adds	r1, #1
 8013fba:	e027      	b.n	801400c <rcu_clock_freq_get+0xd8>
 8013fbc:	4b1f      	ldr	r3, [pc, #124]	; (801403c <rcu_clock_freq_get+0x108>)
 8013fbe:	e7f3      	b.n	8013fa8 <rcu_clock_freq_get+0x74>
 8013fc0:	290d      	cmp	r1, #13
 8013fc2:	d120      	bne.n	8014006 <rcu_clock_freq_get+0xd2>
 8013fc4:	2006      	movs	r0, #6
 8013fc6:	0859      	lsrs	r1, r3, #1
 8013fc8:	fb00 1003 	mla	r0, r0, r3, r1
 8013fcc:	6853      	ldr	r3, [r2, #4]
 8013fce:	6851      	ldr	r1, [r2, #4]
 8013fd0:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8013fd4:	6852      	ldr	r2, [r2, #4]
 8013fd6:	3320      	adds	r3, #32
 8013fd8:	446b      	add	r3, sp
 8013fda:	f3c1 2102 	ubfx	r1, r1, #8, #3
 8013fde:	f3c2 22c2 	ubfx	r2, r2, #11, #3
 8013fe2:	f813 3c10 	ldrb.w	r3, [r3, #-16]
 8013fe6:	3120      	adds	r1, #32
 8013fe8:	3220      	adds	r2, #32
 8013fea:	4469      	add	r1, sp
 8013fec:	446a      	add	r2, sp
 8013fee:	f811 1c20 	ldrb.w	r1, [r1, #-32]
 8013ff2:	f812 2c18 	ldrb.w	r2, [r2, #-24]
 8013ff6:	fa20 f303 	lsr.w	r3, r0, r3
 8013ffa:	2c03      	cmp	r4, #3
 8013ffc:	d816      	bhi.n	801402c <rcu_clock_freq_get+0xf8>
 8013ffe:	e8df f004 	tbb	[pc, r4]
 8014002:	120f0c0d 	andne	r0, pc, #3328	; 0xd00
 8014006:	290f      	cmp	r1, #15
 8014008:	d0d6      	beq.n	8013fb8 <rcu_clock_freq_get+0x84>
 801400a:	3102      	adds	r1, #2
 801400c:	fb03 f001 	mul.w	r0, r3, r1
 8014010:	e7dc      	b.n	8013fcc <rcu_clock_freq_get+0x98>
 8014012:	4809      	ldr	r0, [pc, #36]	; (8014038 <rcu_clock_freq_get+0x104>)
 8014014:	e7da      	b.n	8013fcc <rcu_clock_freq_get+0x98>
 8014016:	480a      	ldr	r0, [pc, #40]	; (8014040 <rcu_clock_freq_get+0x10c>)
 8014018:	e7d8      	b.n	8013fcc <rcu_clock_freq_get+0x98>
 801401a:	4618      	mov	r0, r3
 801401c:	b009      	add	sp, #36	; 0x24
 801401e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014020:	fa23 f001 	lsr.w	r0, r3, r1
 8014024:	e7fa      	b.n	801401c <rcu_clock_freq_get+0xe8>
 8014026:	fa23 f002 	lsr.w	r0, r3, r2
 801402a:	e7f7      	b.n	801401c <rcu_clock_freq_get+0xe8>
 801402c:	2000      	movs	r0, #0
 801402e:	e7f5      	b.n	801401c <rcu_clock_freq_get+0xe8>
 8014030:	080157bc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r8, r9, sl, ip, lr}
 8014034:	40021000 	andmi	r1, r2, r0
 8014038:	017d7840 	cmneq	sp, r0, asr #16
 801403c:	003d0900 	eorseq	r0, sp, r0, lsl #18
 8014040:	007a1200 	rsbseq	r1, sl, r0, lsl #4

08014044 <timer_deinit>:
 8014044:	b508      	push	{r3, lr}
 8014046:	4b4e      	ldr	r3, [pc, #312]	; (8014180 <timer_deinit+0x13c>)
 8014048:	4298      	cmp	r0, r3
 801404a:	f000 8092 	beq.w	8014172 <timer_deinit+0x12e>
 801404e:	d822      	bhi.n	8014096 <timer_deinit+0x52>
 8014050:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
 8014054:	4298      	cmp	r0, r3
 8014056:	d062      	beq.n	801411e <timer_deinit+0xda>
 8014058:	d80b      	bhi.n	8014072 <timer_deinit+0x2e>
 801405a:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 801405e:	4298      	cmp	r0, r3
 8014060:	d04f      	beq.n	8014102 <timer_deinit+0xbe>
 8014062:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8014066:	4298      	cmp	r0, r3
 8014068:	d052      	beq.n	8014110 <timer_deinit+0xcc>
 801406a:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 801406e:	d041      	beq.n	80140f4 <timer_deinit+0xb0>
 8014070:	bd08      	pop	{r3, pc}
 8014072:	4b44      	ldr	r3, [pc, #272]	; (8014184 <timer_deinit+0x140>)
 8014074:	4298      	cmp	r0, r3
 8014076:	d059      	beq.n	801412c <timer_deinit+0xe8>
 8014078:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 801407c:	4298      	cmp	r0, r3
 801407e:	d071      	beq.n	8014164 <timer_deinit+0x120>
 8014080:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8014084:	4298      	cmp	r0, r3
 8014086:	d1f3      	bne.n	8014070 <timer_deinit+0x2c>
 8014088:	f240 4004 	movw	r0, #1028	; 0x404
 801408c:	f7ff fe81 	bl	8013d92 <rcu_periph_reset_enable>
 8014090:	f240 4004 	movw	r0, #1028	; 0x404
 8014094:	e02a      	b.n	80140ec <timer_deinit+0xa8>
 8014096:	4b3c      	ldr	r3, [pc, #240]	; (8014188 <timer_deinit+0x144>)
 8014098:	4298      	cmp	r0, r3
 801409a:	d055      	beq.n	8014148 <timer_deinit+0x104>
 801409c:	d812      	bhi.n	80140c4 <timer_deinit+0x80>
 801409e:	f5a3 5300 	sub.w	r3, r3, #8192	; 0x2000
 80140a2:	4298      	cmp	r0, r3
 80140a4:	d01c      	beq.n	80140e0 <timer_deinit+0x9c>
 80140a6:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80140aa:	4298      	cmp	r0, r3
 80140ac:	d045      	beq.n	801413a <timer_deinit+0xf6>
 80140ae:	f5a3 338a 	sub.w	r3, r3, #70656	; 0x11400
 80140b2:	4298      	cmp	r0, r3
 80140b4:	d1dc      	bne.n	8014070 <timer_deinit+0x2c>
 80140b6:	f44f 6081 	mov.w	r0, #1032	; 0x408
 80140ba:	f7ff fe6a 	bl	8013d92 <rcu_periph_reset_enable>
 80140be:	f44f 6081 	mov.w	r0, #1032	; 0x408
 80140c2:	e013      	b.n	80140ec <timer_deinit+0xa8>
 80140c4:	4b31      	ldr	r3, [pc, #196]	; (801418c <timer_deinit+0x148>)
 80140c6:	4298      	cmp	r0, r3
 80140c8:	d045      	beq.n	8014156 <timer_deinit+0x112>
 80140ca:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80140ce:	4298      	cmp	r0, r3
 80140d0:	d1ce      	bne.n	8014070 <timer_deinit+0x2c>
 80140d2:	f240 3015 	movw	r0, #789	; 0x315
 80140d6:	f7ff fe5c 	bl	8013d92 <rcu_periph_reset_enable>
 80140da:	f240 3015 	movw	r0, #789	; 0x315
 80140de:	e005      	b.n	80140ec <timer_deinit+0xa8>
 80140e0:	f240 300b 	movw	r0, #779	; 0x30b
 80140e4:	f7ff fe55 	bl	8013d92 <rcu_periph_reset_enable>
 80140e8:	f240 300b 	movw	r0, #779	; 0x30b
 80140ec:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80140f0:	f7ff be51 	b.w	8013d96 <rcu_periph_reset_disable>
 80140f4:	f44f 6080 	mov.w	r0, #1024	; 0x400
 80140f8:	f7ff fe4b 	bl	8013d92 <rcu_periph_reset_enable>
 80140fc:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8014100:	e7f4      	b.n	80140ec <timer_deinit+0xa8>
 8014102:	f240 4001 	movw	r0, #1025	; 0x401
 8014106:	f7ff fe44 	bl	8013d92 <rcu_periph_reset_enable>
 801410a:	f240 4001 	movw	r0, #1025	; 0x401
 801410e:	e7ed      	b.n	80140ec <timer_deinit+0xa8>
 8014110:	f240 4002 	movw	r0, #1026	; 0x402
 8014114:	f7ff fe3d 	bl	8013d92 <rcu_periph_reset_enable>
 8014118:	f240 4002 	movw	r0, #1026	; 0x402
 801411c:	e7e6      	b.n	80140ec <timer_deinit+0xa8>
 801411e:	f240 4003 	movw	r0, #1027	; 0x403
 8014122:	f7ff fe36 	bl	8013d92 <rcu_periph_reset_enable>
 8014126:	f240 4003 	movw	r0, #1027	; 0x403
 801412a:	e7df      	b.n	80140ec <timer_deinit+0xa8>
 801412c:	f240 4005 	movw	r0, #1029	; 0x405
 8014130:	f7ff fe2f 	bl	8013d92 <rcu_periph_reset_enable>
 8014134:	f240 4005 	movw	r0, #1029	; 0x405
 8014138:	e7d8      	b.n	80140ec <timer_deinit+0xa8>
 801413a:	f240 300d 	movw	r0, #781	; 0x30d
 801413e:	f7ff fe28 	bl	8013d92 <rcu_periph_reset_enable>
 8014142:	f240 300d 	movw	r0, #781	; 0x30d
 8014146:	e7d1      	b.n	80140ec <timer_deinit+0xa8>
 8014148:	f240 3013 	movw	r0, #787	; 0x313
 801414c:	f7ff fe21 	bl	8013d92 <rcu_periph_reset_enable>
 8014150:	f240 3013 	movw	r0, #787	; 0x313
 8014154:	e7ca      	b.n	80140ec <timer_deinit+0xa8>
 8014156:	f44f 7045 	mov.w	r0, #788	; 0x314
 801415a:	f7ff fe1a 	bl	8013d92 <rcu_periph_reset_enable>
 801415e:	f44f 7045 	mov.w	r0, #788	; 0x314
 8014162:	e7c3      	b.n	80140ec <timer_deinit+0xa8>
 8014164:	f240 4006 	movw	r0, #1030	; 0x406
 8014168:	f7ff fe13 	bl	8013d92 <rcu_periph_reset_enable>
 801416c:	f240 4006 	movw	r0, #1030	; 0x406
 8014170:	e7bc      	b.n	80140ec <timer_deinit+0xa8>
 8014172:	f240 4007 	movw	r0, #1031	; 0x407
 8014176:	f7ff fe0c 	bl	8013d92 <rcu_periph_reset_enable>
 801417a:	f240 4007 	movw	r0, #1031	; 0x407
 801417e:	e7b5      	b.n	80140ec <timer_deinit+0xa8>
 8014180:	40001c00 	andmi	r1, r0, r0, lsl #24
 8014184:	40001400 	andmi	r1, r0, r0, lsl #8
 8014188:	40014c00 	andmi	r4, r1, r0, lsl #24
 801418c:	40015000 	andmi	r5, r1, r0

08014190 <timer_init>:
 8014190:	880b      	ldrh	r3, [r1, #0]
 8014192:	6283      	str	r3, [r0, #40]	; 0x28
 8014194:	4b26      	ldr	r3, [pc, #152]	; (8014230 <timer_init+0xa0>)
 8014196:	4298      	cmp	r0, r3
 8014198:	d018      	beq.n	80141cc <timer_init+0x3c>
 801419a:	f420 6240 	bic.w	r2, r0, #3072	; 0xc00
 801419e:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 80141a2:	f420 6380 	bic.w	r3, r0, #1024	; 0x400
 80141a6:	d011      	beq.n	80141cc <timer_init+0x3c>
 80141a8:	4a22      	ldr	r2, [pc, #136]	; (8014234 <timer_init+0xa4>)
 80141aa:	4290      	cmp	r0, r2
 80141ac:	d00e      	beq.n	80141cc <timer_init+0x3c>
 80141ae:	f502 52c0 	add.w	r2, r2, #6144	; 0x1800
 80141b2:	4290      	cmp	r0, r2
 80141b4:	d00a      	beq.n	80141cc <timer_init+0x3c>
 80141b6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80141ba:	4293      	cmp	r3, r2
 80141bc:	d006      	beq.n	80141cc <timer_init+0x3c>
 80141be:	f5a2 329c 	sub.w	r2, r2, #79872	; 0x13800
 80141c2:	4293      	cmp	r3, r2
 80141c4:	d002      	beq.n	80141cc <timer_init+0x3c>
 80141c6:	4b1c      	ldr	r3, [pc, #112]	; (8014238 <timer_init+0xa8>)
 80141c8:	4298      	cmp	r0, r3
 80141ca:	d10f      	bne.n	80141ec <timer_init+0x5c>
 80141cc:	6803      	ldr	r3, [r0, #0]
 80141ce:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80141d2:	6003      	str	r3, [r0, #0]
 80141d4:	884b      	ldrh	r3, [r1, #2]
 80141d6:	6802      	ldr	r2, [r0, #0]
 80141d8:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80141dc:	4313      	orrs	r3, r2
 80141de:	6003      	str	r3, [r0, #0]
 80141e0:	888b      	ldrh	r3, [r1, #4]
 80141e2:	6802      	ldr	r2, [r0, #0]
 80141e4:	f003 0310 	and.w	r3, r3, #16
 80141e8:	4313      	orrs	r3, r2
 80141ea:	6003      	str	r3, [r0, #0]
 80141ec:	688b      	ldr	r3, [r1, #8]
 80141ee:	62c3      	str	r3, [r0, #44]	; 0x2c
 80141f0:	4b12      	ldr	r3, [pc, #72]	; (801423c <timer_init+0xac>)
 80141f2:	4298      	cmp	r0, r3
 80141f4:	d003      	beq.n	80141fe <timer_init+0x6e>
 80141f6:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80141fa:	4298      	cmp	r0, r3
 80141fc:	d104      	bne.n	8014208 <timer_init+0x78>
 80141fe:	6943      	ldr	r3, [r0, #20]
 8014200:	f043 0301 	orr.w	r3, r3, #1
 8014204:	6143      	str	r3, [r0, #20]
 8014206:	4770      	bx	lr
 8014208:	6803      	ldr	r3, [r0, #0]
 801420a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 801420e:	6003      	str	r3, [r0, #0]
 8014210:	898b      	ldrh	r3, [r1, #12]
 8014212:	6802      	ldr	r2, [r0, #0]
 8014214:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8014218:	4313      	orrs	r3, r2
 801421a:	6003      	str	r3, [r0, #0]
 801421c:	4b04      	ldr	r3, [pc, #16]	; (8014230 <timer_init+0xa0>)
 801421e:	4298      	cmp	r0, r3
 8014220:	d002      	beq.n	8014228 <timer_init+0x98>
 8014222:	4b04      	ldr	r3, [pc, #16]	; (8014234 <timer_init+0xa4>)
 8014224:	4298      	cmp	r0, r3
 8014226:	d1ea      	bne.n	80141fe <timer_init+0x6e>
 8014228:	7b8b      	ldrb	r3, [r1, #14]
 801422a:	6303      	str	r3, [r0, #48]	; 0x30
 801422c:	e7e7      	b.n	80141fe <timer_init+0x6e>
 801422e:	bf00      	nop
 8014230:	40012c00 	andmi	r2, r1, r0, lsl #24
 8014234:	40013400 	andmi	r3, r1, r0, lsl #8
 8014238:	40002000 	andmi	r2, r0, r0
 801423c:	40001000 	andmi	r1, r0, r0

08014240 <timer_enable>:
 8014240:	6803      	ldr	r3, [r0, #0]
 8014242:	f043 0301 	orr.w	r3, r3, #1
 8014246:	6003      	str	r3, [r0, #0]
 8014248:	4770      	bx	lr

0801424a <timer_dma_enable>:
 801424a:	68c3      	ldr	r3, [r0, #12]
 801424c:	4319      	orrs	r1, r3
 801424e:	60c1      	str	r1, [r0, #12]
 8014250:	4770      	bx	lr

08014252 <timer_channel_output_mode_config>:
 8014252:	2903      	cmp	r1, #3
 8014254:	d81a      	bhi.n	801428c <timer_channel_output_mode_config+0x3a>
 8014256:	e8df f001 	tbb	[pc, r1]
 801425a:	1a120a02 	bne	8496a6a <__exidx_end+0x47eba2>
 801425e:	6983      	ldr	r3, [r0, #24]
 8014260:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8014264:	6183      	str	r3, [r0, #24]
 8014266:	6983      	ldr	r3, [r0, #24]
 8014268:	4313      	orrs	r3, r2
 801426a:	6183      	str	r3, [r0, #24]
 801426c:	4770      	bx	lr
 801426e:	6983      	ldr	r3, [r0, #24]
 8014270:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8014274:	6183      	str	r3, [r0, #24]
 8014276:	6983      	ldr	r3, [r0, #24]
 8014278:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 801427c:	e7f5      	b.n	801426a <timer_channel_output_mode_config+0x18>
 801427e:	69c3      	ldr	r3, [r0, #28]
 8014280:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8014284:	61c3      	str	r3, [r0, #28]
 8014286:	69c3      	ldr	r3, [r0, #28]
 8014288:	4313      	orrs	r3, r2
 801428a:	61c3      	str	r3, [r0, #28]
 801428c:	4770      	bx	lr
 801428e:	69c3      	ldr	r3, [r0, #28]
 8014290:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8014294:	61c3      	str	r3, [r0, #28]
 8014296:	69c3      	ldr	r3, [r0, #28]
 8014298:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 801429c:	e7f5      	b.n	801428a <timer_channel_output_mode_config+0x38>

0801429e <timer_channel_output_pulse_value_config>:
 801429e:	2903      	cmp	r1, #3
 80142a0:	d80a      	bhi.n	80142b8 <timer_channel_output_pulse_value_config+0x1a>
 80142a2:	e8df f001 	tbb	[pc, r1]
 80142a6:	08060402 	stmdaeq	r6, {r1, sl}
 80142aa:	6342      	str	r2, [r0, #52]	; 0x34
 80142ac:	4770      	bx	lr
 80142ae:	6382      	str	r2, [r0, #56]	; 0x38
 80142b0:	4770      	bx	lr
 80142b2:	63c2      	str	r2, [r0, #60]	; 0x3c
 80142b4:	4770      	bx	lr
 80142b6:	6402      	str	r2, [r0, #64]	; 0x40
 80142b8:	4770      	bx	lr

080142ba <timer_input_trigger_source_select>:
 80142ba:	6883      	ldr	r3, [r0, #8]
 80142bc:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80142c0:	6083      	str	r3, [r0, #8]
 80142c2:	6883      	ldr	r3, [r0, #8]
 80142c4:	430b      	orrs	r3, r1
 80142c6:	6083      	str	r3, [r0, #8]
 80142c8:	4770      	bx	lr

080142ca <timer_master_output_trigger_source_select>:
 80142ca:	6843      	ldr	r3, [r0, #4]
 80142cc:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80142d0:	6043      	str	r3, [r0, #4]
 80142d2:	6843      	ldr	r3, [r0, #4]
 80142d4:	430b      	orrs	r3, r1
 80142d6:	6043      	str	r3, [r0, #4]
 80142d8:	4770      	bx	lr

080142da <timer_slave_mode_select>:
 80142da:	6883      	ldr	r3, [r0, #8]
 80142dc:	f023 0307 	bic.w	r3, r3, #7
 80142e0:	6083      	str	r3, [r0, #8]
 80142e2:	6883      	ldr	r3, [r0, #8]
 80142e4:	430b      	orrs	r3, r1
 80142e6:	6083      	str	r3, [r0, #8]
 80142e8:	4770      	bx	lr

080142ea <timer_master_slave_mode_config>:
 80142ea:	2980      	cmp	r1, #128	; 0x80
 80142ec:	d104      	bne.n	80142f8 <timer_master_slave_mode_config+0xe>
 80142ee:	6883      	ldr	r3, [r0, #8]
 80142f0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80142f4:	6083      	str	r3, [r0, #8]
 80142f6:	4770      	bx	lr
 80142f8:	2900      	cmp	r1, #0
 80142fa:	d1fc      	bne.n	80142f6 <timer_master_slave_mode_config+0xc>
 80142fc:	6883      	ldr	r3, [r0, #8]
 80142fe:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8014302:	e7f7      	b.n	80142f4 <timer_master_slave_mode_config+0xa>

08014304 <timer_interrupt_enable>:
 8014304:	68c3      	ldr	r3, [r0, #12]
 8014306:	430b      	orrs	r3, r1
 8014308:	60c3      	str	r3, [r0, #12]
 801430a:	4770      	bx	lr

0801430c <usart_deinit>:
 801430c:	b508      	push	{r3, lr}
 801430e:	4b2d      	ldr	r3, [pc, #180]	; (80143c4 <usart_deinit+0xb8>)
 8014310:	4298      	cmp	r0, r3
 8014312:	d050      	beq.n	80143b6 <usart_deinit+0xaa>
 8014314:	d817      	bhi.n	8014346 <usart_deinit+0x3a>
 8014316:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 801431a:	4298      	cmp	r0, r3
 801431c:	d044      	beq.n	80143a8 <usart_deinit+0x9c>
 801431e:	d808      	bhi.n	8014332 <usart_deinit+0x26>
 8014320:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8014324:	4298      	cmp	r0, r3
 8014326:	d02a      	beq.n	801437e <usart_deinit+0x72>
 8014328:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 801432c:	4298      	cmp	r0, r3
 801432e:	d02d      	beq.n	801438c <usart_deinit+0x80>
 8014330:	bd08      	pop	{r3, pc}
 8014332:	4b25      	ldr	r3, [pc, #148]	; (80143c8 <usart_deinit+0xbc>)
 8014334:	4298      	cmp	r0, r3
 8014336:	d1fb      	bne.n	8014330 <usart_deinit+0x24>
 8014338:	f240 4014 	movw	r0, #1044	; 0x414
 801433c:	f7ff fd29 	bl	8013d92 <rcu_periph_reset_enable>
 8014340:	f240 4014 	movw	r0, #1044	; 0x414
 8014344:	e017      	b.n	8014376 <usart_deinit+0x6a>
 8014346:	4b21      	ldr	r3, [pc, #132]	; (80143cc <usart_deinit+0xc0>)
 8014348:	4298      	cmp	r0, r3
 801434a:	d00e      	beq.n	801436a <usart_deinit+0x5e>
 801434c:	f503 5360 	add.w	r3, r3, #14336	; 0x3800
 8014350:	4298      	cmp	r0, r3
 8014352:	d022      	beq.n	801439a <usart_deinit+0x8e>
 8014354:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
 8014358:	4298      	cmp	r0, r3
 801435a:	d1e9      	bne.n	8014330 <usart_deinit+0x24>
 801435c:	f641 601f 	movw	r0, #7711	; 0x1e1f
 8014360:	f7ff fd17 	bl	8013d92 <rcu_periph_reset_enable>
 8014364:	f641 601f 	movw	r0, #7711	; 0x1e1f
 8014368:	e005      	b.n	8014376 <usart_deinit+0x6a>
 801436a:	f240 300e 	movw	r0, #782	; 0x30e
 801436e:	f7ff fd10 	bl	8013d92 <rcu_periph_reset_enable>
 8014372:	f240 300e 	movw	r0, #782	; 0x30e
 8014376:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801437a:	f7ff bd0c 	b.w	8013d96 <rcu_periph_reset_disable>
 801437e:	f240 4011 	movw	r0, #1041	; 0x411
 8014382:	f7ff fd06 	bl	8013d92 <rcu_periph_reset_enable>
 8014386:	f240 4011 	movw	r0, #1041	; 0x411
 801438a:	e7f4      	b.n	8014376 <usart_deinit+0x6a>
 801438c:	f240 4012 	movw	r0, #1042	; 0x412
 8014390:	f7ff fcff 	bl	8013d92 <rcu_periph_reset_enable>
 8014394:	f240 4012 	movw	r0, #1042	; 0x412
 8014398:	e7ed      	b.n	8014376 <usart_deinit+0x6a>
 801439a:	f641 5018 	movw	r0, #7448	; 0x1d18
 801439e:	f7ff fcf8 	bl	8013d92 <rcu_periph_reset_enable>
 80143a2:	f641 5018 	movw	r0, #7448	; 0x1d18
 80143a6:	e7e6      	b.n	8014376 <usart_deinit+0x6a>
 80143a8:	f240 4013 	movw	r0, #1043	; 0x413
 80143ac:	f7ff fcf1 	bl	8013d92 <rcu_periph_reset_enable>
 80143b0:	f240 4013 	movw	r0, #1043	; 0x413
 80143b4:	e7df      	b.n	8014376 <usart_deinit+0x6a>
 80143b6:	f641 601e 	movw	r0, #7710	; 0x1e1e
 80143ba:	f7ff fcea 	bl	8013d92 <rcu_periph_reset_enable>
 80143be:	f641 601e 	movw	r0, #7710	; 0x1e1e
 80143c2:	e7d8      	b.n	8014376 <usart_deinit+0x6a>
 80143c4:	40007800 	andmi	r7, r0, r0, lsl #16
 80143c8:	40005000 	andmi	r5, r0, r0
 80143cc:	40013800 	andmi	r3, r1, r0, lsl #16

080143d0 <usart_baudrate_set>:
 80143d0:	b538      	push	{r3, r4, r5, lr}
 80143d2:	4b16      	ldr	r3, [pc, #88]	; (801442c <usart_baudrate_set+0x5c>)
 80143d4:	4604      	mov	r4, r0
 80143d6:	4298      	cmp	r0, r3
 80143d8:	460d      	mov	r5, r1
 80143da:	d025      	beq.n	8014428 <usart_baudrate_set+0x58>
 80143dc:	d816      	bhi.n	801440c <usart_baudrate_set+0x3c>
 80143de:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 80143e2:	4298      	cmp	r0, r3
 80143e4:	d020      	beq.n	8014428 <usart_baudrate_set+0x58>
 80143e6:	d80f      	bhi.n	8014408 <usart_baudrate_set+0x38>
 80143e8:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 80143ec:	4298      	cmp	r0, r3
 80143ee:	d01b      	beq.n	8014428 <usart_baudrate_set+0x58>
 80143f0:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80143f4:	429c      	cmp	r4, r3
 80143f6:	d017      	beq.n	8014428 <usart_baudrate_set+0x58>
 80143f8:	2000      	movs	r0, #0
 80143fa:	eb00 0155 	add.w	r1, r0, r5, lsr #1
 80143fe:	fbb1 f1f5 	udiv	r1, r1, r5
 8014402:	b289      	uxth	r1, r1
 8014404:	60a1      	str	r1, [r4, #8]
 8014406:	bd38      	pop	{r3, r4, r5, pc}
 8014408:	4b09      	ldr	r3, [pc, #36]	; (8014430 <usart_baudrate_set+0x60>)
 801440a:	e7f3      	b.n	80143f4 <usart_baudrate_set+0x24>
 801440c:	4b09      	ldr	r3, [pc, #36]	; (8014434 <usart_baudrate_set+0x64>)
 801440e:	4298      	cmp	r0, r3
 8014410:	d006      	beq.n	8014420 <usart_baudrate_set+0x50>
 8014412:	f503 5360 	add.w	r3, r3, #14336	; 0x3800
 8014416:	4298      	cmp	r0, r3
 8014418:	d002      	beq.n	8014420 <usart_baudrate_set+0x50>
 801441a:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
 801441e:	e7e9      	b.n	80143f4 <usart_baudrate_set+0x24>
 8014420:	2003      	movs	r0, #3
 8014422:	f7ff fd87 	bl	8013f34 <rcu_clock_freq_get>
 8014426:	e7e8      	b.n	80143fa <usart_baudrate_set+0x2a>
 8014428:	2002      	movs	r0, #2
 801442a:	e7fa      	b.n	8014422 <usart_baudrate_set+0x52>
 801442c:	40007800 	andmi	r7, r0, r0, lsl #16
 8014430:	40005000 	andmi	r5, r0, r0
 8014434:	40013800 	andmi	r3, r1, r0, lsl #16

08014438 <usart_parity_config>:
 8014438:	68c3      	ldr	r3, [r0, #12]
 801443a:	f423 63c0 	bic.w	r3, r3, #1536	; 0x600
 801443e:	60c3      	str	r3, [r0, #12]
 8014440:	68c3      	ldr	r3, [r0, #12]
 8014442:	430b      	orrs	r3, r1
 8014444:	60c3      	str	r3, [r0, #12]
 8014446:	4770      	bx	lr

08014448 <usart_word_length_set>:
 8014448:	68c3      	ldr	r3, [r0, #12]
 801444a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 801444e:	60c3      	str	r3, [r0, #12]
 8014450:	68c3      	ldr	r3, [r0, #12]
 8014452:	430b      	orrs	r3, r1
 8014454:	60c3      	str	r3, [r0, #12]
 8014456:	4770      	bx	lr

08014458 <usart_stop_bit_set>:
 8014458:	6903      	ldr	r3, [r0, #16]
 801445a:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 801445e:	6103      	str	r3, [r0, #16]
 8014460:	6903      	ldr	r3, [r0, #16]
 8014462:	430b      	orrs	r3, r1
 8014464:	6103      	str	r3, [r0, #16]
 8014466:	4770      	bx	lr

08014468 <usart_transmit_config>:
 8014468:	68c3      	ldr	r3, [r0, #12]
 801446a:	f023 0308 	bic.w	r3, r3, #8
 801446e:	430b      	orrs	r3, r1
 8014470:	60c3      	str	r3, [r0, #12]
 8014472:	4770      	bx	lr

08014474 <usart_receive_config>:
 8014474:	68c3      	ldr	r3, [r0, #12]
 8014476:	f023 0304 	bic.w	r3, r3, #4
 801447a:	430b      	orrs	r3, r1
 801447c:	60c3      	str	r3, [r0, #12]
 801447e:	4770      	bx	lr

08014480 <usart_hardware_flow_rts_config>:
 8014480:	6943      	ldr	r3, [r0, #20]
 8014482:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8014486:	430b      	orrs	r3, r1
 8014488:	6143      	str	r3, [r0, #20]
 801448a:	4770      	bx	lr

0801448c <usart_hardware_flow_cts_config>:
 801448c:	6943      	ldr	r3, [r0, #20]
 801448e:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8014492:	430b      	orrs	r3, r1
 8014494:	6143      	str	r3, [r0, #20]
 8014496:	4770      	bx	lr

08014498 <usart_flag_get>:
 8014498:	098b      	lsrs	r3, r1, #6
 801449a:	581a      	ldr	r2, [r3, r0]
 801449c:	2301      	movs	r3, #1
 801449e:	f001 011f 	and.w	r1, r1, #31
 80144a2:	408b      	lsls	r3, r1
 80144a4:	4213      	tst	r3, r2
 80144a6:	bf14      	ite	ne
 80144a8:	2001      	movne	r0, #1
 80144aa:	2000      	moveq	r0, #0
 80144ac:	4770      	bx	lr
	...

080144b0 <emac_start>:
 80144b0:	b510      	push	{r4, lr}
 80144b2:	4604      	mov	r4, r0
 80144b4:	f240 6002 	movw	r0, #1538	; 0x602
 80144b8:	f7ff fc50 	bl	8013d5c <rcu_periph_clock_enable>
 80144bc:	f240 6003 	movw	r0, #1539	; 0x603
 80144c0:	f7ff fc4c 	bl	8013d5c <rcu_periph_clock_enable>
 80144c4:	f240 6004 	movw	r0, #1540	; 0x604
 80144c8:	f7ff fc48 	bl	8013d5c <rcu_periph_clock_enable>
 80144cc:	f44f 7380 	mov.w	r3, #256	; 0x100
 80144d0:	2203      	movs	r2, #3
 80144d2:	2118      	movs	r1, #24
 80144d4:	4846      	ldr	r0, [pc, #280]	; (80145f0 <emac_start+0x140>)
 80144d6:	f7ff fba9 	bl	8013c2c <gpio_init>
 80144da:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 80144de:	f7ff fc3d 	bl	8013d5c <rcu_periph_clock_enable>
 80144e2:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 80144e6:	f7ff fc79 	bl	8013ddc <rcu_pll2_config>
 80144ea:	201c      	movs	r0, #28
 80144ec:	f7ff fd20 	bl	8013f30 <rcu_osci_on>
 80144f0:	201c      	movs	r0, #28
 80144f2:	f7ff fcad 	bl	8013e50 <rcu_osci_stab_wait>
 80144f6:	2100      	movs	r1, #0
 80144f8:	f04f 6030 	mov.w	r0, #184549376	; 0xb000000
 80144fc:	f7ff fc5e 	bl	8013dbc <rcu_ckout0_config>
 8014500:	f44f 0000 	mov.w	r0, #8388608	; 0x800000
 8014504:	f7ff fc16 	bl	8013d34 <gpio_ethernet_phy_select>
 8014508:	2302      	movs	r3, #2
 801450a:	2203      	movs	r2, #3
 801450c:	2104      	movs	r1, #4
 801450e:	4838      	ldr	r0, [pc, #224]	; (80145f0 <emac_start+0x140>)
 8014510:	f7ff fb8c 	bl	8013c2c <gpio_init>
 8014514:	2304      	movs	r3, #4
 8014516:	2203      	movs	r2, #3
 8014518:	2118      	movs	r1, #24
 801451a:	4835      	ldr	r0, [pc, #212]	; (80145f0 <emac_start+0x140>)
 801451c:	f7ff fb86 	bl	8013c2c <gpio_init>
 8014520:	2380      	movs	r3, #128	; 0x80
 8014522:	2203      	movs	r2, #3
 8014524:	2104      	movs	r1, #4
 8014526:	4832      	ldr	r0, [pc, #200]	; (80145f0 <emac_start+0x140>)
 8014528:	f7ff fb80 	bl	8013c2c <gpio_init>
 801452c:	2302      	movs	r3, #2
 801452e:	2203      	movs	r2, #3
 8014530:	2118      	movs	r1, #24
 8014532:	4830      	ldr	r0, [pc, #192]	; (80145f4 <emac_start+0x144>)
 8014534:	f7ff fb7a 	bl	8013c2c <gpio_init>
 8014538:	2310      	movs	r3, #16
 801453a:	2203      	movs	r2, #3
 801453c:	2104      	movs	r1, #4
 801453e:	482d      	ldr	r0, [pc, #180]	; (80145f4 <emac_start+0x144>)
 8014540:	f7ff fb74 	bl	8013c2c <gpio_init>
 8014544:	2320      	movs	r3, #32
 8014546:	2203      	movs	r2, #3
 8014548:	2104      	movs	r1, #4
 801454a:	482a      	ldr	r0, [pc, #168]	; (80145f4 <emac_start+0x144>)
 801454c:	f7ff fb6e 	bl	8013c2c <gpio_init>
 8014550:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8014554:	2203      	movs	r2, #3
 8014556:	2118      	movs	r1, #24
 8014558:	4827      	ldr	r0, [pc, #156]	; (80145f8 <emac_start+0x148>)
 801455a:	f7ff fb67 	bl	8013c2c <gpio_init>
 801455e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8014562:	2203      	movs	r2, #3
 8014564:	2118      	movs	r1, #24
 8014566:	4824      	ldr	r0, [pc, #144]	; (80145f8 <emac_start+0x148>)
 8014568:	f7ff fb60 	bl	8013c2c <gpio_init>
 801456c:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8014570:	2203      	movs	r2, #3
 8014572:	2118      	movs	r1, #24
 8014574:	4820      	ldr	r0, [pc, #128]	; (80145f8 <emac_start+0x148>)
 8014576:	f7ff fb59 	bl	8013c2c <gpio_init>
 801457a:	f240 500e 	movw	r0, #1294	; 0x50e
 801457e:	f7ff fbed 	bl	8013d5c <rcu_periph_clock_enable>
 8014582:	f240 500f 	movw	r0, #1295	; 0x50f
 8014586:	f7ff fbe9 	bl	8013d5c <rcu_periph_clock_enable>
 801458a:	f44f 60a2 	mov.w	r0, #1296	; 0x510
 801458e:	f7ff fbe5 	bl	8013d5c <rcu_periph_clock_enable>
 8014592:	f001 f833 	bl	80155fc <enet_deinit>
 8014596:	f000 fc8f 	bl	8014eb8 <enet_software_reset>
 801459a:	b900      	cbnz	r0, 801459e <emac_start+0xee>
 801459c:	e7fe      	b.n	801459c <emac_start+0xec>
 801459e:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 80145a2:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80145a6:	2001      	movs	r0, #1
 80145a8:	f000 fe0a 	bl	80151c0 <enet_init>
 80145ac:	4b13      	ldr	r3, [pc, #76]	; (80145fc <emac_start+0x14c>)
 80145ae:	6018      	str	r0, [r3, #0]
 80145b0:	681b      	ldr	r3, [r3, #0]
 80145b2:	b903      	cbnz	r3, 80145b6 <emac_start+0x106>
 80145b4:	e7fe      	b.n	80145b4 <emac_start+0x104>
 80145b6:	4620      	mov	r0, r4
 80145b8:	f000 fb78 	bl	8014cac <mac_address_get>
 80145bc:	4621      	mov	r1, r4
 80145be:	2000      	movs	r0, #0
 80145c0:	f000 fd5e 	bl	8015080 <enet_mac_address_set>
 80145c4:	f44f 00e0 	mov.w	r0, #7340032	; 0x700000
 80145c8:	f000 fc8a 	bl	8014ee0 <enet_descriptors_chain_init>
 80145cc:	f44f 2060 	mov.w	r0, #917504	; 0xe0000
 80145d0:	f000 fc86 	bl	8014ee0 <enet_descriptors_chain_init>
 80145d4:	f44f 0140 	mov.w	r1, #12582912	; 0xc00000
 80145d8:	4809      	ldr	r0, [pc, #36]	; (8014600 <emac_start+0x150>)
 80145da:	f000 fd4b 	bl	8015074 <enet_transmit_checksum_config>
 80145de:	f44f 0140 	mov.w	r1, #12582912	; 0xc00000
 80145e2:	4808      	ldr	r0, [pc, #32]	; (8014604 <emac_start+0x154>)
 80145e4:	f000 fd46 	bl	8015074 <enet_transmit_checksum_config>
 80145e8:	f000 ff80 	bl	80154ec <enet_enable>
 80145ec:	2001      	movs	r0, #1
 80145ee:	bd10      	pop	{r4, pc}
 80145f0:	40010800 	andmi	r0, r1, r0, lsl #16
 80145f4:	40011000 	andmi	r1, r1, r0
 80145f8:	40010c00 	andmi	r0, r1, r0, lsl #24
 80145fc:	2001ce50 	andcs	ip, r1, r0, asr lr
 8014600:	2002a714 	andcs	sl, r2, r4, lsl r7
 8014604:	2002a724 	andcs	sl, r2, r4, lsr #14

08014608 <emac_eth_recv>:
 8014608:	b538      	push	{r3, r4, r5, lr}
 801460a:	4605      	mov	r5, r0
 801460c:	f000 ffc6 	bl	801559c <enet_rxframe_size_get>
 8014610:	4604      	mov	r4, r0
 8014612:	b138      	cbz	r0, 8014624 <emac_eth_recv+0x1c>
 8014614:	4b05      	ldr	r3, [pc, #20]	; (801462c <emac_eth_recv+0x24>)
 8014616:	2105      	movs	r1, #5
 8014618:	6818      	ldr	r0, [r3, #0]
 801461a:	f000 ff6e 	bl	80154fa <enet_desc_information_get>
 801461e:	6028      	str	r0, [r5, #0]
 8014620:	4620      	mov	r0, r4
 8014622:	bd38      	pop	{r3, r4, r5, pc}
 8014624:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8014628:	e7fb      	b.n	8014622 <emac_eth_recv+0x1a>
 801462a:	bf00      	nop
 801462c:	2001ce60 	andcs	ip, r1, r0, ror #28

08014630 <emac_free_pkt>:
 8014630:	2100      	movs	r1, #0
 8014632:	4608      	mov	r0, r1
 8014634:	f000 bc9c 	b.w	8014f70 <enet_frame_receive>

08014638 <emac_eth_send>:
 8014638:	f000 bcda 	b.w	8014ff0 <enet_frame_transmit>

0801463c <gd32_adc_init()>:
 801463c:	b510      	push	{r4, lr}
 801463e:	f240 6009 	movw	r0, #1545	; 0x609
 8014642:	4c21      	ldr	r4, [pc, #132]	; (80146c8 <gd32_adc_init()+0x8c>)
 8014644:	f7ff fb8a 	bl	8013d5c <rcu_periph_clock_enable>
 8014648:	2005      	movs	r0, #5
 801464a:	f7ff fbd3 	bl	8013df4 <rcu_adc_clock_config>
 801464e:	4620      	mov	r0, r4
 8014650:	2201      	movs	r2, #1
 8014652:	f44f 7180 	mov.w	r1, #256	; 0x100
 8014656:	f000 fb4b 	bl	8014cf0 <adc_special_function_config>
 801465a:	f44f 42e0 	mov.w	r2, #28672	; 0x7000
 801465e:	4620      	mov	r0, r4
 8014660:	2102      	movs	r1, #2
 8014662:	f000 fbe4 	bl	8014e2e <adc_external_trigger_source_config>
 8014666:	2100      	movs	r1, #0
 8014668:	4620      	mov	r0, r4
 801466a:	f000 fb69 	bl	8014d40 <adc_data_alignment_config>
 801466e:	2000      	movs	r0, #0
 8014670:	f000 fb2e 	bl	8014cd0 <adc_mode_config>
 8014674:	2202      	movs	r2, #2
 8014676:	4620      	mov	r0, r4
 8014678:	4611      	mov	r1, r2
 801467a:	f000 fb8d 	bl	8014d98 <adc_channel_length_config>
 801467e:	4620      	mov	r0, r4
 8014680:	2307      	movs	r3, #7
 8014682:	2210      	movs	r2, #16
 8014684:	2100      	movs	r1, #0
 8014686:	f000 fba4 	bl	8014dd2 <adc_inserted_channel_config>
 801468a:	2307      	movs	r3, #7
 801468c:	4620      	mov	r0, r4
 801468e:	2211      	movs	r2, #17
 8014690:	2101      	movs	r1, #1
 8014692:	f000 fb9e 	bl	8014dd2 <adc_inserted_channel_config>
 8014696:	2201      	movs	r2, #1
 8014698:	2102      	movs	r1, #2
 801469a:	4620      	mov	r0, r4
 801469c:	f000 fbd8 	bl	8014e50 <adc_external_trigger_config>
 80146a0:	f000 fb70 	bl	8014d84 <adc_tempsensor_vrefint_enable>
 80146a4:	4620      	mov	r0, r4
 80146a6:	f000 fb54 	bl	8014d52 <adc_enable>
 80146aa:	2100      	movs	r1, #0
 80146ac:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80146b0:	f000 fae4 	bl	8014c7c <udelay(unsigned int, unsigned int)>
 80146b4:	4620      	mov	r0, r4
 80146b6:	f000 fb54 	bl	8014d62 <adc_calibration_enable>
 80146ba:	4620      	mov	r0, r4
 80146bc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80146c0:	2102      	movs	r1, #2
 80146c2:	f000 bbe0 	b.w	8014e86 <adc_software_trigger_enable>
 80146c6:	bf00      	nop
 80146c8:	40012400 	andmi	r2, r1, r0, lsl #8

080146cc <_stop() [clone .isra.0]>:
 80146cc:	b508      	push	{r3, lr}
 80146ce:	4806      	ldr	r0, [pc, #24]	; (80146e8 <_stop() [clone .isra.0]+0x1c>)
 80146d0:	f001 f828 	bl	8015724 <i2c_stop_on_bus>
 80146d4:	f640 73ff 	movw	r3, #4095	; 0xfff
 80146d8:	4904      	ldr	r1, [pc, #16]	; (80146ec <_stop() [clone .isra.0]+0x20>)
 80146da:	f8d1 2400 	ldr.w	r2, [r1, #1024]	; 0x400
 80146de:	0592      	lsls	r2, r2, #22
 80146e0:	d501      	bpl.n	80146e6 <_stop() [clone .isra.0]+0x1a>
 80146e2:	3b01      	subs	r3, #1
 80146e4:	d1f9      	bne.n	80146da <_stop() [clone .isra.0]+0xe>
 80146e6:	bd08      	pop	{r3, pc}
 80146e8:	40005400 	andmi	r5, r0, r0, lsl #8
 80146ec:	40005000 	andmi	r5, r0, r0

080146f0 <gd32_i2c_begin()>:
 80146f0:	b510      	push	{r4, lr}
 80146f2:	f240 7015 	movw	r0, #1813	; 0x715
 80146f6:	f7ff fb31 	bl	8013d5c <rcu_periph_clock_enable>
 80146fa:	4c15      	ldr	r4, [pc, #84]	; (8014750 <gd32_i2c_begin()+0x60>)
 80146fc:	f240 6003 	movw	r0, #1539	; 0x603
 8014700:	f7ff fb2c 	bl	8013d5c <rcu_periph_clock_enable>
 8014704:	f240 6003 	movw	r0, #1539	; 0x603
 8014708:	f7ff fb28 	bl	8013d5c <rcu_periph_clock_enable>
 801470c:	4620      	mov	r0, r4
 801470e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8014712:	2203      	movs	r2, #3
 8014714:	211c      	movs	r1, #28
 8014716:	f7ff fa89 	bl	8013c2c <gpio_init>
 801471a:	f44f 7300 	mov.w	r3, #512	; 0x200
 801471e:	2203      	movs	r2, #3
 8014720:	4620      	mov	r0, r4
 8014722:	211c      	movs	r1, #28
 8014724:	f7ff fa82 	bl	8013c2c <gpio_init>
 8014728:	f5a4 4438 	sub.w	r4, r4, #47104	; 0xb800
 801472c:	2101      	movs	r1, #1
 801472e:	2002      	movs	r0, #2
 8014730:	f7ff fad0 	bl	8013cd4 <gpio_pin_remap_config>
 8014734:	4620      	mov	r0, r4
 8014736:	4907      	ldr	r1, [pc, #28]	; (8014754 <gd32_i2c_begin()+0x64>)
 8014738:	2200      	movs	r2, #0
 801473a:	f000 ff6d 	bl	8015618 <i2c_clock_config>
 801473e:	4620      	mov	r0, r4
 8014740:	f000 ffe6 	bl	8015710 <i2c_enable>
 8014744:	4620      	mov	r0, r4
 8014746:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801474a:	2101      	movs	r1, #1
 801474c:	f000 bfc6 	b.w	80156dc <i2c_ack_config>
 8014750:	40010c00 	andmi	r0, r1, r0, lsl #24
 8014754:	00061a80 	andeq	r1, r6, r0, lsl #21

08014758 <gd32_i2c_set_baudrate(unsigned int)>:
 8014758:	4601      	mov	r1, r0
 801475a:	2200      	movs	r2, #0
 801475c:	4801      	ldr	r0, [pc, #4]	; (8014764 <gd32_i2c_set_baudrate(unsigned int)+0xc>)
 801475e:	f000 bf5b 	b.w	8015618 <i2c_clock_config>
 8014762:	bf00      	nop
 8014764:	40005400 	andmi	r5, r0, r0, lsl #8

08014768 <gd32_i2c_set_address(unsigned char)>:
 8014768:	4b01      	ldr	r3, [pc, #4]	; (8014770 <gd32_i2c_set_address(unsigned char)+0x8>)
 801476a:	0040      	lsls	r0, r0, #1
 801476c:	7018      	strb	r0, [r3, #0]
 801476e:	4770      	bx	lr
 8014770:	2001ce54 	andcs	ip, r1, r4, asr lr

08014774 <gd32_i2c_write(char const*, unsigned int)>:
 8014774:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014776:	4604      	mov	r4, r0
 8014778:	460f      	mov	r7, r1
 801477a:	f640 75ff 	movw	r5, #4095	; 0xfff
 801477e:	4e2e      	ldr	r6, [pc, #184]	; (8014838 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8014780:	f240 6101 	movw	r1, #1537	; 0x601
 8014784:	4630      	mov	r0, r6
 8014786:	f000 ffd7 	bl	8015738 <i2c_flag_get>
 801478a:	b9b0      	cbnz	r0, 80147ba <gd32_i2c_write(char const*, unsigned int)+0x46>
 801478c:	482a      	ldr	r0, [pc, #168]	; (8014838 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 801478e:	f000 ffc4 	bl	801571a <i2c_start_on_bus>
 8014792:	f640 75ff 	movw	r5, #4095	; 0xfff
 8014796:	4e28      	ldr	r6, [pc, #160]	; (8014838 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8014798:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 801479c:	4630      	mov	r0, r6
 801479e:	f000 ffcb 	bl	8015738 <i2c_flag_get>
 80147a2:	b190      	cbz	r0, 80147ca <gd32_i2c_write(char const*, unsigned int)+0x56>
 80147a4:	4b25      	ldr	r3, [pc, #148]	; (801483c <gd32_i2c_write(char const*, unsigned int)+0xc8>)
 80147a6:	f06f 0201 	mvn.w	r2, #1
 80147aa:	7819      	ldrb	r1, [r3, #0]
 80147ac:	4822      	ldr	r0, [pc, #136]	; (8014838 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 80147ae:	f000 ffa7 	bl	8015700 <i2c_master_addressing>
 80147b2:	f640 75ff 	movw	r5, #4095	; 0xfff
 80147b6:	4e20      	ldr	r6, [pc, #128]	; (8014838 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 80147b8:	e00c      	b.n	80147d4 <gd32_i2c_write(char const*, unsigned int)+0x60>
 80147ba:	3d01      	subs	r5, #1
 80147bc:	d1e0      	bne.n	8014780 <gd32_i2c_write(char const*, unsigned int)+0xc>
 80147be:	f7ff ff85 	bl	80146cc <_stop() [clone .isra.0]>
 80147c2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80147c6:	4240      	negs	r0, r0
 80147c8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80147ca:	3d01      	subs	r5, #1
 80147cc:	d1e4      	bne.n	8014798 <gd32_i2c_write(char const*, unsigned int)+0x24>
 80147ce:	e7f6      	b.n	80147be <gd32_i2c_write(char const*, unsigned int)+0x4a>
 80147d0:	3d01      	subs	r5, #1
 80147d2:	d0f4      	beq.n	80147be <gd32_i2c_write(char const*, unsigned int)+0x4a>
 80147d4:	f240 5101 	movw	r1, #1281	; 0x501
 80147d8:	4630      	mov	r0, r6
 80147da:	f000 ffad 	bl	8015738 <i2c_flag_get>
 80147de:	2800      	cmp	r0, #0
 80147e0:	d0f6      	beq.n	80147d0 <gd32_i2c_write(char const*, unsigned int)+0x5c>
 80147e2:	f240 5101 	movw	r1, #1281	; 0x501
 80147e6:	4814      	ldr	r0, [pc, #80]	; (8014838 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 80147e8:	f000 ffb1 	bl	801574e <i2c_flag_clear>
 80147ec:	f640 75ff 	movw	r5, #4095	; 0xfff
 80147f0:	4e11      	ldr	r6, [pc, #68]	; (8014838 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 80147f2:	f240 5107 	movw	r1, #1287	; 0x507
 80147f6:	4630      	mov	r0, r6
 80147f8:	f000 ff9e 	bl	8015738 <i2c_flag_get>
 80147fc:	2801      	cmp	r0, #1
 80147fe:	d107      	bne.n	8014810 <gd32_i2c_write(char const*, unsigned int)+0x9c>
 8014800:	4e0d      	ldr	r6, [pc, #52]	; (8014838 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8014802:	4427      	add	r7, r4
 8014804:	42a7      	cmp	r7, r4
 8014806:	d106      	bne.n	8014816 <gd32_i2c_write(char const*, unsigned int)+0xa2>
 8014808:	f7ff ff60 	bl	80146cc <_stop() [clone .isra.0]>
 801480c:	2000      	movs	r0, #0
 801480e:	e7da      	b.n	80147c6 <gd32_i2c_write(char const*, unsigned int)+0x52>
 8014810:	3d01      	subs	r5, #1
 8014812:	d1ee      	bne.n	80147f2 <gd32_i2c_write(char const*, unsigned int)+0x7e>
 8014814:	e7d3      	b.n	80147be <gd32_i2c_write(char const*, unsigned int)+0x4a>
 8014816:	4630      	mov	r0, r6
 8014818:	f814 1b01 	ldrb.w	r1, [r4], #1
 801481c:	f000 ff87 	bl	801572e <i2c_data_transmit>
 8014820:	f640 75ff 	movw	r5, #4095	; 0xfff
 8014824:	f240 5102 	movw	r1, #1282	; 0x502
 8014828:	4630      	mov	r0, r6
 801482a:	f000 ff85 	bl	8015738 <i2c_flag_get>
 801482e:	2800      	cmp	r0, #0
 8014830:	d1e8      	bne.n	8014804 <gd32_i2c_write(char const*, unsigned int)+0x90>
 8014832:	3d01      	subs	r5, #1
 8014834:	d1f6      	bne.n	8014824 <gd32_i2c_write(char const*, unsigned int)+0xb0>
 8014836:	e7c2      	b.n	80147be <gd32_i2c_write(char const*, unsigned int)+0x4a>
 8014838:	40005400 	andmi	r5, r0, r0, lsl #8
 801483c:	2001ce54 	andcs	ip, r1, r4, asr lr

08014840 <gd32_i2c_read(char*, unsigned int)>:
 8014840:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8014844:	4680      	mov	r8, r0
 8014846:	460c      	mov	r4, r1
 8014848:	f640 76ff 	movw	r6, #4095	; 0xfff
 801484c:	4f4b      	ldr	r7, [pc, #300]	; (801497c <gd32_i2c_read(char*, unsigned int)+0x13c>)
 801484e:	f240 6101 	movw	r1, #1537	; 0x601
 8014852:	4638      	mov	r0, r7
 8014854:	f000 ff70 	bl	8015738 <i2c_flag_get>
 8014858:	4605      	mov	r5, r0
 801485a:	bb08      	cbnz	r0, 80148a0 <gd32_i2c_read(char*, unsigned int)+0x60>
 801485c:	2c02      	cmp	r4, #2
 801485e:	d103      	bne.n	8014868 <gd32_i2c_read(char*, unsigned int)+0x28>
 8014860:	4601      	mov	r1, r0
 8014862:	4846      	ldr	r0, [pc, #280]	; (801497c <gd32_i2c_read(char*, unsigned int)+0x13c>)
 8014864:	f000 ff43 	bl	80156ee <i2c_ackpos_config>
 8014868:	4844      	ldr	r0, [pc, #272]	; (801497c <gd32_i2c_read(char*, unsigned int)+0x13c>)
 801486a:	f000 ff56 	bl	801571a <i2c_start_on_bus>
 801486e:	f640 76ff 	movw	r6, #4095	; 0xfff
 8014872:	4f42      	ldr	r7, [pc, #264]	; (801497c <gd32_i2c_read(char*, unsigned int)+0x13c>)
 8014874:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8014878:	4638      	mov	r0, r7
 801487a:	f000 ff5d 	bl	8015738 <i2c_flag_get>
 801487e:	b1a8      	cbz	r0, 80148ac <gd32_i2c_read(char*, unsigned int)+0x6c>
 8014880:	4b3f      	ldr	r3, [pc, #252]	; (8014980 <gd32_i2c_read(char*, unsigned int)+0x140>)
 8014882:	2201      	movs	r2, #1
 8014884:	7819      	ldrb	r1, [r3, #0]
 8014886:	483d      	ldr	r0, [pc, #244]	; (801497c <gd32_i2c_read(char*, unsigned int)+0x13c>)
 8014888:	f000 ff3a 	bl	8015700 <i2c_master_addressing>
 801488c:	2c02      	cmp	r4, #2
 801488e:	d803      	bhi.n	8014898 <gd32_i2c_read(char*, unsigned int)+0x58>
 8014890:	2100      	movs	r1, #0
 8014892:	483a      	ldr	r0, [pc, #232]	; (801497c <gd32_i2c_read(char*, unsigned int)+0x13c>)
 8014894:	f000 ff22 	bl	80156dc <i2c_ack_config>
 8014898:	f640 76ff 	movw	r6, #4095	; 0xfff
 801489c:	4f37      	ldr	r7, [pc, #220]	; (801497c <gd32_i2c_read(char*, unsigned int)+0x13c>)
 801489e:	e00a      	b.n	80148b6 <gd32_i2c_read(char*, unsigned int)+0x76>
 80148a0:	3e01      	subs	r6, #1
 80148a2:	d1d4      	bne.n	801484e <gd32_i2c_read(char*, unsigned int)+0xe>
 80148a4:	f7ff ff12 	bl	80146cc <_stop() [clone .isra.0]>
 80148a8:	2504      	movs	r5, #4
 80148aa:	e04d      	b.n	8014948 <gd32_i2c_read(char*, unsigned int)+0x108>
 80148ac:	3e01      	subs	r6, #1
 80148ae:	d1e1      	bne.n	8014874 <gd32_i2c_read(char*, unsigned int)+0x34>
 80148b0:	e7f8      	b.n	80148a4 <gd32_i2c_read(char*, unsigned int)+0x64>
 80148b2:	3e01      	subs	r6, #1
 80148b4:	d0f6      	beq.n	80148a4 <gd32_i2c_read(char*, unsigned int)+0x64>
 80148b6:	f240 5101 	movw	r1, #1281	; 0x501
 80148ba:	4638      	mov	r0, r7
 80148bc:	f000 ff3c 	bl	8015738 <i2c_flag_get>
 80148c0:	2800      	cmp	r0, #0
 80148c2:	d0f6      	beq.n	80148b2 <gd32_i2c_read(char*, unsigned int)+0x72>
 80148c4:	f240 5101 	movw	r1, #1281	; 0x501
 80148c8:	482c      	ldr	r0, [pc, #176]	; (801497c <gd32_i2c_read(char*, unsigned int)+0x13c>)
 80148ca:	f000 ff40 	bl	801574e <i2c_flag_clear>
 80148ce:	2c01      	cmp	r4, #1
 80148d0:	d102      	bne.n	80148d8 <gd32_i2c_read(char*, unsigned int)+0x98>
 80148d2:	482a      	ldr	r0, [pc, #168]	; (801497c <gd32_i2c_read(char*, unsigned int)+0x13c>)
 80148d4:	f000 ff26 	bl	8015724 <i2c_stop_on_bus>
 80148d8:	f640 77ff 	movw	r7, #4095	; 0xfff
 80148dc:	4e27      	ldr	r6, [pc, #156]	; (801497c <gd32_i2c_read(char*, unsigned int)+0x13c>)
 80148de:	e022      	b.n	8014926 <gd32_i2c_read(char*, unsigned int)+0xe6>
 80148e0:	2c03      	cmp	r4, #3
 80148e2:	d134      	bne.n	801494e <gd32_i2c_read(char*, unsigned int)+0x10e>
 80148e4:	f640 79ff 	movw	r9, #4095	; 0xfff
 80148e8:	e002      	b.n	80148f0 <gd32_i2c_read(char*, unsigned int)+0xb0>
 80148ea:	f1b9 0901 	subs.w	r9, r9, #1
 80148ee:	d0d9      	beq.n	80148a4 <gd32_i2c_read(char*, unsigned int)+0x64>
 80148f0:	f240 5102 	movw	r1, #1282	; 0x502
 80148f4:	4630      	mov	r0, r6
 80148f6:	f000 ff1f 	bl	8015738 <i2c_flag_get>
 80148fa:	2800      	cmp	r0, #0
 80148fc:	d0f5      	beq.n	80148ea <gd32_i2c_read(char*, unsigned int)+0xaa>
 80148fe:	2100      	movs	r1, #0
 8014900:	4630      	mov	r0, r6
 8014902:	f000 feeb 	bl	80156dc <i2c_ack_config>
 8014906:	f240 5106 	movw	r1, #1286	; 0x506
 801490a:	4630      	mov	r0, r6
 801490c:	f000 ff14 	bl	8015738 <i2c_flag_get>
 8014910:	b138      	cbz	r0, 8014922 <gd32_i2c_read(char*, unsigned int)+0xe2>
 8014912:	4630      	mov	r0, r6
 8014914:	f000 ff0d 	bl	8015732 <i2c_data_receive>
 8014918:	f640 77ff 	movw	r7, #4095	; 0xfff
 801491c:	f808 0b01 	strb.w	r0, [r8], #1
 8014920:	3c01      	subs	r4, #1
 8014922:	3f01      	subs	r7, #1
 8014924:	d0be      	beq.n	80148a4 <gd32_i2c_read(char*, unsigned int)+0x64>
 8014926:	2c00      	cmp	r4, #0
 8014928:	d1da      	bne.n	80148e0 <gd32_i2c_read(char*, unsigned int)+0xa0>
 801492a:	f640 73ff 	movw	r3, #4095	; 0xfff
 801492e:	4915      	ldr	r1, [pc, #84]	; (8014984 <gd32_i2c_read(char*, unsigned int)+0x144>)
 8014930:	f8d1 2400 	ldr.w	r2, [r1, #1024]	; 0x400
 8014934:	0592      	lsls	r2, r2, #22
 8014936:	d41d      	bmi.n	8014974 <gd32_i2c_read(char*, unsigned int)+0x134>
 8014938:	2101      	movs	r1, #1
 801493a:	4810      	ldr	r0, [pc, #64]	; (801497c <gd32_i2c_read(char*, unsigned int)+0x13c>)
 801493c:	f000 fece 	bl	80156dc <i2c_ack_config>
 8014940:	2101      	movs	r1, #1
 8014942:	480e      	ldr	r0, [pc, #56]	; (801497c <gd32_i2c_read(char*, unsigned int)+0x13c>)
 8014944:	f000 fed3 	bl	80156ee <i2c_ackpos_config>
 8014948:	4628      	mov	r0, r5
 801494a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801494e:	2c02      	cmp	r4, #2
 8014950:	d1d9      	bne.n	8014906 <gd32_i2c_read(char*, unsigned int)+0xc6>
 8014952:	f640 79ff 	movw	r9, #4095	; 0xfff
 8014956:	e002      	b.n	801495e <gd32_i2c_read(char*, unsigned int)+0x11e>
 8014958:	f1b9 0901 	subs.w	r9, r9, #1
 801495c:	d0a2      	beq.n	80148a4 <gd32_i2c_read(char*, unsigned int)+0x64>
 801495e:	f240 5102 	movw	r1, #1282	; 0x502
 8014962:	4630      	mov	r0, r6
 8014964:	f000 fee8 	bl	8015738 <i2c_flag_get>
 8014968:	2800      	cmp	r0, #0
 801496a:	d0f5      	beq.n	8014958 <gd32_i2c_read(char*, unsigned int)+0x118>
 801496c:	4630      	mov	r0, r6
 801496e:	f000 fed9 	bl	8015724 <i2c_stop_on_bus>
 8014972:	e7c8      	b.n	8014906 <gd32_i2c_read(char*, unsigned int)+0xc6>
 8014974:	3b01      	subs	r3, #1
 8014976:	d1db      	bne.n	8014930 <gd32_i2c_read(char*, unsigned int)+0xf0>
 8014978:	e796      	b.n	80148a8 <gd32_i2c_read(char*, unsigned int)+0x68>
 801497a:	bf00      	nop
 801497c:	40005400 	andmi	r5, r0, r0, lsl #8
 8014980:	2001ce54 	andcs	ip, r1, r4, asr lr
 8014984:	40005000 	andmi	r5, r0, r0

08014988 <gd32_uart_begin>:
 8014988:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801498a:	461e      	mov	r6, r3
 801498c:	4b82      	ldr	r3, [pc, #520]	; (8014b98 <gd32_uart_begin+0x210>)
 801498e:	4604      	mov	r4, r0
 8014990:	4298      	cmp	r0, r3
 8014992:	460f      	mov	r7, r1
 8014994:	4615      	mov	r5, r2
 8014996:	d060      	beq.n	8014a5a <gd32_uart_begin+0xd2>
 8014998:	d80f      	bhi.n	80149ba <gd32_uart_begin+0x32>
 801499a:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 801499e:	4298      	cmp	r0, r3
 80149a0:	d04a      	beq.n	8014a38 <gd32_uart_begin+0xb0>
 80149a2:	d84c      	bhi.n	8014a3e <gd32_uart_begin+0xb6>
 80149a4:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 80149a8:	4298      	cmp	r0, r3
 80149aa:	d03e      	beq.n	8014a2a <gd32_uart_begin+0xa2>
 80149ac:	f240 7012 	movw	r0, #1810	; 0x712
 80149b0:	f7ff f9d4 	bl	8013d5c <rcu_periph_clock_enable>
 80149b4:	f240 6004 	movw	r0, #1540	; 0x604
 80149b8:	e00f      	b.n	80149da <gd32_uart_begin+0x52>
 80149ba:	4b78      	ldr	r3, [pc, #480]	; (8014b9c <gd32_uart_begin+0x214>)
 80149bc:	4298      	cmp	r0, r3
 80149be:	d006      	beq.n	80149ce <gd32_uart_begin+0x46>
 80149c0:	f503 5360 	add.w	r3, r3, #14336	; 0x3800
 80149c4:	4298      	cmp	r0, r3
 80149c6:	d045      	beq.n	8014a54 <gd32_uart_begin+0xcc>
 80149c8:	f641 201f 	movw	r0, #6687	; 0x1a1f
 80149cc:	e047      	b.n	8014a5e <gd32_uart_begin+0xd6>
 80149ce:	f240 600e 	movw	r0, #1550	; 0x60e
 80149d2:	f7ff f9c3 	bl	8013d5c <rcu_periph_clock_enable>
 80149d6:	f240 6003 	movw	r0, #1539	; 0x603
 80149da:	f7ff f9bf 	bl	8013d5c <rcu_periph_clock_enable>
 80149de:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 80149e2:	f7ff f9bb 	bl	8013d5c <rcu_periph_clock_enable>
 80149e6:	4b6c      	ldr	r3, [pc, #432]	; (8014b98 <gd32_uart_begin+0x210>)
 80149e8:	429c      	cmp	r4, r3
 80149ea:	f000 80c3 	beq.w	8014b74 <gd32_uart_begin+0x1ec>
 80149ee:	d83b      	bhi.n	8014a68 <gd32_uart_begin+0xe0>
 80149f0:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 80149f4:	429c      	cmp	r4, r3
 80149f6:	f000 809c 	beq.w	8014b32 <gd32_uart_begin+0x1aa>
 80149fa:	f200 80a7 	bhi.w	8014b4c <gd32_uart_begin+0x1c4>
 80149fe:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8014a02:	429c      	cmp	r4, r3
 8014a04:	f000 8088 	beq.w	8014b18 <gd32_uart_begin+0x190>
 8014a08:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8014a0c:	2203      	movs	r2, #3
 8014a0e:	2118      	movs	r1, #24
 8014a10:	4863      	ldr	r0, [pc, #396]	; (8014ba0 <gd32_uart_begin+0x218>)
 8014a12:	f7ff f90b 	bl	8013c2c <gpio_init>
 8014a16:	2104      	movs	r1, #4
 8014a18:	4861      	ldr	r0, [pc, #388]	; (8014ba0 <gd32_uart_begin+0x218>)
 8014a1a:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8014a1e:	2203      	movs	r2, #3
 8014a20:	f7ff f904 	bl	8013c2c <gpio_init>
 8014a24:	2101      	movs	r1, #1
 8014a26:	485f      	ldr	r0, [pc, #380]	; (8014ba4 <gd32_uart_begin+0x21c>)
 8014a28:	e03b      	b.n	8014aa2 <gd32_uart_begin+0x11a>
 8014a2a:	f240 7011 	movw	r0, #1809	; 0x711
 8014a2e:	f7ff f995 	bl	8013d5c <rcu_periph_clock_enable>
 8014a32:	f240 6002 	movw	r0, #1538	; 0x602
 8014a36:	e7d0      	b.n	80149da <gd32_uart_begin+0x52>
 8014a38:	f240 7013 	movw	r0, #1811	; 0x713
 8014a3c:	e7b8      	b.n	80149b0 <gd32_uart_begin+0x28>
 8014a3e:	f240 7014 	movw	r0, #1812	; 0x714
 8014a42:	f7ff f98b 	bl	8013d5c <rcu_periph_clock_enable>
 8014a46:	f240 6004 	movw	r0, #1540	; 0x604
 8014a4a:	f7ff f987 	bl	8013d5c <rcu_periph_clock_enable>
 8014a4e:	f240 6005 	movw	r0, #1541	; 0x605
 8014a52:	e7c2      	b.n	80149da <gd32_uart_begin+0x52>
 8014a54:	f641 1018 	movw	r0, #6424	; 0x1918
 8014a58:	e7aa      	b.n	80149b0 <gd32_uart_begin+0x28>
 8014a5a:	f641 201e 	movw	r0, #6686	; 0x1a1e
 8014a5e:	f7ff f97d 	bl	8013d5c <rcu_periph_clock_enable>
 8014a62:	f240 6006 	movw	r0, #1542	; 0x606
 8014a66:	e7b8      	b.n	80149da <gd32_uart_begin+0x52>
 8014a68:	4b4c      	ldr	r3, [pc, #304]	; (8014b9c <gd32_uart_begin+0x214>)
 8014a6a:	429c      	cmp	r4, r3
 8014a6c:	d00b      	beq.n	8014a86 <gd32_uart_begin+0xfe>
 8014a6e:	f503 5360 	add.w	r3, r3, #14336	; 0x3800
 8014a72:	429c      	cmp	r4, r3
 8014a74:	d076      	beq.n	8014b64 <gd32_uart_begin+0x1dc>
 8014a76:	2302      	movs	r3, #2
 8014a78:	2203      	movs	r2, #3
 8014a7a:	2118      	movs	r1, #24
 8014a7c:	484a      	ldr	r0, [pc, #296]	; (8014ba8 <gd32_uart_begin+0x220>)
 8014a7e:	f7ff f8d5 	bl	8013c2c <gpio_init>
 8014a82:	2301      	movs	r3, #1
 8014a84:	e07e      	b.n	8014b84 <gd32_uart_begin+0x1fc>
 8014a86:	2340      	movs	r3, #64	; 0x40
 8014a88:	2203      	movs	r2, #3
 8014a8a:	2118      	movs	r1, #24
 8014a8c:	4847      	ldr	r0, [pc, #284]	; (8014bac <gd32_uart_begin+0x224>)
 8014a8e:	f7ff f8cd 	bl	8013c2c <gpio_init>
 8014a92:	2104      	movs	r1, #4
 8014a94:	4845      	ldr	r0, [pc, #276]	; (8014bac <gd32_uart_begin+0x224>)
 8014a96:	2380      	movs	r3, #128	; 0x80
 8014a98:	2203      	movs	r2, #3
 8014a9a:	f7ff f8c7 	bl	8013c2c <gpio_init>
 8014a9e:	2101      	movs	r1, #1
 8014aa0:	2004      	movs	r0, #4
 8014aa2:	f7ff f917 	bl	8013cd4 <gpio_pin_remap_config>
 8014aa6:	4620      	mov	r0, r4
 8014aa8:	f7ff fc30 	bl	801430c <usart_deinit>
 8014aac:	68e3      	ldr	r3, [r4, #12]
 8014aae:	4639      	mov	r1, r7
 8014ab0:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8014ab4:	4620      	mov	r0, r4
 8014ab6:	60e3      	str	r3, [r4, #12]
 8014ab8:	f7ff fc8a 	bl	80143d0 <usart_baudrate_set>
 8014abc:	f1a5 0309 	sub.w	r3, r5, #9
 8014ac0:	4259      	negs	r1, r3
 8014ac2:	4159      	adcs	r1, r3
 8014ac4:	4620      	mov	r0, r4
 8014ac6:	0309      	lsls	r1, r1, #12
 8014ac8:	f7ff fcbe 	bl	8014448 <usart_word_length_set>
 8014acc:	9906      	ldr	r1, [sp, #24]
 8014ace:	4620      	mov	r0, r4
 8014ad0:	1e8a      	subs	r2, r1, #2
 8014ad2:	4251      	negs	r1, r2
 8014ad4:	4151      	adcs	r1, r2
 8014ad6:	0349      	lsls	r1, r1, #13
 8014ad8:	f7ff fcbe 	bl	8014458 <usart_stop_bit_set>
 8014adc:	2e01      	cmp	r6, #1
 8014ade:	d055      	beq.n	8014b8c <gd32_uart_begin+0x204>
 8014ae0:	2e02      	cmp	r6, #2
 8014ae2:	d156      	bne.n	8014b92 <gd32_uart_begin+0x20a>
 8014ae4:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8014ae8:	4620      	mov	r0, r4
 8014aea:	f7ff fca5 	bl	8014438 <usart_parity_config>
 8014aee:	2100      	movs	r1, #0
 8014af0:	4620      	mov	r0, r4
 8014af2:	f7ff fcc5 	bl	8014480 <usart_hardware_flow_rts_config>
 8014af6:	2100      	movs	r1, #0
 8014af8:	4620      	mov	r0, r4
 8014afa:	f7ff fcc7 	bl	801448c <usart_hardware_flow_cts_config>
 8014afe:	2104      	movs	r1, #4
 8014b00:	4620      	mov	r0, r4
 8014b02:	f7ff fcb7 	bl	8014474 <usart_receive_config>
 8014b06:	2108      	movs	r1, #8
 8014b08:	4620      	mov	r0, r4
 8014b0a:	f7ff fcad 	bl	8014468 <usart_transmit_config>
 8014b0e:	68e3      	ldr	r3, [r4, #12]
 8014b10:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8014b14:	60e3      	str	r3, [r4, #12]
 8014b16:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014b18:	2304      	movs	r3, #4
 8014b1a:	2203      	movs	r2, #3
 8014b1c:	2118      	movs	r1, #24
 8014b1e:	4824      	ldr	r0, [pc, #144]	; (8014bb0 <gd32_uart_begin+0x228>)
 8014b20:	f7ff f884 	bl	8013c2c <gpio_init>
 8014b24:	2308      	movs	r3, #8
 8014b26:	2203      	movs	r2, #3
 8014b28:	2104      	movs	r1, #4
 8014b2a:	4821      	ldr	r0, [pc, #132]	; (8014bb0 <gd32_uart_begin+0x228>)
 8014b2c:	f7ff f87e 	bl	8013c2c <gpio_init>
 8014b30:	e7b9      	b.n	8014aa6 <gd32_uart_begin+0x11e>
 8014b32:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8014b36:	2203      	movs	r2, #3
 8014b38:	2118      	movs	r1, #24
 8014b3a:	4819      	ldr	r0, [pc, #100]	; (8014ba0 <gd32_uart_begin+0x218>)
 8014b3c:	f7ff f876 	bl	8013c2c <gpio_init>
 8014b40:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8014b44:	2203      	movs	r2, #3
 8014b46:	2104      	movs	r1, #4
 8014b48:	4815      	ldr	r0, [pc, #84]	; (8014ba0 <gd32_uart_begin+0x218>)
 8014b4a:	e7ef      	b.n	8014b2c <gd32_uart_begin+0x1a4>
 8014b4c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8014b50:	2203      	movs	r2, #3
 8014b52:	2118      	movs	r1, #24
 8014b54:	4812      	ldr	r0, [pc, #72]	; (8014ba0 <gd32_uart_begin+0x218>)
 8014b56:	f7ff f869 	bl	8013c2c <gpio_init>
 8014b5a:	2304      	movs	r3, #4
 8014b5c:	2203      	movs	r2, #3
 8014b5e:	4619      	mov	r1, r3
 8014b60:	4814      	ldr	r0, [pc, #80]	; (8014bb4 <gd32_uart_begin+0x22c>)
 8014b62:	e7e3      	b.n	8014b2c <gd32_uart_begin+0x1a4>
 8014b64:	2340      	movs	r3, #64	; 0x40
 8014b66:	2203      	movs	r2, #3
 8014b68:	2118      	movs	r1, #24
 8014b6a:	480d      	ldr	r0, [pc, #52]	; (8014ba0 <gd32_uart_begin+0x218>)
 8014b6c:	f7ff f85e 	bl	8013c2c <gpio_init>
 8014b70:	2380      	movs	r3, #128	; 0x80
 8014b72:	e7e7      	b.n	8014b44 <gd32_uart_begin+0x1bc>
 8014b74:	f44f 7380 	mov.w	r3, #256	; 0x100
 8014b78:	2203      	movs	r2, #3
 8014b7a:	2118      	movs	r1, #24
 8014b7c:	480a      	ldr	r0, [pc, #40]	; (8014ba8 <gd32_uart_begin+0x220>)
 8014b7e:	f7ff f855 	bl	8013c2c <gpio_init>
 8014b82:	2380      	movs	r3, #128	; 0x80
 8014b84:	2203      	movs	r2, #3
 8014b86:	2104      	movs	r1, #4
 8014b88:	4807      	ldr	r0, [pc, #28]	; (8014ba8 <gd32_uart_begin+0x220>)
 8014b8a:	e7cf      	b.n	8014b2c <gd32_uart_begin+0x1a4>
 8014b8c:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 8014b90:	e7aa      	b.n	8014ae8 <gd32_uart_begin+0x160>
 8014b92:	2100      	movs	r1, #0
 8014b94:	e7a8      	b.n	8014ae8 <gd32_uart_begin+0x160>
 8014b96:	bf00      	nop
 8014b98:	40007800 	andmi	r7, r0, r0, lsl #16
 8014b9c:	40013800 	andmi	r3, r1, r0, lsl #16
 8014ba0:	40011000 	andmi	r1, r1, r0
 8014ba4:	00140010 	andseq	r0, r4, r0, lsl r0
 8014ba8:	40011800 	andmi	r1, r1, r0, lsl #16
 8014bac:	40010c00 	andmi	r0, r1, r0, lsl #24
 8014bb0:	40010800 	andmi	r0, r1, r0, lsl #16
 8014bb4:	40011400 	andmi	r1, r1, r0, lsl #8

08014bb8 <micros_init()>:
 8014bb8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8014bba:	2400      	movs	r4, #0
 8014bbc:	f04f 36ff 	mov.w	r6, #4294967295	; 0xffffffff
 8014bc0:	4d22      	ldr	r5, [pc, #136]	; (8014c4c <micros_init()+0x94>)
 8014bc2:	f240 6013 	movw	r0, #1555	; 0x613
 8014bc6:	f7ff f8c9 	bl	8013d5c <rcu_periph_clock_enable>
 8014bca:	4628      	mov	r0, r5
 8014bcc:	f7ff fa3a 	bl	8014044 <timer_deinit>
 8014bd0:	4b1f      	ldr	r3, [pc, #124]	; (8014c50 <micros_init()+0x98>)
 8014bd2:	4628      	mov	r0, r5
 8014bd4:	f8c3 4c24 	str.w	r4, [r3, #3108]	; 0xc24
 8014bd8:	4669      	mov	r1, sp
 8014bda:	9400      	str	r4, [sp, #0]
 8014bdc:	f8ad 4004 	strh.w	r4, [sp, #4]
 8014be0:	9602      	str	r6, [sp, #8]
 8014be2:	f8ad 400c 	strh.w	r4, [sp, #12]
 8014be6:	f7ff fad3 	bl	8014190 <timer_init>
 8014bea:	4628      	mov	r0, r5
 8014bec:	4621      	mov	r1, r4
 8014bee:	f7ff fb7c 	bl	80142ea <timer_master_slave_mode_config>
 8014bf2:	4628      	mov	r0, r5
 8014bf4:	2107      	movs	r1, #7
 8014bf6:	f7ff fb70 	bl	80142da <timer_slave_mode_select>
 8014bfa:	2120      	movs	r1, #32
 8014bfc:	4628      	mov	r0, r5
 8014bfe:	f7ff fb5c 	bl	80142ba <timer_input_trigger_source_select>
 8014c02:	4628      	mov	r0, r5
 8014c04:	f7ff fb1c 	bl	8014240 <timer_enable>
 8014c08:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8014c0c:	f240 6014 	movw	r0, #1556	; 0x614
 8014c10:	f7ff f8a4 	bl	8013d5c <rcu_periph_clock_enable>
 8014c14:	4628      	mov	r0, r5
 8014c16:	f7ff fa15 	bl	8014044 <timer_deinit>
 8014c1a:	2377      	movs	r3, #119	; 0x77
 8014c1c:	626c      	str	r4, [r5, #36]	; 0x24
 8014c1e:	4669      	mov	r1, sp
 8014c20:	4628      	mov	r0, r5
 8014c22:	9300      	str	r3, [sp, #0]
 8014c24:	f8ad 4004 	strh.w	r4, [sp, #4]
 8014c28:	9602      	str	r6, [sp, #8]
 8014c2a:	f8ad 400c 	strh.w	r4, [sp, #12]
 8014c2e:	f7ff faaf 	bl	8014190 <timer_init>
 8014c32:	4621      	mov	r1, r4
 8014c34:	4628      	mov	r0, r5
 8014c36:	f7ff fb58 	bl	80142ea <timer_master_slave_mode_config>
 8014c3a:	2120      	movs	r1, #32
 8014c3c:	4628      	mov	r0, r5
 8014c3e:	f7ff fb44 	bl	80142ca <timer_master_output_trigger_source_select>
 8014c42:	4628      	mov	r0, r5
 8014c44:	f7ff fafc 	bl	8014240 <timer_enable>
 8014c48:	b004      	add	sp, #16
 8014c4a:	bd70      	pop	{r4, r5, r6, pc}
 8014c4c:	40014c00 	andmi	r4, r1, r0, lsl #24
 8014c50:	40014000 	andmi	r4, r1, r0

08014c54 <udelay_init()>:
 8014c54:	4a07      	ldr	r2, [pc, #28]	; (8014c74 <udelay_init()+0x20>)
 8014c56:	f8d2 30fc 	ldr.w	r3, [r2, #252]	; 0xfc
 8014c5a:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8014c5e:	f8c2 30fc 	str.w	r3, [r2, #252]	; 0xfc
 8014c62:	2200      	movs	r2, #0
 8014c64:	4b04      	ldr	r3, [pc, #16]	; (8014c78 <udelay_init()+0x24>)
 8014c66:	605a      	str	r2, [r3, #4]
 8014c68:	681a      	ldr	r2, [r3, #0]
 8014c6a:	f042 0201 	orr.w	r2, r2, #1
 8014c6e:	601a      	str	r2, [r3, #0]
 8014c70:	4770      	bx	lr
 8014c72:	bf00      	nop
 8014c74:	e000ed00 	and	lr, r0, r0, lsl #26
 8014c78:	e0001000 	and	r1, r0, r0

08014c7c <udelay(unsigned int, unsigned int)>:
 8014c7c:	2378      	movs	r3, #120	; 0x78
 8014c7e:	b530      	push	{r4, r5, lr}
 8014c80:	4358      	muls	r0, r3
 8014c82:	b909      	cbnz	r1, 8014c88 <udelay(unsigned int, unsigned int)+0xc>
 8014c84:	4b08      	ldr	r3, [pc, #32]	; (8014ca8 <udelay(unsigned int, unsigned int)+0x2c>)
 8014c86:	6859      	ldr	r1, [r3, #4]
 8014c88:	2300      	movs	r3, #0
 8014c8a:	4c07      	ldr	r4, [pc, #28]	; (8014ca8 <udelay(unsigned int, unsigned int)+0x2c>)
 8014c8c:	6862      	ldr	r2, [r4, #4]
 8014c8e:	4291      	cmp	r1, r2
 8014c90:	d0fc      	beq.n	8014c8c <udelay(unsigned int, unsigned int)+0x10>
 8014c92:	bf2a      	itet	cs
 8014c94:	f102 35ff 	addcs.w	r5, r2, #4294967295	; 0xffffffff
 8014c98:	189b      	addcc	r3, r3, r2
 8014c9a:	195b      	addcs	r3, r3, r5
 8014c9c:	1a5b      	subs	r3, r3, r1
 8014c9e:	4283      	cmp	r3, r0
 8014ca0:	d300      	bcc.n	8014ca4 <udelay(unsigned int, unsigned int)+0x28>
 8014ca2:	bd30      	pop	{r4, r5, pc}
 8014ca4:	4611      	mov	r1, r2
 8014ca6:	e7f1      	b.n	8014c8c <udelay(unsigned int, unsigned int)+0x10>
 8014ca8:	e0001000 	and	r1, r0, r0

08014cac <mac_address_get>:
 8014cac:	2102      	movs	r1, #2
 8014cae:	4a07      	ldr	r2, [pc, #28]	; (8014ccc <mac_address_get+0x20>)
 8014cb0:	f8d2 37e8 	ldr.w	r3, [r2, #2024]	; 0x7e8
 8014cb4:	f8d2 27ec 	ldr.w	r2, [r2, #2028]	; 0x7ec
 8014cb8:	7001      	strb	r1, [r0, #0]
 8014cba:	7042      	strb	r2, [r0, #1]
 8014cbc:	0e1a      	lsrs	r2, r3, #24
 8014cbe:	7082      	strb	r2, [r0, #2]
 8014cc0:	0c1a      	lsrs	r2, r3, #16
 8014cc2:	70c2      	strb	r2, [r0, #3]
 8014cc4:	0a1a      	lsrs	r2, r3, #8
 8014cc6:	7102      	strb	r2, [r0, #4]
 8014cc8:	7143      	strb	r3, [r0, #5]
 8014cca:	4770      	bx	lr
 8014ccc:	1ffff000 	svcne	0x00fff000

08014cd0 <adc_mode_config>:
 8014cd0:	4b06      	ldr	r3, [pc, #24]	; (8014cec <adc_mode_config+0x1c>)
 8014cd2:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 8014cd6:	f422 2270 	bic.w	r2, r2, #983040	; 0xf0000
 8014cda:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 8014cde:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 8014ce2:	4302      	orrs	r2, r0
 8014ce4:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 8014ce8:	4770      	bx	lr
 8014cea:	bf00      	nop
 8014cec:	40012000 	andmi	r2, r1, r0

08014cf0 <adc_special_function_config>:
 8014cf0:	b510      	push	{r4, lr}
 8014cf2:	f401 7380 	and.w	r3, r1, #256	; 0x100
 8014cf6:	f401 6480 	and.w	r4, r1, #1024	; 0x400
 8014cfa:	f001 0102 	and.w	r1, r1, #2
 8014cfe:	b17a      	cbz	r2, 8014d20 <adc_special_function_config+0x30>
 8014d00:	b11b      	cbz	r3, 8014d0a <adc_special_function_config+0x1a>
 8014d02:	6843      	ldr	r3, [r0, #4]
 8014d04:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8014d08:	6043      	str	r3, [r0, #4]
 8014d0a:	b11c      	cbz	r4, 8014d14 <adc_special_function_config+0x24>
 8014d0c:	6843      	ldr	r3, [r0, #4]
 8014d0e:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8014d12:	6043      	str	r3, [r0, #4]
 8014d14:	b119      	cbz	r1, 8014d1e <adc_special_function_config+0x2e>
 8014d16:	6883      	ldr	r3, [r0, #8]
 8014d18:	f043 0302 	orr.w	r3, r3, #2
 8014d1c:	6083      	str	r3, [r0, #8]
 8014d1e:	bd10      	pop	{r4, pc}
 8014d20:	b11b      	cbz	r3, 8014d2a <adc_special_function_config+0x3a>
 8014d22:	6843      	ldr	r3, [r0, #4]
 8014d24:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8014d28:	6043      	str	r3, [r0, #4]
 8014d2a:	b11c      	cbz	r4, 8014d34 <adc_special_function_config+0x44>
 8014d2c:	6843      	ldr	r3, [r0, #4]
 8014d2e:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8014d32:	6043      	str	r3, [r0, #4]
 8014d34:	2900      	cmp	r1, #0
 8014d36:	d0f2      	beq.n	8014d1e <adc_special_function_config+0x2e>
 8014d38:	6883      	ldr	r3, [r0, #8]
 8014d3a:	f023 0302 	bic.w	r3, r3, #2
 8014d3e:	e7ed      	b.n	8014d1c <adc_special_function_config+0x2c>

08014d40 <adc_data_alignment_config>:
 8014d40:	6883      	ldr	r3, [r0, #8]
 8014d42:	b119      	cbz	r1, 8014d4c <adc_data_alignment_config+0xc>
 8014d44:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8014d48:	6083      	str	r3, [r0, #8]
 8014d4a:	4770      	bx	lr
 8014d4c:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8014d50:	e7fa      	b.n	8014d48 <adc_data_alignment_config+0x8>

08014d52 <adc_enable>:
 8014d52:	6883      	ldr	r3, [r0, #8]
 8014d54:	07db      	lsls	r3, r3, #31
 8014d56:	bf5e      	ittt	pl
 8014d58:	6883      	ldrpl	r3, [r0, #8]
 8014d5a:	f043 0301 	orrpl.w	r3, r3, #1
 8014d5e:	6083      	strpl	r3, [r0, #8]
 8014d60:	4770      	bx	lr

08014d62 <adc_calibration_enable>:
 8014d62:	6883      	ldr	r3, [r0, #8]
 8014d64:	f100 0208 	add.w	r2, r0, #8
 8014d68:	f043 0308 	orr.w	r3, r3, #8
 8014d6c:	6083      	str	r3, [r0, #8]
 8014d6e:	6813      	ldr	r3, [r2, #0]
 8014d70:	0719      	lsls	r1, r3, #28
 8014d72:	d4fc      	bmi.n	8014d6e <adc_calibration_enable+0xc>
 8014d74:	6883      	ldr	r3, [r0, #8]
 8014d76:	f043 0304 	orr.w	r3, r3, #4
 8014d7a:	6083      	str	r3, [r0, #8]
 8014d7c:	6813      	ldr	r3, [r2, #0]
 8014d7e:	075b      	lsls	r3, r3, #29
 8014d80:	d4fc      	bmi.n	8014d7c <adc_calibration_enable+0x1a>
 8014d82:	4770      	bx	lr

08014d84 <adc_tempsensor_vrefint_enable>:
 8014d84:	4a03      	ldr	r2, [pc, #12]	; (8014d94 <adc_tempsensor_vrefint_enable+0x10>)
 8014d86:	f8d2 3408 	ldr.w	r3, [r2, #1032]	; 0x408
 8014d8a:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8014d8e:	f8c2 3408 	str.w	r3, [r2, #1032]	; 0x408
 8014d92:	4770      	bx	lr
 8014d94:	40012000 	andmi	r2, r1, r0

08014d98 <adc_channel_length_config>:
 8014d98:	2901      	cmp	r1, #1
 8014d9a:	d002      	beq.n	8014da2 <adc_channel_length_config+0xa>
 8014d9c:	2902      	cmp	r1, #2
 8014d9e:	d00c      	beq.n	8014dba <adc_channel_length_config+0x22>
 8014da0:	4770      	bx	lr
 8014da2:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8014da4:	3a01      	subs	r2, #1
 8014da6:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 8014daa:	62c3      	str	r3, [r0, #44]	; 0x2c
 8014dac:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8014dae:	0512      	lsls	r2, r2, #20
 8014db0:	f402 0270 	and.w	r2, r2, #15728640	; 0xf00000
 8014db4:	431a      	orrs	r2, r3
 8014db6:	62c2      	str	r2, [r0, #44]	; 0x2c
 8014db8:	4770      	bx	lr
 8014dba:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8014dbc:	3a01      	subs	r2, #1
 8014dbe:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 8014dc2:	6383      	str	r3, [r0, #56]	; 0x38
 8014dc4:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8014dc6:	0512      	lsls	r2, r2, #20
 8014dc8:	f402 1240 	and.w	r2, r2, #3145728	; 0x300000
 8014dcc:	431a      	orrs	r2, r3
 8014dce:	6382      	str	r2, [r0, #56]	; 0x38
 8014dd0:	4770      	bx	lr

08014dd2 <adc_inserted_channel_config>:
 8014dd2:	b530      	push	{r4, r5, lr}
 8014dd4:	6b84      	ldr	r4, [r0, #56]	; 0x38
 8014dd6:	6b85      	ldr	r5, [r0, #56]	; 0x38
 8014dd8:	f3c4 5401 	ubfx	r4, r4, #20, #2
 8014ddc:	1a61      	subs	r1, r4, r1
 8014dde:	f06f 0404 	mvn.w	r4, #4
 8014de2:	4361      	muls	r1, r4
 8014de4:	241f      	movs	r4, #31
 8014de6:	310f      	adds	r1, #15
 8014de8:	408c      	lsls	r4, r1
 8014dea:	ea25 0504 	bic.w	r5, r5, r4
 8014dee:	fa02 f101 	lsl.w	r1, r2, r1
 8014df2:	4329      	orrs	r1, r5
 8014df4:	2a09      	cmp	r2, #9
 8014df6:	6381      	str	r1, [r0, #56]	; 0x38
 8014df8:	d80b      	bhi.n	8014e12 <adc_inserted_channel_config+0x40>
 8014dfa:	2407      	movs	r4, #7
 8014dfc:	6901      	ldr	r1, [r0, #16]
 8014dfe:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8014e02:	4094      	lsls	r4, r2
 8014e04:	ea21 0104 	bic.w	r1, r1, r4
 8014e08:	fa03 f202 	lsl.w	r2, r3, r2
 8014e0c:	430a      	orrs	r2, r1
 8014e0e:	6102      	str	r2, [r0, #16]
 8014e10:	bd30      	pop	{r4, r5, pc}
 8014e12:	2a11      	cmp	r2, #17
 8014e14:	d8fc      	bhi.n	8014e10 <adc_inserted_channel_config+0x3e>
 8014e16:	2407      	movs	r4, #7
 8014e18:	3a0a      	subs	r2, #10
 8014e1a:	68c1      	ldr	r1, [r0, #12]
 8014e1c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8014e20:	4094      	lsls	r4, r2
 8014e22:	ea21 0104 	bic.w	r1, r1, r4
 8014e26:	4093      	lsls	r3, r2
 8014e28:	430b      	orrs	r3, r1
 8014e2a:	60c3      	str	r3, [r0, #12]
 8014e2c:	e7f0      	b.n	8014e10 <adc_inserted_channel_config+0x3e>

08014e2e <adc_external_trigger_source_config>:
 8014e2e:	2901      	cmp	r1, #1
 8014e30:	d002      	beq.n	8014e38 <adc_external_trigger_source_config+0xa>
 8014e32:	2902      	cmp	r1, #2
 8014e34:	d008      	beq.n	8014e48 <adc_external_trigger_source_config+0x1a>
 8014e36:	4770      	bx	lr
 8014e38:	6883      	ldr	r3, [r0, #8]
 8014e3a:	f423 2360 	bic.w	r3, r3, #917504	; 0xe0000
 8014e3e:	6083      	str	r3, [r0, #8]
 8014e40:	6883      	ldr	r3, [r0, #8]
 8014e42:	4313      	orrs	r3, r2
 8014e44:	6083      	str	r3, [r0, #8]
 8014e46:	4770      	bx	lr
 8014e48:	6883      	ldr	r3, [r0, #8]
 8014e4a:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8014e4e:	e7f6      	b.n	8014e3e <adc_external_trigger_source_config+0x10>

08014e50 <adc_external_trigger_config>:
 8014e50:	f001 0301 	and.w	r3, r1, #1
 8014e54:	f001 0102 	and.w	r1, r1, #2
 8014e58:	b152      	cbz	r2, 8014e70 <adc_external_trigger_config+0x20>
 8014e5a:	b11b      	cbz	r3, 8014e64 <adc_external_trigger_config+0x14>
 8014e5c:	6883      	ldr	r3, [r0, #8]
 8014e5e:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8014e62:	6083      	str	r3, [r0, #8]
 8014e64:	b119      	cbz	r1, 8014e6e <adc_external_trigger_config+0x1e>
 8014e66:	6883      	ldr	r3, [r0, #8]
 8014e68:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8014e6c:	6083      	str	r3, [r0, #8]
 8014e6e:	4770      	bx	lr
 8014e70:	b11b      	cbz	r3, 8014e7a <adc_external_trigger_config+0x2a>
 8014e72:	6883      	ldr	r3, [r0, #8]
 8014e74:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 8014e78:	6083      	str	r3, [r0, #8]
 8014e7a:	2900      	cmp	r1, #0
 8014e7c:	d0f7      	beq.n	8014e6e <adc_external_trigger_config+0x1e>
 8014e7e:	6883      	ldr	r3, [r0, #8]
 8014e80:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8014e84:	e7f2      	b.n	8014e6c <adc_external_trigger_config+0x1c>

08014e86 <adc_software_trigger_enable>:
 8014e86:	07ca      	lsls	r2, r1, #31
 8014e88:	bf42      	ittt	mi
 8014e8a:	6883      	ldrmi	r3, [r0, #8]
 8014e8c:	f443 0380 	orrmi.w	r3, r3, #4194304	; 0x400000
 8014e90:	6083      	strmi	r3, [r0, #8]
 8014e92:	078b      	lsls	r3, r1, #30
 8014e94:	bf42      	ittt	mi
 8014e96:	6883      	ldrmi	r3, [r0, #8]
 8014e98:	f443 1300 	orrmi.w	r3, r3, #2097152	; 0x200000
 8014e9c:	6083      	strmi	r3, [r0, #8]
 8014e9e:	4770      	bx	lr

08014ea0 <enet_delay>:
 8014ea0:	2300      	movs	r3, #0
 8014ea2:	b082      	sub	sp, #8
 8014ea4:	9301      	str	r3, [sp, #4]
 8014ea6:	9001      	str	r0, [sp, #4]
 8014ea8:	9b01      	ldr	r3, [sp, #4]
 8014eaa:	b90b      	cbnz	r3, 8014eb0 <enet_delay+0x10>
 8014eac:	b002      	add	sp, #8
 8014eae:	4770      	bx	lr
 8014eb0:	9b01      	ldr	r3, [sp, #4]
 8014eb2:	3b01      	subs	r3, #1
 8014eb4:	9301      	str	r3, [sp, #4]
 8014eb6:	e7f7      	b.n	8014ea8 <enet_delay+0x8>

08014eb8 <enet_software_reset>:
 8014eb8:	4b07      	ldr	r3, [pc, #28]	; (8014ed8 <enet_software_reset+0x20>)
 8014eba:	681a      	ldr	r2, [r3, #0]
 8014ebc:	f042 0201 	orr.w	r2, r2, #1
 8014ec0:	601a      	str	r2, [r3, #0]
 8014ec2:	4a06      	ldr	r2, [pc, #24]	; (8014edc <enet_software_reset+0x24>)
 8014ec4:	6819      	ldr	r1, [r3, #0]
 8014ec6:	07c9      	lsls	r1, r1, #31
 8014ec8:	d501      	bpl.n	8014ece <enet_software_reset+0x16>
 8014eca:	3a01      	subs	r2, #1
 8014ecc:	d1fa      	bne.n	8014ec4 <enet_software_reset+0xc>
 8014ece:	6818      	ldr	r0, [r3, #0]
 8014ed0:	43c0      	mvns	r0, r0
 8014ed2:	f000 0001 	and.w	r0, r0, #1
 8014ed6:	4770      	bx	lr
 8014ed8:	40029000 	andmi	r9, r2, r0
 8014edc:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

08014ee0 <enet_descriptors_chain_init>:
 8014ee0:	f5b0 0fe0 	cmp.w	r0, #7340032	; 0x700000
 8014ee4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014ee6:	4a19      	ldr	r2, [pc, #100]	; (8014f4c <enet_descriptors_chain_init+0x6c>)
 8014ee8:	d125      	bne.n	8014f36 <enet_descriptors_chain_init+0x56>
 8014eea:	2500      	movs	r5, #0
 8014eec:	f44f 1680 	mov.w	r6, #1048576	; 0x100000
 8014ef0:	2002      	movs	r0, #2
 8014ef2:	4b17      	ldr	r3, [pc, #92]	; (8014f50 <enet_descriptors_chain_init+0x70>)
 8014ef4:	4c17      	ldr	r4, [pc, #92]	; (8014f54 <enet_descriptors_chain_init+0x74>)
 8014ef6:	6113      	str	r3, [r2, #16]
 8014ef8:	4a17      	ldr	r2, [pc, #92]	; (8014f58 <enet_descriptors_chain_init+0x78>)
 8014efa:	6013      	str	r3, [r2, #0]
 8014efc:	2200      	movs	r2, #0
 8014efe:	f240 5ef4 	movw	lr, #1524	; 0x5f4
 8014f02:	4916      	ldr	r1, [pc, #88]	; (8014f5c <enet_descriptors_chain_init+0x7c>)
 8014f04:	f100 3cff 	add.w	ip, r0, #4294967295	; 0xffffffff
 8014f08:	600a      	str	r2, [r1, #0]
 8014f0a:	4915      	ldr	r1, [pc, #84]	; (8014f60 <enet_descriptors_chain_init+0x80>)
 8014f0c:	600a      	str	r2, [r1, #0]
 8014f0e:	f103 0110 	add.w	r1, r3, #16
 8014f12:	fb0e 4702 	mla	r7, lr, r2, r4
 8014f16:	f841 7c08 	str.w	r7, [r1, #-8]
 8014f1a:	4594      	cmp	ip, r2
 8014f1c:	bf94      	ite	ls
 8014f1e:	461f      	movls	r7, r3
 8014f20:	460f      	movhi	r7, r1
 8014f22:	3201      	adds	r2, #1
 8014f24:	4290      	cmp	r0, r2
 8014f26:	e941 6504 	strd	r6, r5, [r1, #-16]
 8014f2a:	f841 7c04 	str.w	r7, [r1, #-4]
 8014f2e:	f101 0110 	add.w	r1, r1, #16
 8014f32:	d1ee      	bne.n	8014f12 <enet_descriptors_chain_init+0x32>
 8014f34:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014f36:	4b0b      	ldr	r3, [pc, #44]	; (8014f64 <enet_descriptors_chain_init+0x84>)
 8014f38:	f244 55f4 	movw	r5, #17908	; 0x45f4
 8014f3c:	60d3      	str	r3, [r2, #12]
 8014f3e:	4a0a      	ldr	r2, [pc, #40]	; (8014f68 <enet_descriptors_chain_init+0x88>)
 8014f40:	f04f 4600 	mov.w	r6, #2147483648	; 0x80000000
 8014f44:	2022      	movs	r0, #34	; 0x22
 8014f46:	4c09      	ldr	r4, [pc, #36]	; (8014f6c <enet_descriptors_chain_init+0x8c>)
 8014f48:	6013      	str	r3, [r2, #0]
 8014f4a:	e7d7      	b.n	8014efc <enet_descriptors_chain_init+0x1c>
 8014f4c:	40029000 	andmi	r9, r2, r0
 8014f50:	2002a714 	andcs	sl, r2, r4, lsl r7
 8014f54:	20029b2c 	andcs	r9, r2, ip, lsr #22
 8014f58:	2001ce64 	andcs	ip, r1, r4, ror #28
 8014f5c:	2001ce58 	andcs	ip, r1, r8, asr lr
 8014f60:	2001ce5c 	andcs	ip, r1, ip, asr lr
 8014f64:	2002990c 	andcs	r9, r2, ip, lsl #18
 8014f68:	2001ce60 	andcs	ip, r1, r0, ror #28
 8014f6c:	2001cea4 	andcs	ip, r1, r4, lsr #29

08014f70 <enet_frame_receive>:
 8014f70:	4a1d      	ldr	r2, [pc, #116]	; (8014fe8 <enet_frame_receive+0x78>)
 8014f72:	b510      	push	{r4, lr}
 8014f74:	6813      	ldr	r3, [r2, #0]
 8014f76:	681b      	ldr	r3, [r3, #0]
 8014f78:	2b00      	cmp	r3, #0
 8014f7a:	db33      	blt.n	8014fe4 <enet_frame_receive+0x74>
 8014f7c:	b970      	cbnz	r0, 8014f9c <enet_frame_receive+0x2c>
 8014f7e:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
 8014f82:	6813      	ldr	r3, [r2, #0]
 8014f84:	6019      	str	r1, [r3, #0]
 8014f86:	4919      	ldr	r1, [pc, #100]	; (8014fec <enet_frame_receive+0x7c>)
 8014f88:	6948      	ldr	r0, [r1, #20]
 8014f8a:	0604      	lsls	r4, r0, #24
 8014f8c:	d419      	bmi.n	8014fc2 <enet_frame_receive+0x52>
 8014f8e:	6859      	ldr	r1, [r3, #4]
 8014f90:	0448      	lsls	r0, r1, #17
 8014f92:	d51b      	bpl.n	8014fcc <enet_frame_receive+0x5c>
 8014f94:	68db      	ldr	r3, [r3, #12]
 8014f96:	2001      	movs	r0, #1
 8014f98:	6013      	str	r3, [r2, #0]
 8014f9a:	bd10      	pop	{r4, pc}
 8014f9c:	f403 4403 	and.w	r4, r3, #33536	; 0x8300
 8014fa0:	f5b4 7f40 	cmp.w	r4, #768	; 0x300
 8014fa4:	d11e      	bne.n	8014fe4 <enet_frame_receive+0x74>
 8014fa6:	f3c3 430d 	ubfx	r3, r3, #16, #14
 8014faa:	3b04      	subs	r3, #4
 8014fac:	428b      	cmp	r3, r1
 8014fae:	d819      	bhi.n	8014fe4 <enet_frame_receive+0x74>
 8014fb0:	2100      	movs	r1, #0
 8014fb2:	4299      	cmp	r1, r3
 8014fb4:	6814      	ldr	r4, [r2, #0]
 8014fb6:	d2e2      	bcs.n	8014f7e <enet_frame_receive+0xe>
 8014fb8:	68a4      	ldr	r4, [r4, #8]
 8014fba:	5d0c      	ldrb	r4, [r1, r4]
 8014fbc:	5444      	strb	r4, [r0, r1]
 8014fbe:	3101      	adds	r1, #1
 8014fc0:	e7f7      	b.n	8014fb2 <enet_frame_receive+0x42>
 8014fc2:	2080      	movs	r0, #128	; 0x80
 8014fc4:	6148      	str	r0, [r1, #20]
 8014fc6:	2000      	movs	r0, #0
 8014fc8:	6088      	str	r0, [r1, #8]
 8014fca:	e7e0      	b.n	8014f8e <enet_frame_receive+0x1e>
 8014fcc:	f411 4f00 	tst.w	r1, #32768	; 0x8000
 8014fd0:	4906      	ldr	r1, [pc, #24]	; (8014fec <enet_frame_receive+0x7c>)
 8014fd2:	bf05      	ittet	eq
 8014fd4:	3310      	addeq	r3, #16
 8014fd6:	6809      	ldreq	r1, [r1, #0]
 8014fd8:	68cb      	ldrne	r3, [r1, #12]
 8014fda:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 8014fde:	bf08      	it	eq
 8014fe0:	185b      	addeq	r3, r3, r1
 8014fe2:	e7d8      	b.n	8014f96 <enet_frame_receive+0x26>
 8014fe4:	2000      	movs	r0, #0
 8014fe6:	e7d8      	b.n	8014f9a <enet_frame_receive+0x2a>
 8014fe8:	2001ce60 	andcs	ip, r1, r0, ror #28
 8014fec:	40029000 	andmi	r9, r2, r0

08014ff0 <enet_frame_transmit>:
 8014ff0:	4a1e      	ldr	r2, [pc, #120]	; (801506c <enet_frame_transmit+0x7c>)
 8014ff2:	b530      	push	{r4, r5, lr}
 8014ff4:	6813      	ldr	r3, [r2, #0]
 8014ff6:	681b      	ldr	r3, [r3, #0]
 8014ff8:	2b00      	cmp	r3, #0
 8014ffa:	db34      	blt.n	8015066 <enet_frame_transmit+0x76>
 8014ffc:	f240 53f4 	movw	r3, #1524	; 0x5f4
 8015000:	4299      	cmp	r1, r3
 8015002:	d830      	bhi.n	8015066 <enet_frame_transmit+0x76>
 8015004:	b9e8      	cbnz	r0, 8015042 <enet_frame_transmit+0x52>
 8015006:	6813      	ldr	r3, [r2, #0]
 8015008:	4819      	ldr	r0, [pc, #100]	; (8015070 <enet_frame_transmit+0x80>)
 801500a:	6059      	str	r1, [r3, #4]
 801500c:	6819      	ldr	r1, [r3, #0]
 801500e:	f041 4130 	orr.w	r1, r1, #2952790016	; 0xb0000000
 8015012:	6019      	str	r1, [r3, #0]
 8015014:	6941      	ldr	r1, [r0, #20]
 8015016:	6944      	ldr	r4, [r0, #20]
 8015018:	f001 0104 	and.w	r1, r1, #4
 801501c:	f004 0420 	and.w	r4, r4, #32
 8015020:	4321      	orrs	r1, r4
 8015022:	d110      	bne.n	8015046 <enet_frame_transmit+0x56>
 8015024:	6819      	ldr	r1, [r3, #0]
 8015026:	02c8      	lsls	r0, r1, #11
 8015028:	d511      	bpl.n	801504e <enet_frame_transmit+0x5e>
 801502a:	68db      	ldr	r3, [r3, #12]
 801502c:	2001      	movs	r0, #1
 801502e:	6013      	str	r3, [r2, #0]
 8015030:	bd30      	pop	{r4, r5, pc}
 8015032:	5cc5      	ldrb	r5, [r0, r3]
 8015034:	68a4      	ldr	r4, [r4, #8]
 8015036:	551d      	strb	r5, [r3, r4]
 8015038:	3301      	adds	r3, #1
 801503a:	428b      	cmp	r3, r1
 801503c:	6814      	ldr	r4, [r2, #0]
 801503e:	d1f8      	bne.n	8015032 <enet_frame_transmit+0x42>
 8015040:	e7e1      	b.n	8015006 <enet_frame_transmit+0x16>
 8015042:	2300      	movs	r3, #0
 8015044:	e7f9      	b.n	801503a <enet_frame_transmit+0x4a>
 8015046:	6141      	str	r1, [r0, #20]
 8015048:	2100      	movs	r1, #0
 801504a:	6041      	str	r1, [r0, #4]
 801504c:	e7ea      	b.n	8015024 <enet_frame_transmit+0x34>
 801504e:	f411 1f00 	tst.w	r1, #2097152	; 0x200000
 8015052:	4907      	ldr	r1, [pc, #28]	; (8015070 <enet_frame_transmit+0x80>)
 8015054:	bf05      	ittet	eq
 8015056:	3310      	addeq	r3, #16
 8015058:	6809      	ldreq	r1, [r1, #0]
 801505a:	690b      	ldrne	r3, [r1, #16]
 801505c:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 8015060:	bf08      	it	eq
 8015062:	185b      	addeq	r3, r3, r1
 8015064:	e7e2      	b.n	801502c <enet_frame_transmit+0x3c>
 8015066:	2000      	movs	r0, #0
 8015068:	e7e2      	b.n	8015030 <enet_frame_transmit+0x40>
 801506a:	bf00      	nop
 801506c:	2001ce64 	andcs	ip, r1, r4, ror #28
 8015070:	40029000 	andmi	r9, r2, r0

08015074 <enet_transmit_checksum_config>:
 8015074:	6803      	ldr	r3, [r0, #0]
 8015076:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 801507a:	430b      	orrs	r3, r1
 801507c:	6003      	str	r3, [r0, #0]
 801507e:	4770      	bx	lr

08015080 <enet_mac_address_set>:
 8015080:	888a      	ldrh	r2, [r1, #4]
 8015082:	4b03      	ldr	r3, [pc, #12]	; (8015090 <enet_mac_address_set+0x10>)
 8015084:	50c2      	str	r2, [r0, r3]
 8015086:	680a      	ldr	r2, [r1, #0]
 8015088:	3304      	adds	r3, #4
 801508a:	50c2      	str	r2, [r0, r3]
 801508c:	4770      	bx	lr
 801508e:	bf00      	nop
 8015090:	40028040 	andmi	r8, r2, r0, asr #32

08015094 <enet_rx_enable>:
 8015094:	4a05      	ldr	r2, [pc, #20]	; (80150ac <enet_rx_enable+0x18>)
 8015096:	6813      	ldr	r3, [r2, #0]
 8015098:	f043 0304 	orr.w	r3, r3, #4
 801509c:	6013      	str	r3, [r2, #0]
 801509e:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 80150a2:	6993      	ldr	r3, [r2, #24]
 80150a4:	f043 0302 	orr.w	r3, r3, #2
 80150a8:	6193      	str	r3, [r2, #24]
 80150aa:	4770      	bx	lr
 80150ac:	40028000 	andmi	r8, r2, r0

080150b0 <enet_phy_write_read>:
 80150b0:	b530      	push	{r4, r5, lr}
 80150b2:	4604      	mov	r4, r0
 80150b4:	4d13      	ldr	r5, [pc, #76]	; (8015104 <enet_phy_write_read+0x54>)
 80150b6:	0192      	lsls	r2, r2, #6
 80150b8:	6928      	ldr	r0, [r5, #16]
 80150ba:	f402 62f8 	and.w	r2, r2, #1984	; 0x7c0
 80150be:	f420 407f 	bic.w	r0, r0, #65280	; 0xff00
 80150c2:	f020 00c3 	bic.w	r0, r0, #195	; 0xc3
 80150c6:	4302      	orrs	r2, r0
 80150c8:	02c9      	lsls	r1, r1, #11
 80150ca:	b289      	uxth	r1, r1
 80150cc:	2c02      	cmp	r4, #2
 80150ce:	ea42 0204 	orr.w	r2, r2, r4
 80150d2:	ea42 0201 	orr.w	r2, r2, r1
 80150d6:	bf08      	it	eq
 80150d8:	8819      	ldrheq	r1, [r3, #0]
 80150da:	f042 0201 	orr.w	r2, r2, #1
 80150de:	bf08      	it	eq
 80150e0:	6169      	streq	r1, [r5, #20]
 80150e2:	612a      	str	r2, [r5, #16]
 80150e4:	4907      	ldr	r1, [pc, #28]	; (8015104 <enet_phy_write_read+0x54>)
 80150e6:	4a08      	ldr	r2, [pc, #32]	; (8015108 <enet_phy_write_read+0x58>)
 80150e8:	6908      	ldr	r0, [r1, #16]
 80150ea:	07c0      	lsls	r0, r0, #31
 80150ec:	d501      	bpl.n	80150f2 <enet_phy_write_read+0x42>
 80150ee:	3a01      	subs	r2, #1
 80150f0:	d1fa      	bne.n	80150e8 <enet_phy_write_read+0x38>
 80150f2:	690a      	ldr	r2, [r1, #16]
 80150f4:	43d2      	mvns	r2, r2
 80150f6:	f002 0001 	and.w	r0, r2, #1
 80150fa:	b90c      	cbnz	r4, 8015100 <enet_phy_write_read+0x50>
 80150fc:	694a      	ldr	r2, [r1, #20]
 80150fe:	801a      	strh	r2, [r3, #0]
 8015100:	bd30      	pop	{r4, r5, pc}
 8015102:	bf00      	nop
 8015104:	40028000 	andmi	r8, r2, r0
 8015108:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

0801510c <enet_phy_config>:
 801510c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801510e:	4d22      	ldr	r5, [pc, #136]	; (8015198 <enet_phy_config+0x8c>)
 8015110:	2001      	movs	r0, #1
 8015112:	692c      	ldr	r4, [r5, #16]
 8015114:	f7fe ff0e 	bl	8013f34 <rcu_clock_freq_get>
 8015118:	4b20      	ldr	r3, [pc, #128]	; (801519c <enet_phy_config+0x90>)
 801511a:	4a21      	ldr	r2, [pc, #132]	; (80151a0 <enet_phy_config+0x94>)
 801511c:	4403      	add	r3, r0
 801511e:	4293      	cmp	r3, r2
 8015120:	f024 041c 	bic.w	r4, r4, #28
 8015124:	d21f      	bcs.n	8015166 <enet_phy_config+0x5a>
 8015126:	f044 0408 	orr.w	r4, r4, #8
 801512a:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801512e:	612c      	str	r4, [r5, #16]
 8015130:	2200      	movs	r2, #0
 8015132:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015136:	2101      	movs	r1, #1
 8015138:	2002      	movs	r0, #2
 801513a:	f10d 0306 	add.w	r3, sp, #6
 801513e:	f7ff ffb7 	bl	80150b0 <enet_phy_write_read>
 8015142:	b310      	cbz	r0, 801518a <enet_phy_config+0x7e>
 8015144:	2200      	movs	r2, #0
 8015146:	4817      	ldr	r0, [pc, #92]	; (80151a4 <enet_phy_config+0x98>)
 8015148:	f7ff feaa 	bl	8014ea0 <enet_delay>
 801514c:	2101      	movs	r1, #1
 801514e:	4610      	mov	r0, r2
 8015150:	f10d 0306 	add.w	r3, sp, #6
 8015154:	f7ff ffac 	bl	80150b0 <enet_phy_write_read>
 8015158:	b1b8      	cbz	r0, 801518a <enet_phy_config+0x7e>
 801515a:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 801515e:	43c0      	mvns	r0, r0
 8015160:	f3c0 30c0 	ubfx	r0, r0, #15, #1
 8015164:	e012      	b.n	801518c <enet_phy_config+0x80>
 8015166:	4b10      	ldr	r3, [pc, #64]	; (80151a8 <enet_phy_config+0x9c>)
 8015168:	4a10      	ldr	r2, [pc, #64]	; (80151ac <enet_phy_config+0xa0>)
 801516a:	4403      	add	r3, r0
 801516c:	4293      	cmp	r3, r2
 801516e:	d802      	bhi.n	8015176 <enet_phy_config+0x6a>
 8015170:	f044 040c 	orr.w	r4, r4, #12
 8015174:	e7d9      	b.n	801512a <enet_phy_config+0x1e>
 8015176:	4b0e      	ldr	r3, [pc, #56]	; (80151b0 <enet_phy_config+0xa4>)
 8015178:	4a0e      	ldr	r2, [pc, #56]	; (80151b4 <enet_phy_config+0xa8>)
 801517a:	4403      	add	r3, r0
 801517c:	4293      	cmp	r3, r2
 801517e:	d3d4      	bcc.n	801512a <enet_phy_config+0x1e>
 8015180:	4b0d      	ldr	r3, [pc, #52]	; (80151b8 <enet_phy_config+0xac>)
 8015182:	4a0e      	ldr	r2, [pc, #56]	; (80151bc <enet_phy_config+0xb0>)
 8015184:	4403      	add	r3, r0
 8015186:	4293      	cmp	r3, r2
 8015188:	d902      	bls.n	8015190 <enet_phy_config+0x84>
 801518a:	2000      	movs	r0, #0
 801518c:	b003      	add	sp, #12
 801518e:	bd30      	pop	{r4, r5, pc}
 8015190:	f044 0404 	orr.w	r4, r4, #4
 8015194:	e7c9      	b.n	801512a <enet_phy_config+0x1e>
 8015196:	bf00      	nop
 8015198:	40028000 	andmi	r8, r2, r0
 801519c:	feced300 	cdp2	3, 12, cr13, cr14, cr0, {0}
 80151a0:	00e4e1c0 	rsceq	lr, r4, r0, asr #3
 80151a4:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 80151a8:	fde9f140 	stc2l	1, cr15, [r9, #256]!	; 0x100
 80151ac:	017d783f 	cmneq	sp, pc, lsr r8
 80151b0:	fc6c7900 	stc2l	9, cr7, [ip], #-0	; <UNPREDICTABLE>
 80151b4:	02625a00 	rsbeq	r5, r2, #0, 20
 80151b8:	fa0a1f00 	blx	829cdc0 <__exidx_end+0x284ef8>
 80151bc:	01312d00 	teqeq	r1, r0, lsl #26

080151c0 <enet_init>:
 80151c0:	2300      	movs	r3, #0
 80151c2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80151c4:	4604      	mov	r4, r0
 80151c6:	460d      	mov	r5, r1
 80151c8:	4616      	mov	r6, r2
 80151ca:	f8ad 3006 	strh.w	r3, [sp, #6]
 80151ce:	f7ff ff9d 	bl	801510c <enet_phy_config>
 80151d2:	2800      	cmp	r0, #0
 80151d4:	d039      	beq.n	801524a <enet_init+0x8a>
 80151d6:	4b3c      	ldr	r3, [pc, #240]	; (80152c8 <enet_init+0x108>)
 80151d8:	4a3c      	ldr	r2, [pc, #240]	; (80152cc <enet_init+0x10c>)
 80151da:	6819      	ldr	r1, [r3, #0]
 80151dc:	f44f 50a8 	mov.w	r0, #5376	; 0x1500
 80151e0:	400a      	ands	r2, r1
 80151e2:	601a      	str	r2, [r3, #0]
 80151e4:	2200      	movs	r2, #0
 80151e6:	605a      	str	r2, [r3, #4]
 80151e8:	609a      	str	r2, [r3, #8]
 80151ea:	60da      	str	r2, [r3, #12]
 80151ec:	6999      	ldr	r1, [r3, #24]
 80151ee:	2c01      	cmp	r4, #1
 80151f0:	f021 01be 	bic.w	r1, r1, #190	; 0xbe
 80151f4:	ea4f 4101 	mov.w	r1, r1, lsl #16
 80151f8:	ea4f 4111 	mov.w	r1, r1, lsr #16
 80151fc:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8015200:	6199      	str	r1, [r3, #24]
 8015202:	4933      	ldr	r1, [pc, #204]	; (80152d0 <enet_init+0x110>)
 8015204:	f8c1 0080 	str.w	r0, [r1, #128]	; 0x80
 8015208:	61da      	str	r2, [r3, #28]
 801520a:	6988      	ldr	r0, [r1, #24]
 801520c:	4b31      	ldr	r3, [pc, #196]	; (80152d4 <enet_init+0x114>)
 801520e:	ea03 0300 	and.w	r3, r3, r0
 8015212:	f043 7308 	orr.w	r3, r3, #35651584	; 0x2200000
 8015216:	618b      	str	r3, [r1, #24]
 8015218:	680b      	ldr	r3, [r1, #0]
 801521a:	4b2f      	ldr	r3, [pc, #188]	; (80152d8 <enet_init+0x118>)
 801521c:	600b      	str	r3, [r1, #0]
 801521e:	d01e      	beq.n	801525e <enet_init+0x9e>
 8015220:	08e3      	lsrs	r3, r4, #3
 8015222:	0861      	lsrs	r1, r4, #1
 8015224:	f401 5100 	and.w	r1, r1, #8192	; 0x2000
 8015228:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801522c:	430b      	orrs	r3, r1
 801522e:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015232:	2101      	movs	r1, #1
 8015234:	2002      	movs	r0, #2
 8015236:	f10d 0306 	add.w	r3, sp, #6
 801523a:	f7ff ff39 	bl	80150b0 <enet_phy_write_read>
 801523e:	b158      	cbz	r0, 8015258 <enet_init+0x98>
 8015240:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 8015244:	f7ff fe2c 	bl	8014ea0 <enet_delay>
 8015248:	e05d      	b.n	8015306 <enet_init+0x146>
 801524a:	4824      	ldr	r0, [pc, #144]	; (80152dc <enet_init+0x11c>)
 801524c:	f7ff fe28 	bl	8014ea0 <enet_delay>
 8015250:	f7ff ff5c 	bl	801510c <enet_phy_config>
 8015254:	2800      	cmp	r0, #0
 8015256:	d1be      	bne.n	80151d6 <enet_init+0x16>
 8015258:	2000      	movs	r0, #0
 801525a:	b003      	add	sp, #12
 801525c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801525e:	4614      	mov	r4, r2
 8015260:	4f1f      	ldr	r7, [pc, #124]	; (80152e0 <enet_init+0x120>)
 8015262:	2201      	movs	r2, #1
 8015264:	2000      	movs	r0, #0
 8015266:	4611      	mov	r1, r2
 8015268:	f10d 0306 	add.w	r3, sp, #6
 801526c:	f7ff ff20 	bl	80150b0 <enet_phy_write_read>
 8015270:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8015274:	3401      	adds	r4, #1
 8015276:	f002 0204 	and.w	r2, r2, #4
 801527a:	f8ad 2006 	strh.w	r2, [sp, #6]
 801527e:	b912      	cbnz	r2, 8015286 <enet_init+0xc6>
 8015280:	42bc      	cmp	r4, r7
 8015282:	d1ee      	bne.n	8015262 <enet_init+0xa2>
 8015284:	e7e8      	b.n	8015258 <enet_init+0x98>
 8015286:	42bc      	cmp	r4, r7
 8015288:	d0e6      	beq.n	8015258 <enet_init+0x98>
 801528a:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 801528e:	2101      	movs	r1, #1
 8015290:	f8ad 2006 	strh.w	r2, [sp, #6]
 8015294:	2002      	movs	r0, #2
 8015296:	2200      	movs	r2, #0
 8015298:	f7ff ff0a 	bl	80150b0 <enet_phy_write_read>
 801529c:	2800      	cmp	r0, #0
 801529e:	d0db      	beq.n	8015258 <enet_init+0x98>
 80152a0:	2400      	movs	r4, #0
 80152a2:	4f0f      	ldr	r7, [pc, #60]	; (80152e0 <enet_init+0x120>)
 80152a4:	2201      	movs	r2, #1
 80152a6:	2000      	movs	r0, #0
 80152a8:	4611      	mov	r1, r2
 80152aa:	f10d 0306 	add.w	r3, sp, #6
 80152ae:	f7ff feff 	bl	80150b0 <enet_phy_write_read>
 80152b2:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 80152b6:	3401      	adds	r4, #1
 80152b8:	f002 0220 	and.w	r2, r2, #32
 80152bc:	f8ad 2006 	strh.w	r2, [sp, #6]
 80152c0:	b982      	cbnz	r2, 80152e4 <enet_init+0x124>
 80152c2:	42bc      	cmp	r4, r7
 80152c4:	d1ee      	bne.n	80152a4 <enet_init+0xe4>
 80152c6:	e7c7      	b.n	8015258 <enet_init+0x98>
 80152c8:	40028000 	andmi	r8, r2, r0
 80152cc:	fd30810f 	ldc2	1, cr8, [r0, #-60]!	; 0xffffffc4
 80152d0:	40029000 	andmi	r9, r2, r0
 80152d4:	f8de3f23 			; <UNDEFINED> instruction: 0xf8de3f23
 80152d8:	02c16000 	sbceq	r6, r1, #0
 80152dc:	008fffff 	strdeq	pc, [pc], pc	; <UNPREDICTABLE>
 80152e0:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 80152e4:	42bc      	cmp	r4, r7
 80152e6:	d0b7      	beq.n	8015258 <enet_init+0x98>
 80152e8:	2101      	movs	r1, #1
 80152ea:	2210      	movs	r2, #16
 80152ec:	2000      	movs	r0, #0
 80152ee:	f7ff fedf 	bl	80150b0 <enet_phy_write_read>
 80152f2:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80152f6:	f3c3 0480 	ubfx	r4, r3, #2, #1
 80152fa:	0799      	lsls	r1, r3, #30
 80152fc:	ea4f 24c4 	mov.w	r4, r4, lsl #11
 8015300:	d401      	bmi.n	8015306 <enet_init+0x146>
 8015302:	f444 4480 	orr.w	r4, r4, #16384	; 0x4000
 8015306:	4b63      	ldr	r3, [pc, #396]	; (8015494 <enet_init+0x2d4>)
 8015308:	681a      	ldr	r2, [r3, #0]
 801530a:	f422 42b0 	bic.w	r2, r2, #22528	; 0x5800
 801530e:	4314      	orrs	r4, r2
 8015310:	056a      	lsls	r2, r5, #21
 8015312:	601c      	str	r4, [r3, #0]
 8015314:	d50b      	bpl.n	801532e <enet_init+0x16e>
 8015316:	681a      	ldr	r2, [r3, #0]
 8015318:	f005 6580 	and.w	r5, r5, #67108864	; 0x4000000
 801531c:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8015320:	601a      	str	r2, [r3, #0]
 8015322:	4a5d      	ldr	r2, [pc, #372]	; (8015498 <enet_init+0x2d8>)
 8015324:	6993      	ldr	r3, [r2, #24]
 8015326:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 801532a:	431d      	orrs	r5, r3
 801532c:	6195      	str	r5, [r2, #24]
 801532e:	4959      	ldr	r1, [pc, #356]	; (8015494 <enet_init+0x2d4>)
 8015330:	684b      	ldr	r3, [r1, #4]
 8015332:	431e      	orrs	r6, r3
 8015334:	4b59      	ldr	r3, [pc, #356]	; (801549c <enet_init+0x2dc>)
 8015336:	604e      	str	r6, [r1, #4]
 8015338:	681a      	ldr	r2, [r3, #0]
 801533a:	07d7      	lsls	r7, r2, #31
 801533c:	d510      	bpl.n	8015360 <enet_init+0x1a0>
 801533e:	685a      	ldr	r2, [r3, #4]
 8015340:	680c      	ldr	r4, [r1, #0]
 8015342:	f002 0080 	and.w	r0, r2, #128	; 0x80
 8015346:	f024 0480 	bic.w	r4, r4, #128	; 0x80
 801534a:	4320      	orrs	r0, r4
 801534c:	6008      	str	r0, [r1, #0]
 801534e:	4852      	ldr	r0, [pc, #328]	; (8015498 <enet_init+0x2d8>)
 8015350:	0892      	lsrs	r2, r2, #2
 8015352:	6981      	ldr	r1, [r0, #24]
 8015354:	f002 02c0 	and.w	r2, r2, #192	; 0xc0
 8015358:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 801535c:	430a      	orrs	r2, r1
 801535e:	6182      	str	r2, [r0, #24]
 8015360:	681a      	ldr	r2, [r3, #0]
 8015362:	0796      	lsls	r6, r2, #30
 8015364:	d508      	bpl.n	8015378 <enet_init+0x1b8>
 8015366:	494c      	ldr	r1, [pc, #304]	; (8015498 <enet_init+0x2d8>)
 8015368:	6898      	ldr	r0, [r3, #8]
 801536a:	680a      	ldr	r2, [r1, #0]
 801536c:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 8015370:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8015374:	4302      	orrs	r2, r0
 8015376:	600a      	str	r2, [r1, #0]
 8015378:	681a      	ldr	r2, [r3, #0]
 801537a:	0755      	lsls	r5, r2, #29
 801537c:	d508      	bpl.n	8015390 <enet_init+0x1d0>
 801537e:	4946      	ldr	r1, [pc, #280]	; (8015498 <enet_init+0x2d8>)
 8015380:	68d8      	ldr	r0, [r3, #12]
 8015382:	680a      	ldr	r2, [r1, #0]
 8015384:	f422 027e 	bic.w	r2, r2, #16646144	; 0xfe0000
 8015388:	f422 527c 	bic.w	r2, r2, #16128	; 0x3f00
 801538c:	4302      	orrs	r2, r0
 801538e:	600a      	str	r2, [r1, #0]
 8015390:	681a      	ldr	r2, [r3, #0]
 8015392:	0714      	lsls	r4, r2, #28
 8015394:	d508      	bpl.n	80153a8 <enet_init+0x1e8>
 8015396:	4940      	ldr	r1, [pc, #256]	; (8015498 <enet_init+0x2d8>)
 8015398:	6918      	ldr	r0, [r3, #16]
 801539a:	680a      	ldr	r2, [r1, #0]
 801539c:	f422 4240 	bic.w	r2, r2, #49152	; 0xc000
 80153a0:	f022 0202 	bic.w	r2, r2, #2
 80153a4:	4302      	orrs	r2, r0
 80153a6:	600a      	str	r2, [r1, #0]
 80153a8:	681a      	ldr	r2, [r3, #0]
 80153aa:	06d0      	lsls	r0, r2, #27
 80153ac:	d506      	bpl.n	80153bc <enet_init+0x1fc>
 80153ae:	493a      	ldr	r1, [pc, #232]	; (8015498 <enet_init+0x2d8>)
 80153b0:	4a3b      	ldr	r2, [pc, #236]	; (80154a0 <enet_init+0x2e0>)
 80153b2:	6988      	ldr	r0, [r1, #24]
 80153b4:	4002      	ands	r2, r0
 80153b6:	6958      	ldr	r0, [r3, #20]
 80153b8:	4302      	orrs	r2, r0
 80153ba:	618a      	str	r2, [r1, #24]
 80153bc:	681a      	ldr	r2, [r3, #0]
 80153be:	0691      	lsls	r1, r2, #26
 80153c0:	d508      	bpl.n	80153d4 <enet_init+0x214>
 80153c2:	4935      	ldr	r1, [pc, #212]	; (8015498 <enet_init+0x2d8>)
 80153c4:	6998      	ldr	r0, [r3, #24]
 80153c6:	698a      	ldr	r2, [r1, #24]
 80153c8:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
 80153cc:	f022 0204 	bic.w	r2, r2, #4
 80153d0:	4302      	orrs	r2, r0
 80153d2:	618a      	str	r2, [r1, #24]
 80153d4:	681a      	ldr	r2, [r3, #0]
 80153d6:	0652      	lsls	r2, r2, #25
 80153d8:	d506      	bpl.n	80153e8 <enet_init+0x228>
 80153da:	492e      	ldr	r1, [pc, #184]	; (8015494 <enet_init+0x2d4>)
 80153dc:	69d8      	ldr	r0, [r3, #28]
 80153de:	69ca      	ldr	r2, [r1, #28]
 80153e0:	0c52      	lsrs	r2, r2, #17
 80153e2:	0452      	lsls	r2, r2, #17
 80153e4:	4302      	orrs	r2, r0
 80153e6:	61ca      	str	r2, [r1, #28]
 80153e8:	681a      	ldr	r2, [r3, #0]
 80153ea:	0617      	lsls	r7, r2, #24
 80153ec:	d517      	bpl.n	801541e <enet_init+0x25e>
 80153ee:	4c29      	ldr	r4, [pc, #164]	; (8015494 <enet_init+0x2d4>)
 80153f0:	6a1a      	ldr	r2, [r3, #32]
 80153f2:	69a0      	ldr	r0, [r4, #24]
 80153f4:	f422 417f 	bic.w	r1, r2, #65280	; 0xff00
 80153f8:	f020 00be 	bic.w	r0, r0, #190	; 0xbe
 80153fc:	0400      	lsls	r0, r0, #16
 80153fe:	0c00      	lsrs	r0, r0, #16
 8015400:	f021 0141 	bic.w	r1, r1, #65	; 0x41
 8015404:	4301      	orrs	r1, r0
 8015406:	4824      	ldr	r0, [pc, #144]	; (8015498 <enet_init+0x2d8>)
 8015408:	61a1      	str	r1, [r4, #24]
 801540a:	f8d0 1080 	ldr.w	r1, [r0, #128]	; 0x80
 801540e:	0a12      	lsrs	r2, r2, #8
 8015410:	f021 0177 	bic.w	r1, r1, #119	; 0x77
 8015414:	f002 0277 	and.w	r2, r2, #119	; 0x77
 8015418:	430a      	orrs	r2, r1
 801541a:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 801541e:	681a      	ldr	r2, [r3, #0]
 8015420:	05d6      	lsls	r6, r2, #23
 8015422:	bf42      	ittt	mi
 8015424:	6a59      	ldrmi	r1, [r3, #36]	; 0x24
 8015426:	4a1b      	ldrmi	r2, [pc, #108]	; (8015494 <enet_init+0x2d4>)
 8015428:	6091      	strmi	r1, [r2, #8]
 801542a:	681a      	ldr	r2, [r3, #0]
 801542c:	0595      	lsls	r5, r2, #22
 801542e:	bf42      	ittt	mi
 8015430:	4a18      	ldrmi	r2, [pc, #96]	; (8015494 <enet_init+0x2d4>)
 8015432:	6a99      	ldrmi	r1, [r3, #40]	; 0x28
 8015434:	60d1      	strmi	r1, [r2, #12]
 8015436:	681a      	ldr	r2, [r3, #0]
 8015438:	0554      	lsls	r4, r2, #21
 801543a:	d508      	bpl.n	801544e <enet_init+0x28e>
 801543c:	4915      	ldr	r1, [pc, #84]	; (8015494 <enet_init+0x2d4>)
 801543e:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 8015440:	684a      	ldr	r2, [r1, #4]
 8015442:	f422 62fb 	bic.w	r2, r2, #2008	; 0x7d8
 8015446:	f022 0206 	bic.w	r2, r2, #6
 801544a:	4302      	orrs	r2, r0
 801544c:	604a      	str	r2, [r1, #4]
 801544e:	681a      	ldr	r2, [r3, #0]
 8015450:	0510      	lsls	r0, r2, #20
 8015452:	d508      	bpl.n	8015466 <enet_init+0x2a6>
 8015454:	490f      	ldr	r1, [pc, #60]	; (8015494 <enet_init+0x2d4>)
 8015456:	6b18      	ldr	r0, [r3, #48]	; 0x30
 8015458:	680a      	ldr	r2, [r1, #0]
 801545a:	f422 3291 	bic.w	r2, r2, #74240	; 0x12200
 801545e:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8015462:	4302      	orrs	r2, r0
 8015464:	600a      	str	r2, [r1, #0]
 8015466:	681a      	ldr	r2, [r3, #0]
 8015468:	04d1      	lsls	r1, r2, #19
 801546a:	d506      	bpl.n	801547a <enet_init+0x2ba>
 801546c:	4909      	ldr	r1, [pc, #36]	; (8015494 <enet_init+0x2d4>)
 801546e:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8015470:	680a      	ldr	r2, [r1, #0]
 8015472:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 8015476:	4302      	orrs	r2, r0
 8015478:	600a      	str	r2, [r1, #0]
 801547a:	681a      	ldr	r2, [r3, #0]
 801547c:	0492      	lsls	r2, r2, #18
 801547e:	d506      	bpl.n	801548e <enet_init+0x2ce>
 8015480:	4904      	ldr	r1, [pc, #16]	; (8015494 <enet_init+0x2d4>)
 8015482:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015484:	680a      	ldr	r2, [r1, #0]
 8015486:	f422 2260 	bic.w	r2, r2, #917504	; 0xe0000
 801548a:	4313      	orrs	r3, r2
 801548c:	600b      	str	r3, [r1, #0]
 801548e:	2001      	movs	r0, #1
 8015490:	e6e3      	b.n	801525a <enet_init+0x9a>
 8015492:	bf00      	nop
 8015494:	40028000 	andmi	r8, r2, r0
 8015498:	40029000 	andmi	r9, r2, r0
 801549c:	2001ce68 	andcs	ip, r1, r8, ror #28
 80154a0:	fdde3fe7 	ldc2l	15, cr3, [lr, #924]	; 0x39c

080154a4 <enet_txfifo_flush>:
 80154a4:	4b06      	ldr	r3, [pc, #24]	; (80154c0 <enet_txfifo_flush+0x1c>)
 80154a6:	4807      	ldr	r0, [pc, #28]	; (80154c4 <enet_txfifo_flush+0x20>)
 80154a8:	699a      	ldr	r2, [r3, #24]
 80154aa:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 80154ae:	619a      	str	r2, [r3, #24]
 80154b0:	699a      	ldr	r2, [r3, #24]
 80154b2:	02d2      	lsls	r2, r2, #11
 80154b4:	d502      	bpl.n	80154bc <enet_txfifo_flush+0x18>
 80154b6:	3801      	subs	r0, #1
 80154b8:	d1fa      	bne.n	80154b0 <enet_txfifo_flush+0xc>
 80154ba:	4770      	bx	lr
 80154bc:	2001      	movs	r0, #1
 80154be:	4770      	bx	lr
 80154c0:	40029000 	andmi	r9, r2, r0
 80154c4:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

080154c8 <enet_tx_enable>:
 80154c8:	4a06      	ldr	r2, [pc, #24]	; (80154e4 <enet_tx_enable+0x1c>)
 80154ca:	b508      	push	{r3, lr}
 80154cc:	6813      	ldr	r3, [r2, #0]
 80154ce:	f043 0308 	orr.w	r3, r3, #8
 80154d2:	6013      	str	r3, [r2, #0]
 80154d4:	f7ff ffe6 	bl	80154a4 <enet_txfifo_flush>
 80154d8:	4a03      	ldr	r2, [pc, #12]	; (80154e8 <enet_tx_enable+0x20>)
 80154da:	6993      	ldr	r3, [r2, #24]
 80154dc:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80154e0:	6193      	str	r3, [r2, #24]
 80154e2:	bd08      	pop	{r3, pc}
 80154e4:	40028000 	andmi	r8, r2, r0
 80154e8:	40029000 	andmi	r9, r2, r0

080154ec <enet_enable>:
 80154ec:	b508      	push	{r3, lr}
 80154ee:	f7ff ffeb 	bl	80154c8 <enet_tx_enable>
 80154f2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80154f6:	f7ff bdcd 	b.w	8015094 <enet_rx_enable>

080154fa <enet_desc_information_get>:
 80154fa:	2905      	cmp	r1, #5
 80154fc:	d817      	bhi.n	801552e <enet_desc_information_get+0x34>
 80154fe:	e8df f001 	tbb	[pc, r1]
 8015502:	03091012 	movweq	r1, #36882	; 0x9012
 8015506:	68401007 	stmdavs	r0, {r0, r1, r2, ip}^
 801550a:	f3c0 000c 	ubfx	r0, r0, #0, #13
 801550e:	4770      	bx	lr
 8015510:	88c0      	ldrh	r0, [r0, #6]
 8015512:	e7fa      	b.n	801550a <enet_desc_information_get+0x10>
 8015514:	8840      	ldrh	r0, [r0, #2]
 8015516:	f3c0 000d 	ubfx	r0, r0, #0, #14
 801551a:	2804      	cmp	r0, #4
 801551c:	d90a      	bls.n	8015534 <enet_desc_information_get+0x3a>
 801551e:	3804      	subs	r0, #4
 8015520:	4770      	bx	lr
 8015522:	6880      	ldr	r0, [r0, #8]
 8015524:	4770      	bx	lr
 8015526:	6800      	ldr	r0, [r0, #0]
 8015528:	f3c0 00c3 	ubfx	r0, r0, #3, #4
 801552c:	4770      	bx	lr
 801552e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8015532:	4770      	bx	lr
 8015534:	2000      	movs	r0, #0
 8015536:	4770      	bx	lr

08015538 <enet_rxframe_drop>:
 8015538:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 801553c:	4814      	ldr	r0, [pc, #80]	; (8015590 <enet_rxframe_drop+0x58>)
 801553e:	b510      	push	{r4, lr}
 8015540:	6802      	ldr	r2, [r0, #0]
 8015542:	4914      	ldr	r1, [pc, #80]	; (8015594 <enet_rxframe_drop+0x5c>)
 8015544:	6854      	ldr	r4, [r2, #4]
 8015546:	6013      	str	r3, [r2, #0]
 8015548:	f414 4f80 	tst.w	r4, #16384	; 0x4000
 801554c:	680b      	ldr	r3, [r1, #0]
 801554e:	d009      	beq.n	8015564 <enet_rxframe_drop+0x2c>
 8015550:	b12b      	cbz	r3, 801555e <enet_rxframe_drop+0x26>
 8015552:	68da      	ldr	r2, [r3, #12]
 8015554:	6002      	str	r2, [r0, #0]
 8015556:	681a      	ldr	r2, [r3, #0]
 8015558:	b1ba      	cbz	r2, 801558a <enet_rxframe_drop+0x52>
 801555a:	600a      	str	r2, [r1, #0]
 801555c:	bd10      	pop	{r4, pc}
 801555e:	68d3      	ldr	r3, [r2, #12]
 8015560:	6003      	str	r3, [r0, #0]
 8015562:	e7fb      	b.n	801555c <enet_rxframe_drop+0x24>
 8015564:	f414 4f00 	tst.w	r4, #32768	; 0x8000
 8015568:	4c0b      	ldr	r4, [pc, #44]	; (8015598 <enet_rxframe_drop+0x60>)
 801556a:	d006      	beq.n	801557a <enet_rxframe_drop+0x42>
 801556c:	68e2      	ldr	r2, [r4, #12]
 801556e:	6002      	str	r2, [r0, #0]
 8015570:	2b00      	cmp	r3, #0
 8015572:	d0f3      	beq.n	801555c <enet_rxframe_drop+0x24>
 8015574:	681b      	ldr	r3, [r3, #0]
 8015576:	600b      	str	r3, [r1, #0]
 8015578:	e7f0      	b.n	801555c <enet_rxframe_drop+0x24>
 801557a:	6824      	ldr	r4, [r4, #0]
 801557c:	3210      	adds	r2, #16
 801557e:	f3c4 0484 	ubfx	r4, r4, #2, #5
 8015582:	4422      	add	r2, r4
 8015584:	6002      	str	r2, [r0, #0]
 8015586:	2b00      	cmp	r3, #0
 8015588:	d0e8      	beq.n	801555c <enet_rxframe_drop+0x24>
 801558a:	3310      	adds	r3, #16
 801558c:	e7f3      	b.n	8015576 <enet_rxframe_drop+0x3e>
 801558e:	bf00      	nop
 8015590:	2001ce60 	andcs	ip, r1, r0, ror #28
 8015594:	2001ce58 	andcs	ip, r1, r8, asr lr
 8015598:	40029000 	andmi	r9, r2, r0

0801559c <enet_rxframe_size_get>:
 801559c:	b508      	push	{r3, lr}
 801559e:	4b0c      	ldr	r3, [pc, #48]	; (80155d0 <enet_rxframe_size_get+0x34>)
 80155a0:	681b      	ldr	r3, [r3, #0]
 80155a2:	6818      	ldr	r0, [r3, #0]
 80155a4:	2800      	cmp	r0, #0
 80155a6:	db10      	blt.n	80155ca <enet_rxframe_size_get+0x2e>
 80155a8:	f400 4303 	and.w	r3, r0, #33536	; 0x8300
 80155ac:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80155b0:	d003      	beq.n	80155ba <enet_rxframe_size_get+0x1e>
 80155b2:	f7ff ffc1 	bl	8015538 <enet_rxframe_drop>
 80155b6:	2001      	movs	r0, #1
 80155b8:	bd08      	pop	{r3, pc}
 80155ba:	f000 0321 	and.w	r3, r0, #33	; 0x21
 80155be:	2b21      	cmp	r3, #33	; 0x21
 80155c0:	d0f7      	beq.n	80155b2 <enet_rxframe_size_get+0x16>
 80155c2:	f3c0 400d 	ubfx	r0, r0, #16, #14
 80155c6:	3804      	subs	r0, #4
 80155c8:	e7f6      	b.n	80155b8 <enet_rxframe_size_get+0x1c>
 80155ca:	2000      	movs	r0, #0
 80155cc:	e7f4      	b.n	80155b8 <enet_rxframe_size_get+0x1c>
 80155ce:	bf00      	nop
 80155d0:	2001ce60 	andcs	ip, r1, r0, ror #28

080155d4 <enet_initpara_reset>:
 80155d4:	2200      	movs	r2, #0
 80155d6:	4b08      	ldr	r3, [pc, #32]	; (80155f8 <enet_initpara_reset+0x24>)
 80155d8:	e9c3 2200 	strd	r2, r2, [r3]
 80155dc:	e9c3 2202 	strd	r2, r2, [r3, #8]
 80155e0:	e9c3 2204 	strd	r2, r2, [r3, #16]
 80155e4:	e9c3 2206 	strd	r2, r2, [r3, #24]
 80155e8:	e9c3 2208 	strd	r2, r2, [r3, #32]
 80155ec:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 80155f0:	e9c3 220c 	strd	r2, r2, [r3, #48]	; 0x30
 80155f4:	639a      	str	r2, [r3, #56]	; 0x38
 80155f6:	4770      	bx	lr
 80155f8:	2001ce68 	andcs	ip, r1, r8, ror #28

080155fc <enet_deinit>:
 80155fc:	b508      	push	{r3, lr}
 80155fe:	f640 200e 	movw	r0, #2574	; 0xa0e
 8015602:	f7fe fbc6 	bl	8013d92 <rcu_periph_reset_enable>
 8015606:	f640 200e 	movw	r0, #2574	; 0xa0e
 801560a:	f7fe fbc4 	bl	8013d96 <rcu_periph_reset_disable>
 801560e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8015612:	f7ff bfdf 	b.w	80155d4 <enet_initpara_reset>
	...

08015618 <i2c_clock_config>:
 8015618:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801561a:	4605      	mov	r5, r0
 801561c:	2002      	movs	r0, #2
 801561e:	460c      	mov	r4, r1
 8015620:	4617      	mov	r7, r2
 8015622:	f7fe fc87 	bl	8013f34 <rcu_clock_freq_get>
 8015626:	4603      	mov	r3, r0
 8015628:	4828      	ldr	r0, [pc, #160]	; (80156cc <i2c_clock_config+0xb4>)
 801562a:	4a29      	ldr	r2, [pc, #164]	; (80156d0 <i2c_clock_config+0xb8>)
 801562c:	fbb3 f0f0 	udiv	r0, r3, r0
 8015630:	4293      	cmp	r3, r2
 8015632:	bf94      	ite	ls
 8015634:	4601      	movls	r1, r0
 8015636:	213f      	movhi	r1, #63	; 0x3f
 8015638:	686e      	ldr	r6, [r5, #4]
 801563a:	4a26      	ldr	r2, [pc, #152]	; (80156d4 <i2c_clock_config+0xbc>)
 801563c:	f026 063f 	bic.w	r6, r6, #63	; 0x3f
 8015640:	430e      	orrs	r6, r1
 8015642:	4294      	cmp	r4, r2
 8015644:	606e      	str	r6, [r5, #4]
 8015646:	d816      	bhi.n	8015676 <i2c_clock_config+0x5e>
 8015648:	3001      	adds	r0, #1
 801564a:	283e      	cmp	r0, #62	; 0x3e
 801564c:	d90d      	bls.n	801566a <i2c_clock_config+0x52>
 801564e:	223f      	movs	r2, #63	; 0x3f
 8015650:	622a      	str	r2, [r5, #32]
 8015652:	0064      	lsls	r4, r4, #1
 8015654:	fbb3 f4f4 	udiv	r4, r3, r4
 8015658:	2c04      	cmp	r4, #4
 801565a:	bf38      	it	cc
 801565c:	2404      	movcc	r4, #4
 801565e:	69ea      	ldr	r2, [r5, #28]
 8015660:	f3c4 040b 	ubfx	r4, r4, #0, #12
 8015664:	4314      	orrs	r4, r2
 8015666:	61ec      	str	r4, [r5, #28]
 8015668:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801566a:	2802      	cmp	r0, #2
 801566c:	d801      	bhi.n	8015672 <i2c_clock_config+0x5a>
 801566e:	2202      	movs	r2, #2
 8015670:	e7ee      	b.n	8015650 <i2c_clock_config+0x38>
 8015672:	6228      	str	r0, [r5, #32]
 8015674:	e7ed      	b.n	8015652 <i2c_clock_config+0x3a>
 8015676:	4a18      	ldr	r2, [pc, #96]	; (80156d8 <i2c_clock_config+0xc0>)
 8015678:	4294      	cmp	r4, r2
 801567a:	d8f5      	bhi.n	8015668 <i2c_clock_config+0x50>
 801567c:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8015680:	4351      	muls	r1, r2
 8015682:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8015686:	fbb1 f1f2 	udiv	r1, r1, r2
 801568a:	3101      	adds	r1, #1
 801568c:	6229      	str	r1, [r5, #32]
 801568e:	b9a7      	cbnz	r7, 80156ba <i2c_clock_config+0xa2>
 8015690:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8015694:	fbb3 f4f4 	udiv	r4, r3, r4
 8015698:	69eb      	ldr	r3, [r5, #28]
 801569a:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 801569e:	61eb      	str	r3, [r5, #28]
 80156a0:	f3c4 030b 	ubfx	r3, r4, #0, #12
 80156a4:	b90b      	cbnz	r3, 80156aa <i2c_clock_config+0x92>
 80156a6:	f044 0401 	orr.w	r4, r4, #1
 80156aa:	69eb      	ldr	r3, [r5, #28]
 80156ac:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80156b0:	61eb      	str	r3, [r5, #28]
 80156b2:	69eb      	ldr	r3, [r5, #28]
 80156b4:	4323      	orrs	r3, r4
 80156b6:	61eb      	str	r3, [r5, #28]
 80156b8:	e7d6      	b.n	8015668 <i2c_clock_config+0x50>
 80156ba:	2219      	movs	r2, #25
 80156bc:	4354      	muls	r4, r2
 80156be:	fbb3 f4f4 	udiv	r4, r3, r4
 80156c2:	69eb      	ldr	r3, [r5, #28]
 80156c4:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80156c8:	e7e9      	b.n	801569e <i2c_clock_config+0x86>
 80156ca:	bf00      	nop
 80156cc:	000f4240 	andeq	r4, pc, r0, asr #4
 80156d0:	03c14dbf 	biceq	r4, r1, #12224	; 0x2fc0
 80156d4:	000186a0 	andeq	r8, r1, r0, lsr #13
 80156d8:	00061a80 	andeq	r1, r6, r0, lsl #21

080156dc <i2c_ack_config>:
 80156dc:	6803      	ldr	r3, [r0, #0]
 80156de:	2901      	cmp	r1, #1
 80156e0:	bf0c      	ite	eq
 80156e2:	f443 6380 	orreq.w	r3, r3, #1024	; 0x400
 80156e6:	f423 6380 	bicne.w	r3, r3, #1024	; 0x400
 80156ea:	6003      	str	r3, [r0, #0]
 80156ec:	4770      	bx	lr

080156ee <i2c_ackpos_config>:
 80156ee:	6803      	ldr	r3, [r0, #0]
 80156f0:	b919      	cbnz	r1, 80156fa <i2c_ackpos_config+0xc>
 80156f2:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 80156f6:	6003      	str	r3, [r0, #0]
 80156f8:	4770      	bx	lr
 80156fa:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80156fe:	e7fa      	b.n	80156f6 <i2c_ackpos_config+0x8>

08015700 <i2c_master_addressing>:
 8015700:	3202      	adds	r2, #2
 8015702:	bf0c      	ite	eq
 8015704:	f021 0101 	biceq.w	r1, r1, #1
 8015708:	f041 0101 	orrne.w	r1, r1, #1
 801570c:	6101      	str	r1, [r0, #16]
 801570e:	4770      	bx	lr

08015710 <i2c_enable>:
 8015710:	6803      	ldr	r3, [r0, #0]
 8015712:	f043 0301 	orr.w	r3, r3, #1
 8015716:	6003      	str	r3, [r0, #0]
 8015718:	4770      	bx	lr

0801571a <i2c_start_on_bus>:
 801571a:	6803      	ldr	r3, [r0, #0]
 801571c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8015720:	6003      	str	r3, [r0, #0]
 8015722:	4770      	bx	lr

08015724 <i2c_stop_on_bus>:
 8015724:	6803      	ldr	r3, [r0, #0]
 8015726:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 801572a:	6003      	str	r3, [r0, #0]
 801572c:	4770      	bx	lr

0801572e <i2c_data_transmit>:
 801572e:	6101      	str	r1, [r0, #16]
 8015730:	4770      	bx	lr

08015732 <i2c_data_receive>:
 8015732:	6900      	ldr	r0, [r0, #16]
 8015734:	b2c0      	uxtb	r0, r0
 8015736:	4770      	bx	lr

08015738 <i2c_flag_get>:
 8015738:	098b      	lsrs	r3, r1, #6
 801573a:	581a      	ldr	r2, [r3, r0]
 801573c:	2301      	movs	r3, #1
 801573e:	f001 011f 	and.w	r1, r1, #31
 8015742:	408b      	lsls	r3, r1
 8015744:	4213      	tst	r3, r2
 8015746:	bf14      	ite	ne
 8015748:	2001      	movne	r0, #1
 801574a:	2000      	moveq	r0, #0
 801574c:	4770      	bx	lr

0801574e <i2c_flag_clear>:
 801574e:	f240 5301 	movw	r3, #1281	; 0x501
 8015752:	4299      	cmp	r1, r3
 8015754:	b510      	push	{r4, lr}
 8015756:	d102      	bne.n	801575e <i2c_flag_clear+0x10>
 8015758:	6943      	ldr	r3, [r0, #20]
 801575a:	6983      	ldr	r3, [r0, #24]
 801575c:	bd10      	pop	{r4, pc}
 801575e:	2201      	movs	r2, #1
 8015760:	098c      	lsrs	r4, r1, #6
 8015762:	5823      	ldr	r3, [r4, r0]
 8015764:	f001 011f 	and.w	r1, r1, #31
 8015768:	408a      	lsls	r2, r1
 801576a:	ea23 0302 	bic.w	r3, r3, r2
 801576e:	5023      	str	r3, [r4, r0]
 8015770:	e7f4      	b.n	801575c <i2c_flag_clear+0xe>
	...

08015774 <__popcountsi2>:
 8015774:	0843      	lsrs	r3, r0, #1
 8015776:	f003 3355 	and.w	r3, r3, #1431655765	; 0x55555555
 801577a:	1ac0      	subs	r0, r0, r3
 801577c:	0883      	lsrs	r3, r0, #2
 801577e:	f003 3333 	and.w	r3, r3, #858993459	; 0x33333333
 8015782:	f000 3033 	and.w	r0, r0, #858993459	; 0x33333333
 8015786:	4418      	add	r0, r3
 8015788:	eb00 1010 	add.w	r0, r0, r0, lsr #4
 801578c:	f000 300f 	and.w	r0, r0, #252645135	; 0xf0f0f0f
 8015790:	eb00 2000 	add.w	r0, r0, r0, lsl #8
 8015794:	eb00 4000 	add.w	r0, r0, r0, lsl #16
 8015798:	0e00      	lsrs	r0, r0, #24
 801579a:	4770      	bx	lr

Disassembly of section .rodata:

0801579c <vtable for DisplayHandler-0xf4>:
 801579c:	00000003 	andeq	r0, r0, r3
 80157a0:	000000aa 	andeq	r0, r0, sl, lsr #1
 80157a4:	00000006 	andeq	r0, r0, r6
 80157a8:	00000000 	andeq	r0, r0, r0
 80157ac:	01ff0000 	mvnseq	r0, r0
 80157b0:	00000001 	andeq	r0, r0, r1
 80157b4:	00000001 	andeq	r0, r0, r1
 80157b8:	00000001 	andeq	r0, r0, r1
	...
 80157c4:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 80157c8:	09080706 	stmdbeq	r8, {r1, r2, r8, r9, sl}
 80157cc:	00000000 	andeq	r0, r0, r0
 80157d0:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 80157d4:	353a3731 	ldrcc	r3, [sl, #-1841]!	; 0xfffff8cf
 80157d8:	35333a37 	ldrcc	r3, [r3, #-2615]!	; 0xfffff5c9
 80157dc:	72614d00 	rsbvc	r4, r1, #0, 26
 80157e0:	20393120 	eorscs	r3, r9, r0, lsr #2
 80157e4:	32323032 	eorscc	r3, r2, #50	; 0x32
 80157e8:	43417300 	movtmi	r7, #4864	; 0x1300
 80157ec:	3145204e 	cmpcc	r5, lr, asr #32
 80157f0:	2031332e 	eorscs	r3, r1, lr, lsr #6
 80157f4:	32335b1b 	eorscc	r5, r3, #27648	; 0x6c00
 80157f8:	7869506d 	stmdavc	r9!, {r0, r2, r3, r5, r6, ip, lr}^
 80157fc:	63206c65 			; <UNDEFINED> instruction: 0x63206c65
 8015800:	72746e6f 	rsbsvc	r6, r4, #1776	; 0x6f0
 8015804:	656c6c6f 	strbvs	r6, [ip, #-3183]!	; 0xfffff391
 8015808:	387b2072 	ldmdacc	fp!, {r1, r4, r5, r6, sp}^
 801580c:	20342078 	eorscs	r2, r4, r8, ror r0
 8015810:	76696e55 			; <UNDEFINED> instruction: 0x76696e55
 8015814:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8015818:	5b1b7d73 	blpl	86f4dec <__exidx_end+0x6dcf24>
 801581c:	006d3733 	rsbeq	r3, sp, r3, lsr r7
 8015820:	6f635f2e 	svcvs	0x00635f2e
 8015824:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 8015828:	685f2e00 	ldmdavs	pc, {r9, sl, fp, sp}^	; <UNPREDICTABLE>
 801582c:	00707474 	rsbseq	r7, r0, r4, ror r4
 8015830:	65646f6e 	strbvs	r6, [r4, #-3950]!	; 0xfffff092
 8015834:	4341733d 	movtmi	r7, #4925	; 0x133d
 8015838:	3145204e 	cmpcc	r5, lr, asr #32
 801583c:	2031332e 	eorscs	r3, r1, lr, lsr #6
 8015840:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
 8015844:	4173006c 	cmnmi	r3, ip, rrx
 8015848:	50204e43 	eorpl	r4, r0, r3, asr #28
 801584c:	6c657869 	stclvs	8, cr7, [r5], #-420	; 0xfffffe5c
 8015850:	2d642520 	cfstr64cs	mvdx2, [r4, #-128]!	; 0xffffff80
 8015854:	253a7325 	ldrcs	r7, [sl, #-805]!	; 0xfffffcdb
 8015858:	44470064 	strbmi	r0, [r7], #-100	; 0xffffff9c
 801585c:	32463233 	subcc	r3, r6, #805306371	; 0x30000003
 8015860:	20523730 	subscs	r3, r2, r0, lsr r7
 8015864:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
 8015868:	4173006c 	cmnmi	r3, ip, rrx
 801586c:	50204e43 	eorpl	r4, r0, r3, asr #28
 8015870:	6c657869 	stclvs	8, cr7, [r5], #-420	; 0xfffffe5c
 8015874:	78752520 	ldmdavc	r5!, {r5, r8, sl, sp}^
 8015878:	25005534 	strcs	r5, [r0, #-1332]	; 0xfffffacc
 801587c:	64253a73 	strtvs	r3, [r5], #-2675	; 0xfffff58d
 8015880:	64254720 	strtvs	r4, [r5], #-1824	; 0xfffff8e0
 8015884:	00732520 	rsbseq	r2, r3, r0, lsr #10
 8015888:	253a7325 	ldrcs	r7, [sl, #-805]!	; 0xfffffcdb
 801588c:	00000075 	andeq	r0, r0, r5, ror r0

08015890 <vtable for DisplayHandler>:
	...
 8015898:	080085d9 	stmdaeq	r0, {r0, r3, r4, r6, r7, r8, sl, pc}
 801589c:	08008659 	stmdaeq	r0, {r0, r3, r4, r6, r9, sl, pc}
 80158a0:	080086ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, sl, pc}

080158a4 <vtable for PixelDmxStartStop>:
	...
 80158ac:	080085db 	stmdaeq	r0, {r0, r1, r3, r4, r6, r7, r8, sl, pc}
 80158b0:	08008665 	stmdaeq	r0, {r0, r2, r5, r6, r9, sl, pc}
 80158b4:	080085dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, sl, pc}
 80158b8:	080085ed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, r8, sl, pc}

080158bc <vtable for RDMNetDevice>:
	...
 80158c4:	080086fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r9, sl, pc}
 80158c8:	08008725 	stmdaeq	r0, {r0, r2, r5, r8, r9, sl, pc}
 80158cc:	0800b44f 	stmdaeq	r0, {r0, r1, r2, r3, r6, sl, ip, sp, pc}
 80158d0:	0800b451 	stmdaeq	r0, {r0, r4, r6, sl, ip, sp, pc}
 80158d4:	080085fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, sl, pc}
 80158d8:	08008611 	stmdaeq	r0, {r0, r4, r9, sl, pc}
 80158dc:	0800867d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, sl, pc}
 80158e0:	ffffff34 			; <UNDEFINED> instruction: 0xffffff34
 80158e4:	00000000 	andeq	r0, r0, r0
 80158e8:	0800871d 	stmdaeq	r0, {r0, r2, r3, r4, r8, r9, sl, pc}
 80158ec:	08008737 	stmdaeq	r0, {r0, r1, r2, r4, r5, r8, r9, sl, pc}
 80158f0:	08008609 	stmdaeq	r0, {r0, r3, r9, sl, pc}
 80158f4:	08008621 	stmdaeq	r0, {r0, r5, r9, sl, pc}
 80158f8:	08008691 	stmdaeq	r0, {r0, r4, r7, r9, sl, pc}

080158fc <vtable for FactoryDefaults>:
	...
 8015904:	08008629 	stmdaeq	r0, {r0, r3, r5, r9, sl, pc}
 8015908:	08008671 	stmdaeq	r0, {r0, r4, r5, r6, r9, sl, pc}
 801590c:	080088b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, fp, pc}

08015910 <vtable for Reboot>:
	...
 8015918:	0800862b 	stmdaeq	r0, {r0, r1, r3, r5, r9, sl, pc}
 801591c:	0800864d 	stmdaeq	r0, {r0, r2, r3, r6, r9, sl, pc}
 8015920:	0800862d 	stmdaeq	r0, {r0, r2, r3, r5, r9, sl, pc}

08015924 <CSWTCH.81>:
 8015924:	444e4f4f 	strbmi	r4, [lr], #-3919	; 0xfffff0b1
 8015928:	 			; <UNDEFINED> instruction: 0x312e3146

08015929 <SOFTWARE_VERSION>:
 8015929:	00312e31 	eorseq	r2, r1, r1, lsr lr

0801592d <SOFTWARE_VERSION>:
 801592d:	00312e31 	eorseq	r2, r1, r1, lsr lr
 8015931:	2e393332 	mrccs	3, 1, r3, cr9, cr2, {1}
 8015935:	2e353532 	mrccs	5, 1, r3, cr5, cr2, {1}
 8015939:	00302e30 	eorseq	r2, r0, r0, lsr lr
 801593d:	38342e25 	ldmdacc	r4!, {r0, r2, r5, r9, sl, fp, sp}
 8015941:	73252073 			; <UNDEFINED> instruction: 0x73252073
 8015945:	33444700 	movtcc	r4, #18176	; 0x4700
 8015949:	30324632 	eorscc	r4, r2, r2, lsr r6
 801594d:	30005237 	andcc	r5, r0, r7, lsr r2
 8015951:	6f4e202e 	svcvs	0x004e202e
 8015955:	73616320 	cmnvc	r1, #32, 6	; 0x80000000
 8015959:	6d207365 	stcvs	3, cr7, [r0, #-404]!	; 0xfffffe6c
 801595d:	68637461 	stmdavs	r3!, {r0, r5, r6, sl, ip, sp, lr}^
 8015961:	202c6465 	eorcs	r6, ip, r5, ror #8
 8015965:	73696874 	cmnvc	r9, #116, 16	; 0x740000
 8015969:	6f687320 	svcvs	0x00687320
 801596d:	6e646c75 	mcrvs	12, 3, r6, cr4, cr5, {3}
 8015971:	68207427 	stmdavs	r0!, {r0, r1, r2, r5, sl, ip, sp, lr}
 8015975:	65707061 	ldrbvs	r7, [r0, #-97]!	; 0xffffff9f
 8015979:	000a216e 	andeq	r2, sl, lr, ror #2
 801597d:	00505448 	subseq	r5, r0, r8, asr #8
 8015981:	0050544c 	subseq	r5, r0, ip, asr #8
 8015985:	64697242 	strbtvs	r7, [r9], #-578	; 0xfffffdbe
 8015989:	000a6567 	andeq	r6, sl, r7, ror #10
 801598d:	72694620 	rsbvc	r4, r9, #32, 12	; 0x2000000
 8015991:	7261776d 	rsbvc	r7, r1, #28573696	; 0x1b40000
 8015995:	203a2065 	eorscs	r2, sl, r5, rrx
 8015999:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801599d:	20000a64 	andcs	r0, r0, r4, ror #20
 80159a1:	20444943 	subcs	r4, r4, r3, asr #18
 80159a5:	20202020 	eorcs	r2, r0, r0, lsr #32
 80159a9:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 80159ad:	20000a73 	andcs	r0, r0, r3, ror sl
 80159b1:	7074754f 	rsbsvc	r7, r4, pc, asr #10
 80159b5:	000a7475 	andeq	r7, sl, r5, ror r4
 80159b9:	6f502020 	svcvs	0x00502020
 80159bd:	25207472 	strcs	r7, [r0, #-1138]!	; 0xfffffb8e
 80159c1:	55206432 	strpl	r6, [r0, #-1074]!	; 0xfffffbce
 80159c5:	6576696e 	ldrbvs	r6, [r6, #-2414]!	; 0xfffff692
 80159c9:	20657372 	rsbcs	r7, r5, r2, ror r3
 80159cd:	64332d25 	ldrtvs	r2, [r3], #-3365	; 0xfffff2db
 80159d1:	73255b20 			; <UNDEFINED> instruction: 0x73255b20
 80159d5:	20000a5d 	andcs	r0, r0, sp, asr sl
 80159d9:	75706e49 	ldrbvc	r6, [r0, #-3657]!	; 0xfffff1b7
 80159dd:	20000a74 	andcs	r0, r0, r4, ror sl
 80159e1:	726f5020 	rsbvc	r5, pc, #32
 80159e5:	32252074 	eorcc	r2, r5, #116	; 0x74
 80159e9:	6e552064 	cdpvs	0, 5, cr2, cr5, cr4, {3}
 80159ed:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
 80159f1:	25206573 	strcs	r6, [r0, #-1395]!	; 0xfffffa8d
 80159f5:	2064332d 	rsbcs	r3, r4, sp, lsr #6
 80159f9:	5d64255b 	cfstr64pl	mvdx2, [r4, #-364]!	; 0xfffffe94
 80159fd:	5320000a 			; <UNDEFINED> instruction: 0x5320000a
 8015a01:	68636e79 	stmdavs	r3!, {r0, r3, r4, r5, r6, r9, sl, fp, sp, lr}^
 8015a05:	696e6f72 	stmdbvs	lr!, {r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8015a09:	6920657a 	stmdbvs	r0!, {r1, r3, r4, r5, r6, r8, sl, sp, lr}
 8015a0d:	69642073 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sp}^
 8015a11:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
 8015a15:	000a6465 	andeq	r6, sl, r5, ror #8

08015a19 <E131MsgConst::START>:
 8015a19:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
 8015a1d:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 8015a21:	43417320 	movtmi	r7, #4896	; 0x1320
 8015a25:	3145204e 	cmpcc	r5, lr, asr #32
 8015a29:	0031332e 	eorseq	r3, r1, lr, lsr #6

08015a2d <E131MsgConst::PARAMS>:
 8015a2d:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 8015a31:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 8015a35:	20676e69 	rsbcs	r6, r7, r9, ror #28
 8015a39:	4e434173 	mcrmi	1, 2, r4, cr3, cr3, {3}
 8015a3d:	2e314520 	cfabs64cs	mvdx4, mvdx1
 8015a41:	 	movwvc	r3, #307	; 0x133

08015a44 <E131MsgConst::STARTED>:
 8015a44:	4e434173 	mcrmi	1, 2, r4, cr3, cr3, {3}
 8015a48:	2e314520 	cfabs64cs	mvdx4, mvdx1
 8015a4c:	73203133 			; <UNDEFINED> instruction: 0x73203133
 8015a50:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
 8015a54:	22006465 	andcs	r6, r0, #1694498816	; 0x65000000
 8015a58:	3a227325 	bcc	88b26f4 <__exidx_end+0x89a82c>
 8015a5c:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 8015a60:	2523002c 	strcs	r0, [r3, #-44]!	; 0xffffffd4
 8015a64:	73253d73 			; <UNDEFINED> instruction: 0x73253d73
 8015a68:	2522000a 	strcs	r0, [r2, #-10]!
 8015a6c:	253a2273 	ldrcs	r2, [sl, #-627]!	; 0xfffffd8d
 8015a70:	23002c64 	movwcs	r2, #3172	; 0xc64
 8015a74:	253d7325 	ldrcs	r7, [sp, #-805]!	; 0xfffffcdb
 8015a78:	69000a64 	stmdbvs	r0, {r2, r5, r6, r9, fp}
 8015a7c:	7475706e 	ldrbtvc	r7, [r5], #-110	; 0xffffff92
 8015a80:	74756f00 	ldrbtvc	r6, [r5], #-3840	; 0xfffff100
 8015a84:	00747570 	rsbseq	r7, r4, r0, ror r5
 8015a88:	0070746c 	rsbseq	r7, r0, ip, ror #8
 8015a8c:	00707468 	rsbseq	r7, r0, r8, ror #8
 8015a90:	20584d44 	subscs	r4, r8, r4, asr #26
 8015a94:	7074754f 	rsbsvc	r7, r4, pc, asr #10
 8015a98:	44007475 	strmi	r7, [r0], #-1141	; 0xfffffb8b
 8015a9c:	4920584d 	stmdbmi	r0!, {r0, r2, r3, r6, fp, ip, lr}
 8015aa0:	7475706e 	ldrbtvc	r7, [r5], #-110	; 0xffffff92
 8015aa4:	68744f00 	ldmdavs	r4!, {r8, r9, sl, fp, lr}^
 8015aa8:	 	strvs	r7, [r0], #-613	; 0xfffffd9b

08015aab <E131ParamsConst::DISABLE_MERGE_TIMEOUT>:
 8015aab:	61736964 	cmnvs	r3, r4, ror #18
 8015aaf:	5f656c62 	svcpl	0x00656c62
 8015ab3:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 8015ab7:	69745f65 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
 8015abb:	756f656d 	strbvc	r6, [pc, #-1389]!	; 8015556 <enet_rxframe_drop+0x1e>
 8015abf:	 	stmdbvs	r4!, {r2, r4, r5, r6}^

08015ac1 <E131ParamsConst::DISABLE_NETWORK_DATA_LOSS_TIMEOUT>:
 8015ac1:	61736964 	cmnvs	r3, r4, ror #18
 8015ac5:	5f656c62 	svcpl	0x00656c62
 8015ac9:	7774656e 	ldrbvc	r6, [r4, -lr, ror #10]!
 8015acd:	5f6b726f 	svcpl	0x006b726f
 8015ad1:	61746164 	cmnvs	r4, r4, ror #2
 8015ad5:	736f6c5f 	cmnvc	pc, #24320	; 0x5f00
 8015ad9:	69745f73 	ldmdbvs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 8015add:	756f656d 	strbvc	r6, [pc, #-1389]!	; 8015578 <enet_rxframe_drop+0x40>
 8015ae1:	 	rsbsvc	r0, r0, #116	; 0x74

08015ae3 <E131ParamsConst::PRIORITY>:
 8015ae3:	6f697270 	svcvs	0x00697270
 8015ae7:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
 8015aeb:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8015aef:	00615f74 	rsbeq	r5, r1, r4, ror pc
 8015af3:	72700000 	rsbsvc	r0, r0, #0
 8015af7:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 8015afb:	705f7974 	subsvc	r7, pc, r4, ror r9	; <UNPREDICTABLE>
 8015aff:	5f74726f 	svcpl	0x0074726f
 8015b03:	00000062 	andeq	r0, r0, r2, rrx
 8015b07:	6f697270 	svcvs	0x00697270
 8015b0b:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
 8015b0f:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8015b13:	00635f74 	rsbeq	r5, r3, r4, ror pc
 8015b17:	72700000 	rsbsvc	r0, r0, #0
 8015b1b:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 8015b1f:	705f7974 	subsvc	r7, pc, r4, ror r9	; <UNPREDICTABLE>
 8015b23:	5f74726f 	svcpl	0x0074726f
 8015b27:	00000064 	andeq	r0, r0, r4, rrx

08015b2b <E131ParamsConst::FILE_NAME>:
 8015b2b:	31333165 	teqcc	r3, r5, ror #2
 8015b2f:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
	...

08015b34 <E117Const::ACN_PACKET_IDENTIFIER>:
 8015b34:	2d435341 	stclcs	3, cr5, [r3, #-260]	; 0xfffffefc
 8015b38:	312e3145 			; <UNDEFINED> instruction: 0x312e3145
 8015b3c:	00000037 	andeq	r0, r0, r7, lsr r0

08015b40 <E131BridgeConst::VERSION>:
 8015b40:	30251801 	eorcc	r1, r5, r1, lsl #16
 8015b44:	252d7838 	strcs	r7, [sp, #-2104]!	; 0xfffff7c8
 8015b48:	2d783430 	cfldrdcs	mvd3, [r8, #-192]!	; 0xffffff40
 8015b4c:	78343025 	ldmdavc	r4!, {r0, r2, r5, ip, sp}
 8015b50:	3230252d 	eorscc	r2, r0, #188743680	; 0xb400000
 8015b54:	32302578 	eorscc	r2, r0, #120, 10	; 0x1e000000
 8015b58:	30252d78 	eorcc	r2, r5, r8, ror sp
 8015b5c:	30257832 	eorcc	r7, r5, r2, lsr r8
 8015b60:	30257832 	eorcc	r7, r5, r2, lsr r8
 8015b64:	30257832 	eorcc	r7, r5, r2, lsr r8
 8015b68:	30257832 	eorcc	r7, r5, r2, lsr r8
 8015b6c:	30257832 	eorcc	r7, r5, r2, lsr r8
 8015b70:	32007832 	andcc	r7, r0, #3276800	; 0x320000
 8015b74:	322e3933 	eorcc	r3, lr, #835584	; 0xcc000
 8015b78:	322e3535 	eorcc	r3, lr, #222298112	; 0xd400000
 8015b7c:	312e3035 			; <UNDEFINED> instruction: 0x312e3035
 8015b80:	32003333 	andcc	r3, r0, #-872415232	; 0xcc000000
 8015b84:	322e3933 	eorcc	r3, lr, #835584	; 0xcc000
 8015b88:	322e3535 	eorcc	r3, lr, #222298112	; 0xd400000
 8015b8c:	312e3035 			; <UNDEFINED> instruction: 0x312e3035
 8015b90:	4c003433 	cfstrsmi	mvf3, [r0], {51}	; 0x33
 8015b94:	2050524c 	subscs	r5, r0, ip, asr #4
 8015b98:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
 8015b9c:	63206563 			; <UNDEFINED> instruction: 0x63206563
 8015ba0:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 8015ba4:	61727567 	cmnvs	r2, r7, ror #10
 8015ba8:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8015bac:	5020000a 	eorpl	r0, r0, sl
 8015bb0:	2074726f 	rsbscs	r7, r4, pc, ror #4
 8015bb4:	20504455 	subscs	r4, r0, r5, asr r4
 8015bb8:	20202020 	eorcs	r2, r0, r0, lsr #32
 8015bbc:	20202020 	eorcs	r2, r0, r0, lsr #32
 8015bc0:	20202020 	eorcs	r2, r0, r0, lsr #32
 8015bc4:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8015bc8:	000a6425 	andeq	r6, sl, r5, lsr #8
 8015bcc:	6c754d20 	ldclvs	13, cr4, [r5], #-128	; 0xffffff80
 8015bd0:	61636974 	smcvs	13972	; 0x3694
 8015bd4:	6a207473 	bvs	8832da8 <__exidx_end+0x81aee0>
 8015bd8:	206e696f 	rsbcs	r6, lr, pc, ror #18
 8015bdc:	75716552 	ldrbvc	r6, [r1, #-1362]!	; 0xfffffaae
 8015be0:	20747365 	rsbscs	r7, r4, r5, ror #6
 8015be4:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8015be8:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8015bec:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8015bf0:	20000a64 	andcs	r0, r0, r4, ror #20
 8015bf4:	746c754d 	strbtvc	r7, [ip], #-1357	; 0xfffffab3
 8015bf8:	73616369 	cmnvc	r1, #-1543503871	; 0xa4000001
 8015bfc:	65522074 	ldrbvs	r2, [r2, #-116]	; 0xffffff8c
 8015c00:	6e6f7073 	mcrvs	0, 3, r7, cr15, cr3, {3}
 8015c04:	20206573 	eorcs	r6, r0, r3, ror r5
 8015c08:	3a202020 	bcc	881dc90 <__exidx_end+0x805dc8>
 8015c0c:	2e642520 	cdpcs	5, 6, cr2, cr4, cr0, {1}
 8015c10:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8015c14:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8015c18:	0000000a 	andeq	r0, r0, sl

08015c1c <vtable for LLRPDevice>:
	...
 8015c24:	0800af61 	stmdaeq	r0, {r0, r5, r6, r8, r9, sl, fp, sp, pc}
 8015c28:	0800af6b 	stmdaeq	r0, {r0, r1, r3, r5, r6, r8, r9, sl, fp, sp, pc}
 8015c2c:	0800af63 	stmdaeq	r0, {r0, r1, r5, r6, r8, r9, sl, fp, sp, pc}
 8015c30:	0800af65 	stmdaeq	r0, {r0, r2, r5, r6, r8, r9, sl, fp, sp, pc}
 8015c34:	0800af67 	stmdaeq	r0, {r0, r1, r2, r5, r6, r8, r9, sl, fp, sp, pc}

08015c38 <RDMNetConst::MSG_CONFIG>:
 8015c38:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 8015c3c:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 8015c40:	20676e69 	rsbcs	r6, r7, r9, ror #28
 8015c44:	4e4d4452 	mcrmi	4, 2, r4, cr13, cr2, {2}
 8015c48:	 	andpl	r7, r0, #1694498816	; 0x65000000

08015c4b <RDMNetConst::MSG_STARTED>:
 8015c4b:	4e4d4452 	mcrmi	4, 2, r4, cr13, cr2, {2}
 8015c4f:	73207465 			; <UNDEFINED> instruction: 0x73207465
 8015c53:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
 8015c57:	 	movwpl	r6, #1125	; 0x465

08015c5a <RDMNetConst::MSG_START>:
 8015c5a:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
 8015c5e:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 8015c62:	4d445220 	sfmmi	f5, 2, [r4, #-128]	; 0xffffff80
 8015c66:	0074654e 	rsbseq	r6, r4, lr, asr #10
 8015c6a:	4e4d4452 	mcrmi	4, 2, r4, cr13, cr2, {2}
 8015c6e:	000a7465 	andeq	r7, sl, r5, ror #8
 8015c72:	44494320 	strbmi	r4, [r9], #-800	; 0xfffffce0
 8015c76:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8015c7a:	52000a73 	andpl	r0, r0, #471040	; 0x73000
 8015c7e:	52204d44 	eorpl	r4, r0, #68, 26	; 0x1100
 8015c82:	6f707365 	svcvs	0x00707365
 8015c86:	7265646e 	rsbvc	r6, r5, #1845493760	; 0x6e000000
 8015c8a:	6e6f6320 	cdpvs	3, 6, cr6, cr15, cr0, {1}
 8015c8e:	75676966 	strbvc	r6, [r7, #-2406]!	; 0xfffff69a
 8015c92:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
 8015c96:	000a6e6f 	andeq	r6, sl, pc, ror #28
 8015c9a:	6f725020 	svcvs	0x00725020
 8015c9e:	6f636f74 	svcvs	0x00636f74
 8015ca2:	6556206c 	ldrbvs	r2, [r6, #-108]	; 0xffffff94
 8015ca6:	6f697372 	svcvs	0x00697372
 8015caa:	6425206e 	strtvs	r2, [r5], #-110	; 0xffffff92
 8015cae:	0a64252e 	beq	991f16e <__exidx_end+0x19072a6>
 8015cb2:	4d442000 	stclmi	0, cr2, [r4, #-0]
 8015cb6:	64412058 	strbvs	r2, [r1], #-88	; 0xffffffa8
 8015cba:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
 8015cbe:	20202073 	eorcs	r2, r0, r3, ror r0
 8015cc2:	3a202020 	bcc	881dd4a <__exidx_end+0x805e82>
 8015cc6:	0a642520 	beq	991f14e <__exidx_end+0x1907286>
 8015cca:	4d442000 	stclmi	0, cr2, [r4, #-0]
 8015cce:	6f462058 	svcvs	0x00462058
 8015cd2:	7270746f 	rsbsvc	r7, r0, #1862270976	; 0x6f000000
 8015cd6:	20746e69 	rsbscs	r6, r4, r9, ror #28
 8015cda:	3a202020 	bcc	881dd62 <__exidx_end+0x805e9a>
 8015cde:	0a642520 	beq	991f166 <__exidx_end+0x190729e>
 8015ce2:	65502000 	ldrbvs	r2, [r0, #-0]
 8015ce6:	6e6f7372 	mcrvs	3, 3, r7, cr15, cr2, {3}
 8015cea:	74696c61 	strbtvc	r6, [r9], #-3169	; 0xfffff39f
 8015cee:	64252079 	strtvs	r2, [r5], #-121	; 0xffffff87
 8015cf2:	20666f20 	rsbcs	r6, r6, r0, lsr #30
 8015cf6:	5b206425 	blpl	882ed92 <__exidx_end+0x816eca>
 8015cfa:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
 8015cfe:	20000a5d 	andcs	r0, r0, sp, asr sl
 8015d02:	20627553 	rsbcs	r7, r2, r3, asr r5
 8015d06:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
 8015d0a:	20736563 	rsbscs	r6, r3, r3, ror #10
 8015d0e:	20202020 	eorcs	r2, r0, r0, lsr #32
 8015d12:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8015d16:	20000a64 	andcs	r0, r0, r4, ror #20
 8015d1a:	736e6553 	cmnvc	lr, #348127232	; 0x14c00000
 8015d1e:	2073726f 	rsbscs	r7, r3, pc, ror #4
 8015d22:	20202020 	eorcs	r2, r0, r0, lsr #32
 8015d26:	20202020 	eorcs	r2, r0, r0, lsr #32
 8015d2a:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8015d2e:	 	strmi	r0, [r0, -r4, ror #20]

08015d31 <DEVICE_LABEL>:
 8015d31:	32334447 	eorscc	r4, r3, #1191182336	; 0x47000000
 8015d35:	37303246 	ldrcc	r3, [r0, -r6, asr #4]!
 8015d39:	44522052 	ldrbmi	r2, [r2], #-82	; 0xffffffae
 8015d3d:	6552204d 	ldrbvs	r2, [r2, #-77]	; 0xffffffb3
 8015d41:	6e6f7073 	mcrvs	0, 3, r7, cr15, cr3, {3}
 8015d45:	00726564 	rsbseq	r6, r2, r4, ror #10
 8015d49:	 	andeq	r0, r0, r0

08015d4c <vtable for RDMDeviceResponder>:
	...
 8015d54:	0800b455 	stmdaeq	r0, {r0, r2, r4, r6, sl, ip, sp, pc}
 8015d58:	0800b475 	stmdaeq	r0, {r0, r2, r4, r5, r6, sl, ip, sp, pc}
 8015d5c:	0800b44f 	stmdaeq	r0, {r0, r1, r2, r3, r6, sl, ip, sp, pc}
 8015d60:	0800b451 	stmdaeq	r0, {r0, r4, r6, sl, ip, sp, pc}

08015d64 <UID_ALL>:
 8015d64:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 8015d68:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>

08015d6c <RDMHandler::PID_DEFINITIONS>:
 8015d6c:	00000060 	andeq	r0, r0, r0, rrx
 8015d70:	0800b959 	stmdaeq	r0, {r0, r3, r4, r6, r8, fp, ip, sp, pc}
	...
 8015d80:	01010000 	mrseq	r0, (UNDEF: 1)
 8015d84:	00000080 	andeq	r0, r0, r0, lsl #1
 8015d88:	0800ba41 	stmdaeq	r0, {r0, r6, r9, fp, ip, sp, pc}
	...
 8015d98:	01010100 	mrseq	r0, (UNDEF: 17)
 8015d9c:	00000081 	andeq	r0, r0, r1, lsl #1
 8015da0:	0800ba5d 	stmdaeq	r0, {r0, r2, r3, r4, r6, r9, fp, ip, sp, pc}
	...
 8015db0:	01010100 	mrseq	r0, (UNDEF: 17)
 8015db4:	00000082 	andeq	r0, r0, r2, lsl #1
 8015db8:	0800ba7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r9, fp, ip, sp, pc}
 8015dbc:	00000000 	andeq	r0, r0, r0
 8015dc0:	0800bbcd 	stmdaeq	r0, {r0, r2, r3, r6, r7, r8, r9, fp, ip, sp, pc}
 8015dc4:	00000000 	andeq	r0, r0, r0
 8015dc8:	01010100 	mrseq	r0, (UNDEF: 17)
 8015dcc:	00000090 	muleq	r0, r0, r0
 8015dd0:	0800b9c1 	stmdaeq	r0, {r0, r6, r7, r8, fp, ip, sp, pc}
 8015dd4:	00000000 	andeq	r0, r0, r0
 8015dd8:	0800bb99 	stmdaeq	r0, {r0, r3, r4, r7, r8, r9, fp, ip, sp, pc}
 8015ddc:	00000000 	andeq	r0, r0, r0
 8015de0:	01010100 	mrseq	r0, (UNDEF: 17)
 8015de4:	00001000 	andeq	r1, r0, r0
 8015de8:	0800bab9 	stmdaeq	r0, {r0, r3, r4, r5, r7, r9, fp, ip, sp, pc}
 8015dec:	00000000 	andeq	r0, r0, r0
 8015df0:	0800bb1d 	stmdaeq	r0, {r0, r2, r3, r4, r8, r9, fp, ip, sp, pc}
 8015df4:	00000000 	andeq	r0, r0, r0
 8015df8:	01010000 	mrseq	r0, (UNDEF: 1)
 8015dfc:	00001001 	andeq	r1, r0, r1
	...
 8015e08:	0800bad5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r9, fp, ip, sp, pc}
 8015e0c:	00000000 	andeq	r0, r0, r0
 8015e10:	01010100 	mrseq	r0, (UNDEF: 17)
 8015e14:	00000700 	andeq	r0, r0, r0, lsl #14
 8015e18:	0800becd 	stmdaeq	r0, {r0, r2, r3, r6, r7, r9, sl, fp, ip, sp, pc}
	...
 8015e28:	01000000 	mrseq	r0, (UNDEF: 0)
 8015e2c:	00000701 	andeq	r0, r0, r1, lsl #14
 8015e30:	0800bef5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r9, sl, fp, ip, sp, pc}
	...
 8015e40:	01000004 	tsteq	r0, r4
 8015e44:	00000702 	andeq	r0, r0, r2, lsl #14
 8015e48:	0800bf41 	stmdaeq	r0, {r0, r6, r8, r9, sl, fp, ip, sp, pc}
	...
 8015e58:	01000004 	tsteq	r0, r4
 8015e5c:	00000703 	andeq	r0, r0, r3, lsl #14
 8015e60:	0800bf71 	stmdaeq	r0, {r0, r4, r5, r6, r8, r9, sl, fp, ip, sp, pc}
 8015e64:	00000000 	andeq	r0, r0, r0
 8015e68:	0800bf9d 	stmdaeq	r0, {r0, r2, r3, r4, r7, r8, r9, sl, fp, ip, sp, pc}
 8015e6c:	00000000 	andeq	r0, r0, r0
 8015e70:	01000004 	tsteq	r0, r4
 8015e74:	00000704 	andeq	r0, r0, r4, lsl #14
 8015e78:	0800c009 	stmdaeq	r0, {r0, r3, lr, pc}
 8015e7c:	00000000 	andeq	r0, r0, r0
 8015e80:	0800c039 	stmdaeq	r0, {r0, r3, r4, r5, lr, pc}
 8015e84:	00000000 	andeq	r0, r0, r0
 8015e88:	01000004 	tsteq	r0, r4
 8015e8c:	00000705 	andeq	r0, r0, r5, lsl #14
 8015e90:	0800c0ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, lr, pc}
	...
 8015ea0:	01000004 	tsteq	r0, r4
 8015ea4:	00000707 	andeq	r0, r0, r7, lsl #14
	...
 8015eb0:	0800c081 	stmdaeq	r0, {r0, r7, lr, pc}
 8015eb4:	00000000 	andeq	r0, r0, r0
 8015eb8:	01000004 	tsteq	r0, r4
 8015ebc:	00000706 	andeq	r0, r0, r6, lsl #14
 8015ec0:	0800c0f5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, lr, pc}
 8015ec4:	00000000 	andeq	r0, r0, r0
 8015ec8:	0800c139 	stmdaeq	r0, {r0, r3, r4, r5, r8, lr, pc}
 8015ecc:	00000000 	andeq	r0, r0, r0
 8015ed0:	01000004 	tsteq	r0, r4
 8015ed4:	00000709 	andeq	r0, r0, r9, lsl #14
	...
 8015ee0:	0800c185 	stmdaeq	r0, {r0, r2, r7, r8, lr, pc}
 8015ee4:	00000000 	andeq	r0, r0, r0
 8015ee8:	01000004 	tsteq	r0, r4
 8015eec:	0000070b 	andeq	r0, r0, fp, lsl #14
 8015ef0:	0800bfe5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8, r9, sl, fp, ip, sp, pc}
	...
 8015f00:	01000001 	tsteq	r0, r1
 8015f04:	0000070a 	andeq	r0, r0, sl, lsl #14
 8015f08:	0800c1ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, lr, pc}
 8015f0c:	00000000 	andeq	r0, r0, r0
 8015f10:	0800c1e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8, lr, pc}
 8015f14:	00000000 	andeq	r0, r0, r0
 8015f18:	01000004 	tsteq	r0, r4
 8015f1c:	0000070c 	andeq	r0, r0, ip, lsl #14
 8015f20:	0800c1ed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, r8, lr, pc}
 8015f24:	00000000 	andeq	r0, r0, r0
 8015f28:	0800c21d 	stmdaeq	r0, {r0, r2, r3, r4, r9, lr, pc}
 8015f2c:	00000000 	andeq	r0, r0, r0
 8015f30:	01000000 	mrseq	r0, (UNDEF: 0)
 8015f34:	0000070d 	andeq	r0, r0, sp, lsl #14
 8015f38:	0800c251 	stmdaeq	r0, {r0, r4, r6, r9, lr, pc}
 8015f3c:	00000000 	andeq	r0, r0, r0
 8015f40:	0800c281 	stmdaeq	r0, {r0, r7, r9, lr, pc}
 8015f44:	00000000 	andeq	r0, r0, r0
 8015f48:	01000000 	mrseq	r0, (UNDEF: 0)
 8015f4c:	70747468 	rsbsvc	r7, r4, r8, ror #8
 8015f50:	672f2f3a 			; <UNDEFINED> instruction: 0x672f2f3a
 8015f54:	2d323364 	ldccs	3, cr3, [r2, #-400]!	; 0xfffffe70
 8015f58:	2e786d64 	cdpcs	13, 7, cr6, cr8, cr4, {3}
 8015f5c:	0067726f 	rsbeq	r7, r7, pc, ror #4
 8015f60:	204d4452 	subcs	r4, sp, r2, asr r4
 8015f64:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
 8015f68:	63206563 			; <UNDEFINED> instruction: 0x63206563
 8015f6c:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 8015f70:	61727567 	cmnvs	r2, r7, ror #10
 8015f74:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8015f78:	4d20000a 	stcmi	0, cr0, [r0, #-40]!	; 0xffffffd8
 8015f7c:	66756e61 	ldrbtvs	r6, [r5], -r1, ror #28
 8015f80:	75746361 	ldrbvc	r6, [r4, #-865]!	; 0xfffffc9f
 8015f84:	20726572 	rsbscs	r6, r2, r2, ror r5
 8015f88:	656d614e 	strbvs	r6, [sp, #-334]!	; 0xfffffeb2
 8015f8c:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8015f90:	0a732a2e 	beq	9ce0850 <__exidx_end+0x1cc8988>
 8015f94:	614d2000 	mrsvs	r2, (UNDEF: 77)
 8015f98:	6166756e 	cmnvs	r6, lr, ror #10
 8015f9c:	72757463 	rsbsvc	r7, r5, #1660944384	; 0x63000000
 8015fa0:	49207265 	stmdbmi	r0!, {r0, r2, r5, r6, r9, ip, sp, lr}
 8015fa4:	20202044 	eorcs	r2, r0, r4, asr #32
 8015fa8:	2e25203a 	mcrcs	0, 1, r2, cr5, cr10, {1}
 8015fac:	2e255832 	mcrcs	8, 1, r5, cr5, cr2, {1}
 8015fb0:	000a5832 	andeq	r5, sl, r2, lsr r8
 8015fb4:	72655320 	rsbvc	r5, r5, #32, 6	; 0x80000000
 8015fb8:	206c6169 	rsbcs	r6, ip, r9, ror #2
 8015fbc:	626d754e 	rsbvs	r7, sp, #327155712	; 0x13800000
 8015fc0:	20207265 	eorcs	r7, r0, r5, ror #4
 8015fc4:	3a202020 	bcc	881e04c <__exidx_end+0x806184>
 8015fc8:	322e2520 	eorcc	r2, lr, #32, 10	; 0x8000000
 8015fcc:	322e2558 	eorcc	r2, lr, #88, 10	; 0x16000000
 8015fd0:	322e2558 	eorcc	r2, lr, #88, 10	; 0x16000000
 8015fd4:	322e2558 	eorcc	r2, lr, #88, 10	; 0x16000000
 8015fd8:	20000a58 	andcs	r0, r0, r8, asr sl
 8015fdc:	746f6f52 	strbtvc	r6, [pc], #-3922	; 8015fe4 <RDMHandler::PID_DEFINITIONS+0x278>
 8015fe0:	62616c20 	rsbvs	r6, r1, #32, 24	; 0x2000
 8015fe4:	20206c65 	eorcs	r6, r0, r5, ror #24
 8015fe8:	20202020 	eorcs	r2, r0, r0, lsr #32
 8015fec:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8015ff0:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
 8015ff4:	5020000a 	eorpl	r0, r0, sl
 8015ff8:	75646f72 	strbvc	r6, [r4, #-3954]!	; 0xfffff08e
 8015ffc:	43207463 			; <UNDEFINED> instruction: 0x43207463
 8016000:	67657461 	strbvs	r7, [r5, -r1, ror #8]!
 8016004:	2079726f 	rsbscs	r7, r9, pc, ror #4
 8016008:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 801600c:	2558322e 	ldrbcs	r3, [r8, #-558]	; 0xfffffdd2
 8016010:	0a58322e 	beq	96228d0 <__exidx_end+0x160aa08>
 8016014:	72502000 	subsvc	r2, r0, #0
 8016018:	6375646f 	cmnvs	r5, #1862270976	; 0x6f000000
 801601c:	65442074 	strbvs	r2, [r4, #-116]	; 0xffffff8c
 8016020:	6c696174 	stfvse	f6, [r9], #-464	; 0xfffffe30
 8016024:	20202020 	eorcs	r2, r0, r0, lsr #32
 8016028:	2e25203a 	mcrcs	0, 1, r2, cr5, cr10, {1}
 801602c:	2e255832 	mcrcs	8, 1, r5, cr5, cr2, {1}
 8016030:	000a5832 	andeq	r5, sl, r2, lsr r8

08016034 <DEVICE_LABEL>:
 8016034:	32334447 	eorscc	r4, r3, #1191182336	; 0x47000000
 8016038:	37303246 	ldrcc	r3, [r0, -r6, asr #4]!
 801603c:	44522052 	ldrbmi	r2, [r2], #-82	; 0xffffffae
 8016040:	6544204d 	strbvs	r2, [r4, #-77]	; 0xffffffb3
 8016044:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
	...

08016049 <RDMConst::MANUFACTURER_ID>:
 8016049:	 	strbtvc	r0, [r8], #-80	; 0xffffffb0

0801604b <RDMConst::MANUFACTURER_NAME>:
 801604b:	70747468 	rsbsvc	r7, r4, r8, ror #8
 801604f:	772f2f3a 			; <UNDEFINED> instruction: 0x772f2f3a
 8016053:	6f2e7777 	svcvs	0x002e7777
 8016057:	676e6172 			; <UNDEFINED> instruction: 0x676e6172
 801605b:	2d697065 	stclcs	0, cr7, [r9, #-404]!	; 0xfffffe6c
 801605f:	2e786d64 	cdpcs	13, 7, cr6, cr8, cr4, {3}
 8016063:	0067726f 	rsbeq	r7, r7, pc, ror #4
 8016067:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
 801606b:	4d44206c 	stclmi	0, cr2, [r4, #-432]	; 0xfffffe50
 801606f:	61702058 	cmnvs	r0, r8, asr r0
 8016073:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
 8016077:	73726574 	cmnvc	r2, #116, 10	; 0x1d000000
 801607b:	4f20000a 	svcmi	0x0020000a
 801607f:	75707475 	ldrbvc	r7, [r0, #-1141]!	; 0xfffffb8b
 8016083:	3a207374 	bcc	8832e5b <__exidx_end+0x81af93>
 8016087:	0a642520 	beq	991f50f <__exidx_end+0x1907647>
 801608b:	72472000 	subvc	r2, r7, #0
 801608f:	6970756f 	ldmdbvs	r0!, {r0, r1, r2, r3, r5, r6, r8, sl, ip, sp, lr}^
 8016093:	6320676e 			; <UNDEFINED> instruction: 0x6320676e
 8016097:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
 801609b:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 801609f:	475b2064 	ldrbmi	r2, [fp, -r4, rrx]
 80160a3:	70756f72 	rsbsvc	r6, r5, r2, ror pc
 80160a7:	203a2073 	eorscs	r2, sl, r3, ror r0
 80160ab:	0a5d6425 	beq	976f147 <__exidx_end+0x175727f>
	...

080160b0 <vtable for WS28xxDmxMulti>:
	...
 80160b8:	0800c421 	stmdaeq	r0, {r0, r5, sl, lr, pc}
 80160bc:	0800c441 	stmdaeq	r0, {r0, r6, sl, lr, pc}
 80160c0:	0800c3ff 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, lr, pc}
 80160c4:	0800c5c1 	stmdaeq	r0, {r0, r6, r7, r8, sl, lr, pc}
 80160c8:	0800c47b 	stmdaeq	r0, {r0, r1, r3, r4, r5, r6, sl, lr, pc}
 80160cc:	0800c453 	stmdaeq	r0, {r0, r1, r4, r6, sl, lr, pc}
 80160d0:	0800c58d 	stmdaeq	r0, {r0, r2, r3, r7, r8, sl, lr, pc}
 80160d4:	0800c3f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r8, r9, lr, pc}
 80160d8:	0800c3f5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r8, r9, lr, pc}
 80160dc:	0800c3fb 	stmdaeq	r0, {r0, r1, r3, r4, r5, r6, r7, r8, r9, lr, pc}
 80160e0:	08012bb3 	stmdaeq	r1, {r0, r1, r4, r5, r7, r8, r9, fp, sp}
 80160e4:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 80160e8:	2a2e253a 	bcs	8b9f5d8 <__exidx_end+0xb87710>
 80160ec:	23002c66 	movwcs	r2, #3174	; 0xc66
 80160f0:	253d7325 	ldrcs	r7, [sp, #-805]!	; 0xfffffcdb
 80160f4:	0a662a2e 	beq	99a09b4 <__exidx_end+0x1988aec>
 80160f8:	65764f00 	ldrbvs	r4, [r6, #-3840]!	; 0xfffff100
 80160fc:	69727772 	ldmdbvs	r2!, {r1, r4, r5, r6, r8, r9, sl, ip, sp, lr}^
 8016100:	64206574 	strtvs	r6, [r0], #-1396	; 0xfffffa8c
 8016104:	73617461 	cmnvc	r1, #1627389952	; 0x61000000
 8016108:	74656568 	strbtvc	r6, [r5], #-1384	; 0xfffffa98
 801610c:	65764f00 	ldrbvs	r4, [r6, #-3840]!	; 0xfffff100
 8016110:	69727772 	ldmdbvs	r2!, {r1, r4, r5, r6, r8, r9, sl, ip, sp, lr}^
 8016114:	74206574 	strtvc	r6, [r0], #-1396	; 0xfffffa8c
 8016118:	6e696d69 	cdpvs	13, 6, cr6, cr9, cr9, {3}
 801611c:	75282067 	strvc	r2, [r8, #-103]!	; 0xffffff99
 8016120:	47002973 	smlsdxmi	r0, r3, r9, r2
 8016124:	70756f72 	rsbsvc	r6, r5, r2, ror pc
 8016128:	00676e69 	rsbeq	r6, r7, r9, ror #28
 801612c:	636f6c43 	cmnvs	pc, #17152	; 0x4300
 8016130:	6162206b 	cmnvs	r2, fp, rrx
 8016134:	20646573 	rsbcs	r6, r4, r3, ror r5
 8016138:	70696863 	rsbvc	r6, r9, r3, ror #16
 801613c:	50410073 	subpl	r0, r1, r3, ror r0
 8016140:	32303141 	eorscc	r3, r0, #1073741840	; 0x40000010
 8016144:	394b532f 	stmdbcc	fp, {r0, r1, r2, r3, r5, r8, r9, ip, lr}^
 8016148:	00323238 	eorseq	r3, r2, r8, lsr r2
 801614c:	74736554 	ldrbtvc	r6, [r3], #-1364	; 0xfffffaac
 8016150:	74617020 	strbtvc	r7, [r1], #-32	; 0xffffffe0
 8016154:	6e726574 	mrcvs	5, 3, r6, cr2, cr4, {3}
	...

08016159 <CSWTCH.6>:
 8016159:	02020200 	andeq	r0, r2, #0, 4
 801615d:	04020202 	streq	r0, [r2], #-514	; 0xfffffdfe
 8016161:	6e550500 	cdpvs	5, 5, cr0, cr5, cr0, {0}
 8016165:	776f6e6b 	strbvc	r6, [pc, -fp, ror #28]!
 8016169:	 	svcvs	0x004e006e

0801616b <s_patternName>:
 801616b:	656e6f4e 	strbvs	r6, [lr, #-3918]!	; 0xfffff0b2
	...
 8016177:	61520000 	cmpvs	r2, r0
 801617b:	6f626e69 	svcvs	0x00626e69
 801617f:	79632077 	stmdbvc	r3!, {r0, r1, r2, r4, r5, r6, sp}^
 8016183:	00656c63 	rsbeq	r6, r5, r3, ror #24
 8016187:	61656854 	cmnvs	r5, r4, asr r8
 801618b:	20726574 	rsbscs	r6, r2, r4, ror r5
 801618f:	73616863 	cmnvc	r1, #6488064	; 0x630000
 8016193:	6f430065 	svcvs	0x00430065
 8016197:	72756f6c 	rsbsvc	r6, r5, #108, 30	; 0x1b0
 801619b:	70697720 	rsbvc	r7, r9, r0, lsr #14
 801619f:	00000065 	andeq	r0, r0, r5, rrx
 80161a3:	6e616353 	mcrvs	3, 3, r6, cr1, cr3, {2}
 80161a7:	0072656e 	rsbseq	r6, r2, lr, ror #10
 80161ab:	00000000 	andeq	r0, r0, r0
 80161af:	61460000 	mrsvs	r0, (UNDEF: 70)
 80161b3:	00006564 	andeq	r6, r0, r4, ror #10
	...
 80161bf:	65646e55 	strbvs	r6, [r4, #-3669]!	; 0xfffff1ab
 80161c3:	656e6966 	strbvs	r6, [lr, #-2406]!	; 0xfffff69a
 80161c7:	 	ldrbmi	r0, [r2, -r4, rrx]

080161c9 <PixelType::MAPS>:
 80161c9:	00424752 	subeq	r4, r2, r2, asr r7
 80161cd:	00474252 	subeq	r4, r7, r2, asr r2
 80161d1:	00425247 	subeq	r5, r2, r7, asr #4
 80161d5:	00524247 	subseq	r4, r2, r7, asr #4
 80161d9:	00475242 	subeq	r5, r7, r2, asr #4
 80161dd:	00524742 	subseq	r4, r2, r2, asr #14

080161e1 <PixelType::TYPES>:
 80161e1:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 80161e5:	00003130 	andeq	r3, r0, r0, lsr r1
 80161e9:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 80161ed:	00003131 	andeq	r3, r0, r1, lsr r1
 80161f1:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 80161f5:	00003231 	andeq	r3, r0, r1, lsr r2
 80161f9:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 80161fd:	00423231 	subeq	r3, r2, r1, lsr r2
 8016201:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 8016205:	00003331 	andeq	r3, r0, r1, lsr r3
 8016209:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 801620d:	00003531 	andeq	r3, r0, r1, lsr r5
 8016211:	38364b53 	ldmdacc	r6!, {r0, r1, r4, r6, r8, r9, fp, lr}
 8016215:	00003231 	andeq	r3, r0, r1, lsr r2
 8016219:	38364b53 	ldmdacc	r6!, {r0, r1, r4, r6, r8, r9, fp, lr}
 801621d:	00573231 	subseq	r3, r7, r1, lsr r2
 8016221:	31534355 	cmpcc	r3, r5, asr r3
 8016225:	00333039 	eorseq	r3, r3, r9, lsr r0
 8016229:	32534355 	subscc	r4, r3, #1409286145	; 0x54000001
 801622d:	00333039 	eorseq	r3, r3, r9, lsr r0
 8016231:	38385343 	ldmdacc	r8!, {r0, r1, r6, r8, r9, ip, lr}
 8016235:	00003231 	andeq	r3, r0, r1, lsr r2
 8016239:	31415041 	cmpcc	r1, r1, asr #32
 801623d:	00003230 	andeq	r3, r0, r0, lsr r2
 8016241:	38394b53 	ldmdacc	r9!, {r0, r1, r4, r6, r8, r9, fp, lr}
 8016245:	00003232 	andeq	r3, r0, r2, lsr r2
 8016249:	31383950 	teqcc	r8, r0, asr r9
 801624d:	00000033 	andeq	r0, r0, r3, lsr r0
 8016251:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
 8016255:	20000a6c 	andcs	r0, r0, ip, ror #20
 8016259:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
 801625d:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8016261:	5b207325 	blpl	8832efd <__exidx_end+0x81b035>
 8016265:	205d6425 	subscs	r6, sp, r5, lsr #8
 8016269:	7325202d 			; <UNDEFINED> instruction: 0x7325202d
 801626d:	64255b20 	strtvs	r5, [r5], #-2848	; 0xfffff4e0
 8016271:	20000a5d 	andcs	r0, r0, sp, asr sl
 8016275:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
 8016279:	203a2074 	eorscs	r2, sl, r4, ror r0
 801627d:	000a6425 	andeq	r6, sl, r5, lsr #8
	...

08016282 <s_GPIO_PINs>:
 8016282:	64253fc0 	strtvs	r3, [r5], #-4032	; 0xfffff040
 8016286:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801628a:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801628e:	73252c64 			; <UNDEFINED> instruction: 0x73252c64
 8016292:	2c73252c 	cfldr64cs	mvdx2, [r3], #-176	; 0xffffff50
 8016296:	252c6425 	strcs	r6, [ip, #-1061]!	; 0xfffffbdb
 801629a:	25000a73 	strcs	r0, [r0, #-2675]	; 0xfffff58d
 801629e:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80162a2:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 80162a6:	252c6425 	strcs	r6, [ip, #-1061]!	; 0xfffffbdb
 80162aa:	73252c73 			; <UNDEFINED> instruction: 0x73252c73
 80162ae:	0a64252c 	beq	991f766 <__exidx_end+0x190789e>
 80162b2:	006e4f00 	rsbeq	r4, lr, r0, lsl #30
 80162b6:	0066664f 	rsbeq	r6, r6, pc, asr #12
 80162ba:	70736964 	rsbsvc	r6, r3, r4, ror #18
 80162be:	3a79616c 	bcc	9e6e876 <__exidx_end+0x1e569ae>
 80162c2:	000a7325 	andeq	r7, sl, r5, lsr #6
 80162c6:	70746674 	rsbsvc	r6, r4, r4, ror r6
 80162ca:	0a73253a 	beq	9cdf7ba <__exidx_end+0x1cc78f2>
 80162ce:	72657600 	rsbvc	r7, r5, #0, 12
 80162d2:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 80162d6:	0073253a 	rsbseq	r2, r3, sl, lsr r5
 80162da:	69747075 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, ip, sp, lr}^
 80162de:	203a656d 	eorscs	r6, sl, sp, ror #10
 80162e2:	0a737525 	beq	9cf377e <__exidx_end+0x1cdb8b6>
 80162e6:	52524500 	subspl	r4, r2, #0, 10
 80162ea:	3f23524f 	svccc	0x0023524f
 80162ee:	0a746567 	beq	9d2f892 <__exidx_end+0x1d179ca>
 80162f2:	74667400 	strbtvc	r7, [r6], #-1024	; 0xfffffc00
 80162f6:	64002370 	strvs	r2, [r0], #-880	; 0xfffffc90
 80162fa:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
 80162fe:	00237961 	eoreq	r7, r3, r1, ror #18
 8016302:	4f525245 	svcmi	0x00525245
 8016306:	0a212352 	beq	885f056 <__exidx_end+0x84718e>
 801630a:	52524500 	subspl	r4, r2, #0, 10
 801630e:	3f23524f 	svccc	0x0023524f
 8016312:	6572000a 	ldrbvs	r0, [r2, #-10]!
 8016316:	746f6f62 	strbtvc	r6, [pc], #-3938	; 801631e <s_GPIO_PINs+0x9c>
 801631a:	6c002323 	stcvs	3, cr2, [r0], {35}	; 0x23
 801631e:	23747369 	cmncs	r4, #-1543503871	; 0xa4000001
 8016322:	73696c00 	cmnvc	r9, #0, 24
 8016326:	002a2374 	eoreq	r2, sl, r4, ror r3
 801632a:	69747075 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, ip, sp, lr}^
 801632e:	0023656d 	eoreq	r6, r3, sp, ror #10
 8016332:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8016336:	236e6f69 	cmncs	lr, #420	; 0x1a4
 801633a:	74656700 	strbtvc	r6, [r5], #-1792	; 0xfffff900
 801633e:	61660023 	cmnvs	r6, r3, lsr #32
 8016342:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8016346:	00232379 	eoreq	r2, r3, r9, ror r3

0801634a <s_Node>:
 801634a:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 801634e:	0074654e 	rsbseq	r6, r4, lr, asr #10
	...
 801635a:	41730000 	cmnmi	r3, r0
 801635e:	45204e43 	strmi	r4, [r0, #-3651]!	; 0xfffff1bd
 8016362:	31332e31 	teqcc	r3, r1, lsr lr
	...
 801636e:	2043534f 	subcs	r5, r3, pc, asr #6
 8016372:	76726553 			; <UNDEFINED> instruction: 0x76726553
 8016376:	00007265 	andeq	r7, r0, r5, ror #4
 801637a:	00000000 	andeq	r0, r0, r0
 801637e:	544c0000 	strbpl	r0, [ip], #-0
 8016382:	00000043 	andeq	r0, r0, r3, asr #32
	...
 8016392:	2043534f 	subcs	r5, r3, pc, asr #6
 8016396:	65696c43 	strbvs	r6, [r9, #-3139]!	; 0xfffff3bd
 801639a:	0000746e 	andeq	r7, r0, lr, ror #8
 801639e:	00000000 	andeq	r0, r0, r0
 80163a2:	44520000 	ldrbmi	r0, [r2], #-0
 80163a6:	74654e4d 	strbtvc	r4, [r5], #-3661	; 0xfffff1b3
 80163aa:	524c4c20 	subpl	r4, ip, #32, 24	; 0x2000
 80163ae:	6e4f2050 	mcrvs	0, 2, r2, cr15, cr0, {2}
 80163b2:	0000796c 	andeq	r7, r0, ip, ror #18
 80163b6:	776f6853 			; <UNDEFINED> instruction: 0x776f6853
 80163ba:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
	...
 80163c6:	494d0000 	stmdbmi	sp, {}^	; <UNPREDICTABLE>
 80163ca:	00004944 	andeq	r4, r0, r4, asr #18
	...
 80163da:	00504444 	subseq	r4, r0, r4, asr #8
	...

080163ec <s_Output>:
 80163ec:	00584d44 	subseq	r4, r8, r4, asr #26
	...
 80163f8:	004d4452 	subeq	r4, sp, r2, asr r4
	...
 8016404:	696e6f4d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
 8016408:	00726f74 	rsbseq	r6, r2, r4, ror pc
 801640c:	00000000 	andeq	r0, r0, r0
 8016410:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
 8016414:	0000006c 	andeq	r0, r0, ip, rrx
 8016418:	00000000 	andeq	r0, r0, r0
 801641c:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
 8016420:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
 8016424:	00000000 	andeq	r0, r0, r0
 8016428:	0043534f 	subeq	r5, r3, pc, asr #6
	...
 8016434:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 8016438:	00006769 	andeq	r6, r0, r9, ror #14
 801643c:	00000000 	andeq	r0, r0, r0
 8016440:	70657453 	rsbvc	r7, r5, r3, asr r4
 8016444:	00726570 	rsbseq	r6, r2, r0, ror r5
 8016448:	00000000 	andeq	r0, r0, r0
 801644c:	79616c50 	stmdbvc	r1!, {r4, r6, sl, fp, sp, lr}^
 8016450:	00007265 	andeq	r7, r0, r5, ror #4
 8016454:	00000000 	andeq	r0, r0, r0
 8016458:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 801645c:	0074654e 	rsbseq	r6, r4, lr, asr #10
 8016460:	00000000 	andeq	r0, r0, r0
 8016464:	69726553 	ldmdbvs	r2!, {r0, r1, r4, r6, r8, sl, sp, lr}^
 8016468:	00006c61 	andeq	r6, r0, r1, ror #24
 801646c:	00000000 	andeq	r0, r0, r0
 8016470:	20424752 	subcs	r4, r2, r2, asr r7
 8016474:	656e6150 	strbvs	r6, [lr, #-336]!	; 0xfffffeb0
 8016478:	0000006c 	andeq	r0, r0, ip, rrx

0801647c <RemoteConfig::s_GET>:
 801647c:	0800e759 	stmdaeq	r0, {r0, r3, r4, r6, r8, r9, sl, sp, lr, pc}
 8016480:	00000000 	andeq	r0, r0, r0
 8016484:	08016314 	stmdaeq	r1, {r2, r4, r8, r9, sp, lr}
 8016488:	00000008 	andeq	r0, r0, r8
 801648c:	0800dc25 	stmdaeq	r0, {r0, r2, r5, sl, fp, ip, lr, pc}
 8016490:	00000000 	andeq	r0, r0, r0
 8016494:	0801631d 	stmdaeq	r1, {r0, r2, r3, r4, r8, r9, sp, lr}
 8016498:	00000005 	andeq	r0, r0, r5
 801649c:	0800dc25 	stmdaeq	r0, {r0, r2, r5, sl, fp, ip, lr, pc}
 80164a0:	00000000 	andeq	r0, r0, r0
 80164a4:	08016323 	stmdaeq	r1, {r0, r1, r5, r8, r9, sp, lr}
 80164a8:	00000006 	andeq	r0, r0, r6
 80164ac:	0800de19 	stmdaeq	r0, {r0, r3, r4, r9, sl, fp, ip, lr, pc}
 80164b0:	00000000 	andeq	r0, r0, r0
 80164b4:	0801632a 	stmdaeq	r1, {r1, r3, r5, r8, r9, sp, lr}
 80164b8:	00000007 	andeq	r0, r0, r7
 80164bc:	0800ddd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, sl, fp, ip, lr, pc}
 80164c0:	00000000 	andeq	r0, r0, r0
 80164c4:	08016332 	stmdaeq	r1, {r1, r4, r5, r8, r9, sp, lr}
 80164c8:	00000008 	andeq	r0, r0, r8
 80164cc:	0800dcfd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, sl, fp, ip, lr, pc}
 80164d0:	00000000 	andeq	r0, r0, r0
 80164d4:	080162f9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, r9, sp, lr}
 80164d8:	00000008 	andeq	r0, r0, r8
 80164dc:	0800e09d 	stmdaeq	r0, {r0, r2, r3, r4, r7, sp, lr, pc}
 80164e0:	00000000 	andeq	r0, r0, r0
 80164e4:	0801633b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r8, r9, sp, lr}
 80164e8:	00010004 	andeq	r0, r1, r4
 80164ec:	0800dd7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r8, sl, fp, ip, lr, pc}
 80164f0:	00000000 	andeq	r0, r0, r0
 80164f4:	080162f3 	stmdaeq	r1, {r0, r1, r4, r5, r6, r7, r9, sp, lr}
 80164f8:	00000005 	andeq	r0, r0, r5
 80164fc:	0800e441 	stmdaeq	r0, {r0, r6, sl, sp, lr, pc}
 8016500:	00000000 	andeq	r0, r0, r0
 8016504:	08016340 	stmdaeq	r1, {r6, r8, r9, sp, lr}
 8016508:	00000009 	andeq	r0, r0, r9

0801650c <RemoteConfig::s_SET>:
 801650c:	0800dd59 	stmdaeq	r0, {r0, r3, r4, r6, r8, sl, fp, ip, lr, pc}
 8016510:	00000000 	andeq	r0, r0, r0
 8016514:	080162f3 	stmdaeq	r1, {r0, r1, r4, r5, r6, r7, r9, sp, lr}
 8016518:	00010005 	andeq	r0, r1, r5
 801651c:	0800de6d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl, fp, ip, lr, pc}
 8016520:	00000000 	andeq	r0, r0, r0
 8016524:	080162f9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, r9, sp, lr}
 8016528:	00010008 	andeq	r0, r1, r8
 801652c:	6f626552 	svcvs	0x00626552
 8016530:	6e69746f 	cdpvs	4, 6, cr7, cr9, cr15, {3}
 8016534:	2e2e2067 	cdpcs	0, 2, cr2, cr14, cr7, {3}
 8016538:	52000a2e 	andpl	r0, r0, #188416	; 0x2e000
 801653c:	6f6f6265 	svcvs	0x006f6265
 8016540:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 8016544:	2e2e2e20 	cdpcs	14, 2, cr2, cr14, cr0, {1}
 8016548:	6f637200 	svcvs	0x00637200
 801654c:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 8016550:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8016554:	74656e00 	strbtvc	r6, [r5], #-3584	; 0xfffff200
 8016558:	6b726f77 	blvs	9cb233c <__exidx_end+0x1c9a474>
 801655c:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8016560:	73696400 	cmnvc	r9, #0, 8
 8016564:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8016568:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 801656c:	33316500 	teqcc	r1, #0, 10
 8016570:	78742e31 	ldmdavc	r4!, {r0, r4, r5, r9, sl, fp, sp}^
 8016574:	65640074 	strbvs	r0, [r4, #-116]!	; 0xffffff8c
 8016578:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
 801657c:	78742e73 	ldmdavc	r4!, {r0, r1, r4, r5, r6, r9, sl, fp, sp}^
 8016580:	00000074 	andeq	r0, r0, r4, ror r0

08016584 <RemoteConfig::s_TXT>:
 8016584:	0800e0a5 	stmdaeq	r0, {r0, r2, r5, r7, sp, lr, pc}
 8016588:	00000000 	andeq	r0, r0, r0
 801658c:	0800e361 	stmdaeq	r0, {r0, r5, r6, r8, r9, sp, lr, pc}
 8016590:	00000000 	andeq	r0, r0, r0
 8016594:	08016549 	stmdaeq	r1, {r0, r3, r6, r8, sl, sp, lr}
 8016598:	0000000b 	andeq	r0, r0, fp
 801659c:	0000000c 	andeq	r0, r0, ip
 80165a0:	0800e0d1 	stmdaeq	r0, {r0, r4, r6, r7, sp, lr, pc}
 80165a4:	00000000 	andeq	r0, r0, r0
 80165a8:	0800e395 	stmdaeq	r0, {r0, r2, r4, r7, r8, r9, sp, lr, pc}
 80165ac:	00000000 	andeq	r0, r0, r0
 80165b0:	08016555 	stmdaeq	r1, {r0, r2, r4, r6, r8, sl, sp, lr}
 80165b4:	0000000b 	andeq	r0, r0, fp
 80165b8:	00000000 	andeq	r0, r0, r0
 80165bc:	0800e155 	stmdaeq	r0, {r0, r2, r4, r6, r8, sp, lr, pc}
 80165c0:	00000000 	andeq	r0, r0, r0
 80165c4:	0800e415 	stmdaeq	r0, {r0, r2, r4, sl, sp, lr, pc}
 80165c8:	00000000 	andeq	r0, r0, r0
 80165cc:	08016561 	stmdaeq	r1, {r0, r5, r6, r8, sl, sp, lr}
 80165d0:	0000000b 	andeq	r0, r0, fp
 80165d4:	0000000f 	andeq	r0, r0, pc
 80165d8:	0800e0fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, sp, lr, pc}
 80165dc:	00000000 	andeq	r0, r0, r0
 80165e0:	0800e3bd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, r8, r9, sp, lr, pc}
 80165e4:	00000000 	andeq	r0, r0, r0
 80165e8:	0801656d 	stmdaeq	r1, {r0, r2, r3, r5, r6, r8, sl, sp, lr}
 80165ec:	00000008 	andeq	r0, r0, r8
 80165f0:	00000004 	andeq	r0, r0, r4
 80165f4:	0800e129 	stmdaeq	r0, {r0, r3, r5, r8, sp, lr, pc}
 80165f8:	00000000 	andeq	r0, r0, r0
 80165fc:	0800e3e9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r8, r9, sp, lr, pc}
 8016600:	00000000 	andeq	r0, r0, r0
 8016604:	08016576 	stmdaeq	r1, {r1, r2, r4, r5, r6, r8, sl, sp, lr}
 8016608:	0000000b 	andeq	r0, r0, fp
 801660c:	00000003 	andeq	r0, r0, r3
 8016610:	45470020 	strbmi	r0, [r7, #-32]	; 0xffffffe0
 8016614:	4f500054 	svcmi	0x00500054
 8016618:	48005453 	stmdami	r0, {r0, r1, r4, r6, sl, ip, lr}
 801661c:	00505454 	subseq	r5, r0, r4, asr r4
 8016620:	31000a20 	tstcc	r0, r0, lsr #20
 8016624:	3a00312e 	bcc	8022ae4 <__exidx_end+0xac1c>
 8016628:	6e6f4300 	cdpvs	3, 6, cr4, cr15, cr0, {0}
 801662c:	746e6574 	strbtvc	r6, [lr], #-1396	; 0xfffffa8c
 8016630:	7079542d 	rsbsvc	r5, r9, sp, lsr #8
 8016634:	3b200065 	blcc	88167d0 <__exidx_end+0x7fe908>
 8016638:	70706100 	rsbsvc	r6, r0, r0, lsl #2
 801663c:	6163696c 	cmnvs	r3, ip, ror #18
 8016640:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8016644:	6f736a2f 	svcvs	0x00736a2f
 8016648:	6f43006e 	svcvs	0x0043006e
 801664c:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 8016650:	654c2d74 	strbvs	r2, [ip, #-3444]	; 0xfffff28c
 8016654:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
 8016658:	6e692f00 	cdpvs	15, 6, cr2, cr9, cr0, {0}
 801665c:	2e786564 	cdpcs	5, 7, cr6, cr8, cr4, {3}
 8016660:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8016664:	74732f00 	ldrbtvc	r2, [r3], #-3840	; 0xfffff100
 8016668:	73656c79 	cmnvc	r5, #30976	; 0x7900
 801666c:	7373632e 	cmnvc	r3, #-1207959552	; 0xb8000000
 8016670:	6e692f00 	cdpvs	15, 6, cr2, cr9, cr0, {0}
 8016674:	2e786564 	cdpcs	5, 7, cr6, cr8, cr4, {3}
 8016678:	2f00736a 	svccs	0x0000736a
 801667c:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 8016680:	696c002f 	stmdbvs	ip!, {r0, r1, r2, r3, r5}^
 8016684:	76007473 			; <UNDEFINED> instruction: 0x76007473
 8016688:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 801668c:	75006e6f 	strvc	r6, [r0, #-3695]	; 0xfffff191
 8016690:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 8016694:	69640065 	stmdbvs	r4!, {r0, r2, r5, r6}^
 8016698:	616c7073 	smcvs	50947	; 0xc703
 801669c:	69640079 	stmdbvs	r4!, {r0, r3, r4, r5, r6}^
 80166a0:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 80166a4:	0079726f 	rsbseq	r7, r9, pc, ror #4
 80166a8:	6f736a2f 	svcvs	0x00736a2f
 80166ac:	63612f6e 	cmnvs	r1, #440	; 0x1b8
 80166b0:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 80166b4:	62657200 	rsbvs	r7, r5, #0, 4
 80166b8:	00746f6f 	rsbseq	r6, r4, pc, ror #30
 80166bc:	6e656469 	cdpvs	4, 6, cr6, cr5, cr9, {3}
 80166c0:	79666974 	stmdbvc	r6!, {r2, r4, r5, r6, r8, fp, sp, lr}^
 80166c4:	44213c00 	strtmi	r3, [r1], #-3072	; 0xfffff400
 80166c8:	5954434f 	ldmdbpl	r4, {r0, r1, r2, r3, r6, r8, r9, lr}^
 80166cc:	68204550 	stmdavs	r0!, {r4, r6, r8, sl, lr}
 80166d0:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 80166d4:	74683c0a 	strbtvc	r3, [r8], #-3082	; 0xfffff3f6
 80166d8:	0a3e6c6d 	beq	8fb1894 <__exidx_end+0xf999cc>
 80166dc:	6165683c 	cmnvs	r5, ip, lsr r8
 80166e0:	743c3e64 	ldrtvc	r3, [ip], #-3684	; 0xfffff19c
 80166e4:	656c7469 	strbvs	r7, [ip, #-1129]!	; 0xfffffb97
 80166e8:	6275533e 	rsbsvs	r5, r5, #-134217728	; 0xf8000000
 80166ec:	3c74696d 			; <UNDEFINED> instruction: 0x3c74696d
 80166f0:	7469742f 	strbtvc	r7, [r9], #-1071	; 0xfffffbd1
 80166f4:	3c3e656c 	cfldr32cc	mvfx6, [lr], #-432	; 0xfffffe50
 80166f8:	6165682f 	cmnvs	r5, pc, lsr #16
 80166fc:	3c0a3e64 	stccc	14, cr3, [sl], {100}	; 0x64
 8016700:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 8016704:	31683c3e 	cmncc	r8, lr, lsr ip
 8016708:	3c4b4f3e 	mcrrcc	15, 3, r4, fp, cr14
 801670c:	3e31682f 	cdpcc	8, 3, cr6, cr1, cr15, {1}
 8016710:	6f622f3c 	svcvs	0x00622f3c
 8016714:	0a3e7964 	beq	8fb4cac <__exidx_end+0xf9cde4>
 8016718:	74682f3c 	strbtvc	r2, [r8], #-3900	; 0xfffff0c4
 801671c:	0a3e6c6d 	beq	8fb18d8 <__exidx_end+0xf99a10>
 8016720:	64614200 	strbtvs	r4, [r1], #-512	; 0xfffffe00
 8016724:	71655220 	cmnvc	r5, r0, lsr #4
 8016728:	74736575 	ldrbtvc	r6, [r3], #-1397	; 0xfffffa8b
 801672c:	746f4e00 	strbtvc	r4, [pc], #-3584	; 8016734 <RemoteConfig::s_TXT+0x1b0>
 8016730:	756f4620 	strbvc	r4, [pc, #-1568]!	; 8016118 <vtable for WS28xxDmxMulti+0x68>
 8016734:	5200646e 	andpl	r6, r0, #1845493760	; 0x6e000000
 8016738:	65757165 	ldrbvs	r7, [r5, #-357]!	; 0xfffffe9b
 801673c:	45207473 	strmi	r7, [r0, #-1139]!	; 0xfffffb8d
 8016740:	7469746e 	strbtvc	r7, [r9], #-1134	; 0xfffffb92
 8016744:	6f542079 	svcvs	0x00542079
 8016748:	614c206f 	cmpvs	ip, pc, rrx
 801674c:	00656772 	rsbeq	r6, r5, r2, ror r7
 8016750:	75716552 	ldrbvc	r6, [r1, #-1362]!	; 0xfffffaae
 8016754:	2d747365 	ldclcs	3, cr7, [r4, #-404]!	; 0xfffffe6c
 8016758:	20495255 	subcs	r5, r9, r5, asr r2
 801675c:	206f6f54 	rsbcs	r6, pc, r4, asr pc	; <UNPREDICTABLE>
 8016760:	676e6f4c 	strbvs	r6, [lr, -ip, asr #30]!
 8016764:	746e4900 	strbtvc	r4, [lr], #-2304	; 0xfffff700
 8016768:	616e7265 	cmnvs	lr, r5, ror #4
 801676c:	6553206c 	ldrbvs	r2, [r3, #-108]	; 0xffffff94
 8016770:	72657672 	rsbvc	r7, r5, #119537664	; 0x7200000
 8016774:	72724520 	rsbsvc	r4, r2, #32, 10	; 0x8000000
 8016778:	4d00726f 	sfmmi	f7, 4, [r0, #-444]	; 0xfffffe44
 801677c:	6f687465 	svcvs	0x00687465
 8016780:	6f4e2064 	svcvs	0x004e2064
 8016784:	6d492074 	stclvs	0, cr2, [r9, #-464]	; 0xfffffe30
 8016788:	6d656c70 	stclvs	12, cr6, [r5, #-448]!	; 0xfffffe40
 801678c:	65746e65 	ldrbvs	r6, [r4, #-3685]!	; 0xfffff19b
 8016790:	65560064 	ldrbvs	r0, [r6, #-100]	; 0xffffff9c
 8016794:	6f697372 	svcvs	0x00697372
 8016798:	6f4e206e 	svcvs	0x004e206e
 801679c:	75532074 	ldrbvc	r2, [r3, #-116]	; 0xffffff8c
 80167a0:	726f7070 	rsbvc	r7, pc, #112	; 0x70
 80167a4:	00646574 	rsbeq	r6, r4, r4, ror r5
 80167a8:	6e6b6e55 	mcrvs	14, 3, r6, cr11, cr5, {2}
 80167ac:	206e776f 	rsbcs	r7, lr, pc, ror #14
 80167b0:	6f727245 	svcvs	0x00727245
 80167b4:	4b4f0072 	blmi	93d6984 <__exidx_end+0x13beabc>
 80167b8:	44213c00 	strtmi	r3, [r1], #-3072	; 0xfffff400
 80167bc:	5954434f 	ldmdbpl	r4, {r0, r1, r2, r3, r6, r8, r9, lr}^
 80167c0:	68204550 	stmdavs	r0!, {r4, r6, r8, sl, lr}
 80167c4:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 80167c8:	74683c0a 	strbtvc	r3, [r8], #-3082	; 0xfffff3f6
 80167cc:	0a3e6c6d 	beq	8fb1988 <__exidx_end+0xf99ac0>
 80167d0:	6165683c 	cmnvs	r5, ip, lsr r8
 80167d4:	743c3e64 	ldrtvc	r3, [ip], #-3684	; 0xfffff19c
 80167d8:	656c7469 	strbvs	r7, [ip, #-1129]!	; 0xfffffb97
 80167dc:	2075253e 	rsbscs	r2, r5, lr, lsr r5
 80167e0:	2f3c7325 	svccs	0x003c7325
 80167e4:	6c746974 			; <UNDEFINED> instruction: 0x6c746974
 80167e8:	2f3c3e65 	svccs	0x003c3e65
 80167ec:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
 80167f0:	623c0a3e 	eorsvs	r0, ip, #253952	; 0x3e000
 80167f4:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 80167f8:	3e31683c 	mrccc	8, 1, r6, cr1, cr12, {1}
 80167fc:	2f3c7325 	svccs	0x003c7325
 8016800:	3c3e3168 	ldfccs	f3, [lr], #-416	; 0xfffffe60
 8016804:	646f622f 	strbtvs	r6, [pc], #-559	; 801680c <RemoteConfig::s_TXT+0x288>
 8016808:	3c0a3e79 	stccc	14, cr3, [sl], {121}	; 0x79
 801680c:	6d74682f 	ldclvs	8, cr6, [r4, #-188]!	; 0xffffff44
 8016810:	000a3e6c 	andeq	r3, sl, ip, ror #28
 8016814:	50545448 	subspl	r5, r4, r8, asr #8
 8016818:	312e312f 			; <UNDEFINED> instruction: 0x312e312f
 801681c:	20752520 	rsbscs	r2, r5, r0, lsr #10
 8016820:	0a0d7325 	beq	83734bc <__exidx_end+0x35b5f4>
 8016824:	76726553 			; <UNDEFINED> instruction: 0x76726553
 8016828:	203a7265 	eorscs	r7, sl, r5, ror #4
 801682c:	0a0d7325 	beq	83734c8 <__exidx_end+0x35b600>
 8016830:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
 8016834:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	; 0xfffffe6c
 8016838:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
 801683c:	7325203a 			; <UNDEFINED> instruction: 0x7325203a
 8016840:	6f430a0d 	svcvs	0x00430a0d
 8016844:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 8016848:	654c2d74 	strbvs	r2, [ip, #-3444]	; 0xfffff28c
 801684c:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
 8016850:	7525203a 	strvc	r2, [r5, #-58]!	; 0xffffffc6
 8016854:	6f430a0d 	svcvs	0x00430a0d
 8016858:	63656e6e 	cmnvs	r5, #1760	; 0x6e0
 801685c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8016860:	6c63203a 	stclvs	0, cr2, [r3], #-232	; 0xffffff18
 8016864:	0d65736f 	stcleq	3, cr7, [r5, #-444]!	; 0xfffffe44
 8016868:	000a0d0a 	andeq	r0, sl, sl, lsl #26

0801686c <contentType>:
 801686c:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 8016870:	6d74682f 	ldclvs	8, cr6, [r4, #-188]!	; 0xffffff44
 8016874:	0000006c 	andeq	r0, r0, ip, rrx
	...
 801688c:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 8016890:	7373632f 	cmnvc	r3, #-1140850688	; 0xbc000000
	...
 80168ac:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 80168b0:	76616a2f 	strbtvc	r6, [r1], -pc, lsr #20
 80168b4:	72637361 	rsbvc	r7, r3, #-2080374783	; 0x84000001
 80168b8:	00747069 	rsbseq	r7, r4, r9, rrx
	...
 80168cc:	6c707061 	ldclvs	0, cr7, [r0], #-388	; 0xfffffe7c
 80168d0:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
 80168d4:	2f6e6f69 	svccs	0x006e6f69
 80168d8:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
	...

080168ec <RemoteConfigConst::PARAMS_DISABLE>:
 80168ec:	61736964 	cmnvs	r3, r4, ror #18
 80168f0:	00656c62 	rsbeq	r6, r5, r2, ror #24

080168f4 <RemoteConfigConst::PARAMS_FILE_NAME>:
 80168f4:	6e6f6372 	mcrvs	3, 3, r6, cr15, cr2, {3}
 80168f8:	2e676966 	vnmulcs.f16	s13, s14, s13	; <UNPREDICTABLE>
 80168fc:	00747874 	rsbseq	r7, r4, r4, ror r8

08016900 <RemoteConfigConst::PARAMS_DISPLAY_NAME>:
 8016900:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8016904:	5f79616c 	svcpl	0x0079616c
 8016908:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

0801690d <RemoteConfigConst::PARAMS_DISABLE_WRITE>:
 801690d:	61736964 	cmnvs	r3, r4, ror #18
 8016911:	5f656c62 	svcpl	0x00656c62
 8016915:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
 8016919:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

0801691b <RemoteConfigConst::PARAMS_ENABLE_REBOOT>:
 801691b:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 801691f:	725f656c 	subsvc	r6, pc, #108, 10	; 0x1b000000
 8016923:	6f6f6265 	svcvs	0x006f6265
 8016927:	 	mcrvs	0, 3, r0, cr5, cr4, {3}

08016929 <RemoteConfigConst::PARAMS_ENABLE_UPTIME>:
 8016929:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 801692d:	755f656c 	ldrbvc	r6, [pc, #-1388]	; 80163c9 <s_Node+0x7f>
 8016931:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 8016935:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

08016937 <RemoteConfigConst::PARAMS_ENABLE_FACTORY>:
 8016937:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 801693b:	665f656c 	ldrbvs	r6, [pc], -ip, ror #10
 801693f:	6f746361 	svcvs	0x00746361
 8016943:	7b007972 	blvc	8034f13 <__exidx_end+0x1d04b>
 8016947:	73696c22 	cmnvc	r9, #8704	; 0x2200
 801694b:	7b3a2274 	blvc	8e9f323 <__exidx_end+0xe8745b>
 801694f:	22706922 	rsbscs	r6, r0, #557056	; 0x88000
 8016953:	6425223a 	strtvs	r2, [r5], #-570	; 0xfffffdc6
 8016957:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801695b:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801695f:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 8016963:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 8016967:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 801696b:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 801696f:	65646f6e 	strbvs	r6, [r4, #-3950]!	; 0xfffff092
 8016973:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 8016977:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 801697b:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 801697f:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 8016983:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8016987:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 801698b:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 801698f:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8016993:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 8016997:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 801699b:	253a2274 	ldrcs	r2, [sl, #-628]!	; 0xfffffd8c
 801699f:	7d7d7d64 	ldclvc	13, cr7, [sp, #-400]!	; 0xfffffe70
 80169a3:	227b007d 	rsbscs	r0, fp, #125	; 0x7d
 80169a7:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 80169ab:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 80169af:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 80169b3:	2c22732a 	stccs	3, cr7, [r2], #-168	; 0xffffff58
 80169b7:	616f6222 	cmnvs	pc, r2, lsr #4
 80169bb:	3a226472 	bcc	88afb8b <__exidx_end+0x897cc3>
 80169bf:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 80169c3:	7562222c 	strbvc	r2, [r2, #-556]!	; 0xfffffdd4
 80169c7:	22646c69 	rsbcs	r6, r4, #26880	; 0x6900
 80169cb:	64227b3a 	strtvs	r7, [r2], #-2874	; 0xfffff4c6
 80169cf:	22657461 	rsbcs	r7, r5, #1627389952	; 0x61000000
 80169d3:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 80169d7:	2c22732a 	stccs	3, cr7, [r2], #-168	; 0xffffff58
 80169db:	6d697422 	cfstrdvs	mvd7, [r9, #-136]!	; 0xffffff78
 80169df:	223a2265 	eorscs	r2, sl, #1342177286	; 0x50000006
 80169e3:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
 80169e7:	007d7d22 	rsbseq	r7, sp, r2, lsr #26
 80169eb:	7075227b 	rsbsvc	r2, r5, fp, ror r2
 80169ef:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 80169f3:	75253a22 	strvc	r3, [r5, #-2594]!	; 0xfffff5de
 80169f7:	7b000a7d 	blvc	80193f3 <__exidx_end+0x152b>
 80169fb:	73696422 	cmnvc	r9, #570425344	; 0x22000000
 80169ff:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8016a03:	64253a22 	strtvs	r3, [r5], #-2594	; 0xfffff5de
 8016a07:	227b007d 	rsbscs	r0, fp, #125	; 0x7d
 8016a0b:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8016a0f:	7b3a2273 	blvc	8e9f3e3 <__exidx_end+0xe8751b>
 8016a13:	33316522 	teqcc	r1, #142606336	; 0x8800000
 8016a17:	78742e31 	ldmdavc	r4!, {r0, r4, r5, r9, sl, fp, sp}^
 8016a1b:	223a2274 	eorscs	r2, sl, #116, 4	; 0x40000007
 8016a1f:	4e434173 	mcrmi	1, 2, r4, cr3, cr3, {3}
 8016a23:	2e314520 	cfabs64cs	mvdx4, mvdx1
 8016a27:	2c223133 	stfcss	f3, [r2], #-204	; 0xffffff34
 8016a2b:	76656422 	strbtvc	r6, [r5], -r2, lsr #8
 8016a2f:	73656369 	cmnvc	r5, #-1543503871	; 0xa4000001
 8016a33:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8016a37:	44223a22 	strtmi	r3, [r2], #-2594	; 0xfffff5de
 8016a3b:	5020584d 	eorpl	r5, r0, sp, asr #16
 8016a3f:	6c657869 	stclvs	8, cr7, [r5], #-420	; 0xfffffe5c
 8016a43:	64222c22 	strtvs	r2, [r2], #-3106	; 0xfffff3de
 8016a47:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
 8016a4b:	742e7961 	strtvc	r7, [lr], #-2401	; 0xfffff69f
 8016a4f:	3a227478 	bcc	88b3c37 <__exidx_end+0x89bd6f>
 8016a53:	73694422 	cmnvc	r9, #570425344	; 0x22000000
 8016a57:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8016a5b:	46445520 	strbmi	r5, [r4], -r0, lsr #10
 8016a5f:	6e222c22 	cdpvs	12, 2, cr2, cr2, cr2, {1}
 8016a63:	6f777465 	svcvs	0x00777465
 8016a67:	742e6b72 	strtvc	r6, [lr], #-2930	; 0xfffff48e
 8016a6b:	3a227478 	bcc	88b3c53 <__exidx_end+0x89bd8b>
 8016a6f:	74654e22 	strbtvc	r4, [r5], #-3618	; 0xfffff1de
 8016a73:	6b726f77 	blvs	9cb2857 <__exidx_end+0x1c9a98f>
 8016a77:	72222c22 	eorvc	r2, r2, #8704	; 0x2200
 8016a7b:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 8016a7f:	742e6769 	strtvc	r6, [lr], #-1897	; 0xfffff897
 8016a83:	3a227478 	bcc	88b3c6b <__exidx_end+0x89bda3>
 8016a87:	6d655222 	sfmvs	f5, 2, [r5, #-136]!	; 0xffffff78
 8016a8b:	2065746f 	rsbcs	r7, r5, pc, ror #8
 8016a8f:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 8016a93:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 8016a97:	6f697461 	svcvs	0x00697461
 8016a9b:	7d7d226e 	lfmvc	f2, 2, [sp, #-440]!	; 0xfffffe48
 8016a9f:	63727300 	cmnvs	r2, #0, 6
 8016aa3:	7474682f 	ldrbtvc	r6, [r4], #-2095	; 0xfffff7d1
 8016aa7:	672f6470 			; <UNDEFINED> instruction: 0x672f6470
 8016aab:	665f7465 	ldrbvs	r7, [pc], -r5, ror #8
 8016aaf:	5f656c69 	svcpl	0x00656c69
 8016ab3:	746e6f63 	strbtvc	r6, [lr], #-3939	; 0xfffff09d
 8016ab7:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 8016abb:	00707063 	rsbseq	r7, r0, r3, rrx
 8016abf:	5f746567 	svcpl	0x00746567
 8016ac3:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8016ac7:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
 8016acb:	746e6574 	strbtvc	r6, [lr], #-1396	; 0xfffffa8c
 8016acf:	28732500 	ldmdacs	r3!, {r8, sl, sp}^
 8016ad3:	73252029 			; <UNDEFINED> instruction: 0x73252029
 8016ad7:	696c202c 	stmdbvs	ip!, {r2, r3, r5, sp}^
 8016adb:	2520656e 	strcs	r6, [r0, #-1390]!	; 0xfffffa92
 8016adf:	25203a69 	strcs	r3, [r0, #-2665]!	; 0xfffff597
 8016ae3:	3e2d2073 	mcrcc	0, 1, r2, cr13, cr3, {3}
 8016ae7:	0a642520 	beq	991ff6f <__exidx_end+0x19080a7>
 8016aeb:	2d2d3c00 	stccs	12, cr3, [sp, #-0]
 8016aef:	3a732520 	bcc	9cdff77 <__exidx_end+0x1cc80af>
 8016af3:	253a7325 	ldrcs	r7, [sl, #-805]!	; 0xfffffcdb
 8016af7:	 			; <UNDEFINED> instruction: 0x3c000a64

08016afa <index_html>:
 8016afa:	4f44213c 	svcmi	0x0044213c
 8016afe:	50595443 	subspl	r5, r9, r3, asr #8
 8016b02:	74682045 	strbtvc	r2, [r8], #-69	; 0xffffffbb
 8016b06:	0a3e6c6d 	beq	8fb1cc2 <__exidx_end+0xf99dfa>
 8016b0a:	6d74683c 	ldclvs	8, cr6, [r4, #-240]!	; 0xffffff10
 8016b0e:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
 8016b12:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
 8016b16:	3c090a3e 			; <UNDEFINED> instruction: 0x3c090a3e
 8016b1a:	6b6e696c 	blvs	9bb10d2 <__exidx_end+0x1b9920a>
 8016b1e:	6c657220 	sfmvs	f7, 2, [r5], #-128	; 0xffffff80
 8016b22:	7473223d 	ldrbtvc	r2, [r3], #-573	; 0xfffffdc3
 8016b26:	73656c79 	cmnvc	r5, #30976	; 0x7900
 8016b2a:	74656568 	strbtvc	r6, [r5], #-1384	; 0xfffffa98
 8016b2e:	72682022 	rsbvc	r2, r8, #34	; 0x22
 8016b32:	223d6665 	eorscs	r6, sp, #105906176	; 0x6500000
 8016b36:	6c797473 	cfldrdvs	mvd7, [r9], #-460	; 0xfffffe34
 8016b3a:	632e7365 			; <UNDEFINED> instruction: 0x632e7365
 8016b3e:	20227373 	eorcs	r7, r2, r3, ror r3
 8016b42:	090a3e2f 	stmdbeq	sl, {r0, r1, r2, r3, r5, r9, sl, fp, ip, sp}
 8016b46:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
 8016b4a:	3c3e656c 	cfldr32cc	mvfx6, [lr], #-432	; 0xfffffe50
 8016b4e:	7469742f 	strbtvc	r7, [r9], #-1071	; 0xfffffbd1
 8016b52:	0a3e656c 	beq	8fb010a <__exidx_end+0xf98242>
 8016b56:	65682f3c 	strbvs	r2, [r8, #-3900]!	; 0xfffff0c4
 8016b5a:	0a3e6461 	beq	8fafce6 <__exidx_end+0xf97e1e>
 8016b5e:	646f623c 	strbtvs	r6, [pc], #-572	; 8016b66 <index_html+0x6c>
 8016b62:	090a3e79 	stmdbeq	sl, {r0, r3, r4, r5, r6, r9, sl, fp, ip, sp}
 8016b66:	6165683c 	cmnvs	r5, ip, lsr r8
 8016b6a:	3e726564 	cdpcc	5, 7, cr6, cr2, cr4, {3}
 8016b6e:	206c753c 	rsbcs	r7, ip, ip, lsr r5
 8016b72:	223d6469 	eorscs	r6, sp, #1761607680	; 0x69000000
 8016b76:	694c6469 	stmdbvs	ip, {r0, r3, r5, r6, sl, sp, lr}^
 8016b7a:	3e227473 	mcrcc	4, 1, r7, cr2, cr3, {3}
 8016b7e:	6c752f3c 	ldclvs	15, cr2, [r5], #-240	; 0xffffff10
 8016b82:	682f3c3e 	stmdavs	pc!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8016b86:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 8016b8a:	090a3e72 	stmdbeq	sl, {r1, r4, r5, r6, r9, sl, fp, ip, sp}
 8016b8e:	3c3e703c 	ldccc	0, cr7, [lr], #-240	; 0xffffff10
 8016b92:	656c6573 	strbvs	r6, [ip, #-1395]!	; 0xfffffa8d
 8016b96:	69207463 	stmdbvs	r0!, {r0, r1, r5, r6, sl, ip, sp, lr}
 8016b9a:	69223d64 	stmdbvs	r2!, {r2, r5, r6, r8, sl, fp, ip, sp}
 8016b9e:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
 8016ba2:	6f746365 	svcvs	0x00746365
 8016ba6:	20227972 	eorcs	r7, r2, r2, ror r9
 8016baa:	68636e6f 	stmdavs	r3!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 8016bae:	65676e61 	strbvs	r6, [r7, #-3681]!	; 0xfffff19f
 8016bb2:	6567223d 	strbvs	r2, [r7, #-573]!	; 0xfffffdc3
 8016bb6:	78745f74 	ldmdavc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 8016bba:	68742874 	ldmdavs	r4!, {r2, r4, r5, r6, fp, sp}^
 8016bbe:	762e7369 	strtvc	r7, [lr], -r9, ror #6
 8016bc2:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
 8016bc6:	3c3e2229 	lfmcc	f2, 4, [lr], #-164	; 0xffffff5c
 8016bca:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
 8016bce:	3e746365 	cdpcc	3, 7, cr6, cr4, cr5, {3}
 8016bd2:	3e702f3c 	mrccc	15, 3, r2, cr0, cr12, {1}
 8016bd6:	743c090a 	ldrtvc	r0, [ip], #-2314	; 0xfffff6f6
 8016bda:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
 8016bde:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
 8016be2:	54646922 	strbtpl	r6, [r4], #-2338	; 0xfffff6de
 8016be6:	20227478 	eorcs	r7, r2, r8, ror r4
 8016bea:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 8016bee:	273d7265 	ldrcs	r7, [sp, -r5, ror #4]!
 8016bf2:	3c3e2731 	ldccc	7, cr2, [lr], #-196	; 0xffffff3c
 8016bf6:	6261742f 	rsbvs	r7, r1, #788529152	; 0x2f000000
 8016bfa:	0a3e656c 	beq	8fb01b2 <__exidx_end+0xf982ea>
 8016bfe:	6f663c09 	svcvs	0x00663c09
 8016c02:	7265746f 	rsbvc	r7, r5, #1862270976	; 0x6f000000
 8016c06:	6c753c3e 	ldclvs	12, cr3, [r5], #-248	; 0xffffff08
 8016c0a:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
 8016c0e:	56646922 	strbtpl	r6, [r4], -r2, lsr #18
 8016c12:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8016c16:	3e226e6f 	cdpcc	14, 2, cr6, cr2, cr15, {3}
 8016c1a:	6c752f3c 	ldclvs	15, cr2, [r5], #-240	; 0xffffff10
 8016c1e:	662f3c3e 			; <UNDEFINED> instruction: 0x662f3c3e
 8016c22:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
 8016c26:	090a3e72 	stmdbeq	sl, {r1, r4, r5, r6, r9, sl, fp, ip, sp}
 8016c2a:	7263733c 	rsbvc	r7, r3, #60, 6	; 0xf0000000
 8016c2e:	20747069 	rsbscs	r7, r4, r9, rrx
 8016c32:	3d637273 	sfmcc	f7, 2, [r3, #-460]!	; 0xfffffe34
 8016c36:	646e6922 	strbtvs	r6, [lr], #-2338	; 0xfffff6de
 8016c3a:	6a2e7865 	bvs	8bb4dd6 <__exidx_end+0xb9cf0e>
 8016c3e:	3c3e2273 	lfmcc	f2, 4, [lr], #-460	; 0xfffffe34
 8016c42:	7263732f 	rsbvc	r7, r3, #-1140850688	; 0xbc000000
 8016c46:	3e747069 	cdpcc	0, 7, cr7, cr4, cr9, {3}
 8016c4a:	622f3c0a 	eorvs	r3, pc, #2560	; 0xa00
 8016c4e:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 8016c52:	682f3c0a 	stmdavs	pc!, {r1, r3, sl, fp, ip, sp}	; <UNPREDICTABLE>
 8016c56:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 8016c5a:	 	strbtvs	r6, [pc], #-522	; 8016c62 <styles_css+0x7>

08016c5b <styles_css>:
 8016c5b:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 8016c5f:	200a7b20 	andcs	r7, sl, r0, lsr #22
 8016c63:	63616220 	cmnvs	r1, #32, 4
 8016c67:	6f72676b 	svcvs	0x0072676b
 8016c6b:	2d646e75 	stclcs	14, cr6, [r4, #-468]!	; 0xfffffe2c
 8016c6f:	6f6c6f63 	svcvs	0x006c6f63
 8016c73:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
 8016c77:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
 8016c7b:	30322c30 	eorscc	r2, r2, r0, lsr ip
 8016c7f:	2930322c 	ldmdbcs	r0!, {r2, r3, r5, r9, ip, sp}
 8016c83:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 8016c87:	6f6c6f63 	svcvs	0x006c6f63
 8016c8b:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
 8016c8f:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
 8016c93:	202c3535 	eorcs	r3, ip, r5, lsr r5
 8016c97:	2c353532 	cfldr32cs	mvfx3, [r5], #-200	; 0xffffff38
 8016c9b:	35353220 	ldrcc	r3, [r5, #-544]!	; 0xfffffde0
 8016c9f:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
 8016ca3:	6c750a0a 			; <UNDEFINED> instruction: 0x6c750a0a
 8016ca7:	200a7b20 	andcs	r7, sl, r0, lsr #22
 8016cab:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 8016caf:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8016cb3:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 8016cb7:	0a3b7865 	beq	8ef4e53 <__exidx_end+0xedcf8b>
 8016cbb:	6c0a0a7d 			; <UNDEFINED> instruction: 0x6c0a0a7d
 8016cbf:	0a7b2069 	beq	9edee6b <__exidx_end+0x1ec6fa3>
 8016cc3:	696c2020 	stmdbvs	ip!, {r5, sp}^
 8016cc7:	732d7473 			; <UNDEFINED> instruction: 0x732d7473
 8016ccb:	656c7974 	strbvs	r7, [ip, #-2420]!	; 0xfffff68c
 8016ccf:	6f6e203a 	svcvs	0x006e203a
 8016cd3:	0a3b656e 	beq	8ef0293 <__exidx_end+0xed83cb>
 8016cd7:	616d2020 	cmnvs	sp, r0, lsr #32
 8016cdb:	6e696772 	mcrvs	7, 3, r6, cr9, cr2, {3}
 8016cdf:	7031203a 	eorsvc	r2, r1, sl, lsr r0
 8016ce3:	70352078 	eorsvc	r2, r5, r8, ror r0
 8016ce7:	7d0a3b78 	vstrvc	d3, [sl, #-480]	; 0xfffffe20
 8016ceb:	65680a0a 	strbvs	r0, [r8, #-2570]!	; 0xfffff5f6
 8016cef:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 8016cf3:	200a7b20 	andcs	r7, sl, r0, lsr #22
 8016cf7:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 8016cfb:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8016cff:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 8016d03:	0a3b7865 	beq	8ef4e9f <__exidx_end+0xedcfd7>
 8016d07:	6f622020 	svcvs	0x00622020
 8016d0b:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
 8016d0f:	6461722d 	strbtvs	r7, [r1], #-557	; 0xfffffdd3
 8016d13:	3a737569 	bcc	9cf42bf <__exidx_end+0x1cdc3f7>
 8016d17:	78703420 	ldmdavc	r0!, {r5, sl, ip, sp}^
 8016d1b:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 8016d1f:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 8016d23:	203a7265 	eorscs	r7, sl, r5, ror #4
 8016d27:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8016d2b:	72672064 	rsbvc	r2, r7, #100	; 0x64
 8016d2f:	31207965 			; <UNDEFINED> instruction: 0x31207965
 8016d33:	0a3b7870 	beq	8ef4efb <__exidx_end+0xedd033>
 8016d37:	660a0a7d 			; <UNDEFINED> instruction: 0x660a0a7d
 8016d3b:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
 8016d3f:	0a7b2072 	beq	9edef0f <__exidx_end+0x1ec7047>
 8016d43:	69642020 	stmdbvs	r4!, {r5, sp}^
 8016d47:	616c7073 	smcvs	50947	; 0xc703
 8016d4b:	66203a79 			; <UNDEFINED> instruction: 0x66203a79
 8016d4f:	3b78656c 	blcc	9e30307 <__exidx_end+0x1e1843f>
 8016d53:	6a20200a 	bvs	881ed83 <__exidx_end+0x806ebb>
 8016d57:	69747375 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r8, r9, ip, sp, lr}^
 8016d5b:	632d7966 			; <UNDEFINED> instruction: 0x632d7966
 8016d5f:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
 8016d63:	203a746e 	eorscs	r7, sl, lr, ror #8
 8016d67:	746e6563 	strbtvc	r6, [lr], #-1379	; 0xfffffa9d
 8016d6b:	0a3b7265 	beq	8ef3707 <__exidx_end+0xedb83f>
 8016d6f:	6f622020 	svcvs	0x00622020
 8016d73:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
 8016d77:	6461722d 	strbtvs	r7, [r1], #-557	; 0xfffffdd3
 8016d7b:	3a737569 	bcc	9cf4327 <__exidx_end+0x1cdc45f>
 8016d7f:	78703420 	ldmdavc	r0!, {r5, sl, ip, sp}^
 8016d83:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 8016d87:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 8016d8b:	203a7265 	eorscs	r7, sl, r5, ror #4
 8016d8f:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8016d93:	72672064 	rsbvc	r2, r7, #100	; 0x64
 8016d97:	31207965 			; <UNDEFINED> instruction: 0x31207965
 8016d9b:	0a3b7870 	beq	8ef4f63 <__exidx_end+0xedd09b>
 8016d9f:	00000a7d 	andeq	r0, r0, sp, ror sl
	...

08016da4 <HttpContent>:
 8016da4:	08016666 	stmdaeq	r1, {r1, r2, r5, r6, r9, sl, sp, lr}
 8016da8:	08016c5b 	stmdaeq	r1, {r0, r1, r3, r4, r6, sl, fp, sp, lr}
 8016dac:	08016672 	stmdaeq	r1, {r1, r4, r5, r6, r9, sl, sp, lr}
 8016db0:	08016dbc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r8, sl, fp, sp, lr}
 8016db4:	0801665a 	stmdaeq	r1, {r1, r3, r4, r6, r9, sl, sp, lr}
 8016db8:	08016afa 	stmdaeq	r1, {r1, r3, r4, r5, r6, r7, r9, fp, sp, lr}

08016dbc <index_js>:
 8016dbc:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8016dc0:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8016dc4:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8016dc8:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 8016dcc:	534a7465 	movtpl	r7, #42085	; 0xa465
 8016dd0:	6a284e4f 	bvs	8a2a714 <__exidx_end+0xa1284c>
 8016dd4:	296e6f73 	stmdbcs	lr!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8016dd8:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 8016ddc:	74656c09 	strbtvc	r6, [r5], #-3081	; 0xfffff3f7
 8016de0:	6c727520 	cfldr64vs	mvdx7, [r2], #-128	; 0xffffff80
 8016de4:	6a2f273d 	bvs	8be0ae0 <__exidx_end+0xbc8c18>
 8016de8:	2f6e6f73 	svccs	0x006e6f73
 8016dec:	202b2027 	eorcs	r2, fp, r7, lsr #32
 8016df0:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 8016df4:	09090a3b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r9, fp}
 8016df8:	20797274 	rsbscs	r7, r9, r4, ror r2
 8016dfc:	09090a7b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r6, r9, fp}
 8016e00:	656c0909 	strbvs	r0, [ip, #-2313]!	; 0xfffff6f7
 8016e04:	65722074 	ldrbvs	r2, [r2, #-116]!	; 0xffffff8c
 8016e08:	77613d73 			; <UNDEFINED> instruction: 0x77613d73
 8016e0c:	20746961 	rsbscs	r6, r4, r1, ror #18
 8016e10:	63746566 	cmnvs	r4, #427819008	; 0x19800000
 8016e14:	72752868 	rsbsvc	r2, r5, #104, 16	; 0x680000
 8016e18:	0a3b296c 	beq	8ee13d0 <__exidx_end+0xec9508>
 8016e1c:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 8016e20:	75746572 	ldrbvc	r6, [r4, #-1394]!	; 0xfffffa8e
 8016e24:	61206e72 			; <UNDEFINED> instruction: 0x61206e72
 8016e28:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 8016e2c:	73657220 	cmnvc	r5, #32, 4
 8016e30:	6f736a2e 	svcvs	0x00736a2e
 8016e34:	3b29286e 	blcc	8a60ff4 <__exidx_end+0xa4912c>
 8016e38:	7d09090a 	vstrvc.16	s0, [r9, #-20]	; 0xffffffec	; <UNPREDICTABLE>
 8016e3c:	74616320 	strbtvc	r6, [r1], #-800	; 0xfffffce0
 8016e40:	28206863 	stmdacs	r0!, {r0, r1, r5, r6, fp, sp, lr}
 8016e44:	6f727265 	svcvs	0x00727265
 8016e48:	7b202972 	blvc	8821418 <__exidx_end+0x809550>
 8016e4c:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8016e50:	6e6f6309 	cdpvs	3, 6, cr6, cr15, cr9, {0}
 8016e54:	656c6f73 	strbvs	r6, [ip, #-3955]!	; 0xfffff08d
 8016e58:	676f6c2e 	strbvs	r6, [pc, -lr, lsr #24]!
 8016e5c:	72726528 	rsbsvc	r6, r2, #40, 10	; 0xa000000
 8016e60:	3b29726f 	blcc	8a73824 <__exidx_end+0xa5b95c>
 8016e64:	7d09090a 	vstrvc.16	s0, [r9, #-20]	; 0xffffffec	; <UNPREDICTABLE>
 8016e68:	0a0a7d0a 	beq	82b6298 <__exidx_end+0x29e3d0>
 8016e6c:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8016e70:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8016e74:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8016e78:	72206e6f 	eorvc	r6, r0, #1776	; 0x6f0
 8016e7c:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 8016e80:	73694c72 	cmnvc	r9, #29184	; 0x7200
 8016e84:	20292874 	eorcs	r2, r9, r4, ror r8
 8016e88:	09090a7b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r6, r9, fp}
 8016e8c:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8016e90:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8016e94:	6177613d 	cmnvs	r7, sp, lsr r1
 8016e98:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8016e9c:	534a7465 	movtpl	r7, #42085	; 0xa465
 8016ea0:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8016ea4:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8016ea8:	0a3b2927 	beq	8ee134c <__exidx_end+0xec9484>
 8016eac:	6f640909 	svcvs	0x00640909
 8016eb0:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 8016eb4:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 8016eb8:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
 8016ebc:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 8016ec0:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 8016ec4:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 8016ec8:	73694c64 	cmnvc	r9, #100, 24	; 0x6400
 8016ecc:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 8016ed0:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
 8016ed4:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
 8016ed8:	3c223d4c 	stccc	13, cr3, [r2], #-304	; 0xfffffed0
 8016edc:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
 8016ee0:	73696c2b 	cmnvc	r9, #11008	; 0x2b00
 8016ee4:	696c2e74 	stmdbvs	ip!, {r2, r4, r5, r6, r9, sl, fp, sp}^
 8016ee8:	6e2e7473 	mcrvs	4, 1, r7, cr14, cr3, {3}
 8016eec:	2b656d61 	blcs	9972478 <__exidx_end+0x195a5b0>
 8016ef0:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8016e70 <index_js+0xb4>
 8016ef4:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8016ef8:	2b223e69 	blcs	88a68a4 <__exidx_end+0x88e9dc>
 8016efc:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8016f00:	73696c2e 	cmnvc	r9, #11776	; 0x2e00
 8016f04:	6f6e2e74 	svcvs	0x006e2e74
 8016f08:	742e6564 	strtvc	r6, [lr], #-1380	; 0xfffffa9c
 8016f0c:	2b657079 	blcs	99730f8 <__exidx_end+0x195b230>
 8016f10:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8016e90 <index_js+0xd4>
 8016f14:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8016f18:	2b223e69 	blcs	88a68c4 <__exidx_end+0x88e9fc>
 8016f1c:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8016f20:	73696c2e 	cmnvc	r9, #11776	; 0x2e00
 8016f24:	6f6e2e74 	svcvs	0x006e2e74
 8016f28:	702e6564 	eorvc	r6, lr, r4, ror #10
 8016f2c:	2e74726f 	cdpcs	2, 7, cr7, cr4, cr15, {3}
 8016f30:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 8016f34:	2f3c222b 	svccs	0x003c222b
 8016f38:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
 8016f3c:	0a7d0a3b 	beq	9f59830 <__exidx_end+0x1f41968>
 8016f40:	7973610a 	ldmdbvc	r3!, {r1, r3, r8, sp, lr}^
 8016f44:	6620636e 	strtvs	r6, [r0], -lr, ror #6
 8016f48:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 8016f4c:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 8016f50:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 8016f54:	69447265 	stmdbvs	r4, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8016f58:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 8016f5c:	2879726f 	ldmdacs	r9!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
 8016f60:	0a7b2029 	beq	9edf00c <__exidx_end+0x1ec7144>
 8016f64:	6c090909 			; <UNDEFINED> instruction: 0x6c090909
 8016f68:	64207465 	strtvs	r7, [r0], #-1125	; 0xfffffb9b
 8016f6c:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
 8016f70:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8016f74:	6177613d 	cmnvs	r7, sp, lsr r1
 8016f78:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 8016f7c:	534a7465 	movtpl	r7, #42085	; 0xa465
 8016f80:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8016f84:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8016f88:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8016f8c:	3b292779 	blcc	8a60d78 <__exidx_end+0xa48eb0>
 8016f90:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8016f94:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8016f98:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8016f9c:	0a22223d 	beq	889f898 <__exidx_end+0x8879d0>
 8016fa0:	6c090909 			; <UNDEFINED> instruction: 0x6c090909
 8016fa4:	66207465 	strtvs	r7, [r0], -r5, ror #8
 8016fa8:	6e656c69 	cdpvs	12, 6, cr6, cr5, cr9, {3}
 8016fac:	73656d61 	cmnvc	r5, #6208	; 0x1840
 8016fb0:	6a624f3d 	bvs	98aacac <__exidx_end+0x1892de4>
 8016fb4:	2e746365 	cdpcs	3, 7, cr6, cr4, cr5, {3}
 8016fb8:	7379656b 	cmnvc	r9, #448790528	; 0x1ac00000
 8016fbc:	72696428 	rsbvc	r6, r9, #40, 8	; 0x28000000
 8016fc0:	6f746365 	svcvs	0x00746365
 8016fc4:	225b7972 	subscs	r7, fp, #1867776	; 0x1c8000
 8016fc8:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8016fcc:	295d2273 	ldmdbcs	sp, {r0, r1, r4, r5, r6, r9, sp}^
 8016fd0:	09090a3b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r9, fp}
 8016fd4:	6c696609 	stclvs	6, cr6, [r9], #-36	; 0xffffffdc
 8016fd8:	6d616e65 	stclvs	14, cr6, [r1, #-404]!	; 0xfffffe6c
 8016fdc:	662e7365 	strtvs	r7, [lr], -r5, ror #6
 8016fe0:	6145726f 	cmpvs	r5, pc, ror #4
 8016fe4:	66286863 	strtvs	r6, [r8], -r3, ror #16
 8016fe8:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 8016fec:	286e6f69 	stmdacs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 8016ff0:	2979656b 	ldmdbcs	r9!, {r0, r1, r3, r5, r6, r8, sl, sp, lr}^
 8016ff4:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 8016ff8:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 8016ffc:	20726176 	rsbscs	r6, r2, r6, ror r1
 8017000:	756c6176 	strbvc	r6, [ip, #-374]!	; 0xfffffe8a
 8017004:	203d2065 	eorscs	r2, sp, r5, rrx
 8017008:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 801700c:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8017010:	66225b79 			; <UNDEFINED> instruction: 0x66225b79
 8017014:	73656c69 	cmnvc	r5, #26880	; 0x6900
 8017018:	6b5b5d22 	blvs	96ee4a8 <__exidx_end+0x16d65e0>
 801701c:	3b5d7965 	blcc	97755b8 <__exidx_end+0x175d6f0>
 8017020:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8017024:	74680909 	strbtvc	r0, [r8], #-2313	; 0xfffff6f7
 8017028:	3d2b6c6d 	stccc	12, cr6, [fp, #-436]!	; 0xfffffe4c
 801702c:	706f3c22 	rsbvc	r3, pc, r2, lsr #24
 8017030:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8017034:	6c617620 	stclvs	6, cr7, [r1], #-128	; 0xffffff80
 8017038:	223d6575 	eorscs	r6, sp, #490733568	; 0x1d400000
 801703c:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 8017040:	223e222b 	eorscs	r2, lr, #-1342177278	; 0xb0000002
 8017044:	6c61762b 	stclvs	6, cr7, [r1], #-172	; 0xffffff54
 8017048:	222b6575 	eorcs	r6, fp, #490733568	; 0x1d400000
 801704c:	706f2f3c 	rsbvc	r2, pc, ip, lsr pc	; <UNPREDICTABLE>
 8017050:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8017054:	0a3b223e 	beq	8edf954 <__exidx_end+0xec7a8c>
 8017058:	7d090909 	vstrvc.16	s0, [r9, #-18]	; 0xffffffee	; <UNPREDICTABLE>
 801705c:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 8017060:	6f640909 	svcvs	0x00640909
 8017064:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 8017068:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 801706c:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
 8017070:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 8017074:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 8017078:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 801707c:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
 8017080:	6f746365 	svcvs	0x00746365
 8017084:	29227972 	stmdbcs	r2!, {r1, r4, r5, r6, r8, fp, ip, sp, lr}
 8017088:	6e6e692e 	vmulvs.f16	s13, s28, s29	; <UNPREDICTABLE>
 801708c:	54487265 	strbpl	r7, [r8], #-613	; 0xfffffd9b
 8017090:	683d4c4d 	ldmdavs	sp!, {r0, r2, r3, r6, sl, fp, lr}
 8017094:	3b6c6d74 	blcc	9b3266c <__exidx_end+0x1b1a7a4>
 8017098:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 801709c:	5f746567 	svcpl	0x00746567
 80170a0:	28747874 	ldmdacs	r4!, {r2, r4, r5, r6, fp, ip, sp, lr}^
 80170a4:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 80170a8:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 80170ac:	5d305b73 	fldmdbxpl	r0!, {d5-d61}	;@ Deprecated
 80170b0:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
 80170b4:	73610a0a 	cmnvc	r1, #40960	; 0xa000
 80170b8:	20636e79 	rsbcs	r6, r3, r9, ror lr
 80170bc:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 80170c0:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 80170c4:	6e657220 	cdpvs	2, 6, cr7, cr5, cr0, {1}
 80170c8:	56726564 	ldrbtpl	r6, [r2], -r4, ror #10
 80170cc:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 80170d0:	29286e6f 	stmdbcs	r8!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
 80170d4:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 80170d8:	74656c09 	strbtvc	r6, [r5], #-3081	; 0xfffff3f7
 80170dc:	72657620 	rsbvc	r7, r5, #32, 12	; 0x2000000
 80170e0:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 80170e4:	6177613d 	cmnvs	r7, sp, lsr r1
 80170e8:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 80170ec:	534a7465 	movtpl	r7, #42085	; 0xa465
 80170f0:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 80170f4:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 80170f8:	276e6f69 	strbcs	r6, [lr, -r9, ror #30]!
 80170fc:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 8017100:	636f6409 	cmnvs	pc, #150994944	; 0x9000000
 8017104:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
 8017108:	65672e74 	strbvs	r2, [r7, #-3700]!	; 0xfffff18c
 801710c:	656c4574 	strbvs	r4, [ip, #-1396]!	; 0xfffffa8c
 8017110:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
 8017114:	64497942 	strbvs	r7, [r9], #-2370	; 0xfffff6be
 8017118:	64692228 	strbtvs	r2, [r9], #-552	; 0xfffffdd8
 801711c:	73726556 	cmnvc	r2, #360710144	; 0x15800000
 8017120:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 8017124:	6e692e29 	cdpvs	14, 6, cr2, cr9, cr9, {1}
 8017128:	4872656e 	ldmdami	r2!, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^
 801712c:	3d4c4d54 	stclcc	13, cr4, [ip, #-336]	; 0xfffffeb0
 8017130:	696c3c22 	stmdbvs	ip!, {r1, r5, sl, fp, ip, sp}^
 8017134:	2b22563e 	blcs	88aca34 <__exidx_end+0x894b6c>
 8017138:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 801713c:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 8017140:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8017144:	2b6e6f69 	blcs	9bb2ef0 <__exidx_end+0x1b9b028>
 8017148:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 80170c8 <index_js+0x30c>
 801714c:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8017150:	2b223e69 	blcs	88a6afc <__exidx_end+0x88ec34>
 8017154:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8017158:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 801715c:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
 8017160:	61642e64 	cmnvs	r4, r4, ror #28
 8017164:	222b6574 	eorcs	r6, fp, #116, 10	; 0x1d000000
 8017168:	696c2f3c 	stmdbvs	ip!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 801716c:	696c3c3e 	stmdbvs	ip!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}^
 8017170:	762b223e 			; <UNDEFINED> instruction: 0x762b223e
 8017174:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8017178:	622e6e6f 	eorvs	r6, lr, #1776	; 0x6f0
 801717c:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
 8017180:	6d69742e 	cfstrdvs	mvd7, [r9, #-184]!	; 0xffffff48
 8017184:	3c222b65 			; <UNDEFINED> instruction: 0x3c222b65
 8017188:	3e696c2f 	cdpcc	12, 6, cr6, cr9, cr15, {1}
 801718c:	3e696c3c 	mcrcc	12, 3, r6, cr9, cr12, {1}
 8017190:	65762b22 	ldrbvs	r2, [r6, #-2850]!	; 0xfffff4de
 8017194:	6f697372 	svcvs	0x00697372
 8017198:	6f622e6e 	svcvs	0x00622e6e
 801719c:	2b647261 	blcs	9933b28 <__exidx_end+0x191bc60>
 80171a0:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8017120 <index_js+0x364>
 80171a4:	3b223e69 	blcc	88a6b50 <__exidx_end+0x88ec88>
 80171a8:	0a0a7d0a 	beq	82b65d8 <__exidx_end+0x29e710>
 80171ac:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 80171b0:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 80171b4:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 80171b8:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 80171bc:	745f7465 	ldrbvc	r7, [pc], #-1125	; 80171c4 <index_js+0x408>
 80171c0:	73287478 			; <UNDEFINED> instruction: 0x73287478
 80171c4:	20296c65 	eorcs	r6, r9, r5, ror #24
 80171c8:	6c090a7b 			; <UNDEFINED> instruction: 0x6c090a7b
 80171cc:	74207465 	strtvc	r7, [r0], #-1125	; 0xfffffb9b
 80171d0:	613d7478 	teqvs	sp, r8, ror r4
 80171d4:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 80171d8:	74656720 	strbtvc	r6, [r5], #-1824	; 0xfffff8e0
 80171dc:	4e4f534a 	cdpmi	3, 4, cr5, cr15, cr10, {2}
 80171e0:	6c657328 	stclvs	3, cr7, [r5], #-160	; 0xffffff60
 80171e4:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 80171e8:	2074656c 	rsbscs	r6, r4, ip, ror #10
 80171ec:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 80171f0:	3b22223d 	blcc	889faec <__exidx_end+0x887c24>
 80171f4:	624f090a 	subvs	r0, pc, #163840	; 0x28000
 80171f8:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
 80171fc:	79656b2e 	stmdbvc	r5!, {r1, r2, r3, r5, r8, r9, fp, sp, lr}^
 8017200:	78742873 	ldmdavc	r4!, {r0, r1, r4, r5, r6, fp, sp}^
 8017204:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
 8017208:	2e295d6c 	cdpcs	13, 2, cr5, cr9, cr12, {3}
 801720c:	45726f66 	ldrbmi	r6, [r2, #-3942]!	; 0xfffff09a
 8017210:	28686361 	stmdacs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
 8017214:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 8017218:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 801721c:	79656b28 	stmdbvc	r5!, {r3, r5, r8, r9, fp, sp, lr}^
 8017220:	0a7b2029 	beq	9edf2cc <__exidx_end+0x1ec7404>
 8017224:	61760909 	cmnvs	r6, r9, lsl #18
 8017228:	61762072 	cmnvs	r6, r2, ror r0
 801722c:	2065756c 	rsbcs	r7, r5, ip, ror #10
 8017230:	7874203d 	ldmdavc	r4!, {r0, r2, r3, r4, r5, sp}^
 8017234:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
 8017238:	6b5b5d6c 	blvs	96ee7f0 <__exidx_end+0x16d6928>
 801723c:	3b5d7965 	blcc	97757d8 <__exidx_end+0x175d910>
 8017240:	2009090a 	andcs	r0, r9, sl, lsl #18
 8017244:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8017248:	3c223d2b 	stccc	13, cr3, [r2], #-172	; 0xffffff54
 801724c:	3c3e7274 	lfmcc	f7, 4, [lr], #-464	; 0xfffffe30
 8017250:	223e6474 	eorscs	r6, lr, #116, 8	; 0x74000000
 8017254:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 8017258:	2f3c222b 	svccs	0x003c222b
 801725c:	3c3e6474 	cfldrscc	mvf6, [lr], #-464	; 0xfffffe30
 8017260:	223e6474 	eorscs	r6, lr, #116, 8	; 0x74000000
 8017264:	6c61762b 	stclvs	6, cr7, [r1], #-172	; 0xffffff54
 8017268:	222b6575 	eorcs	r6, fp, #490733568	; 0x1d400000
 801726c:	64742f3c 	ldrbtvs	r2, [r4], #-3900	; 0xfffff0c4
 8017270:	742f3c3e 	strtvc	r3, [pc], #-3134	; 8017278 <index_js+0x4bc>
 8017274:	3b223e72 	blcc	88a6c44 <__exidx_end+0x88ed7c>
 8017278:	297d090a 	ldmdbcs	sp!, {r1, r3, r8, fp}^
 801727c:	64090a3b 	strvs	r0, [r9], #-2619	; 0xfffff5c5
 8017280:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
 8017284:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 8017288:	45746567 	ldrbmi	r6, [r4, #-1383]!	; 0xfffffa99
 801728c:	656d656c 	strbvs	r6, [sp, #-1388]!	; 0xfffffa94
 8017290:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
 8017294:	22286449 	eorcs	r6, r8, #1224736768	; 0x49000000
 8017298:	78546469 	ldmdavc	r4, {r0, r3, r5, r6, sl, sp, lr}^
 801729c:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 80172a0:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
 80172a4:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
 80172a8:	74683d4c 	strbtvc	r3, [r8], #-3404	; 0xfffff2b4
 80172ac:	0a3b6c6d 	beq	8ef2468 <__exidx_end+0xeda5a0>
 80172b0:	720a0a7d 	andvc	r0, sl, #512000	; 0x7d000
 80172b4:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 80172b8:	73694c72 	cmnvc	r9, #29184	; 0x7200
 80172bc:	3b292874 	blcc	8a61494 <__exidx_end+0xa495cc>
 80172c0:	6e65720a 	cdpvs	2, 6, cr7, cr5, cr10, {0}
 80172c4:	44726564 	ldrbtmi	r6, [r2], #-1380	; 0xfffffa9c
 80172c8:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
 80172cc:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 80172d0:	0a3b2928 	beq	8ee1778 <__exidx_end+0xec98b0>
 80172d4:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 80172d8:	65567265 	ldrbvs	r7, [r6, #-613]	; 0xfffffd9b
 80172dc:	6f697372 	svcvs	0x00697372
 80172e0:	3b29286e 	blcc	8a614a0 <__exidx_end+0xa495d8>
 80172e4:	0000000a 	andeq	r0, r0, sl

080172e8 <s_aStorSize>:
 80172e8:	00000060 	andeq	r0, r0, r0, rrx
 80172ec:	00000090 	muleq	r0, r0, r0
 80172f0:	00000020 	andeq	r0, r0, r0, lsr #32
 80172f4:	00000040 	andeq	r0, r0, r0, asr #32
 80172f8:	00000060 	andeq	r0, r0, r0, rrx
 80172fc:	00000040 	andeq	r0, r0, r0, asr #32
 8017300:	00000020 	andeq	r0, r0, r0, lsr #32
 8017304:	00000020 	andeq	r0, r0, r0, lsr #32
 8017308:	000001e0 	andeq	r0, r0, r0, ror #3
 801730c:	00000040 	andeq	r0, r0, r0, asr #32
 8017310:	00000020 	andeq	r0, r0, r0, lsr #32
 8017314:	00000060 	andeq	r0, r0, r0, rrx
 8017318:	00000030 	andeq	r0, r0, r0, lsr r0
 801731c:	00000020 	andeq	r0, r0, r0, lsr #32
 8017320:	000003b0 			; <UNDEFINED> instruction: 0x000003b0
 8017324:	00000030 	andeq	r0, r0, r0, lsr r0
 8017328:	00000040 	andeq	r0, r0, r0, asr #32
 801732c:	00000020 	andeq	r0, r0, r0, lsr #32
 8017330:	00000060 	andeq	r0, r0, r0, rrx
 8017334:	00000020 	andeq	r0, r0, r0, lsr #32
 8017338:	00000400 	andeq	r0, r0, r0, lsl #8
 801733c:	00000020 	andeq	r0, r0, r0, lsr #32
 8017340:	00000020 	andeq	r0, r0, r0, lsr #32
 8017344:	00000040 	andeq	r0, r0, r0, asr #32
 8017348:	00000060 	andeq	r0, r0, r0, rrx
 801734c:	00000020 	andeq	r0, r0, r0, lsr #32
 8017350:	00000020 	andeq	r0, r0, r0, lsr #32
 8017354:	00000020 	andeq	r0, r0, r0, lsr #32

08017358 <vtable for StoreDisplayUdf>:
	...
 8017360:	0800f421 	stmdaeq	r0, {r0, r5, sl, ip, sp, lr, pc}
 8017364:	0800f469 	stmdaeq	r0, {r0, r3, r5, r6, sl, ip, sp, lr, pc}
 8017368:	0800f445 	stmdaeq	r0, {r0, r2, r6, sl, ip, sp, lr, pc}
 801736c:	0800f425 	stmdaeq	r0, {r0, r2, r5, sl, ip, sp, lr, pc}

08017370 <vtable for StoreE131>:
	...
 8017378:	0800f489 	stmdaeq	r0, {r0, r3, r7, sl, ip, sp, lr, pc}
 801737c:	0800f4d1 	stmdaeq	r0, {r0, r4, r6, r7, sl, ip, sp, lr, pc}
 8017380:	0800f4ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, sl, ip, sp, lr, pc}
 8017384:	0800f48d 	stmdaeq	r0, {r0, r2, r3, r7, sl, ip, sp, lr, pc}

08017388 <vtable for StoreNetwork>:
	...
 8017390:	0800f4f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, sl, ip, sp, lr, pc}
 8017394:	0800f5d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, sl, ip, sp, lr, pc}
 8017398:	0800f4f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, sl, ip, sp, lr, pc}
 801739c:	0800f5e9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r8, sl, ip, sp, lr, pc}
 80173a0:	0800f579 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, ip, sp, lr, pc}
 80173a4:	0800f54d 	stmdaeq	r0, {r0, r2, r3, r6, r8, sl, ip, sp, lr, pc}
 80173a8:	0800f51d 	stmdaeq	r0, {r0, r2, r3, r4, r8, sl, ip, sp, lr, pc}
 80173ac:	0800f5a5 	stmdaeq	r0, {r0, r2, r5, r7, r8, sl, ip, sp, lr, pc}
 80173b0:	08008885 	stmdaeq	r0, {r0, r2, r7, fp, pc}
 80173b4:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 80173b8:	00000000 	andeq	r0, r0, r0
 80173bc:	0800f4f3 	stmdaeq	r0, {r0, r1, r4, r5, r6, r7, sl, ip, sp, lr, pc}
 80173c0:	0800f5e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, sl, ip, sp, lr, pc}
 80173c4:	0800f59d 	stmdaeq	r0, {r0, r2, r3, r4, r7, r8, sl, ip, sp, lr, pc}
 80173c8:	0800f571 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, ip, sp, lr, pc}
 80173cc:	0800f545 	stmdaeq	r0, {r0, r2, r6, r8, sl, ip, sp, lr, pc}
 80173d0:	0800f5cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, r8, sl, ip, sp, lr, pc}
 80173d4:	080088ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, fp, pc}

080173d8 <vtable for StoreRDMDevice>:
	...
 80173e0:	0800f61d 	stmdaeq	r0, {r0, r2, r3, r4, r9, sl, ip, sp, lr, pc}
 80173e4:	0800f68d 	stmdaeq	r0, {r0, r2, r3, r7, r9, sl, ip, sp, lr, pc}
 80173e8:	0800f625 	stmdaeq	r0, {r0, r2, r5, r9, sl, ip, sp, lr, pc}
 80173ec:	0800f6a1 	stmdaeq	r0, {r0, r5, r7, r9, sl, ip, sp, lr, pc}
 80173f0:	0800f649 	stmdaeq	r0, {r0, r3, r6, r9, sl, ip, sp, lr, pc}
 80173f4:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 80173f8:	00000000 	andeq	r0, r0, r0
 80173fc:	0800f61f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r9, sl, ip, sp, lr, pc}
 8017400:	0800f699 	stmdaeq	r0, {r0, r3, r4, r7, r9, sl, ip, sp, lr, pc}
 8017404:	0800f685 	stmdaeq	r0, {r0, r2, r7, r9, sl, ip, sp, lr, pc}

08017408 <vtable for StoreRemoteConfig>:
	...
 8017410:	0800f6d9 	stmdaeq	r0, {r0, r3, r4, r6, r7, r9, sl, ip, sp, lr, pc}
 8017414:	0800f721 	stmdaeq	r0, {r0, r5, r8, r9, sl, ip, sp, lr, pc}
 8017418:	0800f6fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r9, sl, ip, sp, lr, pc}
 801741c:	0800f6dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r9, sl, ip, sp, lr, pc}

08017420 <vtable for StoreWS28xxDmx>:
	...
 8017428:	0800f741 	stmdaeq	r0, {r0, r6, r8, r9, sl, ip, sp, lr, pc}
 801742c:	0800f8b1 	stmdaeq	r0, {r0, r4, r5, r7, fp, ip, sp, lr, pc}
 8017430:	0800f749 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, ip, sp, lr, pc}
 8017434:	0800f8c5 	stmdaeq	r0, {r0, r2, r6, r7, fp, ip, sp, lr, pc}
 8017438:	0800f87d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, fp, ip, sp, lr, pc}
 801743c:	0800f849 	stmdaeq	r0, {r0, r3, r6, fp, ip, sp, lr, pc}
 8017440:	0800f811 	stmdaeq	r0, {r0, r4, fp, ip, sp, lr, pc}
 8017444:	0800f7d9 	stmdaeq	r0, {r0, r3, r4, r6, r7, r8, r9, sl, ip, sp, lr, pc}
 8017448:	0800f7a1 	stmdaeq	r0, {r0, r5, r7, r8, r9, sl, ip, sp, lr, pc}
 801744c:	0800f76d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r8, r9, sl, ip, sp, lr, pc}
 8017450:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 8017454:	00000000 	andeq	r0, r0, r0
 8017458:	0800f743 	stmdaeq	r0, {r0, r1, r6, r8, r9, sl, ip, sp, lr, pc}
 801745c:	0800f8bd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, fp, ip, sp, lr, pc}
 8017460:	0800f8a9 	stmdaeq	r0, {r0, r3, r5, r7, fp, ip, sp, lr, pc}
 8017464:	0800f875 	stmdaeq	r0, {r0, r2, r4, r5, r6, fp, ip, sp, lr, pc}
 8017468:	0800f841 	stmdaeq	r0, {r0, r6, fp, ip, sp, lr, pc}
 801746c:	0800f809 	stmdaeq	r0, {r0, r3, fp, ip, sp, lr, pc}
 8017470:	0800f7d1 	stmdaeq	r0, {r0, r4, r6, r7, r8, r9, sl, ip, sp, lr, pc}
 8017474:	0800f799 	stmdaeq	r0, {r0, r3, r4, r7, r8, r9, sl, ip, sp, lr, pc}
 8017478:	3a434d46 	bcc	90ea998 <__exidx_end+0x10d2ad0>
 801747c:	74654420 	strbtvc	r4, [r5], #-1056	; 0xfffffbe0
 8017480:	65746365 	ldrbvs	r6, [r4, #-869]!	; 0xfffffc9b
 8017484:	73252064 			; <UNDEFINED> instruction: 0x73252064
 8017488:	74697720 	strbtvc	r7, [r9], #-1824	; 0xfffff8e0
 801748c:	6f742068 	svcvs	0x00742068
 8017490:	206c6174 	rsbcs	r6, ip, r4, ror r1
 8017494:	62206425 	eorvs	r6, r0, #620756992	; 0x25000000
 8017498:	73657479 	cmnvc	r5, #2030043136	; 0x79000000
 801749c:	64255b20 	strtvs	r5, [r5], #-2848	; 0xfffff4e0
 80174a0:	5d426b20 	vstrpl	d22, [r2, #-128]	; 0xffffff80
 80174a4:	6374000a 	cmnvs	r4, #10
 80174a8:	65625f70 	strbvs	r5, [r2, #-3952]!	; 0xfffff090
 80174ac:	3a6e6967 	bcc	9bb1a50 <__exidx_end+0x1b99b88>
 80174b0:	6f6f7420 	svcvs	0x006f7420
 80174b4:	6e616d20 	cdpvs	13, 6, cr6, cr1, cr0, {1}
 80174b8:	6f632079 	svcvs	0x00632079
 80174bc:	63656e6e 	cmnvs	r5, #1760	; 0x6e0
 80174c0:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 80174c4:	69620073 	stmdbvs	r2!, {r0, r1, r4, r5, r6}^
 80174c8:	7500646e 	strvc	r6, [r0, #-1134]	; 0xfffffb92
 80174cc:	6e69626e 	cdpvs	2, 6, cr6, cr9, cr14, {3}
 80174d0:	41000a64 	tstmi	r0, r4, ror #20
 80174d4:	6c205052 	stcvs	0, cr5, [r0], #-328	; 0xfffffeb8
 80174d8:	756b6f6f 	strbvc	r6, [fp, #-3951]!	; 0xfffff091
 80174dc:	61662070 	smcvs	25088	; 0x6200
 80174e0:	64656c69 	strbtvs	r6, [r5], #-3177	; 0xfffff397
 80174e4:	203e2d20 	eorscs	r2, lr, r0, lsr #26
 80174e8:	61666564 	cmnvs	r6, r4, ror #10
 80174ec:	20746c75 	rsbscs	r6, r4, r5, ror ip
 80174f0:	65746167 	ldrbvs	r6, [r4, #-359]!	; 0xfffffe99
 80174f4:	0a796177 	beq	9e6fad8 <__exidx_end+0x1e57c10>
 80174f8:	50524100 	subspl	r4, r2, r0, lsl #2
 80174fc:	6f6f6c20 	svcvs	0x006f6c20
 8017500:	2070756b 	rsbscs	r7, r0, fp, ror #10
 8017504:	6c696166 	stfvse	f6, [r9], #-408	; 0xfffffe68
 8017508:	000a6465 	andeq	r6, sl, r5, ror #8

0801750c <NetworkConst::MSG_MDNS_CONFIG>:
 801750c:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 8017510:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 8017514:	20676e69 	rsbcs	r6, r7, r9, ror #28
 8017518:	534e444d 	movtpl	r4, #58445	; 0xe44d
	...

0801751d <NetworkConst::MSG_NETWORK_INIT>:
 801751d:	7774654e 	ldrbvc	r6, [r4, -lr, asr #10]!
 8017521:	206b726f 	rsbcs	r7, fp, pc, ror #4
 8017525:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
 8017529:	696c6169 	stmdbvs	ip!, {r0, r3, r5, r6, r8, sp, lr}^
 801752d:	6974617a 	ldmdbvs	r4!, {r1, r3, r4, r5, r6, r8, sp, lr}^
 8017531:	32006e6f 	andcc	r6, r0, #1776	; 0x6f0
 8017535:	302e3432 	eorcc	r3, lr, r2, lsr r4
 8017539:	322e302e 	eorcc	r3, lr, #46	; 0x2e
 801753d:	5f003135 	svcpl	0x00003135
 8017541:	2e706374 	mrccs	3, 3, r6, cr0, cr4, {3}
 8017545:	61636f6c 	cmnvs	r3, ip, ror #30
 8017549:	735f006c 	cmpvc	pc, #108	; 0x6c
 801754d:	69767265 	ldmdbvs	r6!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8017551:	2e736563 	cdpcs	5, 7, cr6, cr3, cr3, {3}
 8017555:	736e645f 	cmnvc	lr, #1593835520	; 0x5f000000
 8017559:	2e64732d 	cdpcs	3, 6, cr7, cr4, cr13, {1}
 801755d:	7064755f 	rsbvc	r7, r4, pc, asr r5
 8017561:	636f6c2e 	cmnvs	pc, #11776	; 0x2e00
 8017565:	6d006c61 	stcvs	12, cr6, [r0, #-388]	; 0xfffffe7c
 8017569:	0a534e44 	beq	94eae81 <__exidx_end+0x14d2fb9>
 801756d:	6f4e2000 	svcvs	0x004e2000
 8017571:	75722074 	ldrbvc	r2, [r2, #-116]!	; 0xffffff8c
 8017575:	6e696e6e 	cdpvs	14, 6, cr6, cr9, cr14, {3}
 8017579:	20000a67 	andcs	r0, r0, r7, ror #20
 801757d:	656d614e 	strbvs	r6, [sp, #-334]!	; 0xfffffeb2
 8017581:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8017585:	20000a73 	andcs	r0, r0, r3, ror sl
 8017589:	25207325 	strcs	r7, [r0, #-805]!	; 0xfffffcdb
 801758d:	73252064 			; <UNDEFINED> instruction: 0x73252064
 8017591:	7465000a 	strbtvc	r0, [r5], #-10
 8017595:	67003068 	strvs	r3, [r0, -r8, rrx]
 8017599:	64616769 	strbtvs	r6, [r1], #-1897	; 0xfffff897
 801759d:	63697665 	cmnvs	r9, #105906176	; 0x6500000
 80175a1:	4e005f65 	cdpmi	15, 0, cr5, cr0, cr5, {3}
 80175a5:	6f777465 	svcvs	0x00777465
 80175a9:	000a6b72 	andeq	r6, sl, r2, ror fp
 80175ad:	736f4820 	cmnvc	pc, #32, 16	; 0x200000
 80175b1:	6d616e74 	stclvs	14, cr6, [r1, #-464]!	; 0xfffffe30
 80175b5:	3a202065 	bcc	881f751 <__exidx_end+0x807889>
 80175b9:	0a732520 	beq	9ce0a41 <__exidx_end+0x1cc8b79>
 80175bd:	66492000 	strbvs	r2, [r9], -r0
 80175c1:	656d614e 	strbvs	r6, [sp, #-334]!	; 0xfffffeb2
 80175c5:	20202020 	eorcs	r2, r0, r0, lsr #32
 80175c9:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 80175cd:	7325203a 			; <UNDEFINED> instruction: 0x7325203a
 80175d1:	4920000a 	stmdbmi	r0!, {r1, r3}
 80175d5:	2074656e 	rsbscs	r6, r4, lr, ror #10
 80175d9:	20202020 	eorcs	r2, r0, r0, lsr #32
 80175dd:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 80175e1:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80175e5:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 80175e9:	252f6425 	strcs	r6, [pc, #-1061]!	; 80171cc <index_js+0x410>
 80175ed:	20000a64 	andcs	r0, r0, r4, ror #20
 80175f1:	6d74654e 	cfldr64vs	mvdx6, [r4, #-312]!	; 0xfffffec8
 80175f5:	206b7361 	rsbcs	r7, fp, r1, ror #6
 80175f9:	203a2020 	eorscs	r2, sl, r0, lsr #32
 80175fd:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8017601:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8017605:	0a64252e 	beq	9920ac5 <__exidx_end+0x1908bfd>
 8017609:	61472000 	mrsvs	r2, (UNDEF: 71)
 801760d:	61776574 	cmnvs	r7, r4, ror r5
 8017611:	20202079 	eorcs	r2, r0, r9, ror r0
 8017615:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8017619:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801761d:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8017621:	20000a64 	andcs	r0, r0, r4, ror #20
 8017625:	616f7242 	cmnvs	pc, r2, asr #4
 8017629:	73616364 	cmnvc	r1, #100, 6	; 0x90000001
 801762d:	203a2074 	eorscs	r2, sl, r4, ror r0
 8017631:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8017635:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8017639:	0a64252e 	beq	9920af9 <__exidx_end+0x1908c31>
 801763d:	614d2000 	mrsvs	r2, (UNDEF: 77)
 8017641:	20202063 	eorcs	r2, r0, r3, rrx
 8017645:	20202020 	eorcs	r2, r0, r0, lsr #32
 8017649:	2e25203a 	mcrcs	0, 1, r2, cr5, cr10, {1}
 801764d:	253a7832 	ldrcs	r7, [sl, #-2098]!	; 0xfffff7ce
 8017651:	3a78322e 	bcc	9e23f11 <__exidx_end+0x1e0c049>
 8017655:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8017659:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 801765d:	2e253a78 			; <UNDEFINED> instruction: 0x2e253a78
 8017661:	253a7832 	ldrcs	r7, [sl, #-2098]!	; 0xfffff7ce
 8017665:	0a78322e 	beq	9e23f25 <__exidx_end+0x1e0c05d>
 8017669:	6f4d2000 	svcvs	0x004d2000
 801766d:	20206564 	eorcs	r6, r0, r4, ror #10
 8017671:	20202020 	eorcs	r2, r0, r0, lsr #32
 8017675:	6325203a 			; <UNDEFINED> instruction: 0x6325203a
 8017679:	7453000a 	ldrbvc	r0, [r3], #-10
 801767d:	63697461 	cmnvs	r9, #1627389952	; 0x61000000
 8017681:	00504920 	subseq	r4, r0, r0, lsr #18
 8017685:	2050544e 	subscs	r5, r0, lr, asr #8
 8017689:	76726553 			; <UNDEFINED> instruction: 0x76726553
 801768d:	 	stmdbvs	r0, {r0, r2, r5, r6, r9, ip, sp, lr}

08017690 <NetworkParamsConst::IP_ADDRESS>:
 8017690:	615f7069 	cmpvs	pc, r9, rrx
 8017694:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0xfffffb9c
 8017698:	 	mcrvs	3, 0, r7, cr0, cr3, {3}

0801769b <NetworkParamsConst::NTP_SERVER>:
 801769b:	5f70746e 	svcpl	0x0070746e
 801769f:	76726573 			; <UNDEFINED> instruction: 0x76726573
 80176a3:	 	cdpvs	2, 0, cr7, cr0, cr5, {3}

080176a6 <NetworkParamsConst::NTP_UTC_OFFSET>:
 80176a6:	5f70746e 	svcpl	0x0070746e
 80176aa:	5f637475 	svcpl	0x00637475
 80176ae:	7366666f 	cmnvc	r6, #116391936	; 0x6f00000
 80176b2:	 	strvs	r7, [r0], #-1125	; 0xfffffb9b

080176b5 <NetworkParamsConst::DEFAULT_GATEWAY>:
 80176b5:	61666564 	cmnvs	r6, r4, ror #10
 80176b9:	5f746c75 	svcpl	0x00746c75
 80176bd:	65746167 	ldrbvs	r6, [r4, #-359]!	; 0xfffffe99
 80176c1:	00796177 	rsbseq	r6, r9, r7, ror r1

080176c5 <NetworkParamsConst::DHCP_RETRY_TIME>:
 80176c5:	70636864 	rsbvc	r6, r3, r4, ror #16
 80176c9:	7465725f 	strbtvc	r7, [r5], #-607	; 0xfffffda1
 80176cd:	745f7972 	ldrbvc	r7, [pc], #-2418	; 80176d5 <NetworkParamsConst::HOSTNAME>
 80176d1:	00656d69 	rsbeq	r6, r5, r9, ror #26

080176d5 <NetworkParamsConst::HOSTNAME>:
 80176d5:	74736f68 	ldrbtvc	r6, [r3], #-3944	; 0xfffff098
 80176d9:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

080176de <NetworkParamsConst::NET_MASK>:
 80176de:	5f74656e 	svcpl	0x0074656e
 80176e2:	6b73616d 	blvs	9cefc9e <__exidx_end+0x1cd7dd6>
	...

080176e7 <NetworkParamsConst::USE_DHCP>:
 80176e7:	5f657375 	svcpl	0x00657375
 80176eb:	70636864 	rsbvc	r6, r3, r4, ror #16
	...

080176f0 <NetworkParamsConst::FILE_NAME>:
 80176f0:	7774656e 	ldrbvc	r6, [r4, -lr, ror #10]!
 80176f4:	2e6b726f 	cdpcs	2, 6, cr7, cr11, cr15, {3}
 80176f8:	00747874 	rsbseq	r7, r4, r4, ror r8
 80176fc:	65687445 	strbvs	r7, [r8, #-1093]!	; 0xfffffbbb
 8017700:	74656e72 	strbtvc	r6, [r5], #-3698	; 0xfffff18e
 8017704:	61747320 	cmnvs	r4, r0, lsr #6
 8017708:	25007472 	strcs	r7, [r0, #-1138]	; 0xfffffb8e
 801770c:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8017710:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8017714:	252f6425 	strcs	r6, [pc, #-1061]!	; 80172f7 <s_aStorSize+0xf>
 8017718:	63252064 			; <UNDEFINED> instruction: 0x63252064
 801771c:	203a4e00 	eorscs	r4, sl, r0, lsl #28
 8017720:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8017724:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8017728:	0064252e 	rsbeq	r2, r4, lr, lsr #10
 801772c:	25203a47 	strcs	r3, [r0, #-2631]!	; 0xfffff5b9
 8017730:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8017734:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8017738:	46006425 	strmi	r6, [r0], -r5, lsr #8
 801773c:	776d7269 	strbvc	r7, [sp, -r9, ror #4]!
 8017740:	20657261 	rsbcs	r7, r5, r1, ror #4
 8017744:	2a2e2556 	bcs	8ba0ca4 <__exidx_end+0xb88ddc>
 8017748:	48440073 	stmdami	r4, {r0, r1, r4, r5, r6}^
 801774c:	72205043 	eorvc	r5, r0, #67	; 0x43
 8017750:	77656e65 	strbvc	r6, [r5, -r5, ror #28]!
 8017754:	00676e69 	rsbeq	r6, r7, r9, ror #28
 8017758:	50434844 	subpl	r4, r3, r4, asr #16
 801775c:	74657220 	strbtvc	r7, [r5], #-544	; 0xfffffde0
 8017760:	6e697972 			; <UNDEFINED> instruction: 0x6e697972
 8017764:	654e0067 	strbvs	r0, [lr, #-103]	; 0xffffff99
 8017768:	726f7774 	rsbvc	r7, pc, #116, 14	; 0x1d00000
 801776c:	6873206b 	ldmdavs	r3!, {r0, r1, r3, r5, r6, sp}^
 8017770:	6f647475 	svcvs	0x00647475
 8017774:	00006e77 	andeq	r6, r0, r7, ror lr

08017778 <pArray>:
 8017778:	0801780c 	stmdaeq	r1, {r2, r3, fp, ip, sp, lr}
 801777c:	080177c8 	stmdaeq	r1, {r3, r6, r7, r8, r9, sl, ip, sp, lr}
 8017780:	08017690 	stmdaeq	r1, {r4, r7, r9, sl, ip, sp, lr}
 8017784:	08017812 	stmdaeq	r1, {r1, r4, fp, ip, sp, lr}
 8017788:	08017a36 	stmdaeq	r1, {r1, r2, r4, r5, r9, fp, ip, sp, lr}
 801778c:	080177d3 	stmdaeq	r1, {r0, r1, r4, r6, r7, r8, r9, sl, ip, sp, lr}
 8017790:	0801686b 	stmdaeq	r1, {r0, r1, r3, r5, r6, fp, sp, lr}
 8017794:	080176d5 	stmdaeq	r1, {r0, r2, r4, r6, r7, r9, sl, ip, sp, lr}
 8017798:	0801790c 	stmdaeq	r1, {r2, r3, r8, fp, ip, sp, lr}
 801779c:	0801791c 	stmdaeq	r1, {r2, r3, r4, r8, fp, ip, sp, lr}
 80177a0:	0801792c 	stmdaeq	r1, {r2, r3, r5, r8, fp, ip, sp, lr}
 80177a4:	0801793c 	stmdaeq	r1, {r2, r3, r4, r5, r8, fp, ip, sp, lr}
 80177a8:	080176de 	stmdaeq	r1, {r1, r2, r3, r4, r6, r7, r9, sl, ip, sp, lr}
 80177ac:	08017a24 	stmdaeq	r1, {r2, r5, r9, fp, ip, sp, lr}
 80177b0:	0801686b 	stmdaeq	r1, {r0, r1, r3, r5, r6, fp, sp, lr}
 80177b4:	0801686b 	stmdaeq	r1, {r0, r1, r3, r5, r6, fp, sp, lr}
 80177b8:	0801686b 	stmdaeq	r1, {r0, r1, r3, r5, r6, fp, sp, lr}
 80177bc:	0801686b 	stmdaeq	r1, {r0, r1, r3, r5, r6, fp, sp, lr}
 80177c0:	080176b5 	stmdaeq	r1, {r0, r2, r4, r5, r7, r9, sl, ip, sp, lr}
 80177c4:	080177e0 	stmdaeq	r1, {r5, r6, r7, r8, r9, sl, ip, sp, lr}

080177c8 <DisplayUdfParamsConst::BOARD_NAME>:
 80177c8:	72616f62 	rsbvc	r6, r1, #392	; 0x188
 80177cc:	616e5f64 	cmnvs	lr, r4, ror #30
 80177d0:	 	tstvs	r0, sp, ror #10

080177d3 <DisplayUdfParamsConst::ACTIVE_PORTS>:
 80177d3:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 80177d7:	705f6576 	subsvc	r6, pc, r6, ror r5	; <UNPREDICTABLE>
 80177db:	7374726f 	cmnvc	r4, #-268435450	; 0xf0000006
	...

080177e0 <DisplayUdfParamsConst::DMX_DIRECTION>:
 80177e0:	5f786d64 	svcpl	0x00786d64
 80177e4:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 80177e8:	6f697463 	svcvs	0x00697463
 80177ec:	 	ldclvs	0, cr0, [r3], #-440	; 0xfffffe48

080177ee <DisplayUdfParamsConst::SLEEP_TIMEOUT>:
 80177ee:	65656c73 	strbvs	r6, [r5, #-3187]!	; 0xfffff38d
 80177f2:	69745f70 	ldmdbvs	r4!, {r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 80177f6:	756f656d 	strbvc	r6, [pc, #-1389]!	; 8017291 <index_js+0x4d5>
 80177fa:	 	stclvs	0, cr0, [r6], #-464	; 0xfffffe30

080177fc <DisplayUdfParamsConst::FLIP_VERTICALLY>:
 80177fc:	70696c66 	rsbvc	r6, r9, r6, ror #24
 8017800:	7265765f 	rsbvc	r7, r5, #99614720	; 0x5f00000
 8017804:	61636974 	smcvs	13972	; 0x3694
 8017808:	00796c6c 	rsbseq	r6, r9, ip, ror #24

0801780c <DisplayUdfParamsConst::TITLE>:
 801780c:	6c746974 			; <UNDEFINED> instruction: 0x6c746974
 8017810:	 	ldrbvs	r0, [r6, #-101]!	; 0xffffff9b

08017812 <DisplayUdfParamsConst::VERSION>:
 8017812:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8017816:	006e6f69 	rsbeq	r6, lr, r9, ror #30

0801781a <DisplayUdfParamsConst::FILE_NAME>:
 801781a:	70736964 	rsbsvc	r6, r3, r4, ror #18
 801781e:	2e79616c 	rpwcsez	f6, f1, #4.0
 8017822:	00747874 	rsbseq	r7, r4, r4, ror r8

08017826 <DisplayUdfParamsConst::INTENSITY>:
 8017826:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
 801782a:	7469736e 	strbtvc	r7, [r9], #-878	; 0xfffffc92
 801782e:	50410079 	subpl	r0, r1, r9, ror r0
 8017832:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8017836:	726f5000 	rsbvc	r5, pc, #0
 801783a:	63252074 			; <UNDEFINED> instruction: 0x63252074
 801783e:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8017842:	00732520 	rsbseq	r2, r3, r0, lsr #10
 8017846:	44206f4e 	strtmi	r6, [r0], #-3918	; 0xfffff0b2
 801784a:	4400584d 	strmi	r5, [r0], #-2125	; 0xfffff7b3
 801784e:	2520584d 	strcs	r5, [r0, #-2125]!	; 0xfffff7b3
 8017852:	64252073 	strtvs	r2, [r5], #-115	; 0xffffff8d
	...

08017857 <DevicesParamsConst::ACTIVE_OUT>:
 8017857:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 801785b:	6f5f6576 	svcvs	0x005f6576
 801785f:	 	movwvs	r7, #1141	; 0x475

08017862 <DevicesParamsConst::SPI_SPEED_HZ>:
 8017862:	636f6c63 	cmnvs	pc, #25344	; 0x6300
 8017866:	70735f6b 	rsbsvc	r5, r3, fp, ror #30
 801786a:	5f646565 	svcpl	0x00646565
 801786e:	 			; <UNDEFINED> instruction: 0x6c007a68

08017871 <DevicesParamsConst::GROUPING_COUNT>:
 8017871:	5f64656c 	svcpl	0x0064656c
 8017875:	756f7267 	strbvc	r7, [pc, #-615]!	; 8017616 <NetworkConst::MSG_NETWORK_INIT+0xf9>
 8017879:	6f635f70 	svcvs	0x00635f70
 801787d:	00746e75 	rsbseq	r6, r4, r5, ror lr

08017881 <DevicesParamsConst::GLOBAL_BRIGHTNESS>:
 8017881:	626f6c67 	rsbvs	r6, pc, #26368	; 0x6700
 8017885:	625f6c61 	subsvs	r6, pc, #24832	; 0x6100
 8017889:	68676972 	stmdavs	r7!, {r1, r4, r5, r6, r8, fp, sp, lr}^
 801788d:	73656e74 	cmnvc	r5, #116, 28	; 0x740
 8017891:	 	strbvs	r0, [ip, #-115]!	; 0xffffff8d

08017893 <DevicesParamsConst::MAP>:
 8017893:	5f64656c 	svcpl	0x0064656c
 8017897:	5f626772 	svcpl	0x00626772
 801789b:	7070616d 	rsbsvc	r6, r0, sp, ror #2
 801789f:	00676e69 	rsbeq	r6, r7, r9, ror #28

080178a3 <DevicesParamsConst::TYPE>:
 80178a3:	5f64656c 	svcpl	0x0064656c
 80178a7:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
	...

080178ac <DevicesParamsConst::COUNT>:
 80178ac:	5f64656c 	svcpl	0x0064656c
 80178b0:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 80178b4:	 	strbvs	r0, [ip, #-116]!	; 0xffffff8c

080178b6 <DevicesParamsConst::LED_T0H>:
 80178b6:	5f64656c 	svcpl	0x0064656c
 80178ba:	00683074 	rsbeq	r3, r8, r4, ror r0

080178be <DevicesParamsConst::LED_T1H>:
 80178be:	5f64656c 	svcpl	0x0064656c
 80178c2:	00683174 	rsbeq	r3, r8, r4, ror r1

080178c6 <DevicesParamsConst::FILE_NAME>:
 80178c6:	69766564 	ldmdbvs	r6!, {r2, r5, r6, r8, sl, sp, lr}^
 80178ca:	2e736563 	cdpcs	5, 7, cr6, cr3, cr3, {3}
 80178ce:	00747874 	rsbseq	r7, r4, r4, ror r8
 80178d2:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 80178d6:	6425223a 	strtvs	r2, [r5], #-570	; 0xfffffdc6
 80178da:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 80178de:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80178e2:	002c2264 	eoreq	r2, ip, r4, ror #4
 80178e6:	3d732523 	cfldr64cc	mvdx2, [r3, #-140]!	; 0xffffff74
 80178ea:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80178ee:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80178f2:	0a64252e 	beq	9920db2 <__exidx_end+0x1908eea>
 80178f6:	25202300 	strcs	r2, [r0, #-768]!	; 0xfffffd00
 80178fa:	0a232073 	beq	88dface <__exidx_end+0x8c7c06>
	...

080178ff <LightSetParamsConst::TEST_PATTERN>:
 80178ff:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
 8017903:	7461705f 	strbtvc	r7, [r1], #-95	; 0xffffffa1
 8017907:	6e726574 	mrcvs	5, 3, r6, cr2, cr4, {3}
	...

0801790c <LightSetParamsConst::UNIVERSE_PORT>:
 801790c:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 8017910:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8017914:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8017918:	00615f74 	rsbeq	r5, r1, r4, ror pc
 801791c:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 8017920:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8017924:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8017928:	00625f74 	rsbeq	r5, r2, r4, ror pc
 801792c:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 8017930:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8017934:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8017938:	00635f74 	rsbeq	r5, r3, r4, ror pc
 801793c:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 8017940:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8017944:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8017948:	00645f74 	rsbeq	r5, r4, r4, ror pc

0801794c <LightSetParamsConst::START_UNI_PORT>:
 801794c:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8017950:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 8017954:	6f705f69 	svcvs	0x00705f69
 8017958:	315f7472 	cmpcc	pc, r2, ror r4	; <UNPREDICTABLE>
 801795c:	74730000 	ldrbtvc	r0, [r3], #-0
 8017960:	5f747261 	svcpl	0x00747261
 8017964:	5f696e75 	svcpl	0x00696e75
 8017968:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 801796c:	0000325f 	andeq	r3, r0, pc, asr r2
 8017970:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8017974:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 8017978:	6f705f69 	svcvs	0x00705f69
 801797c:	335f7472 	cmpcc	pc, #1912602624	; 0x72000000
 8017980:	74730000 	ldrbtvc	r0, [r3], #-0
 8017984:	5f747261 	svcpl	0x00747261
 8017988:	5f696e75 	svcpl	0x00696e75
 801798c:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8017990:	0000345f 	andeq	r3, r0, pc, asr r4
 8017994:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8017998:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 801799c:	6f705f69 	svcvs	0x00705f69
 80179a0:	355f7472 	ldrbcc	r7, [pc, #-1138]	; 8017536 <NetworkConst::MSG_NETWORK_INIT+0x19>
 80179a4:	74730000 	ldrbtvc	r0, [r3], #-0
 80179a8:	5f747261 	svcpl	0x00747261
 80179ac:	5f696e75 	svcpl	0x00696e75
 80179b0:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 80179b4:	0000365f 	andeq	r3, r0, pc, asr r6
 80179b8:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 80179bc:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 80179c0:	6f705f69 	svcvs	0x00705f69
 80179c4:	375f7472 			; <UNDEFINED> instruction: 0x375f7472
 80179c8:	74730000 	ldrbtvc	r0, [r3], #-0
 80179cc:	5f747261 	svcpl	0x00747261
 80179d0:	5f696e75 	svcpl	0x00696e75
 80179d4:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 80179d8:	0000385f 	andeq	r3, r0, pc, asr r8

080179dc <LightSetParamsConst::MERGE_MODE_PORT>:
 80179dc:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 80179e0:	6f6d5f65 	svcvs	0x006d5f65
 80179e4:	705f6564 	subsvc	r6, pc, r4, ror #10
 80179e8:	5f74726f 	svcpl	0x0074726f
 80179ec:	656d0061 	strbvs	r0, [sp, #-97]!	; 0xffffff9f
 80179f0:	5f656772 	svcpl	0x00656772
 80179f4:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
 80179f8:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 80179fc:	00625f74 	rsbeq	r5, r2, r4, ror pc
 8017a00:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 8017a04:	6f6d5f65 	svcvs	0x006d5f65
 8017a08:	705f6564 	subsvc	r6, pc, r4, ror #10
 8017a0c:	5f74726f 	svcpl	0x0074726f
 8017a10:	656d0063 	strbvs	r0, [sp, #-99]!	; 0xffffff9d
 8017a14:	5f656772 	svcpl	0x00656772
 8017a18:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
 8017a1c:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8017a20:	00645f74 	rsbeq	r5, r4, r4, ror pc

08017a24 <LightSetParamsConst::DMX_START_ADDRESS>:
 8017a24:	5f786d64 	svcpl	0x00786d64
 8017a28:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8017a2c:	64615f74 	strbtvs	r5, [r1], #-3956	; 0xfffff08c
 8017a30:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
 8017a34:	 	mrcvs	0, 3, r0, cr5, cr3, {3}

08017a36 <LightSetParamsConst::UNIVERSE>:
 8017a36:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 8017a3a:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
	...

08017a3f <LightSetParamsConst::DIRECTION>:
 8017a3f:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8017a43:	6f697463 	svcvs	0x00697463
 8017a47:	6f705f6e 	svcvs	0x00705f6e
 8017a4b:	615f7472 	cmpvs	pc, r2, ror r4	; <UNPREDICTABLE>
 8017a4f:	69640000 	stmdbvs	r4!, {}^	; <UNPREDICTABLE>
 8017a53:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 8017a57:	5f6e6f69 	svcpl	0x006e6f69
 8017a5b:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8017a5f:	0000625f 	andeq	r6, r0, pc, asr r2
 8017a63:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8017a67:	6f697463 	svcvs	0x00697463
 8017a6b:	6f705f6e 	svcvs	0x00705f6e
 8017a6f:	635f7472 	cmpvs	pc, #1912602624	; 0x72000000
 8017a73:	69640000 	stmdbvs	r4!, {}^	; <UNPREDICTABLE>
 8017a77:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 8017a7b:	5f6e6f69 	svcpl	0x006e6f69
 8017a7f:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8017a83:	0000645f 	andeq	r6, r0, pc, asr r4
 8017a87:	64206f4e 	strtvs	r6, [r0], #-3918	; 0xfffff0b2
 8017a8b:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
 8017a8f:	66207961 	strtvs	r7, [r0], -r1, ror #18
 8017a93:	646e756f 	strbtvs	r7, [lr], #-1391	; 0xfffffa91
 8017a97:	31485300 	mrscc	r5, (UNDEF: 120)
 8017a9b:	00363031 	eorseq	r3, r6, r1, lsr r0
 8017a9f:	31445353 	cmpcc	r4, r3, asr r3
 8017aa3:	00363033 	eorseq	r3, r6, r3, lsr r0
 8017aa7:	28207325 	stmdacs	r0!, {r0, r2, r5, r8, r9, ip, sp, lr}
 8017aab:	252c6425 	strcs	r6, [ip, #-1061]!	; 0xfffffbdb
 8017aaf:	000a2964 	andeq	r2, sl, r4, ror #18
 8017ab3:	aaeeaa40 	bge	7bc23bb <__stack_size+0x7bbfbbb>
 8017ab7:	000000ee 	andeq	r0, r0, lr, ror #1
	...

08017abc <_OledFont8x6>:
 8017abc:	00000040 	andeq	r0, r0, r0, asr #32
 8017ac0:	40000000 	andmi	r0, r0, r0
 8017ac4:	005f0000 	subseq	r0, pc, r0
 8017ac8:	00400000 	subeq	r0, r0, r0
 8017acc:	00070007 	andeq	r0, r7, r7
 8017ad0:	7f144000 	svcvc	0x00144000
 8017ad4:	00147f14 	andseq	r7, r4, r4, lsl pc
 8017ad8:	7f2a2440 	svcvc	0x002a2440
 8017adc:	4000122a 	andmi	r1, r0, sl, lsr #4
 8017ae0:	64081323 	strvs	r1, [r8], #-803	; 0xfffffcdd
 8017ae4:	36400062 	strbcc	r0, [r0], -r2, rrx
 8017ae8:	50205649 	eorpl	r5, r0, r9, asr #12
 8017aec:	08004000 	stmdaeq	r0, {lr}
 8017af0:	00000307 	andeq	r0, r0, r7, lsl #6
 8017af4:	221c0040 	andscs	r0, ip, #64	; 0x40
 8017af8:	40000041 	andmi	r0, r0, r1, asr #32
 8017afc:	1c224100 	stfnes	f4, [r2], #-0
 8017b00:	2a400000 	bcs	9017b08 <__exidx_end+0xfffc40>
 8017b04:	2a1c7f1c 	bcs	873777c <__exidx_end+0x71f8b4>
 8017b08:	08084000 	stmdaeq	r8, {lr}
 8017b0c:	0008083e 	andeq	r0, r8, lr, lsr r8
 8017b10:	70800040 	addvc	r0, r0, r0, asr #32
 8017b14:	40000030 	andmi	r0, r0, r0, lsr r0
 8017b18:	08080808 	stmdaeq	r8, {r3, fp}
 8017b1c:	00400008 	subeq	r0, r0, r8
 8017b20:	00606000 	rsbeq	r6, r0, r0
 8017b24:	10204000 	eorne	r4, r0, r0
 8017b28:	00020408 	andeq	r0, r2, r8, lsl #8
 8017b2c:	49513e40 	ldmdbmi	r1, {r6, r9, sl, fp, ip, sp}^
 8017b30:	40003e45 	andmi	r3, r0, r5, asr #28
 8017b34:	407f4200 	rsbsmi	r4, pc, r0, lsl #4
 8017b38:	72400000 	subvc	r0, r0, #0
 8017b3c:	46494949 	strbmi	r4, [r9], -r9, asr #18
 8017b40:	41214000 			; <UNDEFINED> instruction: 0x41214000
 8017b44:	00334d49 	eorseq	r4, r3, r9, asr #26
 8017b48:	12141840 	andsne	r1, r4, #64, 16	; 0x400000
 8017b4c:	4000107f 	andmi	r1, r0, pc, ror r0
 8017b50:	45454527 	strbmi	r4, [r5, #-1319]	; 0xfffffad9
 8017b54:	3c400039 	mcrrcc	0, 3, r0, r0, cr9
 8017b58:	3149494a 	cmpcc	r9, sl, asr #18
 8017b5c:	21414000 	mrscs	r4, (UNDEF: 65)
 8017b60:	00070911 	andeq	r0, r7, r1, lsl r9
 8017b64:	49493640 	stmdbmi	r9, {r6, r9, sl, ip, sp}^
 8017b68:	40003649 	andmi	r3, r0, r9, asr #12
 8017b6c:	29494946 	stmdbcs	r9, {r1, r2, r6, r8, fp, lr}^
 8017b70:	0040001e 	subeq	r0, r0, lr, lsl r0
 8017b74:	00001400 	andeq	r1, r0, r0, lsl #8
 8017b78:	40004000 	andmi	r4, r0, r0
 8017b7c:	00000034 	andeq	r0, r0, r4, lsr r0
 8017b80:	14080040 	strne	r0, [r8], #-64	; 0xffffffc0
 8017b84:	40004122 	andmi	r4, r0, r2, lsr #2
 8017b88:	14141414 	ldrne	r1, [r4], #-1044	; 0xfffffbec
 8017b8c:	00400014 	subeq	r0, r0, r4, lsl r0
 8017b90:	08142241 	ldmdaeq	r4, {r0, r6, r9, sp}
 8017b94:	01024000 	mrseq	r4, (UNDEF: 2)
 8017b98:	00060959 	andeq	r0, r6, r9, asr r9
 8017b9c:	5d413e40 	stclpl	14, cr3, [r1, #-256]	; 0xffffff00
 8017ba0:	40004e59 	andmi	r4, r0, r9, asr lr
 8017ba4:	1211127c 	andsne	r1, r1, #124, 4	; 0xc0000007
 8017ba8:	7f40007c 	svcvc	0x0040007c
 8017bac:	36494949 	strbcc	r4, [r9], -r9, asr #18
 8017bb0:	413e4000 	teqmi	lr, r0
 8017bb4:	00224141 	eoreq	r4, r2, r1, asr #2
 8017bb8:	41417f40 	cmpmi	r1, r0, asr #30
 8017bbc:	40003e41 	andmi	r3, r0, r1, asr #28
 8017bc0:	4949497f 	stmdbmi	r9, {r0, r1, r2, r3, r4, r5, r6, r8, fp, lr}^
 8017bc4:	7f400041 	svcvc	0x00400041
 8017bc8:	01090909 	tsteq	r9, r9, lsl #18
 8017bcc:	413e4000 	teqmi	lr, r0
 8017bd0:	00735141 	rsbseq	r5, r3, r1, asr #2
 8017bd4:	08087f40 	stmdaeq	r8, {r6, r8, r9, sl, fp, ip, sp, lr}
 8017bd8:	40007f08 	andmi	r7, r0, r8, lsl #30
 8017bdc:	417f4100 	cmnmi	pc, r0, lsl #2
 8017be0:	20400000 	subcs	r0, r0, r0
 8017be4:	013f4140 	teqeq	pc, r0, asr #2
 8017be8:	087f4000 	ldmdaeq	pc!, {lr}^	; <UNPREDICTABLE>
 8017bec:	00412214 	subeq	r2, r1, r4, lsl r2
 8017bf0:	40407f40 	submi	r7, r0, r0, asr #30
 8017bf4:	40004040 	andmi	r4, r0, r0, asr #32
 8017bf8:	021c027f 	andseq	r0, ip, #-268435449	; 0xf0000007
 8017bfc:	7f40007f 	svcvc	0x0040007f
 8017c00:	7f100804 	svcvc	0x00100804
 8017c04:	413e4000 	teqmi	lr, r0
 8017c08:	003e4141 	eorseq	r4, lr, r1, asr #2
 8017c0c:	09097f40 	stmdbeq	r9, {r6, r8, r9, sl, fp, ip, sp, lr}
 8017c10:	40000609 	andmi	r0, r0, r9, lsl #12
 8017c14:	2151413e 	cmpcs	r1, lr, lsr r1
 8017c18:	7f40005e 	svcvc	0x0040005e
 8017c1c:	46291909 	strtmi	r1, [r9], -r9, lsl #18
 8017c20:	49264000 	stmdbmi	r6!, {lr}
 8017c24:	00324949 	eorseq	r4, r2, r9, asr #18
 8017c28:	7f010340 	svcvc	0x00010340
 8017c2c:	40000301 	andmi	r0, r0, r1, lsl #6
 8017c30:	4040403f 	submi	r4, r0, pc, lsr r0
 8017c34:	1f40003f 	svcne	0x0040003f
 8017c38:	1f204020 	svcne	0x00204020
 8017c3c:	403f4000 	eorsmi	r4, pc, r0
 8017c40:	003f4038 	eorseq	r4, pc, r8, lsr r0	; <UNPREDICTABLE>
 8017c44:	08146340 	ldmdaeq	r4, {r6, r8, r9, sp, lr}
 8017c48:	40006314 	andmi	r6, r0, r4, lsl r3
 8017c4c:	04780403 	ldrbteq	r0, [r8], #-1027	; 0xfffffbfd
 8017c50:	61400003 	cmpvs	r0, r3
 8017c54:	434d4959 	movtmi	r4, #55641	; 0xd959
 8017c58:	7f004000 	svcvc	0x00004000
 8017c5c:	00414141 	subeq	r4, r1, r1, asr #2
 8017c60:	08040240 	stmdaeq	r4, {r6, r9}
 8017c64:	40002010 	andmi	r2, r0, r0, lsl r0
 8017c68:	41414100 	mrsmi	r4, (UNDEF: 81)
 8017c6c:	0440007f 	strbeq	r0, [r0], #-127	; 0xffffff81
 8017c70:	04020102 	streq	r0, [r2], #-258	; 0xfffffefe
 8017c74:	40404000 	submi	r4, r0, r0
 8017c78:	00404040 	subeq	r4, r0, r0, asr #32
 8017c7c:	07030040 	streq	r0, [r3, -r0, asr #32]
 8017c80:	40000008 	andmi	r0, r0, r8
 8017c84:	78545420 	ldmdavc	r4, {r5, sl, ip, lr}^
 8017c88:	7f400040 	svcvc	0x00400040
 8017c8c:	38444428 	stmdacc	r4, {r3, r5, sl, lr}^
 8017c90:	44384000 	ldrtmi	r4, [r8], #-0
 8017c94:	00284444 	eoreq	r4, r8, r4, asr #8
 8017c98:	44443840 	strbmi	r3, [r4], #-2112	; 0xfffff7c0
 8017c9c:	40007f28 	andmi	r7, r0, r8, lsr #30
 8017ca0:	54545438 	ldrbpl	r5, [r4], #-1080	; 0xfffffbc8
 8017ca4:	00400018 	subeq	r0, r0, r8, lsl r0
 8017ca8:	02097e08 	andeq	r7, r9, #8, 28	; 0x80
 8017cac:	a4184000 	ldrge	r4, [r8], #-0
 8017cb0:	00789ca4 	rsbseq	r9, r8, r4, lsr #25
 8017cb4:	04087f40 	streq	r7, [r8], #-3904	; 0xfffff0c0
 8017cb8:	40007804 	andmi	r7, r0, r4, lsl #16
 8017cbc:	407d4400 	rsbsmi	r4, sp, r0, lsl #8
 8017cc0:	20400000 	subcs	r0, r0, r0
 8017cc4:	003d4040 	eorseq	r4, sp, r0, asr #32
 8017cc8:	107f4000 	rsbsne	r4, pc, r0
 8017ccc:	00004428 	andeq	r4, r0, r8, lsr #8
 8017cd0:	7f410040 	svcvc	0x00410040
 8017cd4:	40000040 	andmi	r0, r0, r0, asr #32
 8017cd8:	0478047c 	ldrbteq	r0, [r8], #-1148	; 0xfffffb84
 8017cdc:	7c400078 	mcrrvc	0, 7, r0, r0, cr8
 8017ce0:	78040408 	stmdavc	r4, {r3, sl}
 8017ce4:	44384000 	ldrtmi	r4, [r8], #-0
 8017ce8:	00384444 	eorseq	r4, r8, r4, asr #8
 8017cec:	2418fc40 	ldrcs	pc, [r8], #-3136	; 0xfffff3c0
 8017cf0:	40001824 	andmi	r1, r0, r4, lsr #16
 8017cf4:	18242418 	stmdane	r4!, {r3, r4, sl, sp}
 8017cf8:	7c4000fc 	mcrrvc	0, 15, r0, r0, cr12
 8017cfc:	08040408 	stmdaeq	r4, {r3, sl}
 8017d00:	54484000 	strbpl	r4, [r8], #-0
 8017d04:	00245454 	eoreq	r5, r4, r4, asr r4
 8017d08:	3f040440 	svccc	0x00040440
 8017d0c:	40002444 	andmi	r2, r0, r4, asr #8
 8017d10:	2040403c 	subcs	r4, r0, ip, lsr r0
 8017d14:	1c40007c 	mcrrne	0, 7, r0, r0, cr12
 8017d18:	1c204020 	stcne	0, cr4, [r0], #-128	; 0xffffff80
 8017d1c:	403c4000 	eorsmi	r4, ip, r0
 8017d20:	003c4030 	eorseq	r4, ip, r0, lsr r0
 8017d24:	10284440 	eorne	r4, r8, r0, asr #8
 8017d28:	40004428 	andmi	r4, r0, r8, lsr #8
 8017d2c:	9090904c 	addsls	r9, r0, ip, asr #32
 8017d30:	4440007c 	strbmi	r0, [r0], #-124	; 0xffffff84
 8017d34:	444c5464 	strbmi	r5, [ip], #-1124	; 0xfffffb9c
 8017d38:	08004000 	stmdaeq	r0, {lr}
 8017d3c:	00004136 	andeq	r4, r0, r6, lsr r1
 8017d40:	77000040 	strvc	r0, [r0, -r0, asr #32]
 8017d44:	40000000 	andmi	r0, r0, r0
 8017d48:	08364100 	ldmdaeq	r6!, {r8, lr}
 8017d4c:	02400000 	subeq	r0, r0, #0
 8017d50:	02040201 	andeq	r0, r4, #268435456	; 0x10000000
 8017d54:	263c4000 	ldrtcs	r4, [ip], -r0
 8017d58:	003c2623 	eorseq	r2, ip, r3, lsr #12

08017d5c <oled_128x32_init>:
 8017d5c:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 8017d60:	4000d31f 	andmi	sp, r0, pc, lsl r3
 8017d64:	0020148d 	eoreq	r1, r0, sp, lsl #9
 8017d68:	02dac8a1 	sbcseq	ip, sl, #10551296	; 0xa10000
 8017d6c:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 8017d70:	a6a440db 	ssatge	r4, #5, fp, asr #1

08017d74 <oled_128x64_init>:
 8017d74:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 8017d78:	4000d33f 	andmi	sp, r0, pc, lsr r3
 8017d7c:	0020148d 	eoreq	r1, r0, sp, lsl #9
 8017d80:	12dac8a1 	sbcsne	ip, sl, #10551296	; 0xa10000
 8017d84:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 8017d88:	a6a440db 	ssatge	r4, #5, fp, asr #1

08017d8c <vtable for Ssd1306>:
	...
 8017d94:	08012d11 	stmdaeq	r1, {r0, r4, r8, sl, fp, sp}
 8017d98:	08012d3d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r8, sl, fp, sp}
 8017d9c:	0801304d 	stmdaeq	r1, {r0, r2, r3, r6, ip, sp}
 8017da0:	08012fd5 	stmdaeq	r1, {r0, r2, r4, r6, r7, r8, r9, sl, fp, sp}
 8017da4:	08012ea1 	stmdaeq	r1, {r0, r5, r7, r9, sl, fp, sp}
 8017da8:	08012d5d 	stmdaeq	r1, {r0, r2, r3, r4, r6, r8, sl, fp, sp}
 8017dac:	08012d85 	stmdaeq	r1, {r0, r2, r7, r8, sl, fp, sp}
 8017db0:	08012e77 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, r9, sl, fp, sp}
 8017db4:	08012e31 	stmdaeq	r1, {r0, r4, r5, r9, sl, fp, sp}
 8017db8:	08012d13 	stmdaeq	r1, {r0, r1, r4, r8, sl, fp, sp}
 8017dbc:	08012edd 	stmdaeq	r1, {r0, r2, r3, r4, r6, r7, r9, sl, fp, sp}
 8017dc0:	08012ee9 	stmdaeq	r1, {r0, r3, r5, r6, r7, r9, sl, fp, sp}
 8017dc4:	08012f03 	stmdaeq	r1, {r0, r1, r8, r9, sl, fp, sp}
 8017dc8:	08012d15 	stmdaeq	r1, {r0, r2, r4, r8, sl, fp, sp}
 8017dcc:	30345b1b 	eorscc	r5, r4, fp, lsl fp
 8017dd0:	5b1b006d 	blpl	86d7f8c <__exidx_end+0x6c00c4>
 8017dd4:	006d3033 	rsbeq	r3, sp, r3, lsr r0
 8017dd8:	31335b1b 	teqcc	r3, fp, lsl fp
 8017ddc:	5b1b006d 	blpl	86d7f98 <__exidx_end+0x6c00d0>
 8017de0:	006d3233 	rsbeq	r3, sp, r3, lsr r2
 8017de4:	33335b1b 	teqcc	r3, #27648	; 0x6c00
 8017de8:	5b1b006d 	blpl	86d7fa4 <__exidx_end+0x6c00dc>
 8017dec:	006d3933 	rsbeq	r3, sp, r3, lsr r9
 8017df0:	2e25565b 	mcrcs	6, 1, r5, cr5, cr11, {2}
 8017df4:	205d732a 	subscs	r7, sp, sl, lsr #6
 8017df8:	43207325 			; <UNDEFINED> instruction: 0x43207325
 8017dfc:	69706d6f 	ldmdbvs	r0!, {r0, r1, r2, r3, r5, r6, r8, sl, fp, sp, lr}^
 8017e00:	2064656c 	rsbcs	r6, r4, ip, ror #10
 8017e04:	25206e6f 	strcs	r6, [r0, #-3695]!	; 0xfffff191
 8017e08:	20732a2e 	rsbscs	r2, r3, lr, lsr #20
 8017e0c:	25207461 	strcs	r7, [r0, #-1121]!	; 0xfffffb9f
 8017e10:	00732a2e 	rsbseq	r2, r3, lr, lsr #20
 8017e14:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8017e18:	203a636f 	eorscs	r6, sl, pc, ror #6
 8017e1c:	000a7525 	andeq	r7, sl, r5, lsr #10
 8017e20:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8017e24:	203a636f 	eorscs	r6, sl, pc, ror #6
 8017e28:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
 8017e2c:	62203e20 	eorvs	r3, r0, #32, 28	; 0x200
 8017e30:	6b636f6c 	blvs	98f3be8 <__exidx_end+0x18dbd20>
 8017e34:	6d696c5f 	stclvs	12, cr6, [r9, #-380]!	; 0xfffffe84
 8017e38:	000a7469 	andeq	r7, sl, r9, ror #8
 8017e3c:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8017e40:	203a636f 	eorscs	r6, sl, pc, ror #6
 8017e44:	6f6c4270 	svcvs	0x006c4270
 8017e48:	65486b63 	strbvs	r6, [r8, #-2915]	; 0xfffff49d
 8017e4c:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 8017e50:	2c70253d 	cfldr64cs	mvdx2, [r0], #-244	; 0xffffff0c
 8017e54:	7a697320 	bvc	9a74adc <__exidx_end+0x1a5cc14>
 8017e58:	64253d65 	strtvs	r3, [r5], #-3429	; 0xfffff29b
 8017e5c:	6164202c 	cmnvs	r4, ip, lsr #32
 8017e60:	253d6174 	ldrcs	r6, [sp, #-372]!	; 0xfffffe8c
 8017e64:	66000a70 			; <UNDEFINED> instruction: 0x66000a70
 8017e68:	3a656572 	bcc	9971438 <__exidx_end+0x1959570>
 8017e6c:	6c427020 	mcrrvs	0, 2, r7, r2, cr0
 8017e70:	486b636f 	stmdami	fp!, {r0, r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8017e74:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 8017e78:	203d2072 	eorscs	r2, sp, r2, ror r0
 8017e7c:	202c7025 	eorcs	r7, ip, r5, lsr #32
 8017e80:	6f6c4270 	svcvs	0x006c4270
 8017e84:	3d206b63 	fstmdbxcc	r0!, {d6-d54}	;@ Deprecated
 8017e88:	0a702520 	beq	9c21310 <__exidx_end+0x1c09448>
 8017e8c:	00000000 	andeq	r0, r0, r0

08017e90 <days_of_month>:
 8017e90:	0000001f 	andeq	r0, r0, pc, lsl r0
 8017e94:	0000001c 	andeq	r0, r0, ip, lsl r0
 8017e98:	0000001f 	andeq	r0, r0, pc, lsl r0
 8017e9c:	0000001e 	andeq	r0, r0, lr, lsl r0
 8017ea0:	0000001f 	andeq	r0, r0, pc, lsl r0
 8017ea4:	0000001e 	andeq	r0, r0, lr, lsl r0
 8017ea8:	0000001f 	andeq	r0, r0, pc, lsl r0
 8017eac:	0000001f 	andeq	r0, r0, pc, lsl r0
 8017eb0:	0000001e 	andeq	r0, r0, lr, lsl r0
 8017eb4:	0000001f 	andeq	r0, r0, pc, lsl r0
 8017eb8:	0000001e 	andeq	r0, r0, lr, lsl r0
 8017ebc:	0000001f 	andeq	r0, r0, pc, lsl r0

Disassembly of section .ARM:

08017ec0 <__exidx_start>:
 8017ec0:	7fff1760 	svcvc	0x00ff1760
 8017ec4:	00000001 	andeq	r0, r0, r1

Disassembly of section .ARM.attributes:

08017ec8 <.ARM.attributes>:
 8017ec8:	00002e41 	andeq	r2, r0, r1, asr #28
 8017ecc:	61656100 	cmnvs	r5, r0, lsl #2
 8017ed0:	01006962 	tsteq	r0, r2, ror #18
 8017ed4:	00000024 	andeq	r0, r0, r4, lsr #32
 8017ed8:	726f4305 	rsbvc	r4, pc, #335544320	; 0x14000000
 8017edc:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
 8017ee0:	0600334d 	streq	r3, [r0], -sp, asr #6
 8017ee4:	094d070a 	stmdbeq	sp, {r1, r3, r8, r9, sl}^
 8017ee8:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
 8017eec:	17011501 	strne	r1, [r1, -r1, lsl #10]
 8017ef0:	1a011803 	bne	805df04 <__exidx_end+0x4603c>
 8017ef4:	Address 0x0000000008017ef4 is out of bounds.


Disassembly of section .data:

20000000 <LLRPDevice::m_nHandleLLRP>:
20000000:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

20000004 <s_multicast_mac>:
20000004:	005e0001 	subseq	r0, lr, r1
20000008:	00000000 	andeq	r0, r0, r0

2000000c <MDNS::s_nHandle>:
2000000c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

20000010 <next_block>:
20000010:	2003c000 	andcs	ip, r3, r0

20000014 <s_block_bucket>:
20000014:	00000010 	andeq	r0, r0, r0, lsl r0
	...
20000024:	00000020 	andeq	r0, r0, r0, lsr #32
	...
20000034:	00000040 	andeq	r0, r0, r0, asr #32
	...
20000044:	00000060 	andeq	r0, r0, r0, rrx
	...
20000054:	00000080 	andeq	r0, r0, r0, lsl #1
	...
20000064:	00000100 	andeq	r0, r0, r0, lsl #2
	...
20000074:	00000140 	andeq	r0, r0, r0, asr #2
	...
20000084:	00000180 	andeq	r0, r0, r0, lsl #3
	...
20000094:	00000200 	andeq	r0, r0, r0, lsl #4
	...
200000a4:	00000300 	andeq	r0, r0, r0, lsl #6
	...
200000b4:	00000400 	andeq	r0, r0, r0, lsl #8
	...
200000c4:	00000500 	andeq	r0, r0, r0, lsl #10
	...

200000e4 <SystemCoreClock>:
200000e4:	07270e00 	streq	r0, [r7, -r0, lsl #28]!

Disassembly of section .bss:

200000e8 <outptr>:
200000e8:	00000000 	andeq	r0, r0, r0

200000ec <guard variable for lightset::Data::Get()::instance>:
200000ec:	00000000 	andeq	r0, r0, r0

200000f0 <lightset::Data::Get()::instance>:
	...

2000c170 <E131Bridge::s_pThis>:
2000c170:	00000000 	andeq	r0, r0, r0

2000c174 <s_ReceivingMask>:
2000c174:	00000000 	andeq	r0, r0, r0

2000c178 <LLRPDevice::s_nIpAddressFrom>:
2000c178:	00000000 	andeq	r0, r0, r0

2000c17c <LLRPDevice::m_nIpAddresLLRPRequest>:
2000c17c:	00000000 	andeq	r0, r0, r0

2000c180 <LLRPDevice::m_nIpAddressLLRPResponse>:
2000c180:	00000000 	andeq	r0, r0, r0

2000c184 <LLRPDevice::m_pLLRP>:
2000c184:	00000000 	andeq	r0, r0, r0

2000c188 <RDMNetDevice::s_RdmCommand>:
	...

2000c287 <RDMNetDevice::s_Cid>:
	...

2000c298 <RDMSensors::s_pThis>:
2000c298:	00000000 	andeq	r0, r0, r0

2000c29c <RDMSubDevices::s_pThis>:
2000c29c:	00000000 	andeq	r0, r0, r0

2000c2a0 <RDMDeviceResponder::s_pThis>:
2000c2a0:	00000000 	andeq	r0, r0, r0

2000c2a4 <RDMIdentify::m_bIsEnabled>:
	...

2000c2a5 <RDMIdentify::m_nMode>:
2000c2a5:	 	andeq	r0, r0, r0

2000c2a8 <RDMIdentify::s_pThis>:
2000c2a8:	00000000 	andeq	r0, r0, r0

2000c2ac <s_StopBuffer>:
	...

2000c4ac <PixelPatterns::m_PortConfig>:
	...

2000c5ac <PixelPatterns::m_nActivePorts>:
2000c5ac:	00000000 	andeq	r0, r0, r0

2000c5b0 <PixelPatterns::m_pScannerColours>:
2000c5b0:	00000000 	andeq	r0, r0, r0

2000c5b4 <PixelPatterns::m_nCount>:
2000c5b4:	00000000 	andeq	r0, r0, r0

2000c5b8 <PixelPatterns::m_pOutput>:
2000c5b8:	00000000 	andeq	r0, r0, r0

2000c5bc <PixelTestPattern::s_Pattern>:
2000c5bc:	00000000 	andeq	r0, r0, r0

2000c5c0 <sv_isRunning>:
2000c5c0:	00000000 	andeq	r0, r0, r0

2000c5c4 <s_T0H>:
	...

20013dc4 <WS28xxMulti::s_pThis>:
20013dc4:	00000000 	andeq	r0, r0, r0

20013dc8 <RemoteConfig::s_pUdpBuffer>:
20013dc8:	00000000 	andeq	r0, r0, r0

20013dcc <RemoteConfig::s_RemoteConfigListBin>:
	...

20013df0 <RemoteConfig::s_pThis>:
20013df0:	00000000 	andeq	r0, r0, r0

20013df4 <SpiFlashStore::s_nWaitMillis>:
20013df4:	00000000 	andeq	r0, r0, r0

20013df8 <SpiFlashStore::s_SpiFlashData>:
	...

20014df8 <SpiFlashStore::s_nStartAddress>:
20014df8:	00000000 	andeq	r0, r0, r0

20014dfc <SpiFlashStore::s_bHaveFlashChip>:
20014dfc:	00000000 	andeq	r0, r0, r0

20014e00 <SpiFlashStore::s_nSpiFlashStoreSize>:
20014e00:	00000000 	andeq	r0, r0, r0

20014e04 <SpiFlashStore::s_State>:
20014e04:	00000000 	andeq	r0, r0, r0

20014e08 <SpiFlashStore::s_pThis>:
20014e08:	00000000 	andeq	r0, r0, r0

20014e0c <SpiFlashStore::s_bIsNew>:
20014e0c:	00000000 	andeq	r0, r0, r0

20014e10 <StoreDisplayUdf::s_pThis>:
20014e10:	00000000 	andeq	r0, r0, r0

20014e14 <StoreE131::s_pThis>:
20014e14:	00000000 	andeq	r0, r0, r0

20014e18 <StoreNetwork::s_pThis>:
20014e18:	00000000 	andeq	r0, r0, r0

20014e1c <StoreRDMDevice::s_pThis>:
20014e1c:	00000000 	andeq	r0, r0, r0

20014e20 <StoreRemoteConfig::s_pThis>:
20014e20:	00000000 	andeq	r0, r0, r0

20014e24 <StoreWS28xxDmx::s_pThis>:
20014e24:	00000000 	andeq	r0, r0, r0

20014e28 <FlashRom::s_pThis>:
20014e28:	00000000 	andeq	r0, r0, r0

20014e2c <flashrom::s_nAddress>:
20014e2c:	00000000 	andeq	r0, r0, r0

20014e30 <flashrom::s_State>:
20014e30:	00000000 	andeq	r0, r0, r0

20014e34 <flashrom::s_nPage>:
20014e34:	00000000 	andeq	r0, r0, r0

20014e38 <flashrom::s_pData>:
20014e38:	00000000 	andeq	r0, r0, r0

20014e3c <flashrom::s_isBank0>:
20014e3c:	00000000 	andeq	r0, r0, r0

20014e40 <flashrom::s_nLength>:
20014e40:	00000000 	andeq	r0, r0, r0

20014e44 <g_ip_info>:
	...

20014e50 <g_mac_address>:
20014e50:	00000000 	andeq	r0, r0, r0
	...

20014e56 <s_is_dhcp>:
	...

20014e58 <s_p>:
20014e58:	00000000 	andeq	r0, r0, r0

20014e5c <s_ticker>:
20014e5c:	00000000 	andeq	r0, r0, r0

20014e60 <s_mac_address>:
	...

20014e68 <s_mac_address_arp_reply>:
	...

20014e70 <s_id>:
20014e70:	00000000 	andeq	r0, r0, r0

20014e74 <s_recv_queue>:
	...

200159e4 <s_tcb>:
	...

20015a28 <s_tcp>:
	...

20016014 <broadcast_mask>:
20016014:	00000000 	andeq	r0, r0, r0

20016018 <gw_ip>:
20016018:	00000000 	andeq	r0, r0, r0

2001601c <on_network_mask>:
2001601c:	00000000 	andeq	r0, r0, r0

20016020 <s_id>:
20016020:	00000000 	andeq	r0, r0, r0

20016024 <s_ports_allowed>:
	...

20016044 <s_recv_queue>:
	...

2001bce4 <s_send_packet>:
	...

2001c2d0 <MDNS::s_nRemoteIp>:
2001c2d0:	00000000 	andeq	r0, r0, r0

2001c2d4 <MDNS::s_nRemotePort>:
2001c2d4:	00000000 	andeq	r0, r0, r0

2001c2d8 <MDNS::s_nMulticastIp>:
2001c2d8:	00000000 	andeq	r0, r0, r0

2001c2dc <MDNS::s_AnswerLocalIp>:
	...

2001c4e0 <MDNS::s_ServiceRecords>:
	...

2001c500 <MDNS::s_nBytesReceived>:
2001c500:	00000000 	andeq	r0, r0, r0

2001c504 <MDNS::s_ServiceRecordsData>:
	...

2001c708 <MDNS::s_pName>:
2001c708:	00000000 	andeq	r0, r0, r0

2001c70c <MDNS::s_pBuffer>:
2001c70c:	00000000 	andeq	r0, r0, r0

2001c710 <Network::s_pThis>:
2001c710:	00000000 	andeq	r0, r0, r0

2001c714 <NetworkParams::m_tNetworkParams>:
	...

2001c774 <s_arp_announce>:
	...

2001c7a0 <s_arp_reply>:
	...

2001c7cc <s_arp_request>:
	...

2001c7f8 <s_arp_records>:
	...

2001c978 <s_entry_current>:
2001c978:	00000000 	andeq	r0, r0, r0

2001c97c <s_dhcp_allocated_gw>:
2001c97c:	00000000 	andeq	r0, r0, r0

2001c980 <s_dhcp_allocated_ip>:
2001c980:	00000000 	andeq	r0, r0, r0

2001c984 <s_dhcp_allocated_netmask>:
2001c984:	00000000 	andeq	r0, r0, r0

2001c988 <s_dhcp_message>:
	...

2001cbac <s_dhcp_server_ip>:
2001cbac:	00000000 	andeq	r0, r0, r0

2001cbb0 <s_groups>:
	...

2001ccd0 <s_id>:
2001ccd0:	00000000 	andeq	r0, r0, r0

2001ccd4 <s_joins_allowed_index>:
2001ccd4:	00000000 	andeq	r0, r0, r0

2001ccd8 <s_leave>:
	...

2001cd08 <s_multicast_mac>:
	...

2001cd10 <s_report>:
	...

2001cd40 <DisplayUdf::s_pThis>:
2001cd40:	00000000 	andeq	r0, r0, r0

2001cd44 <PropertiesConfig::s_Config>:
2001cd44:	00000000 	andeq	r0, r0, r0

2001cd48 <Display::s_pThis>:
2001cd48:	00000000 	andeq	r0, r0, r0

2001cd4c <_ClearBuffer>:
	...

2001cdd4 <Ssd1306::s_pThis>:
2001cdd4:	00000000 	andeq	r0, r0, r0

2001cdd8 <FirmwareVersion::s_FirmwareVersion>:
	...

2001cdee <FirmwareVersion::s_Print>:
	...

2001ce30 <FirmwareVersion::s_pThis>:
2001ce30:	00000000 	andeq	r0, r0, r0

2001ce34 <LedBlink::s_pThis>:
2001ce34:	00000000 	andeq	r0, r0, r0

2001ce38 <Hardware::s_pThis>:
2001ce38:	00000000 	andeq	r0, r0, r0

2001ce3c <last.0>:
2001ce3c:	00000000 	andeq	r0, r0, r0

2001ce40 <s_micros>:
	...

2001ce48 <set_timer>:
2001ce48:	00000000 	andeq	r0, r0, r0

2001ce4c <s_nSysTickMillis>:
2001ce4c:	00000000 	andeq	r0, r0, r0

2001ce50 <enet_init_status>:
2001ce50:	00000000 	andeq	r0, r0, r0

2001ce54 <s_nAddress>:
2001ce54:	00000000 	andeq	r0, r0, r0

2001ce58 <dma_current_ptp_rxdesc>:
2001ce58:	00000000 	andeq	r0, r0, r0

2001ce5c <dma_current_ptp_txdesc>:
2001ce5c:	00000000 	andeq	r0, r0, r0

2001ce60 <dma_current_rxdesc>:
2001ce60:	00000000 	andeq	r0, r0, r0

2001ce64 <dma_current_txdesc>:
2001ce64:	00000000 	andeq	r0, r0, r0

2001ce68 <enet_initpara>:
	...

2001cea4 <rx_buff>:
	...

2002990c <rxdesc_tab>:
	...

20029b2c <tx_buff>:
	...

2002a714 <txdesc_tab>:
	...

Disassembly of section .heap:

2003c000 <heap_low>:
	...

Disassembly of section .stack:

2003d800 <_sp-0x2800>:
	...
