
build_gd32/main.elf:     file format elf32-littlearm


Disassembly of section .vectors:

08007000 <__gVectors>:
 8007000:	20020000 	andcs	r0, r2, r0
 8007004:	08007ee5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r9, sl, fp, ip, sp, lr}
 8007008:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 800700c:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007010:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007014:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007018:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
	...
 800702c:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007030:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007034:	00000000 	andeq	r0, r0, r0
 8007038:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 800703c:	08013ab1 	stmdaeq	r1, {r0, r4, r5, r7, r9, fp, ip, sp}
 8007040:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007044:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007048:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 800704c:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007050:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007054:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007058:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 800705c:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007060:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007064:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007068:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 800706c:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007070:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007074:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007078:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 800707c:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007080:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007084:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007088:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 800708c:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007090:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007094:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007098:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 800709c:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070a0:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070a4:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070a8:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070ac:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070b0:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070b4:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070b8:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070bc:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070c0:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070c4:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070c8:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070cc:	00000000 	andeq	r0, r0, r0
 80070d0:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070d4:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070d8:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070dc:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070e0:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070e4:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070e8:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070ec:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070f0:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070f4:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070f8:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80070fc:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007100:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007104:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007108:	0800e141 	stmdaeq	r0, {r0, r6, r8, sp, lr, pc}
 800710c:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007110:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007114:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007118:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 800711c:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007120:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007124:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007128:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 800712c:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007130:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007134:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007138:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 800713c:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007140:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007144:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007148:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 800714c:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007150:	00000000 	andeq	r0, r0, r0
 8007154:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007158:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 800715c:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007160:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007164:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
	...
 8007178:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 800717c:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007180:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 8007184:	00000000 	andeq	r0, r0, r0
 8007188:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 800718c:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
	...
 80071a0:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}
 80071a4:	08007f29 	stmdaeq	r0, {r0, r3, r5, r8, r9, sl, fp, ip, sp, lr}

Disassembly of section .text:

080071a8 <__aeabi_d2f>:
 80071a8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 80071ac:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 80071b0:	bf24      	itt	cs
 80071b2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 80071b6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 80071ba:	d90d      	bls.n	80071d8 <__aeabi_d2f+0x30>
 80071bc:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 80071c0:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 80071c4:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 80071c8:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 80071cc:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 80071d0:	bf08      	it	eq
 80071d2:	f020 0001 	biceq.w	r0, r0, #1
 80071d6:	4770      	bx	lr
 80071d8:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 80071dc:	d121      	bne.n	8007222 <__aeabi_d2f+0x7a>
 80071de:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 80071e2:	bfbc      	itt	lt
 80071e4:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 80071e8:	4770      	bxlt	lr
 80071ea:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80071ee:	ea4f 5252 	mov.w	r2, r2, lsr #21
 80071f2:	f1c2 0218 	rsb	r2, r2, #24
 80071f6:	f1c2 0c20 	rsb	ip, r2, #32
 80071fa:	fa10 f30c 	lsls.w	r3, r0, ip
 80071fe:	fa20 f002 	lsr.w	r0, r0, r2
 8007202:	bf18      	it	ne
 8007204:	f040 0001 	orrne.w	r0, r0, #1
 8007208:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 800720c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8007210:	fa03 fc0c 	lsl.w	ip, r3, ip
 8007214:	ea40 000c 	orr.w	r0, r0, ip
 8007218:	fa23 f302 	lsr.w	r3, r3, r2
 800721c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8007220:	e7cc      	b.n	80071bc <__aeabi_d2f+0x14>
 8007222:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8007226:	d107      	bne.n	8007238 <__aeabi_d2f+0x90>
 8007228:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 800722c:	bf1e      	ittt	ne
 800722e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8007232:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8007236:	4770      	bxne	lr
 8007238:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 800723c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8007240:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007244:	4770      	bx	lr
 8007246:	bf00      	nop

08007248 <__aeabi_frsub>:
 8007248:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
 800724c:	e002      	b.n	8007254 <__addsf3>
 800724e:	bf00      	nop

08007250 <__aeabi_fsub>:
 8007250:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

08007254 <__addsf3>:
 8007254:	0042      	lsls	r2, r0, #1
 8007256:	bf1f      	itttt	ne
 8007258:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 800725c:	ea92 0f03 	teqne	r2, r3
 8007260:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8007264:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8007268:	d06a      	beq.n	8007340 <__addsf3+0xec>
 800726a:	ea4f 6212 	mov.w	r2, r2, lsr #24
 800726e:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8007272:	bfc1      	itttt	gt
 8007274:	18d2      	addgt	r2, r2, r3
 8007276:	4041      	eorgt	r1, r0
 8007278:	4048      	eorgt	r0, r1
 800727a:	4041      	eorgt	r1, r0
 800727c:	bfb8      	it	lt
 800727e:	425b      	neglt	r3, r3
 8007280:	2b19      	cmp	r3, #25
 8007282:	bf88      	it	hi
 8007284:	4770      	bxhi	lr
 8007286:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 800728a:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 800728e:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 8007292:	bf18      	it	ne
 8007294:	4240      	negne	r0, r0
 8007296:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 800729a:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 800729e:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 80072a2:	bf18      	it	ne
 80072a4:	4249      	negne	r1, r1
 80072a6:	ea92 0f03 	teq	r2, r3
 80072aa:	d03f      	beq.n	800732c <__addsf3+0xd8>
 80072ac:	f1a2 0201 	sub.w	r2, r2, #1
 80072b0:	fa41 fc03 	asr.w	ip, r1, r3
 80072b4:	eb10 000c 	adds.w	r0, r0, ip
 80072b8:	f1c3 0320 	rsb	r3, r3, #32
 80072bc:	fa01 f103 	lsl.w	r1, r1, r3
 80072c0:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 80072c4:	d502      	bpl.n	80072cc <__addsf3+0x78>
 80072c6:	4249      	negs	r1, r1
 80072c8:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 80072cc:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
 80072d0:	d313      	bcc.n	80072fa <__addsf3+0xa6>
 80072d2:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 80072d6:	d306      	bcc.n	80072e6 <__addsf3+0x92>
 80072d8:	0840      	lsrs	r0, r0, #1
 80072da:	ea4f 0131 	mov.w	r1, r1, rrx
 80072de:	f102 0201 	add.w	r2, r2, #1
 80072e2:	2afe      	cmp	r2, #254	; 0xfe
 80072e4:	d251      	bcs.n	800738a <__addsf3+0x136>
 80072e6:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
 80072ea:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 80072ee:	bf08      	it	eq
 80072f0:	f020 0001 	biceq.w	r0, r0, #1
 80072f4:	ea40 0003 	orr.w	r0, r0, r3
 80072f8:	4770      	bx	lr
 80072fa:	0049      	lsls	r1, r1, #1
 80072fc:	eb40 0000 	adc.w	r0, r0, r0
 8007300:	3a01      	subs	r2, #1
 8007302:	bf28      	it	cs
 8007304:	f5b0 0f00 	cmpcs.w	r0, #8388608	; 0x800000
 8007308:	d2ed      	bcs.n	80072e6 <__addsf3+0x92>
 800730a:	fab0 fc80 	clz	ip, r0
 800730e:	f1ac 0c08 	sub.w	ip, ip, #8
 8007312:	ebb2 020c 	subs.w	r2, r2, ip
 8007316:	fa00 f00c 	lsl.w	r0, r0, ip
 800731a:	bfaa      	itet	ge
 800731c:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8007320:	4252      	neglt	r2, r2
 8007322:	4318      	orrge	r0, r3
 8007324:	bfbc      	itt	lt
 8007326:	40d0      	lsrlt	r0, r2
 8007328:	4318      	orrlt	r0, r3
 800732a:	4770      	bx	lr
 800732c:	f092 0f00 	teq	r2, #0
 8007330:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
 8007334:	bf06      	itte	eq
 8007336:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
 800733a:	3201      	addeq	r2, #1
 800733c:	3b01      	subne	r3, #1
 800733e:	e7b5      	b.n	80072ac <__addsf3+0x58>
 8007340:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8007344:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8007348:	bf18      	it	ne
 800734a:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 800734e:	d021      	beq.n	8007394 <__addsf3+0x140>
 8007350:	ea92 0f03 	teq	r2, r3
 8007354:	d004      	beq.n	8007360 <__addsf3+0x10c>
 8007356:	f092 0f00 	teq	r2, #0
 800735a:	bf08      	it	eq
 800735c:	4608      	moveq	r0, r1
 800735e:	4770      	bx	lr
 8007360:	ea90 0f01 	teq	r0, r1
 8007364:	bf1c      	itt	ne
 8007366:	2000      	movne	r0, #0
 8007368:	4770      	bxne	lr
 800736a:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
 800736e:	d104      	bne.n	800737a <__addsf3+0x126>
 8007370:	0040      	lsls	r0, r0, #1
 8007372:	bf28      	it	cs
 8007374:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
 8007378:	4770      	bx	lr
 800737a:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
 800737e:	bf3c      	itt	cc
 8007380:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
 8007384:	4770      	bxcc	lr
 8007386:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 800738a:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
 800738e:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007392:	4770      	bx	lr
 8007394:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8007398:	bf16      	itet	ne
 800739a:	4608      	movne	r0, r1
 800739c:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 80073a0:	4601      	movne	r1, r0
 80073a2:	0242      	lsls	r2, r0, #9
 80073a4:	bf06      	itte	eq
 80073a6:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 80073aa:	ea90 0f01 	teqeq	r0, r1
 80073ae:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
 80073b2:	4770      	bx	lr

080073b4 <__aeabi_ui2f>:
 80073b4:	f04f 0300 	mov.w	r3, #0
 80073b8:	e004      	b.n	80073c4 <__aeabi_i2f+0x8>
 80073ba:	bf00      	nop

080073bc <__aeabi_i2f>:
 80073bc:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
 80073c0:	bf48      	it	mi
 80073c2:	4240      	negmi	r0, r0
 80073c4:	ea5f 0c00 	movs.w	ip, r0
 80073c8:	bf08      	it	eq
 80073ca:	4770      	bxeq	lr
 80073cc:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
 80073d0:	4601      	mov	r1, r0
 80073d2:	f04f 0000 	mov.w	r0, #0
 80073d6:	e01c      	b.n	8007412 <__aeabi_l2f+0x2a>

080073d8 <__aeabi_ul2f>:
 80073d8:	ea50 0201 	orrs.w	r2, r0, r1
 80073dc:	bf08      	it	eq
 80073de:	4770      	bxeq	lr
 80073e0:	f04f 0300 	mov.w	r3, #0
 80073e4:	e00a      	b.n	80073fc <__aeabi_l2f+0x14>
 80073e6:	bf00      	nop

080073e8 <__aeabi_l2f>:
 80073e8:	ea50 0201 	orrs.w	r2, r0, r1
 80073ec:	bf08      	it	eq
 80073ee:	4770      	bxeq	lr
 80073f0:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
 80073f4:	d502      	bpl.n	80073fc <__aeabi_l2f+0x14>
 80073f6:	4240      	negs	r0, r0
 80073f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80073fc:	ea5f 0c01 	movs.w	ip, r1
 8007400:	bf02      	ittt	eq
 8007402:	4684      	moveq	ip, r0
 8007404:	4601      	moveq	r1, r0
 8007406:	2000      	moveq	r0, #0
 8007408:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
 800740c:	bf08      	it	eq
 800740e:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
 8007412:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
 8007416:	fabc f28c 	clz	r2, ip
 800741a:	3a08      	subs	r2, #8
 800741c:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8007420:	db10      	blt.n	8007444 <__aeabi_l2f+0x5c>
 8007422:	fa01 fc02 	lsl.w	ip, r1, r2
 8007426:	4463      	add	r3, ip
 8007428:	fa00 fc02 	lsl.w	ip, r0, r2
 800742c:	f1c2 0220 	rsb	r2, r2, #32
 8007430:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8007434:	fa20 f202 	lsr.w	r2, r0, r2
 8007438:	eb43 0002 	adc.w	r0, r3, r2
 800743c:	bf08      	it	eq
 800743e:	f020 0001 	biceq.w	r0, r0, #1
 8007442:	4770      	bx	lr
 8007444:	f102 0220 	add.w	r2, r2, #32
 8007448:	fa01 fc02 	lsl.w	ip, r1, r2
 800744c:	f1c2 0220 	rsb	r2, r2, #32
 8007450:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8007454:	fa21 f202 	lsr.w	r2, r1, r2
 8007458:	eb43 0002 	adc.w	r0, r3, r2
 800745c:	bf08      	it	eq
 800745e:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8007462:	4770      	bx	lr

08007464 <__gesf2>:
 8007464:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
 8007468:	e006      	b.n	8007478 <__cmpsf2+0x4>
 800746a:	bf00      	nop

0800746c <__lesf2>:
 800746c:	f04f 0c01 	mov.w	ip, #1
 8007470:	e002      	b.n	8007478 <__cmpsf2+0x4>
 8007472:	bf00      	nop

08007474 <__cmpsf2>:
 8007474:	f04f 0c01 	mov.w	ip, #1
 8007478:	f84d cd04 	str.w	ip, [sp, #-4]!
 800747c:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8007480:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8007484:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8007488:	bf18      	it	ne
 800748a:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 800748e:	d011      	beq.n	80074b4 <__cmpsf2+0x40>
 8007490:	b001      	add	sp, #4
 8007492:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
 8007496:	bf18      	it	ne
 8007498:	ea90 0f01 	teqne	r0, r1
 800749c:	bf58      	it	pl
 800749e:	ebb2 0003 	subspl.w	r0, r2, r3
 80074a2:	bf88      	it	hi
 80074a4:	17c8      	asrhi	r0, r1, #31
 80074a6:	bf38      	it	cc
 80074a8:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
 80074ac:	bf18      	it	ne
 80074ae:	f040 0001 	orrne.w	r0, r0, #1
 80074b2:	4770      	bx	lr
 80074b4:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 80074b8:	d102      	bne.n	80074c0 <__cmpsf2+0x4c>
 80074ba:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 80074be:	d105      	bne.n	80074cc <__cmpsf2+0x58>
 80074c0:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 80074c4:	d1e4      	bne.n	8007490 <__cmpsf2+0x1c>
 80074c6:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 80074ca:	d0e1      	beq.n	8007490 <__cmpsf2+0x1c>
 80074cc:	f85d 0b04 	ldr.w	r0, [sp], #4
 80074d0:	4770      	bx	lr
 80074d2:	bf00      	nop

080074d4 <__aeabi_cfrcmple>:
 80074d4:	4684      	mov	ip, r0
 80074d6:	4608      	mov	r0, r1
 80074d8:	4661      	mov	r1, ip
 80074da:	e7ff      	b.n	80074dc <__aeabi_cfcmpeq>

080074dc <__aeabi_cfcmpeq>:
 80074dc:	b50f      	push	{r0, r1, r2, r3, lr}
 80074de:	f7ff ffc9 	bl	8007474 <__cmpsf2>
 80074e2:	2800      	cmp	r0, #0
 80074e4:	bf48      	it	mi
 80074e6:	f110 0f00 	cmnmi.w	r0, #0
 80074ea:	bd0f      	pop	{r0, r1, r2, r3, pc}

080074ec <__aeabi_fcmpeq>:
 80074ec:	f84d ed08 	str.w	lr, [sp, #-8]!
 80074f0:	f7ff fff4 	bl	80074dc <__aeabi_cfcmpeq>
 80074f4:	bf0c      	ite	eq
 80074f6:	2001      	moveq	r0, #1
 80074f8:	2000      	movne	r0, #0
 80074fa:	f85d fb08 	ldr.w	pc, [sp], #8
 80074fe:	bf00      	nop

08007500 <__aeabi_fcmplt>:
 8007500:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007504:	f7ff ffea 	bl	80074dc <__aeabi_cfcmpeq>
 8007508:	bf34      	ite	cc
 800750a:	2001      	movcc	r0, #1
 800750c:	2000      	movcs	r0, #0
 800750e:	f85d fb08 	ldr.w	pc, [sp], #8
 8007512:	bf00      	nop

08007514 <__aeabi_fcmple>:
 8007514:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007518:	f7ff ffe0 	bl	80074dc <__aeabi_cfcmpeq>
 800751c:	bf94      	ite	ls
 800751e:	2001      	movls	r0, #1
 8007520:	2000      	movhi	r0, #0
 8007522:	f85d fb08 	ldr.w	pc, [sp], #8
 8007526:	bf00      	nop

08007528 <__aeabi_fcmpge>:
 8007528:	f84d ed08 	str.w	lr, [sp, #-8]!
 800752c:	f7ff ffd2 	bl	80074d4 <__aeabi_cfrcmple>
 8007530:	bf94      	ite	ls
 8007532:	2001      	movls	r0, #1
 8007534:	2000      	movhi	r0, #0
 8007536:	f85d fb08 	ldr.w	pc, [sp], #8
 800753a:	bf00      	nop

0800753c <__aeabi_fcmpgt>:
 800753c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8007540:	f7ff ffc8 	bl	80074d4 <__aeabi_cfrcmple>
 8007544:	bf34      	ite	cc
 8007546:	2001      	movcc	r0, #1
 8007548:	2000      	movcs	r0, #0
 800754a:	f85d fb08 	ldr.w	pc, [sp], #8
 800754e:	bf00      	nop

08007550 <__aeabi_f2iz>:
 8007550:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8007554:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 8007558:	d30f      	bcc.n	800757a <__aeabi_f2iz+0x2a>
 800755a:	f04f 039e 	mov.w	r3, #158	; 0x9e
 800755e:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 8007562:	d90d      	bls.n	8007580 <__aeabi_f2iz+0x30>
 8007564:	ea4f 2300 	mov.w	r3, r0, lsl #8
 8007568:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 800756c:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8007570:	fa23 f002 	lsr.w	r0, r3, r2
 8007574:	bf18      	it	ne
 8007576:	4240      	negne	r0, r0
 8007578:	4770      	bx	lr
 800757a:	f04f 0000 	mov.w	r0, #0
 800757e:	4770      	bx	lr
 8007580:	f112 0f61 	cmn.w	r2, #97	; 0x61
 8007584:	d101      	bne.n	800758a <__aeabi_f2iz+0x3a>
 8007586:	0242      	lsls	r2, r0, #9
 8007588:	d105      	bne.n	8007596 <__aeabi_f2iz+0x46>
 800758a:	f010 4000 	ands.w	r0, r0, #2147483648	; 0x80000000
 800758e:	bf08      	it	eq
 8007590:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8007594:	4770      	bx	lr
 8007596:	f04f 0000 	mov.w	r0, #0
 800759a:	4770      	bx	lr

0800759c <__aeabi_uldivmod>:
 800759c:	b953      	cbnz	r3, 80075b4 <__aeabi_uldivmod+0x18>
 800759e:	b94a      	cbnz	r2, 80075b4 <__aeabi_uldivmod+0x18>
 80075a0:	2900      	cmp	r1, #0
 80075a2:	bf08      	it	eq
 80075a4:	2800      	cmpeq	r0, #0
 80075a6:	bf1c      	itt	ne
 80075a8:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 80075ac:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 80075b0:	f000 b976 	b.w	80078a0 <__aeabi_idiv0>
 80075b4:	f1ad 0c08 	sub.w	ip, sp, #8
 80075b8:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80075bc:	f000 f806 	bl	80075cc <__udivmoddi4>
 80075c0:	f8dd e004 	ldr.w	lr, [sp, #4]
 80075c4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80075c8:	b004      	add	sp, #16
 80075ca:	4770      	bx	lr

080075cc <__udivmoddi4>:
 80075cc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80075d0:	9e08      	ldr	r6, [sp, #32]
 80075d2:	460d      	mov	r5, r1
 80075d4:	4604      	mov	r4, r0
 80075d6:	4688      	mov	r8, r1
 80075d8:	2b00      	cmp	r3, #0
 80075da:	d14d      	bne.n	8007678 <__udivmoddi4+0xac>
 80075dc:	428a      	cmp	r2, r1
 80075de:	4694      	mov	ip, r2
 80075e0:	d968      	bls.n	80076b4 <__udivmoddi4+0xe8>
 80075e2:	fab2 f282 	clz	r2, r2
 80075e6:	b152      	cbz	r2, 80075fe <__udivmoddi4+0x32>
 80075e8:	fa01 f302 	lsl.w	r3, r1, r2
 80075ec:	f1c2 0120 	rsb	r1, r2, #32
 80075f0:	fa20 f101 	lsr.w	r1, r0, r1
 80075f4:	fa0c fc02 	lsl.w	ip, ip, r2
 80075f8:	ea41 0803 	orr.w	r8, r1, r3
 80075fc:	4094      	lsls	r4, r2
 80075fe:	ea4f 411c 	mov.w	r1, ip, lsr #16
 8007602:	fbb8 f7f1 	udiv	r7, r8, r1
 8007606:	fa1f fe8c 	uxth.w	lr, ip
 800760a:	fb01 8817 	mls	r8, r1, r7, r8
 800760e:	fb07 f00e 	mul.w	r0, r7, lr
 8007612:	0c23      	lsrs	r3, r4, #16
 8007614:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8007618:	4298      	cmp	r0, r3
 800761a:	d90a      	bls.n	8007632 <__udivmoddi4+0x66>
 800761c:	eb1c 0303 	adds.w	r3, ip, r3
 8007620:	f107 35ff 	add.w	r5, r7, #4294967295	; 0xffffffff
 8007624:	f080 811e 	bcs.w	8007864 <__udivmoddi4+0x298>
 8007628:	4298      	cmp	r0, r3
 800762a:	f240 811b 	bls.w	8007864 <__udivmoddi4+0x298>
 800762e:	3f02      	subs	r7, #2
 8007630:	4463      	add	r3, ip
 8007632:	1a1b      	subs	r3, r3, r0
 8007634:	fbb3 f0f1 	udiv	r0, r3, r1
 8007638:	fb01 3310 	mls	r3, r1, r0, r3
 800763c:	fb00 fe0e 	mul.w	lr, r0, lr
 8007640:	b2a4      	uxth	r4, r4
 8007642:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8007646:	45a6      	cmp	lr, r4
 8007648:	d90a      	bls.n	8007660 <__udivmoddi4+0x94>
 800764a:	eb1c 0404 	adds.w	r4, ip, r4
 800764e:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8007652:	f080 8109 	bcs.w	8007868 <__udivmoddi4+0x29c>
 8007656:	45a6      	cmp	lr, r4
 8007658:	f240 8106 	bls.w	8007868 <__udivmoddi4+0x29c>
 800765c:	4464      	add	r4, ip
 800765e:	3802      	subs	r0, #2
 8007660:	2100      	movs	r1, #0
 8007662:	eba4 040e 	sub.w	r4, r4, lr
 8007666:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
 800766a:	b11e      	cbz	r6, 8007674 <__udivmoddi4+0xa8>
 800766c:	2300      	movs	r3, #0
 800766e:	40d4      	lsrs	r4, r2
 8007670:	e9c6 4300 	strd	r4, r3, [r6]
 8007674:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007678:	428b      	cmp	r3, r1
 800767a:	d908      	bls.n	800768e <__udivmoddi4+0xc2>
 800767c:	2e00      	cmp	r6, #0
 800767e:	f000 80ee 	beq.w	800785e <__udivmoddi4+0x292>
 8007682:	2100      	movs	r1, #0
 8007684:	e9c6 0500 	strd	r0, r5, [r6]
 8007688:	4608      	mov	r0, r1
 800768a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800768e:	fab3 f183 	clz	r1, r3
 8007692:	2900      	cmp	r1, #0
 8007694:	d14a      	bne.n	800772c <__udivmoddi4+0x160>
 8007696:	42ab      	cmp	r3, r5
 8007698:	d302      	bcc.n	80076a0 <__udivmoddi4+0xd4>
 800769a:	4282      	cmp	r2, r0
 800769c:	f200 80fc 	bhi.w	8007898 <__udivmoddi4+0x2cc>
 80076a0:	1a84      	subs	r4, r0, r2
 80076a2:	eb65 0303 	sbc.w	r3, r5, r3
 80076a6:	2001      	movs	r0, #1
 80076a8:	4698      	mov	r8, r3
 80076aa:	2e00      	cmp	r6, #0
 80076ac:	d0e2      	beq.n	8007674 <__udivmoddi4+0xa8>
 80076ae:	e9c6 4800 	strd	r4, r8, [r6]
 80076b2:	e7df      	b.n	8007674 <__udivmoddi4+0xa8>
 80076b4:	b902      	cbnz	r2, 80076b8 <__udivmoddi4+0xec>
 80076b6:	deff      	udf	#255	; 0xff
 80076b8:	fab2 f282 	clz	r2, r2
 80076bc:	2a00      	cmp	r2, #0
 80076be:	f040 8091 	bne.w	80077e4 <__udivmoddi4+0x218>
 80076c2:	eba1 000c 	sub.w	r0, r1, ip
 80076c6:	2101      	movs	r1, #1
 80076c8:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80076cc:	fa1f fe8c 	uxth.w	lr, ip
 80076d0:	fbb0 f3f7 	udiv	r3, r0, r7
 80076d4:	fb07 0013 	mls	r0, r7, r3, r0
 80076d8:	0c25      	lsrs	r5, r4, #16
 80076da:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
 80076de:	fb0e f003 	mul.w	r0, lr, r3
 80076e2:	42a8      	cmp	r0, r5
 80076e4:	d908      	bls.n	80076f8 <__udivmoddi4+0x12c>
 80076e6:	eb1c 0505 	adds.w	r5, ip, r5
 80076ea:	f103 38ff 	add.w	r8, r3, #4294967295	; 0xffffffff
 80076ee:	d202      	bcs.n	80076f6 <__udivmoddi4+0x12a>
 80076f0:	42a8      	cmp	r0, r5
 80076f2:	f200 80ce 	bhi.w	8007892 <__udivmoddi4+0x2c6>
 80076f6:	4643      	mov	r3, r8
 80076f8:	1a2d      	subs	r5, r5, r0
 80076fa:	fbb5 f0f7 	udiv	r0, r5, r7
 80076fe:	fb07 5510 	mls	r5, r7, r0, r5
 8007702:	fb0e fe00 	mul.w	lr, lr, r0
 8007706:	b2a4      	uxth	r4, r4
 8007708:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 800770c:	45a6      	cmp	lr, r4
 800770e:	d908      	bls.n	8007722 <__udivmoddi4+0x156>
 8007710:	eb1c 0404 	adds.w	r4, ip, r4
 8007714:	f100 35ff 	add.w	r5, r0, #4294967295	; 0xffffffff
 8007718:	d202      	bcs.n	8007720 <__udivmoddi4+0x154>
 800771a:	45a6      	cmp	lr, r4
 800771c:	f200 80b6 	bhi.w	800788c <__udivmoddi4+0x2c0>
 8007720:	4628      	mov	r0, r5
 8007722:	eba4 040e 	sub.w	r4, r4, lr
 8007726:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 800772a:	e79e      	b.n	800766a <__udivmoddi4+0x9e>
 800772c:	f1c1 0720 	rsb	r7, r1, #32
 8007730:	408b      	lsls	r3, r1
 8007732:	fa22 fc07 	lsr.w	ip, r2, r7
 8007736:	ea4c 0c03 	orr.w	ip, ip, r3
 800773a:	fa25 fa07 	lsr.w	sl, r5, r7
 800773e:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8007742:	fbba f8f9 	udiv	r8, sl, r9
 8007746:	fa20 f307 	lsr.w	r3, r0, r7
 800774a:	fb09 aa18 	mls	sl, r9, r8, sl
 800774e:	408d      	lsls	r5, r1
 8007750:	fa1f fe8c 	uxth.w	lr, ip
 8007754:	431d      	orrs	r5, r3
 8007756:	fa00 f301 	lsl.w	r3, r0, r1
 800775a:	fb08 f00e 	mul.w	r0, r8, lr
 800775e:	0c2c      	lsrs	r4, r5, #16
 8007760:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
 8007764:	42a0      	cmp	r0, r4
 8007766:	fa02 f201 	lsl.w	r2, r2, r1
 800776a:	d90b      	bls.n	8007784 <__udivmoddi4+0x1b8>
 800776c:	eb1c 0404 	adds.w	r4, ip, r4
 8007770:	f108 3aff 	add.w	sl, r8, #4294967295	; 0xffffffff
 8007774:	f080 8088 	bcs.w	8007888 <__udivmoddi4+0x2bc>
 8007778:	42a0      	cmp	r0, r4
 800777a:	f240 8085 	bls.w	8007888 <__udivmoddi4+0x2bc>
 800777e:	f1a8 0802 	sub.w	r8, r8, #2
 8007782:	4464      	add	r4, ip
 8007784:	1a24      	subs	r4, r4, r0
 8007786:	fbb4 f0f9 	udiv	r0, r4, r9
 800778a:	fb09 4410 	mls	r4, r9, r0, r4
 800778e:	fb00 fe0e 	mul.w	lr, r0, lr
 8007792:	b2ad      	uxth	r5, r5
 8007794:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8007798:	45a6      	cmp	lr, r4
 800779a:	d908      	bls.n	80077ae <__udivmoddi4+0x1e2>
 800779c:	eb1c 0404 	adds.w	r4, ip, r4
 80077a0:	f100 35ff 	add.w	r5, r0, #4294967295	; 0xffffffff
 80077a4:	d26c      	bcs.n	8007880 <__udivmoddi4+0x2b4>
 80077a6:	45a6      	cmp	lr, r4
 80077a8:	d96a      	bls.n	8007880 <__udivmoddi4+0x2b4>
 80077aa:	3802      	subs	r0, #2
 80077ac:	4464      	add	r4, ip
 80077ae:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 80077b2:	fba0 9502 	umull	r9, r5, r0, r2
 80077b6:	eba4 040e 	sub.w	r4, r4, lr
 80077ba:	42ac      	cmp	r4, r5
 80077bc:	46c8      	mov	r8, r9
 80077be:	46ae      	mov	lr, r5
 80077c0:	d356      	bcc.n	8007870 <__udivmoddi4+0x2a4>
 80077c2:	d053      	beq.n	800786c <__udivmoddi4+0x2a0>
 80077c4:	2e00      	cmp	r6, #0
 80077c6:	d069      	beq.n	800789c <__udivmoddi4+0x2d0>
 80077c8:	ebb3 0208 	subs.w	r2, r3, r8
 80077cc:	eb64 040e 	sbc.w	r4, r4, lr
 80077d0:	fa22 f301 	lsr.w	r3, r2, r1
 80077d4:	fa04 f707 	lsl.w	r7, r4, r7
 80077d8:	431f      	orrs	r7, r3
 80077da:	40cc      	lsrs	r4, r1
 80077dc:	e9c6 7400 	strd	r7, r4, [r6]
 80077e0:	2100      	movs	r1, #0
 80077e2:	e747      	b.n	8007674 <__udivmoddi4+0xa8>
 80077e4:	fa0c fc02 	lsl.w	ip, ip, r2
 80077e8:	f1c2 0120 	rsb	r1, r2, #32
 80077ec:	fa25 f301 	lsr.w	r3, r5, r1
 80077f0:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80077f4:	fa20 f101 	lsr.w	r1, r0, r1
 80077f8:	4095      	lsls	r5, r2
 80077fa:	430d      	orrs	r5, r1
 80077fc:	fbb3 f1f7 	udiv	r1, r3, r7
 8007800:	fb07 3311 	mls	r3, r7, r1, r3
 8007804:	fa1f fe8c 	uxth.w	lr, ip
 8007808:	0c28      	lsrs	r0, r5, #16
 800780a:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 800780e:	fb01 f30e 	mul.w	r3, r1, lr
 8007812:	4283      	cmp	r3, r0
 8007814:	fa04 f402 	lsl.w	r4, r4, r2
 8007818:	d908      	bls.n	800782c <__udivmoddi4+0x260>
 800781a:	eb1c 0000 	adds.w	r0, ip, r0
 800781e:	f101 38ff 	add.w	r8, r1, #4294967295	; 0xffffffff
 8007822:	d22f      	bcs.n	8007884 <__udivmoddi4+0x2b8>
 8007824:	4283      	cmp	r3, r0
 8007826:	d92d      	bls.n	8007884 <__udivmoddi4+0x2b8>
 8007828:	3902      	subs	r1, #2
 800782a:	4460      	add	r0, ip
 800782c:	1ac0      	subs	r0, r0, r3
 800782e:	fbb0 f3f7 	udiv	r3, r0, r7
 8007832:	fb07 0013 	mls	r0, r7, r3, r0
 8007836:	b2ad      	uxth	r5, r5
 8007838:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
 800783c:	fb03 f00e 	mul.w	r0, r3, lr
 8007840:	42a8      	cmp	r0, r5
 8007842:	d908      	bls.n	8007856 <__udivmoddi4+0x28a>
 8007844:	eb1c 0505 	adds.w	r5, ip, r5
 8007848:	f103 38ff 	add.w	r8, r3, #4294967295	; 0xffffffff
 800784c:	d216      	bcs.n	800787c <__udivmoddi4+0x2b0>
 800784e:	42a8      	cmp	r0, r5
 8007850:	d914      	bls.n	800787c <__udivmoddi4+0x2b0>
 8007852:	3b02      	subs	r3, #2
 8007854:	4465      	add	r5, ip
 8007856:	1a28      	subs	r0, r5, r0
 8007858:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 800785c:	e738      	b.n	80076d0 <__udivmoddi4+0x104>
 800785e:	4631      	mov	r1, r6
 8007860:	4630      	mov	r0, r6
 8007862:	e707      	b.n	8007674 <__udivmoddi4+0xa8>
 8007864:	462f      	mov	r7, r5
 8007866:	e6e4      	b.n	8007632 <__udivmoddi4+0x66>
 8007868:	4618      	mov	r0, r3
 800786a:	e6f9      	b.n	8007660 <__udivmoddi4+0x94>
 800786c:	454b      	cmp	r3, r9
 800786e:	d2a9      	bcs.n	80077c4 <__udivmoddi4+0x1f8>
 8007870:	ebb9 0802 	subs.w	r8, r9, r2
 8007874:	eb65 0e0c 	sbc.w	lr, r5, ip
 8007878:	3801      	subs	r0, #1
 800787a:	e7a3      	b.n	80077c4 <__udivmoddi4+0x1f8>
 800787c:	4643      	mov	r3, r8
 800787e:	e7ea      	b.n	8007856 <__udivmoddi4+0x28a>
 8007880:	4628      	mov	r0, r5
 8007882:	e794      	b.n	80077ae <__udivmoddi4+0x1e2>
 8007884:	4641      	mov	r1, r8
 8007886:	e7d1      	b.n	800782c <__udivmoddi4+0x260>
 8007888:	46d0      	mov	r8, sl
 800788a:	e77b      	b.n	8007784 <__udivmoddi4+0x1b8>
 800788c:	4464      	add	r4, ip
 800788e:	3802      	subs	r0, #2
 8007890:	e747      	b.n	8007722 <__udivmoddi4+0x156>
 8007892:	3b02      	subs	r3, #2
 8007894:	4465      	add	r5, ip
 8007896:	e72f      	b.n	80076f8 <__udivmoddi4+0x12c>
 8007898:	4608      	mov	r0, r1
 800789a:	e706      	b.n	80076aa <__udivmoddi4+0xde>
 800789c:	4631      	mov	r1, r6
 800789e:	e6e9      	b.n	8007674 <__udivmoddi4+0xa8>

080078a0 <__aeabi_idiv0>:
 80078a0:	4770      	bx	lr
 80078a2:	bf00      	nop

080078a4 <__aeabi_drsub>:
 80078a4:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80078a8:	e002      	b.n	80078b0 <__adddf3>
 80078aa:	bf00      	nop

080078ac <__aeabi_dsub>:
 80078ac:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080078b0 <__adddf3>:
 80078b0:	b530      	push	{r4, r5, lr}
 80078b2:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80078b6:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80078ba:	ea94 0f05 	teq	r4, r5
 80078be:	bf08      	it	eq
 80078c0:	ea90 0f02 	teqeq	r0, r2
 80078c4:	bf1f      	itttt	ne
 80078c6:	ea54 0c00 	orrsne.w	ip, r4, r0
 80078ca:	ea55 0c02 	orrsne.w	ip, r5, r2
 80078ce:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80078d2:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80078d6:	f000 80e2 	beq.w	8007a9e <__adddf3+0x1ee>
 80078da:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80078de:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80078e2:	bfb8      	it	lt
 80078e4:	426d      	neglt	r5, r5
 80078e6:	dd0c      	ble.n	8007902 <__adddf3+0x52>
 80078e8:	442c      	add	r4, r5
 80078ea:	ea80 0202 	eor.w	r2, r0, r2
 80078ee:	ea81 0303 	eor.w	r3, r1, r3
 80078f2:	ea82 0000 	eor.w	r0, r2, r0
 80078f6:	ea83 0101 	eor.w	r1, r3, r1
 80078fa:	ea80 0202 	eor.w	r2, r0, r2
 80078fe:	ea81 0303 	eor.w	r3, r1, r3
 8007902:	2d36      	cmp	r5, #54	; 0x36
 8007904:	bf88      	it	hi
 8007906:	bd30      	pophi	{r4, r5, pc}
 8007908:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 800790c:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8007910:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8007914:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8007918:	d002      	beq.n	8007920 <__adddf3+0x70>
 800791a:	4240      	negs	r0, r0
 800791c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8007920:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8007924:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8007928:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 800792c:	d002      	beq.n	8007934 <__adddf3+0x84>
 800792e:	4252      	negs	r2, r2
 8007930:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8007934:	ea94 0f05 	teq	r4, r5
 8007938:	f000 80a7 	beq.w	8007a8a <__adddf3+0x1da>
 800793c:	f1a4 0401 	sub.w	r4, r4, #1
 8007940:	f1d5 0e20 	rsbs	lr, r5, #32
 8007944:	db0d      	blt.n	8007962 <__adddf3+0xb2>
 8007946:	fa02 fc0e 	lsl.w	ip, r2, lr
 800794a:	fa22 f205 	lsr.w	r2, r2, r5
 800794e:	1880      	adds	r0, r0, r2
 8007950:	f141 0100 	adc.w	r1, r1, #0
 8007954:	fa03 f20e 	lsl.w	r2, r3, lr
 8007958:	1880      	adds	r0, r0, r2
 800795a:	fa43 f305 	asr.w	r3, r3, r5
 800795e:	4159      	adcs	r1, r3
 8007960:	e00e      	b.n	8007980 <__adddf3+0xd0>
 8007962:	f1a5 0520 	sub.w	r5, r5, #32
 8007966:	f10e 0e20 	add.w	lr, lr, #32
 800796a:	2a01      	cmp	r2, #1
 800796c:	fa03 fc0e 	lsl.w	ip, r3, lr
 8007970:	bf28      	it	cs
 8007972:	f04c 0c02 	orrcs.w	ip, ip, #2
 8007976:	fa43 f305 	asr.w	r3, r3, r5
 800797a:	18c0      	adds	r0, r0, r3
 800797c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8007980:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8007984:	d507      	bpl.n	8007996 <__adddf3+0xe6>
 8007986:	f04f 0e00 	mov.w	lr, #0
 800798a:	f1dc 0c00 	rsbs	ip, ip, #0
 800798e:	eb7e 0000 	sbcs.w	r0, lr, r0
 8007992:	eb6e 0101 	sbc.w	r1, lr, r1
 8007996:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 800799a:	d31b      	bcc.n	80079d4 <__adddf3+0x124>
 800799c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80079a0:	d30c      	bcc.n	80079bc <__adddf3+0x10c>
 80079a2:	0849      	lsrs	r1, r1, #1
 80079a4:	ea5f 0030 	movs.w	r0, r0, rrx
 80079a8:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80079ac:	f104 0401 	add.w	r4, r4, #1
 80079b0:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80079b4:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80079b8:	f080 809a 	bcs.w	8007af0 <__adddf3+0x240>
 80079bc:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80079c0:	bf08      	it	eq
 80079c2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80079c6:	f150 0000 	adcs.w	r0, r0, #0
 80079ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80079ce:	ea41 0105 	orr.w	r1, r1, r5
 80079d2:	bd30      	pop	{r4, r5, pc}
 80079d4:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80079d8:	4140      	adcs	r0, r0
 80079da:	eb41 0101 	adc.w	r1, r1, r1
 80079de:	3c01      	subs	r4, #1
 80079e0:	bf28      	it	cs
 80079e2:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80079e6:	d2e9      	bcs.n	80079bc <__adddf3+0x10c>
 80079e8:	f091 0f00 	teq	r1, #0
 80079ec:	bf04      	itt	eq
 80079ee:	4601      	moveq	r1, r0
 80079f0:	2000      	moveq	r0, #0
 80079f2:	fab1 f381 	clz	r3, r1
 80079f6:	bf08      	it	eq
 80079f8:	3320      	addeq	r3, #32
 80079fa:	f1a3 030b 	sub.w	r3, r3, #11
 80079fe:	f1b3 0220 	subs.w	r2, r3, #32
 8007a02:	da0c      	bge.n	8007a1e <__adddf3+0x16e>
 8007a04:	320c      	adds	r2, #12
 8007a06:	dd08      	ble.n	8007a1a <__adddf3+0x16a>
 8007a08:	f102 0c14 	add.w	ip, r2, #20
 8007a0c:	f1c2 020c 	rsb	r2, r2, #12
 8007a10:	fa01 f00c 	lsl.w	r0, r1, ip
 8007a14:	fa21 f102 	lsr.w	r1, r1, r2
 8007a18:	e00c      	b.n	8007a34 <__adddf3+0x184>
 8007a1a:	f102 0214 	add.w	r2, r2, #20
 8007a1e:	bfd8      	it	le
 8007a20:	f1c2 0c20 	rsble	ip, r2, #32
 8007a24:	fa01 f102 	lsl.w	r1, r1, r2
 8007a28:	fa20 fc0c 	lsr.w	ip, r0, ip
 8007a2c:	bfdc      	itt	le
 8007a2e:	ea41 010c 	orrle.w	r1, r1, ip
 8007a32:	4090      	lslle	r0, r2
 8007a34:	1ae4      	subs	r4, r4, r3
 8007a36:	bfa2      	ittt	ge
 8007a38:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8007a3c:	4329      	orrge	r1, r5
 8007a3e:	bd30      	popge	{r4, r5, pc}
 8007a40:	ea6f 0404 	mvn.w	r4, r4
 8007a44:	3c1f      	subs	r4, #31
 8007a46:	da1c      	bge.n	8007a82 <__adddf3+0x1d2>
 8007a48:	340c      	adds	r4, #12
 8007a4a:	dc0e      	bgt.n	8007a6a <__adddf3+0x1ba>
 8007a4c:	f104 0414 	add.w	r4, r4, #20
 8007a50:	f1c4 0220 	rsb	r2, r4, #32
 8007a54:	fa20 f004 	lsr.w	r0, r0, r4
 8007a58:	fa01 f302 	lsl.w	r3, r1, r2
 8007a5c:	ea40 0003 	orr.w	r0, r0, r3
 8007a60:	fa21 f304 	lsr.w	r3, r1, r4
 8007a64:	ea45 0103 	orr.w	r1, r5, r3
 8007a68:	bd30      	pop	{r4, r5, pc}
 8007a6a:	f1c4 040c 	rsb	r4, r4, #12
 8007a6e:	f1c4 0220 	rsb	r2, r4, #32
 8007a72:	fa20 f002 	lsr.w	r0, r0, r2
 8007a76:	fa01 f304 	lsl.w	r3, r1, r4
 8007a7a:	ea40 0003 	orr.w	r0, r0, r3
 8007a7e:	4629      	mov	r1, r5
 8007a80:	bd30      	pop	{r4, r5, pc}
 8007a82:	fa21 f004 	lsr.w	r0, r1, r4
 8007a86:	4629      	mov	r1, r5
 8007a88:	bd30      	pop	{r4, r5, pc}
 8007a8a:	f094 0f00 	teq	r4, #0
 8007a8e:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 8007a92:	bf06      	itte	eq
 8007a94:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8007a98:	3401      	addeq	r4, #1
 8007a9a:	3d01      	subne	r5, #1
 8007a9c:	e74e      	b.n	800793c <__adddf3+0x8c>
 8007a9e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8007aa2:	bf18      	it	ne
 8007aa4:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8007aa8:	d029      	beq.n	8007afe <__adddf3+0x24e>
 8007aaa:	ea94 0f05 	teq	r4, r5
 8007aae:	bf08      	it	eq
 8007ab0:	ea90 0f02 	teqeq	r0, r2
 8007ab4:	d005      	beq.n	8007ac2 <__adddf3+0x212>
 8007ab6:	ea54 0c00 	orrs.w	ip, r4, r0
 8007aba:	bf04      	itt	eq
 8007abc:	4619      	moveq	r1, r3
 8007abe:	4610      	moveq	r0, r2
 8007ac0:	bd30      	pop	{r4, r5, pc}
 8007ac2:	ea91 0f03 	teq	r1, r3
 8007ac6:	bf1e      	ittt	ne
 8007ac8:	2100      	movne	r1, #0
 8007aca:	2000      	movne	r0, #0
 8007acc:	bd30      	popne	{r4, r5, pc}
 8007ace:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8007ad2:	d105      	bne.n	8007ae0 <__adddf3+0x230>
 8007ad4:	0040      	lsls	r0, r0, #1
 8007ad6:	4149      	adcs	r1, r1
 8007ad8:	bf28      	it	cs
 8007ada:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 8007ade:	bd30      	pop	{r4, r5, pc}
 8007ae0:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8007ae4:	bf3c      	itt	cc
 8007ae6:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8007aea:	bd30      	popcc	{r4, r5, pc}
 8007aec:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8007af0:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8007af4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8007af8:	f04f 0000 	mov.w	r0, #0
 8007afc:	bd30      	pop	{r4, r5, pc}
 8007afe:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8007b02:	bf1a      	itte	ne
 8007b04:	4619      	movne	r1, r3
 8007b06:	4610      	movne	r0, r2
 8007b08:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8007b0c:	bf1c      	itt	ne
 8007b0e:	460b      	movne	r3, r1
 8007b10:	4602      	movne	r2, r0
 8007b12:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8007b16:	bf06      	itte	eq
 8007b18:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8007b1c:	ea91 0f03 	teqeq	r1, r3
 8007b20:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8007b24:	bd30      	pop	{r4, r5, pc}
 8007b26:	bf00      	nop

08007b28 <__aeabi_ui2d>:
 8007b28:	f090 0f00 	teq	r0, #0
 8007b2c:	bf04      	itt	eq
 8007b2e:	2100      	moveq	r1, #0
 8007b30:	4770      	bxeq	lr
 8007b32:	b530      	push	{r4, r5, lr}
 8007b34:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8007b38:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8007b3c:	f04f 0500 	mov.w	r5, #0
 8007b40:	f04f 0100 	mov.w	r1, #0
 8007b44:	e750      	b.n	80079e8 <__adddf3+0x138>
 8007b46:	bf00      	nop

08007b48 <__aeabi_i2d>:
 8007b48:	f090 0f00 	teq	r0, #0
 8007b4c:	bf04      	itt	eq
 8007b4e:	2100      	moveq	r1, #0
 8007b50:	4770      	bxeq	lr
 8007b52:	b530      	push	{r4, r5, lr}
 8007b54:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8007b58:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8007b5c:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8007b60:	bf48      	it	mi
 8007b62:	4240      	negmi	r0, r0
 8007b64:	f04f 0100 	mov.w	r1, #0
 8007b68:	e73e      	b.n	80079e8 <__adddf3+0x138>
 8007b6a:	bf00      	nop

08007b6c <__aeabi_f2d>:
 8007b6c:	0042      	lsls	r2, r0, #1
 8007b6e:	ea4f 01e2 	mov.w	r1, r2, asr #3
 8007b72:	ea4f 0131 	mov.w	r1, r1, rrx
 8007b76:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8007b7a:	bf1f      	itttt	ne
 8007b7c:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 8007b80:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8007b84:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8007b88:	4770      	bxne	lr
 8007b8a:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 8007b8e:	bf08      	it	eq
 8007b90:	4770      	bxeq	lr
 8007b92:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8007b96:	bf04      	itt	eq
 8007b98:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8007b9c:	4770      	bxeq	lr
 8007b9e:	b530      	push	{r4, r5, lr}
 8007ba0:	f44f 7460 	mov.w	r4, #896	; 0x380
 8007ba4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8007ba8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8007bac:	e71c      	b.n	80079e8 <__adddf3+0x138>
 8007bae:	bf00      	nop

08007bb0 <__aeabi_ul2d>:
 8007bb0:	ea50 0201 	orrs.w	r2, r0, r1
 8007bb4:	bf08      	it	eq
 8007bb6:	4770      	bxeq	lr
 8007bb8:	b530      	push	{r4, r5, lr}
 8007bba:	f04f 0500 	mov.w	r5, #0
 8007bbe:	e00a      	b.n	8007bd6 <__aeabi_l2d+0x16>

08007bc0 <__aeabi_l2d>:
 8007bc0:	ea50 0201 	orrs.w	r2, r0, r1
 8007bc4:	bf08      	it	eq
 8007bc6:	4770      	bxeq	lr
 8007bc8:	b530      	push	{r4, r5, lr}
 8007bca:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 8007bce:	d502      	bpl.n	8007bd6 <__aeabi_l2d+0x16>
 8007bd0:	4240      	negs	r0, r0
 8007bd2:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8007bd6:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8007bda:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8007bde:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 8007be2:	f43f aed8 	beq.w	8007996 <__adddf3+0xe6>
 8007be6:	f04f 0203 	mov.w	r2, #3
 8007bea:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8007bee:	bf18      	it	ne
 8007bf0:	3203      	addne	r2, #3
 8007bf2:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8007bf6:	bf18      	it	ne
 8007bf8:	3203      	addne	r2, #3
 8007bfa:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 8007bfe:	f1c2 0320 	rsb	r3, r2, #32
 8007c02:	fa00 fc03 	lsl.w	ip, r0, r3
 8007c06:	fa20 f002 	lsr.w	r0, r0, r2
 8007c0a:	fa01 fe03 	lsl.w	lr, r1, r3
 8007c0e:	ea40 000e 	orr.w	r0, r0, lr
 8007c12:	fa21 f102 	lsr.w	r1, r1, r2
 8007c16:	4414      	add	r4, r2
 8007c18:	e6bd      	b.n	8007996 <__adddf3+0xe6>
 8007c1a:	bf00      	nop

08007c1c <__aeabi_fmul>:
 8007c1c:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8007c20:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8007c24:	bf1e      	ittt	ne
 8007c26:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8007c2a:	ea92 0f0c 	teqne	r2, ip
 8007c2e:	ea93 0f0c 	teqne	r3, ip
 8007c32:	d06f      	beq.n	8007d14 <__aeabi_fmul+0xf8>
 8007c34:	441a      	add	r2, r3
 8007c36:	ea80 0c01 	eor.w	ip, r0, r1
 8007c3a:	0240      	lsls	r0, r0, #9
 8007c3c:	bf18      	it	ne
 8007c3e:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 8007c42:	d01e      	beq.n	8007c82 <__aeabi_fmul+0x66>
 8007c44:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8007c48:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 8007c4c:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 8007c50:	fba0 3101 	umull	r3, r1, r0, r1
 8007c54:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8007c58:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 8007c5c:	bf3e      	ittt	cc
 8007c5e:	0049      	lslcc	r1, r1, #1
 8007c60:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 8007c64:	005b      	lslcc	r3, r3, #1
 8007c66:	ea40 0001 	orr.w	r0, r0, r1
 8007c6a:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
 8007c6e:	2afd      	cmp	r2, #253	; 0xfd
 8007c70:	d81d      	bhi.n	8007cae <__aeabi_fmul+0x92>
 8007c72:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8007c76:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8007c7a:	bf08      	it	eq
 8007c7c:	f020 0001 	biceq.w	r0, r0, #1
 8007c80:	4770      	bx	lr
 8007c82:	f090 0f00 	teq	r0, #0
 8007c86:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8007c8a:	bf08      	it	eq
 8007c8c:	0249      	lsleq	r1, r1, #9
 8007c8e:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8007c92:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 8007c96:	3a7f      	subs	r2, #127	; 0x7f
 8007c98:	bfc2      	ittt	gt
 8007c9a:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8007c9e:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8007ca2:	4770      	bxgt	lr
 8007ca4:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007ca8:	f04f 0300 	mov.w	r3, #0
 8007cac:	3a01      	subs	r2, #1
 8007cae:	dc5d      	bgt.n	8007d6c <__aeabi_fmul+0x150>
 8007cb0:	f112 0f19 	cmn.w	r2, #25
 8007cb4:	bfdc      	itt	le
 8007cb6:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
 8007cba:	4770      	bxle	lr
 8007cbc:	f1c2 0200 	rsb	r2, r2, #0
 8007cc0:	0041      	lsls	r1, r0, #1
 8007cc2:	fa21 f102 	lsr.w	r1, r1, r2
 8007cc6:	f1c2 0220 	rsb	r2, r2, #32
 8007cca:	fa00 fc02 	lsl.w	ip, r0, r2
 8007cce:	ea5f 0031 	movs.w	r0, r1, rrx
 8007cd2:	f140 0000 	adc.w	r0, r0, #0
 8007cd6:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 8007cda:	bf08      	it	eq
 8007cdc:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8007ce0:	4770      	bx	lr
 8007ce2:	f092 0f00 	teq	r2, #0
 8007ce6:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8007cea:	bf02      	ittt	eq
 8007cec:	0040      	lsleq	r0, r0, #1
 8007cee:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8007cf2:	3a01      	subeq	r2, #1
 8007cf4:	d0f9      	beq.n	8007cea <__aeabi_fmul+0xce>
 8007cf6:	ea40 000c 	orr.w	r0, r0, ip
 8007cfa:	f093 0f00 	teq	r3, #0
 8007cfe:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8007d02:	bf02      	ittt	eq
 8007d04:	0049      	lsleq	r1, r1, #1
 8007d06:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8007d0a:	3b01      	subeq	r3, #1
 8007d0c:	d0f9      	beq.n	8007d02 <__aeabi_fmul+0xe6>
 8007d0e:	ea41 010c 	orr.w	r1, r1, ip
 8007d12:	e78f      	b.n	8007c34 <__aeabi_fmul+0x18>
 8007d14:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8007d18:	ea92 0f0c 	teq	r2, ip
 8007d1c:	bf18      	it	ne
 8007d1e:	ea93 0f0c 	teqne	r3, ip
 8007d22:	d00a      	beq.n	8007d3a <__aeabi_fmul+0x11e>
 8007d24:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8007d28:	bf18      	it	ne
 8007d2a:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8007d2e:	d1d8      	bne.n	8007ce2 <__aeabi_fmul+0xc6>
 8007d30:	ea80 0001 	eor.w	r0, r0, r1
 8007d34:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8007d38:	4770      	bx	lr
 8007d3a:	f090 0f00 	teq	r0, #0
 8007d3e:	bf17      	itett	ne
 8007d40:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
 8007d44:	4608      	moveq	r0, r1
 8007d46:	f091 0f00 	teqne	r1, #0
 8007d4a:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
 8007d4e:	d014      	beq.n	8007d7a <__aeabi_fmul+0x15e>
 8007d50:	ea92 0f0c 	teq	r2, ip
 8007d54:	d101      	bne.n	8007d5a <__aeabi_fmul+0x13e>
 8007d56:	0242      	lsls	r2, r0, #9
 8007d58:	d10f      	bne.n	8007d7a <__aeabi_fmul+0x15e>
 8007d5a:	ea93 0f0c 	teq	r3, ip
 8007d5e:	d103      	bne.n	8007d68 <__aeabi_fmul+0x14c>
 8007d60:	024b      	lsls	r3, r1, #9
 8007d62:	bf18      	it	ne
 8007d64:	4608      	movne	r0, r1
 8007d66:	d108      	bne.n	8007d7a <__aeabi_fmul+0x15e>
 8007d68:	ea80 0001 	eor.w	r0, r0, r1
 8007d6c:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8007d70:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8007d74:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007d78:	4770      	bx	lr
 8007d7a:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8007d7e:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
 8007d82:	4770      	bx	lr

08007d84 <__aeabi_fdiv>:
 8007d84:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8007d88:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8007d8c:	bf1e      	ittt	ne
 8007d8e:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8007d92:	ea92 0f0c 	teqne	r2, ip
 8007d96:	ea93 0f0c 	teqne	r3, ip
 8007d9a:	d069      	beq.n	8007e70 <__aeabi_fdiv+0xec>
 8007d9c:	eba2 0203 	sub.w	r2, r2, r3
 8007da0:	ea80 0c01 	eor.w	ip, r0, r1
 8007da4:	0249      	lsls	r1, r1, #9
 8007da6:	ea4f 2040 	mov.w	r0, r0, lsl #9
 8007daa:	d037      	beq.n	8007e1c <__aeabi_fdiv+0x98>
 8007dac:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8007db0:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 8007db4:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8007db8:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8007dbc:	428b      	cmp	r3, r1
 8007dbe:	bf38      	it	cc
 8007dc0:	005b      	lslcc	r3, r3, #1
 8007dc2:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
 8007dc6:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
 8007dca:	428b      	cmp	r3, r1
 8007dcc:	bf24      	itt	cs
 8007dce:	1a5b      	subcs	r3, r3, r1
 8007dd0:	ea40 000c 	orrcs.w	r0, r0, ip
 8007dd4:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 8007dd8:	bf24      	itt	cs
 8007dda:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 8007dde:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8007de2:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 8007de6:	bf24      	itt	cs
 8007de8:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 8007dec:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8007df0:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 8007df4:	bf24      	itt	cs
 8007df6:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 8007dfa:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8007dfe:	011b      	lsls	r3, r3, #4
 8007e00:	bf18      	it	ne
 8007e02:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 8007e06:	d1e0      	bne.n	8007dca <__aeabi_fdiv+0x46>
 8007e08:	2afd      	cmp	r2, #253	; 0xfd
 8007e0a:	f63f af50 	bhi.w	8007cae <__aeabi_fmul+0x92>
 8007e0e:	428b      	cmp	r3, r1
 8007e10:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8007e14:	bf08      	it	eq
 8007e16:	f020 0001 	biceq.w	r0, r0, #1
 8007e1a:	4770      	bx	lr
 8007e1c:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8007e20:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8007e24:	327f      	adds	r2, #127	; 0x7f
 8007e26:	bfc2      	ittt	gt
 8007e28:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8007e2c:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8007e30:	4770      	bxgt	lr
 8007e32:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8007e36:	f04f 0300 	mov.w	r3, #0
 8007e3a:	3a01      	subs	r2, #1
 8007e3c:	e737      	b.n	8007cae <__aeabi_fmul+0x92>
 8007e3e:	f092 0f00 	teq	r2, #0
 8007e42:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8007e46:	bf02      	ittt	eq
 8007e48:	0040      	lsleq	r0, r0, #1
 8007e4a:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8007e4e:	3a01      	subeq	r2, #1
 8007e50:	d0f9      	beq.n	8007e46 <__aeabi_fdiv+0xc2>
 8007e52:	ea40 000c 	orr.w	r0, r0, ip
 8007e56:	f093 0f00 	teq	r3, #0
 8007e5a:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8007e5e:	bf02      	ittt	eq
 8007e60:	0049      	lsleq	r1, r1, #1
 8007e62:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8007e66:	3b01      	subeq	r3, #1
 8007e68:	d0f9      	beq.n	8007e5e <__aeabi_fdiv+0xda>
 8007e6a:	ea41 010c 	orr.w	r1, r1, ip
 8007e6e:	e795      	b.n	8007d9c <__aeabi_fdiv+0x18>
 8007e70:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8007e74:	ea92 0f0c 	teq	r2, ip
 8007e78:	d108      	bne.n	8007e8c <__aeabi_fdiv+0x108>
 8007e7a:	0242      	lsls	r2, r0, #9
 8007e7c:	f47f af7d 	bne.w	8007d7a <__aeabi_fmul+0x15e>
 8007e80:	ea93 0f0c 	teq	r3, ip
 8007e84:	f47f af70 	bne.w	8007d68 <__aeabi_fmul+0x14c>
 8007e88:	4608      	mov	r0, r1
 8007e8a:	e776      	b.n	8007d7a <__aeabi_fmul+0x15e>
 8007e8c:	ea93 0f0c 	teq	r3, ip
 8007e90:	d104      	bne.n	8007e9c <__aeabi_fdiv+0x118>
 8007e92:	024b      	lsls	r3, r1, #9
 8007e94:	f43f af4c 	beq.w	8007d30 <__aeabi_fmul+0x114>
 8007e98:	4608      	mov	r0, r1
 8007e9a:	e76e      	b.n	8007d7a <__aeabi_fmul+0x15e>
 8007e9c:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8007ea0:	bf18      	it	ne
 8007ea2:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8007ea6:	d1ca      	bne.n	8007e3e <__aeabi_fdiv+0xba>
 8007ea8:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
 8007eac:	f47f af5c 	bne.w	8007d68 <__aeabi_fmul+0x14c>
 8007eb0:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
 8007eb4:	f47f af3c 	bne.w	8007d30 <__aeabi_fmul+0x114>
 8007eb8:	e75f      	b.n	8007d7a <__aeabi_fmul+0x15e>
 8007eba:	bf00      	nop

08007ebc <__popcountsi2>:
 8007ebc:	0843      	lsrs	r3, r0, #1
 8007ebe:	f003 3355 	and.w	r3, r3, #1431655765	; 0x55555555
 8007ec2:	1ac0      	subs	r0, r0, r3
 8007ec4:	0883      	lsrs	r3, r0, #2
 8007ec6:	f003 3333 	and.w	r3, r3, #858993459	; 0x33333333
 8007eca:	f000 3033 	and.w	r0, r0, #858993459	; 0x33333333
 8007ece:	4418      	add	r0, r3
 8007ed0:	eb00 1010 	add.w	r0, r0, r0, lsr #4
 8007ed4:	f000 300f 	and.w	r0, r0, #252645135	; 0xf0f0f0f
 8007ed8:	eb00 2000 	add.w	r0, r0, r0, lsl #8
 8007edc:	eb00 4000 	add.w	r0, r0, r0, lsl #16
 8007ee0:	0e00      	lsrs	r0, r0, #24
 8007ee2:	4770      	bx	lr

08007ee4 <Reset_Handler>:
 8007ee4:	2100      	movs	r1, #0
 8007ee6:	e003      	b.n	8007ef0 <DataInit>

08007ee8 <CopyData>:
 8007ee8:	4b0a      	ldr	r3, [pc, #40]	; (8007f14 <Zerobss+0x10>)
 8007eea:	585b      	ldr	r3, [r3, r1]
 8007eec:	5043      	str	r3, [r0, r1]
 8007eee:	3104      	adds	r1, #4

08007ef0 <DataInit>:
 8007ef0:	4809      	ldr	r0, [pc, #36]	; (8007f18 <Zerobss+0x14>)
 8007ef2:	4b0a      	ldr	r3, [pc, #40]	; (8007f1c <Zerobss+0x18>)
 8007ef4:	1842      	adds	r2, r0, r1
 8007ef6:	429a      	cmp	r2, r3
 8007ef8:	d3f6      	bcc.n	8007ee8 <CopyData>
 8007efa:	4a09      	ldr	r2, [pc, #36]	; (8007f20 <Zerobss+0x1c>)
 8007efc:	e002      	b.n	8007f04 <Zerobss>

08007efe <FillZerobss>:
 8007efe:	2300      	movs	r3, #0
 8007f00:	f842 3b04 	str.w	r3, [r2], #4

08007f04 <Zerobss>:
 8007f04:	4b07      	ldr	r3, [pc, #28]	; (8007f24 <Zerobss+0x20>)
 8007f06:	429a      	cmp	r2, r3
 8007f08:	d3f9      	bcc.n	8007efe <FillZerobss>
 8007f0a:	f00b fdd9 	bl	8013ac0 <SystemInit>
 8007f0e:	f000 f983 	bl	8008218 <main>
 8007f12:	4770      	bx	lr
 8007f14:	08017fac 	stmdaeq	r1, {r2, r3, r5, r7, r8, r9, sl, fp, ip, sp, lr}
 8007f18:	20000000 	andcs	r0, r0, r0
 8007f1c:	200000e8 	andcs	r0, r0, r8, ror #1
 8007f20:	200000e8 	andcs	r0, r0, r8, ror #1
 8007f24:	2001867c 	andcs	r8, r1, ip, ror r6

08007f28 <ADC0_1_IRQHandler>:
 8007f28:	e7fe      	b.n	8007f28 <ADC0_1_IRQHandler>

08007f2a <memcpy>:
 8007f2a:	b510      	push	{r4, lr}
 8007f2c:	1e43      	subs	r3, r0, #1
 8007f2e:	440a      	add	r2, r1
 8007f30:	4291      	cmp	r1, r2
 8007f32:	d004      	beq.n	8007f3e <memcpy+0x14>
 8007f34:	f811 4b01 	ldrb.w	r4, [r1], #1
 8007f38:	f803 4f01 	strb.w	r4, [r3, #1]!
 8007f3c:	e7f8      	b.n	8007f30 <memcpy+0x6>
 8007f3e:	bd10      	pop	{r4, pc}

08007f40 <DisplayHandler::~DisplayHandler()>:
 8007f40:	4770      	bx	lr

08007f42 <E131Reboot::~E131Reboot()>:
 8007f42:	4770      	bx	lr

08007f44 <PixelDmxStartStop::~PixelDmxStartStop()>:
 8007f44:	4770      	bx	lr
	...

08007f48 <PixelDmxStartStop::Start()>:
 8007f48:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8007f4c:	4b01      	ldr	r3, [pc, #4]	; (8007f54 <PixelDmxStartStop::Start()+0xc>)
 8007f4e:	f8c3 2c10 	str.w	r2, [r3, #3088]	; 0xc10
 8007f52:	4770      	bx	lr
 8007f54:	40010000 	andmi	r0, r1, r0

08007f58 <PixelDmxStartStop::Stop()>:
 8007f58:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8007f5c:	4b01      	ldr	r3, [pc, #4]	; (8007f64 <PixelDmxStartStop::Stop()+0xc>)
 8007f5e:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 8007f62:	4770      	bx	lr
 8007f64:	40010000 	andmi	r0, r1, r0

08007f68 <RDMNetDevice::CopyUID(unsigned char*)>:
 8007f68:	460b      	mov	r3, r1
 8007f6a:	2206      	movs	r2, #6
 8007f6c:	1d01      	adds	r1, r0, #4
 8007f6e:	4618      	mov	r0, r3
 8007f70:	f7ff bfdb 	b.w	8007f2a <memcpy>

08007f74 <non-virtual thunk to RDMNetDevice::CopyUID(unsigned char*)>:
 8007f74:	f1a0 00d0 	sub.w	r0, r0, #208	; 0xd0
 8007f78:	e7f6      	b.n	8007f68 <RDMNetDevice::CopyUID(unsigned char*)>
	...

08007f7c <RDMNetDevice::CopyCID(unsigned char*)>:
 8007f7c:	4608      	mov	r0, r1
 8007f7e:	2210      	movs	r2, #16
 8007f80:	4901      	ldr	r1, [pc, #4]	; (8007f88 <RDMNetDevice::CopyCID(unsigned char*)+0xc>)
 8007f82:	f7ff bfd2 	b.w	8007f2a <memcpy>
 8007f86:	bf00      	nop
 8007f88:	20003253 	andcs	r3, r0, r3, asr r2

08007f8c <non-virtual thunk to RDMNetDevice::CopyCID(unsigned char*)>:
 8007f8c:	f1a0 00d0 	sub.w	r0, r0, #208	; 0xd0
 8007f90:	e7f4      	b.n	8007f7c <RDMNetDevice::CopyCID(unsigned char*)>
 8007f92:	bf00      	nop

08007f94 <FactoryDefaults::~FactoryDefaults()>:
 8007f94:	4770      	bx	lr

08007f96 <Reboot::~Reboot()>:
 8007f96:	4770      	bx	lr

08007f98 <Reboot::~Reboot()>:
 8007f98:	b510      	push	{r4, lr}
 8007f9a:	4604      	mov	r4, r0
 8007f9c:	f00b fb38 	bl	8013610 <operator delete(void*)>
 8007fa0:	4620      	mov	r0, r4
 8007fa2:	bd10      	pop	{r4, pc}

08007fa4 <E131Reboot::~E131Reboot()>:
 8007fa4:	b510      	push	{r4, lr}
 8007fa6:	4604      	mov	r4, r0
 8007fa8:	f00b fb32 	bl	8013610 <operator delete(void*)>
 8007fac:	4620      	mov	r0, r4
 8007fae:	bd10      	pop	{r4, pc}

08007fb0 <DisplayHandler::~DisplayHandler()>:
 8007fb0:	b510      	push	{r4, lr}
 8007fb2:	4604      	mov	r4, r0
 8007fb4:	f00b fb2c 	bl	8013610 <operator delete(void*)>
 8007fb8:	4620      	mov	r0, r4
 8007fba:	bd10      	pop	{r4, pc}

08007fbc <PixelDmxStartStop::~PixelDmxStartStop()>:
 8007fbc:	b510      	push	{r4, lr}
 8007fbe:	4604      	mov	r4, r0
 8007fc0:	f00b fb26 	bl	8013610 <operator delete(void*)>
 8007fc4:	4620      	mov	r0, r4
 8007fc6:	bd10      	pop	{r4, pc}

08007fc8 <FactoryDefaults::~FactoryDefaults()>:
 8007fc8:	b510      	push	{r4, lr}
 8007fca:	4604      	mov	r4, r0
 8007fcc:	f00b fb20 	bl	8013610 <operator delete(void*)>
 8007fd0:	4620      	mov	r0, r4
 8007fd2:	bd10      	pop	{r4, pc}

08007fd4 <Reboot::Run()>:
 8007fd4:	4b01      	ldr	r3, [pc, #4]	; (8007fdc <Reboot::Run()+0x8>)
 8007fd6:	6818      	ldr	r0, [r3, #0]
 8007fd8:	f006 baba 	b.w	800e550 <WS28xxMulti::Blackout()>
 8007fdc:	2000ad90 	mulcs	r0, r0, sp

08007fe0 <E131Reboot::Run()>:
 8007fe0:	b510      	push	{r4, lr}
 8007fe2:	4c07      	ldr	r4, [pc, #28]	; (8008000 <E131Reboot::Run()+0x20>)
 8007fe4:	6820      	ldr	r0, [r4, #0]
 8007fe6:	f002 fac3 	bl	800a570 <E131Bridge::Stop()>
 8007fea:	6823      	ldr	r3, [r4, #0]
 8007fec:	6858      	ldr	r0, [r3, #4]
 8007fee:	b128      	cbz	r0, 8007ffc <E131Reboot::Run()+0x1c>
 8007ff0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007ff4:	6803      	ldr	r3, [r0, #0]
 8007ff6:	2101      	movs	r1, #1
 8007ff8:	695b      	ldr	r3, [r3, #20]
 8007ffa:	4718      	bx	r3
 8007ffc:	bd10      	pop	{r4, pc}
 8007ffe:	bf00      	nop
 8008000:	2000313c 	andcs	r3, r0, ip, lsr r1

08008004 <RDMNetDevice::LLRPHandleRdmCommand(unsigned char const*)>:
 8008004:	b510      	push	{r4, lr}
 8008006:	4c03      	ldr	r4, [pc, #12]	; (8008014 <RDMNetDevice::LLRPHandleRdmCommand(unsigned char const*)+0x10>)
 8008008:	30d4      	adds	r0, #212	; 0xd4
 800800a:	4622      	mov	r2, r4
 800800c:	f004 fb96 	bl	800c73c <RDMHandler::HandleData(unsigned char const*, unsigned char*)>
 8008010:	4620      	mov	r0, r4
 8008012:	bd10      	pop	{r4, pc}
 8008014:	20003154 	andcs	r3, r0, r4, asr r1

08008018 <non-virtual thunk to RDMNetDevice::LLRPHandleRdmCommand(unsigned char const*)>:
 8008018:	f1a0 00d0 	sub.w	r0, r0, #208	; 0xd0
 800801c:	e7f2      	b.n	8008004 <RDMNetDevice::LLRPHandleRdmCommand(unsigned char const*)>
 800801e:	bf00      	nop

08008020 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>:
 8008020:	b110      	cbz	r0, 8008028 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]+0x8>
 8008022:	6803      	ldr	r3, [r0, #0]
 8008024:	6a1b      	ldr	r3, [r3, #32]
 8008026:	4718      	bx	r3
 8008028:	4770      	bx	lr

0800802a <Display::PutChar(int) [clone .isra.0]>:
 800802a:	b110      	cbz	r0, 8008032 <Display::PutChar(int) [clone .isra.0]+0x8>
 800802c:	6803      	ldr	r3, [r0, #0]
 800802e:	695b      	ldr	r3, [r3, #20]
 8008030:	4718      	bx	r3
 8008032:	4770      	bx	lr

08008034 <DisplayHandler::Print(unsigned int)>:
 8008034:	b538      	push	{r3, r4, r5, lr}
 8008036:	7903      	ldrb	r3, [r0, #4]
 8008038:	b1f3      	cbz	r3, 8008078 <DisplayHandler::Print(unsigned int)+0x44>
 800803a:	2904      	cmp	r1, #4
 800803c:	bf98      	it	ls
 800803e:	4b0f      	ldrls	r3, [pc, #60]	; (800807c <DisplayHandler::Print(unsigned int)+0x48>)
 8008040:	4d0f      	ldr	r5, [pc, #60]	; (8008080 <DisplayHandler::Print(unsigned int)+0x4c>)
 8008042:	bf98      	it	ls
 8008044:	5c5c      	ldrbls	r4, [r3, r1]
 8008046:	682b      	ldr	r3, [r5, #0]
 8008048:	bf88      	it	hi
 800804a:	2455      	movhi	r4, #85	; 0x55
 800804c:	6998      	ldr	r0, [r3, #24]
 800804e:	b178      	cbz	r0, 8008070 <DisplayHandler::Print(unsigned int)+0x3c>
 8008050:	7901      	ldrb	r1, [r0, #4]
 8008052:	3901      	subs	r1, #1
 8008054:	b2c9      	uxtb	r1, r1
 8008056:	b168      	cbz	r0, 8008074 <DisplayHandler::Print(unsigned int)+0x40>
 8008058:	7942      	ldrb	r2, [r0, #5]
 800805a:	3a01      	subs	r2, #1
 800805c:	b2d2      	uxtb	r2, r2
 800805e:	f7ff ffdf 	bl	8008020 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 8008062:	682b      	ldr	r3, [r5, #0]
 8008064:	4621      	mov	r1, r4
 8008066:	6998      	ldr	r0, [r3, #24]
 8008068:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800806c:	f7ff bfdd 	b.w	800802a <Display::PutChar(int) [clone .isra.0]>
 8008070:	4601      	mov	r1, r0
 8008072:	e7ee      	b.n	8008052 <DisplayHandler::Print(unsigned int)+0x1e>
 8008074:	4602      	mov	r2, r0
 8008076:	e7f0      	b.n	800805a <DisplayHandler::Print(unsigned int)+0x26>
 8008078:	bd38      	pop	{r3, r4, r5, pc}
 800807a:	bf00      	nop
 800807c:	08015afc 	stmdaeq	r1, {r2, r3, r4, r5, r6, r7, r9, fp, ip, lr}
 8008080:	20013ce4 	andcs	r3, r1, r4, ror #25

08008084 <RDMNetDevice::~RDMNetDevice()>:
 8008084:	b510      	push	{r4, lr}
 8008086:	4604      	mov	r4, r0
 8008088:	4b05      	ldr	r3, [pc, #20]	; (80080a0 <RDMNetDevice::~RDMNetDevice()+0x1c>)
 800808a:	f840 3b8c 	str.w	r3, [r0], #140
 800808e:	f003 fdf1 	bl	800bc74 <RDMSubDevices::~RDMSubDevices()>
 8008092:	f104 0084 	add.w	r0, r4, #132	; 0x84
 8008096:	f003 fdcd 	bl	800bc34 <RDMSensors::~RDMSensors()>
 800809a:	4620      	mov	r0, r4
 800809c:	bd10      	pop	{r4, pc}
 800809e:	bf00      	nop
 80080a0:	08016ed8 	stmdaeq	r1, {r3, r4, r6, r7, r9, sl, fp, sp, lr}

080080a4 <non-virtual thunk to RDMNetDevice::~RDMNetDevice()>:
 80080a4:	f1a0 00d0 	sub.w	r0, r0, #208	; 0xd0
 80080a8:	e7ec      	b.n	8008084 <RDMNetDevice::~RDMNetDevice()>
 80080aa:	bf00      	nop

080080ac <RDMNetDevice::~RDMNetDevice()>:
 80080ac:	b510      	push	{r4, lr}
 80080ae:	4604      	mov	r4, r0
 80080b0:	f7ff ffe8 	bl	8008084 <RDMNetDevice::~RDMNetDevice()>
 80080b4:	4620      	mov	r0, r4
 80080b6:	f00b faab 	bl	8013610 <operator delete(void*)>
 80080ba:	4620      	mov	r0, r4
 80080bc:	bd10      	pop	{r4, pc}

080080be <non-virtual thunk to RDMNetDevice::~RDMNetDevice()>:
 80080be:	f1a0 00d0 	sub.w	r0, r0, #208	; 0xd0
 80080c2:	e7f3      	b.n	80080ac <RDMNetDevice::~RDMNetDevice()>

080080c4 <Display::Printf(unsigned char, char const*, ...)>:
 80080c4:	b40c      	push	{r2, r3}
 80080c6:	b570      	push	{r4, r5, r6, lr}
 80080c8:	6984      	ldr	r4, [r0, #24]
 80080ca:	4605      	mov	r5, r0
 80080cc:	460e      	mov	r6, r1
 80080ce:	b08a      	sub	sp, #40	; 0x28
 80080d0:	b174      	cbz	r4, 80080f0 <Display::Printf(unsigned char, char const*, ...)+0x2c>
 80080d2:	ab0f      	add	r3, sp, #60	; 0x3c
 80080d4:	2120      	movs	r1, #32
 80080d6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80080d8:	a802      	add	r0, sp, #8
 80080da:	9301      	str	r3, [sp, #4]
 80080dc:	f000 ff26 	bl	8008f2c <vsnprintf>
 80080e0:	4604      	mov	r4, r0
 80080e2:	69a8      	ldr	r0, [r5, #24]
 80080e4:	4631      	mov	r1, r6
 80080e6:	6803      	ldr	r3, [r0, #0]
 80080e8:	aa02      	add	r2, sp, #8
 80080ea:	69dd      	ldr	r5, [r3, #28]
 80080ec:	b2a3      	uxth	r3, r4
 80080ee:	47a8      	blx	r5
 80080f0:	4620      	mov	r0, r4
 80080f2:	b00a      	add	sp, #40	; 0x28
 80080f4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80080f8:	b002      	add	sp, #8
 80080fa:	4770      	bx	lr

080080fc <Display::TextStatus(char const*)>:
 80080fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008100:	4604      	mov	r4, r0
 8008102:	6980      	ldr	r0, [r0, #24]
 8008104:	460d      	mov	r5, r1
 8008106:	b360      	cbz	r0, 8008162 <Display::TextStatus(char const*)+0x66>
 8008108:	7947      	ldrb	r7, [r0, #5]
 800810a:	2100      	movs	r1, #0
 800810c:	1e7e      	subs	r6, r7, #1
 800810e:	b2f6      	uxtb	r6, r6
 8008110:	4632      	mov	r2, r6
 8008112:	f890 9004 	ldrb.w	r9, [r0, #4]
 8008116:	f04f 0800 	mov.w	r8, #0
 800811a:	f7ff ff81 	bl	8008020 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 800811e:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 8008122:	45c1      	cmp	r9, r8
 8008124:	69a0      	ldr	r0, [r4, #24]
 8008126:	d905      	bls.n	8008134 <Display::TextStatus(char const*)+0x38>
 8008128:	2120      	movs	r1, #32
 800812a:	f7ff ff7e 	bl	800802a <Display::PutChar(int) [clone .isra.0]>
 800812e:	f108 0801 	add.w	r8, r8, #1
 8008132:	e7f6      	b.n	8008122 <Display::TextStatus(char const*)+0x26>
 8008134:	4632      	mov	r2, r6
 8008136:	2100      	movs	r1, #0
 8008138:	f7ff ff72 	bl	8008020 <Display::SetCursorPos(unsigned char, unsigned char) [clone .isra.0]>
 800813c:	69a0      	ldr	r0, [r4, #24]
 800813e:	b180      	cbz	r0, 8008162 <Display::TextStatus(char const*)+0x66>
 8008140:	2300      	movs	r3, #0
 8008142:	7901      	ldrb	r1, [r0, #4]
 8008144:	5cea      	ldrb	r2, [r5, r3]
 8008146:	b11a      	cbz	r2, 8008150 <Display::TextStatus(char const*)+0x54>
 8008148:	1c5a      	adds	r2, r3, #1
 800814a:	4299      	cmp	r1, r3
 800814c:	4613      	mov	r3, r2
 800814e:	dcf9      	bgt.n	8008144 <Display::TextStatus(char const*)+0x48>
 8008150:	6802      	ldr	r2, [r0, #0]
 8008152:	4639      	mov	r1, r7
 8008154:	69d4      	ldr	r4, [r2, #28]
 8008156:	b2db      	uxtb	r3, r3
 8008158:	462a      	mov	r2, r5
 800815a:	46a4      	mov	ip, r4
 800815c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008160:	4760      	bx	ip
 8008162:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08008166 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>:
 8008166:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008168:	4605      	mov	r5, r0
 800816a:	461e      	mov	r6, r3
 800816c:	460f      	mov	r7, r1
 800816e:	4614      	mov	r4, r2
 8008170:	f7ff ffc4 	bl	80080fc <Display::TextStatus(char const*)>
 8008174:	7c6b      	ldrb	r3, [r5, #17]
 8008176:	b19b      	cbz	r3, 80081a0 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x3a>
 8008178:	43e2      	mvns	r2, r4
 800817a:	2312      	movs	r3, #18
 800817c:	7a28      	ldrb	r0, [r5, #8]
 800817e:	f88d 3004 	strb.w	r3, [sp, #4]
 8008182:	f3c2 2307 	ubfx	r3, r2, #8, #8
 8008186:	f88d 3005 	strb.w	r3, [sp, #5]
 800818a:	f88d 2006 	strb.w	r2, [sp, #6]
 800818e:	f00c fbe7 	bl	8014960 <gd32_i2c_set_address(unsigned char)>
 8008192:	68e8      	ldr	r0, [r5, #12]
 8008194:	f00c fbdc 	bl	8014950 <gd32_i2c_set_baudrate(unsigned int)>
 8008198:	2103      	movs	r1, #3
 800819a:	a801      	add	r0, sp, #4
 800819c:	f00c fbe6 	bl	801496c <gd32_i2c_write(char const*, unsigned int)>
 80081a0:	1c73      	adds	r3, r6, #1
 80081a2:	d006      	beq.n	80081b2 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)+0x4c>
 80081a4:	4639      	mov	r1, r7
 80081a6:	4630      	mov	r0, r6
 80081a8:	b003      	add	sp, #12
 80081aa:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80081ae:	f00b b837 	b.w	8013220 <console_status>
 80081b2:	b003      	add	sp, #12
 80081b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

080081b8 <StoreNetwork::SaveDhcp(bool)>:
 80081b8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80081ba:	2301      	movs	r3, #1
 80081bc:	f88d 1017 	strb.w	r1, [sp, #23]
 80081c0:	2100      	movs	r1, #0
 80081c2:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80081c6:	4805      	ldr	r0, [pc, #20]	; (80081dc <StoreNetwork::SaveDhcp(bool)+0x24>)
 80081c8:	9300      	str	r3, [sp, #0]
 80081ca:	2214      	movs	r2, #20
 80081cc:	6800      	ldr	r0, [r0, #0]
 80081ce:	f10d 0317 	add.w	r3, sp, #23
 80081d2:	f006 fb6f 	bl	800e8b4 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 80081d6:	b007      	add	sp, #28
 80081d8:	f85d fb04 	ldr.w	pc, [sp], #4
 80081dc:	2000bda8 	andcs	fp, r0, r8, lsr #27

080081e0 <non-virtual thunk to StoreNetwork::SaveDhcp(bool)>:
 80081e0:	f1a0 0004 	sub.w	r0, r0, #4
 80081e4:	e7e8      	b.n	80081b8 <StoreNetwork::SaveDhcp(bool)>
 80081e6:	bf00      	nop

080081e8 <FactoryDefaults::Set()>:
 80081e8:	b508      	push	{r3, lr}
 80081ea:	4b08      	ldr	r3, [pc, #32]	; (800820c <FactoryDefaults::Set()+0x24>)
 80081ec:	2100      	movs	r1, #0
 80081ee:	6818      	ldr	r0, [r3, #0]
 80081f0:	f001 f838 	bl	8009264 <RemoteConfig::SetDisable(bool)>
 80081f4:	4b06      	ldr	r3, [pc, #24]	; (8008210 <FactoryDefaults::Set()+0x28>)
 80081f6:	210b      	movs	r1, #11
 80081f8:	6818      	ldr	r0, [r3, #0]
 80081fa:	f006 fb49 	bl	800e890 <SpiFlashStore::ResetSetList(spiflashstore::Store)>
 80081fe:	4b05      	ldr	r3, [pc, #20]	; (8008214 <FactoryDefaults::Set()+0x2c>)
 8008200:	2101      	movs	r1, #1
 8008202:	6818      	ldr	r0, [r3, #0]
 8008204:	f7ff ffd8 	bl	80081b8 <StoreNetwork::SaveDhcp(bool)>
 8008208:	bd08      	pop	{r3, pc}
 800820a:	bf00      	nop
 800820c:	20000114 	andcs	r0, r0, r4, lsl r1
 8008210:	2000bda8 	andcs	fp, r0, r8, lsr #27
 8008214:	2000bdb8 			; <UNDEFINED> instruction: 0x2000bdb8

08008218 <main>:
 8008218:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800821c:	2501      	movs	r5, #1
 800821e:	f5ad 5d8b 	sub.w	sp, sp, #4448	; 0x1160
 8008222:	b081      	sub	sp, #4
 8008224:	a80e      	add	r0, sp, #56	; 0x38
 8008226:	f00b f903 	bl	8013430 <Hardware::Hardware()>
 800822a:	a88e      	add	r0, sp, #568	; 0x238
 800822c:	f008 fabc 	bl	80107a8 <Network::Network()>
 8008230:	a816      	add	r0, sp, #88	; 0x58
 8008232:	f00b f8b5 	bl	80133a0 <LedBlink::LedBlink()>
 8008236:	a878      	add	r0, sp, #480	; 0x1e0
 8008238:	f009 fe90 	bl	8011f5c <DisplayUdf::DisplayUdf()>
 800823c:	4ab2      	ldr	r2, [pc, #712]	; (8008508 <main+0x2f0>)
 800823e:	4bb3      	ldr	r3, [pc, #716]	; (800850c <main+0x2f4>)
 8008240:	49b3      	ldr	r1, [pc, #716]	; (8008510 <main+0x2f8>)
 8008242:	a806      	add	r0, sp, #24
 8008244:	f00b f804 	bl	8013250 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>
 8008248:	a807      	add	r0, sp, #28
 800824a:	f006 fe6f 	bl	800ef2c <FlashRom::FlashRom()>
 800824e:	a808      	add	r0, sp, #32
 8008250:	f006 faf8 	bl	800e844 <SpiFlashStore::SpiFlashStore()>
 8008254:	49af      	ldr	r1, [pc, #700]	; (8008514 <main+0x2fc>)
 8008256:	a806      	add	r0, sp, #24
 8008258:	f00b f832 	bl	80132c0 <FirmwareVersion::Print(char const*)>
 800825c:	4bae      	ldr	r3, [pc, #696]	; (8008518 <main+0x300>)
 800825e:	2008      	movs	r0, #8
 8008260:	611d      	str	r5, [r3, #16]
 8008262:	f00b f9d9 	bl	8013618 <operator new(unsigned int)>
 8008266:	4bad      	ldr	r3, [pc, #692]	; (800851c <main+0x304>)
 8008268:	2400      	movs	r4, #0
 800826a:	6003      	str	r3, [r0, #0]
 800826c:	4bac      	ldr	r3, [pc, #688]	; (8008520 <main+0x308>)
 800826e:	f44f 62c0 	mov.w	r2, #1536	; 0x600
 8008272:	681b      	ldr	r3, [r3, #0]
 8008274:	49ab      	ldr	r1, [pc, #684]	; (8008524 <main+0x30c>)
 8008276:	3b00      	subs	r3, #0
 8008278:	bf18      	it	ne
 800827a:	2301      	movne	r3, #1
 800827c:	9019      	str	r0, [sp, #100]	; 0x64
 800827e:	7103      	strb	r3, [r0, #4]
 8008280:	2303      	movs	r3, #3
 8008282:	a878      	add	r0, sp, #480	; 0x1e0
 8008284:	f7ff ff6f 	bl	8008166 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008288:	a810      	add	r0, sp, #64	; 0x40
 800828a:	f006 fcd3 	bl	800ec34 <StoreNetwork::StoreNetwork()>
 800828e:	ab11      	add	r3, sp, #68	; 0x44
 8008290:	a910      	add	r1, sp, #64	; 0x40
 8008292:	a88e      	add	r0, sp, #568	; 0x238
 8008294:	93bb      	str	r3, [sp, #748]	; 0x2ec
 8008296:	f008 fadf 	bl	8010858 <Network::Init(NetworkParamsStore*)>
 800829a:	a88e      	add	r0, sp, #568	; 0x238
 800829c:	f008 fd6a 	bl	8010d74 <Network::Print()>
 80082a0:	a809      	add	r0, sp, #36	; 0x24
 80082a2:	f007 febb 	bl	801001c <MDNS::MDNS()>
 80082a6:	a809      	add	r0, sp, #36	; 0x24
 80082a8:	f007 ff7c 	bl	80101a4 <MDNS::Start()>
 80082ac:	f642 1305 	movw	r3, #10501	; 0x2905
 80082b0:	4621      	mov	r1, r4
 80082b2:	4a9d      	ldr	r2, [pc, #628]	; (8008528 <main+0x310>)
 80082b4:	e9cd 4400 	strd	r4, r4, [sp]
 80082b8:	a809      	add	r0, sp, #36	; 0x24
 80082ba:	f008 f8df 	bl	801047c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 80082be:	4b9b      	ldr	r3, [pc, #620]	; (800852c <main+0x314>)
 80082c0:	4621      	mov	r1, r4
 80082c2:	4a9b      	ldr	r2, [pc, #620]	; (8008530 <main+0x318>)
 80082c4:	e9cd 5300 	strd	r5, r3, [sp]
 80082c8:	a809      	add	r0, sp, #36	; 0x24
 80082ca:	2350      	movs	r3, #80	; 0x50
 80082cc:	f008 f8d6 	bl	801047c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>
 80082d0:	a809      	add	r0, sp, #36	; 0x24
 80082d2:	f008 fa19 	bl	8010708 <MDNS::Print()>
 80082d6:	2303      	movs	r3, #3
 80082d8:	f44f 42cc 	mov.w	r2, #26112	; 0x6600
 80082dc:	4995      	ldr	r1, [pc, #596]	; (8008534 <main+0x31c>)
 80082de:	a878      	add	r0, sp, #480	; 0x1e0
 80082e0:	f7ff ff41 	bl	8008166 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 80082e4:	f50d 601d 	add.w	r0, sp, #2512	; 0x9d0
 80082e8:	f002 f992 	bl	800a610 <E131Bridge::E131Bridge()>
 80082ec:	a80a      	add	r0, sp, #40	; 0x28
 80082ee:	f006 fc0d 	bl	800eb0c <StoreE131::StoreE131()>
 80082f2:	a90a      	add	r1, sp, #40	; 0x28
 80082f4:	a837      	add	r0, sp, #220	; 0xdc
 80082f6:	f003 f8b1 	bl	800b45c <E131Params::E131Params(E131ParamsStore*)>
 80082fa:	a837      	add	r0, sp, #220	; 0xdc
 80082fc:	f003 f8ce 	bl	800b49c <E131Params::Load()>
 8008300:	b138      	cbz	r0, 8008312 <main+0xfa>
 8008302:	a837      	add	r0, sp, #220	; 0xdc
 8008304:	f50d 611d 	add.w	r1, sp, #2512	; 0x9d0
 8008308:	f003 fb09 	bl	800b91e <E131Params::Set(E131Bridge*)>
 800830c:	a837      	add	r0, sp, #220	; 0xdc
 800830e:	f003 fb3f 	bl	800b990 <E131Params::Dump()>
 8008312:	4d89      	ldr	r5, [pc, #548]	; (8008538 <main+0x320>)
 8008314:	ac1d      	add	r4, sp, #116	; 0x74
 8008316:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8008318:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800831a:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 800831e:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8008322:	a812      	add	r0, sp, #72	; 0x48
 8008324:	f006 fdf6 	bl	800ef14 <StoreWS28xxDmx::StoreWS28xxDmx()>
 8008328:	a912      	add	r1, sp, #72	; 0x48
 800832a:	a853      	add	r0, sp, #332	; 0x14c
 800832c:	f004 ffac 	bl	800d288 <WS28xxDmxParams::WS28xxDmxParams(WS28xxDmxParamsStore*)>
 8008330:	a853      	add	r0, sp, #332	; 0x14c
 8008332:	f004 ffd1 	bl	800d2d8 <WS28xxDmxParams::Load()>
 8008336:	b130      	cbz	r0, 8008346 <main+0x12e>
 8008338:	a853      	add	r0, sp, #332	; 0x14c
 800833a:	a91d      	add	r1, sp, #116	; 0x74
 800833c:	f005 fa69 	bl	800d812 <WS28xxDmxParams::Set(PixelDmxConfiguration*)>
 8008340:	a853      	add	r0, sp, #332	; 0x14c
 8008342:	f005 faa4 	bl	800d88e <WS28xxDmxParams::Dump()>
 8008346:	ad6a      	add	r5, sp, #424	; 0x1a8
 8008348:	a91d      	add	r1, sp, #116	; 0x74
 800834a:	4628      	mov	r0, r5
 800834c:	f004 feb2 	bl	800d0b4 <WS28xxDmxMulti::WS28xxDmxMulti(PixelDmxConfiguration&)>
 8008350:	2004      	movs	r0, #4
 8008352:	f00b f961 	bl	8013618 <operator new(unsigned int)>
 8008356:	4b79      	ldr	r3, [pc, #484]	; (800853c <main+0x324>)
 8008358:	4604      	mov	r4, r0
 800835a:	6003      	str	r3, [r0, #0]
 800835c:	2203      	movs	r2, #3
 800835e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8008362:	2110      	movs	r1, #16
 8008364:	4876      	ldr	r0, [pc, #472]	; (8008540 <main+0x328>)
 8008366:	f00b fd57 	bl	8013e18 <gpio_init>
 800836a:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800836e:	4b75      	ldr	r3, [pc, #468]	; (8008544 <main+0x32c>)
 8008370:	f44f 5a80 	mov.w	sl, #4096	; 0x1000
 8008374:	f8c3 2c14 	str.w	r2, [r3, #3092]	; 0xc14
 8008378:	62ec      	str	r4, [r5, #44]	; 0x2c
 800837a:	2400      	movs	r4, #0
 800837c:	4621      	mov	r1, r4
 800837e:	f8d5 901c 	ldr.w	r9, [r5, #28]
 8008382:	6a6e      	ldr	r6, [r5, #36]	; 0x24
 8008384:	f8cd 59d4 	str.w	r5, [sp, #2516]	; 0x9d4
 8008388:	42b4      	cmp	r4, r6
 800838a:	d027      	beq.n	80083dc <main+0x1c4>
 800838c:	2c07      	cmp	r4, #7
 800838e:	d81f      	bhi.n	80083d0 <main+0x1b8>
 8008390:	9a54      	ldr	r2, [sp, #336]	; 0x150
 8008392:	fa0a f304 	lsl.w	r3, sl, r4
 8008396:	4393      	bics	r3, r2
 8008398:	bf0c      	ite	eq
 800839a:	f04f 0801 	moveq.w	r8, #1
 800839e:	f04f 0800 	movne.w	r8, #0
 80083a2:	ab53      	add	r3, sp, #332	; 0x14c
 80083a4:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80083a8:	8b5f      	ldrh	r7, [r3, #26]
 80083aa:	eb01 0b09 	add.w	fp, r1, r9
 80083ae:	1a7f      	subs	r7, r7, r1
 80083b0:	4559      	cmp	r1, fp
 80083b2:	d011      	beq.n	80083d8 <main+0x1c0>
 80083b4:	f1b8 0f00 	cmp.w	r8, #0
 80083b8:	d008      	beq.n	80083cc <main+0x1b4>
 80083ba:	187b      	adds	r3, r7, r1
 80083bc:	2201      	movs	r2, #1
 80083be:	b29b      	uxth	r3, r3
 80083c0:	f50d 601d 	add.w	r0, sp, #2512	; 0x9d0
 80083c4:	9105      	str	r1, [sp, #20]
 80083c6:	f002 f9c3 	bl	800a750 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)>
 80083ca:	9905      	ldr	r1, [sp, #20]
 80083cc:	3101      	adds	r1, #1
 80083ce:	e7ef      	b.n	80083b0 <main+0x198>
 80083d0:	f04f 0800 	mov.w	r8, #0
 80083d4:	4647      	mov	r7, r8
 80083d6:	e7e8      	b.n	80083aa <main+0x192>
 80083d8:	3401      	adds	r4, #1
 80083da:	e7d5      	b.n	8008388 <main+0x170>
 80083dc:	f89d 8176 	ldrb.w	r8, [sp, #374]	; 0x176
 80083e0:	f1b8 0f00 	cmp.w	r8, #0
 80083e4:	f000 8087 	beq.w	80084f6 <main+0x2de>
 80083e8:	2001      	movs	r0, #1
 80083ea:	f00b f915 	bl	8013618 <operator new(unsigned int)>
 80083ee:	4631      	mov	r1, r6
 80083f0:	4607      	mov	r7, r0
 80083f2:	f005 fb57 	bl	800daa4 <PixelPatterns::PixelPatterns(unsigned int)>
 80083f6:	4b54      	ldr	r3, [pc, #336]	; (8008548 <main+0x330>)
 80083f8:	f1b8 0f05 	cmp.w	r8, #5
 80083fc:	f8c3 8000 	str.w	r8, [r3]
 8008400:	d939      	bls.n	8008476 <main+0x25e>
 8008402:	2300      	movs	r3, #0
 8008404:	2004      	movs	r0, #4
 8008406:	f8cd 39d4 	str.w	r3, [sp, #2516]	; 0x9d4
 800840a:	f00b f905 	bl	8013618 <operator new(unsigned int)>
 800840e:	4b4f      	ldr	r3, [pc, #316]	; (800854c <main+0x334>)
 8008410:	900e      	str	r0, [sp, #56]	; 0x38
 8008412:	6003      	str	r3, [r0, #0]
 8008414:	4c4e      	ldr	r4, [pc, #312]	; (8008550 <main+0x338>)
 8008416:	6823      	ldr	r3, [r4, #0]
 8008418:	6818      	ldr	r0, [r3, #0]
 800841a:	f005 fdb3 	bl	800df84 <PixelType::GetType(pixel::Type)>
 800841e:	6823      	ldr	r3, [r4, #0]
 8008420:	2120      	movs	r1, #32
 8008422:	685b      	ldr	r3, [r3, #4]
 8008424:	4a4b      	ldr	r2, [pc, #300]	; (8008554 <main+0x33c>)
 8008426:	e9cd 0300 	strd	r0, r3, [sp]
 800842a:	4633      	mov	r3, r6
 800842c:	a825      	add	r0, sp, #148	; 0x94
 800842e:	f000 fd65 	bl	8008efc <snprintf>
 8008432:	4a49      	ldr	r2, [pc, #292]	; (8008558 <main+0x340>)
 8008434:	2120      	movs	r1, #32
 8008436:	a82e      	add	r0, sp, #184	; 0xb8
 8008438:	f000 fd60 	bl	8008efc <snprintf>
 800843c:	4604      	mov	r4, r0
 800843e:	202c      	movs	r0, #44	; 0x2c
 8008440:	f00b f8ea 	bl	8013618 <operator new(unsigned int)>
 8008444:	2200      	movs	r2, #0
 8008446:	4603      	mov	r3, r0
 8008448:	6042      	str	r2, [r0, #4]
 800844a:	f880 2028 	strb.w	r2, [r0, #40]	; 0x28
 800844e:	f100 0c28 	add.w	ip, r0, #40	; 0x28
 8008452:	f823 2b08 	strh.w	r2, [r3], #8
 8008456:	aa25      	add	r2, sp, #148	; 0x94
 8008458:	f812 1b01 	ldrb.w	r1, [r2], #1
 800845c:	2900      	cmp	r1, #0
 800845e:	f000 8081 	beq.w	8008564 <main+0x34c>
 8008462:	4563      	cmp	r3, ip
 8008464:	d07e      	beq.n	8008564 <main+0x34c>
 8008466:	f803 1b01 	strb.w	r1, [r3], #1
 800846a:	f890 1028 	ldrb.w	r1, [r0, #40]	; 0x28
 800846e:	3101      	adds	r1, #1
 8008470:	f880 1028 	strb.w	r1, [r0, #40]	; 0x28
 8008474:	e7f0      	b.n	8008458 <main+0x240>
 8008476:	2400      	movs	r4, #0
 8008478:	46a1      	mov	r9, r4
 800847a:	f8df a0e0 	ldr.w	sl, [pc, #224]	; 800855c <main+0x344>
 800847e:	f1a8 0802 	sub.w	r8, r8, #2
 8008482:	f1b8 0f03 	cmp.w	r8, #3
 8008486:	d803      	bhi.n	8008490 <main+0x278>
 8008488:	e8df f008 	tbb	[pc, r8]
 800848c:	2820170c 	stmdacs	r0!, {r2, r3, r8, r9, sl, ip}
 8008490:	2300      	movs	r3, #0
 8008492:	2264      	movs	r2, #100	; 0x64
 8008494:	4621      	mov	r1, r4
 8008496:	4638      	mov	r0, r7
 8008498:	f005 fb2a 	bl	800daf0 <PixelPatterns::RainbowCycle(unsigned int, unsigned int, pixelpatterns::Direction)>
 800849c:	3401      	adds	r4, #1
 800849e:	2c08      	cmp	r4, #8
 80084a0:	d1ef      	bne.n	8008482 <main+0x26a>
 80084a2:	e7ae      	b.n	8008402 <main+0x1ea>
 80084a4:	2364      	movs	r3, #100	; 0x64
 80084a6:	2200      	movs	r2, #0
 80084a8:	9300      	str	r3, [sp, #0]
 80084aa:	4621      	mov	r1, r4
 80084ac:	4653      	mov	r3, sl
 80084ae:	4638      	mov	r0, r7
 80084b0:	f8cd 9004 	str.w	r9, [sp, #4]
 80084b4:	f005 fb32 	bl	800db1c <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>
 80084b8:	e7f0      	b.n	800849c <main+0x284>
 80084ba:	2364      	movs	r3, #100	; 0x64
 80084bc:	4652      	mov	r2, sl
 80084be:	4621      	mov	r1, r4
 80084c0:	4638      	mov	r0, r7
 80084c2:	f8cd 9000 	str.w	r9, [sp]
 80084c6:	f005 fb45 	bl	800db54 <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>
 80084ca:	e7e7      	b.n	800849c <main+0x284>
 80084cc:	2364      	movs	r3, #100	; 0x64
 80084ce:	f06f 427f 	mvn.w	r2, #4278190080	; 0xff000000
 80084d2:	4621      	mov	r1, r4
 80084d4:	4638      	mov	r0, r7
 80084d6:	f005 fb57 	bl	800db88 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)>
 80084da:	e7df      	b.n	800849c <main+0x284>
 80084dc:	230a      	movs	r3, #10
 80084de:	2264      	movs	r2, #100	; 0x64
 80084e0:	4621      	mov	r1, r4
 80084e2:	e9cd 3200 	strd	r3, r2, [sp]
 80084e6:	4638      	mov	r0, r7
 80084e8:	4653      	mov	r3, sl
 80084ea:	2200      	movs	r2, #0
 80084ec:	f8cd 9008 	str.w	r9, [sp, #8]
 80084f0:	f005 fb7e 	bl	800dbf0 <PixelPatterns::Fade(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>
 80084f4:	e7d2      	b.n	800849c <main+0x284>
 80084f6:	2004      	movs	r0, #4
 80084f8:	f00b f88e 	bl	8013618 <operator new(unsigned int)>
 80084fc:	4b18      	ldr	r3, [pc, #96]	; (8008560 <main+0x348>)
 80084fe:	4647      	mov	r7, r8
 8008500:	6003      	str	r3, [r0, #0]
 8008502:	900e      	str	r0, [sp, #56]	; 0x38
 8008504:	ab0e      	add	r3, sp, #56	; 0x38
 8008506:	e785      	b.n	8008414 <main+0x1fc>
 8008508:	0801599d 	stmdaeq	r1, {r0, r2, r3, r4, r7, r8, fp, ip, lr}
 800850c:	08015994 	stmdaeq	r1, {r2, r4, r7, r8, fp, ip, lr}
 8008510:	08015b01 	stmdaeq	r1, {r0, r8, r9, fp, ip, lr}
 8008514:	080159a9 	stmdaeq	r1, {r0, r3, r5, r7, r8, fp, ip, lr}
 8008518:	40011000 	andmi	r1, r1, r0
 800851c:	08015a5c 	stmdaeq	r1, {r2, r3, r4, r6, r9, fp, ip, lr}
 8008520:	20013ce4 	andcs	r3, r1, r4, ror #25
 8008524:	0801760c 	stmdaeq	r1, {r2, r3, r9, sl, ip, sp, lr}
 8008528:	080159e9 	stmdaeq	r1, {r0, r3, r5, r6, r7, r8, fp, ip, lr}
 800852c:	080159f9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, r8, fp, ip, lr}
 8008530:	080159f2 	stmdaeq	r1, {r1, r4, r5, r6, r7, r8, fp, ip, lr}
 8008534:	08016c38 	stmdaeq	r1, {r3, r4, r5, sl, fp, sp, lr}
 8008538:	0801595c 	stmdaeq	r1, {r2, r3, r4, r6, r8, fp, ip, lr}
 800853c:	08015a84 	stmdaeq	r1, {r2, r7, r9, fp, ip, lr}
 8008540:	40010c00 	andmi	r0, r1, r0, lsl #24
 8008544:	40010000 	andmi	r0, r1, r0
 8008548:	20003588 	andcs	r3, r0, r8, lsl #11
 800854c:	08015af0 	stmdaeq	r1, {r4, r5, r6, r7, r9, fp, ip, lr}
 8008550:	2000ad90 	mulcs	r0, r0, sp
 8008554:	08015a0f 	stmdaeq	r1, {r0, r1, r2, r3, r9, fp, ip, lr}
 8008558:	08015a23 	stmdaeq	r1, {r0, r1, r5, r9, fp, ip, lr}
 800855c:	00646464 	rsbeq	r6, r4, r4, ror #8
 8008560:	08015a70 	stmdaeq	r1, {r4, r5, r6, r9, fp, ip, lr}
 8008564:	2201      	movs	r2, #1
 8008566:	900b      	str	r0, [sp, #44]	; 0x2c
 8008568:	a90b      	add	r1, sp, #44	; 0x2c
 800856a:	a8c0      	add	r0, sp, #768	; 0x300
 800856c:	ab0b      	add	r3, sp, #44	; 0x2c
 800856e:	f003 fccb 	bl	800bf08 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)>
 8008572:	a8f4      	add	r0, sp, #976	; 0x3d0
 8008574:	f003 fa22 	bl	800b9bc <LLRPDevice::LLRPDevice()>
 8008578:	4bab      	ldr	r3, [pc, #684]	; (8008828 <main+0x610>)
 800857a:	2100      	movs	r1, #0
 800857c:	93c0      	str	r3, [sp, #768]	; 0x300
 800857e:	a8f5      	add	r0, sp, #980	; 0x3d4
 8008580:	3324      	adds	r3, #36	; 0x24
 8008582:	93f4      	str	r3, [sp, #976]	; 0x3d0
 8008584:	f003 fe98 	bl	800c2b8 <RDMHandler::RDMHandler(bool)>
 8008588:	4ba8      	ldr	r3, [pc, #672]	; (800882c <main+0x614>)
 800858a:	b2e4      	uxtb	r4, r4
 800858c:	49a8      	ldr	r1, [pc, #672]	; (8008830 <main+0x618>)
 800858e:	6818      	ldr	r0, [r3, #0]
 8008590:	f00a ffa0 	bl	80134d4 <Hardware::GetUuid(unsigned char*)>
 8008594:	2c20      	cmp	r4, #32
 8008596:	bf28      	it	cs
 8008598:	2420      	movcs	r4, #32
 800859a:	f89d 3356 	ldrb.w	r3, [sp, #854]	; 0x356
 800859e:	4622      	mov	r2, r4
 80085a0:	a92e      	add	r1, sp, #184	; 0xb8
 80085a2:	2b00      	cmp	r3, #0
 80085a4:	f000 8164 	beq.w	8008870 <main+0x658>
 80085a8:	f20d 300e 	addw	r0, sp, #782	; 0x30e
 80085ac:	f7ff fcbd 	bl	8007f2a <memcpy>
 80085b0:	98df      	ldr	r0, [sp, #892]	; 0x37c
 80085b2:	f88d 432e 	strb.w	r4, [sp, #814]	; 0x32e
 80085b6:	b128      	cbz	r0, 80085c4 <main+0x3ac>
 80085b8:	6803      	ldr	r3, [r0, #0]
 80085ba:	4622      	mov	r2, r4
 80085bc:	689b      	ldr	r3, [r3, #8]
 80085be:	f20d 310e 	addw	r1, sp, #782	; 0x30e
 80085c2:	4798      	blx	r3
 80085c4:	4b9b      	ldr	r3, [pc, #620]	; (8008834 <main+0x61c>)
 80085c6:	2004      	movs	r0, #4
 80085c8:	93d4      	str	r3, [sp, #848]	; 0x350
 80085ca:	f00b f825 	bl	8013618 <operator new(unsigned int)>
 80085ce:	4b9a      	ldr	r3, [pc, #616]	; (8008838 <main+0x620>)
 80085d0:	90f3      	str	r0, [sp, #972]	; 0x3cc
 80085d2:	6003      	str	r3, [r0, #0]
 80085d4:	a8c0      	add	r0, sp, #768	; 0x300
 80085d6:	f003 fcf5 	bl	800bfc4 <RDMDeviceResponder::Init()>
 80085da:	a814      	add	r0, sp, #80	; 0x50
 80085dc:	f006 fb88 	bl	800ecf0 <StoreRDMDevice::StoreRDMDevice()>
 80085e0:	a914      	add	r1, sp, #80	; 0x50
 80085e2:	a85e      	add	r0, sp, #376	; 0x178
 80085e4:	f003 fbf8 	bl	800bdd8 <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)>
 80085e8:	a85e      	add	r0, sp, #376	; 0x178
 80085ea:	f003 fc07 	bl	800bdfc <RDMDeviceParams::Load()>
 80085ee:	b130      	cbz	r0, 80085fe <main+0x3e6>
 80085f0:	a85e      	add	r0, sp, #376	; 0x178
 80085f2:	a9c1      	add	r1, sp, #772	; 0x304
 80085f4:	f003 fc0d 	bl	800be12 <RDMDeviceParams::Set(RDMDevice*)>
 80085f8:	a85e      	add	r0, sp, #376	; 0x178
 80085fa:	f003 fc3f 	bl	800be7c <RDMDeviceParams::Dump()>
 80085fe:	ab15      	add	r3, sp, #84	; 0x54
 8008600:	a8c0      	add	r0, sp, #768	; 0x300
 8008602:	93df      	str	r3, [sp, #892]	; 0x37c
 8008604:	f003 faee 	bl	800bbe4 <RDMNetDevice::Print()>
 8008608:	f50d 601d 	add.w	r0, sp, #2512	; 0x9d0
 800860c:	f002 fe5c 	bl	800b2c8 <E131Bridge::Print()>
 8008610:	4628      	mov	r0, r5
 8008612:	f004 fd15 	bl	800d040 <WS28xxDmxMulti::Print()>
 8008616:	4b89      	ldr	r3, [pc, #548]	; (800883c <main+0x624>)
 8008618:	4632      	mov	r2, r6
 800861a:	681b      	ldr	r3, [r3, #0]
 800861c:	4988      	ldr	r1, [pc, #544]	; (8008840 <main+0x628>)
 800861e:	685b      	ldr	r3, [r3, #4]
 8008620:	a878      	add	r0, sp, #480	; 0x1e0
 8008622:	f009 fcb1 	bl	8011f88 <DisplayUdf::SetTitle(char const*, ...)>
 8008626:	2207      	movs	r2, #7
 8008628:	2102      	movs	r1, #2
 800862a:	a878      	add	r0, sp, #480	; 0x1e0
 800862c:	f009 fe02 	bl	8012234 <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8008630:	2202      	movs	r2, #2
 8008632:	2103      	movs	r1, #3
 8008634:	a878      	add	r0, sp, #480	; 0x1e0
 8008636:	f009 fdfd 	bl	8012234 <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 800863a:	2203      	movs	r2, #3
 800863c:	2104      	movs	r1, #4
 800863e:	a878      	add	r0, sp, #480	; 0x1e0
 8008640:	f009 fdf8 	bl	8012234 <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8008644:	2204      	movs	r2, #4
 8008646:	2105      	movs	r1, #5
 8008648:	a878      	add	r0, sp, #480	; 0x1e0
 800864a:	f009 fdf3 	bl	8012234 <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 800864e:	2201      	movs	r2, #1
 8008650:	2106      	movs	r1, #6
 8008652:	a878      	add	r0, sp, #480	; 0x1e0
 8008654:	f009 fdee 	bl	8012234 <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 8008658:	981d      	ldr	r0, [sp, #116]	; 0x74
 800865a:	f005 fc93 	bl	800df84 <PixelType::GetType(pixel::Type)>
 800865e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8008660:	2107      	movs	r1, #7
 8008662:	9302      	str	r3, [sp, #8]
 8008664:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8008666:	4a77      	ldr	r2, [pc, #476]	; (8008844 <main+0x62c>)
 8008668:	e9cd 0300 	strd	r0, r3, [sp]
 800866c:	4633      	mov	r3, r6
 800866e:	a878      	add	r0, sp, #480	; 0x1e0
 8008670:	f7ff fd28 	bl	80080c4 <Display::Printf(unsigned char, char const*, ...)>
 8008674:	a80c      	add	r0, sp, #48	; 0x30
 8008676:	f006 fa15 	bl	800eaa4 <StoreDisplayUdf::StoreDisplayUdf()>
 800867a:	a90c      	add	r1, sp, #48	; 0x30
 800867c:	a849      	add	r0, sp, #292	; 0x124
 800867e:	f009 fe1b 	bl	80122b8 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 8008682:	a849      	add	r0, sp, #292	; 0x124
 8008684:	f009 fe25 	bl	80122d2 <DisplayUdfParams::Load()>
 8008688:	b130      	cbz	r0, 8008698 <main+0x480>
 800868a:	a849      	add	r0, sp, #292	; 0x124
 800868c:	a978      	add	r1, sp, #480	; 0x1e0
 800868e:	f009 ff56 	bl	801253e <DisplayUdfParams::Set(DisplayUdf*)>
 8008692:	a849      	add	r0, sp, #292	; 0x124
 8008694:	f009 ff86 	bl	80125a4 <DisplayUdfParams::Dump()>
 8008698:	f50d 611d 	add.w	r1, sp, #2512	; 0x9d0
 800869c:	a878      	add	r0, sp, #480	; 0x1e0
 800869e:	f009 ff83 	bl	80125a8 <DisplayUdf::Show(E131Bridge*)>
 80086a2:	2203      	movs	r2, #3
 80086a4:	2101      	movs	r1, #1
 80086a6:	f89d 3edb 	ldrb.w	r3, [sp, #3803]	; 0xedb
 80086aa:	a8f8      	add	r0, sp, #992	; 0x3e0
 80086ac:	f000 fd86 	bl	80091bc <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>
 80086b0:	ab0d      	add	r3, sp, #52	; 0x34
 80086b2:	4618      	mov	r0, r3
 80086b4:	9305      	str	r3, [sp, #20]
 80086b6:	f006 fb51 	bl	800ed5c <StoreRemoteConfig::StoreRemoteConfig()>
 80086ba:	9905      	ldr	r1, [sp, #20]
 80086bc:	a840      	add	r0, sp, #256	; 0x100
 80086be:	f001 f85d 	bl	800977c <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 80086c2:	a840      	add	r0, sp, #256	; 0x100
 80086c4:	f001 f864 	bl	8009790 <RemoteConfigParams::Load()>
 80086c8:	b130      	cbz	r0, 80086d8 <main+0x4c0>
 80086ca:	a840      	add	r0, sp, #256	; 0x100
 80086cc:	a9f8      	add	r1, sp, #992	; 0x3e0
 80086ce:	f001 f986 	bl	80099de <RemoteConfigParams::Set(RemoteConfig*)>
 80086d2:	a840      	add	r0, sp, #256	; 0x100
 80086d4:	f001 f9a3 	bl	8009a1e <RemoteConfigParams::Dump()>
 80086d8:	a808      	add	r0, sp, #32
 80086da:	f006 f95f 	bl	800e99c <SpiFlashStore::Flash()>
 80086de:	2800      	cmp	r0, #0
 80086e0:	d1fa      	bne.n	80086d8 <main+0x4c0>
 80086e2:	2303      	movs	r3, #3
 80086e4:	f44f 42fa 	mov.w	r2, #32000	; 0x7d00
 80086e8:	4957      	ldr	r1, [pc, #348]	; (8008848 <main+0x630>)
 80086ea:	4c58      	ldr	r4, [pc, #352]	; (800884c <main+0x634>)
 80086ec:	a878      	add	r0, sp, #480	; 0x1e0
 80086ee:	f7ff fd3a 	bl	8008166 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 80086f2:	f50d 601d 	add.w	r0, sp, #2512	; 0x9d0
 80086f6:	f001 feff 	bl	800a4f8 <E131Bridge::Start()>
 80086fa:	f241 51c1 	movw	r1, #5569	; 0x15c1
 80086fe:	6820      	ldr	r0, [r4, #0]
 8008700:	f008 f882 	bl	8010808 <Network::Begin(unsigned short)>
 8008704:	4b52      	ldr	r3, [pc, #328]	; (8008850 <main+0x638>)
 8008706:	4601      	mov	r1, r0
 8008708:	6018      	str	r0, [r3, #0]
 800870a:	4b52      	ldr	r3, [pc, #328]	; (8008854 <main+0x63c>)
 800870c:	6820      	ldr	r0, [r4, #0]
 800870e:	681a      	ldr	r2, [r3, #0]
 8008710:	f008 f88b 	bl	801082a <Network::JoinGroup(int, unsigned int)>
 8008714:	f248 0280 	movw	r2, #32896	; 0x8080
 8008718:	2302      	movs	r3, #2
 800871a:	494f      	ldr	r1, [pc, #316]	; (8008858 <main+0x640>)
 800871c:	a878      	add	r0, sp, #480	; 0x1e0
 800871e:	f7ff fd22 	bl	8008166 <Display::TextStatus(char const*, Display7SegmentMessage, unsigned int)>
 8008722:	2102      	movs	r1, #2
 8008724:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8008728:	f00b fb4c 	bl	8013dc4 <fwdgt_config>
 800872c:	2801      	cmp	r0, #1
 800872e:	bf0c      	ite	eq
 8008730:	2201      	moveq	r2, #1
 8008732:	2200      	movne	r2, #0
 8008734:	ab0e      	add	r3, sp, #56	; 0x38
 8008736:	711a      	strb	r2, [r3, #4]
 8008738:	d101      	bne.n	800873e <main+0x526>
 800873a:	f00b fb33 	bl	8013da4 <fwdgt_enable>
 800873e:	4c47      	ldr	r4, [pc, #284]	; (800885c <main+0x644>)
 8008740:	4e47      	ldr	r6, [pc, #284]	; (8008860 <main+0x648>)
 8008742:	f00b fb37 	bl	8013db4 <fwdgt_counter_reload>
 8008746:	f006 fe2f 	bl	800f3a8 <net_handle>
 800874a:	f50d 601d 	add.w	r0, sp, #2512	; 0x9d0
 800874e:	f002 fb43 	bl	800add8 <E131Bridge::Run()>
 8008752:	a8f8      	add	r0, sp, #992	; 0x3e0
 8008754:	f000 fed0 	bl	80094f8 <RemoteConfig::Run()>
 8008758:	a8f4      	add	r0, sp, #976	; 0x3d0
 800875a:	f003 f9ed 	bl	800bb38 <LLRPDevice::Run()>
 800875e:	a808      	add	r0, sp, #32
 8008760:	f006 f91c 	bl	800e99c <SpiFlashStore::Flash()>
 8008764:	991a      	ldr	r1, [sp, #104]	; 0x68
 8008766:	b191      	cbz	r1, 800878e <main+0x576>
 8008768:	6832      	ldr	r2, [r6, #0]
 800876a:	981c      	ldr	r0, [sp, #112]	; 0x70
 800876c:	6823      	ldr	r3, [r4, #0]
 800876e:	1a12      	subs	r2, r2, r0
 8008770:	4291      	cmp	r1, r2
 8008772:	d80c      	bhi.n	800878e <main+0x576>
 8008774:	6832      	ldr	r2, [r6, #0]
 8008776:	f423 1360 	bic.w	r3, r3, #3670016	; 0x380000
 800877a:	921c      	str	r2, [sp, #112]	; 0x70
 800877c:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 800877e:	2a01      	cmp	r2, #1
 8008780:	f082 0101 	eor.w	r1, r2, #1
 8008784:	bf08      	it	eq
 8008786:	f483 1360 	eoreq.w	r3, r3, #3670016	; 0x380000
 800878a:	911b      	str	r1, [sp, #108]	; 0x6c
 800878c:	6023      	str	r3, [r4, #0]
 800878e:	4b35      	ldr	r3, [pc, #212]	; (8008864 <main+0x64c>)
 8008790:	6822      	ldr	r2, [r4, #0]
 8008792:	6819      	ldr	r1, [r3, #0]
 8008794:	428a      	cmp	r2, r1
 8008796:	d02a      	beq.n	80087ee <main+0x5d6>
 8008798:	2110      	movs	r1, #16
 800879a:	4833      	ldr	r0, [pc, #204]	; (8008868 <main+0x650>)
 800879c:	601a      	str	r2, [r3, #0]
 800879e:	f00b fb91 	bl	8013ec4 <gpio_bit_reset>
 80087a2:	f3bf 8f6f 	isb	sy
 80087a6:	f04f 0818 	mov.w	r8, #24
 80087aa:	f44f 0900 	mov.w	r9, #8388608	; 0x800000
 80087ae:	4d2e      	ldr	r5, [pc, #184]	; (8008868 <main+0x650>)
 80087b0:	6823      	ldr	r3, [r4, #0]
 80087b2:	2104      	movs	r1, #4
 80087b4:	ea19 0f03 	tst.w	r9, r3
 80087b8:	4628      	mov	r0, r5
 80087ba:	d060      	beq.n	800887e <main+0x666>
 80087bc:	f00b fb80 	bl	8013ec0 <gpio_bit_set>
 80087c0:	f3bf 8f6f 	isb	sy
 80087c4:	2108      	movs	r1, #8
 80087c6:	4628      	mov	r0, r5
 80087c8:	f00b fb7c 	bl	8013ec4 <gpio_bit_reset>
 80087cc:	f3bf 8f6f 	isb	sy
 80087d0:	2108      	movs	r1, #8
 80087d2:	4628      	mov	r0, r5
 80087d4:	f00b fb74 	bl	8013ec0 <gpio_bit_set>
 80087d8:	f1b8 0801 	subs.w	r8, r8, #1
 80087dc:	ea4f 0959 	mov.w	r9, r9, lsr #1
 80087e0:	d1e6      	bne.n	80087b0 <main+0x598>
 80087e2:	2110      	movs	r1, #16
 80087e4:	4820      	ldr	r0, [pc, #128]	; (8008868 <main+0x650>)
 80087e6:	f00b fb6b 	bl	8013ec0 <gpio_bit_set>
 80087ea:	f3bf 8f6f 	isb	sy
 80087ee:	9a7d      	ldr	r2, [sp, #500]	; 0x1f4
 80087f0:	b17a      	cbz	r2, 8008812 <main+0x5fa>
 80087f2:	f89d 31f0 	ldrb.w	r3, [sp, #496]	; 0x1f0
 80087f6:	b963      	cbnz	r3, 8008812 <main+0x5fa>
 80087f8:	6833      	ldr	r3, [r6, #0]
 80087fa:	9979      	ldr	r1, [sp, #484]	; 0x1e4
 80087fc:	1a5b      	subs	r3, r3, r1
 80087fe:	429a      	cmp	r2, r3
 8008800:	d207      	bcs.n	8008812 <main+0x5fa>
 8008802:	987e      	ldr	r0, [sp, #504]	; 0x1f8
 8008804:	b128      	cbz	r0, 8008812 <main+0x5fa>
 8008806:	2101      	movs	r1, #1
 8008808:	6803      	ldr	r3, [r0, #0]
 800880a:	f88d 11f0 	strb.w	r1, [sp, #496]	; 0x1f0
 800880e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008810:	4798      	blx	r3
 8008812:	b12f      	cbz	r7, 8008820 <main+0x608>
 8008814:	4b15      	ldr	r3, [pc, #84]	; (800886c <main+0x654>)
 8008816:	681b      	ldr	r3, [r3, #0]
 8008818:	b113      	cbz	r3, 8008820 <main+0x608>
 800881a:	4638      	mov	r0, r7
 800881c:	f005 fb86 	bl	800df2c <PixelPatterns::Run()>
 8008820:	a809      	add	r0, sp, #36	; 0x24
 8008822:	f007 ff4d 	bl	80106c0 <MDNS::Run()>
 8008826:	e78c      	b.n	8008742 <main+0x52a>
 8008828:	08015a9c 	stmdaeq	r1, {r2, r3, r4, r7, r9, fp, ip, lr}
 800882c:	20013dd4 	ldrdcs	r3, [r1], -r4
 8008830:	20003253 	andcs	r3, r0, r3, asr r2
 8008834:	06010100 	streq	r0, [r1], -r0, lsl #2
 8008838:	08015adc 	stmdaeq	r1, {r2, r3, r4, r6, r7, r9, fp, ip, lr}
 800883c:	2000ad90 	mulcs	r0, r0, sp
 8008840:	08015a34 	stmdaeq	r1, {r2, r4, r5, r9, fp, ip, lr}
 8008844:	08015a47 	stmdaeq	r1, {r0, r1, r2, r6, r9, fp, ip, lr}
 8008848:	08016c24 	stmdaeq	r1, {r2, r5, sl, fp, sp, lr}
 800884c:	200136ac 	andcs	r3, r1, ip, lsr #13
 8008850:	20000000 	andcs	r0, r0, r0
 8008854:	20003148 	andcs	r3, r0, r8, asr #2
 8008858:	08016c4f 	stmdaeq	r1, {r0, r1, r2, r3, r6, sl, fp, sp, lr}
 800885c:	20013ddc 	ldrdcs	r3, [r1], -ip
 8008860:	20013df4 	strdcs	r3, [r1], -r4
 8008864:	20013dd8 	ldrdcs	r3, [r1], -r8
 8008868:	40011800 	andmi	r1, r1, r0, lsl #16
 800886c:	20003588 	andcs	r3, r0, r8, lsl #11
 8008870:	f20d 3057 	addw	r0, sp, #855	; 0x357
 8008874:	f7ff fb59 	bl	8007f2a <memcpy>
 8008878:	f88d 4377 	strb.w	r4, [sp, #887]	; 0x377
 800887c:	e6a2      	b.n	80085c4 <main+0x3ac>
 800887e:	f00b fb21 	bl	8013ec4 <gpio_bit_reset>
 8008882:	e79d      	b.n	80087c0 <main+0x5a8>

08008884 <RDMSoftwareVersion::GetVersion()>:
 8008884:	4800      	ldr	r0, [pc, #0]	; (8008888 <RDMSoftwareVersion::GetVersion()+0x4>)
 8008886:	4770      	bx	lr
 8008888:	08015b05 	stmdaeq	r1, {r0, r2, r8, r9, fp, ip, lr}

0800888c <RDMSoftwareVersion::GetVersionLength()>:
 800888c:	2003      	movs	r0, #3
 800888e:	4770      	bx	lr

08008890 <RDMSoftwareVersion::GetVersionId()>:
 8008890:	4800      	ldr	r0, [pc, #0]	; (8008894 <RDMSoftwareVersion::GetVersionId()+0x4>)
 8008892:	4770      	bx	lr
 8008894:	61ebf634 	mvnvs	pc, r4, lsr r6	; <UNPREDICTABLE>

08008898 <_itostr>:
 8008898:	b5f0      	push	{r4, r5, r6, r7, lr}
 800889a:	0fc7      	lsrs	r7, r0, #31
 800889c:	b091      	sub	sp, #68	; 0x44
 800889e:	bf18      	it	ne
 80088a0:	4240      	negne	r0, r0
 80088a2:	f10d 043f 	add.w	r4, sp, #63	; 0x3f
 80088a6:	b9c8      	cbnz	r0, 80088dc <_itostr+0x44>
 80088a8:	2330      	movs	r3, #48	; 0x30
 80088aa:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 80088ae:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 80088b2:	b132      	cbz	r2, 80088c2 <_itostr+0x2a>
 80088b4:	4668      	mov	r0, sp
 80088b6:	2530      	movs	r5, #48	; 0x30
 80088b8:	1ae6      	subs	r6, r4, r3
 80088ba:	4296      	cmp	r6, r2
 80088bc:	da01      	bge.n	80088c2 <_itostr+0x2a>
 80088be:	4283      	cmp	r3, r0
 80088c0:	d81c      	bhi.n	80088fc <_itostr+0x64>
 80088c2:	b117      	cbz	r7, 80088ca <_itostr+0x32>
 80088c4:	222d      	movs	r2, #45	; 0x2d
 80088c6:	f803 2901 	strb.w	r2, [r3], #-1
 80088ca:	3301      	adds	r3, #1
 80088cc:	1ae0      	subs	r0, r4, r3
 80088ce:	3901      	subs	r1, #1
 80088d0:	aa10      	add	r2, sp, #64	; 0x40
 80088d2:	4293      	cmp	r3, r2
 80088d4:	d315      	bcc.n	8008902 <_itostr+0x6a>
 80088d6:	3001      	adds	r0, #1
 80088d8:	b011      	add	sp, #68	; 0x44
 80088da:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80088dc:	4623      	mov	r3, r4
 80088de:	250a      	movs	r5, #10
 80088e0:	46ec      	mov	ip, sp
 80088e2:	fb90 f6f5 	sdiv	r6, r0, r5
 80088e6:	fb05 0016 	mls	r0, r5, r6, r0
 80088ea:	3030      	adds	r0, #48	; 0x30
 80088ec:	f803 0901 	strb.w	r0, [r3], #-1
 80088f0:	4630      	mov	r0, r6
 80088f2:	2e00      	cmp	r6, #0
 80088f4:	d0dd      	beq.n	80088b2 <_itostr+0x1a>
 80088f6:	4563      	cmp	r3, ip
 80088f8:	d1f3      	bne.n	80088e2 <_itostr+0x4a>
 80088fa:	e7da      	b.n	80088b2 <_itostr+0x1a>
 80088fc:	f803 5901 	strb.w	r5, [r3], #-1
 8008900:	e7da      	b.n	80088b8 <_itostr+0x20>
 8008902:	f813 2b01 	ldrb.w	r2, [r3], #1
 8008906:	f801 2f01 	strb.w	r2, [r1, #1]!
 800890a:	e7e1      	b.n	80088d0 <_itostr+0x38>

0800890c <_xputch>:
 800890c:	4603      	mov	r3, r0
 800890e:	b410      	push	{r4}
 8008910:	4c08      	ldr	r4, [pc, #32]	; (8008934 <_xputch+0x28>)
 8008912:	68da      	ldr	r2, [r3, #12]
 8008914:	4608      	mov	r0, r1
 8008916:	6821      	ldr	r1, [r4, #0]
 8008918:	3201      	adds	r2, #1
 800891a:	60da      	str	r2, [r3, #12]
 800891c:	b139      	cbz	r1, 800892e <_xputch+0x22>
 800891e:	691b      	ldr	r3, [r3, #16]
 8008920:	429a      	cmp	r2, r3
 8008922:	da02      	bge.n	800892a <_xputch+0x1e>
 8008924:	1c4b      	adds	r3, r1, #1
 8008926:	6023      	str	r3, [r4, #0]
 8008928:	7008      	strb	r0, [r1, #0]
 800892a:	bc10      	pop	{r4}
 800892c:	4770      	bx	lr
 800892e:	bc10      	pop	{r4}
 8008930:	f00a bc34 	b.w	801319c <console_putc>
 8008934:	200000e8 	andcs	r0, r0, r8, ror #1

08008938 <_format_int>:
 8008938:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800893c:	461f      	mov	r7, r3
 800893e:	b091      	sub	sp, #68	; 0x44
 8008940:	ea52 0307 	orrs.w	r3, r2, r7
 8008944:	4680      	mov	r8, r0
 8008946:	4616      	mov	r6, r2
 8008948:	f10d 053f 	add.w	r5, sp, #63	; 0x3f
 800894c:	d138      	bne.n	80089c0 <_format_int+0x88>
 800894e:	2330      	movs	r3, #48	; 0x30
 8008950:	f10d 043e 	add.w	r4, sp, #62	; 0x3e
 8008954:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8008958:	f8d8 3000 	ldr.w	r3, [r8]
 800895c:	07d8      	lsls	r0, r3, #31
 800895e:	d508      	bpl.n	8008972 <_format_int+0x3a>
 8008960:	466a      	mov	r2, sp
 8008962:	2030      	movs	r0, #48	; 0x30
 8008964:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8008968:	1b2e      	subs	r6, r5, r4
 800896a:	428e      	cmp	r6, r1
 800896c:	da01      	bge.n	8008972 <_format_int+0x3a>
 800896e:	4294      	cmp	r4, r2
 8008970:	d843      	bhi.n	80089fa <_format_int+0xc2>
 8008972:	0699      	lsls	r1, r3, #26
 8008974:	d508      	bpl.n	8008988 <_format_int+0x50>
 8008976:	466a      	mov	r2, sp
 8008978:	2030      	movs	r0, #48	; 0x30
 800897a:	f8d8 1008 	ldr.w	r1, [r8, #8]
 800897e:	1b2e      	subs	r6, r5, r4
 8008980:	428e      	cmp	r6, r1
 8008982:	da01      	bge.n	8008988 <_format_int+0x50>
 8008984:	4294      	cmp	r4, r2
 8008986:	d83b      	bhi.n	8008a00 <_format_int+0xc8>
 8008988:	071a      	lsls	r2, r3, #28
 800898a:	bf44      	itt	mi
 800898c:	222d      	movmi	r2, #45	; 0x2d
 800898e:	f804 2901 	strbmi.w	r2, [r4], #-1
 8008992:	065b      	lsls	r3, r3, #25
 8008994:	d408      	bmi.n	80089a8 <_format_int+0x70>
 8008996:	466b      	mov	r3, sp
 8008998:	2120      	movs	r1, #32
 800899a:	f8d8 2008 	ldr.w	r2, [r8, #8]
 800899e:	1b28      	subs	r0, r5, r4
 80089a0:	4290      	cmp	r0, r2
 80089a2:	da01      	bge.n	80089a8 <_format_int+0x70>
 80089a4:	429c      	cmp	r4, r3
 80089a6:	d82e      	bhi.n	8008a06 <_format_int+0xce>
 80089a8:	1b2d      	subs	r5, r5, r4
 80089aa:	3401      	adds	r4, #1
 80089ac:	ab10      	add	r3, sp, #64	; 0x40
 80089ae:	429c      	cmp	r4, r3
 80089b0:	d32c      	bcc.n	8008a0c <_format_int+0xd4>
 80089b2:	f8d8 3008 	ldr.w	r3, [r8, #8]
 80089b6:	42ab      	cmp	r3, r5
 80089b8:	dc2e      	bgt.n	8008a18 <_format_int+0xe0>
 80089ba:	b011      	add	sp, #68	; 0x44
 80089bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80089c0:	462c      	mov	r4, r5
 80089c2:	46eb      	mov	fp, sp
 80089c4:	4630      	mov	r0, r6
 80089c6:	4639      	mov	r1, r7
 80089c8:	220a      	movs	r2, #10
 80089ca:	2300      	movs	r3, #0
 80089cc:	f7fe fde6 	bl	800759c <__aeabi_uldivmod>
 80089d0:	46b2      	mov	sl, r6
 80089d2:	3230      	adds	r2, #48	; 0x30
 80089d4:	46b9      	mov	r9, r7
 80089d6:	2300      	movs	r3, #0
 80089d8:	4630      	mov	r0, r6
 80089da:	4639      	mov	r1, r7
 80089dc:	f804 2901 	strb.w	r2, [r4], #-1
 80089e0:	220a      	movs	r2, #10
 80089e2:	f7fe fddb 	bl	800759c <__aeabi_uldivmod>
 80089e6:	f1ba 0f0a 	cmp.w	sl, #10
 80089ea:	f179 0300 	sbcs.w	r3, r9, #0
 80089ee:	4606      	mov	r6, r0
 80089f0:	460f      	mov	r7, r1
 80089f2:	d3b1      	bcc.n	8008958 <_format_int+0x20>
 80089f4:	455c      	cmp	r4, fp
 80089f6:	d1e5      	bne.n	80089c4 <_format_int+0x8c>
 80089f8:	e7ae      	b.n	8008958 <_format_int+0x20>
 80089fa:	f804 0901 	strb.w	r0, [r4], #-1
 80089fe:	e7b3      	b.n	8008968 <_format_int+0x30>
 8008a00:	f804 0901 	strb.w	r0, [r4], #-1
 8008a04:	e7bb      	b.n	800897e <_format_int+0x46>
 8008a06:	f804 1901 	strb.w	r1, [r4], #-1
 8008a0a:	e7c8      	b.n	800899e <_format_int+0x66>
 8008a0c:	4640      	mov	r0, r8
 8008a0e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8008a12:	f7ff ff7b 	bl	800890c <_xputch>
 8008a16:	e7c9      	b.n	80089ac <_format_int+0x74>
 8008a18:	2120      	movs	r1, #32
 8008a1a:	4640      	mov	r0, r8
 8008a1c:	f7ff ff76 	bl	800890c <_xputch>
 8008a20:	3501      	adds	r5, #1
 8008a22:	e7c6      	b.n	80089b2 <_format_int+0x7a>

08008a24 <_format_hex>:
 8008a24:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008a26:	b091      	sub	sp, #68	; 0x44
 8008a28:	4606      	mov	r6, r0
 8008a2a:	6804      	ldr	r4, [r0, #0]
 8008a2c:	f10d 023f 	add.w	r2, sp, #63	; 0x3f
 8008a30:	bb61      	cbnz	r1, 8008a8c <_format_hex+0x68>
 8008a32:	2330      	movs	r3, #48	; 0x30
 8008a34:	f88d 303f 	strb.w	r3, [sp, #63]	; 0x3f
 8008a38:	f10d 033e 	add.w	r3, sp, #62	; 0x3e
 8008a3c:	07e5      	lsls	r5, r4, #31
 8008a3e:	d507      	bpl.n	8008a50 <_format_hex+0x2c>
 8008a40:	4669      	mov	r1, sp
 8008a42:	2530      	movs	r5, #48	; 0x30
 8008a44:	6870      	ldr	r0, [r6, #4]
 8008a46:	1ad7      	subs	r7, r2, r3
 8008a48:	4287      	cmp	r7, r0
 8008a4a:	da01      	bge.n	8008a50 <_format_hex+0x2c>
 8008a4c:	428b      	cmp	r3, r1
 8008a4e:	d831      	bhi.n	8008ab4 <_format_hex+0x90>
 8008a50:	06a0      	lsls	r0, r4, #26
 8008a52:	d507      	bpl.n	8008a64 <_format_hex+0x40>
 8008a54:	4669      	mov	r1, sp
 8008a56:	2530      	movs	r5, #48	; 0x30
 8008a58:	68b0      	ldr	r0, [r6, #8]
 8008a5a:	1ad7      	subs	r7, r2, r3
 8008a5c:	4287      	cmp	r7, r0
 8008a5e:	da01      	bge.n	8008a64 <_format_hex+0x40>
 8008a60:	428b      	cmp	r3, r1
 8008a62:	d82a      	bhi.n	8008aba <_format_hex+0x96>
 8008a64:	0661      	lsls	r1, r4, #25
 8008a66:	d407      	bmi.n	8008a78 <_format_hex+0x54>
 8008a68:	4669      	mov	r1, sp
 8008a6a:	2420      	movs	r4, #32
 8008a6c:	68b0      	ldr	r0, [r6, #8]
 8008a6e:	1ad5      	subs	r5, r2, r3
 8008a70:	4285      	cmp	r5, r0
 8008a72:	da01      	bge.n	8008a78 <_format_hex+0x54>
 8008a74:	428b      	cmp	r3, r1
 8008a76:	d823      	bhi.n	8008ac0 <_format_hex+0x9c>
 8008a78:	1ad5      	subs	r5, r2, r3
 8008a7a:	1c5c      	adds	r4, r3, #1
 8008a7c:	ab10      	add	r3, sp, #64	; 0x40
 8008a7e:	429c      	cmp	r4, r3
 8008a80:	d321      	bcc.n	8008ac6 <_format_hex+0xa2>
 8008a82:	68b3      	ldr	r3, [r6, #8]
 8008a84:	429d      	cmp	r5, r3
 8008a86:	db24      	blt.n	8008ad2 <_format_hex+0xae>
 8008a88:	b011      	add	sp, #68	; 0x44
 8008a8a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008a8c:	f014 0f02 	tst.w	r4, #2
 8008a90:	bf0c      	ite	eq
 8008a92:	2757      	moveq	r7, #87	; 0x57
 8008a94:	2737      	movne	r7, #55	; 0x37
 8008a96:	4613      	mov	r3, r2
 8008a98:	466d      	mov	r5, sp
 8008a9a:	f001 000f 	and.w	r0, r1, #15
 8008a9e:	2809      	cmp	r0, #9
 8008aa0:	bf94      	ite	ls
 8008aa2:	3030      	addls	r0, #48	; 0x30
 8008aa4:	19c0      	addhi	r0, r0, r7
 8008aa6:	0909      	lsrs	r1, r1, #4
 8008aa8:	f803 0901 	strb.w	r0, [r3], #-1
 8008aac:	d0c6      	beq.n	8008a3c <_format_hex+0x18>
 8008aae:	42ab      	cmp	r3, r5
 8008ab0:	d1f3      	bne.n	8008a9a <_format_hex+0x76>
 8008ab2:	e7c3      	b.n	8008a3c <_format_hex+0x18>
 8008ab4:	f803 5901 	strb.w	r5, [r3], #-1
 8008ab8:	e7c5      	b.n	8008a46 <_format_hex+0x22>
 8008aba:	f803 5901 	strb.w	r5, [r3], #-1
 8008abe:	e7cc      	b.n	8008a5a <_format_hex+0x36>
 8008ac0:	f803 4901 	strb.w	r4, [r3], #-1
 8008ac4:	e7d3      	b.n	8008a6e <_format_hex+0x4a>
 8008ac6:	4630      	mov	r0, r6
 8008ac8:	f814 1b01 	ldrb.w	r1, [r4], #1
 8008acc:	f7ff ff1e 	bl	800890c <_xputch>
 8008ad0:	e7d4      	b.n	8008a7c <_format_hex+0x58>
 8008ad2:	2120      	movs	r1, #32
 8008ad4:	4630      	mov	r0, r6
 8008ad6:	f7ff ff19 	bl	800890c <_xputch>
 8008ada:	3501      	adds	r5, #1
 8008adc:	e7d1      	b.n	8008a82 <_format_hex+0x5e>
	...

08008ae0 <_vprintf>:
 8008ae0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008ae4:	4614      	mov	r4, r2
 8008ae6:	2200      	movs	r2, #0
 8008ae8:	460b      	mov	r3, r1
 8008aea:	2700      	movs	r7, #0
 8008aec:	b099      	sub	sp, #100	; 0x64
 8008aee:	e9cd 2006 	strd	r2, r0, [sp, #24]
 8008af2:	ae08      	add	r6, sp, #32
 8008af4:	7819      	ldrb	r1, [r3, #0]
 8008af6:	b919      	cbnz	r1, 8008b00 <_vprintf+0x20>
 8008af8:	9806      	ldr	r0, [sp, #24]
 8008afa:	b019      	add	sp, #100	; 0x64
 8008afc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008b00:	2925      	cmp	r1, #37	; 0x25
 8008b02:	f103 0501 	add.w	r5, r3, #1
 8008b06:	d004      	beq.n	8008b12 <_vprintf+0x32>
 8008b08:	a803      	add	r0, sp, #12
 8008b0a:	f7ff feff 	bl	800890c <_xputch>
 8008b0e:	462b      	mov	r3, r5
 8008b10:	e7f0      	b.n	8008af4 <_vprintf+0x14>
 8008b12:	2200      	movs	r2, #0
 8008b14:	e9cd 2203 	strd	r2, r2, [sp, #12]
 8008b18:	9205      	str	r2, [sp, #20]
 8008b1a:	785a      	ldrb	r2, [r3, #1]
 8008b1c:	2a30      	cmp	r2, #48	; 0x30
 8008b1e:	d12b      	bne.n	8008b78 <_vprintf+0x98>
 8008b20:	2220      	movs	r2, #32
 8008b22:	9203      	str	r2, [sp, #12]
 8008b24:	1c9d      	adds	r5, r3, #2
 8008b26:	2200      	movs	r2, #0
 8008b28:	46ac      	mov	ip, r5
 8008b2a:	4613      	mov	r3, r2
 8008b2c:	f04f 0e0a 	mov.w	lr, #10
 8008b30:	f89c 1000 	ldrb.w	r1, [ip]
 8008b34:	4665      	mov	r5, ip
 8008b36:	f1a1 0030 	sub.w	r0, r1, #48	; 0x30
 8008b3a:	2809      	cmp	r0, #9
 8008b3c:	f10c 0c01 	add.w	ip, ip, #1
 8008b40:	d91e      	bls.n	8008b80 <_vprintf+0xa0>
 8008b42:	b12a      	cbz	r2, 8008b50 <_vprintf+0x70>
 8008b44:	9305      	str	r3, [sp, #20]
 8008b46:	b11b      	cbz	r3, 8008b50 <_vprintf+0x70>
 8008b48:	9b03      	ldr	r3, [sp, #12]
 8008b4a:	f043 0310 	orr.w	r3, r3, #16
 8008b4e:	9303      	str	r3, [sp, #12]
 8008b50:	292e      	cmp	r1, #46	; 0x2e
 8008b52:	d124      	bne.n	8008b9e <_vprintf+0xbe>
 8008b54:	786b      	ldrb	r3, [r5, #1]
 8008b56:	2b2a      	cmp	r3, #42	; 0x2a
 8008b58:	d016      	beq.n	8008b88 <_vprintf+0xa8>
 8008b5a:	2100      	movs	r1, #0
 8008b5c:	f04f 0c0a 	mov.w	ip, #10
 8008b60:	460a      	mov	r2, r1
 8008b62:	1c68      	adds	r0, r5, #1
 8008b64:	7803      	ldrb	r3, [r0, #0]
 8008b66:	4605      	mov	r5, r0
 8008b68:	3b30      	subs	r3, #48	; 0x30
 8008b6a:	2b09      	cmp	r3, #9
 8008b6c:	f100 0001 	add.w	r0, r0, #1
 8008b70:	d958      	bls.n	8008c24 <_vprintf+0x144>
 8008b72:	b181      	cbz	r1, 8008b96 <_vprintf+0xb6>
 8008b74:	9204      	str	r2, [sp, #16]
 8008b76:	e00e      	b.n	8008b96 <_vprintf+0xb6>
 8008b78:	2a2d      	cmp	r2, #45	; 0x2d
 8008b7a:	d1d4      	bne.n	8008b26 <_vprintf+0x46>
 8008b7c:	2240      	movs	r2, #64	; 0x40
 8008b7e:	e7d0      	b.n	8008b22 <_vprintf+0x42>
 8008b80:	2201      	movs	r2, #1
 8008b82:	fb0e 0303 	mla	r3, lr, r3, r0
 8008b86:	e7d3      	b.n	8008b30 <_vprintf+0x50>
 8008b88:	f854 3b04 	ldr.w	r3, [r4], #4
 8008b8c:	3502      	adds	r5, #2
 8008b8e:	2b00      	cmp	r3, #0
 8008b90:	bfb8      	it	lt
 8008b92:	425b      	neglt	r3, r3
 8008b94:	9304      	str	r3, [sp, #16]
 8008b96:	9b03      	ldr	r3, [sp, #12]
 8008b98:	f043 0301 	orr.w	r3, r3, #1
 8008b9c:	9303      	str	r3, [sp, #12]
 8008b9e:	782b      	ldrb	r3, [r5, #0]
 8008ba0:	2b6c      	cmp	r3, #108	; 0x6c
 8008ba2:	bf04      	itt	eq
 8008ba4:	9b03      	ldreq	r3, [sp, #12]
 8008ba6:	3501      	addeq	r5, #1
 8008ba8:	7829      	ldrb	r1, [r5, #0]
 8008baa:	bf04      	itt	eq
 8008bac:	f043 0304 	orreq.w	r3, r3, #4
 8008bb0:	9303      	streq	r3, [sp, #12]
 8008bb2:	2958      	cmp	r1, #88	; 0x58
 8008bb4:	f000 8173 	beq.w	8008e9e <_vprintf+0x3be>
 8008bb8:	f1a1 0363 	sub.w	r3, r1, #99	; 0x63
 8008bbc:	b2da      	uxtb	r2, r3
 8008bbe:	2a15      	cmp	r2, #21
 8008bc0:	d8a2      	bhi.n	8008b08 <_vprintf+0x28>
 8008bc2:	2b15      	cmp	r3, #21
 8008bc4:	d8a0      	bhi.n	8008b08 <_vprintf+0x28>
 8008bc6:	a201      	add	r2, pc, #4	; (adr r2, 8008bcc <_vprintf+0xec>)
 8008bc8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008bcc:	08008c2d 	stmdaeq	r0, {r0, r2, r3, r5, sl, fp, pc}
 8008bd0:	08008c3b 	stmdaeq	r0, {r0, r1, r3, r4, r5, sl, fp, pc}
 8008bd4:	08008b09 	stmdaeq	r0, {r0, r3, r8, r9, fp, pc}
 8008bd8:	08008c6f 	stmdaeq	r0, {r0, r1, r2, r3, r5, r6, sl, fp, pc}
 8008bdc:	08008b09 	stmdaeq	r0, {r0, r3, r8, r9, fp, pc}
 8008be0:	08008b09 	stmdaeq	r0, {r0, r3, r8, r9, fp, pc}
 8008be4:	08008c3b 	stmdaeq	r0, {r0, r1, r3, r4, r5, sl, fp, pc}
 8008be8:	08008b09 	stmdaeq	r0, {r0, r3, r8, r9, fp, pc}
 8008bec:	08008b09 	stmdaeq	r0, {r0, r3, r8, r9, fp, pc}
 8008bf0:	08008b09 	stmdaeq	r0, {r0, r3, r8, r9, fp, pc}
 8008bf4:	08008b09 	stmdaeq	r0, {r0, r3, r8, r9, fp, pc}
 8008bf8:	08008b09 	stmdaeq	r0, {r0, r3, r8, r9, fp, pc}
 8008bfc:	08008b09 	stmdaeq	r0, {r0, r3, r8, r9, fp, pc}
 8008c00:	08008de1 	stmdaeq	r0, {r0, r5, r6, r7, r8, sl, fp, pc}
 8008c04:	08008b09 	stmdaeq	r0, {r0, r3, r8, r9, fp, pc}
 8008c08:	08008b09 	stmdaeq	r0, {r0, r3, r8, r9, fp, pc}
 8008c0c:	08008e07 	stmdaeq	r0, {r0, r1, r2, r9, sl, fp, pc}
 8008c10:	08008b09 	stmdaeq	r0, {r0, r3, r8, r9, fp, pc}
 8008c14:	08008e81 	stmdaeq	r0, {r0, r7, r9, sl, fp, pc}
 8008c18:	08008b09 	stmdaeq	r0, {r0, r3, r8, r9, fp, pc}
 8008c1c:	08008b09 	stmdaeq	r0, {r0, r3, r8, r9, fp, pc}
 8008c20:	08008ea7 	stmdaeq	r0, {r0, r1, r2, r5, r7, r9, sl, fp, pc}
 8008c24:	2101      	movs	r1, #1
 8008c26:	fb0c 3202 	mla	r2, ip, r2, r3
 8008c2a:	e79b      	b.n	8008b64 <_vprintf+0x84>
 8008c2c:	f854 1b04 	ldr.w	r1, [r4], #4
 8008c30:	a803      	add	r0, sp, #12
 8008c32:	f7ff fe6b 	bl	800890c <_xputch>
 8008c36:	3501      	adds	r5, #1
 8008c38:	e769      	b.n	8008b0e <_vprintf+0x2e>
 8008c3a:	9903      	ldr	r1, [sp, #12]
 8008c3c:	074a      	lsls	r2, r1, #29
 8008c3e:	bf43      	ittte	mi
 8008c40:	3407      	addmi	r4, #7
 8008c42:	f024 0307 	bicmi.w	r3, r4, #7
 8008c46:	461c      	movmi	r4, r3
 8008c48:	f854 2b04 	ldrpl.w	r2, [r4], #4
 8008c4c:	bf4a      	itet	mi
 8008c4e:	685b      	ldrmi	r3, [r3, #4]
 8008c50:	17d3      	asrpl	r3, r2, #31
 8008c52:	f854 2b08 	ldrmi.w	r2, [r4], #8
 8008c56:	2b00      	cmp	r3, #0
 8008c58:	da05      	bge.n	8008c66 <_vprintf+0x186>
 8008c5a:	f041 0108 	orr.w	r1, r1, #8
 8008c5e:	4252      	negs	r2, r2
 8008c60:	9103      	str	r1, [sp, #12]
 8008c62:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8008c66:	a803      	add	r0, sp, #12
 8008c68:	f7ff fe66 	bl	8008938 <_format_int>
 8008c6c:	e7e3      	b.n	8008c36 <_vprintf+0x156>
 8008c6e:	3407      	adds	r4, #7
 8008c70:	f024 0407 	bic.w	r4, r4, #7
 8008c74:	e8f4 0102 	ldrd	r0, r1, [r4], #8
 8008c78:	f7fe fa96 	bl	80071a8 <__aeabi_d2f>
 8008c7c:	9b03      	ldr	r3, [sp, #12]
 8008c7e:	4639      	mov	r1, r7
 8008c80:	07db      	lsls	r3, r3, #31
 8008c82:	bf54      	ite	pl
 8008c84:	f04f 0a06 	movpl.w	sl, #6
 8008c88:	f8dd a010 	ldrmi.w	sl, [sp, #16]
 8008c8c:	4681      	mov	r9, r0
 8008c8e:	f7fe fc37 	bl	8007500 <__aeabi_fcmplt>
 8008c92:	2800      	cmp	r0, #0
 8008c94:	d069      	beq.n	8008d6a <_vprintf+0x28a>
 8008c96:	232d      	movs	r3, #45	; 0x2d
 8008c98:	f109 4900 	add.w	r9, r9, #2147483648	; 0x80000000
 8008c9c:	f88d 3020 	strb.w	r3, [sp, #32]
 8008ca0:	f10d 0b21 	add.w	fp, sp, #33	; 0x21
 8008ca4:	4648      	mov	r0, r9
 8008ca6:	f7fe fc53 	bl	8007550 <__aeabi_f2iz>
 8008caa:	4659      	mov	r1, fp
 8008cac:	2200      	movs	r2, #0
 8008cae:	4680      	mov	r8, r0
 8008cb0:	f7ff fdf2 	bl	8008898 <_itostr>
 8008cb4:	eb0b 0200 	add.w	r2, fp, r0
 8008cb8:	e9cd 2000 	strd	r2, r0, [sp]
 8008cbc:	4640      	mov	r0, r8
 8008cbe:	f7fe fb7d 	bl	80073bc <__aeabi_i2f>
 8008cc2:	4601      	mov	r1, r0
 8008cc4:	4648      	mov	r0, r9
 8008cc6:	f7fe fac3 	bl	8007250 <__aeabi_fsub>
 8008cca:	222e      	movs	r2, #46	; 0x2e
 8008ccc:	4601      	mov	r1, r0
 8008cce:	200a      	movs	r0, #10
 8008cd0:	9b00      	ldr	r3, [sp, #0]
 8008cd2:	f10a 0901 	add.w	r9, sl, #1
 8008cd6:	f103 0801 	add.w	r8, r3, #1
 8008cda:	9b01      	ldr	r3, [sp, #4]
 8008cdc:	f80b 2003 	strb.w	r2, [fp, r3]
 8008ce0:	4603      	mov	r3, r0
 8008ce2:	f1ba 0f00 	cmp.w	sl, #0
 8008ce6:	dc42      	bgt.n	8008d6e <_vprintf+0x28e>
 8008ce8:	9100      	str	r1, [sp, #0]
 8008cea:	f7fe fb67 	bl	80073bc <__aeabi_i2f>
 8008cee:	9900      	ldr	r1, [sp, #0]
 8008cf0:	f7fe ff94 	bl	8007c1c <__aeabi_fmul>
 8008cf4:	f7fe fc2c 	bl	8007550 <__aeabi_f2iz>
 8008cf8:	4641      	mov	r1, r8
 8008cfa:	464a      	mov	r2, r9
 8008cfc:	f7ff fdcc 	bl	8008898 <_itostr>
 8008d00:	4480      	add	r8, r0
 8008d02:	eba8 0806 	sub.w	r8, r8, r6
 8008d06:	f108 31ff 	add.w	r1, r8, #4294967295	; 0xffffffff
 8008d0a:	5c73      	ldrb	r3, [r6, r1]
 8008d0c:	1872      	adds	r2, r6, r1
 8008d0e:	2b34      	cmp	r3, #52	; 0x34
 8008d10:	d910      	bls.n	8008d34 <_vprintf+0x254>
 8008d12:	f812 0c01 	ldrb.w	r0, [r2, #-1]
 8008d16:	1e53      	subs	r3, r2, #1
 8008d18:	282e      	cmp	r0, #46	; 0x2e
 8008d1a:	d02f      	beq.n	8008d7c <_vprintf+0x29c>
 8008d1c:	469c      	mov	ip, r3
 8008d1e:	f04f 0e30 	mov.w	lr, #48	; 0x30
 8008d22:	4663      	mov	r3, ip
 8008d24:	f81c 0901 	ldrb.w	r0, [ip], #-1
 8008d28:	2839      	cmp	r0, #57	; 0x39
 8008d2a:	d024      	beq.n	8008d76 <_vprintf+0x296>
 8008d2c:	282e      	cmp	r0, #46	; 0x2e
 8008d2e:	d025      	beq.n	8008d7c <_vprintf+0x29c>
 8008d30:	3001      	adds	r0, #1
 8008d32:	7018      	strb	r0, [r3, #0]
 8008d34:	f101 0360 	add.w	r3, r1, #96	; 0x60
 8008d38:	446b      	add	r3, sp
 8008d3a:	f813 3c41 	ldrb.w	r3, [r3, #-65]
 8008d3e:	2b2e      	cmp	r3, #46	; 0x2e
 8008d40:	bf08      	it	eq
 8008d42:	f101 31ff 	addeq.w	r1, r1, #4294967295	; 0xffffffff
 8008d46:	4688      	mov	r8, r1
 8008d48:	4689      	mov	r9, r1
 8008d4a:	9b05      	ldr	r3, [sp, #20]
 8008d4c:	454b      	cmp	r3, r9
 8008d4e:	dc40      	bgt.n	8008dd2 <_vprintf+0x2f2>
 8008d50:	46b1      	mov	r9, r6
 8008d52:	f1b8 0f00 	cmp.w	r8, #0
 8008d56:	f77f af6e 	ble.w	8008c36 <_vprintf+0x156>
 8008d5a:	f819 1b01 	ldrb.w	r1, [r9], #1
 8008d5e:	a803      	add	r0, sp, #12
 8008d60:	f7ff fdd4 	bl	800890c <_xputch>
 8008d64:	f108 38ff 	add.w	r8, r8, #4294967295	; 0xffffffff
 8008d68:	e7f3      	b.n	8008d52 <_vprintf+0x272>
 8008d6a:	46b3      	mov	fp, r6
 8008d6c:	e79a      	b.n	8008ca4 <_vprintf+0x1c4>
 8008d6e:	4358      	muls	r0, r3
 8008d70:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
 8008d74:	e7b5      	b.n	8008ce2 <_vprintf+0x202>
 8008d76:	f88c e001 	strb.w	lr, [ip, #1]
 8008d7a:	e7d2      	b.n	8008d22 <_vprintf+0x242>
 8008d7c:	f04f 0c30 	mov.w	ip, #48	; 0x30
 8008d80:	3b01      	subs	r3, #1
 8008d82:	7818      	ldrb	r0, [r3, #0]
 8008d84:	2839      	cmp	r0, #57	; 0x39
 8008d86:	d112      	bne.n	8008dae <_vprintf+0x2ce>
 8008d88:	42b3      	cmp	r3, r6
 8008d8a:	d20d      	bcs.n	8008da8 <_vprintf+0x2c8>
 8008d8c:	1c98      	adds	r0, r3, #2
 8008d8e:	1c59      	adds	r1, r3, #1
 8008d90:	4281      	cmp	r1, r0
 8008d92:	eba2 0203 	sub.w	r2, r2, r3
 8008d96:	d913      	bls.n	8008dc0 <_vprintf+0x2e0>
 8008d98:	3201      	adds	r2, #1
 8008d9a:	441a      	add	r2, r3
 8008d9c:	428a      	cmp	r2, r1
 8008d9e:	d10b      	bne.n	8008db8 <_vprintf+0x2d8>
 8008da0:	2231      	movs	r2, #49	; 0x31
 8008da2:	4641      	mov	r1, r8
 8008da4:	705a      	strb	r2, [r3, #1]
 8008da6:	e7c5      	b.n	8008d34 <_vprintf+0x254>
 8008da8:	f803 c901 	strb.w	ip, [r3], #-1
 8008dac:	e7e9      	b.n	8008d82 <_vprintf+0x2a2>
 8008dae:	42b3      	cmp	r3, r6
 8008db0:	d3ec      	bcc.n	8008d8c <_vprintf+0x2ac>
 8008db2:	282d      	cmp	r0, #45	; 0x2d
 8008db4:	d0ea      	beq.n	8008d8c <_vprintf+0x2ac>
 8008db6:	e7bb      	b.n	8008d30 <_vprintf+0x250>
 8008db8:	f811 0b01 	ldrb.w	r0, [r1], #1
 8008dbc:	7008      	strb	r0, [r1, #0]
 8008dbe:	e7ed      	b.n	8008d9c <_vprintf+0x2bc>
 8008dc0:	4411      	add	r1, r2
 8008dc2:	4402      	add	r2, r0
 8008dc4:	4290      	cmp	r0, r2
 8008dc6:	d0eb      	beq.n	8008da0 <_vprintf+0x2c0>
 8008dc8:	f811 cd01 	ldrb.w	ip, [r1, #-1]!
 8008dcc:	f802 cd01 	strb.w	ip, [r2, #-1]!
 8008dd0:	e7f8      	b.n	8008dc4 <_vprintf+0x2e4>
 8008dd2:	2120      	movs	r1, #32
 8008dd4:	a803      	add	r0, sp, #12
 8008dd6:	f7ff fd99 	bl	800890c <_xputch>
 8008dda:	f109 0901 	add.w	r9, r9, #1
 8008dde:	e7b4      	b.n	8008d4a <_vprintf+0x26a>
 8008de0:	2308      	movs	r3, #8
 8008de2:	9305      	str	r3, [sp, #20]
 8008de4:	2320      	movs	r3, #32
 8008de6:	2130      	movs	r1, #48	; 0x30
 8008de8:	f854 8b04 	ldr.w	r8, [r4], #4
 8008dec:	a803      	add	r0, sp, #12
 8008dee:	9303      	str	r3, [sp, #12]
 8008df0:	f7ff fd8c 	bl	800890c <_xputch>
 8008df4:	2178      	movs	r1, #120	; 0x78
 8008df6:	a803      	add	r0, sp, #12
 8008df8:	f7ff fd88 	bl	800890c <_xputch>
 8008dfc:	4641      	mov	r1, r8
 8008dfe:	a803      	add	r0, sp, #12
 8008e00:	f7ff fe10 	bl	8008a24 <_format_hex>
 8008e04:	e717      	b.n	8008c36 <_vprintf+0x156>
 8008e06:	f04f 0800 	mov.w	r8, #0
 8008e0a:	f854 9b04 	ldr.w	r9, [r4], #4
 8008e0e:	f819 3008 	ldrb.w	r3, [r9, r8]
 8008e12:	b993      	cbnz	r3, 8008e3a <_vprintf+0x35a>
 8008e14:	9b03      	ldr	r3, [sp, #12]
 8008e16:	07d9      	lsls	r1, r3, #31
 8008e18:	d503      	bpl.n	8008e22 <_vprintf+0x342>
 8008e1a:	9b04      	ldr	r3, [sp, #16]
 8008e1c:	4598      	cmp	r8, r3
 8008e1e:	bfa8      	it	ge
 8008e20:	4698      	movge	r8, r3
 8008e22:	9b03      	ldr	r3, [sp, #12]
 8008e24:	f108 0a01 	add.w	sl, r8, #1
 8008e28:	065a      	lsls	r2, r3, #25
 8008e2a:	d403      	bmi.n	8008e34 <_vprintf+0x354>
 8008e2c:	9b05      	ldr	r3, [sp, #20]
 8008e2e:	4598      	cmp	r8, r3
 8008e30:	db06      	blt.n	8008e40 <_vprintf+0x360>
 8008e32:	46d0      	mov	r8, sl
 8008e34:	f109 39ff 	add.w	r9, r9, #4294967295	; 0xffffffff
 8008e38:	e00e      	b.n	8008e58 <_vprintf+0x378>
 8008e3a:	f108 0801 	add.w	r8, r8, #1
 8008e3e:	e7e6      	b.n	8008e0e <_vprintf+0x32e>
 8008e40:	2120      	movs	r1, #32
 8008e42:	a803      	add	r0, sp, #12
 8008e44:	f7ff fd62 	bl	800890c <_xputch>
 8008e48:	46d0      	mov	r8, sl
 8008e4a:	e7ea      	b.n	8008e22 <_vprintf+0x342>
 8008e4c:	a803      	add	r0, sp, #12
 8008e4e:	f7ff fd5d 	bl	800890c <_xputch>
 8008e52:	9b04      	ldr	r3, [sp, #16]
 8008e54:	3b01      	subs	r3, #1
 8008e56:	9304      	str	r3, [sp, #16]
 8008e58:	9b03      	ldr	r3, [sp, #12]
 8008e5a:	07db      	lsls	r3, r3, #31
 8008e5c:	d501      	bpl.n	8008e62 <_vprintf+0x382>
 8008e5e:	9b04      	ldr	r3, [sp, #16]
 8008e60:	b11b      	cbz	r3, 8008e6a <_vprintf+0x38a>
 8008e62:	f819 1f01 	ldrb.w	r1, [r9, #1]!
 8008e66:	2900      	cmp	r1, #0
 8008e68:	d1f0      	bne.n	8008e4c <_vprintf+0x36c>
 8008e6a:	9b05      	ldr	r3, [sp, #20]
 8008e6c:	4543      	cmp	r3, r8
 8008e6e:	f77f aee2 	ble.w	8008c36 <_vprintf+0x156>
 8008e72:	2120      	movs	r1, #32
 8008e74:	a803      	add	r0, sp, #12
 8008e76:	f7ff fd49 	bl	800890c <_xputch>
 8008e7a:	f108 0801 	add.w	r8, r8, #1
 8008e7e:	e7f4      	b.n	8008e6a <_vprintf+0x38a>
 8008e80:	9b03      	ldr	r3, [sp, #12]
 8008e82:	f013 0304 	ands.w	r3, r3, #4
 8008e86:	bf1d      	ittte	ne
 8008e88:	3407      	addne	r4, #7
 8008e8a:	f024 0307 	bicne.w	r3, r4, #7
 8008e8e:	461c      	movne	r4, r3
 8008e90:	f854 2b04 	ldreq.w	r2, [r4], #4
 8008e94:	bf1c      	itt	ne
 8008e96:	f854 2b08 	ldrne.w	r2, [r4], #8
 8008e9a:	685b      	ldrne	r3, [r3, #4]
 8008e9c:	e6e3      	b.n	8008c66 <_vprintf+0x186>
 8008e9e:	9b03      	ldr	r3, [sp, #12]
 8008ea0:	f043 0302 	orr.w	r3, r3, #2
 8008ea4:	9303      	str	r3, [sp, #12]
 8008ea6:	f854 1b04 	ldr.w	r1, [r4], #4
 8008eaa:	e7a8      	b.n	8008dfe <_vprintf+0x31e>

08008eac <printf>:
 8008eac:	b40f      	push	{r0, r1, r2, r3}
 8008eae:	b507      	push	{r0, r1, r2, lr}
 8008eb0:	aa04      	add	r2, sp, #16
 8008eb2:	f852 1b04 	ldr.w	r1, [r2], #4
 8008eb6:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8008eba:	9201      	str	r2, [sp, #4]
 8008ebc:	f7ff fe10 	bl	8008ae0 <_vprintf>
 8008ec0:	b003      	add	sp, #12
 8008ec2:	f85d eb04 	ldr.w	lr, [sp], #4
 8008ec6:	b004      	add	sp, #16
 8008ec8:	4770      	bx	lr
	...

08008ecc <sprintf>:
 8008ecc:	b40e      	push	{r1, r2, r3}
 8008ece:	b517      	push	{r0, r1, r2, r4, lr}
 8008ed0:	4c09      	ldr	r4, [pc, #36]	; (8008ef8 <sprintf+0x2c>)
 8008ed2:	aa05      	add	r2, sp, #20
 8008ed4:	f852 1b04 	ldr.w	r1, [r2], #4
 8008ed8:	6020      	str	r0, [r4, #0]
 8008eda:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8008ede:	9201      	str	r2, [sp, #4]
 8008ee0:	f7ff fdfe 	bl	8008ae0 <_vprintf>
 8008ee4:	2300      	movs	r3, #0
 8008ee6:	6822      	ldr	r2, [r4, #0]
 8008ee8:	6023      	str	r3, [r4, #0]
 8008eea:	7013      	strb	r3, [r2, #0]
 8008eec:	b003      	add	sp, #12
 8008eee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8008ef2:	b003      	add	sp, #12
 8008ef4:	4770      	bx	lr
 8008ef6:	bf00      	nop
 8008ef8:	200000e8 	andcs	r0, r0, r8, ror #1

08008efc <snprintf>:
 8008efc:	b40c      	push	{r2, r3}
 8008efe:	460b      	mov	r3, r1
 8008f00:	b513      	push	{r0, r1, r4, lr}
 8008f02:	4c09      	ldr	r4, [pc, #36]	; (8008f28 <snprintf+0x2c>)
 8008f04:	aa04      	add	r2, sp, #16
 8008f06:	f852 1b04 	ldr.w	r1, [r2], #4
 8008f0a:	6020      	str	r0, [r4, #0]
 8008f0c:	4618      	mov	r0, r3
 8008f0e:	9201      	str	r2, [sp, #4]
 8008f10:	f7ff fde6 	bl	8008ae0 <_vprintf>
 8008f14:	2300      	movs	r3, #0
 8008f16:	6822      	ldr	r2, [r4, #0]
 8008f18:	6023      	str	r3, [r4, #0]
 8008f1a:	7013      	strb	r3, [r2, #0]
 8008f1c:	b002      	add	sp, #8
 8008f1e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8008f22:	b002      	add	sp, #8
 8008f24:	4770      	bx	lr
 8008f26:	bf00      	nop
 8008f28:	200000e8 	andcs	r0, r0, r8, ror #1

08008f2c <vsnprintf>:
 8008f2c:	b538      	push	{r3, r4, r5, lr}
 8008f2e:	4605      	mov	r5, r0
 8008f30:	4c05      	ldr	r4, [pc, #20]	; (8008f48 <vsnprintf+0x1c>)
 8008f32:	4608      	mov	r0, r1
 8008f34:	4611      	mov	r1, r2
 8008f36:	461a      	mov	r2, r3
 8008f38:	6025      	str	r5, [r4, #0]
 8008f3a:	f7ff fdd1 	bl	8008ae0 <_vprintf>
 8008f3e:	2300      	movs	r3, #0
 8008f40:	6822      	ldr	r2, [r4, #0]
 8008f42:	6023      	str	r3, [r4, #0]
 8008f44:	7013      	strb	r3, [r2, #0]
 8008f46:	bd38      	pop	{r3, r4, r5, pc}
 8008f48:	200000e8 	andcs	r0, r0, r8, ror #1

08008f4c <RemoteConfig::HandleList()>:
 8008f4c:	2212      	movs	r2, #18
 8008f4e:	6803      	ldr	r3, [r0, #0]
 8008f50:	492f      	ldr	r1, [pc, #188]	; (8009010 <RemoteConfig::HandleList()+0xc4>)
 8008f52:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008f56:	fb02 1103 	mla	r1, r2, r3, r1
 8008f5a:	220c      	movs	r2, #12
 8008f5c:	4604      	mov	r4, r0
 8008f5e:	6843      	ldr	r3, [r0, #4]
 8008f60:	482c      	ldr	r0, [pc, #176]	; (8009014 <RemoteConfig::HandleList()+0xc8>)
 8008f62:	4e2d      	ldr	r6, [pc, #180]	; (8009018 <RemoteConfig::HandleList()+0xcc>)
 8008f64:	fb02 0003 	mla	r0, r2, r3, r0
 8008f68:	4b2c      	ldr	r3, [pc, #176]	; (800901c <RemoteConfig::HandleList()+0xd0>)
 8008f6a:	4f2d      	ldr	r7, [pc, #180]	; (8009020 <RemoteConfig::HandleList()+0xd4>)
 8008f6c:	681b      	ldr	r3, [r3, #0]
 8008f6e:	6835      	ldr	r5, [r6, #0]
 8008f70:	f8d3 c010 	ldr.w	ip, [r3, #16]
 8008f74:	f897 9009 	ldrb.w	r9, [r7, #9]
 8008f78:	fa5f f38c 	uxtb.w	r3, ip
 8008f7c:	ea4f 6e1c 	mov.w	lr, ip, lsr #24
 8008f80:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8008f84:	f8d4 8008 	ldr.w	r8, [r4, #8]
 8008f88:	b089      	sub	sp, #36	; 0x24
 8008f8a:	3507      	adds	r5, #7
 8008f8c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8008f90:	f1b9 0f00 	cmp.w	r9, #0
 8008f94:	d020      	beq.n	8008fd8 <RemoteConfig::HandleList()+0x8c>
 8008f96:	b2d2      	uxtb	r2, r2
 8008f98:	3709      	adds	r7, #9
 8008f9a:	9201      	str	r2, [sp, #4]
 8008f9c:	fa5f f28c 	uxtb.w	r2, ip
 8008fa0:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8008fa4:	9200      	str	r2, [sp, #0]
 8008fa6:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 8008faa:	4628      	mov	r0, r5
 8008fac:	e9cd 8705 	strd	r8, r7, [sp, #20]
 8008fb0:	4a1c      	ldr	r2, [pc, #112]	; (8009024 <RemoteConfig::HandleList()+0xd8>)
 8008fb2:	f8cd e008 	str.w	lr, [sp, #8]
 8008fb6:	f7ff ffa1 	bl	8008efc <snprintf>
 8008fba:	8ba3      	ldrh	r3, [r4, #28]
 8008fbc:	2b05      	cmp	r3, #5
 8008fbe:	d11b      	bne.n	8008ff8 <RemoteConfig::HandleList()+0xac>
 8008fc0:	f642 1305 	movw	r3, #10501	; 0x2905
 8008fc4:	9300      	str	r3, [sp, #0]
 8008fc6:	69a3      	ldr	r3, [r4, #24]
 8008fc8:	b282      	uxth	r2, r0
 8008fca:	4629      	mov	r1, r5
 8008fcc:	7d20      	ldrb	r0, [r4, #20]
 8008fce:	f006 ff4b 	bl	800fe68 <udp_send>
 8008fd2:	b009      	add	sp, #36	; 0x24
 8008fd4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8008fd8:	b2d2      	uxtb	r2, r2
 8008fda:	9201      	str	r2, [sp, #4]
 8008fdc:	fa5f f28c 	uxtb.w	r2, ip
 8008fe0:	e9cd 0804 	strd	r0, r8, [sp, #16]
 8008fe4:	e9cd e102 	strd	lr, r1, [sp, #8]
 8008fe8:	9200      	str	r2, [sp, #0]
 8008fea:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 8008fee:	4628      	mov	r0, r5
 8008ff0:	4a0d      	ldr	r2, [pc, #52]	; (8009028 <RemoteConfig::HandleList()+0xdc>)
 8008ff2:	f7ff ff83 	bl	8008efc <snprintf>
 8008ff6:	e7e0      	b.n	8008fba <RemoteConfig::HandleList()+0x6e>
 8008ff8:	2b06      	cmp	r3, #6
 8008ffa:	d1ea      	bne.n	8008fd2 <RemoteConfig::HandleList()+0x86>
 8008ffc:	6833      	ldr	r3, [r6, #0]
 8008ffe:	799b      	ldrb	r3, [r3, #6]
 8009000:	2b2a      	cmp	r3, #42	; 0x2a
 8009002:	d1e6      	bne.n	8008fd2 <RemoteConfig::HandleList()+0x86>
 8009004:	f642 1305 	movw	r3, #10501	; 0x2905
 8009008:	9300      	str	r3, [sp, #0]
 800900a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800900e:	e7db      	b.n	8008fc8 <RemoteConfig::HandleList()+0x7c>
 8009010:	08015bcf 	stmdaeq	r1, {r0, r1, r2, r3, r6, r7, r8, r9, fp, ip, lr}
 8009014:	08015c71 	stmdaeq	r1, {r0, r4, r5, r6, sl, fp, ip, lr}
 8009018:	200000ec 	andcs	r0, r0, ip, ror #1
 800901c:	200136ac 	andcs	r3, r1, ip, lsr #13
 8009020:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 8009024:	08015b09 	stmdaeq	r1, {r0, r3, r8, r9, fp, ip, lr}
 8009028:	08015b22 	stmdaeq	r1, {r1, r5, r8, r9, fp, ip, lr}

0800902c <RemoteConfig::HandleDisplayGet()>:
 800902c:	8b83      	ldrh	r3, [r0, #28]
 800902e:	2b08      	cmp	r3, #8
 8009030:	d11b      	bne.n	800906a <RemoteConfig::HandleDisplayGet()+0x3e>
 8009032:	4b0e      	ldr	r3, [pc, #56]	; (800906c <RemoteConfig::HandleDisplayGet()+0x40>)
 8009034:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009036:	681b      	ldr	r3, [r3, #0]
 8009038:	4d0d      	ldr	r5, [pc, #52]	; (8009070 <RemoteConfig::HandleDisplayGet()+0x44>)
 800903a:	7c19      	ldrb	r1, [r3, #16]
 800903c:	4a0d      	ldr	r2, [pc, #52]	; (8009074 <RemoteConfig::HandleDisplayGet()+0x48>)
 800903e:	4b0e      	ldr	r3, [pc, #56]	; (8009078 <RemoteConfig::HandleDisplayGet()+0x4c>)
 8009040:	4604      	mov	r4, r0
 8009042:	2900      	cmp	r1, #0
 8009044:	bf18      	it	ne
 8009046:	4613      	movne	r3, r2
 8009048:	6828      	ldr	r0, [r5, #0]
 800904a:	f240 31ff 	movw	r1, #1023	; 0x3ff
 800904e:	4a0b      	ldr	r2, [pc, #44]	; (800907c <RemoteConfig::HandleDisplayGet()+0x50>)
 8009050:	f7ff ff54 	bl	8008efc <snprintf>
 8009054:	f642 1305 	movw	r3, #10501	; 0x2905
 8009058:	9300      	str	r3, [sp, #0]
 800905a:	b282      	uxth	r2, r0
 800905c:	69a3      	ldr	r3, [r4, #24]
 800905e:	6829      	ldr	r1, [r5, #0]
 8009060:	7d20      	ldrb	r0, [r4, #20]
 8009062:	f006 ff01 	bl	800fe68 <udp_send>
 8009066:	b003      	add	sp, #12
 8009068:	bd30      	pop	{r4, r5, pc}
 800906a:	4770      	bx	lr
 800906c:	20013ce4 	andcs	r3, r1, r4, ror #25
 8009070:	200000ec 	andcs	r0, r0, ip, ror #1
 8009074:	08015b3b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r8, r9, fp, ip, lr}
 8009078:	08015b38 	stmdaeq	r1, {r3, r4, r5, r8, r9, fp, ip, lr}
 800907c:	08015b3f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r8, r9, fp, ip, lr}

08009080 <RemoteConfig::HandleTftpSet()>:
 8009080:	8b82      	ldrh	r2, [r0, #28]
 8009082:	2a06      	cmp	r2, #6
 8009084:	d109      	bne.n	800909a <RemoteConfig::HandleTftpSet()+0x1a>
 8009086:	4a05      	ldr	r2, [pc, #20]	; (800909c <RemoteConfig::HandleTftpSet()+0x1c>)
 8009088:	6812      	ldr	r2, [r2, #0]
 800908a:	7992      	ldrb	r2, [r2, #6]
 800908c:	3a30      	subs	r2, #48	; 0x30
 800908e:	bf18      	it	ne
 8009090:	2201      	movne	r2, #1
 8009092:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8009096:	f000 bd3f 	b.w	8009b18 <RemoteConfig::PlatformHandleTftpSet()>
 800909a:	4770      	bx	lr
 800909c:	200000ec 	andcs	r0, r0, ip, ror #1

080090a0 <RemoteConfig::HandleTftpGet()>:
 80090a0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80090a2:	4604      	mov	r4, r0
 80090a4:	f000 fd40 	bl	8009b28 <RemoteConfig::PlatformHandleTftpGet()>
 80090a8:	8ba3      	ldrh	r3, [r4, #28]
 80090aa:	2b05      	cmp	r3, #5
 80090ac:	d116      	bne.n	80090dc <RemoteConfig::HandleTftpGet()+0x3c>
 80090ae:	f894 1024 	ldrb.w	r1, [r4, #36]	; 0x24
 80090b2:	4d0b      	ldr	r5, [pc, #44]	; (80090e0 <RemoteConfig::HandleTftpGet()+0x40>)
 80090b4:	4a0b      	ldr	r2, [pc, #44]	; (80090e4 <RemoteConfig::HandleTftpGet()+0x44>)
 80090b6:	4b0c      	ldr	r3, [pc, #48]	; (80090e8 <RemoteConfig::HandleTftpGet()+0x48>)
 80090b8:	6828      	ldr	r0, [r5, #0]
 80090ba:	2900      	cmp	r1, #0
 80090bc:	bf08      	it	eq
 80090be:	4613      	moveq	r3, r2
 80090c0:	f240 31ff 	movw	r1, #1023	; 0x3ff
 80090c4:	4a09      	ldr	r2, [pc, #36]	; (80090ec <RemoteConfig::HandleTftpGet()+0x4c>)
 80090c6:	f7ff ff19 	bl	8008efc <snprintf>
 80090ca:	f642 1305 	movw	r3, #10501	; 0x2905
 80090ce:	b282      	uxth	r2, r0
 80090d0:	9300      	str	r3, [sp, #0]
 80090d2:	6829      	ldr	r1, [r5, #0]
 80090d4:	69a3      	ldr	r3, [r4, #24]
 80090d6:	7d20      	ldrb	r0, [r4, #20]
 80090d8:	f006 fec6 	bl	800fe68 <udp_send>
 80090dc:	b003      	add	sp, #12
 80090de:	bd30      	pop	{r4, r5, pc}
 80090e0:	200000ec 	andcs	r0, r0, ip, ror #1
 80090e4:	08015b3b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r8, r9, fp, ip, lr}
 80090e8:	08015b38 	stmdaeq	r1, {r3, r4, r5, r8, r9, fp, ip, lr}
 80090ec:	08015b4b 	stmdaeq	r1, {r0, r1, r3, r6, r8, r9, fp, ip, lr}

080090f0 <RemoteConfig::HandleVersion()>:
 80090f0:	8b83      	ldrh	r3, [r0, #28]
 80090f2:	2b08      	cmp	r3, #8
 80090f4:	d114      	bne.n	8009120 <RemoteConfig::HandleVersion()+0x30>
 80090f6:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80090f8:	4d0a      	ldr	r5, [pc, #40]	; (8009124 <RemoteConfig::HandleVersion()+0x34>)
 80090fa:	4604      	mov	r4, r0
 80090fc:	f240 31ff 	movw	r1, #1023	; 0x3ff
 8009100:	4b09      	ldr	r3, [pc, #36]	; (8009128 <RemoteConfig::HandleVersion()+0x38>)
 8009102:	4a0a      	ldr	r2, [pc, #40]	; (800912c <RemoteConfig::HandleVersion()+0x3c>)
 8009104:	6828      	ldr	r0, [r5, #0]
 8009106:	f7ff fef9 	bl	8008efc <snprintf>
 800910a:	f642 1305 	movw	r3, #10501	; 0x2905
 800910e:	9300      	str	r3, [sp, #0]
 8009110:	b282      	uxth	r2, r0
 8009112:	69a3      	ldr	r3, [r4, #24]
 8009114:	6829      	ldr	r1, [r5, #0]
 8009116:	7d20      	ldrb	r0, [r4, #20]
 8009118:	f006 fea6 	bl	800fe68 <udp_send>
 800911c:	b003      	add	sp, #12
 800911e:	bd30      	pop	{r4, r5, pc}
 8009120:	4770      	bx	lr
 8009122:	bf00      	nop
 8009124:	200000ec 	andcs	r0, r0, ip, ror #1
 8009128:	20013d8a 	andcs	r3, r1, sl, lsl #27
 800912c:	08015b54 	stmdaeq	r1, {r2, r4, r6, r8, r9, fp, ip, lr}

08009130 <RemoteConfig::HandleUptime()>:
 8009130:	7bc3      	ldrb	r3, [r0, #15]
 8009132:	b1e3      	cbz	r3, 800916e <RemoteConfig::HandleUptime()+0x3e>
 8009134:	4b0e      	ldr	r3, [pc, #56]	; (8009170 <RemoteConfig::HandleUptime()+0x40>)
 8009136:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009138:	681a      	ldr	r2, [r3, #0]
 800913a:	8b83      	ldrh	r3, [r0, #28]
 800913c:	4604      	mov	r4, r0
 800913e:	2b07      	cmp	r3, #7
 8009140:	d113      	bne.n	800916a <RemoteConfig::HandleUptime()+0x3a>
 8009142:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8009146:	4d0b      	ldr	r5, [pc, #44]	; (8009174 <RemoteConfig::HandleUptime()+0x44>)
 8009148:	fbb2 f3f3 	udiv	r3, r2, r3
 800914c:	f240 31ff 	movw	r1, #1023	; 0x3ff
 8009150:	4a09      	ldr	r2, [pc, #36]	; (8009178 <RemoteConfig::HandleUptime()+0x48>)
 8009152:	6828      	ldr	r0, [r5, #0]
 8009154:	f7ff fed2 	bl	8008efc <snprintf>
 8009158:	f642 1305 	movw	r3, #10501	; 0x2905
 800915c:	9300      	str	r3, [sp, #0]
 800915e:	b282      	uxth	r2, r0
 8009160:	69a3      	ldr	r3, [r4, #24]
 8009162:	6829      	ldr	r1, [r5, #0]
 8009164:	7d20      	ldrb	r0, [r4, #20]
 8009166:	f006 fe7f 	bl	800fe68 <udp_send>
 800916a:	b003      	add	sp, #12
 800916c:	bd30      	pop	{r4, r5, pc}
 800916e:	4770      	bx	lr
 8009170:	20013df4 	strdcs	r3, [r1], -r4
 8009174:	200000ec 	andcs	r0, r0, ip, ror #1
 8009178:	08015b5f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r8, r9, fp, ip, lr}

0800917c <RemoteConfig::HandleDisplaySet()>:
 800917c:	b538      	push	{r3, r4, r5, lr}
 800917e:	8b83      	ldrh	r3, [r0, #28]
 8009180:	2b09      	cmp	r3, #9
 8009182:	d113      	bne.n	80091ac <RemoteConfig::HandleDisplaySet()+0x30>
 8009184:	4b0a      	ldr	r3, [pc, #40]	; (80091b0 <RemoteConfig::HandleDisplaySet()+0x34>)
 8009186:	681c      	ldr	r4, [r3, #0]
 8009188:	4b0a      	ldr	r3, [pc, #40]	; (80091b4 <RemoteConfig::HandleDisplaySet()+0x38>)
 800918a:	69a0      	ldr	r0, [r4, #24]
 800918c:	681b      	ldr	r3, [r3, #0]
 800918e:	7a5d      	ldrb	r5, [r3, #9]
 8009190:	f1a5 0330 	sub.w	r3, r5, #48	; 0x30
 8009194:	4259      	negs	r1, r3
 8009196:	4159      	adcs	r1, r3
 8009198:	b140      	cbz	r0, 80091ac <RemoteConfig::HandleDisplaySet()+0x30>
 800919a:	6803      	ldr	r3, [r0, #0]
 800919c:	7421      	strb	r1, [r4, #16]
 800919e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80091a0:	4798      	blx	r3
 80091a2:	2d30      	cmp	r5, #48	; 0x30
 80091a4:	bf1e      	ittt	ne
 80091a6:	4b04      	ldrne	r3, [pc, #16]	; (80091b8 <RemoteConfig::HandleDisplaySet()+0x3c>)
 80091a8:	681b      	ldrne	r3, [r3, #0]
 80091aa:	6063      	strne	r3, [r4, #4]
 80091ac:	bd38      	pop	{r3, r4, r5, pc}
 80091ae:	bf00      	nop
 80091b0:	20013ce4 	andcs	r3, r1, r4, ror #25
 80091b4:	200000ec 	andcs	r0, r0, ip, ror #1
 80091b8:	20013df4 	strdcs	r3, [r1], -r4

080091bc <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)>:
 80091bc:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80091c0:	2500      	movs	r5, #0
 80091c2:	461f      	mov	r7, r3
 80091c4:	6083      	str	r3, [r0, #8]
 80091c6:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80091ca:	4604      	mov	r4, r0
 80091cc:	4690      	mov	r8, r2
 80091ce:	4689      	mov	r9, r1
 80091d0:	f100 0a28 	add.w	sl, r0, #40	; 0x28
 80091d4:	e9c0 1200 	strd	r1, r2, [r0]
 80091d8:	4e13      	ldr	r6, [pc, #76]	; (8009228 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x6c>)
 80091da:	e9c0 3505 	strd	r3, r5, [r0, #20]
 80091de:	f8df b04c 	ldr.w	fp, [pc, #76]	; 800922c <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x70>
 80091e2:	60c5      	str	r5, [r0, #12]
 80091e4:	8205      	strh	r5, [r0, #16]
 80091e6:	8385      	strh	r5, [r0, #28]
 80091e8:	6205      	str	r5, [r0, #32]
 80091ea:	f880 5024 	strb.w	r5, [r0, #36]	; 0x24
 80091ee:	4650      	mov	r0, sl
 80091f0:	f000 fcda 	bl	8009ba8 <HttpDaemon::HttpDaemon()>
 80091f4:	4b0e      	ldr	r3, [pc, #56]	; (8009230 <RemoteConfig::RemoteConfig(remoteconfig::Node, remoteconfig::Output, unsigned int)+0x74>)
 80091f6:	4631      	mov	r1, r6
 80091f8:	f8db 0000 	ldr.w	r0, [fp]
 80091fc:	601c      	str	r4, [r3, #0]
 80091fe:	f007 fb09 	bl	8010814 <Network::MacAddressCopyTo(unsigned char*)>
 8009202:	f642 1105 	movw	r1, #10501	; 0x2905
 8009206:	f8db 0000 	ldr.w	r0, [fp]
 800920a:	f886 9006 	strb.w	r9, [r6, #6]
 800920e:	f886 8007 	strb.w	r8, [r6, #7]
 8009212:	7237      	strb	r7, [r6, #8]
 8009214:	7275      	strb	r5, [r6, #9]
 8009216:	f007 faf7 	bl	8010808 <Network::Begin(unsigned short)>
 800921a:	6160      	str	r0, [r4, #20]
 800921c:	4650      	mov	r0, sl
 800921e:	f000 fcdb 	bl	8009bd8 <HttpDaemon::Start()>
 8009222:	4620      	mov	r0, r4
 8009224:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009228:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 800922c:	200136ac 	andcs	r3, r1, ip, lsr #13
 8009230:	20000114 	andcs	r0, r0, r4, lsl r1

08009234 <RemoteConfig::GetStringNode() const>:
 8009234:	2012      	movs	r0, #18
 8009236:	4b03      	ldr	r3, [pc, #12]	; (8009244 <RemoteConfig::GetStringNode() const+0x10>)
 8009238:	799a      	ldrb	r2, [r3, #6]
 800923a:	4b03      	ldr	r3, [pc, #12]	; (8009248 <RemoteConfig::GetStringNode() const+0x14>)
 800923c:	fb00 3002 	mla	r0, r0, r2, r3
 8009240:	4770      	bx	lr
 8009242:	bf00      	nop
 8009244:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 8009248:	08015bcf 	stmdaeq	r1, {r0, r1, r2, r3, r6, r7, r8, r9, fp, ip, lr}

0800924c <RemoteConfig::GetStringOutput() const>:
 800924c:	200c      	movs	r0, #12
 800924e:	4b03      	ldr	r3, [pc, #12]	; (800925c <RemoteConfig::GetStringOutput() const+0x10>)
 8009250:	79da      	ldrb	r2, [r3, #7]
 8009252:	4b03      	ldr	r3, [pc, #12]	; (8009260 <RemoteConfig::GetStringOutput() const+0x14>)
 8009254:	fb00 3002 	mla	r0, r0, r2, r3
 8009258:	4770      	bx	lr
 800925a:	bf00      	nop
 800925c:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 8009260:	08015c71 	stmdaeq	r1, {r0, r4, r5, r6, sl, fp, ip, lr}

08009264 <RemoteConfig::SetDisable(bool)>:
 8009264:	b538      	push	{r3, r4, r5, lr}
 8009266:	4604      	mov	r4, r0
 8009268:	7b03      	ldrb	r3, [r0, #12]
 800926a:	b161      	cbz	r1, 8009286 <RemoteConfig::SetDisable(bool)+0x22>
 800926c:	b953      	cbnz	r3, 8009284 <RemoteConfig::SetDisable(bool)+0x20>
 800926e:	4b0c      	ldr	r3, [pc, #48]	; (80092a0 <RemoteConfig::SetDisable(bool)+0x3c>)
 8009270:	f642 1105 	movw	r1, #10501	; 0x2905
 8009274:	6818      	ldr	r0, [r3, #0]
 8009276:	f007 faca 	bl	801080e <Network::End(unsigned short)>
 800927a:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800927e:	6163      	str	r3, [r4, #20]
 8009280:	2301      	movs	r3, #1
 8009282:	7323      	strb	r3, [r4, #12]
 8009284:	bd38      	pop	{r3, r4, r5, pc}
 8009286:	2b00      	cmp	r3, #0
 8009288:	d0fc      	beq.n	8009284 <RemoteConfig::SetDisable(bool)+0x20>
 800928a:	4b05      	ldr	r3, [pc, #20]	; (80092a0 <RemoteConfig::SetDisable(bool)+0x3c>)
 800928c:	460d      	mov	r5, r1
 800928e:	6818      	ldr	r0, [r3, #0]
 8009290:	f642 1105 	movw	r1, #10501	; 0x2905
 8009294:	f007 fab8 	bl	8010808 <Network::Begin(unsigned short)>
 8009298:	7325      	strb	r5, [r4, #12]
 800929a:	6160      	str	r0, [r4, #20]
 800929c:	e7f2      	b.n	8009284 <RemoteConfig::SetDisable(bool)+0x20>
 800929e:	bf00      	nop
 80092a0:	200136ac 	andcs	r3, r1, ip, lsr #13

080092a4 <RemoteConfig::SetDisplayName(char const*)>:
 80092a4:	2217      	movs	r2, #23
 80092a6:	4809      	ldr	r0, [pc, #36]	; (80092cc <RemoteConfig::SetDisplayName(char const*)+0x28>)
 80092a8:	b508      	push	{r3, lr}
 80092aa:	1e4b      	subs	r3, r1, #1
 80092ac:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 80092b0:	b931      	cbnz	r1, 80092c0 <RemoteConfig::SetDisplayName(char const*)+0x1c>
 80092b2:	f00a fa87 	bl	80137c4 <memset>
 80092b6:	2200      	movs	r2, #0
 80092b8:	4b05      	ldr	r3, [pc, #20]	; (80092d0 <RemoteConfig::SetDisplayName(char const*)+0x2c>)
 80092ba:	f883 2020 	strb.w	r2, [r3, #32]
 80092be:	bd08      	pop	{r3, pc}
 80092c0:	3a01      	subs	r2, #1
 80092c2:	f800 1b01 	strb.w	r1, [r0], #1
 80092c6:	d1f1      	bne.n	80092ac <RemoteConfig::SetDisplayName(char const*)+0x8>
 80092c8:	e7f5      	b.n	80092b6 <RemoteConfig::SetDisplayName(char const*)+0x12>
 80092ca:	bf00      	nop
 80092cc:	200000f9 	strdcs	r0, [r0], -r9
 80092d0:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>

080092d4 <RemoteConfig::HandleGet(void*, unsigned int)>:
 80092d4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80092d6:	4604      	mov	r4, r0
 80092d8:	4616      	mov	r6, r2
 80092da:	460d      	mov	r5, r1
 80092dc:	4f27      	ldr	r7, [pc, #156]	; (800937c <RemoteConfig::HandleGet(void*, unsigned int)+0xa8>)
 80092de:	b085      	sub	sp, #20
 80092e0:	b9a9      	cbnz	r1, 800930e <RemoteConfig::HandleGet(void*, unsigned int)+0x3a>
 80092e2:	f44f 737f 	mov.w	r3, #1020	; 0x3fc
 80092e6:	6839      	ldr	r1, [r7, #0]
 80092e8:	aa03      	add	r2, sp, #12
 80092ea:	3105      	adds	r1, #5
 80092ec:	9303      	str	r3, [sp, #12]
 80092ee:	f000 fbe9 	bl	8009ac4 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 80092f2:	1e03      	subs	r3, r0, #0
 80092f4:	da1b      	bge.n	800932e <RemoteConfig::HandleGet(void*, unsigned int)+0x5a>
 80092f6:	f642 1305 	movw	r3, #10501	; 0x2905
 80092fa:	220b      	movs	r2, #11
 80092fc:	9300      	str	r3, [sp, #0]
 80092fe:	4920      	ldr	r1, [pc, #128]	; (8009380 <RemoteConfig::HandleGet(void*, unsigned int)+0xac>)
 8009300:	69a3      	ldr	r3, [r4, #24]
 8009302:	7d20      	ldrb	r0, [r4, #20]
 8009304:	f006 fdb0 	bl	800fe68 <udp_send>
 8009308:	200c      	movs	r0, #12
 800930a:	b005      	add	sp, #20
 800930c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800930e:	9203      	str	r2, [sp, #12]
 8009310:	aa03      	add	r2, sp, #12
 8009312:	6039      	str	r1, [r7, #0]
 8009314:	f000 fbd6 	bl	8009ac4 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 8009318:	1e03      	subs	r3, r0, #0
 800931a:	da08      	bge.n	800932e <RemoteConfig::HandleGet(void*, unsigned int)+0x5a>
 800931c:	2e0b      	cmp	r6, #11
 800931e:	4632      	mov	r2, r6
 8009320:	4628      	mov	r0, r5
 8009322:	bf28      	it	cs
 8009324:	220b      	movcs	r2, #11
 8009326:	4916      	ldr	r1, [pc, #88]	; (8009380 <RemoteConfig::HandleGet(void*, unsigned int)+0xac>)
 8009328:	f00a fa2a 	bl	8013780 <memcpy>
 800932c:	e7ec      	b.n	8009308 <RemoteConfig::HandleGet(void*, unsigned int)+0x34>
 800932e:	201c      	movs	r0, #28
 8009330:	4343      	muls	r3, r0
 8009332:	4914      	ldr	r1, [pc, #80]	; (8009384 <RemoteConfig::HandleGet(void*, unsigned int)+0xb0>)
 8009334:	18ca      	adds	r2, r1, r3
 8009336:	6852      	ldr	r2, [r2, #4]
 8009338:	58cb      	ldr	r3, [r1, r3]
 800933a:	ea4f 0c62 	mov.w	ip, r2, asr #1
 800933e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8009342:	07d2      	lsls	r2, r2, #31
 8009344:	bf48      	it	mi
 8009346:	f854 200c 	ldrmi.w	r2, [r4, ip]
 800934a:	a903      	add	r1, sp, #12
 800934c:	bf48      	it	mi
 800934e:	58d3      	ldrmi	r3, [r2, r3]
 8009350:	4798      	blx	r3
 8009352:	9a03      	ldr	r2, [sp, #12]
 8009354:	b955      	cbnz	r5, 800936c <RemoteConfig::HandleGet(void*, unsigned int)+0x98>
 8009356:	f642 1305 	movw	r3, #10501	; 0x2905
 800935a:	6839      	ldr	r1, [r7, #0]
 800935c:	9300      	str	r3, [sp, #0]
 800935e:	7d20      	ldrb	r0, [r4, #20]
 8009360:	69a3      	ldr	r3, [r4, #24]
 8009362:	b292      	uxth	r2, r2
 8009364:	f006 fd80 	bl	800fe68 <udp_send>
 8009368:	9803      	ldr	r0, [sp, #12]
 800936a:	e7ce      	b.n	800930a <RemoteConfig::HandleGet(void*, unsigned int)+0x36>
 800936c:	42b2      	cmp	r2, r6
 800936e:	bf28      	it	cs
 8009370:	4632      	movcs	r2, r6
 8009372:	4628      	mov	r0, r5
 8009374:	6839      	ldr	r1, [r7, #0]
 8009376:	f00a fa0e 	bl	8013796 <memmove>
 800937a:	e7f5      	b.n	8009368 <RemoteConfig::HandleGet(void*, unsigned int)+0x94>
 800937c:	200000ec 	andcs	r0, r0, ip, ror #1
 8009380:	08015b6c 	stmdaeq	r1, {r2, r3, r5, r6, r8, r9, fp, ip, lr}
 8009384:	08015e30 	stmdaeq	r1, {r4, r5, r9, sl, fp, ip, lr}

08009388 <RemoteConfig::HandleGetNoParams()>:
 8009388:	2200      	movs	r2, #0
 800938a:	4611      	mov	r1, r2
 800938c:	f7ff bfa2 	b.w	80092d4 <RemoteConfig::HandleGet(void*, unsigned int)>

08009390 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)>:
 8009390:	b510      	push	{r4, lr}
 8009392:	460c      	mov	r4, r1
 8009394:	4b07      	ldr	r3, [pc, #28]	; (80093b4 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x24>)
 8009396:	b08a      	sub	sp, #40	; 0x28
 8009398:	6819      	ldr	r1, [r3, #0]
 800939a:	a801      	add	r0, sp, #4
 800939c:	f000 f9ee 	bl	800977c <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 80093a0:	4905      	ldr	r1, [pc, #20]	; (80093b8 <RemoteConfig::HandleGetRconfigTxt(unsigned int&)+0x28>)
 80093a2:	4623      	mov	r3, r4
 80093a4:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80093a8:	6809      	ldr	r1, [r1, #0]
 80093aa:	a801      	add	r0, sp, #4
 80093ac:	f000 fb0a 	bl	80099c4 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>
 80093b0:	b00a      	add	sp, #40	; 0x28
 80093b2:	bd10      	pop	{r4, pc}
 80093b4:	2000bdc0 	andcs	fp, r0, r0, asr #27
 80093b8:	200000ec 	andcs	r0, r0, ip, ror #1

080093bc <RemoteConfig::HandleGetNetworkTxt(unsigned int&)>:
 80093bc:	b513      	push	{r0, r1, r4, lr}
 80093be:	460c      	mov	r4, r1
 80093c0:	4b07      	ldr	r3, [pc, #28]	; (80093e0 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x24>)
 80093c2:	a801      	add	r0, sp, #4
 80093c4:	6819      	ldr	r1, [r3, #0]
 80093c6:	f007 fd5d 	bl	8010e84 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 80093ca:	4906      	ldr	r1, [pc, #24]	; (80093e4 <RemoteConfig::HandleGetNetworkTxt(unsigned int&)+0x28>)
 80093cc:	4623      	mov	r3, r4
 80093ce:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80093d2:	6809      	ldr	r1, [r1, #0]
 80093d4:	a801      	add	r0, sp, #4
 80093d6:	f007 ffc3 	bl	8011360 <NetworkParams::Save(char*, unsigned int, unsigned int&)>
 80093da:	b002      	add	sp, #8
 80093dc:	bd10      	pop	{r4, pc}
 80093de:	bf00      	nop
 80093e0:	2000bdb8 			; <UNDEFINED> instruction: 0x2000bdb8
 80093e4:	200000ec 	andcs	r0, r0, ip, ror #1

080093e8 <RemoteConfig::HandleGetE131Txt(unsigned int&)>:
 80093e8:	b510      	push	{r4, lr}
 80093ea:	460c      	mov	r4, r1
 80093ec:	4b07      	ldr	r3, [pc, #28]	; (800940c <RemoteConfig::HandleGetE131Txt(unsigned int&)+0x24>)
 80093ee:	b08a      	sub	sp, #40	; 0x28
 80093f0:	6819      	ldr	r1, [r3, #0]
 80093f2:	a801      	add	r0, sp, #4
 80093f4:	f002 f832 	bl	800b45c <E131Params::E131Params(E131ParamsStore*)>
 80093f8:	4905      	ldr	r1, [pc, #20]	; (8009410 <RemoteConfig::HandleGetE131Txt(unsigned int&)+0x28>)
 80093fa:	4623      	mov	r3, r4
 80093fc:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8009400:	6809      	ldr	r1, [r1, #0]
 8009402:	a801      	add	r0, sp, #4
 8009404:	f002 fa7e 	bl	800b904 <E131Params::Save(char*, unsigned int, unsigned int&)>
 8009408:	b00a      	add	sp, #40	; 0x28
 800940a:	bd10      	pop	{r4, pc}
 800940c:	2000bdb4 			; <UNDEFINED> instruction: 0x2000bdb4
 8009410:	200000ec 	andcs	r0, r0, ip, ror #1

08009414 <RemoteConfig::HandleGetDevicesTxt(unsigned int&)>:
 8009414:	b510      	push	{r4, lr}
 8009416:	460c      	mov	r4, r1
 8009418:	4b07      	ldr	r3, [pc, #28]	; (8009438 <RemoteConfig::HandleGetDevicesTxt(unsigned int&)+0x24>)
 800941a:	b08c      	sub	sp, #48	; 0x30
 800941c:	6819      	ldr	r1, [r3, #0]
 800941e:	a801      	add	r0, sp, #4
 8009420:	f003 ff32 	bl	800d288 <WS28xxDmxParams::WS28xxDmxParams(WS28xxDmxParamsStore*)>
 8009424:	4905      	ldr	r1, [pc, #20]	; (800943c <RemoteConfig::HandleGetDevicesTxt(unsigned int&)+0x28>)
 8009426:	4623      	mov	r3, r4
 8009428:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800942c:	6809      	ldr	r1, [r1, #0]
 800942e:	a801      	add	r0, sp, #4
 8009430:	f004 f9e2 	bl	800d7f8 <WS28xxDmxParams::Save(char*, unsigned int, unsigned int&)>
 8009434:	b00c      	add	sp, #48	; 0x30
 8009436:	bd10      	pop	{r4, pc}
 8009438:	2000bdc4 	andcs	fp, r0, r4, asr #27
 800943c:	200000ec 	andcs	r0, r0, ip, ror #1

08009440 <RemoteConfig::HandleGetDisplayTxt(unsigned int&)>:
 8009440:	b510      	push	{r4, lr}
 8009442:	460c      	mov	r4, r1
 8009444:	4b07      	ldr	r3, [pc, #28]	; (8009464 <RemoteConfig::HandleGetDisplayTxt(unsigned int&)+0x24>)
 8009446:	b08a      	sub	sp, #40	; 0x28
 8009448:	6819      	ldr	r1, [r3, #0]
 800944a:	4668      	mov	r0, sp
 800944c:	f008 ff34 	bl	80122b8 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 8009450:	4905      	ldr	r1, [pc, #20]	; (8009468 <RemoteConfig::HandleGetDisplayTxt(unsigned int&)+0x28>)
 8009452:	4623      	mov	r3, r4
 8009454:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8009458:	4668      	mov	r0, sp
 800945a:	6809      	ldr	r1, [r1, #0]
 800945c:	f009 f862 	bl	8012524 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)>
 8009460:	b00a      	add	sp, #40	; 0x28
 8009462:	bd10      	pop	{r4, pc}
 8009464:	2000bdb0 			; <UNDEFINED> instruction: 0x2000bdb0
 8009468:	200000ec 	andcs	r0, r0, ip, ror #1

0800946c <RemoteConfig::HandleSet(void*, unsigned int)>:
 800946c:	b530      	push	{r4, r5, lr}
 800946e:	b085      	sub	sp, #20
 8009470:	4604      	mov	r4, r0
 8009472:	9201      	str	r2, [sp, #4]
 8009474:	b9c9      	cbnz	r1, 80094aa <RemoteConfig::HandleSet(void*, unsigned int)+0x3e>
 8009476:	f240 33ff 	movw	r3, #1023	; 0x3ff
 800947a:	9303      	str	r3, [sp, #12]
 800947c:	4b1b      	ldr	r3, [pc, #108]	; (80094ec <RemoteConfig::HandleSet(void*, unsigned int)+0x80>)
 800947e:	aa03      	add	r2, sp, #12
 8009480:	6819      	ldr	r1, [r3, #0]
 8009482:	3101      	adds	r1, #1
 8009484:	f000 fb1e 	bl	8009ac4 <RemoteConfig::GetIndex(void const*, unsigned int&)>
 8009488:	2800      	cmp	r0, #0
 800948a:	db24      	blt.n	80094d6 <RemoteConfig::HandleSet(void*, unsigned int)+0x6a>
 800948c:	221c      	movs	r2, #28
 800948e:	4b18      	ldr	r3, [pc, #96]	; (80094f0 <RemoteConfig::HandleSet(void*, unsigned int)+0x84>)
 8009490:	fb02 3300 	mla	r3, r2, r0, r3
 8009494:	68da      	ldr	r2, [r3, #12]
 8009496:	689b      	ldr	r3, [r3, #8]
 8009498:	1051      	asrs	r1, r2, #1
 800949a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800949e:	07d2      	lsls	r2, r2, #31
 80094a0:	bf44      	itt	mi
 80094a2:	5862      	ldrmi	r2, [r4, r1]
 80094a4:	58d3      	ldrmi	r3, [r2, r3]
 80094a6:	4798      	blx	r3
 80094a8:	e015      	b.n	80094d6 <RemoteConfig::HandleSet(void*, unsigned int)+0x6a>
 80094aa:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 80094ae:	4613      	mov	r3, r2
 80094b0:	d811      	bhi.n	80094d6 <RemoteConfig::HandleSet(void*, unsigned int)+0x6a>
 80094b2:	2200      	movs	r2, #0
 80094b4:	460d      	mov	r5, r1
 80094b6:	490f      	ldr	r1, [pc, #60]	; (80094f4 <RemoteConfig::HandleSet(void*, unsigned int)+0x88>)
 80094b8:	6202      	str	r2, [r0, #32]
 80094ba:	7809      	ldrb	r1, [r1, #0]
 80094bc:	b29b      	uxth	r3, r3
 80094be:	07c9      	lsls	r1, r1, #31
 80094c0:	d50b      	bpl.n	80094da <RemoteConfig::HandleSet(void*, unsigned int)+0x6e>
 80094c2:	7829      	ldrb	r1, [r5, #0]
 80094c4:	297b      	cmp	r1, #123	; 0x7b
 80094c6:	d108      	bne.n	80094da <RemoteConfig::HandleSet(void*, unsigned int)+0x6e>
 80094c8:	3b01      	subs	r3, #1
 80094ca:	4628      	mov	r0, r5
 80094cc:	b299      	uxth	r1, r3
 80094ce:	f009 f8f1 	bl	80126b4 <properties::convert_json_file(char*, unsigned short, bool)>
 80094d2:	2800      	cmp	r0, #0
 80094d4:	dc08      	bgt.n	80094e8 <RemoteConfig::HandleSet(void*, unsigned int)+0x7c>
 80094d6:	b005      	add	sp, #20
 80094d8:	bd30      	pop	{r4, r5, pc}
 80094da:	83a3      	strh	r3, [r4, #28]
 80094dc:	4b03      	ldr	r3, [pc, #12]	; (80094ec <RemoteConfig::HandleSet(void*, unsigned int)+0x80>)
 80094de:	4620      	mov	r0, r4
 80094e0:	601d      	str	r5, [r3, #0]
 80094e2:	aa01      	add	r2, sp, #4
 80094e4:	1c69      	adds	r1, r5, #1
 80094e6:	e7cd      	b.n	8009484 <RemoteConfig::HandleSet(void*, unsigned int)+0x18>
 80094e8:	83a0      	strh	r0, [r4, #28]
 80094ea:	e7f7      	b.n	80094dc <RemoteConfig::HandleSet(void*, unsigned int)+0x70>
 80094ec:	200000ec 	andcs	r0, r0, ip, ror #1
 80094f0:	08015e30 	stmdaeq	r1, {r4, r5, r9, sl, fp, ip, lr}
 80094f4:	20013ce0 	andcs	r3, r1, r0, ror #25

080094f8 <RemoteConfig::Run()>:
 80094f8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80094fc:	7b03      	ldrb	r3, [r0, #12]
 80094fe:	2b00      	cmp	r3, #0
 8009500:	d15a      	bne.n	80095b8 <RemoteConfig::Run()+0xc0>
 8009502:	4604      	mov	r4, r0
 8009504:	4d47      	ldr	r5, [pc, #284]	; (8009624 <RemoteConfig::Run()+0x12c>)
 8009506:	3028      	adds	r0, #40	; 0x28
 8009508:	f000 fde0 	bl	800a0cc <HttpDaemon::Run()>
 800950c:	4629      	mov	r1, r5
 800950e:	7d20      	ldrb	r0, [r4, #20]
 8009510:	f10d 030e 	add.w	r3, sp, #14
 8009514:	f104 0218 	add.w	r2, r4, #24
 8009518:	f006 fc80 	bl	800fe1c <udp_recv2>
 800951c:	2803      	cmp	r0, #3
 800951e:	83a0      	strh	r0, [r4, #28]
 8009520:	d94a      	bls.n	80095b8 <RemoteConfig::Run()+0xc0>
 8009522:	682b      	ldr	r3, [r5, #0]
 8009524:	181a      	adds	r2, r3, r0
 8009526:	f812 2c01 	ldrb.w	r2, [r2, #-1]
 800952a:	2a0a      	cmp	r2, #10
 800952c:	bf04      	itt	eq
 800952e:	f100 30ff 	addeq.w	r0, r0, #4294967295	; 0xffffffff
 8009532:	83a0      	strheq	r0, [r4, #28]
 8009534:	7819      	ldrb	r1, [r3, #0]
 8009536:	293f      	cmp	r1, #63	; 0x3f
 8009538:	d135      	bne.n	80095a6 <RemoteConfig::Run()+0xae>
 800953a:	483b      	ldr	r0, [pc, #236]	; (8009628 <RemoteConfig::Run()+0x130>)
 800953c:	2200      	movs	r2, #0
 800953e:	4607      	mov	r7, r0
 8009540:	8ba1      	ldrh	r1, [r4, #28]
 8009542:	3901      	subs	r1, #1
 8009544:	b289      	uxth	r1, r1
 8009546:	83a1      	strh	r1, [r4, #28]
 8009548:	7b86      	ldrb	r6, [r0, #14]
 800954a:	8985      	ldrh	r5, [r0, #12]
 800954c:	b16e      	cbz	r6, 800956a <RemoteConfig::Run()+0x72>
 800954e:	428d      	cmp	r5, r1
 8009550:	d30d      	bcc.n	800956e <RemoteConfig::Run()+0x76>
 8009552:	3201      	adds	r2, #1
 8009554:	2a09      	cmp	r2, #9
 8009556:	f100 0010 	add.w	r0, r0, #16
 800955a:	d1f5      	bne.n	8009548 <RemoteConfig::Run()+0x50>
 800955c:	f642 1305 	movw	r3, #10501	; 0x2905
 8009560:	9300      	str	r3, [sp, #0]
 8009562:	2208      	movs	r2, #8
 8009564:	69a3      	ldr	r3, [r4, #24]
 8009566:	4931      	ldr	r1, [pc, #196]	; (800962c <RemoteConfig::Run()+0x134>)
 8009568:	e050      	b.n	800960c <RemoteConfig::Run()+0x114>
 800956a:	428d      	cmp	r5, r1
 800956c:	d1f1      	bne.n	8009552 <RemoteConfig::Run()+0x5a>
 800956e:	6886      	ldr	r6, [r0, #8]
 8009570:	f103 0c01 	add.w	ip, r3, #1
 8009574:	4435      	add	r5, r6
 8009576:	42ae      	cmp	r6, r5
 8009578:	d006      	beq.n	8009588 <RemoteConfig::Run()+0x90>
 800957a:	f81c 8b01 	ldrb.w	r8, [ip], #1
 800957e:	f816 eb01 	ldrb.w	lr, [r6], #1
 8009582:	45f0      	cmp	r8, lr
 8009584:	d0f7      	beq.n	8009576 <RemoteConfig::Run()+0x7e>
 8009586:	e7e4      	b.n	8009552 <RemoteConfig::Run()+0x5a>
 8009588:	0113      	lsls	r3, r2, #4
 800958a:	eb07 1202 	add.w	r2, r7, r2, lsl #4
 800958e:	6852      	ldr	r2, [r2, #4]
 8009590:	58fb      	ldr	r3, [r7, r3]
 8009592:	1051      	asrs	r1, r2, #1
 8009594:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8009598:	07d2      	lsls	r2, r2, #31
 800959a:	d401      	bmi.n	80095a0 <RemoteConfig::Run()+0xa8>
 800959c:	4798      	blx	r3
 800959e:	e00b      	b.n	80095b8 <RemoteConfig::Run()+0xc0>
 80095a0:	5862      	ldr	r2, [r4, r1]
 80095a2:	58d3      	ldr	r3, [r2, r3]
 80095a4:	e7fa      	b.n	800959c <RemoteConfig::Run()+0xa4>
 80095a6:	7b62      	ldrb	r2, [r4, #13]
 80095a8:	b932      	cbnz	r2, 80095b8 <RemoteConfig::Run()+0xc0>
 80095aa:	2923      	cmp	r1, #35	; 0x23
 80095ac:	d107      	bne.n	80095be <RemoteConfig::Run()+0xc6>
 80095ae:	4611      	mov	r1, r2
 80095b0:	4620      	mov	r0, r4
 80095b2:	6222      	str	r2, [r4, #32]
 80095b4:	f7ff ff5a 	bl	800946c <RemoteConfig::HandleSet(void*, unsigned int)>
 80095b8:	b004      	add	sp, #16
 80095ba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80095be:	2921      	cmp	r1, #33	; 0x21
 80095c0:	d1fa      	bne.n	80095b8 <RemoteConfig::Run()+0xc0>
 80095c2:	8ba2      	ldrh	r2, [r4, #28]
 80095c4:	3a01      	subs	r2, #1
 80095c6:	b292      	uxth	r2, r2
 80095c8:	2a05      	cmp	r2, #5
 80095ca:	83a2      	strh	r2, [r4, #28]
 80095cc:	d918      	bls.n	8009600 <RemoteConfig::Run()+0x108>
 80095ce:	1c59      	adds	r1, r3, #1
 80095d0:	4608      	mov	r0, r1
 80095d2:	4d17      	ldr	r5, [pc, #92]	; (8009630 <RemoteConfig::Run()+0x138>)
 80095d4:	f103 0c06 	add.w	ip, r3, #6
 80095d8:	4560      	cmp	r0, ip
 80095da:	d01b      	beq.n	8009614 <RemoteConfig::Run()+0x11c>
 80095dc:	f810 7b01 	ldrb.w	r7, [r0], #1
 80095e0:	f815 6b01 	ldrb.w	r6, [r5], #1
 80095e4:	42b7      	cmp	r7, r6
 80095e6:	d0f7      	beq.n	80095d8 <RemoteConfig::Run()+0xe0>
 80095e8:	2a08      	cmp	r2, #8
 80095ea:	d909      	bls.n	8009600 <RemoteConfig::Run()+0x108>
 80095ec:	4a11      	ldr	r2, [pc, #68]	; (8009634 <RemoteConfig::Run()+0x13c>)
 80095ee:	3309      	adds	r3, #9
 80095f0:	428b      	cmp	r3, r1
 80095f2:	d015      	beq.n	8009620 <RemoteConfig::Run()+0x128>
 80095f4:	f811 5b01 	ldrb.w	r5, [r1], #1
 80095f8:	f812 0b01 	ldrb.w	r0, [r2], #1
 80095fc:	4285      	cmp	r5, r0
 80095fe:	d0f7      	beq.n	80095f0 <RemoteConfig::Run()+0xf8>
 8009600:	f642 1305 	movw	r3, #10501	; 0x2905
 8009604:	2208      	movs	r2, #8
 8009606:	9300      	str	r3, [sp, #0]
 8009608:	69a3      	ldr	r3, [r4, #24]
 800960a:	490b      	ldr	r1, [pc, #44]	; (8009638 <RemoteConfig::Run()+0x140>)
 800960c:	7d20      	ldrb	r0, [r4, #20]
 800960e:	f006 fc2b 	bl	800fe68 <udp_send>
 8009612:	e7d1      	b.n	80095b8 <RemoteConfig::Run()+0xc0>
 8009614:	2300      	movs	r3, #0
 8009616:	4a09      	ldr	r2, [pc, #36]	; (800963c <RemoteConfig::Run()+0x144>)
 8009618:	011b      	lsls	r3, r3, #4
 800961a:	4620      	mov	r0, r4
 800961c:	58d3      	ldr	r3, [r2, r3]
 800961e:	e7bd      	b.n	800959c <RemoteConfig::Run()+0xa4>
 8009620:	2301      	movs	r3, #1
 8009622:	e7f8      	b.n	8009616 <RemoteConfig::Run()+0x11e>
 8009624:	200000ec 	andcs	r0, r0, ip, ror #1
 8009628:	08015d04 	stmdaeq	r1, {r2, r8, sl, fp, ip, lr}
 800962c:	08015b90 	stmdaeq	r1, {r4, r7, r8, r9, fp, ip, lr}
 8009630:	08015b78 	stmdaeq	r1, {r3, r4, r5, r6, r8, r9, fp, ip, lr}
 8009634:	08015b7e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r8, r9, fp, ip, lr}
 8009638:	08015b87 	stmdaeq	r1, {r0, r1, r2, r7, r8, r9, fp, ip, lr}
 800963c:	08015d94 	stmdaeq	r1, {r2, r4, r7, r8, sl, fp, ip, lr}

08009640 <RemoteConfig::HandleSetRconfig()>:
 8009640:	b510      	push	{r4, lr}
 8009642:	4604      	mov	r4, r0
 8009644:	4b08      	ldr	r3, [pc, #32]	; (8009668 <RemoteConfig::HandleSetRconfig()+0x28>)
 8009646:	b08a      	sub	sp, #40	; 0x28
 8009648:	6819      	ldr	r1, [r3, #0]
 800964a:	a801      	add	r0, sp, #4
 800964c:	f000 f896 	bl	800977c <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>
 8009650:	4b06      	ldr	r3, [pc, #24]	; (800966c <RemoteConfig::HandleSetRconfig()+0x2c>)
 8009652:	8ba2      	ldrh	r2, [r4, #28]
 8009654:	6819      	ldr	r1, [r3, #0]
 8009656:	a801      	add	r0, sp, #4
 8009658:	f000 f8a6 	bl	80097a8 <RemoteConfigParams::Load(char const*, unsigned int)>
 800965c:	4621      	mov	r1, r4
 800965e:	a801      	add	r0, sp, #4
 8009660:	f000 f9bd 	bl	80099de <RemoteConfigParams::Set(RemoteConfig*)>
 8009664:	b00a      	add	sp, #40	; 0x28
 8009666:	bd10      	pop	{r4, pc}
 8009668:	2000bdc0 	andcs	fp, r0, r0, asr #27
 800966c:	200000ec 	andcs	r0, r0, ip, ror #1

08009670 <RemoteConfig::HandleSetNetworkTxt()>:
 8009670:	b513      	push	{r0, r1, r4, lr}
 8009672:	4604      	mov	r4, r0
 8009674:	4b06      	ldr	r3, [pc, #24]	; (8009690 <RemoteConfig::HandleSetNetworkTxt()+0x20>)
 8009676:	a801      	add	r0, sp, #4
 8009678:	6819      	ldr	r1, [r3, #0]
 800967a:	f007 fc03 	bl	8010e84 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 800967e:	4b05      	ldr	r3, [pc, #20]	; (8009694 <RemoteConfig::HandleSetNetworkTxt()+0x24>)
 8009680:	8ba2      	ldrh	r2, [r4, #28]
 8009682:	6819      	ldr	r1, [r3, #0]
 8009684:	a801      	add	r0, sp, #4
 8009686:	f007 fc1d 	bl	8010ec4 <NetworkParams::Load(char const*, unsigned int)>
 800968a:	b002      	add	sp, #8
 800968c:	bd10      	pop	{r4, pc}
 800968e:	bf00      	nop
 8009690:	2000bdb8 			; <UNDEFINED> instruction: 0x2000bdb8
 8009694:	200000ec 	andcs	r0, r0, ip, ror #1

08009698 <RemoteConfig::HandleSetE131Txt()>:
 8009698:	b510      	push	{r4, lr}
 800969a:	4604      	mov	r4, r0
 800969c:	4b06      	ldr	r3, [pc, #24]	; (80096b8 <RemoteConfig::HandleSetE131Txt()+0x20>)
 800969e:	b08a      	sub	sp, #40	; 0x28
 80096a0:	6819      	ldr	r1, [r3, #0]
 80096a2:	a801      	add	r0, sp, #4
 80096a4:	f001 feda 	bl	800b45c <E131Params::E131Params(E131ParamsStore*)>
 80096a8:	4b04      	ldr	r3, [pc, #16]	; (80096bc <RemoteConfig::HandleSetE131Txt()+0x24>)
 80096aa:	8ba2      	ldrh	r2, [r4, #28]
 80096ac:	6819      	ldr	r1, [r3, #0]
 80096ae:	a801      	add	r0, sp, #4
 80096b0:	f001 ff00 	bl	800b4b4 <E131Params::Load(char const*, unsigned int)>
 80096b4:	b00a      	add	sp, #40	; 0x28
 80096b6:	bd10      	pop	{r4, pc}
 80096b8:	2000bdb4 			; <UNDEFINED> instruction: 0x2000bdb4
 80096bc:	200000ec 	andcs	r0, r0, ip, ror #1

080096c0 <RemoteConfig::HandleSetDevicesTxt()>:
 80096c0:	b510      	push	{r4, lr}
 80096c2:	4604      	mov	r4, r0
 80096c4:	4b06      	ldr	r3, [pc, #24]	; (80096e0 <RemoteConfig::HandleSetDevicesTxt()+0x20>)
 80096c6:	b08c      	sub	sp, #48	; 0x30
 80096c8:	6819      	ldr	r1, [r3, #0]
 80096ca:	a801      	add	r0, sp, #4
 80096cc:	f003 fddc 	bl	800d288 <WS28xxDmxParams::WS28xxDmxParams(WS28xxDmxParamsStore*)>
 80096d0:	4b04      	ldr	r3, [pc, #16]	; (80096e4 <RemoteConfig::HandleSetDevicesTxt()+0x24>)
 80096d2:	8ba2      	ldrh	r2, [r4, #28]
 80096d4:	6819      	ldr	r1, [r3, #0]
 80096d6:	a801      	add	r0, sp, #4
 80096d8:	f003 fe0a 	bl	800d2f0 <WS28xxDmxParams::Load(char const*, unsigned int)>
 80096dc:	b00c      	add	sp, #48	; 0x30
 80096de:	bd10      	pop	{r4, pc}
 80096e0:	2000bdc4 	andcs	fp, r0, r4, asr #27
 80096e4:	200000ec 	andcs	r0, r0, ip, ror #1

080096e8 <RemoteConfig::HandleSetDisplayTxt()>:
 80096e8:	b510      	push	{r4, lr}
 80096ea:	4604      	mov	r4, r0
 80096ec:	4b06      	ldr	r3, [pc, #24]	; (8009708 <RemoteConfig::HandleSetDisplayTxt()+0x20>)
 80096ee:	b08a      	sub	sp, #40	; 0x28
 80096f0:	6819      	ldr	r1, [r3, #0]
 80096f2:	4668      	mov	r0, sp
 80096f4:	f008 fde0 	bl	80122b8 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>
 80096f8:	4b04      	ldr	r3, [pc, #16]	; (800970c <RemoteConfig::HandleSetDisplayTxt()+0x24>)
 80096fa:	4668      	mov	r0, sp
 80096fc:	8ba2      	ldrh	r2, [r4, #28]
 80096fe:	6819      	ldr	r1, [r3, #0]
 8009700:	f008 fdf4 	bl	80122ec <DisplayUdfParams::Load(char const*, unsigned int)>
 8009704:	b00a      	add	sp, #40	; 0x28
 8009706:	bd10      	pop	{r4, pc}
 8009708:	2000bdb0 			; <UNDEFINED> instruction: 0x2000bdb0
 800970c:	200000ec 	andcs	r0, r0, ip, ror #1

08009710 <RemoteConfig::HandleFactory()>:
 8009710:	b538      	push	{r3, r4, r5, lr}
 8009712:	2400      	movs	r4, #0
 8009714:	4d04      	ldr	r5, [pc, #16]	; (8009728 <RemoteConfig::HandleFactory()+0x18>)
 8009716:	4621      	mov	r1, r4
 8009718:	6828      	ldr	r0, [r5, #0]
 800971a:	3401      	adds	r4, #1
 800971c:	f005 f8b8 	bl	800e890 <SpiFlashStore::ResetSetList(spiflashstore::Store)>
 8009720:	2c1c      	cmp	r4, #28
 8009722:	d1f8      	bne.n	8009716 <RemoteConfig::HandleFactory()+0x6>
 8009724:	bd38      	pop	{r3, r4, r5, pc}
 8009726:	bf00      	nop
 8009728:	2000bda8 	andcs	fp, r0, r8, lsr #27

0800972c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>:
 800972c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800972e:	460b      	mov	r3, r1
 8009730:	8885      	ldrh	r5, [r0, #4]
 8009732:	88c1      	ldrh	r1, [r0, #6]
 8009734:	42a9      	cmp	r1, r5
 8009736:	d214      	bcs.n	8009762 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x36>
 8009738:	4604      	mov	r4, r0
 800973a:	6800      	ldr	r0, [r0, #0]
 800973c:	1a6d      	subs	r5, r5, r1
 800973e:	4408      	add	r0, r1
 8009740:	7a21      	ldrb	r1, [r4, #8]
 8009742:	b91a      	cbnz	r2, 800974c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x20>
 8009744:	b919      	cbnz	r1, 800974e <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x22>
 8009746:	4a0a      	ldr	r2, [pc, #40]	; (8009770 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x44>)
 8009748:	9100      	str	r1, [sp, #0]
 800974a:	e002      	b.n	8009752 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 800974c:	b159      	cbz	r1, 8009766 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x3a>
 800974e:	9200      	str	r2, [sp, #0]
 8009750:	4a08      	ldr	r2, [pc, #32]	; (8009774 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x48>)
 8009752:	4629      	mov	r1, r5
 8009754:	f7ff fbd2 	bl	8008efc <snprintf>
 8009758:	4285      	cmp	r5, r0
 800975a:	bfa2      	ittt	ge
 800975c:	88e3      	ldrhge	r3, [r4, #6]
 800975e:	181b      	addge	r3, r3, r0
 8009760:	80e3      	strhge	r3, [r4, #6]
 8009762:	b003      	add	sp, #12
 8009764:	bd30      	pop	{r4, r5, pc}
 8009766:	2201      	movs	r2, #1
 8009768:	9200      	str	r2, [sp, #0]
 800976a:	4a03      	ldr	r2, [pc, #12]	; (8009778 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x4c>)
 800976c:	e7f1      	b.n	8009752 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 800976e:	bf00      	nop
 8009770:	08015dbd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r7, r8, sl, fp, ip, lr}
 8009774:	08015db4 	stmdaeq	r1, {r2, r4, r5, r7, r8, sl, fp, ip, lr}
 8009778:	08015dbe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r7, r8, sl, fp, ip, lr}

0800977c <RemoteConfigParams::RemoteConfigParams(RemoteConfigParamsStore*)>:
 800977c:	b510      	push	{r4, lr}
 800977e:	4604      	mov	r4, r0
 8009780:	2220      	movs	r2, #32
 8009782:	f840 1b04 	str.w	r1, [r0], #4
 8009786:	2100      	movs	r1, #0
 8009788:	f00a f81c 	bl	80137c4 <memset>
 800978c:	4620      	mov	r0, r4
 800978e:	bd10      	pop	{r4, pc}

08009790 <RemoteConfigParams::Load()>:
 8009790:	b508      	push	{r3, lr}
 8009792:	2300      	movs	r3, #0
 8009794:	4601      	mov	r1, r0
 8009796:	6043      	str	r3, [r0, #4]
 8009798:	6800      	ldr	r0, [r0, #0]
 800979a:	b120      	cbz	r0, 80097a6 <RemoteConfigParams::Load()+0x16>
 800979c:	6803      	ldr	r3, [r0, #0]
 800979e:	3104      	adds	r1, #4
 80097a0:	68db      	ldr	r3, [r3, #12]
 80097a2:	4798      	blx	r3
 80097a4:	2001      	movs	r0, #1
 80097a6:	bd08      	pop	{r3, pc}

080097a8 <RemoteConfigParams::Load(char const*, unsigned int)>:
 80097a8:	2300      	movs	r3, #0
 80097aa:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80097ac:	460d      	mov	r5, r1
 80097ae:	4616      	mov	r6, r2
 80097b0:	4604      	mov	r4, r0
 80097b2:	6043      	str	r3, [r0, #4]
 80097b4:	4602      	mov	r2, r0
 80097b6:	490a      	ldr	r1, [pc, #40]	; (80097e0 <RemoteConfigParams::Load(char const*, unsigned int)+0x38>)
 80097b8:	4668      	mov	r0, sp
 80097ba:	f009 f8c9 	bl	8012950 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 80097be:	4632      	mov	r2, r6
 80097c0:	4629      	mov	r1, r5
 80097c2:	4668      	mov	r0, sp
 80097c4:	f009 f8c8 	bl	8012958 <ReadConfigFile::Read(char const*, unsigned int)>
 80097c8:	4621      	mov	r1, r4
 80097ca:	f851 0b04 	ldr.w	r0, [r1], #4
 80097ce:	6803      	ldr	r3, [r0, #0]
 80097d0:	689b      	ldr	r3, [r3, #8]
 80097d2:	4798      	blx	r3
 80097d4:	4668      	mov	r0, sp
 80097d6:	f009 f8be 	bl	8012956 <ReadConfigFile::~ReadConfigFile()>
 80097da:	b002      	add	sp, #8
 80097dc:	bd70      	pop	{r4, r5, r6, pc}
 80097de:	bf00      	nop
 80097e0:	080098a1 	stmdaeq	r0, {r0, r5, r7, fp, ip, pc}

080097e4 <RemoteConfigParams::SetBool(unsigned char, unsigned int)>:
 80097e4:	6843      	ldr	r3, [r0, #4]
 80097e6:	b111      	cbz	r1, 80097ee <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0xa>
 80097e8:	4313      	orrs	r3, r2
 80097ea:	6043      	str	r3, [r0, #4]
 80097ec:	4770      	bx	lr
 80097ee:	ea23 0302 	bic.w	r3, r3, r2
 80097f2:	e7fa      	b.n	80097ea <RemoteConfigParams::SetBool(unsigned char, unsigned int)+0x6>

080097f4 <RemoteConfigParams::callbackFunction(char const*)>:
 80097f4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80097f6:	460d      	mov	r5, r1
 80097f8:	4604      	mov	r4, r0
 80097fa:	4923      	ldr	r1, [pc, #140]	; (8009888 <RemoteConfigParams::callbackFunction(char const*)+0x94>)
 80097fc:	4628      	mov	r0, r5
 80097fe:	f10d 0203 	add.w	r2, sp, #3
 8009802:	f009 f9e0 	bl	8012bc6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8009806:	b938      	cbnz	r0, 8009818 <RemoteConfigParams::callbackFunction(char const*)+0x24>
 8009808:	2201      	movs	r2, #1
 800980a:	4620      	mov	r0, r4
 800980c:	f89d 1003 	ldrb.w	r1, [sp, #3]
 8009810:	f7ff ffe8 	bl	80097e4 <RemoteConfigParams::SetBool(unsigned char, unsigned int)>
 8009814:	b003      	add	sp, #12
 8009816:	bd30      	pop	{r4, r5, pc}
 8009818:	4628      	mov	r0, r5
 800981a:	491c      	ldr	r1, [pc, #112]	; (800988c <RemoteConfigParams::callbackFunction(char const*)+0x98>)
 800981c:	f10d 0203 	add.w	r2, sp, #3
 8009820:	f009 f9d1 	bl	8012bc6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8009824:	b908      	cbnz	r0, 800982a <RemoteConfigParams::callbackFunction(char const*)+0x36>
 8009826:	2202      	movs	r2, #2
 8009828:	e7ef      	b.n	800980a <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800982a:	4628      	mov	r0, r5
 800982c:	4918      	ldr	r1, [pc, #96]	; (8009890 <RemoteConfigParams::callbackFunction(char const*)+0x9c>)
 800982e:	f10d 0203 	add.w	r2, sp, #3
 8009832:	f009 f9c8 	bl	8012bc6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8009836:	b908      	cbnz	r0, 800983c <RemoteConfigParams::callbackFunction(char const*)+0x48>
 8009838:	2204      	movs	r2, #4
 800983a:	e7e6      	b.n	800980a <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800983c:	4628      	mov	r0, r5
 800983e:	4915      	ldr	r1, [pc, #84]	; (8009894 <RemoteConfigParams::callbackFunction(char const*)+0xa0>)
 8009840:	f10d 0203 	add.w	r2, sp, #3
 8009844:	f009 f9bf 	bl	8012bc6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8009848:	b908      	cbnz	r0, 800984e <RemoteConfigParams::callbackFunction(char const*)+0x5a>
 800984a:	2208      	movs	r2, #8
 800984c:	e7dd      	b.n	800980a <RemoteConfigParams::callbackFunction(char const*)+0x16>
 800984e:	4628      	mov	r0, r5
 8009850:	4911      	ldr	r1, [pc, #68]	; (8009898 <RemoteConfigParams::callbackFunction(char const*)+0xa4>)
 8009852:	f10d 0203 	add.w	r2, sp, #3
 8009856:	f009 f9b6 	bl	8012bc6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800985a:	b908      	cbnz	r0, 8009860 <RemoteConfigParams::callbackFunction(char const*)+0x6c>
 800985c:	2220      	movs	r2, #32
 800985e:	e7d4      	b.n	800980a <RemoteConfigParams::callbackFunction(char const*)+0x16>
 8009860:	2317      	movs	r3, #23
 8009862:	4628      	mov	r0, r5
 8009864:	9301      	str	r3, [sp, #4]
 8009866:	490d      	ldr	r1, [pc, #52]	; (800989c <RemoteConfigParams::callbackFunction(char const*)+0xa8>)
 8009868:	ab01      	add	r3, sp, #4
 800986a:	f104 020c 	add.w	r2, r4, #12
 800986e:	f009 f8a7 	bl	80129c0 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 8009872:	2800      	cmp	r0, #0
 8009874:	d1ce      	bne.n	8009814 <RemoteConfigParams::callbackFunction(char const*)+0x20>
 8009876:	9b01      	ldr	r3, [sp, #4]
 8009878:	4423      	add	r3, r4
 800987a:	7318      	strb	r0, [r3, #12]
 800987c:	6863      	ldr	r3, [r4, #4]
 800987e:	f043 0310 	orr.w	r3, r3, #16
 8009882:	6063      	str	r3, [r4, #4]
 8009884:	e7c6      	b.n	8009814 <RemoteConfigParams::callbackFunction(char const*)+0x20>
 8009886:	bf00      	nop
 8009888:	080161a7 	stmdaeq	r1, {r0, r1, r2, r5, r7, r8, sp, lr}
 800988c:	080161c8 	stmdaeq	r1, {r3, r6, r7, r8, sp, lr}
 8009890:	080161d6 	stmdaeq	r1, {r1, r2, r4, r6, r7, r8, sp, lr}
 8009894:	080161e4 	stmdaeq	r1, {r2, r5, r6, r7, r8, sp, lr}
 8009898:	080161f2 	stmdaeq	r1, {r1, r4, r5, r6, r7, r8, sp, lr}
 800989c:	080161bb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r7, r8, sp, lr}

080098a0 <RemoteConfigParams::staticCallbackFunction(void*, char const*)>:
 80098a0:	f7ff bfa8 	b.w	80097f4 <RemoteConfigParams::callbackFunction(char const*)>

080098a4 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>:
 80098a4:	b570      	push	{r4, r5, r6, lr}
 80098a6:	4604      	mov	r4, r0
 80098a8:	4615      	mov	r5, r2
 80098aa:	461e      	mov	r6, r3
 80098ac:	b086      	sub	sp, #24
 80098ae:	3004      	adds	r0, #4
 80098b0:	2900      	cmp	r1, #0
 80098b2:	d040      	beq.n	8009936 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x92>
 80098b4:	2220      	movs	r2, #32
 80098b6:	f009 ff6e 	bl	8013796 <memmove>
 80098ba:	4633      	mov	r3, r6
 80098bc:	462a      	mov	r2, r5
 80098be:	4937      	ldr	r1, [pc, #220]	; (800999c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xf8>)
 80098c0:	a803      	add	r0, sp, #12
 80098c2:	f008 ffa5 	bl	8012810 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 80098c6:	6862      	ldr	r2, [r4, #4]
 80098c8:	4935      	ldr	r1, [pc, #212]	; (80099a0 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xfc>)
 80098ca:	f002 0201 	and.w	r2, r2, #1
 80098ce:	a803      	add	r0, sp, #12
 80098d0:	f7ff ff2c 	bl	800972c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 80098d4:	6862      	ldr	r2, [r4, #4]
 80098d6:	4933      	ldr	r1, [pc, #204]	; (80099a4 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x100>)
 80098d8:	f3c2 0240 	ubfx	r2, r2, #1, #1
 80098dc:	a803      	add	r0, sp, #12
 80098de:	f7ff ff25 	bl	800972c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 80098e2:	6862      	ldr	r2, [r4, #4]
 80098e4:	4930      	ldr	r1, [pc, #192]	; (80099a8 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x104>)
 80098e6:	f3c2 0280 	ubfx	r2, r2, #2, #1
 80098ea:	a803      	add	r0, sp, #12
 80098ec:	f7ff ff1e 	bl	800972c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 80098f0:	6862      	ldr	r2, [r4, #4]
 80098f2:	492e      	ldr	r1, [pc, #184]	; (80099ac <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x108>)
 80098f4:	f3c2 02c0 	ubfx	r2, r2, #3, #1
 80098f8:	a803      	add	r0, sp, #12
 80098fa:	f7ff ff17 	bl	800972c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 80098fe:	6862      	ldr	r2, [r4, #4]
 8009900:	492b      	ldr	r1, [pc, #172]	; (80099b0 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x10c>)
 8009902:	f3c2 1240 	ubfx	r2, r2, #5, #1
 8009906:	a803      	add	r0, sp, #12
 8009908:	f7ff ff10 	bl	800972c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800990c:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 8009910:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8009914:	42a9      	cmp	r1, r5
 8009916:	d223      	bcs.n	8009960 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xbc>
 8009918:	9803      	ldr	r0, [sp, #12]
 800991a:	1a6d      	subs	r5, r5, r1
 800991c:	4408      	add	r0, r1
 800991e:	6861      	ldr	r1, [r4, #4]
 8009920:	f89d 2014 	ldrb.w	r2, [sp, #20]
 8009924:	06c9      	lsls	r1, r1, #27
 8009926:	f104 030c 	add.w	r3, r4, #12
 800992a:	d40b      	bmi.n	8009944 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa0>
 800992c:	b95a      	cbnz	r2, 8009946 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa2>
 800992e:	9300      	str	r3, [sp, #0]
 8009930:	4a20      	ldr	r2, [pc, #128]	; (80099b4 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x110>)
 8009932:	4b21      	ldr	r3, [pc, #132]	; (80099b8 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x114>)
 8009934:	e00a      	b.n	800994c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa8>
 8009936:	6823      	ldr	r3, [r4, #0]
 8009938:	4601      	mov	r1, r0
 800993a:	681a      	ldr	r2, [r3, #0]
 800993c:	4618      	mov	r0, r3
 800993e:	68d2      	ldr	r2, [r2, #12]
 8009940:	4790      	blx	r2
 8009942:	e7ba      	b.n	80098ba <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x16>
 8009944:	b32a      	cbz	r2, 8009992 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xee>
 8009946:	9300      	str	r3, [sp, #0]
 8009948:	4a1c      	ldr	r2, [pc, #112]	; (80099bc <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x118>)
 800994a:	4b1b      	ldr	r3, [pc, #108]	; (80099b8 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x114>)
 800994c:	4629      	mov	r1, r5
 800994e:	f7ff fad5 	bl	8008efc <snprintf>
 8009952:	4285      	cmp	r5, r0
 8009954:	bfa2      	ittt	ge
 8009956:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800995a:	18c0      	addge	r0, r0, r3
 800995c:	f8ad 0012 	strhge.w	r0, [sp, #18]
 8009960:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8009964:	b17b      	cbz	r3, 8009986 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xe2>
 8009966:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800996a:	9b03      	ldr	r3, [sp, #12]
 800996c:	4413      	add	r3, r2
 800996e:	227d      	movs	r2, #125	; 0x7d
 8009970:	f803 2c01 	strb.w	r2, [r3, #-1]
 8009974:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8009978:	9903      	ldr	r1, [sp, #12]
 800997a:	54ca      	strb	r2, [r1, r3]
 800997c:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8009980:	3301      	adds	r3, #1
 8009982:	f8ad 3012 	strh.w	r3, [sp, #18]
 8009986:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800998a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800998c:	601a      	str	r2, [r3, #0]
 800998e:	b006      	add	sp, #24
 8009990:	bd70      	pop	{r4, r5, r6, pc}
 8009992:	9300      	str	r3, [sp, #0]
 8009994:	4a0a      	ldr	r2, [pc, #40]	; (80099c0 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x11c>)
 8009996:	4b08      	ldr	r3, [pc, #32]	; (80099b8 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0x114>)
 8009998:	e7d8      	b.n	800994c <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)+0xa8>
 800999a:	bf00      	nop
 800999c:	080161af 	stmdaeq	r1, {r0, r1, r2, r3, r5, r7, r8, sp, lr}
 80099a0:	080161a7 	stmdaeq	r1, {r0, r1, r2, r5, r7, r8, sp, lr}
 80099a4:	080161c8 	stmdaeq	r1, {r3, r6, r7, r8, sp, lr}
 80099a8:	080161d6 	stmdaeq	r1, {r1, r2, r4, r6, r7, r8, sp, lr}
 80099ac:	080161e4 	stmdaeq	r1, {r2, r5, r6, r7, r8, sp, lr}
 80099b0:	080161f2 	stmdaeq	r1, {r1, r4, r5, r6, r7, r8, sp, lr}
 80099b4:	08015dd0 	stmdaeq	r1, {r4, r6, r7, r8, sl, fp, ip, lr}
 80099b8:	080161bb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r7, r8, sp, lr}
 80099bc:	08015dc5 	stmdaeq	r1, {r0, r2, r6, r7, r8, sl, fp, ip, lr}
 80099c0:	08015dd1 	stmdaeq	r1, {r0, r4, r6, r7, r8, sl, fp, ip, lr}

080099c4 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)>:
 80099c4:	b513      	push	{r0, r1, r4, lr}
 80099c6:	6804      	ldr	r4, [r0, #0]
 80099c8:	b914      	cbnz	r4, 80099d0 <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0xc>
 80099ca:	601c      	str	r4, [r3, #0]
 80099cc:	b002      	add	sp, #8
 80099ce:	bd10      	pop	{r4, pc}
 80099d0:	9300      	str	r3, [sp, #0]
 80099d2:	4613      	mov	r3, r2
 80099d4:	460a      	mov	r2, r1
 80099d6:	2100      	movs	r1, #0
 80099d8:	f7ff ff64 	bl	80098a4 <RemoteConfigParams::Builder(TRemoteConfigParams const*, char*, unsigned int, unsigned int&)>
 80099dc:	e7f6      	b.n	80099cc <RemoteConfigParams::Save(char*, unsigned int, unsigned int&)+0x8>

080099de <RemoteConfigParams::Set(RemoteConfig*)>:
 80099de:	b538      	push	{r3, r4, r5, lr}
 80099e0:	460c      	mov	r4, r1
 80099e2:	4605      	mov	r5, r0
 80099e4:	6841      	ldr	r1, [r0, #4]
 80099e6:	4620      	mov	r0, r4
 80099e8:	f001 0101 	and.w	r1, r1, #1
 80099ec:	f7ff fc3a 	bl	8009264 <RemoteConfig::SetDisable(bool)>
 80099f0:	686b      	ldr	r3, [r5, #4]
 80099f2:	f3c3 0240 	ubfx	r2, r3, #1, #1
 80099f6:	7362      	strb	r2, [r4, #13]
 80099f8:	f3c3 0280 	ubfx	r2, r3, #2, #1
 80099fc:	73a2      	strb	r2, [r4, #14]
 80099fe:	f3c3 02c0 	ubfx	r2, r3, #3, #1
 8009a02:	73e2      	strb	r2, [r4, #15]
 8009a04:	f3c3 1240 	ubfx	r2, r3, #5, #1
 8009a08:	06db      	lsls	r3, r3, #27
 8009a0a:	7422      	strb	r2, [r4, #16]
 8009a0c:	d506      	bpl.n	8009a1c <RemoteConfigParams::Set(RemoteConfig*)+0x3e>
 8009a0e:	4620      	mov	r0, r4
 8009a10:	f105 010c 	add.w	r1, r5, #12
 8009a14:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8009a18:	f7ff bc44 	b.w	80092a4 <RemoteConfig::SetDisplayName(char const*)>
 8009a1c:	bd38      	pop	{r3, r4, r5, pc}

08009a1e <RemoteConfigParams::Dump()>:
 8009a1e:	4770      	bx	lr

08009a20 <RemoteConfig::HandleReboot()>:
 8009a20:	7b83      	ldrb	r3, [r0, #14]
 8009a22:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009a24:	2b00      	cmp	r3, #0
 8009a26:	d03d      	beq.n	8009aa4 <RemoteConfig::HandleReboot()+0x84>
 8009a28:	2301      	movs	r3, #1
 8009a2a:	4c1f      	ldr	r4, [pc, #124]	; (8009aa8 <RemoteConfig::HandleReboot()+0x88>)
 8009a2c:	7443      	strb	r3, [r0, #17]
 8009a2e:	6825      	ldr	r5, [r4, #0]
 8009a30:	69a8      	ldr	r0, [r5, #24]
 8009a32:	b138      	cbz	r0, 8009a44 <RemoteConfig::HandleReboot()+0x24>
 8009a34:	2100      	movs	r1, #0
 8009a36:	6803      	ldr	r3, [r0, #0]
 8009a38:	7429      	strb	r1, [r5, #16]
 8009a3a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009a3c:	4798      	blx	r3
 8009a3e:	4b1b      	ldr	r3, [pc, #108]	; (8009aac <RemoteConfig::HandleReboot()+0x8c>)
 8009a40:	681b      	ldr	r3, [r3, #0]
 8009a42:	606b      	str	r3, [r5, #4]
 8009a44:	4d1a      	ldr	r5, [pc, #104]	; (8009ab0 <RemoteConfig::HandleReboot()+0x90>)
 8009a46:	6828      	ldr	r0, [r5, #0]
 8009a48:	f004 ffa8 	bl	800e99c <SpiFlashStore::Flash()>
 8009a4c:	2800      	cmp	r0, #0
 8009a4e:	d1fa      	bne.n	8009a46 <RemoteConfig::HandleReboot()+0x26>
 8009a50:	4b18      	ldr	r3, [pc, #96]	; (8009ab4 <RemoteConfig::HandleReboot()+0x94>)
 8009a52:	6818      	ldr	r0, [r3, #0]
 8009a54:	f006 fed0 	bl	80107f8 <Network::Shutdown()>
 8009a58:	4817      	ldr	r0, [pc, #92]	; (8009ab8 <RemoteConfig::HandleReboot()+0x98>)
 8009a5a:	f7ff fa27 	bl	8008eac <printf>
 8009a5e:	6823      	ldr	r3, [r4, #0]
 8009a60:	6998      	ldr	r0, [r3, #24]
 8009a62:	b110      	cbz	r0, 8009a6a <RemoteConfig::HandleReboot()+0x4a>
 8009a64:	6803      	ldr	r3, [r0, #0]
 8009a66:	68db      	ldr	r3, [r3, #12]
 8009a68:	4798      	blx	r3
 8009a6a:	6824      	ldr	r4, [r4, #0]
 8009a6c:	4913      	ldr	r1, [pc, #76]	; (8009abc <RemoteConfig::HandleReboot()+0x9c>)
 8009a6e:	4620      	mov	r0, r4
 8009a70:	f7fe fb44 	bl	80080fc <Display::TextStatus(char const*)>
 8009a74:	7c63      	ldrb	r3, [r4, #17]
 8009a76:	b18b      	cbz	r3, 8009a9c <RemoteConfig::HandleReboot()+0x7c>
 8009a78:	2312      	movs	r3, #18
 8009a7a:	f88d 3004 	strb.w	r3, [sp, #4]
 8009a7e:	23bf      	movs	r3, #191	; 0xbf
 8009a80:	7a20      	ldrb	r0, [r4, #8]
 8009a82:	f88d 3005 	strb.w	r3, [sp, #5]
 8009a86:	f88d 3006 	strb.w	r3, [sp, #6]
 8009a8a:	f00a ff69 	bl	8014960 <gd32_i2c_set_address(unsigned char)>
 8009a8e:	68e0      	ldr	r0, [r4, #12]
 8009a90:	f00a ff5e 	bl	8014950 <gd32_i2c_set_baudrate(unsigned int)>
 8009a94:	2103      	movs	r1, #3
 8009a96:	a801      	add	r0, sp, #4
 8009a98:	f00a ff68 	bl	801496c <gd32_i2c_write(char const*, unsigned int)>
 8009a9c:	4b08      	ldr	r3, [pc, #32]	; (8009ac0 <RemoteConfig::HandleReboot()+0xa0>)
 8009a9e:	6818      	ldr	r0, [r3, #0]
 8009aa0:	f009 fd34 	bl	801350c <Hardware::Reboot()>
 8009aa4:	b003      	add	sp, #12
 8009aa6:	bd30      	pop	{r4, r5, pc}
 8009aa8:	20013ce4 	andcs	r3, r1, r4, ror #25
 8009aac:	20013df4 	strdcs	r3, [r1], -r4
 8009ab0:	2000bda8 	andcs	fp, r0, r8, lsr #27
 8009ab4:	200136ac 	andcs	r3, r1, ip, lsr #13
 8009ab8:	08015dd8 	stmdaeq	r1, {r3, r4, r6, r7, r8, sl, fp, ip, lr}
 8009abc:	08015de7 	stmdaeq	r1, {r0, r1, r2, r5, r6, r7, r8, sl, fp, ip, lr}
 8009ac0:	20013dd4 	ldrdcs	r3, [r1], -r4

08009ac4 <RemoteConfig::GetIndex(void const*, unsigned int&)>:
 8009ac4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8009ac8:	2000      	movs	r0, #0
 8009aca:	4d12      	ldr	r5, [pc, #72]	; (8009b14 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x50>)
 8009acc:	f10d 0c04 	add.w	ip, sp, #4
 8009ad0:	6814      	ldr	r4, [r2, #0]
 8009ad2:	7d2b      	ldrb	r3, [r5, #20]
 8009ad4:	692e      	ldr	r6, [r5, #16]
 8009ad6:	42a3      	cmp	r3, r4
 8009ad8:	bf34      	ite	cc
 8009ada:	4664      	movcc	r4, ip
 8009adc:	4614      	movcs	r4, r2
 8009ade:	9301      	str	r3, [sp, #4]
 8009ae0:	6827      	ldr	r7, [r4, #0]
 8009ae2:	460c      	mov	r4, r1
 8009ae4:	3e01      	subs	r6, #1
 8009ae6:	440f      	add	r7, r1
 8009ae8:	42bc      	cmp	r4, r7
 8009aea:	d011      	beq.n	8009b10 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x4c>
 8009aec:	f894 8000 	ldrb.w	r8, [r4]
 8009af0:	f816 ef01 	ldrb.w	lr, [r6, #1]!
 8009af4:	45f0      	cmp	r8, lr
 8009af6:	d009      	beq.n	8009b0c <RemoteConfig::GetIndex(void const*, unsigned int&)+0x48>
 8009af8:	3001      	adds	r0, #1
 8009afa:	2805      	cmp	r0, #5
 8009afc:	f105 051c 	add.w	r5, r5, #28
 8009b00:	d1e6      	bne.n	8009ad0 <RemoteConfig::GetIndex(void const*, unsigned int&)+0xc>
 8009b02:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8009b06:	b002      	add	sp, #8
 8009b08:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009b0c:	3401      	adds	r4, #1
 8009b0e:	e7eb      	b.n	8009ae8 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x24>
 8009b10:	6013      	str	r3, [r2, #0]
 8009b12:	e7f8      	b.n	8009b06 <RemoteConfig::GetIndex(void const*, unsigned int&)+0x42>
 8009b14:	08015e30 	stmdaeq	r1, {r4, r5, r9, sl, fp, ip, lr}

08009b18 <RemoteConfig::PlatformHandleTftpSet()>:
 8009b18:	f890 1024 	ldrb.w	r1, [r0, #36]	; 0x24
 8009b1c:	b109      	cbz	r1, 8009b22 <RemoteConfig::PlatformHandleTftpSet()+0xa>
 8009b1e:	f24a 51a5 	movw	r1, #42405	; 0xa5a5
 8009b22:	2002      	movs	r0, #2
 8009b24:	f00a b852 	b.w	8013bcc <bkp_data_write>

08009b28 <RemoteConfig::PlatformHandleTftpGet()>:
 8009b28:	b510      	push	{r4, lr}
 8009b2a:	4604      	mov	r4, r0
 8009b2c:	2002      	movs	r0, #2
 8009b2e:	f00a f863 	bl	8013bf8 <bkp_data_read>
 8009b32:	f24a 53a5 	movw	r3, #42405	; 0xa5a5
 8009b36:	1ac3      	subs	r3, r0, r3
 8009b38:	4258      	negs	r0, r3
 8009b3a:	4158      	adcs	r0, r3
 8009b3c:	f884 0024 	strb.w	r0, [r4, #36]	; 0x24
 8009b40:	bd10      	pop	{r4, pc}

08009b42 <strcmp>:
 8009b42:	1e43      	subs	r3, r0, #1
 8009b44:	3901      	subs	r1, #1
 8009b46:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8009b4a:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 8009b4e:	4290      	cmp	r0, r2
 8009b50:	d102      	bne.n	8009b58 <strcmp+0x16>
 8009b52:	2800      	cmp	r0, #0
 8009b54:	d1f7      	bne.n	8009b46 <strcmp+0x4>
 8009b56:	4770      	bx	lr
 8009b58:	1a80      	subs	r0, r0, r2
 8009b5a:	4770      	bx	lr

08009b5c <strcasecmp>:
 8009b5c:	b530      	push	{r4, r5, lr}
 8009b5e:	1e42      	subs	r2, r0, #1
 8009b60:	3901      	subs	r1, #1
 8009b62:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8009b66:	4604      	mov	r4, r0
 8009b68:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 8009b6c:	2b19      	cmp	r3, #25
 8009b6e:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 8009b72:	bf98      	it	ls
 8009b74:	f100 0420 	addls.w	r4, r0, #32
 8009b78:	f1a3 0541 	sub.w	r5, r3, #65	; 0x41
 8009b7c:	2d19      	cmp	r5, #25
 8009b7e:	bf98      	it	ls
 8009b80:	3320      	addls	r3, #32
 8009b82:	42a3      	cmp	r3, r4
 8009b84:	d102      	bne.n	8009b8c <strcasecmp+0x30>
 8009b86:	2800      	cmp	r0, #0
 8009b88:	d1eb      	bne.n	8009b62 <strcasecmp+0x6>
 8009b8a:	bd30      	pop	{r4, r5, pc}
 8009b8c:	1ae0      	subs	r0, r4, r3
 8009b8e:	e7fc      	b.n	8009b8a <strcasecmp+0x2e>

08009b90 <PropertiesConfig::EnableJSON(bool)>:
 8009b90:	4a04      	ldr	r2, [pc, #16]	; (8009ba4 <PropertiesConfig::EnableJSON(bool)+0x14>)
 8009b92:	7813      	ldrb	r3, [r2, #0]
 8009b94:	b118      	cbz	r0, 8009b9e <PropertiesConfig::EnableJSON(bool)+0xe>
 8009b96:	f043 0301 	orr.w	r3, r3, #1
 8009b9a:	7013      	strb	r3, [r2, #0]
 8009b9c:	4770      	bx	lr
 8009b9e:	f003 03fe 	and.w	r3, r3, #254	; 0xfe
 8009ba2:	e7fa      	b.n	8009b9a <PropertiesConfig::EnableJSON(bool)+0xa>
 8009ba4:	20013ce0 	andcs	r3, r1, r0, ror #25

08009ba8 <HttpDaemon::HttpDaemon()>:
 8009ba8:	4a0a      	ldr	r2, [pc, #40]	; (8009bd4 <HttpDaemon::HttpDaemon()+0x2c>)
 8009baa:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8009bae:	6002      	str	r2, [r0, #0]
 8009bb0:	2200      	movs	r2, #0
 8009bb2:	f44f 7c02 	mov.w	ip, #520	; 0x208
 8009bb6:	e9c0 1204 	strd	r1, r2, [r0, #16]
 8009bba:	2102      	movs	r1, #2
 8009bbc:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8009bc0:	e9c0 c106 	strd	ip, r1, [r0, #24]
 8009bc4:	60c2      	str	r2, [r0, #12]
 8009bc6:	8402      	strh	r2, [r0, #32]
 8009bc8:	f8a0 25c2 	strh.w	r2, [r0, #1474]	; 0x5c2
 8009bcc:	f8c0 25c4 	str.w	r2, [r0, #1476]	; 0x5c4
 8009bd0:	4770      	bx	lr
 8009bd2:	bf00      	nop
 8009bd4:	08016127 	stmdaeq	r1, {r0, r1, r2, r5, r8, sp, lr}

08009bd8 <HttpDaemon::Start()>:
 8009bd8:	4b04      	ldr	r3, [pc, #16]	; (8009bec <HttpDaemon::Start()+0x14>)
 8009bda:	b510      	push	{r4, lr}
 8009bdc:	2150      	movs	r1, #80	; 0x50
 8009bde:	4604      	mov	r4, r0
 8009be0:	6818      	ldr	r0, [r3, #0]
 8009be2:	f007 f943 	bl	8010e6c <Network::TcpBegin(unsigned short)>
 8009be6:	6120      	str	r0, [r4, #16]
 8009be8:	bd10      	pop	{r4, pc}
 8009bea:	bf00      	nop
 8009bec:	200136ac 	andcs	r3, r1, ip, lsr #13

08009bf0 <HttpDaemon::ParseMethod(char*)>:
 8009bf0:	b538      	push	{r3, r4, r5, lr}
 8009bf2:	4604      	mov	r4, r0
 8009bf4:	4608      	mov	r0, r1
 8009bf6:	491b      	ldr	r1, [pc, #108]	; (8009c64 <HttpDaemon::ParseMethod(char*)+0x74>)
 8009bf8:	f009 fe12 	bl	8013820 <strtok>
 8009bfc:	4605      	mov	r5, r0
 8009bfe:	b370      	cbz	r0, 8009c5e <HttpDaemon::ParseMethod(char*)+0x6e>
 8009c00:	4919      	ldr	r1, [pc, #100]	; (8009c68 <HttpDaemon::ParseMethod(char*)+0x78>)
 8009c02:	f7ff ff9e 	bl	8009b42 <strcmp>
 8009c06:	b940      	cbnz	r0, 8009c1a <HttpDaemon::ParseMethod(char*)+0x2a>
 8009c08:	61e0      	str	r0, [r4, #28]
 8009c0a:	2000      	movs	r0, #0
 8009c0c:	4915      	ldr	r1, [pc, #84]	; (8009c64 <HttpDaemon::ParseMethod(char*)+0x74>)
 8009c0e:	f009 fe07 	bl	8013820 <strtok>
 8009c12:	b950      	cbnz	r0, 8009c2a <HttpDaemon::ParseMethod(char*)+0x3a>
 8009c14:	f44f 70c8 	mov.w	r0, #400	; 0x190
 8009c18:	bd38      	pop	{r3, r4, r5, pc}
 8009c1a:	4628      	mov	r0, r5
 8009c1c:	4913      	ldr	r1, [pc, #76]	; (8009c6c <HttpDaemon::ParseMethod(char*)+0x7c>)
 8009c1e:	f7ff ff90 	bl	8009b42 <strcmp>
 8009c22:	b9e0      	cbnz	r0, 8009c5e <HttpDaemon::ParseMethod(char*)+0x6e>
 8009c24:	2301      	movs	r3, #1
 8009c26:	61e3      	str	r3, [r4, #28]
 8009c28:	e7ef      	b.n	8009c0a <HttpDaemon::ParseMethod(char*)+0x1a>
 8009c2a:	6060      	str	r0, [r4, #4]
 8009c2c:	4910      	ldr	r1, [pc, #64]	; (8009c70 <HttpDaemon::ParseMethod(char*)+0x80>)
 8009c2e:	2000      	movs	r0, #0
 8009c30:	f009 fdf6 	bl	8013820 <strtok>
 8009c34:	2800      	cmp	r0, #0
 8009c36:	d0ed      	beq.n	8009c14 <HttpDaemon::ParseMethod(char*)+0x24>
 8009c38:	490e      	ldr	r1, [pc, #56]	; (8009c74 <HttpDaemon::ParseMethod(char*)+0x84>)
 8009c3a:	f7ff ff82 	bl	8009b42 <strcmp>
 8009c3e:	2800      	cmp	r0, #0
 8009c40:	d1e8      	bne.n	8009c14 <HttpDaemon::ParseMethod(char*)+0x24>
 8009c42:	490d      	ldr	r1, [pc, #52]	; (8009c78 <HttpDaemon::ParseMethod(char*)+0x88>)
 8009c44:	f009 fdec 	bl	8013820 <strtok>
 8009c48:	2800      	cmp	r0, #0
 8009c4a:	d0e3      	beq.n	8009c14 <HttpDaemon::ParseMethod(char*)+0x24>
 8009c4c:	490b      	ldr	r1, [pc, #44]	; (8009c7c <HttpDaemon::ParseMethod(char*)+0x8c>)
 8009c4e:	f7ff ff78 	bl	8009b42 <strcmp>
 8009c52:	2800      	cmp	r0, #0
 8009c54:	f240 10f9 	movw	r0, #505	; 0x1f9
 8009c58:	bf08      	it	eq
 8009c5a:	20c8      	moveq	r0, #200	; 0xc8
 8009c5c:	e7dc      	b.n	8009c18 <HttpDaemon::ParseMethod(char*)+0x28>
 8009c5e:	f240 10f5 	movw	r0, #501	; 0x1f5
 8009c62:	e7d9      	b.n	8009c18 <HttpDaemon::ParseMethod(char*)+0x28>
 8009c64:	08015ebc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r9, sl, fp, ip, lr}
 8009c68:	08015ebe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r7, r9, sl, fp, ip, lr}
 8009c6c:	08015ec2 	stmdaeq	r1, {r1, r6, r7, r9, sl, fp, ip, lr}
 8009c70:	08015f2c 	stmdaeq	r1, {r2, r3, r5, r8, r9, sl, fp, ip, lr}
 8009c74:	08015ec7 	stmdaeq	r1, {r0, r1, r2, r6, r7, r9, sl, fp, ip, lr}
 8009c78:	08015ecc 	stmdaeq	r1, {r2, r3, r6, r7, r9, sl, fp, ip, lr}
 8009c7c:	08015ecf 	stmdaeq	r1, {r0, r1, r2, r3, r6, r7, r9, sl, fp, ip, lr}

08009c80 <HttpDaemon::ParseHeaderField(char*)>:
 8009c80:	b538      	push	{r3, r4, r5, lr}
 8009c82:	4605      	mov	r5, r0
 8009c84:	4608      	mov	r0, r1
 8009c86:	491d      	ldr	r1, [pc, #116]	; (8009cfc <HttpDaemon::ParseHeaderField(char*)+0x7c>)
 8009c88:	f009 fdca 	bl	8013820 <strtok>
 8009c8c:	4604      	mov	r4, r0
 8009c8e:	b910      	cbnz	r0, 8009c96 <HttpDaemon::ParseHeaderField(char*)+0x16>
 8009c90:	f44f 70c8 	mov.w	r0, #400	; 0x190
 8009c94:	bd38      	pop	{r3, r4, r5, pc}
 8009c96:	491a      	ldr	r1, [pc, #104]	; (8009d00 <HttpDaemon::ParseHeaderField(char*)+0x80>)
 8009c98:	f7ff ff60 	bl	8009b5c <strcasecmp>
 8009c9c:	b970      	cbnz	r0, 8009cbc <HttpDaemon::ParseHeaderField(char*)+0x3c>
 8009c9e:	4919      	ldr	r1, [pc, #100]	; (8009d04 <HttpDaemon::ParseHeaderField(char*)+0x84>)
 8009ca0:	f009 fdbe 	bl	8013820 <strtok>
 8009ca4:	2800      	cmp	r0, #0
 8009ca6:	d0f3      	beq.n	8009c90 <HttpDaemon::ParseHeaderField(char*)+0x10>
 8009ca8:	4917      	ldr	r1, [pc, #92]	; (8009d08 <HttpDaemon::ParseHeaderField(char*)+0x88>)
 8009caa:	f7ff ff4a 	bl	8009b42 <strcmp>
 8009cae:	b108      	cbz	r0, 8009cb4 <HttpDaemon::ParseHeaderField(char*)+0x34>
 8009cb0:	20c8      	movs	r0, #200	; 0xc8
 8009cb2:	e7ef      	b.n	8009c94 <HttpDaemon::ParseHeaderField(char*)+0x14>
 8009cb4:	2301      	movs	r3, #1
 8009cb6:	f885 3020 	strb.w	r3, [r5, #32]
 8009cba:	e7f9      	b.n	8009cb0 <HttpDaemon::ParseHeaderField(char*)+0x30>
 8009cbc:	4620      	mov	r0, r4
 8009cbe:	4913      	ldr	r1, [pc, #76]	; (8009d0c <HttpDaemon::ParseHeaderField(char*)+0x8c>)
 8009cc0:	f7ff ff4c 	bl	8009b5c <strcasecmp>
 8009cc4:	4604      	mov	r4, r0
 8009cc6:	2800      	cmp	r0, #0
 8009cc8:	d1f2      	bne.n	8009cb0 <HttpDaemon::ParseHeaderField(char*)+0x30>
 8009cca:	4911      	ldr	r1, [pc, #68]	; (8009d10 <HttpDaemon::ParseHeaderField(char*)+0x90>)
 8009ccc:	f009 fda8 	bl	8013820 <strtok>
 8009cd0:	2800      	cmp	r0, #0
 8009cd2:	d0dd      	beq.n	8009c90 <HttpDaemon::ParseHeaderField(char*)+0x10>
 8009cd4:	1e42      	subs	r2, r0, #1
 8009cd6:	4623      	mov	r3, r4
 8009cd8:	200a      	movs	r0, #10
 8009cda:	f812 1f01 	ldrb.w	r1, [r2, #1]!
 8009cde:	b151      	cbz	r1, 8009cf6 <HttpDaemon::ParseHeaderField(char*)+0x76>
 8009ce0:	3930      	subs	r1, #48	; 0x30
 8009ce2:	2909      	cmp	r1, #9
 8009ce4:	d8d4      	bhi.n	8009c90 <HttpDaemon::ParseHeaderField(char*)+0x10>
 8009ce6:	fb00 1303 	mla	r3, r0, r3, r1
 8009cea:	f5b3 6fb4 	cmp.w	r3, #1440	; 0x5a0
 8009cee:	d9f4      	bls.n	8009cda <HttpDaemon::ParseHeaderField(char*)+0x5a>
 8009cf0:	f240 109d 	movw	r0, #413	; 0x19d
 8009cf4:	e7ce      	b.n	8009c94 <HttpDaemon::ParseHeaderField(char*)+0x14>
 8009cf6:	f8a5 35c6 	strh.w	r3, [r5, #1478]	; 0x5c6
 8009cfa:	e7d9      	b.n	8009cb0 <HttpDaemon::ParseHeaderField(char*)+0x30>
 8009cfc:	08015ed3 	stmdaeq	r1, {r0, r1, r4, r6, r7, r9, sl, fp, ip, lr}
 8009d00:	08015ed5 	stmdaeq	r1, {r0, r2, r4, r6, r7, r9, sl, fp, ip, lr}
 8009d04:	08015ee2 	stmdaeq	r1, {r1, r5, r6, r7, r9, sl, fp, ip, lr}
 8009d08:	08015ee5 	stmdaeq	r1, {r0, r2, r5, r6, r7, r9, sl, fp, ip, lr}
 8009d0c:	08015ef6 	stmdaeq	r1, {r1, r2, r4, r5, r6, r7, r9, sl, fp, ip, lr}
 8009d10:	08015ebc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r9, sl, fp, ip, lr}

08009d14 <HttpDaemon::ParseRequest()>:
 8009d14:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009d16:	2400      	movs	r4, #0
 8009d18:	4605      	mov	r5, r0
 8009d1a:	4622      	mov	r2, r4
 8009d1c:	4626      	mov	r6, r4
 8009d1e:	68c1      	ldr	r1, [r0, #12]
 8009d20:	f880 4020 	strb.w	r4, [r0, #32]
 8009d24:	f8c0 45c4 	str.w	r4, [r0, #1476]	; 0x5c4
 8009d28:	8aab      	ldrh	r3, [r5, #20]
 8009d2a:	42a3      	cmp	r3, r4
 8009d2c:	d923      	bls.n	8009d76 <HttpDaemon::ParseRequest()+0x62>
 8009d2e:	68eb      	ldr	r3, [r5, #12]
 8009d30:	5d18      	ldrb	r0, [r3, r4]
 8009d32:	280a      	cmp	r0, #10
 8009d34:	d10e      	bne.n	8009d54 <HttpDaemon::ParseRequest()+0x40>
 8009d36:	4423      	add	r3, r4
 8009d38:	f803 6c01 	strb.w	r6, [r3, #-1]
 8009d3c:	1c57      	adds	r7, r2, #1
 8009d3e:	b962      	cbnz	r2, 8009d5a <HttpDaemon::ParseRequest()+0x46>
 8009d40:	4628      	mov	r0, r5
 8009d42:	f7ff ff55 	bl	8009bf0 <HttpDaemon::ParseMethod(char*)>
 8009d46:	28c8      	cmp	r0, #200	; 0xc8
 8009d48:	d116      	bne.n	8009d78 <HttpDaemon::ParseRequest()+0x64>
 8009d4a:	463a      	mov	r2, r7
 8009d4c:	68e9      	ldr	r1, [r5, #12]
 8009d4e:	3401      	adds	r4, #1
 8009d50:	b2a4      	uxth	r4, r4
 8009d52:	4421      	add	r1, r4
 8009d54:	3401      	adds	r4, #1
 8009d56:	b2a4      	uxth	r4, r4
 8009d58:	e7e6      	b.n	8009d28 <HttpDaemon::ParseRequest()+0x14>
 8009d5a:	7808      	ldrb	r0, [r1, #0]
 8009d5c:	b968      	cbnz	r0, 8009d7a <HttpDaemon::ParseRequest()+0x66>
 8009d5e:	696b      	ldr	r3, [r5, #20]
 8009d60:	3b01      	subs	r3, #1
 8009d62:	1b1b      	subs	r3, r3, r4
 8009d64:	b29b      	uxth	r3, r3
 8009d66:	f8a5 35c4 	strh.w	r3, [r5, #1476]	; 0x5c4
 8009d6a:	b123      	cbz	r3, 8009d76 <HttpDaemon::ParseRequest()+0x62>
 8009d6c:	68ea      	ldr	r2, [r5, #12]
 8009d6e:	3401      	adds	r4, #1
 8009d70:	4414      	add	r4, r2
 8009d72:	60ac      	str	r4, [r5, #8]
 8009d74:	54e0      	strb	r0, [r4, r3]
 8009d76:	20c8      	movs	r0, #200	; 0xc8
 8009d78:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009d7a:	4628      	mov	r0, r5
 8009d7c:	f7ff ff80 	bl	8009c80 <HttpDaemon::ParseHeaderField(char*)>
 8009d80:	e7e1      	b.n	8009d46 <HttpDaemon::ParseRequest()+0x32>
	...

08009d84 <HttpDaemon::HandleGetTxt()>:
 8009d84:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009d88:	6847      	ldr	r7, [r0, #4]
 8009d8a:	4604      	mov	r4, r0
 8009d8c:	1dbd      	adds	r5, r7, #6
 8009d8e:	462b      	mov	r3, r5
 8009d90:	4618      	mov	r0, r3
 8009d92:	7802      	ldrb	r2, [r0, #0]
 8009d94:	3301      	adds	r3, #1
 8009d96:	2a00      	cmp	r2, #0
 8009d98:	d1fa      	bne.n	8009d90 <HttpDaemon::HandleGetTxt()+0xc>
 8009d9a:	1b40      	subs	r0, r0, r5
 8009d9c:	2804      	cmp	r0, #4
 8009d9e:	d925      	bls.n	8009dec <HttpDaemon::HandleGetTxt()+0x68>
 8009da0:	3804      	subs	r0, #4
 8009da2:	4915      	ldr	r1, [pc, #84]	; (8009df8 <HttpDaemon::HandleGetTxt()+0x74>)
 8009da4:	4428      	add	r0, r5
 8009da6:	f7ff fecc 	bl	8009b42 <strcmp>
 8009daa:	b9f8      	cbnz	r0, 8009dec <HttpDaemon::HandleGetTxt()+0x68>
 8009dac:	4b13      	ldr	r3, [pc, #76]	; (8009dfc <HttpDaemon::HandleGetTxt()+0x78>)
 8009dae:	2001      	movs	r0, #1
 8009db0:	f893 8000 	ldrb.w	r8, [r3]
 8009db4:	f7ff feec 	bl	8009b90 <PropertiesConfig::EnableJSON(bool)>
 8009db8:	4b11      	ldr	r3, [pc, #68]	; (8009e00 <HttpDaemon::HandleGetTxt()+0x7c>)
 8009dba:	f240 529b 	movw	r2, #1435	; 0x59b
 8009dbe:	4629      	mov	r1, r5
 8009dc0:	6818      	ldr	r0, [r3, #0]
 8009dc2:	f7ff fa87 	bl	80092d4 <RemoteConfig::HandleGet(void*, unsigned int)>
 8009dc6:	4606      	mov	r6, r0
 8009dc8:	f008 0801 	and.w	r8, r8, #1
 8009dcc:	4640      	mov	r0, r8
 8009dce:	f7ff fedf 	bl	8009b90 <PropertiesConfig::EnableJSON(bool)>
 8009dd2:	b15e      	cbz	r6, 8009dec <HttpDaemon::HandleGetTxt()+0x68>
 8009dd4:	f8a4 65c2 	strh.w	r6, [r4, #1474]	; 0x5c2
 8009dd8:	3606      	adds	r6, #6
 8009dda:	3422      	adds	r4, #34	; 0x22
 8009ddc:	443e      	add	r6, r7
 8009dde:	42b5      	cmp	r5, r6
 8009de0:	d008      	beq.n	8009df4 <HttpDaemon::HandleGetTxt()+0x70>
 8009de2:	f815 3b01 	ldrb.w	r3, [r5], #1
 8009de6:	f804 3b01 	strb.w	r3, [r4], #1
 8009dea:	e7f8      	b.n	8009dde <HttpDaemon::HandleGetTxt()+0x5a>
 8009dec:	f44f 70c8 	mov.w	r0, #400	; 0x190
 8009df0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009df4:	20c8      	movs	r0, #200	; 0xc8
 8009df6:	e7fb      	b.n	8009df0 <HttpDaemon::HandleGetTxt()+0x6c>
 8009df8:	08015e1d 	stmdaeq	r1, {r0, r2, r3, r4, r9, sl, fp, ip, lr}
 8009dfc:	20013ce0 	andcs	r3, r1, r0, ror #25
 8009e00:	20000114 	andcs	r0, r0, r4, lsl r1

08009e04 <HttpDaemon::HandleGet()>:
 8009e04:	b570      	push	{r4, r5, r6, lr}
 8009e06:	6845      	ldr	r5, [r0, #4]
 8009e08:	4604      	mov	r4, r0
 8009e0a:	4943      	ldr	r1, [pc, #268]	; (8009f18 <HttpDaemon::HandleGet()+0x114>)
 8009e0c:	4628      	mov	r0, r5
 8009e0e:	f7ff fe98 	bl	8009b42 <strcmp>
 8009e12:	b120      	cbz	r0, 8009e1e <HttpDaemon::HandleGet()+0x1a>
 8009e14:	4628      	mov	r0, r5
 8009e16:	4941      	ldr	r1, [pc, #260]	; (8009f1c <HttpDaemon::HandleGet()+0x118>)
 8009e18:	f7ff fe93 	bl	8009b42 <strcmp>
 8009e1c:	b960      	cbnz	r0, 8009e38 <HttpDaemon::HandleGet()+0x34>
 8009e1e:	4621      	mov	r1, r4
 8009e20:	4b3f      	ldr	r3, [pc, #252]	; (8009f20 <HttpDaemon::HandleGet()+0x11c>)
 8009e22:	4840      	ldr	r0, [pc, #256]	; (8009f24 <HttpDaemon::HandleGet()+0x120>)
 8009e24:	f841 3b22 	str.w	r3, [r1], #34
 8009e28:	f000 fa7a 	bl	800a320 <get_file_content(char const*, char*)>
 8009e2c:	2800      	cmp	r0, #0
 8009e2e:	dd1e      	ble.n	8009e6e <HttpDaemon::HandleGet()+0x6a>
 8009e30:	f8a4 05c2 	strh.w	r0, [r4, #1474]	; 0x5c2
 8009e34:	20c8      	movs	r0, #200	; 0xc8
 8009e36:	bd70      	pop	{r4, r5, r6, pc}
 8009e38:	4628      	mov	r0, r5
 8009e3a:	493b      	ldr	r1, [pc, #236]	; (8009f28 <HttpDaemon::HandleGet()+0x124>)
 8009e3c:	f7ff fe81 	bl	8009b42 <strcmp>
 8009e40:	b928      	cbnz	r0, 8009e4e <HttpDaemon::HandleGet()+0x4a>
 8009e42:	4621      	mov	r1, r4
 8009e44:	4b39      	ldr	r3, [pc, #228]	; (8009f2c <HttpDaemon::HandleGet()+0x128>)
 8009e46:	483a      	ldr	r0, [pc, #232]	; (8009f30 <HttpDaemon::HandleGet()+0x12c>)
 8009e48:	f841 3b22 	str.w	r3, [r1], #34
 8009e4c:	e7ec      	b.n	8009e28 <HttpDaemon::HandleGet()+0x24>
 8009e4e:	4628      	mov	r0, r5
 8009e50:	4938      	ldr	r1, [pc, #224]	; (8009f34 <HttpDaemon::HandleGet()+0x130>)
 8009e52:	f7ff fe76 	bl	8009b42 <strcmp>
 8009e56:	b168      	cbz	r0, 8009e74 <HttpDaemon::HandleGet()+0x70>
 8009e58:	4a37      	ldr	r2, [pc, #220]	; (8009f38 <HttpDaemon::HandleGet()+0x134>)
 8009e5a:	1e6b      	subs	r3, r5, #1
 8009e5c:	1d6e      	adds	r6, r5, #5
 8009e5e:	42b3      	cmp	r3, r6
 8009e60:	d00e      	beq.n	8009e80 <HttpDaemon::HandleGet()+0x7c>
 8009e62:	f812 1b01 	ldrb.w	r1, [r2], #1
 8009e66:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8009e6a:	4288      	cmp	r0, r1
 8009e6c:	d0f7      	beq.n	8009e5e <HttpDaemon::HandleGet()+0x5a>
 8009e6e:	f44f 70ca 	mov.w	r0, #404	; 0x194
 8009e72:	e7e0      	b.n	8009e36 <HttpDaemon::HandleGet()+0x32>
 8009e74:	4621      	mov	r1, r4
 8009e76:	4b31      	ldr	r3, [pc, #196]	; (8009f3c <HttpDaemon::HandleGet()+0x138>)
 8009e78:	4831      	ldr	r0, [pc, #196]	; (8009f40 <HttpDaemon::HandleGet()+0x13c>)
 8009e7a:	f841 3b22 	str.w	r3, [r1], #34
 8009e7e:	e7d3      	b.n	8009e28 <HttpDaemon::HandleGet()+0x24>
 8009e80:	4b30      	ldr	r3, [pc, #192]	; (8009f44 <HttpDaemon::HandleGet()+0x140>)
 8009e82:	3506      	adds	r5, #6
 8009e84:	4628      	mov	r0, r5
 8009e86:	4930      	ldr	r1, [pc, #192]	; (8009f48 <HttpDaemon::HandleGet()+0x144>)
 8009e88:	6023      	str	r3, [r4, #0]
 8009e8a:	f7ff fe5a 	bl	8009b42 <strcmp>
 8009e8e:	b930      	cbnz	r0, 8009e9e <HttpDaemon::HandleGet()+0x9a>
 8009e90:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 8009e94:	f104 0022 	add.w	r0, r4, #34	; 0x22
 8009e98:	f000 f9ca 	bl	800a230 <remoteconfig::json_get_list(char*, unsigned short)>
 8009e9c:	e7c6      	b.n	8009e2c <HttpDaemon::HandleGet()+0x28>
 8009e9e:	4628      	mov	r0, r5
 8009ea0:	492a      	ldr	r1, [pc, #168]	; (8009f4c <HttpDaemon::HandleGet()+0x148>)
 8009ea2:	f7ff fe4e 	bl	8009b42 <strcmp>
 8009ea6:	b930      	cbnz	r0, 8009eb6 <HttpDaemon::HandleGet()+0xb2>
 8009ea8:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 8009eac:	f104 0022 	add.w	r0, r4, #34	; 0x22
 8009eb0:	f000 f9f2 	bl	800a298 <remoteconfig::json_get_version(char*, unsigned short)>
 8009eb4:	e7ba      	b.n	8009e2c <HttpDaemon::HandleGet()+0x28>
 8009eb6:	4628      	mov	r0, r5
 8009eb8:	4925      	ldr	r1, [pc, #148]	; (8009f50 <HttpDaemon::HandleGet()+0x14c>)
 8009eba:	f7ff fe42 	bl	8009b42 <strcmp>
 8009ebe:	b950      	cbnz	r0, 8009ed6 <HttpDaemon::HandleGet()+0xd2>
 8009ec0:	4b24      	ldr	r3, [pc, #144]	; (8009f54 <HttpDaemon::HandleGet()+0x150>)
 8009ec2:	681b      	ldr	r3, [r3, #0]
 8009ec4:	7bdb      	ldrb	r3, [r3, #15]
 8009ec6:	b31b      	cbz	r3, 8009f10 <HttpDaemon::HandleGet()+0x10c>
 8009ec8:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 8009ecc:	f104 0022 	add.w	r0, r4, #34	; 0x22
 8009ed0:	f000 f9fe 	bl	800a2d0 <remoteconfig::json_get_uptime(char*, unsigned short)>
 8009ed4:	e7aa      	b.n	8009e2c <HttpDaemon::HandleGet()+0x28>
 8009ed6:	4628      	mov	r0, r5
 8009ed8:	491f      	ldr	r1, [pc, #124]	; (8009f58 <HttpDaemon::HandleGet()+0x154>)
 8009eda:	f7ff fe32 	bl	8009b42 <strcmp>
 8009ede:	b930      	cbnz	r0, 8009eee <HttpDaemon::HandleGet()+0xea>
 8009ee0:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 8009ee4:	f104 0022 	add.w	r0, r4, #34	; 0x22
 8009ee8:	f000 fa02 	bl	800a2f0 <remoteconfig::json_get_display(char*, unsigned short)>
 8009eec:	e79e      	b.n	8009e2c <HttpDaemon::HandleGet()+0x28>
 8009eee:	4628      	mov	r0, r5
 8009ef0:	491a      	ldr	r1, [pc, #104]	; (8009f5c <HttpDaemon::HandleGet()+0x158>)
 8009ef2:	f7ff fe26 	bl	8009b42 <strcmp>
 8009ef6:	b930      	cbnz	r0, 8009f06 <HttpDaemon::HandleGet()+0x102>
 8009ef8:	f44f 61b4 	mov.w	r1, #1440	; 0x5a0
 8009efc:	f104 0022 	add.w	r0, r4, #34	; 0x22
 8009f00:	f000 fa06 	bl	800a310 <remoteconfig::json_get_directory(char*, unsigned short)>
 8009f04:	e792      	b.n	8009e2c <HttpDaemon::HandleGet()+0x28>
 8009f06:	4620      	mov	r0, r4
 8009f08:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009f0c:	f7ff bf3a 	b.w	8009d84 <HttpDaemon::HandleGetTxt()>
 8009f10:	f44f 70c8 	mov.w	r0, #400	; 0x190
 8009f14:	e78f      	b.n	8009e36 <HttpDaemon::HandleGet()+0x32>
 8009f16:	bf00      	nop
 8009f18:	08015f2c 	stmdaeq	r1, {r2, r3, r5, r8, r9, sl, fp, ip, lr}
 8009f1c:	08015f05 	stmdaeq	r1, {r0, r2, r8, r9, sl, fp, ip, lr}
 8009f20:	08016127 	stmdaeq	r1, {r0, r1, r2, r5, r8, sp, lr}
 8009f24:	08015f06 	stmdaeq	r1, {r1, r2, r8, r9, sl, fp, ip, lr}
 8009f28:	08015f11 	stmdaeq	r1, {r0, r4, r8, r9, sl, fp, ip, lr}
 8009f2c:	08016147 	stmdaeq	r1, {r0, r1, r2, r6, r8, sp, lr}
 8009f30:	08015f12 	stmdaeq	r1, {r1, r4, r8, r9, sl, fp, ip, lr}
 8009f34:	08015f1d 	stmdaeq	r1, {r0, r2, r3, r4, r8, r9, sl, fp, ip, lr}
 8009f38:	08015f27 	stmdaeq	r1, {r0, r1, r2, r5, r8, r9, sl, fp, ip, lr}
 8009f3c:	08016167 	stmdaeq	r1, {r0, r1, r2, r5, r6, r8, sp, lr}
 8009f40:	08015f1e 	stmdaeq	r1, {r1, r2, r3, r4, r8, r9, sl, fp, ip, lr}
 8009f44:	08016187 	stmdaeq	r1, {r0, r1, r2, r7, r8, sp, lr}
 8009f48:	08015f2e 	stmdaeq	r1, {r1, r2, r3, r5, r8, r9, sl, fp, ip, lr}
 8009f4c:	08015f33 	stmdaeq	r1, {r0, r1, r4, r5, r8, r9, sl, fp, ip, lr}
 8009f50:	08015f3b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r8, r9, sl, fp, ip, lr}
 8009f54:	20000114 	andcs	r0, r0, r4, lsl r1
 8009f58:	08015f42 	stmdaeq	r1, {r1, r6, r8, r9, sl, fp, ip, lr}
 8009f5c:	08015f4a 	stmdaeq	r1, {r1, r3, r6, r8, r9, sl, fp, ip, lr}

08009f60 <HttpDaemon::HandlePost(bool)>:
 8009f60:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009f62:	4604      	mov	r4, r0
 8009f64:	2900      	cmp	r1, #0
 8009f66:	f040 8090 	bne.w	800a08a <HttpDaemon::HandlePost(bool)+0x12a>
 8009f6a:	f890 3020 	ldrb.w	r3, [r0, #32]
 8009f6e:	2b00      	cmp	r3, #0
 8009f70:	d05d      	beq.n	800a02e <HttpDaemon::HandlePost(bool)+0xce>
 8009f72:	6845      	ldr	r5, [r0, #4]
 8009f74:	4948      	ldr	r1, [pc, #288]	; (800a098 <HttpDaemon::HandlePost(bool)+0x138>)
 8009f76:	4628      	mov	r0, r5
 8009f78:	f7ff fde3 	bl	8009b42 <strcmp>
 8009f7c:	2800      	cmp	r0, #0
 8009f7e:	bf0c      	ite	eq
 8009f80:	2301      	moveq	r3, #1
 8009f82:	2300      	movne	r3, #0
 8009f84:	f884 3021 	strb.w	r3, [r4, #33]	; 0x21
 8009f88:	d055      	beq.n	800a036 <HttpDaemon::HandlePost(bool)+0xd6>
 8009f8a:	4628      	mov	r0, r5
 8009f8c:	4943      	ldr	r1, [pc, #268]	; (800a09c <HttpDaemon::HandlePost(bool)+0x13c>)
 8009f8e:	f7ff fdd8 	bl	8009b42 <strcmp>
 8009f92:	2800      	cmp	r0, #0
 8009f94:	d04f      	beq.n	800a036 <HttpDaemon::HandlePost(bool)+0xd6>
 8009f96:	f44f 70ca 	mov.w	r0, #404	; 0x194
 8009f9a:	e04a      	b.n	800a032 <HttpDaemon::HandlePost(bool)+0xd2>
 8009f9c:	4940      	ldr	r1, [pc, #256]	; (800a0a0 <HttpDaemon::HandlePost(bool)+0x140>)
 8009f9e:	68a0      	ldr	r0, [r4, #8]
 8009fa0:	f10d 0207 	add.w	r2, sp, #7
 8009fa4:	f008 fe0f 	bl	8012bc6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8009fa8:	b9e8      	cbnz	r0, 8009fe6 <HttpDaemon::HandlePost(bool)+0x86>
 8009faa:	f89d 6007 	ldrb.w	r6, [sp, #7]
 8009fae:	4b3d      	ldr	r3, [pc, #244]	; (800a0a4 <HttpDaemon::HandlePost(bool)+0x144>)
 8009fb0:	fab6 f186 	clz	r1, r6
 8009fb4:	681d      	ldr	r5, [r3, #0]
 8009fb6:	0949      	lsrs	r1, r1, #5
 8009fb8:	69a8      	ldr	r0, [r5, #24]
 8009fba:	b138      	cbz	r0, 8009fcc <HttpDaemon::HandlePost(bool)+0x6c>
 8009fbc:	6803      	ldr	r3, [r0, #0]
 8009fbe:	7429      	strb	r1, [r5, #16]
 8009fc0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009fc2:	4798      	blx	r3
 8009fc4:	b116      	cbz	r6, 8009fcc <HttpDaemon::HandlePost(bool)+0x6c>
 8009fc6:	4b38      	ldr	r3, [pc, #224]	; (800a0a8 <HttpDaemon::HandlePost(bool)+0x148>)
 8009fc8:	681b      	ldr	r3, [r3, #0]
 8009fca:	606b      	str	r3, [r5, #4]
 8009fcc:	4620      	mov	r0, r4
 8009fce:	4b37      	ldr	r3, [pc, #220]	; (800a0ac <HttpDaemon::HandlePost(bool)+0x14c>)
 8009fd0:	f240 519f 	movw	r1, #1439	; 0x59f
 8009fd4:	4a36      	ldr	r2, [pc, #216]	; (800a0b0 <HttpDaemon::HandlePost(bool)+0x150>)
 8009fd6:	f840 3b22 	str.w	r3, [r0], #34
 8009fda:	f7fe ff8f 	bl	8008efc <snprintf>
 8009fde:	f8a4 05c2 	strh.w	r0, [r4, #1474]	; 0x5c2
 8009fe2:	20c8      	movs	r0, #200	; 0xc8
 8009fe4:	e025      	b.n	800a032 <HttpDaemon::HandlePost(bool)+0xd2>
 8009fe6:	4933      	ldr	r1, [pc, #204]	; (800a0b4 <HttpDaemon::HandlePost(bool)+0x154>)
 8009fe8:	68a0      	ldr	r0, [r4, #8]
 8009fea:	f10d 0207 	add.w	r2, sp, #7
 8009fee:	f008 fdea 	bl	8012bc6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8009ff2:	b9e0      	cbnz	r0, 800a02e <HttpDaemon::HandlePost(bool)+0xce>
 8009ff4:	4b30      	ldr	r3, [pc, #192]	; (800a0b8 <HttpDaemon::HandlePost(bool)+0x158>)
 8009ff6:	6818      	ldr	r0, [r3, #0]
 8009ff8:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8009ffc:	b11b      	cbz	r3, 800a006 <HttpDaemon::HandlePost(bool)+0xa6>
 8009ffe:	2104      	movs	r1, #4
 800a000:	f009 f9e2 	bl	80133c8 <LedBlink::SetMode(ledblink::Mode)>
 800a004:	e7e2      	b.n	8009fcc <HttpDaemon::HandlePost(bool)+0x6c>
 800a006:	2102      	movs	r1, #2
 800a008:	e7fa      	b.n	800a000 <HttpDaemon::HandlePost(bool)+0xa0>
 800a00a:	4b2c      	ldr	r3, [pc, #176]	; (800a0bc <HttpDaemon::HandlePost(bool)+0x15c>)
 800a00c:	2001      	movs	r0, #1
 800a00e:	781d      	ldrb	r5, [r3, #0]
 800a010:	f7ff fdbe 	bl	8009b90 <PropertiesConfig::EnableJSON(bool)>
 800a014:	4b2a      	ldr	r3, [pc, #168]	; (800a0c0 <HttpDaemon::HandlePost(bool)+0x160>)
 800a016:	f8b4 25c4 	ldrh.w	r2, [r4, #1476]	; 0x5c4
 800a01a:	6818      	ldr	r0, [r3, #0]
 800a01c:	68a1      	ldr	r1, [r4, #8]
 800a01e:	f005 0501 	and.w	r5, r5, #1
 800a022:	f7ff fa23 	bl	800946c <RemoteConfig::HandleSet(void*, unsigned int)>
 800a026:	4628      	mov	r0, r5
 800a028:	f7ff fdb2 	bl	8009b90 <PropertiesConfig::EnableJSON(bool)>
 800a02c:	e7ce      	b.n	8009fcc <HttpDaemon::HandlePost(bool)+0x6c>
 800a02e:	f44f 70c8 	mov.w	r0, #400	; 0x190
 800a032:	b002      	add	sp, #8
 800a034:	bd70      	pop	{r4, r5, r6, pc}
 800a036:	f8b4 35c6 	ldrh.w	r3, [r4, #1478]	; 0x5c6
 800a03a:	6962      	ldr	r2, [r4, #20]
 800a03c:	429a      	cmp	r2, r3
 800a03e:	dbd0      	blt.n	8009fe2 <HttpDaemon::HandlePost(bool)+0x82>
 800a040:	f8b4 35c4 	ldrh.w	r3, [r4, #1476]	; 0x5c4
 800a044:	2b00      	cmp	r3, #0
 800a046:	d0cc      	beq.n	8009fe2 <HttpDaemon::HandlePost(bool)+0x82>
 800a048:	f894 3021 	ldrb.w	r3, [r4, #33]	; 0x21
 800a04c:	2b00      	cmp	r3, #0
 800a04e:	d0dc      	beq.n	800a00a <HttpDaemon::HandlePost(bool)+0xaa>
 800a050:	2201      	movs	r2, #1
 800a052:	f8b4 15c4 	ldrh.w	r1, [r4, #1476]	; 0x5c4
 800a056:	68a0      	ldr	r0, [r4, #8]
 800a058:	f008 fb2c 	bl	80126b4 <properties::convert_json_file(char*, unsigned short, bool)>
 800a05c:	2800      	cmp	r0, #0
 800a05e:	dde6      	ble.n	800a02e <HttpDaemon::HandlePost(bool)+0xce>
 800a060:	4918      	ldr	r1, [pc, #96]	; (800a0c4 <HttpDaemon::HandlePost(bool)+0x164>)
 800a062:	68a0      	ldr	r0, [r4, #8]
 800a064:	f10d 0207 	add.w	r2, sp, #7
 800a068:	f008 fdad 	bl	8012bc6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800a06c:	2800      	cmp	r0, #0
 800a06e:	d195      	bne.n	8009f9c <HttpDaemon::HandlePost(bool)+0x3c>
 800a070:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800a074:	2b00      	cmp	r3, #0
 800a076:	d0a9      	beq.n	8009fcc <HttpDaemon::HandlePost(bool)+0x6c>
 800a078:	4b11      	ldr	r3, [pc, #68]	; (800a0c0 <HttpDaemon::HandlePost(bool)+0x160>)
 800a07a:	681b      	ldr	r3, [r3, #0]
 800a07c:	7b9b      	ldrb	r3, [r3, #14]
 800a07e:	2b00      	cmp	r3, #0
 800a080:	d0d5      	beq.n	800a02e <HttpDaemon::HandlePost(bool)+0xce>
 800a082:	4b11      	ldr	r3, [pc, #68]	; (800a0c8 <HttpDaemon::HandlePost(bool)+0x168>)
 800a084:	6818      	ldr	r0, [r3, #0]
 800a086:	f009 fa41 	bl	801350c <Hardware::Reboot()>
 800a08a:	68c3      	ldr	r3, [r0, #12]
 800a08c:	6083      	str	r3, [r0, #8]
 800a08e:	6943      	ldr	r3, [r0, #20]
 800a090:	f8a0 35c4 	strh.w	r3, [r0, #1476]	; 0x5c4
 800a094:	e7d8      	b.n	800a048 <HttpDaemon::HandlePost(bool)+0xe8>
 800a096:	bf00      	nop
 800a098:	08015f54 	stmdaeq	r1, {r2, r4, r6, r8, r9, sl, fp, ip, lr}
 800a09c:	08015ef0 	stmdaeq	r1, {r4, r5, r6, r7, r9, sl, fp, ip, lr}
 800a0a0:	08015f42 	stmdaeq	r1, {r1, r6, r8, r9, sl, fp, ip, lr}
 800a0a4:	20013ce4 	andcs	r3, r1, r4, ror #25
 800a0a8:	20013df4 	strdcs	r3, [r1], -r4
 800a0ac:	08016127 	stmdaeq	r1, {r0, r1, r2, r5, r8, sp, lr}
 800a0b0:	08015f71 	stmdaeq	r1, {r0, r4, r5, r6, r8, r9, sl, fp, ip, lr}
 800a0b4:	08015f68 	stmdaeq	r1, {r3, r5, r6, r8, r9, sl, fp, ip, lr}
 800a0b8:	20013dd0 	ldrdcs	r3, [r1], -r0
 800a0bc:	20013ce0 	andcs	r3, r1, r0, ror #25
 800a0c0:	20000114 	andcs	r0, r0, r4, lsl r1
 800a0c4:	08015f61 	stmdaeq	r1, {r0, r5, r6, r8, r9, sl, fp, ip, lr}
 800a0c8:	20013dd4 	ldrdcs	r3, [r1], -r4

0800a0cc <HttpDaemon::Run()>:
 800a0cc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a0ce:	4e4a      	ldr	r6, [pc, #296]	; (800a1f8 <HttpDaemon::Run()+0x12c>)
 800a0d0:	4604      	mov	r4, r0
 800a0d2:	6901      	ldr	r1, [r0, #16]
 800a0d4:	f100 020c 	add.w	r2, r0, #12
 800a0d8:	b085      	sub	sp, #20
 800a0da:	6830      	ldr	r0, [r6, #0]
 800a0dc:	f006 fec9 	bl	8010e72 <Network::TcpRead(int, unsigned char const**)>
 800a0e0:	6160      	str	r0, [r4, #20]
 800a0e2:	2800      	cmp	r0, #0
 800a0e4:	d061      	beq.n	800a1aa <HttpDaemon::Run()+0xde>
 800a0e6:	69a3      	ldr	r3, [r4, #24]
 800a0e8:	f5b3 7f02 	cmp.w	r3, #520	; 0x208
 800a0ec:	d15f      	bne.n	800a1ae <HttpDaemon::Run()+0xe2>
 800a0ee:	4620      	mov	r0, r4
 800a0f0:	f7ff fe10 	bl	8009d14 <HttpDaemon::ParseRequest()>
 800a0f4:	28c8      	cmp	r0, #200	; 0xc8
 800a0f6:	61a0      	str	r0, [r4, #24]
 800a0f8:	d106      	bne.n	800a108 <HttpDaemon::Run()+0x3c>
 800a0fa:	69e3      	ldr	r3, [r4, #28]
 800a0fc:	2b00      	cmp	r3, #0
 800a0fe:	d147      	bne.n	800a190 <HttpDaemon::Run()+0xc4>
 800a100:	4620      	mov	r0, r4
 800a102:	f7ff fe7f 	bl	8009e04 <HttpDaemon::HandleGet()>
 800a106:	61a0      	str	r0, [r4, #24]
 800a108:	69a3      	ldr	r3, [r4, #24]
 800a10a:	f104 0722 	add.w	r7, r4, #34	; 0x22
 800a10e:	2bc8      	cmp	r3, #200	; 0xc8
 800a110:	d06f      	beq.n	800a1f2 <HttpDaemon::Run()+0x126>
 800a112:	f5b3 7fcf 	cmp.w	r3, #414	; 0x19e
 800a116:	d062      	beq.n	800a1de <HttpDaemon::Run()+0x112>
 800a118:	dc52      	bgt.n	800a1c0 <HttpDaemon::Run()+0xf4>
 800a11a:	f5b3 7fca 	cmp.w	r3, #404	; 0x194
 800a11e:	d060      	beq.n	800a1e2 <HttpDaemon::Run()+0x116>
 800a120:	f240 129d 	movw	r2, #413	; 0x19d
 800a124:	4293      	cmp	r3, r2
 800a126:	d05e      	beq.n	800a1e6 <HttpDaemon::Run()+0x11a>
 800a128:	4d34      	ldr	r5, [pc, #208]	; (800a1fc <HttpDaemon::Run()+0x130>)
 800a12a:	4a35      	ldr	r2, [pc, #212]	; (800a200 <HttpDaemon::Run()+0x134>)
 800a12c:	f5b3 7fc8 	cmp.w	r3, #400	; 0x190
 800a130:	bf18      	it	ne
 800a132:	4615      	movne	r5, r2
 800a134:	4a33      	ldr	r2, [pc, #204]	; (800a204 <HttpDaemon::Run()+0x138>)
 800a136:	f240 519f 	movw	r1, #1439	; 0x59f
 800a13a:	6022      	str	r2, [r4, #0]
 800a13c:	4638      	mov	r0, r7
 800a13e:	e9cd 5500 	strd	r5, r5, [sp]
 800a142:	4a31      	ldr	r2, [pc, #196]	; (800a208 <HttpDaemon::Run()+0x13c>)
 800a144:	f7fe feda 	bl	8008efc <snprintf>
 800a148:	f8a4 05c2 	strh.w	r0, [r4, #1474]	; 0x5c2
 800a14c:	f8b4 35c2 	ldrh.w	r3, [r4, #1474]	; 0x5c2
 800a150:	f240 519f 	movw	r1, #1439	; 0x59f
 800a154:	9303      	str	r3, [sp, #12]
 800a156:	6823      	ldr	r3, [r4, #0]
 800a158:	4a2c      	ldr	r2, [pc, #176]	; (800a20c <HttpDaemon::Run()+0x140>)
 800a15a:	9302      	str	r3, [sp, #8]
 800a15c:	4b2c      	ldr	r3, [pc, #176]	; (800a210 <HttpDaemon::Run()+0x144>)
 800a15e:	68e0      	ldr	r0, [r4, #12]
 800a160:	e9cd 5300 	strd	r5, r3, [sp]
 800a164:	69a3      	ldr	r3, [r4, #24]
 800a166:	f7fe fec9 	bl	8008efc <snprintf>
 800a16a:	e9d4 2103 	ldrd	r2, r1, [r4, #12]
 800a16e:	b283      	uxth	r3, r0
 800a170:	6830      	ldr	r0, [r6, #0]
 800a172:	f006 fe82 	bl	8010e7a <Network::TcpWrite(int, unsigned char const*, unsigned short)>
 800a176:	463a      	mov	r2, r7
 800a178:	f8b4 35c2 	ldrh.w	r3, [r4, #1474]	; 0x5c2
 800a17c:	6921      	ldr	r1, [r4, #16]
 800a17e:	6830      	ldr	r0, [r6, #0]
 800a180:	f006 fe7b 	bl	8010e7a <Network::TcpWrite(int, unsigned char const*, unsigned short)>
 800a184:	f44f 7202 	mov.w	r2, #520	; 0x208
 800a188:	2302      	movs	r3, #2
 800a18a:	e9c4 2306 	strd	r2, r3, [r4, #24]
 800a18e:	e00c      	b.n	800a1aa <HttpDaemon::Run()+0xde>
 800a190:	2b01      	cmp	r3, #1
 800a192:	d1b9      	bne.n	800a108 <HttpDaemon::Run()+0x3c>
 800a194:	2100      	movs	r1, #0
 800a196:	4620      	mov	r0, r4
 800a198:	f7ff fee2 	bl	8009f60 <HttpDaemon::HandlePost(bool)>
 800a19c:	28c8      	cmp	r0, #200	; 0xc8
 800a19e:	61a0      	str	r0, [r4, #24]
 800a1a0:	d1b2      	bne.n	800a108 <HttpDaemon::Run()+0x3c>
 800a1a2:	f8b4 35c4 	ldrh.w	r3, [r4, #1476]	; 0x5c4
 800a1a6:	2b00      	cmp	r3, #0
 800a1a8:	d1ae      	bne.n	800a108 <HttpDaemon::Run()+0x3c>
 800a1aa:	b005      	add	sp, #20
 800a1ac:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a1ae:	2bc8      	cmp	r3, #200	; 0xc8
 800a1b0:	d1aa      	bne.n	800a108 <HttpDaemon::Run()+0x3c>
 800a1b2:	69e1      	ldr	r1, [r4, #28]
 800a1b4:	2901      	cmp	r1, #1
 800a1b6:	d1a7      	bne.n	800a108 <HttpDaemon::Run()+0x3c>
 800a1b8:	4620      	mov	r0, r4
 800a1ba:	f7ff fed1 	bl	8009f60 <HttpDaemon::HandlePost(bool)>
 800a1be:	e7a2      	b.n	800a106 <HttpDaemon::Run()+0x3a>
 800a1c0:	f240 12f5 	movw	r2, #501	; 0x1f5
 800a1c4:	4293      	cmp	r3, r2
 800a1c6:	d010      	beq.n	800a1ea <HttpDaemon::Run()+0x11e>
 800a1c8:	f240 12f9 	movw	r2, #505	; 0x1f9
 800a1cc:	4293      	cmp	r3, r2
 800a1ce:	d00e      	beq.n	800a1ee <HttpDaemon::Run()+0x122>
 800a1d0:	4d10      	ldr	r5, [pc, #64]	; (800a214 <HttpDaemon::Run()+0x148>)
 800a1d2:	4a0b      	ldr	r2, [pc, #44]	; (800a200 <HttpDaemon::Run()+0x134>)
 800a1d4:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800a1d8:	bf18      	it	ne
 800a1da:	4615      	movne	r5, r2
 800a1dc:	e7aa      	b.n	800a134 <HttpDaemon::Run()+0x68>
 800a1de:	4d0e      	ldr	r5, [pc, #56]	; (800a218 <HttpDaemon::Run()+0x14c>)
 800a1e0:	e7a8      	b.n	800a134 <HttpDaemon::Run()+0x68>
 800a1e2:	4d0e      	ldr	r5, [pc, #56]	; (800a21c <HttpDaemon::Run()+0x150>)
 800a1e4:	e7a6      	b.n	800a134 <HttpDaemon::Run()+0x68>
 800a1e6:	4d0e      	ldr	r5, [pc, #56]	; (800a220 <HttpDaemon::Run()+0x154>)
 800a1e8:	e7a4      	b.n	800a134 <HttpDaemon::Run()+0x68>
 800a1ea:	4d0e      	ldr	r5, [pc, #56]	; (800a224 <HttpDaemon::Run()+0x158>)
 800a1ec:	e7a2      	b.n	800a134 <HttpDaemon::Run()+0x68>
 800a1ee:	4d0e      	ldr	r5, [pc, #56]	; (800a228 <HttpDaemon::Run()+0x15c>)
 800a1f0:	e7a0      	b.n	800a134 <HttpDaemon::Run()+0x68>
 800a1f2:	4d0e      	ldr	r5, [pc, #56]	; (800a22c <HttpDaemon::Run()+0x160>)
 800a1f4:	e7aa      	b.n	800a14c <HttpDaemon::Run()+0x80>
 800a1f6:	bf00      	nop
 800a1f8:	200136ac 	andcs	r3, r1, ip, lsr #13
 800a1fc:	08016032 	stmdaeq	r1, {r1, r4, r5, sp, lr}
 800a200:	0801603e 	stmdaeq	r1, {r1, r2, r3, r4, r5, sp, lr}
 800a204:	08016127 	stmdaeq	r1, {r0, r1, r2, r5, r8, sp, lr}
 800a208:	08016065 	stmdaeq	r1, {r0, r2, r5, r6, sp, lr}
 800a20c:	080160c0 	stmdaeq	r1, {r6, r7, sp, lr}
 800a210:	08016118 	stmdaeq	r1, {r3, r4, r8, sp, lr}
 800a214:	0801604c 	stmdaeq	r1, {r2, r3, r6, sp, lr}
 800a218:	08015ff0 	stmdaeq	r1, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
 800a21c:	08015fe6 	stmdaeq	r1, {r1, r2, r5, r6, r7, r8, r9, sl, fp, ip, lr}
 800a220:	08015fcd 	stmdaeq	r1, {r0, r2, r3, r6, r7, r8, r9, sl, fp, ip, lr}
 800a224:	0801601b 	stmdaeq	r1, {r0, r1, r3, r4, sp, lr}
 800a228:	08016005 	stmdaeq	r1, {r0, r2, sp, lr}
 800a22c:	08016062 	stmdaeq	r1, {r1, r5, r6, sp, lr}

0800a230 <remoteconfig::json_get_list(char*, unsigned short)>:
 800a230:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a234:	4b14      	ldr	r3, [pc, #80]	; (800a288 <remoteconfig::json_get_list(char*, unsigned short)+0x58>)
 800a236:	f8df 8054 	ldr.w	r8, [pc, #84]	; 800a28c <remoteconfig::json_get_list(char*, unsigned short)+0x5c>
 800a23a:	681b      	ldr	r3, [r3, #0]
 800a23c:	b088      	sub	sp, #32
 800a23e:	4605      	mov	r5, r0
 800a240:	f8d8 0000 	ldr.w	r0, [r8]
 800a244:	691c      	ldr	r4, [r3, #16]
 800a246:	460e      	mov	r6, r1
 800a248:	f7fe fff4 	bl	8009234 <RemoteConfig::GetStringNode() const>
 800a24c:	4607      	mov	r7, r0
 800a24e:	f8d8 0000 	ldr.w	r0, [r8]
 800a252:	f7fe fffb 	bl	800924c <RemoteConfig::GetStringOutput() const>
 800a256:	4b0e      	ldr	r3, [pc, #56]	; (800a290 <remoteconfig::json_get_list(char*, unsigned short)+0x60>)
 800a258:	4631      	mov	r1, r6
 800a25a:	7a1a      	ldrb	r2, [r3, #8]
 800a25c:	3309      	adds	r3, #9
 800a25e:	9303      	str	r3, [sp, #12]
 800a260:	0e23      	lsrs	r3, r4, #24
 800a262:	9302      	str	r3, [sp, #8]
 800a264:	f3c4 4307 	ubfx	r3, r4, #16, #8
 800a268:	9301      	str	r3, [sp, #4]
 800a26a:	f3c4 2307 	ubfx	r3, r4, #8, #8
 800a26e:	e9cd 0205 	strd	r0, r2, [sp, #20]
 800a272:	9300      	str	r3, [sp, #0]
 800a274:	4628      	mov	r0, r5
 800a276:	4a07      	ldr	r2, [pc, #28]	; (800a294 <remoteconfig::json_get_list(char*, unsigned short)+0x64>)
 800a278:	9704      	str	r7, [sp, #16]
 800a27a:	b2e3      	uxtb	r3, r4
 800a27c:	f7fe fe3e 	bl	8008efc <snprintf>
 800a280:	b280      	uxth	r0, r0
 800a282:	b008      	add	sp, #32
 800a284:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a288:	200136ac 	andcs	r3, r1, ip, lsr #13
 800a28c:	20000114 	andcs	r0, r0, r4, lsl r1
 800a290:	200000f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 800a294:	08016201 	stmdaeq	r1, {r0, r9, sp, lr}

0800a298 <remoteconfig::json_get_version(char*, unsigned short)>:
 800a298:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800a29a:	2208      	movs	r2, #8
 800a29c:	4b09      	ldr	r3, [pc, #36]	; (800a2c4 <remoteconfig::json_get_version(char*, unsigned short)+0x2c>)
 800a29e:	9204      	str	r2, [sp, #16]
 800a2a0:	f1a3 020b 	sub.w	r2, r3, #11
 800a2a4:	9203      	str	r2, [sp, #12]
 800a2a6:	220b      	movs	r2, #11
 800a2a8:	9202      	str	r2, [sp, #8]
 800a2aa:	4a07      	ldr	r2, [pc, #28]	; (800a2c8 <remoteconfig::json_get_version(char*, unsigned short)+0x30>)
 800a2ac:	9305      	str	r3, [sp, #20]
 800a2ae:	3b0e      	subs	r3, #14
 800a2b0:	9201      	str	r2, [sp, #4]
 800a2b2:	9300      	str	r3, [sp, #0]
 800a2b4:	4a05      	ldr	r2, [pc, #20]	; (800a2cc <remoteconfig::json_get_version(char*, unsigned short)+0x34>)
 800a2b6:	2303      	movs	r3, #3
 800a2b8:	f7fe fe20 	bl	8008efc <snprintf>
 800a2bc:	b280      	uxth	r0, r0
 800a2be:	b007      	add	sp, #28
 800a2c0:	f85d fb04 	ldr.w	pc, [sp], #4
 800a2c4:	20013d82 	andcs	r3, r1, r2, lsl #27
 800a2c8:	08016118 	stmdaeq	r1, {r3, r4, r8, sp, lr}
 800a2cc:	08016260 	stmdaeq	r1, {r5, r6, r9, sp, lr}

0800a2d0 <remoteconfig::json_get_uptime(char*, unsigned short)>:
 800a2d0:	b508      	push	{r3, lr}
 800a2d2:	4b05      	ldr	r3, [pc, #20]	; (800a2e8 <remoteconfig::json_get_uptime(char*, unsigned short)+0x18>)
 800a2d4:	681a      	ldr	r2, [r3, #0]
 800a2d6:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800a2da:	fbb2 f3f3 	udiv	r3, r2, r3
 800a2de:	4a03      	ldr	r2, [pc, #12]	; (800a2ec <remoteconfig::json_get_uptime(char*, unsigned short)+0x1c>)
 800a2e0:	f7fe fe0c 	bl	8008efc <snprintf>
 800a2e4:	b280      	uxth	r0, r0
 800a2e6:	bd08      	pop	{r3, pc}
 800a2e8:	20013df4 	strdcs	r3, [r1], -r4
 800a2ec:	080162a6 	stmdaeq	r1, {r1, r2, r5, r7, r9, sp, lr}

0800a2f0 <remoteconfig::json_get_display(char*, unsigned short)>:
 800a2f0:	b508      	push	{r3, lr}
 800a2f2:	4b05      	ldr	r3, [pc, #20]	; (800a308 <remoteconfig::json_get_display(char*, unsigned short)+0x18>)
 800a2f4:	4a05      	ldr	r2, [pc, #20]	; (800a30c <remoteconfig::json_get_display(char*, unsigned short)+0x1c>)
 800a2f6:	681b      	ldr	r3, [r3, #0]
 800a2f8:	7c1b      	ldrb	r3, [r3, #16]
 800a2fa:	f083 0301 	eor.w	r3, r3, #1
 800a2fe:	f7fe fdfd 	bl	8008efc <snprintf>
 800a302:	b280      	uxth	r0, r0
 800a304:	bd08      	pop	{r3, pc}
 800a306:	bf00      	nop
 800a308:	20013ce4 	andcs	r3, r1, r4, ror #25
 800a30c:	080162b5 	stmdaeq	r1, {r0, r2, r4, r5, r7, r9, sp, lr}

0800a310 <remoteconfig::json_get_directory(char*, unsigned short)>:
 800a310:	b508      	push	{r3, lr}
 800a312:	4a02      	ldr	r2, [pc, #8]	; (800a31c <remoteconfig::json_get_directory(char*, unsigned short)+0xc>)
 800a314:	f7fe fdf2 	bl	8008efc <snprintf>
 800a318:	b280      	uxth	r0, r0
 800a31a:	bd08      	pop	{r3, pc}
 800a31c:	080162c4 	stmdaeq	r1, {r2, r6, r7, r9, sp, lr}

0800a320 <get_file_content(char const*, char*)>:
 800a320:	2300      	movs	r3, #0
 800a322:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a324:	4a10      	ldr	r2, [pc, #64]	; (800a368 <get_file_content(char const*, char*)+0x48>)
 800a326:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 800a32a:	1e46      	subs	r6, r0, #1
 800a32c:	3c01      	subs	r4, #1
 800a32e:	f816 7f01 	ldrb.w	r7, [r6, #1]!
 800a332:	f814 5f01 	ldrb.w	r5, [r4, #1]!
 800a336:	42bd      	cmp	r5, r7
 800a338:	d10f      	bne.n	800a35a <get_file_content(char const*, char*)+0x3a>
 800a33a:	2d00      	cmp	r5, #0
 800a33c:	d1f7      	bne.n	800a32e <get_file_content(char const*, char*)+0xe>
 800a33e:	4608      	mov	r0, r1
 800a340:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800a344:	685b      	ldr	r3, [r3, #4]
 800a346:	3b01      	subs	r3, #1
 800a348:	f813 2f01 	ldrb.w	r2, [r3, #1]!
 800a34c:	f800 2b01 	strb.w	r2, [r0], #1
 800a350:	2a00      	cmp	r2, #0
 800a352:	d1f9      	bne.n	800a348 <get_file_content(char const*, char*)+0x28>
 800a354:	1a40      	subs	r0, r0, r1
 800a356:	3801      	subs	r0, #1
 800a358:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a35a:	3301      	adds	r3, #1
 800a35c:	2b03      	cmp	r3, #3
 800a35e:	d1e2      	bne.n	800a326 <get_file_content(char const*, char*)+0x6>
 800a360:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800a364:	e7f8      	b.n	800a358 <get_file_content(char const*, char*)+0x38>
 800a366:	bf00      	nop
 800a368:	08016604 	stmdaeq	r1, {r2, r9, sl, sp, lr}

0800a36c <e131::universe_to_multicast_ip(unsigned short)>:
 800a36c:	b513      	push	{r0, r1, r4, lr}
 800a36e:	4604      	mov	r4, r0
 800a370:	a901      	add	r1, sp, #4
 800a372:	4806      	ldr	r0, [pc, #24]	; (800a38c <e131::universe_to_multicast_ip(unsigned short)+0x20>)
 800a374:	f009 f954 	bl	8013620 <inet_aton>
 800a378:	9801      	ldr	r0, [sp, #4]
 800a37a:	ea40 6004 	orr.w	r0, r0, r4, lsl #24
 800a37e:	0224      	lsls	r4, r4, #8
 800a380:	f404 047f 	and.w	r4, r4, #16711680	; 0xff0000
 800a384:	4320      	orrs	r0, r4
 800a386:	b002      	add	sp, #8
 800a388:	bd10      	pop	{r4, pc}
 800a38a:	bf00      	nop
 800a38c:	08016b46 	stmdaeq	r1, {r1, r2, r6, r8, r9, fp, sp, lr}

0800a390 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]>:
 800a390:	f240 6304 	movw	r3, #1540	; 0x604
 800a394:	fb03 0101 	mla	r1, r3, r1, r0
 800a398:	2300      	movs	r3, #0
 800a39a:	b510      	push	{r4, lr}
 800a39c:	4293      	cmp	r3, r2
 800a39e:	d00a      	beq.n	800a3b6 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]+0x26>
 800a3a0:	f811 4b01 	ldrb.w	r4, [r1], #1
 800a3a4:	3301      	adds	r3, #1
 800a3a6:	f891 01ff 	ldrb.w	r0, [r1, #511]	; 0x1ff
 800a3aa:	42a0      	cmp	r0, r4
 800a3ac:	bf38      	it	cc
 800a3ae:	4620      	movcc	r0, r4
 800a3b0:	f881 03ff 	strb.w	r0, [r1, #1023]	; 0x3ff
 800a3b4:	e7f2      	b.n	800a39c <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]+0xc>
 800a3b6:	bd10      	pop	{r4, pc}

0800a3b8 <memset.constprop.0.isra.0>:
 800a3b8:	2300      	movs	r3, #0
 800a3ba:	4401      	add	r1, r0
 800a3bc:	4288      	cmp	r0, r1
 800a3be:	d002      	beq.n	800a3c6 <memset.constprop.0.isra.0+0xe>
 800a3c0:	f800 3b01 	strb.w	r3, [r0], #1
 800a3c4:	e7fa      	b.n	800a3bc <memset.constprop.0.isra.0+0x4>
 800a3c6:	4770      	bx	lr

0800a3c8 <memcpy.isra.0>:
 800a3c8:	3801      	subs	r0, #1
 800a3ca:	440a      	add	r2, r1
 800a3cc:	4291      	cmp	r1, r2
 800a3ce:	d004      	beq.n	800a3da <memcpy.isra.0+0x12>
 800a3d0:	f811 3b01 	ldrb.w	r3, [r1], #1
 800a3d4:	f800 3f01 	strb.w	r3, [r0, #1]!
 800a3d8:	e7f8      	b.n	800a3cc <memcpy.isra.0+0x4>
 800a3da:	4770      	bx	lr

0800a3dc <lightset::Data::Get()>:
 800a3dc:	4b03      	ldr	r3, [pc, #12]	; (800a3ec <lightset::Data::Get()+0x10>)
 800a3de:	4804      	ldr	r0, [pc, #16]	; (800a3f0 <lightset::Data::Get()+0x14>)
 800a3e0:	681a      	ldr	r2, [r3, #0]
 800a3e2:	07d2      	lsls	r2, r2, #31
 800a3e4:	bf5c      	itt	pl
 800a3e6:	2201      	movpl	r2, #1
 800a3e8:	601a      	strpl	r2, [r3, #0]
 800a3ea:	4770      	bx	lr
 800a3ec:	20000118 	andcs	r0, r0, r8, lsl r1
 800a3f0:	2000011c 	andcs	r0, r0, ip, lsl r1

0800a3f4 <lightset::Data::SetSourceA(unsigned int, unsigned char const*, unsigned int)>:
 800a3f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a3f8:	4615      	mov	r5, r2
 800a3fa:	460f      	mov	r7, r1
 800a3fc:	4604      	mov	r4, r0
 800a3fe:	f7ff ffed 	bl	800a3dc <lightset::Data::Get()>
 800a402:	4606      	mov	r6, r0
 800a404:	f240 6004 	movw	r0, #1540	; 0x604
 800a408:	4344      	muls	r4, r0
 800a40a:	eb06 0804 	add.w	r8, r6, r4
 800a40e:	462a      	mov	r2, r5
 800a410:	4639      	mov	r1, r7
 800a412:	4640      	mov	r0, r8
 800a414:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800a418:	f7ff ffd6 	bl	800a3c8 <memcpy.isra.0>
 800a41c:	462a      	mov	r2, r5
 800a41e:	4639      	mov	r1, r7
 800a420:	f8c8 5600 	str.w	r5, [r8, #1536]	; 0x600
 800a424:	1930      	adds	r0, r6, r4
 800a426:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800a42a:	f7ff bfcd 	b.w	800a3c8 <memcpy.isra.0>

0800a42e <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>:
 800a42e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a432:	4680      	mov	r8, r0
 800a434:	f240 6404 	movw	r4, #1540	; 0x604
 800a438:	4615      	mov	r5, r2
 800a43a:	460f      	mov	r7, r1
 800a43c:	4699      	mov	r9, r3
 800a43e:	f7ff ffcd 	bl	800a3dc <lightset::Data::Get()>
 800a442:	fb04 f408 	mul.w	r4, r4, r8
 800a446:	eb00 0a04 	add.w	sl, r0, r4
 800a44a:	4606      	mov	r6, r0
 800a44c:	462a      	mov	r2, r5
 800a44e:	4639      	mov	r1, r7
 800a450:	4650      	mov	r0, sl
 800a452:	f7ff ffb9 	bl	800a3c8 <memcpy.isra.0>
 800a456:	f8ca 5600 	str.w	r5, [sl, #1536]	; 0x600
 800a45a:	f1b9 0f00 	cmp.w	r9, #0
 800a45e:	d106      	bne.n	800a46e <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)+0x40>
 800a460:	462a      	mov	r2, r5
 800a462:	4641      	mov	r1, r8
 800a464:	4630      	mov	r0, r6
 800a466:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a46a:	f7ff bf91 	b.w	800a390 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]>
 800a46e:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800a472:	462a      	mov	r2, r5
 800a474:	4639      	mov	r1, r7
 800a476:	1930      	adds	r0, r6, r4
 800a478:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a47c:	f7ff bfa4 	b.w	800a3c8 <memcpy.isra.0>

0800a480 <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>:
 800a480:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800a484:	4616      	mov	r6, r2
 800a486:	4699      	mov	r9, r3
 800a488:	4680      	mov	r8, r0
 800a48a:	460f      	mov	r7, r1
 800a48c:	f7ff ffa6 	bl	800a3dc <lightset::Data::Get()>
 800a490:	f240 6404 	movw	r4, #1540	; 0x604
 800a494:	4605      	mov	r5, r0
 800a496:	fb04 f408 	mul.w	r4, r4, r8
 800a49a:	f504 7000 	add.w	r0, r4, #512	; 0x200
 800a49e:	4632      	mov	r2, r6
 800a4a0:	4639      	mov	r1, r7
 800a4a2:	4428      	add	r0, r5
 800a4a4:	f7ff ff90 	bl	800a3c8 <memcpy.isra.0>
 800a4a8:	192b      	adds	r3, r5, r4
 800a4aa:	f8c3 6600 	str.w	r6, [r3, #1536]	; 0x600
 800a4ae:	f1b9 0f00 	cmp.w	r9, #0
 800a4b2:	d106      	bne.n	800a4c2 <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)+0x42>
 800a4b4:	4632      	mov	r2, r6
 800a4b6:	4641      	mov	r1, r8
 800a4b8:	4628      	mov	r0, r5
 800a4ba:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800a4be:	f7ff bf67 	b.w	800a390 <lightset::Data::IMergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode) [clone .part.0]>
 800a4c2:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800a4c6:	4632      	mov	r2, r6
 800a4c8:	4639      	mov	r1, r7
 800a4ca:	1928      	adds	r0, r5, r4
 800a4cc:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800a4d0:	f7ff bf7a 	b.w	800a3c8 <memcpy.isra.0>

0800a4d4 <lightset::Data::IOutput(LightSet*, unsigned int) const>:
 800a4d4:	f240 6304 	movw	r3, #1540	; 0x604
 800a4d8:	b470      	push	{r4, r5, r6}
 800a4da:	4605      	mov	r5, r0
 800a4dc:	4608      	mov	r0, r1
 800a4de:	4353      	muls	r3, r2
 800a4e0:	4611      	mov	r1, r2
 800a4e2:	f503 6480 	add.w	r4, r3, #1024	; 0x400
 800a4e6:	18ea      	adds	r2, r5, r3
 800a4e8:	6803      	ldr	r3, [r0, #0]
 800a4ea:	691e      	ldr	r6, [r3, #16]
 800a4ec:	f8d2 3600 	ldr.w	r3, [r2, #1536]	; 0x600
 800a4f0:	46b4      	mov	ip, r6
 800a4f2:	192a      	adds	r2, r5, r4
 800a4f4:	bc70      	pop	{r4, r5, r6}
 800a4f6:	4760      	bx	ip

0800a4f8 <E131Bridge::Start()>:
 800a4f8:	6943      	ldr	r3, [r0, #20]
 800a4fa:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800a4fc:	4604      	mov	r4, r0
 800a4fe:	b35b      	cbz	r3, 800a558 <E131Bridge::Start()+0x60>
 800a500:	6983      	ldr	r3, [r0, #24]
 800a502:	b9cb      	cbnz	r3, 800a538 <E131Bridge::Start()+0x40>
 800a504:	a901      	add	r1, sp, #4
 800a506:	4818      	ldr	r0, [pc, #96]	; (800a568 <E131Bridge::Start()+0x70>)
 800a508:	f009 f88a 	bl	8013620 <inet_aton>
 800a50c:	9b01      	ldr	r3, [sp, #4]
 800a50e:	f240 207e 	movw	r0, #638	; 0x27e
 800a512:	f043 4356 	orr.w	r3, r3, #3590324224	; 0xd6000000
 800a516:	f443 037a 	orr.w	r3, r3, #16384000	; 0xfa0000
 800a51a:	6223      	str	r3, [r4, #32]
 800a51c:	f009 f87c 	bl	8013618 <operator new(unsigned int)>
 800a520:	61a0      	str	r0, [r4, #24]
 800a522:	4620      	mov	r0, r4
 800a524:	f000 fd8e 	bl	800b044 <E131Bridge::FillDataPacket()>
 800a528:	f44f 608f 	mov.w	r0, #1144	; 0x478
 800a52c:	f009 f874 	bl	8013618 <operator new(unsigned int)>
 800a530:	61e0      	str	r0, [r4, #28]
 800a532:	4620      	mov	r0, r4
 800a534:	f000 fcdc 	bl	800aef0 <E131Bridge::FillDiscoveryPacket()>
 800a538:	2500      	movs	r5, #0
 800a53a:	270c      	movs	r7, #12
 800a53c:	f204 7632 	addw	r6, r4, #1842	; 0x732
 800a540:	fb07 f305 	mul.w	r3, r7, r5
 800a544:	5cf3      	ldrb	r3, [r6, r3]
 800a546:	b123      	cbz	r3, 800a552 <E131Bridge::Start()+0x5a>
 800a548:	6960      	ldr	r0, [r4, #20]
 800a54a:	4629      	mov	r1, r5
 800a54c:	6803      	ldr	r3, [r0, #0]
 800a54e:	689b      	ldr	r3, [r3, #8]
 800a550:	4798      	blx	r3
 800a552:	3501      	adds	r5, #1
 800a554:	2d08      	cmp	r5, #8
 800a556:	d1f3      	bne.n	800a540 <E131Bridge::Start()+0x48>
 800a558:	2102      	movs	r1, #2
 800a55a:	4b04      	ldr	r3, [pc, #16]	; (800a56c <E131Bridge::Start()+0x74>)
 800a55c:	6818      	ldr	r0, [r3, #0]
 800a55e:	b003      	add	sp, #12
 800a560:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800a564:	f008 bf30 	b.w	80133c8 <LedBlink::SetMode(ledblink::Mode)>
 800a568:	08016b46 	stmdaeq	r1, {r1, r2, r6, r8, r9, fp, sp, lr}
 800a56c:	20013dd0 	ldrdcs	r3, [r1], -r0

0800a570 <E131Bridge::Stop()>:
 800a570:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a574:	2500      	movs	r5, #0
 800a576:	2301      	movs	r3, #1
 800a578:	4604      	mov	r4, r0
 800a57a:	f240 6804 	movw	r8, #1540	; 0x604
 800a57e:	462e      	mov	r6, r5
 800a580:	f880 34f4 	strb.w	r3, [r0, #1268]	; 0x4f4
 800a584:	f500 67aa 	add.w	r7, r0, #1360	; 0x550
 800a588:	6860      	ldr	r0, [r4, #4]
 800a58a:	b118      	cbz	r0, 800a594 <E131Bridge::Stop()+0x24>
 800a58c:	6803      	ldr	r3, [r0, #0]
 800a58e:	4629      	mov	r1, r5
 800a590:	68db      	ldr	r3, [r3, #12]
 800a592:	4798      	blx	r3
 800a594:	f7ff ff22 	bl	800a3dc <lightset::Data::Get()>
 800a598:	2344      	movs	r3, #68	; 0x44
 800a59a:	fb08 0005 	mla	r0, r8, r5, r0
 800a59e:	436b      	muls	r3, r5
 800a5a0:	3501      	adds	r5, #1
 800a5a2:	2d08      	cmp	r5, #8
 800a5a4:	f8c0 6600 	str.w	r6, [r0, #1536]	; 0x600
 800a5a8:	54fe      	strb	r6, [r7, r3]
 800a5aa:	d1ed      	bne.n	800a588 <E131Bridge::Stop()+0x18>
 800a5ac:	6963      	ldr	r3, [r4, #20]
 800a5ae:	b17b      	cbz	r3, 800a5d0 <E131Bridge::Stop()+0x60>
 800a5b0:	2500      	movs	r5, #0
 800a5b2:	270c      	movs	r7, #12
 800a5b4:	f204 7632 	addw	r6, r4, #1842	; 0x732
 800a5b8:	fb07 f305 	mul.w	r3, r7, r5
 800a5bc:	5cf3      	ldrb	r3, [r6, r3]
 800a5be:	b123      	cbz	r3, 800a5ca <E131Bridge::Stop()+0x5a>
 800a5c0:	6960      	ldr	r0, [r4, #20]
 800a5c2:	4629      	mov	r1, r5
 800a5c4:	6803      	ldr	r3, [r0, #0]
 800a5c6:	68db      	ldr	r3, [r3, #12]
 800a5c8:	4798      	blx	r3
 800a5ca:	3501      	adds	r5, #1
 800a5cc:	2d08      	cmp	r5, #8
 800a5ce:	d1f3      	bne.n	800a5b8 <E131Bridge::Stop()+0x48>
 800a5d0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800a5d4:	4b02      	ldr	r3, [pc, #8]	; (800a5e0 <E131Bridge::Stop()+0x70>)
 800a5d6:	2100      	movs	r1, #0
 800a5d8:	6818      	ldr	r0, [r3, #0]
 800a5da:	f008 bef5 	b.w	80133c8 <LedBlink::SetMode(ledblink::Mode)>
 800a5de:	bf00      	nop
 800a5e0:	20013dd0 	ldrdcs	r3, [r1], -r0

0800a5e4 <E131Bridge::SetSourceName(char const*)>:
 800a5e4:	223f      	movs	r2, #63	; 0x3f
 800a5e6:	b510      	push	{r4, lr}
 800a5e8:	f100 0334 	add.w	r3, r0, #52	; 0x34
 800a5ec:	3901      	subs	r1, #1
 800a5ee:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800a5f2:	b92c      	cbnz	r4, 800a600 <E131Bridge::SetSourceName(char const*)+0x1c>
 800a5f4:	441a      	add	r2, r3
 800a5f6:	4293      	cmp	r3, r2
 800a5f8:	d006      	beq.n	800a608 <E131Bridge::SetSourceName(char const*)+0x24>
 800a5fa:	f803 4b01 	strb.w	r4, [r3], #1
 800a5fe:	e7fa      	b.n	800a5f6 <E131Bridge::SetSourceName(char const*)+0x12>
 800a600:	3a01      	subs	r2, #1
 800a602:	f803 4b01 	strb.w	r4, [r3], #1
 800a606:	d1f2      	bne.n	800a5ee <E131Bridge::SetSourceName(char const*)+0xa>
 800a608:	2300      	movs	r3, #0
 800a60a:	f880 3073 	strb.w	r3, [r0, #115]	; 0x73
 800a60e:	bd10      	pop	{r4, pc}

0800a610 <E131Bridge::E131Bridge()>:
 800a610:	2300      	movs	r3, #0
 800a612:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800a616:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a618:	e9c0 2300 	strd	r2, r3, [r0]
 800a61c:	2201      	movs	r2, #1
 800a61e:	4604      	mov	r4, r0
 800a620:	2764      	movs	r7, #100	; 0x64
 800a622:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800a626:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800a62a:	e9c0 3307 	strd	r3, r3, [r0, #28]
 800a62e:	6743      	str	r3, [r0, #116]	; 0x74
 800a630:	4b1e      	ldr	r3, [pc, #120]	; (800a6ac <E131Bridge::E131Bridge()+0x9c>)
 800a632:	7202      	strb	r2, [r0, #8]
 800a634:	b093      	sub	sp, #76	; 0x4c
 800a636:	6018      	str	r0, [r3, #0]
 800a638:	f500 65a2 	add.w	r5, r0, #1296	; 0x510
 800a63c:	f500 62e6 	add.w	r2, r0, #1840	; 0x730
 800a640:	f500 66f2 	add.w	r6, r0, #1936	; 0x790
 800a644:	4628      	mov	r0, r5
 800a646:	2144      	movs	r1, #68	; 0x44
 800a648:	f7ff feb6 	bl	800a3b8 <memset.constprop.0.isra.0>
 800a64c:	4610      	mov	r0, r2
 800a64e:	210c      	movs	r1, #12
 800a650:	f7ff feb2 	bl	800a3b8 <memset.constprop.0.isra.0>
 800a654:	320c      	adds	r2, #12
 800a656:	f802 7c03 	strb.w	r7, [r2, #-3]
 800a65a:	42b2      	cmp	r2, r6
 800a65c:	f105 0544 	add.w	r5, r5, #68	; 0x44
 800a660:	d1f0      	bne.n	800a644 <E131Bridge::E131Bridge()+0x34>
 800a662:	f204 40f4 	addw	r0, r4, #1268	; 0x4f4
 800a666:	211c      	movs	r1, #28
 800a668:	f7ff fea6 	bl	800a3b8 <memset.constprop.0.isra.0>
 800a66c:	2301      	movs	r3, #1
 800a66e:	4d10      	ldr	r5, [pc, #64]	; (800a6b0 <E131Bridge::E131Bridge()+0xa0>)
 800a670:	f884 350c 	strb.w	r3, [r4, #1292]	; 0x50c
 800a674:	4a0f      	ldr	r2, [pc, #60]	; (800a6b4 <E131Bridge::E131Bridge()+0xa4>)
 800a676:	682b      	ldr	r3, [r5, #0]
 800a678:	2140      	movs	r1, #64	; 0x40
 800a67a:	331c      	adds	r3, #28
 800a67c:	9200      	str	r2, [sp, #0]
 800a67e:	a802      	add	r0, sp, #8
 800a680:	4a0d      	ldr	r2, [pc, #52]	; (800a6b8 <E131Bridge::E131Bridge()+0xa8>)
 800a682:	f7fe fc3b 	bl	8008efc <snprintf>
 800a686:	4620      	mov	r0, r4
 800a688:	a902      	add	r1, sp, #8
 800a68a:	f7ff ffab 	bl	800a5e4 <E131Bridge::SetSourceName(char const*)>
 800a68e:	f44f 51ae 	mov.w	r1, #5568	; 0x15c0
 800a692:	6828      	ldr	r0, [r5, #0]
 800a694:	f006 f8b8 	bl	8010808 <Network::Begin(unsigned short)>
 800a698:	4621      	mov	r1, r4
 800a69a:	4b08      	ldr	r3, [pc, #32]	; (800a6bc <E131Bridge::E131Bridge()+0xac>)
 800a69c:	f841 0b24 	str.w	r0, [r1], #36
 800a6a0:	6818      	ldr	r0, [r3, #0]
 800a6a2:	f008 ff17 	bl	80134d4 <Hardware::GetUuid(unsigned char*)>
 800a6a6:	4620      	mov	r0, r4
 800a6a8:	b013      	add	sp, #76	; 0x4c
 800a6aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a6ac:	2000313c 	andcs	r3, r0, ip, lsr r1
 800a6b0:	200136ac 	andcs	r3, r1, ip, lsr #13
 800a6b4:	08016118 	stmdaeq	r1, {r3, r4, r8, sp, lr}
 800a6b8:	08016b52 	stmdaeq	r1, {r1, r4, r6, r8, r9, fp, sp, lr}
 800a6bc:	20013dd4 	ldrdcs	r3, [r1], -r4

0800a6c0 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>:
 800a6c0:	b570      	push	{r4, r5, r6, lr}
 800a6c2:	4604      	mov	r4, r0
 800a6c4:	2300      	movs	r3, #0
 800a6c6:	2544      	movs	r5, #68	; 0x44
 800a6c8:	4610      	mov	r0, r2
 800a6ca:	f504 62a2 	add.w	r2, r4, #1296	; 0x510
 800a6ce:	4299      	cmp	r1, r3
 800a6d0:	d004      	beq.n	800a6dc <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0x1c>
 800a6d2:	fb05 f603 	mul.w	r6, r5, r3
 800a6d6:	5b96      	ldrh	r6, [r2, r6]
 800a6d8:	4286      	cmp	r6, r0
 800a6da:	d00e      	beq.n	800a6fa <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0x3a>
 800a6dc:	3301      	adds	r3, #1
 800a6de:	2b08      	cmp	r3, #8
 800a6e0:	d1f5      	bne.n	800a6ce <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0xe>
 800a6e2:	4b06      	ldr	r3, [pc, #24]	; (800a6fc <E131Bridge::LeaveUniverse(unsigned int, unsigned short)+0x3c>)
 800a6e4:	6824      	ldr	r4, [r4, #0]
 800a6e6:	681d      	ldr	r5, [r3, #0]
 800a6e8:	f7ff fe40 	bl	800a36c <e131::universe_to_multicast_ip(unsigned short)>
 800a6ec:	4621      	mov	r1, r4
 800a6ee:	4602      	mov	r2, r0
 800a6f0:	4628      	mov	r0, r5
 800a6f2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a6f6:	f006 b89b 	b.w	8010830 <Network::LeaveGroup(int, unsigned int)>
 800a6fa:	bd70      	pop	{r4, r5, r6, pc}
 800a6fc:	200136ac 	andcs	r3, r1, ip, lsr #13

0800a700 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)>:
 800a700:	b570      	push	{r4, r5, r6, lr}
 800a702:	4604      	mov	r4, r0
 800a704:	461d      	mov	r5, r3
 800a706:	b191      	cbz	r1, 800a72e <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x2e>
 800a708:	f8b0 2506 	ldrh.w	r2, [r0, #1286]	; 0x506
 800a70c:	f200 5606 	addw	r6, r0, #1286	; 0x506
 800a710:	b99a      	cbnz	r2, 800a73a <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x3a>
 800a712:	4b0e      	ldr	r3, [pc, #56]	; (800a74c <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x4c>)
 800a714:	8035      	strh	r5, [r6, #0]
 800a716:	4628      	mov	r0, r5
 800a718:	6826      	ldr	r6, [r4, #0]
 800a71a:	681c      	ldr	r4, [r3, #0]
 800a71c:	f7ff fe26 	bl	800a36c <e131::universe_to_multicast_ip(unsigned short)>
 800a720:	4631      	mov	r1, r6
 800a722:	4602      	mov	r2, r0
 800a724:	4620      	mov	r0, r4
 800a726:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a72a:	f006 b87e 	b.w	801082a <Network::JoinGroup(int, unsigned int)>
 800a72e:	b15a      	cbz	r2, 800a748 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x48>
 800a730:	f8b0 2508 	ldrh.w	r2, [r0, #1288]	; 0x508
 800a734:	f500 66a1 	add.w	r6, r0, #1288	; 0x508
 800a738:	e7ea      	b.n	800a710 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x10>
 800a73a:	42aa      	cmp	r2, r5
 800a73c:	d004      	beq.n	800a748 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x48>
 800a73e:	2108      	movs	r1, #8
 800a740:	4620      	mov	r0, r4
 800a742:	f7ff ffbd 	bl	800a6c0 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>
 800a746:	e7e4      	b.n	800a712 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)+0x12>
 800a748:	bd70      	pop	{r4, r5, r6, pc}
 800a74a:	bf00      	nop
 800a74c:	200136ac 	andcs	r3, r1, ip, lsr #13

0800a750 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)>:
 800a750:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a754:	4604      	mov	r4, r0
 800a756:	460d      	mov	r5, r1
 800a758:	461e      	mov	r6, r3
 800a75a:	bb02      	cbnz	r2, 800a79e <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x4e>
 800a75c:	2907      	cmp	r1, #7
 800a75e:	d843      	bhi.n	800a7e8 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x98>
 800a760:	230c      	movs	r3, #12
 800a762:	fb03 0301 	mla	r3, r3, r1, r0
 800a766:	f893 2732 	ldrb.w	r2, [r3, #1842]	; 0x732
 800a76a:	b12a      	cbz	r2, 800a778 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x28>
 800a76c:	f8b3 3730 	ldrh.w	r3, [r3, #1840]	; 0x730
 800a770:	42b3      	cmp	r3, r6
 800a772:	d109      	bne.n	800a788 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x38>
 800a774:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a778:	f890 250a 	ldrb.w	r2, [r0, #1290]	; 0x50a
 800a77c:	3201      	adds	r2, #1
 800a77e:	f880 250a 	strb.w	r2, [r0, #1290]	; 0x50a
 800a782:	2201      	movs	r2, #1
 800a784:	f883 2732 	strb.w	r2, [r3, #1842]	; 0x732
 800a788:	210c      	movs	r1, #12
 800a78a:	fb01 4405 	mla	r4, r1, r5, r4
 800a78e:	4630      	mov	r0, r6
 800a790:	f8a4 6730 	strh.w	r6, [r4, #1840]	; 0x730
 800a794:	f7ff fdea 	bl	800a36c <e131::universe_to_multicast_ip(unsigned short)>
 800a798:	f8c4 0734 	str.w	r0, [r4, #1844]	; 0x734
 800a79c:	e7ea      	b.n	800a774 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 800a79e:	2a02      	cmp	r2, #2
 800a7a0:	d122      	bne.n	800a7e8 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x98>
 800a7a2:	2907      	cmp	r1, #7
 800a7a4:	d8e6      	bhi.n	800a774 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 800a7a6:	2344      	movs	r3, #68	; 0x44
 800a7a8:	fb03 0301 	mla	r3, r3, r1, r0
 800a7ac:	f893 2512 	ldrb.w	r2, [r3, #1298]	; 0x512
 800a7b0:	b152      	cbz	r2, 800a7c8 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x78>
 800a7b2:	2200      	movs	r2, #0
 800a7b4:	f883 2512 	strb.w	r2, [r3, #1298]	; 0x512
 800a7b8:	f890 350b 	ldrb.w	r3, [r0, #1291]	; 0x50b
 800a7bc:	4632      	mov	r2, r6
 800a7be:	3b01      	subs	r3, #1
 800a7c0:	f880 350b 	strb.w	r3, [r0, #1291]	; 0x50b
 800a7c4:	f7ff ff7c 	bl	800a6c0 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>
 800a7c8:	210c      	movs	r1, #12
 800a7ca:	fb01 4505 	mla	r5, r1, r5, r4
 800a7ce:	f895 3732 	ldrb.w	r3, [r5, #1842]	; 0x732
 800a7d2:	2b00      	cmp	r3, #0
 800a7d4:	d0ce      	beq.n	800a774 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 800a7d6:	2300      	movs	r3, #0
 800a7d8:	f885 3732 	strb.w	r3, [r5, #1842]	; 0x732
 800a7dc:	f894 350a 	ldrb.w	r3, [r4, #1290]	; 0x50a
 800a7e0:	3b01      	subs	r3, #1
 800a7e2:	f884 350a 	strb.w	r3, [r4, #1290]	; 0x50a
 800a7e6:	e7c5      	b.n	800a774 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 800a7e8:	2344      	movs	r3, #68	; 0x44
 800a7ea:	fb03 4305 	mla	r3, r3, r5, r4
 800a7ee:	f893 2512 	ldrb.w	r2, [r3, #1298]	; 0x512
 800a7f2:	b1d2      	cbz	r2, 800a82a <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0xda>
 800a7f4:	f8b3 3510 	ldrh.w	r3, [r3, #1296]	; 0x510
 800a7f8:	42b3      	cmp	r3, r6
 800a7fa:	d0bb      	beq.n	800a774 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 800a7fc:	4632      	mov	r2, r6
 800a7fe:	4629      	mov	r1, r5
 800a800:	4620      	mov	r0, r4
 800a802:	f7ff ff5d 	bl	800a6c0 <E131Bridge::LeaveUniverse(unsigned int, unsigned short)>
 800a806:	4b0d      	ldr	r3, [pc, #52]	; (800a83c <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0xec>)
 800a808:	4630      	mov	r0, r6
 800a80a:	681f      	ldr	r7, [r3, #0]
 800a80c:	f8d4 8000 	ldr.w	r8, [r4]
 800a810:	f7ff fdac 	bl	800a36c <e131::universe_to_multicast_ip(unsigned short)>
 800a814:	4641      	mov	r1, r8
 800a816:	4602      	mov	r2, r0
 800a818:	4638      	mov	r0, r7
 800a81a:	f006 f806 	bl	801082a <Network::JoinGroup(int, unsigned int)>
 800a81e:	2144      	movs	r1, #68	; 0x44
 800a820:	fb01 4405 	mla	r4, r1, r5, r4
 800a824:	f8a4 6510 	strh.w	r6, [r4, #1296]	; 0x510
 800a828:	e7a4      	b.n	800a774 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0x24>
 800a82a:	f894 250b 	ldrb.w	r2, [r4, #1291]	; 0x50b
 800a82e:	3201      	adds	r2, #1
 800a830:	f884 250b 	strb.w	r2, [r4, #1291]	; 0x50b
 800a834:	2201      	movs	r2, #1
 800a836:	f883 2512 	strb.w	r2, [r3, #1298]	; 0x512
 800a83a:	e7e4      	b.n	800a806 <E131Bridge::SetUniverse(unsigned int, lightset::PortDir, unsigned short)+0xb6>
 800a83c:	200136ac 	andcs	r3, r1, ip, lsr #13

0800a840 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>:
 800a840:	b953      	cbnz	r3, 800a858 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const+0x18>
 800a842:	2907      	cmp	r1, #7
 800a844:	d811      	bhi.n	800a86a <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const+0x2a>
 800a846:	230c      	movs	r3, #12
 800a848:	fb03 0001 	mla	r0, r3, r1, r0
 800a84c:	f8b0 3730 	ldrh.w	r3, [r0, #1840]	; 0x730
 800a850:	f890 0732 	ldrb.w	r0, [r0, #1842]	; 0x732
 800a854:	8013      	strh	r3, [r2, #0]
 800a856:	4770      	bx	lr
 800a858:	2344      	movs	r3, #68	; 0x44
 800a85a:	fb03 0001 	mla	r0, r3, r1, r0
 800a85e:	f8b0 3510 	ldrh.w	r3, [r0, #1296]	; 0x510
 800a862:	f890 0512 	ldrb.w	r0, [r0, #1298]	; 0x512
 800a866:	8013      	strh	r3, [r2, #0]
 800a868:	4770      	bx	lr
 800a86a:	4618      	mov	r0, r3
 800a86c:	4770      	bx	lr

0800a86e <E131Bridge::UpdateMergeStatus(unsigned int)>:
 800a86e:	f890 34f5 	ldrb.w	r3, [r0, #1269]	; 0x4f5
 800a872:	b923      	cbnz	r3, 800a87e <E131Bridge::UpdateMergeStatus(unsigned int)+0x10>
 800a874:	2301      	movs	r3, #1
 800a876:	f880 34f5 	strb.w	r3, [r0, #1269]	; 0x4f5
 800a87a:	f880 34f8 	strb.w	r3, [r0, #1272]	; 0x4f8
 800a87e:	2344      	movs	r3, #68	; 0x44
 800a880:	fb03 0001 	mla	r0, r3, r1, r0
 800a884:	2301      	movs	r3, #1
 800a886:	f880 3551 	strb.w	r3, [r0, #1361]	; 0x551
 800a88a:	4770      	bx	lr

0800a88c <E131Bridge::CheckMergeTimeouts(unsigned int)>:
 800a88c:	4602      	mov	r2, r0
 800a88e:	2044      	movs	r0, #68	; 0x44
 800a890:	4348      	muls	r0, r1
 800a892:	b570      	push	{r4, r5, r6, lr}
 800a894:	1815      	adds	r5, r2, r0
 800a896:	460c      	mov	r4, r1
 800a898:	68d3      	ldr	r3, [r2, #12]
 800a89a:	f8d5 1514 	ldr.w	r1, [r5, #1300]	; 0x514
 800a89e:	1a5b      	subs	r3, r3, r1
 800a8a0:	f242 7110 	movw	r1, #10000	; 0x2710
 800a8a4:	428b      	cmp	r3, r1
 800a8a6:	d90a      	bls.n	800a8be <E131Bridge::CheckMergeTimeouts(unsigned int)+0x32>
 800a8a8:	2600      	movs	r6, #0
 800a8aa:	f200 501c 	addw	r0, r0, #1308	; 0x51c
 800a8ae:	2110      	movs	r1, #16
 800a8b0:	f8c5 6518 	str.w	r6, [r5, #1304]	; 0x518
 800a8b4:	4410      	add	r0, r2
 800a8b6:	f7ff fd7f 	bl	800a3b8 <memset.constprop.0.isra.0>
 800a8ba:	f885 6551 	strb.w	r6, [r5, #1361]	; 0x551
 800a8be:	2044      	movs	r0, #68	; 0x44
 800a8c0:	4344      	muls	r4, r0
 800a8c2:	1915      	adds	r5, r2, r4
 800a8c4:	f8d5 1530 	ldr.w	r1, [r5, #1328]	; 0x530
 800a8c8:	68d3      	ldr	r3, [r2, #12]
 800a8ca:	1a5b      	subs	r3, r3, r1
 800a8cc:	f242 7110 	movw	r1, #10000	; 0x2710
 800a8d0:	428b      	cmp	r3, r1
 800a8d2:	d90a      	bls.n	800a8ea <E131Bridge::CheckMergeTimeouts(unsigned int)+0x5e>
 800a8d4:	2600      	movs	r6, #0
 800a8d6:	f504 64a7 	add.w	r4, r4, #1336	; 0x538
 800a8da:	2110      	movs	r1, #16
 800a8dc:	f8c5 6534 	str.w	r6, [r5, #1332]	; 0x534
 800a8e0:	1910      	adds	r0, r2, r4
 800a8e2:	f7ff fd69 	bl	800a3b8 <memset.constprop.0.isra.0>
 800a8e6:	f885 6551 	strb.w	r6, [r5, #1361]	; 0x551
 800a8ea:	4611      	mov	r1, r2
 800a8ec:	2300      	movs	r3, #0
 800a8ee:	f502 7008 	add.w	r0, r2, #544	; 0x220
 800a8f2:	f891 4551 	ldrb.w	r4, [r1, #1361]	; 0x551
 800a8f6:	3144      	adds	r1, #68	; 0x44
 800a8f8:	4281      	cmp	r1, r0
 800a8fa:	ea43 0304 	orr.w	r3, r3, r4
 800a8fe:	d1f8      	bne.n	800a8f2 <E131Bridge::CheckMergeTimeouts(unsigned int)+0x66>
 800a900:	b923      	cbnz	r3, 800a90c <E131Bridge::CheckMergeTimeouts(unsigned int)+0x80>
 800a902:	2101      	movs	r1, #1
 800a904:	f882 34f5 	strb.w	r3, [r2, #1269]	; 0x4f5
 800a908:	f882 14f8 	strb.w	r1, [r2, #1272]	; 0x4f8
 800a90c:	bd70      	pop	{r4, r5, r6, pc}

0800a90e <E131Bridge::IsPriorityTimeOut(unsigned int) const>:
 800a90e:	2244      	movs	r2, #68	; 0x44
 800a910:	fb02 0101 	mla	r1, r2, r1, r0
 800a914:	68c3      	ldr	r3, [r0, #12]
 800a916:	f8d1 0530 	ldr.w	r0, [r1, #1328]	; 0x530
 800a91a:	b510      	push	{r4, lr}
 800a91c:	1a1a      	subs	r2, r3, r0
 800a91e:	f8d1 4514 	ldr.w	r4, [r1, #1300]	; 0x514
 800a922:	f8d1 0534 	ldr.w	r0, [r1, #1332]	; 0x534
 800a926:	f8d1 1518 	ldr.w	r1, [r1, #1304]	; 0x518
 800a92a:	b171      	cbz	r1, 800a94a <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x3c>
 800a92c:	1b1b      	subs	r3, r3, r4
 800a92e:	b128      	cbz	r0, 800a93c <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x2e>
 800a930:	f242 700f 	movw	r0, #9999	; 0x270f
 800a934:	4283      	cmp	r3, r0
 800a936:	d90d      	bls.n	800a954 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x46>
 800a938:	4282      	cmp	r2, r0
 800a93a:	e002      	b.n	800a942 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x34>
 800a93c:	f242 7010 	movw	r0, #10000	; 0x2710
 800a940:	4283      	cmp	r3, r0
 800a942:	bf94      	ite	ls
 800a944:	2000      	movls	r0, #0
 800a946:	2001      	movhi	r0, #1
 800a948:	bd10      	pop	{r4, pc}
 800a94a:	2800      	cmp	r0, #0
 800a94c:	d0fc      	beq.n	800a948 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x3a>
 800a94e:	f242 7010 	movw	r0, #10000	; 0x2710
 800a952:	e7f1      	b.n	800a938 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x2a>
 800a954:	2000      	movs	r0, #0
 800a956:	e7f7      	b.n	800a948 <E131Bridge::IsPriorityTimeOut(unsigned int) const+0x3a>

0800a958 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const>:
 800a958:	684a      	ldr	r2, [r1, #4]
 800a95a:	6f83      	ldr	r3, [r0, #120]	; 0x78
 800a95c:	b510      	push	{r4, lr}
 800a95e:	429a      	cmp	r2, r3
 800a960:	d10b      	bne.n	800a97a <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x22>
 800a962:	f100 0392 	add.w	r3, r0, #146	; 0x92
 800a966:	3108      	adds	r1, #8
 800a968:	30a2      	adds	r0, #162	; 0xa2
 800a96a:	4298      	cmp	r0, r3
 800a96c:	d007      	beq.n	800a97e <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x26>
 800a96e:	f811 4b01 	ldrb.w	r4, [r1], #1
 800a972:	f813 2b01 	ldrb.w	r2, [r3], #1
 800a976:	4294      	cmp	r4, r2
 800a978:	d0f7      	beq.n	800a96a <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x12>
 800a97a:	2000      	movs	r0, #0
 800a97c:	bd10      	pop	{r4, pc}
 800a97e:	2001      	movs	r0, #1
 800a980:	e7fc      	b.n	800a97c <E131Bridge::isIpCidMatch(e131bridge::Source const*) const+0x24>
	...

0800a984 <E131Bridge::SetNetworkDataLossCondition(bool, bool)>:
 800a984:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a988:	2301      	movs	r3, #1
 800a98a:	4605      	mov	r5, r0
 800a98c:	4690      	mov	r8, r2
 800a98e:	460f      	mov	r7, r1
 800a990:	f880 34f8 	strb.w	r3, [r0, #1272]	; 0x4f8
 800a994:	2900      	cmp	r1, #0
 800a996:	d03d      	beq.n	800aa14 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x90>
 800a998:	2a00      	cmp	r2, #0
 800a99a:	d03b      	beq.n	800aa14 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x90>
 800a99c:	2600      	movs	r6, #0
 800a99e:	f240 6804 	movw	r8, #1540	; 0x604
 800a9a2:	4637      	mov	r7, r6
 800a9a4:	f8c0 34f4 	str.w	r3, [r0, #1268]	; 0x4f4
 800a9a8:	f880 350c 	strb.w	r3, [r0, #1292]	; 0x50c
 800a9ac:	f200 541c 	addw	r4, r0, #1308	; 0x51c
 800a9b0:	f894 3036 	ldrb.w	r3, [r4, #54]	; 0x36
 800a9b4:	b1e3      	cbz	r3, 800a9f0 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x6c>
 800a9b6:	6868      	ldr	r0, [r5, #4]
 800a9b8:	4631      	mov	r1, r6
 800a9ba:	6803      	ldr	r3, [r0, #0]
 800a9bc:	68db      	ldr	r3, [r3, #12]
 800a9be:	4798      	blx	r3
 800a9c0:	2110      	movs	r1, #16
 800a9c2:	4620      	mov	r0, r4
 800a9c4:	f844 7c04 	str.w	r7, [r4, #-4]
 800a9c8:	f7ff fcf6 	bl	800a3b8 <memset.constprop.0.isra.0>
 800a9cc:	2110      	movs	r1, #16
 800a9ce:	f104 001c 	add.w	r0, r4, #28
 800a9d2:	61a7      	str	r7, [r4, #24]
 800a9d4:	f7ff fcf0 	bl	800a3b8 <memset.constprop.0.isra.0>
 800a9d8:	f7ff fd00 	bl	800a3dc <lightset::Data::Get()>
 800a9dc:	fb08 0006 	mla	r0, r8, r6, r0
 800a9e0:	f8c0 7600 	str.w	r7, [r0, #1536]	; 0x600
 800a9e4:	f884 7034 	strb.w	r7, [r4, #52]	; 0x34
 800a9e8:	f884 7036 	strb.w	r7, [r4, #54]	; 0x36
 800a9ec:	f884 7035 	strb.w	r7, [r4, #53]	; 0x35
 800a9f0:	3601      	adds	r6, #1
 800a9f2:	2e08      	cmp	r6, #8
 800a9f4:	f104 0444 	add.w	r4, r4, #68	; 0x44
 800a9f8:	d1da      	bne.n	800a9b0 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x2c>
 800a9fa:	4b25      	ldr	r3, [pc, #148]	; (800aa90 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x10c>)
 800a9fc:	2102      	movs	r1, #2
 800a9fe:	6818      	ldr	r0, [r3, #0]
 800aa00:	f008 fce2 	bl	80133c8 <LedBlink::SetMode(ledblink::Mode)>
 800aa04:	f895 350d 	ldrb.w	r3, [r5, #1293]	; 0x50d
 800aa08:	f023 0302 	bic.w	r3, r3, #2
 800aa0c:	f885 350d 	strb.w	r3, [r5, #1293]	; 0x50d
 800aa10:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800aa14:	2600      	movs	r6, #0
 800aa16:	f240 6b04 	movw	fp, #1540	; 0x604
 800aa1a:	46b1      	mov	r9, r6
 800aa1c:	f505 64a7 	add.w	r4, r5, #1336	; 0x538
 800aa20:	7ea3      	ldrb	r3, [r4, #26]
 800aa22:	b373      	cbz	r3, 800aa82 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xfe>
 800aa24:	b15f      	cbz	r7, 800aa3e <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xba>
 800aa26:	f854 3c20 	ldr.w	r3, [r4, #-32]
 800aa2a:	b143      	cbz	r3, 800aa3e <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xba>
 800aa2c:	2110      	movs	r1, #16
 800aa2e:	f844 9c20 	str.w	r9, [r4, #-32]
 800aa32:	f1a4 001c 	sub.w	r0, r4, #28
 800aa36:	f7ff fcbf 	bl	800a3b8 <memset.constprop.0.isra.0>
 800aa3a:	f884 9019 	strb.w	r9, [r4, #25]
 800aa3e:	f1b8 0f00 	cmp.w	r8, #0
 800aa42:	d00a      	beq.n	800aa5a <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xd6>
 800aa44:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800aa48:	b13b      	cbz	r3, 800aa5a <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xd6>
 800aa4a:	2110      	movs	r1, #16
 800aa4c:	4620      	mov	r0, r4
 800aa4e:	f844 9c04 	str.w	r9, [r4, #-4]
 800aa52:	f7ff fcb1 	bl	800a3b8 <memset.constprop.0.isra.0>
 800aa56:	f884 9019 	strb.w	r9, [r4, #25]
 800aa5a:	f895 a4f5 	ldrb.w	sl, [r5, #1269]	; 0x4f5
 800aa5e:	f1ba 0f00 	cmp.w	sl, #0
 800aa62:	d10e      	bne.n	800aa82 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0xfe>
 800aa64:	6868      	ldr	r0, [r5, #4]
 800aa66:	4631      	mov	r1, r6
 800aa68:	6803      	ldr	r3, [r0, #0]
 800aa6a:	68db      	ldr	r3, [r3, #12]
 800aa6c:	4798      	blx	r3
 800aa6e:	f7ff fcb5 	bl	800a3dc <lightset::Data::Get()>
 800aa72:	fb0b 0006 	mla	r0, fp, r6, r0
 800aa76:	f8c0 a600 	str.w	sl, [r0, #1536]	; 0x600
 800aa7a:	f884 a018 	strb.w	sl, [r4, #24]
 800aa7e:	f884 a01a 	strb.w	sl, [r4, #26]
 800aa82:	3601      	adds	r6, #1
 800aa84:	2e08      	cmp	r6, #8
 800aa86:	f104 0444 	add.w	r4, r4, #68	; 0x44
 800aa8a:	d1c9      	bne.n	800aa20 <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x9c>
 800aa8c:	e7b5      	b.n	800a9fa <E131Bridge::SetNetworkDataLossCondition(bool, bool)+0x76>
 800aa8e:	bf00      	nop
 800aa90:	20013dd0 	ldrdcs	r3, [r1], -r0

0800aa94 <E131Bridge::HandleDmx()>:
 800aa94:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800aa98:	4604      	mov	r4, r0
 800aa9a:	2600      	movs	r6, #0
 800aa9c:	f8b0 70f7 	ldrh.w	r7, [r0, #247]	; 0xf7
 800aaa0:	f100 09fa 	add.w	r9, r0, #250	; 0xfa
 800aaa4:	ba7f      	rev16	r7, r7
 800aaa6:	b2bf      	uxth	r7, r7
 800aaa8:	3f01      	subs	r7, #1
 800aaaa:	f200 551c 	addw	r5, r0, #1308	; 0x51c
 800aaae:	f815 3c0a 	ldrb.w	r3, [r5, #-10]
 800aab2:	b353      	cbz	r3, 800ab0a <E131Bridge::HandleDmx()+0x76>
 800aab4:	f835 3c0c 	ldrh.w	r3, [r5, #-12]
 800aab8:	f8b4 20ed 	ldrh.w	r2, [r4, #237]	; 0xed
 800aabc:	ba5b      	rev16	r3, r3
 800aabe:	b29b      	uxth	r3, r3
 800aac0:	429a      	cmp	r2, r3
 800aac2:	d122      	bne.n	800ab0a <E131Bridge::HandleDmx()+0x76>
 800aac4:	f855 3c04 	ldr.w	r3, [r5, #-4]
 800aac8:	f1a5 0108 	sub.w	r1, r5, #8
 800aacc:	4620      	mov	r0, r4
 800aace:	9300      	str	r3, [sp, #0]
 800aad0:	f7ff ff42 	bl	800a958 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const>
 800aad4:	f105 0114 	add.w	r1, r5, #20
 800aad8:	4682      	mov	sl, r0
 800aada:	4620      	mov	r0, r4
 800aadc:	f7ff ff3c 	bl	800a958 <E131Bridge::isIpCidMatch(e131bridge::Source const*) const>
 800aae0:	f8d5 b018 	ldr.w	fp, [r5, #24]
 800aae4:	4680      	mov	r8, r0
 800aae6:	f1ba 0f00 	cmp.w	sl, #0
 800aaea:	d016      	beq.n	800ab1a <E131Bridge::HandleDmx()+0x86>
 800aaec:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800aaf0:	7c2a      	ldrb	r2, [r5, #16]
 800aaf2:	742b      	strb	r3, [r5, #16]
 800aaf4:	3313      	adds	r3, #19
 800aaf6:	1a9b      	subs	r3, r3, r2
 800aaf8:	b2db      	uxtb	r3, r3
 800aafa:	2b13      	cmp	r3, #19
 800aafc:	d905      	bls.n	800ab0a <E131Bridge::HandleDmx()+0x76>
 800aafe:	f994 20ec 	ldrsb.w	r2, [r4, #236]	; 0xec
 800ab02:	f894 30ec 	ldrb.w	r3, [r4, #236]	; 0xec
 800ab06:	2a00      	cmp	r2, #0
 800ab08:	da10      	bge.n	800ab2c <E131Bridge::HandleDmx()+0x98>
 800ab0a:	3601      	adds	r6, #1
 800ab0c:	2e08      	cmp	r6, #8
 800ab0e:	f105 0544 	add.w	r5, r5, #68	; 0x44
 800ab12:	d1cc      	bne.n	800aaae <E131Bridge::HandleDmx()+0x1a>
 800ab14:	b003      	add	sp, #12
 800ab16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ab1a:	2800      	cmp	r0, #0
 800ab1c:	d0ef      	beq.n	800aafe <E131Bridge::HandleDmx()+0x6a>
 800ab1e:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800ab22:	f895 202c 	ldrb.w	r2, [r5, #44]	; 0x2c
 800ab26:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
 800ab2a:	e7e3      	b.n	800aaf4 <E131Bridge::HandleDmx()+0x60>
 800ab2c:	065a      	lsls	r2, r3, #25
 800ab2e:	d50b      	bpl.n	800ab48 <E131Bridge::HandleDmx()+0xb4>
 800ab30:	f1ba 0f00 	cmp.w	sl, #0
 800ab34:	d102      	bne.n	800ab3c <E131Bridge::HandleDmx()+0xa8>
 800ab36:	f1b8 0f00 	cmp.w	r8, #0
 800ab3a:	d0e6      	beq.n	800ab0a <E131Bridge::HandleDmx()+0x76>
 800ab3c:	4642      	mov	r2, r8
 800ab3e:	4651      	mov	r1, sl
 800ab40:	4620      	mov	r0, r4
 800ab42:	f7ff ff1f 	bl	800a984 <E131Bridge::SetNetworkDataLossCondition(bool, bool)>
 800ab46:	e7e0      	b.n	800ab0a <E131Bridge::HandleDmx()+0x76>
 800ab48:	f894 34f5 	ldrb.w	r3, [r4, #1269]	; 0x4f5
 800ab4c:	b133      	cbz	r3, 800ab5c <E131Bridge::HandleDmx()+0xc8>
 800ab4e:	f894 34fa 	ldrb.w	r3, [r4, #1274]	; 0x4fa
 800ab52:	b91b      	cbnz	r3, 800ab5c <E131Bridge::HandleDmx()+0xc8>
 800ab54:	4631      	mov	r1, r6
 800ab56:	4620      	mov	r0, r4
 800ab58:	f7ff fe98 	bl	800a88c <E131Bridge::CheckMergeTimeouts(unsigned int)>
 800ab5c:	f894 30e8 	ldrb.w	r3, [r4, #232]	; 0xe8
 800ab60:	f894 250c 	ldrb.w	r2, [r4, #1292]	; 0x50c
 800ab64:	4293      	cmp	r3, r2
 800ab66:	d259      	bcs.n	800ac1c <E131Bridge::HandleDmx()+0x188>
 800ab68:	4631      	mov	r1, r6
 800ab6a:	4620      	mov	r0, r4
 800ab6c:	9301      	str	r3, [sp, #4]
 800ab6e:	f7ff fece 	bl	800a90e <E131Bridge::IsPriorityTimeOut(unsigned int) const>
 800ab72:	2800      	cmp	r0, #0
 800ab74:	d0c9      	beq.n	800ab0a <E131Bridge::HandleDmx()+0x76>
 800ab76:	9b01      	ldr	r3, [sp, #4]
 800ab78:	f884 350c 	strb.w	r3, [r4, #1292]	; 0x50c
 800ab7c:	9b00      	ldr	r3, [sp, #0]
 800ab7e:	2b00      	cmp	r3, #0
 800ab80:	d154      	bne.n	800ac2c <E131Bridge::HandleDmx()+0x198>
 800ab82:	f1bb 0f00 	cmp.w	fp, #0
 800ab86:	d15c      	bne.n	800ac42 <E131Bridge::HandleDmx()+0x1ae>
 800ab88:	6fa3      	ldr	r3, [r4, #120]	; 0x78
 800ab8a:	2210      	movs	r2, #16
 800ab8c:	f845 3c04 	str.w	r3, [r5, #-4]
 800ab90:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800ab94:	4628      	mov	r0, r5
 800ab96:	742b      	strb	r3, [r5, #16]
 800ab98:	f104 0192 	add.w	r1, r4, #146	; 0x92
 800ab9c:	f7ff fc14 	bl	800a3c8 <memcpy.isra.0>
 800aba0:	68e3      	ldr	r3, [r4, #12]
 800aba2:	463a      	mov	r2, r7
 800aba4:	4649      	mov	r1, r9
 800aba6:	4630      	mov	r0, r6
 800aba8:	f845 3c08 	str.w	r3, [r5, #-8]
 800abac:	f7ff fc22 	bl	800a3f4 <lightset::Data::SetSourceA(unsigned int, unsigned char const*, unsigned int)>
 800abb0:	f894 30ec 	ldrb.w	r3, [r4, #236]	; 0xec
 800abb4:	069b      	lsls	r3, r3, #26
 800abb6:	f100 80ad 	bmi.w	800ad14 <E131Bridge::HandleDmx()+0x280>
 800abba:	f8b4 30e9 	ldrh.w	r3, [r4, #233]	; 0xe9
 800abbe:	b29a      	uxth	r2, r3
 800abc0:	2a00      	cmp	r2, #0
 800abc2:	f000 80ab 	beq.w	800ad1c <E131Bridge::HandleDmx()+0x288>
 800abc6:	f894 24f7 	ldrb.w	r2, [r4, #1271]	; 0x4f7
 800abca:	2a00      	cmp	r2, #0
 800abcc:	f040 80a6 	bne.w	800ad1c <E131Bridge::HandleDmx()+0x288>
 800abd0:	ba5b      	rev16	r3, r3
 800abd2:	b29b      	uxth	r3, r3
 800abd4:	f1ba 0f00 	cmp.w	sl, #0
 800abd8:	f040 8099 	bne.w	800ad0e <E131Bridge::HandleDmx()+0x27a>
 800abdc:	f1b8 0f00 	cmp.w	r8, #0
 800abe0:	f040 8095 	bne.w	800ad0e <E131Bridge::HandleDmx()+0x27a>
 800abe4:	69aa      	ldr	r2, [r5, #24]
 800abe6:	f855 1c04 	ldr.w	r1, [r5, #-4]
 800abea:	3a00      	subs	r2, #0
 800abec:	bf18      	it	ne
 800abee:	2201      	movne	r2, #1
 800abf0:	3900      	subs	r1, #0
 800abf2:	bf18      	it	ne
 800abf4:	2101      	movne	r1, #1
 800abf6:	4620      	mov	r0, r4
 800abf8:	f7ff fd82 	bl	800a700 <E131Bridge::SetSynchronizationAddress(bool, bool, unsigned short)>
 800abfc:	f240 1301 	movw	r3, #257	; 0x101
 800ac00:	f8a4 34f6 	strh.w	r3, [r4, #1270]	; 0x4f6
 800ac04:	f894 34fb 	ldrb.w	r3, [r4, #1275]	; 0x4fb
 800ac08:	2b00      	cmp	r3, #0
 800ac0a:	f040 808c 	bne.w	800ad26 <E131Bridge::HandleDmx()+0x292>
 800ac0e:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800ac12:	f043 0302 	orr.w	r3, r3, #2
 800ac16:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 800ac1a:	e776      	b.n	800ab0a <E131Bridge::HandleDmx()+0x76>
 800ac1c:	d9ae      	bls.n	800ab7c <E131Bridge::HandleDmx()+0xe8>
 800ac1e:	2200      	movs	r2, #0
 800ac20:	f845 2c04 	str.w	r2, [r5, #-4]
 800ac24:	61aa      	str	r2, [r5, #24]
 800ac26:	f884 24f5 	strb.w	r2, [r4, #1269]	; 0x4f5
 800ac2a:	e7a5      	b.n	800ab78 <E131Bridge::HandleDmx()+0xe4>
 800ac2c:	f1ba 0f00 	cmp.w	sl, #0
 800ac30:	f000 8092 	beq.w	800ad58 <E131Bridge::HandleDmx()+0x2c4>
 800ac34:	f1bb 0f00 	cmp.w	fp, #0
 800ac38:	d15c      	bne.n	800acf4 <E131Bridge::HandleDmx()+0x260>
 800ac3a:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800ac3e:	742b      	strb	r3, [r5, #16]
 800ac40:	e7ae      	b.n	800aba0 <E131Bridge::HandleDmx()+0x10c>
 800ac42:	f1b8 0f00 	cmp.w	r8, #0
 800ac46:	d03b      	beq.n	800acc0 <E131Bridge::HandleDmx()+0x22c>
 800ac48:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800ac4c:	f240 6b04 	movw	fp, #1540	; 0x604
 800ac50:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
 800ac54:	68e3      	ldr	r3, [r4, #12]
 800ac56:	fb0b fb06 	mul.w	fp, fp, r6
 800ac5a:	616b      	str	r3, [r5, #20]
 800ac5c:	f7ff fbbe 	bl	800a3dc <lightset::Data::Get()>
 800ac60:	4603      	mov	r3, r0
 800ac62:	f50b 7000 	add.w	r0, fp, #512	; 0x200
 800ac66:	463a      	mov	r2, r7
 800ac68:	4649      	mov	r1, r9
 800ac6a:	4418      	add	r0, r3
 800ac6c:	9300      	str	r3, [sp, #0]
 800ac6e:	f7ff fbab 	bl	800a3c8 <memcpy.isra.0>
 800ac72:	9b00      	ldr	r3, [sp, #0]
 800ac74:	f50b 6080 	add.w	r0, fp, #1024	; 0x400
 800ac78:	eb03 020b 	add.w	r2, r3, fp
 800ac7c:	f8c2 7600 	str.w	r7, [r2, #1536]	; 0x600
 800ac80:	4649      	mov	r1, r9
 800ac82:	463a      	mov	r2, r7
 800ac84:	4418      	add	r0, r3
 800ac86:	f7ff fb9f 	bl	800a3c8 <memcpy.isra.0>
 800ac8a:	e791      	b.n	800abb0 <E131Bridge::HandleDmx()+0x11c>
 800ac8c:	6fa3      	ldr	r3, [r4, #120]	; 0x78
 800ac8e:	2210      	movs	r2, #16
 800ac90:	61ab      	str	r3, [r5, #24]
 800ac92:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800ac96:	f104 0192 	add.w	r1, r4, #146	; 0x92
 800ac9a:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
 800ac9e:	f105 001c 	add.w	r0, r5, #28
 800aca2:	f7ff fb91 	bl	800a3c8 <memcpy.isra.0>
 800aca6:	68e3      	ldr	r3, [r4, #12]
 800aca8:	4631      	mov	r1, r6
 800acaa:	4620      	mov	r0, r4
 800acac:	616b      	str	r3, [r5, #20]
 800acae:	f7ff fdde 	bl	800a86e <E131Bridge::UpdateMergeStatus(unsigned int)>
 800acb2:	463a      	mov	r2, r7
 800acb4:	4649      	mov	r1, r9
 800acb6:	4630      	mov	r0, r6
 800acb8:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 800acba:	f7ff fbe1 	bl	800a480 <lightset::Data::MergeSourceB(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>
 800acbe:	e777      	b.n	800abb0 <E131Bridge::HandleDmx()+0x11c>
 800acc0:	6fa3      	ldr	r3, [r4, #120]	; 0x78
 800acc2:	2210      	movs	r2, #16
 800acc4:	f845 3c04 	str.w	r3, [r5, #-4]
 800acc8:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800accc:	4628      	mov	r0, r5
 800acce:	742b      	strb	r3, [r5, #16]
 800acd0:	f104 0192 	add.w	r1, r4, #146	; 0x92
 800acd4:	f7ff fb78 	bl	800a3c8 <memcpy.isra.0>
 800acd8:	68e3      	ldr	r3, [r4, #12]
 800acda:	4631      	mov	r1, r6
 800acdc:	4620      	mov	r0, r4
 800acde:	f845 3c08 	str.w	r3, [r5, #-8]
 800ace2:	f7ff fdc4 	bl	800a86e <E131Bridge::UpdateMergeStatus(unsigned int)>
 800ace6:	463a      	mov	r2, r7
 800ace8:	4649      	mov	r1, r9
 800acea:	4630      	mov	r0, r6
 800acec:	6b2b      	ldr	r3, [r5, #48]	; 0x30
 800acee:	f7ff fb9e 	bl	800a42e <lightset::Data::MergeSourceA(unsigned int, unsigned char const*, unsigned int, lightset::MergeMode)>
 800acf2:	e75d      	b.n	800abb0 <E131Bridge::HandleDmx()+0x11c>
 800acf4:	f1b8 0f00 	cmp.w	r8, #0
 800acf8:	d103      	bne.n	800ad02 <E131Bridge::HandleDmx()+0x26e>
 800acfa:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800acfe:	742b      	strb	r3, [r5, #16]
 800ad00:	e7ea      	b.n	800acd8 <E131Bridge::HandleDmx()+0x244>
 800ad02:	481b      	ldr	r0, [pc, #108]	; (800ad70 <E131Bridge::HandleDmx()+0x2dc>)
 800ad04:	b003      	add	sp, #12
 800ad06:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ad0a:	f7fe b8cf 	b.w	8008eac <printf>
 800ad0e:	4642      	mov	r2, r8
 800ad10:	4651      	mov	r1, sl
 800ad12:	e770      	b.n	800abf6 <E131Bridge::HandleDmx()+0x162>
 800ad14:	f04f 0300 	mov.w	r3, #0
 800ad18:	f884 34f7 	strb.w	r3, [r4, #1271]	; 0x4f7
 800ad1c:	f894 34f6 	ldrb.w	r3, [r4, #1270]	; 0x4f6
 800ad20:	2b00      	cmp	r3, #0
 800ad22:	f47f af6f 	bne.w	800ac04 <E131Bridge::HandleDmx()+0x170>
 800ad26:	f8d4 8004 	ldr.w	r8, [r4, #4]
 800ad2a:	f7ff fb57 	bl	800a3dc <lightset::Data::Get()>
 800ad2e:	4632      	mov	r2, r6
 800ad30:	4641      	mov	r1, r8
 800ad32:	f7ff fbcf 	bl	800a4d4 <lightset::Data::IOutput(LightSet*, unsigned int) const>
 800ad36:	f895 3036 	ldrb.w	r3, [r5, #54]	; 0x36
 800ad3a:	2b00      	cmp	r3, #0
 800ad3c:	f47f af67 	bne.w	800ac0e <E131Bridge::HandleDmx()+0x17a>
 800ad40:	6860      	ldr	r0, [r4, #4]
 800ad42:	4631      	mov	r1, r6
 800ad44:	6803      	ldr	r3, [r0, #0]
 800ad46:	689b      	ldr	r3, [r3, #8]
 800ad48:	4798      	blx	r3
 800ad4a:	f04f 0301 	mov.w	r3, #1
 800ad4e:	f884 34f8 	strb.w	r3, [r4, #1272]	; 0x4f8
 800ad52:	f885 3036 	strb.w	r3, [r5, #54]	; 0x36
 800ad56:	e75a      	b.n	800ac0e <E131Bridge::HandleDmx()+0x17a>
 800ad58:	f1bb 0f00 	cmp.w	fp, #0
 800ad5c:	d096      	beq.n	800ac8c <E131Bridge::HandleDmx()+0x1f8>
 800ad5e:	f1b8 0f00 	cmp.w	r8, #0
 800ad62:	d0ce      	beq.n	800ad02 <E131Bridge::HandleDmx()+0x26e>
 800ad64:	f894 30eb 	ldrb.w	r3, [r4, #235]	; 0xeb
 800ad68:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c
 800ad6c:	e79b      	b.n	800aca6 <E131Bridge::HandleDmx()+0x212>
 800ad6e:	bf00      	nop
 800ad70:	08016b5b 	stmdaeq	r1, {r0, r1, r3, r4, r6, r8, r9, fp, sp, lr}

0800ad74 <E131Bridge::IsValidRoot()>:
 800ad74:	4a0d      	ldr	r2, [pc, #52]	; (800adac <E131Bridge::IsValidRoot()+0x38>)
 800ad76:	b530      	push	{r4, r5, lr}
 800ad78:	f100 0380 	add.w	r3, r0, #128	; 0x80
 800ad7c:	f100 058c 	add.w	r5, r0, #140	; 0x8c
 800ad80:	42ab      	cmp	r3, r5
 800ad82:	d007      	beq.n	800ad94 <E131Bridge::IsValidRoot()+0x20>
 800ad84:	f813 4b01 	ldrb.w	r4, [r3], #1
 800ad88:	f812 1b01 	ldrb.w	r1, [r2], #1
 800ad8c:	428c      	cmp	r4, r1
 800ad8e:	d0f7      	beq.n	800ad80 <E131Bridge::IsValidRoot()+0xc>
 800ad90:	2000      	movs	r0, #0
 800ad92:	e008      	b.n	800ada6 <E131Bridge::IsValidRoot()+0x32>
 800ad94:	f8d0 008e 	ldr.w	r0, [r0, #142]	; 0x8e
 800ad98:	f1b0 6f80 	cmp.w	r0, #67108864	; 0x4000000
 800ad9c:	d004      	beq.n	800ada8 <E131Bridge::IsValidRoot()+0x34>
 800ad9e:	f100 4378 	add.w	r3, r0, #4160749568	; 0xf8000000
 800ada2:	4258      	negs	r0, r3
 800ada4:	4158      	adcs	r0, r3
 800ada6:	bd30      	pop	{r4, r5, pc}
 800ada8:	2001      	movs	r0, #1
 800adaa:	e7fc      	b.n	800ada6 <E131Bridge::IsValidRoot()+0x32>
 800adac:	08016d1b 	stmdaeq	r1, {r0, r1, r3, r4, r8, sl, fp, sp, lr}

0800adb0 <E131Bridge::IsValidDataPacket()>:
 800adb0:	f890 30f1 	ldrb.w	r3, [r0, #241]	; 0xf1
 800adb4:	2b02      	cmp	r3, #2
 800adb6:	d10d      	bne.n	800add4 <E131Bridge::IsValidDataPacket()+0x24>
 800adb8:	f890 30f2 	ldrb.w	r3, [r0, #242]	; 0xf2
 800adbc:	2ba1      	cmp	r3, #161	; 0xa1
 800adbe:	d109      	bne.n	800add4 <E131Bridge::IsValidDataPacket()+0x24>
 800adc0:	f8b0 30f3 	ldrh.w	r3, [r0, #243]	; 0xf3
 800adc4:	b933      	cbnz	r3, 800add4 <E131Bridge::IsValidDataPacket()+0x24>
 800adc6:	f8b0 00f5 	ldrh.w	r0, [r0, #245]	; 0xf5
 800adca:	f5a0 7380 	sub.w	r3, r0, #256	; 0x100
 800adce:	4258      	negs	r0, r3
 800add0:	4158      	adcs	r0, r3
 800add2:	4770      	bx	lr
 800add4:	2000      	movs	r0, #0
 800add6:	4770      	bx	lr

0800add8 <E131Bridge::Run()>:
 800add8:	b530      	push	{r4, r5, lr}
 800adda:	4601      	mov	r1, r0
 800addc:	4604      	mov	r4, r0
 800adde:	b085      	sub	sp, #20
 800ade0:	f10d 030e 	add.w	r3, sp, #14
 800ade4:	f811 0b7c 	ldrb.w	r0, [r1], #124
 800ade8:	f44f 628f 	mov.w	r2, #1144	; 0x478
 800adec:	9300      	str	r3, [sp, #0]
 800adee:	f104 0378 	add.w	r3, r4, #120	; 0x78
 800adf2:	f004 ffdd 	bl	800fdb0 <udp_recv>
 800adf6:	4b3c      	ldr	r3, [pc, #240]	; (800aee8 <E131Bridge::Run()+0x110>)
 800adf8:	681d      	ldr	r5, [r3, #0]
 800adfa:	60e5      	str	r5, [r4, #12]
 800adfc:	2800      	cmp	r0, #0
 800adfe:	d13b      	bne.n	800ae78 <E131Bridge::Run()+0xa0>
 800ae00:	f894 350b 	ldrb.w	r3, [r4, #1291]	; 0x50b
 800ae04:	b183      	cbz	r3, 800ae28 <E131Bridge::Run()+0x50>
 800ae06:	f894 34f9 	ldrb.w	r3, [r4, #1273]	; 0x4f9
 800ae0a:	bb73      	cbnz	r3, 800ae6a <E131Bridge::Run()+0x92>
 800ae0c:	6923      	ldr	r3, [r4, #16]
 800ae0e:	1aed      	subs	r5, r5, r3
 800ae10:	f640 13c3 	movw	r3, #2499	; 0x9c3
 800ae14:	429d      	cmp	r5, r3
 800ae16:	d928      	bls.n	800ae6a <E131Bridge::Run()+0x92>
 800ae18:	6863      	ldr	r3, [r4, #4]
 800ae1a:	b9eb      	cbnz	r3, 800ae58 <E131Bridge::Run()+0x80>
 800ae1c:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800ae20:	f023 0302 	bic.w	r3, r3, #2
 800ae24:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 800ae28:	6963      	ldr	r3, [r4, #20]
 800ae2a:	b12b      	cbz	r3, 800ae38 <E131Bridge::Run()+0x60>
 800ae2c:	4620      	mov	r0, r4
 800ae2e:	f000 f94f 	bl	800b0d0 <E131Bridge::HandleDmxIn()>
 800ae32:	4620      	mov	r0, r4
 800ae34:	f000 f8ca 	bl	800afcc <E131Bridge::SendDiscoveryPacket()>
 800ae38:	7a23      	ldrb	r3, [r4, #8]
 800ae3a:	b15b      	cbz	r3, 800ae54 <E131Bridge::Run()+0x7c>
 800ae3c:	4b2b      	ldr	r3, [pc, #172]	; (800aeec <E131Bridge::Run()+0x114>)
 800ae3e:	6818      	ldr	r0, [r3, #0]
 800ae40:	6883      	ldr	r3, [r0, #8]
 800ae42:	2b04      	cmp	r3, #4
 800ae44:	d006      	beq.n	800ae54 <E131Bridge::Run()+0x7c>
 800ae46:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800ae4a:	2b00      	cmp	r3, #0
 800ae4c:	d049      	beq.n	800aee2 <E131Bridge::Run()+0x10a>
 800ae4e:	2103      	movs	r1, #3
 800ae50:	f008 faba 	bl	80133c8 <LedBlink::SetMode(ledblink::Mode)>
 800ae54:	b005      	add	sp, #20
 800ae56:	bd30      	pop	{r4, r5, pc}
 800ae58:	f894 34f4 	ldrb.w	r3, [r4, #1268]	; 0x4f4
 800ae5c:	2b00      	cmp	r3, #0
 800ae5e:	d1dd      	bne.n	800ae1c <E131Bridge::Run()+0x44>
 800ae60:	2201      	movs	r2, #1
 800ae62:	4620      	mov	r0, r4
 800ae64:	4611      	mov	r1, r2
 800ae66:	f7ff fd8d 	bl	800a984 <E131Bridge::SetNetworkDataLossCondition(bool, bool)>
 800ae6a:	e9d4 3203 	ldrd	r3, r2, [r4, #12]
 800ae6e:	1a9b      	subs	r3, r3, r2
 800ae70:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800ae74:	d3d8      	bcc.n	800ae28 <E131Bridge::Run()+0x50>
 800ae76:	e7d1      	b.n	800ae1c <E131Bridge::Run()+0x44>
 800ae78:	4620      	mov	r0, r4
 800ae7a:	f7ff ff7b 	bl	800ad74 <E131Bridge::IsValidRoot()>
 800ae7e:	2800      	cmp	r0, #0
 800ae80:	d0e8      	beq.n	800ae54 <E131Bridge::Run()+0x7c>
 800ae82:	2300      	movs	r3, #0
 800ae84:	f884 34f4 	strb.w	r3, [r4, #1268]	; 0x4f4
 800ae88:	f894 34f6 	ldrb.w	r3, [r4, #1270]	; 0x4f6
 800ae8c:	6125      	str	r5, [r4, #16]
 800ae8e:	b15b      	cbz	r3, 800aea8 <E131Bridge::Run()+0xd0>
 800ae90:	f894 34f7 	ldrb.w	r3, [r4, #1271]	; 0x4f7
 800ae94:	b943      	cbnz	r3, 800aea8 <E131Bridge::Run()+0xd0>
 800ae96:	f8d4 24fc 	ldr.w	r2, [r4, #1276]	; 0x4fc
 800ae9a:	1aad      	subs	r5, r5, r2
 800ae9c:	f640 12c3 	movw	r2, #2499	; 0x9c3
 800aea0:	4295      	cmp	r5, r2
 800aea2:	bf88      	it	hi
 800aea4:	f884 34f6 	strbhi.w	r3, [r4, #1270]	; 0x4f6
 800aea8:	6863      	ldr	r3, [r4, #4]
 800aeaa:	2b00      	cmp	r3, #0
 800aeac:	d0bc      	beq.n	800ae28 <E131Bridge::Run()+0x50>
 800aeae:	f8d4 308e 	ldr.w	r3, [r4, #142]	; 0x8e
 800aeb2:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 800aeb6:	ba1a      	rev	r2, r3
 800aeb8:	d108      	bne.n	800aecc <E131Bridge::Run()+0xf4>
 800aeba:	4620      	mov	r0, r4
 800aebc:	f7ff ff78 	bl	800adb0 <E131Bridge::IsValidDataPacket()>
 800aec0:	2800      	cmp	r0, #0
 800aec2:	d0b1      	beq.n	800ae28 <E131Bridge::Run()+0x50>
 800aec4:	4620      	mov	r0, r4
 800aec6:	f7ff fde5 	bl	800aa94 <E131Bridge::HandleDmx()>
 800aeca:	e7ad      	b.n	800ae28 <E131Bridge::Run()+0x50>
 800aecc:	2a08      	cmp	r2, #8
 800aece:	d1ab      	bne.n	800ae28 <E131Bridge::Run()+0x50>
 800aed0:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800aed4:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800aed8:	d1a6      	bne.n	800ae28 <E131Bridge::Run()+0x50>
 800aeda:	4620      	mov	r0, r4
 800aedc:	f000 f996 	bl	800b20c <E131Bridge::HandleSynchronization()>
 800aee0:	e7a2      	b.n	800ae28 <E131Bridge::Run()+0x50>
 800aee2:	2102      	movs	r1, #2
 800aee4:	e7b4      	b.n	800ae50 <E131Bridge::Run()+0x78>
 800aee6:	bf00      	nop
 800aee8:	20013df4 	strdcs	r3, [r1], -r4
 800aeec:	20013dd0 	ldrdcs	r3, [r1], -r0

0800aef0 <E131Bridge::FillDiscoveryPacket()>:
 800aef0:	2200      	movs	r2, #0
 800aef2:	f890 350a 	ldrb.w	r3, [r0, #1290]	; 0x50a
 800aef6:	b510      	push	{r4, lr}
 800aef8:	333c      	adds	r3, #60	; 0x3c
 800aefa:	005b      	lsls	r3, r3, #1
 800aefc:	f8a0 3504 	strh.w	r3, [r0, #1284]	; 0x504
 800af00:	69c3      	ldr	r3, [r0, #28]
 800af02:	f503 618f 	add.w	r1, r3, #1144	; 0x478
 800af06:	428b      	cmp	r3, r1
 800af08:	d002      	beq.n	800af10 <E131Bridge::FillDiscoveryPacket()+0x20>
 800af0a:	f803 2b01 	strb.w	r2, [r3], #1
 800af0e:	e7fa      	b.n	800af06 <E131Bridge::FillDiscoveryPacket()+0x16>
 800af10:	69c3      	ldr	r3, [r0, #28]
 800af12:	492d      	ldr	r1, [pc, #180]	; (800afc8 <E131Bridge::FillDiscoveryPacket()+0xd8>)
 800af14:	701a      	strb	r2, [r3, #0]
 800af16:	2210      	movs	r2, #16
 800af18:	705a      	strb	r2, [r3, #1]
 800af1a:	1d1a      	adds	r2, r3, #4
 800af1c:	3310      	adds	r3, #16
 800af1e:	4293      	cmp	r3, r2
 800af20:	d004      	beq.n	800af2c <E131Bridge::FillDiscoveryPacket()+0x3c>
 800af22:	f811 4b01 	ldrb.w	r4, [r1], #1
 800af26:	f802 4b01 	strb.w	r4, [r2], #1
 800af2a:	e7f8      	b.n	800af1e <E131Bridge::FillDiscoveryPacket()+0x2e>
 800af2c:	f890 250a 	ldrb.w	r2, [r0, #1290]	; 0x50a
 800af30:	69c3      	ldr	r3, [r0, #28]
 800af32:	3234      	adds	r2, #52	; 0x34
 800af34:	0052      	lsls	r2, r2, #1
 800af36:	f442 42e0 	orr.w	r2, r2, #28672	; 0x7000
 800af3a:	ba52      	rev16	r2, r2
 800af3c:	821a      	strh	r2, [r3, #16]
 800af3e:	2200      	movs	r2, #0
 800af40:	749a      	strb	r2, [r3, #18]
 800af42:	74da      	strb	r2, [r3, #19]
 800af44:	751a      	strb	r2, [r3, #20]
 800af46:	2208      	movs	r2, #8
 800af48:	f100 0124 	add.w	r1, r0, #36	; 0x24
 800af4c:	755a      	strb	r2, [r3, #21]
 800af4e:	f100 0434 	add.w	r4, r0, #52	; 0x34
 800af52:	3316      	adds	r3, #22
 800af54:	42a1      	cmp	r1, r4
 800af56:	d004      	beq.n	800af62 <E131Bridge::FillDiscoveryPacket()+0x72>
 800af58:	f811 2b01 	ldrb.w	r2, [r1], #1
 800af5c:	f803 2b01 	strb.w	r2, [r3], #1
 800af60:	e7f8      	b.n	800af54 <E131Bridge::FillDiscoveryPacket()+0x64>
 800af62:	f890 250a 	ldrb.w	r2, [r0, #1290]	; 0x50a
 800af66:	69c3      	ldr	r3, [r0, #28]
 800af68:	3229      	adds	r2, #41	; 0x29
 800af6a:	0052      	lsls	r2, r2, #1
 800af6c:	f442 42e0 	orr.w	r2, r2, #28672	; 0x7000
 800af70:	ba52      	rev16	r2, r2
 800af72:	84da      	strh	r2, [r3, #38]	; 0x26
 800af74:	2200      	movs	r2, #0
 800af76:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 800af7a:	f883 2029 	strb.w	r2, [r3, #41]	; 0x29
 800af7e:	f883 202a 	strb.w	r2, [r3, #42]	; 0x2a
 800af82:	2202      	movs	r2, #2
 800af84:	332c      	adds	r3, #44	; 0x2c
 800af86:	f803 2c01 	strb.w	r2, [r3, #-1]
 800af8a:	f100 0474 	add.w	r4, r0, #116	; 0x74
 800af8e:	42a1      	cmp	r1, r4
 800af90:	d004      	beq.n	800af9c <E131Bridge::FillDiscoveryPacket()+0xac>
 800af92:	f811 2b01 	ldrb.w	r2, [r1], #1
 800af96:	f803 2b01 	strb.w	r2, [r3], #1
 800af9a:	e7f8      	b.n	800af8e <E131Bridge::FillDiscoveryPacket()+0x9e>
 800af9c:	f890 350a 	ldrb.w	r3, [r0, #1290]	; 0x50a
 800afa0:	69c2      	ldr	r2, [r0, #28]
 800afa2:	3304      	adds	r3, #4
 800afa4:	005b      	lsls	r3, r3, #1
 800afa6:	f443 43e0 	orr.w	r3, r3, #28672	; 0x7000
 800afaa:	ba5b      	rev16	r3, r3
 800afac:	f8a2 3070 	strh.w	r3, [r2, #112]	; 0x70
 800afb0:	2300      	movs	r3, #0
 800afb2:	f882 3072 	strb.w	r3, [r2, #114]	; 0x72
 800afb6:	f882 3073 	strb.w	r3, [r2, #115]	; 0x73
 800afba:	f882 3074 	strb.w	r3, [r2, #116]	; 0x74
 800afbe:	2301      	movs	r3, #1
 800afc0:	f882 3075 	strb.w	r3, [r2, #117]	; 0x75
 800afc4:	bd10      	pop	{r4, pc}
 800afc6:	bf00      	nop
 800afc8:	08016d1b 	stmdaeq	r1, {r0, r1, r3, r4, r8, sl, fp, sp, lr}

0800afcc <E131Bridge::SendDiscoveryPacket()>:
 800afcc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800afce:	f242 710f 	movw	r1, #9999	; 0x270f
 800afd2:	68c2      	ldr	r2, [r0, #12]
 800afd4:	f8d0 3500 	ldr.w	r3, [r0, #1280]	; 0x500
 800afd8:	4604      	mov	r4, r0
 800afda:	1ad3      	subs	r3, r2, r3
 800afdc:	428b      	cmp	r3, r1
 800afde:	d924      	bls.n	800b02a <E131Bridge::SendDiscoveryPacket()+0x5e>
 800afe0:	f890 350a 	ldrb.w	r3, [r0, #1290]	; 0x50a
 800afe4:	f8c0 2500 	str.w	r2, [r0, #1280]	; 0x500
 800afe8:	b1ab      	cbz	r3, 800b016 <E131Bridge::SendDiscoveryPacket()+0x4a>
 800afea:	2500      	movs	r5, #0
 800afec:	462e      	mov	r6, r5
 800afee:	2300      	movs	r3, #0
 800aff0:	4629      	mov	r1, r5
 800aff2:	4620      	mov	r0, r4
 800aff4:	f10d 020e 	add.w	r2, sp, #14
 800aff8:	f7ff fc22 	bl	800a840 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 800affc:	b140      	cbz	r0, 800b010 <E131Bridge::SendDiscoveryPacket()+0x44>
 800affe:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800b002:	69e2      	ldr	r2, [r4, #28]
 800b004:	f106 013c 	add.w	r1, r6, #60	; 0x3c
 800b008:	ba5b      	rev16	r3, r3
 800b00a:	f822 3011 	strh.w	r3, [r2, r1, lsl #1]
 800b00e:	3601      	adds	r6, #1
 800b010:	3501      	adds	r5, #1
 800b012:	2d08      	cmp	r5, #8
 800b014:	d1eb      	bne.n	800afee <E131Bridge::SendDiscoveryPacket()+0x22>
 800b016:	f44f 53ae 	mov.w	r3, #5568	; 0x15c0
 800b01a:	f8b4 2504 	ldrh.w	r2, [r4, #1284]	; 0x504
 800b01e:	9300      	str	r3, [sp, #0]
 800b020:	69e1      	ldr	r1, [r4, #28]
 800b022:	6a23      	ldr	r3, [r4, #32]
 800b024:	7820      	ldrb	r0, [r4, #0]
 800b026:	f004 ff1f 	bl	800fe68 <udp_send>
 800b02a:	b004      	add	sp, #16
 800b02c:	bd70      	pop	{r4, r5, r6, pc}

0800b02e <memcpy.isra.0>:
 800b02e:	3801      	subs	r0, #1
 800b030:	440a      	add	r2, r1
 800b032:	4291      	cmp	r1, r2
 800b034:	d004      	beq.n	800b040 <memcpy.isra.0+0x12>
 800b036:	f811 3b01 	ldrb.w	r3, [r1], #1
 800b03a:	f800 3f01 	strb.w	r3, [r0, #1]!
 800b03e:	e7f8      	b.n	800b032 <memcpy.isra.0+0x4>
 800b040:	4770      	bx	lr
	...

0800b044 <E131Bridge::FillDataPacket()>:
 800b044:	b570      	push	{r4, r5, r6, lr}
 800b046:	2400      	movs	r4, #0
 800b048:	2610      	movs	r6, #16
 800b04a:	4605      	mov	r5, r0
 800b04c:	6980      	ldr	r0, [r0, #24]
 800b04e:	220c      	movs	r2, #12
 800b050:	7046      	strb	r6, [r0, #1]
 800b052:	7004      	strb	r4, [r0, #0]
 800b054:	7084      	strb	r4, [r0, #2]
 800b056:	70c4      	strb	r4, [r0, #3]
 800b058:	491c      	ldr	r1, [pc, #112]	; (800b0cc <E131Bridge::FillDataPacket()+0x88>)
 800b05a:	3004      	adds	r0, #4
 800b05c:	f7ff ffe7 	bl	800b02e <memcpy.isra.0>
 800b060:	2304      	movs	r3, #4
 800b062:	4632      	mov	r2, r6
 800b064:	2602      	movs	r6, #2
 800b066:	69a8      	ldr	r0, [r5, #24]
 800b068:	f105 0124 	add.w	r1, r5, #36	; 0x24
 800b06c:	7543      	strb	r3, [r0, #21]
 800b06e:	7484      	strb	r4, [r0, #18]
 800b070:	74c4      	strb	r4, [r0, #19]
 800b072:	7504      	strb	r4, [r0, #20]
 800b074:	3016      	adds	r0, #22
 800b076:	f7ff ffda 	bl	800b02e <memcpy.isra.0>
 800b07a:	69a8      	ldr	r0, [r5, #24]
 800b07c:	2240      	movs	r2, #64	; 0x40
 800b07e:	f880 4028 	strb.w	r4, [r0, #40]	; 0x28
 800b082:	f880 4029 	strb.w	r4, [r0, #41]	; 0x29
 800b086:	f880 402a 	strb.w	r4, [r0, #42]	; 0x2a
 800b08a:	f880 602b 	strb.w	r6, [r0, #43]	; 0x2b
 800b08e:	f105 0134 	add.w	r1, r5, #52	; 0x34
 800b092:	302c      	adds	r0, #44	; 0x2c
 800b094:	f7ff ffcb 	bl	800b02e <memcpy.isra.0>
 800b098:	22a1      	movs	r2, #161	; 0xa1
 800b09a:	69ab      	ldr	r3, [r5, #24]
 800b09c:	f883 4070 	strb.w	r4, [r3, #112]	; 0x70
 800b0a0:	f883 406d 	strb.w	r4, [r3, #109]	; 0x6d
 800b0a4:	f883 406e 	strb.w	r4, [r3, #110]	; 0x6e
 800b0a8:	69ab      	ldr	r3, [r5, #24]
 800b0aa:	f883 6075 	strb.w	r6, [r3, #117]	; 0x75
 800b0ae:	69ab      	ldr	r3, [r5, #24]
 800b0b0:	f883 2076 	strb.w	r2, [r3, #118]	; 0x76
 800b0b4:	2201      	movs	r2, #1
 800b0b6:	69ab      	ldr	r3, [r5, #24]
 800b0b8:	f883 4077 	strb.w	r4, [r3, #119]	; 0x77
 800b0bc:	f883 4078 	strb.w	r4, [r3, #120]	; 0x78
 800b0c0:	f883 4079 	strb.w	r4, [r3, #121]	; 0x79
 800b0c4:	f883 207a 	strb.w	r2, [r3, #122]	; 0x7a
 800b0c8:	bd70      	pop	{r4, r5, r6, pc}
 800b0ca:	bf00      	nop
 800b0cc:	08016d1b 	stmdaeq	r1, {r0, r1, r3, r4, r8, sl, fp, sp, lr}

0800b0d0 <E131Bridge::HandleDmxIn()>:
 800b0d0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b0d4:	4604      	mov	r4, r0
 800b0d6:	4605      	mov	r5, r0
 800b0d8:	2600      	movs	r6, #0
 800b0da:	4f4a      	ldr	r7, [pc, #296]	; (800b204 <E131Bridge::HandleDmxIn()+0x134>)
 800b0dc:	f8df 8128 	ldr.w	r8, [pc, #296]	; 800b208 <E131Bridge::HandleDmxIn()+0x138>
 800b0e0:	b085      	sub	sp, #20
 800b0e2:	f895 3732 	ldrb.w	r3, [r5, #1842]	; 0x732
 800b0e6:	2b00      	cmp	r3, #0
 800b0e8:	d061      	beq.n	800b1ae <E131Bridge::HandleDmxIn()+0xde>
 800b0ea:	6960      	ldr	r0, [r4, #20]
 800b0ec:	4631      	mov	r1, r6
 800b0ee:	6803      	ldr	r3, [r0, #0]
 800b0f0:	aa02      	add	r2, sp, #8
 800b0f2:	f8d3 9010 	ldr.w	r9, [r3, #16]
 800b0f6:	ab03      	add	r3, sp, #12
 800b0f8:	47c8      	blx	r9
 800b0fa:	4601      	mov	r1, r0
 800b0fc:	2800      	cmp	r0, #0
 800b0fe:	d05e      	beq.n	800b1be <E131Bridge::HandleDmxIn()+0xee>
 800b100:	9b02      	ldr	r3, [sp, #8]
 800b102:	69a0      	ldr	r0, [r4, #24]
 800b104:	b29b      	uxth	r3, r3
 800b106:	f103 026d 	add.w	r2, r3, #109	; 0x6d
 800b10a:	f442 42e0 	orr.w	r2, r2, #28672	; 0x7000
 800b10e:	ba52      	rev16	r2, r2
 800b110:	8202      	strh	r2, [r0, #16]
 800b112:	f103 0257 	add.w	r2, r3, #87	; 0x57
 800b116:	f442 42e0 	orr.w	r2, r2, #28672	; 0x7000
 800b11a:	ba52      	rev16	r2, r2
 800b11c:	84c2      	strh	r2, [r0, #38]	; 0x26
 800b11e:	f895 2739 	ldrb.w	r2, [r5, #1849]	; 0x739
 800b122:	330a      	adds	r3, #10
 800b124:	f880 206c 	strb.w	r2, [r0, #108]	; 0x6c
 800b128:	f895 2738 	ldrb.w	r2, [r5, #1848]	; 0x738
 800b12c:	f443 43e0 	orr.w	r3, r3, #28672	; 0x7000
 800b130:	1c50      	adds	r0, r2, #1
 800b132:	f885 0738 	strb.w	r0, [r5, #1848]	; 0x738
 800b136:	69a0      	ldr	r0, [r4, #24]
 800b138:	ba5b      	rev16	r3, r3
 800b13a:	f880 206f 	strb.w	r2, [r0, #111]	; 0x6f
 800b13e:	f8b5 2730 	ldrh.w	r2, [r5, #1840]	; 0x730
 800b142:	69a0      	ldr	r0, [r4, #24]
 800b144:	ba52      	rev16	r2, r2
 800b146:	f8a0 2071 	strh.w	r2, [r0, #113]	; 0x71
 800b14a:	f8a0 3073 	strh.w	r3, [r0, #115]	; 0x73
 800b14e:	9a02      	ldr	r2, [sp, #8]
 800b150:	307d      	adds	r0, #125	; 0x7d
 800b152:	f7ff ff6c 	bl	800b02e <memcpy.isra.0>
 800b156:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800b15a:	69a1      	ldr	r1, [r4, #24]
 800b15c:	ba53      	rev16	r3, r2
 800b15e:	f8a1 307b 	strh.w	r3, [r1, #123]	; 0x7b
 800b162:	f44f 53ae 	mov.w	r3, #5568	; 0x15c0
 800b166:	327d      	adds	r2, #125	; 0x7d
 800b168:	9300      	str	r3, [sp, #0]
 800b16a:	f8d5 3734 	ldr.w	r3, [r5, #1844]	; 0x734
 800b16e:	b292      	uxth	r2, r2
 800b170:	7820      	ldrb	r0, [r4, #0]
 800b172:	f004 fe79 	bl	800fe68 <udp_send>
 800b176:	2201      	movs	r2, #1
 800b178:	6839      	ldr	r1, [r7, #0]
 800b17a:	fa02 f306 	lsl.w	r3, r2, r6
 800b17e:	ea33 0001 	bics.w	r0, r3, r1
 800b182:	d014      	beq.n	800b1ae <E131Bridge::HandleDmxIn()+0xde>
 800b184:	4319      	orrs	r1, r3
 800b186:	6039      	str	r1, [r7, #0]
 800b188:	f894 150d 	ldrb.w	r1, [r4, #1293]	; 0x50d
 800b18c:	4311      	orrs	r1, r2
 800b18e:	f884 150d 	strb.w	r1, [r4, #1293]	; 0x50d
 800b192:	fab3 f383 	clz	r3, r3
 800b196:	b2db      	uxtb	r3, r3
 800b198:	3b17      	subs	r3, #23
 800b19a:	4093      	lsls	r3, r2
 800b19c:	fa02 f303 	lsl.w	r3, r2, r3
 800b1a0:	f8d8 2000 	ldr.w	r2, [r8]
 800b1a4:	4313      	orrs	r3, r2
 800b1a6:	f483 1360 	eor.w	r3, r3, #3670016	; 0x380000
 800b1aa:	f8c8 3000 	str.w	r3, [r8]
 800b1ae:	3601      	adds	r6, #1
 800b1b0:	2e08      	cmp	r6, #8
 800b1b2:	f105 050c 	add.w	r5, r5, #12
 800b1b6:	d194      	bne.n	800b0e2 <E131Bridge::HandleDmxIn()+0x12>
 800b1b8:	b005      	add	sp, #20
 800b1ba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b1be:	9b03      	ldr	r3, [sp, #12]
 800b1c0:	2b00      	cmp	r3, #0
 800b1c2:	d1f4      	bne.n	800b1ae <E131Bridge::HandleDmxIn()+0xde>
 800b1c4:	2201      	movs	r2, #1
 800b1c6:	6839      	ldr	r1, [r7, #0]
 800b1c8:	fa02 f306 	lsl.w	r3, r2, r6
 800b1cc:	ea21 0103 	bic.w	r1, r1, r3
 800b1d0:	6039      	str	r1, [r7, #0]
 800b1d2:	fab3 f383 	clz	r3, r3
 800b1d6:	b2db      	uxtb	r3, r3
 800b1d8:	3b17      	subs	r3, #23
 800b1da:	4093      	lsls	r3, r2
 800b1dc:	fa02 f303 	lsl.w	r3, r2, r3
 800b1e0:	f8d8 2000 	ldr.w	r2, [r8]
 800b1e4:	ea22 0203 	bic.w	r2, r2, r3
 800b1e8:	f482 1260 	eor.w	r2, r2, #3670016	; 0x380000
 800b1ec:	f8c8 2000 	str.w	r2, [r8]
 800b1f0:	2900      	cmp	r1, #0
 800b1f2:	d1dc      	bne.n	800b1ae <E131Bridge::HandleDmxIn()+0xde>
 800b1f4:	f894 350d 	ldrb.w	r3, [r4, #1293]	; 0x50d
 800b1f8:	f023 0301 	bic.w	r3, r3, #1
 800b1fc:	f884 350d 	strb.w	r3, [r4, #1293]	; 0x50d
 800b200:	e7d5      	b.n	800b1ae <E131Bridge::HandleDmxIn()+0xde>
 800b202:	bf00      	nop
 800b204:	20003140 	andcs	r3, r0, r0, asr #2
 800b208:	20013ddc 	ldrdcs	r3, [r1], -ip

0800b20c <E131Bridge::HandleSynchronization()>:
 800b20c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b210:	f8b0 30a9 	ldrh.w	r3, [r0, #169]	; 0xa9
 800b214:	f8b0 2506 	ldrh.w	r2, [r0, #1286]	; 0x506
 800b218:	ba5b      	rev16	r3, r3
 800b21a:	b29b      	uxth	r3, r3
 800b21c:	429a      	cmp	r2, r3
 800b21e:	4604      	mov	r4, r0
 800b220:	d00a      	beq.n	800b238 <E131Bridge::HandleSynchronization()+0x2c>
 800b222:	f8b0 2508 	ldrh.w	r2, [r0, #1288]	; 0x508
 800b226:	429a      	cmp	r2, r3
 800b228:	d006      	beq.n	800b238 <E131Bridge::HandleSynchronization()+0x2c>
 800b22a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b22e:	4b23      	ldr	r3, [pc, #140]	; (800b2bc <E131Bridge::HandleSynchronization()+0xb0>)
 800b230:	2102      	movs	r1, #2
 800b232:	6818      	ldr	r0, [r3, #0]
 800b234:	f008 b8c8 	b.w	80133c8 <LedBlink::SetMode(ledblink::Mode)>
 800b238:	2500      	movs	r5, #0
 800b23a:	4627      	mov	r7, r4
 800b23c:	46a9      	mov	r9, r5
 800b23e:	68e3      	ldr	r3, [r4, #12]
 800b240:	4e1f      	ldr	r6, [pc, #124]	; (800b2c0 <E131Bridge::HandleSynchronization()+0xb4>)
 800b242:	f8df 8080 	ldr.w	r8, [pc, #128]	; 800b2c4 <E131Bridge::HandleSynchronization()+0xb8>
 800b246:	f8c4 34fc 	str.w	r3, [r4, #1276]	; 0x4fc
 800b24a:	f897 3512 	ldrb.w	r3, [r7, #1298]	; 0x512
 800b24e:	b323      	cbz	r3, 800b29a <E131Bridge::HandleSynchronization()+0x8e>
 800b250:	f8d8 3000 	ldr.w	r3, [r8]
 800b254:	6860      	ldr	r0, [r4, #4]
 800b256:	07da      	lsls	r2, r3, #31
 800b258:	bf5c      	itt	pl
 800b25a:	2301      	movpl	r3, #1
 800b25c:	f8c8 3000 	strpl.w	r3, [r8]
 800b260:	6803      	ldr	r3, [r0, #0]
 800b262:	4629      	mov	r1, r5
 800b264:	f8d3 a010 	ldr.w	sl, [r3, #16]
 800b268:	f506 6280 	add.w	r2, r6, #1024	; 0x400
 800b26c:	f8d6 3600 	ldr.w	r3, [r6, #1536]	; 0x600
 800b270:	47d0      	blx	sl
 800b272:	f897 3552 	ldrb.w	r3, [r7, #1362]	; 0x552
 800b276:	b93b      	cbnz	r3, 800b288 <E131Bridge::HandleSynchronization()+0x7c>
 800b278:	6860      	ldr	r0, [r4, #4]
 800b27a:	4629      	mov	r1, r5
 800b27c:	6803      	ldr	r3, [r0, #0]
 800b27e:	689b      	ldr	r3, [r3, #8]
 800b280:	4798      	blx	r3
 800b282:	2301      	movs	r3, #1
 800b284:	f887 3552 	strb.w	r3, [r7, #1362]	; 0x552
 800b288:	f8d8 3000 	ldr.w	r3, [r8]
 800b28c:	f8c6 9600 	str.w	r9, [r6, #1536]	; 0x600
 800b290:	07db      	lsls	r3, r3, #31
 800b292:	bf5c      	itt	pl
 800b294:	2301      	movpl	r3, #1
 800b296:	f8c8 3000 	strpl.w	r3, [r8]
 800b29a:	3501      	adds	r5, #1
 800b29c:	2d08      	cmp	r5, #8
 800b29e:	f107 0744 	add.w	r7, r7, #68	; 0x44
 800b2a2:	f206 6604 	addw	r6, r6, #1540	; 0x604
 800b2a6:	d1d0      	bne.n	800b24a <E131Bridge::HandleSynchronization()+0x3e>
 800b2a8:	6f60      	ldr	r0, [r4, #116]	; 0x74
 800b2aa:	b120      	cbz	r0, 800b2b6 <E131Bridge::HandleSynchronization()+0xaa>
 800b2ac:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b2b0:	6803      	ldr	r3, [r0, #0]
 800b2b2:	689b      	ldr	r3, [r3, #8]
 800b2b4:	4718      	bx	r3
 800b2b6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800b2ba:	bf00      	nop
 800b2bc:	20013dd0 	ldrdcs	r3, [r1], -r0
 800b2c0:	2000011c 	andcs	r0, r0, ip, lsl r1
 800b2c4:	20000118 	andcs	r0, r0, r8, lsl r1

0800b2c8 <E131Bridge::Print()>:
 800b2c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b2cc:	2500      	movs	r5, #0
 800b2ce:	4604      	mov	r4, r0
 800b2d0:	b08c      	sub	sp, #48	; 0x30
 800b2d2:	a902      	add	r1, sp, #8
 800b2d4:	3024      	adds	r0, #36	; 0x24
 800b2d6:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800b2da:	f001 fddd 	bl	800ce98 <uuid_unparse>
 800b2de:	482c      	ldr	r0, [pc, #176]	; (800b390 <E131Bridge::Print()+0xc8>)
 800b2e0:	f7fd fde4 	bl	8008eac <printf>
 800b2e4:	4b2b      	ldr	r3, [pc, #172]	; (800b394 <E131Bridge::Print()+0xcc>)
 800b2e6:	482c      	ldr	r0, [pc, #176]	; (800b398 <E131Bridge::Print()+0xd0>)
 800b2e8:	7819      	ldrb	r1, [r3, #0]
 800b2ea:	785a      	ldrb	r2, [r3, #1]
 800b2ec:	f7fd fdde 	bl	8008eac <printf>
 800b2f0:	482a      	ldr	r0, [pc, #168]	; (800b39c <E131Bridge::Print()+0xd4>)
 800b2f2:	a902      	add	r1, sp, #8
 800b2f4:	f7fd fdda 	bl	8008eac <printf>
 800b2f8:	f894 350b 	ldrb.w	r3, [r4, #1291]	; 0x50b
 800b2fc:	b303      	cbz	r3, 800b340 <E131Bridge::Print()+0x78>
 800b2fe:	4828      	ldr	r0, [pc, #160]	; (800b3a0 <E131Bridge::Print()+0xd8>)
 800b300:	f7fd fdd4 	bl	8008eac <printf>
 800b304:	4e27      	ldr	r6, [pc, #156]	; (800b3a4 <E131Bridge::Print()+0xdc>)
 800b306:	4f28      	ldr	r7, [pc, #160]	; (800b3a8 <E131Bridge::Print()+0xe0>)
 800b308:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 800b3ac <E131Bridge::Print()+0xe4>
 800b30c:	2301      	movs	r3, #1
 800b30e:	4629      	mov	r1, r5
 800b310:	4620      	mov	r0, r4
 800b312:	f10d 0206 	add.w	r2, sp, #6
 800b316:	f7ff fa93 	bl	800a840 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 800b31a:	b170      	cbz	r0, 800b33a <E131Bridge::Print()+0x72>
 800b31c:	2344      	movs	r3, #68	; 0x44
 800b31e:	436b      	muls	r3, r5
 800b320:	f204 524c 	addw	r2, r4, #1356	; 0x54c
 800b324:	58d3      	ldr	r3, [r2, r3]
 800b326:	4629      	mov	r1, r5
 800b328:	2b00      	cmp	r3, #0
 800b32a:	bf0c      	ite	eq
 800b32c:	4633      	moveq	r3, r6
 800b32e:	463b      	movne	r3, r7
 800b330:	4640      	mov	r0, r8
 800b332:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800b336:	f7fd fdb9 	bl	8008eac <printf>
 800b33a:	3501      	adds	r5, #1
 800b33c:	2d08      	cmp	r5, #8
 800b33e:	d1e5      	bne.n	800b30c <E131Bridge::Print()+0x44>
 800b340:	f894 350a 	ldrb.w	r3, [r4, #1290]	; 0x50a
 800b344:	b1d3      	cbz	r3, 800b37c <E131Bridge::Print()+0xb4>
 800b346:	481a      	ldr	r0, [pc, #104]	; (800b3b0 <E131Bridge::Print()+0xe8>)
 800b348:	f7fd fdb0 	bl	8008eac <printf>
 800b34c:	2500      	movs	r5, #0
 800b34e:	4e19      	ldr	r6, [pc, #100]	; (800b3b4 <E131Bridge::Print()+0xec>)
 800b350:	2300      	movs	r3, #0
 800b352:	4629      	mov	r1, r5
 800b354:	4620      	mov	r0, r4
 800b356:	f10d 0206 	add.w	r2, sp, #6
 800b35a:	f7ff fa71 	bl	800a840 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 800b35e:	b150      	cbz	r0, 800b376 <E131Bridge::Print()+0xae>
 800b360:	230c      	movs	r3, #12
 800b362:	436b      	muls	r3, r5
 800b364:	f204 7239 	addw	r2, r4, #1849	; 0x739
 800b368:	5cd3      	ldrb	r3, [r2, r3]
 800b36a:	4629      	mov	r1, r5
 800b36c:	4630      	mov	r0, r6
 800b36e:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800b372:	f7fd fd9b 	bl	8008eac <printf>
 800b376:	3501      	adds	r5, #1
 800b378:	2d08      	cmp	r5, #8
 800b37a:	d1e9      	bne.n	800b350 <E131Bridge::Print()+0x88>
 800b37c:	f894 34fb 	ldrb.w	r3, [r4, #1275]	; 0x4fb
 800b380:	b113      	cbz	r3, 800b388 <E131Bridge::Print()+0xc0>
 800b382:	480d      	ldr	r0, [pc, #52]	; (800b3b8 <E131Bridge::Print()+0xf0>)
 800b384:	f7fd fd92 	bl	8008eac <printf>
 800b388:	b00c      	add	sp, #48	; 0x30
 800b38a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b38e:	bf00      	nop
 800b390:	08016b90 	stmdaeq	r1, {r4, r7, r8, r9, fp, sp, lr}
 800b394:	08016d27 	stmdaeq	r1, {r0, r1, r2, r5, r8, sl, fp, sp, lr}
 800b398:	08016b98 	stmdaeq	r1, {r3, r4, r7, r8, r9, fp, sp, lr}
 800b39c:	08016bab 	stmdaeq	r1, {r0, r1, r3, r5, r7, r8, r9, fp, sp, lr}
 800b3a0:	08016bbb 	stmdaeq	r1, {r0, r1, r3, r4, r5, r7, r8, r9, fp, sp, lr}
 800b3a4:	08016b88 	stmdaeq	r1, {r3, r7, r8, r9, fp, sp, lr}
 800b3a8:	08016b8c 	stmdaeq	r1, {r2, r3, r7, r8, r9, fp, sp, lr}
 800b3ac:	08016bc4 	stmdaeq	r1, {r2, r6, r7, r8, r9, fp, sp, lr}
 800b3b0:	08016be3 	stmdaeq	r1, {r0, r1, r5, r6, r7, r8, r9, fp, sp, lr}
 800b3b4:	08016beb 	stmdaeq	r1, {r0, r1, r3, r5, r6, r7, r8, r9, fp, sp, lr}
 800b3b8:	08016c0a 	stmdaeq	r1, {r1, r3, sl, fp, sp, lr}

0800b3bc <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>:
 800b3bc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b3be:	88c5      	ldrh	r5, [r0, #6]
 800b3c0:	8886      	ldrh	r6, [r0, #4]
 800b3c2:	42b5      	cmp	r5, r6
 800b3c4:	d216      	bcs.n	800b3f4 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x38>
 800b3c6:	4604      	mov	r4, r0
 800b3c8:	6800      	ldr	r0, [r0, #0]
 800b3ca:	4428      	add	r0, r5
 800b3cc:	1b75      	subs	r5, r6, r5
 800b3ce:	7a26      	ldrb	r6, [r4, #8]
 800b3d0:	b923      	cbnz	r3, 800b3dc <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x20>
 800b3d2:	b926      	cbnz	r6, 800b3de <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x22>
 800b3d4:	9200      	str	r2, [sp, #0]
 800b3d6:	460b      	mov	r3, r1
 800b3d8:	4a09      	ldr	r2, [pc, #36]	; (800b400 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x44>)
 800b3da:	e003      	b.n	800b3e4 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800b3dc:	b166      	cbz	r6, 800b3f8 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x3c>
 800b3de:	460b      	mov	r3, r1
 800b3e0:	9200      	str	r2, [sp, #0]
 800b3e2:	4a08      	ldr	r2, [pc, #32]	; (800b404 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x48>)
 800b3e4:	4629      	mov	r1, r5
 800b3e6:	f7fd fd89 	bl	8008efc <snprintf>
 800b3ea:	4285      	cmp	r5, r0
 800b3ec:	bfa2      	ittt	ge
 800b3ee:	88e3      	ldrhge	r3, [r4, #6]
 800b3f0:	181b      	addge	r3, r3, r0
 800b3f2:	80e3      	strhge	r3, [r4, #6]
 800b3f4:	b002      	add	sp, #8
 800b3f6:	bd70      	pop	{r4, r5, r6, pc}
 800b3f8:	9200      	str	r2, [sp, #0]
 800b3fa:	460b      	mov	r3, r1
 800b3fc:	4a02      	ldr	r2, [pc, #8]	; (800b408 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x4c>)
 800b3fe:	e7f1      	b.n	800b3e4 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800b400:	08015dd0 	stmdaeq	r1, {r4, r6, r7, r8, sl, fp, ip, lr}
 800b404:	08015dc5 	stmdaeq	r1, {r0, r2, r6, r7, r8, sl, fp, ip, lr}
 800b408:	08015dd1 	stmdaeq	r1, {r0, r4, r6, r7, r8, sl, fp, ip, lr}

0800b40c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>:
 800b40c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b40e:	460b      	mov	r3, r1
 800b410:	8885      	ldrh	r5, [r0, #4]
 800b412:	88c1      	ldrh	r1, [r0, #6]
 800b414:	42a9      	cmp	r1, r5
 800b416:	d214      	bcs.n	800b442 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x36>
 800b418:	4604      	mov	r4, r0
 800b41a:	6800      	ldr	r0, [r0, #0]
 800b41c:	1a6d      	subs	r5, r5, r1
 800b41e:	4408      	add	r0, r1
 800b420:	7a21      	ldrb	r1, [r4, #8]
 800b422:	b91a      	cbnz	r2, 800b42c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x20>
 800b424:	b919      	cbnz	r1, 800b42e <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x22>
 800b426:	4a0a      	ldr	r2, [pc, #40]	; (800b450 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x44>)
 800b428:	9100      	str	r1, [sp, #0]
 800b42a:	e002      	b.n	800b432 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 800b42c:	b159      	cbz	r1, 800b446 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x3a>
 800b42e:	9200      	str	r2, [sp, #0]
 800b430:	4a08      	ldr	r2, [pc, #32]	; (800b454 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x48>)
 800b432:	4629      	mov	r1, r5
 800b434:	f7fd fd62 	bl	8008efc <snprintf>
 800b438:	4285      	cmp	r5, r0
 800b43a:	bfa2      	ittt	ge
 800b43c:	88e3      	ldrhge	r3, [r4, #6]
 800b43e:	181b      	addge	r3, r3, r0
 800b440:	80e3      	strhge	r3, [r4, #6]
 800b442:	b003      	add	sp, #12
 800b444:	bd30      	pop	{r4, r5, pc}
 800b446:	2201      	movs	r2, #1
 800b448:	9200      	str	r2, [sp, #0]
 800b44a:	4a03      	ldr	r2, [pc, #12]	; (800b458 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x4c>)
 800b44c:	e7f1      	b.n	800b432 <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]+0x26>
 800b44e:	bf00      	nop
 800b450:	08015dbd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r7, r8, sl, fp, ip, lr}
 800b454:	08015db4 	stmdaeq	r1, {r2, r4, r5, r7, r8, sl, fp, ip, lr}
 800b458:	08015dbe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r7, r8, sl, fp, ip, lr}

0800b45c <E131Params::E131Params(E131ParamsStore*)>:
 800b45c:	b510      	push	{r4, lr}
 800b45e:	221a      	movs	r2, #26
 800b460:	4604      	mov	r4, r0
 800b462:	f840 1b04 	str.w	r1, [r0], #4
 800b466:	2100      	movs	r1, #0
 800b468:	f008 f9ac 	bl	80137c4 <memset>
 800b46c:	2300      	movs	r3, #0
 800b46e:	2201      	movs	r2, #1
 800b470:	7323      	strb	r3, [r4, #12]
 800b472:	72e2      	strb	r2, [r4, #11]
 800b474:	73a3      	strb	r3, [r4, #14]
 800b476:	2202      	movs	r2, #2
 800b478:	7423      	strb	r3, [r4, #16]
 800b47a:	74a3      	strb	r3, [r4, #18]
 800b47c:	f246 43ff 	movw	r3, #25855	; 0x64ff
 800b480:	7362      	strb	r2, [r4, #13]
 800b482:	83e3      	strh	r3, [r4, #30]
 800b484:	2203      	movs	r2, #3
 800b486:	f246 4364 	movw	r3, #25700	; 0x6464
 800b48a:	73e2      	strb	r2, [r4, #15]
 800b48c:	8423      	strh	r3, [r4, #32]
 800b48e:	2204      	movs	r2, #4
 800b490:	2364      	movs	r3, #100	; 0x64
 800b492:	4620      	mov	r0, r4
 800b494:	7462      	strb	r2, [r4, #17]
 800b496:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 800b49a:	bd10      	pop	{r4, pc}

0800b49c <E131Params::Load()>:
 800b49c:	b508      	push	{r3, lr}
 800b49e:	2300      	movs	r3, #0
 800b4a0:	4601      	mov	r1, r0
 800b4a2:	6043      	str	r3, [r0, #4]
 800b4a4:	6800      	ldr	r0, [r0, #0]
 800b4a6:	b120      	cbz	r0, 800b4b2 <E131Params::Load()+0x16>
 800b4a8:	6803      	ldr	r3, [r0, #0]
 800b4aa:	3104      	adds	r1, #4
 800b4ac:	68db      	ldr	r3, [r3, #12]
 800b4ae:	4798      	blx	r3
 800b4b0:	2001      	movs	r0, #1
 800b4b2:	bd08      	pop	{r3, pc}

0800b4b4 <E131Params::Load(char const*, unsigned int)>:
 800b4b4:	6803      	ldr	r3, [r0, #0]
 800b4b6:	b1d3      	cbz	r3, 800b4ee <E131Params::Load(char const*, unsigned int)+0x3a>
 800b4b8:	2300      	movs	r3, #0
 800b4ba:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b4bc:	460d      	mov	r5, r1
 800b4be:	4616      	mov	r6, r2
 800b4c0:	4604      	mov	r4, r0
 800b4c2:	6043      	str	r3, [r0, #4]
 800b4c4:	4602      	mov	r2, r0
 800b4c6:	490a      	ldr	r1, [pc, #40]	; (800b4f0 <E131Params::Load(char const*, unsigned int)+0x3c>)
 800b4c8:	4668      	mov	r0, sp
 800b4ca:	f007 fa41 	bl	8012950 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800b4ce:	4632      	mov	r2, r6
 800b4d0:	4629      	mov	r1, r5
 800b4d2:	4668      	mov	r0, sp
 800b4d4:	f007 fa40 	bl	8012958 <ReadConfigFile::Read(char const*, unsigned int)>
 800b4d8:	4621      	mov	r1, r4
 800b4da:	f851 0b04 	ldr.w	r0, [r1], #4
 800b4de:	6803      	ldr	r3, [r0, #0]
 800b4e0:	689b      	ldr	r3, [r3, #8]
 800b4e2:	4798      	blx	r3
 800b4e4:	4668      	mov	r0, sp
 800b4e6:	f007 fa36 	bl	8012956 <ReadConfigFile::~ReadConfigFile()>
 800b4ea:	b002      	add	sp, #8
 800b4ec:	bd70      	pop	{r4, r5, r6, pc}
 800b4ee:	4770      	bx	lr
 800b4f0:	0800b6bd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, r9, sl, ip, sp, pc}

0800b4f4 <E131Params::callbackFunction(char const*)>:
 800b4f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b4f8:	4604      	mov	r4, r0
 800b4fa:	460e      	mov	r6, r1
 800b4fc:	2500      	movs	r5, #0
 800b4fe:	f8df 91a4 	ldr.w	r9, [pc, #420]	; 800b6a4 <E131Params::callbackFunction(char const*)+0x1b0>
 800b502:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 800b6a8 <E131Params::callbackFunction(char const*)+0x1b4>
 800b506:	f8df a1a4 	ldr.w	sl, [pc, #420]	; 800b6ac <E131Params::callbackFunction(char const*)+0x1b8>
 800b50a:	f8df b1a4 	ldr.w	fp, [pc, #420]	; 800b6b0 <E131Params::callbackFunction(char const*)+0x1bc>
 800b50e:	b087      	sub	sp, #28
 800b510:	4649      	mov	r1, r9
 800b512:	4630      	mov	r0, r6
 800b514:	f10d 0202 	add.w	r2, sp, #2
 800b518:	f007 fb0e 	bl	8012b38 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800b51c:	b9c8      	cbnz	r0, 800b552 <E131Params::callbackFunction(char const*)+0x5e>
 800b51e:	f64f 16fe 	movw	r6, #63998	; 0xf9fe
 800b522:	2110      	movs	r1, #16
 800b524:	f8bd 0002 	ldrh.w	r0, [sp, #2]
 800b528:	6863      	ldr	r3, [r4, #4]
 800b52a:	1e42      	subs	r2, r0, #1
 800b52c:	b292      	uxth	r2, r2
 800b52e:	42b2      	cmp	r2, r6
 800b530:	ea4f 0245 	mov.w	r2, r5, lsl #1
 800b534:	fa01 f105 	lsl.w	r1, r1, r5
 800b538:	bf85      	ittet	hi
 800b53a:	1912      	addhi	r2, r2, r4
 800b53c:	3501      	addhi	r5, #1
 800b53e:	1912      	addls	r2, r2, r4
 800b540:	f8a2 500b 	strhhi.w	r5, [r2, #11]
 800b544:	bf8e      	itee	hi
 800b546:	438b      	bichi	r3, r1
 800b548:	f8a2 000b 	strhls.w	r0, [r2, #11]
 800b54c:	430b      	orrls	r3, r1
 800b54e:	6063      	str	r3, [r4, #4]
 800b550:	e05e      	b.n	800b610 <E131Params::callbackFunction(char const*)+0x11c>
 800b552:	2712      	movs	r7, #18
 800b554:	2303      	movs	r3, #3
 800b556:	436f      	muls	r7, r5
 800b558:	9301      	str	r3, [sp, #4]
 800b55a:	4630      	mov	r0, r6
 800b55c:	ab01      	add	r3, sp, #4
 800b55e:	aa02      	add	r2, sp, #8
 800b560:	eb0a 0107 	add.w	r1, sl, r7
 800b564:	f007 fa2c 	bl	80129c0 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800b568:	b9f8      	cbnz	r0, 800b5aa <E131Params::callbackFunction(char const*)+0xb6>
 800b56a:	f44f 7380 	mov.w	r3, #256	; 0x100
 800b56e:	f89d 1008 	ldrb.w	r1, [sp, #8]
 800b572:	40ab      	lsls	r3, r5
 800b574:	f041 0120 	orr.w	r1, r1, #32
 800b578:	296c      	cmp	r1, #108	; 0x6c
 800b57a:	6862      	ldr	r2, [r4, #4]
 800b57c:	4425      	add	r5, r4
 800b57e:	d10f      	bne.n	800b5a0 <E131Params::callbackFunction(char const*)+0xac>
 800b580:	f89d 1009 	ldrb.w	r1, [sp, #9]
 800b584:	f041 0120 	orr.w	r1, r1, #32
 800b588:	2974      	cmp	r1, #116	; 0x74
 800b58a:	d109      	bne.n	800b5a0 <E131Params::callbackFunction(char const*)+0xac>
 800b58c:	f89d 100a 	ldrb.w	r1, [sp, #10]
 800b590:	f041 0120 	orr.w	r1, r1, #32
 800b594:	2970      	cmp	r1, #112	; 0x70
 800b596:	d103      	bne.n	800b5a0 <E131Params::callbackFunction(char const*)+0xac>
 800b598:	2101      	movs	r1, #1
 800b59a:	7529      	strb	r1, [r5, #20]
 800b59c:	4313      	orrs	r3, r2
 800b59e:	e7d6      	b.n	800b54e <E131Params::callbackFunction(char const*)+0x5a>
 800b5a0:	2100      	movs	r1, #0
 800b5a2:	ea22 0303 	bic.w	r3, r2, r3
 800b5a6:	7529      	strb	r1, [r5, #20]
 800b5a8:	e7d1      	b.n	800b54e <E131Params::callbackFunction(char const*)+0x5a>
 800b5aa:	2305      	movs	r3, #5
 800b5ac:	4630      	mov	r0, r6
 800b5ae:	9301      	str	r3, [sp, #4]
 800b5b0:	aa02      	add	r2, sp, #8
 800b5b2:	ab01      	add	r3, sp, #4
 800b5b4:	eb0b 0107 	add.w	r1, fp, r7
 800b5b8:	f007 fa02 	bl	80129c0 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800b5bc:	bb58      	cbnz	r0, 800b616 <E131Params::callbackFunction(char const*)+0x122>
 800b5be:	2301      	movs	r3, #1
 800b5c0:	7fa2      	ldrb	r2, [r4, #30]
 800b5c2:	40ab      	lsls	r3, r5
 800b5c4:	ea22 0303 	bic.w	r3, r2, r3
 800b5c8:	f89d 2008 	ldrb.w	r2, [sp, #8]
 800b5cc:	77a3      	strb	r3, [r4, #30]
 800b5ce:	f042 0220 	orr.w	r2, r2, #32
 800b5d2:	2a69      	cmp	r2, #105	; 0x69
 800b5d4:	d117      	bne.n	800b606 <E131Params::callbackFunction(char const*)+0x112>
 800b5d6:	f89d 2009 	ldrb.w	r2, [sp, #9]
 800b5da:	f042 0220 	orr.w	r2, r2, #32
 800b5de:	2a6e      	cmp	r2, #110	; 0x6e
 800b5e0:	d111      	bne.n	800b606 <E131Params::callbackFunction(char const*)+0x112>
 800b5e2:	f89d 200a 	ldrb.w	r2, [sp, #10]
 800b5e6:	f042 0220 	orr.w	r2, r2, #32
 800b5ea:	2a70      	cmp	r2, #112	; 0x70
 800b5ec:	d10b      	bne.n	800b606 <E131Params::callbackFunction(char const*)+0x112>
 800b5ee:	f89d 200b 	ldrb.w	r2, [sp, #11]
 800b5f2:	f042 0220 	orr.w	r2, r2, #32
 800b5f6:	2a75      	cmp	r2, #117	; 0x75
 800b5f8:	d105      	bne.n	800b606 <E131Params::callbackFunction(char const*)+0x112>
 800b5fa:	f89d 200c 	ldrb.w	r2, [sp, #12]
 800b5fe:	f042 0220 	orr.w	r2, r2, #32
 800b602:	2a74      	cmp	r2, #116	; 0x74
 800b604:	d004      	beq.n	800b610 <E131Params::callbackFunction(char const*)+0x11c>
 800b606:	2201      	movs	r2, #1
 800b608:	fa02 f505 	lsl.w	r5, r2, r5
 800b60c:	432b      	orrs	r3, r5
 800b60e:	77a3      	strb	r3, [r4, #30]
 800b610:	b007      	add	sp, #28
 800b612:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b616:	4641      	mov	r1, r8
 800b618:	4630      	mov	r0, r6
 800b61a:	f10d 0201 	add.w	r2, sp, #1
 800b61e:	f007 fad2 	bl	8012bc6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800b622:	b998      	cbnz	r0, 800b64c <E131Params::callbackFunction(char const*)+0x158>
 800b624:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 800b628:	f89d 1001 	ldrb.w	r1, [sp, #1]
 800b62c:	40aa      	lsls	r2, r5
 800b62e:	1e48      	subs	r0, r1, #1
 800b630:	b2c0      	uxtb	r0, r0
 800b632:	28c7      	cmp	r0, #199	; 0xc7
 800b634:	6863      	ldr	r3, [r4, #4]
 800b636:	4425      	add	r5, r4
 800b638:	d803      	bhi.n	800b642 <E131Params::callbackFunction(char const*)+0x14e>
 800b63a:	2964      	cmp	r1, #100	; 0x64
 800b63c:	d001      	beq.n	800b642 <E131Params::callbackFunction(char const*)+0x14e>
 800b63e:	77e9      	strb	r1, [r5, #31]
 800b640:	e7ac      	b.n	800b59c <E131Params::callbackFunction(char const*)+0xa8>
 800b642:	2164      	movs	r1, #100	; 0x64
 800b644:	ea23 0302 	bic.w	r3, r3, r2
 800b648:	77e9      	strb	r1, [r5, #31]
 800b64a:	e780      	b.n	800b54e <E131Params::callbackFunction(char const*)+0x5a>
 800b64c:	3501      	adds	r5, #1
 800b64e:	2d04      	cmp	r5, #4
 800b650:	f109 0910 	add.w	r9, r9, #16
 800b654:	f108 0812 	add.w	r8, r8, #18
 800b658:	f47f af5a 	bne.w	800b510 <E131Params::callbackFunction(char const*)+0x1c>
 800b65c:	4630      	mov	r0, r6
 800b65e:	4915      	ldr	r1, [pc, #84]	; (800b6b4 <E131Params::callbackFunction(char const*)+0x1c0>)
 800b660:	f10d 0201 	add.w	r2, sp, #1
 800b664:	f007 faaf 	bl	8012bc6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800b668:	b948      	cbnz	r0, 800b67e <E131Params::callbackFunction(char const*)+0x18a>
 800b66a:	f89d 2001 	ldrb.w	r2, [sp, #1]
 800b66e:	6863      	ldr	r3, [r4, #4]
 800b670:	b112      	cbz	r2, 800b678 <E131Params::callbackFunction(char const*)+0x184>
 800b672:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 800b676:	e76a      	b.n	800b54e <E131Params::callbackFunction(char const*)+0x5a>
 800b678:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800b67c:	e767      	b.n	800b54e <E131Params::callbackFunction(char const*)+0x5a>
 800b67e:	4630      	mov	r0, r6
 800b680:	490d      	ldr	r1, [pc, #52]	; (800b6b8 <E131Params::callbackFunction(char const*)+0x1c4>)
 800b682:	f10d 0201 	add.w	r2, sp, #1
 800b686:	f007 fa9e 	bl	8012bc6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800b68a:	2800      	cmp	r0, #0
 800b68c:	d1c0      	bne.n	800b610 <E131Params::callbackFunction(char const*)+0x11c>
 800b68e:	f89d 2001 	ldrb.w	r2, [sp, #1]
 800b692:	6863      	ldr	r3, [r4, #4]
 800b694:	b112      	cbz	r2, 800b69c <E131Params::callbackFunction(char const*)+0x1a8>
 800b696:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800b69a:	e758      	b.n	800b54e <E131Params::callbackFunction(char const*)+0x5a>
 800b69c:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800b6a0:	e755      	b.n	800b54e <E131Params::callbackFunction(char const*)+0x5a>
 800b6a2:	bf00      	nop
 800b6a4:	080179f0 	stmdaeq	r1, {r4, r5, r6, r7, r8, fp, ip, sp, lr}
 800b6a8:	08016cca 	stmdaeq	r1, {r1, r3, r6, r7, sl, fp, sp, lr}
 800b6ac:	08017ac0 	stmdaeq	r1, {r6, r7, r9, fp, ip, sp, lr}
 800b6b0:	08017b23 	stmdaeq	r1, {r0, r1, r5, r8, r9, fp, ip, sp, lr}
 800b6b4:	08016ca8 	stmdaeq	r1, {r3, r5, r7, sl, fp, sp, lr}
 800b6b8:	08016c92 	stmdaeq	r1, {r1, r4, r7, sl, fp, sp, lr}

0800b6bc <E131Params::staticCallbackFunction(void*, char const*)>:
 800b6bc:	f7ff bf1a 	b.w	800b4f4 <E131Params::callbackFunction(char const*)>

0800b6c0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)>:
 800b6c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b6c4:	4604      	mov	r4, r0
 800b6c6:	4615      	mov	r5, r2
 800b6c8:	461e      	mov	r6, r3
 800b6ca:	b086      	sub	sp, #24
 800b6cc:	3004      	adds	r0, #4
 800b6ce:	2900      	cmp	r1, #0
 800b6d0:	d045      	beq.n	800b75e <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x9e>
 800b6d2:	221f      	movs	r2, #31
 800b6d4:	f008 f85f 	bl	8013796 <memmove>
 800b6d8:	4633      	mov	r3, r6
 800b6da:	462a      	mov	r2, r5
 800b6dc:	4978      	ldr	r1, [pc, #480]	; (800b8c0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x200>)
 800b6de:	a803      	add	r0, sp, #12
 800b6e0:	f007 f896 	bl	8012810 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800b6e4:	2500      	movs	r5, #0
 800b6e6:	4e77      	ldr	r6, [pc, #476]	; (800b8c4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x204>)
 800b6e8:	f8df 81dc 	ldr.w	r8, [pc, #476]	; 800b8c8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x208>
 800b6ec:	4f77      	ldr	r7, [pc, #476]	; (800b8cc <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x20c>)
 800b6ee:	7fa3      	ldrb	r3, [r4, #30]
 800b6f0:	4631      	mov	r1, r6
 800b6f2:	412b      	asrs	r3, r5
 800b6f4:	f013 0f01 	tst.w	r3, #1
 800b6f8:	ea6f 0303 	mvn.w	r3, r3
 800b6fc:	bf0c      	ite	eq
 800b6fe:	4642      	moveq	r2, r8
 800b700:	463a      	movne	r2, r7
 800b702:	f003 0301 	and.w	r3, r3, #1
 800b706:	a803      	add	r0, sp, #12
 800b708:	3501      	adds	r5, #1
 800b70a:	f7ff fe57 	bl	800b3bc <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800b70e:	2d04      	cmp	r5, #4
 800b710:	f106 0612 	add.w	r6, r6, #18
 800b714:	d1eb      	bne.n	800b6ee <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x2e>
 800b716:	2600      	movs	r6, #0
 800b718:	f8df a1b4 	ldr.w	sl, [pc, #436]	; 800b8d0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x210>
 800b71c:	4f6d      	ldr	r7, [pc, #436]	; (800b8d4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x214>)
 800b71e:	f8df 81b8 	ldr.w	r8, [pc, #440]	; 800b8d8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x218>
 800b722:	f8df 91b8 	ldr.w	r9, [pc, #440]	; 800b8dc <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x21c>
 800b726:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800b72a:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800b72e:	42ab      	cmp	r3, r5
 800b730:	d22c      	bcs.n	800b78c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xcc>
 800b732:	2110      	movs	r1, #16
 800b734:	9803      	ldr	r0, [sp, #12]
 800b736:	1aed      	subs	r5, r5, r3
 800b738:	4418      	add	r0, r3
 800b73a:	eb04 0346 	add.w	r3, r4, r6, lsl #1
 800b73e:	f8b3 200b 	ldrh.w	r2, [r3, #11]
 800b742:	6863      	ldr	r3, [r4, #4]
 800b744:	40b1      	lsls	r1, r6
 800b746:	ea31 0303 	bics.w	r3, r1, r3
 800b74a:	f89d c014 	ldrb.w	ip, [sp, #20]
 800b74e:	d00d      	beq.n	800b76c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xac>
 800b750:	f1bc 0f00 	cmp.w	ip, #0
 800b754:	d10d      	bne.n	800b772 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xb2>
 800b756:	9200      	str	r2, [sp, #0]
 800b758:	4653      	mov	r3, sl
 800b75a:	464a      	mov	r2, r9
 800b75c:	e00c      	b.n	800b778 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xb8>
 800b75e:	6823      	ldr	r3, [r4, #0]
 800b760:	4601      	mov	r1, r0
 800b762:	681a      	ldr	r2, [r3, #0]
 800b764:	4618      	mov	r0, r3
 800b766:	68d2      	ldr	r2, [r2, #12]
 800b768:	4790      	blx	r2
 800b76a:	e7b5      	b.n	800b6d8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x18>
 800b76c:	f1bc 0f00 	cmp.w	ip, #0
 800b770:	d05d      	beq.n	800b82e <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x16e>
 800b772:	9200      	str	r2, [sp, #0]
 800b774:	4653      	mov	r3, sl
 800b776:	463a      	mov	r2, r7
 800b778:	4629      	mov	r1, r5
 800b77a:	f7fd fbbf 	bl	8008efc <snprintf>
 800b77e:	4285      	cmp	r5, r0
 800b780:	bfa2      	ittt	ge
 800b782:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800b786:	18c0      	addge	r0, r0, r3
 800b788:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800b78c:	3601      	adds	r6, #1
 800b78e:	2e04      	cmp	r6, #4
 800b790:	f10a 0a10 	add.w	sl, sl, #16
 800b794:	d1c7      	bne.n	800b726 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x66>
 800b796:	4952      	ldr	r1, [pc, #328]	; (800b8e0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x220>)
 800b798:	a803      	add	r0, sp, #12
 800b79a:	f007 f8bf 	bl	801291c <PropertiesBuilder::AddComment(char const*)>
 800b79e:	2500      	movs	r5, #0
 800b7a0:	f44f 7a80 	mov.w	sl, #256	; 0x100
 800b7a4:	4e4f      	ldr	r6, [pc, #316]	; (800b8e4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x224>)
 800b7a6:	f8df 9140 	ldr.w	r9, [pc, #320]	; 800b8e8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x228>
 800b7aa:	f8df 8140 	ldr.w	r8, [pc, #320]	; 800b8ec <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x22c>
 800b7ae:	f104 0714 	add.w	r7, r4, #20
 800b7b2:	6861      	ldr	r1, [r4, #4]
 800b7b4:	fa0a f305 	lsl.w	r3, sl, r5
 800b7b8:	f817 2b01 	ldrb.w	r2, [r7], #1
 800b7bc:	438b      	bics	r3, r1
 800b7be:	bf0c      	ite	eq
 800b7c0:	2301      	moveq	r3, #1
 800b7c2:	2300      	movne	r3, #0
 800b7c4:	4631      	mov	r1, r6
 800b7c6:	2a00      	cmp	r2, #0
 800b7c8:	bf0c      	ite	eq
 800b7ca:	464a      	moveq	r2, r9
 800b7cc:	4642      	movne	r2, r8
 800b7ce:	a803      	add	r0, sp, #12
 800b7d0:	3501      	adds	r5, #1
 800b7d2:	f7ff fdf3 	bl	800b3bc <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800b7d6:	2d04      	cmp	r5, #4
 800b7d8:	f106 0612 	add.w	r6, r6, #18
 800b7dc:	d1e9      	bne.n	800b7b2 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xf2>
 800b7de:	4944      	ldr	r1, [pc, #272]	; (800b8f0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x230>)
 800b7e0:	a803      	add	r0, sp, #12
 800b7e2:	f007 f89b 	bl	801291c <PropertiesBuilder::AddComment(char const*)>
 800b7e6:	2600      	movs	r6, #0
 800b7e8:	f8df a108 	ldr.w	sl, [pc, #264]	; 800b8f4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x234>
 800b7ec:	4f39      	ldr	r7, [pc, #228]	; (800b8d4 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x214>)
 800b7ee:	f8df 80e8 	ldr.w	r8, [pc, #232]	; 800b8d8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x218>
 800b7f2:	f8df 90e8 	ldr.w	r9, [pc, #232]	; 800b8dc <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x21c>
 800b7f6:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800b7fa:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800b7fe:	42ab      	cmp	r3, r5
 800b800:	d229      	bcs.n	800b856 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x196>
 800b802:	f44f 3180 	mov.w	r1, #65536	; 0x10000
 800b806:	9803      	ldr	r0, [sp, #12]
 800b808:	1aed      	subs	r5, r5, r3
 800b80a:	4418      	add	r0, r3
 800b80c:	f104 031f 	add.w	r3, r4, #31
 800b810:	5d9a      	ldrb	r2, [r3, r6]
 800b812:	6863      	ldr	r3, [r4, #4]
 800b814:	40b1      	lsls	r1, r6
 800b816:	ea31 0303 	bics.w	r3, r1, r3
 800b81a:	f89d c014 	ldrb.w	ip, [sp, #20]
 800b81e:	d00a      	beq.n	800b836 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x176>
 800b820:	f1bc 0f00 	cmp.w	ip, #0
 800b824:	d10a      	bne.n	800b83c <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x17c>
 800b826:	9200      	str	r2, [sp, #0]
 800b828:	4653      	mov	r3, sl
 800b82a:	464a      	mov	r2, r9
 800b82c:	e009      	b.n	800b842 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x182>
 800b82e:	9200      	str	r2, [sp, #0]
 800b830:	4653      	mov	r3, sl
 800b832:	4642      	mov	r2, r8
 800b834:	e7a0      	b.n	800b778 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0xb8>
 800b836:	f1bc 0f00 	cmp.w	ip, #0
 800b83a:	d03d      	beq.n	800b8b8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1f8>
 800b83c:	9200      	str	r2, [sp, #0]
 800b83e:	4653      	mov	r3, sl
 800b840:	463a      	mov	r2, r7
 800b842:	4629      	mov	r1, r5
 800b844:	f7fd fb5a 	bl	8008efc <snprintf>
 800b848:	4285      	cmp	r5, r0
 800b84a:	bfa2      	ittt	ge
 800b84c:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800b850:	18c0      	addge	r0, r0, r3
 800b852:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800b856:	3601      	adds	r6, #1
 800b858:	2e04      	cmp	r6, #4
 800b85a:	f10a 0a12 	add.w	sl, sl, #18
 800b85e:	d1ca      	bne.n	800b7f6 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x136>
 800b860:	4925      	ldr	r1, [pc, #148]	; (800b8f8 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x238>)
 800b862:	a803      	add	r0, sp, #12
 800b864:	f007 f85a 	bl	801291c <PropertiesBuilder::AddComment(char const*)>
 800b868:	6862      	ldr	r2, [r4, #4]
 800b86a:	4924      	ldr	r1, [pc, #144]	; (800b8fc <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x23c>)
 800b86c:	f3c2 3200 	ubfx	r2, r2, #12, #1
 800b870:	a803      	add	r0, sp, #12
 800b872:	f7ff fdcb 	bl	800b40c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800b876:	6862      	ldr	r2, [r4, #4]
 800b878:	4921      	ldr	r1, [pc, #132]	; (800b900 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x240>)
 800b87a:	f3c2 3240 	ubfx	r2, r2, #13, #1
 800b87e:	a803      	add	r0, sp, #12
 800b880:	f7ff fdc4 	bl	800b40c <PropertiesBuilder::Add(char const*, bool) [clone .isra.0]>
 800b884:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800b888:	b17b      	cbz	r3, 800b8aa <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x1ea>
 800b88a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800b88e:	9b03      	ldr	r3, [sp, #12]
 800b890:	4413      	add	r3, r2
 800b892:	227d      	movs	r2, #125	; 0x7d
 800b894:	f803 2c01 	strb.w	r2, [r3, #-1]
 800b898:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800b89c:	9903      	ldr	r1, [sp, #12]
 800b89e:	54ca      	strb	r2, [r1, r3]
 800b8a0:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800b8a4:	3301      	adds	r3, #1
 800b8a6:	f8ad 3012 	strh.w	r3, [sp, #18]
 800b8aa:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800b8ae:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800b8b0:	601a      	str	r2, [r3, #0]
 800b8b2:	b006      	add	sp, #24
 800b8b4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800b8b8:	9200      	str	r2, [sp, #0]
 800b8ba:	4653      	mov	r3, sl
 800b8bc:	4642      	mov	r2, r8
 800b8be:	e7c0      	b.n	800b842 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)+0x182>
 800b8c0:	08016d12 	stmdaeq	r1, {r1, r4, r8, sl, fp, sp, lr}
 800b8c4:	08017b23 	stmdaeq	r1, {r0, r1, r5, r8, r9, fp, ip, sp, lr}
 800b8c8:	08016c62 	stmdaeq	r1, {r1, r5, r6, sl, fp, sp, lr}
 800b8cc:	08016c68 	stmdaeq	r1, {r3, r5, r6, sl, fp, sp, lr}
 800b8d0:	080179f0 	stmdaeq	r1, {r4, r5, r6, r7, r8, fp, ip, sp, lr}
 800b8d4:	08015db4 	stmdaeq	r1, {r2, r4, r5, r7, r8, sl, fp, ip, lr}
 800b8d8:	08015dbe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r7, r8, sl, fp, ip, lr}
 800b8dc:	08015dbd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r7, r8, sl, fp, ip, lr}
 800b8e0:	08016c77 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, sl, fp, sp, lr}
 800b8e4:	08017ac0 	stmdaeq	r1, {r6, r7, r9, fp, ip, sp, lr}
 800b8e8:	08016c6f 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, sl, fp, sp, lr}
 800b8ec:	08016c73 	stmdaeq	r1, {r0, r1, r4, r5, r6, sl, fp, sp, lr}
 800b8f0:	08016c82 	stmdaeq	r1, {r1, r7, sl, fp, sp, lr}
 800b8f4:	08016cca 	stmdaeq	r1, {r1, r3, r6, r7, sl, fp, sp, lr}
 800b8f8:	08016c8c 	stmdaeq	r1, {r2, r3, r7, sl, fp, sp, lr}
 800b8fc:	08016ca8 	stmdaeq	r1, {r3, r5, r7, sl, fp, sp, lr}
 800b900:	08016c92 	stmdaeq	r1, {r1, r4, r7, sl, fp, sp, lr}

0800b904 <E131Params::Save(char*, unsigned int, unsigned int&)>:
 800b904:	b513      	push	{r0, r1, r4, lr}
 800b906:	6804      	ldr	r4, [r0, #0]
 800b908:	b914      	cbnz	r4, 800b910 <E131Params::Save(char*, unsigned int, unsigned int&)+0xc>
 800b90a:	601c      	str	r4, [r3, #0]
 800b90c:	b002      	add	sp, #8
 800b90e:	bd10      	pop	{r4, pc}
 800b910:	9300      	str	r3, [sp, #0]
 800b912:	4613      	mov	r3, r2
 800b914:	460a      	mov	r2, r1
 800b916:	2100      	movs	r1, #0
 800b918:	f7ff fed2 	bl	800b6c0 <E131Params::Builder(e131params::Params const*, char*, unsigned int, unsigned int&)>
 800b91c:	e7f6      	b.n	800b90c <E131Params::Save(char*, unsigned int, unsigned int&)+0x8>

0800b91e <E131Params::Set(E131Bridge*)>:
 800b91e:	6843      	ldr	r3, [r0, #4]
 800b920:	2b00      	cmp	r3, #0
 800b922:	d034      	beq.n	800b98e <E131Params::Set(E131Bridge*)+0x70>
 800b924:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b928:	2300      	movs	r3, #0
 800b92a:	f44f 7680 	mov.w	r6, #256	; 0x100
 800b92e:	f04f 0e44 	mov.w	lr, #68	; 0x44
 800b932:	f44f 3780 	mov.w	r7, #65536	; 0x10000
 800b936:	f100 0214 	add.w	r2, r0, #20
 800b93a:	f201 5c4c 	addw	ip, r1, #1356	; 0x54c
 800b93e:	6845      	ldr	r5, [r0, #4]
 800b940:	fa06 f403 	lsl.w	r4, r6, r3
 800b944:	43ac      	bics	r4, r5
 800b946:	bf02      	ittt	eq
 800b948:	fb0e f403 	muleq.w	r4, lr, r3
 800b94c:	f892 8000 	ldrbeq.w	r8, [r2]
 800b950:	f84c 8004 	streq.w	r8, [ip, r4]
 800b954:	fa07 f403 	lsl.w	r4, r7, r3
 800b958:	43ac      	bics	r4, r5
 800b95a:	d106      	bne.n	800b96a <E131Params::Set(E131Bridge*)+0x4c>
 800b95c:	7ad5      	ldrb	r5, [r2, #11]
 800b95e:	1e6c      	subs	r4, r5, #1
 800b960:	b2e4      	uxtb	r4, r4
 800b962:	2cc7      	cmp	r4, #199	; 0xc7
 800b964:	bf98      	it	ls
 800b966:	f881 5739 	strbls.w	r5, [r1, #1849]	; 0x739
 800b96a:	3301      	adds	r3, #1
 800b96c:	2b04      	cmp	r3, #4
 800b96e:	f102 0201 	add.w	r2, r2, #1
 800b972:	d1e4      	bne.n	800b93e <E131Params::Set(E131Bridge*)+0x20>
 800b974:	6843      	ldr	r3, [r0, #4]
 800b976:	04da      	lsls	r2, r3, #19
 800b978:	bf44      	itt	mi
 800b97a:	2201      	movmi	r2, #1
 800b97c:	f881 24f9 	strbmi.w	r2, [r1, #1273]	; 0x4f9
 800b980:	049b      	lsls	r3, r3, #18
 800b982:	bf44      	itt	mi
 800b984:	2301      	movmi	r3, #1
 800b986:	f881 34fa 	strbmi.w	r3, [r1, #1274]	; 0x4fa
 800b98a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b98e:	4770      	bx	lr

0800b990 <E131Params::Dump()>:
 800b990:	4770      	bx	lr

0800b992 <LLRPDevice::~LLRPDevice()>:
 800b992:	4770      	bx	lr

0800b994 <LLRPDevice::CopyUID(unsigned char*)>:
 800b994:	4770      	bx	lr

0800b996 <LLRPDevice::CopyCID(unsigned char*)>:
 800b996:	4770      	bx	lr

0800b998 <LLRPDevice::LLRPHandleRdmCommand(unsigned char const*)>:
 800b998:	2000      	movs	r0, #0
 800b99a:	4770      	bx	lr

0800b99c <LLRPDevice::~LLRPDevice()>:
 800b99c:	b510      	push	{r4, lr}
 800b99e:	4604      	mov	r4, r0
 800b9a0:	f007 fe36 	bl	8013610 <operator delete(void*)>
 800b9a4:	4620      	mov	r0, r4
 800b9a6:	bd10      	pop	{r4, pc}

0800b9a8 <memcpy.isra.0>:
 800b9a8:	3801      	subs	r0, #1
 800b9aa:	440a      	add	r2, r1
 800b9ac:	4291      	cmp	r1, r2
 800b9ae:	d004      	beq.n	800b9ba <memcpy.isra.0+0x12>
 800b9b0:	f811 3b01 	ldrb.w	r3, [r1], #1
 800b9b4:	f800 3f01 	strb.w	r3, [r0, #1]!
 800b9b8:	e7f8      	b.n	800b9ac <memcpy.isra.0+0x4>
 800b9ba:	4770      	bx	lr

0800b9bc <LLRPDevice::LLRPDevice()>:
 800b9bc:	b513      	push	{r0, r1, r4, lr}
 800b9be:	4604      	mov	r4, r0
 800b9c0:	4b09      	ldr	r3, [pc, #36]	; (800b9e8 <LLRPDevice::LLRPDevice()+0x2c>)
 800b9c2:	a901      	add	r1, sp, #4
 800b9c4:	6003      	str	r3, [r0, #0]
 800b9c6:	4809      	ldr	r0, [pc, #36]	; (800b9ec <LLRPDevice::LLRPDevice()+0x30>)
 800b9c8:	f007 fe2a 	bl	8013620 <inet_aton>
 800b9cc:	9a01      	ldr	r2, [sp, #4]
 800b9ce:	4b08      	ldr	r3, [pc, #32]	; (800b9f0 <LLRPDevice::LLRPDevice()+0x34>)
 800b9d0:	a901      	add	r1, sp, #4
 800b9d2:	4808      	ldr	r0, [pc, #32]	; (800b9f4 <LLRPDevice::LLRPDevice()+0x38>)
 800b9d4:	601a      	str	r2, [r3, #0]
 800b9d6:	f007 fe23 	bl	8013620 <inet_aton>
 800b9da:	4620      	mov	r0, r4
 800b9dc:	4b06      	ldr	r3, [pc, #24]	; (800b9f8 <LLRPDevice::LLRPDevice()+0x3c>)
 800b9de:	9a01      	ldr	r2, [sp, #4]
 800b9e0:	601a      	str	r2, [r3, #0]
 800b9e2:	b002      	add	sp, #8
 800b9e4:	bd10      	pop	{r4, pc}
 800b9e6:	bf00      	nop
 800b9e8:	08016dd8 	stmdaeq	r1, {r3, r4, r6, r7, r8, sl, fp, sp, lr}
 800b9ec:	08016d29 	stmdaeq	r1, {r0, r3, r5, r8, sl, fp, sp, lr}
 800b9f0:	20003148 	andcs	r3, r0, r8, asr #2
 800b9f4:	08016d39 	stmdaeq	r1, {r0, r3, r4, r5, r8, sl, fp, sp, lr}
 800b9f8:	2000314c 	andcs	r3, r0, ip, asr #2

0800b9fc <LLRPDevice::HandleRequestMessage()>:
 800b9fc:	b570      	push	{r4, r5, r6, lr}
 800b9fe:	4b23      	ldr	r3, [pc, #140]	; (800ba8c <LLRPDevice::HandleRequestMessage()+0x90>)
 800ba00:	b086      	sub	sp, #24
 800ba02:	681c      	ldr	r4, [r3, #0]
 800ba04:	4605      	mov	r5, r0
 800ba06:	f104 0617 	add.w	r6, r4, #23
 800ba0a:	2210      	movs	r2, #16
 800ba0c:	4631      	mov	r1, r6
 800ba0e:	a802      	add	r0, sp, #8
 800ba10:	f7ff ffca 	bl	800b9a8 <memcpy.isra.0>
 800ba14:	2343      	movs	r3, #67	; 0x43
 800ba16:	74a3      	strb	r3, [r4, #18]
 800ba18:	682b      	ldr	r3, [r5, #0]
 800ba1a:	4631      	mov	r1, r6
 800ba1c:	4628      	mov	r0, r5
 800ba1e:	68db      	ldr	r3, [r3, #12]
 800ba20:	4798      	blx	r3
 800ba22:	232c      	movs	r3, #44	; 0x2c
 800ba24:	f884 3029 	strb.w	r3, [r4, #41]	; 0x29
 800ba28:	2300      	movs	r3, #0
 800ba2a:	f884 302a 	strb.w	r3, [r4, #42]	; 0x2a
 800ba2e:	f884 302b 	strb.w	r3, [r4, #43]	; 0x2b
 800ba32:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 800ba36:	2302      	movs	r3, #2
 800ba38:	2210      	movs	r2, #16
 800ba3a:	f884 302d 	strb.w	r3, [r4, #45]	; 0x2d
 800ba3e:	a902      	add	r1, sp, #8
 800ba40:	f104 002e 	add.w	r0, r4, #46	; 0x2e
 800ba44:	f7ff ffb0 	bl	800b9a8 <memcpy.isra.0>
 800ba48:	2311      	movs	r3, #17
 800ba4a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800ba4e:	2301      	movs	r3, #1
 800ba50:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800ba54:	682b      	ldr	r3, [r5, #0]
 800ba56:	4628      	mov	r0, r5
 800ba58:	f104 0146 	add.w	r1, r4, #70	; 0x46
 800ba5c:	689b      	ldr	r3, [r3, #8]
 800ba5e:	4798      	blx	r3
 800ba60:	4b0b      	ldr	r3, [pc, #44]	; (800ba90 <LLRPDevice::HandleRequestMessage()+0x94>)
 800ba62:	f104 014c 	add.w	r1, r4, #76	; 0x4c
 800ba66:	6818      	ldr	r0, [r3, #0]
 800ba68:	f004 fed4 	bl	8010814 <Network::MacAddressCopyTo(unsigned char*)>
 800ba6c:	23ff      	movs	r3, #255	; 0xff
 800ba6e:	f884 3052 	strb.w	r3, [r4, #82]	; 0x52
 800ba72:	f241 53c1 	movw	r3, #5569	; 0x15c1
 800ba76:	4807      	ldr	r0, [pc, #28]	; (800ba94 <LLRPDevice::HandleRequestMessage()+0x98>)
 800ba78:	9300      	str	r3, [sp, #0]
 800ba7a:	4b07      	ldr	r3, [pc, #28]	; (800ba98 <LLRPDevice::HandleRequestMessage()+0x9c>)
 800ba7c:	2253      	movs	r2, #83	; 0x53
 800ba7e:	4621      	mov	r1, r4
 800ba80:	681b      	ldr	r3, [r3, #0]
 800ba82:	7800      	ldrb	r0, [r0, #0]
 800ba84:	f004 f9f0 	bl	800fe68 <udp_send>
 800ba88:	b006      	add	sp, #24
 800ba8a:	bd70      	pop	{r4, r5, r6, pc}
 800ba8c:	20003150 	andcs	r3, r0, r0, asr r1
 800ba90:	200136ac 	andcs	r3, r1, ip, lsr #13
 800ba94:	20000000 	andcs	r0, r0, r0
 800ba98:	2000314c 	andcs	r3, r0, ip, asr #2

0800ba9c <LLRPDevice::HandleRdmCommand()>:
 800ba9c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800baa0:	4b22      	ldr	r3, [pc, #136]	; (800bb2c <LLRPDevice::HandleRdmCommand()+0x90>)
 800baa2:	b086      	sub	sp, #24
 800baa4:	681c      	ldr	r4, [r3, #0]
 800baa6:	6803      	ldr	r3, [r0, #0]
 800baa8:	f104 0946 	add.w	r9, r4, #70	; 0x46
 800baac:	4649      	mov	r1, r9
 800baae:	691b      	ldr	r3, [r3, #16]
 800bab0:	4607      	mov	r7, r0
 800bab2:	4798      	blx	r3
 800bab4:	4605      	mov	r5, r0
 800bab6:	2800      	cmp	r0, #0
 800bab8:	d034      	beq.n	800bb24 <LLRPDevice::HandleRdmCommand()+0x88>
 800baba:	7803      	ldrb	r3, [r0, #0]
 800babc:	2bcc      	cmp	r3, #204	; 0xcc
 800babe:	d131      	bne.n	800bb24 <LLRPDevice::HandleRdmCommand()+0x88>
 800bac0:	f104 0a17 	add.w	sl, r4, #23
 800bac4:	2210      	movs	r2, #16
 800bac6:	4651      	mov	r1, sl
 800bac8:	a802      	add	r0, sp, #8
 800baca:	f7ff ff6d 	bl	800b9a8 <memcpy.isra.0>
 800bace:	78ae      	ldrb	r6, [r5, #2]
 800bad0:	4651      	mov	r1, sl
 800bad2:	f106 0837 	add.w	r8, r6, #55	; 0x37
 800bad6:	fa5f f888 	uxtb.w	r8, r8
 800bada:	f884 8012 	strb.w	r8, [r4, #18]
 800bade:	683b      	ldr	r3, [r7, #0]
 800bae0:	4638      	mov	r0, r7
 800bae2:	68db      	ldr	r3, [r3, #12]
 800bae4:	4798      	blx	r3
 800bae6:	f106 0320 	add.w	r3, r6, #32
 800baea:	2210      	movs	r2, #16
 800baec:	f884 3029 	strb.w	r3, [r4, #41]	; 0x29
 800baf0:	a902      	add	r1, sp, #8
 800baf2:	f104 002e 	add.w	r0, r4, #46	; 0x2e
 800baf6:	f7ff ff57 	bl	800b9a8 <memcpy.isra.0>
 800bafa:	1d73      	adds	r3, r6, #5
 800bafc:	1c72      	adds	r2, r6, #1
 800bafe:	4648      	mov	r0, r9
 800bb00:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800bb04:	b2d2      	uxtb	r2, r2
 800bb06:	1c69      	adds	r1, r5, #1
 800bb08:	f7ff ff4e 	bl	800b9a8 <memcpy.isra.0>
 800bb0c:	f241 53c1 	movw	r3, #5569	; 0x15c1
 800bb10:	4807      	ldr	r0, [pc, #28]	; (800bb30 <LLRPDevice::HandleRdmCommand()+0x94>)
 800bb12:	9300      	str	r3, [sp, #0]
 800bb14:	4b07      	ldr	r3, [pc, #28]	; (800bb34 <LLRPDevice::HandleRdmCommand()+0x98>)
 800bb16:	4621      	mov	r1, r4
 800bb18:	681b      	ldr	r3, [r3, #0]
 800bb1a:	7800      	ldrb	r0, [r0, #0]
 800bb1c:	f108 0210 	add.w	r2, r8, #16
 800bb20:	f004 f9a2 	bl	800fe68 <udp_send>
 800bb24:	b006      	add	sp, #24
 800bb26:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800bb2a:	bf00      	nop
 800bb2c:	20003150 	andcs	r3, r0, r0, asr r1
 800bb30:	20000000 	andcs	r0, r0, r0
 800bb34:	2000314c 	andcs	r3, r0, ip, asr #2

0800bb38 <LLRPDevice::Run()>:
 800bb38:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bb3a:	4604      	mov	r4, r0
 800bb3c:	4d0e      	ldr	r5, [pc, #56]	; (800bb78 <LLRPDevice::Run()+0x40>)
 800bb3e:	480f      	ldr	r0, [pc, #60]	; (800bb7c <LLRPDevice::Run()+0x44>)
 800bb40:	4629      	mov	r1, r5
 800bb42:	4a0f      	ldr	r2, [pc, #60]	; (800bb80 <LLRPDevice::Run()+0x48>)
 800bb44:	7800      	ldrb	r0, [r0, #0]
 800bb46:	f10d 0306 	add.w	r3, sp, #6
 800bb4a:	f004 f967 	bl	800fe1c <udp_recv2>
 800bb4e:	2841      	cmp	r0, #65	; 0x41
 800bb50:	d908      	bls.n	800bb64 <LLRPDevice::Run()+0x2c>
 800bb52:	682b      	ldr	r3, [r5, #0]
 800bb54:	f8d3 302a 	ldr.w	r3, [r3, #42]	; 0x2a
 800bb58:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800bb5c:	ba1a      	rev	r2, r3
 800bb5e:	d003      	beq.n	800bb68 <LLRPDevice::Run()+0x30>
 800bb60:	2a03      	cmp	r2, #3
 800bb62:	d005      	beq.n	800bb70 <LLRPDevice::Run()+0x38>
 800bb64:	b003      	add	sp, #12
 800bb66:	bd30      	pop	{r4, r5, pc}
 800bb68:	4620      	mov	r0, r4
 800bb6a:	f7ff ff47 	bl	800b9fc <LLRPDevice::HandleRequestMessage()>
 800bb6e:	e7f9      	b.n	800bb64 <LLRPDevice::Run()+0x2c>
 800bb70:	4620      	mov	r0, r4
 800bb72:	f7ff ff93 	bl	800ba9c <LLRPDevice::HandleRdmCommand()>
 800bb76:	e7f5      	b.n	800bb64 <LLRPDevice::Run()+0x2c>
 800bb78:	20003150 	andcs	r3, r0, r0, asr r1
 800bb7c:	20000000 	andcs	r0, r0, r0
 800bb80:	20003144 	andcs	r3, r0, r4, asr #2

0800bb84 <LLRPDevice::Print()>:
 800bb84:	b507      	push	{r0, r1, r2, lr}
 800bb86:	4811      	ldr	r0, [pc, #68]	; (800bbcc <LLRPDevice::Print()+0x48>)
 800bb88:	f7fd f990 	bl	8008eac <printf>
 800bb8c:	f241 51c1 	movw	r1, #5569	; 0x15c1
 800bb90:	480f      	ldr	r0, [pc, #60]	; (800bbd0 <LLRPDevice::Print()+0x4c>)
 800bb92:	f7fd f98b 	bl	8008eac <printf>
 800bb96:	4b0f      	ldr	r3, [pc, #60]	; (800bbd4 <LLRPDevice::Print()+0x50>)
 800bb98:	480f      	ldr	r0, [pc, #60]	; (800bbd8 <LLRPDevice::Print()+0x54>)
 800bb9a:	6819      	ldr	r1, [r3, #0]
 800bb9c:	0e0b      	lsrs	r3, r1, #24
 800bb9e:	9300      	str	r3, [sp, #0]
 800bba0:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800bba4:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800bba8:	b2c9      	uxtb	r1, r1
 800bbaa:	f7fd f97f 	bl	8008eac <printf>
 800bbae:	4b0b      	ldr	r3, [pc, #44]	; (800bbdc <LLRPDevice::Print()+0x58>)
 800bbb0:	480b      	ldr	r0, [pc, #44]	; (800bbe0 <LLRPDevice::Print()+0x5c>)
 800bbb2:	6819      	ldr	r1, [r3, #0]
 800bbb4:	0e0b      	lsrs	r3, r1, #24
 800bbb6:	9300      	str	r3, [sp, #0]
 800bbb8:	f3c1 2207 	ubfx	r2, r1, #8, #8
 800bbbc:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800bbc0:	b2c9      	uxtb	r1, r1
 800bbc2:	f7fd f973 	bl	8008eac <printf>
 800bbc6:	b003      	add	sp, #12
 800bbc8:	f85d fb04 	ldr.w	pc, [sp], #4
 800bbcc:	08016d49 	stmdaeq	r1, {r0, r3, r6, r8, sl, fp, sp, lr}
 800bbd0:	08016d64 	stmdaeq	r1, {r2, r5, r6, r8, sl, fp, sp, lr}
 800bbd4:	20003148 	andcs	r3, r0, r8, asr #2
 800bbd8:	08016d82 	stmdaeq	r1, {r1, r7, r8, sl, fp, sp, lr}
 800bbdc:	2000314c 	andcs	r3, r0, ip, asr #2
 800bbe0:	08016da9 	stmdaeq	r1, {r0, r3, r5, r7, r8, sl, fp, sp, lr}

0800bbe4 <RDMNetDevice::Print()>:
 800bbe4:	2300      	movs	r3, #0
 800bbe6:	b510      	push	{r4, lr}
 800bbe8:	4604      	mov	r4, r0
 800bbea:	b08a      	sub	sp, #40	; 0x28
 800bbec:	4669      	mov	r1, sp
 800bbee:	480a      	ldr	r0, [pc, #40]	; (800bc18 <RDMNetDevice::Print()+0x34>)
 800bbf0:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800bbf4:	f001 f950 	bl	800ce98 <uuid_unparse>
 800bbf8:	4808      	ldr	r0, [pc, #32]	; (800bc1c <RDMNetDevice::Print()+0x38>)
 800bbfa:	f7fd f957 	bl	8008eac <printf>
 800bbfe:	4669      	mov	r1, sp
 800bc00:	4807      	ldr	r0, [pc, #28]	; (800bc20 <RDMNetDevice::Print()+0x3c>)
 800bc02:	f7fd f953 	bl	8008eac <printf>
 800bc06:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 800bc0a:	f7ff ffbb 	bl	800bb84 <LLRPDevice::Print()>
 800bc0e:	4620      	mov	r0, r4
 800bc10:	f000 fa64 	bl	800c0dc <RDMDeviceResponder::Print()>
 800bc14:	b00a      	add	sp, #40	; 0x28
 800bc16:	bd10      	pop	{r4, pc}
 800bc18:	20003253 	andcs	r3, r0, r3, asr r2
 800bc1c:	08016dec 	stmdaeq	r1, {r2, r3, r5, r6, r7, r8, sl, fp, sp, lr}
 800bc20:	08016df4 	stmdaeq	r1, {r2, r4, r5, r6, r7, r8, sl, fp, sp, lr}

0800bc24 <RDMSensors::RDMSensors()>:
 800bc24:	2200      	movs	r2, #0
 800bc26:	6002      	str	r2, [r0, #0]
 800bc28:	7102      	strb	r2, [r0, #4]
 800bc2a:	4a01      	ldr	r2, [pc, #4]	; (800bc30 <RDMSensors::RDMSensors()+0xc>)
 800bc2c:	6010      	str	r0, [r2, #0]
 800bc2e:	4770      	bx	lr
 800bc30:	20003264 	andcs	r3, r0, r4, ror #4

0800bc34 <RDMSensors::~RDMSensors()>:
 800bc34:	b570      	push	{r4, r5, r6, lr}
 800bc36:	2500      	movs	r5, #0
 800bc38:	4604      	mov	r4, r0
 800bc3a:	462e      	mov	r6, r5
 800bc3c:	7923      	ldrb	r3, [r4, #4]
 800bc3e:	6820      	ldr	r0, [r4, #0]
 800bc40:	42ab      	cmp	r3, r5
 800bc42:	d90a      	bls.n	800bc5a <RDMSensors::~RDMSensors()+0x26>
 800bc44:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 800bc48:	b128      	cbz	r0, 800bc56 <RDMSensors::~RDMSensors()+0x22>
 800bc4a:	6803      	ldr	r3, [r0, #0]
 800bc4c:	685b      	ldr	r3, [r3, #4]
 800bc4e:	4798      	blx	r3
 800bc50:	6823      	ldr	r3, [r4, #0]
 800bc52:	f843 6025 	str.w	r6, [r3, r5, lsl #2]
 800bc56:	3501      	adds	r5, #1
 800bc58:	e7f0      	b.n	800bc3c <RDMSensors::~RDMSensors()+0x8>
 800bc5a:	b108      	cbz	r0, 800bc60 <RDMSensors::~RDMSensors()+0x2c>
 800bc5c:	f007 fcda 	bl	8013614 <operator delete[](void*)>
 800bc60:	4620      	mov	r0, r4
 800bc62:	bd70      	pop	{r4, r5, r6, pc}

0800bc64 <RDMSubDevices::RDMSubDevices()>:
 800bc64:	2200      	movs	r2, #0
 800bc66:	6002      	str	r2, [r0, #0]
 800bc68:	8082      	strh	r2, [r0, #4]
 800bc6a:	4a01      	ldr	r2, [pc, #4]	; (800bc70 <RDMSubDevices::RDMSubDevices()+0xc>)
 800bc6c:	6010      	str	r0, [r2, #0]
 800bc6e:	4770      	bx	lr
 800bc70:	20003268 	andcs	r3, r0, r8, ror #4

0800bc74 <RDMSubDevices::~RDMSubDevices()>:
 800bc74:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800bc76:	2500      	movs	r5, #0
 800bc78:	4604      	mov	r4, r0
 800bc7a:	462f      	mov	r7, r5
 800bc7c:	88a3      	ldrh	r3, [r4, #4]
 800bc7e:	6820      	ldr	r0, [r4, #0]
 800bc80:	42ab      	cmp	r3, r5
 800bc82:	d90a      	bls.n	800bc9a <RDMSubDevices::~RDMSubDevices()+0x26>
 800bc84:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 800bc88:	00ae      	lsls	r6, r5, #2
 800bc8a:	b110      	cbz	r0, 800bc92 <RDMSubDevices::~RDMSubDevices()+0x1e>
 800bc8c:	6803      	ldr	r3, [r0, #0]
 800bc8e:	685b      	ldr	r3, [r3, #4]
 800bc90:	4798      	blx	r3
 800bc92:	6823      	ldr	r3, [r4, #0]
 800bc94:	3501      	adds	r5, #1
 800bc96:	519f      	str	r7, [r3, r6]
 800bc98:	e7f0      	b.n	800bc7c <RDMSubDevices::~RDMSubDevices()+0x8>
 800bc9a:	b108      	cbz	r0, 800bca0 <RDMSubDevices::~RDMSubDevices()+0x2c>
 800bc9c:	f007 fcba 	bl	8013614 <operator delete[](void*)>
 800bca0:	4620      	mov	r0, r4
 800bca2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800bca4 <RDMSubDevices::GetInfo(unsigned short)>:
 800bca4:	6803      	ldr	r3, [r0, #0]
 800bca6:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 800bcaa:	3901      	subs	r1, #1
 800bcac:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800bcb0:	3010      	adds	r0, #16
 800bcb2:	4770      	bx	lr

0800bcb4 <RDMSubDevices::GetLabel(unsigned short, TRDMDeviceInfoData*)>:
 800bcb4:	f101 4380 	add.w	r3, r1, #1073741824	; 0x40000000
 800bcb8:	6800      	ldr	r0, [r0, #0]
 800bcba:	3b01      	subs	r3, #1
 800bcbc:	4611      	mov	r1, r2
 800bcbe:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
 800bcc2:	f000 b82f 	b.w	800bd24 <RDMSubDevice::GetLabel(TRDMDeviceInfoData*)>

0800bcc6 <RDMSubDevices::SetLabel(unsigned short, char const*, unsigned char)>:
 800bcc6:	b410      	push	{r4}
 800bcc8:	460c      	mov	r4, r1
 800bcca:	6800      	ldr	r0, [r0, #0]
 800bccc:	f104 4480 	add.w	r4, r4, #1073741824	; 0x40000000
 800bcd0:	3c01      	subs	r4, #1
 800bcd2:	4611      	mov	r1, r2
 800bcd4:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
 800bcd8:	461a      	mov	r2, r3
 800bcda:	bc10      	pop	{r4}
 800bcdc:	f000 b837 	b.w	800bd4e <RDMSubDevice::SetLabel(char const*, unsigned char)>

0800bce0 <RDMSubDevices::GetFactoryDefaults()>:
 800bce0:	b538      	push	{r3, r4, r5, lr}
 800bce2:	4605      	mov	r5, r0
 800bce4:	2400      	movs	r4, #0
 800bce6:	88ab      	ldrh	r3, [r5, #4]
 800bce8:	42a3      	cmp	r3, r4
 800bcea:	d90a      	bls.n	800bd02 <RDMSubDevices::GetFactoryDefaults()+0x22>
 800bcec:	682b      	ldr	r3, [r5, #0]
 800bcee:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 800bcf2:	b908      	cbnz	r0, 800bcf8 <RDMSubDevices::GetFactoryDefaults()+0x18>
 800bcf4:	3401      	adds	r4, #1
 800bcf6:	e7f6      	b.n	800bce6 <RDMSubDevices::GetFactoryDefaults()+0x6>
 800bcf8:	f000 f85e 	bl	800bdb8 <RDMSubDevice::GetFactoryDefaults()>
 800bcfc:	2800      	cmp	r0, #0
 800bcfe:	d1f9      	bne.n	800bcf4 <RDMSubDevices::GetFactoryDefaults()+0x14>
 800bd00:	bd38      	pop	{r3, r4, r5, pc}
 800bd02:	2001      	movs	r0, #1
 800bd04:	e7fc      	b.n	800bd00 <RDMSubDevices::GetFactoryDefaults()+0x20>

0800bd06 <RDMSubDevices::SetFactoryDefaults()>:
 800bd06:	b538      	push	{r3, r4, r5, lr}
 800bd08:	4605      	mov	r5, r0
 800bd0a:	2400      	movs	r4, #0
 800bd0c:	88ab      	ldrh	r3, [r5, #4]
 800bd0e:	42a3      	cmp	r3, r4
 800bd10:	d907      	bls.n	800bd22 <RDMSubDevices::SetFactoryDefaults()+0x1c>
 800bd12:	682b      	ldr	r3, [r5, #0]
 800bd14:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 800bd18:	b108      	cbz	r0, 800bd1e <RDMSubDevices::SetFactoryDefaults()+0x18>
 800bd1a:	f000 f827 	bl	800bd6c <RDMSubDevice::SetFactoryDefaults()>
 800bd1e:	3401      	adds	r4, #1
 800bd20:	e7f4      	b.n	800bd0c <RDMSubDevices::SetFactoryDefaults()+0x6>
 800bd22:	bd38      	pop	{r3, r4, r5, pc}

0800bd24 <RDMSubDevice::GetLabel(TRDMDeviceInfoData*)>:
 800bd24:	f100 0316 	add.w	r3, r0, #22
 800bd28:	600b      	str	r3, [r1, #0]
 800bd2a:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800bd2e:	710b      	strb	r3, [r1, #4]
 800bd30:	4770      	bx	lr

0800bd32 <RDMSubDevice::SetLabel(char const*)>:
 800bd32:	2300      	movs	r3, #0
 800bd34:	b510      	push	{r4, lr}
 800bd36:	f100 0216 	add.w	r2, r0, #22
 800bd3a:	5ccc      	ldrb	r4, [r1, r3]
 800bd3c:	b124      	cbz	r4, 800bd48 <RDMSubDevice::SetLabel(char const*)+0x16>
 800bd3e:	3301      	adds	r3, #1
 800bd40:	2b20      	cmp	r3, #32
 800bd42:	f802 4b01 	strb.w	r4, [r2], #1
 800bd46:	d1f8      	bne.n	800bd3a <RDMSubDevice::SetLabel(char const*)+0x8>
 800bd48:	f880 3036 	strb.w	r3, [r0, #54]	; 0x36
 800bd4c:	bd10      	pop	{r4, pc}

0800bd4e <RDMSubDevice::SetLabel(char const*, unsigned char)>:
 800bd4e:	2300      	movs	r3, #0
 800bd50:	b530      	push	{r4, r5, lr}
 800bd52:	f100 0416 	add.w	r4, r0, #22
 800bd56:	429a      	cmp	r2, r3
 800bd58:	d905      	bls.n	800bd66 <RDMSubDevice::SetLabel(char const*, unsigned char)+0x18>
 800bd5a:	5ccd      	ldrb	r5, [r1, r3]
 800bd5c:	3301      	adds	r3, #1
 800bd5e:	2b20      	cmp	r3, #32
 800bd60:	f804 5b01 	strb.w	r5, [r4], #1
 800bd64:	d1f7      	bne.n	800bd56 <RDMSubDevice::SetLabel(char const*, unsigned char)+0x8>
 800bd66:	f880 3036 	strb.w	r3, [r0, #54]	; 0x36
 800bd6a:	bd30      	pop	{r4, r5, pc}

0800bd6c <RDMSubDevice::SetFactoryDefaults()>:
 800bd6c:	7a03      	ldrb	r3, [r0, #8]
 800bd6e:	b510      	push	{r4, lr}
 800bd70:	b94b      	cbnz	r3, 800bd86 <RDMSubDevice::SetFactoryDefaults()+0x1a>
 800bd72:	f100 0138 	add.w	r1, r0, #56	; 0x38
 800bd76:	f7ff ffdc 	bl	800bd32 <RDMSubDevice::SetLabel(char const*)>
 800bd7a:	8983      	ldrh	r3, [r0, #12]
 800bd7c:	8243      	strh	r3, [r0, #18]
 800bd7e:	7b83      	ldrb	r3, [r0, #14]
 800bd80:	7503      	strb	r3, [r0, #20]
 800bd82:	2301      	movs	r3, #1
 800bd84:	7203      	strb	r3, [r0, #8]
 800bd86:	bd10      	pop	{r4, pc}

0800bd88 <RDMSubDevice::CalculateChecksum()>:
 800bd88:	4602      	mov	r2, r0
 800bd8a:	b510      	push	{r4, lr}
 800bd8c:	8a43      	ldrh	r3, [r0, #18]
 800bd8e:	7d00      	ldrb	r0, [r0, #20]
 800bd90:	f892 4036 	ldrb.w	r4, [r2, #54]	; 0x36
 800bd94:	4403      	add	r3, r0
 800bd96:	b298      	uxth	r0, r3
 800bd98:	f102 0316 	add.w	r3, r2, #22
 800bd9c:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
 800bda0:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
 800bda4:	32ea      	adds	r2, #234	; 0xea
 800bda6:	18d1      	adds	r1, r2, r3
 800bda8:	428c      	cmp	r4, r1
 800bdaa:	d904      	bls.n	800bdb6 <RDMSubDevice::CalculateChecksum()+0x2e>
 800bdac:	f813 1b01 	ldrb.w	r1, [r3], #1
 800bdb0:	4408      	add	r0, r1
 800bdb2:	b280      	uxth	r0, r0
 800bdb4:	e7f7      	b.n	800bda6 <RDMSubDevice::CalculateChecksum()+0x1e>
 800bdb6:	bd10      	pop	{r4, pc}

0800bdb8 <RDMSubDevice::GetFactoryDefaults()>:
 800bdb8:	7a03      	ldrb	r3, [r0, #8]
 800bdba:	b510      	push	{r4, lr}
 800bdbc:	4604      	mov	r4, r0
 800bdbe:	b133      	cbz	r3, 800bdce <RDMSubDevice::GetFactoryDefaults()+0x16>
 800bdc0:	f7ff ffe2 	bl	800bd88 <RDMSubDevice::CalculateChecksum()>
 800bdc4:	8963      	ldrh	r3, [r4, #10]
 800bdc6:	4283      	cmp	r3, r0
 800bdc8:	bf1c      	itt	ne
 800bdca:	2300      	movne	r3, #0
 800bdcc:	7223      	strbne	r3, [r4, #8]
 800bdce:	7a20      	ldrb	r0, [r4, #8]
 800bdd0:	bd10      	pop	{r4, pc}

0800bdd2 <memcpy.isra.0>:
 800bdd2:	f007 bcd5 	b.w	8013780 <memcpy>
	...

0800bdd8 <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)>:
 800bdd8:	b510      	push	{r4, lr}
 800bdda:	6001      	str	r1, [r0, #0]
 800bddc:	2100      	movs	r1, #0
 800bdde:	4604      	mov	r4, r0
 800bde0:	6041      	str	r1, [r0, #4]
 800bde2:	2220      	movs	r2, #32
 800bde4:	3008      	adds	r0, #8
 800bde6:	f007 fced 	bl	80137c4 <memset>
 800bdea:	4b03      	ldr	r3, [pc, #12]	; (800bdf8 <RDMDeviceParams::RDMDeviceParams(RDMDeviceParamsStore*)+0x20>)
 800bdec:	4620      	mov	r0, r4
 800bdee:	62a3      	str	r3, [r4, #40]	; 0x28
 800bdf0:	237f      	movs	r3, #127	; 0x7f
 800bdf2:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 800bdf6:	bd10      	pop	{r4, pc}
 800bdf8:	ff7fff00 			; <UNDEFINED> instruction: 0xff7fff00

0800bdfc <RDMDeviceParams::Load()>:
 800bdfc:	4601      	mov	r1, r0
 800bdfe:	6800      	ldr	r0, [r0, #0]
 800be00:	b130      	cbz	r0, 800be10 <RDMDeviceParams::Load()+0x14>
 800be02:	b508      	push	{r3, lr}
 800be04:	6803      	ldr	r3, [r0, #0]
 800be06:	3104      	adds	r1, #4
 800be08:	68db      	ldr	r3, [r3, #12]
 800be0a:	4798      	blx	r3
 800be0c:	2001      	movs	r0, #1
 800be0e:	bd08      	pop	{r3, pc}
 800be10:	4770      	bx	lr

0800be12 <RDMDeviceParams::Set(RDMDevice*)>:
 800be12:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800be14:	6843      	ldr	r3, [r0, #4]
 800be16:	460c      	mov	r4, r1
 800be18:	07d9      	lsls	r1, r3, #31
 800be1a:	4605      	mov	r5, r0
 800be1c:	d518      	bpl.n	800be50 <RDMDeviceParams::Set(RDMDevice*)+0x3e>
 800be1e:	f890 6028 	ldrb.w	r6, [r0, #40]	; 0x28
 800be22:	f894 3052 	ldrb.w	r3, [r4, #82]	; 0x52
 800be26:	2e20      	cmp	r6, #32
 800be28:	bf28      	it	cs
 800be2a:	2620      	movcs	r6, #32
 800be2c:	f100 0108 	add.w	r1, r0, #8
 800be30:	b1e3      	cbz	r3, 800be6c <RDMDeviceParams::Set(RDMDevice*)+0x5a>
 800be32:	f104 070a 	add.w	r7, r4, #10
 800be36:	4638      	mov	r0, r7
 800be38:	4632      	mov	r2, r6
 800be3a:	f7ff ffca 	bl	800bdd2 <memcpy.isra.0>
 800be3e:	6fa0      	ldr	r0, [r4, #120]	; 0x78
 800be40:	f884 602a 	strb.w	r6, [r4, #42]	; 0x2a
 800be44:	b120      	cbz	r0, 800be50 <RDMDeviceParams::Set(RDMDevice*)+0x3e>
 800be46:	6803      	ldr	r3, [r0, #0]
 800be48:	4632      	mov	r2, r6
 800be4a:	4639      	mov	r1, r7
 800be4c:	689b      	ldr	r3, [r3, #8]
 800be4e:	4798      	blx	r3
 800be50:	686b      	ldr	r3, [r5, #4]
 800be52:	079a      	lsls	r2, r3, #30
 800be54:	bf44      	itt	mi
 800be56:	f8b5 2029 	ldrhmi.w	r2, [r5, #41]	; 0x29
 800be5a:	f8a4 204c 	strhmi.w	r2, [r4, #76]	; 0x4c
 800be5e:	075b      	lsls	r3, r3, #29
 800be60:	bf44      	itt	mi
 800be62:	f8b5 302b 	ldrhmi.w	r3, [r5, #43]	; 0x2b
 800be66:	f8a4 304e 	strhmi.w	r3, [r4, #78]	; 0x4e
 800be6a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800be6c:	4632      	mov	r2, r6
 800be6e:	f104 0053 	add.w	r0, r4, #83	; 0x53
 800be72:	f7ff ffae 	bl	800bdd2 <memcpy.isra.0>
 800be76:	f884 6073 	strb.w	r6, [r4, #115]	; 0x73
 800be7a:	e7e9      	b.n	800be50 <RDMDeviceParams::Set(RDMDevice*)+0x3e>

0800be7c <RDMDeviceParams::Dump()>:
 800be7c:	4770      	bx	lr

0800be7e <RDMDeviceResponder::PersonalityUpdate(LightSet*)>:
 800be7e:	4770      	bx	lr

0800be80 <RDMDeviceResponder::DmxStartAddressUpdate()>:
 800be80:	4770      	bx	lr
	...

0800be84 <RDMDeviceResponder::~RDMDeviceResponder()>:
 800be84:	b510      	push	{r4, lr}
 800be86:	4604      	mov	r4, r0
 800be88:	4b05      	ldr	r3, [pc, #20]	; (800bea0 <RDMDeviceResponder::~RDMDeviceResponder()+0x1c>)
 800be8a:	f840 3b8c 	str.w	r3, [r0], #140
 800be8e:	f7ff fef1 	bl	800bc74 <RDMSubDevices::~RDMSubDevices()>
 800be92:	f104 0084 	add.w	r0, r4, #132	; 0x84
 800be96:	f7ff fecd 	bl	800bc34 <RDMSensors::~RDMSensors()>
 800be9a:	4620      	mov	r0, r4
 800be9c:	bd10      	pop	{r4, pc}
 800be9e:	bf00      	nop
 800bea0:	08016ed8 	stmdaeq	r1, {r3, r4, r6, r7, r9, sl, fp, sp, lr}

0800bea4 <RDMDeviceResponder::~RDMDeviceResponder()>:
 800bea4:	b510      	push	{r4, lr}
 800bea6:	4604      	mov	r4, r0
 800bea8:	f7ff ffec 	bl	800be84 <RDMDeviceResponder::~RDMDeviceResponder()>
 800beac:	4620      	mov	r0, r4
 800beae:	f007 fbaf 	bl	8013610 <operator delete(void*)>
 800beb2:	4620      	mov	r0, r4
 800beb4:	bd10      	pop	{r4, pc}

0800beb6 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>:
 800beb6:	b470      	push	{r4, r5, r6}
 800beb8:	790a      	ldrb	r2, [r1, #4]
 800beba:	680b      	ldr	r3, [r1, #0]
 800bebc:	2a20      	cmp	r2, #32
 800bebe:	bf28      	it	cs
 800bec0:	2220      	movcs	r2, #32
 800bec2:	f890 1052 	ldrb.w	r1, [r0, #82]	; 0x52
 800bec6:	189c      	adds	r4, r3, r2
 800bec8:	b189      	cbz	r1, 800beee <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x38>
 800beca:	f100 010a 	add.w	r1, r0, #10
 800bece:	460d      	mov	r5, r1
 800bed0:	42a3      	cmp	r3, r4
 800bed2:	d004      	beq.n	800bede <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x28>
 800bed4:	f813 6b01 	ldrb.w	r6, [r3], #1
 800bed8:	f805 6b01 	strb.w	r6, [r5], #1
 800bedc:	e7f8      	b.n	800bed0 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x1a>
 800bede:	f880 202a 	strb.w	r2, [r0, #42]	; 0x2a
 800bee2:	6f80      	ldr	r0, [r0, #120]	; 0x78
 800bee4:	b170      	cbz	r0, 800bf04 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x4e>
 800bee6:	bc70      	pop	{r4, r5, r6}
 800bee8:	6803      	ldr	r3, [r0, #0]
 800beea:	689b      	ldr	r3, [r3, #8]
 800beec:	4718      	bx	r3
 800beee:	f100 0153 	add.w	r1, r0, #83	; 0x53
 800bef2:	42a3      	cmp	r3, r4
 800bef4:	d004      	beq.n	800bf00 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x4a>
 800bef6:	f813 5b01 	ldrb.w	r5, [r3], #1
 800befa:	f801 5b01 	strb.w	r5, [r1], #1
 800befe:	e7f8      	b.n	800bef2 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)+0x3c>
 800bf00:	f880 2073 	strb.w	r2, [r0, #115]	; 0x73
 800bf04:	bc70      	pop	{r4, r5, r6}
 800bf06:	4770      	bx	lr

0800bf08 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)>:
 800bf08:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800bf0a:	4604      	mov	r4, r0
 800bf0c:	1d07      	adds	r7, r0, #4
 800bf0e:	4638      	mov	r0, r7
 800bf10:	460e      	mov	r6, r1
 800bf12:	4615      	mov	r5, r2
 800bf14:	f000 fec4 	bl	800cca0 <RDMDevice::RDMDevice()>
 800bf18:	4620      	mov	r0, r4
 800bf1a:	4b27      	ldr	r3, [pc, #156]	; (800bfb8 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0xb0>)
 800bf1c:	f840 3b80 	str.w	r3, [r0], #128
 800bf20:	f000 fcce 	bl	800c8c0 <RDMIdentify::RDMIdentify()>
 800bf24:	f104 0084 	add.w	r0, r4, #132	; 0x84
 800bf28:	f7ff fe7c 	bl	800bc24 <RDMSensors::RDMSensors()>
 800bf2c:	f104 008c 	add.w	r0, r4, #140	; 0x8c
 800bf30:	f7ff fe98 	bl	800bc64 <RDMSubDevices::RDMSubDevices()>
 800bf34:	4b21      	ldr	r3, [pc, #132]	; (800bfbc <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0xb4>)
 800bf36:	2200      	movs	r2, #0
 800bf38:	601c      	str	r4, [r3, #0]
 800bf3a:	2365      	movs	r3, #101	; 0x65
 800bf3c:	f884 30c3 	strb.w	r3, [r4, #195]	; 0xc3
 800bf40:	f44f 73b7 	mov.w	r3, #366	; 0x16e
 800bf44:	f8c4 30c4 	str.w	r3, [r4, #196]	; 0xc4
 800bf48:	2301      	movs	r3, #1
 800bf4a:	f8c4 6094 	str.w	r6, [r4, #148]	; 0x94
 800bf4e:	f8a4 30c8 	strh.w	r3, [r4, #200]	; 0xc8
 800bf52:	f8c4 20cc 	str.w	r2, [r4, #204]	; 0xcc
 800bf56:	f104 039d 	add.w	r3, r4, #157	; 0x9d
 800bf5a:	f104 01b0 	add.w	r1, r4, #176	; 0xb0
 800bf5e:	428b      	cmp	r3, r1
 800bf60:	d002      	beq.n	800bf68 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x60>
 800bf62:	f803 2b01 	strb.w	r2, [r3], #1
 800bf66:	e7fa      	b.n	800bf5e <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x56>
 800bf68:	2200      	movs	r2, #0
 800bf6a:	f104 01c3 	add.w	r1, r4, #195	; 0xc3
 800bf6e:	428b      	cmp	r3, r1
 800bf70:	d002      	beq.n	800bf78 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x70>
 800bf72:	f803 2b01 	strb.w	r2, [r3], #1
 800bf76:	e7fa      	b.n	800bf6e <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x66>
 800bf78:	f884 50aa 	strb.w	r5, [r4, #170]	; 0xaa
 800bf7c:	f7fc fc82 	bl	8008884 <RDMSoftwareVersion::GetVersion()>
 800bf80:	f8c4 0098 	str.w	r0, [r4, #152]	; 0x98
 800bf84:	f7fc fc82 	bl	800888c <RDMSoftwareVersion::GetVersionLength()>
 800bf88:	f8d4 3094 	ldr.w	r3, [r4, #148]	; 0x94
 800bf8c:	f884 009c 	strb.w	r0, [r4, #156]	; 0x9c
 800bf90:	681b      	ldr	r3, [r3, #0]
 800bf92:	685b      	ldr	r3, [r3, #4]
 800bf94:	b91b      	cbnz	r3, 800bf9e <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0x96>
 800bf96:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800bf9a:	f8a4 30c8 	strh.w	r3, [r4, #200]	; 0xc8
 800bf9e:	4b08      	ldr	r3, [pc, #32]	; (800bfc0 <RDMDeviceResponder::RDMDeviceResponder(RDMPersonality**, unsigned int)+0xb8>)
 800bfa0:	4638      	mov	r0, r7
 800bfa2:	9300      	str	r3, [sp, #0]
 800bfa4:	231c      	movs	r3, #28
 800bfa6:	4669      	mov	r1, sp
 800bfa8:	f88d 3004 	strb.w	r3, [sp, #4]
 800bfac:	f7ff ff83 	bl	800beb6 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>
 800bfb0:	4620      	mov	r0, r4
 800bfb2:	b003      	add	sp, #12
 800bfb4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bfb6:	bf00      	nop
 800bfb8:	08016ed8 	stmdaeq	r1, {r3, r4, r6, r7, r9, sl, fp, sp, lr}
 800bfbc:	2000326c 	andcs	r3, r0, ip, ror #4
 800bfc0:	08016eb3 	stmdaeq	r1, {r0, r1, r4, r5, r7, r9, sl, fp, sp, lr}

0800bfc4 <RDMDeviceResponder::Init()>:
 800bfc4:	2301      	movs	r3, #1
 800bfc6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800bfc8:	4604      	mov	r4, r0
 800bfca:	f06f 050d 	mvn.w	r5, #13
 800bfce:	f880 3056 	strb.w	r3, [r0, #86]	; 0x56
 800bfd2:	f100 0357 	add.w	r3, r0, #87	; 0x57
 800bfd6:	9300      	str	r3, [sp, #0]
 800bfd8:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 800bfdc:	4669      	mov	r1, sp
 800bfde:	3004      	adds	r0, #4
 800bfe0:	f88d 3004 	strb.w	r3, [sp, #4]
 800bfe4:	f7ff ff67 	bl	800beb6 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>
 800bfe8:	f894 3077 	ldrb.w	r3, [r4, #119]	; 0x77
 800bfec:	f894 002e 	ldrb.w	r0, [r4, #46]	; 0x2e
 800bff0:	f104 020e 	add.w	r2, r4, #14
 800bff4:	1b2d      	subs	r5, r5, r4
 800bff6:	18a9      	adds	r1, r5, r2
 800bff8:	4288      	cmp	r0, r1
 800bffa:	d904      	bls.n	800c006 <RDMDeviceResponder::Init()+0x42>
 800bffc:	f812 1b01 	ldrb.w	r1, [r2], #1
 800c000:	440b      	add	r3, r1
 800c002:	b29b      	uxth	r3, r3
 800c004:	e7f7      	b.n	800bff6 <RDMDeviceResponder::Init()+0x32>
 800c006:	f8a4 3078 	strh.w	r3, [r4, #120]	; 0x78
 800c00a:	f7fc fc41 	bl	8008890 <RDMSoftwareVersion::GetVersionId()>
 800c00e:	2201      	movs	r2, #1
 800c010:	f884 209d 	strb.w	r2, [r4, #157]	; 0x9d
 800c014:	2200      	movs	r2, #0
 800c016:	f8b4 3050 	ldrh.w	r3, [r4, #80]	; 0x50
 800c01a:	f8a4 209e 	strh.w	r2, [r4, #158]	; 0x9e
 800c01e:	f884 20a0 	strb.w	r2, [r4, #160]	; 0xa0
 800c022:	f884 30a2 	strb.w	r3, [r4, #162]	; 0xa2
 800c026:	0a1a      	lsrs	r2, r3, #8
 800c028:	0e03      	lsrs	r3, r0, #24
 800c02a:	f884 30a3 	strb.w	r3, [r4, #163]	; 0xa3
 800c02e:	0c03      	lsrs	r3, r0, #16
 800c030:	f884 30a4 	strb.w	r3, [r4, #164]	; 0xa4
 800c034:	0a03      	lsrs	r3, r0, #8
 800c036:	f884 30a5 	strb.w	r3, [r4, #165]	; 0xa5
 800c03a:	f8d4 3094 	ldr.w	r3, [r4, #148]	; 0x94
 800c03e:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
 800c042:	f884 00a6 	strb.w	r0, [r4, #166]	; 0xa6
 800c046:	681b      	ldr	r3, [r3, #0]
 800c048:	f8b4 6090 	ldrh.w	r6, [r4, #144]	; 0x90
 800c04c:	685d      	ldr	r5, [r3, #4]
 800c04e:	bb05      	cbnz	r5, 800c092 <RDMDeviceResponder::Init()+0xce>
 800c050:	f8b4 30c8 	ldrh.w	r3, [r4, #200]	; 0xc8
 800c054:	f884 50a7 	strb.w	r5, [r4, #167]	; 0xa7
 800c058:	0a1a      	lsrs	r2, r3, #8
 800c05a:	f884 50a8 	strb.w	r5, [r4, #168]	; 0xa8
 800c05e:	f884 20ab 	strb.w	r2, [r4, #171]	; 0xab
 800c062:	f884 30ac 	strb.w	r3, [r4, #172]	; 0xac
 800c066:	2301      	movs	r3, #1
 800c068:	f884 30a9 	strb.w	r3, [r4, #169]	; 0xa9
 800c06c:	0a33      	lsrs	r3, r6, #8
 800c06e:	f884 30ad 	strb.w	r3, [r4, #173]	; 0xad
 800c072:	f894 3088 	ldrb.w	r3, [r4, #136]	; 0x88
 800c076:	f884 60ae 	strb.w	r6, [r4, #174]	; 0xae
 800c07a:	f884 30af 	strb.w	r3, [r4, #175]	; 0xaf
 800c07e:	f104 01b0 	add.w	r1, r4, #176	; 0xb0
 800c082:	f104 039d 	add.w	r3, r4, #157	; 0x9d
 800c086:	428b      	cmp	r3, r1
 800c088:	d01e      	beq.n	800c0c8 <RDMDeviceResponder::Init()+0x104>
 800c08a:	f813 2b01 	ldrb.w	r2, [r3], #1
 800c08e:	749a      	strb	r2, [r3, #18]
 800c090:	e7f9      	b.n	800c086 <RDMDeviceResponder::Init()+0xc2>
 800c092:	682b      	ldr	r3, [r5, #0]
 800c094:	4628      	mov	r0, r5
 800c096:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c098:	4798      	blx	r3
 800c09a:	0a00      	lsrs	r0, r0, #8
 800c09c:	f884 00a7 	strb.w	r0, [r4, #167]	; 0xa7
 800c0a0:	682b      	ldr	r3, [r5, #0]
 800c0a2:	4628      	mov	r0, r5
 800c0a4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c0a6:	4798      	blx	r3
 800c0a8:	f884 00a8 	strb.w	r0, [r4, #168]	; 0xa8
 800c0ac:	682b      	ldr	r3, [r5, #0]
 800c0ae:	4628      	mov	r0, r5
 800c0b0:	6a1b      	ldr	r3, [r3, #32]
 800c0b2:	4798      	blx	r3
 800c0b4:	0a00      	lsrs	r0, r0, #8
 800c0b6:	f884 00ab 	strb.w	r0, [r4, #171]	; 0xab
 800c0ba:	682b      	ldr	r3, [r5, #0]
 800c0bc:	4628      	mov	r0, r5
 800c0be:	6a1b      	ldr	r3, [r3, #32]
 800c0c0:	4798      	blx	r3
 800c0c2:	f884 00ac 	strb.w	r0, [r4, #172]	; 0xac
 800c0c6:	e7ce      	b.n	800c066 <RDMDeviceResponder::Init()+0xa2>
 800c0c8:	f894 30ac 	ldrb.w	r3, [r4, #172]	; 0xac
 800c0cc:	f894 20a9 	ldrb.w	r2, [r4, #169]	; 0xa9
 800c0d0:	4413      	add	r3, r2
 800c0d2:	f8a4 30c6 	strh.w	r3, [r4, #198]	; 0xc6
 800c0d6:	b002      	add	sp, #8
 800c0d8:	bd70      	pop	{r4, r5, r6, pc}
	...

0800c0dc <RDMDeviceResponder::Print()>:
 800c0dc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c0de:	4604      	mov	r4, r0
 800c0e0:	3004      	adds	r0, #4
 800c0e2:	f000 fe53 	bl	800cd8c <RDMDevice::Print()>
 800c0e6:	f8d4 3094 	ldr.w	r3, [r4, #148]	; 0x94
 800c0ea:	481d      	ldr	r0, [pc, #116]	; (800c160 <RDMDeviceResponder::Print()+0x84>)
 800c0ec:	681d      	ldr	r5, [r3, #0]
 800c0ee:	f895 6028 	ldrb.w	r6, [r5, #40]	; 0x28
 800c0f2:	f7fc fedb 	bl	8008eac <printf>
 800c0f6:	f894 209e 	ldrb.w	r2, [r4, #158]	; 0x9e
 800c0fa:	f894 109d 	ldrb.w	r1, [r4, #157]	; 0x9d
 800c0fe:	4819      	ldr	r0, [pc, #100]	; (800c164 <RDMDeviceResponder::Print()+0x88>)
 800c100:	f7fc fed4 	bl	8008eac <printf>
 800c104:	f894 30ac 	ldrb.w	r3, [r4, #172]	; 0xac
 800c108:	f894 10ab 	ldrb.w	r1, [r4, #171]	; 0xab
 800c10c:	4816      	ldr	r0, [pc, #88]	; (800c168 <RDMDeviceResponder::Print()+0x8c>)
 800c10e:	eb03 2101 	add.w	r1, r3, r1, lsl #8
 800c112:	f7fc fecb 	bl	8008eac <printf>
 800c116:	f894 30a8 	ldrb.w	r3, [r4, #168]	; 0xa8
 800c11a:	f894 10a7 	ldrb.w	r1, [r4, #167]	; 0xa7
 800c11e:	3508      	adds	r5, #8
 800c120:	eb03 2101 	add.w	r1, r3, r1, lsl #8
 800c124:	4811      	ldr	r0, [pc, #68]	; (800c16c <RDMDeviceResponder::Print()+0x90>)
 800c126:	f7fc fec1 	bl	8008eac <printf>
 800c12a:	4633      	mov	r3, r6
 800c12c:	f894 20aa 	ldrb.w	r2, [r4, #170]	; 0xaa
 800c130:	f894 10a9 	ldrb.w	r1, [r4, #169]	; 0xa9
 800c134:	9500      	str	r5, [sp, #0]
 800c136:	480e      	ldr	r0, [pc, #56]	; (800c170 <RDMDeviceResponder::Print()+0x94>)
 800c138:	f7fc feb8 	bl	8008eac <printf>
 800c13c:	f894 10ad 	ldrb.w	r1, [r4, #173]	; 0xad
 800c140:	f894 30ae 	ldrb.w	r3, [r4, #174]	; 0xae
 800c144:	480b      	ldr	r0, [pc, #44]	; (800c174 <RDMDeviceResponder::Print()+0x98>)
 800c146:	eb03 2101 	add.w	r1, r3, r1, lsl #8
 800c14a:	f7fc feaf 	bl	8008eac <printf>
 800c14e:	f894 10af 	ldrb.w	r1, [r4, #175]	; 0xaf
 800c152:	4809      	ldr	r0, [pc, #36]	; (800c178 <RDMDeviceResponder::Print()+0x9c>)
 800c154:	b002      	add	sp, #8
 800c156:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c15a:	f7fc bea7 	b.w	8008eac <printf>
 800c15e:	bf00      	nop
 800c160:	08016dff 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r6, r7, r8, sl, fp, sp, lr}
 800c164:	08016e1c 	stmdaeq	r1, {r2, r3, r4, r9, sl, fp, sp, lr}
 800c168:	08016e35 	stmdaeq	r1, {r0, r2, r4, r5, r9, sl, fp, sp, lr}
 800c16c:	08016e4d 	stmdaeq	r1, {r0, r2, r3, r6, r9, sl, fp, sp, lr}
 800c170:	08016e65 	stmdaeq	r1, {r0, r2, r5, r6, r9, sl, fp, sp, lr}
 800c174:	08016e83 	stmdaeq	r1, {r0, r1, r7, r9, sl, fp, sp, lr}
 800c178:	08016e9b 	stmdaeq	r1, {r0, r1, r3, r4, r7, r9, sl, fp, sp, lr}

0800c17c <memcmp>:
 800c17c:	b510      	push	{r4, lr}
 800c17e:	3901      	subs	r1, #1
 800c180:	4402      	add	r2, r0
 800c182:	4290      	cmp	r0, r2
 800c184:	d008      	beq.n	800c198 <memcmp+0x1c>
 800c186:	7803      	ldrb	r3, [r0, #0]
 800c188:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800c18c:	42a3      	cmp	r3, r4
 800c18e:	d001      	beq.n	800c194 <memcmp+0x18>
 800c190:	1b18      	subs	r0, r3, r4
 800c192:	bd10      	pop	{r4, pc}
 800c194:	3001      	adds	r0, #1
 800c196:	e7f4      	b.n	800c182 <memcmp+0x6>
 800c198:	2000      	movs	r0, #0
 800c19a:	e7fa      	b.n	800c192 <memcmp+0x16>

0800c19c <memcpy.isra.0>:
 800c19c:	3801      	subs	r0, #1
 800c19e:	440a      	add	r2, r1
 800c1a0:	4291      	cmp	r1, r2
 800c1a2:	d004      	beq.n	800c1ae <memcpy.isra.0+0x12>
 800c1a4:	f811 3b01 	ldrb.w	r3, [r1], #1
 800c1a8:	f800 3f01 	strb.w	r3, [r0, #1]!
 800c1ac:	e7f8      	b.n	800c1a0 <memcpy.isra.0+0x4>
 800c1ae:	4770      	bx	lr

0800c1b0 <RDMDeviceResponder::SetFactoryDefaults()>:
 800c1b0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c1b2:	4604      	mov	r4, r0
 800c1b4:	f06f 050d 	mvn.w	r5, #13
 800c1b8:	f100 0357 	add.w	r3, r0, #87	; 0x57
 800c1bc:	9300      	str	r3, [sp, #0]
 800c1be:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 800c1c2:	4669      	mov	r1, sp
 800c1c4:	3004      	adds	r0, #4
 800c1c6:	f88d 3004 	strb.w	r3, [sp, #4]
 800c1ca:	f7ff fe74 	bl	800beb6 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>
 800c1ce:	f894 3077 	ldrb.w	r3, [r4, #119]	; 0x77
 800c1d2:	f894 002e 	ldrb.w	r0, [r4, #46]	; 0x2e
 800c1d6:	f104 020e 	add.w	r2, r4, #14
 800c1da:	1b2d      	subs	r5, r5, r4
 800c1dc:	18a9      	adds	r1, r5, r2
 800c1de:	4288      	cmp	r0, r1
 800c1e0:	d904      	bls.n	800c1ec <RDMDeviceResponder::SetFactoryDefaults()+0x3c>
 800c1e2:	f812 1b01 	ldrb.w	r1, [r2], #1
 800c1e6:	440b      	add	r3, r1
 800c1e8:	b29b      	uxth	r3, r3
 800c1ea:	e7f7      	b.n	800c1dc <RDMDeviceResponder::SetFactoryDefaults()+0x2c>
 800c1ec:	f8a4 3078 	strh.w	r3, [r4, #120]	; 0x78
 800c1f0:	2301      	movs	r3, #1
 800c1f2:	f884 30a9 	strb.w	r3, [r4, #169]	; 0xa9
 800c1f6:	f8d4 3094 	ldr.w	r3, [r4, #148]	; 0x94
 800c1fa:	681b      	ldr	r3, [r3, #0]
 800c1fc:	685d      	ldr	r5, [r3, #4]
 800c1fe:	682b      	ldr	r3, [r5, #0]
 800c200:	4628      	mov	r0, r5
 800c202:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c204:	4798      	blx	r3
 800c206:	0a00      	lsrs	r0, r0, #8
 800c208:	f884 00a7 	strb.w	r0, [r4, #167]	; 0xa7
 800c20c:	682b      	ldr	r3, [r5, #0]
 800c20e:	4628      	mov	r0, r5
 800c210:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c212:	4798      	blx	r3
 800c214:	f884 00a8 	strb.w	r0, [r4, #168]	; 0xa8
 800c218:	682b      	ldr	r3, [r5, #0]
 800c21a:	4628      	mov	r0, r5
 800c21c:	6a1b      	ldr	r3, [r3, #32]
 800c21e:	4798      	blx	r3
 800c220:	0a00      	lsrs	r0, r0, #8
 800c222:	f884 00ab 	strb.w	r0, [r4, #171]	; 0xab
 800c226:	682b      	ldr	r3, [r5, #0]
 800c228:	4628      	mov	r0, r5
 800c22a:	6a1b      	ldr	r3, [r3, #32]
 800c22c:	4798      	blx	r3
 800c22e:	6823      	ldr	r3, [r4, #0]
 800c230:	f884 00ac 	strb.w	r0, [r4, #172]	; 0xac
 800c234:	4629      	mov	r1, r5
 800c236:	689b      	ldr	r3, [r3, #8]
 800c238:	4620      	mov	r0, r4
 800c23a:	4798      	blx	r3
 800c23c:	f8b4 50c8 	ldrh.w	r5, [r4, #200]	; 0xc8
 800c240:	1e6b      	subs	r3, r5, #1
 800c242:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800c246:	d217      	bcs.n	800c278 <RDMDeviceResponder::SetFactoryDefaults()+0xc8>
 800c248:	f894 30a9 	ldrb.w	r3, [r4, #169]	; 0xa9
 800c24c:	f8d4 2094 	ldr.w	r2, [r4, #148]	; 0x94
 800c250:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800c254:	3b01      	subs	r3, #1
 800c256:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800c25a:	4629      	mov	r1, r5
 800c25c:	6858      	ldr	r0, [r3, #4]
 800c25e:	6803      	ldr	r3, [r0, #0]
 800c260:	69db      	ldr	r3, [r3, #28]
 800c262:	4798      	blx	r3
 800c264:	b120      	cbz	r0, 800c270 <RDMDeviceResponder::SetFactoryDefaults()+0xc0>
 800c266:	0a2b      	lsrs	r3, r5, #8
 800c268:	f884 30ab 	strb.w	r3, [r4, #171]	; 0xab
 800c26c:	f884 50ac 	strb.w	r5, [r4, #172]	; 0xac
 800c270:	6823      	ldr	r3, [r4, #0]
 800c272:	4620      	mov	r0, r4
 800c274:	68db      	ldr	r3, [r3, #12]
 800c276:	4798      	blx	r3
 800c278:	2213      	movs	r2, #19
 800c27a:	f104 019d 	add.w	r1, r4, #157	; 0x9d
 800c27e:	f104 00b0 	add.w	r0, r4, #176	; 0xb0
 800c282:	f7ff ff8b 	bl	800c19c <memcpy.isra.0>
 800c286:	f104 008c 	add.w	r0, r4, #140	; 0x8c
 800c28a:	f7ff fd3c 	bl	800bd06 <RDMSubDevices::SetFactoryDefaults()>
 800c28e:	f894 30ac 	ldrb.w	r3, [r4, #172]	; 0xac
 800c292:	f894 20a9 	ldrb.w	r2, [r4, #169]	; 0xa9
 800c296:	f8d4 00cc 	ldr.w	r0, [r4, #204]	; 0xcc
 800c29a:	4413      	add	r3, r2
 800c29c:	f8a4 30c6 	strh.w	r3, [r4, #198]	; 0xc6
 800c2a0:	2301      	movs	r3, #1
 800c2a2:	f884 30c5 	strb.w	r3, [r4, #197]	; 0xc5
 800c2a6:	b128      	cbz	r0, 800c2b4 <RDMDeviceResponder::SetFactoryDefaults()+0x104>
 800c2a8:	6803      	ldr	r3, [r0, #0]
 800c2aa:	689b      	ldr	r3, [r3, #8]
 800c2ac:	b003      	add	sp, #12
 800c2ae:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800c2b2:	4718      	bx	r3
 800c2b4:	b003      	add	sp, #12
 800c2b6:	bd30      	pop	{r4, r5, pc}

0800c2b8 <RDMHandler::RDMHandler(bool)>:
 800c2b8:	2200      	movs	r2, #0
 800c2ba:	7001      	strb	r1, [r0, #0]
 800c2bc:	e9c0 2201 	strd	r2, r2, [r0, #4]
 800c2c0:	7042      	strb	r2, [r0, #1]
 800c2c2:	4770      	bx	lr

0800c2c4 <RDMHandler::HandleString(char const*, unsigned int)>:
 800c2c4:	6883      	ldr	r3, [r0, #8]
 800c2c6:	75da      	strb	r2, [r3, #23]
 800c2c8:	3318      	adds	r3, #24
 800c2ca:	440a      	add	r2, r1
 800c2cc:	4291      	cmp	r1, r2
 800c2ce:	d004      	beq.n	800c2da <RDMHandler::HandleString(char const*, unsigned int)+0x16>
 800c2d0:	f811 0b01 	ldrb.w	r0, [r1], #1
 800c2d4:	f803 0b01 	strb.w	r0, [r3], #1
 800c2d8:	e7f8      	b.n	800c2cc <RDMHandler::HandleString(char const*, unsigned int)+0x8>
 800c2da:	4770      	bx	lr

0800c2dc <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)>:
 800c2dc:	b570      	push	{r4, r5, r6, lr}
 800c2de:	e9d0 4301 	ldrd	r4, r3, [r0, #4]
 800c2e2:	25cc      	movs	r5, #204	; 0xcc
 800c2e4:	701d      	strb	r5, [r3, #0]
 800c2e6:	7825      	ldrb	r5, [r4, #0]
 800c2e8:	705d      	strb	r5, [r3, #1]
 800c2ea:	7ba5      	ldrb	r5, [r4, #14]
 800c2ec:	73dd      	strb	r5, [r3, #15]
 800c2ee:	2500      	movs	r5, #0
 800c2f0:	745d      	strb	r5, [r3, #17]
 800c2f2:	7c65      	ldrb	r5, [r4, #17]
 800c2f4:	749d      	strb	r5, [r3, #18]
 800c2f6:	7ca5      	ldrb	r5, [r4, #18]
 800c2f8:	74dd      	strb	r5, [r3, #19]
 800c2fa:	7ce5      	ldrb	r5, [r4, #19]
 800c2fc:	3501      	adds	r5, #1
 800c2fe:	751d      	strb	r5, [r3, #20]
 800c300:	7d25      	ldrb	r5, [r4, #20]
 800c302:	755d      	strb	r5, [r3, #21]
 800c304:	7d65      	ldrb	r5, [r4, #21]
 800c306:	759d      	strb	r5, [r3, #22]
 800c308:	b119      	cbz	r1, 800c312 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x36>
 800c30a:	1e4d      	subs	r5, r1, #1
 800c30c:	2d01      	cmp	r5, #1
 800c30e:	d921      	bls.n	800c354 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x78>
 800c310:	bd70      	pop	{r4, r5, r6, pc}
 800c312:	7dda      	ldrb	r2, [r3, #23]
 800c314:	7419      	strb	r1, [r3, #16]
 800c316:	3218      	adds	r2, #24
 800c318:	709a      	strb	r2, [r3, #2]
 800c31a:	4a16      	ldr	r2, [pc, #88]	; (800c374 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x98>)
 800c31c:	f104 0108 	add.w	r1, r4, #8
 800c320:	6812      	ldr	r2, [r2, #0]
 800c322:	1cdd      	adds	r5, r3, #3
 800c324:	3204      	adds	r2, #4
 800c326:	340e      	adds	r4, #14
 800c328:	f811 6b01 	ldrb.w	r6, [r1], #1
 800c32c:	f805 6b01 	strb.w	r6, [r5], #1
 800c330:	f812 6b01 	ldrb.w	r6, [r2], #1
 800c334:	42a1      	cmp	r1, r4
 800c336:	716e      	strb	r6, [r5, #5]
 800c338:	d1f6      	bne.n	800c328 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x4c>
 800c33a:	2200      	movs	r2, #0
 800c33c:	7899      	ldrb	r1, [r3, #2]
 800c33e:	4613      	mov	r3, r2
 800c340:	6884      	ldr	r4, [r0, #8]
 800c342:	4291      	cmp	r1, r2
 800c344:	eb04 0502 	add.w	r5, r4, r2
 800c348:	d90d      	bls.n	800c366 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x8a>
 800c34a:	5ca5      	ldrb	r5, [r4, r2]
 800c34c:	3201      	adds	r2, #1
 800c34e:	442b      	add	r3, r5
 800c350:	b29b      	uxth	r3, r3
 800c352:	e7f6      	b.n	800c342 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x66>
 800c354:	7419      	strb	r1, [r3, #16]
 800c356:	2102      	movs	r1, #2
 800c358:	251a      	movs	r5, #26
 800c35a:	75d9      	strb	r1, [r3, #23]
 800c35c:	0a11      	lsrs	r1, r2, #8
 800c35e:	709d      	strb	r5, [r3, #2]
 800c360:	7619      	strb	r1, [r3, #24]
 800c362:	765a      	strb	r2, [r3, #25]
 800c364:	e7d9      	b.n	800c31a <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x3e>
 800c366:	0a1a      	lsrs	r2, r3, #8
 800c368:	702a      	strb	r2, [r5, #0]
 800c36a:	6882      	ldr	r2, [r0, #8]
 800c36c:	440a      	add	r2, r1
 800c36e:	7053      	strb	r3, [r2, #1]
 800c370:	e7ce      	b.n	800c310 <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)+0x34>
 800c372:	bf00      	nop
 800c374:	2000326c 	andcs	r3, r0, ip, ror #4

0800c378 <RDMHandler::RespondMessageAck()>:
 800c378:	6843      	ldr	r3, [r0, #4]
 800c37a:	7d9a      	ldrb	r2, [r3, #22]
 800c37c:	b90a      	cbnz	r2, 800c382 <RDMHandler::RespondMessageAck()+0xa>
 800c37e:	2218      	movs	r2, #24
 800c380:	705a      	strb	r2, [r3, #1]
 800c382:	2200      	movs	r2, #0
 800c384:	4611      	mov	r1, r2
 800c386:	f7ff bfa9 	b.w	800c2dc <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)>
	...

0800c38c <RDMHandler::GetDeviceInfo(unsigned short)>:
 800c38c:	b538      	push	{r3, r4, r5, lr}
 800c38e:	4b18      	ldr	r3, [pc, #96]	; (800c3f0 <RDMHandler::GetDeviceInfo(unsigned short)+0x64>)
 800c390:	4605      	mov	r5, r0
 800c392:	681c      	ldr	r4, [r3, #0]
 800c394:	b349      	cbz	r1, 800c3ea <RDMHandler::GetDeviceInfo(unsigned short)+0x5e>
 800c396:	f104 008c 	add.w	r0, r4, #140	; 0x8c
 800c39a:	f7ff fc83 	bl	800bca4 <RDMSubDevices::GetInfo(unsigned short)>
 800c39e:	b1b8      	cbz	r0, 800c3d0 <RDMHandler::GetDeviceInfo(unsigned short)+0x44>
 800c3a0:	8803      	ldrh	r3, [r0, #0]
 800c3a2:	0a1b      	lsrs	r3, r3, #8
 800c3a4:	f884 30ba 	strb.w	r3, [r4, #186]	; 0xba
 800c3a8:	8803      	ldrh	r3, [r0, #0]
 800c3aa:	f884 30bb 	strb.w	r3, [r4, #187]	; 0xbb
 800c3ae:	7903      	ldrb	r3, [r0, #4]
 800c3b0:	f884 30bc 	strb.w	r3, [r4, #188]	; 0xbc
 800c3b4:	7943      	ldrb	r3, [r0, #5]
 800c3b6:	f884 30bd 	strb.w	r3, [r4, #189]	; 0xbd
 800c3ba:	8843      	ldrh	r3, [r0, #2]
 800c3bc:	0a1b      	lsrs	r3, r3, #8
 800c3be:	f884 30be 	strb.w	r3, [r4, #190]	; 0xbe
 800c3c2:	8843      	ldrh	r3, [r0, #2]
 800c3c4:	f884 30bf 	strb.w	r3, [r4, #191]	; 0xbf
 800c3c8:	f890 3027 	ldrb.w	r3, [r0, #39]	; 0x27
 800c3cc:	f884 30c2 	strb.w	r3, [r4, #194]	; 0xc2
 800c3d0:	f104 01b0 	add.w	r1, r4, #176	; 0xb0
 800c3d4:	2213      	movs	r2, #19
 800c3d6:	68a8      	ldr	r0, [r5, #8]
 800c3d8:	75c2      	strb	r2, [r0, #23]
 800c3da:	3018      	adds	r0, #24
 800c3dc:	f7ff fede 	bl	800c19c <memcpy.isra.0>
 800c3e0:	4628      	mov	r0, r5
 800c3e2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c3e6:	f7ff bfc7 	b.w	800c378 <RDMHandler::RespondMessageAck()>
 800c3ea:	f104 019d 	add.w	r1, r4, #157	; 0x9d
 800c3ee:	e7f1      	b.n	800c3d4 <RDMHandler::GetDeviceInfo(unsigned short)+0x48>
 800c3f0:	2000326c 	andcs	r3, r0, ip, ror #4

0800c3f4 <RDMHandler::GetFactoryDefaults(unsigned short)>:
 800c3f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c3f6:	2301      	movs	r3, #1
 800c3f8:	6886      	ldr	r6, [r0, #8]
 800c3fa:	4605      	mov	r5, r0
 800c3fc:	75f3      	strb	r3, [r6, #23]
 800c3fe:	4b1c      	ldr	r3, [pc, #112]	; (800c470 <RDMHandler::GetFactoryDefaults(unsigned short)+0x7c>)
 800c400:	681c      	ldr	r4, [r3, #0]
 800c402:	f894 30c5 	ldrb.w	r3, [r4, #197]	; 0xc5
 800c406:	b37b      	cbz	r3, 800c468 <RDMHandler::GetFactoryDefaults(unsigned short)+0x74>
 800c408:	f06f 0c0d 	mvn.w	ip, #13
 800c40c:	f8b4 1078 	ldrh.w	r1, [r4, #120]	; 0x78
 800c410:	f894 3077 	ldrb.w	r3, [r4, #119]	; 0x77
 800c414:	f894 702e 	ldrb.w	r7, [r4, #46]	; 0x2e
 800c418:	f104 020e 	add.w	r2, r4, #14
 800c41c:	ebac 0c04 	sub.w	ip, ip, r4
 800c420:	eb0c 0002 	add.w	r0, ip, r2
 800c424:	42b8      	cmp	r0, r7
 800c426:	d204      	bcs.n	800c432 <RDMHandler::GetFactoryDefaults(unsigned short)+0x3e>
 800c428:	f812 0b01 	ldrb.w	r0, [r2], #1
 800c42c:	4403      	add	r3, r0
 800c42e:	b29b      	uxth	r3, r3
 800c430:	e7f6      	b.n	800c420 <RDMHandler::GetFactoryDefaults(unsigned short)+0x2c>
 800c432:	4299      	cmp	r1, r3
 800c434:	d008      	beq.n	800c448 <RDMHandler::GetFactoryDefaults(unsigned short)+0x54>
 800c436:	2300      	movs	r3, #0
 800c438:	f884 30c5 	strb.w	r3, [r4, #197]	; 0xc5
 800c43c:	7633      	strb	r3, [r6, #24]
 800c43e:	4628      	mov	r0, r5
 800c440:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800c444:	f7ff bf98 	b.w	800c378 <RDMHandler::RespondMessageAck()>
 800c448:	f894 30ac 	ldrb.w	r3, [r4, #172]	; 0xac
 800c44c:	f894 10a9 	ldrb.w	r1, [r4, #169]	; 0xa9
 800c450:	f8b4 20c6 	ldrh.w	r2, [r4, #198]	; 0xc6
 800c454:	440b      	add	r3, r1
 800c456:	429a      	cmp	r2, r3
 800c458:	d1ed      	bne.n	800c436 <RDMHandler::GetFactoryDefaults(unsigned short)+0x42>
 800c45a:	f104 008c 	add.w	r0, r4, #140	; 0x8c
 800c45e:	f7ff fc3f 	bl	800bce0 <RDMSubDevices::GetFactoryDefaults()>
 800c462:	4603      	mov	r3, r0
 800c464:	2800      	cmp	r0, #0
 800c466:	d0e7      	beq.n	800c438 <RDMHandler::GetFactoryDefaults(unsigned short)+0x44>
 800c468:	f894 30c5 	ldrb.w	r3, [r4, #197]	; 0xc5
 800c46c:	e7e6      	b.n	800c43c <RDMHandler::GetFactoryDefaults(unsigned short)+0x48>
 800c46e:	bf00      	nop
 800c470:	2000326c 	andcs	r3, r0, ip, ror #4

0800c474 <RDMHandler::GetDeviceModelDescription(unsigned short)>:
 800c474:	b510      	push	{r4, lr}
 800c476:	4604      	mov	r4, r0
 800c478:	220e      	movs	r2, #14
 800c47a:	4904      	ldr	r1, [pc, #16]	; (800c48c <RDMHandler::GetDeviceModelDescription(unsigned short)+0x18>)
 800c47c:	f7ff ff22 	bl	800c2c4 <RDMHandler::HandleString(char const*, unsigned int)>
 800c480:	4620      	mov	r0, r4
 800c482:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c486:	f7ff bf77 	b.w	800c378 <RDMHandler::RespondMessageAck()>
 800c48a:	bf00      	nop
 800c48c:	08016118 	stmdaeq	r1, {r3, r4, r8, sp, lr}

0800c490 <RDMHandler::GetManufacturerLabel(unsigned short)>:
 800c490:	b510      	push	{r4, lr}
 800c492:	4604      	mov	r4, r0
 800c494:	4b05      	ldr	r3, [pc, #20]	; (800c4ac <RDMHandler::GetManufacturerLabel(unsigned short)+0x1c>)
 800c496:	6819      	ldr	r1, [r3, #0]
 800c498:	f891 204f 	ldrb.w	r2, [r1, #79]	; 0x4f
 800c49c:	312f      	adds	r1, #47	; 0x2f
 800c49e:	f7ff ff11 	bl	800c2c4 <RDMHandler::HandleString(char const*, unsigned int)>
 800c4a2:	4620      	mov	r0, r4
 800c4a4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c4a8:	f7ff bf66 	b.w	800c378 <RDMHandler::RespondMessageAck()>
 800c4ac:	2000326c 	andcs	r3, r0, ip, ror #4

0800c4b0 <RDMHandler::GetDeviceLabel(unsigned short)>:
 800c4b0:	4b0d      	ldr	r3, [pc, #52]	; (800c4e8 <RDMHandler::GetDeviceLabel(unsigned short)+0x38>)
 800c4b2:	b513      	push	{r0, r1, r4, lr}
 800c4b4:	4604      	mov	r4, r0
 800c4b6:	6818      	ldr	r0, [r3, #0]
 800c4b8:	b171      	cbz	r1, 800c4d8 <RDMHandler::GetDeviceLabel(unsigned short)+0x28>
 800c4ba:	466a      	mov	r2, sp
 800c4bc:	308c      	adds	r0, #140	; 0x8c
 800c4be:	f7ff fbf9 	bl	800bcb4 <RDMSubDevices::GetLabel(unsigned short, TRDMDeviceInfoData*)>
 800c4c2:	4620      	mov	r0, r4
 800c4c4:	f89d 2004 	ldrb.w	r2, [sp, #4]
 800c4c8:	9900      	ldr	r1, [sp, #0]
 800c4ca:	f7ff fefb 	bl	800c2c4 <RDMHandler::HandleString(char const*, unsigned int)>
 800c4ce:	4620      	mov	r0, r4
 800c4d0:	f7ff ff52 	bl	800c378 <RDMHandler::RespondMessageAck()>
 800c4d4:	b002      	add	sp, #8
 800c4d6:	bd10      	pop	{r4, pc}
 800c4d8:	f100 030e 	add.w	r3, r0, #14
 800c4dc:	9300      	str	r3, [sp, #0]
 800c4de:	f890 302e 	ldrb.w	r3, [r0, #46]	; 0x2e
 800c4e2:	f88d 3004 	strb.w	r3, [sp, #4]
 800c4e6:	e7ec      	b.n	800c4c2 <RDMHandler::GetDeviceLabel(unsigned short)+0x12>
 800c4e8:	2000326c 	andcs	r3, r0, ip, ror #4

0800c4ec <RDMHandler::GetIdentifyDevice(unsigned short)>:
 800c4ec:	2201      	movs	r2, #1
 800c4ee:	6883      	ldr	r3, [r0, #8]
 800c4f0:	75da      	strb	r2, [r3, #23]
 800c4f2:	4a02      	ldr	r2, [pc, #8]	; (800c4fc <RDMHandler::GetIdentifyDevice(unsigned short)+0x10>)
 800c4f4:	7812      	ldrb	r2, [r2, #0]
 800c4f6:	761a      	strb	r2, [r3, #24]
 800c4f8:	f7ff bf3e 	b.w	800c378 <RDMHandler::RespondMessageAck()>
 800c4fc:	20003270 	andcs	r3, r0, r0, ror r2

0800c500 <RDMHandler::RespondMessageNack(unsigned short)>:
 800c500:	460a      	mov	r2, r1
 800c502:	2102      	movs	r1, #2
 800c504:	f7ff beea 	b.w	800c2dc <RDMHandler::CreateRespondMessage(unsigned char, unsigned short)>

0800c508 <RDMHandler::SetResetDevice(bool, unsigned short)>:
 800c508:	b510      	push	{r4, lr}
 800c50a:	6843      	ldr	r3, [r0, #4]
 800c50c:	4604      	mov	r4, r0
 800c50e:	7d9a      	ldrb	r2, [r3, #22]
 800c510:	2a01      	cmp	r2, #1
 800c512:	d004      	beq.n	800c51e <RDMHandler::SetResetDevice(bool, unsigned short)+0x16>
 800c514:	2101      	movs	r1, #1
 800c516:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c51a:	f7ff bff1 	b.w	800c500 <RDMHandler::RespondMessageNack(unsigned short)>
 800c51e:	7ddb      	ldrb	r3, [r3, #23]
 800c520:	2b01      	cmp	r3, #1
 800c522:	d003      	beq.n	800c52c <RDMHandler::SetResetDevice(bool, unsigned short)+0x24>
 800c524:	2bff      	cmp	r3, #255	; 0xff
 800c526:	d001      	beq.n	800c52c <RDMHandler::SetResetDevice(bool, unsigned short)+0x24>
 800c528:	2106      	movs	r1, #6
 800c52a:	e7f4      	b.n	800c516 <RDMHandler::SetResetDevice(bool, unsigned short)+0xe>
 800c52c:	2100      	movs	r1, #0
 800c52e:	68a2      	ldr	r2, [r4, #8]
 800c530:	2bff      	cmp	r3, #255	; 0xff
 800c532:	75d1      	strb	r1, [r2, #23]
 800c534:	d102      	bne.n	800c53c <RDMHandler::SetResetDevice(bool, unsigned short)+0x34>
 800c536:	2104      	movs	r1, #4
 800c538:	4620      	mov	r0, r4
 800c53a:	e7ec      	b.n	800c516 <RDMHandler::SetResetDevice(bool, unsigned short)+0xe>
 800c53c:	4b03      	ldr	r3, [pc, #12]	; (800c54c <RDMHandler::SetResetDevice(bool, unsigned short)+0x44>)
 800c53e:	6818      	ldr	r0, [r3, #0]
 800c540:	f006 ffe4 	bl	801350c <Hardware::Reboot()>
 800c544:	2800      	cmp	r0, #0
 800c546:	d0f6      	beq.n	800c536 <RDMHandler::SetResetDevice(bool, unsigned short)+0x2e>
 800c548:	bd10      	pop	{r4, pc}
 800c54a:	bf00      	nop
 800c54c:	20013dd4 	ldrdcs	r3, [r1], -r4

0800c550 <RDMHandler::SetIdentifyDevice(bool, unsigned short)>:
 800c550:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c552:	6843      	ldr	r3, [r0, #4]
 800c554:	460d      	mov	r5, r1
 800c556:	7d99      	ldrb	r1, [r3, #22]
 800c558:	4604      	mov	r4, r0
 800c55a:	2901      	cmp	r1, #1
 800c55c:	d004      	beq.n	800c568 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x18>
 800c55e:	2101      	movs	r1, #1
 800c560:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800c564:	f7ff bfcc 	b.w	800c500 <RDMHandler::RespondMessageNack(unsigned short)>
 800c568:	7ddb      	ldrb	r3, [r3, #23]
 800c56a:	2b01      	cmp	r3, #1
 800c56c:	d901      	bls.n	800c572 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x22>
 800c56e:	2106      	movs	r1, #6
 800c570:	e7f6      	b.n	800c560 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x10>
 800c572:	4a12      	ldr	r2, [pc, #72]	; (800c5bc <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x6c>)
 800c574:	4f12      	ldr	r7, [pc, #72]	; (800c5c0 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x70>)
 800c576:	6816      	ldr	r6, [r2, #0]
 800c578:	4a12      	ldr	r2, [pc, #72]	; (800c5c4 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x74>)
 800c57a:	6810      	ldr	r0, [r2, #0]
 800c57c:	4a12      	ldr	r2, [pc, #72]	; (800c5c8 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x78>)
 800c57e:	b983      	cbnz	r3, 800c5a2 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x52>
 800c580:	2102      	movs	r1, #2
 800c582:	7013      	strb	r3, [r2, #0]
 800c584:	f006 ff20 	bl	80133c8 <LedBlink::SetMode(ledblink::Mode)>
 800c588:	7839      	ldrb	r1, [r7, #0]
 800c58a:	b111      	cbz	r1, 800c592 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x42>
 800c58c:	4630      	mov	r0, r6
 800c58e:	f000 f99e 	bl	800c8ce <RDMIdentify::Off(rdm::identify::Mode)>
 800c592:	b98d      	cbnz	r5, 800c5b8 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x68>
 800c594:	68a3      	ldr	r3, [r4, #8]
 800c596:	4620      	mov	r0, r4
 800c598:	75dd      	strb	r5, [r3, #23]
 800c59a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800c59e:	f7ff beeb 	b.w	800c378 <RDMHandler::RespondMessageAck()>
 800c5a2:	7011      	strb	r1, [r2, #0]
 800c5a4:	2104      	movs	r1, #4
 800c5a6:	f006 ff0f 	bl	80133c8 <LedBlink::SetMode(ledblink::Mode)>
 800c5aa:	7839      	ldrb	r1, [r7, #0]
 800c5ac:	2900      	cmp	r1, #0
 800c5ae:	d0f0      	beq.n	800c592 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x42>
 800c5b0:	4630      	mov	r0, r6
 800c5b2:	f000 f98b 	bl	800c8cc <RDMIdentify::On(rdm::identify::Mode)>
 800c5b6:	e7ec      	b.n	800c592 <RDMHandler::SetIdentifyDevice(bool, unsigned short)+0x42>
 800c5b8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c5ba:	bf00      	nop
 800c5bc:	20003274 	andcs	r3, r0, r4, ror r2
 800c5c0:	20003271 	andcs	r3, r0, r1, ror r2
 800c5c4:	20013dd0 	ldrdcs	r3, [r1], -r0
 800c5c8:	20003270 	andcs	r3, r0, r0, ror r2

0800c5cc <RDMHandler::SetFactoryDefaults(bool, unsigned short)>:
 800c5cc:	b538      	push	{r3, r4, r5, lr}
 800c5ce:	6843      	ldr	r3, [r0, #4]
 800c5d0:	4604      	mov	r4, r0
 800c5d2:	7d9b      	ldrb	r3, [r3, #22]
 800c5d4:	460d      	mov	r5, r1
 800c5d6:	b123      	cbz	r3, 800c5e2 <RDMHandler::SetFactoryDefaults(bool, unsigned short)+0x16>
 800c5d8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c5dc:	2101      	movs	r1, #1
 800c5de:	f7ff bf8f 	b.w	800c500 <RDMHandler::RespondMessageNack(unsigned short)>
 800c5e2:	4b06      	ldr	r3, [pc, #24]	; (800c5fc <RDMHandler::SetFactoryDefaults(bool, unsigned short)+0x30>)
 800c5e4:	6818      	ldr	r0, [r3, #0]
 800c5e6:	f7ff fde3 	bl	800c1b0 <RDMDeviceResponder::SetFactoryDefaults()>
 800c5ea:	b935      	cbnz	r5, 800c5fa <RDMHandler::SetFactoryDefaults(bool, unsigned short)+0x2e>
 800c5ec:	68a3      	ldr	r3, [r4, #8]
 800c5ee:	4620      	mov	r0, r4
 800c5f0:	75dd      	strb	r5, [r3, #23]
 800c5f2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c5f6:	f7ff bebf 	b.w	800c378 <RDMHandler::RespondMessageAck()>
 800c5fa:	bd38      	pop	{r3, r4, r5, pc}
 800c5fc:	2000326c 	andcs	r3, r0, ip, ror #4

0800c600 <RDMHandler::SetDeviceLabel(bool, unsigned short)>:
 800c600:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800c602:	6845      	ldr	r5, [r0, #4]
 800c604:	460e      	mov	r6, r1
 800c606:	7dab      	ldrb	r3, [r5, #22]
 800c608:	4604      	mov	r4, r0
 800c60a:	2b20      	cmp	r3, #32
 800c60c:	4611      	mov	r1, r2
 800c60e:	d905      	bls.n	800c61c <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x1c>
 800c610:	2101      	movs	r1, #1
 800c612:	b002      	add	sp, #8
 800c614:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c618:	f7ff bf72 	b.w	800c500 <RDMHandler::RespondMessageNack(unsigned short)>
 800c61c:	4a0d      	ldr	r2, [pc, #52]	; (800c654 <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x54>)
 800c61e:	6810      	ldr	r0, [r2, #0]
 800c620:	f105 0217 	add.w	r2, r5, #23
 800c624:	b159      	cbz	r1, 800c63e <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x3e>
 800c626:	308c      	adds	r0, #140	; 0x8c
 800c628:	f7ff fb4d 	bl	800bcc6 <RDMSubDevices::SetLabel(unsigned short, char const*, unsigned char)>
 800c62c:	b97e      	cbnz	r6, 800c64e <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x4e>
 800c62e:	4620      	mov	r0, r4
 800c630:	68a3      	ldr	r3, [r4, #8]
 800c632:	75de      	strb	r6, [r3, #23]
 800c634:	b002      	add	sp, #8
 800c636:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c63a:	f7ff be9d 	b.w	800c378 <RDMHandler::RespondMessageAck()>
 800c63e:	4669      	mov	r1, sp
 800c640:	3004      	adds	r0, #4
 800c642:	9200      	str	r2, [sp, #0]
 800c644:	f88d 3004 	strb.w	r3, [sp, #4]
 800c648:	f7ff fc35 	bl	800beb6 <RDMDevice::SetLabel(TRDMDeviceInfoData const*)>
 800c64c:	e7ee      	b.n	800c62c <RDMHandler::SetDeviceLabel(bool, unsigned short)+0x2c>
 800c64e:	b002      	add	sp, #8
 800c650:	bd70      	pop	{r4, r5, r6, pc}
 800c652:	bf00      	nop
 800c654:	2000326c 	andcs	r3, r0, ip, ror #4

0800c658 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)>:
 800c658:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c65c:	4616      	mov	r6, r2
 800c65e:	2700      	movs	r7, #0
 800c660:	f006 04ef 	and.w	r4, r6, #239	; 0xef
 800c664:	2c20      	cmp	r4, #32
 800c666:	46be      	mov	lr, r7
 800c668:	f89d 801c 	ldrb.w	r8, [sp, #28]
 800c66c:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 800c670:	d004      	beq.n	800c67c <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x24>
 800c672:	2105      	movs	r1, #5
 800c674:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c678:	f7ff bf42 	b.w	800c500 <RDMHandler::RespondMessageNack(unsigned short)>
 800c67c:	4c2d      	ldr	r4, [pc, #180]	; (800c734 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xdc>)
 800c67e:	6824      	ldr	r4, [r4, #0]
 800c680:	88a4      	ldrh	r4, [r4, #4]
 800c682:	4294      	cmp	r4, r2
 800c684:	d205      	bcs.n	800c692 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x3a>
 800c686:	f64f 74ff 	movw	r4, #65535	; 0xffff
 800c68a:	42a2      	cmp	r2, r4
 800c68c:	d001      	beq.n	800c692 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x3a>
 800c68e:	2109      	movs	r1, #9
 800c690:	e7f0      	b.n	800c674 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1c>
 800c692:	f04f 0c14 	mov.w	ip, #20
 800c696:	2400      	movs	r4, #0
 800c698:	4d27      	ldr	r5, [pc, #156]	; (800c738 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xe0>)
 800c69a:	f8b5 9000 	ldrh.w	r9, [r5]
 800c69e:	4599      	cmp	r9, r3
 800c6a0:	bf02      	ittt	eq
 800c6a2:	462c      	moveq	r4, r5
 800c6a4:	7daf      	ldrbeq	r7, [r5, #22]
 800c6a6:	f895 e017 	ldrbeq.w	lr, [r5, #23]
 800c6aa:	f1bc 0c01 	subs.w	ip, ip, #1
 800c6ae:	f105 0518 	add.w	r5, r5, #24
 800c6b2:	d1f2      	bne.n	800c69a <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x42>
 800c6b4:	b90c      	cbnz	r4, 800c6ba <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x62>
 800c6b6:	2100      	movs	r1, #0
 800c6b8:	e7dc      	b.n	800c674 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1c>
 800c6ba:	7803      	ldrb	r3, [r0, #0]
 800c6bc:	b19b      	cbz	r3, 800c6e6 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x8e>
 800c6be:	2f00      	cmp	r7, #0
 800c6c0:	d0f9      	beq.n	800c6b6 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x5e>
 800c6c2:	2e20      	cmp	r6, #32
 800c6c4:	d121      	bne.n	800c70a <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xb2>
 800c6c6:	2900      	cmp	r1, #0
 800c6c8:	d131      	bne.n	800c72e <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xd6>
 800c6ca:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800c6ce:	429a      	cmp	r2, r3
 800c6d0:	d0dd      	beq.n	800c68e <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x36>
 800c6d2:	6863      	ldr	r3, [r4, #4]
 800c6d4:	b913      	cbnz	r3, 800c6dc <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x84>
 800c6d6:	68a1      	ldr	r1, [r4, #8]
 800c6d8:	07cd      	lsls	r5, r1, #31
 800c6da:	d5ca      	bpl.n	800c672 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1a>
 800c6dc:	7d21      	ldrb	r1, [r4, #20]
 800c6de:	4541      	cmp	r1, r8
 800c6e0:	d005      	beq.n	800c6ee <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x96>
 800c6e2:	2101      	movs	r1, #1
 800c6e4:	e7c6      	b.n	800c674 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1c>
 800c6e6:	f1be 0f00 	cmp.w	lr, #0
 800c6ea:	d1ea      	bne.n	800c6c2 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x6a>
 800c6ec:	e7e3      	b.n	800c6b6 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x5e>
 800c6ee:	68a1      	ldr	r1, [r4, #8]
 800c6f0:	eb00 0461 	add.w	r4, r0, r1, asr #1
 800c6f4:	104d      	asrs	r5, r1, #1
 800c6f6:	07c9      	lsls	r1, r1, #31
 800c6f8:	bf48      	it	mi
 800c6fa:	5941      	ldrmi	r1, [r0, r5]
 800c6fc:	4620      	mov	r0, r4
 800c6fe:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c702:	bf48      	it	mi
 800c704:	58cb      	ldrmi	r3, [r1, r3]
 800c706:	4611      	mov	r1, r2
 800c708:	4718      	bx	r3
 800c70a:	e9d4 5303 	ldrd	r5, r3, [r4, #12]
 800c70e:	f003 0401 	and.w	r4, r3, #1
 800c712:	b90d      	cbnz	r5, 800c718 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xc0>
 800c714:	2c00      	cmp	r4, #0
 800c716:	d0ac      	beq.n	800c672 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0x1a>
 800c718:	105e      	asrs	r6, r3, #1
 800c71a:	eb00 0363 	add.w	r3, r0, r3, asr #1
 800c71e:	b10c      	cbz	r4, 800c724 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)+0xcc>
 800c720:	5980      	ldr	r0, [r0, r6]
 800c722:	5945      	ldr	r5, [r0, r5]
 800c724:	4618      	mov	r0, r3
 800c726:	462b      	mov	r3, r5
 800c728:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c72c:	4718      	bx	r3
 800c72e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c732:	bf00      	nop
 800c734:	20003268 	andcs	r3, r0, r8, ror #4
 800c738:	08016ef0 	stmdaeq	r1, {r4, r5, r6, r7, r9, sl, fp, sp, lr}

0800c73c <RDMHandler::HandleData(unsigned char const*, unsigned char*)>:
 800c73c:	23ff      	movs	r3, #255	; 0xff
 800c73e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c742:	7013      	strb	r3, [r2, #0]
 800c744:	e9c0 1201 	strd	r1, r2, [r0, #4]
 800c748:	7d0b      	ldrb	r3, [r1, #20]
 800c74a:	f891 8015 	ldrb.w	r8, [r1, #21]
 800c74e:	f101 0b02 	add.w	fp, r1, #2
 800c752:	eb08 2803 	add.w	r8, r8, r3, lsl #8
 800c756:	4b57      	ldr	r3, [pc, #348]	; (800c8b4 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x178>)
 800c758:	4607      	mov	r7, r0
 800c75a:	460d      	mov	r5, r1
 800c75c:	4614      	mov	r4, r2
 800c75e:	4956      	ldr	r1, [pc, #344]	; (800c8b8 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x17c>)
 800c760:	2206      	movs	r2, #6
 800c762:	4658      	mov	r0, fp
 800c764:	f8d3 9000 	ldr.w	r9, [r3]
 800c768:	f7ff fd08 	bl	800c17c <memcmp>
 800c76c:	f109 0604 	add.w	r6, r9, #4
 800c770:	4682      	mov	sl, r0
 800c772:	2202      	movs	r2, #2
 800c774:	4631      	mov	r1, r6
 800c776:	4658      	mov	r0, fp
 800c778:	fa1f f888 	uxth.w	r8, r8
 800c77c:	f7ff fcfe 	bl	800c17c <memcmp>
 800c780:	b928      	cbnz	r0, 800c78e <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x52>
 800c782:	2204      	movs	r2, #4
 800c784:	494c      	ldr	r1, [pc, #304]	; (800c8b8 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x17c>)
 800c786:	18a8      	adds	r0, r5, r2
 800c788:	f7ff fcf8 	bl	800c17c <memcmp>
 800c78c:	b160      	cbz	r0, 800c7a8 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x6c>
 800c78e:	4631      	mov	r1, r6
 800c790:	2206      	movs	r2, #6
 800c792:	4658      	mov	r0, fp
 800c794:	f7ff fcf2 	bl	800c17c <memcmp>
 800c798:	4601      	mov	r1, r0
 800c79a:	b130      	cbz	r0, 800c7aa <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x6e>
 800c79c:	f1ba 0f00 	cmp.w	sl, #0
 800c7a0:	d04a      	beq.n	800c838 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0xfc>
 800c7a2:	b003      	add	sp, #12
 800c7a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c7a8:	2101      	movs	r1, #1
 800c7aa:	2301      	movs	r3, #1
 800c7ac:	7cea      	ldrb	r2, [r5, #19]
 800c7ae:	2a10      	cmp	r2, #16
 800c7b0:	d16e      	bne.n	800c890 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x154>
 800c7b2:	f1b8 0f01 	cmp.w	r8, #1
 800c7b6:	d142      	bne.n	800c83e <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x102>
 800c7b8:	787b      	ldrb	r3, [r7, #1]
 800c7ba:	2b00      	cmp	r3, #0
 800c7bc:	d1f1      	bne.n	800c7a2 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800c7be:	2206      	movs	r2, #6
 800c7c0:	4631      	mov	r1, r6
 800c7c2:	f105 0017 	add.w	r0, r5, #23
 800c7c6:	f7ff fcd9 	bl	800c17c <memcmp>
 800c7ca:	2800      	cmp	r0, #0
 800c7cc:	dce9      	bgt.n	800c7a2 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800c7ce:	2206      	movs	r2, #6
 800c7d0:	4630      	mov	r0, r6
 800c7d2:	f105 011d 	add.w	r1, r5, #29
 800c7d6:	f7ff fcd1 	bl	800c17c <memcmp>
 800c7da:	2800      	cmp	r0, #0
 800c7dc:	dce1      	bgt.n	800c7a2 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800c7de:	23fe      	movs	r3, #254	; 0xfe
 800c7e0:	7023      	strb	r3, [r4, #0]
 800c7e2:	7063      	strb	r3, [r4, #1]
 800c7e4:	70a3      	strb	r3, [r4, #2]
 800c7e6:	70e3      	strb	r3, [r4, #3]
 800c7e8:	7123      	strb	r3, [r4, #4]
 800c7ea:	7163      	strb	r3, [r4, #5]
 800c7ec:	71a3      	strb	r3, [r4, #6]
 800c7ee:	23aa      	movs	r3, #170	; 0xaa
 800c7f0:	4622      	mov	r2, r4
 800c7f2:	71e3      	strb	r3, [r4, #7]
 800c7f4:	f240 53fa 	movw	r3, #1530	; 0x5fa
 800c7f8:	f109 090a 	add.w	r9, r9, #10
 800c7fc:	7831      	ldrb	r1, [r6, #0]
 800c7fe:	3202      	adds	r2, #2
 800c800:	f061 0155 	orn	r1, r1, #85	; 0x55
 800c804:	7191      	strb	r1, [r2, #6]
 800c806:	f816 1b01 	ldrb.w	r1, [r6], #1
 800c80a:	f041 0155 	orr.w	r1, r1, #85	; 0x55
 800c80e:	71d1      	strb	r1, [r2, #7]
 800c810:	f816 1c01 	ldrb.w	r1, [r6, #-1]
 800c814:	454e      	cmp	r6, r9
 800c816:	440b      	add	r3, r1
 800c818:	b29b      	uxth	r3, r3
 800c81a:	d1ef      	bne.n	800c7fc <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0xc0>
 800c81c:	0a1a      	lsrs	r2, r3, #8
 800c81e:	f062 0155 	orn	r1, r2, #85	; 0x55
 800c822:	f042 0255 	orr.w	r2, r2, #85	; 0x55
 800c826:	7562      	strb	r2, [r4, #21]
 800c828:	f063 0255 	orn	r2, r3, #85	; 0x55
 800c82c:	f043 0355 	orr.w	r3, r3, #85	; 0x55
 800c830:	7521      	strb	r1, [r4, #20]
 800c832:	75a2      	strb	r2, [r4, #22]
 800c834:	75e3      	strb	r3, [r4, #23]
 800c836:	e7b4      	b.n	800c7a2 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800c838:	4651      	mov	r1, sl
 800c83a:	4653      	mov	r3, sl
 800c83c:	e7b6      	b.n	800c7ac <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x70>
 800c83e:	f1b8 0f03 	cmp.w	r8, #3
 800c842:	d118      	bne.n	800c876 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x13a>
 800c844:	7daa      	ldrb	r2, [r5, #22]
 800c846:	2a00      	cmp	r2, #0
 800c848:	d1ab      	bne.n	800c7a2 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800c84a:	707a      	strb	r2, [r7, #1]
 800c84c:	f1ba 0f00 	cmp.w	sl, #0
 800c850:	d0a7      	beq.n	800c7a2 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800c852:	2b00      	cmp	r3, #0
 800c854:	d0a5      	beq.n	800c7a2 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800c856:	2302      	movs	r3, #2
 800c858:	75e3      	strb	r3, [r4, #23]
 800c85a:	4b18      	ldr	r3, [pc, #96]	; (800c8bc <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x180>)
 800c85c:	7622      	strb	r2, [r4, #24]
 800c85e:	681b      	ldr	r3, [r3, #0]
 800c860:	7662      	strb	r2, [r4, #25]
 800c862:	889b      	ldrh	r3, [r3, #4]
 800c864:	b10b      	cbz	r3, 800c86a <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x12e>
 800c866:	2302      	movs	r3, #2
 800c868:	7663      	strb	r3, [r4, #25]
 800c86a:	4638      	mov	r0, r7
 800c86c:	b003      	add	sp, #12
 800c86e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c872:	f7ff bd81 	b.w	800c378 <RDMHandler::RespondMessageAck()>
 800c876:	f1b8 0f02 	cmp.w	r8, #2
 800c87a:	d192      	bne.n	800c7a2 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800c87c:	7daa      	ldrb	r2, [r5, #22]
 800c87e:	2a00      	cmp	r2, #0
 800c880:	d18f      	bne.n	800c7a2 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800c882:	2101      	movs	r1, #1
 800c884:	7079      	strb	r1, [r7, #1]
 800c886:	2b00      	cmp	r3, #0
 800c888:	d08b      	beq.n	800c7a2 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800c88a:	f884 8017 	strb.w	r8, [r4, #23]
 800c88e:	e7e4      	b.n	800c85a <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x11e>
 800c890:	7c68      	ldrb	r0, [r5, #17]
 800c892:	7cab      	ldrb	r3, [r5, #18]
 800c894:	f1ba 0f00 	cmp.w	sl, #0
 800c898:	eb03 2300 	add.w	r3, r3, r0, lsl #8
 800c89c:	b29b      	uxth	r3, r3
 800c89e:	9301      	str	r3, [sp, #4]
 800c8a0:	7dab      	ldrb	r3, [r5, #22]
 800c8a2:	bf08      	it	eq
 800c8a4:	2101      	moveq	r1, #1
 800c8a6:	9300      	str	r3, [sp, #0]
 800c8a8:	4638      	mov	r0, r7
 800c8aa:	4643      	mov	r3, r8
 800c8ac:	f7ff fed4 	bl	800c658 <RDMHandler::Handlers(bool, unsigned char, unsigned short, unsigned char, unsigned short)>
 800c8b0:	e777      	b.n	800c7a2 <RDMHandler::HandleData(unsigned char const*, unsigned char*)+0x66>
 800c8b2:	bf00      	nop
 800c8b4:	2000326c 	andcs	r3, r0, ip, ror #4
 800c8b8:	08016ee8 	stmdaeq	r1, {r3, r5, r6, r7, r9, sl, fp, sp, lr}
 800c8bc:	20003268 	andcs	r3, r0, r8, ror #4

0800c8c0 <RDMIdentify::RDMIdentify()>:
 800c8c0:	4b01      	ldr	r3, [pc, #4]	; (800c8c8 <RDMIdentify::RDMIdentify()+0x8>)
 800c8c2:	6018      	str	r0, [r3, #0]
 800c8c4:	4770      	bx	lr
 800c8c6:	bf00      	nop
 800c8c8:	20003274 	andcs	r3, r0, r4, ror r2

0800c8cc <RDMIdentify::On(rdm::identify::Mode)>:
 800c8cc:	4770      	bx	lr

0800c8ce <RDMIdentify::Off(rdm::identify::Mode)>:
 800c8ce:	4770      	bx	lr

0800c8d0 <memcpy.constprop.0.isra.0>:
 800c8d0:	3801      	subs	r0, #1
 800c8d2:	1d0a      	adds	r2, r1, #4
 800c8d4:	4291      	cmp	r1, r2
 800c8d6:	d004      	beq.n	800c8e2 <memcpy.constprop.0.isra.0+0x12>
 800c8d8:	f811 3b01 	ldrb.w	r3, [r1], #1
 800c8dc:	f800 3f01 	strb.w	r3, [r0, #1]!
 800c8e0:	e7f8      	b.n	800c8d4 <memcpy.constprop.0.isra.0+0x4>
 800c8e2:	4770      	bx	lr

0800c8e4 <RDMHandler::GetInterfaceList(unsigned short)>:
 800c8e4:	4a08      	ldr	r2, [pc, #32]	; (800c908 <RDMHandler::GetInterfaceList(unsigned short)+0x24>)
 800c8e6:	6883      	ldr	r3, [r0, #8]
 800c8e8:	6812      	ldr	r2, [r2, #0]
 800c8ea:	6852      	ldr	r2, [r2, #4]
 800c8ec:	0e11      	lsrs	r1, r2, #24
 800c8ee:	7619      	strb	r1, [r3, #24]
 800c8f0:	0c11      	lsrs	r1, r2, #16
 800c8f2:	7659      	strb	r1, [r3, #25]
 800c8f4:	76da      	strb	r2, [r3, #27]
 800c8f6:	0a11      	lsrs	r1, r2, #8
 800c8f8:	2200      	movs	r2, #0
 800c8fa:	771a      	strb	r2, [r3, #28]
 800c8fc:	2206      	movs	r2, #6
 800c8fe:	7699      	strb	r1, [r3, #26]
 800c900:	775a      	strb	r2, [r3, #29]
 800c902:	75da      	strb	r2, [r3, #23]
 800c904:	f7ff bd38 	b.w	800c378 <RDMHandler::RespondMessageAck()>
 800c908:	200136ac 	andcs	r3, r1, ip, lsr #13

0800c90c <RDMHandler::GetInterfaceName(unsigned short)>:
 800c90c:	b538      	push	{r3, r4, r5, lr}
 800c90e:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800c912:	4604      	mov	r4, r0
 800c914:	3117      	adds	r1, #23
 800c916:	f105 0018 	add.w	r0, r5, #24
 800c91a:	f7ff ffd9 	bl	800c8d0 <memcpy.constprop.0.isra.0>
 800c91e:	4a0d      	ldr	r2, [pc, #52]	; (800c954 <RDMHandler::GetInterfaceName(unsigned short)+0x48>)
 800c920:	f105 001c 	add.w	r0, r5, #28
 800c924:	6813      	ldr	r3, [r2, #0]
 800c926:	33a2      	adds	r3, #162	; 0xa2
 800c928:	f813 1b01 	ldrb.w	r1, [r3], #1
 800c92c:	f800 1b01 	strb.w	r1, [r0], #1
 800c930:	2900      	cmp	r1, #0
 800c932:	d1f9      	bne.n	800c928 <RDMHandler::GetInterfaceName(unsigned short)+0x1c>
 800c934:	6812      	ldr	r2, [r2, #0]
 800c936:	32a2      	adds	r2, #162	; 0xa2
 800c938:	4611      	mov	r1, r2
 800c93a:	460b      	mov	r3, r1
 800c93c:	7818      	ldrb	r0, [r3, #0]
 800c93e:	3101      	adds	r1, #1
 800c940:	2800      	cmp	r0, #0
 800c942:	d1fa      	bne.n	800c93a <RDMHandler::GetInterfaceName(unsigned short)+0x2e>
 800c944:	1a9b      	subs	r3, r3, r2
 800c946:	3304      	adds	r3, #4
 800c948:	75eb      	strb	r3, [r5, #23]
 800c94a:	4620      	mov	r0, r4
 800c94c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c950:	f7ff bd12 	b.w	800c378 <RDMHandler::RespondMessageAck()>
 800c954:	200136ac 	andcs	r3, r1, ip, lsr #13

0800c958 <RDMHandler::GetHardwareAddress(unsigned short)>:
 800c958:	b538      	push	{r3, r4, r5, lr}
 800c95a:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800c95e:	4604      	mov	r4, r0
 800c960:	3117      	adds	r1, #23
 800c962:	f105 0018 	add.w	r0, r5, #24
 800c966:	f7ff ffb3 	bl	800c8d0 <memcpy.constprop.0.isra.0>
 800c96a:	4b06      	ldr	r3, [pc, #24]	; (800c984 <RDMHandler::GetHardwareAddress(unsigned short)+0x2c>)
 800c96c:	f105 011c 	add.w	r1, r5, #28
 800c970:	6818      	ldr	r0, [r3, #0]
 800c972:	f003 ff4f 	bl	8010814 <Network::MacAddressCopyTo(unsigned char*)>
 800c976:	230a      	movs	r3, #10
 800c978:	75eb      	strb	r3, [r5, #23]
 800c97a:	4620      	mov	r0, r4
 800c97c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c980:	f7ff bcfa 	b.w	800c378 <RDMHandler::RespondMessageAck()>
 800c984:	200136ac 	andcs	r3, r1, ip, lsr #13

0800c988 <RDMHandler::GetDHCPMode(unsigned short)>:
 800c988:	b538      	push	{r3, r4, r5, lr}
 800c98a:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800c98e:	4604      	mov	r4, r0
 800c990:	3117      	adds	r1, #23
 800c992:	f105 0018 	add.w	r0, r5, #24
 800c996:	f7ff ff9b 	bl	800c8d0 <memcpy.constprop.0.isra.0>
 800c99a:	4b05      	ldr	r3, [pc, #20]	; (800c9b0 <RDMHandler::GetDHCPMode(unsigned short)+0x28>)
 800c99c:	4620      	mov	r0, r4
 800c99e:	681b      	ldr	r3, [r3, #0]
 800c9a0:	785b      	ldrb	r3, [r3, #1]
 800c9a2:	772b      	strb	r3, [r5, #28]
 800c9a4:	2305      	movs	r3, #5
 800c9a6:	75eb      	strb	r3, [r5, #23]
 800c9a8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c9ac:	f7ff bce4 	b.w	800c378 <RDMHandler::RespondMessageAck()>
 800c9b0:	200136ac 	andcs	r3, r1, ip, lsr #13

0800c9b4 <RDMHandler::SetDHCPMode(bool, unsigned short)>:
 800c9b4:	4b10      	ldr	r3, [pc, #64]	; (800c9f8 <RDMHandler::SetDHCPMode(bool, unsigned short)+0x44>)
 800c9b6:	b510      	push	{r4, lr}
 800c9b8:	681b      	ldr	r3, [r3, #0]
 800c9ba:	4604      	mov	r4, r0
 800c9bc:	781a      	ldrb	r2, [r3, #0]
 800c9be:	b922      	cbnz	r2, 800c9ca <RDMHandler::SetDHCPMode(bool, unsigned short)+0x16>
 800c9c0:	210b      	movs	r1, #11
 800c9c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c9c6:	f7ff bd9b 	b.w	800c500 <RDMHandler::RespondMessageNack(unsigned short)>
 800c9ca:	6842      	ldr	r2, [r0, #4]
 800c9cc:	7ed2      	ldrb	r2, [r2, #27]
 800c9ce:	2a01      	cmp	r2, #1
 800c9d0:	d109      	bne.n	800c9e6 <RDMHandler::SetDHCPMode(bool, unsigned short)+0x32>
 800c9d2:	f8d3 20bc 	ldr.w	r2, [r3, #188]	; 0xbc
 800c9d6:	f042 0204 	orr.w	r2, r2, #4
 800c9da:	f8c3 20bc 	str.w	r2, [r3, #188]	; 0xbc
 800c9de:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c9e2:	f7ff bcc9 	b.w	800c378 <RDMHandler::RespondMessageAck()>
 800c9e6:	b92a      	cbnz	r2, 800c9f4 <RDMHandler::SetDHCPMode(bool, unsigned short)+0x40>
 800c9e8:	4618      	mov	r0, r3
 800c9ea:	4611      	mov	r1, r2
 800c9ec:	f004 f974 	bl	8010cd8 <Network::SetQueuedStaticIp(unsigned int, unsigned int)>
 800c9f0:	4620      	mov	r0, r4
 800c9f2:	e7f4      	b.n	800c9de <RDMHandler::SetDHCPMode(bool, unsigned short)+0x2a>
 800c9f4:	2106      	movs	r1, #6
 800c9f6:	e7e4      	b.n	800c9c2 <RDMHandler::SetDHCPMode(bool, unsigned short)+0xe>
 800c9f8:	200136ac 	andcs	r3, r1, ip, lsr #13

0800c9fc <RDMHandler::GetNameServers(unsigned short)>:
 800c9fc:	6842      	ldr	r2, [r0, #4]
 800c9fe:	7dd2      	ldrb	r2, [r2, #23]
 800ca00:	2a02      	cmp	r2, #2
 800ca02:	d902      	bls.n	800ca0a <RDMHandler::GetNameServers(unsigned short)+0xe>
 800ca04:	2106      	movs	r1, #6
 800ca06:	f7ff bd7b 	b.w	800c500 <RDMHandler::RespondMessageNack(unsigned short)>
 800ca0a:	2200      	movs	r2, #0
 800ca0c:	6883      	ldr	r3, [r0, #8]
 800ca0e:	765a      	strb	r2, [r3, #25]
 800ca10:	769a      	strb	r2, [r3, #26]
 800ca12:	76da      	strb	r2, [r3, #27]
 800ca14:	771a      	strb	r2, [r3, #28]
 800ca16:	2205      	movs	r2, #5
 800ca18:	75da      	strb	r2, [r3, #23]
 800ca1a:	f7ff bcad 	b.w	800c378 <RDMHandler::RespondMessageAck()>
	...

0800ca20 <RDMHandler::GetZeroconf(unsigned short)>:
 800ca20:	b538      	push	{r3, r4, r5, lr}
 800ca22:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800ca26:	4604      	mov	r4, r0
 800ca28:	3117      	adds	r1, #23
 800ca2a:	f105 0018 	add.w	r0, r5, #24
 800ca2e:	f7ff ff4f 	bl	800c8d0 <memcpy.constprop.0.isra.0>
 800ca32:	4b06      	ldr	r3, [pc, #24]	; (800ca4c <RDMHandler::GetZeroconf(unsigned short)+0x2c>)
 800ca34:	681a      	ldr	r2, [r3, #0]
 800ca36:	7893      	ldrb	r3, [r2, #2]
 800ca38:	b103      	cbz	r3, 800ca3c <RDMHandler::GetZeroconf(unsigned short)+0x1c>
 800ca3a:	78d3      	ldrb	r3, [r2, #3]
 800ca3c:	772b      	strb	r3, [r5, #28]
 800ca3e:	2305      	movs	r3, #5
 800ca40:	75eb      	strb	r3, [r5, #23]
 800ca42:	4620      	mov	r0, r4
 800ca44:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800ca48:	f7ff bc96 	b.w	800c378 <RDMHandler::RespondMessageAck()>
 800ca4c:	200136ac 	andcs	r3, r1, ip, lsr #13

0800ca50 <RDMHandler::SetZeroconf(bool, unsigned short)>:
 800ca50:	4b10      	ldr	r3, [pc, #64]	; (800ca94 <RDMHandler::SetZeroconf(bool, unsigned short)+0x44>)
 800ca52:	b510      	push	{r4, lr}
 800ca54:	681b      	ldr	r3, [r3, #0]
 800ca56:	4604      	mov	r4, r0
 800ca58:	789a      	ldrb	r2, [r3, #2]
 800ca5a:	b922      	cbnz	r2, 800ca66 <RDMHandler::SetZeroconf(bool, unsigned short)+0x16>
 800ca5c:	210b      	movs	r1, #11
 800ca5e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ca62:	f7ff bd4d 	b.w	800c500 <RDMHandler::RespondMessageNack(unsigned short)>
 800ca66:	6842      	ldr	r2, [r0, #4]
 800ca68:	7ed2      	ldrb	r2, [r2, #27]
 800ca6a:	2a01      	cmp	r2, #1
 800ca6c:	d109      	bne.n	800ca82 <RDMHandler::SetZeroconf(bool, unsigned short)+0x32>
 800ca6e:	f8d3 20bc 	ldr.w	r2, [r3, #188]	; 0xbc
 800ca72:	f042 0208 	orr.w	r2, r2, #8
 800ca76:	f8c3 20bc 	str.w	r2, [r3, #188]	; 0xbc
 800ca7a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ca7e:	f7ff bc7b 	b.w	800c378 <RDMHandler::RespondMessageAck()>
 800ca82:	b92a      	cbnz	r2, 800ca90 <RDMHandler::SetZeroconf(bool, unsigned short)+0x40>
 800ca84:	4618      	mov	r0, r3
 800ca86:	4611      	mov	r1, r2
 800ca88:	f004 f926 	bl	8010cd8 <Network::SetQueuedStaticIp(unsigned int, unsigned int)>
 800ca8c:	4620      	mov	r0, r4
 800ca8e:	e7f4      	b.n	800ca7a <RDMHandler::SetZeroconf(bool, unsigned short)+0x2a>
 800ca90:	2106      	movs	r1, #6
 800ca92:	e7e4      	b.n	800ca5e <RDMHandler::SetZeroconf(bool, unsigned short)+0xe>
 800ca94:	200136ac 	andcs	r3, r1, ip, lsr #13

0800ca98 <RDMHandler::RenewDhcp(bool, unsigned short)>:
 800ca98:	4b09      	ldr	r3, [pc, #36]	; (800cac0 <RDMHandler::RenewDhcp(bool, unsigned short)+0x28>)
 800ca9a:	b510      	push	{r4, lr}
 800ca9c:	681b      	ldr	r3, [r3, #0]
 800ca9e:	4604      	mov	r4, r0
 800caa0:	785a      	ldrb	r2, [r3, #1]
 800caa2:	b922      	cbnz	r2, 800caae <RDMHandler::RenewDhcp(bool, unsigned short)+0x16>
 800caa4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800caa8:	210b      	movs	r1, #11
 800caaa:	f7ff bd29 	b.w	800c500 <RDMHandler::RespondMessageNack(unsigned short)>
 800caae:	4618      	mov	r0, r3
 800cab0:	f004 f8c8 	bl	8010c44 <Network::EnableDhcp()>
 800cab4:	4620      	mov	r0, r4
 800cab6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800caba:	f7ff bc5d 	b.w	800c378 <RDMHandler::RespondMessageAck()>
 800cabe:	bf00      	nop
 800cac0:	200136ac 	andcs	r3, r1, ip, lsr #13

0800cac4 <RDMHandler::GetAddressNetmask(unsigned short)>:
 800cac4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800cac6:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800caca:	4e0f      	ldr	r6, [pc, #60]	; (800cb08 <RDMHandler::GetAddressNetmask(unsigned short)+0x44>)
 800cacc:	4604      	mov	r4, r0
 800cace:	6833      	ldr	r3, [r6, #0]
 800cad0:	f105 0018 	add.w	r0, r5, #24
 800cad4:	691b      	ldr	r3, [r3, #16]
 800cad6:	3117      	adds	r1, #23
 800cad8:	9301      	str	r3, [sp, #4]
 800cada:	f7ff fef9 	bl	800c8d0 <memcpy.constprop.0.isra.0>
 800cade:	a901      	add	r1, sp, #4
 800cae0:	f105 001c 	add.w	r0, r5, #28
 800cae4:	f7ff fef4 	bl	800c8d0 <memcpy.constprop.0.isra.0>
 800cae8:	6836      	ldr	r6, [r6, #0]
 800caea:	69b0      	ldr	r0, [r6, #24]
 800caec:	f7fb f9e6 	bl	8007ebc <__popcountsi2>
 800caf0:	f885 0020 	strb.w	r0, [r5, #32]
 800caf4:	7873      	ldrb	r3, [r6, #1]
 800caf6:	4620      	mov	r0, r4
 800caf8:	f885 3021 	strb.w	r3, [r5, #33]	; 0x21
 800cafc:	230a      	movs	r3, #10
 800cafe:	75eb      	strb	r3, [r5, #23]
 800cb00:	f7ff fc3a 	bl	800c378 <RDMHandler::RespondMessageAck()>
 800cb04:	b002      	add	sp, #8
 800cb06:	bd70      	pop	{r4, r5, r6, pc}
 800cb08:	200136ac 	andcs	r3, r1, ip, lsr #13

0800cb0c <RDMHandler::GetStaticAddress(unsigned short)>:
 800cb0c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800cb0e:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800cb12:	4e0e      	ldr	r6, [pc, #56]	; (800cb4c <RDMHandler::GetStaticAddress(unsigned short)+0x40>)
 800cb14:	4604      	mov	r4, r0
 800cb16:	6833      	ldr	r3, [r6, #0]
 800cb18:	f105 0018 	add.w	r0, r5, #24
 800cb1c:	691b      	ldr	r3, [r3, #16]
 800cb1e:	3117      	adds	r1, #23
 800cb20:	9301      	str	r3, [sp, #4]
 800cb22:	f7ff fed5 	bl	800c8d0 <memcpy.constprop.0.isra.0>
 800cb26:	a901      	add	r1, sp, #4
 800cb28:	f105 001c 	add.w	r0, r5, #28
 800cb2c:	f7ff fed0 	bl	800c8d0 <memcpy.constprop.0.isra.0>
 800cb30:	6833      	ldr	r3, [r6, #0]
 800cb32:	6998      	ldr	r0, [r3, #24]
 800cb34:	f7fb f9c2 	bl	8007ebc <__popcountsi2>
 800cb38:	2309      	movs	r3, #9
 800cb3a:	f885 0020 	strb.w	r0, [r5, #32]
 800cb3e:	75eb      	strb	r3, [r5, #23]
 800cb40:	4620      	mov	r0, r4
 800cb42:	f7ff fc19 	bl	800c378 <RDMHandler::RespondMessageAck()>
 800cb46:	b002      	add	sp, #8
 800cb48:	bd70      	pop	{r4, r5, r6, pc}
 800cb4a:	bf00      	nop
 800cb4c:	200136ac 	andcs	r3, r1, ip, lsr #13

0800cb50 <RDMHandler::SetStaticAddress(bool, unsigned short)>:
 800cb50:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800cb52:	6845      	ldr	r5, [r0, #4]
 800cb54:	4604      	mov	r4, r0
 800cb56:	7dab      	ldrb	r3, [r5, #22]
 800cb58:	2b09      	cmp	r3, #9
 800cb5a:	d005      	beq.n	800cb68 <RDMHandler::SetStaticAddress(bool, unsigned short)+0x18>
 800cb5c:	2101      	movs	r1, #1
 800cb5e:	b003      	add	sp, #12
 800cb60:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800cb64:	f7ff bccc 	b.w	800c500 <RDMHandler::RespondMessageNack(unsigned short)>
 800cb68:	f105 011b 	add.w	r1, r5, #27
 800cb6c:	a801      	add	r0, sp, #4
 800cb6e:	f7ff feaf 	bl	800c8d0 <memcpy.constprop.0.isra.0>
 800cb72:	4b09      	ldr	r3, [pc, #36]	; (800cb98 <RDMHandler::SetStaticAddress(bool, unsigned short)+0x48>)
 800cb74:	7fea      	ldrb	r2, [r5, #31]
 800cb76:	6818      	ldr	r0, [r3, #0]
 800cb78:	9901      	ldr	r1, [sp, #4]
 800cb7a:	b132      	cbz	r2, 800cb8a <RDMHandler::SetStaticAddress(bool, unsigned short)+0x3a>
 800cb7c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800cb80:	f1c2 0220 	rsb	r2, r2, #32
 800cb84:	fa03 f202 	lsl.w	r2, r3, r2
 800cb88:	ba12      	rev	r2, r2
 800cb8a:	f004 f8a5 	bl	8010cd8 <Network::SetQueuedStaticIp(unsigned int, unsigned int)>
 800cb8e:	4620      	mov	r0, r4
 800cb90:	f7ff fbf2 	bl	800c378 <RDMHandler::RespondMessageAck()>
 800cb94:	b003      	add	sp, #12
 800cb96:	bd30      	pop	{r4, r5, pc}
 800cb98:	200136ac 	andcs	r3, r1, ip, lsr #13

0800cb9c <RDMHandler::ApplyConfiguration(bool, unsigned short)>:
 800cb9c:	4b08      	ldr	r3, [pc, #32]	; (800cbc0 <RDMHandler::ApplyConfiguration(bool, unsigned short)+0x24>)
 800cb9e:	b510      	push	{r4, lr}
 800cba0:	4604      	mov	r4, r0
 800cba2:	6818      	ldr	r0, [r3, #0]
 800cba4:	f004 f8a5 	bl	8010cf2 <Network::ApplyQueuedConfig()>
 800cba8:	b120      	cbz	r0, 800cbb4 <RDMHandler::ApplyConfiguration(bool, unsigned short)+0x18>
 800cbaa:	4620      	mov	r0, r4
 800cbac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cbb0:	f7ff bbe2 	b.w	800c378 <RDMHandler::RespondMessageAck()>
 800cbb4:	4620      	mov	r0, r4
 800cbb6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cbba:	2101      	movs	r1, #1
 800cbbc:	f7ff bca0 	b.w	800c500 <RDMHandler::RespondMessageNack(unsigned short)>
 800cbc0:	200136ac 	andcs	r3, r1, ip, lsr #13

0800cbc4 <RDMHandler::GetDefaultRoute(unsigned short)>:
 800cbc4:	4b0c      	ldr	r3, [pc, #48]	; (800cbf8 <RDMHandler::GetDefaultRoute(unsigned short)+0x34>)
 800cbc6:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800cbc8:	e9d0 1501 	ldrd	r1, r5, [r0, #4]
 800cbcc:	681b      	ldr	r3, [r3, #0]
 800cbce:	4604      	mov	r4, r0
 800cbd0:	695b      	ldr	r3, [r3, #20]
 800cbd2:	f105 0018 	add.w	r0, r5, #24
 800cbd6:	3117      	adds	r1, #23
 800cbd8:	9301      	str	r3, [sp, #4]
 800cbda:	f7ff fe79 	bl	800c8d0 <memcpy.constprop.0.isra.0>
 800cbde:	a901      	add	r1, sp, #4
 800cbe0:	f105 001c 	add.w	r0, r5, #28
 800cbe4:	f7ff fe74 	bl	800c8d0 <memcpy.constprop.0.isra.0>
 800cbe8:	2308      	movs	r3, #8
 800cbea:	4620      	mov	r0, r4
 800cbec:	75eb      	strb	r3, [r5, #23]
 800cbee:	f7ff fbc3 	bl	800c378 <RDMHandler::RespondMessageAck()>
 800cbf2:	b003      	add	sp, #12
 800cbf4:	bd30      	pop	{r4, r5, pc}
 800cbf6:	bf00      	nop
 800cbf8:	200136ac 	andcs	r3, r1, ip, lsr #13

0800cbfc <RDMHandler::SetDefaultRoute(bool, unsigned short)>:
 800cbfc:	210b      	movs	r1, #11
 800cbfe:	f7ff bc7f 	b.w	800c500 <RDMHandler::RespondMessageNack(unsigned short)>
	...

0800cc04 <RDMHandler::GetHostName(unsigned short)>:
 800cc04:	4b0a      	ldr	r3, [pc, #40]	; (800cc30 <RDMHandler::GetHostName(unsigned short)+0x2c>)
 800cc06:	b510      	push	{r4, lr}
 800cc08:	6819      	ldr	r1, [r3, #0]
 800cc0a:	4604      	mov	r4, r0
 800cc0c:	311c      	adds	r1, #28
 800cc0e:	460b      	mov	r3, r1
 800cc10:	461a      	mov	r2, r3
 800cc12:	7810      	ldrb	r0, [r2, #0]
 800cc14:	3301      	adds	r3, #1
 800cc16:	2800      	cmp	r0, #0
 800cc18:	d1fa      	bne.n	800cc10 <RDMHandler::GetHostName(unsigned short)+0xc>
 800cc1a:	1a52      	subs	r2, r2, r1
 800cc1c:	4620      	mov	r0, r4
 800cc1e:	b292      	uxth	r2, r2
 800cc20:	f7ff fb50 	bl	800c2c4 <RDMHandler::HandleString(char const*, unsigned int)>
 800cc24:	4620      	mov	r0, r4
 800cc26:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cc2a:	f7ff bba5 	b.w	800c378 <RDMHandler::RespondMessageAck()>
 800cc2e:	bf00      	nop
 800cc30:	200136ac 	andcs	r3, r1, ip, lsr #13

0800cc34 <RDMHandler::SetHostName(bool, unsigned short)>:
 800cc34:	b510      	push	{r4, lr}
 800cc36:	6841      	ldr	r1, [r0, #4]
 800cc38:	4604      	mov	r4, r0
 800cc3a:	7d8b      	ldrb	r3, [r1, #22]
 800cc3c:	2b3f      	cmp	r3, #63	; 0x3f
 800cc3e:	d904      	bls.n	800cc4a <RDMHandler::SetHostName(bool, unsigned short)+0x16>
 800cc40:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cc44:	2102      	movs	r1, #2
 800cc46:	f7ff bc5b 	b.w	800c500 <RDMHandler::RespondMessageNack(unsigned short)>
 800cc4a:	2200      	movs	r2, #0
 800cc4c:	440b      	add	r3, r1
 800cc4e:	75da      	strb	r2, [r3, #23]
 800cc50:	4b04      	ldr	r3, [pc, #16]	; (800cc64 <RDMHandler::SetHostName(bool, unsigned short)+0x30>)
 800cc52:	3117      	adds	r1, #23
 800cc54:	6818      	ldr	r0, [r3, #0]
 800cc56:	f003 ffb3 	bl	8010bc0 <Network::SetHostName(char const*)>
 800cc5a:	4620      	mov	r0, r4
 800cc5c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cc60:	f7ff bb8a 	b.w	800c378 <RDMHandler::RespondMessageAck()>
 800cc64:	200136ac 	andcs	r3, r1, ip, lsr #13

0800cc68 <RDMHandler::GetDomainName(unsigned short)>:
 800cc68:	4b0a      	ldr	r3, [pc, #40]	; (800cc94 <RDMHandler::GetDomainName(unsigned short)+0x2c>)
 800cc6a:	b510      	push	{r4, lr}
 800cc6c:	6819      	ldr	r1, [r3, #0]
 800cc6e:	4604      	mov	r4, r0
 800cc70:	315c      	adds	r1, #92	; 0x5c
 800cc72:	460b      	mov	r3, r1
 800cc74:	461a      	mov	r2, r3
 800cc76:	7810      	ldrb	r0, [r2, #0]
 800cc78:	3301      	adds	r3, #1
 800cc7a:	2800      	cmp	r0, #0
 800cc7c:	d1fa      	bne.n	800cc74 <RDMHandler::GetDomainName(unsigned short)+0xc>
 800cc7e:	1a52      	subs	r2, r2, r1
 800cc80:	4620      	mov	r0, r4
 800cc82:	b292      	uxth	r2, r2
 800cc84:	f7ff fb1e 	bl	800c2c4 <RDMHandler::HandleString(char const*, unsigned int)>
 800cc88:	4620      	mov	r0, r4
 800cc8a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cc8e:	f7ff bb73 	b.w	800c378 <RDMHandler::RespondMessageAck()>
 800cc92:	bf00      	nop
 800cc94:	200136ac 	andcs	r3, r1, ip, lsr #13

0800cc98 <RDMHandler::SetDomainName(bool, unsigned short)>:
 800cc98:	210b      	movs	r1, #11
 800cc9a:	f7ff bc31 	b.w	800c500 <RDMHandler::RespondMessageNack(unsigned short)>
	...

0800cca0 <RDMDevice::RDMDevice()>:
 800cca0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800cca2:	4b35      	ldr	r3, [pc, #212]	; (800cd78 <RDMDevice::RDMDevice()+0xd8>)
 800cca4:	4a35      	ldr	r2, [pc, #212]	; (800cd7c <RDMDevice::RDMDevice()+0xdc>)
 800cca6:	7859      	ldrb	r1, [r3, #1]
 800cca8:	4604      	mov	r4, r0
 800ccaa:	f880 1050 	strb.w	r1, [r0, #80]	; 0x50
 800ccae:	7818      	ldrb	r0, [r3, #0]
 800ccb0:	2300      	movs	r3, #0
 800ccb2:	4615      	mov	r5, r2
 800ccb4:	f884 0051 	strb.w	r0, [r4, #81]	; 0x51
 800ccb8:	f884 3052 	strb.w	r3, [r4, #82]	; 0x52
 800ccbc:	f884 3073 	strb.w	r3, [r4, #115]	; 0x73
 800ccc0:	f8a4 3074 	strh.w	r3, [r4, #116]	; 0x74
 800ccc4:	67a3      	str	r3, [r4, #120]	; 0x78
 800ccc6:	4613      	mov	r3, r2
 800ccc8:	781e      	ldrb	r6, [r3, #0]
 800ccca:	3201      	adds	r2, #1
 800cccc:	2e00      	cmp	r6, #0
 800ccce:	d1fa      	bne.n	800ccc6 <RDMDevice::RDMDevice()+0x26>
 800ccd0:	1b5b      	subs	r3, r3, r5
 800ccd2:	2b20      	cmp	r3, #32
 800ccd4:	bf28      	it	cs
 800ccd6:	2320      	movcs	r3, #32
 800ccd8:	f104 052b 	add.w	r5, r4, #43	; 0x2b
 800ccdc:	462e      	mov	r6, r5
 800ccde:	461a      	mov	r2, r3
 800cce0:	4f26      	ldr	r7, [pc, #152]	; (800cd7c <RDMDevice::RDMDevice()+0xdc>)
 800cce2:	3a01      	subs	r2, #1
 800cce4:	d304      	bcc.n	800ccf0 <RDMDevice::RDMDevice()+0x50>
 800cce6:	f817 cb01 	ldrb.w	ip, [r7], #1
 800ccea:	f806 cb01 	strb.w	ip, [r6], #1
 800ccee:	e7f8      	b.n	800cce2 <RDMDevice::RDMDevice()+0x42>
 800ccf0:	f884 304b 	strb.w	r3, [r4, #75]	; 0x4b
 800ccf4:	4b22      	ldr	r3, [pc, #136]	; (800cd80 <RDMDevice::RDMDevice()+0xe0>)
 800ccf6:	7020      	strb	r0, [r4, #0]
 800ccf8:	7061      	strb	r1, [r4, #1]
 800ccfa:	6818      	ldr	r0, [r3, #0]
 800ccfc:	4669      	mov	r1, sp
 800ccfe:	f003 fd89 	bl	8010814 <Network::MacAddressCopyTo(unsigned char*)>
 800cd02:	f89d 3002 	ldrb.w	r3, [sp, #2]
 800cd06:	f89d 2003 	ldrb.w	r2, [sp, #3]
 800cd0a:	70a3      	strb	r3, [r4, #2]
 800cd0c:	7263      	strb	r3, [r4, #9]
 800cd0e:	4b1d      	ldr	r3, [pc, #116]	; (800cd84 <RDMDevice::RDMDevice()+0xe4>)
 800cd10:	70e2      	strb	r2, [r4, #3]
 800cd12:	7222      	strb	r2, [r4, #8]
 800cd14:	461a      	mov	r2, r3
 800cd16:	f89d 1004 	ldrb.w	r1, [sp, #4]
 800cd1a:	f89d 0005 	ldrb.w	r0, [sp, #5]
 800cd1e:	7121      	strb	r1, [r4, #4]
 800cd20:	7160      	strb	r0, [r4, #5]
 800cd22:	71a0      	strb	r0, [r4, #6]
 800cd24:	71e1      	strb	r1, [r4, #7]
 800cd26:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800cd2a:	2900      	cmp	r1, #0
 800cd2c:	d1fb      	bne.n	800cd26 <RDMDevice::RDMDevice()+0x86>
 800cd2e:	1a9b      	subs	r3, r3, r2
 800cd30:	2b20      	cmp	r3, #32
 800cd32:	bf28      	it	cs
 800cd34:	2320      	movcs	r3, #32
 800cd36:	461a      	mov	r2, r3
 800cd38:	4912      	ldr	r1, [pc, #72]	; (800cd84 <RDMDevice::RDMDevice()+0xe4>)
 800cd3a:	3a01      	subs	r2, #1
 800cd3c:	d304      	bcc.n	800cd48 <RDMDevice::RDMDevice()+0xa8>
 800cd3e:	f811 0b01 	ldrb.w	r0, [r1], #1
 800cd42:	f805 0b01 	strb.w	r0, [r5], #1
 800cd46:	e7f8      	b.n	800cd3a <RDMDevice::RDMDevice()+0x9a>
 800cd48:	f884 304b 	strb.w	r3, [r4, #75]	; 0x4b
 800cd4c:	f06f 2380 	mvn.w	r3, #2147516416	; 0x80008000
 800cd50:	64e3      	str	r3, [r4, #76]	; 0x4c
 800cd52:	2319      	movs	r3, #25
 800cd54:	4a0c      	ldr	r2, [pc, #48]	; (800cd88 <RDMDevice::RDMDevice()+0xe8>)
 800cd56:	f884 3073 	strb.w	r3, [r4, #115]	; 0x73
 800cd5a:	f104 006c 	add.w	r0, r4, #108	; 0x6c
 800cd5e:	f104 0353 	add.w	r3, r4, #83	; 0x53
 800cd62:	4298      	cmp	r0, r3
 800cd64:	d004      	beq.n	800cd70 <RDMDevice::RDMDevice()+0xd0>
 800cd66:	f812 1b01 	ldrb.w	r1, [r2], #1
 800cd6a:	f803 1b01 	strb.w	r1, [r3], #1
 800cd6e:	e7f8      	b.n	800cd62 <RDMDevice::RDMDevice()+0xc2>
 800cd70:	4620      	mov	r0, r4
 800cd72:	b003      	add	sp, #12
 800cd74:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cd76:	bf00      	nop
 800cd78:	080171d2 	stmdaeq	r1, {r1, r4, r6, r7, r8, ip, sp, lr}
 800cd7c:	080171d4 	stmdaeq	r1, {r2, r4, r6, r7, r8, ip, sp, lr}
 800cd80:	200136ac 	andcs	r3, r1, ip, lsr #13
 800cd84:	080170d0 	stmdaeq	r1, {r4, r6, r7, ip, sp, lr}
 800cd88:	080171b8 	stmdaeq	r1, {r3, r4, r5, r7, r8, ip, sp, lr}

0800cd8c <RDMDevice::Print()>:
 800cd8c:	b513      	push	{r0, r1, r4, lr}
 800cd8e:	4604      	mov	r4, r0
 800cd90:	4818      	ldr	r0, [pc, #96]	; (800cdf4 <RDMDevice::Print()+0x68>)
 800cd92:	f7fc f88b 	bl	8008eac <printf>
 800cd96:	f894 104b 	ldrb.w	r1, [r4, #75]	; 0x4b
 800cd9a:	f104 022b 	add.w	r2, r4, #43	; 0x2b
 800cd9e:	4816      	ldr	r0, [pc, #88]	; (800cdf8 <RDMDevice::Print()+0x6c>)
 800cda0:	f7fc f884 	bl	8008eac <printf>
 800cda4:	7862      	ldrb	r2, [r4, #1]
 800cda6:	7821      	ldrb	r1, [r4, #0]
 800cda8:	4814      	ldr	r0, [pc, #80]	; (800cdfc <RDMDevice::Print()+0x70>)
 800cdaa:	f7fc f87f 	bl	8008eac <printf>
 800cdae:	79a3      	ldrb	r3, [r4, #6]
 800cdb0:	7a22      	ldrb	r2, [r4, #8]
 800cdb2:	7a61      	ldrb	r1, [r4, #9]
 800cdb4:	9300      	str	r3, [sp, #0]
 800cdb6:	4812      	ldr	r0, [pc, #72]	; (800ce00 <RDMDevice::Print()+0x74>)
 800cdb8:	79e3      	ldrb	r3, [r4, #7]
 800cdba:	f7fc f877 	bl	8008eac <printf>
 800cdbe:	f894 102a 	ldrb.w	r1, [r4, #42]	; 0x2a
 800cdc2:	f104 020a 	add.w	r2, r4, #10
 800cdc6:	480f      	ldr	r0, [pc, #60]	; (800ce04 <RDMDevice::Print()+0x78>)
 800cdc8:	f7fc f870 	bl	8008eac <printf>
 800cdcc:	f8b4 104c 	ldrh.w	r1, [r4, #76]	; 0x4c
 800cdd0:	f894 204c 	ldrb.w	r2, [r4, #76]	; 0x4c
 800cdd4:	0a09      	lsrs	r1, r1, #8
 800cdd6:	480c      	ldr	r0, [pc, #48]	; (800ce08 <RDMDevice::Print()+0x7c>)
 800cdd8:	f7fc f868 	bl	8008eac <printf>
 800cddc:	f8b4 104e 	ldrh.w	r1, [r4, #78]	; 0x4e
 800cde0:	f894 204e 	ldrb.w	r2, [r4, #78]	; 0x4e
 800cde4:	4809      	ldr	r0, [pc, #36]	; (800ce0c <RDMDevice::Print()+0x80>)
 800cde6:	0a09      	lsrs	r1, r1, #8
 800cde8:	b002      	add	sp, #8
 800cdea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cdee:	f7fc b85d 	b.w	8008eac <printf>
 800cdf2:	bf00      	nop
 800cdf4:	080170e4 	stmdaeq	r1, {r2, r5, r6, r7, ip, sp, lr}
 800cdf8:	080170fe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r7, ip, sp, lr}
 800cdfc:	08017119 	stmdaeq	r1, {r0, r3, r4, r8, ip, sp, lr}
 800ce00:	08017138 	stmdaeq	r1, {r3, r4, r5, r8, ip, sp, lr}
 800ce04:	0801715f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r8, ip, sp, lr}
 800ce08:	0801717a 	stmdaeq	r1, {r1, r3, r4, r5, r6, r8, ip, sp, lr}
 800ce0c:	08017199 	stmdaeq	r1, {r0, r3, r4, r7, r8, ip, sp, lr}

0800ce10 <uuid_unparse_x>:
 800ce10:	4603      	mov	r3, r0
 800ce12:	b530      	push	{r4, r5, lr}
 800ce14:	4608      	mov	r0, r1
 800ce16:	4611      	mov	r1, r2
 800ce18:	681a      	ldr	r2, [r3, #0]
 800ce1a:	b08f      	sub	sp, #60	; 0x3c
 800ce1c:	ba12      	rev	r2, r2
 800ce1e:	920a      	str	r2, [sp, #40]	; 0x28
 800ce20:	889a      	ldrh	r2, [r3, #4]
 800ce22:	891c      	ldrh	r4, [r3, #8]
 800ce24:	ba52      	rev16	r2, r2
 800ce26:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800ce2a:	88da      	ldrh	r2, [r3, #6]
 800ce2c:	ba64      	rev16	r4, r4
 800ce2e:	ba52      	rev16	r2, r2
 800ce30:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 800ce34:	f8ad 4030 	strh.w	r4, [sp, #48]	; 0x30
 800ce38:	f103 020a 	add.w	r2, r3, #10
 800ce3c:	f10d 0432 	add.w	r4, sp, #50	; 0x32
 800ce40:	3310      	adds	r3, #16
 800ce42:	4293      	cmp	r3, r2
 800ce44:	d122      	bne.n	800ce8c <uuid_unparse_x+0x7c>
 800ce46:	f89d 2037 	ldrb.w	r2, [sp, #55]	; 0x37
 800ce4a:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 800ce4e:	9208      	str	r2, [sp, #32]
 800ce50:	f89d 2036 	ldrb.w	r2, [sp, #54]	; 0x36
 800ce54:	0a1b      	lsrs	r3, r3, #8
 800ce56:	9207      	str	r2, [sp, #28]
 800ce58:	f89d 2035 	ldrb.w	r2, [sp, #53]	; 0x35
 800ce5c:	9301      	str	r3, [sp, #4]
 800ce5e:	9206      	str	r2, [sp, #24]
 800ce60:	f89d 2034 	ldrb.w	r2, [sp, #52]	; 0x34
 800ce64:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 800ce68:	9205      	str	r2, [sp, #20]
 800ce6a:	f89d 2033 	ldrb.w	r2, [sp, #51]	; 0x33
 800ce6e:	9300      	str	r3, [sp, #0]
 800ce70:	9204      	str	r2, [sp, #16]
 800ce72:	f89d 2032 	ldrb.w	r2, [sp, #50]	; 0x32
 800ce76:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 800ce7a:	9203      	str	r2, [sp, #12]
 800ce7c:	f89d 2030 	ldrb.w	r2, [sp, #48]	; 0x30
 800ce80:	9202      	str	r2, [sp, #8]
 800ce82:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800ce84:	f7fc f822 	bl	8008ecc <sprintf>
 800ce88:	b00f      	add	sp, #60	; 0x3c
 800ce8a:	bd30      	pop	{r4, r5, pc}
 800ce8c:	f812 5b01 	ldrb.w	r5, [r2], #1
 800ce90:	f804 5b01 	strb.w	r5, [r4], #1
 800ce94:	e7d5      	b.n	800ce42 <uuid_unparse_x+0x32>
	...

0800ce98 <uuid_unparse>:
 800ce98:	4a01      	ldr	r2, [pc, #4]	; (800cea0 <uuid_unparse+0x8>)
 800ce9a:	f7ff bfb9 	b.w	800ce10 <uuid_unparse_x>
 800ce9e:	bf00      	nop
 800cea0:	080171f0 	stmdaeq	r1, {r4, r5, r6, r7, r8, ip, sp, lr}

0800cea4 <WS28xxDmxMulti::SetDmxStartAddress(unsigned short)>:
 800cea4:	2000      	movs	r0, #0
 800cea6:	4770      	bx	lr

0800cea8 <WS28xxDmxMulti::GetDmxStartAddress()>:
 800cea8:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800ceac:	4770      	bx	lr

0800ceae <WS28xxDmxMulti::GetDmxFootprint()>:
 800ceae:	2000      	movs	r0, #0
 800ceb0:	4770      	bx	lr

0800ceb2 <WS28xxDmxMulti::Start(unsigned int)>:
 800ceb2:	b538      	push	{r3, r4, r5, lr}
 800ceb4:	6b03      	ldr	r3, [r0, #48]	; 0x30
 800ceb6:	4604      	mov	r4, r0
 800ceb8:	460d      	mov	r5, r1
 800ceba:	b923      	cbnz	r3, 800cec6 <WS28xxDmxMulti::Start(unsigned int)+0x14>
 800cebc:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 800cebe:	b110      	cbz	r0, 800cec6 <WS28xxDmxMulti::Start(unsigned int)+0x14>
 800cec0:	6803      	ldr	r3, [r0, #0]
 800cec2:	689b      	ldr	r3, [r3, #8]
 800cec4:	4798      	blx	r3
 800cec6:	2301      	movs	r3, #1
 800cec8:	fa03 f105 	lsl.w	r1, r3, r5
 800cecc:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800cece:	430b      	orrs	r3, r1
 800ced0:	6323      	str	r3, [r4, #48]	; 0x30
 800ced2:	bd38      	pop	{r3, r4, r5, pc}

0800ced4 <WS28xxDmxMulti::~WS28xxDmxMulti()>:
 800ced4:	b538      	push	{r3, r4, r5, lr}
 800ced6:	4b06      	ldr	r3, [pc, #24]	; (800cef0 <WS28xxDmxMulti::~WS28xxDmxMulti()+0x1c>)
 800ced8:	6a85      	ldr	r5, [r0, #40]	; 0x28
 800ceda:	4604      	mov	r4, r0
 800cedc:	6003      	str	r3, [r0, #0]
 800cede:	b12d      	cbz	r5, 800ceec <WS28xxDmxMulti::~WS28xxDmxMulti()+0x18>
 800cee0:	4628      	mov	r0, r5
 800cee2:	f001 fa9d 	bl	800e420 <WS28xxMulti::~WS28xxMulti()>
 800cee6:	4628      	mov	r0, r5
 800cee8:	f006 fb92 	bl	8013610 <operator delete(void*)>
 800ceec:	4620      	mov	r0, r4
 800ceee:	bd38      	pop	{r3, r4, r5, pc}
 800cef0:	08017274 	stmdaeq	r1, {r2, r4, r5, r6, r9, ip, sp, lr}

0800cef4 <WS28xxDmxMulti::~WS28xxDmxMulti()>:
 800cef4:	b510      	push	{r4, lr}
 800cef6:	4604      	mov	r4, r0
 800cef8:	f7ff ffec 	bl	800ced4 <WS28xxDmxMulti::~WS28xxDmxMulti()>
 800cefc:	4620      	mov	r0, r4
 800cefe:	f006 fb87 	bl	8013610 <operator delete(void*)>
 800cf02:	4620      	mov	r0, r4
 800cf04:	bd10      	pop	{r4, pc}

0800cf06 <WS28xxDmxMulti::Blackout(bool)>:
 800cf06:	b538      	push	{r3, r4, r5, lr}
 800cf08:	4604      	mov	r4, r0
 800cf0a:	460d      	mov	r5, r1
 800cf0c:	f880 1034 	strb.w	r1, [r0, #52]	; 0x34
 800cf10:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800cf12:	f001 fb3b 	bl	800e58c <WS28xxMulti::IsUpdating()>
 800cf16:	2800      	cmp	r0, #0
 800cf18:	d1fa      	bne.n	800cf10 <WS28xxDmxMulti::Blackout(bool)+0xa>
 800cf1a:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800cf1c:	b11d      	cbz	r5, 800cf26 <WS28xxDmxMulti::Blackout(bool)+0x20>
 800cf1e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800cf22:	f001 bb15 	b.w	800e550 <WS28xxMulti::Blackout()>
 800cf26:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800cf2a:	f001 baa1 	b.w	800e470 <WS28xxMulti::Update()>

0800cf2e <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)>:
 800cf2e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cf32:	69c4      	ldr	r4, [r0, #28]
 800cf34:	b087      	sub	sp, #28
 800cf36:	fbb1 faf4 	udiv	sl, r1, r4
 800cf3a:	fb04 141a 	mls	r4, r4, sl, r1
 800cf3e:	461f      	mov	r7, r3
 800cf40:	4605      	mov	r5, r0
 800cf42:	4691      	mov	r9, r2
 800cf44:	6a03      	ldr	r3, [r0, #32]
 800cf46:	6946      	ldr	r6, [r0, #20]
 800cf48:	9104      	str	r1, [sp, #16]
 800cf4a:	2c03      	cmp	r4, #3
 800cf4c:	d83e      	bhi.n	800cfcc <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x9e>
 800cf4e:	e8df f004 	tbb	[pc, r4]
 800cf52:	3d3b3602 	ldccc	6, cr3, [fp, #-8]!
 800cf56:	fbb7 f3f3 	udiv	r3, r7, r3
 800cf5a:	429e      	cmp	r6, r3
 800cf5c:	bf28      	it	cs
 800cf5e:	461e      	movcs	r6, r3
 800cf60:	6aa8      	ldr	r0, [r5, #40]	; 0x28
 800cf62:	f001 fb13 	bl	800e58c <WS28xxMulti::IsUpdating()>
 800cf66:	2800      	cmp	r0, #0
 800cf68:	d1fa      	bne.n	800cf60 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x32>
 800cf6a:	6a2b      	ldr	r3, [r5, #32]
 800cf6c:	46c8      	mov	r8, r9
 800cf6e:	2b03      	cmp	r3, #3
 800cf70:	d031      	beq.n	800cfd6 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xa8>
 800cf72:	42b4      	cmp	r4, r6
 800cf74:	d256      	bcs.n	800d024 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xf6>
 800cf76:	eba8 0309 	sub.w	r3, r8, r9
 800cf7a:	429f      	cmp	r7, r3
 800cf7c:	d952      	bls.n	800d024 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xf6>
 800cf7e:	f04f 0b00 	mov.w	fp, #0
 800cf82:	69ab      	ldr	r3, [r5, #24]
 800cf84:	f898 f000 	pld	[r8]
 800cf88:	4363      	muls	r3, r4
 800cf8a:	9305      	str	r3, [sp, #20]
 800cf8c:	69ab      	ldr	r3, [r5, #24]
 800cf8e:	fa1f f28b 	uxth.w	r2, fp
 800cf92:	429a      	cmp	r2, r3
 800cf94:	f10b 0b01 	add.w	fp, fp, #1
 800cf98:	d240      	bcs.n	800d01c <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xee>
 800cf9a:	f898 3003 	ldrb.w	r3, [r8, #3]
 800cf9e:	9905      	ldr	r1, [sp, #20]
 800cfa0:	9302      	str	r3, [sp, #8]
 800cfa2:	f898 3002 	ldrb.w	r3, [r8, #2]
 800cfa6:	440a      	add	r2, r1
 800cfa8:	9301      	str	r3, [sp, #4]
 800cfaa:	f898 3001 	ldrb.w	r3, [r8, #1]
 800cfae:	4651      	mov	r1, sl
 800cfb0:	9300      	str	r3, [sp, #0]
 800cfb2:	f898 3000 	ldrb.w	r3, [r8]
 800cfb6:	6aa8      	ldr	r0, [r5, #40]	; 0x28
 800cfb8:	f001 fb58 	bl	800e66c <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>
 800cfbc:	e7e6      	b.n	800cf8c <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x5e>
 800cfbe:	6844      	ldr	r4, [r0, #4]
 800cfc0:	fbb7 f3f3 	udiv	r3, r7, r3
 800cfc4:	4423      	add	r3, r4
 800cfc6:	e7c8      	b.n	800cf5a <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x2c>
 800cfc8:	6884      	ldr	r4, [r0, #8]
 800cfca:	e7f9      	b.n	800cfc0 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x92>
 800cfcc:	68c4      	ldr	r4, [r0, #12]
 800cfce:	e7f7      	b.n	800cfc0 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x92>
 800cfd0:	3401      	adds	r4, #1
 800cfd2:	f108 0803 	add.w	r8, r8, #3
 800cfd6:	42b4      	cmp	r4, r6
 800cfd8:	d224      	bcs.n	800d024 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xf6>
 800cfda:	eba8 0309 	sub.w	r3, r8, r9
 800cfde:	429f      	cmp	r7, r3
 800cfe0:	d920      	bls.n	800d024 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xf6>
 800cfe2:	f04f 0b00 	mov.w	fp, #0
 800cfe6:	69ab      	ldr	r3, [r5, #24]
 800cfe8:	f898 f000 	pld	[r8]
 800cfec:	4363      	muls	r3, r4
 800cfee:	9305      	str	r3, [sp, #20]
 800cff0:	69ab      	ldr	r3, [r5, #24]
 800cff2:	fa1f f28b 	uxth.w	r2, fp
 800cff6:	4293      	cmp	r3, r2
 800cff8:	f10b 0b01 	add.w	fp, fp, #1
 800cffc:	d9e8      	bls.n	800cfd0 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xa2>
 800cffe:	f898 3002 	ldrb.w	r3, [r8, #2]
 800d002:	9905      	ldr	r1, [sp, #20]
 800d004:	9301      	str	r3, [sp, #4]
 800d006:	f898 3001 	ldrb.w	r3, [r8, #1]
 800d00a:	440a      	add	r2, r1
 800d00c:	9300      	str	r3, [sp, #0]
 800d00e:	4651      	mov	r1, sl
 800d010:	f898 3000 	ldrb.w	r3, [r8]
 800d014:	6aa8      	ldr	r0, [r5, #40]	; 0x28
 800d016:	f001 faff 	bl	800e618 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 800d01a:	e7e9      	b.n	800cff0 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0xc2>
 800d01c:	3401      	adds	r4, #1
 800d01e:	f108 0804 	add.w	r8, r8, #4
 800d022:	e7a6      	b.n	800cf72 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x44>
 800d024:	692b      	ldr	r3, [r5, #16]
 800d026:	9a04      	ldr	r2, [sp, #16]
 800d028:	4293      	cmp	r3, r2
 800d02a:	d105      	bne.n	800d038 <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)+0x10a>
 800d02c:	6aa8      	ldr	r0, [r5, #40]	; 0x28
 800d02e:	b007      	add	sp, #28
 800d030:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d034:	f001 ba1c 	b.w	800e470 <WS28xxMulti::Update()>
 800d038:	b007      	add	sp, #28
 800d03a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0800d040 <WS28xxDmxMulti::Print()>:
 800d040:	b510      	push	{r4, lr}
 800d042:	4604      	mov	r4, r0
 800d044:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800d046:	f001 f9f1 	bl	800e42c <WS28xxMulti::Print()>
 800d04a:	4807      	ldr	r0, [pc, #28]	; (800d068 <WS28xxDmxMulti::Print()+0x28>)
 800d04c:	f7fb ff2e 	bl	8008eac <printf>
 800d050:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800d052:	4806      	ldr	r0, [pc, #24]	; (800d06c <WS28xxDmxMulti::Print()+0x2c>)
 800d054:	f7fb ff2a 	bl	8008eac <printf>
 800d058:	e9d4 2105 	ldrd	r2, r1, [r4, #20]
 800d05c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d060:	4803      	ldr	r0, [pc, #12]	; (800d070 <WS28xxDmxMulti::Print()+0x30>)
 800d062:	f7fb bf23 	b.w	8008eac <printf>
 800d066:	bf00      	nop
 800d068:	08017221 	stmdaeq	r1, {r0, r5, r9, ip, sp, lr}
 800d06c:	08017237 	stmdaeq	r1, {r0, r1, r2, r4, r5, r9, ip, sp, lr}
 800d070:	08017246 	stmdaeq	r1, {r1, r2, r6, r9, ip, sp, lr}

0800d074 <WS28xxDmxMulti::Stop(unsigned int)>:
 800d074:	6b03      	ldr	r3, [r0, #48]	; 0x30
 800d076:	b570      	push	{r4, r5, r6, lr}
 800d078:	40cb      	lsrs	r3, r1
 800d07a:	07db      	lsls	r3, r3, #31
 800d07c:	4604      	mov	r4, r0
 800d07e:	460d      	mov	r5, r1
 800d080:	d50b      	bpl.n	800d09a <WS28xxDmxMulti::Stop(unsigned int)+0x26>
 800d082:	f44f 7300 	mov.w	r3, #512	; 0x200
 800d086:	4a0a      	ldr	r2, [pc, #40]	; (800d0b0 <WS28xxDmxMulti::Stop(unsigned int)+0x3c>)
 800d088:	f7ff ff51 	bl	800cf2e <WS28xxDmxMulti::SetData(unsigned int, unsigned char const*, unsigned int)>
 800d08c:	2301      	movs	r3, #1
 800d08e:	fa03 f505 	lsl.w	r5, r3, r5
 800d092:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800d094:	ea23 0305 	bic.w	r3, r3, r5
 800d098:	6323      	str	r3, [r4, #48]	; 0x30
 800d09a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800d09c:	b933      	cbnz	r3, 800d0ac <WS28xxDmxMulti::Stop(unsigned int)+0x38>
 800d09e:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 800d0a0:	b120      	cbz	r0, 800d0ac <WS28xxDmxMulti::Stop(unsigned int)+0x38>
 800d0a2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d0a6:	6803      	ldr	r3, [r0, #0]
 800d0a8:	68db      	ldr	r3, [r3, #12]
 800d0aa:	4718      	bx	r3
 800d0ac:	bd70      	pop	{r4, r5, r6, pc}
 800d0ae:	bf00      	nop
 800d0b0:	20003278 	andcs	r3, r0, r8, ror r2

0800d0b4 <WS28xxDmxMulti::WS28xxDmxMulti(PixelDmxConfiguration&)>:
 800d0b4:	4b16      	ldr	r3, [pc, #88]	; (800d110 <WS28xxDmxMulti::WS28xxDmxMulti(PixelDmxConfiguration&)+0x5c>)
 800d0b6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d0b8:	6003      	str	r3, [r0, #0]
 800d0ba:	2300      	movs	r3, #0
 800d0bc:	460d      	mov	r5, r1
 800d0be:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 800d0c2:	6303      	str	r3, [r0, #48]	; 0x30
 800d0c4:	f880 3034 	strb.w	r3, [r0, #52]	; 0x34
 800d0c8:	f100 031c 	add.w	r3, r0, #28
 800d0cc:	9301      	str	r3, [sp, #4]
 800d0ce:	f100 0314 	add.w	r3, r0, #20
 800d0d2:	f100 0220 	add.w	r2, r0, #32
 800d0d6:	4604      	mov	r4, r0
 800d0d8:	2108      	movs	r1, #8
 800d0da:	9300      	str	r3, [sp, #0]
 800d0dc:	1d03      	adds	r3, r0, #4
 800d0de:	4628      	mov	r0, r5
 800d0e0:	f000 fbd6 	bl	800d890 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&, unsigned int&, unsigned int&)>
 800d0e4:	2010      	movs	r0, #16
 800d0e6:	f006 fa97 	bl	8013618 <operator new(unsigned int)>
 800d0ea:	4606      	mov	r6, r0
 800d0ec:	4629      	mov	r1, r5
 800d0ee:	f001 f85b 	bl	800e1a8 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)>
 800d0f2:	4630      	mov	r0, r6
 800d0f4:	62a6      	str	r6, [r4, #40]	; 0x28
 800d0f6:	f001 fa2b 	bl	800e550 <WS28xxMulti::Blackout()>
 800d0fa:	69ab      	ldr	r3, [r5, #24]
 800d0fc:	4628      	mov	r0, r5
 800d0fe:	61a3      	str	r3, [r4, #24]
 800d100:	696b      	ldr	r3, [r5, #20]
 800d102:	6263      	str	r3, [r4, #36]	; 0x24
 800d104:	f000 fc1c 	bl	800d940 <PixelDmxConfiguration::Dump()>
 800d108:	4620      	mov	r0, r4
 800d10a:	b002      	add	sp, #8
 800d10c:	bd70      	pop	{r4, r5, r6, pc}
 800d10e:	bf00      	nop
 800d110:	08017274 	stmdaeq	r1, {r2, r4, r5, r6, r9, ip, sp, lr}

0800d114 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>:
 800d114:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d116:	88c5      	ldrh	r5, [r0, #6]
 800d118:	8886      	ldrh	r6, [r0, #4]
 800d11a:	42b5      	cmp	r5, r6
 800d11c:	d216      	bcs.n	800d14c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x38>
 800d11e:	4604      	mov	r4, r0
 800d120:	6800      	ldr	r0, [r0, #0]
 800d122:	4428      	add	r0, r5
 800d124:	1b75      	subs	r5, r6, r5
 800d126:	7a26      	ldrb	r6, [r4, #8]
 800d128:	b923      	cbnz	r3, 800d134 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x20>
 800d12a:	b926      	cbnz	r6, 800d136 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x22>
 800d12c:	9200      	str	r2, [sp, #0]
 800d12e:	460b      	mov	r3, r1
 800d130:	4a09      	ldr	r2, [pc, #36]	; (800d158 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x44>)
 800d132:	e003      	b.n	800d13c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 800d134:	b166      	cbz	r6, 800d150 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x3c>
 800d136:	460b      	mov	r3, r1
 800d138:	9200      	str	r2, [sp, #0]
 800d13a:	4a08      	ldr	r2, [pc, #32]	; (800d15c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x48>)
 800d13c:	4629      	mov	r1, r5
 800d13e:	f7fb fedd 	bl	8008efc <snprintf>
 800d142:	4285      	cmp	r5, r0
 800d144:	bfa2      	ittt	ge
 800d146:	88e3      	ldrhge	r3, [r4, #6]
 800d148:	181b      	addge	r3, r3, r0
 800d14a:	80e3      	strhge	r3, [r4, #6]
 800d14c:	b002      	add	sp, #8
 800d14e:	bd70      	pop	{r4, r5, r6, pc}
 800d150:	9200      	str	r2, [sp, #0]
 800d152:	460b      	mov	r3, r1
 800d154:	4a02      	ldr	r2, [pc, #8]	; (800d160 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x4c>)
 800d156:	e7f1      	b.n	800d13c <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 800d158:	08015dbd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r7, r8, sl, fp, ip, lr}
 800d15c:	08015db4 	stmdaeq	r1, {r2, r4, r5, r7, r8, sl, fp, ip, lr}
 800d160:	08015dbe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r7, r8, sl, fp, ip, lr}

0800d164 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>:
 800d164:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d166:	88c5      	ldrh	r5, [r0, #6]
 800d168:	8886      	ldrh	r6, [r0, #4]
 800d16a:	42b5      	cmp	r5, r6
 800d16c:	d216      	bcs.n	800d19c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x38>
 800d16e:	4604      	mov	r4, r0
 800d170:	6800      	ldr	r0, [r0, #0]
 800d172:	4428      	add	r0, r5
 800d174:	1b75      	subs	r5, r6, r5
 800d176:	7a26      	ldrb	r6, [r4, #8]
 800d178:	b923      	cbnz	r3, 800d184 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x20>
 800d17a:	b926      	cbnz	r6, 800d186 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x22>
 800d17c:	9200      	str	r2, [sp, #0]
 800d17e:	460b      	mov	r3, r1
 800d180:	4a09      	ldr	r2, [pc, #36]	; (800d1a8 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x44>)
 800d182:	e003      	b.n	800d18c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800d184:	b166      	cbz	r6, 800d1a0 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x3c>
 800d186:	460b      	mov	r3, r1
 800d188:	9200      	str	r2, [sp, #0]
 800d18a:	4a08      	ldr	r2, [pc, #32]	; (800d1ac <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x48>)
 800d18c:	4629      	mov	r1, r5
 800d18e:	f7fb feb5 	bl	8008efc <snprintf>
 800d192:	4285      	cmp	r5, r0
 800d194:	bfa2      	ittt	ge
 800d196:	88e3      	ldrhge	r3, [r4, #6]
 800d198:	181b      	addge	r3, r3, r0
 800d19a:	80e3      	strhge	r3, [r4, #6]
 800d19c:	b002      	add	sp, #8
 800d19e:	bd70      	pop	{r4, r5, r6, pc}
 800d1a0:	9200      	str	r2, [sp, #0]
 800d1a2:	460b      	mov	r3, r1
 800d1a4:	4a02      	ldr	r2, [pc, #8]	; (800d1b0 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x4c>)
 800d1a6:	e7f1      	b.n	800d18c <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]+0x28>
 800d1a8:	08015dbd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r7, r8, sl, fp, ip, lr}
 800d1ac:	08015db4 	stmdaeq	r1, {r2, r4, r5, r7, r8, sl, fp, ip, lr}
 800d1b0:	08015dbe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r7, r8, sl, fp, ip, lr}

0800d1b4 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>:
 800d1b4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d1b6:	88c5      	ldrh	r5, [r0, #6]
 800d1b8:	8886      	ldrh	r6, [r0, #4]
 800d1ba:	42b5      	cmp	r5, r6
 800d1bc:	d216      	bcs.n	800d1ec <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x38>
 800d1be:	4604      	mov	r4, r0
 800d1c0:	6800      	ldr	r0, [r0, #0]
 800d1c2:	4428      	add	r0, r5
 800d1c4:	1b75      	subs	r5, r6, r5
 800d1c6:	7a26      	ldrb	r6, [r4, #8]
 800d1c8:	b923      	cbnz	r3, 800d1d4 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x20>
 800d1ca:	b926      	cbnz	r6, 800d1d6 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x22>
 800d1cc:	9200      	str	r2, [sp, #0]
 800d1ce:	460b      	mov	r3, r1
 800d1d0:	4a09      	ldr	r2, [pc, #36]	; (800d1f8 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x44>)
 800d1d2:	e003      	b.n	800d1dc <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800d1d4:	b166      	cbz	r6, 800d1f0 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x3c>
 800d1d6:	460b      	mov	r3, r1
 800d1d8:	9200      	str	r2, [sp, #0]
 800d1da:	4a08      	ldr	r2, [pc, #32]	; (800d1fc <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x48>)
 800d1dc:	4629      	mov	r1, r5
 800d1de:	f7fb fe8d 	bl	8008efc <snprintf>
 800d1e2:	4285      	cmp	r5, r0
 800d1e4:	bfa2      	ittt	ge
 800d1e6:	88e3      	ldrhge	r3, [r4, #6]
 800d1e8:	181b      	addge	r3, r3, r0
 800d1ea:	80e3      	strhge	r3, [r4, #6]
 800d1ec:	b002      	add	sp, #8
 800d1ee:	bd70      	pop	{r4, r5, r6, pc}
 800d1f0:	9200      	str	r2, [sp, #0]
 800d1f2:	460b      	mov	r3, r1
 800d1f4:	4a02      	ldr	r2, [pc, #8]	; (800d200 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x4c>)
 800d1f6:	e7f1      	b.n	800d1dc <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]+0x28>
 800d1f8:	08015dd0 	stmdaeq	r1, {r4, r6, r7, r8, sl, fp, ip, lr}
 800d1fc:	08015dc5 	stmdaeq	r1, {r0, r2, r6, r7, r8, sl, fp, ip, lr}
 800d200:	08015dd1 	stmdaeq	r1, {r0, r4, r6, r7, r8, sl, fp, ip, lr}

0800d204 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>:
 800d204:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800d208:	4699      	mov	r9, r3
 800d20a:	8885      	ldrh	r5, [r0, #4]
 800d20c:	88c3      	ldrh	r3, [r0, #6]
 800d20e:	4604      	mov	r4, r0
 800d210:	42ab      	cmp	r3, r5
 800d212:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
 800d216:	d227      	bcs.n	800d268 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x64>
 800d218:	6826      	ldr	r6, [r4, #0]
 800d21a:	4610      	mov	r0, r2
 800d21c:	460f      	mov	r7, r1
 800d21e:	f894 a008 	ldrb.w	sl, [r4, #8]
 800d222:	441e      	add	r6, r3
 800d224:	1aed      	subs	r5, r5, r3
 800d226:	f7fa fca1 	bl	8007b6c <__aeabi_f2d>
 800d22a:	f1b9 0f00 	cmp.w	r9, #0
 800d22e:	d109      	bne.n	800d244 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x40>
 800d230:	f1ba 0f00 	cmp.w	sl, #0
 800d234:	d109      	bne.n	800d24a <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x46>
 800d236:	463b      	mov	r3, r7
 800d238:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800d23c:	4a0f      	ldr	r2, [pc, #60]	; (800d27c <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x78>)
 800d23e:	f8cd 8000 	str.w	r8, [sp]
 800d242:	e008      	b.n	800d256 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x52>
 800d244:	f1ba 0f00 	cmp.w	sl, #0
 800d248:	d011      	beq.n	800d26e <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x6a>
 800d24a:	463b      	mov	r3, r7
 800d24c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800d250:	4a0b      	ldr	r2, [pc, #44]	; (800d280 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x7c>)
 800d252:	f8cd 8000 	str.w	r8, [sp]
 800d256:	4629      	mov	r1, r5
 800d258:	4630      	mov	r0, r6
 800d25a:	f7fb fe4f 	bl	8008efc <snprintf>
 800d25e:	4285      	cmp	r5, r0
 800d260:	bfa2      	ittt	ge
 800d262:	88e3      	ldrhge	r3, [r4, #6]
 800d264:	181b      	addge	r3, r3, r0
 800d266:	80e3      	strhge	r3, [r4, #6]
 800d268:	b004      	add	sp, #16
 800d26a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d26e:	463b      	mov	r3, r7
 800d270:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800d274:	4a03      	ldr	r2, [pc, #12]	; (800d284 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x80>)
 800d276:	f8cd 8000 	str.w	r8, [sp]
 800d27a:	e7ec      	b.n	800d256 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]+0x52>
 800d27c:	080172ab 	stmdaeq	r1, {r0, r1, r3, r5, r7, r9, ip, sp, lr}
 800d280:	080172a0 	stmdaeq	r1, {r5, r7, r9, ip, sp, lr}
 800d284:	080172ac 	stmdaeq	r1, {r2, r3, r5, r7, r9, ip, sp, lr}

0800d288 <WS28xxDmxParams::WS28xxDmxParams(WS28xxDmxParamsStore*)>:
 800d288:	2200      	movs	r2, #0
 800d28a:	6001      	str	r1, [r0, #0]
 800d28c:	4910      	ldr	r1, [pc, #64]	; (800d2d0 <WS28xxDmxParams::WS28xxDmxParams(WS28xxDmxParamsStore*)+0x48>)
 800d28e:	f44f 3c80 	mov.w	ip, #65536	; 0x10000
 800d292:	e9c0 2101 	strd	r2, r1, [r0, #4]
 800d296:	f44f 6110 	mov.w	r1, #2304	; 0x900
 800d29a:	81c1      	strh	r1, [r0, #14]
 800d29c:	213d      	movs	r1, #61	; 0x3d
 800d29e:	8201      	strh	r1, [r0, #16]
 800d2a0:	f240 11ff 	movw	r1, #511	; 0x1ff
 800d2a4:	8241      	strh	r1, [r0, #18]
 800d2a6:	2101      	movs	r1, #1
 800d2a8:	7541      	strb	r1, [r0, #21]
 800d2aa:	2106      	movs	r1, #6
 800d2ac:	75c1      	strb	r1, [r0, #23]
 800d2ae:	4909      	ldr	r1, [pc, #36]	; (800d2d4 <WS28xxDmxParams::WS28xxDmxParams(WS28xxDmxParamsStore*)+0x4c>)
 800d2b0:	7302      	strb	r2, [r0, #12]
 800d2b2:	e9c0 c106 	strd	ip, r1, [r0, #24]
 800d2b6:	f101 1108 	add.w	r1, r1, #524296	; 0x80008
 800d2ba:	6201      	str	r1, [r0, #32]
 800d2bc:	f101 1108 	add.w	r1, r1, #524296	; 0x80008
 800d2c0:	6241      	str	r1, [r0, #36]	; 0x24
 800d2c2:	211d      	movs	r1, #29
 800d2c4:	7582      	strb	r2, [r0, #22]
 800d2c6:	8501      	strh	r1, [r0, #40]	; 0x28
 800d2c8:	f880 202a 	strb.w	r2, [r0, #42]	; 0x2a
 800d2cc:	4770      	bx	lr
 800d2ce:	bf00      	nop
 800d2d0:	0100aa03 	tsteq	r0, r3, lsl #20
 800d2d4:	00090005 	andeq	r0, r9, r5

0800d2d8 <WS28xxDmxParams::Load()>:
 800d2d8:	b508      	push	{r3, lr}
 800d2da:	2300      	movs	r3, #0
 800d2dc:	4601      	mov	r1, r0
 800d2de:	6043      	str	r3, [r0, #4]
 800d2e0:	6800      	ldr	r0, [r0, #0]
 800d2e2:	b120      	cbz	r0, 800d2ee <WS28xxDmxParams::Load()+0x16>
 800d2e4:	6803      	ldr	r3, [r0, #0]
 800d2e6:	3104      	adds	r1, #4
 800d2e8:	68db      	ldr	r3, [r3, #12]
 800d2ea:	4798      	blx	r3
 800d2ec:	2001      	movs	r0, #1
 800d2ee:	bd08      	pop	{r3, pc}

0800d2f0 <WS28xxDmxParams::Load(char const*, unsigned int)>:
 800d2f0:	6803      	ldr	r3, [r0, #0]
 800d2f2:	b1d3      	cbz	r3, 800d32a <WS28xxDmxParams::Load(char const*, unsigned int)+0x3a>
 800d2f4:	2300      	movs	r3, #0
 800d2f6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d2f8:	460d      	mov	r5, r1
 800d2fa:	4616      	mov	r6, r2
 800d2fc:	4604      	mov	r4, r0
 800d2fe:	6043      	str	r3, [r0, #4]
 800d300:	4602      	mov	r2, r0
 800d302:	490a      	ldr	r1, [pc, #40]	; (800d32c <WS28xxDmxParams::Load(char const*, unsigned int)+0x3c>)
 800d304:	4668      	mov	r0, sp
 800d306:	f005 fb23 	bl	8012950 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 800d30a:	4632      	mov	r2, r6
 800d30c:	4629      	mov	r1, r5
 800d30e:	4668      	mov	r0, sp
 800d310:	f005 fb22 	bl	8012958 <ReadConfigFile::Read(char const*, unsigned int)>
 800d314:	4621      	mov	r1, r4
 800d316:	f851 0b04 	ldr.w	r0, [r1], #4
 800d31a:	6803      	ldr	r3, [r0, #0]
 800d31c:	689b      	ldr	r3, [r3, #8]
 800d31e:	4798      	blx	r3
 800d320:	4668      	mov	r0, sp
 800d322:	f005 fb18 	bl	8012956 <ReadConfigFile::~ReadConfigFile()>
 800d326:	b002      	add	sp, #8
 800d328:	bd70      	pop	{r4, r5, r6, pc}
 800d32a:	4770      	bx	lr
 800d32c:	0800d595 	stmdaeq	r0, {r0, r2, r4, r7, r8, sl, ip, lr, pc}

0800d330 <WS28xxDmxParams::callbackFunction(char const*)>:
 800d330:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d334:	2308      	movs	r3, #8
 800d336:	460d      	mov	r5, r1
 800d338:	b088      	sub	sp, #32
 800d33a:	4604      	mov	r4, r0
 800d33c:	9302      	str	r3, [sp, #8]
 800d33e:	4628      	mov	r0, r5
 800d340:	4988      	ldr	r1, [pc, #544]	; (800d564 <WS28xxDmxParams::callbackFunction(char const*)+0x234>)
 800d342:	446b      	add	r3, sp
 800d344:	aa04      	add	r2, sp, #16
 800d346:	f005 fb3b 	bl	80129c0 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800d34a:	b9a0      	cbnz	r0, 800d376 <WS28xxDmxParams::callbackFunction(char const*)+0x46>
 800d34c:	9b02      	ldr	r3, [sp, #8]
 800d34e:	3320      	adds	r3, #32
 800d350:	446b      	add	r3, sp
 800d352:	f803 0c10 	strb.w	r0, [r3, #-16]
 800d356:	a804      	add	r0, sp, #16
 800d358:	f000 fe20 	bl	800df9c <PixelType::GetType(char const*)>
 800d35c:	280e      	cmp	r0, #14
 800d35e:	bf08      	it	eq
 800d360:	2203      	moveq	r2, #3
 800d362:	6863      	ldr	r3, [r4, #4]
 800d364:	bf19      	ittee	ne
 800d366:	7220      	strbne	r0, [r4, #8]
 800d368:	f043 0301 	orrne.w	r3, r3, #1
 800d36c:	7222      	strbeq	r2, [r4, #8]
 800d36e:	f023 0301 	biceq.w	r3, r3, #1
 800d372:	6063      	str	r3, [r4, #4]
 800d374:	e033      	b.n	800d3de <WS28xxDmxParams::callbackFunction(char const*)+0xae>
 800d376:	4628      	mov	r0, r5
 800d378:	497b      	ldr	r1, [pc, #492]	; (800d568 <WS28xxDmxParams::callbackFunction(char const*)+0x238>)
 800d37a:	f10d 0202 	add.w	r2, sp, #2
 800d37e:	f005 fbdb 	bl	8012b38 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800d382:	b990      	cbnz	r0, 800d3aa <WS28xxDmxParams::callbackFunction(char const*)+0x7a>
 800d384:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 800d388:	6863      	ldr	r3, [r4, #4]
 800d38a:	1e51      	subs	r1, r2, #1
 800d38c:	f5b1 7f2a 	cmp.w	r1, #680	; 0x2a8
 800d390:	bf2d      	iteet	cs
 800d392:	f06f 0255 	mvncs.w	r2, #85	; 0x55
 800d396:	f8a4 2009 	strhcc.w	r2, [r4, #9]
 800d39a:	f043 0302 	orrcc.w	r3, r3, #2
 800d39e:	7262      	strbcs	r2, [r4, #9]
 800d3a0:	bf24      	itt	cs
 800d3a2:	72a0      	strbcs	r0, [r4, #10]
 800d3a4:	f023 0302 	biccs.w	r3, r3, #2
 800d3a8:	e7e3      	b.n	800d372 <WS28xxDmxParams::callbackFunction(char const*)+0x42>
 800d3aa:	2303      	movs	r3, #3
 800d3ac:	4628      	mov	r0, r5
 800d3ae:	9302      	str	r3, [sp, #8]
 800d3b0:	496e      	ldr	r1, [pc, #440]	; (800d56c <WS28xxDmxParams::callbackFunction(char const*)+0x23c>)
 800d3b2:	ab02      	add	r3, sp, #8
 800d3b4:	aa04      	add	r2, sp, #16
 800d3b6:	f005 fb03 	bl	80129c0 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 800d3ba:	b998      	cbnz	r0, 800d3e4 <WS28xxDmxParams::callbackFunction(char const*)+0xb4>
 800d3bc:	9b02      	ldr	r3, [sp, #8]
 800d3be:	3320      	adds	r3, #32
 800d3c0:	446b      	add	r3, sp
 800d3c2:	f803 0c10 	strb.w	r0, [r3, #-16]
 800d3c6:	a804      	add	r0, sp, #16
 800d3c8:	f000 fe0c 	bl	800dfe4 <PixelType::GetMap(char const*)>
 800d3cc:	6863      	ldr	r3, [r4, #4]
 800d3ce:	2806      	cmp	r0, #6
 800d3d0:	bf14      	ite	ne
 800d3d2:	f443 7300 	orrne.w	r3, r3, #512	; 0x200
 800d3d6:	f423 7300 	biceq.w	r3, r3, #512	; 0x200
 800d3da:	6063      	str	r3, [r4, #4]
 800d3dc:	75e0      	strb	r0, [r4, #23]
 800d3de:	b008      	add	sp, #32
 800d3e0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d3e4:	4628      	mov	r0, r5
 800d3e6:	4962      	ldr	r1, [pc, #392]	; (800d570 <WS28xxDmxParams::callbackFunction(char const*)+0x240>)
 800d3e8:	aa01      	add	r2, sp, #4
 800d3ea:	f005 fb02 	bl	80129f2 <Sscan::Float(char const*, char const*, float&)>
 800d3ee:	b960      	cbnz	r0, 800d40a <WS28xxDmxParams::callbackFunction(char const*)+0xda>
 800d3f0:	9801      	ldr	r0, [sp, #4]
 800d3f2:	f000 fe59 	bl	800e0a8 <PixelType::ConvertTxH(float)>
 800d3f6:	6863      	ldr	r3, [r4, #4]
 800d3f8:	b120      	cbz	r0, 800d404 <WS28xxDmxParams::callbackFunction(char const*)+0xd4>
 800d3fa:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800d3fe:	6063      	str	r3, [r4, #4]
 800d400:	7620      	strb	r0, [r4, #24]
 800d402:	e7ec      	b.n	800d3de <WS28xxDmxParams::callbackFunction(char const*)+0xae>
 800d404:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800d408:	e7f9      	b.n	800d3fe <WS28xxDmxParams::callbackFunction(char const*)+0xce>
 800d40a:	4628      	mov	r0, r5
 800d40c:	4959      	ldr	r1, [pc, #356]	; (800d574 <WS28xxDmxParams::callbackFunction(char const*)+0x244>)
 800d40e:	aa01      	add	r2, sp, #4
 800d410:	f005 faef 	bl	80129f2 <Sscan::Float(char const*, char const*, float&)>
 800d414:	b960      	cbnz	r0, 800d430 <WS28xxDmxParams::callbackFunction(char const*)+0x100>
 800d416:	9801      	ldr	r0, [sp, #4]
 800d418:	f000 fe46 	bl	800e0a8 <PixelType::ConvertTxH(float)>
 800d41c:	6863      	ldr	r3, [r4, #4]
 800d41e:	b120      	cbz	r0, 800d42a <WS28xxDmxParams::callbackFunction(char const*)+0xfa>
 800d420:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 800d424:	6063      	str	r3, [r4, #4]
 800d426:	7660      	strb	r0, [r4, #25]
 800d428:	e7d9      	b.n	800d3de <WS28xxDmxParams::callbackFunction(char const*)+0xae>
 800d42a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800d42e:	e7f9      	b.n	800d424 <WS28xxDmxParams::callbackFunction(char const*)+0xf4>
 800d430:	4628      	mov	r0, r5
 800d432:	4951      	ldr	r1, [pc, #324]	; (800d578 <WS28xxDmxParams::callbackFunction(char const*)+0x248>)
 800d434:	f10d 0202 	add.w	r2, sp, #2
 800d438:	f005 fb7e 	bl	8012b38 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800d43c:	b998      	cbnz	r0, 800d466 <WS28xxDmxParams::callbackFunction(char const*)+0x136>
 800d43e:	f240 25a6 	movw	r5, #678	; 0x2a6
 800d442:	f8bd 1002 	ldrh.w	r1, [sp, #2]
 800d446:	6863      	ldr	r3, [r4, #4]
 800d448:	1e8a      	subs	r2, r1, #2
 800d44a:	b292      	uxth	r2, r2
 800d44c:	42aa      	cmp	r2, r5
 800d44e:	bf81      	itttt	hi
 800d450:	2201      	movhi	r2, #1
 800d452:	75a0      	strbhi	r0, [r4, #22]
 800d454:	7562      	strbhi	r2, [r4, #21]
 800d456:	f423 7380 	bichi.w	r3, r3, #256	; 0x100
 800d45a:	bf9c      	itt	ls
 800d45c:	f8a4 1015 	strhls.w	r1, [r4, #21]
 800d460:	f443 7380 	orrls.w	r3, r3, #256	; 0x100
 800d464:	e785      	b.n	800d372 <WS28xxDmxParams::callbackFunction(char const*)+0x42>
 800d466:	4628      	mov	r0, r5
 800d468:	4944      	ldr	r1, [pc, #272]	; (800d57c <WS28xxDmxParams::callbackFunction(char const*)+0x24c>)
 800d46a:	aa03      	add	r2, sp, #12
 800d46c:	f005 fb82 	bl	8012b74 <Sscan::Uint32(char const*, char const*, unsigned int&)>
 800d470:	b960      	cbnz	r0, 800d48c <WS28xxDmxParams::callbackFunction(char const*)+0x15c>
 800d472:	9a03      	ldr	r2, [sp, #12]
 800d474:	4942      	ldr	r1, [pc, #264]	; (800d580 <WS28xxDmxParams::callbackFunction(char const*)+0x250>)
 800d476:	6863      	ldr	r3, [r4, #4]
 800d478:	428a      	cmp	r2, r1
 800d47a:	bf14      	ite	ne
 800d47c:	f043 0310 	orrne.w	r3, r3, #16
 800d480:	f023 0310 	biceq.w	r3, r3, #16
 800d484:	6063      	str	r3, [r4, #4]
 800d486:	f8c4 200e 	str.w	r2, [r4, #14]
 800d48a:	e7a8      	b.n	800d3de <WS28xxDmxParams::callbackFunction(char const*)+0xae>
 800d48c:	4628      	mov	r0, r5
 800d48e:	493d      	ldr	r1, [pc, #244]	; (800d584 <WS28xxDmxParams::callbackFunction(char const*)+0x254>)
 800d490:	f10d 0201 	add.w	r2, sp, #1
 800d494:	f005 fb97 	bl	8012bc6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800d498:	b988      	cbnz	r0, 800d4be <WS28xxDmxParams::callbackFunction(char const*)+0x18e>
 800d49a:	f89d 1001 	ldrb.w	r1, [sp, #1]
 800d49e:	6863      	ldr	r3, [r4, #4]
 800d4a0:	1e4a      	subs	r2, r1, #1
 800d4a2:	b2d2      	uxtb	r2, r2
 800d4a4:	2afd      	cmp	r2, #253	; 0xfd
 800d4a6:	bf83      	ittte	hi
 800d4a8:	f023 0320 	bichi.w	r3, r3, #32
 800d4ac:	6063      	strhi	r3, [r4, #4]
 800d4ae:	23ff      	movhi	r3, #255	; 0xff
 800d4b0:	f043 0320 	orrls.w	r3, r3, #32
 800d4b4:	bf9a      	itte	ls
 800d4b6:	6063      	strls	r3, [r4, #4]
 800d4b8:	74a1      	strbls	r1, [r4, #18]
 800d4ba:	74a3      	strbhi	r3, [r4, #18]
 800d4bc:	e78f      	b.n	800d3de <WS28xxDmxParams::callbackFunction(char const*)+0xae>
 800d4be:	2600      	movs	r6, #0
 800d4c0:	f04f 0812 	mov.w	r8, #18
 800d4c4:	f44f 5a80 	mov.w	sl, #4096	; 0x1000
 800d4c8:	f8df 90bc 	ldr.w	r9, [pc, #188]	; 800d588 <WS28xxDmxParams::callbackFunction(char const*)+0x258>
 800d4cc:	f104 071a 	add.w	r7, r4, #26
 800d4d0:	4628      	mov	r0, r5
 800d4d2:	fb08 9106 	mla	r1, r8, r6, r9
 800d4d6:	f10d 0202 	add.w	r2, sp, #2
 800d4da:	f005 fb2d 	bl	8012b38 <Sscan::Uint16(char const*, char const*, unsigned short&)>
 800d4de:	b940      	cbnz	r0, 800d4f2 <WS28xxDmxParams::callbackFunction(char const*)+0x1c2>
 800d4e0:	f8bd 1002 	ldrh.w	r1, [sp, #2]
 800d4e4:	6863      	ldr	r3, [r4, #4]
 800d4e6:	fa0a f206 	lsl.w	r2, sl, r6
 800d4ea:	b1e9      	cbz	r1, 800d528 <WS28xxDmxParams::callbackFunction(char const*)+0x1f8>
 800d4ec:	8039      	strh	r1, [r7, #0]
 800d4ee:	4313      	orrs	r3, r2
 800d4f0:	6063      	str	r3, [r4, #4]
 800d4f2:	3601      	adds	r6, #1
 800d4f4:	2e08      	cmp	r6, #8
 800d4f6:	f107 0702 	add.w	r7, r7, #2
 800d4fa:	d1e9      	bne.n	800d4d0 <WS28xxDmxParams::callbackFunction(char const*)+0x1a0>
 800d4fc:	4628      	mov	r0, r5
 800d4fe:	4923      	ldr	r1, [pc, #140]	; (800d58c <WS28xxDmxParams::callbackFunction(char const*)+0x25c>)
 800d500:	f10d 0201 	add.w	r2, sp, #1
 800d504:	f005 fb5f 	bl	8012bc6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800d508:	b9a0      	cbnz	r0, 800d534 <WS28xxDmxParams::callbackFunction(char const*)+0x204>
 800d50a:	f89d 2001 	ldrb.w	r2, [sp, #1]
 800d50e:	6863      	ldr	r3, [r4, #4]
 800d510:	1e91      	subs	r1, r2, #2
 800d512:	2906      	cmp	r1, #6
 800d514:	bf8d      	iteet	hi
 800d516:	2201      	movhi	r2, #1
 800d518:	74e2      	strbls	r2, [r4, #19]
 800d51a:	f043 0340 	orrls.w	r3, r3, #64	; 0x40
 800d51e:	74e2      	strbhi	r2, [r4, #19]
 800d520:	bf88      	it	hi
 800d522:	f023 0340 	bichi.w	r3, r3, #64	; 0x40
 800d526:	e724      	b.n	800d372 <WS28xxDmxParams::callbackFunction(char const*)+0x42>
 800d528:	00b1      	lsls	r1, r6, #2
 800d52a:	3101      	adds	r1, #1
 800d52c:	8039      	strh	r1, [r7, #0]
 800d52e:	ea23 0302 	bic.w	r3, r3, r2
 800d532:	e7dd      	b.n	800d4f0 <WS28xxDmxParams::callbackFunction(char const*)+0x1c0>
 800d534:	4628      	mov	r0, r5
 800d536:	4916      	ldr	r1, [pc, #88]	; (800d590 <WS28xxDmxParams::callbackFunction(char const*)+0x260>)
 800d538:	f10d 0201 	add.w	r2, sp, #1
 800d53c:	f005 fb43 	bl	8012bc6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 800d540:	2800      	cmp	r0, #0
 800d542:	f47f af4c 	bne.w	800d3de <WS28xxDmxParams::callbackFunction(char const*)+0xae>
 800d546:	f89d 2001 	ldrb.w	r2, [sp, #1]
 800d54a:	6863      	ldr	r3, [r4, #4]
 800d54c:	1e51      	subs	r1, r2, #1
 800d54e:	2904      	cmp	r1, #4
 800d550:	bf99      	ittee	ls
 800d552:	f884 202a 	strbls.w	r2, [r4, #42]	; 0x2a
 800d556:	f443 1380 	orrls.w	r3, r3, #1048576	; 0x100000
 800d55a:	f884 002a 	strbhi.w	r0, [r4, #42]	; 0x2a
 800d55e:	f423 1380 	bichi.w	r3, r3, #1048576	; 0x100000
 800d562:	e706      	b.n	800d372 <WS28xxDmxParams::callbackFunction(char const*)+0x42>
 800d564:	08017987 	stmdaeq	r1, {r0, r1, r2, r7, r8, fp, ip, sp, lr}
 800d568:	08017990 	stmdaeq	r1, {r4, r7, r8, fp, ip, sp, lr}
 800d56c:	08017977 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, r8, fp, ip, sp, lr}
 800d570:	0801799a 	stmdaeq	r1, {r1, r3, r4, r7, r8, fp, ip, sp, lr}
 800d574:	080179a2 	stmdaeq	r1, {r1, r5, r7, r8, fp, ip, sp, lr}
 800d578:	08017955 	stmdaeq	r1, {r0, r2, r4, r6, r8, fp, ip, sp, lr}
 800d57c:	08017946 	stmdaeq	r1, {r1, r2, r6, r8, fp, ip, sp, lr}
 800d580:	003d0900 	eorseq	r0, sp, r0, lsl #18
 800d584:	08017965 	stmdaeq	r1, {r0, r2, r5, r6, r8, fp, ip, sp, lr}
 800d588:	08017a30 	stmdaeq	r1, {r4, r5, r9, fp, ip, sp, lr}
 800d58c:	0801793b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r8, fp, ip, sp, lr}
 800d590:	080179e3 	stmdaeq	r1, {r0, r1, r5, r6, r7, r8, fp, ip, sp, lr}

0800d594 <WS28xxDmxParams::staticCallbackFunction(void*, char const*)>:
 800d594:	f7ff becc 	b.w	800d330 <WS28xxDmxParams::callbackFunction(char const*)>

0800d598 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)>:
 800d598:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d59c:	4604      	mov	r4, r0
 800d59e:	4615      	mov	r5, r2
 800d5a0:	461e      	mov	r6, r3
 800d5a2:	b086      	sub	sp, #24
 800d5a4:	3004      	adds	r0, #4
 800d5a6:	2900      	cmp	r1, #0
 800d5a8:	f000 808e 	beq.w	800d6c8 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x130>
 800d5ac:	2227      	movs	r2, #39	; 0x27
 800d5ae:	f006 f8f2 	bl	8013796 <memmove>
 800d5b2:	4633      	mov	r3, r6
 800d5b4:	462a      	mov	r2, r5
 800d5b6:	497b      	ldr	r1, [pc, #492]	; (800d7a4 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x20c>)
 800d5b8:	a803      	add	r0, sp, #12
 800d5ba:	f005 f929 	bl	8012810 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 800d5be:	7a20      	ldrb	r0, [r4, #8]
 800d5c0:	f000 fce0 	bl	800df84 <PixelType::GetType(pixel::Type)>
 800d5c4:	6863      	ldr	r3, [r4, #4]
 800d5c6:	4602      	mov	r2, r0
 800d5c8:	4977      	ldr	r1, [pc, #476]	; (800d7a8 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x210>)
 800d5ca:	f003 0301 	and.w	r3, r3, #1
 800d5ce:	a803      	add	r0, sp, #12
 800d5d0:	f7ff fdf0 	bl	800d1b4 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800d5d4:	6863      	ldr	r3, [r4, #4]
 800d5d6:	f8b4 2009 	ldrh.w	r2, [r4, #9]
 800d5da:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800d5de:	4973      	ldr	r1, [pc, #460]	; (800d7ac <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x214>)
 800d5e0:	a803      	add	r0, sp, #12
 800d5e2:	f7ff fdbf 	bl	800d164 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800d5e6:	4972      	ldr	r1, [pc, #456]	; (800d7b0 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x218>)
 800d5e8:	a803      	add	r0, sp, #12
 800d5ea:	f005 f997 	bl	801291c <PropertiesBuilder::AddComment(char const*)>
 800d5ee:	6863      	ldr	r3, [r4, #4]
 800d5f0:	059e      	lsls	r6, r3, #22
 800d5f2:	d403      	bmi.n	800d5fc <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x64>
 800d5f4:	7a20      	ldrb	r0, [r4, #8]
 800d5f6:	f000 f9a4 	bl	800d942 <PixelConfiguration::GetRgbMapping(pixel::Type)>
 800d5fa:	75e0      	strb	r0, [r4, #23]
 800d5fc:	7de0      	ldrb	r0, [r4, #23]
 800d5fe:	f000 fd19 	bl	800e034 <PixelType::GetMap(pixel::Map)>
 800d602:	6863      	ldr	r3, [r4, #4]
 800d604:	4602      	mov	r2, r0
 800d606:	f3c3 2340 	ubfx	r3, r3, #9, #1
 800d60a:	496a      	ldr	r1, [pc, #424]	; (800d7b4 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x21c>)
 800d60c:	a803      	add	r0, sp, #12
 800d60e:	f7ff fdd1 	bl	800d1b4 <bool PropertiesBuilder::Add<char const*>(char const*, char const*, bool, unsigned int) [clone .isra.0]>
 800d612:	6863      	ldr	r3, [r4, #4]
 800d614:	f403 6340 	and.w	r3, r3, #3072	; 0xc00
 800d618:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 800d61c:	d011      	beq.n	800d642 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0xaa>
 800d61e:	f10d 020b 	add.w	r2, sp, #11
 800d622:	7a20      	ldrb	r0, [r4, #8]
 800d624:	f10d 010a 	add.w	r1, sp, #10
 800d628:	f000 f99a 	bl	800d960 <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)>
 800d62c:	6863      	ldr	r3, [r4, #4]
 800d62e:	055d      	lsls	r5, r3, #21
 800d630:	bf5c      	itt	pl
 800d632:	f89d 200a 	ldrbpl.w	r2, [sp, #10]
 800d636:	7622      	strbpl	r2, [r4, #24]
 800d638:	0518      	lsls	r0, r3, #20
 800d63a:	bf5c      	itt	pl
 800d63c:	f89d 300b 	ldrbpl.w	r3, [sp, #11]
 800d640:	7663      	strbpl	r3, [r4, #25]
 800d642:	495d      	ldr	r1, [pc, #372]	; (800d7b8 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x220>)
 800d644:	a803      	add	r0, sp, #12
 800d646:	f005 f969 	bl	801291c <PropertiesBuilder::AddComment(char const*)>
 800d64a:	7e20      	ldrb	r0, [r4, #24]
 800d64c:	f000 fcfe 	bl	800e04c <PixelType::ConvertTxH(unsigned char)>
 800d650:	2502      	movs	r5, #2
 800d652:	6863      	ldr	r3, [r4, #4]
 800d654:	4602      	mov	r2, r0
 800d656:	4959      	ldr	r1, [pc, #356]	; (800d7bc <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x224>)
 800d658:	f3c3 2380 	ubfx	r3, r3, #10, #1
 800d65c:	9500      	str	r5, [sp, #0]
 800d65e:	a803      	add	r0, sp, #12
 800d660:	f7ff fdd0 	bl	800d204 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>
 800d664:	7e60      	ldrb	r0, [r4, #25]
 800d666:	f000 fcf1 	bl	800e04c <PixelType::ConvertTxH(unsigned char)>
 800d66a:	6863      	ldr	r3, [r4, #4]
 800d66c:	4602      	mov	r2, r0
 800d66e:	f3c3 23c0 	ubfx	r3, r3, #11, #1
 800d672:	4953      	ldr	r1, [pc, #332]	; (800d7c0 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x228>)
 800d674:	9500      	str	r5, [sp, #0]
 800d676:	a803      	add	r0, sp, #12
 800d678:	f7ff fdc4 	bl	800d204 <bool PropertiesBuilder::Add<float>(char const*, float, bool, unsigned int) [clone .isra.0]>
 800d67c:	4951      	ldr	r1, [pc, #324]	; (800d7c4 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x22c>)
 800d67e:	a803      	add	r0, sp, #12
 800d680:	f005 f94c 	bl	801291c <PropertiesBuilder::AddComment(char const*)>
 800d684:	6863      	ldr	r3, [r4, #4]
 800d686:	f8b4 2015 	ldrh.w	r2, [r4, #21]
 800d68a:	494f      	ldr	r1, [pc, #316]	; (800d7c8 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x230>)
 800d68c:	f3c3 2300 	ubfx	r3, r3, #8, #1
 800d690:	a803      	add	r0, sp, #12
 800d692:	f7ff fd67 	bl	800d164 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800d696:	494d      	ldr	r1, [pc, #308]	; (800d7cc <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x234>)
 800d698:	a803      	add	r0, sp, #12
 800d69a:	f005 f93f 	bl	801291c <PropertiesBuilder::AddComment(char const*)>
 800d69e:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 800d6a2:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 800d6a6:	42a9      	cmp	r1, r5
 800d6a8:	d224      	bcs.n	800d6f4 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x15c>
 800d6aa:	9803      	ldr	r0, [sp, #12]
 800d6ac:	1a6d      	subs	r5, r5, r1
 800d6ae:	4408      	add	r0, r1
 800d6b0:	6861      	ldr	r1, [r4, #4]
 800d6b2:	f89d 2014 	ldrb.w	r2, [sp, #20]
 800d6b6:	06c9      	lsls	r1, r1, #27
 800d6b8:	f8d4 300e 	ldr.w	r3, [r4, #14]
 800d6bc:	d40b      	bmi.n	800d6d6 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x13e>
 800d6be:	b962      	cbnz	r2, 800d6da <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x142>
 800d6c0:	9300      	str	r3, [sp, #0]
 800d6c2:	4a43      	ldr	r2, [pc, #268]	; (800d7d0 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x238>)
 800d6c4:	4b43      	ldr	r3, [pc, #268]	; (800d7d4 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x23c>)
 800d6c6:	e00b      	b.n	800d6e0 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x148>
 800d6c8:	6823      	ldr	r3, [r4, #0]
 800d6ca:	4601      	mov	r1, r0
 800d6cc:	681a      	ldr	r2, [r3, #0]
 800d6ce:	4618      	mov	r0, r3
 800d6d0:	68d2      	ldr	r2, [r2, #12]
 800d6d2:	4790      	blx	r2
 800d6d4:	e76d      	b.n	800d5b2 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x1a>
 800d6d6:	2a00      	cmp	r2, #0
 800d6d8:	d05f      	beq.n	800d79a <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x202>
 800d6da:	9300      	str	r3, [sp, #0]
 800d6dc:	4a3e      	ldr	r2, [pc, #248]	; (800d7d8 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x240>)
 800d6de:	4b3d      	ldr	r3, [pc, #244]	; (800d7d4 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x23c>)
 800d6e0:	4629      	mov	r1, r5
 800d6e2:	f7fb fc0b 	bl	8008efc <snprintf>
 800d6e6:	4285      	cmp	r5, r0
 800d6e8:	bfa2      	ittt	ge
 800d6ea:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 800d6ee:	18c0      	addge	r0, r0, r3
 800d6f0:	f8ad 0012 	strhge.w	r0, [sp, #18]
 800d6f4:	4939      	ldr	r1, [pc, #228]	; (800d7dc <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x244>)
 800d6f6:	a803      	add	r0, sp, #12
 800d6f8:	f005 f910 	bl	801291c <PropertiesBuilder::AddComment(char const*)>
 800d6fc:	6863      	ldr	r3, [r4, #4]
 800d6fe:	7ca2      	ldrb	r2, [r4, #18]
 800d700:	4937      	ldr	r1, [pc, #220]	; (800d7e0 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x248>)
 800d702:	f3c3 1340 	ubfx	r3, r3, #5, #1
 800d706:	a803      	add	r0, sp, #12
 800d708:	f7ff fd04 	bl	800d114 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800d70c:	2500      	movs	r5, #0
 800d70e:	f44f 5880 	mov.w	r8, #4096	; 0x1000
 800d712:	4e34      	ldr	r6, [pc, #208]	; (800d7e4 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x24c>)
 800d714:	f104 071a 	add.w	r7, r4, #26
 800d718:	6862      	ldr	r2, [r4, #4]
 800d71a:	fa08 f305 	lsl.w	r3, r8, r5
 800d71e:	4393      	bics	r3, r2
 800d720:	bf0c      	ite	eq
 800d722:	2301      	moveq	r3, #1
 800d724:	2300      	movne	r3, #0
 800d726:	4631      	mov	r1, r6
 800d728:	f837 2b02 	ldrh.w	r2, [r7], #2
 800d72c:	a803      	add	r0, sp, #12
 800d72e:	3501      	adds	r5, #1
 800d730:	f7ff fd18 	bl	800d164 <bool PropertiesBuilder::Add<unsigned short>(char const*, unsigned short, bool, unsigned int) [clone .isra.0]>
 800d734:	2d08      	cmp	r5, #8
 800d736:	f106 0612 	add.w	r6, r6, #18
 800d73a:	d1ed      	bne.n	800d718 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x180>
 800d73c:	6863      	ldr	r3, [r4, #4]
 800d73e:	7ce2      	ldrb	r2, [r4, #19]
 800d740:	f3c3 1380 	ubfx	r3, r3, #6, #1
 800d744:	4928      	ldr	r1, [pc, #160]	; (800d7e8 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x250>)
 800d746:	a803      	add	r0, sp, #12
 800d748:	f7ff fce4 	bl	800d114 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800d74c:	4927      	ldr	r1, [pc, #156]	; (800d7ec <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x254>)
 800d74e:	a803      	add	r0, sp, #12
 800d750:	f005 f8e4 	bl	801291c <PropertiesBuilder::AddComment(char const*)>
 800d754:	6863      	ldr	r3, [r4, #4]
 800d756:	f894 202a 	ldrb.w	r2, [r4, #42]	; 0x2a
 800d75a:	f3c3 5300 	ubfx	r3, r3, #20, #1
 800d75e:	4924      	ldr	r1, [pc, #144]	; (800d7f0 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x258>)
 800d760:	a803      	add	r0, sp, #12
 800d762:	f7ff fcd7 	bl	800d114 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 800d766:	f89d 3014 	ldrb.w	r3, [sp, #20]
 800d76a:	b17b      	cbz	r3, 800d78c <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x1f4>
 800d76c:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800d770:	9b03      	ldr	r3, [sp, #12]
 800d772:	4413      	add	r3, r2
 800d774:	227d      	movs	r2, #125	; 0x7d
 800d776:	f803 2c01 	strb.w	r2, [r3, #-1]
 800d77a:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800d77e:	9903      	ldr	r1, [sp, #12]
 800d780:	54ca      	strb	r2, [r1, r3]
 800d782:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800d786:	3301      	adds	r3, #1
 800d788:	f8ad 3012 	strh.w	r3, [sp, #18]
 800d78c:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 800d790:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800d792:	601a      	str	r2, [r3, #0]
 800d794:	b006      	add	sp, #24
 800d796:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d79a:	9300      	str	r3, [sp, #0]
 800d79c:	4a15      	ldr	r2, [pc, #84]	; (800d7f4 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x25c>)
 800d79e:	4b0d      	ldr	r3, [pc, #52]	; (800d7d4 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x23c>)
 800d7a0:	e79e      	b.n	800d6e0 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)+0x148>
 800d7a2:	bf00      	nop
 800d7a4:	080179aa 	stmdaeq	r1, {r1, r3, r5, r7, r8, fp, ip, sp, lr}
 800d7a8:	08017987 	stmdaeq	r1, {r0, r1, r2, r7, r8, fp, ip, sp, lr}
 800d7ac:	08017990 	stmdaeq	r1, {r4, r7, r8, fp, ip, sp, lr}
 800d7b0:	080172b5 	stmdaeq	r1, {r0, r2, r4, r5, r7, r9, ip, sp, lr}
 800d7b4:	08017977 	stmdaeq	r1, {r0, r1, r2, r4, r5, r6, r8, fp, ip, sp, lr}
 800d7b8:	080172c9 	stmdaeq	r1, {r0, r3, r6, r7, r9, ip, sp, lr}
 800d7bc:	0801799a 	stmdaeq	r1, {r1, r3, r4, r7, r8, fp, ip, sp, lr}
 800d7c0:	080179a2 	stmdaeq	r1, {r1, r5, r7, r8, fp, ip, sp, lr}
 800d7c4:	080172df 	stmdaeq	r1, {r0, r1, r2, r3, r4, r6, r7, r9, ip, sp, lr}
 800d7c8:	08017955 	stmdaeq	r1, {r0, r2, r4, r6, r8, fp, ip, sp, lr}
 800d7cc:	080172e8 	stmdaeq	r1, {r3, r5, r6, r7, r9, ip, sp, lr}
 800d7d0:	08015dbd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r7, r8, sl, fp, ip, lr}
 800d7d4:	08017946 	stmdaeq	r1, {r1, r2, r6, r8, fp, ip, sp, lr}
 800d7d8:	08015db4 	stmdaeq	r1, {r2, r4, r5, r7, r8, sl, fp, ip, lr}
 800d7dc:	080172fa 	stmdaeq	r1, {r1, r3, r4, r5, r6, r7, r9, ip, sp, lr}
 800d7e0:	08017965 	stmdaeq	r1, {r0, r2, r5, r6, r8, fp, ip, sp, lr}
 800d7e4:	08017a30 	stmdaeq	r1, {r4, r5, r9, fp, ip, sp, lr}
 800d7e8:	0801793b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r8, fp, ip, sp, lr}
 800d7ec:	08017308 	stmdaeq	r1, {r3, r8, r9, ip, sp, lr}
 800d7f0:	080179e3 	stmdaeq	r1, {r0, r1, r5, r6, r7, r8, fp, ip, sp, lr}
 800d7f4:	08015dbe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r7, r8, sl, fp, ip, lr}

0800d7f8 <WS28xxDmxParams::Save(char*, unsigned int, unsigned int&)>:
 800d7f8:	b513      	push	{r0, r1, r4, lr}
 800d7fa:	6804      	ldr	r4, [r0, #0]
 800d7fc:	b914      	cbnz	r4, 800d804 <WS28xxDmxParams::Save(char*, unsigned int, unsigned int&)+0xc>
 800d7fe:	601c      	str	r4, [r3, #0]
 800d800:	b002      	add	sp, #8
 800d802:	bd10      	pop	{r4, pc}
 800d804:	9300      	str	r3, [sp, #0]
 800d806:	4613      	mov	r3, r2
 800d808:	460a      	mov	r2, r1
 800d80a:	2100      	movs	r1, #0
 800d80c:	f7ff fec4 	bl	800d598 <WS28xxDmxParams::Builder(TWS28xxDmxParams const*, char*, unsigned int, unsigned int&)>
 800d810:	e7f6      	b.n	800d800 <WS28xxDmxParams::Save(char*, unsigned int, unsigned int&)+0x8>

0800d812 <WS28xxDmxParams::Set(PixelDmxConfiguration*)>:
 800d812:	6843      	ldr	r3, [r0, #4]
 800d814:	07da      	lsls	r2, r3, #31
 800d816:	bf44      	itt	mi
 800d818:	7a02      	ldrbmi	r2, [r0, #8]
 800d81a:	600a      	strmi	r2, [r1, #0]
 800d81c:	079a      	lsls	r2, r3, #30
 800d81e:	d505      	bpl.n	800d82c <WS28xxDmxParams::Set(PixelDmxConfiguration*)+0x1a>
 800d820:	f8b0 2009 	ldrh.w	r2, [r0, #9]
 800d824:	2a00      	cmp	r2, #0
 800d826:	bf08      	it	eq
 800d828:	22aa      	moveq	r2, #170	; 0xaa
 800d82a:	604a      	str	r2, [r1, #4]
 800d82c:	059a      	lsls	r2, r3, #22
 800d82e:	bf44      	itt	mi
 800d830:	7dc2      	ldrbmi	r2, [r0, #23]
 800d832:	608a      	strmi	r2, [r1, #8]
 800d834:	055a      	lsls	r2, r3, #21
 800d836:	bf44      	itt	mi
 800d838:	7e02      	ldrbmi	r2, [r0, #24]
 800d83a:	740a      	strbmi	r2, [r1, #16]
 800d83c:	051a      	lsls	r2, r3, #20
 800d83e:	bf44      	itt	mi
 800d840:	7e42      	ldrbmi	r2, [r0, #25]
 800d842:	744a      	strbmi	r2, [r1, #17]
 800d844:	06da      	lsls	r2, r3, #27
 800d846:	bf44      	itt	mi
 800d848:	f8d0 200e 	ldrmi.w	r2, [r0, #14]
 800d84c:	60ca      	strmi	r2, [r1, #12]
 800d84e:	069a      	lsls	r2, r3, #26
 800d850:	bf44      	itt	mi
 800d852:	7c82      	ldrbmi	r2, [r0, #18]
 800d854:	748a      	strbmi	r2, [r1, #18]
 800d856:	075a      	lsls	r2, r3, #29
 800d858:	d50f      	bpl.n	800d87a <WS28xxDmxParams::Set(PixelDmxConfiguration*)+0x68>
 800d85a:	7ac2      	ldrb	r2, [r0, #11]
 800d85c:	b510      	push	{r4, lr}
 800d85e:	7b04      	ldrb	r4, [r0, #12]
 800d860:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
 800d864:	838a      	strh	r2, [r1, #28]
 800d866:	05da      	lsls	r2, r3, #23
 800d868:	bf44      	itt	mi
 800d86a:	f8b0 2015 	ldrhmi.w	r2, [r0, #21]
 800d86e:	618a      	strmi	r2, [r1, #24]
 800d870:	065c      	lsls	r4, r3, #25
 800d872:	bf44      	itt	mi
 800d874:	7cc3      	ldrbmi	r3, [r0, #19]
 800d876:	614b      	strmi	r3, [r1, #20]
 800d878:	bd10      	pop	{r4, pc}
 800d87a:	05da      	lsls	r2, r3, #23
 800d87c:	bf44      	itt	mi
 800d87e:	f8b0 2015 	ldrhmi.w	r2, [r0, #21]
 800d882:	618a      	strmi	r2, [r1, #24]
 800d884:	065b      	lsls	r3, r3, #25
 800d886:	bf44      	itt	mi
 800d888:	7cc3      	ldrbmi	r3, [r0, #19]
 800d88a:	614b      	strmi	r3, [r1, #20]
 800d88c:	4770      	bx	lr

0800d88e <WS28xxDmxParams::Dump()>:
 800d88e:	4770      	bx	lr

0800d890 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&, unsigned int&, unsigned int&)>:
 800d890:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d894:	460e      	mov	r6, r1
 800d896:	4611      	mov	r1, r2
 800d898:	4604      	mov	r4, r0
 800d89a:	4690      	mov	r8, r2
 800d89c:	461d      	mov	r5, r3
 800d89e:	9f06      	ldr	r7, [sp, #24]
 800d8a0:	f000 f86c 	bl	800d97c <PixelConfiguration::Validate(unsigned int&)>
 800d8a4:	2e01      	cmp	r6, #1
 800d8a6:	d009      	beq.n	800d8bc <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&, unsigned int&, unsigned int&)+0x2c>
 800d8a8:	7ce2      	ldrb	r2, [r4, #19]
 800d8aa:	b93a      	cbnz	r2, 800d8bc <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&, unsigned int&, unsigned int&)+0x2c>
 800d8ac:	2e04      	cmp	r6, #4
 800d8ae:	d13f      	bne.n	800d930 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&, unsigned int&, unsigned int&)+0xa0>
 800d8b0:	2303      	movs	r3, #3
 800d8b2:	6023      	str	r3, [r4, #0]
 800d8b4:	4641      	mov	r1, r8
 800d8b6:	4620      	mov	r0, r4
 800d8b8:	f000 f860 	bl	800d97c <PixelConfiguration::Validate(unsigned int&)>
 800d8bc:	6823      	ldr	r3, [r4, #0]
 800d8be:	2b07      	cmp	r3, #7
 800d8c0:	bf0d      	iteet	eq
 800d8c2:	f44f 7380 	moveq.w	r3, #256	; 0x100
 800d8c6:	f44f 73aa 	movne.w	r3, #340	; 0x154
 800d8ca:	22aa      	movne	r2, #170	; 0xaa
 800d8cc:	2180      	moveq	r1, #128	; 0x80
 800d8ce:	bf15      	itete	ne
 800d8d0:	e9c5 2300 	strdne	r2, r3, [r5]
 800d8d4:	e9c5 1300 	strdeq	r1, r3, [r5]
 800d8d8:	f44f 73ff 	movne.w	r3, #510	; 0x1fe
 800d8dc:	f44f 73c0 	moveq.w	r3, #384	; 0x180
 800d8e0:	69a2      	ldr	r2, [r4, #24]
 800d8e2:	60ab      	str	r3, [r5, #8]
 800d8e4:	6863      	ldr	r3, [r4, #4]
 800d8e6:	b10a      	cbz	r2, 800d8ec <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&, unsigned int&, unsigned int&)+0x5c>
 800d8e8:	429a      	cmp	r2, r3
 800d8ea:	d900      	bls.n	800d8ee <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&, unsigned int&, unsigned int&)+0x5e>
 800d8ec:	61a3      	str	r3, [r4, #24]
 800d8ee:	69a2      	ldr	r2, [r4, #24]
 800d8f0:	fbb3 f3f2 	udiv	r3, r3, r2
 800d8f4:	603b      	str	r3, [r7, #0]
 800d8f6:	6963      	ldr	r3, [r4, #20]
 800d8f8:	682a      	ldr	r2, [r5, #0]
 800d8fa:	42b3      	cmp	r3, r6
 800d8fc:	bf94      	ite	ls
 800d8fe:	6163      	strls	r3, [r4, #20]
 800d900:	6166      	strhi	r6, [r4, #20]
 800d902:	1c53      	adds	r3, r2, #1
 800d904:	683a      	ldr	r2, [r7, #0]
 800d906:	2e01      	cmp	r6, #1
 800d908:	fbb2 f2f3 	udiv	r2, r2, r3
 800d90c:	9b07      	ldr	r3, [sp, #28]
 800d90e:	f102 0201 	add.w	r2, r2, #1
 800d912:	601a      	str	r2, [r3, #0]
 800d914:	bf09      	itett	eq
 800d916:	682a      	ldreq	r2, [r5, #0]
 800d918:	6963      	ldrne	r3, [r4, #20]
 800d91a:	1c53      	addeq	r3, r2, #1
 800d91c:	683a      	ldreq	r2, [r7, #0]
 800d91e:	bf16      	itet	ne
 800d920:	435a      	mulne	r2, r3
 800d922:	fbb2 f2f3 	udiveq	r2, r2, r3
 800d926:	f102 32ff 	addne.w	r2, r2, #4294967295	; 0xffffffff
 800d92a:	60ea      	str	r2, [r5, #12]
 800d92c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d930:	6823      	ldr	r3, [r4, #0]
 800d932:	2b00      	cmp	r3, #0
 800d934:	d0be      	beq.n	800d8b4 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&, unsigned int&, unsigned int&)+0x24>
 800d936:	3b0b      	subs	r3, #11
 800d938:	2b01      	cmp	r3, #1
 800d93a:	bf88      	it	hi
 800d93c:	6022      	strhi	r2, [r4, #0]
 800d93e:	e7b9      	b.n	800d8b4 <PixelDmxConfiguration::Validate(unsigned int, unsigned int&, pixeldmxconfiguration::PortInfo&, unsigned int&, unsigned int&)+0x24>

0800d940 <PixelDmxConfiguration::Dump()>:
 800d940:	4770      	bx	lr

0800d942 <PixelConfiguration::GetRgbMapping(pixel::Type)>:
 800d942:	f020 0308 	bic.w	r3, r0, #8
 800d946:	2b01      	cmp	r3, #1
 800d948:	d006      	beq.n	800d958 <PixelConfiguration::GetRgbMapping(pixel::Type)+0x16>
 800d94a:	2808      	cmp	r0, #8
 800d94c:	d006      	beq.n	800d95c <PixelConfiguration::GetRgbMapping(pixel::Type)+0x1a>
 800d94e:	280a      	cmp	r0, #10
 800d950:	bf14      	ite	ne
 800d952:	2002      	movne	r0, #2
 800d954:	2005      	moveq	r0, #5
 800d956:	4770      	bx	lr
 800d958:	2000      	movs	r0, #0
 800d95a:	4770      	bx	lr
 800d95c:	2004      	movs	r0, #4
 800d95e:	4770      	bx	lr

0800d960 <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)>:
 800d960:	23c0      	movs	r3, #192	; 0xc0
 800d962:	2803      	cmp	r0, #3
 800d964:	700b      	strb	r3, [r1, #0]
 800d966:	d006      	beq.n	800d976 <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)+0x16>
 800d968:	3808      	subs	r0, #8
 800d96a:	2803      	cmp	r0, #3
 800d96c:	bf34      	ite	cc
 800d96e:	23fc      	movcc	r3, #252	; 0xfc
 800d970:	23f0      	movcs	r3, #240	; 0xf0
 800d972:	7013      	strb	r3, [r2, #0]
 800d974:	4770      	bx	lr
 800d976:	23f8      	movs	r3, #248	; 0xf8
 800d978:	e7fb      	b.n	800d972 <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)+0x12>
	...

0800d97c <PixelConfiguration::Validate(unsigned int&)>:
 800d97c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d97e:	e9d0 5300 	ldrd	r5, r3, [r0]
 800d982:	2d07      	cmp	r5, #7
 800d984:	4604      	mov	r4, r0
 800d986:	6882      	ldr	r2, [r0, #8]
 800d988:	d129      	bne.n	800d9de <PixelConfiguration::Validate(unsigned int&)+0x62>
 800d98a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800d98e:	bf28      	it	cs
 800d990:	f44f 7300 	movcs.w	r3, #512	; 0x200
 800d994:	6043      	str	r3, [r0, #4]
 800d996:	2304      	movs	r3, #4
 800d998:	600b      	str	r3, [r1, #0]
 800d99a:	2301      	movs	r3, #1
 800d99c:	2a06      	cmp	r2, #6
 800d99e:	74e3      	strb	r3, [r4, #19]
 800d9a0:	d103      	bne.n	800d9aa <PixelConfiguration::Validate(unsigned int&)+0x2e>
 800d9a2:	4628      	mov	r0, r5
 800d9a4:	f7ff ffcd 	bl	800d942 <PixelConfiguration::GetRgbMapping(pixel::Type)>
 800d9a8:	60a0      	str	r0, [r4, #8]
 800d9aa:	7c63      	ldrb	r3, [r4, #17]
 800d9ac:	7c22      	ldrb	r2, [r4, #16]
 800d9ae:	4628      	mov	r0, r5
 800d9b0:	429a      	cmp	r2, r3
 800d9b2:	bf28      	it	cs
 800d9b4:	2300      	movcs	r3, #0
 800d9b6:	f10d 0207 	add.w	r2, sp, #7
 800d9ba:	bf28      	it	cs
 800d9bc:	8223      	strhcs	r3, [r4, #16]
 800d9be:	f10d 0106 	add.w	r1, sp, #6
 800d9c2:	f7ff ffcd 	bl	800d960 <PixelConfiguration::GetTxH(pixel::Type, unsigned char&, unsigned char&)>
 800d9c6:	7c23      	ldrb	r3, [r4, #16]
 800d9c8:	b913      	cbnz	r3, 800d9d0 <PixelConfiguration::Validate(unsigned int&)+0x54>
 800d9ca:	f89d 3006 	ldrb.w	r3, [sp, #6]
 800d9ce:	7423      	strb	r3, [r4, #16]
 800d9d0:	7c63      	ldrb	r3, [r4, #17]
 800d9d2:	b913      	cbnz	r3, 800d9da <PixelConfiguration::Validate(unsigned int&)+0x5e>
 800d9d4:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800d9d8:	7463      	strb	r3, [r4, #17]
 800d9da:	4b1a      	ldr	r3, [pc, #104]	; (800da44 <PixelConfiguration::Validate(unsigned int&)+0xc8>)
 800d9dc:	e020      	b.n	800da20 <PixelConfiguration::Validate(unsigned int&)+0xa4>
 800d9de:	f5b3 7f2a 	cmp.w	r3, #680	; 0x2a8
 800d9e2:	bf28      	it	cs
 800d9e4:	f44f 732a 	movcs.w	r3, #680	; 0x2a8
 800d9e8:	6043      	str	r3, [r0, #4]
 800d9ea:	2303      	movs	r3, #3
 800d9ec:	600b      	str	r3, [r1, #0]
 800d9ee:	f1a5 030b 	sub.w	r3, r5, #11
 800d9f2:	2b01      	cmp	r3, #1
 800d9f4:	d806      	bhi.n	800da04 <PixelConfiguration::Validate(unsigned int&)+0x88>
 800d9f6:	7c83      	ldrb	r3, [r0, #18]
 800d9f8:	2b1f      	cmp	r3, #31
 800d9fa:	d81d      	bhi.n	800da38 <PixelConfiguration::Validate(unsigned int&)+0xbc>
 800d9fc:	f043 03e0 	orr.w	r3, r3, #224	; 0xe0
 800da00:	74a3      	strb	r3, [r4, #18]
 800da02:	e000      	b.n	800da06 <PixelConfiguration::Validate(unsigned int&)+0x8a>
 800da04:	b9d5      	cbnz	r5, 800da3c <PixelConfiguration::Validate(unsigned int&)+0xc0>
 800da06:	2300      	movs	r3, #0
 800da08:	f44f 417f 	mov.w	r1, #65280	; 0xff00
 800da0c:	2a06      	cmp	r2, #6
 800da0e:	bf08      	it	eq
 800da10:	60a3      	streq	r3, [r4, #8]
 800da12:	2d0d      	cmp	r5, #13
 800da14:	74e3      	strb	r3, [r4, #19]
 800da16:	8221      	strh	r1, [r4, #16]
 800da18:	68e3      	ldr	r3, [r4, #12]
 800da1a:	d109      	bne.n	800da30 <PixelConfiguration::Validate(unsigned int&)+0xb4>
 800da1c:	b913      	cbnz	r3, 800da24 <PixelConfiguration::Validate(unsigned int&)+0xa8>
 800da1e:	4b0a      	ldr	r3, [pc, #40]	; (800da48 <PixelConfiguration::Validate(unsigned int&)+0xcc>)
 800da20:	60e3      	str	r3, [r4, #12]
 800da22:	e003      	b.n	800da2c <PixelConfiguration::Validate(unsigned int&)+0xb0>
 800da24:	4a09      	ldr	r2, [pc, #36]	; (800da4c <PixelConfiguration::Validate(unsigned int&)+0xd0>)
 800da26:	4293      	cmp	r3, r2
 800da28:	d900      	bls.n	800da2c <PixelConfiguration::Validate(unsigned int&)+0xb0>
 800da2a:	60e2      	str	r2, [r4, #12]
 800da2c:	b003      	add	sp, #12
 800da2e:	bd30      	pop	{r4, r5, pc}
 800da30:	2b00      	cmp	r3, #0
 800da32:	d0f4      	beq.n	800da1e <PixelConfiguration::Validate(unsigned int&)+0xa2>
 800da34:	4a06      	ldr	r2, [pc, #24]	; (800da50 <PixelConfiguration::Validate(unsigned int&)+0xd4>)
 800da36:	e7f6      	b.n	800da26 <PixelConfiguration::Validate(unsigned int&)+0xaa>
 800da38:	23ff      	movs	r3, #255	; 0xff
 800da3a:	e7e1      	b.n	800da00 <PixelConfiguration::Validate(unsigned int&)+0x84>
 800da3c:	2d0d      	cmp	r5, #13
 800da3e:	d0e2      	beq.n	800da06 <PixelConfiguration::Validate(unsigned int&)+0x8a>
 800da40:	e7ab      	b.n	800d99a <PixelConfiguration::Validate(unsigned int&)+0x1e>
 800da42:	bf00      	nop
 800da44:	0061a800 	rsbeq	sl, r1, r0, lsl #16
 800da48:	003d0900 	eorseq	r0, sp, r0, lsl #18
 800da4c:	00e4e1c0 	rsceq	lr, r4, r0, asr #3
 800da50:	017d7840 	cmneq	sp, r0, asr #16

0800da54 <PixelConfiguration::Dump()>:
 800da54:	4770      	bx	lr
	...

0800da58 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>:
 800da58:	b507      	push	{r0, r1, r2, lr}
 800da5a:	b2d3      	uxtb	r3, r2
 800da5c:	9301      	str	r3, [sp, #4]
 800da5e:	f3c2 2307 	ubfx	r3, r2, #8, #8
 800da62:	9300      	str	r3, [sp, #0]
 800da64:	f3c2 4307 	ubfx	r3, r2, #16, #8
 800da68:	460a      	mov	r2, r1
 800da6a:	4601      	mov	r1, r0
 800da6c:	4803      	ldr	r0, [pc, #12]	; (800da7c <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]+0x24>)
 800da6e:	6800      	ldr	r0, [r0, #0]
 800da70:	f000 fdd2 	bl	800e618 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 800da74:	b003      	add	sp, #12
 800da76:	f85d fb04 	ldr.w	pc, [sp], #4
 800da7a:	bf00      	nop
 800da7c:	20003584 	andcs	r3, r0, r4, lsl #11

0800da80 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>:
 800da80:	b570      	push	{r4, r5, r6, lr}
 800da82:	4605      	mov	r5, r0
 800da84:	2400      	movs	r4, #0
 800da86:	4e06      	ldr	r6, [pc, #24]	; (800daa0 <PixelPatterns::Clear(unsigned int) [clone .isra.0]+0x20>)
 800da88:	6833      	ldr	r3, [r6, #0]
 800da8a:	42a3      	cmp	r3, r4
 800da8c:	d906      	bls.n	800da9c <PixelPatterns::Clear(unsigned int) [clone .isra.0]+0x1c>
 800da8e:	4621      	mov	r1, r4
 800da90:	2200      	movs	r2, #0
 800da92:	4628      	mov	r0, r5
 800da94:	f7ff ffe0 	bl	800da58 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800da98:	3401      	adds	r4, #1
 800da9a:	e7f5      	b.n	800da88 <PixelPatterns::Clear(unsigned int) [clone .isra.0]+0x8>
 800da9c:	bd70      	pop	{r4, r5, r6, pc}
 800da9e:	bf00      	nop
 800daa0:	20003580 	andcs	r3, r0, r0, lsl #11

0800daa4 <PixelPatterns::PixelPatterns(unsigned int)>:
 800daa4:	2908      	cmp	r1, #8
 800daa6:	bf28      	it	cs
 800daa8:	2108      	movcs	r1, #8
 800daaa:	4b0b      	ldr	r3, [pc, #44]	; (800dad8 <PixelPatterns::PixelPatterns(unsigned int)+0x34>)
 800daac:	4a0b      	ldr	r2, [pc, #44]	; (800dadc <PixelPatterns::PixelPatterns(unsigned int)+0x38>)
 800daae:	681b      	ldr	r3, [r3, #0]
 800dab0:	b510      	push	{r4, lr}
 800dab2:	6013      	str	r3, [r2, #0]
 800dab4:	4a0a      	ldr	r2, [pc, #40]	; (800dae0 <PixelPatterns::PixelPatterns(unsigned int)+0x3c>)
 800dab6:	6011      	str	r1, [r2, #0]
 800dab8:	685a      	ldr	r2, [r3, #4]
 800daba:	4b0a      	ldr	r3, [pc, #40]	; (800dae4 <PixelPatterns::PixelPatterns(unsigned int)+0x40>)
 800dabc:	2100      	movs	r1, #0
 800dabe:	601a      	str	r2, [r3, #0]
 800dac0:	2208      	movs	r2, #8
 800dac2:	4b09      	ldr	r3, [pc, #36]	; (800dae8 <PixelPatterns::PixelPatterns(unsigned int)+0x44>)
 800dac4:	681c      	ldr	r4, [r3, #0]
 800dac6:	4b09      	ldr	r3, [pc, #36]	; (800daec <PixelPatterns::PixelPatterns(unsigned int)+0x48>)
 800dac8:	3a01      	subs	r2, #1
 800daca:	61d9      	str	r1, [r3, #28]
 800dacc:	601c      	str	r4, [r3, #0]
 800dace:	6199      	str	r1, [r3, #24]
 800dad0:	f103 0320 	add.w	r3, r3, #32
 800dad4:	d1f8      	bne.n	800dac8 <PixelPatterns::PixelPatterns(unsigned int)+0x24>
 800dad6:	bd10      	pop	{r4, pc}
 800dad8:	2000ad90 	mulcs	r0, r0, sp
 800dadc:	20003584 	andcs	r3, r0, r4, lsl #11
 800dae0:	20003578 	andcs	r3, r0, r8, ror r5
 800dae4:	20003580 	andcs	r3, r0, r0, lsl #11
 800dae8:	20013df4 	strdcs	r3, [r1], -r4
 800daec:	20003478 	andcs	r3, r0, r8, ror r4

0800daf0 <PixelPatterns::RainbowCycle(unsigned int, unsigned int, pixelpatterns::Direction)>:
 800daf0:	b5e0      	push	{r5, r6, r7, lr}
 800daf2:	4608      	mov	r0, r1
 800daf4:	460d      	mov	r5, r1
 800daf6:	4617      	mov	r7, r2
 800daf8:	461e      	mov	r6, r3
 800dafa:	f7ff ffc1 	bl	800da80 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800dafe:	2301      	movs	r3, #1
 800db00:	4905      	ldr	r1, [pc, #20]	; (800db18 <PixelPatterns::RainbowCycle(unsigned int, unsigned int, pixelpatterns::Direction)+0x28>)
 800db02:	22ff      	movs	r2, #255	; 0xff
 800db04:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 800db08:	61cb      	str	r3, [r1, #28]
 800db0a:	2300      	movs	r3, #0
 800db0c:	604f      	str	r7, [r1, #4]
 800db0e:	e9c1 2304 	strd	r2, r3, [r1, #16]
 800db12:	618e      	str	r6, [r1, #24]
 800db14:	bde0      	pop	{r5, r6, r7, pc}
 800db16:	bf00      	nop
 800db18:	20003478 	andcs	r3, r0, r8, ror r4

0800db1c <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>:
 800db1c:	b5e0      	push	{r5, r6, r7, lr}
 800db1e:	4608      	mov	r0, r1
 800db20:	460d      	mov	r5, r1
 800db22:	461e      	mov	r6, r3
 800db24:	4617      	mov	r7, r2
 800db26:	f7ff ffab 	bl	800da80 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800db2a:	2302      	movs	r3, #2
 800db2c:	4907      	ldr	r1, [pc, #28]	; (800db4c <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x30>)
 800db2e:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 800db32:	61cb      	str	r3, [r1, #28]
 800db34:	9b04      	ldr	r3, [sp, #16]
 800db36:	e9c1 7602 	strd	r7, r6, [r1, #8]
 800db3a:	604b      	str	r3, [r1, #4]
 800db3c:	4b04      	ldr	r3, [pc, #16]	; (800db50 <PixelPatterns::TheaterChase(unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x34>)
 800db3e:	681b      	ldr	r3, [r3, #0]
 800db40:	610b      	str	r3, [r1, #16]
 800db42:	2300      	movs	r3, #0
 800db44:	614b      	str	r3, [r1, #20]
 800db46:	9b05      	ldr	r3, [sp, #20]
 800db48:	618b      	str	r3, [r1, #24]
 800db4a:	bde0      	pop	{r5, r6, r7, pc}
 800db4c:	20003478 	andcs	r3, r0, r8, ror r4
 800db50:	20003580 	andcs	r3, r0, r0, lsl #11

0800db54 <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>:
 800db54:	b5e0      	push	{r5, r6, r7, lr}
 800db56:	4608      	mov	r0, r1
 800db58:	460d      	mov	r5, r1
 800db5a:	461f      	mov	r7, r3
 800db5c:	4616      	mov	r6, r2
 800db5e:	f7ff ff8f 	bl	800da80 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800db62:	2303      	movs	r3, #3
 800db64:	4906      	ldr	r1, [pc, #24]	; (800db80 <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x2c>)
 800db66:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 800db6a:	61cb      	str	r3, [r1, #28]
 800db6c:	4b05      	ldr	r3, [pc, #20]	; (800db84 <PixelPatterns::ColourWipe(unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x30>)
 800db6e:	604f      	str	r7, [r1, #4]
 800db70:	681b      	ldr	r3, [r3, #0]
 800db72:	608e      	str	r6, [r1, #8]
 800db74:	610b      	str	r3, [r1, #16]
 800db76:	2300      	movs	r3, #0
 800db78:	614b      	str	r3, [r1, #20]
 800db7a:	9b04      	ldr	r3, [sp, #16]
 800db7c:	618b      	str	r3, [r1, #24]
 800db7e:	bde0      	pop	{r5, r6, r7, pc}
 800db80:	20003478 	andcs	r3, r0, r8, ror r4
 800db84:	20003580 	andcs	r3, r0, r0, lsl #11

0800db88 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)>:
 800db88:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800db8a:	4608      	mov	r0, r1
 800db8c:	460d      	mov	r5, r1
 800db8e:	461f      	mov	r7, r3
 800db90:	4616      	mov	r6, r2
 800db92:	f7ff ff75 	bl	800da80 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800db96:	2304      	movs	r3, #4
 800db98:	4c12      	ldr	r4, [pc, #72]	; (800dbe4 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x5c>)
 800db9a:	4913      	ldr	r1, [pc, #76]	; (800dbe8 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x60>)
 800db9c:	6820      	ldr	r0, [r4, #0]
 800db9e:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 800dba2:	61cb      	str	r3, [r1, #28]
 800dba4:	1e43      	subs	r3, r0, #1
 800dba6:	005b      	lsls	r3, r3, #1
 800dba8:	b29b      	uxth	r3, r3
 800dbaa:	610b      	str	r3, [r1, #16]
 800dbac:	2300      	movs	r3, #0
 800dbae:	4d0f      	ldr	r5, [pc, #60]	; (800dbec <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x64>)
 800dbb0:	614b      	str	r3, [r1, #20]
 800dbb2:	682b      	ldr	r3, [r5, #0]
 800dbb4:	604f      	str	r7, [r1, #4]
 800dbb6:	608e      	str	r6, [r1, #8]
 800dbb8:	b993      	cbnz	r3, 800dbe0 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x58>
 800dbba:	f06f 4360 	mvn.w	r3, #3758096384	; 0xe0000000
 800dbbe:	4298      	cmp	r0, r3
 800dbc0:	bf2c      	ite	cs
 800dbc2:	f04f 30ff 	movcs.w	r0, #4294967295	; 0xffffffff
 800dbc6:	0080      	lslcc	r0, r0, #2
 800dbc8:	f005 fd28 	bl	801361c <operator new[](unsigned int)>
 800dbcc:	2200      	movs	r2, #0
 800dbce:	6823      	ldr	r3, [r4, #0]
 800dbd0:	6028      	str	r0, [r5, #0]
 800dbd2:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 800dbd6:	4298      	cmp	r0, r3
 800dbd8:	d002      	beq.n	800dbe0 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x58>
 800dbda:	f840 2b04 	str.w	r2, [r0], #4
 800dbde:	e7fa      	b.n	800dbd6 <PixelPatterns::Scanner(unsigned int, unsigned int, unsigned int)+0x4e>
 800dbe0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800dbe2:	bf00      	nop
 800dbe4:	20003580 	andcs	r3, r0, r0, lsl #11
 800dbe8:	20003478 	andcs	r3, r0, r8, ror r4
 800dbec:	2000357c 	andcs	r3, r0, ip, ror r5

0800dbf0 <PixelPatterns::Fade(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)>:
 800dbf0:	b5e0      	push	{r5, r6, r7, lr}
 800dbf2:	4608      	mov	r0, r1
 800dbf4:	460d      	mov	r5, r1
 800dbf6:	461e      	mov	r6, r3
 800dbf8:	4617      	mov	r7, r2
 800dbfa:	f7ff ff41 	bl	800da80 <PixelPatterns::Clear(unsigned int) [clone .isra.0]>
 800dbfe:	2305      	movs	r3, #5
 800dc00:	4907      	ldr	r1, [pc, #28]	; (800dc20 <PixelPatterns::Fade(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, pixelpatterns::Direction)+0x30>)
 800dc02:	eb01 1145 	add.w	r1, r1, r5, lsl #5
 800dc06:	61cb      	str	r3, [r1, #28]
 800dc08:	9b05      	ldr	r3, [sp, #20]
 800dc0a:	e9c1 7602 	strd	r7, r6, [r1, #8]
 800dc0e:	604b      	str	r3, [r1, #4]
 800dc10:	9b04      	ldr	r3, [sp, #16]
 800dc12:	610b      	str	r3, [r1, #16]
 800dc14:	2300      	movs	r3, #0
 800dc16:	614b      	str	r3, [r1, #20]
 800dc18:	9b06      	ldr	r3, [sp, #24]
 800dc1a:	618b      	str	r3, [r1, #24]
 800dc1c:	bde0      	pop	{r5, r6, r7, pc}
 800dc1e:	bf00      	nop
 800dc20:	20003478 	andcs	r3, r0, r8, ror r4

0800dc24 <PixelPatterns::Wheel(unsigned char)>:
 800dc24:	43c9      	mvns	r1, r1
 800dc26:	b2c9      	uxtb	r1, r1
 800dc28:	2954      	cmp	r1, #84	; 0x54
 800dc2a:	d809      	bhi.n	800dc40 <PixelPatterns::Wheel(unsigned char)+0x1c>
 800dc2c:	eba1 0081 	sub.w	r0, r1, r1, lsl #2
 800dc30:	3801      	subs	r0, #1
 800dc32:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 800dc36:	b2c3      	uxtb	r3, r0
 800dc38:	b2c8      	uxtb	r0, r1
 800dc3a:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 800dc3e:	4770      	bx	lr
 800dc40:	29a9      	cmp	r1, #169	; 0xa9
 800dc42:	d80b      	bhi.n	800dc5c <PixelPatterns::Wheel(unsigned char)+0x38>
 800dc44:	3955      	subs	r1, #85	; 0x55
 800dc46:	b2c9      	uxtb	r1, r1
 800dc48:	eb01 0041 	add.w	r0, r1, r1, lsl #1
 800dc4c:	eba1 0181 	sub.w	r1, r1, r1, lsl #2
 800dc50:	b2c3      	uxtb	r3, r0
 800dc52:	1e48      	subs	r0, r1, #1
 800dc54:	b2c0      	uxtb	r0, r0
 800dc56:	ea40 2003 	orr.w	r0, r0, r3, lsl #8
 800dc5a:	4770      	bx	lr
 800dc5c:	3156      	adds	r1, #86	; 0x56
 800dc5e:	b2c9      	uxtb	r1, r1
 800dc60:	eba1 0081 	sub.w	r0, r1, r1, lsl #2
 800dc64:	3801      	subs	r0, #1
 800dc66:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 800dc6a:	b2c3      	uxtb	r3, r0
 800dc6c:	b2c8      	uxtb	r0, r1
 800dc6e:	0400      	lsls	r0, r0, #16
 800dc70:	e7f1      	b.n	800dc56 <PixelPatterns::Wheel(unsigned char)+0x32>
	...

0800dc74 <PixelPatterns::Increment(unsigned int)>:
 800dc74:	4a0d      	ldr	r2, [pc, #52]	; (800dcac <PixelPatterns::Increment(unsigned int)+0x38>)
 800dc76:	b510      	push	{r4, lr}
 800dc78:	014c      	lsls	r4, r1, #5
 800dc7a:	eb02 1141 	add.w	r1, r2, r1, lsl #5
 800dc7e:	e9d1 3005 	ldrd	r3, r0, [r1, #20]
 800dc82:	b930      	cbnz	r0, 800dc92 <PixelPatterns::Increment(unsigned int)+0x1e>
 800dc84:	690a      	ldr	r2, [r1, #16]
 800dc86:	3301      	adds	r3, #1
 800dc88:	4293      	cmp	r3, r2
 800dc8a:	bf18      	it	ne
 800dc8c:	4618      	movne	r0, r3
 800dc8e:	6148      	str	r0, [r1, #20]
 800dc90:	bd10      	pop	{r4, pc}
 800dc92:	b92b      	cbnz	r3, 800dca0 <PixelPatterns::Increment(unsigned int)+0x2c>
 800dc94:	4422      	add	r2, r4
 800dc96:	6913      	ldr	r3, [r2, #16]
 800dc98:	3b01      	subs	r3, #1
 800dc9a:	b29b      	uxth	r3, r3
 800dc9c:	6153      	str	r3, [r2, #20]
 800dc9e:	e7f7      	b.n	800dc90 <PixelPatterns::Increment(unsigned int)+0x1c>
 800dca0:	3b01      	subs	r3, #1
 800dca2:	614b      	str	r3, [r1, #20]
 800dca4:	2b00      	cmp	r3, #0
 800dca6:	d1f3      	bne.n	800dc90 <PixelPatterns::Increment(unsigned int)+0x1c>
 800dca8:	e7f4      	b.n	800dc94 <PixelPatterns::Increment(unsigned int)+0x20>
 800dcaa:	bf00      	nop
 800dcac:	20003478 	andcs	r3, r0, r8, ror r4

0800dcb0 <PixelPatterns::RainbowCycleUpdate(unsigned int)>:
 800dcb0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800dcb4:	4605      	mov	r5, r0
 800dcb6:	460c      	mov	r4, r1
 800dcb8:	2700      	movs	r7, #0
 800dcba:	4b11      	ldr	r3, [pc, #68]	; (800dd00 <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x50>)
 800dcbc:	f8df 9044 	ldr.w	r9, [pc, #68]	; 800dd04 <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x54>
 800dcc0:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800dcc4:	f8d3 8014 	ldr.w	r8, [r3, #20]
 800dcc8:	f8d9 3000 	ldr.w	r3, [r9]
 800dccc:	b2be      	uxth	r6, r7
 800dcce:	42b3      	cmp	r3, r6
 800dcd0:	f107 0701 	add.w	r7, r7, #1
 800dcd4:	d90d      	bls.n	800dcf2 <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x42>
 800dcd6:	0231      	lsls	r1, r6, #8
 800dcd8:	fbb1 f1f3 	udiv	r1, r1, r3
 800dcdc:	4441      	add	r1, r8
 800dcde:	4628      	mov	r0, r5
 800dce0:	b2c9      	uxtb	r1, r1
 800dce2:	f7ff ff9f 	bl	800dc24 <PixelPatterns::Wheel(unsigned char)>
 800dce6:	4631      	mov	r1, r6
 800dce8:	4602      	mov	r2, r0
 800dcea:	4620      	mov	r0, r4
 800dcec:	f7ff feb4 	bl	800da58 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800dcf0:	e7ea      	b.n	800dcc8 <PixelPatterns::RainbowCycleUpdate(unsigned int)+0x18>
 800dcf2:	4621      	mov	r1, r4
 800dcf4:	4628      	mov	r0, r5
 800dcf6:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800dcfa:	f7ff bfbb 	b.w	800dc74 <PixelPatterns::Increment(unsigned int)>
 800dcfe:	bf00      	nop
 800dd00:	20003478 	andcs	r3, r0, r8, ror r4
 800dd04:	20003580 	andcs	r3, r0, r0, lsl #11

0800dd08 <PixelPatterns::TheaterChaseUpdate(unsigned int)>:
 800dd08:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dd0c:	4605      	mov	r5, r0
 800dd0e:	460c      	mov	r4, r1
 800dd10:	f04f 0b00 	mov.w	fp, #0
 800dd14:	4b12      	ldr	r3, [pc, #72]	; (800dd60 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x58>)
 800dd16:	f8df 904c 	ldr.w	r9, [pc, #76]	; 800dd64 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x5c>
 800dd1a:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800dd1e:	f8d3 8014 	ldr.w	r8, [r3, #20]
 800dd22:	f8df a044 	ldr.w	sl, [pc, #68]	; 800dd68 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x60>
 800dd26:	e9d3 6702 	ldrd	r6, r7, [r3, #8]
 800dd2a:	f8d9 3000 	ldr.w	r3, [r9]
 800dd2e:	fa1f f18b 	uxth.w	r1, fp
 800dd32:	428b      	cmp	r3, r1
 800dd34:	d90e      	bls.n	800dd54 <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x4c>
 800dd36:	eb08 0301 	add.w	r3, r8, r1
 800dd3a:	fb0a f303 	mul.w	r3, sl, r3
 800dd3e:	f1b3 3f55 	cmp.w	r3, #1431655765	; 0x55555555
 800dd42:	bf94      	ite	ls
 800dd44:	4632      	movls	r2, r6
 800dd46:	463a      	movhi	r2, r7
 800dd48:	4620      	mov	r0, r4
 800dd4a:	f7ff fe85 	bl	800da58 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800dd4e:	f10b 0b01 	add.w	fp, fp, #1
 800dd52:	e7ea      	b.n	800dd2a <PixelPatterns::TheaterChaseUpdate(unsigned int)+0x22>
 800dd54:	4621      	mov	r1, r4
 800dd56:	4628      	mov	r0, r5
 800dd58:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dd5c:	f7ff bf8a 	b.w	800dc74 <PixelPatterns::Increment(unsigned int)>
 800dd60:	20003478 	andcs	r3, r0, r8, ror r4
 800dd64:	20003580 	andcs	r3, r0, r0, lsl #11
 800dd68:	aaaaaaab 	bge	6ab881c <__stack_size+0x6ab681c>

0800dd6c <PixelPatterns::ColourWipeUpdate(unsigned int)>:
 800dd6c:	b538      	push	{r3, r4, r5, lr}
 800dd6e:	460c      	mov	r4, r1
 800dd70:	4605      	mov	r5, r0
 800dd72:	4b07      	ldr	r3, [pc, #28]	; (800dd90 <PixelPatterns::ColourWipeUpdate(unsigned int)+0x24>)
 800dd74:	4620      	mov	r0, r4
 800dd76:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800dd7a:	6959      	ldr	r1, [r3, #20]
 800dd7c:	689a      	ldr	r2, [r3, #8]
 800dd7e:	f7ff fe6b 	bl	800da58 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800dd82:	4621      	mov	r1, r4
 800dd84:	4628      	mov	r0, r5
 800dd86:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800dd8a:	f7ff bf73 	b.w	800dc74 <PixelPatterns::Increment(unsigned int)>
 800dd8e:	bf00      	nop
 800dd90:	20003478 	andcs	r3, r0, r8, ror r4

0800dd94 <PixelPatterns::ScannerUpdate(unsigned int)>:
 800dd94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dd98:	468a      	mov	sl, r1
 800dd9a:	f04f 0900 	mov.w	r9, #0
 800dd9e:	4b27      	ldr	r3, [pc, #156]	; (800de3c <PixelPatterns::ScannerUpdate(unsigned int)+0xa8>)
 800dda0:	b085      	sub	sp, #20
 800dda2:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800dda6:	e9d3 7604 	ldrd	r7, r6, [r3, #16]
 800ddaa:	689d      	ldr	r5, [r3, #8]
 800ddac:	f8df b090 	ldr.w	fp, [pc, #144]	; 800de40 <PixelPatterns::ScannerUpdate(unsigned int)+0xac>
 800ddb0:	00b3      	lsls	r3, r6, #2
 800ddb2:	f8df 8090 	ldr.w	r8, [pc, #144]	; 800de44 <PixelPatterns::ScannerUpdate(unsigned int)+0xb0>
 800ddb6:	9002      	str	r0, [sp, #8]
 800ddb8:	9301      	str	r3, [sp, #4]
 800ddba:	1bbf      	subs	r7, r7, r6
 800ddbc:	f8db 2000 	ldr.w	r2, [fp]
 800ddc0:	fa1f f489 	uxth.w	r4, r9
 800ddc4:	42a2      	cmp	r2, r4
 800ddc6:	d932      	bls.n	800de2e <PixelPatterns::ScannerUpdate(unsigned int)+0x9a>
 800ddc8:	42a6      	cmp	r6, r4
 800ddca:	d10b      	bne.n	800dde4 <PixelPatterns::ScannerUpdate(unsigned int)+0x50>
 800ddcc:	462a      	mov	r2, r5
 800ddce:	4631      	mov	r1, r6
 800ddd0:	4650      	mov	r0, sl
 800ddd2:	f7ff fe41 	bl	800da58 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800ddd6:	f8d8 2000 	ldr.w	r2, [r8]
 800ddda:	9b01      	ldr	r3, [sp, #4]
 800dddc:	50d5      	str	r5, [r2, r3]
 800ddde:	f109 0901 	add.w	r9, r9, #1
 800dde2:	e7eb      	b.n	800ddbc <PixelPatterns::ScannerUpdate(unsigned int)+0x28>
 800dde4:	42a7      	cmp	r7, r4
 800dde6:	d109      	bne.n	800ddfc <PixelPatterns::ScannerUpdate(unsigned int)+0x68>
 800dde8:	462a      	mov	r2, r5
 800ddea:	4639      	mov	r1, r7
 800ddec:	4650      	mov	r0, sl
 800ddee:	f7ff fe33 	bl	800da58 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800ddf2:	f8d8 2000 	ldr.w	r2, [r8]
 800ddf6:	f842 5024 	str.w	r5, [r2, r4, lsl #2]
 800ddfa:	e7f0      	b.n	800ddde <PixelPatterns::ScannerUpdate(unsigned int)+0x4a>
 800ddfc:	f8d8 2000 	ldr.w	r2, [r8]
 800de00:	4650      	mov	r0, sl
 800de02:	f852 1024 	ldr.w	r1, [r2, r4, lsl #2]
 800de06:	f3c1 2246 	ubfx	r2, r1, #9, #7
 800de0a:	f3c1 4c46 	ubfx	ip, r1, #17, #7
 800de0e:	0212      	lsls	r2, r2, #8
 800de10:	ea42 420c 	orr.w	r2, r2, ip, lsl #16
 800de14:	f3c1 0146 	ubfx	r1, r1, #1, #7
 800de18:	430a      	orrs	r2, r1
 800de1a:	4621      	mov	r1, r4
 800de1c:	9203      	str	r2, [sp, #12]
 800de1e:	f7ff fe1b 	bl	800da58 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800de22:	f8d8 1000 	ldr.w	r1, [r8]
 800de26:	9a03      	ldr	r2, [sp, #12]
 800de28:	f841 2024 	str.w	r2, [r1, r4, lsl #2]
 800de2c:	e7d7      	b.n	800ddde <PixelPatterns::ScannerUpdate(unsigned int)+0x4a>
 800de2e:	4651      	mov	r1, sl
 800de30:	9802      	ldr	r0, [sp, #8]
 800de32:	b005      	add	sp, #20
 800de34:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800de38:	f7ff bf1c 	b.w	800dc74 <PixelPatterns::Increment(unsigned int)>
 800de3c:	20003478 	andcs	r3, r0, r8, ror r4
 800de40:	20003580 	andcs	r3, r0, r0, lsl #11
 800de44:	2000357c 	andcs	r3, r0, ip, ror r5

0800de48 <PixelPatterns::FadeUpdate(unsigned int)>:
 800de48:	4b22      	ldr	r3, [pc, #136]	; (800ded4 <PixelPatterns::FadeUpdate(unsigned int)+0x8c>)
 800de4a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800de4e:	eb03 1341 	add.w	r3, r3, r1, lsl #5
 800de52:	4604      	mov	r4, r0
 800de54:	e9d3 0704 	ldrd	r0, r7, [r3, #16]
 800de58:	460d      	mov	r5, r1
 800de5a:	e9d3 2102 	ldrd	r2, r1, [r3, #8]
 800de5e:	f3c1 2307 	ubfx	r3, r1, #8, #8
 800de62:	437b      	muls	r3, r7
 800de64:	1bc6      	subs	r6, r0, r7
 800de66:	f3c2 2c07 	ubfx	ip, r2, #8, #8
 800de6a:	fb06 330c 	mla	r3, r6, ip, r3
 800de6e:	fbb3 f3f0 	udiv	r3, r3, r0
 800de72:	021b      	lsls	r3, r3, #8
 800de74:	fa1f fc83 	uxth.w	ip, r3
 800de78:	f3c1 4307 	ubfx	r3, r1, #16, #8
 800de7c:	437b      	muls	r3, r7
 800de7e:	f3c2 4e07 	ubfx	lr, r2, #16, #8
 800de82:	fb06 330e 	mla	r3, r6, lr, r3
 800de86:	fbb3 f3f0 	udiv	r3, r3, r0
 800de8a:	041b      	lsls	r3, r3, #16
 800de8c:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 800de90:	ea4c 0303 	orr.w	r3, ip, r3
 800de94:	fa5f fc82 	uxtb.w	ip, r2
 800de98:	b2ca      	uxtb	r2, r1
 800de9a:	437a      	muls	r2, r7
 800de9c:	fb06 220c 	mla	r2, r6, ip, r2
 800dea0:	fbb2 f2f0 	udiv	r2, r2, r0
 800dea4:	2700      	movs	r7, #0
 800dea6:	b2d2      	uxtb	r2, r2
 800dea8:	f8df 802c 	ldr.w	r8, [pc, #44]	; 800ded8 <PixelPatterns::FadeUpdate(unsigned int)+0x90>
 800deac:	ea43 0602 	orr.w	r6, r3, r2
 800deb0:	f8d8 3000 	ldr.w	r3, [r8]
 800deb4:	42bb      	cmp	r3, r7
 800deb6:	d906      	bls.n	800dec6 <PixelPatterns::FadeUpdate(unsigned int)+0x7e>
 800deb8:	4639      	mov	r1, r7
 800deba:	4632      	mov	r2, r6
 800debc:	4628      	mov	r0, r5
 800debe:	f7ff fdcb 	bl	800da58 <PixelPatterns::SetPixelColour(unsigned int, unsigned int, unsigned int) [clone .isra.0]>
 800dec2:	3701      	adds	r7, #1
 800dec4:	e7f4      	b.n	800deb0 <PixelPatterns::FadeUpdate(unsigned int)+0x68>
 800dec6:	4629      	mov	r1, r5
 800dec8:	4620      	mov	r0, r4
 800deca:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800dece:	f7ff bed1 	b.w	800dc74 <PixelPatterns::Increment(unsigned int)>
 800ded2:	bf00      	nop
 800ded4:	20003478 	andcs	r3, r0, r8, ror r4
 800ded8:	20003580 	andcs	r3, r0, r0, lsl #11

0800dedc <PixelPatterns::PortUpdate(unsigned int, unsigned int)>:
 800dedc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800dede:	4b12      	ldr	r3, [pc, #72]	; (800df28 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x4c>)
 800dee0:	014e      	lsls	r6, r1, #5
 800dee2:	599c      	ldr	r4, [r3, r6]
 800dee4:	eb03 1541 	add.w	r5, r3, r1, lsl #5
 800dee8:	686f      	ldr	r7, [r5, #4]
 800deea:	1b14      	subs	r4, r2, r4
 800deec:	42bc      	cmp	r4, r7
 800deee:	d319      	bcc.n	800df24 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x48>
 800def0:	519a      	str	r2, [r3, r6]
 800def2:	69eb      	ldr	r3, [r5, #28]
 800def4:	3b01      	subs	r3, #1
 800def6:	2b04      	cmp	r3, #4
 800def8:	d814      	bhi.n	800df24 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x48>
 800defa:	e8df f003 	tbb	[pc, r3]
 800defe:	0d0a0703 	stceq	7, cr0, [sl, #-12]
 800df02:	f7ff0010 			; <UNDEFINED> instruction: 0xf7ff0010
 800df06:	fed4 2001 	cdp2	0, 13, cr2, cr4, cr1, {0}
 800df0a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800df0c:	f7ff fefc 	bl	800dd08 <PixelPatterns::TheaterChaseUpdate(unsigned int)>
 800df10:	e7fa      	b.n	800df08 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 800df12:	f7ff ff2b 	bl	800dd6c <PixelPatterns::ColourWipeUpdate(unsigned int)>
 800df16:	e7f7      	b.n	800df08 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 800df18:	f7ff ff3c 	bl	800dd94 <PixelPatterns::ScannerUpdate(unsigned int)>
 800df1c:	e7f4      	b.n	800df08 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 800df1e:	f7ff ff93 	bl	800de48 <PixelPatterns::FadeUpdate(unsigned int)>
 800df22:	e7f1      	b.n	800df08 <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2c>
 800df24:	2000      	movs	r0, #0
 800df26:	e7f0      	b.n	800df0a <PixelPatterns::PortUpdate(unsigned int, unsigned int)+0x2e>
 800df28:	20003478 	andcs	r3, r0, r8, ror r4

0800df2c <PixelPatterns::Run()>:
 800df2c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800df30:	4f11      	ldr	r7, [pc, #68]	; (800df78 <PixelPatterns::Run()+0x4c>)
 800df32:	4605      	mov	r5, r0
 800df34:	6838      	ldr	r0, [r7, #0]
 800df36:	f000 fb29 	bl	800e58c <WS28xxMulti::IsUpdating()>
 800df3a:	4604      	mov	r4, r0
 800df3c:	b9c8      	cbnz	r0, 800df72 <PixelPatterns::Run()+0x46>
 800df3e:	4606      	mov	r6, r0
 800df40:	4b0e      	ldr	r3, [pc, #56]	; (800df7c <PixelPatterns::Run()+0x50>)
 800df42:	f8df 903c 	ldr.w	r9, [pc, #60]	; 800df80 <PixelPatterns::Run()+0x54>
 800df46:	f8d3 8000 	ldr.w	r8, [r3]
 800df4a:	f8d9 3000 	ldr.w	r3, [r9]
 800df4e:	b2f1      	uxtb	r1, r6
 800df50:	428b      	cmp	r3, r1
 800df52:	f106 0601 	add.w	r6, r6, #1
 800df56:	d906      	bls.n	800df66 <PixelPatterns::Run()+0x3a>
 800df58:	4642      	mov	r2, r8
 800df5a:	4628      	mov	r0, r5
 800df5c:	f7ff ffbe 	bl	800dedc <PixelPatterns::PortUpdate(unsigned int, unsigned int)>
 800df60:	4304      	orrs	r4, r0
 800df62:	b2e4      	uxtb	r4, r4
 800df64:	e7f1      	b.n	800df4a <PixelPatterns::Run()+0x1e>
 800df66:	b124      	cbz	r4, 800df72 <PixelPatterns::Run()+0x46>
 800df68:	6838      	ldr	r0, [r7, #0]
 800df6a:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800df6e:	f000 ba7f 	b.w	800e470 <WS28xxMulti::Update()>
 800df72:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800df76:	bf00      	nop
 800df78:	20003584 	andcs	r3, r0, r4, lsl #11
 800df7c:	20013df4 	strdcs	r3, [r1], -r4
 800df80:	20003578 	andcs	r3, r0, r8, ror r5

0800df84 <PixelType::GetType(pixel::Type)>:
 800df84:	280d      	cmp	r0, #13
 800df86:	bfda      	itte	le
 800df88:	4b02      	ldrle	r3, [pc, #8]	; (800df94 <PixelType::GetType(pixel::Type)+0x10>)
 800df8a:	eb03 00c0 	addle.w	r0, r3, r0, lsl #3
 800df8e:	4802      	ldrgt	r0, [pc, #8]	; (800df98 <PixelType::GetType(pixel::Type)+0x14>)
 800df90:	4770      	bx	lr
 800df92:	bf00      	nop
 800df94:	0801733f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r8, r9, ip, sp, lr}
 800df98:	08017315 	stmdaeq	r1, {r0, r2, r4, r8, r9, ip, sp, lr}

0800df9c <PixelType::GetType(char const*)>:
 800df9c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800df9e:	4604      	mov	r4, r0
 800dfa0:	2000      	movs	r0, #0
 800dfa2:	490f      	ldr	r1, [pc, #60]	; (800dfe0 <PixelType::GetType(char const*)+0x44>)
 800dfa4:	1e66      	subs	r6, r4, #1
 800dfa6:	1e4d      	subs	r5, r1, #1
 800dfa8:	f816 3f01 	ldrb.w	r3, [r6, #1]!
 800dfac:	461f      	mov	r7, r3
 800dfae:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 800dfb2:	2a19      	cmp	r2, #25
 800dfb4:	f815 2f01 	ldrb.w	r2, [r5, #1]!
 800dfb8:	bf98      	it	ls
 800dfba:	f103 0720 	addls.w	r7, r3, #32
 800dfbe:	f1a2 0c41 	sub.w	ip, r2, #65	; 0x41
 800dfc2:	f1bc 0f19 	cmp.w	ip, #25
 800dfc6:	bf98      	it	ls
 800dfc8:	3220      	addls	r2, #32
 800dfca:	42ba      	cmp	r2, r7
 800dfcc:	d102      	bne.n	800dfd4 <PixelType::GetType(char const*)+0x38>
 800dfce:	2b00      	cmp	r3, #0
 800dfd0:	d1ea      	bne.n	800dfa8 <PixelType::GetType(char const*)+0xc>
 800dfd2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800dfd4:	3001      	adds	r0, #1
 800dfd6:	280e      	cmp	r0, #14
 800dfd8:	f101 0108 	add.w	r1, r1, #8
 800dfdc:	d1e2      	bne.n	800dfa4 <PixelType::GetType(char const*)+0x8>
 800dfde:	e7f8      	b.n	800dfd2 <PixelType::GetType(char const*)+0x36>
 800dfe0:	0801733f 	stmdaeq	r1, {r0, r1, r2, r3, r4, r5, r8, r9, ip, sp, lr}

0800dfe4 <PixelType::GetMap(char const*)>:
 800dfe4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800dfe6:	4605      	mov	r5, r0
 800dfe8:	2000      	movs	r0, #0
 800dfea:	4b11      	ldr	r3, [pc, #68]	; (800e030 <PixelType::GetMap(char const*)+0x4c>)
 800dfec:	1e5c      	subs	r4, r3, #1
 800dfee:	1e6e      	subs	r6, r5, #1
 800dff0:	f103 0c02 	add.w	ip, r3, #2
 800dff4:	f814 2f01 	ldrb.w	r2, [r4, #1]!
 800dff8:	4617      	mov	r7, r2
 800dffa:	f1a2 0141 	sub.w	r1, r2, #65	; 0x41
 800dffe:	2919      	cmp	r1, #25
 800e000:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 800e004:	bf98      	it	ls
 800e006:	f102 0720 	addls.w	r7, r2, #32
 800e00a:	f1a1 0e41 	sub.w	lr, r1, #65	; 0x41
 800e00e:	f1be 0f19 	cmp.w	lr, #25
 800e012:	bf98      	it	ls
 800e014:	3120      	addls	r1, #32
 800e016:	42b9      	cmp	r1, r7
 800e018:	d005      	beq.n	800e026 <PixelType::GetMap(char const*)+0x42>
 800e01a:	3001      	adds	r0, #1
 800e01c:	2806      	cmp	r0, #6
 800e01e:	f103 0304 	add.w	r3, r3, #4
 800e022:	d1e3      	bne.n	800dfec <PixelType::GetMap(char const*)+0x8>
 800e024:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e026:	2a00      	cmp	r2, #0
 800e028:	d0fc      	beq.n	800e024 <PixelType::GetMap(char const*)+0x40>
 800e02a:	4564      	cmp	r4, ip
 800e02c:	d1e2      	bne.n	800dff4 <PixelType::GetMap(char const*)+0x10>
 800e02e:	e7f9      	b.n	800e024 <PixelType::GetMap(char const*)+0x40>
 800e030:	08017327 	stmdaeq	r1, {r0, r1, r2, r5, r8, r9, ip, sp, lr}

0800e034 <PixelType::GetMap(pixel::Map)>:
 800e034:	2805      	cmp	r0, #5
 800e036:	bfda      	itte	le
 800e038:	4b02      	ldrle	r3, [pc, #8]	; (800e044 <PixelType::GetMap(pixel::Map)+0x10>)
 800e03a:	eb03 0080 	addle.w	r0, r3, r0, lsl #2
 800e03e:	4802      	ldrgt	r0, [pc, #8]	; (800e048 <PixelType::GetMap(pixel::Map)+0x14>)
 800e040:	4770      	bx	lr
 800e042:	bf00      	nop
 800e044:	08017327 	stmdaeq	r1, {r0, r1, r2, r5, r8, r9, ip, sp, lr}
 800e048:	0801731d 	stmdaeq	r1, {r0, r2, r3, r4, r8, r9, ip, sp, lr}

0800e04c <PixelType::ConvertTxH(unsigned char)>:
 800e04c:	28f0      	cmp	r0, #240	; 0xf0
 800e04e:	d010      	beq.n	800e072 <PixelType::ConvertTxH(unsigned char)+0x26>
 800e050:	d807      	bhi.n	800e062 <PixelType::ConvertTxH(unsigned char)+0x16>
 800e052:	28c0      	cmp	r0, #192	; 0xc0
 800e054:	d00f      	beq.n	800e076 <PixelType::ConvertTxH(unsigned char)+0x2a>
 800e056:	28e0      	cmp	r0, #224	; 0xe0
 800e058:	d00f      	beq.n	800e07a <PixelType::ConvertTxH(unsigned char)+0x2e>
 800e05a:	2880      	cmp	r0, #128	; 0x80
 800e05c:	d113      	bne.n	800e086 <PixelType::ConvertTxH(unsigned char)+0x3a>
 800e05e:	480b      	ldr	r0, [pc, #44]	; (800e08c <PixelType::ConvertTxH(unsigned char)+0x40>)
 800e060:	4770      	bx	lr
 800e062:	28fc      	cmp	r0, #252	; 0xfc
 800e064:	d00b      	beq.n	800e07e <PixelType::ConvertTxH(unsigned char)+0x32>
 800e066:	28fe      	cmp	r0, #254	; 0xfe
 800e068:	d00b      	beq.n	800e082 <PixelType::ConvertTxH(unsigned char)+0x36>
 800e06a:	28f8      	cmp	r0, #248	; 0xf8
 800e06c:	d10b      	bne.n	800e086 <PixelType::ConvertTxH(unsigned char)+0x3a>
 800e06e:	4808      	ldr	r0, [pc, #32]	; (800e090 <PixelType::ConvertTxH(unsigned char)+0x44>)
 800e070:	4770      	bx	lr
 800e072:	4808      	ldr	r0, [pc, #32]	; (800e094 <PixelType::ConvertTxH(unsigned char)+0x48>)
 800e074:	4770      	bx	lr
 800e076:	4808      	ldr	r0, [pc, #32]	; (800e098 <PixelType::ConvertTxH(unsigned char)+0x4c>)
 800e078:	4770      	bx	lr
 800e07a:	4808      	ldr	r0, [pc, #32]	; (800e09c <PixelType::ConvertTxH(unsigned char)+0x50>)
 800e07c:	4770      	bx	lr
 800e07e:	4808      	ldr	r0, [pc, #32]	; (800e0a0 <PixelType::ConvertTxH(unsigned char)+0x54>)
 800e080:	4770      	bx	lr
 800e082:	4808      	ldr	r0, [pc, #32]	; (800e0a4 <PixelType::ConvertTxH(unsigned char)+0x58>)
 800e084:	4770      	bx	lr
 800e086:	2000      	movs	r0, #0
 800e088:	4770      	bx	lr
 800e08a:	bf00      	nop
 800e08c:	3e200000 	cdpcc	0, 2, cr0, cr0, cr0, {0}
 800e090:	3f480000 	svccc	0x00480000
 800e094:	3f200000 	svccc	0x00200000
 800e098:	3ea00000 	cdpcc	0, 10, cr0, cr0, cr0, {0}
 800e09c:	3ef00000 	cdpcc	0, 15, cr0, cr0, cr0, {0}
 800e0a0:	3f700000 	svccc	0x00700000
 800e0a4:	3f8c0000 	svccc	0x008c0000

0800e0a8 <PixelType::ConvertTxH(float)>:
 800e0a8:	b510      	push	{r4, lr}
 800e0aa:	491d      	ldr	r1, [pc, #116]	; (800e120 <PixelType::ConvertTxH(float)+0x78>)
 800e0ac:	4604      	mov	r4, r0
 800e0ae:	f7f9 fa27 	bl	8007500 <__aeabi_fcmplt>
 800e0b2:	bb30      	cbnz	r0, 800e102 <PixelType::ConvertTxH(float)+0x5a>
 800e0b4:	4620      	mov	r0, r4
 800e0b6:	491b      	ldr	r1, [pc, #108]	; (800e124 <PixelType::ConvertTxH(float)+0x7c>)
 800e0b8:	f7f9 fa22 	bl	8007500 <__aeabi_fcmplt>
 800e0bc:	bb18      	cbnz	r0, 800e106 <PixelType::ConvertTxH(float)+0x5e>
 800e0be:	4620      	mov	r0, r4
 800e0c0:	4919      	ldr	r1, [pc, #100]	; (800e128 <PixelType::ConvertTxH(float)+0x80>)
 800e0c2:	f7f9 fa1d 	bl	8007500 <__aeabi_fcmplt>
 800e0c6:	bb00      	cbnz	r0, 800e10a <PixelType::ConvertTxH(float)+0x62>
 800e0c8:	4620      	mov	r0, r4
 800e0ca:	4918      	ldr	r1, [pc, #96]	; (800e12c <PixelType::ConvertTxH(float)+0x84>)
 800e0cc:	f7f9 fa18 	bl	8007500 <__aeabi_fcmplt>
 800e0d0:	b9e8      	cbnz	r0, 800e10e <PixelType::ConvertTxH(float)+0x66>
 800e0d2:	4620      	mov	r0, r4
 800e0d4:	4916      	ldr	r1, [pc, #88]	; (800e130 <PixelType::ConvertTxH(float)+0x88>)
 800e0d6:	f7f9 fa13 	bl	8007500 <__aeabi_fcmplt>
 800e0da:	b9d0      	cbnz	r0, 800e112 <PixelType::ConvertTxH(float)+0x6a>
 800e0dc:	4620      	mov	r0, r4
 800e0de:	4915      	ldr	r1, [pc, #84]	; (800e134 <PixelType::ConvertTxH(float)+0x8c>)
 800e0e0:	f7f9 fa0e 	bl	8007500 <__aeabi_fcmplt>
 800e0e4:	b9b8      	cbnz	r0, 800e116 <PixelType::ConvertTxH(float)+0x6e>
 800e0e6:	4620      	mov	r0, r4
 800e0e8:	4913      	ldr	r1, [pc, #76]	; (800e138 <PixelType::ConvertTxH(float)+0x90>)
 800e0ea:	f7f9 fa09 	bl	8007500 <__aeabi_fcmplt>
 800e0ee:	b9a0      	cbnz	r0, 800e11a <PixelType::ConvertTxH(float)+0x72>
 800e0f0:	4620      	mov	r0, r4
 800e0f2:	4912      	ldr	r1, [pc, #72]	; (800e13c <PixelType::ConvertTxH(float)+0x94>)
 800e0f4:	f7f9 fa04 	bl	8007500 <__aeabi_fcmplt>
 800e0f8:	2800      	cmp	r0, #0
 800e0fa:	bf14      	ite	ne
 800e0fc:	20fe      	movne	r0, #254	; 0xfe
 800e0fe:	2000      	moveq	r0, #0
 800e100:	bd10      	pop	{r4, pc}
 800e102:	2000      	movs	r0, #0
 800e104:	e7fc      	b.n	800e100 <PixelType::ConvertTxH(float)+0x58>
 800e106:	2080      	movs	r0, #128	; 0x80
 800e108:	e7fa      	b.n	800e100 <PixelType::ConvertTxH(float)+0x58>
 800e10a:	20c0      	movs	r0, #192	; 0xc0
 800e10c:	e7f8      	b.n	800e100 <PixelType::ConvertTxH(float)+0x58>
 800e10e:	20e0      	movs	r0, #224	; 0xe0
 800e110:	e7f6      	b.n	800e100 <PixelType::ConvertTxH(float)+0x58>
 800e112:	20f0      	movs	r0, #240	; 0xf0
 800e114:	e7f4      	b.n	800e100 <PixelType::ConvertTxH(float)+0x58>
 800e116:	20f8      	movs	r0, #248	; 0xf8
 800e118:	e7f2      	b.n	800e100 <PixelType::ConvertTxH(float)+0x58>
 800e11a:	20fc      	movs	r0, #252	; 0xfc
 800e11c:	e7f0      	b.n	800e100 <PixelType::ConvertTxH(float)+0x58>
 800e11e:	bf00      	nop
 800e120:	3da00000 	stccc	0, cr0, [r0]
 800e124:	3e700000 	cdpcc	0, 7, cr0, cr0, cr0, {0}
 800e128:	3ec80000 	cdpcc	0, 12, cr0, cr8, cr0, {0}
 800e12c:	3f0c0000 	svccc	0x000c0000
 800e130:	3f340000 	svccc	0x00340000
 800e134:	3f5c0000 	svccc	0x005c0000
 800e138:	3f820000 	svccc	0x00820000
 800e13c:	3f960000 	svccc	0x00960000

0800e140 <TIMER4_IRQHandler>:
 800e140:	f3bf 8f5f 	dmb	sy
 800e144:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800e148:	f8d3 2c10 	ldr.w	r2, [r3, #3088]	; 0xc10
 800e14c:	0791      	lsls	r1, r2, #30
 800e14e:	d520      	bpl.n	800e192 <TIMER4_IRQHandler+0x52>
 800e150:	f503 3398 	add.w	r3, r3, #77824	; 0x13000
 800e154:	f8d3 1400 	ldr.w	r1, [r3, #1024]	; 0x400
 800e158:	f021 0101 	bic.w	r1, r1, #1
 800e15c:	f8c3 1400 	str.w	r1, [r3, #1024]	; 0x400
 800e160:	f8d3 140c 	ldr.w	r1, [r3, #1036]	; 0x40c
 800e164:	f421 7100 	bic.w	r1, r1, #512	; 0x200
 800e168:	f8c3 140c 	str.w	r1, [r3, #1036]	; 0x40c
 800e16c:	f8d3 140c 	ldr.w	r1, [r3, #1036]	; 0x40c
 800e170:	f421 6180 	bic.w	r1, r1, #1024	; 0x400
 800e174:	f8c3 140c 	str.w	r1, [r3, #1036]	; 0x40c
 800e178:	f8d3 140c 	ldr.w	r1, [r3, #1036]	; 0x40c
 800e17c:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
 800e180:	f8c3 140c 	str.w	r1, [r3, #1036]	; 0x40c
 800e184:	21c0      	movs	r1, #192	; 0xc0
 800e186:	f5a3 5300 	sub.w	r3, r3, #8192	; 0x2000
 800e18a:	6159      	str	r1, [r3, #20]
 800e18c:	2100      	movs	r1, #0
 800e18e:	4b05      	ldr	r3, [pc, #20]	; (800e1a4 <TIMER4_IRQHandler+0x64>)
 800e190:	7019      	strb	r1, [r3, #0]
 800e192:	43d2      	mvns	r2, r2
 800e194:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800e198:	f8c3 2c10 	str.w	r2, [r3, #3088]	; 0xc10
 800e19c:	f3bf 8f5f 	dmb	sy
 800e1a0:	4770      	bx	lr
 800e1a2:	bf00      	nop
 800e1a4:	2000358c 	andcs	r3, r0, ip, lsl #11

0800e1a8 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)>:
 800e1a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e1ac:	23aa      	movs	r3, #170	; 0xaa
 800e1ae:	f04f 0903 	mov.w	r9, #3
 800e1b2:	2400      	movs	r4, #0
 800e1b4:	e9c0 9300 	strd	r9, r3, [r0]
 800e1b8:	2306      	movs	r3, #6
 800e1ba:	460e      	mov	r6, r1
 800e1bc:	4605      	mov	r5, r0
 800e1be:	e9c0 3402 	strd	r3, r4, [r0, #8]
 800e1c2:	4b8f      	ldr	r3, [pc, #572]	; (800e400 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x258>)
 800e1c4:	b08d      	sub	sp, #52	; 0x34
 800e1c6:	4669      	mov	r1, sp
 800e1c8:	6018      	str	r0, [r3, #0]
 800e1ca:	4630      	mov	r0, r6
 800e1cc:	f7ff fbd6 	bl	800d97c <PixelConfiguration::Validate(unsigned int&)>
 800e1d0:	4630      	mov	r0, r6
 800e1d2:	f7ff fc3f 	bl	800da54 <PixelConfiguration::Dump()>
 800e1d6:	6833      	ldr	r3, [r6, #0]
 800e1d8:	68b2      	ldr	r2, [r6, #8]
 800e1da:	602b      	str	r3, [r5, #0]
 800e1dc:	60aa      	str	r2, [r5, #8]
 800e1de:	6873      	ldr	r3, [r6, #4]
 800e1e0:	9a00      	ldr	r2, [sp, #0]
 800e1e2:	606b      	str	r3, [r5, #4]
 800e1e4:	4353      	muls	r3, r2
 800e1e6:	fa03 f309 	lsl.w	r3, r3, r9
 800e1ea:	60eb      	str	r3, [r5, #12]
 800e1ec:	7c30      	ldrb	r0, [r6, #16]
 800e1ee:	f7f9 fe65 	bl	8007ebc <__popcountsi2>
 800e1f2:	4680      	mov	r8, r0
 800e1f4:	7c70      	ldrb	r0, [r6, #17]
 800e1f6:	f7f9 fe61 	bl	8007ebc <__popcountsi2>
 800e1fa:	4e82      	ldr	r6, [pc, #520]	; (800e404 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x25c>)
 800e1fc:	4607      	mov	r7, r0
 800e1fe:	f240 6004 	movw	r0, #1540	; 0x604
 800e202:	f005 fea5 	bl	8013f50 <rcu_periph_clock_enable>
 800e206:	464a      	mov	r2, r9
 800e208:	2110      	movs	r1, #16
 800e20a:	4630      	mov	r0, r6
 800e20c:	23c0      	movs	r3, #192	; 0xc0
 800e20e:	f005 fe03 	bl	8013e18 <gpio_init>
 800e212:	23c0      	movs	r3, #192	; 0xc0
 800e214:	f240 600d 	movw	r0, #1549	; 0x60d
 800e218:	6173      	str	r3, [r6, #20]
 800e21a:	f506 5610 	add.w	r6, r6, #9216	; 0x2400
 800e21e:	f005 fe97 	bl	8013f50 <rcu_periph_clock_enable>
 800e222:	4630      	mov	r0, r6
 800e224:	f006 f808 	bl	8014238 <timer_deinit>
 800e228:	4b77      	ldr	r3, [pc, #476]	; (800e408 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x260>)
 800e22a:	f04f 0996 	mov.w	r9, #150	; 0x96
 800e22e:	f8c3 4424 	str.w	r4, [r3, #1060]	; 0x424
 800e232:	2395      	movs	r3, #149	; 0x95
 800e234:	4630      	mov	r0, r6
 800e236:	a901      	add	r1, sp, #4
 800e238:	9303      	str	r3, [sp, #12]
 800e23a:	9401      	str	r4, [sp, #4]
 800e23c:	f8ad 4008 	strh.w	r4, [sp, #8]
 800e240:	f8ad 4010 	strh.w	r4, [sp, #16]
 800e244:	f006 f89e 	bl	8014384 <timer_init>
 800e248:	4621      	mov	r1, r4
 800e24a:	4630      	mov	r0, r6
 800e24c:	f006 f94c 	bl	80144e8 <timer_master_slave_mode_config>
 800e250:	4630      	mov	r0, r6
 800e252:	2130      	movs	r1, #48	; 0x30
 800e254:	f006 f938 	bl	80144c8 <timer_master_output_trigger_source_select>
 800e258:	4621      	mov	r1, r4
 800e25a:	4630      	mov	r0, r6
 800e25c:	2210      	movs	r2, #16
 800e25e:	f006 f8f7 	bl	8014450 <timer_channel_output_mode_config>
 800e262:	4630      	mov	r0, r6
 800e264:	2210      	movs	r2, #16
 800e266:	2101      	movs	r1, #1
 800e268:	f006 f8f2 	bl	8014450 <timer_channel_output_mode_config>
 800e26c:	4630      	mov	r0, r6
 800e26e:	2210      	movs	r2, #16
 800e270:	2102      	movs	r1, #2
 800e272:	f006 f8ed 	bl	8014450 <timer_channel_output_mode_config>
 800e276:	4621      	mov	r1, r4
 800e278:	4630      	mov	r0, r6
 800e27a:	2201      	movs	r2, #1
 800e27c:	f006 f90e 	bl	801449c <timer_channel_output_pulse_value_config>
 800e280:	fb09 f208 	mul.w	r2, r9, r8
 800e284:	4630      	mov	r0, r6
 800e286:	2101      	movs	r1, #1
 800e288:	f3c2 02cf 	ubfx	r2, r2, #3, #16
 800e28c:	f006 f906 	bl	801449c <timer_channel_output_pulse_value_config>
 800e290:	fb09 f207 	mul.w	r2, r9, r7
 800e294:	2102      	movs	r1, #2
 800e296:	f3c2 02cf 	ubfx	r2, r2, #3, #16
 800e29a:	4630      	mov	r0, r6
 800e29c:	f006 f8fe 	bl	801449c <timer_channel_output_pulse_value_config>
 800e2a0:	f5a6 3694 	sub.w	r6, r6, #75776	; 0x12800
 800e2a4:	f240 7003 	movw	r0, #1795	; 0x703
 800e2a8:	f005 fe52 	bl	8013f50 <rcu_periph_clock_enable>
 800e2ac:	4630      	mov	r0, r6
 800e2ae:	f005 ffc3 	bl	8014238 <timer_deinit>
 800e2b2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800e2b6:	f8c3 4c24 	str.w	r4, [r3, #3108]	; 0xc24
 800e2ba:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 800e2be:	4630      	mov	r0, r6
 800e2c0:	a901      	add	r1, sp, #4
 800e2c2:	9303      	str	r3, [sp, #12]
 800e2c4:	9401      	str	r4, [sp, #4]
 800e2c6:	f8ad 4008 	strh.w	r4, [sp, #8]
 800e2ca:	f8ad 4010 	strh.w	r4, [sp, #16]
 800e2ce:	f006 f859 	bl	8014384 <timer_init>
 800e2d2:	4621      	mov	r1, r4
 800e2d4:	4630      	mov	r0, r6
 800e2d6:	f006 f907 	bl	80144e8 <timer_master_slave_mode_config>
 800e2da:	4630      	mov	r0, r6
 800e2dc:	2107      	movs	r1, #7
 800e2de:	f006 f8fb 	bl	80144d8 <timer_slave_mode_select>
 800e2e2:	4630      	mov	r0, r6
 800e2e4:	2130      	movs	r1, #48	; 0x30
 800e2e6:	f006 f8e7 	bl	80144b8 <timer_input_trigger_source_select>
 800e2ea:	4621      	mov	r1, r4
 800e2ec:	4630      	mov	r0, r6
 800e2ee:	2210      	movs	r2, #16
 800e2f0:	f006 f8ae 	bl	8014450 <timer_channel_output_mode_config>
 800e2f4:	89aa      	ldrh	r2, [r5, #12]
 800e2f6:	4621      	mov	r1, r4
 800e2f8:	4630      	mov	r0, r6
 800e2fa:	f006 f8cf 	bl	801449c <timer_channel_output_pulse_value_config>
 800e2fe:	2102      	movs	r1, #2
 800e300:	4630      	mov	r0, r6
 800e302:	f006 f8fe 	bl	8014502 <timer_interrupt_enable>
 800e306:	f44f 2280 	mov.w	r2, #262144	; 0x40000
 800e30a:	f44f 7800 	mov.w	r8, #512	; 0x200
 800e30e:	2701      	movs	r7, #1
 800e310:	f44f 6b00 	mov.w	fp, #2048	; 0x800
 800e314:	f44f 5900 	mov.w	r9, #8192	; 0x2000
 800e318:	4b3c      	ldr	r3, [pc, #240]	; (800e40c <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x264>)
 800e31a:	f506 36fc 	add.w	r6, r6, #129024	; 0x1f800
 800e31e:	f883 4332 	strb.w	r4, [r3, #818]	; 0x332
 800e322:	f240 5001 	movw	r0, #1281	; 0x501
 800e326:	605a      	str	r2, [r3, #4]
 800e328:	f005 fe12 	bl	8013f50 <rcu_periph_clock_enable>
 800e32c:	2102      	movs	r1, #2
 800e32e:	4630      	mov	r0, r6
 800e330:	f005 fc7a 	bl	8013c28 <dma_deinit>
 800e334:	a805      	add	r0, sp, #20
 800e336:	f005 fc95 	bl	8013c64 <dma_struct_para_init>
 800e33a:	4a35      	ldr	r2, [pc, #212]	; (800e410 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x268>)
 800e33c:	4b35      	ldr	r3, [pc, #212]	; (800e414 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x26c>)
 800e33e:	4630      	mov	r0, r6
 800e340:	e9cd 2805 	strd	r2, r8, [sp, #20]
 800e344:	2102      	movs	r1, #2
 800e346:	aa05      	add	r2, sp, #20
 800e348:	9307      	str	r3, [sp, #28]
 800e34a:	f8cd b020 	str.w	fp, [sp, #32]
 800e34e:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800e352:	f8ad 402c 	strh.w	r4, [sp, #44]	; 0x2c
 800e356:	f88d 702e 	strb.w	r7, [sp, #46]	; 0x2e
 800e35a:	f005 fc8d 	bl	8013c78 <dma_init>
 800e35e:	4630      	mov	r0, r6
 800e360:	2102      	movs	r1, #2
 800e362:	f005 fcba 	bl	8013cda <dma_circulation_disable>
 800e366:	4630      	mov	r0, r6
 800e368:	2102      	movs	r1, #2
 800e36a:	f005 fcbe 	bl	8013cea <dma_memory_to_memory_disable>
 800e36e:	2104      	movs	r1, #4
 800e370:	4630      	mov	r0, r6
 800e372:	f005 fc59 	bl	8013c28 <dma_deinit>
 800e376:	a805      	add	r0, sp, #20
 800e378:	f005 fc74 	bl	8013c64 <dma_struct_para_init>
 800e37c:	4a26      	ldr	r2, [pc, #152]	; (800e418 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x270>)
 800e37e:	f8df a09c 	ldr.w	sl, [pc, #156]	; 800e41c <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x274>
 800e382:	9207      	str	r2, [sp, #28]
 800e384:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800e388:	9208      	str	r2, [sp, #32]
 800e38a:	f44f 7280 	mov.w	r2, #256	; 0x100
 800e38e:	4630      	mov	r0, r6
 800e390:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800e394:	2104      	movs	r1, #4
 800e396:	aa05      	add	r2, sp, #20
 800e398:	f8cd a014 	str.w	sl, [sp, #20]
 800e39c:	f88d 702e 	strb.w	r7, [sp, #46]	; 0x2e
 800e3a0:	f8cd 8018 	str.w	r8, [sp, #24]
 800e3a4:	f005 fc68 	bl	8013c78 <dma_init>
 800e3a8:	4630      	mov	r0, r6
 800e3aa:	2104      	movs	r1, #4
 800e3ac:	f005 fc95 	bl	8013cda <dma_circulation_disable>
 800e3b0:	4630      	mov	r0, r6
 800e3b2:	2104      	movs	r1, #4
 800e3b4:	f005 fc99 	bl	8013cea <dma_memory_to_memory_disable>
 800e3b8:	4621      	mov	r1, r4
 800e3ba:	4630      	mov	r0, r6
 800e3bc:	f005 fc34 	bl	8013c28 <dma_deinit>
 800e3c0:	a805      	add	r0, sp, #20
 800e3c2:	f005 fc4f 	bl	8013c64 <dma_struct_para_init>
 800e3c6:	4b13      	ldr	r3, [pc, #76]	; (800e414 <WS28xxMulti::WS28xxMulti(PixelConfiguration&)+0x26c>)
 800e3c8:	aa05      	add	r2, sp, #20
 800e3ca:	4621      	mov	r1, r4
 800e3cc:	4630      	mov	r0, r6
 800e3ce:	e9cd 3b07 	strd	r3, fp, [sp, #28]
 800e3d2:	e9cd a805 	strd	sl, r8, [sp, #20]
 800e3d6:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 800e3da:	f8ad 402c 	strh.w	r4, [sp, #44]	; 0x2c
 800e3de:	f88d 702e 	strb.w	r7, [sp, #46]	; 0x2e
 800e3e2:	f005 fc49 	bl	8013c78 <dma_init>
 800e3e6:	4621      	mov	r1, r4
 800e3e8:	4630      	mov	r0, r6
 800e3ea:	f005 fc76 	bl	8013cda <dma_circulation_disable>
 800e3ee:	4630      	mov	r0, r6
 800e3f0:	4621      	mov	r1, r4
 800e3f2:	f005 fc7a 	bl	8013cea <dma_memory_to_memory_disable>
 800e3f6:	4628      	mov	r0, r5
 800e3f8:	b00d      	add	sp, #52	; 0x34
 800e3fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e3fe:	bf00      	nop
 800e400:	2000ad90 	mulcs	r0, r0, sp
 800e404:	40011000 	andmi	r1, r1, r0
 800e408:	40013000 	andmi	r3, r1, r0
 800e40c:	e000e100 	and	lr, r0, r0, lsl #2
 800e410:	40011010 	andmi	r1, r1, r0, lsl r0
 800e414:	080173e0 	stmdaeq	r1, {r5, r6, r7, r8, r9, ip, sp, lr}
 800e418:	20003590 	mulcs	r0, r0, r5
 800e41c:	40011014 	andmi	r1, r1, r4, lsl r0

0800e420 <WS28xxMulti::~WS28xxMulti()>:
 800e420:	2200      	movs	r2, #0
 800e422:	4b01      	ldr	r3, [pc, #4]	; (800e428 <WS28xxMulti::~WS28xxMulti()+0x8>)
 800e424:	601a      	str	r2, [r3, #0]
 800e426:	4770      	bx	lr
 800e428:	2000ad90 	mulcs	r0, r0, sp

0800e42c <WS28xxMulti::Print()>:
 800e42c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800e42e:	4604      	mov	r4, r0
 800e430:	480c      	ldr	r0, [pc, #48]	; (800e464 <WS28xxMulti::Print()+0x38>)
 800e432:	f7fa fd3b 	bl	8008eac <printf>
 800e436:	6820      	ldr	r0, [r4, #0]
 800e438:	f7ff fda4 	bl	800df84 <PixelType::GetType(pixel::Type)>
 800e43c:	4605      	mov	r5, r0
 800e43e:	68a0      	ldr	r0, [r4, #8]
 800e440:	6826      	ldr	r6, [r4, #0]
 800e442:	f7ff fdf7 	bl	800e034 <PixelType::GetMap(pixel::Map)>
 800e446:	68a2      	ldr	r2, [r4, #8]
 800e448:	4603      	mov	r3, r0
 800e44a:	4629      	mov	r1, r5
 800e44c:	9200      	str	r2, [sp, #0]
 800e44e:	4806      	ldr	r0, [pc, #24]	; (800e468 <WS28xxMulti::Print()+0x3c>)
 800e450:	4632      	mov	r2, r6
 800e452:	f7fa fd2b 	bl	8008eac <printf>
 800e456:	6861      	ldr	r1, [r4, #4]
 800e458:	4804      	ldr	r0, [pc, #16]	; (800e46c <WS28xxMulti::Print()+0x40>)
 800e45a:	b002      	add	sp, #8
 800e45c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e460:	f7fa bd24 	b.w	8008eac <printf>
 800e464:	080173af 	stmdaeq	r1, {r0, r1, r2, r3, r5, r7, r8, r9, ip, sp, lr}
 800e468:	080173b6 	stmdaeq	r1, {r1, r2, r4, r5, r7, r8, r9, ip, sp, lr}
 800e46c:	080173d2 	stmdaeq	r1, {r1, r4, r6, r7, r8, r9, ip, sp, lr}

0800e470 <WS28xxMulti::Update()>:
 800e470:	2201      	movs	r2, #1
 800e472:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e474:	4e30      	ldr	r6, [pc, #192]	; (800e538 <WS28xxMulti::Update()+0xc8>)
 800e476:	4b31      	ldr	r3, [pc, #196]	; (800e53c <WS28xxMulti::Update()+0xcc>)
 800e478:	4605      	mov	r5, r0
 800e47a:	4630      	mov	r0, r6
 800e47c:	701a      	strb	r2, [r3, #0]
 800e47e:	2700      	movs	r7, #0
 800e480:	f005 ffdd 	bl	801443e <timer_disable>
 800e484:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800e488:	4c2d      	ldr	r4, [pc, #180]	; (800e540 <WS28xxMulti::Update()+0xd0>)
 800e48a:	f8c3 7c24 	str.w	r7, [r3, #3108]	; 0xc24
 800e48e:	4620      	mov	r0, r4
 800e490:	f005 ffd5 	bl	801443e <timer_disable>
 800e494:	4b2b      	ldr	r3, [pc, #172]	; (800e544 <WS28xxMulti::Update()+0xd4>)
 800e496:	492c      	ldr	r1, [pc, #176]	; (800e548 <WS28xxMulti::Update()+0xd8>)
 800e498:	f8c3 7424 	str.w	r7, [r3, #1060]	; 0x424
 800e49c:	f503 4350 	add.w	r3, r3, #53248	; 0xd000
 800e4a0:	f8d3 2430 	ldr.w	r2, [r3, #1072]	; 0x430
 800e4a4:	4620      	mov	r0, r4
 800e4a6:	f022 0201 	bic.w	r2, r2, #1
 800e4aa:	f8c3 2430 	str.w	r2, [r3, #1072]	; 0x430
 800e4ae:	f8c3 143c 	str.w	r1, [r3, #1084]	; 0x43c
 800e4b2:	89aa      	ldrh	r2, [r5, #12]
 800e4b4:	f8c3 2434 	str.w	r2, [r3, #1076]	; 0x434
 800e4b8:	f8d3 2430 	ldr.w	r2, [r3, #1072]	; 0x430
 800e4bc:	f042 0201 	orr.w	r2, r2, #1
 800e4c0:	f8c3 2430 	str.w	r2, [r3, #1072]	; 0x430
 800e4c4:	f8d3 2458 	ldr.w	r2, [r3, #1112]	; 0x458
 800e4c8:	f022 0201 	bic.w	r2, r2, #1
 800e4cc:	f8c3 2458 	str.w	r2, [r3, #1112]	; 0x458
 800e4d0:	4a1e      	ldr	r2, [pc, #120]	; (800e54c <WS28xxMulti::Update()+0xdc>)
 800e4d2:	f8c3 2464 	str.w	r2, [r3, #1124]	; 0x464
 800e4d6:	89aa      	ldrh	r2, [r5, #12]
 800e4d8:	f8c3 245c 	str.w	r2, [r3, #1116]	; 0x45c
 800e4dc:	f8d3 2458 	ldr.w	r2, [r3, #1112]	; 0x458
 800e4e0:	f042 0201 	orr.w	r2, r2, #1
 800e4e4:	f8c3 2458 	str.w	r2, [r3, #1112]	; 0x458
 800e4e8:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 800e4ec:	f022 0201 	bic.w	r2, r2, #1
 800e4f0:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408
 800e4f4:	f8c3 1414 	str.w	r1, [r3, #1044]	; 0x414
 800e4f8:	89aa      	ldrh	r2, [r5, #12]
 800e4fa:	f44f 7100 	mov.w	r1, #512	; 0x200
 800e4fe:	f8c3 240c 	str.w	r2, [r3, #1036]	; 0x40c
 800e502:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 800e506:	f042 0201 	orr.w	r2, r2, #1
 800e50a:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408
 800e50e:	f005 ff9b 	bl	8014448 <timer_dma_enable>
 800e512:	4620      	mov	r0, r4
 800e514:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800e518:	f005 ff96 	bl	8014448 <timer_dma_enable>
 800e51c:	4620      	mov	r0, r4
 800e51e:	f44f 6100 	mov.w	r1, #2048	; 0x800
 800e522:	f005 ff91 	bl	8014448 <timer_dma_enable>
 800e526:	4630      	mov	r0, r6
 800e528:	f005 ff84 	bl	8014434 <timer_enable>
 800e52c:	4620      	mov	r0, r4
 800e52e:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 800e532:	f005 bf7f 	b.w	8014434 <timer_enable>
 800e536:	bf00      	nop
 800e538:	40000c00 	andmi	r0, r0, r0, lsl #24
 800e53c:	2000358c 	andcs	r3, r0, ip, lsl #11
 800e540:	40013400 	andmi	r3, r1, r0, lsl #8
 800e544:	40013000 	andmi	r3, r1, r0
 800e548:	080173e0 	stmdaeq	r1, {r5, r6, r7, r8, r9, ip, sp, lr}
 800e54c:	20003590 	mulcs	r0, r0, r5

0800e550 <WS28xxMulti::Blackout()>:
 800e550:	b510      	push	{r4, lr}
 800e552:	4c0c      	ldr	r4, [pc, #48]	; (800e584 <WS28xxMulti::Blackout()+0x34>)
 800e554:	f3bf 8f5f 	dmb	sy
 800e558:	7822      	ldrb	r2, [r4, #0]
 800e55a:	f002 03ff 	and.w	r3, r2, #255	; 0xff
 800e55e:	2a00      	cmp	r2, #0
 800e560:	d1f8      	bne.n	800e554 <WS28xxMulti::Blackout()+0x4>
 800e562:	21c0      	movs	r1, #192	; 0xc0
 800e564:	4a08      	ldr	r2, [pc, #32]	; (800e588 <WS28xxMulti::Blackout()+0x38>)
 800e566:	3301      	adds	r3, #1
 800e568:	f5b3 5f70 	cmp.w	r3, #15360	; 0x3c00
 800e56c:	f822 1b02 	strh.w	r1, [r2], #2
 800e570:	d1f9      	bne.n	800e566 <WS28xxMulti::Blackout()+0x16>
 800e572:	f7ff ff7d 	bl	800e470 <WS28xxMulti::Update()>
 800e576:	f3bf 8f5f 	dmb	sy
 800e57a:	7823      	ldrb	r3, [r4, #0]
 800e57c:	2b00      	cmp	r3, #0
 800e57e:	d1fa      	bne.n	800e576 <WS28xxMulti::Blackout()+0x26>
 800e580:	bd10      	pop	{r4, pc}
 800e582:	bf00      	nop
 800e584:	2000358c 	andcs	r3, r0, ip, lsl #11
 800e588:	20003590 	mulcs	r0, r0, r5

0800e58c <WS28xxMulti::IsUpdating()>:
 800e58c:	f3bf 8f5f 	dmb	sy
 800e590:	4b01      	ldr	r3, [pc, #4]	; (800e598 <WS28xxMulti::IsUpdating()+0xc>)
 800e592:	7818      	ldrb	r0, [r3, #0]
 800e594:	4770      	bx	lr
 800e596:	bf00      	nop
 800e598:	2000358c 	andcs	r3, r0, ip, lsl #11

0800e59c <WS28xxMulti::SetColour(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>:
 800e59c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e59e:	f04f 0c80 	mov.w	ip, #128	; 0x80
 800e5a2:	2400      	movs	r4, #0
 800e5a4:	2501      	movs	r5, #1
 800e5a6:	4f1a      	ldr	r7, [pc, #104]	; (800e610 <WS28xxMulti::SetColour(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x74>)
 800e5a8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800e5ac:	4819      	ldr	r0, [pc, #100]	; (800e614 <WS28xxMulti::SetColour(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x78>)
 800e5ae:	eb07 1702 	add.w	r7, r7, r2, lsl #4
 800e5b2:	3106      	adds	r1, #6
 800e5b4:	b2c9      	uxtb	r1, r1
 800e5b6:	4438      	add	r0, r7
 800e5b8:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
 800e5bc:	f101 6108 	add.w	r1, r1, #142606336	; 0x8800000
 800e5c0:	f501 71c0 	add.w	r1, r1, #384	; 0x180
 800e5c4:	eb01 01c7 	add.w	r1, r1, r7, lsl #3
 800e5c8:	f89d e014 	ldrb.w	lr, [sp, #20]
 800e5cc:	f89d 6018 	ldrb.w	r6, [sp, #24]
 800e5d0:	0092      	lsls	r2, r2, #2
 800e5d2:	0089      	lsls	r1, r1, #2
 800e5d4:	ea13 0f0c 	tst.w	r3, ip
 800e5d8:	f5a2 6080 	sub.w	r0, r2, #1024	; 0x400
 800e5dc:	bf16      	itet	ne
 800e5de:	f5a2 6080 	subne.w	r0, r2, #1024	; 0x400
 800e5e2:	6005      	streq	r5, [r0, #0]
 800e5e4:	6004      	strne	r4, [r0, #0]
 800e5e6:	ea1e 0f0c 	tst.w	lr, ip
 800e5ea:	f5a2 7000 	sub.w	r0, r2, #512	; 0x200
 800e5ee:	bf16      	itet	ne
 800e5f0:	f5a2 7000 	subne.w	r0, r2, #512	; 0x200
 800e5f4:	6005      	streq	r5, [r0, #0]
 800e5f6:	6004      	strne	r4, [r0, #0]
 800e5f8:	ea16 0f0c 	tst.w	r6, ip
 800e5fc:	bf0c      	ite	eq
 800e5fe:	6015      	streq	r5, [r2, #0]
 800e600:	6014      	strne	r4, [r2, #0]
 800e602:	3240      	adds	r2, #64	; 0x40
 800e604:	4291      	cmp	r1, r2
 800e606:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
 800e60a:	d1e3      	bne.n	800e5d4 <WS28xxMulti::SetColour(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x38>
 800e60c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e60e:	bf00      	nop
 800e610:	20003590 	mulcs	r0, r0, r5
 800e614:	e1100020 	tst	r0, r0, lsr #32

0800e618 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>:
 800e618:	b470      	push	{r4, r5, r6}
 800e61a:	461c      	mov	r4, r3
 800e61c:	6883      	ldr	r3, [r0, #8]
 800e61e:	f89d 500c 	ldrb.w	r5, [sp, #12]
 800e622:	f89d 6010 	ldrb.w	r6, [sp, #16]
 800e626:	2b05      	cmp	r3, #5
 800e628:	d80a      	bhi.n	800e640 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x28>
 800e62a:	e8df f003 	tbb	[pc, r3]
 800e62e:	1b18120f 	blne	8612e72 <__exidx_end+0x5faec6>
 800e632:	46330903 	ldrtmi	r0, [r3], -r3, lsl #18
 800e636:	9504      	str	r5, [sp, #16]
 800e638:	9403      	str	r4, [sp, #12]
 800e63a:	bc70      	pop	{r4, r5, r6}
 800e63c:	f7ff bfae 	b.w	800e59c <WS28xxMulti::SetColour(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 800e640:	4633      	mov	r3, r6
 800e642:	9404      	str	r4, [sp, #16]
 800e644:	9503      	str	r5, [sp, #12]
 800e646:	bc70      	pop	{r4, r5, r6}
 800e648:	f7ff bfa8 	b.w	800e59c <WS28xxMulti::SetColour(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 800e64c:	4623      	mov	r3, r4
 800e64e:	9604      	str	r6, [sp, #16]
 800e650:	e7f8      	b.n	800e644 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x2c>
 800e652:	4623      	mov	r3, r4
 800e654:	9504      	str	r5, [sp, #16]
 800e656:	9603      	str	r6, [sp, #12]
 800e658:	bc70      	pop	{r4, r5, r6}
 800e65a:	f7ff bf9f 	b.w	800e59c <WS28xxMulti::SetColour(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)>
 800e65e:	462b      	mov	r3, r5
 800e660:	9604      	str	r6, [sp, #16]
 800e662:	e7e9      	b.n	800e638 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x20>
 800e664:	462b      	mov	r3, r5
 800e666:	9404      	str	r4, [sp, #16]
 800e668:	e7f5      	b.n	800e656 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char)+0x3e>
 800e66a:	bf00      	nop

0800e66c <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)>:
 800e66c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e66e:	2080      	movs	r0, #128	; 0x80
 800e670:	2400      	movs	r4, #0
 800e672:	2501      	movs	r5, #1
 800e674:	4e1a      	ldr	r6, [pc, #104]	; (800e6e0 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)+0x74>)
 800e676:	3106      	adds	r1, #6
 800e678:	eb06 1682 	add.w	r6, r6, r2, lsl #6
 800e67c:	4a19      	ldr	r2, [pc, #100]	; (800e6e4 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)+0x78>)
 800e67e:	b2c9      	uxtb	r1, r1
 800e680:	4432      	add	r2, r6
 800e682:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
 800e686:	f101 6108 	add.w	r1, r1, #142606336	; 0x8800000
 800e68a:	f501 7100 	add.w	r1, r1, #512	; 0x200
 800e68e:	eb01 01c6 	add.w	r1, r1, r6, lsl #3
 800e692:	f89d c014 	ldrb.w	ip, [sp, #20]
 800e696:	f89d e018 	ldrb.w	lr, [sp, #24]
 800e69a:	f89d 601c 	ldrb.w	r6, [sp, #28]
 800e69e:	0092      	lsls	r2, r2, #2
 800e6a0:	0089      	lsls	r1, r1, #2
 800e6a2:	f5a2 67c0 	sub.w	r7, r2, #1536	; 0x600
 800e6a6:	ea1c 0f00 	tst.w	ip, r0
 800e6aa:	bf0c      	ite	eq
 800e6ac:	603d      	streq	r5, [r7, #0]
 800e6ae:	603c      	strne	r4, [r7, #0]
 800e6b0:	f5a2 6780 	sub.w	r7, r2, #1024	; 0x400
 800e6b4:	4203      	tst	r3, r0
 800e6b6:	bf0c      	ite	eq
 800e6b8:	603d      	streq	r5, [r7, #0]
 800e6ba:	603c      	strne	r4, [r7, #0]
 800e6bc:	ea1e 0f00 	tst.w	lr, r0
 800e6c0:	f5a2 7700 	sub.w	r7, r2, #512	; 0x200
 800e6c4:	bf0c      	ite	eq
 800e6c6:	603d      	streq	r5, [r7, #0]
 800e6c8:	603c      	strne	r4, [r7, #0]
 800e6ca:	4206      	tst	r6, r0
 800e6cc:	bf0c      	ite	eq
 800e6ce:	6015      	streq	r5, [r2, #0]
 800e6d0:	6014      	strne	r4, [r2, #0]
 800e6d2:	3240      	adds	r2, #64	; 0x40
 800e6d4:	4291      	cmp	r1, r2
 800e6d6:	ea4f 0050 	mov.w	r0, r0, lsr #1
 800e6da:	d1e2      	bne.n	800e6a2 <WS28xxMulti::SetPixel(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)+0x36>
 800e6dc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e6de:	bf00      	nop
 800e6e0:	20003590 	mulcs	r0, r0, r5
 800e6e4:	e1100030 	tst	r0, r0, lsr r0

0800e6e8 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>:
 800e6e8:	2300      	movs	r3, #0
 800e6ea:	2020      	movs	r0, #32
 800e6ec:	b510      	push	{r4, lr}
 800e6ee:	4a04      	ldr	r2, [pc, #16]	; (800e700 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x18>)
 800e6f0:	428b      	cmp	r3, r1
 800e6f2:	d004      	beq.n	800e6fe <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x16>
 800e6f4:	f852 4b04 	ldr.w	r4, [r2], #4
 800e6f8:	3301      	adds	r3, #1
 800e6fa:	4420      	add	r0, r4
 800e6fc:	e7f8      	b.n	800e6f0 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)+0x8>
 800e6fe:	bd10      	pop	{r4, pc}
 800e700:	080173e4 	stmdaeq	r1, {r2, r5, r6, r7, r8, r9, ip, sp, lr}

0800e704 <SpiFlashStore::Init()>:
 800e704:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e708:	f8df 8120 	ldr.w	r8, [pc, #288]	; 800e82c <SpiFlashStore::Init()+0x128>
 800e70c:	4607      	mov	r7, r0
 800e70e:	b085      	sub	sp, #20
 800e710:	f8d8 0000 	ldr.w	r0, [r8]
 800e714:	f000 fc2a 	bl	800ef6c <FlashRom::GetSectorSize() const>
 800e718:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
 800e71c:	4605      	mov	r5, r0
 800e71e:	f040 8083 	bne.w	800e828 <SpiFlashStore::Init()+0x124>
 800e722:	f8d8 0000 	ldr.w	r0, [r8]
 800e726:	f000 fc19 	bl	800ef5c <FlashRom::GetSize() const>
 800e72a:	4b41      	ldr	r3, [pc, #260]	; (800e830 <SpiFlashStore::Init()+0x12c>)
 800e72c:	f5a0 5180 	sub.w	r1, r0, #4096	; 0x1000
 800e730:	f3c1 060b 	ubfx	r6, r1, #0, #12
 800e734:	6019      	str	r1, [r3, #0]
 800e736:	2e00      	cmp	r6, #0
 800e738:	d176      	bne.n	800e828 <SpiFlashStore::Init()+0x124>
 800e73a:	4c3e      	ldr	r4, [pc, #248]	; (800e834 <SpiFlashStore::Init()+0x130>)
 800e73c:	ab03      	add	r3, sp, #12
 800e73e:	9300      	str	r3, [sp, #0]
 800e740:	462a      	mov	r2, r5
 800e742:	4623      	mov	r3, r4
 800e744:	f8d8 0000 	ldr.w	r0, [r8]
 800e748:	f000 fc13 	bl	800ef72 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)>
 800e74c:	7823      	ldrb	r3, [r4, #0]
 800e74e:	2b41      	cmp	r3, #65	; 0x41
 800e750:	bf1c      	itt	ne
 800e752:	2341      	movne	r3, #65	; 0x41
 800e754:	7023      	strbne	r3, [r4, #0]
 800e756:	7863      	ldrb	r3, [r4, #1]
 800e758:	bf14      	ite	ne
 800e75a:	4635      	movne	r5, r6
 800e75c:	2501      	moveq	r5, #1
 800e75e:	2b76      	cmp	r3, #118	; 0x76
 800e760:	bf1c      	itt	ne
 800e762:	2376      	movne	r3, #118	; 0x76
 800e764:	7063      	strbne	r3, [r4, #1]
 800e766:	78a3      	ldrb	r3, [r4, #2]
 800e768:	bf18      	it	ne
 800e76a:	2500      	movne	r5, #0
 800e76c:	2b56      	cmp	r3, #86	; 0x56
 800e76e:	bf1c      	itt	ne
 800e770:	2356      	movne	r3, #86	; 0x56
 800e772:	70a3      	strbne	r3, [r4, #2]
 800e774:	78e3      	ldrb	r3, [r4, #3]
 800e776:	bf18      	it	ne
 800e778:	2500      	movne	r5, #0
 800e77a:	2b10      	cmp	r3, #16
 800e77c:	d01c      	beq.n	800e7b8 <SpiFlashStore::Init()+0xb4>
 800e77e:	2310      	movs	r3, #16
 800e780:	70e3      	strb	r3, [r4, #3]
 800e782:	2201      	movs	r2, #1
 800e784:	2500      	movs	r5, #0
 800e786:	f04f 09ff 	mov.w	r9, #255	; 0xff
 800e78a:	4b2b      	ldr	r3, [pc, #172]	; (800e838 <SpiFlashStore::Init()+0x134>)
 800e78c:	f8df 80ac 	ldr.w	r8, [pc, #172]	; 800e83c <SpiFlashStore::Init()+0x138>
 800e790:	701a      	strb	r2, [r3, #0]
 800e792:	4631      	mov	r1, r6
 800e794:	4638      	mov	r0, r7
 800e796:	f7ff ffa7 	bl	800e6e8 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800e79a:	1823      	adds	r3, r4, r0
 800e79c:	5425      	strb	r5, [r4, r0]
 800e79e:	705d      	strb	r5, [r3, #1]
 800e7a0:	709d      	strb	r5, [r3, #2]
 800e7a2:	70dd      	strb	r5, [r3, #3]
 800e7a4:	f858 3b04 	ldr.w	r3, [r8], #4
 800e7a8:	1d02      	adds	r2, r0, #4
 800e7aa:	4403      	add	r3, r0
 800e7ac:	4293      	cmp	r3, r2
 800e7ae:	d931      	bls.n	800e814 <SpiFlashStore::Init()+0x110>
 800e7b0:	f804 9002 	strb.w	r9, [r4, r2]
 800e7b4:	3201      	adds	r2, #1
 800e7b6:	e7f9      	b.n	800e7ac <SpiFlashStore::Init()+0xa8>
 800e7b8:	2d00      	cmp	r5, #0
 800e7ba:	d0e2      	beq.n	800e782 <SpiFlashStore::Init()+0x7e>
 800e7bc:	f04f 0900 	mov.w	r9, #0
 800e7c0:	46c8      	mov	r8, r9
 800e7c2:	f8df a07c 	ldr.w	sl, [pc, #124]	; 800e840 <SpiFlashStore::Init()+0x13c>
 800e7c6:	f8da b000 	ldr.w	fp, [sl]
 800e7ca:	4631      	mov	r1, r6
 800e7cc:	4638      	mov	r0, r7
 800e7ce:	f7ff ff8b 	bl	800e6e8 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800e7d2:	5c23      	ldrb	r3, [r4, r0]
 800e7d4:	2bff      	cmp	r3, #255	; 0xff
 800e7d6:	d114      	bne.n	800e802 <SpiFlashStore::Init()+0xfe>
 800e7d8:	1823      	adds	r3, r4, r0
 800e7da:	785a      	ldrb	r2, [r3, #1]
 800e7dc:	2aff      	cmp	r2, #255	; 0xff
 800e7de:	d110      	bne.n	800e802 <SpiFlashStore::Init()+0xfe>
 800e7e0:	789a      	ldrb	r2, [r3, #2]
 800e7e2:	2aff      	cmp	r2, #255	; 0xff
 800e7e4:	d10d      	bne.n	800e802 <SpiFlashStore::Init()+0xfe>
 800e7e6:	78da      	ldrb	r2, [r3, #3]
 800e7e8:	2aff      	cmp	r2, #255	; 0xff
 800e7ea:	d10a      	bne.n	800e802 <SpiFlashStore::Init()+0xfe>
 800e7ec:	46a9      	mov	r9, r5
 800e7ee:	f04f 0b01 	mov.w	fp, #1
 800e7f2:	f804 8000 	strb.w	r8, [r4, r0]
 800e7f6:	f883 8001 	strb.w	r8, [r3, #1]
 800e7fa:	f883 8002 	strb.w	r8, [r3, #2]
 800e7fe:	f883 8003 	strb.w	r8, [r3, #3]
 800e802:	3601      	adds	r6, #1
 800e804:	2e1c      	cmp	r6, #28
 800e806:	d1e0      	bne.n	800e7ca <SpiFlashStore::Init()+0xc6>
 800e808:	f1b9 0f00 	cmp.w	r9, #0
 800e80c:	d008      	beq.n	800e820 <SpiFlashStore::Init()+0x11c>
 800e80e:	f8ca b000 	str.w	fp, [sl]
 800e812:	e005      	b.n	800e820 <SpiFlashStore::Init()+0x11c>
 800e814:	3601      	adds	r6, #1
 800e816:	2e1c      	cmp	r6, #28
 800e818:	d1bb      	bne.n	800e792 <SpiFlashStore::Init()+0x8e>
 800e81a:	2501      	movs	r5, #1
 800e81c:	4b08      	ldr	r3, [pc, #32]	; (800e840 <SpiFlashStore::Init()+0x13c>)
 800e81e:	601d      	str	r5, [r3, #0]
 800e820:	4628      	mov	r0, r5
 800e822:	b005      	add	sp, #20
 800e824:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e828:	2500      	movs	r5, #0
 800e82a:	e7f9      	b.n	800e820 <SpiFlashStore::Init()+0x11c>
 800e82c:	2000bdc8 	andcs	fp, r0, r8, asr #27
 800e830:	2000bd98 	mulcs	r0, r8, sp
 800e834:	2000ad98 	mulcs	r0, r8, sp
 800e838:	2000bdac 	andcs	fp, r0, ip, lsr #27
 800e83c:	080173e4 	stmdaeq	r1, {r2, r5, r6, r7, r8, r9, ip, sp, lr}
 800e840:	2000bda4 	andcs	fp, r0, r4, lsr #27

0800e844 <SpiFlashStore::SpiFlashStore()>:
 800e844:	b538      	push	{r3, r4, r5, lr}
 800e846:	4b0d      	ldr	r3, [pc, #52]	; (800e87c <SpiFlashStore::SpiFlashStore()+0x38>)
 800e848:	4604      	mov	r4, r0
 800e84a:	6018      	str	r0, [r3, #0]
 800e84c:	4b0c      	ldr	r3, [pc, #48]	; (800e880 <SpiFlashStore::SpiFlashStore()+0x3c>)
 800e84e:	4d0d      	ldr	r5, [pc, #52]	; (800e884 <SpiFlashStore::SpiFlashStore()+0x40>)
 800e850:	681b      	ldr	r3, [r3, #0]
 800e852:	781b      	ldrb	r3, [r3, #0]
 800e854:	b113      	cbz	r3, 800e85c <SpiFlashStore::SpiFlashStore()+0x18>
 800e856:	f7ff ff55 	bl	800e704 <SpiFlashStore::Init()>
 800e85a:	7028      	strb	r0, [r5, #0]
 800e85c:	782b      	ldrb	r3, [r5, #0]
 800e85e:	b153      	cbz	r3, 800e876 <SpiFlashStore::SpiFlashStore()+0x32>
 800e860:	2320      	movs	r3, #32
 800e862:	2200      	movs	r2, #0
 800e864:	4908      	ldr	r1, [pc, #32]	; (800e888 <SpiFlashStore::SpiFlashStore()+0x44>)
 800e866:	f851 0b04 	ldr.w	r0, [r1], #4
 800e86a:	3201      	adds	r2, #1
 800e86c:	2a1c      	cmp	r2, #28
 800e86e:	4403      	add	r3, r0
 800e870:	d1f9      	bne.n	800e866 <SpiFlashStore::SpiFlashStore()+0x22>
 800e872:	4a06      	ldr	r2, [pc, #24]	; (800e88c <SpiFlashStore::SpiFlashStore()+0x48>)
 800e874:	6013      	str	r3, [r2, #0]
 800e876:	4620      	mov	r0, r4
 800e878:	bd38      	pop	{r3, r4, r5, pc}
 800e87a:	bf00      	nop
 800e87c:	2000bda8 	andcs	fp, r0, r8, lsr #27
 800e880:	2000bdc8 	andcs	fp, r0, r8, asr #27
 800e884:	2000bd9c 	mulcs	r0, ip, sp
 800e888:	080173e4 	stmdaeq	r1, {r2, r5, r6, r7, r8, r9, ip, sp, lr}
 800e88c:	2000bda0 	andcs	fp, r0, r0, lsr #27

0800e890 <SpiFlashStore::ResetSetList(spiflashstore::Store)>:
 800e890:	b508      	push	{r3, lr}
 800e892:	f7ff ff29 	bl	800e6e8 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800e896:	2300      	movs	r3, #0
 800e898:	4904      	ldr	r1, [pc, #16]	; (800e8ac <SpiFlashStore::ResetSetList(spiflashstore::Store)+0x1c>)
 800e89a:	1842      	adds	r2, r0, r1
 800e89c:	540b      	strb	r3, [r1, r0]
 800e89e:	7053      	strb	r3, [r2, #1]
 800e8a0:	7093      	strb	r3, [r2, #2]
 800e8a2:	70d3      	strb	r3, [r2, #3]
 800e8a4:	2201      	movs	r2, #1
 800e8a6:	4b02      	ldr	r3, [pc, #8]	; (800e8b0 <SpiFlashStore::ResetSetList(spiflashstore::Store)+0x20>)
 800e8a8:	601a      	str	r2, [r3, #0]
 800e8aa:	bd08      	pop	{r3, pc}
 800e8ac:	2000ad98 	mulcs	r0, r8, sp
 800e8b0:	2000bda4 	andcs	fp, r0, r4, lsr #27

0800e8b4 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>:
 800e8b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e8b8:	461c      	mov	r4, r3
 800e8ba:	4b19      	ldr	r3, [pc, #100]	; (800e920 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x6c>)
 800e8bc:	4615      	mov	r5, r2
 800e8be:	781f      	ldrb	r7, [r3, #0]
 800e8c0:	9e07      	ldr	r6, [sp, #28]
 800e8c2:	b35f      	cbz	r7, 800e91c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x68>
 800e8c4:	f7ff ff10 	bl	800e6e8 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800e8c8:	f04f 0c00 	mov.w	ip, #0
 800e8cc:	4a15      	ldr	r2, [pc, #84]	; (800e924 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x70>)
 800e8ce:	1941      	adds	r1, r0, r5
 800e8d0:	1e63      	subs	r3, r4, #1
 800e8d2:	9c06      	ldr	r4, [sp, #24]
 800e8d4:	4411      	add	r1, r2
 800e8d6:	440c      	add	r4, r1
 800e8d8:	42a1      	cmp	r1, r4
 800e8da:	d00a      	beq.n	800e8f2 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x3e>
 800e8dc:	f891 8000 	ldrb.w	r8, [r1]
 800e8e0:	f813 ef01 	ldrb.w	lr, [r3, #1]!
 800e8e4:	3101      	adds	r1, #1
 800e8e6:	45f0      	cmp	r8, lr
 800e8e8:	bf1c      	itt	ne
 800e8ea:	f801 ec01 	strbne.w	lr, [r1, #-1]
 800e8ee:	46bc      	movne	ip, r7
 800e8f0:	e7f2      	b.n	800e8d8 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x24>
 800e8f2:	f1bc 0f00 	cmp.w	ip, #0
 800e8f6:	d011      	beq.n	800e91c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x68>
 800e8f8:	4b0b      	ldr	r3, [pc, #44]	; (800e928 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x74>)
 800e8fa:	6819      	ldr	r1, [r3, #0]
 800e8fc:	b109      	cbz	r1, 800e902 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x4e>
 800e8fe:	2906      	cmp	r1, #6
 800e900:	d101      	bne.n	800e906 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x52>
 800e902:	2101      	movs	r1, #1
 800e904:	6019      	str	r1, [r3, #0]
 800e906:	4b09      	ldr	r3, [pc, #36]	; (800e92c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x78>)
 800e908:	6819      	ldr	r1, [r3, #0]
 800e90a:	4b09      	ldr	r3, [pc, #36]	; (800e930 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x7c>)
 800e90c:	6019      	str	r1, [r3, #0]
 800e90e:	b12d      	cbz	r5, 800e91c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x68>
 800e910:	b126      	cbz	r6, 800e91c <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)+0x68>
 800e912:	9b08      	ldr	r3, [sp, #32]
 800e914:	4418      	add	r0, r3
 800e916:	5813      	ldr	r3, [r2, r0]
 800e918:	4333      	orrs	r3, r6
 800e91a:	5013      	str	r3, [r2, r0]
 800e91c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e920:	2000bd9c 	mulcs	r0, ip, sp
 800e924:	2000ad98 	mulcs	r0, r8, sp
 800e928:	2000bda4 	andcs	fp, r0, r4, lsr #27
 800e92c:	20013df4 	strdcs	r3, [r1], -r4
 800e930:	2000ad94 	mulcs	r0, r4, sp

0800e934 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>:
 800e934:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e938:	461d      	mov	r5, r3
 800e93a:	4b15      	ldr	r3, [pc, #84]	; (800e990 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x5c>)
 800e93c:	b085      	sub	sp, #20
 800e93e:	781b      	ldrb	r3, [r3, #0]
 800e940:	4607      	mov	r7, r0
 800e942:	4688      	mov	r8, r1
 800e944:	4614      	mov	r4, r2
 800e946:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 800e94a:	b1eb      	cbz	r3, 800e988 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x54>
 800e94c:	f7ff fecc 	bl	800e6e8 <SpiFlashStore::GetStoreOffset(spiflashstore::Store)>
 800e950:	4910      	ldr	r1, [pc, #64]	; (800e994 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x60>)
 800e952:	4a11      	ldr	r2, [pc, #68]	; (800e998 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x64>)
 800e954:	7809      	ldrb	r1, [r1, #0]
 800e956:	eb00 0309 	add.w	r3, r0, r9
 800e95a:	189e      	adds	r6, r3, r2
 800e95c:	b951      	cbnz	r1, 800e974 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x40>
 800e95e:	589b      	ldr	r3, [r3, r2]
 800e960:	b143      	cbz	r3, 800e974 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x40>
 800e962:	3c01      	subs	r4, #1
 800e964:	4435      	add	r5, r6
 800e966:	42b5      	cmp	r5, r6
 800e968:	d00e      	beq.n	800e988 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x54>
 800e96a:	f816 3b01 	ldrb.w	r3, [r6], #1
 800e96e:	f804 3f01 	strb.w	r3, [r4, #1]!
 800e972:	e7f8      	b.n	800e966 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)+0x32>
 800e974:	2300      	movs	r3, #0
 800e976:	464a      	mov	r2, r9
 800e978:	e9cd 3301 	strd	r3, r3, [sp, #4]
 800e97c:	4641      	mov	r1, r8
 800e97e:	4623      	mov	r3, r4
 800e980:	4638      	mov	r0, r7
 800e982:	9500      	str	r5, [sp, #0]
 800e984:	f7ff ff96 	bl	800e8b4 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800e988:	b005      	add	sp, #20
 800e98a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e98e:	bf00      	nop
 800e990:	2000bd9c 	mulcs	r0, ip, sp
 800e994:	2000bdac 	andcs	fp, r0, ip, lsr #27
 800e998:	2000ad98 	mulcs	r0, r8, sp

0800e99c <SpiFlashStore::Flash()>:
 800e99c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800e99e:	4c25      	ldr	r4, [pc, #148]	; (800ea34 <SpiFlashStore::Flash()+0x98>)
 800e9a0:	6820      	ldr	r0, [r4, #0]
 800e9a2:	2800      	cmp	r0, #0
 800e9a4:	d043      	beq.n	800ea2e <SpiFlashStore::Flash()+0x92>
 800e9a6:	3801      	subs	r0, #1
 800e9a8:	2805      	cmp	r0, #5
 800e9aa:	d831      	bhi.n	800ea10 <SpiFlashStore::Flash()+0x74>
 800e9ac:	e8df f000 	tbb	[pc, r0]
 800e9b0:	2e140b03 	vnmlscs.f64	d0, d4, d3
 800e9b4:	4b203025 	blmi	881aa50 <__exidx_end+0x802aa4>
 800e9b8:	681a      	ldr	r2, [r3, #0]
 800e9ba:	4b20      	ldr	r3, [pc, #128]	; (800ea3c <SpiFlashStore::Flash()+0xa0>)
 800e9bc:	601a      	str	r2, [r3, #0]
 800e9be:	2302      	movs	r3, #2
 800e9c0:	6023      	str	r3, [r4, #0]
 800e9c2:	2001      	movs	r0, #1
 800e9c4:	e033      	b.n	800ea2e <SpiFlashStore::Flash()+0x92>
 800e9c6:	4b1c      	ldr	r3, [pc, #112]	; (800ea38 <SpiFlashStore::Flash()+0x9c>)
 800e9c8:	4a1c      	ldr	r2, [pc, #112]	; (800ea3c <SpiFlashStore::Flash()+0xa0>)
 800e9ca:	681b      	ldr	r3, [r3, #0]
 800e9cc:	6812      	ldr	r2, [r2, #0]
 800e9ce:	1a9b      	subs	r3, r3, r2
 800e9d0:	2b63      	cmp	r3, #99	; 0x63
 800e9d2:	d9f6      	bls.n	800e9c2 <SpiFlashStore::Flash()+0x26>
 800e9d4:	2303      	movs	r3, #3
 800e9d6:	e7f3      	b.n	800e9c0 <SpiFlashStore::Flash()+0x24>
 800e9d8:	4919      	ldr	r1, [pc, #100]	; (800ea40 <SpiFlashStore::Flash()+0xa4>)
 800e9da:	481a      	ldr	r0, [pc, #104]	; (800ea44 <SpiFlashStore::Flash()+0xa8>)
 800e9dc:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 800e9e0:	6809      	ldr	r1, [r1, #0]
 800e9e2:	6800      	ldr	r0, [r0, #0]
 800e9e4:	ab03      	add	r3, sp, #12
 800e9e6:	f000 fad3 	bl	800ef90 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)>
 800e9ea:	2800      	cmp	r0, #0
 800e9ec:	d0e9      	beq.n	800e9c2 <SpiFlashStore::Flash()+0x26>
 800e9ee:	4b12      	ldr	r3, [pc, #72]	; (800ea38 <SpiFlashStore::Flash()+0x9c>)
 800e9f0:	681a      	ldr	r2, [r3, #0]
 800e9f2:	4b12      	ldr	r3, [pc, #72]	; (800ea3c <SpiFlashStore::Flash()+0xa0>)
 800e9f4:	601a      	str	r2, [r3, #0]
 800e9f6:	2305      	movs	r3, #5
 800e9f8:	e7e2      	b.n	800e9c0 <SpiFlashStore::Flash()+0x24>
 800e9fa:	4b0f      	ldr	r3, [pc, #60]	; (800ea38 <SpiFlashStore::Flash()+0x9c>)
 800e9fc:	4a0f      	ldr	r2, [pc, #60]	; (800ea3c <SpiFlashStore::Flash()+0xa0>)
 800e9fe:	681b      	ldr	r3, [r3, #0]
 800ea00:	6812      	ldr	r2, [r2, #0]
 800ea02:	1a9b      	subs	r3, r3, r2
 800ea04:	2b63      	cmp	r3, #99	; 0x63
 800ea06:	d9dc      	bls.n	800e9c2 <SpiFlashStore::Flash()+0x26>
 800ea08:	2304      	movs	r3, #4
 800ea0a:	e7d9      	b.n	800e9c0 <SpiFlashStore::Flash()+0x24>
 800ea0c:	2306      	movs	r3, #6
 800ea0e:	e7d7      	b.n	800e9c0 <SpiFlashStore::Flash()+0x24>
 800ea10:	ab03      	add	r3, sp, #12
 800ea12:	4a0d      	ldr	r2, [pc, #52]	; (800ea48 <SpiFlashStore::Flash()+0xac>)
 800ea14:	490a      	ldr	r1, [pc, #40]	; (800ea40 <SpiFlashStore::Flash()+0xa4>)
 800ea16:	480b      	ldr	r0, [pc, #44]	; (800ea44 <SpiFlashStore::Flash()+0xa8>)
 800ea18:	9300      	str	r3, [sp, #0]
 800ea1a:	6812      	ldr	r2, [r2, #0]
 800ea1c:	4b0b      	ldr	r3, [pc, #44]	; (800ea4c <SpiFlashStore::Flash()+0xb0>)
 800ea1e:	6809      	ldr	r1, [r1, #0]
 800ea20:	6800      	ldr	r0, [r0, #0]
 800ea22:	f000 fb55 	bl	800f0d0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)>
 800ea26:	2800      	cmp	r0, #0
 800ea28:	d0cb      	beq.n	800e9c2 <SpiFlashStore::Flash()+0x26>
 800ea2a:	2000      	movs	r0, #0
 800ea2c:	6020      	str	r0, [r4, #0]
 800ea2e:	b004      	add	sp, #16
 800ea30:	bd10      	pop	{r4, pc}
 800ea32:	bf00      	nop
 800ea34:	2000bda4 	andcs	fp, r0, r4, lsr #27
 800ea38:	20013df4 	strdcs	r3, [r1], -r4
 800ea3c:	2000ad94 	mulcs	r0, r4, sp
 800ea40:	2000bd98 	mulcs	r0, r8, sp
 800ea44:	2000bdc8 	andcs	fp, r0, r8, asr #27
 800ea48:	2000bda0 	andcs	fp, r0, r0, lsr #27
 800ea4c:	2000ad98 	mulcs	r0, r8, sp

0800ea50 <StoreDisplayUdf::~StoreDisplayUdf()>:
 800ea50:	4770      	bx	lr
	...

0800ea54 <StoreDisplayUdf::Copy(displayudfparams::Params*)>:
 800ea54:	2300      	movs	r3, #0
 800ea56:	b507      	push	{r0, r1, r2, lr}
 800ea58:	4805      	ldr	r0, [pc, #20]	; (800ea70 <StoreDisplayUdf::Copy(displayudfparams::Params*)+0x1c>)
 800ea5a:	9300      	str	r3, [sp, #0]
 800ea5c:	460a      	mov	r2, r1
 800ea5e:	2322      	movs	r3, #34	; 0x22
 800ea60:	210f      	movs	r1, #15
 800ea62:	6800      	ldr	r0, [r0, #0]
 800ea64:	f7ff ff66 	bl	800e934 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800ea68:	b003      	add	sp, #12
 800ea6a:	f85d fb04 	ldr.w	pc, [sp], #4
 800ea6e:	bf00      	nop
 800ea70:	2000bda8 	andcs	fp, r0, r8, lsr #27

0800ea74 <StoreDisplayUdf::Update(displayudfparams::Params const*)>:
 800ea74:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800ea76:	2200      	movs	r2, #0
 800ea78:	460b      	mov	r3, r1
 800ea7a:	2122      	movs	r1, #34	; 0x22
 800ea7c:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800ea80:	4804      	ldr	r0, [pc, #16]	; (800ea94 <StoreDisplayUdf::Update(displayudfparams::Params const*)+0x20>)
 800ea82:	9100      	str	r1, [sp, #0]
 800ea84:	6800      	ldr	r0, [r0, #0]
 800ea86:	210f      	movs	r1, #15
 800ea88:	f7ff ff14 	bl	800e8b4 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800ea8c:	b005      	add	sp, #20
 800ea8e:	f85d fb04 	ldr.w	pc, [sp], #4
 800ea92:	bf00      	nop
 800ea94:	2000bda8 	andcs	fp, r0, r8, lsr #27

0800ea98 <StoreDisplayUdf::~StoreDisplayUdf()>:
 800ea98:	b510      	push	{r4, lr}
 800ea9a:	4604      	mov	r4, r0
 800ea9c:	f004 fdb8 	bl	8013610 <operator delete(void*)>
 800eaa0:	4620      	mov	r0, r4
 800eaa2:	bd10      	pop	{r4, pc}

0800eaa4 <StoreDisplayUdf::StoreDisplayUdf()>:
 800eaa4:	4a02      	ldr	r2, [pc, #8]	; (800eab0 <StoreDisplayUdf::StoreDisplayUdf()+0xc>)
 800eaa6:	6002      	str	r2, [r0, #0]
 800eaa8:	4a02      	ldr	r2, [pc, #8]	; (800eab4 <StoreDisplayUdf::StoreDisplayUdf()+0x10>)
 800eaaa:	6010      	str	r0, [r2, #0]
 800eaac:	4770      	bx	lr
 800eaae:	bf00      	nop
 800eab0:	0801745c 	stmdaeq	r1, {r2, r3, r4, r6, sl, ip, sp, lr}
 800eab4:	2000bdb0 			; <UNDEFINED> instruction: 0x2000bdb0

0800eab8 <StoreE131::~StoreE131()>:
 800eab8:	4770      	bx	lr
	...

0800eabc <StoreE131::Copy(e131params::Params*)>:
 800eabc:	2300      	movs	r3, #0
 800eabe:	b507      	push	{r0, r1, r2, lr}
 800eac0:	4805      	ldr	r0, [pc, #20]	; (800ead8 <StoreE131::Copy(e131params::Params*)+0x1c>)
 800eac2:	9300      	str	r3, [sp, #0]
 800eac4:	460a      	mov	r2, r1
 800eac6:	231f      	movs	r3, #31
 800eac8:	2104      	movs	r1, #4
 800eaca:	6800      	ldr	r0, [r0, #0]
 800eacc:	f7ff ff32 	bl	800e934 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800ead0:	b003      	add	sp, #12
 800ead2:	f85d fb04 	ldr.w	pc, [sp], #4
 800ead6:	bf00      	nop
 800ead8:	2000bda8 	andcs	fp, r0, r8, lsr #27

0800eadc <StoreE131::Update(e131params::Params const*)>:
 800eadc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800eade:	2200      	movs	r2, #0
 800eae0:	460b      	mov	r3, r1
 800eae2:	211f      	movs	r1, #31
 800eae4:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800eae8:	4804      	ldr	r0, [pc, #16]	; (800eafc <StoreE131::Update(e131params::Params const*)+0x20>)
 800eaea:	9100      	str	r1, [sp, #0]
 800eaec:	6800      	ldr	r0, [r0, #0]
 800eaee:	2104      	movs	r1, #4
 800eaf0:	f7ff fee0 	bl	800e8b4 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800eaf4:	b005      	add	sp, #20
 800eaf6:	f85d fb04 	ldr.w	pc, [sp], #4
 800eafa:	bf00      	nop
 800eafc:	2000bda8 	andcs	fp, r0, r8, lsr #27

0800eb00 <StoreE131::~StoreE131()>:
 800eb00:	b510      	push	{r4, lr}
 800eb02:	4604      	mov	r4, r0
 800eb04:	f004 fd84 	bl	8013610 <operator delete(void*)>
 800eb08:	4620      	mov	r0, r4
 800eb0a:	bd10      	pop	{r4, pc}

0800eb0c <StoreE131::StoreE131()>:
 800eb0c:	4a02      	ldr	r2, [pc, #8]	; (800eb18 <StoreE131::StoreE131()+0xc>)
 800eb0e:	6002      	str	r2, [r0, #0]
 800eb10:	4a02      	ldr	r2, [pc, #8]	; (800eb1c <StoreE131::StoreE131()+0x10>)
 800eb12:	6010      	str	r0, [r2, #0]
 800eb14:	4770      	bx	lr
 800eb16:	bf00      	nop
 800eb18:	08017474 	stmdaeq	r1, {r2, r4, r5, r6, sl, ip, sp, lr}
 800eb1c:	2000bdb4 			; <UNDEFINED> instruction: 0x2000bdb4

0800eb20 <StoreNetwork::~StoreNetwork()>:
 800eb20:	4770      	bx	lr

0800eb22 <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 800eb22:	3804      	subs	r0, #4
 800eb24:	4770      	bx	lr
	...

0800eb28 <StoreNetwork::Update(TNetworkParams const*)>:
 800eb28:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800eb2a:	2200      	movs	r2, #0
 800eb2c:	460b      	mov	r3, r1
 800eb2e:	215e      	movs	r1, #94	; 0x5e
 800eb30:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800eb34:	4804      	ldr	r0, [pc, #16]	; (800eb48 <StoreNetwork::Update(TNetworkParams const*)+0x20>)
 800eb36:	9100      	str	r1, [sp, #0]
 800eb38:	6800      	ldr	r0, [r0, #0]
 800eb3a:	4611      	mov	r1, r2
 800eb3c:	f7ff feba 	bl	800e8b4 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800eb40:	b005      	add	sp, #20
 800eb42:	f85d fb04 	ldr.w	pc, [sp], #4
 800eb46:	bf00      	nop
 800eb48:	2000bda8 	andcs	fp, r0, r8, lsr #27

0800eb4c <StoreNetwork::SaveGatewayIp(unsigned int)>:
 800eb4c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800eb4e:	2308      	movs	r3, #8
 800eb50:	9105      	str	r1, [sp, #20]
 800eb52:	2100      	movs	r1, #0
 800eb54:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800eb58:	2304      	movs	r3, #4
 800eb5a:	4805      	ldr	r0, [pc, #20]	; (800eb70 <StoreNetwork::SaveGatewayIp(unsigned int)+0x24>)
 800eb5c:	9300      	str	r3, [sp, #0]
 800eb5e:	220c      	movs	r2, #12
 800eb60:	6800      	ldr	r0, [r0, #0]
 800eb62:	ab05      	add	r3, sp, #20
 800eb64:	f7ff fea6 	bl	800e8b4 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800eb68:	b007      	add	sp, #28
 800eb6a:	f85d fb04 	ldr.w	pc, [sp], #4
 800eb6e:	bf00      	nop
 800eb70:	2000bda8 	andcs	fp, r0, r8, lsr #27

0800eb74 <non-virtual thunk to StoreNetwork::SaveGatewayIp(unsigned int)>:
 800eb74:	f1a0 0004 	sub.w	r0, r0, #4
 800eb78:	e7e8      	b.n	800eb4c <StoreNetwork::SaveGatewayIp(unsigned int)>
 800eb7a:	bf00      	nop

0800eb7c <StoreNetwork::SaveNetMask(unsigned int)>:
 800eb7c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800eb7e:	2304      	movs	r3, #4
 800eb80:	9105      	str	r1, [sp, #20]
 800eb82:	2100      	movs	r1, #0
 800eb84:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800eb88:	4804      	ldr	r0, [pc, #16]	; (800eb9c <StoreNetwork::SaveNetMask(unsigned int)+0x20>)
 800eb8a:	9300      	str	r3, [sp, #0]
 800eb8c:	2208      	movs	r2, #8
 800eb8e:	6800      	ldr	r0, [r0, #0]
 800eb90:	ab05      	add	r3, sp, #20
 800eb92:	f7ff fe8f 	bl	800e8b4 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800eb96:	b007      	add	sp, #28
 800eb98:	f85d fb04 	ldr.w	pc, [sp], #4
 800eb9c:	2000bda8 	andcs	fp, r0, r8, lsr #27

0800eba0 <non-virtual thunk to StoreNetwork::SaveNetMask(unsigned int)>:
 800eba0:	f1a0 0004 	sub.w	r0, r0, #4
 800eba4:	e7ea      	b.n	800eb7c <StoreNetwork::SaveNetMask(unsigned int)>
 800eba6:	bf00      	nop

0800eba8 <StoreNetwork::SaveIp(unsigned int)>:
 800eba8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800ebaa:	2302      	movs	r3, #2
 800ebac:	9105      	str	r1, [sp, #20]
 800ebae:	2100      	movs	r1, #0
 800ebb0:	2204      	movs	r2, #4
 800ebb2:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800ebb6:	4804      	ldr	r0, [pc, #16]	; (800ebc8 <StoreNetwork::SaveIp(unsigned int)+0x20>)
 800ebb8:	9200      	str	r2, [sp, #0]
 800ebba:	6800      	ldr	r0, [r0, #0]
 800ebbc:	ab05      	add	r3, sp, #20
 800ebbe:	f7ff fe79 	bl	800e8b4 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800ebc2:	b007      	add	sp, #28
 800ebc4:	f85d fb04 	ldr.w	pc, [sp], #4
 800ebc8:	2000bda8 	andcs	fp, r0, r8, lsr #27

0800ebcc <non-virtual thunk to StoreNetwork::SaveIp(unsigned int)>:
 800ebcc:	f1a0 0004 	sub.w	r0, r0, #4
 800ebd0:	e7ea      	b.n	800eba8 <StoreNetwork::SaveIp(unsigned int)>
 800ebd2:	bf00      	nop

0800ebd4 <StoreNetwork::SaveHostName(char const*, unsigned int)>:
 800ebd4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800ebd6:	460b      	mov	r3, r1
 800ebd8:	2020      	movs	r0, #32
 800ebda:	2100      	movs	r1, #0
 800ebdc:	2a40      	cmp	r2, #64	; 0x40
 800ebde:	bf28      	it	cs
 800ebe0:	2240      	movcs	r2, #64	; 0x40
 800ebe2:	e9cd 0101 	strd	r0, r1, [sp, #4]
 800ebe6:	4804      	ldr	r0, [pc, #16]	; (800ebf8 <StoreNetwork::SaveHostName(char const*, unsigned int)+0x24>)
 800ebe8:	9200      	str	r2, [sp, #0]
 800ebea:	6800      	ldr	r0, [r0, #0]
 800ebec:	2215      	movs	r2, #21
 800ebee:	f7ff fe61 	bl	800e8b4 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800ebf2:	b005      	add	sp, #20
 800ebf4:	f85d fb04 	ldr.w	pc, [sp], #4
 800ebf8:	2000bda8 	andcs	fp, r0, r8, lsr #27

0800ebfc <non-virtual thunk to StoreNetwork::SaveHostName(char const*, unsigned int)>:
 800ebfc:	f1a0 0004 	sub.w	r0, r0, #4
 800ec00:	e7e8      	b.n	800ebd4 <StoreNetwork::SaveHostName(char const*, unsigned int)>
 800ec02:	bf00      	nop

0800ec04 <StoreNetwork::~StoreNetwork()>:
 800ec04:	b510      	push	{r4, lr}
 800ec06:	4604      	mov	r4, r0
 800ec08:	f004 fd02 	bl	8013610 <operator delete(void*)>
 800ec0c:	4620      	mov	r0, r4
 800ec0e:	bd10      	pop	{r4, pc}

0800ec10 <non-virtual thunk to StoreNetwork::~StoreNetwork()>:
 800ec10:	f1a0 0004 	sub.w	r0, r0, #4
 800ec14:	e7f6      	b.n	800ec04 <StoreNetwork::~StoreNetwork()>
	...

0800ec18 <StoreNetwork::Copy(TNetworkParams*)>:
 800ec18:	b507      	push	{r0, r1, r2, lr}
 800ec1a:	460a      	mov	r2, r1
 800ec1c:	2100      	movs	r1, #0
 800ec1e:	4804      	ldr	r0, [pc, #16]	; (800ec30 <StoreNetwork::Copy(TNetworkParams*)+0x18>)
 800ec20:	9100      	str	r1, [sp, #0]
 800ec22:	235e      	movs	r3, #94	; 0x5e
 800ec24:	6800      	ldr	r0, [r0, #0]
 800ec26:	f7ff fe85 	bl	800e934 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800ec2a:	b003      	add	sp, #12
 800ec2c:	f85d fb04 	ldr.w	pc, [sp], #4
 800ec30:	2000bda8 	andcs	fp, r0, r8, lsr #27

0800ec34 <StoreNetwork::StoreNetwork()>:
 800ec34:	4a03      	ldr	r2, [pc, #12]	; (800ec44 <StoreNetwork::StoreNetwork()+0x10>)
 800ec36:	6002      	str	r2, [r0, #0]
 800ec38:	322c      	adds	r2, #44	; 0x2c
 800ec3a:	6042      	str	r2, [r0, #4]
 800ec3c:	4a02      	ldr	r2, [pc, #8]	; (800ec48 <StoreNetwork::StoreNetwork()+0x14>)
 800ec3e:	6010      	str	r0, [r2, #0]
 800ec40:	4770      	bx	lr
 800ec42:	bf00      	nop
 800ec44:	0801748c 	stmdaeq	r1, {r2, r3, r7, sl, ip, sp, lr}
 800ec48:	2000bdb8 			; <UNDEFINED> instruction: 0x2000bdb8

0800ec4c <StoreRDMDevice::~StoreRDMDevice()>:
 800ec4c:	4770      	bx	lr

0800ec4e <non-virtual thunk to StoreRDMDevice::~StoreRDMDevice()>:
 800ec4e:	3804      	subs	r0, #4
 800ec50:	4770      	bx	lr
	...

0800ec54 <StoreRDMDevice::Update(TRDMDeviceParams const*)>:
 800ec54:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800ec56:	2200      	movs	r2, #0
 800ec58:	460b      	mov	r3, r1
 800ec5a:	2129      	movs	r1, #41	; 0x29
 800ec5c:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800ec60:	4804      	ldr	r0, [pc, #16]	; (800ec74 <StoreRDMDevice::Update(TRDMDeviceParams const*)+0x20>)
 800ec62:	9100      	str	r1, [sp, #0]
 800ec64:	6800      	ldr	r0, [r0, #0]
 800ec66:	210b      	movs	r1, #11
 800ec68:	f7ff fe24 	bl	800e8b4 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800ec6c:	b005      	add	sp, #20
 800ec6e:	f85d fb04 	ldr.w	pc, [sp], #4
 800ec72:	bf00      	nop
 800ec74:	2000bda8 	andcs	fp, r0, r8, lsr #27

0800ec78 <StoreRDMDevice::SaveLabel(char const*, unsigned char)>:
 800ec78:	b570      	push	{r4, r5, r6, lr}
 800ec7a:	2401      	movs	r4, #1
 800ec7c:	2600      	movs	r6, #0
 800ec7e:	4d0c      	ldr	r5, [pc, #48]	; (800ecb0 <StoreRDMDevice::SaveLabel(char const*, unsigned char)+0x38>)
 800ec80:	b086      	sub	sp, #24
 800ec82:	460b      	mov	r3, r1
 800ec84:	6828      	ldr	r0, [r5, #0]
 800ec86:	f88d 2017 	strb.w	r2, [sp, #23]
 800ec8a:	9200      	str	r2, [sp, #0]
 800ec8c:	210b      	movs	r1, #11
 800ec8e:	2204      	movs	r2, #4
 800ec90:	e9cd 4601 	strd	r4, r6, [sp, #4]
 800ec94:	f7ff fe0e 	bl	800e8b4 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800ec98:	2224      	movs	r2, #36	; 0x24
 800ec9a:	210b      	movs	r1, #11
 800ec9c:	e9cd 4601 	strd	r4, r6, [sp, #4]
 800eca0:	6828      	ldr	r0, [r5, #0]
 800eca2:	9400      	str	r4, [sp, #0]
 800eca4:	f10d 0317 	add.w	r3, sp, #23
 800eca8:	f7ff fe04 	bl	800e8b4 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800ecac:	b006      	add	sp, #24
 800ecae:	bd70      	pop	{r4, r5, r6, pc}
 800ecb0:	2000bda8 	andcs	fp, r0, r8, lsr #27

0800ecb4 <non-virtual thunk to StoreRDMDevice::SaveLabel(char const*, unsigned char)>:
 800ecb4:	f1a0 0004 	sub.w	r0, r0, #4
 800ecb8:	e7de      	b.n	800ec78 <StoreRDMDevice::SaveLabel(char const*, unsigned char)>
 800ecba:	bf00      	nop

0800ecbc <StoreRDMDevice::~StoreRDMDevice()>:
 800ecbc:	b510      	push	{r4, lr}
 800ecbe:	4604      	mov	r4, r0
 800ecc0:	f004 fca6 	bl	8013610 <operator delete(void*)>
 800ecc4:	4620      	mov	r0, r4
 800ecc6:	bd10      	pop	{r4, pc}

0800ecc8 <non-virtual thunk to StoreRDMDevice::~StoreRDMDevice()>:
 800ecc8:	f1a0 0004 	sub.w	r0, r0, #4
 800eccc:	e7f6      	b.n	800ecbc <StoreRDMDevice::~StoreRDMDevice()>
	...

0800ecd0 <StoreRDMDevice::Copy(TRDMDeviceParams*)>:
 800ecd0:	2300      	movs	r3, #0
 800ecd2:	b507      	push	{r0, r1, r2, lr}
 800ecd4:	4805      	ldr	r0, [pc, #20]	; (800ecec <StoreRDMDevice::Copy(TRDMDeviceParams*)+0x1c>)
 800ecd6:	9300      	str	r3, [sp, #0]
 800ecd8:	460a      	mov	r2, r1
 800ecda:	2329      	movs	r3, #41	; 0x29
 800ecdc:	210b      	movs	r1, #11
 800ecde:	6800      	ldr	r0, [r0, #0]
 800ece0:	f7ff fe28 	bl	800e934 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800ece4:	b003      	add	sp, #12
 800ece6:	f85d fb04 	ldr.w	pc, [sp], #4
 800ecea:	bf00      	nop
 800ecec:	2000bda8 	andcs	fp, r0, r8, lsr #27

0800ecf0 <StoreRDMDevice::StoreRDMDevice()>:
 800ecf0:	4a03      	ldr	r2, [pc, #12]	; (800ed00 <StoreRDMDevice::StoreRDMDevice()+0x10>)
 800ecf2:	6002      	str	r2, [r0, #0]
 800ecf4:	321c      	adds	r2, #28
 800ecf6:	6042      	str	r2, [r0, #4]
 800ecf8:	4a02      	ldr	r2, [pc, #8]	; (800ed04 <StoreRDMDevice::StoreRDMDevice()+0x14>)
 800ecfa:	6010      	str	r0, [r2, #0]
 800ecfc:	4770      	bx	lr
 800ecfe:	bf00      	nop
 800ed00:	080174dc 	stmdaeq	r1, {r2, r3, r4, r6, r7, sl, ip, sp, lr}
 800ed04:	2000bdbc 			; <UNDEFINED> instruction: 0x2000bdbc

0800ed08 <StoreRemoteConfig::~StoreRemoteConfig()>:
 800ed08:	4770      	bx	lr
	...

0800ed0c <StoreRemoteConfig::Copy(TRemoteConfigParams*)>:
 800ed0c:	2300      	movs	r3, #0
 800ed0e:	b507      	push	{r0, r1, r2, lr}
 800ed10:	4805      	ldr	r0, [pc, #20]	; (800ed28 <StoreRemoteConfig::Copy(TRemoteConfigParams*)+0x1c>)
 800ed12:	9300      	str	r3, [sp, #0]
 800ed14:	460a      	mov	r2, r1
 800ed16:	2320      	movs	r3, #32
 800ed18:	210c      	movs	r1, #12
 800ed1a:	6800      	ldr	r0, [r0, #0]
 800ed1c:	f7ff fe0a 	bl	800e934 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800ed20:	b003      	add	sp, #12
 800ed22:	f85d fb04 	ldr.w	pc, [sp], #4
 800ed26:	bf00      	nop
 800ed28:	2000bda8 	andcs	fp, r0, r8, lsr #27

0800ed2c <StoreRemoteConfig::Update(TRemoteConfigParams const*)>:
 800ed2c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800ed2e:	2200      	movs	r2, #0
 800ed30:	460b      	mov	r3, r1
 800ed32:	2120      	movs	r1, #32
 800ed34:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800ed38:	4804      	ldr	r0, [pc, #16]	; (800ed4c <StoreRemoteConfig::Update(TRemoteConfigParams const*)+0x20>)
 800ed3a:	9100      	str	r1, [sp, #0]
 800ed3c:	6800      	ldr	r0, [r0, #0]
 800ed3e:	210c      	movs	r1, #12
 800ed40:	f7ff fdb8 	bl	800e8b4 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800ed44:	b005      	add	sp, #20
 800ed46:	f85d fb04 	ldr.w	pc, [sp], #4
 800ed4a:	bf00      	nop
 800ed4c:	2000bda8 	andcs	fp, r0, r8, lsr #27

0800ed50 <StoreRemoteConfig::~StoreRemoteConfig()>:
 800ed50:	b510      	push	{r4, lr}
 800ed52:	4604      	mov	r4, r0
 800ed54:	f004 fc5c 	bl	8013610 <operator delete(void*)>
 800ed58:	4620      	mov	r0, r4
 800ed5a:	bd10      	pop	{r4, pc}

0800ed5c <StoreRemoteConfig::StoreRemoteConfig()>:
 800ed5c:	4a02      	ldr	r2, [pc, #8]	; (800ed68 <StoreRemoteConfig::StoreRemoteConfig()+0xc>)
 800ed5e:	6002      	str	r2, [r0, #0]
 800ed60:	4a02      	ldr	r2, [pc, #8]	; (800ed6c <StoreRemoteConfig::StoreRemoteConfig()+0x10>)
 800ed62:	6010      	str	r0, [r2, #0]
 800ed64:	4770      	bx	lr
 800ed66:	bf00      	nop
 800ed68:	0801750c 	stmdaeq	r1, {r2, r3, r8, sl, ip, sp, lr}
 800ed6c:	2000bdc0 	andcs	fp, r0, r0, asr #27

0800ed70 <StoreWS28xxDmx::~StoreWS28xxDmx()>:
 800ed70:	4770      	bx	lr

0800ed72 <non-virtual thunk to StoreWS28xxDmx::~StoreWS28xxDmx()>:
 800ed72:	3804      	subs	r0, #4
 800ed74:	4770      	bx	lr
	...

0800ed78 <StoreWS28xxDmx::Update(TWS28xxDmxParams const*)>:
 800ed78:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800ed7a:	2200      	movs	r2, #0
 800ed7c:	460b      	mov	r3, r1
 800ed7e:	2127      	movs	r1, #39	; 0x27
 800ed80:	e9cd 2201 	strd	r2, r2, [sp, #4]
 800ed84:	4804      	ldr	r0, [pc, #16]	; (800ed98 <StoreWS28xxDmx::Update(TWS28xxDmxParams const*)+0x20>)
 800ed86:	9100      	str	r1, [sp, #0]
 800ed88:	6800      	ldr	r0, [r0, #0]
 800ed8a:	2103      	movs	r1, #3
 800ed8c:	f7ff fd92 	bl	800e8b4 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800ed90:	b005      	add	sp, #20
 800ed92:	f85d fb04 	ldr.w	pc, [sp], #4
 800ed96:	bf00      	nop
 800ed98:	2000bda8 	andcs	fp, r0, r8, lsr #27

0800ed9c <StoreWS28xxDmx::SaveDmxStartAddress(unsigned short)>:
 800ed9c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800ed9e:	2304      	movs	r3, #4
 800eda0:	2200      	movs	r2, #0
 800eda2:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800eda6:	2302      	movs	r3, #2
 800eda8:	4806      	ldr	r0, [pc, #24]	; (800edc4 <StoreWS28xxDmx::SaveDmxStartAddress(unsigned short)+0x28>)
 800edaa:	9300      	str	r3, [sp, #0]
 800edac:	f8ad 1016 	strh.w	r1, [sp, #22]
 800edb0:	2207      	movs	r2, #7
 800edb2:	2103      	movs	r1, #3
 800edb4:	6800      	ldr	r0, [r0, #0]
 800edb6:	f10d 0316 	add.w	r3, sp, #22
 800edba:	f7ff fd7b 	bl	800e8b4 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800edbe:	b007      	add	sp, #28
 800edc0:	f85d fb04 	ldr.w	pc, [sp], #4
 800edc4:	2000bda8 	andcs	fp, r0, r8, lsr #27

0800edc8 <non-virtual thunk to StoreWS28xxDmx::SaveDmxStartAddress(unsigned short)>:
 800edc8:	f1a0 0004 	sub.w	r0, r0, #4
 800edcc:	e7e6      	b.n	800ed9c <StoreWS28xxDmx::SaveDmxStartAddress(unsigned short)>
 800edce:	bf00      	nop

0800edd0 <StoreWS28xxDmx::SaveTestPattern(unsigned char)>:
 800edd0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800edd2:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
 800edd6:	2200      	movs	r2, #0
 800edd8:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800eddc:	2301      	movs	r3, #1
 800edde:	4807      	ldr	r0, [pc, #28]	; (800edfc <StoreWS28xxDmx::SaveTestPattern(unsigned char)+0x2c>)
 800ede0:	9300      	str	r3, [sp, #0]
 800ede2:	f88d 1017 	strb.w	r1, [sp, #23]
 800ede6:	2226      	movs	r2, #38	; 0x26
 800ede8:	2103      	movs	r1, #3
 800edea:	6800      	ldr	r0, [r0, #0]
 800edec:	f10d 0317 	add.w	r3, sp, #23
 800edf0:	f7ff fd60 	bl	800e8b4 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800edf4:	b007      	add	sp, #28
 800edf6:	f85d fb04 	ldr.w	pc, [sp], #4
 800edfa:	bf00      	nop
 800edfc:	2000bda8 	andcs	fp, r0, r8, lsr #27

0800ee00 <non-virtual thunk to StoreWS28xxDmx::SaveTestPattern(unsigned char)>:
 800ee00:	f1a0 0004 	sub.w	r0, r0, #4
 800ee04:	e7e4      	b.n	800edd0 <StoreWS28xxDmx::SaveTestPattern(unsigned char)>
 800ee06:	bf00      	nop

0800ee08 <StoreWS28xxDmx::SaveMap(unsigned char)>:
 800ee08:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800ee0a:	f44f 7300 	mov.w	r3, #512	; 0x200
 800ee0e:	2200      	movs	r2, #0
 800ee10:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800ee14:	2301      	movs	r3, #1
 800ee16:	4807      	ldr	r0, [pc, #28]	; (800ee34 <StoreWS28xxDmx::SaveMap(unsigned char)+0x2c>)
 800ee18:	9300      	str	r3, [sp, #0]
 800ee1a:	f88d 1017 	strb.w	r1, [sp, #23]
 800ee1e:	2213      	movs	r2, #19
 800ee20:	2103      	movs	r1, #3
 800ee22:	6800      	ldr	r0, [r0, #0]
 800ee24:	f10d 0317 	add.w	r3, sp, #23
 800ee28:	f7ff fd44 	bl	800e8b4 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800ee2c:	b007      	add	sp, #28
 800ee2e:	f85d fb04 	ldr.w	pc, [sp], #4
 800ee32:	bf00      	nop
 800ee34:	2000bda8 	andcs	fp, r0, r8, lsr #27

0800ee38 <non-virtual thunk to StoreWS28xxDmx::SaveMap(unsigned char)>:
 800ee38:	f1a0 0004 	sub.w	r0, r0, #4
 800ee3c:	e7e4      	b.n	800ee08 <StoreWS28xxDmx::SaveMap(unsigned char)>
 800ee3e:	bf00      	nop

0800ee40 <StoreWS28xxDmx::SaveGroupingCount(unsigned short)>:
 800ee40:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800ee42:	f44f 7380 	mov.w	r3, #256	; 0x100
 800ee46:	2200      	movs	r2, #0
 800ee48:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800ee4c:	2302      	movs	r3, #2
 800ee4e:	4807      	ldr	r0, [pc, #28]	; (800ee6c <StoreWS28xxDmx::SaveGroupingCount(unsigned short)+0x2c>)
 800ee50:	9300      	str	r3, [sp, #0]
 800ee52:	f8ad 1016 	strh.w	r1, [sp, #22]
 800ee56:	2211      	movs	r2, #17
 800ee58:	2103      	movs	r1, #3
 800ee5a:	6800      	ldr	r0, [r0, #0]
 800ee5c:	f10d 0316 	add.w	r3, sp, #22
 800ee60:	f7ff fd28 	bl	800e8b4 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800ee64:	b007      	add	sp, #28
 800ee66:	f85d fb04 	ldr.w	pc, [sp], #4
 800ee6a:	bf00      	nop
 800ee6c:	2000bda8 	andcs	fp, r0, r8, lsr #27

0800ee70 <non-virtual thunk to StoreWS28xxDmx::SaveGroupingCount(unsigned short)>:
 800ee70:	f1a0 0004 	sub.w	r0, r0, #4
 800ee74:	e7e4      	b.n	800ee40 <StoreWS28xxDmx::SaveGroupingCount(unsigned short)>
 800ee76:	bf00      	nop

0800ee78 <StoreWS28xxDmx::SaveCount(unsigned short)>:
 800ee78:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800ee7a:	2302      	movs	r3, #2
 800ee7c:	2200      	movs	r2, #0
 800ee7e:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800ee82:	4807      	ldr	r0, [pc, #28]	; (800eea0 <StoreWS28xxDmx::SaveCount(unsigned short)+0x28>)
 800ee84:	9300      	str	r3, [sp, #0]
 800ee86:	f8ad 1016 	strh.w	r1, [sp, #22]
 800ee8a:	2205      	movs	r2, #5
 800ee8c:	2103      	movs	r1, #3
 800ee8e:	6800      	ldr	r0, [r0, #0]
 800ee90:	f10d 0316 	add.w	r3, sp, #22
 800ee94:	f7ff fd0e 	bl	800e8b4 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800ee98:	b007      	add	sp, #28
 800ee9a:	f85d fb04 	ldr.w	pc, [sp], #4
 800ee9e:	bf00      	nop
 800eea0:	2000bda8 	andcs	fp, r0, r8, lsr #27

0800eea4 <non-virtual thunk to StoreWS28xxDmx::SaveCount(unsigned short)>:
 800eea4:	f1a0 0004 	sub.w	r0, r0, #4
 800eea8:	e7e6      	b.n	800ee78 <StoreWS28xxDmx::SaveCount(unsigned short)>
 800eeaa:	bf00      	nop

0800eeac <StoreWS28xxDmx::SaveType(unsigned char)>:
 800eeac:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800eeae:	2301      	movs	r3, #1
 800eeb0:	2200      	movs	r2, #0
 800eeb2:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800eeb6:	4807      	ldr	r0, [pc, #28]	; (800eed4 <StoreWS28xxDmx::SaveType(unsigned char)+0x28>)
 800eeb8:	9300      	str	r3, [sp, #0]
 800eeba:	f88d 1017 	strb.w	r1, [sp, #23]
 800eebe:	2204      	movs	r2, #4
 800eec0:	2103      	movs	r1, #3
 800eec2:	6800      	ldr	r0, [r0, #0]
 800eec4:	f10d 0317 	add.w	r3, sp, #23
 800eec8:	f7ff fcf4 	bl	800e8b4 <SpiFlashStore::Update(spiflashstore::Store, unsigned int, void const*, unsigned int, unsigned int, unsigned int)>
 800eecc:	b007      	add	sp, #28
 800eece:	f85d fb04 	ldr.w	pc, [sp], #4
 800eed2:	bf00      	nop
 800eed4:	2000bda8 	andcs	fp, r0, r8, lsr #27

0800eed8 <non-virtual thunk to StoreWS28xxDmx::SaveType(unsigned char)>:
 800eed8:	f1a0 0004 	sub.w	r0, r0, #4
 800eedc:	e7e6      	b.n	800eeac <StoreWS28xxDmx::SaveType(unsigned char)>
 800eede:	bf00      	nop

0800eee0 <StoreWS28xxDmx::~StoreWS28xxDmx()>:
 800eee0:	b510      	push	{r4, lr}
 800eee2:	4604      	mov	r4, r0
 800eee4:	f004 fb94 	bl	8013610 <operator delete(void*)>
 800eee8:	4620      	mov	r0, r4
 800eeea:	bd10      	pop	{r4, pc}

0800eeec <non-virtual thunk to StoreWS28xxDmx::~StoreWS28xxDmx()>:
 800eeec:	f1a0 0004 	sub.w	r0, r0, #4
 800eef0:	e7f6      	b.n	800eee0 <StoreWS28xxDmx::~StoreWS28xxDmx()>
	...

0800eef4 <StoreWS28xxDmx::Copy(TWS28xxDmxParams*)>:
 800eef4:	2300      	movs	r3, #0
 800eef6:	b507      	push	{r0, r1, r2, lr}
 800eef8:	4805      	ldr	r0, [pc, #20]	; (800ef10 <StoreWS28xxDmx::Copy(TWS28xxDmxParams*)+0x1c>)
 800eefa:	9300      	str	r3, [sp, #0]
 800eefc:	460a      	mov	r2, r1
 800eefe:	2327      	movs	r3, #39	; 0x27
 800ef00:	2103      	movs	r1, #3
 800ef02:	6800      	ldr	r0, [r0, #0]
 800ef04:	f7ff fd16 	bl	800e934 <SpiFlashStore::Copy(spiflashstore::Store, void*, unsigned int, unsigned int)>
 800ef08:	b003      	add	sp, #12
 800ef0a:	f85d fb04 	ldr.w	pc, [sp], #4
 800ef0e:	bf00      	nop
 800ef10:	2000bda8 	andcs	fp, r0, r8, lsr #27

0800ef14 <StoreWS28xxDmx::StoreWS28xxDmx()>:
 800ef14:	4a03      	ldr	r2, [pc, #12]	; (800ef24 <StoreWS28xxDmx::StoreWS28xxDmx()+0x10>)
 800ef16:	6002      	str	r2, [r0, #0]
 800ef18:	3230      	adds	r2, #48	; 0x30
 800ef1a:	6042      	str	r2, [r0, #4]
 800ef1c:	4a02      	ldr	r2, [pc, #8]	; (800ef28 <StoreWS28xxDmx::StoreWS28xxDmx()+0x14>)
 800ef1e:	6010      	str	r0, [r2, #0]
 800ef20:	4770      	bx	lr
 800ef22:	bf00      	nop
 800ef24:	08017524 	stmdaeq	r1, {r2, r5, r8, sl, ip, sp, lr}
 800ef28:	2000bdc4 	andcs	fp, r0, r4, asr #27

0800ef2c <FlashRom::FlashRom()>:
 800ef2c:	4b07      	ldr	r3, [pc, #28]	; (800ef4c <FlashRom::FlashRom()+0x20>)
 800ef2e:	b510      	push	{r4, lr}
 800ef30:	6018      	str	r0, [r3, #0]
 800ef32:	2301      	movs	r3, #1
 800ef34:	4604      	mov	r4, r0
 800ef36:	7003      	strb	r3, [r0, #0]
 800ef38:	4b05      	ldr	r3, [pc, #20]	; (800ef50 <FlashRom::FlashRom()+0x24>)
 800ef3a:	4906      	ldr	r1, [pc, #24]	; (800ef54 <FlashRom::FlashRom()+0x28>)
 800ef3c:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800ef40:	4805      	ldr	r0, [pc, #20]	; (800ef58 <FlashRom::FlashRom()+0x2c>)
 800ef42:	029a      	lsls	r2, r3, #10
 800ef44:	f7f9 ffb2 	bl	8008eac <printf>
 800ef48:	4620      	mov	r0, r4
 800ef4a:	bd10      	pop	{r4, pc}
 800ef4c:	2000bdc8 	andcs	fp, r0, r8, asr #27
 800ef50:	1ffff700 	svcne	0x00fff700
 800ef54:	08017574 	stmdaeq	r1, {r2, r4, r5, r6, r8, sl, ip, sp, lr}
 800ef58:	0801757d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r8, sl, ip, sp, lr}

0800ef5c <FlashRom::GetSize() const>:
 800ef5c:	4b02      	ldr	r3, [pc, #8]	; (800ef68 <FlashRom::GetSize() const+0xc>)
 800ef5e:	f8b3 00e0 	ldrh.w	r0, [r3, #224]	; 0xe0
 800ef62:	0280      	lsls	r0, r0, #10
 800ef64:	4770      	bx	lr
 800ef66:	bf00      	nop
 800ef68:	1ffff700 	svcne	0x00fff700

0800ef6c <FlashRom::GetSectorSize() const>:
 800ef6c:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 800ef70:	4770      	bx	lr

0800ef72 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)>:
 800ef72:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800ef76:	441a      	add	r2, r3
 800ef78:	4293      	cmp	r3, r2
 800ef7a:	d004      	beq.n	800ef86 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)+0x14>
 800ef7c:	f851 0b04 	ldr.w	r0, [r1], #4
 800ef80:	f843 0b04 	str.w	r0, [r3], #4
 800ef84:	e7f8      	b.n	800ef78 <FlashRom::Read(unsigned int, unsigned int, unsigned char*, flashrom::result&)+0x6>
 800ef86:	2200      	movs	r2, #0
 800ef88:	9b00      	ldr	r3, [sp, #0]
 800ef8a:	2001      	movs	r0, #1
 800ef8c:	601a      	str	r2, [r3, #0]
 800ef8e:	4770      	bx	lr

0800ef90 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)>:
 800ef90:	2000      	movs	r0, #0
 800ef92:	b538      	push	{r3, r4, r5, lr}
 800ef94:	4c47      	ldr	r4, [pc, #284]	; (800f0b4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x124>)
 800ef96:	6018      	str	r0, [r3, #0]
 800ef98:	6823      	ldr	r3, [r4, #0]
 800ef9a:	2b04      	cmp	r3, #4
 800ef9c:	f200 8082 	bhi.w	800f0a4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x114>
 800efa0:	e8df f003 	tbb	[pc, r3]
 800efa4:	78452003 	stmdavc	r5, {r0, r1, sp}^
 800efa8:	4b430080 	blmi	90cf1b0 <__exidx_end+0x10b7204>
 800efac:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800efb0:	6019      	str	r1, [r3, #0]
 800efb2:	4b42      	ldr	r3, [pc, #264]	; (800f0bc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800efb4:	601a      	str	r2, [r3, #0]
 800efb6:	4b42      	ldr	r3, [pc, #264]	; (800f0c0 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x130>)
 800efb8:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800efbc:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800efc0:	4b40      	ldr	r3, [pc, #256]	; (800f0c4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800efc2:	d807      	bhi.n	800efd4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x44>
 800efc4:	2201      	movs	r2, #1
 800efc6:	701a      	strb	r2, [r3, #0]
 800efc8:	f004 fe98 	bl	8013cfc <fmc_bank0_unlock>
 800efcc:	2301      	movs	r3, #1
 800efce:	6023      	str	r3, [r4, #0]
 800efd0:	2000      	movs	r0, #0
 800efd2:	e026      	b.n	800f022 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x92>
 800efd4:	4a3c      	ldr	r2, [pc, #240]	; (800f0c8 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x138>)
 800efd6:	4291      	cmp	r1, r2
 800efd8:	d3f4      	bcc.n	800efc4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x34>
 800efda:	2200      	movs	r2, #0
 800efdc:	701a      	strb	r2, [r3, #0]
 800efde:	f004 fe9b 	bl	8013d18 <fmc_bank1_unlock>
 800efe2:	e7f3      	b.n	800efcc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 800efe4:	4d37      	ldr	r5, [pc, #220]	; (800f0c4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800efe6:	782b      	ldrb	r3, [r5, #0]
 800efe8:	b15b      	cbz	r3, 800f002 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x72>
 800efea:	f004 feb3 	bl	8013d54 <fmc_bank0_state_get>
 800efee:	2801      	cmp	r0, #1
 800eff0:	d0ee      	beq.n	800efd0 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x40>
 800eff2:	7829      	ldrb	r1, [r5, #0]
 800eff4:	4b35      	ldr	r3, [pc, #212]	; (800f0cc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800eff6:	b939      	cbnz	r1, 800f008 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x78>
 800eff8:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800effa:	f022 0202 	bic.w	r2, r2, #2
 800effe:	651a      	str	r2, [r3, #80]	; 0x50
 800f000:	e006      	b.n	800f010 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x80>
 800f002:	f004 febb 	bl	8013d7c <fmc_bank1_state_get>
 800f006:	e7f2      	b.n	800efee <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x5e>
 800f008:	691a      	ldr	r2, [r3, #16]
 800f00a:	f022 0202 	bic.w	r2, r2, #2
 800f00e:	611a      	str	r2, [r3, #16]
 800f010:	4b2a      	ldr	r3, [pc, #168]	; (800f0bc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800f012:	681b      	ldr	r3, [r3, #0]
 800f014:	b94b      	cbnz	r3, 800f02a <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x9a>
 800f016:	b129      	cbz	r1, 800f024 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x94>
 800f018:	f004 fe8c 	bl	8013d34 <fmc_bank0_lock>
 800f01c:	2300      	movs	r3, #0
 800f01e:	2001      	movs	r0, #1
 800f020:	6023      	str	r3, [r4, #0]
 800f022:	bd38      	pop	{r3, r4, r5, pc}
 800f024:	f004 fe8e 	bl	8013d44 <fmc_bank1_lock>
 800f028:	e7f8      	b.n	800f01c <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x8c>
 800f02a:	2302      	movs	r3, #2
 800f02c:	e7cf      	b.n	800efce <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3e>
 800f02e:	4923      	ldr	r1, [pc, #140]	; (800f0bc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x12c>)
 800f030:	680b      	ldr	r3, [r1, #0]
 800f032:	2b00      	cmp	r3, #0
 800f034:	d0ca      	beq.n	800efcc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 800f036:	4b23      	ldr	r3, [pc, #140]	; (800f0c4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800f038:	4a1f      	ldr	r2, [pc, #124]	; (800f0b8 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x128>)
 800f03a:	7818      	ldrb	r0, [r3, #0]
 800f03c:	4b23      	ldr	r3, [pc, #140]	; (800f0cc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800f03e:	b190      	cbz	r0, 800f066 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0xd6>
 800f040:	6918      	ldr	r0, [r3, #16]
 800f042:	f040 0002 	orr.w	r0, r0, #2
 800f046:	6118      	str	r0, [r3, #16]
 800f048:	6810      	ldr	r0, [r2, #0]
 800f04a:	6158      	str	r0, [r3, #20]
 800f04c:	6918      	ldr	r0, [r3, #16]
 800f04e:	f040 0040 	orr.w	r0, r0, #64	; 0x40
 800f052:	6118      	str	r0, [r3, #16]
 800f054:	680b      	ldr	r3, [r1, #0]
 800f056:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 800f05a:	600b      	str	r3, [r1, #0]
 800f05c:	6813      	ldr	r3, [r2, #0]
 800f05e:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800f062:	6013      	str	r3, [r2, #0]
 800f064:	e7b2      	b.n	800efcc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x3c>
 800f066:	6d18      	ldr	r0, [r3, #80]	; 0x50
 800f068:	f040 0002 	orr.w	r0, r0, #2
 800f06c:	6518      	str	r0, [r3, #80]	; 0x50
 800f06e:	6810      	ldr	r0, [r2, #0]
 800f070:	6558      	str	r0, [r3, #84]	; 0x54
 800f072:	69dd      	ldr	r5, [r3, #28]
 800f074:	07ad      	lsls	r5, r5, #30
 800f076:	bf48      	it	mi
 800f078:	6158      	strmi	r0, [r3, #20]
 800f07a:	4814      	ldr	r0, [pc, #80]	; (800f0cc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800f07c:	6d03      	ldr	r3, [r0, #80]	; 0x50
 800f07e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800f082:	6503      	str	r3, [r0, #80]	; 0x50
 800f084:	680b      	ldr	r3, [r1, #0]
 800f086:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
 800f08a:	600b      	str	r3, [r1, #0]
 800f08c:	6813      	ldr	r3, [r2, #0]
 800f08e:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800f092:	e7e6      	b.n	800f062 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0xd2>
 800f094:	4b0b      	ldr	r3, [pc, #44]	; (800f0c4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x134>)
 800f096:	781a      	ldrb	r2, [r3, #0]
 800f098:	4b0c      	ldr	r3, [pc, #48]	; (800f0cc <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x13c>)
 800f09a:	b132      	cbz	r2, 800f0aa <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x11a>
 800f09c:	691a      	ldr	r2, [r3, #16]
 800f09e:	f022 0201 	bic.w	r2, r2, #1
 800f0a2:	611a      	str	r2, [r3, #16]
 800f0a4:	2000      	movs	r0, #0
 800f0a6:	6020      	str	r0, [r4, #0]
 800f0a8:	e7bb      	b.n	800f022 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x92>
 800f0aa:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800f0ac:	f022 0201 	bic.w	r2, r2, #1
 800f0b0:	651a      	str	r2, [r3, #80]	; 0x50
 800f0b2:	e7f7      	b.n	800f0a4 <FlashRom::Erase(unsigned int, unsigned int, flashrom::result&)+0x114>
 800f0b4:	2000bdd0 	ldrdcs	fp, [r0], -r0
 800f0b8:	2000bdd4 	ldrdcs	fp, [r0], -r4
 800f0bc:	2000bde0 	andcs	fp, r0, r0, ror #27
 800f0c0:	1ffff700 	svcne	0x00fff700
 800f0c4:	2000bddc 	ldrdcs	fp, [r0], -ip
 800f0c8:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 800f0cc:	40022000 	andmi	r2, r2, r0

0800f0d0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)>:
 800f0d0:	b570      	push	{r4, r5, r6, lr}
 800f0d2:	2400      	movs	r4, #0
 800f0d4:	9804      	ldr	r0, [sp, #16]
 800f0d6:	6004      	str	r4, [r0, #0]
 800f0d8:	4c48      	ldr	r4, [pc, #288]	; (800f1fc <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x12c>)
 800f0da:	6820      	ldr	r0, [r4, #0]
 800f0dc:	2804      	cmp	r0, #4
 800f0de:	d848      	bhi.n	800f172 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xa2>
 800f0e0:	e8df f000 	tbb	[pc, r0]
 800f0e4:	22847c03 	addcs	r7, r4, #768	; 0x300
 800f0e8:	48450047 	stmdami	r5, {r0, r1, r2, r6}^
 800f0ec:	f101 6100 	add.w	r1, r1, #134217728	; 0x8000000
 800f0f0:	6001      	str	r1, [r0, #0]
 800f0f2:	4844      	ldr	r0, [pc, #272]	; (800f204 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 800f0f4:	6003      	str	r3, [r0, #0]
 800f0f6:	4b44      	ldr	r3, [pc, #272]	; (800f208 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 800f0f8:	601a      	str	r2, [r3, #0]
 800f0fa:	4b44      	ldr	r3, [pc, #272]	; (800f20c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x13c>)
 800f0fc:	f8b3 30e0 	ldrh.w	r3, [r3, #224]	; 0xe0
 800f100:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800f104:	4b42      	ldr	r3, [pc, #264]	; (800f210 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800f106:	d807      	bhi.n	800f118 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x48>
 800f108:	2201      	movs	r2, #1
 800f10a:	701a      	strb	r2, [r3, #0]
 800f10c:	f004 fdf6 	bl	8013cfc <fmc_bank0_unlock>
 800f110:	2303      	movs	r3, #3
 800f112:	6023      	str	r3, [r4, #0]
 800f114:	2000      	movs	r0, #0
 800f116:	e026      	b.n	800f166 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x96>
 800f118:	4a3e      	ldr	r2, [pc, #248]	; (800f214 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x144>)
 800f11a:	4291      	cmp	r1, r2
 800f11c:	d3f4      	bcc.n	800f108 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x38>
 800f11e:	2200      	movs	r2, #0
 800f120:	701a      	strb	r2, [r3, #0]
 800f122:	f004 fdf9 	bl	8013d18 <fmc_bank1_unlock>
 800f126:	e7f3      	b.n	800f110 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800f128:	4d39      	ldr	r5, [pc, #228]	; (800f210 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800f12a:	782b      	ldrb	r3, [r5, #0]
 800f12c:	b15b      	cbz	r3, 800f146 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x76>
 800f12e:	f004 fe11 	bl	8013d54 <fmc_bank0_state_get>
 800f132:	2801      	cmp	r0, #1
 800f134:	d0ee      	beq.n	800f114 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x44>
 800f136:	7829      	ldrb	r1, [r5, #0]
 800f138:	4b37      	ldr	r3, [pc, #220]	; (800f218 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800f13a:	b939      	cbnz	r1, 800f14c <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x7c>
 800f13c:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800f13e:	f022 0201 	bic.w	r2, r2, #1
 800f142:	651a      	str	r2, [r3, #80]	; 0x50
 800f144:	e006      	b.n	800f154 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x84>
 800f146:	f004 fe19 	bl	8013d7c <fmc_bank1_state_get>
 800f14a:	e7f2      	b.n	800f132 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x62>
 800f14c:	691a      	ldr	r2, [r3, #16]
 800f14e:	f022 0201 	bic.w	r2, r2, #1
 800f152:	611a      	str	r2, [r3, #16]
 800f154:	4b2c      	ldr	r3, [pc, #176]	; (800f208 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 800f156:	681b      	ldr	r3, [r3, #0]
 800f158:	b94b      	cbnz	r3, 800f16e <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x9e>
 800f15a:	b129      	cbz	r1, 800f168 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x98>
 800f15c:	f004 fdea 	bl	8013d34 <fmc_bank0_lock>
 800f160:	2300      	movs	r3, #0
 800f162:	2001      	movs	r0, #1
 800f164:	6023      	str	r3, [r4, #0]
 800f166:	bd70      	pop	{r4, r5, r6, pc}
 800f168:	f004 fdec 	bl	8013d44 <fmc_bank1_lock>
 800f16c:	e7f8      	b.n	800f160 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x90>
 800f16e:	2304      	movs	r3, #4
 800f170:	e7cf      	b.n	800f112 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x42>
 800f172:	4a25      	ldr	r2, [pc, #148]	; (800f208 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x138>)
 800f174:	6813      	ldr	r3, [r2, #0]
 800f176:	2b03      	cmp	r3, #3
 800f178:	d91a      	bls.n	800f1b0 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xe0>
 800f17a:	4b25      	ldr	r3, [pc, #148]	; (800f210 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800f17c:	7819      	ldrb	r1, [r3, #0]
 800f17e:	4b26      	ldr	r3, [pc, #152]	; (800f218 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800f180:	b189      	cbz	r1, 800f1a6 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xd6>
 800f182:	6919      	ldr	r1, [r3, #16]
 800f184:	f041 0101 	orr.w	r1, r1, #1
 800f188:	6119      	str	r1, [r3, #16]
 800f18a:	4d1e      	ldr	r5, [pc, #120]	; (800f204 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 800f18c:	481c      	ldr	r0, [pc, #112]	; (800f200 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x130>)
 800f18e:	6829      	ldr	r1, [r5, #0]
 800f190:	6803      	ldr	r3, [r0, #0]
 800f192:	f851 6b04 	ldr.w	r6, [r1], #4
 800f196:	f843 6b04 	str.w	r6, [r3], #4
 800f19a:	6003      	str	r3, [r0, #0]
 800f19c:	6813      	ldr	r3, [r2, #0]
 800f19e:	6029      	str	r1, [r5, #0]
 800f1a0:	3b04      	subs	r3, #4
 800f1a2:	6013      	str	r3, [r2, #0]
 800f1a4:	e7b4      	b.n	800f110 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800f1a6:	6d19      	ldr	r1, [r3, #80]	; 0x50
 800f1a8:	f041 0101 	orr.w	r1, r1, #1
 800f1ac:	6519      	str	r1, [r3, #80]	; 0x50
 800f1ae:	e7ec      	b.n	800f18a <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xba>
 800f1b0:	2b00      	cmp	r3, #0
 800f1b2:	d0ad      	beq.n	800f110 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800f1b4:	4b16      	ldr	r3, [pc, #88]	; (800f210 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800f1b6:	781a      	ldrb	r2, [r3, #0]
 800f1b8:	4b17      	ldr	r3, [pc, #92]	; (800f218 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800f1ba:	b152      	cbz	r2, 800f1d2 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x102>
 800f1bc:	691a      	ldr	r2, [r3, #16]
 800f1be:	f042 0201 	orr.w	r2, r2, #1
 800f1c2:	611a      	str	r2, [r3, #16]
 800f1c4:	4a0f      	ldr	r2, [pc, #60]	; (800f204 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x134>)
 800f1c6:	4b0e      	ldr	r3, [pc, #56]	; (800f200 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x130>)
 800f1c8:	6812      	ldr	r2, [r2, #0]
 800f1ca:	681b      	ldr	r3, [r3, #0]
 800f1cc:	6812      	ldr	r2, [r2, #0]
 800f1ce:	601a      	str	r2, [r3, #0]
 800f1d0:	e79e      	b.n	800f110 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x40>
 800f1d2:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800f1d4:	f042 0201 	orr.w	r2, r2, #1
 800f1d8:	651a      	str	r2, [r3, #80]	; 0x50
 800f1da:	e7f3      	b.n	800f1c4 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0xf4>
 800f1dc:	4b0c      	ldr	r3, [pc, #48]	; (800f210 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x140>)
 800f1de:	781a      	ldrb	r2, [r3, #0]
 800f1e0:	4b0d      	ldr	r3, [pc, #52]	; (800f218 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x148>)
 800f1e2:	b132      	cbz	r2, 800f1f2 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x122>
 800f1e4:	691a      	ldr	r2, [r3, #16]
 800f1e6:	f022 0202 	bic.w	r2, r2, #2
 800f1ea:	611a      	str	r2, [r3, #16]
 800f1ec:	2000      	movs	r0, #0
 800f1ee:	6020      	str	r0, [r4, #0]
 800f1f0:	e7b9      	b.n	800f166 <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x96>
 800f1f2:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800f1f4:	f022 0202 	bic.w	r2, r2, #2
 800f1f8:	651a      	str	r2, [r3, #80]	; 0x50
 800f1fa:	e7f7      	b.n	800f1ec <FlashRom::Write(unsigned int, unsigned int, unsigned char const*, flashrom::result&)+0x11c>
 800f1fc:	2000bdd0 	ldrdcs	fp, [r0], -r0
 800f200:	2000bdcc 	andcs	fp, r0, ip, asr #27
 800f204:	2000bdd8 	ldrdcs	fp, [r0], -r8
 800f208:	2000bde0 	andcs	fp, r0, r0, ror #27
 800f20c:	1ffff700 	svcne	0x00fff700
 800f210:	2000bddc 	ldrdcs	fp, [r0], -ip
 800f214:	0807ffff 	stmdaeq	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
 800f218:	40022000 	andmi	r2, r2, r0

0800f21c <net_init>:
 800f21c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f220:	460c      	mov	r4, r1
 800f222:	4616      	mov	r6, r2
 800f224:	9f06      	ldr	r7, [sp, #24]
 800f226:	4a22      	ldr	r2, [pc, #136]	; (800f2b0 <net_init+0x94>)
 800f228:	461d      	mov	r5, r3
 800f22a:	1e43      	subs	r3, r0, #1
 800f22c:	3005      	adds	r0, #5
 800f22e:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 800f232:	4283      	cmp	r3, r0
 800f234:	f802 1b01 	strb.w	r1, [r2], #1
 800f238:	d1f9      	bne.n	800f22e <net_init+0x12>
 800f23a:	4623      	mov	r3, r4
 800f23c:	4a1d      	ldr	r2, [pc, #116]	; (800f2b4 <net_init+0x98>)
 800f23e:	f104 010c 	add.w	r1, r4, #12
 800f242:	f813 0b01 	ldrb.w	r0, [r3], #1
 800f246:	428b      	cmp	r3, r1
 800f248:	f802 0b01 	strb.w	r0, [r2], #1
 800f24c:	d1f9      	bne.n	800f242 <net_init+0x26>
 800f24e:	f04f 0800 	mov.w	r8, #0
 800f252:	4918      	ldr	r1, [pc, #96]	; (800f2b4 <net_init+0x98>)
 800f254:	4816      	ldr	r0, [pc, #88]	; (800f2b0 <net_init+0x94>)
 800f256:	f002 fdb0 	bl	8011dba <ip_init>
 800f25a:	4815      	ldr	r0, [pc, #84]	; (800f2b0 <net_init+0x94>)
 800f25c:	f000 f8d0 	bl	800f400 <rfc3927_init>
 800f260:	f887 8000 	strb.w	r8, [r7]
 800f264:	782b      	ldrb	r3, [r5, #0]
 800f266:	b163      	cbz	r3, 800f282 <net_init+0x66>
 800f268:	4632      	mov	r2, r6
 800f26a:	4912      	ldr	r1, [pc, #72]	; (800f2b4 <net_init+0x98>)
 800f26c:	4810      	ldr	r0, [pc, #64]	; (800f2b0 <net_init+0x94>)
 800f26e:	f002 fab5 	bl	80117dc <dhcp_client>
 800f272:	4540      	cmp	r0, r8
 800f274:	da05      	bge.n	800f282 <net_init+0x66>
 800f276:	480f      	ldr	r0, [pc, #60]	; (800f2b4 <net_init+0x98>)
 800f278:	f885 8000 	strb.w	r8, [r5]
 800f27c:	f000 f8cc 	bl	800f418 <rfc3927>
 800f280:	7038      	strb	r0, [r7, #0]
 800f282:	490c      	ldr	r1, [pc, #48]	; (800f2b4 <net_init+0x98>)
 800f284:	480a      	ldr	r0, [pc, #40]	; (800f2b0 <net_init+0x94>)
 800f286:	f002 f8b9 	bl	80113fc <arp_init>
 800f28a:	480a      	ldr	r0, [pc, #40]	; (800f2b4 <net_init+0x98>)
 800f28c:	f002 fd8c 	bl	8011da8 <ip_set_ip>
 800f290:	f000 fa2a 	bl	800f6e8 <tcp_init>
 800f294:	4a07      	ldr	r2, [pc, #28]	; (800f2b4 <net_init+0x98>)
 800f296:	1e63      	subs	r3, r4, #1
 800f298:	340b      	adds	r4, #11
 800f29a:	f812 1b01 	ldrb.w	r1, [r2], #1
 800f29e:	f803 1f01 	strb.w	r1, [r3, #1]!
 800f2a2:	429c      	cmp	r4, r3
 800f2a4:	d1f9      	bne.n	800f29a <net_init+0x7e>
 800f2a6:	782a      	ldrb	r2, [r5, #0]
 800f2a8:	4b03      	ldr	r3, [pc, #12]	; (800f2b8 <net_init+0x9c>)
 800f2aa:	701a      	strb	r2, [r3, #0]
 800f2ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f2b0:	2000bdf0 	strdcs	fp, [r0], -r0
 800f2b4:	2000bde4 	andcs	fp, r0, r4, ror #27
 800f2b8:	2000bdf6 	strdcs	fp, [r0], -r6

0800f2bc <net_shutdown>:
 800f2bc:	b508      	push	{r3, lr}
 800f2be:	f002 fd87 	bl	8011dd0 <ip_shutdown>
 800f2c2:	4b04      	ldr	r3, [pc, #16]	; (800f2d4 <net_shutdown+0x18>)
 800f2c4:	781b      	ldrb	r3, [r3, #0]
 800f2c6:	b11b      	cbz	r3, 800f2d0 <net_shutdown+0x14>
 800f2c8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800f2cc:	f002 bb8e 	b.w	80119ec <dhcp_client_release>
 800f2d0:	bd08      	pop	{r3, pc}
 800f2d2:	bf00      	nop
 800f2d4:	2000bdf6 	strdcs	fp, [r0], -r6

0800f2d8 <net_set_ip>:
 800f2d8:	b510      	push	{r4, lr}
 800f2da:	4c05      	ldr	r4, [pc, #20]	; (800f2f0 <net_set_ip+0x18>)
 800f2dc:	6020      	str	r0, [r4, #0]
 800f2de:	4621      	mov	r1, r4
 800f2e0:	4804      	ldr	r0, [pc, #16]	; (800f2f4 <net_set_ip+0x1c>)
 800f2e2:	f002 f88b 	bl	80113fc <arp_init>
 800f2e6:	4620      	mov	r0, r4
 800f2e8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f2ec:	f002 bd5c 	b.w	8011da8 <ip_set_ip>
 800f2f0:	2000bde4 	andcs	fp, r0, r4, ror #27
 800f2f4:	2000bdf0 	strdcs	fp, [r0], -r0

0800f2f8 <net_set_dhcp>:
 800f2f8:	b570      	push	{r4, r5, r6, lr}
 800f2fa:	2400      	movs	r4, #0
 800f2fc:	4605      	mov	r5, r0
 800f2fe:	7014      	strb	r4, [r2, #0]
 800f300:	4616      	mov	r6, r2
 800f302:	4810      	ldr	r0, [pc, #64]	; (800f344 <net_set_dhcp+0x4c>)
 800f304:	460a      	mov	r2, r1
 800f306:	4910      	ldr	r1, [pc, #64]	; (800f348 <net_set_dhcp+0x50>)
 800f308:	f002 fa68 	bl	80117dc <dhcp_client>
 800f30c:	42a0      	cmp	r0, r4
 800f30e:	da17      	bge.n	800f340 <net_set_dhcp+0x48>
 800f310:	480d      	ldr	r0, [pc, #52]	; (800f348 <net_set_dhcp+0x50>)
 800f312:	f000 f881 	bl	800f418 <rfc3927>
 800f316:	7030      	strb	r0, [r6, #0]
 800f318:	490b      	ldr	r1, [pc, #44]	; (800f348 <net_set_dhcp+0x50>)
 800f31a:	480a      	ldr	r0, [pc, #40]	; (800f344 <net_set_dhcp+0x4c>)
 800f31c:	f002 f86e 	bl	80113fc <arp_init>
 800f320:	4809      	ldr	r0, [pc, #36]	; (800f348 <net_set_dhcp+0x50>)
 800f322:	f002 fd41 	bl	8011da8 <ip_set_ip>
 800f326:	4a08      	ldr	r2, [pc, #32]	; (800f348 <net_set_dhcp+0x50>)
 800f328:	1e6b      	subs	r3, r5, #1
 800f32a:	350b      	adds	r5, #11
 800f32c:	f812 1b01 	ldrb.w	r1, [r2], #1
 800f330:	f803 1f01 	strb.w	r1, [r3, #1]!
 800f334:	42ab      	cmp	r3, r5
 800f336:	d1f9      	bne.n	800f32c <net_set_dhcp+0x34>
 800f338:	4b04      	ldr	r3, [pc, #16]	; (800f34c <net_set_dhcp+0x54>)
 800f33a:	4620      	mov	r0, r4
 800f33c:	701c      	strb	r4, [r3, #0]
 800f33e:	bd70      	pop	{r4, r5, r6, pc}
 800f340:	2401      	movs	r4, #1
 800f342:	e7e9      	b.n	800f318 <net_set_dhcp+0x20>
 800f344:	2000bdf0 	strdcs	fp, [r0], -r0
 800f348:	2000bde4 	andcs	fp, r0, r4, ror #27
 800f34c:	2000bdf6 	strdcs	fp, [r0], -r6

0800f350 <net_dhcp_release>:
 800f350:	b508      	push	{r3, lr}
 800f352:	f002 fb4b 	bl	80119ec <dhcp_client_release>
 800f356:	2200      	movs	r2, #0
 800f358:	4b01      	ldr	r3, [pc, #4]	; (800f360 <net_dhcp_release+0x10>)
 800f35a:	701a      	strb	r2, [r3, #0]
 800f35c:	bd08      	pop	{r3, pc}
 800f35e:	bf00      	nop
 800f360:	2000bdf6 	strdcs	fp, [r0], -r6

0800f364 <net_set_zeroconf>:
 800f364:	b538      	push	{r3, r4, r5, lr}
 800f366:	4604      	mov	r4, r0
 800f368:	480c      	ldr	r0, [pc, #48]	; (800f39c <net_set_zeroconf+0x38>)
 800f36a:	f000 f855 	bl	800f418 <rfc3927>
 800f36e:	4605      	mov	r5, r0
 800f370:	b190      	cbz	r0, 800f398 <net_set_zeroconf+0x34>
 800f372:	490a      	ldr	r1, [pc, #40]	; (800f39c <net_set_zeroconf+0x38>)
 800f374:	480a      	ldr	r0, [pc, #40]	; (800f3a0 <net_set_zeroconf+0x3c>)
 800f376:	f002 f841 	bl	80113fc <arp_init>
 800f37a:	4808      	ldr	r0, [pc, #32]	; (800f39c <net_set_zeroconf+0x38>)
 800f37c:	f002 fd14 	bl	8011da8 <ip_set_ip>
 800f380:	4a06      	ldr	r2, [pc, #24]	; (800f39c <net_set_zeroconf+0x38>)
 800f382:	1e63      	subs	r3, r4, #1
 800f384:	340b      	adds	r4, #11
 800f386:	f812 1b01 	ldrb.w	r1, [r2], #1
 800f38a:	f803 1f01 	strb.w	r1, [r3, #1]!
 800f38e:	42a3      	cmp	r3, r4
 800f390:	d1f9      	bne.n	800f386 <net_set_zeroconf+0x22>
 800f392:	2200      	movs	r2, #0
 800f394:	4b03      	ldr	r3, [pc, #12]	; (800f3a4 <net_set_zeroconf+0x40>)
 800f396:	701a      	strb	r2, [r3, #0]
 800f398:	4628      	mov	r0, r5
 800f39a:	bd38      	pop	{r3, r4, r5, pc}
 800f39c:	2000bde4 	andcs	fp, r0, r4, ror #27
 800f3a0:	2000bdf0 	strdcs	fp, [r0], -r0
 800f3a4:	2000bdf6 	strdcs	fp, [r0], -r6

0800f3a8 <net_handle>:
 800f3a8:	b510      	push	{r4, lr}
 800f3aa:	4c0c      	ldr	r4, [pc, #48]	; (800f3dc <net_handle+0x34>)
 800f3ac:	4620      	mov	r0, r4
 800f3ae:	f005 fa27 	bl	8014800 <emac_eth_recv>
 800f3b2:	2800      	cmp	r0, #0
 800f3b4:	dd07      	ble.n	800f3c6 <net_handle+0x1e>
 800f3b6:	6820      	ldr	r0, [r4, #0]
 800f3b8:	8983      	ldrh	r3, [r0, #12]
 800f3ba:	2b08      	cmp	r3, #8
 800f3bc:	d107      	bne.n	800f3ce <net_handle+0x26>
 800f3be:	f002 fd0e 	bl	8011dde <ip_handle>
 800f3c2:	f005 fa31 	bl	8014828 <emac_free_pkt>
 800f3c6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f3ca:	f000 b809 	b.w	800f3e0 <net_timers_run>
 800f3ce:	f5b3 6fc1 	cmp.w	r3, #1544	; 0x608
 800f3d2:	d1f6      	bne.n	800f3c2 <net_handle+0x1a>
 800f3d4:	f002 f898 	bl	8011508 <arp_handle>
 800f3d8:	e7f3      	b.n	800f3c2 <net_handle+0x1a>
 800f3da:	bf00      	nop
 800f3dc:	2000bdf8 	strdcs	fp, [r0], -r8

0800f3e0 <net_timers_run>:
 800f3e0:	4b05      	ldr	r3, [pc, #20]	; (800f3f8 <net_timers_run+0x18>)
 800f3e2:	4a06      	ldr	r2, [pc, #24]	; (800f3fc <net_timers_run+0x1c>)
 800f3e4:	681b      	ldr	r3, [r3, #0]
 800f3e6:	6811      	ldr	r1, [r2, #0]
 800f3e8:	4299      	cmp	r1, r3
 800f3ea:	d803      	bhi.n	800f3f4 <net_timers_run+0x14>
 800f3ec:	3364      	adds	r3, #100	; 0x64
 800f3ee:	6013      	str	r3, [r2, #0]
 800f3f0:	f002 bc3c 	b.w	8011c6c <igmp_timer>
 800f3f4:	4770      	bx	lr
 800f3f6:	bf00      	nop
 800f3f8:	20013df4 	strdcs	r3, [r1], -r4
 800f3fc:	2000bdfc 	strdcs	fp, [r0], -ip

0800f400 <rfc3927_init>:
 800f400:	4b04      	ldr	r3, [pc, #16]	; (800f414 <rfc3927_init+0x14>)
 800f402:	1d82      	adds	r2, r0, #6
 800f404:	4290      	cmp	r0, r2
 800f406:	d100      	bne.n	800f40a <rfc3927_init+0xa>
 800f408:	4770      	bx	lr
 800f40a:	f810 1b01 	ldrb.w	r1, [r0], #1
 800f40e:	f803 1b01 	strb.w	r1, [r3], #1
 800f412:	e7f7      	b.n	800f404 <rfc3927_init+0x4>
 800f414:	2000be00 	andcs	fp, r0, r0, lsl #28

0800f418 <rfc3927>:
 800f418:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f41c:	4605      	mov	r5, r0
 800f41e:	26ff      	movs	r6, #255	; 0xff
 800f420:	4b18      	ldr	r3, [pc, #96]	; (800f484 <rfc3927+0x6c>)
 800f422:	4f19      	ldr	r7, [pc, #100]	; (800f488 <rfc3927+0x70>)
 800f424:	791a      	ldrb	r2, [r3, #4]
 800f426:	78dc      	ldrb	r4, [r3, #3]
 800f428:	f8df 8060 	ldr.w	r8, [pc, #96]	; 800f48c <rfc3927+0x74>
 800f42c:	eb04 2402 	add.w	r4, r4, r2, lsl #8
 800f430:	f8d7 9000 	ldr.w	r9, [r7]
 800f434:	f8df b058 	ldr.w	fp, [pc, #88]	; 800f490 <rfc3927+0x78>
 800f438:	f8df a058 	ldr.w	sl, [pc, #88]	; 800f494 <rfc3927+0x7c>
 800f43c:	ea48 4404 	orr.w	r4, r8, r4, lsl #16
 800f440:	4659      	mov	r1, fp
 800f442:	4620      	mov	r0, r4
 800f444:	f002 f8ae 	bl	80115a4 <arp_cache_lookup>
 800f448:	b938      	cbnz	r0, 800f45a <rfc3927+0x42>
 800f44a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800f44e:	2001      	movs	r0, #1
 800f450:	602c      	str	r4, [r5, #0]
 800f452:	60ac      	str	r4, [r5, #8]
 800f454:	606b      	str	r3, [r5, #4]
 800f456:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f45a:	ba24      	rev	r4, r4
 800f45c:	3401      	adds	r4, #1
 800f45e:	3e01      	subs	r6, #1
 800f460:	ba24      	rev	r4, r4
 800f462:	b2b6      	uxth	r6, r6
 800f464:	4554      	cmp	r4, sl
 800f466:	bf08      	it	eq
 800f468:	4644      	moveq	r4, r8
 800f46a:	b12e      	cbz	r6, 800f478 <rfc3927+0x60>
 800f46c:	683b      	ldr	r3, [r7, #0]
 800f46e:	eba3 0309 	sub.w	r3, r3, r9
 800f472:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800f476:	d3e3      	bcc.n	800f440 <rfc3927+0x28>
 800f478:	2000      	movs	r0, #0
 800f47a:	e9c5 0001 	strd	r0, r0, [r5, #4]
 800f47e:	6028      	str	r0, [r5, #0]
 800f480:	e7e9      	b.n	800f456 <rfc3927+0x3e>
 800f482:	bf00      	nop
 800f484:	2000be00 	andcs	fp, r0, r0, lsl #28
 800f488:	20013df4 	strdcs	r3, [r1], -r4
 800f48c:	0100fea9 	smlatbeq	r0, r9, lr, pc	; <UNPREDICTABLE>
 800f490:	2000be08 	andcs	fp, r0, r8, lsl #28
 800f494:	fffefea9 			; <UNDEFINED> instruction: 0xfffefea9

0800f498 <_init_tcb>:
 800f498:	b510      	push	{r4, lr}
 800f49a:	4603      	mov	r3, r0
 800f49c:	2400      	movs	r4, #0
 800f49e:	f100 0244 	add.w	r2, r0, #68	; 0x44
 800f4a2:	4293      	cmp	r3, r2
 800f4a4:	d10d      	bne.n	800f4c2 <_init_tcb+0x2a>
 800f4a6:	4b08      	ldr	r3, [pc, #32]	; (800f4c8 <_init_tcb+0x30>)
 800f4a8:	f640 3268 	movw	r2, #2920	; 0xb68
 800f4ac:	681b      	ldr	r3, [r3, #0]
 800f4ae:	8702      	strh	r2, [r0, #56]	; 0x38
 800f4b0:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800f4b4:	6283      	str	r3, [r0, #40]	; 0x28
 800f4b6:	6243      	str	r3, [r0, #36]	; 0x24
 800f4b8:	2301      	movs	r3, #1
 800f4ba:	8001      	strh	r1, [r0, #0]
 800f4bc:	f880 3040 	strb.w	r3, [r0, #64]	; 0x40
 800f4c0:	bd10      	pop	{r4, pc}
 800f4c2:	f803 4b01 	strb.w	r4, [r3], #1
 800f4c6:	e7ec      	b.n	800f4a2 <_init_tcb+0xa>
 800f4c8:	20013df4 	strdcs	r3, [r1], -r4

0800f4cc <memcpy.isra.0>:
 800f4cc:	3801      	subs	r0, #1
 800f4ce:	440a      	add	r2, r1
 800f4d0:	4291      	cmp	r1, r2
 800f4d2:	d100      	bne.n	800f4d6 <memcpy.isra.0+0xa>
 800f4d4:	4770      	bx	lr
 800f4d6:	f811 3b01 	ldrb.w	r3, [r1], #1
 800f4da:	f800 3f01 	strb.w	r3, [r0, #1]!
 800f4de:	e7f7      	b.n	800f4d0 <memcpy.isra.0+0x4>

0800f4e0 <_bswap32>:
 800f4e0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f4e2:	2204      	movs	r2, #4
 800f4e4:	f100 052a 	add.w	r5, r0, #42	; 0x2a
 800f4e8:	4629      	mov	r1, r5
 800f4ea:	4604      	mov	r4, r0
 800f4ec:	eb0d 0002 	add.w	r0, sp, r2
 800f4f0:	f7ff ffec 	bl	800f4cc <memcpy.isra.0>
 800f4f4:	2204      	movs	r2, #4
 800f4f6:	9b01      	ldr	r3, [sp, #4]
 800f4f8:	eb0d 0102 	add.w	r1, sp, r2
 800f4fc:	ba1b      	rev	r3, r3
 800f4fe:	4628      	mov	r0, r5
 800f500:	9301      	str	r3, [sp, #4]
 800f502:	f7ff ffe3 	bl	800f4cc <memcpy.isra.0>
 800f506:	2204      	movs	r2, #4
 800f508:	3426      	adds	r4, #38	; 0x26
 800f50a:	eb0d 0002 	add.w	r0, sp, r2
 800f50e:	4621      	mov	r1, r4
 800f510:	f7ff ffdc 	bl	800f4cc <memcpy.isra.0>
 800f514:	2204      	movs	r2, #4
 800f516:	9b01      	ldr	r3, [sp, #4]
 800f518:	4620      	mov	r0, r4
 800f51a:	ba1b      	rev	r3, r3
 800f51c:	eb0d 0102 	add.w	r1, sp, r2
 800f520:	9301      	str	r3, [sp, #4]
 800f522:	f7ff ffd3 	bl	800f4cc <memcpy.isra.0>
 800f526:	b003      	add	sp, #12
 800f528:	bd30      	pop	{r4, r5, pc}
	...

0800f52c <_tcp_send_package>:
 800f52c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800f530:	7a0b      	ldrb	r3, [r1, #8]
 800f532:	4605      	mov	r5, r0
 800f534:	f013 0f02 	tst.w	r3, #2
 800f538:	bf0c      	ite	eq
 800f53a:	f04f 0905 	moveq.w	r9, #5
 800f53e:	f04f 0906 	movne.w	r9, #6
 800f542:	f04f 0800 	mov.w	r8, #0
 800f546:	4c4b      	ldr	r4, [pc, #300]	; (800f674 <_tcp_send_package+0x148>)
 800f548:	460f      	mov	r7, r1
 800f54a:	8e06      	ldrh	r6, [r0, #48]	; 0x30
 800f54c:	f100 0108 	add.w	r1, r0, #8
 800f550:	2206      	movs	r2, #6
 800f552:	4620      	mov	r0, r4
 800f554:	f7ff ffba 	bl	800f4cc <memcpy.isra.0>
 800f558:	4a47      	ldr	r2, [pc, #284]	; (800f678 <_tcp_send_package+0x14c>)
 800f55a:	eb06 0689 	add.w	r6, r6, r9, lsl #2
 800f55e:	8813      	ldrh	r3, [r2, #0]
 800f560:	b2b6      	uxth	r6, r6
 800f562:	1c59      	adds	r1, r3, #1
 800f564:	8263      	strh	r3, [r4, #18]
 800f566:	f105 0a04 	add.w	sl, r5, #4
 800f56a:	f106 0314 	add.w	r3, r6, #20
 800f56e:	ba5b      	rev16	r3, r3
 800f570:	8011      	strh	r1, [r2, #0]
 800f572:	f104 001e 	add.w	r0, r4, #30
 800f576:	2204      	movs	r2, #4
 800f578:	4651      	mov	r1, sl
 800f57a:	8223      	strh	r3, [r4, #16]
 800f57c:	f7ff ffa6 	bl	800f4cc <memcpy.isra.0>
 800f580:	2114      	movs	r1, #20
 800f582:	f104 000e 	add.w	r0, r4, #14
 800f586:	f884 8018 	strb.w	r8, [r4, #24]
 800f58a:	f884 8019 	strb.w	r8, [r4, #25]
 800f58e:	f002 fc3f 	bl	8011e10 <net_chksum>
 800f592:	882b      	ldrh	r3, [r5, #0]
 800f594:	ea4f 1909 	mov.w	r9, r9, lsl #4
 800f598:	8463      	strh	r3, [r4, #34]	; 0x22
 800f59a:	886b      	ldrh	r3, [r5, #2]
 800f59c:	8320      	strh	r0, [r4, #24]
 800f59e:	84a3      	strh	r3, [r4, #36]	; 0x24
 800f5a0:	683b      	ldr	r3, [r7, #0]
 800f5a2:	8f2a      	ldrh	r2, [r5, #56]	; 0x38
 800f5a4:	f8c4 3026 	str.w	r3, [r4, #38]	; 0x26
 800f5a8:	687b      	ldr	r3, [r7, #4]
 800f5aa:	f884 902e 	strb.w	r9, [r4, #46]	; 0x2e
 800f5ae:	f8c4 302a 	str.w	r3, [r4, #42]	; 0x2a
 800f5b2:	7a3b      	ldrb	r3, [r7, #8]
 800f5b4:	8622      	strh	r2, [r4, #48]	; 0x30
 800f5b6:	f884 302f 	strb.w	r3, [r4, #47]	; 0x2f
 800f5ba:	079b      	lsls	r3, r3, #30
 800f5bc:	bf48      	it	mi
 800f5be:	2302      	movmi	r3, #2
 800f5c0:	8baa      	ldrh	r2, [r5, #28]
 800f5c2:	bf44      	itt	mi
 800f5c4:	f884 3036 	strbmi.w	r3, [r4, #54]	; 0x36
 800f5c8:	2304      	movmi	r3, #4
 800f5ca:	86a2      	strh	r2, [r4, #52]	; 0x34
 800f5cc:	bf41      	itttt	mi
 800f5ce:	f884 3037 	strbmi.w	r3, [r4, #55]	; 0x37
 800f5d2:	4622      	movmi	r2, r4
 800f5d4:	f24b 4305 	movwmi	r3, #46085	; 0xb405
 800f5d8:	f822 3f38 	strhmi.w	r3, [r2, #56]!
 800f5dc:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 800f5de:	f884 8032 	strb.w	r8, [r4, #50]	; 0x32
 800f5e2:	f884 8033 	strb.w	r8, [r4, #51]	; 0x33
 800f5e6:	bf58      	it	pl
 800f5e8:	f104 0236 	addpl.w	r2, r4, #54	; 0x36
 800f5ec:	2b00      	cmp	r3, #0
 800f5ee:	d13f      	bne.n	800f670 <_tcp_send_package+0x144>
 800f5f0:	8c63      	ldrh	r3, [r4, #34]	; 0x22
 800f5f2:	4820      	ldr	r0, [pc, #128]	; (800f674 <_tcp_send_package+0x148>)
 800f5f4:	ba5b      	rev16	r3, r3
 800f5f6:	8463      	strh	r3, [r4, #34]	; 0x22
 800f5f8:	8ca3      	ldrh	r3, [r4, #36]	; 0x24
 800f5fa:	ba5b      	rev16	r3, r3
 800f5fc:	84a3      	strh	r3, [r4, #36]	; 0x24
 800f5fe:	f7ff ff6f 	bl	800f4e0 <_bswap32>
 800f602:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800f604:	a801      	add	r0, sp, #4
 800f606:	ba5b      	rev16	r3, r3
 800f608:	8623      	strh	r3, [r4, #48]	; 0x30
 800f60a:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800f60c:	220c      	movs	r2, #12
 800f60e:	ba5b      	rev16	r3, r3
 800f610:	491a      	ldr	r1, [pc, #104]	; (800f67c <_tcp_send_package+0x150>)
 800f612:	86a3      	strh	r3, [r4, #52]	; 0x34
 800f614:	f7ff ff5a 	bl	800f4cc <memcpy.isra.0>
 800f618:	2204      	movs	r2, #4
 800f61a:	4919      	ldr	r1, [pc, #100]	; (800f680 <_tcp_send_package+0x154>)
 800f61c:	4817      	ldr	r0, [pc, #92]	; (800f67c <_tcp_send_package+0x150>)
 800f61e:	f7ff ff55 	bl	800f4cc <memcpy.isra.0>
 800f622:	2204      	movs	r2, #4
 800f624:	4651      	mov	r1, sl
 800f626:	4817      	ldr	r0, [pc, #92]	; (800f684 <_tcp_send_package+0x158>)
 800f628:	f7ff ff50 	bl	800f4cc <memcpy.isra.0>
 800f62c:	2300      	movs	r3, #0
 800f62e:	77a3      	strb	r3, [r4, #30]
 800f630:	2306      	movs	r3, #6
 800f632:	f106 010c 	add.w	r1, r6, #12
 800f636:	77e3      	strb	r3, [r4, #31]
 800f638:	4810      	ldr	r0, [pc, #64]	; (800f67c <_tcp_send_package+0x150>)
 800f63a:	ba73      	rev16	r3, r6
 800f63c:	8423      	strh	r3, [r4, #32]
 800f63e:	f002 fbe7 	bl	8011e10 <net_chksum>
 800f642:	a901      	add	r1, sp, #4
 800f644:	4605      	mov	r5, r0
 800f646:	220c      	movs	r2, #12
 800f648:	480c      	ldr	r0, [pc, #48]	; (800f67c <_tcp_send_package+0x150>)
 800f64a:	f7ff ff3f 	bl	800f4cc <memcpy.isra.0>
 800f64e:	4809      	ldr	r0, [pc, #36]	; (800f674 <_tcp_send_package+0x148>)
 800f650:	f106 0122 	add.w	r1, r6, #34	; 0x22
 800f654:	8665      	strh	r5, [r4, #50]	; 0x32
 800f656:	b004      	add	sp, #16
 800f658:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f65c:	f005 b8e8 	b.w	8014830 <emac_eth_send>
 800f660:	6ae9      	ldr	r1, [r5, #44]	; 0x2c
 800f662:	5cc9      	ldrb	r1, [r1, r3]
 800f664:	54d1      	strb	r1, [r2, r3]
 800f666:	3301      	adds	r3, #1
 800f668:	8e29      	ldrh	r1, [r5, #48]	; 0x30
 800f66a:	4299      	cmp	r1, r3
 800f66c:	d8f8      	bhi.n	800f660 <_tcp_send_package+0x134>
 800f66e:	e7bf      	b.n	800f5f0 <_tcp_send_package+0xc4>
 800f670:	2300      	movs	r3, #0
 800f672:	e7f9      	b.n	800f668 <_tcp_send_package+0x13c>
 800f674:	2000c9c4 	andcs	ip, r0, r4, asr #19
 800f678:	2000be0e 	andcs	fp, r0, lr, lsl #28
 800f67c:	2000c9da 	ldrdcs	ip, [r0], -sl
 800f680:	2000bde4 	andcs	fp, r0, r4, ror #27
 800f684:	2000c9de 	ldrdcs	ip, [r0], -lr

0800f688 <_send_reset>:
 800f688:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800f68a:	f890 302f 	ldrb.w	r3, [r0, #47]	; 0x2f
 800f68e:	4604      	mov	r4, r0
 800f690:	075a      	lsls	r2, r3, #29
 800f692:	460e      	mov	r6, r1
 800f694:	d421      	bmi.n	800f6da <_send_reset+0x52>
 800f696:	2204      	movs	r2, #4
 800f698:	f013 0310 	ands.w	r3, r3, #16
 800f69c:	f88d 200c 	strb.w	r2, [sp, #12]
 800f6a0:	d01d      	beq.n	800f6de <_send_reset+0x56>
 800f6a2:	f100 012a 	add.w	r1, r0, #42	; 0x2a
 800f6a6:	4668      	mov	r0, sp
 800f6a8:	f7ff ff10 	bl	800f4cc <memcpy.isra.0>
 800f6ac:	9b00      	ldr	r3, [sp, #0]
 800f6ae:	9301      	str	r3, [sp, #4]
 800f6b0:	f894 302f 	ldrb.w	r3, [r4, #47]	; 0x2f
 800f6b4:	4668      	mov	r0, sp
 800f6b6:	f3c3 0540 	ubfx	r5, r3, #1, #1
 800f6ba:	f104 0126 	add.w	r1, r4, #38	; 0x26
 800f6be:	07db      	lsls	r3, r3, #31
 800f6c0:	f04f 0204 	mov.w	r2, #4
 800f6c4:	bf48      	it	mi
 800f6c6:	3501      	addmi	r5, #1
 800f6c8:	f7ff ff00 	bl	800f4cc <memcpy.isra.0>
 800f6cc:	9b00      	ldr	r3, [sp, #0]
 800f6ce:	4630      	mov	r0, r6
 800f6d0:	441d      	add	r5, r3
 800f6d2:	a901      	add	r1, sp, #4
 800f6d4:	9502      	str	r5, [sp, #8]
 800f6d6:	f7ff ff29 	bl	800f52c <_tcp_send_package>
 800f6da:	b004      	add	sp, #16
 800f6dc:	bd70      	pop	{r4, r5, r6, pc}
 800f6de:	9301      	str	r3, [sp, #4]
 800f6e0:	2314      	movs	r3, #20
 800f6e2:	f88d 300c 	strb.w	r3, [sp, #12]
 800f6e6:	e7e3      	b.n	800f6b0 <_send_reset+0x28>

0800f6e8 <tcp_init>:
 800f6e8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800f6ea:	2206      	movs	r2, #6
 800f6ec:	4c0e      	ldr	r4, [pc, #56]	; (800f728 <tcp_init+0x40>)
 800f6ee:	490f      	ldr	r1, [pc, #60]	; (800f72c <tcp_init+0x44>)
 800f6f0:	18a0      	adds	r0, r4, r2
 800f6f2:	f7ff feeb 	bl	800f4cc <memcpy.isra.0>
 800f6f6:	2308      	movs	r3, #8
 800f6f8:	2204      	movs	r2, #4
 800f6fa:	2500      	movs	r5, #0
 800f6fc:	7323      	strb	r3, [r4, #12]
 800f6fe:	4b0c      	ldr	r3, [pc, #48]	; (800f730 <tcp_init+0x48>)
 800f700:	eb0d 0102 	add.w	r1, sp, r2
 800f704:	681b      	ldr	r3, [r3, #0]
 800f706:	f104 001a 	add.w	r0, r4, #26
 800f70a:	9301      	str	r3, [sp, #4]
 800f70c:	7365      	strb	r5, [r4, #13]
 800f70e:	f7ff fedd 	bl	800f4cc <memcpy.isra.0>
 800f712:	2345      	movs	r3, #69	; 0x45
 800f714:	73a3      	strb	r3, [r4, #14]
 800f716:	2340      	movs	r3, #64	; 0x40
 800f718:	7523      	strb	r3, [r4, #20]
 800f71a:	75a3      	strb	r3, [r4, #22]
 800f71c:	2306      	movs	r3, #6
 800f71e:	73e5      	strb	r5, [r4, #15]
 800f720:	7565      	strb	r5, [r4, #21]
 800f722:	75e3      	strb	r3, [r4, #23]
 800f724:	b003      	add	sp, #12
 800f726:	bd30      	pop	{r4, r5, pc}
 800f728:	2000c9c4 	andcs	ip, r0, r4, asr #19
 800f72c:	2000bdf0 	strdcs	fp, [r0], -r0
 800f730:	2000bde4 	andcs	fp, r0, r4, ror #27

0800f734 <tcp_handle>:
 800f734:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f738:	4605      	mov	r5, r0
 800f73a:	8c43      	ldrh	r3, [r0, #34]	; 0x22
 800f73c:	b085      	sub	sp, #20
 800f73e:	ba5b      	rev16	r3, r3
 800f740:	8443      	strh	r3, [r0, #34]	; 0x22
 800f742:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 800f744:	f8b0 b010 	ldrh.w	fp, [r0, #16]
 800f748:	ba5b      	rev16	r3, r3
 800f74a:	8483      	strh	r3, [r0, #36]	; 0x24
 800f74c:	f890 802e 	ldrb.w	r8, [r0, #46]	; 0x2e
 800f750:	f7ff fec6 	bl	800f4e0 <_bswap32>
 800f754:	8e2b      	ldrh	r3, [r5, #48]	; 0x30
 800f756:	4ca6      	ldr	r4, [pc, #664]	; (800f9f0 <tcp_handle+0x2bc>)
 800f758:	ba5b      	rev16	r3, r3
 800f75a:	862b      	strh	r3, [r5, #48]	; 0x30
 800f75c:	8eab      	ldrh	r3, [r5, #52]	; 0x34
 800f75e:	8822      	ldrh	r2, [r4, #0]
 800f760:	ba5b      	rev16	r3, r3
 800f762:	86ab      	strh	r3, [r5, #52]	; 0x34
 800f764:	8cab      	ldrh	r3, [r5, #36]	; 0x24
 800f766:	429a      	cmp	r2, r3
 800f768:	d14d      	bne.n	800f806 <tcp_handle+0xd2>
 800f76a:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800f76e:	2b01      	cmp	r3, #1
 800f770:	d00d      	beq.n	800f78e <tcp_handle+0x5a>
 800f772:	2204      	movs	r2, #4
 800f774:	4668      	mov	r0, sp
 800f776:	f105 011a 	add.w	r1, r5, #26
 800f77a:	f7ff fea7 	bl	800f4cc <memcpy.isra.0>
 800f77e:	8862      	ldrh	r2, [r4, #2]
 800f780:	8c6b      	ldrh	r3, [r5, #34]	; 0x22
 800f782:	429a      	cmp	r2, r3
 800f784:	d13f      	bne.n	800f806 <tcp_handle+0xd2>
 800f786:	6862      	ldr	r2, [r4, #4]
 800f788:	9b00      	ldr	r3, [sp, #0]
 800f78a:	429a      	cmp	r2, r3
 800f78c:	d13b      	bne.n	800f806 <tcp_handle+0xd2>
 800f78e:	2204      	movs	r2, #4
 800f790:	f105 012a 	add.w	r1, r5, #42	; 0x2a
 800f794:	eb0d 0002 	add.w	r0, sp, r2
 800f798:	f7ff fe98 	bl	800f4cc <memcpy.isra.0>
 800f79c:	2204      	movs	r2, #4
 800f79e:	f105 0126 	add.w	r1, r5, #38	; 0x26
 800f7a2:	eb0d 0002 	add.w	r0, sp, r2
 800f7a6:	9e01      	ldr	r6, [sp, #4]
 800f7a8:	f7ff fe90 	bl	800f4cc <memcpy.isra.0>
 800f7ac:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 800f7b0:	9f01      	ldr	r7, [sp, #4]
 800f7b2:	2a01      	cmp	r2, #1
 800f7b4:	f8b5 a030 	ldrh.w	sl, [r5, #48]	; 0x30
 800f7b8:	d01b      	beq.n	800f7f2 <tcp_handle+0xbe>
 800f7ba:	1ed3      	subs	r3, r2, #3
 800f7bc:	2b07      	cmp	r3, #7
 800f7be:	d822      	bhi.n	800f806 <tcp_handle+0xd2>
 800f7c0:	ea4f 1318 	mov.w	r3, r8, lsr #4
 800f7c4:	f64f 78ec 	movw	r8, #65516	; 0xffec
 800f7c8:	fa9b fb9b 	rev16.w	fp, fp
 800f7cc:	eba8 0883 	sub.w	r8, r8, r3, lsl #2
 800f7d0:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 800f7d2:	44d8      	add	r8, fp
 800f7d4:	f895 002f 	ldrb.w	r0, [r5, #47]	; 0x2f
 800f7d8:	ea4f 0983 	mov.w	r9, r3, lsl #2
 800f7dc:	fa1f f888 	uxth.w	r8, r8
 800f7e0:	2900      	cmp	r1, #0
 800f7e2:	d142      	bne.n	800f86a <tcp_handle+0x136>
 800f7e4:	f1b8 0f00 	cmp.w	r8, #0
 800f7e8:	d16b      	bne.n	800f8c2 <tcp_handle+0x18e>
 800f7ea:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800f7ec:	42bb      	cmp	r3, r7
 800f7ee:	d168      	bne.n	800f8c2 <tcp_handle+0x18e>
 800f7f0:	e048      	b.n	800f884 <tcp_handle+0x150>
 800f7f2:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 800f7f6:	075a      	lsls	r2, r3, #29
 800f7f8:	d405      	bmi.n	800f806 <tcp_handle+0xd2>
 800f7fa:	06d8      	lsls	r0, r3, #27
 800f7fc:	d506      	bpl.n	800f80c <tcp_handle+0xd8>
 800f7fe:	4628      	mov	r0, r5
 800f800:	497b      	ldr	r1, [pc, #492]	; (800f9f0 <tcp_handle+0x2bc>)
 800f802:	f7ff ff41 	bl	800f688 <_send_reset>
 800f806:	b005      	add	sp, #20
 800f808:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f80c:	0799      	lsls	r1, r3, #30
 800f80e:	d5fa      	bpl.n	800f806 <tcp_handle+0xd2>
 800f810:	f895 2023 	ldrb.w	r2, [r5, #35]	; 0x23
 800f814:	f895 3022 	ldrb.w	r3, [r5, #34]	; 0x22
 800f818:	4668      	mov	r0, sp
 800f81a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800f81e:	f105 011a 	add.w	r1, r5, #26
 800f822:	2204      	movs	r2, #4
 800f824:	8063      	strh	r3, [r4, #2]
 800f826:	f7ff fe51 	bl	800f4cc <memcpy.isra.0>
 800f82a:	2206      	movs	r2, #6
 800f82c:	9b00      	ldr	r3, [sp, #0]
 800f82e:	18a9      	adds	r1, r5, r2
 800f830:	4870      	ldr	r0, [pc, #448]	; (800f9f4 <tcp_handle+0x2c0>)
 800f832:	6063      	str	r3, [r4, #4]
 800f834:	f7ff fe4a 	bl	800f4cc <memcpy.isra.0>
 800f838:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800f83a:	1c7b      	adds	r3, r7, #1
 800f83c:	e9cd 2301 	strd	r2, r3, [sp, #4]
 800f840:	6363      	str	r3, [r4, #52]	; 0x34
 800f842:	2312      	movs	r3, #18
 800f844:	486a      	ldr	r0, [pc, #424]	; (800f9f0 <tcp_handle+0x2bc>)
 800f846:	a901      	add	r1, sp, #4
 800f848:	f88d 300c 	strb.w	r3, [sp, #12]
 800f84c:	e9c4 7608 	strd	r7, r6, [r4, #32]
 800f850:	63e7      	str	r7, [r4, #60]	; 0x3c
 800f852:	f8c4 a018 	str.w	sl, [r4, #24]
 800f856:	f7ff fe69 	bl	800f52c <_tcp_send_package>
 800f85a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800f85c:	1c5a      	adds	r2, r3, #1
 800f85e:	e9c4 3204 	strd	r3, r2, [r4, #16]
 800f862:	2303      	movs	r3, #3
 800f864:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800f868:	e7cd      	b.n	800f806 <tcp_handle+0xd2>
 800f86a:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800f86c:	eba3 0c07 	sub.w	ip, r3, r7
 800f870:	f1b8 0f00 	cmp.w	r8, #0
 800f874:	d10d      	bne.n	800f892 <tcp_handle+0x15e>
 800f876:	f1bc 0f00 	cmp.w	ip, #0
 800f87a:	dc22      	bgt.n	800f8c2 <tcp_handle+0x18e>
 800f87c:	1afb      	subs	r3, r7, r3
 800f87e:	1a5b      	subs	r3, r3, r1
 800f880:	2b00      	cmp	r3, #0
 800f882:	da1e      	bge.n	800f8c2 <tcp_handle+0x18e>
 800f884:	0743      	lsls	r3, r0, #29
 800f886:	d530      	bpl.n	800f8ea <tcp_handle+0x1b6>
 800f888:	8821      	ldrh	r1, [r4, #0]
 800f88a:	4859      	ldr	r0, [pc, #356]	; (800f9f0 <tcp_handle+0x2bc>)
 800f88c:	f7ff fe04 	bl	800f498 <_init_tcb>
 800f890:	e7b9      	b.n	800f806 <tcp_handle+0xd2>
 800f892:	f1bc 0f00 	cmp.w	ip, #0
 800f896:	dc06      	bgt.n	800f8a6 <tcp_handle+0x172>
 800f898:	eba7 0c03 	sub.w	ip, r7, r3
 800f89c:	ebac 0c01 	sub.w	ip, ip, r1
 800f8a0:	f1bc 0f00 	cmp.w	ip, #0
 800f8a4:	dbee      	blt.n	800f884 <tcp_handle+0x150>
 800f8a6:	eb08 0c07 	add.w	ip, r8, r7
 800f8aa:	f103 0e01 	add.w	lr, r3, #1
 800f8ae:	ebae 0e0c 	sub.w	lr, lr, ip
 800f8b2:	f1be 0f00 	cmp.w	lr, #0
 800f8b6:	dc04      	bgt.n	800f8c2 <tcp_handle+0x18e>
 800f8b8:	43db      	mvns	r3, r3
 800f8ba:	1a5b      	subs	r3, r3, r1
 800f8bc:	eb13 0f0c 	cmn.w	r3, ip
 800f8c0:	d4e0      	bmi.n	800f884 <tcp_handle+0x150>
 800f8c2:	0742      	lsls	r2, r0, #29
 800f8c4:	d505      	bpl.n	800f8d2 <tcp_handle+0x19e>
 800f8c6:	8821      	ldrh	r1, [r4, #0]
 800f8c8:	4849      	ldr	r0, [pc, #292]	; (800f9f0 <tcp_handle+0x2bc>)
 800f8ca:	f7ff fde5 	bl	800f498 <_init_tcb>
 800f8ce:	2301      	movs	r3, #1
 800f8d0:	e7c8      	b.n	800f864 <tcp_handle+0x130>
 800f8d2:	6963      	ldr	r3, [r4, #20]
 800f8d4:	9301      	str	r3, [sp, #4]
 800f8d6:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800f8d8:	9302      	str	r3, [sp, #8]
 800f8da:	2310      	movs	r3, #16
 800f8dc:	4844      	ldr	r0, [pc, #272]	; (800f9f0 <tcp_handle+0x2bc>)
 800f8de:	a901      	add	r1, sp, #4
 800f8e0:	f88d 300c 	strb.w	r3, [sp, #12]
 800f8e4:	f7ff fe22 	bl	800f52c <_tcp_send_package>
 800f8e8:	e78d      	b.n	800f806 <tcp_handle+0xd2>
 800f8ea:	0781      	lsls	r1, r0, #30
 800f8ec:	d505      	bpl.n	800f8fa <tcp_handle+0x1c6>
 800f8ee:	2a03      	cmp	r2, #3
 800f8f0:	d0ed      	beq.n	800f8ce <tcp_handle+0x19a>
 800f8f2:	4628      	mov	r0, r5
 800f8f4:	493e      	ldr	r1, [pc, #248]	; (800f9f0 <tcp_handle+0x2bc>)
 800f8f6:	f7ff fec7 	bl	800f688 <_send_reset>
 800f8fa:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 800f8fe:	06da      	lsls	r2, r3, #27
 800f900:	d581      	bpl.n	800f806 <tcp_handle+0xd2>
 800f902:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800f906:	3b03      	subs	r3, #3
 800f908:	2b07      	cmp	r3, #7
 800f90a:	d818      	bhi.n	800f93e <tcp_handle+0x20a>
 800f90c:	e8df f003 	tbb	[pc, r3]
 800f910:	76767604 	ldrbtvc	r7, [r6], -r4, lsl #12
 800f914:	a69d7676 			; <UNDEFINED> instruction: 0xa69d7676
 800f918:	6923      	ldr	r3, [r4, #16]
 800f91a:	1b9b      	subs	r3, r3, r6
 800f91c:	2b00      	cmp	r3, #0
 800f91e:	dc0a      	bgt.n	800f936 <tcp_handle+0x202>
 800f920:	6963      	ldr	r3, [r4, #20]
 800f922:	1af3      	subs	r3, r6, r3
 800f924:	2b00      	cmp	r3, #0
 800f926:	dc06      	bgt.n	800f936 <tcp_handle+0x202>
 800f928:	2304      	movs	r3, #4
 800f92a:	e9c4 7608 	strd	r7, r6, [r4, #32]
 800f92e:	f8c4 a018 	str.w	sl, [r4, #24]
 800f932:	6126      	str	r6, [r4, #16]
 800f934:	e796      	b.n	800f864 <tcp_handle+0x130>
 800f936:	4628      	mov	r0, r5
 800f938:	492d      	ldr	r1, [pc, #180]	; (800f9f0 <tcp_handle+0x2bc>)
 800f93a:	f7ff fea5 	bl	800f688 <_send_reset>
 800f93e:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800f942:	3b04      	subs	r3, #4
 800f944:	2b02      	cmp	r3, #2
 800f946:	d830      	bhi.n	800f9aa <tcp_handle+0x276>
 800f948:	f1b8 0f00 	cmp.w	r8, #0
 800f94c:	d02d      	beq.n	800f9aa <tcp_handle+0x276>
 800f94e:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800f950:	42bb      	cmp	r3, r7
 800f952:	f040 8092 	bne.w	800fa7a <tcp_handle+0x346>
 800f956:	f240 53b6 	movw	r3, #1462	; 0x5b6
 800f95a:	f8df a09c 	ldr.w	sl, [pc, #156]	; 800f9f8 <tcp_handle+0x2c4>
 800f95e:	f105 0122 	add.w	r1, r5, #34	; 0x22
 800f962:	f8ba 7000 	ldrh.w	r7, [sl]
 800f966:	4642      	mov	r2, r8
 800f968:	435f      	muls	r7, r3
 800f96a:	1d38      	adds	r0, r7, #4
 800f96c:	4449      	add	r1, r9
 800f96e:	4450      	add	r0, sl
 800f970:	f7ff fdac 	bl	800f4cc <memcpy.isra.0>
 800f974:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 800f976:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800f978:	f2a2 52b4 	subw	r2, r2, #1460	; 0x5b4
 800f97c:	8722      	strh	r2, [r4, #56]	; 0x38
 800f97e:	6962      	ldr	r2, [r4, #20]
 800f980:	4443      	add	r3, r8
 800f982:	e9cd 2301 	strd	r2, r3, [sp, #4]
 800f986:	6363      	str	r3, [r4, #52]	; 0x34
 800f988:	2310      	movs	r3, #16
 800f98a:	4457      	add	r7, sl
 800f98c:	4818      	ldr	r0, [pc, #96]	; (800f9f0 <tcp_handle+0x2bc>)
 800f98e:	f8a7 85b8 	strh.w	r8, [r7, #1464]	; 0x5b8
 800f992:	a901      	add	r1, sp, #4
 800f994:	f88d 300c 	strb.w	r3, [sp, #12]
 800f998:	f7ff fdc8 	bl	800f52c <_tcp_send_package>
 800f99c:	f8ba 3000 	ldrh.w	r3, [sl]
 800f9a0:	3301      	adds	r3, #1
 800f9a2:	f003 0301 	and.w	r3, r3, #1
 800f9a6:	f8aa 3000 	strh.w	r3, [sl]
 800f9aa:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800f9ae:	2b02      	cmp	r3, #2
 800f9b0:	f67f af29 	bls.w	800f806 <tcp_handle+0xd2>
 800f9b4:	f895 302f 	ldrb.w	r3, [r5, #47]	; 0x2f
 800f9b8:	07db      	lsls	r3, r3, #31
 800f9ba:	f57f af24 	bpl.w	800f806 <tcp_handle+0xd2>
 800f9be:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800f9c0:	6962      	ldr	r2, [r4, #20]
 800f9c2:	3301      	adds	r3, #1
 800f9c4:	e9cd 2301 	strd	r2, r3, [sp, #4]
 800f9c8:	6363      	str	r3, [r4, #52]	; 0x34
 800f9ca:	2310      	movs	r3, #16
 800f9cc:	4808      	ldr	r0, [pc, #32]	; (800f9f0 <tcp_handle+0x2bc>)
 800f9ce:	a901      	add	r1, sp, #4
 800f9d0:	f88d 300c 	strb.w	r3, [sp, #12]
 800f9d4:	f7ff fdaa 	bl	800f52c <_tcp_send_package>
 800f9d8:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800f9dc:	2b05      	cmp	r3, #5
 800f9de:	d054      	beq.n	800fa8a <tcp_handle+0x356>
 800f9e0:	d84e      	bhi.n	800fa80 <tcp_handle+0x34c>
 800f9e2:	3b03      	subs	r3, #3
 800f9e4:	2b01      	cmp	r3, #1
 800f9e6:	f63f af0e 	bhi.w	800f806 <tcp_handle+0xd2>
 800f9ea:	2307      	movs	r3, #7
 800f9ec:	e73a      	b.n	800f864 <tcp_handle+0x130>
 800f9ee:	bf00      	nop
 800f9f0:	2000c980 	andcs	ip, r0, r0, lsl #19
 800f9f4:	2000c988 	andcs	ip, r0, r8, lsl #19
 800f9f8:	2000be10 	andcs	fp, r0, r0, lsl lr
 800f9fc:	6923      	ldr	r3, [r4, #16]
 800f9fe:	1b99      	subs	r1, r3, r6
 800fa00:	d513      	bpl.n	800fa2a <tcp_handle+0x2f6>
 800fa02:	6962      	ldr	r2, [r4, #20]
 800fa04:	1ab2      	subs	r2, r6, r2
 800fa06:	2a00      	cmp	r2, #0
 800fa08:	dc0f      	bgt.n	800fa2a <tcp_handle+0x2f6>
 800fa0a:	6126      	str	r6, [r4, #16]
 800fa0c:	6a23      	ldr	r3, [r4, #32]
 800fa0e:	1bda      	subs	r2, r3, r7
 800fa10:	2a00      	cmp	r2, #0
 800fa12:	db05      	blt.n	800fa20 <tcp_handle+0x2ec>
 800fa14:	42bb      	cmp	r3, r7
 800fa16:	d192      	bne.n	800f93e <tcp_handle+0x20a>
 800fa18:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800fa1a:	1b9b      	subs	r3, r3, r6
 800fa1c:	2b00      	cmp	r3, #0
 800fa1e:	dc8e      	bgt.n	800f93e <tcp_handle+0x20a>
 800fa20:	e9c4 7608 	strd	r7, r6, [r4, #32]
 800fa24:	f8c4 a018 	str.w	sl, [r4, #24]
 800fa28:	e789      	b.n	800f93e <tcp_handle+0x20a>
 800fa2a:	1af3      	subs	r3, r6, r3
 800fa2c:	2b00      	cmp	r3, #0
 800fa2e:	dc06      	bgt.n	800fa3e <tcp_handle+0x30a>
 800fa30:	2900      	cmp	r1, #0
 800fa32:	dc84      	bgt.n	800f93e <tcp_handle+0x20a>
 800fa34:	6963      	ldr	r3, [r4, #20]
 800fa36:	1af3      	subs	r3, r6, r3
 800fa38:	2b00      	cmp	r3, #0
 800fa3a:	dc80      	bgt.n	800f93e <tcp_handle+0x20a>
 800fa3c:	e7e6      	b.n	800fa0c <tcp_handle+0x2d8>
 800fa3e:	6963      	ldr	r3, [r4, #20]
 800fa40:	1b9a      	subs	r2, r3, r6
 800fa42:	2a00      	cmp	r2, #0
 800fa44:	f6bf af7b 	bge.w	800f93e <tcp_handle+0x20a>
 800fa48:	e744      	b.n	800f8d4 <tcp_handle+0x1a0>
 800fa4a:	6963      	ldr	r3, [r4, #20]
 800fa4c:	42b3      	cmp	r3, r6
 800fa4e:	f47f af76 	bne.w	800f93e <tcp_handle+0x20a>
 800fa52:	8821      	ldrh	r1, [r4, #0]
 800fa54:	480f      	ldr	r0, [pc, #60]	; (800fa94 <tcp_handle+0x360>)
 800fa56:	f7ff fd1f 	bl	800f498 <_init_tcb>
 800fa5a:	e770      	b.n	800f93e <tcp_handle+0x20a>
 800fa5c:	6963      	ldr	r3, [r4, #20]
 800fa5e:	42b3      	cmp	r3, r6
 800fa60:	f47f af6d 	bne.w	800f93e <tcp_handle+0x20a>
 800fa64:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800fa66:	480b      	ldr	r0, [pc, #44]	; (800fa94 <tcp_handle+0x360>)
 800fa68:	9302      	str	r3, [sp, #8]
 800fa6a:	2310      	movs	r3, #16
 800fa6c:	a901      	add	r1, sp, #4
 800fa6e:	9601      	str	r6, [sp, #4]
 800fa70:	f88d 300c 	strb.w	r3, [sp, #12]
 800fa74:	f7ff fd5a 	bl	800f52c <_tcp_send_package>
 800fa78:	e761      	b.n	800f93e <tcp_handle+0x20a>
 800fa7a:	6962      	ldr	r2, [r4, #20]
 800fa7c:	9201      	str	r2, [sp, #4]
 800fa7e:	e72b      	b.n	800f8d8 <tcp_handle+0x1a4>
 800fa80:	2b06      	cmp	r3, #6
 800fa82:	f47f aec0 	bne.w	800f806 <tcp_handle+0xd2>
 800fa86:	230a      	movs	r3, #10
 800fa88:	e6ec      	b.n	800f864 <tcp_handle+0x130>
 800fa8a:	6963      	ldr	r3, [r4, #20]
 800fa8c:	42b3      	cmp	r3, r6
 800fa8e:	d0fa      	beq.n	800fa86 <tcp_handle+0x352>
 800fa90:	2308      	movs	r3, #8
 800fa92:	e6e7      	b.n	800f864 <tcp_handle+0x130>
 800fa94:	2000c980 	andcs	ip, r0, r0, lsl #19

0800fa98 <tcp_begin>:
 800fa98:	b508      	push	{r3, lr}
 800fa9a:	4b0a      	ldr	r3, [pc, #40]	; (800fac4 <tcp_begin+0x2c>)
 800fa9c:	4601      	mov	r1, r0
 800fa9e:	881a      	ldrh	r2, [r3, #0]
 800faa0:	4282      	cmp	r2, r0
 800faa2:	d102      	bne.n	800faaa <tcp_begin+0x12>
 800faa4:	f893 0040 	ldrb.w	r0, [r3, #64]	; 0x40
 800faa8:	b130      	cbz	r0, 800fab8 <tcp_begin+0x20>
 800faaa:	b12a      	cbz	r2, 800fab8 <tcp_begin+0x20>
 800faac:	4806      	ldr	r0, [pc, #24]	; (800fac8 <tcp_begin+0x30>)
 800faae:	f003 fba5 	bl	80131fc <console_error>
 800fab2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800fab6:	bd08      	pop	{r3, pc}
 800fab8:	4802      	ldr	r0, [pc, #8]	; (800fac4 <tcp_begin+0x2c>)
 800faba:	8019      	strh	r1, [r3, #0]
 800fabc:	f7ff fcec 	bl	800f498 <_init_tcb>
 800fac0:	2000      	movs	r0, #0
 800fac2:	e7f8      	b.n	800fab6 <tcp_begin+0x1e>
 800fac4:	2000c980 	andcs	ip, r0, r0, lsl #19
 800fac8:	080175a6 	stmdaeq	r1, {r1, r2, r5, r7, r8, sl, ip, sp, lr}

0800facc <tcp_write>:
 800facc:	f240 53b4 	movw	r3, #1460	; 0x5b4
 800fad0:	429a      	cmp	r2, r3
 800fad2:	bf28      	it	cs
 800fad4:	461a      	movcs	r2, r3
 800fad6:	2344      	movs	r3, #68	; 0x44
 800fad8:	b530      	push	{r4, r5, lr}
 800fada:	4c0d      	ldr	r4, [pc, #52]	; (800fb10 <tcp_write+0x44>)
 800fadc:	b085      	sub	sp, #20
 800fade:	fb03 4400 	mla	r4, r3, r0, r4
 800fae2:	6963      	ldr	r3, [r4, #20]
 800fae4:	4615      	mov	r5, r2
 800fae6:	9301      	str	r3, [sp, #4]
 800fae8:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800faea:	62e1      	str	r1, [r4, #44]	; 0x2c
 800faec:	9302      	str	r3, [sp, #8]
 800faee:	2318      	movs	r3, #24
 800faf0:	8622      	strh	r2, [r4, #48]	; 0x30
 800faf2:	4620      	mov	r0, r4
 800faf4:	a901      	add	r1, sp, #4
 800faf6:	f88d 300c 	strb.w	r3, [sp, #12]
 800fafa:	f7ff fd17 	bl	800f52c <_tcp_send_package>
 800fafe:	2300      	movs	r3, #0
 800fb00:	6962      	ldr	r2, [r4, #20]
 800fb02:	62e3      	str	r3, [r4, #44]	; 0x2c
 800fb04:	442a      	add	r2, r5
 800fb06:	8623      	strh	r3, [r4, #48]	; 0x30
 800fb08:	6162      	str	r2, [r4, #20]
 800fb0a:	b005      	add	sp, #20
 800fb0c:	bd30      	pop	{r4, r5, pc}
 800fb0e:	bf00      	nop
 800fb10:	2000c980 	andcs	ip, r0, r0, lsl #19

0800fb14 <tcp_read>:
 800fb14:	2344      	movs	r3, #68	; 0x44
 800fb16:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fb18:	4c1c      	ldr	r4, [pc, #112]	; (800fb8c <tcp_read+0x78>)
 800fb1a:	b085      	sub	sp, #20
 800fb1c:	fb03 4400 	mla	r4, r3, r0, r4
 800fb20:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800fb24:	2b07      	cmp	r3, #7
 800fb26:	d112      	bne.n	800fb4e <tcp_read+0x3a>
 800fb28:	6963      	ldr	r3, [r4, #20]
 800fb2a:	4620      	mov	r0, r4
 800fb2c:	9301      	str	r3, [sp, #4]
 800fb2e:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800fb30:	a901      	add	r1, sp, #4
 800fb32:	9302      	str	r3, [sp, #8]
 800fb34:	2311      	movs	r3, #17
 800fb36:	f88d 300c 	strb.w	r3, [sp, #12]
 800fb3a:	f7ff fcf7 	bl	800f52c <_tcp_send_package>
 800fb3e:	2309      	movs	r3, #9
 800fb40:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800fb44:	6963      	ldr	r3, [r4, #20]
 800fb46:	3301      	adds	r3, #1
 800fb48:	6163      	str	r3, [r4, #20]
 800fb4a:	2000      	movs	r0, #0
 800fb4c:	e01b      	b.n	800fb86 <tcp_read+0x72>
 800fb4e:	f44f 6337 	mov.w	r3, #2928	; 0xb70
 800fb52:	4358      	muls	r0, r3
 800fb54:	4a0e      	ldr	r2, [pc, #56]	; (800fb90 <tcp_read+0x7c>)
 800fb56:	1817      	adds	r7, r2, r0
 800fb58:	887b      	ldrh	r3, [r7, #2]
 800fb5a:	5a15      	ldrh	r5, [r2, r0]
 800fb5c:	429d      	cmp	r5, r3
 800fb5e:	d0f4      	beq.n	800fb4a <tcp_read+0x36>
 800fb60:	f240 55b6 	movw	r5, #1462	; 0x5b6
 800fb64:	435d      	muls	r5, r3
 800fb66:	1d06      	adds	r6, r0, #4
 800fb68:	442e      	add	r6, r5
 800fb6a:	4416      	add	r6, r2
 800fb6c:	4428      	add	r0, r5
 800fb6e:	600e      	str	r6, [r1, #0]
 800fb70:	4402      	add	r2, r0
 800fb72:	f8b2 05b8 	ldrh.w	r0, [r2, #1464]	; 0x5b8
 800fb76:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 800fb78:	3301      	adds	r3, #1
 800fb7a:	f202 52b4 	addw	r2, r2, #1460	; 0x5b4
 800fb7e:	f003 0301 	and.w	r3, r3, #1
 800fb82:	8722      	strh	r2, [r4, #56]	; 0x38
 800fb84:	807b      	strh	r3, [r7, #2]
 800fb86:	b005      	add	sp, #20
 800fb88:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800fb8a:	bf00      	nop
 800fb8c:	2000c980 	andcs	ip, r0, r0, lsl #19
 800fb90:	2000be10 	andcs	fp, r0, r0, lsl lr

0800fb94 <memcpy.isra.0>:
 800fb94:	3801      	subs	r0, #1
 800fb96:	440a      	add	r2, r1
 800fb98:	4291      	cmp	r1, r2
 800fb9a:	d100      	bne.n	800fb9e <memcpy.isra.0+0xa>
 800fb9c:	4770      	bx	lr
 800fb9e:	f811 3b01 	ldrb.w	r3, [r1], #1
 800fba2:	f800 3f01 	strb.w	r3, [r0, #1]!
 800fba6:	e7f7      	b.n	800fb98 <memcpy.isra.0+0x4>

0800fba8 <net_memcpy>:
 800fba8:	ea41 0300 	orr.w	r3, r1, r0
 800fbac:	079b      	lsls	r3, r3, #30
 800fbae:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fbb0:	d115      	bne.n	800fbde <net_memcpy+0x36>
 800fbb2:	f022 0303 	bic.w	r3, r2, #3
 800fbb6:	1f04      	subs	r4, r0, #4
 800fbb8:	0895      	lsrs	r5, r2, #2
 800fbba:	18ce      	adds	r6, r1, r3
 800fbbc:	42b1      	cmp	r1, r6
 800fbbe:	d109      	bne.n	800fbd4 <net_memcpy+0x2c>
 800fbc0:	f06f 0403 	mvn.w	r4, #3
 800fbc4:	fb04 2205 	mla	r2, r4, r5, r2
 800fbc8:	4403      	add	r3, r0
 800fbca:	3b01      	subs	r3, #1
 800fbcc:	440a      	add	r2, r1
 800fbce:	4291      	cmp	r1, r2
 800fbd0:	d107      	bne.n	800fbe2 <net_memcpy+0x3a>
 800fbd2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800fbd4:	f851 7b04 	ldr.w	r7, [r1], #4
 800fbd8:	f844 7f04 	str.w	r7, [r4, #4]!
 800fbdc:	e7ee      	b.n	800fbbc <net_memcpy+0x14>
 800fbde:	4603      	mov	r3, r0
 800fbe0:	e7f3      	b.n	800fbca <net_memcpy+0x22>
 800fbe2:	f811 4b01 	ldrb.w	r4, [r1], #1
 800fbe6:	f803 4f01 	strb.w	r4, [r3, #1]!
 800fbea:	e7f0      	b.n	800fbce <net_memcpy+0x26>

0800fbec <udp_set_ip>:
 800fbec:	2204      	movs	r2, #4
 800fbee:	b513      	push	{r0, r1, r4, lr}
 800fbf0:	4604      	mov	r4, r0
 800fbf2:	6803      	ldr	r3, [r0, #0]
 800fbf4:	eb0d 0102 	add.w	r1, sp, r2
 800fbf8:	4808      	ldr	r0, [pc, #32]	; (800fc1c <udp_set_ip+0x30>)
 800fbfa:	9301      	str	r3, [sp, #4]
 800fbfc:	f7ff ffca 	bl	800fb94 <memcpy.isra.0>
 800fc00:	6862      	ldr	r2, [r4, #4]
 800fc02:	4b07      	ldr	r3, [pc, #28]	; (800fc20 <udp_set_ip+0x34>)
 800fc04:	43d1      	mvns	r1, r2
 800fc06:	6019      	str	r1, [r3, #0]
 800fc08:	6823      	ldr	r3, [r4, #0]
 800fc0a:	4013      	ands	r3, r2
 800fc0c:	4a05      	ldr	r2, [pc, #20]	; (800fc24 <udp_set_ip+0x38>)
 800fc0e:	6013      	str	r3, [r2, #0]
 800fc10:	68a2      	ldr	r2, [r4, #8]
 800fc12:	4b05      	ldr	r3, [pc, #20]	; (800fc28 <udp_set_ip+0x3c>)
 800fc14:	601a      	str	r2, [r3, #0]
 800fc16:	b002      	add	sp, #8
 800fc18:	bd10      	pop	{r4, pc}
 800fc1a:	bf00      	nop
 800fc1c:	20012c9a 	mulcs	r1, sl, ip
 800fc20:	2000cfb0 			; <UNDEFINED> instruction: 0x2000cfb0
 800fc24:	2000cfb8 			; <UNDEFINED> instruction: 0x2000cfb8
 800fc28:	2000cfb4 			; <UNDEFINED> instruction: 0x2000cfb4

0800fc2c <udp_init>:
 800fc2c:	b570      	push	{r4, r5, r6, lr}
 800fc2e:	2200      	movs	r2, #0
 800fc30:	2508      	movs	r5, #8
 800fc32:	460e      	mov	r6, r1
 800fc34:	4b12      	ldr	r3, [pc, #72]	; (800fc80 <udp_init+0x54>)
 800fc36:	4913      	ldr	r1, [pc, #76]	; (800fc84 <udp_init+0x58>)
 800fc38:	3d01      	subs	r5, #1
 800fc3a:	801a      	strh	r2, [r3, #0]
 800fc3c:	805a      	strh	r2, [r3, #2]
 800fc3e:	f841 2b04 	str.w	r2, [r1], #4
 800fc42:	f603 3394 	addw	r3, r3, #2964	; 0xb94
 800fc46:	d1f7      	bne.n	800fc38 <udp_init+0xc>
 800fc48:	2206      	movs	r2, #6
 800fc4a:	4c0f      	ldr	r4, [pc, #60]	; (800fc88 <udp_init+0x5c>)
 800fc4c:	4b0f      	ldr	r3, [pc, #60]	; (800fc8c <udp_init+0x60>)
 800fc4e:	4601      	mov	r1, r0
 800fc50:	18a0      	adds	r0, r4, r2
 800fc52:	801d      	strh	r5, [r3, #0]
 800fc54:	f7ff ff9e 	bl	800fb94 <memcpy.isra.0>
 800fc58:	2308      	movs	r3, #8
 800fc5a:	7323      	strb	r3, [r4, #12]
 800fc5c:	2345      	movs	r3, #69	; 0x45
 800fc5e:	73a3      	strb	r3, [r4, #14]
 800fc60:	2340      	movs	r3, #64	; 0x40
 800fc62:	7523      	strb	r3, [r4, #20]
 800fc64:	75a3      	strb	r3, [r4, #22]
 800fc66:	2311      	movs	r3, #17
 800fc68:	4630      	mov	r0, r6
 800fc6a:	7365      	strb	r5, [r4, #13]
 800fc6c:	73e5      	strb	r5, [r4, #15]
 800fc6e:	7565      	strb	r5, [r4, #21]
 800fc70:	75e3      	strb	r3, [r4, #23]
 800fc72:	f7ff ffbb 	bl	800fbec <udp_set_ip>
 800fc76:	f884 5028 	strb.w	r5, [r4, #40]	; 0x28
 800fc7a:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 800fc7e:	bd70      	pop	{r4, r5, r6, pc}
 800fc80:	2000cfe0 	andcs	ip, r0, r0, ror #31
 800fc84:	2000cfc0 	andcs	ip, r0, r0, asr #31
 800fc88:	20012c80 	andcs	r2, r1, r0, lsl #25
 800fc8c:	2000cfbc 			; <UNDEFINED> instruction: 0x2000cfbc

0800fc90 <udp_shutdown>:
 800fc90:	4770      	bx	lr
	...

0800fc94 <udp_handle>:
 800fc94:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800fc98:	8c83      	ldrh	r3, [r0, #36]	; 0x24
 800fc9a:	4607      	mov	r7, r0
 800fc9c:	ba5b      	rev16	r3, r3
 800fc9e:	b29b      	uxth	r3, r3
 800fca0:	f1a3 0244 	sub.w	r2, r3, #68	; 0x44
 800fca4:	2a01      	cmp	r2, #1
 800fca6:	d904      	bls.n	800fcb2 <udp_handle+0x1e>
 800fca8:	2b7b      	cmp	r3, #123	; 0x7b
 800fcaa:	d002      	beq.n	800fcb2 <udp_handle+0x1e>
 800fcac:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800fcb0:	d308      	bcc.n	800fcc4 <udp_handle+0x30>
 800fcb2:	2400      	movs	r4, #0
 800fcb4:	4a1f      	ldr	r2, [pc, #124]	; (800fd34 <udp_handle+0xa0>)
 800fcb6:	f852 1b04 	ldr.w	r1, [r2], #4
 800fcba:	4299      	cmp	r1, r3
 800fcbc:	d005      	beq.n	800fcca <udp_handle+0x36>
 800fcbe:	3401      	adds	r4, #1
 800fcc0:	2c08      	cmp	r4, #8
 800fcc2:	d1f8      	bne.n	800fcb6 <udp_handle+0x22>
 800fcc4:	b002      	add	sp, #8
 800fcc6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800fcca:	f640 3394 	movw	r3, #2964	; 0xb94
 800fcce:	8cfe      	ldrh	r6, [r7, #38]	; 0x26
 800fcd0:	435c      	muls	r4, r3
 800fcd2:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 800fcd6:	ba76      	rev16	r6, r6
 800fcd8:	3e08      	subs	r6, #8
 800fcda:	b2b6      	uxth	r6, r6
 800fcdc:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 800fce0:	bf28      	it	cs
 800fce2:	f44f 66b8 	movcs.w	r6, #1472	; 0x5c0
 800fce6:	f8df 8050 	ldr.w	r8, [pc, #80]	; 800fd38 <udp_handle+0xa4>
 800fcea:	1d20      	adds	r0, r4, #4
 800fcec:	f838 5004 	ldrh.w	r5, [r8, r4]
 800fcf0:	4632      	mov	r2, r6
 800fcf2:	435d      	muls	r5, r3
 800fcf4:	4428      	add	r0, r5
 800fcf6:	f107 012a 	add.w	r1, r7, #42	; 0x2a
 800fcfa:	4440      	add	r0, r8
 800fcfc:	f7ff ff4a 	bl	800fb94 <memcpy.isra.0>
 800fd00:	2204      	movs	r2, #4
 800fd02:	f107 011a 	add.w	r1, r7, #26
 800fd06:	eb0d 0002 	add.w	r0, sp, r2
 800fd0a:	f7ff ff43 	bl	800fb94 <memcpy.isra.0>
 800fd0e:	9a01      	ldr	r2, [sp, #4]
 800fd10:	192b      	adds	r3, r5, r4
 800fd12:	4443      	add	r3, r8
 800fd14:	f8c3 25c4 	str.w	r2, [r3, #1476]	; 0x5c4
 800fd18:	8c7a      	ldrh	r2, [r7, #34]	; 0x22
 800fd1a:	f8a3 65ca 	strh.w	r6, [r3, #1482]	; 0x5ca
 800fd1e:	ba52      	rev16	r2, r2
 800fd20:	f8a3 25c8 	strh.w	r2, [r3, #1480]	; 0x5c8
 800fd24:	f838 3004 	ldrh.w	r3, [r8, r4]
 800fd28:	3301      	adds	r3, #1
 800fd2a:	f003 0301 	and.w	r3, r3, #1
 800fd2e:	f828 3004 	strh.w	r3, [r8, r4]
 800fd32:	e7c7      	b.n	800fcc4 <udp_handle+0x30>
 800fd34:	2000cfc0 	andcs	ip, r0, r0, asr #31
 800fd38:	2000cfe0 	andcs	ip, r0, r0, ror #31

0800fd3c <udp_bind>:
 800fd3c:	4a0a      	ldr	r2, [pc, #40]	; (800fd68 <udp_bind+0x2c>)
 800fd3e:	4603      	mov	r3, r0
 800fd40:	b510      	push	{r4, lr}
 800fd42:	2000      	movs	r0, #0
 800fd44:	4614      	mov	r4, r2
 800fd46:	f852 1b04 	ldr.w	r1, [r2], #4
 800fd4a:	4299      	cmp	r1, r3
 800fd4c:	d008      	beq.n	800fd60 <udp_bind+0x24>
 800fd4e:	b141      	cbz	r1, 800fd62 <udp_bind+0x26>
 800fd50:	3001      	adds	r0, #1
 800fd52:	2808      	cmp	r0, #8
 800fd54:	d1f7      	bne.n	800fd46 <udp_bind+0xa>
 800fd56:	4805      	ldr	r0, [pc, #20]	; (800fd6c <udp_bind+0x30>)
 800fd58:	f003 fa50 	bl	80131fc <console_error>
 800fd5c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800fd60:	bd10      	pop	{r4, pc}
 800fd62:	f844 3020 	str.w	r3, [r4, r0, lsl #2]
 800fd66:	e7fb      	b.n	800fd60 <udp_bind+0x24>
 800fd68:	2000cfc0 	andcs	ip, r0, r0, asr #31
 800fd6c:	080175c6 	stmdaeq	r1, {r1, r2, r6, r7, r8, sl, ip, sp, lr}

0800fd70 <udp_unbind>:
 800fd70:	4a0c      	ldr	r2, [pc, #48]	; (800fda4 <udp_unbind+0x34>)
 800fd72:	2300      	movs	r3, #0
 800fd74:	4611      	mov	r1, r2
 800fd76:	b510      	push	{r4, lr}
 800fd78:	f852 4b04 	ldr.w	r4, [r2], #4
 800fd7c:	4284      	cmp	r4, r0
 800fd7e:	d108      	bne.n	800fd92 <udp_unbind+0x22>
 800fd80:	2000      	movs	r0, #0
 800fd82:	f640 3294 	movw	r2, #2964	; 0xb94
 800fd86:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 800fd8a:	4353      	muls	r3, r2
 800fd8c:	4a06      	ldr	r2, [pc, #24]	; (800fda8 <udp_unbind+0x38>)
 800fd8e:	5098      	str	r0, [r3, r2]
 800fd90:	bd10      	pop	{r4, pc}
 800fd92:	3301      	adds	r3, #1
 800fd94:	2b08      	cmp	r3, #8
 800fd96:	d1ef      	bne.n	800fd78 <udp_unbind+0x8>
 800fd98:	4804      	ldr	r0, [pc, #16]	; (800fdac <udp_unbind+0x3c>)
 800fd9a:	f003 fa2f 	bl	80131fc <console_error>
 800fd9e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800fda2:	e7f5      	b.n	800fd90 <udp_unbind+0x20>
 800fda4:	2000cfc0 	andcs	ip, r0, r0, asr #31
 800fda8:	2000cfe0 	andcs	ip, r0, r0, ror #31
 800fdac:	080175cb 	stmdaeq	r1, {r0, r1, r3, r6, r7, r8, sl, ip, sp, lr}

0800fdb0 <udp_recv>:
 800fdb0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fdb4:	4604      	mov	r4, r0
 800fdb6:	4698      	mov	r8, r3
 800fdb8:	f640 3394 	movw	r3, #2964	; 0xb94
 800fdbc:	435c      	muls	r4, r3
 800fdbe:	4608      	mov	r0, r1
 800fdc0:	4915      	ldr	r1, [pc, #84]	; (800fe18 <udp_recv+0x68>)
 800fdc2:	190f      	adds	r7, r1, r4
 800fdc4:	f8b7 c002 	ldrh.w	ip, [r7, #2]
 800fdc8:	5b0b      	ldrh	r3, [r1, r4]
 800fdca:	4563      	cmp	r3, ip
 800fdcc:	d021      	beq.n	800fe12 <udp_recv+0x62>
 800fdce:	f44f 63b9 	mov.w	r3, #1480	; 0x5c8
 800fdd2:	fb03 fc0c 	mul.w	ip, r3, ip
 800fdd6:	eb0c 0604 	add.w	r6, ip, r4
 800fdda:	440e      	add	r6, r1
 800fddc:	f8b6 55ca 	ldrh.w	r5, [r6, #1482]	; 0x5ca
 800fde0:	3404      	adds	r4, #4
 800fde2:	4295      	cmp	r5, r2
 800fde4:	bf28      	it	cs
 800fde6:	4615      	movcs	r5, r2
 800fde8:	4464      	add	r4, ip
 800fdea:	462a      	mov	r2, r5
 800fdec:	4421      	add	r1, r4
 800fdee:	f7ff fedb 	bl	800fba8 <net_memcpy>
 800fdf2:	f8d6 35c4 	ldr.w	r3, [r6, #1476]	; 0x5c4
 800fdf6:	f8c8 3000 	str.w	r3, [r8]
 800fdfa:	f8b6 25c8 	ldrh.w	r2, [r6, #1480]	; 0x5c8
 800fdfe:	9b06      	ldr	r3, [sp, #24]
 800fe00:	801a      	strh	r2, [r3, #0]
 800fe02:	887b      	ldrh	r3, [r7, #2]
 800fe04:	3301      	adds	r3, #1
 800fe06:	f003 0301 	and.w	r3, r3, #1
 800fe0a:	807b      	strh	r3, [r7, #2]
 800fe0c:	4628      	mov	r0, r5
 800fe0e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800fe12:	2500      	movs	r5, #0
 800fe14:	e7fa      	b.n	800fe0c <udp_recv+0x5c>
 800fe16:	bf00      	nop
 800fe18:	2000cfe0 	andcs	ip, r0, r0, ror #31

0800fe1c <udp_recv2>:
 800fe1c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fe1e:	f640 3594 	movw	r5, #2964	; 0xb94
 800fe22:	4368      	muls	r0, r5
 800fe24:	4c0f      	ldr	r4, [pc, #60]	; (800fe64 <udp_recv2+0x48>)
 800fe26:	1827      	adds	r7, r4, r0
 800fe28:	887d      	ldrh	r5, [r7, #2]
 800fe2a:	5a26      	ldrh	r6, [r4, r0]
 800fe2c:	42ae      	cmp	r6, r5
 800fe2e:	d017      	beq.n	800fe60 <udp_recv2+0x44>
 800fe30:	f44f 6cb9 	mov.w	ip, #1480	; 0x5c8
 800fe34:	fb0c f505 	mul.w	r5, ip, r5
 800fe38:	1d06      	adds	r6, r0, #4
 800fe3a:	442e      	add	r6, r5
 800fe3c:	4405      	add	r5, r0
 800fe3e:	4426      	add	r6, r4
 800fe40:	442c      	add	r4, r5
 800fe42:	600e      	str	r6, [r1, #0]
 800fe44:	f8d4 15c4 	ldr.w	r1, [r4, #1476]	; 0x5c4
 800fe48:	6011      	str	r1, [r2, #0]
 800fe4a:	f8b4 25c8 	ldrh.w	r2, [r4, #1480]	; 0x5c8
 800fe4e:	801a      	strh	r2, [r3, #0]
 800fe50:	887b      	ldrh	r3, [r7, #2]
 800fe52:	f8b4 05ca 	ldrh.w	r0, [r4, #1482]	; 0x5ca
 800fe56:	3301      	adds	r3, #1
 800fe58:	f003 0301 	and.w	r3, r3, #1
 800fe5c:	807b      	strh	r3, [r7, #2]
 800fe5e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800fe60:	2000      	movs	r0, #0
 800fe62:	e7fc      	b.n	800fe5e <udp_recv2+0x42>
 800fe64:	2000cfe0 	andcs	ip, r0, r0, ror #31

0800fe68 <udp_send>:
 800fe68:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800fe6c:	f8df 9134 	ldr.w	r9, [pc, #308]	; 800ffa4 <udp_send+0x13c>
 800fe70:	461c      	mov	r4, r3
 800fe72:	f859 3020 	ldr.w	r3, [r9, r0, lsl #2]
 800fe76:	4607      	mov	r7, r0
 800fe78:	4688      	mov	r8, r1
 800fe7a:	4616      	mov	r6, r2
 800fe7c:	2b00      	cmp	r3, #0
 800fe7e:	f000 808e 	beq.w	800ff9e <udp_send+0x136>
 800fe82:	1c63      	adds	r3, r4, #1
 800fe84:	d144      	bne.n	800ff10 <udp_send+0xa8>
 800fe86:	4848      	ldr	r0, [pc, #288]	; (800ffa8 <udp_send+0x140>)
 800fe88:	2107      	movs	r1, #7
 800fe8a:	4602      	mov	r2, r0
 800fe8c:	23ff      	movs	r3, #255	; 0xff
 800fe8e:	e001      	b.n	800fe94 <udp_send+0x2c>
 800fe90:	f800 3b01 	strb.w	r3, [r0], #1
 800fe94:	3901      	subs	r1, #1
 800fe96:	d1fb      	bne.n	800fe90 <udp_send+0x28>
 800fe98:	7793      	strb	r3, [r2, #30]
 800fe9a:	77d3      	strb	r3, [r2, #31]
 800fe9c:	f882 3020 	strb.w	r3, [r2, #32]
 800fea0:	f882 3021 	strb.w	r3, [r2, #33]	; 0x21
 800fea4:	2500      	movs	r5, #0
 800fea6:	f8df a104 	ldr.w	sl, [pc, #260]	; 800ffac <udp_send+0x144>
 800feaa:	4c3f      	ldr	r4, [pc, #252]	; (800ffa8 <udp_send+0x140>)
 800feac:	f8ba 3000 	ldrh.w	r3, [sl]
 800feb0:	2114      	movs	r1, #20
 800feb2:	8263      	strh	r3, [r4, #18]
 800feb4:	f106 031c 	add.w	r3, r6, #28
 800feb8:	ba5b      	rev16	r3, r3
 800feba:	f104 000e 	add.w	r0, r4, #14
 800febe:	8223      	strh	r3, [r4, #16]
 800fec0:	7625      	strb	r5, [r4, #24]
 800fec2:	7665      	strb	r5, [r4, #25]
 800fec4:	f001 ffa4 	bl	8011e10 <net_chksum>
 800fec8:	f859 3027 	ldr.w	r3, [r9, r7, lsl #2]
 800fecc:	f5b6 6fb8 	cmp.w	r6, #1472	; 0x5c0
 800fed0:	ba5b      	rev16	r3, r3
 800fed2:	8463      	strh	r3, [r4, #34]	; 0x22
 800fed4:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 800fed8:	4632      	mov	r2, r6
 800feda:	ba5b      	rev16	r3, r3
 800fedc:	84a3      	strh	r3, [r4, #36]	; 0x24
 800fede:	f106 0308 	add.w	r3, r6, #8
 800fee2:	ba5b      	rev16	r3, r3
 800fee4:	bf28      	it	cs
 800fee6:	f44f 62b8 	movcs.w	r2, #1472	; 0x5c0
 800feea:	4641      	mov	r1, r8
 800feec:	8320      	strh	r0, [r4, #24]
 800feee:	f104 002a 	add.w	r0, r4, #42	; 0x2a
 800fef2:	84e3      	strh	r3, [r4, #38]	; 0x26
 800fef4:	f7ff fe58 	bl	800fba8 <net_memcpy>
 800fef8:	4620      	mov	r0, r4
 800fefa:	f106 012a 	add.w	r1, r6, #42	; 0x2a
 800fefe:	f004 fc97 	bl	8014830 <emac_eth_send>
 800ff02:	f8ba 3000 	ldrh.w	r3, [sl]
 800ff06:	4628      	mov	r0, r5
 800ff08:	3301      	adds	r3, #1
 800ff0a:	f8aa 3000 	strh.w	r3, [sl]
 800ff0e:	e037      	b.n	800ff80 <udp_send+0x118>
 800ff10:	4b27      	ldr	r3, [pc, #156]	; (800ffb0 <udp_send+0x148>)
 800ff12:	681b      	ldr	r3, [r3, #0]
 800ff14:	43a3      	bics	r3, r4
 800ff16:	d10f      	bne.n	800ff38 <udp_send+0xd0>
 800ff18:	2307      	movs	r3, #7
 800ff1a:	21ff      	movs	r1, #255	; 0xff
 800ff1c:	4a22      	ldr	r2, [pc, #136]	; (800ffa8 <udp_send+0x140>)
 800ff1e:	e001      	b.n	800ff24 <udp_send+0xbc>
 800ff20:	f802 1b01 	strb.w	r1, [r2], #1
 800ff24:	3b01      	subs	r3, #1
 800ff26:	d1fb      	bne.n	800ff20 <udp_send+0xb8>
 800ff28:	2204      	movs	r2, #4
 800ff2a:	4822      	ldr	r0, [pc, #136]	; (800ffb4 <udp_send+0x14c>)
 800ff2c:	eb0d 0102 	add.w	r1, sp, r2
 800ff30:	9401      	str	r4, [sp, #4]
 800ff32:	f7ff fe2f 	bl	800fb94 <memcpy.isra.0>
 800ff36:	e7b5      	b.n	800fea4 <udp_send+0x3c>
 800ff38:	f004 03e0 	and.w	r3, r4, #224	; 0xe0
 800ff3c:	2be0      	cmp	r3, #224	; 0xe0
 800ff3e:	d10e      	bne.n	800ff5e <udp_send+0xf6>
 800ff40:	491d      	ldr	r1, [pc, #116]	; (800ffb8 <udp_send+0x150>)
 800ff42:	f3c4 2306 	ubfx	r3, r4, #8, #7
 800ff46:	70cb      	strb	r3, [r1, #3]
 800ff48:	f3c4 4307 	ubfx	r3, r4, #16, #8
 800ff4c:	710b      	strb	r3, [r1, #4]
 800ff4e:	f3c4 6307 	ubfx	r3, r4, #24, #8
 800ff52:	2206      	movs	r2, #6
 800ff54:	4814      	ldr	r0, [pc, #80]	; (800ffa8 <udp_send+0x140>)
 800ff56:	714b      	strb	r3, [r1, #5]
 800ff58:	f7ff fe1c 	bl	800fb94 <memcpy.isra.0>
 800ff5c:	e7e4      	b.n	800ff28 <udp_send+0xc0>
 800ff5e:	4b17      	ldr	r3, [pc, #92]	; (800ffbc <udp_send+0x154>)
 800ff60:	681b      	ldr	r3, [r3, #0]
 800ff62:	43a3      	bics	r3, r4
 800ff64:	d00f      	beq.n	800ff86 <udp_send+0x11e>
 800ff66:	4d16      	ldr	r5, [pc, #88]	; (800ffc0 <udp_send+0x158>)
 800ff68:	490f      	ldr	r1, [pc, #60]	; (800ffa8 <udp_send+0x140>)
 800ff6a:	6828      	ldr	r0, [r5, #0]
 800ff6c:	f001 fb1a 	bl	80115a4 <arp_cache_lookup>
 800ff70:	682b      	ldr	r3, [r5, #0]
 800ff72:	4298      	cmp	r0, r3
 800ff74:	d0d8      	beq.n	800ff28 <udp_send+0xc0>
 800ff76:	4813      	ldr	r0, [pc, #76]	; (800ffc4 <udp_send+0x15c>)
 800ff78:	f003 f940 	bl	80131fc <console_error>
 800ff7c:	f06f 0002 	mvn.w	r0, #2
 800ff80:	b002      	add	sp, #8
 800ff82:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ff86:	4620      	mov	r0, r4
 800ff88:	4907      	ldr	r1, [pc, #28]	; (800ffa8 <udp_send+0x140>)
 800ff8a:	f001 fb0b 	bl	80115a4 <arp_cache_lookup>
 800ff8e:	42a0      	cmp	r0, r4
 800ff90:	d0ca      	beq.n	800ff28 <udp_send+0xc0>
 800ff92:	480d      	ldr	r0, [pc, #52]	; (800ffc8 <udp_send+0x160>)
 800ff94:	f003 f932 	bl	80131fc <console_error>
 800ff98:	f06f 0001 	mvn.w	r0, #1
 800ff9c:	e7f0      	b.n	800ff80 <udp_send+0x118>
 800ff9e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800ffa2:	e7ed      	b.n	800ff80 <udp_send+0x118>
 800ffa4:	2000cfc0 	andcs	ip, r0, r0, asr #31
 800ffa8:	20012c80 	andcs	r2, r1, r0, lsl #25
 800ffac:	2000cfbc 			; <UNDEFINED> instruction: 0x2000cfbc
 800ffb0:	2000cfb0 			; <UNDEFINED> instruction: 0x2000cfb0
 800ffb4:	20012c9e 	mulcs	r1, lr, ip
 800ffb8:	20000004 	andcs	r0, r0, r4
 800ffbc:	2000cfb8 			; <UNDEFINED> instruction: 0x2000cfb8
 800ffc0:	2000cfb4 			; <UNDEFINED> instruction: 0x2000cfb4
 800ffc4:	080175d3 	stmdaeq	r1, {r0, r1, r4, r6, r7, r8, sl, ip, sp, lr}
 800ffc8:	080175f9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, r8, sl, ip, sp, lr}

0800ffcc <strlen>:
 800ffcc:	4603      	mov	r3, r0
 800ffce:	461a      	mov	r2, r3
 800ffd0:	7811      	ldrb	r1, [r2, #0]
 800ffd2:	3301      	adds	r3, #1
 800ffd4:	2900      	cmp	r1, #0
 800ffd6:	d1fa      	bne.n	800ffce <strlen+0x2>
 800ffd8:	1a10      	subs	r0, r2, r0
 800ffda:	4770      	bx	lr

0800ffdc <strcmp>:
 800ffdc:	1e43      	subs	r3, r0, #1
 800ffde:	3901      	subs	r1, #1
 800ffe0:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800ffe4:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 800ffe8:	4290      	cmp	r0, r2
 800ffea:	d102      	bne.n	800fff2 <strcmp+0x16>
 800ffec:	2800      	cmp	r0, #0
 800ffee:	d1f7      	bne.n	800ffe0 <strcmp+0x4>
 800fff0:	4770      	bx	lr
 800fff2:	1a80      	subs	r0, r0, r2
 800fff4:	4770      	bx	lr

0800fff6 <strcpy.isra.0>:
 800fff6:	3801      	subs	r0, #1
 800fff8:	f811 3b01 	ldrb.w	r3, [r1], #1
 800fffc:	f800 3f01 	strb.w	r3, [r0, #1]!
 8010000:	2b00      	cmp	r3, #0
 8010002:	d1f9      	bne.n	800fff8 <strcpy.isra.0+0x2>
 8010004:	4770      	bx	lr

08010006 <strcat.isra.0>:
 8010006:	b538      	push	{r3, r4, r5, lr}
 8010008:	4604      	mov	r4, r0
 801000a:	460d      	mov	r5, r1
 801000c:	f7ff ffde 	bl	800ffcc <strlen>
 8010010:	4629      	mov	r1, r5
 8010012:	4420      	add	r0, r4
 8010014:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8010018:	f7ff bfed 	b.w	800fff6 <strcpy.isra.0>

0801001c <MDNS::MDNS()>:
 801001c:	b513      	push	{r0, r1, r4, lr}
 801001e:	4604      	mov	r4, r0
 8010020:	a901      	add	r1, sp, #4
 8010022:	4804      	ldr	r0, [pc, #16]	; (8010034 <MDNS::MDNS()+0x18>)
 8010024:	f003 fafc 	bl	8013620 <inet_aton>
 8010028:	4620      	mov	r0, r4
 801002a:	4b03      	ldr	r3, [pc, #12]	; (8010038 <MDNS::MDNS()+0x1c>)
 801002c:	9a01      	ldr	r2, [sp, #4]
 801002e:	601a      	str	r2, [r3, #0]
 8010030:	b002      	add	sp, #8
 8010032:	bd10      	pop	{r4, pc}
 8010034:	08017619 	stmdaeq	r1, {r0, r3, r4, r9, sl, ip, sp, lr}
 8010038:	20013274 	andcs	r3, r1, r4, ror r2

0801003c <MDNS::SetName(char const*)>:
 801003c:	b538      	push	{r3, r4, r5, lr}
 801003e:	4d0b      	ldr	r5, [pc, #44]	; (801006c <MDNS::SetName(char const*)+0x30>)
 8010040:	460c      	mov	r4, r1
 8010042:	6828      	ldr	r0, [r5, #0]
 8010044:	b108      	cbz	r0, 801004a <MDNS::SetName(char const*)+0xe>
 8010046:	f003 fae5 	bl	8013614 <operator delete[](void*)>
 801004a:	4620      	mov	r0, r4
 801004c:	f7ff ffbe 	bl	800ffcc <strlen>
 8010050:	3007      	adds	r0, #7
 8010052:	f003 fae3 	bl	801361c <operator new[](unsigned int)>
 8010056:	4621      	mov	r1, r4
 8010058:	6028      	str	r0, [r5, #0]
 801005a:	f7ff ffcc 	bl	800fff6 <strcpy.isra.0>
 801005e:	6828      	ldr	r0, [r5, #0]
 8010060:	4903      	ldr	r1, [pc, #12]	; (8010070 <MDNS::SetName(char const*)+0x34>)
 8010062:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8010066:	f7ff bfce 	b.w	8010006 <strcat.isra.0>
 801006a:	bf00      	nop
 801006c:	200136a4 	andcs	r3, r1, r4, lsr #13
 8010070:	08017629 	stmdaeq	r1, {r0, r3, r5, r9, sl, ip, sp, lr}

08010074 <MDNS::DecodeDNSNameNotation(char const*, char*)>:
 8010074:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010078:	f04f 0e00 	mov.w	lr, #0
 801007c:	262e      	movs	r6, #46	; 0x2e
 801007e:	4675      	mov	r5, lr
 8010080:	4694      	mov	ip, r2
 8010082:	4f1d      	ldr	r7, [pc, #116]	; (80100f8 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x84>)
 8010084:	4a1d      	ldr	r2, [pc, #116]	; (80100fc <MDNS::DecodeDNSNameNotation(char const*, char*)+0x88>)
 8010086:	780b      	ldrb	r3, [r1, #0]
 8010088:	1c68      	adds	r0, r5, #1
 801008a:	b383      	cbz	r3, 80100ee <MDNS::DecodeDNSNameNotation(char const*, char*)+0x7a>
 801008c:	2b3f      	cmp	r3, #63	; 0x3f
 801008e:	d91d      	bls.n	80100cc <MDNS::DecodeDNSNameNotation(char const*, char*)+0x58>
 8010090:	f1be 0f00 	cmp.w	lr, #0
 8010094:	bf08      	it	eq
 8010096:	4605      	moveq	r5, r0
 8010098:	2000      	movs	r0, #0
 801009a:	7849      	ldrb	r1, [r1, #1]
 801009c:	ea07 2303 	and.w	r3, r7, r3, lsl #8
 80100a0:	430b      	orrs	r3, r1
 80100a2:	6811      	ldr	r1, [r2, #0]
 80100a4:	5ccc      	ldrb	r4, [r1, r3]
 80100a6:	3301      	adds	r3, #1
 80100a8:	440b      	add	r3, r1
 80100aa:	42a0      	cmp	r0, r4
 80100ac:	5c19      	ldrb	r1, [r3, r0]
 80100ae:	d309      	bcc.n	80100c4 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x50>
 80100b0:	f04f 0e01 	mov.w	lr, #1
 80100b4:	1919      	adds	r1, r3, r4
 80100b6:	4464      	add	r4, ip
 80100b8:	780b      	ldrb	r3, [r1, #0]
 80100ba:	b10b      	cbz	r3, 80100c0 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x4c>
 80100bc:	f804 6b01 	strb.w	r6, [r4], #1
 80100c0:	46a4      	mov	ip, r4
 80100c2:	e7e0      	b.n	8010086 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x12>
 80100c4:	f80c 1000 	strb.w	r1, [ip, r0]
 80100c8:	3001      	adds	r0, #1
 80100ca:	e7ee      	b.n	80100aa <MDNS::DecodeDNSNameNotation(char const*, char*)+0x36>
 80100cc:	4688      	mov	r8, r1
 80100ce:	eb0c 0403 	add.w	r4, ip, r3
 80100d2:	f818 9f01 	ldrb.w	r9, [r8, #1]!
 80100d6:	f80c 9b01 	strb.w	r9, [ip], #1
 80100da:	4564      	cmp	r4, ip
 80100dc:	d1f9      	bne.n	80100d2 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x5e>
 80100de:	f103 0c01 	add.w	ip, r3, #1
 80100e2:	4461      	add	r1, ip
 80100e4:	f1be 0f00 	cmp.w	lr, #0
 80100e8:	d1e6      	bne.n	80100b8 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x44>
 80100ea:	18c5      	adds	r5, r0, r3
 80100ec:	e7e4      	b.n	80100b8 <MDNS::DecodeDNSNameNotation(char const*, char*)+0x44>
 80100ee:	f88c 3000 	strb.w	r3, [ip]
 80100f2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80100f6:	bf00      	nop
 80100f8:	ffff3f00 			; <UNDEFINED> instruction: 0xffff3f00
 80100fc:	200136a8 	andcs	r3, r1, r8, lsr #13

08010100 <MDNS::FindFirstDotFromRight(char const*) const>:
 8010100:	b510      	push	{r4, lr}
 8010102:	4608      	mov	r0, r1
 8010104:	460c      	mov	r4, r1
 8010106:	f7ff ff61 	bl	800ffcc <strlen>
 801010a:	4420      	add	r0, r4
 801010c:	42a0      	cmp	r0, r4
 801010e:	d903      	bls.n	8010118 <MDNS::FindFirstDotFromRight(char const*) const+0x18>
 8010110:	f810 3901 	ldrb.w	r3, [r0], #-1
 8010114:	2b2e      	cmp	r3, #46	; 0x2e
 8010116:	d1f9      	bne.n	801010c <MDNS::FindFirstDotFromRight(char const*) const+0xc>
 8010118:	3001      	adds	r0, #1
 801011a:	bd10      	pop	{r4, pc}

0801011c <MDNS::WriteDnsName(char const*, char*, bool)>:
 801011c:	4610      	mov	r0, r2
 801011e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010120:	460f      	mov	r7, r1
 8010122:	1c44      	adds	r4, r0, #1
 8010124:	463d      	mov	r5, r7
 8010126:	f817 6b01 	ldrb.w	r6, [r7], #1
 801012a:	b126      	cbz	r6, 8010136 <MDNS::WriteDnsName(char const*, char*, bool)+0x1a>
 801012c:	2e2e      	cmp	r6, #46	; 0x2e
 801012e:	d002      	beq.n	8010136 <MDNS::WriteDnsName(char const*, char*, bool)+0x1a>
 8010130:	f804 6b01 	strb.w	r6, [r4], #1
 8010134:	e7f6      	b.n	8010124 <MDNS::WriteDnsName(char const*, char*, bool)+0x8>
 8010136:	1a69      	subs	r1, r5, r1
 8010138:	7001      	strb	r1, [r0, #0]
 801013a:	7829      	ldrb	r1, [r5, #0]
 801013c:	b921      	cbnz	r1, 8010148 <MDNS::WriteDnsName(char const*, char*, bool)+0x2c>
 801013e:	b10b      	cbz	r3, 8010144 <MDNS::WriteDnsName(char const*, char*, bool)+0x28>
 8010140:	f804 1b01 	strb.w	r1, [r4], #1
 8010144:	1aa0      	subs	r0, r4, r2
 8010146:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010148:	4620      	mov	r0, r4
 801014a:	1c69      	adds	r1, r5, #1
 801014c:	e7e8      	b.n	8010120 <MDNS::WriteDnsName(char const*, char*, bool)+0x4>
	...

08010150 <MDNS::CreateAnswerLocalIpAddress()>:
 8010150:	2384      	movs	r3, #132	; 0x84
 8010152:	b510      	push	{r4, lr}
 8010154:	4c0f      	ldr	r4, [pc, #60]	; (8010194 <MDNS::CreateAnswerLocalIpAddress()+0x44>)
 8010156:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 801015a:	80e3      	strh	r3, [r4, #6]
 801015c:	2300      	movs	r3, #0
 801015e:	490e      	ldr	r1, [pc, #56]	; (8010198 <MDNS::CreateAnswerLocalIpAddress()+0x48>)
 8010160:	e9c4 2302 	strd	r2, r3, [r4, #8]
 8010164:	6809      	ldr	r1, [r1, #0]
 8010166:	f104 0210 	add.w	r2, r4, #16
 801016a:	2301      	movs	r3, #1
 801016c:	f7ff ffd6 	bl	801011c <MDNS::WriteDnsName(char const*, char*, bool)>
 8010170:	490a      	ldr	r1, [pc, #40]	; (801019c <MDNS::CreateAnswerLocalIpAddress()+0x4c>)
 8010172:	1813      	adds	r3, r2, r0
 8010174:	5011      	str	r1, [r2, r0]
 8010176:	f04f 42f0 	mov.w	r2, #2013265920	; 0x78000000
 801017a:	605a      	str	r2, [r3, #4]
 801017c:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8010180:	811a      	strh	r2, [r3, #8]
 8010182:	4a07      	ldr	r2, [pc, #28]	; (80101a0 <MDNS::CreateAnswerLocalIpAddress()+0x50>)
 8010184:	6812      	ldr	r2, [r2, #0]
 8010186:	6912      	ldr	r2, [r2, #16]
 8010188:	f8c3 200a 	str.w	r2, [r3, #10]
 801018c:	1b1b      	subs	r3, r3, r4
 801018e:	330a      	adds	r3, #10
 8010190:	6023      	str	r3, [r4, #0]
 8010192:	bd10      	pop	{r4, pc}
 8010194:	20013278 	andcs	r3, r1, r8, ror r2
 8010198:	200136a4 	andcs	r3, r1, r4, lsr #13
 801019c:	01800100 	orreq	r0, r0, r0, lsl #2
 80101a0:	200136ac 	andcs	r3, r1, ip, lsr #13

080101a4 <MDNS::Start()>:
 80101a4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80101a6:	4c1e      	ldr	r4, [pc, #120]	; (8010220 <MDNS::Start()+0x7c>)
 80101a8:	f241 41e9 	movw	r1, #5353	; 0x14e9
 80101ac:	4605      	mov	r5, r0
 80101ae:	6820      	ldr	r0, [r4, #0]
 80101b0:	f000 fb2a 	bl	8010808 <Network::Begin(unsigned short)>
 80101b4:	4e1b      	ldr	r6, [pc, #108]	; (8010224 <MDNS::Start()+0x80>)
 80101b6:	4f1c      	ldr	r7, [pc, #112]	; (8010228 <MDNS::Start()+0x84>)
 80101b8:	4601      	mov	r1, r0
 80101ba:	6030      	str	r0, [r6, #0]
 80101bc:	683a      	ldr	r2, [r7, #0]
 80101be:	6820      	ldr	r0, [r4, #0]
 80101c0:	f000 fb33 	bl	801082a <Network::JoinGroup(int, unsigned int)>
 80101c4:	4b19      	ldr	r3, [pc, #100]	; (801022c <MDNS::Start()+0x88>)
 80101c6:	681b      	ldr	r3, [r3, #0]
 80101c8:	b923      	cbnz	r3, 80101d4 <MDNS::Start()+0x30>
 80101ca:	6821      	ldr	r1, [r4, #0]
 80101cc:	4628      	mov	r0, r5
 80101ce:	311c      	adds	r1, #28
 80101d0:	f7ff ff34 	bl	801003c <MDNS::SetName(char const*)>
 80101d4:	4628      	mov	r0, r5
 80101d6:	f7ff ffbb 	bl	8010150 <MDNS::CreateAnswerLocalIpAddress()>
 80101da:	f241 43e9 	movw	r3, #5353	; 0x14e9
 80101de:	4914      	ldr	r1, [pc, #80]	; (8010230 <MDNS::Start()+0x8c>)
 80101e0:	7830      	ldrb	r0, [r6, #0]
 80101e2:	f851 2b04 	ldr.w	r2, [r1], #4
 80101e6:	9300      	str	r3, [sp, #0]
 80101e8:	b292      	uxth	r2, r2
 80101ea:	683b      	ldr	r3, [r7, #0]
 80101ec:	f7ff fe3c 	bl	800fe68 <udp_send>
 80101f0:	223f      	movs	r2, #63	; 0x3f
 80101f2:	6820      	ldr	r0, [r4, #0]
 80101f4:	4c0f      	ldr	r4, [pc, #60]	; (8010234 <MDNS::Start()+0x90>)
 80101f6:	f100 035c 	add.w	r3, r0, #92	; 0x5c
 80101fa:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 80101fe:	b929      	cbnz	r1, 801020c <MDNS::Start()+0x68>
 8010200:	441a      	add	r2, r3
 8010202:	4293      	cmp	r3, r2
 8010204:	d006      	beq.n	8010214 <MDNS::Start()+0x70>
 8010206:	f803 1b01 	strb.w	r1, [r3], #1
 801020a:	e7fa      	b.n	8010202 <MDNS::Start()+0x5e>
 801020c:	3a01      	subs	r2, #1
 801020e:	f803 1b01 	strb.w	r1, [r3], #1
 8010212:	d1f2      	bne.n	80101fa <MDNS::Start()+0x56>
 8010214:	2300      	movs	r3, #0
 8010216:	f880 309b 	strb.w	r3, [r0, #155]	; 0x9b
 801021a:	b003      	add	sp, #12
 801021c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801021e:	bf00      	nop
 8010220:	200136ac 	andcs	r3, r1, ip, lsr #13
 8010224:	2000000c 	andcs	r0, r0, ip
 8010228:	20013274 	andcs	r3, r1, r4, ror r2
 801022c:	200136a4 	andcs	r3, r1, r4, lsr #13
 8010230:	20013278 	andcs	r3, r1, r8, ror r2
 8010234:	08017629 	stmdaeq	r1, {r0, r3, r5, r9, sl, ip, sp, lr}

08010238 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)>:
 8010238:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801023c:	4c1b      	ldr	r4, [pc, #108]	; (80102ac <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x74>)
 801023e:	ea4f 1c01 	mov.w	ip, r1, lsl #4
 8010242:	eb04 1501 	add.w	r5, r4, r1, lsl #4
 8010246:	2300      	movs	r3, #0
 8010248:	f854 100c 	ldr.w	r1, [r4, ip]
 801024c:	4607      	mov	r7, r0
 801024e:	f7ff ff65 	bl	801011c <MDNS::WriteDnsName(char const*, char*, bool)>
 8010252:	2301      	movs	r3, #1
 8010254:	7bac      	ldrb	r4, [r5, #14]
 8010256:	4616      	mov	r6, r2
 8010258:	4915      	ldr	r1, [pc, #84]	; (80102b0 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x78>)
 801025a:	4402      	add	r2, r0
 801025c:	4815      	ldr	r0, [pc, #84]	; (80102b4 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x7c>)
 801025e:	429c      	cmp	r4, r3
 8010260:	bf18      	it	ne
 8010262:	4601      	movne	r1, r0
 8010264:	4638      	mov	r0, r7
 8010266:	f7ff ff59 	bl	801011c <MDNS::WriteDnsName(char const*, char*, bool)>
 801026a:	4b13      	ldr	r3, [pc, #76]	; (80102b8 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x80>)
 801026c:	1814      	adds	r4, r2, r0
 801026e:	5013      	str	r3, [r2, r0]
 8010270:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 8010274:	6063      	str	r3, [r4, #4]
 8010276:	4b11      	ldr	r3, [pc, #68]	; (80102bc <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)+0x84>)
 8010278:	f8d3 8000 	ldr.w	r8, [r3]
 801027c:	4640      	mov	r0, r8
 801027e:	f7ff fea5 	bl	800ffcc <strlen>
 8010282:	f100 0308 	add.w	r3, r0, #8
 8010286:	ba5b      	rev16	r3, r3
 8010288:	8123      	strh	r3, [r4, #8]
 801028a:	2300      	movs	r3, #0
 801028c:	f8c4 300a 	str.w	r3, [r4, #10]
 8010290:	89ab      	ldrh	r3, [r5, #12]
 8010292:	f104 0210 	add.w	r2, r4, #16
 8010296:	ba5b      	rev16	r3, r3
 8010298:	81e3      	strh	r3, [r4, #14]
 801029a:	4641      	mov	r1, r8
 801029c:	2301      	movs	r3, #1
 801029e:	4638      	mov	r0, r7
 80102a0:	f7ff ff3c 	bl	801011c <MDNS::WriteDnsName(char const*, char*, bool)>
 80102a4:	4410      	add	r0, r2
 80102a6:	1b80      	subs	r0, r0, r6
 80102a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80102ac:	2001347c 	andcs	r3, r1, ip, ror r4
 80102b0:	08017625 	stmdaeq	r1, {r0, r2, r5, r9, sl, ip, sp, lr}
 80102b4:	08017642 	stmdaeq	r1, {r1, r6, r9, sl, ip, sp, lr}
 80102b8:	01802100 	orreq	r2, r0, r0, lsl #2
 80102bc:	200136a4 	andcs	r3, r1, r4, lsr #13

080102c0 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)>:
 80102c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80102c4:	4e19      	ldr	r6, [pc, #100]	; (801032c <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x6c>)
 80102c6:	010f      	lsls	r7, r1, #4
 80102c8:	eb06 1501 	add.w	r5, r6, r1, lsl #4
 80102cc:	2300      	movs	r3, #0
 80102ce:	59f1      	ldr	r1, [r6, r7]
 80102d0:	4604      	mov	r4, r0
 80102d2:	f7ff ff23 	bl	801011c <MDNS::WriteDnsName(char const*, char*, bool)>
 80102d6:	2301      	movs	r3, #1
 80102d8:	7bae      	ldrb	r6, [r5, #14]
 80102da:	4690      	mov	r8, r2
 80102dc:	4914      	ldr	r1, [pc, #80]	; (8010330 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x70>)
 80102de:	4402      	add	r2, r0
 80102e0:	4814      	ldr	r0, [pc, #80]	; (8010334 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x74>)
 80102e2:	429e      	cmp	r6, r3
 80102e4:	bf18      	it	ne
 80102e6:	4601      	movne	r1, r0
 80102e8:	4620      	mov	r0, r4
 80102ea:	f7ff ff17 	bl	801011c <MDNS::WriteDnsName(char const*, char*, bool)>
 80102ee:	4b12      	ldr	r3, [pc, #72]	; (8010338 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x78>)
 80102f0:	1816      	adds	r6, r2, r0
 80102f2:	5013      	str	r3, [r2, r0]
 80102f4:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 80102f8:	68a8      	ldr	r0, [r5, #8]
 80102fa:	6073      	str	r3, [r6, #4]
 80102fc:	f106 040b 	add.w	r4, r6, #11
 8010300:	b938      	cbnz	r0, 8010312 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x52>
 8010302:	f44f 7380 	mov.w	r3, #256	; 0x100
 8010306:	72b0      	strb	r0, [r6, #10]
 8010308:	8133      	strh	r3, [r6, #8]
 801030a:	eba4 0008 	sub.w	r0, r4, r8
 801030e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010312:	f7ff fe5b 	bl	800ffcc <strlen>
 8010316:	4607      	mov	r7, r0
 8010318:	1c43      	adds	r3, r0, #1
 801031a:	72b0      	strb	r0, [r6, #10]
 801031c:	ba5b      	rev16	r3, r3
 801031e:	4620      	mov	r0, r4
 8010320:	68a9      	ldr	r1, [r5, #8]
 8010322:	8133      	strh	r3, [r6, #8]
 8010324:	f7ff fe67 	bl	800fff6 <strcpy.isra.0>
 8010328:	443c      	add	r4, r7
 801032a:	e7ee      	b.n	801030a <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)+0x4a>
 801032c:	2001347c 	andcs	r3, r1, ip, ror r4
 8010330:	08017625 	stmdaeq	r1, {r0, r2, r5, r9, sl, ip, sp, lr}
 8010334:	08017642 	stmdaeq	r1, {r1, r6, r9, sl, ip, sp, lr}
 8010338:	01801000 	orreq	r1, r0, r0

0801033c <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)>:
 801033c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8010340:	f8df 8060 	ldr.w	r8, [pc, #96]	; 80103a4 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x68>
 8010344:	ea4f 1901 	mov.w	r9, r1, lsl #4
 8010348:	eb08 1501 	add.w	r5, r8, r1, lsl #4
 801034c:	6869      	ldr	r1, [r5, #4]
 801034e:	2301      	movs	r3, #1
 8010350:	4607      	mov	r7, r0
 8010352:	f7ff fee3 	bl	801011c <MDNS::WriteDnsName(char const*, char*, bool)>
 8010356:	4b14      	ldr	r3, [pc, #80]	; (80103a8 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x6c>)
 8010358:	f858 8009 	ldr.w	r8, [r8, r9]
 801035c:	5013      	str	r3, [r2, r0]
 801035e:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 8010362:	1816      	adds	r6, r2, r0
 8010364:	6073      	str	r3, [r6, #4]
 8010366:	4640      	mov	r0, r8
 8010368:	4614      	mov	r4, r2
 801036a:	f7ff fe2f 	bl	800ffcc <strlen>
 801036e:	f100 030d 	add.w	r3, r0, #13
 8010372:	ba5b      	rev16	r3, r3
 8010374:	4641      	mov	r1, r8
 8010376:	8133      	strh	r3, [r6, #8]
 8010378:	f106 020a 	add.w	r2, r6, #10
 801037c:	2300      	movs	r3, #0
 801037e:	4638      	mov	r0, r7
 8010380:	f7ff fecc 	bl	801011c <MDNS::WriteDnsName(char const*, char*, bool)>
 8010384:	2301      	movs	r3, #1
 8010386:	4402      	add	r2, r0
 8010388:	7bad      	ldrb	r5, [r5, #14]
 801038a:	4808      	ldr	r0, [pc, #32]	; (80103ac <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x70>)
 801038c:	4908      	ldr	r1, [pc, #32]	; (80103b0 <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)+0x74>)
 801038e:	429d      	cmp	r5, r3
 8010390:	bf18      	it	ne
 8010392:	4601      	movne	r1, r0
 8010394:	4638      	mov	r0, r7
 8010396:	f7ff fec1 	bl	801011c <MDNS::WriteDnsName(char const*, char*, bool)>
 801039a:	4410      	add	r0, r2
 801039c:	1b00      	subs	r0, r0, r4
 801039e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80103a2:	bf00      	nop
 80103a4:	2001347c 	andcs	r3, r1, ip, ror r4
 80103a8:	01000c00 	tsteq	r0, r0, lsl #24
 80103ac:	08017642 	stmdaeq	r1, {r1, r6, r9, sl, ip, sp, lr}
 80103b0:	08017625 	stmdaeq	r1, {r0, r2, r5, r9, sl, ip, sp, lr}

080103b4 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)>:
 80103b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80103b6:	460f      	mov	r7, r1
 80103b8:	2301      	movs	r3, #1
 80103ba:	490f      	ldr	r1, [pc, #60]	; (80103f8 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x44>)
 80103bc:	4606      	mov	r6, r0
 80103be:	f7ff fead 	bl	801011c <MDNS::WriteDnsName(char const*, char*, bool)>
 80103c2:	4b0e      	ldr	r3, [pc, #56]	; (80103fc <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x48>)
 80103c4:	490e      	ldr	r1, [pc, #56]	; (8010400 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)+0x4c>)
 80103c6:	5013      	str	r3, [r2, r0]
 80103c8:	f04f 43f0 	mov.w	r3, #2013265920	; 0x78000000
 80103cc:	eb01 1107 	add.w	r1, r1, r7, lsl #4
 80103d0:	684f      	ldr	r7, [r1, #4]
 80103d2:	1815      	adds	r5, r2, r0
 80103d4:	606b      	str	r3, [r5, #4]
 80103d6:	4638      	mov	r0, r7
 80103d8:	4614      	mov	r4, r2
 80103da:	f7ff fdf7 	bl	800ffcc <strlen>
 80103de:	1c83      	adds	r3, r0, #2
 80103e0:	ba5b      	rev16	r3, r3
 80103e2:	812b      	strh	r3, [r5, #8]
 80103e4:	f105 020a 	add.w	r2, r5, #10
 80103e8:	2301      	movs	r3, #1
 80103ea:	4639      	mov	r1, r7
 80103ec:	4630      	mov	r0, r6
 80103ee:	f7ff fe95 	bl	801011c <MDNS::WriteDnsName(char const*, char*, bool)>
 80103f2:	4410      	add	r0, r2
 80103f4:	1b00      	subs	r0, r0, r4
 80103f6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80103f8:	08017630 	stmdaeq	r1, {r4, r5, r9, sl, ip, sp, lr}
 80103fc:	01000c00 	tsteq	r0, r0, lsl #24
 8010400:	2001347c 	andcs	r3, r1, ip, ror r4

08010404 <MDNS::CreateMDNSMessage(unsigned int)>:
 8010404:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8010406:	2384      	movs	r3, #132	; 0x84
 8010408:	4d19      	ldr	r5, [pc, #100]	; (8010470 <MDNS::CreateMDNSMessage(unsigned int)+0x6c>)
 801040a:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 801040e:	80eb      	strh	r3, [r5, #6]
 8010410:	f44f 7380 	mov.w	r3, #256	; 0x100
 8010414:	f105 0410 	add.w	r4, r5, #16
 8010418:	e9c5 2302 	strd	r2, r3, [r5, #8]
 801041c:	4622      	mov	r2, r4
 801041e:	4606      	mov	r6, r0
 8010420:	460f      	mov	r7, r1
 8010422:	f7ff ff09 	bl	8010238 <MDNS::CreateAnswerServiceSrv(unsigned int, unsigned char*)>
 8010426:	4404      	add	r4, r0
 8010428:	4622      	mov	r2, r4
 801042a:	4639      	mov	r1, r7
 801042c:	4630      	mov	r0, r6
 801042e:	f7ff ff47 	bl	80102c0 <MDNS::CreateAnswerServiceTxt(unsigned int, unsigned char*)>
 8010432:	4404      	add	r4, r0
 8010434:	4622      	mov	r2, r4
 8010436:	4639      	mov	r1, r7
 8010438:	4630      	mov	r0, r6
 801043a:	f7ff ffbb 	bl	80103b4 <MDNS::CreateAnswerServiceDnsSd(unsigned int, unsigned char*)>
 801043e:	4404      	add	r4, r0
 8010440:	4622      	mov	r2, r4
 8010442:	4639      	mov	r1, r7
 8010444:	4630      	mov	r0, r6
 8010446:	f7ff ff79 	bl	801033c <MDNS::CreateAnswerServicePtr(unsigned int, unsigned char*)>
 801044a:	4b0a      	ldr	r3, [pc, #40]	; (8010474 <MDNS::CreateMDNSMessage(unsigned int)+0x70>)
 801044c:	4404      	add	r4, r0
 801044e:	f853 2b10 	ldr.w	r2, [r3], #16
 8010452:	1e60      	subs	r0, r4, #1
 8010454:	3a0c      	subs	r2, #12
 8010456:	4611      	mov	r1, r2
 8010458:	3901      	subs	r1, #1
 801045a:	d304      	bcc.n	8010466 <MDNS::CreateMDNSMessage(unsigned int)+0x62>
 801045c:	f813 6b01 	ldrb.w	r6, [r3], #1
 8010460:	f800 6f01 	strb.w	r6, [r0, #1]!
 8010464:	e7f8      	b.n	8010458 <MDNS::CreateMDNSMessage(unsigned int)+0x54>
 8010466:	4414      	add	r4, r2
 8010468:	4a03      	ldr	r2, [pc, #12]	; (8010478 <MDNS::CreateMDNSMessage(unsigned int)+0x74>)
 801046a:	1aa4      	subs	r4, r4, r2
 801046c:	602c      	str	r4, [r5, #0]
 801046e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8010470:	200134a0 	andcs	r3, r1, r0, lsr #9
 8010474:	20013278 	andcs	r3, r1, r8, ror r2
 8010478:	200134a4 	andcs	r3, r1, r4, lsr #9

0801047c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)>:
 801047c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010480:	4d3f      	ldr	r5, [pc, #252]	; (8010580 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x104>)
 8010482:	b085      	sub	sp, #20
 8010484:	682c      	ldr	r4, [r5, #0]
 8010486:	4680      	mov	r8, r0
 8010488:	460f      	mov	r7, r1
 801048a:	4616      	mov	r6, r2
 801048c:	f89d b038 	ldrb.w	fp, [sp, #56]	; 0x38
 8010490:	f8dd a03c 	ldr.w	sl, [sp, #60]	; 0x3c
 8010494:	b11c      	cbz	r4, 801049e <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x22>
 8010496:	692a      	ldr	r2, [r5, #16]
 8010498:	2a00      	cmp	r2, #0
 801049a:	d16d      	bne.n	8010578 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xfc>
 801049c:	2401      	movs	r4, #1
 801049e:	eb05 1204 	add.w	r2, r5, r4, lsl #4
 80104a2:	ea4f 1904 	mov.w	r9, r4, lsl #4
 80104a6:	8193      	strh	r3, [r2, #12]
 80104a8:	f882 b00e 	strb.w	fp, [r2, #14]
 80104ac:	2f00      	cmp	r7, #0
 80104ae:	d153      	bne.n	8010558 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xdc>
 80104b0:	4630      	mov	r0, r6
 80104b2:	f7ff fd8b 	bl	800ffcc <strlen>
 80104b6:	4f33      	ldr	r7, [pc, #204]	; (8010584 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x108>)
 80104b8:	683b      	ldr	r3, [r7, #0]
 80104ba:	331c      	adds	r3, #28
 80104bc:	4418      	add	r0, r3
 80104be:	f7ff fd85 	bl	800ffcc <strlen>
 80104c2:	3001      	adds	r0, #1
 80104c4:	f003 f8aa 	bl	801361c <operator new[](unsigned int)>
 80104c8:	6839      	ldr	r1, [r7, #0]
 80104ca:	f845 0009 	str.w	r0, [r5, r9]
 80104ce:	311c      	adds	r1, #28
 80104d0:	f7ff fd91 	bl	800fff6 <strcpy.isra.0>
 80104d4:	f855 0009 	ldr.w	r0, [r5, r9]
 80104d8:	4631      	mov	r1, r6
 80104da:	f7ff fd94 	bl	8010006 <strcat.isra.0>
 80104de:	4631      	mov	r1, r6
 80104e0:	4640      	mov	r0, r8
 80104e2:	f7ff fe0d 	bl	8010100 <MDNS::FindFirstDotFromRight(char const*) const>
 80104e6:	eb05 0709 	add.w	r7, r5, r9
 80104ea:	4605      	mov	r5, r0
 80104ec:	f7ff fd6e 	bl	800ffcc <strlen>
 80104f0:	300d      	adds	r0, #13
 80104f2:	f003 f893 	bl	801361c <operator new[](unsigned int)>
 80104f6:	4629      	mov	r1, r5
 80104f8:	6078      	str	r0, [r7, #4]
 80104fa:	f7ff fd7c 	bl	800fff6 <strcpy.isra.0>
 80104fe:	4922      	ldr	r1, [pc, #136]	; (8010588 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x10c>)
 8010500:	6878      	ldr	r0, [r7, #4]
 8010502:	f7ff fd80 	bl	8010006 <strcat.isra.0>
 8010506:	4921      	ldr	r1, [pc, #132]	; (801058c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x110>)
 8010508:	4b21      	ldr	r3, [pc, #132]	; (8010590 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x114>)
 801050a:	6878      	ldr	r0, [r7, #4]
 801050c:	f1bb 0f01 	cmp.w	fp, #1
 8010510:	bf18      	it	ne
 8010512:	4619      	movne	r1, r3
 8010514:	f7ff fd77 	bl	8010006 <strcat.isra.0>
 8010518:	f1ba 0f00 	cmp.w	sl, #0
 801051c:	d009      	beq.n	8010532 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xb6>
 801051e:	4650      	mov	r0, sl
 8010520:	f7ff fd54 	bl	800ffcc <strlen>
 8010524:	3001      	adds	r0, #1
 8010526:	f003 f879 	bl	801361c <operator new[](unsigned int)>
 801052a:	4651      	mov	r1, sl
 801052c:	60b8      	str	r0, [r7, #8]
 801052e:	f7ff fd62 	bl	800fff6 <strcpy.isra.0>
 8010532:	4621      	mov	r1, r4
 8010534:	4640      	mov	r0, r8
 8010536:	f7ff ff65 	bl	8010404 <MDNS::CreateMDNSMessage(unsigned int)>
 801053a:	f241 43e9 	movw	r3, #5353	; 0x14e9
 801053e:	4915      	ldr	r1, [pc, #84]	; (8010594 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x118>)
 8010540:	4815      	ldr	r0, [pc, #84]	; (8010598 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x11c>)
 8010542:	f851 2b04 	ldr.w	r2, [r1], #4
 8010546:	9300      	str	r3, [sp, #0]
 8010548:	4b14      	ldr	r3, [pc, #80]	; (801059c <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x120>)
 801054a:	7800      	ldrb	r0, [r0, #0]
 801054c:	681b      	ldr	r3, [r3, #0]
 801054e:	b292      	uxth	r2, r2
 8010550:	f7ff fc8a 	bl	800fe68 <udp_send>
 8010554:	2001      	movs	r0, #1
 8010556:	e010      	b.n	801057a <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0xfe>
 8010558:	4638      	mov	r0, r7
 801055a:	f7ff fd37 	bl	800ffcc <strlen>
 801055e:	9003      	str	r0, [sp, #12]
 8010560:	4630      	mov	r0, r6
 8010562:	f7ff fd33 	bl	800ffcc <strlen>
 8010566:	9b03      	ldr	r3, [sp, #12]
 8010568:	4418      	add	r0, r3
 801056a:	3001      	adds	r0, #1
 801056c:	f003 f856 	bl	801361c <operator new[](unsigned int)>
 8010570:	4639      	mov	r1, r7
 8010572:	f845 0009 	str.w	r0, [r5, r9]
 8010576:	e7ab      	b.n	80104d0 <MDNS::AddServiceRecord(char const*, char const*, unsigned short, mdns::Protocol, char const*)+0x54>
 8010578:	2000      	movs	r0, #0
 801057a:	b005      	add	sp, #20
 801057c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010580:	2001347c 	andcs	r3, r1, ip, ror r4
 8010584:	200136ac 	andcs	r3, r1, ip, lsr #13
 8010588:	08015df3 	stmdaeq	r1, {r0, r1, r4, r5, r6, r7, r8, sl, fp, ip, lr}
 801058c:	08017625 	stmdaeq	r1, {r0, r2, r5, r9, sl, ip, sp, lr}
 8010590:	08017642 	stmdaeq	r1, {r1, r6, r9, sl, ip, sp, lr}
 8010594:	200134a0 	andcs	r3, r1, r0, lsr #9
 8010598:	2000000c 	andcs	r0, r0, ip
 801059c:	20013274 	andcs	r3, r1, r4, ror r2

080105a0 <MDNS::HandleRequest(unsigned short)>:
 80105a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80105a4:	4605      	mov	r5, r0
 80105a6:	2700      	movs	r7, #0
 80105a8:	f04f 080c 	mov.w	r8, #12
 80105ac:	b0c5      	sub	sp, #276	; 0x114
 80105ae:	f8df a0c4 	ldr.w	sl, [pc, #196]	; 8010674 <MDNS::HandleRequest(unsigned short)+0xd4>
 80105b2:	f8df b0c4 	ldr.w	fp, [pc, #196]	; 8010678 <MDNS::HandleRequest(unsigned short)+0xd8>
 80105b6:	9103      	str	r1, [sp, #12]
 80105b8:	9b03      	ldr	r3, [sp, #12]
 80105ba:	42bb      	cmp	r3, r7
 80105bc:	d956      	bls.n	801066c <MDNS::HandleRequest(unsigned short)+0xcc>
 80105be:	f8da 1000 	ldr.w	r1, [sl]
 80105c2:	aa04      	add	r2, sp, #16
 80105c4:	4441      	add	r1, r8
 80105c6:	4628      	mov	r0, r5
 80105c8:	f7ff fd54 	bl	8010074 <MDNS::DecodeDNSNameNotation(char const*, char*)>
 80105cc:	f8da 2000 	ldr.w	r2, [sl]
 80105d0:	4440      	add	r0, r8
 80105d2:	1813      	adds	r3, r2, r0
 80105d4:	885b      	ldrh	r3, [r3, #2]
 80105d6:	f100 0804 	add.w	r8, r0, #4
 80105da:	ba5b      	rev16	r3, r3
 80105dc:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 80105e0:	2b01      	cmp	r3, #1
 80105e2:	d13e      	bne.n	8010662 <MDNS::HandleRequest(unsigned short)+0xc2>
 80105e4:	5a14      	ldrh	r4, [r2, r0]
 80105e6:	4b25      	ldr	r3, [pc, #148]	; (801067c <MDNS::HandleRequest(unsigned short)+0xdc>)
 80105e8:	ba64      	rev16	r4, r4
 80105ea:	6818      	ldr	r0, [r3, #0]
 80105ec:	a904      	add	r1, sp, #16
 80105ee:	b2a4      	uxth	r4, r4
 80105f0:	f7ff fcf4 	bl	800ffdc <strcmp>
 80105f4:	b970      	cbnz	r0, 8010614 <MDNS::HandleRequest(unsigned short)+0x74>
 80105f6:	2c01      	cmp	r4, #1
 80105f8:	d10c      	bne.n	8010614 <MDNS::HandleRequest(unsigned short)+0x74>
 80105fa:	f241 43e9 	movw	r3, #5353	; 0x14e9
 80105fe:	4920      	ldr	r1, [pc, #128]	; (8010680 <MDNS::HandleRequest(unsigned short)+0xe0>)
 8010600:	4820      	ldr	r0, [pc, #128]	; (8010684 <MDNS::HandleRequest(unsigned short)+0xe4>)
 8010602:	f851 2b04 	ldr.w	r2, [r1], #4
 8010606:	9300      	str	r3, [sp, #0]
 8010608:	4b1f      	ldr	r3, [pc, #124]	; (8010688 <MDNS::HandleRequest(unsigned short)+0xe8>)
 801060a:	7800      	ldrb	r0, [r0, #0]
 801060c:	681b      	ldr	r3, [r3, #0]
 801060e:	b292      	uxth	r2, r2
 8010610:	f7ff fc2a 	bl	800fe68 <udp_send>
 8010614:	481d      	ldr	r0, [pc, #116]	; (801068c <MDNS::HandleRequest(unsigned short)+0xec>)
 8010616:	a904      	add	r1, sp, #16
 8010618:	f7ff fce0 	bl	800ffdc <strcmp>
 801061c:	f04f 0900 	mov.w	r9, #0
 8010620:	4e1b      	ldr	r6, [pc, #108]	; (8010690 <MDNS::HandleRequest(unsigned short)+0xf0>)
 8010622:	9002      	str	r0, [sp, #8]
 8010624:	6833      	ldr	r3, [r6, #0]
 8010626:	b1c3      	cbz	r3, 801065a <MDNS::HandleRequest(unsigned short)+0xba>
 8010628:	9b02      	ldr	r3, [sp, #8]
 801062a:	b123      	cbz	r3, 8010636 <MDNS::HandleRequest(unsigned short)+0x96>
 801062c:	6870      	ldr	r0, [r6, #4]
 801062e:	a904      	add	r1, sp, #16
 8010630:	f7ff fcd4 	bl	800ffdc <strcmp>
 8010634:	b988      	cbnz	r0, 801065a <MDNS::HandleRequest(unsigned short)+0xba>
 8010636:	2c0c      	cmp	r4, #12
 8010638:	d10f      	bne.n	801065a <MDNS::HandleRequest(unsigned short)+0xba>
 801063a:	4649      	mov	r1, r9
 801063c:	4628      	mov	r0, r5
 801063e:	f7ff fee1 	bl	8010404 <MDNS::CreateMDNSMessage(unsigned int)>
 8010642:	f241 43e9 	movw	r3, #5353	; 0x14e9
 8010646:	480f      	ldr	r0, [pc, #60]	; (8010684 <MDNS::HandleRequest(unsigned short)+0xe4>)
 8010648:	9300      	str	r3, [sp, #0]
 801064a:	4b0f      	ldr	r3, [pc, #60]	; (8010688 <MDNS::HandleRequest(unsigned short)+0xe8>)
 801064c:	f8bb 2000 	ldrh.w	r2, [fp]
 8010650:	681b      	ldr	r3, [r3, #0]
 8010652:	4910      	ldr	r1, [pc, #64]	; (8010694 <MDNS::HandleRequest(unsigned short)+0xf4>)
 8010654:	7800      	ldrb	r0, [r0, #0]
 8010656:	f7ff fc07 	bl	800fe68 <udp_send>
 801065a:	3610      	adds	r6, #16
 801065c:	f1b9 0f00 	cmp.w	r9, #0
 8010660:	d001      	beq.n	8010666 <MDNS::HandleRequest(unsigned short)+0xc6>
 8010662:	3701      	adds	r7, #1
 8010664:	e7a8      	b.n	80105b8 <MDNS::HandleRequest(unsigned short)+0x18>
 8010666:	f04f 0901 	mov.w	r9, #1
 801066a:	e7db      	b.n	8010624 <MDNS::HandleRequest(unsigned short)+0x84>
 801066c:	b045      	add	sp, #276	; 0x114
 801066e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010672:	bf00      	nop
 8010674:	200136a8 	andcs	r3, r1, r8, lsr #13
 8010678:	200134a0 	andcs	r3, r1, r0, lsr #9
 801067c:	200136a4 	andcs	r3, r1, r4, lsr #13
 8010680:	20013278 	andcs	r3, r1, r8, ror r2
 8010684:	2000000c 	andcs	r0, r0, ip
 8010688:	20013274 	andcs	r3, r1, r4, ror r2
 801068c:	08017630 	stmdaeq	r1, {r4, r5, r9, sl, ip, sp, lr}
 8010690:	2001347c 	andcs	r3, r1, ip, ror r4
 8010694:	200134a4 	andcs	r3, r1, r4, lsr #9

08010698 <MDNS::Parse()>:
 8010698:	4b08      	ldr	r3, [pc, #32]	; (80106bc <MDNS::Parse()+0x24>)
 801069a:	681a      	ldr	r2, [r3, #0]
 801069c:	8853      	ldrh	r3, [r2, #2]
 801069e:	ba5b      	rev16	r3, r3
 80106a0:	b299      	uxth	r1, r3
 80106a2:	041b      	lsls	r3, r3, #16
 80106a4:	d408      	bmi.n	80106b8 <MDNS::Parse()+0x20>
 80106a6:	0b8b      	lsrs	r3, r1, #14
 80106a8:	d106      	bne.n	80106b8 <MDNS::Parse()+0x20>
 80106aa:	8891      	ldrh	r1, [r2, #4]
 80106ac:	b28b      	uxth	r3, r1
 80106ae:	b11b      	cbz	r3, 80106b8 <MDNS::Parse()+0x20>
 80106b0:	ba49      	rev16	r1, r1
 80106b2:	b289      	uxth	r1, r1
 80106b4:	f7ff bf74 	b.w	80105a0 <MDNS::HandleRequest(unsigned short)>
 80106b8:	4770      	bx	lr
 80106ba:	bf00      	nop
 80106bc:	200136a8 	andcs	r3, r1, r8, lsr #13

080106c0 <MDNS::Run()>:
 80106c0:	b538      	push	{r3, r4, r5, lr}
 80106c2:	4d0c      	ldr	r5, [pc, #48]	; (80106f4 <MDNS::Run()+0x34>)
 80106c4:	4604      	mov	r4, r0
 80106c6:	480c      	ldr	r0, [pc, #48]	; (80106f8 <MDNS::Run()+0x38>)
 80106c8:	462b      	mov	r3, r5
 80106ca:	4a0c      	ldr	r2, [pc, #48]	; (80106fc <MDNS::Run()+0x3c>)
 80106cc:	490c      	ldr	r1, [pc, #48]	; (8010700 <MDNS::Run()+0x40>)
 80106ce:	7800      	ldrb	r0, [r0, #0]
 80106d0:	f7ff fba4 	bl	800fe1c <udp_recv2>
 80106d4:	4b0b      	ldr	r3, [pc, #44]	; (8010704 <MDNS::Run()+0x44>)
 80106d6:	882a      	ldrh	r2, [r5, #0]
 80106d8:	8018      	strh	r0, [r3, #0]
 80106da:	f241 43e9 	movw	r3, #5353	; 0x14e9
 80106de:	429a      	cmp	r2, r3
 80106e0:	d106      	bne.n	80106f0 <MDNS::Run()+0x30>
 80106e2:	280c      	cmp	r0, #12
 80106e4:	d904      	bls.n	80106f0 <MDNS::Run()+0x30>
 80106e6:	4620      	mov	r0, r4
 80106e8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80106ec:	f7ff bfd4 	b.w	8010698 <MDNS::Parse()>
 80106f0:	bd38      	pop	{r3, r4, r5, pc}
 80106f2:	bf00      	nop
 80106f4:	20013270 	andcs	r3, r1, r0, ror r2
 80106f8:	2000000c 	andcs	r0, r0, ip
 80106fc:	2001326c 	andcs	r3, r1, ip, ror #4
 8010700:	200136a8 	andcs	r3, r1, r8, lsr #13
 8010704:	2001349c 	mulcs	r1, ip, r4

08010708 <MDNS::Print()>:
 8010708:	b510      	push	{r4, lr}
 801070a:	4816      	ldr	r0, [pc, #88]	; (8010764 <MDNS::Print()+0x5c>)
 801070c:	f7f8 fbce 	bl	8008eac <printf>
 8010710:	4b15      	ldr	r3, [pc, #84]	; (8010768 <MDNS::Print()+0x60>)
 8010712:	681b      	ldr	r3, [r3, #0]
 8010714:	3301      	adds	r3, #1
 8010716:	d104      	bne.n	8010722 <MDNS::Print()+0x1a>
 8010718:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801071c:	4813      	ldr	r0, [pc, #76]	; (801076c <MDNS::Print()+0x64>)
 801071e:	f7f8 bbc5 	b.w	8008eac <printf>
 8010722:	4b13      	ldr	r3, [pc, #76]	; (8010770 <MDNS::Print()+0x68>)
 8010724:	4c13      	ldr	r4, [pc, #76]	; (8010774 <MDNS::Print()+0x6c>)
 8010726:	6819      	ldr	r1, [r3, #0]
 8010728:	4813      	ldr	r0, [pc, #76]	; (8010778 <MDNS::Print()+0x70>)
 801072a:	f7f8 fbbf 	bl	8008eac <printf>
 801072e:	6823      	ldr	r3, [r4, #0]
 8010730:	b14b      	cbz	r3, 8010746 <MDNS::Print()+0x3e>
 8010732:	4a12      	ldr	r2, [pc, #72]	; (801077c <MDNS::Print()+0x74>)
 8010734:	68a3      	ldr	r3, [r4, #8]
 8010736:	6861      	ldr	r1, [r4, #4]
 8010738:	2b00      	cmp	r3, #0
 801073a:	bf08      	it	eq
 801073c:	4613      	moveq	r3, r2
 801073e:	4810      	ldr	r0, [pc, #64]	; (8010780 <MDNS::Print()+0x78>)
 8010740:	89a2      	ldrh	r2, [r4, #12]
 8010742:	f7f8 fbb3 	bl	8008eac <printf>
 8010746:	6923      	ldr	r3, [r4, #16]
 8010748:	b15b      	cbz	r3, 8010762 <MDNS::Print()+0x5a>
 801074a:	69a3      	ldr	r3, [r4, #24]
 801074c:	4a0b      	ldr	r2, [pc, #44]	; (801077c <MDNS::Print()+0x74>)
 801074e:	6961      	ldr	r1, [r4, #20]
 8010750:	2b00      	cmp	r3, #0
 8010752:	bf08      	it	eq
 8010754:	4613      	moveq	r3, r2
 8010756:	480a      	ldr	r0, [pc, #40]	; (8010780 <MDNS::Print()+0x78>)
 8010758:	8ba2      	ldrh	r2, [r4, #28]
 801075a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801075e:	f7f8 bba5 	b.w	8008eac <printf>
 8010762:	bd10      	pop	{r4, pc}
 8010764:	0801764d 	stmdaeq	r1, {r0, r2, r3, r6, r9, sl, ip, sp, lr}
 8010768:	2000000c 	andcs	r0, r0, ip
 801076c:	08017653 	stmdaeq	r1, {r0, r1, r4, r6, r9, sl, ip, sp, lr}
 8010770:	200136a4 	andcs	r3, r1, r4, lsr #13
 8010774:	2001347c 	andcs	r3, r1, ip, ror r4
 8010778:	08017661 	stmdaeq	r1, {r0, r5, r6, r9, sl, ip, sp, lr}
 801077c:	08016117 	stmdaeq	r1, {r0, r1, r2, r4, r8, sp, lr}
 8010780:	0801766d 	stmdaeq	r1, {r0, r2, r3, r5, r6, r9, sl, ip, sp, lr}

08010784 <strncpy.constprop.0.isra.0>:
 8010784:	233f      	movs	r3, #63	; 0x3f
 8010786:	3901      	subs	r1, #1
 8010788:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 801078c:	b92a      	cbnz	r2, 801079a <strncpy.constprop.0.isra.0+0x16>
 801078e:	4403      	add	r3, r0
 8010790:	4298      	cmp	r0, r3
 8010792:	d007      	beq.n	80107a4 <strncpy.constprop.0.isra.0+0x20>
 8010794:	f800 2b01 	strb.w	r2, [r0], #1
 8010798:	e7fa      	b.n	8010790 <strncpy.constprop.0.isra.0+0xc>
 801079a:	3b01      	subs	r3, #1
 801079c:	f800 2b01 	strb.w	r2, [r0], #1
 80107a0:	d1f2      	bne.n	8010788 <strncpy.constprop.0.isra.0+0x4>
 80107a2:	4770      	bx	lr
 80107a4:	4770      	bx	lr
	...

080107a8 <Network::Network()>:
 80107a8:	4a11      	ldr	r2, [pc, #68]	; (80107f0 <Network::Network()+0x48>)
 80107aa:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 80107ae:	6010      	str	r0, [r2, #0]
 80107b0:	2201      	movs	r2, #1
 80107b2:	2300      	movs	r3, #0
 80107b4:	e9c0 1200 	strd	r1, r2, [r0]
 80107b8:	2200      	movs	r2, #0
 80107ba:	e9c0 332f 	strd	r3, r3, [r0, #188]	; 0xbc
 80107be:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80107c2:	490c      	ldr	r1, [pc, #48]	; (80107f4 <Network::Network()+0x4c>)
 80107c4:	60c2      	str	r2, [r0, #12]
 80107c6:	f8c0 30b4 	str.w	r3, [r0, #180]	; 0xb4
 80107ca:	f8c0 30c4 	str.w	r3, [r0, #196]	; 0xc4
 80107ce:	f880 309c 	strb.w	r3, [r0, #156]	; 0x9c
 80107d2:	6083      	str	r3, [r0, #8]
 80107d4:	6183      	str	r3, [r0, #24]
 80107d6:	7703      	strb	r3, [r0, #28]
 80107d8:	f880 305c 	strb.w	r3, [r0, #92]	; 0x5c
 80107dc:	f100 02a2 	add.w	r2, r0, #162	; 0xa2
 80107e0:	f811 3b01 	ldrb.w	r3, [r1], #1
 80107e4:	f802 3b01 	strb.w	r3, [r2], #1
 80107e8:	2b00      	cmp	r3, #0
 80107ea:	d1f9      	bne.n	80107e0 <Network::Network()+0x38>
 80107ec:	4770      	bx	lr
 80107ee:	bf00      	nop
 80107f0:	200136ac 	andcs	r3, r1, ip, lsr #13
 80107f4:	08017678 	stmdaeq	r1, {r3, r4, r5, r6, r9, sl, ip, sp, lr}

080107f8 <Network::Shutdown()>:
 80107f8:	b508      	push	{r3, lr}
 80107fa:	30b8      	adds	r0, #184	; 0xb8
 80107fc:	f001 ff4e 	bl	801269c <NetworkDisplay::ShowShutdown()>
 8010800:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8010804:	f7fe bd5a 	b.w	800f2bc <net_shutdown>

08010808 <Network::Begin(unsigned short)>:
 8010808:	4608      	mov	r0, r1
 801080a:	f7ff ba97 	b.w	800fd3c <udp_bind>

0801080e <Network::End(unsigned short)>:
 801080e:	4608      	mov	r0, r1
 8010810:	f7ff baae 	b.w	800fd70 <udp_unbind>

08010814 <Network::MacAddressCopyTo(unsigned char*)>:
 8010814:	f100 039c 	add.w	r3, r0, #156	; 0x9c
 8010818:	3901      	subs	r1, #1
 801081a:	30a2      	adds	r0, #162	; 0xa2
 801081c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8010820:	4283      	cmp	r3, r0
 8010822:	f801 2f01 	strb.w	r2, [r1, #1]!
 8010826:	d1f9      	bne.n	801081c <Network::MacAddressCopyTo(unsigned char*)+0x8>
 8010828:	4770      	bx	lr

0801082a <Network::JoinGroup(int, unsigned int)>:
 801082a:	4610      	mov	r0, r2
 801082c:	f001 ba38 	b.w	8011ca0 <igmp_join>

08010830 <Network::LeaveGroup(int, unsigned int)>:
 8010830:	4610      	mov	r0, r2
 8010832:	f001 ba61 	b.w	8011cf8 <igmp_leave>

08010836 <Network::SetDefaultIp()>:
 8010836:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 801083a:	f890 209f 	ldrb.w	r2, [r0, #159]	; 0x9f
 801083e:	041b      	lsls	r3, r3, #16
 8010840:	eb03 2302 	add.w	r3, r3, r2, lsl #8
 8010844:	f890 20a1 	ldrb.w	r2, [r0, #161]	; 0xa1
 8010848:	3302      	adds	r3, #2
 801084a:	eb03 6302 	add.w	r3, r3, r2, lsl #24
 801084e:	22ff      	movs	r2, #255	; 0xff
 8010850:	6103      	str	r3, [r0, #16]
 8010852:	e9c0 3205 	strd	r3, r2, [r0, #20]
 8010856:	4770      	bx	lr

08010858 <Network::Init(NetworkParamsStore*)>:
 8010858:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801085c:	b08d      	sub	sp, #52	; 0x34
 801085e:	4604      	mov	r4, r0
 8010860:	a808      	add	r0, sp, #32
 8010862:	f000 fb0f 	bl	8010e84 <NetworkParams::NetworkParams(NetworkParamsStore*)>
 8010866:	a808      	add	r0, sp, #32
 8010868:	f000 fb1c 	bl	8010ea4 <NetworkParams::Load()>
 801086c:	b110      	cbz	r0, 8010874 <Network::Init(NetworkParamsStore*)+0x1c>
 801086e:	a808      	add	r0, sp, #32
 8010870:	f000 fd83 	bl	801137a <NetworkParams::Dump()>
 8010874:	f104 05b8 	add.w	r5, r4, #184	; 0xb8
 8010878:	f8df 829c 	ldr.w	r8, [pc, #668]	; 8010b18 <Network::Init(NetworkParamsStore*)+0x2c0>
 801087c:	4628      	mov	r0, r5
 801087e:	f104 079c 	add.w	r7, r4, #156	; 0x9c
 8010882:	f001 fef3 	bl	801266c <NetworkDisplay::ShowEmacStart()>
 8010886:	4638      	mov	r0, r7
 8010888:	f003 ff0e 	bl	80146a8 <emac_start>
 801088c:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8010890:	f104 061c 	add.w	r6, r4, #28
 8010894:	9309      	str	r3, [sp, #36]	; 0x24
 8010896:	f8d8 3008 	ldr.w	r3, [r8, #8]
 801089a:	930a      	str	r3, [sp, #40]	; 0x28
 801089c:	f8d8 300c 	ldr.w	r3, [r8, #12]
 80108a0:	930b      	str	r3, [sp, #44]	; 0x2c
 80108a2:	f898 3014 	ldrb.w	r3, [r8, #20]
 80108a6:	7063      	strb	r3, [r4, #1]
 80108a8:	f8d8 3000 	ldr.w	r3, [r8]
 80108ac:	f013 0240 	ands.w	r2, r3, #64	; 0x40
 80108b0:	bf18      	it	ne
 80108b2:	f8d8 2055 	ldrne.w	r2, [r8, #85]	; 0x55
 80108b6:	061b      	lsls	r3, r3, #24
 80108b8:	bf58      	it	pl
 80108ba:	2300      	movpl	r3, #0
 80108bc:	60a2      	str	r2, [r4, #8]
 80108be:	bf48      	it	mi
 80108c0:	f8d8 3059 	ldrmi.w	r3, [r8, #89]	; 0x59
 80108c4:	60e3      	str	r3, [r4, #12]
 80108c6:	f898 3015 	ldrb.w	r3, [r8, #21]
 80108ca:	2b00      	cmp	r3, #0
 80108cc:	d15e      	bne.n	801098c <Network::Init(NetworkParamsStore*)+0x134>
 80108ce:	4632      	mov	r2, r6
 80108d0:	4892      	ldr	r0, [pc, #584]	; (8010b1c <Network::Init(NetworkParamsStore*)+0x2c4>)
 80108d2:	f810 1b01 	ldrb.w	r1, [r0], #1
 80108d6:	f103 0c01 	add.w	ip, r3, #1
 80108da:	b119      	cbz	r1, 80108e4 <Network::Init(NetworkParamsStore*)+0x8c>
 80108dc:	4663      	mov	r3, ip
 80108de:	f802 1b01 	strb.w	r1, [r2], #1
 80108e2:	e7f6      	b.n	80108d2 <Network::Init(NetworkParamsStore*)+0x7a>
 80108e4:	f894 209f 	ldrb.w	r2, [r4, #159]	; 0x9f
 80108e8:	18e1      	adds	r1, r4, r3
 80108ea:	0910      	lsrs	r0, r2, #4
 80108ec:	2a9f      	cmp	r2, #159	; 0x9f
 80108ee:	f002 020f 	and.w	r2, r2, #15
 80108f2:	bf94      	ite	ls
 80108f4:	3030      	addls	r0, #48	; 0x30
 80108f6:	3037      	addhi	r0, #55	; 0x37
 80108f8:	2a09      	cmp	r2, #9
 80108fa:	bf94      	ite	ls
 80108fc:	3230      	addls	r2, #48	; 0x30
 80108fe:	3237      	addhi	r2, #55	; 0x37
 8010900:	44a4      	add	ip, r4
 8010902:	7708      	strb	r0, [r1, #28]
 8010904:	f88c 201c 	strb.w	r2, [ip, #28]
 8010908:	f894 20a0 	ldrb.w	r2, [r4, #160]	; 0xa0
 801090c:	f103 0e02 	add.w	lr, r3, #2
 8010910:	0910      	lsrs	r0, r2, #4
 8010912:	2a9f      	cmp	r2, #159	; 0x9f
 8010914:	f002 020f 	and.w	r2, r2, #15
 8010918:	bf94      	ite	ls
 801091a:	3030      	addls	r0, #48	; 0x30
 801091c:	3037      	addhi	r0, #55	; 0x37
 801091e:	f103 0903 	add.w	r9, r3, #3
 8010922:	2a09      	cmp	r2, #9
 8010924:	44a6      	add	lr, r4
 8010926:	f88e 001c 	strb.w	r0, [lr, #28]
 801092a:	bf94      	ite	ls
 801092c:	3230      	addls	r2, #48	; 0x30
 801092e:	3237      	addhi	r2, #55	; 0x37
 8010930:	eb04 0009 	add.w	r0, r4, r9
 8010934:	7702      	strb	r2, [r0, #28]
 8010936:	f894 20a1 	ldrb.w	r2, [r4, #161]	; 0xa1
 801093a:	f103 0c04 	add.w	ip, r3, #4
 801093e:	0910      	lsrs	r0, r2, #4
 8010940:	2a9f      	cmp	r2, #159	; 0x9f
 8010942:	f002 020f 	and.w	r2, r2, #15
 8010946:	bf94      	ite	ls
 8010948:	3030      	addls	r0, #48	; 0x30
 801094a:	3037      	addhi	r0, #55	; 0x37
 801094c:	3305      	adds	r3, #5
 801094e:	2a09      	cmp	r2, #9
 8010950:	4423      	add	r3, r4
 8010952:	44a4      	add	ip, r4
 8010954:	bf94      	ite	ls
 8010956:	3230      	addls	r2, #48	; 0x30
 8010958:	3237      	addhi	r2, #55	; 0x37
 801095a:	f88c 001c 	strb.w	r0, [ip, #28]
 801095e:	771a      	strb	r2, [r3, #28]
 8010960:	2300      	movs	r3, #0
 8010962:	f881 3022 	strb.w	r3, [r1, #34]	; 0x22
 8010966:	7863      	ldrb	r3, [r4, #1]
 8010968:	b95b      	cbnz	r3, 8010982 <Network::Init(NetworkParamsStore*)+0x12a>
 801096a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801096c:	b9b3      	cbnz	r3, 801099c <Network::Init(NetworkParamsStore*)+0x144>
 801096e:	4620      	mov	r0, r4
 8010970:	f7ff ff61 	bl	8010836 <Network::SetDefaultIp()>
 8010974:	6923      	ldr	r3, [r4, #16]
 8010976:	69a2      	ldr	r2, [r4, #24]
 8010978:	9309      	str	r3, [sp, #36]	; 0x24
 801097a:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 801097e:	7863      	ldrb	r3, [r4, #1]
 8010980:	b19b      	cbz	r3, 80109aa <Network::Init(NetworkParamsStore*)+0x152>
 8010982:	2101      	movs	r1, #1
 8010984:	4628      	mov	r0, r5
 8010986:	f001 fe8f 	bl	80126a8 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 801098a:	e00e      	b.n	80109aa <Network::Init(NetworkParamsStore*)+0x152>
 801098c:	4630      	mov	r0, r6
 801098e:	4964      	ldr	r1, [pc, #400]	; (8010b20 <Network::Init(NetworkParamsStore*)+0x2c8>)
 8010990:	f7ff fef8 	bl	8010784 <strncpy.constprop.0.isra.0>
 8010994:	2300      	movs	r3, #0
 8010996:	f884 305b 	strb.w	r3, [r4, #91]	; 0x5b
 801099a:	e7e4      	b.n	8010966 <Network::Init(NetworkParamsStore*)+0x10e>
 801099c:	69a1      	ldr	r1, [r4, #24]
 801099e:	e9d4 2304 	ldrd	r2, r3, [r4, #16]
 80109a2:	4053      	eors	r3, r2
 80109a4:	420b      	tst	r3, r1
 80109a6:	d000      	beq.n	80109aa <Network::Init(NetworkParamsStore*)+0x152>
 80109a8:	920b      	str	r2, [sp, #44]	; 0x2c
 80109aa:	1ce3      	adds	r3, r4, #3
 80109ac:	f104 0a01 	add.w	sl, r4, #1
 80109b0:	9304      	str	r3, [sp, #16]
 80109b2:	9300      	str	r3, [sp, #0]
 80109b4:	4632      	mov	r2, r6
 80109b6:	4653      	mov	r3, sl
 80109b8:	4638      	mov	r0, r7
 80109ba:	a909      	add	r1, sp, #36	; 0x24
 80109bc:	f7fe fc2e 	bl	800f21c <net_init>
 80109c0:	78e3      	ldrb	r3, [r4, #3]
 80109c2:	b11b      	cbz	r3, 80109cc <Network::Init(NetworkParamsStore*)+0x174>
 80109c4:	2104      	movs	r1, #4
 80109c6:	4628      	mov	r0, r5
 80109c8:	f001 fe6e 	bl	80126a8 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 80109cc:	f898 305d 	ldrb.w	r3, [r8, #93]	; 0x5d
 80109d0:	9302      	str	r3, [sp, #8]
 80109d2:	f898 3014 	ldrb.w	r3, [r8, #20]
 80109d6:	9a02      	ldr	r2, [sp, #8]
 80109d8:	9306      	str	r3, [sp, #24]
 80109da:	233c      	movs	r3, #60	; 0x3c
 80109dc:	4353      	muls	r3, r2
 80109de:	9305      	str	r3, [sp, #20]
 80109e0:	78e3      	ldrb	r3, [r4, #3]
 80109e2:	b95b      	cbnz	r3, 80109fc <Network::Init(NetworkParamsStore*)+0x1a4>
 80109e4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80109e6:	4628      	mov	r0, r5
 80109e8:	6123      	str	r3, [r4, #16]
 80109ea:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80109ec:	61a3      	str	r3, [r4, #24]
 80109ee:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80109f0:	6163      	str	r3, [r4, #20]
 80109f2:	f001 fe41 	bl	8012678 <NetworkDisplay::ShowIp()>
 80109f6:	b00d      	add	sp, #52	; 0x34
 80109f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80109fc:	9b02      	ldr	r3, [sp, #8]
 80109fe:	2b00      	cmp	r3, #0
 8010a00:	d0f0      	beq.n	80109e4 <Network::Init(NetworkParamsStore*)+0x18c>
 8010a02:	9b06      	ldr	r3, [sp, #24]
 8010a04:	2b00      	cmp	r3, #0
 8010a06:	d0ed      	beq.n	80109e4 <Network::Init(NetworkParamsStore*)+0x18c>
 8010a08:	f8df b118 	ldr.w	fp, [pc, #280]	; 8010b24 <Network::Init(NetworkParamsStore*)+0x2cc>
 8010a0c:	2104      	movs	r1, #4
 8010a0e:	f8db 0000 	ldr.w	r0, [fp]
 8010a12:	f002 fcd9 	bl	80133c8 <LedBlink::SetMode(ledblink::Mode)>
 8010a16:	2103      	movs	r1, #3
 8010a18:	4628      	mov	r0, r5
 8010a1a:	f001 fe45 	bl	80126a8 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 8010a1e:	2000      	movs	r0, #0
 8010a20:	f002 ffdc 	bl	80139dc <time>
 8010a24:	9007      	str	r0, [sp, #28]
 8010a26:	f8df 8100 	ldr.w	r8, [pc, #256]	; 8010b28 <Network::Init(NetworkParamsStore*)+0x2d0>
 8010a2a:	2000      	movs	r0, #0
 8010a2c:	f002 ffd6 	bl	80139dc <time>
 8010a30:	9b07      	ldr	r3, [sp, #28]
 8010a32:	1ac0      	subs	r0, r0, r3
 8010a34:	9b05      	ldr	r3, [sp, #20]
 8010a36:	4298      	cmp	r0, r3
 8010a38:	da54      	bge.n	8010ae4 <Network::Init(NetworkParamsStore*)+0x28c>
 8010a3a:	f8db 2000 	ldr.w	r2, [fp]
 8010a3e:	6910      	ldr	r0, [r2, #16]
 8010a40:	b1c0      	cbz	r0, 8010a74 <Network::Init(NetworkParamsStore*)+0x21c>
 8010a42:	f8df c0e8 	ldr.w	ip, [pc, #232]	; 8010b2c <Network::Init(NetworkParamsStore*)+0x2d4>
 8010a46:	6991      	ldr	r1, [r2, #24]
 8010a48:	f8dc 3000 	ldr.w	r3, [ip]
 8010a4c:	1a5b      	subs	r3, r3, r1
 8010a4e:	4298      	cmp	r0, r3
 8010a50:	d810      	bhi.n	8010a74 <Network::Init(NetworkParamsStore*)+0x21c>
 8010a52:	f8dc 1000 	ldr.w	r1, [ip]
 8010a56:	f8d8 3000 	ldr.w	r3, [r8]
 8010a5a:	6191      	str	r1, [r2, #24]
 8010a5c:	6951      	ldr	r1, [r2, #20]
 8010a5e:	f423 1360 	bic.w	r3, r3, #3670016	; 0x380000
 8010a62:	2901      	cmp	r1, #1
 8010a64:	f081 0001 	eor.w	r0, r1, #1
 8010a68:	bf08      	it	eq
 8010a6a:	f483 1360 	eoreq.w	r3, r3, #3670016	; 0x380000
 8010a6e:	6150      	str	r0, [r2, #20]
 8010a70:	f8c8 3000 	str.w	r3, [r8]
 8010a74:	4b2e      	ldr	r3, [pc, #184]	; (8010b30 <Network::Init(NetworkParamsStore*)+0x2d8>)
 8010a76:	f8d8 2000 	ldr.w	r2, [r8]
 8010a7a:	6819      	ldr	r1, [r3, #0]
 8010a7c:	428a      	cmp	r2, r1
 8010a7e:	d0d4      	beq.n	8010a2a <Network::Init(NetworkParamsStore*)+0x1d2>
 8010a80:	2110      	movs	r1, #16
 8010a82:	482c      	ldr	r0, [pc, #176]	; (8010b34 <Network::Init(NetworkParamsStore*)+0x2dc>)
 8010a84:	601a      	str	r2, [r3, #0]
 8010a86:	f003 fa1d 	bl	8013ec4 <gpio_bit_reset>
 8010a8a:	f3bf 8f6f 	isb	sy
 8010a8e:	2318      	movs	r3, #24
 8010a90:	f44f 0900 	mov.w	r9, #8388608	; 0x800000
 8010a94:	f8df 809c 	ldr.w	r8, [pc, #156]	; 8010b34 <Network::Init(NetworkParamsStore*)+0x2dc>
 8010a98:	9303      	str	r3, [sp, #12]
 8010a9a:	4b23      	ldr	r3, [pc, #140]	; (8010b28 <Network::Init(NetworkParamsStore*)+0x2d0>)
 8010a9c:	2104      	movs	r1, #4
 8010a9e:	681b      	ldr	r3, [r3, #0]
 8010aa0:	4640      	mov	r0, r8
 8010aa2:	ea19 0f03 	tst.w	r9, r3
 8010aa6:	d01a      	beq.n	8010ade <Network::Init(NetworkParamsStore*)+0x286>
 8010aa8:	f003 fa0a 	bl	8013ec0 <gpio_bit_set>
 8010aac:	f3bf 8f6f 	isb	sy
 8010ab0:	2108      	movs	r1, #8
 8010ab2:	4640      	mov	r0, r8
 8010ab4:	f003 fa06 	bl	8013ec4 <gpio_bit_reset>
 8010ab8:	f3bf 8f6f 	isb	sy
 8010abc:	2108      	movs	r1, #8
 8010abe:	4640      	mov	r0, r8
 8010ac0:	f003 f9fe 	bl	8013ec0 <gpio_bit_set>
 8010ac4:	9b03      	ldr	r3, [sp, #12]
 8010ac6:	ea4f 0959 	mov.w	r9, r9, lsr #1
 8010aca:	3b01      	subs	r3, #1
 8010acc:	9303      	str	r3, [sp, #12]
 8010ace:	d1e4      	bne.n	8010a9a <Network::Init(NetworkParamsStore*)+0x242>
 8010ad0:	2110      	movs	r1, #16
 8010ad2:	4818      	ldr	r0, [pc, #96]	; (8010b34 <Network::Init(NetworkParamsStore*)+0x2dc>)
 8010ad4:	f003 f9f4 	bl	8013ec0 <gpio_bit_set>
 8010ad8:	f3bf 8f6f 	isb	sy
 8010adc:	e7a3      	b.n	8010a26 <Network::Init(NetworkParamsStore*)+0x1ce>
 8010ade:	f003 f9f1 	bl	8013ec4 <gpio_bit_reset>
 8010ae2:	e7e3      	b.n	8010aac <Network::Init(NetworkParamsStore*)+0x254>
 8010ae4:	2101      	movs	r1, #1
 8010ae6:	4628      	mov	r0, r5
 8010ae8:	f001 fdde 	bl	80126a8 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 8010aec:	2101      	movs	r1, #1
 8010aee:	f8db 0000 	ldr.w	r0, [fp]
 8010af2:	f002 fc69 	bl	80133c8 <LedBlink::SetMode(ledblink::Mode)>
 8010af6:	2301      	movs	r3, #1
 8010af8:	7063      	strb	r3, [r4, #1]
 8010afa:	2300      	movs	r3, #0
 8010afc:	70e3      	strb	r3, [r4, #3]
 8010afe:	9b04      	ldr	r3, [sp, #16]
 8010b00:	4632      	mov	r2, r6
 8010b02:	9300      	str	r3, [sp, #0]
 8010b04:	4638      	mov	r0, r7
 8010b06:	4653      	mov	r3, sl
 8010b08:	a909      	add	r1, sp, #36	; 0x24
 8010b0a:	f7fe fb87 	bl	800f21c <net_init>
 8010b0e:	7863      	ldrb	r3, [r4, #1]
 8010b10:	2b00      	cmp	r3, #0
 8010b12:	f43f af65 	beq.w	80109e0 <Network::Init(NetworkParamsStore*)+0x188>
 8010b16:	e765      	b.n	80109e4 <Network::Init(NetworkParamsStore*)+0x18c>
 8010b18:	200136b0 			; <UNDEFINED> instruction: 0x200136b0
 8010b1c:	0801767d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6, r9, sl, ip, sp, lr}
 8010b20:	200136c5 	andcs	r3, r1, r5, asr #13
 8010b24:	20013dd0 	ldrdcs	r3, [r1], -r0
 8010b28:	20013ddc 	ldrdcs	r3, [r1], -ip
 8010b2c:	20013df4 	strdcs	r3, [r1], -r4
 8010b30:	20013dd8 	ldrdcs	r3, [r1], -r8
 8010b34:	40011800 	andmi	r1, r1, r0, lsl #16

08010b38 <Network::SetIp(unsigned int)>:
 8010b38:	7843      	ldrb	r3, [r0, #1]
 8010b3a:	b570      	push	{r4, r5, r6, lr}
 8010b3c:	4604      	mov	r4, r0
 8010b3e:	460d      	mov	r5, r1
 8010b40:	2600      	movs	r6, #0
 8010b42:	b113      	cbz	r3, 8010b4a <Network::SetIp(unsigned int)+0x12>
 8010b44:	7046      	strb	r6, [r0, #1]
 8010b46:	f7fe fc03 	bl	800f350 <net_dhcp_release>
 8010b4a:	70e6      	strb	r6, [r4, #3]
 8010b4c:	b975      	cbnz	r5, 8010b6c <Network::SetIp(unsigned int)+0x34>
 8010b4e:	4620      	mov	r0, r4
 8010b50:	f7ff fe71 	bl	8010836 <Network::SetDefaultIp()>
 8010b54:	6920      	ldr	r0, [r4, #16]
 8010b56:	f7fe fbbf 	bl	800f2d8 <net_set_ip>
 8010b5a:	34b8      	adds	r4, #184	; 0xb8
 8010b5c:	4620      	mov	r0, r4
 8010b5e:	f001 fd8b 	bl	8012678 <NetworkDisplay::ShowIp()>
 8010b62:	4620      	mov	r0, r4
 8010b64:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010b68:	f001 bd8c 	b.w	8012684 <NetworkDisplay::ShowNetMask()>
 8010b6c:	4628      	mov	r0, r5
 8010b6e:	f7fe fbb3 	bl	800f2d8 <net_set_ip>
 8010b72:	f8d4 00b4 	ldr.w	r0, [r4, #180]	; 0xb4
 8010b76:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8010b7a:	2800      	cmp	r0, #0
 8010b7c:	d0ed      	beq.n	8010b5a <Network::SetIp(unsigned int)+0x22>
 8010b7e:	6803      	ldr	r3, [r0, #0]
 8010b80:	4629      	mov	r1, r5
 8010b82:	689b      	ldr	r3, [r3, #8]
 8010b84:	4798      	blx	r3
 8010b86:	f8d4 00b4 	ldr.w	r0, [r4, #180]	; 0xb4
 8010b8a:	2100      	movs	r1, #0
 8010b8c:	6803      	ldr	r3, [r0, #0]
 8010b8e:	699b      	ldr	r3, [r3, #24]
 8010b90:	4798      	blx	r3
 8010b92:	e7e2      	b.n	8010b5a <Network::SetIp(unsigned int)+0x22>

08010b94 <Network::SetNetmask(unsigned int)>:
 8010b94:	6982      	ldr	r2, [r0, #24]
 8010b96:	b510      	push	{r4, lr}
 8010b98:	428a      	cmp	r2, r1
 8010b9a:	4604      	mov	r4, r0
 8010b9c:	d00f      	beq.n	8010bbe <Network::SetNetmask(unsigned int)+0x2a>
 8010b9e:	6181      	str	r1, [r0, #24]
 8010ba0:	f8d0 00b4 	ldr.w	r0, [r0, #180]	; 0xb4
 8010ba4:	b110      	cbz	r0, 8010bac <Network::SetNetmask(unsigned int)+0x18>
 8010ba6:	6803      	ldr	r3, [r0, #0]
 8010ba8:	68db      	ldr	r3, [r3, #12]
 8010baa:	4798      	blx	r3
 8010bac:	34b8      	adds	r4, #184	; 0xb8
 8010bae:	4620      	mov	r0, r4
 8010bb0:	f001 fd62 	bl	8012678 <NetworkDisplay::ShowIp()>
 8010bb4:	4620      	mov	r0, r4
 8010bb6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010bba:	f001 bd63 	b.w	8012684 <NetworkDisplay::ShowNetMask()>
 8010bbe:	bd10      	pop	{r4, pc}

08010bc0 <Network::SetHostName(char const*)>:
 8010bc0:	b570      	push	{r4, r5, r6, lr}
 8010bc2:	4604      	mov	r4, r0
 8010bc4:	f100 051c 	add.w	r5, r0, #28
 8010bc8:	4628      	mov	r0, r5
 8010bca:	f7ff fddb 	bl	8010784 <strncpy.constprop.0.isra.0>
 8010bce:	2300      	movs	r3, #0
 8010bd0:	f8d4 00b4 	ldr.w	r0, [r4, #180]	; 0xb4
 8010bd4:	f884 305b 	strb.w	r3, [r4, #91]	; 0x5b
 8010bd8:	b158      	cbz	r0, 8010bf2 <Network::SetHostName(char const*)+0x32>
 8010bda:	6803      	ldr	r3, [r0, #0]
 8010bdc:	695e      	ldr	r6, [r3, #20]
 8010bde:	462b      	mov	r3, r5
 8010be0:	461a      	mov	r2, r3
 8010be2:	7811      	ldrb	r1, [r2, #0]
 8010be4:	3301      	adds	r3, #1
 8010be6:	2900      	cmp	r1, #0
 8010be8:	d1fa      	bne.n	8010be0 <Network::SetHostName(char const*)+0x20>
 8010bea:	1b52      	subs	r2, r2, r5
 8010bec:	4629      	mov	r1, r5
 8010bee:	b292      	uxth	r2, r2
 8010bf0:	47b0      	blx	r6
 8010bf2:	f104 00b8 	add.w	r0, r4, #184	; 0xb8
 8010bf6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010bfa:	f001 bd49 	b.w	8012690 <NetworkDisplay::ShowHostName()>

08010bfe <Network::SetZeroconf()>:
 8010bfe:	b530      	push	{r4, r5, lr}
 8010c00:	b085      	sub	sp, #20
 8010c02:	4604      	mov	r4, r0
 8010c04:	a801      	add	r0, sp, #4
 8010c06:	f7fe fbad 	bl	800f364 <net_set_zeroconf>
 8010c0a:	70e0      	strb	r0, [r4, #3]
 8010c0c:	b170      	cbz	r0, 8010c2c <Network::SetZeroconf()+0x2e>
 8010c0e:	9b01      	ldr	r3, [sp, #4]
 8010c10:	f8d4 00b4 	ldr.w	r0, [r4, #180]	; 0xb4
 8010c14:	6123      	str	r3, [r4, #16]
 8010c16:	9b02      	ldr	r3, [sp, #8]
 8010c18:	61a3      	str	r3, [r4, #24]
 8010c1a:	9b03      	ldr	r3, [sp, #12]
 8010c1c:	6163      	str	r3, [r4, #20]
 8010c1e:	2300      	movs	r3, #0
 8010c20:	7063      	strb	r3, [r4, #1]
 8010c22:	b118      	cbz	r0, 8010c2c <Network::SetZeroconf()+0x2e>
 8010c24:	6803      	ldr	r3, [r0, #0]
 8010c26:	2101      	movs	r1, #1
 8010c28:	699b      	ldr	r3, [r3, #24]
 8010c2a:	4798      	blx	r3
 8010c2c:	f104 05b8 	add.w	r5, r4, #184	; 0xb8
 8010c30:	4628      	mov	r0, r5
 8010c32:	f001 fd21 	bl	8012678 <NetworkDisplay::ShowIp()>
 8010c36:	4628      	mov	r0, r5
 8010c38:	f001 fd24 	bl	8012684 <NetworkDisplay::ShowNetMask()>
 8010c3c:	78e0      	ldrb	r0, [r4, #3]
 8010c3e:	b005      	add	sp, #20
 8010c40:	bd30      	pop	{r4, r5, pc}
	...

08010c44 <Network::EnableDhcp()>:
 8010c44:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010c46:	4e23      	ldr	r6, [pc, #140]	; (8010cd4 <Network::EnableDhcp()+0x90>)
 8010c48:	4604      	mov	r4, r0
 8010c4a:	6833      	ldr	r3, [r6, #0]
 8010c4c:	b085      	sub	sp, #20
 8010c4e:	791f      	ldrb	r7, [r3, #4]
 8010c50:	b137      	cbz	r7, 8010c60 <Network::EnableDhcp()+0x1c>
 8010c52:	2200      	movs	r2, #0
 8010c54:	2104      	movs	r1, #4
 8010c56:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8010c5a:	711a      	strb	r2, [r3, #4]
 8010c5c:	f003 f8b2 	bl	8013dc4 <fwdgt_config>
 8010c60:	f104 05b8 	add.w	r5, r4, #184	; 0xb8
 8010c64:	2101      	movs	r1, #1
 8010c66:	4628      	mov	r0, r5
 8010c68:	f001 fd1e 	bl	80126a8 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 8010c6c:	1ce2      	adds	r2, r4, #3
 8010c6e:	f104 011c 	add.w	r1, r4, #28
 8010c72:	a801      	add	r0, sp, #4
 8010c74:	f7fe fb40 	bl	800f2f8 <net_set_dhcp>
 8010c78:	78e3      	ldrb	r3, [r4, #3]
 8010c7a:	7060      	strb	r0, [r4, #1]
 8010c7c:	b343      	cbz	r3, 8010cd0 <Network::EnableDhcp()+0x8c>
 8010c7e:	2104      	movs	r1, #4
 8010c80:	4628      	mov	r0, r5
 8010c82:	f001 fd11 	bl	80126a8 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>
 8010c86:	b16f      	cbz	r7, 8010ca4 <Network::EnableDhcp()+0x60>
 8010c88:	2102      	movs	r1, #2
 8010c8a:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8010c8e:	6836      	ldr	r6, [r6, #0]
 8010c90:	f003 f898 	bl	8013dc4 <fwdgt_config>
 8010c94:	2801      	cmp	r0, #1
 8010c96:	bf0c      	ite	eq
 8010c98:	2301      	moveq	r3, #1
 8010c9a:	2300      	movne	r3, #0
 8010c9c:	7133      	strb	r3, [r6, #4]
 8010c9e:	d101      	bne.n	8010ca4 <Network::EnableDhcp()+0x60>
 8010ca0:	f003 f880 	bl	8013da4 <fwdgt_enable>
 8010ca4:	9b01      	ldr	r3, [sp, #4]
 8010ca6:	f8d4 00b4 	ldr.w	r0, [r4, #180]	; 0xb4
 8010caa:	6123      	str	r3, [r4, #16]
 8010cac:	9b02      	ldr	r3, [sp, #8]
 8010cae:	61a3      	str	r3, [r4, #24]
 8010cb0:	9b03      	ldr	r3, [sp, #12]
 8010cb2:	6163      	str	r3, [r4, #20]
 8010cb4:	b118      	cbz	r0, 8010cbe <Network::EnableDhcp()+0x7a>
 8010cb6:	6803      	ldr	r3, [r0, #0]
 8010cb8:	7861      	ldrb	r1, [r4, #1]
 8010cba:	699b      	ldr	r3, [r3, #24]
 8010cbc:	4798      	blx	r3
 8010cbe:	4628      	mov	r0, r5
 8010cc0:	f001 fcda 	bl	8012678 <NetworkDisplay::ShowIp()>
 8010cc4:	4628      	mov	r0, r5
 8010cc6:	f001 fcdd 	bl	8012684 <NetworkDisplay::ShowNetMask()>
 8010cca:	7860      	ldrb	r0, [r4, #1]
 8010ccc:	b005      	add	sp, #20
 8010cce:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010cd0:	2102      	movs	r1, #2
 8010cd2:	e7d5      	b.n	8010c80 <Network::EnableDhcp()+0x3c>
 8010cd4:	20013dd4 	ldrdcs	r3, [r1], -r4

08010cd8 <Network::SetQueuedStaticIp(unsigned int, unsigned int)>:
 8010cd8:	b109      	cbz	r1, 8010cde <Network::SetQueuedStaticIp(unsigned int, unsigned int)+0x6>
 8010cda:	f8c0 10c0 	str.w	r1, [r0, #192]	; 0xc0
 8010cde:	b10a      	cbz	r2, 8010ce4 <Network::SetQueuedStaticIp(unsigned int, unsigned int)+0xc>
 8010ce0:	f8c0 20c4 	str.w	r2, [r0, #196]	; 0xc4
 8010ce4:	f8d0 30bc 	ldr.w	r3, [r0, #188]	; 0xbc
 8010ce8:	f043 0303 	orr.w	r3, r3, #3
 8010cec:	f8c0 30bc 	str.w	r3, [r0, #188]	; 0xbc
 8010cf0:	4770      	bx	lr

08010cf2 <Network::ApplyQueuedConfig()>:
 8010cf2:	f8d0 30bc 	ldr.w	r3, [r0, #188]	; 0xbc
 8010cf6:	b510      	push	{r4, lr}
 8010cf8:	4604      	mov	r4, r0
 8010cfa:	b3c3      	cbz	r3, 8010d6e <Network::ApplyQueuedConfig()+0x7c>
 8010cfc:	079a      	lsls	r2, r3, #30
 8010cfe:	d01a      	beq.n	8010d36 <Network::ApplyQueuedConfig()+0x44>
 8010d00:	079b      	lsls	r3, r3, #30
 8010d02:	d509      	bpl.n	8010d18 <Network::ApplyQueuedConfig()+0x26>
 8010d04:	f8d0 10c4 	ldr.w	r1, [r0, #196]	; 0xc4
 8010d08:	f7ff ff44 	bl	8010b94 <Network::SetNetmask(unsigned int)>
 8010d0c:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 8010d10:	f023 0302 	bic.w	r3, r3, #2
 8010d14:	f8c4 30bc 	str.w	r3, [r4, #188]	; 0xbc
 8010d18:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 8010d1c:	07d9      	lsls	r1, r3, #31
 8010d1e:	d50a      	bpl.n	8010d36 <Network::ApplyQueuedConfig()+0x44>
 8010d20:	4620      	mov	r0, r4
 8010d22:	f8d4 10c0 	ldr.w	r1, [r4, #192]	; 0xc0
 8010d26:	f7ff ff07 	bl	8010b38 <Network::SetIp(unsigned int)>
 8010d2a:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 8010d2e:	f023 0301 	bic.w	r3, r3, #1
 8010d32:	f8c4 30bc 	str.w	r3, [r4, #188]	; 0xbc
 8010d36:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 8010d3a:	075a      	lsls	r2, r3, #29
 8010d3c:	d508      	bpl.n	8010d50 <Network::ApplyQueuedConfig()+0x5e>
 8010d3e:	4620      	mov	r0, r4
 8010d40:	f7ff ff80 	bl	8010c44 <Network::EnableDhcp()>
 8010d44:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 8010d48:	f023 0304 	bic.w	r3, r3, #4
 8010d4c:	f8c4 30bc 	str.w	r3, [r4, #188]	; 0xbc
 8010d50:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 8010d54:	071b      	lsls	r3, r3, #28
 8010d56:	d508      	bpl.n	8010d6a <Network::ApplyQueuedConfig()+0x78>
 8010d58:	4620      	mov	r0, r4
 8010d5a:	f7ff ff50 	bl	8010bfe <Network::SetZeroconf()>
 8010d5e:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
 8010d62:	f023 0308 	bic.w	r3, r3, #8
 8010d66:	f8c4 30bc 	str.w	r3, [r4, #188]	; 0xbc
 8010d6a:	2001      	movs	r0, #1
 8010d6c:	e000      	b.n	8010d70 <Network::ApplyQueuedConfig()+0x7e>
 8010d6e:	4618      	mov	r0, r3
 8010d70:	bd10      	pop	{r4, pc}
	...

08010d74 <Network::Print()>:
 8010d74:	b530      	push	{r4, r5, lr}
 8010d76:	4604      	mov	r4, r0
 8010d78:	b085      	sub	sp, #20
 8010d7a:	4832      	ldr	r0, [pc, #200]	; (8010e44 <Network::Print()+0xd0>)
 8010d7c:	f7f8 f896 	bl	8008eac <printf>
 8010d80:	f104 011c 	add.w	r1, r4, #28
 8010d84:	4830      	ldr	r0, [pc, #192]	; (8010e48 <Network::Print()+0xd4>)
 8010d86:	f7f8 f891 	bl	8008eac <printf>
 8010d8a:	6861      	ldr	r1, [r4, #4]
 8010d8c:	f104 02a2 	add.w	r2, r4, #162	; 0xa2
 8010d90:	482e      	ldr	r0, [pc, #184]	; (8010e4c <Network::Print()+0xd8>)
 8010d92:	f7f8 f88b 	bl	8008eac <printf>
 8010d96:	69a0      	ldr	r0, [r4, #24]
 8010d98:	f7f7 f890 	bl	8007ebc <__popcountsi2>
 8010d9c:	6925      	ldr	r5, [r4, #16]
 8010d9e:	9001      	str	r0, [sp, #4]
 8010da0:	0e2b      	lsrs	r3, r5, #24
 8010da2:	9300      	str	r3, [sp, #0]
 8010da4:	f3c5 2207 	ubfx	r2, r5, #8, #8
 8010da8:	f3c5 4307 	ubfx	r3, r5, #16, #8
 8010dac:	b2e9      	uxtb	r1, r5
 8010dae:	4828      	ldr	r0, [pc, #160]	; (8010e50 <Network::Print()+0xdc>)
 8010db0:	f7f8 f87c 	bl	8008eac <printf>
 8010db4:	69a1      	ldr	r1, [r4, #24]
 8010db6:	4827      	ldr	r0, [pc, #156]	; (8010e54 <Network::Print()+0xe0>)
 8010db8:	0e0b      	lsrs	r3, r1, #24
 8010dba:	f3c1 2207 	ubfx	r2, r1, #8, #8
 8010dbe:	9300      	str	r3, [sp, #0]
 8010dc0:	f3c1 4307 	ubfx	r3, r1, #16, #8
 8010dc4:	b2c9      	uxtb	r1, r1
 8010dc6:	f7f8 f871 	bl	8008eac <printf>
 8010dca:	6961      	ldr	r1, [r4, #20]
 8010dcc:	4822      	ldr	r0, [pc, #136]	; (8010e58 <Network::Print()+0xe4>)
 8010dce:	0e0b      	lsrs	r3, r1, #24
 8010dd0:	f3c1 2207 	ubfx	r2, r1, #8, #8
 8010dd4:	9300      	str	r3, [sp, #0]
 8010dd6:	f3c1 4307 	ubfx	r3, r1, #16, #8
 8010dda:	b2c9      	uxtb	r1, r1
 8010ddc:	f7f8 f866 	bl	8008eac <printf>
 8010de0:	69a3      	ldr	r3, [r4, #24]
 8010de2:	6921      	ldr	r1, [r4, #16]
 8010de4:	481d      	ldr	r0, [pc, #116]	; (8010e5c <Network::Print()+0xe8>)
 8010de6:	ea61 0103 	orn	r1, r1, r3
 8010dea:	0e0b      	lsrs	r3, r1, #24
 8010dec:	f3c1 2207 	ubfx	r2, r1, #8, #8
 8010df0:	9300      	str	r3, [sp, #0]
 8010df2:	f3c1 4307 	ubfx	r3, r1, #16, #8
 8010df6:	b2c9      	uxtb	r1, r1
 8010df8:	f7f8 f858 	bl	8008eac <printf>
 8010dfc:	f894 30a1 	ldrb.w	r3, [r4, #161]	; 0xa1
 8010e00:	f894 209d 	ldrb.w	r2, [r4, #157]	; 0x9d
 8010e04:	9302      	str	r3, [sp, #8]
 8010e06:	f894 30a0 	ldrb.w	r3, [r4, #160]	; 0xa0
 8010e0a:	f894 109c 	ldrb.w	r1, [r4, #156]	; 0x9c
 8010e0e:	9301      	str	r3, [sp, #4]
 8010e10:	f894 309f 	ldrb.w	r3, [r4, #159]	; 0x9f
 8010e14:	4812      	ldr	r0, [pc, #72]	; (8010e60 <Network::Print()+0xec>)
 8010e16:	9300      	str	r3, [sp, #0]
 8010e18:	f894 309e 	ldrb.w	r3, [r4, #158]	; 0x9e
 8010e1c:	f7f8 f846 	bl	8008eac <printf>
 8010e20:	4b10      	ldr	r3, [pc, #64]	; (8010e64 <Network::Print()+0xf0>)
 8010e22:	681b      	ldr	r3, [r3, #0]
 8010e24:	78da      	ldrb	r2, [r3, #3]
 8010e26:	b952      	cbnz	r2, 8010e3e <Network::Print()+0xca>
 8010e28:	785b      	ldrb	r3, [r3, #1]
 8010e2a:	2b00      	cmp	r3, #0
 8010e2c:	bf14      	ite	ne
 8010e2e:	2144      	movne	r1, #68	; 0x44
 8010e30:	2153      	moveq	r1, #83	; 0x53
 8010e32:	480d      	ldr	r0, [pc, #52]	; (8010e68 <Network::Print()+0xf4>)
 8010e34:	b005      	add	sp, #20
 8010e36:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8010e3a:	f7f8 b837 	b.w	8008eac <printf>
 8010e3e:	215a      	movs	r1, #90	; 0x5a
 8010e40:	e7f7      	b.n	8010e32 <Network::Print()+0xbe>
 8010e42:	bf00      	nop
 8010e44:	08017689 	stmdaeq	r1, {r0, r3, r7, r9, sl, ip, sp, lr}
 8010e48:	08017692 	stmdaeq	r1, {r1, r4, r7, r9, sl, ip, sp, lr}
 8010e4c:	080176a3 	stmdaeq	r1, {r0, r1, r5, r7, r9, sl, ip, sp, lr}
 8010e50:	080176b8 	stmdaeq	r1, {r3, r4, r5, r7, r9, sl, ip, sp, lr}
 8010e54:	080176d5 	stmdaeq	r1, {r0, r2, r4, r6, r7, r9, sl, ip, sp, lr}
 8010e58:	080176ef 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r7, r9, sl, ip, sp, lr}
 8010e5c:	08017709 	stmdaeq	r1, {r0, r3, r8, r9, sl, ip, sp, lr}
 8010e60:	08017723 	stmdaeq	r1, {r0, r1, r5, r8, r9, sl, ip, sp, lr}
 8010e64:	200136ac 	andcs	r3, r1, ip, lsr #13
 8010e68:	0801774f 	stmdaeq	r1, {r0, r1, r2, r3, r6, r8, r9, sl, ip, sp, lr}

08010e6c <Network::TcpBegin(unsigned short)>:
 8010e6c:	4608      	mov	r0, r1
 8010e6e:	f7fe be13 	b.w	800fa98 <tcp_begin>

08010e72 <Network::TcpRead(int, unsigned char const**)>:
 8010e72:	4608      	mov	r0, r1
 8010e74:	4611      	mov	r1, r2
 8010e76:	f7fe be4d 	b.w	800fb14 <tcp_read>

08010e7a <Network::TcpWrite(int, unsigned char const*, unsigned short)>:
 8010e7a:	4608      	mov	r0, r1
 8010e7c:	4611      	mov	r1, r2
 8010e7e:	461a      	mov	r2, r3
 8010e80:	f7fe be24 	b.w	800facc <tcp_write>

08010e84 <NetworkParams::NetworkParams(NetworkParamsStore*)>:
 8010e84:	4b06      	ldr	r3, [pc, #24]	; (8010ea0 <NetworkParams::NetworkParams(NetworkParamsStore*)+0x1c>)
 8010e86:	b510      	push	{r4, lr}
 8010e88:	225e      	movs	r2, #94	; 0x5e
 8010e8a:	4604      	mov	r4, r0
 8010e8c:	6001      	str	r1, [r0, #0]
 8010e8e:	2100      	movs	r1, #0
 8010e90:	4618      	mov	r0, r3
 8010e92:	f002 fc97 	bl	80137c4 <memset>
 8010e96:	2201      	movs	r2, #1
 8010e98:	7502      	strb	r2, [r0, #20]
 8010e9a:	4620      	mov	r0, r4
 8010e9c:	bd10      	pop	{r4, pc}
 8010e9e:	bf00      	nop
 8010ea0:	200136b0 			; <UNDEFINED> instruction: 0x200136b0

08010ea4 <NetworkParams::Load()>:
 8010ea4:	b508      	push	{r3, lr}
 8010ea6:	2300      	movs	r3, #0
 8010ea8:	4905      	ldr	r1, [pc, #20]	; (8010ec0 <NetworkParams::Load()+0x1c>)
 8010eaa:	6800      	ldr	r0, [r0, #0]
 8010eac:	700b      	strb	r3, [r1, #0]
 8010eae:	704b      	strb	r3, [r1, #1]
 8010eb0:	708b      	strb	r3, [r1, #2]
 8010eb2:	70cb      	strb	r3, [r1, #3]
 8010eb4:	b118      	cbz	r0, 8010ebe <NetworkParams::Load()+0x1a>
 8010eb6:	6803      	ldr	r3, [r0, #0]
 8010eb8:	68db      	ldr	r3, [r3, #12]
 8010eba:	4798      	blx	r3
 8010ebc:	2001      	movs	r0, #1
 8010ebe:	bd08      	pop	{r3, pc}
 8010ec0:	200136b0 			; <UNDEFINED> instruction: 0x200136b0

08010ec4 <NetworkParams::Load(char const*, unsigned int)>:
 8010ec4:	6803      	ldr	r3, [r0, #0]
 8010ec6:	b1eb      	cbz	r3, 8010f04 <NetworkParams::Load(char const*, unsigned int)+0x40>
 8010ec8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8010eca:	2300      	movs	r3, #0
 8010ecc:	460e      	mov	r6, r1
 8010ece:	4617      	mov	r7, r2
 8010ed0:	4605      	mov	r5, r0
 8010ed2:	4c0d      	ldr	r4, [pc, #52]	; (8010f08 <NetworkParams::Load(char const*, unsigned int)+0x44>)
 8010ed4:	4602      	mov	r2, r0
 8010ed6:	490d      	ldr	r1, [pc, #52]	; (8010f0c <NetworkParams::Load(char const*, unsigned int)+0x48>)
 8010ed8:	4668      	mov	r0, sp
 8010eda:	7023      	strb	r3, [r4, #0]
 8010edc:	7063      	strb	r3, [r4, #1]
 8010ede:	70a3      	strb	r3, [r4, #2]
 8010ee0:	70e3      	strb	r3, [r4, #3]
 8010ee2:	f001 fd35 	bl	8012950 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 8010ee6:	463a      	mov	r2, r7
 8010ee8:	4631      	mov	r1, r6
 8010eea:	4668      	mov	r0, sp
 8010eec:	f001 fd34 	bl	8012958 <ReadConfigFile::Read(char const*, unsigned int)>
 8010ef0:	6828      	ldr	r0, [r5, #0]
 8010ef2:	4621      	mov	r1, r4
 8010ef4:	6803      	ldr	r3, [r0, #0]
 8010ef6:	689b      	ldr	r3, [r3, #8]
 8010ef8:	4798      	blx	r3
 8010efa:	4668      	mov	r0, sp
 8010efc:	f001 fd2b 	bl	8012956 <ReadConfigFile::~ReadConfigFile()>
 8010f00:	b003      	add	sp, #12
 8010f02:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010f04:	4770      	bx	lr
 8010f06:	bf00      	nop
 8010f08:	200136b0 			; <UNDEFINED> instruction: 0x200136b0
 8010f0c:	080110ad 	stmdaeq	r1, {r0, r2, r3, r5, r7, ip}

08010f10 <NetworkParams::callbackFunction(char const*)>:
 8010f10:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8010f12:	460d      	mov	r5, r1
 8010f14:	f10d 0203 	add.w	r2, sp, #3
 8010f18:	4628      	mov	r0, r5
 8010f1a:	495b      	ldr	r1, [pc, #364]	; (8011088 <NetworkParams::callbackFunction(char const*)+0x178>)
 8010f1c:	f001 fe53 	bl	8012bc6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8010f20:	b980      	cbnz	r0, 8010f44 <NetworkParams::callbackFunction(char const*)+0x34>
 8010f22:	495a      	ldr	r1, [pc, #360]	; (801108c <NetworkParams::callbackFunction(char const*)+0x17c>)
 8010f24:	f89d 2003 	ldrb.w	r2, [sp, #3]
 8010f28:	680b      	ldr	r3, [r1, #0]
 8010f2a:	b142      	cbz	r2, 8010f3e <NetworkParams::callbackFunction(char const*)+0x2e>
 8010f2c:	f023 0301 	bic.w	r3, r3, #1
 8010f30:	3a00      	subs	r2, #0
 8010f32:	bf18      	it	ne
 8010f34:	2201      	movne	r2, #1
 8010f36:	600b      	str	r3, [r1, #0]
 8010f38:	750a      	strb	r2, [r1, #20]
 8010f3a:	b004      	add	sp, #16
 8010f3c:	bd70      	pop	{r4, r5, r6, pc}
 8010f3e:	f043 0301 	orr.w	r3, r3, #1
 8010f42:	e7f5      	b.n	8010f30 <NetworkParams::callbackFunction(char const*)+0x20>
 8010f44:	4628      	mov	r0, r5
 8010f46:	4952      	ldr	r1, [pc, #328]	; (8011090 <NetworkParams::callbackFunction(char const*)+0x180>)
 8010f48:	f10d 0203 	add.w	r2, sp, #3
 8010f4c:	f001 fe3b 	bl	8012bc6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8010f50:	b988      	cbnz	r0, 8010f76 <NetworkParams::callbackFunction(char const*)+0x66>
 8010f52:	4a4e      	ldr	r2, [pc, #312]	; (801108c <NetworkParams::callbackFunction(char const*)+0x17c>)
 8010f54:	f89d 1003 	ldrb.w	r1, [sp, #3]
 8010f58:	6813      	ldr	r3, [r2, #0]
 8010f5a:	1e4c      	subs	r4, r1, #1
 8010f5c:	2c04      	cmp	r4, #4
 8010f5e:	bf97      	itett	ls
 8010f60:	f443 7380 	orrls.w	r3, r3, #256	; 0x100
 8010f64:	f423 7380 	bichi.w	r3, r3, #256	; 0x100
 8010f68:	6013      	strls	r3, [r2, #0]
 8010f6a:	f882 105d 	strbls.w	r1, [r2, #93]	; 0x5d
 8010f6e:	bf84      	itt	hi
 8010f70:	6013      	strhi	r3, [r2, #0]
 8010f72:	f882 005d 	strbhi.w	r0, [r2, #93]	; 0x5d
 8010f76:	4628      	mov	r0, r5
 8010f78:	4946      	ldr	r1, [pc, #280]	; (8011094 <NetworkParams::callbackFunction(char const*)+0x184>)
 8010f7a:	aa01      	add	r2, sp, #4
 8010f7c:	f001 fd9c 	bl	8012ab8 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 8010f80:	b9d0      	cbnz	r0, 8010fb8 <NetworkParams::callbackFunction(char const*)+0xa8>
 8010f82:	9b01      	ldr	r3, [sp, #4]
 8010f84:	b2d9      	uxtb	r1, r3
 8010f86:	29ac      	cmp	r1, #172	; 0xac
 8010f88:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8010f8c:	d00a      	beq.n	8010fa4 <NetworkParams::callbackFunction(char const*)+0x94>
 8010f8e:	29c0      	cmp	r1, #192	; 0xc0
 8010f90:	d00c      	beq.n	8010fac <NetworkParams::callbackFunction(char const*)+0x9c>
 8010f92:	290a      	cmp	r1, #10
 8010f94:	d10d      	bne.n	8010fb2 <NetworkParams::callbackFunction(char const*)+0xa2>
 8010f96:	4a3d      	ldr	r2, [pc, #244]	; (801108c <NetworkParams::callbackFunction(char const*)+0x17c>)
 8010f98:	6053      	str	r3, [r2, #4]
 8010f9a:	6813      	ldr	r3, [r2, #0]
 8010f9c:	f043 0302 	orr.w	r3, r3, #2
 8010fa0:	6013      	str	r3, [r2, #0]
 8010fa2:	e7ca      	b.n	8010f3a <NetworkParams::callbackFunction(char const*)+0x2a>
 8010fa4:	3a10      	subs	r2, #16
 8010fa6:	2a0f      	cmp	r2, #15
 8010fa8:	d8c7      	bhi.n	8010f3a <NetworkParams::callbackFunction(char const*)+0x2a>
 8010faa:	e7f4      	b.n	8010f96 <NetworkParams::callbackFunction(char const*)+0x86>
 8010fac:	2aa8      	cmp	r2, #168	; 0xa8
 8010fae:	d1c4      	bne.n	8010f3a <NetworkParams::callbackFunction(char const*)+0x2a>
 8010fb0:	e7f1      	b.n	8010f96 <NetworkParams::callbackFunction(char const*)+0x86>
 8010fb2:	2b00      	cmp	r3, #0
 8010fb4:	d0ef      	beq.n	8010f96 <NetworkParams::callbackFunction(char const*)+0x86>
 8010fb6:	e7c0      	b.n	8010f3a <NetworkParams::callbackFunction(char const*)+0x2a>
 8010fb8:	4628      	mov	r0, r5
 8010fba:	4937      	ldr	r1, [pc, #220]	; (8011098 <NetworkParams::callbackFunction(char const*)+0x188>)
 8010fbc:	aa01      	add	r2, sp, #4
 8010fbe:	f001 fd7b 	bl	8012ab8 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 8010fc2:	b970      	cbnz	r0, 8010fe2 <NetworkParams::callbackFunction(char const*)+0xd2>
 8010fc4:	9a01      	ldr	r2, [sp, #4]
 8010fc6:	2a00      	cmp	r2, #0
 8010fc8:	d0b7      	beq.n	8010f3a <NetworkParams::callbackFunction(char const*)+0x2a>
 8010fca:	ba13      	rev	r3, r2
 8010fcc:	43d9      	mvns	r1, r3
 8010fce:	ea13 0351 	ands.w	r3, r3, r1, lsr #1
 8010fd2:	d1b2      	bne.n	8010f3a <NetworkParams::callbackFunction(char const*)+0x2a>
 8010fd4:	4b2d      	ldr	r3, [pc, #180]	; (801108c <NetworkParams::callbackFunction(char const*)+0x17c>)
 8010fd6:	609a      	str	r2, [r3, #8]
 8010fd8:	681a      	ldr	r2, [r3, #0]
 8010fda:	f042 0204 	orr.w	r2, r2, #4
 8010fde:	601a      	str	r2, [r3, #0]
 8010fe0:	e7ab      	b.n	8010f3a <NetworkParams::callbackFunction(char const*)+0x2a>
 8010fe2:	4628      	mov	r0, r5
 8010fe4:	492d      	ldr	r1, [pc, #180]	; (801109c <NetworkParams::callbackFunction(char const*)+0x18c>)
 8010fe6:	aa01      	add	r2, sp, #4
 8010fe8:	f001 fd66 	bl	8012ab8 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 8010fec:	4c27      	ldr	r4, [pc, #156]	; (801108c <NetworkParams::callbackFunction(char const*)+0x17c>)
 8010fee:	b930      	cbnz	r0, 8010ffe <NetworkParams::callbackFunction(char const*)+0xee>
 8010ff0:	9b01      	ldr	r3, [sp, #4]
 8010ff2:	60e3      	str	r3, [r4, #12]
 8010ff4:	6823      	ldr	r3, [r4, #0]
 8010ff6:	f043 0308 	orr.w	r3, r3, #8
 8010ffa:	6023      	str	r3, [r4, #0]
 8010ffc:	e79d      	b.n	8010f3a <NetworkParams::callbackFunction(char const*)+0x2a>
 8010ffe:	233f      	movs	r3, #63	; 0x3f
 8011000:	4628      	mov	r0, r5
 8011002:	9302      	str	r3, [sp, #8]
 8011004:	4926      	ldr	r1, [pc, #152]	; (80110a0 <NetworkParams::callbackFunction(char const*)+0x190>)
 8011006:	ab02      	add	r3, sp, #8
 8011008:	f104 0215 	add.w	r2, r4, #21
 801100c:	f001 fcd8 	bl	80129c0 <Sscan::Char(char const*, char const*, char*, unsigned int&)>
 8011010:	b930      	cbnz	r0, 8011020 <NetworkParams::callbackFunction(char const*)+0x110>
 8011012:	9b02      	ldr	r3, [sp, #8]
 8011014:	4423      	add	r3, r4
 8011016:	7558      	strb	r0, [r3, #21]
 8011018:	6823      	ldr	r3, [r4, #0]
 801101a:	f043 0320 	orr.w	r3, r3, #32
 801101e:	e7ec      	b.n	8010ffa <NetworkParams::callbackFunction(char const*)+0xea>
 8011020:	4628      	mov	r0, r5
 8011022:	4920      	ldr	r1, [pc, #128]	; (80110a4 <NetworkParams::callbackFunction(char const*)+0x194>)
 8011024:	aa01      	add	r2, sp, #4
 8011026:	f001 fd47 	bl	8012ab8 <Sscan::IpAddress(char const*, char const*, unsigned int&)>
 801102a:	b958      	cbnz	r0, 8011044 <NetworkParams::callbackFunction(char const*)+0x134>
 801102c:	9a01      	ldr	r2, [sp, #4]
 801102e:	6823      	ldr	r3, [r4, #0]
 8011030:	b12a      	cbz	r2, 801103e <NetworkParams::callbackFunction(char const*)+0x12e>
 8011032:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8011036:	6023      	str	r3, [r4, #0]
 8011038:	f8c4 2055 	str.w	r2, [r4, #85]	; 0x55
 801103c:	e77d      	b.n	8010f3a <NetworkParams::callbackFunction(char const*)+0x2a>
 801103e:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8011042:	e7f8      	b.n	8011036 <NetworkParams::callbackFunction(char const*)+0x126>
 8011044:	4628      	mov	r0, r5
 8011046:	4918      	ldr	r1, [pc, #96]	; (80110a8 <NetworkParams::callbackFunction(char const*)+0x198>)
 8011048:	aa03      	add	r2, sp, #12
 801104a:	f001 fcd2 	bl	80129f2 <Sscan::Float(char const*, char const*, float&)>
 801104e:	2800      	cmp	r0, #0
 8011050:	f47f af73 	bne.w	8010f3a <NetworkParams::callbackFunction(char const*)+0x2a>
 8011054:	9e03      	ldr	r6, [sp, #12]
 8011056:	6825      	ldr	r5, [r4, #0]
 8011058:	4630      	mov	r0, r6
 801105a:	f7f6 fa79 	bl	8007550 <__aeabi_f2iz>
 801105e:	300c      	adds	r0, #12
 8011060:	281a      	cmp	r0, #26
 8011062:	d80a      	bhi.n	801107a <NetworkParams::callbackFunction(char const*)+0x16a>
 8011064:	2100      	movs	r1, #0
 8011066:	4630      	mov	r0, r6
 8011068:	f7f6 fa40 	bl	80074ec <__aeabi_fcmpeq>
 801106c:	b928      	cbnz	r0, 801107a <NetworkParams::callbackFunction(char const*)+0x16a>
 801106e:	f8c4 6059 	str.w	r6, [r4, #89]	; 0x59
 8011072:	f045 0580 	orr.w	r5, r5, #128	; 0x80
 8011076:	6025      	str	r5, [r4, #0]
 8011078:	e75f      	b.n	8010f3a <NetworkParams::callbackFunction(char const*)+0x2a>
 801107a:	2300      	movs	r3, #0
 801107c:	f025 0580 	bic.w	r5, r5, #128	; 0x80
 8011080:	f8c4 3059 	str.w	r3, [r4, #89]	; 0x59
 8011084:	e7f7      	b.n	8011076 <NetworkParams::callbackFunction(char const*)+0x166>
 8011086:	bf00      	nop
 8011088:	080177cc 	stmdaeq	r1, {r2, r3, r6, r7, r8, r9, sl, ip, sp, lr}
 801108c:	200136b0 			; <UNDEFINED> instruction: 0x200136b0
 8011090:	080177aa 	stmdaeq	r1, {r1, r3, r5, r7, r8, r9, sl, ip, sp, lr}
 8011094:	08017775 	stmdaeq	r1, {r0, r2, r4, r5, r6, r8, r9, sl, ip, sp, lr}
 8011098:	080177c3 	stmdaeq	r1, {r0, r1, r6, r7, r8, r9, sl, ip, sp, lr}
 801109c:	0801779a 	stmdaeq	r1, {r1, r3, r4, r7, r8, r9, sl, ip, sp, lr}
 80110a0:	080177ba 	stmdaeq	r1, {r1, r3, r4, r5, r7, r8, r9, sl, ip, sp, lr}
 80110a4:	08017780 	stmdaeq	r1, {r7, r8, r9, sl, ip, sp, lr}
 80110a8:	0801778b 	stmdaeq	r1, {r0, r1, r3, r7, r8, r9, sl, ip, sp, lr}

080110ac <NetworkParams::staticCallbackFunction(void*, char const*)>:
 80110ac:	f7ff bf30 	b.w	8010f10 <NetworkParams::callbackFunction(char const*)>

080110b0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)>:
 80110b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80110b2:	4614      	mov	r4, r2
 80110b4:	461d      	mov	r5, r3
 80110b6:	b089      	sub	sp, #36	; 0x24
 80110b8:	2900      	cmp	r1, #0
 80110ba:	d040      	beq.n	801113e <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x8e>
 80110bc:	225e      	movs	r2, #94	; 0x5e
 80110be:	4891      	ldr	r0, [pc, #580]	; (8011304 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x254>)
 80110c0:	f002 fb69 	bl	8013796 <memmove>
 80110c4:	4622      	mov	r2, r4
 80110c6:	462b      	mov	r3, r5
 80110c8:	498f      	ldr	r1, [pc, #572]	; (8011308 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x258>)
 80110ca:	a805      	add	r0, sp, #20
 80110cc:	f001 fba0 	bl	8012810 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 80110d0:	4c8c      	ldr	r4, [pc, #560]	; (8011304 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x254>)
 80110d2:	6823      	ldr	r3, [r4, #0]
 80110d4:	0798      	lsls	r0, r3, #30
 80110d6:	bf5f      	itttt	pl
 80110d8:	4a8c      	ldrpl	r2, [pc, #560]	; (801130c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x25c>)
 80110da:	6812      	ldrpl	r2, [r2, #0]
 80110dc:	6912      	ldrpl	r2, [r2, #16]
 80110de:	6062      	strpl	r2, [r4, #4]
 80110e0:	0759      	lsls	r1, r3, #29
 80110e2:	bf5f      	itttt	pl
 80110e4:	4a89      	ldrpl	r2, [pc, #548]	; (801130c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x25c>)
 80110e6:	6812      	ldrpl	r2, [r2, #0]
 80110e8:	6992      	ldrpl	r2, [r2, #24]
 80110ea:	60a2      	strpl	r2, [r4, #8]
 80110ec:	071a      	lsls	r2, r3, #28
 80110ee:	bf5f      	itttt	pl
 80110f0:	4a86      	ldrpl	r2, [pc, #536]	; (801130c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x25c>)
 80110f2:	6812      	ldrpl	r2, [r2, #0]
 80110f4:	6952      	ldrpl	r2, [r2, #20]
 80110f6:	60e2      	strpl	r2, [r4, #12]
 80110f8:	069f      	lsls	r7, r3, #26
 80110fa:	d40c      	bmi.n	8011116 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x66>
 80110fc:	223f      	movs	r2, #63	; 0x3f
 80110fe:	4b83      	ldr	r3, [pc, #524]	; (801130c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x25c>)
 8011100:	4883      	ldr	r0, [pc, #524]	; (8011310 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x260>)
 8011102:	681b      	ldr	r3, [r3, #0]
 8011104:	331b      	adds	r3, #27
 8011106:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 801110a:	b9f1      	cbnz	r1, 801114a <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x9a>
 801110c:	f002 fb5a 	bl	80137c4 <memset>
 8011110:	2300      	movs	r3, #0
 8011112:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8011116:	f8bd 101a 	ldrh.w	r1, [sp, #26]
 801111a:	f8bd 5018 	ldrh.w	r5, [sp, #24]
 801111e:	42a9      	cmp	r1, r5
 8011120:	d226      	bcs.n	8011170 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xc0>
 8011122:	9805      	ldr	r0, [sp, #20]
 8011124:	1a6d      	subs	r5, r5, r1
 8011126:	4408      	add	r0, r1
 8011128:	6821      	ldr	r1, [r4, #0]
 801112a:	f89d 201c 	ldrb.w	r2, [sp, #28]
 801112e:	07ce      	lsls	r6, r1, #31
 8011130:	7d23      	ldrb	r3, [r4, #20]
 8011132:	d40f      	bmi.n	8011154 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xa4>
 8011134:	b97a      	cbnz	r2, 8011156 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xa6>
 8011136:	9300      	str	r3, [sp, #0]
 8011138:	4a76      	ldr	r2, [pc, #472]	; (8011314 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x264>)
 801113a:	4b77      	ldr	r3, [pc, #476]	; (8011318 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x268>)
 801113c:	e00e      	b.n	801115c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xac>
 801113e:	6800      	ldr	r0, [r0, #0]
 8011140:	4970      	ldr	r1, [pc, #448]	; (8011304 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x254>)
 8011142:	6803      	ldr	r3, [r0, #0]
 8011144:	68db      	ldr	r3, [r3, #12]
 8011146:	4798      	blx	r3
 8011148:	e7bc      	b.n	80110c4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x14>
 801114a:	3a01      	subs	r2, #1
 801114c:	f800 1b01 	strb.w	r1, [r0], #1
 8011150:	d1d9      	bne.n	8011106 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x56>
 8011152:	e7dd      	b.n	8011110 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x60>
 8011154:	b30a      	cbz	r2, 801119a <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xea>
 8011156:	9300      	str	r3, [sp, #0]
 8011158:	4a70      	ldr	r2, [pc, #448]	; (801131c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x26c>)
 801115a:	4b6f      	ldr	r3, [pc, #444]	; (8011318 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x268>)
 801115c:	4629      	mov	r1, r5
 801115e:	f7f7 fecd 	bl	8008efc <snprintf>
 8011162:	4285      	cmp	r5, r0
 8011164:	bfa2      	ittt	ge
 8011166:	f8bd 301a 	ldrhge.w	r3, [sp, #26]
 801116a:	18c0      	addge	r0, r0, r3
 801116c:	f8ad 001a 	strhge.w	r0, [sp, #26]
 8011170:	f8bd 101a 	ldrh.w	r1, [sp, #26]
 8011174:	f8bd 5018 	ldrh.w	r5, [sp, #24]
 8011178:	42a9      	cmp	r1, r5
 801117a:	d221      	bcs.n	80111c0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x110>
 801117c:	9805      	ldr	r0, [sp, #20]
 801117e:	1a6d      	subs	r5, r5, r1
 8011180:	4408      	add	r0, r1
 8011182:	6821      	ldr	r1, [r4, #0]
 8011184:	f89d 201c 	ldrb.w	r2, [sp, #28]
 8011188:	05c9      	lsls	r1, r1, #23
 801118a:	f894 305d 	ldrb.w	r3, [r4, #93]	; 0x5d
 801118e:	d408      	bmi.n	80111a2 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xf2>
 8011190:	b94a      	cbnz	r2, 80111a6 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xf6>
 8011192:	9300      	str	r3, [sp, #0]
 8011194:	4a5f      	ldr	r2, [pc, #380]	; (8011314 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x264>)
 8011196:	4b62      	ldr	r3, [pc, #392]	; (8011320 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x270>)
 8011198:	e008      	b.n	80111ac <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xfc>
 801119a:	9300      	str	r3, [sp, #0]
 801119c:	4a61      	ldr	r2, [pc, #388]	; (8011324 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x274>)
 801119e:	4b5e      	ldr	r3, [pc, #376]	; (8011318 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x268>)
 80111a0:	e7dc      	b.n	801115c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xac>
 80111a2:	2a00      	cmp	r2, #0
 80111a4:	d03e      	beq.n	8011224 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x174>
 80111a6:	9300      	str	r3, [sp, #0]
 80111a8:	4a5c      	ldr	r2, [pc, #368]	; (801131c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x26c>)
 80111aa:	4b5d      	ldr	r3, [pc, #372]	; (8011320 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x270>)
 80111ac:	4629      	mov	r1, r5
 80111ae:	f7f7 fea5 	bl	8008efc <snprintf>
 80111b2:	4285      	cmp	r5, r0
 80111b4:	bfa2      	ittt	ge
 80111b6:	f8bd 301a 	ldrhge.w	r3, [sp, #26]
 80111ba:	18c0      	addge	r0, r0, r3
 80111bc:	f8ad 001a 	strhge.w	r0, [sp, #26]
 80111c0:	4959      	ldr	r1, [pc, #356]	; (8011328 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x278>)
 80111c2:	a805      	add	r0, sp, #20
 80111c4:	f001 fbaa 	bl	801291c <PropertiesBuilder::AddComment(char const*)>
 80111c8:	6823      	ldr	r3, [r4, #0]
 80111ca:	6862      	ldr	r2, [r4, #4]
 80111cc:	4957      	ldr	r1, [pc, #348]	; (801132c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x27c>)
 80111ce:	f3c3 0340 	ubfx	r3, r3, #1, #1
 80111d2:	a805      	add	r0, sp, #20
 80111d4:	f001 fb5e 	bl	8012894 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 80111d8:	6823      	ldr	r3, [r4, #0]
 80111da:	68a2      	ldr	r2, [r4, #8]
 80111dc:	4954      	ldr	r1, [pc, #336]	; (8011330 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x280>)
 80111de:	f3c3 0380 	ubfx	r3, r3, #2, #1
 80111e2:	a805      	add	r0, sp, #20
 80111e4:	f001 fb56 	bl	8012894 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 80111e8:	6823      	ldr	r3, [r4, #0]
 80111ea:	4952      	ldr	r1, [pc, #328]	; (8011334 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x284>)
 80111ec:	68e2      	ldr	r2, [r4, #12]
 80111ee:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 80111f2:	a805      	add	r0, sp, #20
 80111f4:	f001 fb4e 	bl	8012894 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 80111f8:	f8bd 101a 	ldrh.w	r1, [sp, #26]
 80111fc:	f8bd 5018 	ldrh.w	r5, [sp, #24]
 8011200:	42a9      	cmp	r1, r5
 8011202:	d222      	bcs.n	801124a <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x19a>
 8011204:	6823      	ldr	r3, [r4, #0]
 8011206:	9805      	ldr	r0, [sp, #20]
 8011208:	f013 0f20 	tst.w	r3, #32
 801120c:	f89d 201c 	ldrb.w	r2, [sp, #28]
 8011210:	4b3f      	ldr	r3, [pc, #252]	; (8011310 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x260>)
 8011212:	4408      	add	r0, r1
 8011214:	eba5 0501 	sub.w	r5, r5, r1
 8011218:	d108      	bne.n	801122c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x17c>
 801121a:	b94a      	cbnz	r2, 8011230 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x180>
 801121c:	9300      	str	r3, [sp, #0]
 801121e:	4a46      	ldr	r2, [pc, #280]	; (8011338 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x288>)
 8011220:	4b46      	ldr	r3, [pc, #280]	; (801133c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x28c>)
 8011222:	e008      	b.n	8011236 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x186>
 8011224:	9300      	str	r3, [sp, #0]
 8011226:	4a3f      	ldr	r2, [pc, #252]	; (8011324 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x274>)
 8011228:	4b3d      	ldr	r3, [pc, #244]	; (8011320 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x270>)
 801122a:	e7bf      	b.n	80111ac <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0xfc>
 801122c:	2a00      	cmp	r2, #0
 801122e:	d035      	beq.n	801129c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1ec>
 8011230:	9300      	str	r3, [sp, #0]
 8011232:	4a43      	ldr	r2, [pc, #268]	; (8011340 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x290>)
 8011234:	4b41      	ldr	r3, [pc, #260]	; (801133c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x28c>)
 8011236:	4629      	mov	r1, r5
 8011238:	f7f7 fe60 	bl	8008efc <snprintf>
 801123c:	4285      	cmp	r5, r0
 801123e:	bfa2      	ittt	ge
 8011240:	f8bd 301a 	ldrhge.w	r3, [sp, #26]
 8011244:	18c0      	addge	r0, r0, r3
 8011246:	f8ad 001a 	strhge.w	r0, [sp, #26]
 801124a:	493e      	ldr	r1, [pc, #248]	; (8011344 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x294>)
 801124c:	a805      	add	r0, sp, #20
 801124e:	f001 fb65 	bl	801291c <PropertiesBuilder::AddComment(char const*)>
 8011252:	6823      	ldr	r3, [r4, #0]
 8011254:	f8d4 2055 	ldr.w	r2, [r4, #85]	; 0x55
 8011258:	f3c3 1380 	ubfx	r3, r3, #6, #1
 801125c:	493a      	ldr	r1, [pc, #232]	; (8011348 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x298>)
 801125e:	a805      	add	r0, sp, #20
 8011260:	f001 fb18 	bl	8012894 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>
 8011264:	f8bd 301a 	ldrh.w	r3, [sp, #26]
 8011268:	f8bd 5018 	ldrh.w	r5, [sp, #24]
 801126c:	42ab      	cmp	r3, r5
 801126e:	d22a      	bcs.n	80112c6 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x216>
 8011270:	9f05      	ldr	r7, [sp, #20]
 8011272:	f8d4 0059 	ldr.w	r0, [r4, #89]	; 0x59
 8011276:	441f      	add	r7, r3
 8011278:	1aed      	subs	r5, r5, r3
 801127a:	f7f6 fc77 	bl	8007b6c <__aeabi_f2d>
 801127e:	6823      	ldr	r3, [r4, #0]
 8011280:	f89d 601c 	ldrb.w	r6, [sp, #28]
 8011284:	f013 0f80 	tst.w	r3, #128	; 0x80
 8011288:	f04f 0301 	mov.w	r3, #1
 801128c:	d10a      	bne.n	80112a4 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f4>
 801128e:	b956      	cbnz	r6, 80112a6 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x1f6>
 8011290:	9300      	str	r3, [sp, #0]
 8011292:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8011296:	4b2d      	ldr	r3, [pc, #180]	; (801134c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x29c>)
 8011298:	4a2d      	ldr	r2, [pc, #180]	; (8011350 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x2a0>)
 801129a:	e009      	b.n	80112b0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x200>
 801129c:	9300      	str	r3, [sp, #0]
 801129e:	4a2d      	ldr	r2, [pc, #180]	; (8011354 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x2a4>)
 80112a0:	4b26      	ldr	r3, [pc, #152]	; (801133c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x28c>)
 80112a2:	e7c8      	b.n	8011236 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x186>
 80112a4:	b346      	cbz	r6, 80112f8 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x248>
 80112a6:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80112aa:	9300      	str	r3, [sp, #0]
 80112ac:	4a2a      	ldr	r2, [pc, #168]	; (8011358 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x2a8>)
 80112ae:	4b27      	ldr	r3, [pc, #156]	; (801134c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x29c>)
 80112b0:	4629      	mov	r1, r5
 80112b2:	4638      	mov	r0, r7
 80112b4:	f7f7 fe22 	bl	8008efc <snprintf>
 80112b8:	4285      	cmp	r5, r0
 80112ba:	bfa2      	ittt	ge
 80112bc:	f8bd 301a 	ldrhge.w	r3, [sp, #26]
 80112c0:	18c0      	addge	r0, r0, r3
 80112c2:	f8ad 001a 	strhge.w	r0, [sp, #26]
 80112c6:	f89d 301c 	ldrb.w	r3, [sp, #28]
 80112ca:	b17b      	cbz	r3, 80112ec <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x23c>
 80112cc:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 80112d0:	9b05      	ldr	r3, [sp, #20]
 80112d2:	4413      	add	r3, r2
 80112d4:	227d      	movs	r2, #125	; 0x7d
 80112d6:	f803 2c01 	strb.w	r2, [r3, #-1]
 80112da:	f8bd 301a 	ldrh.w	r3, [sp, #26]
 80112de:	9905      	ldr	r1, [sp, #20]
 80112e0:	54ca      	strb	r2, [r1, r3]
 80112e2:	f8bd 301a 	ldrh.w	r3, [sp, #26]
 80112e6:	3301      	adds	r3, #1
 80112e8:	f8ad 301a 	strh.w	r3, [sp, #26]
 80112ec:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 80112f0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80112f2:	601a      	str	r2, [r3, #0]
 80112f4:	b009      	add	sp, #36	; 0x24
 80112f6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80112f8:	9300      	str	r3, [sp, #0]
 80112fa:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80112fe:	4b13      	ldr	r3, [pc, #76]	; (801134c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x29c>)
 8011300:	4a16      	ldr	r2, [pc, #88]	; (801135c <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x2ac>)
 8011302:	e7d5      	b.n	80112b0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)+0x200>
 8011304:	200136b0 			; <UNDEFINED> instruction: 0x200136b0
 8011308:	080177d5 	stmdaeq	r1, {r0, r2, r4, r6, r7, r8, r9, sl, ip, sp, lr}
 801130c:	200136ac 	andcs	r3, r1, ip, lsr #13
 8011310:	200136c5 	andcs	r3, r1, r5, asr #13
 8011314:	08015dbd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r7, r8, sl, fp, ip, lr}
 8011318:	080177cc 	stmdaeq	r1, {r2, r3, r6, r7, r8, r9, sl, ip, sp, lr}
 801131c:	08015db4 	stmdaeq	r1, {r2, r4, r5, r7, r8, sl, fp, ip, lr}
 8011320:	080177aa 	stmdaeq	r1, {r1, r3, r5, r7, r8, r9, sl, ip, sp, lr}
 8011324:	08015dbe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r7, r8, sl, fp, ip, lr}
 8011328:	08017760 	stmdaeq	r1, {r5, r6, r8, r9, sl, ip, sp, lr}
 801132c:	08017775 	stmdaeq	r1, {r0, r2, r4, r5, r6, r8, r9, sl, ip, sp, lr}
 8011330:	080177c3 	stmdaeq	r1, {r0, r1, r6, r7, r8, r9, sl, ip, sp, lr}
 8011334:	0801779a 	stmdaeq	r1, {r1, r3, r4, r7, r8, r9, sl, ip, sp, lr}
 8011338:	08015dd0 	stmdaeq	r1, {r4, r6, r7, r8, sl, fp, ip, lr}
 801133c:	080177ba 	stmdaeq	r1, {r1, r3, r4, r5, r7, r8, r9, sl, ip, sp, lr}
 8011340:	08015dc5 	stmdaeq	r1, {r0, r2, r6, r7, r8, sl, fp, ip, lr}
 8011344:	0801776a 	stmdaeq	r1, {r1, r3, r5, r6, r8, r9, sl, ip, sp, lr}
 8011348:	08017780 	stmdaeq	r1, {r7, r8, r9, sl, ip, sp, lr}
 801134c:	0801778b 	stmdaeq	r1, {r0, r1, r3, r7, r8, r9, sl, ip, sp, lr}
 8011350:	080172ab 	stmdaeq	r1, {r0, r1, r3, r5, r7, r9, ip, sp, lr}
 8011354:	08015dd1 	stmdaeq	r1, {r0, r4, r6, r7, r8, sl, fp, ip, lr}
 8011358:	080172a0 	stmdaeq	r1, {r5, r7, r9, ip, sp, lr}
 801135c:	080172ac 	stmdaeq	r1, {r2, r3, r5, r7, r9, ip, sp, lr}

08011360 <NetworkParams::Save(char*, unsigned int, unsigned int&)>:
 8011360:	b513      	push	{r0, r1, r4, lr}
 8011362:	6804      	ldr	r4, [r0, #0]
 8011364:	b914      	cbnz	r4, 801136c <NetworkParams::Save(char*, unsigned int, unsigned int&)+0xc>
 8011366:	601c      	str	r4, [r3, #0]
 8011368:	b002      	add	sp, #8
 801136a:	bd10      	pop	{r4, pc}
 801136c:	9300      	str	r3, [sp, #0]
 801136e:	4613      	mov	r3, r2
 8011370:	460a      	mov	r2, r1
 8011372:	2100      	movs	r1, #0
 8011374:	f7ff fe9c 	bl	80110b0 <NetworkParams::Builder(TNetworkParams const*, char*, unsigned int, unsigned int&)>
 8011378:	e7f6      	b.n	8011368 <NetworkParams::Save(char*, unsigned int, unsigned int&)+0x8>

0801137a <NetworkParams::Dump()>:
 801137a:	4770      	bx	lr

0801137c <memcpy.isra.0>:
 801137c:	3801      	subs	r0, #1
 801137e:	440a      	add	r2, r1
 8011380:	4291      	cmp	r1, r2
 8011382:	d100      	bne.n	8011386 <memcpy.isra.0+0xa>
 8011384:	4770      	bx	lr
 8011386:	f811 3b01 	ldrb.w	r3, [r1], #1
 801138a:	f800 3f01 	strb.w	r3, [r0, #1]!
 801138e:	e7f7      	b.n	8011380 <memcpy.isra.0+0x4>

08011390 <arp_announce>:
 8011390:	4803      	ldr	r0, [pc, #12]	; (80113a0 <arp_announce+0x10>)
 8011392:	69c3      	ldr	r3, [r0, #28]
 8011394:	b113      	cbz	r3, 801139c <arp_announce+0xc>
 8011396:	212a      	movs	r1, #42	; 0x2a
 8011398:	f003 ba4a 	b.w	8014830 <emac_eth_send>
 801139c:	4770      	bx	lr
 801139e:	bf00      	nop
 80113a0:	20013710 	andcs	r3, r1, r0, lsl r7

080113a4 <arp_handle_request>:
 80113a4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80113a6:	2204      	movs	r2, #4
 80113a8:	f100 0126 	add.w	r1, r0, #38	; 0x26
 80113ac:	4604      	mov	r4, r0
 80113ae:	eb0d 0002 	add.w	r0, sp, r2
 80113b2:	f7ff ffe3 	bl	801137c <memcpy.isra.0>
 80113b6:	4b0d      	ldr	r3, [pc, #52]	; (80113ec <arp_handle_request+0x48>)
 80113b8:	9a01      	ldr	r2, [sp, #4]
 80113ba:	69db      	ldr	r3, [r3, #28]
 80113bc:	429a      	cmp	r2, r3
 80113be:	d113      	bne.n	80113e8 <arp_handle_request+0x44>
 80113c0:	2206      	movs	r2, #6
 80113c2:	4d0b      	ldr	r5, [pc, #44]	; (80113f0 <arp_handle_request+0x4c>)
 80113c4:	18a1      	adds	r1, r4, r2
 80113c6:	4628      	mov	r0, r5
 80113c8:	f7ff ffd8 	bl	801137c <memcpy.isra.0>
 80113cc:	f104 0116 	add.w	r1, r4, #22
 80113d0:	f105 0020 	add.w	r0, r5, #32
 80113d4:	2206      	movs	r2, #6
 80113d6:	f7ff ffd1 	bl	801137c <memcpy.isra.0>
 80113da:	69e3      	ldr	r3, [r4, #28]
 80113dc:	212a      	movs	r1, #42	; 0x2a
 80113de:	4628      	mov	r0, r5
 80113e0:	f8c5 3026 	str.w	r3, [r5, #38]	; 0x26
 80113e4:	f003 fa24 	bl	8014830 <emac_eth_send>
 80113e8:	b003      	add	sp, #12
 80113ea:	bd30      	pop	{r4, r5, pc}
 80113ec:	20013710 	andcs	r3, r1, r0, lsl r7
 80113f0:	2001373c 	andcs	r3, r1, ip, lsr r7

080113f4 <arp_handle_reply>:
 80113f4:	69c1      	ldr	r1, [r0, #28]
 80113f6:	3016      	adds	r0, #22
 80113f8:	f000 b8ac 	b.w	8011554 <arp_cache_update>

080113fc <arp_init>:
 80113fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011400:	4604      	mov	r4, r0
 8011402:	460d      	mov	r5, r1
 8011404:	f000 f88c 	bl	8011520 <arp_cache_init>
 8011408:	2206      	movs	r2, #6
 801140a:	4621      	mov	r1, r4
 801140c:	482e      	ldr	r0, [pc, #184]	; (80114c8 <arp_init+0xcc>)
 801140e:	682f      	ldr	r7, [r5, #0]
 8011410:	f7ff ffb4 	bl	801137c <memcpy.isra.0>
 8011414:	4b2d      	ldr	r3, [pc, #180]	; (80114cc <arp_init+0xd0>)
 8011416:	2507      	movs	r5, #7
 8011418:	461e      	mov	r6, r3
 801141a:	22ff      	movs	r2, #255	; 0xff
 801141c:	3d01      	subs	r5, #1
 801141e:	d146      	bne.n	80114ae <arp_init+0xb2>
 8011420:	4b2b      	ldr	r3, [pc, #172]	; (80114d0 <arp_init+0xd4>)
 8011422:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 80114d4 <arp_init+0xd8>
 8011426:	2206      	movs	r2, #6
 8011428:	e9c6 3803 	strd	r3, r8, [r6, #12]
 801142c:	f44f 7380 	mov.w	r3, #256	; 0x100
 8011430:	4621      	mov	r1, r4
 8011432:	4829      	ldr	r0, [pc, #164]	; (80114d8 <arp_init+0xdc>)
 8011434:	82b3      	strh	r3, [r6, #20]
 8011436:	f7ff ffa1 	bl	801137c <memcpy.isra.0>
 801143a:	2307      	movs	r3, #7
 801143c:	4a27      	ldr	r2, [pc, #156]	; (80114dc <arp_init+0xe0>)
 801143e:	61f7      	str	r7, [r6, #28]
 8011440:	3b01      	subs	r3, #1
 8011442:	d137      	bne.n	80114b4 <arp_init+0xb8>
 8011444:	2206      	movs	r2, #6
 8011446:	4621      	mov	r1, r4
 8011448:	4825      	ldr	r0, [pc, #148]	; (80114e0 <arp_init+0xe4>)
 801144a:	f8c6 7026 	str.w	r7, [r6, #38]	; 0x26
 801144e:	f7ff ff95 	bl	801137c <memcpy.isra.0>
 8011452:	4a24      	ldr	r2, [pc, #144]	; (80114e4 <arp_init+0xe8>)
 8011454:	2306      	movs	r3, #6
 8011456:	4615      	mov	r5, r2
 8011458:	21ff      	movs	r1, #255	; 0xff
 801145a:	3b01      	subs	r3, #1
 801145c:	d22d      	bcs.n	80114ba <arp_init+0xbe>
 801145e:	4b1c      	ldr	r3, [pc, #112]	; (80114d0 <arp_init+0xd4>)
 8011460:	2206      	movs	r2, #6
 8011462:	e9c5 3803 	strd	r3, r8, [r5, #12]
 8011466:	f44f 7380 	mov.w	r3, #256	; 0x100
 801146a:	4621      	mov	r1, r4
 801146c:	481e      	ldr	r0, [pc, #120]	; (80114e8 <arp_init+0xec>)
 801146e:	82ab      	strh	r3, [r5, #20]
 8011470:	f7ff ff84 	bl	801137c <memcpy.isra.0>
 8011474:	2307      	movs	r3, #7
 8011476:	2100      	movs	r1, #0
 8011478:	4a1c      	ldr	r2, [pc, #112]	; (80114ec <arp_init+0xf0>)
 801147a:	61ef      	str	r7, [r5, #28]
 801147c:	3b01      	subs	r3, #1
 801147e:	d11f      	bne.n	80114c0 <arp_init+0xc4>
 8011480:	2206      	movs	r2, #6
 8011482:	4d1b      	ldr	r5, [pc, #108]	; (80114f0 <arp_init+0xf4>)
 8011484:	4621      	mov	r1, r4
 8011486:	18a8      	adds	r0, r5, r2
 8011488:	f7ff ff78 	bl	801137c <memcpy.isra.0>
 801148c:	4b10      	ldr	r3, [pc, #64]	; (80114d0 <arp_init+0xd4>)
 801148e:	4621      	mov	r1, r4
 8011490:	e9c5 3803 	strd	r3, r8, [r5, #12]
 8011494:	f44f 7300 	mov.w	r3, #512	; 0x200
 8011498:	f105 0016 	add.w	r0, r5, #22
 801149c:	2206      	movs	r2, #6
 801149e:	82ab      	strh	r3, [r5, #20]
 80114a0:	f7ff ff6c 	bl	801137c <memcpy.isra.0>
 80114a4:	61ef      	str	r7, [r5, #28]
 80114a6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80114aa:	f7ff bf71 	b.w	8011390 <arp_announce>
 80114ae:	f803 2b01 	strb.w	r2, [r3], #1
 80114b2:	e7b3      	b.n	801141c <arp_init+0x20>
 80114b4:	f802 5b01 	strb.w	r5, [r2], #1
 80114b8:	e7c2      	b.n	8011440 <arp_init+0x44>
 80114ba:	f802 1b01 	strb.w	r1, [r2], #1
 80114be:	e7cc      	b.n	801145a <arp_init+0x5e>
 80114c0:	f802 1b01 	strb.w	r1, [r2], #1
 80114c4:	e7da      	b.n	801147c <arp_init+0x80>
 80114c6:	bf00      	nop
 80114c8:	20013716 	andcs	r3, r1, r6, lsl r7
 80114cc:	20013710 	andcs	r3, r1, r0, lsl r7
 80114d0:	01000608 	tsteq	r0, r8, lsl #12
 80114d4:	04060008 	streq	r0, [r6], #-8
 80114d8:	20013726 	andcs	r3, r1, r6, lsr #14
 80114dc:	20013730 	andcs	r3, r1, r0, lsr r7
 80114e0:	2001376e 	andcs	r3, r1, lr, ror #14
 80114e4:	20013768 	andcs	r3, r1, r8, ror #14
 80114e8:	2001377e 	andcs	r3, r1, lr, ror r7
 80114ec:	20013788 	andcs	r3, r1, r8, lsl #15
 80114f0:	2001373c 	andcs	r3, r1, ip, lsr r7

080114f4 <arp_send_request>:
 80114f4:	4b03      	ldr	r3, [pc, #12]	; (8011504 <arp_send_request+0x10>)
 80114f6:	212a      	movs	r1, #42	; 0x2a
 80114f8:	f8c3 0026 	str.w	r0, [r3, #38]	; 0x26
 80114fc:	4618      	mov	r0, r3
 80114fe:	f003 b997 	b.w	8014830 <emac_eth_send>
 8011502:	bf00      	nop
 8011504:	20013768 	andcs	r3, r1, r8, ror #14

08011508 <arp_handle>:
 8011508:	8a83      	ldrh	r3, [r0, #20]
 801150a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 801150e:	d003      	beq.n	8011518 <arp_handle+0x10>
 8011510:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8011514:	d002      	beq.n	801151c <arp_handle+0x14>
 8011516:	4770      	bx	lr
 8011518:	f7ff bf44 	b.w	80113a4 <arp_handle_request>
 801151c:	f7ff bf6a 	b.w	80113f4 <arp_handle_reply>

08011520 <arp_cache_init>:
 8011520:	2300      	movs	r3, #0
 8011522:	4618      	mov	r0, r3
 8011524:	4a09      	ldr	r2, [pc, #36]	; (801154c <arp_cache_init+0x2c>)
 8011526:	b510      	push	{r4, lr}
 8011528:	8013      	strh	r3, [r2, #0]
 801152a:	4a09      	ldr	r2, [pc, #36]	; (8011550 <arp_cache_init+0x30>)
 801152c:	4611      	mov	r1, r2
 801152e:	f842 0c04 	str.w	r0, [r2, #-4]
 8011532:	1d94      	adds	r4, r2, #6
 8011534:	42a1      	cmp	r1, r4
 8011536:	d105      	bne.n	8011544 <arp_cache_init+0x24>
 8011538:	3303      	adds	r3, #3
 801153a:	2b60      	cmp	r3, #96	; 0x60
 801153c:	f102 020c 	add.w	r2, r2, #12
 8011540:	d1f4      	bne.n	801152c <arp_cache_init+0xc>
 8011542:	bd10      	pop	{r4, pc}
 8011544:	f801 0b01 	strb.w	r0, [r1], #1
 8011548:	e7f4      	b.n	8011534 <arp_cache_init+0x14>
 801154a:	bf00      	nop
 801154c:	20013914 	andcs	r3, r1, r4, lsl r9
 8011550:	20013798 	mulcs	r1, r8, r7

08011554 <arp_cache_update>:
 8011554:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011556:	4e11      	ldr	r6, [pc, #68]	; (801159c <arp_cache_update+0x48>)
 8011558:	8833      	ldrh	r3, [r6, #0]
 801155a:	2b20      	cmp	r3, #32
 801155c:	d018      	beq.n	8011590 <arp_cache_update+0x3c>
 801155e:	2400      	movs	r4, #0
 8011560:	220c      	movs	r2, #12
 8011562:	4d0f      	ldr	r5, [pc, #60]	; (80115a0 <arp_cache_update+0x4c>)
 8011564:	b2a7      	uxth	r7, r4
 8011566:	42bb      	cmp	r3, r7
 8011568:	d80b      	bhi.n	8011582 <arp_cache_update+0x2e>
 801156a:	fb02 5203 	mla	r2, r2, r3, r5
 801156e:	1d84      	adds	r4, r0, #6
 8011570:	3203      	adds	r2, #3
 8011572:	42a0      	cmp	r0, r4
 8011574:	d10d      	bne.n	8011592 <arp_cache_update+0x3e>
 8011576:	220c      	movs	r2, #12
 8011578:	435a      	muls	r2, r3
 801157a:	3301      	adds	r3, #1
 801157c:	50a9      	str	r1, [r5, r2]
 801157e:	8033      	strh	r3, [r6, #0]
 8011580:	e006      	b.n	8011590 <arp_cache_update+0x3c>
 8011582:	3401      	adds	r4, #1
 8011584:	fb02 5704 	mla	r7, r2, r4, r5
 8011588:	f857 7c0c 	ldr.w	r7, [r7, #-12]
 801158c:	428f      	cmp	r7, r1
 801158e:	d1e9      	bne.n	8011564 <arp_cache_update+0x10>
 8011590:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011592:	f810 7b01 	ldrb.w	r7, [r0], #1
 8011596:	f802 7f01 	strb.w	r7, [r2, #1]!
 801159a:	e7ea      	b.n	8011572 <arp_cache_update+0x1e>
 801159c:	20013914 	andcs	r3, r1, r4, lsl r9
 80115a0:	20013794 	mulcs	r1, r4, r7

080115a4 <arp_cache_lookup>:
 80115a4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80115a8:	2200      	movs	r2, #0
 80115aa:	4606      	mov	r6, r0
 80115ac:	460c      	mov	r4, r1
 80115ae:	200c      	movs	r0, #12
 80115b0:	f8df 8084 	ldr.w	r8, [pc, #132]	; 8011638 <arp_cache_lookup+0x94>
 80115b4:	fb00 f302 	mul.w	r3, r0, r2
 80115b8:	f853 1008 	ldr.w	r1, [r3, r8]
 80115bc:	42b1      	cmp	r1, r6
 80115be:	d10d      	bne.n	80115dc <arp_cache_lookup+0x38>
 80115c0:	3304      	adds	r3, #4
 80115c2:	4443      	add	r3, r8
 80115c4:	3c01      	subs	r4, #1
 80115c6:	1d9a      	adds	r2, r3, #6
 80115c8:	4293      	cmp	r3, r2
 80115ca:	d102      	bne.n	80115d2 <arp_cache_lookup+0x2e>
 80115cc:	4630      	mov	r0, r6
 80115ce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80115d2:	f813 1b01 	ldrb.w	r1, [r3], #1
 80115d6:	f804 1f01 	strb.w	r1, [r4, #1]!
 80115da:	e7f5      	b.n	80115c8 <arp_cache_lookup+0x24>
 80115dc:	b111      	cbz	r1, 80115e4 <arp_cache_lookup+0x40>
 80115de:	3201      	adds	r2, #1
 80115e0:	2a20      	cmp	r2, #32
 80115e2:	d1e7      	bne.n	80115b4 <arp_cache_lookup+0x10>
 80115e4:	2704      	movs	r7, #4
 80115e6:	f8df a054 	ldr.w	sl, [pc, #84]	; 801163c <arp_cache_lookup+0x98>
 80115ea:	f8ba 5000 	ldrh.w	r5, [sl]
 80115ee:	3f01      	subs	r7, #1
 80115f0:	f017 07ff 	ands.w	r7, r7, #255	; 0xff
 80115f4:	d101      	bne.n	80115fa <arp_cache_lookup+0x56>
 80115f6:	463e      	mov	r6, r7
 80115f8:	e7e8      	b.n	80115cc <arp_cache_lookup+0x28>
 80115fa:	4630      	mov	r0, r6
 80115fc:	f7ff ff7a 	bl	80114f4 <arp_send_request>
 8011600:	f44f 3900 	mov.w	r9, #131072	; 0x20000
 8011604:	f1b9 0901 	subs.w	r9, r9, #1
 8011608:	f8ba 3000 	ldrh.w	r3, [sl]
 801160c:	d011      	beq.n	8011632 <arp_cache_lookup+0x8e>
 801160e:	429d      	cmp	r5, r3
 8011610:	d00c      	beq.n	801162c <arp_cache_lookup+0x88>
 8011612:	230c      	movs	r3, #12
 8011614:	fb03 8505 	mla	r5, r3, r5, r8
 8011618:	3c01      	subs	r4, #1
 801161a:	1d2b      	adds	r3, r5, #4
 801161c:	350a      	adds	r5, #10
 801161e:	42ab      	cmp	r3, r5
 8011620:	d0d4      	beq.n	80115cc <arp_cache_lookup+0x28>
 8011622:	f813 2b01 	ldrb.w	r2, [r3], #1
 8011626:	f804 2f01 	strb.w	r2, [r4, #1]!
 801162a:	e7f8      	b.n	801161e <arp_cache_lookup+0x7a>
 801162c:	f7fd febc 	bl	800f3a8 <net_handle>
 8011630:	e7e8      	b.n	8011604 <arp_cache_lookup+0x60>
 8011632:	429d      	cmp	r5, r3
 8011634:	d0db      	beq.n	80115ee <arp_cache_lookup+0x4a>
 8011636:	e7ec      	b.n	8011612 <arp_cache_lookup+0x6e>
 8011638:	20013794 	mulcs	r1, r4, r7
 801163c:	20013914 	andcs	r3, r1, r4, lsl r9

08011640 <_parse_response>:
 8011640:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011644:	460c      	mov	r4, r1
 8011646:	4e5b      	ldr	r6, [pc, #364]	; (80117b4 <_parse_response+0x174>)
 8011648:	f5ad 7d15 	sub.w	sp, sp, #596	; 0x254
 801164c:	6837      	ldr	r7, [r6, #0]
 801164e:	b2c5      	uxtb	r5, r0
 8011650:	f10d 0826 	add.w	r8, sp, #38	; 0x26
 8011654:	f7fd fea8 	bl	800f3a8 <net_handle>
 8011658:	f44f 7209 	mov.w	r2, #548	; 0x224
 801165c:	4628      	mov	r0, r5
 801165e:	f8cd 8000 	str.w	r8, [sp]
 8011662:	ab0a      	add	r3, sp, #40	; 0x28
 8011664:	a90b      	add	r1, sp, #44	; 0x2c
 8011666:	f7fe fba3 	bl	800fdb0 <udp_recv>
 801166a:	2800      	cmp	r0, #0
 801166c:	d05f      	beq.n	801172e <_parse_response+0xee>
 801166e:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
 8011672:	2b43      	cmp	r3, #67	; 0x43
 8011674:	d15b      	bne.n	801172e <_parse_response+0xee>
 8011676:	aa12      	add	r2, sp, #72	; 0x48
 8011678:	1e63      	subs	r3, r4, #1
 801167a:	1d61      	adds	r1, r4, #5
 801167c:	428b      	cmp	r3, r1
 801167e:	d150      	bne.n	8011722 <_parse_response+0xe2>
 8011680:	2100      	movs	r1, #0
 8011682:	ab0b      	add	r3, sp, #44	; 0x2c
 8011684:	181c      	adds	r4, r3, r0
 8011686:	4608      	mov	r0, r1
 8011688:	4b4b      	ldr	r3, [pc, #300]	; (80117b8 <_parse_response+0x178>)
 801168a:	e9cd 1104 	strd	r1, r1, [sp, #16]
 801168e:	781a      	ldrb	r2, [r3, #0]
 8011690:	f893 b001 	ldrb.w	fp, [r3, #1]
 8011694:	f893 c002 	ldrb.w	ip, [r3, #2]
 8011698:	78dd      	ldrb	r5, [r3, #3]
 801169a:	4b48      	ldr	r3, [pc, #288]	; (80117bc <_parse_response+0x17c>)
 801169c:	9207      	str	r2, [sp, #28]
 801169e:	781a      	ldrb	r2, [r3, #0]
 80116a0:	789f      	ldrb	r7, [r3, #2]
 80116a2:	78de      	ldrb	r6, [r3, #3]
 80116a4:	9206      	str	r2, [sp, #24]
 80116a6:	785a      	ldrb	r2, [r3, #1]
 80116a8:	4b45      	ldr	r3, [pc, #276]	; (80117c0 <_parse_response+0x180>)
 80116aa:	9203      	str	r2, [sp, #12]
 80116ac:	f893 a000 	ldrb.w	sl, [r3]
 80116b0:	f893 9001 	ldrb.w	r9, [r3, #1]
 80116b4:	f893 8002 	ldrb.w	r8, [r3, #2]
 80116b8:	f893 e003 	ldrb.w	lr, [r3, #3]
 80116bc:	ab47      	add	r3, sp, #284	; 0x11c
 80116be:	42a3      	cmp	r3, r4
 80116c0:	d33f      	bcc.n	8011742 <_parse_response+0x102>
 80116c2:	9b04      	ldr	r3, [sp, #16]
 80116c4:	b143      	cbz	r3, 80116d8 <_parse_response+0x98>
 80116c6:	4b3e      	ldr	r3, [pc, #248]	; (80117c0 <_parse_response+0x180>)
 80116c8:	f883 a000 	strb.w	sl, [r3]
 80116cc:	f883 9001 	strb.w	r9, [r3, #1]
 80116d0:	f883 8002 	strb.w	r8, [r3, #2]
 80116d4:	f883 e003 	strb.w	lr, [r3, #3]
 80116d8:	9b05      	ldr	r3, [sp, #20]
 80116da:	b133      	cbz	r3, 80116ea <_parse_response+0xaa>
 80116dc:	4b37      	ldr	r3, [pc, #220]	; (80117bc <_parse_response+0x17c>)
 80116de:	9a06      	ldr	r2, [sp, #24]
 80116e0:	709f      	strb	r7, [r3, #2]
 80116e2:	701a      	strb	r2, [r3, #0]
 80116e4:	9a03      	ldr	r2, [sp, #12]
 80116e6:	70de      	strb	r6, [r3, #3]
 80116e8:	705a      	strb	r2, [r3, #1]
 80116ea:	b139      	cbz	r1, 80116fc <_parse_response+0xbc>
 80116ec:	4b32      	ldr	r3, [pc, #200]	; (80117b8 <_parse_response+0x178>)
 80116ee:	9a07      	ldr	r2, [sp, #28]
 80116f0:	f883 b001 	strb.w	fp, [r3, #1]
 80116f4:	701a      	strb	r2, [r3, #0]
 80116f6:	f883 c002 	strb.w	ip, [r3, #2]
 80116fa:	70dd      	strb	r5, [r3, #3]
 80116fc:	2802      	cmp	r0, #2
 80116fe:	d10c      	bne.n	801171a <_parse_response+0xda>
 8011700:	4b30      	ldr	r3, [pc, #192]	; (80117c4 <_parse_response+0x184>)
 8011702:	f89d 203c 	ldrb.w	r2, [sp, #60]	; 0x3c
 8011706:	701a      	strb	r2, [r3, #0]
 8011708:	f89d 203d 	ldrb.w	r2, [sp, #61]	; 0x3d
 801170c:	705a      	strb	r2, [r3, #1]
 801170e:	f89d 203e 	ldrb.w	r2, [sp, #62]	; 0x3e
 8011712:	709a      	strb	r2, [r3, #2]
 8011714:	f89d 203f 	ldrb.w	r2, [sp, #63]	; 0x3f
 8011718:	70da      	strb	r2, [r3, #3]
 801171a:	f50d 7d15 	add.w	sp, sp, #596	; 0x254
 801171e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011722:	f812 cb01 	ldrb.w	ip, [r2], #1
 8011726:	f813 ef01 	ldrb.w	lr, [r3, #1]!
 801172a:	45e6      	cmp	lr, ip
 801172c:	d0a6      	beq.n	801167c <_parse_response+0x3c>
 801172e:	6833      	ldr	r3, [r6, #0]
 8011730:	1bdb      	subs	r3, r3, r7
 8011732:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 8011736:	d38b      	bcc.n	8011650 <_parse_response+0x10>
 8011738:	2800      	cmp	r0, #0
 801173a:	d1a1      	bne.n	8011680 <_parse_response+0x40>
 801173c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8011740:	e7eb      	b.n	801171a <_parse_response+0xda>
 8011742:	781a      	ldrb	r2, [r3, #0]
 8011744:	2a35      	cmp	r2, #53	; 0x35
 8011746:	d011      	beq.n	801176c <_parse_response+0x12c>
 8011748:	d808      	bhi.n	801175c <_parse_response+0x11c>
 801174a:	2a01      	cmp	r2, #1
 801174c:	d011      	beq.n	8011772 <_parse_response+0x132>
 801174e:	2a03      	cmp	r2, #3
 8011750:	d01a      	beq.n	8011788 <_parse_response+0x148>
 8011752:	b14a      	cbz	r2, 8011768 <_parse_response+0x128>
 8011754:	1c9a      	adds	r2, r3, #2
 8011756:	785b      	ldrb	r3, [r3, #1]
 8011758:	4413      	add	r3, r2
 801175a:	e7b0      	b.n	80116be <_parse_response+0x7e>
 801175c:	2a36      	cmp	r2, #54	; 0x36
 801175e:	d01f      	beq.n	80117a0 <_parse_response+0x160>
 8011760:	2aff      	cmp	r2, #255	; 0xff
 8011762:	d1f7      	bne.n	8011754 <_parse_response+0x114>
 8011764:	4623      	mov	r3, r4
 8011766:	e7aa      	b.n	80116be <_parse_response+0x7e>
 8011768:	3301      	adds	r3, #1
 801176a:	e7a8      	b.n	80116be <_parse_response+0x7e>
 801176c:	7898      	ldrb	r0, [r3, #2]
 801176e:	3303      	adds	r3, #3
 8011770:	e7a5      	b.n	80116be <_parse_response+0x7e>
 8011772:	f893 a002 	ldrb.w	sl, [r3, #2]
 8011776:	f893 9003 	ldrb.w	r9, [r3, #3]
 801177a:	f893 8004 	ldrb.w	r8, [r3, #4]
 801177e:	f893 e005 	ldrb.w	lr, [r3, #5]
 8011782:	9204      	str	r2, [sp, #16]
 8011784:	3306      	adds	r3, #6
 8011786:	e79a      	b.n	80116be <_parse_response+0x7e>
 8011788:	789a      	ldrb	r2, [r3, #2]
 801178a:	791f      	ldrb	r7, [r3, #4]
 801178c:	9206      	str	r2, [sp, #24]
 801178e:	78da      	ldrb	r2, [r3, #3]
 8011790:	795e      	ldrb	r6, [r3, #5]
 8011792:	9203      	str	r2, [sp, #12]
 8011794:	785a      	ldrb	r2, [r3, #1]
 8011796:	4413      	add	r3, r2
 8011798:	2201      	movs	r2, #1
 801179a:	3302      	adds	r3, #2
 801179c:	9205      	str	r2, [sp, #20]
 801179e:	e78e      	b.n	80116be <_parse_response+0x7e>
 80117a0:	789a      	ldrb	r2, [r3, #2]
 80117a2:	f893 b003 	ldrb.w	fp, [r3, #3]
 80117a6:	f893 c004 	ldrb.w	ip, [r3, #4]
 80117aa:	795d      	ldrb	r5, [r3, #5]
 80117ac:	2101      	movs	r1, #1
 80117ae:	9207      	str	r2, [sp, #28]
 80117b0:	3306      	adds	r3, #6
 80117b2:	e784      	b.n	80116be <_parse_response+0x7e>
 80117b4:	20013df4 	strdcs	r3, [r1], -r4
 80117b8:	20013b48 	andcs	r3, r1, r8, asr #22
 80117bc:	20013918 	andcs	r3, r1, r8, lsl r9
 80117c0:	20013920 	andcs	r3, r1, r0, lsr #18
 80117c4:	2001391c 	andcs	r3, r1, ip, lsl r9

080117c8 <memcpy.isra.0>:
 80117c8:	3801      	subs	r0, #1
 80117ca:	440a      	add	r2, r1
 80117cc:	4291      	cmp	r1, r2
 80117ce:	d100      	bne.n	80117d2 <memcpy.isra.0+0xa>
 80117d0:	4770      	bx	lr
 80117d2:	f811 3b01 	ldrb.w	r3, [r1], #1
 80117d6:	f800 3f01 	strb.w	r3, [r0, #1]!
 80117da:	e7f7      	b.n	80117cc <memcpy.isra.0+0x4>

080117dc <dhcp_client>:
 80117dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80117e0:	b087      	sub	sp, #28
 80117e2:	9203      	str	r2, [sp, #12]
 80117e4:	4a77      	ldr	r2, [pc, #476]	; (80119c4 <dhcp_client+0x1e8>)
 80117e6:	460f      	mov	r7, r1
 80117e8:	4605      	mov	r5, r0
 80117ea:	f44f 7309 	mov.w	r3, #548	; 0x224
 80117ee:	4614      	mov	r4, r2
 80117f0:	2100      	movs	r1, #0
 80117f2:	3b01      	subs	r3, #1
 80117f4:	f802 1b01 	strb.w	r1, [r2], #1
 80117f8:	d1fb      	bne.n	80117f2 <dhcp_client+0x16>
 80117fa:	f240 1301 	movw	r3, #257	; 0x101
 80117fe:	2206      	movs	r2, #6
 8011800:	4629      	mov	r1, r5
 8011802:	4871      	ldr	r0, [pc, #452]	; (80119c8 <dhcp_client+0x1ec>)
 8011804:	8023      	strh	r3, [r4, #0]
 8011806:	70a2      	strb	r2, [r4, #2]
 8011808:	f7ff ffde 	bl	80117c8 <memcpy.isra.0>
 801180c:	4b6f      	ldr	r3, [pc, #444]	; (80119cc <dhcp_client+0x1f0>)
 801180e:	2044      	movs	r0, #68	; 0x44
 8011810:	f8c4 30ec 	str.w	r3, [r4, #236]	; 0xec
 8011814:	f240 1335 	movw	r3, #309	; 0x135
 8011818:	f8a4 30f0 	strh.w	r3, [r4, #240]	; 0xf0
 801181c:	f7fe fa8e 	bl	800fd3c <udp_bind>
 8011820:	1e06      	subs	r6, r0, #0
 8011822:	f2c0 80c9 	blt.w	80119b8 <dhcp_client+0x1dc>
 8011826:	f04f 0915 	mov.w	r9, #21
 801182a:	f8df a198 	ldr.w	sl, [pc, #408]	; 80119c4 <dhcp_client+0x1e8>
 801182e:	f1b9 0901 	subs.w	r9, r9, #1
 8011832:	d11f      	bne.n	8011874 <dhcp_client+0x98>
 8011834:	464c      	mov	r4, r9
 8011836:	2044      	movs	r0, #68	; 0x44
 8011838:	f7fe fa9a 	bl	800fd70 <udp_unbind>
 801183c:	2c00      	cmp	r4, #0
 801183e:	f000 80be 	beq.w	80119be <dhcp_client+0x1e2>
 8011842:	2204      	movs	r2, #4
 8011844:	4962      	ldr	r1, [pc, #392]	; (80119d0 <dhcp_client+0x1f4>)
 8011846:	a805      	add	r0, sp, #20
 8011848:	f7ff ffbe 	bl	80117c8 <memcpy.isra.0>
 801184c:	9b05      	ldr	r3, [sp, #20]
 801184e:	2204      	movs	r2, #4
 8011850:	4960      	ldr	r1, [pc, #384]	; (80119d4 <dhcp_client+0x1f8>)
 8011852:	603b      	str	r3, [r7, #0]
 8011854:	a805      	add	r0, sp, #20
 8011856:	f7ff ffb7 	bl	80117c8 <memcpy.isra.0>
 801185a:	9b05      	ldr	r3, [sp, #20]
 801185c:	a805      	add	r0, sp, #20
 801185e:	60bb      	str	r3, [r7, #8]
 8011860:	2204      	movs	r2, #4
 8011862:	495d      	ldr	r1, [pc, #372]	; (80119d8 <dhcp_client+0x1fc>)
 8011864:	f7ff ffb0 	bl	80117c8 <memcpy.isra.0>
 8011868:	2000      	movs	r0, #0
 801186a:	9b05      	ldr	r3, [sp, #20]
 801186c:	607b      	str	r3, [r7, #4]
 801186e:	b007      	add	sp, #28
 8011870:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011874:	f643 5301 	movw	r3, #15617	; 0x3d01
 8011878:	f240 1807 	movw	r8, #263	; 0x107
 801187c:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 8011880:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 8011884:	782b      	ldrb	r3, [r5, #0]
 8011886:	4a55      	ldr	r2, [pc, #340]	; (80119dc <dhcp_client+0x200>)
 8011888:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 801188c:	786b      	ldrb	r3, [r5, #1]
 801188e:	fa5f fb86 	uxtb.w	fp, r6
 8011892:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 8011896:	78ab      	ldrb	r3, [r5, #2]
 8011898:	4651      	mov	r1, sl
 801189a:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 801189e:	78eb      	ldrb	r3, [r5, #3]
 80118a0:	4658      	mov	r0, fp
 80118a2:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 80118a6:	792b      	ldrb	r3, [r5, #4]
 80118a8:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 80118ac:	796b      	ldrb	r3, [r5, #5]
 80118ae:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 80118b2:	4b4b      	ldr	r3, [pc, #300]	; (80119e0 <dhcp_client+0x204>)
 80118b4:	e9c4 233f 	strd	r2, r3, [r4, #252]	; 0xfc
 80118b8:	23ff      	movs	r3, #255	; 0xff
 80118ba:	f884 3104 	strb.w	r3, [r4, #260]	; 0x104
 80118be:	2343      	movs	r3, #67	; 0x43
 80118c0:	f240 1205 	movw	r2, #261	; 0x105
 80118c4:	9300      	str	r3, [sp, #0]
 80118c6:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 80118ca:	f7fe facd 	bl	800fe68 <udp_send>
 80118ce:	4629      	mov	r1, r5
 80118d0:	4630      	mov	r0, r6
 80118d2:	f7ff feb5 	bl	8011640 <_parse_response>
 80118d6:	2802      	cmp	r0, #2
 80118d8:	d1a9      	bne.n	801182e <dhcp_client+0x52>
 80118da:	f643 5303 	movw	r3, #15619	; 0x3d03
 80118de:	f8a4 80f4 	strh.w	r8, [r4, #244]	; 0xf4
 80118e2:	f8a4 30f2 	strh.w	r3, [r4, #242]	; 0xf2
 80118e6:	782b      	ldrb	r3, [r5, #0]
 80118e8:	f8df c0f8 	ldr.w	ip, [pc, #248]	; 80119e4 <dhcp_client+0x208>
 80118ec:	f884 30f6 	strb.w	r3, [r4, #246]	; 0xf6
 80118f0:	786b      	ldrb	r3, [r5, #1]
 80118f2:	f884 30f7 	strb.w	r3, [r4, #247]	; 0xf7
 80118f6:	78ab      	ldrb	r3, [r5, #2]
 80118f8:	f884 30f8 	strb.w	r3, [r4, #248]	; 0xf8
 80118fc:	78eb      	ldrb	r3, [r5, #3]
 80118fe:	f884 30f9 	strb.w	r3, [r4, #249]	; 0xf9
 8011902:	792b      	ldrb	r3, [r5, #4]
 8011904:	f884 30fa 	strb.w	r3, [r4, #250]	; 0xfa
 8011908:	796b      	ldrb	r3, [r5, #5]
 801190a:	f884 30fb 	strb.w	r3, [r4, #251]	; 0xfb
 801190e:	f240 4332 	movw	r3, #1074	; 0x432
 8011912:	f8a4 30fc 	strh.w	r3, [r4, #252]	; 0xfc
 8011916:	4b2e      	ldr	r3, [pc, #184]	; (80119d0 <dhcp_client+0x1f4>)
 8011918:	881a      	ldrh	r2, [r3, #0]
 801191a:	885b      	ldrh	r3, [r3, #2]
 801191c:	f8a4 20fe 	strh.w	r2, [r4, #254]	; 0xfe
 8011920:	f8a4 3100 	strh.w	r3, [r4, #256]	; 0x100
 8011924:	f240 4336 	movw	r3, #1078	; 0x436
 8011928:	f8a4 3102 	strh.w	r3, [r4, #258]	; 0x102
 801192c:	4b2e      	ldr	r3, [pc, #184]	; (80119e8 <dhcp_client+0x20c>)
 801192e:	221e      	movs	r2, #30
 8011930:	681b      	ldr	r3, [r3, #0]
 8011932:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
 8011936:	230c      	movs	r3, #12
 8011938:	f8a4 3108 	strh.w	r3, [r4, #264]	; 0x108
 801193c:	9b03      	ldr	r3, [sp, #12]
 801193e:	1e58      	subs	r0, r3, #1
 8011940:	f810 3f01 	ldrb.w	r3, [r0, #1]!
 8011944:	f1a2 0e1e 	sub.w	lr, r2, #30
 8011948:	1c51      	adds	r1, r2, #1
 801194a:	bb8b      	cbnz	r3, 80119b0 <dhcp_client+0x1d4>
 801194c:	2037      	movs	r0, #55	; 0x37
 801194e:	18a3      	adds	r3, r4, r2
 8011950:	f883 00ec 	strb.w	r0, [r3, #236]	; 0xec
 8011954:	2006      	movs	r0, #6
 8011956:	4421      	add	r1, r4
 8011958:	f881 00ec 	strb.w	r0, [r1, #236]	; 0xec
 801195c:	2103      	movs	r1, #3
 801195e:	f883 10ef 	strb.w	r1, [r3, #239]	; 0xef
 8011962:	210f      	movs	r1, #15
 8011964:	f883 10f1 	strb.w	r1, [r3, #241]	; 0xf1
 8011968:	213a      	movs	r1, #58	; 0x3a
 801196a:	f883 10f2 	strb.w	r1, [r3, #242]	; 0xf2
 801196e:	213b      	movs	r1, #59	; 0x3b
 8011970:	f04f 0801 	mov.w	r8, #1
 8011974:	f883 10f3 	strb.w	r1, [r3, #243]	; 0xf3
 8011978:	21ff      	movs	r1, #255	; 0xff
 801197a:	f883 00f0 	strb.w	r0, [r3, #240]	; 0xf0
 801197e:	f883 10f4 	strb.w	r1, [r3, #244]	; 0xf4
 8011982:	f883 80ee 	strb.w	r8, [r3, #238]	; 0xee
 8011986:	2343      	movs	r3, #67	; 0x43
 8011988:	32f5      	adds	r2, #245	; 0xf5
 801198a:	f884 e109 	strb.w	lr, [r4, #265]	; 0x109
 801198e:	4651      	mov	r1, sl
 8011990:	9300      	str	r3, [sp, #0]
 8011992:	b292      	uxth	r2, r2
 8011994:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8011998:	4658      	mov	r0, fp
 801199a:	f7fe fa65 	bl	800fe68 <udp_send>
 801199e:	4629      	mov	r1, r5
 80119a0:	4630      	mov	r0, r6
 80119a2:	f7ff fe4d 	bl	8011640 <_parse_response>
 80119a6:	2805      	cmp	r0, #5
 80119a8:	f47f af41 	bne.w	801182e <dhcp_client+0x52>
 80119ac:	4644      	mov	r4, r8
 80119ae:	e742      	b.n	8011836 <dhcp_client+0x5a>
 80119b0:	460a      	mov	r2, r1
 80119b2:	f80c 3b01 	strb.w	r3, [ip], #1
 80119b6:	e7c3      	b.n	8011940 <dhcp_client+0x164>
 80119b8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80119bc:	e757      	b.n	801186e <dhcp_client+0x92>
 80119be:	f06f 0001 	mvn.w	r0, #1
 80119c2:	e754      	b.n	801186e <dhcp_client+0x92>
 80119c4:	20013924 	andcs	r3, r1, r4, lsr #18
 80119c8:	20013940 	andcs	r3, r1, r0, asr #18
 80119cc:	63538263 	cmpvs	r3, #805306374	; 0x30000006
 80119d0:	2001391c 	andcs	r3, r1, ip, lsl r9
 80119d4:	20013918 	andcs	r3, r1, r8, lsl r9
 80119d8:	20013920 	andcs	r3, r1, r0, lsr #18
 80119dc:	03010637 	movweq	r0, #5687	; 0x1637
 80119e0:	3b3a0f06 	blcc	8e95600 <__exidx_end+0xe7d654>
 80119e4:	20013a2e 	andcs	r3, r1, lr, lsr #20
 80119e8:	20013b48 	andcs	r3, r1, r8, asr #22

080119ec <dhcp_client_release>:
 80119ec:	b507      	push	{r0, r1, r2, lr}
 80119ee:	2044      	movs	r0, #68	; 0x44
 80119f0:	f7fe f9a4 	bl	800fd3c <udp_bind>
 80119f4:	f243 6307 	movw	r3, #13831	; 0x3607
 80119f8:	4911      	ldr	r1, [pc, #68]	; (8011a40 <dhcp_client_release+0x54>)
 80119fa:	b2c0      	uxtb	r0, r0
 80119fc:	f8a1 30f2 	strh.w	r3, [r1, #242]	; 0xf2
 8011a00:	2304      	movs	r3, #4
 8011a02:	f881 30f4 	strb.w	r3, [r1, #244]	; 0xf4
 8011a06:	4b0f      	ldr	r3, [pc, #60]	; (8011a44 <dhcp_client_release+0x58>)
 8011a08:	781a      	ldrb	r2, [r3, #0]
 8011a0a:	f881 20f5 	strb.w	r2, [r1, #245]	; 0xf5
 8011a0e:	785a      	ldrb	r2, [r3, #1]
 8011a10:	f881 20f6 	strb.w	r2, [r1, #246]	; 0xf6
 8011a14:	789a      	ldrb	r2, [r3, #2]
 8011a16:	78db      	ldrb	r3, [r3, #3]
 8011a18:	f881 20f7 	strb.w	r2, [r1, #247]	; 0xf7
 8011a1c:	f881 30f8 	strb.w	r3, [r1, #248]	; 0xf8
 8011a20:	23ff      	movs	r3, #255	; 0xff
 8011a22:	f881 30f9 	strb.w	r3, [r1, #249]	; 0xf9
 8011a26:	2343      	movs	r3, #67	; 0x43
 8011a28:	22fa      	movs	r2, #250	; 0xfa
 8011a2a:	9300      	str	r3, [sp, #0]
 8011a2c:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8011a30:	f7fe fa1a 	bl	800fe68 <udp_send>
 8011a34:	2044      	movs	r0, #68	; 0x44
 8011a36:	b003      	add	sp, #12
 8011a38:	f85d eb04 	ldr.w	lr, [sp], #4
 8011a3c:	f7fe b998 	b.w	800fd70 <udp_unbind>
 8011a40:	20013924 	andcs	r3, r1, r4, lsr #18
 8011a44:	20013b48 	andcs	r3, r1, r8, asr #22

08011a48 <memcpy.isra.0>:
 8011a48:	3801      	subs	r0, #1
 8011a4a:	440a      	add	r2, r1
 8011a4c:	4291      	cmp	r1, r2
 8011a4e:	d100      	bne.n	8011a52 <memcpy.isra.0+0xa>
 8011a50:	4770      	bx	lr
 8011a52:	f811 3b01 	ldrb.w	r3, [r1], #1
 8011a56:	f800 3f01 	strb.w	r3, [r0, #1]!
 8011a5a:	e7f7      	b.n	8011a4c <memcpy.isra.0+0x4>

08011a5c <_send_report>:
 8011a5c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8011a5e:	491c      	ldr	r1, [pc, #112]	; (8011ad0 <_send_report+0x74>)
 8011a60:	4c1c      	ldr	r4, [pc, #112]	; (8011ad4 <_send_report+0x78>)
 8011a62:	f3c0 2306 	ubfx	r3, r0, #8, #7
 8011a66:	9001      	str	r0, [sp, #4]
 8011a68:	70cb      	strb	r3, [r1, #3]
 8011a6a:	f3c0 4307 	ubfx	r3, r0, #16, #8
 8011a6e:	f3c0 6007 	ubfx	r0, r0, #24, #8
 8011a72:	710b      	strb	r3, [r1, #4]
 8011a74:	7148      	strb	r0, [r1, #5]
 8011a76:	2206      	movs	r2, #6
 8011a78:	4620      	mov	r0, r4
 8011a7a:	f7ff ffe5 	bl	8011a48 <memcpy.isra.0>
 8011a7e:	2204      	movs	r2, #4
 8011a80:	2700      	movs	r7, #0
 8011a82:	4d15      	ldr	r5, [pc, #84]	; (8011ad8 <_send_report+0x7c>)
 8011a84:	eb0d 0102 	add.w	r1, sp, r2
 8011a88:	882b      	ldrh	r3, [r5, #0]
 8011a8a:	f104 001e 	add.w	r0, r4, #30
 8011a8e:	f104 060e 	add.w	r6, r4, #14
 8011a92:	8263      	strh	r3, [r4, #18]
 8011a94:	f7ff ffd8 	bl	8011a48 <memcpy.isra.0>
 8011a98:	2118      	movs	r1, #24
 8011a9a:	4630      	mov	r0, r6
 8011a9c:	8327      	strh	r7, [r4, #24]
 8011a9e:	f000 f9b7 	bl	8011e10 <net_chksum>
 8011aa2:	2204      	movs	r2, #4
 8011aa4:	8320      	strh	r0, [r4, #24]
 8011aa6:	eb0d 0102 	add.w	r1, sp, r2
 8011aaa:	f104 002a 	add.w	r0, r4, #42	; 0x2a
 8011aae:	f7ff ffcb 	bl	8011a48 <memcpy.isra.0>
 8011ab2:	2120      	movs	r1, #32
 8011ab4:	4630      	mov	r0, r6
 8011ab6:	8527      	strh	r7, [r4, #40]	; 0x28
 8011ab8:	f000 f9aa 	bl	8011e10 <net_chksum>
 8011abc:	212e      	movs	r1, #46	; 0x2e
 8011abe:	8520      	strh	r0, [r4, #40]	; 0x28
 8011ac0:	4620      	mov	r0, r4
 8011ac2:	f002 feb5 	bl	8014830 <emac_eth_send>
 8011ac6:	882b      	ldrh	r3, [r5, #0]
 8011ac8:	3301      	adds	r3, #1
 8011aca:	802b      	strh	r3, [r5, #0]
 8011acc:	b003      	add	sp, #12
 8011ace:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011ad0:	20013ca4 	andcs	r3, r1, r4, lsr #25
 8011ad4:	20013cac 	andcs	r3, r1, ip, lsr #25
 8011ad8:	20013c6c 	andcs	r3, r1, ip, ror #24

08011adc <igmp_set_ip>:
 8011adc:	b507      	push	{r0, r1, r2, lr}
 8011ade:	2204      	movs	r2, #4
 8011ae0:	6803      	ldr	r3, [r0, #0]
 8011ae2:	eb0d 0102 	add.w	r1, sp, r2
 8011ae6:	4806      	ldr	r0, [pc, #24]	; (8011b00 <igmp_set_ip+0x24>)
 8011ae8:	9301      	str	r3, [sp, #4]
 8011aea:	f7ff ffad 	bl	8011a48 <memcpy.isra.0>
 8011aee:	2204      	movs	r2, #4
 8011af0:	4804      	ldr	r0, [pc, #16]	; (8011b04 <igmp_set_ip+0x28>)
 8011af2:	eb0d 0102 	add.w	r1, sp, r2
 8011af6:	f7ff ffa7 	bl	8011a48 <memcpy.isra.0>
 8011afa:	b003      	add	sp, #12
 8011afc:	f85d fb04 	ldr.w	pc, [sp], #4
 8011b00:	20013cc6 	andcs	r3, r1, r6, asr #25
 8011b04:	20013c8e 	andcs	r3, r1, lr, lsl #25

08011b08 <igmp_init>:
 8011b08:	2200      	movs	r2, #0
 8011b0a:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8011b0e:	4605      	mov	r5, r0
 8011b10:	4608      	mov	r0, r1
 8011b12:	4611      	mov	r1, r2
 8011b14:	4b23      	ldr	r3, [pc, #140]	; (8011ba4 <igmp_init+0x9c>)
 8011b16:	f103 0408 	add.w	r4, r3, #8
 8011b1a:	42a3      	cmp	r3, r4
 8011b1c:	d13e      	bne.n	8011b9c <igmp_init+0x94>
 8011b1e:	3201      	adds	r2, #1
 8011b20:	2a24      	cmp	r2, #36	; 0x24
 8011b22:	d1f8      	bne.n	8011b16 <igmp_init+0xe>
 8011b24:	2600      	movs	r6, #0
 8011b26:	4b20      	ldr	r3, [pc, #128]	; (8011ba8 <igmp_init+0xa0>)
 8011b28:	4c20      	ldr	r4, [pc, #128]	; (8011bac <igmp_init+0xa4>)
 8011b2a:	601e      	str	r6, [r3, #0]
 8011b2c:	4b20      	ldr	r3, [pc, #128]	; (8011bb0 <igmp_init+0xa8>)
 8011b2e:	f44f 5700 	mov.w	r7, #8192	; 0x2000
 8011b32:	801e      	strh	r6, [r3, #0]
 8011b34:	f7ff ffd2 	bl	8011adc <igmp_set_ip>
 8011b38:	2201      	movs	r2, #1
 8011b3a:	4b1e      	ldr	r3, [pc, #120]	; (8011bb4 <igmp_init+0xac>)
 8011b3c:	4629      	mov	r1, r5
 8011b3e:	801a      	strh	r2, [r3, #0]
 8011b40:	225e      	movs	r2, #94	; 0x5e
 8011b42:	709a      	strb	r2, [r3, #2]
 8011b44:	2206      	movs	r2, #6
 8011b46:	18a0      	adds	r0, r4, r2
 8011b48:	f7ff ff7e 	bl	8011a48 <memcpy.isra.0>
 8011b4c:	f240 4394 	movw	r3, #1172	; 0x494
 8011b50:	8463      	strh	r3, [r4, #34]	; 0x22
 8011b52:	2316      	movs	r3, #22
 8011b54:	f8df 9060 	ldr.w	r9, [pc, #96]	; 8011bb8 <igmp_init+0xb0>
 8011b58:	f8df 8060 	ldr.w	r8, [pc, #96]	; 8011bbc <igmp_init+0xb4>
 8011b5c:	84e3      	strh	r3, [r4, #38]	; 0x26
 8011b5e:	f8c4 9014 	str.w	r9, [r4, #20]
 8011b62:	4b17      	ldr	r3, [pc, #92]	; (8011bc0 <igmp_init+0xb8>)
 8011b64:	f8c4 800c 	str.w	r8, [r4, #12]
 8011b68:	8227      	strh	r7, [r4, #16]
 8011b6a:	84a6      	strh	r6, [r4, #36]	; 0x24
 8011b6c:	4c15      	ldr	r4, [pc, #84]	; (8011bc4 <igmp_init+0xbc>)
 8011b6e:	2206      	movs	r2, #6
 8011b70:	6023      	str	r3, [r4, #0]
 8011b72:	f44f 7300 	mov.w	r3, #512	; 0x200
 8011b76:	18a0      	adds	r0, r4, r2
 8011b78:	80a3      	strh	r3, [r4, #4]
 8011b7a:	4629      	mov	r1, r5
 8011b7c:	f7ff ff64 	bl	8011a48 <memcpy.isra.0>
 8011b80:	23e0      	movs	r3, #224	; 0xe0
 8011b82:	83e3      	strh	r3, [r4, #30]
 8011b84:	f44f 13b8 	mov.w	r3, #1507328	; 0x170000
 8011b88:	4a0f      	ldr	r2, [pc, #60]	; (8011bc8 <igmp_init+0xc0>)
 8011b8a:	f8c4 9014 	str.w	r9, [r4, #20]
 8011b8e:	e9c4 2308 	strd	r2, r3, [r4, #32]
 8011b92:	f8c4 800c 	str.w	r8, [r4, #12]
 8011b96:	8227      	strh	r7, [r4, #16]
 8011b98:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8011b9c:	f803 1b01 	strb.w	r1, [r3], #1
 8011ba0:	e7bb      	b.n	8011b1a <igmp_init+0x12>
 8011ba2:	bf00      	nop
 8011ba4:	20013b4c 	andcs	r3, r1, ip, asr #22
 8011ba8:	20013c70 	andcs	r3, r1, r0, ror ip
 8011bac:	20013cac 	andcs	r3, r1, ip, lsr #25
 8011bb0:	20013c6c 	andcs	r3, r1, ip, ror #24
 8011bb4:	20013ca4 	andcs	r3, r1, r4, lsr #25
 8011bb8:	02010040 	andeq	r0, r1, #64	; 0x40
 8011bbc:	00460008 	subeq	r0, r6, r8
 8011bc0:	005e0001 	subseq	r0, lr, r1
 8011bc4:	20013c74 	andcs	r3, r1, r4, ror ip
 8011bc8:	04940200 	ldreq	r0, [r4], #512	; 0x200

08011bcc <igmp_handle>:
 8011bcc:	7b83      	ldrb	r3, [r0, #14]
 8011bce:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8011bd2:	2b45      	cmp	r3, #69	; 0x45
 8011bd4:	d116      	bne.n	8011c04 <igmp_handle+0x38>
 8011bd6:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 8011bda:	2b11      	cmp	r3, #17
 8011bdc:	d112      	bne.n	8011c04 <igmp_handle+0x38>
 8011bde:	4b20      	ldr	r3, [pc, #128]	; (8011c60 <igmp_handle+0x94>)
 8011be0:	f100 051e 	add.w	r5, r0, #30
 8011be4:	9300      	str	r3, [sp, #0]
 8011be6:	466a      	mov	r2, sp
 8011be8:	462b      	mov	r3, r5
 8011bea:	f100 0622 	add.w	r6, r0, #34	; 0x22
 8011bee:	42b3      	cmp	r3, r6
 8011bf0:	d10b      	bne.n	8011c0a <igmp_handle+0x3e>
 8011bf2:	2401      	movs	r4, #1
 8011bf4:	2100      	movs	r1, #0
 8011bf6:	f04f 0c01 	mov.w	ip, #1
 8011bfa:	4b1a      	ldr	r3, [pc, #104]	; (8011c64 <igmp_handle+0x98>)
 8011bfc:	4a1a      	ldr	r2, [pc, #104]	; (8011c68 <igmp_handle+0x9c>)
 8011bfe:	681f      	ldr	r7, [r3, #0]
 8011c00:	428f      	cmp	r7, r1
 8011c02:	d10a      	bne.n	8011c1a <igmp_handle+0x4e>
 8011c04:	b003      	add	sp, #12
 8011c06:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011c0a:	f813 4b01 	ldrb.w	r4, [r3], #1
 8011c0e:	f812 1b01 	ldrb.w	r1, [r2], #1
 8011c12:	428c      	cmp	r4, r1
 8011c14:	d0eb      	beq.n	8011bee <igmp_handle+0x22>
 8011c16:	2400      	movs	r4, #0
 8011c18:	e7ec      	b.n	8011bf4 <igmp_handle+0x28>
 8011c1a:	6813      	ldr	r3, [r2, #0]
 8011c1c:	9301      	str	r3, [sp, #4]
 8011c1e:	b924      	cbnz	r4, 8011c2a <igmp_handle+0x5e>
 8011c20:	462b      	mov	r3, r5
 8011c22:	f10d 0e04 	add.w	lr, sp, #4
 8011c26:	42b3      	cmp	r3, r6
 8011c28:	d10e      	bne.n	8011c48 <igmp_handle+0x7c>
 8011c2a:	f892 e005 	ldrb.w	lr, [r2, #5]
 8011c2e:	f890 3023 	ldrb.w	r3, [r0, #35]	; 0x23
 8011c32:	f1be 0f01 	cmp.w	lr, #1
 8011c36:	d110      	bne.n	8011c5a <igmp_handle+0x8e>
 8011c38:	f892 e004 	ldrb.w	lr, [r2, #4]
 8011c3c:	459e      	cmp	lr, r3
 8011c3e:	d909      	bls.n	8011c54 <igmp_handle+0x88>
 8011c40:	085b      	lsrs	r3, r3, #1
 8011c42:	3301      	adds	r3, #1
 8011c44:	7113      	strb	r3, [r2, #4]
 8011c46:	e005      	b.n	8011c54 <igmp_handle+0x88>
 8011c48:	f813 9b01 	ldrb.w	r9, [r3], #1
 8011c4c:	f81e 8b01 	ldrb.w	r8, [lr], #1
 8011c50:	45c1      	cmp	r9, r8
 8011c52:	d0e8      	beq.n	8011c26 <igmp_handle+0x5a>
 8011c54:	3101      	adds	r1, #1
 8011c56:	3208      	adds	r2, #8
 8011c58:	e7d2      	b.n	8011c00 <igmp_handle+0x34>
 8011c5a:	f882 c005 	strb.w	ip, [r2, #5]
 8011c5e:	e7ef      	b.n	8011c40 <igmp_handle+0x74>
 8011c60:	010000e0 	smlatteq	r0, r0, r0, r0
 8011c64:	20013c70 	andcs	r3, r1, r0, ror ip
 8011c68:	20013b4c 	andcs	r3, r1, ip, asr #22

08011c6c <igmp_timer>:
 8011c6c:	b570      	push	{r4, r5, r6, lr}
 8011c6e:	2500      	movs	r5, #0
 8011c70:	2602      	movs	r6, #2
 8011c72:	4c0a      	ldr	r4, [pc, #40]	; (8011c9c <igmp_timer+0x30>)
 8011c74:	7963      	ldrb	r3, [r4, #5]
 8011c76:	2b01      	cmp	r3, #1
 8011c78:	d109      	bne.n	8011c8e <igmp_timer+0x22>
 8011c7a:	7923      	ldrb	r3, [r4, #4]
 8011c7c:	b13b      	cbz	r3, 8011c8e <igmp_timer+0x22>
 8011c7e:	3b01      	subs	r3, #1
 8011c80:	b2db      	uxtb	r3, r3
 8011c82:	7123      	strb	r3, [r4, #4]
 8011c84:	b91b      	cbnz	r3, 8011c8e <igmp_timer+0x22>
 8011c86:	6820      	ldr	r0, [r4, #0]
 8011c88:	f7ff fee8 	bl	8011a5c <_send_report>
 8011c8c:	7166      	strb	r6, [r4, #5]
 8011c8e:	3501      	adds	r5, #1
 8011c90:	2d24      	cmp	r5, #36	; 0x24
 8011c92:	f104 0408 	add.w	r4, r4, #8
 8011c96:	d1ed      	bne.n	8011c74 <igmp_timer+0x8>
 8011c98:	bd70      	pop	{r4, r5, r6, pc}
 8011c9a:	bf00      	nop
 8011c9c:	20013b4c 	andcs	r3, r1, ip, asr #22

08011ca0 <igmp_join>:
 8011ca0:	b538      	push	{r3, r4, r5, lr}
 8011ca2:	f000 03e0 	and.w	r3, r0, #224	; 0xe0
 8011ca6:	2be0      	cmp	r3, #224	; 0xe0
 8011ca8:	d11b      	bne.n	8011ce2 <igmp_join+0x42>
 8011caa:	4911      	ldr	r1, [pc, #68]	; (8011cf0 <igmp_join+0x50>)
 8011cac:	680c      	ldr	r4, [r1, #0]
 8011cae:	2c24      	cmp	r4, #36	; 0x24
 8011cb0:	d01a      	beq.n	8011ce8 <igmp_join+0x48>
 8011cb2:	2300      	movs	r3, #0
 8011cb4:	4a0f      	ldr	r2, [pc, #60]	; (8011cf4 <igmp_join+0x54>)
 8011cb6:	429c      	cmp	r4, r3
 8011cb8:	dc0d      	bgt.n	8011cd6 <igmp_join+0x36>
 8011cba:	f44f 7381 	mov.w	r3, #258	; 0x102
 8011cbe:	f842 0034 	str.w	r0, [r2, r4, lsl #3]
 8011cc2:	eb02 02c4 	add.w	r2, r2, r4, lsl #3
 8011cc6:	8093      	strh	r3, [r2, #4]
 8011cc8:	1c63      	adds	r3, r4, #1
 8011cca:	600b      	str	r3, [r1, #0]
 8011ccc:	f7ff fec6 	bl	8011a5c <_send_report>
 8011cd0:	4623      	mov	r3, r4
 8011cd2:	4618      	mov	r0, r3
 8011cd4:	bd38      	pop	{r3, r4, r5, pc}
 8011cd6:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 8011cda:	4285      	cmp	r5, r0
 8011cdc:	d0f9      	beq.n	8011cd2 <igmp_join+0x32>
 8011cde:	3301      	adds	r3, #1
 8011ce0:	e7e9      	b.n	8011cb6 <igmp_join+0x16>
 8011ce2:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8011ce6:	e7f4      	b.n	8011cd2 <igmp_join+0x32>
 8011ce8:	f06f 0301 	mvn.w	r3, #1
 8011cec:	e7f1      	b.n	8011cd2 <igmp_join+0x32>
 8011cee:	bf00      	nop
 8011cf0:	20013c70 	andcs	r3, r1, r0, ror ip
 8011cf4:	20013b4c 	andcs	r3, r1, ip, asr #22

08011cf8 <igmp_leave>:
 8011cf8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8011cfc:	2600      	movs	r6, #0
 8011cfe:	4f1c      	ldr	r7, [pc, #112]	; (8011d70 <igmp_leave+0x78>)
 8011d00:	f857 3036 	ldr.w	r3, [r7, r6, lsl #3]
 8011d04:	4283      	cmp	r3, r0
 8011d06:	d007      	beq.n	8011d18 <igmp_leave+0x20>
 8011d08:	3601      	adds	r6, #1
 8011d0a:	2e24      	cmp	r6, #36	; 0x24
 8011d0c:	d1f8      	bne.n	8011d00 <igmp_leave+0x8>
 8011d0e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8011d12:	b002      	add	sp, #8
 8011d14:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011d18:	2400      	movs	r4, #0
 8011d1a:	f8df 8058 	ldr.w	r8, [pc, #88]	; 8011d74 <igmp_leave+0x7c>
 8011d1e:	4d16      	ldr	r5, [pc, #88]	; (8011d78 <igmp_leave+0x80>)
 8011d20:	f8b8 3000 	ldrh.w	r3, [r8]
 8011d24:	2118      	movs	r1, #24
 8011d26:	9001      	str	r0, [sp, #4]
 8011d28:	4814      	ldr	r0, [pc, #80]	; (8011d7c <igmp_leave+0x84>)
 8011d2a:	826b      	strh	r3, [r5, #18]
 8011d2c:	832c      	strh	r4, [r5, #24]
 8011d2e:	f000 f86f 	bl	8011e10 <net_chksum>
 8011d32:	2204      	movs	r2, #4
 8011d34:	8328      	strh	r0, [r5, #24]
 8011d36:	eb0d 0102 	add.w	r1, sp, r2
 8011d3a:	f105 002a 	add.w	r0, r5, #42	; 0x2a
 8011d3e:	f7ff fe83 	bl	8011a48 <memcpy.isra.0>
 8011d42:	2120      	movs	r1, #32
 8011d44:	f105 000e 	add.w	r0, r5, #14
 8011d48:	852c      	strh	r4, [r5, #40]	; 0x28
 8011d4a:	f000 f861 	bl	8011e10 <net_chksum>
 8011d4e:	212e      	movs	r1, #46	; 0x2e
 8011d50:	8528      	strh	r0, [r5, #40]	; 0x28
 8011d52:	4628      	mov	r0, r5
 8011d54:	f002 fd6c 	bl	8014830 <emac_eth_send>
 8011d58:	f8b8 3000 	ldrh.w	r3, [r8]
 8011d5c:	f847 4036 	str.w	r4, [r7, r6, lsl #3]
 8011d60:	3301      	adds	r3, #1
 8011d62:	eb07 06c6 	add.w	r6, r7, r6, lsl #3
 8011d66:	4620      	mov	r0, r4
 8011d68:	f8a8 3000 	strh.w	r3, [r8]
 8011d6c:	80b4      	strh	r4, [r6, #4]
 8011d6e:	e7d0      	b.n	8011d12 <igmp_leave+0x1a>
 8011d70:	20013b4c 	andcs	r3, r1, ip, asr #22
 8011d74:	20013c6c 	andcs	r3, r1, ip, ror #24
 8011d78:	20013c74 	andcs	r3, r1, r4, ror ip
 8011d7c:	20013cba 			; <UNDEFINED> instruction: 0x20013cba

08011d80 <igmp_shutdown>:
 8011d80:	b570      	push	{r4, r5, r6, lr}
 8011d82:	2500      	movs	r5, #0
 8011d84:	462e      	mov	r6, r5
 8011d86:	4c07      	ldr	r4, [pc, #28]	; (8011da4 <igmp_shutdown+0x24>)
 8011d88:	6820      	ldr	r0, [r4, #0]
 8011d8a:	b120      	cbz	r0, 8011d96 <igmp_shutdown+0x16>
 8011d8c:	f7ff ffb4 	bl	8011cf8 <igmp_leave>
 8011d90:	6026      	str	r6, [r4, #0]
 8011d92:	7166      	strb	r6, [r4, #5]
 8011d94:	7126      	strb	r6, [r4, #4]
 8011d96:	3501      	adds	r5, #1
 8011d98:	2d24      	cmp	r5, #36	; 0x24
 8011d9a:	f104 0408 	add.w	r4, r4, #8
 8011d9e:	d1f3      	bne.n	8011d88 <igmp_shutdown+0x8>
 8011da0:	bd70      	pop	{r4, r5, r6, pc}
 8011da2:	bf00      	nop
 8011da4:	20013b4c 	andcs	r3, r1, ip, asr #22

08011da8 <ip_set_ip>:
 8011da8:	b510      	push	{r4, lr}
 8011daa:	4604      	mov	r4, r0
 8011dac:	f7fd ff1e 	bl	800fbec <udp_set_ip>
 8011db0:	4620      	mov	r0, r4
 8011db2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011db6:	f7ff be91 	b.w	8011adc <igmp_set_ip>

08011dba <ip_init>:
 8011dba:	b538      	push	{r3, r4, r5, lr}
 8011dbc:	4604      	mov	r4, r0
 8011dbe:	460d      	mov	r5, r1
 8011dc0:	f7fd ff34 	bl	800fc2c <udp_init>
 8011dc4:	4629      	mov	r1, r5
 8011dc6:	4620      	mov	r0, r4
 8011dc8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8011dcc:	f7ff be9c 	b.w	8011b08 <igmp_init>

08011dd0 <ip_shutdown>:
 8011dd0:	b508      	push	{r3, lr}
 8011dd2:	f7ff ffd5 	bl	8011d80 <igmp_shutdown>
 8011dd6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8011dda:	f7fd bf59 	b.w	800fc90 <udp_shutdown>

08011dde <ip_handle>:
 8011dde:	7b82      	ldrb	r2, [r0, #14]
 8011de0:	7dc3      	ldrb	r3, [r0, #23]
 8011de2:	2a45      	cmp	r2, #69	; 0x45
 8011de4:	d003      	beq.n	8011dee <ip_handle+0x10>
 8011de6:	2b02      	cmp	r3, #2
 8011de8:	d111      	bne.n	8011e0e <ip_handle+0x30>
 8011dea:	f7ff beef 	b.w	8011bcc <igmp_handle>
 8011dee:	2b06      	cmp	r3, #6
 8011df0:	d00b      	beq.n	8011e0a <ip_handle+0x2c>
 8011df2:	d804      	bhi.n	8011dfe <ip_handle+0x20>
 8011df4:	2b01      	cmp	r3, #1
 8011df6:	d006      	beq.n	8011e06 <ip_handle+0x28>
 8011df8:	2b02      	cmp	r3, #2
 8011dfa:	d0f6      	beq.n	8011dea <ip_handle+0xc>
 8011dfc:	4770      	bx	lr
 8011dfe:	2b11      	cmp	r3, #17
 8011e00:	d105      	bne.n	8011e0e <ip_handle+0x30>
 8011e02:	f7fd bf47 	b.w	800fc94 <udp_handle>
 8011e06:	f000 b82b 	b.w	8011e60 <icmp_handle>
 8011e0a:	f7fd bc93 	b.w	800f734 <tcp_handle>
 8011e0e:	4770      	bx	lr

08011e10 <net_chksum>:
 8011e10:	2300      	movs	r3, #0
 8011e12:	f021 0201 	bic.w	r2, r1, #1
 8011e16:	b530      	push	{r4, r5, lr}
 8011e18:	4402      	add	r2, r0
 8011e1a:	084c      	lsrs	r4, r1, #1
 8011e1c:	4290      	cmp	r0, r2
 8011e1e:	d10e      	bne.n	8011e3e <net_chksum+0x2e>
 8011e20:	f06f 0201 	mvn.w	r2, #1
 8011e24:	fb02 1104 	mla	r1, r2, r4, r1
 8011e28:	b121      	cbz	r1, 8011e34 <net_chksum+0x24>
 8011e2a:	7802      	ldrb	r2, [r0, #0]
 8011e2c:	0212      	lsls	r2, r2, #8
 8011e2e:	ba52      	rev16	r2, r2
 8011e30:	b292      	uxth	r2, r2
 8011e32:	4413      	add	r3, r2
 8011e34:	0c1a      	lsrs	r2, r3, #16
 8011e36:	d106      	bne.n	8011e46 <net_chksum+0x36>
 8011e38:	43d8      	mvns	r0, r3
 8011e3a:	b280      	uxth	r0, r0
 8011e3c:	bd30      	pop	{r4, r5, pc}
 8011e3e:	f830 5b02 	ldrh.w	r5, [r0], #2
 8011e42:	442b      	add	r3, r5
 8011e44:	e7ea      	b.n	8011e1c <net_chksum+0xc>
 8011e46:	b29b      	uxth	r3, r3
 8011e48:	e7f3      	b.n	8011e32 <net_chksum+0x22>

08011e4a <memcpy.isra.0>:
 8011e4a:	3801      	subs	r0, #1
 8011e4c:	440a      	add	r2, r1
 8011e4e:	4291      	cmp	r1, r2
 8011e50:	d100      	bne.n	8011e54 <memcpy.isra.0+0xa>
 8011e52:	4770      	bx	lr
 8011e54:	f811 3b01 	ldrb.w	r3, [r1], #1
 8011e58:	f800 3f01 	strb.w	r3, [r0, #1]!
 8011e5c:	e7f7      	b.n	8011e4e <memcpy.isra.0+0x4>
	...

08011e60 <icmp_handle>:
 8011e60:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8011e62:	f890 3022 	ldrb.w	r3, [r0, #34]	; 0x22
 8011e66:	4604      	mov	r4, r0
 8011e68:	2b08      	cmp	r3, #8
 8011e6a:	d13e      	bne.n	8011eea <icmp_handle+0x8a>
 8011e6c:	f890 5023 	ldrb.w	r5, [r0, #35]	; 0x23
 8011e70:	2d00      	cmp	r5, #0
 8011e72:	d13a      	bne.n	8011eea <icmp_handle+0x8a>
 8011e74:	1d86      	adds	r6, r0, #6
 8011e76:	4631      	mov	r1, r6
 8011e78:	2206      	movs	r2, #6
 8011e7a:	f7ff ffe6 	bl	8011e4a <memcpy.isra.0>
 8011e7e:	4630      	mov	r0, r6
 8011e80:	2206      	movs	r2, #6
 8011e82:	491b      	ldr	r1, [pc, #108]	; (8011ef0 <icmp_handle+0x90>)
 8011e84:	f7ff ffe1 	bl	8011e4a <memcpy.isra.0>
 8011e88:	8a63      	ldrh	r3, [r4, #18]
 8011e8a:	f104 061a 	add.w	r6, r4, #26
 8011e8e:	43db      	mvns	r3, r3
 8011e90:	4631      	mov	r1, r6
 8011e92:	2204      	movs	r2, #4
 8011e94:	8263      	strh	r3, [r4, #18]
 8011e96:	f104 001e 	add.w	r0, r4, #30
 8011e9a:	f7ff ffd6 	bl	8011e4a <memcpy.isra.0>
 8011e9e:	2204      	movs	r2, #4
 8011ea0:	4b14      	ldr	r3, [pc, #80]	; (8011ef4 <icmp_handle+0x94>)
 8011ea2:	eb0d 0102 	add.w	r1, sp, r2
 8011ea6:	681b      	ldr	r3, [r3, #0]
 8011ea8:	4630      	mov	r0, r6
 8011eaa:	f104 060e 	add.w	r6, r4, #14
 8011eae:	9301      	str	r3, [sp, #4]
 8011eb0:	f7ff ffcb 	bl	8011e4a <memcpy.isra.0>
 8011eb4:	2114      	movs	r1, #20
 8011eb6:	4630      	mov	r0, r6
 8011eb8:	7625      	strb	r5, [r4, #24]
 8011eba:	7665      	strb	r5, [r4, #25]
 8011ebc:	f7ff ffa8 	bl	8011e10 <net_chksum>
 8011ec0:	8a21      	ldrh	r1, [r4, #16]
 8011ec2:	8320      	strh	r0, [r4, #24]
 8011ec4:	ba49      	rev16	r1, r1
 8011ec6:	b289      	uxth	r1, r1
 8011ec8:	4630      	mov	r0, r6
 8011eca:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8011ece:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8011ed2:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 8011ed6:	f7ff ff9b 	bl	8011e10 <net_chksum>
 8011eda:	8a21      	ldrh	r1, [r4, #16]
 8011edc:	84a0      	strh	r0, [r4, #36]	; 0x24
 8011ede:	ba49      	rev16	r1, r1
 8011ee0:	b289      	uxth	r1, r1
 8011ee2:	4620      	mov	r0, r4
 8011ee4:	310e      	adds	r1, #14
 8011ee6:	f002 fca3 	bl	8014830 <emac_eth_send>
 8011eea:	b002      	add	sp, #8
 8011eec:	bd70      	pop	{r4, r5, r6, pc}
 8011eee:	bf00      	nop
 8011ef0:	2000bdf0 	strdcs	fp, [r0], -r0
 8011ef4:	2000bde4 	andcs	fp, r0, r4, ror #27

08011ef8 <Display::Write(unsigned char, char const*) [clone .isra.0]>:
 8011ef8:	b430      	push	{r4, r5}
 8011efa:	b168      	cbz	r0, 8011f18 <Display::Write(unsigned char, char const*) [clone .isra.0]+0x20>
 8011efc:	2300      	movs	r3, #0
 8011efe:	7905      	ldrb	r5, [r0, #4]
 8011f00:	5cd4      	ldrb	r4, [r2, r3]
 8011f02:	b11c      	cbz	r4, 8011f0c <Display::Write(unsigned char, char const*) [clone .isra.0]+0x14>
 8011f04:	1c5c      	adds	r4, r3, #1
 8011f06:	429d      	cmp	r5, r3
 8011f08:	4623      	mov	r3, r4
 8011f0a:	dcf9      	bgt.n	8011f00 <Display::Write(unsigned char, char const*) [clone .isra.0]+0x8>
 8011f0c:	6804      	ldr	r4, [r0, #0]
 8011f0e:	b2db      	uxtb	r3, r3
 8011f10:	69e4      	ldr	r4, [r4, #28]
 8011f12:	46a4      	mov	ip, r4
 8011f14:	bc30      	pop	{r4, r5}
 8011f16:	4760      	bx	ip
 8011f18:	bc30      	pop	{r4, r5}
 8011f1a:	4770      	bx	lr

08011f1c <Display::ClearLine(unsigned char) [clone .isra.0]>:
 8011f1c:	b110      	cbz	r0, 8011f24 <Display::ClearLine(unsigned char) [clone .isra.0]+0x8>
 8011f1e:	6803      	ldr	r3, [r0, #0]
 8011f20:	691b      	ldr	r3, [r3, #16]
 8011f22:	4718      	bx	r3
 8011f24:	4770      	bx	lr

08011f26 <Display::Status(Display7SegmentMessage)>:
 8011f26:	7c43      	ldrb	r3, [r0, #17]
 8011f28:	b513      	push	{r0, r1, r4, lr}
 8011f2a:	4604      	mov	r4, r0
 8011f2c:	b19b      	cbz	r3, 8011f56 <Display::Status(Display7SegmentMessage)+0x30>
 8011f2e:	43c9      	mvns	r1, r1
 8011f30:	2312      	movs	r3, #18
 8011f32:	7a00      	ldrb	r0, [r0, #8]
 8011f34:	f88d 3004 	strb.w	r3, [sp, #4]
 8011f38:	f3c1 2307 	ubfx	r3, r1, #8, #8
 8011f3c:	f88d 1006 	strb.w	r1, [sp, #6]
 8011f40:	f88d 3005 	strb.w	r3, [sp, #5]
 8011f44:	f002 fd0c 	bl	8014960 <gd32_i2c_set_address(unsigned char)>
 8011f48:	68e0      	ldr	r0, [r4, #12]
 8011f4a:	f002 fd01 	bl	8014950 <gd32_i2c_set_baudrate(unsigned int)>
 8011f4e:	2103      	movs	r1, #3
 8011f50:	a801      	add	r0, sp, #4
 8011f52:	f002 fd0b 	bl	801496c <gd32_i2c_write(char const*, unsigned int)>
 8011f56:	b002      	add	sp, #8
 8011f58:	bd10      	pop	{r4, pc}
	...

08011f5c <DisplayUdf::DisplayUdf()>:
 8011f5c:	b510      	push	{r4, lr}
 8011f5e:	4604      	mov	r4, r0
 8011f60:	f000 feea 	bl	8012d38 <Display::Display()>
 8011f64:	2202      	movs	r2, #2
 8011f66:	2300      	movs	r3, #0
 8011f68:	e9c4 2314 	strd	r2, r3, [r4, #80]	; 0x50
 8011f6c:	4b05      	ldr	r3, [pc, #20]	; (8011f84 <DisplayUdf::DisplayUdf()+0x28>)
 8011f6e:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 8011f72:	601c      	str	r4, [r3, #0]
 8011f74:	2301      	movs	r3, #1
 8011f76:	f802 3b01 	strb.w	r3, [r2], #1
 8011f7a:	3301      	adds	r3, #1
 8011f7c:	2b15      	cmp	r3, #21
 8011f7e:	d1fa      	bne.n	8011f76 <DisplayUdf::DisplayUdf()+0x1a>
 8011f80:	4620      	mov	r0, r4
 8011f82:	bd10      	pop	{r4, pc}
 8011f84:	20013cdc 	ldrdcs	r3, [r1], -ip

08011f88 <DisplayUdf::SetTitle(char const*, ...)>:
 8011f88:	b40e      	push	{r1, r2, r3}
 8011f8a:	b517      	push	{r0, r1, r2, r4, lr}
 8011f8c:	ab05      	add	r3, sp, #20
 8011f8e:	f853 2b04 	ldr.w	r2, [r3], #4
 8011f92:	4604      	mov	r4, r0
 8011f94:	211f      	movs	r1, #31
 8011f96:	301c      	adds	r0, #28
 8011f98:	9301      	str	r3, [sp, #4]
 8011f9a:	f7f6 ffc7 	bl	8008f2c <vsnprintf>
 8011f9e:	2300      	movs	r3, #0
 8011fa0:	4404      	add	r4, r0
 8011fa2:	7723      	strb	r3, [r4, #28]
 8011fa4:	b003      	add	sp, #12
 8011fa6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011faa:	b003      	add	sp, #12
 8011fac:	4770      	bx	lr
	...

08011fb0 <DisplayUdf::ShowEmacStart()>:
 8011fb0:	b510      	push	{r4, lr}
 8011fb2:	4604      	mov	r4, r0
 8011fb4:	f890 103e 	ldrb.w	r1, [r0, #62]	; 0x3e
 8011fb8:	6980      	ldr	r0, [r0, #24]
 8011fba:	f7ff ffaf 	bl	8011f1c <Display::ClearLine(unsigned char) [clone .isra.0]>
 8011fbe:	4620      	mov	r0, r4
 8011fc0:	4a02      	ldr	r2, [pc, #8]	; (8011fcc <DisplayUdf::ShowEmacStart()+0x1c>)
 8011fc2:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 8011fc6:	f7f6 f87d 	bl	80080c4 <Display::Printf(unsigned char, char const*, ...)>
 8011fca:	bd10      	pop	{r4, pc}
 8011fcc:	080177e1 	stmdaeq	r1, {r0, r5, r6, r7, r8, r9, sl, ip, sp, lr}

08011fd0 <DisplayUdf::ShowIpAddress()>:
 8011fd0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011fd4:	4604      	mov	r4, r0
 8011fd6:	f890 103e 	ldrb.w	r1, [r0, #62]	; 0x3e
 8011fda:	b086      	sub	sp, #24
 8011fdc:	6980      	ldr	r0, [r0, #24]
 8011fde:	f7ff ff9d 	bl	8011f1c <Display::ClearLine(unsigned char) [clone .isra.0]>
 8011fe2:	4b13      	ldr	r3, [pc, #76]	; (8012030 <DisplayUdf::ShowIpAddress()+0x60>)
 8011fe4:	f894 703e 	ldrb.w	r7, [r4, #62]	; 0x3e
 8011fe8:	681d      	ldr	r5, [r3, #0]
 8011fea:	69a8      	ldr	r0, [r5, #24]
 8011fec:	692e      	ldr	r6, [r5, #16]
 8011fee:	f7f5 ff65 	bl	8007ebc <__popcountsi2>
 8011ff2:	78eb      	ldrb	r3, [r5, #3]
 8011ff4:	fa5f f886 	uxtb.w	r8, r6
 8011ff8:	f3c6 2907 	ubfx	r9, r6, #8, #8
 8011ffc:	f3c6 4a07 	ubfx	sl, r6, #16, #8
 8012000:	0e36      	lsrs	r6, r6, #24
 8012002:	b99b      	cbnz	r3, 801202c <DisplayUdf::ShowIpAddress()+0x5c>
 8012004:	786b      	ldrb	r3, [r5, #1]
 8012006:	2b00      	cmp	r3, #0
 8012008:	bf14      	ite	ne
 801200a:	2244      	movne	r2, #68	; 0x44
 801200c:	2253      	moveq	r2, #83	; 0x53
 801200e:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8012012:	4643      	mov	r3, r8
 8012014:	4639      	mov	r1, r7
 8012016:	4620      	mov	r0, r4
 8012018:	e9cd a601 	strd	sl, r6, [sp, #4]
 801201c:	4a05      	ldr	r2, [pc, #20]	; (8012034 <DisplayUdf::ShowIpAddress()+0x64>)
 801201e:	f8cd 9000 	str.w	r9, [sp]
 8012022:	f7f6 f84f 	bl	80080c4 <Display::Printf(unsigned char, char const*, ...)>
 8012026:	b006      	add	sp, #24
 8012028:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801202c:	225a      	movs	r2, #90	; 0x5a
 801202e:	e7ee      	b.n	801200e <DisplayUdf::ShowIpAddress()+0x3e>
 8012030:	200136ac 	andcs	r3, r1, ip, lsr #13
 8012034:	080177f0 	stmdaeq	r1, {r4, r5, r6, r7, r8, r9, sl, ip, sp, lr}

08012038 <DisplayUdf::ShowNetmask()>:
 8012038:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801203a:	4604      	mov	r4, r0
 801203c:	4b0b      	ldr	r3, [pc, #44]	; (801206c <DisplayUdf::ShowNetmask()+0x34>)
 801203e:	681b      	ldr	r3, [r3, #0]
 8012040:	699b      	ldr	r3, [r3, #24]
 8012042:	0e1a      	lsrs	r2, r3, #24
 8012044:	9202      	str	r2, [sp, #8]
 8012046:	f3c3 4207 	ubfx	r2, r3, #16, #8
 801204a:	9201      	str	r2, [sp, #4]
 801204c:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8012050:	9200      	str	r2, [sp, #0]
 8012052:	f890 1048 	ldrb.w	r1, [r0, #72]	; 0x48
 8012056:	4a06      	ldr	r2, [pc, #24]	; (8012070 <DisplayUdf::ShowNetmask()+0x38>)
 8012058:	b2db      	uxtb	r3, r3
 801205a:	f7f6 f833 	bl	80080c4 <Display::Printf(unsigned char, char const*, ...)>
 801205e:	4620      	mov	r0, r4
 8012060:	b004      	add	sp, #16
 8012062:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012066:	f7ff bfb3 	b.w	8011fd0 <DisplayUdf::ShowIpAddress()>
 801206a:	bf00      	nop
 801206c:	200136ac 	andcs	r3, r1, ip, lsr #13
 8012070:	08017802 	stmdaeq	r1, {r1, fp, ip, sp, lr}

08012074 <DisplayUdf::ShowGatewayIp()>:
 8012074:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8012076:	4604      	mov	r4, r0
 8012078:	f890 104e 	ldrb.w	r1, [r0, #78]	; 0x4e
 801207c:	6980      	ldr	r0, [r0, #24]
 801207e:	f7ff ff4d 	bl	8011f1c <Display::ClearLine(unsigned char) [clone .isra.0]>
 8012082:	4b0a      	ldr	r3, [pc, #40]	; (80120ac <DisplayUdf::ShowGatewayIp()+0x38>)
 8012084:	4620      	mov	r0, r4
 8012086:	681b      	ldr	r3, [r3, #0]
 8012088:	f894 104e 	ldrb.w	r1, [r4, #78]	; 0x4e
 801208c:	695b      	ldr	r3, [r3, #20]
 801208e:	0e1a      	lsrs	r2, r3, #24
 8012090:	9202      	str	r2, [sp, #8]
 8012092:	f3c3 4207 	ubfx	r2, r3, #16, #8
 8012096:	9201      	str	r2, [sp, #4]
 8012098:	f3c3 2207 	ubfx	r2, r3, #8, #8
 801209c:	9200      	str	r2, [sp, #0]
 801209e:	b2db      	uxtb	r3, r3
 80120a0:	4a03      	ldr	r2, [pc, #12]	; (80120b0 <DisplayUdf::ShowGatewayIp()+0x3c>)
 80120a2:	f7f6 f80f 	bl	80080c4 <Display::Printf(unsigned char, char const*, ...)>
 80120a6:	b004      	add	sp, #16
 80120a8:	bd10      	pop	{r4, pc}
 80120aa:	bf00      	nop
 80120ac:	200136ac 	andcs	r3, r1, ip, lsr #13
 80120b0:	08017811 	stmdaeq	r1, {r0, r4, fp, ip, sp, lr}

080120b4 <DisplayUdf::ShowHostName()>:
 80120b4:	b510      	push	{r4, lr}
 80120b6:	4604      	mov	r4, r0
 80120b8:	f890 1043 	ldrb.w	r1, [r0, #67]	; 0x43
 80120bc:	6980      	ldr	r0, [r0, #24]
 80120be:	f7ff ff2d 	bl	8011f1c <Display::ClearLine(unsigned char) [clone .isra.0]>
 80120c2:	4b05      	ldr	r3, [pc, #20]	; (80120d8 <DisplayUdf::ShowHostName()+0x24>)
 80120c4:	f894 1043 	ldrb.w	r1, [r4, #67]	; 0x43
 80120c8:	681a      	ldr	r2, [r3, #0]
 80120ca:	69a0      	ldr	r0, [r4, #24]
 80120cc:	321c      	adds	r2, #28
 80120ce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80120d2:	f7ff bf11 	b.w	8011ef8 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 80120d6:	bf00      	nop
 80120d8:	200136ac 	andcs	r3, r1, ip, lsr #13

080120dc <DisplayUdf::Show()>:
 80120dc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80120de:	4604      	mov	r4, r0
 80120e0:	21ff      	movs	r1, #255	; 0xff
 80120e2:	f100 033c 	add.w	r3, r0, #60	; 0x3c
 80120e6:	f100 0250 	add.w	r2, r0, #80	; 0x50
 80120ea:	f813 0b01 	ldrb.w	r0, [r3], #1
 80120ee:	2806      	cmp	r0, #6
 80120f0:	bf88      	it	hi
 80120f2:	f803 1c01 	strbhi.w	r1, [r3, #-1]
 80120f6:	429a      	cmp	r2, r3
 80120f8:	d1f7      	bne.n	80120ea <DisplayUdf::Show()+0xe>
 80120fa:	2501      	movs	r5, #1
 80120fc:	4629      	mov	r1, r5
 80120fe:	3501      	adds	r5, #1
 8012100:	69a0      	ldr	r0, [r4, #24]
 8012102:	b2ed      	uxtb	r5, r5
 8012104:	f7ff ff0a 	bl	8011f1c <Display::ClearLine(unsigned char) [clone .isra.0]>
 8012108:	2d06      	cmp	r5, #6
 801210a:	d1f7      	bne.n	80120fc <DisplayUdf::Show()+0x20>
 801210c:	f894 103c 	ldrb.w	r1, [r4, #60]	; 0x3c
 8012110:	69a0      	ldr	r0, [r4, #24]
 8012112:	f104 021c 	add.w	r2, r4, #28
 8012116:	f7ff feef 	bl	8011ef8 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 801211a:	f894 103d 	ldrb.w	r1, [r4, #61]	; 0x3d
 801211e:	69a0      	ldr	r0, [r4, #24]
 8012120:	4a0d      	ldr	r2, [pc, #52]	; (8012158 <DisplayUdf::Show()+0x7c>)
 8012122:	f7ff fee9 	bl	8011ef8 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 8012126:	4b0d      	ldr	r3, [pc, #52]	; (801215c <DisplayUdf::Show()+0x80>)
 8012128:	4a0d      	ldr	r2, [pc, #52]	; (8012160 <DisplayUdf::Show()+0x84>)
 801212a:	f894 103f 	ldrb.w	r1, [r4, #63]	; 0x3f
 801212e:	9300      	str	r3, [sp, #0]
 8012130:	4620      	mov	r0, r4
 8012132:	2303      	movs	r3, #3
 8012134:	f7f5 ffc6 	bl	80080c4 <Display::Printf(unsigned char, char const*, ...)>
 8012138:	4620      	mov	r0, r4
 801213a:	f7ff ff49 	bl	8011fd0 <DisplayUdf::ShowIpAddress()>
 801213e:	4620      	mov	r0, r4
 8012140:	f7ff ff98 	bl	8012074 <DisplayUdf::ShowGatewayIp()>
 8012144:	4620      	mov	r0, r4
 8012146:	f7ff ff77 	bl	8012038 <DisplayUdf::ShowNetmask()>
 801214a:	4620      	mov	r0, r4
 801214c:	b003      	add	sp, #12
 801214e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8012152:	f7ff bfaf 	b.w	80120b4 <DisplayUdf::ShowHostName()>
 8012156:	bf00      	nop
 8012158:	08016118 	stmdaeq	r1, {r3, r4, r8, sp, lr}
 801215c:	20013d74 	andcs	r3, r1, r4, ror sp
 8012160:	08017820 	stmdaeq	r1, {r5, fp, ip, sp, lr}

08012164 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)>:
 8012164:	3901      	subs	r1, #1
 8012166:	b510      	push	{r4, lr}
 8012168:	4604      	mov	r4, r0
 801216a:	2903      	cmp	r1, #3
 801216c:	d814      	bhi.n	8012198 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x34>
 801216e:	e8df f001 	tbb	[pc, r1]
 8012172:	281b1402 	ldmdacs	fp, {r1, sl, ip}
 8012176:	4b14      	ldr	r3, [pc, #80]	; (80121c8 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 8012178:	f44f 41b6 	mov.w	r1, #23296	; 0x5b00
 801217c:	6818      	ldr	r0, [r3, #0]
 801217e:	f7ff fed2 	bl	8011f26 <Display::Status(Display7SegmentMessage)>
 8012182:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 8012186:	69a0      	ldr	r0, [r4, #24]
 8012188:	f7ff fec8 	bl	8011f1c <Display::ClearLine(unsigned char) [clone .isra.0]>
 801218c:	4a0f      	ldr	r2, [pc, #60]	; (80121cc <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x68>)
 801218e:	4620      	mov	r0, r4
 8012190:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 8012194:	f7f5 ff96 	bl	80080c4 <Display::Printf(unsigned char, char const*, ...)>
 8012198:	bd10      	pop	{r4, pc}
 801219a:	f248 0180 	movw	r1, #32896	; 0x8080
 801219e:	4b0a      	ldr	r3, [pc, #40]	; (80121c8 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 80121a0:	6818      	ldr	r0, [r3, #0]
 80121a2:	f7ff fec0 	bl	8011f26 <Display::Status(Display7SegmentMessage)>
 80121a6:	e7f7      	b.n	8012198 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x34>
 80121a8:	4b07      	ldr	r3, [pc, #28]	; (80121c8 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x64>)
 80121aa:	f44f 41b6 	mov.w	r1, #23296	; 0x5b00
 80121ae:	6818      	ldr	r0, [r3, #0]
 80121b0:	f7ff feb9 	bl	8011f26 <Display::Status(Display7SegmentMessage)>
 80121b4:	f894 103e 	ldrb.w	r1, [r4, #62]	; 0x3e
 80121b8:	69a0      	ldr	r0, [r4, #24]
 80121ba:	f7ff feaf 	bl	8011f1c <Display::ClearLine(unsigned char) [clone .isra.0]>
 80121be:	4a04      	ldr	r2, [pc, #16]	; (80121d0 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x6c>)
 80121c0:	e7e5      	b.n	801218e <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x2a>
 80121c2:	f645 3179 	movw	r1, #23417	; 0x5b79
 80121c6:	e7ea      	b.n	801219e <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)+0x3a>
 80121c8:	20013ce4 	andcs	r3, r1, r4, ror #25
 80121cc:	0801782f 	stmdaeq	r1, {r0, r1, r2, r3, r5, fp, ip, sp, lr}
 80121d0:	0801783d 	stmdaeq	r1, {r0, r2, r3, r4, r5, fp, ip, sp, lr}

080121d4 <DisplayUdf::ShowShutdown()>:
 80121d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80121d8:	4604      	mov	r4, r0
 80121da:	6980      	ldr	r0, [r0, #24]
 80121dc:	b308      	cbz	r0, 8012222 <DisplayUdf::ShowShutdown()+0x4e>
 80121de:	f890 8005 	ldrb.w	r8, [r0, #5]
 80121e2:	6803      	ldr	r3, [r0, #0]
 80121e4:	f108 35ff 	add.w	r5, r8, #4294967295	; 0xffffffff
 80121e8:	b2ed      	uxtb	r5, r5
 80121ea:	462a      	mov	r2, r5
 80121ec:	2100      	movs	r1, #0
 80121ee:	6a1b      	ldr	r3, [r3, #32]
 80121f0:	7907      	ldrb	r7, [r0, #4]
 80121f2:	2600      	movs	r6, #0
 80121f4:	4798      	blx	r3
 80121f6:	3f01      	subs	r7, #1
 80121f8:	42b7      	cmp	r7, r6
 80121fa:	69a0      	ldr	r0, [r4, #24]
 80121fc:	d906      	bls.n	801220c <DisplayUdf::ShowShutdown()+0x38>
 80121fe:	b118      	cbz	r0, 8012208 <DisplayUdf::ShowShutdown()+0x34>
 8012200:	6803      	ldr	r3, [r0, #0]
 8012202:	2120      	movs	r1, #32
 8012204:	695b      	ldr	r3, [r3, #20]
 8012206:	4798      	blx	r3
 8012208:	3601      	adds	r6, #1
 801220a:	e7f5      	b.n	80121f8 <DisplayUdf::ShowShutdown()+0x24>
 801220c:	b120      	cbz	r0, 8012218 <DisplayUdf::ShowShutdown()+0x44>
 801220e:	6803      	ldr	r3, [r0, #0]
 8012210:	462a      	mov	r2, r5
 8012212:	2100      	movs	r1, #0
 8012214:	6a1b      	ldr	r3, [r3, #32]
 8012216:	4798      	blx	r3
 8012218:	4641      	mov	r1, r8
 801221a:	4a05      	ldr	r2, [pc, #20]	; (8012230 <DisplayUdf::ShowShutdown()+0x5c>)
 801221c:	69a0      	ldr	r0, [r4, #24]
 801221e:	f7ff fe6b 	bl	8011ef8 <Display::Write(unsigned char, char const*) [clone .isra.0]>
 8012222:	f44f 41de 	mov.w	r1, #28416	; 0x6f00
 8012226:	4620      	mov	r0, r4
 8012228:	f7ff fe7d 	bl	8011f26 <Display::Status(Display7SegmentMessage)>
 801222c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012230:	0801784b 	stmdaeq	r1, {r0, r1, r3, r6, fp, ip, sp, lr}

08012234 <DisplayUdf::Set(unsigned char, displayudf::Labels)>:
 8012234:	1e4b      	subs	r3, r1, #1
 8012236:	2b05      	cmp	r3, #5
 8012238:	b530      	push	{r4, r5, lr}
 801223a:	d80f      	bhi.n	801225c <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x28>
 801223c:	2300      	movs	r3, #0
 801223e:	f100 043c 	add.w	r4, r0, #60	; 0x3c
 8012242:	f814 5b01 	ldrb.w	r5, [r4], #1
 8012246:	428d      	cmp	r5, r1
 8012248:	d109      	bne.n	801225e <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x2a>
 801224a:	1884      	adds	r4, r0, r2
 801224c:	f894 403c 	ldrb.w	r4, [r4, #60]	; 0x3c
 8012250:	4403      	add	r3, r0
 8012252:	f883 403c 	strb.w	r4, [r3, #60]	; 0x3c
 8012256:	4410      	add	r0, r2
 8012258:	f880 103c 	strb.w	r1, [r0, #60]	; 0x3c
 801225c:	bd30      	pop	{r4, r5, pc}
 801225e:	3301      	adds	r3, #1
 8012260:	2b14      	cmp	r3, #20
 8012262:	d1ee      	bne.n	8012242 <DisplayUdf::Set(unsigned char, displayudf::Labels)+0xe>
 8012264:	e7f7      	b.n	8012256 <DisplayUdf::Set(unsigned char, displayudf::Labels)+0x22>
	...

08012268 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>:
 8012268:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801226a:	88c5      	ldrh	r5, [r0, #6]
 801226c:	8886      	ldrh	r6, [r0, #4]
 801226e:	42b5      	cmp	r5, r6
 8012270:	d216      	bcs.n	80122a0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x38>
 8012272:	4604      	mov	r4, r0
 8012274:	6800      	ldr	r0, [r0, #0]
 8012276:	4428      	add	r0, r5
 8012278:	1b75      	subs	r5, r6, r5
 801227a:	7a26      	ldrb	r6, [r4, #8]
 801227c:	b923      	cbnz	r3, 8012288 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x20>
 801227e:	b926      	cbnz	r6, 801228a <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x22>
 8012280:	9200      	str	r2, [sp, #0]
 8012282:	460b      	mov	r3, r1
 8012284:	4a09      	ldr	r2, [pc, #36]	; (80122ac <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x44>)
 8012286:	e003      	b.n	8012290 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 8012288:	b166      	cbz	r6, 80122a4 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x3c>
 801228a:	460b      	mov	r3, r1
 801228c:	9200      	str	r2, [sp, #0]
 801228e:	4a08      	ldr	r2, [pc, #32]	; (80122b0 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x48>)
 8012290:	4629      	mov	r1, r5
 8012292:	f7f6 fe33 	bl	8008efc <snprintf>
 8012296:	4285      	cmp	r5, r0
 8012298:	bfa2      	ittt	ge
 801229a:	88e3      	ldrhge	r3, [r4, #6]
 801229c:	181b      	addge	r3, r3, r0
 801229e:	80e3      	strhge	r3, [r4, #6]
 80122a0:	b002      	add	sp, #8
 80122a2:	bd70      	pop	{r4, r5, r6, pc}
 80122a4:	9200      	str	r2, [sp, #0]
 80122a6:	460b      	mov	r3, r1
 80122a8:	4a02      	ldr	r2, [pc, #8]	; (80122b4 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x4c>)
 80122aa:	e7f1      	b.n	8012290 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]+0x28>
 80122ac:	08015dbd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r7, r8, sl, fp, ip, lr}
 80122b0:	08015db4 	stmdaeq	r1, {r2, r4, r5, r7, r8, sl, fp, ip, lr}
 80122b4:	08015dbe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r7, r8, sl, fp, ip, lr}

080122b8 <DisplayUdfParams::DisplayUdfParams(DisplayUdfParamsStore*)>:
 80122b8:	b510      	push	{r4, lr}
 80122ba:	2220      	movs	r2, #32
 80122bc:	4604      	mov	r4, r0
 80122be:	f840 1b04 	str.w	r1, [r0], #4
 80122c2:	2100      	movs	r1, #0
 80122c4:	f001 fa7e 	bl	80137c4 <memset>
 80122c8:	f647 7305 	movw	r3, #32517	; 0x7f05
 80122cc:	4620      	mov	r0, r4
 80122ce:	84a3      	strh	r3, [r4, #36]	; 0x24
 80122d0:	bd10      	pop	{r4, pc}

080122d2 <DisplayUdfParams::Load()>:
 80122d2:	b508      	push	{r3, lr}
 80122d4:	2300      	movs	r3, #0
 80122d6:	4601      	mov	r1, r0
 80122d8:	6043      	str	r3, [r0, #4]
 80122da:	6800      	ldr	r0, [r0, #0]
 80122dc:	b120      	cbz	r0, 80122e8 <DisplayUdfParams::Load()+0x16>
 80122de:	6803      	ldr	r3, [r0, #0]
 80122e0:	3104      	adds	r1, #4
 80122e2:	68db      	ldr	r3, [r3, #12]
 80122e4:	4798      	blx	r3
 80122e6:	2001      	movs	r0, #1
 80122e8:	bd08      	pop	{r3, pc}
	...

080122ec <DisplayUdfParams::Load(char const*, unsigned int)>:
 80122ec:	6803      	ldr	r3, [r0, #0]
 80122ee:	b1d3      	cbz	r3, 8012326 <DisplayUdfParams::Load(char const*, unsigned int)+0x3a>
 80122f0:	2300      	movs	r3, #0
 80122f2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80122f4:	460d      	mov	r5, r1
 80122f6:	4616      	mov	r6, r2
 80122f8:	4604      	mov	r4, r0
 80122fa:	6043      	str	r3, [r0, #4]
 80122fc:	4602      	mov	r2, r0
 80122fe:	490a      	ldr	r1, [pc, #40]	; (8012328 <DisplayUdfParams::Load(char const*, unsigned int)+0x3c>)
 8012300:	4668      	mov	r0, sp
 8012302:	f000 fb25 	bl	8012950 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>
 8012306:	4632      	mov	r2, r6
 8012308:	4629      	mov	r1, r5
 801230a:	4668      	mov	r0, sp
 801230c:	f000 fb24 	bl	8012958 <ReadConfigFile::Read(char const*, unsigned int)>
 8012310:	4621      	mov	r1, r4
 8012312:	f851 0b04 	ldr.w	r0, [r1], #4
 8012316:	6803      	ldr	r3, [r0, #0]
 8012318:	689b      	ldr	r3, [r3, #8]
 801231a:	4798      	blx	r3
 801231c:	4668      	mov	r0, sp
 801231e:	f000 fb1a 	bl	8012956 <ReadConfigFile::~ReadConfigFile()>
 8012322:	b002      	add	sp, #8
 8012324:	bd70      	pop	{r4, r5, r6, pc}
 8012326:	4770      	bx	lr
 8012328:	080123f1 	stmdaeq	r1, {r0, r4, r5, r6, r7, r8, r9, sp}

0801232c <DisplayUdfParams::callbackFunction(char const*)>:
 801232c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801232e:	460e      	mov	r6, r1
 8012330:	4604      	mov	r4, r0
 8012332:	492b      	ldr	r1, [pc, #172]	; (80123e0 <DisplayUdfParams::callbackFunction(char const*)+0xb4>)
 8012334:	4630      	mov	r0, r6
 8012336:	f10d 0207 	add.w	r2, sp, #7
 801233a:	f000 fc44 	bl	8012bc6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 801233e:	b968      	cbnz	r0, 801235c <DisplayUdfParams::callbackFunction(char const*)+0x30>
 8012340:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8012344:	6863      	ldr	r3, [r4, #4]
 8012346:	2a7f      	cmp	r2, #127	; 0x7f
 8012348:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
 801234c:	bf14      	ite	ne
 801234e:	f043 5300 	orrne.w	r3, r3, #536870912	; 0x20000000
 8012352:	f023 5300 	biceq.w	r3, r3, #536870912	; 0x20000000
 8012356:	6063      	str	r3, [r4, #4]
 8012358:	b003      	add	sp, #12
 801235a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801235c:	4630      	mov	r0, r6
 801235e:	4921      	ldr	r1, [pc, #132]	; (80123e4 <DisplayUdfParams::callbackFunction(char const*)+0xb8>)
 8012360:	f10d 0207 	add.w	r2, sp, #7
 8012364:	f000 fc2f 	bl	8012bc6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 8012368:	b958      	cbnz	r0, 8012382 <DisplayUdfParams::callbackFunction(char const*)+0x56>
 801236a:	f89d 2007 	ldrb.w	r2, [sp, #7]
 801236e:	6863      	ldr	r3, [r4, #4]
 8012370:	2a05      	cmp	r2, #5
 8012372:	f884 2024 	strb.w	r2, [r4, #36]	; 0x24
 8012376:	bf14      	ite	ne
 8012378:	f043 5380 	orrne.w	r3, r3, #268435456	; 0x10000000
 801237c:	f023 5380 	biceq.w	r3, r3, #268435456	; 0x10000000
 8012380:	e7e9      	b.n	8012356 <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 8012382:	4630      	mov	r0, r6
 8012384:	4918      	ldr	r1, [pc, #96]	; (80123e8 <DisplayUdfParams::callbackFunction(char const*)+0xbc>)
 8012386:	f10d 0207 	add.w	r2, sp, #7
 801238a:	f000 fc1c 	bl	8012bc6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 801238e:	b948      	cbnz	r0, 80123a4 <DisplayUdfParams::callbackFunction(char const*)+0x78>
 8012390:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8012394:	6863      	ldr	r3, [r4, #4]
 8012396:	b112      	cbz	r2, 801239e <DisplayUdfParams::callbackFunction(char const*)+0x72>
 8012398:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 801239c:	e7db      	b.n	8012356 <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 801239e:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 80123a2:	e7d8      	b.n	8012356 <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 80123a4:	2500      	movs	r5, #0
 80123a6:	4f11      	ldr	r7, [pc, #68]	; (80123ec <DisplayUdfParams::callbackFunction(char const*)+0xc0>)
 80123a8:	4630      	mov	r0, r6
 80123aa:	f857 1b04 	ldr.w	r1, [r7], #4
 80123ae:	f10d 0207 	add.w	r2, sp, #7
 80123b2:	f000 fc08 	bl	8012bc6 <Sscan::Uint8(char const*, char const*, unsigned char&)>
 80123b6:	b978      	cbnz	r0, 80123d8 <DisplayUdfParams::callbackFunction(char const*)+0xac>
 80123b8:	2301      	movs	r3, #1
 80123ba:	f89d 1007 	ldrb.w	r1, [sp, #7]
 80123be:	6862      	ldr	r2, [r4, #4]
 80123c0:	1e4e      	subs	r6, r1, #1
 80123c2:	2e05      	cmp	r6, #5
 80123c4:	fa03 f305 	lsl.w	r3, r3, r5
 80123c8:	4425      	add	r5, r4
 80123ca:	bf99      	ittee	ls
 80123cc:	7229      	strbls	r1, [r5, #8]
 80123ce:	4313      	orrls	r3, r2
 80123d0:	7228      	strbhi	r0, [r5, #8]
 80123d2:	ea22 0303 	bichi.w	r3, r2, r3
 80123d6:	e7be      	b.n	8012356 <DisplayUdfParams::callbackFunction(char const*)+0x2a>
 80123d8:	3501      	adds	r5, #1
 80123da:	2d14      	cmp	r5, #20
 80123dc:	d1e4      	bne.n	80123a8 <DisplayUdfParams::callbackFunction(char const*)+0x7c>
 80123de:	e7bb      	b.n	8012358 <DisplayUdfParams::callbackFunction(char const*)+0x2c>
 80123e0:	0801790a 	stmdaeq	r1, {r1, r3, r8, fp, ip, sp, lr}
 80123e4:	080178d2 	stmdaeq	r1, {r1, r4, r6, r7, fp, ip, sp, lr}
 80123e8:	080178e0 	stmdaeq	r1, {r5, r6, r7, fp, ip, sp, lr}
 80123ec:	0801785c 	stmdaeq	r1, {r2, r3, r4, r6, fp, ip, sp, lr}

080123f0 <DisplayUdfParams::staticCallbackFunction(void*, char const*)>:
 80123f0:	f7ff bf9c 	b.w	801232c <DisplayUdfParams::callbackFunction(char const*)>

080123f4 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)>:
 80123f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80123f8:	4604      	mov	r4, r0
 80123fa:	4615      	mov	r5, r2
 80123fc:	461e      	mov	r6, r3
 80123fe:	b086      	sub	sp, #24
 8012400:	3004      	adds	r0, #4
 8012402:	b379      	cbz	r1, 8012464 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x70>
 8012404:	2222      	movs	r2, #34	; 0x22
 8012406:	f001 f9c6 	bl	8013796 <memmove>
 801240a:	462a      	mov	r2, r5
 801240c:	4633      	mov	r3, r6
 801240e:	493d      	ldr	r1, [pc, #244]	; (8012504 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x110>)
 8012410:	a803      	add	r0, sp, #12
 8012412:	f000 f9fd 	bl	8012810 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>
 8012416:	6863      	ldr	r3, [r4, #4]
 8012418:	f894 2025 	ldrb.w	r2, [r4, #37]	; 0x25
 801241c:	493a      	ldr	r1, [pc, #232]	; (8012508 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x114>)
 801241e:	f3c3 7340 	ubfx	r3, r3, #29, #1
 8012422:	a803      	add	r0, sp, #12
 8012424:	f7ff ff20 	bl	8012268 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 8012428:	6863      	ldr	r3, [r4, #4]
 801242a:	4938      	ldr	r1, [pc, #224]	; (801250c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x118>)
 801242c:	f894 2024 	ldrb.w	r2, [r4, #36]	; 0x24
 8012430:	f3c3 7300 	ubfx	r3, r3, #28, #1
 8012434:	a803      	add	r0, sp, #12
 8012436:	f7ff ff17 	bl	8012268 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 801243a:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 801243e:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8012442:	42a9      	cmp	r1, r5
 8012444:	d227      	bcs.n	8012496 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xa2>
 8012446:	6863      	ldr	r3, [r4, #4]
 8012448:	9803      	ldr	r0, [sp, #12]
 801244a:	f013 4380 	ands.w	r3, r3, #1073741824	; 0x40000000
 801244e:	f89d 2014 	ldrb.w	r2, [sp, #20]
 8012452:	4408      	add	r0, r1
 8012454:	eba5 0501 	sub.w	r5, r5, r1
 8012458:	d10b      	bne.n	8012472 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x7e>
 801245a:	b962      	cbnz	r2, 8012476 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x82>
 801245c:	9200      	str	r2, [sp, #0]
 801245e:	4b2c      	ldr	r3, [pc, #176]	; (8012510 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>)
 8012460:	4a2c      	ldr	r2, [pc, #176]	; (8012514 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x120>)
 8012462:	e00e      	b.n	8012482 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x8e>
 8012464:	6823      	ldr	r3, [r4, #0]
 8012466:	4601      	mov	r1, r0
 8012468:	681a      	ldr	r2, [r3, #0]
 801246a:	4618      	mov	r0, r3
 801246c:	68d2      	ldr	r2, [r2, #12]
 801246e:	4790      	blx	r2
 8012470:	e7cb      	b.n	801240a <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x16>
 8012472:	2a00      	cmp	r2, #0
 8012474:	d041      	beq.n	80124fa <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x106>
 8012476:	3b00      	subs	r3, #0
 8012478:	bf18      	it	ne
 801247a:	2301      	movne	r3, #1
 801247c:	4a26      	ldr	r2, [pc, #152]	; (8012518 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x124>)
 801247e:	9300      	str	r3, [sp, #0]
 8012480:	4b23      	ldr	r3, [pc, #140]	; (8012510 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>)
 8012482:	4629      	mov	r1, r5
 8012484:	f7f6 fd3a 	bl	8008efc <snprintf>
 8012488:	4285      	cmp	r5, r0
 801248a:	bfa2      	ittt	ge
 801248c:	f8bd 3012 	ldrhge.w	r3, [sp, #18]
 8012490:	181b      	addge	r3, r3, r0
 8012492:	f8ad 3012 	strhge.w	r3, [sp, #18]
 8012496:	2500      	movs	r5, #0
 8012498:	2701      	movs	r7, #1
 801249a:	4e20      	ldr	r6, [pc, #128]	; (801251c <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x128>)
 801249c:	f104 0808 	add.w	r8, r4, #8
 80124a0:	f856 1b04 	ldr.w	r1, [r6], #4
 80124a4:	780b      	ldrb	r3, [r1, #0]
 80124a6:	b15b      	cbz	r3, 80124c0 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xcc>
 80124a8:	6862      	ldr	r2, [r4, #4]
 80124aa:	fa07 f305 	lsl.w	r3, r7, r5
 80124ae:	4393      	bics	r3, r2
 80124b0:	bf0c      	ite	eq
 80124b2:	2301      	moveq	r3, #1
 80124b4:	2300      	movne	r3, #0
 80124b6:	f818 2005 	ldrb.w	r2, [r8, r5]
 80124ba:	a803      	add	r0, sp, #12
 80124bc:	f7ff fed4 	bl	8012268 <bool PropertiesBuilder::Add<unsigned char>(char const*, unsigned char, bool, unsigned int) [clone .isra.0]>
 80124c0:	3501      	adds	r5, #1
 80124c2:	2d14      	cmp	r5, #20
 80124c4:	d1ec      	bne.n	80124a0 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xac>
 80124c6:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80124ca:	b17b      	cbz	r3, 80124ec <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0xf8>
 80124cc:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80124d0:	9b03      	ldr	r3, [sp, #12]
 80124d2:	4413      	add	r3, r2
 80124d4:	227d      	movs	r2, #125	; 0x7d
 80124d6:	f803 2c01 	strb.w	r2, [r3, #-1]
 80124da:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80124de:	9903      	ldr	r1, [sp, #12]
 80124e0:	54ca      	strb	r2, [r1, r3]
 80124e2:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80124e6:	3301      	adds	r3, #1
 80124e8:	f8ad 3012 	strh.w	r3, [sp, #18]
 80124ec:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80124f0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80124f2:	601a      	str	r2, [r3, #0]
 80124f4:	b006      	add	sp, #24
 80124f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80124fa:	2301      	movs	r3, #1
 80124fc:	4a08      	ldr	r2, [pc, #32]	; (8012520 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x12c>)
 80124fe:	9300      	str	r3, [sp, #0]
 8012500:	4b03      	ldr	r3, [pc, #12]	; (8012510 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x11c>)
 8012502:	e7be      	b.n	8012482 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)+0x8e>
 8012504:	080178fe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r7, fp, ip, sp, lr}
 8012508:	0801790a 	stmdaeq	r1, {r1, r3, r8, fp, ip, sp, lr}
 801250c:	080178d2 	stmdaeq	r1, {r1, r4, r6, r7, fp, ip, sp, lr}
 8012510:	080178e0 	stmdaeq	r1, {r5, r6, r7, fp, ip, sp, lr}
 8012514:	08015dbd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r7, r8, sl, fp, ip, lr}
 8012518:	08015db4 	stmdaeq	r1, {r2, r4, r5, r7, r8, sl, fp, ip, lr}
 801251c:	0801785c 	stmdaeq	r1, {r2, r3, r4, r6, fp, ip, sp, lr}
 8012520:	08015dbe 	stmdaeq	r1, {r1, r2, r3, r4, r5, r7, r8, sl, fp, ip, lr}

08012524 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)>:
 8012524:	b513      	push	{r0, r1, r4, lr}
 8012526:	6804      	ldr	r4, [r0, #0]
 8012528:	b914      	cbnz	r4, 8012530 <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)+0xc>
 801252a:	601c      	str	r4, [r3, #0]
 801252c:	b002      	add	sp, #8
 801252e:	bd10      	pop	{r4, pc}
 8012530:	9300      	str	r3, [sp, #0]
 8012532:	4613      	mov	r3, r2
 8012534:	460a      	mov	r2, r1
 8012536:	2100      	movs	r1, #0
 8012538:	f7ff ff5c 	bl	80123f4 <DisplayUdfParams::Builder(displayudfparams::Params const*, char*, unsigned int, unsigned int&)>
 801253c:	e7f6      	b.n	801252c <DisplayUdfParams::Save(char*, unsigned int, unsigned int&)+0x8>

0801253e <DisplayUdfParams::Set(DisplayUdf*)>:
 801253e:	6843      	ldr	r3, [r0, #4]
 8012540:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012544:	009a      	lsls	r2, r3, #2
 8012546:	4604      	mov	r4, r0
 8012548:	460e      	mov	r6, r1
 801254a:	d506      	bpl.n	801255a <DisplayUdfParams::Set(DisplayUdf*)+0x1c>
 801254c:	6988      	ldr	r0, [r1, #24]
 801254e:	b120      	cbz	r0, 801255a <DisplayUdfParams::Set(DisplayUdf*)+0x1c>
 8012550:	6803      	ldr	r3, [r0, #0]
 8012552:	f894 1025 	ldrb.w	r1, [r4, #37]	; 0x25
 8012556:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012558:	4798      	blx	r3
 801255a:	6863      	ldr	r3, [r4, #4]
 801255c:	69b0      	ldr	r0, [r6, #24]
 801255e:	00db      	lsls	r3, r3, #3
 8012560:	bf41      	itttt	mi
 8012562:	f64e 2260 	movwmi	r2, #60000	; 0xea60
 8012566:	f894 3024 	ldrbmi.w	r3, [r4, #36]	; 0x24
 801256a:	4353      	mulmi	r3, r2
 801256c:	6173      	strmi	r3, [r6, #20]
 801256e:	6861      	ldr	r1, [r4, #4]
 8012570:	f3c1 7180 	ubfx	r1, r1, #30, #1
 8012574:	b110      	cbz	r0, 801257c <DisplayUdfParams::Set(DisplayUdf*)+0x3e>
 8012576:	6803      	ldr	r3, [r0, #0]
 8012578:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801257a:	4798      	blx	r3
 801257c:	2500      	movs	r5, #0
 801257e:	2701      	movs	r7, #1
 8012580:	f104 0808 	add.w	r8, r4, #8
 8012584:	6862      	ldr	r2, [r4, #4]
 8012586:	fa07 f305 	lsl.w	r3, r7, r5
 801258a:	4393      	bics	r3, r2
 801258c:	d105      	bne.n	801259a <DisplayUdfParams::Set(DisplayUdf*)+0x5c>
 801258e:	462a      	mov	r2, r5
 8012590:	4630      	mov	r0, r6
 8012592:	f818 1005 	ldrb.w	r1, [r8, r5]
 8012596:	f7ff fe4d 	bl	8012234 <DisplayUdf::Set(unsigned char, displayudf::Labels)>
 801259a:	3501      	adds	r5, #1
 801259c:	2d14      	cmp	r5, #20
 801259e:	d1f1      	bne.n	8012584 <DisplayUdfParams::Set(DisplayUdf*)+0x46>
 80125a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080125a4 <DisplayUdfParams::Dump()>:
 80125a4:	4770      	bx	lr
	...

080125a8 <DisplayUdf::Show(E131Bridge*)>:
 80125a8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80125ac:	460e      	mov	r6, r1
 80125ae:	4604      	mov	r4, r0
 80125b0:	b085      	sub	sp, #20
 80125b2:	f7ff fd93 	bl	80120dc <DisplayUdf::Show()>
 80125b6:	f896 250b 	ldrb.w	r2, [r6, #1291]	; 0x50b
 80125ba:	f896 350a 	ldrb.w	r3, [r6, #1290]	; 0x50a
 80125be:	4620      	mov	r0, r4
 80125c0:	4413      	add	r3, r2
 80125c2:	f894 1041 	ldrb.w	r1, [r4, #65]	; 0x41
 80125c6:	4a21      	ldr	r2, [pc, #132]	; (801264c <DisplayUdf::Show(E131Bridge*)+0xa4>)
 80125c8:	f7f5 fd7c 	bl	80080c4 <Display::Printf(unsigned char, char const*, ...)>
 80125cc:	2500      	movs	r5, #0
 80125ce:	4f20      	ldr	r7, [pc, #128]	; (8012650 <DisplayUdf::Show(E131Bridge*)+0xa8>)
 80125d0:	f8df 8080 	ldr.w	r8, [pc, #128]	; 8012654 <DisplayUdf::Show(E131Bridge*)+0xac>
 80125d4:	f8df 9080 	ldr.w	r9, [pc, #128]	; 8012658 <DisplayUdf::Show(E131Bridge*)+0xb0>
 80125d8:	2301      	movs	r3, #1
 80125da:	4629      	mov	r1, r5
 80125dc:	4630      	mov	r0, r6
 80125de:	f10d 020e 	add.w	r2, sp, #14
 80125e2:	f7f8 f92d 	bl	800a840 <E131Bridge::GetUniverse(unsigned int, unsigned short&, lightset::PortDir) const>
 80125e6:	b1a8      	cbz	r0, 8012614 <DisplayUdf::Show(E131Bridge*)+0x6c>
 80125e8:	2344      	movs	r3, #68	; 0x44
 80125ea:	436b      	muls	r3, r5
 80125ec:	f206 524c 	addw	r2, r6, #1356	; 0x54c
 80125f0:	58d2      	ldr	r2, [r2, r3]
 80125f2:	f8bd 000e 	ldrh.w	r0, [sp, #14]
 80125f6:	2a00      	cmp	r2, #0
 80125f8:	bf0c      	ite	eq
 80125fa:	463b      	moveq	r3, r7
 80125fc:	4643      	movne	r3, r8
 80125fe:	e9cd 0300 	strd	r0, r3, [sp]
 8012602:	f104 0144 	add.w	r1, r4, #68	; 0x44
 8012606:	464a      	mov	r2, r9
 8012608:	4620      	mov	r0, r4
 801260a:	5d49      	ldrb	r1, [r1, r5]
 801260c:	f105 0341 	add.w	r3, r5, #65	; 0x41
 8012610:	f7f5 fd58 	bl	80080c4 <Display::Printf(unsigned char, char const*, ...)>
 8012614:	3501      	adds	r5, #1
 8012616:	2d04      	cmp	r5, #4
 8012618:	d1de      	bne.n	80125d8 <DisplayUdf::Show(E131Bridge*)+0x30>
 801261a:	6d22      	ldr	r2, [r4, #80]	; 0x50
 801261c:	f894 104f 	ldrb.w	r1, [r4, #79]	; 0x4f
 8012620:	2a02      	cmp	r2, #2
 8012622:	d001      	beq.n	8012628 <DisplayUdf::Show(E131Bridge*)+0x80>
 8012624:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8012626:	b933      	cbnz	r3, 8012636 <DisplayUdf::Show(E131Bridge*)+0x8e>
 8012628:	4620      	mov	r0, r4
 801262a:	4a0c      	ldr	r2, [pc, #48]	; (801265c <DisplayUdf::Show(E131Bridge*)+0xb4>)
 801262c:	f7f5 fd4a 	bl	80080c4 <Display::Printf(unsigned char, char const*, ...)>
 8012630:	b005      	add	sp, #20
 8012632:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012636:	480a      	ldr	r0, [pc, #40]	; (8012660 <DisplayUdf::Show(E131Bridge*)+0xb8>)
 8012638:	9300      	str	r3, [sp, #0]
 801263a:	4b0a      	ldr	r3, [pc, #40]	; (8012664 <DisplayUdf::Show(E131Bridge*)+0xbc>)
 801263c:	2a00      	cmp	r2, #0
 801263e:	bf08      	it	eq
 8012640:	4603      	moveq	r3, r0
 8012642:	4620      	mov	r0, r4
 8012644:	4a08      	ldr	r2, [pc, #32]	; (8012668 <DisplayUdf::Show(E131Bridge*)+0xc0>)
 8012646:	f7f5 fd3d 	bl	80080c4 <Display::Printf(unsigned char, char const*, ...)>
 801264a:	e7f1      	b.n	8012630 <DisplayUdf::Show(E131Bridge*)+0x88>
 801264c:	08017914 	stmdaeq	r1, {r2, r4, r8, fp, ip, sp, lr}
 8012650:	08016b88 	stmdaeq	r1, {r3, r7, r8, r9, fp, sp, lr}
 8012654:	08016b8c 	stmdaeq	r1, {r2, r3, r7, r8, r9, fp, sp, lr}
 8012658:	0801791b 	stmdaeq	r1, {r0, r1, r3, r4, r8, fp, ip, sp, lr}
 801265c:	0801792a 	stmdaeq	r1, {r1, r3, r5, r8, fp, ip, sp, lr}
 8012660:	08016c86 	stmdaeq	r1, {r1, r2, r7, sl, fp, sp, lr}
 8012664:	08016c7b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, sl, fp, sp, lr}
 8012668:	08017931 	stmdaeq	r1, {r0, r4, r5, r8, fp, ip, sp, lr}

0801266c <NetworkDisplay::ShowEmacStart()>:
 801266c:	4b01      	ldr	r3, [pc, #4]	; (8012674 <NetworkDisplay::ShowEmacStart()+0x8>)
 801266e:	6818      	ldr	r0, [r3, #0]
 8012670:	f7ff bc9e 	b.w	8011fb0 <DisplayUdf::ShowEmacStart()>
 8012674:	20013cdc 	ldrdcs	r3, [r1], -ip

08012678 <NetworkDisplay::ShowIp()>:
 8012678:	4b01      	ldr	r3, [pc, #4]	; (8012680 <NetworkDisplay::ShowIp()+0x8>)
 801267a:	6818      	ldr	r0, [r3, #0]
 801267c:	f7ff bca8 	b.w	8011fd0 <DisplayUdf::ShowIpAddress()>
 8012680:	20013cdc 	ldrdcs	r3, [r1], -ip

08012684 <NetworkDisplay::ShowNetMask()>:
 8012684:	4b01      	ldr	r3, [pc, #4]	; (801268c <NetworkDisplay::ShowNetMask()+0x8>)
 8012686:	6818      	ldr	r0, [r3, #0]
 8012688:	f7ff bcd6 	b.w	8012038 <DisplayUdf::ShowNetmask()>
 801268c:	20013cdc 	ldrdcs	r3, [r1], -ip

08012690 <NetworkDisplay::ShowHostName()>:
 8012690:	4b01      	ldr	r3, [pc, #4]	; (8012698 <NetworkDisplay::ShowHostName()+0x8>)
 8012692:	6818      	ldr	r0, [r3, #0]
 8012694:	f7ff bd0e 	b.w	80120b4 <DisplayUdf::ShowHostName()>
 8012698:	20013cdc 	ldrdcs	r3, [r1], -ip

0801269c <NetworkDisplay::ShowShutdown()>:
 801269c:	4b01      	ldr	r3, [pc, #4]	; (80126a4 <NetworkDisplay::ShowShutdown()+0x8>)
 801269e:	6818      	ldr	r0, [r3, #0]
 80126a0:	f7ff bd98 	b.w	80121d4 <DisplayUdf::ShowShutdown()>
 80126a4:	20013cdc 	ldrdcs	r3, [r1], -ip

080126a8 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)>:
 80126a8:	4b01      	ldr	r3, [pc, #4]	; (80126b0 <NetworkDisplay::ShowDhcpStatus(network::dhcp::ClientStatus)+0x8>)
 80126aa:	6818      	ldr	r0, [r3, #0]
 80126ac:	f7ff bd5a 	b.w	8012164 <DisplayUdf::ShowDhcpStatus(network::dhcp::ClientStatus)>
 80126b0:	20013cdc 	ldrdcs	r3, [r1], -ip

080126b4 <properties::convert_json_file(char*, unsigned short, bool)>:
 80126b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80126b8:	7803      	ldrb	r3, [r0, #0]
 80126ba:	2b7b      	cmp	r3, #123	; 0x7b
 80126bc:	d170      	bne.n	80127a0 <properties::convert_json_file(char*, unsigned short, bool)+0xec>
 80126be:	b322      	cbz	r2, 801270a <properties::convert_json_file(char*, unsigned short, bool)+0x56>
 80126c0:	2301      	movs	r3, #1
 80126c2:	4606      	mov	r6, r0
 80126c4:	461c      	mov	r4, r3
 80126c6:	2a00      	cmp	r2, #0
 80126c8:	bf0c      	ite	eq
 80126ca:	f04f 0c0a 	moveq.w	ip, #10
 80126ce:	f04f 0c00 	movne.w	ip, #0
 80126d2:	273d      	movs	r7, #61	; 0x3d
 80126d4:	4299      	cmp	r1, r3
 80126d6:	d960      	bls.n	801279a <properties::convert_json_file(char*, unsigned short, bool)+0xe6>
 80126d8:	4299      	cmp	r1, r3
 80126da:	4602      	mov	r2, r0
 80126dc:	f890 e000 	ldrb.w	lr, [r0]
 80126e0:	f103 0301 	add.w	r3, r3, #1
 80126e4:	f100 0001 	add.w	r0, r0, #1
 80126e8:	d846      	bhi.n	8012778 <properties::convert_json_file(char*, unsigned short, bool)+0xc4>
 80126ea:	1aa0      	subs	r0, r4, r2
 80126ec:	4615      	mov	r5, r2
 80126ee:	1884      	adds	r4, r0, r2
 80126f0:	f812 8b01 	ldrb.w	r8, [r2], #1
 80126f4:	f103 0e01 	add.w	lr, r3, #1
 80126f8:	f1b8 0f22 	cmp.w	r8, #34	; 0x22
 80126fc:	d053      	beq.n	80127a6 <properties::convert_json_file(char*, unsigned short, bool)+0xf2>
 80126fe:	4299      	cmp	r1, r3
 8012700:	d957      	bls.n	80127b2 <properties::convert_json_file(char*, unsigned short, bool)+0xfe>
 8012702:	4673      	mov	r3, lr
 8012704:	f806 8b01 	strb.w	r8, [r6], #1
 8012708:	e7f0      	b.n	80126ec <properties::convert_json_file(char*, unsigned short, bool)+0x38>
 801270a:	2323      	movs	r3, #35	; 0x23
 801270c:	f800 3b01 	strb.w	r3, [r0], #1
 8012710:	4605      	mov	r5, r0
 8012712:	2301      	movs	r3, #1
 8012714:	4299      	cmp	r1, r3
 8012716:	d92d      	bls.n	8012774 <properties::convert_json_file(char*, unsigned short, bool)+0xc0>
 8012718:	f815 4b01 	ldrb.w	r4, [r5], #1
 801271c:	2c22      	cmp	r4, #34	; 0x22
 801271e:	d001      	beq.n	8012724 <properties::convert_json_file(char*, unsigned short, bool)+0x70>
 8012720:	3301      	adds	r3, #1
 8012722:	e7f7      	b.n	8012714 <properties::convert_json_file(char*, unsigned short, bool)+0x60>
 8012724:	46ac      	mov	ip, r5
 8012726:	4606      	mov	r6, r0
 8012728:	2701      	movs	r7, #1
 801272a:	f89c e000 	ldrb.w	lr, [ip]
 801272e:	4665      	mov	r5, ip
 8012730:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 8012734:	4630      	mov	r0, r6
 8012736:	463c      	mov	r4, r7
 8012738:	f10c 0c01 	add.w	ip, ip, #1
 801273c:	f106 0601 	add.w	r6, r6, #1
 8012740:	f107 0701 	add.w	r7, r7, #1
 8012744:	d007      	beq.n	8012756 <properties::convert_json_file(char*, unsigned short, bool)+0xa2>
 8012746:	3301      	adds	r3, #1
 8012748:	4299      	cmp	r1, r3
 801274a:	4665      	mov	r5, ip
 801274c:	f806 ec01 	strb.w	lr, [r6, #-1]
 8012750:	d8eb      	bhi.n	801272a <properties::convert_json_file(char*, unsigned short, bool)+0x76>
 8012752:	463c      	mov	r4, r7
 8012754:	4630      	mov	r0, r6
 8012756:	4606      	mov	r6, r0
 8012758:	200a      	movs	r0, #10
 801275a:	3401      	adds	r4, #1
 801275c:	f806 0b01 	strb.w	r0, [r6], #1
 8012760:	4628      	mov	r0, r5
 8012762:	f815 7b01 	ldrb.w	r7, [r5], #1
 8012766:	2f7b      	cmp	r7, #123	; 0x7b
 8012768:	d0ad      	beq.n	80126c6 <properties::convert_json_file(char*, unsigned short, bool)+0x12>
 801276a:	1c5f      	adds	r7, r3, #1
 801276c:	4299      	cmp	r1, r3
 801276e:	463b      	mov	r3, r7
 8012770:	d8f6      	bhi.n	8012760 <properties::convert_json_file(char*, unsigned short, bool)+0xac>
 8012772:	e7a8      	b.n	80126c6 <properties::convert_json_file(char*, unsigned short, bool)+0x12>
 8012774:	2401      	movs	r4, #1
 8012776:	e7ee      	b.n	8012756 <properties::convert_json_file(char*, unsigned short, bool)+0xa2>
 8012778:	f1be 0f22 	cmp.w	lr, #34	; 0x22
 801277c:	d1ac      	bne.n	80126d8 <properties::convert_json_file(char*, unsigned short, bool)+0x24>
 801277e:	4602      	mov	r2, r0
 8012780:	e7b3      	b.n	80126ea <properties::convert_json_file(char*, unsigned short, bool)+0x36>
 8012782:	283a      	cmp	r0, #58	; 0x3a
 8012784:	d115      	bne.n	80127b2 <properties::convert_json_file(char*, unsigned short, bool)+0xfe>
 8012786:	462b      	mov	r3, r5
 8012788:	e01b      	b.n	80127c2 <properties::convert_json_file(char*, unsigned short, bool)+0x10e>
 801278a:	4686      	mov	lr, r0
 801278c:	e027      	b.n	80127de <properties::convert_json_file(char*, unsigned short, bool)+0x12a>
 801278e:	4673      	mov	r3, lr
 8012790:	f806 cb01 	strb.w	ip, [r6], #1
 8012794:	3401      	adds	r4, #1
 8012796:	3301      	adds	r3, #1
 8012798:	e79c      	b.n	80126d4 <properties::convert_json_file(char*, unsigned short, bool)+0x20>
 801279a:	4620      	mov	r0, r4
 801279c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80127a0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80127a4:	e7fa      	b.n	801279c <properties::convert_json_file(char*, unsigned short, bool)+0xe8>
 80127a6:	4630      	mov	r0, r6
 80127a8:	f800 7b01 	strb.w	r7, [r0], #1
 80127ac:	469e      	mov	lr, r3
 80127ae:	4606      	mov	r6, r0
 80127b0:	3401      	adds	r4, #1
 80127b2:	4571      	cmp	r1, lr
 80127b4:	462b      	mov	r3, r5
 80127b6:	7828      	ldrb	r0, [r5, #0]
 80127b8:	f10e 0e01 	add.w	lr, lr, #1
 80127bc:	f105 0501 	add.w	r5, r5, #1
 80127c0:	d8df      	bhi.n	8012782 <properties::convert_json_file(char*, unsigned short, bool)+0xce>
 80127c2:	781d      	ldrb	r5, [r3, #0]
 80127c4:	461a      	mov	r2, r3
 80127c6:	2d2f      	cmp	r5, #47	; 0x2f
 80127c8:	4670      	mov	r0, lr
 80127ca:	f103 0301 	add.w	r3, r3, #1
 80127ce:	f10e 0e01 	add.w	lr, lr, #1
 80127d2:	d8da      	bhi.n	801278a <properties::convert_json_file(char*, unsigned short, bool)+0xd6>
 80127d4:	4281      	cmp	r1, r0
 80127d6:	d8f4      	bhi.n	80127c2 <properties::convert_json_file(char*, unsigned short, bool)+0x10e>
 80127d8:	2d22      	cmp	r5, #34	; 0x22
 80127da:	bf08      	it	eq
 80127dc:	461a      	moveq	r2, r3
 80127de:	4610      	mov	r0, r2
 80127e0:	f810 5b01 	ldrb.w	r5, [r0], #1
 80127e4:	f10e 0301 	add.w	r3, lr, #1
 80127e8:	2d22      	cmp	r5, #34	; 0x22
 80127ea:	d0d0      	beq.n	801278e <properties::convert_json_file(char*, unsigned short, bool)+0xda>
 80127ec:	2d2c      	cmp	r5, #44	; 0x2c
 80127ee:	d0ce      	beq.n	801278e <properties::convert_json_file(char*, unsigned short, bool)+0xda>
 80127f0:	2d7d      	cmp	r5, #125	; 0x7d
 80127f2:	d0cc      	beq.n	801278e <properties::convert_json_file(char*, unsigned short, bool)+0xda>
 80127f4:	4571      	cmp	r1, lr
 80127f6:	d9ce      	bls.n	8012796 <properties::convert_json_file(char*, unsigned short, bool)+0xe2>
 80127f8:	f1a5 0e20 	sub.w	lr, r5, #32
 80127fc:	f1be 0f5a 	cmp.w	lr, #90	; 0x5a
 8012800:	d803      	bhi.n	801280a <properties::convert_json_file(char*, unsigned short, bool)+0x156>
 8012802:	4602      	mov	r2, r0
 8012804:	f806 5b01 	strb.w	r5, [r6], #1
 8012808:	3401      	adds	r4, #1
 801280a:	469e      	mov	lr, r3
 801280c:	e7e7      	b.n	80127de <properties::convert_json_file(char*, unsigned short, bool)+0x12a>
	...

08012810 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)>:
 8012810:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8012814:	6002      	str	r2, [r0, #0]
 8012816:	4614      	mov	r4, r2
 8012818:	2200      	movs	r2, #0
 801281a:	4606      	mov	r6, r0
 801281c:	460f      	mov	r7, r1
 801281e:	80c2      	strh	r2, [r0, #6]
 8012820:	4a1b      	ldr	r2, [pc, #108]	; (8012890 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x80>)
 8012822:	8083      	strh	r3, [r0, #4]
 8012824:	7810      	ldrb	r0, [r2, #0]
 8012826:	f000 0001 	and.w	r0, r0, #1
 801282a:	7230      	strb	r0, [r6, #8]
 801282c:	463d      	mov	r5, r7
 801282e:	782a      	ldrb	r2, [r5, #0]
 8012830:	3701      	adds	r7, #1
 8012832:	2a00      	cmp	r2, #0
 8012834:	d1fa      	bne.n	801282c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x1c>
 8012836:	1a6d      	subs	r5, r5, r1
 8012838:	b29b      	uxth	r3, r3
 801283a:	b1d0      	cbz	r0, 8012872 <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x62>
 801283c:	1d2f      	adds	r7, r5, #4
 801283e:	429f      	cmp	r7, r3
 8012840:	d814      	bhi.n	801286c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 8012842:	f04f 087b 	mov.w	r8, #123	; 0x7b
 8012846:	f04f 0922 	mov.w	r9, #34	; 0x22
 801284a:	462a      	mov	r2, r5
 801284c:	f884 8000 	strb.w	r8, [r4]
 8012850:	f884 9001 	strb.w	r9, [r4, #1]
 8012854:	1ca0      	adds	r0, r4, #2
 8012856:	f000 ff9e 	bl	8013796 <memmove>
 801285a:	223a      	movs	r2, #58	; 0x3a
 801285c:	1963      	adds	r3, r4, r5
 801285e:	3505      	adds	r5, #5
 8012860:	f883 9002 	strb.w	r9, [r3, #2]
 8012864:	70da      	strb	r2, [r3, #3]
 8012866:	80f5      	strh	r5, [r6, #6]
 8012868:	f804 8007 	strb.w	r8, [r4, r7]
 801286c:	4630      	mov	r0, r6
 801286e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8012872:	1caf      	adds	r7, r5, #2
 8012874:	429f      	cmp	r7, r3
 8012876:	d8f9      	bhi.n	801286c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 8012878:	4620      	mov	r0, r4
 801287a:	2323      	movs	r3, #35	; 0x23
 801287c:	462a      	mov	r2, r5
 801287e:	f800 3b01 	strb.w	r3, [r0], #1
 8012882:	f000 ff88 	bl	8013796 <memmove>
 8012886:	230a      	movs	r3, #10
 8012888:	442c      	add	r4, r5
 801288a:	7063      	strb	r3, [r4, #1]
 801288c:	80f7      	strh	r7, [r6, #6]
 801288e:	e7ed      	b.n	801286c <PropertiesBuilder::PropertiesBuilder(char const*, char*, unsigned int)+0x5c>
 8012890:	20013ce0 	andcs	r3, r1, r0, ror #25

08012894 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)>:
 8012894:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012896:	469c      	mov	ip, r3
 8012898:	8885      	ldrh	r5, [r0, #4]
 801289a:	88c3      	ldrh	r3, [r0, #6]
 801289c:	b085      	sub	sp, #20
 801289e:	42ab      	cmp	r3, r5
 80128a0:	d302      	bcc.n	80128a8 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x14>
 80128a2:	2000      	movs	r0, #0
 80128a4:	b005      	add	sp, #20
 80128a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80128a8:	4604      	mov	r4, r0
 80128aa:	6800      	ldr	r0, [r0, #0]
 80128ac:	1aed      	subs	r5, r5, r3
 80128ae:	4418      	add	r0, r3
 80128b0:	b2d6      	uxtb	r6, r2
 80128b2:	f3c2 2707 	ubfx	r7, r2, #8, #8
 80128b6:	f3c2 4307 	ubfx	r3, r2, #16, #8
 80128ba:	f894 e008 	ldrb.w	lr, [r4, #8]
 80128be:	0e12      	lsrs	r2, r2, #24
 80128c0:	f1bc 0f00 	cmp.w	ip, #0
 80128c4:	d109      	bne.n	80128da <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x46>
 80128c6:	f1be 0f00 	cmp.w	lr, #0
 80128ca:	d109      	bne.n	80128e0 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x4c>
 80128cc:	e9cd 3202 	strd	r3, r2, [sp, #8]
 80128d0:	e9cd 6700 	strd	r6, r7, [sp]
 80128d4:	460b      	mov	r3, r1
 80128d6:	4a0e      	ldr	r2, [pc, #56]	; (8012910 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x7c>)
 80128d8:	e008      	b.n	80128ec <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x58>
 80128da:	f1be 0f00 	cmp.w	lr, #0
 80128de:	d00f      	beq.n	8012900 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x6c>
 80128e0:	e9cd 3202 	strd	r3, r2, [sp, #8]
 80128e4:	460b      	mov	r3, r1
 80128e6:	e9cd 6700 	strd	r6, r7, [sp]
 80128ea:	4a0a      	ldr	r2, [pc, #40]	; (8012914 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x80>)
 80128ec:	4629      	mov	r1, r5
 80128ee:	f7f6 fb05 	bl	8008efc <snprintf>
 80128f2:	4285      	cmp	r5, r0
 80128f4:	dbd5      	blt.n	80128a2 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0xe>
 80128f6:	88e3      	ldrh	r3, [r4, #6]
 80128f8:	4403      	add	r3, r0
 80128fa:	80e3      	strh	r3, [r4, #6]
 80128fc:	2001      	movs	r0, #1
 80128fe:	e7d1      	b.n	80128a4 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x10>
 8012900:	e9cd 3202 	strd	r3, r2, [sp, #8]
 8012904:	e9cd 6700 	strd	r6, r7, [sp]
 8012908:	460b      	mov	r3, r1
 801290a:	4a03      	ldr	r2, [pc, #12]	; (8012918 <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x84>)
 801290c:	e7ee      	b.n	80128ec <PropertiesBuilder::AddIpAddress(char const*, unsigned int, bool)+0x58>
 801290e:	bf00      	nop
 8012910:	080179ca 	stmdaeq	r1, {r1, r3, r6, r7, r8, fp, ip, sp, lr}
 8012914:	080179b6 	stmdaeq	r1, {r1, r2, r4, r5, r7, r8, fp, ip, sp, lr}
 8012918:	080179cb 	stmdaeq	r1, {r0, r1, r3, r6, r7, r8, fp, ip, sp, lr}

0801291c <PropertiesBuilder::AddComment(char const*)>:
 801291c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801291e:	7a06      	ldrb	r6, [r0, #8]
 8012920:	b996      	cbnz	r6, 8012948 <PropertiesBuilder::AddComment(char const*)+0x2c>
 8012922:	4604      	mov	r4, r0
 8012924:	88c0      	ldrh	r0, [r0, #6]
 8012926:	88a5      	ldrh	r5, [r4, #4]
 8012928:	42a8      	cmp	r0, r5
 801292a:	d20d      	bcs.n	8012948 <PropertiesBuilder::AddComment(char const*)+0x2c>
 801292c:	6827      	ldr	r7, [r4, #0]
 801292e:	1a2d      	subs	r5, r5, r0
 8012930:	460b      	mov	r3, r1
 8012932:	4a06      	ldr	r2, [pc, #24]	; (801294c <PropertiesBuilder::AddComment(char const*)+0x30>)
 8012934:	4629      	mov	r1, r5
 8012936:	4438      	add	r0, r7
 8012938:	f7f6 fae0 	bl	8008efc <snprintf>
 801293c:	4285      	cmp	r5, r0
 801293e:	bfa1      	itttt	ge
 8012940:	2601      	movge	r6, #1
 8012942:	88e3      	ldrhge	r3, [r4, #6]
 8012944:	18c0      	addge	r0, r0, r3
 8012946:	80e0      	strhge	r0, [r4, #6]
 8012948:	4630      	mov	r0, r6
 801294a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801294c:	080179db 	stmdaeq	r1, {r0, r1, r3, r4, r6, r7, r8, fp, ip, sp, lr}

08012950 <ReadConfigFile::ReadConfigFile(void (*)(void*, char const*), void*)>:
 8012950:	e9c0 1200 	strd	r1, r2, [r0]
 8012954:	4770      	bx	lr

08012956 <ReadConfigFile::~ReadConfigFile()>:
 8012956:	4770      	bx	lr

08012958 <ReadConfigFile::Read(char const*, unsigned int)>:
 8012958:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801295c:	4606      	mov	r6, r0
 801295e:	460d      	mov	r5, r1
 8012960:	4614      	mov	r4, r2
 8012962:	f04f 0800 	mov.w	r8, #0
 8012966:	b090      	sub	sp, #64	; 0x40
 8012968:	b33c      	cbz	r4, 80129ba <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 801296a:	466b      	mov	r3, sp
 801296c:	462a      	mov	r2, r5
 801296e:	4619      	mov	r1, r3
 8012970:	7817      	ldrb	r7, [r2, #0]
 8012972:	4610      	mov	r0, r2
 8012974:	2f0d      	cmp	r7, #13
 8012976:	f102 0201 	add.w	r2, r2, #1
 801297a:	d013      	beq.n	80129a4 <ReadConfigFile::Read(char const*, unsigned int)+0x4c>
 801297c:	2f0a      	cmp	r7, #10
 801297e:	d011      	beq.n	80129a4 <ReadConfigFile::Read(char const*, unsigned int)+0x4c>
 8012980:	f803 7b01 	strb.w	r7, [r3], #1
 8012984:	1a58      	subs	r0, r3, r1
 8012986:	283f      	cmp	r0, #63	; 0x3f
 8012988:	4615      	mov	r5, r2
 801298a:	dc16      	bgt.n	80129ba <ReadConfigFile::Read(char const*, unsigned int)+0x62>
 801298c:	3c01      	subs	r4, #1
 801298e:	d1ef      	bne.n	8012970 <ReadConfigFile::Read(char const*, unsigned int)+0x18>
 8012990:	f89d 2000 	ldrb.w	r2, [sp]
 8012994:	2a60      	cmp	r2, #96	; 0x60
 8012996:	d9e7      	bls.n	8012968 <ReadConfigFile::Read(char const*, unsigned int)+0x10>
 8012998:	f883 8000 	strb.w	r8, [r3]
 801299c:	e9d6 3000 	ldrd	r3, r0, [r6]
 80129a0:	4798      	blx	r3
 80129a2:	e7e1      	b.n	8012968 <ReadConfigFile::Read(char const*, unsigned int)+0x10>
 80129a4:	4605      	mov	r5, r0
 80129a6:	2c00      	cmp	r4, #0
 80129a8:	d0f2      	beq.n	8012990 <ReadConfigFile::Read(char const*, unsigned int)+0x38>
 80129aa:	f810 2b01 	ldrb.w	r2, [r0], #1
 80129ae:	2a0d      	cmp	r2, #13
 80129b0:	d001      	beq.n	80129b6 <ReadConfigFile::Read(char const*, unsigned int)+0x5e>
 80129b2:	2a0a      	cmp	r2, #10
 80129b4:	d1ec      	bne.n	8012990 <ReadConfigFile::Read(char const*, unsigned int)+0x38>
 80129b6:	3c01      	subs	r4, #1
 80129b8:	e7f4      	b.n	80129a4 <ReadConfigFile::Read(char const*, unsigned int)+0x4c>
 80129ba:	b010      	add	sp, #64	; 0x40
 80129bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080129c0 <Sscan::Char(char const*, char const*, char*, unsigned int&)>:
 80129c0:	b570      	push	{r4, r5, r6, lr}
 80129c2:	4615      	mov	r5, r2
 80129c4:	461c      	mov	r4, r3
 80129c6:	f000 f91b 	bl	8012c00 <Sscan::checkName(char const*, char const*)>
 80129ca:	b160      	cbz	r0, 80129e6 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x26>
 80129cc:	2100      	movs	r1, #0
 80129ce:	5c43      	ldrb	r3, [r0, r1]
 80129d0:	6826      	ldr	r6, [r4, #0]
 80129d2:	b28a      	uxth	r2, r1
 80129d4:	b123      	cbz	r3, 80129e0 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x20>
 80129d6:	42b2      	cmp	r2, r6
 80129d8:	d207      	bcs.n	80129ea <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x2a>
 80129da:	546b      	strb	r3, [r5, r1]
 80129dc:	3101      	adds	r1, #1
 80129de:	e7f6      	b.n	80129ce <Sscan::Char(char const*, char const*, char*, unsigned int&)+0xe>
 80129e0:	2000      	movs	r0, #0
 80129e2:	6022      	str	r2, [r4, #0]
 80129e4:	bd70      	pop	{r4, r5, r6, pc}
 80129e6:	2001      	movs	r0, #1
 80129e8:	e7fc      	b.n	80129e4 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x24>
 80129ea:	2b0a      	cmp	r3, #10
 80129ec:	d0f8      	beq.n	80129e0 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x20>
 80129ee:	2002      	movs	r0, #2
 80129f0:	e7f8      	b.n	80129e4 <Sscan::Char(char const*, char const*, char*, unsigned int&)+0x24>

080129f2 <Sscan::Float(char const*, char const*, float&)>:
 80129f2:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80129f6:	4616      	mov	r6, r2
 80129f8:	f000 f902 	bl	8012c00 <Sscan::checkName(char const*, char const*)>
 80129fc:	2800      	cmp	r0, #0
 80129fe:	d059      	beq.n	8012ab4 <Sscan::Float(char const*, char const*, float&)+0xc2>
 8012a00:	4604      	mov	r4, r0
 8012a02:	7803      	ldrb	r3, [r0, #0]
 8012a04:	2b2d      	cmp	r3, #45	; 0x2d
 8012a06:	bf08      	it	eq
 8012a08:	3401      	addeq	r4, #1
 8012a0a:	7823      	ldrb	r3, [r4, #0]
 8012a0c:	bf0c      	ite	eq
 8012a0e:	f04f 0801 	moveq.w	r8, #1
 8012a12:	f04f 0800 	movne.w	r8, #0
 8012a16:	f013 0fdf 	tst.w	r3, #223	; 0xdf
 8012a1a:	d103      	bne.n	8012a24 <Sscan::Float(char const*, char const*, float&)+0x32>
 8012a1c:	2702      	movs	r7, #2
 8012a1e:	4638      	mov	r0, r7
 8012a20:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8012a24:	2000      	movs	r0, #0
 8012a26:	220a      	movs	r2, #10
 8012a28:	7823      	ldrb	r3, [r4, #0]
 8012a2a:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 8012a2e:	2909      	cmp	r1, #9
 8012a30:	d8f4      	bhi.n	8012a1c <Sscan::Float(char const*, char const*, float&)+0x2a>
 8012a32:	fb02 3000 	mla	r0, r2, r0, r3
 8012a36:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8012a3a:	3830      	subs	r0, #48	; 0x30
 8012a3c:	2b2e      	cmp	r3, #46	; 0x2e
 8012a3e:	d002      	beq.n	8012a46 <Sscan::Float(char const*, char const*, float&)+0x54>
 8012a40:	f013 0fdf 	tst.w	r3, #223	; 0xdf
 8012a44:	d1f0      	bne.n	8012a28 <Sscan::Float(char const*, char const*, float&)+0x36>
 8012a46:	f7f4 fcb5 	bl	80073b4 <__aeabi_ui2f>
 8012a4a:	6030      	str	r0, [r6, #0]
 8012a4c:	7823      	ldrb	r3, [r4, #0]
 8012a4e:	4605      	mov	r5, r0
 8012a50:	2b2e      	cmp	r3, #46	; 0x2e
 8012a52:	d008      	beq.n	8012a66 <Sscan::Float(char const*, char const*, float&)+0x74>
 8012a54:	f1b8 0f00 	cmp.w	r8, #0
 8012a58:	d101      	bne.n	8012a5e <Sscan::Float(char const*, char const*, float&)+0x6c>
 8012a5a:	2700      	movs	r7, #0
 8012a5c:	e7df      	b.n	8012a1e <Sscan::Float(char const*, char const*, float&)+0x2c>
 8012a5e:	f100 4500 	add.w	r5, r0, #2147483648	; 0x80000000
 8012a62:	6035      	str	r5, [r6, #0]
 8012a64:	e7f9      	b.n	8012a5a <Sscan::Float(char const*, char const*, float&)+0x68>
 8012a66:	f04f 0901 	mov.w	r9, #1
 8012a6a:	2000      	movs	r0, #0
 8012a6c:	220a      	movs	r2, #10
 8012a6e:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8012a72:	f013 07df 	ands.w	r7, r3, #223	; 0xdf
 8012a76:	d007      	beq.n	8012a88 <Sscan::Float(char const*, char const*, float&)+0x96>
 8012a78:	3b30      	subs	r3, #48	; 0x30
 8012a7a:	2b09      	cmp	r3, #9
 8012a7c:	d8ce      	bhi.n	8012a1c <Sscan::Float(char const*, char const*, float&)+0x2a>
 8012a7e:	fb02 3000 	mla	r0, r2, r0, r3
 8012a82:	fb02 f909 	mul.w	r9, r2, r9
 8012a86:	e7f2      	b.n	8012a6e <Sscan::Float(char const*, char const*, float&)+0x7c>
 8012a88:	f7f4 fc94 	bl	80073b4 <__aeabi_ui2f>
 8012a8c:	4604      	mov	r4, r0
 8012a8e:	4648      	mov	r0, r9
 8012a90:	f7f4 fc90 	bl	80073b4 <__aeabi_ui2f>
 8012a94:	4601      	mov	r1, r0
 8012a96:	4620      	mov	r0, r4
 8012a98:	f7f5 f974 	bl	8007d84 <__aeabi_fdiv>
 8012a9c:	4629      	mov	r1, r5
 8012a9e:	f7f4 fbd9 	bl	8007254 <__addsf3>
 8012aa2:	f1b8 0f00 	cmp.w	r8, #0
 8012aa6:	d101      	bne.n	8012aac <Sscan::Float(char const*, char const*, float&)+0xba>
 8012aa8:	6030      	str	r0, [r6, #0]
 8012aaa:	e7d6      	b.n	8012a5a <Sscan::Float(char const*, char const*, float&)+0x68>
 8012aac:	f100 4000 	add.w	r0, r0, #2147483648	; 0x80000000
 8012ab0:	6030      	str	r0, [r6, #0]
 8012ab2:	e7b4      	b.n	8012a1e <Sscan::Float(char const*, char const*, float&)+0x2c>
 8012ab4:	2701      	movs	r7, #1
 8012ab6:	e7b2      	b.n	8012a1e <Sscan::Float(char const*, char const*, float&)+0x2c>

08012ab8 <Sscan::IpAddress(char const*, char const*, unsigned int&)>:
 8012ab8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8012aba:	4615      	mov	r5, r2
 8012abc:	f000 f8a0 	bl	8012c00 <Sscan::checkName(char const*, char const*)>
 8012ac0:	b3c0      	cbz	r0, 8012b34 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x7c>
 8012ac2:	2400      	movs	r4, #0
 8012ac4:	270a      	movs	r7, #10
 8012ac6:	ae01      	add	r6, sp, #4
 8012ac8:	4603      	mov	r3, r0
 8012aca:	2100      	movs	r1, #0
 8012acc:	f100 0c04 	add.w	ip, r0, #4
 8012ad0:	4618      	mov	r0, r3
 8012ad2:	f810 2b01 	ldrb.w	r2, [r0], #1
 8012ad6:	2a2e      	cmp	r2, #46	; 0x2e
 8012ad8:	d00e      	beq.n	8012af8 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x40>
 8012ada:	b16a      	cbz	r2, 8012af8 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x40>
 8012adc:	4560      	cmp	r0, ip
 8012ade:	d102      	bne.n	8012ae6 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x2e>
 8012ae0:	2002      	movs	r0, #2
 8012ae2:	b003      	add	sp, #12
 8012ae4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012ae6:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 8012aea:	2b09      	cmp	r3, #9
 8012aec:	d8f8      	bhi.n	8012ae0 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 8012aee:	fb07 2101 	mla	r1, r7, r1, r2
 8012af2:	4603      	mov	r3, r0
 8012af4:	3930      	subs	r1, #48	; 0x30
 8012af6:	e7eb      	b.n	8012ad0 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x18>
 8012af8:	29ff      	cmp	r1, #255	; 0xff
 8012afa:	d8f1      	bhi.n	8012ae0 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 8012afc:	3401      	adds	r4, #1
 8012afe:	2c03      	cmp	r4, #3
 8012b00:	f806 1b01 	strb.w	r1, [r6], #1
 8012b04:	d1e0      	bne.n	8012ac8 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x10>
 8012b06:	2400      	movs	r4, #0
 8012b08:	220a      	movs	r2, #10
 8012b0a:	1d1e      	adds	r6, r3, #4
 8012b0c:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8012b10:	f011 00df 	ands.w	r0, r1, #223	; 0xdf
 8012b14:	d007      	beq.n	8012b26 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x6e>
 8012b16:	429e      	cmp	r6, r3
 8012b18:	d0e2      	beq.n	8012ae0 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 8012b1a:	3930      	subs	r1, #48	; 0x30
 8012b1c:	2909      	cmp	r1, #9
 8012b1e:	d8df      	bhi.n	8012ae0 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 8012b20:	fb02 1404 	mla	r4, r2, r4, r1
 8012b24:	e7f2      	b.n	8012b0c <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x54>
 8012b26:	2cff      	cmp	r4, #255	; 0xff
 8012b28:	d8da      	bhi.n	8012ae0 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x28>
 8012b2a:	f88d 4007 	strb.w	r4, [sp, #7]
 8012b2e:	9b01      	ldr	r3, [sp, #4]
 8012b30:	602b      	str	r3, [r5, #0]
 8012b32:	e7d6      	b.n	8012ae2 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x2a>
 8012b34:	2001      	movs	r0, #1
 8012b36:	e7d4      	b.n	8012ae2 <Sscan::IpAddress(char const*, char const*, unsigned int&)+0x2a>

08012b38 <Sscan::Uint16(char const*, char const*, unsigned short&)>:
 8012b38:	b538      	push	{r3, r4, r5, lr}
 8012b3a:	4615      	mov	r5, r2
 8012b3c:	f000 f860 	bl	8012c00 <Sscan::checkName(char const*, char const*)>
 8012b40:	b1a0      	cbz	r0, 8012b6c <Sscan::Uint16(char const*, char const*, unsigned short&)+0x34>
 8012b42:	4604      	mov	r4, r0
 8012b44:	2100      	movs	r1, #0
 8012b46:	220a      	movs	r2, #10
 8012b48:	7823      	ldrb	r3, [r4, #0]
 8012b4a:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
 8012b4e:	2809      	cmp	r0, #9
 8012b50:	d80e      	bhi.n	8012b70 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x38>
 8012b52:	fb02 3101 	mla	r1, r2, r1, r3
 8012b56:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8012b5a:	3930      	subs	r1, #48	; 0x30
 8012b5c:	f013 00df 	ands.w	r0, r3, #223	; 0xdf
 8012b60:	d1f2      	bne.n	8012b48 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x10>
 8012b62:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
 8012b66:	d203      	bcs.n	8012b70 <Sscan::Uint16(char const*, char const*, unsigned short&)+0x38>
 8012b68:	8029      	strh	r1, [r5, #0]
 8012b6a:	bd38      	pop	{r3, r4, r5, pc}
 8012b6c:	2001      	movs	r0, #1
 8012b6e:	e7fc      	b.n	8012b6a <Sscan::Uint16(char const*, char const*, unsigned short&)+0x32>
 8012b70:	2002      	movs	r0, #2
 8012b72:	e7fa      	b.n	8012b6a <Sscan::Uint16(char const*, char const*, unsigned short&)+0x32>

08012b74 <Sscan::Uint32(char const*, char const*, unsigned int&)>:
 8012b74:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012b76:	4615      	mov	r5, r2
 8012b78:	f000 f842 	bl	8012c00 <Sscan::checkName(char const*, char const*)>
 8012b7c:	b1f8      	cbz	r0, 8012bbe <Sscan::Uint32(char const*, char const*, unsigned int&)+0x4a>
 8012b7e:	2300      	movs	r3, #0
 8012b80:	4604      	mov	r4, r0
 8012b82:	461e      	mov	r6, r3
 8012b84:	270a      	movs	r7, #10
 8012b86:	7822      	ldrb	r2, [r4, #0]
 8012b88:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
 8012b8c:	2909      	cmp	r1, #9
 8012b8e:	d818      	bhi.n	8012bc2 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x4e>
 8012b90:	fba3 3107 	umull	r3, r1, r3, r7
 8012b94:	fb07 1106 	mla	r1, r7, r6, r1
 8012b98:	3b30      	subs	r3, #48	; 0x30
 8012b9a:	f141 31ff 	adc.w	r1, r1, #4294967295	; 0xffffffff
 8012b9e:	18d3      	adds	r3, r2, r3
 8012ba0:	f141 0600 	adc.w	r6, r1, #0
 8012ba4:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8012ba8:	f011 00df 	ands.w	r0, r1, #223	; 0xdf
 8012bac:	d1eb      	bne.n	8012b86 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x12>
 8012bae:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8012bb2:	429a      	cmp	r2, r3
 8012bb4:	eb70 0206 	sbcs.w	r2, r0, r6
 8012bb8:	d303      	bcc.n	8012bc2 <Sscan::Uint32(char const*, char const*, unsigned int&)+0x4e>
 8012bba:	602b      	str	r3, [r5, #0]
 8012bbc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8012bbe:	2001      	movs	r0, #1
 8012bc0:	e7fc      	b.n	8012bbc <Sscan::Uint32(char const*, char const*, unsigned int&)+0x48>
 8012bc2:	2002      	movs	r0, #2
 8012bc4:	e7fa      	b.n	8012bbc <Sscan::Uint32(char const*, char const*, unsigned int&)+0x48>

08012bc6 <Sscan::Uint8(char const*, char const*, unsigned char&)>:
 8012bc6:	b538      	push	{r3, r4, r5, lr}
 8012bc8:	4615      	mov	r5, r2
 8012bca:	f000 f819 	bl	8012c00 <Sscan::checkName(char const*, char const*)>
 8012bce:	b198      	cbz	r0, 8012bf8 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x32>
 8012bd0:	4604      	mov	r4, r0
 8012bd2:	2100      	movs	r1, #0
 8012bd4:	220a      	movs	r2, #10
 8012bd6:	7823      	ldrb	r3, [r4, #0]
 8012bd8:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
 8012bdc:	2809      	cmp	r0, #9
 8012bde:	d80d      	bhi.n	8012bfc <Sscan::Uint8(char const*, char const*, unsigned char&)+0x36>
 8012be0:	fb02 3101 	mla	r1, r2, r1, r3
 8012be4:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8012be8:	3930      	subs	r1, #48	; 0x30
 8012bea:	f013 00df 	ands.w	r0, r3, #223	; 0xdf
 8012bee:	d1f2      	bne.n	8012bd6 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x10>
 8012bf0:	29ff      	cmp	r1, #255	; 0xff
 8012bf2:	d803      	bhi.n	8012bfc <Sscan::Uint8(char const*, char const*, unsigned char&)+0x36>
 8012bf4:	7029      	strb	r1, [r5, #0]
 8012bf6:	bd38      	pop	{r3, r4, r5, pc}
 8012bf8:	2001      	movs	r0, #1
 8012bfa:	e7fc      	b.n	8012bf6 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>
 8012bfc:	2002      	movs	r0, #2
 8012bfe:	e7fa      	b.n	8012bf6 <Sscan::Uint8(char const*, char const*, unsigned char&)+0x30>

08012c00 <Sscan::checkName(char const*, char const*)>:
 8012c00:	4603      	mov	r3, r0
 8012c02:	b510      	push	{r4, lr}
 8012c04:	3901      	subs	r1, #1
 8012c06:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 8012c0a:	461c      	mov	r4, r3
 8012c0c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8012c10:	b120      	cbz	r0, 8012c1c <Sscan::checkName(char const*, char const*)+0x1c>
 8012c12:	b10a      	cbz	r2, 8012c18 <Sscan::checkName(char const*, char const*)+0x18>
 8012c14:	4290      	cmp	r0, r2
 8012c16:	d0f6      	beq.n	8012c06 <Sscan::checkName(char const*, char const*)+0x6>
 8012c18:	2000      	movs	r0, #0
 8012c1a:	e006      	b.n	8012c2a <Sscan::checkName(char const*, char const*)+0x2a>
 8012c1c:	2a3d      	cmp	r2, #61	; 0x3d
 8012c1e:	d104      	bne.n	8012c2a <Sscan::checkName(char const*, char const*)+0x2a>
 8012c20:	7860      	ldrb	r0, [r4, #1]
 8012c22:	f010 00df 	ands.w	r0, r0, #223	; 0xdf
 8012c26:	d000      	beq.n	8012c2a <Sscan::checkName(char const*, char const*)+0x2a>
 8012c28:	1c60      	adds	r0, r4, #1
 8012c2a:	bd10      	pop	{r4, pc}

08012c2c <LightSet::GetSlotInfo(unsigned short, lightset::SlotInfo&)>:
 8012c2c:	2300      	movs	r3, #0
 8012c2e:	2001      	movs	r0, #1
 8012c30:	7093      	strb	r3, [r2, #2]
 8012c32:	8010      	strh	r0, [r2, #0]
 8012c34:	4770      	bx	lr
	...

08012c38 <Display::PrintInfo() [clone .isra.0]>:
 8012c38:	b910      	cbnz	r0, 8012c40 <Display::PrintInfo() [clone .isra.0]+0x8>
 8012c3a:	4803      	ldr	r0, [pc, #12]	; (8012c48 <Display::PrintInfo() [clone .isra.0]+0x10>)
 8012c3c:	f000 bde7 	b.w	801380e <puts>
 8012c40:	6803      	ldr	r3, [r0, #0]
 8012c42:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8012c44:	4718      	bx	r3
 8012c46:	bf00      	nop
 8012c48:	08017b6b 	stmdaeq	r1, {r0, r1, r3, r5, r6, r8, r9, fp, ip, sp, lr}

08012c4c <HAL_I2C::WriteRegister(unsigned char, unsigned short)>:
 8012c4c:	b513      	push	{r0, r1, r4, lr}
 8012c4e:	4604      	mov	r4, r0
 8012c50:	0a13      	lsrs	r3, r2, #8
 8012c52:	7800      	ldrb	r0, [r0, #0]
 8012c54:	f88d 1004 	strb.w	r1, [sp, #4]
 8012c58:	f88d 3005 	strb.w	r3, [sp, #5]
 8012c5c:	f88d 2006 	strb.w	r2, [sp, #6]
 8012c60:	f001 fe7e 	bl	8014960 <gd32_i2c_set_address(unsigned char)>
 8012c64:	6860      	ldr	r0, [r4, #4]
 8012c66:	f001 fe73 	bl	8014950 <gd32_i2c_set_baudrate(unsigned int)>
 8012c6a:	2103      	movs	r1, #3
 8012c6c:	a801      	add	r0, sp, #4
 8012c6e:	f001 fe7d 	bl	801496c <gd32_i2c_write(char const*, unsigned int)>
 8012c72:	b002      	add	sp, #8
 8012c74:	bd10      	pop	{r4, pc}

08012c76 <HAL_I2C::IsConnected_(unsigned char, unsigned int)>:
 8012c76:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012c78:	460d      	mov	r5, r1
 8012c7a:	4604      	mov	r4, r0
 8012c7c:	f001 fe70 	bl	8014960 <gd32_i2c_set_address(unsigned char)>
 8012c80:	4628      	mov	r0, r5
 8012c82:	f001 fe65 	bl	8014950 <gd32_i2c_set_baudrate(unsigned int)>
 8012c86:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8012c8a:	2b07      	cmp	r3, #7
 8012c8c:	d902      	bls.n	8012c94 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x1e>
 8012c8e:	3c50      	subs	r4, #80	; 0x50
 8012c90:	2c0f      	cmp	r4, #15
 8012c92:	d809      	bhi.n	8012ca8 <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x32>
 8012c94:	2101      	movs	r1, #1
 8012c96:	f10d 0007 	add.w	r0, sp, #7
 8012c9a:	f001 fecd 	bl	8014a38 <gd32_i2c_read(char*, unsigned int)>
 8012c9e:	fab0 f080 	clz	r0, r0
 8012ca2:	0940      	lsrs	r0, r0, #5
 8012ca4:	b003      	add	sp, #12
 8012ca6:	bd30      	pop	{r4, r5, pc}
 8012ca8:	2100      	movs	r1, #0
 8012caa:	4608      	mov	r0, r1
 8012cac:	f001 fe5e 	bl	801496c <gd32_i2c_write(char const*, unsigned int)>
 8012cb0:	e7f5      	b.n	8012c9e <HAL_I2C::IsConnected_(unsigned char, unsigned int)+0x28>

08012cb2 <Display::Detect7Segment()>:
 8012cb2:	b538      	push	{r3, r4, r5, lr}
 8012cb4:	68c1      	ldr	r1, [r0, #12]
 8012cb6:	4604      	mov	r4, r0
 8012cb8:	7a00      	ldrb	r0, [r0, #8]
 8012cba:	f7ff ffdc 	bl	8012c76 <HAL_I2C::IsConnected_(unsigned char, unsigned int)>
 8012cbe:	7460      	strb	r0, [r4, #17]
 8012cc0:	b170      	cbz	r0, 8012ce0 <Display::Detect7Segment()+0x2e>
 8012cc2:	2200      	movs	r2, #0
 8012cc4:	f104 0508 	add.w	r5, r4, #8
 8012cc8:	4611      	mov	r1, r2
 8012cca:	4628      	mov	r0, r5
 8012ccc:	f7ff ffbe 	bl	8012c4c <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 8012cd0:	7c63      	ldrb	r3, [r4, #17]
 8012cd2:	b12b      	cbz	r3, 8012ce0 <Display::Detect7Segment()+0x2e>
 8012cd4:	f24c 02ff 	movw	r2, #49407	; 0xc0ff
 8012cd8:	2112      	movs	r1, #18
 8012cda:	4628      	mov	r0, r5
 8012cdc:	f7ff ffb6 	bl	8012c4c <HAL_I2C::WriteRegister(unsigned char, unsigned short)>
 8012ce0:	bd38      	pop	{r3, r4, r5, pc}

08012ce2 <Display::Detect(display::Type)>:
 8012ce2:	2902      	cmp	r1, #2
 8012ce4:	b538      	push	{r3, r4, r5, lr}
 8012ce6:	4604      	mov	r4, r0
 8012ce8:	d014      	beq.n	8012d14 <Display::Detect(display::Type)+0x32>
 8012cea:	2904      	cmp	r1, #4
 8012cec:	d01b      	beq.n	8012d26 <Display::Detect(display::Type)+0x44>
 8012cee:	69a0      	ldr	r0, [r4, #24]
 8012cf0:	b168      	cbz	r0, 8012d0e <Display::Detect(display::Type)+0x2c>
 8012cf2:	6803      	ldr	r3, [r0, #0]
 8012cf4:	689b      	ldr	r3, [r3, #8]
 8012cf6:	4798      	blx	r3
 8012cf8:	4603      	mov	r3, r0
 8012cfa:	69a0      	ldr	r0, [r4, #24]
 8012cfc:	b9ab      	cbnz	r3, 8012d2a <Display::Detect(display::Type)+0x48>
 8012cfe:	b110      	cbz	r0, 8012d06 <Display::Detect(display::Type)+0x24>
 8012d00:	6803      	ldr	r3, [r0, #0]
 8012d02:	685b      	ldr	r3, [r3, #4]
 8012d04:	4798      	blx	r3
 8012d06:	2300      	movs	r3, #0
 8012d08:	61a3      	str	r3, [r4, #24]
 8012d0a:	2304      	movs	r3, #4
 8012d0c:	6023      	str	r3, [r4, #0]
 8012d0e:	2300      	movs	r3, #0
 8012d10:	6163      	str	r3, [r4, #20]
 8012d12:	e010      	b.n	8012d36 <Display::Detect(display::Type)+0x54>
 8012d14:	2018      	movs	r0, #24
 8012d16:	f000 fc7f 	bl	8013618 <operator new(unsigned int)>
 8012d1a:	4605      	mov	r5, r0
 8012d1c:	2100      	movs	r1, #0
 8012d1e:	f000 f89b 	bl	8012e58 <Ssd1306::Ssd1306(TOledPanel)>
 8012d22:	61a5      	str	r5, [r4, #24]
 8012d24:	e7e3      	b.n	8012cee <Display::Detect(display::Type)+0xc>
 8012d26:	6001      	str	r1, [r0, #0]
 8012d28:	e7e1      	b.n	8012cee <Display::Detect(display::Type)+0xc>
 8012d2a:	6803      	ldr	r3, [r0, #0]
 8012d2c:	68db      	ldr	r3, [r3, #12]
 8012d2e:	4798      	blx	r3
 8012d30:	69a3      	ldr	r3, [r4, #24]
 8012d32:	2b00      	cmp	r3, #0
 8012d34:	d0eb      	beq.n	8012d0e <Display::Detect(display::Type)+0x2c>
 8012d36:	bd38      	pop	{r3, r4, r5, pc}

08012d38 <Display::Display()>:
 8012d38:	2304      	movs	r3, #4
 8012d3a:	b510      	push	{r4, lr}
 8012d3c:	6003      	str	r3, [r0, #0]
 8012d3e:	4b0d      	ldr	r3, [pc, #52]	; (8012d74 <Display::Display()+0x3c>)
 8012d40:	4604      	mov	r4, r0
 8012d42:	681b      	ldr	r3, [r3, #0]
 8012d44:	4a0c      	ldr	r2, [pc, #48]	; (8012d78 <Display::Display()+0x40>)
 8012d46:	6043      	str	r3, [r0, #4]
 8012d48:	2321      	movs	r3, #33	; 0x21
 8012d4a:	7203      	strb	r3, [r0, #8]
 8012d4c:	4b0b      	ldr	r3, [pc, #44]	; (8012d7c <Display::Display()+0x44>)
 8012d4e:	2102      	movs	r1, #2
 8012d50:	60c3      	str	r3, [r0, #12]
 8012d52:	2300      	movs	r3, #0
 8012d54:	e9c0 2305 	strd	r2, r3, [r0, #20]
 8012d58:	8203      	strh	r3, [r0, #16]
 8012d5a:	4b09      	ldr	r3, [pc, #36]	; (8012d80 <Display::Display()+0x48>)
 8012d5c:	6018      	str	r0, [r3, #0]
 8012d5e:	f7ff ffc0 	bl	8012ce2 <Display::Detect(display::Type)>
 8012d62:	4620      	mov	r0, r4
 8012d64:	f7ff ffa5 	bl	8012cb2 <Display::Detect7Segment()>
 8012d68:	69a0      	ldr	r0, [r4, #24]
 8012d6a:	f7ff ff65 	bl	8012c38 <Display::PrintInfo() [clone .isra.0]>
 8012d6e:	4620      	mov	r0, r4
 8012d70:	bd10      	pop	{r4, pc}
 8012d72:	bf00      	nop
 8012d74:	20013df4 	strdcs	r3, [r1], -r4
 8012d78:	000493e0 	andeq	r9, r4, r0, ror #7
 8012d7c:	00061a80 	andeq	r1, r6, r0, lsl #21
 8012d80:	20013ce4 	andcs	r3, r1, r4, ror #25

08012d84 <Ssd1306::~Ssd1306()>:
 8012d84:	4770      	bx	lr

08012d86 <Ssd1306::SetCursor(unsigned int)>:
 8012d86:	4770      	bx	lr

08012d88 <Ssd1306::PrintInfo()>:
 8012d88:	b410      	push	{r4}
 8012d8a:	4906      	ldr	r1, [pc, #24]	; (8012da4 <Ssd1306::PrintInfo()+0x1c>)
 8012d8c:	7c44      	ldrb	r4, [r0, #17]
 8012d8e:	7903      	ldrb	r3, [r0, #4]
 8012d90:	7942      	ldrb	r2, [r0, #5]
 8012d92:	4805      	ldr	r0, [pc, #20]	; (8012da8 <Ssd1306::PrintInfo()+0x20>)
 8012d94:	2c00      	cmp	r4, #0
 8012d96:	bf08      	it	eq
 8012d98:	4601      	moveq	r1, r0
 8012d9a:	4804      	ldr	r0, [pc, #16]	; (8012dac <Ssd1306::PrintInfo()+0x24>)
 8012d9c:	bc10      	pop	{r4}
 8012d9e:	f7f6 b885 	b.w	8008eac <printf>
 8012da2:	bf00      	nop
 8012da4:	08017b7c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r8, r9, fp, ip, sp, lr}
 8012da8:	08017b83 	stmdaeq	r1, {r0, r1, r7, r8, r9, fp, ip, sp, lr}
 8012dac:	08017b8b 	stmdaeq	r1, {r0, r1, r3, r7, r8, r9, fp, ip, sp, lr}

08012db0 <Ssd1306::~Ssd1306()>:
 8012db0:	b510      	push	{r4, lr}
 8012db2:	4604      	mov	r4, r0
 8012db4:	f000 fc2c 	bl	8013610 <operator delete(void*)>
 8012db8:	4620      	mov	r0, r4
 8012dba:	bd10      	pop	{r4, pc}

08012dbc <HAL_I2C::Setup()>:
 8012dbc:	b510      	push	{r4, lr}
 8012dbe:	4604      	mov	r4, r0
 8012dc0:	7800      	ldrb	r0, [r0, #0]
 8012dc2:	f001 fdcd 	bl	8014960 <gd32_i2c_set_address(unsigned char)>
 8012dc6:	6860      	ldr	r0, [r4, #4]
 8012dc8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012dcc:	f001 bdc0 	b.w	8014950 <gd32_i2c_set_baudrate(unsigned int)>

08012dd0 <Ssd1306::PutChar(int)>:
 8012dd0:	b510      	push	{r4, lr}
 8012dd2:	f1a1 0420 	sub.w	r4, r1, #32
 8012dd6:	2c5f      	cmp	r4, #95	; 0x5f
 8012dd8:	bf88      	it	hi
 8012dda:	2400      	movhi	r4, #0
 8012ddc:	3008      	adds	r0, #8
 8012dde:	f7ff ffed 	bl	8012dbc <HAL_I2C::Setup()>
 8012de2:	4804      	ldr	r0, [pc, #16]	; (8012df4 <Ssd1306::PutChar(int)+0x24>)
 8012de4:	ebc4 04c4 	rsb	r4, r4, r4, lsl #3
 8012de8:	4420      	add	r0, r4
 8012dea:	2107      	movs	r1, #7
 8012dec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012df0:	f001 bdbc 	b.w	801496c <gd32_i2c_write(char const*, unsigned int)>
 8012df4:	08017ba0 	stmdaeq	r1, {r5, r7, r8, r9, fp, ip, sp, lr}

08012df8 <Ssd1306::PutString(char const*)>:
 8012df8:	b538      	push	{r3, r4, r5, lr}
 8012dfa:	4605      	mov	r5, r0
 8012dfc:	1e4c      	subs	r4, r1, #1
 8012dfe:	f814 1f01 	ldrb.w	r1, [r4, #1]!
 8012e02:	b119      	cbz	r1, 8012e0c <Ssd1306::PutString(char const*)+0x14>
 8012e04:	4628      	mov	r0, r5
 8012e06:	f7ff ffe3 	bl	8012dd0 <Ssd1306::PutChar(int)>
 8012e0a:	e7f8      	b.n	8012dfe <Ssd1306::PutString(char const*)+0x6>
 8012e0c:	bd38      	pop	{r3, r4, r5, pc}

08012e0e <Ssd1306::Text(char const*, unsigned int)>:
 8012e0e:	b570      	push	{r4, r5, r6, lr}
 8012e10:	7903      	ldrb	r3, [r0, #4]
 8012e12:	4605      	mov	r5, r0
 8012e14:	460c      	mov	r4, r1
 8012e16:	4293      	cmp	r3, r2
 8012e18:	bf94      	ite	ls
 8012e1a:	18ce      	addls	r6, r1, r3
 8012e1c:	188e      	addhi	r6, r1, r2
 8012e1e:	42b4      	cmp	r4, r6
 8012e20:	d005      	beq.n	8012e2e <Ssd1306::Text(char const*, unsigned int)+0x20>
 8012e22:	4628      	mov	r0, r5
 8012e24:	f814 1b01 	ldrb.w	r1, [r4], #1
 8012e28:	f7ff ffd2 	bl	8012dd0 <Ssd1306::PutChar(int)>
 8012e2c:	e7f7      	b.n	8012e1e <Ssd1306::Text(char const*, unsigned int)+0x10>
 8012e2e:	bd70      	pop	{r4, r5, r6, pc}

08012e30 <Ssd1306::InitMembers()>:
 8012e30:	7c03      	ldrb	r3, [r0, #16]
 8012e32:	b12b      	cbz	r3, 8012e40 <Ssd1306::InitMembers()+0x10>
 8012e34:	3b01      	subs	r3, #1
 8012e36:	2b01      	cmp	r3, #1
 8012e38:	d908      	bls.n	8012e4c <Ssd1306::InitMembers()+0x1c>
 8012e3a:	f640 0315 	movw	r3, #2069	; 0x815
 8012e3e:	e007      	b.n	8012e50 <Ssd1306::InitMembers()+0x20>
 8012e40:	f640 0315 	movw	r3, #2069	; 0x815
 8012e44:	8083      	strh	r3, [r0, #4]
 8012e46:	2308      	movs	r3, #8
 8012e48:	6143      	str	r3, [r0, #20]
 8012e4a:	4770      	bx	lr
 8012e4c:	f240 4315 	movw	r3, #1045	; 0x415
 8012e50:	8083      	strh	r3, [r0, #4]
 8012e52:	2304      	movs	r3, #4
 8012e54:	e7f8      	b.n	8012e48 <Ssd1306::InitMembers()+0x18>
	...

08012e58 <Ssd1306::Ssd1306(TOledPanel)>:
 8012e58:	4a08      	ldr	r2, [pc, #32]	; (8012e7c <Ssd1306::Ssd1306(TOledPanel)+0x24>)
 8012e5a:	b508      	push	{r3, lr}
 8012e5c:	6002      	str	r2, [r0, #0]
 8012e5e:	227f      	movs	r2, #127	; 0x7f
 8012e60:	80c2      	strh	r2, [r0, #6]
 8012e62:	223c      	movs	r2, #60	; 0x3c
 8012e64:	7202      	strb	r2, [r0, #8]
 8012e66:	4a06      	ldr	r2, [pc, #24]	; (8012e80 <Ssd1306::Ssd1306(TOledPanel)+0x28>)
 8012e68:	7401      	strb	r1, [r0, #16]
 8012e6a:	60c2      	str	r2, [r0, #12]
 8012e6c:	2200      	movs	r2, #0
 8012e6e:	7442      	strb	r2, [r0, #17]
 8012e70:	4a04      	ldr	r2, [pc, #16]	; (8012e84 <Ssd1306::Ssd1306(TOledPanel)+0x2c>)
 8012e72:	6010      	str	r0, [r2, #0]
 8012e74:	f7ff ffdc 	bl	8012e30 <Ssd1306::InitMembers()>
 8012e78:	bd08      	pop	{r3, pc}
 8012e7a:	bf00      	nop
 8012e7c:	08017e78 	stmdaeq	r1, {r3, r4, r5, r6, r9, sl, fp, ip, sp, lr}
 8012e80:	00061a80 	andeq	r1, r6, r0, lsl #21
 8012e84:	20013d70 	andcs	r3, r1, r0, ror sp

08012e88 <Ssd1306::SendCommand(unsigned char)>:
 8012e88:	2300      	movs	r3, #0
 8012e8a:	b507      	push	{r0, r1, r2, lr}
 8012e8c:	3008      	adds	r0, #8
 8012e8e:	f88d 3004 	strb.w	r3, [sp, #4]
 8012e92:	f88d 1005 	strb.w	r1, [sp, #5]
 8012e96:	f7ff ff91 	bl	8012dbc <HAL_I2C::Setup()>
 8012e9a:	2102      	movs	r1, #2
 8012e9c:	a801      	add	r0, sp, #4
 8012e9e:	f001 fd65 	bl	801496c <gd32_i2c_write(char const*, unsigned int)>
 8012ea2:	b003      	add	sp, #12
 8012ea4:	f85d fb04 	ldr.w	pc, [sp], #4

08012ea8 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>:
 8012ea8:	2914      	cmp	r1, #20
 8012eaa:	b570      	push	{r4, r5, r6, lr}
 8012eac:	4605      	mov	r5, r0
 8012eae:	4616      	mov	r6, r2
 8012eb0:	d81c      	bhi.n	8012eec <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 8012eb2:	7943      	ldrb	r3, [r0, #5]
 8012eb4:	4293      	cmp	r3, r2
 8012eb6:	d919      	bls.n	8012eec <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x44>
 8012eb8:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8012ebc:	7c43      	ldrb	r3, [r0, #17]
 8012ebe:	004c      	lsls	r4, r1, #1
 8012ec0:	b2e4      	uxtb	r4, r4
 8012ec2:	b10b      	cbz	r3, 8012ec8 <Ssd1306::SetCursorPos(unsigned char, unsigned char)+0x20>
 8012ec4:	3404      	adds	r4, #4
 8012ec6:	b2e4      	uxtb	r4, r4
 8012ec8:	4628      	mov	r0, r5
 8012eca:	f004 010e 	and.w	r1, r4, #14
 8012ece:	f7ff ffdb 	bl	8012e88 <Ssd1306::SendCommand(unsigned char)>
 8012ed2:	0921      	lsrs	r1, r4, #4
 8012ed4:	4628      	mov	r0, r5
 8012ed6:	f041 0110 	orr.w	r1, r1, #16
 8012eda:	f7ff ffd5 	bl	8012e88 <Ssd1306::SendCommand(unsigned char)>
 8012ede:	4628      	mov	r0, r5
 8012ee0:	f046 01b0 	orr.w	r1, r6, #176	; 0xb0
 8012ee4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012ee8:	f7ff bfce 	b.w	8012e88 <Ssd1306::SendCommand(unsigned char)>
 8012eec:	bd70      	pop	{r4, r5, r6, pc}

08012eee <Ssd1306::TextLine(unsigned char, char const*, unsigned int)>:
 8012eee:	b570      	push	{r4, r5, r6, lr}
 8012ef0:	4604      	mov	r4, r0
 8012ef2:	4615      	mov	r5, r2
 8012ef4:	461e      	mov	r6, r3
 8012ef6:	b171      	cbz	r1, 8012f16 <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x28>
 8012ef8:	7943      	ldrb	r3, [r0, #5]
 8012efa:	428b      	cmp	r3, r1
 8012efc:	d30b      	bcc.n	8012f16 <Ssd1306::TextLine(unsigned char, char const*, unsigned int)+0x28>
 8012efe:	3901      	subs	r1, #1
 8012f00:	b2ca      	uxtb	r2, r1
 8012f02:	2100      	movs	r1, #0
 8012f04:	f7ff ffd0 	bl	8012ea8 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8012f08:	4632      	mov	r2, r6
 8012f0a:	4629      	mov	r1, r5
 8012f0c:	4620      	mov	r0, r4
 8012f0e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012f12:	f7ff bf7c 	b.w	8012e0e <Ssd1306::Text(char const*, unsigned int)>
 8012f16:	bd70      	pop	{r4, r5, r6, pc}

08012f18 <Ssd1306::ClearLine(unsigned char)>:
 8012f18:	b538      	push	{r3, r4, r5, lr}
 8012f1a:	4605      	mov	r5, r0
 8012f1c:	b1b9      	cbz	r1, 8012f4e <Ssd1306::ClearLine(unsigned char)+0x36>
 8012f1e:	7943      	ldrb	r3, [r0, #5]
 8012f20:	428b      	cmp	r3, r1
 8012f22:	d314      	bcc.n	8012f4e <Ssd1306::ClearLine(unsigned char)+0x36>
 8012f24:	3901      	subs	r1, #1
 8012f26:	b2cc      	uxtb	r4, r1
 8012f28:	4622      	mov	r2, r4
 8012f2a:	2100      	movs	r1, #0
 8012f2c:	f7ff ffbc 	bl	8012ea8 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8012f30:	f105 0008 	add.w	r0, r5, #8
 8012f34:	f7ff ff42 	bl	8012dbc <HAL_I2C::Setup()>
 8012f38:	2181      	movs	r1, #129	; 0x81
 8012f3a:	4805      	ldr	r0, [pc, #20]	; (8012f50 <Ssd1306::ClearLine(unsigned char)+0x38>)
 8012f3c:	f001 fd16 	bl	801496c <gd32_i2c_write(char const*, unsigned int)>
 8012f40:	4622      	mov	r2, r4
 8012f42:	4628      	mov	r0, r5
 8012f44:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8012f48:	2100      	movs	r1, #0
 8012f4a:	f7ff bfad 	b.w	8012ea8 <Ssd1306::SetCursorPos(unsigned char, unsigned char)>
 8012f4e:	bd38      	pop	{r3, r4, r5, pc}
 8012f50:	20013ce8 	andcs	r3, r1, r8, ror #25

08012f54 <Ssd1306::SetSleep(bool)>:
 8012f54:	b111      	cbz	r1, 8012f5c <Ssd1306::SetSleep(bool)+0x8>
 8012f56:	21ae      	movs	r1, #174	; 0xae
 8012f58:	f7ff bf96 	b.w	8012e88 <Ssd1306::SendCommand(unsigned char)>
 8012f5c:	21af      	movs	r1, #175	; 0xaf
 8012f5e:	e7fb      	b.n	8012f58 <Ssd1306::SetSleep(bool)+0x4>

08012f60 <Ssd1306::SetContrast(unsigned char)>:
 8012f60:	b538      	push	{r3, r4, r5, lr}
 8012f62:	4604      	mov	r4, r0
 8012f64:	460d      	mov	r5, r1
 8012f66:	7181      	strb	r1, [r0, #6]
 8012f68:	2181      	movs	r1, #129	; 0x81
 8012f6a:	f7ff ff8d 	bl	8012e88 <Ssd1306::SendCommand(unsigned char)>
 8012f6e:	4629      	mov	r1, r5
 8012f70:	4620      	mov	r0, r4
 8012f72:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8012f76:	f7ff bf87 	b.w	8012e88 <Ssd1306::SendCommand(unsigned char)>

08012f7a <Ssd1306::SetFlipVertically(bool)>:
 8012f7a:	b510      	push	{r4, lr}
 8012f7c:	4604      	mov	r4, r0
 8012f7e:	71c1      	strb	r1, [r0, #7]
 8012f80:	b141      	cbz	r1, 8012f94 <Ssd1306::SetFlipVertically(bool)+0x1a>
 8012f82:	21c0      	movs	r1, #192	; 0xc0
 8012f84:	f7ff ff80 	bl	8012e88 <Ssd1306::SendCommand(unsigned char)>
 8012f88:	21a0      	movs	r1, #160	; 0xa0
 8012f8a:	4620      	mov	r0, r4
 8012f8c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012f90:	f7ff bf7a 	b.w	8012e88 <Ssd1306::SendCommand(unsigned char)>
 8012f94:	21c8      	movs	r1, #200	; 0xc8
 8012f96:	f7ff ff77 	bl	8012e88 <Ssd1306::SendCommand(unsigned char)>
 8012f9a:	21a1      	movs	r1, #161	; 0xa1
 8012f9c:	e7f5      	b.n	8012f8a <Ssd1306::SetFlipVertically(bool)+0x10>
	...

08012fa0 <Ssd1306::CheckSH1106()>:
 8012fa0:	b570      	push	{r4, r5, r6, lr}
 8012fa2:	4604      	mov	r4, r0
 8012fa4:	b086      	sub	sp, #24
 8012fa6:	2100      	movs	r1, #0
 8012fa8:	f7ff ff6e 	bl	8012e88 <Ssd1306::SendCommand(unsigned char)>
 8012fac:	2190      	movs	r1, #144	; 0x90
 8012fae:	4620      	mov	r0, r4
 8012fb0:	f7ff ff6a 	bl	8012e88 <Ssd1306::SendCommand(unsigned char)>
 8012fb4:	21b0      	movs	r1, #176	; 0xb0
 8012fb6:	4620      	mov	r0, r4
 8012fb8:	f7ff ff66 	bl	8012e88 <Ssd1306::SendCommand(unsigned char)>
 8012fbc:	4b22      	ldr	r3, [pc, #136]	; (8013048 <Ssd1306::CheckSH1106()+0xa8>)
 8012fbe:	f104 0608 	add.w	r6, r4, #8
 8012fc2:	6818      	ldr	r0, [r3, #0]
 8012fc4:	791b      	ldrb	r3, [r3, #4]
 8012fc6:	ad02      	add	r5, sp, #8
 8012fc8:	9002      	str	r0, [sp, #8]
 8012fca:	4630      	mov	r0, r6
 8012fcc:	712b      	strb	r3, [r5, #4]
 8012fce:	f7ff fef5 	bl	8012dbc <HAL_I2C::Setup()>
 8012fd2:	2105      	movs	r1, #5
 8012fd4:	4628      	mov	r0, r5
 8012fd6:	f001 fcc9 	bl	801496c <gd32_i2c_write(char const*, unsigned int)>
 8012fda:	2100      	movs	r1, #0
 8012fdc:	4620      	mov	r0, r4
 8012fde:	f7ff ff53 	bl	8012e88 <Ssd1306::SendCommand(unsigned char)>
 8012fe2:	2190      	movs	r1, #144	; 0x90
 8012fe4:	4620      	mov	r0, r4
 8012fe6:	f7ff ff4f 	bl	8012e88 <Ssd1306::SendCommand(unsigned char)>
 8012fea:	21b0      	movs	r1, #176	; 0xb0
 8012fec:	4620      	mov	r0, r4
 8012fee:	f7ff ff4b 	bl	8012e88 <Ssd1306::SendCommand(unsigned char)>
 8012ff2:	2300      	movs	r3, #0
 8012ff4:	9304      	str	r3, [sp, #16]
 8012ff6:	f88d 3014 	strb.w	r3, [sp, #20]
 8012ffa:	2340      	movs	r3, #64	; 0x40
 8012ffc:	4630      	mov	r0, r6
 8012ffe:	f88d 3007 	strb.w	r3, [sp, #7]
 8013002:	f7ff fedb 	bl	8012dbc <HAL_I2C::Setup()>
 8013006:	2101      	movs	r1, #1
 8013008:	f10d 0007 	add.w	r0, sp, #7
 801300c:	f001 fcae 	bl	801496c <gd32_i2c_write(char const*, unsigned int)>
 8013010:	4630      	mov	r0, r6
 8013012:	f7ff fed3 	bl	8012dbc <HAL_I2C::Setup()>
 8013016:	2105      	movs	r1, #5
 8013018:	a804      	add	r0, sp, #16
 801301a:	f001 fd0d 	bl	8014a38 <gd32_i2c_read(char*, unsigned int)>
 801301e:	2201      	movs	r2, #1
 8013020:	5cab      	ldrb	r3, [r5, r2]
 8013022:	a904      	add	r1, sp, #16
 8013024:	3201      	adds	r2, #1
 8013026:	4411      	add	r1, r2
 8013028:	f811 1c01 	ldrb.w	r1, [r1, #-1]
 801302c:	428b      	cmp	r3, r1
 801302e:	d006      	beq.n	801303e <Ssd1306::CheckSH1106()+0x9e>
 8013030:	1a5b      	subs	r3, r3, r1
 8013032:	fab3 f383 	clz	r3, r3
 8013036:	095b      	lsrs	r3, r3, #5
 8013038:	7463      	strb	r3, [r4, #17]
 801303a:	b006      	add	sp, #24
 801303c:	bd70      	pop	{r4, r5, r6, pc}
 801303e:	2a05      	cmp	r2, #5
 8013040:	d1ee      	bne.n	8013020 <Ssd1306::CheckSH1106()+0x80>
 8013042:	2300      	movs	r3, #0
 8013044:	e7f5      	b.n	8013032 <Ssd1306::CheckSH1106()+0x92>
 8013046:	bf00      	nop
 8013048:	08017b97 	stmdaeq	r1, {r0, r1, r2, r4, r7, r8, r9, fp, ip, sp, lr}

0801304c <Ssd1306::Cls()>:
 801304c:	7c43      	ldrb	r3, [r0, #17]
 801304e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013052:	2b00      	cmp	r3, #0
 8013054:	bf0c      	ite	eq
 8013056:	2500      	moveq	r5, #0
 8013058:	2504      	movne	r5, #4
 801305a:	4604      	mov	r4, r0
 801305c:	2600      	movs	r6, #0
 801305e:	f1a5 077f 	sub.w	r7, r5, #127	; 0x7f
 8013062:	f045 0810 	orr.w	r8, r5, #16
 8013066:	b2ff      	uxtb	r7, r7
 8013068:	6963      	ldr	r3, [r4, #20]
 801306a:	4629      	mov	r1, r5
 801306c:	42b3      	cmp	r3, r6
 801306e:	4620      	mov	r0, r4
 8013070:	d91b      	bls.n	80130aa <Ssd1306::Cls()+0x5e>
 8013072:	f7ff ff09 	bl	8012e88 <Ssd1306::SendCommand(unsigned char)>
 8013076:	4641      	mov	r1, r8
 8013078:	4620      	mov	r0, r4
 801307a:	f7ff ff05 	bl	8012e88 <Ssd1306::SendCommand(unsigned char)>
 801307e:	f066 014f 	orn	r1, r6, #79	; 0x4f
 8013082:	4620      	mov	r0, r4
 8013084:	b2c9      	uxtb	r1, r1
 8013086:	f7ff feff 	bl	8012e88 <Ssd1306::SendCommand(unsigned char)>
 801308a:	7c23      	ldrb	r3, [r4, #16]
 801308c:	b123      	cbz	r3, 8013098 <Ssd1306::Cls()+0x4c>
 801308e:	3b01      	subs	r3, #1
 8013090:	2b01      	cmp	r3, #1
 8013092:	d901      	bls.n	8013098 <Ssd1306::Cls()+0x4c>
 8013094:	3601      	adds	r6, #1
 8013096:	e7e7      	b.n	8013068 <Ssd1306::Cls()+0x1c>
 8013098:	f104 0008 	add.w	r0, r4, #8
 801309c:	f7ff fe8e 	bl	8012dbc <HAL_I2C::Setup()>
 80130a0:	4639      	mov	r1, r7
 80130a2:	4808      	ldr	r0, [pc, #32]	; (80130c4 <Ssd1306::Cls()+0x78>)
 80130a4:	f001 fc62 	bl	801496c <gd32_i2c_write(char const*, unsigned int)>
 80130a8:	e7f4      	b.n	8013094 <Ssd1306::Cls()+0x48>
 80130aa:	f7ff feed 	bl	8012e88 <Ssd1306::SendCommand(unsigned char)>
 80130ae:	4641      	mov	r1, r8
 80130b0:	4620      	mov	r0, r4
 80130b2:	f7ff fee9 	bl	8012e88 <Ssd1306::SendCommand(unsigned char)>
 80130b6:	4620      	mov	r0, r4
 80130b8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80130bc:	21b0      	movs	r1, #176	; 0xb0
 80130be:	f7ff bee3 	b.w	8012e88 <Ssd1306::SendCommand(unsigned char)>
 80130c2:	bf00      	nop
 80130c4:	20013ce8 	andcs	r3, r1, r8, ror #25

080130c8 <Ssd1306::Start()>:
 80130c8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80130ca:	7a04      	ldrb	r4, [r0, #8]
 80130cc:	68c6      	ldr	r6, [r0, #12]
 80130ce:	4605      	mov	r5, r0
 80130d0:	4620      	mov	r0, r4
 80130d2:	f001 fc45 	bl	8014960 <gd32_i2c_set_address(unsigned char)>
 80130d6:	4630      	mov	r0, r6
 80130d8:	f001 fc3a 	bl	8014950 <gd32_i2c_set_baudrate(unsigned int)>
 80130dc:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 80130e0:	2b07      	cmp	r3, #7
 80130e2:	d902      	bls.n	80130ea <Ssd1306::Start()+0x22>
 80130e4:	3c50      	subs	r4, #80	; 0x50
 80130e6:	2c0f      	cmp	r4, #15
 80130e8:	d80f      	bhi.n	801310a <Ssd1306::Start()+0x42>
 80130ea:	2101      	movs	r1, #1
 80130ec:	f10d 0007 	add.w	r0, sp, #7
 80130f0:	f001 fca2 	bl	8014a38 <gd32_i2c_read(char*, unsigned int)>
 80130f4:	fab0 f480 	clz	r4, r0
 80130f8:	0964      	lsrs	r4, r4, #5
 80130fa:	b35c      	cbz	r4, 8013154 <Ssd1306::Start()+0x8c>
 80130fc:	7c2e      	ldrb	r6, [r5, #16]
 80130fe:	b14e      	cbz	r6, 8013114 <Ssd1306::Start()+0x4c>
 8013100:	3e01      	subs	r6, #1
 8013102:	2e01      	cmp	r6, #1
 8013104:	d929      	bls.n	801315a <Ssd1306::Start()+0x92>
 8013106:	2400      	movs	r4, #0
 8013108:	e024      	b.n	8013154 <Ssd1306::Start()+0x8c>
 801310a:	2100      	movs	r1, #0
 801310c:	4608      	mov	r0, r1
 801310e:	f001 fc2d 	bl	801496c <gd32_i2c_write(char const*, unsigned int)>
 8013112:	e7ef      	b.n	80130f4 <Ssd1306::Start()+0x2c>
 8013114:	4f16      	ldr	r7, [pc, #88]	; (8013170 <Ssd1306::Start()+0xa8>)
 8013116:	4628      	mov	r0, r5
 8013118:	f817 1b01 	ldrb.w	r1, [r7], #1
 801311c:	3601      	adds	r6, #1
 801311e:	f7ff feb3 	bl	8012e88 <Ssd1306::SendCommand(unsigned char)>
 8013122:	2e18      	cmp	r6, #24
 8013124:	d1f7      	bne.n	8013116 <Ssd1306::Start()+0x4e>
 8013126:	2300      	movs	r3, #0
 8013128:	4a12      	ldr	r2, [pc, #72]	; (8013174 <Ssd1306::Start()+0xac>)
 801312a:	4618      	mov	r0, r3
 801312c:	4611      	mov	r1, r2
 801312e:	3301      	adds	r3, #1
 8013130:	2b86      	cmp	r3, #134	; 0x86
 8013132:	f802 0b01 	strb.w	r0, [r2], #1
 8013136:	d1fa      	bne.n	801312e <Ssd1306::Start()+0x66>
 8013138:	2340      	movs	r3, #64	; 0x40
 801313a:	4628      	mov	r0, r5
 801313c:	700b      	strb	r3, [r1, #0]
 801313e:	f7ff ff2f 	bl	8012fa0 <Ssd1306::CheckSH1106()>
 8013142:	4628      	mov	r0, r5
 8013144:	f7ff ff82 	bl	801304c <Ssd1306::Cls()>
 8013148:	21af      	movs	r1, #175	; 0xaf
 801314a:	4628      	mov	r0, r5
 801314c:	f7ff fe9c 	bl	8012e88 <Ssd1306::SendCommand(unsigned char)>
 8013150:	2301      	movs	r3, #1
 8013152:	71eb      	strb	r3, [r5, #7]
 8013154:	4620      	mov	r0, r4
 8013156:	b003      	add	sp, #12
 8013158:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801315a:	2600      	movs	r6, #0
 801315c:	4f06      	ldr	r7, [pc, #24]	; (8013178 <Ssd1306::Start()+0xb0>)
 801315e:	4628      	mov	r0, r5
 8013160:	f817 1b01 	ldrb.w	r1, [r7], #1
 8013164:	3601      	adds	r6, #1
 8013166:	f7ff fe8f 	bl	8012e88 <Ssd1306::SendCommand(unsigned char)>
 801316a:	2e18      	cmp	r6, #24
 801316c:	d1f7      	bne.n	801315e <Ssd1306::Start()+0x96>
 801316e:	e7da      	b.n	8013126 <Ssd1306::Start()+0x5e>
 8013170:	08017e58 	stmdaeq	r1, {r3, r4, r6, r9, sl, fp, ip, sp, lr}
 8013174:	20013ce8 	andcs	r3, r1, r8, ror #25
 8013178:	08017e40 	stmdaeq	r1, {r6, r9, sl, fp, ip, sp, lr}

0801317c <console_init>:
 801317c:	b508      	push	{r3, lr}
 801317e:	f000 fc39 	bl	80139f4 <uart0_init>
 8013182:	4804      	ldr	r0, [pc, #16]	; (8013194 <console_init+0x18>)
 8013184:	f000 fc66 	bl	8013a54 <uart0_puts>
 8013188:	4803      	ldr	r0, [pc, #12]	; (8013198 <console_init+0x1c>)
 801318a:	f000 fc63 	bl	8013a54 <uart0_puts>
 801318e:	2000      	movs	r0, #0
 8013190:	bd08      	pop	{r3, pc}
 8013192:	bf00      	nop
 8013194:	080159e3 	stmdaeq	r1, {r0, r1, r5, r6, r7, r8, fp, ip, lr}
 8013198:	08017eb0 	stmdaeq	r1, {r4, r5, r7, r9, sl, fp, ip, sp, lr}

0801319c <console_putc>:
 801319c:	280a      	cmp	r0, #10
 801319e:	b510      	push	{r4, lr}
 80131a0:	4604      	mov	r4, r0
 80131a2:	d102      	bne.n	80131aa <console_putc+0xe>
 80131a4:	200d      	movs	r0, #13
 80131a6:	f000 fc35 	bl	8013a14 <uart0_putc>
 80131aa:	4620      	mov	r0, r4
 80131ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80131b0:	f000 bc30 	b.w	8013a14 <uart0_putc>

080131b4 <console_puts>:
 80131b4:	f000 bc4e 	b.w	8013a54 <uart0_puts>

080131b8 <console_set_fg_color>:
 80131b8:	2807      	cmp	r0, #7
 80131ba:	d810      	bhi.n	80131de <console_set_fg_color+0x26>
 80131bc:	e8df f000 	tbb	[pc, r0]
 80131c0:	0b090704 	bleq	8254dd8 <__exidx_end+0x23ce2c>
 80131c4:	0d0f0f0f 	stceq	15, cr0, [pc, #-60]	; 8013190 <console_init+0x14>
 80131c8:	4806      	ldr	r0, [pc, #24]	; (80131e4 <console_set_fg_color+0x2c>)
 80131ca:	f000 bc43 	b.w	8013a54 <uart0_puts>
 80131ce:	4806      	ldr	r0, [pc, #24]	; (80131e8 <console_set_fg_color+0x30>)
 80131d0:	e7fb      	b.n	80131ca <console_set_fg_color+0x12>
 80131d2:	4806      	ldr	r0, [pc, #24]	; (80131ec <console_set_fg_color+0x34>)
 80131d4:	e7f9      	b.n	80131ca <console_set_fg_color+0x12>
 80131d6:	4806      	ldr	r0, [pc, #24]	; (80131f0 <console_set_fg_color+0x38>)
 80131d8:	e7f7      	b.n	80131ca <console_set_fg_color+0x12>
 80131da:	4806      	ldr	r0, [pc, #24]	; (80131f4 <console_set_fg_color+0x3c>)
 80131dc:	e7f5      	b.n	80131ca <console_set_fg_color+0x12>
 80131de:	4806      	ldr	r0, [pc, #24]	; (80131f8 <console_set_fg_color+0x40>)
 80131e0:	e7f3      	b.n	80131ca <console_set_fg_color+0x12>
 80131e2:	bf00      	nop
 80131e4:	08017eb6 	stmdaeq	r1, {r1, r2, r4, r5, r7, r9, sl, fp, ip, sp, lr}
 80131e8:	08017ebc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r9, sl, fp, ip, sp, lr}
 80131ec:	08017ec2 	stmdaeq	r1, {r1, r6, r7, r9, sl, fp, ip, sp, lr}
 80131f0:	08017ec8 	stmdaeq	r1, {r3, r6, r7, r9, sl, fp, ip, sp, lr}
 80131f4:	080159e3 	stmdaeq	r1, {r0, r1, r5, r6, r7, r8, fp, ip, lr}
 80131f8:	08017ece 	stmdaeq	r1, {r1, r2, r3, r6, r7, r9, sl, fp, ip, sp, lr}

080131fc <console_error>:
 80131fc:	b510      	push	{r4, lr}
 80131fe:	4604      	mov	r4, r0
 8013200:	4805      	ldr	r0, [pc, #20]	; (8013218 <console_error+0x1c>)
 8013202:	f000 fc27 	bl	8013a54 <uart0_puts>
 8013206:	4620      	mov	r0, r4
 8013208:	f000 fc24 	bl	8013a54 <uart0_puts>
 801320c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013210:	4802      	ldr	r0, [pc, #8]	; (801321c <console_error+0x20>)
 8013212:	f000 bc1f 	b.w	8013a54 <uart0_puts>
 8013216:	bf00      	nop
 8013218:	08017ebc 	stmdaeq	r1, {r2, r3, r4, r5, r7, r9, sl, fp, ip, sp, lr}
 801321c:	080159e3 	stmdaeq	r1, {r0, r1, r5, r6, r7, r8, fp, ip, lr}

08013220 <console_status>:
 8013220:	b510      	push	{r4, lr}
 8013222:	460c      	mov	r4, r1
 8013224:	b280      	uxth	r0, r0
 8013226:	f7ff ffc7 	bl	80131b8 <console_set_fg_color>
 801322a:	4807      	ldr	r0, [pc, #28]	; (8013248 <console_status+0x28>)
 801322c:	f000 fc12 	bl	8013a54 <uart0_puts>
 8013230:	4620      	mov	r0, r4
 8013232:	f000 fc0f 	bl	8013a54 <uart0_puts>
 8013236:	200a      	movs	r0, #10
 8013238:	f7ff ffb0 	bl	801319c <console_putc>
 801323c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013240:	4802      	ldr	r0, [pc, #8]	; (801324c <console_status+0x2c>)
 8013242:	f000 bc07 	b.w	8013a54 <uart0_puts>
 8013246:	bf00      	nop
 8013248:	08017eb0 	stmdaeq	r1, {r4, r5, r7, r9, sl, fp, ip, sp, lr}
 801324c:	080159e3 	stmdaeq	r1, {r0, r1, r5, r6, r7, r8, fp, ip, lr}

08013250 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)>:
 8013250:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013254:	4617      	mov	r7, r2
 8013256:	461e      	mov	r6, r3
 8013258:	4d14      	ldr	r5, [pc, #80]	; (80132ac <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x5c>)
 801325a:	4b15      	ldr	r3, [pc, #84]	; (80132b0 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x60>)
 801325c:	b086      	sub	sp, #24
 801325e:	6018      	str	r0, [r3, #0]
 8013260:	4604      	mov	r4, r0
 8013262:	f105 0803 	add.w	r8, r5, #3
 8013266:	2203      	movs	r2, #3
 8013268:	4628      	mov	r0, r5
 801326a:	f000 fa94 	bl	8013796 <memmove>
 801326e:	4639      	mov	r1, r7
 8013270:	220b      	movs	r2, #11
 8013272:	4640      	mov	r0, r8
 8013274:	f000 fa8f 	bl	8013796 <memmove>
 8013278:	f105 030e 	add.w	r3, r5, #14
 801327c:	4631      	mov	r1, r6
 801327e:	2208      	movs	r2, #8
 8013280:	4618      	mov	r0, r3
 8013282:	f000 fa88 	bl	8013796 <memmove>
 8013286:	2308      	movs	r3, #8
 8013288:	e9cd 8303 	strd	r8, r3, [sp, #12]
 801328c:	230b      	movs	r3, #11
 801328e:	9302      	str	r3, [sp, #8]
 8013290:	4b08      	ldr	r3, [pc, #32]	; (80132b4 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x64>)
 8013292:	9005      	str	r0, [sp, #20]
 8013294:	e9cd 5300 	strd	r5, r3, [sp]
 8013298:	213f      	movs	r1, #63	; 0x3f
 801329a:	2303      	movs	r3, #3
 801329c:	4a06      	ldr	r2, [pc, #24]	; (80132b8 <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x68>)
 801329e:	4807      	ldr	r0, [pc, #28]	; (80132bc <FirmwareVersion::FirmwareVersion(char const*, char const*, char const*)+0x6c>)
 80132a0:	f7f5 fe2c 	bl	8008efc <snprintf>
 80132a4:	4620      	mov	r0, r4
 80132a6:	b006      	add	sp, #24
 80132a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80132ac:	20013d74 	andcs	r3, r1, r4, ror sp
 80132b0:	20013dcc 	andcs	r3, r1, ip, asr #27
 80132b4:	08016118 	stmdaeq	r1, {r3, r4, r8, sp, lr}
 80132b8:	08017ed4 	stmdaeq	r1, {r2, r4, r6, r7, r9, sl, fp, ip, sp, lr}
 80132bc:	20013d8a 	andcs	r3, r1, sl, lsl #27

080132c0 <FirmwareVersion::Print(char const*)>:
 80132c0:	b510      	push	{r4, lr}
 80132c2:	460c      	mov	r4, r1
 80132c4:	4804      	ldr	r0, [pc, #16]	; (80132d8 <FirmwareVersion::Print(char const*)+0x18>)
 80132c6:	f000 faa2 	bl	801380e <puts>
 80132ca:	b124      	cbz	r4, 80132d6 <FirmwareVersion::Print(char const*)+0x16>
 80132cc:	4620      	mov	r0, r4
 80132ce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80132d2:	f000 ba9c 	b.w	801380e <puts>
 80132d6:	bd10      	pop	{r4, pc}
 80132d8:	20013d8a 	andcs	r3, r1, sl, lsl #27

080132dc <BitBanging595::BitBanging595()>:
 80132dc:	4b2c      	ldr	r3, [pc, #176]	; (8013390 <BitBanging595::BitBanging595()+0xb4>)
 80132de:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80132e2:	6018      	str	r0, [r3, #0]
 80132e4:	4604      	mov	r4, r0
 80132e6:	f240 6006 	movw	r0, #1542	; 0x606
 80132ea:	f000 fe31 	bl	8013f50 <rcu_periph_clock_enable>
 80132ee:	f240 6006 	movw	r0, #1542	; 0x606
 80132f2:	f000 fe2d 	bl	8013f50 <rcu_periph_clock_enable>
 80132f6:	f240 6006 	movw	r0, #1542	; 0x606
 80132fa:	f000 fe29 	bl	8013f50 <rcu_periph_clock_enable>
 80132fe:	2304      	movs	r3, #4
 8013300:	2203      	movs	r2, #3
 8013302:	2110      	movs	r1, #16
 8013304:	4823      	ldr	r0, [pc, #140]	; (8013394 <BitBanging595::BitBanging595()+0xb8>)
 8013306:	f000 fd87 	bl	8013e18 <gpio_init>
 801330a:	2308      	movs	r3, #8
 801330c:	2203      	movs	r2, #3
 801330e:	2110      	movs	r1, #16
 8013310:	4820      	ldr	r0, [pc, #128]	; (8013394 <BitBanging595::BitBanging595()+0xb8>)
 8013312:	f000 fd81 	bl	8013e18 <gpio_init>
 8013316:	2310      	movs	r3, #16
 8013318:	2203      	movs	r2, #3
 801331a:	4619      	mov	r1, r3
 801331c:	481d      	ldr	r0, [pc, #116]	; (8013394 <BitBanging595::BitBanging595()+0xb8>)
 801331e:	f000 fd7b 	bl	8013e18 <gpio_init>
 8013322:	2208      	movs	r2, #8
 8013324:	2110      	movs	r1, #16
 8013326:	4b1c      	ldr	r3, [pc, #112]	; (8013398 <BitBanging595::BitBanging595()+0xbc>)
 8013328:	481a      	ldr	r0, [pc, #104]	; (8013394 <BitBanging595::BitBanging595()+0xb8>)
 801332a:	f8c3 2810 	str.w	r2, [r3, #2064]	; 0x810
 801332e:	f8c3 1810 	str.w	r1, [r3, #2064]	; 0x810
 8013332:	f000 fdc7 	bl	8013ec4 <gpio_bit_reset>
 8013336:	f3bf 8f6f 	isb	sy
 801333a:	2518      	movs	r5, #24
 801333c:	f44f 0600 	mov.w	r6, #8388608	; 0x800000
 8013340:	f8df 8058 	ldr.w	r8, [pc, #88]	; 801339c <BitBanging595::BitBanging595()+0xc0>
 8013344:	4f13      	ldr	r7, [pc, #76]	; (8013394 <BitBanging595::BitBanging595()+0xb8>)
 8013346:	f8d8 3000 	ldr.w	r3, [r8]
 801334a:	2104      	movs	r1, #4
 801334c:	421e      	tst	r6, r3
 801334e:	4638      	mov	r0, r7
 8013350:	d01a      	beq.n	8013388 <BitBanging595::BitBanging595()+0xac>
 8013352:	f000 fdb5 	bl	8013ec0 <gpio_bit_set>
 8013356:	f3bf 8f6f 	isb	sy
 801335a:	2108      	movs	r1, #8
 801335c:	480d      	ldr	r0, [pc, #52]	; (8013394 <BitBanging595::BitBanging595()+0xb8>)
 801335e:	f000 fdb1 	bl	8013ec4 <gpio_bit_reset>
 8013362:	f3bf 8f6f 	isb	sy
 8013366:	2108      	movs	r1, #8
 8013368:	480a      	ldr	r0, [pc, #40]	; (8013394 <BitBanging595::BitBanging595()+0xb8>)
 801336a:	f000 fda9 	bl	8013ec0 <gpio_bit_set>
 801336e:	3d01      	subs	r5, #1
 8013370:	ea4f 0656 	mov.w	r6, r6, lsr #1
 8013374:	d1e7      	bne.n	8013346 <BitBanging595::BitBanging595()+0x6a>
 8013376:	2110      	movs	r1, #16
 8013378:	4806      	ldr	r0, [pc, #24]	; (8013394 <BitBanging595::BitBanging595()+0xb8>)
 801337a:	f000 fda1 	bl	8013ec0 <gpio_bit_set>
 801337e:	f3bf 8f6f 	isb	sy
 8013382:	4620      	mov	r0, r4
 8013384:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013388:	f000 fd9c 	bl	8013ec4 <gpio_bit_reset>
 801338c:	e7e3      	b.n	8013356 <BitBanging595::BitBanging595()+0x7a>
 801338e:	bf00      	nop
 8013390:	20013de0 	andcs	r3, r1, r0, ror #27
 8013394:	40011800 	andmi	r1, r1, r0, lsl #16
 8013398:	40011000 	andmi	r1, r1, r0
 801339c:	20013ddc 	ldrdcs	r3, [r1], -ip

080133a0 <LedBlink::LedBlink()>:
 80133a0:	b510      	push	{r4, lr}
 80133a2:	4604      	mov	r4, r0
 80133a4:	f7ff ff9a 	bl	80132dc <BitBanging595::BitBanging595()>
 80133a8:	2300      	movs	r3, #0
 80133aa:	2205      	movs	r2, #5
 80133ac:	e9c4 3201 	strd	r3, r2, [r4, #4]
 80133b0:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 80133b4:	60e3      	str	r3, [r4, #12]
 80133b6:	e9c4 2304 	strd	r2, r3, [r4, #16]
 80133ba:	61a3      	str	r3, [r4, #24]
 80133bc:	4b01      	ldr	r3, [pc, #4]	; (80133c4 <LedBlink::LedBlink()+0x24>)
 80133be:	4620      	mov	r0, r4
 80133c0:	601c      	str	r4, [r3, #0]
 80133c2:	bd10      	pop	{r4, pc}
 80133c4:	20013dd0 	ldrdcs	r3, [r1], -r0

080133c8 <LedBlink::SetMode(ledblink::Mode)>:
 80133c8:	6883      	ldr	r3, [r0, #8]
 80133ca:	428b      	cmp	r3, r1
 80133cc:	d02c      	beq.n	8013428 <LedBlink::SetMode(ledblink::Mode)+0x60>
 80133ce:	1e4b      	subs	r3, r1, #1
 80133d0:	6081      	str	r1, [r0, #8]
 80133d2:	2b03      	cmp	r3, #3
 80133d4:	d803      	bhi.n	80133de <LedBlink::SetMode(ledblink::Mode)+0x16>
 80133d6:	e8df f003 	tbb	[pc, r3]
 80133da:	231e180f 	tstcs	lr, #983040	; 0xf0000
 80133de:	2300      	movs	r3, #0
 80133e0:	4a12      	ldr	r2, [pc, #72]	; (801342c <LedBlink::SetMode(ledblink::Mode)+0x64>)
 80133e2:	6043      	str	r3, [r0, #4]
 80133e4:	6103      	str	r3, [r0, #16]
 80133e6:	6813      	ldr	r3, [r2, #0]
 80133e8:	f443 1360 	orr.w	r3, r3, #3670016	; 0x380000
 80133ec:	6013      	str	r3, [r2, #0]
 80133ee:	68c0      	ldr	r0, [r0, #12]
 80133f0:	b1d0      	cbz	r0, 8013428 <LedBlink::SetMode(ledblink::Mode)+0x60>
 80133f2:	6803      	ldr	r3, [r0, #0]
 80133f4:	689b      	ldr	r3, [r3, #8]
 80133f6:	4718      	bx	r3
 80133f8:	23ff      	movs	r3, #255	; 0xff
 80133fa:	6043      	str	r3, [r0, #4]
 80133fc:	2300      	movs	r3, #0
 80133fe:	4a0b      	ldr	r2, [pc, #44]	; (801342c <LedBlink::SetMode(ledblink::Mode)+0x64>)
 8013400:	6103      	str	r3, [r0, #16]
 8013402:	6813      	ldr	r3, [r2, #0]
 8013404:	f423 1360 	bic.w	r3, r3, #3670016	; 0x380000
 8013408:	e7f0      	b.n	80133ec <LedBlink::SetMode(ledblink::Mode)+0x24>
 801340a:	2301      	movs	r3, #1
 801340c:	6043      	str	r3, [r0, #4]
 801340e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8013412:	6103      	str	r3, [r0, #16]
 8013414:	e7eb      	b.n	80133ee <LedBlink::SetMode(ledblink::Mode)+0x26>
 8013416:	2303      	movs	r3, #3
 8013418:	6043      	str	r3, [r0, #4]
 801341a:	f240 134d 	movw	r3, #333	; 0x14d
 801341e:	e7f8      	b.n	8013412 <LedBlink::SetMode(ledblink::Mode)+0x4a>
 8013420:	2305      	movs	r3, #5
 8013422:	6043      	str	r3, [r0, #4]
 8013424:	23c8      	movs	r3, #200	; 0xc8
 8013426:	e7f4      	b.n	8013412 <LedBlink::SetMode(ledblink::Mode)+0x4a>
 8013428:	4770      	bx	lr
 801342a:	bf00      	nop
 801342c:	20013ddc 	ldrdcs	r3, [r1], -ip

08013430 <Hardware::Hardware()>:
 8013430:	b570      	push	{r4, r5, r6, lr}
 8013432:	2400      	movs	r4, #0
 8013434:	4b25      	ldr	r3, [pc, #148]	; (80134cc <Hardware::Hardware()+0x9c>)
 8013436:	b090      	sub	sp, #64	; 0x40
 8013438:	6004      	str	r4, [r0, #0]
 801343a:	7104      	strb	r4, [r0, #4]
 801343c:	4e24      	ldr	r6, [pc, #144]	; (80134d0 <Hardware::Hardware()+0xa0>)
 801343e:	6018      	str	r0, [r3, #0]
 8013440:	4605      	mov	r5, r0
 8013442:	f7ff fe9b 	bl	801317c <console_init>
 8013446:	f000 fb15 	bl	8013a74 <systick_config>
 801344a:	f001 fcf7 	bl	8014e3c <udelay_init()>
 801344e:	f001 fca7 	bl	8014da0 <micros_init()>
 8013452:	f240 7004 	movw	r0, #1796	; 0x704
 8013456:	f000 fd7b 	bl	8013f50 <rcu_periph_clock_enable>
 801345a:	4630      	mov	r0, r6
 801345c:	f000 feec 	bl	8014238 <timer_deinit>
 8013460:	2377      	movs	r3, #119	; 0x77
 8013462:	f8ad 300c 	strh.w	r3, [sp, #12]
 8013466:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 801346a:	a903      	add	r1, sp, #12
 801346c:	4630      	mov	r0, r6
 801346e:	9305      	str	r3, [sp, #20]
 8013470:	f000 ff88 	bl	8014384 <timer_init>
 8013474:	4630      	mov	r0, r6
 8013476:	f000 ffdd 	bl	8014434 <timer_enable>
 801347a:	f001 f9db 	bl	8014834 <gd32_adc_init()>
 801347e:	231b      	movs	r3, #27
 8013480:	e9cd 340a 	strd	r3, r4, [sp, #40]	; 0x28
 8013484:	237a      	movs	r3, #122	; 0x7a
 8013486:	a807      	add	r0, sp, #28
 8013488:	930c      	str	r3, [sp, #48]	; 0x30
 801348a:	e9cd 4408 	strd	r4, r4, [sp, #32]
 801348e:	9407      	str	r4, [sp, #28]
 8013490:	940f      	str	r4, [sp, #60]	; 0x3c
 8013492:	f000 fa15 	bl	80138c0 <mktime>
 8013496:	4621      	mov	r1, r4
 8013498:	e9cd 0401 	strd	r0, r4, [sp, #4]
 801349c:	a801      	add	r0, sp, #4
 801349e:	f000 fa85 	bl	80139ac <settimeofday>
 80134a2:	f240 701b 	movw	r0, #1819	; 0x71b
 80134a6:	f000 fd53 	bl	8013f50 <rcu_periph_clock_enable>
 80134aa:	f240 701c 	movw	r0, #1820	; 0x71c
 80134ae:	f000 fd4f 	bl	8013f50 <rcu_periph_clock_enable>
 80134b2:	f000 fd45 	bl	8013f40 <pmu_backup_write_enable>
 80134b6:	f000 fb81 	bl	8013bbc <bkp_deinit>
 80134ba:	4621      	mov	r1, r4
 80134bc:	2002      	movs	r0, #2
 80134be:	f000 fb85 	bl	8013bcc <bkp_data_write>
 80134c2:	f001 fa11 	bl	80148e8 <gd32_i2c_begin()>
 80134c6:	4628      	mov	r0, r5
 80134c8:	b010      	add	sp, #64	; 0x40
 80134ca:	bd70      	pop	{r4, r5, r6, pc}
 80134cc:	20013dd4 	ldrdcs	r3, [r1], -r4
 80134d0:	40001000 	andmi	r1, r0, r0

080134d4 <Hardware::GetUuid(unsigned char*)>:
 80134d4:	4a0c      	ldr	r2, [pc, #48]	; (8013508 <Hardware::GetUuid(unsigned char*)+0x34>)
 80134d6:	b084      	sub	sp, #16
 80134d8:	f8d2 37e8 	ldr.w	r3, [r2, #2024]	; 0x7e8
 80134dc:	9300      	str	r3, [sp, #0]
 80134de:	f8d2 07ec 	ldr.w	r0, [r2, #2028]	; 0x7ec
 80134e2:	9001      	str	r0, [sp, #4]
 80134e4:	f8d2 27f0 	ldr.w	r2, [r2, #2032]	; 0x7f0
 80134e8:	4403      	add	r3, r0
 80134ea:	4413      	add	r3, r2
 80134ec:	9202      	str	r2, [sp, #8]
 80134ee:	466a      	mov	r2, sp
 80134f0:	9303      	str	r3, [sp, #12]
 80134f2:	1e4b      	subs	r3, r1, #1
 80134f4:	310f      	adds	r1, #15
 80134f6:	428b      	cmp	r3, r1
 80134f8:	d004      	beq.n	8013504 <Hardware::GetUuid(unsigned char*)+0x30>
 80134fa:	f812 0b01 	ldrb.w	r0, [r2], #1
 80134fe:	f803 0f01 	strb.w	r0, [r3, #1]!
 8013502:	e7f8      	b.n	80134f6 <Hardware::GetUuid(unsigned char*)+0x22>
 8013504:	b004      	add	sp, #16
 8013506:	4770      	bx	lr
 8013508:	1ffff000 	svcne	0x00fff000

0801350c <Hardware::Reboot()>:
 801350c:	6803      	ldr	r3, [r0, #0]
 801350e:	4604      	mov	r4, r0
 8013510:	b580      	push	{r7, lr}
 8013512:	b153      	cbz	r3, 801352a <Hardware::Reboot()+0x1e>
 8013514:	2300      	movs	r3, #0
 8013516:	2104      	movs	r1, #4
 8013518:	7103      	strb	r3, [r0, #4]
 801351a:	f64f 70ff 	movw	r0, #65535	; 0xffff
 801351e:	f000 fc51 	bl	8013dc4 <fwdgt_config>
 8013522:	6820      	ldr	r0, [r4, #0]
 8013524:	6803      	ldr	r3, [r0, #0]
 8013526:	689b      	ldr	r3, [r3, #8]
 8013528:	4798      	blx	r3
 801352a:	2102      	movs	r1, #2
 801352c:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8013530:	f000 fc48 	bl	8013dc4 <fwdgt_config>
 8013534:	2801      	cmp	r0, #1
 8013536:	bf0c      	ite	eq
 8013538:	2301      	moveq	r3, #1
 801353a:	2300      	movne	r3, #0
 801353c:	7123      	strb	r3, [r4, #4]
 801353e:	d101      	bne.n	8013544 <Hardware::Reboot()+0x38>
 8013540:	f000 fc30 	bl	8013da4 <fwdgt_enable>
 8013544:	2208      	movs	r2, #8
 8013546:	4f2d      	ldr	r7, [pc, #180]	; (80135fc <Hardware::Reboot()+0xf0>)
 8013548:	4d2d      	ldr	r5, [pc, #180]	; (8013600 <Hardware::Reboot()+0xf4>)
 801354a:	683b      	ldr	r3, [r7, #0]
 801354c:	4c2d      	ldr	r4, [pc, #180]	; (8013604 <Hardware::Reboot()+0xf8>)
 801354e:	605a      	str	r2, [r3, #4]
 8013550:	227d      	movs	r2, #125	; 0x7d
 8013552:	611a      	str	r2, [r3, #16]
 8013554:	2200      	movs	r2, #0
 8013556:	6839      	ldr	r1, [r7, #0]
 8013558:	f8df c0ac 	ldr.w	ip, [pc, #172]	; 8013608 <Hardware::Reboot()+0xfc>
 801355c:	f8d1 e010 	ldr.w	lr, [r1, #16]
 8013560:	682b      	ldr	r3, [r5, #0]
 8013562:	f8dc 9000 	ldr.w	r9, [ip]
 8013566:	f8df 80a4 	ldr.w	r8, [pc, #164]	; 801360c <Hardware::Reboot()+0x100>
 801356a:	f1be 0f00 	cmp.w	lr, #0
 801356e:	d014      	beq.n	801359a <Hardware::Reboot()+0x8e>
 8013570:	f8d8 0000 	ldr.w	r0, [r8]
 8013574:	698e      	ldr	r6, [r1, #24]
 8013576:	1b80      	subs	r0, r0, r6
 8013578:	4586      	cmp	lr, r0
 801357a:	d80e      	bhi.n	801359a <Hardware::Reboot()+0x8e>
 801357c:	f8d8 2000 	ldr.w	r2, [r8]
 8013580:	f423 1360 	bic.w	r3, r3, #3670016	; 0x380000
 8013584:	618a      	str	r2, [r1, #24]
 8013586:	694a      	ldr	r2, [r1, #20]
 8013588:	2a01      	cmp	r2, #1
 801358a:	f082 0001 	eor.w	r0, r2, #1
 801358e:	bf18      	it	ne
 8013590:	2201      	movne	r2, #1
 8013592:	6148      	str	r0, [r1, #20]
 8013594:	bf08      	it	eq
 8013596:	f483 1360 	eoreq.w	r3, r3, #3670016	; 0x380000
 801359a:	454b      	cmp	r3, r9
 801359c:	d0e5      	beq.n	801356a <Hardware::Reboot()+0x5e>
 801359e:	b102      	cbz	r2, 80135a2 <Hardware::Reboot()+0x96>
 80135a0:	602b      	str	r3, [r5, #0]
 80135a2:	2110      	movs	r1, #16
 80135a4:	4620      	mov	r0, r4
 80135a6:	f8cc 3000 	str.w	r3, [ip]
 80135aa:	f000 fc8b 	bl	8013ec4 <gpio_bit_reset>
 80135ae:	f3bf 8f6f 	isb	sy
 80135b2:	2618      	movs	r6, #24
 80135b4:	f44f 0800 	mov.w	r8, #8388608	; 0x800000
 80135b8:	682b      	ldr	r3, [r5, #0]
 80135ba:	2104      	movs	r1, #4
 80135bc:	ea18 0f03 	tst.w	r8, r3
 80135c0:	4620      	mov	r0, r4
 80135c2:	d018      	beq.n	80135f6 <Hardware::Reboot()+0xea>
 80135c4:	f000 fc7c 	bl	8013ec0 <gpio_bit_set>
 80135c8:	f3bf 8f6f 	isb	sy
 80135cc:	2108      	movs	r1, #8
 80135ce:	4620      	mov	r0, r4
 80135d0:	f000 fc78 	bl	8013ec4 <gpio_bit_reset>
 80135d4:	f3bf 8f6f 	isb	sy
 80135d8:	2108      	movs	r1, #8
 80135da:	4620      	mov	r0, r4
 80135dc:	f000 fc70 	bl	8013ec0 <gpio_bit_set>
 80135e0:	3e01      	subs	r6, #1
 80135e2:	ea4f 0858 	mov.w	r8, r8, lsr #1
 80135e6:	d1e7      	bne.n	80135b8 <Hardware::Reboot()+0xac>
 80135e8:	2110      	movs	r1, #16
 80135ea:	4620      	mov	r0, r4
 80135ec:	f000 fc68 	bl	8013ec0 <gpio_bit_set>
 80135f0:	f3bf 8f6f 	isb	sy
 80135f4:	e7ae      	b.n	8013554 <Hardware::Reboot()+0x48>
 80135f6:	f000 fc65 	bl	8013ec4 <gpio_bit_reset>
 80135fa:	e7e5      	b.n	80135c8 <Hardware::Reboot()+0xbc>
 80135fc:	20013dd0 	ldrdcs	r3, [r1], -r0
 8013600:	20013ddc 	ldrdcs	r3, [r1], -ip
 8013604:	40011800 	andmi	r1, r1, r0, lsl #16
 8013608:	20013dd8 	ldrdcs	r3, [r1], -r8
 801360c:	20013df4 	strdcs	r3, [r1], -r4

08013610 <operator delete(void*)>:
 8013610:	f000 b890 	b.w	8013734 <free>

08013614 <operator delete[](void*)>:
 8013614:	f000 b88e 	b.w	8013734 <free>

08013618 <operator new(unsigned int)>:
 8013618:	f000 b842 	b.w	80136a0 <malloc>

0801361c <operator new[](unsigned int)>:
 801361c:	f000 b840 	b.w	80136a0 <malloc>

08013620 <inet_aton>:
 8013620:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8013622:	f04f 0c0a 	mov.w	ip, #10
 8013626:	2500      	movs	r5, #0
 8013628:	ae01      	add	r6, sp, #4
 801362a:	4603      	mov	r3, r0
 801362c:	2200      	movs	r2, #0
 801362e:	1d07      	adds	r7, r0, #4
 8013630:	e007      	b.n	8013642 <inet_aton+0x22>
 8013632:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8013636:	2b09      	cmp	r3, #9
 8013638:	d820      	bhi.n	801367c <inet_aton+0x5c>
 801363a:	4603      	mov	r3, r0
 801363c:	fb0c 4202 	mla	r2, ip, r2, r4
 8013640:	3a30      	subs	r2, #48	; 0x30
 8013642:	4618      	mov	r0, r3
 8013644:	f810 4b01 	ldrb.w	r4, [r0], #1
 8013648:	2c2e      	cmp	r4, #46	; 0x2e
 801364a:	d111      	bne.n	8013670 <inet_aton+0x50>
 801364c:	3501      	adds	r5, #1
 801364e:	2d03      	cmp	r5, #3
 8013650:	f806 2b01 	strb.w	r2, [r6], #1
 8013654:	d1e9      	bne.n	801362a <inet_aton+0xa>
 8013656:	2200      	movs	r2, #0
 8013658:	250a      	movs	r5, #10
 801365a:	1d1c      	adds	r4, r3, #4
 801365c:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8013660:	f010 0fdf 	tst.w	r0, #223	; 0xdf
 8013664:	d10d      	bne.n	8013682 <inet_aton+0x62>
 8013666:	f88d 2007 	strb.w	r2, [sp, #7]
 801366a:	b9b1      	cbnz	r1, 801369a <inet_aton+0x7a>
 801366c:	2001      	movs	r0, #1
 801366e:	e006      	b.n	801367e <inet_aton+0x5e>
 8013670:	2c00      	cmp	r4, #0
 8013672:	d0eb      	beq.n	801364c <inet_aton+0x2c>
 8013674:	2c0a      	cmp	r4, #10
 8013676:	d0e9      	beq.n	801364c <inet_aton+0x2c>
 8013678:	42b8      	cmp	r0, r7
 801367a:	d1da      	bne.n	8013632 <inet_aton+0x12>
 801367c:	2000      	movs	r0, #0
 801367e:	b003      	add	sp, #12
 8013680:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013682:	280a      	cmp	r0, #10
 8013684:	d0ef      	beq.n	8013666 <inet_aton+0x46>
 8013686:	42a3      	cmp	r3, r4
 8013688:	d0f8      	beq.n	801367c <inet_aton+0x5c>
 801368a:	f1a0 0630 	sub.w	r6, r0, #48	; 0x30
 801368e:	2e09      	cmp	r6, #9
 8013690:	d8f4      	bhi.n	801367c <inet_aton+0x5c>
 8013692:	fb05 0202 	mla	r2, r5, r2, r0
 8013696:	3a30      	subs	r2, #48	; 0x30
 8013698:	e7e0      	b.n	801365c <inet_aton+0x3c>
 801369a:	9b01      	ldr	r3, [sp, #4]
 801369c:	600b      	str	r3, [r1, #0]
 801369e:	e7e5      	b.n	801366c <inet_aton+0x4c>

080136a0 <malloc>:
 80136a0:	b538      	push	{r3, r4, r5, lr}
 80136a2:	4604      	mov	r4, r0
 80136a4:	4601      	mov	r1, r0
 80136a6:	481c      	ldr	r0, [pc, #112]	; (8013718 <malloc+0x78>)
 80136a8:	f7f5 fc00 	bl	8008eac <printf>
 80136ac:	b17c      	cbz	r4, 80136ce <malloc+0x2e>
 80136ae:	4b1b      	ldr	r3, [pc, #108]	; (801371c <malloc+0x7c>)
 80136b0:	6818      	ldr	r0, [r3, #0]
 80136b2:	b978      	cbnz	r0, 80136d4 <malloc+0x34>
 80136b4:	4a1a      	ldr	r2, [pc, #104]	; (8013720 <malloc+0x80>)
 80136b6:	f104 031b 	add.w	r3, r4, #27
 80136ba:	6811      	ldr	r1, [r2, #0]
 80136bc:	4819      	ldr	r0, [pc, #100]	; (8013724 <malloc+0x84>)
 80136be:	f023 030f 	bic.w	r3, r3, #15
 80136c2:	440b      	add	r3, r1
 80136c4:	4283      	cmp	r3, r0
 80136c6:	d921      	bls.n	801370c <malloc+0x6c>
 80136c8:	4817      	ldr	r0, [pc, #92]	; (8013728 <malloc+0x88>)
 80136ca:	f7f5 fbef 	bl	8008eac <printf>
 80136ce:	2500      	movs	r5, #0
 80136d0:	4628      	mov	r0, r5
 80136d2:	bd38      	pop	{r3, r4, r5, pc}
 80136d4:	4284      	cmp	r4, r0
 80136d6:	d80a      	bhi.n	80136ee <malloc+0x4e>
 80136d8:	685a      	ldr	r2, [r3, #4]
 80136da:	6899      	ldr	r1, [r3, #8]
 80136dc:	3201      	adds	r2, #1
 80136de:	428a      	cmp	r2, r1
 80136e0:	605a      	str	r2, [r3, #4]
 80136e2:	d900      	bls.n	80136e6 <malloc+0x46>
 80136e4:	609a      	str	r2, [r3, #8]
 80136e6:	68d9      	ldr	r1, [r3, #12]
 80136e8:	b919      	cbnz	r1, 80136f2 <malloc+0x52>
 80136ea:	4604      	mov	r4, r0
 80136ec:	e7e2      	b.n	80136b4 <malloc+0x14>
 80136ee:	3310      	adds	r3, #16
 80136f0:	e7de      	b.n	80136b0 <malloc+0x10>
 80136f2:	4604      	mov	r4, r0
 80136f4:	688a      	ldr	r2, [r1, #8]
 80136f6:	60da      	str	r2, [r3, #12]
 80136f8:	2300      	movs	r3, #0
 80136fa:	f101 050c 	add.w	r5, r1, #12
 80136fe:	608b      	str	r3, [r1, #8]
 8013700:	4622      	mov	r2, r4
 8013702:	462b      	mov	r3, r5
 8013704:	4809      	ldr	r0, [pc, #36]	; (801372c <malloc+0x8c>)
 8013706:	f7f5 fbd1 	bl	8008eac <printf>
 801370a:	e7e1      	b.n	80136d0 <malloc+0x30>
 801370c:	6013      	str	r3, [r2, #0]
 801370e:	4b08      	ldr	r3, [pc, #32]	; (8013730 <malloc+0x90>)
 8013710:	e9c1 3400 	strd	r3, r4, [r1]
 8013714:	e7f0      	b.n	80136f8 <malloc+0x58>
 8013716:	bf00      	nop
 8013718:	08017ef8 	stmdaeq	r1, {r3, r4, r5, r6, r7, r9, sl, fp, ip, sp, lr}
 801371c:	20000014 	andcs	r0, r0, r4, lsl r0
 8013720:	20000010 	andcs	r0, r0, r0, lsl r0
 8013724:	2001e000 	andcs	lr, r1, r0
 8013728:	08017f04 	stmdaeq	r1, {r2, r8, r9, sl, fp, ip, sp, lr}
 801372c:	08017f20 	stmdaeq	r1, {r5, r8, r9, sl, fp, ip, sp, lr}
 8013730:	424c4d43 	submi	r4, ip, #4288	; 0x10c0

08013734 <free>:
 8013734:	b538      	push	{r3, r4, r5, lr}
 8013736:	4604      	mov	r4, r0
 8013738:	b1c8      	cbz	r0, 801376e <free+0x3a>
 801373a:	f1a0 050c 	sub.w	r5, r0, #12
 801373e:	4602      	mov	r2, r0
 8013740:	4629      	mov	r1, r5
 8013742:	480c      	ldr	r0, [pc, #48]	; (8013774 <free+0x40>)
 8013744:	f7f5 fbb2 	bl	8008eac <printf>
 8013748:	f854 2c0c 	ldr.w	r2, [r4, #-12]
 801374c:	4b0a      	ldr	r3, [pc, #40]	; (8013778 <free+0x44>)
 801374e:	429a      	cmp	r2, r3
 8013750:	d10d      	bne.n	801376e <free+0x3a>
 8013752:	4b0a      	ldr	r3, [pc, #40]	; (801377c <free+0x48>)
 8013754:	681a      	ldr	r2, [r3, #0]
 8013756:	b152      	cbz	r2, 801376e <free+0x3a>
 8013758:	f854 1c08 	ldr.w	r1, [r4, #-8]
 801375c:	4291      	cmp	r1, r2
 801375e:	d107      	bne.n	8013770 <free+0x3c>
 8013760:	68da      	ldr	r2, [r3, #12]
 8013762:	f844 2c04 	str.w	r2, [r4, #-4]
 8013766:	685a      	ldr	r2, [r3, #4]
 8013768:	60dd      	str	r5, [r3, #12]
 801376a:	3a01      	subs	r2, #1
 801376c:	605a      	str	r2, [r3, #4]
 801376e:	bd38      	pop	{r3, r4, r5, pc}
 8013770:	3310      	adds	r3, #16
 8013772:	e7ef      	b.n	8013754 <free+0x20>
 8013774:	08017f4b 	stmdaeq	r1, {r0, r1, r3, r6, r8, r9, sl, fp, ip, sp, lr}
 8013778:	424c4d43 	submi	r4, ip, #4288	; 0x10c0
 801377c:	20000014 	andcs	r0, r0, r4, lsl r0

08013780 <memcpy>:
 8013780:	b510      	push	{r4, lr}
 8013782:	1e43      	subs	r3, r0, #1
 8013784:	440a      	add	r2, r1
 8013786:	4291      	cmp	r1, r2
 8013788:	d100      	bne.n	801378c <memcpy+0xc>
 801378a:	bd10      	pop	{r4, pc}
 801378c:	f811 4b01 	ldrb.w	r4, [r1], #1
 8013790:	f803 4f01 	strb.w	r4, [r3, #1]!
 8013794:	e7f7      	b.n	8013786 <memcpy+0x6>

08013796 <memmove>:
 8013796:	4288      	cmp	r0, r1
 8013798:	b510      	push	{r4, lr}
 801379a:	eb01 0302 	add.w	r3, r1, r2
 801379e:	d208      	bcs.n	80137b2 <memmove+0x1c>
 80137a0:	1e42      	subs	r2, r0, #1
 80137a2:	4299      	cmp	r1, r3
 80137a4:	d100      	bne.n	80137a8 <memmove+0x12>
 80137a6:	bd10      	pop	{r4, pc}
 80137a8:	f811 4b01 	ldrb.w	r4, [r1], #1
 80137ac:	f802 4f01 	strb.w	r4, [r2, #1]!
 80137b0:	e7f7      	b.n	80137a2 <memmove+0xc>
 80137b2:	4601      	mov	r1, r0
 80137b4:	4402      	add	r2, r0
 80137b6:	428a      	cmp	r2, r1
 80137b8:	d0f5      	beq.n	80137a6 <memmove+0x10>
 80137ba:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80137be:	f802 4d01 	strb.w	r4, [r2, #-1]!
 80137c2:	e7f8      	b.n	80137b6 <memmove+0x20>

080137c4 <memset>:
 80137c4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80137c6:	b1e2      	cbz	r2, 8013802 <memset+0x3e>
 80137c8:	4603      	mov	r3, r0
 80137ca:	b2c9      	uxtb	r1, r1
 80137cc:	075c      	lsls	r4, r3, #29
 80137ce:	d114      	bne.n	80137fa <memset+0x36>
 80137d0:	ea41 2401 	orr.w	r4, r1, r1, lsl #8
 80137d4:	ea44 4704 	orr.w	r7, r4, r4, lsl #16
 80137d8:	463d      	mov	r5, r7
 80137da:	f022 0407 	bic.w	r4, r2, #7
 80137de:	08d6      	lsrs	r6, r2, #3
 80137e0:	441c      	add	r4, r3
 80137e2:	42a3      	cmp	r3, r4
 80137e4:	d10e      	bne.n	8013804 <memset+0x40>
 80137e6:	f06f 0307 	mvn.w	r3, #7
 80137ea:	fb03 2206 	mla	r2, r3, r6, r2
 80137ee:	4422      	add	r2, r4
 80137f0:	4294      	cmp	r4, r2
 80137f2:	d006      	beq.n	8013802 <memset+0x3e>
 80137f4:	f804 1b01 	strb.w	r1, [r4], #1
 80137f8:	e7fa      	b.n	80137f0 <memset+0x2c>
 80137fa:	3a01      	subs	r2, #1
 80137fc:	f803 1b01 	strb.w	r1, [r3], #1
 8013800:	d1e4      	bne.n	80137cc <memset+0x8>
 8013802:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013804:	f843 7b08 	str.w	r7, [r3], #8
 8013808:	f843 5c04 	str.w	r5, [r3, #-4]
 801380c:	e7e9      	b.n	80137e2 <memset+0x1e>

0801380e <puts>:
 801380e:	b508      	push	{r3, lr}
 8013810:	f7ff fcd0 	bl	80131b4 <console_puts>
 8013814:	200a      	movs	r0, #10
 8013816:	f7ff fcc1 	bl	801319c <console_putc>
 801381a:	2001      	movs	r0, #1
 801381c:	bd08      	pop	{r3, pc}
	...

08013820 <strtok>:
 8013820:	b530      	push	{r4, r5, lr}
 8013822:	b910      	cbnz	r0, 801382a <strtok+0xa>
 8013824:	4b12      	ldr	r3, [pc, #72]	; (8013870 <strtok+0x50>)
 8013826:	6818      	ldr	r0, [r3, #0]
 8013828:	b158      	cbz	r0, 8013842 <strtok+0x22>
 801382a:	4603      	mov	r3, r0
 801382c:	460d      	mov	r5, r1
 801382e:	4618      	mov	r0, r3
 8013830:	f813 2b01 	ldrb.w	r2, [r3], #1
 8013834:	f815 4b01 	ldrb.w	r4, [r5], #1
 8013838:	b924      	cbnz	r4, 8013844 <strtok+0x24>
 801383a:	b94a      	cbnz	r2, 8013850 <strtok+0x30>
 801383c:	4610      	mov	r0, r2
 801383e:	4b0c      	ldr	r3, [pc, #48]	; (8013870 <strtok+0x50>)
 8013840:	601a      	str	r2, [r3, #0]
 8013842:	bd30      	pop	{r4, r5, pc}
 8013844:	42a2      	cmp	r2, r4
 8013846:	d1f5      	bne.n	8013834 <strtok+0x14>
 8013848:	e7f0      	b.n	801382c <strtok+0xc>
 801384a:	4613      	mov	r3, r2
 801384c:	e00c      	b.n	8013868 <strtok+0x48>
 801384e:	b914      	cbnz	r4, 8013856 <strtok+0x36>
 8013850:	460d      	mov	r5, r1
 8013852:	f813 2b01 	ldrb.w	r2, [r3], #1
 8013856:	f815 4b01 	ldrb.w	r4, [r5], #1
 801385a:	42a2      	cmp	r2, r4
 801385c:	d1f7      	bne.n	801384e <strtok+0x2e>
 801385e:	2a00      	cmp	r2, #0
 8013860:	d0f3      	beq.n	801384a <strtok+0x2a>
 8013862:	2200      	movs	r2, #0
 8013864:	f803 2c01 	strb.w	r2, [r3, #-1]
 8013868:	4a01      	ldr	r2, [pc, #4]	; (8013870 <strtok+0x50>)
 801386a:	6013      	str	r3, [r2, #0]
 801386c:	e7e9      	b.n	8013842 <strtok+0x22>
 801386e:	bf00      	nop
 8013870:	20013de4 	andcs	r3, r1, r4, ror #27

08013874 <isleapyear>:
 8013874:	2264      	movs	r2, #100	; 0x64
 8013876:	fb90 f3f2 	sdiv	r3, r0, r2
 801387a:	fb02 0313 	mls	r3, r2, r3, r0
 801387e:	b94b      	cbnz	r3, 8013894 <isleapyear+0x20>
 8013880:	f44f 73c8 	mov.w	r3, #400	; 0x190
 8013884:	fb90 f2f3 	sdiv	r2, r0, r3
 8013888:	fb03 0012 	mls	r0, r3, r2, r0
 801388c:	fab0 f080 	clz	r0, r0
 8013890:	0940      	lsrs	r0, r0, #5
 8013892:	4770      	bx	lr
 8013894:	f010 0f03 	tst.w	r0, #3
 8013898:	bf0c      	ite	eq
 801389a:	2001      	moveq	r0, #1
 801389c:	2000      	movne	r0, #0
 801389e:	4770      	bx	lr

080138a0 <getdaysofmonth>:
 80138a0:	b510      	push	{r4, lr}
 80138a2:	4604      	mov	r4, r0
 80138a4:	2c01      	cmp	r4, #1
 80138a6:	4608      	mov	r0, r1
 80138a8:	d102      	bne.n	80138b0 <getdaysofmonth+0x10>
 80138aa:	f7ff ffe3 	bl	8013874 <isleapyear>
 80138ae:	b918      	cbnz	r0, 80138b8 <getdaysofmonth+0x18>
 80138b0:	4b02      	ldr	r3, [pc, #8]	; (80138bc <getdaysofmonth+0x1c>)
 80138b2:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 80138b6:	bd10      	pop	{r4, pc}
 80138b8:	201d      	movs	r0, #29
 80138ba:	e7fc      	b.n	80138b6 <getdaysofmonth+0x16>
 80138bc:	08017f74 	stmdaeq	r1, {r2, r4, r5, r6, r8, r9, sl, fp, ip, sp, lr}

080138c0 <mktime>:
 80138c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80138c4:	4604      	mov	r4, r0
 80138c6:	2800      	cmp	r0, #0
 80138c8:	d042      	beq.n	8013950 <mktime+0x90>
 80138ca:	6941      	ldr	r1, [r0, #20]
 80138cc:	f1a1 0346 	sub.w	r3, r1, #70	; 0x46
 80138d0:	2b45      	cmp	r3, #69	; 0x45
 80138d2:	d83d      	bhi.n	8013950 <mktime+0x90>
 80138d4:	2600      	movs	r6, #0
 80138d6:	f240 75b2 	movw	r5, #1970	; 0x7b2
 80138da:	f240 186d 	movw	r8, #365	; 0x16d
 80138de:	f201 776b 	addw	r7, r1, #1899	; 0x76b
 80138e2:	42af      	cmp	r7, r5
 80138e4:	da23      	bge.n	801392e <mktime+0x6e>
 80138e6:	6927      	ldr	r7, [r4, #16]
 80138e8:	2f0b      	cmp	r7, #11
 80138ea:	d831      	bhi.n	8013950 <mktime+0x90>
 80138ec:	2500      	movs	r5, #0
 80138ee:	42af      	cmp	r7, r5
 80138f0:	d128      	bne.n	8013944 <mktime+0x84>
 80138f2:	68e5      	ldr	r5, [r4, #12]
 80138f4:	2d00      	cmp	r5, #0
 80138f6:	dd2b      	ble.n	8013950 <mktime+0x90>
 80138f8:	4638      	mov	r0, r7
 80138fa:	f7ff ffd1 	bl	80138a0 <getdaysofmonth>
 80138fe:	4285      	cmp	r5, r0
 8013900:	dc26      	bgt.n	8013950 <mktime+0x90>
 8013902:	2318      	movs	r3, #24
 8013904:	3d01      	subs	r5, #1
 8013906:	4435      	add	r5, r6
 8013908:	435d      	muls	r5, r3
 801390a:	68a3      	ldr	r3, [r4, #8]
 801390c:	2b17      	cmp	r3, #23
 801390e:	d81f      	bhi.n	8013950 <mktime+0x90>
 8013910:	203c      	movs	r0, #60	; 0x3c
 8013912:	442b      	add	r3, r5
 8013914:	fb00 f503 	mul.w	r5, r0, r3
 8013918:	6863      	ldr	r3, [r4, #4]
 801391a:	2b3b      	cmp	r3, #59	; 0x3b
 801391c:	d818      	bhi.n	8013950 <mktime+0x90>
 801391e:	442b      	add	r3, r5
 8013920:	4343      	muls	r3, r0
 8013922:	6820      	ldr	r0, [r4, #0]
 8013924:	283b      	cmp	r0, #59	; 0x3b
 8013926:	d813      	bhi.n	8013950 <mktime+0x90>
 8013928:	4418      	add	r0, r3
 801392a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801392e:	4628      	mov	r0, r5
 8013930:	f7ff ffa0 	bl	8013874 <isleapyear>
 8013934:	2800      	cmp	r0, #0
 8013936:	bf14      	ite	ne
 8013938:	f44f 73b7 	movne.w	r3, #366	; 0x16e
 801393c:	4643      	moveq	r3, r8
 801393e:	3501      	adds	r5, #1
 8013940:	441e      	add	r6, r3
 8013942:	e7ce      	b.n	80138e2 <mktime+0x22>
 8013944:	4628      	mov	r0, r5
 8013946:	f7ff ffab 	bl	80138a0 <getdaysofmonth>
 801394a:	3501      	adds	r5, #1
 801394c:	4406      	add	r6, r0
 801394e:	e7ce      	b.n	80138ee <mktime+0x2e>
 8013950:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8013954:	e7e9      	b.n	801392a <mktime+0x6a>
	...

08013958 <gettimeofday>:
 8013958:	b538      	push	{r3, r4, r5, lr}
 801395a:	4b10      	ldr	r3, [pc, #64]	; (801399c <gettimeofday+0x44>)
 801395c:	4a10      	ldr	r2, [pc, #64]	; (80139a0 <gettimeofday+0x48>)
 801395e:	681b      	ldr	r3, [r3, #0]
 8013960:	6814      	ldr	r4, [r2, #0]
 8013962:	6013      	str	r3, [r2, #0]
 8013964:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8013968:	429c      	cmp	r4, r3
 801396a:	bf2c      	ite	cs
 801396c:	1ae4      	subcs	r4, r4, r3
 801396e:	1b1c      	subcc	r4, r3, r4
 8013970:	4354      	muls	r4, r2
 8013972:	4b0c      	ldr	r3, [pc, #48]	; (80139a4 <gettimeofday+0x4c>)
 8013974:	4605      	mov	r5, r0
 8013976:	e9d3 2100 	ldrd	r2, r1, [r3]
 801397a:	18a4      	adds	r4, r4, r2
 801397c:	f141 0100 	adc.w	r1, r1, #0
 8013980:	e9c3 4100 	strd	r4, r1, [r3]
 8013984:	4620      	mov	r0, r4
 8013986:	2300      	movs	r3, #0
 8013988:	4a07      	ldr	r2, [pc, #28]	; (80139a8 <gettimeofday+0x50>)
 801398a:	f7f3 fe07 	bl	800759c <__aeabi_uldivmod>
 801398e:	4b06      	ldr	r3, [pc, #24]	; (80139a8 <gettimeofday+0x50>)
 8013990:	6028      	str	r0, [r5, #0]
 8013992:	fb03 4410 	mls	r4, r3, r0, r4
 8013996:	2000      	movs	r0, #0
 8013998:	606c      	str	r4, [r5, #4]
 801399a:	bd38      	pop	{r3, r4, r5, pc}
 801399c:	20013df4 	strdcs	r3, [r1], -r4
 80139a0:	20013df0 	strdcs	r3, [r1], -r0
 80139a4:	20013de8 	andcs	r3, r1, r8, ror #27
 80139a8:	000f4240 	andeq	r4, pc, r0, asr #4

080139ac <settimeofday>:
 80139ac:	4b07      	ldr	r3, [pc, #28]	; (80139cc <settimeofday+0x20>)
 80139ae:	b510      	push	{r4, lr}
 80139b0:	681a      	ldr	r2, [r3, #0]
 80139b2:	4b07      	ldr	r3, [pc, #28]	; (80139d0 <settimeofday+0x24>)
 80139b4:	6804      	ldr	r4, [r0, #0]
 80139b6:	601a      	str	r2, [r3, #0]
 80139b8:	6843      	ldr	r3, [r0, #4]
 80139ba:	4806      	ldr	r0, [pc, #24]	; (80139d4 <settimeofday+0x28>)
 80139bc:	17da      	asrs	r2, r3, #31
 80139be:	fbc4 3200 	smlal	r3, r2, r4, r0
 80139c2:	4905      	ldr	r1, [pc, #20]	; (80139d8 <settimeofday+0x2c>)
 80139c4:	2000      	movs	r0, #0
 80139c6:	e9c1 3200 	strd	r3, r2, [r1]
 80139ca:	bd10      	pop	{r4, pc}
 80139cc:	20013df4 	strdcs	r3, [r1], -r4
 80139d0:	20013df0 	strdcs	r3, [r1], -r0
 80139d4:	000f4240 	andeq	r4, pc, r0, asr #4
 80139d8:	20013de8 	andcs	r3, r1, r8, ror #27

080139dc <time>:
 80139dc:	b513      	push	{r0, r1, r4, lr}
 80139de:	4604      	mov	r4, r0
 80139e0:	2100      	movs	r1, #0
 80139e2:	4668      	mov	r0, sp
 80139e4:	f7ff ffb8 	bl	8013958 <gettimeofday>
 80139e8:	9800      	ldr	r0, [sp, #0]
 80139ea:	b104      	cbz	r4, 80139ee <time+0x12>
 80139ec:	6020      	str	r0, [r4, #0]
 80139ee:	b002      	add	sp, #8
 80139f0:	bd10      	pop	{r4, pc}
	...

080139f4 <uart0_init>:
 80139f4:	2301      	movs	r3, #1
 80139f6:	b507      	push	{r0, r1, r2, lr}
 80139f8:	2208      	movs	r2, #8
 80139fa:	9300      	str	r3, [sp, #0]
 80139fc:	f44f 31e1 	mov.w	r1, #115200	; 0x1c200
 8013a00:	2300      	movs	r3, #0
 8013a02:	4803      	ldr	r0, [pc, #12]	; (8013a10 <uart0_init+0x1c>)
 8013a04:	f001 f8b8 	bl	8014b78 <gd32_uart_begin>
 8013a08:	b003      	add	sp, #12
 8013a0a:	f85d fb04 	ldr.w	pc, [sp], #4
 8013a0e:	bf00      	nop
 8013a10:	40013800 	andmi	r3, r1, r0, lsl #16

08013a14 <uart0_putc>:
 8013a14:	280a      	cmp	r0, #10
 8013a16:	b538      	push	{r3, r4, r5, lr}
 8013a18:	4604      	mov	r4, r0
 8013a1a:	d10a      	bne.n	8013a32 <uart0_putc+0x1e>
 8013a1c:	4d0b      	ldr	r5, [pc, #44]	; (8013a4c <uart0_putc+0x38>)
 8013a1e:	2107      	movs	r1, #7
 8013a20:	4628      	mov	r0, r5
 8013a22:	f000 fe39 	bl	8014698 <usart_flag_get>
 8013a26:	2800      	cmp	r0, #0
 8013a28:	d0f9      	beq.n	8013a1e <uart0_putc+0xa>
 8013a2a:	220d      	movs	r2, #13
 8013a2c:	4b08      	ldr	r3, [pc, #32]	; (8013a50 <uart0_putc+0x3c>)
 8013a2e:	f8c3 2804 	str.w	r2, [r3, #2052]	; 0x804
 8013a32:	4d06      	ldr	r5, [pc, #24]	; (8013a4c <uart0_putc+0x38>)
 8013a34:	2107      	movs	r1, #7
 8013a36:	4628      	mov	r0, r5
 8013a38:	f000 fe2e 	bl	8014698 <usart_flag_get>
 8013a3c:	2800      	cmp	r0, #0
 8013a3e:	d0f9      	beq.n	8013a34 <uart0_putc+0x20>
 8013a40:	4b03      	ldr	r3, [pc, #12]	; (8013a50 <uart0_putc+0x3c>)
 8013a42:	b2e4      	uxtb	r4, r4
 8013a44:	f8c3 4804 	str.w	r4, [r3, #2052]	; 0x804
 8013a48:	bd38      	pop	{r3, r4, r5, pc}
 8013a4a:	bf00      	nop
 8013a4c:	40013800 	andmi	r3, r1, r0, lsl #16
 8013a50:	40013000 	andmi	r3, r1, r0

08013a54 <uart0_puts>:
 8013a54:	b510      	push	{r4, lr}
 8013a56:	1e44      	subs	r4, r0, #1
 8013a58:	f814 3f01 	ldrb.w	r3, [r4, #1]!
 8013a5c:	b903      	cbnz	r3, 8013a60 <uart0_puts+0xc>
 8013a5e:	bd10      	pop	{r4, pc}
 8013a60:	2b0a      	cmp	r3, #10
 8013a62:	d102      	bne.n	8013a6a <uart0_puts+0x16>
 8013a64:	200d      	movs	r0, #13
 8013a66:	f7ff ffd5 	bl	8013a14 <uart0_putc>
 8013a6a:	7820      	ldrb	r0, [r4, #0]
 8013a6c:	f7ff ffd2 	bl	8013a14 <uart0_putc>
 8013a70:	e7f2      	b.n	8013a58 <uart0_puts+0x4>
	...

08013a74 <systick_config>:
 8013a74:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8013a78:	4b0b      	ldr	r3, [pc, #44]	; (8013aa8 <systick_config+0x34>)
 8013a7a:	681b      	ldr	r3, [r3, #0]
 8013a7c:	fbb3 f3f2 	udiv	r3, r3, r2
 8013a80:	3b01      	subs	r3, #1
 8013a82:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8013a86:	d20d      	bcs.n	8013aa4 <systick_config+0x30>
 8013a88:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8013a8c:	21f0      	movs	r1, #240	; 0xf0
 8013a8e:	6153      	str	r3, [r2, #20]
 8013a90:	4b06      	ldr	r3, [pc, #24]	; (8013aac <systick_config+0x38>)
 8013a92:	2007      	movs	r0, #7
 8013a94:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 8013a98:	2100      	movs	r1, #0
 8013a9a:	6191      	str	r1, [r2, #24]
 8013a9c:	6110      	str	r0, [r2, #16]
 8013a9e:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
 8013aa2:	4770      	bx	lr
 8013aa4:	e7fe      	b.n	8013aa4 <systick_config+0x30>
 8013aa6:	bf00      	nop
 8013aa8:	200000e4 	andcs	r0, r0, r4, ror #1
 8013aac:	e000ed00 	and	lr, r0, r0, lsl #26

08013ab0 <SysTick_Handler>:
 8013ab0:	4a02      	ldr	r2, [pc, #8]	; (8013abc <SysTick_Handler+0xc>)
 8013ab2:	6813      	ldr	r3, [r2, #0]
 8013ab4:	3301      	adds	r3, #1
 8013ab6:	6013      	str	r3, [r2, #0]
 8013ab8:	4770      	bx	lr
 8013aba:	bf00      	nop
 8013abc:	20013df4 	strdcs	r3, [r1], -r4

08013ac0 <SystemInit>:
 8013ac0:	4b3a      	ldr	r3, [pc, #232]	; (8013bac <SystemInit+0xec>)
 8013ac2:	681a      	ldr	r2, [r3, #0]
 8013ac4:	f042 0201 	orr.w	r2, r2, #1
 8013ac8:	601a      	str	r2, [r3, #0]
 8013aca:	6859      	ldr	r1, [r3, #4]
 8013acc:	4a38      	ldr	r2, [pc, #224]	; (8013bb0 <SystemInit+0xf0>)
 8013ace:	400a      	ands	r2, r1
 8013ad0:	605a      	str	r2, [r3, #4]
 8013ad2:	681a      	ldr	r2, [r3, #0]
 8013ad4:	f44f 017f 	mov.w	r1, #16711680	; 0xff0000
 8013ad8:	f022 7284 	bic.w	r2, r2, #17301504	; 0x1080000
 8013adc:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8013ae0:	601a      	str	r2, [r3, #0]
 8013ae2:	681a      	ldr	r2, [r3, #0]
 8013ae4:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8013ae8:	601a      	str	r2, [r3, #0]
 8013aea:	685a      	ldr	r2, [r3, #4]
 8013aec:	f022 5203 	bic.w	r2, r2, #549453824	; 0x20c00000
 8013af0:	f422 127c 	bic.w	r2, r2, #4128768	; 0x3f0000
 8013af4:	605a      	str	r2, [r3, #4]
 8013af6:	681a      	ldr	r2, [r3, #0]
 8013af8:	f022 52a0 	bic.w	r2, r2, #335544320	; 0x14000000
 8013afc:	601a      	str	r2, [r3, #0]
 8013afe:	2200      	movs	r2, #0
 8013b00:	62da      	str	r2, [r3, #44]	; 0x2c
 8013b02:	6099      	str	r1, [r3, #8]
 8013b04:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 8013b08:	f8d3 2090 	ldr.w	r2, [r3, #144]	; 0x90
 8013b0c:	f022 5280 	bic.w	r2, r2, #268435456	; 0x10000000
 8013b10:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
 8013b14:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
 8013b18:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
 8013b1c:	4a25      	ldr	r2, [pc, #148]	; (8013bb4 <SystemInit+0xf4>)
 8013b1e:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
 8013b22:	681a      	ldr	r2, [r3, #0]
 8013b24:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8013b28:	601a      	str	r2, [r3, #0]
 8013b2a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8013b2e:	6819      	ldr	r1, [r3, #0]
 8013b30:	0389      	lsls	r1, r1, #14
 8013b32:	d401      	bmi.n	8013b38 <SystemInit+0x78>
 8013b34:	3a01      	subs	r2, #1
 8013b36:	d1fa      	bne.n	8013b2e <SystemInit+0x6e>
 8013b38:	681a      	ldr	r2, [r3, #0]
 8013b3a:	0392      	lsls	r2, r2, #14
 8013b3c:	d400      	bmi.n	8013b40 <SystemInit+0x80>
 8013b3e:	e7fe      	b.n	8013b3e <SystemInit+0x7e>
 8013b40:	685a      	ldr	r2, [r3, #4]
 8013b42:	605a      	str	r2, [r3, #4]
 8013b44:	685a      	ldr	r2, [r3, #4]
 8013b46:	605a      	str	r2, [r3, #4]
 8013b48:	685a      	ldr	r2, [r3, #4]
 8013b4a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8013b4e:	605a      	str	r2, [r3, #4]
 8013b50:	685a      	ldr	r2, [r3, #4]
 8013b52:	f022 5200 	bic.w	r2, r2, #536870912	; 0x20000000
 8013b56:	f422 127c 	bic.w	r2, r2, #4128768	; 0x3f0000
 8013b5a:	605a      	str	r2, [r3, #4]
 8013b5c:	685a      	ldr	r2, [r3, #4]
 8013b5e:	f442 1204 	orr.w	r2, r2, #2162688	; 0x210000
 8013b62:	605a      	str	r2, [r3, #4]
 8013b64:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8013b66:	4a14      	ldr	r2, [pc, #80]	; (8013bb8 <SystemInit+0xf8>)
 8013b68:	400a      	ands	r2, r1
 8013b6a:	62da      	str	r2, [r3, #44]	; 0x2c
 8013b6c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8013b6e:	f442 3285 	orr.w	r2, r2, #68096	; 0x10a00
 8013b72:	f042 0244 	orr.w	r2, r2, #68	; 0x44
 8013b76:	62da      	str	r2, [r3, #44]	; 0x2c
 8013b78:	681a      	ldr	r2, [r3, #0]
 8013b7a:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8013b7e:	601a      	str	r2, [r3, #0]
 8013b80:	681a      	ldr	r2, [r3, #0]
 8013b82:	0110      	lsls	r0, r2, #4
 8013b84:	d5fc      	bpl.n	8013b80 <SystemInit+0xc0>
 8013b86:	681a      	ldr	r2, [r3, #0]
 8013b88:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 8013b8c:	601a      	str	r2, [r3, #0]
 8013b8e:	681a      	ldr	r2, [r3, #0]
 8013b90:	0191      	lsls	r1, r2, #6
 8013b92:	d5fc      	bpl.n	8013b8e <SystemInit+0xce>
 8013b94:	685a      	ldr	r2, [r3, #4]
 8013b96:	f022 0203 	bic.w	r2, r2, #3
 8013b9a:	605a      	str	r2, [r3, #4]
 8013b9c:	685a      	ldr	r2, [r3, #4]
 8013b9e:	f042 0202 	orr.w	r2, r2, #2
 8013ba2:	605a      	str	r2, [r3, #4]
 8013ba4:	685a      	ldr	r2, [r3, #4]
 8013ba6:	0712      	lsls	r2, r2, #28
 8013ba8:	d5fc      	bpl.n	8013ba4 <SystemInit+0xe4>
 8013baa:	4770      	bx	lr
 8013bac:	40021000 	andmi	r1, r2, r0
 8013bb0:	e0ff000c 	rscs	r0, pc, ip
 8013bb4:	20003010 	andcs	r3, r0, r0, lsl r0
 8013bb8:	fffef000 			; <UNDEFINED> instruction: 0xfffef000

08013bbc <bkp_deinit>:
 8013bbc:	b508      	push	{r3, lr}
 8013bbe:	f000 f9e9 	bl	8013f94 <rcu_bkp_reset_enable>
 8013bc2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8013bc6:	f000 b9ed 	b.w	8013fa4 <rcu_bkp_reset_disable>
	...

08013bcc <bkp_data_write>:
 8013bcc:	f1a0 030b 	sub.w	r3, r0, #11
 8013bd0:	2b1f      	cmp	r3, #31
 8013bd2:	d804      	bhi.n	8013bde <bkp_data_write+0x12>
 8013bd4:	4b07      	ldr	r3, [pc, #28]	; (8013bf4 <bkp_data_write+0x28>)
 8013bd6:	4403      	add	r3, r0
 8013bd8:	009b      	lsls	r3, r3, #2
 8013bda:	8019      	strh	r1, [r3, #0]
 8013bdc:	4770      	bx	lr
 8013bde:	1e43      	subs	r3, r0, #1
 8013be0:	2b09      	cmp	r3, #9
 8013be2:	bf9f      	itttt	ls
 8013be4:	f100 5080 	addls.w	r0, r0, #268435456	; 0x10000000
 8013be8:	f500 50d8 	addls.w	r0, r0, #6912	; 0x1b00
 8013bec:	0080      	lslls	r0, r0, #2
 8013bee:	8001      	strhls	r1, [r0, #0]
 8013bf0:	4770      	bx	lr
 8013bf2:	bf00      	nop
 8013bf4:	10001b05 	andne	r1, r0, r5, lsl #22

08013bf8 <bkp_data_read>:
 8013bf8:	f1a0 030b 	sub.w	r3, r0, #11
 8013bfc:	2b1f      	cmp	r3, #31
 8013bfe:	d805      	bhi.n	8013c0c <bkp_data_read+0x14>
 8013c00:	4b08      	ldr	r3, [pc, #32]	; (8013c24 <bkp_data_read+0x2c>)
 8013c02:	4403      	add	r3, r0
 8013c04:	009b      	lsls	r3, r3, #2
 8013c06:	8818      	ldrh	r0, [r3, #0]
 8013c08:	b280      	uxth	r0, r0
 8013c0a:	4770      	bx	lr
 8013c0c:	1e43      	subs	r3, r0, #1
 8013c0e:	2b09      	cmp	r3, #9
 8013c10:	d806      	bhi.n	8013c20 <bkp_data_read+0x28>
 8013c12:	f100 5080 	add.w	r0, r0, #268435456	; 0x10000000
 8013c16:	f500 50d8 	add.w	r0, r0, #6912	; 0x1b00
 8013c1a:	0080      	lsls	r0, r0, #2
 8013c1c:	8800      	ldrh	r0, [r0, #0]
 8013c1e:	e7f3      	b.n	8013c08 <bkp_data_read+0x10>
 8013c20:	2000      	movs	r0, #0
 8013c22:	4770      	bx	lr
 8013c24:	10001b05 	andne	r1, r0, r5, lsl #22

08013c28 <dma_deinit>:
 8013c28:	2314      	movs	r3, #20
 8013c2a:	fb03 0301 	mla	r3, r3, r1, r0
 8013c2e:	689a      	ldr	r2, [r3, #8]
 8013c30:	b530      	push	{r4, r5, lr}
 8013c32:	f022 0201 	bic.w	r2, r2, #1
 8013c36:	609a      	str	r2, [r3, #8]
 8013c38:	2200      	movs	r2, #0
 8013c3a:	609a      	str	r2, [r3, #8]
 8013c3c:	60da      	str	r2, [r3, #12]
 8013c3e:	611a      	str	r2, [r3, #16]
 8013c40:	615a      	str	r2, [r3, #20]
 8013c42:	230f      	movs	r3, #15
 8013c44:	6844      	ldr	r4, [r0, #4]
 8013c46:	008d      	lsls	r5, r1, #2
 8013c48:	40ab      	lsls	r3, r5
 8013c4a:	4323      	orrs	r3, r4
 8013c4c:	6043      	str	r3, [r0, #4]
 8013c4e:	4b04      	ldr	r3, [pc, #16]	; (8013c60 <dma_deinit+0x38>)
 8013c50:	4298      	cmp	r0, r3
 8013c52:	d103      	bne.n	8013c5c <dma_deinit+0x34>
 8013c54:	2905      	cmp	r1, #5
 8013c56:	bf08      	it	eq
 8013c58:	f8c3 2300 	streq.w	r2, [r3, #768]	; 0x300
 8013c5c:	bd30      	pop	{r4, r5, pc}
 8013c5e:	bf00      	nop
 8013c60:	40020400 	andmi	r0, r2, r0, lsl #8

08013c64 <dma_struct_para_init>:
 8013c64:	2300      	movs	r3, #0
 8013c66:	e9c0 3300 	strd	r3, r3, [r0]
 8013c6a:	e9c0 3302 	strd	r3, r3, [r0, #8]
 8013c6e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8013c72:	8303      	strh	r3, [r0, #24]
 8013c74:	7683      	strb	r3, [r0, #26]
 8013c76:	4770      	bx	lr

08013c78 <dma_init>:
 8013c78:	2314      	movs	r3, #20
 8013c7a:	fb03 0101 	mla	r1, r3, r1, r0
 8013c7e:	6813      	ldr	r3, [r2, #0]
 8013c80:	b510      	push	{r4, lr}
 8013c82:	610b      	str	r3, [r1, #16]
 8013c84:	6893      	ldr	r3, [r2, #8]
 8013c86:	614b      	str	r3, [r1, #20]
 8013c88:	8a13      	ldrh	r3, [r2, #16]
 8013c8a:	60cb      	str	r3, [r1, #12]
 8013c8c:	68d4      	ldr	r4, [r2, #12]
 8013c8e:	6853      	ldr	r3, [r2, #4]
 8013c90:	6888      	ldr	r0, [r1, #8]
 8013c92:	4323      	orrs	r3, r4
 8013c94:	6954      	ldr	r4, [r2, #20]
 8013c96:	f420 507c 	bic.w	r0, r0, #16128	; 0x3f00
 8013c9a:	4323      	orrs	r3, r4
 8013c9c:	4303      	orrs	r3, r0
 8013c9e:	608b      	str	r3, [r1, #8]
 8013ca0:	7e13      	ldrb	r3, [r2, #24]
 8013ca2:	2b01      	cmp	r3, #1
 8013ca4:	688b      	ldr	r3, [r1, #8]
 8013ca6:	bf0c      	ite	eq
 8013ca8:	f043 0340 	orreq.w	r3, r3, #64	; 0x40
 8013cac:	f023 0340 	bicne.w	r3, r3, #64	; 0x40
 8013cb0:	608b      	str	r3, [r1, #8]
 8013cb2:	7e53      	ldrb	r3, [r2, #25]
 8013cb4:	2b01      	cmp	r3, #1
 8013cb6:	688b      	ldr	r3, [r1, #8]
 8013cb8:	bf0c      	ite	eq
 8013cba:	f043 0380 	orreq.w	r3, r3, #128	; 0x80
 8013cbe:	f023 0380 	bicne.w	r3, r3, #128	; 0x80
 8013cc2:	608b      	str	r3, [r1, #8]
 8013cc4:	7e93      	ldrb	r3, [r2, #26]
 8013cc6:	b923      	cbnz	r3, 8013cd2 <dma_init+0x5a>
 8013cc8:	688b      	ldr	r3, [r1, #8]
 8013cca:	f023 0310 	bic.w	r3, r3, #16
 8013cce:	608b      	str	r3, [r1, #8]
 8013cd0:	bd10      	pop	{r4, pc}
 8013cd2:	688b      	ldr	r3, [r1, #8]
 8013cd4:	f043 0310 	orr.w	r3, r3, #16
 8013cd8:	e7f9      	b.n	8013cce <dma_init+0x56>

08013cda <dma_circulation_disable>:
 8013cda:	2314      	movs	r3, #20
 8013cdc:	4359      	muls	r1, r3
 8013cde:	3008      	adds	r0, #8
 8013ce0:	580b      	ldr	r3, [r1, r0]
 8013ce2:	f023 0320 	bic.w	r3, r3, #32
 8013ce6:	500b      	str	r3, [r1, r0]
 8013ce8:	4770      	bx	lr

08013cea <dma_memory_to_memory_disable>:
 8013cea:	2314      	movs	r3, #20
 8013cec:	4359      	muls	r1, r3
 8013cee:	3008      	adds	r0, #8
 8013cf0:	580b      	ldr	r3, [r1, r0]
 8013cf2:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8013cf6:	500b      	str	r3, [r1, r0]
 8013cf8:	4770      	bx	lr
	...

08013cfc <fmc_bank0_unlock>:
 8013cfc:	4b04      	ldr	r3, [pc, #16]	; (8013d10 <fmc_bank0_unlock+0x14>)
 8013cfe:	691a      	ldr	r2, [r3, #16]
 8013d00:	0612      	lsls	r2, r2, #24
 8013d02:	bf41      	itttt	mi
 8013d04:	4a03      	ldrmi	r2, [pc, #12]	; (8013d14 <fmc_bank0_unlock+0x18>)
 8013d06:	605a      	strmi	r2, [r3, #4]
 8013d08:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 8013d0c:	605a      	strmi	r2, [r3, #4]
 8013d0e:	4770      	bx	lr
 8013d10:	40022000 	andmi	r2, r2, r0
 8013d14:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

08013d18 <fmc_bank1_unlock>:
 8013d18:	4b04      	ldr	r3, [pc, #16]	; (8013d2c <fmc_bank1_unlock+0x14>)
 8013d1a:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8013d1c:	0612      	lsls	r2, r2, #24
 8013d1e:	bf41      	itttt	mi
 8013d20:	4a03      	ldrmi	r2, [pc, #12]	; (8013d30 <fmc_bank1_unlock+0x18>)
 8013d22:	645a      	strmi	r2, [r3, #68]	; 0x44
 8013d24:	f102 3288 	addmi.w	r2, r2, #2290649224	; 0x88888888
 8013d28:	645a      	strmi	r2, [r3, #68]	; 0x44
 8013d2a:	4770      	bx	lr
 8013d2c:	40022000 	andmi	r2, r2, r0
 8013d30:	45670123 	strbmi	r0, [r7, #-291]!	; 0xfffffedd

08013d34 <fmc_bank0_lock>:
 8013d34:	4a02      	ldr	r2, [pc, #8]	; (8013d40 <fmc_bank0_lock+0xc>)
 8013d36:	6913      	ldr	r3, [r2, #16]
 8013d38:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8013d3c:	6113      	str	r3, [r2, #16]
 8013d3e:	4770      	bx	lr
 8013d40:	40022000 	andmi	r2, r2, r0

08013d44 <fmc_bank1_lock>:
 8013d44:	4a02      	ldr	r2, [pc, #8]	; (8013d50 <fmc_bank1_lock+0xc>)
 8013d46:	6d13      	ldr	r3, [r2, #80]	; 0x50
 8013d48:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8013d4c:	6513      	str	r3, [r2, #80]	; 0x50
 8013d4e:	4770      	bx	lr
 8013d50:	40022000 	andmi	r2, r2, r0

08013d54 <fmc_bank0_state_get>:
 8013d54:	4b08      	ldr	r3, [pc, #32]	; (8013d78 <fmc_bank0_state_get+0x24>)
 8013d56:	68da      	ldr	r2, [r3, #12]
 8013d58:	07d1      	lsls	r1, r2, #31
 8013d5a:	d409      	bmi.n	8013d70 <fmc_bank0_state_get+0x1c>
 8013d5c:	68da      	ldr	r2, [r3, #12]
 8013d5e:	06d2      	lsls	r2, r2, #27
 8013d60:	d408      	bmi.n	8013d74 <fmc_bank0_state_get+0x20>
 8013d62:	68db      	ldr	r3, [r3, #12]
 8013d64:	f013 0f04 	tst.w	r3, #4
 8013d68:	bf0c      	ite	eq
 8013d6a:	2000      	moveq	r0, #0
 8013d6c:	2002      	movne	r0, #2
 8013d6e:	4770      	bx	lr
 8013d70:	2001      	movs	r0, #1
 8013d72:	4770      	bx	lr
 8013d74:	2003      	movs	r0, #3
 8013d76:	4770      	bx	lr
 8013d78:	40022000 	andmi	r2, r2, r0

08013d7c <fmc_bank1_state_get>:
 8013d7c:	4b08      	ldr	r3, [pc, #32]	; (8013da0 <fmc_bank1_state_get+0x24>)
 8013d7e:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8013d80:	07d1      	lsls	r1, r2, #31
 8013d82:	d409      	bmi.n	8013d98 <fmc_bank1_state_get+0x1c>
 8013d84:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8013d86:	06d2      	lsls	r2, r2, #27
 8013d88:	d408      	bmi.n	8013d9c <fmc_bank1_state_get+0x20>
 8013d8a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8013d8c:	f013 0f04 	tst.w	r3, #4
 8013d90:	bf0c      	ite	eq
 8013d92:	2000      	moveq	r0, #0
 8013d94:	2002      	movne	r0, #2
 8013d96:	4770      	bx	lr
 8013d98:	2001      	movs	r0, #1
 8013d9a:	4770      	bx	lr
 8013d9c:	2003      	movs	r0, #3
 8013d9e:	4770      	bx	lr
 8013da0:	40022000 	andmi	r2, r2, r0

08013da4 <fwdgt_enable>:
 8013da4:	f64c 42cc 	movw	r2, #52428	; 0xcccc
 8013da8:	4b01      	ldr	r3, [pc, #4]	; (8013db0 <fwdgt_enable+0xc>)
 8013daa:	601a      	str	r2, [r3, #0]
 8013dac:	4770      	bx	lr
 8013dae:	bf00      	nop
 8013db0:	40003000 	andmi	r3, r0, r0

08013db4 <fwdgt_counter_reload>:
 8013db4:	f64a 22aa 	movw	r2, #43690	; 0xaaaa
 8013db8:	4b01      	ldr	r3, [pc, #4]	; (8013dc0 <fwdgt_counter_reload+0xc>)
 8013dba:	601a      	str	r2, [r3, #0]
 8013dbc:	4770      	bx	lr
 8013dbe:	bf00      	nop
 8013dc0:	40003000 	andmi	r3, r0, r0

08013dc4 <fwdgt_config>:
 8013dc4:	f245 5355 	movw	r3, #21845	; 0x5555
 8013dc8:	4a11      	ldr	r2, [pc, #68]	; (8013e10 <fwdgt_config+0x4c>)
 8013dca:	b510      	push	{r4, lr}
 8013dcc:	4c11      	ldr	r4, [pc, #68]	; (8013e14 <fwdgt_config+0x50>)
 8013dce:	6013      	str	r3, [r2, #0]
 8013dd0:	68d3      	ldr	r3, [r2, #12]
 8013dd2:	3c01      	subs	r4, #1
 8013dd4:	f003 0301 	and.w	r3, r3, #1
 8013dd8:	d013      	beq.n	8013e02 <fwdgt_config+0x3e>
 8013dda:	2b00      	cmp	r3, #0
 8013ddc:	d1f8      	bne.n	8013dd0 <fwdgt_config+0xc>
 8013dde:	6051      	str	r1, [r2, #4]
 8013de0:	490c      	ldr	r1, [pc, #48]	; (8013e14 <fwdgt_config+0x50>)
 8013de2:	4a0b      	ldr	r2, [pc, #44]	; (8013e10 <fwdgt_config+0x4c>)
 8013de4:	68d3      	ldr	r3, [r2, #12]
 8013de6:	3901      	subs	r1, #1
 8013de8:	f003 0302 	and.w	r3, r3, #2
 8013dec:	d00d      	beq.n	8013e0a <fwdgt_config+0x46>
 8013dee:	2b00      	cmp	r3, #0
 8013df0:	d1f8      	bne.n	8013de4 <fwdgt_config+0x20>
 8013df2:	f64a 23aa 	movw	r3, #43690	; 0xaaaa
 8013df6:	f3c0 000b 	ubfx	r0, r0, #0, #12
 8013dfa:	6090      	str	r0, [r2, #8]
 8013dfc:	2001      	movs	r0, #1
 8013dfe:	6013      	str	r3, [r2, #0]
 8013e00:	e002      	b.n	8013e08 <fwdgt_config+0x44>
 8013e02:	2b00      	cmp	r3, #0
 8013e04:	d0eb      	beq.n	8013dde <fwdgt_config+0x1a>
 8013e06:	2000      	movs	r0, #0
 8013e08:	bd10      	pop	{r4, pc}
 8013e0a:	2b00      	cmp	r3, #0
 8013e0c:	d1fb      	bne.n	8013e06 <fwdgt_config+0x42>
 8013e0e:	e7f0      	b.n	8013df2 <fwdgt_config+0x2e>
 8013e10:	40003000 	andmi	r3, r0, r0
 8013e14:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

08013e18 <gpio_init>:
 8013e18:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013e1c:	f04f 0c0f 	mov.w	ip, #15
 8013e20:	06cf      	lsls	r7, r1, #27
 8013e22:	f04f 0400 	mov.w	r4, #0
 8013e26:	f04f 0701 	mov.w	r7, #1
 8013e2a:	f001 050f 	and.w	r5, r1, #15
 8013e2e:	bf48      	it	mi
 8013e30:	4315      	orrmi	r5, r2
 8013e32:	fa23 f204 	lsr.w	r2, r3, r4
 8013e36:	07d6      	lsls	r6, r2, #31
 8013e38:	d510      	bpl.n	8013e5c <gpio_init+0x44>
 8013e3a:	00a2      	lsls	r2, r4, #2
 8013e3c:	6806      	ldr	r6, [r0, #0]
 8013e3e:	fa0c fe02 	lsl.w	lr, ip, r2
 8013e42:	ea26 060e 	bic.w	r6, r6, lr
 8013e46:	fa05 f202 	lsl.w	r2, r5, r2
 8013e4a:	2928      	cmp	r1, #40	; 0x28
 8013e4c:	ea42 0206 	orr.w	r2, r2, r6
 8013e50:	d128      	bne.n	8013ea4 <gpio_init+0x8c>
 8013e52:	fa07 f604 	lsl.w	r6, r7, r4
 8013e56:	401e      	ands	r6, r3
 8013e58:	6146      	str	r6, [r0, #20]
 8013e5a:	6002      	str	r2, [r0, #0]
 8013e5c:	3401      	adds	r4, #1
 8013e5e:	2c08      	cmp	r4, #8
 8013e60:	d1e7      	bne.n	8013e32 <gpio_init+0x1a>
 8013e62:	2600      	movs	r6, #0
 8013e64:	f04f 0c0f 	mov.w	ip, #15
 8013e68:	2701      	movs	r7, #1
 8013e6a:	f106 0208 	add.w	r2, r6, #8
 8013e6e:	fa23 f402 	lsr.w	r4, r3, r2
 8013e72:	07e4      	lsls	r4, r4, #31
 8013e74:	d511      	bpl.n	8013e9a <gpio_init+0x82>
 8013e76:	00b4      	lsls	r4, r6, #2
 8013e78:	f8d0 e004 	ldr.w	lr, [r0, #4]
 8013e7c:	fa0c f804 	lsl.w	r8, ip, r4
 8013e80:	ea2e 0e08 	bic.w	lr, lr, r8
 8013e84:	fa05 f404 	lsl.w	r4, r5, r4
 8013e88:	2928      	cmp	r1, #40	; 0x28
 8013e8a:	ea44 040e 	orr.w	r4, r4, lr
 8013e8e:	d110      	bne.n	8013eb2 <gpio_init+0x9a>
 8013e90:	fa07 f202 	lsl.w	r2, r7, r2
 8013e94:	401a      	ands	r2, r3
 8013e96:	6142      	str	r2, [r0, #20]
 8013e98:	6044      	str	r4, [r0, #4]
 8013e9a:	3601      	adds	r6, #1
 8013e9c:	2e08      	cmp	r6, #8
 8013e9e:	d1e4      	bne.n	8013e6a <gpio_init+0x52>
 8013ea0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013ea4:	2948      	cmp	r1, #72	; 0x48
 8013ea6:	bf02      	ittt	eq
 8013ea8:	fa07 f604 	lsleq.w	r6, r7, r4
 8013eac:	401e      	andeq	r6, r3
 8013eae:	6106      	streq	r6, [r0, #16]
 8013eb0:	e7d3      	b.n	8013e5a <gpio_init+0x42>
 8013eb2:	2948      	cmp	r1, #72	; 0x48
 8013eb4:	bf02      	ittt	eq
 8013eb6:	fa07 f202 	lsleq.w	r2, r7, r2
 8013eba:	401a      	andeq	r2, r3
 8013ebc:	6102      	streq	r2, [r0, #16]
 8013ebe:	e7eb      	b.n	8013e98 <gpio_init+0x80>

08013ec0 <gpio_bit_set>:
 8013ec0:	6101      	str	r1, [r0, #16]
 8013ec2:	4770      	bx	lr

08013ec4 <gpio_bit_reset>:
 8013ec4:	6141      	str	r1, [r0, #20]
 8013ec6:	4770      	bx	lr

08013ec8 <gpio_pin_remap_config>:
 8013ec8:	2800      	cmp	r0, #0
 8013eca:	4a16      	ldr	r2, [pc, #88]	; (8013f24 <gpio_pin_remap_config+0x5c>)
 8013ecc:	b530      	push	{r4, r5, lr}
 8013ece:	f400 1540 	and.w	r5, r0, #3145728	; 0x300000
 8013ed2:	bfb4      	ite	lt
 8013ed4:	69d3      	ldrlt	r3, [r2, #28]
 8013ed6:	6853      	ldrge	r3, [r2, #4]
 8013ed8:	f5b5 1f40 	cmp.w	r5, #3145728	; 0x300000
 8013edc:	b284      	uxth	r4, r0
 8013ede:	d110      	bne.n	8013f02 <gpio_pin_remap_config+0x3a>
 8013ee0:	6855      	ldr	r5, [r2, #4]
 8013ee2:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 8013ee6:	f025 6570 	bic.w	r5, r5, #251658240	; 0xf000000
 8013eea:	6055      	str	r5, [r2, #4]
 8013eec:	b119      	cbz	r1, 8013ef6 <gpio_pin_remap_config+0x2e>
 8013eee:	0d42      	lsrs	r2, r0, #21
 8013ef0:	0112      	lsls	r2, r2, #4
 8013ef2:	4094      	lsls	r4, r2
 8013ef4:	4323      	orrs	r3, r4
 8013ef6:	4a0b      	ldr	r2, [pc, #44]	; (8013f24 <gpio_pin_remap_config+0x5c>)
 8013ef8:	2800      	cmp	r0, #0
 8013efa:	bfb4      	ite	lt
 8013efc:	61d3      	strlt	r3, [r2, #28]
 8013efe:	6053      	strge	r3, [r2, #4]
 8013f00:	bd30      	pop	{r4, r5, pc}
 8013f02:	02c2      	lsls	r2, r0, #11
 8013f04:	bf4d      	iteet	mi
 8013f06:	2203      	movmi	r2, #3
 8013f08:	0d42      	lsrpl	r2, r0, #21
 8013f0a:	0112      	lslpl	r2, r2, #4
 8013f0c:	f3c0 4503 	ubfxmi	r5, r0, #16, #4
 8013f10:	bf4c      	ite	mi
 8013f12:	40aa      	lslmi	r2, r5
 8013f14:	fa04 f202 	lslpl.w	r2, r4, r2
 8013f18:	ea23 0302 	bic.w	r3, r3, r2
 8013f1c:	f043 6370 	orr.w	r3, r3, #251658240	; 0xf000000
 8013f20:	e7e4      	b.n	8013eec <gpio_pin_remap_config+0x24>
 8013f22:	bf00      	nop
 8013f24:	40010000 	andmi	r0, r1, r0

08013f28 <gpio_ethernet_phy_select>:
 8013f28:	4b04      	ldr	r3, [pc, #16]	; (8013f3c <gpio_ethernet_phy_select+0x14>)
 8013f2a:	6859      	ldr	r1, [r3, #4]
 8013f2c:	f421 0100 	bic.w	r1, r1, #8388608	; 0x800000
 8013f30:	6059      	str	r1, [r3, #4]
 8013f32:	685a      	ldr	r2, [r3, #4]
 8013f34:	4302      	orrs	r2, r0
 8013f36:	605a      	str	r2, [r3, #4]
 8013f38:	4770      	bx	lr
 8013f3a:	bf00      	nop
 8013f3c:	40010000 	andmi	r0, r1, r0

08013f40 <pmu_backup_write_enable>:
 8013f40:	4a02      	ldr	r2, [pc, #8]	; (8013f4c <pmu_backup_write_enable+0xc>)
 8013f42:	6813      	ldr	r3, [r2, #0]
 8013f44:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8013f48:	6013      	str	r3, [r2, #0]
 8013f4a:	4770      	bx	lr
 8013f4c:	40007000 	andmi	r7, r0, r0

08013f50 <rcu_periph_clock_enable>:
 8013f50:	2201      	movs	r2, #1
 8013f52:	0983      	lsrs	r3, r0, #6
 8013f54:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8013f58:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 8013f5c:	6819      	ldr	r1, [r3, #0]
 8013f5e:	f000 001f 	and.w	r0, r0, #31
 8013f62:	fa02 f000 	lsl.w	r0, r2, r0
 8013f66:	4308      	orrs	r0, r1
 8013f68:	6018      	str	r0, [r3, #0]
 8013f6a:	4770      	bx	lr

08013f6c <rcu_periph_clock_disable>:
 8013f6c:	2101      	movs	r1, #1
 8013f6e:	0983      	lsrs	r3, r0, #6
 8013f70:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8013f74:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 8013f78:	681a      	ldr	r2, [r3, #0]
 8013f7a:	f000 001f 	and.w	r0, r0, #31
 8013f7e:	fa01 f000 	lsl.w	r0, r1, r0
 8013f82:	ea22 0000 	bic.w	r0, r2, r0
 8013f86:	6018      	str	r0, [r3, #0]
 8013f88:	4770      	bx	lr

08013f8a <rcu_periph_reset_enable>:
 8013f8a:	f7ff bfe1 	b.w	8013f50 <rcu_periph_clock_enable>

08013f8e <rcu_periph_reset_disable>:
 8013f8e:	f7ff bfed 	b.w	8013f6c <rcu_periph_clock_disable>
	...

08013f94 <rcu_bkp_reset_enable>:
 8013f94:	4a02      	ldr	r2, [pc, #8]	; (8013fa0 <rcu_bkp_reset_enable+0xc>)
 8013f96:	6a13      	ldr	r3, [r2, #32]
 8013f98:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8013f9c:	6213      	str	r3, [r2, #32]
 8013f9e:	4770      	bx	lr
 8013fa0:	40021000 	andmi	r1, r2, r0

08013fa4 <rcu_bkp_reset_disable>:
 8013fa4:	4a02      	ldr	r2, [pc, #8]	; (8013fb0 <rcu_bkp_reset_disable+0xc>)
 8013fa6:	6a13      	ldr	r3, [r2, #32]
 8013fa8:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8013fac:	6213      	str	r3, [r2, #32]
 8013fae:	4770      	bx	lr
 8013fb0:	40021000 	andmi	r1, r2, r0

08013fb4 <rcu_ckout0_config>:
 8013fb4:	b510      	push	{r4, lr}
 8013fb6:	4c07      	ldr	r4, [pc, #28]	; (8013fd4 <rcu_ckout0_config+0x20>)
 8013fb8:	6862      	ldr	r2, [r4, #4]
 8013fba:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8013fbe:	4302      	orrs	r2, r0
 8013fc0:	6062      	str	r2, [r4, #4]
 8013fc2:	f8d4 3080 	ldr.w	r3, [r4, #128]	; 0x80
 8013fc6:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8013fca:	430b      	orrs	r3, r1
 8013fcc:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 8013fd0:	bd10      	pop	{r4, pc}
 8013fd2:	bf00      	nop
 8013fd4:	40021000 	andmi	r1, r2, r0

08013fd8 <rcu_pll2_config>:
 8013fd8:	4b04      	ldr	r3, [pc, #16]	; (8013fec <rcu_pll2_config+0x14>)
 8013fda:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8013fdc:	f421 4170 	bic.w	r1, r1, #61440	; 0xf000
 8013fe0:	62d9      	str	r1, [r3, #44]	; 0x2c
 8013fe2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8013fe4:	4302      	orrs	r2, r0
 8013fe6:	62da      	str	r2, [r3, #44]	; 0x2c
 8013fe8:	4770      	bx	lr
 8013fea:	bf00      	nop
 8013fec:	40021000 	andmi	r1, r2, r0

08013ff0 <rcu_adc_clock_config>:
 8013ff0:	490c      	ldr	r1, [pc, #48]	; (8014024 <rcu_adc_clock_config+0x34>)
 8013ff2:	2805      	cmp	r0, #5
 8013ff4:	684b      	ldr	r3, [r1, #4]
 8013ff6:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8013ffa:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 8013ffe:	d006      	beq.n	801400e <rcu_adc_clock_config+0x1e>
 8014000:	d803      	bhi.n	801400a <rcu_adc_clock_config+0x1a>
 8014002:	2804      	cmp	r0, #4
 8014004:	d10a      	bne.n	801401c <rcu_adc_clock_config+0x2c>
 8014006:	604b      	str	r3, [r1, #4]
 8014008:	4770      	bx	lr
 801400a:	2807      	cmp	r0, #7
 801400c:	d1fb      	bne.n	8014006 <rcu_adc_clock_config+0x16>
 801400e:	4a06      	ldr	r2, [pc, #24]	; (8014028 <rcu_adc_clock_config+0x38>)
 8014010:	ea02 3080 	and.w	r0, r2, r0, lsl #14
 8014014:	4303      	orrs	r3, r0
 8014016:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 801401a:	e7f4      	b.n	8014006 <rcu_adc_clock_config+0x16>
 801401c:	ea43 3380 	orr.w	r3, r3, r0, lsl #14
 8014020:	e7f1      	b.n	8014006 <rcu_adc_clock_config+0x16>
 8014022:	bf00      	nop
 8014024:	40021000 	andmi	r1, r2, r0
 8014028:	fffec000 			; <UNDEFINED> instruction: 0xfffec000

0801402c <rcu_flag_get>:
 801402c:	0983      	lsrs	r3, r0, #6
 801402e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8014032:	f503 3304 	add.w	r3, r3, #135168	; 0x21000
 8014036:	681b      	ldr	r3, [r3, #0]
 8014038:	f000 001f 	and.w	r0, r0, #31
 801403c:	fa23 f000 	lsr.w	r0, r3, r0
 8014040:	f000 0001 	and.w	r0, r0, #1
 8014044:	4770      	bx	lr
	...

08014048 <rcu_osci_stab_wait>:
 8014048:	281c      	cmp	r0, #28
 801404a:	b508      	push	{r3, lr}
 801404c:	d056      	beq.n	80140fc <rcu_osci_stab_wait+0xb4>
 801404e:	d812      	bhi.n	8014076 <rcu_osci_stab_wait+0x2e>
 8014050:	2818      	cmp	r0, #24
 8014052:	d04a      	beq.n	80140ea <rcu_osci_stab_wait+0xa2>
 8014054:	d804      	bhi.n	8014060 <rcu_osci_stab_wait+0x18>
 8014056:	b398      	cbz	r0, 80140c0 <rcu_osci_stab_wait+0x78>
 8014058:	2810      	cmp	r0, #16
 801405a:	d022      	beq.n	80140a2 <rcu_osci_stab_wait+0x5a>
 801405c:	2000      	movs	r0, #0
 801405e:	bd08      	pop	{r3, pc}
 8014060:	281a      	cmp	r0, #26
 8014062:	d1fb      	bne.n	801405c <rcu_osci_stab_wait+0x14>
 8014064:	4a2f      	ldr	r2, [pc, #188]	; (8014124 <rcu_osci_stab_wait+0xdc>)
 8014066:	201b      	movs	r0, #27
 8014068:	f7ff ffe0 	bl	801402c <rcu_flag_get>
 801406c:	b908      	cbnz	r0, 8014072 <rcu_osci_stab_wait+0x2a>
 801406e:	3a01      	subs	r2, #1
 8014070:	d1f9      	bne.n	8014066 <rcu_osci_stab_wait+0x1e>
 8014072:	201b      	movs	r0, #27
 8014074:	e01e      	b.n	80140b4 <rcu_osci_stab_wait+0x6c>
 8014076:	f5b0 6f10 	cmp.w	r0, #2304	; 0x900
 801407a:	d02b      	beq.n	80140d4 <rcu_osci_stab_wait+0x8c>
 801407c:	f242 431c 	movw	r3, #9244	; 0x241c
 8014080:	4298      	cmp	r0, r3
 8014082:	d044      	beq.n	801410e <rcu_osci_stab_wait+0xc6>
 8014084:	f5b0 6f00 	cmp.w	r0, #2048	; 0x800
 8014088:	d1e8      	bne.n	801405c <rcu_osci_stab_wait+0x14>
 801408a:	f06f 427c 	mvn.w	r2, #4227858432	; 0xfc000000
 801408e:	f640 0001 	movw	r0, #2049	; 0x801
 8014092:	f7ff ffcb 	bl	801402c <rcu_flag_get>
 8014096:	b908      	cbnz	r0, 801409c <rcu_osci_stab_wait+0x54>
 8014098:	3a01      	subs	r2, #1
 801409a:	d1f8      	bne.n	801408e <rcu_osci_stab_wait+0x46>
 801409c:	f640 0001 	movw	r0, #2049	; 0x801
 80140a0:	e008      	b.n	80140b4 <rcu_osci_stab_wait+0x6c>
 80140a2:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80140a6:	2011      	movs	r0, #17
 80140a8:	f7ff ffc0 	bl	801402c <rcu_flag_get>
 80140ac:	b908      	cbnz	r0, 80140b2 <rcu_osci_stab_wait+0x6a>
 80140ae:	3a01      	subs	r2, #1
 80140b0:	d1f9      	bne.n	80140a6 <rcu_osci_stab_wait+0x5e>
 80140b2:	2011      	movs	r0, #17
 80140b4:	f7ff ffba 	bl	801402c <rcu_flag_get>
 80140b8:	3800      	subs	r0, #0
 80140ba:	bf18      	it	ne
 80140bc:	2001      	movne	r0, #1
 80140be:	e7ce      	b.n	801405e <rcu_osci_stab_wait+0x16>
 80140c0:	f44f 62a0 	mov.w	r2, #1280	; 0x500
 80140c4:	2001      	movs	r0, #1
 80140c6:	f7ff ffb1 	bl	801402c <rcu_flag_get>
 80140ca:	b908      	cbnz	r0, 80140d0 <rcu_osci_stab_wait+0x88>
 80140cc:	3a01      	subs	r2, #1
 80140ce:	d1f9      	bne.n	80140c4 <rcu_osci_stab_wait+0x7c>
 80140d0:	2001      	movs	r0, #1
 80140d2:	e7ef      	b.n	80140b4 <rcu_osci_stab_wait+0x6c>
 80140d4:	4a13      	ldr	r2, [pc, #76]	; (8014124 <rcu_osci_stab_wait+0xdc>)
 80140d6:	f640 1001 	movw	r0, #2305	; 0x901
 80140da:	f7ff ffa7 	bl	801402c <rcu_flag_get>
 80140de:	b908      	cbnz	r0, 80140e4 <rcu_osci_stab_wait+0x9c>
 80140e0:	3a01      	subs	r2, #1
 80140e2:	d1f8      	bne.n	80140d6 <rcu_osci_stab_wait+0x8e>
 80140e4:	f640 1001 	movw	r0, #2305	; 0x901
 80140e8:	e7e4      	b.n	80140b4 <rcu_osci_stab_wait+0x6c>
 80140ea:	4a0e      	ldr	r2, [pc, #56]	; (8014124 <rcu_osci_stab_wait+0xdc>)
 80140ec:	2019      	movs	r0, #25
 80140ee:	f7ff ff9d 	bl	801402c <rcu_flag_get>
 80140f2:	b908      	cbnz	r0, 80140f8 <rcu_osci_stab_wait+0xb0>
 80140f4:	3a01      	subs	r2, #1
 80140f6:	d1f9      	bne.n	80140ec <rcu_osci_stab_wait+0xa4>
 80140f8:	2019      	movs	r0, #25
 80140fa:	e7db      	b.n	80140b4 <rcu_osci_stab_wait+0x6c>
 80140fc:	4a09      	ldr	r2, [pc, #36]	; (8014124 <rcu_osci_stab_wait+0xdc>)
 80140fe:	201d      	movs	r0, #29
 8014100:	f7ff ff94 	bl	801402c <rcu_flag_get>
 8014104:	b908      	cbnz	r0, 801410a <rcu_osci_stab_wait+0xc2>
 8014106:	3a01      	subs	r2, #1
 8014108:	d1f9      	bne.n	80140fe <rcu_osci_stab_wait+0xb6>
 801410a:	201d      	movs	r0, #29
 801410c:	e7d2      	b.n	80140b4 <rcu_osci_stab_wait+0x6c>
 801410e:	4a05      	ldr	r2, [pc, #20]	; (8014124 <rcu_osci_stab_wait+0xdc>)
 8014110:	f242 401d 	movw	r0, #9245	; 0x241d
 8014114:	f7ff ff8a 	bl	801402c <rcu_flag_get>
 8014118:	b908      	cbnz	r0, 801411e <rcu_osci_stab_wait+0xd6>
 801411a:	3a01      	subs	r2, #1
 801411c:	d1f8      	bne.n	8014110 <rcu_osci_stab_wait+0xc8>
 801411e:	f242 401d 	movw	r0, #9245	; 0x241d
 8014122:	e7c7      	b.n	80140b4 <rcu_osci_stab_wait+0x6c>
 8014124:	000fffff 	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>

08014128 <rcu_osci_on>:
 8014128:	f7ff bf12 	b.w	8013f50 <rcu_periph_clock_enable>

0801412c <rcu_clock_freq_get>:
 801412c:	4b3d      	ldr	r3, [pc, #244]	; (8014224 <rcu_clock_freq_get+0xf8>)
 801412e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014130:	4604      	mov	r4, r0
 8014132:	461f      	mov	r7, r3
 8014134:	b089      	sub	sp, #36	; 0x24
 8014136:	ad04      	add	r5, sp, #16
 8014138:	f103 0610 	add.w	r6, r3, #16
 801413c:	462a      	mov	r2, r5
 801413e:	6818      	ldr	r0, [r3, #0]
 8014140:	6859      	ldr	r1, [r3, #4]
 8014142:	3308      	adds	r3, #8
 8014144:	c203      	stmia	r2!, {r0, r1}
 8014146:	42b3      	cmp	r3, r6
 8014148:	4615      	mov	r5, r2
 801414a:	d1f7      	bne.n	801413c <rcu_clock_freq_get+0x10>
 801414c:	466b      	mov	r3, sp
 801414e:	6938      	ldr	r0, [r7, #16]
 8014150:	6871      	ldr	r1, [r6, #4]
 8014152:	4a35      	ldr	r2, [pc, #212]	; (8014228 <rcu_clock_freq_get+0xfc>)
 8014154:	c303      	stmia	r3!, {r0, r1}
 8014156:	c303      	stmia	r3!, {r0, r1}
 8014158:	6853      	ldr	r3, [r2, #4]
 801415a:	f3c3 0381 	ubfx	r3, r3, #2, #2
 801415e:	2b01      	cmp	r3, #1
 8014160:	d052      	beq.n	8014208 <rcu_clock_freq_get+0xdc>
 8014162:	2b02      	cmp	r3, #2
 8014164:	d152      	bne.n	801420c <rcu_clock_freq_get+0xe0>
 8014166:	6853      	ldr	r3, [r2, #4]
 8014168:	03dd      	lsls	r5, r3, #15
 801416a:	d523      	bpl.n	80141b4 <rcu_clock_freq_get+0x88>
 801416c:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
 801416e:	f413 3f80 	tst.w	r3, #65536	; 0x10000
 8014172:	4b2e      	ldr	r3, [pc, #184]	; (801422c <rcu_clock_freq_get+0x100>)
 8014174:	d00e      	beq.n	8014194 <rcu_clock_freq_get+0x68>
 8014176:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 8014178:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
 801417a:	f3c1 1103 	ubfx	r1, r1, #4, #4
 801417e:	f3c0 2003 	ubfx	r0, r0, #8, #4
 8014182:	3101      	adds	r1, #1
 8014184:	280f      	cmp	r0, #15
 8014186:	f100 0502 	add.w	r5, r0, #2
 801418a:	fbb3 f3f1 	udiv	r3, r3, r1
 801418e:	bf08      	it	eq
 8014190:	2514      	moveq	r5, #20
 8014192:	436b      	muls	r3, r5
 8014194:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 8014196:	f001 010f 	and.w	r1, r1, #15
 801419a:	3101      	adds	r1, #1
 801419c:	fbb3 f3f1 	udiv	r3, r3, r1
 80141a0:	6851      	ldr	r1, [r2, #4]
 80141a2:	6850      	ldr	r0, [r2, #4]
 80141a4:	f3c1 4183 	ubfx	r1, r1, #18, #4
 80141a8:	0080      	lsls	r0, r0, #2
 80141aa:	d505      	bpl.n	80141b8 <rcu_clock_freq_get+0x8c>
 80141ac:	f041 0110 	orr.w	r1, r1, #16
 80141b0:	3101      	adds	r1, #1
 80141b2:	e027      	b.n	8014204 <rcu_clock_freq_get+0xd8>
 80141b4:	4b1e      	ldr	r3, [pc, #120]	; (8014230 <rcu_clock_freq_get+0x104>)
 80141b6:	e7f3      	b.n	80141a0 <rcu_clock_freq_get+0x74>
 80141b8:	290d      	cmp	r1, #13
 80141ba:	d120      	bne.n	80141fe <rcu_clock_freq_get+0xd2>
 80141bc:	2006      	movs	r0, #6
 80141be:	0859      	lsrs	r1, r3, #1
 80141c0:	fb00 1303 	mla	r3, r0, r3, r1
 80141c4:	6851      	ldr	r1, [r2, #4]
 80141c6:	f3c1 1103 	ubfx	r1, r1, #4, #4
 80141ca:	3120      	adds	r1, #32
 80141cc:	4469      	add	r1, sp
 80141ce:	f811 1c10 	ldrb.w	r1, [r1, #-16]
 80141d2:	fa23 f001 	lsr.w	r0, r3, r1
 80141d6:	6851      	ldr	r1, [r2, #4]
 80141d8:	6852      	ldr	r2, [r2, #4]
 80141da:	f3c1 2102 	ubfx	r1, r1, #8, #3
 80141de:	f3c2 22c2 	ubfx	r2, r2, #11, #3
 80141e2:	3120      	adds	r1, #32
 80141e4:	3220      	adds	r2, #32
 80141e6:	4469      	add	r1, sp
 80141e8:	446a      	add	r2, sp
 80141ea:	f811 1c20 	ldrb.w	r1, [r1, #-32]
 80141ee:	f812 2c18 	ldrb.w	r2, [r2, #-24]
 80141f2:	2c03      	cmp	r4, #3
 80141f4:	d813      	bhi.n	801421e <rcu_clock_freq_get+0xf2>
 80141f6:	e8df f004 	tbb	[pc, r4]
 80141fa:	100e0c0b 	andne	r0, lr, fp, lsl #24
 80141fe:	290f      	cmp	r1, #15
 8014200:	d0d6      	beq.n	80141b0 <rcu_clock_freq_get+0x84>
 8014202:	3102      	adds	r1, #2
 8014204:	434b      	muls	r3, r1
 8014206:	e7dd      	b.n	80141c4 <rcu_clock_freq_get+0x98>
 8014208:	4b08      	ldr	r3, [pc, #32]	; (801422c <rcu_clock_freq_get+0x100>)
 801420a:	e7db      	b.n	80141c4 <rcu_clock_freq_get+0x98>
 801420c:	4b09      	ldr	r3, [pc, #36]	; (8014234 <rcu_clock_freq_get+0x108>)
 801420e:	e7d9      	b.n	80141c4 <rcu_clock_freq_get+0x98>
 8014210:	4618      	mov	r0, r3
 8014212:	b009      	add	sp, #36	; 0x24
 8014214:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014216:	40c8      	lsrs	r0, r1
 8014218:	e7fb      	b.n	8014212 <rcu_clock_freq_get+0xe6>
 801421a:	40d0      	lsrs	r0, r2
 801421c:	e7f9      	b.n	8014212 <rcu_clock_freq_get+0xe6>
 801421e:	2000      	movs	r0, #0
 8014220:	e7f7      	b.n	8014212 <rcu_clock_freq_get+0xe6>
 8014222:	bf00      	nop
 8014224:	0801597c 	stmdaeq	r1, {r2, r3, r4, r5, r6, r8, fp, ip, lr}
 8014228:	40021000 	andmi	r1, r2, r0
 801422c:	017d7840 	cmneq	sp, r0, asr #16
 8014230:	003d0900 	eorseq	r0, sp, r0, lsl #18
 8014234:	007a1200 	rsbseq	r1, sl, r0, lsl #4

08014238 <timer_deinit>:
 8014238:	b508      	push	{r3, lr}
 801423a:	4b4e      	ldr	r3, [pc, #312]	; (8014374 <timer_deinit+0x13c>)
 801423c:	4298      	cmp	r0, r3
 801423e:	f000 8092 	beq.w	8014366 <timer_deinit+0x12e>
 8014242:	d822      	bhi.n	801428a <timer_deinit+0x52>
 8014244:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
 8014248:	4298      	cmp	r0, r3
 801424a:	d062      	beq.n	8014312 <timer_deinit+0xda>
 801424c:	d80b      	bhi.n	8014266 <timer_deinit+0x2e>
 801424e:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8014252:	4298      	cmp	r0, r3
 8014254:	d04f      	beq.n	80142f6 <timer_deinit+0xbe>
 8014256:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 801425a:	4298      	cmp	r0, r3
 801425c:	d052      	beq.n	8014304 <timer_deinit+0xcc>
 801425e:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8014262:	d041      	beq.n	80142e8 <timer_deinit+0xb0>
 8014264:	bd08      	pop	{r3, pc}
 8014266:	4b44      	ldr	r3, [pc, #272]	; (8014378 <timer_deinit+0x140>)
 8014268:	4298      	cmp	r0, r3
 801426a:	d059      	beq.n	8014320 <timer_deinit+0xe8>
 801426c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8014270:	4298      	cmp	r0, r3
 8014272:	d071      	beq.n	8014358 <timer_deinit+0x120>
 8014274:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8014278:	4298      	cmp	r0, r3
 801427a:	d1f3      	bne.n	8014264 <timer_deinit+0x2c>
 801427c:	f240 4004 	movw	r0, #1028	; 0x404
 8014280:	f7ff fe83 	bl	8013f8a <rcu_periph_reset_enable>
 8014284:	f240 4004 	movw	r0, #1028	; 0x404
 8014288:	e02a      	b.n	80142e0 <timer_deinit+0xa8>
 801428a:	4b3c      	ldr	r3, [pc, #240]	; (801437c <timer_deinit+0x144>)
 801428c:	4298      	cmp	r0, r3
 801428e:	d055      	beq.n	801433c <timer_deinit+0x104>
 8014290:	d812      	bhi.n	80142b8 <timer_deinit+0x80>
 8014292:	f5a3 5300 	sub.w	r3, r3, #8192	; 0x2000
 8014296:	4298      	cmp	r0, r3
 8014298:	d01c      	beq.n	80142d4 <timer_deinit+0x9c>
 801429a:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 801429e:	4298      	cmp	r0, r3
 80142a0:	d045      	beq.n	801432e <timer_deinit+0xf6>
 80142a2:	f5a3 338a 	sub.w	r3, r3, #70656	; 0x11400
 80142a6:	4298      	cmp	r0, r3
 80142a8:	d1dc      	bne.n	8014264 <timer_deinit+0x2c>
 80142aa:	f44f 6081 	mov.w	r0, #1032	; 0x408
 80142ae:	f7ff fe6c 	bl	8013f8a <rcu_periph_reset_enable>
 80142b2:	f44f 6081 	mov.w	r0, #1032	; 0x408
 80142b6:	e013      	b.n	80142e0 <timer_deinit+0xa8>
 80142b8:	4b31      	ldr	r3, [pc, #196]	; (8014380 <timer_deinit+0x148>)
 80142ba:	4298      	cmp	r0, r3
 80142bc:	d045      	beq.n	801434a <timer_deinit+0x112>
 80142be:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80142c2:	4298      	cmp	r0, r3
 80142c4:	d1ce      	bne.n	8014264 <timer_deinit+0x2c>
 80142c6:	f240 3015 	movw	r0, #789	; 0x315
 80142ca:	f7ff fe5e 	bl	8013f8a <rcu_periph_reset_enable>
 80142ce:	f240 3015 	movw	r0, #789	; 0x315
 80142d2:	e005      	b.n	80142e0 <timer_deinit+0xa8>
 80142d4:	f240 300b 	movw	r0, #779	; 0x30b
 80142d8:	f7ff fe57 	bl	8013f8a <rcu_periph_reset_enable>
 80142dc:	f240 300b 	movw	r0, #779	; 0x30b
 80142e0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80142e4:	f7ff be53 	b.w	8013f8e <rcu_periph_reset_disable>
 80142e8:	f44f 6080 	mov.w	r0, #1024	; 0x400
 80142ec:	f7ff fe4d 	bl	8013f8a <rcu_periph_reset_enable>
 80142f0:	f44f 6080 	mov.w	r0, #1024	; 0x400
 80142f4:	e7f4      	b.n	80142e0 <timer_deinit+0xa8>
 80142f6:	f240 4001 	movw	r0, #1025	; 0x401
 80142fa:	f7ff fe46 	bl	8013f8a <rcu_periph_reset_enable>
 80142fe:	f240 4001 	movw	r0, #1025	; 0x401
 8014302:	e7ed      	b.n	80142e0 <timer_deinit+0xa8>
 8014304:	f240 4002 	movw	r0, #1026	; 0x402
 8014308:	f7ff fe3f 	bl	8013f8a <rcu_periph_reset_enable>
 801430c:	f240 4002 	movw	r0, #1026	; 0x402
 8014310:	e7e6      	b.n	80142e0 <timer_deinit+0xa8>
 8014312:	f240 4003 	movw	r0, #1027	; 0x403
 8014316:	f7ff fe38 	bl	8013f8a <rcu_periph_reset_enable>
 801431a:	f240 4003 	movw	r0, #1027	; 0x403
 801431e:	e7df      	b.n	80142e0 <timer_deinit+0xa8>
 8014320:	f240 4005 	movw	r0, #1029	; 0x405
 8014324:	f7ff fe31 	bl	8013f8a <rcu_periph_reset_enable>
 8014328:	f240 4005 	movw	r0, #1029	; 0x405
 801432c:	e7d8      	b.n	80142e0 <timer_deinit+0xa8>
 801432e:	f240 300d 	movw	r0, #781	; 0x30d
 8014332:	f7ff fe2a 	bl	8013f8a <rcu_periph_reset_enable>
 8014336:	f240 300d 	movw	r0, #781	; 0x30d
 801433a:	e7d1      	b.n	80142e0 <timer_deinit+0xa8>
 801433c:	f240 3013 	movw	r0, #787	; 0x313
 8014340:	f7ff fe23 	bl	8013f8a <rcu_periph_reset_enable>
 8014344:	f240 3013 	movw	r0, #787	; 0x313
 8014348:	e7ca      	b.n	80142e0 <timer_deinit+0xa8>
 801434a:	f44f 7045 	mov.w	r0, #788	; 0x314
 801434e:	f7ff fe1c 	bl	8013f8a <rcu_periph_reset_enable>
 8014352:	f44f 7045 	mov.w	r0, #788	; 0x314
 8014356:	e7c3      	b.n	80142e0 <timer_deinit+0xa8>
 8014358:	f240 4006 	movw	r0, #1030	; 0x406
 801435c:	f7ff fe15 	bl	8013f8a <rcu_periph_reset_enable>
 8014360:	f240 4006 	movw	r0, #1030	; 0x406
 8014364:	e7bc      	b.n	80142e0 <timer_deinit+0xa8>
 8014366:	f240 4007 	movw	r0, #1031	; 0x407
 801436a:	f7ff fe0e 	bl	8013f8a <rcu_periph_reset_enable>
 801436e:	f240 4007 	movw	r0, #1031	; 0x407
 8014372:	e7b5      	b.n	80142e0 <timer_deinit+0xa8>
 8014374:	40001c00 	andmi	r1, r0, r0, lsl #24
 8014378:	40001400 	andmi	r1, r0, r0, lsl #8
 801437c:	40014c00 	andmi	r4, r1, r0, lsl #24
 8014380:	40015000 	andmi	r5, r1, r0

08014384 <timer_init>:
 8014384:	880b      	ldrh	r3, [r1, #0]
 8014386:	6283      	str	r3, [r0, #40]	; 0x28
 8014388:	4b26      	ldr	r3, [pc, #152]	; (8014424 <timer_init+0xa0>)
 801438a:	4298      	cmp	r0, r3
 801438c:	d018      	beq.n	80143c0 <timer_init+0x3c>
 801438e:	f420 6240 	bic.w	r2, r0, #3072	; 0xc00
 8014392:	f1b2 4f80 	cmp.w	r2, #1073741824	; 0x40000000
 8014396:	f420 6380 	bic.w	r3, r0, #1024	; 0x400
 801439a:	d011      	beq.n	80143c0 <timer_init+0x3c>
 801439c:	4a22      	ldr	r2, [pc, #136]	; (8014428 <timer_init+0xa4>)
 801439e:	4290      	cmp	r0, r2
 80143a0:	d00e      	beq.n	80143c0 <timer_init+0x3c>
 80143a2:	f502 52c0 	add.w	r2, r2, #6144	; 0x1800
 80143a6:	4290      	cmp	r0, r2
 80143a8:	d00a      	beq.n	80143c0 <timer_init+0x3c>
 80143aa:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80143ae:	4293      	cmp	r3, r2
 80143b0:	d006      	beq.n	80143c0 <timer_init+0x3c>
 80143b2:	f5a2 329c 	sub.w	r2, r2, #79872	; 0x13800
 80143b6:	4293      	cmp	r3, r2
 80143b8:	d002      	beq.n	80143c0 <timer_init+0x3c>
 80143ba:	4b1c      	ldr	r3, [pc, #112]	; (801442c <timer_init+0xa8>)
 80143bc:	4298      	cmp	r0, r3
 80143be:	d10f      	bne.n	80143e0 <timer_init+0x5c>
 80143c0:	6803      	ldr	r3, [r0, #0]
 80143c2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80143c6:	6003      	str	r3, [r0, #0]
 80143c8:	884b      	ldrh	r3, [r1, #2]
 80143ca:	6802      	ldr	r2, [r0, #0]
 80143cc:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80143d0:	4313      	orrs	r3, r2
 80143d2:	6003      	str	r3, [r0, #0]
 80143d4:	888b      	ldrh	r3, [r1, #4]
 80143d6:	6802      	ldr	r2, [r0, #0]
 80143d8:	f003 0310 	and.w	r3, r3, #16
 80143dc:	4313      	orrs	r3, r2
 80143de:	6003      	str	r3, [r0, #0]
 80143e0:	688b      	ldr	r3, [r1, #8]
 80143e2:	62c3      	str	r3, [r0, #44]	; 0x2c
 80143e4:	4b12      	ldr	r3, [pc, #72]	; (8014430 <timer_init+0xac>)
 80143e6:	4298      	cmp	r0, r3
 80143e8:	d003      	beq.n	80143f2 <timer_init+0x6e>
 80143ea:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80143ee:	4298      	cmp	r0, r3
 80143f0:	d104      	bne.n	80143fc <timer_init+0x78>
 80143f2:	6943      	ldr	r3, [r0, #20]
 80143f4:	f043 0301 	orr.w	r3, r3, #1
 80143f8:	6143      	str	r3, [r0, #20]
 80143fa:	4770      	bx	lr
 80143fc:	6803      	ldr	r3, [r0, #0]
 80143fe:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8014402:	6003      	str	r3, [r0, #0]
 8014404:	898b      	ldrh	r3, [r1, #12]
 8014406:	6802      	ldr	r2, [r0, #0]
 8014408:	f403 7340 	and.w	r3, r3, #768	; 0x300
 801440c:	4313      	orrs	r3, r2
 801440e:	6003      	str	r3, [r0, #0]
 8014410:	4b04      	ldr	r3, [pc, #16]	; (8014424 <timer_init+0xa0>)
 8014412:	4298      	cmp	r0, r3
 8014414:	d002      	beq.n	801441c <timer_init+0x98>
 8014416:	4b04      	ldr	r3, [pc, #16]	; (8014428 <timer_init+0xa4>)
 8014418:	4298      	cmp	r0, r3
 801441a:	d1ea      	bne.n	80143f2 <timer_init+0x6e>
 801441c:	7b8b      	ldrb	r3, [r1, #14]
 801441e:	6303      	str	r3, [r0, #48]	; 0x30
 8014420:	e7e7      	b.n	80143f2 <timer_init+0x6e>
 8014422:	bf00      	nop
 8014424:	40012c00 	andmi	r2, r1, r0, lsl #24
 8014428:	40013400 	andmi	r3, r1, r0, lsl #8
 801442c:	40002000 	andmi	r2, r0, r0
 8014430:	40001000 	andmi	r1, r0, r0

08014434 <timer_enable>:
 8014434:	6803      	ldr	r3, [r0, #0]
 8014436:	f043 0301 	orr.w	r3, r3, #1
 801443a:	6003      	str	r3, [r0, #0]
 801443c:	4770      	bx	lr

0801443e <timer_disable>:
 801443e:	6803      	ldr	r3, [r0, #0]
 8014440:	f023 0301 	bic.w	r3, r3, #1
 8014444:	6003      	str	r3, [r0, #0]
 8014446:	4770      	bx	lr

08014448 <timer_dma_enable>:
 8014448:	68c3      	ldr	r3, [r0, #12]
 801444a:	4319      	orrs	r1, r3
 801444c:	60c1      	str	r1, [r0, #12]
 801444e:	4770      	bx	lr

08014450 <timer_channel_output_mode_config>:
 8014450:	2903      	cmp	r1, #3
 8014452:	d81a      	bhi.n	801448a <timer_channel_output_mode_config+0x3a>
 8014454:	e8df f001 	tbb	[pc, r1]
 8014458:	1a120a02 	bne	8496c68 <__exidx_end+0x47ecbc>
 801445c:	6983      	ldr	r3, [r0, #24]
 801445e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8014462:	6183      	str	r3, [r0, #24]
 8014464:	6983      	ldr	r3, [r0, #24]
 8014466:	431a      	orrs	r2, r3
 8014468:	6182      	str	r2, [r0, #24]
 801446a:	4770      	bx	lr
 801446c:	6983      	ldr	r3, [r0, #24]
 801446e:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8014472:	6183      	str	r3, [r0, #24]
 8014474:	6983      	ldr	r3, [r0, #24]
 8014476:	ea43 2202 	orr.w	r2, r3, r2, lsl #8
 801447a:	e7f5      	b.n	8014468 <timer_channel_output_mode_config+0x18>
 801447c:	69c3      	ldr	r3, [r0, #28]
 801447e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8014482:	61c3      	str	r3, [r0, #28]
 8014484:	69c3      	ldr	r3, [r0, #28]
 8014486:	431a      	orrs	r2, r3
 8014488:	61c2      	str	r2, [r0, #28]
 801448a:	4770      	bx	lr
 801448c:	69c3      	ldr	r3, [r0, #28]
 801448e:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8014492:	61c3      	str	r3, [r0, #28]
 8014494:	69c3      	ldr	r3, [r0, #28]
 8014496:	ea43 2202 	orr.w	r2, r3, r2, lsl #8
 801449a:	e7f5      	b.n	8014488 <timer_channel_output_mode_config+0x38>

0801449c <timer_channel_output_pulse_value_config>:
 801449c:	2903      	cmp	r1, #3
 801449e:	d80a      	bhi.n	80144b6 <timer_channel_output_pulse_value_config+0x1a>
 80144a0:	e8df f001 	tbb	[pc, r1]
 80144a4:	08060402 	stmdaeq	r6, {r1, sl}
 80144a8:	6342      	str	r2, [r0, #52]	; 0x34
 80144aa:	4770      	bx	lr
 80144ac:	6382      	str	r2, [r0, #56]	; 0x38
 80144ae:	4770      	bx	lr
 80144b0:	63c2      	str	r2, [r0, #60]	; 0x3c
 80144b2:	4770      	bx	lr
 80144b4:	6402      	str	r2, [r0, #64]	; 0x40
 80144b6:	4770      	bx	lr

080144b8 <timer_input_trigger_source_select>:
 80144b8:	6882      	ldr	r2, [r0, #8]
 80144ba:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 80144be:	6082      	str	r2, [r0, #8]
 80144c0:	6883      	ldr	r3, [r0, #8]
 80144c2:	430b      	orrs	r3, r1
 80144c4:	6083      	str	r3, [r0, #8]
 80144c6:	4770      	bx	lr

080144c8 <timer_master_output_trigger_source_select>:
 80144c8:	6842      	ldr	r2, [r0, #4]
 80144ca:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 80144ce:	6042      	str	r2, [r0, #4]
 80144d0:	6843      	ldr	r3, [r0, #4]
 80144d2:	430b      	orrs	r3, r1
 80144d4:	6043      	str	r3, [r0, #4]
 80144d6:	4770      	bx	lr

080144d8 <timer_slave_mode_select>:
 80144d8:	6882      	ldr	r2, [r0, #8]
 80144da:	f022 0207 	bic.w	r2, r2, #7
 80144de:	6082      	str	r2, [r0, #8]
 80144e0:	6883      	ldr	r3, [r0, #8]
 80144e2:	430b      	orrs	r3, r1
 80144e4:	6083      	str	r3, [r0, #8]
 80144e6:	4770      	bx	lr

080144e8 <timer_master_slave_mode_config>:
 80144e8:	2980      	cmp	r1, #128	; 0x80
 80144ea:	d104      	bne.n	80144f6 <timer_master_slave_mode_config+0xe>
 80144ec:	6883      	ldr	r3, [r0, #8]
 80144ee:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80144f2:	6083      	str	r3, [r0, #8]
 80144f4:	4770      	bx	lr
 80144f6:	2900      	cmp	r1, #0
 80144f8:	d1fc      	bne.n	80144f4 <timer_master_slave_mode_config+0xc>
 80144fa:	6883      	ldr	r3, [r0, #8]
 80144fc:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8014500:	e7f7      	b.n	80144f2 <timer_master_slave_mode_config+0xa>

08014502 <timer_interrupt_enable>:
 8014502:	68c3      	ldr	r3, [r0, #12]
 8014504:	430b      	orrs	r3, r1
 8014506:	60c3      	str	r3, [r0, #12]
 8014508:	4770      	bx	lr
	...

0801450c <usart_deinit>:
 801450c:	b508      	push	{r3, lr}
 801450e:	4b2d      	ldr	r3, [pc, #180]	; (80145c4 <usart_deinit+0xb8>)
 8014510:	4298      	cmp	r0, r3
 8014512:	d050      	beq.n	80145b6 <usart_deinit+0xaa>
 8014514:	d817      	bhi.n	8014546 <usart_deinit+0x3a>
 8014516:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 801451a:	4298      	cmp	r0, r3
 801451c:	d044      	beq.n	80145a8 <usart_deinit+0x9c>
 801451e:	d808      	bhi.n	8014532 <usart_deinit+0x26>
 8014520:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8014524:	4298      	cmp	r0, r3
 8014526:	d02a      	beq.n	801457e <usart_deinit+0x72>
 8014528:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 801452c:	4298      	cmp	r0, r3
 801452e:	d02d      	beq.n	801458c <usart_deinit+0x80>
 8014530:	bd08      	pop	{r3, pc}
 8014532:	4b25      	ldr	r3, [pc, #148]	; (80145c8 <usart_deinit+0xbc>)
 8014534:	4298      	cmp	r0, r3
 8014536:	d1fb      	bne.n	8014530 <usart_deinit+0x24>
 8014538:	f240 4014 	movw	r0, #1044	; 0x414
 801453c:	f7ff fd25 	bl	8013f8a <rcu_periph_reset_enable>
 8014540:	f240 4014 	movw	r0, #1044	; 0x414
 8014544:	e017      	b.n	8014576 <usart_deinit+0x6a>
 8014546:	4b21      	ldr	r3, [pc, #132]	; (80145cc <usart_deinit+0xc0>)
 8014548:	4298      	cmp	r0, r3
 801454a:	d00e      	beq.n	801456a <usart_deinit+0x5e>
 801454c:	f503 5360 	add.w	r3, r3, #14336	; 0x3800
 8014550:	4298      	cmp	r0, r3
 8014552:	d022      	beq.n	801459a <usart_deinit+0x8e>
 8014554:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
 8014558:	4298      	cmp	r0, r3
 801455a:	d1e9      	bne.n	8014530 <usart_deinit+0x24>
 801455c:	f641 601f 	movw	r0, #7711	; 0x1e1f
 8014560:	f7ff fd13 	bl	8013f8a <rcu_periph_reset_enable>
 8014564:	f641 601f 	movw	r0, #7711	; 0x1e1f
 8014568:	e005      	b.n	8014576 <usart_deinit+0x6a>
 801456a:	f240 300e 	movw	r0, #782	; 0x30e
 801456e:	f7ff fd0c 	bl	8013f8a <rcu_periph_reset_enable>
 8014572:	f240 300e 	movw	r0, #782	; 0x30e
 8014576:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801457a:	f7ff bd08 	b.w	8013f8e <rcu_periph_reset_disable>
 801457e:	f240 4011 	movw	r0, #1041	; 0x411
 8014582:	f7ff fd02 	bl	8013f8a <rcu_periph_reset_enable>
 8014586:	f240 4011 	movw	r0, #1041	; 0x411
 801458a:	e7f4      	b.n	8014576 <usart_deinit+0x6a>
 801458c:	f240 4012 	movw	r0, #1042	; 0x412
 8014590:	f7ff fcfb 	bl	8013f8a <rcu_periph_reset_enable>
 8014594:	f240 4012 	movw	r0, #1042	; 0x412
 8014598:	e7ed      	b.n	8014576 <usart_deinit+0x6a>
 801459a:	f641 5018 	movw	r0, #7448	; 0x1d18
 801459e:	f7ff fcf4 	bl	8013f8a <rcu_periph_reset_enable>
 80145a2:	f641 5018 	movw	r0, #7448	; 0x1d18
 80145a6:	e7e6      	b.n	8014576 <usart_deinit+0x6a>
 80145a8:	f240 4013 	movw	r0, #1043	; 0x413
 80145ac:	f7ff fced 	bl	8013f8a <rcu_periph_reset_enable>
 80145b0:	f240 4013 	movw	r0, #1043	; 0x413
 80145b4:	e7df      	b.n	8014576 <usart_deinit+0x6a>
 80145b6:	f641 601e 	movw	r0, #7710	; 0x1e1e
 80145ba:	f7ff fce6 	bl	8013f8a <rcu_periph_reset_enable>
 80145be:	f641 601e 	movw	r0, #7710	; 0x1e1e
 80145c2:	e7d8      	b.n	8014576 <usart_deinit+0x6a>
 80145c4:	40007800 	andmi	r7, r0, r0, lsl #16
 80145c8:	40005000 	andmi	r5, r0, r0
 80145cc:	40013800 	andmi	r3, r1, r0, lsl #16

080145d0 <usart_baudrate_set>:
 80145d0:	b538      	push	{r3, r4, r5, lr}
 80145d2:	4b16      	ldr	r3, [pc, #88]	; (801462c <usart_baudrate_set+0x5c>)
 80145d4:	4604      	mov	r4, r0
 80145d6:	4298      	cmp	r0, r3
 80145d8:	460d      	mov	r5, r1
 80145da:	d025      	beq.n	8014628 <usart_baudrate_set+0x58>
 80145dc:	d816      	bhi.n	801460c <usart_baudrate_set+0x3c>
 80145de:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 80145e2:	4298      	cmp	r0, r3
 80145e4:	d020      	beq.n	8014628 <usart_baudrate_set+0x58>
 80145e6:	d80f      	bhi.n	8014608 <usart_baudrate_set+0x38>
 80145e8:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 80145ec:	4298      	cmp	r0, r3
 80145ee:	d01b      	beq.n	8014628 <usart_baudrate_set+0x58>
 80145f0:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80145f4:	429c      	cmp	r4, r3
 80145f6:	d017      	beq.n	8014628 <usart_baudrate_set+0x58>
 80145f8:	2000      	movs	r0, #0
 80145fa:	eb00 0355 	add.w	r3, r0, r5, lsr #1
 80145fe:	fbb3 f1f5 	udiv	r1, r3, r5
 8014602:	b289      	uxth	r1, r1
 8014604:	60a1      	str	r1, [r4, #8]
 8014606:	bd38      	pop	{r3, r4, r5, pc}
 8014608:	4b09      	ldr	r3, [pc, #36]	; (8014630 <usart_baudrate_set+0x60>)
 801460a:	e7f3      	b.n	80145f4 <usart_baudrate_set+0x24>
 801460c:	4b09      	ldr	r3, [pc, #36]	; (8014634 <usart_baudrate_set+0x64>)
 801460e:	4298      	cmp	r0, r3
 8014610:	d006      	beq.n	8014620 <usart_baudrate_set+0x50>
 8014612:	f503 5360 	add.w	r3, r3, #14336	; 0x3800
 8014616:	4298      	cmp	r0, r3
 8014618:	d002      	beq.n	8014620 <usart_baudrate_set+0x50>
 801461a:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
 801461e:	e7e9      	b.n	80145f4 <usart_baudrate_set+0x24>
 8014620:	2003      	movs	r0, #3
 8014622:	f7ff fd83 	bl	801412c <rcu_clock_freq_get>
 8014626:	e7e8      	b.n	80145fa <usart_baudrate_set+0x2a>
 8014628:	2002      	movs	r0, #2
 801462a:	e7fa      	b.n	8014622 <usart_baudrate_set+0x52>
 801462c:	40007800 	andmi	r7, r0, r0, lsl #16
 8014630:	40005000 	andmi	r5, r0, r0
 8014634:	40013800 	andmi	r3, r1, r0, lsl #16

08014638 <usart_parity_config>:
 8014638:	68c2      	ldr	r2, [r0, #12]
 801463a:	f422 62c0 	bic.w	r2, r2, #1536	; 0x600
 801463e:	60c2      	str	r2, [r0, #12]
 8014640:	68c3      	ldr	r3, [r0, #12]
 8014642:	430b      	orrs	r3, r1
 8014644:	60c3      	str	r3, [r0, #12]
 8014646:	4770      	bx	lr

08014648 <usart_word_length_set>:
 8014648:	68c2      	ldr	r2, [r0, #12]
 801464a:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 801464e:	60c2      	str	r2, [r0, #12]
 8014650:	68c3      	ldr	r3, [r0, #12]
 8014652:	430b      	orrs	r3, r1
 8014654:	60c3      	str	r3, [r0, #12]
 8014656:	4770      	bx	lr

08014658 <usart_stop_bit_set>:
 8014658:	6902      	ldr	r2, [r0, #16]
 801465a:	f422 5240 	bic.w	r2, r2, #12288	; 0x3000
 801465e:	6102      	str	r2, [r0, #16]
 8014660:	6903      	ldr	r3, [r0, #16]
 8014662:	430b      	orrs	r3, r1
 8014664:	6103      	str	r3, [r0, #16]
 8014666:	4770      	bx	lr

08014668 <usart_transmit_config>:
 8014668:	68c3      	ldr	r3, [r0, #12]
 801466a:	f023 0308 	bic.w	r3, r3, #8
 801466e:	430b      	orrs	r3, r1
 8014670:	60c3      	str	r3, [r0, #12]
 8014672:	4770      	bx	lr

08014674 <usart_receive_config>:
 8014674:	68c3      	ldr	r3, [r0, #12]
 8014676:	f023 0304 	bic.w	r3, r3, #4
 801467a:	430b      	orrs	r3, r1
 801467c:	60c3      	str	r3, [r0, #12]
 801467e:	4770      	bx	lr

08014680 <usart_hardware_flow_rts_config>:
 8014680:	6943      	ldr	r3, [r0, #20]
 8014682:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8014686:	430b      	orrs	r3, r1
 8014688:	6143      	str	r3, [r0, #20]
 801468a:	4770      	bx	lr

0801468c <usart_hardware_flow_cts_config>:
 801468c:	6943      	ldr	r3, [r0, #20]
 801468e:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8014692:	430b      	orrs	r3, r1
 8014694:	6143      	str	r3, [r0, #20]
 8014696:	4770      	bx	lr

08014698 <usart_flag_get>:
 8014698:	098b      	lsrs	r3, r1, #6
 801469a:	5818      	ldr	r0, [r3, r0]
 801469c:	f001 011f 	and.w	r1, r1, #31
 80146a0:	40c8      	lsrs	r0, r1
 80146a2:	f000 0001 	and.w	r0, r0, #1
 80146a6:	4770      	bx	lr

080146a8 <emac_start>:
 80146a8:	b510      	push	{r4, lr}
 80146aa:	4604      	mov	r4, r0
 80146ac:	f240 6002 	movw	r0, #1538	; 0x602
 80146b0:	f7ff fc4e 	bl	8013f50 <rcu_periph_clock_enable>
 80146b4:	f240 6003 	movw	r0, #1539	; 0x603
 80146b8:	f7ff fc4a 	bl	8013f50 <rcu_periph_clock_enable>
 80146bc:	f240 6004 	movw	r0, #1540	; 0x604
 80146c0:	f7ff fc46 	bl	8013f50 <rcu_periph_clock_enable>
 80146c4:	f44f 7380 	mov.w	r3, #256	; 0x100
 80146c8:	2203      	movs	r2, #3
 80146ca:	2118      	movs	r1, #24
 80146cc:	4846      	ldr	r0, [pc, #280]	; (80147e8 <emac_start+0x140>)
 80146ce:	f7ff fba3 	bl	8013e18 <gpio_init>
 80146d2:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 80146d6:	f7ff fc3b 	bl	8013f50 <rcu_periph_clock_enable>
 80146da:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 80146de:	f7ff fc7b 	bl	8013fd8 <rcu_pll2_config>
 80146e2:	201c      	movs	r0, #28
 80146e4:	f7ff fd20 	bl	8014128 <rcu_osci_on>
 80146e8:	201c      	movs	r0, #28
 80146ea:	f7ff fcad 	bl	8014048 <rcu_osci_stab_wait>
 80146ee:	2100      	movs	r1, #0
 80146f0:	f04f 6030 	mov.w	r0, #184549376	; 0xb000000
 80146f4:	f7ff fc5e 	bl	8013fb4 <rcu_ckout0_config>
 80146f8:	f44f 0000 	mov.w	r0, #8388608	; 0x800000
 80146fc:	f7ff fc14 	bl	8013f28 <gpio_ethernet_phy_select>
 8014700:	2302      	movs	r3, #2
 8014702:	2203      	movs	r2, #3
 8014704:	2104      	movs	r1, #4
 8014706:	4838      	ldr	r0, [pc, #224]	; (80147e8 <emac_start+0x140>)
 8014708:	f7ff fb86 	bl	8013e18 <gpio_init>
 801470c:	2304      	movs	r3, #4
 801470e:	2203      	movs	r2, #3
 8014710:	2118      	movs	r1, #24
 8014712:	4835      	ldr	r0, [pc, #212]	; (80147e8 <emac_start+0x140>)
 8014714:	f7ff fb80 	bl	8013e18 <gpio_init>
 8014718:	2380      	movs	r3, #128	; 0x80
 801471a:	2203      	movs	r2, #3
 801471c:	2104      	movs	r1, #4
 801471e:	4832      	ldr	r0, [pc, #200]	; (80147e8 <emac_start+0x140>)
 8014720:	f7ff fb7a 	bl	8013e18 <gpio_init>
 8014724:	2302      	movs	r3, #2
 8014726:	2203      	movs	r2, #3
 8014728:	2118      	movs	r1, #24
 801472a:	4830      	ldr	r0, [pc, #192]	; (80147ec <emac_start+0x144>)
 801472c:	f7ff fb74 	bl	8013e18 <gpio_init>
 8014730:	2310      	movs	r3, #16
 8014732:	2203      	movs	r2, #3
 8014734:	2104      	movs	r1, #4
 8014736:	482d      	ldr	r0, [pc, #180]	; (80147ec <emac_start+0x144>)
 8014738:	f7ff fb6e 	bl	8013e18 <gpio_init>
 801473c:	2320      	movs	r3, #32
 801473e:	2203      	movs	r2, #3
 8014740:	2104      	movs	r1, #4
 8014742:	482a      	ldr	r0, [pc, #168]	; (80147ec <emac_start+0x144>)
 8014744:	f7ff fb68 	bl	8013e18 <gpio_init>
 8014748:	f44f 6300 	mov.w	r3, #2048	; 0x800
 801474c:	2203      	movs	r2, #3
 801474e:	2118      	movs	r1, #24
 8014750:	4827      	ldr	r0, [pc, #156]	; (80147f0 <emac_start+0x148>)
 8014752:	f7ff fb61 	bl	8013e18 <gpio_init>
 8014756:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 801475a:	2203      	movs	r2, #3
 801475c:	2118      	movs	r1, #24
 801475e:	4824      	ldr	r0, [pc, #144]	; (80147f0 <emac_start+0x148>)
 8014760:	f7ff fb5a 	bl	8013e18 <gpio_init>
 8014764:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8014768:	2203      	movs	r2, #3
 801476a:	2118      	movs	r1, #24
 801476c:	4820      	ldr	r0, [pc, #128]	; (80147f0 <emac_start+0x148>)
 801476e:	f7ff fb53 	bl	8013e18 <gpio_init>
 8014772:	f240 500e 	movw	r0, #1294	; 0x50e
 8014776:	f7ff fbeb 	bl	8013f50 <rcu_periph_clock_enable>
 801477a:	f240 500f 	movw	r0, #1295	; 0x50f
 801477e:	f7ff fbe7 	bl	8013f50 <rcu_periph_clock_enable>
 8014782:	f44f 60a2 	mov.w	r0, #1296	; 0x510
 8014786:	f7ff fbe3 	bl	8013f50 <rcu_periph_clock_enable>
 801478a:	f001 f831 	bl	80157f0 <enet_deinit>
 801478e:	f000 fc89 	bl	80150a4 <enet_software_reset>
 8014792:	b900      	cbnz	r0, 8014796 <emac_start+0xee>
 8014794:	e7fe      	b.n	8014794 <emac_start+0xec>
 8014796:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 801479a:	f44f 6180 	mov.w	r1, #1024	; 0x400
 801479e:	2001      	movs	r0, #1
 80147a0:	f000 fe04 	bl	80153ac <enet_init>
 80147a4:	4b13      	ldr	r3, [pc, #76]	; (80147f4 <emac_start+0x14c>)
 80147a6:	6018      	str	r0, [r3, #0]
 80147a8:	681b      	ldr	r3, [r3, #0]
 80147aa:	b903      	cbnz	r3, 80147ae <emac_start+0x106>
 80147ac:	e7fe      	b.n	80147ac <emac_start+0x104>
 80147ae:	4620      	mov	r0, r4
 80147b0:	f000 fb70 	bl	8014e94 <mac_address_get>
 80147b4:	4621      	mov	r1, r4
 80147b6:	2000      	movs	r0, #0
 80147b8:	f000 fd58 	bl	801526c <enet_mac_address_set>
 80147bc:	f44f 00e0 	mov.w	r0, #7340032	; 0x700000
 80147c0:	f000 fc84 	bl	80150cc <enet_descriptors_chain_init>
 80147c4:	f44f 2060 	mov.w	r0, #917504	; 0xe0000
 80147c8:	f000 fc80 	bl	80150cc <enet_descriptors_chain_init>
 80147cc:	f44f 0140 	mov.w	r1, #12582912	; 0xc00000
 80147d0:	4809      	ldr	r0, [pc, #36]	; (80147f8 <emac_start+0x150>)
 80147d2:	f000 fd45 	bl	8015260 <enet_transmit_checksum_config>
 80147d6:	f44f 0140 	mov.w	r1, #12582912	; 0xc00000
 80147da:	4808      	ldr	r0, [pc, #32]	; (80147fc <emac_start+0x154>)
 80147dc:	f000 fd40 	bl	8015260 <enet_transmit_checksum_config>
 80147e0:	f000 ff7e 	bl	80156e0 <enet_enable>
 80147e4:	2001      	movs	r0, #1
 80147e6:	bd10      	pop	{r4, pc}
 80147e8:	40010800 	andmi	r0, r1, r0, lsl #16
 80147ec:	40011000 	andmi	r1, r1, r0
 80147f0:	40010c00 	andmi	r0, r1, r0, lsl #24
 80147f4:	20013df8 	strdcs	r3, [r1], -r8
 80147f8:	2001865c 	andcs	r8, r1, ip, asr r6
 80147fc:	2001866c 	andcs	r8, r1, ip, ror #12

08014800 <emac_eth_recv>:
 8014800:	b538      	push	{r3, r4, r5, lr}
 8014802:	4605      	mov	r5, r0
 8014804:	f000 ffc4 	bl	8015790 <enet_rxframe_size_get>
 8014808:	4604      	mov	r4, r0
 801480a:	b138      	cbz	r0, 801481c <emac_eth_recv+0x1c>
 801480c:	4b05      	ldr	r3, [pc, #20]	; (8014824 <emac_eth_recv+0x24>)
 801480e:	2105      	movs	r1, #5
 8014810:	6818      	ldr	r0, [r3, #0]
 8014812:	f000 ff6c 	bl	80156ee <enet_desc_information_get>
 8014816:	6028      	str	r0, [r5, #0]
 8014818:	4620      	mov	r0, r4
 801481a:	bd38      	pop	{r3, r4, r5, pc}
 801481c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8014820:	e7fb      	b.n	801481a <emac_eth_recv+0x1a>
 8014822:	bf00      	nop
 8014824:	20013e08 	andcs	r3, r1, r8, lsl #28

08014828 <emac_free_pkt>:
 8014828:	2100      	movs	r1, #0
 801482a:	4608      	mov	r0, r1
 801482c:	f000 bc96 	b.w	801515c <enet_frame_receive>

08014830 <emac_eth_send>:
 8014830:	f000 bcd4 	b.w	80151dc <enet_frame_transmit>

08014834 <gd32_adc_init()>:
 8014834:	b510      	push	{r4, lr}
 8014836:	f240 6009 	movw	r0, #1545	; 0x609
 801483a:	4c21      	ldr	r4, [pc, #132]	; (80148c0 <gd32_adc_init()+0x8c>)
 801483c:	f7ff fb88 	bl	8013f50 <rcu_periph_clock_enable>
 8014840:	2005      	movs	r0, #5
 8014842:	f7ff fbd5 	bl	8013ff0 <rcu_adc_clock_config>
 8014846:	4620      	mov	r0, r4
 8014848:	2201      	movs	r2, #1
 801484a:	f44f 7180 	mov.w	r1, #256	; 0x100
 801484e:	f000 fb43 	bl	8014ed8 <adc_special_function_config>
 8014852:	f44f 42e0 	mov.w	r2, #28672	; 0x7000
 8014856:	4620      	mov	r0, r4
 8014858:	2102      	movs	r1, #2
 801485a:	f000 fbdd 	bl	8015018 <adc_external_trigger_source_config>
 801485e:	2100      	movs	r1, #0
 8014860:	4620      	mov	r0, r4
 8014862:	f000 fb61 	bl	8014f28 <adc_data_alignment_config>
 8014866:	2000      	movs	r0, #0
 8014868:	f000 fb26 	bl	8014eb8 <adc_mode_config>
 801486c:	2202      	movs	r2, #2
 801486e:	4620      	mov	r0, r4
 8014870:	4611      	mov	r1, r2
 8014872:	f000 fb85 	bl	8014f80 <adc_channel_length_config>
 8014876:	4620      	mov	r0, r4
 8014878:	2307      	movs	r3, #7
 801487a:	2210      	movs	r2, #16
 801487c:	2100      	movs	r1, #0
 801487e:	f000 fb9c 	bl	8014fba <adc_inserted_channel_config>
 8014882:	2307      	movs	r3, #7
 8014884:	4620      	mov	r0, r4
 8014886:	2211      	movs	r2, #17
 8014888:	2101      	movs	r1, #1
 801488a:	f000 fb96 	bl	8014fba <adc_inserted_channel_config>
 801488e:	2201      	movs	r2, #1
 8014890:	2102      	movs	r1, #2
 8014892:	4620      	mov	r0, r4
 8014894:	f000 fbd1 	bl	801503a <adc_external_trigger_config>
 8014898:	f000 fb68 	bl	8014f6c <adc_tempsensor_vrefint_enable>
 801489c:	4620      	mov	r0, r4
 801489e:	f000 fb4c 	bl	8014f3a <adc_enable>
 80148a2:	2100      	movs	r1, #0
 80148a4:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80148a8:	f000 fadc 	bl	8014e64 <udelay(unsigned int, unsigned int)>
 80148ac:	4620      	mov	r0, r4
 80148ae:	f000 fb4c 	bl	8014f4a <adc_calibration_enable>
 80148b2:	4620      	mov	r0, r4
 80148b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80148b8:	2102      	movs	r1, #2
 80148ba:	f000 bbd9 	b.w	8015070 <adc_software_trigger_enable>
 80148be:	bf00      	nop
 80148c0:	40012400 	andmi	r2, r1, r0, lsl #8

080148c4 <_stop() [clone .isra.0]>:
 80148c4:	b508      	push	{r3, lr}
 80148c6:	4806      	ldr	r0, [pc, #24]	; (80148e0 <_stop() [clone .isra.0]+0x1c>)
 80148c8:	f001 f822 	bl	8015910 <i2c_stop_on_bus>
 80148cc:	f640 73ff 	movw	r3, #4095	; 0xfff
 80148d0:	4a04      	ldr	r2, [pc, #16]	; (80148e4 <_stop() [clone .isra.0]+0x20>)
 80148d2:	f8d2 1400 	ldr.w	r1, [r2, #1024]	; 0x400
 80148d6:	0589      	lsls	r1, r1, #22
 80148d8:	d501      	bpl.n	80148de <_stop() [clone .isra.0]+0x1a>
 80148da:	3b01      	subs	r3, #1
 80148dc:	d1f9      	bne.n	80148d2 <_stop() [clone .isra.0]+0xe>
 80148de:	bd08      	pop	{r3, pc}
 80148e0:	40005400 	andmi	r5, r0, r0, lsl #8
 80148e4:	40005000 	andmi	r5, r0, r0

080148e8 <gd32_i2c_begin()>:
 80148e8:	b510      	push	{r4, lr}
 80148ea:	f240 7015 	movw	r0, #1813	; 0x715
 80148ee:	f7ff fb2f 	bl	8013f50 <rcu_periph_clock_enable>
 80148f2:	4c15      	ldr	r4, [pc, #84]	; (8014948 <gd32_i2c_begin()+0x60>)
 80148f4:	f240 6003 	movw	r0, #1539	; 0x603
 80148f8:	f7ff fb2a 	bl	8013f50 <rcu_periph_clock_enable>
 80148fc:	f240 6003 	movw	r0, #1539	; 0x603
 8014900:	f7ff fb26 	bl	8013f50 <rcu_periph_clock_enable>
 8014904:	4620      	mov	r0, r4
 8014906:	f44f 7380 	mov.w	r3, #256	; 0x100
 801490a:	2203      	movs	r2, #3
 801490c:	211c      	movs	r1, #28
 801490e:	f7ff fa83 	bl	8013e18 <gpio_init>
 8014912:	f44f 7300 	mov.w	r3, #512	; 0x200
 8014916:	2203      	movs	r2, #3
 8014918:	4620      	mov	r0, r4
 801491a:	211c      	movs	r1, #28
 801491c:	f7ff fa7c 	bl	8013e18 <gpio_init>
 8014920:	f5a4 4438 	sub.w	r4, r4, #47104	; 0xb800
 8014924:	2101      	movs	r1, #1
 8014926:	2002      	movs	r0, #2
 8014928:	f7ff face 	bl	8013ec8 <gpio_pin_remap_config>
 801492c:	4620      	mov	r0, r4
 801492e:	4907      	ldr	r1, [pc, #28]	; (801494c <gd32_i2c_begin()+0x64>)
 8014930:	2200      	movs	r2, #0
 8014932:	f000 ff6b 	bl	801580c <i2c_clock_config>
 8014936:	4620      	mov	r0, r4
 8014938:	f000 ffe0 	bl	80158fc <i2c_enable>
 801493c:	4620      	mov	r0, r4
 801493e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014942:	2101      	movs	r1, #1
 8014944:	f000 bfc0 	b.w	80158c8 <i2c_ack_config>
 8014948:	40010c00 	andmi	r0, r1, r0, lsl #24
 801494c:	00061a80 	andeq	r1, r6, r0, lsl #21

08014950 <gd32_i2c_set_baudrate(unsigned int)>:
 8014950:	4601      	mov	r1, r0
 8014952:	2200      	movs	r2, #0
 8014954:	4801      	ldr	r0, [pc, #4]	; (801495c <gd32_i2c_set_baudrate(unsigned int)+0xc>)
 8014956:	f000 bf59 	b.w	801580c <i2c_clock_config>
 801495a:	bf00      	nop
 801495c:	40005400 	andmi	r5, r0, r0, lsl #8

08014960 <gd32_i2c_set_address(unsigned char)>:
 8014960:	4b01      	ldr	r3, [pc, #4]	; (8014968 <gd32_i2c_set_address(unsigned char)+0x8>)
 8014962:	0040      	lsls	r0, r0, #1
 8014964:	7018      	strb	r0, [r3, #0]
 8014966:	4770      	bx	lr
 8014968:	20013dfc 	strdcs	r3, [r1], -ip

0801496c <gd32_i2c_write(char const*, unsigned int)>:
 801496c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801496e:	4604      	mov	r4, r0
 8014970:	460f      	mov	r7, r1
 8014972:	f640 75ff 	movw	r5, #4095	; 0xfff
 8014976:	4e2e      	ldr	r6, [pc, #184]	; (8014a30 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8014978:	f240 6101 	movw	r1, #1537	; 0x601
 801497c:	4630      	mov	r0, r6
 801497e:	f000 ffd1 	bl	8015924 <i2c_flag_get>
 8014982:	b138      	cbz	r0, 8014994 <gd32_i2c_write(char const*, unsigned int)+0x28>
 8014984:	3d01      	subs	r5, #1
 8014986:	d1f7      	bne.n	8014978 <gd32_i2c_write(char const*, unsigned int)+0xc>
 8014988:	f7ff ff9c 	bl	80148c4 <_stop() [clone .isra.0]>
 801498c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8014990:	4240      	negs	r0, r0
 8014992:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014994:	4826      	ldr	r0, [pc, #152]	; (8014a30 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8014996:	f000 ffb6 	bl	8015906 <i2c_start_on_bus>
 801499a:	f640 75ff 	movw	r5, #4095	; 0xfff
 801499e:	4e24      	ldr	r6, [pc, #144]	; (8014a30 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 80149a0:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 80149a4:	4630      	mov	r0, r6
 80149a6:	f000 ffbd 	bl	8015924 <i2c_flag_get>
 80149aa:	bb68      	cbnz	r0, 8014a08 <gd32_i2c_write(char const*, unsigned int)+0x9c>
 80149ac:	3d01      	subs	r5, #1
 80149ae:	d1f7      	bne.n	80149a0 <gd32_i2c_write(char const*, unsigned int)+0x34>
 80149b0:	e7ea      	b.n	8014988 <gd32_i2c_write(char const*, unsigned int)+0x1c>
 80149b2:	f240 5101 	movw	r1, #1281	; 0x501
 80149b6:	481e      	ldr	r0, [pc, #120]	; (8014a30 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 80149b8:	f000 ffbc 	bl	8015934 <i2c_flag_clear>
 80149bc:	f640 75ff 	movw	r5, #4095	; 0xfff
 80149c0:	4e1b      	ldr	r6, [pc, #108]	; (8014a30 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 80149c2:	f240 5107 	movw	r1, #1287	; 0x507
 80149c6:	4630      	mov	r0, r6
 80149c8:	f000 ffac 	bl	8015924 <i2c_flag_get>
 80149cc:	2801      	cmp	r0, #1
 80149ce:	d114      	bne.n	80149fa <gd32_i2c_write(char const*, unsigned int)+0x8e>
 80149d0:	4e17      	ldr	r6, [pc, #92]	; (8014a30 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 80149d2:	4427      	add	r7, r4
 80149d4:	42a7      	cmp	r7, r4
 80149d6:	d013      	beq.n	8014a00 <gd32_i2c_write(char const*, unsigned int)+0x94>
 80149d8:	4630      	mov	r0, r6
 80149da:	f814 1b01 	ldrb.w	r1, [r4], #1
 80149de:	f000 ff9c 	bl	801591a <i2c_data_transmit>
 80149e2:	f640 75ff 	movw	r5, #4095	; 0xfff
 80149e6:	f240 5102 	movw	r1, #1282	; 0x502
 80149ea:	4630      	mov	r0, r6
 80149ec:	f000 ff9a 	bl	8015924 <i2c_flag_get>
 80149f0:	2800      	cmp	r0, #0
 80149f2:	d1ef      	bne.n	80149d4 <gd32_i2c_write(char const*, unsigned int)+0x68>
 80149f4:	3d01      	subs	r5, #1
 80149f6:	d1f6      	bne.n	80149e6 <gd32_i2c_write(char const*, unsigned int)+0x7a>
 80149f8:	e7c6      	b.n	8014988 <gd32_i2c_write(char const*, unsigned int)+0x1c>
 80149fa:	3d01      	subs	r5, #1
 80149fc:	d1e1      	bne.n	80149c2 <gd32_i2c_write(char const*, unsigned int)+0x56>
 80149fe:	e7c3      	b.n	8014988 <gd32_i2c_write(char const*, unsigned int)+0x1c>
 8014a00:	f7ff ff60 	bl	80148c4 <_stop() [clone .isra.0]>
 8014a04:	2000      	movs	r0, #0
 8014a06:	e7c3      	b.n	8014990 <gd32_i2c_write(char const*, unsigned int)+0x24>
 8014a08:	4b0a      	ldr	r3, [pc, #40]	; (8014a34 <gd32_i2c_write(char const*, unsigned int)+0xc8>)
 8014a0a:	f06f 0201 	mvn.w	r2, #1
 8014a0e:	7819      	ldrb	r1, [r3, #0]
 8014a10:	4807      	ldr	r0, [pc, #28]	; (8014a30 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8014a12:	f000 ff6b 	bl	80158ec <i2c_master_addressing>
 8014a16:	f640 75ff 	movw	r5, #4095	; 0xfff
 8014a1a:	4e05      	ldr	r6, [pc, #20]	; (8014a30 <gd32_i2c_write(char const*, unsigned int)+0xc4>)
 8014a1c:	f240 5101 	movw	r1, #1281	; 0x501
 8014a20:	4630      	mov	r0, r6
 8014a22:	f000 ff7f 	bl	8015924 <i2c_flag_get>
 8014a26:	2800      	cmp	r0, #0
 8014a28:	d1c3      	bne.n	80149b2 <gd32_i2c_write(char const*, unsigned int)+0x46>
 8014a2a:	3d01      	subs	r5, #1
 8014a2c:	d1f6      	bne.n	8014a1c <gd32_i2c_write(char const*, unsigned int)+0xb0>
 8014a2e:	e7ab      	b.n	8014988 <gd32_i2c_write(char const*, unsigned int)+0x1c>
 8014a30:	40005400 	andmi	r5, r0, r0, lsl #8
 8014a34:	20013dfc 	strdcs	r3, [r1], -ip

08014a38 <gd32_i2c_read(char*, unsigned int)>:
 8014a38:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8014a3c:	4680      	mov	r8, r0
 8014a3e:	460c      	mov	r4, r1
 8014a40:	f640 76ff 	movw	r6, #4095	; 0xfff
 8014a44:	4f49      	ldr	r7, [pc, #292]	; (8014b6c <gd32_i2c_read(char*, unsigned int)+0x134>)
 8014a46:	f240 6101 	movw	r1, #1537	; 0x601
 8014a4a:	4638      	mov	r0, r7
 8014a4c:	f000 ff6a 	bl	8015924 <i2c_flag_get>
 8014a50:	4605      	mov	r5, r0
 8014a52:	b128      	cbz	r0, 8014a60 <gd32_i2c_read(char*, unsigned int)+0x28>
 8014a54:	3e01      	subs	r6, #1
 8014a56:	d1f6      	bne.n	8014a46 <gd32_i2c_read(char*, unsigned int)+0xe>
 8014a58:	f7ff ff34 	bl	80148c4 <_stop() [clone .isra.0]>
 8014a5c:	2504      	movs	r5, #4
 8014a5e:	e082      	b.n	8014b66 <gd32_i2c_read(char*, unsigned int)+0x12e>
 8014a60:	2c02      	cmp	r4, #2
 8014a62:	d103      	bne.n	8014a6c <gd32_i2c_read(char*, unsigned int)+0x34>
 8014a64:	4601      	mov	r1, r0
 8014a66:	4841      	ldr	r0, [pc, #260]	; (8014b6c <gd32_i2c_read(char*, unsigned int)+0x134>)
 8014a68:	f000 ff37 	bl	80158da <i2c_ackpos_config>
 8014a6c:	483f      	ldr	r0, [pc, #252]	; (8014b6c <gd32_i2c_read(char*, unsigned int)+0x134>)
 8014a6e:	f000 ff4a 	bl	8015906 <i2c_start_on_bus>
 8014a72:	f640 76ff 	movw	r6, #4095	; 0xfff
 8014a76:	4f3d      	ldr	r7, [pc, #244]	; (8014b6c <gd32_i2c_read(char*, unsigned int)+0x134>)
 8014a78:	f44f 61a0 	mov.w	r1, #1280	; 0x500
 8014a7c:	4638      	mov	r0, r7
 8014a7e:	f000 ff51 	bl	8015924 <i2c_flag_get>
 8014a82:	b910      	cbnz	r0, 8014a8a <gd32_i2c_read(char*, unsigned int)+0x52>
 8014a84:	3e01      	subs	r6, #1
 8014a86:	d1f7      	bne.n	8014a78 <gd32_i2c_read(char*, unsigned int)+0x40>
 8014a88:	e7e6      	b.n	8014a58 <gd32_i2c_read(char*, unsigned int)+0x20>
 8014a8a:	4b39      	ldr	r3, [pc, #228]	; (8014b70 <gd32_i2c_read(char*, unsigned int)+0x138>)
 8014a8c:	2201      	movs	r2, #1
 8014a8e:	7819      	ldrb	r1, [r3, #0]
 8014a90:	4836      	ldr	r0, [pc, #216]	; (8014b6c <gd32_i2c_read(char*, unsigned int)+0x134>)
 8014a92:	f000 ff2b 	bl	80158ec <i2c_master_addressing>
 8014a96:	2c02      	cmp	r4, #2
 8014a98:	d803      	bhi.n	8014aa2 <gd32_i2c_read(char*, unsigned int)+0x6a>
 8014a9a:	2100      	movs	r1, #0
 8014a9c:	4833      	ldr	r0, [pc, #204]	; (8014b6c <gd32_i2c_read(char*, unsigned int)+0x134>)
 8014a9e:	f000 ff13 	bl	80158c8 <i2c_ack_config>
 8014aa2:	f640 76ff 	movw	r6, #4095	; 0xfff
 8014aa6:	4f31      	ldr	r7, [pc, #196]	; (8014b6c <gd32_i2c_read(char*, unsigned int)+0x134>)
 8014aa8:	f240 5101 	movw	r1, #1281	; 0x501
 8014aac:	4638      	mov	r0, r7
 8014aae:	f000 ff39 	bl	8015924 <i2c_flag_get>
 8014ab2:	b910      	cbnz	r0, 8014aba <gd32_i2c_read(char*, unsigned int)+0x82>
 8014ab4:	3e01      	subs	r6, #1
 8014ab6:	d1f7      	bne.n	8014aa8 <gd32_i2c_read(char*, unsigned int)+0x70>
 8014ab8:	e7ce      	b.n	8014a58 <gd32_i2c_read(char*, unsigned int)+0x20>
 8014aba:	f240 5101 	movw	r1, #1281	; 0x501
 8014abe:	482b      	ldr	r0, [pc, #172]	; (8014b6c <gd32_i2c_read(char*, unsigned int)+0x134>)
 8014ac0:	f000 ff38 	bl	8015934 <i2c_flag_clear>
 8014ac4:	2c01      	cmp	r4, #1
 8014ac6:	d102      	bne.n	8014ace <gd32_i2c_read(char*, unsigned int)+0x96>
 8014ac8:	4828      	ldr	r0, [pc, #160]	; (8014b6c <gd32_i2c_read(char*, unsigned int)+0x134>)
 8014aca:	f000 ff21 	bl	8015910 <i2c_stop_on_bus>
 8014ace:	f640 77ff 	movw	r7, #4095	; 0xfff
 8014ad2:	4e26      	ldr	r6, [pc, #152]	; (8014b6c <gd32_i2c_read(char*, unsigned int)+0x134>)
 8014ad4:	b3ac      	cbz	r4, 8014b42 <gd32_i2c_read(char*, unsigned int)+0x10a>
 8014ad6:	2c03      	cmp	r4, #3
 8014ad8:	d121      	bne.n	8014b1e <gd32_i2c_read(char*, unsigned int)+0xe6>
 8014ada:	f640 79ff 	movw	r9, #4095	; 0xfff
 8014ade:	f240 5102 	movw	r1, #1282	; 0x502
 8014ae2:	4630      	mov	r0, r6
 8014ae4:	f000 ff1e 	bl	8015924 <i2c_flag_get>
 8014ae8:	b918      	cbnz	r0, 8014af2 <gd32_i2c_read(char*, unsigned int)+0xba>
 8014aea:	f1b9 0901 	subs.w	r9, r9, #1
 8014aee:	d1f6      	bne.n	8014ade <gd32_i2c_read(char*, unsigned int)+0xa6>
 8014af0:	e7b2      	b.n	8014a58 <gd32_i2c_read(char*, unsigned int)+0x20>
 8014af2:	2100      	movs	r1, #0
 8014af4:	4630      	mov	r0, r6
 8014af6:	f000 fee7 	bl	80158c8 <i2c_ack_config>
 8014afa:	f240 5106 	movw	r1, #1286	; 0x506
 8014afe:	4630      	mov	r0, r6
 8014b00:	f000 ff10 	bl	8015924 <i2c_flag_get>
 8014b04:	b138      	cbz	r0, 8014b16 <gd32_i2c_read(char*, unsigned int)+0xde>
 8014b06:	4630      	mov	r0, r6
 8014b08:	f000 ff09 	bl	801591e <i2c_data_receive>
 8014b0c:	f640 77ff 	movw	r7, #4095	; 0xfff
 8014b10:	f808 0b01 	strb.w	r0, [r8], #1
 8014b14:	3c01      	subs	r4, #1
 8014b16:	3f01      	subs	r7, #1
 8014b18:	2f00      	cmp	r7, #0
 8014b1a:	dcdb      	bgt.n	8014ad4 <gd32_i2c_read(char*, unsigned int)+0x9c>
 8014b1c:	e79c      	b.n	8014a58 <gd32_i2c_read(char*, unsigned int)+0x20>
 8014b1e:	2c02      	cmp	r4, #2
 8014b20:	d1eb      	bne.n	8014afa <gd32_i2c_read(char*, unsigned int)+0xc2>
 8014b22:	f640 79ff 	movw	r9, #4095	; 0xfff
 8014b26:	f240 5102 	movw	r1, #1282	; 0x502
 8014b2a:	4630      	mov	r0, r6
 8014b2c:	f000 fefa 	bl	8015924 <i2c_flag_get>
 8014b30:	b918      	cbnz	r0, 8014b3a <gd32_i2c_read(char*, unsigned int)+0x102>
 8014b32:	f1b9 0901 	subs.w	r9, r9, #1
 8014b36:	d1f6      	bne.n	8014b26 <gd32_i2c_read(char*, unsigned int)+0xee>
 8014b38:	e78e      	b.n	8014a58 <gd32_i2c_read(char*, unsigned int)+0x20>
 8014b3a:	4630      	mov	r0, r6
 8014b3c:	f000 fee8 	bl	8015910 <i2c_stop_on_bus>
 8014b40:	e7db      	b.n	8014afa <gd32_i2c_read(char*, unsigned int)+0xc2>
 8014b42:	f640 73ff 	movw	r3, #4095	; 0xfff
 8014b46:	4a0b      	ldr	r2, [pc, #44]	; (8014b74 <gd32_i2c_read(char*, unsigned int)+0x13c>)
 8014b48:	f8d2 1400 	ldr.w	r1, [r2, #1024]	; 0x400
 8014b4c:	0589      	lsls	r1, r1, #22
 8014b4e:	d502      	bpl.n	8014b56 <gd32_i2c_read(char*, unsigned int)+0x11e>
 8014b50:	3b01      	subs	r3, #1
 8014b52:	d1f9      	bne.n	8014b48 <gd32_i2c_read(char*, unsigned int)+0x110>
 8014b54:	e782      	b.n	8014a5c <gd32_i2c_read(char*, unsigned int)+0x24>
 8014b56:	2101      	movs	r1, #1
 8014b58:	4804      	ldr	r0, [pc, #16]	; (8014b6c <gd32_i2c_read(char*, unsigned int)+0x134>)
 8014b5a:	f000 feb5 	bl	80158c8 <i2c_ack_config>
 8014b5e:	2101      	movs	r1, #1
 8014b60:	4802      	ldr	r0, [pc, #8]	; (8014b6c <gd32_i2c_read(char*, unsigned int)+0x134>)
 8014b62:	f000 feba 	bl	80158da <i2c_ackpos_config>
 8014b66:	4628      	mov	r0, r5
 8014b68:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8014b6c:	40005400 	andmi	r5, r0, r0, lsl #8
 8014b70:	20013dfc 	strdcs	r3, [r1], -ip
 8014b74:	40005000 	andmi	r5, r0, r0

08014b78 <gd32_uart_begin>:
 8014b78:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014b7a:	461d      	mov	r5, r3
 8014b7c:	4b81      	ldr	r3, [pc, #516]	; (8014d84 <gd32_uart_begin+0x20c>)
 8014b7e:	4604      	mov	r4, r0
 8014b80:	4298      	cmp	r0, r3
 8014b82:	460f      	mov	r7, r1
 8014b84:	4616      	mov	r6, r2
 8014b86:	d05b      	beq.n	8014c40 <gd32_uart_begin+0xc8>
 8014b88:	d80b      	bhi.n	8014ba2 <gd32_uart_begin+0x2a>
 8014b8a:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 8014b8e:	4298      	cmp	r0, r3
 8014b90:	d045      	beq.n	8014c1e <gd32_uart_begin+0xa6>
 8014b92:	d84b      	bhi.n	8014c2c <gd32_uart_begin+0xb4>
 8014b94:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8014b98:	4298      	cmp	r0, r3
 8014b9a:	d039      	beq.n	8014c10 <gd32_uart_begin+0x98>
 8014b9c:	f240 7012 	movw	r0, #1810	; 0x712
 8014ba0:	e038      	b.n	8014c14 <gd32_uart_begin+0x9c>
 8014ba2:	4b79      	ldr	r3, [pc, #484]	; (8014d88 <gd32_uart_begin+0x210>)
 8014ba4:	4298      	cmp	r0, r3
 8014ba6:	d006      	beq.n	8014bb6 <gd32_uart_begin+0x3e>
 8014ba8:	f503 5360 	add.w	r3, r3, #14336	; 0x3800
 8014bac:	4298      	cmp	r0, r3
 8014bae:	d044      	beq.n	8014c3a <gd32_uart_begin+0xc2>
 8014bb0:	f641 201f 	movw	r0, #6687	; 0x1a1f
 8014bb4:	e046      	b.n	8014c44 <gd32_uart_begin+0xcc>
 8014bb6:	f240 600e 	movw	r0, #1550	; 0x60e
 8014bba:	f7ff f9c9 	bl	8013f50 <rcu_periph_clock_enable>
 8014bbe:	f240 6002 	movw	r0, #1538	; 0x602
 8014bc2:	f7ff f9c5 	bl	8013f50 <rcu_periph_clock_enable>
 8014bc6:	f44f 60c0 	mov.w	r0, #1536	; 0x600
 8014bca:	f7ff f9c1 	bl	8013f50 <rcu_periph_clock_enable>
 8014bce:	4b6d      	ldr	r3, [pc, #436]	; (8014d84 <gd32_uart_begin+0x20c>)
 8014bd0:	429c      	cmp	r4, r3
 8014bd2:	f000 80c5 	beq.w	8014d60 <gd32_uart_begin+0x1e8>
 8014bd6:	d83a      	bhi.n	8014c4e <gd32_uart_begin+0xd6>
 8014bd8:	f5a3 5330 	sub.w	r3, r3, #11264	; 0x2c00
 8014bdc:	429c      	cmp	r4, r3
 8014bde:	f000 809e 	beq.w	8014d1e <gd32_uart_begin+0x1a6>
 8014be2:	f200 80a9 	bhi.w	8014d38 <gd32_uart_begin+0x1c0>
 8014be6:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
 8014bea:	429c      	cmp	r4, r3
 8014bec:	d04d      	beq.n	8014c8a <gd32_uart_begin+0x112>
 8014bee:	f44f 7380 	mov.w	r3, #256	; 0x100
 8014bf2:	2203      	movs	r2, #3
 8014bf4:	2118      	movs	r1, #24
 8014bf6:	4865      	ldr	r0, [pc, #404]	; (8014d8c <gd32_uart_begin+0x214>)
 8014bf8:	f7ff f90e 	bl	8013e18 <gpio_init>
 8014bfc:	2104      	movs	r1, #4
 8014bfe:	4863      	ldr	r0, [pc, #396]	; (8014d8c <gd32_uart_begin+0x214>)
 8014c00:	f44f 7300 	mov.w	r3, #512	; 0x200
 8014c04:	2203      	movs	r2, #3
 8014c06:	f7ff f907 	bl	8013e18 <gpio_init>
 8014c0a:	2101      	movs	r1, #1
 8014c0c:	4860      	ldr	r0, [pc, #384]	; (8014d90 <gd32_uart_begin+0x218>)
 8014c0e:	e04a      	b.n	8014ca6 <gd32_uart_begin+0x12e>
 8014c10:	f240 7011 	movw	r0, #1809	; 0x711
 8014c14:	f7ff f99c 	bl	8013f50 <rcu_periph_clock_enable>
 8014c18:	f240 6005 	movw	r0, #1541	; 0x605
 8014c1c:	e7d1      	b.n	8014bc2 <gd32_uart_begin+0x4a>
 8014c1e:	f240 7013 	movw	r0, #1811	; 0x713
 8014c22:	f7ff f995 	bl	8013f50 <rcu_periph_clock_enable>
 8014c26:	f240 6004 	movw	r0, #1540	; 0x604
 8014c2a:	e7ca      	b.n	8014bc2 <gd32_uart_begin+0x4a>
 8014c2c:	f240 7014 	movw	r0, #1812	; 0x714
 8014c30:	f7ff f98e 	bl	8013f50 <rcu_periph_clock_enable>
 8014c34:	f240 6004 	movw	r0, #1540	; 0x604
 8014c38:	e7ec      	b.n	8014c14 <gd32_uart_begin+0x9c>
 8014c3a:	f641 1018 	movw	r0, #6424	; 0x1918
 8014c3e:	e7f0      	b.n	8014c22 <gd32_uart_begin+0xaa>
 8014c40:	f641 201e 	movw	r0, #6686	; 0x1a1e
 8014c44:	f7ff f984 	bl	8013f50 <rcu_periph_clock_enable>
 8014c48:	f240 6006 	movw	r0, #1542	; 0x606
 8014c4c:	e7b9      	b.n	8014bc2 <gd32_uart_begin+0x4a>
 8014c4e:	4b4e      	ldr	r3, [pc, #312]	; (8014d88 <gd32_uart_begin+0x210>)
 8014c50:	429c      	cmp	r4, r3
 8014c52:	d00b      	beq.n	8014c6c <gd32_uart_begin+0xf4>
 8014c54:	f503 5360 	add.w	r3, r3, #14336	; 0x3800
 8014c58:	429c      	cmp	r4, r3
 8014c5a:	d079      	beq.n	8014d50 <gd32_uart_begin+0x1d8>
 8014c5c:	2302      	movs	r3, #2
 8014c5e:	2203      	movs	r2, #3
 8014c60:	2118      	movs	r1, #24
 8014c62:	484c      	ldr	r0, [pc, #304]	; (8014d94 <gd32_uart_begin+0x21c>)
 8014c64:	f7ff f8d8 	bl	8013e18 <gpio_init>
 8014c68:	2301      	movs	r3, #1
 8014c6a:	e081      	b.n	8014d70 <gd32_uart_begin+0x1f8>
 8014c6c:	f44f 7300 	mov.w	r3, #512	; 0x200
 8014c70:	2203      	movs	r2, #3
 8014c72:	2118      	movs	r1, #24
 8014c74:	4848      	ldr	r0, [pc, #288]	; (8014d98 <gd32_uart_begin+0x220>)
 8014c76:	f7ff f8cf 	bl	8013e18 <gpio_init>
 8014c7a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8014c7e:	2203      	movs	r2, #3
 8014c80:	2104      	movs	r1, #4
 8014c82:	4845      	ldr	r0, [pc, #276]	; (8014d98 <gd32_uart_begin+0x220>)
 8014c84:	f7ff f8c8 	bl	8013e18 <gpio_init>
 8014c88:	e00f      	b.n	8014caa <gd32_uart_begin+0x132>
 8014c8a:	2320      	movs	r3, #32
 8014c8c:	2203      	movs	r2, #3
 8014c8e:	2118      	movs	r1, #24
 8014c90:	483e      	ldr	r0, [pc, #248]	; (8014d8c <gd32_uart_begin+0x214>)
 8014c92:	f7ff f8c1 	bl	8013e18 <gpio_init>
 8014c96:	2104      	movs	r1, #4
 8014c98:	483c      	ldr	r0, [pc, #240]	; (8014d8c <gd32_uart_begin+0x214>)
 8014c9a:	2340      	movs	r3, #64	; 0x40
 8014c9c:	2203      	movs	r2, #3
 8014c9e:	f7ff f8bb 	bl	8013e18 <gpio_init>
 8014ca2:	2101      	movs	r1, #1
 8014ca4:	2008      	movs	r0, #8
 8014ca6:	f7ff f90f 	bl	8013ec8 <gpio_pin_remap_config>
 8014caa:	4620      	mov	r0, r4
 8014cac:	f7ff fc2e 	bl	801450c <usart_deinit>
 8014cb0:	68e3      	ldr	r3, [r4, #12]
 8014cb2:	4639      	mov	r1, r7
 8014cb4:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8014cb8:	60e3      	str	r3, [r4, #12]
 8014cba:	4620      	mov	r0, r4
 8014cbc:	f7ff fc88 	bl	80145d0 <usart_baudrate_set>
 8014cc0:	2e09      	cmp	r6, #9
 8014cc2:	bf0c      	ite	eq
 8014cc4:	f44f 5180 	moveq.w	r1, #4096	; 0x1000
 8014cc8:	2100      	movne	r1, #0
 8014cca:	4620      	mov	r0, r4
 8014ccc:	f7ff fcbc 	bl	8014648 <usart_word_length_set>
 8014cd0:	9b06      	ldr	r3, [sp, #24]
 8014cd2:	4620      	mov	r0, r4
 8014cd4:	2b02      	cmp	r3, #2
 8014cd6:	bf0c      	ite	eq
 8014cd8:	f44f 5100 	moveq.w	r1, #8192	; 0x2000
 8014cdc:	2100      	movne	r1, #0
 8014cde:	f7ff fcbb 	bl	8014658 <usart_stop_bit_set>
 8014ce2:	2d01      	cmp	r5, #1
 8014ce4:	d048      	beq.n	8014d78 <gd32_uart_begin+0x200>
 8014ce6:	2d02      	cmp	r5, #2
 8014ce8:	d149      	bne.n	8014d7e <gd32_uart_begin+0x206>
 8014cea:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8014cee:	4620      	mov	r0, r4
 8014cf0:	f7ff fca2 	bl	8014638 <usart_parity_config>
 8014cf4:	2100      	movs	r1, #0
 8014cf6:	4620      	mov	r0, r4
 8014cf8:	f7ff fcc2 	bl	8014680 <usart_hardware_flow_rts_config>
 8014cfc:	2100      	movs	r1, #0
 8014cfe:	4620      	mov	r0, r4
 8014d00:	f7ff fcc4 	bl	801468c <usart_hardware_flow_cts_config>
 8014d04:	2104      	movs	r1, #4
 8014d06:	4620      	mov	r0, r4
 8014d08:	f7ff fcb4 	bl	8014674 <usart_receive_config>
 8014d0c:	2108      	movs	r1, #8
 8014d0e:	4620      	mov	r0, r4
 8014d10:	f7ff fcaa 	bl	8014668 <usart_transmit_config>
 8014d14:	68e3      	ldr	r3, [r4, #12]
 8014d16:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8014d1a:	60e3      	str	r3, [r4, #12]
 8014d1c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014d1e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8014d22:	2203      	movs	r2, #3
 8014d24:	2118      	movs	r1, #24
 8014d26:	481d      	ldr	r0, [pc, #116]	; (8014d9c <gd32_uart_begin+0x224>)
 8014d28:	f7ff f876 	bl	8013e18 <gpio_init>
 8014d2c:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8014d30:	2203      	movs	r2, #3
 8014d32:	2104      	movs	r1, #4
 8014d34:	4819      	ldr	r0, [pc, #100]	; (8014d9c <gd32_uart_begin+0x224>)
 8014d36:	e7a5      	b.n	8014c84 <gd32_uart_begin+0x10c>
 8014d38:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8014d3c:	2203      	movs	r2, #3
 8014d3e:	2118      	movs	r1, #24
 8014d40:	4816      	ldr	r0, [pc, #88]	; (8014d9c <gd32_uart_begin+0x224>)
 8014d42:	f7ff f869 	bl	8013e18 <gpio_init>
 8014d46:	2304      	movs	r3, #4
 8014d48:	2203      	movs	r2, #3
 8014d4a:	4619      	mov	r1, r3
 8014d4c:	480f      	ldr	r0, [pc, #60]	; (8014d8c <gd32_uart_begin+0x214>)
 8014d4e:	e799      	b.n	8014c84 <gd32_uart_begin+0x10c>
 8014d50:	2340      	movs	r3, #64	; 0x40
 8014d52:	2203      	movs	r2, #3
 8014d54:	2118      	movs	r1, #24
 8014d56:	4811      	ldr	r0, [pc, #68]	; (8014d9c <gd32_uart_begin+0x224>)
 8014d58:	f7ff f85e 	bl	8013e18 <gpio_init>
 8014d5c:	2380      	movs	r3, #128	; 0x80
 8014d5e:	e7e7      	b.n	8014d30 <gd32_uart_begin+0x1b8>
 8014d60:	f44f 7380 	mov.w	r3, #256	; 0x100
 8014d64:	2203      	movs	r2, #3
 8014d66:	2118      	movs	r1, #24
 8014d68:	480a      	ldr	r0, [pc, #40]	; (8014d94 <gd32_uart_begin+0x21c>)
 8014d6a:	f7ff f855 	bl	8013e18 <gpio_init>
 8014d6e:	2380      	movs	r3, #128	; 0x80
 8014d70:	2203      	movs	r2, #3
 8014d72:	2104      	movs	r1, #4
 8014d74:	4807      	ldr	r0, [pc, #28]	; (8014d94 <gd32_uart_begin+0x21c>)
 8014d76:	e785      	b.n	8014c84 <gd32_uart_begin+0x10c>
 8014d78:	f44f 61c0 	mov.w	r1, #1536	; 0x600
 8014d7c:	e7b7      	b.n	8014cee <gd32_uart_begin+0x176>
 8014d7e:	2100      	movs	r1, #0
 8014d80:	e7b5      	b.n	8014cee <gd32_uart_begin+0x176>
 8014d82:	bf00      	nop
 8014d84:	40007800 	andmi	r7, r0, r0, lsl #16
 8014d88:	40013800 	andmi	r3, r1, r0, lsl #16
 8014d8c:	40011400 	andmi	r1, r1, r0, lsl #8
 8014d90:	00140030 	andseq	r0, r4, r0, lsr r0
 8014d94:	40011800 	andmi	r1, r1, r0, lsl #16
 8014d98:	40010800 	andmi	r0, r1, r0, lsl #16
 8014d9c:	40011000 	andmi	r1, r1, r0

08014da0 <micros_init()>:
 8014da0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8014da2:	2400      	movs	r4, #0
 8014da4:	f04f 36ff 	mov.w	r6, #4294967295	; 0xffffffff
 8014da8:	4d22      	ldr	r5, [pc, #136]	; (8014e34 <micros_init()+0x94>)
 8014daa:	f240 6013 	movw	r0, #1555	; 0x613
 8014dae:	f7ff f8cf 	bl	8013f50 <rcu_periph_clock_enable>
 8014db2:	4628      	mov	r0, r5
 8014db4:	f7ff fa40 	bl	8014238 <timer_deinit>
 8014db8:	4b1f      	ldr	r3, [pc, #124]	; (8014e38 <micros_init()+0x98>)
 8014dba:	4628      	mov	r0, r5
 8014dbc:	f8c3 4c24 	str.w	r4, [r3, #3108]	; 0xc24
 8014dc0:	4669      	mov	r1, sp
 8014dc2:	9400      	str	r4, [sp, #0]
 8014dc4:	f8ad 4004 	strh.w	r4, [sp, #4]
 8014dc8:	9602      	str	r6, [sp, #8]
 8014dca:	f8ad 400c 	strh.w	r4, [sp, #12]
 8014dce:	f7ff fad9 	bl	8014384 <timer_init>
 8014dd2:	4628      	mov	r0, r5
 8014dd4:	4621      	mov	r1, r4
 8014dd6:	f7ff fb87 	bl	80144e8 <timer_master_slave_mode_config>
 8014dda:	4628      	mov	r0, r5
 8014ddc:	2107      	movs	r1, #7
 8014dde:	f7ff fb7b 	bl	80144d8 <timer_slave_mode_select>
 8014de2:	2120      	movs	r1, #32
 8014de4:	4628      	mov	r0, r5
 8014de6:	f7ff fb67 	bl	80144b8 <timer_input_trigger_source_select>
 8014dea:	4628      	mov	r0, r5
 8014dec:	f7ff fb22 	bl	8014434 <timer_enable>
 8014df0:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8014df4:	f240 6014 	movw	r0, #1556	; 0x614
 8014df8:	f7ff f8aa 	bl	8013f50 <rcu_periph_clock_enable>
 8014dfc:	4628      	mov	r0, r5
 8014dfe:	f7ff fa1b 	bl	8014238 <timer_deinit>
 8014e02:	2377      	movs	r3, #119	; 0x77
 8014e04:	626c      	str	r4, [r5, #36]	; 0x24
 8014e06:	4669      	mov	r1, sp
 8014e08:	4628      	mov	r0, r5
 8014e0a:	9300      	str	r3, [sp, #0]
 8014e0c:	f8ad 4004 	strh.w	r4, [sp, #4]
 8014e10:	9602      	str	r6, [sp, #8]
 8014e12:	f8ad 400c 	strh.w	r4, [sp, #12]
 8014e16:	f7ff fab5 	bl	8014384 <timer_init>
 8014e1a:	4621      	mov	r1, r4
 8014e1c:	4628      	mov	r0, r5
 8014e1e:	f7ff fb63 	bl	80144e8 <timer_master_slave_mode_config>
 8014e22:	2120      	movs	r1, #32
 8014e24:	4628      	mov	r0, r5
 8014e26:	f7ff fb4f 	bl	80144c8 <timer_master_output_trigger_source_select>
 8014e2a:	4628      	mov	r0, r5
 8014e2c:	f7ff fb02 	bl	8014434 <timer_enable>
 8014e30:	b004      	add	sp, #16
 8014e32:	bd70      	pop	{r4, r5, r6, pc}
 8014e34:	40014c00 	andmi	r4, r1, r0, lsl #24
 8014e38:	40014000 	andmi	r4, r1, r0

08014e3c <udelay_init()>:
 8014e3c:	4a07      	ldr	r2, [pc, #28]	; (8014e5c <udelay_init()+0x20>)
 8014e3e:	f8d2 30fc 	ldr.w	r3, [r2, #252]	; 0xfc
 8014e42:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8014e46:	f8c2 30fc 	str.w	r3, [r2, #252]	; 0xfc
 8014e4a:	2200      	movs	r2, #0
 8014e4c:	4b04      	ldr	r3, [pc, #16]	; (8014e60 <udelay_init()+0x24>)
 8014e4e:	605a      	str	r2, [r3, #4]
 8014e50:	681a      	ldr	r2, [r3, #0]
 8014e52:	f042 0201 	orr.w	r2, r2, #1
 8014e56:	601a      	str	r2, [r3, #0]
 8014e58:	4770      	bx	lr
 8014e5a:	bf00      	nop
 8014e5c:	e000ed00 	and	lr, r0, r0, lsl #26
 8014e60:	e0001000 	and	r1, r0, r0

08014e64 <udelay(unsigned int, unsigned int)>:
 8014e64:	2378      	movs	r3, #120	; 0x78
 8014e66:	b510      	push	{r4, lr}
 8014e68:	4358      	muls	r0, r3
 8014e6a:	b909      	cbnz	r1, 8014e70 <udelay(unsigned int, unsigned int)+0xc>
 8014e6c:	4b08      	ldr	r3, [pc, #32]	; (8014e90 <udelay(unsigned int, unsigned int)+0x2c>)
 8014e6e:	6859      	ldr	r1, [r3, #4]
 8014e70:	2300      	movs	r3, #0
 8014e72:	4c07      	ldr	r4, [pc, #28]	; (8014e90 <udelay(unsigned int, unsigned int)+0x2c>)
 8014e74:	6862      	ldr	r2, [r4, #4]
 8014e76:	4291      	cmp	r1, r2
 8014e78:	d0fc      	beq.n	8014e74 <udelay(unsigned int, unsigned int)+0x10>
 8014e7a:	bf28      	it	cs
 8014e7c:	f103 33ff 	addcs.w	r3, r3, #4294967295	; 0xffffffff
 8014e80:	1a5b      	subs	r3, r3, r1
 8014e82:	4413      	add	r3, r2
 8014e84:	4283      	cmp	r3, r0
 8014e86:	d300      	bcc.n	8014e8a <udelay(unsigned int, unsigned int)+0x26>
 8014e88:	bd10      	pop	{r4, pc}
 8014e8a:	4611      	mov	r1, r2
 8014e8c:	e7f2      	b.n	8014e74 <udelay(unsigned int, unsigned int)+0x10>
 8014e8e:	bf00      	nop
 8014e90:	e0001000 	and	r1, r0, r0

08014e94 <mac_address_get>:
 8014e94:	2102      	movs	r1, #2
 8014e96:	4a07      	ldr	r2, [pc, #28]	; (8014eb4 <mac_address_get+0x20>)
 8014e98:	f8d2 37e8 	ldr.w	r3, [r2, #2024]	; 0x7e8
 8014e9c:	f8d2 27ec 	ldr.w	r2, [r2, #2028]	; 0x7ec
 8014ea0:	7001      	strb	r1, [r0, #0]
 8014ea2:	7042      	strb	r2, [r0, #1]
 8014ea4:	0e1a      	lsrs	r2, r3, #24
 8014ea6:	7082      	strb	r2, [r0, #2]
 8014ea8:	0c1a      	lsrs	r2, r3, #16
 8014eaa:	70c2      	strb	r2, [r0, #3]
 8014eac:	0a1a      	lsrs	r2, r3, #8
 8014eae:	7102      	strb	r2, [r0, #4]
 8014eb0:	7143      	strb	r3, [r0, #5]
 8014eb2:	4770      	bx	lr
 8014eb4:	1ffff000 	svcne	0x00fff000

08014eb8 <adc_mode_config>:
 8014eb8:	4b06      	ldr	r3, [pc, #24]	; (8014ed4 <adc_mode_config+0x1c>)
 8014eba:	f8d3 1404 	ldr.w	r1, [r3, #1028]	; 0x404
 8014ebe:	f421 2170 	bic.w	r1, r1, #983040	; 0xf0000
 8014ec2:	f8c3 1404 	str.w	r1, [r3, #1028]	; 0x404
 8014ec6:	f8d3 2404 	ldr.w	r2, [r3, #1028]	; 0x404
 8014eca:	4302      	orrs	r2, r0
 8014ecc:	f8c3 2404 	str.w	r2, [r3, #1028]	; 0x404
 8014ed0:	4770      	bx	lr
 8014ed2:	bf00      	nop
 8014ed4:	40012000 	andmi	r2, r1, r0

08014ed8 <adc_special_function_config>:
 8014ed8:	b510      	push	{r4, lr}
 8014eda:	f401 7380 	and.w	r3, r1, #256	; 0x100
 8014ede:	f401 6480 	and.w	r4, r1, #1024	; 0x400
 8014ee2:	f001 0102 	and.w	r1, r1, #2
 8014ee6:	b17a      	cbz	r2, 8014f08 <adc_special_function_config+0x30>
 8014ee8:	b11b      	cbz	r3, 8014ef2 <adc_special_function_config+0x1a>
 8014eea:	6843      	ldr	r3, [r0, #4]
 8014eec:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8014ef0:	6043      	str	r3, [r0, #4]
 8014ef2:	b11c      	cbz	r4, 8014efc <adc_special_function_config+0x24>
 8014ef4:	6843      	ldr	r3, [r0, #4]
 8014ef6:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8014efa:	6043      	str	r3, [r0, #4]
 8014efc:	b119      	cbz	r1, 8014f06 <adc_special_function_config+0x2e>
 8014efe:	6883      	ldr	r3, [r0, #8]
 8014f00:	f043 0302 	orr.w	r3, r3, #2
 8014f04:	6083      	str	r3, [r0, #8]
 8014f06:	bd10      	pop	{r4, pc}
 8014f08:	b11b      	cbz	r3, 8014f12 <adc_special_function_config+0x3a>
 8014f0a:	6843      	ldr	r3, [r0, #4]
 8014f0c:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8014f10:	6043      	str	r3, [r0, #4]
 8014f12:	b11c      	cbz	r4, 8014f1c <adc_special_function_config+0x44>
 8014f14:	6843      	ldr	r3, [r0, #4]
 8014f16:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8014f1a:	6043      	str	r3, [r0, #4]
 8014f1c:	2900      	cmp	r1, #0
 8014f1e:	d0f2      	beq.n	8014f06 <adc_special_function_config+0x2e>
 8014f20:	6883      	ldr	r3, [r0, #8]
 8014f22:	f023 0302 	bic.w	r3, r3, #2
 8014f26:	e7ed      	b.n	8014f04 <adc_special_function_config+0x2c>

08014f28 <adc_data_alignment_config>:
 8014f28:	6883      	ldr	r3, [r0, #8]
 8014f2a:	b119      	cbz	r1, 8014f34 <adc_data_alignment_config+0xc>
 8014f2c:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8014f30:	6083      	str	r3, [r0, #8]
 8014f32:	4770      	bx	lr
 8014f34:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8014f38:	e7fa      	b.n	8014f30 <adc_data_alignment_config+0x8>

08014f3a <adc_enable>:
 8014f3a:	6883      	ldr	r3, [r0, #8]
 8014f3c:	07db      	lsls	r3, r3, #31
 8014f3e:	bf5e      	ittt	pl
 8014f40:	6883      	ldrpl	r3, [r0, #8]
 8014f42:	f043 0301 	orrpl.w	r3, r3, #1
 8014f46:	6083      	strpl	r3, [r0, #8]
 8014f48:	4770      	bx	lr

08014f4a <adc_calibration_enable>:
 8014f4a:	6883      	ldr	r3, [r0, #8]
 8014f4c:	f100 0208 	add.w	r2, r0, #8
 8014f50:	f043 0308 	orr.w	r3, r3, #8
 8014f54:	6083      	str	r3, [r0, #8]
 8014f56:	6813      	ldr	r3, [r2, #0]
 8014f58:	0719      	lsls	r1, r3, #28
 8014f5a:	d4fc      	bmi.n	8014f56 <adc_calibration_enable+0xc>
 8014f5c:	6883      	ldr	r3, [r0, #8]
 8014f5e:	f043 0304 	orr.w	r3, r3, #4
 8014f62:	6083      	str	r3, [r0, #8]
 8014f64:	6813      	ldr	r3, [r2, #0]
 8014f66:	075b      	lsls	r3, r3, #29
 8014f68:	d4fc      	bmi.n	8014f64 <adc_calibration_enable+0x1a>
 8014f6a:	4770      	bx	lr

08014f6c <adc_tempsensor_vrefint_enable>:
 8014f6c:	4a03      	ldr	r2, [pc, #12]	; (8014f7c <adc_tempsensor_vrefint_enable+0x10>)
 8014f6e:	f8d2 3408 	ldr.w	r3, [r2, #1032]	; 0x408
 8014f72:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8014f76:	f8c2 3408 	str.w	r3, [r2, #1032]	; 0x408
 8014f7a:	4770      	bx	lr
 8014f7c:	40012000 	andmi	r2, r1, r0

08014f80 <adc_channel_length_config>:
 8014f80:	2901      	cmp	r1, #1
 8014f82:	d002      	beq.n	8014f8a <adc_channel_length_config+0xa>
 8014f84:	2902      	cmp	r1, #2
 8014f86:	d00c      	beq.n	8014fa2 <adc_channel_length_config+0x22>
 8014f88:	4770      	bx	lr
 8014f8a:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8014f8c:	3a01      	subs	r2, #1
 8014f8e:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 8014f92:	62c3      	str	r3, [r0, #44]	; 0x2c
 8014f94:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8014f96:	0512      	lsls	r2, r2, #20
 8014f98:	f402 0270 	and.w	r2, r2, #15728640	; 0xf00000
 8014f9c:	431a      	orrs	r2, r3
 8014f9e:	62c2      	str	r2, [r0, #44]	; 0x2c
 8014fa0:	4770      	bx	lr
 8014fa2:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8014fa4:	3a01      	subs	r2, #1
 8014fa6:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 8014faa:	6383      	str	r3, [r0, #56]	; 0x38
 8014fac:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8014fae:	0512      	lsls	r2, r2, #20
 8014fb0:	f402 1240 	and.w	r2, r2, #3145728	; 0x300000
 8014fb4:	431a      	orrs	r2, r3
 8014fb6:	6382      	str	r2, [r0, #56]	; 0x38
 8014fb8:	4770      	bx	lr

08014fba <adc_inserted_channel_config>:
 8014fba:	b530      	push	{r4, r5, lr}
 8014fbc:	6b84      	ldr	r4, [r0, #56]	; 0x38
 8014fbe:	6b85      	ldr	r5, [r0, #56]	; 0x38
 8014fc0:	f3c4 5401 	ubfx	r4, r4, #20, #2
 8014fc4:	1a61      	subs	r1, r4, r1
 8014fc6:	f06f 0404 	mvn.w	r4, #4
 8014fca:	4361      	muls	r1, r4
 8014fcc:	241f      	movs	r4, #31
 8014fce:	310f      	adds	r1, #15
 8014fd0:	408c      	lsls	r4, r1
 8014fd2:	ea25 0504 	bic.w	r5, r5, r4
 8014fd6:	fa02 f101 	lsl.w	r1, r2, r1
 8014fda:	4329      	orrs	r1, r5
 8014fdc:	2a09      	cmp	r2, #9
 8014fde:	6381      	str	r1, [r0, #56]	; 0x38
 8014fe0:	d80b      	bhi.n	8014ffa <adc_inserted_channel_config+0x40>
 8014fe2:	eb02 0142 	add.w	r1, r2, r2, lsl #1
 8014fe6:	2207      	movs	r2, #7
 8014fe8:	6904      	ldr	r4, [r0, #16]
 8014fea:	408a      	lsls	r2, r1
 8014fec:	ea24 0402 	bic.w	r4, r4, r2
 8014ff0:	fa03 f201 	lsl.w	r2, r3, r1
 8014ff4:	4322      	orrs	r2, r4
 8014ff6:	6102      	str	r2, [r0, #16]
 8014ff8:	bd30      	pop	{r4, r5, pc}
 8014ffa:	2a11      	cmp	r2, #17
 8014ffc:	d8fc      	bhi.n	8014ff8 <adc_inserted_channel_config+0x3e>
 8014ffe:	2407      	movs	r4, #7
 8015000:	3a0a      	subs	r2, #10
 8015002:	68c1      	ldr	r1, [r0, #12]
 8015004:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015008:	4094      	lsls	r4, r2
 801500a:	ea21 0104 	bic.w	r1, r1, r4
 801500e:	fa03 f202 	lsl.w	r2, r3, r2
 8015012:	430a      	orrs	r2, r1
 8015014:	60c2      	str	r2, [r0, #12]
 8015016:	e7ef      	b.n	8014ff8 <adc_inserted_channel_config+0x3e>

08015018 <adc_external_trigger_source_config>:
 8015018:	2901      	cmp	r1, #1
 801501a:	d002      	beq.n	8015022 <adc_external_trigger_source_config+0xa>
 801501c:	2902      	cmp	r1, #2
 801501e:	d008      	beq.n	8015032 <adc_external_trigger_source_config+0x1a>
 8015020:	4770      	bx	lr
 8015022:	6883      	ldr	r3, [r0, #8]
 8015024:	f423 2360 	bic.w	r3, r3, #917504	; 0xe0000
 8015028:	6083      	str	r3, [r0, #8]
 801502a:	6883      	ldr	r3, [r0, #8]
 801502c:	431a      	orrs	r2, r3
 801502e:	6082      	str	r2, [r0, #8]
 8015030:	4770      	bx	lr
 8015032:	6883      	ldr	r3, [r0, #8]
 8015034:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8015038:	e7f6      	b.n	8015028 <adc_external_trigger_source_config+0x10>

0801503a <adc_external_trigger_config>:
 801503a:	f001 0301 	and.w	r3, r1, #1
 801503e:	f001 0102 	and.w	r1, r1, #2
 8015042:	b152      	cbz	r2, 801505a <adc_external_trigger_config+0x20>
 8015044:	b11b      	cbz	r3, 801504e <adc_external_trigger_config+0x14>
 8015046:	6883      	ldr	r3, [r0, #8]
 8015048:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 801504c:	6083      	str	r3, [r0, #8]
 801504e:	b119      	cbz	r1, 8015058 <adc_external_trigger_config+0x1e>
 8015050:	6883      	ldr	r3, [r0, #8]
 8015052:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8015056:	6083      	str	r3, [r0, #8]
 8015058:	4770      	bx	lr
 801505a:	b11b      	cbz	r3, 8015064 <adc_external_trigger_config+0x2a>
 801505c:	6883      	ldr	r3, [r0, #8]
 801505e:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 8015062:	6083      	str	r3, [r0, #8]
 8015064:	2900      	cmp	r1, #0
 8015066:	d0f7      	beq.n	8015058 <adc_external_trigger_config+0x1e>
 8015068:	6883      	ldr	r3, [r0, #8]
 801506a:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 801506e:	e7f2      	b.n	8015056 <adc_external_trigger_config+0x1c>

08015070 <adc_software_trigger_enable>:
 8015070:	07ca      	lsls	r2, r1, #31
 8015072:	bf42      	ittt	mi
 8015074:	6883      	ldrmi	r3, [r0, #8]
 8015076:	f443 0380 	orrmi.w	r3, r3, #4194304	; 0x400000
 801507a:	6083      	strmi	r3, [r0, #8]
 801507c:	078b      	lsls	r3, r1, #30
 801507e:	bf42      	ittt	mi
 8015080:	6883      	ldrmi	r3, [r0, #8]
 8015082:	f443 1300 	orrmi.w	r3, r3, #2097152	; 0x200000
 8015086:	6083      	strmi	r3, [r0, #8]
 8015088:	4770      	bx	lr

0801508a <enet_delay>:
 801508a:	2300      	movs	r3, #0
 801508c:	b082      	sub	sp, #8
 801508e:	9301      	str	r3, [sp, #4]
 8015090:	9001      	str	r0, [sp, #4]
 8015092:	9b01      	ldr	r3, [sp, #4]
 8015094:	b90b      	cbnz	r3, 801509a <enet_delay+0x10>
 8015096:	b002      	add	sp, #8
 8015098:	4770      	bx	lr
 801509a:	9b01      	ldr	r3, [sp, #4]
 801509c:	3b01      	subs	r3, #1
 801509e:	9301      	str	r3, [sp, #4]
 80150a0:	e7f7      	b.n	8015092 <enet_delay+0x8>
	...

080150a4 <enet_software_reset>:
 80150a4:	4b07      	ldr	r3, [pc, #28]	; (80150c4 <enet_software_reset+0x20>)
 80150a6:	681a      	ldr	r2, [r3, #0]
 80150a8:	f042 0201 	orr.w	r2, r2, #1
 80150ac:	601a      	str	r2, [r3, #0]
 80150ae:	4a06      	ldr	r2, [pc, #24]	; (80150c8 <enet_software_reset+0x24>)
 80150b0:	6819      	ldr	r1, [r3, #0]
 80150b2:	07c9      	lsls	r1, r1, #31
 80150b4:	d501      	bpl.n	80150ba <enet_software_reset+0x16>
 80150b6:	3a01      	subs	r2, #1
 80150b8:	d1fa      	bne.n	80150b0 <enet_software_reset+0xc>
 80150ba:	6818      	ldr	r0, [r3, #0]
 80150bc:	43c0      	mvns	r0, r0
 80150be:	f000 0001 	and.w	r0, r0, #1
 80150c2:	4770      	bx	lr
 80150c4:	40029000 	andmi	r9, r2, r0
 80150c8:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

080150cc <enet_descriptors_chain_init>:
 80150cc:	f5b0 0fe0 	cmp.w	r0, #7340032	; 0x700000
 80150d0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80150d2:	4a19      	ldr	r2, [pc, #100]	; (8015138 <enet_descriptors_chain_init+0x6c>)
 80150d4:	d125      	bne.n	8015122 <enet_descriptors_chain_init+0x56>
 80150d6:	2500      	movs	r5, #0
 80150d8:	f44f 1680 	mov.w	r6, #1048576	; 0x100000
 80150dc:	2002      	movs	r0, #2
 80150de:	4b17      	ldr	r3, [pc, #92]	; (801513c <enet_descriptors_chain_init+0x70>)
 80150e0:	4c17      	ldr	r4, [pc, #92]	; (8015140 <enet_descriptors_chain_init+0x74>)
 80150e2:	6113      	str	r3, [r2, #16]
 80150e4:	4a17      	ldr	r2, [pc, #92]	; (8015144 <enet_descriptors_chain_init+0x78>)
 80150e6:	6013      	str	r3, [r2, #0]
 80150e8:	2200      	movs	r2, #0
 80150ea:	f240 5ef4 	movw	lr, #1524	; 0x5f4
 80150ee:	4916      	ldr	r1, [pc, #88]	; (8015148 <enet_descriptors_chain_init+0x7c>)
 80150f0:	f100 3cff 	add.w	ip, r0, #4294967295	; 0xffffffff
 80150f4:	600a      	str	r2, [r1, #0]
 80150f6:	4915      	ldr	r1, [pc, #84]	; (801514c <enet_descriptors_chain_init+0x80>)
 80150f8:	600a      	str	r2, [r1, #0]
 80150fa:	f103 0110 	add.w	r1, r3, #16
 80150fe:	fb0e 4702 	mla	r7, lr, r2, r4
 8015102:	f841 7c08 	str.w	r7, [r1, #-8]
 8015106:	4594      	cmp	ip, r2
 8015108:	bf94      	ite	ls
 801510a:	461f      	movls	r7, r3
 801510c:	460f      	movhi	r7, r1
 801510e:	3201      	adds	r2, #1
 8015110:	4290      	cmp	r0, r2
 8015112:	e941 6504 	strd	r6, r5, [r1, #-16]
 8015116:	f841 7c04 	str.w	r7, [r1, #-4]
 801511a:	f101 0110 	add.w	r1, r1, #16
 801511e:	d1ee      	bne.n	80150fe <enet_descriptors_chain_init+0x32>
 8015120:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8015122:	4b0b      	ldr	r3, [pc, #44]	; (8015150 <enet_descriptors_chain_init+0x84>)
 8015124:	f244 55f4 	movw	r5, #17908	; 0x45f4
 8015128:	60d3      	str	r3, [r2, #12]
 801512a:	4a0a      	ldr	r2, [pc, #40]	; (8015154 <enet_descriptors_chain_init+0x88>)
 801512c:	f04f 4600 	mov.w	r6, #2147483648	; 0x80000000
 8015130:	200a      	movs	r0, #10
 8015132:	4c09      	ldr	r4, [pc, #36]	; (8015158 <enet_descriptors_chain_init+0x8c>)
 8015134:	6013      	str	r3, [r2, #0]
 8015136:	e7d7      	b.n	80150e8 <enet_descriptors_chain_init+0x1c>
 8015138:	40029000 	andmi	r9, r2, r0
 801513c:	2001865c 	andcs	r8, r1, ip, asr r6
 8015140:	20017a74 	andcs	r7, r1, r4, ror sl
 8015144:	20013e0c 	andcs	r3, r1, ip, lsl #28
 8015148:	20013e00 	andcs	r3, r1, r0, lsl #28
 801514c:	20013e04 	andcs	r3, r1, r4, lsl #28
 8015150:	200179d4 	ldrdcs	r7, [r1], -r4
 8015154:	20013e08 	andcs	r3, r1, r8, lsl #28
 8015158:	20013e4c 	andcs	r3, r1, ip, asr #28

0801515c <enet_frame_receive>:
 801515c:	4a1d      	ldr	r2, [pc, #116]	; (80151d4 <enet_frame_receive+0x78>)
 801515e:	b510      	push	{r4, lr}
 8015160:	6813      	ldr	r3, [r2, #0]
 8015162:	681b      	ldr	r3, [r3, #0]
 8015164:	2b00      	cmp	r3, #0
 8015166:	db33      	blt.n	80151d0 <enet_frame_receive+0x74>
 8015168:	b970      	cbnz	r0, 8015188 <enet_frame_receive+0x2c>
 801516a:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
 801516e:	6813      	ldr	r3, [r2, #0]
 8015170:	6019      	str	r1, [r3, #0]
 8015172:	4919      	ldr	r1, [pc, #100]	; (80151d8 <enet_frame_receive+0x7c>)
 8015174:	6948      	ldr	r0, [r1, #20]
 8015176:	0604      	lsls	r4, r0, #24
 8015178:	d419      	bmi.n	80151ae <enet_frame_receive+0x52>
 801517a:	6859      	ldr	r1, [r3, #4]
 801517c:	0448      	lsls	r0, r1, #17
 801517e:	d51b      	bpl.n	80151b8 <enet_frame_receive+0x5c>
 8015180:	68db      	ldr	r3, [r3, #12]
 8015182:	2001      	movs	r0, #1
 8015184:	6013      	str	r3, [r2, #0]
 8015186:	bd10      	pop	{r4, pc}
 8015188:	f403 4403 	and.w	r4, r3, #33536	; 0x8300
 801518c:	f5b4 7f40 	cmp.w	r4, #768	; 0x300
 8015190:	d11e      	bne.n	80151d0 <enet_frame_receive+0x74>
 8015192:	f3c3 430d 	ubfx	r3, r3, #16, #14
 8015196:	3b04      	subs	r3, #4
 8015198:	428b      	cmp	r3, r1
 801519a:	d819      	bhi.n	80151d0 <enet_frame_receive+0x74>
 801519c:	2100      	movs	r1, #0
 801519e:	4299      	cmp	r1, r3
 80151a0:	6814      	ldr	r4, [r2, #0]
 80151a2:	d2e2      	bcs.n	801516a <enet_frame_receive+0xe>
 80151a4:	68a4      	ldr	r4, [r4, #8]
 80151a6:	5d0c      	ldrb	r4, [r1, r4]
 80151a8:	5444      	strb	r4, [r0, r1]
 80151aa:	3101      	adds	r1, #1
 80151ac:	e7f7      	b.n	801519e <enet_frame_receive+0x42>
 80151ae:	2080      	movs	r0, #128	; 0x80
 80151b0:	6148      	str	r0, [r1, #20]
 80151b2:	2000      	movs	r0, #0
 80151b4:	6088      	str	r0, [r1, #8]
 80151b6:	e7e0      	b.n	801517a <enet_frame_receive+0x1e>
 80151b8:	f411 4f00 	tst.w	r1, #32768	; 0x8000
 80151bc:	4906      	ldr	r1, [pc, #24]	; (80151d8 <enet_frame_receive+0x7c>)
 80151be:	bf05      	ittet	eq
 80151c0:	3310      	addeq	r3, #16
 80151c2:	6809      	ldreq	r1, [r1, #0]
 80151c4:	68cb      	ldrne	r3, [r1, #12]
 80151c6:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 80151ca:	bf08      	it	eq
 80151cc:	185b      	addeq	r3, r3, r1
 80151ce:	e7d8      	b.n	8015182 <enet_frame_receive+0x26>
 80151d0:	2000      	movs	r0, #0
 80151d2:	e7d8      	b.n	8015186 <enet_frame_receive+0x2a>
 80151d4:	20013e08 	andcs	r3, r1, r8, lsl #28
 80151d8:	40029000 	andmi	r9, r2, r0

080151dc <enet_frame_transmit>:
 80151dc:	4a1e      	ldr	r2, [pc, #120]	; (8015258 <enet_frame_transmit+0x7c>)
 80151de:	b530      	push	{r4, r5, lr}
 80151e0:	6813      	ldr	r3, [r2, #0]
 80151e2:	681b      	ldr	r3, [r3, #0]
 80151e4:	2b00      	cmp	r3, #0
 80151e6:	db34      	blt.n	8015252 <enet_frame_transmit+0x76>
 80151e8:	f240 53f4 	movw	r3, #1524	; 0x5f4
 80151ec:	4299      	cmp	r1, r3
 80151ee:	d830      	bhi.n	8015252 <enet_frame_transmit+0x76>
 80151f0:	b9e8      	cbnz	r0, 801522e <enet_frame_transmit+0x52>
 80151f2:	6813      	ldr	r3, [r2, #0]
 80151f4:	4819      	ldr	r0, [pc, #100]	; (801525c <enet_frame_transmit+0x80>)
 80151f6:	6059      	str	r1, [r3, #4]
 80151f8:	6819      	ldr	r1, [r3, #0]
 80151fa:	f041 4130 	orr.w	r1, r1, #2952790016	; 0xb0000000
 80151fe:	6019      	str	r1, [r3, #0]
 8015200:	6941      	ldr	r1, [r0, #20]
 8015202:	6944      	ldr	r4, [r0, #20]
 8015204:	f001 0104 	and.w	r1, r1, #4
 8015208:	f004 0420 	and.w	r4, r4, #32
 801520c:	4321      	orrs	r1, r4
 801520e:	d110      	bne.n	8015232 <enet_frame_transmit+0x56>
 8015210:	6819      	ldr	r1, [r3, #0]
 8015212:	02c8      	lsls	r0, r1, #11
 8015214:	d511      	bpl.n	801523a <enet_frame_transmit+0x5e>
 8015216:	68db      	ldr	r3, [r3, #12]
 8015218:	2001      	movs	r0, #1
 801521a:	6013      	str	r3, [r2, #0]
 801521c:	bd30      	pop	{r4, r5, pc}
 801521e:	5cc5      	ldrb	r5, [r0, r3]
 8015220:	68a4      	ldr	r4, [r4, #8]
 8015222:	551d      	strb	r5, [r3, r4]
 8015224:	3301      	adds	r3, #1
 8015226:	428b      	cmp	r3, r1
 8015228:	6814      	ldr	r4, [r2, #0]
 801522a:	d1f8      	bne.n	801521e <enet_frame_transmit+0x42>
 801522c:	e7e1      	b.n	80151f2 <enet_frame_transmit+0x16>
 801522e:	2300      	movs	r3, #0
 8015230:	e7f9      	b.n	8015226 <enet_frame_transmit+0x4a>
 8015232:	6141      	str	r1, [r0, #20]
 8015234:	2100      	movs	r1, #0
 8015236:	6041      	str	r1, [r0, #4]
 8015238:	e7ea      	b.n	8015210 <enet_frame_transmit+0x34>
 801523a:	f411 1f00 	tst.w	r1, #2097152	; 0x200000
 801523e:	4907      	ldr	r1, [pc, #28]	; (801525c <enet_frame_transmit+0x80>)
 8015240:	bf05      	ittet	eq
 8015242:	3310      	addeq	r3, #16
 8015244:	6809      	ldreq	r1, [r1, #0]
 8015246:	690b      	ldrne	r3, [r1, #16]
 8015248:	f3c1 0184 	ubfxeq	r1, r1, #2, #5
 801524c:	bf08      	it	eq
 801524e:	185b      	addeq	r3, r3, r1
 8015250:	e7e2      	b.n	8015218 <enet_frame_transmit+0x3c>
 8015252:	2000      	movs	r0, #0
 8015254:	e7e2      	b.n	801521c <enet_frame_transmit+0x40>
 8015256:	bf00      	nop
 8015258:	20013e0c 	andcs	r3, r1, ip, lsl #28
 801525c:	40029000 	andmi	r9, r2, r0

08015260 <enet_transmit_checksum_config>:
 8015260:	6803      	ldr	r3, [r0, #0]
 8015262:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 8015266:	430b      	orrs	r3, r1
 8015268:	6003      	str	r3, [r0, #0]
 801526a:	4770      	bx	lr

0801526c <enet_mac_address_set>:
 801526c:	888a      	ldrh	r2, [r1, #4]
 801526e:	4b03      	ldr	r3, [pc, #12]	; (801527c <enet_mac_address_set+0x10>)
 8015270:	50c2      	str	r2, [r0, r3]
 8015272:	680a      	ldr	r2, [r1, #0]
 8015274:	3304      	adds	r3, #4
 8015276:	50c2      	str	r2, [r0, r3]
 8015278:	4770      	bx	lr
 801527a:	bf00      	nop
 801527c:	40028040 	andmi	r8, r2, r0, asr #32

08015280 <enet_rx_enable>:
 8015280:	4a05      	ldr	r2, [pc, #20]	; (8015298 <enet_rx_enable+0x18>)
 8015282:	6813      	ldr	r3, [r2, #0]
 8015284:	f043 0304 	orr.w	r3, r3, #4
 8015288:	6013      	str	r3, [r2, #0]
 801528a:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 801528e:	6993      	ldr	r3, [r2, #24]
 8015290:	f043 0302 	orr.w	r3, r3, #2
 8015294:	6193      	str	r3, [r2, #24]
 8015296:	4770      	bx	lr
 8015298:	40028000 	andmi	r8, r2, r0

0801529c <enet_phy_write_read>:
 801529c:	b530      	push	{r4, r5, lr}
 801529e:	4604      	mov	r4, r0
 80152a0:	4d13      	ldr	r5, [pc, #76]	; (80152f0 <enet_phy_write_read+0x54>)
 80152a2:	0192      	lsls	r2, r2, #6
 80152a4:	6928      	ldr	r0, [r5, #16]
 80152a6:	f402 62f8 	and.w	r2, r2, #1984	; 0x7c0
 80152aa:	f420 407f 	bic.w	r0, r0, #65280	; 0xff00
 80152ae:	f020 00c3 	bic.w	r0, r0, #195	; 0xc3
 80152b2:	4302      	orrs	r2, r0
 80152b4:	02c9      	lsls	r1, r1, #11
 80152b6:	b289      	uxth	r1, r1
 80152b8:	2c02      	cmp	r4, #2
 80152ba:	ea42 0204 	orr.w	r2, r2, r4
 80152be:	ea42 0201 	orr.w	r2, r2, r1
 80152c2:	bf08      	it	eq
 80152c4:	8819      	ldrheq	r1, [r3, #0]
 80152c6:	f042 0201 	orr.w	r2, r2, #1
 80152ca:	bf08      	it	eq
 80152cc:	6169      	streq	r1, [r5, #20]
 80152ce:	612a      	str	r2, [r5, #16]
 80152d0:	4907      	ldr	r1, [pc, #28]	; (80152f0 <enet_phy_write_read+0x54>)
 80152d2:	4a08      	ldr	r2, [pc, #32]	; (80152f4 <enet_phy_write_read+0x58>)
 80152d4:	6908      	ldr	r0, [r1, #16]
 80152d6:	07c0      	lsls	r0, r0, #31
 80152d8:	d501      	bpl.n	80152de <enet_phy_write_read+0x42>
 80152da:	3a01      	subs	r2, #1
 80152dc:	d1fa      	bne.n	80152d4 <enet_phy_write_read+0x38>
 80152de:	690a      	ldr	r2, [r1, #16]
 80152e0:	43d2      	mvns	r2, r2
 80152e2:	f002 0001 	and.w	r0, r2, #1
 80152e6:	b90c      	cbnz	r4, 80152ec <enet_phy_write_read+0x50>
 80152e8:	694a      	ldr	r2, [r1, #20]
 80152ea:	801a      	strh	r2, [r3, #0]
 80152ec:	bd30      	pop	{r4, r5, pc}
 80152ee:	bf00      	nop
 80152f0:	40028000 	andmi	r8, r2, r0
 80152f4:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

080152f8 <enet_phy_config>:
 80152f8:	4b22      	ldr	r3, [pc, #136]	; (8015384 <enet_phy_config+0x8c>)
 80152fa:	b513      	push	{r0, r1, r4, lr}
 80152fc:	2001      	movs	r0, #1
 80152fe:	691c      	ldr	r4, [r3, #16]
 8015300:	f7fe ff14 	bl	801412c <rcu_clock_freq_get>
 8015304:	4b20      	ldr	r3, [pc, #128]	; (8015388 <enet_phy_config+0x90>)
 8015306:	4a21      	ldr	r2, [pc, #132]	; (801538c <enet_phy_config+0x94>)
 8015308:	4403      	add	r3, r0
 801530a:	4293      	cmp	r3, r2
 801530c:	f024 041c 	bic.w	r4, r4, #28
 8015310:	d220      	bcs.n	8015354 <enet_phy_config+0x5c>
 8015312:	f044 0408 	orr.w	r4, r4, #8
 8015316:	4b1b      	ldr	r3, [pc, #108]	; (8015384 <enet_phy_config+0x8c>)
 8015318:	2200      	movs	r2, #0
 801531a:	611c      	str	r4, [r3, #16]
 801531c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8015320:	2101      	movs	r1, #1
 8015322:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015326:	2002      	movs	r0, #2
 8015328:	f10d 0306 	add.w	r3, sp, #6
 801532c:	f7ff ffb6 	bl	801529c <enet_phy_write_read>
 8015330:	b310      	cbz	r0, 8015378 <enet_phy_config+0x80>
 8015332:	2200      	movs	r2, #0
 8015334:	4816      	ldr	r0, [pc, #88]	; (8015390 <enet_phy_config+0x98>)
 8015336:	f7ff fea8 	bl	801508a <enet_delay>
 801533a:	2101      	movs	r1, #1
 801533c:	4610      	mov	r0, r2
 801533e:	f10d 0306 	add.w	r3, sp, #6
 8015342:	f7ff ffab 	bl	801529c <enet_phy_write_read>
 8015346:	b1b8      	cbz	r0, 8015378 <enet_phy_config+0x80>
 8015348:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 801534c:	43c0      	mvns	r0, r0
 801534e:	f3c0 30c0 	ubfx	r0, r0, #15, #1
 8015352:	e012      	b.n	801537a <enet_phy_config+0x82>
 8015354:	4b0f      	ldr	r3, [pc, #60]	; (8015394 <enet_phy_config+0x9c>)
 8015356:	4a10      	ldr	r2, [pc, #64]	; (8015398 <enet_phy_config+0xa0>)
 8015358:	4403      	add	r3, r0
 801535a:	4293      	cmp	r3, r2
 801535c:	d802      	bhi.n	8015364 <enet_phy_config+0x6c>
 801535e:	f044 040c 	orr.w	r4, r4, #12
 8015362:	e7d8      	b.n	8015316 <enet_phy_config+0x1e>
 8015364:	4b0d      	ldr	r3, [pc, #52]	; (801539c <enet_phy_config+0xa4>)
 8015366:	4a0e      	ldr	r2, [pc, #56]	; (80153a0 <enet_phy_config+0xa8>)
 8015368:	4403      	add	r3, r0
 801536a:	4293      	cmp	r3, r2
 801536c:	d3d3      	bcc.n	8015316 <enet_phy_config+0x1e>
 801536e:	4b0d      	ldr	r3, [pc, #52]	; (80153a4 <enet_phy_config+0xac>)
 8015370:	4a0d      	ldr	r2, [pc, #52]	; (80153a8 <enet_phy_config+0xb0>)
 8015372:	4403      	add	r3, r0
 8015374:	4293      	cmp	r3, r2
 8015376:	d902      	bls.n	801537e <enet_phy_config+0x86>
 8015378:	2000      	movs	r0, #0
 801537a:	b002      	add	sp, #8
 801537c:	bd10      	pop	{r4, pc}
 801537e:	f044 0404 	orr.w	r4, r4, #4
 8015382:	e7c8      	b.n	8015316 <enet_phy_config+0x1e>
 8015384:	40028000 	andmi	r8, r2, r0
 8015388:	feced300 	cdp2	3, 12, cr13, cr14, cr0, {0}
 801538c:	00e4e1c0 	rsceq	lr, r4, r0, asr #3
 8015390:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 8015394:	fde9f140 	stc2l	1, cr15, [r9, #256]!	; 0x100
 8015398:	017d783f 	cmneq	sp, pc, lsr r8
 801539c:	fc6c7900 	stc2l	9, cr7, [ip], #-0	; <UNPREDICTABLE>
 80153a0:	02625a00 	rsbeq	r5, r2, #0, 20
 80153a4:	fa0a1f00 	blx	829cfac <__exidx_end+0x285000>
 80153a8:	01312d00 	teqeq	r1, r0, lsl #26

080153ac <enet_init>:
 80153ac:	2300      	movs	r3, #0
 80153ae:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80153b0:	4604      	mov	r4, r0
 80153b2:	460d      	mov	r5, r1
 80153b4:	4616      	mov	r6, r2
 80153b6:	f8ad 3006 	strh.w	r3, [sp, #6]
 80153ba:	f7ff ff9d 	bl	80152f8 <enet_phy_config>
 80153be:	2800      	cmp	r0, #0
 80153c0:	d039      	beq.n	8015436 <enet_init+0x8a>
 80153c2:	4b3c      	ldr	r3, [pc, #240]	; (80154b4 <enet_init+0x108>)
 80153c4:	4a3c      	ldr	r2, [pc, #240]	; (80154b8 <enet_init+0x10c>)
 80153c6:	6819      	ldr	r1, [r3, #0]
 80153c8:	f44f 50a8 	mov.w	r0, #5376	; 0x1500
 80153cc:	400a      	ands	r2, r1
 80153ce:	601a      	str	r2, [r3, #0]
 80153d0:	2200      	movs	r2, #0
 80153d2:	605a      	str	r2, [r3, #4]
 80153d4:	609a      	str	r2, [r3, #8]
 80153d6:	60da      	str	r2, [r3, #12]
 80153d8:	6999      	ldr	r1, [r3, #24]
 80153da:	2c01      	cmp	r4, #1
 80153dc:	f021 01be 	bic.w	r1, r1, #190	; 0xbe
 80153e0:	ea4f 4101 	mov.w	r1, r1, lsl #16
 80153e4:	ea4f 4111 	mov.w	r1, r1, lsr #16
 80153e8:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 80153ec:	6199      	str	r1, [r3, #24]
 80153ee:	4933      	ldr	r1, [pc, #204]	; (80154bc <enet_init+0x110>)
 80153f0:	f8c1 0080 	str.w	r0, [r1, #128]	; 0x80
 80153f4:	61da      	str	r2, [r3, #28]
 80153f6:	6988      	ldr	r0, [r1, #24]
 80153f8:	4b31      	ldr	r3, [pc, #196]	; (80154c0 <enet_init+0x114>)
 80153fa:	ea03 0300 	and.w	r3, r3, r0
 80153fe:	f043 7308 	orr.w	r3, r3, #35651584	; 0x2200000
 8015402:	618b      	str	r3, [r1, #24]
 8015404:	680b      	ldr	r3, [r1, #0]
 8015406:	4b2f      	ldr	r3, [pc, #188]	; (80154c4 <enet_init+0x118>)
 8015408:	600b      	str	r3, [r1, #0]
 801540a:	d01e      	beq.n	801544a <enet_init+0x9e>
 801540c:	08e3      	lsrs	r3, r4, #3
 801540e:	0861      	lsrs	r1, r4, #1
 8015410:	f401 5100 	and.w	r1, r1, #8192	; 0x2000
 8015414:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8015418:	430b      	orrs	r3, r1
 801541a:	f8ad 3006 	strh.w	r3, [sp, #6]
 801541e:	2101      	movs	r1, #1
 8015420:	2002      	movs	r0, #2
 8015422:	f10d 0306 	add.w	r3, sp, #6
 8015426:	f7ff ff39 	bl	801529c <enet_phy_write_read>
 801542a:	b158      	cbz	r0, 8015444 <enet_init+0x98>
 801542c:	f06f 407f 	mvn.w	r0, #4278190080	; 0xff000000
 8015430:	f7ff fe2b 	bl	801508a <enet_delay>
 8015434:	e05f      	b.n	80154f6 <enet_init+0x14a>
 8015436:	4824      	ldr	r0, [pc, #144]	; (80154c8 <enet_init+0x11c>)
 8015438:	f7ff fe27 	bl	801508a <enet_delay>
 801543c:	f7ff ff5c 	bl	80152f8 <enet_phy_config>
 8015440:	2800      	cmp	r0, #0
 8015442:	d1be      	bne.n	80153c2 <enet_init+0x16>
 8015444:	2000      	movs	r0, #0
 8015446:	b003      	add	sp, #12
 8015448:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801544a:	4614      	mov	r4, r2
 801544c:	4f1f      	ldr	r7, [pc, #124]	; (80154cc <enet_init+0x120>)
 801544e:	2201      	movs	r2, #1
 8015450:	2000      	movs	r0, #0
 8015452:	4611      	mov	r1, r2
 8015454:	f10d 0306 	add.w	r3, sp, #6
 8015458:	f7ff ff20 	bl	801529c <enet_phy_write_read>
 801545c:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8015460:	3401      	adds	r4, #1
 8015462:	f002 0204 	and.w	r2, r2, #4
 8015466:	f8ad 2006 	strh.w	r2, [sp, #6]
 801546a:	b912      	cbnz	r2, 8015472 <enet_init+0xc6>
 801546c:	42bc      	cmp	r4, r7
 801546e:	d1ee      	bne.n	801544e <enet_init+0xa2>
 8015470:	e7e8      	b.n	8015444 <enet_init+0x98>
 8015472:	42bc      	cmp	r4, r7
 8015474:	d0e6      	beq.n	8015444 <enet_init+0x98>
 8015476:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 801547a:	2101      	movs	r1, #1
 801547c:	f8ad 2006 	strh.w	r2, [sp, #6]
 8015480:	2002      	movs	r0, #2
 8015482:	2200      	movs	r2, #0
 8015484:	f7ff ff0a 	bl	801529c <enet_phy_write_read>
 8015488:	2800      	cmp	r0, #0
 801548a:	d0db      	beq.n	8015444 <enet_init+0x98>
 801548c:	2400      	movs	r4, #0
 801548e:	4f0f      	ldr	r7, [pc, #60]	; (80154cc <enet_init+0x120>)
 8015490:	2201      	movs	r2, #1
 8015492:	2000      	movs	r0, #0
 8015494:	4611      	mov	r1, r2
 8015496:	f10d 0306 	add.w	r3, sp, #6
 801549a:	f7ff feff 	bl	801529c <enet_phy_write_read>
 801549e:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 80154a2:	3401      	adds	r4, #1
 80154a4:	f002 0220 	and.w	r2, r2, #32
 80154a8:	f8ad 2006 	strh.w	r2, [sp, #6]
 80154ac:	b982      	cbnz	r2, 80154d0 <enet_init+0x124>
 80154ae:	42bc      	cmp	r4, r7
 80154b0:	d1ee      	bne.n	8015490 <enet_init+0xe4>
 80154b2:	e7c7      	b.n	8015444 <enet_init+0x98>
 80154b4:	40028000 	andmi	r8, r2, r0
 80154b8:	fd30810f 	ldc2	1, cr8, [r0, #-60]!	; 0xffffffc4
 80154bc:	40029000 	andmi	r9, r2, r0
 80154c0:	f8de3f23 			; <UNDEFINED> instruction: 0xf8de3f23
 80154c4:	02c16000 	sbceq	r6, r1, #0
 80154c8:	008fffff 	strdeq	pc, [pc], pc	; <UNPREDICTABLE>
 80154cc:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>
 80154d0:	42bc      	cmp	r4, r7
 80154d2:	d0b7      	beq.n	8015444 <enet_init+0x98>
 80154d4:	2101      	movs	r1, #1
 80154d6:	2210      	movs	r2, #16
 80154d8:	2000      	movs	r0, #0
 80154da:	f7ff fedf 	bl	801529c <enet_phy_write_read>
 80154de:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80154e2:	f013 0f04 	tst.w	r3, #4
 80154e6:	bf14      	ite	ne
 80154e8:	f44f 6400 	movne.w	r4, #2048	; 0x800
 80154ec:	2400      	moveq	r4, #0
 80154ee:	0799      	lsls	r1, r3, #30
 80154f0:	d401      	bmi.n	80154f6 <enet_init+0x14a>
 80154f2:	f444 4480 	orr.w	r4, r4, #16384	; 0x4000
 80154f6:	4b64      	ldr	r3, [pc, #400]	; (8015688 <enet_init+0x2dc>)
 80154f8:	056a      	lsls	r2, r5, #21
 80154fa:	6818      	ldr	r0, [r3, #0]
 80154fc:	f420 40b0 	bic.w	r0, r0, #22528	; 0x5800
 8015500:	ea44 0400 	orr.w	r4, r4, r0
 8015504:	601c      	str	r4, [r3, #0]
 8015506:	d50c      	bpl.n	8015522 <enet_init+0x176>
 8015508:	681a      	ldr	r2, [r3, #0]
 801550a:	f005 6580 	and.w	r5, r5, #67108864	; 0x4000000
 801550e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8015512:	601a      	str	r2, [r3, #0]
 8015514:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8015518:	6999      	ldr	r1, [r3, #24]
 801551a:	f021 6180 	bic.w	r1, r1, #67108864	; 0x4000000
 801551e:	430d      	orrs	r5, r1
 8015520:	619d      	str	r5, [r3, #24]
 8015522:	4959      	ldr	r1, [pc, #356]	; (8015688 <enet_init+0x2dc>)
 8015524:	4b59      	ldr	r3, [pc, #356]	; (801568c <enet_init+0x2e0>)
 8015526:	684a      	ldr	r2, [r1, #4]
 8015528:	4316      	orrs	r6, r2
 801552a:	604e      	str	r6, [r1, #4]
 801552c:	681a      	ldr	r2, [r3, #0]
 801552e:	07d7      	lsls	r7, r2, #31
 8015530:	d510      	bpl.n	8015554 <enet_init+0x1a8>
 8015532:	685a      	ldr	r2, [r3, #4]
 8015534:	680c      	ldr	r4, [r1, #0]
 8015536:	f002 0080 	and.w	r0, r2, #128	; 0x80
 801553a:	f024 0480 	bic.w	r4, r4, #128	; 0x80
 801553e:	4320      	orrs	r0, r4
 8015540:	6008      	str	r0, [r1, #0]
 8015542:	4853      	ldr	r0, [pc, #332]	; (8015690 <enet_init+0x2e4>)
 8015544:	0892      	lsrs	r2, r2, #2
 8015546:	6981      	ldr	r1, [r0, #24]
 8015548:	f002 02c0 	and.w	r2, r2, #192	; 0xc0
 801554c:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8015550:	430a      	orrs	r2, r1
 8015552:	6182      	str	r2, [r0, #24]
 8015554:	681a      	ldr	r2, [r3, #0]
 8015556:	0796      	lsls	r6, r2, #30
 8015558:	d508      	bpl.n	801556c <enet_init+0x1c0>
 801555a:	494d      	ldr	r1, [pc, #308]	; (8015690 <enet_init+0x2e4>)
 801555c:	6898      	ldr	r0, [r3, #8]
 801555e:	680a      	ldr	r2, [r1, #0]
 8015560:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 8015564:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8015568:	4302      	orrs	r2, r0
 801556a:	600a      	str	r2, [r1, #0]
 801556c:	681a      	ldr	r2, [r3, #0]
 801556e:	0755      	lsls	r5, r2, #29
 8015570:	d508      	bpl.n	8015584 <enet_init+0x1d8>
 8015572:	4947      	ldr	r1, [pc, #284]	; (8015690 <enet_init+0x2e4>)
 8015574:	68d8      	ldr	r0, [r3, #12]
 8015576:	680a      	ldr	r2, [r1, #0]
 8015578:	f422 027e 	bic.w	r2, r2, #16646144	; 0xfe0000
 801557c:	f422 527c 	bic.w	r2, r2, #16128	; 0x3f00
 8015580:	4302      	orrs	r2, r0
 8015582:	600a      	str	r2, [r1, #0]
 8015584:	681a      	ldr	r2, [r3, #0]
 8015586:	0714      	lsls	r4, r2, #28
 8015588:	d508      	bpl.n	801559c <enet_init+0x1f0>
 801558a:	4941      	ldr	r1, [pc, #260]	; (8015690 <enet_init+0x2e4>)
 801558c:	6918      	ldr	r0, [r3, #16]
 801558e:	680a      	ldr	r2, [r1, #0]
 8015590:	f422 4240 	bic.w	r2, r2, #49152	; 0xc000
 8015594:	f022 0202 	bic.w	r2, r2, #2
 8015598:	4302      	orrs	r2, r0
 801559a:	600a      	str	r2, [r1, #0]
 801559c:	681a      	ldr	r2, [r3, #0]
 801559e:	06d0      	lsls	r0, r2, #27
 80155a0:	d506      	bpl.n	80155b0 <enet_init+0x204>
 80155a2:	493b      	ldr	r1, [pc, #236]	; (8015690 <enet_init+0x2e4>)
 80155a4:	4a3b      	ldr	r2, [pc, #236]	; (8015694 <enet_init+0x2e8>)
 80155a6:	6988      	ldr	r0, [r1, #24]
 80155a8:	4002      	ands	r2, r0
 80155aa:	6958      	ldr	r0, [r3, #20]
 80155ac:	4302      	orrs	r2, r0
 80155ae:	618a      	str	r2, [r1, #24]
 80155b0:	681a      	ldr	r2, [r3, #0]
 80155b2:	0691      	lsls	r1, r2, #26
 80155b4:	d508      	bpl.n	80155c8 <enet_init+0x21c>
 80155b6:	4936      	ldr	r1, [pc, #216]	; (8015690 <enet_init+0x2e4>)
 80155b8:	6998      	ldr	r0, [r3, #24]
 80155ba:	698a      	ldr	r2, [r1, #24]
 80155bc:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
 80155c0:	f022 0204 	bic.w	r2, r2, #4
 80155c4:	4302      	orrs	r2, r0
 80155c6:	618a      	str	r2, [r1, #24]
 80155c8:	681a      	ldr	r2, [r3, #0]
 80155ca:	0652      	lsls	r2, r2, #25
 80155cc:	d506      	bpl.n	80155dc <enet_init+0x230>
 80155ce:	492e      	ldr	r1, [pc, #184]	; (8015688 <enet_init+0x2dc>)
 80155d0:	69d8      	ldr	r0, [r3, #28]
 80155d2:	69ca      	ldr	r2, [r1, #28]
 80155d4:	0c52      	lsrs	r2, r2, #17
 80155d6:	0452      	lsls	r2, r2, #17
 80155d8:	4302      	orrs	r2, r0
 80155da:	61ca      	str	r2, [r1, #28]
 80155dc:	681a      	ldr	r2, [r3, #0]
 80155de:	0617      	lsls	r7, r2, #24
 80155e0:	d517      	bpl.n	8015612 <enet_init+0x266>
 80155e2:	4c29      	ldr	r4, [pc, #164]	; (8015688 <enet_init+0x2dc>)
 80155e4:	6a1a      	ldr	r2, [r3, #32]
 80155e6:	69a0      	ldr	r0, [r4, #24]
 80155e8:	f422 417f 	bic.w	r1, r2, #65280	; 0xff00
 80155ec:	f020 00be 	bic.w	r0, r0, #190	; 0xbe
 80155f0:	0400      	lsls	r0, r0, #16
 80155f2:	0c00      	lsrs	r0, r0, #16
 80155f4:	f021 0141 	bic.w	r1, r1, #65	; 0x41
 80155f8:	4301      	orrs	r1, r0
 80155fa:	4825      	ldr	r0, [pc, #148]	; (8015690 <enet_init+0x2e4>)
 80155fc:	61a1      	str	r1, [r4, #24]
 80155fe:	f8d0 1080 	ldr.w	r1, [r0, #128]	; 0x80
 8015602:	0a12      	lsrs	r2, r2, #8
 8015604:	f021 0177 	bic.w	r1, r1, #119	; 0x77
 8015608:	f002 0277 	and.w	r2, r2, #119	; 0x77
 801560c:	430a      	orrs	r2, r1
 801560e:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 8015612:	681a      	ldr	r2, [r3, #0]
 8015614:	05d6      	lsls	r6, r2, #23
 8015616:	bf42      	ittt	mi
 8015618:	6a59      	ldrmi	r1, [r3, #36]	; 0x24
 801561a:	4a1b      	ldrmi	r2, [pc, #108]	; (8015688 <enet_init+0x2dc>)
 801561c:	6091      	strmi	r1, [r2, #8]
 801561e:	681a      	ldr	r2, [r3, #0]
 8015620:	0595      	lsls	r5, r2, #22
 8015622:	bf42      	ittt	mi
 8015624:	4a18      	ldrmi	r2, [pc, #96]	; (8015688 <enet_init+0x2dc>)
 8015626:	6a99      	ldrmi	r1, [r3, #40]	; 0x28
 8015628:	60d1      	strmi	r1, [r2, #12]
 801562a:	681a      	ldr	r2, [r3, #0]
 801562c:	0554      	lsls	r4, r2, #21
 801562e:	d508      	bpl.n	8015642 <enet_init+0x296>
 8015630:	4915      	ldr	r1, [pc, #84]	; (8015688 <enet_init+0x2dc>)
 8015632:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 8015634:	684a      	ldr	r2, [r1, #4]
 8015636:	f422 62fb 	bic.w	r2, r2, #2008	; 0x7d8
 801563a:	f022 0206 	bic.w	r2, r2, #6
 801563e:	4302      	orrs	r2, r0
 8015640:	604a      	str	r2, [r1, #4]
 8015642:	681a      	ldr	r2, [r3, #0]
 8015644:	0510      	lsls	r0, r2, #20
 8015646:	d508      	bpl.n	801565a <enet_init+0x2ae>
 8015648:	490f      	ldr	r1, [pc, #60]	; (8015688 <enet_init+0x2dc>)
 801564a:	6b18      	ldr	r0, [r3, #48]	; 0x30
 801564c:	680a      	ldr	r2, [r1, #0]
 801564e:	f422 3291 	bic.w	r2, r2, #74240	; 0x12200
 8015652:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8015656:	4302      	orrs	r2, r0
 8015658:	600a      	str	r2, [r1, #0]
 801565a:	681a      	ldr	r2, [r3, #0]
 801565c:	04d1      	lsls	r1, r2, #19
 801565e:	d506      	bpl.n	801566e <enet_init+0x2c2>
 8015660:	4909      	ldr	r1, [pc, #36]	; (8015688 <enet_init+0x2dc>)
 8015662:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8015664:	680a      	ldr	r2, [r1, #0]
 8015666:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 801566a:	4302      	orrs	r2, r0
 801566c:	600a      	str	r2, [r1, #0]
 801566e:	681a      	ldr	r2, [r3, #0]
 8015670:	0492      	lsls	r2, r2, #18
 8015672:	d506      	bpl.n	8015682 <enet_init+0x2d6>
 8015674:	4904      	ldr	r1, [pc, #16]	; (8015688 <enet_init+0x2dc>)
 8015676:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8015678:	680a      	ldr	r2, [r1, #0]
 801567a:	f422 2260 	bic.w	r2, r2, #917504	; 0xe0000
 801567e:	4313      	orrs	r3, r2
 8015680:	600b      	str	r3, [r1, #0]
 8015682:	2001      	movs	r0, #1
 8015684:	e6df      	b.n	8015446 <enet_init+0x9a>
 8015686:	bf00      	nop
 8015688:	40028000 	andmi	r8, r2, r0
 801568c:	20013e10 	andcs	r3, r1, r0, lsl lr
 8015690:	40029000 	andmi	r9, r2, r0
 8015694:	fdde3fe7 	ldc2l	15, cr3, [lr, #924]	; 0x39c

08015698 <enet_txfifo_flush>:
 8015698:	4b06      	ldr	r3, [pc, #24]	; (80156b4 <enet_txfifo_flush+0x1c>)
 801569a:	4807      	ldr	r0, [pc, #28]	; (80156b8 <enet_txfifo_flush+0x20>)
 801569c:	699a      	ldr	r2, [r3, #24]
 801569e:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 80156a2:	619a      	str	r2, [r3, #24]
 80156a4:	699a      	ldr	r2, [r3, #24]
 80156a6:	02d2      	lsls	r2, r2, #11
 80156a8:	d502      	bpl.n	80156b0 <enet_txfifo_flush+0x18>
 80156aa:	3801      	subs	r0, #1
 80156ac:	d1fa      	bne.n	80156a4 <enet_txfifo_flush+0xc>
 80156ae:	4770      	bx	lr
 80156b0:	2001      	movs	r0, #1
 80156b2:	4770      	bx	lr
 80156b4:	40029000 	andmi	r9, r2, r0
 80156b8:	0004ffff 	strdeq	pc, [r4], -pc	; <UNPREDICTABLE>

080156bc <enet_tx_enable>:
 80156bc:	4a06      	ldr	r2, [pc, #24]	; (80156d8 <enet_tx_enable+0x1c>)
 80156be:	b508      	push	{r3, lr}
 80156c0:	6813      	ldr	r3, [r2, #0]
 80156c2:	f043 0308 	orr.w	r3, r3, #8
 80156c6:	6013      	str	r3, [r2, #0]
 80156c8:	f7ff ffe6 	bl	8015698 <enet_txfifo_flush>
 80156cc:	4a03      	ldr	r2, [pc, #12]	; (80156dc <enet_tx_enable+0x20>)
 80156ce:	6993      	ldr	r3, [r2, #24]
 80156d0:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80156d4:	6193      	str	r3, [r2, #24]
 80156d6:	bd08      	pop	{r3, pc}
 80156d8:	40028000 	andmi	r8, r2, r0
 80156dc:	40029000 	andmi	r9, r2, r0

080156e0 <enet_enable>:
 80156e0:	b508      	push	{r3, lr}
 80156e2:	f7ff ffeb 	bl	80156bc <enet_tx_enable>
 80156e6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80156ea:	f7ff bdc9 	b.w	8015280 <enet_rx_enable>

080156ee <enet_desc_information_get>:
 80156ee:	2905      	cmp	r1, #5
 80156f0:	d817      	bhi.n	8015722 <enet_desc_information_get+0x34>
 80156f2:	e8df f001 	tbb	[pc, r1]
 80156f6:	03091012 	movweq	r1, #36882	; 0x9012
 80156fa:	68401007 	stmdavs	r0, {r0, r1, r2, ip}^
 80156fe:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8015702:	4770      	bx	lr
 8015704:	88c0      	ldrh	r0, [r0, #6]
 8015706:	e7fa      	b.n	80156fe <enet_desc_information_get+0x10>
 8015708:	8840      	ldrh	r0, [r0, #2]
 801570a:	f3c0 000d 	ubfx	r0, r0, #0, #14
 801570e:	2804      	cmp	r0, #4
 8015710:	d90a      	bls.n	8015728 <enet_desc_information_get+0x3a>
 8015712:	3804      	subs	r0, #4
 8015714:	4770      	bx	lr
 8015716:	6880      	ldr	r0, [r0, #8]
 8015718:	4770      	bx	lr
 801571a:	6800      	ldr	r0, [r0, #0]
 801571c:	f3c0 00c3 	ubfx	r0, r0, #3, #4
 8015720:	4770      	bx	lr
 8015722:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8015726:	4770      	bx	lr
 8015728:	2000      	movs	r0, #0
 801572a:	4770      	bx	lr

0801572c <enet_rxframe_drop>:
 801572c:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8015730:	4814      	ldr	r0, [pc, #80]	; (8015784 <enet_rxframe_drop+0x58>)
 8015732:	b510      	push	{r4, lr}
 8015734:	6802      	ldr	r2, [r0, #0]
 8015736:	4914      	ldr	r1, [pc, #80]	; (8015788 <enet_rxframe_drop+0x5c>)
 8015738:	6854      	ldr	r4, [r2, #4]
 801573a:	6013      	str	r3, [r2, #0]
 801573c:	f414 4f80 	tst.w	r4, #16384	; 0x4000
 8015740:	680b      	ldr	r3, [r1, #0]
 8015742:	d009      	beq.n	8015758 <enet_rxframe_drop+0x2c>
 8015744:	b12b      	cbz	r3, 8015752 <enet_rxframe_drop+0x26>
 8015746:	68da      	ldr	r2, [r3, #12]
 8015748:	6002      	str	r2, [r0, #0]
 801574a:	681a      	ldr	r2, [r3, #0]
 801574c:	b1ba      	cbz	r2, 801577e <enet_rxframe_drop+0x52>
 801574e:	600a      	str	r2, [r1, #0]
 8015750:	bd10      	pop	{r4, pc}
 8015752:	68d3      	ldr	r3, [r2, #12]
 8015754:	6003      	str	r3, [r0, #0]
 8015756:	e7fb      	b.n	8015750 <enet_rxframe_drop+0x24>
 8015758:	f414 4f00 	tst.w	r4, #32768	; 0x8000
 801575c:	4c0b      	ldr	r4, [pc, #44]	; (801578c <enet_rxframe_drop+0x60>)
 801575e:	d006      	beq.n	801576e <enet_rxframe_drop+0x42>
 8015760:	68e2      	ldr	r2, [r4, #12]
 8015762:	6002      	str	r2, [r0, #0]
 8015764:	2b00      	cmp	r3, #0
 8015766:	d0f3      	beq.n	8015750 <enet_rxframe_drop+0x24>
 8015768:	681b      	ldr	r3, [r3, #0]
 801576a:	600b      	str	r3, [r1, #0]
 801576c:	e7f0      	b.n	8015750 <enet_rxframe_drop+0x24>
 801576e:	6824      	ldr	r4, [r4, #0]
 8015770:	3210      	adds	r2, #16
 8015772:	f3c4 0484 	ubfx	r4, r4, #2, #5
 8015776:	4422      	add	r2, r4
 8015778:	6002      	str	r2, [r0, #0]
 801577a:	2b00      	cmp	r3, #0
 801577c:	d0e8      	beq.n	8015750 <enet_rxframe_drop+0x24>
 801577e:	3310      	adds	r3, #16
 8015780:	e7f3      	b.n	801576a <enet_rxframe_drop+0x3e>
 8015782:	bf00      	nop
 8015784:	20013e08 	andcs	r3, r1, r8, lsl #28
 8015788:	20013e00 	andcs	r3, r1, r0, lsl #28
 801578c:	40029000 	andmi	r9, r2, r0

08015790 <enet_rxframe_size_get>:
 8015790:	b508      	push	{r3, lr}
 8015792:	4b0c      	ldr	r3, [pc, #48]	; (80157c4 <enet_rxframe_size_get+0x34>)
 8015794:	681b      	ldr	r3, [r3, #0]
 8015796:	6818      	ldr	r0, [r3, #0]
 8015798:	2800      	cmp	r0, #0
 801579a:	db10      	blt.n	80157be <enet_rxframe_size_get+0x2e>
 801579c:	f400 4303 	and.w	r3, r0, #33536	; 0x8300
 80157a0:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80157a4:	d003      	beq.n	80157ae <enet_rxframe_size_get+0x1e>
 80157a6:	f7ff ffc1 	bl	801572c <enet_rxframe_drop>
 80157aa:	2001      	movs	r0, #1
 80157ac:	bd08      	pop	{r3, pc}
 80157ae:	f000 0321 	and.w	r3, r0, #33	; 0x21
 80157b2:	2b21      	cmp	r3, #33	; 0x21
 80157b4:	d0f7      	beq.n	80157a6 <enet_rxframe_size_get+0x16>
 80157b6:	f3c0 400d 	ubfx	r0, r0, #16, #14
 80157ba:	3804      	subs	r0, #4
 80157bc:	e7f6      	b.n	80157ac <enet_rxframe_size_get+0x1c>
 80157be:	2000      	movs	r0, #0
 80157c0:	e7f4      	b.n	80157ac <enet_rxframe_size_get+0x1c>
 80157c2:	bf00      	nop
 80157c4:	20013e08 	andcs	r3, r1, r8, lsl #28

080157c8 <enet_initpara_reset>:
 80157c8:	2200      	movs	r2, #0
 80157ca:	4b08      	ldr	r3, [pc, #32]	; (80157ec <enet_initpara_reset+0x24>)
 80157cc:	e9c3 2200 	strd	r2, r2, [r3]
 80157d0:	e9c3 2202 	strd	r2, r2, [r3, #8]
 80157d4:	e9c3 2204 	strd	r2, r2, [r3, #16]
 80157d8:	e9c3 2206 	strd	r2, r2, [r3, #24]
 80157dc:	e9c3 2208 	strd	r2, r2, [r3, #32]
 80157e0:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 80157e4:	e9c3 220c 	strd	r2, r2, [r3, #48]	; 0x30
 80157e8:	639a      	str	r2, [r3, #56]	; 0x38
 80157ea:	4770      	bx	lr
 80157ec:	20013e10 	andcs	r3, r1, r0, lsl lr

080157f0 <enet_deinit>:
 80157f0:	b508      	push	{r3, lr}
 80157f2:	f640 200e 	movw	r0, #2574	; 0xa0e
 80157f6:	f7fe fbc8 	bl	8013f8a <rcu_periph_reset_enable>
 80157fa:	f640 200e 	movw	r0, #2574	; 0xa0e
 80157fe:	f7fe fbc6 	bl	8013f8e <rcu_periph_reset_disable>
 8015802:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8015806:	f7ff bfdf 	b.w	80157c8 <enet_initpara_reset>
	...

0801580c <i2c_clock_config>:
 801580c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801580e:	4605      	mov	r5, r0
 8015810:	2002      	movs	r0, #2
 8015812:	460c      	mov	r4, r1
 8015814:	4617      	mov	r7, r2
 8015816:	f7fe fc89 	bl	801412c <rcu_clock_freq_get>
 801581a:	4927      	ldr	r1, [pc, #156]	; (80158b8 <i2c_clock_config+0xac>)
 801581c:	4a27      	ldr	r2, [pc, #156]	; (80158bc <i2c_clock_config+0xb0>)
 801581e:	fbb0 f1f1 	udiv	r1, r0, r1
 8015822:	4290      	cmp	r0, r2
 8015824:	bf94      	ite	ls
 8015826:	460b      	movls	r3, r1
 8015828:	233f      	movhi	r3, #63	; 0x3f
 801582a:	686e      	ldr	r6, [r5, #4]
 801582c:	4a24      	ldr	r2, [pc, #144]	; (80158c0 <i2c_clock_config+0xb4>)
 801582e:	f026 063f 	bic.w	r6, r6, #63	; 0x3f
 8015832:	431e      	orrs	r6, r3
 8015834:	4294      	cmp	r4, r2
 8015836:	606e      	str	r6, [r5, #4]
 8015838:	d816      	bhi.n	8015868 <i2c_clock_config+0x5c>
 801583a:	3101      	adds	r1, #1
 801583c:	293e      	cmp	r1, #62	; 0x3e
 801583e:	d90d      	bls.n	801585c <i2c_clock_config+0x50>
 8015840:	233f      	movs	r3, #63	; 0x3f
 8015842:	622b      	str	r3, [r5, #32]
 8015844:	0064      	lsls	r4, r4, #1
 8015846:	fbb0 f4f4 	udiv	r4, r0, r4
 801584a:	2c04      	cmp	r4, #4
 801584c:	bf38      	it	cc
 801584e:	2404      	movcc	r4, #4
 8015850:	69e8      	ldr	r0, [r5, #28]
 8015852:	f3c4 040b 	ubfx	r4, r4, #0, #12
 8015856:	4304      	orrs	r4, r0
 8015858:	61ec      	str	r4, [r5, #28]
 801585a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801585c:	2902      	cmp	r1, #2
 801585e:	d801      	bhi.n	8015864 <i2c_clock_config+0x58>
 8015860:	2302      	movs	r3, #2
 8015862:	e7ee      	b.n	8015842 <i2c_clock_config+0x36>
 8015864:	6229      	str	r1, [r5, #32]
 8015866:	e7ed      	b.n	8015844 <i2c_clock_config+0x38>
 8015868:	4a16      	ldr	r2, [pc, #88]	; (80158c4 <i2c_clock_config+0xb8>)
 801586a:	4294      	cmp	r4, r2
 801586c:	d8f5      	bhi.n	801585a <i2c_clock_config+0x4e>
 801586e:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8015872:	4353      	muls	r3, r2
 8015874:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8015878:	fbb3 f3f2 	udiv	r3, r3, r2
 801587c:	3301      	adds	r3, #1
 801587e:	622b      	str	r3, [r5, #32]
 8015880:	b997      	cbnz	r7, 80158a8 <i2c_clock_config+0x9c>
 8015882:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8015886:	fbb0 f4f4 	udiv	r4, r0, r4
 801588a:	69eb      	ldr	r3, [r5, #28]
 801588c:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8015890:	61eb      	str	r3, [r5, #28]
 8015892:	f3c4 030b 	ubfx	r3, r4, #0, #12
 8015896:	b90b      	cbnz	r3, 801589c <i2c_clock_config+0x90>
 8015898:	f044 0401 	orr.w	r4, r4, #1
 801589c:	69eb      	ldr	r3, [r5, #28]
 801589e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80158a2:	61eb      	str	r3, [r5, #28]
 80158a4:	69e8      	ldr	r0, [r5, #28]
 80158a6:	e7d6      	b.n	8015856 <i2c_clock_config+0x4a>
 80158a8:	2119      	movs	r1, #25
 80158aa:	434c      	muls	r4, r1
 80158ac:	69eb      	ldr	r3, [r5, #28]
 80158ae:	fbb0 f4f4 	udiv	r4, r0, r4
 80158b2:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80158b6:	e7eb      	b.n	8015890 <i2c_clock_config+0x84>
 80158b8:	000f4240 	andeq	r4, pc, r0, asr #4
 80158bc:	03c14dbf 	biceq	r4, r1, #12224	; 0x2fc0
 80158c0:	000186a0 	andeq	r8, r1, r0, lsr #13
 80158c4:	00061a80 	andeq	r1, r6, r0, lsl #21

080158c8 <i2c_ack_config>:
 80158c8:	6803      	ldr	r3, [r0, #0]
 80158ca:	2901      	cmp	r1, #1
 80158cc:	bf0c      	ite	eq
 80158ce:	f443 6380 	orreq.w	r3, r3, #1024	; 0x400
 80158d2:	f423 6380 	bicne.w	r3, r3, #1024	; 0x400
 80158d6:	6003      	str	r3, [r0, #0]
 80158d8:	4770      	bx	lr

080158da <i2c_ackpos_config>:
 80158da:	6803      	ldr	r3, [r0, #0]
 80158dc:	b919      	cbnz	r1, 80158e6 <i2c_ackpos_config+0xc>
 80158de:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 80158e2:	6003      	str	r3, [r0, #0]
 80158e4:	4770      	bx	lr
 80158e6:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80158ea:	e7fa      	b.n	80158e2 <i2c_ackpos_config+0x8>

080158ec <i2c_master_addressing>:
 80158ec:	3202      	adds	r2, #2
 80158ee:	bf0c      	ite	eq
 80158f0:	f021 0101 	biceq.w	r1, r1, #1
 80158f4:	f041 0101 	orrne.w	r1, r1, #1
 80158f8:	6101      	str	r1, [r0, #16]
 80158fa:	4770      	bx	lr

080158fc <i2c_enable>:
 80158fc:	6803      	ldr	r3, [r0, #0]
 80158fe:	f043 0301 	orr.w	r3, r3, #1
 8015902:	6003      	str	r3, [r0, #0]
 8015904:	4770      	bx	lr

08015906 <i2c_start_on_bus>:
 8015906:	6803      	ldr	r3, [r0, #0]
 8015908:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 801590c:	6003      	str	r3, [r0, #0]
 801590e:	4770      	bx	lr

08015910 <i2c_stop_on_bus>:
 8015910:	6803      	ldr	r3, [r0, #0]
 8015912:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8015916:	6003      	str	r3, [r0, #0]
 8015918:	4770      	bx	lr

0801591a <i2c_data_transmit>:
 801591a:	6101      	str	r1, [r0, #16]
 801591c:	4770      	bx	lr

0801591e <i2c_data_receive>:
 801591e:	6900      	ldr	r0, [r0, #16]
 8015920:	b2c0      	uxtb	r0, r0
 8015922:	4770      	bx	lr

08015924 <i2c_flag_get>:
 8015924:	098b      	lsrs	r3, r1, #6
 8015926:	5818      	ldr	r0, [r3, r0]
 8015928:	f001 011f 	and.w	r1, r1, #31
 801592c:	40c8      	lsrs	r0, r1
 801592e:	f000 0001 	and.w	r0, r0, #1
 8015932:	4770      	bx	lr

08015934 <i2c_flag_clear>:
 8015934:	f240 5301 	movw	r3, #1281	; 0x501
 8015938:	4299      	cmp	r1, r3
 801593a:	b510      	push	{r4, lr}
 801593c:	d102      	bne.n	8015944 <i2c_flag_clear+0x10>
 801593e:	6943      	ldr	r3, [r0, #20]
 8015940:	6983      	ldr	r3, [r0, #24]
 8015942:	bd10      	pop	{r4, pc}
 8015944:	2201      	movs	r2, #1
 8015946:	098c      	lsrs	r4, r1, #6
 8015948:	5823      	ldr	r3, [r4, r0]
 801594a:	f001 011f 	and.w	r1, r1, #31
 801594e:	fa02 f101 	lsl.w	r1, r2, r1
 8015952:	ea23 0101 	bic.w	r1, r3, r1
 8015956:	5021      	str	r1, [r4, r0]
 8015958:	e7f3      	b.n	8015942 <i2c_flag_clear+0xe>
	...

Disassembly of section .rodata:

0801595c <vtable for DisplayHandler-0xf8>:
 801595c:	00000003 	andeq	r0, r0, r3
 8015960:	000000aa 	andeq	r0, r0, sl, lsr #1
 8015964:	00000006 	andeq	r0, r0, r6
 8015968:	00000000 	andeq	r0, r0, r0
 801596c:	01ff0000 	mvnseq	r0, r0
 8015970:	00000001 	andeq	r0, r0, r1
 8015974:	00000001 	andeq	r0, r0, r1
 8015978:	00000001 	andeq	r0, r0, r1
	...
 8015984:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 8015988:	09080706 	stmdbeq	r8, {r1, r2, r8, r9, sl}
 801598c:	00000000 	andeq	r0, r0, r0
 8015990:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 8015994:	343a3431 	ldrtcc	r3, [sl], #-1073	; 0xfffffbcf
 8015998:	35333a38 	ldrcc	r3, [r3, #-2616]!	; 0xfffff5c8
 801599c:	6e614a00 	vmulvs.f32	s9, s2, s0
 80159a0:	20373220 	eorscs	r3, r7, r0, lsr #4
 80159a4:	32323032 	eorscc	r3, r2, #50	; 0x32
 80159a8:	68744500 	ldmdavs	r4!, {r8, sl, lr}^
 80159ac:	656e7265 	strbvs	r7, [lr, #-613]!	; 0xfffffd9b
 80159b0:	41732074 	cmnmi	r3, r4, ror r0
 80159b4:	45204e43 	strmi	r4, [r0, #-3651]!	; 0xfffff1bd
 80159b8:	31332e31 	teqcc	r3, r1, lsr lr
 80159bc:	335b1b20 	cmpcc	fp, #32, 22	; 0x8000
 80159c0:	69506d32 	ldmdbvs	r0, {r1, r4, r5, r8, sl, fp, sp, lr}^
 80159c4:	206c6578 	rsbcs	r6, ip, r8, ror r5
 80159c8:	746e6f63 	strbtvc	r6, [lr], #-3939	; 0xfffff09d
 80159cc:	6c6c6f72 	stclvs	15, cr6, [ip], #-456	; 0xfffffe38
 80159d0:	7b207265 	blvc	883236c <__exidx_end+0x81a3c0>
 80159d4:	34207838 	strtcc	r7, [r0], #-2104	; 0xfffff7c8
 80159d8:	696e5520 	stmdbvs	lr!, {r5, r8, sl, ip, lr}^
 80159dc:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 80159e0:	1b7d7365 	blne	9f7277c <__exidx_end+0x1f5a7d0>
 80159e4:	6d37335b 	ldcvs	3, cr3, [r7, #-364]!	; 0xfffffe94
 80159e8:	635f2e00 	cmpvs	pc, #0, 28
 80159ec:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 80159f0:	5f2e0067 	svcpl	0x002e0067
 80159f4:	70747468 	rsbsvc	r7, r4, r8, ror #8
 80159f8:	646f6e00 	strbtvs	r6, [pc], #-3584	; 8015a00 <_etext+0xa4>
 80159fc:	41733d65 	cmnmi	r3, r5, ror #26
 8015a00:	45204e43 	strmi	r4, [r0, #-3651]!	; 0xfffff1bd
 8015a04:	31332e31 	teqcc	r3, r1, lsr lr
 8015a08:	78695020 	stmdavc	r9!, {r5, ip, lr}^
 8015a0c:	73006c65 	movwvc	r6, #3173	; 0xc65
 8015a10:	204e4341 	subcs	r4, lr, r1, asr #6
 8015a14:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
 8015a18:	6425206c 	strtvs	r2, [r5], #-108	; 0xffffff94
 8015a1c:	3a73252d 	bcc	9cdeed8 <__exidx_end+0x1cc6f2c>
 8015a20:	47006425 	strmi	r6, [r0, -r5, lsr #8]
 8015a24:	44616769 	strbtmi	r6, [r1], #-1897	; 0xfffff897
 8015a28:	63697665 	cmnvs	r9, #105906176	; 0x6500000
 8015a2c:	69502065 	ldmdbvs	r0, {r0, r2, r5, r6, sp}^
 8015a30:	006c6578 	rsbeq	r6, ip, r8, ror r5
 8015a34:	4e434173 	mcrmi	1, 2, r4, cr3, cr3, {3}
 8015a38:	78695020 	stmdavc	r9!, {r5, ip, lr}^
 8015a3c:	38206c65 	stmdacc	r0!, {r0, r2, r5, r6, sl, fp, sp, lr}
 8015a40:	7864253a 	stmdavc	r4!, {r1, r3, r4, r5, r8, sl, sp}^
 8015a44:	25006425 	strcs	r6, [r0, #-1061]	; 0xfffffbdb
 8015a48:	73252d64 			; <UNDEFINED> instruction: 0x73252d64
 8015a4c:	2064253a 	rsbcs	r2, r4, sl, lsr r5
 8015a50:	00642547 	rsbeq	r2, r4, r7, asr #10

08015a54 <vtable for DisplayHandler>:
	...
 8015a5c:	08007f41 	stmdaeq	r0, {r0, r6, r8, r9, sl, fp, ip, sp, lr}
 8015a60:	08007fb1 	stmdaeq	r0, {r0, r4, r5, r7, r8, r9, sl, fp, ip, sp, lr}
 8015a64:	08008035 	stmdaeq	r0, {r0, r2, r4, r5, pc}

08015a68 <vtable for E131Reboot>:
	...
 8015a70:	08007f43 	stmdaeq	r0, {r0, r1, r6, r8, r9, sl, fp, ip, sp, lr}
 8015a74:	08007fa5 	stmdaeq	r0, {r0, r2, r5, r7, r8, r9, sl, fp, ip, sp, lr}
 8015a78:	08007fe1 	stmdaeq	r0, {r0, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr}

08015a7c <vtable for PixelDmxStartStop>:
	...
 8015a84:	08007f45 	stmdaeq	r0, {r0, r2, r6, r8, r9, sl, fp, ip, sp, lr}
 8015a88:	08007fbd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, r8, r9, sl, fp, ip, sp, lr}
 8015a8c:	08007f49 	stmdaeq	r0, {r0, r3, r6, r8, r9, sl, fp, ip, sp, lr}
 8015a90:	08007f59 	stmdaeq	r0, {r0, r3, r4, r6, r8, r9, sl, fp, ip, sp, lr}

08015a94 <vtable for RDMNetDevice>:
	...
 8015a9c:	08008085 	stmdaeq	r0, {r0, r2, r7, pc}
 8015aa0:	080080ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, pc}
 8015aa4:	0800be7f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r6, r9, sl, fp, ip, sp, pc}
 8015aa8:	0800be81 	stmdaeq	r0, {r0, r7, r9, sl, fp, ip, sp, pc}
 8015aac:	08007f69 	stmdaeq	r0, {r0, r3, r5, r6, r8, r9, sl, fp, ip, sp, lr}
 8015ab0:	08007f7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r8, r9, sl, fp, ip, sp, lr}
 8015ab4:	08008005 	stmdaeq	r0, {r0, r2, pc}
 8015ab8:	ffffff30 			; <UNDEFINED> instruction: 0xffffff30
 8015abc:	00000000 	andeq	r0, r0, r0
 8015ac0:	080080a5 	stmdaeq	r0, {r0, r2, r5, r7, pc}
 8015ac4:	080080bf 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r7, pc}
 8015ac8:	08007f75 	stmdaeq	r0, {r0, r2, r4, r5, r6, r8, r9, sl, fp, ip, sp, lr}
 8015acc:	08007f8d 	stmdaeq	r0, {r0, r2, r3, r7, r8, r9, sl, fp, ip, sp, lr}
 8015ad0:	08008019 	stmdaeq	r0, {r0, r3, r4, pc}

08015ad4 <vtable for FactoryDefaults>:
	...
 8015adc:	08007f95 	stmdaeq	r0, {r0, r2, r4, r7, r8, r9, sl, fp, ip, sp, lr}
 8015ae0:	08007fc9 	stmdaeq	r0, {r0, r3, r6, r7, r8, r9, sl, fp, ip, sp, lr}
 8015ae4:	080081e9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r8, pc}

08015ae8 <vtable for Reboot>:
	...
 8015af0:	08007f97 	stmdaeq	r0, {r0, r1, r2, r4, r7, r8, r9, sl, fp, ip, sp, lr}
 8015af4:	08007f99 	stmdaeq	r0, {r0, r3, r4, r7, r8, r9, sl, fp, ip, sp, lr}
 8015af8:	08007fd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, sl, fp, ip, sp, lr}

08015afc <CSWTCH.99>:
 8015afc:	444e4f4f 	strbmi	r4, [lr], #-3919	; 0xfffff0b1
 8015b00:	 	eorcc	r3, lr, r6, asr #2

08015b01 <SOFTWARE_VERSION>:
 8015b01:	00302e31 	eorseq	r2, r0, r1, lsr lr

08015b05 <SOFTWARE_VERSION>:
 8015b05:	00302e31 	eorseq	r2, r0, r1, lsr lr
 8015b09:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8015b0d:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8015b11:	2c64252e 	cfstr64cs	mvdx2, [r4], #-184	; 0xffffff48
 8015b15:	252c7325 	strcs	r7, [ip, #-805]!	; 0xfffffcdb
 8015b19:	64252c73 	strtvs	r2, [r5], #-3187	; 0xfffff38d
 8015b1d:	0a73252c 	beq	9cdefd5 <__exidx_end+0x1cc7029>
 8015b21:	2e642500 	cdpcs	5, 6, cr2, cr4, cr0, {0}
 8015b25:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8015b29:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8015b2d:	2c73252c 	cfldr64cs	mvdx2, [r3], #-176	; 0xffffff50
 8015b31:	252c7325 	strcs	r7, [ip, #-805]!	; 0xfffffcdb
 8015b35:	4f000a64 	svcmi	0x00000a64
 8015b39:	664f006e 	strbvs	r0, [pc], -lr, rrx
 8015b3d:	69640066 	stmdbvs	r4!, {r1, r2, r5, r6}^
 8015b41:	616c7073 	smcvs	50947	; 0xc703
 8015b45:	73253a79 			; <UNDEFINED> instruction: 0x73253a79
 8015b49:	6674000a 	ldrbtvs	r0, [r4], -sl
 8015b4d:	253a7074 	ldrcs	r7, [sl, #-116]!	; 0xffffff8c
 8015b51:	76000a73 			; <UNDEFINED> instruction: 0x76000a73
 8015b55:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8015b59:	253a6e6f 	ldrcs	r6, [sl, #-3695]!	; 0xfffff191
 8015b5d:	70750073 	rsbsvc	r0, r5, r3, ror r0
 8015b61:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 8015b65:	7525203a 	strvc	r2, [r5, #-58]!	; 0xffffffc6
 8015b69:	45000a73 	strmi	r0, [r0, #-2675]	; 0xfffff58d
 8015b6d:	524f5252 	subpl	r5, pc, #536870917	; 0x20000005
 8015b71:	65673f23 	strbvs	r3, [r7, #-3875]!	; 0xfffff0dd
 8015b75:	74000a74 	strvc	r0, [r0], #-2676	; 0xfffff58c
 8015b79:	23707466 	cmncs	r0, #1711276032	; 0x66000000
 8015b7d:	73696400 	cmnvc	r9, #0, 8
 8015b81:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8015b85:	52450023 	subpl	r0, r5, #35	; 0x23
 8015b89:	23524f52 	cmpcs	r2, #328	; 0x148
 8015b8d:	45000a21 	strmi	r0, [r0, #-2593]	; 0xfffff5df
 8015b91:	524f5252 	subpl	r5, pc, #536870917	; 0x20000005
 8015b95:	000a3f23 	andeq	r3, sl, r3, lsr #30
 8015b99:	6f626572 	svcvs	0x00626572
 8015b9d:	2323746f 			; <UNDEFINED> instruction: 0x2323746f
 8015ba1:	73696c00 	cmnvc	r9, #0, 24
 8015ba5:	6c002374 	stcvs	3, cr2, [r0], {116}	; 0x74
 8015ba9:	23747369 	cmncs	r4, #-1543503871	; 0xa4000001
 8015bad:	7075002a 	rsbsvc	r0, r5, sl, lsr #32
 8015bb1:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 8015bb5:	65760023 	ldrbvs	r0, [r6, #-35]!	; 0xffffffdd
 8015bb9:	6f697372 	svcvs	0x00697372
 8015bbd:	6700236e 	strvs	r2, [r0, -lr, ror #6]
 8015bc1:	00237465 	eoreq	r7, r3, r5, ror #8
 8015bc5:	74636166 	strbtvc	r6, [r3], #-358	; 0xfffffe9a
 8015bc9:	2379726f 	cmncs	r9, #-268435450	; 0xf0000006
 8015bcd:	 	subvc	r0, r1, #35	; 0x23

08015bcf <s_Node>:
 8015bcf:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 8015bd3:	0074654e 	rsbseq	r6, r4, lr, asr #10
	...
 8015bdf:	41730000 	cmnmi	r3, r0
 8015be3:	45204e43 	strmi	r4, [r0, #-3651]!	; 0xfffff1bd
 8015be7:	31332e31 	teqcc	r3, r1, lsr lr
	...
 8015bf3:	2043534f 	subcs	r5, r3, pc, asr #6
 8015bf7:	76726553 			; <UNDEFINED> instruction: 0x76726553
 8015bfb:	00007265 	andeq	r7, r0, r5, ror #4
 8015bff:	00000000 	andeq	r0, r0, r0
 8015c03:	544c0000 	strbpl	r0, [ip], #-0
 8015c07:	00000043 	andeq	r0, r0, r3, asr #32
	...
 8015c17:	2043534f 	subcs	r5, r3, pc, asr #6
 8015c1b:	65696c43 	strbvs	r6, [r9, #-3139]!	; 0xfffff3bd
 8015c1f:	0000746e 	andeq	r7, r0, lr, ror #8
 8015c23:	00000000 	andeq	r0, r0, r0
 8015c27:	44520000 	ldrbmi	r0, [r2], #-0
 8015c2b:	74654e4d 	strbtvc	r4, [r5], #-3661	; 0xfffff1b3
 8015c2f:	524c4c20 	subpl	r4, ip, #32, 24	; 0x2000
 8015c33:	6e4f2050 	mcrvs	0, 2, r2, cr15, cr0, {2}
 8015c37:	0000796c 	andeq	r7, r0, ip, ror #18
 8015c3b:	776f6853 			; <UNDEFINED> instruction: 0x776f6853
 8015c3f:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
	...
 8015c4b:	494d0000 	stmdbmi	sp, {}^	; <UNPREDICTABLE>
 8015c4f:	00004944 	andeq	r4, r0, r4, asr #18
	...
 8015c5f:	00504444 	subseq	r4, r0, r4, asr #8
	...

08015c71 <s_Output>:
 8015c71:	00584d44 	subseq	r4, r8, r4, asr #26
	...
 8015c7d:	004d4452 	subeq	r4, sp, r2, asr r4
	...
 8015c89:	696e6f4d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
 8015c8d:	00726f74 	rsbseq	r6, r2, r4, ror pc
 8015c91:	00000000 	andeq	r0, r0, r0
 8015c95:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
 8015c99:	0000006c 	andeq	r0, r0, ip, rrx
 8015c9d:	00000000 	andeq	r0, r0, r0
 8015ca1:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
 8015ca5:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
 8015ca9:	00000000 	andeq	r0, r0, r0
 8015cad:	0043534f 	subeq	r5, r3, pc, asr #6
	...
 8015cb9:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 8015cbd:	00006769 	andeq	r6, r0, r9, ror #14
 8015cc1:	00000000 	andeq	r0, r0, r0
 8015cc5:	70657453 	rsbvc	r7, r5, r3, asr r4
 8015cc9:	00726570 	rsbseq	r6, r2, r0, ror r5
 8015ccd:	00000000 	andeq	r0, r0, r0
 8015cd1:	79616c50 	stmdbvc	r1!, {r4, r6, sl, fp, sp, lr}^
 8015cd5:	00007265 	andeq	r7, r0, r5, ror #4
 8015cd9:	00000000 	andeq	r0, r0, r0
 8015cdd:	2d747241 	lfmcs	f7, 2, [r4, #-260]!	; 0xfffffefc
 8015ce1:	0074654e 	rsbseq	r6, r4, lr, asr #10
 8015ce5:	00000000 	andeq	r0, r0, r0
 8015ce9:	69726553 	ldmdbvs	r2!, {r0, r1, r4, r6, r8, sl, sp, lr}^
 8015ced:	00006c61 	andeq	r6, r0, r1, ror #24
 8015cf1:	00000000 	andeq	r0, r0, r0
 8015cf5:	20424752 	subcs	r4, r2, r2, asr r7
 8015cf9:	656e6150 	strbvs	r6, [lr, #-336]!	; 0xfffffeb0
 8015cfd:	0000006c 	andeq	r0, r0, ip, rrx
 8015d01:	 	mrscs	r0, (UNDEF: 0)

08015d04 <RemoteConfig::s_GET>:
 8015d04:	08009a21 	stmdaeq	r0, {r0, r5, r9, fp, ip, pc}
 8015d08:	00000000 	andeq	r0, r0, r0
 8015d0c:	08015b99 	stmdaeq	r1, {r0, r3, r4, r7, r8, r9, fp, ip, lr}
 8015d10:	00000008 	andeq	r0, r0, r8
 8015d14:	08008f4d 	stmdaeq	r0, {r0, r2, r3, r6, r8, r9, sl, fp, pc}
 8015d18:	00000000 	andeq	r0, r0, r0
 8015d1c:	08015ba2 	stmdaeq	r1, {r1, r5, r7, r8, r9, fp, ip, lr}
 8015d20:	00000005 	andeq	r0, r0, r5
 8015d24:	08008f4d 	stmdaeq	r0, {r0, r2, r3, r6, r8, r9, sl, fp, pc}
 8015d28:	00000000 	andeq	r0, r0, r0
 8015d2c:	08015ba8 	stmdaeq	r1, {r3, r5, r7, r8, r9, fp, ip, lr}
 8015d30:	00000006 	andeq	r0, r0, r6
 8015d34:	08009131 	stmdaeq	r0, {r0, r4, r5, r8, ip, pc}
 8015d38:	00000000 	andeq	r0, r0, r0
 8015d3c:	08015baf 	stmdaeq	r1, {r0, r1, r2, r3, r5, r7, r8, r9, fp, ip, lr}
 8015d40:	00000007 	andeq	r0, r0, r7
 8015d44:	080090f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, ip, pc}
 8015d48:	00000000 	andeq	r0, r0, r0
 8015d4c:	08015bb7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r7, r8, r9, fp, ip, lr}
 8015d50:	00000008 	andeq	r0, r0, r8
 8015d54:	0800902d 	stmdaeq	r0, {r0, r2, r3, r5, ip, pc}
 8015d58:	00000000 	andeq	r0, r0, r0
 8015d5c:	08015b7e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r8, r9, fp, ip, lr}
 8015d60:	00000008 	andeq	r0, r0, r8
 8015d64:	08009389 	stmdaeq	r0, {r0, r3, r7, r8, r9, ip, pc}
 8015d68:	00000000 	andeq	r0, r0, r0
 8015d6c:	08015bc0 	stmdaeq	r1, {r6, r7, r8, r9, fp, ip, lr}
 8015d70:	00010004 	andeq	r0, r1, r4
 8015d74:	080090a1 	stmdaeq	r0, {r0, r5, r7, ip, pc}
 8015d78:	00000000 	andeq	r0, r0, r0
 8015d7c:	08015b78 	stmdaeq	r1, {r3, r4, r5, r6, r8, r9, fp, ip, lr}
 8015d80:	00000005 	andeq	r0, r0, r5
 8015d84:	08009711 	stmdaeq	r0, {r0, r4, r8, r9, sl, ip, pc}
 8015d88:	00000000 	andeq	r0, r0, r0
 8015d8c:	08015bc5 	stmdaeq	r1, {r0, r2, r6, r7, r8, r9, fp, ip, lr}
 8015d90:	00000009 	andeq	r0, r0, r9

08015d94 <RemoteConfig::s_SET>:
 8015d94:	08009081 	stmdaeq	r0, {r0, r7, ip, pc}
 8015d98:	00000000 	andeq	r0, r0, r0
 8015d9c:	08015b78 	stmdaeq	r1, {r3, r4, r5, r6, r8, r9, fp, ip, lr}
 8015da0:	00010005 	andeq	r0, r1, r5
 8015da4:	0800917d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r8, ip, pc}
 8015da8:	00000000 	andeq	r0, r0, r0
 8015dac:	08015b7e 	stmdaeq	r1, {r1, r2, r3, r4, r5, r6, r8, r9, fp, ip, lr}
 8015db0:	00010008 	andeq	r0, r1, r8
 8015db4:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 8015db8:	2c64253a 	cfstr64cs	mvdx2, [r4], #-232	; 0xffffff18
 8015dbc:	73252300 			; <UNDEFINED> instruction: 0x73252300
 8015dc0:	0a64253d 	beq	991f2bc <__exidx_end+0x1907310>
 8015dc4:	73252200 			; <UNDEFINED> instruction: 0x73252200
 8015dc8:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8015dcc:	002c2273 	eoreq	r2, ip, r3, ror r2
 8015dd0:	3d732523 	cfldr64cc	mvdx2, [r3, #-140]!	; 0xffffff74
 8015dd4:	000a7325 	andeq	r7, sl, r5, lsr #6
 8015dd8:	6f626552 	svcvs	0x00626552
 8015ddc:	6e69746f 	cdpvs	4, 6, cr7, cr9, cr15, {3}
 8015de0:	2e2e2067 	cdpcs	0, 2, cr2, cr14, cr7, {3}
 8015de4:	52000a2e 	andpl	r0, r0, #188416	; 0x2e000
 8015de8:	6f6f6265 	svcvs	0x006f6265
 8015dec:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 8015df0:	2e2e2e20 	cdpcs	14, 2, cr2, cr14, cr0, {1}
 8015df4:	6f637200 	svcvs	0x00637200
 8015df8:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 8015dfc:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8015e00:	74656e00 	strbtvc	r6, [r5], #-3584	; 0xfffff200
 8015e04:	6b726f77 	blvs	9cb1be8 <__exidx_end+0x1c99c3c>
 8015e08:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8015e0c:	73696400 	cmnvc	r9, #0, 8
 8015e10:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8015e14:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 8015e18:	33316500 	teqcc	r1, #0, 10
 8015e1c:	78742e31 	ldmdavc	r4!, {r0, r4, r5, r9, sl, fp, sp}^
 8015e20:	65640074 	strbvs	r0, [r4, #-116]!	; 0xffffff8c
 8015e24:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
 8015e28:	78742e73 	ldmdavc	r4!, {r0, r1, r4, r5, r6, r9, sl, fp, sp}^
 8015e2c:	00000074 	andeq	r0, r0, r4, ror r0

08015e30 <RemoteConfig::s_TXT>:
 8015e30:	08009391 	stmdaeq	r0, {r0, r4, r7, r8, r9, ip, pc}
 8015e34:	00000000 	andeq	r0, r0, r0
 8015e38:	08009641 	stmdaeq	r0, {r0, r6, r9, sl, ip, pc}
 8015e3c:	00000000 	andeq	r0, r0, r0
 8015e40:	08015df5 	stmdaeq	r1, {r0, r2, r4, r5, r6, r7, r8, sl, fp, ip, lr}
 8015e44:	0000000b 	andeq	r0, r0, fp
 8015e48:	0000000c 	andeq	r0, r0, ip
 8015e4c:	080093bd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, r8, r9, ip, pc}
 8015e50:	00000000 	andeq	r0, r0, r0
 8015e54:	08009671 	stmdaeq	r0, {r0, r4, r5, r6, r9, sl, ip, pc}
 8015e58:	00000000 	andeq	r0, r0, r0
 8015e5c:	08015e01 	stmdaeq	r1, {r0, r9, sl, fp, ip, lr}
 8015e60:	0000000b 	andeq	r0, r0, fp
 8015e64:	00000000 	andeq	r0, r0, r0
 8015e68:	08009441 	stmdaeq	r0, {r0, r6, sl, ip, pc}
 8015e6c:	00000000 	andeq	r0, r0, r0
 8015e70:	080096e9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r9, sl, ip, pc}
 8015e74:	00000000 	andeq	r0, r0, r0
 8015e78:	08015e0d 	stmdaeq	r1, {r0, r2, r3, r9, sl, fp, ip, lr}
 8015e7c:	0000000b 	andeq	r0, r0, fp
 8015e80:	0000000f 	andeq	r0, r0, pc
 8015e84:	080093e9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r8, r9, ip, pc}
 8015e88:	00000000 	andeq	r0, r0, r0
 8015e8c:	08009699 	stmdaeq	r0, {r0, r3, r4, r7, r9, sl, ip, pc}
 8015e90:	00000000 	andeq	r0, r0, r0
 8015e94:	08015e19 	stmdaeq	r1, {r0, r3, r4, r9, sl, fp, ip, lr}
 8015e98:	00000008 	andeq	r0, r0, r8
 8015e9c:	00000004 	andeq	r0, r0, r4
 8015ea0:	08009415 	stmdaeq	r0, {r0, r2, r4, sl, ip, pc}
 8015ea4:	00000000 	andeq	r0, r0, r0
 8015ea8:	080096c1 	stmdaeq	r0, {r0, r6, r7, r9, sl, ip, pc}
 8015eac:	00000000 	andeq	r0, r0, r0
 8015eb0:	08015e22 	stmdaeq	r1, {r1, r5, r9, sl, fp, ip, lr}
 8015eb4:	0000000b 	andeq	r0, r0, fp
 8015eb8:	00000003 	andeq	r0, r0, r3
 8015ebc:	45470020 	strbmi	r0, [r7, #-32]	; 0xffffffe0
 8015ec0:	4f500054 	svcmi	0x00500054
 8015ec4:	48005453 	stmdami	r0, {r0, r1, r4, r6, sl, ip, lr}
 8015ec8:	00505454 	subseq	r5, r0, r4, asr r4
 8015ecc:	31000a20 	tstcc	r0, r0, lsr #20
 8015ed0:	3a00312e 	bcc	8022390 <__exidx_end+0xa3e4>
 8015ed4:	6e6f4300 	cdpvs	3, 6, cr4, cr15, cr0, {0}
 8015ed8:	746e6574 	strbtvc	r6, [lr], #-1396	; 0xfffffa8c
 8015edc:	7079542d 	rsbsvc	r5, r9, sp, lsr #8
 8015ee0:	3b200065 	blcc	881607c <__exidx_end+0x7fe0d0>
 8015ee4:	70706100 	rsbsvc	r6, r0, r0, lsl #2
 8015ee8:	6163696c 	cmnvs	r3, ip, ror #18
 8015eec:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8015ef0:	6f736a2f 	svcvs	0x00736a2f
 8015ef4:	6f43006e 	svcvs	0x0043006e
 8015ef8:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 8015efc:	654c2d74 	strbvs	r2, [ip, #-3444]	; 0xfffff28c
 8015f00:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
 8015f04:	6e692f00 	cdpvs	15, 6, cr2, cr9, cr0, {0}
 8015f08:	2e786564 	cdpcs	5, 7, cr6, cr8, cr4, {3}
 8015f0c:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8015f10:	74732f00 	ldrbtvc	r2, [r3], #-3840	; 0xfffff100
 8015f14:	73656c79 	cmnvc	r5, #30976	; 0x7900
 8015f18:	7373632e 	cmnvc	r3, #-1207959552	; 0xb8000000
 8015f1c:	6e692f00 	cdpvs	15, 6, cr2, cr9, cr0, {0}
 8015f20:	2e786564 	cdpcs	5, 7, cr6, cr8, cr4, {3}
 8015f24:	2f00736a 	svccs	0x0000736a
 8015f28:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 8015f2c:	696c002f 	stmdbvs	ip!, {r0, r1, r2, r3, r5}^
 8015f30:	76007473 			; <UNDEFINED> instruction: 0x76007473
 8015f34:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8015f38:	75006e6f 	strvc	r6, [r0, #-3695]	; 0xfffff191
 8015f3c:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 8015f40:	69640065 	stmdbvs	r4!, {r0, r2, r5, r6}^
 8015f44:	616c7073 	smcvs	50947	; 0xc703
 8015f48:	69640079 	stmdbvs	r4!, {r0, r3, r4, r5, r6}^
 8015f4c:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 8015f50:	0079726f 	rsbseq	r7, r9, pc, ror #4
 8015f54:	6f736a2f 	svcvs	0x00736a2f
 8015f58:	63612f6e 	cmnvs	r1, #440	; 0x1b8
 8015f5c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8015f60:	62657200 	rsbvs	r7, r5, #0, 4
 8015f64:	00746f6f 	rsbseq	r6, r4, pc, ror #30
 8015f68:	6e656469 	cdpvs	4, 6, cr6, cr5, cr9, {3}
 8015f6c:	79666974 	stmdbvc	r6!, {r2, r4, r5, r6, r8, fp, sp, lr}^
 8015f70:	44213c00 	strtmi	r3, [r1], #-3072	; 0xfffff400
 8015f74:	5954434f 	ldmdbpl	r4, {r0, r1, r2, r3, r6, r8, r9, lr}^
 8015f78:	68204550 	stmdavs	r0!, {r4, r6, r8, sl, lr}
 8015f7c:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 8015f80:	74683c0a 	strbtvc	r3, [r8], #-3082	; 0xfffff3f6
 8015f84:	0a3e6c6d 	beq	8fb1140 <__exidx_end+0xf99194>
 8015f88:	6165683c 	cmnvs	r5, ip, lsr r8
 8015f8c:	743c3e64 	ldrtvc	r3, [ip], #-3684	; 0xfffff19c
 8015f90:	656c7469 	strbvs	r7, [ip, #-1129]!	; 0xfffffb97
 8015f94:	6275533e 	rsbsvs	r5, r5, #-134217728	; 0xf8000000
 8015f98:	3c74696d 			; <UNDEFINED> instruction: 0x3c74696d
 8015f9c:	7469742f 	strbtvc	r7, [r9], #-1071	; 0xfffffbd1
 8015fa0:	3c3e656c 	cfldr32cc	mvfx6, [lr], #-432	; 0xfffffe50
 8015fa4:	6165682f 	cmnvs	r5, pc, lsr #16
 8015fa8:	3c0a3e64 	stccc	14, cr3, [sl], {100}	; 0x64
 8015fac:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 8015fb0:	31683c3e 	cmncc	r8, lr, lsr ip
 8015fb4:	3c4b4f3e 	mcrrcc	15, 3, r4, fp, cr14
 8015fb8:	3e31682f 	cdpcc	8, 3, cr6, cr1, cr15, {1}
 8015fbc:	6f622f3c 	svcvs	0x00622f3c
 8015fc0:	0a3e7964 	beq	8fb4558 <__exidx_end+0xf9c5ac>
 8015fc4:	74682f3c 	strbtvc	r2, [r8], #-3900	; 0xfffff0c4
 8015fc8:	0a3e6c6d 	beq	8fb1184 <__exidx_end+0xf991d8>
 8015fcc:	71655200 	cmnvc	r5, r0, lsl #4
 8015fd0:	74736575 	ldrbtvc	r6, [r3], #-1397	; 0xfffffa8b
 8015fd4:	746e4520 	strbtvc	r4, [lr], #-1312	; 0xfffffae0
 8015fd8:	20797469 	rsbscs	r7, r9, r9, ror #8
 8015fdc:	206f6f54 	rsbcs	r6, pc, r4, asr pc	; <UNPREDICTABLE>
 8015fe0:	6772614c 	ldrbvs	r6, [r2, -ip, asr #2]!
 8015fe4:	6f4e0065 	svcvs	0x004e0065
 8015fe8:	6f462074 	svcvs	0x00462074
 8015fec:	00646e75 	rsbeq	r6, r4, r5, ror lr
 8015ff0:	75716552 	ldrbvc	r6, [r1, #-1362]!	; 0xfffffaae
 8015ff4:	2d747365 	ldclcs	3, cr7, [r4, #-404]!	; 0xfffffe6c
 8015ff8:	20495255 	subcs	r5, r9, r5, asr r2
 8015ffc:	206f6f54 	rsbcs	r6, pc, r4, asr pc	; <UNPREDICTABLE>
 8016000:	676e6f4c 	strbvs	r6, [lr, -ip, asr #30]!
 8016004:	72655600 	rsbvc	r5, r5, #0, 12
 8016008:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 801600c:	746f4e20 	strbtvc	r4, [pc], #-3616	; 8016014 <RemoteConfig::s_TXT+0x1e4>
 8016010:	70755320 	rsbsvc	r5, r5, r0, lsr #6
 8016014:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8016018:	4d006465 	cfstrsmi	mvf6, [r0, #-404]	; 0xfffffe6c
 801601c:	6f687465 	svcvs	0x00687465
 8016020:	6f4e2064 	svcvs	0x004e2064
 8016024:	6d492074 	stclvs	0, cr2, [r9, #-464]	; 0xfffffe30
 8016028:	6d656c70 	stclvs	12, cr6, [r5, #-448]!	; 0xfffffe40
 801602c:	65746e65 	ldrbvs	r6, [r4, #-3685]!	; 0xfffff19b
 8016030:	61420064 	cmpvs	r2, r4, rrx
 8016034:	65522064 	ldrbvs	r2, [r2, #-100]	; 0xffffff9c
 8016038:	73657571 	cmnvc	r5, #473956352	; 0x1c400000
 801603c:	6e550074 	mrcvs	0, 2, r0, cr5, cr4, {3}
 8016040:	776f6e6b 	strbvc	r6, [pc, -fp, ror #28]!
 8016044:	7245206e 	subvc	r2, r5, #110	; 0x6e
 8016048:	00726f72 	rsbseq	r6, r2, r2, ror pc
 801604c:	65746e49 	ldrbvs	r6, [r4, #-3657]!	; 0xfffff1b7
 8016050:	6c616e72 	stclvs	14, cr6, [r1], #-456	; 0xfffffe38
 8016054:	72655320 	rsbvc	r5, r5, #32, 6	; 0x80000000
 8016058:	20726576 	rsbscs	r6, r2, r6, ror r5
 801605c:	6f727245 	svcvs	0x00727245
 8016060:	4b4f0072 	blmi	93d6230 <__exidx_end+0x13be284>
 8016064:	44213c00 	strtmi	r3, [r1], #-3072	; 0xfffff400
 8016068:	5954434f 	ldmdbpl	r4, {r0, r1, r2, r3, r6, r8, r9, lr}^
 801606c:	68204550 	stmdavs	r0!, {r4, r6, r8, sl, lr}
 8016070:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 8016074:	74683c0a 	strbtvc	r3, [r8], #-3082	; 0xfffff3f6
 8016078:	0a3e6c6d 	beq	8fb1234 <__exidx_end+0xf99288>
 801607c:	6165683c 	cmnvs	r5, ip, lsr r8
 8016080:	743c3e64 	ldrtvc	r3, [ip], #-3684	; 0xfffff19c
 8016084:	656c7469 	strbvs	r7, [ip, #-1129]!	; 0xfffffb97
 8016088:	2075253e 	rsbscs	r2, r5, lr, lsr r5
 801608c:	2f3c7325 	svccs	0x003c7325
 8016090:	6c746974 			; <UNDEFINED> instruction: 0x6c746974
 8016094:	2f3c3e65 	svccs	0x003c3e65
 8016098:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
 801609c:	623c0a3e 	eorsvs	r0, ip, #253952	; 0x3e000
 80160a0:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 80160a4:	3e31683c 	mrccc	8, 1, r6, cr1, cr12, {1}
 80160a8:	2f3c7325 	svccs	0x003c7325
 80160ac:	3c3e3168 	ldfccs	f3, [lr], #-416	; 0xfffffe60
 80160b0:	646f622f 	strbtvs	r6, [pc], #-559	; 80160b8 <RemoteConfig::s_TXT+0x288>
 80160b4:	3c0a3e79 	stccc	14, cr3, [sl], {121}	; 0x79
 80160b8:	6d74682f 	ldclvs	8, cr6, [r4, #-188]!	; 0xffffff44
 80160bc:	000a3e6c 	andeq	r3, sl, ip, ror #28
 80160c0:	50545448 	subspl	r5, r4, r8, asr #8
 80160c4:	312e312f 			; <UNDEFINED> instruction: 0x312e312f
 80160c8:	20752520 	rsbscs	r2, r5, r0, lsr #10
 80160cc:	0a0d7325 	beq	8372d68 <__exidx_end+0x35adbc>
 80160d0:	76726553 			; <UNDEFINED> instruction: 0x76726553
 80160d4:	203a7265 	eorscs	r7, sl, r5, ror #4
 80160d8:	0a0d7325 	beq	8372d74 <__exidx_end+0x35adc8>
 80160dc:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
 80160e0:	2d746e65 	ldclcs	14, cr6, [r4, #-404]!	; 0xfffffe6c
 80160e4:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
 80160e8:	7325203a 			; <UNDEFINED> instruction: 0x7325203a
 80160ec:	6f430a0d 	svcvs	0x00430a0d
 80160f0:	6e65746e 	cdpvs	4, 6, cr7, cr5, cr14, {3}
 80160f4:	654c2d74 	strbvs	r2, [ip, #-3444]	; 0xfffff28c
 80160f8:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
 80160fc:	7525203a 	strvc	r2, [r5, #-58]!	; 0xffffffc6
 8016100:	6f430a0d 	svcvs	0x00430a0d
 8016104:	63656e6e 	cmnvs	r5, #1760	; 0x6e0
 8016108:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 801610c:	6c63203a 	stclvs	0, cr2, [r3], #-232	; 0xffffff18
 8016110:	0d65736f 	stcleq	3, cr7, [r5, #-444]!	; 0xfffffe44
 8016114:	000a0d0a 	andeq	r0, sl, sl, lsl #26
 8016118:	32334447 	eorscc	r4, r3, #1191182336	; 0x47000000
 801611c:	37303246 	ldrcc	r3, [r0, -r6, asr #4]!
 8016120:	56455f43 	strbpl	r5, [r5], -r3, asr #30
 8016124:	 	strvc	r4, [r0], #-3137	; 0xfffff3bf

08016127 <contentType>:
 8016127:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 801612b:	6d74682f 	ldclvs	8, cr6, [r4, #-188]!	; 0xffffff44
 801612f:	0000006c 	andeq	r0, r0, ip, rrx
	...
 8016147:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 801614b:	7373632f 	cmnvc	r3, #-1140850688	; 0xbc000000
	...
 8016167:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 801616b:	76616a2f 	strbtvc	r6, [r1], -pc, lsr #20
 801616f:	72637361 	rsbvc	r7, r3, #-2080374783	; 0x84000001
 8016173:	00747069 	rsbseq	r7, r4, r9, rrx
	...
 8016187:	6c707061 	ldclvs	0, cr7, [r0], #-388	; 0xfffffe7c
 801618b:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
 801618f:	2f6e6f69 	svccs	0x006e6f69
 8016193:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
	...

080161a7 <RemoteConfigConst::PARAMS_DISABLE>:
 80161a7:	61736964 	cmnvs	r3, r4, ror #18
 80161ab:	00656c62 	rsbeq	r6, r5, r2, ror #24

080161af <RemoteConfigConst::PARAMS_FILE_NAME>:
 80161af:	6e6f6372 	mcrvs	3, 3, r6, cr15, cr2, {3}
 80161b3:	2e676966 	vnmulcs.f16	s13, s14, s13	; <UNPREDICTABLE>
 80161b7:	00747874 	rsbseq	r7, r4, r4, ror r8

080161bb <RemoteConfigConst::PARAMS_DISPLAY_NAME>:
 80161bb:	70736964 	rsbsvc	r6, r3, r4, ror #18
 80161bf:	5f79616c 	svcpl	0x0079616c
 80161c3:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

080161c8 <RemoteConfigConst::PARAMS_DISABLE_WRITE>:
 80161c8:	61736964 	cmnvs	r3, r4, ror #18
 80161cc:	5f656c62 	svcpl	0x00656c62
 80161d0:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
 80161d4:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

080161d6 <RemoteConfigConst::PARAMS_ENABLE_REBOOT>:
 80161d6:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 80161da:	725f656c 	subsvc	r6, pc, #108, 10	; 0x1b000000
 80161de:	6f6f6265 	svcvs	0x006f6265
 80161e2:	 	mcrvs	0, 3, r0, cr5, cr4, {3}

080161e4 <RemoteConfigConst::PARAMS_ENABLE_UPTIME>:
 80161e4:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 80161e8:	755f656c 	ldrbvc	r6, [pc, #-1388]	; 8015c84 <s_Output+0x13>
 80161ec:	6d697470 	cfstrdvs	mvd7, [r9, #-448]!	; 0xfffffe40
 80161f0:	 	cdpvs	0, 6, cr0, cr5, cr5, {3}

080161f2 <RemoteConfigConst::PARAMS_ENABLE_FACTORY>:
 80161f2:	62616e65 	rsbvs	r6, r1, #1616	; 0x650
 80161f6:	665f656c 	ldrbvs	r6, [pc], -ip, ror #10
 80161fa:	6f746361 	svcvs	0x00746361
 80161fe:	7b007972 	blvc	80347ce <__exidx_end+0x1c822>
 8016202:	73696c22 	cmnvc	r9, #8704	; 0x2200
 8016206:	7b3a2274 	blvc	8e9ebde <__exidx_end+0xe86c32>
 801620a:	22706922 	rsbscs	r6, r0, #557056	; 0x88000
 801620e:	6425223a 	strtvs	r2, [r5], #-570	; 0xfffffdc6
 8016212:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 8016216:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 801621a:	222c2264 	eorcs	r2, ip, #100, 4	; 0x40000006
 801621e:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 8016222:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 8016226:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 801622a:	65646f6e 	strbvs	r6, [r4, #-3950]!	; 0xfffff092
 801622e:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 8016232:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 8016236:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 801623a:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 801623e:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8016242:	227b3a22 	rsbscs	r3, fp, #139264	; 0x22000
 8016246:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 801624a:	25223a22 	strcs	r3, [r2, #-2594]!	; 0xfffff5de
 801624e:	222c2273 	eorcs	r2, ip, #805306375	; 0x30000007
 8016252:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 8016256:	253a2274 	ldrcs	r2, [sl, #-628]!	; 0xfffffd8c
 801625a:	7d7d7d64 	ldclvc	13, cr7, [sp, #-400]!	; 0xfffffe70
 801625e:	227b007d 	rsbscs	r0, fp, #125	; 0x7d
 8016262:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8016266:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 801626a:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 801626e:	2c22732a 	stccs	3, cr7, [r2], #-168	; 0xffffff58
 8016272:	616f6222 	cmnvs	pc, r2, lsr #4
 8016276:	3a226472 	bcc	88af446 <__exidx_end+0x89749a>
 801627a:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 801627e:	7562222c 	strbvc	r2, [r2, #-556]!	; 0xfffffdd4
 8016282:	22646c69 	rsbcs	r6, r4, #26880	; 0x6900
 8016286:	64227b3a 	strtvs	r7, [r2], #-2874	; 0xfffff4c6
 801628a:	22657461 	rsbcs	r7, r5, #1627389952	; 0x61000000
 801628e:	2e25223a 	mcrcs	2, 1, r2, cr5, cr10, {1}
 8016292:	2c22732a 	stccs	3, cr7, [r2], #-168	; 0xffffff58
 8016296:	6d697422 	cfstrdvs	mvd7, [r9, #-136]!	; 0xffffff78
 801629a:	223a2265 	eorscs	r2, sl, #1342177286	; 0x50000006
 801629e:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
 80162a2:	007d7d22 	rsbseq	r7, sp, r2, lsr #26
 80162a6:	7075227b 	rsbsvc	r2, r5, fp, ror r2
 80162aa:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
 80162ae:	75253a22 	strvc	r3, [r5, #-2594]!	; 0xfffff5de
 80162b2:	7b000a7d 	blvc	8018cae <__exidx_end+0xd02>
 80162b6:	73696422 	cmnvc	r9, #570425344	; 0x22000000
 80162ba:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 80162be:	64253a22 	strtvs	r3, [r5], #-2594	; 0xfffff5de
 80162c2:	227b007d 	rsbscs	r0, fp, #125	; 0x7d
 80162c6:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 80162ca:	7b3a2273 	blvc	8e9ec9e <__exidx_end+0xe86cf2>
 80162ce:	33316522 	teqcc	r1, #142606336	; 0x8800000
 80162d2:	78742e31 	ldmdavc	r4!, {r0, r4, r5, r9, sl, fp, sp}^
 80162d6:	223a2274 	eorscs	r2, sl, #116, 4	; 0x40000007
 80162da:	4e434173 	mcrmi	1, 2, r4, cr3, cr3, {3}
 80162de:	2e314520 	cfabs64cs	mvdx4, mvdx1
 80162e2:	2c223133 	stfcss	f3, [r2], #-204	; 0xffffff34
 80162e6:	76656422 	strbtvc	r6, [r5], -r2, lsr #8
 80162ea:	73656369 	cmnvc	r5, #-1543503871	; 0xa4000001
 80162ee:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
 80162f2:	44223a22 	strtmi	r3, [r2], #-2594	; 0xfffff5de
 80162f6:	5020584d 	eorpl	r5, r0, sp, asr #16
 80162fa:	6c657869 	stclvs	8, cr7, [r5], #-420	; 0xfffffe5c
 80162fe:	64222c22 	strtvs	r2, [r2], #-3106	; 0xfffff3de
 8016302:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
 8016306:	742e7961 	strtvc	r7, [lr], #-2401	; 0xfffff69f
 801630a:	3a227478 	bcc	88b34f2 <__exidx_end+0x89b546>
 801630e:	73694422 	cmnvc	r9, #570425344	; 0x22000000
 8016312:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8016316:	46445520 	strbmi	r5, [r4], -r0, lsr #10
 801631a:	6e222c22 	cdpvs	12, 2, cr2, cr2, cr2, {1}
 801631e:	6f777465 	svcvs	0x00777465
 8016322:	742e6b72 	strtvc	r6, [lr], #-2930	; 0xfffff48e
 8016326:	3a227478 	bcc	88b350e <__exidx_end+0x89b562>
 801632a:	74654e22 	strbtvc	r4, [r5], #-3618	; 0xfffff1de
 801632e:	6b726f77 	blvs	9cb2112 <__exidx_end+0x1c9a166>
 8016332:	72222c22 	eorvc	r2, r2, #8704	; 0x2200
 8016336:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 801633a:	742e6769 	strtvc	r6, [lr], #-1897	; 0xfffff897
 801633e:	3a227478 	bcc	88b3526 <__exidx_end+0x89b57a>
 8016342:	6d655222 	sfmvs	f5, 2, [r5, #-136]!	; 0xffffff78
 8016346:	2065746f 	rsbcs	r7, r5, pc, ror #8
 801634a:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
 801634e:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 8016352:	6f697461 	svcvs	0x00697461
 8016356:	7d7d226e 	lfmvc	f2, 2, [sp, #-440]!	; 0xfffffe48
	...

0801635b <index_html>:
 801635b:	4f44213c 	svcmi	0x0044213c
 801635f:	50595443 	subspl	r5, r9, r3, asr #8
 8016363:	74682045 	strbtvc	r2, [r8], #-69	; 0xffffffbb
 8016367:	0a3e6c6d 	beq	8fb1523 <__exidx_end+0xf99577>
 801636b:	6d74683c 	ldclvs	8, cr6, [r4, #-240]!	; 0xffffff10
 801636f:	3c0a3e6c 	stccc	14, cr3, [sl], {108}	; 0x6c
 8016373:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
 8016377:	3c090a3e 			; <UNDEFINED> instruction: 0x3c090a3e
 801637b:	6b6e696c 	blvs	9bb0933 <__exidx_end+0x1b98987>
 801637f:	6c657220 	sfmvs	f7, 2, [r5], #-128	; 0xffffff80
 8016383:	7473223d 	ldrbtvc	r2, [r3], #-573	; 0xfffffdc3
 8016387:	73656c79 	cmnvc	r5, #30976	; 0x7900
 801638b:	74656568 	strbtvc	r6, [r5], #-1384	; 0xfffffa98
 801638f:	72682022 	rsbvc	r2, r8, #34	; 0x22
 8016393:	223d6665 	eorscs	r6, sp, #105906176	; 0x6500000
 8016397:	6c797473 	cfldrdvs	mvd7, [r9], #-460	; 0xfffffe34
 801639b:	632e7365 			; <UNDEFINED> instruction: 0x632e7365
 801639f:	20227373 	eorcs	r7, r2, r3, ror r3
 80163a3:	090a3e2f 	stmdbeq	sl, {r0, r1, r2, r3, r5, r9, sl, fp, ip, sp}
 80163a7:	7469743c 	strbtvc	r7, [r9], #-1084	; 0xfffffbc4
 80163ab:	3c3e656c 	cfldr32cc	mvfx6, [lr], #-432	; 0xfffffe50
 80163af:	7469742f 	strbtvc	r7, [r9], #-1071	; 0xfffffbd1
 80163b3:	0a3e656c 	beq	8faf96b <__exidx_end+0xf979bf>
 80163b7:	65682f3c 	strbvs	r2, [r8, #-3900]!	; 0xfffff0c4
 80163bb:	0a3e6461 	beq	8faf547 <__exidx_end+0xf9759b>
 80163bf:	646f623c 	strbtvs	r6, [pc], #-572	; 80163c7 <index_html+0x6c>
 80163c3:	090a3e79 	stmdbeq	sl, {r0, r3, r4, r5, r6, r9, sl, fp, ip, sp}
 80163c7:	6165683c 	cmnvs	r5, ip, lsr r8
 80163cb:	3e726564 	cdpcc	5, 7, cr6, cr2, cr4, {3}
 80163cf:	206c753c 	rsbcs	r7, ip, ip, lsr r5
 80163d3:	223d6469 	eorscs	r6, sp, #1761607680	; 0x69000000
 80163d7:	694c6469 	stmdbvs	ip, {r0, r3, r5, r6, sl, sp, lr}^
 80163db:	3e227473 	mcrcc	4, 1, r7, cr2, cr3, {3}
 80163df:	6c752f3c 	ldclvs	15, cr2, [r5], #-240	; 0xffffff10
 80163e3:	682f3c3e 	stmdavs	pc!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}	; <UNPREDICTABLE>
 80163e7:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 80163eb:	090a3e72 	stmdbeq	sl, {r1, r4, r5, r6, r9, sl, fp, ip, sp}
 80163ef:	3c3e703c 	ldccc	0, cr7, [lr], #-240	; 0xffffff10
 80163f3:	656c6573 	strbvs	r6, [ip, #-1395]!	; 0xfffffa8d
 80163f7:	69207463 	stmdbvs	r0!, {r0, r1, r5, r6, sl, ip, sp, lr}
 80163fb:	69223d64 	stmdbvs	r2!, {r2, r5, r6, r8, sl, fp, ip, sp}
 80163ff:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
 8016403:	6f746365 	svcvs	0x00746365
 8016407:	20227972 	eorcs	r7, r2, r2, ror r9
 801640b:	68636e6f 	stmdavs	r3!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 801640f:	65676e61 	strbvs	r6, [r7, #-3681]!	; 0xfffff19f
 8016413:	6567223d 	strbvs	r2, [r7, #-573]!	; 0xfffffdc3
 8016417:	78745f74 	ldmdavc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 801641b:	68742874 	ldmdavs	r4!, {r2, r4, r5, r6, fp, sp}^
 801641f:	762e7369 	strtvc	r7, [lr], -r9, ror #6
 8016423:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
 8016427:	3c3e2229 	lfmcc	f2, 4, [lr], #-164	; 0xffffff5c
 801642b:	6c65732f 	stclvs	3, cr7, [r5], #-188	; 0xffffff44
 801642f:	3e746365 	cdpcc	3, 7, cr6, cr4, cr5, {3}
 8016433:	3e702f3c 	mrccc	15, 3, r2, cr0, cr12, {1}
 8016437:	743c090a 	ldrtvc	r0, [ip], #-2314	; 0xfffff6f6
 801643b:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
 801643f:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
 8016443:	54646922 	strbtpl	r6, [r4], #-2338	; 0xfffff6de
 8016447:	20227478 	eorcs	r7, r2, r8, ror r4
 801644b:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 801644f:	273d7265 	ldrcs	r7, [sp, -r5, ror #4]!
 8016453:	3c3e2731 	ldccc	7, cr2, [lr], #-196	; 0xffffff3c
 8016457:	6261742f 	rsbvs	r7, r1, #788529152	; 0x2f000000
 801645b:	0a3e656c 	beq	8fafa13 <__exidx_end+0xf97a67>
 801645f:	6f663c09 	svcvs	0x00663c09
 8016463:	7265746f 	rsbvc	r7, r5, #1862270976	; 0x6f000000
 8016467:	6c753c3e 	ldclvs	12, cr3, [r5], #-248	; 0xffffff08
 801646b:	3d646920 			; <UNDEFINED> instruction: 0x3d646920
 801646f:	56646922 	strbtpl	r6, [r4], -r2, lsr #18
 8016473:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8016477:	3e226e6f 	cdpcc	14, 2, cr6, cr2, cr15, {3}
 801647b:	6c752f3c 	ldclvs	15, cr2, [r5], #-240	; 0xffffff10
 801647f:	662f3c3e 			; <UNDEFINED> instruction: 0x662f3c3e
 8016483:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
 8016487:	090a3e72 	stmdbeq	sl, {r1, r4, r5, r6, r9, sl, fp, ip, sp}
 801648b:	7263733c 	rsbvc	r7, r3, #60, 6	; 0xf0000000
 801648f:	20747069 	rsbscs	r7, r4, r9, rrx
 8016493:	3d637273 	sfmcc	f7, 2, [r3, #-460]!	; 0xfffffe34
 8016497:	646e6922 	strbtvs	r6, [lr], #-2338	; 0xfffff6de
 801649b:	6a2e7865 	bvs	8bb4637 <__exidx_end+0xb9c68b>
 801649f:	3c3e2273 	lfmcc	f2, 4, [lr], #-460	; 0xfffffe34
 80164a3:	7263732f 	rsbvc	r7, r3, #-1140850688	; 0xbc000000
 80164a7:	3e747069 	cdpcc	0, 7, cr7, cr4, cr9, {3}
 80164ab:	622f3c0a 	eorvs	r3, pc, #2560	; 0xa00
 80164af:	3e79646f 	cdpcc	4, 7, cr6, cr9, cr15, {3}
 80164b3:	682f3c0a 	stmdavs	pc!, {r1, r3, sl, fp, ip, sp}	; <UNPREDICTABLE>
 80164b7:	3e6c6d74 	mcrcc	13, 3, r6, cr12, cr4, {3}
 80164bb:	 	svcvs	0x0062000a

080164bd <styles_css>:
 80164bd:	79646f62 	stmdbvc	r4!, {r1, r5, r6, r8, r9, sl, fp, sp, lr}^
 80164c1:	200a7b20 	andcs	r7, sl, r0, lsr #22
 80164c5:	63616220 	cmnvs	r1, #32, 4
 80164c9:	6f72676b 	svcvs	0x0072676b
 80164cd:	2d646e75 	stclcs	14, cr6, [r4, #-468]!	; 0xfffffe2c
 80164d1:	6f6c6f63 	svcvs	0x006c6f63
 80164d5:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
 80164d9:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
 80164dd:	30322c30 	eorscc	r2, r2, r0, lsr ip
 80164e1:	2930322c 	ldmdbcs	r0!, {r2, r3, r5, r9, ip, sp}
 80164e5:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 80164e9:	6f6c6f63 	svcvs	0x006c6f63
 80164ed:	72203a72 	eorvc	r3, r0, #466944	; 0x72000
 80164f1:	32286267 	eorcc	r6, r8, #1879048198	; 0x70000006
 80164f5:	202c3535 	eorcs	r3, ip, r5, lsr r5
 80164f9:	2c353532 	cfldr32cs	mvfx3, [r5], #-200	; 0xffffff38
 80164fd:	35353220 	ldrcc	r3, [r5, #-544]!	; 0xfffffde0
 8016501:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
 8016505:	6c750a0a 			; <UNDEFINED> instruction: 0x6c750a0a
 8016509:	200a7b20 	andcs	r7, sl, r0, lsr #22
 801650d:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 8016511:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8016515:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 8016519:	0a3b7865 	beq	8ef46b5 <__exidx_end+0xedc709>
 801651d:	6c0a0a7d 			; <UNDEFINED> instruction: 0x6c0a0a7d
 8016521:	0a7b2069 	beq	9ede6cd <__exidx_end+0x1ec6721>
 8016525:	696c2020 	stmdbvs	ip!, {r5, sp}^
 8016529:	732d7473 			; <UNDEFINED> instruction: 0x732d7473
 801652d:	656c7974 	strbvs	r7, [ip, #-2420]!	; 0xfffff68c
 8016531:	6f6e203a 	svcvs	0x006e203a
 8016535:	0a3b656e 	beq	8eefaf5 <__exidx_end+0xed7b49>
 8016539:	616d2020 	cmnvs	sp, r0, lsr #32
 801653d:	6e696772 	mcrvs	7, 3, r6, cr9, cr2, {3}
 8016541:	7031203a 	eorsvc	r2, r1, sl, lsr r0
 8016545:	70352078 	eorsvc	r2, r5, r8, ror r0
 8016549:	7d0a3b78 	vstrvc	d3, [sl, #-480]	; 0xfffffe20
 801654d:	65680a0a 	strbvs	r0, [r8, #-2570]!	; 0xfffff5f6
 8016551:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 8016555:	200a7b20 	andcs	r7, sl, r0, lsr #22
 8016559:	73696420 	cmnvc	r9, #32, 8	; 0x20000000
 801655d:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 8016561:	6c66203a 	stclvs	0, cr2, [r6], #-232	; 0xffffff18
 8016565:	0a3b7865 	beq	8ef4701 <__exidx_end+0xedc755>
 8016569:	6f622020 	svcvs	0x00622020
 801656d:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
 8016571:	6461722d 	strbtvs	r7, [r1], #-557	; 0xfffffdd3
 8016575:	3a737569 	bcc	9cf3b21 <__exidx_end+0x1cdbb75>
 8016579:	78703420 	ldmdavc	r0!, {r5, sl, ip, sp}^
 801657d:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 8016581:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 8016585:	203a7265 	eorscs	r7, sl, r5, ror #4
 8016589:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 801658d:	72672064 	rsbvc	r2, r7, #100	; 0x64
 8016591:	31207965 			; <UNDEFINED> instruction: 0x31207965
 8016595:	0a3b7870 	beq	8ef475d <__exidx_end+0xedc7b1>
 8016599:	660a0a7d 			; <UNDEFINED> instruction: 0x660a0a7d
 801659d:	65746f6f 	ldrbvs	r6, [r4, #-3951]!	; 0xfffff091
 80165a1:	0a7b2072 	beq	9ede771 <__exidx_end+0x1ec67c5>
 80165a5:	69642020 	stmdbvs	r4!, {r5, sp}^
 80165a9:	616c7073 	smcvs	50947	; 0xc703
 80165ad:	66203a79 			; <UNDEFINED> instruction: 0x66203a79
 80165b1:	3b78656c 	blcc	9e2fb69 <__exidx_end+0x1e17bbd>
 80165b5:	6a20200a 	bvs	881e5e5 <__exidx_end+0x806639>
 80165b9:	69747375 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, r8, r9, ip, sp, lr}^
 80165bd:	632d7966 			; <UNDEFINED> instruction: 0x632d7966
 80165c1:	65746e6f 	ldrbvs	r6, [r4, #-3695]!	; 0xfffff191
 80165c5:	203a746e 	eorscs	r7, sl, lr, ror #8
 80165c9:	746e6563 	strbtvc	r6, [lr], #-1379	; 0xfffffa9d
 80165cd:	0a3b7265 	beq	8ef2f69 <__exidx_end+0xedafbd>
 80165d1:	6f622020 	svcvs	0x00622020
 80165d5:	72656472 	rsbvc	r6, r5, #1912602624	; 0x72000000
 80165d9:	6461722d 	strbtvs	r7, [r1], #-557	; 0xfffffdd3
 80165dd:	3a737569 	bcc	9cf3b89 <__exidx_end+0x1cdbbdd>
 80165e1:	78703420 	ldmdavc	r0!, {r5, sl, ip, sp}^
 80165e5:	20200a3b 	eorcs	r0, r0, fp, lsr sl
 80165e9:	64726f62 	ldrbtvs	r6, [r2], #-3938	; 0xfffff09e
 80165ed:	203a7265 	eorscs	r7, sl, r5, ror #4
 80165f1:	696c6f73 	stmdbvs	ip!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 80165f5:	72672064 	rsbvc	r2, r7, #100	; 0x64
 80165f9:	31207965 			; <UNDEFINED> instruction: 0x31207965
 80165fd:	0a3b7870 	beq	8ef47c5 <__exidx_end+0xedc819>
 8016601:	 	andne	r0, r0, #512000	; 0x7d000

08016604 <HttpContent>:
 8016604:	08015f12 	stmdaeq	r1, {r1, r4, r8, r9, sl, fp, ip, lr}
 8016608:	080164bd 	stmdaeq	r1, {r0, r2, r3, r4, r5, r7, sl, sp, lr}
 801660c:	08015f1e 	stmdaeq	r1, {r1, r2, r3, r4, r8, r9, sl, fp, ip, lr}
 8016610:	0801661c 	stmdaeq	r1, {r2, r3, r4, r9, sl, sp, lr}
 8016614:	08015f06 	stmdaeq	r1, {r1, r2, r8, r9, sl, fp, ip, lr}
 8016618:	0801635b 	stmdaeq	r1, {r0, r1, r3, r4, r6, r8, r9, sp, lr}

0801661c <index_js>:
 801661c:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8016620:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8016624:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8016628:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 801662c:	534a7465 	movtpl	r7, #42085	; 0xa465
 8016630:	6a284e4f 	bvs	8a29f74 <__exidx_end+0xa11fc8>
 8016634:	296e6f73 	stmdbcs	lr!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8016638:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 801663c:	74656c09 	strbtvc	r6, [r5], #-3081	; 0xfffff3f7
 8016640:	6c727520 	cfldr64vs	mvdx7, [r2], #-128	; 0xffffff80
 8016644:	6a2f273d 	bvs	8be0340 <__exidx_end+0xbc8394>
 8016648:	2f6e6f73 	svccs	0x006e6f73
 801664c:	202b2027 	eorcs	r2, fp, r7, lsr #32
 8016650:	6e6f736a 	cdpvs	3, 6, cr7, cr15, cr10, {3}
 8016654:	09090a3b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r9, fp}
 8016658:	20797274 	rsbscs	r7, r9, r4, ror r2
 801665c:	09090a7b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r6, r9, fp}
 8016660:	656c0909 	strbvs	r0, [ip, #-2313]!	; 0xfffff6f7
 8016664:	65722074 	ldrbvs	r2, [r2, #-116]!	; 0xffffff8c
 8016668:	77613d73 			; <UNDEFINED> instruction: 0x77613d73
 801666c:	20746961 	rsbscs	r6, r4, r1, ror #18
 8016670:	63746566 	cmnvs	r4, #427819008	; 0x19800000
 8016674:	72752868 	rsbsvc	r2, r5, #104, 16	; 0x680000
 8016678:	0a3b296c 	beq	8ee0c30 <__exidx_end+0xec8c84>
 801667c:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 8016680:	75746572 	ldrbvc	r6, [r4, #-1394]!	; 0xfffffa8e
 8016684:	61206e72 			; <UNDEFINED> instruction: 0x61206e72
 8016688:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 801668c:	73657220 	cmnvc	r5, #32, 4
 8016690:	6f736a2e 	svcvs	0x00736a2e
 8016694:	3b29286e 	blcc	8a60854 <__exidx_end+0xa488a8>
 8016698:	7d09090a 	vstrvc.16	s0, [r9, #-20]	; 0xffffffec	; <UNPREDICTABLE>
 801669c:	74616320 	strbtvc	r6, [r1], #-800	; 0xfffffce0
 80166a0:	28206863 	stmdacs	r0!, {r0, r1, r5, r6, fp, sp, lr}
 80166a4:	6f727265 	svcvs	0x00727265
 80166a8:	7b202972 	blvc	8820c78 <__exidx_end+0x808ccc>
 80166ac:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 80166b0:	6e6f6309 	cdpvs	3, 6, cr6, cr15, cr9, {0}
 80166b4:	656c6f73 	strbvs	r6, [ip, #-3955]!	; 0xfffff08d
 80166b8:	676f6c2e 	strbvs	r6, [pc, -lr, lsr #24]!
 80166bc:	72726528 	rsbsvc	r6, r2, #40, 10	; 0xa000000
 80166c0:	3b29726f 	blcc	8a73084 <__exidx_end+0xa5b0d8>
 80166c4:	7d09090a 	vstrvc.16	s0, [r9, #-20]	; 0xffffffec	; <UNPREDICTABLE>
 80166c8:	0a0a7d0a 	beq	82b5af8 <__exidx_end+0x29db4c>
 80166cc:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 80166d0:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 80166d4:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 80166d8:	72206e6f 	eorvc	r6, r0, #1776	; 0x6f0
 80166dc:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 80166e0:	73694c72 	cmnvc	r9, #29184	; 0x7200
 80166e4:	20292874 	eorcs	r2, r9, r4, ror r8
 80166e8:	09090a7b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r6, r9, fp}
 80166ec:	2074656c 	rsbscs	r6, r4, ip, ror #10
 80166f0:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 80166f4:	6177613d 	cmnvs	r7, sp, lsr r1
 80166f8:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 80166fc:	534a7465 	movtpl	r7, #42085	; 0xa465
 8016700:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8016704:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8016708:	0a3b2927 	beq	8ee0bac <__exidx_end+0xec8c00>
 801670c:	6f640909 	svcvs	0x00640909
 8016710:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 8016714:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 8016718:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
 801671c:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 8016720:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 8016724:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 8016728:	73694c64 	cmnvc	r9, #100, 24	; 0x6400
 801672c:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 8016730:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
 8016734:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
 8016738:	3c223d4c 	stccc	13, cr3, [r2], #-304	; 0xfffffed0
 801673c:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
 8016740:	73696c2b 	cmnvc	r9, #11008	; 0x2b00
 8016744:	696c2e74 	stmdbvs	ip!, {r2, r4, r5, r6, r9, sl, fp, sp}^
 8016748:	6e2e7473 	mcrvs	4, 1, r7, cr14, cr3, {3}
 801674c:	2b656d61 	blcs	9971cd8 <__exidx_end+0x1959d2c>
 8016750:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 80166d0 <index_js+0xb4>
 8016754:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8016758:	2b223e69 	blcs	88a6104 <__exidx_end+0x88e158>
 801675c:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8016760:	73696c2e 	cmnvc	r9, #11776	; 0x2e00
 8016764:	6f6e2e74 	svcvs	0x006e2e74
 8016768:	742e6564 	strtvc	r6, [lr], #-1380	; 0xfffffa9c
 801676c:	2b657079 	blcs	9972958 <__exidx_end+0x195a9ac>
 8016770:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 80166f0 <index_js+0xd4>
 8016774:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 8016778:	2b223e69 	blcs	88a6124 <__exidx_end+0x88e178>
 801677c:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
 8016780:	73696c2e 	cmnvc	r9, #11776	; 0x2e00
 8016784:	6f6e2e74 	svcvs	0x006e2e74
 8016788:	702e6564 	eorvc	r6, lr, r4, ror #10
 801678c:	2e74726f 	cdpcs	2, 7, cr7, cr4, cr15, {3}
 8016790:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 8016794:	2f3c222b 	svccs	0x003c222b
 8016798:	223e696c 	eorscs	r6, lr, #108, 18	; 0x1b0000
 801679c:	0a7d0a3b 	beq	9f59090 <__exidx_end+0x1f410e4>
 80167a0:	7973610a 	ldmdbvc	r3!, {r1, r3, r8, sp, lr}^
 80167a4:	6620636e 	strtvs	r6, [r0], -lr, ror #6
 80167a8:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 80167ac:	206e6f69 	rsbcs	r6, lr, r9, ror #30
 80167b0:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 80167b4:	69447265 	stmdbvs	r4, {r0, r2, r5, r6, r9, ip, sp, lr}^
 80167b8:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 80167bc:	2879726f 	ldmdacs	r9!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
 80167c0:	0a7b2029 	beq	9ede86c <__exidx_end+0x1ec68c0>
 80167c4:	6c090909 			; <UNDEFINED> instruction: 0x6c090909
 80167c8:	64207465 	strtvs	r7, [r0], #-1125	; 0xfffffb9b
 80167cc:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
 80167d0:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 80167d4:	6177613d 	cmnvs	r7, sp, lsr r1
 80167d8:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 80167dc:	534a7465 	movtpl	r7, #42085	; 0xa465
 80167e0:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 80167e4:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 80167e8:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 80167ec:	3b292779 	blcc	8a605d8 <__exidx_end+0xa4862c>
 80167f0:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 80167f4:	2074656c 	rsbscs	r6, r4, ip, ror #10
 80167f8:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 80167fc:	0a22223d 	beq	889f0f8 <__exidx_end+0x88714c>
 8016800:	6c090909 			; <UNDEFINED> instruction: 0x6c090909
 8016804:	66207465 	strtvs	r7, [r0], -r5, ror #8
 8016808:	6e656c69 	cdpvs	12, 6, cr6, cr5, cr9, {3}
 801680c:	73656d61 	cmnvc	r5, #6208	; 0x1840
 8016810:	6a624f3d 	bvs	98aa50c <__exidx_end+0x1892560>
 8016814:	2e746365 	cdpcs	3, 7, cr6, cr4, cr5, {3}
 8016818:	7379656b 	cmnvc	r9, #448790528	; 0x1ac00000
 801681c:	72696428 	rsbvc	r6, r9, #40, 8	; 0x28000000
 8016820:	6f746365 	svcvs	0x00746365
 8016824:	225b7972 	subscs	r7, fp, #1867776	; 0x1c8000
 8016828:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 801682c:	295d2273 	ldmdbcs	sp, {r0, r1, r4, r5, r6, r9, sp}^
 8016830:	09090a3b 	stmdbeq	r9, {r0, r1, r3, r4, r5, r9, fp}
 8016834:	6c696609 	stclvs	6, cr6, [r9], #-36	; 0xffffffdc
 8016838:	6d616e65 	stclvs	14, cr6, [r1, #-404]!	; 0xfffffe6c
 801683c:	662e7365 	strtvs	r7, [lr], -r5, ror #6
 8016840:	6145726f 	cmpvs	r5, pc, ror #4
 8016844:	66286863 	strtvs	r6, [r8], -r3, ror #16
 8016848:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 801684c:	286e6f69 	stmdacs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 8016850:	2979656b 	ldmdbcs	r9!, {r0, r1, r3, r5, r6, r8, sl, sp, lr}^
 8016854:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 8016858:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
 801685c:	20726176 	rsbscs	r6, r2, r6, ror r1
 8016860:	756c6176 	strbvc	r6, [ip, #-374]!	; 0xfffffe8a
 8016864:	203d2065 	eorscs	r2, sp, r5, rrx
 8016868:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 801686c:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 8016870:	66225b79 			; <UNDEFINED> instruction: 0x66225b79
 8016874:	73656c69 	cmnvc	r5, #26880	; 0x6900
 8016878:	6b5b5d22 	blvs	96edd08 <__exidx_end+0x16d5d5c>
 801687c:	3b5d7965 	blcc	9774e18 <__exidx_end+0x175ce6c>
 8016880:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 8016884:	74680909 	strbtvc	r0, [r8], #-2313	; 0xfffff6f7
 8016888:	3d2b6c6d 	stccc	12, cr6, [fp, #-436]!	; 0xfffffe4c
 801688c:	706f3c22 	rsbvc	r3, pc, r2, lsr #24
 8016890:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8016894:	6c617620 	stclvs	6, cr7, [r1], #-128	; 0xffffff80
 8016898:	223d6575 	eorscs	r6, sp, #490733568	; 0x1d400000
 801689c:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 80168a0:	223e222b 	eorscs	r2, lr, #-1342177278	; 0xb0000002
 80168a4:	6c61762b 	stclvs	6, cr7, [r1], #-172	; 0xffffff54
 80168a8:	222b6575 	eorcs	r6, fp, #490733568	; 0x1d400000
 80168ac:	706f2f3c 	rsbvc	r2, pc, ip, lsr pc	; <UNPREDICTABLE>
 80168b0:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 80168b4:	0a3b223e 	beq	8edf1b4 <__exidx_end+0xec7208>
 80168b8:	7d090909 	vstrvc.16	s0, [r9, #-18]	; 0xffffffee	; <UNPREDICTABLE>
 80168bc:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 80168c0:	6f640909 	svcvs	0x00640909
 80168c4:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 80168c8:	672e746e 	strvs	r7, [lr, -lr, ror #8]!
 80168cc:	6c457465 	cfstrdvs	mvd7, [r5], {101}	; 0x65
 80168d0:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 80168d4:	49794274 	ldmdbmi	r9!, {r2, r4, r5, r6, r9, lr}^
 80168d8:	69222864 	stmdbvs	r2!, {r2, r5, r6, fp, sp}
 80168dc:	72694464 	rsbvc	r4, r9, #100, 8	; 0x64000000
 80168e0:	6f746365 	svcvs	0x00746365
 80168e4:	29227972 	stmdbcs	r2!, {r1, r4, r5, r6, r8, fp, ip, sp, lr}
 80168e8:	6e6e692e 	vmulvs.f16	s13, s28, s29	; <UNPREDICTABLE>
 80168ec:	54487265 	strbpl	r7, [r8], #-613	; 0xfffffd9b
 80168f0:	683d4c4d 	ldmdavs	sp!, {r0, r2, r3, r6, sl, fp, lr}
 80168f4:	3b6c6d74 	blcc	9b31ecc <__exidx_end+0x1b19f20>
 80168f8:	0909090a 	stmdbeq	r9, {r1, r3, r8, fp}
 80168fc:	5f746567 	svcpl	0x00746567
 8016900:	28747874 	ldmdacs	r4!, {r2, r4, r5, r6, fp, ip, sp, lr}^
 8016904:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
 8016908:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
 801690c:	5d305b73 	fldmdbxpl	r0!, {d5-d61}	;@ Deprecated
 8016910:	7d0a3b29 	vstrvc	d3, [sl, #-164]	; 0xffffff5c
 8016914:	73610a0a 	cmnvc	r1, #40960	; 0xa000
 8016918:	20636e79 	rsbcs	r6, r3, r9, ror lr
 801691c:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 8016920:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8016924:	6e657220 	cdpvs	2, 6, cr7, cr5, cr0, {1}
 8016928:	56726564 	ldrbtpl	r6, [r2], -r4, ror #10
 801692c:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 8016930:	29286e6f 	stmdbcs	r8!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}
 8016934:	090a7b20 	stmdbeq	sl, {r5, r8, r9, fp, ip, sp, lr}
 8016938:	74656c09 	strbtvc	r6, [r5], #-3081	; 0xfffff3f7
 801693c:	72657620 	rsbvc	r7, r5, #32, 12	; 0x2000000
 8016940:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
 8016944:	6177613d 	cmnvs	r7, sp, lsr r1
 8016948:	67207469 	strvs	r7, [r0, -r9, ror #8]!
 801694c:	534a7465 	movtpl	r7, #42085	; 0xa465
 8016950:	27284e4f 	strcs	r4, [r8, -pc, asr #28]!
 8016954:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 8016958:	276e6f69 	strbcs	r6, [lr, -r9, ror #30]!
 801695c:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 8016960:	636f6409 	cmnvs	pc, #150994944	; 0x9000000
 8016964:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
 8016968:	65672e74 	strbvs	r2, [r7, #-3700]!	; 0xfffff18c
 801696c:	656c4574 	strbvs	r4, [ip, #-1396]!	; 0xfffffa8c
 8016970:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
 8016974:	64497942 	strbvs	r7, [r9], #-2370	; 0xfffff6be
 8016978:	64692228 	strbtvs	r2, [r9], #-552	; 0xfffffdd8
 801697c:	73726556 	cmnvc	r2, #360710144	; 0x15800000
 8016980:	226e6f69 	rsbcs	r6, lr, #420	; 0x1a4
 8016984:	6e692e29 	cdpvs	14, 6, cr2, cr9, cr9, {1}
 8016988:	4872656e 	ldmdami	r2!, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^
 801698c:	3d4c4d54 	stclcc	13, cr4, [ip, #-336]	; 0xfffffeb0
 8016990:	696c3c22 	stmdbvs	ip!, {r1, r5, sl, fp, ip, sp}^
 8016994:	2b22563e 	blcs	88ac294 <__exidx_end+0x8942e8>
 8016998:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 801699c:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 80169a0:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 80169a4:	2b6e6f69 	blcs	9bb2750 <__exidx_end+0x1b9a7a4>
 80169a8:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8016928 <index_js+0x30c>
 80169ac:	6c3c3e69 	ldcvs	14, cr3, [ip], #-420	; 0xfffffe5c
 80169b0:	2b223e69 	blcs	88a635c <__exidx_end+0x88e3b0>
 80169b4:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 80169b8:	2e6e6f69 	cdpcs	15, 6, cr6, cr14, cr9, {3}
 80169bc:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
 80169c0:	61642e64 	cmnvs	r4, r4, ror #28
 80169c4:	222b6574 	eorcs	r6, fp, #116, 10	; 0x1d000000
 80169c8:	696c2f3c 	stmdbvs	ip!, {r2, r3, r4, r5, r8, r9, sl, fp, sp}^
 80169cc:	696c3c3e 	stmdbvs	ip!, {r1, r2, r3, r4, r5, sl, fp, ip, sp}^
 80169d0:	762b223e 			; <UNDEFINED> instruction: 0x762b223e
 80169d4:	69737265 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
 80169d8:	622e6e6f 	eorvs	r6, lr, #1776	; 0x6f0
 80169dc:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
 80169e0:	6d69742e 	cfstrdvs	mvd7, [r9, #-184]!	; 0xffffff48
 80169e4:	3c222b65 			; <UNDEFINED> instruction: 0x3c222b65
 80169e8:	3e696c2f 	cdpcc	12, 6, cr6, cr9, cr15, {1}
 80169ec:	3e696c3c 	mcrcc	12, 3, r6, cr9, cr12, {1}
 80169f0:	65762b22 	ldrbvs	r2, [r6, #-2850]!	; 0xfffff4de
 80169f4:	6f697372 	svcvs	0x00697372
 80169f8:	6f622e6e 	svcvs	0x00622e6e
 80169fc:	2b647261 	blcs	9933388 <__exidx_end+0x191b3dc>
 8016a00:	6c2f3c22 	stcvs	12, cr3, [pc], #-136	; 8016980 <index_js+0x364>
 8016a04:	3b223e69 	blcc	88a63b0 <__exidx_end+0x88e404>
 8016a08:	0a0a7d0a 	beq	82b5e38 <__exidx_end+0x29de8c>
 8016a0c:	6e797361 	cdpvs	3, 7, cr7, cr9, cr1, {3}
 8016a10:	75662063 	strbvc	r2, [r6, #-99]!	; 0xffffff9d
 8016a14:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8016a18:	67206e6f 	strvs	r6, [r0, -pc, ror #28]!
 8016a1c:	745f7465 	ldrbvc	r7, [pc], #-1125	; 8016a24 <index_js+0x408>
 8016a20:	73287478 			; <UNDEFINED> instruction: 0x73287478
 8016a24:	20296c65 	eorcs	r6, r9, r5, ror #24
 8016a28:	6c090a7b 			; <UNDEFINED> instruction: 0x6c090a7b
 8016a2c:	74207465 	strtvc	r7, [r0], #-1125	; 0xfffffb9b
 8016a30:	613d7478 	teqvs	sp, r8, ror r4
 8016a34:	74696177 	strbtvc	r6, [r9], #-375	; 0xfffffe89
 8016a38:	74656720 	strbtvc	r6, [r5], #-1824	; 0xfffff8e0
 8016a3c:	4e4f534a 	cdpmi	3, 4, cr5, cr15, cr10, {2}
 8016a40:	6c657328 	stclvs	3, cr7, [r5], #-160	; 0xffffff60
 8016a44:	090a3b29 	stmdbeq	sl, {r0, r3, r5, r8, r9, fp, ip, sp}
 8016a48:	2074656c 	rsbscs	r6, r4, ip, ror #10
 8016a4c:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8016a50:	3b22223d 	blcc	889f34c <__exidx_end+0x8873a0>
 8016a54:	624f090a 	subvs	r0, pc, #163840	; 0x28000
 8016a58:	7463656a 	strbtvc	r6, [r3], #-1386	; 0xfffffa96
 8016a5c:	79656b2e 	stmdbvc	r5!, {r1, r2, r3, r5, r8, r9, fp, sp, lr}^
 8016a60:	78742873 	ldmdavc	r4!, {r0, r1, r4, r5, r6, fp, sp}^
 8016a64:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
 8016a68:	2e295d6c 	cdpcs	13, 2, cr5, cr9, cr12, {3}
 8016a6c:	45726f66 	ldrbmi	r6, [r2, #-3942]!	; 0xfffff09a
 8016a70:	28686361 	stmdacs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
 8016a74:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 8016a78:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 8016a7c:	79656b28 	stmdbvc	r5!, {r3, r5, r8, r9, fp, sp, lr}^
 8016a80:	0a7b2029 	beq	9edeb2c <__exidx_end+0x1ec6b80>
 8016a84:	61760909 	cmnvs	r6, r9, lsl #18
 8016a88:	61762072 	cmnvs	r6, r2, ror r0
 8016a8c:	2065756c 	rsbcs	r7, r5, ip, ror #10
 8016a90:	7874203d 	ldmdavc	r4!, {r0, r2, r3, r4, r5, sp}^
 8016a94:	65735b74 	ldrbvs	r5, [r3, #-2932]!	; 0xfffff48c
 8016a98:	6b5b5d6c 	blvs	96ee050 <__exidx_end+0x16d60a4>
 8016a9c:	3b5d7965 	blcc	9775038 <__exidx_end+0x175d08c>
 8016aa0:	2009090a 	andcs	r0, r9, sl, lsl #18
 8016aa4:	6c6d7468 	cfstrdvs	mvd7, [sp], #-416	; 0xfffffe60
 8016aa8:	3c223d2b 	stccc	13, cr3, [r2], #-172	; 0xffffff54
 8016aac:	3c3e7274 	lfmcc	f7, 4, [lr], #-464	; 0xfffffe30
 8016ab0:	223e6474 	eorscs	r6, lr, #116, 8	; 0x74000000
 8016ab4:	79656b2b 	stmdbvc	r5!, {r0, r1, r3, r5, r8, r9, fp, sp, lr}^
 8016ab8:	2f3c222b 	svccs	0x003c222b
 8016abc:	3c3e6474 	cfldrscc	mvf6, [lr], #-464	; 0xfffffe30
 8016ac0:	223e6474 	eorscs	r6, lr, #116, 8	; 0x74000000
 8016ac4:	6c61762b 	stclvs	6, cr7, [r1], #-172	; 0xffffff54
 8016ac8:	222b6575 	eorcs	r6, fp, #490733568	; 0x1d400000
 8016acc:	64742f3c 	ldrbtvs	r2, [r4], #-3900	; 0xfffff0c4
 8016ad0:	742f3c3e 	strtvc	r3, [pc], #-3134	; 8016ad8 <index_js+0x4bc>
 8016ad4:	3b223e72 	blcc	88a64a4 <__exidx_end+0x88e4f8>
 8016ad8:	297d090a 	ldmdbcs	sp!, {r1, r3, r8, fp}^
 8016adc:	64090a3b 	strvs	r0, [r9], #-2619	; 0xfffff5c5
 8016ae0:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
 8016ae4:	2e746e65 	cdpcs	14, 7, cr6, cr4, cr5, {3}
 8016ae8:	45746567 	ldrbmi	r6, [r4, #-1383]!	; 0xfffffa99
 8016aec:	656d656c 	strbvs	r6, [sp, #-1388]!	; 0xfffffa94
 8016af0:	7942746e 	stmdbvc	r2, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
 8016af4:	22286449 	eorcs	r6, r8, #1224736768	; 0x49000000
 8016af8:	78546469 	ldmdavc	r4, {r0, r3, r5, r6, sl, sp, lr}^
 8016afc:	2e292274 	mcrcs	2, 1, r2, cr9, cr4, {3}
 8016b00:	656e6e69 	strbvs	r6, [lr, #-3689]!	; 0xfffff197
 8016b04:	4d544872 	ldclmi	8, cr4, [r4, #-456]	; 0xfffffe38
 8016b08:	74683d4c 	strbtvc	r3, [r8], #-3404	; 0xfffff2b4
 8016b0c:	0a3b6c6d 	beq	8ef1cc8 <__exidx_end+0xed9d1c>
 8016b10:	720a0a7d 	andvc	r0, sl, #512000	; 0x7d000
 8016b14:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 8016b18:	73694c72 	cmnvc	r9, #29184	; 0x7200
 8016b1c:	3b292874 	blcc	8a60cf4 <__exidx_end+0xa48d48>
 8016b20:	6e65720a 	cdpvs	2, 6, cr7, cr5, cr10, {0}
 8016b24:	44726564 	ldrbtmi	r6, [r2], #-1380	; 0xfffffa9c
 8016b28:	63657269 	cmnvs	r5, #-1879048186	; 0x90000006
 8016b2c:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8016b30:	0a3b2928 	beq	8ee0fd8 <__exidx_end+0xec902c>
 8016b34:	646e6572 	strbtvs	r6, [lr], #-1394	; 0xfffffa8e
 8016b38:	65567265 	ldrbvs	r7, [r6, #-613]	; 0xfffffd9b
 8016b3c:	6f697372 	svcvs	0x00697372
 8016b40:	3b29286e 	blcc	8a60d00 <__exidx_end+0xa48d54>
 8016b44:	3332000a 	teqcc	r2, #10
 8016b48:	35322e39 	ldrcc	r2, [r2, #-3641]!	; 0xfffff1c7
 8016b4c:	2e302e35 	mrccs	14, 1, r2, cr0, cr5, {1}
 8016b50:	2e250030 	mcrcs	0, 1, r0, cr5, cr0, {1}
 8016b54:	20733834 	rsbscs	r3, r3, r4, lsr r8
 8016b58:	30007325 	andcc	r7, r0, r5, lsr #6
 8016b5c:	6f4e202e 	svcvs	0x004e202e
 8016b60:	73616320 	cmnvc	r1, #32, 6	; 0x80000000
 8016b64:	6d207365 	stcvs	3, cr7, [r0, #-404]!	; 0xfffffe6c
 8016b68:	68637461 	stmdavs	r3!, {r0, r5, r6, sl, ip, sp, lr}^
 8016b6c:	202c6465 	eorcs	r6, ip, r5, ror #8
 8016b70:	73696874 	cmnvc	r9, #116, 16	; 0x740000
 8016b74:	6f687320 	svcvs	0x00687320
 8016b78:	6e646c75 	mcrvs	12, 3, r6, cr4, cr5, {3}
 8016b7c:	68207427 	stmdavs	r0!, {r0, r1, r2, r5, sl, ip, sp, lr}
 8016b80:	65707061 	ldrbvs	r7, [r0, #-97]!	; 0xffffff9f
 8016b84:	000a216e 	andeq	r2, sl, lr, ror #2
 8016b88:	00505448 	subseq	r5, r0, r8, asr #8
 8016b8c:	0050544c 	subseq	r5, r0, ip, asr #8
 8016b90:	64697242 	strbtvs	r7, [r9], #-578	; 0xfffffdbe
 8016b94:	000a6567 	andeq	r6, sl, r7, ror #10
 8016b98:	72694620 	rsbvc	r4, r9, #32, 12	; 0x2000000
 8016b9c:	7261776d 	rsbvc	r7, r1, #28573696	; 0x1b40000
 8016ba0:	203a2065 	eorscs	r2, sl, r5, rrx
 8016ba4:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8016ba8:	20000a64 	andcs	r0, r0, r4, ror #20
 8016bac:	20444943 	subcs	r4, r4, r3, asr #18
 8016bb0:	20202020 	eorcs	r2, r0, r0, lsr #32
 8016bb4:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8016bb8:	20000a73 	andcs	r0, r0, r3, ror sl
 8016bbc:	7074754f 	rsbsvc	r7, r4, pc, asr #10
 8016bc0:	000a7475 	andeq	r7, sl, r5, ror r4
 8016bc4:	6f502020 	svcvs	0x00502020
 8016bc8:	25207472 	strcs	r7, [r0, #-1138]!	; 0xfffffb8e
 8016bcc:	55206432 	strpl	r6, [r0, #-1074]!	; 0xfffffbce
 8016bd0:	6576696e 	ldrbvs	r6, [r6, #-2414]!	; 0xfffff692
 8016bd4:	20657372 	rsbcs	r7, r5, r2, ror r3
 8016bd8:	64332d25 	ldrtvs	r2, [r3], #-3365	; 0xfffff2db
 8016bdc:	73255b20 			; <UNDEFINED> instruction: 0x73255b20
 8016be0:	20000a5d 	andcs	r0, r0, sp, asr sl
 8016be4:	75706e49 	ldrbvc	r6, [r0, #-3657]!	; 0xfffff1b7
 8016be8:	20000a74 	andcs	r0, r0, r4, ror sl
 8016bec:	726f5020 	rsbvc	r5, pc, #32
 8016bf0:	32252074 	eorcc	r2, r5, #116	; 0x74
 8016bf4:	6e552064 	cdpvs	0, 5, cr2, cr5, cr4, {3}
 8016bf8:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
 8016bfc:	25206573 	strcs	r6, [r0, #-1395]!	; 0xfffffa8d
 8016c00:	2064332d 	rsbcs	r3, r4, sp, lsr #6
 8016c04:	5d64255b 	cfstr64pl	mvdx2, [r4, #-364]!	; 0xfffffe94
 8016c08:	5320000a 			; <UNDEFINED> instruction: 0x5320000a
 8016c0c:	68636e79 	stmdavs	r3!, {r0, r3, r4, r5, r6, r9, sl, fp, sp, lr}^
 8016c10:	696e6f72 	stmdbvs	lr!, {r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 8016c14:	6920657a 	stmdbvs	r0!, {r1, r3, r4, r5, r6, r8, sl, sp, lr}
 8016c18:	69642073 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sp}^
 8016c1c:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
 8016c20:	000a6465 	andeq	r6, sl, r5, ror #8

08016c24 <E131MsgConst::START>:
 8016c24:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
 8016c28:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
 8016c2c:	43417320 	movtmi	r7, #4896	; 0x1320
 8016c30:	3145204e 	cmpcc	r5, lr, asr #32
 8016c34:	0031332e 	eorseq	r3, r1, lr, lsr #6

08016c38 <E131MsgConst::PARAMS>:
 8016c38:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
 8016c3c:	72756769 	rsbsvc	r6, r5, #27525120	; 0x1a40000
 8016c40:	20676e69 	rsbcs	r6, r7, r9, ror #28
 8016c44:	4e434173 	mcrmi	1, 2, r4, cr3, cr3, {3}
 8016c48:	2e314520 	cfabs64cs	mvdx4, mvdx1
 8016c4c:	 	movwvc	r3, #307	; 0x133

08016c4f <E131MsgConst::STARTED>:
 8016c4f:	4e434173 	mcrmi	1, 2, r4, cr3, cr3, {3}
 8016c53:	2e314520 	cfabs64cs	mvdx4, mvdx1
 8016c57:	73203133 			; <UNDEFINED> instruction: 0x73203133
 8016c5b:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
 8016c5f:	69006465 	stmdbvs	r0, {r0, r2, r5, r6, sl, sp, lr}
 8016c63:	7475706e 	ldrbtvc	r7, [r5], #-110	; 0xffffff92
 8016c67:	74756f00 	ldrbtvc	r6, [r5], #-3840	; 0xfffff100
 8016c6b:	00747570 	rsbseq	r7, r4, r0, ror r5
 8016c6f:	00707468 	rsbseq	r7, r0, r8, ror #8
 8016c73:	0070746c 	rsbseq	r7, r0, ip, ror #8
 8016c77:	20584d44 	subscs	r4, r8, r4, asr #26
 8016c7b:	7074754f 	rsbsvc	r7, r4, pc, asr #10
 8016c7f:	44007475 	strmi	r7, [r0], #-1141	; 0xfffffb8b
 8016c83:	4920584d 	stmdbmi	r0!, {r0, r2, r3, r6, fp, ip, lr}
 8016c87:	7475706e 	ldrbtvc	r7, [r5], #-110	; 0xffffff92
 8016c8b:	68744f00 	ldmdavs	r4!, {r8, r9, sl, fp, lr}^
 8016c8f:	 	strvs	r7, [r0], #-613	; 0xfffffd9b

08016c92 <E131ParamsConst::DISABLE_MERGE_TIMEOUT>:
 8016c92:	61736964 	cmnvs	r3, r4, ror #18
 8016c96:	5f656c62 	svcpl	0x00656c62
 8016c9a:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 8016c9e:	69745f65 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
 8016ca2:	756f656d 	strbvc	r6, [pc, #-1389]!	; 801673d <index_js+0x121>
 8016ca6:	 	stmdbvs	r4!, {r2, r4, r5, r6}^

08016ca8 <E131ParamsConst::DISABLE_NETWORK_DATA_LOSS_TIMEOUT>:
 8016ca8:	61736964 	cmnvs	r3, r4, ror #18
 8016cac:	5f656c62 	svcpl	0x00656c62
 8016cb0:	7774656e 	ldrbvc	r6, [r4, -lr, ror #10]!
 8016cb4:	5f6b726f 	svcpl	0x006b726f
 8016cb8:	61746164 	cmnvs	r4, r4, ror #2
 8016cbc:	736f6c5f 	cmnvc	pc, #24320	; 0x5f00
 8016cc0:	69745f73 	ldmdbvs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 8016cc4:	756f656d 	strbvc	r6, [pc, #-1389]!	; 801675f <index_js+0x143>
 8016cc8:	 	rsbsvc	r0, r0, #116	; 0x74

08016cca <E131ParamsConst::PRIORITY>:
 8016cca:	6f697270 	svcvs	0x00697270
 8016cce:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
 8016cd2:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8016cd6:	00615f74 	rsbeq	r5, r1, r4, ror pc
 8016cda:	72700000 	rsbsvc	r0, r0, #0
 8016cde:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 8016ce2:	705f7974 	subsvc	r7, pc, r4, ror r9	; <UNPREDICTABLE>
 8016ce6:	5f74726f 	svcpl	0x0074726f
 8016cea:	00000062 	andeq	r0, r0, r2, rrx
 8016cee:	6f697270 	svcvs	0x00697270
 8016cf2:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
 8016cf6:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8016cfa:	00635f74 	rsbeq	r5, r3, r4, ror pc
 8016cfe:	72700000 	rsbsvc	r0, r0, #0
 8016d02:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
 8016d06:	705f7974 	subsvc	r7, pc, r4, ror r9	; <UNPREDICTABLE>
 8016d0a:	5f74726f 	svcpl	0x0074726f
 8016d0e:	00000064 	andeq	r0, r0, r4, rrx

08016d12 <E131ParamsConst::FILE_NAME>:
 8016d12:	31333165 	teqcc	r3, r5, ror #2
 8016d16:	7478742e 	ldrbtvc	r7, [r8], #-1070	; 0xfffffbd2
	...

08016d1b <E117Const::ACN_PACKET_IDENTIFIER>:
 8016d1b:	2d435341 	stclcs	3, cr5, [r3, #-260]	; 0xfffffefc
 8016d1f:	312e3145 			; <UNDEFINED> instruction: 0x312e3145
 8016d23:	00000037 	andeq	r0, r0, r7, lsr r0

08016d27 <E131BridgeConst::VERSION>:
 8016d27:	33321801 	teqcc	r2, #65536	; 0x10000
 8016d2b:	35322e39 	ldrcc	r2, [r2, #-3641]!	; 0xfffff1c7
 8016d2f:	35322e35 	ldrcc	r2, [r2, #-3637]!	; 0xfffff1cb
 8016d33:	33312e30 	teqcc	r1, #48, 28	; 0x300
 8016d37:	33320033 	teqcc	r2, #51	; 0x33
 8016d3b:	35322e39 	ldrcc	r2, [r2, #-3641]!	; 0xfffff1c7
 8016d3f:	35322e35 	ldrcc	r2, [r2, #-3637]!	; 0xfffff1cb
 8016d43:	33312e30 	teqcc	r1, #48, 28	; 0x300
 8016d47:	4c4c0034 	mcrrmi	0, 3, r0, ip, cr4
 8016d4b:	44205052 	strtmi	r5, [r0], #-82	; 0xffffffae
 8016d4f:	63697665 	cmnvs	r9, #105906176	; 0x6500000
 8016d53:	6f632065 	svcvs	0x00632065
 8016d57:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
 8016d5b:	74617275 	strbtvc	r7, [r1], #-629	; 0xfffffd8b
 8016d5f:	0a6e6f69 	beq	9bb2b0b <__exidx_end+0x1b9ab5f>
 8016d63:	6f502000 	svcvs	0x00502000
 8016d67:	55207472 	strpl	r7, [r0, #-1138]!	; 0xfffffb8e
 8016d6b:	20205044 	eorcs	r5, r0, r4, asr #32
 8016d6f:	20202020 	eorcs	r2, r0, r0, lsr #32
 8016d73:	20202020 	eorcs	r2, r0, r0, lsr #32
 8016d77:	20202020 	eorcs	r2, r0, r0, lsr #32
 8016d7b:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8016d7f:	20000a64 	andcs	r0, r0, r4, ror #20
 8016d83:	746c754d 	strbtvc	r7, [ip], #-1357	; 0xfffffab3
 8016d87:	73616369 	cmnvc	r1, #-1543503871	; 0xa4000001
 8016d8b:	6f6a2074 	svcvs	0x006a2074
 8016d8f:	52206e69 	eorpl	r6, r0, #1680	; 0x690
 8016d93:	65757165 	ldrbvs	r7, [r5, #-357]!	; 0xfffffe9b
 8016d97:	3a207473 	bcc	8833f6b <__exidx_end+0x81bfbf>
 8016d9b:	2e642520 	cdpcs	5, 6, cr2, cr4, cr0, {1}
 8016d9f:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8016da3:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8016da7:	4d20000a 	stcmi	0, cr0, [r0, #-40]!	; 0xffffffd8
 8016dab:	69746c75 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, sl, fp, sp, lr}^
 8016daf:	74736163 	ldrbtvc	r6, [r3], #-355	; 0xfffffe9d
 8016db3:	73655220 	cmnvc	r5, #32, 4
 8016db7:	736e6f70 	cmnvc	lr, #112, 30	; 0x1c0
 8016dbb:	20202065 	eorcs	r2, r0, r5, rrx
 8016dbf:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8016dc3:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8016dc7:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8016dcb:	0a64252e 	beq	992028b <__exidx_end+0x19082df>
	...

08016dd0 <vtable for LLRPDevice>:
	...
 8016dd8:	0800b993 	stmdaeq	r0, {r0, r1, r4, r7, r8, fp, ip, sp, pc}
 8016ddc:	0800b99d 	stmdaeq	r0, {r0, r2, r3, r4, r7, r8, fp, ip, sp, pc}
 8016de0:	0800b995 	stmdaeq	r0, {r0, r2, r4, r7, r8, fp, ip, sp, pc}
 8016de4:	0800b997 	stmdaeq	r0, {r0, r1, r2, r4, r7, r8, fp, ip, sp, pc}
 8016de8:	0800b999 	stmdaeq	r0, {r0, r3, r4, r7, r8, fp, ip, sp, pc}
 8016dec:	4e4d4452 	mcrmi	4, 2, r4, cr13, cr2, {2}
 8016df0:	000a7465 	andeq	r7, sl, r5, ror #8
 8016df4:	44494320 	strbmi	r4, [r9], #-800	; 0xfffffce0
 8016df8:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8016dfc:	52000a73 	andpl	r0, r0, #471040	; 0x73000
 8016e00:	52204d44 	eorpl	r4, r0, #68, 26	; 0x1100
 8016e04:	6f707365 	svcvs	0x00707365
 8016e08:	7265646e 	rsbvc	r6, r5, #1845493760	; 0x6e000000
 8016e0c:	6e6f6320 	cdpvs	3, 6, cr6, cr15, cr0, {1}
 8016e10:	75676966 	strbvc	r6, [r7, #-2406]!	; 0xfffff69a
 8016e14:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
 8016e18:	000a6e6f 	andeq	r6, sl, pc, ror #28
 8016e1c:	6f725020 	svcvs	0x00725020
 8016e20:	6f636f74 	svcvs	0x00636f74
 8016e24:	6556206c 	ldrbvs	r2, [r6, #-108]	; 0xffffff94
 8016e28:	6f697372 	svcvs	0x00697372
 8016e2c:	6425206e 	strtvs	r2, [r5], #-110	; 0xffffff92
 8016e30:	0a64252e 	beq	99202f0 <__exidx_end+0x1908344>
 8016e34:	4d442000 	stclmi	0, cr2, [r4, #-0]
 8016e38:	64412058 	strbvs	r2, [r1], #-88	; 0xffffffa8
 8016e3c:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
 8016e40:	20202073 	eorcs	r2, r0, r3, ror r0
 8016e44:	3a202020 	bcc	881eecc <__exidx_end+0x806f20>
 8016e48:	0a642520 	beq	99202d0 <__exidx_end+0x1908324>
 8016e4c:	4d442000 	stclmi	0, cr2, [r4, #-0]
 8016e50:	6f462058 	svcvs	0x00462058
 8016e54:	7270746f 	rsbsvc	r7, r0, #1862270976	; 0x6f000000
 8016e58:	20746e69 	rsbscs	r6, r4, r9, ror #28
 8016e5c:	3a202020 	bcc	881eee4 <__exidx_end+0x806f38>
 8016e60:	0a642520 	beq	99202e8 <__exidx_end+0x190833c>
 8016e64:	65502000 	ldrbvs	r2, [r0, #-0]
 8016e68:	6e6f7372 	mcrvs	3, 3, r7, cr15, cr2, {3}
 8016e6c:	74696c61 	strbtvc	r6, [r9], #-3169	; 0xfffff39f
 8016e70:	64252079 	strtvs	r2, [r5], #-121	; 0xffffff87
 8016e74:	20666f20 	rsbcs	r6, r6, r0, lsr #30
 8016e78:	5b206425 	blpl	882ff14 <__exidx_end+0x817f68>
 8016e7c:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
 8016e80:	20000a5d 	andcs	r0, r0, sp, asr sl
 8016e84:	20627553 	rsbcs	r7, r2, r3, asr r5
 8016e88:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
 8016e8c:	20736563 	rsbscs	r6, r3, r3, ror #10
 8016e90:	20202020 	eorcs	r2, r0, r0, lsr #32
 8016e94:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8016e98:	20000a64 	andcs	r0, r0, r4, ror #20
 8016e9c:	736e6553 	cmnvc	lr, #348127232	; 0x14c00000
 8016ea0:	2073726f 	rsbscs	r7, r3, pc, ror #4
 8016ea4:	20202020 	eorcs	r2, r0, r0, lsr #32
 8016ea8:	20202020 	eorcs	r2, r0, r0, lsr #32
 8016eac:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8016eb0:	 	strmi	r0, [r0, -r4, ror #20]

08016eb3 <DEVICE_LABEL>:
 8016eb3:	32334447 	eorscc	r4, r3, #1191182336	; 0x47000000
 8016eb7:	37303246 	ldrcc	r3, [r0, -r6, asr #4]!
 8016ebb:	56455f43 	strbpl	r5, [r5], -r3, asr #30
 8016ebf:	52204c41 	eorpl	r4, r0, #16640	; 0x4100
 8016ec3:	52204d44 	eorpl	r4, r0, #68, 26	; 0x1100
 8016ec7:	6f707365 	svcvs	0x00707365
 8016ecb:	7265646e 	rsbvc	r6, r5, #1845493760	; 0x6e000000
	...

08016ed0 <vtable for RDMDeviceResponder>:
	...
 8016ed8:	0800be85 	stmdaeq	r0, {r0, r2, r7, r9, sl, fp, ip, sp, pc}
 8016edc:	0800bea5 	stmdaeq	r0, {r0, r2, r5, r7, r9, sl, fp, ip, sp, pc}
 8016ee0:	0800be7f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r6, r9, sl, fp, ip, sp, pc}
 8016ee4:	0800be81 	stmdaeq	r0, {r0, r7, r9, sl, fp, ip, sp, pc}

08016ee8 <UID_ALL>:
 8016ee8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 8016eec:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>

08016ef0 <RDMHandler::PID_DEFINITIONS>:
 8016ef0:	00000060 	andeq	r0, r0, r0, rrx
 8016ef4:	0800c38d 	stmdaeq	r0, {r0, r2, r3, r7, r8, r9, lr, pc}
	...
 8016f04:	01010000 	mrseq	r0, (UNDEF: 1)
 8016f08:	00000080 	andeq	r0, r0, r0, lsl #1
 8016f0c:	0800c475 	stmdaeq	r0, {r0, r2, r4, r5, r6, sl, lr, pc}
	...
 8016f1c:	01010100 	mrseq	r0, (UNDEF: 17)
 8016f20:	00000081 	andeq	r0, r0, r1, lsl #1
 8016f24:	0800c491 	stmdaeq	r0, {r0, r4, r7, sl, lr, pc}
	...
 8016f34:	01010100 	mrseq	r0, (UNDEF: 17)
 8016f38:	00000082 	andeq	r0, r0, r2, lsl #1
 8016f3c:	0800c4b1 	stmdaeq	r0, {r0, r4, r5, r7, sl, lr, pc}
 8016f40:	00000000 	andeq	r0, r0, r0
 8016f44:	0800c601 	stmdaeq	r0, {r0, r9, sl, lr, pc}
 8016f48:	00000000 	andeq	r0, r0, r0
 8016f4c:	01010100 	mrseq	r0, (UNDEF: 17)
 8016f50:	00000090 	muleq	r0, r0, r0
 8016f54:	0800c3f5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r8, r9, lr, pc}
 8016f58:	00000000 	andeq	r0, r0, r0
 8016f5c:	0800c5cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, r8, sl, lr, pc}
 8016f60:	00000000 	andeq	r0, r0, r0
 8016f64:	01010100 	mrseq	r0, (UNDEF: 17)
 8016f68:	00001000 	andeq	r1, r0, r0
 8016f6c:	0800c4ed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, sl, lr, pc}
 8016f70:	00000000 	andeq	r0, r0, r0
 8016f74:	0800c551 	stmdaeq	r0, {r0, r4, r6, r8, sl, lr, pc}
 8016f78:	00000000 	andeq	r0, r0, r0
 8016f7c:	01010000 	mrseq	r0, (UNDEF: 1)
 8016f80:	00001001 	andeq	r1, r0, r1
	...
 8016f8c:	0800c509 	stmdaeq	r0, {r0, r3, r8, sl, lr, pc}
 8016f90:	00000000 	andeq	r0, r0, r0
 8016f94:	01010100 	mrseq	r0, (UNDEF: 17)
 8016f98:	00000700 	andeq	r0, r0, r0, lsl #14
 8016f9c:	0800c8e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, fp, lr, pc}
	...
 8016fac:	01000000 	mrseq	r0, (UNDEF: 0)
 8016fb0:	00000701 	andeq	r0, r0, r1, lsl #14
 8016fb4:	0800c90d 	stmdaeq	r0, {r0, r2, r3, r8, fp, lr, pc}
	...
 8016fc4:	01000004 	tsteq	r0, r4
 8016fc8:	00000702 	andeq	r0, r0, r2, lsl #14
 8016fcc:	0800c959 	stmdaeq	r0, {r0, r3, r4, r6, r8, fp, lr, pc}
	...
 8016fdc:	01000004 	tsteq	r0, r4
 8016fe0:	00000703 	andeq	r0, r0, r3, lsl #14
 8016fe4:	0800c989 	stmdaeq	r0, {r0, r3, r7, r8, fp, lr, pc}
 8016fe8:	00000000 	andeq	r0, r0, r0
 8016fec:	0800c9b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8, fp, lr, pc}
 8016ff0:	00000000 	andeq	r0, r0, r0
 8016ff4:	01000004 	tsteq	r0, r4
 8016ff8:	00000704 	andeq	r0, r0, r4, lsl #14
 8016ffc:	0800ca21 	stmdaeq	r0, {r0, r5, r9, fp, lr, pc}
 8017000:	00000000 	andeq	r0, r0, r0
 8017004:	0800ca51 	stmdaeq	r0, {r0, r4, r6, r9, fp, lr, pc}
 8017008:	00000000 	andeq	r0, r0, r0
 801700c:	01000004 	tsteq	r0, r4
 8017010:	00000705 	andeq	r0, r0, r5, lsl #14
 8017014:	0800cac5 	stmdaeq	r0, {r0, r2, r6, r7, r9, fp, lr, pc}
	...
 8017024:	01000004 	tsteq	r0, r4
 8017028:	00000707 	andeq	r0, r0, r7, lsl #14
	...
 8017034:	0800ca99 	stmdaeq	r0, {r0, r3, r4, r7, r9, fp, lr, pc}
 8017038:	00000000 	andeq	r0, r0, r0
 801703c:	01000004 	tsteq	r0, r4
 8017040:	00000706 	andeq	r0, r0, r6, lsl #14
 8017044:	0800cb0d 	stmdaeq	r0, {r0, r2, r3, r8, r9, fp, lr, pc}
 8017048:	00000000 	andeq	r0, r0, r0
 801704c:	0800cb51 	stmdaeq	r0, {r0, r4, r6, r8, r9, fp, lr, pc}
 8017050:	00000000 	andeq	r0, r0, r0
 8017054:	01000004 	tsteq	r0, r4
 8017058:	00000709 	andeq	r0, r0, r9, lsl #14
	...
 8017064:	0800cb9d 	stmdaeq	r0, {r0, r2, r3, r4, r7, r8, r9, fp, lr, pc}
 8017068:	00000000 	andeq	r0, r0, r0
 801706c:	01000004 	tsteq	r0, r4
 8017070:	0000070b 	andeq	r0, r0, fp, lsl #14
 8017074:	0800c9fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, fp, lr, pc}
	...
 8017084:	01000001 	tsteq	r0, r1
 8017088:	0000070a 	andeq	r0, r0, sl, lsl #14
 801708c:	0800cbc5 	stmdaeq	r0, {r0, r2, r6, r7, r8, r9, fp, lr, pc}
 8017090:	00000000 	andeq	r0, r0, r0
 8017094:	0800cbfd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, r9, fp, lr, pc}
 8017098:	00000000 	andeq	r0, r0, r0
 801709c:	01000004 	tsteq	r0, r4
 80170a0:	0000070c 	andeq	r0, r0, ip, lsl #14
 80170a4:	0800cc05 	stmdaeq	r0, {r0, r2, sl, fp, lr, pc}
 80170a8:	00000000 	andeq	r0, r0, r0
 80170ac:	0800cc35 	stmdaeq	r0, {r0, r2, r4, r5, sl, fp, lr, pc}
 80170b0:	00000000 	andeq	r0, r0, r0
 80170b4:	01000000 	mrseq	r0, (UNDEF: 0)
 80170b8:	0000070d 	andeq	r0, r0, sp, lsl #14
 80170bc:	0800cc69 	stmdaeq	r0, {r0, r3, r5, r6, sl, fp, lr, pc}
 80170c0:	00000000 	andeq	r0, r0, r0
 80170c4:	0800cc99 	stmdaeq	r0, {r0, r3, r4, r7, sl, fp, lr, pc}
 80170c8:	00000000 	andeq	r0, r0, r0
 80170cc:	01000000 	mrseq	r0, (UNDEF: 0)
 80170d0:	70747468 	rsbsvc	r7, r4, r8, ror #8
 80170d4:	672f2f3a 			; <UNDEFINED> instruction: 0x672f2f3a
 80170d8:	2d323364 	ldccs	3, cr3, [r2, #-400]!	; 0xfffffe70
 80170dc:	2e786d64 	cdpcs	13, 7, cr6, cr8, cr4, {3}
 80170e0:	0067726f 	rsbeq	r7, r7, pc, ror #4
 80170e4:	204d4452 	subcs	r4, sp, r2, asr r4
 80170e8:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
 80170ec:	63206563 			; <UNDEFINED> instruction: 0x63206563
 80170f0:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
 80170f4:	61727567 	cmnvs	r2, r7, ror #10
 80170f8:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 80170fc:	4d20000a 	stcmi	0, cr0, [r0, #-40]!	; 0xffffffd8
 8017100:	66756e61 	ldrbtvs	r6, [r5], -r1, ror #28
 8017104:	75746361 	ldrbvc	r6, [r4, #-865]!	; 0xfffffc9f
 8017108:	20726572 	rsbscs	r6, r2, r2, ror r5
 801710c:	656d614e 	strbvs	r6, [sp, #-334]!	; 0xfffffeb2
 8017110:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8017114:	0a732a2e 	beq	9ce19d4 <__exidx_end+0x1cc9a28>
 8017118:	614d2000 	mrsvs	r2, (UNDEF: 77)
 801711c:	6166756e 	cmnvs	r6, lr, ror #10
 8017120:	72757463 	rsbsvc	r7, r5, #1660944384	; 0x63000000
 8017124:	49207265 	stmdbmi	r0!, {r0, r2, r5, r6, r9, ip, sp, lr}
 8017128:	20202044 	eorcs	r2, r0, r4, asr #32
 801712c:	2e25203a 	mcrcs	0, 1, r2, cr5, cr10, {1}
 8017130:	2e255832 	mcrcs	8, 1, r5, cr5, cr2, {1}
 8017134:	000a5832 	andeq	r5, sl, r2, lsr r8
 8017138:	72655320 	rsbvc	r5, r5, #32, 6	; 0x80000000
 801713c:	206c6169 	rsbcs	r6, ip, r9, ror #2
 8017140:	626d754e 	rsbvs	r7, sp, #327155712	; 0x13800000
 8017144:	20207265 	eorcs	r7, r0, r5, ror #4
 8017148:	3a202020 	bcc	881f1d0 <__exidx_end+0x807224>
 801714c:	322e2520 	eorcc	r2, lr, #32, 10	; 0x8000000
 8017150:	322e2558 	eorcc	r2, lr, #88, 10	; 0x16000000
 8017154:	322e2558 	eorcc	r2, lr, #88, 10	; 0x16000000
 8017158:	322e2558 	eorcc	r2, lr, #88, 10	; 0x16000000
 801715c:	20000a58 	andcs	r0, r0, r8, asr sl
 8017160:	746f6f52 	strbtvc	r6, [pc], #-3922	; 8017168 <RDMHandler::PID_DEFINITIONS+0x278>
 8017164:	62616c20 	rsbvs	r6, r1, #32, 24	; 0x2000
 8017168:	20206c65 	eorcs	r6, r0, r5, ror #24
 801716c:	20202020 	eorcs	r2, r0, r0, lsr #32
 8017170:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8017174:	732a2e25 			; <UNDEFINED> instruction: 0x732a2e25
 8017178:	5020000a 	eorpl	r0, r0, sl
 801717c:	75646f72 	strbvc	r6, [r4, #-3954]!	; 0xfffff08e
 8017180:	43207463 			; <UNDEFINED> instruction: 0x43207463
 8017184:	67657461 	strbvs	r7, [r5, -r1, ror #8]!
 8017188:	2079726f 	rsbscs	r7, r9, pc, ror #4
 801718c:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 8017190:	2558322e 	ldrbcs	r3, [r8, #-558]	; 0xfffffdd2
 8017194:	0a58322e 	beq	9623a54 <__exidx_end+0x160baa8>
 8017198:	72502000 	subsvc	r2, r0, #0
 801719c:	6375646f 	cmnvs	r5, #1862270976	; 0x6f000000
 80171a0:	65442074 	strbvs	r2, [r4, #-116]	; 0xffffff8c
 80171a4:	6c696174 	stfvse	f6, [r9], #-464	; 0xfffffe30
 80171a8:	20202020 	eorcs	r2, r0, r0, lsr #32
 80171ac:	2e25203a 	mcrcs	0, 1, r2, cr5, cr10, {1}
 80171b0:	2e255832 	mcrcs	8, 1, r5, cr5, cr2, {1}
 80171b4:	000a5832 	andeq	r5, sl, r2, lsr r8

080171b8 <DEVICE_LABEL>:
 80171b8:	32334447 	eorscc	r4, r3, #1191182336	; 0x47000000
 80171bc:	37303246 	ldrcc	r3, [r0, -r6, asr #4]!
 80171c0:	56455f43 	strbpl	r5, [r5], -r3, asr #30
 80171c4:	52204c41 	eorpl	r4, r0, #16640	; 0x4100
 80171c8:	44204d44 	strtmi	r4, [r0], #-3396	; 0xfffff2bc
 80171cc:	63697665 	cmnvs	r9, #105906176	; 0x6500000
 80171d0:	 	subseq	r0, r0, r5, rrx

080171d2 <RDMConst::MANUFACTURER_ID>:
 80171d2:	 	strbtvc	r0, [r8], #-80	; 0xffffffb0

080171d4 <RDMConst::MANUFACTURER_NAME>:
 80171d4:	70747468 	rsbsvc	r7, r4, r8, ror #8
 80171d8:	772f2f3a 			; <UNDEFINED> instruction: 0x772f2f3a
 80171dc:	6f2e7777 	svcvs	0x002e7777
 80171e0:	676e6172 			; <UNDEFINED> instruction: 0x676e6172
 80171e4:	2d697065 	stclcs	0, cr7, [r9, #-404]!	; 0xfffffe6c
 80171e8:	2e786d64 	cdpcs	13, 7, cr6, cr8, cr4, {3}
 80171ec:	0067726f 	rsbeq	r7, r7, pc, ror #4
 80171f0:	78383025 	ldmdavc	r8!, {r0, r2, r5, ip, sp}
 80171f4:	3430252d 	ldrtcc	r2, [r0], #-1325	; 0xfffffad3
 80171f8:	30252d78 	eorcc	r2, r5, r8, ror sp
 80171fc:	252d7834 	strcs	r7, [sp, #-2100]!	; 0xfffff7cc
 8017200:	25783230 	ldrbcs	r3, [r8, #-560]!	; 0xfffffdd0
 8017204:	2d783230 	lfmcs	f3, 2, [r8, #-192]!	; 0xffffff40
 8017208:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 801720c:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 8017210:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 8017214:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 8017218:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 801721c:	78323025 	ldmdavc	r2!, {r0, r2, r5, ip, sp}
 8017220:	78695000 	stmdavc	r9!, {ip, lr}^
 8017224:	44206c65 	strtmi	r6, [r0], #-3173	; 0xfffff39b
 8017228:	7020584d 	eorvc	r5, r0, sp, asr #16
 801722c:	6d617261 	sfmvs	f7, 2, [r1, #-388]!	; 0xfffffe7c
 8017230:	72657465 	rsbvc	r7, r5, #1694498816	; 0x65000000
 8017234:	20000a73 	andcs	r0, r0, r3, ror sl
 8017238:	7074754f 	rsbsvc	r7, r4, pc, asr #10
 801723c:	20737475 	rsbscs	r7, r3, r5, ror r4
 8017240:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8017244:	4720000a 	strmi	r0, [r0, -sl]!
 8017248:	70756f72 	rsbsvc	r6, r5, r2, ror pc
 801724c:	20676e69 	rsbcs	r6, r7, r9, ror #28
 8017250:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 8017254:	203a2074 	eorscs	r2, sl, r4, ror r0
 8017258:	5b206425 	blpl	88302f4 <__exidx_end+0x818348>
 801725c:	756f7247 	strbvc	r7, [pc, #-583]!	; 801701d <RDMHandler::PID_DEFINITIONS+0x12d>
 8017260:	3a207370 	bcc	8834028 <__exidx_end+0x81c07c>
 8017264:	5d642520 	cfstr64pl	mvdx2, [r4, #-128]!	; 0xffffff80
 8017268:	0000000a 	andeq	r0, r0, sl

0801726c <vtable for WS28xxDmxMulti>:
	...
 8017274:	0800ced5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r9, sl, fp, lr, pc}
 8017278:	0800cef5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r9, sl, fp, lr, pc}
 801727c:	0800ceb3 	stmdaeq	r0, {r0, r1, r4, r5, r7, r9, sl, fp, lr, pc}
 8017280:	0800d075 	stmdaeq	r0, {r0, r2, r4, r5, r6, ip, lr, pc}
 8017284:	0800cf2f 	stmdaeq	r0, {r0, r1, r2, r3, r5, r8, r9, sl, fp, lr, pc}
 8017288:	0800cf07 	stmdaeq	r0, {r0, r1, r2, r8, r9, sl, fp, lr, pc}
 801728c:	0800d041 	stmdaeq	r0, {r0, r6, ip, lr, pc}
 8017290:	0800cea5 	stmdaeq	r0, {r0, r2, r5, r7, r9, sl, fp, lr, pc}
 8017294:	0800cea9 	stmdaeq	r0, {r0, r3, r5, r7, r9, sl, fp, lr, pc}
 8017298:	0800ceaf 	stmdaeq	r0, {r0, r1, r2, r3, r5, r7, r9, sl, fp, lr, pc}
 801729c:	08012c2d 	stmdaeq	r1, {r0, r2, r3, r5, sl, fp, sp}
 80172a0:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 80172a4:	2a2e253a 	bcs	8ba0794 <__exidx_end+0xb887e8>
 80172a8:	23002c66 	movwcs	r2, #3174	; 0xc66
 80172ac:	253d7325 	ldrcs	r7, [sp, #-805]!	; 0xfffffcdb
 80172b0:	0a662a2e 	beq	99a1b70 <__exidx_end+0x1989bc4>
 80172b4:	65764f00 	ldrbvs	r4, [r6, #-3840]!	; 0xfffff100
 80172b8:	69727772 	ldmdbvs	r2!, {r1, r4, r5, r6, r8, r9, sl, ip, sp, lr}^
 80172bc:	64206574 	strtvs	r6, [r0], #-1396	; 0xfffffa8c
 80172c0:	73617461 	cmnvc	r1, #1627389952	; 0x61000000
 80172c4:	74656568 	strbtvc	r6, [r5], #-1384	; 0xfffffa98
 80172c8:	65764f00 	ldrbvs	r4, [r6, #-3840]!	; 0xfffff100
 80172cc:	69727772 	ldmdbvs	r2!, {r1, r4, r5, r6, r8, r9, sl, ip, sp, lr}^
 80172d0:	74206574 	strtvc	r6, [r0], #-1396	; 0xfffffa8c
 80172d4:	6e696d69 	cdpvs	13, 6, cr6, cr9, cr9, {3}
 80172d8:	75282067 	strvc	r2, [r8, #-103]!	; 0xffffff99
 80172dc:	47002973 	smlsdxmi	r0, r3, r9, r2
 80172e0:	70756f72 	rsbsvc	r6, r5, r2, ror pc
 80172e4:	00676e69 	rsbeq	r6, r7, r9, ror #28
 80172e8:	636f6c43 	cmnvs	pc, #17152	; 0x4300
 80172ec:	6162206b 	cmnvs	r2, fp, rrx
 80172f0:	20646573 	rsbcs	r6, r4, r3, ror r5
 80172f4:	70696863 	rsbvc	r6, r9, r3, ror #16
 80172f8:	50410073 	subpl	r0, r1, r3, ror r0
 80172fc:	32303141 	eorscc	r3, r0, #1073741840	; 0x40000010
 8017300:	394b532f 	stmdbcc	fp, {r0, r1, r2, r3, r5, r8, r9, ip, lr}^
 8017304:	00323238 	eorseq	r3, r2, r8, lsr r2
 8017308:	74736554 	ldrbtvc	r6, [r3], #-1364	; 0xfffffaac
 801730c:	74617020 	strbtvc	r7, [r1], #-32	; 0xffffffe0
 8017310:	6e726574 	mrcvs	5, 3, r6, cr2, cr4, {3}
 8017314:	6b6e5500 	blvs	9bac71c <__exidx_end+0x1b94770>
 8017318:	6e776f6e 	cdpvs	15, 7, cr6, cr7, cr14, {3}
 801731c:	646e5500 	strbtvs	r5, [lr], #-1280	; 0xfffffb00
 8017320:	6e696665 	cdpvs	6, 6, cr6, cr9, cr5, {3}
 8017324:	 	andpl	r6, r0, #1694498816	; 0x65000000

08017327 <PixelType::MAPS>:
 8017327:	00424752 	subeq	r4, r2, r2, asr r7
 801732b:	00474252 	subeq	r4, r7, r2, asr r2
 801732f:	00425247 	subeq	r5, r2, r7, asr #4
 8017333:	00524247 	subseq	r4, r2, r7, asr #4
 8017337:	00475242 	subeq	r5, r7, r2, asr #4
 801733b:	00524742 	subseq	r4, r2, r2, asr #14

0801733f <PixelType::TYPES>:
 801733f:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 8017343:	00003130 	andeq	r3, r0, r0, lsr r1
 8017347:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 801734b:	00003131 	andeq	r3, r0, r1, lsr r1
 801734f:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 8017353:	00003231 	andeq	r3, r0, r1, lsr r2
 8017357:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 801735b:	00423231 	subeq	r3, r2, r1, lsr r2
 801735f:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 8017363:	00003331 	andeq	r3, r0, r1, lsr r3
 8017367:	38325357 	ldmdacc	r2!, {r0, r1, r2, r4, r6, r8, r9, ip, lr}
 801736b:	00003531 	andeq	r3, r0, r1, lsr r5
 801736f:	38364b53 	ldmdacc	r6!, {r0, r1, r4, r6, r8, r9, fp, lr}
 8017373:	00003231 	andeq	r3, r0, r1, lsr r2
 8017377:	38364b53 	ldmdacc	r6!, {r0, r1, r4, r6, r8, r9, fp, lr}
 801737b:	00573231 	subseq	r3, r7, r1, lsr r2
 801737f:	31534355 	cmpcc	r3, r5, asr r3
 8017383:	00333039 	eorseq	r3, r3, r9, lsr r0
 8017387:	32534355 	subscc	r4, r3, #1409286145	; 0x54000001
 801738b:	00333039 	eorseq	r3, r3, r9, lsr r0
 801738f:	38385343 	ldmdacc	r8!, {r0, r1, r6, r8, r9, ip, lr}
 8017393:	00003231 	andeq	r3, r0, r1, lsr r2
 8017397:	31415041 	cmpcc	r1, r1, asr #32
 801739b:	00003230 	andeq	r3, r0, r0, lsr r2
 801739f:	38394b53 	ldmdacc	r9!, {r0, r1, r4, r6, r8, r9, fp, lr}
 80173a3:	00003232 	andeq	r3, r0, r2, lsr r2
 80173a7:	31383950 	teqcc	r8, r0, asr r9
 80173ab:	00000033 	andeq	r0, r0, r3, lsr r0
 80173af:	65786950 	ldrbvs	r6, [r8, #-2384]!	; 0xfffff6b0
 80173b3:	20000a6c 	andcs	r0, r0, ip, ror #20
 80173b7:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
 80173bb:	203a2020 	eorscs	r2, sl, r0, lsr #32
 80173bf:	5b207325 	blpl	883405b <__exidx_end+0x81c0af>
 80173c3:	205d6425 	subscs	r6, sp, r5, lsr #8
 80173c7:	7325202d 			; <UNDEFINED> instruction: 0x7325202d
 80173cb:	64255b20 	strtvs	r5, [r5], #-2848	; 0xfffff4e0
 80173cf:	20000a5d 	andcs	r0, r0, sp, asr sl
 80173d3:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
 80173d7:	203a2074 	eorscs	r2, sl, r4, ror r0
 80173db:	000a6425 	andeq	r6, sl, r5, lsr #8
	...

080173e0 <s_GPIO_PINs>:
 80173e0:	000000c0 	andeq	r0, r0, r0, asr #1

080173e4 <s_aStorSize>:
 80173e4:	00000060 	andeq	r0, r0, r0, rrx
 80173e8:	00000090 	muleq	r0, r0, r0
 80173ec:	00000020 	andeq	r0, r0, r0, lsr #32
 80173f0:	00000040 	andeq	r0, r0, r0, asr #32
 80173f4:	00000060 	andeq	r0, r0, r0, rrx
 80173f8:	00000040 	andeq	r0, r0, r0, asr #32
 80173fc:	00000020 	andeq	r0, r0, r0, lsr #32
 8017400:	00000020 	andeq	r0, r0, r0, lsr #32
 8017404:	000001e0 	andeq	r0, r0, r0, ror #3
 8017408:	00000040 	andeq	r0, r0, r0, asr #32
 801740c:	00000020 	andeq	r0, r0, r0, lsr #32
 8017410:	00000060 	andeq	r0, r0, r0, rrx
 8017414:	00000030 	andeq	r0, r0, r0, lsr r0
 8017418:	00000020 	andeq	r0, r0, r0, lsr #32
 801741c:	000003b0 			; <UNDEFINED> instruction: 0x000003b0
 8017420:	00000030 	andeq	r0, r0, r0, lsr r0
 8017424:	00000040 	andeq	r0, r0, r0, asr #32
 8017428:	00000020 	andeq	r0, r0, r0, lsr #32
 801742c:	00000060 	andeq	r0, r0, r0, rrx
 8017430:	00000020 	andeq	r0, r0, r0, lsr #32
 8017434:	00000400 	andeq	r0, r0, r0, lsl #8
 8017438:	00000020 	andeq	r0, r0, r0, lsr #32
 801743c:	00000020 	andeq	r0, r0, r0, lsr #32
 8017440:	00000040 	andeq	r0, r0, r0, asr #32
 8017444:	00000060 	andeq	r0, r0, r0, rrx
 8017448:	00000020 	andeq	r0, r0, r0, lsr #32
 801744c:	00000020 	andeq	r0, r0, r0, lsr #32
 8017450:	00000020 	andeq	r0, r0, r0, lsr #32

08017454 <vtable for StoreDisplayUdf>:
	...
 801745c:	0800ea51 	stmdaeq	r0, {r0, r4, r6, r9, fp, sp, lr, pc}
 8017460:	0800ea99 	stmdaeq	r0, {r0, r3, r4, r7, r9, fp, sp, lr, pc}
 8017464:	0800ea75 	stmdaeq	r0, {r0, r2, r4, r5, r6, r9, fp, sp, lr, pc}
 8017468:	0800ea55 	stmdaeq	r0, {r0, r2, r4, r6, r9, fp, sp, lr, pc}

0801746c <vtable for StoreE131>:
	...
 8017474:	0800eab9 	stmdaeq	r0, {r0, r3, r4, r5, r7, r9, fp, sp, lr, pc}
 8017478:	0800eb01 	stmdaeq	r0, {r0, r8, r9, fp, sp, lr, pc}
 801747c:	0800eadd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r9, fp, sp, lr, pc}
 8017480:	0800eabd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, r9, fp, sp, lr, pc}

08017484 <vtable for StoreNetwork>:
	...
 801748c:	0800eb21 	stmdaeq	r0, {r0, r5, r8, r9, fp, sp, lr, pc}
 8017490:	0800ec05 	stmdaeq	r0, {r0, r2, sl, fp, sp, lr, pc}
 8017494:	0800eb29 	stmdaeq	r0, {r0, r3, r5, r8, r9, fp, sp, lr, pc}
 8017498:	0800ec19 	stmdaeq	r0, {r0, r3, r4, sl, fp, sp, lr, pc}
 801749c:	0800eba9 	stmdaeq	r0, {r0, r3, r5, r7, r8, r9, fp, sp, lr, pc}
 80174a0:	0800eb7d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r8, r9, fp, sp, lr, pc}
 80174a4:	0800eb4d 	stmdaeq	r0, {r0, r2, r3, r6, r8, r9, fp, sp, lr, pc}
 80174a8:	0800ebd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp, sp, lr, pc}
 80174ac:	080081b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, r8, pc}
 80174b0:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 80174b4:	00000000 	andeq	r0, r0, r0
 80174b8:	0800eb23 	stmdaeq	r0, {r0, r1, r5, r8, r9, fp, sp, lr, pc}
 80174bc:	0800ec11 	stmdaeq	r0, {r0, r4, sl, fp, sp, lr, pc}
 80174c0:	0800ebcd 	stmdaeq	r0, {r0, r2, r3, r6, r7, r8, r9, fp, sp, lr, pc}
 80174c4:	0800eba1 	stmdaeq	r0, {r0, r5, r7, r8, r9, fp, sp, lr, pc}
 80174c8:	0800eb75 	stmdaeq	r0, {r0, r2, r4, r5, r6, r8, r9, fp, sp, lr, pc}
 80174cc:	0800ebfd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, r9, fp, sp, lr, pc}
 80174d0:	080081e1 	stmdaeq	r0, {r0, r5, r6, r7, r8, pc}

080174d4 <vtable for StoreRDMDevice>:
	...
 80174dc:	0800ec4d 	stmdaeq	r0, {r0, r2, r3, r6, sl, fp, sp, lr, pc}
 80174e0:	0800ecbd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, sl, fp, sp, lr, pc}
 80174e4:	0800ec55 	stmdaeq	r0, {r0, r2, r4, r6, sl, fp, sp, lr, pc}
 80174e8:	0800ecd1 	stmdaeq	r0, {r0, r4, r6, r7, sl, fp, sp, lr, pc}
 80174ec:	0800ec79 	stmdaeq	r0, {r0, r3, r4, r5, r6, sl, fp, sp, lr, pc}
 80174f0:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 80174f4:	00000000 	andeq	r0, r0, r0
 80174f8:	0800ec4f 	stmdaeq	r0, {r0, r1, r2, r3, r6, sl, fp, sp, lr, pc}
 80174fc:	0800ecc9 	stmdaeq	r0, {r0, r3, r6, r7, sl, fp, sp, lr, pc}
 8017500:	0800ecb5 	stmdaeq	r0, {r0, r2, r4, r5, r7, sl, fp, sp, lr, pc}

08017504 <vtable for StoreRemoteConfig>:
	...
 801750c:	0800ed09 	stmdaeq	r0, {r0, r3, r8, sl, fp, sp, lr, pc}
 8017510:	0800ed51 	stmdaeq	r0, {r0, r4, r6, r8, sl, fp, sp, lr, pc}
 8017514:	0800ed2d 	stmdaeq	r0, {r0, r2, r3, r5, r8, sl, fp, sp, lr, pc}
 8017518:	0800ed0d 	stmdaeq	r0, {r0, r2, r3, r8, sl, fp, sp, lr, pc}

0801751c <vtable for StoreWS28xxDmx>:
	...
 8017524:	0800ed71 	stmdaeq	r0, {r0, r4, r5, r6, r8, sl, fp, sp, lr, pc}
 8017528:	0800eee1 	stmdaeq	r0, {r0, r5, r6, r7, r9, sl, fp, sp, lr, pc}
 801752c:	0800ed79 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, sl, fp, sp, lr, pc}
 8017530:	0800eef5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r9, sl, fp, sp, lr, pc}
 8017534:	0800eead 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, sl, fp, sp, lr, pc}
 8017538:	0800ee79 	stmdaeq	r0, {r0, r3, r4, r5, r6, r9, sl, fp, sp, lr, pc}
 801753c:	0800ee41 	stmdaeq	r0, {r0, r6, r9, sl, fp, sp, lr, pc}
 8017540:	0800ee09 	stmdaeq	r0, {r0, r3, r9, sl, fp, sp, lr, pc}
 8017544:	0800edd1 	stmdaeq	r0, {r0, r4, r6, r7, r8, sl, fp, sp, lr, pc}
 8017548:	0800ed9d 	stmdaeq	r0, {r0, r2, r3, r4, r7, r8, sl, fp, sp, lr, pc}
 801754c:	fffffffc 			; <UNDEFINED> instruction: 0xfffffffc
 8017550:	00000000 	andeq	r0, r0, r0
 8017554:	0800ed73 	stmdaeq	r0, {r0, r1, r4, r5, r6, r8, sl, fp, sp, lr, pc}
 8017558:	0800eeed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, r9, sl, fp, sp, lr, pc}
 801755c:	0800eed9 	stmdaeq	r0, {r0, r3, r4, r6, r7, r9, sl, fp, sp, lr, pc}
 8017560:	0800eea5 	stmdaeq	r0, {r0, r2, r5, r7, r9, sl, fp, sp, lr, pc}
 8017564:	0800ee71 	stmdaeq	r0, {r0, r4, r5, r6, r9, sl, fp, sp, lr, pc}
 8017568:	0800ee39 	stmdaeq	r0, {r0, r3, r4, r5, r9, sl, fp, sp, lr, pc}
 801756c:	0800ee01 	stmdaeq	r0, {r0, r9, sl, fp, sp, lr, pc}
 8017570:	0800edc9 	stmdaeq	r0, {r0, r3, r6, r7, r8, sl, fp, sp, lr, pc}
 8017574:	32334447 	eorscc	r4, r3, #1191182336	; 0x47000000
 8017578:	37303246 	ldrcc	r3, [r0, -r6, asr #4]!
 801757c:	74654400 	strbtvc	r4, [r5], #-1024	; 0xfffffc00
 8017580:	65746365 	ldrbvs	r6, [r4, #-869]!	; 0xfffffc9b
 8017584:	73252064 			; <UNDEFINED> instruction: 0x73252064
 8017588:	74697720 	strbtvc	r7, [r9], #-1824	; 0xfffff8e0
 801758c:	6f742068 	svcvs	0x00742068
 8017590:	206c6174 	rsbcs	r6, ip, r4, ror r1
 8017594:	62206425 	eorvs	r6, r0, #620756992	; 0x25000000
 8017598:	73657479 	cmnvc	r5, #2030043136	; 0x79000000
 801759c:	64255b20 	strtvs	r5, [r5], #-2848	; 0xfffff4e0
 80175a0:	5d426b20 	vstrpl	d22, [r2, #-128]	; 0xffffff80
 80175a4:	6374000a 	cmnvs	r4, #10
 80175a8:	65625f70 	strbvs	r5, [r2, #-3952]!	; 0xfffff090
 80175ac:	3a6e6967 	bcc	9bb1b50 <__exidx_end+0x1b99ba4>
 80175b0:	6f6f7420 	svcvs	0x006f7420
 80175b4:	6e616d20 	cdpvs	13, 6, cr6, cr1, cr0, {1}
 80175b8:	6f632079 	svcvs	0x00632079
 80175bc:	63656e6e 	cmnvs	r5, #1760	; 0x6e0
 80175c0:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 80175c4:	69620073 	stmdbvs	r2!, {r0, r1, r4, r5, r6}^
 80175c8:	7500646e 	strvc	r6, [r0, #-1134]	; 0xfffffb92
 80175cc:	6e69626e 	cdpvs	2, 6, cr6, cr9, cr14, {3}
 80175d0:	41000a64 	tstmi	r0, r4, ror #20
 80175d4:	6c205052 	stcvs	0, cr5, [r0], #-328	; 0xfffffeb8
 80175d8:	756b6f6f 	strbvc	r6, [fp, #-3951]!	; 0xfffff091
 80175dc:	61662070 	smcvs	25088	; 0x6200
 80175e0:	64656c69 	strbtvs	r6, [r5], #-3177	; 0xfffff397
 80175e4:	203e2d20 	eorscs	r2, lr, r0, lsr #26
 80175e8:	61666564 	cmnvs	r6, r4, ror #10
 80175ec:	20746c75 	rsbscs	r6, r4, r5, ror ip
 80175f0:	65746167 	ldrbvs	r6, [r4, #-359]!	; 0xfffffe99
 80175f4:	0a796177 	beq	9e6fbd8 <__exidx_end+0x1e57c2c>
 80175f8:	50524100 	subspl	r4, r2, r0, lsl #2
 80175fc:	6f6f6c20 	svcvs	0x006f6c20
 8017600:	2070756b 	rsbscs	r7, r0, fp, ror #10
 8017604:	6c696166 	stfvse	f6, [r9], #-408	; 0xfffffe68
 8017608:	000a6465 	andeq	r6, sl, r5, ror #8

0801760c <NetworkConst::MSG_NETWORK_INIT>:
 801760c:	7774654e 	ldrbvc	r6, [r4, -lr, asr #10]!
 8017610:	206b726f 	rsbcs	r7, fp, pc, ror #4
 8017614:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
 8017618:	34323200 	ldrtcc	r3, [r2], #-512	; 0xfffffe00
 801761c:	302e302e 	eorcc	r3, lr, lr, lsr #32
 8017620:	3135322e 	teqcc	r5, lr, lsr #4
 8017624:	63745f00 	cmnvs	r4, #0, 30
 8017628:	6f6c2e70 	svcvs	0x006c2e70
 801762c:	006c6163 	rsbeq	r6, ip, r3, ror #2
 8017630:	7265735f 	rsbvc	r7, r5, #2080374785	; 0x7c000001
 8017634:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
 8017638:	645f2e73 	ldrbvs	r2, [pc], #-3699	; 8017640 <NetworkConst::MSG_NETWORK_INIT+0x34>
 801763c:	732d736e 			; <UNDEFINED> instruction: 0x732d736e
 8017640:	755f2e64 	ldrbvc	r2, [pc, #-3684]	; 80167e4 <index_js+0x1c8>
 8017644:	6c2e7064 	stcvs	0, cr7, [lr], #-400	; 0xfffffe70
 8017648:	6c61636f 	stclvs	3, cr6, [r1], #-444	; 0xfffffe44
 801764c:	4e446d00 	cdpmi	13, 4, cr6, cr4, cr0, {0}
 8017650:	20000a53 	andcs	r0, r0, r3, asr sl
 8017654:	20746f4e 	rsbscs	r6, r4, lr, asr #30
 8017658:	6e6e7572 	mcrvs	5, 3, r7, cr14, cr2, {3}
 801765c:	0a676e69 	beq	99f3008 <__exidx_end+0x19db05c>
 8017660:	614e2000 	mrsvs	r2, (UNDEF: 78)
 8017664:	3a20656d 	bcc	8830c20 <__exidx_end+0x818c74>
 8017668:	0a732520 	beq	9ce0af0 <__exidx_end+0x1cc8b44>
 801766c:	73252000 			; <UNDEFINED> instruction: 0x73252000
 8017670:	20642520 	rsbcs	r2, r4, r0, lsr #10
 8017674:	000a7325 	andeq	r7, sl, r5, lsr #6
 8017678:	30687465 	rsbcc	r7, r8, r5, ror #8
 801767c:	67696700 	strbvs	r6, [r9, -r0, lsl #14]!
 8017680:	76656461 	strbtvc	r6, [r5], -r1, ror #8
 8017684:	5f656369 	svcpl	0x00656369
 8017688:	74654e00 	strbtvc	r4, [r5], #-3584	; 0xfffff200
 801768c:	6b726f77 	blvs	9cb3470 <__exidx_end+0x1c9b4c4>
 8017690:	4820000a 	stmdami	r0!, {r1, r3}
 8017694:	6e74736f 	cdpvs	3, 7, cr7, cr4, cr15, {3}
 8017698:	20656d61 	rsbcs	r6, r5, r1, ror #26
 801769c:	25203a20 	strcs	r3, [r0, #-2592]!	; 0xfffff5e0
 80176a0:	20000a73 	andcs	r0, r0, r3, ror sl
 80176a4:	614e6649 	cmpvs	lr, r9, asr #12
 80176a8:	2020656d 	eorcs	r6, r0, sp, ror #10
 80176ac:	203a2020 	eorscs	r2, sl, r0, lsr #32
 80176b0:	203a6425 	eorscs	r6, sl, r5, lsr #8
 80176b4:	000a7325 	andeq	r7, sl, r5, lsr #6
 80176b8:	656e4920 	strbvs	r4, [lr, #-2336]!	; 0xfffff6e0
 80176bc:	20202074 	eorcs	r2, r0, r4, ror r0
 80176c0:	3a202020 	bcc	881f748 <__exidx_end+0x80779c>
 80176c4:	2e642520 	cdpcs	5, 6, cr2, cr4, cr0, {1}
 80176c8:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80176cc:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80176d0:	0a64252f 	beq	9920b94 <__exidx_end+0x1908be8>
 80176d4:	654e2000 	strbvs	r2, [lr, #-0]
 80176d8:	73616d74 	cmnvc	r1, #116, 26	; 0x1d00
 80176dc:	2020206b 	eorcs	r2, r0, fp, rrx
 80176e0:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 80176e4:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 80176e8:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80176ec:	20000a64 	andcs	r0, r0, r4, ror #20
 80176f0:	65746147 	ldrbvs	r6, [r4, #-327]!	; 0xfffffeb9
 80176f4:	20796177 	rsbscs	r6, r9, r7, ror r1
 80176f8:	203a2020 	eorscs	r2, sl, r0, lsr #32
 80176fc:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8017700:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8017704:	0a64252e 	beq	9920bc4 <__exidx_end+0x1908c18>
 8017708:	72422000 	subvc	r2, r2, #0
 801770c:	6364616f 	cmnvs	r4, #-1073741797	; 0xc000001b
 8017710:	20747361 	rsbscs	r7, r4, r1, ror #6
 8017714:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8017718:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801771c:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8017720:	20000a64 	andcs	r0, r0, r4, ror #20
 8017724:	2063614d 	rsbcs	r6, r3, sp, asr #2
 8017728:	20202020 	eorcs	r2, r0, r0, lsr #32
 801772c:	203a2020 	eorscs	r2, sl, r0, lsr #32
 8017730:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8017734:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 8017738:	2e253a78 			; <UNDEFINED> instruction: 0x2e253a78
 801773c:	253a7832 	ldrcs	r7, [sl, #-2098]!	; 0xfffff7ce
 8017740:	3a78322e 	bcc	9e24000 <__exidx_end+0x1e0c054>
 8017744:	78322e25 	ldmdavc	r2!, {r0, r2, r5, r9, sl, fp, sp}
 8017748:	322e253a 	eorcc	r2, lr, #243269632	; 0xe800000
 801774c:	20000a78 	andcs	r0, r0, r8, ror sl
 8017750:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
 8017754:	20202020 	eorcs	r2, r0, r0, lsr #32
 8017758:	203a2020 	eorscs	r2, sl, r0, lsr #32
 801775c:	000a6325 	andeq	r6, sl, r5, lsr #6
 8017760:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
 8017764:	49206369 	stmdbmi	r0!, {r0, r3, r5, r6, r8, r9, sp, lr}
 8017768:	544e0050 	strbpl	r0, [lr], #-80	; 0xffffffb0
 801776c:	65532050 	ldrbvs	r2, [r3, #-80]	; 0xffffffb0
 8017770:	72657672 	rsbvc	r7, r5, #119537664	; 0x7200000
	...

08017775 <NetworkParamsConst::IP_ADDRESS>:
 8017775:	615f7069 	cmpvs	pc, r9, rrx
 8017779:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0xfffffb9c
 801777d:	 	mcrvs	3, 0, r7, cr0, cr3, {3}

08017780 <NetworkParamsConst::NTP_SERVER>:
 8017780:	5f70746e 	svcpl	0x0070746e
 8017784:	76726573 			; <UNDEFINED> instruction: 0x76726573
 8017788:	 	cdpvs	2, 0, cr7, cr0, cr5, {3}

0801778b <NetworkParamsConst::NTP_UTC_OFFSET>:
 801778b:	5f70746e 	svcpl	0x0070746e
 801778f:	5f637475 	svcpl	0x00637475
 8017793:	7366666f 	cmnvc	r6, #116391936	; 0x6f00000
 8017797:	 	strvs	r7, [r0], #-1125	; 0xfffffb9b

0801779a <NetworkParamsConst::DEFAULT_GATEWAY>:
 801779a:	61666564 	cmnvs	r6, r4, ror #10
 801779e:	5f746c75 	svcpl	0x00746c75
 80177a2:	65746167 	ldrbvs	r6, [r4, #-359]!	; 0xfffffe99
 80177a6:	00796177 	rsbseq	r6, r9, r7, ror r1

080177aa <NetworkParamsConst::DHCP_RETRY_TIME>:
 80177aa:	70636864 	rsbvc	r6, r3, r4, ror #16
 80177ae:	7465725f 	strbtvc	r7, [r5], #-607	; 0xfffffda1
 80177b2:	745f7972 	ldrbvc	r7, [pc], #-2418	; 80177ba <NetworkParamsConst::HOSTNAME>
 80177b6:	00656d69 	rsbeq	r6, r5, r9, ror #26

080177ba <NetworkParamsConst::HOSTNAME>:
 80177ba:	74736f68 	ldrbtvc	r6, [r3], #-3944	; 0xfffff098
 80177be:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
	...

080177c3 <NetworkParamsConst::NET_MASK>:
 80177c3:	5f74656e 	svcpl	0x0074656e
 80177c7:	6b73616d 	blvs	9cefd83 <__exidx_end+0x1cd7dd7>
	...

080177cc <NetworkParamsConst::USE_DHCP>:
 80177cc:	5f657375 	svcpl	0x00657375
 80177d0:	70636864 	rsbvc	r6, r3, r4, ror #16
	...

080177d5 <NetworkParamsConst::FILE_NAME>:
 80177d5:	7774656e 	ldrbvc	r6, [r4, -lr, ror #10]!
 80177d9:	2e6b726f 	cdpcs	2, 6, cr7, cr11, cr15, {3}
 80177dd:	00747874 	rsbseq	r7, r4, r4, ror r8
 80177e1:	65687445 	strbvs	r7, [r8, #-1093]!	; 0xfffffbbb
 80177e5:	74656e72 	strbtvc	r6, [r5], #-3698	; 0xfffff18e
 80177e9:	61747320 	cmnvs	r4, r0, lsr #6
 80177ed:	25007472 	strcs	r7, [r0, #-1138]	; 0xfffffb8e
 80177f1:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80177f5:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 80177f9:	252f6425 	strcs	r6, [pc, #-1061]!	; 80173dc <PixelType::TYPES+0x9d>
 80177fd:	63252064 			; <UNDEFINED> instruction: 0x63252064
 8017801:	203a4e00 	eorscs	r4, sl, r0, lsl #28
 8017805:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 8017809:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 801780d:	0064252e 	rsbeq	r2, r4, lr, lsr #10
 8017811:	25203a47 	strcs	r3, [r0, #-2631]!	; 0xfffff5b9
 8017815:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 8017819:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 801781d:	46006425 	strmi	r6, [r0], -r5, lsr #8
 8017821:	776d7269 	strbvc	r7, [sp, -r9, ror #4]!
 8017825:	20657261 	rsbcs	r7, r5, r1, ror #4
 8017829:	2a2e2556 	bcs	8ba0d89 <__exidx_end+0xb88ddd>
 801782d:	48440073 	stmdami	r4, {r0, r1, r4, r5, r6}^
 8017831:	72205043 	eorvc	r5, r0, #67	; 0x43
 8017835:	77656e65 	strbvc	r6, [r5, -r5, ror #28]!
 8017839:	00676e69 	rsbeq	r6, r7, r9, ror #28
 801783d:	50434844 	subpl	r4, r3, r4, asr #16
 8017841:	74657220 	strbtvc	r7, [r5], #-544	; 0xfffffde0
 8017845:	6e697972 			; <UNDEFINED> instruction: 0x6e697972
 8017849:	654e0067 	strbvs	r0, [lr, #-103]	; 0xffffff99
 801784d:	726f7774 	rsbvc	r7, pc, #116, 14	; 0x1d00000
 8017851:	6873206b 	ldmdavs	r3!, {r0, r1, r3, r5, r6, sp}^
 8017855:	6f647475 	svcvs	0x00647475
 8017859:	 			; <UNDEFINED> instruction: 0xf0006e77

0801785c <pArray>:
 801785c:	080178f0 	stmdaeq	r1, {r4, r5, r6, r7, fp, ip, sp, lr}
 8017860:	080178ac 	stmdaeq	r1, {r2, r3, r5, r7, fp, ip, sp, lr}
 8017864:	08017775 	stmdaeq	r1, {r0, r2, r4, r5, r6, r8, r9, sl, ip, sp, lr}
 8017868:	080178f6 	stmdaeq	r1, {r1, r2, r4, r5, r6, r7, fp, ip, sp, lr}
 801786c:	08017b1a 	stmdaeq	r1, {r1, r3, r4, r8, r9, fp, ip, sp, lr}
 8017870:	080178b7 	stmdaeq	r1, {r0, r1, r2, r4, r5, r7, fp, ip, sp, lr}
 8017874:	08016117 	stmdaeq	r1, {r0, r1, r2, r4, r8, sp, lr}
 8017878:	080177ba 	stmdaeq	r1, {r1, r3, r4, r5, r7, r8, r9, sl, ip, sp, lr}
 801787c:	080179f0 	stmdaeq	r1, {r4, r5, r6, r7, r8, fp, ip, sp, lr}
 8017880:	08017a00 	stmdaeq	r1, {r9, fp, ip, sp, lr}
 8017884:	08017a10 	stmdaeq	r1, {r4, r9, fp, ip, sp, lr}
 8017888:	08017a20 	stmdaeq	r1, {r5, r9, fp, ip, sp, lr}
 801788c:	080177c3 	stmdaeq	r1, {r0, r1, r6, r7, r8, r9, sl, ip, sp, lr}
 8017890:	08017b08 	stmdaeq	r1, {r3, r8, r9, fp, ip, sp, lr}
 8017894:	08016117 	stmdaeq	r1, {r0, r1, r2, r4, r8, sp, lr}
 8017898:	08016117 	stmdaeq	r1, {r0, r1, r2, r4, r8, sp, lr}
 801789c:	08016117 	stmdaeq	r1, {r0, r1, r2, r4, r8, sp, lr}
 80178a0:	08016117 	stmdaeq	r1, {r0, r1, r2, r4, r8, sp, lr}
 80178a4:	0801779a 	stmdaeq	r1, {r1, r3, r4, r7, r8, r9, sl, ip, sp, lr}
 80178a8:	080178c4 	stmdaeq	r1, {r2, r6, r7, fp, ip, sp, lr}

080178ac <DisplayUdfParamsConst::BOARD_NAME>:
 80178ac:	72616f62 	rsbvc	r6, r1, #392	; 0x188
 80178b0:	616e5f64 	cmnvs	lr, r4, ror #30
 80178b4:	 	tstvs	r0, sp, ror #10

080178b7 <DisplayUdfParamsConst::ACTIVE_PORTS>:
 80178b7:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 80178bb:	705f6576 	subsvc	r6, pc, r6, ror r5	; <UNPREDICTABLE>
 80178bf:	7374726f 	cmnvc	r4, #-268435450	; 0xf0000006
	...

080178c4 <DisplayUdfParamsConst::DMX_DIRECTION>:
 80178c4:	5f786d64 	svcpl	0x00786d64
 80178c8:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 80178cc:	6f697463 	svcvs	0x00697463
 80178d0:	 	ldclvs	0, cr0, [r3], #-440	; 0xfffffe48

080178d2 <DisplayUdfParamsConst::SLEEP_TIMEOUT>:
 80178d2:	65656c73 	strbvs	r6, [r5, #-3187]!	; 0xfffff38d
 80178d6:	69745f70 	ldmdbvs	r4!, {r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 80178da:	756f656d 	strbvc	r6, [pc, #-1389]!	; 8017375 <PixelType::TYPES+0x36>
 80178de:	 	stclvs	0, cr0, [r6], #-464	; 0xfffffe30

080178e0 <DisplayUdfParamsConst::FLIP_VERTICALLY>:
 80178e0:	70696c66 	rsbvc	r6, r9, r6, ror #24
 80178e4:	7265765f 	rsbvc	r7, r5, #99614720	; 0x5f00000
 80178e8:	61636974 	smcvs	13972	; 0x3694
 80178ec:	00796c6c 	rsbseq	r6, r9, ip, ror #24

080178f0 <DisplayUdfParamsConst::TITLE>:
 80178f0:	6c746974 			; <UNDEFINED> instruction: 0x6c746974
 80178f4:	 	ldrbvs	r0, [r6, #-101]!	; 0xffffff9b

080178f6 <DisplayUdfParamsConst::VERSION>:
 80178f6:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
 80178fa:	006e6f69 	rsbeq	r6, lr, r9, ror #30

080178fe <DisplayUdfParamsConst::FILE_NAME>:
 80178fe:	70736964 	rsbsvc	r6, r3, r4, ror #18
 8017902:	2e79616c 	rpwcsez	f6, f1, #4.0
 8017906:	00747874 	rsbseq	r7, r4, r4, ror r8

0801790a <DisplayUdfParamsConst::INTENSITY>:
 801790a:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
 801790e:	7469736e 	strbtvc	r7, [r9], #-878	; 0xfffffc92
 8017912:	50410079 	subpl	r0, r1, r9, ror r0
 8017916:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 801791a:	726f5000 	rsbvc	r5, pc, #0
 801791e:	63252074 			; <UNDEFINED> instruction: 0x63252074
 8017922:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
 8017926:	00732520 	rsbseq	r2, r3, r0, lsr #10
 801792a:	44206f4e 	strtmi	r6, [r0], #-3918	; 0xfffff0b2
 801792e:	4400584d 	strmi	r5, [r0], #-2125	; 0xfffff7b3
 8017932:	2520584d 	strcs	r5, [r0, #-2125]!	; 0xfffff7b3
 8017936:	64252073 	strtvs	r2, [r5], #-115	; 0xffffff8d
	...

0801793b <DevicesParamsConst::ACTIVE_OUT>:
 801793b:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
 801793f:	6f5f6576 	svcvs	0x005f6576
 8017943:	 	movwvs	r7, #1141	; 0x475

08017946 <DevicesParamsConst::SPI_SPEED_HZ>:
 8017946:	636f6c63 	cmnvs	pc, #25344	; 0x6300
 801794a:	70735f6b 	rsbsvc	r5, r3, fp, ror #30
 801794e:	5f646565 	svcpl	0x00646565
 8017952:	 			; <UNDEFINED> instruction: 0x6c007a68

08017955 <DevicesParamsConst::GROUPING_COUNT>:
 8017955:	5f64656c 	svcpl	0x0064656c
 8017959:	756f7267 	strbvc	r7, [pc, #-615]!	; 80176fa <NetworkConst::MSG_NETWORK_INIT+0xee>
 801795d:	6f635f70 	svcvs	0x00635f70
 8017961:	00746e75 	rsbseq	r6, r4, r5, ror lr

08017965 <DevicesParamsConst::GLOBAL_BRIGHTNESS>:
 8017965:	626f6c67 	rsbvs	r6, pc, #26368	; 0x6700
 8017969:	625f6c61 	subsvs	r6, pc, #24832	; 0x6100
 801796d:	68676972 	stmdavs	r7!, {r1, r4, r5, r6, r8, fp, sp, lr}^
 8017971:	73656e74 	cmnvc	r5, #116, 28	; 0x740
 8017975:	 	strbvs	r0, [ip, #-115]!	; 0xffffff8d

08017977 <DevicesParamsConst::MAP>:
 8017977:	5f64656c 	svcpl	0x0064656c
 801797b:	5f626772 	svcpl	0x00626772
 801797f:	7070616d 	rsbsvc	r6, r0, sp, ror #2
 8017983:	00676e69 	rsbeq	r6, r7, r9, ror #28

08017987 <DevicesParamsConst::TYPE>:
 8017987:	5f64656c 	svcpl	0x0064656c
 801798b:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
	...

08017990 <DevicesParamsConst::COUNT>:
 8017990:	5f64656c 	svcpl	0x0064656c
 8017994:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
 8017998:	 	strbvs	r0, [ip, #-116]!	; 0xffffff8c

0801799a <DevicesParamsConst::LED_T0H>:
 801799a:	5f64656c 	svcpl	0x0064656c
 801799e:	00683074 	rsbeq	r3, r8, r4, ror r0

080179a2 <DevicesParamsConst::LED_T1H>:
 80179a2:	5f64656c 	svcpl	0x0064656c
 80179a6:	00683174 	rsbeq	r3, r8, r4, ror r1

080179aa <DevicesParamsConst::FILE_NAME>:
 80179aa:	69766564 	ldmdbvs	r6!, {r2, r5, r6, r8, sl, sp, lr}^
 80179ae:	2e736563 	cdpcs	5, 7, cr6, cr3, cr3, {3}
 80179b2:	00747874 	rsbseq	r7, r4, r4, ror r8
 80179b6:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
 80179ba:	6425223a 	strtvs	r2, [r5], #-570	; 0xfffffdc6
 80179be:	2e64252e 	cdpcs	5, 6, cr2, cr4, cr14, {1}
 80179c2:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80179c6:	002c2264 	eoreq	r2, ip, r4, ror #4
 80179ca:	3d732523 	cfldr64cc	mvdx2, [r3, #-140]!	; 0xffffff74
 80179ce:	252e6425 	strcs	r6, [lr, #-1061]!	; 0xfffffbdb
 80179d2:	64252e64 	strtvs	r2, [r5], #-3684	; 0xfffff19c
 80179d6:	0a64252e 	beq	9920e96 <__exidx_end+0x1908eea>
 80179da:	25202300 	strcs	r2, [r0, #-768]!	; 0xfffffd00
 80179de:	0a232073 	beq	88dfbb2 <__exidx_end+0x8c7c06>
	...

080179e3 <LightSetParamsConst::TEST_PATTERN>:
 80179e3:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
 80179e7:	7461705f 	strbtvc	r7, [r1], #-95	; 0xffffffa1
 80179eb:	6e726574 	mrcvs	5, 3, r6, cr2, cr4, {3}
	...

080179f0 <LightSetParamsConst::UNIVERSE_PORT>:
 80179f0:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 80179f4:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 80179f8:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 80179fc:	00615f74 	rsbeq	r5, r1, r4, ror pc
 8017a00:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 8017a04:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8017a08:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8017a0c:	00625f74 	rsbeq	r5, r2, r4, ror pc
 8017a10:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 8017a14:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8017a18:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8017a1c:	00635f74 	rsbeq	r5, r3, r4, ror pc
 8017a20:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 8017a24:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
 8017a28:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8017a2c:	00645f74 	rsbeq	r5, r4, r4, ror pc

08017a30 <LightSetParamsConst::START_UNI_PORT>:
 8017a30:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8017a34:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 8017a38:	6f705f69 	svcvs	0x00705f69
 8017a3c:	315f7472 	cmpcc	pc, r2, ror r4	; <UNPREDICTABLE>
 8017a40:	74730000 	ldrbtvc	r0, [r3], #-0
 8017a44:	5f747261 	svcpl	0x00747261
 8017a48:	5f696e75 	svcpl	0x00696e75
 8017a4c:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8017a50:	0000325f 	andeq	r3, r0, pc, asr r2
 8017a54:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8017a58:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 8017a5c:	6f705f69 	svcvs	0x00705f69
 8017a60:	335f7472 	cmpcc	pc, #1912602624	; 0x72000000
 8017a64:	74730000 	ldrbtvc	r0, [r3], #-0
 8017a68:	5f747261 	svcpl	0x00747261
 8017a6c:	5f696e75 	svcpl	0x00696e75
 8017a70:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8017a74:	0000345f 	andeq	r3, r0, pc, asr r4
 8017a78:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8017a7c:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 8017a80:	6f705f69 	svcvs	0x00705f69
 8017a84:	355f7472 	ldrbcc	r7, [pc, #-1138]	; 801761a <NetworkConst::MSG_NETWORK_INIT+0xe>
 8017a88:	74730000 	ldrbtvc	r0, [r3], #-0
 8017a8c:	5f747261 	svcpl	0x00747261
 8017a90:	5f696e75 	svcpl	0x00696e75
 8017a94:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8017a98:	0000365f 	andeq	r3, r0, pc, asr r6
 8017a9c:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8017aa0:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
 8017aa4:	6f705f69 	svcvs	0x00705f69
 8017aa8:	375f7472 			; <UNDEFINED> instruction: 0x375f7472
 8017aac:	74730000 	ldrbtvc	r0, [r3], #-0
 8017ab0:	5f747261 	svcpl	0x00747261
 8017ab4:	5f696e75 	svcpl	0x00696e75
 8017ab8:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8017abc:	0000385f 	andeq	r3, r0, pc, asr r8

08017ac0 <LightSetParamsConst::MERGE_MODE_PORT>:
 8017ac0:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 8017ac4:	6f6d5f65 	svcvs	0x006d5f65
 8017ac8:	705f6564 	subsvc	r6, pc, r4, ror #10
 8017acc:	5f74726f 	svcpl	0x0074726f
 8017ad0:	656d0061 	strbvs	r0, [sp, #-97]!	; 0xffffff9f
 8017ad4:	5f656772 	svcpl	0x00656772
 8017ad8:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
 8017adc:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8017ae0:	00625f74 	rsbeq	r5, r2, r4, ror pc
 8017ae4:	6772656d 	ldrbvs	r6, [r2, -sp, ror #10]!
 8017ae8:	6f6d5f65 	svcvs	0x006d5f65
 8017aec:	705f6564 	subsvc	r6, pc, r4, ror #10
 8017af0:	5f74726f 	svcpl	0x0074726f
 8017af4:	656d0063 	strbvs	r0, [sp, #-99]!	; 0xffffff9d
 8017af8:	5f656772 	svcpl	0x00656772
 8017afc:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
 8017b00:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
 8017b04:	00645f74 	rsbeq	r5, r4, r4, ror pc

08017b08 <LightSetParamsConst::DMX_START_ADDRESS>:
 8017b08:	5f786d64 	svcpl	0x00786d64
 8017b0c:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 8017b10:	64615f74 	strbtvs	r5, [r1], #-3956	; 0xfffff08c
 8017b14:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
 8017b18:	 	mrcvs	0, 3, r0, cr5, cr3, {3}

08017b1a <LightSetParamsConst::UNIVERSE>:
 8017b1a:	76696e75 			; <UNDEFINED> instruction: 0x76696e75
 8017b1e:	65737265 	ldrbvs	r7, [r3, #-613]!	; 0xfffffd9b
	...

08017b23 <LightSetParamsConst::DIRECTION>:
 8017b23:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8017b27:	6f697463 	svcvs	0x00697463
 8017b2b:	6f705f6e 	svcvs	0x00705f6e
 8017b2f:	615f7472 	cmpvs	pc, r2, ror r4	; <UNPREDICTABLE>
 8017b33:	69640000 	stmdbvs	r4!, {}^	; <UNPREDICTABLE>
 8017b37:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 8017b3b:	5f6e6f69 	svcpl	0x006e6f69
 8017b3f:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8017b43:	0000625f 	andeq	r6, r0, pc, asr r2
 8017b47:	65726964 	ldrbvs	r6, [r2, #-2404]!	; 0xfffff69c
 8017b4b:	6f697463 	svcvs	0x00697463
 8017b4f:	6f705f6e 	svcvs	0x00705f6e
 8017b53:	635f7472 	cmpvs	pc, #1912602624	; 0x72000000
 8017b57:	69640000 	stmdbvs	r4!, {}^	; <UNPREDICTABLE>
 8017b5b:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
 8017b5f:	5f6e6f69 	svcpl	0x006e6f69
 8017b63:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 8017b67:	0000645f 	andeq	r6, r0, pc, asr r4
 8017b6b:	64206f4e 	strtvs	r6, [r0], #-3918	; 0xfffff0b2
 8017b6f:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
 8017b73:	66207961 	strtvs	r7, [r0], -r1, ror #18
 8017b77:	646e756f 	strbtvs	r7, [lr], #-1391	; 0xfffffa91
 8017b7b:	31485300 	mrscc	r5, (UNDEF: 120)
 8017b7f:	00363031 	eorseq	r3, r6, r1, lsr r0
 8017b83:	31445353 	cmpcc	r4, r3, asr r3
 8017b87:	00363033 	eorseq	r3, r6, r3, lsr r0
 8017b8b:	28207325 	stmdacs	r0!, {r0, r2, r5, r8, r9, ip, sp, lr}
 8017b8f:	252c6425 	strcs	r6, [ip, #-1061]!	; 0xfffffbdb
 8017b93:	000a2964 	andeq	r2, sl, r4, ror #18
 8017b97:	aaeeaa40 	bge	7bc249f <__stack_size+0x7bc049f>
 8017b9b:	000000ee 	andeq	r0, r0, lr, ror #1
	...

08017ba0 <_OledFont8x6>:
 8017ba0:	00000040 	andeq	r0, r0, r0, asr #32
 8017ba4:	40000000 	andmi	r0, r0, r0
 8017ba8:	005f0000 	subseq	r0, pc, r0
 8017bac:	00400000 	subeq	r0, r0, r0
 8017bb0:	00070007 	andeq	r0, r7, r7
 8017bb4:	7f144000 	svcvc	0x00144000
 8017bb8:	00147f14 	andseq	r7, r4, r4, lsl pc
 8017bbc:	7f2a2440 	svcvc	0x002a2440
 8017bc0:	4000122a 	andmi	r1, r0, sl, lsr #4
 8017bc4:	64081323 	strvs	r1, [r8], #-803	; 0xfffffcdd
 8017bc8:	36400062 	strbcc	r0, [r0], -r2, rrx
 8017bcc:	50205649 	eorpl	r5, r0, r9, asr #12
 8017bd0:	08004000 	stmdaeq	r0, {lr}
 8017bd4:	00000307 	andeq	r0, r0, r7, lsl #6
 8017bd8:	221c0040 	andscs	r0, ip, #64	; 0x40
 8017bdc:	40000041 	andmi	r0, r0, r1, asr #32
 8017be0:	1c224100 	stfnes	f4, [r2], #-0
 8017be4:	2a400000 	bcs	9017bec <__exidx_end+0xfffc40>
 8017be8:	2a1c7f1c 	bcs	8737860 <__exidx_end+0x71f8b4>
 8017bec:	08084000 	stmdaeq	r8, {lr}
 8017bf0:	0008083e 	andeq	r0, r8, lr, lsr r8
 8017bf4:	70800040 	addvc	r0, r0, r0, asr #32
 8017bf8:	40000030 	andmi	r0, r0, r0, lsr r0
 8017bfc:	08080808 	stmdaeq	r8, {r3, fp}
 8017c00:	00400008 	subeq	r0, r0, r8
 8017c04:	00606000 	rsbeq	r6, r0, r0
 8017c08:	10204000 	eorne	r4, r0, r0
 8017c0c:	00020408 	andeq	r0, r2, r8, lsl #8
 8017c10:	49513e40 	ldmdbmi	r1, {r6, r9, sl, fp, ip, sp}^
 8017c14:	40003e45 	andmi	r3, r0, r5, asr #28
 8017c18:	407f4200 	rsbsmi	r4, pc, r0, lsl #4
 8017c1c:	72400000 	subvc	r0, r0, #0
 8017c20:	46494949 	strbmi	r4, [r9], -r9, asr #18
 8017c24:	41214000 			; <UNDEFINED> instruction: 0x41214000
 8017c28:	00334d49 	eorseq	r4, r3, r9, asr #26
 8017c2c:	12141840 	andsne	r1, r4, #64, 16	; 0x400000
 8017c30:	4000107f 	andmi	r1, r0, pc, ror r0
 8017c34:	45454527 	strbmi	r4, [r5, #-1319]	; 0xfffffad9
 8017c38:	3c400039 	mcrrcc	0, 3, r0, r0, cr9
 8017c3c:	3149494a 	cmpcc	r9, sl, asr #18
 8017c40:	21414000 	mrscs	r4, (UNDEF: 65)
 8017c44:	00070911 	andeq	r0, r7, r1, lsl r9
 8017c48:	49493640 	stmdbmi	r9, {r6, r9, sl, ip, sp}^
 8017c4c:	40003649 	andmi	r3, r0, r9, asr #12
 8017c50:	29494946 	stmdbcs	r9, {r1, r2, r6, r8, fp, lr}^
 8017c54:	0040001e 	subeq	r0, r0, lr, lsl r0
 8017c58:	00001400 	andeq	r1, r0, r0, lsl #8
 8017c5c:	40004000 	andmi	r4, r0, r0
 8017c60:	00000034 	andeq	r0, r0, r4, lsr r0
 8017c64:	14080040 	strne	r0, [r8], #-64	; 0xffffffc0
 8017c68:	40004122 	andmi	r4, r0, r2, lsr #2
 8017c6c:	14141414 	ldrne	r1, [r4], #-1044	; 0xfffffbec
 8017c70:	00400014 	subeq	r0, r0, r4, lsl r0
 8017c74:	08142241 	ldmdaeq	r4, {r0, r6, r9, sp}
 8017c78:	01024000 	mrseq	r4, (UNDEF: 2)
 8017c7c:	00060959 	andeq	r0, r6, r9, asr r9
 8017c80:	5d413e40 	stclpl	14, cr3, [r1, #-256]	; 0xffffff00
 8017c84:	40004e59 	andmi	r4, r0, r9, asr lr
 8017c88:	1211127c 	andsne	r1, r1, #124, 4	; 0xc0000007
 8017c8c:	7f40007c 	svcvc	0x0040007c
 8017c90:	36494949 	strbcc	r4, [r9], -r9, asr #18
 8017c94:	413e4000 	teqmi	lr, r0
 8017c98:	00224141 	eoreq	r4, r2, r1, asr #2
 8017c9c:	41417f40 	cmpmi	r1, r0, asr #30
 8017ca0:	40003e41 	andmi	r3, r0, r1, asr #28
 8017ca4:	4949497f 	stmdbmi	r9, {r0, r1, r2, r3, r4, r5, r6, r8, fp, lr}^
 8017ca8:	7f400041 	svcvc	0x00400041
 8017cac:	01090909 	tsteq	r9, r9, lsl #18
 8017cb0:	413e4000 	teqmi	lr, r0
 8017cb4:	00735141 	rsbseq	r5, r3, r1, asr #2
 8017cb8:	08087f40 	stmdaeq	r8, {r6, r8, r9, sl, fp, ip, sp, lr}
 8017cbc:	40007f08 	andmi	r7, r0, r8, lsl #30
 8017cc0:	417f4100 	cmnmi	pc, r0, lsl #2
 8017cc4:	20400000 	subcs	r0, r0, r0
 8017cc8:	013f4140 	teqeq	pc, r0, asr #2
 8017ccc:	087f4000 	ldmdaeq	pc!, {lr}^	; <UNPREDICTABLE>
 8017cd0:	00412214 	subeq	r2, r1, r4, lsl r2
 8017cd4:	40407f40 	submi	r7, r0, r0, asr #30
 8017cd8:	40004040 	andmi	r4, r0, r0, asr #32
 8017cdc:	021c027f 	andseq	r0, ip, #-268435449	; 0xf0000007
 8017ce0:	7f40007f 	svcvc	0x0040007f
 8017ce4:	7f100804 	svcvc	0x00100804
 8017ce8:	413e4000 	teqmi	lr, r0
 8017cec:	003e4141 	eorseq	r4, lr, r1, asr #2
 8017cf0:	09097f40 	stmdbeq	r9, {r6, r8, r9, sl, fp, ip, sp, lr}
 8017cf4:	40000609 	andmi	r0, r0, r9, lsl #12
 8017cf8:	2151413e 	cmpcs	r1, lr, lsr r1
 8017cfc:	7f40005e 	svcvc	0x0040005e
 8017d00:	46291909 	strtmi	r1, [r9], -r9, lsl #18
 8017d04:	49264000 	stmdbmi	r6!, {lr}
 8017d08:	00324949 	eorseq	r4, r2, r9, asr #18
 8017d0c:	7f010340 	svcvc	0x00010340
 8017d10:	40000301 	andmi	r0, r0, r1, lsl #6
 8017d14:	4040403f 	submi	r4, r0, pc, lsr r0
 8017d18:	1f40003f 	svcne	0x0040003f
 8017d1c:	1f204020 	svcne	0x00204020
 8017d20:	403f4000 	eorsmi	r4, pc, r0
 8017d24:	003f4038 	eorseq	r4, pc, r8, lsr r0	; <UNPREDICTABLE>
 8017d28:	08146340 	ldmdaeq	r4, {r6, r8, r9, sp, lr}
 8017d2c:	40006314 	andmi	r6, r0, r4, lsl r3
 8017d30:	04780403 	ldrbteq	r0, [r8], #-1027	; 0xfffffbfd
 8017d34:	61400003 	cmpvs	r0, r3
 8017d38:	434d4959 	movtmi	r4, #55641	; 0xd959
 8017d3c:	7f004000 	svcvc	0x00004000
 8017d40:	00414141 	subeq	r4, r1, r1, asr #2
 8017d44:	08040240 	stmdaeq	r4, {r6, r9}
 8017d48:	40002010 	andmi	r2, r0, r0, lsl r0
 8017d4c:	41414100 	mrsmi	r4, (UNDEF: 81)
 8017d50:	0440007f 	strbeq	r0, [r0], #-127	; 0xffffff81
 8017d54:	04020102 	streq	r0, [r2], #-258	; 0xfffffefe
 8017d58:	40404000 	submi	r4, r0, r0
 8017d5c:	00404040 	subeq	r4, r0, r0, asr #32
 8017d60:	07030040 	streq	r0, [r3, -r0, asr #32]
 8017d64:	40000008 	andmi	r0, r0, r8
 8017d68:	78545420 	ldmdavc	r4, {r5, sl, ip, lr}^
 8017d6c:	7f400040 	svcvc	0x00400040
 8017d70:	38444428 	stmdacc	r4, {r3, r5, sl, lr}^
 8017d74:	44384000 	ldrtmi	r4, [r8], #-0
 8017d78:	00284444 	eoreq	r4, r8, r4, asr #8
 8017d7c:	44443840 	strbmi	r3, [r4], #-2112	; 0xfffff7c0
 8017d80:	40007f28 	andmi	r7, r0, r8, lsr #30
 8017d84:	54545438 	ldrbpl	r5, [r4], #-1080	; 0xfffffbc8
 8017d88:	00400018 	subeq	r0, r0, r8, lsl r0
 8017d8c:	02097e08 	andeq	r7, r9, #8, 28	; 0x80
 8017d90:	a4184000 	ldrge	r4, [r8], #-0
 8017d94:	00789ca4 	rsbseq	r9, r8, r4, lsr #25
 8017d98:	04087f40 	streq	r7, [r8], #-3904	; 0xfffff0c0
 8017d9c:	40007804 	andmi	r7, r0, r4, lsl #16
 8017da0:	407d4400 	rsbsmi	r4, sp, r0, lsl #8
 8017da4:	20400000 	subcs	r0, r0, r0
 8017da8:	003d4040 	eorseq	r4, sp, r0, asr #32
 8017dac:	107f4000 	rsbsne	r4, pc, r0
 8017db0:	00004428 	andeq	r4, r0, r8, lsr #8
 8017db4:	7f410040 	svcvc	0x00410040
 8017db8:	40000040 	andmi	r0, r0, r0, asr #32
 8017dbc:	0478047c 	ldrbteq	r0, [r8], #-1148	; 0xfffffb84
 8017dc0:	7c400078 	mcrrvc	0, 7, r0, r0, cr8
 8017dc4:	78040408 	stmdavc	r4, {r3, sl}
 8017dc8:	44384000 	ldrtmi	r4, [r8], #-0
 8017dcc:	00384444 	eorseq	r4, r8, r4, asr #8
 8017dd0:	2418fc40 	ldrcs	pc, [r8], #-3136	; 0xfffff3c0
 8017dd4:	40001824 	andmi	r1, r0, r4, lsr #16
 8017dd8:	18242418 	stmdane	r4!, {r3, r4, sl, sp}
 8017ddc:	7c4000fc 	mcrrvc	0, 15, r0, r0, cr12
 8017de0:	08040408 	stmdaeq	r4, {r3, sl}
 8017de4:	54484000 	strbpl	r4, [r8], #-0
 8017de8:	00245454 	eoreq	r5, r4, r4, asr r4
 8017dec:	3f040440 	svccc	0x00040440
 8017df0:	40002444 	andmi	r2, r0, r4, asr #8
 8017df4:	2040403c 	subcs	r4, r0, ip, lsr r0
 8017df8:	1c40007c 	mcrrne	0, 7, r0, r0, cr12
 8017dfc:	1c204020 	stcne	0, cr4, [r0], #-128	; 0xffffff80
 8017e00:	403c4000 	eorsmi	r4, ip, r0
 8017e04:	003c4030 	eorseq	r4, ip, r0, lsr r0
 8017e08:	10284440 	eorne	r4, r8, r0, asr #8
 8017e0c:	40004428 	andmi	r4, r0, r8, lsr #8
 8017e10:	9090904c 	addsls	r9, r0, ip, asr #32
 8017e14:	4440007c 	strbmi	r0, [r0], #-124	; 0xffffff84
 8017e18:	444c5464 	strbmi	r5, [ip], #-1124	; 0xfffffb9c
 8017e1c:	08004000 	stmdaeq	r0, {lr}
 8017e20:	00004136 	andeq	r4, r0, r6, lsr r1
 8017e24:	77000040 	strvc	r0, [r0, -r0, asr #32]
 8017e28:	40000000 	andmi	r0, r0, r0
 8017e2c:	08364100 	ldmdaeq	r6!, {r8, lr}
 8017e30:	02400000 	subeq	r0, r0, #0
 8017e34:	02040201 	andeq	r0, r4, #268435456	; 0x10000000
 8017e38:	263c4000 	ldrtcs	r4, [ip], -r0
 8017e3c:	003c2623 	eorseq	r2, ip, r3, lsr #12

08017e40 <oled_128x32_init>:
 8017e40:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 8017e44:	4000d31f 	andmi	sp, r0, pc, lsl r3
 8017e48:	0020148d 	eoreq	r1, r0, sp, lsl #9
 8017e4c:	02dac8a1 	sbcseq	ip, sl, #10551296	; 0xa10000
 8017e50:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 8017e54:	a6a440db 	ssatge	r4, #5, fp, asr #1

08017e58 <oled_128x64_init>:
 8017e58:	a880d5ae 	stmge	r0, {r1, r2, r3, r5, r7, r8, sl, ip, lr, pc}
 8017e5c:	4000d33f 	andmi	sp, r0, pc, lsr r3
 8017e60:	0020148d 	eoreq	r1, r0, sp, lsl #9
 8017e64:	12dac8a1 	sbcsne	ip, sl, #10551296	; 0xa10000
 8017e68:	f1d97f81 			; <UNDEFINED> instruction: 0xf1d97f81
 8017e6c:	a6a440db 	ssatge	r4, #5, fp, asr #1

08017e70 <vtable for Ssd1306>:
	...
 8017e78:	08012d85 	stmdaeq	r1, {r0, r2, r7, r8, sl, fp, sp}
 8017e7c:	08012db1 	stmdaeq	r1, {r0, r4, r5, r7, r8, sl, fp, sp}
 8017e80:	080130c9 	stmdaeq	r1, {r0, r3, r6, r7, ip, sp}
 8017e84:	0801304d 	stmdaeq	r1, {r0, r2, r3, r6, ip, sp}
 8017e88:	08012f19 	stmdaeq	r1, {r0, r3, r4, r8, r9, sl, fp, sp}
 8017e8c:	08012dd1 	stmdaeq	r1, {r0, r4, r6, r7, r8, sl, fp, sp}
 8017e90:	08012df9 	stmdaeq	r1, {r0, r3, r4, r5, r6, r7, r8, sl, fp, sp}
 8017e94:	08012eef 	stmdaeq	r1, {r0, r1, r2, r3, r5, r6, r7, r9, sl, fp, sp}
 8017e98:	08012ea9 	stmdaeq	r1, {r0, r3, r5, r7, r9, sl, fp, sp}
 8017e9c:	08012d87 	stmdaeq	r1, {r0, r1, r2, r7, r8, sl, fp, sp}
 8017ea0:	08012f55 	stmdaeq	r1, {r0, r2, r4, r6, r8, r9, sl, fp, sp}
 8017ea4:	08012f61 	stmdaeq	r1, {r0, r5, r6, r8, r9, sl, fp, sp}
 8017ea8:	08012f7b 	stmdaeq	r1, {r0, r1, r3, r4, r5, r6, r8, r9, sl, fp, sp}
 8017eac:	08012d89 	stmdaeq	r1, {r0, r3, r7, r8, sl, fp, sp}
 8017eb0:	30345b1b 	eorscc	r5, r4, fp, lsl fp
 8017eb4:	5b1b006d 	blpl	86d8070 <__exidx_end+0x6c00c4>
 8017eb8:	006d3033 	rsbeq	r3, sp, r3, lsr r0
 8017ebc:	31335b1b 	teqcc	r3, fp, lsl fp
 8017ec0:	5b1b006d 	blpl	86d807c <__exidx_end+0x6c00d0>
 8017ec4:	006d3233 	rsbeq	r3, sp, r3, lsr r2
 8017ec8:	33335b1b 	teqcc	r3, #27648	; 0x6c00
 8017ecc:	5b1b006d 	blpl	86d8088 <__exidx_end+0x6c00dc>
 8017ed0:	006d3933 	rsbeq	r3, sp, r3, lsr r9
 8017ed4:	2e25565b 	mcrcs	6, 1, r5, cr5, cr11, {2}
 8017ed8:	205d732a 	subscs	r7, sp, sl, lsr #6
 8017edc:	43207325 			; <UNDEFINED> instruction: 0x43207325
 8017ee0:	69706d6f 	ldmdbvs	r0!, {r0, r1, r2, r3, r5, r6, r8, sl, fp, sp, lr}^
 8017ee4:	2064656c 	rsbcs	r6, r4, ip, ror #10
 8017ee8:	25206e6f 	strcs	r6, [r0, #-3695]!	; 0xfffff191
 8017eec:	20732a2e 	rsbscs	r2, r3, lr, lsr #20
 8017ef0:	25207461 	strcs	r7, [r0, #-1121]!	; 0xfffffb9f
 8017ef4:	00732a2e 	rsbseq	r2, r3, lr, lsr #20
 8017ef8:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8017efc:	203a636f 	eorscs	r6, sl, pc, ror #6
 8017f00:	000a7525 	andeq	r7, sl, r5, lsr #10
 8017f04:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8017f08:	203a636f 	eorscs	r6, sl, pc, ror #6
 8017f0c:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
 8017f10:	62203e20 	eorvs	r3, r0, #32, 28	; 0x200
 8017f14:	6b636f6c 	blvs	98f3ccc <__exidx_end+0x18dbd20>
 8017f18:	6d696c5f 	stclvs	12, cr6, [r9, #-380]!	; 0xfffffe84
 8017f1c:	000a7469 	andeq	r7, sl, r9, ror #8
 8017f20:	6c6c616d 	stfvse	f6, [ip], #-436	; 0xfffffe4c
 8017f24:	203a636f 	eorscs	r6, sl, pc, ror #6
 8017f28:	6f6c4270 	svcvs	0x006c4270
 8017f2c:	65486b63 	strbvs	r6, [r8, #-2915]	; 0xfffff49d
 8017f30:	72656461 	rsbvc	r6, r5, #1627389952	; 0x61000000
 8017f34:	2c70253d 	cfldr64cs	mvdx2, [r0], #-244	; 0xffffff0c
 8017f38:	7a697320 	bvc	9a74bc0 <__exidx_end+0x1a5cc14>
 8017f3c:	64253d65 	strtvs	r3, [r5], #-3429	; 0xfffff29b
 8017f40:	6164202c 	cmnvs	r4, ip, lsr #32
 8017f44:	253d6174 	ldrcs	r6, [sp, #-372]!	; 0xfffffe8c
 8017f48:	66000a70 			; <UNDEFINED> instruction: 0x66000a70
 8017f4c:	3a656572 	bcc	997151c <__exidx_end+0x1959570>
 8017f50:	6c427020 	mcrrvs	0, 2, r7, r2, cr0
 8017f54:	486b636f 	stmdami	fp!, {r0, r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 8017f58:	65646165 	strbvs	r6, [r4, #-357]!	; 0xfffffe9b
 8017f5c:	203d2072 	eorscs	r2, sp, r2, ror r0
 8017f60:	202c7025 	eorcs	r7, ip, r5, lsr #32
 8017f64:	6f6c4270 	svcvs	0x006c4270
 8017f68:	3d206b63 	fstmdbxcc	r0!, {d6-d54}	;@ Deprecated
 8017f6c:	0a702520 	beq	9c213f4 <__exidx_end+0x1c09448>
 8017f70:	00000000 	andeq	r0, r0, r0

08017f74 <days_of_month>:
 8017f74:	0000001f 	andeq	r0, r0, pc, lsl r0
 8017f78:	0000001c 	andeq	r0, r0, ip, lsl r0
 8017f7c:	0000001f 	andeq	r0, r0, pc, lsl r0
 8017f80:	0000001e 	andeq	r0, r0, lr, lsl r0
 8017f84:	0000001f 	andeq	r0, r0, pc, lsl r0
 8017f88:	0000001e 	andeq	r0, r0, lr, lsl r0
 8017f8c:	0000001f 	andeq	r0, r0, pc, lsl r0
 8017f90:	0000001f 	andeq	r0, r0, pc, lsl r0
 8017f94:	0000001e 	andeq	r0, r0, lr, lsl r0
 8017f98:	0000001f 	andeq	r0, r0, pc, lsl r0
 8017f9c:	0000001e 	andeq	r0, r0, lr, lsl r0
 8017fa0:	0000001f 	andeq	r0, r0, pc, lsl r0

Disassembly of section .ARM:

08017fa4 <__exidx_start>:
 8017fa4:	7ffef628 	svcvc	0x00fef628
 8017fa8:	00000001 	andeq	r0, r0, r1

Disassembly of section .ARM.attributes:

08017fac <.ARM.attributes>:
 8017fac:	00002e41 	andeq	r2, r0, r1, asr #28
 8017fb0:	61656100 	cmnvs	r5, r0, lsl #2
 8017fb4:	01006962 	tsteq	r0, r2, ror #18
 8017fb8:	00000024 	andeq	r0, r0, r4, lsr #32
 8017fbc:	726f4305 	rsbvc	r4, pc, #335544320	; 0x14000000
 8017fc0:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
 8017fc4:	0600334d 	streq	r3, [r0], -sp, asr #6
 8017fc8:	094d070a 	stmdbeq	sp, {r1, r3, r8, r9, sl}^
 8017fcc:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
 8017fd0:	17011501 	strne	r1, [r1, -r1, lsl #10]
 8017fd4:	1a011803 	bne	805dfe8 <__exidx_end+0x4603c>
 8017fd8:	Address 0x0000000008017fd8 is out of bounds.


Disassembly of section .data:

20000000 <LLRPDevice::m_nHandleLLRP>:
20000000:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

20000004 <s_multicast_mac>:
20000004:	005e0001 	subseq	r0, lr, r1
20000008:	00000000 	andeq	r0, r0, r0

2000000c <MDNS::s_nHandle>:
2000000c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

20000010 <next_block>:
20000010:	2001d000 	andcs	sp, r1, r0

20000014 <s_block_bucket>:
20000014:	00000010 	andeq	r0, r0, r0, lsl r0
	...
20000024:	00000020 	andeq	r0, r0, r0, lsr #32
	...
20000034:	00000040 	andeq	r0, r0, r0, asr #32
	...
20000044:	00000060 	andeq	r0, r0, r0, rrx
	...
20000054:	00000080 	andeq	r0, r0, r0, lsl #1
	...
20000064:	00000100 	andeq	r0, r0, r0, lsl #2
	...
20000074:	00000140 	andeq	r0, r0, r0, asr #2
	...
20000084:	00000180 	andeq	r0, r0, r0, lsl #3
	...
20000094:	00000200 	andeq	r0, r0, r0, lsl #4
	...
200000a4:	00000300 	andeq	r0, r0, r0, lsl #6
	...
200000b4:	00000400 	andeq	r0, r0, r0, lsl #8
	...
200000c4:	00000500 	andeq	r0, r0, r0, lsl #10
	...

200000e4 <SystemCoreClock>:
200000e4:	07270e00 	streq	r0, [r7, -r0, lsl #28]!

Disassembly of section .bss:

200000e8 <outptr>:
200000e8:	00000000 	andeq	r0, r0, r0

200000ec <RemoteConfig::s_pUdpBuffer>:
200000ec:	00000000 	andeq	r0, r0, r0

200000f0 <RemoteConfig::s_RemoteConfigListBin>:
	...

20000114 <RemoteConfig::s_pThis>:
20000114:	00000000 	andeq	r0, r0, r0

20000118 <guard variable for lightset::Data::Get()::instance>:
20000118:	00000000 	andeq	r0, r0, r0

2000011c <lightset::Data::Get()::instance>:
	...

2000313c <E131Bridge::s_pThis>:
2000313c:	00000000 	andeq	r0, r0, r0

20003140 <s_ReceivingMask>:
20003140:	00000000 	andeq	r0, r0, r0

20003144 <LLRPDevice::s_nIpAddressFrom>:
20003144:	00000000 	andeq	r0, r0, r0

20003148 <LLRPDevice::m_nIpAddresLLRPRequest>:
20003148:	00000000 	andeq	r0, r0, r0

2000314c <LLRPDevice::m_nIpAddressLLRPResponse>:
2000314c:	00000000 	andeq	r0, r0, r0

20003150 <LLRPDevice::m_pLLRP>:
20003150:	00000000 	andeq	r0, r0, r0

20003154 <RDMNetDevice::s_RdmCommand>:
	...

20003253 <RDMNetDevice::s_Cid>:
	...

20003264 <RDMSensors::s_pThis>:
20003264:	00000000 	andeq	r0, r0, r0

20003268 <RDMSubDevices::s_pThis>:
20003268:	00000000 	andeq	r0, r0, r0

2000326c <RDMDeviceResponder::s_pThis>:
2000326c:	00000000 	andeq	r0, r0, r0

20003270 <RDMIdentify::m_bIsEnabled>:
	...

20003271 <RDMIdentify::m_nMode>:
20003271:	 	andeq	r0, r0, r0

20003274 <RDMIdentify::s_pThis>:
20003274:	00000000 	andeq	r0, r0, r0

20003278 <s_StopBuffer>:
	...

20003478 <PixelPatterns::m_PortConfig>:
	...

20003578 <PixelPatterns::m_nActivePorts>:
20003578:	00000000 	andeq	r0, r0, r0

2000357c <PixelPatterns::m_pScannerColours>:
2000357c:	00000000 	andeq	r0, r0, r0

20003580 <PixelPatterns::m_nCount>:
20003580:	00000000 	andeq	r0, r0, r0

20003584 <PixelPatterns::m_pOutput>:
20003584:	00000000 	andeq	r0, r0, r0

20003588 <PixelTestPattern::s_Pattern>:
20003588:	00000000 	andeq	r0, r0, r0

2000358c <sv_isRunning>:
2000358c:	00000000 	andeq	r0, r0, r0

20003590 <s_T0H>:
	...

2000ad90 <WS28xxMulti::s_pThis>:
2000ad90:	00000000 	andeq	r0, r0, r0

2000ad94 <SpiFlashStore::s_nWaitMillis>:
2000ad94:	00000000 	andeq	r0, r0, r0

2000ad98 <SpiFlashStore::s_SpiFlashData>:
	...

2000bd98 <SpiFlashStore::s_nStartAddress>:
2000bd98:	00000000 	andeq	r0, r0, r0

2000bd9c <SpiFlashStore::s_bHaveFlashChip>:
2000bd9c:	00000000 	andeq	r0, r0, r0

2000bda0 <SpiFlashStore::s_nSpiFlashStoreSize>:
2000bda0:	00000000 	andeq	r0, r0, r0

2000bda4 <SpiFlashStore::s_State>:
2000bda4:	00000000 	andeq	r0, r0, r0

2000bda8 <SpiFlashStore::s_pThis>:
2000bda8:	00000000 	andeq	r0, r0, r0

2000bdac <SpiFlashStore::s_bIsNew>:
2000bdac:	00000000 	andeq	r0, r0, r0

2000bdb0 <StoreDisplayUdf::s_pThis>:
2000bdb0:	00000000 	andeq	r0, r0, r0

2000bdb4 <StoreE131::s_pThis>:
2000bdb4:	00000000 	andeq	r0, r0, r0

2000bdb8 <StoreNetwork::s_pThis>:
2000bdb8:	00000000 	andeq	r0, r0, r0

2000bdbc <StoreRDMDevice::s_pThis>:
2000bdbc:	00000000 	andeq	r0, r0, r0

2000bdc0 <StoreRemoteConfig::s_pThis>:
2000bdc0:	00000000 	andeq	r0, r0, r0

2000bdc4 <StoreWS28xxDmx::s_pThis>:
2000bdc4:	00000000 	andeq	r0, r0, r0

2000bdc8 <FlashRom::s_pThis>:
2000bdc8:	00000000 	andeq	r0, r0, r0

2000bdcc <flashrom::s_nAddress>:
2000bdcc:	00000000 	andeq	r0, r0, r0

2000bdd0 <flashrom::s_State>:
2000bdd0:	00000000 	andeq	r0, r0, r0

2000bdd4 <flashrom::s_nPage>:
2000bdd4:	00000000 	andeq	r0, r0, r0

2000bdd8 <flashrom::s_pData>:
2000bdd8:	00000000 	andeq	r0, r0, r0

2000bddc <flashrom::s_isBank0>:
2000bddc:	00000000 	andeq	r0, r0, r0

2000bde0 <flashrom::s_nLength>:
2000bde0:	00000000 	andeq	r0, r0, r0

2000bde4 <g_ip_info>:
	...

2000bdf0 <g_mac_address>:
2000bdf0:	00000000 	andeq	r0, r0, r0
	...

2000bdf6 <s_is_dhcp>:
	...

2000bdf8 <s_p>:
2000bdf8:	00000000 	andeq	r0, r0, r0

2000bdfc <s_ticker>:
2000bdfc:	00000000 	andeq	r0, r0, r0

2000be00 <s_mac_address>:
	...

2000be08 <s_mac_address_arp_reply>:
2000be08:	00000000 	andeq	r0, r0, r0
	...

2000be0e <s_id>:
	...

2000be10 <s_recv_queue>:
	...

2000c980 <s_tcb>:
	...

2000c9c4 <s_tcp>:
	...

2000cfb0 <broadcast_mask>:
2000cfb0:	00000000 	andeq	r0, r0, r0

2000cfb4 <gw_ip>:
2000cfb4:	00000000 	andeq	r0, r0, r0

2000cfb8 <on_network_mask>:
2000cfb8:	00000000 	andeq	r0, r0, r0

2000cfbc <s_id>:
2000cfbc:	00000000 	andeq	r0, r0, r0

2000cfc0 <s_ports_allowed>:
	...

2000cfe0 <s_recv_queue>:
	...

20012c80 <s_send_packet>:
	...

2001326c <MDNS::s_nRemoteIp>:
2001326c:	00000000 	andeq	r0, r0, r0

20013270 <MDNS::s_nRemotePort>:
20013270:	00000000 	andeq	r0, r0, r0

20013274 <MDNS::s_nMulticastIp>:
20013274:	00000000 	andeq	r0, r0, r0

20013278 <MDNS::s_AnswerLocalIp>:
	...

2001347c <MDNS::s_ServiceRecords>:
	...

2001349c <MDNS::s_nBytesReceived>:
2001349c:	00000000 	andeq	r0, r0, r0

200134a0 <MDNS::s_ServiceRecordsData>:
	...

200136a4 <MDNS::s_pName>:
200136a4:	00000000 	andeq	r0, r0, r0

200136a8 <MDNS::s_pBuffer>:
200136a8:	00000000 	andeq	r0, r0, r0

200136ac <Network::s_pThis>:
200136ac:	00000000 	andeq	r0, r0, r0

200136b0 <NetworkParams::m_tNetworkParams>:
	...

20013710 <s_arp_announce>:
	...

2001373c <s_arp_reply>:
	...

20013768 <s_arp_request>:
	...

20013794 <s_arp_records>:
	...

20013914 <s_entry_current>:
20013914:	00000000 	andeq	r0, r0, r0

20013918 <s_dhcp_allocated_gw>:
20013918:	00000000 	andeq	r0, r0, r0

2001391c <s_dhcp_allocated_ip>:
2001391c:	00000000 	andeq	r0, r0, r0

20013920 <s_dhcp_allocated_netmask>:
20013920:	00000000 	andeq	r0, r0, r0

20013924 <s_dhcp_message>:
	...

20013b48 <s_dhcp_server_ip>:
20013b48:	00000000 	andeq	r0, r0, r0

20013b4c <s_groups>:
	...

20013c6c <s_id>:
20013c6c:	00000000 	andeq	r0, r0, r0

20013c70 <s_joins_allowed_index>:
20013c70:	00000000 	andeq	r0, r0, r0

20013c74 <s_leave>:
	...

20013ca4 <s_multicast_mac>:
	...

20013cac <s_report>:
	...

20013cdc <DisplayUdf::s_pThis>:
20013cdc:	00000000 	andeq	r0, r0, r0

20013ce0 <PropertiesConfig::s_Config>:
20013ce0:	00000000 	andeq	r0, r0, r0

20013ce4 <Display::s_pThis>:
20013ce4:	00000000 	andeq	r0, r0, r0

20013ce8 <_ClearBuffer>:
	...

20013d70 <Ssd1306::s_pThis>:
20013d70:	00000000 	andeq	r0, r0, r0

20013d74 <FirmwareVersion::s_FirmwareVersion>:
	...

20013d8a <FirmwareVersion::s_Print>:
	...

20013dcc <FirmwareVersion::s_pThis>:
20013dcc:	00000000 	andeq	r0, r0, r0

20013dd0 <LedBlink::s_pThis>:
20013dd0:	00000000 	andeq	r0, r0, r0

20013dd4 <Hardware::s_pThis>:
20013dd4:	00000000 	andeq	r0, r0, r0

20013dd8 <BitBanging595::s_nDataPrevious>:
20013dd8:	00000000 	andeq	r0, r0, r0

20013ddc <BitBanging595::s_nData>:
20013ddc:	00000000 	andeq	r0, r0, r0

20013de0 <BitBanging595::s_pThis>:
20013de0:	00000000 	andeq	r0, r0, r0

20013de4 <last.0>:
20013de4:	00000000 	andeq	r0, r0, r0

20013de8 <s_micros>:
	...

20013df0 <set_timer>:
20013df0:	00000000 	andeq	r0, r0, r0

20013df4 <s_nSysTickMillis>:
20013df4:	00000000 	andeq	r0, r0, r0

20013df8 <enet_init_status>:
20013df8:	00000000 	andeq	r0, r0, r0

20013dfc <s_nAddress>:
20013dfc:	00000000 	andeq	r0, r0, r0

20013e00 <dma_current_ptp_rxdesc>:
20013e00:	00000000 	andeq	r0, r0, r0

20013e04 <dma_current_ptp_txdesc>:
20013e04:	00000000 	andeq	r0, r0, r0

20013e08 <dma_current_rxdesc>:
20013e08:	00000000 	andeq	r0, r0, r0

20013e0c <dma_current_txdesc>:
20013e0c:	00000000 	andeq	r0, r0, r0

20013e10 <enet_initpara>:
	...

20013e4c <rx_buff>:
	...

200179d4 <rxdesc_tab>:
	...

20017a74 <tx_buff>:
	...

2001865c <txdesc_tab>:
	...

Disassembly of section .heap:

2001d000 <heap_low>:
	...

Disassembly of section .stack:

2001e000 <_sp-0x2000>:
	...
